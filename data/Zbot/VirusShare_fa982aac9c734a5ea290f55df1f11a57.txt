incl
add
hlt
add
mov
push
cmp
xchg
sbbl
loopne
add
push
add
or
fwait
and
pusha
push
push
or
mov
add
in
in
push
shlb
call
popa
xor
sub
mov
mov
jbe
mov
adc
cld
incl
call
fucomp
mov
cmp
and
push
and
jg
out
lret
xor
lret
iret
mov
adc
in
mov
fisttpll
sub
outsl
inc
mov
std
fidivrs
jo
inc
or
dec
mov
mov
monitorx
inc
inc
out
fldz
popf
cmp
mov
sub
mov
mov
xor
and
repz
push
in
add
test
fdivs
imul
add
outsb
pop
add
shlb
jns
and
xor
fmuls
jge
cmp
cmc
neg
xchg
negb
out
mov
outsl
add
inc
scas
pop
mul
jge
cmp
movsl
fcmovnu
fcompp
clc
test
xor
xor
clc
out
mov
adc
adc
push
into
lret
lock
inc
sub
lds
jnp
insl
adc
add
in
faddl
xor
iret
sub
jge
lret
cmp
add
pop
sub
xchg
push
xor
jno
jmp
in
push
test
mov
mov
or
dec
int3
aaa
dec
or
adc
in
daa
cmpb
nop
push
cmpsl
push
rolb
mov
push
push
mov
pop
jg
call
arpl
scas
hlt
arpl
pop
xchg
mov
fimuls
hlt
sbb
push
pusha
and
popf
inc
cmpsb
push
mov
lret
ror
ljmp
sub
jae
pushf
fmul
dec
loop
fs
xor
fcomps
call
stos
fsubrp
fldcw
sar
mov
std
mov
loopne
xchg
push
dec
incl
stos
aaa
outsl
cmpsb
je
stos
or
dec
add
adc
mov
lods
stos
mov
push
fdivs
ljmp
dec
cmp
ret
ds
cmpsl
mov
pop
ffreep
cmpsl
xchg
es
jl
xchg
sub
push
in
jmp
call
mov
cld
mov
sub
jecxz
arpl
jmp
or
fsubl
iret
mov
pop
jne
or
iret
pop
adc
push
jl
push
jns
push
mov
mov
cmp
call
mov
xor
cltd
movsb
out
incl
mov
xchg
xchg
mov
adc
icebp
mov
repz
inc
in
subb
mov
scas
jae
aaa
jae
pop
inc
out
mov
ret
xchg
scas
sub
sbb
negl
jo
sar
decl
sbb
inc
xor
mov
or
sbb
ljmpw
xchg
jmp
pop
inc
and
inc
int3
xchg
or
add
or
jp
adc
scas
jne
and
shll
jbe
xchg
repz
mov
gs
sub
xlat
ss
lcall
pop
push
out
repz
add
loop
and
das
sbb
mov
or
lea
mov
lcall
fisubrl
pusha
adc
mov
inc
mov
jb
mov
sbb
cmp
jg
push
xchg
out
inc
jmp
leave
imul
les
cwtl
leave
add
mov
pop
push
xor
mov
dec
xchg
daa
hlt
ficoml
lahf
mov
mov
fcoml
repnz
incl
loope
push
js
in
test
xchg
fisubl
cmpsl
push
pop
cmpsl
fiaddl
and
pop
cli
insl
jl
movsl
sbb
fstl
xchg
pop
les
sub
jne
jbe
dec
ja
lahf
arpl
lea
mov
and
inc
movsl
xchg
xchg
out
out
cmpsl
lcall
dec
xchg
jne
test
dec
stc
sbbl
sbb
sbb
xor
and
incl
lock
leave
dec
or
dec
cmpsb
cmp
test
leave
xor
in
inc
in
jg
xor
inc
inc
mov
insb
ret
filds
fwait
jne
jmp
test
outsb
in
movsb
in
xchg
and
jno
xchg
idivl
shlb
mov
push
mov
cmp
dec
ljmp
std
hlt
in
mov
scas
fstpt
fildll
add
or
ljmp
and
xchg
jb
push
push
adcb
inc
fildl
jmp
mov
sar
pop
retw
mov
into
add
fnstcw
inc
pop
mov
fidivl
ljmp
inc
add
dec
sub
and
movsb
mov
lahf
cmp
dec
in
jo
lcall
and
shrl
std
pop
mov
movsl
push
movsl
subl
lods
push
pusha
dec
push
call
mov
scas
iret
movsb
adc
push
std
stos
pop
sbb
xor
dec
jnp
lcall
sbb
pop
mov
xor
mov
xchg
cld
data16
push
cwtl
popa
pushl
call
dec
xchg
or
fs
sub
dec
lock
jmp
notb
pop
mov
pop
fsubrs
loopne
pusha
mov
lods
pop
xor
sarl
imul
fdivr
push
out
arpl
in
mov
sar
jo
mov
idivb
or
mov
mov
sar
pushl
dec
aam
lds
stos
daa
sub
xor
add
mov
sbb
pushf
xchg
es
arpl
out
ret
cmc
add
into
cltd
scas
mov
jmp
dec
out
cmc
dec
push
pop
frstor
add
lret
lea
cld
repnz
mov
into
scas
decl
pop
loop
pop
fistps
and
clc
inc
stos
shll
xor
jecxz,pn
inc
adc
pop
pop
adc
sbb
ffree
fistl
outsl
clc
lods
inc
pusha
stos
adc
std
and
pushl
cld
sub
das
pop
sub
aad
xchg
jmp
dec
pop
jmp
push
pop
int
decl
xchg
ret
gs
fwait
rcl
mov
xlat
fcmovu
insl
dec
push
jmp
orl
aaa
pop
dec
jle
xor
push
pop
cmp
mov
inc
or
jno
mov
loope
mov
jp
in
fsubs
ljmp
dec
xchg
pop
in
iret
sbb
mov
mov
pushf
sti
shl
call
mov
movsw
cmp
popa
jno
or
loope
mov
insl
mov
dec
jae
cmp
mov
mov
cmp
inc
xor
dec
pop
dec
fbstp
pop
iret
into
sbb
ret
in
pusha
imul
mov
and
das
inc
jbe
mov
sub
es
jmp
sbb
add
mov
or
jge
call
insb
lret
shll
push
mov
andl
cli
xor
pop
or
lcall
dec
mov
mov
ret
icebp
lret
jae
add
jmp
ja
or
movsb
jle
int3
lret
push
jg
lcall
add
stos
lds
call
fldl
pop
out
call
dec
negb
mov
cltd
jo
fnstsw
jle
cmp
xor
icebp
loop
dec
nopw
leave
mov
imul
or
mov
mov
mov
fsts
subl
cmc
aaa
push
int
pop
pop
dec
ljmp
mov
mov
mov
jns
xchg
imul
outsl
icebp
pop
pop
cli
lds
mov
stos
mov
cmp
pop
jecxz
push
movl
scas
mov
sbb
jl
dec
lods
mov
test
lret
cs
sahf
sbb
adc
in
cmp
add
pop
std
in
cmp
cmp
test
mov
rorl
lcall
and
push
push
xchg
out
jne
cmpsl
in
fcoms
xchg
faddl
jg
call
xchg
notl
idivb
lcall
clc
notl
stos
call
imul
push
sub
pop
andb
inc
test
sbb
adc
incl
jp
lods
jg
clc
mov
loopne
inc
jge
jl
xchg
jecxz
leave
dec
pushf
ja
push
xchg
ljmp
xor
xor
sbb
cs
dec
pushf
fwait
je
clc
pop
push
pop
cmpsl
int3
inc
jl
dec
cmpsb
jo
fnstenv
push
popa
pushf
xchg
fisubl
das
xchg
lods
and
aas
mov
jae
pop
xor
sub
test
ljmp
jmp
outsl
repz
jae
cmpb
in
or
xchg
negb
push
fcomip
popf
mov
sbb
lock
fsts
push
mov
outsl
mov
clc
mov
incl
jecxz
lret
ja
lock
fidivrl
sbb
int
fyl2x
push
jne
leave
inc
xchg
out
jg
jo
or
jno
shl
push
popf
into
mov
mov
xor
mov
out
incl
add
jb
fsts
inc
and
xor
mov
dec
push
or
cltd
push
jecxz
cmp
sbb
push
push
daa
in
lahf
outsb
mov
sahf
xchg
mov
inc
popa
xchg
jo
popa
push
shrb
int3
jle
pushl
nop
aad
test
or
mov
or
jp
or
call
mov
mov
add
mov
sbb
mov
cmp
pop
ljmp
xchg
xchg
sar
iret
xlat
jle
sub
cmp
stos
add
mov
ljmp
mov
mov
push
mov
cmc
andl
dec
clc
lcall
aam
pop
pop
xchg
mov
hlt
xchg
cltd
rcrl
pop
in
or
ljmp
movsl
addb
mov
lods
popa
push
inc
repz
mov
mov
call
sbb
dec
pop
cmp
loop
outsl
pop
sub
fidivrl
cli
outsb
lcall
incl
mov
aam
mov
dec
inc
inc
cmpsb
xor
mov
jecxz
icebp
add
insl
mov
sub
clc
mov
mov
icebp
cmpsb
jmp
pusha
lods
fimull
add
lods
fmulp
adc
sub
nop
ljmp
xchg
ja
pop
pop
sub
jae,pn
jne
cmp
stos
xchg
push
push
xor
addb
jmp
popa
in
sti
jp
xchg
jle
fldenv
lods
clc
js
call
cs
call
xor
sub
shrb
int3
rcll
iret
jmpw
push
in
or
incl
push
stc
mov
push
xchg
jg
xchg
inc
mov
add
repz
sar
decl
mov
adc
push
repnz
pushl
cmc
pop
mov
fbld
lret
or
ror
mov
mov
call
pushl
in
sub
pop
bound
popf
adc
ljmp
hlt
pop
sarl
pushl
mov
adc
adc
adc
push
pop
sbb
push
out
clc
jg
add
mov
jnp
clc
dec
int
cli
ja
push
adc
nop
out
inc
ljmp
clc
inc
sbb
js
adc
mov
mov
mov
ljmp
call
mov
out
cld
sbb
jecxz
in
jp
cmp
cld
aas
scas
pushf
shr
imul
in
or
fcmovnb
pop
pop
scas
inc
insl
xchg
lcall
stos
add
lcall
xchg
cmp
sbb
es
js
jl
push
sets
push
jno
pop
ljmp
sub
nop
inc
test
xor
daa
fcmovb
scas
mov
add
test
lret
sbb
subb
mov
sahf
jnp
sbb
push
xor
call
cld
jmp
sub
out
addl
sbb
fsubp
sub
dec
out
out
pushl
sub
notl
push
xchg
ds
xor
push
lods
mov
imul
lcall
testb
push
addl
cmpsl
loopne
and
add
out
xchg
push
mov
mov
pop
or
loop
push
lcall
jns
insb
pop
adc
cld
ret
inc
in
call
push
iret
ja
in
mov
xchg
mul
mov
fsubl
dec
jns
popf
leave
push
adc
push
dec
in
hlt
push
ja
sub
or
jne
out
sbb
lds
push
push
dec
mov
and
arpl
ret
and
inc
inc
dec
pop
cld
sarb
lds
xlat
lcall
pushf
mov
outsb
and
push
mov
shlb
inc
jbe
jg
and
insb
and
shl
int
out
or
xchg
adc
scas
push
and
and
incl
ja
sub
xchg
jno
inc
std
dec
pop
mov
pop
mov
ljmp
aad
sbb
sub
xor
mov
addr16
and
into
insl
aam
or
ret
daa
mov
sub
icebp
icebp
xlat
jl
sbb
popf
jp
cmp
add
sahf
scas
sti
into
jg
or
scas
mov
inc
push
repz
mov
and
mov
decl
mov
and
arpl
jle
repz
mov
adc
jne
push
outsb
loopne
call
mov
push
push
and
xchg
pop
jb
out
pusha
and
test
in
clc
cmc
jmp
fsubrl
ljmp
incb
fdivs
mov
mov
out
lods
fisubs
mov
pushl
nop
enter
xchg
daa
push
pop
je
ret
cmpb
repz
js
xor
decl
sub
dec
push
mov
hlt
cli
jg
pop
out
lods
sti
imul
jp
andb
push
lcall
sbb
out
shlb
mov
mov
mov
ficoms
sub
mov
out
mov
scas
clc
incl
je
push
ljmp
mov
in
adc
inc
inc
inc
mov
clc
inc
push
fdivrp
jo
push
jnp
stc
fs
lock
pusha
fdivs
sbb
imul
ret
and
out
jmp
xor
lds
ljmp
xchg
xor
shr
ja
popa
lock
push
into
adc
out
adc
mov
sub
mov
les
push
out
cwtl
and
pop
scas
cwtl
jne
cmp
mov
jl
les
lret
mov
push
mov
push
mov
repz
lret
sbb
sbb
mov
dec
stos
lret
pop
lcall
movsl
sub
ds
and
mulb
aaa
jnp
jo
dec
out
pop
xlat
dec
test
inc
add
xchg
mov
sbb
adc
nop
mov
call
movsl
sbb
jmp
pop
loope
testb
imul
xchg
ljmp
fcomip
push
mov
adcl
stos
adc
pop
or
das
and
scas
mov
std
lods
sub
and
iret
or
dec
ja
cmp
incl
cmp
mov
adc
repnz
lds
adc
fsubl
out
gs
mov
mov
inc
pop
sub
mull
cmp
sub
jmpw
mov
jne
cld
pop
mov
pop
adc
fstpt
stos
rcrb
mov
jl
xor
dec
loope
maxps
jnp
push
mov
jge
xor
push
push
push
decb
stos
rcr
adc
mov
and
pushl
hlt
stos
movsl
aas
mov
cmpsl
jb
daa
sub
int
push
ljmp
cmpl
sbbb
leave
pop
shlb
adc
lahf
pop
dec
stc
sub
mov
sub
int
arpl
pop
push
and
int
lcall
fisubl
pop
mov
in
repnz
jle
or
xor
cltd
sbb
lea
xchg
jmp
mov
push
or
push
neg
mov
ret
in
and
jae
adc
jl
por
pop
xchg
incl
hlt
and
inc
pop
jns
sbb
repnz
xchg
jg
aas
add
mov
pushl
cmp
loope
mov
jnp
leave
ja
orl
cmp
cmp
icebp
inc
rcrb
xchg
or
hlt
repz
in
jge
cmp
xlat
jb
call
fisubrl
outsb
jge
call
mov
test
mov
jmp
test
lock
or
imul
dec
das
mov
fcompl
and
jg
jmp
jb
imul
lock
cmp
add
sar
lcall
rcrl
mov
test
jae
jno
scas
xor
iret
subl
hlt
mov
jg
call
xlat
cmp
icebp
sub
in
mov
cmc
push
cmp
or
jmp
std
jmp
aaa
cli
std
pop
push
and
fisubrs
out
fistl
inc
pop
xor
decl
inc
repnz
jno
xchg
xchg
xchg
loopne
jns
dec
rorb
out
inc
adc
rcrb
push
test
adc
mov
lods
mov
pop
pusha
nop
pop
xor
into
pop
and
andl
pushl
jne
mov
popa
cmpsl
inc
inc
inc
test
dec
xchg
loopne
int
outsb
scas
xorl
popa
mov
pop
pop
cmc
call
rcrb
xor
lret
divl
jmp
fildll
push
sub
icebp
popa
fsubp
lods
inc
or
mov
xchg
ret
jmp
adc
push
sbb
out
sbb
loope
int
xlat
inc
fisttps
cmp
xchg
dec
in
cmp
xor
pop
pushf
arpl
ret
cmc
jl
cs
mov
push
mov
add
adc
aad
aas
lds
subl
jne
mov
xchg
ljmp
inc
popf
jo
outsb
cmp
sub
mov
xchg
push
sbb
cmp
cmp
xchg
inc
scas
subl
push
lods
jnp
fninit
jno
insb
xchg
sbb
cld
dec
and
notb
mov
jo
shlb
or
insb
in
xor
cmc
mov
enter
adc
jmp
push
cld
popa
push
inc
scas
filds
rclb
sub
pop
xchg
jne
sbb
test
je
or
sub
stc
in
jg
pusha
pop
xchg
testl
mov
adc
outsl
loop
incl
inc
lea
loopne
jmp
push
ret
clc
ffree
push
int
stc
movsb
fwait
cli
rorb
cmpsb
fistps
sbb
data16
cmp
out
scas
sbb
data16
pop
shrb
shr
movsl
xor
mov
and
jmp
loop
xor
sbb
mov
sub
inc
inc
mov
pop
inc
jo
jmp
sub
or
xlat
nop
shll
pop
repnz
push
or
cmp
adc
pushl
mov
jno
adc
adc
inc
mov
outsl
pop
jecxz
adcb
incl
aad
add
ljmp
pop
mov
ret
pushl
fcomps
xor
test
test
cmp
repz
test
clc
sbb
idiv
pop
andb
bound
in
aad
fs
ja
ljmp
mov
fldcw
cmc
and
cwtl
inc
sar
gs
das
mov
mov
xor
xchg
inc
sbb
mov
push
adc
cmp
incl
dec
cmpsl
data16
lock
arpl
cmp
es
pop
pop
nop
push
pushf
insb
add
ret
inc
push
pushf
xor
cmp
movsl
push
push
loopne
jb
cld
jecxz
jg
xchg
mov
xor
int3
je
arpl
push
xchg
add
dec
lods
js
mov
pop
pushl
popf
push
fdivr
movsl
into
or
mov
imul
xor
or
dec
and
push
adc
pusha
inc
mov
pop
sub
clc
dec
pop
sbb
or
mov
pushl
mov
dec
jne
push
xchg
aad
or
into
xchg
sbb
jp
subb
pusha
adc
ljmp
mov
or
stc
cmp
cmp
mov
ljmp
lock
mov
out
ret
pop
rclb
or
out
mov
jmp
jne
mov
orl
push
lahf
pushl
dec
ja
push
les
lcall
out
mov
push
arpl
adc
jg
jg
pusha
add
mov
sub
movsl
and
and
dec
adc
push
data16
jmp
ret
les
push
mov
movsl
mov
add
and
jle
out
xlat
cmp
call
adc
xor
mov
in
push
inc
filds
sbbb
sub
mov
lcall
pusha
jnp
mov
mov
inc
leave
adc
jnp
jecxz
jmp
mov
mov
add
xorl
addr16
adc
cltd
leave
outsl
xchg
jmp
sti
leave
jmp
adc
jp
mov
pushf
shlb
pop
adc
mov
jno
cmp
ret
into
xor
jbe
mov
rclb
decl
jae
jo
adc
faddl
fimull
jnp
xchg
mov
jmp
insl
adc
test
scas
adc
roll
dec
stos
fldenv
in
movsb
xchg
ljmp
cltd
add
mov
sbb
sub
jo
pusha
shll
lcall
push
pop
push
cmpsb
pop
je
jge
sub
xchg
out
test
pop
cmp
sbbl
incl
or
call
jmp
das
sbb
mov
mov
lock
push
mov
mov
test
cmpsb
mov
pop
mov
cld
mulb
cmp
lcall
xchg
lds
jb
lds
inc
dec
daa
les
loope
jmp
cmp
lock
jae
xchg
loop
mov
mov
lds
call
push
in
outsl
clc
jmp
push
shrb
jle
sbb
pop
popl
aas
adc
inc
mov
ljmp
dec
test
mov
aas
push
in
sub
jb
out
add
jg
jb
sahf
pop
std
cli
movsb
lock
mov
pusha
pusha
pop
mov
and
pop
xchg
lcall
daa
mov
cmp
and
imul
sub
jge
push
addr16
pop
jg
pop
call
mov
sti
cmpl
test
cmp
jp
repnz
add
test
mov
stos
adc
xchg
test
inc
add
je
cmpl
cmp
xor
ret
add
fidivrl
adc
lahf
pop
nop
cmp
add
repnz
popf
call
and
mov
inc
sbb
sbb
ret
bound
adc
add
mov
call
imul
shrl
inc
or
jno
incb
or
ss
xchg
decl
mov
test
and
fs
jl
ljmp
mov
lock
push
loope
addb
insb
out
ds
mov
lcall
and
ds
jmp
jmp
mov
call
fists
es
sbb
gs
out
outsb
jecxz
jle
jle
imul
cmpsl
fwait
ljmp
xchg
or
xchg
jg
adc
mov
not
xor
loop
xor
mov
mov
sti
mov
daa
mov
mov
cwtl
mov
lahf
mov
sub
cmpsb
outsl
clc
ljmp
push
sub
jne
inc
mov
cmp
mov
cld
call
adc
dec
xor
rol
mov
inc
mov
xchg
adc
out
push
loop
ja
cmp
in
inc
popf
jle
or
adc
pop
mov
hlt
xor
xchg
pop
or
clc
enter
push
and
sub
cli
inc
mov
sbb
push
in
pop
rclb
ljmp
es
rcll
pop
xor
data16
outsl
cmc
cmp
incl
xchg
mov
popa
push
popa
mov
stos
push
fsubrs
jecxz
or
fistpl
dec
ficompl
lcall
dec
adcl
dec
push
mov
xchg
pcmpeqb
lret
mov
stos
xor
in
pop
push
jp
gs
call
adc
lea
push
sahf
movl
lcall
and
adc
mov
push
sbb
xor
xchg
adc
out
pop
andl
in
sbb
xlat
icebp
cmc
and
imul
int3
mov
mov
push
dec
add
test
shrl
lcall
jg
push
xor
loop
jns
pop
arpl
xchg
cli
sahf
sarb
pop
jnp
mov
jg
jns
or
rcr
mov
sbb
bound
adc
inc
insl
mov
push
div
lret
sarl
sub
imul
xor
cmc
mov
scas
test
sbbl
jmp
mov
jbe
out
push
cmc
jns
ret
movsb
dec
push
xor
and
in
stos
xor
xor
mov
and
ljmp
pushf
cmpsl
jb
xchg
adc
scas
jge
insl
inc
cmp
jle
inc
mov
fwait
lret
punpcklwd
cmp
into
imul
add
cmpl
sbb
into
cwtl
inc
out
mov
je
test
mov
loop
out
jnp
pop
push
sbb
lcall
negb
pop
mov
lcall
mov
int3
jecxz
adc
in
jbe
push
iret
sahf
pop
inc
mov
adc
rcrb
call
rcll
subl
pop
cmp
aaa
fdivr
xor
mov
adcb
dec
call
adc
add
push
inc
stos
iret
push
mov
cmp
lret
xor
cmp
and
adc
loopne
js
mov
fiaddl
imul
jmp
pop
aam
adc
test
test
lods
fistl
bound
push
jo
jp
ljmp
inc
pop
stos
cmp
add
aam
cmp
add
sbb
idiv
jmp
sar
mov
jno
mov
pop
xchg
xor
repz
jne
mov
inc
outsl
jnp
lret
pusha
arpl
and
adc
stos
cmp
add
sti
call
frstor
call
adc
mov
adc
cs
ljmp
repz
add
test
sub
movsl
cmp
fsubrp
cmpsl
outsb
and
std
mov
leave
incl
push
push
shll
arpl
test
mov
cmp
out
sub
lock
inc
mov
outsl
ds
or
push
xchg
push
fsts
arpl
test
sti
pop
adc
xchg
pushf
xchg
jo
incl
xchg
data16
xor
fimuls
push
nop
stc
xchg
outsl
push
out
stc
add
shlb
push
sub
mov
leave
mov
fs
xchg
lods
addb
sti
or
mov
dec
aad
adc
add
jae
imulb
stc
popa
outsb
push
test
cwtl
adc
jmp
mov
xlat
xchg
ret
or
in
inc
insb
push
aad
addb
jmp
mov
cmp
xor
mov
fwait
gs
and
adc
xchg
repz
sarl
scas
repz
out
cmp
xor
clc
decl
daa
arpl
insl
loopne
jb
sbb
shll
cmp
ljmp
cld
and
adcl
push
push
fdivr
inc
icebp
pop
testb
ljmp
or
call
mov
out
cld
mov
mov
dec
fcomip
pushl
pusha
xchg
icebp
pop
lret
jnp
push
xchg
leave
pop
fdivs
and
jns
int3
sbb
fdivrs
loopne
in
dec
mov
jg
sub
test
jmp
jmp
mov
jnp
cmpsb
and
mov
outsb
jl
je
incl
dec
push
aas
add
jl
loope
add
xor
fdivrl
aaa
cld
repnz
shr
call
mov
push
fs
out
addr16
mov
mov
adc
inc
sbb
xor
std
call
jae
not
mov
dec
ffreep
mov
std
mov
fnstenv
push
dec
js
popf
je
xlat
pushf
mov
cmpsl
mov
ds
pop
xor
pop
xchg
jmp
and
xor
repnz
push
mov
scas
push
mov
insb
jp
mov
fcmovnbe
mov
cmp
xor
or
repz
stos
daa
repnz
pop
roll
cli
mov
idiv
lcall
add
int
ss
xchg
inc
xchg
aaa
inc
inc
pop
out
shrl
mov
pushl
mov
mov
push
scas
rol
push
mov
imul
xor
or
incl
in
inc
sarl
lods
xlat
jne
jle
mov
aam
test
in
and
jmp
inc
jge
xor
mov
jno
jns
stos
jp
popf
jl
sub
gs
jmp
xlat
mov
aam
add
mov
jb
push
pop
lcall
decl
dec
mov
pop
or
icebp
sub
add
ffree
inc
sub
icebp
incl
xchg
mov
cmp
ja
dec
ret
inc
mov
clc
decb
jmp
jg
pusha
jl
test
icebp
mov
daa
aam
sub
out
pop
stc
dec
mov
or
add
lcall
in
and
mov
cmpsb
adc
mov
call
jg
mov
sbb
xor
in
mov
jmp
lods
mov
jmp
stos
xor
push
aaa
sahf
push
xchg
push
jle
push
jb
push
xor
mov
and
ja
adc
add
add
jmp
fcoms
lods
aaa
mov
jg
pop
xlat
mull
jp
data16
inc
fimuls
jmp
lds
xor
jo
cmp
cli
lods
ss
xchg
push
jbe
adc
pushl
jns
mov
adc
out
mov
or
lods
into
sub
jg
loopne
out
lcall
lret
xchg
nop
pop
jo
mov
fwait
not
ficoms
inc
push
fisubs
fistpl
das
clc
push
push
sar
loop
mov
inc
test
mov
adc
mov
sbb
push
pop
lea
add
popa
insl
and
outsl
cli
call
stos
cs
mov
or
mov
sbb
jl
scas
cmp
inc
test
mov
or
inc
test
and
jmp
mov
jecxz,pt
mov
and
cmp
icebp
mov
mov
fidivrl
jae
cmpsl
xchg
fs
fidivl
mov
addl
or
data16
in
sub
push
inc
jle
clc
xchg
lret
pop
and
lds
mov
incl
inc
push
out
dec
daa
repz
in
jns
or
pop
outsb
mov
fstps
movsl
imul
call
jge
aas
xchg
gs
adc
test
outsl
scas
imul
call
mov
lock
add
dec
pop
mov
cmp
test
pop
jno
xchg
fwait
adc
sar
jmp
aaa
int
cli
imul
negl
arpl
ljmp
mov
dec
lcall
aaa
cmp
pop
push
pushf
xchg
sti
pop
int3
xchg
lock
sbb
sbb
xor
addl
mov
push
test
add
mov
sub
xchg
pop
jnp
mov
inc
and
lcall
out
xlat
stos
fsubrs
les
xchg
xorb
mov
aas
or
cmpsb
daa
sbb
mov
cltd
cmp
sbb
shlb
lcall
push
lcall
aas
in
bound
or
xchg
sbb
dec
rorb
sbb
mov
push
add
scas
inc
int3
pop
inc
push
arpl
pop
jg
mov
scas
adc
jmp
jmp
lcall
mov
push
inc
loope
stc
test
mov
call
shlb
and
jne
arpl
jb
add
mov
mov
xor
mov
jmp
xor
arpl
cli
dec
mov
jne
jmp
adc
bound
push
lods
xchg
or
test
incl
sarl
shll
jl
test
dec
sti
jo
add
incl
rclb
jne
push
push
ja
aam
lret
shll
sub
jns
mov
or
dec
popf
mov
mov
mov
cmp
inc
cmp
clc
push
push
mov
mov
mov
ss
outsl
mov
mov
dec
xchg
xlat
lahf
in
jecxz
mov
in
enter
mov
std
sub
out
inc
js
stos
push
imull
cmpsb
rcrl
mov
push
and
and
stos
fisubl
shl
sbb
push
int
out
cli
shl
sahf
fildl
or
vpmacssdd
dec
cmpsl
jno
pushf
daa
push
fbld
sets
not
push
ljmp
xchg
and
fwait
jbe
sbb
fxch
imul
and
adc
lock
dec
nop
push
adc
mov
mov
cmp
les
movsb
fcoms
lcall
pop
jo
lea
mov
lock
mov
mov
int3
insl
insb
push
clc
jmp
out
in
hlt
imul
cmp
into
cmp
imul
xchg
dec
add
add
mov
jae
push
enter
in
jmp
shrl
xlat
cmp
fbstp
xchg
cmp
xchg
cmpsl
mov
add
jb
inc
incl
popf
enter
out
pop
push
push
mov
movsl
push
bound
push
xchg
setb
aad
pushl
inc
xorl
scas
negl
outsl
adc
cmova
mov
outsl
pop
loopne
add
insl
xchg
inc
xchg
ss
cmc
cltd
adc
jmp
cli
out
adcb
push
push
jecxz
cmpsl
push
sarb
lock
int
mov
sbb
cmp
adc
test
lcall
pop
ss
and
in
mov
jbe
push
lahf
hlt
inc
mov
pushf
icebp
pushf
stos
shlb
scas
icebp
sti
mov
arpl
cmp
leave
cs
call
cmp
mov
scas
or
pop
and
or
mov
xchg
fisubrl
rcrb
inc
gs
mov
addl
adc
in
testb
push
decl
popa
lock
mov
dec
pop
mov
sbb
xor
cmpsb
incl
adc
jo
sbb
pop
movsl
xchg
ret
jns
popa
iret
icebp
push
jmp
mov
cs
push
fsub
stc
cli
das
pop
fwait
js
sahf
add
fstps
pop
and
je
add
jmp
fdivl
in
jmp
sbb
lret
mov
negl
pop
fbld
pop
cmpsl
jg
call
sbbb
xor
dec
loopne
ja
xchg
pop
cs
push
dec
jbe
aam
lcall
cmp
adc
mov
shlb
sub
sar
decl
scas
iret
or
and
or
imul
lea
pop
sbb
mov
jg
aad
inc
rolb
and
fcomps
push
or
sarb
repnz
adc
fbld
dec
mov
mov
mov
xchg
mov
dec
jge
adc
decl
sbb
addl
test
push
dec
or
loopne
fstl
hlt
call
enter
cmp
sub
mov
push
cmc
sub
pusha
out
dec
cld
decl
ficomps
xchg
loopne
push
sub
daa
shlb
mov
jge
fbld
mov
cmpsb
or
sub
pushl
and
rol
xchg
ds
inc
adc
push
lahf
add
cmp
add
loopne
cld
fnsave
loopne
pop
jno
pop
mov
repz
pop
das
fcompl
dec
and
mov
mov
push
adc
and
jb
jge
pop
fadds
scas
test
outsb
fcmovu
sbb
popa
lock
and
push
push
jp
jbe
jne
pop
loop
incl
xchg
inc
xlat
sub
or
inc
in
movsb
pop
jae
xor
jnp
sub
mov
push
cld
shlb
sub
cmp
add
adc
jns
jecxz
cld
inc
push
or
jmp
fwait
and
call
push
ror
mov
cld
mov
mov
in
imul
jl
int
or
add
and
push
jge
push
mov
mov
push
pop
hlt
mov
mov
sbb
outsb
add
lock
je
and
cmp
imul
in
ja
pop
bnd
addb
jg
mov
ds
add
cmp
call
mov
mov
fadd
fmuls
maxps
push
psrad
cs
jmp
ret
cmc
mov
mov
pop
dec
lods
bound
movsl
lcall
mov
notl
lcall
xlat
pop
push
int
sbb
jmp
add
mov
cs
mov
fwait
ljmp
je
push
jb
sar
cmpsl
das
rolb
push
or
mov
mov
add
cmp
shlb
jno
inc
adc
inc
bsf
mov
adc
movups
ds
or
jecxz
insl
or
jno
xlat
outsb
dec
cli
popa
ljmp
aas
jg
cmp
adc
sbb
call
pop
dec
jmp
popf
clc
adc
sbb
jbe
cli
jmp
outsl
sub
mov
dec
test
sahf
push
pop
xor
jno
cmp
out
mov
repnz
adc
xchg
push
iret
cs
je
cmp
lcall
std
sub
push
popf
in
dec
sti
shl
or
scas
sub
stos
add
ja
ja
mov
sub
mov
sbb
adc
pop
xchg
incb
jg
push
jns
lret
nop
xchg
dec
sahf
insb
stos
mov
mov
repnz
and
inc
mov
cld
aam
add
push
cmp
divb
adc
sub
sahf
cvtps2pd
add
cmp
in
pop
leave
pop
enter
je
leave
xchg
ljmp
mov
push
repz
jle
cmpb
and
jl
jecxz
sub
pop
or
pushl
jns
mov
add
add
stos
xor
mov
mov
sub
xchg
add
icebp
test
lcall
inc
jmp
lret
in
rcrl
push
mov
xor
bound
fdivr
jmp
adcl
out
pop
fldpi
xor
and
decl
sub
pop
scas
xchg
cld
mov
out
xchg
inc
or
cmp
in
pop
cli
jg
decl
adc
xor
mov
add
xchg
in
fistpl
pushl
cld
mov
vmread
push
pop
lret
adc
shlb
lea
push
mov
cmpsb
call
ss
sub
jp
mov
gs
cmp
inc
ret
dec
inc
jmp
ljmp
cmp
sub
xchg
imull
lret
sbbl
cwtl
fwait
leave
xlat
jbe
mov
aaa
sbbb
pop
xor
pop
fs
imul
pop
adc
outsb
out
lock
jle
fidivrl
mov
test
imul
cwtl
xor
mov
pushl
fidivrs
cli
mov
out
ljmp
pop
push
pop
push
stos
mov
fs
imul
inc
out
jb
data16
jl
or
arpl
clc
insl
add
and
ds
jge
jns
jo
lret
sub
jae
push
or
mov
mov
cltd
adc
decl
xchg
das
or
test
hlt
das
jbe
add
inc
jg
jns
js
testl
ja
xchg
inc
scas
stc
aam
lret
add
leave
ret
adc
mov
mov
ljmp
and
pop
jns
js
fdiv
dec
adc
mov
pop
mov
and
mov
lcall
cmp
jns
push
gs
push
mov
dec
xor
fisubl
or
jae
or
xchg
or
decl
or
ficompl
out
es
sbb
push
mov
jmp
popa
lods
sahf
jne
mov
adc
in
xchg
xlat
jl
mov
push
sub
sarb
mov
push
pushfw
movsl
ror
imul
and
push
xchg
dec
add
mov
pop
dec
and
mov
inc
fistpll
dec
pop
and
mov
jp
pop
cltd
add
ret
pushl
movsl
push
clc
add
pushf
decb
pop
imul
mov
mov
cmp
xor
movsl
sub
or
mov
dec
idiv
outsl
ljmp
jns
dec
pop
test
fdivr
in
js
jo
loope
mov
cmpsb
mov
jmp
scas
outsl
xor
and
push
xchg
sub
push
dec
popf
xchg
shll
jle
das
in
dec
or
and
sbbb
icebp
ds
ds
enter
mov
repz
decl
je
enter
out
xlat
mov
sub
rolb
mov
mov
cmp
out
jbe
pushl
lahf
mov
sbb
mov
lret
inc
push
rcl
ret
fbld
pop
jmp
call
std
call
jb
dec
aam
rcrl
cmp
test
jle
pop
add
mov
xlat
lcall
loop
add
push
fdivs
mov
cmpsb
ss
jg
lcall
insb
out
sub
jbe
cmpl
pop
mov
call
in
mov
aas
push
jle
pop
hlt
push
sar
or
sub
fnstenv
call
sahf
sbb
inc
mov
mov
fnop
pop
push
lods
pop
stos
add
mov
lcall
xor
insb
sarl
push
aas
popa
sbb
sub
sbb
xlat
or
pop
adc
out
jmp
mov
ja
pop
and
pop
jae
int3
or
ret
pop
jecxz
repnz
idivl
stos
fisttpll
ljmp
sub
flds
pop
xor
adc
addr16
stos
jne
xor
call
int3
inc
mov
adc
push
lds
out
jge
icebp
or
ljmp
ljmp
pop
cmp
or
pop
insb
mov
jmp
lahf
pushf
shrb
das
xor
incl
adc
into
sub
jbe
or
popf
jecxz
rcrl
push
mul
stos
sti
or
pushl
cld
or
outsb
fisttpl
rcll
psubsw
aas
push
jp
and
xchg
in
mov
call
pop
sub
test
push
into
outsb
jle
mov
pop
mov
je
sub
clc
repnz
dec
int3
add
push
pop
hlt
lcall
sbb
lea
shlb
dec
out
outsl
cmp
scas
push
mov
push
sar
imul
pop
xchg
lock
sub
adc
mov
pop
call
outsl
adc
jbe
jnp
push
jmp
sub
jae
rorl
call
loope
ret
mov
insb
repnz
test
faddl
ja
push
jl
in
loopne
inc
decl
adc
sub
xchg
out
sub
pop
ljmp
fisubrs
aam
inc
pushl
pop
pusha
mov
jmp
mov
psubd
or
out
cli
sub
mov
scas
and
xchg
push
les
cmpsl
dec
andb
call
ja
cmp
gs
stos
or
mov
xchg
ja
sbb
loope
std
sub
les
xor
sbb
clc
mov
hlt
mov
rol
ret
mov
shrl
sbb
aas
hlt
movsl
mov
adc
cmp
std
fisttpl
xor
push
cwtl
mov
incl
int
pop
outsl
nop
ljmp
ss
sbb
jae
jmp
test
adc
add
sub
imul
testb
add
xor
mov
movsl
addr16
rcll
enter
pop
les
jb
dec
fcoml
aas
mov
je
loop
dec
call
stos
dec
das
xchg
or
scas
leave
adc
stos
xchg
cmp
ljmp
jp
xchg
imull
lcall
cmp
mov
mov
push
jle
or
icebp
and
pop
movsl
xchg
in
mov
add
cmp
mov
add
lret
ljmp
call
jge
add
loopne,pn
xor
loopne
dec
push
icebp
lods
jno
push
xchg
iret
or
std
decl
out
mov
push
inc
ss
stos
andl
adc
cltd
push
dec
fiaddl
add
imul
jb,pt
xchg
sbb
push
pop
lret
jl
mov
mov
xor
xor
inc
int3
shrb
xchg
fs
mov
mov
incl
loop
and
mov
js
icebp
push
in
pop
xor
cld
adc
in
pop
xchg
movsl
pushl
xchg
jns
xchg
jge
in
ja
dec
mov
daa
imul
mov
mov
cmp
lcall
cmp
mov
or
lock
mov
pop
icebp
int
add
rclb
repnz
imul
adc
ljmp
xor
call
movsl
ret
xor
adc
ja
fdivl
jmp
sbb
int
imul
cmp
pop
pop
lahf
jbe
loop
in
xor
mov
xchg
sub
inc
inc
xlat
addr16
lcall
push
out
out
sub
scas
mov
mov
call
cmpsb
xor
dec
jmp
leave
push
decl
fidivrs
sub
mov
out
adc
xchg
fimuls
and
push
loop
jmp
bound
aam
sbb
cs
sbb
or
push
popa
popf
xchg
mov
jmp
call
lods
stc
scas
sbb
lods
jno
fs
jb
push
push
pushf
jbe
jb
ret
jmp
dec
xchg
iret
fs
xor
and
mov
jle
iret
sub
add
adc
inc
in
pushl
lods
mov
cmp
in
roll
jnp
clc
neg
pop
sbb
pushf
xlat
jecxz
popl
jmp
jge
lret
jg
ficoms
dec
mov
icebp
out
jae
fbld
lea
stos
cmpsb
pop
in
dec
dec
adc
movsb
jns
or
push
mov
imul
fs
decl
jae
scas
in
dec
fstl
sbb
lcall
pop
xor
mov
gs
fwait
decl
jbe
sub
in
insl
jmp
adc
clc
into
lods
fwait
push
fstpl
jne
incl
pusha
loop
xchg
push
mov
and
pop
and
mov
push
stos
sub
add
in
faddl
push
rcrb
mov
and
aam
sub
das
pop
imul
mov
cmp
cmc
or
stc
mov
les
scas
pop
push
dec
rorl
lcall
lahf
cmc
popf
push
jmp
aas
or
lock
add
ss
push
inc
or
cmpsb
incl
sub
imul
daa
fsubl
mov
ss
mov
out
fists
icebp
mov
mov
inc
rcl
xor
mov
adc
decl
push
fbstp
add
pop
sub
fs
xchg
or
in
add
push
decl
sub
jmp
jle
push
xor
iret
sbb
sbb
xchg
inc
push
scas
mov
ljmp
insb
adcb
stc
fildl
mov
pop
stos
lcall
xchg
xor
mov
loopne
push
sarb
inc
or
jbe
push
test
push
mov
mov
add
test
cmp
fdivrl
rorb
test
sbb
push
xor
notb
movsl
rclb
xor
loop
pop
rcrb
nop
dec
scas
jmp
aam
lds
pop
push
pushf
fldcw
test
push
repz
jo
and
or
pop
xor
jle
lret
jp
dec
pop
arpl
sbb
mov
fcoms
dec
adc
xor
in
mov
pop
lret
and
pushl
xor
mov
or
sub
push
test
sti
mov
ret
jmp
ret
outsl
mov
pop
or
int3
push
sub
lahf
adc
add
call
adc
inc
inc
aam
sbb
push
out
test
in
faddl
daa
sub
scas
sub
outsl
clc
incl
je
sub
inc
dec
repz
mov
jne
dec
jne
cmp
dec
mov
lods
fildl
xchg
cwtl
sbb
inc
iret
lods
push
out
and
jp
clc
incl
xchg
mov
pop
or
aaa
ret
dec
jb
in
cmp
decl
loop
sti
mov
loopne
push
mov
cmpsl
arpl
loope
and
push
enter
incl
xor
cli
and
mov
rclb
dec
and
sbb
mov
lods
push
pop
test
scas
movsl
jecxz
pushf
mov
ds
andb
negb
jbe
ds
test
xchg
xchg
int3
movsb
or
and
sbb
aaa
mov
sub
jge
xchg
jnp
ret
fsubrl
jmp
mov
iret
jns
cmp
inc
lcall
jmp
jne
testb
divb
stc
sbb
sub
sahf
lods
mov
dec
jmp
xchg
inc
cmp
roll
ficompl
dec
add
divl
sub
xchg
sbb
mov
sub
jno
pop
movsl
or
mov
push
sbb
dec
popf
and
cmpsl
pop
cmc
out
cmp
jle
inc
stos
imul
jl
cld
sbb
pushf
push
push
out
test
lcall
xchg
rorl
repz
fs
inc
fsubl
fidivs
fwait
lahf
mov
cli
push
inc
loopne
sub
mov
enter
enter
or
or
repz
shll
ljmp
sbb
sub
pop
jo
outsb
fsubrl
in
hlt
push
push
jl
mov
lea
xor
bnd
sub
adc
in
iret
mov
or
inc
xchg
jo
inc
sub
or
mov
fadd
dec
mov
mov
xchg
rorl
call
jmp
fisttpll
dec
or
adc
pop
mov
add
pop
mov
lcall
mov
push
sti
out
fsts
stos
inc
add
shl
inc
daa
pushf
sub
inc
fbstp
lret
clc
push
shlb
lret
xor
jmp
enter
ljmp
out
pusha
in
lods
shlb
inc
out
cmp
sahf
cmp
mov
outsb
xchg
aad
cmp
jmp
ret
cmpsb
or
lahf
stos
push
shrb
shlb
call
sub
fldt
mov
xchg
jge
xchg
insb
das
aad
stos
mov
inc
jmp
ret
push
jmp
pop
mov
cld
enter
xor
push
push
cmp
push
lahf
test
mov
jnp
int3
loopne
mov
ljmp
mov
cltd
inc
dec
das
push
sub
stos
daa
and
gs
test
outsl
cli
call
push
fcomps
sbbl
push
sbb
mov
push
mov
jmp
loope
sti
call
mov
sahf
mov
add
negb
adc
jmp
cmp
test
cmp
or
jl
scas
shrl
pushf
shrb
fists
push
incl
sbb
adc
mov
cltd
in
mov
daa
sqrtps
into
sar
jmp
into
incl
arpl
and
mov
pop
cmc
jno
repz
mov
dec
dec
adc
lock
or
jp
pop
xorb
scas
iret
in
xor
xchg
daa
jmp
fwait
xbeginw
pushf
jno
cltd
xor
in
popa
loope
aaa
pop
mov
imul
pushl
adc
adc
sbb
push
cmp
pop
push
aam
cmc
or
ljmp
test
xchg
movsb
xorb
sbb
pop
repnz
lea
std
xor
jmp
std
stos
stos
pop
aad
xchg
pop
push
outsb
ret
sub
xor
sbb
inc
sub
sbbl
incl
scas
movsb
jbe
cli
sub
adc
cmp
aad
inc
or
or
js
sbb
mov
andl
or
popa
js
mov
lock
call
xlat
bound
adc
cmp
xor
mov
lock
bound
je
stos
mov
daa
pop
jnp
sbb
negb
mov
push
dec
inc
mov
stc
cmp
cwtl
inc
iretw
mov
push
cmp
xchg
sti
lcall
jmp
inc
pushf
sbb
addr16
mov
xorb
outsl
arpl
inc
jp
push
lds
add
sub
fcomp
leave
imul
dec
aaa
clc
repnz
ljmp
adc
lds
sbb
push
pop
nop
pop
add
jb
mov
lret
add
cmpb
pushl
jno
je
and
ss
sti
sahf
cmc
jl
shll
pop
and
lds
push
call
and
addr16
mov
imul
aad
loopne
or
shll
mov
sarb
das
cli
ljmp
jns
xchg
push
pop
xor
mov
sbb
test
or
adc
jmp
sub
xor
movsl
jmp
cmp
jle
ret
mov
mov
mov
loop
push
xchg
sti
pushf
xchg
imul
cmovne
out
addr16
sub
mov
pushl
xor
mov
dec
popa
iret
pop
fs
inc
out
repnz
adc
xchg
sub
and
dec
js
and
sti
imul
loope
stos
sub
ja
shl
faddl
leave
add
jp
sbb
mov
addr16
xor
lahf
jmp
jg
int
or
xchg
xlat
pop
pop
push
add
sahf
xchg
fwait
arpl
repnz
pop
cmp
call
mov
pop
mov
mov
rolb
and
jmp
jnp
addr16
dec
test
sbb
cmpsb
out
xchg
jb
xor
adc
push
iret
cmp
ljmp
sub
ds
xor
mov
rolb
int3
jmp
xchg
sub
cmp
call
lea
insl
test
mov
lahf
adc
or
in
ja
push
xchg
fstps
ljmp
xor
lock
gs
pop
lret
push
jns
ljmp
inc
adc
test
sub
mov
push
xchg
sahf
pop
lock
test
call
je
test
pop
shl
shrb
addb
cli
push
and
ret
jmp
loope
xchg
cmp
jl
push
loopne
rcrb
ret
dec
mov
lea
sub
in
int
adc
fdivrl
cmpsb
inc
stc
add
ljmp
pop
xchg
sub
pop
ds
xor
aam
sbb
loope
push
pop
pop
sbb
or
idiv
call
cld
out
movsb
jb
ficoml
scas
dec
mov
mov
jmp
mov
jle
enter
cmp
ficomps
mov
and
into
add
mov
push
and
inc
mov
imul
or
adc
push
hlt
pop
mov
mov
mov
mov
dec
orl
jecxz
sbb
std
cld
arpl
push
xor
incl
xchg
pop
mov
cltd
test
cld
fsubrl
dec
xor
rcrb
jo
lcall
ds
pop
and
in
xchg
jg
iret
bound
xor
call
xchg
pusha
clc
test
adc
std
and
mov
xor
pop
lods
loopne
insl
mov
push
push
out
in
mov
xchg
mov
sbb
jl
sti
in
sahf
mov
dec
adc
jmp
or
mov
test
addr16
mov
fwait
pop
icebp
push
mov
movsl
inc
rolb
pushl
rcll
mov
add
cmp
lods
ret
insb
int3
inc
or
mov
lods
dec
mov
call
mov
enter
out
add
enter
outsl
stos
add
mov
cli
push
divb
sub
xchg
gs
fisubrl
sub
imul
xor
jecxz
pushl
jge
xchg
in
lds
xor
arpl
push
pusha
int
rcrb
inc
mov
sahf
roll
mov
dec
and
outsl
cmc
mov
hlt
cmpsl
adc
jns
inc
mov
pop
rcll
fcomps
daa
xchg
inc
mov
dec
pop
aas
jnp
sbbl
mov
mov
add
decb
incl
rcrb
roll
push
adcb
jp
cmpsb
add
ret
sub
and
nop
xor
and
dec
jge
popf
mov
mov
insb
or
lret
loope
cmp
js
cmpsb
push
pop
repz
loopne
ljmp
pop
das
push
mov
cmpsb
lods
fwait
bound
sbb
xchg
adc
add
lods
es
lahf
out
pushl
jbe
pop
loop
repnz
idivb
imul
repnz
repz
xlat
arpl
mov
data16
jmp
mov
mulb
fldenv
repz
incl
inc
cmp
cmpsb
adcb
sti
sbb
pop
pop
jnp
xor
mov
mov
or
cmpsl
repz
insb
push
mov
mov
pop
in
cmp
ljmp
push
cmc
nop
lcall
ljmp
push
aad
cmpsl
aad
sbb
cli
aaa
je
sbb
sub
jb
mov
pushl
mov
push
cltd
xchg
popf
mov
jne
push
sti
mov
rol
sub
fadds
dec
xchg
scas
dec
out
cmp
lcall
stos
lcall
shlb
fidivrs
daa
mov
mov
pop
mov
mov
mov
mov
lahf
push
dec
pushl
loop
push
pusha
int
add
arpl
dec
add
ficompl
in
mov
pushl
stos
rcrb
pop
lret
or
dec
sarl
movl
lcall
mov
inc
push
mov
jns
fcmovbe
mov
out
fistps
lcall
jmp
pushf
sub
mov
add
jnp,pt
sbb
stos
fwait
andb
xor
ljmp
lock
pop
push
sub
aam
mov
lods
lahf
outsb
push
mov
ja
ljmp
sbb
lea
andb
jle
mov
pop
xor
decl
rdmsr
arpl
sti
enter
xchg
sbb
mov
xchg
call
adc
fisubl
nop
or
sbb
sahf
arpl
push
push
mov
ss
out
bound
mov
das
fsts
lahf
icebp
popf
mov
xor
lods
mov
cmp
jmp
aas
pop
sub
arpl
fwait
leave
test
scas
mov
in
lods
dec
call
stc
push
dec
xchg
idiv
add
mov
jae
aas
pop
cmp
pushf
stc
das
mov
adc
jo
xchg
sub
xchg
pop
sub
sbb
mov
andb
add
enter
stc
inc
mov
sbb
jns
ret
mov
iret
nop
inc
incl
cld
jmp
add
and
mov
add
loope
ret
in
aad
cli
incl
cmpsb
pop
cwtl
mov
shll
xchg
in
xor
lock
incl
sarb
xchg
or
add
int
out
cmp
aad
pop
inc
jmp
push
in
movsl
push
push
rorl
mov
adc
add
clc
jp
jnp
repnz
or
call
sti
inc
mov
or
cli
or
ficompl
sub
lcall
xchg
es
jae
mov
leave
stos
xchg
cmp
or
arpl
in
in
fcomip
fcoms
and
sub
out
pop
ds
xchg
cmpsl
in
call
cld
aam
add
lahf
sahf
fadds
jbe
mov
setb
jmp
out
les
pop
xchg
add
mov
inc
mov
inc
xlat
inc
icebp
cs
test
cmp
inc
cltd
jmp
call
mov
ficoms
adc
xchg
sti
aad
roll
jge
mov
mov
cmp
clc
cmp
int3
lahf
xchg
pop
push
push
lods
pusha
sub
imul
dec
and
scas
sbb
mov
stos
loopne
mov
in
pop
fldcw
pop
lahf
or
mov
sti
jge
jne
dec
hlt
adc
mov
stc
cmc
aaa
push
jo
pcmpeqd
std
cs
dec
xor
jae
lahf
test
lds
push
ja
pushl
sbb
dec
subl
sbb
cli
mov
or
decl
sbb
ret
push
popa
ja
lods
pop
add
mov
insl
cmp
xchg
ds
push
xor
mov
jle
adc
sahf
adc
mov
rcrl
dec
jl
insl
aas
xor
mov
movsb
lretw
lahf
movsb
mov
jne
sbb
dec
lret
fsubl
push
ud0
ljmp
add
dec
mov
mov
lahf
std
dec
adc
push
add
jne
in
pop
rolb
xor
in
fisubs
mov
lcall
loopne
xlat
mov
cmc
add
and
into
sub
out
decl
fisubrs
aaa
jb
out
sahf
scas
mov
cmp
mov
xchg
cmp
or
pushl
add
adc
push
andl
or
mov
lcall
lahf
jns
sbb
testl
dec
in
test
lret
cltd
or
cmc
out
xlat
popf
jl
lcall
loope
add
push
xchg
fadds
rolb
je
mov
clc
pushl
mov
int3
pop
fsubrl
push
arpl
movsb
xchg
into
inc
cli
xchg
sbb
mov
cmp
aam
push
mov
pusha
shlb
sahf
test
xchg
fistpl
fnstenv
cmp
cmc
add
pop
iret
fisttpl
repz
outsb
xorb
mov
data16
inc
pop
cmp
sbb
inc
or
and
cli
xchg
pop
ljmp
add
arpl
cmpxchg
outsb
lahf
cmp
push
das
pop
lock
mov
mov
testb
push
cmp
jbe
loop
das
xor
jp
push
insb
outsl
and
sbb
nop
ljmp
mov
insl
ds
and
shll
sbb
xchg
cli
ljmp
pop
pop
mov
and
cmovle
in
inc
xchg
cmpsl
movsl
fs
push
out
in
in
xchg
jb
xchg
fcompl
xchg
add
dec
dec
lods
daa
jae
dec
ljmp
sub
inc
fwait
push
mov
cmc
adc
call
loopne
pop
test
cmpsl
cmc
cmp
lods
ret
mov
cmp
jl
push
xchg
mov
pop
stos
mov
jne
push
xchg
dec
sbb
inc
pop
and
push
inc
cs
incl
cmp
les
mov
jge
xlat
js
mov
push
loop
loopne
and
addb
ljmp
inc
pop
push
imul
xchg
out
inc
ja
xor
adc
out
cld
decl
out
pop
stc
cli
pop
cmp
daa
jmp
sbb
push
or
cmp
mov
mov
lahf
and
pop
test
decl
push
jnp
mov
or
xchg
movsl
sub
rorl
pushl
enter
or
cli
nop
pushf
int
jle
dec
ret
test
aam
mov
sti
movsb
sub
xchg
frstor
or
stos
or
addl
call
cmp
test
push
mov
push
into
cmpb
xchg
xchg
and
push
scas
mov
addr16
imul
shll
out
clc
hlt
leave
jmp
cmp
fdivr
dec
outsb
aad
in
or
imull
stos
fxch
jns
pop
jge
mov
dec
dec
lods
arpl
decl
sub
repnz
dec
test
mov
outsl
sahf
addr16
stos
mov
loop
sbb
clc
call
and
outsb
and
xor
jbe
setp
cs
arpl
sbb
call
push
in
mov
ljmp
mov
in
dec
movsb
stc
aad
dec
testb
mov
js
fld
cmpsb
mov
xor
mov
call
or
rorb
mov
push
and
call
xor
dec
sbb
sbb
pop
push
sarb
sbbl
jmp
pushl
fwait
adc
cmp
mov
cli
mov
scas
hlt
lcall
xchg
ljmp
sbb
mov
mov
mov
dec
or
add
out
mov
jne
jbe
sub
out
cmc
into
pop
sti
push
std
inc
setne
cmp
mov
pop
loop
mov
idiv
mov
jle
ret
test
sbbb
loop
xchg
adc
incl
cmc
out
ljmp
pushf
mov
insb
lret
es
sub
sub
pop
mov
mov
shr
and
mov
adc
movsb
push
orb
or
push
das
push
stc
lahf
sub
dec
mov
cmp
ljmp
rcl
in
inc
decl
ds
xchg
cmpsl
stc
push
movsb
add
sbb
rcrb
cmc
aam
pop
cmpsl
cmp
pop
xchg
cmp
lods
and
mov
sar
les
adc
push
push
dec
movsb
sub
dec
ds
jmp
fiaddl
push
mov
ja
push
push
adc
aad
mov
xchg
enter
cmpsb
call
cld
test
test
jo
mov
fmuls
mov
cmp
ljmp
xchg
fdivl
cld
out
je
test
movsl
xor
outsl
pushl
xor
sbb
cmp
ror
adc
push
push
adc
xchg
lahf
fadd
incl
sti
mov
mov
mov
jmp
push
loop
ret
lcall
clc
call
xor
lea
and
pop
mov
loopne
call
rorl
adc
fcmove
cmpsb
xchg
cwtl
jg
adc
fsts
call
push
lea
or
dec
dec
pop
pop
adc
cmp
out
adc
push
xorb
decl
adc
pop
lret
bound
xchg
or
insb
stos
iret
insb
pushl
test
cwtl
and
jmp
sub
xchg
mov
in
xlat
pushf
fcomip
call
idivb
pusha
aaa
adc
dec
ret
jmp
and
push
push
cmc
ljmp
notb
and
xor
jo
insb
repz
and
inc
mov
mov
mov
cmp
pop
pop
test
js
xchg
std
jmp
lret
data16
les
push
push
xchg
pop
dec
xchg
pop
dec
aaa
insb
fdivr
insb
hlt
sar
call
loopne
cmp
arpl
jne
xchg
mov
push
jge
mov
xor
data16
ljmp
pop
rcl
or
xor
push
jmp
mov
decl
xor
into
fisubrs
sub
pop
mov
decl
mov
stos
std
sbb
sub
rolb
jmp
shll
sar
cld
mov
in
xchg
vorps
mov
jmp
cli
sbb
mov
lea
lahf
clc
jge
push
or
and
or
jbe
inc
mov
scas
push
fcomip
ret
add
mov
jo
pop
inc
xor
inc
insb
mov
mov
jno
lcall
mov
xchg
sub
cs
ss
ja
test
popa
add
repnz
insb
out
or
inc
ret
jle
mov
inc
add
sahf
repz
sub
fwait
sbb
aaa
or
cli
imul
cli
fsubl
dec
adc
rorl
push
xchg
jns
ljmp
mov
mov
jae
push
sbb
push
repz
decl
cltd
add
cmp
mov
loopne
lods
xor
fldt
pop
dec
jg
ljmp
stos
repnz
ss
pushf
dec
xchg
lcall
icebp
decl
gs
jp
mov
mov
in
adc
mov
pop
cmp
incl
repnz
adc
sub
cli
ds
into
mov
imul
dec
xor
std
int3
mov
ds
xor
mov
inc
jnp
call
lret
lcall
inc
mov
jmp
movl
ret
mov
mov
pop
pop
dec
fisubs
mov
shll
mov
jg
into
mov
imul
or
decl
pop
fwait
mov
enter
aam
or
ds
lods
jne
in
jae
es
ljmp
xor
sbb
push
inc
pop
cmc
sub
or
repnz
divl
ljmp
daa
icebp
dec
dec
sbb
in
sbbl
inc
jbe
icebp
sti
ret
jg
jbe
inc
ljmp
or
dec
lock
mov
or
or
jp
lods
scas
call
outsb
test
push
pop
sbbl
sub
lcall
push
jmp
shl
push
mov
cmp
ja
dec
movsb
mov
sub
mov
hlt
inc
jno
addl
int
repz
sub
adc
imul
insb
aad
loopne
push
cltd
push
test
push
test
add
cld
xchg
lcall
lcall
add
push
xchg
adc
loop
int3
data16
mov
int3
pop
xor
cmp
mov
xchg
mov
popa
imul
or
adc
adc
jl
mov
pushl
xchg
adc
cmp
pop
movsl
repnz
pop
inc
lods
xor
push
jbe
mov
decl
push
xlat
pop
je
or
or
adc
inc
shll
jno
xor
inc
dec
lea
push
in
dec
mov
cmp
mov
sti
cld
push
jg
in
pusha
xchg
nop
lds
jns
ss
cli
lahf
lret
or
mov
incl
fucomp
dec
rorl
aaa
and
rcrl
jle
and
mov
jmp
cmp
cmp
and
xchg
mov
push
enter
xchg
js
pushl
push
inc
ret
mov
mov
imul
lds
repz
decl
lock
imul
mov
aaa
lods
nop
shll
test
cmp
jle
ss
and
mov
sahf
adc
mov
int
lock
xor
out
cmp
pushl
cmp
and
push
clc
add
sbb
in
cli
and
pushl
sub
mov
icebp
stc
out
sub
sbb
and
mov
daa
mov
imul
call
push
or
fisubrs
aaa
ret
inc
ficompl
mov
or
and
fdivr
decl
aad
pop
shrb
mov
mov
mov
xor
xchg
sub
inc
jmp
seta
jo
xor
movsl
stos
add
jmp
addr16
cld
mov
and
pushl
sbb
push
inc
jge
and
clc
sub
lret
xor
call
cmp
es
jno
fcomp
clc
mov
ficompl
inc
inc
bnd
push
fcmovnb
mov
sub
cltd
push
pop
mov
in
lret
lock
dec
cmc
scas
cs
inc
ret
push
pop
push
mov
inc
call
mov
in
push
xor
adc
pop
adc
in
push
pop
out
pushf
xchg
cmpsl
dec
ljmp
cmp
inc
xchg
lret
jg
fcomps
pusha
pop
js
call
scas
je
call
aaa
arpl
inc
mov
mov
jns
mov
pop
sbb
lcall
push
movsb
adc
xchg
xchg
rol
dec
out
dec
sti
ficomps
stos
hlt
popa
add
ljmp
xor
and
pop
mov
xchg
mov
fs
pop
dec
fidivs
push
inc
dec
mov
jmp
cmpsl
xchg
nop
pop
xchg
pop
push
push
push
test
addb
push
mov
push
fmull
inc
adc
scas
decl
jbe
xlat
cli
xchg
ss
aas
aam
aas
sub
gs
cmp
adc
jno
mov
ljmp
jb
outsl
cmp
daa
sub
mov
mov
test
adc
mov
ljmp
test
mov
lods
xchg
xchg
sahf
xlat
mov
pop
inc
push
subl
lcall
sub
loopne
jl
push
outsl
aam
insb
add
in
push
lods
push
push
aas
mov
jmp
xchg
fisubrs
push
imul
dec
pop
cld
loop
or
mov
jg
les
mov
cld
or
push
inc
lahf
mov
mov
pushl
test
les
xchg
negb
add
js
mov
push
pop
xchg
and
pushl
insb
popf
cmpb
mov
ljmp
insl
aas
add
adc
push
js
fwait
push
mov
jae
inc
inc
mov
std
cmpl
clc
clc
jmp
or
jle
xor
xlat
xor
mov
dec
mov
fisttpll
test
sbb
loop
cmp
add
daa
inc
iret
mov
out
pop
cmp
mov
or
popf
cmp
popa
add
mov
dec
xor
out
imul
ljmp
pushf
hlt
aaa
cmp
adcl
mov
mov
xor
lcall
mov
cli
aam
clc
sub
ret
xlat
lret
cmp
xor
mov
orb
mov
and
lea
jg
and
jne
test
pop
mov
cmp
fs
test
icebp
repnz
add
lcall
in
sub
and
inc
xchg
push
sub
jmp
jno
arpl
dec
out
jg
dec
pop
sub
pop
sbb
inc
add
add
adcb
push
or
std
ljmp
cld
dec
popf
sti
xor
dec
cmp
push
ja
xor
adc
std
pop
and
ss
cmp
neg
xor
xlat
mov
pushf
inc
shlb
pop
enter
push
fs
sub
mov
push
dec
jbe
jo
mov
pop
fs
call
ss
jle
jg
push
nop
inc
fsubrs
dec
in
adc
js
out
lods
inc
push
xchg
jg
cld
and
fisttpll
xchg
sbb
icebp
xor
xor
call
sub
push
cmp
pop
jno
mov
cwtl
mov
cmovne
pop
mov
push
xor
decl
in
fwait
data16
lock
pop
jo
cli
push
rcrb
mov
movsb
inc
cmp
js
or
jg
call
repnz
data16
aas
mov
xchg
jge
lock
decl
cwtl
cmp
icebp
clc
out
xchg
adc
ror
mov
sub
cs
mov
push
repz
sub
ds
xor
jg
xchg
andb
jmp
jecxz
push
fimuls
push
outsb
and
cmpsl
in
fdivl
js
loopne
sbb
call
rorl
icebp
adc
out
icebp
jecxz
mov
stos
test
js
les
xor
or
push
mov
fisubrs
pop
lds
nop
mov
fildll
cs
mov
and
incl
or
test
mov
jle
sbb
pop
xor
push
in
push
mov
shlb
call
mov
bound
cltd
sub
sbb
jb
push
test
lods
pop
pushl
mov
mov
dec
subb
test
or
mov
cmpsl
call
andb
cmpsb
pop
xor
outsl
and
push
or
mov
insb
in
out
ljmp
call
insb
jae
fisubrs
fiaddl
push
pop
cltd
std
js
mov
leave
fcmove
ds
fadd
mov
add
or
mov
jb
out
gs
adc
ljmp
xor
inc
pop
adc
outsb
movsb
arpl
xchg
insb
repz
outsl
int3
dec
jae
mov
outsb
rcrl
ljmp
pop
pushf
dec
das
pop
shll
jl
jae
out
cmp
push
cmpsb
pop
xchg
sti
imul
lcall
xor
adc
rolb
enter
lret
test
xchg
daa
inc
and
call
sub
mov
call
pop
dec
mov
dec
fmull
jo
call
movsl
aad
mov
lds
andb
ljmp
cmp
leave
imul
arpl
setg
xor
cs
in
mov
push
mov
fs
sbb
push
out
and
sarl
jmp
push
cmove
pop
scas
xorb
jmp
mov
test
xchg
sarb
decl
sub
push
mov
mov
mov
out
sbb
and
aaa
mov
push
pop
ljmp
nop
mov
lcall
jmp
pop
xor
mov
xor
dec
lret
cmp
fdivs
inc
loopne
call
jl
jp
ja
les
aam
repnz
add
jmp
cmpsb
dec
lock
repz
rorl
aam
xchg
dec
xor
ljmp
sub
pop
mov
dec
pop
jae
mov
sub
test
pop
cs
cmp
ljmp
xor
or
adc
mov
jge
sub
hlt
je
mov
loopne
dec
and
jbe
push
mov
test
jmp
arpl
dec
cmp
sub
sar
mov
push
mov
cli
mov
in
scas
sti
sbb
out
pop
mov
push
push
cmp
push
insb
cmc
lods
inc
pop
jo
ljmp
lcall
jmp
jb
pop
pop
or
push
dec
or
imul
lods
rclb
dec
pop
stos
mov
daa
add
xchg
pop
sub
sub
sub
xchg
xchg
xor
decl
jp
adc
fcmovbe
xchg
sbb
insb
xor
sub
addr16
sbb
shlb
xchg
mov
lcall
mov
jecxz
test
mov
xchg
cmp
aam
xchg
int
push
mov
es
pop
insl
decb
xor
insl
fistpl
fdivr
lret
pop
cli
xlat
cmp
ljmp
cwtl
js
jp
mov
inc
lea
mov
nop
mov
push
jecxz
call
xor
add
jno
jno
jno
xchg
sub
pop
movsl
cmp
cmp
or
faddp
jle
aaa
xorl
push
or
aad
cmp
or
mov
xchg
adc
shll
mov
inc
test
mov
pop
or
int3
call
cld
ja
aam
add
clc
clc
rorl
xchg
jbe
jmp
jmp
pop
jnp
sbb
stos
fists
popa
std
push
in
fcomps
in
loopne
jmp
add
push
loope
pushl
addb
xor
adc
sub
mov
and
and
lcall
mov
mov
mov
imul
lret
aam
stc
lods
std
sub
call
es
dec
sbb
cmp
fstpl
mov
icebp
mov
decl
or
dec
call
fs
test
push
aam
mov
xor
xchg
cmp
ljmp
cmpsb
cld
jns
and
ret
nop
lods
and
xchg
pop
pop
pop
mov
xor
fwait
jmp
mov
dec
xor
sti
sbbb
sti
fildll
fistl
decl
sbb
add
mov
jno
popl
ret
das
xchg
popf
bnd
add
add
and
sbb
cli
ljmp
jae
push
subl
jmp
mov
movsl
popf
mov
cmpsb
jle
or
mov
bsf
aaa
add
adc
xlat
or
mov
in
ljmp
aam
mov
inc
pushf
push
movsb
mov
outsb
push
icebp
sbb
andl
lcall
push
daa
mov
push
jg
cld
pop
mov
mov
sbb
aas
into
xchg
call
jnp
lds
stos
inc
mov
mov
jb
aad
jae
xor
sbb
inc
xchg
clc
xchg
lea
rcrb
push
xlat
rorb
sub
xor
pop
pop
stos
adc
call
adc
stos
ss
jp
push
out
pop
clc
push
xor
rorl
int
adc
or
xor
cwtl
cltd
test
test
mov
enter
mov
ljmp
fnsave
jmp
aam
xchg
mov
and
jno
adc
lcall
imul
bound
push
mov
xor
loop
lock
cld
jmp
icebp
test
les
sub
adc
mov
fdivr
jmp
pop
jg
jne
mov
loopne
inc
push
jb
cld
aad
cltd
dec
xchg
lcall
js
pop
mov
jmp
aaa
push
int3
and
or
mov
arpl
pop
sbb
sub
mov
dec
cmp
rorl
pusha
sub
and
or
aas
loope
icebp
fidivrl
mov
bound
jg
lcall
xor
inc
int3
std
inc
mov
sbb
dec
lods
pop
sub
mov
ljmp
popf
push
stos
aam
push
mov
scas
pop
daa
cmc
stos
or
sub
hlt
ja
ret
loop
xchg
pushl
ss
inc
sbb
xor
cmpsl
cmpsl
adc
dec
cmp
gs
jmp
inc
inc
fstpt
mov
iret
sbb
jge
and
push
call
push
stc
xchg
pop
loope
mulb
or
call
sub
ljmp
jnp
inc
inc
adcb
cld
xchg
imul
cmp
pop
sahf
out
std
sbb
incl
jecxz
mov
fisubrs
cmp
jl
jns
aam
and
and
pushl
in
and
lcall
mov
push
out
xor
mov
cmp
cmp
inc
repz
nop
cmp
sub
xor
test
add
das
cli
jmp
fisubrl
lret
jne
repnz
lret
lods
cmpsl
inc
popa
addb
dec
ljmp
jmp
sbb
roll
mov
sahf
clc
sbb
jmp
dec
sbb
out
sahf
inc
pop
pop
and
into
ja
cmp
fcom
gs
or
data16
call
repnz
mov
push
xchg
mov
inc
bound
push
jns
out
mov
lcall
cmp
xor
inc
push
pop
ror
jns
push
xlat
loope
sahf
subb
cmpsb
call
mov
in
inc
mov
fstps
and
pop
fcomps
jo
outsl
add
pushl
xchg
or
sub
xor
mov
mov
cmp
movsb
and
ljmp
je
aaa
mov
daa
outsl
sahf
imul
lock
mov
lcall
faddl
mov
stos
mov
jl
mov
sub
xchg
arpl
inc
jg
jo
inc
xchg
sbb
ret
add
je
sbb
inc
jg
sbb
xorl
mov
adc
frstor
add
lds
jle
mov
pop
inc
into
repz
cmp
call
mov
addb
pop
mov
cmp
insb
lahf
and
lcall
outsl
icebp
insb
shll
lods
cli
decl
sahf
push
hlt
ret
xchg
push
push
shrb
in
sub
lcall
xorl
rcrl
outsl
push
sub
cli
push
jmp
nop
xlat
pop
cmp
lret
test
ficoms
jo
mov
lock
stos
sbb
pop
dec
in
fnstcw
jmp
outsb
or
ftst
test
inc
cmp
idiv
fidivrs
xor
into
in
add
add
pop
nop
dec
icebp
adc
rol
push
gs
mov
call
subl
pop
pop
mov
loop
xorl
cmp
sbb
ljmp
rolb
fadds
and
jnp
imul
shlb
jecxz
ljmp
push
jge
mov
in
cmc
jb
jecxz
lret
push
leave
fldl
dec
daa
clc
lret
push
push
lcall
mov
cmp
lahf
jne
movsl
mov
jg
in
sub
mov
out
fsubrs
imul
cmp
loopne
pop
dec
push
popa
cmp
add
xchg
scas
lcall
sbb
test
dec
ficomps
add
xlat
ljmp
adc
push
cld
and
je
add
pushl
and
adc
test
jbe
aas
inc
test
call
iret
adc
icebp
pushf
lcall
push
jbe
cmpsl
or
sahf
data16
mov
test
fbstp
xor
mov
xchg
push
jecxz
mov
add
aad
adc
jno
inc
jnp
and
call
test
or
adcb
xchg
xchg
or
jg
pusha
dec
sahf
ret
in
inc
ljmp
jle
lret
xor
daa
mov
mov
push
jl
pushf
imul
mov
sub
std
mov
dec
push
pop
scas
imulb
sub
subl
out
call
es
cmp
addb
pop
in
mov
cmc
jl
push
xor
jmp
pop
aas
lods
out
lods
xor
cmp
notb
repz
lods
fisubrl
push
mov
mov
in
pop
shll
mov
pop
stc
push
jge
dec
mov
mov
lods
sbb
jmp
imul
mov
loopne
jnp
imul
sub
sbb
dec
push
xchg
xchg
xchg
and
pop
mov
jo
call
ljmp
inc
pop
scas
jle
iret
mov
sti
push
shlb
dec
insl
sbb
xchg
xchg
pcmpgtb
and
lcall
add
xor
lret
adc
adc
imul
loop
cmpsl
jb
out
stos
adc
push
lcall
les
mov
in
lods
outsb
in
jmp
lds
mov
mov
mov
dec
cli
mov
adc
mov
and
aaa
fistpl
call
fists
test
dec
aaa
jae
and
add
icebp
into
mov
mov
xchg
pop
xchg
enter
jl
cld
sbb
loopne
cmpsb
outsb
aas
lret
clc
xchg
js
jmp
cli
cmpsl
jle
xor
jmp
pop
sbb
mov
lahf
into
jl
notl
jg
push
push
mov
call
xor
adc
adc
lock
and
das
lcall
mov
ss
jl
sarl
out
push
sbb
insl
cld
scas
hlt
xchg
mov
test
popa
js
mov
sar
jmp
xchg
test
imul
out
push
mov
mov
movsl
push
ljmp
scas
stos
test
out
test
cmpsb
dec
inc
pop
mov
nop
pop
adc
mov
clc
decl
test
mov
filds
popa
push
jl
cltd
xchg
insb
xchg
adc
clc
aam
js
xchg
std
xchg
mov
sub
cmp
clc
hlt
inc
cmc
imul
push
jg
push
repnz
add
jae
jle
shl
pop
imul
jmp
jno
mov
cmp
pop
leave
push
cltd
xlat
sub
dec
or
jne
jmp
jmp
leave
clc
mov
orl
mov
dec
and
push
insl
jae
lcall
aam
scas
jns
add
lret
pop
popf
leave
je
xor
or
shll
fbld
sub
or
and
cwtl
xor
cmp
shlb
pushl
inc
mov
or
pop
xchg
ljmp
mov
sbb
push
jo
lcall
push
pop
adc
and
mov
cltd
xchg
xchg
add
rcr
incl
lods
lock
push
cmp
sar
mov
roll
lds
loop
stos
add
fisttpl
adc
add
aas
in
sbbb
and
add
sbb
arpl
shlb
jmp
cmp
ss
scas
xchg
xor
lcall
lret
loop
ficoms
fnstcw
mov
mov
rep
fcoml
leave
mov
dec
or
in
inc
in
cltd
je
and
aaa
das
inc
and
mov
ret
xor
stos
mov
xchg
push
push
mov
outsl
int3
add
out
push
push
lahf
xchg
sub
or
fs
fcomps
adc
lahf
test
sub
out
mov
ljmp
sub
cmp
jp
add
sbb
inc
cmp
sti
push
aas
ds
fs
mov
inc
dec
call
data16
xchg
mov
sahf
adc
xor
push
test
xchg
adc
mov
push
push
push
fcmovb
xlat
push
mov
in
lods
xchg
outsb
aam
aaa
sbb
mov
mov
sbbb
xchg
mov
loop
xchg
mov
and
pop
jecxz
adc
jmp
insl
jge
xor
imul
mov
imul
dec
lcall
ret
mov
push
xor
inc
out
scas
push
mov
ja
cmp
mov
fidivl
pop
aas
adc
fninit
sbb
pusha
mov
pop
cmc
call
jae
pop
mov
mov
cmp
jg
dec
in
aad
sti
jg
lcall
dec
pop
test
mov
xlat
in
movsl
pop
jmp
mov
mov
sub
test
xchg
arpl
enter
lock
test
sbb
incl
test
mov
jne
fsts
fistps
mov
pop
rorb
cmc
stos
ljmp
jge
test
aaa
cmpb
stos
ss
stos
dec
cli
cmp
adc
rcll
test
mov
push
add
call
mov
push
movsb
movsl
xor
xchg
mov
ja
js
pop
mov
fs
xchg
icebp
lcall
sbb
pop
adc
dec
xchg
or
push
adcl
add
negl
jmp
mov
sub
call
jmp
sbb
data16
cmp
jmp
adc
push
repz
movsb
jecxz
jg
out
jg
mov
pop
sahf
sbb
repnz
xor
dec
aas
adc
insb
jg
cmc
jb
scas
xchg
mov
or
push
out
jmp
shlb
popf
dec
sbb
stos
xlat
or
cld
les
ljmp
jb
sub
lods
sbb
arpl
sti
xor
lods
xor
xor
xor
mov
stos
add
push
adc
jl
out
outsb
mov
std
ljmp
jle
cld
fwait
push
mov
pop
je
mov
inc
jno
cmpsb
mov
mov
adc
int
movsb
daa
outsl
push
push
pushf
in
jb
mov
inc
iret
mov
incl
jne
rcrl
fwait
gs
xchg
sbb
pushf
js
cmp
or
int
aam
jmp
add
mov
ret
pop
pushf
fsubs
mov
pusha
cmp
inc
es
ljmp
in
outsl
cmp
imul
lock
ljmp
dec
mov
stos
cmp
fisubrl
and
mov
adc
cld
inc
daa
cltd
ljmp
pop
addr16
js
pop
cmp
jp
mov
and
aam
push
filds
pop
sbb
lcall
jecxz
cs
lock
jecxz
xchg
into
cltd
fisttpll
mov
test
aas
popa
push
pop
cltd
insl
incl
stos
mov
roll
ja
pop
cs
mov
sbb
gs
push
inc
loop
inc
pop
aad
pop
push
popa
insl
mov
or
repnz
or
xchg
adc
push
sbb
icebp
ljmp
aad
pop
imul
out
adc
mov
mov
sti
lret
mov
pshufw
pushl
nop
pop
and
or
std
outsl
insb
cmp
add
outsl
add
push
clc
outsl
mov
fistpll
out
imul
leave
nop
test
jg
ljmp
mov
sarl
pop
or
xchg
mov
xchg
sub
scas
pop
movsl
mov
jns
sub
jbe
add
jg
stos
push
sbb
cmpsl
jecxz
mov
pop
pusha
out
jle
add
cli
or
lods
push
pop
iret
mov
jmp
or
sbb
mov
rorb
mov
and
lcall
jmp
jo
out
xchg
add
push
aaa
mov
insb
pop
cld
leave
idivl
call
push
dec
sbb
add
cltd
push
dec
pop
shlb
jb
loop
push
mov
mov
fcomps
frstor
aas
stos
sub
and
cmp
je
xchg
inc
xchg
xor
pop
loopne
lcall
mov
movsb
and
adc
mov
pusha
cs
les
cmp
jmp
mov
stc
fcoml
fwait
mov
in
arpl
push
dec
dec
mov
rorb
imul
dec
add
dec
movsl
cli
out
ljmp
fcmovnb
mov
cltd
inc
imul
xchg
push
shl
sbb
pushf
rcll
mov
push
xor
js
jo
int
decl
arpl
adc
jae
or
repz
rcr
push
aam
mov
int
xchg
in
aad
jmp
mov
es
mov
pushl
call
mov
adc
push
bound
mov
add
daa
xor
call
push
dec
in
movsb
push
adcl
repz
xor
and
loope
icebp
dec
addr16
jmp
jne
jne
xchg
pop
out
adc
cmp
push
and
push
ficoml
repnz
xor
mov
fists
jns
out
inc
cmp
cli
fcomip
push
sub
add
or
jge
ffree
inc
decl
js
int
xor
push
mov
js
cmp
jo
dec
dec
push
cs
pop
out
cli
cmp
jb
test
leave
adc
mov
push
inc
out
adc
push
loopne,pn
and
aam
test
pusha
pop
stc
cmp
test
shl
pushl
sbb
add
shlb
mov
sbb
or
icebp
adc
int3
rcl
ja
push
clc
push
leave
pop
push
sbb
mov
adc
push
data16
ja
clc
or
sub
jae
pop
mov
out
clc
decl
fs
push
xchg
scas
lahf
push
or
mov
je
mov
aam
or
cmp
dec
fsubr
fisttps
nop
icebp
andl
out
cli
ljmp
jbe
push
mov
and
mov
repnz
sub
xchg
fisubrs
call
mov
movsb
je
das
jl
cmp
in
sbb
loop
call
adc
add
mov
stos
cmp
jle
insb
push
adc
inc
mov
or
sub
in
push
repz
dec
pop
add
mov
mov
adc
pop
dec
jns,pt
cli
cmp
jge
add
adc
adc
adcl
xlat
xchg
and
int3
xor
decl
and
paddb
jb
inc
scas
and
movsl
pop
loopne
pop
loopne
add
jno
call
popf
cmp
stos
mov
add
mov
adc
mov
fdivp
es
decb
stos
jle
loopne
popa
pop
dec
jle
fwait
mov
ja
shl
leave
fildll
inc
nop
jae
or
add
dec
jl
jle
mov
ljmp
loope
dec
push
fcomps
jg
call
mov
insw
pop
xchg
in
sbb
faddl
rcll
arpl
call
add
xor
jle
jae
inc
dec
leave
out
pop
lcall
xor
jle
xor
lock
incl
testl
arpl
mov
jle
test
xchg
out
add
ja
ss
mov
pop
int3
mov
xor
lcall
imul
rorl
or
dec
xor
mov
mov
in
loop
scas
fidivrl
idiv
incl
cld
inc
push
rorl
lods
mov
icebp
out
mov
lods
mov
mov
push
fcmovb
lods
inc
and
out
push
scas
fmull
sub
jmp
dec
lock
ficoml
pop
inc
sbb
cmpb
inc
or
jg
sbb
sbb
fadds
or
dec
in
jnp
pop
std
fstpl
lahf
pop
std
pushl
cld
cld
xor
cli
fwait
es
pop
pushf
movsl
enter
in
push
sbb
das
cli
dec
rcl
mov
mov
int3
xchg
push
shl
pop
fwait
pushl
cld
decl
and
fs
add
pop
out
mov
inc
outsb
mov
jnp
call
cmpsb
sub
jo
and
je
idivb
mov
cwtl
daa
mov
lods
cmp
jg
test
xlat
and
adcb
or
gs
mov
adc
lcall
adc
pushf
push
das
mov
push
aaa
divl
adc
hlt
imul
stos
scas
orl
inc
popa
push
inc
push
mov
inc
out
mov
imul
mov
jge
mov
mov
aad
sbb
jmp
insl
jmp
stos
dec
nop
in
mov
aaa
stos
ret
enter
pushl
ds
pushw
ss
sbb
into
lock
mov
pop
repz
jle
js
outsl
xchg
hlt
jnp
xlat
mov
jae
lcall
push
cli
push
push
stos
fidivrs
lods
fdivrl
shlb
int3
lods
push
out
sbb
jmp
mov
imul
or
mov
lahf
cmp
jno
pusha
mov
sbb
cld
pusha
cmpsb
xor
cmp
fmull
sbb
gs
mov
out
jg
mov
add
jle
repnz
push
lcall
mov
rcrl
mov
hlt
xchg
fwait
jbe
mov
mov
leave
pushl
adc
jns
dec
inc
sbb
ret
imul
mov
push
mov
cmp
dec
inc
mov
xor
cmp
jno
test
dec
xor
test
pop
cmp
ljmp
dec
xchg
out
xchg
in
mov
int3
ss
ljmp
test
sub
enter
cmp
ss
in
cli
or
dec
mov
sarb
js
decl
mov
lods
icebp
cmp
jp
shlb
lods
leave
in
in
dec
outsb
insl
movsl
mov
cmp
jmp
daa
sub
or
stc
dec
cwtl
or
mov
inc
jne
jo
or
lret
int
xorl
hlt
incl
aaa
dec
xor
or
xchg
and
push
cmp
lcall
decl
andl
sbb
cmpsb
cmp
popa
lret
push
sub
gs
sbb
inc
inc
adc
add
dec
dec
xchg
pop
lods
dec
cmp
sbb
test
sbb
jg
inc
scas
fmulp
sbb
push
or
mov
add
xor
pushl
mov
xchg
ja
sub
pop
cmp
stos
stc
mov
das
jp
mov
imul
ljmp
lcall
test
lods
adc
push
or
cld
arpl
pop
sub
stos
dec
jp
je
inc
mov
in
mov
mov
es
and
cmp
fcom
lret
outsb
add
cmp
push
mov
clc
ret
cmp
or
incl
push
in
adc
pop
cvtps2pd
add
cmp
push
aam
pop
sub
ljmp
dec
cmpl
pop
mov
mov
xrelease
push
dec
stos
sub
xor
push
std
sub
cmp
and
imul
mov
call
jg
icebp
jmp
adc
jl
je
sub
jl
jb
mov
jo
sub
fdivrl
inc
jmp
and
movsb
mov
rcr
push
push
or
enter
das
cmp
loopne
fistps
je
mov
add
jg
fwait
dec
test
push
sub
inc
jecxz
das
xor
jmp
loop
cmp
or
clc
loope
sub
stc
repz
dec
movsb
push
mov
mov
sbbb
sahf
ror
inc
sbb
js
lea
cmp
jmp
push
mov
outsb
jge
mov
fmull
sarb
cmp
ds
ds
iret
xchg
dec
mov
pusha
scas
pusha
jb
cmp
movsl
in
sbb
dec
pop
icebp
incl
fwait
pop
push
sbb
dec
adc
mov
stos
cmc
xchg
mov
insb
mov
mov
pop
or
adc
popf
jmp
mov
inc
or
cwtl
adc
cmpb
push
add
gs
jl
jle
popf
xchg
nop
cmpsb
adc
push
ds
inc
ljmp
das
ljmp
lcall
adc
leave
xor
push
ret
fwait
and
or
cltd
data16
fisttps
pop
cmpsl
stos
cmpsb
cmp
jg
sub
push
cld
jmp
inc
fldl
mov
lcall
call
mov
fiadds
xor
xor
add
fcomi
test
sub
jb
jl
jmp
xor
decl
ss
ljmp
dec
jae
pushf
push
jp
pop
outsb
dec
push
je
lods
sbbl
clc
jmp
xor
outsb
adc
int3
jnp
movsb
into
or
dec
xchg
dec
inc
xchg
sarb
call
jnp
in
inc
cmc
inc
sub
pushw
adc
sti
rcrb
inc
test
in
jbe
pop
jae
adc
xchg
imul
repnz
jg
push
xor
sbbb
push
iret
pushf
popf
fwait
loope
lods
jmp
imul
jle
mov
int
in
outsl
jmp
mov
int3
scas
in
jle
rcr
cmp
insl
inc
and
mov
fimull
pop
add
dec
xchg
pop
out
xlat
xor
lcall
mov
cli
sub
std
adc
and
mov
fnstcw
or
xor
jmp
ds
add
inc
filds
ja
push
mov
in
data16
call
lret
jge
jb
je
and
adc
sbb
subb
add
idiv
xchg
mov
mov
mov
ds
mov
mov
pop
stos
lock
leave
xorb
xor
jmp
call
dec
fwait
and
jb
pop
or
icebp
test
jp
mov
lcall
mov
mov
jge
mov
or
pop
push
insb
inc
mov
testl
and
xchg
nop
ds
lds
adc
mov
add
ret
pushf
fistps
mov
enter
cld
xchg
push
cmp
cs
sub
cltd
repnz
loope
mov
dec
jg
dec
mov
or
jns
and
xorl
inc
jg
div
ljmp
sar
imulb
enter
gs
sub
popa
test
cwtl
inc
add
decl
shl
jge
aas
jmp
lds
mov
mov
jecxz
aaa
std
sub
inc
jge
push
sbb
cmp
jae
jb
or
incl
fimull
xchg
bound
push
popa
xor
push
jle
mov
pop
dec
rcll
sbb
fdivrp
lcall
out
jle
lret
xchg
in
out
scas
dec
out
movsl
mov
leave
mov
les
inc
out
inc
xor
ljmp
cwtl
push
inc
xor
mov
mov
cli
cmpb
into
pop
cmc
ljmp
decb
inc
xlat
test
add
mov
mov
mov
jmp
xchg
leave
sub
aad
out
loope
fisubrs
inc
jecxz
lcall
cmpsl
mov
dec
or
mov
loope
xchg
add
jmp
jmp
rdpmc
rolb
in
mov
ljmp
xor
xchg
and
rolb
push
adc
in
sbb
or
and
pop
in
iret
imul
pushl
sbb
mov
or
mov
push
mov
lds
jl
in
pushl
mov
adc
mov
daa
push
lock
push
xchg
movsb
ret
inc
nop
sbb
ljmp
fsubrs
pop
std
cld
stos
sbb
mov
or
out
mov
call
rol
sub
clc
or
andl
aad
mov
and
arpl
ljmp
sbb
fs
mov
mov
call
dec
lods
ds
lcall
mov
adc
add
jl
mov
mov
sbb
dec
js
or
pop
adc
or
movsl
and
jns
aas
out
ret
push
dec
loopne
push
pop
xchg
pop
mov
test
jmp
jg
insl
and
stos
incl
js
pop
ret
out
cmpl
enter
sti
push
mov
out
cli
cmp
sub
jmp
jbe
nop
popa
dec
sbb
mov
test
push
je
sub
lods
das
clc
jmp
ljmp
add
shl
mov
fimuls
ljmp
xchg
shll
push
setbe
jle
lds
mov
add
cli
xlat
daa
mov
pop
aad
incl
mov
ss
cmp
fdivrp
jg
pop
xchg
jo
aad
mov
xchg
jmp
add
pop
sbb
xchg
add
jmp
and
leave
cld
shr
cmpsl
or
add
xchg
sbb
decl
jecxz
mov
push
ret
lds
and
jmp
popf
xor
jg
std
xor
cld
movsl
in
imul
addr16
ljmp
add
push
cmp
mov
or
cld
out
lcall
xor
jbe
sub
mov
or
aas
lock
gs
push
lea
jmp
lret
mov
xlat
nop/reserved
mov
jmp
mov
cs
pop
mov
adc
ljmp
mov
jge
add
cmpsl
pop
jp
xchg
icebp
js
scas
popa
pop
das
push
inc
jmp
nop
push
repnz
and
ss
bound
pop
push
outsl
lcall
or
and
xchg
mov
pop
pop
mov
xchg
pushf
inc
sbb
mov
les
cmp
xchg
jp
lret
sti
cli
loop
bnd
adc
imul
cmp
js
fdivl
sbbb
dec
sbb
dec
or
in
cmp
mov
fs
push
xor
adc
xor
sub
pop
mov
idivb
aad
aaa
mov
mov
jg
call
cld
cmc
out
lods
pop
adc
jmp
push
and
ret
or
decl
pop
mov
lcall
add
ds
cmpl
jmp
jge
fwait
aam
ret
inc
ds
fisttpll
cmp
pushf
les
mov
cld
cmp
push
add
mov
test
lret
dec
and
adc
call
mov
adc
push
cmp
repnz
cmp
imul
sar
sbb
leave
xor
cs
pop
cmc
mov
mov
mov
dec
pop
push
bound
in
dec
mov
adc
xchg
es
add
pop
push
sub
aas
lock
ljmp
mov
push
adc
xchg
inc
dec
inc
adc
decl
mov
bound
dec
add
jno
and
push
in
sub
nop
mov
lcall
jb
adc
adc
pop
cmp
jae
lahf
loopne
push
pushl
pop
test
lahf
inc
xchg
repz
add
dec
shlb
mov
cltd
xchg
in
jl
lcall
in
lret
dec
out
dec
clc
repnz
pop
and
mov
inc
pop
mov
incl
jl
shl
fstpt
jno
dec
dec
rcl
ret
sub
test
sbb
aaa
ss
pushl
inc
or
cmp
xchg
and
jae
mov
test
fstpt
pushf
sbb
adc
mov
cmpsb
ljmp
inc
cmp
pop
fstpt
mov
mov
adc
xlat
inc
shrl
pushl
mov
das
jns
js
inc
ret
mov
pop
add
outsb
adc
sahf
mov
and
incl
xchg
roll
dec
jg
push
rcr
loope
xor
push
pop
cld
pop
lods
mov
jmp
xor
lret
add
push
jne
iret
cltd
mov
pushf
pop
fcomp
mov
hlt
jge
sub
add
push
out
xchg
xchg
int
add
mov
mov
push
setg
cmp
addr16
cmp
fcomip
loop
fisubs
dec
rcr
test
fmull
xchg
or
ljmp
fidivrl
inc
inc
leave
jl
jnp
bswap
sbb
dec
jae
sbbb
sbb
pop
pop
ljmp
mov
lods
orl
inc
mov
fisubl
inc
in
and
loopne
fisubl
incl
mov
test
iret
out
cwtl
mov
orl
pop
and
push
ret
xchg
adc
cmp
or
pushf
inc
or
or
lea
ret
lcall
stc
inc
adcl
jg
icebp
cmp
xadd
psubw
jmp
sahf
or
lock
or
pop
mov
pop
dec
iret
ret
insb
pusha
test
fwait
lcall
decl
push
dec
ffree
inc
mov
cmp
add
or
je
mov
mov
or
fildll
loop
dec
add
mov
jg
mov
push
clc
fsubl
xchg
inc
xchg
jmp
test
jne
addl
loopne
mov
inc
mov
jmp
push
inc
push
cwtl
cli
mov
pop
call
inc
pushf
inc
inc
add
pop
xchg
jmp
jg
fnstenv
cwtl
and
pop
mov
rclb
mov
test
mov
lahf
xor
stc
inc
fstpt
mov
jecxz
lods
lock
test
sarl
stos
ret
mov
cmp
ja
lock
jle
jg
incl
ror
or
cmc
xchg
rorl
jg
adc
sbb
loop
loopne
inc
cmp
sbb
jle
xchg
dec
push
call
call
mov
mov
es
mov
pop
fs
xchg
dec
cmp
scas
pop
divl
lcall
insb
fists
inc
sub
xchg
fimull
adc
xchg
std
daa
inc
jle
jp
test
imul
xchg
sub
test
filds
clc
jno
stos
fcomps
jp
jmp
ret
adc
mov
ja
out
push
xchg
inc
icebp
hlt
pxor
scas
loopne
mov
incl
mov
nop
test
pop
pop
mov
push
cmc
add
sar
fs
push
es
pushf
call
adc
imul
stc
js
xchg
mov
xchg
addr16
incl
lea
xchg
add
mov
and
mov
or
rorb
incl
mov
lods
lds
push
lds
jns
lret
mov
stos
mov
incl
sbb
jo
mov
pop
sbb
pop
incl
pop
or
fwait
sub
inc
or
pop
insb
imul
cmp
incl
push
aad
cmp
lahf
lods
ds
cmp
add
xchg
adc
test
mov
mov
jns
das
shl
fwait
aas
cmp
dec
ret
js
mov
clc
add
loop
out
inc
jns
inc
push
inc
out
repnz
inc
jg
int
push
xor
lods
inc
mov
call
std
sbb
gs
rcrb
push
outsb
cmp
ror
ret
iret
mov
aam
outsb
incl
jg
lods
rclb
sbb
cmpsl
push
in
aad
loopne
fistps
shl
add
jg
mov
in
hlt
loop
cmc
push
hlt
sbb
pop
xlat
pavgb
popa
fsubr
or
scas
xchg
mov
rcr
into
ljmp
mov
stos
pop
cli
and
xchg
or
and
jmp
shl
icebp
sbb
popf
cmpsl
imul
call
loope
call
ret
rol
fwait
xchg
push
adc
je
fcomi
mov
inc
add
fwait
popf
lret
mov
ss
or
out
out
pusha
dec
out
aam
inc
jbe
test
jb
icebp
mov
daa
call
loopne
adc
je
js
roll
and
pop
dec
jmp
mov
pusha
push
testb
pusha
in
repnz
fdivl
jl
sbb
mov
xchg
and
sbb
test
cmp
insl
std
or
or
push
popa
cs
pop
lret
jecxz
push
popf
mov
addr16
pop
rorb
sarb
test
sbb
inc
loope
sub
call
inc
rcr
inc
add
sub
add
ja
jecxz
jns
decl
inc
cmp
in
jno
cmpb
cmp
adc
loop
jno
pop
push
pushl
mov
stc
sbb
cmpsb
adc
imul
mov
lods
pop
jnp
repz
push
or
pushl
pop
out
add
lods
cmpsl
js
int
mov
inc
aad
ret
outsb
nop
add
lea
mov
incl
cmpsb
test
jno
shrb
fldcw
int3
inc
push
je
popf
or
decb
pushl
or
test
mov
or
pop
cmp
mov
aaa
cwtl
lret
pushl
sti
mov
das
mov
add
stos
in
push
sarl
dec
stos
jl
jmp
xlat
fbld
nop
jle
cld
repz
imul
std
or
decl
adc
push
xor
mov
push
jbe
jmp
ud0
pushl
jmp
or
std
and
stos
add
leave
mov
lcall
shr
push
repnz
insb
jns
int3
mov
xchg
add
cwtl
and
call
mov
sbb
cmp
incl
lods
daa
adc
outsb
adc
push
dec
dec
in
clc
decl
mov
push
and
adc
lods
mov
ret
popa
daa
enter
sbb
mov
sub
dec
shr
push
mov
push
lds
imul
lds
ss
sbb
or
ss
mov
and
xor
test
mov
xchg
sub
addb
andb
popa
test
jecxz
rclb
adc
xchg
gs
cli
mov
lcall
adc
inc
nop
addl
lret
sbbl
jmp
daa
or
bound
xchg
mov
mov
push
sar
mov
or
lret
mov
jg
push
and
jnp
mov
ljmp
cmp
stos
cmc
negl
cmp
dec
mov
jl
in
and
jne
sbb
popa
xchg
es
std
fistps
fdivrl
cmp
mov
divb
mov
mov
inc
xchg
xor
icebp
xchg
ljmp
pop
scas
loope
ljmp
arpl
cmc
iret
aaa
lds
call
sbb
push
lahf
pusha
imul
sti
jae
sti
out
jbe
jne
mov
add
adc
inc
aaa
inc
je
lcall
icebp
mov
mov
aaa
jmp
out
pop
arpl
cmpsl
mov
shrb
inc
jmp
jne
int
aam
jecxz
ja
sbbl
ret
jecxz
mov
ljmp
pop
push
out
inc
push
jo
out
je
mov
and
jg
cli
scas
push
jge
inc
call
mov
xlat
push
lret
pop
out
loop
shlb
xchg
mov
or
nop
pop
fcmovu
movsl
cli
jmp
mov
in
aaa
divl
or
sbb
cmp
sbb
fildll
adc
xor
mov
in
push
add
push
call
mov
shll
xor
mov
in
push
call
xchg
mov
cmp
incl
xchg
aam
lret
jl
addr16
xchg
adcb
mov
shll
push
cld
call
in
mov
sub
sarb
mov
mov
adc
adc
xlat
lcall
cmp
les
mov
sbb
shrl
cli
add
outsb
shll
jg
mov
sbb
adc
cld
dec
lods
je
hlt
aam
cmp
lcall
xor
loopne
sub
jecxz
inc
jne
jb
call
cmpsl
sbb
xchg
mov
dec
cs
je
jmp
push
pop
movsl
mov
cmp
les
mov
pop
shrb
or
mov
cld
pop
mov
mov
cwtl
mov
pushl
jne
ljmp
inc
lea
pushf
dec
fidivl
add
mov
jmp
out
das
nop
inc
jecxz
cmp
push
lahf
jl
jecxz
sbb
filds
pushl
aam
and
in
aam
js
jns
or
xor
dec
mov
mov
adc
movsb
pop
or
das
popa
jne
outsl
jo
or
movsl
sub
aad
lcall
jno
fcompl
push
add
add
and
cmp
ja
insl
mov
fisttpll
xor
lcall
roll
sar
mov
cmp
mov
xchg
cld
adc
ret
insl
dec
call
jge
dec
subl
movsb
movsl
pop
or
inc
push
dec
rclb
outsb
shlb
pop
lcall
cld
into
adc
cmpsl
aam
push
insl
sub
or
ret
repnz
scas
cmp
mov
cmp
or
dec
sahf
cs
shrb
cmpsb
xor
lea
adc
xor
inc
sbb
jg
cmpsb
inc
dec
test
mov
addr16
test
push
xchg
outsb
dec
in
add
jne
decl
sub
mov
mov
test
rcl
out
movsl
mov
mov
mov
xor
push
mov
xchg
int
xchg
cmp
in
stc
dec
int3
xor
jno
mov
sbbb
fldl
adc
fcmovne
or
add
inc
sbb
and
cli
and
pushl
xor
clc
andb
push
arpl
cmp
outsl
das
mov
jmp
jno
ficompl
imul
sbb
push
pop
push
jp
ud0
in
or
jle
mov
mov
dec
sarb
add
cmpsb
mov
stc
adc
in
push
aam
lcall
aam
and
xor
ret
inc
mov
mov
cld
sti
test
pop
out
and
std
addr16
and
ljmp
mov
inc
hlt
inc
lret
push
iret
in
aas
loope
jbe
dec
mov
xchg
cmc
lret
pushf
mov
push
call
cmp
sub
fadds
arpl
lret
xchg
hlt
icebp
testb
std
push
add
inc
mov
gs
add
in
jo
mov
jg
in
and
sti
push
push
xor
sarb
sbb
repnz
pop
or
jg
xor
or
cltd
add
cltd
sub
mov
push
cli
scas
mov
mov
into
call
mov
pop
xchg
decl
test
addr16
xchg
pop
lods
ret
out
das
ljmp
push
cmp
decl
test
mov
rorl
hlt
mov
inc
notl
test
push
popf
jmp
xor
push
xchg
or
cwtl
push
or
insb
pop
int
sub
lds
gs
pop
data16
lcall
movsl
lea
and
sahf
jb
std
or
dec
xchg
xor
mov
sub
add
jg
dec
in
repz
or
ret
popf
loop
pop
sbb
call
es
push
ficomps
and
push
mov
ja
enter
je
jmp
out
addr16
call
jp
push
gs
jmp
pop
dec
jb
imul
ljmp
repz
mov
sbb
dec
lcall
insb
les
insl
fcomip
or
adc
jb
popa
fisttps
inc
jno
add
enter
inc
cld
push
stc
cmp
cmc
icebp
push
rcpps
cmp
mov
shll
bound
add
faddl
or
jge
and
ja
jo
out
shll
or
mov
in
popf
adc
cmp
dec
fcoms
adc
sbb
lock
dec
or
push
adc
inc
inc
ficomps
jae
jmp
repnz
mov
sbb
cmp
lea
ret
xor
lock
mov
loope
test
lock
jno
call
sti
jecxz
inc
cltd
dec
jbe
int3
loop
mov
push
sahf
insb
sbb
incl
mov
filds
cltd
pop
clc
mov
sub
dec
test
sarl
lcall
dec
repz
mov
add
cwtl
std
mov
mov
inc
jp
lret
incl
or
inc
repnz
mov
mov
int3
dec
sub
push
push
jb
je
fdivrs
aas
cltd
xor
mov
mov
in
cltd
cwtl
jecxz
leave
mov
incl
jae
cmp
mov
out
lcall
cmp
std
and
sub
sub
cli
scas
incl
int3
mov
or
dec
testl
xor
mov
ljmp
lock
loopne
das
and
aas
push
cmpsl
xor
xchg
push
out
sub
lcall
jbe
sti
jnp
push
daa
dec
xchg
sbb
aaa
icebp
sub
mov
rcll
sbb
out
cli
mov
ja
and
mov
das
cmpsl
mov
sarb
mov
cmp
mov
sub
test
dec
and
fiaddl
pop
jl
push
ja
ljmp
out
push
push
ljmp
pop
bound
mov
hlt
or
mov
nop
fmulp
mov
sub
adc
pop
add
loopne
test
pushl
cmp
mulb
nop
gs
mov
rorl
or
mov
push
jmp
hlt
out
inc
mov
mov
mov
hlt
loop
int
cmpsl
icebp
fs
ljmp
loopne
repnz
and
jnp
or
mov
loopne
out
cli
mov
int3
in
mov
jl
cld
call
mov
xor
pop
lods
ljmp
push
push
inc
push
jne
call
xlat
dec
mov
iret
aas
inc
mov
lds
mov
dec
jns
out
mov
decl
dec
mov
jp
jmp
adc
lahf
inc
push
pusha
sbb
pop
fdivs
stos
adc
pop
mov
test
xor
mov
inc
jbe
dec
aad
ret
pushl
sbb
fidivl
jge
xlat
mov
xchg
xchg
imul
fwait
pop
ljmp
cmp
adc
sahf
sar
std
out
js
sahf
mov
mov
jne
jbe
mov
lcall
adc
or
dec
ja
cltd
ret
mov
adc
pop
test
mov
jg
xorb
stos
imul
notb
xor
call
ret
icebp
je
adc
inc
insb
lret
in
sub
movsl
mov
xchg
push
loope
ss
call
movsb
mov
aam
loop
int
and
mov
sbb
lods
dec
mov
stos
call
mov
push
xor
jno
mov
pusha
adc
xchg
popf
jb
sbb
loopne
cld
sahf
adc
shl
fcmove
stos
push
popa
fcomi
or
out
inc
imul
push
pop
lahf
jge
push
mov
mov
cli
push
adc
mov
xchg
addr16
loop
sti
xor
push
fwait
sub
loop
adc
lods
xorb
jnp
sbb
call
pusha
popf
hlt
lret
roll
pop
push
repnz
test
adc
or
loopne
stos
pushl
and
sbb
pop
adc
inc
fisttpll
stos
adc
incl
hlt
sbb
mov
mov
xor
mov
stc
mov
push
aaa
cltd
pop
dec
insl
imul
mov
xchg
xchg
fsubs
stos
lcall
jbe
insb
jb
jnp
push
sbb
pop
aas
fisubs
mov
jmp
and
test
adc
lock
jo
aaa
mov
jne
fs
call
pop
rcrb
mov
sub
pusha
mov
xchg
jb
dec
push
rol
add
push
in
pop
test
add
push
sbb
ja
mov
sub
cwtl
popf
adc
and
sub
stos
adc
inc
ret
call
fdivrs
jle
xchg
std
in
into
mov
pop
add
rcr
jge
mov
gs
decl
inc
sbb
add
icebp
daa
outsb
cmp
jp
rolb
xlat
out
test
data16
popf
mov
sbb
jecxz
fadd
test
cmp
dec
mov
movsl
pop
aam
incl
lret
std
in
pop
sub
rcrl
add
pop
adc
leave
sbb
ja
cs
jg
outsl
push
fidivrs
outsb
mov
insb
loopne
js
lret
jl
and
mov
fisttpl
arpl
jl
ret
into
xor
sub
es
pop
fisubs
pop
call
in
mov
xchg
negl
rcr
xchg
mov
ret
arpl
and
clc
loope
test
cwtl
iret
cld
fs
jle
cmp
pop
jp
jecxz
fildll
or
sbb
incl
mov
dec
add
sbb
xchg
repz
mov
jge
jecxz
pusha
xchg
sbb
out
clc
enter
out
scas
cwtl
cmp
aaa
faddl
decl
lods
xlat
ret
inc
pop
cmc
sub
roll
dec
repnz
leave
mov
repz
loopne,pn
decl
fs
movl
lods
ds
test
inc
loopne
jle
sbb
call
mov
jl
cmpsl
mov
lcall
rep
mov
jb
sub
jns
or
mov
push
int3
shll
jne
dec
scas
repnz
inc
mov
mov
decl
xchg
stos
sub
mov
lahf
xchg
jle
pushf
adc
ljmp
mov
fdivl
jns
and
je
pop
or
and
in
rorl
lcall
jns
inc
int
push
lcall
loope
mov
and
jmp
cs
daa
iret
xchg
das
jp
out
sbb
cmpsb
fwait
pop
push
popf
leave
ljmp
jo
imulb
imul
sbb
sub
call
loop
jecxz
popa
pop
aas
push
call
arpl
lds
mov
mov
shl
scas
sub
loop
adc
and
test
call
adc
notl
loop
std
mov
and
xor
lret
mov
pushl
aad
lods
clc
add
popf
dec
andb
inc
mov
fsubl
and
dec
imul
inc
int3
mov
sub
mov
adcb
cmp
call
mov
sub
push
movsb
out
dec
cmp
fsubs
and
push
int3
dec
testl
xor
pushl
fimull
push
and
insl
pop
gs
dec
jne
mov
inc
jae
les
pushl
int3
push
ds
outsb
xchg
stos
push
mov
sbb
inc
addr16
cld
lret
xor
and
jg
incl
aam
mov
pop
in
flds
add
lcall
test
mov
sbb
ret
cmc
sti
pop
icebp
mov
lds
pop
mov
incl
enter
adc
pop
aad
pop
pop
lret
xor
push
push
insl
mov
inc
ljmp
or
mov
xor
scas
pusha
test
sbb
push
jg
out
neg
lret
rol
repnz
call
bound
dec
dec
pop
or
popa
fsubl
pop
mov
adc
ficoms
call
mov
xorb
sbb
push
and
mov
decl
jbe
adcb
out
scas
add
pop
scas
out
pop
imul
xor
jg
ljmp
je
out
jne
push
xchg
mov
xor
or
icebp
es
xchg
mov
push
lods
mov
mov
decl
and
hlt
in
sub
jae
mov
icebp
adc
jecxz
mov
aam
add
or
std
inc
sbbl
sub
ret
in
pusha
cli
sub
incl
rcr
loopne
sbb
sahf
inc
dec
mov
mov
shll
movsl
push
out
stos
cli
decl
mov
ja
cli
push
dec
nop
sbb
decl
fs
lods
add
jnp
push
mov
dec
lret
jg
push
mov
test
mov
ret
rclb
sar
call
dec
fdivrp
sbb
stos
mov
cwtl
mov
jg
mov
sbb
pop
in
shll
loopne
fsubrl
cmc
mov
push
ret
sarb
loopne
decl
shlb
xchg
xchg
out
xchg
rcrb
mov
in
std
xlat
arpl
xor
pushl
cld
xchg
push
aam
dec
rcrl
nop
xchg
dec
scas
add
cmp
xchg
cmp
int
pushl
push
or
sbb
push
stos
push
mov
sub
push
jbe
pusha
ret
ljmp
int3
std
mov
cmp
cmp
xlat
dec
mov
cmpsl
js
out
xchg
out
add
ja
pushl
pop
pop
lds
dec
or
scas
pop
int
dec
fistps
push
ud0
call
lods
fucomi
and
jne
mov
addr16
xchg
sub
xor
mov
push
sub
dec
popa
lcall
std
rcrl
rorl
dec
jp
in
into
in
lods
mov
movsl
movsl
push
adc
fnstcw
dec
ficoms
or
in
cmpsl
adc
xorl
xchg
pop
push
jg
ljmp
mov
fucom
in
xchg
lcall
in
jmp
mov
fnclex
or
cwtl
lahf
imul
cli
mov
cmc
insb
mov
lds
aad
call
ljmp
mov
inc
adc
insl
cmp
and
and
popa
dec
incl
adc
lret
dec
in
lods
xchg
out
loop
lea
fwait
pop
lock
sbb
fucomp
mov
cltd
popf
jo
xorb
add
add
outsb
jno
dec
popa
sub
lcall
repz
adc
fxch
inc
out
pop
cmp
and
inc
xorl
pushl
lcall
cld
push
loopne
mov
pop
mov
fndisi(8087
cli
loope
adc
xor
rcl
hlt
call
mov
mov
inc
mov
inc
sub
out
xchg
out
sub
cmp
jmp
cmp
lds
add
iret
push
cs
fmul
cmpl
shrl
mov
and
sub
xor
and
cld
mov
mov
cmp
cmp
mov
gs
fs
rcl
jl
ljmp
jb
push
dec
jg
sub
and
shr
and
clc
loope
xchg
dec
and
mov
jl
inc
sarb
in
jns
mov
xchg
call
mov
scas
out
dec
or
fidivl
daa
jl
dec
mov
aad
mov
or
cmpsl
arpl
pop
inc
mov
jae
loopne
xlat
or
sbb
add
clc
push
call
sub
ret
push
test
sbb
outsb
sub
push
push
mov
dec
aas
inc
idiv
jl
pop
cmpb
inc
insb
lahf
aaa
insl
lret
cmp
pop
dec
icebp
mov
dec
roll
jmp
cld
sub
dec
inc
dec
lret
push
cs
adc
push
imul
jle
incl
jp
or
pop
cmp
pop
cmpl
add
pushl
xchg
push
cwtl
loop
mov
mov
lods
xchg
pop
ficoml
mov
mov
sbb
pusha
inc
cmc
popf
into
or
xor
orb
mov
mov
mov
sub
sub
mov
adc
loop
mov
push
in
inc
gs
mov
pop
outsl
and
add
and
adc
xchg
pop
xchg
jb
repnz
iret
fisttpll
call
js
shrb
in
dec
push
adc
ja
push
lahf
out
push
nop
cmpsb
dec
stc
add
fs
adc
and
mov
jp
adc
fs
ljmp
pop
adc
cmpsl
shlb
lock
mov
add
inc
repz
mov
loope
pusha
loopne
pushl
fdivs
or
xchg
mov
dec
jno
sub
dec
int
js
cmp
jmp
jo
sub
jns
pop
in
jle
icebp
jmp
xchg
incb
fwait
xchg
adc
mov
decl
adc
sub
fmull
ret
rcrl
jecxz
add
mov
incl
push
pop
mov
add
xchg
lods
mov
decb
xor
pushf
ljmp
imul
push
lods
test
and
inc
fsincos
jl
and
inc
cmp
xchg
cmp
decl
test
or
fwait
fs
add
xor
xchg
adc
ljmp
je
push
das
or
psadbw
cld
shrl
cmp
xlat
pushf
push
inc
xor
pusha
inc
insb
cmp
icebp
mov
xor
ljmp
clc
decl
cwtl
or
in
pop
ds
incb
flds
insb
fadds
call
ljmp
push
std
aaa
jecxz
pop
push
jns
fsubrl
xor
rcl
inc
sbb
pushf
incl
lods
lods
fisttpll
mov
jp
in
jb
aam
adc
ret
mov
sbb
jl
pop
cld
pop
loopne
in
sti
mov
push
inc
inc
gs
sbb
jmp
add
andl
jmp
into
and
push
ret
fs
push
mov
sbb
mov
adcl
outsl
loop
call
mov
add
cmp
xchg
sbb
ss
out
cmp
mov
decl
adc
sbbl
imul
mov
and
mov
push
mov
jle
out
call
sbb
loop
sbb
and
dec
add
cmp
movsb
cmp
cltd
std
incl
stos
arpl
push
hlt
or
push
mov
notb
in
insb
enter
mov
pop
sbb
sub
xor
outsl
cmpsb
mov
push
roll
mov
iret
decl
inc
inc
lea
or
ret
add
rcrb
pop
jne
sbb
pop
lcall
jl
jg
imul
xor
add
push
pushl
xchg
push
cmp
scas
mov
sbb
mov
push
sub
jne
fwait
movsb
push
sub
pushl
int
mov
repz
je
insl
pop
cwtl
xlat
mov
sbb
or
mov
xor
outsb
test
fcomp
sbb
sub
pusha
fimuls
and
jmp
outsl
clc
push
sbb
add
pop
cmp
xorb
sub
mov
lcall
movsb
pushf
mov
cmp
cmp
ret
jg
shlb
les
push
mov
jecxz
repz
fdivr
scas
mov
add
cmp
sar
aaa
cld
mov
cld
or
inc
jle
lret
pop
jno
dec
and
das
xchg
mov
jg
andb
sbb
jno
insb
adcl
sbbl
testb
out
sbbb
cld
mov
test
mov
add
mov
dec
out
inc
outsl
mov
sbb
add
sti
inc
inc
mov
mov
push
int3
sahf
incl
push
lds
add
cmp
and
jecxz
les
mov
cmp
lods
cli
je
jp
cmp
rcrb
push
les
hlt
int
repnz
sti
inc
mov
incl
mov
lret
xor
xchg
dec
and
lcall
mov
hlt
sub
ljmp
jo
out
sbb
add
cmp
shr
jmp
mov
inc
inc
pushf
imul
ss
cmpsb
mov
inc
push
cmp
add
xlat
mov
dec
popa
cmp
fsubl
xor
fs
sar
mov
lods
push
call
aam
fs
adc
push
pop
pop
or
jecxz
jbe
inc
ljmp
sbb
xor
arpl
mov
inc
add
adc
inc
cltd
fdivl
mov
jmp
out
mov
lods
xchg
mov
inc
xchg
fsts
add
xor
xchg
xor
mov
fmulp
xor
push
enter
ret
cmp
aaa
sbb
int
dec
sub
jmp
or
xchg
ds
cmp
in
sbb
scas
mov
shr
inc
call
cmpsl
sbb
jp
add
xchg
adcl
xor
sbb
inc
cli
mov
push
push
or
outsb
inc
lods
je
daa
loop
sbb
and
arpl
icebp
add
inc
loope
pop
loopne
xor
sarb
pop
lock
imul
shrb
xchg
lcall
inc
inc
add
in
cli
xchg
adc
lds
xlat
fdecstp
xchg
daa
insl
in
adc
push
minps
out
jmp
pop
and
lret
ficoml
lret
pop
mov
aaa
gs
ret
inc
lods
dec
add
jge
jns
mov
lret
int3
into
or
and
movsl
add
cmp
inc
insl
es
incl
jno
push
and
jnp
shlb
sarb
mov
aas
jbe
mov
push
test
arpl
decl
add
out
cltd
dec
cmpsb
push
and
pushl
fisubrl
leave
xchg
stos
push
adc
scas
dec
adc
into
cmc
lahf
mulb
push
lret
arpl
mov
mov
pop
sbb
insb
jo
jecxz
lock
jmp
mov
fsubrp
icebp
jp
pop
nop
xchg
xchg
rolb
in
jg
mov
into
and
jne,pn
and
cs
std
js
or
icebp
add
sahf
push
clc
pop
cmc
ljmp
xor
cs
push
sar
lcall
int3
test
pop
cmp
ja
sub
incl
mov
sub
or
subl
jno
pop
scas
pop
inc
or
std
push
outsb
xor
or
pcmpeqb
ljmp
rcll
cmp
adc
or
pushf
int3
pushl
lcall
lds
outsl
xchg
mov
xchg
out
pushf
pusha
xchg
mov
out
clc
incl
mov
outsb
ret
sbbb
test
adc
pushl
ljmp
adc
orb
pop
cmpsl
pop
mov
out
decl
xor
movsb
leave
fwait
ljmp
lods
arpl
out
aad
xchg
ljmp
pushl
fadds
out
test
repnz
outsl
jg
adc
pop
enter
roll
decl
mov
mov
jo
jecxz
mov
jle
lods
popf
aam
sbb
lret
sub
incl
jmp
je
ja
loop
dec
push
cltd
push
lods
xlat
jnp
mov
aam
jg
loope
jmp
mov
ljmp
mov
and
out
add
fdivl
add
popa
or
fdivr
mov
sbb
iret
mov
mov
push
popa
jmp
movsl
enter
dec
je
shll
add
cwtl
dec
data16
pop
sub
sahf
shlb
decl
adcl
sbb
mov
sbb
and
xor
sahf
lret
test
sbb
gs
fsub
and
sbb
movsl
jmp
sahf
mov
adc
scas
adc
dec
jle
aam
mov
fdivrp
mov
cmp
jp
and
or
xor
decb
and
push
mov
fbstp
cmpl
push
fisttpl
jo
mov
out
jns
scas
cmpsb
fucomp
jmp
sub
shlb
dec
pop
jno
shlb
loop
pop
push
mov
mov
cmpsb
jl
adc
or
clc
test
xchg
stos
push
stos
jge
incl
leave
addr16
push
push
jecxz
cmp
add
push
mov
jnp
mov
mov
adc
pop
or
int
test
test
cwtl
fsubrl
lret
sub
xor
pushl
bound
cmp
adc
jb
movl
repnz
mov
adc
push
pop
ja
test
fnstsw
aaa
xchg
mov
and
inc
hlt
xchg
nop
mov
xchg
call
push
xchg
mov
out
shll
cs
dec
dec
adc
stc
jno
loope
jmp
icebp
jecxz
push
inc
cmp
bnd
out
mov
cmp
mov
mov
jmp
movsb
pop
mov
push
jge
into
cmpsl
mov
lods
jbe
lcall
ljmp
push
fimuls
cmp
ljmp
lods
fmull
mov
fimull
push
out
aas
push
incl
push
push
cmp
out
insb
mov
or
cmp
fildl
dec
push
js
shlb
out
pop
xchg
mov
sub
inc
push
incl
and
test
les
mov
mov
or
in
lret
shlb
xor
mov
fst
arpl
decl
mov
push
aas
inc
push
test
pop
pop
xchg
xor
mov
pop
and
call
mov
mov
mov
push
jmp
or
or
xchg
cmp
icebp
jg
inc
sbb
imul
mov
fs
pop
ljmp
filds
xchg
je
movb
cs
push
ljmp
pop
loopne
dec
test
sub
clc
push
mov
pop
fwait
sbb
repnz
fiaddl
call
leave
stos
push
adc
lods
cmpb
inc
fbld
cmp
mov
add
mov
push
lock
jl
mov
pop
jg
mov
mov
mov
cmp
push
sub
repnz
xchg
subb
cmc
fcom
jns
hlt
push
rcr
jne
iret
outsl
imul
and
es
cwtl
sti
fists
rcrl
sbb
or
leave
jmp
push
mov
xchg
xor
mov
jmp
aas
pop
ds
notl
das
insl
push
xchg
mov
insl
fcmove
pop
pushl
outsb
jns
cmp
mov
lret
mov
std
cld
mov
or
incl
xchg
aas
adc
pop
shr
mov
mov
mov
pop
scas
inc
jg
repnz
sbb
roll
enter
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addb
sub
dec
pop
in
insb
dec
fs
scas
nop
daa
jle
xchg
pop
leave
xchg
lcall
jo
push
nop
mov
scas
mov
iret
jnp
adc
dec
or
jae
mov
push
out
add
xchg
push
cmp
cmp
repz
push
insb
jp
iret
repz
pushf
mov
shl
repnz
out
add
adc
cmp
out
pop
outsb
mov
out
int3
fdiv
dec
repz
adc
sub
inc
dec
push
jb
mov
repz
out
sahf
out
sub
ss
out
sahf
dec
push
insb
xchg
mov
aam
shl
sub
and
inc
xchg
add
call
fs
insb
bound
jge
sti
out
inc
imul
push
aaa
dec
adc
inc
xor
push
cmp
lahf
adc
push
xor
ja
pop
push
imul
xchg
adc
push
push
pop
call
shlb
cli
mov
pop
sbbb
xchg
hlt
stc
dec
xchg
dec
incl
xchg
xchg
lock
xchg
orl
call
adc
xchg
sti
jg
loop
rcrb
push
test
or
sbb
adc
imul
les
jg
outsb
xchg
sbb
imul
dec
or
xchg
push
jp
xlat
in
dec
idiv
inc
hlt
dec
cs
subb
nop
ljmp
pushf
out
push
loopne
xlat
loopne
in
jge
sbb
jmp
cli
xchg
repnz
pushf
xor
lock
daa
std
xchg
sbb
ret
insl
jbe
stc
sbbb
ds
sbb
negl
sub
andb
std
in
cli
scas
jge
loop
sahf
jno
cwtl
pop
or
orl
loopne
cmp
jg
sbb
scas
mov
out
stos
popf
jo
outsl
inc
add
out
addr16
sahf
out
in
fwait
adc
dec
add
ret
aaa
cmp
movsl
or
cld
outsl
mov
out
push
sti
pushf
sub
lea
ret
idiv
push
repz
or
les
ror
or
sbb
fs
cmpb
sahf
push
add
movsb
daa
sbb
add
repz
sbb
jl
out
fs
inc
mov
enter
pusha
rorl
es
mov
mov
rorl
inc
add
xchg
xor
inc
xorl
xchg
icebp
fwait
push
add
incl
das
movsb
ret
ds
jmp
xor
out
cmpsb
lock
hlt
push
dec
idiv
mov
ss
xchg
pop
pop
sti
fwait
pop
add
xchg
cli
cmpb
clc
outsl
mov
xchg
fs
mov
sub
xchg
insl
imulb
loopne
std
aas
dec
add
or
add
divl
mov
inc
push
add
xchg
push
add
xor
xor
into
subl
push
iret
fstpt
jg
or
sbb
xchg
or
fcomip
add
loopne
out
xchg
pusha
add
mov
mulb
call
or
xchg
pop
add
push
testl
jns
data16
mov
or
or
out
repnz
mov
cmp
lods
add
xchg
stos
cmp
test
xchg
insl
jno
gs
ret
stc
pusha
sti
mov
push
in
push
hlt
xchg
pop
or
or
push
lea
or
push
or
adc
repz
adc
adc
insl
popa
cwtl
out
ficoms
xchg
clc
mov
push
hlt
call
outsl
xchg
mov
scas
jge
cmpsb
mov
xchg
daa
test
pop
ds
outsl
insl
inc
mov
shll
hlt
fldt
xchg
shrl
push
fcompl
je
ljmp
fucomip
or
xchg
int3
jne
push
not
aad
repnz
hlt
aam
xchg
dec
sbb
ja
sti
jmp
imul
into
push
lcall
pop
xchg
jno
gs
adc
pop
inc
ljmp
xlat
lcall
cmp
enter
pop
data16
push
xor
or
ret
xchg
sub
mov
inc
decl
lods
push
mov
xor
adc
jecxz
ja
lcall
xor
mov
sbb
das
lcall
cmp
incl
fmul
and
movb
xor
adcb
xchg
out
bound
mov
out
out
cmp
add
jg
jle
sarl
jg
bound
jg
mov
inc
pop
add
fiaddl
mov
outsb
add
xlat
add
loope
push
lcall
inc
push
fdiv
pop
loope
lock
push
jl
jmp
cmpsb
sbb
lcall
loope
add
jmp
or
xor
gs
repnz
lcall
test
cmc
mov
xchg
loop
sub
xchg
pop
loope,pt
fs
and
call
cld
rcr
idivb
pop
jle
jmp
xchg
jge
bound
mov
loope
clc
imull
movsb
gs
movl
jne
dec
pop
std
xchg
or
imul
cmp
es
and
pop
jp
mov
pop
mov
inc
jg
sahf
fcomip
xchg
pop
out
sub
push
bnd
jp
add
arpl
pop
andl
cli
lcall
bound
out
pop
out
hlt
popa
jecxz
pop
mov
stos
sbb
fidivrl
es
ljmp
call
jns
pop
cwtl
shlb
xchg
inc
jg
scas
sbb
aad
push
lock
das
push
lock
cmpsl
adc
inc
orl
hlt
push
push
pop
lret
aaa
add
sbb
outsb
insb
dec
cmpsb
and
scas
out
sbb
jno
push
jl
push
jge
imul
push
push
mov
std
pop
or
adc
popa
pop
incl
xchg
xchg
loope
fistpll
loopne
push
das
sub
shlb
pushl
xchg
ret
aas
sbb
leave
cmp
jmp
push
push
int
push
jno
push
mov
jno
push
fistps
xchg
mov
sarl
out
aam
sahf
push
out
das
cli
popf
push
scas
fcoms
xor
ds
iret
fs
ret
hlt
push
xchg
sbb
mov
das
data16
sahf
int3
stos
inc
mov
xlat
dec
sbb
push
push
cs
xor
and
push
mov
jmp
pop
test
push
jg
test
mov
cmpsb
mov
dec
insb
cmpsb
push
in
jbe
push
inc
add
adc
in
ret
sbb
dec
test
mov
movups
add
push
lock
add
shrb
add
and
imul
je
jo
jmp
bound
arpl
js
push
inc
gs
jb
jae
push
xor
inc
pop
inc
xor
call
insb
push
insl
imul
ficoms
push
imul
inc
pop
xor
aaa
inc
inc
ja
jmp
pop
dec
outsl
push
xor
outsb
push
imul
xor
xor
push
mov
jae
dec
pop
inc
gs
jae
bound
imul
insb
dec
mov
bound
in
fldt
dec
cmp
inc
dec
xor
push
andb
push
dec
xor
ljmp
push
jbe
jne
cmp
imul
ss
ja
inc
dec
pop
ss
in
idiv
inc
aaa
push
push
insl
xor
ja
inc
inc
xor
pop
jno
inc
popa
cmp
inc
inc
jns
inc
inc
ljmp
pushl
jne
inc
inc
insb
fs
xor
jp
inc
jbe
push
xor
dec
dec
fs
or
jno
gs
xor
dec
arpl
bound
inc
jns
dec
push
fs
xor
das
mov
jns
dec
xor
jno
inc
push
xchg
cmp
insl
dec
dec
push
xor
call
pop
jns
arpl
js
push
dec
inc
inc
gs
jno
push
dec
xor
popa
inc
dec
xor
jns
pop
pop
imul
xor
xor
pop
lock
movsb
fs
dec
dec
xor
outsl
out
arpl
push
fistps
dec
inc
je
dec
jno
outsb
push
push
xor
adc
inc
adc
add
mov
sub
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
insb
sub
mov
ss
aaa
call
inc
add
dec
push
add
loop
cmc
xchg
dec
add
push
std
jg
add
or
add
or
addb
addb
testl
addl
orb
push
jp
insl
push
add
xchg
adc
adc
add
fstpt
test
nop
add
dec
sbbl
xorb
jae
bound
out
mov
fs
aam
push
orl
inc
or
arpl
data16
pop
cld
incl
and
add
sarl
rolb
rorb
add
add
sub
imul
idiv
add
add
cmp
out
or
mov
lods
or
inc
adc
mov
repz
dec
rcr
sbb
das
push
push
addr16
lahf
mov
ss
jnp
movl
paddusw
sub
push
ja
fcmovnbe
lcall
fyl2x
dec
or
xor
inc
imul
mov
dec
xchg
fwait
pusha
jno
inc
adc
add
fsubrs
pop
int
add
push
push
add
in
fnstcw
out
dec
jnp
add
pop
int
mov
mov
popf
xchg
fwait
dec
pop
or
push
xor
leave
data16
pop
and
pop
filds
mov
mul
pop
xor
int
add
pusha
push
aaa
cmp
xor
rcrl
sbbl
cld
in
adc
or
pushl
or
add
imul
add
loopne
jnp
mov
pop
subl
mov
mov
sub
fcmovb
dec
ret
jno
addb
and
push
xchg
orb
mov
pandn
sbb
lret
add
shrl
lods
dec
popf
popl
sti
daa
stos
aas
push
daa
sbb
add
mov
movsl
inc
sbb
add
dec
sub
mov
int
in
imul
mov
push
xorl
dec
shll
pop
bound
sbb
jmp
into
imull
out
inc
mov
pop
lcall
push
push
inc
and
test
jmp
loope
test
loope
shlb
fidivrl
push
sub
xchg
add
fisubrl
dec
xor
fimuls
fildl
mov
sbb
call
cmp
sbb
pop
in
pushl
push
pop
out
iret
leave
popa
or
or
adc
cmp
push
iret
fwait
inc
adcl
ret
jl
insl
jbe
ds
jge
ficompl
sbb
icebp
loopne
fisttpl
decb
aad
pusha
out
rcll
push
jo
dec
xor
fisubl
adcl
cmpsb
cmp
add
stc
adc
fidivrs
shlb
mov
dec
bound
sbb
adc
inc
push
mov
lock
push
lds
aad
sbb
arpl
mov
imul
fimull
xor
std
sahf
sbb
jmp
out
push
jbe
imul
mov
jnp
cmpsb
std
mov
cmp
add
cmpsl
xor
test
sbb
sub
push
lods
mov
mov
xor
push
sub
push
lock
addl
repz
out
shl
cmpsl
mov
add
gs
lcall
test
dec
jge
add
js
cs
std
cmp
jo
adc
sub
lock
fisubl
in
adc
sti
aaa
or
xchg
sub
ja
cmpsl
mov
sub
or
hlt
or
xchg
xchg
xchg
jno
test
rorl
loope
aaa
cmp
and
std
jo
mov
or
pop
mov
add
xor
stos
in
lock
imul
xor
vmaxsd
aad
mov
add
dec
lahf
cmp
cld
sbb
mov
repnz
ret
lcall
push
mov
mov
es
add
push
stos
mov
dec
inc
mov
adc
or
jb
ja
in
aas
fiaddl
and
ja
pop
out
inc
mov
inc
das
mov
cld
ljmp
cli
push
pop
mov
pop
add
out
inc
fwait
dec
mov
jg
fcomip
mov
lock
movsl
or
add
push
sbb
mov
add
or
pop
cwtl
jno
add
inc
add
dec
aaa
ds
call
mov
rorl
imul
ja
data16
push
jae
jne
pop
mov
add
and
dec
inc
daa
jne
imul
pop
cld
mov
adc
outsb
push
jb
xor
cwtl
out
add
mov
adc
inc
pop
add
adc
push
add
inc
and
addb
sbb
aaa
and
mov
rolb
das
test
push
push
adc
push
xor
push
push
add
or
xchg
andb
sysret
jg
ja
add
movsb
cld
mov
adc
pop
sub
add
xchg
add
push
or
add
cmc
or
add
xor
mov
test
inc
add
es
mov
mov
add
add
and
lock
push
adc
sbb
jo
cmp
mov
cmp
add
lock
inc
pop
or
aaa
xchg
push
movsb
dec
cmp
adc
pop
adc
push
add
push
inc
jp
pop
xor
adc
push
ljmp
int
adc
out
mov
addl
faddl
jg
sbbl
add
jb
iret
enter
fisttps
lahf
aaa
sbb
mov
add
or
push
rclb
aaa
jo
imul
add
cmpl
ljmp
xlat
add
pop
add
iret
aam
pop
jno
xchg
and
sbb
stc
ffree
lcall
rcrb
fimuls
loopne
jnp
arpl
orb
fcmovu
sub
cmp
fwait
mov
mov
xchg
mov
push
pop
imull
inc
lock
lds
fildll
jnp
mov
lock
movsl
mov
dec
and
lock
xchg
add
xchg
cltd
out
push
xorl
sahf
or
sbb
push
outsl
rcll
fwait
out
push
and
sbb
int
aas
xor
daa
sub
in
pop
dec
imul
lret
adc
push
push
adc
mov
push
dec
inc
imul
xor
mov
insl
insl
xchg
imul
sahf
addb
adc
cmpsb
pushf
out
push
dec
dec
rclb
inc
cmpsl
jb,pn
add
push
xor
shrb
pop
cwtl
cld
sbb
adc
lock
pop
and
jo
mov
lcall
movsb
fimuls
mov
ret
sbb
hlt
loopne
xor
xchg
clc
lock
stos
inc
sbb
mov
adc
mov
add
ja
jo
shr
or
mov
lock
clc
push
cmp
sbb
rcl
pop
mov
mov
notl
fistpll
sahf
iret
in
pop
sub
add
or
xchg
div
or
imul
nop
dec
sbb
cli
jo
push
les
inc
cmp
ljmp
cmp
push
push
sbb
push
inc
inc
pusha
rcrl
dec
or
mov
dec
mov
add
pushf
loop
insb
pop
xchg
sbb
push
lods
add
in
imul
cltd
or
imul
ret
cmpsb
mov
sbb
pop
jo
xor
sti
push
call
inc
shr
or
sub
cmp
xchg
lods
or
ret
adc
and
xor
inc
push
movsl
mov
jl
pop
fisubrl
into
cmp
test
fdivrs
add
add
ja
imul
sub
arpl
jmp
push
call
dec
push
dec
add
lods
in
call
push
adc
sub
mov
je
push
push
pop
add
push
lods
test
mov
rorb
add
and
fisubl
stos
scas
iret
or
inc
stos
mov
or
imul
add
stos
push
inc
inc
scas
or
lret
stos
insb
pop
mov
push
cmpsb
stos
pop
lock
aas
xorb
mov
insl
in
stos
imul
add
dec
push
stos
pop
or
imul
push
stos
dec
push
int
inc
sbb
lods
mov
sub
jg
dec
andb
add
add
cmp
sub
stos
out
mov
mov
dec
stos
ss
enter
add
sbb
adc
addb
or
dec
sbbb
or
pushf
dec
dec
fcmovnu
pop
jnp
mov
pop
stos
arpl
pop
in
in
imul
push
inc
or
je
lods
insl
fisubl
push
or
or
stos
and
mov
lret
mov
repnz
stos
test
es
inc
orb
xlat
repnz
lock
addb
addl
outsl
pusha
movsb
add
orb
mov
dec
insb
push
adcb
or
adc
mov
add
push
rcrb
ds
push
notl
cld
mov
lcall
lods
shlb
rclb
xlat
or
rorb
or
or
shl
in
fistpl
ja
xchg
or
sarb
or
rclb
or
jnp
notb
lock
pop
or
rolb
or
test
stos
sbb
rorb
rcrl
jmp
test
push
fwait
cltd
movsb
fldt
loopne
jp
adc
push
mov
or
in
repz
pop
or
rcrb
sbb
or
fstpt
xchg
rorb
or
nop
mov
or
sub
out
jne
dec
mov
pop
and
out
push
adc
add
and
mov
fwait
aaa
xchg
inc
sarb
popf
imul
add
cmpb
push
mov
pop
or
out
add
dec
pop
sub
jge
iret
add
dec
jae
shlb
push
rcr
dec
sub
pop
cmp
lds
inc
jbe
icebp
pop
sub
mov
rcll
sub
out
dec
in
shll
or
mov
pop
mov
sub
xor
push
loop
mov
insl
add
loopne
aas
aad
dec
outsb
and
or
loope
or
mov
loopne
jmp
jnp
push
cmc
inc
push
mov
mov
push
push
or
and
mov
das
clc
xchg
jge
loopne
mov
or
lahf
cmpsb
inc
and
mov
adc
sbb
mov
fisubs
adc
inc
inc
mov
and
sub
push
in
lret
or
or
lock
mov
jecxz
add
lret
mov
mov
add
push
jo
xor
outsb
mov
push
in
aaa
je
jg
scas
jle
jmp
mov
mov
dec
xor
cmc
mov
mov
stc
sbb
mov
dec
fistpl
call
dec
sub
ret
cmp
xor
rolb
push
lods
add
mov
push
mov
cmp
imul
mov
ds
rcll
fstpt
jecxz
in
or
sbb
or
cmp
sub
dec
and
mov
movb
cld
and
jg
push
push
pop
cmp
jae
pop
lock
jnp
cmpl
jp
ror
sar
xchg
cwtl
adc
decb
mov
xor
mov
or
fwait
in
out
push
sbb
cmp
cmp
adc
cmp
cmp
cmp
fildl
cmc
xchg
pop
jg
xchg
dec
cmp
mov
xor
jl
out
inc
divb
sbb
cmp
cmp
cmp
pop
fstpt
cmp
cmp
adc
sti
cmp
nop
inc
mov
inc
sub
push
call
negb
inc
testb
mov
add
sub
cmp
push
cmp
adc
outsl
fwait
cmp
cmc
lcall
fadds
and
pop
stos
test
push
mov
cmp
cmp
cmp
cld
in
pop
push
cmp
dec
cmp
pop
cmp
imul
push
push
pop
enter
lahf
mov
xchg
mov
das
clc
mov
inc
fstpt
jecxz
jmp
repz
cmp
cmp
cmp
cmp
fcomip
dec
not
add
jg
lcall
mov
nop
dec
adc
cmp
cmp
cmp
cmp
cmp
sub
xlat
cs
add
add
adc
loop
sti
jl
pop
clc
ja
mov
inc
cmp
mov
lock
cmp
push
cmp
imul
adc
cmpl
jl
dec
add
mov
clc
jb
ja
enter
and
mov
inc
inc
jg
repz
test
xor
shlb
or
adc
aas
jp
mov
popf
in
xor
jb
aaa
iret
sub
pop
mov
sti
inc
inc
xor
aaa
outsb
aaa
ja
jae
jnp
xchg
mov
xchg
xor
jg
xor
add
filds
push
lret
sub
imul
into
lcall
stos
outsb
jno
xor
push
sub
xor
cmp
add
xor
or
mov
push
sbb
push
mov
sti
mov
scas
xchg
stos
aad
shl
mov
xor
xor
xor
and
scas
sub
add
loop
inc
pop
fistl
xchg
add
int
mov
add
add
fcmovnbe
std
incl
movsb
cmp
cmp
cmp
cmp
cmp
or
dec
pop
jb
fcomip
dec
repz
popa
cmpsl
jbe
aad
add
in
jne
mov
ss
cmp
mov
and
jnp
cmpl
sub
cmp
cmpsl
popl
pushf
jg
push
pop
pop
inc
idivb
scas
xchg
subl
clc
sub
adcb
inc
mov
cmp
adc
add
mov
cmp
push
mov
iret
ret
mov
xor
sbb
lahf
mov
ret
scas
cli
fwait
cmpsb
arpl
jno
fcoms
pop
aaa
cld
mov
aaa
fidivl
icebp
aaa
and
divb
dec
imul
xor
fisubrl
inc
dec
arpl
cwtl
pop
inc
add
cwtl
out
adc
arpl
push
xor
jae
add
xchg
mov
mov
xor
mov
aaa
std
add
insb
js
aam
mov
cltd
js
jp
mov
pusha
xchg
xor
xor
xor
xor
xor
push
xor
clc
mov
lock
inc
jle
mov
inc
scas
pop
cmc
call
xchg
add
sbb
lcall
xchg
addb
test
shll
xor
sbb
and
pop
lahf
repz
add
aam
decl
out
mov
inc
jp
xchg
dec
movsb
xor
add
lock
pop
andb
les
ds
mov
outsl
jg
sub
and
mov
adc
push
int3
clc
fcomip
lret
rcll
clc
sti
mov
lds
inc
mov
lcall
mov
xchg
jge
sbb
out
xchg
int
sbbl
cmp
sbb
cmp
or
sbb
shlb
pop
xchg
imulb
mov
and
jg
hlt
ret
out
lods
jl
mov
xor
adc
sbb
enter
jnp
cld
pusha
or
sahf
rorl
mov
int3
lock
xor
mov
fs
dec
or
add
movsb
mov
or
std
inc
mov
mov
add
inc
mov
adc
je
fstpl
aaa
enter
das
clc
pushl
cli
les
popaw
mov
ret
movsl
cltd
push
sbb
add
addr16
clc
pop
cmp
pop
out
dec
add
fidivl
push
sbb
lock
mov
sbb
inc
jmp
mov
movsl
mov
xor
decl
jecxz
sub
dec
adc
pop
clc
jge
shrb
clc
decl
jl
sub
adc
adc
cwtl
add
mov
jg
sub
cld
add
int
addl
pusha
les
sti
into
pop
mov
pop
sbbb
gs
cwtl
jge
mov
jg
pop
fcmovbe
dec
mov
gs
inc
add
mov
jg
cmp
das
and
add
enter
icebp
push
insb
movsb
add
imul
push
sbb
xchg
insb
push
cmp
add
addr16
or
mov
or
mov
jge
sub
push
add
scas
inc
aaa
push
mov
add
add
ljmp
jmp
adc
adc
pushf
xlat
sbb
fwait
shll
test
rorb
inc
xor
mov
imul
push
push
cmpsb
mov
mov
adc
jo
aam
popa
roll
pop
outsl
mov
rclb
shll
shrb
fcmovbe
mov
lods
fistps
push
mov
aad
into
les
aam
loop
inc
push
cmp
addl
lcall
add
daa
es
lock
and
test
mov
ss
idivb
push
data16
jmp
outsl
outsb
insl
insb
imul
push
jae
and
jg
jge
add
pop
icebp
lcall
incl
testb
jp
inc
add
mov
add
pushl
xbegin
push
add
add
femms
inc
add
outsl
clc
or
or
add
or
popa
add
add
ficompl
flds
push
bound
mov
add
or
fcomp
mov
push
add
movsl
dec
filds
mov
add
scas
adc
lods
push
pop
push
lods
arpl
stos
repz
jg
push
jle
test
jl
mov
push
mov
faddl
jo
push
mov
push
mov
pop
push
mov
rolb
pushw
mov
bound
mov
fiaddl
mov
jnp
movl
ret
push
rcll
out
incb
push
iret
push
or
int
push
lret
push
sbb
xlat
push
pop
push
out
cmp
push
aad
push
rclb
push
push
filds
pop
push
fidivrs
mov
imul
adc
out
push
push
in
push
loop
cmp
repz
pop
push
out
push
or
in
push
push
jmp
sbb
call
aaa
jg
push
push
push
testb
push
dec
push
repnz
push
incl
pop
push
incb
push
cld
push
jbe
stc
fs
clc
scas
add
in
pop
ror
add
add
aaa
roll
adc
push
mov
or
xor
sbb
dec
lock
mov
add
daa
adc
sbb
imul
pop
mov
cltd
add
push
rolb
sbb
add
mov
fnop
insb
ret
add
add
rclb
cmp
add
fnop
ficomps
popa
push
mov
push
mov
inc
xor
lcall
and
xor
add
adc
add
outsb
lcall
sub
adc
rorb
dec
add
inc
adc
add
push
aam
rcrb
adc
mov
push
add
xor
adc
loopne
sub
adc
add
or
inc
or
dec
push
gs
loope
add
or
cli
cli
add
ds
push
jns
cmp
cmpsb
add
aaa
movsb
add
adc
and
mov
add
aaa
mov
movsb
aaa
scas
add
lods
add
stos
add
aaa
stos
add
test
outsl
out
add
mov
sti
aaa
mov
movsl
mov
mov
out
mov
scas
aaa
mov
lods
mov
lods
aaa
mov
stos
mov
add
mov
add
mov
mov
out
add
movb
lds
ret
aaa
les
sar
outsl
inc
add
aaa
ret
roll
aaa
rolb
iret
add
aaa
into
add
outsl
out
int
enter
aad
add
aaa
lret
leave
add
aaa
out
out
add
xlat
add
aaa
add
aad
out
aam
in
stc
or
roll
jecxz
rolb
loope
roll
out
aaa
rolb
out
filds
in
aaa
fiadds
fwait
mov
add
aaa
faddl
ljmp
hlt
flds
cmpsb
dec
stc
pushf
aaa
fadds
fwait
add
add
dec
in
movb
adc
add
ret
add
add
add
sar
add
add
add
iret
add
add
add
int
sub
int
lret
add
add
add
leave
add
add
add
xlat
add
add
mov
ss
xor
roll
xor
rolb
mulb
xor
add
add
adc
add
add
add
insl
out
fldl
cmp
out
inc
add
add
add
out
push
repnz
inc
adc
add
loope
inc
loopne
inc
add
add
out
out
add
in
add
add
add
add
out
out
add
add
testl
add
add
mov
pop
add
movsb
add
add
mov
mov
add
mov
pop
adc
mov
add
lods
add
add
add
cld
lcall
add
mov
add
mov
std
out
pushf
add
add
mov
adc
mov
fistpll
movups
fwait
mov
mov
add
mov
add
mov
stc
or
movl
add
add
les
inc
repnz
mov
add
adc
add
cld
add
lret
jbe
jbe
add
into
add
push
add
adc
add
push
add
lret
push
add
adc
add
add
cld
insl
int
cmp
add
add
aam
inc
add
add
int
rolb
inc
add
add
rolb
xor
faddp
int
cld
add
add
faddl
dec
add
add
add
insl
insl
add
fadds
dec
push
add
push
add
adc
add
jo
adc
loop
adc
insl
insl
add
adc
add
add
adc
add
cmp
insl
add
adc
add
ljmp
popa
ror
fucomip
add
add
add
testb
mov
daa
outsl
out
mov
add
add
icebp
adc
add
out
add
incb
sub
std
add
cld
add
mov
sub
cli
add
add
add
clc
add
stc
fistpl
movsl
pop
popl
pop
mov
mov
pop
lods
mov
pop
cld
fistpl
mov
mov
test
pop
adc
divb
ja
sub
mov
pop
stos
mov
test
adc
insl
mov
int
mov
xchg
mov
mov
pop
int3
add
outsl
out
pop
mov
pop
leave
add
pop
xchg
lds
xchg
add
pop
xchg
out
inc
pop
xchg
add
pop
xchg
roll
add
pop
nop
iret
pop
lahf
add
pop
sahf
outsl
out
int
popf
add
pop
pushf
lret
pop
fwait
add
pop
lcall
out
pop
cwtl
xlat
pop
cmpsl
add
pop
cmpsb
aad
loopne
outsb
push
loopne
pop
mov
pop
mov
add
int
cld
int
scas
fiadds
scas
add
pop
mov
pop
mov
in
mov
cld
int
cld
pop
mov
loop
mov
pop
mov
loopne
mov
pop
mov
int
in
pop
mov
jmp
mov
jmp
int
cld
int
mov
testb
cmc
pop
les
pop
int
cld
pop
ret
add
pop
ret
roll
sar
iret
add
pop
into
add
mov
mov
movsl
ud2
and
add
mov
es
outsl
mulb
syscall
and
shld
mov
setl
setp
xcrypt-ofb
cmpsl
test
scas
and
bts
packsswb
punpckldq
cld
int
cld
rdpmc
and
nopl
and
jg
psrlq
leave
pmullw
pcmpgtd
fisttpll
test
fmull
test
fisttpl
cs
mov
fmuls
das
call
push
and
add
xchg
es
setbe
mov
es
sete
and
and
and
xchg
and
push
push
aaa
sti
negb
jecxz
or
loop
or
out
push
or
aaa
sti
mulb
in
push
pop
inc
in
push
pop
and
cmp
ljmp
out
add
and
push
mov
cmc
push
mov
hlt
push
mov
bnd
icebp
push
xor
lock
sub
decl
scas
ljmp
daa
movsl
or
daa
mov
out
adc
or
daa
scas
or
daa
stc
pop
jmp
lods
or
and
or
push
out
decl
push
adc
push
mov
pop
es
pop
add
or
adc
cs
mov
sub
or
pop
xor
or
lock
mov
adc
or
and
or
mov
sti
fistpl
leave
or
test
xlat
or
push
call
aam
sbb
in
outsl
adc
or
xor
daa
fisubs
test
loope
jle
stos
and
or
mov
test
fwait
mov
or
mov
jecxz
mov
push
mov
or
mov
out
or
mov
mov
mov
jmp
fs
or
bound
insb
inc
idiv
and
push
pop
cmc
or
jg
fcmovnu
repz
push
and
or
inc
and
or
aaa
std
or
test
cmp
mov
mov
add
mov
or
add
ss
or
lds
and
outsl
aaa
xor
or
rorl
int
pop
and
add
ds
or
and
or
and
or
cmp
fisttps
fisttpll
sti
or
and
rorb
daa
out
xlat
add
add
or
adc
or
add
outsl
out
or
loop
rolb
loope
shl
or
add
or
out
out
or
add
or
in
or
add
or
ljmp
outsl
out
call
or
testb
add
or
hlt
or
add
outsl
out
or
repnz
add
or
lock
add
or
sbb
add
or
add
or
add
mov
mov
adc
or
mov
or
scas
or
fnstenv
jg
or
or
stos
or
stos
or
or
mov
or
push
or
adc
mov
fwait
mov
or
or
adc
mov
stc
fwait
mov
or
mov
sbb
mov
fwait
mov
or
or
or
or
ret
stc
fwait
mov
or
or
or
rorb
or
or
mov
or
or
or
lret
or
lret
or
or
enter
xlat
or
or
or
or
mov
or
rorb
xor
rorl
xor
or
or
or
mov
or
or
or
fmuls
cmp
or
out
fwait
mov
or
in
inc
jecxz
inc
or
or
or
fwait
mov
or
or
out
or
or
in
or
fwait
mov
ljmp
testb
cmc
or
hlt
or
repz
repnz
or
lock
or
aaa
cld
pop
or
or
repnz
movsl
or
mov
int
adc
or
mov
or
scas
or
lods
int
cld
int
cmp
stos
or
stos
or
ss
int
cld
or
ss
inc
mov
inc
ss
inc
mov
inc
ss
inc
int
mov
inc
ss
inc
mov
inc
ss
dec
ss
or
or
or
or
mov
int
cld
or
or
or
lds
push
les
push
ss
or
cld
int
ret
rorl
rorb
ss
or
or
int
int
pop
int3
or
or
or
leave
or
icebp
int
cld
or
xlat
or
or
aad
gs
fs
push
repnz
rorb
lods
push
fistpll
adc
or
fmull
test
fstpt
adc
or
fmuls
mov
out
cmp
or
in
mov
jecxz
cmp
or
loopne
mov
mov
or
in
or
mov
or
push
jmp
push
testl
jbe
testb
ss
or
hlt
or
repnz
cld
or
lock
decb
notl
std
push
outsl
or
push
clc
daa
mov
mov
push
push
mov
adc
push
cmpsl
daa
add
daa
mov
mov
movsb
or
mov
mov
sub
scas
daa
scas
cmp
lods
daa
add
jl
psubb
dec
imul
add
or
push
xchg
shlb
sub
cmpsb
push
dec
repz
add
push
and
push
es
xor
repz
lock
mov
gs
sbb
lock
and
lock
jo
daa
or
mov
dec
mov
mov
mov
or
jbe
add
xchg
shll
and
int
and
pmaxub
fwait
sbb
test
lcall
push
sbbl
add
dec
dec
shrl
sbb
push
addr16
xor
xchg
cmp
bound
add
pop
xchg
outsl
xchg
mov
subl
fcmovnb
or
stos
lds
jo
les
out
data16
bound
jo
push
movsl
jmp
jg
jle
cli
jge
cmpsb
jns
dec
jl
int
int3
jp
mov
and
out
push
mov
sbb
lcall
aad
aam
sub
imul
out
in
in
sbb
int3
movsb
lock
push
in
in
lock
mov
push
push
in
cld
and
or
mov
adc
adc
adc
pop
push
sbb
sbb
push
mov
pop
das
cs
sub
mov
add
ds
loop
cmp
inc
test
push
ret
mov
inc
std
xchg
jb
pop
pusha
pop
pop
pop
pop
mov
cmc
cmc
add
js
xchg
orb
decl
xchg
xchg
xchg
xchg
sub
popf
pushf
in
lcall
cmpsl
cmpsb
movsl
movsb
js
mov
lods
stos
stos
test
dec
jg
mov
push
mov
mov
mov
mov
les
ret
inc
rol
into
int
add
lret
xlat
aad
add
rcl
rcr
faddl
fcmovnu
out
incl
sbb
loope
out
out
in
in
cli
ljmp
add
jg
std
push
icebp
lock
std
cld
lock
cli
stc
clc
decl
add
add
cmovbe
inc
inc
popa
incl
inc
dec
dec
dec
dec
dec
dec
dec
add
push
push
push
push
push
push
lock
pop
pop
pop
push
jg
mov
or
loopne
out
and
add
add
add
sub
add
dec
test
adc
sbb
add
mov
lock
cmpb
roll
jo
sahf
xor
push
sub
or
pop
repnz
ljmp
cmp
add
jg
jl
je
xchg
inc
rcll
mov
sarb
sbb
sbb
add
and
pop
or
mov
jmp
push
sbb
jbe
adc
pop
push
outsb
outsb
adc
add
add
add
loopne
add
lahf
cmp
pop
imul
aaa
jb
add
pop
cs
sahf
push
shl
std
scas
mov
inc
xchg
adc
push
cmpb
sbb
std
arpl
fstps
or
fwait
jg
lcall
ret
push
xor
test
stos
test
rorl
mov
ljmp
mov
add
mov
cltd
push
repnz
pop
cmc
ja
xor
iret
fbstp
pop
push
lock
mov
daa
ret
mov
dec
add
sub
ret
fcomps
lea
cld
nop
xor
pusha
xlat
sbb
in
pop
push
adc
ljmp
roll
fwait
dec
sub
inc
xor
ss
gs
js
cli
mov
inc
sub
sub
jno
and
sub
fwait
es
cltd
in
movsb
jge
mov
xor
fists
es
loope
dec
faddl
in
loop
roll
sub
loop
fsubl
adc
lret
cwtl
or
test
xchg
rolb
adc
es
out
aas
subl
in
mov
inc
inc
ret
iret
clc
test
out
add
mov
dec
or
cltd
pop
push
pop
fldl
mov
sbb
push
and
push
dec
mov
stos
rolb
or
adc
add
push
add
push
jle
bound
jne
aaa
shrl
add
inc
arpl
bound
add
data16
outsb
gs
loop
fwait
loop
jle
push
and
inc
xor
jae
bound
adcl
push
sbb
add
xor
adc
dec
imul
sbb
int
inc
lret
stos
orl
orl
nop
jae
jae
sbb
imul
andb
add
push
ret
scas
dec
imul
fs
add
pop
or
push
push
pop
adc
lcall
adc
adc
subb
add
jg
addl
inc
dec
push
push
and
sub
roll
push
loopne
imul
fs
imul
push
and
or
ret
mov
inc
dec
gs
outsb
imul
jae
jae
outsb
add
mov
or
adc
dec
push
xor
mov
les
inc
adc
add
mov
fidivrl
sbb
inc
lods
inc
and
adc
inc
ss
mov
adc
push
pop
push
ljmp
xchg
lret
fsubrp
inc
add
or
bound
bound
incl
xchg
outsb
lods
mov
and
jno
add
add
loop
sbb
dec
shlb
cmc
or
std
ljmp
push
inc
adcb
inc
inc
add
add
pusha
xor
push
dec
stos
push
dec
sub
mov
inc
inc
push
inc
dec
inc
mov
inc
push
loopne
push
cld
jg
dec
and
dec
dec
push
bound
dec
dec
mov
dec
push
dec
push
fcomps
fnsave
push
inc
sub
add
jg
es
inc
push
addb
add
dec
dec
inc
loop
dec
test
lock
push
dec
mov
mov
adc
push
push
or
add
mov
add
loopne
dec
dec
les
dec
ljmp
mov
add
xor
aad
lcall
sub
xchg
movsb
jae
xor
imul
add
mov
jle
mov
das
fsubs
je
cld
sub
and
jecxz
jb
adc
icebp
idivl
outsl
jb
add
push
bound
sub
or
jg
loopne
loope
inc
pusha
adc
cs
mov
push
inc
sti
cmp
add
inc
adc
outsl
and
jae
dec
cmp
inc
sti
outsb
jb,pn
imul
xor
push
loopne
ds
jg
push
inc
orl
add
and
cmp
fiadds
sub
sub
adc
sub
push
fdiv
jg
sub
and
pusha
mov
outsl
ja
or
mov
sub
add
push
insl
inc
pop
inc
loope
bound
adc
add
and
dec
jg
fsubrs
cli
and
sbbb
cmp
cmp
or
mov
mov
add
les
pop
sbb
sbbb
dec
cmpl
add
inc
outsb
inc
shl
fistps
jb
outsl
inc
arpl
je
std
in
fbstp
aaa
adc
fs
out
dec
ljmp
mov
dec
fistps
xchg
add
and
lods
mov
or
std
cmp
inc
test
add
adc
ret
shr
add
cli
dec
inc
fwait
in
call
lea
push
hlt
lods
in
fsubr
cvtpi2ps
push
mov
mov
and
loope
xor
decl
add
loopne
add
jae
loopne
lret
outsb
ja
sbb
sbb
xchg
jmp
in
pop
jb
arpl
mov
cmp
adc
jae
ja
push
jl
add
xchg
inc
push
mov
outsb
je
mov
sub
dec
xor
and
lcall
and
das
pop
hlt
scas
cmpsb
je
outsb
push
jge
add
jno
bound
add
cmp
xchg
or
mov
pop
sbb
sub
cld
dec
lcall
add
in
sub
inc
daa
aaa
aaa
xor
pushl
pmaxub
add
in
mov
mov
xlat
aas
cltd
rolb
push
dec
cmc
aaa
shrl
add
dec
mov
inc
mov
outsb
push
inc
xor
push
adc
jo
jae
add
das
imul
push
cli
mov
jne
shlb
imul
sub
add
nop
add
add
xor
rorl
cmc
jg
mov
pop
shlb
shrb
roll
xor
mov
test
les
idiv
dec
push
adc
jo
stos
pop
xor
xor
xor
sub
ds
mov
jb
add
shlb
inc
push
or
pop
insl
mov
imul
cmp
add
outsb
xor
cmp
or
pop
ret
scas
cli
or
cmp
push
jmp
adc
or
in
incl
add
mov
push
xor
push
jo
push
rclb
jne
push
incl
or
punpckldq
push
vmwrite
mov
lock
and
mov
insl
xor
lock
fdivrl
cmp
push
nop
lar
push
movsb
dec
pop
dec
push
jno
decl
inc
push
or
xor
pop
in
rolb
dec
rolb
push
ret
stos
xchg
jg
inc
sbb
add
lock
sbb
and
push
adc
ljmp
subb
inc
sbb
and
add
sub
cmp
jg
push
add
add
andl
push
ljmp
dec
in
inc
xchg
dec
aaa
adc
outsl
cmp
jg
inc
out
push
aaa
push
add
sbb
sub
loop
sar
add
or
bound
stos
jb
inc
insb
repnz
imul
mov
xchg
lcall
xor
cli
push
xchg
popa
add
mov
mov
out
xor
sbb
pop
insl
mov
repz
and
imul
push
stos
das
cs
mov
in
arpl
mov
lds
and
outsb
popa
daa
in
jg
mov
loop
stos
jae
daa
adc
fucomip
in
pop
dec
inc
bound
push
push
arpl
sub
inc
js
mov
or
mov
daa
lcall
dec
das
cli
fldt
and
je
dec
xorb
inc
push
push
xor
ret
push
push
pop
mov
call
xor
pop
push
push
faddl
add
fstl
push
push
jae
inc
xchg
decl
mov
inc
pop
data16
data16
jnp
jno
mov
add
aam
not
shl
call
ret
int
enter
int
iret
lret
iret
shl
aad
int
faddp
stc
push
mov
pop
push
imul
xor
inc
call
pusha
mov
dec
imul
dec
jae
jnp
jae
incl
cmc
testl
shr
or
fcmovnbe
add
mov
mov
xchg
aaa
inc
mov
lcall
cmp
cmp
pop
lock
outsb
js
sub
push
pop
or
push
cwtl
or
sub
xor
and
adc
sub
add
sbb
and
add
repnz
xor
or
incb
cmp
sbb
or
or
adc
pop
add
sbb
je
add
cmp
jmp
loop
jg
cmp
and
add
mov
jmp
repz
in
clc
mov
icebp
hlt
mov
in
push
cld
out
scas
ljmp
pop
cmp
shl
iret
add
inc
jg
dec
jecxz
mov
add
mov
xchg
cmp
mov
xlat
mov
addl
call
incl
out
stc
out
fcom
fcmovne
fisubs
rolb
ret
aam
sub
shr
call
adc
clc
out
loopne
pop
cmpsb
add
mov
push
lods
icebp
rcrb
rol
xchg
lcall
mov
scas
scas
in
insb
mov
sbb
int3
adc
ffree
xchg
icebp
or
cmpsb
push
loope
cli
push
pop
push
sbb
pop
incb
dec
dec
rorb
push
push
dec
push
nop
js
fistl
faddp
fmull
pop
push
inc
inc
push
inc
push
fs
pop
dec
push
dec
push
push
jle
cmc
outsl
cli
je
dec
inc
dec
ret
push
jle
fs
data16
pop
orb
shlb
cld
mov
jmp
out
mov
mov
add
mov
rol
push
mov
add
movsb
xchg
xlat
adc
les
stos
jmp
mov
mov
add
out
mov
loopne
mov
test
sarb
mov
decl
mov
add
rolb
sahf
fwait
xchg
xchg
xchg
add
fwait
sbbb
dec
lret
add
mov
lock
jmp
out
or
sar
stc
xlat
test
add
scas
out
mov
repz
push
pop
mov
in
hlt
data16
or
pop
add
cmp
sub
adc
adc
adc
sbb
jp
sbb
or
sbb
clc
aaa
std
or
sub
jbe
stos
xor
sub
and
fucomi
xchg
daa
sub
and
xor
sub
jle
jbe
jle
jg
addb
into
clc
fmul
xchg
lret
ret
int3
cld
or
flds
rol
rcll
stc
jecxz
xor
pop
dec
clc
scas
out
in
repnz
or
std
add
out
jmp
incl
mov
or
add
icebp
mov
in
mov
add
push
insl
fs
incl
jae
add
jo
sahf
add
xor
or
ss
inc
aas
sub
and
cmpsb
push
xchg
xchg
xchg
xchg
popf
xchg
xchg
pushf
mov
cs
incl
lock
clc
div
std
icebp
ljmp
lcall
out
incl
addl
cmp
cmp
xor
es
sub
out
cmpsl
sti
cld
jmp
in
in
ljmp
divb
icebp
neg
hlt
in
mov
int3
push
mov
mov
mov
lock
ret
enter
clc
aam
leave
mov
int3
cmpsb
pusha
addr16
dec
jae
jge
jne
insl
inc
jg
outsb
mov
or
sbb
sbb
push
add
pop
xchg
xchg
xchg
xchg
imul
outsl
inc
jg
push
gs
aaa
xchg
test
les
sti
cltd
xchg
xchg
popf
daa
test
stos
scas
cltd
movsb
mov
cmpsl
inc
pop
dec
arpl
dec
push
push
push
inc
add
pushf
cltd
vfrczps
lock
test
dec
xchg
ja
pop
pop
add
pop
je
dec
inc
sarb
dec
pop
pop
push
push
sbb
push
call
or
sbb
daa
or
sbb
add
dec
xchg
sahf
xchg
shl
out
out
int3
loope
stc
jmp
sti
div
xchg
xchg
push
jae
inc
insb
outsl
pushl
std
jo
outsb
jg
bound
in
out
repz
add
sbb
or
or
jmp
push
shrl
fsubl
mov
jmp
in
jecxz
in
xchg
leave
fcomp
lahf
scas
test
stos
mov
clc
ja
push
data16
mov
pop
dec
jno
insb
insl
pop
dec
dec
mov
repz
ljmp
push
mov
jle
push
inc
pop
jae
inc
inc
dec
inc
pop
push
adc
inc
push
push
jb
out
outsl
inc
inc
jp
jne
popa
outsl
xchg
nop
pushf
fistps
mov
subb
adc
push
adc
das
xor
sub
sub
popa
jle
cmp
add
filds
adc
adc
or
sbb
or
xchg
mov
sti
clc
loope
call
cmc
psrld
bnd
repnz
out
push
dec
dec
pop
pop
jnp
ja
ja
jns
data16
addb
nop
add
mov
out
fisubs
mov
adc
or
mov
sti
call
dec
dec
pop
dec
pop
dec
ja
arpl
fs
push
jns
imul
jb
ja
jbe
ret
jle
std
cli
mov
ret
mov
in
push
xchg
loope,pn
mov
cli
ljmp
mov
mov
into
addl
xchg
xchg
fimull
sbb
inc
iret
mov
stos
xor
jl
scas
cmc
mov
cmpl
outsb
loope
fists
and
and
xor
xor
push
push
jmp
mov
add
in
std
sti
out
out
adc
incl
add
and
cmp
daa
sub
xor
insb
cmp
or
or
push
or
push
insl
daa
sub
sub
add
jg
ja
jno
jae
arpl
or
mov
ja
stos
pop
mov
inc
pop
push
pop
push
pop
mov
cmpsl
mov
cmpsl
mov
pushl
mov
addb
xchg
orb
mov
sub
cmp
sub
cmp
fwait
pop
icebp
sub
adc
jle
add
pop
xchg
xor
sbb
cmp
or
sti
cmpsb
add
cmp
and
adc
scas
mov
out
out
clc
cmpsb
mov
lahf
mov
mov
mov
mov
inc
inc
inc
inc
mov
adc
adc
in
mov
popa
imul
insb
imul
jg
insb
push
insb
xchg
pusha
and
loop
lret
lret
add
xlat
lret
fcmovne
int3
loope
cs
aam
stc
shr
sti
mov
and
fisttps
add
mov
ret
rcr
aaa
mov
in
add
pop
add
addr16
les
cld
call
ficoml
fcmovu
into
add
in
out
cmpsb
pop
cs
jg
std
sub
xor
cmp
xor
xor
es
lods
repnz
outsb
stos
aaa
insl
push
repz
in
push
lock
push
push
mul
loop
insl
add
sub
loop
cld
push
ffreep
enter
fmul
fmuls
xchg
and
jmp
cmc
mov
push
out
cmc
negl
sub
popf
add
lcall
ja
push
push
adc
adc
push
pop
pop
pop
push
push
inc
inc
push
sub
mov
inc
fs
dec
dec
adc
sbbb
aas
sub
pop
add
mov
or
cld
icebp
out
jmp
push
push
pop
push
dec
test
iret
int3
hlt
mov
stos
std
fst
fdivp
in
cli
lcall
int
mov
dec
movhps
push
adc
jl
data16
and
sar
push
xchg
jae
mov
in
test
sti
imul
jp
push
sar
mov
std
mov
mov
int3
lahf
lcall
sti
int
aad
movsb
mov
sti
jmp
out
fwait
mov
pushf
imul
cmpsl
call
mov
mov
movsb
loop
test
add
jmp
mov
push
cld
div
jmp
mov
leave
shll
in
in
push
dec
push
xor
jbe
repnz
dec
loopne
into
enter
rcr
adc
cmc
int
pushl
outsl
cmpsb
sbb
dec
dec
dec
pop
inc
push
add
test
cld
not
rcl
out
loopne
mov
push
push
dec
outsb
pushf
lock
rcr
enter
fsts
mov
iret
sti
add
faddl
mov
loopne
lock
pusha
jmp
test
pushl
shl
arpl
call
jo
and
or
imul
jle
xchg
jnp
clc
sti
pushl
inc
dec
dec
dec
js
inc
inc
push
inc
dec
sarb
pop
push
dec
push
dec
popa
jg
pop
push
inc
pushl
pop
xor
sbb
adc
sbb
xchg
xchg
popf
xchg
mov
fnstsw
mov
mov
es
mov
sub
roll
movsl
sbbl
lock
ror
fmul
or
jmp
idiv
call
cwtl
int
iret
fxch
loope
rcl
fst
rol
clc
fcmovb
aam
ret
loopne
call
lock
jmp
mul
cld
jecxz
call
mov
out
hlt
movsb
enter
add
xor
cmp
cmp
jb
aas
cmp
cmp
xor
mov
push
es
cmp
and
sub
sub
add
stos
lods
out
mov
mov
xorb
mov
pop
push
dec
dec
sbb
push
gs
push
inc
pop
inc
dec
inc
pop
pop
add
mov
mov
xchg
mov
cmpsb
cmpsl
cmpsl
in
test
fcomi
jmp
movsb
fisttpll
test
xchg
or
xor
push
incl
leave
into
pushf
lock
aad
daa
loopne
aaa
cld
push
pop
pushf
adc
add
adc
adc
cmp
jl
and
adc
or
das
xchg
fidivs
xchg
lahf
xchg
mov
adcl
or
call
rclb
sahf
call
cwtl
cwtl
add
fs
add
insl
data16
push
adc
js
xor
je
cmc
aaa
dec
mov
add
aad
add
cld
pop
sarb
addl
fcomip
decl
xchg
xchg
xchg
sahf
lahf
cwtl
fwait
test
cmc
in
fwait
fwait
jmp
aaa
sbb
dec
xor
imul
ds
insb
push
in
outsl
addr16
inc
jle
addr16
decl
incb
js
jb
jo
jne
push
insl
imul
push
out
push
std
decl
jg
push
inc
fs
inc
inc
pop
pop
push
cs
pop
dec
push
inc
out
call
jo
push
push
dec
inc
dec
pop
ja
inc
inc
dec
and
sub
daa
das
add
es
cmc
icebp
out
cli
mov
clc
loopne
loop
out
fdivr
jecxz
out
in
mov
sub
outsb
outsb
dec
int3
fmul
lret
rcrb
inc
cmpb
out
fdivrl
lcall
call
cwtl
repnz
cmc
in
leave
ffreep
fadd
xlat
out
sti
fcmovnb
rol
xlat
add
lcall
out
repnz
out
out
cli
loopne
in
lret
in
mov
xchg
mov
mov
sbb
or
ud0
sub
fimuls
push
cmovo
or
aaa
pop
or
or
adc
dec
cld
incl
push
xor
add
and
sub
addb
xchg
cli
outsl
clc
lcall
xchg
mov
xchg
ret
sahf
ret
test
add
repnz
lods
cld
xchg
shrb
shll
lods
mov
cltd
cli
push
loopne
mov
xchg
into
push
ficomps
sahf
test
jmp
loop
loope
in
repnz
mov
cmc
stc
jmp
lods
loopne
ljmp
jecxz
out
mov
fcmovbe
ret
lcall
mov
rcrb
aad
ret
mov
test
mov
mov
xchg
mov
mov
clc
shrl
in
mov
call
cmp
icebp
call
test
xchg
xlat
ret
adcb
popf
mov
jg
sahf
add
je
jp
jb
jp
adc
xor
jns
insl
lahf
pop
icebp
pushl
sub
jp
jns
jge
push
sbb
inc
bound
mov
inc
adc
dec
inc
push
nop
inc
ja
inc
push
dec
ja
decl
pop
cmp
and
xor
jp
cmp
jp
lods
and
pop
dec
sub
jle
add
sbb
sbb
adc
decl
sbb
or
sbb
push
dec
inc
dec
or
popf
in
cld
outsl
clc
ljmp
out
mov
loope
rep
sti
in
cld
loope
ret
call
fcompp
fadd
call
int3
fimull
leave
leave
lret
int3
push
lods
incl
ret
mov
fildll
mov
add
fwait
lods
mov
icebp
out
lock
lret
test
iret
out
lock
cld
mul
mov
lock
ljmp
mov
jmp
push
nop
sahf
mov
cld
incl
add
add
pop
push
push
pop
mov
mov
decl
jp
into
lret
fcmove
cmpsl
mov
cmp
push
mov
lcall
ds
ret
cmc
clc
call
jg
fstpt
sbb
lret
sbb
in
jecxz
mov
mul
aad
decl
out
push
jle
inc
push
imul
outsl
inc
pop
addr16
js
jl
inc
pop
inc
dec
call
rcl
fwait
mov
mov
daa
mov
stos
scas
xlat
enter
inc
js
mov
scas
scas
mov
mov
or
daa
and
cwtl
sahf
aas
cs
lock
sbb
pop
inc
xor
in
jecxz
mov
aaa
jecxz
in
sahf
pop
or
or
add
dec
inc
pop
dec
dec
pop
or
jg
popa
dec
inc
dec
inc
dec
dec
pop
push
mov
scas
mov
lahf
movsb
mov
scas
add
dec
fs
push
and
push
pusha
divl
sbb
scas
sub
into
inc
cmp
ljmp
mov
mov
das
stos
mov
test
orb
mov
adc
ljmp
out
jmp
mov
mov
jmp
mov
out
jmp
fmul
lods
cli
cmpsl
dec
fcom
fadd
fst
xlat
ret
push
mov
fcomip
add
lret
xchg
call
pusha
and
aaa
and
and
and
sub
aas
cmp
ss
xor
inc
dec
inc
adc
adc
sbb
incl
lcall
push
dec
dec
sbb
pop
das
sub
xor
cmp
sub
fsub
idiv
cmp
and
es
sub
add
and
out
fwait
mul
lcall
je
push
push
inc
inc
push
ja
pop
push
pop
push
push
pop
pop
add
out
mov
inc
dec
pop
dec
and
or
adc
pop
dec
cmp
dec
sbb
es
inc
das
and
and
mov
cmpsb
mov
mov
mov
pop
ds
lret
mov
push
lcall
test
xchg
xchg
test
andb
sbbl
loopne
cld
lret
push
pop
jns
jne
gs
push
int
sbb
and
inc
xchg
or
bound
je
xor
imul
test
cltd
mov
std
lods
mov
call
cmpsl
mov
mov
pop
add
push
pop
pop
push
pusha
sbb
insb
adc
adc
out
add
push
add
sahf
movsb
jae
loop
out
mov
or
stos
or
add
add
jg
push
or
std
ds
xor
negl
push
clc
mov
dec
xchg
jnp,pt
jno
das
lcall
loop
push
or
cmp
aas
cmp
outsb
push
and
aas
insb
addr16
ljmp
aas
cmp
outsl
popa
jl
and
push
cmp
add
or
pmulhrw
cmp
dec
add
arpl
push
je
cmp
imul
fbld
jae
fs
xor
clc
imul
decl
dec
dec
push
inc
inc
dec
adc
push
pop
pop
push
pop
push
jb
mov
push
daa
sbb
pop
pop
mov
push
add
pop
daa
push
fs
inc
pop
jbe
add
jmp
jmp
push
push
add
clc
pop
jl
xor
add
es
clc
push
clc
jb
insl
push
clc
adc
mov
das
mov
incl
mov
adc
into
lds
decl
adc
inc
out
inc
xor
add
sti
cmp
ljmp
rolb
mov
mov
jbe
and
cmp
pusha
mov
and
add
add
insl
in
fcmovnb
cld
mov
adc
jmp
and
add
sbb
push
pop
ret
in
add
mov
jae
jg
xor
cmp
fdivrl
pop
pop
jno
and
daa
jae
adc
jle
pop
add
test
clc
out
cmp
mov
outsb
or
outsl
dec
jne
pop
pop
add
and
mov
jne
or
push
xchg
add
sub
lret
cld
pop
cld
rorl
pop
xor
add
mov
adc
incl
xorb
add
daa
sub
xchg
insl
add
or
adc
push
pop
mov
aad
add
or
dec
pop
rclb
mov
lods
outsb
sti
arpl
aaa
xor
lods
clc
adc
push
mov
stos
cmp
jnp
sub
and
daa
enter
testl
mov
push
adc
les
rclb
mov
movsb
xlat
orb
pop
xor
cld
popl
pop
inc
inc
clts
push
mov
ret
mov
push
xchg
data16
aam
mov
lock
sub
adc
inc
out
adc
ljmp
js
sbb
in
out
or
add
or
adc
cld
imul
cld
add
mov
mov
mov
add
jecxz
jg
bound
rcrb
mov
adcl
rcr
dec
lock
xor
rolb
xor
dec
add
inc
add
or
stos
or
xchg
push
out
inc
add
movsb
jmp
add
cmp
nop
je
sti
jmp
pop
sbb
adc
or
jae
cmp
shlb
addb
js
popf
add
mov
push
shlb
mov
rclb
push
mov
enter
sbb
movsb
pop
cld
inc
pop
add
add
pop
les
faddl
jb
outsl
sub
and
pusha
jge
test
push
or
movsb
adc
add
enter
sub
pop
test
icebp
fcomip
push
add
add
add
add
mov
inc
xchg
iret
inc
sarb
int3
btc
rclb
outsl
push
mov
push
clc
aaa
cld
add
insb
sti
outsl
nop
push
movsb
movl
rolb
in
out
lcall
add
jns
jmp
movq
jb
mov
push
inc
inc
add
sbb
call
inc
sub
and
push
inc
pop
mov
clc
dec
jo
clc
sub
mov
push
sub
add
outsl
inc
sub
outsb
inc
xchg
int3
mov
insb
mov
ret
in
call
bound
inc
or
inc
xchg
xchg
lahf
xor
xchg
or
adc
or
jo
xchg
xchg
sub
sub
mov
popa
push
cmp
push
or
clc
in
scas
call
push
push
mov
iret
pusha
add
sub
aad
incl
mov
pxor
adc
inc
jl
push
inc
cmpsl
adc
clc
inc
inc
rolb
test
mov
jne
in
and
xchg
fimull
push
add
scas
cli
adc
and
add
or
sub
sbb
mov
cmp
push
add
loop
mov
in
insl
daa
xor
pusha
mov
movsb
inc
jnp
push
fldl
or
movsb
fwait
pop
rolb
es
test
or
aam
jmp
sti
add
mov
jnp
xor
add
push
stos
add
jg
inc
add
mov
out
lods
and
mov
mov
sbb
fwait
pusha
adc
lcall
add
cltd
test
rclb
sarb
sahf
outsl
and
test
adc
mov
cs
or
push
xor
lock
and
xor
test
mov
push
rolb
dec
xchg
jae
scas
xchg
jl
out
lock
shlb
mov
dec
pop
out
insb
push
mov
or
movsb
hlt
inc
outsl
pop
pusha
pop
mov
adc
not
add
sub
inc
subb
jae
pusha
cmp
mov
adc
inc
gs
and
push
out
outsl
loop
cld
ret
and
sub
jecxz
xor
pop
loopne
add
stos
jecxz
mov
loopne
mov
lahf
inc
sub
push
loope
mov
inc
inc
andb
dec
sbbb
push
mov
or
sti
rcrb
inc
mov
add
jb
inc
push
jnp
jbe
je
sbb
sbb
in
pop
roll
ds
movswl
pop
popl
mov
test
cmovle
mov
repnz
aad
push
rorl
add
and
adc
sti
out
clc
adc
fwait
inc
sbb
pop
shlb
sbb
push
push
and
mov
aad
and
xchg
loopne
hlt
adcb
pop
aam
inc
test
out
push
loop
adc
adcl
cmp
add
movsb
inc
das
cmpb
mov
shll
mov
mov
dec
sbb
or
mov
or
jb
mov
and
push
cld
cmpsl
and
out
jmp
ljmp
adc
xor
mov
add
mov
sub
jno
sub
sbb
loope
mov
or
mov
cli
mov
xor
movsb
push
and
or
das
loopne
in
add
stos
dec
cmp
mov
push
pop
mov
and
sub
pusha
push
xchg
and
mov
outsl
mov
xchg
inc
and
insl
add
push
rcll
jg
lcall
out
add
lahf
push
xchg
repz
icebp
jae
call
dec
orb
cmp
push
and
sbb
inc
pop
insb
scas
outsb
mov
pop
sbb
fbstp
sbb
outsb
mov
js
filds
adc
jmp
push
and
pusha
outsl
pusha
insb
jmp
fld
orb
addb
movzwl
mov
das
clc
call
inc
or
test
pushl
mov
xor
cmp
or
xchg
pop
xchg
or
and
in
lock
push
push
out
mov
sbb
add
rcl
pop
out
add
adc
jg
inc
jp
push
orb
xor
clc
push
jnp
adc
jge
hlt
jg
loope
sub
push
cmpsb
add
test
adc
inc
andb
jnp
mov
jmp
mov
add
std
mov
push
add
sbb
push
push
jbe
andl
add
fs
stos
lock
xchg
or
xor
mov
loopne
test
cmpsb
in
fists
mov
mov
xchg
cmpsl
add
into
jo
jo
jg
add
mov
xor
adc
aas
adc
das
rolb
fistps
lock
les
imul
jmp
add
sub
push
inc
out
push
ljmp
das
nop
xchg
mov
or
outsl
pop
lock
adc
out
and
mov
xor
orl
xor
clc
rcrl
or
push
and
adc
mov
or
mov
bound
push
jae
in
or
adc
decl
inc
sbbl
jb
mov
into
fildl
and
repnz
int
push
fsubl
fmuls
or
out
jp
mov
mov
aas
mov
test
cli
sahf
icebp
add
jbe
push
add
jb
mov
in
outsl
in
jp
rorb
das
rolb
push
and
outsl
push
jo
aas
push
inc
mov
stos
fbstp
out
adc
mov
and
jbe
adc
push
and
fistps
ljmp
shlb
inc
add
add
enter
addr16
or
insl
push
xchg
push
push
sub
xor
add
xor
ud0
mov
imul
loop
imul
mov
push
je
in
decl
cmp
out
or
pop
pop
mov
or
cs
inc
add
pop
test
hlt
and
lock
scas
sub
scas
sbbb
movsb
or
sub
ljmp
shlb
sub
add
inc
dec
jb
lock
decl
mov
push
dec
loop
xor
inc
adc
clc
ja
jecxz
add
mov
adc
push
out
or
popa
mov
adc
push
xor
into
cmp
js
add
in
test
movups
addb
pop
adc
mov
shrb
add
or
push
cmp
jae
popa
ds
cmp
xor
out
mov
lock
cmpsb
add
and
stos
pop
rcrl
repz
or
adc
xor
mov
shl
lock
add
incl
ljmp
dec
aas
add
jo
or
roll
cmp
outsl
incl
jns
lock
add
or
xchg
dec
mov
sub
out
push
or
jg
idiv
inc
testl
dec
add
add
fdivl
xorb
push
icebp
or
or
movsb
out
and
das
scas
outsl
mov
mov
je
cmp
xchg
cmp
xchg
push
mov
jb
inc
popa
out
lods
jae
sbb
or
inc
clc
rorb
sbb
pop
add
daa
add
ret
outsl
pop
cld
dec
add
orps
mov
adc
pop
jae
loope
jg
xor
in
loopne
pop
fcoms
aas
shll
pop
mov
nop
pushl
cmp
mov
loopne
jmp
or
rolb
jo
pop
cmc
das
nop
mov
adc
aaa
mov
add
incl
nop
add
cmp
jne
xor
aaa
out
dec
sub
pop
dec
sub
and
out
sbb
in
mov
call
and
out
jns
xor
jno
sub
push
popa
rcrl
out
out
xchg
jo
mov
outsl
and
add
divps
or
jbe
add
mov
std
cmpsb
cli
lock
test
cmc
and
or
add
pop
std
jg
add
insl
xor
movsl
mov
pop
ret
push
xchg
mov
lock
ljmp
les
mov
mov
fsts
test
jno
adc
and
fcoms
and
push
scas
fucomi
popf
andb
sub
fwait
pop
pushf
out
adc
add
shlb
mov
out
pop
and
int3
notl
icebp
andb
cld
call
push
jae
mov
frstor
inc
adcl
inc
jae
test
adc
xor
push
xchg
and
out
sub
xchg
push
std
pusha
scas
mov
xchg
subb
pushf
nop
mov
add
scas
mov
xor
or
rolb
out
ret
out
shrl
shll
add
xor
outsb
adc
fcomip
mov
dec
out
loop
repnz
out
movsb
clc
mov
xor
icebp
cld
or
notb
rcll
ret
adc
rorb
mov
popf
mov
pop
gs
and
in
das
xor
cmc
icebp
loope
jae
or
sbb
mov
mov
mov
out
shll
and
loope
mov
pop
dec
ljmp
xchg
icebp
fists
push
fs
mov
das
add
clc
out
lcall
dec
js
movsl
adc
xor
xchg
push
sbb
fmull
or
icebp
orb
data16
mov
inc
xor
xor
pusha
jle
cmpsb
incl
mov
mul
and
add
lret
jg
decl
les
push
pop
push
or
jmp
bound
xchg
fwait
jo
cli
pop
jl
jb
and
roll
mov
cli
push
clc
mov
push
outsl
ss
push
adcl
adc
add
nop
jbe
xchg
xor
mov
sbb
add
adc
xor
sub
add
mov
hlt
pop
out
add
aaa
push
xchg
aas
out
fimuls
stos
add
lods
cmpsb
add
outsl
testl
mov
and
addb
icebp
add
push
and
negb
cwtl
jb
sahf
jnp
mov
jnp
and
cmpsb
xlat
add
push
add
scas
daa
stc
sbb
out
mov
out
push
push
orb
hlt
mov
daa
les
push
sti
xchg
fadds
sbb
pop
and
adc
add
pop
xchg
fcos
or
inc
add
sub
mov
cmp
mov
or
rorb
push
push
in
inc
pop
rcrl
into
inc
xchg
sub
adc
out
jbe
add
outsl
adc
loop
addb
pushl
outsl
inc
jl
mov
adc
pop
add
add
mov
jbe
int3
shlb
inc
sbb
mov
subl
jae
cli
add
mov
insb
insl
adc
adc
imulb
and
jb
out
pop
andb
subb
xor
xchg
icebp
andl
clc
sahf
jae
insl
je
mov
xchg
push
insl
clc
adc
aam
add
mov
jae
xchg
imul
push
adc
mov
fs
sub
jp
scas
ret
cmp
ja
sbb
cmpb
push
icebp
outsl
pop
ja
outsl
inc
mov
adc
inc
loopne
sub
add
mov
call
rorl
mov
sbbb
sbbb
incb
addr16
idivb
cmp
jbe
inc
add
dec
inc
loopne
filds
or
lods
adc
sbb
aad
sbb
out
pop
mov
cmpb
lock
les
sbb
add
cmp
data16
xorb
push
adc
add
cs
mov
xor
adc
rclb
ret
mov
dec
das
fdiv
mov
sbb
dec
test
inc
aam
pop
gs
push
push
addb
stos
push
xchg
mov
push
push
jp
mov
pop
jbe
and
or
inc
xchg
das
les
or
arpl
push
rorl
ds
fimuls
push
cli
and
clc
roll
cmp
es
hlt
push
roll
les
cld
out
inc
call
sar
xor
rcrb
cltd
cmpsl
addl
jbe
outsl
xchg
adc
test
ret
lds
mov
add
inc
lea
inc
jp
sbb
fadd
cmp
xchg
cmp
in
mov
stos
add
mov
adc
fistpll
cmp
jae
clc
sti
and
mov
call
test
inc
popa
aas
sub
or
out
popa
jae
or
mov
add
jae
or
jae
dec
jb
int3
add
adc
pop
pop
fcoml
loopne
lahf
inc
sbb
in
add
int3
cmovno
mov
sti
jnp
add
sbb
les
fbld
dec
push
add
add
inc
fdivl
les
out
cmc
mov
hlt
add
xlat
and
mov
nop
push
xchg
add
add
clc
fildll
push
nop
andb
fs
adc
jno
adc
out
adc
push
repnz
aam
add
xchg
movsl
inc
adc
mov
add
jne
shrl
pop
mov
pop
addb
or
add
or
scas
jp
pushw
and
loopne
popa
push
jecxz
pop
mov
jg
incb
cmp
sbb
fisubrl
mov
inc
and
test
jg
mov
in
scas
add
pop
subb
pop
lds
subl
push
push
mov
add
mov
mov
call
arpl
jg
and
mov
call
aaa
push
clc
push
adc
or
inc
mov
jb
mov
or
jle
inc
scas
incl
aad
popa
and
add
pop
sub
mov
jmp
sub
mov
out
push
pop
push
mov
jmp
push
jp
or
in
dec
mov
or
rclb
dec
dec
jae
inc
test
outsb
add
push
sbb
jb
je
mov
and
pusha
adc
cs
or
pop
inc
repz
in
adc
lcall
and
sub
jmp
adc
xchg
dec
insl
sub
stos
inc
mov
inc
adc
adc
rcrb
push
jbe
mov
xor
push
inc
mov
mov
or
sub
and
outsl
or
inc
testl
ljmp
inc
jmp
fwait
add
sbb
inc
or
into
les
stos
jecxz
cld
sub
repnz
insl
add
sub
cs
mov
pop
sbbb
inc
add
pop
ja
mov
orb
cs
adc
add
hlt
jl
lods
inc
insb
dec
adc
or
adc
pop
or
addb
push
shlb
dec
mov
mov
mov
mov
imul
jb
pop
mov
ljmp
mov
or
ljmp
xchg
add
ror
sub
scas
pop
hlt
jg
or
and
scas
xor
push
push
andl
add
and
push
vunpckhps
push
or
or
xchg
rcrl
mov
loopne
outsb
jg
inc
pop
pop
push
pop
loope
or
int3
jb
sarb
scas
push
inc
and
add
mov
or
adc
dec
out
orb
jle
stos
out
es
inc
jbe
inc
add
sti
add
push
push
inc
pop
dec
add
or
or
jno
fildl
or
xor
pop
mov
movl
and
push
aad
pop
adc
insl
daa
and
shlb
dec
pop
nop
and
outsl
or
jle
sub
shlb
loopne
adc
out
stc
mov
sub
pop
add
push
add
or
dec
jle
pop
test
invd
inc
mov
push
lods
push
or
ljmp
cmpsl
sub
lcall
jae
mov
test
push
jo
cmp
cmp
xchg
shlb
loope
nop
cmp
outsb
insl
js
mov
mov
push
pop
or
push
cmpl
addl
std
stos
insb
pop
xor
in
push
and
jb
add
add
cli
mov
inc
andl
and
and
aam
in
jmp
inc
jo
mov
push
or
es
clc
rolb
lds
bound
adc
cmp
loopne
or
add
mov
add
or
push
in
mov
addb
or
inc
and
ret
mov
sbb
inc
push
jae
or
push
jns
outsb
mov
sbb
jo
mov
cmpsl
jo
dec
mov
and
adc
out
cmp
add
add
adc
mov
psubd
lock
xor
adcl
loopne
cwtl
mov
aaa
push
nop
push
in
or
or
adcb
mov
popa
xchg
inc
push
ret
jg
outsl
addb
cmp
xor
and
adc
insl
jl
push
sub
push
pusha
push
lods
pop
adc
not
inc
push
xor
dec
aam
repz
ds
icebp
inc
clts
cmpsb
outsl
scas
or
test
push
mov
out
inc
and
adc
shll
fsubr
mov
jo
in
and
add
cmp
jb
and
inc
mov
inc
int3
push
push
and
push
mov
mov
jecxz,pn
dec
and
adc
repnz
dec
dec
pop
or
dec
and
cmp
jbe
jb
pusha
das
cmp
mull
xor
add
les
adc
mov
jo
test
add
in
add
pop
out
psubd
push
and
clc
xorb
decb
pop
pop
arpl
sub
adc
icebp
add
incl
incl
jo
insl
divl
addr16
add
mov
add
adc
cmp
pop
add
dec
jo
add
ret
clc
jae
adc
dec
push
nop
mov
sbb
call
adc
add
inc
sub
sub
mov
out
cltd
and
enter
add
repz
inc
aad
sbb
cmp
jo
adc
sbb
or
push
cld
push
jo
pop
jae
sarb
test
cld
in
adc
jp
mov
js
or
xor
push
push
dec
and
fildll
ret
loopne
sub
cmp
aaa
sarl
jo
xchg
push
xor
and
in
or
lock
shrb
mov
scas
push
repnz
add
mov
or
and
adc
loopne
rolb
add
jle
incl
sbb
sarl
loope
in
adc
add
xchg
cmp
sbb
pop
and
sub
daa
jp
xor
adc
push
popa
add
mov
inc
add
mov
out
mov
mov
cmpsb
pop
push
and
add
pusha
add
mov
add
inc
outsl
xor
pusha
movsl
or
add
shrb
pop
push
mov
decl
adc
xor
jbe
js
outsl
or
mov
inc
pop
sbb
pusha
xchg
mov
and
adc
fbld
or
clc
and
push
push
andl
fucomip
ret
decl
and
xor
and
add
mov
add
sbb
dec
add
xor
add
xor
in
pop
sti
mov
sub
arpl
cmpsb
jno
nop
xchg
imul
or
add
inc
rcll
test
call
out
push
repz
mov
pop
xor
cmp
jb
push
mov
clc
mov
or
and
add
push
or
test
mov
in
shlb
or
lret
cli
pop
insl
xchg
mov
std
lcall
or
xchg
or
adc
inc
jo
inc
push
in
jg
lock
pop
les
adc
pusha
push
sbb
fcomip
incl
push
jae
out
scas
add
and
shl
shll
mov
push
sub
inc
insb
jp
mov
les
les
xlat
pusha
test
add
adc
mov
rolb
lcall
ljmp
mov
and
cmp
push
sbb
bound
aam
and
inc
add
inc
adc
cwtl
push
add
shufps
out
pop
repnz
xor
stos
jl
pop
cmc
out
pop
fwait
add
pop
mov
lds
add
mov
add
jae
add
push
imul
clc
outsl
pop
jb
add
je
sbb
nop
add
add
push
hlt
fildl
cld
pop
lds
jno
scas
call
roll
test
aam
mov
cld
lret
popa
std
fists
inc
adc
out
pop
rolb
jg
ljmp
stos
decl
pavgb
push
mov
adc
mov
aad
add
loopne
or
inc
add
push
pop
add
pop
sbb
pop
push
add
cmc
pop
out
adcl
mov
loopne
fisubs
inc
mov
lcall
xor
add
lock
ds
or
adc
sar
mov
or
dec
out
nop
lods
adc
xor
pop
adc
les
xchg
bound
jg
inc
jne
loop
aaa
mov
pop
mov
mov
add
sub
int
or
or
push
pop
cmp
or
jecxz
pop
fidivs
add
cmp
cmc
pop
jno
andb
daa
adc
or
add
out
inc
ja
dec
and
mov
add
add
add
fildl
popa
std
fcoml
inc
mov
jb
pop
sbb
in
push
add
push
test
dec
icebp
stos
mov
push
loop
pop
sub
cmpl
add
pop
js
add
add
inc
movlps
out
push
add
in
sbb
dec
gs
xchg
inc
add
roll
xchg
add
or
push
pop
les
outsb
pop
inc
add
stos
add
mov
add
jae
jns,pt
jno
mov
pop
loop
out
test
jle
add
aas
mov
pop
pop
add
push
sbb
xchg
add
stos
rolb
inc
dec
pop
and
jg
adc
enter
push
dec
jns
add
ja
sbbb
cmp
mov
scas
cmp
or
jb
and
clc
mov
and
jp
stc
loope
push
shr
mov
jb
and
sti
aaa
out
or
add
test
sbb
andb
add
mov
fsubrp
es
and
adc
mov
add
push
in
or
jb
jg
add
call
jb
insl
xor
inc
andl
clc
xor
clc
push
dec
push
mov
adc
sub
pop
or
lds
fdivs
orb
xor
lds
xorl
in
fsubrs
pop
cmp
incb
sahf
rcr
inc
mov
out
jns
sbbb
add
or
stos
xchg
mov
add
push
dec
shlb
or
addb
xor
jb
mov
push
pusha
push
xchg
mov
dec
stos
rcrb
stos
cli
xchg
add
js
xchg
ret
cmp
cs
aam
push
mov
mov
out
movsb
cmp
jns,pn
insl
adc
mov
adc
mov
in
xor
xor
pushf
add
cmp
sbb
mov
pop
push
jecxz
insl
push
pop
inc
clc
test
add
out
pop
adc
jbe
mov
push
out
cmp
mov
test
sub
sbb
mov
dec
xor
mov
rorb
jp
sbbl
ret
push
add
int
mov
data16
decb
lock
orb
inc
out
out
or
add
fistps
addb
jmp
adc
push
jp
or
mov
add
cmp
or
push
jl
jbe
or
ffree
fbstp
push
je
inc
xor
rolb
inc
ja
clc
inc
jb
cmpb
xorb
mov
push
aam
adc
add
cmp
and
or
add
or
add
out
rclb
add
mov
fmuls
inc
dec
sahf
adc
aaa
insl
pop
mov
daa
lcall
xchg
sbb
sub
sub
add
cli
adc
popa
mov
or
push
xor
inc
dec
mov
movsb
shl
andb
lds
mov
mov
les
pop
push
rclb
out
scas
add
rcll
xlat
ljmp
pop
mov
add
mov
add
cmp
fs
lods
fidivrl
cmpsb
aaa
push
push
data16
or
add
inc
mov
fisubrs
out
aaa
mov
sub
xor
pop
lock
pop
mov
subl
bound
jg
cs
pop
cs
push
adc
jno
daa
out
mov
movsb
and
jle
inc
ret
adc
andb
inc
imul
cmp
jp
sbb
xor
cmp
rolb
add
aam
cwtl
push
bound
push
push
mov
pusha
xchg
sarb
mov
mov
add
or
xor
jnp
add
mov
or
cld
pop
pop
pop
mov
add
imul
and
mov
mov
pop
and
pop
movsb
dec
dec
push
pop
and
test
adc
inc
add
mov
add
loope
test
sub
shrb
add
cltd
inc
or
clc
bound
pop
or
scas
add
xchg
cmp
mov
push
push
mov
pusha
xchg
loopne
cld
push
outsl
pop
hlt
rolb
fisttps
loopne
mov
add
jmp
adc
rcrb
push
insl
dec
jo
or
leave
cli
mov
aam
jp
add
jg
cmp
add
push
shll
movsl
inc
sub
scas
xor
loop
push
or
adc
jecxz
and
jecxz
push
sbb
push
insb
xor
adc
push
popa
add
add
xchg
pusha
adc
xor
shrl
rcrb
xor
mov
pop
fcoms
aaa
or
lock
insl
xor
sub
outsl
or
and
jp
mov
mov
mov
xor
adc
or
cmpl
add
and
jb
int3
sti
clc
inc
js
jg
push
stos
ja
sar
or
jae
adc
dec
cmc
push
pop
popa
or
add
push
inc
dec
decl
and
pop
js,pt
mov
inc
sub
pop
push
rorl
mov
loopne
add
mov
les
sbb
mov
xchg
or
pop
loopne
push
adc
adc
jmp
pop
enter
in
sbb
sub
dec
push
push
inc
dec
outsl
xchg
insl
mov
outsl
xor
inc
mov
pop
andb
push
adc
or
cli
xchg
testb
sbb
lcall
repz
mov
ds
pop
fs
push
mov
das
cmpb
sbb
loopne
inc
aaa
cld
push
sub
add
jo
mov
call
or
rcrb
push
add
add
jmp
movsb
in
or
arpl
pop
pushf
out
scas
clc
lods
jecxz
pusha
sete
add
add
pop
loope
dec
out
inc
jns
mov
outsl
inc
insb
lea
pop
mov
loop
mov
pop
hlt
cmp
popl
cmp
jp
inc
add
pop
pushf
pop
and
popl
pop
cs
lock
out
cli
cmp
inc
mov
sub
mov
cli
push
insl
cli
add
adc
outsb
mov
xchg
and
mov
pop
push
mov
stc
inc
lods
mov
or
add
stos
pop
shll
les
inc
into
add
cli
aaa
cld
lds
loope
push
push
sbb
inc
jo
addr16
add
jo
arpl
mov
ljmp
test
jmp
stos
adcb
outsl
add
sub
adc
push
fbld
and
je
subb
push
js
pusha
add
mov
sbb
rorl
rol
xchg
test
mov
decl
and
cmp
add
mov
pop
lods
fdiv
jmp
push
addl
add
es
ds
jae
sub
adc
fidivrl
clc
mov
jae
out
lods
pop
stos
mov
mov
xor
aaa
call
dec
sti
fidivrs
rorl
sarb
pop
xchg
ljmp
cmp
adc
shrb
jae
out
cmp
xor
xor
jne
push
pusha
lock
incl
push
xchg
push
loopne
mov
and
cmp
xor
pop
mov
fbstp
add
add
mov
pop
ja
push
sub
or
cli
mov
pop
push
mov
cmp
shlb
jae
add
add
push
loope
xchg
out
je
mov
loopne
repnz
lea
jmp
in
or
add
shlb
inc
push
loopne
xor
js
push
jb
push
insl
adc
or
mov
jae
in
adc
mov
sbb
or
push
cmp
push
hlt
movlps
xchg
add
pop
add
jb
adc
and
nop
mov
dec
decl
call
xchg
loopne
push
cwtl
push
clc
pop
bound
pop
add
add
scas
insb
inc
mov
xor
lret
pop
orl
adc
and
inc
loope
in
add
add
add
jmp
test
lock
mov
ljmp
mov
jnp
jae
mov
or
ds
mov
stos
adc
test
add
add
adc
ret
xchg
push
shrl
adc
lock
inc
cld
add
jecxz
pop
and
adc
shrb
mov
jo
icebp
in
mov
pop
inc
ss
rcll
pop
out
inc
adc
mov
xchg
out
and
push
insl
rep
mov
imul
add
mov
rcrl
ficoml
mov
jnp
cmp
mov
jecxz
movnti
xor
loope
sbbb
orl
pusha
adc
mov
es
pusha
sbb
mov
mov
sbb
out
sub
pop
and
adc
mov
mov
pop
jo
dec
js
jo
push
out
mov
push
insl
and
or
mov
mov
les
add
test
push
push
shlb
das
pop
mov
mov
add
mov
cmpb
inc
std
add
test
pop
mov
aaa
scas
mov
push
sbb
fcmovnb
xchg
add
inc
aam
lcall
add
lock
add
inc
dec
or
movsl
divb
add
jne
mov
jo
mov
jns
mov
ret
jmp
nop
pop
or
xor
lock
les
popa
mov
cld
addb
lcall
cmpb
subb
push
sub
add
xchg
add
pusha
adc
sti
pop
aaa
into
out
inc
pushf
xor
add
pop
negl
jno
in
add
in
incl
adcl
aaa
popa
mov
push
pop
xorb
or
add
adc
pusha
or
pusha
adc
push
jb
sldt
adcb
xorb
nop
fisubrs
inc
lcall
mov
mov
pop
mov
mov
add
pop
insl
or
xchg
xchg
jbe
out
add
pop
pop
out
mov
push
inc
cld
jecxz
adc
mov
sahf
lret
sahf
dec
rolb
adc
mov
jae
outsb
xor
ret
xor
add
jp
notb
out
add
jmp
or
ljmp
or
lar
test
xchg
insl
mov
mov
clc
lcall
roll
out
push
orb
pop
or
dec
stos
dec
adc
or
bound
pop
push
shlb
add
inc
add
xchg
dec
mov
das
sub
add
loope
cld
ljmp
mov
mov
aam
adc
ja
fbld
adc
xchg
scas
xor
mov
mov
pop
stos
loopne
pop
les
jno
sbb
mov
call
or
add
pop
dec
aas
adcb
ljmp
dec
jmp
pop
gs
add
je,pt
or
push
fcomip
pop
mov
pop
les
sarb
xchg
dec
push
shlb
ret
test
sub
xorl
cli
inc
jb
xor
sub
in
out
jnp
out
shl
and
jo
clc
fcomip
fildll
inc
inc
cmovg
dec
and
int3
push
adc
mov
in
and
mov
jns
push
jno
add
into
or
xchg
decl
fdivl
push
adc
sub
and
test
repz
push
in
jno
and
repz
mov
or
adc
iret
xchg
add
rolb
test
adc
or
and
or
pop
in
adc
jno
add
out
or
push
add
outsl
mov
lods
iret
jo
or
cmp
add
cmp
xor
cmp
mov
and
push
or
ret
or
or
in
xchg
data16
push
xchg
cld
mov
or
cli
add
test
rolb
fildl
in
sub
add
push
out
fcomip
int
push
push
repz
ret
add
pop
andb
push
pop
xor
clc
pop
xchg
sub
push
incl
xchg
and
mov
out
sbb
push
and
xchg
push
repz
cli
mov
ret
and
sysenter
fsubl
sarb
pop
pop
sbb
push
icebp
inc
push
push
roll
add
jno
push
jno
rorl
aas
dec
pop
ljmp
mov
mov
jbe
mov
sub
push
sbb
pop
xor
clc
dec
mov
add
jae
clc
fcmovnbe
mov
add
jbe
add
fdivp
sub
mov
fstps
testb
sbb
push
rcll
mov
adc
sbb
add
inc
loop
pop
test
add
or
sub
add
mov
cmp
jno
sar
adc
sbb
or
pop
jge
test
add
add
out
ljmp
hlt
fists
add
jae
add
das
add
inc
add
in
xchg
mov
jnp
inc
jae
movsb
out
js
in
xchg
ss
add
dec
insl
movsb
mov
lods
dec
push
jno
push
nop
push
push
pusha
shl
push
cmp
mov
adc
cmp
add
pop
push
or
test
loope
dec
insb
push
out
adc
inc
rclb
loopne
push
mov
or
fiadds
imul
aaa
insb
adc
push
bound
mov
clc
shlb
push
or
and
add
adc
adc
add
negb
insb
roll
shlb
add
pop
xor
xor
adc
adc
bound
scas
or
add
addl
sub
sbbb
data16
out
stos
or
add
inc
and
and
sbb
and
stos
testb
mov
add
xor
fiaddl
test
or
push
icebp
sub
push
adc
add
dec
out
loop
fnsave
add
mov
adc
lahf
test
add
out
mov
outsb
inc
cmp
les
out
sbb
xor
dec
xor
xchg
adc
aad
decl
pop
subb
push
arpl
add
pop
out
les
or
loopne
inc
loopne
les
sbb
lds
push
inc
adc
aaa
and
mov
jo
push
sbb
or
pusha
xor
cld
in
adcb
into
push
push
shll
add
aaa
sbb
lock
push
mov
faddl
or
xchg
test
jp
fs
mov
adc
mov
inc
jae
mov
into
sbbl
sub
jecxz
pop
insb
pop
fdivrs
inc
data16
scas
lcall
test
add
clc
xlat
mov
add
sbb
in
test
jbe,pt
daa
mov
shlb
and
sbb
mov
add
movsl
sbb
sar
in
push
jne
mov
adc
sbb
inc
and
lcall
add
adcl
mov
and
sbbb
insb
data16
addb
sub
push
jp
addb
inc
sub
or
dec
out
les
call
add
pop
cmc
pop
add
add
test
add
add
rcl
inc
jo
cmp
inc
es
dec
sti
clc
in
or
mov
in
jb
or
sub
out
ffree
adc
test
push
inc
rolb
test
cmp
dec
adc
dec
pop
ret
xor
hlt
out
mov
enter
movsb
lcall
add
in
pop
xor
mov
out
sbb
dec
out
aad
add
repz
add
ret
jo
mov
bound
xchg
int3
or
push
or
or
das
xchg
fwait
enter
push
cmpb
scas
clc
mov
movsb
iret
push
adc
out
push
mov
fildll
jg
popa
ret
add
pop
inc
std
and
sbb
push
dec
add
push
push
add
aad
pop
clc
xor
or
or
out
sub
add
pusha
push
in
sub
mov
mov
and
xor
mov
mov
mov
inc
dec
add
push
mov
int
push
insl
and
mov
push
inc
aaa
xchg
lock
pop
cmp
xchg
mov
out
sub
les
mov
push
and
sbb
and
insb
icebp
dec
xor
push
sbb
sbb
mov
cmovo
loopne
into
out
pop
push
adc
jmp
mov
inc
sbb
adc
shrb
push
xor
add
add
sub
or
dec
cld
add
ja
test
inc
arpl
pop
or
mov
push
fisttps
or
mov
subb
dec
jl
add
add
pop
mov
push
sub
loopne
out
js
or
das
mov
jbe
inc
add
push
pusha
dec
roll
rolb
add
mov
mov
inc
test
mov
dec
dec
mov
inc
sbb
dec
incl
xchg
stos
in
mov
dec
mov
aaa
jns
loope
mov
ljmp
jecxz
clc
push
add
dec
lods
adc
xchg
mov
sarl
push
out
outsl
mov
hlt
movsl
push
mov
ds
xor
cwtl
outsb
das
push
adc
adc
jb
ljmp
mov
cmp
sbb
insl
and
push
sub
lcall
outsl
in
cmp
clc
mov
cmp
rol
pop
lock
aas
movsb
or
mov
push
incl
xor
mov
outsl
clc
mov
xor
push
xlat
mov
mov
and
subb
inc
mov
aaa
push
mov
outsl
int
fwait
stos
gs
cwtl
nop
xchg
inc
ss
push
icebp
add
cmp
push
and
fs
mov
jne
movl
rolb
and
shrl
push
sub
hlt
add
adc
fwait
test
push
dec
add
or
add
lret
mov
adc
icebp
inc
push
out
fldcw
pop
jb
or
out
and
pop
sub
out
sbb
or
fucomip
filds
addr16
bound
add
hlt
cmpsb
or
mov
sbb
and
jg
pushl
fdivl
push
or
xor
or
in
ret
cmp
dec
sbbb
mov
andl
cmp
adc
or
mov
push
jo
push
icebp
mov
add
loopne
mov
pop
aam
mov
add
ds
jae
stc
or
and
add
out
or
adc
ljmp
mov
adcb
mov
mov
inc
jno
loopne
fisttps
inc
addb
add
mov
adc
movsb
arpl
mov
hlt
orb
add
and
sub
lcall
insb
ja
movsb
jo
jo
decb
inc
ffreep
xchg
inc
stos
hlt
jg
add
mov
inc
shl
sbbb
outsl
in
xor
push
mov
pusha
or
out
loop
mov
sbb
jae
nop
add
jae
lret
or
and
pusha
add
outsb
addl
int3
mov
xor
mov
mov
rolb
push
or
loopne
mov
test
outsl
js
push
orb
or
andl
mov
add
sarb
cmp
mov
jo
and
jns
mov
and
add
sub
or
mov
jl
ret
dec
cmp
adc
mov
roll
mov
cmp
loopne
and
inc
adc
pop
adc
and
lock
and
lock
mov
out
jp
xchg
adc
mov
adc
out
mov
or
jnp
fwait
cmc
data16
jne
mov
xchg
jno
xor
outsl
inc
add
shl
sbb
out
jp
aas
adc
and
js
jo
outsl
push
testl
scas
rolb
adc
iret
mov
add
xlat
xor
and
jo
add
decl
push
mov
dec
fists
xlat
adc
inc
fcoms
std
fwait
jl
mov
mov
jp
cmp
sti
mov
mov
mov
add
pusha
sbb
and
add
in
call
ss
adc
or
mov
mov
loope
fidivl
xlat
push
push
aad
or
adc
push
dec
je
pop
lock
mov
dec
out
clc
ljmp
push
rorl
sarb
push
inc
jecxz
out
jb
jmp
add
sbb
adc
or
xchg
inc
push
lret
inc
aam
outsl
fcmovnbe
cli
imul
fistl
addb
or
mov
fwait
jmp
sub
adc
or
add
or
push
push
lods
mov
clc
adc
loopne
jp
ficoms
shl
out
mov
mov
inc
out
mov
and
icebp
add
cmp
rolb
add
inc
pop
or
add
dec
je
adcl
adc
or
scas
ss
bound
push
mov
in
add
in
loope
xchg
inc
adc
jo
pop
dec
xlat
fbstp
dec
inc
sbbl
xchg
in
inc
loope
jle
arpl
in
push
mov
mov
sbb
sbb
ret
jnp
add
adc
push
push
jmp
fidivs
push
and
test
clc
test
add
inc
andps
or
inc
sbbl
jg
or
add
jb
aas
pop
xor
dec
push
cmp
mov
sti
mov
loopne
or
add
jg
pop
clc
xor
jae
add
cli
adc
out
nop
or
adc
arpl
mov
mov
test
push
sub
cli
adc
add
cli
mov
push
jl
rol
inc
push
push
es
add
add
cmp
in
adc
pop
lock
mov
and
pusha
pop
adc
test
data16
and
and
mov
add
lock
sbb
les
in
add
xchg
add
mov
jg
out
enter
push
icebp
daa
rcll
xor
jo
test
pop
les
or
jg
and
mov
clc
movsb
adc
rolb
icebp
dec
shlb
sarb
mov
repz
inc
dec
and
popa
or
mov
roll
push
adc
sahf
mov
popf
and
loope
inc
lods
cmovbe
ljmp
sbb
cmc
add
mov
mov
add
call
adc
adc
pusha
adc
bndldx
mov
add
and
lock
xor
jecxz
fiaddl
pop
negb
adc
inc
mov
pop
add
ljmp
mov
mov
pop
or
dec
es
push
dec
lds
stos
mov
test
js
inc
cli
pushl
adc
repnz
sahf
or
mov
jge
add
call
mov
mov
and
add
out
push
out
sub
into
les
adc
aaa
mov
xchg
decl
sbb
mov
pop
out
xchg
lods
add
adc
mov
pop
pop
in
or
rclb
decl
sbb
popa
push
lret
bound
nop
sbb
mov
or
mov
mov
mov
ret
in
pusha
loopne
mov
loopne
rclb
das
clc
cmpsb
das
out
jae
ds
jp
adc
xor
mov
adc
adc
jns
push
adc
mov
rolb
mov
or
dec
js
mov
mov
or
adc
mov
or
adc
add
jp
xor
std
jg
jo
adc
add
pop
into
jns
incl
xor
data16
xor
test
lea
subl
popa
jl
pushf
jg
outsl
icebp
mov
shrb
frstor
rcl
popa
lock
jo
mov
pop
out
ret
nop
add
out
sbb
jb
mov
into
add
jb
inc
testb
jno
or
call
add
mov
push
repz
mov
sub
add
dec
add
aam
in
fiaddl
fiadds
ss
insl
add
int3
add
test
clc
lock
ds
adc
dec
push
inc
mov
add
pop
jo
out
lcall
nop
add
les
hlt
xor
inc
out
mov
push
mov
ss
inc
add
call
add
or
mov
adc
repz
lods
adc
sub
int3
mov
push
and
mov
sub
insb
pop
add
aaa
sub
mov
mov
add
inc
push
mov
xor
mov
sar
push
add
sub
in
sub
add
xor
inc
rorb
xor
rcr
adcw
sub
es
loopne
mov
jb
cmp
and
lock
add
outsl
scas
xor
jno
cmp
fucomip
notb
sub
out
pop
cmpl
mov
pop
cmpb
add
js
sbb
cmp
xor
repnz
fcomi
mov
cmc
push
sub
in
hlt
cmpb
jae
or
adc
addb
addb
sbb
roll
fs
jecxz
icebp
inc
orb
add
jmp
mov
filds
adc
bound
dec
and
out
xchg
add
ds
shlb
fimuls
cltd
xor
pop
outsl
ja
mov
mov
cmpsb
fcoml
push
and
sub
hlt
mov
sbb
pop
sub
addb
dec
and
addb
jbe
xlat
in
sbb
in
xchg
loope
rcrw
adc
ret
int3
xorb
add
adc
leave
cmc
add
or
dec
pop
inc
jle
daa
popa
mov
add
mov
add
ja
out
fsubrp
push
push
insl
mov
or
and
lahf
inc
sub
repz
pop
add
push
pop
add
mov
rol
adc
cli
test
or
filds
xchg
adc
sbb
pop
loopne
push
mov
cwtl
push
imul
cmpsl
push
xor
sarb
scas
and
jo
popa
inc
cmpsb
pop
rolb
addl
inc
or
or
lea
pushl
cld
or
xor
add
mov
mov
out
clc
jg
jle
sbb
cmp
sbbb
jb
or
mov
shll
add
stos
pop
out
clc
fnsave
aam
push
jb
aas
inc
push
dec
and
fidivl
and
pop
and
add
push
jo
pop
push
out
add
and
insb
add
mov
test
je
pop
jg
bound
add
push
addl
adc
adc
psubb
sbb
add
out
sub
jnp
cmp
test
push
lods
mov
or
inc
std
outsl
ret
jb
mov
loopne
or
xor
roll
pusha
add
pop
loope
inc
imul
mov
add
jb
clc
decb
lods
or
jb
dec
cmp
je
xchg
jg
or
es
decb
push
lock
pop
addb
cmp
cmpb
cld
outsl
ficompl
jns
push
and
xchg
and
jae
push
jge
cs
and
or
loopne,pn
js
pop
rorb
jmp
inc
and
inc
pusha
inc
in
mov
add
setle
insl
pop
push
loope
adc
xchg
and
bound
pop
popa
add
negb
dec
cmp
jns,pt
mov
and
or
add
mov
daa
in
sbb
hlt
inc
sub
cmp
jno
sbb
or
sbb
pop
jecxz
xchg
pop
insl
adc
mov
inc
xchg
out
cmpsb
and
pop
add
mov
mov
xchg
xor
push
bound
out
mov
pusha
sub
pushf
sub
loop
or
dec
mov
pusha
jge
mov
cmc
dec
cmp
sub
or
inc
add
dec
clc
inc
xchg
mov
or
mov
ds
std
mov
mov
pop
out
xor
push
dec
or
gs
and
sub
das
push
fdivr
sbb
push
out
inc
out
sub
fmul
and
insb
stos
push
or
lock
mov
sarb
insb
in
loop
add
cmp
and
push
jg
adc
mov
adc
repz
inc
insb
push
jl
xchg
pushf
outsl
loope
push
ret
inc
loopne
movl
test
data16
add
out
cli
test
push
push
add
cmpsb
mov
xchg
subl
mov
addb
imul
mov
push
ds
cld
mov
or
arpl
fwait
mov
and
sbb
inc
or
sub
mov
mov
pop
inc
sub
or
push
sbb
adc
mov
push
and
shll
cs
cmpsl
jo
es
add
push
push
std
and
xchg
or
push
push
loope
ljmp
mov
shlb
std
fbstp
lret
and
in
mov
cmp
add
sarb
and
ss
add
rclb
push
and
loop
or
add
add
or
or
or
insl
add
sub
or
andb
loopne
std
mov
mov
gs
inc
std
pop
cld
jae
cmp
and
xchg
andb
inc
jne
pop
out
ret
mov
and
ljmp
inc
push
sarb
loopne
addb
into
jb,pt
sub
add
in
xchg
enter
fwait
bound
arpl
dec
imul
add
mov
or
mov
ja
lds
push
push
fdivs
mov
sub
or
outsl
sub
add
into
in
inc
jae
sbb
sbb
lcall
pop
aam
es
mov
adc
adc
cmp
mov
mov
mov
sbb
pusha
sub
repz
adc
adc
in
mov
inc
or
adc
icebp
inc
push
adc
decb
int3
dec
add
push
and
sbb
popf
and
aam
adc
add
add
sbb
inc
dec
sbb
cld
decl
dec
test
or
rcrl
pop
out
insb
divb
adc
xor
jns
loopne
mov
lcall
push
sub
dec
adc
push
mov
mov
cmp
sub
push
add
mov
or
mov
xor
push
mov
or
inc
andb
enter
xor
xor
xchg
ljmp
or
pop
xor
ds
jecxz
inc
insb
push
dec
push
and
add
in
in
popa
pop
jecxz
test
xor
incl
mov
clc
inc
or
jg
or
div
into
jmp
nopl
push
ret
mov
std
out
out
sbb
outsl
push
sbbb
mov
incl
arpl
mov
pop
mov
aaa
out
xchg
rolb
or
pop
nop
sbb
mov
pop
das
push
xor
rorb
inc
daa
sarb
fadds
or
stos
jg
dec
fidivl
jo
sbb
mov
int
pop
cmp
adc
roll
ja
test
mov
push
mov
cli
lds
jmp
or
push
fs
sub
int
fdivr
cmp
jb
rolb
sub
jno
and
call
add
and
add
clc
xchg
jg
inc
test
xchg
add
jns
nop
and
pop
out
xchg
fnsave
mov
pop
rcrb
andl
fadd
push
rclb
mov
loop
inc
sbb
xchg
sarl
mov
jecxz
out
mov
sbbl
pop
div
es
add
push
sub
pop
add
es
push
je
mov
mov
out
jno
int3
jb
adc
pop
cmpsb
dec
cmp
mov
hlt
mov
cmp
push
mov
mov
push
push
aad
sarb
ds
pop
sbb
out
inc
pusha
xorb
inc
jae
sbb
mov
inc
add
or
outsl
pop
mov
sbb
jno
push
shlb
xor
adcb
popa
enter
adc
jge
rorb
pop
lret
sbb
out
lea
fmull
or
push
jnp
xor
out
iret
add
jle
xchg
inc
inc
add
ljmp
add
inc
das
add
add
mov
cmp
push
add
mov
jl
clc
adc
inc
mov
sub
inc
add
pop
and
cmp
loope
cwtl
or
mov
or
mov
adc
and
inc
lock
sbb
or
rorl
loopne
or
call
or
jne
cli
mov
and
xorb
and
test
dec
dec
mov
dec
xor
sbb
shlb
jecxz
loopne
xor
mov
mov
shrb
jp
out
or
ja
das
inc
sub
adc
push
adc
fs
into
pusha
xchg
mov
and
push
jnp
clc
mov
pop
fwait
cli
xor
sar
jmp
icebp
add
push
mov
mov
dec
fnstsw
pop
inc
push
orb
pop
push
cmp
or
sti
add
add
mov
xchg
mov
push
pop
fdiv
out
mov
clc
or
fsubl
mov
lahf
loope
mov
mov
add
scas
pop
and
cs
outsl
incl
std
ja
dec
pop
or
test
sub
mov
inc
adc
jo
jo
jg
std
jl
rolb
add
jno
pop
lock
adc
sbbb
ret
xor
cmp
je
add
fbld
jg
ret
ljmp
mov
testb
loopne
mov
loopne
jl
and
mov
rolb
in
add
and
das
clc
fmul
jle
and
add
in
punpcklbw
outsl
push
cld
pusha
add
iret
cs
inc
dec
shlb
aam
mov
adc
shll
jl
push
lret
mov
aas
add
shll
cmp
add
das
orb
mov
add
pop
out
or
lock
push
xor
mov
ret
js
jb
push
outsl
add
mov
mov
push
shrb
add
mov
iret
rorb
out
add
adc
push
adc
and
out
into
xor
push
les
add
out
lcall
lret
or
mov
decl
push
push
rorb
jo
jo
adc
sbb
add
add
inc
mov
push
pop
les
lock
push
push
xor
out
pop
sti
icebp
sub
push
inc
xor
push
inc
out
or
pop
push
or
and
sub
ret
add
out
leave
add
negl
cmc
jg
push
insb
jge
and
out
sbb
adc
ja
mov
pusha
adc
xchg
push
shlb
sbb
and
out
rcrl
or
scas
call
clc
lock
mov
data16
movsb
mov
les
cmp
jg
sbb
adc
or
loop
jle
out
stos
dec
dec
fcompl
jne
in
dec
fldl
or
iret
sub
icebp
outsb
cld
pop
xor
push
adc
xor
clc
dec
and
and
push
rcll
jo
or
in
sbb
sub
out
sar
pop
and
jo
push
and
xchg
add
aas
pop
add
or
lods
fists
cmc
mov
jno
jp
test
jp
cmp
adc
cmp
xchg
dec
mov
mov
mov
dec
rcr
cld
xchg
pop
scas
addb
mov
out
pushf
sar
mov
add
adc
pop
aad
sbb
adc
mov
mov
loopne
add
or
sbb
sbb
mov
jo
in
cs
les
add
mov
test
les
pop
and
add
ljmp
les
adc
mov
jne
push
fiadds
ret
add
or
outsl
push
dec
aad
popa
and
outsl
push
push
lcall
sub
aad
jmp
test
sti
push
jbe
xor
or
xchg
jb
sbb
or
aaa
add
jp
sbb
or
es
mov
mov
fwait
and
loop
pop
and
les
outsl
jg
insb
mov
out
pop
pop
or
add
cmpsl
or
add
add
adc
fistps
mov
xchg
push
xorb
cmp
pop
cmp
mov
pop
adcb
pop
add
lea
push
shlb
add
adc
ss
mov
rcrl
or
adcb
out
add
jae
pavgw
lcall
xchg
jae
shlb
sbb
ret
push
mov
mov
clc
daa
jne
add
xor
outsl
or
or
andb
es
mov
popa
push
les
cmpb
inc
aaa
pop
insb
lret
push
pushf
icebp
mov
mov
jp
decl
dec
sub
je
mov
in
add
cmp
std
mov
les
mov
les
push
add
xchg
mov
fdivrs
inc
or
mov
add
adc
or
lret
cmpb
loop
dec
stc
cmp
jmp
movsb
xchg
rcrl
or
push
gs
repnz
insl
ret
mov
ret
in
pop
push
xchg
hlt
push
cld
add
icebp
inc
adc
icebp
lock
xchg
fistps
and
andb
push
inc
or
push
adc
or
fstl
dec
popa
movb
punpcklwd
push
fucomi
cmpsl
lock
aas
dec
lods
or
inc
cmpsb
mov
jp
inc
add
and
mov
movl
mov
cmpsb
push
xchg
cmpsb
inc
leave
add
sbb
mov
dec
loopne
dec
lock
inc
pop
pop
xchg
sub
add
clc
or
rcll
and
cmovb
test
jmp
mov
add
adc
add
mov
cmp
adc
daa
xor
addb
add
jle
decb
xchg
das
or
cmp
or
fwait
mov
das
test
add
mov
mov
push
push
xor
adc
xchg
inc
pop
lds
mov
pop
es
jp
push
insb
scas
xchg
fcoms
jbe
jb,pn
cmc
out
jp
sahf
adc
sub
add
add
rolb
rcrl
xlat
dec
stos
inc
inc
mov
mov
pushf
in
jg
jo
cmpsb
ja
cmp
adcl
mov
mov
test
push
addb
or
inc
jo
ss
xchg
cs
nop
in
or
pusha
xchg
mov
dec
mov
and
jmp
or
cwtl
push
add
and
test
push
dec
cwtl
fimull
pushf
lea
sub
outsl
clc
fstpt
mov
add
add
push
add
jb
cmc
cli
or
and
popa
xchg
cld
inc
loop
xor
pushl
test
mov
pusha
add
inc
adc
mov
mov
mov
push
push
add
add
push
outsl
pusha
mov
push
add
mov
or
movsb
mov
pushf
movsl
cmp
push
jb
decb
adc
and
sub
adc
mov
fldt
inc
inc
enter
jo
popa
or
imulb
shlb
push
loope
or
sub
push
or
data16
incl
and
popa
add
insb
movl
add
cmpsb
incl
in
popa
and
dec
aad
inc
mov
mov
in
sahf
loopne
mov
cmp
jo
push
mov
or
sub
arpl
mov
leave
push
mov
cmp
push
in
xchg
orl
mov
adc
or
test
incl
mov
adc
scas
push
out
inc
loopne
and
or
jae
sbb
inc
mov
inc
rorb
lods
push
sub
adc
cmp
adc
push
das
mov
mov
add
add
mov
adc
mov
stc
sbb
mov
std
push
push
sub
inc
or
pop
or
scas
addb
inc
add
loopne
bound
or
mov
fildll
cmp
xor
add
and
scas
cli
mov
inc
lahf
out
fsubs
mov
xor
jmp
sbb
out
and
sbbl
jp
out
jae
add
lods
add
dec
jae
dec
mov
push
das
add
jnp
lcall
dec
ret
ret
or
out
dec
adc
pop
out
je
out
xor
jp
xor
or
sub
cmp
outsb
decl
mov
clc
andb
icebp
decl
fs
jb
mov
xchg
xchg
add
adc
and
in
push
lds
roll
sub
inc
test
push
jb
mov
test
jp
inc
outsl
xchg
adcb
push
pop
sti
inc
sbb
out
or
add
jnp
mov
add
loopne
cli
push
sbb
call
std
mov
data16
add
xor
or
ss
jb
mov
add
sbb
iret
or
mov
jbe
fwait
or
pop
mov
add
out
scas
bound
pushf
jge
jnp
xor
xchg
andl
pop
out
call
icebp
add
sub
rorb
imul
add
add
in
add
add
sub
push
ljmp
sub
push
data16
dec
or
add
cmp
xor
push
icebp
or
int3
and
test
mov
add
mov
int3
add
or
cmp
or
lock
aaa
sbb
out
add
add
test
dec
daa
icebp
dec
add
adc
adcl
cs
adc
data16
push
fstpt
mov
adc
or
popa
shlb
data16
mov
jge
mov
add
adc
inc
adc
je
adc
add
cld
push
fildll
insb
adc
in
loop
lods
orb
clc
adc
add
push
js
repnz
adc
push
hlt
rolb
rcrb
inc
jnp
cmp
sub
int
mov
or
aam
or
adc
sub
ljmp
xorb
mov
add
add
add
ret
add
lahf
sbb
frstor
jae
test
push
add
addl
test
in
mov
subl
and
jae
cwtl
or
in
jmp
jae
fidivrl
ss
add
pushf
xor
sub
sub
sbb
and
decl
loope
pop
inc
add
add
add
insl
sbb
push
pop
loop
dec
addb
fcos
in
decl
add
push
addl
test
test
add
push
inc
jo
mov
rorl
jae
addb
mov
orl
adc
iret
xchg
mov
push
jbe
add
movsb
add
adc
mov
mov
and
addl
inc
sub
sbb
jnp
mov
push
xor
inc
adc
stc
out
mov
lods
sbb
outsl
lcall
and
jb
aad
and
or
mov
imul
pop
mov
jg
or
movsb
subb
add
cltd
out
pushf
sbb
imul
fwait
add
jo
or
push
mov
pop
mov
add
rorb
bound
ss
in
hlt
mov
jbe
ret
inc
adc
xchg
and
jmp
test
xor
cmp
cli
or
lar
loopne
pop
cwtl
add
and
aam
test
adc
adc
loopne
mov
cld
adc
jns
push
add
sub
sub
mov
mov
lea
or
rolb
rorl
dec
pop
adc
mov
mov
cmp
stos
test
add
out
lcall
cmpsb
js
jmp
imul
ja
xchg
imul
push
hlt
push
add
or
xchg
adc
add
add
add
push
inc
and
ds
jo
test
sub
daa
or
or
inc
mov
addl
icebp
add
std
nop
push
jno
adc
outsl
in
jg
xchg
js
orb
jne
mov
mov
adc
sub
add
lock
pop
jo
pop
xor
in
sbb
inc
add
add
mov
xor
jle
jb
std
jo
cmpsb
jle
mov
imul
mov
data16
inc
push
or
pusha
add
fnsave
adc
add
adc
xor
out
cltd
inc
sbb
mov
sbb
aas
mov
sbb
test
ret
sar
fbstp
pusha
pop
xor
and
add
pusha
mov
push
mov
mov
orb
mov
ss
adc
filds
sub
lcall
jno
icebp
pusha
js
loope
cvtps2pi
icebp
pop
push
or
add
filds
xlat
inc
clc
in
aaa
sub
aad
out
cmp
and
incl
xchg
push
out
nop
add
adc
enter
pop
pop
cld
xchg
pusha
adc
inc
xchg
fdivrp
call
adc
cmpsb
jae
ret
jae
enter
fdiv
clc
or
inc
pusha
add
dec
lds
out
es
jge
sub
ret
aas
push
xor
xchg
mov
or
dec
jae
dec
mov
dec
addl
insb
adc
lods
inc
sbb
push
rorb
mov
sub
dec
mov
mov
fcomps
mov
out
xor
cmp
dec
or
sbb
mov
out
and
inc
fs
add
or
or
into
pop
or
push
mov
push
popw
xorb
data16
or
cmp
pop
cli
mov
dec
pop
inc
push
inc
or
inc
xlat
repz
mov
sbbb
cmpsb
les
inc
pop
sbbb
mov
inc
aam
scas
add
pop
adc
rcrb
push
cmp
dec
jae
call
jae
or
popf
add
in
andl
sub
xchg
dec
add
insl
fistpll
pxor
sbb
stos
cmpb
out
loop
push
js
inc
pop
jge
mov
inc
sbb
jnp
popf
clc
mov
xor
xchg
hlt
jb
cmp
fistl
test
cvtps2pi
and
clc
jg
pushf
adc
cmpb
in
subl
pop
or
jns
decl
mov
lcall
push
clc
adcb
sub
adc
mov
mov
cmp
add
mov
cmpb
movsl
nop
pop
mov
xchg
add
or
mov
test
std
test
into
pop
adc
fwait
mov
ret
pop
push
fdivrs
rorl
in
sub
ret
adc
xchg
adc
push
push
daa
mov
test
dec
or
popa
out
sub
lods
dec
add
or
fdivr
pop
test
xchg
mov
out
repz
out
jmp
mov
or
roll
data16
cmc
mov
adc
add
clc
adc
xchg
roll
rol
mov
orl
add
dec
hlt
test
push
sar
data16
lcall
out
mov
in
rcr
in
add
mov
out
xchg
fadds
jb
roll
cmp
mov
adc
or
sub
push
rolb
dec
lds
fimuls
jbe
xor
icebp
jge
mov
and
arpl
mov
xor
cmp
xor
icebp
lds
lock
lcall
rolb
and
sub
pop
or
add
or
adc
dec
pop
or
sub
stos
nop
mov
setle
js
cmp
out
je
idiv
add
cli
inc
cld
in
add
xchg
loop
sub
andb
adc
add
rolb
pop
pop
push
orb
jbe
pop
cs
jp
xchg
adc
push
jns
or
jg
xor
mov
add
rcrb
adc
inc
fildll
les
sahf
ret
mov
rorb
sbb
ljmp
cmpsb
addb
push
inc
sbb
inc
sbb
test
out
dec
addb
xchg
cmpb
push
subl
and
pop
push
and
add
jnp
decl
clc
and
and
adc
jb
cmp
push
push
subl
push
arpl
loope
jmp
and
sub
mov
out
mov
sbb
or
ds
mov
lea
and
movb
jp
add
loopne
inc
cmp
and
test
lock
add
jb
addb
or
sbb
das
jnp
and
fdivl
fwait
repnz
lock
fbstp
cmp
jb
test
xor
or
sbb
popa
mov
mov
mov
jp
in
push
mov
push
sub
or
dec
cmp
jae
and
mov
ss
frstor
leave
loopne
pop
out
push
ret
outsl
js
xchg
lods
daa
cmpsb
push
ja
inc
shlb
adc
cltd
sub
add
mov
lea
push
into
or
mov
pop
or
mov
jb
sub
bound
or
push
dec
push
cmp
cmp
call
roll
mov
xchg
dec
out
add
push
movsl
insl
adc
inc
adc
lock
xor
mov
outsb
loopne
cs
mov
cmp
in
mov
add
pop
insb
mov
mov
and
add
add
lock
imul
cli
mov
pop
stos
mov
inc
mov
outsb
test
mov
cmp
outsb
pusha
add
data16
or
cmp
add
leave
or
insl
shll
dec
or
sbb
loope
add
add
jno
adc
in
call
cmp
icebp
ss
fimull
pop
sub
adc
in
adc
xor
mov
xchg
add
es
fisttps
push
pop
in
or
xor
loope
jl
pop
scas
clc
pop
push
push
push
xor
aad
mov
xor
or
lds
cmp
sbb
scas
push
jae
add
pusha
add
pop
jb
add
adc
push
mov
add
imul
push
or
dec
rcr
std
sub
jp
out
dec
lock
add
clc
outsb
push
sti
push
inc
andl
push
push
push
mov
xor
jg
shl
int3
dec
cld
mov
inc
mov
mov
mov
xchg
dec
xchg
insb
jb
push
dec
andb
add
fstpt
mov
js,pn
mov
adc
fs
movsl
jg
loopne
mov
add
or
in
pop
es
or
xor
icebp
or
inc
stos
push
out
push
adc
dec
clc
sbb
or
adc
dec
shlb
cmc
add
enter
mov
xor
loopne
add
add
push
insl
loopnew
cltd
jbe
or
addb
lds
in
jae
shl
cmp
mov
sbb
mov
lret
loop
push
lods
loop
or
test
jp
insb
push
outsb
fcmovne
mov
adc
pop
push
loopne
fildll
mov
mov
cs
or
test
in
sub
inc
mov
cld
mov
out
aas
sbb
jle
adc
test
adc
inc
add
add
lods
pop
add
jno
cmp
jb
js
jg
cmpsl
or
add
or
rolb
mov
push
or
pusha
push
lock
pop
and
insb
sub
pop
bound
testb
imul
outsb
mov
push
xor
das
loope
push
into
nop
sbb
jo
stos
inc
mov
jle
push
or
cli
movsb
add
mov
jmp
jae
popf
sbbb
xchg
faddl
jmp
adc
push
adc
add
lock
pop
xchg
adc
jmp
pop
nop
xchg
mov
cmp
push
out
andb
ja
das
sub
ds
mov
adc
ja
addl
add
add
dec
imul
mov
imul
jne
mov
push
push
mov
ret
and
push
jnp
push
pop
inc
sti
or
adc
rcrl
outsl
jb
clc
mov
nop
mov
add
movsb
jnp
lock
mov
xor
adc
es
add
and
mov
icebp
pop
clc
rorb
fmuls
icebp
das
push
push
jae
adc
sbb
cs
add
adc
sbb
dec
push
test
incb
jle
pop
pop
sbb
mov
add
add
imulb
push
inc
loop
sub
cs
jbe
clc
call
jl
out
nop
or
mov
sti
popa
xor
sbb
ret
pop
sbb
adc
push
sahf
xor
pop
decl
add
nop
sub
and
subb
or
adc
xchg
pop
adc
aaa
cmc
cmpsl
lock
sbb
xor
hlt
jg
ret
add
stc
push
jne
in
rorl
fldt
inc
lock
rcl
xor
sub
push
add
adc
ljmp
test
adc
mull
add
ds
xlat
pop
insl
ficomps
sbb
pop
or
cmp
insl
mov
jae
dec
je
lcall
xor
pop
mov
jl
clc
inc
ficoml
jo
xor
jmp
scas
mov
push
and
outsl
ja
lock
add
daa
dec
loope
movsb
fucomip
jae
orb
xchg
sti
mov
mov
inc
add
pop
mov
xchg
pop
xchg
rorb
mov
loope
dec
movb
mov
adc
jmp
and
daa
or
lcall
rolb
repnz
jle
mov
loop
adc
mov
mov
push
add
faddl
xor
push
cwtl
cmp
mov
pop
or
jecxz
daa
loopne
lock
aas
out
out
dec
inc
adc
mov
mov
maxps
aaa
loopne
jecxz
psubsb
roll
and
mov
jo
in
pop
aam
pop
xor
pusha
push
push
mov
nop
or
sbb
sub
pop
or
scas
inc
inc
dec
addl
inc
or
mov
repz
lock
jo
push
mov
mov
adc
outsl
push
push
bound
popa
mov
jo
ss
inc
push
insl
or
movsl
and
or
sbb
ljmp
cmp
push
lcall
decb
adc
add
add
cmp
je
mov
xchg
std
mov
mov
clc
jbe
pop
inc
sbb
adc
cli
dec
jmp
mov
in
or
jle
std
inc
les
ljmp
xlat
inc
ja
pop
les
mov
cmc
inc
push
jb
cmp
or
mov
xchg
jge
fwait
or
pop
icebp
mov
or
cmp
test
fimull
fdivl
sub
fmull
std
push
adc
sub
sub
test
add
mov
jne
push
mov
lcall
pop
shl
push
jecxz
fcomip
cmp
je
cmp
push
push
punpcklwd
add
adc
add
add
cmp
or
adc
adc
jo
insb
cs
mov
or
xor
in
ret
aad
loopne
add
mov
imul
push
or
inc
pop
insl
adc
adc
movsb
nop
adc
mov
mov
or
mov
xor
mov
insl
inc
cmp
shlb
jo
push
push
dec
or
mov
mov
inc
push
movsl
add
fistpl
ss
push
loop
leave
mov
out
fnsave
sub
aaa
pop
in
sbb
mulb
sbbl
popl
dec
jb
out
push
nop
add
stos
jo
scas
cli
ljmp
add
loope
pop
out
or
out
sbb
insb
lock
xor
or
loope
sar
push
jmp
test
xchg
jg
adc
add
mov
sti
cs
sarb
push
jo
inc
cmp
mov
sbb
dec
push
xchg
or
xor
shlb
loop
and
and
pop
add
lea
and
add
pop
or
and
rcl
sarb
xlat
enter
jo
mov
adc
lcall
cwtl
fidivl
push
or
rcll
cs
add
jno
cmp
jno
int3
jle
das
clc
add
xor
sbb
mov
adc
adc
mov
sbb
les
or
ret
sbb
mov
jb
push
fs
pop
xor
loop
rolb
dec
fxtract
mov
pushl
or
mov
jo
sbbb
lea
dec
add
add
xchg
xchg
mov
xor
adc
enter
mov
push
test
jp
pop
jb
mov
neg
xchg
inc
sub
outsl
or
pop
add
add
into
add
mov
push
out
and
pop
push
xor
int
mov
fwait
add
daa
mov
and
xor
or
dec
add
mov
add
insl
add
or
adc
and
fidivl
ret
aam
call
roll
and
jo
mov
jnp
or
mov
add
enter
push
adc
lods
jmp
sub
dec
sbb
add
adc
xor
add
daa
jo
xchg
cmpsb
or
divb
sub
jbe
outsb
xor
rclb
in
adcb
jle
out
ja
negb
add
addb
and
push
xor
push
orb
and
add
outsl
mov
push
push
sub
add
adc
orb
dec
add
test
adc
sub
adcb
shrb
add
add
out
je
adc
add
adc
inc
inc
xchg
lcall
xor
or
jns
sub
rorb
push
inc
cli
and
mov
push
leave
mov
xorl
jg
orb
add
mov
out
and
pop
out
adcl
jo
mov
notl
mov
xor
push
sbb
mov
imul
cmp
jg
loopne
in
or
fs
pop
pop
push
and
outsl
outsb
es
add
or
xor
push
push
xchg
pusha
xchg
mov
jb
add
ret
outsl
stos
xor
xor
or
sbb
inc
xchg
add
cmp
jecxz
inc
mov
call
subl
inc
cmp
lock
push
orl
incl
inc
ds
jae
cmpb
subb
xor
sub
or
adcb
xchg
mov
int
xchg
loop
push
jb
cmp
les
insl
test
aaa
sub
xor
jbe
call
mov
sub
jb
pushf
in
push
int
cmp
xchg
in
push
adc
sub
pop
hlt
jae
les
cmpb
dec
sbbb
cmp
pop
scas
rorb
inc
out
dec
mov
orb
mov
lds
scas
push
add
mov
sub
flds
stos
andb
testb
jbe
and
lcall
pop
or
ret
subb
shlb
cmp
sub
push
inc
scas
cwtl
faddl
sub
add
jae
jg
call
xor
lret
ret
ret
inc
dec
jmp
inc
xchg
mov
adc
adc
lds
or
jo
mov
shlb
loopne
inc
sbb
sbb
jp
push
add
add
sub
incl
jne
inc
inc
adc
mov
dec
add
jno
cmpsl
aad
das
lret
add
lods
fadd
lcall
imul
or
fs
dec
lahf
loopne
ss
add
jmp
xor
incb
mov
adc
out
mov
jecxz
orb
inc
or
stc
adc
xchg
scas
xchg
mov
mov
push
sub
sub
pop
mov
mov
inc
sub
rolb
or
add
lret
in
mov
inc
inc
and
mov
loopne
sub
or
mov
rorb
push
pop
lock
subb
adcb
hlt
add
pop
push
lock
adc
and
sbb
dec
mov
in
fucomip
xor
scas
and
push
mov
or
dec
incl
sbb
pop
fdiv
aad
push
pusha
add
add
xchg
pop
inc
rol
fdiv
add
mov
sub
push
fsubr
insb
icebp
cmp
push
mov
add
pop
sbb
mov
dec
inc
pop
pop
popa
mov
andl
and
add
ss
xor
scas
roll
inc
xorl
jb
subb
popa
and
cmp
fisttpll
ss
adc
sbb
or
add
in
add
out
ret
movsl
in
xchg
cmpsl
jne
es
adc
mov
dec
and
mov
loopne
sub
enter
pusha
add
cltd
rcll
clc
xchg
rorb
push
push
out
test
adc
ds
push
aaa
xchg
test
dec
inc
fisubrs
jmp
push
sbb
stos
insb
fsubl
jle
ret
sub
fisttpl
nop
xor
cmp
push
push
mov
cmp
add
aaa
test
cs
inc
lds
add
push
call
jne
insl
loopne
out
adc
clc
and
and
dec
jmp
add
or
xchg
add
popa
add
inc
inc
pop
xchg
add
xchg
andl
dec
adcb
jmp
pusha
test
bound
mov
xor
pop
insb
sbb
mov
sub
push
repnz
lret
inc
nop
clc
jo
dec
sub
mov
or
sub
inc
addl
rol
mov
xor
bound
inc
mov
shlb
push
movsb
sub
and
add
add
or
add
call
sti
aaa
sbb
add
fcoms
clc
xor
cli
outsl
ret
mov
popl
out
adc
rcl
adc
aaa
pop
shr
call
sub
add
in
fwait
test
cmp
shl
jg
push
in
out
add
jmp
icebp
test
add
jno
stc
push
test
jg
inc
or
adc
xor
cmp
push
push
aam
andb
inc
xchg
mov
xor
add
adc
sbb
pop
clc
push
in
rorb
mov
jne
pop
incl
arpl
shlb
mov
out
pop
add
movsl
fs
fistpl
jo
jb
mov
xorl
inc
xor
sub
mov
xchg
mov
mov
das
pop
nop
pop
cmpsl
repnz
rcrb
sbb
and
jecxz
push
push
sub
xor
inc
das
mov
rclb
dec
mov
fildl
mov
cmp
push
jecxz
test
sbb
sbbb
sti
mov
out
mov
or
inc
out
shlb
mov
bound
ss
mov
inc
jmp
mov
shlb
fwait
sbbb
scas
nop
push
cmpsb
jno
push
popa
mov
add
scas
add
push
xorb
ret
mov
insb
jno
sbb
push
sbb
nop
mov
push
push
xor
sar
es
enter
icebp
add
adc
sarb
jg
cmc
jg
cmp
or
in
mov
xchg
push
in
ret
dec
push
push
xchg
mov
pushf
xchg
push
outsb
xchg
add
decl
mov
pushf
cltd
add
out
and
imul
cmpsl
mov
rcll
mov
or
stos
test
addl
jae
outsl
adc
mov
orb
add
aas
or
jmp
fsub
push
daa
add
xchg
ljmp
insl
adc
or
ret
mov
xor
movsb
cmpl
ret
das
call
xor
xor
shll
loopne
adc
js
cmpsb
xchg
incl
and
dec
jb
mov
pop
test
and
pushl
andb
mov
nop
adc
mov
adc
bound
adc
mov
mov
add
sub
mov
lcall
add
ljmp
out
dec
mov
mov
std
add
push
outsl
xchg
add
mov
xor
or
lcall
mov
mov
jle
mov
fildll
addb
dec
or
add
loopne
adc
xor
lock
mov
lcall
add
xchg
add
push
nop
dec
cmp
mov
aas
sbb
jbe
adcb
push
inc
andb
push
sub
sarl
inc
pop
dec
jmp
pop
rorb
dec
mov
out
lret
lock
notb
fs
jg
mov
add
add
out
push
lods
add
pusha
add
popa
add
pop
test
out
pop
addb
or
dec
mov
xchg
and
jo
push
sub
add
inc
adcb
cli
add
das
dec
pop
dec
push
outsl
nop
nop
inc
call
fimull
nop
test
sub
mov
les
inc
and
add
push
push
inc
add
inc
mov
push
decl
pop
jmp
mov
inc
pop
xor
add
and
push
je
adc
inc
mov
pusha
mov
add
in
dec
mov
jmp
add
inc
push
das
sub
iret
xchg
xchg
xor
bound
bound
je
sub
call
aam
sahf
lock
insb
mov
mov
push
repz
pop
add
xchg
dec
sub
push
cmpsb
call
nop
and
jb
test
jle
gs
mov
das
push
insl
mov
pop
cwtl
icebp
cmpordps
popa
inc
jb
push
mov
inc
in
add
rolb
jg
mov
adcl
add
mov
pop
inc
dec
jmp
out
mov
or
add
adc
out
mov
mov
xchg
adc
push
inc
and
push
adc
inc
call
or
pop
and
sbb
jb
xor
nop
add
lock
pop
loopne
add
inc
fcomip
add
rcrb
out
popa
enter
dec
out
mov
addl
xchg
jae
test
mov
push
test
or
pop
xchg
hlt
call
and
add
incb
pop
outsb
cld
add
add
mov
in
lcall
push
sub
out
add
shlb
mov
stos
dec
inc
add
cmp
jb
mov
ljmp
pop
adc
pop
push
mov
mov
and
data16
loopne
sbb
stos
jb
addb
or
in
mov
adc
and
cli
adc
xor
out
pop
add
mov
or
fdivs
out
mov
mov
xorps
jnp
aad
or
sub
sub
outsl
add
push
jbe
mov
xor
pop
je
sbb
orb
pcmpgtd
add
mov
mov
xor
push
mov
test
push
sbb
add
adc
sub
test
xchg
xor
leave
push
bts
jecxz
pop
aam
push
cmp
jne
jmp
ljmp
sti
clc
aaa
std
in
arpl
dec
es
je
mov
and
or
push
inc
and
or
fsubr
dec
mov
shr
jb
loopne
and
sub
cmpsl
adc
leave
jbe
add
dec
repz
push
xchg
and
and
mov
jno
pop
mov
push
adc
out
or
pusha
pop
call
iret
scas
push
xor
push
push
inc
testl
sar
and
and
mov
out
stos
rorb
cmp
lock
ficoml
inc
rclb
int
and
mov
mov
or
cmp
mov
mov
ds
push
push
pushf
sub
cli
adc
inc
add
popa
add
or
out
les
les
push
pushf
mov
jno
push
cli
inc
incl
inc
and
dec
pop
and
sbb
repnz
test
sbb
rorb
cmovo
aam
stos
decb
mov
les
pop
test
adc
mov
inc
add
aaa
add
xor
mov
mov
enter
rcl
daa
loopne
ret
add
inc
jmp
js
rolb
cmp
adc
xchg
rorb
in
pop
rcr
add
out
rcll
xor
int3
sbb
mov
and
ljmp
std
inc
xlat
add
outsl
sahf
movsb
add
jb
inc
mov
jecxz
ljmp
out
mov
jl
je
mov
int3
out
pop
cwtl
sub
pusha
mov
pushf
shrb
mov
lods
mov
loop
roll
pop
sbb
or
inc
pop
inc
dec
jnp
add
push
out
cmpsb
and
sarb
jbe
aam
loop
mov
in
xor
xchg
je
in
dec
pop
push
cld
pop
outsl
and
dec
out
test
cli
push
arpl
subb
mov
push
loop
add
mov
push
out
aad
push
and
and
hlt
es
pushf
outsl
sarb
cmpsb
cmpsb
das
push
sub
sahf
mov
add
into
aas
mov
pop
mov
or
inc
xor
mov
sbb
aaa
lds
popa
faddp
das
sub
rcll
sub
addb
cmp
mov
movsb
scas
addl
incb
pop
cltd
orb
test
sbb
jae
inc
pop
mov
xor
cmp
aas
adc
push
xor
or
sub
jns
mov
mov
loopne
pop
lock
jl
and
mov
sub
filds
pop
sbb
mov
mov
pop
call
les
adc
push
push
push
push
rcr
shlb
push
mov
mov
add
mov
adcb
faddl
dec
jb
adcb
loopne
clc
in
or
adc
mov
mov
pushf
and
mov
rolb
aas
xchg
fiaddl
sbb
sbb
pop
sub
hlt
test
xor
or
sub
inc
dec
movsb
add
and
bound
dec
out
fisttpll
mov
xor
icebp
fwait
in
stos
imulb
addl
mov
xor
and
mov
icebp
add
pop
mov
add
lds
andb
in
push
insb
aaa
fnstcw
jb
inc
insb
into
xorb
inc
mov
push
xor
sub
jge
scas
cmp
mov
mov
das
mov
xchg
jo
inc
add
pop
add
das
les
jbe
cmp
ret
pushl
push
dec
sbb
or
add
rclb
cmpsb
stos
incb
jne
adcl
icebp
lea
scas
cmp
lods
fdivs
inc
add
mov
mov
or
je
sbb
out
lret
or
out
movb
push
andb
adc
and
push
jo
ss
insl
aaa
idivb
adc
add
shl
test
ss
cmp
idiv
sbb
inc
jo
mov
out
inc
or
dec
ja
pop
inc
pusha
inc
shl
mov
subb
xchg
xchg
pop
jno
adc
int3
out
imul
jge
test
aaa
cmp
pop
mov
inc
or
clc
ljmp
fisubs
push
inc
jnp
iret
ret
mov
mov
jg
or
sub
or
xchg
inc
sbb
jb
out
sub
inc
jb
push
inc
out
mull
pop
adc
adcl
loope
pop
inc
ss
icebp
scas
mov
stos
insl
xor
icebp
fistl
pop
gs
arpl
cld
push
lock
push
clc
rorb
jg
adc
and
pusha
push
aam
mov
pop
push
and
xor
ss
xor
inc
fistpll
bound
pop
pusha
or
mov
add
xor
add
adc
xchg
scas
push
ds
std
loopne
out
and
mov
jb
push
insl
ds
mov
insl
stos
xchg
ss
pop
cmp
cmpsl
add
push
jp
insb
or
insl
or
jo
jp
mov
add
orb
sbb
mov
jle
rclb
pusha
lods
test
gs
lock
jle
xor
adc
cmpl
pop
push
repnz
add
pop
mov
popa
add
ds
jae
popa
sbb
into
insl
mov
sub
pop
pop
push
xorb
fistps
adc
ss
push
jb
dec
pushf
push
lock
inc
add
ret
sbb
add
shll
adc
mov
std
mov
mov
add
sub
sub
test
test
sub
mov
dec
mov
decb
enter
ret
sub
andl
push
outsl
add
insl
and
inc
mov
and
lods
ljmp
mov
sti
bound
mov
inc
cmp
test
fwait
cli
pop
xor
aaa
ljmp
pusha
add
push
mov
rcll
inc
stos
enter
fwait
ljmp
adcb
outsl
and
pusha
pop
mov
add
push
pop
inc
push
pop
js
add
mov
fcompl
mov
lret
cmp
fwait
push
jo
aam
movsb
adc
jno
pop
pop
insb
or
dec
lods
outsl
xchg
movsb
sub
stos
push
mov
add
fwait
rcrb
jecxz
outsl
cmp
mov
pop
and
pop
mov
and
pusha
jns
jns
mov
popf
and
mov
addb
lds
cmpl
mov
out
pusha
inc
mov
add
inc
add
jae
pop
sub
cmp
jecxz
test
clc
pop
pusha
cmp
filds
adcb
out
pop
lret
pop
dec
pop
or
mov
xchg
mov
stos
rolb
pop
mov
xchg
push
jno
add
adc
inc
inc
mov
aaa
adc
sbb
mov
shld
push
lds
push
pushl
mov
movsb
stos
or
movsb
jecxz
pop
adc
movsb
mov
nop
pusha
cli
fists
xor
adc
loopne
shlb
mov
mov
fists
cmpsl
and
pop
sub
clc
and
add
movsb
mov
sbb
ss
fwait
inc
or
lock
dec
fcomip
push
xor
movsl
push
movsb
addb
inc
sbb
sbb
or
cld
fistpll
add
add
pop
imul
sbb
xor
clc
dec
mov
xchg
rolb
jp
push
dec
jnp
fwait
inc
subb
xchg
xor
add
jb
push
call
adcb
push
out
cli
out
jno
push
insl
jp
shl
dec
mov
pop
jns
push
add
add
add
inc
shlb
js
sub
jo
push
cmpb
pop
test
andl
cmp
stos
mov
lret
adc
mov
sbb
xor
xor
xor
outsl
or
sbb
jecxz
add
rcr
insl
ds
add
nop
insl
and
int
cld
pop
xor
pop
shlb
cli
out
adc
loopne
inc
into
xchg
add
int3
or
cli
lea
test
nop
add
inc
xchg
mov
xchg
addl
inc
scas
in
adc
jecxz
inc
xchg
sbb
dec
loop
add
outsb
mov
es
shll
test
add
insl
sar
mov
cld
out
add
add
jns
add
sbb
sub
sbb
and
adc
decl
push
xor
inc
test
insl
push
lea
mov
mov
loope
xchg
or
ror
pop
loopne
xor
fmuls
mov
push
add
inc
clts
add
js
push
loop
xchg
add
sub
out
mov
pop
call
and
sar
jg
sbb
cmp
push
mov
je
xor
loopne
adc
xchg
sub
or
xor
add
sbb
dec
or
fldt
fisubl
out
and
add
push
insl
roll
xchg
icebp
sub
push
add
pop
jno
incl
pop
and
mov
sahf
push
or
pop
in
xor
sbb
sbb
pop
mov
lret
lea
cmp
into
cmpl
inc
pop
test
movsl
mov
rorb
test
lcall
insl
mov
push
mov
popl
push
sbb
pop
cmp
clc
dec
clc
xchg
iret
mov
jmp
mov
ret
pop
ss
movsl
aam
pop
or
das
jno
test
aaa
sub
std
mov
push
mov
and
incl
popl
scas
mov
sbb
sub
mov
cmp
out
nop
pusha
in
adc
mov
pop
or
xor
jo
les
sbb
inc
jmp
push
add
out
stos
rcrb
loope
fistpl
out
mov
call
add
out
fnstenv
adc
jge
mov
popa
xor
or
clc
int
lcall
adc
sbb
adc
push
push
adc
andnps
push
xchg
mov
dec
mov
mov
nop
mov
cmp
mov
icebp
xor
and
push
fsubl
and
jno
sub
add
xor
outsb
jo
and
push
mov
mov
sbb
add
aaa
icebp
mov
push
add
or
mov
test
fsubl
dec
addl
sahf
or
inc
pop
pop
pusha
add
inc
or
mov
loope
adc
imul
jae
adc
pop
adcb
jae
loopne
add
stos
lcall
loopne
sbb
push
mov
push
rorb
test
outsl
push
adc
push
add
jo
add
jg
add
and
sub
push
fistps
mov
aas
inc
bound
pushl
jnp
add
inc
push
mov
pop
in
jle
add
repz
shlb
cmpsb
pop
push
add
les
cmp
jg
sub
add
aas
loop
adc
fildl
loop
or
dec
jg
push
mov
dec
adc
cmp
and
jae
pop
push
push
dec
xchg
sub
pop
inc
add
aas
sbb
adcb
out
mov
sub
or
out
sbb
adc
ss
icebp
jg
bound
jbe
pop
dec
js
add
add
or
subb
adc
mov
sub
nop
mov
add
clc
lea
xchg
or
pop
push
hlt
decl
fmuls
call
xchg
pusha
and
push
and
add
jbe
xchg
ss
movsb
mov
push
addb
mov
push
adc
ljmp
push
and
sub
and
and
and
xor
lcall
daa
icebp
js
sbb
insb
adc
lret
pop
dec
call
adc
test
pop
jb
aaa
and
or
fildl
fsts
ja
add
sbb
xchg
fldcw
add
sbb
mov
inc
add
pop
fiaddl
loopne
adc
aaa
incb
cmp
adc
or
insl
mov
sub
add
xor
pop
adc
adc
ljmp
iret
add
call
pop
int3
pusha
lss
mov
adc
push
ret
es
in
dec
insl
stos
xor
push
xor
cmp
add
fcomip
out
cmp
movsb
jnp
jns
aad
shlb
out
xchg
repnz
sbb
add
mov
sub
loopne
lock
clc
pop
jae
mov
push
addb
jl
rcr
or
sub
test
cmp
jo
jbe
adc
das
out
stos
pusha
ljmp
mov
sub
adc
mov
add
jo
mulb
and
or
xor
mov
jno
ds
mov
std
inc
xor
mov
adc
pushf
nop
out
fistpll
cs
fs
ja
dec
add
mov
push
clc
inc
loope
cmp
out
xor
mov
inc
rol
subb
add
shll
mov
out
sarb
sti
push
mov
push
mov
push
fnstenv
ficoml
es
out
add
fcmovnu
mov
push
cld
and
cmc
sub
push
mov
add
jo
sub
fwait
inc
stos
scas
xor
sbb
out
fs
rcrb
push
add
pop
aas
adc
adc
pop
sahf
inc
repz
inc
cltd
idivb
xor
sti
or
pop
mov
mov
jg
adc
or
inc
push
cmp
push
sub
mov
cmp
xor
clc
outsl
jl
rclb
ja
adc
sub
scas
test
shrb
and
adc
cmp
dec
xchg
add
sub
adc
jl
add
loopne
cmp
insl
inc
push
outsl
sbbb
loop
pop
out
imul
pop
mov
inc
xlat
outsl
jo
clc
inc
add
push
hlt
and
hlt
out
mov
cmp
push
add
push
sahf
dec
mov
ret
cmp
stc
mulb
add
push
mov
dec
test
jae
sub
mov
pop
push
dec
and
push
pushf
add
mov
idiv
add
add
or
lcall
movsl
cmpsl
fs
mov
add
mov
and
adc
mov
imul
adc
in
cmp
dec
aad
inc
jo
js
mov
sub
adc
xchg
xchg
adc
add
push
cmc
imul
adc
shlb
insl
xor
adc
pop
xchg
test
push
add
mov
je
add
data16
aas
mov
insl
add
sbb
mov
addb
mov
xor
jmp
push
inc
lods
cmc
add
or
fsubl
call
sub
inc
pop
movhps
push
addb
inc
dec
add
jae
adc
bound
xlat
or
in
xorb
pushf
jp
sti
pop
inc
inc
sub
push
subl
pop
subb
push
call
push
add
pop
sbb
test
sub
push
int3
loop
pop
add
mov
pop
lods
test
rcrb
and
lock
add
setb
or
adc
adc
pop
test
rolb
ret
add
and
adc
out
mov
rcrl
add
je
test
arpl
push
inc
add
subl
add
xchg
std
ret
xchg
mov
xor
sarl
outsl
repnz
fidivrs
inc
mov
insb
inc
add
mov
xorb
lods
jmp
add
push
add
cmp
mov
ss
shr
int
insb
das
js
inc
inc
mov
popl
add
ffreep
pop
scas
jp
or
mov
out
cld
jg
or
sbb
push
out
scas
add
rorl
adc
add
inc
insb
push
jmp
mov
mov
inc
testl
insl
dec
mov
out
add
lods
add
mov
cld
fildll
jmp
lahf
add
addb
jae
ljmp
mov
xchg
or
or
mov
test
out
mov
test
clc
incl
ret
into
jb
ret
or
cmc
sub
add
mov
xorb
jae
jbe
lock
push
sarb
sub
mov
and
lods
add
cmp
rolb
out
ljmp
mov
clc
js
and
mov
xor
jae
adc
outsb
into
inc
inc
leave
out
mov
orb
aaa
ret
data16
rcrl
lds
and
push
fstpt
call
popa
jp,pt
jno
sbbb
push
and
push
push
das
sarb
inc
sti
sub
sti
jae
cmpsb
sbb
int3
mov
pop
mov
sahf
sbb
or
and
pop
cmp
jno
adc
push
mov
sbb
sub
and
lea
push
push
in
pop
mov
add
ds
and
cmp
jae
sahf
add
sbb
adc
add
scas
push
das
orb
sbb
or
and
push
lea
or
xorl
push
ds
repz
bound
push
pop
insb
ljmp
not
subb
insl
or
mov
or
sbb
bound
mov
inc
xchg
icebp
jg
jg
push
xor
or
xchg
subl
std
popl
pusha
add
dec
inc
sbb
fwait
pusha
les
xor
std
cmp
ja
jno
sbb
add
and
inc
dec
neg
scas
push
and
out
fdivr
rorb
add
sti
hlt
data16
jbe
sbb
push
enter
mov
fcomip
cmp
fwait
adc
inc
jg,pt
sub
mov
dec
adc
idiv
call
push
dec
ds
imul
inc
push
add
inc
jecxz
fwait
in
push
in
aas
enter
xchg
mov
punpcklbw
icebp
mov
mov
and
push
jg,pn
mov
test
push
add
add
arpl
push
xchg
sbb
mov
es
out
popa
jae
xor
and
jae
pushl
adc
push
or
adc
test
in
aaa
jmp
adc
jbe
arpl
daa
mov
lock
cmp
repnz
in
push
push
pop
push
subl
faddl
pop
mov
xchg
add
xchg
sub
pop
andb
cmp
jo
add
mov
pushl
sub
ffreep
add
mov
lcall
inc
or
outsl
inc
cmp
jo
push
inc
mov
pop
in
pop
cmp
incb
inc
not
jmp
or
pop
mov
scas
adc
mov
inc
push
dec
aas
and
loope
cmp
popf
lret
mov
or
jne
mov
jp
test
aam
cltd
cli
or
and
or
add
repz
es
sahf
testb
cmp
incl
cli
pop
mov
outsb
icebp
mov
add
ds
ficoms
lcall
jno
loopne
add
rcl
and
outsb
shrl
mov
out
add
mov
or
and
add
add
ja
ja
add
daa
testb
out
add
les
and
add
adc
je
add
xor
stos
xor
pushf
push
cmp
push
sub
loopne
jl
sub
test
shlb
xor
lcall
sub
xchg
fwait
add
mov
add
mov
xor
andl
es
add
push
and
pop
jae
call
push
addb
inc
ja
jle
imul
ss
mov
pop
add
mov
adc
jg
inc
leave
jo
test
xchg
cli
sarb
xchg
stos
pusha
lcall
mov
dec
rcll
sub
clc
pop
add
out
add
pop
aaa
cmp
es
add
dec
push
add
subb
push
or
add
add
pop
add
bound
inc
imul
adc
cmp
loope
add
push
pop
pusha
jo
sub
or
pop
lret
adc
out
mov
or
add
lds
sbb
add
mov
ja
or
pop
ljmp
adc
cmp
and
dec
push
jp
xchg
xor
mov
or
mov
addr16
mov
sbb
sub
adc
push
movl
pop
mov
nop
mov
fildll
or
in
loope
jle
and
or
loopne
add
cmp
addb
push
sbb
add
stos
dec
push
pop
stos
push
add
mov
in
xchg
rorl
adc
inc
adc
push
xor
mov
dec
sti
scas
sbb
rorb
pop
loopne
mov
adc
lock
pop
insb
scas
jp
adc
adc
jae
pusha
pop
and
lods
xchg
loopne
pusha
or
sub
addr16
lock
and
push
adc
addr16
cmp
roll
incl
mov
mov
arpl
dec
loopne
repnz
out
cltd
xchg
add
js
inc
jo
xor
out
inc
xchg
dec
int3
ds
pop
jo
shlb
lock
mov
rclb
das
adc
xor
imul
imul
jl
jp
add
inc
cld
add
loopne
mov
out
xchg
loope
inc
jae,pt
sbb
cld
xor
out
mov
cmp
mov
fdiv
jp
or
adc
aaa
jns
push
stos
push
push
sbb
nop
popa
dec
andb
sar
in
aad
inc
lea
dec
mov
jb
in
add
outsb
bound
sub
push
inc
ss
pop
fcomip
mov
adc
add
inc
lea
push
loope
or
adc
add
push
sbb
lock
or
pop
les
rcll
loopne
aas
sbb
jg
mov
inc
xor
sbb
add
shlb
movb
loopne
mov
sub
stos
add
jp
pop
testl
negb
inc
clc
mov
roll
clc
xor
popa
mov
jg
or
addb
inc
add
add
enter
mov
mov
movsl
add
mov
adc
cltd
mov
mov
add
pop
inc
in
or
adc
sbbb
xor
xorb
mov
ljmp
add
ljmp
jg
adc
or
and
ret
or
or
jmp
andb
inc
shlb
pusha
pop
push
movsb
mov
add
mov
cmp
inc
add
out
or
lcall
or
pop
mov
jmp
sbb
jg
popa
rorb
out
ja
jl,pt
sbbl
adc
testl
or
push
faddl
cmp
iret
std
sub
or
adc
mov
inc
xchg
cmp
psubb
pusha
jne
and
mov
add
repz
jl
push
rcll
push
sbb
fcomp
loopne
cmp
or
jp
xor
cmp
dec
and
mov
test
xor
ror
sbb
add
inc
nop
mov
out
xchg
in
fprem
ja
jno
testl
inc
mov
ss
loopne
psraw
mov
pusha
orl
nop
cmpb
jb
dec
in
cmp
jl
hlt
mov
mov
loope
mov
and
das
in
adc
dec
lea
ror
push
rcr
or
js
movsb
push
jb
mov
jae
add
mov
dec
or
adc
loopne
jno
test
push
pop
jb
fiadds
test
scas
ret
inc
push
xor
out
lret
dec
jo
adc
jg
lock
add
or
add
hlt
pop
mov
jl
or
sti
loopne
jno
ljmp
divl
xor
pop
lock
mov
mov
xchg
mov
push
incb
pop
rolb
xor
add
inc
outsl
xor
pop
mov
xchg
mov
adc
cmp
fmul
mov
mov
cmp
lods
pushf
insb
punpcklwd
nopl
jns
adc
inc
inc
and
push
testb
mov
push
mov
mov
insb
push
out
mov
and
pop
popf
xchg
lock
shrl
ljmp
add
mov
mov
imul
sbb
cmp
loopne
insl
clc
ljmp
mov
or
push
adc
add
scas
mov
add
popl
stc
adc
push
sub
rclb
ret
stos
or
xor
jo
daa
or
and
push
jbe
pop
add
mov
decl
je
and
sbb
add
xchg
add
inc
ljmp
das
mov
inc
pop
test
jle
add
mov
out
stos
dec
xorb
mov
loopne
stos
mov
inc
ljmp
add
pop
insb
lds
inc
fists
pop
sub
inc
cmp
call
add
mov
insl
xchg
sbb
shlb
push
or
pop
add
mov
mov
mov
fisubl
shll
push
mov
or
cli
push
cmpb
add
pop
fcoms
sub
fildl
push
adc
add
jb
test
adc
stc
loop
adc
fisubrs
fisubs
and
cs
out
je
andb
cld
add
add
lods
sub
and
lcall
inc
sahf
in
mov
add
insl
add
or
dec
shrb
mov
push
es
mov
das
and
fcoms
sbb
jo
std
ja
sarb
fldl
add
test
add
cld
pop
rclb
push
mov
adcb
inc
ss
pop
xchg
xchg
cli
jg
insl
mov
jle
add
mov
dec
icebp
xor
cmc
or
ret
mov
mov
test
sbb
iret
ds
mov
fadds
push
cmp
jb
adc
sbb
add
std
cwtl
nop
xor
or
cmp
test
or
aas
out
out
mov
or
add
cmp
push
shll
cwtl
cmp
push
out
xor
subb
lock
mov
push
inc
and
cmp
adc
out
in
dec
aas
cmpb
fimull
or
aaa
xchg
icebp
sbb
push
xchg
sbb
add
mov
jecxz
fisttpl
sahf
add
cmp
dec
and
pop
movsl
inc
or
push
inc
add
cmp
pop
xor
clc
xchg
loope
mov
inc
and
cmp
imul
inc
mov
xorb
es
sub
rolb
sbb
js
add
test
xor
sahf
fs
jo
or
xor
mov
iret
or
repz
adc
out
cwtl
pop
add
cld
lods
inc
stos
push
aam
mov
mov
lcall
or
notb
decl
add
into
pusha
stc
push
inc
add
inc
mov
loop
fsubr
and
lfs
or
js
roll
test
rcll
add
std
stos
xchg
icebp
push
test
adc
or
push
pushf
adc
adc
insl
and
xor
and
push
test
daa
icebp
add
xorb
mov
adc
cmp
insb
ret
dec
mov
roll
out
test
or
dec
push
xor
mov
faddl
out
adc
jle
jmp
scas
repz
xorb
subl
lret
inc
cwtl
push
shrb
mov
add
roll
mov
lea
test
jne
mov
add
inc
lea
aas
and
rclb
hlt
dec
add
outsb
jecxz
push
inc
xchg
jbe
add
cmp
and
mov
outsb
sbb
mov
inc
scas
cmp
and
stos
and
ds
adc
push
mov
jp
pop
mov
push
aam
addb
xor
inc
sbb
shll
insb
add
stos
decb
bound
or
inc
pusha
adc
clc
xor
insb
xor
push
scas
mov
cltd
sub
sahf
push
jl
clc
inc
adcb
cmp
sbb
add
mov
out
push
pusha
add
sbb
or
mov
or
loopne
into
inc
and
adc
sbb
test
movb
add
imul
bound
aam
mov
mov
lea
in
cli
adc
dec
mov
mov
jmp
and
inc
dec
incl
loopne
outsl
push
mov
lock
scas
push
loop
getsec
adc
mov
mov
outsb
add
ds
push
jne
xor
divl
icebp
inc
subb
sbb
out
mov
mov
pop
or
fldl
push
push
jle
mov
testl
dec
push
je
lds
inc
ljmp
arpl
pop
dec
pusha
cmp
pop
es
lds
out
aaa
jl
push
lcall
add
iret
or
nop
push
fildl
inc
out
xlat
loope
clc
outsl
js
shll
jle
or
lods
pop
cmp
add
lods
cmp
inc
jecxz
sbb
enter
jo
test
cmp
or
pushl
out
out
push
xchg
popa
lods
jae
mov
dec
loope
icebp
lea
filds
mov
adc
test
lods
inc
stc
push
add
jmp
insl
add
cmp
and
pop
sub
mov
orl
loope
xchg
or
and
lea
cmp
les
mov
push
aam
jae
cmp
or
pop
jae
and
cmp
or
in
add
or
inc
mov
inc
inc
shll
out
jecxz
inc
or
cs
and
pop
pushf
rcrb
sbb
ljmp
nop
dec
incl
push
loopne
push
xchg
add
test
cli
jo
or
cld
push
lods
add
adc
out
sub
pusha
add
sbb
or
xor
cld
xor
ret
es
sub
sbb
decl
out
stos
pop
out
add
inc
loopne
je
insl
mov
in
pop
cld
mov
pusha
or
cmp
loopne
add
push
pop
xchg
lock
pop
in
orb
subl
mov
fnstcw
jo
inc
aaa
popa
add
and
jecxz
shll
aaa
mov
mov
jg
jl
sub
out
ds
dec
adc
pop
out
xchg
loope
cmp
push
addr16
js
cltd
cld
mov
and
pop
xor
loopne
loopne
shl
scas
add
mov
pusha
adc
add
and
adc
add
inc
xor
bnd
stos
scas
nop
mov
push
stos
cmc
inc
out
mov
faddl
add
out
aam
dec
out
incl
into
jae
aas
orb
push
insl
sbb
mov
mov
xor
icebp
loop
adcb
test
sub
or
loopne
cli
addb
xor
pop
cmp
or
out
lret
faddl
out
dec
push
sbb
addb
daa
movsb
add
mov
pop
shlb
jl
jb
jl
push
sub
and
rclb
mov
popa
std
ljmp
icebp
adc
sbb
adc
and
or
or
jns
mov
xchg
sbb
insl
pop
in
pop
mov
jae
cmp
and
fistpll
daa
add
inc
cld
or
and
push
inc
ds
addb
clc
stos
or
mov
jge
popa
xor
jo
fbld
cmp
das
jne
out
and
or
pusha
insb
dec
sbbb
adc
mov
push
or
xor
push
incl
add
inc
mov
jne
ds
push
inc
gs
cmpsb
xorl
cli
roll
data16
jae
rcrb
xchg
ret
mov
adc
and
fwait
call
xor
jae
popa
in
pusha
cld
daa
je
insl
daa
pop
popa
mov
dec
mov
int
and
pushl
mov
cmp
out
es
adc
in
mov
cmp
push
xor
fistpl
adc
jno
mov
sbb
mov
and
ss
jb
cmp
push
lods
mov
add
adc
out
push
push
in
fcmovu
add
mov
mul
or
mov
rorb
jb
add
test
shll
add
mov
sar
inc
repnz
mov
test
addr16
or
dec
add
sbb
pop
fisttps
pusha
cmp
and
cs
out
nop
fcmovb
add
ja
rolb
jbe
jo
pop
subb
add
pop
xchg
mov
cmp
or
inc
cmp
adc
add
subl
out
adc
adcb
cmp
jmp
adc
add
pop
xchg
hlt
out
cmp
push
xorl
jg
pop
lahf
add
and
or
and
adc
clc
out
and
and
pop
push
cli
mov
xchg
aaa
or
or
or
mov
push
push
xor
mov
push
xchg
and
dec
cmp
iret
jno
icebp
shlb
and
pop
mov
sbb
jb
and
pop
xor
repnz
rol
call
out
out
pop
cltd
jo
adc
cltd
insl
inc
pop
jo
mov
lcall
sbb
add
add
dec
push
andb
jl
nop
push
mov
and
sub
aas
jle
xorb
je
sbbb
repnz
inc
hlt
mov
stc
sbb
ret
xor
leave
pusha
push
stc
sub
adc
adc
push
pop
in
inc
cmc
in
mov
pop
adc
dec
mov
sub
je
adc
das
push
lcall
in
push
jno
add
cmpsb
mov
adc
lods
call
push
out
mov
out
out
and
aas
xchg
push
mov
sbb
mov
aas
clc
inc
cmp
lock
inc
aas
mov
loop
inc
pop
pop
adcb
sbb
add
sub
cmc
and
icebp
jmp
imull
fstpl
mov
sbb
inc
push
cmp
jo
popa
outsl
scas
adc
pop
push
sbb
push
add
and
ds
lods
adc
out
outsl
mov
inc
add
cmp
and
lods
jg
sub
or
and
int3
rolb
mov
clc
in
add
pusha
mov
jg
ss
rcrb
repz
jmp
and
push
adc
cmp
or
insb
pop
adc
jle
cmpsb
pop
pmaxub
stos
inc
test
xchg
outsl
scas
and
jno
insb
fwait
mov
sbb
jb
data16
push
pusha
dec
aaa
sbb
adc
inc
mov
sub
jno
add
pop
push
nop
mov
bound
out
push
bound
scas
into
clc
addb
mov
jno
mov
or
adc
nop
inc
lock
push
xor
mov
jbe
push
mov
fistpll
add
and
push
cmp
mov
je
add
out
push
subb
pop
mov
rclb
sbb
pop
add
mov
mov
shlb
call
add
lock
nop
nop
cmp
lock
mov
adc
push
pop
lret
rorb
jl
push
out
shr
mov
mov
push
inc
or
add
test
push
sub
push
fmuls
out
push
dec
insb
nop
icebp
clc
mov
adc
jo
cs
add
addb
and
cmp
into
push
jns
add
out
fwait
mov
mov
test
push
or
push
mov
ror
leave
mov
shl
mov
bound
out
push
inc
or
int3
cmc
inc
adc
pop
jl
scas
pop
jle
or
and
pop
mov
push
add
hlt
adc
sti
mov
sbb
adc
adc
cmp
movsb
cmp
out
dec
into
lock
test
fisttpl
daa
xorb
jbe
jno
ret
add
ds
add
into
push
call
inc
mov
adc
out
push
jbe
push
test
inc
cwtl
adcb
add
aam
pusha
adc
out
ret
xchg
dec
jmp
jae
sbb
xchg
or
out
outsl
rol
sbb
roll
add
or
mov
sbb
loop
xchg
xchg
movsl
in
or
or
jmp
inc
xor
stos
xchg
cs
std
mov
and
sti
add
cmp
jno
clc
decb
inc
add
inc
cwtl
out
scas
jbe
cmp
sbb
add
outsl
into
rorb
addb
cs
loopne
add
call
mov
in
rcrl
cwtl
jg
push
js
in
mov
lahf
pop
cmp
jo
shlb
lock
mov
add
jae
hlt
cmp
cmp
cli
cmp
mov
out
and
xor
mov
stos
add
sbb
push
mov
adc
sarb
adc
or
add
movsl
aam
pop
call
or
je
mov
inc
jecxz
mov
lds
pop
test
xor
pop
sbb
call
and
adc
loopne
out
xor
mov
pusha
fldt
sub
sbb
adc
sub
sbb
out
push
lahf
adc
out
fmull
or
mov
jne
push
fisttpll
clc
or
out
call
lock
dec
mov
out
fcoms
push
and
jae
lods
lock
icebp
fadds
cmpsb
mov
pop
or
pop
dec
jb
pop
pop
out
push
inc
xor
jecxz
les
pop
pop
data16
lret
mov
or
fisubl
fcoms
mov
inc
xchg
mov
add
repz
lds
add
and
int3
sarb
sahf
jno
shr
sbb
je
adc
and
push
push
outsb
addr16
add
and
jl
aam
xor
adcb
pop
xchg
add
int3
add
push
adc
sbb
mov
in
jnp
add
mov
push
xchg
inc
adc
popf
xor
bound
fcomps
inc
addb
rorl
hlt
push
fisttpll
cmp
xchg
xor
enter
add
movq
ret
ret
add
xchg
testb
mov
add
mov
jnp
dec
pop
hlt
fisubl
lock
test
jle
add
xor
cmpsl
insl
insb
add
xchg
rcrb
add
add
jp
pop
ds
adc
xor
cmp
inc
or
das
cld
jbe
int
pushf
cmpl
clc
lcall
das
addb
pop
addl
xchg
ja
adc
mov
das
mov
out
sbb
ret
jb
pushf
ljmp
sbb
negl
xchg
andb
sbb
fsubrl
and
pop
aam
add
xor
outsb
mov
scas
add
scas
push
pop
das
mov
jmp
lods
subb
shl
dec
cmp
sub
test
push
or
add
in
inc
adc
mov
adc
adc
incl
push
pop
mov
sbb
test
addl
sbb
scas
adc
mov
sub
xor
adc
lods
inc
push
add
jb
rclb
das
push
fdivl
mov
push
mov
orb
mov
add
daa
in
and
sub
shr
sub
xchg
push
fdivl
cmp
cld
push
int3
jns
out
push
inc
or
sbb
aas
xor
sub
aaa
mov
add
add
mov
clc
aaa
rorb
pop
dec
orl
xchg
add
inc
cmp
jne
scas
ffree
mov
inc
push
pusha
inc
mov
inc
aaa
pop
sub
xchg
push
jnp
jb
out
fdivs
outsb
add
cmp
xor
mov
or
mov
jbe
les
or
or
ret
sbb
add
adc
cli
cmp
mov
adc
add
mov
or
leave
shlb
and
int
jne
push
ljmp
and
je
lea
inc
rol
incl
jb
aas
push
jb
fcmovnb
and
push
xchg
mov
inc
dec
fcomps
fisttpll
out
iret
xchg
out
push
movsl
push
push
add
mov
inc
int
cmp
and
aas
adc
jb
mov
pop
inc
lds
or
add
mov
xchg
lret
pop
inc
in
fdiv
inc
sub
xchg
repnz
lock
insb
rol
adc
pop
and
test
and
adc
jl
jb,pt
insl
sub
pop
and
push
or
mov
push
hlt
mov
sbb
insb
and
sub
add
dec
and
ret
jg
aas
or
add
data16
pop
push
or
or
ficomps
push
mov
pop
add
mov
outsb
pop
cli
add
sub
sbb
lret
jp
push
mov
push
push
loopne
and
or
cmp
push
sub
leave
and
mov
and
add
sub
icebp
and
sarb
hlt
or
or
push
pop
push
push
inc
push
mov
push
jge
inc
lods
pop
in
aam
test
push
and
mov
cmp
sub
push
stos
inc
rolb
mov
mov
sbb
cli
rclb
or
clc
lods
mov
add
adc
push
pop
lds
lcall
jmp
adc
xchg
mov
out
sbb
adc
mov
push
inc
rcrb
subb
mov
inc
add
stos
loopne
loope
es
mov
push
mov
outsl
xor
fstpt
add
test
xchg
lods
loop
and
mov
xchg
call
pop
pop
cmp
fnstenv
jb,pt
adc
mov
inc
xorb
inc
or
out
int
sti
push
mov
and
inc
adc
and
pop
cmp
shrb
add
and
clc
aam
je
loopne
pop
cmp
cmp
sub
repz
in
sbb
and
clc
fcmovnu
scas
push
cmp
xorb
mov
rorl
pop
cltd
xor
repz
jo
mov
ja
sbb
jg
push
push
popa
fwait
enter
hlt
sbb
fiaddl
xchg
aad
sarl
xor
fnstenv
xor
icebp
cmp
push
xchg
add
mov
fcmovu
lds
mov
sub
stc
xor
add
adc
sbb
jg
inc
pushf
cmp
int
scas
inc
adc
jmp
fidivrs
dec
mov
outsl
clc
aas
dec
jnp
pop
pop
insb
mov
jb
in
mov
fistpl
jb
xor
cmp
mov
cli
fisttps
out
cmp
pop
test
loopne
leave
cmp
push
pop
pop
or
push
lcall
add
jnp
cwtl
add
add
imul
pop
cwtl
cltd
pop
das
add
or
int
cmpsb
adc
mov
fstl
imul
fbstp
adc
pusha
or
mov
les
push
mov
fsubrs
xor
and
jb
clc
lods
gs
adc
cmp
enter
cwtl
adcl
fisubl
mov
inc
mov
jle
add
ljmp
mov
inc
push
ljmp
clc
fndisi(8087
push
xorb
and
add
sub
mov
aas
dec
adc
sbb
sbb
ror
add
or
jmp
mov
push
add
sub
and
xchg
leave
loope
rorb
mov
and
jbe
rolb
push
outsl
cmp
addl
adc
mov
outsl
aaa
jo
test
xchg
movsb
scas
addb
sub
fucomi
es
inc
lret
pop
inc
loope
push
lds
mov
add
pop
add
mov
daa
call
inc
and
testb
xor
cld
fs
lods
jbe
mov
inc
xor
pop
lcall
in
ror
in
test
push
xor
orl
cwtl
popf
lock
clc
incl
push
jl
add
xorb
add
jl
icebp
mov
mov
cmp
mov
imul
adc
xlat
pop
sub
fcomps
xor
mov
lea
outsl
add
sbb
mov
add
sbb
decl
gs
push
ficompl
shrb
jg
mov
insb
jb
and
shll
cmp
xor
shlb
add
dec
add
pop
stc
or
ljmp
roll
test
lods
push
popf
lret
sbb
mov
adc
sbb
ja
pop
inc
sbbb
out
add
jge
sub
mov
pushl
or
sbb
xor
lret
dec
sub
sbb
das
and
imul
inc
add
bound
xor
sbb
out
sbb
cmp
std
outsl
pusha
and
inc
mov
shrb
lds
jno
mov
sbb
inc
cmp
orb
mov
push
jo
xlat
addl
incb
cld
rclb
ljmp
xchg
dec
jb
inc
call
cli
push
xchg
jo
sbb
addb
xchg
sar
addl
mov
iret
clc
adc
inc
inc
xchg
mov
rclb
or
iret
in
mov
push
cmp
pop
push
push
add
sub
or
ss
filds
inc
jecxz
add
adc
inc
xchg
cmc
mov
cld
andb
add
cmp
rorb
in
ds
lret
cmpb
idivl
or
push
or
adc
sub
adc
orb
outsb
xchg
add
mov
out
cwtl
rcll
push
add
ret
loopne
jae
sub
mov
xchg
or
inc
and
push
dec
jl
inc
add
xchg
scas
addb
push
jle
in
lds
sub
add
mov
push
xor
nop
push
and
out
inc
jnp
cmpb
or
mov
rcrb
test
push
jge
sbb
and
xchg
cmp
push
cmp
ljmp
outsl
pop
sbb
aaa
sbb
ja
inc
add
sbb
mov
add
decl
or
or
mov
fcoml
mov
sarl
or
cmp
cmp
cwtl
sub
addr16
call
cmp
and
loopne
add
cmp
xacquire
mov
add
cli
inc
mov
or
lods
fistpll
cmpsb
xchg
xor
inc
adc
mov
pop
nop
mov
jle
mov
inc
mov
inc
fiadds
jg
add
pop
or
add
aas
mov
adc
adc
sub
mov
and
jmp
andb
icebp
add
outsb
in
push
sbb
orb
call
dec
aad
or
or
jae
movsb
mov
inc
cmc
cs
in
push
ja
inc
pop
paddsw
incl
sbb
loopne
cmp
or
dec
insl
loopne
fneni(8087
or
rcrb
pop
sarb
adc
xchg
mov
icebp
call
or
mov
xchg
inc
push
inc
adcb
cld
stos
push
mov
or
es
rcll
and
insl
sti
out
mov
lret
add
xchg
lock
lods
and
clc
and
rorb
and
and
test
in
jns
inc
jle
insl
bound
jo
jno
ljmp
sub
sbb
dec
or
or
outsl
insb
adc
pop
mov
mov
es
fmuls
in
dec
icebp
inc
inc
or
mov
loopne
cmp
push
add
in
add
mov
mov
xor
int3
das
and
sbb
or
xlat
in
in
and
lock
xor
test
push
loopne
add
insl
xorb
stc
pop
adc
lcall
add
lcall
and
insl
push
push
fistps
pop
imul
incl
xor
aaa
sub
mov
or
xor
push
xor
inc
shrb
dec
das
adc
add
or
enter
jmp
mov
mov
lds
pop
mov
sbb
lea
sbb
jp
mov
xor
mov
into
sbb
add
loopne
js
lock
dec
mov
xchg
dec
push
dec
push
add
jb
push
and
in
sbb
outsl
js
sar
loope
add
inc
test
add
adc
call
mov
or
fists
inc
fistps
or
sbb
inc
mov
ss
dec
or
or
outsl
call
or
sti
orb
add
adc
add
mov
enter
add
add
testb
add
pushl
xchg
adc
sbb
inc
clc
bound
add
and
add
ljmp
stos
add
push
out
and
and
icebp
mov
pop
mov
and
pop
mov
lods
fcmovnbe
pop
rcrb
out
xchg
test
pop
add
cmpsb
mov
inc
clc
add
adc
sub
das
decl
cli
mov
inc
jle
push
xchg
clc
jae
and
mov
loop
lock
call
loope
popa
and
pop
daa
jae
jo
inc
inc
fwait
adc
pop
xor
or
test
xchg
sbb
es
dec
push
add
dec
add
lcall
inc
sbb
add
jae
sbb
add
push
add
outsb
ljmp
dec
xor
push
add
jo
movb
or
mov
adc
xchg
or
push
insb
mov
push
push
adc
fcoml
push
ret
push
adc
add
push
cmp
push
je
mov
clc
inc
cmp
xchg
xchg
add
add
popa
sbb
sbbb
xchg
xlat
xchg
loopne
push
jo
insl
jae
sub
inc
mov
insb
aad
fdiv
jae
push
jbe
mov
inc
lcall
sbb
stc
fbstp
daa
js
xchg
and
push
outsl
push
push
out
incl
lds
inc
add
and
xor
es
adc
inc
mov
xor
adc
movsb
ficoml
or
add
les
and
inc
mov
adc
jo
xor
or
lret
jp
ljmp
pop
ficoms
xor
mov
sub
or
shrb
test
add
fistpll
mov
or
xorb
and
xchg
jle
pop
adc
rolb
xor
sub
ret
dec
xor
push
push
mov
test
pop
sub
adc
pushf
add
outsb
push
xor
or
ja
or
inc
movl
add
push
pop
push
cmpsb
clc
outsl
jge
xchg
and
sbb
pop
js
cld
jae
pop
fildl
ljmp
mov
add
lret
sub
mov
sarb
insb
dec
push
ds
mov
sub
std
and
rclb
out
aad
dec
enterw
inc
call
bound
mov
fidivs
add
jae
outsl
sbb
adc
int3
nop
enter
xor
stos
popa
test
loopne
ret
jl
pop
inc
jmp
and
xor
or
inc
rcrb
loopne
inc
out
clc
sarb
mov
addb
adc
or
das
inc
jle
and
add
jg
adc
or
jbe
int3
cmp
jne
out
inc
push
and
xor
lods
inc
or
mov
adc
push
outsl
inc
inc
inc
add
rol
pop
jl
test
add
aam
or
aam
nop
mov
pop
or
rorb
adc
inc
xor
push
mov
mov
mov
ja
out
xchg
std
jb
addb
ss
rcrb
push
out
push
sub
add
scas
mov
or
ljmp
pop
inc
pushf
add
add
dec
inc
or
cli
xchg
add
push
dec
push
mov
cmp
push
aam
inc
into
jmp
orb
push
push
inc
adc
mov
add
xorb
dec
sbbl
or
insl
and
push
decb
test
cmp
or
test
rorb
jge
adc
adc
cwtl
test
adc
mov
mov
inc
add
cwtl
shr
test
or
adc
and
adc
mov
pop
roll
push
call
or
xchg
sub
rorl
xor
incl
and
outsb
clc
and
adc
add
mov
jmp
add
mov
call
xor
mov
or
or
mov
incl
mov
test
clc
mov
cmp
push
mov
enter
push
sarb
test
cs
pop
and
inc
pusha
push
mov
mov
fcoml
push
cld
inc
jb
dec
shlb
add
jo
ds
pop
loopne
mov
pop
pushf
out
int
sub
bound
jb
mov
xor
adcb
mov
add
push
ret
in
push
mov
add
or
dec
stos
push
inc
gs
mov
mov
je
push
or
cld
outsb
sub
fldl
mov
and
sub
popa
cmpsb
or
push
rol
pop
sub
call
jno
loopne
out
mov
in
pop
mov
add
arpl
cmp
lcall
out
pop
ucomiss
jb
test
ret
sbb
pop
loopne
pop
insl
ljmp
add
pop
andb
adc
cmpsb
addl
xlat
out
and
push
push
add
loop
jb
cmp
pop
les
pop
andl
incl
mov
mov
insl
andl
pop
xor
mov
loope
inc
pusha
ss
pushf
inc
fs
pusha
cmp
push
lret
or
jl
lcall
out
add
mov
push
into
mov
xadd
out
push
mov
das
and
push
mov
xor
rcll
mov
jmp
or
out
sub
pop
sbb
and
dec
popa
push
add
ds
fadds
cmp
sahf
cwtl
jp
sarl
mov
sbb
mov
add
sbb
cmp
adc
cmp
in
add
mov
or
and
cs
add
add
adc
push
mov
inc
push
clc
or
sahf
out
stos
mov
fildl
xorb
sub
push
or
jo
mov
jl
adc
add
mov
ret
fwait
mov
pop
pop
shll
es
push
pop
pop
mov
push
jb
dec
pop
pop
out
and
pop
and
dec
and
dec
ljmp
push
sti
xchg
pop
loopne
ss
in
and
fs
and
lods
jb
rcrb
or
xorb
adc
inc
add
icebp
xchg
outsl
adc
cmp
adc
sbb
loopne
mov
mov
and
out
outsl
xchg
jb
shlb
push
outsl
into
mov
bound
pusha
dec
int
out
fldl
xchg
jl
stos
subl
inc
lods
repnz
pop
dec
and
pop
mov
inc
dec
idivb
push
adc
jo
and
insb
dec
mov
test
int3
ss
mov
add
bound
hlt
imul
pop
dec
push
out
push
mov
loopne
in
inc
adc
mov
std
fbld
or
or
add
push
es
mov
dec
mov
xor
scas
ficoms
loopne
data16
call
add
add
ficoml
mov
movsl
shlb
loopne
or
xorl
push
mov
repz
repnz
dec
xor
xchg
mov
lods
jp
notl
jns
inc
test
stc
cmc
push
nop
pop
test
add
or
cs
add
outsl
in
or
add
jg
jno
pop
sti
insl
or
jp
add
xor
mov
add
popa
or
xchg
mov
push
imull
and
push
inc
ljmp
mov
dec
add
adc
enter
dec
or
inc
add
add
rolb
add
out
test
nop
or
mov
mov
sub
or
addb
pusha
and
xchg
push
lcall
insl
pop
nop
popa
mov
mov
lret
loope
shrl
and
jbe
jg
jo
lahf
les
add
popa
mov
sub
jle
movsb
xchg
mov
sbb
jg
fildll
loopne
insl
sub
icebp
imul
aas
cmp
add
xor
lock
mov
sbbb
or
xchg
push
mov
xor
add
loopne
inc
loopne
popl
xor
imul
inc
insl
cs
push
pusha
ret
js
mov
bound
push
cmp
jp
insb
or
push
jno
jne
xor
push
or
ljmp
ss
add
xor
idiv
xor
out
inc
cmp
sub
xchg
pusha
adc
or
inc
mov
fs
je
add
dec
cmpb
movsb
out
add
or
xchg
call
jle
dec
add
inc
push
test
es
add
pusha
shrb
sub
xor
push
add
xor
std
xchg
jne
cmp
out
dec
inc
jo
jo
hlt
add
add
xor
mov
paddw
int3
push
ljmpw
mov
push
nop
mov
icebp
mov
and
or
add
jo
mov
inc
or
pop
push
test
adc
arpl
test
add
decl
dec
jns,pt
pcmpeqb
mov
push
out
mov
xchg
pop
jle
dec
xor
and
roll
psrad
push
aam
adc
mov
sub
loop
or
jbe
inc
rep
mov
out
divb
pop
push
or
lret
and
pushl
or
push
adc
sbb
adcb
ret
icebp
xor
mov
shll
jb
notb
mov
sub
add
sahf
out
rcrb
lcall
adc
push
test
mov
and
mov
add
sbb
push
sarl
xor
xor
sarb
push
push
xor
aam
adc
repz
xchg
or
jnp
shlb
ds
add
adc
popf
cli
mov
sub
in
or
in
add
add
das
push
adc
enter
jbe
das
jae
lock
test
outsl
cmp
jae
cmp
add
jb
insl
pop
dec
gs
sbb
and
cmp
sbb
or
inc
or
lds
lahf
cwtl
push
adc
inc
repnz
sub
xor
adc
adc
shrb
xor
pusha
pop
mov
or
pusha
es
add
scas
adc
in
out
xchg
out
subb
pop
cmc
mov
sbb
inc
or
addl
jg
jg
out
lret
testb
nop
imul
and
in
pop
shrb
clc
add
adc
add
add
and
xor
xor
push
sahf
in
cmpsb
add
shlb
push
scas
push
add
add
scas
add
in
sub
push
test
add
inc
mov
rcrb
mov
cmp
cwtl
hlt
adc
sbb
sbb
imul
out
aaa
push
loopne
clc
loope
ror
jl
adc
adc
sbb
mov
cs
rorb
add
push
loope
push
add
fcomip
out
pop
lock
push
into
les
push
gs
das
and
and
inc
test
or
fdivl
mov
scas
movsb
xchg
lock
add
push
dec
pop
jno
pop
dec
push
lock
add
mov
push
test
push
xor
in
mov
add
clc
xor
inc
push
fimuls
mov
add
loopne
or
dec
or
in
jg
or
les
mov
add
push
ret
incl
inc
dec
lock
pusha
or
or
xchg
cmp
pop
addb
adc
loopne
jae
mov
pop
call
in
pop
mov
and
add
out
mov
shl
stos
or
or
pop
fisttps
add
dec
pushf
push
adc
out
iret
rcll
mov
xchg
adc
push
notb
push
outsl
jmp
add
pushl
out
xor
inc
add
nop
or
cli
push
movsb
add
rcl
jg
test
xchg
hlt
sbb
adc
xor
mov
adcb
shll
push
inc
cmp
or
sub
loopne
hlt
lods
or
mov
adc
fs
cs
inc
sub
clc
jo
sbb
inc
repz
jg
mov
pop
dec
adc
add
add
pusha
jecxz
inc
pop
test
sbb
sbb
xor
or
mov
js
or
test
ret
or
or
cltd
sbb
sub
les
xchg
dec
push
or
dec
jo
lcall
movsb
dec
add
stos
xchg
sbb
xchg
and
sub
ljmp
push
xchg
movsb
fsubs
inc
movsb
mov
outsl
rcr
jg
pop
pop
and
and
and
movsb
mov
inc
cmp
idiv
testb
jae
mov
and
cwtl
call
push
mov
mov
loop
xor
adc
add
addl
pop
clc
add
or
pop
or
les
pop
dec
add
mov
mov
mov
andl
adc
xchg
je
iret
adc
add
mov
push
inc
push
ficoms
fisttps
dec
lock
pop
orb
mov
push
mov
mov
pop
cwtl
sub
in
mov
xor
loop
inc
insl
lods
dec
and
das
add
sbbb
add
mov
push
add
scas
xchg
xorl
xchg
push
adc
sub
sub
pop
push
adc
icebp
pop
jnp
orb
sub
adc
addb
lods
mov
outsl
addl
push
andl
push
in
or
arpl
add
or
jbe
out
pop
cwtl
rcrb
inc
movsb
decl
pop
sbb
sbbb
pop
or
subb
dec
cmc
dec
jbe
rclb
inc
or
int3
sbb
inc
aaa
or
add
call
incl
jp
or
in
pop
inc
inc
mov
jp,pt
lret
test
add
mov
ret
inc
adc
dec
adc
adc
out
orb
scas
cli
fcmovne
cmp
xor
mov
or
and
cmp
dec
addl
lcall
add
mov
jo
outsb
daa
add
add
mov
loopne
push
sti
mov
popa
jge
stos
pop
cmp
inc
test
push
dec
push
mov
mov
xchg
cmp
mov
fimuls
out
and
inc
and
adcb
add
mov
and
push
fs
repnz
jl
sub
add
loopne
and
inc
out
mov
sbb
call
dec
rorl
dec
shll
test
mov
add
and
pop
jae
inc
rolb
push
add
jo
lret
push
push
sub
push
jbe
dec
shrb
shl
ds
mov
add
sbb
lds
pop
pushf
pop
shll
or
aaa
jo
rcrl
int
fs
adc
out
cmp
cmp
xchg
add
push
push
movsb
int3
out
ljmp
fdivrl
popa
lods
pop
dec
inc
aas
lock
mov
mov
mov
sarb
inc
pushf
inc
jecxz
pop
add
add
adcl
hlt
or
mov
popa
mov
in
ret
pop
dec
loop
imul
push
insl
adc
mov
and
push
bound
fucomp
push
inc
adc
jb,pn
or
push
cli
dec
cmp
pop
sub
cmp
dec
loopne
xor
xchg
out
mov
push
test
in
inc
dec
call
or
clc
add
inc
adcb
filds
add
xor
jo
jno
add
or
jne
out
mov
pusha
inc
das
add
pushf
les
add
outsl
das
inc
sti
inc
popa
adc
rol
or
dec
push
and
push
adcl
cmp
jmp
stos
adc
aas
mov
out
pop
add
mov
ja
out
bound
aam
push
pop
jecxz
add
mov
sub
pusha
outsb
imul
add
aas
push
push
popf
and
mov
pusha
lahf
adc
jmp
pop
add
adc
add
pop
mulb
pop
incb
jp
mov
shlb
mov
and
mov
mov
imul
jecxz
jb
add
mov
mov
jg
and
les
jp
pop
or
ret
in
add
sbb
mov
or
push
cli
xor
jecxz
adcb
aam
dec
mov
cli
mov
add
and
or
inc
dec
insl
adc
sbb
sub
inc
in
inc
mov
bound
insl
add
jo
add
rclb
add
lock
inc
add
cmp
adc
test
and
dec
pushl
and
add
outsb
adc
adc
push
xchg
mov
sub
out
sbb
and
push
or
or
subl
out
dec
fs
ds
pop
jne
loopne
adc
pushf
loopne
arpl
mov
dec
shr
inc
push
pop
pop
push
push
and
rolb
jmp
subb
orb
or
mov
pusha
mov
aaa
mov
push
adc
mov
pop
add
adc
push
xchg
push
subb
mov
icebp
test
out
addb
icebp
outsb
adc
push
jb
sub
inc
or
sbb
push
nop
add
or
sysenter
invd
loopne
mov
clc
in
or
xchg
sarb
clc
loopne
cmpsl
lock
or
sarb
mov
xchg
mov
aaa
dec
lahf
sub
outsl
cld
cmc
cmpsl
stos
add
mov
orl
mov
jo
out
xor
sub
jae
inc
sarb
push
pop
call
mov
sub
pop
add
pop
bound
mov
call
rorb
add
std
push
xor
push
call
jbe
out
sbb
aam
mov
push
fildl
and
cmp
fildl
dec
mov
add
add
add
adc
shlb
or
leave
out
push
adc
fcmovnu
in
push
adc
dec
mov
mov
addl
sub
mov
jp
dec
mov
xor
inc
inc
xchg
cwtl
adc
push
fs
sbb
mov
and
jno
add
out
push
movsb
outsb
cmp
jg
dec
ja
loopne
inc
ja
add
dec
pop
xchg
ret
adc
add
cmp
fcomip
push
nop
sub
xchg
adc
cmpsb
nop
hlt
pusha
mov
xor
add
ljmp
and
add
inc
inc
and
lock
popa
xor
clc
pushl
mov
pop
sbb
mov
add
or
sub
sbb
aaa
add
lds
in
adc
push
pop
sub
cmpsb
shrb
and
inc
sbb
lds
sbb
cmpsb
call
lods
pop
and
xor
push
inc
pusha
sub
sbb
sub
jg
dec
in
es
pop
jo
out
test
pop
xchg
pop
scas
push
add
loopne
movsb
mov
mov
fbld
add
mov
sbbb
cwtl
or
pop
mov
lcall
adc
mov
mov
xor
cs
pusha
or
sbb
sarb
or
push
shll
adc
rcrb
sbb
ret
sub
popa
andb
mov
adc
adc
ret
add
inc
icebp
xor
add
pusha
push
test
pop
dec
jg
out
outsl
adc
mov
sbb
adc
pop
push
add
or
mov
jo
mov
inc
lock
or
sub
jp
mov
and
rolb
out
mov
mov
lcall
fadd
sti
ljmp
stos
fsubr
ljmp
les
push
push
push
inc
inc
rorb
mov
inc
xchg
movsb
adcl
outsb
xor
cmp
test
mov
add
push
add
bound
fisubrl
sbb
add
mov
or
or
inc
mov
inc
pop
pushf
aam
decl
add
sub
nop
js
decl
loopne
or
outsl
sbb
add
xchg
xor
add
nop
test
loop
pop
mov
sbb
insl
rclb
or
sbb
sbb
mov
add
or
std
add
popa
adc
addb
adc
fstp
jo
pop
ss
xorb
mov
sar
outsb
and
lea
add
outsl
shrb
lcall
jae
sbb
xor
jae
lock
add
xor
or
insl
nop
push
insl
push
imul
hlt
adc
inc
cld
xlat
mov
or
pusha
and
mov
xchg
je
add
fs
dec
jl
xchg
dec
fdivs
fadds
test
lcall
mov
sarb
dec
push
push
orb
xor
mov
push
adc
nop
out
aaa
inc
clc
nop
lods
jae
test
ret
add
loope
add
jb
addl
inc
mov
mov
mov
outsl
add
scas
clc
push
push
test
push
ret
mov
outsb
loope
outsl
cwtl
out
sub
mov
jne
jne
mov
or
xor
dec
push
mov
mov
in
add
push
rcl
fmull
inc
test
rol
sbb
xorl
loopne
les
cmpsb
add
roll
fildl
loopne
and
rcrb
cmpb
xorb
scas
adc
xor
pusha
lret
pop
jl
rolb
nop
movsl
or
loop
fadds
popa
push
or
adc
mov
test
mov
push
orb
lretw
adc
inc
mov
sub
mov
push
or
adc
dec
dec
sbb
add
adc
fildl
shrb
xor
test
push
add
in
pop
sbb
sbb
scas
xor
sbb
pusha
sbb
jbe
iret
and
sti
pop
dec
mov
sbb
jmp
nop
push
jno
fsub
pop
add
add
in
fiadds
adc
inc
xlat
jg
adc
mov
adc
and
mov
mov
dec
or
add
inc
in
pop
pop
adc
add
or
adc
call
addb
push
mov
xchg
xor
sarb
sub
aas
inc
adc
xor
jo
fs
inc
sub
sbb
shll
xchg
push
add
test
mov
push
andl
mov
jb
rolb
pop
sbb
xor
push
or
adc
pop
out
adcb
cmpsb
pop
xor
dec
pop
outsb
addr16
mov
mov
push
roll
lret
fbstp
add
push
mov
adc
xchg
jb
mov
xor
nop
add
and
enter
adc
mov
xchg
lock
and
xchg
pushf
lock
cmpb
adc
pushl
mov
bound
shll
and
loopne
and
and
mov
cs
pop
add
call
push
in
adc
push
jo
jno
sbb
loop
xchg
cli
aas
dec
test
filds
adc
push
pushl
sub
xchg
xchg
outsl
xor
mov
test
push
jecxz
push
push
mov
shlb
xorl
dec
add
daa
jb
cmp
sbb
add
sub
lcall
mov
add
test
sbb
incl
ret
adc
loopne
imull
cs
mov
or
roll
mov
xor
push
add
mov
fldt
mov
ret
mov
adc
xor
push
inc
sub
outsb
add
push
jo
mov
mov
punpcklbw
push
adc
xor
sub
push
mov
add
or
xchg
add
dec
decl
dec
jg
xchg
nop
push
loopne
inc
jb
pushl
add
clc
aaa
sub
repnz
sbb
jecxz
mov
clc
pusha
or
rcrl
push
rorb
rclb
ljmp
jmp
loopne
rorb
sbb
sbb
cmp
xor
out
mov
cli
clc
mov
dec
add
in
leave
add
xor
cli
leave
inc
mov
mov
mov
rcrb
cmp
das
ret
scas
add
inc
in
mov
lods
cmp
add
mov
mov
adc
je
push
jl
mov
adc
and
mov
and
or
push
add
add
inc
sbb
sahf
les
adc
xorb
in
jb
and
or
xor
pop
orb
ficoms
xchg
mov
inc
clc
push
loopne
mov
sbb
jl
add
jb
mov
add
xor
jbe
or
xchg
sbbb
cmp
sub
lcall
adc
or
pop
pop
xor
nop
adc
movsl
and
and
mov
and
push
and
insl
push
loopne
adcb
test
adc
aam
or
loopne
jmp
aad
push
inc
jae
sbb
in
add
push
pop
mov
xchg
mov
gs
or
scas
mov
mov
dec
push
add
scas
inc
ret
cld
outsb
adc
pop
and
add
push
lods
dec
inc
test
ss
cmc
push
inc
out
movsl
addl
je
add
add
clc
sbb
pop
or
mov
orb
orb
sub
mov
adc
outsl
push
outsl
sti
inc
mov
push
cwtl
imul
inc
adc
jp
add
ret
or
add
mov
idivl
dec
xor
bound
push
and
cltd
inc
rorb
out
dec
xor
enter
cmp
andb
shrl
sub
jo
pop
in
xor
clc
ja
jmp
mov
cmpl
pop
adc
ret
daa
inc
andb
dec
xor
mov
adc
push
inc
sbbl
pop
add
xchg
inc
pop
jo
inc
pop
push
adc
mov
jo
sbb
lock
stc
mov
jo
dec
icebp
adc
dec
xor
aaa
orb
nop
or
stos
shlb
add
addb
ja
jns
lods
fbstp
stc
test
out
inc
adc
subl
fucomi
jmp
inc
push
loopne
outsl
mov
pop
and
testl
dec
andb
cli
cmp
pop
xor
mov
sub
mov
out
lods
into
cmpb
hlt
call
mov
inc
mov
out
dec
sub
rcrb
in
and
dec
ret
or
xchg
out
dec
add
xchg
dec
xadd
cld
pop
add
or
das
jno
or
jg
inc
push
insl
sbb
out
stos
bnd
pop
shrl
in
and
mov
or
fmull
out
mov
pop
aad
sub
addb
in
insl
pop
adc
mov
sub
xchg
xor
push
jle,pn
les
idiv
push
fwait
ret
push
push
outsl
pop
or
xchg
dec
pop
mov
and
lods
imul
sub
test
mov
mov
in
subb
push
aam
rorl
jl
mov
and
or
jb
stos
rorb
pop
test
mov
adc
clc
inc
or
and
pop
jle
pusha
adc
outsb
push
jbe
outsb
cwtl
adc
and
sbb
inc
pop
mov
sub
les
loopne
push
lock
jb
inc
mov
lods
adc
adc
jl
push
sbb
popa
push
push
lock
stos
push
js
or
inc
dec
sbb
mov
and
je
es
cld
scas
adc
cmp
pop
xor
leave
cltd
add
inc
hlt
in
mov
adc
jo
sarb
pop
or
dec
mov
ret
or
xor
inc
mov
aad
add
push
ret
outsb
pop
push
ja
mov
pop
andb
xor
test
loope
push
cmp
loopne
ss
xor
sbbb
sarb
shrb
shrb
jbe
stc
push
in
add
lcall
xor
movsl
mov
aam
pop
mov
daa
and
fimuls
stos
dec
cmp
mov
lods
adc
inc
out
push
fmuls
xchg
out
jmp
pop
adc
push
lahf
and
mov
incl
out
pop
xor
loope
jae
and
inc
or
stos
jo
mov
add
shrb
push
mov
and
push
pusha
and
daa
and
jbe
pusha
idivl
ret
adc
pop
lock
mov
movsb
xchg
cmp
or
sbb
xor
movb
addr16
add
sbb
aam
inc
ret
andl
or
jecxz
push
out
decb
xor
adc
cltd
inc
push
lcall
pushl
push
add
and
inc
pop
call
es
inc
and
pop
andl
add
xor
cwtl
lret
cli
call
repnz
les
jb
out
sub
add
loopne
inc
jg
aad
int3
in
in
push
push
loopne
adc
inc
dec
subb
pop
loopne
test
inc
orl
or
cli
in
inc
sub
fwait
imulb
add
sarb
add
in
xor
mov
or
pop
mov
adc
and
add
sub
add
xor
jp
hlt
stos
add
ret
or
push
lods
mov
jae
add
mov
mov
loop
jo
call
dec
js
cmp
push
add
inc
inc
add
push
pusha
loopne
xchg
lock
mov
jae
outsl
adc
sbb
es
push
mov
out
or
orb
ss
fwait
pop
jb
adc
pop
ljmp
mov
loopne
or
incl
rclb
add
inc
insl
dec
inc
inc
pop
sbb
shrl
sbb
or
and
xchg
inc
jbe
dec
and
push
movsl
movsb
add
in
push
add
rclb
sub
out
adc
call
nop
roll
ret
add
sbb
sub
mov
rclb
adc
cwtl
add
test
sahf
jo
fstp
pushl
cld
inc
push
shlb
push
push
mov
cs
cmp
jno
outsl
adcl
jbe
push
pusha
decl
sarb
add
nop
lock
pop
pop
push
insl
daa
insl
sbb
clc
xchg
lret
xor
shlb
pop
les
cmp
inc
out
jno
sarb
fsubl
jnp
sbb
dec
rolb
aad
inc
jb
inc
icebp
scas
nop
xor
subb
pop
xor
add
outsl
ret
mov
add
lock
adc
cmpsb
scas
mov
pop
adc
inc
rorb
loopne
and
sti
test
into
cmpsb
jne
jle
mov
arpl
xor
loopne
mov
fiadds
or
mov
mov
shl
or
sub
adc
inc
clc
or
mov
addb
xchg
xor
sub
jns
mov
adc
mov
adc
inc
loopne
mov
pop
push
lock
pop
and
mov
push
icebp
add
sbb
mov
and
add
rolb
inc
lock
roll
sub
push
pop
dec
jl
repnz
popa
jl
outsl
jo
incb
cld
add
outsl
push
xchg
inc
stos
shlb
mov
or
xchg
rcl
pop
adc
dec
xorb
xchg
movsl
or
adc
add
rcll
jo
outsl
jae
add
mov
mov
adc
inc
and
or
and
mov
inc
mov
push
rolb
incl
mov
decb
inc
inc
adc
adc
test
jg
add
sti
addl
test
mov
es
lcall
pop
adc
sbbl
add
and
and
mov
inc
xchg
adc
jle
jecxz
or
push
xchg
sbb
sbbb
pop
clc
mov
pop
mov
xor
imul
mov
in
adc
add
and
mov
inc
cli
cmpsb
mov
sbb
jb
jne
inc
fcoms
adc
sti
and
sbb
mov
adc
adc
decl
incb
adc
cld
loopne
push
xor
inc
pop
jo
sbb
mov
clc
orl
dec
sarl
lock
pusha
sub
or
push
pusha
push
sti
jno
add
push
adc
inc
add
sbb
inc
fildll
scas
mov
xor
adc
out
sub
mov
out
idivb
add
in
push
add
pop
xorl
sbb
outsl
push
adc
jmp
mov
out
enter
pop
push
push
sarb
call
push
sub
jmp
insl
mov
or
enter
add
ljmp
xorb
cmp
push
loopne
aas
or
addb
outsl
cmpsb
or
jnp
add
xchg
add
testl
scas
mov
subb
pop
push
in
fcmovnu
aaa
std
push
push
loopne
jo
adc
add
add
or
add
js
ljmp
add
add
adc
bound
rcrb
ret
xlat
jo
je
and
cld
add
cmp
add
jae
hlt
xchg
add
sbb
or
push
xor
and
or
fwait
xchg
push
addl
test
test
lcall
repz
add
jae
insl
imul
ja
pusha
pop
fs
jp
add
adc
outsl
repnz
test
outsb
or
add
js
lahf
mov
mov
or
mov
pop
mov
in
roll
add
adc
push
sub
int
pop
dec
ret
enterw
add
add
addl
add
imul
jns
dec
sub
dec
or
es
outsl
dec
das
adc
xor
jne
call
mov
sti
and
in
out
dec
sbbb
push
sbb
push
and
aaa
mov
aaa
insl
rcrb
add
jg
clc
and
pop
mov
push
cld
lcall
incl
addb
das
pop
mov
fidivrl
mov
sarb
scas
push
or
nop
push
xchg
xchg
add
insb
xchg
es
or
jo
pushl
test
addr16
mov
add
add
push
mov
push
push
insl
sbb
cmp
add
xchg
insb
shlb
adc
ret
add
mov
and
adc
mov
js
loopne
pop
xor
into
jmp
sahf
add
pop
or
pop
adc
xor
out
jno
orb
sub
mov
jmp
pusha
test
dec
cld
ljmp
jae
insl
sub
sbb
or
sbb
jp
out
fistpll
call
jo
movsl
nop
cs
and
cmp
xchg
lcall
jns
mov
iret
xchg
xor
xchg
stos
loop
mov
test
stc
inc
jb
sahf
sub
mov
jb
add
rorb
cmpsl
inc
jae
loop
inc
mov
jo
out
inc
xor
gs
mov
jg
pop
inc
and
pusha
fsubrs
loop
or
pop
mov
mov
out
xchg
xor
fisttps
cmp
rolb
add
pop
mov
lret
orb
repz
insb
insb
stc
shlb
cmp
jb
mov
add
cs
xlat
insl
adc
rorl
subb
out
sahf
and
lcall
add
in
xchg
inc
rorb
push
push
inc
repz
jecxz
popa
pop
cwtl
jmp
adc
xlat
add
out
iret
bound
out
or
out
mov
and
sarb
jae
mov
sbb
mov
ficoms
pop
ljmp
mov
add
es
stos
loopne
jnp
sahf
fs
inc
stos
sbb
aad
pusha
push
dec
xchg
mov
dec
rolb
sub
pop
push
adc
mov
add
movsb
les
jnp
push
popa
inc
test
cmc
imul
lods
fcomip
fcompl
call
inc
xchg
fists
add
insl
fs
or
mov
push
or
mov
pop
add
inc
adc
pushf
add
scas
add
sub
add
mov
xchg
fisubrl
pop
xchg
loop
pop
xor
push
add
or
repz
in
mov
test
mov
push
add
aad
stos
ret
jp
cmp
push
pop
adc
xchg
push
loopne
or
xchg
lock
push
lcall
xchg
push
add
add
inc
push
xchg
adc
and
xchg
sbbb
dec
stos
push
lret
js
inc
mov
faddl
cwtl
pop
or
je
test
add
push
addb
sti
out
scas
sub
dec
clc
decl
int3
insl
push
adc
push
dec
test
add
imul
or
pusha
push
adc
or
adc
insb
or
jl
addl
xchg
xorb
ds
pop
out
iret
add
mov
in
stos
jmp
scas
rolb
test
call
push
xchg
repnz
arpl
inc
test
pop
add
mov
icebp
testb
addb
bound
cs
or
inc
add
push
test
xchg
pop
orb
lock
mov
cmp
inc
aas
pop
xor
test
inc
adc
xchg
xchg
push
fistpll
adcb
xchg
cld
mov
inc
ds
xor
cmp
adc
rcrl
xor
jp
adc
testl
push
cmp
sbb
push
sub
sbb
or
inc
or
mov
dec
nop
clc
call
jl
pop
andl
inc
add
outsl
push
lret
andb
sub
push
fldt
mov
mov
push
xchg
xchg
pushl
jo
cmp
fcoml
cmpl
mov
xchg
mov
dec
pushf
scas
pop
movsl
sarb
add
pop
pop
aaa
jl
roll
dec
insl
push
push
ret
ficomps
aaa
hlt
inc
adcb
pop
jb
sbb
int3
addb
cli
outsb
adc
xchg
rorl
add
mov
add
mov
inc
rcr
pop
push
mov
mov
dec
push
aad
pop
mov
jle
push
rol
push
push
insl
sbb
scas
aam
mov
inc
or
dec
mov
nop
aas
ret
rcll
push
mov
ss
or
inc
push
mov
push
push
mov
sub
mov
mov
sub
fwait
ret
add
add
testl
leave
mov
xchg
adc
bound
add
or
nop
jmp
xor
and
push
das
mov
xchg
out
sbb
aaa
jae
scas
jb
mov
jmp
hlt
inc
pop
cmp
out
sbb
pop
idivb
fiadds
adc
pop
add
push
mov
inc
fdivs
loop
andb
incl
sub
incl
inc
aaa
add
push
scas
add
push
cwtl
mov
xchg
or
clc
out
es
sub
jb
orl
in
add
push
call
adc
test
pop
xor
fadd
pop
clc
xchg
mov
pop
shr
out
movsb
outsb
dec
add
cmp
add
inc
add
aaa
fsubl
and
push
xor
rcrb
mov
inc
loopne
lret
add
sti
loopne
addl
xor
rolb
push
mov
ljmp
adc
cmp
cmp
imul
sub
or
xchg
push
outsl
cmpsl
out
sub
jno
pop
out
test
push
insl
push
xor
push
adc
and
push
adc
js
xchg
or
decl
jne
inc
xor
rolb
daa
add
out
clc
ja
mov
push
adc
stc
popa
cltd
adc
add
hlt
mov
rcrb
sti
xorb
mov
inc
mov
popa
add
mov
out
ds
xchg
push
addb
add
xor
or
sub
xchg
jo
rcll
mov
push
insl
xor
insb
out
jp
push
stos
add
scas
adc
pop
loopne
aam
in
mov
popa
xor
push
ss
adc
push
je
inc
andb
test
mov
and
inc
enter
stos
mov
add
sbb
and
test
mov
fsubrs
pop
adcl
inc
stos
test
pusha
aas
inc
mov
adc
movb
mov
cmp
call
or
or
pop
add
mov
xchg
jecxz
les
mov
and
pop
aaa
mov
in
repz
aaa
push
pop
jmp
icebp
ret
add
sbb
add
out
mov
loop
xor
out
jb
pusha
add
jbe
fdivrp
in
push
cmc
sub
les
sbb
rcrb
cmp
mov
jg
dec
loopne
add
inc
shll
inc
push
cmp
and
loopne
shl
xchg
adc
dec
mov
incl
pusha
rorb
loopne
out
pop
call
orb
xor
clc
xchg
and
int3
mov
stos
ficoms
pop
push
inc
dec
pop
add
jns,pn
cmp
jg
popa
xor
add
add
xor
orl
mov
roll
iret
sub
stos
cmpsb
dec
add
inc
cmp
in
sub
add
push
lcall
insl
jae
leave
out
jmp
lods
cli
decl
push
mov
int3
mov
inc
xchg
mov
sub
js
adc
add
clc
adc
push
jle
push
push
add
inc
data16
inc
adcb
setno
jg
lds
mov
or
jmp
and
mov
sub
test
rclb
in
sbb
adc
mov
xor
popa
inc
sbb
add
push
mov
mov
hlt
add
add
add
inc
dec
jmp
mov
loopne
in
in
outsl
xchg
adc
push
cmp
sahf
push
mov
cmp
sub
aaa
call
mov
sub
pop
and
outsl
daa
dec
or
rcll
add
cmp
pop
dec
pop
inc
add
mov
pop
test
shrl
or
daa
je
aas
call
mov
loop
adc
mov
jle
outsl
fbstp
pop
pop
movsb
out
xchg
or
push
lds
mov
cmovo
sbb
push
push
push
push
or
lcall
test
roll
or
or
pop
dec
cmp
mov
idiv
mov
enter
daa
addb
push
js
jae
xor
push
sahf
andb
push
les
jo
add
jecxz
fisttps
ja
orb
ljmp
add
add
xchg
orb
fnstsw
rclb
add
pop
mov
jo
ret
add
lock
add
mov
push
inc
push
and
daa
mov
xorb
movsb
adc
pop
sub
aas
shlb
jb
pop
popa
push
rorb
loopne
dec
or
xchg
and
faddl
addl
cs
nop
js
ljmp
andb
jl
loop
push
jo
jnp
push
dec
pop
movsl
ja
stos
mov
mov
xchg
nop
push
and
cmpsb
ja
iret
mov
clc
aam
xor
mov
adc
xchg
out
or
decl
nop
jb
insl
jp
test
in
orb
jl
lock
and
adc
add
sbb
dec
and
loopne
dec
icebp
ja
pop
mov
push
push
xchg
mov
out
mov
mov
adc
mov
mov
test
sar
aam
push
out
fs
jne
jo
jno
inc
ret
and
int3
rolb
nop
cmp
ljmp
adc
jne
popa
add
sbb
and
inc
popa
aas
testl
ret
stc
xchg
mov
xor
into
dec
cli
lcall
pop
inc
or
jns
inc
xor
jnp
scas
fwait
pop
sub
add
add
or
jno
mov
jo
push
fwait
jle
push
and
daa
push
js
mov
sbb
and
pop
mov
mov
pop
rolb
push
and
dec
adc
stos
repnz
inc
cld
cmp
shrb
cmp
loop
in
or
xor
pop
out
cmp
cmp
fiaddl
out
mov
push
idiv
fwait
rolb
outsl
or
fstpt
xchg
cmp
cmp
nop
add
cmp
repz
incl
jmp
mov
sbb
ret
mov
pushl
adc
adc
add
out
and
jb
mov
cmpb
shrb
into
add
inc
adc
sub
aaa
roll
cmp
ret
in
outsl
push
mov
cmp
into
inc
rcrl
mov
mov
mov
push
int3
imul
decl
aas
jae
shlb
inc
std
adc
sarb
insl
jbe
mov
push
fadds
negb
cli
sti
pop
sti
mov
sarl
push
mov
out
add
jno
mov
push
or
lods
in
push
out
cli
and
and
out
cmp
popa
cmp
add
stos
mov
shlb
ljmp
adc
add
pop
shld
pcmpgtb
mov
ljmp
and
cmp
mov
lret
fsubr
push
mov
mov
add
pusha
xor
nop
movsl
movsl
cmp
mov
jl
nop
pop
adc
out
and
lahf
mov
push
adc
adc
jg
or
sarb
jno
add
jae
push
add
inc
mov
cmp
hlt
jo
mov
test
idiv
das
cmpsb
and
andl
sub
adc
dec
add
inc
loopne
or
outsl
push
pop
mov
and
rol
push
gs
xchg
mov
mov
inc
inc
jecxz
inc
xchg
inc
mov
mov
icebp
or
sbb
jge
outsl
add
les
test
test
sbb
xchg
and
jmp
fcomip
loope
sbbb
or
rolb
xor
add
cltd
cmpb
mov
jns
add
test
adc
outsl
inc
jmp
and
les
in
mov
shl
cwtl
adc
les
and
adc
adc
lock
push
mov
aaa
xlat
xchg
push
jp
sub
mov
adc
lock
sub
jg
fisubrs
mov
mov
movb
adc
xor
jge
add
adc
cmp
cmpsl
dec
push
cld
add
xchg
add
and
fsubr
scas
and
dec
sub
xchg
add
dec
cmp
add
pop
mov
aaa
or
and
push
clc
out
lock
add
xorl
loopne
cmp
mov
pop
shrl
mov
push
sbb
xchg
or
dec
add
add
push
xor
push
sbb
outsl
mov
inc
adcb
pop
or
add
loop
and
pop
add
mov
pop
mov
mov
add
addl
dec
sti
push
sub
mov
xchg
cmp
xchg
adc
fstpt
inc
out
hlt
addb
pop
add
psubd
mov
fadds
loopne
lcall
add
into
je
sbb
andl
call
or
insl
adc
cmovnp
jbe
pop
daa
enter
lods
mov
incl
and
add
mov
lods
jae
add
pop
inc
dec
pop
and
add
movsl
mov
jns
insl
ja
cmp
insb
mov
jecxz
daa
mov
data16
and
or
inc
add
and
ss
pop
and
rorb
add
sbb
sbbl
sbbb
out
mov
jne
inc
outsl
pop
dec
ret
and
ljmp
ror
xchg
inc
jb
rclb
out
pop
addb
inc
sub
add
add
add
nop
push
adc
in
xchg
nop
sbb
rcrb
loopne
pusha
fisubs
mov
jl
add
mov
push
mov
bound
fists
scas
inc
aaa
loopne
cli
xchg
clc
test
fcoml
pop
add
cmp
subb
push
adc
prefetch
add
add
adc
out
mov
xchg
push
mov
rolb
mov
mov
sbb
xchg
mov
and
mov
and
add
adc
inc
jnp
mov
rolb
sbb
add
mov
cwtl
inc
shrb
ss
mov
orl
stc
add
sbb
jmp
xor
inc
add
xchg
adcb
in
in
xchg
in
sub
incl
scas
rorb
aad
sub
shrb
mov
adc
rorb
incl
cs
outsl
test
pop
and
mov
ret
roll
adc
out
aaa
movsb
inc
add
dec
push
je,pn
jno
subb
push
ja
xor
int3
sub
mov
out
adc
adc
push
sub
clc
mov
pop
add
pusha
sub
mov
jg
pushf
xor
and
add
rolb
adc
mov
add
adc
rolb
in
data16
add
movsb
push
sub
inc
xchg
xor
lods
in
jnp
adc
outsb
push
sub
jl
jp
pop
aaa
add
dec
or
repz
clc
stos
outsb
jg
clc
sbb
ret
jne
inc
pop
push
hlt
out
push
and
or
fldt
push
cmp
in
add
aas
mov
test
adc
scas
push
das
out
test
jmp
or
shll
fadd
pop
addl
lcall
inc
mov
inc
stos
add
jns
cld
pop
sub
jge
inc
xor
mov
jge
fcmovb
or
repnz
sbb
xchg
sti
sub
rclb
push
adc
jo
mov
subl
push
jge
xchg
mov
jo
adcb
xor
mov
ret
or
adc
add
incl
daa
mov
and
out
mov
and
dec
add
and
lahf
rcrb
int3
test
int
jle
pop
pusha
xor
jo
cmp
pusha
adcb
aam
inc
movb
sub
call
aas
add
cwtl
jb
mov
out
mov
jg
mov
fs
jbe
shrb
jmp
imul
nop
clc
popa
outsl
outsl
pop
andb
loopne
dec
push
push
xchg
adc
clc
outsl
fidivrl
push
push
test
imul
nop
push
sbb
pop
imul
sbb
xor
dec
incl
hlt
and
and
lock
xchg
xchg
aad
rolb
mov
pusha
add
xchg
add
adc
popl
cmp
inc
add
mov
adc
inc
lea
adc
outsl
add
das
scas
and
sub
mov
imul
clc
add
and
sub
sbb
fstpt
aaa
orb
mov
mov
andb
add
and
stos
mov
xlat
mov
mov
lahf
mov
push
jb
mov
addb
in
fwait
lcall
andl
pusha
xlat
andb
fs
cmpsb
fistpl
push
mov
fmull
outsl
loopne
xchg
jae
push
loopne
cld
mov
mov
filds
push
add
push
out
sbb
push
inc
sbb
adc
xor
imul
data16
add
repnz
je
outsb
sar
push
and
cli
push
adc
out
mov
stos
test
jae
push
add
sub
stc
sahf
pop
test
rcrl
add
xor
cs
mov
push
adc
cmpsl
or
mov
adc
dec
ret
xor
mov
xor
jae
mov
pusha
dec
pusha
sahf
in
or
xor
and
fwait
jecxz
jbe
arpl
sbb
pushf
fcmovb
pop
jecxz
lds
fildl
out
inc
rcll
mov
inc
sbb
ss
mov
add
push
fucomi
adc
and
inc
out
and
loope
fmull
sub
call
enter
imul
lret
jb
sti
jo
pop
movsl
mov
and
imulb
pop
sub
push
add
out
adcb
jb
out
sub
add
decl
mov
inc
sub
cwtl
out
idivl
popa
push
sub
pop
call
push
jnp
not
stc
loop
sarl
or
or
fs
or
sbb
call
add
add
or
mov
hlt
lea
jno
sbb
adc
icebp
sub
add
sbb
cld
aad
int
push
fimuls
add
pop
push
add
xor
xor
xor
add
xchg
dec
cvtps2pi
idivb
outsb
decl
inc
add
xor
or
cmp
insb
mov
shll
aam
movsl
mov
sbb
push
xor
cmp
clc
mov
mov
sub
es
out
roll
int
push
fisttpl
or
es
ja
or
ss
sti
fdivr
pop
mov
call
loopne
mov
pop
hlt
outsl
sbb
ret
mov
ret
mov
ret
lds
xor
xor
add
icebp
xor
clc
jae
ja
inc
nop
push
addr16
jp
jbe
or
fstpt
and
adcb
xor
xor
adc
sbb
push
mov
lods
shlb
cmp
mov
mov
jl
xchg
jp
mov
and
ss
nop
sub
or
xchg
add
roll
outsb
mov
nopl
mov
subb
lcall
or
insl
adc
lahf
test
push
push
jecxz
shlb
inc
test
mov
ljmp
xorl
mov
jmp
jns
lahf
mov
bound
xor
and
lea
mov
mov
adc
punpckhdq
out
dec
xorl
mov
dec
fiadds
test
mov
out
scas
mov
mov
sbb
xor
push
jae
cwtl
xlat
call
mov
mov
std
lock
mov
mov
inc
mov
out
sar
ficoms
pusha
test
dec
xchg
aaa
test
jecxz
inc
xchg
mov
add
insb
out
pop
loopne
mov
push
pop
fildll
loopne
dec
sub
xchg
xchg
add
pop
pusha
jne
push
add
jno
add
call
jae
out
inc
rclb
add
xor
add
js
xor
out
xor
jp
cli
mov
idiv
incl
lock
stos
roll
hlt
fbstp
or
lock
test
arpl
loop
adc
ss
rolb
push
or
cmp
and
or
inc
xor
mov
xor
stos
mov
sub
outsl
adc
test
push
aad
add
adc
aaa
sbb
loope
add
push
push
ds
test
xchg
cmp
xor
or
adc
pusha
jecxz
or
fwait
jecxz
test
add
add
sbbb
push
pop
out
and
out
push
xor
mov
add
jge
push
test
ljmp
sub
mov
or
jb
lea
cmp
jp
pop
jb
gs
xchg
lock
mov
pop
push
mov
aam
mov
and
inc
add
jnp
and
xor
pop
ss
xchg
push
pop
jo
pusha
and
ljmp
imul
add
add
nop
cmp
pop
xchg
aas
add
push
mov
cmpsb
incl
inc
xchg
pop
nop
bnd
cwtl
inc
insl
jne
inc
rorl
shl
popa
loop
pusha
scas
mov
jae
test
mov
pushl
dec
sbb
jmp
adc
add
add
cmp
jl
insb
ret
lock
jae
bound
call
daa
and
xor
sbb
add
adc
jnp
inc
cs
incl
aaa
pop
xchg
call
pop
sbb
pop
setbe
xchg
ljmp
je
push
je
sbb
xchg
or
mov
dec
es
jns
call
les
inc
dec
add
jecxz
add
sahf
dec
inc
cmp
scas
lea
jecxz
inc
add
jecxz
jle
push
je
add
cwtl
adc
push
orb
ret
push
or
outsl
push
or
lahf
adc
test
rolb
arpl
and
add
push
nop
add
fldt
push
shrl
cld
mov
stos
add
test
aam
out
fnsave
mov
add
mov
pop
inc
shl
js
pop
test
adc
lods
xor
mov
pop
cmpl
push
mov
add
and
mov
out
push
orb
cmpsb
inc
idiv
add
cmpb
adcb
fdivrl
pop
fcmovnu
es
orb
arpl
mov
icebp
ljmp
add
or
adc
and
pop
mov
bound
push
adc
push
adc
out
icebp
call
mov
iret
mov
jp
mov
jg
jg
ja
mov
jl
jp
cmpsl
mov
sbb
repz
xor
ret
in
add
xchg
mov
movaps
shlb
push
mov
xchg
shrb
pop
rolb
jmp
mov
xchg
inc
cmp
dec
and
stc
rcrb
pop
sbb
lcall
fsubs
jbe
jmp
roll
aaa
out
pushf
aam
adc
push
or
outsb
mov
and
mov
pusha
xor
cmpl
mov
jbe
add
mov
and
lea
mov
mov
xchg
mov
mov
or
mov
xchg
mov
ds
repz
psubq
mov
cltd
mov
aaa
fwait
cmpsl
loop
movsl
mov
mov
imul
je
mov
lods
jle
push
fidivrs
stos
mov
add
mov
mov
jle
or
mov
mov
adc
mov
in
out
mov
or
mov
stos
cmpb
call
xchg
mov
sub
mov
and
pusha
mov
add
sarl
shlb
push
jmp
ror
sub
mov
mov
aad
xor
shll
or
mov
fldt
xchg
pop
mov
and
loopne
add
fnstcw
out
push
mov
or
mov
int3
jnp
mov
adc
mov
jge
jmp
sbb
jmp
testl
outsb
repz
icebp
mov
lcall
std
lcall
mov
filds
sub
push
aaa
jg
insb
mov
add
inc
test
int
insb
or
inc
add
dec
push
shrb
pop
push
ret
sub
adc
out
loopne
cltd
mov
push
pop
mov
mov
sbbb
add
aam
lcall
js
mov
popa
mov
mov
add
mov
cmp
mov
mov
push
in
mov
mov
mov
pusha
add
mov
add
mov
push
incl
mov
add
mov
mov
mov
mov
mov
inc
pusha
adc
inc
mov
inc
insl
jo
pop
loopne
inc
mov
sar
loop
dec
mov
rol
jle
out
mov
adc
shll
push
mov
push
inc
mov
hlt
jecxz
jg
or
fisubs
inc
and
mov
adc
pop
aam
pop
rcr
sbb
push
and
pop
mov
and
mov
js
jno
or
and
jns
and
cmp
aaa
insl
mov
orb
mov
xchg
sahf
arpl
jp
mov
sbb
push
push
jne
in
rcrb
dec
aas
mov
ror
mov
jecxz
sahf
test
in
mov
add
jl
mov
decb
mov
xchg
pop
mov
divb
push
and
add
mov
add
push
adc
inc
inc
mov
popa
in
sbbb
int3
sbb
mov
fneni(8087
pop
lock
ja
jnp
xor
sub
jo
jl
add
jg
flds
adc
test
add
cli
lea
cwtl
add
mov
ret
jne
push
add
jbe
add
sbbl
xchg
and
clc
das
rorb
and
loop
cmc
mov
dec
or
or
push
cmc
mov
mov
inc
or
dec
add
test
out
add
inc
mov
imul
pop
sbb
fdiv
pop
shr
out
inc
test
xchg
test
push
dec
pcmpeqw
and
orl
js
adc
sbb
stos
add
addr16
or
add
leave
inc
lock
jmp
sub
scas
rcrb
xorl
cld
mov
jb
lock
outsb
push
add
enter
rolb
jo
nop
adcb
push
xor
js
push
mov
jne
lock
mov
pop
outsb
inc
xor
fistpll
add
push
loopne
add
pop
sub
cmp
inc
push
and
out
and
add
adc
mov
pop
add
pop
push
fucomi
sub
jl
cmc
sbb
and
push
mov
lock
adc
push
lea
cld
xchg
loopne
pusha
xchg
incl
jae
popa
ds
jg
adc
jae
rorb
or
cld
mov
out
jg
loopne
fs
jg
jne
dec
push
mov
jne
pop
inc
sbb
out
mov
push
jne
icebp
inc
xchg
ljmp
pop
mov
sbb
xchg
xchg
repz
testb
jne
jmp
nop
aaa
insl
mov
out
sbb
pop
and
inc
daa
inc
sahf
push
out
and
rolb
dec
pop
loop
sbbb
test
xchg
and
jl
xchg
jae
cltd
add
outsl
sbb
pop
mov
xchg
sub
mov
clc
lret
push
popl
xchg
or
mov
add
xor
add
add
sub
add
xchg
adc
stos
nop
and
roll
dec
sub
mov
adc
enter
and
rclb
andb
out
add
scas
inc
test
orb
jae
pusha
xchg
iret
call
add
loop
and
pushl
clc
dec
cmp
mov
adc
lds
add
divb
repz
add
loop
pop
inc
dec
pop
jbe
sub
xor
and
out
mov
imul
inc
or
push
xchg
dec
or
push
cltd
call
aam
pop
xor
xor
ds
pop
shlb
inc
and
add
dec
add
add
out
mov
add
sbb
cwtl
les
movb
and
add
shl
and
xchg
xchg
or
add
movsl
lock
sbbb
adc
mov
push
pop
add
or
adc
and
inc
add
cmp
inc
add
test
movl
mov
inc
or
inc
call
enter
loop
mov
popa
push
adc
add
jb
sbb
xor
adc
and
xchg
lock
pop
push
xor
pop
call
fisubrs
mov
pop
or
incb
xlat
jae
inc
or
gs
push
mov
in
hlt
test
je
or
dec
je
insb
pop
add
arpl
loop
add
push
add
pop
xlat
popa
xor
push
add
add
sbb
xlat
mov
jbe
add
or
add
lcall
add
adc
scas
test
add
adc
sbb
scas
cmp
or
jo
cmp
jae
bound
add
jae
cld
mov
ret
ss
sub
and
fwait
adc
adc
pushf
lahf
or
mov
jo
rolb
rcrb
add
fadd
pop
lock
ss
pusha
and
add
cmp
jg
add
xchg
push
xchg
xchg
fistl
push
insb
mov
push
xchg
mov
mov
push
or
mov
nop
sbb
add
mov
or
jbe
or
inc
in
ret
pop
add
add
push
enter
mov
les
les
mov
in
pop
and
je
test
or
inc
add
xor
mov
inc
sub
out
sete
fbstp
mov
cwtl
fmul
mov
adcb
mov
loopne
mov
sbb
sahf
psubd
sbb
mov
stos
adc
inc
movsb
mov
sbb
cmpsb
dec
push
cwtl
rol
movups
or
out
movswl
jg
mov
push
push
fucomi
in
in
pop
addb
mov
xor
adc
push
or
cmpsl
imul
pop
sbb
or
or
mov
insl
or
or
inc
fadds
cltd
rclb
or
lock
das
out
shlb
mov
cld
aas
dec
sub
or
mov
dec
xor
pop
out
aas
inc
cmp
jne
push
mov
sub
les
xor
xor
call
jno
push
cmp
mov
mov
add
mov
jo
jb
adc
ss
mov
mov
inc
inc
cmp
jne
pop
mov
sbb
int3
scas
and
push
xor
cld
pop
mov
fwait
mov
pusha
inc
adc
inc
or
mov
ds
add
mov
scas
dec
push
jae
dec
pop
adc
or
ss
adc
dec
orb
pop
push
or
stos
push
add
add
ffree
cs
in
rorb
jg
sbbb
insl
clc
mov
and
mov
mov
cmp
decb
shl
mov
cmpsb
divl
jle
bound
add
cli
push
or
int3
push
adc
or
mov
push
add
push
and
cld
cmpb
push
pop
mov
pop
jns
push
cld
rcrl
adcb
dec
les
pop
mov
mov
sbb
negb
xor
icebp
mov
pop
fwait
push
lods
lea
jns
and
inc
popl
andb
xchg
cli
das
xchg
in
loopne
or
jg
add
adc
cmp
or
jnp
lret
add
js
rorb
and
push
cwtl
dec
lock
dec
dec
insb
pop
add
or
jnp
xchg
nop
or
sub
or
adc
sarb
add
adcl
add
or
add
pop
dec
jp
inc
mov
cmp
in
and
sub
xchg
lea
out
jb
es
inc
dec
std
inc
sub
add
call
adc
jl
push
mov
inc
and
sbb
sbb
out
dec
push
mov
loopne
inc
or
xorb
or
sub
pop
dec
add
push
test
jg
in
xor
fistl
hlt
jg
orb
jp
add
add
stos
or
ror
jg
add
jecxz
popa
mov
add
cmp
fadds
test
xchg
rolb
fwait
test
push
xchg
mov
addl
sbb
xor
cs
subl
sbb
mov
subl
mov
mov
push
pop
mov
stos
cmc
sbb
jb
lcall
mov
scas
fildll
add
sbb
test
lds
cmpb
outsb
add
test
adc
int
xorb
add
stos
jb
and
cli
ret
add
pop
aaa
leave
mov
das
testb
add
test
lods
adc
pop
addb
dec
cwtl
add
incl
in
sub
push
mov
int3
add
add
imul
mov
inc
inc
dec
jae
push
sbbb
mov
addb
add
dec
jl
test
rclb
nop
ljmp
inc
pavgw
sub
mov
add
sarb
jae
mov
sbb
jo
clc
add
sub
clc
aam
dec
add
xchg
or
xchg
add
dec
push
add
adc
mov
mov
rorb
jle
pop
mov
adc
pop
shrb
sbb
jg
xchg
divb
mov
sarl
cmovb
mov
xchg
test
sbb
out
push
adcl
adcb
push
pop
dec
mov
repz
mov
push
adcl
jp
enter
into
cld
mov
adc
mov
jae
shl
pop
lds
adc
cwtl
mov
sub
dec
lcall
inc
mov
adc
dec
lret
dec
dec
cmpb
cmp
jno
add
xor
add
mov
push
addl
xor
in
mov
fiadds
cmp
jo
dec
mov
in
sbb
mov
jo
add
add
inc
cltd
in
or
data16
rolb
scas
sti
xor
clts
inc
jb
out
pop
scas
fsubrs
mov
mov
je
jge
notb
inc
xor
rolb
cli
jecxz
adc
push
add
pop
sub
lock
adc
testb
test
add
push
dec
call
repz
iret
test
adc
rcr
lcall
inc
je
lea
cmp
add
xor
ljmp
inc
mov
or
outsl
push
mov
jmp
imul
dec
or
and
cmp
pop
loope
orb
jae
push
and
call
push
sti
jge
adc
call
pop
shlb
icebp
testb
mov
jo,pt
aam
mov
aaa
shlb
or
data16
ja
xchg
or
adc
cs
xor
and
sbb
mov
xor
jg
sbb
sbb
dec
add
jle
cmp
stc
jno
mov
dec
add
stos
and
mov
fwait
lods
sbb
mov
inc
jl
loopne
pop
pop
add
stc
out
lret
sarb
loopne
in
add
cmc
addb
adc
lds
mov
mov
push
or
or
or
inc
and
add
cmpsl
add
pop
mov
inc
in
outsl
push
adc
xor
push
or
add
and
mov
push
in
mov
sub
in
das
push
sbb
and
adcb
dec
add
and
inc
dec
xchg
pop
inc
jae
push
fiaddl
jecxz
dec
jb
clc
push
scas
sub
inc
pushf
dec
test
dec
jmp
or
inc
decb
xor
pop
sti
subb
or
in
mov
inc
cs
and
inc
shr
jecxz
scas
clc
out
xor
and
or
popf
inc
inc
pop
and
adc
orb
pop
test
inc
shlb
sbb
adc
outsb
xor
loopne
outsb
scas
jne
mov
shlb
adc
test
shrl
mov
sarb
add
add
pop
ss
and
cld
push
push
or
inc
outsl
clc
scas
mov
inc
pop
jno
shlb
cmp
push
bound
sub
sti
mov
adc
adc
andl
test
add
add
and
add
sbb
mov
inc
test
push
dec
and
cld
out
jnp
pop
andb
incl
mov
or
cld
mov
pop
rcrb
add
ret
and
and
and
or
and
dec
cld
push
test
ljmpw
pop
and
jb
stos
les
adc
int
adc
and
mov
fdivs
or
jno
or
pop
or
dec
in
inc
push
push
ret
mov
int3
sbb
aas
pusha
pushf
neg
leave
push
std
out
mov
and
or
daa
pop
idivb
inc
sub
xchg
and
clc
aaa
and
lea
out
cmc
insb
add
dec
pusha
add
xchg
push
adc
mov
mov
test
push
mov
pavgb
pop
repz
int
or
lahf
lsl
cld
push
adc
lock
push
clc
rcl
pop
mov
dec
dec
js
jb
sbb
shrb
inc
sbb
enter
jnp
hlt
es
pusha
lret
push
and
fcmovnu
sbb
aaa
sarb
lea
pop
or
jmp
cmc
jb
sub
push
ja
inc
or
add
xor
jae
in
inc
dec
push
pusha
pop
loope
repnz
push
rclb
and
dec
loopne
cmp
add
xor
and
jmp
jns
mov
pop
hlt
jb
inc
mov
adc
lock
add
push
das
inc
into
cwtl
lock
mov
clc
and
or
pop
adc
fisttps
cmp
sub
or
addr16
filds
aam
es
push
ss
jb
sub
enter
push
inc
sti
fcmovnb
and
push
inc
and
in
inc
iret
or
shufps
rorb
add
ljmp
sbb
or
rorl
inc
add
or
or
xor
mov
pop
int
xchg
dec
lods
fsubs
sbb
repnz
rorb
popa
cmp
int
adc
inc
shlb
ds
jae
jg
or
sbb
nop
dec
push
js
pusha
sbb
les
jnp
lcall
dec
xchg
fwait
sti
sbb
out
cli
push
mov
dec
cmp
xchg
cli
jle
pop
adc
aaa
insb
and
add
push
jp
movsb
int3
push
add
fisttps
dec
cld
les
push
sahf
adc
push
pusha
xor
mov
cmp
push
add
push
pop
les
push
push
mov
inc
ret
scas
js
mov
xor
adcb
jo
fsubs
cmp
pusha
lahf
shlb
fcmovb
or
or
and
push
movsb
call
push
ds
cmp
out
mov
and
pop
loopne
loopne
into
nop
mov
adc
stos
lods
retw
add
mov
out
inc
push
pop
add
jb
xor
call
jne
pusha
mov
rorb
stos
xor
jo
mov
lahf
ret
repnz
shlb
push
pop
add
push
or
jmp
push
add
push
mov
or
mov
jns
add
push
mov
addl
adc
push
rorb
nop
mov
sbb
jns
cwtl
and
jl
test
in
sub
and
cmp
ljmp
add
push
insl
pop
sarb
ljmp
add
aam
enter
and
mov
cmp
lea
inc
jae
cmp
mov
inc
cmp
leave
jne
mov
sub
add
jae
mov
cmp
je
xchg
or
test
mov
sbb
or
std
fbld
jl
lock
icebp
inc
sbb
push
jae
mov
add
push
out
pop
add
mov
jmp
mov
loop
test
cmp
js
cmp
sub
lods
push
cmp
inc
scas
mov
sti
aaa
or
jns
jne
mov
adc
pop
ret
pop
inc
mov
nop
add
inc
pop
rorb
mov
adc
faddl
adc
outsl
dec
xor
adc
dec
repz
test
orb
adc
add
or
pop
sbb
dec
shlb
cmp
outsb
insl
pop
push
or
push
push
push
jae
or
add
mov
push
xorb
les
mov
bound
in
stos
cmp
lds
in
and
sub
les
fwait
push
xchg
or
loop
cld
xor
fisubrs
push
add
lea
push
jae
xchg
cld
and
data16
dec
jb
pop
cmp
fadds
jbe
rclb
aas
pop
incb
mov
in
sub
or
push
add
push
addb
icebp
jg
fwait
mov
sbb
push
lret
jae
clc
inc
cs
add
jo
mov
cmp
orb
or
rolb
pusha
push
jae
and
xchg
out
or
sbbb
push
add
pop
lock
aas
or
icebp
add
les
xchg
inc
pop
out
mov
dec
ljmp
and
stos
gs
cs
xchg
inc
jae
loope
dec
sbb
mov
mov
pop
cmpb
jo
dec
cld
add
mov
out
movsb
es
mov
mov
and
fsts
cmp
xchg
mov
and
sahf
xchg
fidivl
outsl
pop
or
or
andb
lock
jp
and
mov
push
push
out
dec
ss
outsl
jg
insl
adc
mov
xor
clc
roll
lock
add
add
and
xchg
add
add
js
push
mov
mov
rolb
mov
nop
push
push
pusha
and
pop
and
into
movsl
icebp
cmp
scas
push
push
mov
subb
mov
and
movsb
ljmp
and
lret
mov
mov
lock
pusha
add
push
and
push
mov
push
mov
loopne
clc
sti
das
mov
inc
cld
or
ljmp
jp
add
push
mov
rolb
clc
pusha
sub
nop
insb
les
loope
pop
push
call
jecxz
xchg
es
inc
insb
xchg
pop
mov
mov
stc
mov
ret
jg
add
push
insl
add
adc
mov
pop
icebp
adc
incl
outsl
and
dec
xor
mull
ss
je
ja
clc
test
ljmp
sbb
xchg
add
enter
pop
fistpll
inc
mov
mov
aam
xchg
cmc
lahf
mov
das
fsubrs
push
pushf
lock
arpl
jecxz
push
adc
in
mov
dec
dec
clc
dec
add
jmp
mov
jb
and
mov
or
inc
xor
cwtl
inc
cmp
adc
adcl
jae
addb
jecxz
jno
mov
insl
add
sbb
xor
mov
push
inc
and
add
push
push
sbb
nop
fcoml
loopne
sbb
fidivrl
push
push
mov
mov
mov
jno
adc
clc
sub
jo,pt
stos
and
dec
pushaw
clc
add
or
movsl
stc
dec
and
and
f2xm1
test
add
adc
push
xor
dec
enter
xor
jl
mov
push
mov
or
lods
rcll
mov
mov
sti
add
scas
ret
and
stos
mov
push
pop
sbb
dec
add
jb
in
int
cmpsl
cli
mov
in
enter
incl
stc
adc
fldl
out
inc
lahf
pop
sub
push
add
sub
add
lahf
add
xchg
jo
cltd
xor
andl
jns
adc
add
add
jmp
gs
mov
inc
and
lret
dec
jg
add
bound
mov
pop
cld
outsb
adc
in
add
gs
call
pop
adc
scas
push
hlt
jo
add
aam
in
outsb
mov
and
stos
int
or
xchg
dec
les
xorb
sbbb
ljmp
push
cltd
xchg
bound
add
jecxz
inc
cmpsl
pop
rolb
cmp
int3
push
jecxz
test
add
into
pusha
ljmp
cwtl
in
xor
sarb
inc
xor
push
push
test
add
sbb
mov
inc
sub
and
pop
aas
mov
bound
mov
sbbb
adc
jbe
mov
scas
sbb
popf
add
pop
inc
sbb
adc
dec
adcb
or
dec
les
adc
pop
add
movb
std
mov
inc
push
jo
add
mov
ret
inc
sarb
or
add
test
mov
mov
xchg
fisttpl
lock
jns
insl
inc
aam
mov
mov
lock
xchg
cli
addl
or
jle
lods
lods
addb
mov
mov
and
or
addl
push
adc
sub
addr16
shlb
ljmp
andb
sub
jb
inc
and
and
shrb
outsb
xor
movups
add
inc
lcall
sub
rorb
ficoml
add
adcl
shr
mov
or
push
test
push
ljmp
test
inc
pusha
mov
pop
test
add
orb
pusha
xor
pop
rcr
mov
jno
add
ljmp
lock
push
add
jge
inc
test
adc
inc
xchg
xor
add
inc
orb
pop
test
xchg
jle
test
pop
cmpsb
mov
adcb
inc
cli
push
push
add
adc
loopne
lret
push
out
loop
or
ja
fsubs
inc
lret
lea
push
rcr
inc
loop
add
or
add
xchg
mov
hlt
jne
popw
hlt
out
and
imul
orl
aam
or
mov
lods
aaa
fcompl
push
or
fnstcw
pop
gs
sarb
jnp
mov
sti
push
mov
out
and
mov
inc
insl
push
mov
cmp
or
adc
cmp
out
push
push
add
pop
push
sbb
sbbl
mov
test
add
add
andb
xor
mov
sub
rolb
test
ret
pop
mov
inc
sbb
nop
iret
loopne
mov
das
add
adc
push
and
sub
mov
push
sahf
add
jbe
add
sbb
ficoml
sar
cmp
mov
push
push
xlat
or
and
shlb
jae
xor
fsubrl
fcompl
xor
and
pop
scas
dec
inc
push
outsl
dec
jmp
sbb
mov
push
and
or
mov
ja
fadds
pop
jb
or
push
mov
mov
push
mov
and
adc
jp
add
mov
pop
adc
jo
loopne
orb
push
lret
push
sarb
pop
sub
cmp
incb
lods
loopne
shrb
add
les
lds
inc
sbb
sbb
sub
push
dec
adc
loope
das
push
and
mov
xor
and
dec
push
lock
inc
add
arpl
or
push
cmp
inc
push
jne
mov
push
sbb
add
xor
push
and
pop
adc
mov
loopne
mov
or
push
xchg
mov
add
inc
lcall
add
or
jae
pop
lea
mov
push
xchg
cmp
vpavgb
add
and
loopne
add
and
push
ds
or
loopne
movsb
mov
mov
add
rolb
or
mov
push
ret
fs
push
outsl
inc
jg
jg
mov
xor
mov
repz
movsl
inc
jb
lock
pusha
push
adc
mov
jp
add
mov
or
les
and
adc
scas
and
test
and
add
cmp
cmpsb
loopne
jo
or
adc
or
fisubrl
mov
push
mov
push
into
insl
push
sbb
outsb
stos
sbb
in
ficomps
add
movsl
out
pop
and
adc
or
aaa
pop
sar
push
dec
stc
xchg
mov
out
and
inc
inc
rorb
out
xchg
xchg
xchg
push
es
sub
out
jp
mov
je
mov
rcll
scas
mov
or
loopne
jb
push
pop
popf
push
loop
mov
test
push
xor
add
inc
push
das
jp
pusha
rcll
ss
addl
pusha
push
jae
dec
test
inc
xor
add
shll
adc
dec
adc
or
pop
insl
sbb
jmp
lcall
sbb
mov
pop
push
hlt
mov
inc
decb
arpl
add
or
pop
inc
mov
add
test
mov
shll
inc
lcall
aaa
mov
stc
repnz
pop
adc
in
mov
out
push
adc
enter
mov
mov
adc
dec
lds
bound
inc
jmp
icebp
add
outsl
pop
pushw
outsl
int3
mov
cli
dec
mov
rcrb
or
add
repnz
and
push
or
loope
in
mov
push
adc
add
fidivrl
data16
and
add
pop
add
fsub
cld
sub
orb
adc
div
or
sbb
jg
xor
xor
mov
rcl
or
rorb
sti
add
add
lods
mov
ljmp
add
pusha
xor
push
out
mov
cmp
xchg
in
xor
add
inc
out
add
fimuls
add
push
mov
aas
jl
mov
or
jle
mov
subb
inc
mov
xlat
xchg
imul
jg
mov
add
clc
cmp
jecxz
add
add
push
fs
outsb
call
rorb
push
movups
cmp
aas
pop
fcmove
push
xor
push
push
mov
push
adc
decb
xchg
jge
xchg
lea
inc
push
dec
or
mov
or
into
inc
xchg
lcall
cmp
mov
inc
inc
cmp
xchg
add
inc
jle
adc
or
adc
push
andps
adc
fstps
push
adc
clc
or
or
data16
aad
cmp
pop
popa
insl
mov
push
faddl
hlt
lds
stos
push
int3
inc
enter
add
ret
pop
jl
add
mov
inc
dec
push
add
adc
dec
cli
sub
and
dec
push
mov
inc
inc
mov
add
cmp
xchg
std
inc
and
add
mov
lea
les
loopne
mov
and
add
inc
inc
and
in
or
cmp
adc
or
push
inc
push
fisubs
add
dec
or
xchg
jmp
subl
mov
inc
test
aaa
aam
cmp
sbb
push
out
cmp
add
dec
sar
mov
push
adc
mov
and
jb
das
fdivs
sub
pop
adc
cmp
add
arpl
push
push
mov
dec
push
dec
dec
cmp
data16
add
test
and
adc
pop
inc
subb
xchg
repz
rorb
jp
or
mov
jmp
cmp
jnp
dec
lret
mov
mov
ljmp
pop
push
jp
cmp
pop
scas
outsl
outsb
add
out
jnp
inc
in
push
adc
mov
sahf
je
aaa
jbe
adc
jp
into
sub
add
xlat
inc
inc
xchg
lds
sub
sub
jecxz
adc
add
sbb
gs
dec
push
rclb
sbb
rcll
jp
jg
fisttps
mov
dec
add
pop
dec
push
adc
loopne
mov
or
add
add
cmp
dec
push
cs
sar
or
inc
push
mov
out
or
out
into
sarb
or
jo
xor
test
adc
push
fs
sti
testb
cmp
jp
mov
rcl
adc
or
push
in
sbb
repz
jae
fbld
xorb
sbb
sarl
mov
adc
or
push
dec
jo
repz
xlat
mov
sub
lcall
ret
push
int3
fstpt
pusha
ret
mov
xor
mov
andb
ljmp
inc
pop
add
shlb
pop
dec
push
sbb
dec
inc
popf
pop
add
call
mov
loopne
add
addb
xor
pusha
cmp
add
in
pushl
and
mov
and
in
adcl
addb
sub
cmpsb
lds
add
insl
stos
pop
xor
add
movb
mov
lcall
mov
dec
inc
or
les
adc
mov
rcrb
dec
or
push
ret
cmpl
jb
cmpsb
xchg
jo
out
pop
movsl
jne
add
fsubl
fdivrl
sbb
jns
add
lea
popl
clc
sub
add
and
rcll
cld
enter
add
test
out
dec
dec
filds
push
sub
jg
add
rolb
ret
in
xor
adc
aas
ss
jno
nop
jae
lea
mov
add
inc
jb
sbb
imulb
inc
xchg
or
push
inc
decl
mov
sti
enter
xchg
xor
bndldx
ljmp
enter
push
cld
jae
inc
or
popl
adc
lcall
inc
cmp
inc
xor
or
sub
jp
pop
inc
mov
aaa
xor
dec
add
popa
push
xor
rcll
push
sbb
mov
adc
push
add
out
test
fwait
sarb
add
out
cmpsl
jae
movsb
or
hlt
test
mov
pop
mov
add
dec
mov
sarl
insb
lods
or
and
or
mov
pop
mov
outsl
fiaddl
cld
inc
xchg
out
adc
nop
sarl
ds
loope
lock
idiv
mov
out
and
cmp
adc
inc
xor
ret
cld
push
inc
or
test
cmp
lods
fisubrs
jb
xchg
je
xchg
inc
or
fbstp
popa
sbb
add
enter
jp
pusha
cs
jle
ret
cmp
les
aas
add
cmp
repz
or
push
pop
jo
mov
insl
cmc
loop
scas
mov
sub
sti
add
out
or
sti
sub
out
in
out
ljmp
push
mov
aas
call
push
add
add
push
sti
fildl
shl
imul
inc
sti
addr16
imul
pusha
cmp
push
pop
fs
mov
cmp
jno
loop
pop
in
sbb
sti
in
adc
rcr
add
mov
je
pop
scas
outsb
pop
pusha
adc
ss
inc
pop
add
jnp
insl
lahf
mov
push
sbb
mov
sbb
popa
sbb
dec
ds
jl
sbb
xchg
jae
neg
add
call
fmull
sub
pop
adc
xlat
shl
test
push
sbb
add
and
js
scas
sar
movsb
push
out
iret
cmpsl
adc
pop
lock
mov
popa
cwtl
adc
les
dec
loopne
mov
xchg
add
es
sub
test
test
mov
or
loopne
xlat
mov
js
push
jle
orb
js
int3
add
push
scas
push
push
shrb
jno
in
sbb
or
dec
in
cmp
pop
fmull
or
fildl
test
add
add
or
mov
je
insl
ror
ret
lods
xlat
int3
xor
sbb
pop
dec
xchg
add
lret
xor
xchg
cltd
jbe
add
movsb
xchg
jecxz
int3
dec
mov
adc
add
or
aam
push
xor
inc
mov
inc
stos
adc
add
or
out
add
jno
xchg
leave
fisubrs
mov
rclb
pop
dec
call
andb
jae
loopne
imul
lods
cmp
dec
xlat
bound
stc
push
push
mov
pop
lret
dec
adc
xlat
add
and
xchg
push
dec
inc
push
mov
jl
subl
and
and
mov
in
push
pop
add
xlat
adc
push
adc
dec
pusha
sti
inc
clc
add
cld
add
dec
fdivr
stos
push
cmp
mov
sbb
push
adc
dec
sbb
add
jge
add
add
aad
aad
repz
scas
push
cmp
test
xchg
pusha
dec
addb
add
test
fcmove
and
and
or
and
pushf
orb
add
mov
cmp
and
mov
lods
cmpb
imul
push
mov
inc
sti
mov
out
add
add
adc
or
xor
sbb
pop
inc
incb
mov
mov
add
test
out
cmp
adc
cmp
dec
adc
xor
mov
bound
cwtl
je
mov
repz
xchg
rolw
mov
add
es
add
adcb
loopne
inc
add
pop
xchg
adc
mov
push
mov
mov
inc
add
and
adc
call
xchg
bound
sub
test
push
pusha
xor
loopne
or
push
mov
mov
dec
in
xor
clc
nop
es
or
in
sbb
inc
sub
std
imul
push
insb
cmp
addb
out
and
jbe
repnz
into
pusha
es
gs
mov
push
pushf
shlb
cmpsb
mov
inc
ljmp
or
popf
shlb
in
sbb
ja
sub
inc
andl
scas
pusha
sub
push
push
push
xlat
sub
and
addl
push
inc
xor
or
mov
gs
andl
jmp
pop
loopne
dec
mov
sub
repz
push
or
clc
and
sub
repz
fbld
push
sbb
add
mov
adc
push
inc
adc
mov
push
xchg
cmp
out
daa
mov
sti
call
adc
jge
addl
push
js
add
rorb
xchg
xor
or
mov
mov
add
or
xchg
push
mov
test
in
jg
mov
inc
dec
pop
cs
pop
cmp
test
inc
sbb
movsl
push
inc
push
sarl
jle
pusha
andb
aam
or
cld
mov
jg
jo
and
hlt
ljmp
out
mov
and
pop
loope
jb
loope
sbbl
and
out
call
cmp
and
mov
subl
mov
pop
mov
pusha
jl
jle
clc
fwait
or
dec
loopne
pop
and
insl
andw
movsb
add
pusha
shrb
sub
cmp
add
jo
bound
cld
cwtl
ds
adc
mov
xor
in
cmc
mov
cmp
aaa
loopne
add
cmp
add
jne
mov
adc
sbb
jle
add
rcrl
add
adc
aaa
int3
cmp
je
lea
pop
add
icebp
clc
in
in
das
sub
add
add
sar
add
and
adc
or
mov
inc
push
sbb
cmpsb
mov
xchg
and
push
stos
mov
scas
push
sbb
sub
mov
lret
mov
clc
andl
stos
mov
sub
test
dec
ret
cli
push
add
cwtl
mov
mov
xchg
add
add
shrl
out
and
insb
sahf
fldt
pop
lret
adc
push
sub
jo
ljmp
loop
divl
imul
or
popa
sbb
call
iret
pop
js
stos
mov
jae
inc
add
and
test
out
or
xlat
jecxz
iret
and
sub
mov
cmp
or
inc
or
popa
xchg
adc
cs
adc
and
xor
loop
jbe
movsb
jg
nop
or
push
nop
jb
dec
jl
inc
xchg
hlt
push
call
je
shrl
ja
mov
pop
add
rclb
fsubrs
std
sbb
lock
or
mov
cmp
mov
iret
cmp
je
dec
adc
add
xchg
test
cli
cmp
jg
add
lock
jne
add
cmpsb
hlt
jno
out
andb
dec
inc
mov
decl
jnp
jle
xor
push
andb
cmp
lds
and
fildl
out
mov
fisttps
cmp
jb
xor
jne
add
or
cld
cmp
jno
leave
out
cmp
add
xchg
add
xchg
or
xchg
add
mov
les
xchg
add
pop
cwtl
js
punpckhbw
jo
call
lock
xchg
fisubs
adc
js
add
jg
jae
cmp
and
mov
xor
inc
sub
mov
inc
mov
insl
xchg
test
pushl
jnp
adc
jmp
and
out
ficoml
aas
fcoms
movsl
mov
push
add
or
or
aas
or
push
psraw
mov
jae
incl
nop
call
mov
loopne
cmp
push
add
dec
dec
movsb
fwait
in
jae
add
daa
dec
add
mov
mov
loopne
pop
push
and
xchg
dec
add
mov
cmp
movsb
dec
add
fdivrl
cmp
adc
or
and
outsb
push
xchg
push
adc
xchg
data16
test
cli
pusha
cmp
sub
pusha
loopne
xchg
inc
pop
in
jbe,pt
xor
lock
outsl
sbb
les
push
pop
or
xor
adc
push
sbb
add
jno
push
inc
fimuls
sub
notb
pusha
adc
add
rcl
xchg
mov
or
out
add
and
lcall
stos
add
les
dec
mov
in
add
mov
mov
mov
clc
adc
clc
xor
adc
imul
insl
push
test
mov
jbe
fdivrl
add
xchg
clc
pop
or
push
dec
xorps
inc
push
sub
icebp
dec
push
scas
push
sbb
das
je
sbb
cmp
mov
js
out
cmpsb
or
lea
mov
test
dec
test
outsl
dec
ja
popl
push
fidivrs
outsl
inc
or
and
out
jo
shl
aam
pop
daa
adc
outsl
cmp
add
roll
cmp
or
inc
and
lret
xor
out
sbb
jb
cli
jnp
mov
xor
or
or
and
sbb
adc
fwait
test
jo
clc
or
testb
push
add
and
out
mov
cli
imulb
add
add
out
ret
repnz
adc
add
repz
mov
test
test
mov
or
lea
mov
pop
inc
imulb
mov
xor
push
filds
cwtl
adc
clc
jno
pop
or
std
pop
ss
adc
scas
xor
sbbb
xchg
lcall
and
adc
clc
or
jo
and
sbb
jae
jle
xor
mov
inc
add
push
sbb
pop
data16
inc
cwtl
sub
cli
inc
out
fwait
mov
pop
or
push
ret
sahf
push
push
in
aaa
shr
fildll
jmp
mov
out
pop
inc
or
push
xchg
ss
in
or
out
shl
sti
lods
mov
sub
sub
and
push
out
lea
and
jae
add
es
loope
cmp
loopne
movups
and
mov
or
insb
sbb
or
data16
inc
inc
test
shlb
rolb
outsl
inc
jo
shll
adc
sub
out
jne
xchg
adc
adc
neg
clc
pop
adc
mov
push
add
stos
and
stos
and
fisttpll
and
inc
enter
sbbl
out
les
fwait
data16
loop
xlat
out
mov
divl
loop
dec
clc
mov
call
push
add
mov
loopne
subb
mov
mov
or
mov
mov
mov
clc
push
inc
inc
mov
iret
loop
and
xor
mov
rcll
loop
add
add
out
loope
cmpsb
dec
push
xchg
dec
ss
mov
jns
or
push
sarb
out
rcrl
clc
mov
add
and
jo
popf
xchg
push
jecxz
jge
icebp
sub
cwtl
lds
rorb
dec
repz
out
ss
inc
jno
call
sub
add
add
inc
pop
fstl
mov
and
mov
rorb
ret
out
mov
push
cmp
push
ljmp
inc
lock
pusha
inc
fwait
popa
push
or
adc
add
add
and
mov
aad
dec
imul
daa
mov
cmpsl
fdivr
ljmp
or
mov
push
add
add
stos
fwait
inc
adc
or
andb
adc
add
xchg
inc
push
aas
inc
int
andb
mov
and
adc
push
xor
push
adc
nop
dec
sub
add
xor
out
mov
rolb
jb
push
or
push
add
fcoms
push
push
and
push
adc
mov
nop
shr
clc
outsl
inc
adc
sbbl
loopne
movl
repz
ljmp
bound
xchg
insl
mov
adc
cs
xchg
pop
add
push
inc
loop
test
rorb
jbe
icebp
pop
insb
clc
push
and
dec
out
inc
add
xchg
test
mov
dec
lret
inc
inc
sub
or
cli
jo
popa
push
sbb
rorl
add
andb
jo
rclb
inc
test
push
mov
imul
fbld
mov
inc
rclb
adc
test
cmpsb
mov
mov
jecxz
pusha
or
xor
xor
rorl
dec
push
mov
mov
fadds
in
mov
decl
sbb
add
and
push
add
push
sbb
push
loopne
cmpsb
add
xchg
incb
jg
push
add
js
add
adc
fs
add
leave
cmp
adc
rol
loop
xchg
out
push
aaa
mov
hlt
out
fcoml
or
adc
fs
jecxz
and
subb
push
outsb
stos
ljmp
adc
cmp
jl
psrld
add
add
out
xor
shlb
dec
mov
mov
sub
mov
fsubrp
adc
inc
test
hlt
sub
clc
and
pop
ret
push
hlt
mov
popa
xchg
fidivs
adc
ds
outsl
xchg
mov
addb
and
ret
pop
rorb
xlat
jno
mov
in
mulb
cld
add
cwtl
aas
dec
adc
xchg
dec
sub
add
jno
or
add
add
push
and
sbb
sbb
jbe
mov
sbb
or
add
addb
and
ja
idivb
add
out
movl
push
sbb
push
insl
jg
inc
leave
sbb
cmp
pop
ljmp
insl
cmpb
shrb
iret
add
push
shrb
pop
jb
push
add
mov
lock
out
adc
inc
xchg
rclb
add
mov
add
jnp
jp
pusha
and
js
or
mov
cld
aaa
cld
xchg
mov
out
and
insl
add
fiadds
add
scas
pop
dec
loope
adc
out
mov
lcall
or
lods
add
pop
add
sbbb
pop
enter
cmpsl
mov
jbe
add
mov
lods
push
in
clc
popl
fcmovu
xchg
hlt
or
outsb
dec
stc
jb
add
sub
pushf
lret
jmp
push
je
fcompl
aam
inc
scas
cmp
insb
into
push
push
sub
call
mov
shlb
insl
ret
out
push
popa
mov
add
sbb
push
or
xlat
xchg
mov
add
test
add
test
stos
scas
mov
dec
popa
mov
popa
add
mov
nop
jmp
mov
enter
hlt
aaa
adc
add
jle
push
inc
sbb
adcb
push
les
push
in
push
nop
fstpl
popf
les
dec
popa
cmp
dec
je
in
sbbb
inc
mov
fiaddl
mov
sub
loop
loope
and
or
or
mov
add
rol
jmp
push
mov
and
push
mov
add
add
or
add
dec
push
xor
or
fimuls
outsb
decl
mov
add
ret
dec
inc
addr16
inc
cmc
or
rclb
insb
inc
div
mov
adc
sbb
int
push
test
push
jl
test
cmpsb
mov
mov
imulb
popf
test
pop
aaa
loop
and
call
popa
add
loopne
or
ljmp
fisubs
shrl
mov
loopne
sub
clc
xchg
and
cmpsb
adc
jae
inc
add
pop
test
mov
mov
push
mov
push
inc
lock
xor
push
inc
inc
mov
mov
or
mov
xchg
test
cld
push
inc
roll
out
mov
xchg
inc
inc
add
pop
loopne
test
aam
cmp
adc
decb
sbb
sub
hlt
out
pop
les
clc
addb
adc
into
mov
mov
mov
addb
pop
push
loope
and
push
lea
mov
cmp
add
sbb
dec
clc
pop
in
add
je
inc
fisttps
aaa
jnp
push
xchg
js,pt
mov
scas
clc
cmp
in
add
loopne
into
jp
pop
and
adc
xchg
lock
lds
clc
outsb
outsb
inc
popl
push
mov
or
rorl
test
inc
or
aaa
test
push
jns
aas
xor
push
add
aad
test
push
les
dec
pusha
jbe
xor
add
mov
jo
and
jae
or
daa
cli
push
inc
pshufw
pop
or
sub
mov
lea
enter
mov
pop
inc
mov
adc
pop
pushl
lods
out
cmp
or
cmp
jne
enter
rol
sbb
jecxz
push
cmp
cli
rolb
push
xchg
fcomps
push
mov
pop
dec
sub
xor
xor
add
lcall
add
popa
add
or
mov
jmp
cmc
es
adc
or
or
cmpsl
loopne
cli
add
and
or
push
push
inc
jae
dec
loope
data16
and
popa
or
sbbb
dec
mov
jmp
or
or
and
shlb
iret
unpcklps
loopnew
rorb
or
jecxz
shlb
js
iret
adc
add
xchg
adc
mov
movsl
mov
arpl
loope
and
mov
push
xchg
jp
std
cmp
ret
dec
xchg
aaa
push
xor
mov
decl
jmp
out
push
jae
lock
cmp
push
adcb
pop
adc
dec
inc
mov
sti
jae
or
push
push
inc
inc
adc
and
sbb
pop
mov
jecxz
or
incb
out
adc
ljmp
shll
hlt
jmp
rorl
stos
jmp
mov
mov
pop
inc
jmp
cmp
push
mov
push
xor
jmp
ret
add
jo
sbb
pop
rcl
ljmp
test
add
rolb
add
fs
push
inc
pop
mov
jle
rorb
mov
inc
rcl
mov
insb
bound
mov
cmpb
or
popa
rorb
add
fimull
mov
mov
insl
push
add
dec
pusha
push
push
or
cld
xchg
adc
insb
lock
rcl
pop
repz
xchg
enter
enter
jmp
mov
testl
dec
cli
pop
adcb
ret
out
sbb
adc
jg
xor
cmpsb
sub
clc
sarb
std
adc
jb
ljmp
sbb
or
or
jo
mov
inc
xchg
movsb
fbld
loope
nop
in
sbb
lcall
out
jbe
jecxz
mov
es
push
add
jecxz
cmp
mov
or
out
sahf
rcr
mov
mov
jno
shlb
arpl
push
inc
mov
loope
push
movhps
add
or
stos
adc
sub
adc
mov
icebp
je
dec
mov
adc
sub
or
adc
add
add
inc
cld
fisubrs
jecxz
mov
add
and
xor
fmuls
cmpsb
fbld
pop
movsb
xor
or
cvtps2pd
dec
inc
call
movsb
scas
icebp
add
dec
push
test
mov
out
xchg
test
and
dec
pushl
lds
inc
xor
ret
cmp
inc
testl
inc
push
out
xchg
sub
enter
mov
inc
xor
sub
addb
mov
icebp
outsl
inc
add
push
nop
sub
and
pop
rorb
hlt
pusha
mov
xorb
sub
pop
inc
jae
cmp
jbe
add
dec
inc
add
shrl
adc
jg
data16
and
das
jae
out
loopne
ret
outsl
and
cmp
push
adc
ret
add
rcrb
xchg
call
inc
bound
xor
lds
mov
and
mov
fsub
fdiv
sbb
mov
inc
pop
ret
push
cmp
jg
or
ds
outsb
nop
mov
orb
incl
adc
ja
test
push
clc
nop
adc
push
test
jmp
shlb
push
leave
stos
adcb
push
adc
inc
sbb
xchg
inc
sbb
add
ss
das
push
and
sub
cld
inc
bnd
arpl
lock
push
mov
shll
add
adc
repz
sbb
ljmp
test
add
pusha
add
adc
test
inc
jmp
ja
cmp
pusha
or
jg
push
dec
loop
add
clc
mov
adc
xlat
adc
cmpsl
lcall
sub
cld
xor
pop
cmp
loop
cmp
mov
and
sti
bound
ds
shlb
adc
and
pushl
cmpl
mov
rolb
jnp
add
inc
mov
mov
and
lea
xorb
into
xchg
push
add
or
mov
pushf
ljmp
jmp
mov
inc
nop
push
outsb
mov
cs
fldt
add
scas
add
mov
inc
or
adcb
jle
push
pop
inc
or
adc
in
sbb
jl
lock
rolb
rcr
adc
rolb
add
testb
repnz
movsb
mov
push
push
andb
lock
push
mov
mov
loopne
out
jecxz
inc
decl
iret
mov
add
loopne
inc
or
daa
subb
ret
out
inc
rorb
push
pusha
fmul
rcrb
dec
hlt
scas
cli
fs
and
push
inc
jno
jb
add
jl
jecxz
or
iret
rolb
jb
fiadds
xor
cmpsb
adc
push
mov
clc
add
adc
out
adc
incl
mov
cld
add
and
adc
jle
sbb
stos
scas
push
mov
pop
jo
adc
xor
and
push
mov
dec
pavgb
gs
or
jg
rclb
adc
daa
xorl
mov
outsl
adc
adc
stos
cld
incl
jl
add
adc
stc
or
clc
in
push
jge
inc
pusha
clc
call
adc
cmp
cli
and
clc
rclb
nop
js
fisttpl
cltd
or
lcall
cld
lcall
loop
add
pshufw
pushf
insl
arpl
add
and
addl
inc
lahf
cmp
callw
stos
push
xchg
adc
inc
jmp
sti
and
mov
shl
sti
popa
add
pop
rcll
cmpsb
decl
je
lock
mov
je
mov
inc
and
ljmp
push
in
sbb
daa
rcrb
push
jp
inc
clc
sbb
shrb
xchg
push
dec
mov
outsl
aam
mov
mov
push
addb
xor
or
or
lcall
stos
psraw
push
pop
sub
sbb
sub
xor
pslld
push
push
mov
lock
mov
stos
adc
mov
call
sbb
mov
mov
mov
adc
enter
sbb
mov
sub
add
andb
mov
xchg
rclb
int3
mov
data16
push
pushf
jae
sbb
push
cld
out
in
sti
dec
les
push
roll
or
add
or
das
jb
movsl
movq
add
xlat
movsl
xor
xchg
xor
sub
push
gs
mov
or
insl
orl
push
sbb
jb
pop
add
dec
dec
mov
xor
rclb
aam
addr16
push
or
xchg
jle
mov
and
cmpsb
aaa
inc
or
stos
sbb
loopne
popa
add
push
xchg
lret
mov
add
or
out
add
popf
test
mov
add
adcb
pop
shl
test
mov
add
pop
inc
sbb
dec
add
jbe
jmp
fs
jno
mov
sub
lcall
mov
testb
popa
add
lock
push
out
mov
pop
push
subb
jo
fistpl
outsb
pop
pop
pop
in
or
mov
cmp
sbbl
dec
adc
mov
jecxz
add
dec
movlps
subb
aam
push
mov
add
xchg
add
xlat
jmp
in
mov
inc
add
popl
xlat
sti
sub
test
sti
orb
add
test
popa
shlb
addl
pop
push
cli
int3
push
inc
sub
ljmp
shrb
mov
addb
dec
xchg
js
inc
outsl
fsubs
shrl
sbb
add
adc
jo
push
loopne
aaa
push
xor
movl
andb
xor
sbb
jns
out
mov
or
dec
mov
lcall
pop
in
fs
lcall
xchg
fdivl
add
rclb
mov
shlb
das
mov
or
xor
stc
clc
push
inc
inc
dec
sub
fmuls
mov
inc
or
stos
inc
pushf
dec
jl
cmp
push
out
fildl
mov
mov
adc
add
andb
pusha
mov
pop
clc
pop
subb
sbb
adc
imul
clc
sar
and
gs
rcrb
xchg
movsb
pop
loopne
push
adc
and
or
mov
and
and
inc
enter
add
mov
out
push
notb
out
mov
push
add
push
mov
into
or
out
fwait
add
add
push
dec
ds
xor
movl
test
negb
sarb
or
out
dec
mov
lea
inc
inc
ffree
sub
or
les
push
xchg
mov
and
std
aas
sbb
shlb
test
rolb
and
rolb
add
je
add
jl
idivb
subb
jo
cli
or
aaa
dec
jle
jno
dec
test
xor
pusha
mov
fidivs
push
in
and
mov
bound
bound
adc
jb
add
push
jb
fsubs
pop
xor
cmp
inc
jno
or
add
ss
add
inc
add
add
sbb
or
or
pop
push
add
pop
sbbb
cmpsb
mov
shlb
inc
push
cld
test
rcrb
cmp
mov
rclb
ret
xchg
inc
fldt
adc
andb
pusha
add
add
aad
rorb
cmp
add
outsb
shrl
and
push
arpl
add
lret
shrl
xlat
and
add
dec
ja
inc
add
and
or
or
ss
incl
xchg
pop
subl
pop
mov
aad
xlat
shrb
sbbb
call
cmp
addb
jmp
and
out
mov
shll
das
jecxz
adc
and
add
push
addb
inc
xor
xchg
push
mov
iret
mov
outsl
outsl
mov
ret
popl
pop
lea
pusha
cwtl
adc
mov
shl
jg
adc
or
lea
jo
das
test
sub
sub
mov
inc
adc
sbb
daa
or
pop
mov
inc
aas
add
out
popa
loope
xor
sub
inc
lea
inc
loopne
sti
fcomip
pop
insb
add
cltd
mov
push
cmpsb
inc
cmp
cmp
push
xor
and
and
mov
mov
mov
jb
clc
in
sbbb
in
incl
dec
loopne
dec
or
rorl
clc
mov
push
inc
lret
mov
mov
icebp
aaa
add
andb
adcb
xor
mov
adc
add
mov
cmp
call
popa
sub
sbbb
aam
sbb
mov
out
add
imul
jae
mov
mov
aas
sub
clc
fiadds
test
jo
mov
ret
jnp
mov
adc
js
in
bound
jecxz
push
pusha
out
lods
add
jmp
add
lcall
jb
lea
ficoms
sbb
and
dec
sbb
inc
xor
sub
adc
inc
add
adc
insl
adc
cmpsb
sbb
inc
mov
inc
jo
ljmp
xorl
in
pushl
test
push
or
xchg
shlb
lods
xor
dec
pop
mov
inc
jge
and
scas
push
jne
dec
roll
or
xorb
cmpsb
sbbl
repnz
cmp
and
ds
pusha
mov
shl
cmpsl
sub
xchg
rclb
loopne
test
addr16
sbb
inc
xorb
mov
pusha
ret
leave
push
adc
loopne
mov
adc
mov
inc
sbb
test
and
cmp
incl
repnz
or
adc
lea
cmp
add
adc
daa
aam
cmp
jne
cmp
xor
outsb
or
sub
mov
testl
ljmp
aaa
mov
sbb
lcall
xor
mov
mov
sbb
and
cmp
cmp
adc
or
xchg
loop
mov
cmp
shrb
sbb
mov
xor
or
stos
fdiv
subl
sbb
ss
pop
nop
frstor
std
jg
jae
push
outsl
mov
xor
insl
add
out
cmp
out
inc
int
push
add
pusha
and
or
mov
xchg
sahf
out
pop
adc
pop
inc
sbb
add
out
xchg
cs
mov
push
cmp
pop
xchg
sbb
mov
inc
lret
adc
xchg
xor
or
repnz
jp
pop
loopne
fisttpll
jne
inc
in
test
lea
jg
dec
rorb
loope
jb
cmp
or
cmp
push
jae
and
rolb
sub
outsb
jno
insl
js
xchg
and
ljmp
rolb
adc
inc
adc
add
daa
in
push
mov
rorl
add
jl
hlt
mov
inc
jo
cmp
jp
leave
rolb
pop
pushl
and
addps
mov
clc
ds
mov
push
rorl
lcall
sbb
pusha
push
inc
aaa
je
sub
and
add
clc
filds
sbb
inc
je
or
jo
mov
nop
xchg
add
push
lret
inc
pop
jb
jge
ds
in
push
nop
adc
divb
ss
cltd
add
xchg
and
add
sti
or
int
in
lds
cld
and
inc
push
cmp
mov
or
hlt
scas
adc
test
pop
pop
rcll
push
xchg
pop
xor
and
inc
push
jae
ss
add
filds
loope
enter
add
cli
add
ret
adcb
jno
mov
push
enter
aas
fdivl
inc
or
push
or
shrb
test
push
and
je
pop
inc
loopne
push
mov
dec
outsb
leave
fs
aam
cld
sub
inc
cmp
push
mov
jae
rolb
jae
mov
shrb
sbb
enter
add
lock
xchg
add
jae
mov
mov
jne
and
pop
sub
add
testb
cmpb
push
movsb
add
in
loopne
and
cmp
je
lea
add
adc
mov
sbb
xchg
repz
add
inc
inc
inc
push
aaa
pop
inc
pop
inc
jne
mov
jae
adc
rorb
clc
add
push
or
adc
add
sub
push
in
sbb
mov
enter
movsb
pop
push
pop
push
inc
call
lcall
mov
adc
adc
inc
lods
popa
pop
push
adc
add
subb
nop
adc
cmp
out
or
cmp
rclb
sti
out
or
adc
push
and
cmp
push
lret
shlb
shlb
lahf
inc
mov
mov
cmp
leave
inc
les
or
push
add
ss
test
dec
les
sub
or
rclb
mov
adc
rcrb
pop
push
cmpb
or
sbb
sbb
mov
push
bound
sbb
mov
pop
pusha
sbb
movsb
loopne
push
nop
mov
jb
mov
push
cmp
mov
and
jmp
sbb
or
subb
int3
inc
sub
jae
and
shlb
pusha
adc
push
jno
push
aam
or
or
push
inc
pop
sbb
push
inc
push
and
adc
shr
jns
and
or
mov
cmpsb
lret
out
sbb
arpl
nop
add
or
push
je
lock
add
mov
or
js
pop
dec
mov
mov
sarb
or
jo
or
loope
sbb
adcb
jns
mov
mov
out
add
mov
mov
push
adc
mov
push
icebp
fwait
dec
es
mov
sub
pop
inc
adcl
pop
andl
outsb
data16
test
or
popl
mov
inc
out
pushf
mov
and
and
js,pn
jl
in
push
mov
mov
dec
hlt
push
lcall
sar
nop
push
adcl
push
outsl
ret
adc
adc
jb
test
loop
and
xchg
mov
sub
mov
sbb
cmp
mov
rolb
adc
cmp
lock
cmpsb
and
bound
hlt
scas
mov
jle
nop
or
inc
push
loop
push
shll
add
test
orb
pop
lret
fisubrs
mov
rorb
or
icebp
call
mov
or
and
mov
enter
js
clc
cli
mov
arpl
adc
daa
push
lea
adc
add
insb
jmp
sbb
mov
fiadds
xor
add
lods
inc
jle
clc
mov
subb
imul
sub
outsl
mov
hlt
imul
cmp
lock
dec
adc
addb
cld
loopne
push
mov
out
jo
stc
clc
adc
rcr
les
loop
mov
je
pop
sbb
jae
insl
xchg
adc
add
test
imul
adc
scas
add
jg
xchg
add
add
push
sub
dec
std
outsl
push
push
or
jg
out
push
and
std
fldt
bound
xchg
xlat
add
add
jo
sub
or
push
mov
sar
push
les
and
add
pop
add
add
mov
xor
push
adc
shll
add
lds
inc
loopne
or
sbb
outsb
mov
testb
mov
and
call
adc
dec
or
push
push
push
mov
aaa
pusha
out
push
outsb
mov
adc
push
mov
pusha
sbb
sbb
xor
loop
adc
bound
sbb
sbb
ret
ja
or
add
or
pop
or
aas
cmpsb
xchg
add
scas
sbb
out
adc
lods
mov
xor
rcll
fstpt
xor
mov
mov
sub
das
and
add
out
and
push
cmp
cmp
jl
jbe
icebp
adc
jo
push
mov
sbb
adc
testb
dec
ss
outsb
mov
adcb
xor
lcall
and
nop
stc
les
ljmp
jp
icebp
inc
loope
test
outsb
or
lds
mov
daa
int3
push
sbb
dec
jl
mov
inc
jae
cli
add
out
test
adc
sub
push
clc
mov
ljmp
loopne
pop
sub
push
pop
add
add
push
adc
dec
movl
lcall
lret
movsl
push
xchg
outsb
fcmovbe
push
test
pop
jle
push
jbe
in
add
and
push
inc
rolb
mov
push
sbb
mov
fiadds
loopne
sub
js
fidivrs
fucomip
sbb
cmp
dec
mov
dec
sbb
mov
fidivrs
addb
jle
push
mov
pop
fsubl
fs
cli
incl
dec
mov
stos
stos
sbb
pop
cmp
imul
dec
scas
xchg
cmp
inc
clc
dec
insl
mov
mov
push
push
jb
fisttps
dec
xorb
stc
add
or
sbb
or
fildll
cmp
jno
cmp
jo
adcl
mov
addl
sub
in
push
xor
adc
push
mov
test
cmpsb
mov
adcl
rol
add
insl
mov
adc
pop
or
or
push
adc
jno
pop
mov
test
cmp
shlb
ds
inc
sub
mov
push
adc
inc
push
nop
push
dec
mov
dec
jb
ljmp
and
push
jae
pushf
dec
cmpsb
mov
lret
push
dec
cmp
es
mov
inc
dec
rolb
test
add
push
jb
loopne
sbb
incb
mov
in
aam
mov
fbstp
add
inc
cmpb
push
inc
mov
mov
sbb
add
jb
jle
inc
inc
add
subl
sbb
es
mov
push
add
sub
rcll
lea
clc
mov
inc
push
jecxz
mov
dec
mov
xor
sub
push
nop
fsts
inc
jo
sbb
bound
or
mov
std
sbb
shlb
or
cmp
jo
mov
stc
inc
out
mov
xchg
dec
add
movb
lea
ljmp
clc
orb
jecxz
andb
cli
sahf
lock
dec
loop
rclb
sahf
add
or
sub
sbb
rcr
insb
fmull
data16
roll
les
sbb
fsts
or
push
stos
pop
fsubl
pop
mov
decl
and
push
inc
lret
xchg
adc
push
imul
add
adc
fstpt
lret
pop
jnp
cmpsb
cmpsb
xlat
add
mov
push
bound
mull
rolb
es
or
mov
push
fdivr
in
push
pusha
push
or
jecxz
insl
xor
or
out
dec
inc
icebp
and
lock
fadds
mov
inc
mov
pop
aaa
xchg
or
andl
push
add
mov
movsb
cmp
mov
shlb
sub
and
scas
and
repnz
test
push
in
imul
mov
sbbl
jnp
faddl
lock
and
incb
and
push
sub
movb
pusha
add
push
push
outsl
mov
dec
and
and
movsb
or
aaa
out
sub
in
int3
xor
das
add
inc
and
fistl
and
iret
inc
pop
xor
mov
shll
mov
cld
jg
push
jae
out
ss
stc
xchg
loope
and
fwait
inc
pop
mov
dec
or
loope
adc
loopne
and
in
and
and
pusha
mov
lock
fmuls
or
out
loopne
and
add
cmp
inc
and
and
or
data16
out
lds
lcall
sbb
iret
mov
dec
sarb
push
push
mov
popa
in
shrb
shll
xlat
pusha
sbb
fcmovnu
jmp
stos
or
or
scas
or
rclb
or
push
cs
jecxz
mov
jnp
das
sbb
stos
or
sbb
mov
cmpb
repnz
adc
mov
popa
insb
js
sahf
adc
loope
loopne
fcoms
decl
decb
or
or
mov
or
and
xor
outsl
sub
sub
aad
addb
mov
add
fldt
sbbl
adc
js
add
adc
fists
sbb
daa
addl
popl
push
xor
push
push
cmp
xor
rcll
fwait
outsb
jg
mov
les
inc
and
xchg
loope
push
push
sbb
add
cmpsb
ss
fbstp
and
aaa
das
pop
sub
push
aaa
mov
and
adc
push
fwait
add
push
adc
push
mov
lods
add
rclb
fldt
clc
popl
scas
in
inc
xchg
inc
cmp
fildll
sbb
add
push
mov
loope
movb
cltd
or
es
add
adc
sub
cmp
jb
lock
sub
or
inc
loop
aaa
adc
sub
add
fisttps
ljmp
push
sbb
cli
insl
adc
pop
shrl
adc
sbb
and
jo
into
and
dec
cmp
sub
xchg
adc
adc
dec
gs
push
push
mov
push
cmpsb
sbb
sbb
push
cmp
push
adc
mov
inc
jl
mov
push
out
xor
or
mov
and
outsl
fmuls
pusha
mov
fisubrs
sarb
inc
pusha
xchg
mov
pop
inc
add
inc
es
outsb
xor
into
adcb
and
add
xor
add
xor
mov
inc
fnstcw
xor
call
and
xchg
outsb
xor
aas
jo
jp
fcomip
decl
and
adc
mov
imul
scas
mov
into
out
lret
xlat
outsl
xchg
push
imul
adc
cmp
jp
sbb
lock
add
and
pop
lock
xor
or
lock
jb
mov
aaa
mov
add
sbb
ret
xorb
push
add
fnsave
jmp
nop
es
mov
loopne
nop
xorl
std
inc
add
mov
inc
hlt
lock
xchg
scas
push
add
fwait
and
pop
dec
popf
out
mov
and
in
sahf
pop
jb
decl
enter
mov
sub
mov
jno
inc
adc
inc
adc
or
mov
repnz
hlt
or
push
xchg
out
adcb
push
inc
cmpb
adc
repz
cli
jae
mov
add
mov
shrl
xor
jecxz
in
push
movsl
add
fisubs
push
or
mov
adc
stc
add
mov
rcrl
mov
adc
fdivs
adc
ss
mov
cmp
sbb
ss
add
xchg
or
out
imul
scas
inc
and
sub
xchg
push
rorb
jae
xchg
hlt
or
das
pop
add
xchg
add
push
and
mov
fildl
stos
repnz
xor
mov
add
or
mov
clc
add
scas
outsl
mov
ss
aaa
push
mov
ss
js
insl
add
or
scas
or
jo
int3
xor
jo
add
jb
inc
dec
inc
std
shlb
add
adc
push
bound
jp
in
in
leave
mov
cs
inc
leave
or
andl
movsl
int
or
cli
mov
pop
daa
and
mov
cld
arpl
je
adc
jo
add
push
mov
aaa
lods
push
sti
rolb
add
dec
cli
pop
lcall
add
dec
je
aaa
mov
rorl
test
ds
jl
add
aad
adc
inc
and
cmpsb
sub
mov
icebp
mov
ss
out
sar
pop
jb
les
pop
decl
mov
push
sbb
pop
lock
and
add
add
push
pop
loopne
out
sub
xchg
ss
popa
inc
int3
xchg
inc
aaa
jp
nop
xchg
sub
lea
or
push
push
inc
popa
mov
and
sub
fdivl
repnz
xchg
sbb
add
add
push
add
xchg
adc
xchg
mov
add
jae
mov
xor
mov
pop
shll
xor
pop
test
jg
mov
add
push
pop
adcl
cs
lea
adc
jecxz
subl
enter
es
push
sqrtps
push
insl
aaa
or
inc
daa
inc
adc
sub
fmull
sbb
sbb
adc
lock
and
mov
shl
clc
pusha
xor
fdivs
clc
orb
pop
jnp
mov
lea
or
or
pop
sarb
rclb
mov
push
scas
das
lock
push
sub
int
loop
cld
and
insl
add
jmp
es
ficoms
add
dec
or
aam
dec
jb
push
addl
sarb
lahf
adc
repnz
incb
fs
jmp
popa
add
nop
push
repnz
das
shlb
add
test
or
add
add
jmp
dec
add
add
cmp
mov
push
mov
movsb
mov
aaa
loopne
push
lds
push
into
and
ja
inc
shlb
outsl
pop
mov
in
push
xchg
mov
cmp
pop
repnz
pop
cmp
dec
add
je
or
into
inc
daa
xchg
call
sub
cs
rcll
scas
and
mov
mov
pop
fidivs
enter
and
cmc
and
mov
dec
xor
in
jbe
jp
or
sbb
add
inc
shrb
or
lcall
mov
lret
jae
not
push
jmp
and
les
stc
into
and
sbb
pop
inc
cmp
dec
adc
inc
fadds
jnp
scas
dec
lea
fdivrp
lea
imul
out
test
mov
push
pusha
stos
xchg
and
or
pop
xor
push
fnsave
or
mov
sahf
aam
cli
pusha
test
inc
or
fistl
ljmp
test
push
add
push
aam
popa
and
es
mov
sbb
mov
aam
cs
push
inc
loope
dec
lcall
adc
cpuid
movb
enter
aaa
out
mov
push
mov
mov
and
xchg
repnz
dec
push
lcall
push
add
push
pop
and
push
and
mov
out
mov
inc
inc
insb
int
lock
sub
push
push
mov
push
int
mov
mov
sbb
mov
or
outsb
inc
sbb
enter
pop
mov
adc
jae
and
sbb
fs
sub
out
addb
jge
push
sub
loop
sbbb
mov
adc
push
mov
jo
inc
dec
mov
or
ljmp
icebp
mov
shlb
add
les
inc
rorb
outsl
xor
xchg
inc
jl
or
mov
or
dec
sbb
hlt
sub
lock
ljmp
add
cmpsl
fs
cmp
add
push
std
scas
in
push
data16
and
ds
add
mov
adcb
out
out
ret
cmp
sbb
pop
into
inc
sub
xor
lds
sbb
data16
out
jl
daa
pop
xor
adc
sbb
xor
test
loopne
sub
sub
sbb
push
rcrb
add
add
inc
xor
cmp
dec
les
adcb
dec
push
or
and
out
cld
popl
incl
test
push
loopne
je
inc
inc
sub
test
sub
repnz
rolb
add
adc
adc
test
adc
add
mov
pop
call
inc
mov
add
orb
test
lret
dec
jo
sbbb
orl
lock
mov
add
rorb
jae
push
repz
lret
pop
cmp
iret
adc
clc
adc
stos
push
stos
clc
mov
xlat
xorl
push
add
push
les
adcb
cmp
hlt
mov
pop
xorb
adc
inc
cmp
push
lock
dec
dec
shlb
mov
lock
and
pusha
adc
out
outsl
pop
mov
rorl
testb
inc
add
pop
dec
ljmp
or
add
int3
out
loope
das
xor
xchg
xor
or
es
push
loopne
jno
imul
or
bound
mov
cwtl
jb
or
add
inc
inc
sub
jmp
sub
addb
mov
sub
inc
mov
or
pop
add
adc
loopne
sbb
iret
jo
jecxz
pushl
xor
push
push
loope
out
loopne
call
jmp
orb
push
aas
pop
adc
mov
lcall
push
push
inc
cwtl
mov
pusha
inc
divl
adc
or
sbb
mov
fwait
dec
mov
or
sbb
xchg
pop
mov
in
roll
push
adc
lcall
adc
fcompl
jp
push
movsl
adcb
mov
iret
sahf
adc
mov
cwtl
xchg
jp
jno
out
dec
cmpsb
out
dec
mov
aas
inc
loopne
pop
mov
pop
cld
pop
add
add
push
sbb
push
sbb
push
jae
insl
addb
sbb
movsb
adcb
or
movaps
addb
or
pop
sub
dec
fwait
shll
mov
inc
call
loopne
jno
out
into
fsubrs
insb
fs
mov
pop
xchg
movsb
pop
fildl
adc
stc
cmp
push
lods
cmpsb
lret
jle
jno
push
mov
push
and
xchg
jns
call
or
mov
test
scas
or
sub
rorb
outsb
test
inc
xchg
rorb
cmpsl
mov
and
dec
adc
or
imul
adc
ja
lret
mov
outsl
clc
pop
test
inc
inc
push
scas
negb
adc
test
nop
mov
test
jo
cli
loopne
or
cmpl
xchg
jae
xchg
lods
std
ljmp
bound
adc
pop
and
sbbb
and
or
inc
push
pusha
xchg
pusha
sbb
test
pop
or
or
rol
pop
cwtl
adc
adc
movsl
insb
insl
sub
prefetch
cld
adc
mov
repnz
inc
push
jb
insb
dec
adc
dec
rcrl
addl
bound
packsswb
pusha
adc
out
or
and
test
nop
jns
fcomip
or
bound
and
adc
adc
lods
fisubrl
in
sarb
pop
or
cld
cli
sub
pop
or
mov
lahf
and
nop
sbb
fwait
lods
mov
test
mul
pop
add
insl
fsts
dec
adcb
push
add
push
mov
push
add
and
sbb
testb
ds
sti
bound
push
or
stos
add
mov
inc
jmp
inc
dec
or
cmp
xchg
add
shlb
and
nop
xor
mov
jg
stc
rcrb
mov
inc
cmp
fs
popl
cmpsb
pop
punpcklbw
test
popa
nop
inc
mov
in
fwait
add
jb
call
out
push
adc
or
icebp
or
inc
push
adc
or
add
ret
addl
roll
jns
lret
mov
push
test
lret
aas
pop
push
adc
aaa
or
push
sbb
mov
mov
jb
pop
nop
jnp
daa
adc
fimuls
shlb
clc
dec
imull
ficoml
pop
add
call
call
cmp
jecxz
inc
dec
and
mov
xor
pop
imul
pop
or
and
mov
jnp
cld
clc
cld
insl
loope
xor
add
mov
shl
es
mov
clc
rolb
jle
ljmp
or
mov
adc
adc
or
push
gs
out
xor
add
test
add
lret
sbb
pop
loopne
std
sbb
sbb
popa
sbb
rorl
and
mov
popf
xchg
cs
insl
add
pop
mov
jne
in
or
cli
cmp
and
push
dec
pop
sti
xor
push
add
test
and
icebp
cld
push
jnp
mov
pop
inc
inc
and
push
push
and
mov
pop
sbb
ficoms
cmp
jo
mov
jp
add
lds
push
push
and
fnclex
add
and
push
push
or
dec
into
dec
ds
jns
sub
shlb
ja
repnz
add
icebp
jg
or
xor
xor
inc
adc
adc
loopne
fbstp
push
and
inc
push
push
jg
push
bound
sti
xor
pop
enter
mov
rcll
nop
inc
sbb
loopne
and
jp
shlb
pushf
aam
das
xor
pop
rolb
ret
mov
dec
sub
push
pop
movsl
sbb
add
inc
les
xchg
loope
add
jg
mov
or
inc
test
push
xor
das
push
outsl
xor
sbb
push
fbstp
xor
incl
aad
lock
dec
sub
repnz
sbb
jo
in
stos
jmp
xor
hlt
pusha
push
pop
movsb
fxsave
movsb
sbb
mov
mov
dec
pop
add
call
and
into
aas
out
pop
push
or
pusha
sbb
mov
lock
mov
xor
pop
push
jno
sub
addl
cmp
mov
or
jns
mov
mov
adc
out
jae
repz
sbb
lret
push
mov
jnp
or
add
sbb
aas
add
aas
inc
icebp
mov
ror
daa
rclb
jbe
sub
shlb
test
aas
cld
ljmp
mov
mov
add
xchg
or
rcrl
outsl
nop
sbb
cs
lods
cli
cmp
fcomip
cmc
nop
or
into
xchg
loope
add
pop
ret
stos
cmpsb
bnd
inc
loopne
out
pop
adc
cs
incl
push
movsb
sub
sar
and
jecxz
mov
rclb
cmp
mov
add
mov
inc
adc
inc
adcb
jg
dec
shlb
add
je
add
sbb
ret
cld
call
push
add
insl
push
pop
sbb
add
sbb
mov
pop
push
dec
inc
les
std
jl
hlt
inc
out
lcall
mov
or
out
pusha
xchg
ljmp
sbb
adc
and
push
testl
adc
dec
je
mov
xor
outsl
cli
or
pop
movsb
or
mov
xchg
leave
nop
pop
jge
movsb
ljmp
push
xor
out
int3
push
add
inc
adc
cmp
sub
fistpl
or
push
push
or
adc
pop
and
inc
daa
add
iret
jb
lock
inc
add
rolb
add
pop
mov
bound
dec
cmp
in
fucomi
test
pop
and
jo
test
inc
inc
adc
test
out
and
push
pop
jo
xor
mov
pop
mov
mov
push
push
sub
push
das
add
mov
aas
push
out
fdiv
in
add
call
in
dec
add
rcrb
sbb
jbe
cmp
xor
frstor
push
icebp
pop
lock
clc
clc
mov
incl
or
mov
xor
and
push
arpl
icebp
adc
inc
pop
daa
test
in
fwait
hlt
cmp
sbb
fisubl
or
push
sub
je
push
add
popa
and
xchg
push
sbb
sbb
adc
stc
aas
push
jg
popa
ja
psllq
mov
pop
les
mov
and
or
cmc
mov
decl
xor
add
jb
arpl
or
add
pop
mov
sbb
cmpsb
sbb
jbe
repz
xchg
lods
inc
xchg
addb
xor
sbb
add
in
call
add
jne
xor
sbbb
add
add
loope
mov
xor
pop
shll
insb
mov
cs
cld
pop
pushf
inc
cmpsl
xor
jbe
inc
mov
add
sub
adc
insb
ja
sub
into
les
mov
cmpsl
jg
inc
out
sub
add
out
and
pusha
adc
or
push
xor
add
pop
mov
add
test
ja
adc
jmp
mov
dec
cmpsl
inc
cmp
les
jbe
aas
sarb
div
push
xchg
std
aaa
push
rorb
or
enter
pop
cld
clc
or
and
mov
push
push
test
cli
aaa
inc
rcrb
rolb
add
sti
xor
insb
inc
insl
pop
sub
es
ss
cwtl
and
inc
mov
rclb
inc
mov
xchg
cmp
add
in
and
sbb
add
les
mov
add
xor
and
jg
adc
or
xor
movsl
cs
adc
sbb
imul
adc
loope
push
sub
lods
sub
mov
mov
outsl
xchg
add
cmp
sbb
adc
sti
sbb
insb
add
das
add
push
jb
and
das
mov
and
mov
xchg
cmp
ja
dec
test
add
xor
test
mov
insl
daa
dec
jg
test
clc
lea
add
movsb
pop
add
filds
mov
and
adc
fisubl
andl
push
clc
jp
inc
mov
mov
out
sub
out
dec
in
sub
sbb
adc
test
and
cmp
jno
int3
xchg
sbb
cwtl
bound
cmc
clc
cmpsb
addb
add
iret
popl
push
add
rolb
xor
out
sub
add
out
cld
notb
ss
fs
in
subb
push
insb
imul
push
push
adc
test
push
mov
aam
xlat
xchg
out
nop
jo
jb
mull
inc
out
test
xor
sub
or
sub
das
push
sub
imul
dec
jo
enter
sti
orl
int3
or
sub
adc
pop
in
dec
loop
popa
cld
push
push
mov
push
sarb
xor
sub
push
clc
xor
push
mov
insb
das
aas
enter
cwtl
mov
seto
xchg
or
or
or
popa
xchg
dec
xchg
lcall
adc
push
sarl
add
pop
pop
adc
add
jl
xor
cmp
jb
pop
mov
xchg
jl
outsl
push
mov
add
ret
sbb
sub
jb
push
add
outsl
aam
pop
pop
sti
pop
mov
ret
out
dec
add
or
lret
adc
xor
mov
push
inc
rclb
xchg
cmpb
push
out
inc
ss
add
or
push
outsb
mov
cli
xor
push
insl
and
jae
nop
pop
inc
push
and
mov
adc
mov
or
add
rorl
repz
cmp
xchg
and
push
roll
jns
cli
testb
add
ljmp
out
ds
sub
fnstsw
inc
or
in
and
test
and
in
sbb
leave
xchg
adc
sbb
add
orl
rcrb
pop
mov
pop
adc
sub
nop
sub
shrb
push
ss
imul
repz
push
out
lods
shlb
sbb
or
or
adc
inc
and
insb
mov
repnz
cmp
loope
sub
pop
loopne
push
mov
outsl
cmpl
sti
orb
dec
test
and
push
mov
loopne
xor
rcrl
lods
mov
xor
and
mov
sub
fs
ficomps
imul
pop
leave
mov
cmp
push
rcll
movsl
and
movsl
push
adc
push
push
imul
pop
add
dec
ret
data16
addb
sahf
push
cmp
sub
and
inc
push
popf
imul
add
mov
sbb
mov
in
ja
sub
ja
loopne
inc
ja
pop
dec
sbb
add
hlt
inc
dec
sub
jae
int3
insl
pop
imul
fstl
push
inc
inc
xchg
dec
adc
mov
ficompl
rcll
push
mov
mov
add
adc
jae
fldenv
pusha
or
mov
dec
adc
andb
push
sbb
push
pop
add
mov
ja
xlat
inc
pop
mov
or
adc
cmpsb
inc
pop
push
aas
inc
add
sbb
xor
push
and
adc
out
mov
dec
inc
cmpsl
mov
xor
rorb
push
mov
mov
insl
cld
inc
inc
pop
mov
scas
scas
rcrb
mov
push
and
bound
push
test
sub
add
in
dec
add
mov
dec
clc
or
jb
lret
ja
cmpsl
cmpb
ljmp
push
inc
addr16
mov
xor
insb
xor
mov
xor
push
mov
or
push
mov
sarl
mov
out
xchg
cmc
gs
rolb
push
and
push
loopne
int3
mov
aad
xchg
inc
inc
push
and
cld
mov
jo
add
push
inc
sub
inc
sub
sub
xchg
addb
pop
push
bound
xor
shr
pusha
add
rorl
add
push
out
into
push
adc
add
loopne
nop
or
pop
xchg
pop
daa
mov
test
lcall
sub
adc
bound
inc
adc
push
add
aas
pusha
call
lock
cmc
xchg
inc
sub
mov
mov
cmc
mov
les
in
mov
mov
sub
and
sub
inc
jle
push
repnz
push
sbb
cmp
pop
cmc
lahf
test
inc
xor
add
inc
jmp
inc
mov
pop
inc
stos
ss
mov
push
rolb
pusha
loop
enter
and
and
and
push
filds
in
cmp
sub
sub
arpl
icebp
pop
rorb
dec
shrb
pop
aam
jns
inc
jl
push
push
or
mov
mov
clc
mov
int3
out
fs
mov
mov
pusha
aaa
pop
loopne
cli
pop
lods
add
psubusb
xor
or
push
orb
xchg
mov
aaa
lock
add
xor
or
dec
mov
out
orb
adc
push
inc
xchg
mov
cmovo
insb
push
es
add
push
aaa
fsts
std
lahf
hlt
and
bound
dec
and
out
mov
int
mov
mov
add
les
add
cmp
push
lcall
bound
or
push
lock
adc
aam
pop
mov
add
sbb
test
adc
sbb
or
nop
adc
xor
sbb
mov
or
jle
dec
out
add
inc
sbb
lcall
and
insb
repz
mov
adc
shlb
sbb
sahf
xchg
test
ret
adc
dec
adc
ret
mov
or
int3
add
push
cli
adc
rolb
xor
movsb
je
pusha
dec
xor
repz
or
xchg
js
cli
shrb
add
int3
push
fs
das
add
and
xor
cld
push
push
add
inc
sub
adc
nop
and
mov
inc
xchg
jb
inc
jecxz
push
mov
pop
hlt
loopne
inc
jae
pop
test
adc
ds
sbbb
xchg
adc
inc
pusha
call
pop
cmp
loop
xor
push
cli
fbstp
shlb
or
lods
test
or
cmpsl
mov
cs
mov
ljmp
clc
aaa
out
scas
jno
mov
cld
push
push
add
adc
ficoml
adc
loop
nop
clc
add
inc
jle
and
adc
lcall
scas
xor
inc
icebp
xor
aaa
add
pop
xchg
xor
push
ds
adc
out
jo
test
adc
inc
mov
inc
adc
mov
out
jo
pop
cmp
stos
pop
out
xor
inc
jns
ds
and
mov
pop
ljmp
sub
sbb
or
pop
subb
adcb
call
int3
shrb
push
popl
and
xchg
scas
dec
loope
or
inc
mov
test
inc
sub
popf
loope
push
lock
mov
shlb
push
push
push
ret
and
mov
pop
adc
inc
pop
dec
das
nop
or
aas
mov
addb
or
inc
imul
mov
outsl
outsb
add
and
inc
adc
or
popa
insl
add
xorb
aaa
push
or
or
xor
lods
rolb
jbe
fwait
out
xorb
push
sub
adc
push
inc
js
icebp
clc
push
push
pop
pusha
push
xchg
je
sbb
or
add
add
xor
push
bound
test
push
sbb
pop
push
and
and
movsb
pop
cmp
fiadds
adc
mov
aaa
xor
xor
inc
call
out
loope
aam
push
add
out
fimull
das
out
sbb
mov
andb
popa
pop
sub
and
sub
inc
mov
mov
pop
lret
mov
mov
or
inc
pop
add
or
loope
add
xchg
add
mov
cmpsb
sub
and
sub
ds
inc
mov
dec
inc
je
adc
andb
and
add
xchg
push
and
cmp
mov
sbb
or
cld
das
mov
add
out
or
das
roll
sub
and
subl
lock
jecxz
push
test
int3
mov
cmp
clc
out
fucomip
add
push
push
aam
add
push
xor
pop
insl
jne
sbb
jb
inc
clc
fwait
jl
add
xchg
or
adc
in
in
mov
inc
hlt
insb
mov
filds
mov
shll
mov
mov
jl
push
push
inc
xor
or
mov
adc
adc
addb
mov
push
push
push
xor
call
inc
sub
push
inc
add
sub
and
or
and
xchg
bound
stos
ljmp
xchg
sbb
test
add
jo
and
dec
inc
dec
lods
inc
repnz
adc
loop
jo
inc
dec
lcall
rolb
sbb
push
push
andl
stos
mov
push
xor
sbb
ja
xor
cmp
adc
sub
push
aaa
in
cmp
incl
loop
add
pop
sarl
inc
xchg
sub
add
jbe
or
adc
add
out
jbe
jp
fimull
loop
push
ljmp
inc
je
add
adc
push
pop
push
push
add
jnp
inc
rorl
loopne
rcr
pusha
movsb
push
and
mov
loopne
dec
dec
adc
mov
cld
push
push
ss
jle
ss
das
mov
mov
jno
sub
mov
push
nop
xor
xor
enter
rolb
xor
test
xchg
insb
sbb
inc
sub
adc
in
or
mov
dec
bound
mov
xchg
xor
das
inc
shll
out
xor
loope
cmpb
and
nop
loope
push
xchg
mov
adc
aad
sub
jmp
or
in
arpl
adc
pop
mov
shll
movsb
das
xlat
pop
loopne
pop
out
movsb
fld
imul
push
outsl
sbbb
cmpsl
and
ficompl
stos
scas
add
ss
xchg
cs
mov
and
add
cli
stos
dec
lock
or
inc
xchg
or
aam
ds
xlat
lods
addb
loopne
xchg
cs
mov
sbb
data16
pop
mov
inc
adc
insb
pop
pop
push
add
lcall
aam
loopne
sbb
arpl
sub
pop
sahf
daa
xchg
add
pop
or
sbb
add
adc
sub
mov
sub
in
daa
jo
jg
andl
or
pop
in
adc
jecxz
mov
lcall
cmp
mov
add
or
pusha
jae
dec
sub
and
inc
jae
add
add
add
movsb
loopne
dec
inc
insl
push
jno
and
adc
nop
dec
jae
dec
adc
jo
icebp
sub
mov
push
in
cmpsb
popf
clc
and
inc
or
sbb
hlt
enter
or
xchg
rorl
cmp
jg
pop
call
out
add
outsb
stc
and
cmp
loop
jb
jae
popa
cmp
push
adc
outsl
ret
test
mov
or
pop
arpl
adc
add
jl
rolb
push
pop
std
mov
and
and
ret
and
adc
mov
ficompl
insb
pusha
subl
fisubrl
push
nop
es
mov
jo
mov
das
andb
add
dec
or
and
add
mov
mov
outsl
ret
push
jo
adc
jp
outsl
sub
insb
addb
sbb
or
dec
pop
xchg
and
stos
in
nop
sbb
call
dec
adcb
test
push
mov
loopne
push
stc
out
sbb
sub
lods
sbb
add
sub
test
rclb
add
pop
inc
sub
mov
add
adc
pushf
out
sti
ljmp
sarb
shlb
call
ret
popa
add
add
add
push
xor
jno
or
incl
adc
lcall
nop
out
dec
lock
add
inc
mov
sbb
test
loopne
nop
mov
xchg
test
sbb
ficoms
add
and
pop
insl
lock
inc
push
cld
les
inc
andb
jmp
xor
inc
or
lret
insl
mov
daa
add
pop
inc
add
and
push
std
fistpll
push
or
sbb
and
add
lods
add
and
loop
shrl
add
test
stos
ljmp
xchg
mov
inc
cmpb
ljmp
rorb
aaa
roll
add
push
mov
jl
xor
adc
xchg
orl
push
xchg
ret
fdivs
aaa
add
sbb
or
cld
mov
mov
inc
add
add
lret
pushf
dec
loopne
idivb
add
jbe
push
mov
and
pushl
xorl
andb
mov
adc
and
add
imul
les
mov
push
add
or
push
pop
insl
je
push
insl
loopne
test
add
push
inc
push
xchg
inc
push
inc
sub
lds
test
and
jo
mov
push
add
push
and
pop
or
mov
testb
aas
rorb
add
clc
loopne
add
clc
stos
aam
test
fs
scas
add
movsb
sub
mov
adcl
and
mov
stos
decb
mov
jae
inc
add
and
push
outsb
inc
dec
push
addb
push
adc
add
pop
push
mov
ret
or
or
sub
jp
pusha
dec
adc
test
pop
les
gs
adc
adcl
or
adcb
xchg
add
arpl
add
js
push
or
cld
push
push
push
decl
ret
sub
pushf
int
jb
into
add
xchg
fbld
cli
push
inc
add
ds
xchg
add
aaa
loopne
jne
and
push
cmpsl
mov
das
push
push
out
add
out
add
and
mull
jns
outsl
icebp
loopne
and
add
outsl
mov
insl
inc
lock
or
shrb
fisttps
fistpl
inc
inc
mov
mov
mov
lock
mov
out
sub
jo
jae
cmp
pusha
mov
pop
push
mov
out
inc
mov
mov
jecxz
push
lret
pusha
arpl
dec
sahf
stos
add
push
inc
jb
fdivp
call
and
sub
push
add
adc
fsubr
idivb
push
adc
or
rolb
push
cs
sbb
pop
mov
outsl
clc
add
pusha
xor
add
inc
jb
cld
add
arpl
test
pusha
cmp
xor
jb
adc
sub
and
subl
cwtl
mov
les
je,pt
mov
add
inc
and
inc
push
mov
mov
inc
rorl
roll
push
dec
es
fisubs
subl
cmp
inc
add
fisubl
jmp
rorb
aad
mov
and
and
adcl
test
sti
push
push
push
roll
xor
or
push
jbe
adc
cs
out
add
fdivr
fwait
inc
je
rorb
jmp
cmp
xor
fmuls
mov
sub
mov
nop
cmc
dec
faddl
adc
dec
or
and
std
int
pop
cli
jnp
add
push
adc
add
sub
loopne
incl
jo
add
mov
add
clc
mov
inc
stos
adc
push
push
push
rcll
lahf
dec
push
cmp
call
pop
push
ss
or
imul
dec
and
lods
in
mov
cmp
lods
outsb
movsb
pop
or
sub
popf
adc
adc
rolb
add
push
popa
subl
shlb
sbb
push
sub
popa
fcmovbe
test
cmp
add
pop
or
rclb
xor
clc
or
adcb
push
mov
fidivrs
out
call
jg
lock
fdivl
xor
inc
lock
dec
pop
nop
add
pop
adc
aam
adc
pop
mov
sub
push
in
inc
add
add
push
int3
or
and
loope
mov
out
inc
lock
add
add
push
pop
xchg
hlt
add
aas
add
xor
out
mov
popa
cmp
xchg
jb
pop
rolb
les
mov
mov
orb
pusha
inc
dec
mov
inc
jbe
push
pop
in
loop
adc
jg
sarl
pop
lock
dec
sbb
add
or
inc
inc
and
add
xor
mov
pop
mov
pusha
mov
call
add
adc
adc
out
out
inc
jbe
sbb
and
inc
add
and
add
enter
inc
jecxz
in
jb
nop
mov
jae
jb,pt
jno
mov
pop
and
pop
push
add
jae
inc
sub
jg
pcmpeqw
add
sbb
jae
sbb
aaa
or
jle
xor
jae
jp
or
adc
arpl
add
in
ret
sub
inc
mov
inc
sbb
cld
add
mov
ret
inc
adc
test
sbb
jg
push
xchg
roll
lods
rclb
stc
mov
pop
or
cmp
decl
push
sbb
je
sbb
mov
xor
inc
cs
stos
loop
add
xor
hlt
in
ljmp
and
or
push
shl
cmc
out
xchg
ret
xor
inc
dec
jle
sub
add
add
mov
lock
shlb
sbb
add
sub
inc
sbb
adcb
imul
cmp
or
or
inc
mov
loop
es
fdivs
jl
stc
add
and
out
andb
add
sahf
lods
ret
sar
leave
cmp
jp
mov
cmp
and
aam
lret
sub
clc
add
mov
xor
or
mov
inc
xor
in
aaa
shll
scas
adc
sub
mov
add
sbb
js
add
rcr
sbbb
bound
arpl
test
out
or
add
add
popa
add
push
shlb
jmp
cmp
and
mov
mov
adc
jb
sub
rorb
and
ja
cmp
fisttpl
mov
add
jnp
push
mov
jp
loopne
roll
push
inc
loopne
pop
lds
xchg
incb
jo
sbb
mov
nop
and
ret
xchg
decl
cmp
xchg
or
xchg
mov
jno
add
xor
xor
test
mov
push
push
fidivrs
out
loopne
nop
pop
xor
fists
pop
movsb
push
add
mov
adcb
or
lock
push
or
dec
push
and
inc
out
mov
mov
clc
mov
fisttps
sub
nop
popa
xor
push
jg
ljmp
sbb
jne
adc
divl
add
cld
or
out
scas
nop
and
into
les
add
add
loopne
rcl
inc
cmp
mov
mov
adc
lods
jb
mov
mov
add
sbb
cmpsb
xchg
lret
push
aam
mov
pushl
xor
xor
mov
popf
movsb
xchg
mov
and
rcl
mov
addb
or
rolb
sub
nop
pushf
inc
lock
add
fwait
lods
mov
shll
inc
add
pop
push
dec
add
aam
mov
sbb
push
pusha
xchg
cmp
mov
out
loop
inc
xor
pop
xor
pop
fildll
xor
add
mull
int3
aas
add
dec
mov
mov
inc
inc
nop
dec
nop
or
jg
sub
dec
lock
addl
and
test
push
pop
rcrl
cmpb
sbb
lock
push
or
ficompl
rclb
stos
out
ljmp
add
jbe
lock
jae
popa
inc
add
in
xlat
int
inc
sbb
push
dec
mov
js
and
cmp
jb
push
insl
inc
cltd
clc
aaa
xor
pop
jo
out
add
add
les
jae
xorb
cmovs
push
mov
add
test
pop
add
cli
mov
and
ret
jo
js
add
aaa
loope
in
fs
clc
mov
jae
jmp
cmpsb
mov
pop
xor
es
les
sbb
mov
xchg
mov
loopne
std
imul
push
popa
pop
inc
add
jb
rcr
mov
fsubrs
xor
pusha
sarb
pop
stc
or
rcl
or
lods
push
out
dec
mov
ja
scas
loopne
mov
push
pop
adc
fsub
inc
mov
cmp
mov
or
mov
fmul
ja
push
ds
jb
mov
dec
xchg
jmp
in
sbb
test
mov
mov
data16
jge
nop
out
ljmp
into
hlt
mov
pusha
lds
mov
adc
pop
push
jo
fsubp
inc
xchg
pxor
cmpsb
stc
clc
add
fnsave
add
xchg
xchg
add
mov
jge
loopne
fcmovbe
xor
repz
sbb
clc
dec
std
incl
out
pusha
das
mov
divl
xor
sbb
movsl
sub
pusha
or
push
add
insl
test
mov
rsm
inc
inc
ds
test
stos
add
mov
mov
ljmp
movb
jbe
mov
insl
daa
rolb
mov
sub
arpl
es
inc
jp
pop
jb
and
lret
xor
out
jmp
sub
push
out
push
repz
add
jne
mov
xor
lds
add
xor
test
xorb
push
push
sub
xchg
and
fsubrs
stos
adc
fadd
add
fs
psraw
push
add
inc
jne
push
add
add
and
pusha
sub
pop
addb
addr16
aad
or
dec
nop
jno
es
or
mov
sbb
xor
dec
andb
sub
das
loopne
aam
or
or
sbb
adc
sbb
orb
mov
sahf
sbb
in
xchg
add
pop
sub
pop
xchg
add
xorl
mov
inc
repnz
inc
cld
data16
dec
fwait
mov
pop
xchg
push
testb
pop
push
fisubl
mov
into
cmp
add
in
mov
lods
adc
inc
add
inc
adc
inc
pop
pop
xchg
push
add
dec
dec
rcrb
loopne
fsubl
or
adcb
push
mov
sbb
int3
and
into
mov
in
mov
jne
cmpb
inc
and
data16
push
xor
mov
lods
pop
rcll
or
adc
aam
mov
jb
and
fisttpll
jb
or
cmp
sub
rorb
push
inc
add
movl
jns
in
and
sub
mov
pop
pop
aaa
idivb
mov
inc
sbb
pop
add
adc
xchg
outsl
jb
push
in
adc
push
xchg
xchg
lret
cld
add
dec
aam
ret
add
sbb
rorl
shl
shrl
addl
and
jmp
xchg
xorb
orb
sbb
pop
and
movsb
mov
push
rclb
imul
popa
jle
std
add
mov
nop
dec
and
cs
lahf
dec
cmpsl
cmp
test
inc
dec
inc
mov
or
jg
dec
lahf
and
addl
pop
add
push
xchg
enter
sub
fimuls
dec
jecxz
and
aam
add
pop
inc
lods
lcall
add
mov
push
mov
mov
repnz
sbbl
sub
or
adc
push
add
and
xlat
enter
movsb
lods
mov
rorl
flds
xchg
sbb
orb
jbe
dec
ret
dec
or
addr16
inc
rcl
inc
ja
push
cmp
jle
adc
insb
mov
fwait
subb
outsl
mov
mov
xor
inc
mov
out
add
aaa
enter
push
push
adc
xchg
enter
add
mov
and
push
dec
inc
or
mov
or
xchg
not
and
and
ljmp
cli
push
mov
push
and
in
bound
inc
xor
outsl
aaa
test
test
mov
add
inc
les
jl
jo
adc
xchg
inc
inc
paddd
pop
or
ret
or
and
inc
push
adc
pop
mov
in
mov
adcb
jae
ja
in
das
rorb
jns
outsl
add
add
and
xor
ret
cli
add
clc
xchg
hlt
cwtl
sbb
inc
loopne,pt
adc
inc
je
or
sbb
and
loope
inc
xchg
out
push
sbb
mov
adc
inc
adc
adc
incb
xchg
dec
add
jle
sub
sbb
cmp
xor
mov
xor
add
mov
jae
lea
inc
sbbb
insl
push
aad
cld
repz
stc
mov
sbb
std
adc
aaa
add
inc
sub
adc
pop
mov
adc
fwait
mov
iret
pusha
jg
iret
and
mov
loopne
add
jb
popl
scas
add
mov
sub
in
pusha
adc
pop
insl
repnz
ljmp
lret
lods
sar
loopne
sub
cmp
loopne
and
sbb
adc
rcll
or
repnz
adc
sub
mov
adc
push
insl
push
incb
add
je
mov
xor
jg
adc
and
or
add
cmp
fbld
add
push
pop
loop
insl
cmp
cmpb
dec
sbbb
push
push
out
mov
andl
loopne
into
xchg
pop
sarb
sub
outsl
add
popa
xor
inc
xor
cmp
sub
lea
in
rolb
notb
jg
pop
aam
mov
xor
cli
adc
adc
clc
insb
adc
add
push
rorb
aas
lods
mov
or
jb
add
adc
dec
xchg
mov
aas
pop
inc
jno
fstpt
addl
bound
inc
mov
add
xor
test
imul
hlt
and
jb
inc
jge
dec
mov
mov
adc
out
dec
dec
push
and
aam
addl
add
sbb
data16
movsb
sbb
rol
mov
stc
inc
jmp
mov
es
cmp
push
lea
xchg
aam
inc
pop
mov
jbe
adc
xor
add
hlt
imul
dec
movl
pusha
add
xorb
sti
lcall
in
and
subl
imulb
inc
push
jae
aas
mov
dec
pop
and
int3
cmp
add
enter
xor
push
inc
and
out
imul
sbb
inc
jo
push
cmp
insb
dec
push
ret
sbb
and
rclb
aam
push
jg
push
rcrb
adc
ja
aas
outsb
dec
or
xchg
xor
clc
xchg
subl
mov
cli
mov
push
add
push
add
pop
nop
dec
sbb
inc
fiaddl
fiaddl
and
push
mov
mov
xor
inc
or
das
ret
mov
push
and
lcall
out
mov
add
cmc
mov
or
lds
push
sarb
mov
je,pt
push
mov
pop
pop
dec
imul
adc
outsb
adc
clc
inc
shrb
jae
iret
cli
aaa
enter
push
push
adc
andl
or
pop
jle
xor
mov
rclb
push
lcall
mov
pop
orb
push
mov
push
rcrb
sub
filds
aaa
add
sbb
inc
jo
cmp
test
lock
and
leave
clc
xlat
cwtl
dec
repz
push
mov
cmp
jo
push
push
push
icebp
sar
mov
push
xchg
add
pusha
inc
subb
sbb
or
pop
add
fs
outsb
jg
aas
inc
mov
sub
shrb
adc
add
inc
cmp
fs
cli
adc
out
popf
rcrb
mov
sar
mov
das
adc
das
pushf
and
imul
or
jb
shl
dec
les
jo
jne
adc
lock
mov
mov
adc
push
out
add
stos
fmuls
dec
sbb
or
pop
movsb
push
fidivrl
sbb
out
inc
inc
sub
sbb
sub
jg
out
xchg
pusha
pop
int3
dec
sub
sub
decl
adc
xchg
and
lock
cmp
dec
push
pop
inc
mov
sub
pop
cmp
add
adc
dec
jmp
lock
push
sbb
lock
sub
sbb
lcall
jb
mov
nop
add
jo
cli
adcb
and
movsb
fidivrl
cs
test
pop
sbb
dec
andl
xchg
outsb
adc
or
push
jg
mov
mov
or
test
loopne
or
decl
adc
or
mov
out
ds
stos
jle
dec
cli
adc
xor
mov
mov
outsl
adc
xor
sbb
ror
out
xchg
je
jo
int
sbb
and
mov
pusha
jp
sbb
shll
add
or
xor
add
mov
push
jl
or
out
jb
add
je
or
es
inc
jl
in
and
out
mov
push
jmp
orl
lcall
xor
adc
call
mov
mov
jns
sbb
jns
lcall
pop
push
jbe
push
jo
jp
cli
fcoml
jecxz
add
mov
dec
inc
add
lret
add
scas
pop
rolb
xor
or
stos
jmp
daa
pop
out
pop
push
xchg
ficoms
sar
dec
sub
push
and
subl
pushf
mov
mov
cmp
mov
xorb
jno
sahf
lock
add
aam
jae
insl
pop
mov
xchg
cmpsb
jae
add
lods
mov
shrb
addl
cmp
mov
ss
mov
pusha
scas
aam
pop
test
add
jo
push
jmp
jae
xchg
sbbb
add
fisubs
dec
or
and
adc
sbb
icebp
scas
push
mov
add
loope
pop
test
rclb
add
mov
stc
xor
push
lds
pop
adcb
outsl
adc
jae
pop
or
pop
outsl
mov
pop
add
cs
idiv
dec
out
sub
and
xor
mov
out
and
mov
push
push
xchg
subb
mov
popa
imul
xor
mov
test
andl
mov
sub
mov
clc
xor
xchg
jb
pop
or
push
xor
and
lret
and
add
in
adc
mov
and
in
or
pushf
scas
rcll
pop
incb
xor
cmpsl
lods
xor
in
shlb
fwait
in
mov
add
ja
cmpsb
aaa
sbb
jo
or
das
cmp
jg
loopne
add
call
xor
and
or
out
stos
ret
into
pop
nop
xor
cmp
xorb
adc
mov
rorb
jo
rol
decl
rcrb
mov
cld
or
push
dec
mov
and
repnz
pop
xor
rcrl
or
movsb
push
xchg
sarl
or
xchg
cmp
cmp
rcl
push
pop
fs
mov
mov
mov
pop
loopne
push
dec
jmp
lock
cwtl
mov
xor
ret
movsb
lock
add
adc
mov
and
mov
xor
out
or
and
push
xchg
adc
in
mov
sti
movb
sbb
jl
adc
inc
pushf
mov
jmp
loopne
scas
movsl
add
jb
sub
mov
stos
push
add
xchg
jae
or
pop
insl
jmp
adc
add
ja
addr16
roll
sti
out
adc
mov
jmp
ret
xor
adc
lock
and
out
xchg
and
mov
xor
add
orb
sbb
adc
add
lea
push
inc
test
pusha
jnp
stos
fdivrp
jo
es
and
pop
mov
roll
insb
dec
mov
cld
add
lret
ret
adc
aaa
in
sub
dec
add
outsl
push
jl
xor
and
fiadds
testb
mov
sti
inc
or
add
mov
and
push
fdivrs
pushf
shrb
add
jp
pop
adc
and
add
xchg
and
movsb
add
add
add
push
inc
test
adc
sub
js
push
xchg
cmpsb
frndint
mov
cmp
xor
inc
lea
jp
stos
add
sub
scas
jbe
mov
ds
mov
and
jp
inc
add
add
pop
pop
push
add
bound
lock
dec
adc
add
jp
cwtl
jnp
or
enter
inc
cld
gs
bound
push
pop
dec
jl
jg
test
std
adc
pop
daa
out
adc
add
ja
mov
ret
or
inc
sarb
ds
scas
inc
stc
add
or
sbb
sub
add
andb
repnz
push
movsb
decl
add
xor
mov
adc
loopne
add
adc
loopne
xor
lock
pop
and
loope
mov
stos
add
fdivr
or
pop
xchg
lret
add
mov
fcomip
nop
sub
mov
inc
adc
inc
stos
jo
fiadds
sub
out
and
outsb
jle
inc
and
flds
dec
mov
or
sbbb
out
aam
and
out
push
pop
pop
or
mov
shr
pop
push
cmpb
inc
fs
inc
sub
xchg
aaa
andb
jmp
hlt
cmp
movb
jle
jo
repnz
or
xor
jbe
sbb
xchg
fs
xor
xor
roll
mov
adc
subb
inc
outsb
ljmp
mov
ret
inc
add
jecxz
add
addb
cmpl
btr
adcb
add
dec
adc
adcl
or
jle
sub
add
mov
orl
sbb
inc
dec
add
pop
loope
out
add
add
js
lock
push
cmpb
mov
adc
fldt
xchg
sub
adc
sbb
lahf
add
push
and
leave
lock
or
cmp
mov
stos
clc
js
enter
rol
jg
adcb
push
and
mov
push
dec
test
push
hlt
inc
lods
push
ds
cld
sti
push
sbbl
sbb
sbb
push
adc
es
or
movsb
inc
sub
int3
clc
test
loope
ret
scas
pusha
subl
jl
add
add
pop
test
pop
add
or
mov
push
sub
add
ljmp
push
cmp
xor
add
cmpb
pop
jle
cmp
push
shrb
adc
inc
xor
sbb
out
sti
mov
orb
clc
or
push
or
push
aam
test
mov
add
xor
mov
out
or
cs
ret
mov
js
inc
add
insl
cmp
hlt
pusha
mov
adc
cld
cs
push
pop
inc
sbbb
dec
pop
add
pusha
and
cs
push
fiaddl
test
sub
imul
inc
jmp
mov
xchg
mov
into
mov
or
ret
popa
loopne
pusha
imul
aam
inc
push
mov
jo
and
adc
clc
jmp
rcl
pusha
loop
addb
orb
or
and
or
clc
rol
or
push
cld
pop
in
cmp
push
inc
incb
dec
aas
out
cwtl
mov
fsubl
mov
adc
out
and
pushf
dec
pusha
insl
mov
jbe
inc
push
adc
add
sbb
sub
mov
inc
sub
inc
and
shlb
add
call
push
mov
mov
incb
jo
icebp
movsl
push
aad
es
clc
in
add
clc
and
lea
aaa
add
gs
adc
adc
out
sub
insl
or
adc
push
mov
hlt
mov
dec
and
cmp
lret
jne
add
add
mov
rcll
mov
add
scas
jp
xchg
je
ljmp
pop
xchg
xor
or
lods
aaa
xchg
cmpsb
and
push
sarb
push
in
or
aaa
jne
push
cmp
jo
inc
adc
inc
jo
imul
pop
xchg
stos
sub
je
jb
xchg
push
sub
sbb
or
shlb
inc
mov
mov
add
mov
xchg
in
add
leave
scas
or
pusha
adc
sti
pusha
inc
jne
add
icebp
sbb
mov
xor
notl
push
subl
add
push
mov
inc
cmp
fsubrl
pop
gs
pop
dec
test
pusha
pop
jo
mov
cmp
add
mov
iret
add
sbb
cltd
fs
pushl
imul
loop
mov
sbb
idivb
out
jmp
stc
inc
mov
or
inc
push
out
cmp
adc
inc
pop
add
inc
xor
xor
aad
lcall
mov
sbb
inc
enter
or
bound
outsl
add
adc
add
ret
pop
cmp
xchg
sub
or
add
dec
mov
inc
rcrb
loopne
inc
aam
aaa
lea
xchg
add
insb
dec
add
sbb
je
or
sub
lea
add
int
in
jp
icebp
out
popl
cmc
inc
es
mov
lahf
mov
je
shlb
and
push
xor
sbb
jl
mov
dec
insb
lea
iret
inc
adc
jbe
enterw
clc
les
mov
jbe
xchg
jge
pop
xchg
lock
js
gs
aaa
push
aam
lcall
lret
loop
push
and
mov
fs
popl
adc
movsb
pop
popa
xor
les
sub
popa
and
cwtl
mov
pop
mov
leave
loop
or
sbb
roll
jne
jb
push
loop
call
fisubl
outsb
jge
mov
push
or
outsb
aaa
add
sub
les
add
pushw
lock
push
push
imul
sbb
sbb
push
rolb
movsb
push
mov
lock
xchg
sub
jo
enter
push
fbld
mov
or
faddl
movsb
jg
loope
cmc
inc
je
mov
out
sahf
jecxz
pop
or
sar
or
push
add
cli
sub
mov
adc
jbe
lods
dec
nop
ja
popa
dec
std
pop
inc
xor
add
cmp
and
sarb
mov
pop
mov
xchg
cmp
xchg
arpl
aam
mov
adc
mov
cmpl
jle
xor
pop
stos
mov
push
nop
bound
push
clc
jle
add
or
mov
adc
gs
add
subb
call
in
out
ss
or
lcall
jne
xchg
insl
filds
mov
cmp
je
test
push
inc
inc
notl
and
adc
or
mov
cmp
sub
or
add
inc
rcr
popf
pop
and
jb
nop
xor
mov
std
add
or
mov
cmp
inc
xchg
inc
jp
dec
mov
cmp
roll
lcall
scas
push
cltd
enter
pop
lock
mov
pop
sbb
pop
sti
jne
int3
and
push
jb
jne
push
mov
in
and
cmp
add
lahf
push
jno
and
sub
push
add
pusha
nop
insb
jo
mov
inc
rclb
jno
out
subl
aam
cmp
rclb
popl
jle
mov
insl
std
roll
xor
jg
loopne
cmp
out
lods
pusha
sbb
push
xchg
pusha
inc
xor
mov
mov
hlt
inc
rcrb
in
or
sbbl
jg
daa
nop
add
aaa
xchg
add
push
push
movsb
inc
lcall
push
dec
push
push
sbb
imul
dec
jnp
cmpsl
push
mov
jg
jle
out
jnp
xlat
sbb
popa
notl
mov
or
cmpsb
jecxz
stos
pop
push
mov
neg
imul
jg
adc
or
jge
out
mov
adc
add
xor
stos
jecxz
pop
out
mov
clc
xlat
stos
rep
fs
xor
stos
sbb
out
mov
mov
xor
add
add
push
lock
arpl
jge
sti
not
add
push
sub
aaa
mov
sbb
repz
dec
mov
jnp
and
mov
sbb
sti
sti
sbb
xchg
mov
push
divl
push
icebp
icebp
or
into
xlat
xor
popf
enter
mov
jae
into
mov
outsl
sahf
pop
inc
mov
outsl
jno
movsb
push
xchg
add
sbb
lcall
mov
stos
and
sub
ja
inc
mov
shrl
andl
adc
xchg
ret
imul
mov
add
add
incl
sub
fimull
clc
orb
xchg
lods
push
cltd
dec
or
iret
and
add
mov
sbb
pusha
dec
shrl
jae
jb
xor
loopne
test
outsl
dec
mov
lret
in
jg
push
adc
push
inc
add
es
adc
mov
fistl
adc
add
sbb
shrl
addb
add
xor
and
xor
lcall
pop
hlt
mov
out
xor
mov
popa
mov
out
jle
fstpt
ljmp
dec
or
and
mov
ret
notl
clc
mov
repz
mov
sbb
decl
push
inc
fisubs
add
push
sbb
xchg
outsl
push
scas
out
inc
jge
add
mov
and
mov
cmp
jle
ljmp
cmc
or
or
fmuls
pop
adc
in
out
lock
mov
jecxz
imul
or
fisttps
insb
pusha
vmread
xchg
nop
pop
outsl
xor
cli
mov
and
shrl
pop
aaa
pusha
mov
js
popa
add
aam
mov
jo
sbb
cld
andl
mov
sub
clc
mov
mov
and
sbb
aam
xchg
and
inc
cli
negb
mov
pslld
cmp
lods
or
pop
enter
repnz
movsb
push
imul
inc
stos
lret
out
das
xor
mov
pop
push
rolb
lcall
fwait
mov
outsb
repnz
mov
mov
mov
subb
jb
xor
sbb
pusha
mov
or
xchg
fwait
pusha
mov
xor
cmp
mov
call
cli
shrb
nop
or
pop
out
inc
mov
add
mov
inc
cmc
mov
xchg
add
bound
mov
add
push
dec
out
and
jg
add
cs
inc
lea
mov
shll
push
not
adcb
adc
inc
shlb
jo
jl
nop
add
fwait
add
add
pop
adc
sub
mov
inc
outsb
aas
sbb
cwtl
jo
pop
push
adcb
mov
scas
es
inc
push
xchg
scas
xor
sbb
lock
and
xchg
push
loope
push
adc
or
push
push
mov
or
cs
jecxz,pn
sub
andb
push
sbbb
aaa
pop
pop
nop
lods
push
push
out
pop
mov
fs
bound
and
and
cmp
jnp
xchg
jbe
pop
mov
nop
jae
sbb
push
push
cmp
adc
fidivrs
aaa
ret
add
je
add
call
mov
add
inc
dec
fildl
sub
lea
ja
mov
xor
mov
add
gs
mov
add
out
data16
cmp
pop
mov
in
adc
xor
mov
add
mov
add
imul
addl
mov
mov
in
inc
cmp
adc
cmpsb
je
enter
mov
adcb
subb
subb
add
inc
mov
sub
mov
jnp
add
test
jmp
dec
pop
cmpb
imul
fsubs
xor
cli
dec
mov
jo
jae
and
in
rcrb
inc
mov
inc
adc
mov
cli
add
mov
cmp
pushf
out
imul
fldl
jp
inc
lcall
sub
pop
fstpt
adc
loope
inc
push
xor
push
inc
sbb
int
mov
inc
add
dec
mov
or
call
pop
andb
sub
test
lock
orb
adc
and
jae
push
out
mov
adc
out
sub
mov
push
pop
out
scas
inc
hlt
cwtl
sub
xchg
fmull
push
xchg
add
je
pop
or
mov
inc
subb
jb
push
push
adc
test
mov
test
shll
popf
into
stos
xchg
dec
test
movsl
incl
cld
add
or
or
sbb
test
xchg
lods
ds
adc
fwait
push
add
insl
sbb
stos
inc
xor
stos
loopne
out
popf
push
adc
fucomip
xchg
in
es
xchg
test
inc
add
pop
push
push
inc
or
add
je
pop
inc
les
jg
inc
mov
cmp
push
les
imul
xor
aad
inc
push
push
dec
dec
addb
mov
mov
mov
test
mov
and
and
icebp
mov
cmpb
mov
out
mov
cmpsl
ret
lret
dec
cmp
add
mov
aaa
icebp
enter
sub
mov
sar
call
sbb
adc
sub
add
inc
cmpsb
jle
push
subl
in
push
pusha
sub
andb
xchg
test
sub
push
stos
xchg
pop
cli
jg
xchg
ret
rorb
sbb
incl
pop
scas
jp
mov
rolb
jp
loopne
sbb
outsb
push
shlb
adc
cwtl
test
vmovntps
mov
lock
cmp
dec
mov
mov
lret
jg
test
jl
popa
sub
xchg
sub
pop
out
push
push
jnp
jo
loope
xor
fisttps
and
mov
pop
imul
and
in
into
mov
repnz
push
xor
xchg
je
ret
or
mov
test
mov
inc
es
pusha
lea
jb
and
outsl
jmp
pop
punpcklbw
es
mov
loop
or
subl
mov
mov
pushl
xor
and
mov
shrb
inc
and
pushl
sbb
cmp
or
and
mov
push
movsl
and
movsb
and
ss
jno
sbbl
lea
in
jmp
sti
add
out
outsl
ljmp
sbbl
and
mov
sub
out
movsb
int3
fsub
and
test
mov
stos
inc
lds
mov
mov
mov
xor
and
jne
jle
inc
fwait
shlb
ffreep
inc
add
inc
push
sub
rcr
inc
dec
sub
inc
and
cs
sbbb
and
loopne
pop
clc
fbld
mulb
or
and
xorb
push
loopne
orb
and
test
pusha
pop
or
cmp
cmp
and
xor
push
cli
sar
mov
dec
inc
out
xchg
cmp
adc
loopne
call
mov
xor
push
xchg
aaa
dec
add
rclb
cld
push
adc
stc
shr
dec
mov
in
imul
fadds
and
inc
pushf
xor
sbb
or
test
or
mov
add
scas
divb
mov
pop
out
jbe
rclb
icebp
push
insb
lock
jle
out
in
test
mov
mov
xchg
or
mov
movb
addb
out
jmp
cmp
mov
shrl
inc
out
xor
add
cwtl
rorb
add
pop
cmc
or
sub
sbbb
cmp
push
loopne
lock
and
icebp
rol
incl
popa
push
push
lahf
pop
cmp
or
out
mov
adc
push
push
scas
inc
adc
daa
pop
in
filds
sub
cmp
sbb
cmp
xchg
cmp
in
xor
sbb
jecxz
jo
mov
outsl
enter
fildll
ljmp
or
aas
loopne
and
in
out
sub
rcl
dec
sub
arpl
xchg
incb
or
or
push
add
test
call
push
iret
lcall
fsts
mov
rcrb
jb
mov
fcoms
addr16
scas
adc
movsb
and
push
mov
test
call
insb
or
aam
add
ja
inc
xchg
add
push
xor
or
xor
mov
lcall
add
insb
es
adc
add
mov
inc
nop
lds
test
pop
lret
push
das
sub
out
fs
add
fidivl
mov
adc
and
scas
hlt
in
xchg
pusha
outsb
jg
mov
xchg
inc
add
daa
push
or
xor
rcrb
loopne
push
xchg
push
pop
add
bound
push
je
cli
and
mov
sbb
adc
add
dec
nop
cs
jl
adcl
aas
sbb
or
es
adc
insb
mov
adc
adc
adc
orb
jnp
xor
jb,pn
sub
mov
in
or
jae
inc
sub
lcall
inc
in
add
pusha
sub
sub
mov
push
out
sub
and
lods
mov
cmpsb
cmpsb
and
movsb
pusha
sbb
sub
xchg
aam
add
loopne
xor
cltd
or
push
mov
and
inc
call
mov
xor
xor
xchg
in
ljmp
sub
mov
pusha
add
push
jle
negb
or
inc
addb
data16
push
add
mov
add
es
loope
mov
outsb
jns
adc
dec
or
xchg
dec
or
and
loopne
paddq
dec
dec
dec
jmp
jg
mov
push
idiv
push
shl
ret
test
shrl
jbe
sub
add
mov
push
or
rolb
fstpt
push
lods
dec
rorl
shlb
mov
flds
add
sarb
sub
loopne
push
adcl
incb
or
xchg
pop
ficompl
jl
dec
cmp
inc
stos
sbbb
lcall
jle
sub
cmp
hlt
je
adc
lcall
xorl
dec
pop
add
rolb
dec
push
lock
adc
push
js
dec
jl
movsb
adc
repnz
and
mov
mov
movsb
insl
inc
cmp
aad
add
xlat
adc
jne
push
mov
sub
adc
aam
inc
test
xorl
add
and
inc
cmp
jno
or
enter
test
add
sub
in
ljmp
ret
inc
fs
xchg
les
mov
push
mov
sbb
xor
sbb
push
jb
mov
and
mov
jg
pushf
dec
mov
pusha
or
push
mov
jl
nop
or
add
loopne
rorb
mov
outsl
and
add
mov
repnz
mov
inc
sar
outsb
adc
es
inc
jnp
add
mov
clc
aaa
sar
nop
or
shll
or
jo
sbb
mov
add
sete
jbe
pop
inc
mov
jp
sub
loopne
add
rclb
pop
mov
addb
add
nop
ficoms
inc
adc
mov
or
mov
cs
lea
pop
sub
mov
adc
loop
inc
cs
in
add
sar
add
insb
rcll
sti
inc
add
lcall
in
push
insl
bound
inc
mov
scas
incl
mov
mov
nop
repz
xchg
sub
pushf
movsl
inc
hlt
mov
shlb
cmp
push
lock
adc
cmp
scas
adc
jo
and
mov
inc
hlt
pop
push
push
mov
rolb
or
inc
add
sbb
mov
stos
dec
std
hlt
push
push
jecxz
mov
push
hlt
jecxz
cld
inc
lret
arpl
cmp
test
cmp
inc
cmp
mov
xchg
sub
push
ds
ljmp
outsl
jne
loop
es
add
movsl
mov
repnz
pop
mov
push
add
pop
mov
and
mov
fst
movb
js
add
xor
and
imul
fsubrs
jp
add
insb
fsubr
cltd
push
jbe
pop
and
add
pop
add
cwtl
popa
add
or
fcoml
xchg
pop
rcrb
jge
bound
sub
out
cmp
cmp
mov
aad
incl
add
push
add
sbb
lock
es
sub
pop
pop
push
add
add
jecxz
adc
std
les
or
add
orb
subb
and
add
movsl
xorb
lahf
fmuls
add
sbb
lret
ds
jb
inc
loope
pop
inc
out
add
sub
shl
call
inc
and
mov
rcll
movb
addb
movsb
sub
cld
mov
rcr
movsb
stos
clc
mov
jo
aam
add
and
ljmp
jle
mov
in
sub
shrb
sbbb
mov
and
add
inc
push
push
inc
add
int3
ds
and
sar
pushl
cltd
andl
mov
xchg
inc
sti
mov
ret
push
int
mov
cwtl
nop
addr16
xor
fcomi
jg
andb
push
out
stc
push
out
adc
add
loopne
cmp
std
daa
adcb
lret
data16
jo
pop
add
aaa
cld
mov
push
ds
jne
insb
push
or
sub
xor
xchg
or
adc
adc
repz
pusha
lcall
ret
sub
push
inc
jb
outsl
enter
sbb
mov
outsb
pop
sub
cmp
pop
in
inc
add
rclb
sarb
push
xor
popa
xor
pop
cmpl
lret
shrb
incl
cld
lea
pop
loope
ret
adc
mov
xor
jno
pop
sbb
add
or
xchg
cmp
add
mov
shlb
push
into
xchg
cmovno
aaa
and
in
popa
mov
pop
sbb
push
rorb
push
mov
push
data16
in
incl
stos
push
sub
pusha
faddl
sbb
pop
hlt
sbb
mov
test
adc
js
lods
xchg
jne
mov
lds
jo
add
mov
pop
ljmp
pushl
sub
adc
or
and
lods
aas
lret
mov
lock
jl
and
add
jle
fs
jmp
inc
adc
or
xchg
mov
or
push
dec
movsb
dec
pusha
xchg
data16
mov
lret
push
mov
or
cmp
cld
aas
mov
dec
pop
push
mov
dec
adc
enter
insl
inc
pusha
sbb
subb
xchg
cmp
mov
test
jno
lds
sbb
clc
lea
pop
aaa
adc
jl
adc
movsb
mov
js
ja
mov
daa
sbb
or
sub
jecxz
lods
adc
add
vaddsubpd
cmp
clc
adcl
rol
mov
mov
dec
sti
ja
push
or
ret
push
ret
cmc
pop
test
mov
lods
stos
sbb
push
das
addb
add
mov
add
add
mov
jae
aad
mov
les
xchg
sbb
or
mov
inc
push
fimuls
add
movsb
lret
rolb
cmp
adc
sub
mov
add
add
mov
roll
push
movb
rclb
or
daa
push
or
mov
inc
jle
das
call
xor
and
adc
inc
add
inc
insb
cmp
jb
push
loopne
ds
and
rclb
cltd
mov
inc
add
fcomps
mov
jle
pop
inc
mov
ret
stos
aad
imul
mov
add
in
idiv
decb
xor
inc
adc
xor
add
inc
mov
inc
add
test
push
pop
adc
push
imulb
pusha
mov
pop
cmp
push
cmp
xor
add
mov
and
inc
xchg
test
test
cmp
ficomps
fbld
les
push
jnp
dec
rolb
xchg
and
pop
inc
pusha
xor
xlat
das
rcr
sub
push
ljmp
sbb
inc
cmp
lods
dec
and
mov
push
add
pusha
add
bnd
xchg
push
mov
mov
lods
cs
inc
fiaddl
cld
mov
pushf
and
subb
je
mov
xchg
cmp
adc
pop
pusha
jno
lds
and
roll
cmc
push
sub
inc
and
fwait
adc
jp
ret
mov
add
sub
mov
aam
inc
add
add
into
mov
rclb
rcrb
inc
subl
add
sub
mov
adcb
push
xor
xlat
ret
mov
pusha
pop
adcb
cmpsb
std
pop
movsl
or
and
add
sub
mov
or
add
cld
inc
add
fildll
stos
push
sbb
pop
repnz
add
mov
add
ret
nop
pop
push
in
and
add
mov
inc
rclb
push
hlt
or
insl
mov
lcall
loop
xor
adc
insl
cmp
mov
adc
mov
pop
inc
mov
or
pop
push
cmp
or
adc
add
adc
push
and
xor
jle
aam
add
add
int3
mov
outsb
imul
push
xchg
adc
mov
or
adc
jmp
sbb
mov
adc
loop
jo
xor
and
xor
pop
push
les
add
das
xor
ljmp
add
setno
cmp
cli
cmp
adc
adc
rorl
xchg
xchg
adc
cmp
fiadds
fcoms
call
sahf
adc
pop
sub
or
or
jns
loop
inc
aaa
adc
add
or
in
and
mov
or
add
xor
in
pop
les
mov
in
nop
or
dec
stos
mov
aam
sub
lcall
incl
sub
add
sbb
test
cld
mov
loope
scas
movl
into
subb
xchg
mov
and
adc
add
adc
push
je
addl
out
mov
je
pop
mov
push
out
in
pop
cli
movsb
push
mov
outsl
decl
insl
sub
and
sbb
xor
jnp
std
sub
push
jb
sbb
sbb
and
sbb
bound
in
or
adcl
stc
jecxz
fnstenv
pusha
imul
fdivs
loope
push
rcrl
adc
dec
push
jl
sub
icebp
sbb
pop
adc
push
push
xchg
rorb
or
push
insl
push
adc
mov
mov
push
xor
sub
inc
jno
add
movsb
or
jae
jo
icebp
xchg
bound
sub
pop
jb
test
jnp
and
add
mov
or
cld
nop
push
or
notl
bound
and
fwait
mov
lods
xchg
cmp
add
adc
mov
push
sbb
xor
and
inc
pop
je
mov
push
shlb
or
jbe
clc
mov
push
out
adc
mov
mov
mov
mov
pop
xorb
ret
hlt
or
and
jo
xchg
daa
icebp
add
add
rcrl
push
xchg
fidivl
fnstcw
xor
sbb
scas
mov
cmp
pop
mov
add
jge
push
pusha
loop
mov
mov
out
add
cs
loop
inc
or
or
pop
adc
jg
inc
adc
sub
dec
out
loop
and
and
add
push
add
sarl
xlat
jo
je
push
add
add
test
pop
aad
lods
cmp
cmp
inc
adc
ss
pop
push
inc
or
lock
ja
adc
xchg
mov
adc
js
mov
jp
sub
xor
lahf
inc
xor
pusha
adc
add
cmpsb
mov
push
pop
add
insb
jnp
ljmp
lock
mov
inc
and
lock
jnp
addb
inc
mov
les
fldl
loope
in
cmpsl
mov
divb
sbb
roll
adc
rorb
dec
aad
jb
ret
movaps
lock
jb
cmp
sarl
jg
jle
xchg
xchg
inc
push
movsb
inc
dec
adc
inc
dec
push
or
mov
sar
cmp
xchg
adc
jp
out
test
add
mov
dec
mov
mov
das
push
je
mov
cmp
cmp
or
nop
cwtl
jecxz
xchg
cltd
shlb
mov
and
dec
jno
sbb
sqrtps
jo
adc
jb
pop
jmp
adc
and
add
out
adc
add
xor
outsb
dec
aaa
lcall
outsb
push
cmpsb
mov
add
pop
and
mov
cli
jns
mov
mov
in
adc
push
dec
xor
mov
push
sub
popf
xor
mov
xor
mov
add
and
mov
or
mov
jno
test
mov
adc
icebp
inc
sub
mov
sub
mov
in
add
mov
dec
xchg
les
xor
add
add
test
mov
pop
push
sub
imul
ss
sbb
or
stc
and
test
xchg
add
fdivs
insb
push
xchg
ret
clc
mov
pop
pop
pop
add
or
mov
int3
mov
push
jbe
pop
inc
inc
sub
loopne
xorps
adc
mov
es
add
cmc
add
xchg
icebp
aas
inc
jo
jle
pusha
cs
mov
ret
and
les
push
and
push
inc
pop
adc
aaa
mov
mov
lock
mov
loopne
or
test
popa
adc
inc
addb
in
out
pop
pushf
out
int
xor
adc
sub
sub
add
mov
sbb
add
ret
decl
sbb
mov
cltd
add
cmpsb
fwait
cli
js
push
popa
push
adc
das
jbe
sub
inc
push
inc
push
push
mov
inc
add
and
sub
add
or
mov
lock
xchg
push
aam
outsl
popl
test
imul
js
cli
hlt
mov
nopl
mov
jge
mov
inc
push
adc
add
pop
and
adcl
daa
or
leavew
rorb
rorb
dec
add
jns
push
push
pop
mov
push
stos
lea
adc
cmp
jecxz
xchg
rclb
or
loope
cwtl
dec
inc
pop
in
xor
ja
push
jo
sbbb
scas
jo
push
mov
pop
xor
addb
pop
adc
sbb
cwtl
jl,pt
add
inc
test
test
ficoml
jb
mov
push
andb
push
sbb
addb
mov
cld
in
adc
adc
inc
xchg
in
sbb
xchg
test
mov
mov
add
pop
out
leave
sti
inc
dec
out
inc
adc
sbb
call
out
xchg
fs
aam
add
adcb
mov
push
movsb
push
inc
mov
dec
lcall
add
push
pusha
inc
mov
push
adc
inc
push
cli
aaa
fldenv
pop
shlb
pusha
mov
andb
fildl
inc
or
sub
and
push
scas
dec
jne
mov
mov
addb
add
push
stos
lock
jb
pusha
inc
andb
add
jb
or
mov
shrl
decl
insl
sbb
xchg
int3
sub
sub
inc
sbb
cmpsb
dec
movsb
daa
adc
adc
rorb
call
xor
pop
scas
cmp
push
lret
xchg
std
add
inc
and
add
sub
rclb
test
or
push
add
add
add
imul
mov
jae,pn
fdiv
pop
shl
adc
out
pop
dec
test
cmp
clc
sub
push
and
out
pop
jae
js
cmp
sub
inc
call
pop
xchg
ret
inc
lock
ds
int3
add
fdivrs
inc
popa
push
cmp
sbb
fwait
in
aas
fwait
negb
push
call
inc
dec
push
and
rcl
movsl
add
adc
rorb
mov
mov
fadds
jecxz
pop
fdivrl
rclb
push
inc
adc
push
sarl
std
mov
pop
lock
lret
inc
and
inc
dec
stos
clc
push
xchg
ret
ljmp
out
cmpsb
push
nop
js
mov
mov
enter
sbb
push
addl
rorb
mov
mov
pop
or
or
movsl
or
inc
dec
push
and
call
inc
mov
movsb
aam
fists
cwtl
mov
fbld
loopne
push
pusha
fsubr
std
mov
clc
or
or
mov
or
icebp
mov
fisttps
andl
jne
xchg
cld
lea
out
adc
jb
inc
adc
push
iret
js
test
and
push
xchg
add
sahf
mov
lcall
add
mov
mov
das
nop
push
dec
repz
lds
fcomps
ret
ss
movl
add
out
sub
les
mov
imul
pop
shl
push
xchg
in
enter
mov
ljmp
pop
gs
adcb
dec
clc
in
pop
and
adc
orb
jmp
mov
jp
js
inc
insb
mov
es
jb
ds
and
push
inc
out
xchg
into
rorb
aas
and
push
mov
js
sbbb
mov
add
inc
ret
pushf
inc
movl
jl
mov
ljmp
enter
and
lock
add
rcll
mov
stos
xchg
push
push
sub
shlb
add
mov
pusha
pop
ret
shld
inc
push
jecxz
add
mov
bound
xor
stos
addb
jg
lcall
mov
mov
popa
or
pusha
gs
out
test
jmp
decl
and
popa
inc
loop
adcl
ja
and
addb
xchg
out
mov
pusha
cmp
lods
mov
adc
cmp
dec
inc
jmp
test
ud2
cs
pop
lock
mov
or
push
mov
sbb
out
adc
mov
lock
inc
inc
out
ja
push
jae
push
outsl
ja
add
inc
rclb
loop
and
mov
and
scas
sub
add
testl
add
or
and
out
out
adc
sub
loopne
sbb
mov
pop
sbb
ja,pt
push
movb
jo
pop
rolb
mov
es
notb
pop
add
cmp
and
sbb
sar
or
xor
mov
pusha
ljmp
pushf
popa
das
and
mov
pop
sbb
add
push
out
pusha
xor
sbb
sub
cwtl
push
lods
jae
pop
loopne
test
mov
js
fwait
push
push
lods
dec
mov
lahf
dec
lock
pop
pop
adcl
mov
pusha
aaa
enter
sub
shrb
ja
add
inc
imul
outsl
lcall
pop
adc
cmp
pusha
adc
mov
icebp
add
adc
pusha
and
and
pusha
push
adc
xchg
movsl
mov
xorl
dec
iret
cmp
cmpsb
pop
cmp
jb
repnz
or
dec
add
test
adc
rorl
push
out
enter
dec
push
and
xor
test
mov
mov
adc
or
nop
cs
idiv
ljmp
add
cmp
sarl
adc
cmp
jb
cmp
add
mov
jge
jae
cmp
push
cmc
sub
adc
dec
pop
shlb
add
or
add
loopne
xchg
orb
add
jl
aaa
lret
bound
sbb
sbb
add
push
je
adc
xchg
jmp
adc
add
pop
push
push
cli
lds
cmp
mov
mov
out
push
xor
adc
xor
push
bound
adc
inc
inc
sub
or
xor
ljmp
mov
jg
ds
fildl
sbb
dec
shl
dec
mov
or
lock
dec
or
push
sub
add
fbld
out
xlat
push
adcl
push
popf
xchg
adc
cltd
xor
shrl
ljmp
loop
js
lcall
jb
xor
gs
outsb
stc
fwait
jge
lods
into
mov
add
or
rorb
clc
and
mov
and
pop
icebp
or
mov
mov
mov
mov
dec
xor
or
lcall
jecxz
or
fwait
push
mov
mov
push
push
fidivl
or
subl
adc
or
adc
imul
xchg
incb
icebp
cmp
push
addl
sarb
out
sbb
xor
call
shl
cmp
clc
movsb
push
add
sbb
push
out
adc
fdivs
out
out
repnz
testb
inc
dec
inc
std
bound
scas
dec
or
jo
in
cld
stos
or
subb
pusha
xlat
cli
dec
std
sub
adc
out
testl
andb
outsl
aas
insb
rolb
pusha
pop
rclb
loope
shll
mov
add
hlt
pop
xchg
push
stos
inc
mov
iret
add
push
loopne
ret
das
or
inc
in
inc
shrl
jnp
jle
pop
sbb
add
rolb
dec
mov
out
stc
imul
jo
inc
or
aaa
dec
cmp
dec
sub
add
orb
add
push
pop
cmpsb
xor
loopne
cltd
sub
ss
mov
push
xchg
jp
mov
loopne
mov
clc
icebp
add
insb
popa
inc
adc
add
stos
lcall
es
cmp
inc
lahf
adc
incl
lahf
or
adc
call
imul
pop
addb
icebp
xor
movsb
cmp
hlt
jmp
push
and
add
cli
insb
mov
aas
jo
push
inc
or
dec
add
inc
mov
icebp
push
inc
and
and
cld
sbb
add
in
add
pusha
and
mov
and
insb
adc
inc
inc
rolb
mov
jecxz
adc
jb
in
fcoms
and
popa
add
call
stc
pop
mov
add
mov
and
cmp
or
add
cwtl
out
sahf
mov
add
xchg
adc
popl
jb
mov
mov
jns
out
push
jge
sbb
aaa
cli
pop
mov
xor
dec
ror
inc
xchg
xor
inc
testl
fldl2e
repnz
adc
sbb
insl
add
cmpsb
loopne
cltd
xorl
adc
rclb
xchg
icebp
jo
pop
mov
sub
js
push
not
sub
add
xlat
push
sub
ljmp
aas
dec
loop
pop
sub
xchg
mov
mov
adc
and
loop
pop
mov
mov
adc
sub
add
add
sub
out
cmp
sbb
adc
mov
or
inc
popa
sub
xchg
sub
cmpb
jae
or
pop
bound
add
mov
cmpsb
sub
lock
js
hlt
mov
xor
fwait
mov
rcll
push
mov
dec
call
mov
add
push
add
and
sub
in
or
push
sbb
in
addb
mov
loope
and
test
xor
decb
clc
outsl
movsb
mov
addl
ss
rolb
adc
lock
shll
rorb
jge
pop
push
sbb
out
and
mov
jmp
sarb
xor
add
pop
fiadds
push
pop
add
movswl
pusha
sbb
inc
ljmp
ret
loopne
add
sub
mov
incl
xor
roll
adc
adc
mov
add
push
mov
outsl
mov
push
lock
repnz
add
pop
sbb
inc
pop
jb
in
sbb
cld
or
and
dec
pop
adc
out
dec
bound
call
cmovae
or
enter
sbb
push
mov
clc
adc
inc
xchg
or
mov
loop
fsubs
push
es
and
cmp
arpl
repnz
adc
mov
pop
mov
inc
push
sbb
inc
xorl
and
inc
in
xor
mov
pop
fcompl
ds
inc
mov
nop
movsb
outsl
add
daa
add
inc
outsl
xchg
sub
nop
pusha
mov
pop
cmpb
xchg
adc
sub
sub
roll
inc
adc
es
mov
pop
rorb
add
mov
cmp
insl
test
repnz
pop
mov
loopne
push
imul
add
dec
add
je
js
loope
bound
or
jns
xor
dec
addb
daa
push
imul
outsl
adc
ja
sbb
outsl
faddp
fisubs
pop
dec
mov
lods
push
push
mov
jecxz
inc
sbb
jp
inc
pusha
movsb
addb
ja
add
mov
xchg
mov
cld
pop
add
add
shrb
test
xlat
cmpsb
les
inc
mov
rclb
neg
jae
subb
ljmp
pop
jl
mov
or
or
inc
xorb
sub
je
mov
push
mov
lea
inc
pop
dec
cmp
iret
jne
add
add
insb
push
xchg
xor
inc
in
cmp
clc
je
les
push
and
push
test
pop
mov
or
pushf
bnd
dec
fisttpl
inc
sahf
outsb
mov
add
addb
or
lcall
add
sti
dec
popa
mov
into
addl
pop
xor
cmp
push
ret
push
outsl
movl
lock
imulb
inc
frstor
jae
mov
dec
add
lcall
orb
add
cmp
add
and
or
xor
adcb
mov
and
mov
pushf
es
inc
rclb
rcll
psubq
mov
int
gs
int3
or
shlb
push
leave
or
ljmp
and
xchg
clc
or
daa
push
push
inc
sti
imul
fs
sub
push
rolb
add
pop
xor
sbb
pop
aaa
test
es
push
pop
mov
pop
lsl
out
add
inc
push
rol
or
jl
mov
shrb
lcall
insb
inc
cmp
ret
jle
and
decl
add
das
sub
ss
sub
inc
xchg
pushf
push
pop
rolb
push
jmp
pop
pop
xchg
sbb
dec
sarb
call
pop
xchg
sahf
shrb
add
pushf
enter
out
fsubl
shrb
xorb
ret
fdivl
les
movl
xor
mov
outsb
push
mov
lock
xlat
dec
or
mov
xchg
push
and
and
xor
pusha
sbb
leave
adc
push
adcl
mov
or
ficoml
inc
adc
sbb
mov
pcmpgtb
mov
adc
dec
inc
or
jg
int3
add
push
jb
adc
and
pop
pop
or
sbbb
clc
add
js
pop
cmp
or
ss
or
insl
pop
inc
cld
rcrl
push
and
or
and
sbb
shll
mov
loopne
es
sub
in
add
push
arpl
cmpb
inc
sub
pop
std
mov
lods
fwait
rorb
sub
cmp
inc
jns
add
adc
push
jae
sbb
aaa
sub
dec
insb
add
adc
lea
add
dec
add
dec
add
sbb
int3
js
pop
dec
sub
lea
lea
inc
adc
jg
add
in
loope
pusha
or
pusha
pusha
xchg
roll
jg
orl
and
add
mov
mov
daa
add
xor
sbb
cmp
adc
lea
add
jo
int3
dec
push
cli
stos
adc
subl
inc
subb
mov
addb
inc
and
sbb
pop
push
push
lock
adcb
notl
mov
out
addb
mov
fwait
loopne
es
subb
scas
call
mov
mov
add
push
lods
jge
dec
inc
cld
dec
mov
or
mov
fwait
add
out
or
adc
ret
sti
inc
add
adc
ljmp
mov
mov
push
lahf
cld
rclb
jecxz
mov
lahf
loopne
or
add
lcall
sub
cmp
jb
sub
mov
or
insb
inc
lea
out
ret
lret
arpl
fldt
mov
inc
arpl
out
xchg
mov
test
test
jle
cmpsl
and
xchg
xor
int3
push
and
inc
daa
pop
lds
and
sbb
inc
stos
or
insb
adc
fists
xchg
add
adc
inc
inc
addb
sbb
push
loope
or
lds
sarb
and
and
xchg
cmp
sub
pusha
loopne
or
add
rolb
adc
loopne
test
scas
xor
or
push
push
inc
and
adc
push
add
and
mov
push
sub
jnp
flds
adc
xchg
or
rolb
into
jno
rorl
and
test
inc
int
inc
sub
xchg
jecxz
or
pop
pop
and
imul
adc
js
jo
aad
fildll
push
pusha
or
jp
push
jecxz
call
clc
or
cmpsb
or
pusha
ds
pop
push
xchg
idivb
xchg
pop
inc
push
test
adc
loopne
daa
dec
cmp
outsl
inc
add
mov
jp,pn
add
cmp
aam
fs
and
jecxz
dec
sub
dec
sbb
add
mov
or
inc
xor
jo
sbb
jg
and
pop
add
xchg
andb
andl
mov
adc
xor
xor
dec
cmp
inc
adcl
fs
ret
cmp
outsb
or
mov
inc
mov
pop
and
jecxz
xor
fwait
or
push
push
out
or
cmp
sti
lcall
dec
ret
adc
imul
sbb
sbb
insl
daa
and
push
pop
inc
in
lret
and
shrb
cmp
inc
mov
sbb
mov
or
mov
movl
push
push
lock
inc
mov
incl
adc
mov
sub
pop
out
imul
adc
incl
cmp
adc
jnp
rolb
add
test
or
push
bnd
add
fcoml
sub
ljmp
stos
hlt
adc
das
and
inc
dec
sbb
inc
pop
add
adc
pusha
and
xchg
fldt
out
jb
add
and
sbb
dec
sbb
and
ds
lret
aaa
hlt
ja
loop
mov
pop
inc
pop
movb
adc
loopne
data16
xor
add
int3
pop
mov
in
lods
jo
out
test
cld
mov
loopne
mov
add
ljmp
inc
pop
add
and
xor
and
std
xlat
lcall
sub
push
mov
jae
mov
cmc
cmp
mov
inc
and
jo
jae
mov
das
mov
xchg
push
add
adcb
enter
jp
or
aam
add
jmp
inc
mov
test
lods
orl
test
pop
push
sub
jecxz
sbb
jo
and
xchg
inc
mov
mov
test
sbb
add
insb
cmp
mov
movsb
ja
cmp
jae
add
lret
es
clc
aaa
inc
call
adc
push
xchg
pop
sub
fistpll
outsl
or
jg
pop
cld
mov
in
rcll
pop
popf
rorb
add
imul
loope
icebp
pop
mov
add
jnp
add
pop
add
dec
and
jg
and
add
add
xchg
xor
add
dec
xchg
pop
pop
popa
xchg
add
addl
pusha
add
ljmp
andl
push
mov
clc
pop
mov
clc
and
xchg
inc
add
sub
push
js
decl
push
mov
jge
iret
idiv
mov
and
or
mov
mov
pop
mov
movlps
jo
add
jp
test
push
jae
jmp
and
jae
pop
add
sahf
lock
push
jno
mov
sbb
push
data16
jb
mov
xchg
rsqrtps
jmp
sbb
scas
push
jb
ja
jmp
mov
add
add
cmpsb
adc
or
andb
mov
add
or
sub
out
mov
mov
sbb
enter
int
mov
mov
jg
jno
out
out
add
and
inc
push
add
ljmp
lock
out
inc
mov
push
add
adc
jbe
loopne
cltd
out
add
cs
add
fwait
int3
stos
mov
iret
mov
sub
add
pop
mov
inc
fnsave
mov
jno
or
in
push
mov
lea
inc
fwait
mov
iret
jo
xchg
pop
jbe
add
push
mov
mov
sarl
or
pop
jae
push
gs
outsb
jmp
dec
or
movsb
adc
mov
test
dec
push
dec
pop
gs
int
dec
loop
adc
add
pop
rclb
faddl
inc
lea
mov
outsl
nop
js
add
ret
pop
cmp
jo,pt
add
adc
mov
ret
or
and
adc
push
and
and
and
bound
in
add
sub
inc
sbb
stc
ljmp
scas
xchg
and
jle
adc
bound
push
mov
cld
movb
repnz
cmp
jge
push
and
cmp
cmpl
or
add
and
jae
pop
push
imul
and
pop
inc
cmp
xor
sbb
clc
pop
mov
roll
divb
and
dec
enter
inc
add
xlat
or
add
push
or
sub
add
scas
sbb
cltd
xorl
mov
mov
js
call
pop
in
in
pop
paddsb
bound
inc
mov
je
roll
or
subb
pop
inc
xor
mov
adc
mov
orb
sub
mov
addl
xchg
fwait
push
xchg
adc
pop
add
jb
inc
add
cli
jg
sbb
or
mov
movb
shlb
inc
push
inc
inc
sbb
sub
sbb
inc
jo
mov
adc
sbb
sbb
dec
adc
lea
inc
add
push
add
jo
push
or
sub
mov
cmp
dec
fadd
or
ss
sbb
xor
xchg
cmc
push
sub
clc
dec
and
in
stos
push
mov
insb
dec
sbb
sub
jb
mov
ja
outsl
pusha
stos
xor
add
aam
les
add
cld
jb
out
add
stc
add
in
into
add
add
xor
add
inc
in
dec
stos
aam
repnz
push
or
add
outsb
xchg
jne
sbb
add
cld
scas
or
aad
mov
pop
mov
rorb
cld
mov
pop
add
add
lea
sbb
add
or
adc
sub
loopne
add
lods
xchg
cld
fs
test
lds
out
mov
imul
subb
subb
and
insb
cltd
add
loop
outsb
stos
mov
and
push
add
andb
int
add
cld
add
push
jne
in
pop
inc
add
mov
subl
fdiv
push
xchg
dec
mov
mov
lret
push
pop
xor
pop
out
rolb
sbbl
inc
icebp
add
add
loop
or
orb
sbbb
adcl
xchg
out
mov
pop
mov
in
leave
add
sbb
jno
add
mov
push
xchg
pop
out
lea
or
cwtl
ret
jns
test
adc
int3
js
decl
in
push
inc
sbb
rorb
jno
test
sub
xor
cmp
inc
mov
cmp
cmpb
cs
std
mov
shrl
mov
sbb
fisubrs
sbb
cmp
or
add
push
pushf
fidivs
andb
inc
sbb
pop
mov
mov
or
mov
add
or
push
cmp
aas
std
neg
mov
testl
test
adc
or
roll
idivb
mov
subl
pop
addb
or
aaa
inc
movsl
mov
push
gs
fldt
or
aaa
adcb
mov
xchg
add
sbb
add
adc
int
xorb
rcll
mov
int3
mov
push
out
sbb
fidivrl
scas
clc
out
push
out
addr16
push
test
jl
mov
add
or
orl
add
cmpsb
inc
loopne
rolb
add
mov
push
push
pusha
push
or
mov
or
pusha
pop
add
outsl
cli
inc
addr16
or
dec
push
aaa
les
push
cs
add
jle
or
movb
push
loopne
inc
testl
or
xchg
add
jmp
sub
mov
jb
jg
icebp
cmpsb
pop
push
aam
lea
hlt
cmp
test
cli
fldl
loopne
cmp
cmp
fs
xor
push
loop
xor
inc
push
adcl
imul
or
data16
or
loopne
js
loop
filds
in
push
add
mov
fsubrl
std
push
mov
sahf
mov
je
add
mov
xchg
push
testb
or
sub
and
scas
rorl
out
insl
call
jb
adc
fwait
inc
pop
sbb
or
ret
jns
call
hlt
adc
ds
pusha
add
fistps
or
mov
rclb
inc
adc
cmp
and
push
out
sub
addb
or
push
mov
add
inc
jne
orb
jo
mov
fbld
repnz
jg
stos
arpl
in
dec
mov
xchg
sub
inc
mov
add
pop
inc
aam
adcb
or
adc
inc
xchg
xchg
outsb
xlat
sub
pop
shlb
nop
and
ds
adc
and
push
pushf
mov
cmp
add
inc
and
movsl
mov
adc
inc
and
add
aas
mov
out
ret
js
loopne
add
push
jbe
mov
movsb
sar
aaa
add
inc
adc
xlat
xchg
push
dec
in
pusha
jne
push
aaa
lea
add
and
pop
dec
loop
inc
mov
in
push
shll
push
inc
xor
xorb
in
cmc
add
adc
mov
or
cmpsb
inc
jbe
inc
add
inc
shlb
daa
dec
pushf
pop
push
mov
mov
xchg
cmp
push
nop
lret
add
dec
sub
stos
lcall
pusha
ret
or
jg
xor
jmp
inc
xchg
ljmp
movsb
dec
add
sti
cmp
jp
and
pusha
adc
mov
sub
add
or
pop
xchg
clc
jnp
in
sbb
ret
mov
loopne
leave
inc
icebp
mov
or
or
test
loop
rcl
jo
outsb
into
rolb
sbb
mov
lock
aad
enter
fiaddl
ljmp
or
subl
ret
inc
push
or
sbb
mov
and
icebp
or
testb
adc
out
xor
mov
mov
xor
or
mov
decl
outsb
mov
int
or
lock
or
lock
mov
push
rolb
push
jo
cwtl
jo
xchg
or
cmp
sbb
es
pop
aaa
xchg
fmul
or
mov
and
dec
mov
mov
out
jbe
pop
push
mov
in
movaps
xchg
push
adcb
xor
daa
fisttpll
dec
stos
outsl
push
mov
pop
shll
pushl
aam
shll
arpl
imul
push
iret
or
mov
outsl
ljmp
rcll
ja
ss
adc
in
mov
push
sbb
shll
sub
dec
xor
push
sub
or
mov
sbb
and
xor
add
outsl
or
pusha
sub
bnd
sub
int
rolb
mov
and
sub
push
adc
hlt
lahf
xor
xor
or
xchg
repz
xchg
mov
or
out
add
or
insl
mov
orl
ss
dec
pushf
shrb
jo
mov
jae
mov
inc
mov
push
add
inc
adc
shlb
xor
mov
mov
sti
mov
into
cmpsb
add
mov
inc
sub
out
adc
loopne
cmc
mov
lock
lock
orl
or
dec
dec
xor
es
xchg
mov
dec
shrb
stos
nop
testb
jmp
xorb
push
stos
fs
and
or
ljmp
std
test
push
cmp
mov
inc
and
loope
lds
mov
ss
loop
dec
push
aam
dec
add
jns
sbb
dec
and
jg
sub
pop
and
cmc
and
rorb
add
mov
push
sbb
int
fisubrl
xchg
fsubrl
fwait
test
orb
jo
enter
out
mov
jns
jno
and
out
enter
cmp
xchg
add
popa
jmp
pop
or
out
data16
movsl
dec
mov
sar
mov
inc
movsl
rclb
cmp
pop
sbb
scas
or
mov
add
jns
and
jae
xchg
mov
subb
jns
addr16
incl
gs
add
jns
out
jb
add
jmp
jg
out
outsb
loope
push
pop
adc
push
mov
and
or
imul
lret
daa
clc
jns
loop
clc
add
jne
call
mov
or
cld
lcall
hlt
add
or
loop
inc
or
out
out
and
stc
add
push
xchg
push
mov
testb
les
loopne
xchg
insb
and
mov
mov
add
out
fwait
cmp
mov
xor
push
and
jo
cld
mov
arpl
inc
cmp
xor
mov
fwait
popa
jo
pop
dec
rcrb
inc
aaa
sub
cld
or
aad
decl
xchg
mov
fsubrp
push
mov
adc
data16
mov
testb
insb
out
fisubl
ja
aad
or
inc
or
lahf
mov
add
cltd
push
mov
add
popw
pop
outsb
dec
add
daa
dec
add
icebp
mov
mov
xor
in
jo
adc
fimuls
imul
jne
xchg
adc
mov
mov
xor
push
jle
fildl
mov
xchg
add
xor
mov
mov
push
test
ss
add
xchg
inc
xor
push
repnz
lds
cmp
lea
into
pop
mov
jae
or
jae
adc
dec
ret
in
cs
mov
xlat
sub
aam
int
pusha
mov
les
lea
test
xchg
outsb
add
test
outsb
add
fadds
adc
and
push
jo
lock
push
lret
mov
and
pusha
mov
nop
sub
icebp
dec
call
or
mov
cmp
insb
adc
call
es
ret
jp
fidivs
rolb
je
js
and
add
sbb
in
mov
dec
jns
fiadds
sbb
push
and
rclb
and
adc
mov
mov
ds
out
sbbl
inc
pop
dec
and
dec
push
dec
pop
bound
mov
aaa
sub
push
xorl
inc
inc
repnz
xlat
push
mov
shr
mov
rdmsr
fwait
or
fs
shrl
outsl
add
sub
push
lock
cmpsb
lret
jg
stc
cmpb
fadd
mov
outsb
pop
jnp
jle
add
out
add
or
inc
add
ljmp
push
add
or
mov
mov
clc
xor
add
jae
subl
or
or
jno
adc
sbb
out
cmpsl
nop
aam
cmpsb
dec
cwtl
outsb
dec
dec
fistps
out
add
xor
push
mov
mov
mov
out
dec
dec
sbb
sbb
push
add
mov
subl
sub
dec
cmp
cli
lock
mov
incb
in
inc
add
insl
add
xor
or
shrl
mov
movsl
xor
sub
pop
out
xlat
in
mov
ss
pop
pop
or
push
inc
pop
xor
fmuls
mov
insb
insb
les
add
or
or
imul
add
mov
bound
add
sbb
shlb
jo
add
into
cmp
pop
mov
add
jnp
rorb
orb
cwtl
dec
rcr
mov
push
or
inc
add
cmpb
add
add
sbb
add
loop
les
sti
adcb
cs
lods
lods
dec
and
or
aas
out
test
or
jp
xorb
adcl
sbb
lods
cwtl
adc
mov
xlat
jmp
sbbl
adc
es
in
nop
sub
push
push
andb
push
sub
push
inc
loop
dec
loop
pop
int3
add
popa
add
and
js
movsb
cs
test
test
adc
and
and
push
mov
push
sbb
adc
sbb
mov
cli
push
cmpsl
adc
data16
pop
push
clc
sbb
clc
jno
mov
mov
mov
push
jbe
out
and
aaa
sbb
shrb
inc
push
jl
andl
mov
shr
orl
out
push
dec
inc
or
add
push
out
mov
pop
out
ret
fsubs
inc
ret
ljmp
pop
pop
cmp
jp
pop
inc
imulb
add
negb
inc
push
cld
add
cmpl
sahf
xchg
mov
out
imul
cmp
movsb
or
andb
jg
lcall
popa
adc
es
add
jg
nop
arpl
repnz
ret
sbb
jo
ja
cmp
mov
loop
sbb
mov
aas
fmuls
push
out
dec
mov
sub
push
add
and
adc
or
push
mov
dec
and
and
in
arpl
or
sub
fs
mov
ljmp
mov
push
sub
outsl
dec
mov
jb
outsb
add
push
data16
mov
outsb
sbb
shlb
and
dec
ror
fcmovb
and
outsb
fsub
push
arpl
or
jl
jg
push
add
sbb
or
mov
ret
xor
push
add
mov
and
cmpsl
push
or
das
adc
and
and
cmp
sub
jo
call
in
ds
push
loop
or
jge
test
add
and
stos
dec
push
fwait
test
inc
jae
stos
dec
xor
cmp
scas
adc
sti
in
add
add
jg
mov
out
add
pop
and
sti
add
mov
and
arpl
ret
push
add
daa
dec
lret
pop
ret
cld
sahf
or
fwait
inc
loop
test
push
add
sarl
dec
popa
mov
mov
sbb
inc
xorb
add
and
sbb
mov
and
xor
inc
add
bound
rolb
dec
fnstsw
adcb
mov
fiaddl
fisttpl
mov
inc
add
inc
add
push
jnp
xor
outsb
loopne
in
add
test
stc
add
inc
ljmp
inc
adc
add
daa
push
adc
sub
or
out
shrb
popa
or
push
hlt
sub
mov
mov
rclb
sbb
jae
or
mov
push
mov
movsb
push
rcll
jp
jg
jge
cmpsb
mov
push
xlat
mov
mov
into
xchg
push
cmp
and
loopne
insb
jmp
sbb
out
dec
inc
mov
gs
pop
add
jg
out
mov
and
xor
loope
inc
mov
pop
xor
jmp
into
inc
inc
xor
sbb
pop
mov
adc
aam
lock
rolb
pop
sub
lcall
pushl
mov
rorb
das
jmp
mov
jae
add
mov
in
cmp
dec
js
xor
sub
add
pop
add
ret
add
or
shll
mov
sub
jnp
cmp
movsb
mov
jne
inc
sbbl
and
mov
ja
or
sahf
xor
or
inc
out
sahf
loope
inc
aad
and
popa
loopne
jg
pop
sub
int3
add
inc
dec
xor
ds
mov
bound
outsl
cli
sbb
xor
cmp
push
jecxz
ret
sub
xchg
push
lret
test
aaa
dec
mov
iret
xor
add
sbb
add
fisttps
push
cmp
adc
or
fidivs
inc
mov
nop
adc
fistpll
inc
std
push
sbb
or
add
mov
out
clc
aam
shr
sbb
daa
test
push
mov
pusha
or
lods
cltd
orb
dec
lds
mov
shr
in
xchg
jo
lods
adc
enter
push
fistpl
pop
into
add
mov
das
add
in
lods
sbb
into
sub
and
fmuls
mov
push
adc
stos
jno
add
ljmp
lods
mov
in
lcall
lds
add
daa
pop
add
push
push
movsb
incl
pop
add
loopne
xor
out
addb
add
sti
decl
or
or
shlb
incl
xor
xchg
enter
test
and
push
inc
sub
movsb
jbe
movsl
dec
insl
cmc
call
popf
mov
dec
push
adc
push
and
arpl
sbb
add
push
cmpsl
cmp
test
fiaddl
jbe
and
sbb
adc
mov
pop
add
in
and
lret
fdivrl
sbb
shr
arpl
faddl
sbb
into
pop
shrl
std
addb
dec
subb
xlat
push
dec
clc
bound
or
stos
cwtl
push
notb
sub
sbb
adc
mov
test
loope
out
mov
aad
pop
neg
pop
popf
push
inc
out
rcll
pusha
rclb
push
add
push
and
dec
jge
popa
loope
iret
in
or
jno
jae
jbe
add
xor
mov
jne
sarb
mov
pop
in
dec
add
test
lock
jno
push
or
sub
or
dec
push
leave
lsl
lcall
orl
jmp
adc
in
cmpsb
and
mov
pop
cmp
add
adc
pop
mov
loopne
call
scas
xchg
daa
aas
ss
bound
mov
sub
inc
xor
push
add
imul
xor
insl
push
stos
mov
into
add
repz
lcall
inc
adc
call
outsl
push
mov
outsb
push
lds
pop
mov
sbb
push
cmp
ret
lods
jae
xor
roll
sub
pop
jb
ss
data16
xor
in
push
mov
xor
fcmovb
imul
lea
cmpsb
add
xorl
cmc
adc
mov
add
push
xchg
outsb
or
pusha
dec
popa
jl
mov
in
mov
push
add
jns
add
add
mov
mov
sub
xor
and
xchg
mov
cmp
test
dec
cmp
mov
cmp
lea
test
inc
dec
test
popf
mov
dec
cmpsl
mov
dec
adc
adc
push
sbb
sbb
mov
int
sbb
or
inc
fcoms
add
or
inc
rorb
sub
adc
andb
xor
jl
addb
adc
or
jo
xchg
mov
or
inc
dec
xor
push
fidivrs
push
dec
cs
mov
xor
stc
mov
jg
inc
mov
in
mul
push
add
push
push
jle
push
add
add
jp
ret
rcrl
cmp
add
addb
mov
push
or
sub
push
or
mov
xor
or
arpl
or
jge
push
popf
pusha
inc
rcr
pushf
clc
adc
sub
jo
sbb
pop
pop
xchg
cmp
and
mov
mov
testl
adc
inc
test
ljmp
add
mov
filds
sbb
into
lock
and
push
sub
cli
cmpsl
push
push
xchg
cmp
add
add
adc
add
dec
pop
jb
or
cli
stos
mov
push
sbb
inc
imul
mov
mov
sbb
pop
aam
dec
clc
cmp
sbb
inc
addl
mov
cmp
mov
add
daa
add
xchg
xor
inc
xchg
xor
push
pop
rcl
and
rolb
add
inc
adcb
loopne
add
push
push
addl
clc
xchg
xchg
loop
xor
sti
out
xor
scas
and
stos
add
or
out
and
push
or
xlat
xor
and
xorb
or
scas
and
es
or
fs
pop
and
dec
enter
popa
or
push
pop
xchg
or
rclb
dec
clc
inc
sbb
xorb
mov
rorb
out
arpl
sbb
ficomps
lods
push
pushf
mov
add
pop
lods
imul
addr16
loope
push
or
mov
mov
xor
mov
lcall
dec
push
nop
sbb
hlt
xor
sbb
mov
cld
or
push
and
mov
adc
mov
sbb
test
shll
or
add
out
orb
ja
inc
xchg
adc
jae
or
push
adc
sbb
or
adcb
or
add
jmp
nop
xor
add
pusha
lods
mov
rolb
andb
push
or
push
shlb
ljmp
xor
fcomip
jmp
aas
sbbb
mov
mov
inc
add
and
jns
andb
mov
add
xchg
mov
add
xchg
or
insl
or
push
xchg
orl
or
or
jp,pt
jae
icebp
or
inc
out
xchg
pushf
hlt
out
addr16
lods
inc
sbb
lods
inc
jne
sbb
lret
adc
sahf
insl
dec
movsb
add
sub
popa
add
cmp
test
sub
sahf
pop
lock
cmp
add
mov
insb
clc
add
bound
adc
fstpt
xchg
hlt
inc
inc
dec
sub
push
push
loopne
or
out
or
or
push
and
mov
mov
call
or
test
mov
hlt
fsubl
push
push
shlb
inc
decb
pop
inc
incb
jns
inc
and
mov
enter
add
mov
mov
adc
incl
xlat
sbb
xchg
xchg
test
data16
stos
add
icebp
cmp
adc
mov
pop
mov
out
es
shll
push
repz
and
pusha
push
repz
push
test
or
inc
pop
pavgw
push
or
sbb
enter
orb
pop
rcr
sub
mov
test
push
fadds
adcb
cs
sub
dec
outsb
add
add
or
decl
insb
sti
jae
mov
inc
cmp
mov
inc
cmp
sbb
push
ds
test
shll
adc
in
or
dec
loopne
sub
das
cli
xor
sub
or
jo
pop
inc
sbb
mov
and
rorl
push
cmp
push
lock
into
mov
mov
loop
jmp
xorb
and
je
sarb
rcrb
mov
subb
sbb
adc
mov
push
jne
pop
sti
sub
sarb
test
jg
addb
loopne
mov
sbb
pop
je
outsl
scas
xlat
aaa
je
mov
and
sbb
mov
adc
sbb
sbb
sub
rcr
push
cmp
add
xchg
rcll
test
xchg
rclb
sbb
and
pop
call
incl
adcb
jne
xchg
cmp
jb
out
cld
dec
cli
fcmovnbe
test
or
je
xchg
or
xor
ljmp
fdivrs
outsl
or
idivl
cmp
mov
out
and
push
inc
and
mov
jne
adcl
inc
inc
ret
jae
dec
inc
inc
mov
cmp
dec
xor
lret
imulb
sti
ja
jg
jmp
add
fisubs
dec
loope
xor
call
pop
sti
mov
mov
push
push
daa
mov
push
lea
and
lahf
and
sub
lret
loop,pt
lcall
pop
jecxz
inc
dec
lahf
inc
sarl
sti
mov
incb
cmp
and
sbb
mov
mov
jns
loopne
addb
mov
mov
ljmp
fwait
cmp
inc
nop
xlat
add
cli
insl
mov
xor
je
xor
repnz
add
mov
idiv
or
dec
fbld
adc
dec
push
inc
adc
test
jae
inc
imul
pop
xlat
and
loop
jo
xchg
sbb
je
mov
test
jb
aad
adc
repz
lock
lds
push
push
incb
add
in
push
inc
or
or
mov
cmp
push
test
add
mov
lret
popa
pop
jne
jp
repz
cmp
popl
stos
mov
adc
out
mov
or
jecxz
daa
test
push
rclb
jecxz
add
pop
cmp
or
int3
pop
jo
icebp
decl
adc
adc
out
test
sbb
mov
mov
and
fdivs
repz
dec
adc
rcll
pop
loopne
shlb
jns
dec
adc
sbb
add
mov
inc
push
jmp
or
in
add
push
push
popa
adc
xchg
sub
mov
lea
xchg
call
pop
mov
pop
xor
sbb
sub
pop
scas
shrb
jp
xor
xorb
mov
dec
jb
mov
cmpsl
inc
push
inc
xchg
mov
mov
fisubrs
loope
sbb
imull
xor
into
jg
loopne
rorl
mov
add
add
dec
dec
lods
push
and
cs
jle
xchg
outsl
adc
xor
sub
clc
pop
ret
adc
jge
andnps
fwait
pop
nop
add
inc
loope
pop
or
pop
jmp
inc
in
sbb
mov
mov
dec
loope
nop
pop
jbe
jo
inc
mov
test
icebp
cmp
bound
jnp
loopne
lock
add
stos
push
aad
jae
out
dec
mov
test
movsb
xor
adc
sbb
mov
sub
movsb
pop
mov
xchg
fdivrp
mov
dec
push
xchg
add
or
xchg
ror
jo
lock
or
stos
mov
dec
or
iret
adc
sub
push
lods
add
fildl
add
and
loopne
ret
xlat
rorb
pop
xor
xchg
ret
inc
jne
out
rol
rolb
add
or
adc
clc
or
inc
test
mov
outsb
sahf
or
adc
dec
test
sub
and
test
pop
pop
push
jae
orb
xchg
addb
or
or
in
lock
mov
pop
repnz
xchg
push
adcb
ret
ret
rclb
lods
shl
out
push
jecxz
aam
push
and
push
mov
cs
cltd
mov
shlb
adc
cmp
add
jo
xor
mov
mov
cli
lock
and
fistl
xchg
filds
lcall
mov
mov
dec
mov
jmp
lcall
fildl
test
adc
mov
test
ret
adc
adc
adc
es
nop
mov
call
sbb
shrb
fistl
inc
add
lret
mov
adc
stos
jmp
or
dec
mov
hlt
or
jb
frstor
out
sub
dec
clc
push
or
cmc
mov
jo
adc
fisttpl
push
ds
dec
lock
mov
int3
sbb
add
mov
std
cli
or
fisttps
push
cmc
mov
dec
and
repnz
jo
mov
and
cli
rclb
add
pop
lock
push
inc
test
mov
loopne
cmpb
scas
sub
mov
cmp
cmp
jo
sbb
inc
loope
ds
pop
pop
sbb
enter
mull
shlb
pop
push
hlt
mov
loop
or
decb
adc
and
fdivl
mov
sbbb
cmp
pop
dec
loope
xchg
adc
or
and
sbb
pop
pop
mov
sub
jno
jbe
scas
adc
dec
jb
pop
add
and
loop
xchg
lcall
test
add
dec
xchg
rcrb
mov
or
les
jno
push
pop
icebp
inc
and
pshufw
aad
jg
mov
push
pusha
add
add
pop
out
mov
pusha
dec
pop
int
xchg
or
cmp
adc
clc
dec
repz
pop
pop
mov
mov
loopne
arpl
xorb
adc
dec
lods
pop
push
jno
and
cs
enter
and
jno
add
pop
pop
cmpsb
sbb
je
push
jmp
jo
adc
pop
pushl
loopne
or
add
jp
enter
outsl
jmp
push
push
pusha
sbb
add
jo
mov
and
sbb
xor
adc
popa
push
dec
push
add
or
jbe
jb
testl
out
cmp
jo
daa
mov
mov
mov
xchg
aam
push
xor
adcl
pushf
cmpsb
or
sbb
dec
cltd
lock
fidivrl
and
adc
or
pushf
sbb
mov
mov
sub
mov
jnp
cmp
je
adc
rolb
mov
clc
mov
pushf
add
out
out
ljmp
adc
frstor
pop
inc
xlat
fcomip
and
mov
pop
and
cmp
mov
rcll
lock
popl
adc
xchg
addb
mov
or
sbb
pusha
mov
dec
adc
loope
or
sub
loop
ffreep
clc
or
in
push
push
push
sbb
xor
pushf
pop
arpl
xor
jae
ret
rorb
arpl
add
fs
fwait
std
or
enter
stc
stc
jae
adc
push
pop
jno
mov
jno
test
movsb
or
test
pop
add
lret
outsl
push
mov
out
std
loopne
mov
xchg
mov
inc
mov
lock
jmp
inc
push
les
fiaddl
lock
cmp
add
mov
push
sbb
iret
out
xchg
int3
hlt
push
mov
scas
call
dec
cmpb
sub
loopne
pop
js
repnz
mov
xor
and
dec
jecxz
outsl
jb
cwtl
jbe
clc
jbe
add
add
adc
push
xchg
inc
pmaxsw
in
mov
call
adc
adc
sub
cmp
adc
ds
jo
sub
add
mov
frstor
push
out
pop
mov
cmc
jmp
pusha
out
push
aam
cmp
jno
or
stc
add
inc
or
lods
das
xor
sahf
xchg
shl
je
xor
je
jae
or
in
push
adc
inc
ret
pop
xchg
scas
dec
add
xor
aas
mov
or
add
push
sidtl
inc
inc
add
add
fcoml
xor
pop
push
aam
dec
or
sbb
cld
jl
in
add
ret
out
xchg
mov
bound
adc
mov
incl
xor
add
aaa
lret
js
and
filds
cmp
cld
inc
lahf
addb
test
sbb
sbbb
xor
lret
movb
aas
add
out
test
push
repz
andb
add
sub
in
pop
popa
sbb
pop
or
orl
dec
add
test
xchg
or
lcall
out
out
push
ljmp
xorb
movsb
add
loop
push
imull
mov
push
insb
push
mov
mov
movsl
add
jp
mov
je
and
loopne
xchg
adc
sub
sbb
jmp
push
or
xor
xor
insl
pop
mov
scas
rorb
fwait
or
jg
xorb
push
ja
sub
add
pop
or
add
adc
add
movsb
lahf
mov
cmp
movsb
mov
mov
inc
add
mov
rcl
aaa
pop
adc
and
push
xchg
and
cmp
mov
sbb
orb
or
mov
add
ss
mov
mov
adc
adc
orl
pop
jl
pop
cli
sub
mov
rcll
jb
add
mov
nop
or
notb
pop
adc
icebp
mov
lock
iret
inc
shrl
fisubrs
inc
pop
inc
add
xchg
rorl
out
adc
jmp
fisttps
jb
push
lock
loopne
in
rcll
int3
lock
jne
orb
and
jne
rclb
jno
dec
fisttps
in
jb
sbb
sub
mov
add
lock
lock
int
add
inc
push
pusha
mov
inc
ret
nop
push
push
mov
push
add
or
adc
insb
or
push
pop
pop
mov
pop
inc
out
xlat
les
in
fimull
insb
lods
mov
jo
xor
ds
jae
mov
inc
cmp
xor
push
or
cmpsb
stos
call
fimull
cmp
sti
mov
mov
pop
sub
jecxz
mov
sahf
xchg
cwtl
js
rorb
dec
push
in
push
je
pop
and
sbb
jg
pusha
xor
xchg
add
add
jbe
mov
fdivrs
jne
lret
scas
movq
push
push
pop
es
mov
push
out
data16
pop
cmp
pop
dec
popf
aam
rcll
outsb
and
sub
mov
xor
lock
test
fwait
push
fs
in
daa
or
gs
add
int3
pop
xchg
mov
ljmp
mov
jge
or
xchg
xorl
and
push
loopne
mov
out
sub
adc
les
adc
cmp
add
roll
push
adc
and
add
adc
push
pusha
add
adcb
dec
add
int3
ret
bound
xorl
push
inc
pusha
cmpl
movsb
loope
les
push
stos
test
pop
cmp
pop
and
les
int
add
lahf
outsl
pop
ss
xor
mov
cli
or
fbld
dec
mov
les
add
add
pop
adc
clc
in
push
push
or
aam
inc
addb
and
add
add
push
adc
adc
dec
pop
add
or
add
jno
dec
dec
xchg
shlb
push
and
mov
jmp
inc
push
ficoms
or
push
sbbb
xorb
ss
mov
fistl
dec
lret
popa
xor
mov
shl
mov
enter
sbb
sahf
scas
mov
adc
add
jo
xorb
fists
imul
adc
add
push
lcall
push
sbb
add
into
dec
adc
mov
add
loop
push
out
rorl
ja
jmp
add
jmp
mov
push
push
mov
imul
xor
push
sahf
cmpsb
sbb
popl
imul
aas
xor
inc
push
jnp
test
jl
outsl
ds
in
in
imul
add
adc
and
add
mov
pushl
add
and
das
out
add
insb
icebp
shll
lods
mov
lods
mov
adc
push
push
mov
ret
subl
mov
xchg
push
mov
lock
mov
mov
jnp
add
jae
sbbl
add
sbb
or
mov
std
or
add
or
sbb
add
popf
cmpsb
imul
inc
loope
adc
outsb
fisubl
add
push
or
cs
jns
repz
or
pop
shll
push
add
jb
inc
push
push
adc
mov
sbb
ds
pop
mov
add
jmp
test
xchg
cmpsb
cmp
popl
add
loope
add
dec
adc
fcoms
dec
sbb
xor
inc
xor
aas
xor
test
stc
mov
add
roll
push
mov
add
insb
rdmsr
repz
xor
sti
add
stos
cmp
out
fcmovnu
imul
add
in
mov
lock
xor
stos
jg
ficoms
cmp
push
jbe
add
lods
lret
and
dec
mov
shlb
pop
jnp
pop
test
les
inc
adc
dec
pop
dec
push
js
std
inc
xchg
outsl
pop
mov
rorb
stos
jbe
pushf
push
sub
mov
and
call
sti
push
sarb
jg
fnstenv
lock
cs
inc
jnp
negl
jmp
add
into
out
mov
or
roll
outsl
out
add
les
shrl
adc
fdivp
mov
int
cmpsl
lods
mov
xor
pop
lock
sub
popa
sbb
icebp
push
repnz
ret
dec
stos
mov
mov
mov
sub
pop
xorb
or
adc
mov
add
mov
xchg
jo
in
shl
jae
je
lock
sbb
or
stos
adc
fnstenv
ljmp
push
sbb
out
out
call
mov
out
std
push
test
icebp
icebp
pop
stos
cmc
ret
in
in
fcoml
push
fnstenv
mov
pop
cmp
jp
stos
cmp
icebp
je
std
jae
push
mov
stos
stc
or
out
or
jno
push
lcall
rcl
lret
xor
jno
jp
and
ret
icebp
mov
mov
adc
xchg
lock
push
push
out
sbb
pop
loope
sbb
sbb
outsl
or
jno
inc
mov
xorb
mov
stc
add
push
out
jg
sub
adc
and
or
or
je
addl
roll
dec
lock
adc
loopne
xorb
mov
xor
repnz
jo
jb
lock
addr16
pusha
aad
test
push
popa
loopne
fcomi
jo
lods
jmp
push
jae
ja
mov
test
addr16
push
sbb
push
jne
push
lea
xchg
dec
ret
jb
loop
push
std
sbb
xchg
xchg
sbb
outsb
push
lock
push
ja
mov
jno
jmp
fwait
jo
stos
in
sbb
loope
in
sbb
sti
fwait
push
addr16
fwait
cltd
sub
lods
scas
popf
pusha
xchg
pop
push
ds
testl
and
jno
arpl
cmp
cmp
popa
or
aas
cmp
insl
outsb
add
push
mov
xor
push
out
je
imul
es
mov
jns
lcall
adc
mov
mov
mov
jl
sbb
stos
push
scas
add
add
icebp
or
negb
xchg
add
xchg
push
mov
sbbb
subb
jp
jle
mov
roll
lds
add
sbb
xor
repz
mov
adc
xchg
xchg
mov
imul
sbb
dec
shll
shll
rcrl
push
push
dec
dec
shll
dec
inc
inc
cmp
xor
sub
dec
rcrl
sbb
cmp
xchg
add
shrb
cmc
cmpsl
imul
sbb
in
lcall
leave
int
imul
imul
imul
cmpsl
imul
imul
imul
cmpsl
imul
imul
imul
nop
add
xor
or
add
jmp
imul
out
leave
int
lds
mov
lcall
popf
xchg
xchg
imul
imul
imul
out
dec
dec
inc
inc
cmp
imul
imul
sub
stos
add
sub
mov
rcr
add
stos
mov
mov
or
inc
xor
int
mov
mov
fs
pop
inc
andl
movsl
or
sbb
xor
pop
or
push
movsl
mov
push
or
sbb
roll
add
and
mov
movsb
or
or
push
stc
jmp
test
icebp
sub
add
lods
jns
in
sbb
in
add
shll
rcl
popa
dec
aad
mov
adc
xchg
adc
fwait
test
loopne
mov
push
lock
mov
test
dec
repz
dec
repz
xchg
mov
movsb
lock
jno
xor
repz
in
popa
gs
pop
test
dec
repz
push
or
push
pop
add
mov
mov
cmp
lcall
and
sbb
mov
andb
and
loopne
mov
cmpsb
jns
add
aad
leave
int
mov
lcall
rcll
mov
push
inc
xor
stos
mov
shl
mov
push
lock
push
leave
rcr
inc
pusha
sahf
add
sub
dec
aas
sub
imul
sbb
adc
or
add
push
cli
lcall
repnz
ljmp
cmpsl
imul
sbb
fcmovbe
xor
ret
mov
sub
jbe
scas
mov
mov
mov
and
inc
and
and
add
sbb
or
shll
inc
jb
and
inc
or
and
test
xchg
mov
sbb
pusha
sub
xlat
decl
add
sbbb
test
and
pop
sub
in
pop
mov
sbb
inc
push
adc
rol
roll
aad
sub
inc
or
add
mov
test
add
out
push
testl
decb
add
inc
mov
adc
les
add
jnp
mov
jp
inc
adc
lcall
scas
and
imul
ds
out
shrb
imul
pop
fsubrs
push
adc
or
rclb
ss
adc
xor
add
xchg
push
out
data16
or
inc
add
and
insb
add
jo
sub
add
adc
push
clc
xor
add
xchg
xchg
add
adc
and
adc
inc
add
or
adc
or
imul
adc
mov
pop
cmp
roll
push
adc
ja
js
add
add
loopne
loope
sarb
out
repz
jb
or
pop
dec
inc
mov
in
xchg
pop
in
mov
xchg
sbb
jbe
dec
jnp
in
in
sbb
push
or
sub
dec
sbb
inc
test
fimull
scas
add
std
mov
insb
xchg
xor
adc
add
adcb
add
incl
and
push
pop
popa
adc
push
and
xchg
adc
add
sbb
or
adc
mov
andl
mov
add
or
dec
and
jae
fcomps
push
pop
out
arpl
lods
lods
loopne
sahf
and
rsqrtps
out
out
mov
push
inc
add
and
sub
sub
clc
decl
pop
mov
or
les
ret
adc
decb
jl
adc
test
jl
add
adc
movsb
mov
and
xchg
dec
fwait
lods
or
mov
loope
data16
sub
icebp
adc
add
mov
je
xor
inc
add
ja
xchg
js
outsl
xor
jb
imul
add
in
scas
cwtl
adc
add
andb
push
jns
push
or
adc
ret
cld
dec
sbb
add
mov
out
out
and
add
and
enter
insl
loop
lret
bound
push
nop
fcomps
stos
jp
or
or
inc
mov
movsl
xchg
pusha
push
push
cmc
rorb
out
push
sub
hlt
mov
outsl
inc
loopne
repz
add
push
add
jb
out
dec
pushl
add
out
aam
adc
add
shlb
push
push
add
add
aaa
cld
sub
sbb
pop
push
sub
mov
or
dec
out
test
jmp
mov
push
or
loop
sbb
pop
push
mov
inc
dec
add
lret
push
xor
es
and
outsl
orb
lods
xor
mov
stos
or
fldt
loop
cmpsl
or
or
mov
pusha
flds
mov
add
and
xor
sub
add
jmp
add
push
loope
cmp
sub
out
and
xchg
pop
sbb
add
and
and
add
cli
sbb
push
sub
ljmp
mov
add
int
or
inc
or
incb
mov
mov
sbb
and
or
mov
inc
inc
or
jg
jne
lock
push
adc
mov
movsb
or
sub
pop
mov
adc
xor
shll
add
je
ret
adc
jae
out
adc
imul
in
icebp
sbb
in
repz
add
incl
add
cs
fcmove
pop
adc
adc
fsts
pop
mov
outsb
enter
les
mov
cmpsl
icebp
or
pop
pop
rorl
jnp
dec
lods
sbb
es
dec
clc
push
or
sub
and
add
jb
cli
inc
or
add
mov
mov
and
sbb
inc
or
idivb
push
push
out
movsb
jg
add
mov
add
inc
in
stos
imul
push
in
pop
ds
mov
aad
sub
in
gs
mov
push
out
push
leave
add
sub
jle
add
mov
testb
cmpsl
add
or
add
pop
and
cwtl
scas
xchg
or
and
add
lock
adc
pop
add
jb
je
sbb
xorb
jg
test
dec
and
xor
sub
mov
mov
pop
lods
xor
jle
fistpll
push
mov
mov
jae
cmp
outsb
sbb
adc
cmp
mov
push
or
pop
hlt
or
mov
cmpb
xchg
jae
add
xor
std
dec
push
xor
nop
sub
cmp
clc
mov
cmp
stos
jae
xor
std
push
cmp
cmp
imul
or
ljmp
addb
cmp
or
unpcklps
std
inc
jp
mov
cmp
xchg
mov
mov
hlt
ret
or
js
testb
rolb
dec
add
push
xor
aaa
mov
pop
adc
rcrl
add
add
aaa
dec
test
push
cmp
outsb
jnp
mov
lea
test
out
push
xor
xchg
inc
jp
add
and
jb
sub
adcl
incb
inc
xor
cmp
sbb
mov
pop
adc
add
lock
es
sbb
cld
scas
std
inc
test
andl
and
inc
andl
mov
inc
sbb
addl
push
sahf
sbb
out
fcompl
add
sbb
pop
and
push
es
in
dec
loop
incl
xchg
adc
sbb
lret
sbb
adc
daa
nop
sub
decl
jae
out
push
pop
orl
addb
or
sarl
mov
sbbl
add
and
push
adc
daa
hlt
sarb
loope
rcr
mov
or
sbb
and
int3
adc
or
or
xchg
stos
in
testb
inc
xchg
jnp
or
rolb
inc
and
mov
subl
and
xor
inc
and
or
lds
fcmovbe
neg
call
sarb
ds
leave
or
cmp
and
and
rolb
add
push
mov
pop
adcl
inc
outsl
fildl
sbb
loope
add
cmc
dec
decl
add
pop
inc
add
nop
repz
add
fists
inc
fwait
adc
lds
mov
mov
ret
fisubrl
push
mov
das
pusha
add
call
add
ror
addr16
std
cltd
push
fimull
fnstcw
enter
stc
test
add
add
fsubrs
adc
aaa
push
out
lods
jmp
xchg
lcall
sub
pop
jge
adc
push
mov
repnz
push
or
in
or
xchg
or
stos
mov
push
rolb
lock
fistl
rolb
sub
subb
or
ja
cmpsl
mov
xchg
inc
mov
or
jg
fwait
push
shll
and
add
push
add
ds
push
and
sub
xchg
jge
jge
addb
jnp
sbb
jo
jnp
mov
add
dec
jb
pusha
jnp
push
pop
push
daa
cmp
dec
mov
push
rcll
lods
je
pusha
jnp
push
cmc
sub
xchg
pop
sub
imul
es
hlt
fwait
cs
inc
cmp
incl
sub
fcmove
cmpsb
lock
jg
inc
mov
mov
leave
test
add
cmp
push
mov
jg
inc
adcl
ja
pusha
loope
inc
xor
repnz
xchg
sbb
lods
popf
addr16
xor
mov
or
pop
or
mov
or
mov
push
push
mov
push
cmp
int
rorl
aam
mov
mov
sbb
je
pop
or
aaa
push
lds
cmp
negl
mov
add
jmp
push
std
jo
pop
inc
ud0
mov
mov
jo
or
adc
icebp
and
cmpsb
add
xchg
jnp
push
ss
xor
ds
scas
mov
xor
aad
pop
jno
mov
push
jae
pop
sbb
jle
xlat
pop
mov
push
mov
and
inc
jno
arpl
xorb
aaa
sahf
xchg
enter
pop
push
scas
stc
jl
xchg
sub
psllw
fisttpl
lcall
pop
roll
in
sub
pop
jae
cmp
dec
xorl
push
jae
adc
pop
cmp
pop
rol
add
and
jae
inc
add
pop
loope
jl
jo
ret
dec
xor
adcb
dec
mov
or
add
pop
inc
and
pop
lea
fstl
pop
cmp
add
out
cmpb
sbb
mov
lock
sub
rol
mov
add
das
cli
sub
pop
ja
add
add
stos
pop
sub
enter
jns
test
and
pop
sub
jns
dec
lret
sbb
jo
jge
jns
jg
icebp
and
add
push
push
mov
xchg
sub
shlb
or
mov
jo
jbe
addps
add
pop
sub
jno
scas
subb
ret
add
loopne
push
xchg
adc
sub
addps
lods
push
or
int
sbb
jns
add
rol
jns
pop
sub
or
xchg
cmp
sar
js
ret
mov
cltd
add
pop
inc
bound
push
jg
fiadds
push
data16
jae
inc
push
rclb
dec
mov
bound
xchg
add
or
and
jb
and
push
dec
fcos
push
push
cs
dec
add
jae
jne
push
cmp
push
mov
pop
addb
popa
mov
out
dec
imul
inc
jg
callw
mov
je
mov
inc
or
rorb
bound
nop
imul
push
imul
orb
je
mov
cs
dec
pushw
imul
xor
jno
jno
pop
xchg
or
mov
fistps
or
jne
jb
imul
fs
fsubrl
sahf
sub
out
and
add
cwtl
insb
add
inc
aaa
or
xchg
or
jg
test
mov
xor
inc
add
rolb
clc
jg
lock
outsb
ja
adc
pusha
push
inc
jb
fs
outsb
push
movsb
add
mov
aad
fdivl
add
xor
inc
jae
mov
nop
or
push
jne
out
add
fcomip
fcomip
inc
jb
imul
je
loop
mov
jb
nop
mov
loopne
or
ds
push
dec
add
hlt
add
cvttps2pi
add
add
push
jle
pop
ret
scas
inc
mov
ja
lock
cwtl
sbb
cmp
xchg
and
add
and
gs
popa
adc
rorb
scas
sub
adc
rorl
or
enter
adc
push
and
ss
inc
rclb
inc
jb
popa
popa
adcb
mov
arpl
push
mov
std
mov
aam
inc
jo
mov
or
push
xchg
sbb
push
dec
xor
outsb
hlt
push
rcr
outsb
jge
bound
jno
outsb
add
rolb
adc
sub
mov
pushl
add
add
jne
jl
rcll
jae
cmpsb
mov
fs
xchg
adc
sbb
cwtl
ret
push
mov
adc
push
mov
push
icebp
jnp
push
movsb
fidivl
add
inc
add
int
mov
cmp
sub
insb
or
push
bound
push
nop
or
add
bound
cs
mov
inc
loopne
add
mov
mov
inc
mov
fstpl
ds
lock
dec
popa
inc
xchg
mov
cmpsl
imul
sbb
pop
push
mov
out
jno
pushf
add
push
dec
xor
pop
inc
xchg
mov
jno
bound
popa
mov
sbb
in
mov
add
out
scas
mov
inc
pusha
mov
mov
add
inc
outsl
mov
or
inc
subb
and
cwtl
and
jmp
or
add
cltd
or
ret
clc
je
movsb
clc
sbb
push
sbb
dec
cmpsb
jge
in
mov
and
ret
sub
add
ret
sarb
mov
xchg
add
add
xor
jno
lds
xchg
in
fs
icebp
out
mov
jle
movsb
push
xor
imul
test
push
int
push
add
cmp
aad
or
es
add
sub
dec
addl
hlt
mov
bound
pop
add
push
ret
sarb
inc
ret
out
pop
xchg
xchg
lret
inc
inc
sub
cli
sbb
mov
add
sbb
insl
jno
fbld
rcll
pop
add
lds
and
cmp
mov
incl
jle
dec
inc
outsb
rcll
jo
inc
push
push
je
pop
cltd
inc
fcoms
jne
popa
adc
push
push
dec
dec
call
rorb
repnz
push
pop
arpl
or
test
jne
pop
dec
inc
xor
or
jae
ss
add
add
test
out
cmp
dec
mov
jg
test
push
dec
add
inc
push
les
xor
inc
rcrb
push
cmp
xchg
inc
add
je
rol
sti
dec
cmc
inc
lods
push
jb
ret
lods
adc
and
call
mov
inc
or
mov
fisttps
pop
push
ljmp
mov
dec
mov
hlt
push
call
ror
test
inc
or
orb
inc
add
scas
sbb
orl
mov
aad
or
int
inc
filds
testb
loope
mov
rclb
add
aaa
pop
pop
lcall
rol
or
aas
add
repz
sbb
out
ret
mov
add
ret
icebp
testb
pop
into
bound
push
add
sub
xchg
push
pusha
or
outsb
or
aad
dec
je
ret
cmovge
push
sbb
inc
cmpsb
dec
pop
jl
add
sub
addb
loopne
fdivrp
fcmovnu
pusha
adc
cmpsl
and
rcll
or
sub
add
decl
aad
push
je
add
out
xor
loopne
push
dec
imul
cmc
push
and
sarl
pusha
les
lods
loopne
loop
mov
or
mov
ret
incl
add
inc
js
jecxz
push
inc
add
push
push
pop
addb
popa
or
add
test
loope
inc
gs
shlb
dec
or
dec
push
ret
jo
sbb
or
dec
shll
dec
ss
inc
test
sub
imul
outsb
subb
fs
dec
orb
xor
lcall
adc
cmpsb
stos
cmpb
sbb
imul
test
add
dec
shlb
cmp
fsub
pushl
add
repnz
sub
pusha
enter
mov
mov
inc
and
pusha
push
mov
add
sbb
cmp
pop
popa
add
loopne
bound
add
cmp
adc
add
lock
adc
data16
pop
mov
jo
mov
or
ss
test
or
dec
daa
dec
mov
inc
cmp
ja
les
jmp
loope
dec
orb
jl
cs
mov
imul
loope
call
out
pop
mov
je
pop
mov
ret
add
dec
outsl
arpl
nop
push
add
xor
icebp
idiv
xchg
or
add
jecxz
subl
dec
loop
lods
lods
xor
dec
fs
pusha
scas
mov
adc
inc
and
rcll
jmp
das
ss
adc
xlat
mov
test
shrl
or
rolb
lock
cltd
mov
sub
fwait
sub
ljmp
inc
decl
pop
cmp
xchg
sbb
inc
subb
jmp
outsb
inc
repnz
das
push
add
or
add
and
pop
sbb
lret
out
test
scas
sar
add
mov
mov
mov
ja
jns
add
dec
dec
cmp
clc
bound
fwait
adc
jae
jae
add
or
pop
mov
es
jg
mov
sbb
repnz
or
bound
add
jl
insl
push
xor
sub
mov
es
cwtl
push
mov
push
jno
ja
shlb
jb
or
inc
bound
ficoml
outsb
aaa
xor
push
dec
mov
xchg
sbb
xchg
sub
hlt
dec
lcall
dec
or
add
mov
adc
jle
add
imul
xchg
adc
or
pusha
jne
dec
scas
cli
sbb
gs
pop
nop
xor
inc
addb
sub
sbb
hlt
insb
adc
xor
enter
pop
icebp
data16
sbb
add
adc
push
outsb
push
imul
orb
push
dec
dec
inc
dec
add
imul
ljmp
push
push
pop
xchg
xor
inc
mov
pusha
jecxz
push
jno
add
call
out
jo
outsb
mov
fsts
and
mov
inc
mov
xchg
add
ja
inc
shrl
loop
sbb
loop
sbb
jmp
sarb
adc
lock
je
add
or
dec
fs
push
xor
jb
orl
outsl
jp
aaa
mov
test
sbb
push
inc
mov
push
std
mov
add
and
push
dec
add
enter
mov
jae
mov
or
pop
sbb
xchg
mov
pop
mov
jge
pop
push
jb
mov
push
std
adc
arpl
mov
push
sub
pop
mov
std
or
fmul
ja
push
xchg
test
clc
mov
push
mov
push
push
arpl
aas
fs
roll
cld
pop
out
mov
ret
icebp
or
pop
lock
dec
sub
aaa
adc
push
in
int
dec
mov
addb
add
push
push
inc
int3
push
out
push
xor
jbe
dec
imul
fistpl
shlb
push
adc
sub
add
mov
ret
lock
jg
fs
adcl
pop
add
mov
or
mov
mov
shll
pop
lods
add
dec
and
jp
xchg
jae
fiadds
add
aas
enter
lahf
or
mov
push
repnz
mov
xor
jae
lcall
decl
inc
es
push
jnp
inc
adc
xor
xchg
dec
sub
shrb
aaa
adc
and
push
or
pop
xchg
fdiv
add
fnstenv
pusha
pusha
dec
jb,pt
pop
cs
jmp
into
cmp
xorl
push
mov
rorb
nop
inc
mov
and
stos
mov
add
decl
cmpl
push
pop
lret
mov
lock
nop
push
and
insb
aaa
loop
pop
xchg
lock
jno
bound
insl
ljmp
jmp
jb
addb
icebp
or
mov
add
pop
decl
adc
rcl
push
jle
push
bound
popa
popa
jle
pusha
enter
jo
push
mov
push
ret
int
pop
adc
push
mov
or
pop
insb
mov
add
push
mov
fbstp
icebp
push
add
adc
fisubrl
loop
and
sahf
push
push
int3
xchg
test
jg
dec
push
xchg
jmp
push
sti
aad
add
sahf
cmp
push
inc
and
dec
jne
es
shll
outsb
pusha
cmp
xor
subb
inc
out
clc
adcb
xor
js
xor
push
ja
mov
cmp
push
push
xchg
push
push
push
mov
rolb
js
dec
sbb
and
and
cwtl
dec
pushaw
push
sub
aad
inc
cli
mov
icebp
sbb
sub
fdivl
jo
imul
and
cmp
or
xor
and
inc
mov
push
loopne
adc
fs
adc
sbb
xor
lock
adc
dec
aaa
mov
out
add
jo
fidivs
cwtl
adc
xor
lret
fisttpl
inc
push
inc
rcr
jae
cmp
fimull
xchg
mov
add
into
jbe
popa
add
or
rclb
ret
mov
or
fcoml
and
mov
aaa
je
jp
xchg
dec
cmpsb
subl
out
inc
sub
scas
dec
movsb
add
dec
popa
loop
cmp
add
sahf
sbb
es
pusha
push
mov
push
addb
or
fiadds
inc
sub
adc
andb
les
or
add
cmp
mov
adcb
adcb
addl
sti
push
imul
outsb
cs
inc
dec
push
cwtl
push
lret
leave
mov
add
sub
add
inc
push
mov
add
loopne
sub
loop
and
orb
sti
test
pop
sub
or
add
movb
test
popf
mov
cmp
add
xor
adc
fsubr
outsb
gs
add
aaa
dec
ss
cmpsl
push
or
pusha
dec
jl
fildll
shlb
loope
lds
xor
jge
jb
int3
push
sarb
negb
dec
cwtl
sub
les
rcll
add
sbb
pop
push
outsb
add
add
data16
jle
nop
add
cmp
add
or
jb
inc
arpl
shrb
std
push
push
outsb
bound
fdivs
jo
push
stos
mov
inc
sbb
adc
xor
adc
inc
sbbb
nop
pop
fs
outsb
repnz
dec
les
daa
pop
inc
mov
cld
inc
push
imul
and
ss
mov
mov
inc
add
push
jo,pn
pop
int3
das
clc
insb
and
pop
je
xor
add
outsl
cwtl
sub
mov
inc
pop
add
fwait
or
mov
push
fdivs
jae
add
or
pop
hlt
adc
inc
add
xor
pop
or
inc
pop
pop
push
or
add
lcall
add
adc
adc
inc
jbe
add
add
inc
pop
jbe
cwtl
popa
xor
pop
mov
shl
xlat
clc
jnp
pop
inc
or
jle
adc
loope
cld
or
loop
imul
sbbl
sbb
ret
add
mov
cs
push
imul
dec
add
pop
nop
call
adc
adc
sub
loope
inc
push
pop
push
push
test
pop
lock
xor
inc
fdivp
xchg
mov
test
pop
jne
fdivrs
cmp
add
ljmp
push
cwtl
out
push
mov
add
incl
and
loop
mov
mov
mov
pop
adc
and
dec
nop
pop
and
pusha
or
add
clc
aaa
clc
xor
or
jmp
or
jle
lcall
ds
mov
cmp
loopne
inc
mov
and
jecxz
les
and
add
sbb
mov
or
jb
ljmp
push
js
imul
pusha
push
push
pushf
cmpsb
add
roll
data16
les
loopne
cmpsl
and
sub
pop
in
or
or
and
xchg
stos
bound
icebp
mov
pushl
stos
push
jbe
and
scas
sub
push
dec
in
inc
sub
jg
dec
inc
push
mov
inc
loop
test
ja
int3
mov
inc
xorl
outsb
jl
lds
jb
popa
cmp
push
add
push
std
push
jo
jb
gs
push
pop
outsl
jp
cs
add
in
shlb
fs
jle
mov
pop
jo
ja
mov
jmp
out
bound
add
cwtl
adc
jg
orb
fwait
add
ja
addb
imul
xchg
ljmp
in
mov
add
adc
gs
jmp
pop
push
sub
sbb
fs
sbb
decl
adcl
pusha
jecxz
loopne
push
pop
add
and
jo
mov
rol
or
mov
add
mov
faddl
addl
mov
rolb
jmp
shlb
loopne
mov
add
sbb
fbld
sbb
add
xchg
inc
and
add
add
xchg
push
ljmp
add
or
and
sbb
and
pop
aaa
mov
jp
dec
data16
es
jbe
cli
jecxz
iret
adc
xchg
movzbl
or
jl
jge
or
or
and
adc
lahf
adc
daa
mov
les
sbb
ja
cmpb
leave
sbb
push
dec
inc
daa
negl
stos
mov
lcall
and
sbb
inc
jbe
rclb
inc
rorb
mov
inc
ljmp
mov
mov
jg
aam
inc
decl
shl
out
xchg
inc
mov
mov
jmp
aam
ja
jnp
mov
lcall
inc
cmpsb
loope
in
lcall
incl
cmc
sub
ficoms
lods
ljmp
ret
std
inc
in
mov
shl
lock
enter
rclb
ljmp
inc
or
or
xchg
dec
pop
cld
lds
ds
mov
push
dec
mov
subl
cmp
cltd
xchg
pop
je
mov
mull
data16
cli
mov
cmpb
fsubl
sarb
mov
iret
pop
push
xchg
into
pushf
nop
daa
orb
addr16
and
adc
lret
out
cmp
cmp
decl
add
cmp
dec
mov
cmp
in
pop
jmp
aam
test
pop
adc
pusha
mov
inc
stos
out
mov
mov
add
add
fildl
mov
xchg
push
shl
cmp
cli
cli
leave
jg
mov
dec
adcl
lret
lods
jecxz
sub
out
ret
mov
xchg
ret
push
mov
inc
lret
popf
test
fldenv
ljmp
repnz
sbb
mov
xchg
cmp
and
in
mov
int
loopne
mov
push
pop
jns
push
jnp
pop
cmp
jmp
add
inc
push
cmp
jmp
jmp
in
add
sub
jecxz
jnp
xlat
ficoml
add
lret
and
jo
clc
dec
add
xchg
xchg
xchg
std
cmp
inc
movsb
test
pop
pusha
mov
aas
test
call
nop
mov
pop
ltr
out
in
mov
lds
inc
pop
mov
aam
fsubrl
cmp
add
xor
jmp
add
frstor
xor
mov
cwtl
inc
pop
mov
mov
jecxz
xor
jg
test
dec
push
add
pop
lcall
shr
incb
pop
push
xchg
cmp
dec
dec
ljmp
fwait
jbe
test
jl
fstps
nop
fisubl
add
in
es
inc
inc
xchg
lcall
lcall
pop
sti
and
sbb
push
mov
add
mov
sti
add
push
xchg
roll
dec
imul
push
mov
push
fisubl
sti
insb
fcmovnbe
incb
and
push
faddl
and
aas
dec
add
mov
aad
add
mov
xor
jp
xor
lods
in
divb
addb
xlat
mov
inc
mov
jp
int
insl
jle
sbb
sahf
sub
push
jg
sub
sub
sub
jb
ret
int
arpl
mov
xchg
daa
out
fwait
dec
inc
dec
cld
add
sti
push
fs
scas
outsl
adc
stos
adc
xor
push
inc
ds
or
les
and
movsb
pop
push
in
add
add
dec
sub
push
fmuls
call
pop
add
adc
ret
pop
lock
mov
popa
fsubl
sbb
pop
sbb
push
icebp
sbb
mov
sahf
jne
jg
xchg
hlt
push
ret
push
adc
lcall
push
add
sbb
and
sub
xor
cmp
inc
aas
dec
aas
push
aas
pop
aas
arpl
imul
aas
jnp
cmpl
aas
xchg
aas
fwait
aas
mov
aas
mov
aas
sarl
fstpt
jecxz
jmp
repz
sti
aas
add
or
adc
sbb
and
sub
xor
cmp
inc
ds
test
ds
arpl
imul
jnp,pt
cmpl
ficompl
mov
ret
repz
add
call
cmp
sub
inc
cmp
mov
mov
push
ljmp
cmp
sarl
jmp
repz
rcrl
push
ljmp
lods
push
cmp
cmp
imul
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
fwait
movsl
mov
mov
cmp
cmp
cmp
cmp
cmp
int3
mov
jg
cmp
push
cmp
arpl
imul
dec
xchg
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
sahf
gs
sbb
into
mov
pop
lea
cmp
jnp
cmpl
cmp
cmp
ret
cmp
cmp
cmp
sub
cmp
jmp
sbb
and
sub
xor
cmp
inc
cmp
push
cmp
arpl
imul
mov
test
fsubrs
addr16
jg
pop
jne
fstpt
jecxz
jmp
repz
cmp
cmp
out
jb
ret
in
cmp
cmp
cmp
xchg
test
insl
lahf
gs
mov
push
ret
fwait
cmp
adcb
lret
hlt
fstpt
rcrl
cmp
cmp
scas
add
incl
bound
aaa
sbb
and
sub
xor
cmp
inc
aaa
dec
aaa
pop
aaa
insb
xchg
test
aaa
imul
aaa
xorl
aaa
pop
jg
sub
mov
xor
xor
mov
sar
xor
xor
xor
xor
xor
in
xor
into
mov
jmp
insb
mov
mov
lock
mov
das
mov
fwait
xor
mov
mov
das
jmp
dec
cmp
cmp
cmp
dec
cmp
insb
or
loop
cmp
inc
cmp
xchg
test
push
cmp
cmp
jp
cmp
inc
cmp
cmp
pop
subb
sub
cmp
sub
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
pop
dec
cmp
push
cmp
sub
fwait
xor
or
aaa
and
sub
dec
push
jb
jl
test
mov
scas
aaa
mov
mov
into
mov
jmp
fsubs
ss
pushl
int
xlat
ss
ss
sbb
cmp
inc
xor
fsubrs
fwait
sbb
jmp
push
xor
jmp
xor
xor
lret
ret
ds
xor
xor
xor
adc
ret
syscall
ljmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
add
jg
pop
add
xor
aas
push
aas
std
aas
scas
std
fidivrs
loope
or
cmp
pop
cmp
mov
sub
scas
adc
rorb
cmp
jg
mov
inc
pop
mov
cmp
dec
cmp
cmp
jg
and
sub
inc
cmp
jge
xchg
mov
fidivrl
in
cmp
cmp
out
repnz
pushl
jns
cmpb
cmp
cmp
cmp
lahf
and
or
aaa
xor
inc
aaa
push
adcb
mov
sti
aaa
push
mov
fwait
push
mov
xor
sbb
xor
clc
jmp
push
add
xor
xor
pusha
aas
jp
aas
sahf
aas
mov
aas
fnstsw
out
idivb
add
adc
sbb
inc
ds
ds
jbe,pt
jmp
pushl
mov
mov
mov
sarb
ds
ds
sbb
scas
jp
cmp
icebp
cmp
popa
push
idivl
lods
cmp
jle
or
xchg
mov
stos
aaa
call
aaa
stc
aaa
sub
xor
inc
ss
ss
ss
js
mov
ss
inc
xor
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
mov
xor
mov
xor
xor
sahf
xor
xor
add
cmp
aad
adc
xchg
cmpsl
cmp
cmp
aaa
cmp
mov
stos
sub
push
std
aas
cmpsb
jb
mov
nop
cmp
cmp
cli
cmp
xchg
clc
mov
inc
lock
sbb
xchg
mov
mov
call
sti
xor
mov
pop
xor
out
enter
loope
push
divb
xor
push
xor
je
pop
cmp
scas
xor
xor
xor
and
enter
adc
pushl
xorb
xor
xor
ret
xor
jg
mov
adc
sbb
es
dec
aas
fs
loop
add
mov
xchg
ds
ds
lea
sbb
lods
loopne
sar
sarb
push
cmp
xchg
xor
cmp
jg
cmp
xchg
sarl
cmp
cmp
fidivs
lret
cmp
cmp
aas
sbbb
out
loopne
ljmp
out
jge
cmpl
cmp
jbe
xor
push
aas
out
cmp
out
cmpsl
call
mov
xor
adc
xor
xor
xor
xor
xor
xorl
xor
out
and
aas
mov
outsb
outsb
cmp
xchg
cmp
cmp
cmp
pop
adc
cmp
mov
outsb
pushf
push
sbb
cmp
cmp
cmp
cmp
cmp
stos
pop
decb
cmp
sarb
jo
dec
adc
pushf
cmp
incb
sarb
push
pushl
xor
xor
xor
aas
mov
lods
aas
ds
adc
jne
mov
xchg
cmp
cmp
test
fistpll
fidivrl
sahf
push
lcall
mov
aaa
in
aaa
xorl
ss
ss
ss
ss
xor
call
xor
and
add
xor
inc
inc
call
xor
push
xor
pop
mulb
insl
xor
jg
pushl
jns
test
mov
xor
movsl
xor
jg
test
xor
lds
leave
xor
fnsave
call
xor
xor
xor
gs
cli
xchg
xor
mov
xchg
xor
xchg
loop
cmp
xor
xor
xor
xor
xor
jge
popf
xor
call
push
push
aas
xor
push
jp
mov
repnz
sub
pop
sub
mov
fnstcw
std
cmp
cmp
push
inc
insb
cmp
cmp
cmp
pop
xchg
ret
sarl
lods
mov
inc
call
popf
aaa
mov
fidivl
jecxz
and
call
lcall
xor
xor
cmp
add
repz
xor
xor
xor
xor
add
test
aas
idivl
sub
ds
pop
clc
or
lods
cmp
cmp
jo
adc
push
std
cmp
negb
cmp
cmp
cmp
repnz
lahf
push
aaa
out
cli
pop
aaa
aaa
call
pop
xor
pop
xor
mov
outsb
cli
pushl
xor
xor
xor
xor
xor
xor
data16
mov
loopne
xchg
xor
xor
xor
xor
xor
fnstenv
xor
xor
xor
xor
sbb
xor
aas
dec
aas
pop
and
pop
jl
push
xchg
and
inc
and
cs
or
cmp
ja
mov
fidivrl
ja
mov
cmp
mov
idiv
stc
outsl
jbe
scas
add
lret
ss
fdivl
out
ss
and
cmp
pusha
xor
sti
mov
push
or
xor
fbstp
movsb
and
pop
xor
insl
xor
xor
xor
loop
push
xor
mov
pop
std
call
xor
lds
into
xor
xor
xor
xor
xor
stos
repnz
decl
xor
dec
aas
push
mov
insl
aas
jbe
jb
jl
xchg
mov
movsl
aas
mov
jb
or
adc
aaa
pusha
mov
cmp
lcall
pop
ja
sbb
aaa
enter
and
cs
xor
lock
shlb
ret
test
xor
pop
clc
loop
xor
jb
xor
mov
inc
aas
lds
stos
adc
cmp
push
cmp
or
dec
cmp
outsl
cmp
dec
lods
cmp
add
lahf
cs
xor
fmulp
jg
aaa
cs
xor
js
stos
ljmp
ss
ss
pop
push
xor
push
push
aaa
mov
push
xor
dec
pop
loopne
mov
adc
xor
xor
dec
xor
ljmp
ret
cli
out
xor
and
xor
xor
pop
clc
mov
movsb
xor
aas
js
sbb
sbb
and
sub
incl
ds
xor
cmp
cmp
inc
ds
ds
ds
ds
or
jg
sub
cmp
cmp
cmp
cmp
add
mov
dec
or
cmp
xlat
ja
cmp
cmp
bound
dec
xchg
jp
cmp
cmp
outsl
daa
out
clc
adc
adc
sub
jbe
jp
pop
filds
lods
ss
shll
divl
and
sub
call
xor
ljmp
jecxz
add
data16
icebp
jno
push
sbb
pop
push
sub
mov
dec
pop
inc
dec
cmp
lds
sub
enter
sbb
xchg
lock
xor
inc
cmp
push
cmp
pop
cmp
incl
push
jge
js
cmpl
lcall
cmp
cmp
cmp
sbb
ficomps
adc
push
lock
sub
cmp
clc
lahf
sahf
mov
cmp
jb
mov
and
cmp
bound
cmp
pop
cmp
aaa
pop
scas
cmpsl
mov
lret
xor
push
xor
xor
xor
sub
ljmp
push
xor
xor
cmpsb
xor
xor
xor
aas
or
cltd
ss
scas
inc
ds
ds
cmp
inc
cmp
decl
xor
in
adc
and
xor
dec
cmp
cmp
ret
sarb
inc
push
bound
ss
scas
out
clc
inc
xor
cmp
jae
xor
decl
lock
cmc
xor
xor
inc
dec
mov
mov
aas
mov
in
cmp
cmp
cli
cmp
cmp
ds
dec
mov
cwtl
xchg
ret
aaa
push
add
call
pop
lcall
nop
xor
xor
xor
fidivs
test
aam
and
rcrb
aas
cmp
dec
aas
imul
inc
push
outsb
ds
jb
cmp
loopne
cld
cmp
cmp
cmp
idivb
mov
inc
cmp
cmp
push
cmp
cmp
addr16
test
scas
sub
xor
and
jbe
inc
xchg
xor
pop
in
jge
mov
mov
push
or
clc
cmpsl
push
cmp
cmp
je
test
cmp
mov
pop
into
into
aam
imul
mov
imul
cmp
cmp
cmp
cmp
cmp
call
outsb
xor
mov
scas
cmp
cmp
cmp
cmp
push
lock
cmp
xchg
mov
les
das
xor
xor
xor
ss
pop
pop
cltd
aas
sbb
add
ds
std
mov
cmp
lds
and
push
pop
xor
incl
in
cmp
cmp
jb
sub
cmp
jecxz
pop
cmpb
loop
or
mov
sti
cmp
mov
imul
dec
sbb
inc
aaa
imul
cmpsl
pusha
aaa
mov
in
xor
sbb
xor
lock
xor
lret
mov
aaa
xchg
cmp
dec
xor
xor
xor
xor
sub
test
ljmp
xor
xor
xor
and
jmp
push
enter
sbb
cmp
cmp
cmp
jmp
mov
jmp
shll
ss
je
pushl
jp
xorb
lods
and
pop
ljmp
or
sbb
xor
cmpsl
xor
xor
add
mov
xor
add
notb
aaa
jl
xor
xor
lret
xor
jg
fwait
pop
mov
repnz
adc
push
ss
loopne
aaa
cld
xor
jg
xchg
xorb
xor
or
and
loopne
cmp
jns
cmpsl
push
arpl
pop
mov
mov
popf
ds
jg
sarb
loop
hlt
ds
or
ficoml
jmp
sarb
jns
xchg
cs
and
addb
push
hlt
ret
dec
cmp
cmp
jg
scas
lods
aaa
mov
ss
ss
test
push
ja
mov
jbe
xor
pushf
xor
ljmp
sbb
xor
xor
aas
mov
into
pop
cmp
rcrb
xchg
adc
push
fdivrl
cmp
cmp
cmp
cmp
icebp
cmp
push
cmp
mov
cmpsl
or
sarl
bound
jg
or
xor
cmp
orl
mov
cmp
adc
lock
xor
add
out
sbb
jle
aaa
sub
add
jne
xor
pop
stos
adc
aaa
fld
outsb
add
ss
inc
adc
xchg
lea
movsl
lods
ss
ss
neg
fwait
testb
cs
dec
xor
xchg
xor
movl
xor
and
fwait
decb
mov
xor
rolb
out
lock
xor
test
lods
or
xor
movsb
add
adc
xor
fisttpll
repz
hlt
xor
xor
test
scas
xor
inc
mov
jp
mov
push
aas
add
aas
sub
mov
mov
test
add
loopne,pt
xchg
fdivl
in
cmp
int
gs
cmp
fst
bound
cmp
je
mov
mov
xorb
pop
xorb
dec
ss
cmp
jg
push
jnp
scas
xor
pop
xor
xor
mov
pop
xor
pop
cmp
adc
xor
xor
inc
loopne
or
outsb
jp
mov
aas
test
fcom
aas
decb
scas
fisubs
cmp
fdiv
push
test
lcall
test
push
sbb
jp
mov
lds
loope
pop
cld
adc
cmp
inc
push
jbe
cmp
mov
cmp
aam
jg
mov
xchg
outsl
cmp
cmp
cmp
aam
fdivrs
std
cmp
lret
call
cmp
pushf
sub
clc
pop
mov
pop
or
mov
xchg
cmp
and
mov
ret
addb
aaa
ret
inc
outsl
pop
jno
enter
ss
inc
xor
out
out
xor
xor
and
inc
xor
xor
xor
imul
ds
rorb
daa
jbe
dec
inc
hlt
rclb
add
cmp
movsb
fwait
cmp
cmp
mov
add
cmp
sarb
nop
test
mov
dec
fidivrs
clc
adc
cmp
fildl
push
rcrb
push
js
mov
dec
cmp
outsl
push
add
subb
add
cmp
subb
add
aaa
dec
aaa
mov
jg
mov
cli
adc
aam
ss
enter
shll
fimuls
clc
adc
xor
mov
repz
or
xor
adc
xor
sahf
xor
xor
adc
push
mov
xor
push
in
adc
ret
dec
clc
cli
xor
xor
push
mov
add
out
notl
push
add
aas
sbb
sub
xor
aas
popa
sbb
bextr
adc
aas
notb
fadd
test
inc
sbb
push
pop
mov
jg
dec
push
lcall
adc
sbb
fiadds
dec
cmp
xchg
sub
add
cmp
cmp
xchg
aam
pop
mov
push
adc
or
aad
incl
add
push
xchg
subl
cmp
and
dec
cmp
movsl
inc
fildl
mov
decl
mov
cmp
dec
inc
mov
mov
clc
roll
pop
lcall
je
add
aaa
jnp
push
aaa
jecxz
cld
mov
jge
xor
inc
enter
filds
xor
or
cmpsb
xor
xor
xor
push
or
inc
aas
pop
sub
fildll
adc
cltd
aas
lods
and
inc
ds
add
pusha
pop
andb
dec
xchg
sub
cmp
loopne
fwait
lock
cld
cmp
add
ss
mov
cli
cmp
rcr
or
and
cmp
push
mov
mov
dec
mov
lock
in
mov
sbb
shlb
daa
hlt
incl
dec
xchg
pusha
fidivrs
aaa
or
loopne
mov
jg
insl
or
lcall
jbe
nop
mov
test
adc
popa
xor
and
jo
jl
std
es
add
cwtl
add
call
stos
mov
xor
xlat
xor
fcmovne
clc
shlb
out
xor
dec
hlt
xor
xor
xor
push
add
xor
sbb
daa
xabort
cld
jmp
xor
xor
inc
xor
dec
loopne
push
xor
pop
xor
push
insb
xor
or
or
bound
add
mov
mov
lcall
xor
mov
stos
mov
int
enter
decb
pusha
xor
ljmp
mov
aas
add
or
add
aas
sbb
mov
pusha
mov
add
cmp
mov
dec
mov
aas
sti
jg
fsubs
push
jns
inc
mov
or
cmpsb
aas
scas
cmp
ljmp
stos
aas
mov
adc
aas
sarb
fdivrl
in
mov
aas
stc
and
dec
test
add
and
add
cmpsb
lods
add
int
adc
xlat
fistpll
fimull
and
adc
fs
cmp
inc
sti
cmp
inc
cmp
data16
cmp
loope
sub
pop
or
adc
sub
sub
cmp
adc
repz
lods
aad
dec
enter
add
mov
cmpsb
sbb
dec
ss
cmp
cmc
ss
sub
xor
pusha
xchg
xorl
xor
orl
xor
ss
pusha
add
and
add
inc
jb
es
xlat
in
push
clc
fisttps
cmp
cmp
cmp
in
mov
fisttpll
shlb
cmp
scas
add
fdivrs
cmp
and
and
cmp
cmp
ja
jl
inc
repnz
jg
add
xorps
xchg
ss
fbstp
adc
jbe
xor
pop
lods
mov
mov
and
xor
xor
xor
push
pop
mov
adc
outsb
fbld
repnz
pop
aad
dec
jb
jp
inc
xor
cmpsb
scas
lock
xlat
sub
pushf
cmp
dec
adc
mov
sahf
lret
and
cmp
aam
das
sbb
aaa
loop
or
je
cmp
rorb
ljmp
hlt
mov
add
pop
cmp
xchg
cmp
cmp
cld
add
cmp
pop
cmp
icebp
sbb
ss
adc
in
popa
xor
fistl
push
movsb
and
push
and
cmpsb
and
and
and
mov
push
cwtl
adc
cwtl
mov
jg
adc
xor
hlt
adc
loope
xchg
cmp
cmp
cmp
dec
and
cmp
add
dec
cmp
or
xor
inc
xchg
and
mov
idiv
pop
jno
push
bound
and
dec
xor
sub
cmp
and
add
call
ss
xor
or
mov
loopne
sub
aas
xchg
cmp
cmpl
add
dec
inc
aaa
xorb
aaa
add
sbb
test
push
mov
adc
xor
ljmp
xor
pop
xor
xor
adcb
push
mov
pusha
es
iret
cmp
les
out
jecxz
out
test
push
imul
fiaddl
jle
push
in
adc
cmp
out
daa
push
push
dec
add
sub
cli
xchg
push
inc
outsb
out
add
dec
cmp
dec
mov
push
cmp
rorb
addr16
arpl
or
out
add
ja
or
jg
pusha
xchg
add
lahf
lock
loopne,pn
mov
cmp
shrb
mov
dec
mov
iret
dec
adc
lcall
push
cmp
sbb
pop
cmp
arpl
cmp
sbbl
les
and
cmp
push
cmpsl
cmp
mov
mov
mov
push
push
fdiv
pop
rolb
lock
cmp
out
lods
or
pop
jmp
idivl
repz
push
sti
dec
and
cmp
jl
push
xchg
or
jbe
inc
pop
lock
hlt
xor
cmp
rclb
arpl
insb
xor
sub
std
xor
aam
pop
sub
xor
xor
outsb
mov
loopne
mov
jg
cmp
or
cmpsl
cmp
mov
dec
cmp
or
dec
shlb
sub
or
add
mov
xchg
adc
scas
ret
fimuls
mov
pop
adc
outsl
sarb
cmp
cmp
and
adc
ret
xor
push
faddl
cld
add
sub
xor
jmp
xorl
inc
xor
mov
insb
ret
and
sub
fbstp
insl
decl
fcoms
xor
xor
decl
ljmp
push
xor
add
add
les
xor
xor
mov
push
call
addl
adc
jg
xor
xor
repz
xor
xor
inc
xor
inc
xor
jge
add
cmpl
xor
aaa
repz
stos
incb
sbb
and
inc
arpl
lcall
sti
jae
xorl
adc
xor
insb
jecxz
xchg
add
adc
and
clc
or
inc
xor
arpl
pop
xorl
xor
adc
pop
not
jae
cmp
xorb
or
pop
dec
pop
xor
inc
xor
lcall
mov
xor
lock
inc
xor
pop
dec
inc
in
adc
nop
pop
adc
outsl
xor
pop
jae
icebp
or
sbb
or
add
cmp
dec
add
insl
mov
xchg
add
lcall
or
fmuls
rorb
sbb
mov
out
sbb
pop
jno
insl
adc
and
clc
or
loop
lods
pop
jl
int
cmp
movsl
mov
pop
lret
hlt
std
aad
jb
add
and
call
xchg
push
add
in
mov
inc
enter
std
jle
aaa
cld
frstor
popa
andl
and
add
leave
or
push
cmp
pusha
jbe
dec
out
adc
jmp
jnp
mov
iret
add
push
rorb
push
pop
add
dec
pop
loope
dec
add
sub
sub
sahf
or
mov
pushf
clc
add
jmp
cmpsb
mov
mov
mov
jle
lock
xor
fwait
enter
add
clc
das
cmpl
push
and
lcall
push
repnz
dec
fnsave
popf
add
addl
outsl
push
inc
cmp
ja
sarb
pusha
xchg
test
jg
inc
loopne
pushf
add
std
or
inc
idivl
add
jo
das
psrld
call
int
sbb
lods
add
icebp
loopne
cmpl
fcompl
push
push
std
aad
mov
dec
push
mov
outsb
decl
lock
jg
mov
push
jecxz
int
push
xchg
sbb
mov
int
inc
outsb
add
sti
call
cmp
mov
out
sbb
lods
les
xchg
mov
dec
fadds
jl
jg
xlat
pop
and
jbe
movsl
add
mov
mov
nop
jg
jg
std
jecxz
lds
cmp
mov
insb
add
jnp
mov
push
sbb
cmc
decl
cmp
clc
mov
dec
xor
jg
fisttps
mov
pop
sub
in
dec
arpl
popa
jmp
incl
xchg
cmpsl
xor
adc
adc
cli
fistps
or
mov
xchg
sub
jmp
sub
fisubs
add
adc
sahf
hlt
mov
popf
inc
int
xlat
idiv
stos
cmc
loopne
adc
ja
cli
addl
popl
out
xchg
mov
decl
incb
daa
out
push
xor
jge
add
enter
cltd
mov
mov
aaa
jg
fs
stos
into
aad
cmp
inc
mov
mov
loope
adc
aam
je
jne
add
jg
inc
outsl
insl
jo
sbb
outsb
push
je
je
mov
imul
insb
insb
outsl
arpl
push
inc
arpl
jbe
mov
inc
je
jne
jns
push
insl
push
imul
call
imul
sub
bound
xchg
mov
mov
dec
jae
popa
fs
jb
gs
je
sbb
mov
or
pusha
adc
inc
jnp
inc
imul
pusha
imul
and
push
cmp
ss
rcrb
push
jb
gs
dec
fs
inc
lock
sub
cs
les
jnp
negb
dec
popa
jo
imul
cmp
push
jmp
cmp
ret
cltd
int
dec
enter
jb
inc
gs
imul
adc
insl
add
jae
jae
sub
adc
roll
shlb
fistpll
mov
jp
adcb
push
mov
adcb
jmp
adcb
dec
outsl
jbe
loopne
adc
sbb
inc
roll
test
push
jae
pop
popaw
mov
inc
dec
inc
es
loopne
ljmp
cmp
mov
inc
jo
push
popl
mov
xor
dec
popa
adc
pop
imul
arpl
imul
int
test
fmull
add
inc
xor
test
xor
inc
adcl
xchg
dec
sbb
faddl
cmp
mov
jns
inc
iret
mov
sbb
sub
inc
outsb
or
insb
cmp
lea
dec
sbbl
fbld
adc
and
jnp
fcomps
or
pop
mov
insb
or
arpl
push
mov
dec
adc
dec
add
dec
mov
add
push
test
inc
je
stos
adc
mov
jo
iret
loopne
cmp
adc
inc
dec
push
xchg
enter
mov
sbb
jbe
adc
mov
bound
add
sub
jae
gs
popa
in
push
dec
push
push
mov
outsl
pop
data16
icebp
sub
jbe
sub
fidivrl
ret
push
jo
mov
in
adc
xchg
inc
sub
mov
out
sub
jbe
jns
dec
insb
adc
ja
fsubp
and
dec
and
movsb
pop
cmc
push
and
jne
fistl
mov
mov
push
cmp
sbb
mov
out
or
push
add
adc
adc
fistl
gs
xor
and
fcmove
dec
outsb
sbb
inc
add
ss
lea
and
or
and
aam
add
leave
adcl
pop
cltd
lds
fs
pop
cmp
dec
and
imul
xorb
sub
jo
mov
sahf
jae
adc
andl
lahf
push
mov
ret
mov
inc
add
orb
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
and
add
adc
add
add
add
add
add
add
or
add
add
addb
addb
add
test
add
rolb
add
clc
add
addb
add
dec
add
addb
add
jo
add
cwtl
add
orb
add
rolb
orb
add
call
add
add
add
add
add
add
add
add
add
cwtl
add
add
add
add
in
add
add
add
add
add
add
add
rolb
add
add
add
in
add
add
add
add
add
add
add
call
adc
sbb
add
in
add
add
add
add
add
add
add
adc
add
mov
dec
add
add
in
add
add
add
add
add
add
add
cmp
add
aam
dec
add
add
in
add
add
add
add
add
add
add
pusha
add
add
inc
dec
add
add
in
add
add
add
add
add
add
add
mov
add
adc
dec
add
add
in
add
add
add
add
add
add
add
mov
add
xor
dec
add
add
in
add
add
add
add
add
add
add
fadds
add
push
jae
add
add
in
add
add
add
add
add
add
add
add
add
je
dec
add
add
in
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
inc
add
add
inc
add
add
add
add
add
inc
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jl
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
pop
push
add
add
xor
xor
xor
cmp
xor
xor
add
add
dec
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
add
add
add
jns
jae
je
add
jae
sub
and
dec
add
arpl
add
add
sbb
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsl
add
imul
add
jbe
add
add
insb
add
jae
push
add
add
add
add
add
xor
aaa
add
add
add
add
add
inc
add
insb
add
inc
add
je
add
je
jae
add
add
jae
ja
data16
add
insb
add
add
jo
add
mov
add
imul
dec
add
add
dec
add
insl
add
add
inc
add
add
add
add
insb
add
jae
push
add
jbe
imul
sub
sub
add
ja
data16
add
add
je
jne
jb
add
jo
insb
add
jae
push
add
jbe
imul
sub
sub
add
jo
insb
add
add
add
add
add
add
insb
add
jae
push
add
jo
add
and
sub
sub
add
data16
sub
add
add
xchg
aaa
add
add
dec
add
inc
add
add
add
add
jo
jo
insb
add
arpl
popa
add
add
outsb
add
add
sub
add
arpl
imul
add
jbe
add
add
jae
push
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
jne
je
jne
jb
add
jo
insb
add
jae
push
add
adc
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsl
add
imul
add
jbe
add
add
insb
add
jae
push
add
add
add
imul
push
add
jb
jae
imul
add
add
cmp
sub
xor
sub
xor
aaa
add
xor
add
add
dec
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
bound
add
add
insb
add
jae
push
add
add
add
and
cmp
add
add
add
add
daa
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
add
add
add
add
push
add
insb
add
jns
add
add
add
outsl
add
jns
jb
imul
je
and
test
add
add
add
add
add
add
add
add
add
bound
add
add
jns
jae
je
add
jae
and
dec
add
arpl
outsl
add
jo
outsl
add
popa
add
add
add
add
insb
add
add
imul
je
jae
and
push
add
jae
add
jbe
add
add
add
jb
outsl
add
add
je
add
add
jns
and
push
add
add
add
add
popa
add
add
je
and
add
cmp
aaa
add
add
xor
xor
aaa
add
add
add
popa
add
add
je
jae
and
push
add
outsb
add
add
add
add
outsb
add
add
add
and
push
add
imul
add
add
je
popa
add
add
and
popa
add
add
add
je
push
add
add
outsl
add
outsb
add
add
add
add
add
add
bound
add
add
outsb
add
add
insb
add
jae
push
add
add
add
imul
add
and
je
jb
popa
add
add
popa
add
imul
add
add
jb
and
jb
add
imul
add
add
add
add
add
insl
add
jb
imul
add
add
outsb
add
add
add
and
push
add
imul
add
add
je
popa
add
add
and
popa
add
add
add
jb
and
outsl
add
add
jb
and
arpl
outsl
add
outsb
add
add
add
add
add
add
adc
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
add
bound
add
add
insb
add
jae
push
add
add
add
add
add
inc
add
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
outsb
add
jae
ja
data16
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
cmp
sub
xor
sub
xor
aaa
add
xor
add
add
sbb
add
add
inc
add
bound
jne
add
add
add
xor
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
push
into
push
mov
cmp
or
jp
clc
cmp
or
popa
cwtl
mov
dec
or
outsl
lea
push
xchg
sub
test
lds
pop
mov
xchg
sbb
ficoml
xchg
pop
mov
es
or
loopne
clc
cmp
jnp
jl
inc
notl
scas
push
mov
rclb
out
lods
sbb
aaa
imul
dec
enter
xchg
mov
mov
pop
mov
mov
jno
neg
jmp
imul
xchg
fs
push
es
sub
jae
adc
inc
fisubl
fs
shr
mov
aaa
or
loope
mov
repnz
adc
scas
loop
imul
or
outsb
adc
inc
js
mov
mov
test
xchg
in
inc
push
cwtl
xchg
xchg
mov
pop
sbb
loop
std
pop
xchg
push
push
push
jnp
xchg
or
mov
inc
xor
jle
push
shrl
mov
leave
popa
sbb
jae
or
or
jl
pop
pop
sbb
cli
sbb
inc
in
or
negb
cmp
mov
subb
jo
push
cmp
inc
movsb
shll
mov
shl
test
inc
push
sbb
popf
xchg
lahf
pop
dec
cs
aaa
imul
data16
inc
add
inc
jbe
push
cli
fwait
das
sub
call
repz
mov
jae
and
ds
mov
pop
xor
xor
fisttpl
movsb
push
jns
mov
bound
movsb
or
int
mov
leave
jmp
clc
sbb
cltd
mov
in
jmp
mov
int
or
into
sbb
mov
aad
outsb
jecxz
nop
xchg
pushf
jmp
and
mov
dec
hlt
adc
je
rorb
bound
insb
ret
sbb
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jl
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
pop
push
add
add
xor
xor
xor
cmp
xor
xor
add
add
dec
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
add
add
add
jns
jae
je
add
jae
sub
and
dec
add
arpl
add
add
sbb
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsl
add
imul
add
jbe
add
add
insb
add
jae
push
add
add
add
add
add
xor
aaa
add
add
add
add
add
inc
add
insb
add
inc
add
je
add
je
jae
add
add
jae
ja
data16
add
insb
add
add
jo
add
mov
add
imul
dec
add
add
dec
add
insl
add
add
inc
add
add
add
add
insb
add
jae
push
add
jbe
imul
sub
sub
add
ja
data16
add
add
je
jne
jb
add
jo
insb
add
jae
push
add
jbe
imul
sub
sub
add
jo
insb
add
add
add
add
add
add
insb
add
jae
push
add
jo
add
and
sub
sub
add
data16
sub
add
add
xchg
aaa
add
add
dec
add
inc
add
add
add
add
jo
jo
insb
add
arpl
popa
add
add
outsb
add
add
sub
add
arpl
imul
add
jbe
add
add
jae
push
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
jne
je
jne
jb
add
jo
insb
add
jae
push
add
adc
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsl
add
imul
add
jbe
add
add
insb
add
jae
push
add
add
add
imul
push
add
jb
jae
imul
add
add
cmp
sub
xor
sub
xor
aaa
add
xor
add
add
dec
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
bound
add
add
insb
add
jae
push
add
add
add
and
cmp
add
add
add
add
daa
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
add
add
add
add
push
add
insb
add
jns
add
add
add
outsl
add
jns
jb
imul
je
and
test
add
add
add
add
add
add
add
add
add
bound
add
add
jns
jae
je
add
jae
and
dec
add
arpl
outsl
add
jo
outsl
add
popa
add
add
add
add
insb
add
add
imul
je
jae
and
push
add
jae
add
jbe
add
add
add
jb
outsl
add
add
je
add
add
jns
and
push
add
add
add
add
popa
add
add
je
and
add
cmp
aaa
add
add
xor
xor
aaa
add
add
add
popa
add
add
je
jae
and
push
add
outsb
add
add
add
add
outsb
add
add
add
and
push
add
imul
add
add
je
popa
add
add
and
popa
add
add
add
je
push
add
add
outsl
add
outsb
add
add
add
add
add
add
bound
add
add
outsb
add
add
insb
add
jae
push
add
add
add
imul
add
and
je
jb
popa
add
add
popa
add
imul
add
add
jb
and
jb
add
imul
add
add
add
add
add
insl
add
jb
imul
add
add
outsb
add
add
add
and
push
add
imul
add
add
je
popa
add
add
and
popa
add
add
add
jb
and
outsl
add
add
jb
and
arpl
outsl
add
outsb
add
add
add
add
add
add
adc
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
add
bound
add
add
insb
add
jae
push
add
add
add
add
add
inc
add
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
outsb
add
jae
ja
data16
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
cmp
sub
xor
sub
xor
aaa
add
xor
add
add
sbb
add
add
inc
add
bound
jne
add
add
add
xor
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
push
into
verr
push
inc
fisttps
aad
fabs
sbb
fwait
pop
popa
std
xlat
jmp
push
mov
and
roll
sub
and
cli
rcrb
jne
xor
paddq
adc
loop,pn
popl
sti
in
jns
jb
aas
movsb
flds
data16
cmp
stos
ds
stc
into
or
add
clc
out
cwtl
nop
jnp
sahf
mov
enter
out
or
dec
pop
out
sbb
and
jg
sub
push
test
das
push
xor
pop
out
mov
mov
das
mov
shll
cmp
mov
sub
xor
mov
fidivl
lcall
enter
jge
jo
xlat
daa
pop
addr16
add
mov
inc
mov
mov
dec
lock
imul
or
sbb
movsb
mul
stos
test
fistpl
mov
clc
int3
xor
cwtl
js
mov
push
in
lret
cmp
outsl
cmovge
cmp
push
jl
ds
pop
dec
loope
push
cltd
mov
stos
ret
xchg
mov
dec
and
pop
xor
inc
jno
mov
xchg
mov
into
cli
in
ret
loop
pop
mov
imul
push
cmovle
ds
jmp
mov
or
int3
mov
pop
mov
shl
clc
dec
fs
xchg
mov
outsl
ljmp
or
aam
out
push
or
push
or
xchg
sub
dec
ret
xchg
adc
inc
mov
lcall
lods
repnz
adc
add
mov
add
add
pop
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jl
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
pop
push
add
add
xor
xor
xor
cmp
xor
xor
add
add
dec
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
add
add
add
jns
jae
je
add
jae
sub
and
dec
add
arpl
add
add
sbb
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsl
add
imul
add
jbe
add
add
insb
add
jae
push
add
add
add
add
add
xor
aaa
add
add
add
add
add
inc
add
insb
add
inc
add
je
add
je
jae
add
add
jae
ja
data16
add
insb
add
add
jo
add
mov
add
imul
dec
add
add
dec
add
insl
add
add
inc
add
add
add
add
insb
add
jae
push
add
jbe
imul
sub
sub
add
ja
data16
add
add
je
jne
jb
add
jo
insb
add
jae
push
add
jbe
imul
sub
sub
add
jo
insb
add
add
add
add
add
add
insb
add
jae
push
add
jo
add
and
sub
sub
add
data16
sub
add
add
xchg
aaa
add
add
dec
add
inc
add
add
add
add
jo
jo
insb
add
arpl
popa
add
add
outsb
add
add
sub
add
arpl
imul
add
jbe
add
add
jae
push
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
jne
je
jne
jb
add
jo
insb
add
jae
push
add
adc
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsl
add
imul
add
jbe
add
add
insb
add
jae
push
add
add
add
imul
push
add
jb
jae
imul
add
add
cmp
sub
xor
sub
xor
aaa
add
xor
add
add
dec
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
bound
add
add
insb
add
jae
push
add
add
add
and
cmp
add
add
add
add
daa
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
add
add
add
add
push
add
insb
add
jns
add
add
add
outsl
add
jns
jb
imul
je
and
test
add
add
add
add
add
add
add
add
add
bound
add
add
jns
jae
je
add
jae
and
dec
add
arpl
outsl
add
jo
outsl
add
popa
add
add
add
add
insb
add
add
imul
je
jae
and
push
add
jae
add
jbe
add
add
add
jb
outsl
add
add
je
add
add
jns
and
push
add
add
add
add
popa
add
add
je
and
add
cmp
aaa
add
add
xor
xor
aaa
add
add
add
popa
add
add
je
jae
and
push
add
outsb
add
add
add
add
outsb
add
add
add
and
push
add
imul
add
add
je
popa
add
add
and
popa
add
add
add
je
push
add
add
outsl
add
outsb
add
add
add
add
add
add
bound
add
add
outsb
add
add
insb
add
jae
push
add
add
add
imul
add
and
je
jb
popa
add
add
popa
add
imul
add
add
jb
and
jb
add
imul
add
add
add
add
add
insl
add
jb
imul
add
add
outsb
add
add
add
and
push
add
imul
add
add
je
popa
add
add
and
popa
add
add
add
jb
and
outsl
add
add
jb
and
arpl
outsl
add
outsb
add
add
add
add
add
add
adc
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
add
bound
add
add
insb
add
jae
push
add
add
add
add
add
inc
add
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
outsb
add
jae
ja
data16
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
cmp
sub
xor
sub
xor
aaa
add
xor
add
add
sbb
add
add
inc
add
bound
jne
add
add
add
xor
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
push
into
verr
push
inc
fisttps
aad
fabs
sbb
fwait
pop
popa
std
xlat
jmp
push
mov
and
roll
sub
and
cli
rcrb
jne
xor
paddq
adc
loop,pn
popl
sti
in
jns
jb
aas
movsb
flds
data16
cmp
stos
ds
stc
into
or
add
clc
out
cwtl
nop
jnp
sahf
mov
enter
out
or
dec
pop
out
sbb
and
jg
sub
push
test
das
push
xor
pop
out
mov
mov
das
mov
shll
cmp
mov
sub
xor
mov
fidivl
lcall
enter
jge
jo
xlat
daa
pop
addr16
add
mov
inc
mov
mov
dec
lock
imul
or
sbb
movsb
mul
stos
test
fistpl
mov
clc
int3
xor
cwtl
js
mov
push
in
lret
cmp
outsl
cmovge
cmp
push
jl
ds
pop
dec
loope
push
cltd
mov
stos
ret
xchg
mov
dec
and
pop
xor
inc
jno
mov
xchg
mov
into
cli
in
ret
loop
pop
mov
imul
push
cmovle
ds
jmp
mov
or
int3
mov
pop
mov
shl
clc
dec
fs
xchg
mov
outsl
ljmp
or
aam
out
push
or
push
or
xchg
sub
dec
ret
xchg
adc
inc
mov
lcall
lods
repnz
adc
add
mov
add
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jl
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
pop
push
add
add
xor
xor
xor
cmp
xor
xor
add
add
dec
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
add
add
add
jns
jae
je
add
jae
sub
and
dec
add
arpl
add
add
sbb
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsl
add
imul
add
jbe
add
add
insb
add
jae
push
add
add
add
add
add
xor
aaa
add
add
add
add
add
inc
add
insb
add
inc
add
je
add
je
jae
add
add
jae
ja
data16
add
insb
add
add
jo
add
mov
add
imul
dec
add
add
dec
add
insl
add
add
inc
add
add
add
add
insb
add
jae
push
add
jbe
imul
sub
sub
add
ja
data16
add
add
je
jne
jb
add
jo
insb
add
jae
push
add
jbe
imul
sub
sub
add
jo
insb
add
add
add
add
add
add
insb
add
jae
push
add
jo
add
and
sub
sub
add
data16
sub
add
add
xchg
aaa
add
add
dec
add
inc
add
add
add
add
jo
jo
insb
add
arpl
popa
add
add
outsb
add
add
sub
add
arpl
imul
add
jbe
add
add
jae
push
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
jne
je
jne
jb
add
jo
insb
add
jae
push
add
adc
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsl
add
imul
add
jbe
add
add
insb
add
jae
push
add
add
add
imul
push
add
jb
jae
imul
add
add
cmp
sub
xor
sub
xor
aaa
add
xor
add
add
dec
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
bound
add
add
insb
add
jae
push
add
add
add
and
cmp
add
add
add
add
daa
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
add
add
add
add
push
add
insb
add
jns
add
add
add
outsl
add
jns
jb
imul
je
and
test
add
add
add
add
add
add
add
add
add
bound
add
add
jns
jae
je
add
jae
and
dec
add
arpl
outsl
add
jo
outsl
add
popa
add
add
add
add
insb
add
add
imul
je
jae
and
push
add
jae
add
jbe
add
add
add
jb
outsl
add
add
je
add
add
jns
and
push
add
add
add
add
popa
add
add
je
and
add
cmp
aaa
add
add
xor
xor
aaa
add
add
add
popa
add
add
je
jae
and
push
add
outsb
add
add
add
add
outsb
add
add
add
and
push
add
imul
add
add
je
popa
add
add
and
popa
add
add
add
je
push
add
add
outsl
add
outsb
add
add
add
add
add
add
bound
add
add
outsb
add
add
insb
add
jae
push
add
add
add
imul
add
and
je
jb
popa
add
add
popa
add
imul
add
add
jb
and
jb
add
imul
add
add
add
add
add
insl
add
jb
imul
add
add
outsb
add
add
add
and
push
add
imul
add
add
je
popa
add
add
and
popa
add
add
add
jb
and
outsl
add
add
jb
and
arpl
outsl
add
outsb
add
add
add
add
add
add
adc
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
add
bound
add
add
insb
add
jae
push
add
add
add
add
add
inc
add
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
outsb
add
jae
ja
data16
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
cmp
sub
xor
sub
xor
aaa
add
xor
add
add
sbb
add
add
inc
add
bound
jne
add
add
add
xor
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
push
into
verr
push
inc
fisttps
aad
fabs
sbb
fwait
pop
popa
std
xlat
jmp
push
mov
and
roll
sub
and
cli
rcrb
jne
xor
paddq
adc
loop,pn
popl
sti
in
jns
jb
aas
movsb
flds
data16
cmp
stos
ds
stc
into
or
add
clc
out
cwtl
nop
jnp
sahf
mov
enter
out
or
dec
pop
out
sbb
and
jg
sub
push
test
das
push
xor
pop
out
mov
mov
das
mov
shll
cmp
mov
sub
xor
mov
fidivl
lcall
enter
jge
jo
xlat
daa
pop
addr16
add
mov
inc
mov
mov
dec
lock
imul
or
sbb
movsb
mul
stos
test
fistpl
mov
clc
int3
xor
cwtl
js
mov
push
in
lret
cmp
outsl
cmovge
cmp
push
jl
ds
pop
dec
loope
push
cltd
mov
stos
ret
xchg
mov
dec
and
pop
xor
inc
jno
mov
xchg
mov
into
cli
in
ret
loop
pop
mov
imul
push
cmovle
ds
jmp
mov
or
int3
mov
pop
mov
shl
clc
dec
fs
xchg
mov
outsl
ljmp
or
aam
out
push
or
push
or
xchg
sub
dec
ret
xchg
adc
inc
mov
lcall
lods
repnz
adc
add
mov
add
add
repnz
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jl
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
pop
push
add
add
xor
xor
xor
cmp
xor
xor
add
add
dec
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
add
add
add
jns
jae
je
add
jae
sub
and
dec
add
arpl
add
add
sbb
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsl
add
imul
add
jbe
add
add
insb
add
jae
push
add
add
add
add
add
xor
aaa
add
add
add
add
add
inc
add
insb
add
inc
add
je
add
je
jae
add
add
jae
ja
data16
add
insb
add
add
jo
add
mov
add
imul
dec
add
add
dec
add
insl
add
add
inc
add
add
add
add
insb
add
jae
push
add
jbe
imul
sub
sub
add
ja
data16
add
add
je
jne
jb
add
jo
insb
add
jae
push
add
jbe
imul
sub
sub
add
jo
insb
add
add
add
add
add
add
insb
add
jae
push
add
jo
add
and
sub
sub
add
data16
sub
add
add
xchg
aaa
add
add
dec
add
inc
add
add
add
add
jo
jo
insb
add
arpl
popa
add
add
outsb
add
add
sub
add
arpl
imul
add
jbe
add
add
jae
push
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
jne
je
jne
jb
add
jo
insb
add
jae
push
add
adc
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsl
add
imul
add
jbe
add
add
insb
add
jae
push
add
add
add
imul
push
add
jb
jae
imul
add
add
cmp
sub
xor
sub
xor
aaa
add
xor
add
add
dec
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
bound
add
add
insb
add
jae
push
add
add
add
and
cmp
add
add
add
add
daa
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
add
add
add
add
push
add
insb
add
jns
add
add
add
outsl
add
jns
jb
imul
je
and
test
add
add
add
add
add
add
add
add
add
bound
add
add
jns
jae
je
add
jae
and
dec
add
arpl
outsl
add
jo
outsl
add
popa
add
add
add
add
insb
add
add
imul
je
jae
and
push
add
jae
add
jbe
add
add
add
jb
outsl
add
add
je
add
add
jns
and
push
add
add
add
add
popa
add
add
je
and
add
cmp
aaa
add
add
xor
xor
aaa
add
add
add
popa
add
add
je
jae
and
push
add
outsb
add
add
add
add
outsb
add
add
add
and
push
add
imul
add
add
je
popa
add
add
and
popa
add
add
add
je
push
add
add
outsl
add
outsb
add
add
add
add
add
add
bound
add
add
outsb
add
add
insb
add
jae
push
add
add
add
imul
add
and
je
jb
popa
add
add
popa
add
imul
add
add
jb
and
jb
add
imul
add
add
add
add
add
insl
add
jb
imul
add
add
outsb
add
add
add
and
push
add
imul
add
add
je
popa
add
add
and
popa
add
add
add
jb
and
outsl
add
add
jb
and
arpl
outsl
add
outsb
add
add
add
add
add
add
adc
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
add
bound
add
add
insb
add
jae
push
add
add
add
add
add
inc
add
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
outsb
add
jae
ja
data16
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
cmp
sub
xor
sub
xor
aaa
add
xor
add
add
sbb
add
add
inc
add
bound
jne
add
add
add
xor
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
push
into
verr
push
inc
fisttps
aad
fabs
sbb
fwait
pop
popa
std
xlat
jmp
push
mov
and
roll
sub
and
cli
rcrb
jne
xor
paddq
adc
loop,pn
popl
sti
in
jns
jb
aas
movsb
flds
data16
cmp
stos
ds
stc
into
or
add
clc
out
cwtl
nop
jnp
sahf
mov
enter
out
or
dec
pop
out
sbb
and
jg
sub
push
test
das
push
xor
pop
out
mov
mov
das
mov
shll
cmp
mov
sub
xor
mov
fidivl
lcall
enter
jge
jo
xlat
daa
pop
addr16
add
mov
inc
mov
mov
dec
lock
imul
or
sbb
movsb
mul
stos
test
fistpl
mov
clc
int3
xor
cwtl
js
mov
push
in
lret
cmp
outsl
cmovge
cmp
push
jl
ds
pop
dec
loope
push
cltd
mov
stos
ret
xchg
mov
dec
and
pop
xor
inc
jno
mov
xchg
mov
into
cli
in
ret
loop
pop
mov
imul
push
cmovle
ds
jmp
mov
or
int3
mov
pop
mov
shl
clc
dec
fs
xchg
mov
outsl
ljmp
or
aam
out
push
or
push
or
xchg
sub
dec
ret
xchg
adc
inc
mov
lcall
lods
repnz
adc
add
mov
add
add
add
sbb
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jl
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
pop
push
add
add
xor
xor
xor
cmp
xor
xor
add
add
dec
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
add
add
add
jns
jae
je
add
jae
sub
and
dec
add
arpl
add
add
sbb
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsl
add
imul
add
jbe
add
add
insb
add
jae
push
add
add
add
add
add
xor
aaa
add
add
add
add
add
inc
add
insb
add
inc
add
je
add
je
jae
add
add
jae
ja
data16
add
insb
add
add
jo
add
mov
add
imul
dec
add
add
dec
add
insl
add
add
inc
add
add
add
add
insb
add
jae
push
add
jbe
imul
sub
sub
add
ja
data16
add
add
je
jne
jb
add
jo
insb
add
jae
push
add
jbe
imul
sub
sub
add
jo
insb
add
add
add
add
add
add
insb
add
jae
push
add
jo
add
and
sub
sub
add
data16
sub
add
add
xchg
aaa
add
add
dec
add
inc
add
add
add
add
jo
jo
insb
add
arpl
popa
add
add
outsb
add
add
sub
add
arpl
imul
add
jbe
add
add
jae
push
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
jne
je
jne
jb
add
jo
insb
add
jae
push
add
adc
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsl
add
imul
add
jbe
add
add
insb
add
jae
push
add
add
add
imul
push
add
jb
jae
imul
add
add
cmp
sub
xor
sub
xor
aaa
add
xor
add
add
dec
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
bound
add
add
insb
add
jae
push
add
add
add
and
cmp
add
add
add
add
daa
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
add
add
add
add
push
add
insb
add
jns
add
add
add
outsl
add
jns
jb
imul
je
and
test
add
add
add
add
add
add
add
add
add
bound
add
add
jns
jae
je
add
jae
and
dec
add
arpl
outsl
add
jo
outsl
add
popa
add
add
add
add
insb
add
add
imul
je
jae
and
push
add
jae
add
jbe
add
add
add
jb
outsl
add
add
je
add
add
jns
and
push
add
add
add
add
popa
add
add
je
and
add
cmp
aaa
add
add
xor
xor
aaa
add
add
add
popa
add
add
je
jae
and
push
add
outsb
add
add
add
add
outsb
add
add
add
and
push
add
imul
add
add
je
popa
add
add
and
popa
add
add
add
je
push
add
add
outsl
add
outsb
add
add
add
add
add
add
bound
add
add
outsb
add
add
insb
add
jae
push
add
add
add
imul
add
and
je
jb
popa
add
add
popa
add
imul
add
add
jb
and
jb
add
imul
add
add
add
add
add
insl
add
jb
imul
add
add
outsb
add
add
add
and
push
add
imul
add
add
je
popa
add
add
and
popa
add
add
add
jb
and
outsl
add
add
jb
and
arpl
outsl
add
outsb
add
add
add
add
add
add
adc
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
add
bound
add
add
insb
add
jae
push
add
add
add
add
add
inc
add
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
outsb
add
jae
ja
data16
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
cmp
sub
xor
sub
xor
aaa
add
xor
add
add
sbb
add
add
inc
add
bound
jne
add
add
add
xor
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
push
into
verr
push
inc
fisttps
aad
fabs
sbb
fwait
pop
popa
std
xlat
jmp
push
mov
and
roll
sub
and
cli
rcrb
jne
xor
paddq
adc
loop,pn
popl
sti
in
jns
jb
aas
movsb
flds
data16
cmp
stos
ds
stc
into
or
add
clc
out
cwtl
nop
jnp
sahf
mov
enter
out
or
dec
pop
out
sbb
and
jg
sub
push
test
das
push
xor
pop
out
mov
mov
das
mov
shll
cmp
mov
sub
xor
mov
fidivl
lcall
enter
jge
jo
xlat
daa
pop
addr16
add
mov
inc
mov
mov
dec
lock
imul
or
sbb
movsb
mul
stos
test
fistpl
mov
clc
int3
xor
cwtl
js
mov
push
in
lret
cmp
outsl
cmovge
cmp
push
jl
ds
pop
dec
loope
push
cltd
mov
stos
ret
xchg
mov
dec
and
pop
xor
inc
jno
mov
xchg
mov
into
cli
in
ret
loop
pop
mov
imul
push
cmovle
ds
jmp
mov
or
int3
mov
pop
mov
shl
clc
dec
fs
xchg
mov
outsl
ljmp
or
aam
out
push
or
push
or
xchg
sub
dec
ret
xchg
adc
inc
mov
lcall
lods
repnz
adc
add
mov
add
add
adc
sbb
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jl
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
pop
push
add
add
xor
xor
xor
cmp
xor
xor
add
add
dec
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
add
add
add
jns
jae
je
add
jae
sub
and
dec
add
arpl
add
add
sbb
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsl
add
imul
add
jbe
add
add
insb
add
jae
push
add
add
add
add
add
xor
aaa
add
add
add
add
add
inc
add
insb
add
inc
add
je
add
je
jae
add
add
jae
ja
data16
add
insb
add
add
jo
add
mov
add
imul
dec
add
add
dec
add
insl
add
add
inc
add
add
add
add
insb
add
jae
push
add
jbe
imul
sub
sub
add
ja
data16
add
add
je
jne
jb
add
jo
insb
add
jae
push
add
jbe
imul
sub
sub
add
jo
insb
add
add
add
add
add
add
insb
add
jae
push
add
jo
add
and
sub
sub
add
data16
sub
add
add
xchg
aaa
add
add
dec
add
inc
add
add
add
add
jo
jo
insb
add
arpl
popa
add
add
outsb
add
add
sub
add
arpl
imul
add
jbe
add
add
jae
push
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
jne
je
jne
jb
add
jo
insb
add
jae
push
add
adc
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsl
add
imul
add
jbe
add
add
insb
add
jae
push
add
add
add
imul
push
add
jb
jae
imul
add
add
cmp
sub
xor
sub
xor
aaa
add
xor
add
add
dec
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
bound
add
add
insb
add
jae
push
add
add
add
and
cmp
add
add
add
add
daa
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
add
add
add
add
push
add
insb
add
jns
add
add
add
outsl
add
jns
jb
imul
je
and
test
add
add
add
add
add
add
add
add
add
bound
add
add
jns
jae
je
add
jae
and
dec
add
arpl
outsl
add
jo
outsl
add
popa
add
add
add
add
insb
add
add
imul
je
jae
and
push
add
jae
add
jbe
add
add
add
jb
outsl
add
add
je
add
add
jns
and
push
add
add
add
add
popa
add
add
je
and
add
cmp
aaa
add
add
xor
xor
aaa
add
add
add
popa
add
add
je
jae
and
push
add
outsb
add
add
add
add
outsb
add
add
add
and
push
add
imul
add
add
je
popa
add
add
and
popa
add
add
add
je
push
add
add
outsl
add
outsb
add
add
add
add
add
add
bound
add
add
outsb
add
add
insb
add
jae
push
add
add
add
imul
add
and
je
jb
popa
add
add
popa
add
imul
add
add
jb
and
jb
add
imul
add
add
add
add
add
insl
add
jb
imul
add
add
outsb
add
add
add
and
push
add
imul
add
add
je
popa
add
add
and
popa
add
add
add
jb
and
outsl
add
add
jb
and
arpl
outsl
add
outsb
add
add
add
add
add
add
adc
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
add
bound
add
add
insb
add
jae
push
add
add
add
add
add
inc
add
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
outsb
add
jae
ja
data16
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
cmp
sub
xor
sub
xor
aaa
add
xor
add
add
sbb
add
add
inc
add
bound
jne
add
add
add
xor
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
push
into
verr
push
inc
fisttps
aad
fabs
sbb
fwait
pop
popa
std
xlat
jmp
push
mov
and
roll
sub
and
cli
rcrb
jne
xor
paddq
adc
loop,pn
popl
sti
in
jns
jb
aas
movsb
flds
data16
cmp
stos
ds
stc
into
or
add
clc
out
cwtl
nop
jnp
sahf
mov
enter
out
or
dec
pop
out
sbb
and
jg
sub
push
test
das
push
xor
pop
out
mov
mov
das
mov
shll
cmp
mov
sub
xor
mov
fidivl
lcall
enter
jge
jo
xlat
daa
pop
addr16
add
mov
inc
mov
mov
dec
lock
imul
or
sbb
movsb
mul
stos
test
fistpl
mov
clc
int3
xor
cwtl
js
mov
push
in
lret
cmp
outsl
cmovge
cmp
push
jl
ds
pop
dec
loope
push
cltd
mov
stos
ret
xchg
mov
dec
and
pop
xor
inc
jno
mov
xchg
mov
into
cli
in
ret
loop
pop
mov
imul
push
cmovle
ds
jmp
mov
or
int3
mov
pop
mov
shl
clc
dec
fs
xchg
mov
outsl
ljmp
or
aam
out
push
or
push
or
xchg
sub
dec
ret
xchg
adc
inc
mov
lcall
lods
repnz
adc
add
mov
add
add
inc
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jl
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
pop
push
add
add
xor
xor
xor
cmp
xor
xor
add
add
dec
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
add
add
add
jns
jae
je
add
jae
sub
and
dec
add
arpl
add
add
sbb
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsl
add
imul
add
jbe
add
add
insb
add
jae
push
add
add
add
add
add
xor
aaa
add
add
add
add
add
inc
add
insb
add
inc
add
je
add
je
jae
add
add
jae
ja
data16
add
insb
add
add
jo
add
mov
add
imul
dec
add
add
dec
add
insl
add
add
inc
add
add
add
add
insb
add
jae
push
add
jbe
imul
sub
sub
add
ja
data16
add
add
je
jne
jb
add
jo
insb
add
jae
push
add
jbe
imul
sub
sub
add
jo
insb
add
add
add
add
add
add
insb
add
jae
push
add
jo
add
and
sub
sub
add
data16
sub
add
add
xchg
aaa
add
add
dec
add
inc
add
add
add
add
jo
jo
insb
add
arpl
popa
add
add
outsb
add
add
sub
add
arpl
imul
add
jbe
add
add
jae
push
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
jne
je
jne
jb
add
jo
insb
add
jae
push
add
adc
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsl
add
imul
add
jbe
add
add
insb
add
jae
push
add
add
add
imul
push
add
jb
jae
imul
add
add
cmp
sub
xor
sub
xor
aaa
add
xor
add
add
dec
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
bound
add
add
insb
add
jae
push
add
add
add
and
cmp
add
add
add
add
daa
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
add
add
add
add
push
add
insb
add
jns
add
add
add
outsl
add
jns
jb
imul
je
and
test
add
add
add
add
add
add
add
add
add
bound
add
add
jns
jae
je
add
jae
and
dec
add
arpl
outsl
add
jo
outsl
add
popa
add
add
add
add
insb
add
add
imul
je
jae
and
push
add
jae
add
jbe
add
add
add
jb
outsl
add
add
je
add
add
jns
and
push
add
add
add
add
popa
add
add
je
and
add
cmp
aaa
add
add
xor
xor
aaa
add
add
add
popa
add
add
je
jae
and
push
add
outsb
add
add
add
add
outsb
add
add
add
and
push
add
imul
add
add
je
popa
add
add
and
popa
add
add
add
je
push
add
add
outsl
add
outsb
add
add
add
add
add
add
bound
add
add
outsb
add
add
insb
add
jae
push
add
add
add
imul
add
and
je
jb
popa
add
add
popa
add
imul
add
add
jb
and
jb
add
imul
add
add
add
add
add
insl
add
jb
imul
add
add
outsb
add
add
add
and
push
add
imul
add
add
je
popa
add
add
and
popa
add
add
add
jb
and
outsl
add
add
jb
and
arpl
outsl
add
outsb
add
add
add
add
add
add
adc
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
add
bound
add
add
insb
add
jae
push
add
add
add
add
add
inc
add
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
outsb
add
jae
ja
data16
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
cmp
sub
xor
sub
xor
aaa
add
xor
add
add
sbb
add
add
inc
add
bound
jne
add
add
add
xor
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
push
into
verr
push
inc
fisttps
aad
fabs
sbb
fwait
pop
popa
std
xlat
jmp
push
mov
and
roll
sub
and
cli
rcrb
jne
xor
paddq
adc
loop,pn
popl
sti
in
jns
jb
aas
movsb
flds
data16
cmp
stos
ds
stc
into
or
add
clc
out
cwtl
nop
jnp
sahf
mov
enter
out
or
dec
pop
out
sbb
and
jg
sub
push
test
das
push
xor
pop
out
mov
mov
das
mov
shll
cmp
mov
sub
xor
mov
fidivl
lcall
enter
jge
jo
xlat
daa
pop
addr16
add
mov
inc
mov
mov
dec
lock
imul
or
sbb
movsb
mul
stos
test
fistpl
mov
clc
int3
xor
cwtl
js
mov
push
in
lret
cmp
outsl
cmovge
cmp
push
jl
ds
pop
dec
loope
push
cltd
mov
stos
ret
xchg
mov
dec
and
pop
xor
inc
jno
mov
xchg
mov
into
cli
in
ret
loop
pop
mov
imul
push
cmovle
ds
jmp
mov
or
int3
mov
pop
mov
shl
clc
dec
fs
xchg
mov
outsl
ljmp
or
aam
out
push
or
push
or
xchg
sub
dec
ret
xchg
adc
inc
mov
lcall
lods
repnz
adc
add
mov
add
add
xor
sbb
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jl
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
pop
push
add
add
xor
xor
xor
cmp
xor
xor
add
add
dec
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
add
add
add
jns
jae
je
add
jae
sub
and
dec
add
arpl
add
add
sbb
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsl
add
imul
add
jbe
add
add
insb
add
jae
push
add
add
add
add
add
xor
aaa
add
add
add
add
add
inc
add
insb
add
inc
add
je
add
je
jae
add
add
jae
ja
data16
add
insb
add
add
jo
add
mov
add
imul
dec
add
add
dec
add
insl
add
add
inc
add
add
add
add
insb
add
jae
push
add
jbe
imul
sub
sub
add
ja
data16
add
add
je
jne
jb
add
jo
insb
add
jae
push
add
jbe
imul
sub
sub
add
jo
insb
add
add
add
add
add
add
insb
add
jae
push
add
jo
add
and
sub
sub
add
data16
sub
add
add
xchg
aaa
add
add
dec
add
inc
add
add
add
add
jo
jo
insb
add
arpl
popa
add
add
outsb
add
add
sub
add
arpl
imul
add
jbe
add
add
jae
push
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
jne
je
jne
jb
add
jo
insb
add
jae
push
add
adc
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsl
add
imul
add
jbe
add
add
insb
add
jae
push
add
add
add
imul
push
add
jb
jae
imul
add
add
cmp
sub
xor
sub
xor
aaa
add
xor
add
add
dec
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
bound
add
add
insb
add
jae
push
add
add
add
and
cmp
add
add
add
add
daa
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
add
add
add
add
push
add
insb
add
jns
add
add
add
outsl
add
jns
jb
imul
je
and
test
add
add
add
add
add
add
add
add
add
bound
add
add
jns
jae
je
add
jae
and
dec
add
arpl
outsl
add
jo
outsl
add
popa
add
add
add
add
insb
add
add
imul
je
jae
and
push
add
jae
add
jbe
add
add
add
jb
outsl
add
add
je
add
add
jns
and
push
add
add
add
add
popa
add
add
je
and
add
cmp
aaa
add
add
xor
xor
aaa
add
add
add
popa
add
add
je
jae
and
push
add
outsb
add
add
add
add
outsb
add
add
add
and
push
add
imul
add
add
je
popa
add
add
and
popa
add
add
add
je
push
add
add
outsl
add
outsb
add
add
add
add
add
add
bound
add
add
outsb
add
add
insb
add
jae
push
add
add
add
imul
add
and
je
jb
popa
add
add
popa
add
imul
add
add
jb
and
jb
add
imul
add
add
add
add
add
insl
add
jb
imul
add
add
outsb
add
add
add
and
push
add
imul
add
add
je
popa
add
add
and
popa
add
add
add
jb
and
outsl
add
add
jb
and
arpl
outsl
add
outsb
add
add
add
add
add
add
adc
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
add
bound
add
add
insb
add
jae
push
add
add
add
add
add
inc
add
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
outsb
add
jae
ja
data16
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
cmp
sub
xor
sub
xor
aaa
add
xor
add
add
sbb
add
add
inc
add
bound
jne
add
add
add
xor
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
push
into
verr
push
inc
fisttps
aad
fabs
sbb
fwait
pop
popa
std
xlat
jmp
push
mov
and
roll
sub
and
cli
rcrb
jne
xor
paddq
adc
loop,pn
popl
sti
in
jns
jb
aas
movsb
flds
data16
cmp
stos
ds
stc
into
or
add
clc
out
cwtl
nop
jnp
sahf
mov
enter
out
or
dec
pop
out
sbb
and
jg
sub
push
test
das
push
xor
pop
out
mov
mov
das
mov
shll
cmp
mov
sub
xor
mov
fidivl
lcall
enter
jge
jo
xlat
daa
pop
addr16
add
mov
inc
mov
mov
dec
lock
imul
or
sbb
movsb
mul
stos
test
fistpl
mov
clc
int3
xor
cwtl
js
mov
push
in
lret
cmp
outsl
cmovge
cmp
push
jl
ds
pop
dec
loope
push
cltd
mov
stos
ret
xchg
mov
dec
and
pop
xor
inc
jno
mov
xchg
mov
into
cli
in
ret
loop
pop
mov
imul
push
cmovle
ds
jmp
mov
or
int3
mov
pop
mov
shl
clc
dec
fs
xchg
mov
outsl
ljmp
or
aam
out
push
or
push
or
xchg
sub
dec
ret
xchg
adc
inc
mov
lcall
lods
repnz
adc
add
mov
add
add
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jl
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
pop
push
add
add
xor
xor
xor
cmp
xor
xor
add
add
dec
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
add
add
add
jns
jae
je
add
jae
sub
and
dec
add
arpl
add
add
sbb
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsl
add
imul
add
jbe
add
add
insb
add
jae
push
add
add
add
add
add
xor
aaa
add
add
add
add
add
inc
add
insb
add
inc
add
je
add
je
jae
add
add
jae
ja
data16
add
insb
add
add
jo
add
mov
add
imul
dec
add
add
dec
add
insl
add
add
inc
add
add
add
add
insb
add
jae
push
add
jbe
imul
sub
sub
add
ja
data16
add
add
je
jne
jb
add
jo
insb
add
jae
push
add
jbe
imul
sub
sub
add
jo
insb
add
add
add
add
add
add
insb
add
jae
push
add
jo
add
and
sub
sub
add
data16
sub
add
add
xchg
aaa
add
add
dec
add
inc
add
add
add
add
jo
jo
insb
add
arpl
popa
add
add
outsb
add
add
sub
add
arpl
imul
add
jbe
add
add
jae
push
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
jne
je
jne
jb
add
jo
insb
add
jae
push
add
adc
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsl
add
imul
add
jbe
add
add
insb
add
jae
push
add
add
add
imul
push
add
jb
jae
imul
add
add
cmp
sub
xor
sub
xor
aaa
add
xor
add
add
dec
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
bound
add
add
insb
add
jae
push
add
add
add
and
cmp
add
add
add
add
daa
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
add
add
add
add
push
add
insb
add
jns
add
add
add
outsl
add
jns
jb
imul
je
and
test
add
add
add
add
add
add
add
add
add
bound
add
add
jns
jae
je
add
jae
and
dec
add
arpl
outsl
add
jo
outsl
add
popa
add
add
add
add
insb
add
add
imul
je
jae
and
push
add
jae
add
jbe
add
add
add
jb
outsl
add
add
je
add
add
jns
and
push
add
add
add
add
popa
add
add
je
and
add
cmp
aaa
add
add
xor
xor
aaa
add
add
add
popa
add
add
je
jae
and
push
add
outsb
add
add
add
add
outsb
add
add
add
and
push
add
imul
add
add
je
popa
add
add
and
popa
add
add
add
je
push
add
add
outsl
add
outsb
add
add
add
add
add
add
bound
add
add
outsb
add
add
insb
add
jae
push
add
add
add
imul
add
and
je
jb
popa
add
add
popa
add
imul
add
add
jb
and
jb
add
imul
add
add
add
add
add
insl
add
jb
imul
add
add
outsb
add
add
add
and
push
add
imul
add
add
je
popa
add
add
and
popa
add
add
add
jb
and
outsl
add
add
jb
and
arpl
outsl
add
outsb
add
add
add
add
add
add
adc
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
add
bound
add
add
insb
add
jae
push
add
add
add
add
add
inc
add
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
outsb
add
jae
ja
data16
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
cmp
sub
xor
sub
xor
aaa
add
xor
add
add
sbb
add
add
inc
add
bound
jne
add
add
add
xor
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
push
into
verr
push
inc
fisttps
aad
fabs
sbb
fwait
pop
popa
std
xlat
jmp
push
mov
and
roll
sub
and
cli
rcrb
jne
xor
paddq
adc
loop,pn
popl
sti
in
jns
jb
aas
movsb
flds
data16
cmp
stos
ds
stc
into
or
add
clc
out
cwtl
nop
jnp
sahf
mov
enter
out
or
dec
pop
out
sbb
and
jg
sub
push
test
das
push
xor
pop
out
mov
mov
das
mov
shll
cmp
mov
sub
xor
mov
fidivl
lcall
enter
jge
jo
xlat
daa
pop
addr16
add
mov
inc
mov
mov
dec
lock
imul
or
sbb
movsb
mul
stos
test
fistpl
mov
clc
int3
xor
cwtl
js
mov
push
in
lret
cmp
outsl
cmovge
cmp
push
jl
ds
pop
dec
loope
push
cltd
mov
stos
ret
xchg
mov
dec
and
pop
xor
inc
jno
mov
xchg
mov
into
cli
in
ret
loop
pop
mov
imul
push
cmovle
ds
jmp
mov
or
int3
mov
pop
mov
shl
clc
dec
fs
xchg
mov
outsl
ljmp
or
aam
out
push
or
push
or
xchg
sub
dec
ret
xchg
adc
inc
mov
lcall
lods
repnz
adc
add
mov
add
add
xchg
dec
add
add
add
add
xchg
dec
add
add
add
xchg
dec
add
add
add
xchg
dec
add
add
add
xchg
dec
add
add
add
xchg
dec
add
add
add
xchg
dec
add
add
add
xchg
dec
add
add
add
xchg
dec
add
xchg
dec
add
add
add
xchg
dec
add
xchg
dec
add
add
add
xchg
dec
add
dec
add
dec
add
dec
add
dec
add
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
inc
cs
insb
add
pop
push
cs
insb
add
insl
popa
outsb
xor
cs
insb
add
insb
cs
insb
add
push
cs
insb
add
push
aaa
dec
cs
insb
add
je
cs
insb
add
push
xor
ja
fs
insb
add
imul
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
inc
dec
inc
outsb
jne
