push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
xor
mov
mov
pusha
call
add
pop
push
mov
sub
push
pushl
push
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
add
jmp
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
jmp
ret
std
xor
mov
cld
add
mov
mov
shl
sub
mov
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
mov
jbe
mov
popf
dec
call
add
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
pop
lea
sub
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
mov
xor
movl
add
and
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
sub
cmp
jne
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
mov
and
add
add
lret
add
and
add
add
add
cli
and
add
and
add
add
push
and
add
and
add
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
mov
and
add
and
add
add
test
add
xor
add
insb
and
add
add
and
add
add
and
add
add
add
and
add
and
add
and
add
add
add
add
add
add
add
and
add
add
add
add
push
add
add
add
add
and
add
add
mov
add
add
add
add
add
nop
and
add
add
add
add
jle
add
movsb
and
add
add
data16
add
and
add
and
add
add
add
cli
and
add
and
add
add
push
and
add
and
add
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
mov
and
add
and
add
add
test
add
xor
add
insb
and
add
add
and
add
add
and
add
add
add
and
add
and
add
and
add
add
add
add
add
add
add
insb
outsl
jae
dec
popa
outsb
fs
add
inc
jne
jb
outsb
je
push
add
dec
add
popa
insb
dec
outsl
arpl
cmp
fs
imul
add
cmpsb
add
je
gs
imul
ret
gs
jne
jb
outsb
je
jb
arpl
jae
push
push
je
imul
inc
add
out
inc
gs
imul
bound
gs
add
jge
dec
jo
outsb
dec
jne
gs
add
push
add
outsb
fs
outsl
insb
jne
gs
insb
outsl
jae
add
add
je
jb
jbe
je
push
jb
imul
push
add
popa
je
inc
jbe
outsb
je
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
popa
jo
gs
jb
jns
dec
add
insb
outsb
inc
add
aad
inc
gs
gs
inc
imul
gs
je
dec
popa
outsb
fs
add
aam
inc
gs
jb
jbe
push
jns
gs
add
add
imul
jb
je
arpl
add
roll
dec
gs
jo
jb
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
pop
add
addr16
imul
push
add
addr16
arpl
jo
inc
imul
dec
inc
jb
add
sbb
insb
imul
outsl
outsb
add
add
je
popa
arpl
outsl
outsb
inc
add
lods
add
gs
insb
inc
bound
je
add
insb
insb
dec
gs
popa
addr16
outsl
js
add
mov
inc
push
add
inc
gs
gs
imul
push
dec
inc
gs
popa
insb
insb
outsl
arpl
sbb
inc
jb
addr16
jne
jb
inc
imul
inc
insb
insb
push
outsb
jb
imul
jb
gs
addb
dec
inc
gs
popa
insb
insb
outsl
arpl
push
dec
inc
dec
dec
xor
cs
insb
add
add
dec
inc
outsl
outsb
imul
popa
push
outsl
jne
arpl
add
push
push
dec
dec
outsb
jae
popa
insb
insb
inc
jb
jbe
jb
add
inc
gs
jbe
imul
imul
or
push
push
dec
dec
outsb
jae
popa
insb
insb
dec
inc
inc
inc
add
dec
inc
inc
inc
inc
push
xor
cs
insb
add
add
inc
push
dec
xor
push
inc
arpl
outsl
insb
add
dec
push
inc
push
dec
xor
fs
insb
add
test
xchg
pop
pop
dec
mov
aad
jo
dec
movsb
ljmp
jae
xchg
and
shll
and
pop
test
jle
and
into
mov
inc
in
adc
mov
aaa
popa
adc
xchg
gs
lahf
and
repnz
pop
sub
or
sti
add
and
lods
xchg
add
lock
int
push
mov
jae
sbb
sbb
sbb
mov
ss
mov
inc
into
add
leave
fs
push
in
sti
idivl
iret
pop
or
ret
loop
loopne
add
das
testb
push
loop
pop
fsts
out
test
mov
movsb
sub
sub
pusha
sub
xchg
mov
push
dec
cmc
mov
and
movsl
and
ret
mov
mov
fdivrp
xchg
jo
sub
adc
adc
mov
or
xor
jecxz
jge
jle
sub
nop
pop
insl
or
aad
fsubr
sbb
push
xchg
ret
aam
adc
lods
jo
outsl
fdivs
and
mov
mul
jl
lahf
mov
les
sbb
push
adc
jnp
cmc
xchg
pushf
mov
daa
lods
sbb
sbb
dec
cmp
adc
addr16
pushf
jae
xor
loope
mov
or
sbbl
mov
shl
test
pop
arpl
cltd
icebp
xor
addb
addr16
mov
add
lahf
je
ficomps
out
in
enter
and
or
cmp
pusha
cs
bound
bswap
mov
adc
test
jp
xchg
dec
js
xor
out
pop
imul
fildll
adc
add
gs
push
out
ret
pop
mov
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
jno
add
add
add
add
add
xchg
add
test
add
mov
or
add
mov
add
ss
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
xchg
xchg
xchg
add
scas
scas
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
stos
mov
mov
lcall
jge
add
jl
lods
lods
lods
add
test
push
mov
mov
mov
ret
lret
leave
lret
int
rcl
in
rcl
shl
rcl
iret
hlt
into
into
into
hlt
enter
enter
in
mov
mov
lods
stos
lods
lea
fwait
lcall
add
add
add
push
add
add
add
add
add
add
add
add
mov
lahf
add
mov
jae
mov
lret
rcl
sar
xlat
xlat
std
fcomp
xlat
fcom
aam
ror
sar
int3
into
into
aad
rcl
iret
inc
ret
mov
mov
scas
iret
movsl
movsl
movsl
xchg
xchg
and
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
scas
sbb
mov
jnp
mov
sar
mov
lret
dec
rcl
aad
xlat
fcomp
fdivr
aam
aam
int3
into
int
into
int3
int
dec
int
inc
rol
mov
mov
scas
std
cmpsb
test
ljmp
push
fs
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
push
push
pop
add
dec
add
pop
add
push
or
inc
or
sbb
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
leave
dec
int3
into
call
rcl
call
xlat
call
call
aam
int3
int3
int
leave
lret
lret
into
into
inc
mov
mov
mov
test
cmpsb
jmp
lcall
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
imul
imul
pop
pop
pop
fs
aas
inc
push
sbb
das
push
or
sbb
cmp
aaa
aaa
cmp
and
adc
push
pop
pop
add
add
add
add
gs
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
leave
leave
dec
iret
iret
call
aad
call
aad
call
iret
iret
inc
leave
inc
ret
ret
mov
mov
scas
lods
lods
jmp
sahf
popf
cwtl
xchg
cwtl
lcall
addb
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
push
add
jno
jge
jge
jle
jge
jo
jno
popa
bound
push
push
dec
xchg
cmp
inc
inc
mov
outsb
outsl
outsl
nop
bound
pusha
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
lret
leave
lret
mov
mov
mov
ljmp
movsl
movsb
lcall
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
fwait
fwait
fwait
in
test
aas
push
push
push
push
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
outsb
outsb
add
pop
or
pusha
xchg
fcoms
addb
jl
jnp
outsb
outsb
outsl
out
push
data16
je
jle
jge
jns
jns
gs
inc
inc
cmp
pop
sbb
adc
prefetch
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
cmpsl
test
pushf
popf
popf
call
xchg
decl
xchg
xchg
lahf
lahf
lahf
sti
mov
xchg
xchg
mov
js
jns
xor
das
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
popf
in
mov
mov
addl
mov
mov
jle
jb
jo
je
jne
jg
jge
test
xchg
addr16
cmp
es
jle
cltd
lcall
test
test
sti
lods
stos
stos
lods
lods
lods
stos
test
std
movsb
movsl
mov
xchg
xchg
xchg
decl
jge
jp
jp
jl
jns
mov
xchg
movsl
movsl
movsl
scas
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
test
push
adc
add
or
add
add
add
add
add
add
push
pop
adc
mov
mov
xchg
xchg
xchg
incl
xchg
mov
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
addb
xchg
pop
push
push
or
inc
dec
insb
imul
xchg
fwait
fwait
cltd
fistps
fwait
lcall
mov
mov
mov
lea
fwait
jmp
lods
scas
mov
mov
mov
mov
mov
std
mov
mov
movsb
movsb
mov
or
add
add
pop
pop
adc
test
mov
incl
xchg
decb
xchg
xchg
sahf
pushf
sahf
std
movsl
mov
mov
in
xchg
xchg
in
test
push
jne
or
add
or
inc
sub
daa
push
dec
dec
dec
data16
jno
xchg
xchg
rclb
xchg
std
mov
call
lahf
mov
ljmp
test
pushl
mov
test
roll
mov
mov
ljmp
sahf
adc
add
add
pop
adc
mov
jmp
pushf
cwtl
fwait
decl
mov
xchg
xchg
nop
call
xchg
xchg
pushf
pushf
sahf
movsl
movsl
movsl
test
mov
xchg
fstpt
jl
push
push
push
outsl
dec
dec
dec
pop
bound
jno
je
jp
jg
test
int
xchg
xchg
in
nop
xchg
testl
mov
jmp
mov
mov
pop
nop
mov
aaa
jge
mov
js
mov
movsl
mov
mov
mov
mov
movsb
movsl
add
pop
pusha
adc
mov
ljmp
popf
decl
nop
xchg
call
xchg
xchg
call
cwtl
xchg
cltd
lcall
mov
movsb
movsb
std
movsb
movsb
movsb
stc
xchg
cwtl
lcall
nop
xchg
les
cltd
lcall
xchg
cmc
nop
mov
cld
xchg
orl
mov
dec
jg
lods
inc
jl
mov
jns
mov
jae
mov
outsl
ljmp
pcmpgtd
stos
or
lods
or
pushl
mov
mov
pushf
movsb
movsl
movsb
and
add
add
pop
pusha
adc
mov
lcall
xchg
xchg
call
fwait
fwait
lcall
sahf
lcall
cltd
fwait
call
xchg
xchg
nop
xchg
xchg
call
cwtl
fwait
cld
xchg
cwtl
popf
stc
mov
xchg
popf
cld
sahf
xchg
xchg
imul
cwtl
dec
jns
lcall
pushf
and
lahf
sbb
movsl
push
ljmp
ljmp
adc
stos
adc
scas
adc
mov
imul
mov
insb
mov
cltd
scas
mov
lods
lods
scas
movsl
movsl
mov
add
add
add
add
add
pop
pop
adc
mov
les
sahf
call
sahf
sahf
jmp
movsb
mov
jmp
xchg
xchg
decl
mov
decl
mov
fwait
jno
fwait
fs
xchg
dec
jnp
xchg
cmp
decl
pop
pusha
call
or
call
add
lcall
jmp
sbb
pushl
pop
jo
mov
outsl
mov
and
and
shll
mov
xchg
scas
mov
scas
scas
mov
lahf
sahf
sahf
add
add
add
add
add
pop
pop
adc
lods
mov
mov
cltd
popf
lcall
movsl
movsl
jmp
cmpsl
cmpsl
ljmp
cmpsb
test
fwait
pushf
pushf
call
pop
js
mov
decl
sub
mov
pop
incl
push
push
incl
add
mov
push
call
add
fwait
add
lahf
add
cmpsl
or
mov
outsl
pushl
sub
mov
sub
ret
inc
sub
cmp
leave
inc
mov
enter
mov
mov
lret
mov
add
add
add
add
add
push
push
adc
cmpsl
scas
ljmp
popf
jmp
test
ljmp
lods
stos
pushl
scas
lods
jmp
mov
mov
arpl
xchg
incl
or
addb
incl
push
incl
add
nop
add
xchg
add
cltd
add
sahf
add
mov
adc
mov
ss
cmp
leave
cmp
call
cmp
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
movsb
cmpsb
ljmp
sahf
ljmp
scas
lods
pushl
mov
pushl
mov
ljmp
jbe
decl
push
decl
adc
mov
push
incl
add
mov
push
decl
add
xchg
add
sahf
add
mov
add
lods
add
mov
jo
ret
cmp
int
call
inc
mov
roll
call
dec
xchg
fmuls
fisttpll
ficoml
call
test
std
mov
mov
movsl
mov
sahf
or
add
add
add
add
dec
inc
adc
jl
mov
test
lcall
test
pushl
mov
mov
mov
mov
mov
mov
mov
jmp
insl
decl
pusha
call
adc
decl
pop
push
decl
add
xchg
add
popf
add
mov
add
test
add
js
into
inc
mov
aam
xchg
call
push
cltd
ficoml
fistl
fistps
jmp
pop
popf
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
cmpsb
cmpsb
test
mov
lahf
mov
add
add
add
inc
inc
adc
jns
mov
movsb
test
mov
lods
stos
pushl
mov
mov
mov
mov
ljmp
inc
je
nop
and
xchg
and
call
and
xchg
sbb
or
xchg
add
xchg
add
cltd
add
mov
add
lods
add
mov
fs
mov
xor
fcomps
fstps
fisubs
fisubs
jmp
cmpsl
jmp
data16
jmp
data16
call
push
test
dec
mov
mov
mov
sahf
mov
add
add
add
inc
aas
adc
jae
lcall
lcall
scas
scas
pushl
mov
mov
mov
mov
ljmp
push
jle
xchg
sub
fwait
outsl
lcall
daa
imul
xchg
or
xchg
add
cltd
add
mov
add
lods
add
mov
pushl
adc
rolb
jmp
outsb
stos
jmp
jo
jmp
jo
call
jae
jmp
scas
out
jne
in
jne
out
je
jmp
mov
mov
cmpsb
cmpsb
lcall
lahf
add
jg
cmp
insl
outsb
js
lea
pushf
lcall
mov
mov
mov
mov
mov
mov
cmpsb
scas
lcall
xor
lahf
cmp
mov
xor
fwait
push
call
call
add
movsb
add
stos
add
mov
arpl
mov
fs
mov
sbb
fsts
jecxz
mov
jmp
jle
in
cmpb
lock
repz
push
test
ljmp
inc
mov
test
daa
sahf
sahf
sahf
add
add
add
pop
add
cmp
pop
pop
push
jne
jg
out
test
xchg
xchg
xchg
pushl
mov
mov
inc
sarb
ret
pushl
insb
mov
lcall
jmp
ss
cltd
sbb
xchg
add
sahf
add
movsb
add
stos
add
scas
add
mov
gs
mov
add
iret
es
movsl
ljmp
out
sar
pop
push
xchg
ret
push
pop
push
xchg
push
nop
push
xchg
stc
mov
out
mov
clc
stos
stos
stos
mov
sahf
sahf
xor
sahf
add
add
add
inc
add
xor
push
inc
inc
inc
jb
pop
dec
in
push
decl
mov
mov
mov
sar
inc
mov
jge
lcall
dec
cmp
dec
test
movsb
xor
lcall
add
mov
add
lods
add
mov
arpl
mov
add
movl
mov
out
xchg
vlddqu
push
cltd
push
lcall
negl
cld
sahf
int3
sti
cltd
leave
push
xchg
sar
mov
cli
mov
mov
sahf
sahf
sahf
aas
nop
nop
xchg
add
add
add
cs
cmp
outsb
dec
dec
dec
jecxz
pop
pusha
decl
mov
mov
mov
sar
ret
vshufps
inc
mov
lahf
lcall
dec
xchg
scas
push
xchg
mov
push
pop
lcall
add
lods
add
mov
popa
mov
add
movl
jne
fiadds
in
lea
push
movsl
into
push
cmpsb
int
stc
cmpsl
iret
cli
test
into
cld
test
cld
test
sar
cld
test
push
lahf
mov
dec
lret
mov
mov
sahf
lahf
sahf
dec
xchg
xchg
xchg
add
cltd
fwait
add
add
add
xor
add
sub
or
inc
bound
push
xlat
jne
jno
mov
rol
rol
mov
ret
ret
inc
mov
leave
leave
inc
rol
mov
test
mov
push
mov
scas
dec
test
lahf
sbb
pop
jmp
add
mov
mov
add
int3
add
add
adc
out
pop
cmpsl
push
sahf
leave
sti
scas
sar
cld
scas
aad
cli
mov
sti
scas
sar
std
mov
cld
mov
cld
mov
cld
mov
pushl
sar
mulb
call
leave
int
mov
mov
mov
xchg
xchg
or
add
add
xor
push
add
dec
dec
ss
outsb
mov
xlat
fsubr
aam
xlat
not
rcl
std
lret
dec
leave
lret
lret
lret
lret
lret
enter
mov
mov
scas
push
mov
stos
jle,pt
lahf
push
arpl
mov
add
mov
fs
mov
add
roll
outsb
fadds
jb
loopne
je
jmp
jae
cld
lods
aad
cld
mov
std
mov
cld
mov
fdivr
mov
fcos
mov
fdivr
divl
call
leave
int
mov
lahf
lahf
jo
xchg
xchg
or
add
add
xor
add
add
or
movb
loop
out
jmp
test
jecxz
leave
fsubp
fsubp
fcmovnu
fcomi
xlat
cli
aam
fdivr
int
sar
mov
imul
jmp
add
mov
mov
add
lret
call
add
fldl
jne
in
js
out
das
xchg
stc
mov
cli
mov
inc
inc
loopne
inc
loopne
inc
loopne
std
leave
std
leave
std
leave
dec
dec
loopne
cli
mov
leave
call
leave
iret
mov
mov
xchg
adc
add
add
std
std
add
incl
std
incb
hlt
cmc
hlt
or
out
in
pop
jmp
in
sub
out
in
dec
ljmp
xchg
out
call
aad
fstp
jmp
mov
xchg
test
js
movsl
push
jmp
ljmp
add
add
les
imul
fadds
jb
filds
jbe
jmp
inc
fwait
sti
mov
loop
std
lret
jecxz
std
into
in
std
int
dec
loop
dec
loop
std
into
loope
dec
loop
dec
jecxz
std
shl
shl
cli
ret
fdivr
in
mov
xlat
inc
ret
ret
cmpsb
cmpsl
mov
cwtl
xchg
add
add
add
std
incb
std
incl
cmc
stc
testb
repnz
add
hlt
repz
out
repnz
in
repnz
cmp
in
in
pop
loopne
loop
lds
xchg
sti
mov
pop
pop
jmp
add
mov
fs
mov
add
roll
jno
fiaddl
jbe
in
jns
in
push
jge
cmc
pop
test
cld
iret
in
shl
std
shr
std
shl
std
shl
std
aad
std
fsubr
xlat
call
fldl2t
fldl2e
cld
iret
loope
hlt
ret
aam
in
leave
lret
test
stos
fwait
xchg
xchg
xchg
and
cwtl
xchg
add
std
cli
add
cld
testl
hlt
div
or
aam
xor
mov
xchg
negb
add
add
lods
add
mov
add
lret
add
rolb
jb
fildl
jne
out
js
in
sbb
cld
ret
cld
xlat
call
fldl2e
std
fucomi
fucomi
fsubr
fucomp
fucomi
jmp
in
std
fucomip
fucomip
shl
push
aam
call
iret
iret
clc
lods
lods
stos
lods
xchg
xchg
xchg
outsl
outsl
outsl
add
add
mov
loopne
add
leave
lds
stos
jnp
repnz
and
mov
add
mov
mov
add
into
add
aam
jae
filds
jne
ljmp
sti
nop
aam
std
fdivp
std
fsubr
std
fucompp
fucomi
std
call
std
aam
cld
shl
cld
iret
loop
clc
iret
fdivrp
stc
int3
fdivrp
cmc
ret
xlat
out
mov
fcom
sti
mov
mov
fwait
cltd
cltd
cmp
lcall
mov
mov
add
enter
mov
sahf
jmp
sub
sahf
add
ljmp
add
add
movb
call
add
fadds
jae
loopne
js
jmp
xor
cli
lret
cld
lret
loop
cld
stc
mov
aam
repz
sar
repnz
into
ljmp
ljmp
cli
ljmp
cmc
fsubp
fucomip
mov
mov
xchg
add
add
add
into
int3
add
rol
mov
movsl
loopne
xor
jmp
add
mov
gs
mov
add
dec
pop
jb
rorb
je
ja
loop
cmp
call
mov
jmp
scas
leave
std
loope
ret
cld
loopne
cli
fdivl
lock
into
in
lret
loopne
xlat
shl
xlat
fcmovnb
out
loopne
in
in
test
in
out
popf
call
lret
lret
push
lods
lods
lods
adc
cmpsb
cmpsb
cmpsb
add
ret
mov
ret
mov
lods
aam
dec
cmp
cmpsb
push
insb
lods
es
mov
ja
mov
inc
xchg
ret
push
mov
leave
fs
test
mov
out
mov
mov
lret
int3
rcl
lret
mov
int
mov
fcom
aad
fcmovnu
fidivl
gs
jecxz
out
out
ljmp
sub
div
and
icebp
icebp
sbb
or
mov
int
mov
add
mov
mov
mov
les
insb
mov
test
xchg
ljmp
mov
sarb
stos
mov
ret
mov
cmpsl
mov
enter
int3
jp
int
addr16
rclb
rcl
dec
aam
aad
rcl
aad
aad
fldenv
fcomp
fcompl
fcoml
fsubp
loop
loope
in
out
ljmp
cld
cmc
add
sti
add
incl
std
incl
mov
mov
shrl
mov
mov
mov
scas
xchg
mov
mov
mov
mov
ret
push
rol
inc
ror
xor
int
daa
lret
ror
and
aad
sbb
aam
adc
rorb
aam
aam
rcr
xlat
add
fstp
add
loopne
add
in
add
jmp
add
add
std
std
add
mov
add
ret
ret
vmovaps
ret
mov
mov
rorl
leave
movb
leave
enter
lret
add
roll
rcr
add
fcom
add
xlat
aad
xlat
add
fsub
add
aam
add
loop
add
fstp
add
out
add
lock
std
incl
std
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
ret
ret
ret
mov
mov
mov
test
cmpsl
cmpsl
and
add
add
add
add
add
add
add
add
mov
mov
aam
iret
shr
rcl
aad
rcl
sar
iret
iret
into
cli
lret
lret
int
int3
lret
mov
mov
stos
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
jg
addb
aas
inc
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
leave
cld
into
into
iret
xlat
aad
call
aad
dec
rcl
dec
iret
into
dec
lret
lret
inc
rol
mov
mov
lods
lods
stos
icebp
cltd
cwtl
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
je
jne
jae
gs
inc
dec
dec
cmp
sub
sub
xor
dec
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
mov
ret
lret
call
rcl
call
aam
dec
int3
int3
inc
mov
mov
mov
ljmp
sahf
popf
xchg
xchg
cwtl
jmp
jo
xchg
pop
adc
add
add
add
add
add
cmpl
addl
aam
imul
pop
pop
movsb
push
push
push
stos
imul
push
pop
pop
cmp
cmp
pop
jo
jo
mov
scas
pop
mov
mov
mov
mov
inc
ret
mov
inc
mov
mov
jmp
fwait
lcall
xchg
xchg
lcall
xchg
dec
dec
dec
dec
movups
xor
add
and
add
adc
add
pop
lcall
pop
popf
cwtl
cwtl
fcoml
addb
jnp
jnp
jns
jns
jnp
jp
jnp
jnp
je
je
push
push
push
cmp
aaa
sahf
popf
pushf
mov
lods
scas
rep
lods
scas
sti
lods
lods
lods
std
cmpsl
test
popf
call
xchg
call
mov
scas
jmp
lods
lods
leave
movsb
movsl
cmpsb
cltd
je
je
adc
adc
add
add
add
add
outsl
outsb
outsl
pop
stos
movsl
stos
loop
cltd
sahf
incl
mov
sti
xchg
xchg
xchg
lock
fimuls
mov
jp
pop
pop
inc
inc
inc
inc
dec
outsb
outsb
outsb
orl
lcall
mov
call
popf
ljmp
test
std
mov
scas
mov
mov
mov
movsl
mov
jg
popa
popa
pusha
or
lods
mov
cmpsb
lahf
movsl
decl
mov
call
lahf
sahf
sti
lahf
mov
cwtl
call
push
push
push
jo
push
push
outsl
imul
jg
subb
xchg
lock
mov
lcall
pushf
pushl
outsb
xchg
mov
mov
mov
jge
mov
scas
lods
insl
test
add
add
add
add
pusha
or
mov
in
movsb
test
call
cwtl
lcall
cltd
cltd
fwait
fwait
lcall
xchg
cltd
jmp
xchg
mov
xchg
orb
xchg
insb
test
xchg
pop
jle
popf
dec
jnp
movsb
inc
js
scas
xor
je
mov
insl
ljmp
sbb
mov
scas
mov
scas
mov
jle
mov
add
add
add
pop
pusha
pop
or
mov
lcall
sahf
popf
jmp
mov
cwtl
decl
addl
cld
xchg
pusha
test
xchg
dec
jp
nop
cmp
nop
sub
xchg
sbb
cwtl
punpcklbw
mov
push
push
pushl
sbb
mov
and
rcrb
mov
lods
scas
xchg
sahf
sahf
sahf
adc
add
add
pop
pusha
pusha
or
lods
mov
stos
movsb
cmpsb
jmp
cmpsl
test
stos
stos
test
lcall
pop
jns
mov
push
mov
decl
adc
test
pop
decl
add
xchg
add
fwait
add
cmpsl
or
jae
mov
jge,pn
ret
das
jg
leave
xor
dec
pop
cwtl
inc
test
mov
test
add
add
add
add
popa
or
movsb
stos
in
mov
cmpsl
ljmp
mov
pushl
mov
decl
addps
xchg
push
incl
add
popl
push
call
add
cmpsl
add
mov
insl
inc
cmp
call
inc
mov
aam
call
inc
nop
fiaddl
call
popa
lahf
inc
cmpsl
mov
mov
movsb
movsb
daa
incl
add
add
pop
popa
pusha
or
lahf
mov
ljmp
mov
pushl
mov
stos
call
pop
popa
call
pop
pop
decl
add
add
mov
add
scas
add
and
rorl
fsts
ficompl
fistps
jmp
pop
mov
fisubrs
dec
cmpsl
mov
ret
cmpsl
xor
addl
dec
dec
dec
pop
jl
jl
pushf
xchg
cwtl
jecxz
mov
mov
mov
mov
mov
mov
mov
mov
sub
lcall
and
xchg
push
pop
call
add
test
pop
pushl
or
int3
xor
jmp
insb
test
in
lods
jmp
jno
in
jno
call
test
std
mov
cmpsl
test
add
add
add
dec
pop
outsl
insl
insb
bound
cwtl
xchg
pushl
mov
mov
mov
jbe
lcall
cmp
popf
sub
cwtl
or
lcall
ljmp
add
ret
call
inc
xchg
jmp
jp
jmp
cmpl
xrelease
push
mov
mov
test
push
lcall
add
sub
push
push
dec
pop
addr16
xchg
mov
mov
mov
mov
mov
xchg
jmp
sub
cltd
push
pop
jmp
add
mov
arpl
mov
adc
jmp
pusha
mov
push
xchg
ret
push
cltd
push
cwtl
push
cltd
leave
sti
lcall
jecxz
inc
mov
stos
popa
mov
add
add
xor
add
pop
pop
pop
fisttpl
mov
mov
rol
ret
pushl
push
mov
lods
dec
test
mov
add
pop
pushl
push
fsubs
cmp
jnp
push
mov
sar
stc
test
cli
stos
iret
std
stos
sar
cld
stos
sar
sti
cmpsl
int
out
enter
in
test
popf
sahf
or
add
add
push
dec
dec
aaa
jb
je
stos
stos
stos
ror
int3
into
out
int
cmc
lret
lret
lret
sti
leave
leave
enter
mov
pusha
ljmp
adc
test
add
rolb
dec
add
flds
xchg
clc
xchg
cld
mov
mov
std
mov
xlat
sti
mov
fcos
std
mov
leave
dec
ret
mov
lods
mov
add
add
add
add
pop
or
aad
dec
loopne
jecxz
loopne
loopne
fstp
ffree
fcmovnu
fcmovnu
aam
xlat
out
shlb
test
push
pusha
ljmp
add
enter
xlat
add
in
jl
icebp
push
mov
sti
inc
loopne
std
inc
fdivrp
dec
fdivrp
std
leave
std
out
mov
lret
mov
xchg
popf
pushf
sahf
sbb
add
add
incb
std
std
add
ljmp
in
in
in
xor
loope
in
les
mov
mov
add
mov
inc
add
iret
add
fldl
jbe
call
insb
mov
sti
ret
std
shl
std
shl
call
in
call
out
out
std
fsubr
cld
aam
push
fcos
fcmove
sar
mov
mov
and
add
add
incl
std
incb
std
cld
pop
aad
aam
mov
pop
mov
popf
or
pusha
pushl
add
rolb
jo
filds
jne
in
and
std
shl
fldl2t
fldl2t
std
fsubr
std
xlat
jmp
cld
cld
aad
push
jmp
iret
sti
mov
popf
lahf
das
add
add
int
into
or
fs
lahf
pcmpgtb
stos
add
mov
add
roll
jb
loopne
jns
out
xor
stc
lret
loope
cli
lret
fdivrp
cmc
hlt
ret
repz
out
aam
in
in
jmp
aam
in
fsubr
leave
stos
test
std
add
add
add
aad
push
mov
jae
or
imul
sbb
int
jge
aad
test
loopne
fwait
clc
jecxz
mov
out
jecxz
lret
jmp
fidivrs
leave
loopne
iret
mov
in
ficompl
in
jmp
rorl
mov
add
lods
lods
stos
add
xchg
mov
ljmp
nop
fidivrl
jle
rol
lods
mov
mov
ret
mov
int
aad
int
rcl
rorl
cmp
loopne
das
in
frstor
in
icebp
adc
in
jmp
faddl
incb
incl
mov
mov
outsb
mov
stos
jns
mov
mov
mov
mov
xor
enter
rcl
aam
mov
rcl
or
fnstsw
or
int
add
incb
std
incb
cltd
cltd
fwait
add
or
into
int
add
std
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
ret
mov
enter
mov
ret
sarl
scas
mov
lods
stos
stos
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
lods
stos
stos
add
mov
jmp
aam
aad
rcl
sar
int
into
std
stc
mov
mov
sarl
sbb
sbb
add
add
add
add
add
add
add
add
jae
jno
push
dec
dec
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
int3
int3
call
aam
dec
into
iret
dec
enter
mov
lods
jmp
mov
push
add
add
add
add
jae
je
xchg
adc
outsl
outsl
ret
popa
mov
data16
outsl
outsb
outsb
jb
popa
popa
cmp
pop
sbb
mov
in
mov
mov
mov
stos
lods
lcall
xchg
lcall
xchg
cwtl
lds
jb
es
add
add
add
je
jb
fwait
xchg
fwait
mov
test
mov
mov
test
addl
push
push
dec
inc
mov
pushf
into
mov
lahf
mov
decb
mov
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorb
movsb
test
cld
mov
mov
xchg
xchg
xchg
cld
popf
popf
popf
cmc
cltd
cltd
lcall
push
push
imul
jge
mov
xchg
notl
mov
mov
fwait
pushl
jb
mov
lods
lods
push
lods
stos
stos
add
add
add
test
scas
cld
xchg
xchg
xchg
call
cltd
fwait
lcall
fwait
lcall
mov
loope
jne
out
nop
fs
push
jnp
lcall
ljmp
and
mov
insl
pushl
pushf
scas
lock
mov
imul
int3
add
xchg
pop
scas
cmpsb
stos
test
popf
popf
sahf
jmp
movsl
movsb
call
jle
mov
decb
xor
mov
call
or
or
scas
push
outsb
pushl
and
inc
sub
les
mov
scas
mov
stos
stos
test
add
popf
mov
cld
cmpsl
cmpsl
test
scas
scas
mov
mov
mov
lahf
xchg
decl
or
xchg
push
decl
add
mov
adc
shll
lret
aas
mov
rolb
call
inc
mov
aad
xchg
dec
lcall
mov
add
add
push
cwtl
xchg
xchg
test
mov
lods
pushl
mov
mov
call
push
pusha
call
add
mov
add
mov
push
xchg
fistpl
fistps
jmp
pop
mov
call
lcall
test
cmpsl
pop
add
add
popa
popa
popa
adc
pushf
pushf
fwait
cld
mov
mov
mov
mov
scas
lcall
jo
lcall
jmp
add
mov
dec
xor
jmp
outsl
stos
jmp
jnp
out
jge
push
jle
ficompl
mov
and
add
add
dec
adc
addr16
mov
mov
mov
mov
ret
mov
fs
movsb
inc
jl
sahf
and
pop
ljmp
add
ret
fmull
in
lea
cmc
xchg
push
xchg
leave
clc
xchg
enter
mov
movsb
movsl
sub
inc
aas
inc
adc
push
xchg
xchg
mov
inc
mov
xchg
ljmp
pop
push
pushl
add
adc
jmp
scas
push
cmpsb
into
clc
stos
iret
cld
scas
sar
std
scas
sar
cld
lods
sar
in
mov
inc
mov
cmpsb
ds
std
incb
xor
jno
inc
scas
mov
mov
aam
mov
aad
rcl
out
leave
leave
lret
mov
jmp
add
ret
add
aad
jno
out
xchg
stc
mov
cld
mov
inc
inc
cld
rcr
lock
shl
test
dec
addl
lods
add
in
in
or
out
jmp
outsb
fisubl
movsl
es
ljmp
add
lret
add
faddl
jne
lock
std
iret
in
call
out
call
in
call
in
call
out
cmc
leave
fdivr
aam
int3
in
lods
lods
scas
popa
addl
add
incb
std
std
push
int
shrb
sahf
sbb
lods
add
mov
add
loope
jp
cmc
push
movsl
std
loop
xlat
jmp
std
aam
std
shl
cli
shl
push
fsin
fmul
shl
mov
mov
xchg
xchg
xchg
pop
ret
les
mov
push
gs
mov
or
fistps
cmp
out
mov
aam
ljmp
jmp
out
rcl
call
fcmovnu
scas
ret
vsqrtps
add
add
sarl
cmpsb
pop
mov
lods
dec
and
shll
lret
ja
mov
fdivrs
int3
adc
into
outsl
xlat
int3
iret
pop
fst
dec
in
loope
out
call
sbb
rol
add
mov
scas
arpl
mov
ret
lds
lret
sbb
bswap
into
int
aad
aad
incb
addb
add
add
add
mov
std
add
std
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
out
cwtl
and
pop
xor
or
mov
pop
xchg
aam
ljmp
push
add
pop
xor
mov
add
dec
arpl
mov
and
push
cltd
add
xchg
repnz
jle
or
ret
ljmp
sbb
inc
add
shll
mov
iret
cld
cmp
pop
pop
xchg
mov
push
sbb
mov
jle
sbb
mov
pop
dec
jle
dec
adc
ds
arpl
adc
xorl
sub
xor
hlt
jecxz
cmpb
fisttpll
icebp
outsl
divb
test
addl
ja
lahf
add
mov
dec
push
mov
imul
sti
fmuls
aaa
dec
sbb
xor
mov
jecxz
rol
ds
test
sbb
ds
jecxz
xlat
pop
add
repz
enter
pop
mov
mov
icebp
mov
or
scas
dec
lcall
fcmovbe
fisubl
mov
imulb
sub
mov
test
xchg
aaa
dec
mov
sbb
add
out
pop
decb
mov
leave
jg
lret
lahf
cmp
lea
adc
inc
xor
xor
and
dec
sub
js
clc
cmp
mov
repnz
and
add
fstpt
faddl
mov
scas
mov
sahf
adc
insl
or
xchg
out
out
jno
repz
jne
adc
or
or
scas
ffree
mov
xor
adc
xchg
sbb
bound
sbb
mov
cs
in
lods
imul
mov
and
enter
cmp
and
fists
and
fisubl
adc
xchg
add
mov
adc
shl
cwtl
or
cmp
push
xor
pusha
in
das
push
pop
xorl
lret
movsl
cmpsb
dec
cli
pop
loopne
add
jl
cmp
cs
cmp
lock
push
jle
dec
enter
fcompl
aam
xchg
icebp
push
loope
data16
adc
pop
stc
fmull
pop
and
in
imul
js
cs
pop
dec
mov
clc
lock
addr16
nop
mov
movsl
sub
adc
call
adc
mov
dec
push
push
fistpll
sahf
cmp
rclb
ljmp
cli
ljmp
aam
or
imul
mov
mov
movsl
gs
loop
inc
adc
and
mov
jecxz
push
andb
into
add
sub
push
ds
xor
in
shll
mov
das
xchg
inc
sub
aaa
and
pop
xchg
sub
icebp
push
test
out
lock
or
xchg
pushl
mov
int
xchg
adc
pop
adc
inc
ss
lret
push
fwait
hlt
sbb
faddp
push
into
mov
fmuls
mov
sbb
lcall
movsb
push
jle
and
adc
inc
imul
adc
adc
hlt
fmull
es
rclb
lcall
mov
adc
inc
lea
ja
cmp
mov
jle
pop
frstor
mov
ret
and
push
fistpll
inc
adc
xor
and
mov
icebp
push
mov
jo
mov
sbb
roll
mov
sbb
addl
add
aas
nop
stos
inc
cli
pop
xor
pop
iret
or
int3
arpl
pop
jmp
or
shrd
sbb
xor
or
rcrb
push
xchg
inc
adc
into
mov
fwait
mov
adc
xchg
dec
aaa
mov
bound
adc
pusha
dec
stos
movsb
cmp
jno
mov
and
xchg
cmc
popa
std
flds
das
in
stos
adc
addl
fmuls
jl
aas
jne
icebp
nop
int
jmp
repnz
icebp
gs
cmp
jb
sbb
lock
add
push
pop
ret
xchg
rcrl
rorl
int3
mov
sbb
xor
dec
or
cmpsb
movsl
shlb
das
mov
sarb
sbb
and
inc
or
sub
int3
sbb
mov
orb
rolb
mov
mov
cli
sahf
adc
shlb
inc
jle
scas
xor
mov
sarb
mov
push
push
adc
and
mov
daa
lods
cmp
cs
cmp
pop
sub
or
sub
mov
js
sbb
xchg
cmc
cmp
ljmp
mov
adc
xor
je
and
pop
xor
jecxz
sub
cmc
pusha
cmc
lods
jle
push
push
stc
xor
rclb
out
mov
jg
xchg
pop
stc
out
mov
lea
lcall
sbb
stos
jge
ja
js
pop
dec
sbb
adc
mov
inc
mov
push
leave
jno
scas
cs
ljmp
xchg
sub
xchg
xor
ja
or
mov
jb
dec
test
sub
or
sub
jb
popa
ss
loope
lea
cltd
mov
lods
clc
lds
fwait
pop
arpl
xchg
inc
adc
jle
daa
mov
fildll
mov
ret
popf
shrl
inc
enter
test
leave
iret
in
push
xor
and
and
mov
cld
dec
or
jno
insb
scas
push
push
out
inc
ret
pop
mov
outsl
push
mov
mov
sti
sbb
xchg
ret
mov
dec
xor
cwtl
movsb
pop
je
dec
fwait
xchg
push
or
pusha
notl
les
mov
lgs
leave
icebp
mov
ret
mov
mov
out
pop
mov
pop
dec
iret
test
pop
lock
imul
dec
les
in
enter
dec
cmp
jnp
mov
or
cs
pushaw
lock
adc
mov
mov
mov
rcrl
fnsave
pop
out
stos
xor
xchg
int3
jbe
incb
xchg
dec
pop
mov
out
leave
jns
mov
jbe
push
jg
push
mov
aas
push
lea
jnp
push
mov
loopne,pt
lods
pop
out
pop
and
push
mov
jbe
jnp
std
xor
aas
dec
mov
lock
ret
scas
mov
ds
mov
xor
or
fidivs
sub
pop
test
xchg
mov
insb
add
rorl
iret
pop
and
aas
push
jge
in
scas
ja
pop
test
lret
in
std
and
lcall
and
cli
ret
repz
test
pop
cmc
inc
outsb
or
cwtl
shrb
icebp
mov
dec
filds
mov
std
xchg
pop
xlat
outsb
xchg
mov
sbb
mov
mov
or
subb
dec
dec
hlt
add
cmp
jecxz
mov
insl
shl
mov
mov
jp
ret
aam
insl
mov
sarb
cld
lcall
and
cmp
fs
cmp
cmpsb
hlt
test
jns
sub
mov
cwtl
or
lds
std
cltd
test
ret
ret
in
test
fsubs
fnstsw
out
into
enter
testb
xlat
sub
dec
pop
cmc
jg
fnsave
jl
rcl
sti
xchg
add
lcall
inc
mov
into
test
insl
int3
leave
push
in
cli
in
hlt
mov
sbb
or
adc
mov
ret
hlt
in
in
push
iret
dec
ss
add
in
test
mov
test
push
cvtpi2ps
inc
das
pop
popa
popa
dec
fists
mov
std
in
add
cmp
and
mov
fdivs
imul
xchg
xlat
popa
clc
or
jg
push
push
jmp
adc
fs
xchg
mov
push
out
jo
test
adc
pop
ret
pop
mov
dec
sub
inc
pop
add
jl
jno
push
jmp
add
clc
push
xchg
outsb
insl
xchg
mov
sub
cmp
out
xchg
pop
fwait
xor
in
test
mov
int
testb
int3
mov
jle
repnz
sbb
sub
sbb
shlb
aam
add
mov
adc
mov
sbb
outsb
cltd
mov
or
and
cs
notl
out
inc
xchg
adc
push
popa
xchg
cs
jbe
mov
xor
mov
cli
add
sbb
mov
mov
test
lods
adc
ljmp
insl
int3
push
les
push
scas
cwtl
data16
es
aas
lds
push
movsl
push
gs
inc
mov
popf
cld
call
mov
sar
mov
and
mov
add
inc
jecxz
subl
cmp
jnp
call
aaa
lea
mov
pop
and
cmpsb
xchg
mov
std
xchg
and
stos
inc
lods
inc
fs
ss
push
cs
sub
jno
push
or
shrl
jle
sub
or
lods
test
and
jb
mov
jle
sub
adc
and
push
dec
sti
test
and
andb
xor
notb
inc
stos
inc
fcompl
jbe
pop
scas
cmp
add
dec
or
rcll
rcl
loopne
stos
and
or
out
icebp
mov
or
test
jecxz
out
fwait
insl
or
cs
xor
outsl
shrl
roll
jp
jecxz
lds
inc
out
sbb
fisubrl
sti
stc
lret
xchg
aam
rorb
jle
xchg
sub
xor
jae
xor
movsb
or
xor
and
or
xor
in
jg
fidivrs
inc
fdivp
ja
sbb
cmp
add
cli
xchg
push
hlt
xchg
divb
insl
add
mov
xor
mov
fdivrl
into
inc
jns
sub
aad
sub
jle
add
and
pop
scas
in
sbb
cltd
mov
sub
dec
push
mov
daa
pop
hlt
push
mov
push
add
aas
xor
stos
arpl
push
jmp
mull
js
mov
push
cwtl
stos
ja
sbb
ds
nop
mov
sti
xchg
rcrl
int3
or
pop
out
mov
dec
loop
jge
add
inc
xlat
outsb
jp
stos
inc
or
cs
ret
mov
pop
in
aad
fcmovb
xchg
fstps
loope
cli
fwait
xor
and
subl
test
add
and
xlat
adc
movsb
xchg
mov
mov
imul
enter
scas
jmp
lea
cld
pop
repnz
sbb
jg
mov
lea
shl
js
xor
int
movsb
xchg
cs
lret
bound
fld
pop
lret
dec
sbbl
in
dec
in
sub
imul
adc
rorb
mov
jle
cmp
call
mov
fbld
pop
cmp
mov
outsl
or
test
js
push
popf
aam
cmp
or
lahf
mov
push
inc
fnstenv
mov
jo
or
mov
mov
push
les
jne
dec
addr16
or
sbb
fs
mov
fidivl
nop
mov
push
xor
inc
inc
pop
les
popfw
xor
in
sub
jp
mov
cmc
mov
mov
cltd
testb
imul
fwait
inc
int3
arpl
aaa
xor
arpl
xchg
dec
bts
push
inc
pop
fdivs
shrl
push
out
inc
fadds
mov
mov
pop
arpl
mov
xchg
and
push
pop
pop
out
dec
pop
into
gs
in
int
insl
lret
mov
dec
loop
jb
shll
inc
fildl
xor
jge
aaa
mov
adc
lret
mov
cmp
lock
fucom
sahf
pop
repnz
push
xchg
sub
xchg
fbstp
push
rclb
add
cmp
gs
push
dec
loopne
aas
mov
fsubrs
jns
loopne
jae
jo
dec
pop
mov
xchg
imul
lds
cwtl
das
mov
inc
fisubrs
lods
mov
nop
or
into
xor
ss
test
mov
pop
mov
data16
shlb
inc
leave
pusha
jl
fwait
xor
or
inc
xlat
nop
les
or
xchg
xor
push
leave
pusha
dec
push
js
subl
pop
xor
xchg
bound
shrl
inc
lea
clc
inc
fisubl
shrl
mov
lret
dec
out
inc
sub
aaa
xchg
aad
pop
adc
dec
ja
cli
xchg
push
mov
daa
leave
pusha
jno
push
jmp
dec
mov
std
stos
inc
adc
pop
lock
mov
cli
xchg
and
inc
lds
xor
push
bound
push
dec
adc
pop
mov
or
cmp
dec
push
jle
mov
std
nop
mov
pusha
mov
dec
sti
xchg
mov
adc
add
ljmp
dec
fdivrs
imull
test
fadds
movsl
cmp
adc
movl
mov
shlb
inc
ja
scas
lret
popf
xor
pop
test
mov
addr16
push
push
add
xorb
and
push
popf
adc
fdivl
movsb
mov
loope
jge
das
xchg
push
movsl
leave
push
dec
filds
pushf
xor
pop
jp
xorb
xor
fildll
nop
daa
stc
sbb
in
iret
xor
adc
addl
aas
es
movsb
shll
mov
jae
sbb
aaa
cmc
jbe
out
or
pop
or
jmp
or
cs
pop
cmpsb
shl
mov
dec
jecxz
shl
mov
aas
into
outsb
out
sub
sbb
inc
stc
scas
inc
jmp
pop
adc
and
adc
push
xor
arpl
les
aam
sti
lds
sbbb
in
ret
sahf
in
das
into
xchg
insb
out
sahf
mov
mov
cmpsb
adc
mov
and
inc
xchg
sub
fiaddl
pop
scas
loopne
xchg
sub
add
pushf
adc
jl
mov
cs
lods
out
or
push
sub
inc
je
xchg
sub
sbb
js
cmp
adcb
dec
loope
pop
mov
mov
sub
mov
test
dec
push
aam
cmp
mov
pop
scas
inc
popa
mov
fiaddl
xor
mov
fldt
ret
je
orl
in
test
mov
pop
rep
sub
jp
and
jo
lods
jno
xchg
rorl
or
cmp
repnz
and
loope
xor
test
lret
sti
push
adc
dec
cmpsl
xor
sbb
iret
in
mov
jmp
pushf
es
lret
test
jmp
mov
cmp
mov
and
lret
jns
mov
cwtl
and
outsb
xlat
in
add
out
std
fiadds
movsb
sahf
jle
mov
ret
dec
stos
inc
pop
sbb
dec
cmpsl
jl
dec
or
frstor
jle
xor
pop
sahf
jne
int
fs
push
call
push
sbb
mov
mov
pop
repz
jp
into
add
xchg
mov
xor
jae
fidivl
xchg
push
inc
inc
and
mov
nop
xchg
ret
imul
cmpsb
fcom
imul
mov
lret
jl
pop
popf
push
pop
mov
add
push
loop
add
pop
loopne
sahf
mov
shrb
jmp
pop
fwait
imul
or
inc
fcmovb
adc
mov
dec
test
int3
push
dec
pop
dec
jmp
out
stos
repz
ficoml
out
ljmp
mov
and
mov
js
jno
nop
mov
cld
mov
jmp
push
fucomi
enter
imulb
or
cmpsl
addr16
aam
push
inc
outsb
shlb
icebp
push
mov
add
movsl
lea
push
lock
dec
pusha
fistpl
fiadds
ret
mov
lcall
xchg
movsb
mov
icebp
in
sbbl
adc
jl
sub
inc
mov
or
pop
jne
lock
dec
xchg
popa
push
cmc
cs
sub
aam
and
sahf
xchg
sbb
popf
lcall
fsubs
in
jb
js
repz
shrl
cmpsb
jp
cmc
dec
mov
push
push
jmp
lods
js
bound
iret
ficompl
sub
sub
imul
mov
mov
or
pop
dec
sti
xchg
jle
fimull
jp
outsb
sbb
ds
cli
sub
loopne
cmp
push
adc
test
dec
add
pop
jae
clc
std
jae
inc
decb
lock
sub
pop
scas
stos
push
arpl
lret
dec
in
pop
xchg
sub
sub
inc
mov
inc
fcomps
leave
adc
mov
inc
and
or
jae
test
sub
jg
jl
stc
sti
xchg
mov
ficomps
in
push
inc
ficoml
mov
movsb
push
popa
lret
daa
push
call
ds
and
xchg
dec
inc
fmuls
pop
rep
xor
xor
mov
lret
push
les
mov
push
dec
cmp
sarl
jl
mov
shrl
xchg
aaa
mov
mov
repnz
mov
adc
jbe
lret
cmp
and
mov
loope
ja
cmp
add
fst
push
cwtl
es
cltd
adc
shlb
jg
andb
or
sub
xchg
inc
add
mov
mov
mov
xchg
jns
imulb
das
mov
in
jbe
jp
xchg
mov
cld
adc
lcall
inc
fnsave
sbb
ds
push
addr16
fidivs
inc
xor
xor
adc
fwait
int
sbb
sub
xchg
and
sub
mov
test
push
sarl
iret
rol
mov
adc
outsl
xor
mov
mov
ja
lahf
test
pop
dec
cld
gs
out
mov
jmp
cmp
pop
repz
out
enter
aad
jbe
mov
or
jecxz
push
jmp
add
add
call
call
mov
fdivr
xchg
mov
icebp
xchg
rclb
and
ljmp
xchg
sub
pop
mov
sahf
fnstcw
ljmp
fcompl
mov
add
fidivs
lock
sahf
loop
inc
fcompl
clc
adc
ja
je
or
pop
popf
pop
sbb
add
cmpsl
mov
lock
rcl
cmpsl
ret
pop
cmp
cld
notb
pop
repz
dec
out
or
jl
dec
in
aas
pop
xor
dec
popf
popf
xor
sub
fstps
pop
lahf
ss
inc
adc
fcompl
mov
out
out
jl
jecxz
lret
jb
mov
pop
sti
xchg
sahf
cwtl
das
push
jmp
jmp
mov
cmp
sub
jo
leave
imul
movsb
sbb
pop
xor
cmpl
daa
xor
jg
sbbb
mov
loop
testl
pop
add
imul
sbb
aas
dec
fistpll
mov
int
sahf
leave
pusha
sarb
push
jmp
icebp
mov
les
shrl
sub
icebp
mov
jl
stos
dec
adc
imul
into
push
popf
jmp
aas
and
test
jle
movsl
add
xchg
and
fnstenv
xchg
pop
hlt
daa
xor
pop
test
imul
pop
hlt
cmp
and
jnp
pop
xchg
int3
arpl
addb
and
mov
mov
mov
jo
ja
repnz
cmp
outsb
xchg
mov
cmpsl
mov
rcrl
loopne
lds
les
mov
mov
xor
mov
ret
ss
stc
lahf
ss
or
xchg
out
jne
mov
roll
cmp
ret
mov
sahf
xor
jns
loopne
loopne
jg
xor
xchg
cs
popf
xor
push
shrl
mov
fs
mov
ljmp
sub
shll
fisttpl
scas
inc
lahf
cld
rol
repnz
stc
nop
rclb
mov
mov
xchg
jmp
or
mov
ret
adc
jbe
dec
jecxz
xchg
outsl
push
sub
push
lods
mov
hlt
mov
xor
out
sbbb
or
push
ds
mov
cmp
test
lret
filds
mov
adc
out
test
and
mov
or
ss
or
fs
adc
mov
loopne
pusha
idiv
add
xchg
mov
adc
rcrl
das
clc
popa
hlt
jmp
int
inc
or
push
lcall
sub
mov
add
pop
hlt
enter
aaa
jmp
lret
fnstcw
in
mov
nop
jg
xchg
sub
add
xchg
loop
and
testb
pushf
test
xor
ret
and
dec
sbb
mov
lock
ret
pop
cli
xchg
xchg
je
ja
sbb
pusha
pushf
add
sub
rorb
mov
cmpb
repz
je
mov
add
jno
mov
jns
fcoms
leave
push
ret
pop
inc
jb
andl
es
pop
mov
pusha
test
or
or
pop
scas
mov
stos
inc
loopne
in
xchg
dec
loopne
inc
adc
inc
inc
dec
mov
jns
push
mov
insl
popf
or
enter
mov
push
repnz
decb
cmp
push
test
in
mov
mov
movsb
cmp
add
mov
fucom
ja
push
ds
iret
test
mov
cmp
cwtl
loop
cmp
push
push
sub
pop
ja
xor
out
test
int
fsubs
jle
lahf
mov
and
in
jmp
xor
sbb
cli
ds
fldt
cmp
or
into
test
aad
out
shlb
adc
nop
hlt
mov
js
or
lret
mov
test
es
xchg
nop
montmul
cmpsb
add
fdivrs
addr16
push
movsl
fdivl
stos
cmc
mov
cmp
std
xchg
mov
push
cmpsb
cmp
mov
ret
xlat
es
xor
sub
pop
lods
dec
xchg
sub
fsubrs
sahf
lods
inc
shlb
push
popf
xchg
das
int3
arpl
pop
push
jmp
fucom
dec
loop
push
mov
aaa
jge
imul
and
cmp
movsb
lods
test
xor
cmpsl
ds
dec
and
mov
xor
jmp
adc
lahf
std
sbb
or
or
jp
and
adcl
push
jmp
stos
mov
call
lds
mov
xlat
xor
mov
add
mov
mov
pop
repz
std
loope
lock
faddl
imul
pushf
xchg
repnz
lock
fs
popf
xchg
adc
dec
nop
call
lahf
ss
outsb
sarl
in
xorl
cmc
dec
das
xor
mov
lds
leave
and
paddusw
loop
ljmp
sub
mov
jns
ljmp
in
jmp
or
sbb
ljmp
sbb
xchg
sub
mov
adc
xchg
outsb
pop
in
pop
pop
sub
sub
sbb
push
mov
icebp
les
xchg
push
clc
and
insb
sbb
cmp
push
xchg
jl
cwtl
loopne
push
daa
mov
es
xor
jbe
fstp
inc
ljmp
das
or
or
iret
push
jge
add
andl
xchg
xchg
cmp
add
add
and
mov
cmp
and
push
mov
push
arpl
jg
bound
sbb
mov
lods
into
push
mov
ror
test
divl
leave
lds
pop
and
jns
xlat
ds
xor
push
outsl
or
inc
sub
mov
cmp
jns
gs
push
in
xor
imul
pop
pop
lret
insb
or
and
int3
test
or
stos
fs
fisttpll
arpl
incl
pushf
cmp
repz
xchg
lea
xchg
sub
sbb
aas
ja
mov
push
jmp
mov
scas
cmp
dec
add
mov
ficomps
cmc
pop
xor
movsb
xchg
sub
mov
ret
push
or
sub
jg
test
div
xchg
xchg
mov
cmc
addl
jecxz
push
int
dec
shl
fsubrl
loope
mov
push
lods
add
push
out
aaa
and
adc
out
and
cmp
pop
in
pop
jle
adc
leave
pop
cmpb
ds
fimull
jnp
xor
xor
pop
repz
push
std
cmp
dec
ret
sar
lock
sub
sub
jne
pop
in
cltd
js
pop
stos
mov
cli
xchg
and
cmp
jb
icebp
mov
xchg
sbb
xchg
decb
out
add
mov
inc
pop
and
mov
pop
push
inc
mov
xchg
cli
inc
adc
xor
push
and
inc
adcl
gs
repz
leave
inc
xchg
push
lahf
xchg
mov
pushf
mov
push
jmp
add
mov
adc
les
sbb
sub
xchg
lods
daa
xchg
test
test
adc
or
pushf
inc
inc
fsubl
shrl
mov
into
sbb
and
xchg
test
leave
scas
jae
mov
cwtl
das
std
sub
es
scas
sub
jne
sar
pop
mov
cld
xor
mov
mov
lret
popa
clc
gs
push
lcall
xchg
sub
gs
mov
jp
push
dec
insl
ficoml
jae
add
scas
inc
into
enter
iret
clc
popl
ficompl
xchg
ret
cwtl
dec
inc
fidivrs
loop
lret
mov
std
xchg
mov
or
xchg
stos
std
mov
jle
testl
mov
dec
incb
aas
popf
adc
shrb
jg
mov
loopne
push
int
or
je
data16
pop
nop
adc
ss
jge
xchg
repnz
sbb
adc
xchg
mov
mov
out
in
mov
pop
divl
mov
fdivl
in
loop
mov
pop
add
shll
insl
jl
movsl
lds
xor
mov
repnz
clc
xor
addr16
lds
inc
pop
sbb
in
std
and
roll
and
or
pop
push
cmpsb
lret
adc
xlat
pusha
iret
pop
cmpsl
xchg
loopne,pt
lahf
in
mov
mov
arpl
or
cmp
sbb
dec
pop
lock
addr16
cmc
add
or
in
divb
jnp
pop
cmp
xchg
js
sub
pushf
jns
push
xchg
jl
xchg
xchg
sub
jne
je
int
push
out
xchg
sub
or
mov
dec
jmp
and
iret
test
sub
pushf
shll
jns
xchg
stos
sarb
into
adc
loop
cwtl
repz
inc
add
notl
adc
push
fistpl
mov
repnz
cmp
nop
subb
loope
lret
mov
push
add
mov
inc
inc
mov
fs
mov
outsl
jb
lcall
xchg
icebp
mov
nop
xlat
in
adc
push
movsl
fs
out
push
pop
sahf
aaa
fwait
jmp
pop
sbb
notl
push
pop
lahf
mov
mov
xlat
mov
insl
inc
sub
jl
xchg
scas
add
fisubl
and
sbb
push
fs
jo
fcomip
les
out
and
xchg
lods
lcall
xchg
scas
push
lret
jo
jl
shl
adc
adc
pop
test
cmp
jge
xor
adc
std
lock
push
lret
or
out
add
mov
lret
lods
mov
xchg
nop
popf
cmp
es
jge
pop
mov
sbb
in
push
cmpxchg
and
cmpsb
cmp
movsb
hlt
mov
in
push
add
push
sbb
loope
jl
mov
adc
ss
mov
iret
or
jl
sub
adc
mov
mov
xor
or
xchg
ret
mov
int3
shrl
xchg
mov
pop
jecxz
out
idiv
cmp
movsl
cmp
sahf
xchg
sub
imul
push
loopne
jecxz
lock
fsubs
pop
mov
jb
sahf
popf
icebp
xchg
add
or
and
and
fs
repz
aas
push
ljmp
jl
stc
jbe
iret
mov
pop
xlat
inc
js
cmc
and
lds
inc
std
sbbl
xor
push
sbb
aam
cmp
xchg
lahf
sub
pusha
push
aas
push
pop
notb
scas
daa
scas
jnp
aam
and
mov
lods
aas
and
mov
jp
push
push
add
mov
lcall
push
out
jae
pop
mull
insb
repz
push
or
sbb
mov
add
enter
and
xchg
jmp
cmp
sbb
int3
push
jmp
push
cld
out
push
fsubrs
std
jns
cli
jno
jno
hlt
inc
adc
fdivp
pop
and
pop
repz
lahf
cs
sub
hlt
dec
mov
fidivl
inc
pop
mov
jne
xchg
mov
pop
out
mov
pop
in
lock
pcmpeqd
aas
add
cmpsb
jl
xchg
dec
sbb
jl
jge
push
bound
jo
inc
mov
xor
xchg
xchg
jg
ja
fwait
roll
into
cmc
das
into
or
loop
dec
dec
jne
andb
hlt
inc
sbb
and
inc
lods
adc
jne
add
test
push
cld
add
clc
push
insl
or
cmp
stos
sub
ficoms
jb
sbb
mov
ss
or
imul
and
outsb
cld
or
sbb
add
cmp
shrl
fwait
adc
enter
je
int
pushf
xor
out
jge
cmp
aaa
into
scas
lock
mov
loop
lods
mov
fdivrl
push
stos
add
cli
sub
add
fwait
mov
je
clc
mov
cmc
stc
sahf
sarb
ss
cli
divb
add
js
pop
loope
cli
int3
inc
xor
pop
sahf
repz
sbb
cwtl
fsts
xor
pushf
mov
mov
gs
hlt
aad
loopne
mov
movsb
psraw
xchg
xor
pop
push
lods
scas
sbb
sti
fsubp
out
fcmovnb
jb
lock
stos
mov
lock
push
mov
aaa
fistpl
xor
cmp
mov
jle
xchg
ja
dec
xchg
push
sbb
arpl
dec
mov
rolb
or
push
in
pop
xchg
pop
lock
iret
xchg
cwtl
mov
cli
xchg
push
stos
pop
fwait
and
push
call
lahf
jne
fbld
pop
loop
xor
out
inc
lahf
dec
sbb
jg
xchg
sub
pop
iret
adc
add
mov
inc
out
shrb
cmp
mov
out
xchg
sbb
adc
lock
fwait
insb
mov
mov
add
sub
imul
cmp
xor
outsb
cmc
jb
xlat
xor
inc
add
adc
pop
push
shlb
jae
adc
push
mov
inc
pushf
lcall
add
xchg
sbb
sbb
inc
pop
pop
mov
mov
xchg
inc
lds
dec
inc
or
fistpl
lahf
imul
out
fistpl
push
or
shrb
dec
xlat
outsb
jl
lock
aam
loop
cmp
leave
add
push
test
gs
or
fcmovbe
imul
rol
mov
sbb
ljmp
or
addr16
mov
or
jmp
das
daa
pop
lret
cmp
push
inc
mov
dec
add
adc
sahf
lret
scas
inc
dec
cmc
out
shrb
mov
mov
clc
xor
nop
out
loop
enter
sbb
adc
lock
push
lahf
jo
in
nop
inc
pop
loop
mov
cmp
daa
adc
jo
mov
jge
add
rcll
mov
sti
lret
clc
push
pop
lods
pop
lock
xchg
dec
fstl
mov
movb
adc
adc
inc
out
xchg
lcall
jmp
jbe
mov
ret
pop
orb
pop
fwait
xor
cmc
divb
jnp
mov
add
cmc
xor
nop
dec
andl
lcall
sub
fsubrs
or
clc
jnp
pushf
dec
mov
pop
test
test
jl
sub
xlat
imul
jne
or
lds
inc
fcmovne
mov
fldenv
ljmp
xor
call
mov
xor
push
sbb
jge
aaa
add
xor
pop
mov
loope
out
call
mov
nop
dec
daa
es
adc
rcll
jo
subb
mov
adc
je
add
rorl
pusha
mov
push
jl
mov
mov
mov
fcmovnb
or
push
jmp
rcll
test
jae
mov
sub
movsl
or
ljmp
ret
rcr
int3
pop
dec
loopne
fmul
mov
scas
shlb
aad
mov
movsl
mov
lock
add
xor
in
pop
data16
adc
jno
inc
or
mov
push
mov
xchg
push
mov
aam
or
dec
clc
xorb
insl
imul
sbb
adc
out
xor
mov
jae
inc
fidivs
lahf
push
lods
rclb
lock
jmp
mov
stc
pop
cmc
sub
or
dec
jge
repnz
popa
cmp
push
loopne
mov
pusha
adc
xchg
add
stos
xor
sarl
xor
lahf
stc
inc
mov
ss
pop
pop
movsb
in
jae
mov
mov
adc
daa
orl
mov
jnp
jns
inc
xchg
lcall
xchg
adc
add
unpcklps
gs
arpl
scas
mov
call
sets
jmp
mull
xchg
call
xor
lahf
add
cwtl
fimuls
add
adc
sahf
add
jecxz
insl
push
cmc
insl
aaa
cmp
adc
mov
andl
imul
nop
test
mov
into
scas
jns
xor
fstps
aas
xor
pop
pop
xchg
xchg
adc
xchg
lcall
cmpsb
jne
out
je
pop
mov
adc
cltd
mov
push
pop
loopne
and
dec
or
movsb
pop
pop
insb
mov
adc
fwait
push
sahf
xor
jmp
mov
dec
lea
dec
insb
xchg
cwtl
notl
sbb
cmp
adc
xchg
bound
pop
icebp
push
in
repnz
push
pop
cld
xchg
add
xchg
enter
fdivl
mov
cmp
mov
nop
jecxz
dec
arpl
icebp
je
xchg
cltd
test
jmp
add
mov
repnz
mov
sub
hlt
xor
lcall
fstps
jecxz
es
xchg
mov
jb
les
xchg
lret
aas
aam
jno
mov
sub
lret
mov
outsl
mov
or
add
dec
ficomps
call
in
lods
mov
aad
mov
sbb
mov
xor
xchg
in
mov
mov
loope,pt
out
out
pop
lret
push
hlt
inc
movups
jg
or
push
cmp
mov
jl
or
xchg
pop
mov
xchg
sub
ss
add
xor
jl
test
and
repnz
mov
das
xchg
or
lcall
out
test
mov
test
stc
add
xchg
hlt
jecxz
orl
xchg
pop
imul
clc
scas
mov
leave
aad
jmp
jmp
cmp
int3
int
mov
test
mov
lods
inc
add
xor
xchg
cmp
xchg
push
or
xor
inc
mov
aaa
ja
imul
outsb
add
cmc
and
or
jmp
cmp
cmpsb
cmp
test
in
test
pop
add
mov
dec
adc
fs
adcb
dec
jno
xchg
mov
scas
int3
arpl
lcall
outsl
mov
push
lds
movb
imull
inc
icebp
cmp
stos
push
test
inc
icebp
push
jae
jg
jne
mov
adc
mov
nop
pop
andl
xchg
lds
outsl
aad
mov
adc
in
stos
lea
mov
movsb
mov
shll
out
bound
mov
mov
lea
fldpi
stos
pop
mov
fmul
popa
loop
sbb
popa
jmp
stc
sbb
rcrl
push
addr16
push
leave
xor
iret
cmp
push
nop
mov
movsl
cli
mov
int3
dec
mov
push
cmp
and
loope
adc
clc
sub
outsl
fists
jno
xlat
cmp
lahf
add
je
jne
dec
sbb
jmp
les
or
fcmovu
cmc
pop
and
and
mov
mov
push
pop
cwtl
mov
aas
adc
mov
xorb
in
push
and
jae
xlat
jle
or
insl
xor
dec
inc
dec
in
mov
addr16
cmpsl
fldcw
mov
mov
popa
cmp
xchg
jl
push
xchg
mov
fscale
dec
insl
aas
sub
div
fimull
sub
adc
int3
mov
mov
inc
lret
leave
fiaddl
push
stos
inc
pop
mov
dec
psubsw
lock
push
and
dec
cmp
push
daa
rcr
fisubrs
fistpl
dec
lret
cmp
test
sbb
and
outsl
push
jo
mov
mov
fwait
add
mov
jle
stos
fdivrl
jns
rcll
dec
into
ds
insl
lods
inc
lahf
and
push
data16
lret
bound
outsl
in
sbb
cmp
xor
xor
cmp
out
test
push
cmp
and
adc
popa
dec
inc
add
call
mov
sub
adc
fucomp
scas
push
ror
fsubs
add
cmp
mov
arpl
xchg
fidivrs
es
fsubs
es
clts
es
cmp
lods
jp
mov
xor
mov
push
dec
enter
push
stc
jbe
rcrl
lds
aad
in
ret
push
or
cmp
cwtl
xchg
pop
pop
jl
xchg
lock
cmc
pop
mov
cli
shrb
sbb
jmp
subl
mov
rclb
sbb
jbe
push
sub
aaa
adc
mov
cmp
aam
cld
lock
add
dec
inc
xchg
sbb
ds
test
xchg
and
dec
out
mov
repz
pop
int3
fisttpl
xor
loop
mov
fldl
aam
test
add
xor
movsl
lods
in
movsl
loope
nop
hlt
dec
sbb
aad
and
and
iret
gs
inc
xor
xor
shlb
adc
pop
mov
ss
sbb
mov
and
repnz
fldenv
mov
jnp
xor
subl
pop
sbb
enter
xor
and
inc
adc
gs
mov
sbbb
inc
cltd
roll
movsl
roll
pop
jae
dec
pusha
dec
iret
push
js
mov
fsts
rcrb
adc
pop
adc
sbb
pop
out
mov
fstps
out
mov
jnp
mov
add
and
rclb
push
cmpsb
outsb
ret
leave
push
iret
mov
cmp
stos
stc
push
addr16
int3
in
out
lods
fbstp
dec
mov
push
les
arpl
push
inc
xchg
rclb
ja
clc
jmp
mov
or
cmpsb
cli
push
ljmp
inc
push
dec
popa
mov
sbb
mov
mov
cmp
mov
mov
add
mov
inc
ljmp
mov
or
into
fwait
mov
xor
or
xor
cmp
inc
fdivl
xor
mov
adc
mov
frstor
cli
lds
mov
and
or
roll
and
sarl
sub
div
iret
data16
mov
mov
fucomip
pop
mov
test
xchg
sub
cmp
int
cltd
jmp
lret
lea
in
or
adc
daa
mov
gs
inc
fadd
xchg
cli
adc
int3
arpl
sbbl
pop
mov
lahf
mov
mov
stc
repz
jb
adc
fwait
ss
jo
jge
sbb
shrl
pop
leave
jae
dec
sbb
inc
push
lods
mov
cltd
mov
push
in
sub
ja
and
enter
int3
fidivrs
mov
outsl
push
orb
fiaddl
out
xchg
notl
lods
unpckhps
sarb
mov
loope
mov
inc
mov
mov
out
push
sbb
push
je
xchg
js
fidivs
std
rolb
mov
push
mov
lods
out
js
mov
pop
subb
push
xchg
push
out
cmpsl
in
loope
dec
cmp
mov
insb
push
subl
jmp
es
call
inc
add
or
ror
mov
pop
cmp
mov
sti
iret
mov
mov
push
add
orb
insb
cmp
xor
inc
add
add
push
outsl
push
imul
dec
or
pushf
sub
push
rcl
cmp
shll
inc
xorl
imul
ds
js
sbbl
imul
xchg
or
push
sbb
cld
scas
mov
push
inc
jns
mov
mov
movsl
inc
imul
adc
or
aas
lea
push
stc
pop
pop
pop
aaa
movl
push
push
sbb
jnp
repnz
stc
mov
movsb
or
dec
ficoms
mov
ja
and
mov
xchg
cmpsl
xchg
test
lods
fnstenv
or
cmc
and
sub
pushf
test
cmp
arpl
cwtl
add
jne
aas
popf
mov
mov
add
out
cmc
shrl
or
mov
pop
mov
fldt
cmpsl
js
fmuls
in
dec
dec
aad
jl
xor
fwait
jns
stos
jo
pop
add
mov
aas
and
cmc
mov
push
adc
cmp
cli
mov
iret
subl
xor
cltd
test
mov
mov
xchg
popa
cltd
lahf
push
xor
xchg
mov
pushf
mov
cmpsb
cmp
mov
rcrb
fimull
gs
cld
cmpsl
mov
pop
bound
popf
mov
fsubl
jge
ror
sbb
nop
das
sbb
cltd
stos
and
cli
inc
insb
lret
mov
dec
xlat
sbb
xchg
adc
clc
adc
cmp
pop
add
sub
cmp
daa
mov
cld
int3
fcmove
cwtl
nop
in
sbbl
mov
cli
jns
cli
mov
incb
xchg
das
pop
nopl
sub
cmp
and
mov
pop
cmc
clc
cltd
adc
std
int3
jl
xchg
adc
and
jnp
pop
mov
mov
cmpsb
adc
jne
push
or
sbb
xchg
int3
push
or
jne
enter
and
xor
xchg
pop
push
jmp
in
jo
adc
push
pop
push
insl
push
jg,pn
lods
mov
outsb
sub
movsl
aas
dec
ja
jo
cmpsl
sbb
push
loopne
inc
scas
shll
xor
call
popa
out
pop
pop
lcall
and
faddp
xchg
imul
sub
test
loop
jno
adc
leave
inc
mov
inc
push
int3
jne
mov
adc
mov
rcll
mov
jns
inc
cmpsl
jno
int3
outsl
push
xchg
gs
xor
dec
xchg
test
leave
rorl
xor
nop
sub
pop
cmc
push
arpl
pop
sbb
sub
xchg
std
xchg
fnsave
mov
insl
imul
loope
mov
jne
jmp
xorl
insl
lahf
fldl
cwtl
mov
xor
stos
js
lds
js
cmpsl
mov
les
pusha
into
jp
ja
adc
add
inc
and
jne
jg
divb
sub
jnp
push
cs
add
test
cmc
sub
push
fwait
mov
insl
or
aas
sub
fistpll
nop
and
popa
cltd
cmp
lret
loopne
mov
pop
in
stos
into
aas
dec
jmp
jne
fsubs
nop
and
sbb
cmp
and
shrb
cmp
mov
mov
out
inc
loop
dec
dec
in
mov
cltd
xchg
mov
inc
jns
jo
lock
inc
pusha
adc
xchg
das
cmpsl
sub
jne
inc
xor
jns
pop
std
dec
nop
jl
xor
pop
pop
cmp
adc
cmp
xchg
cmpb
lods
aam
lcall
inc
hlt
subl
jmp
adc
daa
roll
dec
jns
cmp
mov
and
or
xchg
test
push
jne
imul
cmp
movsb
push
pop
cli
mov
xchg
push
inc
cli
dec
addl
cs
je
pusha
gs
arpl
xor
push
fwait
mov
loope
cmc
popf
and
lret
in
cld
mov
inc
fldl
sbb
push
pushw
jnp
inc
mov
push
sub
fucomip
test
pop
mulb
xchg
mov
push
icebp
pop
mov
pop
sbb
mov
ja
mov
insl
loopne
pop
dec
add
out
jg
inc
je
mov
pop
lret
jne
or
aaa
jle
in
push
xorb
push
ss
mov
cli
rorl
out
fbstp
lock
mov
cld
xchg
sbb
fidivrs
insl
add
mov
mov
aad
insb
add
cmp
fidivs
add
xchg
adcb
cmp
test
push
sbb
inc
xchg
adc
pop
cmp
jge
mov
mov
mov
pop
mov
vmptrld
and
bound
jge
adc
popf
loope
push
es
push
outsb
les
xor
mov
xchg
push
push
repz
fsubl
xor
push
mov
jno
jno
lret
clc
mov
xor
fildll
sbb
lods
psadbw
imul
add
cltd
inc
enter
insb
pop
fsts
or
aaa
ret
out
jns
xchg
enter
add
lcall
push
adc
sahf
inc
jl
jg
jmp
out
xor
dec
pop
sbb
enter
bound
ljmp
rclb
insb
clc
jbe
movsl
sub
sub
jp
xlat
pop
mov
mov
pop
rol
pop
add
pop
jno
mov
cmp
testl
lods
cld
inc
xchg
out
loop
cld
jae
mov
jle
aaa
or
addb
pop
lock
mov
cli
mov
mov
jp
and
push
cmp
mov
dec
dec
dec
push
lret
dec
and
mov
sub
filds
cltd
xchg
mov
cli
push
popf
mov
cld
adc
pop
dec
fsts
fwait
xor
pop
mov
lods
sbb
xlat
jmp
cmp
dec
data16
out
sub
addl
jp
sub
lods
mov
fnstcw
mov
das
mov
pop
jecxz
stos
call
addl
cmp
and
push
xchg
mov
call
rcrl
xchg
loop
test
fistps
repnz
and
xchg
stos
jbe
decb
cltd
pop
mov
mov
inc
pop
lahf
test
pop
mov
orl
jo
dec
xchg
or
fmuls
hlt
sets
inc
add
sub
xchg
jle,pn
jns
inc
and
mov
xchg
ret
pop
mov
pop
ret
pop
mov
mov
repz
mov
adc
sbbl
pop
mov
jp
shll
xor
add
inc
dec
mov
dec
xor
jle
mov
inc
push
imul
sub
lret
imul
mov
xor
pop
add
jne
adc
push
or
xchg
jl
icebp
xchg
add
movsl
push
pusha
je
data16
xor
jle
or
outsl
stc
cmp
sub
pop
push
ljmp
xchg
add
mov
mov
out
adc
push
cmp
adc
daa
arpl
pop
mov
lcall
or
loopne
or
fnstenv
fidivl
jnp
mov
inc
insb
adc
jmp
jge
push
dec
ret
jle
or
xchg
mov
push
pop
sti
or
sbb
dec
fnop
addr16
sbbb
pmulhuw
mov
lahf
ss
shll
or
mov
xor
jge
xchg
sub
pop
pop
imul
cmp
rorl
dec
pushf
mov
dec
imul
adc
mov
xor
daa
inc
insl
imul
scas
mov
out
lods
stc
ds
lahf
ljmp
jnp
into
stos
stc
cmc
cmp
xchg
scas
repnz
mov
loope,pt
add
test
push
pop
sahf
cmpb
aam
mov
jne,pn
push
pop
loopne
mov
jge
dec
in
fwait
adc
mov
imul
and
notb
cmp
into
add
jne
fnsave
cltd
xchg
into
cmp
iret
call
sub
push
or
cld
test
push
add
aaa
mov
jns
sub
stos
cmpsb
add
sahf
mov
aad
movsb
cmpsb
in
mov
repnz
pushf
scas
arpl
and
or
pusha
negl
add
push
xor
xor
test
sbb
lds
cmp
pop
cmp
pop
mov
pop
je
je
inc
cmpsb
lds
mov
stos
subl
sbb
stos
or
cmp
inc
or
jo
push
sub
bound
xchg
movsl
pop
imul
lods
sub
or
les
popf
aaa
rcr
les
mov
inc
faddl
add
stos
fsubrp
fdiv
stc
xchg
mov
sbb
sub
imul
xchg
jecxz
dec
adc
push
inc
inc
test
mov
int3
xchg
cmp
and
lahf
bound
lea
sub
push
test
sub
xchg
inc
dec
mov
mov
add
das
out
jmp
sbb
sub
mov
fnstsw
psllq
xchg
mov
push
or
push
sbb
mov
sbb
inc
mov
jecxz
inc
fildl
mov
inc
in
or
pop
mov
ret
leave
add
sub
mov
xchg
shr
push
mov
pop
or
shrl
cmpsl
adc
adc
jo
mov
gs
scas
push
push
movsb
iret
data16
js
sbb
xchg
sub
out
pop
xchg
int3
or
dec
adc
sub
pusha
xor
and
repz
mov
flds
mov
add
lahf
xchg
and
fucom
outsl
daa
push
ret
pop
shll
out
mov
or
in
test
and
xor
movsb
ds
das
inc
push
in
ss
push
repz
jmp
pop
sbb
pop
out
push
xor
test
or
out
and
cmp
adc
push
gs
mov
pop
push
or
xchg
push
test
jecxz
orl
add
in
movsb
pop
hlt
leave
out
inc
sbb
jnp
lcall
cmpb
add
aam
pop
mov
mov
sub
sub
sub
jno
adc
cmpsb
inc
sahf
sbb
bound
cmc
ja
pop
mov
push
jmp
pop
push
out
fsubrs
push
xchg
xor
sti
fisttpl
pop
imul
jns
repz
lods
add
dec
das
lock
popa
imul
sti
ret
xor
mov
in
sbb
xchg
in
orl
jb
out
iret
adc
mov
ret
inc
sub
add
xchg
add
pop
mov
stos
mov
ljmp
mov
mov
sbb
daa
mov
mov
and
push
aad
cmpsl
out
sbb
mov
lea
mov
cmp
inc
int3
and
sub
push
scas
inc
pusha
or
fmull
leave
mov
mov
xchg
xor
push
fisubrl
mov
mov
movsl
addr16
push
push
sub
pop
cmc
pop
fnstenvs
out
pusha
sti
jecxz
add
lss
jmp
aaa
xchg
test
push
or
in
std
jecxz
adc
and
xor
imul
sbb
out
pusha
add
cmp
repz
aam
or
hlt
or
push
push
mov
shlb
and
enter
js
fs
inc
jae
pop
cwtl
and
lods
imul
into
movups
stos
cltd
std
xchg
movsb
fwait
jmp
mov
xor
popa
hlt
mov
adc
or
mov
add
cmpsl
sti
test
aam
mov
lret
cli
cmc
and
and
push
ret
sbbl
cmp
ja
cmpsl
test
cld
inc
test
shrl
test
icebp
js
lea
mov
jmp
xchg
mov
mov
mov
adc
pop
lock
fnsave
fwait
lods
adc
mov
jo
rcrl
pushf
popa
or
mov
mov
out
pop
inc
xchg
cld
mov
orb
pop
addl
jne
outsl
cmpsl
mov
xlat
stc
mov
frstor
inc
rcrb
inc
arpl
ss
mov
xchg
and
out
push
sbb
cmp
pop
mov
sbb
sbb
lock
cmp
jbe
mov
imul
cltd
add
out
lods
push
cld
add
fdiv
stc
loop
sbb
push
adcb
std
adc
cmp
push
outsl
sbb
mov
mov
sub
call
movsl
cmp
sti
sub
movl
mov
fidivs
push
mov
sarb
shrl
faddl
sub
add
out
mov
mov
pop
add
cmp
mov
or
fsubl
jne
dec
in
adc
das
cmp
xor
imul
int
lahf
movsb
stos
jns
fadd
and
fcoml
push
mov
xor
and
call
sub
mov
inc
dec
repnz
cwtl
negl
dec
rclb
or
out
mov
ret
xchg
sub
mov
and
mov
pusha
xchg
ss
inc
inc
pusha
mov
lret
lods
inc
std
mull
fists
cmc
mov
sub
lock
sub
xchg
cmp
sbb
xor
cwtl
adcb
adc
jns
mov
leave
cltd
jnp
nop
outsb
pop
sbb
popf
mov
frstor
ljmp
pusha
enter
lret
pusha
out
adc
mov
add
mov
inc
xchg
es
push
pop
mov
sub
cmp
pop
mov
nop
sar
dec
scas
sbb
lock
cmpsb
pushf
iret
dec
jg
fsubs
inc
inc
sbb
mov
add
vmovlps
cli
insb
add
rorb
negl
mov
push
orb
fwait
in
popa
jg
mov
rol
cmpsl
pop
adc
cltd
shl
mov
fdivl
add
jle
mov
stos
or
int
xchg
lret
sbb
or
mov
addr16
or
sbb
fsts
dec
add
stc
fucom
xchg
mov
das
push
push
rcrb
movsb
lcall
mov
mov
push
es
fnstenv
inc
sbb
adc
sub
sub
mov
mov
mov
pop
lret
push
fcomps
lea
loopne
loopne
lea
cmpsb
mov
xchg
out
and
or
mov
mov
cmp
mov
jge
movsl
and
push
or
hlt
adc
shlb
inc
sub
jg
dec
mov
push
adc
fsubl
movsl
fbstp
out
or
pop
scas
inc
int
punpckldq
out
int
popf
shl
repnz
adc
or
out
cmp
sbb
into
inc
sub
bound
clc
cmpsl
mov
cli
xchg
xchg
push
add
xchg
scas
inc
lds
or
dec
int
cmc
sbb
and
loope
mov
aad
into
xchg
push
insl
pusha
vprotw
adc
subb
or
movsl
adc
movsl
push
mov
movsb
mov
loop
int
jbe
xchg
jne
mov
lods
adc
or
xchg
mov
push
and
or
nop
imul
repnz
push
cmp
sbb
xor
add
call
pop
dec
gs
clc
nop
dec
test
sbb
dec
ret
xchg
mov
adc
jmp
das
xchg
stos
mov
jnp
outsl
inc
dec
add
fstl
push
adcb
xchg
cmp
fbld
or
mov
das
jmp
push
out
icebp
rcl
lcall
and
pop
xchg
inc
aas
mov
nop
push
inc
test
cmp
in
adc
mov
shr
cmp
and
cmp
inc
pop
pop
idiv
mov
loopne
scas
scas
mov
or
adc
jge
lret
pop
ljmp
stos
mov
push
dec
or
sbbb
fs
out
repnz
andl
enterw
stos
daa
mov
lods
and
ss
jae
and
push
and
or
cld
jp
addr16
inc
mov
or
jmp
popf
std
mov
push
cmpsl
roll
jg
cmp
jp
xlat
push
iret
mov
insb
cwtl
xchg
call
ja
mov
and
and
loopne
out
sub
xor
cmp
jecxz
mov
xchg
insb
add
insb
or
sub
pop
push
fnstsw
push
loopne
xor
xchg
ds
push
xor
sarb
jno
inc
fisubl
ljmp
mov
xchg
push
call
lahf
outsl
outsl
push
mov
mov
stos
and
fistl
and
test
inc
sti
frstor
add
notl
cmp
imul
int3
aad
ds
divb
arpl
rcrb
mov
sbb
inc
out
repz
mov
pop
pop
lret
bound
fsubrp
rorb
push
mov
clc
xor
sub
mov
jno
mov
mov
shrl
out
mov
and
inc
jmp
jno
xchg
mov
dec
out
in
and
sarb
out
jg
in
mov
loop
dec
sub
pop
mov
jle
pop
insb
mov
icebp
sbb
jb
ljmp
icebp
mov
ret
stos
adc
sbb
push
pop
pop
jns
sarl
mov
pop
push
notb
dec
mov
lahf
stos
int
cmp
enter
repnz
call
and
cmp
or
pop
push
sbb
mov
xchg
push
cld
jb
dec
pop
sbb
pushf
cmpsb
sub
imulb
inc
mov
cwtl
xchg
jge
loop
cmp
or
outsl
jnp
test
cs
pusha
adc
lahf
or
and
ror
add
sub
sbb
lahf
sbb
rcrb
test
cmp
das
cmp
and
pop
and
ret
add
cmp
pusha
in
cmp
push
pop
decb
ljmp
add
inc
or
cmpsb
adc
out
dec
inc
fstps
cltd
stos
test
xor
lock
into
daa
leave
pop
test
xchg
pop
sub
insl
pop
xlat
and
xchg
adc
add
sbb
and
fs
mov
cmp
or
jg
jp
xor
push
popf
pop
mov
and
lods
loope
push
xchg
bound
stc
mov
or
adc
jp
hlt
adc
sub
jl
dec
xchg
fdivp
lret
mov
pushf
in
adc
sub
sahf
cs
jno
push
adc
push
roll
mov
lcall
adc
jae
test
inc
add
inc
sbb
inc
pusha
sub
fmuls
out
sbb
scas
rol
jne
lds
inc
in
dec
out
xchg
xor
mov
lret
popf
inc
outsl
lods
test
imul
mov
fidivrl
add
std
jo
les
push
push
pop
mov
sub
mov
jb
movsl
nop
fisttpll
call
movsl
add
mov
jne
adc
add
dec
and
rcrl
xchg
adc
sub
or
lds
cmp
pop
test
fisubl
pushf
dec
xor
lcall
clc
sub
dec
popa
fbld
sub
mov
adc
xchg
sub
xor
mov
add
fmulp
push
push
mov
js
push
jecxz
dec
or
mov
xor
out
notl
mov
xchg
pop
adc
in
jo
dec
mov
pop
dec
add
xor
add
fbld
jmp
mov
dec
ret
js
in
es
xor
dec
add
ja
in
test
xlat
repz
std
mov
loop
push
cmpsb
mul
pop
pop
sahf
adc
mov
cmpsb
cmp
sub
sbb
jp
cmpsl
inc
push
imul
xor
mov
nop
push
es
movsl
and
ffree
xchg
jle
cmpsb
jne
fdivrs
jp
into
iret
fcomi
popa
les
shrb
adc
daa
push
xor
sbb
mov
or
js
jmp
sbb
out
mov
lcall
push
pusha
leave
loopne
ljmp
push
xor
pop
cld
pop
pusha
aaa
sub
mov
and
push
in
push
mov
cmpb
imul
or
fisubl
pop
dec
stc
loop
push
adc
testb
add
sbb
test
ss
hlt
rcrl
jne
adc
clc
sahf
jb
add
fistpll
mulb
mov
hlt
rcrl
iret
aaa
jl
or
pop
push
jbe
lret
dec
xor
adc
add
xchg
adcl
push
jne
aaa
pop
sub
test
mov
scas
inc
push
cmp
std
pop
pop
int
movsb
cltd
xor
adc
push
jb
or
lods
and
dec
push
xchg
inc
mov
lea
fdivrl
lods
imul
loop
stc
je
mov
in
fucomp
stos
cld
mov
adc
pop
nop
push
xlat
in
mov
movsl
jg
aad
ret
testl
xor
jnp
lods
ja
repz
push
test
push
pop
outsb
cmp
ficompl
jne
ljmp
mov
mov
test
fadds
push
sbb
mov
int
in
mov
jbe
jl
mov
fs
in
mov
insl
add
and
cwtl
idivb
cmp
fcoms
lods
ljmp
lahf
popf
lods
sti
cmp
fldl
popa
xlat
pop
shlb
pop
lahf
cmp
iret
cs
pop
push
xor
je
je
nop
mov
xchg
mov
sub
and
iret
jecxz
push
pop
jge
adc
shrb
xchg
stc
push
pop
in
adc
aaa
dec
stos
hlt
cmp
std
pushf
pusha
std
dec
lods
push
push
cwtl
test
push
stos
aam
inc
je
jno
ss
mov
push
jne
jmp
mov
inc
sub
xlat
pop
arpl
sub
dec
sahf
gs
sub
sbb
pop
dec
mov
or
push
test
icebp
mov
dec
adc
es
cmpsl
push
and
sub
stc
testl
outsb
dec
aam
jge
mov
xchg
adc
inc
dec
fbstp
cmp
and
mov
mov
jno
gs
dec
loopne
and
ljmp
jmp
mov
xor
inc
leave
mov
jp
or
mov
dec
dec
push
ds
xlat
adc
dec
outsb
jle
cwtl
pop
xchg
jp
mov
sbb
pusha
lock
or
out
mov
lahf
mov
movb
mov
jge
ljmp
pusha
lcall
sahf
jb
aas
dec
ret
xchg
and
lcall
pop
repnz
or
popf
in
ret
clc
mov
jl
adc
xorl
xchg
mov
xchg
xor
add
jo
jp
xchg
cltd
sub
push
or
push
out
out
loope
adcb
outsb
cs
out
pop
loope
xchg
stos
es
pop
insb
pushl
adc
sahf
gs
inc
mov
xor
xor
jecxz
jne
cltd
push
popa
pop
mov
cmp
sbb
jge
bswap
iret
mov
call
loope
push
sar
jae
movsl
mov
push
jb
lods
or
or
out
std
xor
sbb
jg
call
mov
scas
pop
and
in
xchg
dec
mov
fmuls
cltd
lods
adc
xchg
sbb
and
xchg
iret
add
inc
mov
pusha
negl
mov
addb
aas
leave
jo
mov
pusha
push
test
mov
or
push
mov
movsb
and
push
cmc
or
out
clc
jb
aad
das
repnz
inc
mov
jl
les
fidivl
ret
divb
mov
push
and
pop
jae
arpl
rcrb
jle
push
fcoms
bound
sub
xchg
and
int
out
ja
es
negb
mov
jae
sub
jae
shl
out
popf
mov
rorb
mov
sub
imul
iret
mov
leave
daa
dec
cmp
push
data16
inc
mov
jb
cmpsb
add
cmp
js
shrl
cmp
sbb
jle
pop
add
lcall
loope
inc
fidivrl
and
enter
cltd
and
sbb
push
out
pushf
pop
movsb
sub
std
pop
data16
xor
fnstsw
jmp
js
insb
mov
es
shlb
loope
cltd
adc
cwtl
pusha
sti
and
cs
add
mov
add
cld
sub
ja
mov
lcall
loope
stos
popl
xchg
jg
add
cs
pop
out
aam
and
scas
adcb
lock
xchg
out
mov
lret
jne
subl
dec
sbb
loop
enter
fildll
ror
jp
fadds
mov
xor
cmp
xchg
or
lcall
dec
es
out
inc
out
lods
lret
ds
push
ficompl
and
jecxz
mov
xchg
js
ret
xlat
aad
shl
loopne
loope
lcall
cmc
pop
cli
sbb
xchg
pushf
push
fcmove
mov
out
sub
shlb
jle
leave
insb
loop
lea
test
jnp
shrl
faddl
pusha
ds
test
in
mov
pop
mov
lret
divb
sbb
mov
mov
add
sbb
jle
and
outsl
xchg
pop
rol
or
imul
out
xor
inc
incl
into
enter
daa
sbb
arpl
cmc
push
fsubl
push
cmp
aas
adc
insb
sarl
sbb
scas
movb
pushf
mov
jae
cwtl
movsl
jecxz
mov
rclb
hlt
pop
jb
pop
icebp
sub
or
mov
xchg
mov
aad
xchg
xor
mov
les
push
and
sbb
repz
lds
push
nop
xor
test
cmc
cmp
popf
cmp
shrb
push
lret
mov
sub
icebp
jg
mov
cmpsl
ret
subl
arpl
je
mov
out
fdivr
xor
xor
inc
fsubr
addr16
flds
pop
loopne
fsubrl
ret
outsb
clc
bound
loopne
mov
addr16
jb
insl
adc
add
add
xor
cmpsb
mov
push
and
punpcklbw
mov
ljmp
inc
pop
orb
out
dec
xlat
mov
fistps
mov
int3
push
pop
ret
mov
jg
ss
jne
shr
rcll
push
in
dec
cmpsl
fwait
orb
and
inc
aad
fisubrs
push
out
mov
loopne
jecxz
cmpsb
jmp
adc
sbbl
inc
popf
outsb
outsl
aas
rorb
mov
xlat
push
loopne
dec
scas
mov
xchg
sbb
iret
ret
enter
pop
out
fstpl
pop
ds
jge
or
push
pop
shl
xor
testb
xchg
push
inc
cli
test
xchg
scas
mov
test
imul
mov
les
or
and
adc
inc
jp
add
xor
push
xor
or
dec
pop
lahf
jbe
dec
mov
sub
xor
icebp
fsubrs
sbb
pop
push
imul
adc
cmp
fs
fnsave
sub
scas
or
inc
add
pushf
pusha
sbb
xchg
sub
loopne
aaa
jne
ja
pop
push
mov
push
mov
mov
pop
loope
or
pxor
aaa
je
jmp
or
lods
in
push
imulb
rcrb
fidivl
cmpsb
dec
imul
add
cmpl
mov
jle
push
mov
popa
cwtl
into
rcrl
repz
mov
movsb
adc
sub
out
insb
clc
cmp
int
push
test
nop
add
test
fs
icebp
adc
inc
push
aam
pop
int3
arpl
aaa
jns
outsl
xorb
inc
xlat
and
or
jns
cmpsl
push
jge
cmp
insl
mov
and
jecxz
sbb
jo
call
cmp
pop
aas
push
cmp
in
repz
leave
imul
xor
lcall
ljmp
or
mov
shrl
mov
lock
push
mov
pop
bound
orl
pop
xchg
ljmp
insl
sbb
mov
or
and
xchg
insb
lods
fistpl
clc
dec
bound
jp
pusha
out
add
mov
int3
loop
jp
cmp
jae
inc
mov
or
pushf
xlat
std
mov
daa
jl
test
gs
fdivl
popa
in
orl
mov
push
inc
pop
lods
inc
xchg
insl
cmc
movsb
sbb
lret
xor
pop
loop
daa
lcall
leave
jb
mov
int
es
push
lods
xchg
faddl
cmpsb
cmp
dec
mov
arpl
mov
mov
nop
aaa
outsb
mov
xchg
stc
push
test
cmp
cmpsw
inc
pop
mov
ret
hlt
sub
in
stos
ret
cmc
loopne
sub
aam
pop
push
mov
pop
push
imul
js
mov
mov
ret
inc
andl
int
fisubrs
rcll
div
in
out
jle
out
sub
in
repz
mull
or
mov
fsubp
pop
int3
push
loopne
pop
insl
lret
aam
adc
out
loope
sahf
cmp
out
push
pop
cmpsl
jp
aaa
add
xor
adc
mov
insb
pop
xor
adc
cs
xchg
lahf
sbb
inc
sub
add
repz
rcrl
fwait
daa
loop
xchg
sbb
xor
mov
scas
dec
stc
mov
fstpl
icebp
stc
sbb
pushf
js
hlt
in
repz
sahf
shlb
add
imul
andb
pop
cmc
shlb
and
pop
icebp
out
outsb
in
data16
mov
mov
bound
pop
push
inc
fdivl
jl
cwtl
pushf
cmp
or
xor
lods
mov
loopne
ret
insl
cmc
mov
or
xor
sti
add
mov
xchg
popa
scas
push
sbb
cmp
sbbl
adc
je
mov
jae
addr16
dec
int3
xor
int3
inc
mov
rcrb
movlps
int3
nop
psllq
mov
cmp
pop
sbb
mov
rolb
aaa
clc
repz
ljmp
data16
in
les
std
xor
nop
aaa
sahf
dec
imul
mov
mov
les
inc
and
and
xchg
sub
push
mov
shll
mov
rcrl
lret
pop
mov
cltd
aad
cmpb
mov
mull
cmp
cmpsl
adc
out
inc
sbb
cmp
adc
jp
test
sbbb
lcall
lret
cli
xchg
inc
push
xchg
pop
push
into
sbb
shll
jnp
es
pop
pop
add
dec
repz
adc
mov
sarb
cmpsl
jg
mov
int3
fs
das
ret
push
mulb
or
and
test
jle
rep
or
xlat
pop
jns
fs
add
mov
mov
sub
dec
adc
adcl
enter
sub
sub
jne
fistpll
lret
mov
inc
xor
mov
push
nop
mov
push
or
push
insb
jbe
cmp
test
cltd
icebp
fdivl
out
dec
dec
imul
ds
inc
aam
mov
xchg
pushf
cli
sahf
mov
mov
insl
loop
dec
and
cmpsb
mov
lret
cld
cmp
imul
push
flds
cmp
lds
pop
enter
push
inc
dec
push
pop
fcompl
cmp
test
dec
xchg
cmp
cmpsb
lret
xchg
mov
ret
inc
push
xor
mov
out
addb
sub
mov
push
iret
xchg
sub
loope
inc
push
adc
add
nop
or
icebp
and
sub
pop
sbb
ret
ficomps
dec
xor
mov
shll
int3
cmpsl
push
clc
or
test
xchg
fldt
cld
mov
mov
fcoms
mov
or
lret
xor
mov
xchg
arpl
into
out
dec
in
inc
insl
xlat
fs
pop
push
inc
jecxz
xchg
cmp
push
in
dec
repnz
sub
out
xchg
out
lahf
xchg
ss
cmp
rcrl
add
mov
push
mov
stos
stos
adc
mov
in
lock
jbe
jmp
sahf
push
outsb
xchg
sub
xorl
std
in
test
shl
es
cmpsl
data16
in
imul
je
movsl
or
adc
and
push
pop
popf
and
lretw
rcrb
inc
ljmp
mov
adc
movsb
push
dec
iret
test
lds
repz
loop
lahf
push
xchg
inc
push
pop
jae
rcrl
ds
xchg
arpl
test
repnz
push
rol
pop
push
in
dec
imul
scas
mov
loopne
arpl
mov
and
jae
inc
orl
and
out
lods
hlt
jb
xchg
mov
test
fistps
daa
jle
jp
mov
mov
mov
or
dec
loopne
pop
es
addl
adc
lahf
call
push
cli
aas
mov
xchg
sub
or
je
les
rcrl
movsl
pop
pushf
and
es
rolb
xchg
dec
repnz
stc
fnsave
cltd
into
js
test
in
jg
sbb
adc
inc
xchg
test
lock
popa
mov
adc
int3
int
mov
jne
pop
scas
fcoml
insb
add
mov
insb
lock
and
push
imul
push
shrb
xlat
mov
int3
cmp
mov
bound
mov
pushf
mov
pop
loope
mov
popf
push
mov
rcll
mov
movsb
xchg
push
repnz
mov
jns
roll
dec
rcr
mov
push
scas
cs
and
imul
sbb
xor
iret
mov
dec
out
test
xor
dec
and
pop
mov
shrl
jbe
adc
xchg
rcrb
mov
sahf
mov
or
lret
incl
cltd
xor
and
gs
pop
call
adcb
lods
cwtl
adc
test
cli
mov
xchg
push
into
fnsave
ljmp
call
loopne
aas
push
adc
jp
add
scas
pop
adc
mov
mov
inc
das
jmp
sbb
cs
imul
mov
jl
sahf
xor
fnsave
xchg
test
js
jnp
push
cld
lcall
shr
dec
pop
fcoml
imul
mov
lea
iret
imul
rorb
jbe
js
pop
and
sti
cmp
push
add
push
out
cli
jecxz
lods
xchg
out
rcrl
jae
sbb
stos
mov
jg
or
mov
jp
xchg
add
cmp
sbb
cmpsb
inc
jne
notl
roll
mov
testb
popa
outsb
jo
rcll
lret
cli
pop
notl
fadds
jb
arpl
mov
stc
out
cmp
pop
xor
stos
mov
xlat
fmul
inc
xchg
xchg
push
das
mov
dec
rcll
in
add
inc
xor
call
pushf
xor
jl
popa
mov
mov
insl
mov
pop
out
mov
insl
rorb
cmp
roll
mov
repnz
hlt
shrl
jmp
xor
inc
xchg
push
sbb
mov
cs
push
mov
addr16
jnp
dec
cmp
imul
jbe
jbe
mov
nop
stos
xchg
loopne
mov
mov
add
neg
pop
jecxz
fucomp
push
and
cmp
mov
shl
mov
or
lods
cmp
cld
mov
jmp
and
push
in
test
sub
or
lods
push
outsl
adc
sbb
rorb
sbb
push
dec
add
lahf
xor
add
in
jae
cmc
mov
xchg
xor
mov
pushf
sti
cmpsl
arpl
mov
je
jb
popa
jns
xchg
pop
jo
adc
movsl
inc
in
loop
xchg
mov
js
xlat
push
clc
pop
push
clc
cmp
xchg
inc
mov
outsb
rcl
push
bound
sarl
in
and
cmpsb
sub
xchg
push
lods
inc
mov
ffree
xchg
cltd
dec
out
xor
lret
notl
adc
add
cmp
lds
in
dec
popa
stos
push
sub
popf
jne
sbb
ror
int
adc
insb
pop
or
cmp
stc
repz
mov
push
push
or
push
pop
lods
stos
mov
shlb
insl
imul
call
xchg
call
fisubl
call
mov
jmp
mov
push
add
jp
push
aas
pop
sub
mov
sub
adc
sub
xchg
dec
jl
mov
inc
stc
cld
insl
subl
and
lods
or
xor
fimull
jns
mov
fimull
aad
add
cld
sbbb
sub
push
mov
loop
pop
scas
sub
adc
inc
adc
dec
imul
jae
int3
push
test
inc
pop
inc
xchg
sub
push
in
sahf
lds
loop
xor
leave
mov
mov
jnp
mov
or
stos
inc
or
push
inc
insb
mov
push
adc
jne
idivl
inc
inc
arpl
jne
xchg
xor
dec
sbb
outsl
sahf
bound
call
or
push
push
sub
pop
sub
xor
dec
add
sub
and
mov
notl
cmp
imul
or
push
sub
push
lahf
push
mov
push
ds
dec
adc
rol
in
div
out
sub
loop
rorl
pop
mov
lods
mov
jmp
fmul
clc
sub
into
es
es
xchg
push
mov
in
mov
rol
js
stc
adc
adc
adc
sbb
jecxz
xor
xchg
jmp
cmp
sbb
xor
add
add
inc
sti
add
pusha
arpl
sbb
xor
ret
mov
clc
out
aad
dec
inc
js
dec
stos
arpl
mov
dec
repnz
andb
xor
mov
pop
inc
pop
mov
aam
es
rcrl
pop
or
je
xor
out
fs
fnstsw
insl
iret
stc
outsb
mov
fcmovne
xor
in
push
cs
jnp
int
dec
adc
mov
and
or
mov
cmc
adc
lods
loope
lods
dec
sbb
mov
test
out
ja
fcoms
fidivl
fs
mov
sbb
jnp
cmp
ljmp
xor
or
or
outsl
push
inc
mov
cmpsb
mov
jmp
sti
fwait
jp
lds
cli
jne
or
clc
xor
in
clc
push
clc
andl
dec
dec
aam
test
or
cld
mov
lea
adc
inc
pop
push
mov
aad
push
mov
addr16
sbb
push
sbb
pop
add
scas
cmp
lahf
movsl
aad
cltd
mov
mov
clc
mov
dec
pop
adc
sbb
xchg
jnp
mov
fs
stos
adc
push
cltd
lods
xor
scas
fs
jns
inc
jl
stos
pop
cmp
sbb
sbb
movb
mov
mov
int
add
ffreep
jecxz
mov
adc
test
fsts
cmp
popf
bound
rcll
jl
imul
push
imul
das
pop
mov
adc
inc
pusha
popf
push
mov
popa
ds
int3
rcl
pop
sub
sbb
decl
scas
mov
pop
into
or
xchg
sub
sti
mov
sarb
or
in
test
movaps
loope
xor
test
mov
popf
orb
aas
into
fs
sbb
push
cmpsl
je
hlt
xchg
movsb
xchg
xor
mov
fistpl
dec
aam
jns
jo
push
jne
add
sahf
lods
outsl
xchg
outsl
xchg
xor
test
and
or
sbb
jbe
aas
mov
daa
movsl
xor
in
jp
xor
in
popf
jmp
lods
pop
sub
fisttps
cmp
jge
out
add
ja
in
insl
ret
adc
jo
add
clc
lcall
leave
es
push
mov
nop
adc
push
mov
add
imul
jecxz
shr
dec
add
push
push
push
aad
mov
jl
enter
fwait
xor
fucomip
xchg
jecxz
xchg
in
repz
dec
mov
mov
rclb
lea
mov
loope
mov
notl
jbe
xor
cmpsb
or
stos
xchg
jecxz
sarl
cld
mov
fnstsw
pop
dec
pop
pop
neg
mov
sub
imul
and
jae
dec
leave
or
arpl
xchg
fwait
mov
and
and
test
pop
repnz
into
mov
pop
sub
jg
inc
sub
ss
mov
les
aaa
negb
adc
jno
dec
jecxz
pop
dec
mov
stc
in
jecxz
rcrb
insb
cli
mov
pop
mov
je
jnp
jle
movsl
xor
bnd
sti
pop
sbb
pop
int3
rorl
stos
out
inc
pop
sub
lea
pop
outsl
insb
fstl
outsb
mov
les
mov
shr
jns
and
or
xor
ljmp
addl
push
adc
inc
out
rcrb
dec
inc
negl
sub
mov
outsb
xchg
push
popf
add
popf
cwtl
push
test
mov
adc
fmuls
pop
sahf
add
sarb
mov
mov
sub
xchg
jnp
and
bts
fistps
je
pop
xchg
iret
out
lcall
jne
in
inc
fistpl
xchg
mov
fsubs
aas
lock
push
sub
adc
test
add
nop
arpl
mov
push
repz
add
mov
data16
addr16
imul
jmp
repz
cmp
xor
adcb
push
mov
inc
mov
cmp
xor
push
lret
fucomip
push
fisttpl
xor
nop
push
xchg
jns
push
shll
shrl
cmp
out
jae
sbb
sbb
cmp
imul
fldcw
pop
sahf
jecxz
or
pop
stos
mov
and
loop
push
add
adc
stos
cmc
movsb
pop
fucomip
jne
dec
xor
pop
cmp
cmp
ret
adc
pop
fdivrs
clc
hlt
lahf
mov
rcll
lds
repnz
loop
dec
jle
jle
push
push
ljmp
inc
les
or
sti
xor
decb
shll
pop
push
movsb
pop
stos
loop
push
int
lds
int3
sub
mov
pop
stos
test
cmp
shr
fcoms
sbb
mov
mov
out
mov
leave
adc
arpl
subl
dec
sbb
negb
leave
xchg
popa
cmp
loope
add
add
dec
adc
arpl
stc
sti
and
jge
test
ja
jge
pushf
cwtl
mov
jl
dec
push
jecxz
call
inc
pushw
sub
sarb
addr16
sbb
dec
sub
lods
cltd
sbb
movsb
push
pop
push
adc
in
mov
mov
mov
cltd
cmp
mov
in
out
sub
leave
fisubs
pop
data16
push
repnz
pop
movsb
fsubs
jle
test
test
lods
sub
loope
or
cmp
int
jnp
inc
frstor
jo
andl
inc
dec
pushl
mov
jp
adc
jae
jb
cmp
cli
pop
mov
and
loopne
out
xor
jae
mov
xor
inc
arpl
or
mov
in
in
mov
fstpl
ds
jo
mov
mov
push
xchg
xchg
or
clc
and
cmpsl
push
js
adcb
daa
push
mov
jl
das
push
call
pushl
mov
add
fldenv
pop
cwtl
dec
fsubr
sub
xor
adc
outsl
loopne
lcall
repz
xor
jmp
xchg
jge
push
xor
pushf
test
cltd
cmp
jecxz
inc
adc
xor
mov
fstp
mov
xchg
cmp
mov
mulb
jle
mov
xchg
sub
jge
or
cmpb
xor
enter
movsl
in
jbe
ljmp
xor
xchg
mov
das
cmc
dec
loopne
mov
push
push
mov
push
xchg
lret
test
sbbl
xor
leave
pusha
ficoms
or
sbb
xchg
xor
mov
sti
sbb
iret
sbb
lds
jl
sbb
add
ret
ss
push
and
pop
sbb
cmp
mov
sbb
aas
scas
cmp
push
or
subl
loope
call
jecxz
jbe
out
sbb
in
adc
shll
sarb
fninit
std
aas
mov
sbb
dec
clc
mov
int
cs
pop
repz
dec
mov
addr16
jp
mov
mov
push
int
mov
lods
xchg
negb
popa
clc
daa
std
movsl
outsl
ret
jg
outsl
clc
out
inc
nop
sahf
out
jmp
mov
sbb
sbb
in
mov
in
xor
jl
mov
into
insb
mov
sub
mov
and
or
jae
in
inc
imul
mov
push
fwait
jae
pop
adc
les
pop
je
int
sbb
outsb
adc
mov
cli
pop
mov
lds
aam
in
xchg
fcoml
icebp
mov
test
lea
mov
jnp
lods
mov
bndstx
jg
jne
xchg
in
add
xchg
insb
hlt
and
pop
addr16
xor
rcll
push
testl
es
sbb
sbb
cmp
pop
jecxz
fisttps
mov
xorl
mov
data16
xchg
pop
in
dec
fcomp
outsl
dec
aas
sbb
pushf
stos
testb
lcall
in
pop
insl
adc
ficomps
mov
subb
cli
push
xorb
jns
inc
xchg
xor
scas
addb
mov
movsl
mov
sti
dec
cmp
mov
mov
xchg
sti
pop
sub
stos
inc
in
jle,pn
ficomps
dec
pop
mov
stos
pop
arpl
shlb
mov
adc
inc
scas
pop
jno
ret
sub
repnz
imul
fdivrl
jp
leave
loopne
in
inc
mov
lahf
aam
inc
aaa
xchg
sub
sti
int
movsb
dec
mov
ds
je
out
adc
stc
cmp
dec
add
xchg
hlt
insl
pop
and
sbb
nop
dec
pop
lods
test
sti
icebp
lock
es
mov
dec
mov
xor
pop
and
movsb
xchg
xlat
and
inc
mov
add
push
push
out
test
clc
dec
lock
imul
push
mov
popf
testl
or
mov
les
fcmovb
xchg
mov
jmp
scas
mov
jne
jl
mov
sbb
dec
enter
rclb
lods
mov
je
int
sub
js
jle
sub
rcll
fdiv
lods
xor
lods
out
mov
sbbb
lret
inc
jns
mov
sbb
aam
mov
cmp
adc
mov
push
or
push
cld
sbbl
inc
mov
lea
mov
sub
dec
jb
jg
dec
add
ss
jb
mov
jo
popl
je
xor
inc
paddb
xchg
mov
stos
xchg
xor
out
bound
mov
test
aam
ficoml
ret
add
fs
loop
psrlq
sub
aam
lcall
pop
jmp
or
xor
jo
inc
shrb
bound
popa
imul
sub
mov
mov
mov
pop
mov
fs
lret
mov
negl
mov
cmp
jg
jge
sub
pop
adc
xor
enter
lret
popa
mov
ret
call
pusha
insb
test
insl
ret
jno
mov
sti
xchg
mov
stos
sbb
fsubr
gs
lahf
push
imul
push
fwait
lret
popa
je
adc
cmp
jmp
clc
scas
inc
add
inc
mov
outsb
ficompl
arpl
jp
test
ficoml
nop
ja
enter
jmp
jns
sub
int3
arpl
dec
cmc
inc
xorl
and
jno
and
out
mov
push
push
popf
arpl
cmpsb
test
std
scas
hlt
hlt
ret
hlt
mov
and
mov
cmpsl
cmp
fsub
ljmp
sub
mov
int
xor
push
dec
test
jbe
dec
fcoml
clc
xor
mov
int
mov
push
daa
mov
mov
mov
ficomps
pop
int
shl
mov
dec
aam
pop
sarb
arpl
pop
pop
repz
popa
fiaddl
cmp
mov
insb
out
jle
arpl
cmp
scas
in
stos
pop
rolb
xchg
cmp
movsb
imul
or
adc
sbb
mov
cmp
mov
dec
int
adc
pop
fcomip
and
lds
or
jb
or
dec
mov
popa
out
test
iret
outsb
stos
call
pop
ja
arpl
test
xor
push
xor
push
sbb
xchg
pop
nop
addr16
test
mov
inc
mov
test
jae
adc
ret
rorl
dec
mov
fs
inc
out
bound
mov
jo
sbbb
cmpsl
icebp
pmovmskb
lahf
pop
adc
mov
push
adc
ja
add
xor
scas
out
add
jns
jmp
pop
and
shrb
mov
outsl
rcl
adc
mov
mov
sbbb
xchg
ja
sub
or
inc
mov
dec
sub
sbb
adc
fadds
popf
cld
insb
jle
mov
mov
sub
aaa
mov
xchg
push
pop
in
stos
mov
loope
inc
inc
pop
int3
inc
push
mov
sbb
cmp
and
mov
fsubr
enter
xchg
outsb
mov
cmp
mov
notb
adc
pop
outsb
and
mov
dec
inc
add
pop
sbb
popa
clc
popa
or
jno
push
sub
pop
insl
mov
dec
mov
push
xchg
jae
jne
mov
dec
mov
out
pop
and
filds
and
repz
jmp
in
and
into
daa
in
add
lods
mov
add
mov
pop
push
sahf
gs
cmp
jmp
and
cmp
insl
jbe
or
inc
add
clc
test
push
sbb
movsl
aaa
sub
add
out
mov
adcl
xchg
fadds
cmp
es
lock
sbb
filds
fmull
dec
mov
mov
adc
sbb
shl
add
add
jae
aam
cmp
ret
mov
pop
mov
xchg
sub
inc
roll
and
in
ret
xchg
push
inc
insb
jge
lcall
sub
or
icebp
jl
test
cmpsb
sub
ds
outsl
push
out
cltd
or
dec
jo
insb
and
cwtl
sub
add
movsl
mov
mov
bndstx
jge
xchg
mov
sbb
lock
or
adc
xlat
cmp
das
in
add
xor
add
insl
shr
shl
pop
repz
pop
adc
stos
push
outsl
int3
lret
rcrl
mov
decb
cmp
rcr
cmp
sbb
mov
dec
mov
sub
cmp
into
mov
je
jecxz
andl
es
dec
test
sbb
adc
addl
xchg
add
lea
pushf
push
mov
xchg
fdivrs
inc
rol
jne
xchg
insb
jle
jnp
inc
mov
mov
mov
cmpsb
insb
fstps
push
movsl
lret
les
mov
adc
imul
fnstcw
jb
outsb
jae
mov
adc
xor
insl
scas
dec
into
testb
inc
cmc
in
and
adc
movsl
in
shrb
ret
sub
xor
dec
mov
adc
mov
pop
xchg
sti
and
sub
jns
fistl
sarb
xchg
testl
jl
outsl
push
cmp
mov
lods
insl
ja
ret
adc
mov
xorb
mov
inc
sbb
jb
mov
aam
fld
stc
or
jle
xchg
mov
inc
push
in
cld
inc
cltd
test
ljmp
pop
cmp
mov
insb
movsl
imul
sbb
mov
xchg
inc
decb
mov
mov
jo
mov
mov
out
dec
pop
jo
dec
pushf
cmp
and
lods
pop
cmpsb
lea
sbb
movsb
dec
pop
sbb
shl
enter
insl
inc
test
push
dec
bound
lahf
test
or
fildll
daa
call
jmp
push
sub
xlat
inc
popa
pop
scas
mov
int
jns
or
fiadds
xlat
mov
and
push
movsl
pop
sub
arpl
xchg
std
push
leave
jb
and
dec
mov
inc
pop
dec
push
dec
movb
xchg
sub
enter
sub
mov
or
ljmp
cmpl
add
xchg
scas
mov
xchg
mov
mov
mov
fidivrl
scas
jp
mov
in
xchg
jns
sbb
rcrl
or
xchg
stc
or
add
push
or
push
adc
shl
repnz
hlt
push
push
idivl
inc
or
xchg
aas
mov
pop
hlt
mov
pop
ss
pop
stc
push
add
notl
lahf
or
dec
sbb
push
push
jbe
cwtl
jge
push
lcall
inc
sub
xor
stos
pop
and
dec
hlt
loop
jno
rcl
mov
cmp
add
addr16
mov
jbe
push
sbb
xchg
inc
mov
cli
jo
fldenv
cli
aam
gs
cmpsb
mov
stos
das
add
cltd
pop
cmp
insl
das
movsb
xchg
jnp
push
in
cmp
aad
loopne
inc
ss
sbbl
xchg
aas
sahf
test
or
fcomps
lret
mov
mov
mov
cmp
adc
outsl
cmpsl
pop
or
sbb
inc
pop
cmp
mov
sbb
or
add
data16
test
cmp
cmp
cmpsl
inc
inc
inc
daa
movsl
stos
adc
mov
sub
jmp
inc
mov
arpl
push
sbb
ja
xor
insb
popf
xchg
mov
cmp
cmp
das
cmp
cmpsl
mov
xor
push
or
popf
push
stc
je
dec
add
pop
das
jnp
jae
sub
cld
cmp
pop
in
push
andb
out
jg
loope
adc
int3
inc
sarb
xchg
test
mov
push
adc
or
daa
ret
fs
loopne
dec
mov
rcl
sbb
stos
mov
pop
fwait
je
shll
sbb
lahf
dec
cmp
mov
xlat
cmpsb
les
cmp
repnz
scas
ret
dec
add
ds
mov
dec
dec
adc
ret
xchg
loopne
sahf
icebp
mov
sbb
mov
rcrb
mov
inc
imul
cmpsl
and
push
jns
cmp
and
mov
pop
sbb
testb
pop
bound
and
mov
icebp
or
or
push
movsl
mov
clc
cmpsl
and
cli
pushf
add
nop
test
call
dec
push
or
ret
in
iret
and
scas
xchg
add
and
js
pop
push
pop
jbe
mov
subl
leave
fistpl
push
into
mov
sbb
fiaddl
jb
cmp
aad
fisttpl
mov
clc
adc
mov
ret
cmp
pop
pop
jmp
fdivrl
addl
adc
aad
pop
lret
mov
enter
jl
cltd
dec
in
cmpsl
inc
call
daa
inc
call
xor
inc
adc
cld
sbb
imul
inc
and
shrb
rcr
es
das
mov
stos
xchg
popf
cmpsl
mov
int
mov
sbb
cltd
fdivrp
insb
mov
jl
bound
imul
pop
rcl
cmc
sub
sahf
push
xchg
mov
add
add
sbb
xorl
xchg
push
loop
adc
bound
es
mov
add
jno
cltd
int
dec
mov
add
cli
mov
inc
sub
mov
imul
pop
fdivs
pop
les
rol
add
pop
adc
inc
int3
add
mov
pop
push
mov
lds
inc
pop
mov
out
push
dec
int
jbe
call
lods
jg
xor
arpl
mov
jns
inc
out
sbb
inc
jns
aaa
ljmp
lea
dec
arpl
scas
dec
mov
push
xor
test
xor
rol
add
scas
rcl
add
cli
sub
sub
sbb
lea
xor
in
stos
add
push
enter
mov
rcrl
add
cmp
sub
cmpb
stc
idivl
adc
cmp
shrl
pop
outsl
bound
mov
mov
lcall
sub
pop
gs
shlb
dec
inc
pop
cmp
fmull
jo
mov
je
push
ss
clc
aas
ficoms
push
or
inc
push
lcall
xor
fisubrs
xchg
jge
movsb
mov
loopne
int3
adc
mov
das
sub
lahf
or
enter
lea
into
mov
int
imul
dec
mov
inc
push
xor
cmp
sahf
leave
ret
data16
and
js
mov
sbb
adc
imul
pavgb
add
dec
rcll
aas
jg
jecxz
mov
cwtl
and
mov
fisubrs
ficoml
out
jp
mov
stc
adc
add
mov
pop
lods
jg
mulb
dec
jge
inc
sub
jne
shrb
data16
movsb
jecxz
punpckhdq
idivl
pop
movsb
sti
add
xlat
lods
xchg
mov
sbb
xchg
pop
sub
rcrl
pop
sub
mov
ljmp
adc
adc
dec
std
outsb
cli
test
sub
push
jmp
inc
outsl
daa
insl
fcoml
std
es
mov
inc
jle
stos
mov
xlat
cmc
jg
ret
mov
mov
cmpl
out
lods
call
mov
pusha
lret
mov
jbe
shlb
xchg
push
ret
push
push
or
pushf
jno
daa
cli
ds
cmp
push
pop
ret
imul
mov
into
enter
and
inc
pop
mov
sub
dec
lret
lcall
jo
popa
lret
add
int3
mov
out
mov
xchg
sbb
lods
inc
fidivs
cmpsb
jnp
xchg
fisubs
xchg
insb
add
rcrl
flds
lret
dec
push
and
xlat
pop
cld
jno
test
pop
cmp
ds
leave
mov
or
cmp
scas
xor
je
cmp
dec
push
push
cld
sub
jl
lods
icebp
lods
jecxz
fwait
out
or
dec
mov
ds
mov
sbbb
cs
cmp
vaddsd
mov
jne
push
loop
pop
mov
ja
xchg
and
dec
outsb
add
xor
mov
sqrtps
imul
inc
fsubrs
movsb
mov
or
scas
push
repz
pusha
stos
or
push
out
pusha
push
jnp
sub
lea
jp
out
mov
xchg
cmp
or
cltd
clc
das
mov
push
in
in
call
test
ds
push
js
dec
outsl
int3
ljmp
add
pop
and
cli
xor
mov
arpl
ficoms
call
mov
cmp
inc
push
push
repnz
ret
adc
xor
push
xor
icebp
ss
or
cs
dec
cmp
xchg
adc
dec
loopne
insl
and
jp
repz
in
scas
ret
adc
pop
mov
repnz
xchg
stos
rcll
mov
or
stos
inc
pop
movsl
loope
pop
jns
jmp
cwtl
in
rorl
push
ret
sbbl
fnstsw
push
loopne
bswap
in
daa
dec
pop
xor
lods
fisttpl
leave
sub
out
ret
xor
test
mov
mulb
lret
js
cmp
cltd
sub
push
fstp
int3
inc
scas
sahf
xor
out
aas
or
pop
pop
cmc
cmp
sbb
call
or
hlt
pusha
xchg
sub
jg
sub
xor
jbe
mov
dec
and
dec
stc
gs
lods
jns
fisubrs
xor
push
and
stc
pop
jo
aas
out
ret
loop
mov
shl
push
stc
and
push
mov
call
mov
stc
xchg
mov
pop
sbb
mov
or
bswap
scas
push
jp
mov
outsl
call
or
mov
leave
xor
add
cmp
cmpsb
pop
aaa
sbb
or
repnz
adc
push
inc
fmuls
cmpsb
mov
loop
adc
repnz
sbb
repz
call
fnstcw
popf
enter
mov
icebp
jo
rcrl
dec
imul
jae
or
das
fistps
and
sahf
adcb
jmp
mov
xor
push
pop
out
inc
or
mov
pop
hlt
inc
xlat
addr16
mov
movsb
jb
xchg
sbb
fcoms
jae
pop
pusha
test
xchg
nop
pop
hlt
std
out
cmp
pop
push
xchg
or
inc
cmc
cmp
daa
jle
aad
inc
icebp
and
jae
ficoms
lcall
jp
cltd
aaa
std
imul
fptan
jge
mov
out
cwtl
xchg
mov
test
data16
sbb
je
push
add
cmc
jo
lods
add
shl
mov
lahf
mov
rclb
sbb
push
popa
adc
jne
mov
jns
cs
daa
push
aam
mov
inc
dec
xor
and
hlt
bound
jb
push
mov
mov
sarb
shrb
leave
popl
push
mov
jl
mov
cltd
xor
idivl
fidivrl
push
lods
cmp
or
dec
mov
sti
and
popf
xchg
add
out
jne
and
fcmovne
or
dec
loope
mov
in
sbb
adc
cmpb
test
fnstenv
pop
mov
ss
sbbl
inc
mov
mov
jne
cmp
lods
xchg
xor
sbb
fnstsw
sbbb
mov
shrl
vpmaddwd
cmc
adc
pop
jl
gs
jnp
adc
sti
sub
mov
fwait
bound
sbb
jmp
jmp
and
shr
mulb
and
jge
inc
adc
jge
jg
mov
sbb
mov
mov
mov
jno
repz
fcomps
add
push
or
clc
dec
push
sbb
jae
pushf
ds
mov
sbb
shll
cmpsl
ret
fnsave
mov
in
inc
inc
pop
hlt
cmpsb
push
xchg
sub
cmpsb
cmp
mov
add
xor
cmp
loopne
in
jnp
mov
out
sbb
sarb
adc
or
and
inc
stc
dec
aas
out
jo
mov
sub
lods
dec
mov
sbb
dec
cmp
fwait
jno
lds
cmp
push
mov
add
repz
sub
push
fbstp
inc
js
jb
cli
fisubl
les
mov
xchg
xor
pop
andb
ja
mov
push
fimuls
xchg
imul
inc
xchg
cmp
push
out
pop
mov
or
popa
jle
adc
pop
gs
lds
adc
imul
repnz
mov
repz
fnstcw
pop
scas
mov
mov
cld
sbb
add
adc
mov
aad
mov
and
add
lsl
and
call
pop
mov
adc
sbb
inc
push
and
sbb
jno
fists
add
aas
rorb
cmp
icebp
push
aam
inc
rolb
push
sti
jp
mov
add
mov
mov
loope
les
sbb
and
cmpsl
push
in
mov
mov
fisubrl
add
iret
mov
push
insb
repnz
xor
lcall
ljmp
xor
cmp
jne
cmp
addr16
xor
push
dec
pop
mov
cld
cmc
mov
adc
scas
cld
das
in
push
cmp
dec
stos
dec
out
add
adc
pushf
ja
pop
cmc
inc
rol
mov
sub
cmp
push
aas
hlt
mov
jle
int
xlat
rclb
lcall
adc
or
bound
push
xchg
pop
cmp
lret
lahf
sub
xchg
repnz
mov
inc
push
imul
les
jle
cmc
xchg
inc
je
mov
inc
in
adc
inc
std
stc
xchg
sbb
hlt
cmp
fstpl
sbb
std
xchg
mov
jo
rolb
inc
into
mov
and
mov
mov
sar
je
xchg
lcall
cwtl
gs
mov
outsl
or
sti
test
lcall
jb
jne
jmp
dec
mov
or
sbb
mov
imul
in
addw
loope
cmp
xor
cmp
jns
mov
fwait
xor
push
xchg
insl
xlat
mov
dec
shl
mov
or
out
jbe
mov
push
inc
jne
pop
scas
insl
stos
inc
repnz
test
or
cmp
mov
fiadds
sbb
cmp
and
rclb
dec
in
cmpsl
jp
adc
inc
cs
test
and
repz
cmpsb
shl
adc
xchg
je
std
inc
ret
inc
daa
sub
adc
mov
movsl
outsl
dec
adc
data16
fcmovbe
ret
push
scas
out
int3
jg
push
icebp
push
pop
and
pop
xchg
dec
mov
add
cltd
je
mov
popa
bound
and
xor
inc
sbb
push
adc
out
mov
out
jg
inc
mov
or
insl
pop
jmp
or
cs
js
push
fwait
sub
jg
fwait
jne
mov
adc
stos
cltd
scas
out
pushf
std
push
shrb
jnp
int3
iret
fscale
cmp
insl
mov
adc
or
das
push
ljmp
loopne
or
inc
rorb
fsub
arpl
or
fdivs
mov
push
notl
and
xor
mov
xchg
mov
jnp
mov
or
inc
lock
stos
sahf
xor
loopne
aas
push
sbb
pop
aaa
ss
inc
gs
push
push
mov
pop
aaa
rcl
ss
jle
xchg
add
pop
leave
lret
lock
add
repz
pop
adc
rol
testl
pop
mov
mov
sarl
arpl
jno
mov
mov
adc
out
xor
popf
popf
lods
pop
push
mov
add
push
adc
or
mov
loope
or
xor
jae
test
lods
iret
pop
dec
and
lret
or
jmp
pop
push
addr16
cltd
mov
xchg
cmpsl
cmc
lods
fstl
mov
sbb
push
xor
pop
fwait
shlb
xchg
sub
scas
ret
aaa
into
mov
push
int
push
mov
mov
movl
mulb
je
push
in
sahf
icebp
adc
sub
fistpll
rorl
adc
sahf
cs
add
mov
push
testb
inc
outsb
cmpsl
cwtl
cmp
xchg
pop
pop
rcl
push
jno
fldt
push
adc
mov
mov
fwait
notl
mov
pop
or
sbb
push
lret
aaa
sub
cltd
push
pop
lcall
ret
outsb
fnsave
mov
push
popa
and
jno
fldl
push
cs
jp
repnz
shrl
sti
enter
or
sub
popf
cmc
call
int
pop
addr16
or
push
dec
loopne
in
adc
lock
add
add
push
loopne
sbb
jge
fs
sbb
sahf
clc
xor
mov
repz
jle,pt
in
mov
pop
sbb
fwait
mov
cmpsb
std
pop
not
mov
pusha
popf
cmpsl
xchg
jmp
mov
mov
fmul
cmp
scas
mov
nop
int
dec
push
lcall
cltd
je
adc
mov
ret
sahf
js
fwait
pushf
adc
fwait
bound
and
and
int
punpckhwd
sbb
enter
testb
or
jp
lods
mov
scas
pop
and
inc
sarl
jmp
mov
insl
bsr
mov
push
ret
xor
sub
cmpsb
cmp
inc
push
lds
mov
sbb
pop
cmp
fisubrs
push
sbb
pop
adc
push
pop
es
aaa
nop
popa
icebp
int3
fs
jae
mov
xchg
mov
sub
mov
and
shrl
dec
mov
pop
adc
shll
sbb
cmpsl
and
pusha
fdivl
movsl
mov
popa
in
inc
mov
ja
insl
aaa
mov
pop
repz
and
mov
fildll
cmp
int3
push
lods
cmp
lret
cmpsl
out
outsb
push
jmp
daa
and
xor
pushf
gs
repz
es
push
aas
rclb
popf
pop
rcl
pop
adc
jge
scas
pop
mov
mov
std
iret
lret
in
and
xor
fnstenv
mov
push
test
and
scas
adcl
fstpt
mov
adcl
dec
adc
sbb
cmpsb
xchg
cs
add
push
inc
aaa
xor
sub
gs
lcall
dec
adc
pop
mov
iret
mov
push
mov
add
int
lock
push
mov
scas
stos
es
and
push
jg
adc
push
jae
mov
mov
lods
fadd
push
push
ljmp
out
push
push
aad
out
and
pop
cmpsb
and
xchg
enter
mov
aas
leave
lahf
jnp
shr
rclb
and
lret
pop
push
jbe
dec
filds
xchg
push
imul
outsl
mov
int3
xchg
sbb
mov
xchg
add
sbb
xor
out
add
push
jbe
lods
test
add
movsl
ss
adc
ret
nop
popa
mov
mov
cmp
push
jle
out
hlt
push
and
dec
test
adc
mov
and
lods
icebp
mov
pushf
push
or
jne
and
jl
cmp
add
pop
jae
ret
pop
lret
les
mov
push
adc
hlt
cmp
jo
movsb
inc
jg
pop
dec
push
fwait
dec
or
lock
push
sahf
mov
mov
lret
aad
int3
notb
shrl
xchg
dec
mov
leave
mov
movsl
ret
xor
mov
xor
push
loope
push
nop
sub
push
dec
mov
mov
or
jbe
jo
inc
addr16
lods
cmp
arpl
movsb
jno
loopne
ljmp
sbb
cmp
push
outsl
mov
push
xchg
test
sub
ljmp
xor
inc
pop
mov
mov
stc
and
pop
ds
pushf
add
out
and
inc
outsb
jmp
jp
inc
xlat
gs
mov
and
or
mov
jl
in
inc
out
popa
xor
xchg
dec
jae
push
in
ror
pop
add
pop
icebp
repz
mov
push
xchg
int
dec
js
inc
aas
mov
repnz
pop
mov
test
fnstenv
aaa
int3
daa
push
cmp
js
push
add
ljmp
ja
lcall
lret
iret
pop
xor
inc
mov
xchg
jns
fwait
cmp
jnp
add
rorb
rcrb
mov
dec
addr16
outsb
mov
call
sbb
call
nop
push
cmp
mov
cmpsl
dec
inc
out
cmpsl
sbbl
xchg
dec
inc
or
fs
int
das
pusha
sub
push
in
sub
and
mov
mov
mov
leave
addr16
leave
pusha
test
dec
je
mov
sub
adc
movsl
jl
jmp
xchg
pop
loop
or
cmp
mov
sahf
aad
push
mov
mov
xchg
push
add
sbb
mov
cmpl
sarb
in
mov
cmp
mov
push
push
sub
cmpsl
repz
imul
cmpsl
inc
pop
shlb
aaa
in
cltd
pop
stc
or
mov
outsb
test
xchg
into
call
mov
jb
imul
cmp
cmp
cmp
or
sbb
sub
scas
hlt
inc
data16
shll
fisttpl
fldt
mov
sub
shrl
test
ja
out
add
test
sub
jg
xlat
ja
pop
gs
sub
add
xor
arpl
mov
xchg
xor
sbb
loopne
jnp
sub
repz
jnp
call
stc
faddl
ret
xchg
sbbb
icebp
sub
mov
mov
add
adc
sub
jp
jp
lcall
lahf
ss
mov
rcl
aam
outsb
mov
das
jo
addb
loopne
push
cmc
xchg
pop
sar
xchg
data16
adc
or
repz
sub
xchg
adc
imul
cmpsl
cmp
xor
and
lods
inc
add
aam
dec
sub
popf
mov
mov
mov
cmp
stos
in
daa
adc
sub
mov
jecxz
and
xchg
push
out
mov
push
inc
rcrl
xor
cmp
push
adc
int
imul
and
adc
test
iret
sbb
adc
jge
push
je
xchg
syscall
pushf
cmp
or
push
pop
je
cmp
and
sub
lods
in
frstor
xchg
pop
jae
int
mov
aas
pop
ret
loope
xchg
adc
enterw
and
add
mov
mov
pop
cmp
es
mov
mov
out
cld
add
sbb
or
aaa
pop
pop
ds
push
out
nop
push
jno
pop
shll
movsb
add
sbb
jge
aaa
push
dec
outsl
and
rcr
push
loop
jmp
mov
add
sbb
mov
andl
mov
in
in
inc
adc
sahf
stos
or
fdiv
pop
xor
jp
lcall
cltd
int3
call
and
pop
das
jg
push
cmc
xchg
ret
push
push
pusha
ja
sub
add
movsb
into
mov
test
push
je
outsl
std
adc
fiadds
lds
xorb
js
outsb
mov
and
push
sahf
inc
xor
add
add
in
dec
pop
cmpsb
xchg
ljmp
ret
mov
xchg
call
pop
ds
popa
mov
mov
stos
adc
jecxz
push
mov
sub
leave
mov
cmpb
fstl
adc
adc
sti
sbb
sub
inc
jp
je
cltd
aaa
sub
loop
xor
jne
sub
sub
data16
or
jle
ss
pusha
std
xchg
push
leave
in
out
mov
decb
adc
xchg
mov
je
imul
sub
repnz
loopne
repnz
sbb
clc
pop
cmp
call
xchg
enter
addr16
fwait
jg
inc
xchg
loopne
ss
cmp
outsb
lea
and
xchg
push
lock
hlt
push
cli
test
movsb
or
pop
repnz
jl
or
cmpsl
pop
rorl
insb
inc
imul
aam
push
lcall
insb
pop
lret
leave
xor
dec
ret
bound
gs
into
inc
mov
pop
mov
mov
xchg
push
or
lcall
mov
loop
pop
sub
push
dec
and
xchg
mov
pop
inc
dec
and
gs
imul
das
ret
jge
imull
mov
add
mov
push
daa
aaa
jmp
push
sub
or
jp
in
inc
push
in
aad
je
xchg
mov
fmulp
dec
jne
xlat
in
and
ret
cmp
in
cmc
int
cmp
pop
push
sub
aaa
mov
add
mov
fdivp
or
mov
into
sub
jo
test
lret
out
test
test
dec
test
jmp
lds
and
adc
mov
aam
and
movsb
jecxz
xchg
sub
hlt
rcl
mov
or
cmpsl
push
mov
push
sbb
push
loopne
adc
jle
xor
mov
cs
mov
mov
in
add
xchg
mov
mov
lret
pop
insb
into
or
inc
or
addr16
repz
jp
sub
lock
cmpl
aaa
outsl
sbb
or
fimuls
mov
cli
mov
sub
mov
shrl
insl
aaa
push
xchg
inc
cli
pop
mov
movsl
fwait
jecxz
shl
ja
adc
lret
gs
aas
mov
sbbl
cli
jp
mov
ljmp
xchg
js
push
je
mov
pop
jnp
aas
mov
xor
pop
je
clc
js
push
call
sub
jo
jge
sub
imul
jg
lcall
mov
adc
cmp
loope
clc
dec
insl
adc
test
testb
adc
aaa
adc
inc
pop
mov
push
add
jmp
adc
pop
mov
jne
mov
inc
xchg
cwtl
xor
inc
sub
and
xchg
addr16
jge
or
in
sbb
test
cmp
push
or
aas
ret
jle
add
mov
aas
movsb
enter
test
push
xor
arpl
mov
and
jbe
iret
and
or
pusha
call
sbb
nop
pop
lcall
dec
in
test
scas
inc
push
enter
jbe
dec
lods
xchg
mov
adc
inc
mov
je
xor
dec
pop
xchg
stc
dec
pop
cmpsb
sbb
pop
enter
sub
pop
out
cltd
xor
in
adcl
push
inc
aaa
mov
xchg
sub
or
pop
mov
movb
jle
loope
mov
pop
fidivl
dec
decb
clc
or
call
fbstp
inc
sahf
insl
add
lds
orb
pop
loopne
xor
inc
mov
add
mov
or
movhps
push
xchg
fnstenv
arpl
jo
in
fstpl
and
pop
dec
lods
pop
nop
inc
pop
out
jne
loop
jo
jmp
mov
popa
sub
mov
into
shll
xchg
mov
enter
mov
sti
insl
adc
or
je
dec
xor
mov
inc
fimull
test
jns
sbb
sub
cmpsb
push
out
scas
fisttpl
popa
lods
mov
ret
jns
push
cltd
fistps
aam
aas
cltd
pusha
sub
fstpl
mov
out
push
lods
sbb
outsb
sbb
xchg
jbe
stos
fcmovb
push
imul
sti
test
xor
addr16
mov
cwtl
adc
mov
lds
dec
fwait
add
sub
xlat
add
cmpsl
xchg
ljmp
mov
jae
popa
xchg
test
sbb
lea
fsubrp
add
sub
adc
mov
in
test
test
xchg
fistps
or
roll
lock
lret
pop
fistpll
icebp
scas
add
ds
insl
cwtl
or
inc
movsl
xchg
xchg
pop
or
bound
jne
dec
mov
adc
movsl
mov
pop
sbb
jecxz
ret
pop
ss
push
insl
mov
stos
fstps
xor
test
test
negl
mov
popaw
pop
maxps
les
ret
mov
mov
arpl
pop
fs
pop
loop
das
incl
mov
inc
lock
repz
outsl
ds
xchg
mov
cmp
rorl
push
andl
mov
fisubs
pop
jecxz
pop
or
stc
jae
pop
and
fs
push
popa
xor
sbb
push
sub
cmc
dec
and
add
cli
pushf
pop
push
sub
xchg
jge
negl
sub
xchg
mov
aad
pop
mov
sub
pop
sub
jo
cmp
sbb
int
sti
xchg
add
or
mov
sar
movsl
aaa
into
sub
lahf
es
in
mov
jle
xchg
pop
jae
xor
pop
cmp
xor
repz
xlat
mov
mov
sub
dec
push
andb
or
testl
dec
in
jle
inc
aad
aaa
out
mov
mov
sub
popf
stc
cmp
cli
jne
or
out
test
ret
pushf
or
adc
lahf
push
scas
mov
rorl
jecxz
mov
cmp
mov
shrb
cmp
or
cmpsl
popf
lock
scas
fnsave
and
ret
mov
ja
fistpl
inc
jmp
adc
ffreep
mov
sbb
dec
repz
ficomps
cwtl
dec
sub
rcrl
mov
out
aas
xor
xchg
jae
aas
xor
repz
xor
push
es
mov
cltd
sahf
cmc
jae
mov
pop
pop
mov
mulb
mov
or
cmpsl
sbb
inc
fsubs
dec
xchg
mov
clc
testb
mov
es
ret
jle
into
dec
add
movsb
repz
xchg
sbb
jecxz
xchg
cltd
das
fildll
lret
cld
sbb
xlat
test
lret
push
fwait
xor
push
or
sub
push
inc
icebp
movsl
testb
aam
jp
sahf
int
mov
cld
dec
cmc
jmp
mov
outsl
ss
pop
jnp
loop
les
mov
pop
adc
outsb
stc
je
push
stos
xor
cmp
push
fwait
ljmp
jne
adc
test
fwait
jecxz
mov
shl
int3
pop
xchg
ds
mov
js
xchg
pop
xor
fbstp
jg
cs
mov
loope
sub
in
inc
inc
fdivs
nop
dec
add
pusha
notl
jp
fnsave
mov
pop
fmull
fwait
ret
sahf
or
mov
mov
xor
mov
movsl
add
sub
sbb
sub
and
lret
xchg
std
mov
jmp
adc
fcomi
mov
test
movsl
sbb
je
mov
ljmp
lods
push
aam
outsb
mov
arpl
add
aaa
outsb
hlt
fsubrp
and
and
mov
push
cmpsl
mov
lods
adc
mov
neg
mov
jecxz
jmp
jae
add
mov
stos
movsb
cmp
std
push
jmp
ret
or
push
cmp
inc
add
icebp
popf
inc
mov
addr16
lds
rorl
and
cmp
and
xchg
xchg
daa
mov
loop
movsl
mov
push
ret
adc
inc
xchg
mov
ret
popa
int3
jg
addr16
cmp
push
fstpt
push
inc
mov
mov
pop
adc
pop
xlat
xchg
subl
pop
cmc
movsb
sbb
pop
push
hlt
ljmp
jno
das
mov
cmc
jo
pop
mov
mov
addr16
cmp
in
stos
or
cmc
xchg
cs
add
push
jecxz
mov
push
push
dec
loopne
repz
dec
fucomip
call
addr16
pop
out
aad
out
mov
push
mov
fadd
pop
into
movsl
rorl
test
jns
push
loop
xor
mov
dec
dec
out
addr16
mov
and
sub
leave
cwtl
pop
or
testb
pop
cmp
mov
in
stos
outsl
add
xchg
loop
add
out
test
bound
and
hlt
mov
jnp
pop
mov
lods
inc
sarb
mov
cmp
push
adc
cmp
frstor
pop
setns
test
ljmp
rcl
sub
pop
dec
out
jno
jne
jbe
or
mov
push
push
icebp
mov
jno
fsubl
pop
cmp
sbbl
mov
hlt
pop
lock
test
dec
jo
inc
loop
add
shlb
movsl
mov
and
xchg
sbb
xor
leave
jge
push
xorb
shrl
clc
sbb
out
pop
sub
dec
push
in
jg
cmpsb
cmp
push
ret
and
ja
mov
cmp
int3
cld
xchg
jl
popa
pop
pop
sbb
lds
or
js
cli
mov
fcmove
int
adc
inc
pop
mov
sti
inc
xlat
sub
push
and
adcl
sub
push
push
jmp
xlat
dec
jmp
outsl
arpl
jecxz
mov
cmc
jg
lds
sub
jecxz
dec
aad
dec
mov
pop
out
jp
outsb
outsb
pop
push
ljmp
js
imull
cltd
stos
notb
mov
popf
mov
push
pop
ds
pop
imul
cs
inc
pusha
jne
jp
enter
addl
cwtl
loopne
pop
adc
push
fs
rcrb
ss
or
pushf
sbb
xor
xchg
dec
lock
fsubl
and
out
xchg
cli
popf
cmp
into
pop
shrl
lret
sarb
icebp
mov
lret
notb
int
adc
mov
das
adc
add
adc
push
pop
xchg
fmul
ret
mov
arpl
popa
or
mov
jg
jle
movsl
and
push
popf
jnp
or
push
mov
mov
dec
test
movsb
inc
insb
dec
loopne
rclb
jno
mov
add
mov
nop
daa
lahf
mov
sti
or
sub
lahf
lahf
je
mov
loope
daa
or
into
mov
int3
xor
cmp
shr
lds
and
fnstcw
adc
pop
insb
test
cmp
or
into
xchg
int3
xor
mov
xchg
sub
aas
mov
adc
into
dec
out
jge
and
sarl
rorb
push
dec
sti
leave
pusha
or
adc
sbb
outsb
sbb
jnp
pop
idivb
cltd
popa
xor
add
clc
in
mov
push
mov
push
fldl
sbb
insb
mov
mov
mov
push
pop
or
pop
and
pop
popa
pop
cmc
xchg
jg
adc
mov
rcrl
dec
out
jl
frstor
and
xor
daa
cmp
repnz
sub
push
outsb
inc
or
push
and
gs
cli
push
in
je,pt
jnp
or
jbe
lods
and
incb
sub
sub
xor
loope
ret
adc
mov
push
insl
jo
push
xsha1
cmpsb
mov
daa
popa
jg
mov
sbb
pushf
addr16
ljmp
rcll
js
and
ret
dec
and
pushf
insl
add
xor
xor
and
mov
fisubs
idiv
aaa
pop
in
xor
push
push
sub
and
add
sbb
jns
cmp
pushf
sub
je
insl
pop
mov
lods
mov
xlat
add
movsb
repnz
and
xor
jp
jns
mov
mov
push
lods
cmp
ljmp
lret
js
pop
jmp
dec
andb
js
ja
cs
fiadds
inc
push
mov
push
andb
and
jb
pushf
pop
lock
jecxz
and
pusha
ja
mov
jno
stos
insb
push
lods
scas
repz
fists
xor
cmp
pop
repz
pop
adc
cmp
cli
subl
adc
push
dec
pop
andb
pop
and
clc
dec
in
push
and
lahf
inc
sub
shll
inc
fs
hlt
pop
dec
jmp
jmp
xchg
clc
xchg
in
scas
outsb
lods
inc
xchg
dec
push
stc
mov
xor
mov
shlb
add
xor
xchg
adc
cmpsb
rcrl
mov
popa
or
test
mov
insb
loop
adc
mov
popa
cwtl
jmp
and
adc
cmp
pop
outsb
push
pop
xlat
sbb
scas
je
ljmp
outsb
push
pop
pop
mov
daa
push
ja
test
cmp
int3
pop
out
lods
xchg
popl
testb
mov
and
add
imul
nop
mov
jle
mov
test
mov
mov
sub
mov
mov
mov
in
push
cmp
add
ljmp
fwait
pop
push
popa
clc
iret
adc
pop
inc
push
inc
aas
les
in
xor
fcmovnu
xchg
sub
loope
and
js
jl
cmpsw
ds
dec
sbb
je
lds
das
pop
ret
pop
jb
ret
push
adc
pop
lcall
cmpsl
cmp
jecxz
clc
jno
ss
dec
or
sub
or
mov
adc
and
adc
fs
pop
mov
pushf
cmpsl
repnz
aaa
mov
add
mov
adc
mov
les
hlt
mov
cmp
adc
stos
icebp
cmpsl
fmuls
add
scas
in
xlat
je
int3
xor
ljmp
and
lret
nop
ss
lods
sbbl
adc
mov
out
inc
push
repnz
aas
dec
push
sahf
les
fdivrl
cmp
lods
mov
pop
push
popf
mov
fs
sub
or
mov
hlt
js
ss
mov
mov
push
call
scas
pop
pop
fldenv
inc
bound
fidivs
add
mov
imul
adc
hlt
sti
ret
movsl
mov
push
inc
call
outsb
push
lret
int3
or
ret
pusha
xchg
sub
outsl
inc
sub
mov
inc
dec
imul
mov
aam
jno
out
dec
daa
dec
data16
push
repnz
fcmove
testl
inc
adc
gs
cmp
and
fldcw
dec
mov
cmpsb
loop
xchg
pop
pop
dec
and
lcall
adc
xchg
mov
mov
in
inc
dec
mov
out
mov
mov
test
pop
xor
out
jne
ret
stos
js
sub
jae
lret
daa
pop
bound
aad
inc
lahf
stos
jno
pop
push
xchg
icebp
insb
sahf
xor
add
decl
xlat
scas
jmp
xchg
lahf
lods
mov
imul
shrl
lods
mulb
sbb
sub
aam
lahf
negl
jle,pt
out
cmp
mov
jne
mov
loopne
xchg
shlb
test
xor
in
cwtl
das
fadds
divl
and
inc
push
sub
mov
fs
scas
sbb
popa
adc
scas
cmp
scas
dec
mov
inc
cwtl
dec
adc
pop
jmp
test
out
std
nop
xchg
pop
push
pop
aam
or
cmp
hlt
pop
and
push
xor
cmp
pop
push
insb
and
add
mov
inc
cltd
cmpl
sbb
loope
sub
popw
pop
dec
mov
ss
movsl
cmpsl
lahf
cmpsl
ret
int3
addr16
shrl
pop
and
fucomp
push
popf
faddp
sbbb
sbb
add
in
int3
lds
imul
jl
xchg
sub
fs
mov
iret
dec
pop
and
pop
sbb
mov
sbb
cld
cmp
cmp
dec
cmp
not
sub
das
xchg
cmp
cwtl
cs
cmpsl
mov
xchg
test
sub
into
cld
xchg
pop
push
in
inc
push
cmpsl
cmpsb
xchg
mov
or
or
ret
xor
push
movsl
pop
sbb
inc
jl
or
loop
cmp
mov
jno
imul
sbb
popa
add
lea
xchg
sbb
xchg
xor
push
in
hlt
sub
cmp
popf
nop
ss
insl
sub
sahf
fwait
ss
addb
or
cmc
fdivrl
leave
pushf
mov
pop
or
xchg
das
fdivs
std
test
inc
dec
ss
pop
out
and
mov
je
imull
les
std
push
mov
sar
enter
jb
orl
les
fimull
repnz
jge
ret
jns
mov
jp
and
xor
flds
orl
xchg
mov
int
sbb
xor
loope
popa
fdivs
lret
std
mov
pushf
outsb
int3
cltd
aaa
data16
sbb
push
or
cs
xor
cli
mov
mov
rol
sub
mov
push
mov
scas
mov
clc
pusha
push
pop
sub
mov
adcb
xchg
aad
sar
sbb
movsb
test
stos
int3
fldcw
push
rolb
lods
aas
xchg
jmp
into
lods
inc
movsl
push
out
xchg
int3
inc
mov
mov
xchg
add
scas
pop
lods
mov
loop
inc
pop
xor
push
popf
ret
jo
movsl
fstl
stos
mov
sub
in
xor
push
jne
add
rorb
fs
into
adc
mov
jne
inc
push
mov
test
out
sub
ds
leave
lret
cld
out
insl
add
pop
adc
dec
adcb
xlat
pop
scas
push
jae
shrl
ret
pop
sub
inc
mov
jle
pop
scas
hlt
jle
cmp
adc
into
xchg
mov
mov
sub
jge
sbb
jecxz
mov
pop
sbbb
sbb
or
pop
mov
stos
mov
std
addr16
shr
test
hlt
inc
stc
mov
sarl
dec
cmp
jg
mov
push
lds
inc
outsb
sub
fildl
xchg
fnstcw
sub
adc
mov
in
jnp
or
sbb
into
or
mov
adc
adc
int
push
call
fstpl
dec
pop
xchg
xor
inc
ret
xor
rorl
mov
pop
push
repz
rorl
lcall
pop
lret
mov
push
dec
fisubrs
or
xchg
pop
jecxz
outsb
add
imul
ja
jnp
aam
add
aad
cmp
mov
mov
js
sarl
xor
push
sub
jae
clc
push
mov
push
jge
adc
pushf
cwtl
cmpsl
sub
ret
jecxz
add
in
pop
push
popa
xchg
leave
mov
rclb
decb
xchg
rcr
sub
mov
cli
das
fadds
mov
enter
data16
lcall
mov
orb
or
mov
andb
sub
vpsubusb
push
lea
sub
pop
movsl
ss
adc
jns
fldenv
outsl
and
shl
or
lds
xchg
jl
sbb
xor
idiv
enter
xchg
iret
aam
into
or
adc
lods
aam
mov
hlt
mov
ds
push
stos
rcll
mull
jbe
cmpsb
in
and
lahf
or
sahf
cmc
aas
sti
xchg
mov
stc
inc
ret
push
movsl
in
xlat
inc
push
pop
ficoml
in
inc
into
jb
lods
mov
data16
cmp
xor
hlt
mov
dec
sub
push
cmp
fildll
push
stc
mov
aad
push
push
div
jo
sub
out
sbb
icebp
ds
je
loopne
dec
loopne
inc
sbb
std
mov
mov
mov
sti
pop
fsubrp
test
pop
xor
ret
xor
cmp
xchg
cld
xchg
sbb
adc
dec
xchg
dec
push
cld
xlat
xor
inc
cmpsb
sbb
popa
jl
jmp
xchg
scas
dec
in
jmp
ss
cmp
jl
les
cltd
inc
iret
sbb
dec
mov
dec
fidivs
repz
sbb
pop
sbb
and
dec
outsl
test
xchg
pop
call
daa
sub
ljmp
jne
pop
stos
add
mov
shlb
push
mov
int
scas
push
mov
lock
iret
loope
jb
icebp
stos
ss
or
push
fnstenv
popf
in
arpl
mov
fs
jb
imul
imul
dec
outsb
clc
insb
mov
sbb
xchg
aad
lahf
push
xchg
pushf
rolb
shlb
imull
mov
gs
xor
and
stc
mov
fstpl
push
or
sbb
cltd
cmp
lea
cmpsl
or
add
jl
movsl
lock
xchg
enter
or
pop
adc
mov
and
mov
push
testl
fisttpl
cmp
loop
sub
jb
daa
loop
imul
mov
fwait
shl
inc
leave
jmp
ljmp
out
popa
sbb
pop
adc
adc
pop
pop
insb
lods
pop
addb
stos
cmpsl
fcompl
outsl
nop
push
inc
dec
stc
cld
stos
jb
push
push
pop
xchg
das
mov
dec
jge
inc
pop
sti
dec
shl
jae
sbb
adc
cmp
jecxz
jb
fyl2x
xor
or
iret
arpl
mov
sub
outsb
cmpsl
sub
dec
pop
enter
or
dec
aaa
in
push
pop
mov
pusha
or
sbb
dec
cld
xchg
xchg
xchg
xor
orl
stc
inc
icebp
jle
push
repz
fisubs
cmp
pop
ret
in
lds
ja
mov
cli
sbb
pop
push
cs
enter
cmp
sbbl
sbb
sahf
pusha
xchg
push
es
pop
test
dec
sub
pop
mov
ja
mov
jmp
cs
jp
mov
sub
cmp
sbb
push
movsl
push
or
les
xchg
scas
push
fs
ljmp
and
sar
out
add
mov
int3
arpl
insl
add
ficoml
cmpsl
cmp
movsl
jns
and
inc
jmp
ds
scas
mov
in
aas
addr16
into
xchg
mov
sbb
gs
rcl
jne
add
rol
orl
sub
in
arpl
xchg
sbb
push
jo
pop
mov
inc
cld
mov
aas
inc
rclb
mov
push
cmp
push
add
ja
add
mov
imulb
nop
test
shlb
push
add
out
rorb
frstor
mov
scas
jle
ret
cltd
aad
cmp
out
dec
mov
lock
ss
inc
adc
pop
test
ss
pop
push
mov
jb
call
ljmp
cmpl
mov
inc
std
test
scas
jne
pop
adc
sbb
push
test
fs
daa
or
cmp
pop
sti
pop
loop
std
ret
lods
jne
push
pop
ficomps
cmp
in
shlb
insl
add
andl
test
mov
hlt
lods
inc
lods
inc
push
stos
popa
adc
lret
fildll
cld
sub
jl
fs
mov
and
jp
cmp
mov
mov
repz
pop
mov
xlat
cmp
ds
add
mov
adc
inc
andl
xor
stos
push
hlt
mov
rep
jmp
mov
cltd
addl
stc
adc
aad
mov
pop
jno
daa
gs
fsubrs
xorl
xchg
mov
ficompl
jge
mov
sbbl
rcrb
pop
mov
xlat
jge
jge
jg
imul
add
dec
lods
andb
sbb
sbb
fsubl
mov
sbb
jecxz
cwtl
and
dec
jae
add
in
sbb
cltd
mov
enter
pop
scas
push
outsl
mov
int
cmp
stos
jb
sbb
aam
push
pop
shll
jae
push
iret
aaa
sbb
dec
out
aad
out
mov
inc
pop
jl
push
pop
js
jg
fiaddl
out
addr16
cmp
or
out
dec
add
or
test
insb
outsl
jle
popf
das
insb
push
mov
or
dec
jae
gs
and
aad
inc
sbb
scas
xchg
in
pop
jp
std
pop
inc
push
jo
ds
lret
lcall
push
test
mov
insl
js
sbb
inc
mov
jne
dec
dec
ret
cmp
out
cmp
cmp
or
inc
sbb
cwtl
dec
stos
shrb
ret
pusha
and
sbb
icebp
js
shlb
rclb
adc
out
in
pcmpeqb
jl
insb
add
xchg
pop
mov
mov
mov
or
pop
and
stos
fisubrl
jmp
outsl
mov
or
into
jmp
mov
push
loop
push
mov
rorb
and
and
rclb
neg
pop
or
inc
fadds
jae
and
mov
push
out
mov
daa
dec
pop
mov
aam
and
dec
xchg
mov
rcrb
sbb
push
mov
xor
fbstp
push
mov
js
cli
ret
fdivrs
or
orl
dec
popl
popf
xor
into
cmp
popf
jp
iret
inc
loope
ljmp
dec
jae
push
jmp
aas
fsubs
mov
push
push
jae
test
cmpsl
jp
data16
cwtl
mov
inc
pop
mov
sbb
mov
xchg
stc
vcvtsi2ssl
scas
testl
inc
insb
push
and
pop
mov
rolb
ret
ret
jae
aad
jmp
scas
pusha
ljmp
iret
sub
daa
jmp
dec
loope
cld
xchg
pushf
test
lahf
push
mov
or
mov
jae
fcomi
in
je
aaa
mov
push
out
test
sbb
aad
inc
mov
repz
sahf
inc
xchg
in
aaa
or
gs
sub
xchg
add
enter
pop
lods
inc
lea
dec
in
dec
aam
and
enter
int
and
stos
hlt
data16
cmp
test
jmp
stos
ret
xor
xchg
xchg
nop
pop
push
mov
sbb
test
push
addb
ljmp
and
xor
and
cmpsb
sub
pop
flds
jo
js
and
mov
inc
das
lahf
mov
into
mov
in
pusha
shll
or
inc
xlat
jo
mov
jmp
ljmp
test
sub
or
mov
sti
cmpsl
sub
out
sahf
inc
daa
mov
aaa
mov
sub
mov
aaa
and
cli
fldt
or
mov
clc
jg
sub
jmp
cmp
roll
cmc
inc
push
jne
dec
sarl
shrl
jle
jmp
lods
add
imul
icebp
mov
jno
std
mov
and
into
push
mov
push
sub
pop
xor
pop
es
pusha
adc
xchg
push
fiaddl
mov
mov
and
push
xchg
push
stos
mov
arpl
shll
jne
rorl
jge
stos
jmp
dec
mov
adc
add
or
es
mov
lds
jle
inc
mov
iret
adc
aam
out
incb
sub
mov
std
inc
in
dec
mov
not
sub
roll
xor
adc
imul
dec
jno
cld
nop
rclb
add
loope
jae
xchg
mov
je
ret
stos
inc
push
mov
fmull
jbe
push
popf
or
jmp
cmpsb
mov
call
and
sbb
jnp
pop
mov
pop
incl
outsb
jp
fisubs
pop
arpl
jmp
push
cmp
in
mov
fnstenv
push
mov
out
adc
loop
xchg
xchg
dec
loop
cmp
aam
and
test
cs
loopne
adc
fs
dec
pop
in
iret
cmpsb
jmp
mov
xchg
rol
sbb
out
cmp
repz
xchg
xor
jecxz
mov
cmc
mov
mov
inc
cmpsl
sbb
push
jg
xchg
pop
in
stos
cmp
arpl
adc
into
push
inc
jno
or
imul
sbb
mov
pop
hlt
mov
pop
jle
push
shrb
lea
cli
or
stc
stos
mov
sbb
loope
inc
add
mov
jmp
popf
xor
adc
push
inc
xchg
and
push
jae
fisttpll
fwait
gs
rcll
adc
ret
pushf
int3
icebp
mov
mov
mov
mov
inc
dec
jb
pop
pusha
lea
lods
ss
dec
cltd
dec
sub
out
rcr
loopne
cmp
mov
xlat
out
sub
cmp
or
cmovnp
icebp
sbb
insb
xchg
xor
jns
push
outsl
sub
or
arpl
test
push
cmp
out
ret
orb
sbb
dec
xor
sbb
stos
or
das
test
imul
ja
jo
inc
mov
jmp
pop
sbb
data16
and
mov
lea
xchg
push
xor
mov
jmp
out
loope
lds
mulb
repnz
dec
rcrb
addr16
fsubl
mov
or
jecxz
outsl
mov
fucomip
mov
jnp
out
fimull
mov
pop
inc
sarb
mov
test
test
repnz
sbb
or
add
or
aas
fcmovu
outsl
or
mov
test
push
test
dec
inc
push
and
sbb
jo
iret
mov
clc
jo
loop
ret
pop
mov
adc
push
outsl
xorl
imul
mov
and
adc
jne
dec
inc
imul
lret
out
aad
cmp
or
and
add
dec
xor
inc
fistpl
mov
in
stos
sbb
mov
sub
std
cltd
stc
push
sub
push
mov
inc
shlb
pusha
cmp
sub
movsl
dec
sbb
pop
ja
mov
mov
pop
push
lods
xchg
cmp
xchg
ss
int3
jle
int
out
pop
sub
cwtl
insl
sbb
lds
xchg
in
pop
add
sbb
pop
add
xchg
cmpsl
or
ficomps
shrb
sbb
stc
sub
pop
mov
in
push
outsl
mov
lret
xchg
jmp
inc
shll
inc
mov
inc
in
xor
mov
cmpsl
shll
mov
push
adc
and
clc
lahf
cld
lret
loopne
repnz
enter
fsubl
sbb
or
jle
fdivrl
nop
inc
jmp
dec
inc
cmp
adc
lret
sarl
inc
add
push
sub
lret
mov
jns
and
scas
mov
pop
mov
jns
adc
pop
sahf
shl
imul
and
push
aam
inc
pop
call
or
or
les
cmc
add
std
cltd
and
loope
cld
inc
adc
loope
jge
lock
sub
in
stc
out
test
push
bound
stos
inc
push
inc
hlt
cmp
inc
lds
sub
xchg
mov
dec
add
stos
aam
cs
jg
ljmp
les
or
jecxz
cmp
and
pop
xlat
rorb
decl
scas
ficomps
ret
add
jp
pop
loopne
add
sbb
push
sub
and
push
test
and
dec
jae
ja
mov
pcmpeqw
int
dec
add
das
rcl
sbb
in
dec
push
xchg
les
arpl
pop
pop
mov
jecxz
ja
cld
test
imul
xchg
ret
outsl
pop
in
sbb
jg
call
test
jge
mov
cmp
shl
loop
sbb
push
push
jbe
mov
les
mov
imul
in
fucomp
dec
adc
mov
inc
negb
inc
fsubr
jmp
fs
push
bound
jo
push
mov
iret
aas
movb
fiaddl
push
movsl
push
jg
cmp
sub
cmp
les
shl
es
lock
sbbl
leave
ljmp
test
sbb
and
sarl
pop
imul
mov
pop
mov
fidivrs
cwtl
push
in
jle
out
cmp
nop
bound
in
icebp
inc
sbb
int
mov
sub
insl
cmp
aam
pop
mov
or
mov
push
jge
pop
hlt
or
das
outsb
add
cmp
out
popf
ficomps
shrl
jmp
outsb
ds
shlb
jmp
fisubrl
addr16
js
ficomps
mov
cs
pop
ret
xor
push
call
jl
outsl
int
jns
adc
and
mov
cltd
call
and
ja
pop
xchg
sub
mov
mov
gs
push
mov
sahf
add
xchg
fidivrs
mov
into
adc
sbb
test
addr16
add
call
ljmp
shrb
push
xchg
daa
or
cmp
movsb
ja
mov
push
or
and
call
fdivp
jle
or
xchg
mov
jg
or
push
mov
xor
clc
pop
mov
aas
cmc
ds
and
xchg
sub
cmp
daa
push
in
mov
mov
out
popa
mov
iret
push
js
inc
xchg
xor
jp
xchg
mov
mov
aad
sub
jecxz
mov
mov
mov
nop
pusha
stc
xchg
mov
mov
adc
rcll
imul
and
arpl
shlb
outsb
mov
jmp
and
pop
xor
arpl
insl
mov
adc
loopne
popa
inc
inc
xchg
mov
push
mov
scas
inc
out
mov
call
test
add
adcw
fistps
stc
outsb
cmpsb
std
mov
dec
out
imul
dec
pop
rorl
xor
gs
enter
pop
jo
pop
mov
or
test
push
push
je
jmp
sub
xchg
pusha
imul
addb
xchg
in
inc
sahf
je
xchg
movsb
out
inc
pop
xor
mov
xchg
mov
stos
push
mov
andl
push
mov
sub
in
mov
xor
lods
mov
pop
outsb
jae
mov
fistl
add
loop
sub
dec
pop
mov
ja
lcall
and
inc
push
ret
push
push
in
out
stc
dec
or
adc
out
add
dec
dec
push
movsb
mov
adc
call
lret
outsl
outsl
jnp
mov
xchg
cmpsl
pop
and
ret
cmp
sti
in
xchg
decb
sbb
mov
jecxz
addr16
js
dec
popa
mov
cs
xor
sbb
jle
imul
fsubrs
mov
cmp
mov
in
aad
aad
fsubl
dec
lea
lret
ja
jo
sub
ds
add
aaa
xchg
rolb
outsl
arpl
js
cli
jne
pop
hlt
addr16
cmp
pop
pusha
xchg
loop
pop
shl
xchg
adc
dec
dec
jp
pushf
outsl
insb
fwait
aam
dec
xchg
shrb
cltd
mov
mov
aam
gs
pop
dec
in
jge
shl
subl
xchg
cmp
call
or
mov
mov
pop
fisubs
popl
inc
in
fcmovnb
maxps
xor
rolb
fisttpl
sti
jecxz
nop
xchg
aas
jb
jno
jae
adc
dec
mov
jae
xor
cli
fidivrs
mov
jo
fwait
movsl
sub
jae
and
jns
les
es
mov
cmc
mov
xorl
jecxz
inc
add
cltd
mov
shll
pop
mov
cmp
push
xor
mov
lock
jmp
mov
fs
out
mov
seto
cltd
inc
sbb
mov
les
adc
inc
loop
jl
jno
add
test
xor
mov
add
out
dec
sub
xchg
movb
push
cwtl
divl
add
aad
inc
sbb
pusha
dec
rorl
jl
ljmp
or
inc
and
lcall
jbe
push
pop
lods
fcmovu
adcb
icebp
xchg
jo
cltd
push
push
out
repz
lods
lock
int
data16
es
push
push
sub
out
enter
push
les
add
imul
in
mov
aam
in
xlat
leave
xchg
adc
ja
daa
test
adc
and
xchg
lds
sbb
inc
inc
inc
xor
pop
inc
les
jno
jo
ds
popf
inc
scas
cld
push
out
and
dec
rcr
jb
jge
sbb
scas
sbb
push
mov
divl
jnp
xor
fnstenv
imul
notl
icebp
nop
repz
push
cmp
lock
mov
testl
mov
insb
imul
cltd
or
xchg
jle
mov
xchg
movsb
les
decl
lret
jnp
mov
lret
sti
jg
outsl
loope
mov
ret
adc
ja
stos
inc
cmp
mov
fs
lods
into
mov
or
mov
push
inc
mov
int
std
sti
int
xor
push
andl
add
hlt
inc
adc
xor
add
cmp
add
enter
gs
pop
xchg
xor
loop
mov
bound
nop
cmp
mov
pushf
lods
fcoms
sbbl
in
je
add
push
dec
adc
push
xchg
fnop
mov
insl
jge
fcompl
xor
cmp
outsb
mov
out
mov
dec
shl
push
push
rclb
ret
mov
imul
fs
dec
bound
ret
test
add
push
xor
cmpsb
add
mov
out
xor
xor
push
and
jmp
or
push
pop
call
lock
loop
shrb
mov
mov
jg
xorl
push
out
mov
jns
mov
adc
in
and
push
dec
imul
jo
in
rorb
inc
jle,pt
cs
inc
xor
enter
popfw
cltd
and
leave
jbe
fwait
push
cltd
xor
and
mov
imul
xlat
pop
inc
mov
adc
mov
mov
daa
outsl
inc
inc
jg
fcmovu
imul
aam
js
loopne
icebp
mov
jp
push
mov
lea
jp
dec
nop
jle
push
pusha
push
ss
cmp
movsb
sbb
jmp
xchg
jnp
mov
roll
rcl
icebp
test
xor
mov
int3
mov
dec
dec
push
test
pop
lret
cmp
cld
sbbb
push
out
aad
push
lods
cld
push
sbb
cmp
push
test
clc
pop
mov
jmp
xchg
sub
sti
ret
aad
jmp
and
dec
cmp
or
ficomps
outsl
daa
xor
sub
test
mov
pop
sahf
xchg
mov
mov
in
push
insl
jl
add
data16
pop
cwtl
call
lret
jg
cmp
cmc
adcb
shrl
imul
das
mov
ljmp
mov
sub
fdivrs
int3
or
ret
outsb
fwait
pushf
cmpl
cmpsl
out
sub
xchg
pusha
push
dec
popf
dec
xlat
sub
pop
aam
dec
lock
in
mov
xchg
and
mov
scas
idiv
inc
mov
fdivrl
les
jl
jae
aam
aas
adc
stc
nop
adc
xor
pop
adc
mov
dec
pop
scas
adc
mov
shl
out
loope
jb
mov
pusha
mov
ficomps
pop
dec
int3
stc
xchg
mov
cwtl
sar
scas
sbb
mov
xor
rol
push
mov
fistps
addr16
bound
test
push
lcall
push
xchg
in
or
daa
lea
lds
cli
sbbl
dec
xor
xchg
hlt
and
repz
fbstp
stos
stos
sbb
ret
xlat
xchg
add
xor
andl
adc
push
add
sub
jg
add
stos
xor
ss
mov
cmc
out
testb
test
pop
adc
xlat
add
xchg
das
stc
xchg
mov
stos
push
imul
out
mov
dec
inc
xchg
insl
clc
add
inc
loopne
pop
xor
leave
cli
loope
movsl
out
push
movsb
pop
dec
mov
outsb
add
jp
push
add
int3
mov
fisubrs
mov
push
jns
dec
repnz
lea
add
jle
dec
fmuls
inc
fdivs
rcll
add
xlat
jnp
mov
loopne
mov
test
aam
cmp
push
jo
sub
fcmovb
adc
ljmp
jge
adc
das
cmp
mov
or
mov
and
pop
imul
pusha
inc
pop
xchg
jp
pop
mov
jns
cs
out
pop
cmp
mov
hlt
mov
mov
ds
andl
mov
das
aam
aas
add
mov
jb
push
or
int3
lret
enter
inc
push
push
insl
stos
push
out
fidivrs
scas
or
jnp
adc
cltd
scas
dec
xchg
jns
sbb
in
cmp
lcall
into
clc
out
or
inc
scas
mov
test
imul
movsl
insb
cmp
jmp
jns
fs
cltd
inc
fnstcw
push
push
mov
push
cmp
test
inc
pop
out
mov
sti
sbb
fs
xchg
cmp
sbb
mov
je
push
lret
pop
mov
ljmp
mov
insl
jl
cld
mov
mov
lods
lods
clc
pop
daa
setnp
jle
sbb
out
or
mov
repz
subl
mov
jge
arpl
sub
sub
cld
mov
sbb
ret
repnz
into
mov
scas
ss
in
jp
xor
lcall
jne
stc
testl
push
or
or
jbe
rcll
add
lahf
pop
sbbl
shrb
xchg
pop
enter
movsl
pop
in
mov
pop
lret
leave
data16
mov
fbld
mov
in
iret
lock
jmp
push
cmp
jl
insl
mov
shll
stos
or
sub
mov
cmp
fldt
jae
push
std
push
mov
test
leave
jg
push
add
outsl
mov
or
mov
xor
cli
fwait
xor
ds
fadds
cmpsb
in
das
push
movsl
pop
sar
ret
and
clc
roll
mov
lds
roll
xchg
mov
arpl
fs
add
jl
jns
push
mov
xchg
fiadds
js
inc
lds
push
jmp
in
data16
add
test
testl
cli
sbb
decl
xchg
dec
xchg
xchg
and
lods
scas
out
cmp
or
lahf
cli
mov
aas
out
sar
xchg
add
pop
cmp
mov
nop
push
scas
inc
mov
push
leave
xchg
stos
cli
mov
pop
in
xor
testb
xchg
or
out
sahf
popa
xchg
inc
aas
outsb
dec
mov
fisubl
or
xor
cmp
fstl
fsubs
pop
sub
xchg
add
push
sti
or
insl
cmp
pop
dec
inc
push
call
subl
adc
push
in
sti
out
dec
lret
ss
inc
popa
insb
cli
iret
mov
mov
andl
loop
imul
leave
cs
fwait
cmp
clc
lret
rcrl
and
inc
cmp
pop
sbb
push
scas
mov
scas
xor
lret
jbe
daa
rol
les
xor
mov
std
fdivrl
scas
xor
aad
cmp
xchg
jmp
test
es
es
inc
cmp
loope
push
dec
rorl
fidivl
std
popf
jmp
pop
pushf
insl
test
shll
sub
out
test
xchg
rorb
mov
js
jmp
xchg
sbb
icebp
repz
int
adc
outsb
xor
add
sbb
add
nop
cmp
outsl
leave
popf
mov
lea
and
mov
cld
lcall
mov
mov
in
push
pop
inc
aas
aas
jbe
fbld
test
mov
scas
imul
mov
scas
aaa
push
push
jle
aad
cli
xchg
push
cmp
outsl
or
sub
das
outsl
xchg
xchg
adc
lret
sub
ja
add
fcmovnbe
pop
cmp
das
xor
jecxz
push
and
or
push
in
sub
outsb
cmp
xchg
pop
cwtl
fdiv
mov
mov
fidivl
push
int3
shrb
ja
and
fsubrl
mov
movl
fstps
test
imul
mov
in
inc
cwtl
mov
in
and
and
push
or
fwait
cmp
or
roll
addl
xor
add
nopl
fneni(8087
mov
xacquire
mov
sbb
inc
push
out
mov
cltd
daa
cmp
test
pop
push
stos
add
loopne
stos
cmp
mov
jbe
sbb
adc
pop
push
mov
lds
lahf
negl
push
enter
cltd
adc
mov
push
loopne
cwtl
test
ror
push
jne
out
and
cmpsb
cmc
xchg
pop
movsl
push
or
imul
adc
scas
mov
adc
mov
sbb
pop
lds
dec
repnz
insl
mov
cmp
jbe
cmp
cmp
pop
fcompl
rcl
rcr
lods
lret
pop
mov
adc
adc
call
popa
outsl
aas
push
fdivs
movsl
cmpsb
je
sub
into
cwtl
leave
add
mov
cltd
pop
push
dec
in
ds
xor
pop
pop
shlb
xor
int3
xchg
push
cmp
arpl
call
xchg
jg
fwait
icebp
xchg
fcompl
sub
jmp
pop
sahf
xchg
mov
in
repz
sbb
lret
fnstcw
dec
loop
inc
push
cmp
or
adc
pop
jb
jno
xor
mov
mov
cmpsl
mov
add
jge
ss
jbe
sarl
and
xor
xor
xchg
cmp
xchg
mov
jb
cs
dec
dec
cmp
pop
lret
fiadds
jl
cmpsl
sbbb
mov
lock
frstor
and
scas
adc
lret
mov
les
pop
dec
scas
shl
out
shll
test
in
in
out
sub
ljmp
popf
xor
mov
inc
push
je
push
cmpsl
sti
jmp
cs
cmp
or
push
pinsrw
rolb
sbb
shrb
add
cmc
sbb
lea
popa
inc
lret
ret
arpl
jo
and
addr16
xor
add
jo
mov
add
pushf
inc
mov
jae
xor
out
scas
sbb
sahf
mov
pop
mov
hlt
mov
jg
inc
stc
fstl
pusha
fistpl
cmp
mov
fcoml
sub
lds
addl
pusha
loope
outsb
adc
or
cmpsb
mov
lcall
ljmp
fisubl
cmc
rcll
pop
adc
jnp
arpl
add
testb
fnsave
push
and
outsb
sub
aas
pop
mov
lock
inc
fidivs
outsb
pop
jbe
dec
cld
xchg
jl
fnstenv
sbbl
adc
cmpsb
push
in
dec
cli
orb
mov
clc
outsl
lock
and
test
and
pop
repnz
xor
decb
movsb
stos
divb
pop
dec
mov
out
cmpl
fnstsw
jo
into
ret
dec
inc
cld
imull
in
mov
pop
jnp
lods
sbb
and
xchg
adc
cmp
in
inc
pop
lods
mov
es
jns
leave
les
jle
iret
popf
dec
mov
loopne
xchg
sub
and
mov
sti
testl
outsb
jnp
lahf
mov
popf
xor
insb
mov
mov
fdivrl
pop
into
ss
and
cmp
jb
or
fs
sub
adc
adc
xchg
xchg
sub
jmp
test
mov
fildll
testb
in
xor
lock
ds
aaa
sarl
scas
es
fldcw
iret
int
inc
mov
adc
dec
enter
fisubs
inc
test
imul
pop
hlt
adc
jle
sbb
lcall
and
insb
sbb
insb
aas
cmp
test
dec
jg
stc
sub
aaa
lahf
pop
adc
mov
xor
mov
lods
clc
xchg
clc
add
mov
xorb
xlat
fbld
pop
cmp
mov
adc
movsb
imul
sbb
push
outsl
jns
mov
mov
imul
fisttps
push
cmp
out
cmpsl
cmp
add
sbb
cld
rorl
inc
out
sbbb
enter
insl
pusha
add
mov
repz
ficoms
add
sub
cmp
movsl
cwtl
sbb
test
mov
stos
mov
arpl
stc
incl
dec
xor
lcall
and
sahf
jle
cli
aam
or
loopne
and
shr
out
mov
in
test
xor
lret
mov
outsb
cltd
test
inc
mov
or
das
push
sbb
jnp
push
xchg
cmpsl
test
pushf
lea
loope
pop
adc
mov
xchg
aas
cmpsb
mov
or
xchg
imul
adc
jmp
enter
sar
repnz
comiss
mov
inc
push
les
das
cwtl
push
or
adc
xchg
cmp
add
stc
ds
addr16
inc
sbb
mov
push
mov
mov
pop
sbbb
jb
sbb
mov
xchg
jecxz
arpl
mov
fidivl
mov
jmp
dec
xor
jae
pusha
mov
xchg
rol
cmp
in
xor
or
adc
add
rorb
xchg
sbb
or
aas
mov
cltd
fwait
je
or
adc
xchg
xor
enter
xchg
mov
inc
fs
out
add
sub
mov
jae
inc
jb
inc
sbb
lahf
stos
mov
test
dec
fnsave
mov
jmp
sbb
imul
rcr
jno
add
clc
or
pop
arpl
fsubr
out
xchg
add
fwait
xor
stos
mov
mov
fs
loope
sub
rcrl
jmp
add
push
mov
mov
stos
popf
lock
aaa
cli
push
cmp
fldenv
adc
xchg
data16
cwtl
jae
fxch
fnstcw
push
xchg
sub
stc
sub
push
std
xchg
push
rclb
leave
mov
sbb
fadds
jno
sbb
idivl
add
mov
mov
insl
fnsave
dec
dec
pop
sahf
sub
mov
push
lock
out
xor
arpl
adc
mov
sbb
mov
int
mov
push
loopne
int
std
pop
xchg
and
xor
cmp
adc
mov
sbb
in
nop
xchg
pop
mov
out
je
pop
xchg
dec
pusha
or
in
push
inc
xor
fidivs
leave
test
daa
pop
lret
movsb
cmp
int
stc
pause
ret
cmp
adc
test
out
xorl
rcll
sbb
inc
dec
lods
scas
push
dec
pop
inc
hlt
das
cmp
mov
jne
popa
pop
mov
sbb
jns
mov
push
in
sbb
sbb
je
add
loope
fnstsw
sbb
sub
pusha
mov
std
jo
movsb
mov
rep
js
fucomi
sub
pop
adc
mov
mov
mov
test
jno
shlb
test
sbb
ds
xor
gs
dec
out
add
jne
divb
push
cltd
out
adc
stc
jmp
sbbb
add
cmp
mov
push
stc
jle
loopne
and
mov
fdivl
addr16
movsb
outsl
xor
fdivs
je
les
loop
jbe
enter
mov
cmpsb
les
sahf
push
loope
and
xchg
arpl
sbb
jle
aas
ss
pop
push
movsb
push
jb
sbbb
add
xor
sti
mov
inc
ss
dec
push
add
xchg
mov
jg
stos
js
add
mov
mov
sahf
push
mov
xor
lods
sub
aad
dec
push
jno
imul
fsubs
adc
lahf
pop
sub
xor
dec
loope
clc
mov
imul
xor
or
pop
fcompl
pop
insb
cmpsb
mov
push
loopne
out
jo
sub
call
les
inc
adc
rolb
call
jmp
fstpt
add
fwait
mov
or
add
xchg
cwtl
repnz
test
xchg
movl
stos
jge
das
inc
jmp
inc
sbb
subb
cmp
add
xor
das
js
test
and
push
scas
inc
insb
sub
jmp
test
xor
xchg
aad
or
mov
add
test
mov
push
mov
movsl
js
and
cld
jb
sbb
mov
sbb
push
rorl
imul
jb
pop
mov
xchg
aam
insb
sti
lods
mov
xor
dec
xchg
repnz
push
sahf
mov
hlt
fabs
mov
mov
sbb
sbb
sub
shll
add
pop
jae
stc
sahf
imul
outsl
push
mov
jl
sbb
sub
in
ror
xchg
add
insb
mov
js
jmp
stos
sbb
test
rcrb
jge
adc
push
lahf
out
push
jae
mov
mov
mov
into
pusha
pop
jae
mov
cmp
or
aam
cmpsl
addr16
and
mov
jle
xor
out
cmp
std
dec
inc
pop
out
and
push
and
sbb
les
sub
popf
and
mov
sbb
ret
lods
ret
repz
in
adc
hlt
gs
sahf
jne
or
ja
pop
xor
jnp
stos
mov
jmp
loopne
das
or
lods
inc
iret
sahf
push
mov
cmp
add
jmp
jle
inc
pop
mov
std
movb
fs
std
cltd
mov
push
in
pushf
int
icebp
movsl
into
push
add
push
idivb
sbb
sub
mov
xchg
sub
push
lcall
out
pop
add
xchg
mov
ret
hlt
mov
dec
mov
pop
out
sbb
pop
push
xchg
mov
mov
mov
mov
jecxz
push
cmp
lods
cld
mov
jns
jl
jae
aaa
movsb
hlt
adc
sub
mov
jbe
or
idivb
in
mov
fiaddl
mov
sub
enter
stc
pop
add
add
jp
inc
xchg
rcrl
mov
jge
xor
push
dec
pop
xchg
dec
dec
out
jbe
stos
push
scas
mov
loopne
push
loop
add
mov
and
xchg
hlt
movl
xchg
pop
cmp
rcll
fadds
adc
inc
pop
ja
inc
mov
fs
jp
popf
inc
push
out
stos
jle
push
js
jo
and
xchg
push
push
fbld
ss
jno
fdivrp
pop
pop
pop
in
xchg
mov
cmp
mov
adc
push
stos
jne
stc
sub
inc
mov
mov
dec
jle
scas
lds
mov
jmp
push
pushf
xchg
jbe
ds
sti
mov
frstor
mov
fwait
sti
scas
ret
adc
add
and
dec
fidivrs
and
sub
push
fbstp
test
cmpsb
aam
xchg
pop
dec
add
mov
push
inc
in
filds
xorb
mov
adc
pop
faddl
cs
push
xchg
in
add
pop
jae
mov
cmp
stos
roll
mov
jmp
push
mov
loop
insl
xor
fsts
sarl
int
cmp
xor
cli
mov
test
cmp
cmp
push
add
xchg
sahf
cmc
sbb
push
dec
push
fwait
jbe
imul
dec
popf
xor
jo
out
lcall
add
xor
cwtl
cli
sbb
dec
pop
dec
mov
ret
mov
jp
addr16
add
cmp
jmp
pushf
dec
in
jg
inc
loop
aaa
cmp
push
xchg
pushf
inc
dec
loope
lods
imul
pop
hlt
push
jg
sbb
dec
add
addr16
test
or
cmp
movsb
lahf
jo
dec
sub
xchg
js
dec
jbe
lahf
jnp
out
jo
fsubs
stc
xor
sbb
pop
add
aas
imul
cmp
push
ss
push
sbb
adc
fisubl
jb
incl
mov
xor
mov
adc
mov
lcall
addr16
shlb
add
es
std
adc
sub
jne
ja
sub
xchg
mov
xlat
sbb
mov
mov
jns
jge
or
movsl
jns
cltd
add
fstpt
arpl
cmp
aam
pushf
sub
stos
je
aaa
push
sbb
mov
inc
add
dec
push
popa
loope
in
pop
mov
mov
cmp
into
repz
jb
lcall
push
insl
lods
mov
cs
xor
add
popa
enter
ja
int3
addr16
or
cmp
std
in
test
sbb
sub
pop
dec
jne
sti
xchg
and
cmpsb
xlat
test
lret
lret
sbb
mov
lds
decb
or
dec
sbb
mov
xchg
jo
jmp
mov
rcl
fbstp
adc
std
lods
loope
dec
loopne
cli
cwtl
rolb
ljmp
pop
mov
into
pop
out
push
cmc
sbb
mov
ljmp
cmpsl
xor
pop
xor
push
outsb
jp
xchg
mov
push
ss
jbe
out
dec
fistps
inc
js
imul
mov
flds
xchg
imul
std
inc
or
ss
inc
fdivr
xchg
std
xchg
add
aaa
jbe
cltd
sbb
cwtl
push
out
lods
jns
inc
inc
stos
sbbl
aam
js
cwtl
in
inc
mov
add
cmpsb
xor
xorb
iret
push
xchg
sarb
ret
shlb
adcb
aas
sub
add
jnp
xchg
push
ljmp
jl
out
orb
dec
divps
out
shl
adc
sub
and
rcl
stos
cmpsb
pop
rcll
push
mov
leave
mov
inc
jle
shrl
icebp
insb
filds
ret
arpl
push
pop
xchg
push
pop
jbe
cwtl
dec
movsl
cmp
jp
rcrb
adc
nop
jnp
les
pop
fnsave
inc
loop
repnz
adcl
xor
test
in
sub
call
sti
dec
xlat
jb
cltd
pop
negl
popa
mov
cmp
lea
and
mov
pop
inc
push
xchg
cld
mov
lcall
pusha
and
aam
cmp
sub
test
ds
cmc
pop
dec
or
hlt
cmpb
inc
mov
xor
aaa
test
dec
pop
notl
iret
add
or
cli
adc
push
xorb
sub
fcomps
dec
mov
movb
fwait
aad
ret
lcall
clc
cmp
sbb
xor
subb
mov
rcrl
fstpl
mov
inc
out
inc
daa
cmp
push
dec
adcl
xchg
lret
into
fdivr
div
movsb
cmp
push
loop
push
subb
inc
test
xchg
addb
push
push
and
adc
out
push
push
and
fnsave
clc
ja
movsl
mov
jns
subb
push
inc
pop
les
mov
outsl
add
adc
test
sub
pop
inc
inc
jmp
mov
testl
cmp
insb
lods
and
lock
jbe
insl
sbb
pop
call
xchg
cmp
movsl
mov
cmpps
sti
test
lods
pop
lock
jmp
cli
or
pop
jp
or
dec
pop
add
pop
mov
mov
test
cmp
inc
push
push
jns
cmp
cmpsl
push
pusha
pop
pop
pop
hlt
mov
adc
mov
js
insl
and
xor
hlt
lock
mov
mov
es
push
jg
sbb
inc
movhlps
cli
and
loope
into
ljmp
xor
jmp
push
mov
push
add
jns
jecxz
lock
lea
inc
xchg
inc
test
and
add
fisubrs
adc
icebp
sub
and
pop
fsin
dec
xorl
fcmovnu
out
dec
in
inc
mov
mov
ret
xchg
sbb
lret
cltd
xor
addr16
adc
and
mov
ss
add
xor
out
or
mov
stc
andl
or
and
lods
pushf
pop
pop
scas
mov
adc
inc
and
loop
xor
ficoml
in
popa
imul
cmpsb
ret
sub
mov
fmull
push
cmp
jmp
add
cltd
jo
inc
scas
lods
push
dec
loop
mov
sbb
mov
lahf
cmp
clc
xchg
mov
imul
add
dec
out
inc
push
mov
fadd
bound
cltd
pop
adc
outsb
and
cmp
shrl
pop
inc
inc
out
imul
jbe
lea
out
daa
ljmp
aas
jne
jnp
or
jg
es
popa
icebp
inc
jo
jl
rcll
stc
pop
out
pop
aaa
adc
mov
sbbl
push
in
xchg
stc
lret
scas
mov
push
pop
mov
gs
add
inc
mov
adc
sahf
and
lret
sti
push
sbb
sbb
jl,pn
in
stos
shll
addr16
jnp
gs
cmpsb
xor
xlat
subl
test
mov
out
leave
sbb
dec
or
js
pop
pop
js
or
push
ss
dec
je
fwait
mov
jge
push
pop
xchg
add
ret
ljmp
adc
stos
popf
daa
inc
mov
jne
sbbb
sub
sub
add
pusha
inc
push
ljmp
jno
xchg
and
rorl
outsl
push
sbb
lock
pop
hlt
jb
mov
xchg
inc
xchg
les
stc
mov
add
adc
jg
cmp
sub
mov
jo
stc
add
ljmp
clc
shl
push
pop
gs
js
icebp
lods
and
jns
lds
mov
fcmovnb
insl
cmc
xchg
insb
sbb
ret
insl
stc
adc
outsb
add
or
sub
xchg
fnstcw
fsubrs
das
fcomp
ljmp
lods
ljmp
pushf
addb
and
adcl
pop
mov
mov
pop
mov
sbb
cltd
orl
jmp
jp
shlb
sub
test
test
cmp
or
jo
rol
push
mov
sbb
inc
dec
cmp
in
call
sub
xor
lcall
mov
call
pop
xor
cmp
xchg
xchg
test
xchg
pushf
jmp
pushf
out
lock
or
sbb
mov
adc
aaa
sbb
imul
jle
aad
sub
and
popf
xor
mov
mov
stc
lret
xchg
icebp
daa
sub
pushf
test
mov
mov
mov
loope
jge
sbb
fldt
mov
jle
lret
scas
fiadds
clc
jp
sub
insl
inc
or
lea
sub
in
cmp
rol
leave
es
mov
and
sbb
lcall
pop
gs
cmp
mov
pusha
test
leave
or
dec
mov
jns
es
rol
nop
pop
into
mov
notl
sbbl
jmp
dec
jnp
je
test
lods
popf
pop
inc
test
adc
or
inc
lea
or
and
ljmp
icebp
mov
jbe
shll
insl
fbstp
xor
cwtl
ljmp
int3
in
xchg
add
sbb
sbbl
outsl
bound
nop
out
popf
inc
push
test
mov
in
test
dec
jle
dec
repz
call
push
pop
daa
xorl
fisttps
inc
mov
lret
lea
jns
into
ds
daa
push
fistps
mov
dec
inc
lods
ss
xchg
cmpsb
insb
inc
fstps
adc
add
orb
xorb
xor
adc
mov
sti
pop
mov
incl
mov
cld
xchg
test
dec
inc
mov
cmp
into
add
push
inc
or
sub
stc
cmp
jp
imulb
or
xorb
mov
add
xorb
push
sub
lock
mov
pop
xchg
imul
icebp
popa
fldt
and
mov
inc
sub
bound
push
or
scas
inc
aam
out
sti
mov
scas
add
test
das
sti
movsl
mov
pop
cld
and
imul
push
insb
add
push
test
loopne
movsl
sbb
pushf
xor
mov
sahf
push
fnstcw
mov
or
in
shlb
shl
sbbl
lods
mov
pop
mov
outsl
enter
das
imul
ret
jo
cmp
repz
call
scas
pop
sahf
stos
xchg
es
mov
stc
nop
addr16
push
in
sbb
mov
mov
les
inc
in
mov
imul
or
dec
adc
test
outsl
mov
pushf
mov
loope
push
pop
xor
sahf
sbb
jge
mov
sbb
xor
lret
pop
cmc
adc
push
dec
out
in
jp
call
test
ja
sbb
sbb
or
mov
into
add
subb
sub
jp
lods
and
adc
adc
cltd
mov
faddl
cld
sbb
add
and
test
fwait
push
in
test
inc
mov
push
pop
xchg
pop
cli
xchg
movsb
push
jno
cld
clc
popl
cmpsl
push
fucomp
dec
loop
movsl
mov
mov
test
and
xchg
sarb
dec
loope
bound
mov
sub
dec
mov
shrl
jmp
or
popa
cmp
repnz
pop
xor
mov
int
mov
xchg
dec
fldcw
push
mov
je
dec
bound
cmp
dec
loope
sbb
adc
lock
sar
push
jle
mov
or
lahf
int
test
rol
xchg
or
lret
pusha
add
push
sti
jg
cmp
sub
in
repnz
mov
or
je
sub
stos
pop
imul
jecxz
mov
lcall
fisubl
sub
test
cwtl
adc
xchg
push
mov
and
fldcw
inc
out
xchg
outsl
rorl
lret
outsl
adc
shl
push
xor
aam
mov
inc
repnz
scas
sbb
sbbl
pop
sub
scas
jno
iret
cmp
popa
inc
xchg
sub
rorl
mov
jb
out
ret
jle
fadd
sub
sub
flds
adc
popf
xor
dec
out
ds
aaa
mov
sbb
xchg
cmp
pop
and
fstl
sbb
jne
mov
outsb
mov
mov
and
testl
outsb
outsb
sbb
xor
out
sub
mov
mov
pop
es
push
mov
sub
xor
mov
push
adc
mov
outsl
testl
mov
std
cmp
enter
cmc
pop
scas
sbb
stc
test
inc
fadd
rcrl
addl
adc
filds
pop
dec
dec
push
mov
sbb
in
mul
cmp
inc
fsts
push
lahf
push
fs
xchg
cmp
and
adc
xor
in
xor
popf
lods
scas
int
fadds
lods
push
ljmp
insb
sbb
push
hlt
push
out
add
stos
dec
mov
lods
aam
fsubr
int
adc
xchg
adc
push
sub
xor
movsl
cmp
and
cmpsl
fldcw
xlat
outsl
or
sti
xchg
cmp
jb
ficompl
jge
roll
aaa
das
mov
jg
dec
fxtract
jp
jmp
mov
mov
pop
repnz
mov
mov
add
lret
jp
fnsave
and
jg,pn
adc
ss
popa
pop
pop
and
adc
call
jnp
cld
lret
mov
pop
ficompl
mov
dec
jnp
popf
mov
mov
add
jl
mov
push
inc
into
rcrb
mov
in
and
lods
test
sbb
dec
and
pop
inc
clc
inc
movsl
pop
ds
int
add
xor
loopne
xor
xor
lret
push
sti
xor
orl
test
movsb
pusha
rcrl
mov
les
pop
mov
dec
mov
push
mov
adc
cs
cmp
xchg
sbb
dec
sahf
repnz
in
iret
lcall
jbe
mov
imul
ret
mov
xorps
mov
negb
mov
test
ficompl
mov
adc
mov
clc
cmpsl
cmp
push
mov
xlat
stos
mov
loopne
imul
cmp
test
out
fcoml
xor
mov
imul
sbb
pop
shl
leave
adc
bound
jge
in
imul
ret
adc
sub
inc
xor
je
jo
ret
cmp
cmp
sbb
mov
iret
jge
aam
xchg
pop
stos
fidivrl
or
sub
sub
popf
adc
out
dec
mov
int3
mov
outsl
into
xor
add
push
arpl
cli
or
out
cld
lahf
ror
and
mov
jecxz
jnp
data16
pop
and
mov
pop
fidivs
inc
sub
shl
sbb
sbb
dec
dec
push
or
aam
pop
xor
ljmp
push
aas
outsl
jmp
test
mov
insl
sbb
outsl
loopne
aam
test
in
nop
rclb
inc
repnz
test
lea
shl
xchg
test
pop
shl
movsb
pop
lock
lods
loop
add
xchg
and
dec
cmp
fmull
push
mov
dec
sub
or
xchg
cwtl
repnz
and
xchg
jle
repnz
nop
mov
cltd
cmp
adc
pushf
aam
pusha
stc
add
jge
frstor
sbb
test
sbb
mov
add
jge
jp
rclb
adc
fsubr
cli
out
jnp
jecxz
in
inc
lods
cmc
jg
lds
push
enter
fwait
divl
dec
ds
aaa
in
inc
sbb
or
mov
inc
push
cmp
ljmp
cmp
push
mov
jb
sub
int3
pop
popa
out
cli
push
insl
inc
inc
fdivrs
test
imul
push
out
movsb
enter
lds
xchg
les
outsl
daa
sbb
lahf
mov
insb
out
jmp
or
movsb
mov
push
testb
ds
popa
lods
rcrb
dec
into
pop
outsl
faddp
insl
inc
ja
cmc
sbb
push
ret
jle
or
add
out
xchg
sub
fidivl
pop
xchg
out
xchg
stos
inc
icebp
mov
stc
popf
xor
fdivr
or
dec
mov
hlt
mov
fisubl
xchg
gs
lods
inc
sbb
pop
xor
dec
pop
lock
sbb
sbb
cmp
push
pop
cmpsb
push
jle
rcr
pop
sahf
popf
cli
movsl
cmp
sbb
mov
mov
int
dec
sbb
fdivl
adc
xchg
ficoml
mov
faddl
mov
sub
loopne
shrl
add
pop
sub
mov
pop
stos
test
clc
jmp
scas
ja
aas
jbe
cmp
arpl
fwait
xor
rcrl
ds
jo
stos
inc
push
mov
add
jns
imul
inc
dec
xchg
mov
movsl
aam
sub
lahf
insb
jle
sti
out
xor
sub
and
xchg
push
cmp
cwtl
std
out
cmp
aam
dec
mov
loopne
imul
pushf
inc
push
out
jge
push
and
xlat
cmc
mov
int
dec
outsl
push
in
mov
cmc
inc
jbe
data16
test
xchg
subb
push
fsubrl
and
sbbl
mov
rorb
mov
int
scas
add
xor
add
leave
cmp
pop
cmpsl
xchg
jecxz
jmp
es
adcl
jbe
outsl
jg
int
test
shlb
push
push
push
jb
jg
push
adc
xchg
inc
jp
ds
mov
xchg
cmc
js
add
adc
cs
push
pushf
ficomps
mov
shl
sbb
mov
push
clc
xor
jne
jge
xchg
outsb
shl
mov
loop
outsl
out
xchg
inc
add
call
jns
pop
jo
ficomps
inc
out
adc
pop
popa
std
push
mov
nop
movsl
push
jp
cmp
fidivrl
add
fs
mov
into
cmp
inc
test
pop
and
mov
mov
push
imul
push
and
mov
shll
ds
push
ds
dec
icebp
orb
dec
out
sub
sbb
popf
xlat
shll
bts
mov
add
and
lods
jle
fwait
sub
pushf
sbb
das
pop
outsb
cmp
fldl
mov
out
test
jecxz
leave
xchg
ss
lods
push
sbb
aad
insb
jbe
jle
fucomp
and
adc
mov
xchg
aaa
sub
xchg
jle
testl
ficoms
inc
loopne
cmpsb
ret
inc
or
mov
fmul
enter
mov
orb
mov
ficoml
mov
aas
mov
adc
int
inc
or
es
fcmovbe
cmpsl
sbb
leave
arpl
in
pop
imul
js
mov
or
pop
scas
mov
add
pop
bswap
mov
push
outsl
and
je
push
sub
push
jo
adc
inc
out
add
mov
fadd
jecxz
loop
xchg
and
cwtl
add
cmp
pop
int3
mov
jmp
sbb
fld
cwtl
out
jae
mov
xor
and
mov
push
mov
xchg
mov
and
cmp
xchg
bts
jne
jl
add
sbb
fisubrs
rcrb
shrb
dec
in
dec
popf
pop
insl
xchg
popf
inc
in
rcr
jb
pop
in
roll
or
clc
lock
in
rcrb
mov
fwait
push
repnz
add
cmp
mov
or
adc
int3
int3
sarl
sub
xor
mov
popa
outsl
add
es
scas
sub
mov
roll
adc
fsubrs
lret
push
and
pusha
stos
cs
cmp
pop
popl
rcr
std
js
loope
xor
lahf
jp
dec
lret
mov
inc
pop
orb
test
cwtl
repz
faddl
fsubs
ds
mov
inc
outsb
aad
stos
mov
add
sahf
outsl
int3
fsubrp
ss
sbb
lcall
pop
popf
sub
jo
mov
inc
iret
mov
je
lret
xchg
cmp
xchg
sbb
adc
cmp
mov
jecxz
stc
setle
cmp
in
test
or
xchg
sahf
or
roll
scas
inc
test
jae
cmp
push
xchg
aas
sahf
outsb
inc
adc
cmpsb
lock
les
cmc
nop
ja
fst
pextrw
jo
bnd
popl
filds
or
test
mov
hlt
push
dec
mov
outsb
decb
lods
adc
iret
inc
int
and
sub
stos
xor
ss
pop
inc
lret
cli
push
mov
pop
in
inc
roll
movsb
aam
and
cmp
mov
mov
jbe
ljmp
mov
out
stos
fldenv
les
pop
insl
add
push
inc
pop
fsts
fnstenv
and
lds
test
xchg
aad
mov
js
xchg
add
sub
iret
sub
in
sbb
jge
fwait
mov
inc
cmp
std
xor
add
aas
cltd
scas
adcb
sub
adc
arpl
test
lret
fdivs
call
ret
jmp
push
mov
imul
pop
jge
scas
mov
out
cmc
stos
lock
pop
sbb
adc
jae
je
mov
dec
sub
pop
mov
outsb
xchg
or
pop
push
les
stos
insl
into
sub
fidivrl
pop
int3
aad
push
int3
mov
xchg
xchg
jp
pop
in
test
cmp
mov
xor
adc
mov
push
arpl
pop
jne
adcl
mov
or
sti
shr
or
divl
mov
push
cltd
cmp
pop
mov
imul
jb
jg
pop
in
insl
jo
nop
jnp
jne
dec
in
dec
imul
shr
dec
jp
inc
shl
jmp
or
es
adc
adc
icebp
push
mov
test
xchg
push
aad
scas
add
fldenv
loop
cld
fbstp
mov
iret
adc
in
mov
lods
and
addr16
dec
add
in
mov
aaa
ds
inc
push
add
popa
mov
or
ss
sahf
in
gs
sbbl
mov
mov
std
xor
dec
sub
cmovl
pop
leave
jne
mov
mov
mov
inc
sbb
loopne
popf
jb
outsb
in
movsl
cli
insl
xor
rcll
push
and
lret
fstpl
xor
inc
mov
insl
inc
loop
lods
out
add
dec
mov
iret
imulb
jbe
inc
xor
mov
popa
lret
cmp
shl
imull
pop
insl
popf
fbld
pop
enter
jg
push
and
push
jne
push
cwtl
inc
cmpsl
sbb
mov
xchg
jo
lret
mov
test
dec
ljmp
xor
sahf
adcb
out
xorl
sarl
daa
fxch
popa
push
mov
call
pusha
pop
mov
cmpsb
in
mov
cmp
mov
jnp
mov
imul
pop
movsb
mov
lea
jp
popf
rolb
xchg
leave
sub
out
mov
dec
cmp
in
inc
cmp
jecxz
sbb
dec
mov
jo
cmp
pop
roll
push
lds
push
push
cmp
mov
fwait
sub
mov
xor
jne
test
rcrb
mov
mov
ret
stos
push
adc
ss
push
movsb
push
ljmp
stos
mov
outsl
mov
xchg
rorl
repz
adc
mov
xchg
sub
fldenv
lock
loope
psllq
pop
loopne
cmp
jb
fdivrl
fcoms
lods
push
stc
fs
pop
into
xor
mov
sbb
mov
fistps
mov
jp
sahf
rcr
js
pop
aas
push
test
adc
pop
movsl
sub
notb
imulb
dec
cs
lret
stc
and
cltd
stos
inc
jbe
mov
fldt
push
push
into
dec
fxtract
adc
jmp
lret
popa
out
push
sub
sub
call
xchg
in
jns
fbld
inc
cmpsl
sti
gs
jb
mov
push
jge
lds
xor
fwait
cmp
orb
inc
cwtl
mov
mov
jecxz
sbb
add
adc
popa
mov
js
xchg
ljmp
push
mov
push
or
scas
and
test
rclb
mov
scas
add
mov
fmul
jne
sbb
hlt
movsb
test
push
jmp
mov
in
cmp
ret
icebp
xchg
mov
xchg
pop
shrb
add
jnp
xor
or
pushf
lcall
mov
les
outsl
out
push
dec
into
imul
sub
repnz
sti
or
mov
ja
and
ja
dec
ljmp
xor
ljmp
or
push
mov
sbb
mov
sub
jl
into
hlt
sub
push
pop
jne
add
and
and
std
in
sbb
aad
push
adc
mov
fmuls
and
dec
out
jp
mov
mov
mov
inc
pop
imul
pop
adc
repnz
lret
jns
inc
popa
clc
lock
xchg
inc
mov
push
sub
rcrl
shl
neg
jecxz
sbb
icebp
jno
dec
sarb
cmp
add
mov
fidivrl
xchg
in
add
lret
inc
fisubs
dec
gs
pushf
jno
mull
shl
xchg
mov
mov
scas
insl
mov
fpatan
cmp
sbb
mov
mov
fstpl
add
pop
xchg
call
cmp
jo
cmp
lea
pop
jl
xchg
test
enter
ds
fmuls
fwait
cmp
or
mov
mov
js
scas
sub
inc
fcomip
jecxz
and
push
sbb
rcrl
dec
dec
and
pop
loopne
inc
lret
xchg
lock
rcr
pop
and
mov
sbb
pop
dec
lock
aam
clc
or
sbb
cs
aaa
and
and
clc
fbld
arpl
loopne
dec
jo
ret
pop
xchg
pushf
xchg
imul
sbb
push
xchg
pop
cmp
cmp
xor
les
pop
ret
sbb
xchg
loopne
mov
out
add
fbstp
jmp
mov
xor
and
test
push
faddl
xor
in
or
and
sbb
lret
lds
jnp
out
adc
dec
pop
jmp
popa
cmpsl
inc
jp
ljmp
inc
in
push
and
jle
inc
mov
lahf
adc
test
aam
mov
mov
movsl
jnp
pop
and
pop
imul
inc
lret
or
pop
mov
inc
subb
push
sub
pop
adc
das
cwtl
std
ret
mov
mov
adc
mov
int3
jo
test
ficomps
and
sarb
loope
insb
mov
sub
sub
sbb
dec
and
popf
sub
cld
cmp
mov
cmp
pop
cmpsb
insb
scas
pusha
inc
mov
insl
adc
dec
mov
int
icebp
mov
ret
inc
or
jmp
ds
dec
outsb
sub
mov
sub
test
and
sub
stos
dec
and
scas
mov
lock
push
inc
data16
dec
fiaddl
jmp
in
xor
std
adc
add
mov
inc
xlat
icebp
inc
and
in
mov
fisttpll
stos
inc
jle
mov
mov
test
and
jg
pop
mov
lock
cmp
rcl
test
and
int3
jecxz
push
repnz
xchg
orb
push
mov
inc
int3
test
xchg
scas
vsqrtsd
pop
insl
add
pop
xchg
mov
out
jnp
dec
lods
cmp
jne
or
mov
loope
decl
pop
mov
sub
loope
hlt
push
stos
mov
lods
xchg
jl,pn
sbb
inc
push
push
mov
jne
cmpsl
mov
shll
fnstcw
lcall
lods
jns
jbe
data16
lahf
sti
cmpsb
or
inc
pop
mov
mov
sbb
cs
pop
jo
pop
xor
inc
dec
mov
mov
jne
mov
out
dec
xchg
push
or
mov
loopne
cli
mov
jecxz
int
cmp
aaa
das
sbbl
dec
xchg
orb
jl
sub
push
inc
jle
cmpsl
scas
popa
jbe
push
inc
movsl
pop
daa
insb
adc
jge,pn
mov
pop
iret
cmp
lods
lea
enter
pop
fsubrp
sbb
and
mov
pop
setbe
or
xchg
inc
mov
fisttps
push
aas
into
or
jae
sub
and
test
ljmp
call
fwait
xchg
mov
mov
fidivrl
out
jno
push
ds
test
and
and
das
ret
test
adc
pop
xchg
ss
les
in
andl
je
insb
rep
jge
hlt
outsw
es
jle
cmp
dec
mov
dec
inc
mov
xchg
nop
lods
fsubl
fs
ret
inc
jmp
stos
xor
clc
aas
xchg
push
movsl
sub
mov
sbb
fistl
or
mov
stos
jp
enter
adc
add
pushf
test
scas
or
cmp
adc
jno
fcoms
pushl
sbb
or
les
daa
xchg
sub
je
mov
mov
mov
fistl
or
sub
imul
adc
sub
ss
mov
test
dec
cli
jge
cmp
aam
xor
aaa
adcl
pop
dec
add
mov
mov
mov
or
loop
push
adc
mov
jae
pop
adc
mov
in
xchg
sub
aad
cltd
pop
imul
adc
jns
jmp
jns
imull
mov
inc
mov
mov
pop
notb
pop
in
adc
adcl
and
cmpsl
mov
add
lods
mov
push
dec
lret
add
add
popf
xor
int3
lock
ja
mov
neg
jg
jmp
dec
fwait
push
inc
ret
lods
sub
pop
cmp
sbbl
inc
add
jnp
addr16
push
movsb
out
or
and
iret
mov
xor
xor
movsl
outsb
jbe
sub
push
hlt
pop
xor
jno
xor
jmp
aas
push
test
into
or
xchg
jl
enter
cmp
adc
faddl
pop
mov
mov
jo
xchg
cmp
jbe
sarb
sub
sub
cmp
push
pop
lahf
das
popf
js
aam
popa
push
loope
cmp
inc
jae
mov
mov
stos
stc
push
inc
sub
sbbl
xlat
cmp
das
les
pop
xcrypt-ecb
cmpsl
mov
sbb
sahf
stos
push
and
psrlw
popf
mov
or
mov
es
xor
ds
dec
loopne
push
rorl
lock
inc
sbb
or
or
adc
sub
cmp
jle
int
pop
mov
xor
mov
ret
ret
jnp
or
fwait
pop
lcall
jp
sahf
and
push
fstpl
dec
pop
in
imul
notl
lcall
into
fildll
fs
pusha
sbbb
ss
cmp
xchg
adc
xchg
popf
inc
inc
mov
rol
pop
loope
sbb
vpsllw
sub
mov
cs
xchg
mov
cmpsb
bound
pop
js
jecxz
es
jbe
adc
pop
dec
pop
in
jl
rol
cmpsl
retw
dec
cwtl
add
or
fsubrl
scas
pop
std
and
adc
sbb
cld
cld
outsb
jnp
jne
xchg
pushf
cmc
sbbb
dec
or
dec
push
loop
cmp
jp
inc
lock
mov
add
push
cmp
jnp
enter
lret
mov
adc
pop
test
or
sbb
adc
stos
inc
fdivs
pop
je
lds
pop
addr16
ret
int
sub
scas
add
in
dec
fcmove
push
out
add
std
jb
and
pop
loopne
push
pop
insl
xchg
mov
and
mov
mov
adcb
jbe
icebp
mov
fdivrl
pop
mov
mov
lahf
jb
daa
cmp
xor
shl
jns
scas
inc
push
xlat
pop
icebp
ljmp
push
add
test
cmp
mov
xchg
cs
mov
mov
mov
and
mov
dec
cmp
lret
test
ret
cmpsb
inc
leave
popa
ja
sub
loopne
fisubrl
mov
jno
inc
aam
cmp
adc
lret
pop
pop
xchg
pop
pop
push
nop
or
stos
es
xchg
sub
push
loop
data16
and
xchg
sbb
incb
adc
dec
dec
mov
sahf
jne
fbld
popf
cld
popa
lock
adcb
dec
ss
inc
adc
adc
jl
xsha1
cmpsb
lea
movsb
jnp
push
push
aaa
out
push
mov
out
xchg
test
xchg
sahf
clc
lcall
insb
fs
jo
ljmp
enter
sub
mov
out
hlt
cmpsb
or
rcrb
add
xor
inc
pop
or
mov
add
mov
xchg
outsb
jmp
shlb
sahf
mov
push
and
or
push
stos
sub
inc
data16
or
cmp
adc
or
in
dec
or
sub
jp
cltd
add
into
sub
adc
xchg
mov
ret
dec
push
adc
and
or
xor
xor
in
mov
push
fcompl
ret
mov
aam
cmp
clc
es
mov
cmp
jne
clc
jecxz
les
sbb
testl
xchg
js
in
cmp
mov
push
adc
dec
ret
mov
cmc
jo
repnz
dec
lret
int3
mov
pushl
xlat
inc
sbb
mov
jbe
int3
xorl
das
out
dec
add
int3
out
ja
mov
sbb
sbb
inc
and
lods
and
shrb
mov
add
idivb
in
jp
cli
fwait
or
flds
test
addr16
fildl
outsb
mov
push
insl
mov
aaa
enter
repz
mov
cmp
and
sub
and
icebp
fsub
xchg
scas
pop
lret
jnp
adc
orb
xchg
adc
dec
inc
dec
aad
jnp
addl
int3
mov
lds
js
mov
popf
dec
in
inc
mov
lret
pop
push
lcall
xor
popa
xor
sbb
cmp
imul
push
fnsave
add
sub
jmp
jns
popf
inc
jle
mov
fimuls
and
sub
mov
stos
loop
pop
jl
add
out
mov
les
loope
std
adc
sub
sbb
lret
sub
xor
outsl
hlt
xchg
stos
aad
imul
sub
mov
fidivrl
ret
pop
fsubrl
xor
mov
repz
push
aas
cs
pop
or
inc
inc
cmp
xchg
sub
mov
daa
sarb
fstps
testb
pop
mov
pop
data16
jecxz
out
pop
adc
repnz
mov
stos
lock
dec
in
mov
cwtl
mov
dec
adc
or
mov
cltd
pmulhuw
push
jge
or
ret
sbb
jp
insb
mov
mov
dec
mov
sbb
mov
cmp
mov
test
mov
jo
adc
pop
rcll
adc
inc
push
leave
mov
sahf
mov
or
jns
sahf
je
iret
lods
or
clc
in
jo
jmp
xorl
mov
out
je
or
fadd
mov
jmp
sti
adc
icebp
mov
ljmp
mov
mov
push
sub
pop
in
cmp
sahf
aad
mov
mov
adc
shl
sbb
xchg
arpl
adc
std
lods
sahf
gs
push
and
cld
sbb
leave
mov
test
xor
mov
jge
leave
sbb
lea
push
mov
dec
shl
cmp
scas
sbb
or
imul
or
sub
fstpt
pop
fwait
test
jge
call
in
dec
xchg
aaa
mov
or
jbe
rcl
mov
fidivrl
cmp
fsubrs
pop
int3
ret
xchg
aaa
mov
xor
sub
pop
fs
inc
xchg
sub
fiadds
sub
or
inc
lea
sub
add
jno
xchg
ficomps
in
push
push
pop
xchg
xchg
add
jb
stos
in
pop
repz
fstpt
dec
jae
sbb
adc
fcomps
mov
stos
in
fcoms
repz
xor
adc
lock
andnps
pop
notb
mov
push
cli
pop
aas
dec
dec
mov
arpl
xchg
inc
pop
in
jle
sbb
in
test
cmpsl
sub
into
and
hlt
fbstp
scas
out
sub
loopne
push
imulb
movsl
xchg
aam
xor
inc
ret
xchg
mov
ret
hlt
and
xchg
mov
adc
inc
adc
mov
jb
push
or
xorb
xchg
insb
mov
xor
or
inc
nop
sub
mov
pop
lret
jge
in
fldcw
pop
fsubrp
adc
mov
xor
push
cmp
dec
popa
sti
cmp
inc
dec
mov
xchg
jl
aad
jne
popa
in
mull
mov
paddusb
xchg
xor
iret
inc
inc
stc
fiadds
aas
add
jge
lcall
ljmp
push
inc
sahf
or
mov
jg
push
mov
jns
inc
jmp
movsl
rol
push
insb
pusha
mov
sub
pushf
or
out
call
loope
and
mov
jo
js
fsubl
ds
in
loopne
sub
ss
rorl
mov
gs
mov
xchg
add
outsb
push
ljmp
out
sbb
mov
and
push
sahf
je
cli
fisubrl
add
xor
jg
call
jl
test
jb
dec
loopne
call
icebp
int3
or
and
push
sub
add
or
sub
stos
incl
lock
jle
push
push
push
scas
pop
cmp
insl
scas
dec
mov
and
out
ficomps
shlb
mov
pop
test
sbb
lret
vmptrst
addr16
movsb
leave
loope
pop
pop
sub
xchg
sub
pop
negl
push
fidivl
mov
fsub
stos
xchg
inc
mov
jg
loope
repnz
int
push
in
loope
dec
loopne
add
daa
xchg
hlt
mov
jge
cltd
sbb
dec
cli
jb
mov
cmp
pusha
push
int
outsb
sbbl
cmp
in
cmp
subl
push
dec
rcll
lods
mov
cmp
pop
fnstenv
or
jl
jp
sub
cli
mov
sub
orps
inc
xor
icebp
pushw
loop
ret
subl
pushf
mov
sbb
pop
lahf
data16
jb
repnz
xchg
xchg
imul
xor
xor
cltd
jmp
int
sbbl
clc
xchg
sahf
jp
sbb
addr16
loop
push
je
mov
cmpb
ret
outsb
mov
push
mov
stos
je
xlat
and
xchg
jnp
fwait
dec
push
xchg
push
outsl
lds
inc
int3
addr16
push
sbb
sbb
and
and
insb
xchg
inc
stos
stos
icebp
mov
xor
test
leave
mov
pusha
xor
mov
lea
mov
and
mov
jae
rorb
add
stc
nop
xor
aam
dec
xlat
add
or
repnz
lret
adc
push
das
or
jne
xchg
movsb
or
add
pushf
mov
mov
and
aaa
int
sub
mov
rclb
fcomip
aas
fldl
push
popa
add
jle
inc
fistpll
adc
adc
or
adc
jb
stc
xor
push
scas
aam
sbb
adc
inc
ret
test
andb
push
sub
sbb
js
mov
repz
cmp
jns
mov
xor
sub
mov
leave
dec
jecxz
daa
mov
push
jne
push
bnd
inc
or
ljmp
push
popa
in
shl
sbb
jge
jbe
jmp
aaa
cmp
pop
sbb
aas
add
out
ds
fucom
aaa
pusha
cmp
xor
leave
gs
addr16
test
mov
push
mov
xor
xlat
mov
mov
mov
call
or
jmp
jmp
pop
push
in
jo
jno
cli
xchg
pop
add
jp
adc
jle
mov
lods
repz
test
loopne
jp
test
js
jecxz
imul
mov
adc
fnsave
test
dec
imul
dec
mov
jge
xor
sub
push
cs
aas
dec
push
out
loop
dec
push
mov
sbb
addr16
xchg
jbe
std
in
xchg
pop
popa
and
jbe
movsl
lea
adc
imul
insl
xor
lret
popa
adc
cs
stc
add
and
or
mov
test
fnstenv
push
movsl
cmc
add
mov
mov
cwtl
nop
lods
ljmp
and
loop
mov
vsqrtss
xchg
iret
cmp
enter
cmc
ficoml
lret
xlat
inc
sarb
rorb
lods
mov
fnsave
jb
mov
mov
outsl
shlb
imul
testb
shll
stos
mov
add
sti
fisubl
mov
stos
ljmp
call
cmpsl
jo
test
les
cmpsl
es
push
into
fisttpll
lds
mov
cmp
inc
xlat
loop
jno
xchg
dec
jecxz
jle
negb
xchg
sbb
and
xor
sub
push
or
xchg
xor
test
stc
jecxz
cs
int3
jo
xor
xchg
xor
adc
pusha
aas
pop
imul
cld
decb
ss
adc
sub
aam
es
or
xlat
mov
js
push
mov
in
les
dec
bound
push
mov
std
ljmp
pop
cld
xchg
jecxz
mov
inc
push
data16
adcb
lea
out
pop
xor
mov
lea
pop
xchg
pop
and
mov
ja
jb
push
cwtl
or
xor
lcall
mov
mov
and
dec
sti
xchg
xorb
sub
jnp
and
out
mov
ret
pop
dec
dec
mov
nop
push
out
pop
or
mov
leave
mov
mov
mov
das
out
push
lcall
and
dec
mov
movsl
ss
lea
ja
mov
and
sub
or
insl
cmpb
fwait
aas
das
mov
cltd
adc
mov
loop
aas
adc
das
dec
push
push
fcompl
pop
out
push
xchg
xor
mov
ret
sbb
push
ds
push
das
or
in
mov
aas
lret
jae
aad
enter
push
push
dec
sub
xchg
icebp
sub
inc
hlt
xchg
addr16
mov
adc
out
xchg
sbb
repnz
mov
js
push
or
mov
mov
cmp
mov
scas
mov
cmp
daa
pop
cmc
pop
roll
sub
dec
dec
sub
adc
aad
xchg
add
add
hlt
xchg
es
negl
bound
in
mov
ret
popf
fs
xchg
nop
push
rolb
std
lea
fmul
or
xor
mov
shl
ffree
data16
push
xor
pop
pop
aam
imul
pop
repz
dec
dec
pcmpeqw
xor
fildl
pop
mov
out
call
iret
sahf
pcmpeqb
mov
adc
mov
iret
data16
in
cmp
sbb
mov
sub
jb
lock
cs
mov
stos
loop
pop
and
pop
cmp
dec
cmp
jle
es
mov
sbb
mov
adc
inc
push
hlt
push
push
test
sti
pop
xor
fsubs
sbb
call
push
add
in
js
insl
add
mov
jg
cmp
imul
icebp
shrl
loope
pop
pushf
xchg
xor
push
or
mov
rcll
lods
sahf
cs
into
test
in
lods
push
jne,pn
aas
and
mov
pusha
loope,pt
jle
mov
mov
dec
dec
stc
push
repnz
and
push
addr16
call
aas
xchg
jo
pop
pushf
xchg
or
arpl
jmp
inc
out
add
outsb
push
sub
cmp
popa
mov
loop
sti
sub
pop
jno
mov
into
jns
add
in
mov
ss
mov
and
mov
orb
movsb
fwait
cs
scas
mov
loop
mov
inc
add
xor
arpl
shrl
xchg
leave
aad
stos
push
add
jne
and
inc
mov
push
mov
cmp
sbb
outsb
mov
push
std
cwtl
fs
vandps
mov
mov
push
xlat
jmp
das
cwtl
jl
ja
mov
test
add
rorb
jecxz
mov
sub
mov
rcrb
ds
daa
cmp
xchg
jle
stos
sti
push
enter
addr16
ret
outsl
dec
out
ds
rorb
sbb
sub
insl
xor
mov
cmp
mov
cwtl
pop
in
mov
add
mov
cli
mull
sub
add
imulb
dec
xchg
fwait
inc
js
addl
ds
sub
inc
dec
pop
pop
pop
testb
xlat
fcomps
mov
jmp
idivl
push
imul
movsl
or
nop
push
mov
call
push
sbb
loopne
lret
aas
adc
or
aad
lahf
prefetcht1
dec
fdiv
lods
shl
mov
push
out
ret
arpl
stos
adc
mov
adc
mov
pop
mov
sbb
add
pop
push
push
push
dec
ljmp
pop
pop
stc
callw
call
lock
push
push
out
pop
in
aaa
stc
in
loopne
or
sub
add
cltd
pop
lcall
ret
dec
shrb
ret
pop
mov
and
fwait
in
in
daa
stos
repz
push
mov
push
jne
int3
arpl
jmp
sbb
loope
pop
xlat
pop
sbb
adcl
push
lods
jb
and
pop
jae
xor
sti
push
mov
arpl
sub
icebp
stos
xchg
into
das
repz
inc
mov
push
in
icebp
int3
cltd
xor
adc
lret
mov
lret
mov
mov
xchg
cmp
movsb
aaa
test
orb
mov
rcr
push
sbb
js
and
clc
adc
cmp
inc
and
adc
ret
or
mov
leave
jp
xor
ret
pop
adc
cmp
popa
xchg
mov
sahf
testl
mov
dec
ret
jo
cltd
leave
dec
test
jl
adc
mov
pop
sti
mov
fiaddl
xchg
out
shr
neg
xor
xchg
mov
dec
add
push
cmpsl
lea
add
sub
mov
les
addb
js
sahf
jne
test
lcall
in
pop
data16
fs
scas
shrb
imul
pop
into
imul
jno
dec
lahf
xchg
mov
add
jp
imul
ss
cmp
or
xchg
mov
dec
repz
call
xchg
test
sti
test
mov
iret
aad
fisttpll
adc
pop
aam
push
aam
add
pop
inc
gs
or
jb
mov
scas
out
loopne
ret
ss
and
ljmp
dec
addl
pusha
inc
movsl
mov
fwait
mov
push
stc
sub
ljmp
ss
mov
inc
xor
xor
jo
test
and
cltd
fsubrs
nop
mov
sbb
testl
add
and
push
repnz
das
insb
nop
pop
sahf
push
fwait
cmpsl
cmp
xchg
scas
dec
aam
test
outsb
pop
je
sbb
dec
mov
adc
lcall
push
lods
sub
imul
xor
xchg
cs
mov
les
mov
jne
cs
or
shl
pop
mov
inc
mov
xchg
adc
rorl
in
jmp
inc
lods
lret
push
call
cltd
mov
push
popf
add
and
stos
ja
cmpsl
test
dec
out
loope
cmp
ljmp
aam
mov
sahf
icebp
push
xor
shrl
mov
push
in
int
in
repnz
cmp
pushl
pop
lods
add
nopl
and
jbe
mov
es
lds
cmpsl
clc
xchg
arpl
xchg
mov
pop
call
and
push
sbb
movsl
lea
movsb
pop
and
gs
push
inc
dec
mov
test
mov
insl
push
sahf
movsb
and
xchg
cmp
xchg
aaa
adc
mov
ljmp
push
cmpl
mov
bound
pusha
test
lcall
push
rcrl
sahf
das
and
push
mov
mov
mov
in
sub
roll
repnz
jge
lock
add
pop
mov
and
mov
add
cmc
cmp
adc
in
xor
xchg
fnstenv
cmp
addr16
jle
cld
cvtps2pd
aas
lret
pop
popf
push
cmpsl
mov
lret
xor
pop
push
lcall
fs
inc
fdivr
xchg
divl
arpl
shrb
je
cmpsb
xchg
pop
push
repz
call
or
mov
pusha
sahf
sub
jbe
xor
or
subb
xchg
insl
mov
or
inc
jp
stc
and
dec
dec
fiaddl
adc
dec
adc
cmp
cmp
pop
insl
divl
sbb
out
lahf
ss
pop
push
mov
repnz
cmp
cmpsl
mov
xchg
mov
les
nop
adc
jp
push
test
scas
fninit
add
arpl
in
and
sub
sbb
dec
dec
sub
cltd
adc
push
and
xor
or
adc
lahf
leave
jle
lea
test
pop
sbb
mov
xor
dec
push
inc
xchg
scas
shrl
mov
add
sbb
loopne
xchg
dec
lahf
push
push
jno
add
faddl
fsubs
incb
mov
leave
mov
xchg
sub
pop
mov
mov
lahf
mov
dec
out
enter
in
jl
xsha1
cmpsb
lea
and
std
fsubrs
jae
push
icebp
into
fcoms
test
sub
inc
lods
call
pop
add
adc
lods
or
mov
test
mov
push
mov
iret
jg
imul
test
push
fs
ljmp
sbb
loop
in
rcr
mov
inc
jmp
in
xorl
stos
sbb
ds
ret
and
pop
mov
xchg
mov
adc
movsl
pop
iret
xor
daa
int3
outsl
dec
mov
fldcw
movsl
dec
mul
arpl
aad
insl
jge
inc
insb
sbb
dec
adc
push
ljmp
pushf
cli
pushf
mov
push
fists
mov
data16
rcll
inc
and
es
lods
pop
ss
xor
in
mov
sahf
push
int3
and
lcall
xor
dec
scas
inc
jp
imull
adc
gs
insl
xchg
and
jae
push
inc
sbb
mov
push
xchg
inc
inc
cmp
jg
xchg
pop
fwait
push
aam
loopne
pop
imul
lcall
mov
ljmp
cli
xchg
cs
pop
bnd
loop
loop
pop
outsl
lea
sbb
popf
je
xchg
repnz
lcall
mov
int
jno
and
out
stos
out
mov
adc
jmp
shll
test
xchg
adc
enter
outsb
scas
cmpsb
cmp
push
leave
les
shlb
sub
sub
push
inc
push
movsb
outsl
iret
jp
lods
in
rorb
push
mov
andb
outsb
xchg
jbe
mov
xchg
popf
jns
push
jecxz
pop
mov
dec
sbb
push
lret
adc
lock
cltd
add
cmc
ds
mov
in
divb
jo
or
cltd
mov
adc
repz
or
sbb
push
sub
std
pusha
or
pop
add
mov
cmpl
lds
cmpsb
rcrl
mov
lahf
push
push
loope
jle
into
iret
test
dec
adc
jne
data16
sahf
addr16
push
mov
pop
call
dec
notb
ficomps
negb
gs
xor
psrlw
pxor
scas
push
ja
jmp
sahf
dec
jbe
rcl
enter
hlt
pop
lds
shrl
add
idivl
jns
test
pop
lahf
or
je
xchg
lods
cmp
add
push
sub
sbb
mov
fnstsw
push
jns
push
lods
mov
and
or
repnz
jbe
sub
sahf
xchg
mov
idiv
lcall
pusha
push
in
pop
test
mov
or
jae
fucomi
pop
cmp
jae
lahf
jb
lods
add
ds
mov
lret
pop
fstpl
das
lret
loope
test
jno
pop
std
mov
outsl
xchg
sbb
mov
ret
jbe
push
lods
mov
dec
lods
mov
iret
xor
shrl
sti
in
fwait
sub
shrl
int3
sti
mov
sbb
and
inc
dec
mov
xor
sub
xor
push
cmpsl
sbb
pop
jnp
popf
orb
xchg
ret
jnp
push
test
dec
pop
xor
popa
pop
jne
mov
std
andb
out
mov
or
push
jae
jnp
scas
cmp
xor
xor
sbb
jae
xchg
es
pusha
repz
xor
loope
or
mov
mov
test
jle
jmp
or
sbb
mov
fldenv
pop
imul
das
rcr
sbb
cld
movsb
jg
pop
mulb
rorl
repz
jp
pop
and
dec
pop
repnz
push
jp
cmp
pushf
jge
pop
pop
jmp
repz
shrb
fwait
jb
in
dec
cmc
aam
stc
shlb
push
cmp
fildll
pop
insb
inc
pop
mov
int
fdiv
mov
popa
and
test
aad
orl
shrl
orb
pusha
pop
dec
mov
xor
sub
xor
xlat
pop
jns
mov
scas
xchg
sahf
nop
shll
adc
shlb
lret
jnp
paddsb
cwtl
insl
sub
xchg
jl
cwtl
xor
cmp
xor
jg
mov
xor
inc
and
mov
cmp
fnstsw
mov
incb
xor
sub
or
mov
faddl
push
cs
aas
les
loop
mov
push
or
pop
int3
lret
push
pushf
push
cltd
sti
mov
clc
sahf
add
cltd
test
mov
inc
push
fsubs
sub
pop
mov
pop
cmpsb
ret
fs
add
sub
das
or
bound
mov
cmp
frstor
frstor
add
mov
cli
ljmp
icebp
je
scas
mov
in
out
test
jo
lret
cs
cld
cltd
icebp
xor
lcall
add
sbb
rorl
fdivrs
jl
sub
lods
ljmp
dec
adc
loope
and
jo
inc
movsl
mov
xlat
push
cli
push
loopne
cli
cmp
enter
mov
xor
mov
sub
hlt
out
mov
stos
incl
adc
daa
jle
pop
in
dec
in
int
cmp
imul
mov
icebp
insb
bnd
fildll
mov
mov
dec
out
into
loopne
jbe
data16
mov
xchg
mov
fdiv
lea
dec
sbb
xchg
pop
adc
cs
scas
fwait
sub
es
inc
xor
loop
nop
subl
dec
or
cwtl
outsb
aad
push
nop
sbb
mov
arpl
push
push
test
sub
popf
into
pop
insb
fidivl
cmp
aad
add
sub
mov
stc
stc
lods
leave
pop
cmp
mov
shlb
push
popf
stos
jb
and
test
sub
addr16
mov
aaa
add
jno
mov
in
inc
shll
pop
scas
jmp
cld
popf
mov
cmpsb
int
cmpsl
arpl
loop
cltd
ljmp
outsl
popa
enter
push
sbbb
adc
iret
arpl
xchg
pop
mov
pusha
mov
cmp
sbb
mov
jae
push
mov
rorb
adc
dec
mov
xlat
mov
xchg
loope
imul
stos
xlat
xchg
imul
ret
push
movsl
and
fwait
call
int
mov
lock
iret
fcompl
test
mov
popf
arpl
in
sarb
pop
push
insl
add
outsb
imul
in
adc
add
addr16
mov
jg
or
out
das
cmp
or
or
lahf
add
push
ret
pop
mov
repnz
mov
lds
add
std
push
add
xor
fs
test
mov
loop
insb
pop
pusha
aad
movsl
enter
pop
repnz
addr16
xchg
cmp
xchg
pop
movsb
sub
out
inc
pop
movsb
jb
imul
jecxz
add
jp
jmp
dec
das
dec
add
mov
mov
push
je
sbb
movsl
jo
xlat
dec
out
push
insl
jbe
fistpll
arpl
dec
mov
jg
xlat
inc
movsb
sbb
std
dec
stos
jns
aam
int
dec
add
xchg
xor
in
stos
push
testl
lods
loopne
sbb
mov
xchg
cmpsl
adc
sahf
xor
daa
popa
mov
mov
andb
aas
bound
aad
pop
mov
bound
mov
loopne
scas
fnsave
out
vgetexppd
popa
cltd
test
adc
enter
xor
inc
test
vcvtss2si
fildl
sarb
es
mov
xor
in
sub
sbb
dec
xor
jle
xchg
nop
add
cltd
xor
sbb
aas
les
daa
stos
js
jmp
jp
mov
clc
fwait
cmpsb
in
std
pop
mov
sbb
inc
sbb
into
lock
mov
lret
and
and
rcrl
enter
fisttps
xchg
cmp
repz
es
xchg
ds
lods
inc
das
rcrb
mov
xchg
mov
xchg
adc
xlat
jmp
mov
cmpsb
xchg
int
repnz
test
cmp
jl
cmp
aam
aas
xchg
dec
in
push
movsl
addr16
gs
mov
aam
mov
push
and
adc
mov
xchg
and
xor
in
orl
jle
rol
test
nopl
lds
adc
decb
stos
mov
sbb
xchg
aad
mov
movsb
mov
pop
cmp
jg
inc
in
loope
mov
lods
loope
add
aam
xor
pop
bound
icebp
mov
mov
rep
leave
sahf
or
fdiv
sahf
lock
inc
push
mov
or
pop
hlt
jno
movsl
cmp
xchg
and
xchg
adc
lret
xor
and
xchg
fbstp
inc
movsl
sbb
push
xchg
mov
jl
xlat
mov
mov
lcall
in
in
fwait
inc
fcmovnbe
mov
sub
xor
les
sahf
and
push
addr16
inc
mov
stos
inc
fcoml
cli
adc
cmp
add
and
clc
test
or
je
movsl
xor
insb
mov
loopne
inc
mov
mov
aaa
and
sbb
lret
loop
shrl
repnz
jge
xchg
jb
sahf
sbbl
add
mov
sbb
xchg
outsb
add
adcb
cmp
out
or
fcoms
test
scas
jno
subb
dec
xchg
mov
mov
jge
cmpsl
push
negb
aad
shrl
adc
les
xor
cltd
loope
adc
mov
imul
xor
pop
pop
lahf
ss
sub
je
nop
div
scas
pusha
loopne
sarl
dec
xchg
rolb
xchg
ja
inc
nop
dec
ret
jle
ds
push
movsb
in
jle
outsb
iret
push
daa
add
pop
cmpsb
nop
xlat
data16
jmp
mov
xlat
jmp
lahf
ret
shlb
mov
in
sbb
pop
das
mov
ss
inc
lods
xor
loop
push
mov
js
out
push
mov
dec
xchg
pop
mov
push
lahf
mov
mov
jg
std
cmp
adc
lds
add
or
loopne
mov
pop
add
mov
push
addr16
fsubrp
in
pop
cmp
leave
int
jae
icebp
test
test
pushf
xlat
test
clc
jg
cwtl
jecxz
lret
int3
xlat
jo
mov
or
adc
out
or
and
inc
mov
dec
dec
loope
cmp
popa
add
pop
push
cmc
pop
and
cmpsb
stc
test
xchg
and
mov
fdivs
mov
subl
and
pop
loop
shll
push
bound
adc
cltd
rcll
and
mov
test
mov
and
shlb
cmp
push
sbb
enter
dec
jb
jp
int3
dec
inc
fs
cmp
insl
pop
loopne
xor
and
scas
daa
mov
sub
decb
inc
mov
mov
pop
cmp
inc
push
pop
push
or
shl
pop
adc
push
cmp
outsl
inc
sbbb
sub
ss
xchg
int3
arpl
pop
mov
and
jnp
rolb
ljmp
popa
js
shlb
and
cmpsb
cmp
add
cs
xchg
fs
sbb
pop
repnz
mov
push
push
cli
push
getsec
test
mov
sbb
arpl
movsl
inc
or
in
mov
mov
shl
or
arpl
or
xchg
jmp
and
ds
scas
cmp
in
push
mov
ja
xchg
adc
test
dec
loope
xlat
pop
out
inc
lret
cmp
jne
lret
imul
test
lret
cmpsb
pop
sarl
xchg
daa
sub
scas
inc
icebp
jge
mov
mov
mov
cmp
inc
cwtl
xor
xchg
jge
jmp
aaa
loop
out
stc
in
xor
shl
stos
add
ds
dec
stos
fcmovne
and
data16
sub
mov
jnp
shld
dec
sub
imul
addr16
ja
mov
mov
cltd
or
jnp
xor
je
shll
cmp
inc
inc
add
inc
gs
xor
cmp
or
add
xor
aad
and
rcll
cmp
jmp
sbb
lods
orl
loop
out
fisttpl
xchg
add
jecxz
add
repnz
jmp
sbb
sar
jmp
cltd
jmp
loop
push
ret
les
pop
mov
adc
add
jb
das
lock
lea
sbbl
mov
xchg
pushf
push
negb
sarl
push
add
jbe
icebp
mov
arpl
rcr
lret
movsl
cmc
xor
es
and
je
call
in
or
dec
cmp
mov
daa
jo
push
cmc
cmp
push
mov
mov
movsb
mov
pop
push
in
inc
inc
and
cmp
arpl
outsl
insl
stc
and
iret
mov
and
rorb
adc
mov
sub
and
mov
push
and
adc
mov
inc
imul
push
adc
dec
inc
inc
lods
xchg
push
pusha
lcall
jecxz
arpl
inc
hlt
popl
sbb
jmp
outsl
bound
jle
dec
mov
push
scas
neg
sahf
scas
push
popf
into
loop
xchg
pop
js
in
xchg
lods
sbb
mov
push
stos
lret
xchg
mov
adc
outsl
and
lahf
stos
push
pop
cli
or
pop
scas
int3
ljmp
loopne
push
lods
jmp
mov
es
pop
scas
mov
push
jo
lds
cmc
jns
jmp
popa
mov
mov
mov
sbb
cs
xor
mov
sub
mov
jp
pop
dec
inc
pop
add
jns
into
mov
imul
dec
lods
mov
stos
in
fwait
loope
cmpsb
int3
inc
xor
sub
cmp
pop
shlb
jnp
roll
cmpb
in
movsb
nop
adc
push
int3
xlat
jp
cwtl
sub
push
ljmp
call
mov
dec
stos
inc
stc
cmp
xor
test
inc
pushf
icebp
icebp
stc
cld
xchg
sub
jns
sahf
popf
stc
xor
lea
ret
dec
call
or
mov
outsb
push
in
jmp
loop
cmc
sbb
std
jo
mov
loope
iret
sbb
imul
ret
and
clc
arpl
or
push
and
mov
push
xor
mov
push
into
or
cmp
ret
arpl
mov
frstor
push
pop
push
jo
aas
fwait
cmpsl
push
insl
jb
scas
stc
andb
cld
int
xor
mov
xchg
sbb
xor
in
sub
popf
stc
inc
mov
popf
imul
push
mov
rcrl
jecxz
leave
sahf
movsb
add
std
cmp
imul
popf
dec
jg
add
push
aaa
popa
pop
mov
push
pusha
cmpb
xchg
mov
adcl
dec
mov
mov
test
mov
adc
add
adc
jae
lret
sub
addr16
or
cld
dec
push
insl
add
adc
jb
and
icebp
xchg
xlat
cmc
dec
les
add
sub
xchg
shrl
mov
ja
dec
inc
std
gs
push
add
insl
testb
test
imul
mov
ljmp
adc
pushf
decl
sbb
stc
jbe
push
sbb
shrb
arpl
push
fwait
scas
mov
cli
shrl
js
or
ret
lds
mov
push
mov
stos
and
push
fidivrs
nop
mov
mov
cwtl
out
pop
jmp
sbb
xchg
sti
andb
mov
ret
pop
mov
fwait
cmc
adc
pop
jno
add
fidivs
pop
mov
cmp
ja
cwtl
lods
es
xor
push
in
test
inc
testl
push
out
scas
ficoml
push
adc
fiadds
js
std
push
arpl
and
and
loopne
jno
dec
in
cmp
loop
cmc
fsubrs
mov
imul
ds
add
nop
mov
pop
xor
loopne
push
mov
rcr
jo
arpl
xchg
cmp
pop
cmc
fidivrl
jns
push
test
mov
lcall
mov
cmpsl
and
jle
push
ret
jl
rclb
mov
ss
frstor
ss
push
faddl
and
xchg
xchg
mov
lods
jg
xor
aad
inc
adc
sti
xchg
jo
push
dec
call
leave
sub
xchg
and
xor
pop
fwait
scas
push
sub
mov
sbb
rclb
pop
pop
je
inc
lods
mov
popa
jno
jp
out
sbb
cld
roll
mov
mov
lret
mov
inc
out
jb
loope
jecxz
mov
aam
cmp
jmp
mov
js
add
add
push
mov
std
pop
xchg
sahf
add
jae
pop
sbb
push
loopne
jbe
daa
add
cmpb
sbb
inc
popf
movsb
add
inc
fucom
es
sbb
sbb
pop
pop
adcb
hlt
push
fisttpl
sub
insl
sub
push
pop
data16
notb
sti
pop
ds
bound
push
sti
mov
aam
xchg
cmp
lret
cld
les
sub
cwtl
push
popf
leave
pop
scas
mov
pop
push
jg
sbb
add
ret
popf
xor
inc
jle
addr16
mov
lods
in
push
sub
insb
in
inc
test
repz
addr16
adc
sti
bound
inc
and
les
into
push
loop
and
xor
fcmovnbe
jnp
jno
xchg
push
out
push
mov
jge
add
xchg
ret
outsb
mov
sbb
fld
or
xor
pop
xchg
arpl
int3
inc
emms
cmp
pop
sahf
push
or
or
jmp
inc
cmc
fnstsw
jmp
xor
das
pusha
pushf
aad
lret
fcmove
or
dec
mov
arpl
in
xchg
push
mov
je
inc
frstor
xorl
fidivs
cmp
mov
pause
fmuls
or
arpl
popf
pusha
popa
pop
adc
or
les
daa
outsl
negl
sbbl
in
clc
jae
xor
testl
add
mov
pusha
and
mov
dec
dec
js
jb
cmc
adc
das
mov
push
mov
sbb
mov
add
inc
je
popa
sub
pop
shll
or
cmp
into
inc
and
psraw
inc
movsb
ja
mov
pop
mov
mov
sbb
sbb
xor
insb
or
imul
jmp
push
test
arpl
mov
adc
lods
pop
popa
dec
mov
leave
cmp
mov
or
shll
or
orl
stos
das
xchg
inc
inc
sbb
dec
pop
cmp
push
arpl
jmp
sti
push
call
inc
mov
xchg
das
mov
into
inc
add
int
inc
push
xchg
adc
xchg
js
fldcw
test
sub
ljmp
push
push
sbb
lret
push
xorb
cmp
rorl
decl
cmc
sbb
ret
hlt
lds
jg
jge
popa
test
inc
shr
ja
popf
das
adc
xor
push
dec
fs
lea
cwtl
loop
push
inc
lret
pop
cmpl
add
fisubrs
sbb
dec
aaa
sbb
stos
sbbl
pop
pop
or
jecxz
fwait
xchg
mov
dec
stos
mov
fwait
mov
sbb
lds
jne
pop
aad
call
and
jb
lret
pop
test
pop
inc
adc
xchg
adc
dec
loope
mov
push
xchg
lret
adc
bound
aam
fstl
lea
leave
adc
mov
pop
push
les
mov
xor
mov
cli
mov
stos
fwait
dec
pop
sbb
test
cmp
iret
daa
out
out
xchg
fistpll
dec
popfw
into
movsl
in
xchg
xor
stos
jbe
mov
mov
sub
jno
mov
lock
std
mov
mov
lods
pop
les
xchg
mov
ljmp
add
dec
add
int
mov
fwait
leave
test
mov
daa
mov
lods
gs
xchg
cmp
cmp
push
jl
mov
mov
ret
inc
adc
leave
int
ljmp
sar
cli
push
push
mov
into
xor
xchg
add
push
lcall
popa
lods
js
pop
dec
pop
adc
dec
inc
dec
in
jnp
aad
pushf
lahf
push
xor
mov
js
stc
sub
adc
out
or
add
ficompl
insl
addr16
aad
dec
mov
or
popl
ret
mov
and
inc
dec
dec
out
pop
idivb
loopne
rcl
in
imul
jecxz
or
sub
dec
add
xor
jle
fcoml
jmp
inc
clc
cmpsb
insb
gs
mov
aam
mov
lock
lds
mov
std
testb
pushf
pop
sbb
mov
and
aad
test
cmpsl
mov
jg
popl
push
inc
rolb
jge
mov
in
sbb
jae
jmp
adc
adc
iret
cmc
lcall
sub
push
ds
lea
mov
fiaddl
and
stc
test
ret
xchg
dec
std
dec
aas
or
push
gs
push
mov
inc
jne
fcoml
ret
and
sbb
xor
jmp
mov
inc
aam
leave
nop
mov
pop
mov
pop
ficompl
call
ljmp
mov
in
jmp
mov
or
jb
das
push
lret
or
ljmp
push
or
mov
sub
cli
lods
addr16
sbb
jae
imul
clc
cmpsl
test
sbb
xor
mov
sbb
dec
ret
filds
test
test
in
or
xchg
xor
daa
hlt
out
aaa
and
or
outsb
add
call
sbb
stos
mov
pushf
or
aad
jg
lock
popf
pop
push
add
and
cmpsl
inc
lea
cmpsb
std
shll
stos
sub
imul
mov
or
pop
lret
cmp
clc
mov
mov
add
mul
fbstp
mov
and
dec
push
icebp
fnstsw
jnp
cmpsb
jmp
and
andl
sti
mov
jnp
les
mov
cmpsl
mov
pop
and
inc
inc
in
push
and
jne
dec
aaa
popa
add
dec
pop
xchg
cmpsl
outsb
push
cld
sub
insl
jg
dec
inc
pop
pop
xchg
xlat
pop
cmp
das
scas
test
or
out
sar
les
repnz
mov
xchg
cld
sub
jns
aam
test
pop
add
sti
lahf
fldl
cmp
imul
fnstenv
xchg
jae
shlb
js
push
cmovbe
rcrl
dec
out
pop
jae
pusha
or
shl
lds
roll
xchg
in
lcall
and
outsl
mov
lds
js
jle
mov
lcall
pop
cmp
push
adc
shlb
cmp
aam
or
clc
or
mov
add
jne
pop
mov
icebp
divb
lock
subl
push
xor
std
ljmp
adc
cmp
add
jae
xor
int
push
insb
cmpsb
dec
sub
ljmp
cmp
mov
in
push
int
pop
mov
fsts
out
jae
mov
or
inc
insl
inc
loop
mov
pop
jb
xchg
lock
lahf
add
ja
and
lea
pop
sahf
mov
cmp
in
aaa
nop
mov
jp
inc
clc
inc
cmpsb
xor
daa
je
jg
adc
pop
jo
jo
inc
push
pop
out
test
mov
jg
nop
mov
cld
xchg
and
inc
sbb
sahf
jo
popl
movsl
mov
xlat
mov
push
jnp
out
mov
pop
in
adc
mulb
or
jp
imull
movsl
mov
ret
lahf
scas
mov
call
mov
ja
sbb
inc
in
out
cmpsb
imull
fiaddl
sbb
dec
sub
pop
stos
sbbb
push
movsb
jnp
xchg
arpl
in
andl
mov
and
repz
sbb
xchg
std
mov
mov
addb
jbe
push
lea
mov
adc
out
xchg
dec
cmc
or
sub
xor
mov
adc
mov
pop
pop
cli
xchg
orl
or
dec
fmul
addr16
mov
rorl
in
in
int3
arpl
outsl
out
and
and
dec
in
adc
xchg
sahf
jno
push
add
ss
stc
or
test
call
insb
in
fwait
xor
mov
aad
mov
xlat
add
or
sar
xor
ja
mov
ror
inc
out
xchg
jbe
mov
enter
movsl
cmpsb
inc
push
fisubrl
dec
mov
jge
cmc
mov
push
ja
cmpl
mov
or
fwait
add
rcrl
or
mov
jbe
add
bound
sbbb
fstpl
inc
xchg
ds
sbb
fildll
xor
int3
mov
or
loope
xchg
inc
mov
call
lret
outsb
push
xchg
xor
packsswb
cs
jl
jg
lcall
mov
push
insb
sbb
cltd
mov
pop
fcomp
jae
jle
push
adcl
movsb
mov
aad
push
sbb
add
pushf
xor
lret
pop
sti
test
pmulhw
push
push
iret
mov
mov
jge
lcall
stc
nop
add
push
push
std
add
out
mov
push
jmp
mov
dec
sub
sbbb
rorl
int
fs
mov
std
xchg
rcll
pop
stos
out
cmpsl
nop
in
inc
gs
mov
mov
pop
mov
mov
mov
jle
fcomi
add
sbb
xchg
xor
xor
xor
gs
mov
mull
jnp
sbb
repnz
xchg
int3
mov
or
pop
loop
jle
jb
sarl
xchg
in
jbe
popf
lods
rcrb
push
jae,pn
arpl
push
xlat
loope
ljmp
fwait
stc
mov
sbb
fsts
push
aaa
repnz
or
cmp
jp
imul
es
fwait
xchg
xchg
sub
in
or
push
push
mov
mov
sti
fwait
jne
mov
daa
adc
add
inc
pop
imul
hlt
sbb
cmpsb
lea
sti
xchg
icebp
inc
jne
cli
ret
ret
jmp
xchg
std
or
xchg
pop
cli
insb
sub
cmp
out
lock
or
sbb
add
pusha
out
mov
pop
sub
xchg
dec
dec
shl
xlat
push
popl
mull
lods
mov
lahf
sahf
popf
cmp
into
mov
push
aas
movl
inc
fadds
xor
mov
inc
out
loop
imul
repnz
pop
icebp
rorl
out
rol
cmp
add
xchg
sarl
insl
sbb
fsts
orb
clc
sub
dec
rcrl
jp
dec
fdiv
mov
scas
cwtl
clc
or
push
cmpsb
addr16
cli
cmp
test
lods
fdivs
orb
loop
pop
ret
pop
ds
jl
push
jae
shr
loope
jp
mov
xchg
fnstsw
addr16
in
lods
xchg
mov
sub
mov
cmp
cld
or
pop
stos
movsb
jnp
orl
dec
sub
adc
add
xchg
push
fcmovb
push
jae
lock
lds
inc
and
faddp
push
mov
push
dec
sti
pop
fmulp
xchg
int
ret
sbb
cmpsl
aam
inc
push
mov
mov
push
xchg
test
andb
mov
lret
adc
aam
push
push
cwtl
add
int3
ret
push
jg
pusha
mov
popf
in
test
into
adc
jne
out
cmpsb
sbb
movsl
lea
jae
jbe
inc
dec
mov
movsb
mov
aad
iret
xchg
dec
stos
jg
adcl
sub
scas
test
inc
inc
cmp
lret
popa
ds
sbb
pusha
outsb
lret
lret
into
mov
mov
push
jno
xor
montmul
cmpsb
adcl
fiaddl
out
jb
sbb
mov
mov
fcmovne
fisttpl
push
push
popf
cld
mov
bound
push
mov
ficomps
mov
mov
adc
jg
or
pop
fnsave
ret
lods
and
inc
mov
dec
imul
push
dec
sub
scas
jmp
lds
dec
cwtl
aas
pop
and
pop
fisubrl
xchg
xchg
ds
xor
lock
sub
jno
int3
lods
std
push
jmp
adc
mov
pushf
xor
iret
or
jno
and
push
lock
mov
cmpsb
stos
dec
lock
mov
test
push
les
adc
sbb
push
fidivl
xor
divl
mov
push
mov
dec
sbb
lahf
repz
clc
xchg
cmpsl
inc
pop
lret
sub
jl
sbbl
test
outsl
xor
loope
inc
pop
adc
or
inc
ds
std
cmc
andl
clc
dec
cmp
cmpsl
out
sarb
inc
outsb
es
mov
xchg
out
popf
and
or
notb
add
cmp
lods
aam
pop
and
add
rep
loope
add
das
xchg
and
outsl
cmpsb
ds
xchg
add
or
aaa
mov
push
push
je
mov
inc
lret
mov
sbb
pop
xchg
aam
rcr
cmc
sbb
inc
sbb
xchg
xor
inc
push
or
leave
int
insb
or
jp
inc
bound
rcl
nop
jge
loope
mov
sbb
mov
test
testl
adc
inc
pop
je
into
ds
push
cs
sbbb
shlb
jno
cmp
cmc
mov
dec
pop
rcrb
sbb
push
add
cmp
insl
push
xor
xor
push
mov
imul
es
pop
jmp
in
icebp
lea
xchg
dec
and
fwait
xor
jecxz
or
cmp
mov
fnstcw
ds
add
jo
test
fidivl
andb
sub
jge
out
inc
cmp
sub
push
in
or
xchg
movsb
and
lods
fdivrl
stc
xchg
loope
sub
inc
cmp
pop
adc
fistps
repz
bound
xor
mov
adc
inc
sbb
cmp
fisttps
out
inc
in
pusha
inc
cmpl
jb
lods
lea
adc
aam
pop
repnz
fwait
pop
das
xchg
scas
movzbl
inc
out
xchg
fsubs
sbb
ret
inc
adc
lret
clc
mov
in
int3
fisubrs
jl
mov
test
mov
insb
push
push
sub
movaps
in
xor
leave
adc
outsl
xor
addr16
out
pushf
cmp
add
out
sahf
inc
push
adc
inc
bound
sub
js
call
sbb
loopne
out
cmp
sub
cltd
add
mov
push
das
cmpsl
mov
pop
jne
test
divb
lods
mov
jnp
mov
sarl
mov
or
or
lods
sbb
sbb
xchg
cmc
nop
xchg
pop
cmp
fdivrp
jb
jg
loope
daa
icebp
dec
loopne
push
sti
inc
sbb
pop
ss
xchg
mov
xor
push
int
and
das
or
popa
mov
mov
pop
or
or
das
cmp
test
sbb
sub
fstl
stos
outsb
xlat
cmp
push
lds
mov
scas
jb
icebp
mov
mov
js
push
data16
cmp
add
incb
and
xchg
sub
or
cmc
or
shrb
es
cs
inc
pop
xchg
pop
jmp
lods
xchg
cmp
fcmovnb
inc
cmpsl
jbe
sbb
xor
std
or
das
call
aam
cmp
inc
sub
pusha
imul
xor
and
add
push
je
pop
xlat
push
jge
mov
mov
je
adc
lcall
pushf
jp
ss
dec
jge
shrl
inc
cld
ljmp
sbb
jmp
out
xchg
js
cmp
sub
sbb
mov
pop
cmp
imul
push
mov
xor
in
jmp
xchg
lret
sarb
enter
push
xor
sub
sbb
cmp
aas
sbb
subb
xor
add
dec
jp
dec
pop
dec
jg
xlat
pusha
jo
jp
popf
dec
fmull
imul
movsl
mov
xor
clc
fs
in
fstps
loop
cmc
push
shrl
je
sub
inc
xchg
mov
cltd
ljmp
push
sbb
shl
shr
pusha
pop
pop
cmc
push
xorb
out
fwait
scas
jo
adc
cmp
imul
sbb
or
pop
sub
or
mov
add
cmpsb
jo
push
push
sbb
and
adc
call
test
mov
movl
fadds
jg
enter
and
and
push
jmp
out
fldenv
pop
mov
aas
xchg
add
stos
les
xchg
add
jl
dec
arpl
shr
add
inc
dec
mov
out
push
out
pop
fcmovu
jno
xor
sbb
arpl
cmp
dec
es
idivl
lret
cmpsb
mov
inc
cmpsb
call
dec
jns
push
aas
loopne
pop
dec
fwait
sbb
jno
dec
push
and
pop
ret
sbb
lods
mov
cmp
js
clc
or
scas
repnz
outsl
and
shll
jmp
cmp
dec
pop
push
pop
fstpt
xchg
fstl
mov
lea
dec
icebp
mov
xor
add
jmp
arpl
inc
ss
adc
fs
xchg
into
xor
lahf
add
jg
cmp
xchg
dec
adc
loopne
loop
jae
add
pushf
and
es
xchg
sahf
jb
mov
adc
push
pop
test
sbb
nop
out
mov
mov
mov
sub
cltd
mov
mov
pusha
subb
gs
mov
sahf
bound
dec
dec
push
in
movsl
xchg
xor
popa
push
mov
test
inc
mov
lods
leave
mov
repnz
lahf
jae
inc
out
iret
les
shl
lcall
in
dec
xchg
dec
in
fsubr
bound
pop
insb
shlb
xchg
or
jmp
add
aaa
into
push
lahf
xor
adc
stc
shll
fildll
insl
stos
xor
shll
mov
dec
lods
push
lods
inc
push
push
clc
iret
xchg
dec
mov
cmpsb
cli
es
xlat
add
cmpsl
clc
dec
fbld
std
adc
and
dec
jne
mov
push
test
notb
fldl
mov
sub
clc
pop
sbb
jecxz
ja
imul
aam
inc
daa
mov
shlb
ljmp
jo
lahf
sbb
ficoms
mov
rcrl
bound
ljmp
and
push
in
cmc
shrb
repz
inc
loop
xor
sahf
jns
push
rol
pushl
add
inc
xchg
push
inc
in
sub
add
mov
cmp
jge
cwtl
adc
or
sar
push
pusha
icebp
inc
push
sbb
push
in
icebp
sub
jae
fcoms
pop
mov
int
and
jp
cli
xor
mov
jo
mov
dec
mov
gs
jp
lods
lods
adcl
mov
addr16
pop
cltd
cmpsb
adc
popa
mov
inc
into
stos
mov
push
jmp
and
fdivrs
xlat
adc
rcrl
test
adc
xchg
leave
loope
add
push
aaa
jmp
fdivs
sti
cmp
outsb
stc
xchg
push
ficoms
ja
imul
and
jns
ret
cli
sti
jecxz
js
popf
mov
loopne
xchg
add
mov
cwtl
jp
das
pop
mov
lcall
sbb
mov
mov
fstps
dec
xor
insl
mov
scas
jge
cli
xchg
dec
mov
xchg
adc
mov
lds
leave
pop
cmp
movsb
or
cmp
test
rcr
adc
jae
es
rcrb
test
stos
cmp
ds
hlt
mov
cltd
inc
jno
or
mov
and
jo
pushf
xor
and
push
stos
pop
shr
cmp
jnp
gs
pop
xchg
loope
stc
dec
sahf
fbstp
fmuls
dec
dec
mov
fsubr
mov
out
mov
aas
lea
dec
sbb
jb
xlat
pusha
jl
popf
call
fcmove
inc
lahf
es
lods
push
mov
sbb
or
dec
inc
add
stos
mov
test
jns
ret
mov
push
mov
sub
mov
jns
push
push
mov
lret
in
pusha
add
hlt
inc
push
jbe
inc
loop
ljmp
flds
cs
xor
rorl
shlb
pop
outsb
xchg
sub
jp
idivl
neg
rol
jno
xor
aam
or
ret
icebp
xchg
pop
sarb
out
nop
xchg
mul
push
in
enter
pop
xor
or
and
dec
mov
sub
outsl
push
and
adcb
fadds
shll
mov
imul
mov
std
inc
icebp
mov
cmp
cmp
dec
xchg
mov
add
inc
fisttpl
das
adc
mov
in
push
loopne
dec
int3
push
jmp
xor
push
aad
jne
lahf
sub
xchg
lahf
mov
mov
lret
nop
and
movsb
jmp
loop
in
cmp
push
mov
dec
lods
sbb
push
mov
push
jb
iret
add
pop
xor
sub
or
xlat
sbb
xlat
mov
ret
mov
xor
popa
hlt
ja
in
inc
and
or
leave
pushf
sub
mov
pop
lods
inc
fisubs
push
jecxz
mov
mov
cltd
xor
aaa
inc
repz
mov
add
fildl
sbb
fdivp
bnd
xor
adc
mov
sbb
loopne
sbb
inc
fisubrs
or
arpl
out
cmp
mov
or
adc
mov
add
out
mov
cmc
ljmp
int
push
xlat
or
xor
sub
loop
inc
int
sub
xchg
rclb
xor
jecxz
das
sahf
jmp
rcrl
in
push
and
aam
shrl
xchg
out
popa
push
sahf
sbb
sahf
inc
fbld
enter
push
sub
rcr
dec
pusha
andb
test
lret
enter
int
data16
out
ja
xchg
ror
das
mov
jne
and
push
mov
push
add
inc
push
rorb
dec
std
sbb
mov
lds
out
mov
mov
adc
aam
sti
push
fists
in
jle
mov
addr16
stos
inc
sti
and
orb
pop
addr16
push
cmpsl
cmc
mov
xchg
mov
and
jl
out
cmp
push
lahf
dec
fwait
hlt
adc
fsubl
popa
jno
pop
call
fldcw
stos
dec
pushl
jnp
dec
adc
or
xchg
outsl
jnp
inc
xchg
sti
inc
add
pop
mov
pop
jmp
cmc
dec
sub
and
ja
jle
repnz
insl
decb
les
mov
hlt
jg
dec
mov
cmp
outsl
pop
shlb
pusha
push
mov
or
mov
repz
sbb
mov
jp
movsl
insb
sbb
nop
mov
mov
adcb
ret
jecxz
jmp
rcr
jge
stos
inc
cwtl
jle
gs
mov
inc
dec
notl
faddp
lcall
or
fsubrs
inc
ja
ss
push
jmp
pop
or
pop
nop
cmpsl
repz
pushf
shr
mov
add
dec
subl
shll
pop
dec
mov
mov
cmp
push
dec
pop
mov
popa
mov
sbb
inc
aad
ljmp
cmp
stos
pop
cmp
add
lcall
xlat
in
xchg
test
xchg
pop
sub
sbbb
sub
cli
and
dec
loope
dec
test
jle
push
test
xchg
push
xor
and
sbbb
sahf
xchg
dec
in
cmpsb
sub
and
in
inc
popa
call
push
adc
mov
popf
push
fwait
mov
int
inc
fcom
mov
imul
inc
jne
mov
scas
stos
loop
push
sar
fsubs
ss
mov
in
fwait
clc
nop
adc
mov
xor
sbb
pop
loope
outsl
mov
fimull
jo
pop
mov
mull
fisubs
inc
gs
pop
mov
xchg
pop
jae
push
loope
jns
xchg
mov
subl
shrl
stos
sbb
sub
jl
mov
jb
lods
sub
pop
scas
call
jbe
sahf
push
sbb
bound
outsl
sbb
mov
mov
push
jnp
push
jecxz
fists
or
sbb
aam
mov
jns
ret
ret
sbbl
push
push
lock
lahf
push
inc
sbb
dec
stos
sti
add
mov
jle
repz
push
add
pop
mov
push
popa
lods
pop
addb
sbb
push
dec
scas
mov
mov
cltd
xchg
push
out
sti
pop
mov
and
xor
bound
enter
out
push
frstor
push
rcr
push
xchg
mov
adc
bnd
cwtl
inc
mov
subb
pop
repnz
scas
mov
shl
call
ss
stc
test
gs
lock
and
sti
outsb
je
fs
xchg
mov
dec
sbb
iret
mov
xor
movsb
or
int3
cmp
fnstenv
add
inc
test
jl
shrl
leave
xchg
xor
inc
in
mov
push
mov
clc
icebp
xchg
inc
arpl
gs
lret
pusha
test
out
outsl
and
pop
push
dec
mov
xorl
dec
dec
and
in
gs
push
sub
adc
dec
cs
xchg
mov
imul
fcmovb
popa
push
cmp
rcl
insb
pop
in
mov
and
roll
int3
cmp
imul
insb
or
sub
movsl
pop
or
repz
jl
mov
rorb
dec
jl
lods
cld
in
add
jbe
sbb
lret
das
out
mov
jl
mov
sub
or
push
xor
stos
std
xor
sbb
jne
xchg
je
ja
std
dec
mov
jbe
out
add
sti
out
mov
mov
rcll
xchg
sbb
cmp
ret
flds
sti
xor
mov
cs
sbb
repz
test
dec
inc
fnsave
push
mov
lock
sbb
lock
and
rclb
ds
stos
push
in
cld
call
out
int
inc
ljmp
call
mov
inc
test
push
shl
pop
dec
push
push
cs
imul
mov
out
cld
insb
lret
fdivp
inc
lds
stos
mov
inc
mov
leave
jecxz
sahf
cmp
mov
loopne
xchg
pop
sub
subl
repnz
daa
push
cwtl
mov
aaa
into
das
mov
outsl
jl
aam
popf
mov
mov
mov
mov
imul
xor
lods
dec
pop
repz
imul
mov
mov
pop
jne
sub
cmp
pop
mulb
test
lret
test
cmp
mov
jge
push
scas
mov
popa
mov
imul
ja
xor
shrb
sub
lds
and
inc
stc
insl
jnp
cli
retw
xchg
ljmp
mov
aas
in
pop
aad
scas
xchg
mov
pop
inc
push
add
fbstp
leave
or
jns
ljmp
mov
mov
cld
aas
stc
lds
push
mov
cld
jae
adc
xor
pusha
sahf
mov
mov
mov
scas
pop
loopne
push
mov
js
sub
fsubs
dec
add
dec
mov
pop
mov
icebp
mov
xchg
sub
pop
mov
or
add
pop
addl
jge
fiaddl
sbb
jno
sbb
mov
arpl
out
pop
clc
cli
mov
loop
stc
divl
pushf
xor
mov
in
dec
test
mov
jnp
in
insl
aas
mov
jb
outsl
push
mov
sar
imul
pusha
loope
mov
in
mov
fdivs
push
cli
and
repz
movsl
insb
repnz
push
adc
cmp
pop
pop
dec
sub
test
mov
nop
add
push
xor
mov
mov
cmp
lcall
add
movsb
mov
push
push
pop
fisttpll
cmp
sbb
push
ror
ret
ss
stos
int
cltd
pop
xor
push
decl
lea
inc
mov
dec
fists
xor
push
inc
mov
ja
aad
testl
insb
cmp
addr16
rcrl
dec
clc
sub
sub
adc
test
loope
movsb
jo
xchg
or
mov
pop
sarb
jp
jne
cs
rcll
ds
outsl
sub
or
aad
outsb
xor
repz
rol
rcrb
and
xchg
mov
std
pop
mov
dec
out
mov
icebp
sbb
outsb
adc
adc
fnstenv
int
adc
pop
dec
stc
jae
fnstcw
add
mov
into
jbe
add
push
mov
test
sub
ljmp
xchg
or
pop
test
test
mov
jae
dec
add
clc
movsb
out
test
cmpsb
jg
in
inc
mov
fsubp
fstpt
out
inc
pop
add
mov
inc
test
push
loope
data16
fbld
mov
fldl
fistl
add
shrb
pop
and
popf
clc
xor
sbb
mov
inc
push
or
ds
test
mov
push
push
not
mov
mov
sbb
xchg
add
push
mov
jns
adc
sbb
inc
rcl
lock
ret
fcoml
mov
repnz
lds
div
insb
fbstp
pop
push
mov
stos
add
mov
pause
mov
push
mov
adc
and
iret
mov
jnp
lcall
movsl
add
andb
outsl
push
test
lret
fbld
mov
sar
mov
ja
pusha
lcall
pushl
cmpsl
adc
sahf
add
divl
mov
ljmp
pop
imul
fcomi
movsb
clc
pushf
and
ret
test
pop
mov
les
cli
xchg
pop
push
jmp
js
push
daa
add
mov
cld
inc
lds
dec
das
and
sbb
push
bound
insl
push
xor
inc
sub
or
xlat
inc
in
push
push
clc
ficoms
loop
xor
lret
daa
jbe
pop
lods
and
sbb
jno
cld
jle
cmp
xorl
rcrb
std
jns
getsec
sahf
mov
inc
pop
lahf
mov
popf
and
xor
cmp
sub
mov
in
lcall
adc
xor
pop
gs
in
pop
arpl
mov
jae
pusha
xorb
add
jno
lret
mov
mov
pushf
scas
shr
dec
es
or
dec
add
jl
fsub
and
hlt
or
sub
mov
icebp
jbe
xchg
nop
negb
ja
cmp
and
fsubrs
lret
movsb
imulb
aam
inc
fwait
mov
mov
lahf
dec
or
mull
or
out
jmp
and
pop
faddl
ret
les
cmpb
sub
imul
mov
leave
fwait
dec
add
bound
sbb
in
loop
push
aaa
lcall
dec
jl
add
dec
repnz
repnz
call
les
in
push
sbb
sbb
call
push
data16
ss
decb
mov
jmp
scas
iret
loope
out
adc
fistpll
dec
mov
dec
loope
sahf
ror
mov
repnz
popf
or
xor
movsb
std
outsl
and
sbb
imul
outsb
call
jns
in
push
push
mov
fnstsw
or
jnp
jl
repnz
int
fnsave
inc
cltd
push
test
addr16
and
add
ljmp
mov
shlb
mov
dec
jnp
mov
rclb
inc
je
inc
sub
sbb
push
cmp
jmp
lahf
fcmovu
jg
xchg
ret
push
push
jo
ljmp
std
jl
xor
out
sbb
xor
push
iret
adc
aas
lods
xor
addr16
stos
add
js
cmp
scas
cmc
mov
hlt
icebp
movsl
inc
sbb
loope
lods
shlb
add
pop
je
mov
jb
lret
xchg
dec
inc
xchg
xchg
stos
out
and
cwtl
ljmp
mov
jmp
jbe
jo
add
pop
adc
cmp
jbe
lcall
scas
outsl
add
cmp
lcall
data16
fadds
movsl
cmp
les
popl
test
adc
les
ret
cmp
mov
jns
aam
and
sbb
dec
inc
pop
xchg
jecxz
jno
sbb
xor
cmp
and
in
jnp
xchg
adc
and
arpl
mov
ret
sbbl
decl
sbb
mov
mov
lret
orl
xor
loope
push
push
dec
pop
xchg
lahf
movsb
mov
leave
mov
scas
mov
xor
xor
inc
cs
sti
xchg
repz
pop
or
sbb
xchg
mov
in
add
jne
adc
mov
lahf
xchg
shrl
jl
imul
call
add
inc
or
incb
pop
ret
pop
sub
std
dec
add
lcall
jno
mov
push
out
push
jb
push
mov
or
dec
out
jge
std
pusha
fsubrs
mov
aam
aam
add
pop
mov
jno
cmc
mov
cs
xor
xor
sbb
add
push
sub
leave
pop
sbb
lret
rdtsc
cmc
sub
lcall
das
mov
scas
dec
loop
scas
das
mov
shrl
push
jo
scas
test
jmp
aaa
sahf
xor
shrb
lock
mov
enter
jb
std
leave
sti
xchg
jo
sub
test
iret
ret
cmc
nop
test
scas
push
inc
mov
lock
sub
sub
jo
fs
ss
aam
xor
and
pusha
ffree
cmpsb
sbb
pop
fidivl
insl
scas
inc
pusha
jl
mov
pop
jnp
or
cmpsl
xchg
into
std
fsts
or
sti
ds
sbb
or
jb
push
pop
or
jne
mov
sbb
cmp
aad
xchg
fsubrs
inc
inc
inc
sti
mov
ds
cmovb
ja
or
pusha
les
lods
daa
or
cmp
jns
lret
out
iret
mov
lret
mov
hlt
lahf
inc
stos
iret
push
fdivrl
psubd
add
test
and
adc
dec
push
icebp
jp
dec
cli
cmpsb
mov
fs
fs
inc
mov
mov
pop
es
adc
jecxz
xchg
sub
stc
mov
aad
mov
push
push
or
pop
push
mov
shl
out
push
xchg
pop
dec
fdivrp
addl
icebp
jno
jmp
add
mov
jmp
mov
mov
int3
mov
mov
lahf
push
add
mov
popa
mov
jno
lea
xor
jg
std
mov
mov
sub
jp
adc
ret
xor
outsb
fcomps
mov
sub
mov
aas
pop
jo
repnz
fs
imul
repz
iret
lcall
movsl
inc
stos
and
sbb
sbb
mov
xchg
jge
sbb
loop
sbb
jbe
dec
pop
aaa
outsb
add
imul
clc
pop
mov
jl
dec
cmc
out
jnp
mov
mov
popf
addr16
adc
mov
add
test
aaa
jo
js
or
jmp
jmp
lcall
jmp
outsl
push
jne
ljmp
fisttps
adc
sbb
xchg
push
push
sbb
daa
sbb
test
mov
repnz
movsb
jp
push
mov
mov
and
int3
xchg
mov
in
into
jbe
dec
roll
ds
std
mov
sub
bound
movsl
cmp
xlat
fwait
std
pusha
sarl
shr
rorb
fmul
pop
mov
mov
test
xchg
pop
test
mov
ds
jb
sub
pop
shr
mov
sbb
sub
popa
loope
and
xchg
push
pushf
lods
adc
jge
jl
jo
jmp
sbb
test
or
xor
xchg
mov
pushl
mov
push
mov
lods
pop
mov
ljmp
inc
fwait
test
xchg
xor
ljmp
sbb
sub
add
jnp
mov
ret
or
xchg
mov
and
or
push
jae
les
xorl
and
jle
mov
sub
inc
test
inc
popf
cmp
leave
lock
dec
scas
scas
xchg
mov
lock
lock
and
les
xor
mov
aaa
push
dec
push
add
cmp
pushf
sti
or
in
das
in
adc
mov
mov
push
mov
push
or
loop
inc
push
fisubrl
scas
jge
jecxz
xlat
popf
inc
dec
mov
mov
in
popa
out
pushf
stos
cmpsl
cmp
mov
sbb
adc
iret
data16
mov
ljmp
repnz
xor
push
subl
aaa
or
push
mov
xor
leave
loop
shrl
inc
adc
inc
sub
xor
insb
out
arpl
data16
push
lods
add
pop
jge
mov
push
push
dec
nop
addl
cwtl
lods
pop
es
xchg
and
inc
mov
sub
xor
mov
movsl
out
and
sbb
pop
fistpl
mov
xor
mov
int3
cli
xlat
clc
es
or
mov
sbb
lods
dec
xchg
lahf
sbb
jns
ja
mov
cmpsl
dec
xor
dec
idivb
adc
xor
cmp
rorb
call
xchg
add
test
loopne
mov
dec
ss
loopne
inc
push
mov
sub
xchg
or
pop
jne
sub
pop
ret
aam
push
pop
xor
jnp
in
test
xchg
sti
mov
ljmp
adc
in
jmp
add
mov
mov
fnsave
pop
jle
sub
dec
movsl
xor
mov
mov
or
arpl
out
clc
push
inc
repnz
xor
xor
sbb
mov
mov
jbe
aam
dec
loop
rolb
mov
repnz
pusha
js
leave
mov
dec
outsl
rcr
jae
cltd
icebp
in
jbe
xchg
test
insl
cmpsl
pop
jp
lea
dec
cs
andb
adc
dec
pop
add
mov
arpl
xchg
lret
inc
jmp
adc
ret
jb
cltd
pop
test
xchg
lret
xor
jbe
andl
mov
jns
xchg
imul
inc
icebp
mov
arpl
outsb
cmp
pop
ret
insl
mov
repnz
add
inc
cli
adc
pop
push
lcall
push
addr16
clc
inc
fdivrs
sub
icebp
jle
cld
mov
sahf
xor
or
fisubrl
test
xrelease
rclb
ret
out
sub
xor
in
ss
pop
mov
mov
cli
inc
faddp
stos
int3
faddp
out
fimull
push
xchg
mov
idivl
rorl
gs
pop
sbb
pop
lock
push
fbstp
and
sbb
pop
push
and
jo
xchg
mov
popl
ss
addr16
in
nop
jbe
lret
xchg
xchg
sbb
dec
aas
mov
mov
stos
ret
aam
push
pop
mov
xchg
sub
mov
clc
sub
lret
dec
int3
aam
imul
pop
jne
inc
xor
outsl
popa
clc
popf
fnsaves
mov
or
add
jo
push
fstpl
jmp
daa
jle
add
and
popa
ja
mov
insl
dec
in
sub
mov
outsb
dec
cmp
loope
mov
ljmp
mov
arpl
mov
xor
xchg
mov
mov
push
xchg
fs
or
mov
loop
sbb
add
out
mov
push
jns
mov
and
sbb
inc
cwtl
ljmp
mov
mov
lea
loop
mov
dec
cmp
cmc
sub
mov
sbb
mov
cmp
pop
fs
faddl
gs
and
sub
arpl
enter
mulps
fstpt
xor
or
rol
lcall
jns
mov
sbb
outsb
mov
cmp
sub
int3
pop
push
jle
adc
jns
out
test
enter
insb
leave
and
fadd
sub
imul
je
aam
mov
mov
sbb
jg
adc
leave
inc
mov
add
scas
inc
sti
in
push
out
adc
jg
loope
inc
dec
outsl
daa
add
lds
pusha
mov
outsl
lea
inc
inc
mov
adc
pop
inc
pop
clc
cmp
jae
pop
movsl
or
add
cmovbe
out
std
outsb
adc
jecxz
loope
dec
or
jno
cmpsb
stos
int3
fdivrp
popl
adc
sub
repz
jo
fidivs
sarl
mov
adc
push
xor
xor
and
sahf
sub
ljmp
outsl
jnp
mov
add
aam
lock
adc
mov
mov
cltd
nop
mov
pusha
aaa
mov
add
pop
lock
adc
mov
push
nop
aad
push
cmc
inc
out
or
pop
call
sahf
jb
jle
mov
imulb
cwtl
fs
pop
add
lods
cmp
mov
jl
jge
mov
lahf
testl
dec
xor
mov
xchg
es
hlt
rol
and
imul
xchg
insl
aam
mov
mov
shr
int
or
pop
shlb
lods
push
jge
addr16
pop
popa
xorl
jnp
cmp
push
jae
mov
inc
bound
jns
xor
cld
sahf
mov
stos
inc
lret
jbe
mov
and
mov
push
jl
rcrl
mov
lods
inc
clc
xchg
mov
add
or
sbb
mov
inc
test
add
jle
mov
or
jae
inc
je
pop
sahf
int3
cmp
fs
mov
jbe
out
pop
sub
js
and
in
out
xlat
outsb
push
push
push
insl
adc
insb
sub
xorl
daa
imul
mov
aas
push
mov
mov
cmp
test
mov
sbb
jnp
stc
jecxz
scas
mov
mov
push
roll
out
dec
pop
xchg
cmp
push
mov
mov
sub
jmp
popf
dec
xor
push
mov
cmp
in
add
mov
push
mov
push
jb
test
mov
out
push
xchg
test
js
xorb
push
inc
push
lock
sub
mov
imul
popa
add
inc
popa
mov
nop
jbe
xchg
pop
and
and
add
out
inc
gs
push
push
shrl
fmul
add
or
push
loop
test
or
adc
lea
or
out
mov
or
sti
jp
xor
push
fcomip
movsl
dec
repnz
je
fsts
xchg
lds
je
fisttps
mov
stos
je
sbb
pop
cmp
add
aad
daa
rorb
gs
insl
sub
xchg
mov
lret
pusha
push
jmp
lahf
out
lret
or
in
cli
xchg
outsl
pop
add
push
push
call
std
popa
outsl
rcll
jae
dec
jb
stc
je
sbb
xlat
mov
and
insb
push
popa
sbb
lret
cld
pop
popf
stos
sub
test
push
add
xorb
das
adcb
fwait
add
and
popf
js
pop
stos
mov
pop
je
and
xchg
push
pop
add
movsl
jbe
adc
jno
scas
cmp
mov
inc
sahf
aas
ja
aad
sbb
or
mov
iret
sbbb
inc
imul
popa
out
cmpsb
icebp
xor
dec
sub
xor
stc
mov
push
push
mov
leave
int
pop
cmp
jnp
pop
out
pop
fwait
xor
ljmp
and
cmp
mov
push
or
push
adc
pop
mov
call
into
scas
out
hlt
mov
adc
ret
fcomi
and
lahf
cmp
cltd
xor
cmc
mov
es
push
scas
cltd
adc
out
cld
pusha
in
mov
push
out
aas
sarb
inc
test
or
fiaddl
mov
into
xchg
insl
push
add
adc
fildll
sbb
mov
pop
scas
mov
rorb
call
xlat
ds
insb
dec
fnstsw
clc
xchg
cltd
std
repz
outsl
loop
std
add
lret
or
pop
adc
enter
and
dec
scas
shll
push
stos
iret
xchg
je
push
mov
pop
fildl
loope
jmp
js
imul
inc
lcall
inc
mov
orl
icebp
inc
push
sbb
mov
std
adc
ja
sbbl
inc
push
xor
xchg
mov
out
rolb
push
cmc
adc
jg
test
pushf
adc
lcall
dec
xor
xchg
int3
mov
sub
jecxz
mov
add
inc
or
dec
and
and
fisttps
sub
insb
cmp
sahf
push
mov
loope
je
jecxz
in
mov
cwtl
pop
imul
pop
dec
mov
nop
push
cmp
aad
rep
mov
xchg
cltd
test
stc
and
jb
mov
mov
push
aad
push
mov
sti
std
push
xor
dec
cmp
out
cmp
mov
repnz
and
dec
les
lret
jge
or
cmpsb
sahf
push
xor
das
repnz
jne
adc
push
lock
cltd
xor
negl
iret
cmp
imul
out
sub
push
incb
lcall
das
inc
and
mov
ja
fmulp
and
fldcw
xchg
and
jmp
sahf
leave
test
dec
sub
outsb
ret
test
fbstp
and
add
cmp
aas
fdiv
aad
jmp
movsl
pop
cmp
xchg
test
addr16
in
lods
shll
hlt
mov
add
jmp
test
flds
inc
mov
adc
es
and
jb
stos
mov
rcll
sti
mov
movsl
push
fs
mov
daa
jmp
negl
sub
scas
xor
mov
sbb
into
jne
add
push
pop
fidivl
xchg
sub
mov
int
testb
inc
outsb
sbb
push
add
popa
jne
mov
cmp
dec
int3
aam
or
aaa
fs
movsl
shlb
or
mov
mov
or
dec
push
ljmp
mov
rolb
repnz
push
stos
dec
push
lahf
sub
subb
jo
and
or
ret
pop
mov
lock
out
mov
adcl
loopne
mov
jmp
add
in
in
popa
clc
mov
sbb
shrl
inc
mov
insl
push
loop
or
adc
sub
xor
daa
mov
mov
test
je
add
adc
ja
pop
mov
repz
mov
les
adc
mov
jecxz
xchg
push
cwtl
sbbl
insb
out
imul
jnp
loopne
mov
ljmp
mov
pop
aas
ds
sub
push
aad
mov
inc
mov
mov
sbb
jge
jo
mov
mov
push
mov
sbb
push
fwait
push
and
jmp
aad
gs
movsl
mov
push
outsb
mov
test
jo
push
lcall
inc
repnz
or
adc
cmp
mov
cmp
lods
lds
dec
mov
scas
andl
sub
jle
jmp
push
dec
lret
xchg
fwait
xorl
fdiv
lock
mov
adc
push
jne
pop
xor
pop
sbb
push
aas
movsb
fldt
push
adc
movsl
jb
sbb
ja
outsl
jns
mov
xor
push
lea
lods
rolb
decl
xchg
mov
nop
or
sbb
cmp
nop
pop
mov
jmp
adc
shll
fidivs
sbb
mov
mov
xor
cmp
in
clc
test
js
jle
sub
add
nop
mov
cltd
std
sub
adc
pop
dec
mov
arpl
push
ljmp
out
sbb
mov
hlt
mov
fbld
xchg
lret
addb
movsl
cmp
jecxz
test
inc
testb
cmp
mov
fsubrl
sub
movsb
mov
popa
mov
xlat
mov
jl
push
or
add
test
pop
ja
adc
repz
dec
jmp
cmp
dec
add
push
lret
lock
lret
xor
dec
add
xor
push
dec
cmc
mov
push
xor
sbb
cld
pusha
adc
daa
data16
iret
hlt
mov
arpl
mov
jle
in
mov
aad
fs
add
mov
pop
sahf
mov
lea
xchg
pushf
xor
call
or
xor
xlat
bound
mov
dec
sbb
roll
pop
int3
cwtl
out
out
ljmp
lods
inc
pop
cmp
sub
dec
loopne
arpl
out
mov
mov
cmpsb
fisttpll
push
mov
jns
dec
lahf
pop
sbb
ja
mov
scas
push
mov
or
je
call
and
cltd
mov
cmp
xchg
jb
push
mov
out
repz
inc
or
test
gs
push
dec
xor
sbb
insl
mov
pop
xchg
jg
dec
insl
sbb
aas
xor
pushf
mov
cmp
sbb
dec
subl
xor
cmp
sub
sbb
sub
adc
or
mull
cmc
jge
lea
sbb
pop
jno
push
jle
mov
aam
pop
cmp
mov
jnp
push
mov
xor
movsl
bound
in
mov
inc
fisttpl
mov
adc
mov
fistl
test
jnp
div
or
jle
inc
aad
xchg
shrb
adcb
mov
lods
push
inc
add
sbb
addr16
lcall
xor
popa
clc
popf
outsl
mov
das
rcrb
ss
cmpsl
xlat
outsb
xlat
repnz
add
cmc
cmp
jg
gs
jnp
jecxz
test
outsb
add
pushf
pop
fidivs
or
popa
sti
and
mov
xchg
jecxz
out
sub
fldcw
gs
xchg
inc
ret
sbb
push
cmpsb
xor
xlat
and
rorb
and
test
outsl
adc
inc
sub
pop
xchg
arpl
jae
pop
out
mov
push
fldl
xchg
hlt
mov
jo
mov
scas
icebp
fstpt
rorl
int3
and
pop
enter
gs
xor
dec
xlat
adc
pop
insb
stos
dec
mov
mov
adc
into
jl
inc
mov
pop
add
fadds
ds
jo
in
out
sub
jmp
mov
and
insb
jge
xor
add
inc
inc
xchg
or
mov
lret
xchg
std
ss
jg
out
lret
mov
mov
jmp
iret
xor
aas
push
mov
ljmp
push
int
loopne
imull
push
inc
mov
and
test
int
dec
add
sub
pop
cmp
movsb
rclb
add
cmp
jns
xchg
jmp
sub
pop
fmuls
stos
fmull
pop
rorl
popf
or
cmpsb
sbb
iret
xchg
stos
xchg
mov
lret
ret
out
add
inc
jmp
dec
and
xchg
fidivl
xor
lods
xchg
xchg
imull
sbb
arpl
jge
das
es
pop
push
jno
ljmp
mov
es
xor
shll
push
data16
fdivr
pop
mov
iret
pop
stos
or
jne
push
sti
push
sahf
bound
lea
or
jo
std
inc
push
add
sbb
lods
mov
cmp
xor
inc
fs
sub
jp
jbe
push
leave
aas
sbb
lods
dec
pusha
push
jmp
sub
jo
rolb
pusha
not
into
jge
iret
cmp
adcb
mov
daa
sarl
pusha
andb
rcl
icebp
mov
cs
les
call
dec
dec
lods
pop
int
inc
test
inc
adc
jns
pop
push
mov
xchg
clc
inc
dec
out
sbb
or
aad
insl
es
add
out
add
add
cmp
js
outsb
sub
sbb
daa
std
pop
sti
imul
and
xchg
roll
add
imul
in
dec
mov
cltd
repnz
pusha
mov
and
ret
sbb
repz
or
cmp
pop
mov
pop
xchg
shll
jbe
mov
fcompl
loope
push
cltd
movb
pop
mov
fcomps
fs
jns
repnz
pop
popa
in
repz
jnp
stos
dec
push
jecxz
adc
dec
ret
call
ss
cli
jne
xchg
cld
adc
or
sbb
jns
or
fistps
ficoml
push
push
adc
mov
xchg
mov
hlt
repz
jb
inc
gs
test
adc
cmp
mov
fildl
mov
mov
inc
gs
xchg
sahf
rolb
jge
mov
loopne
out
dec
cld
and
xor
sbbb
or
adc
xchg
adc
jae
xor
cmp
rcrb
add
testb
pop
fmul
cmp
xor
nop
lods
dec
out
cmc
int
cs
lea
xor
pop
pusha
jge
fisttps
out
frstor
ja
aam
xchg
leave
xor
inc
loopne
test
add
lods
dec
mov
adc
xchg
xchg
sbb
dec
cld
inc
out
and
pop
dec
pusha
flds
loop
out
and
popf
add
xchg
add
fwait
xchg
rclb
add
paddb
xchg
inc
rorb
jo
lods
push
addr16
mov
xchg
mov
xchg
jge
es
icebp
jp
cmpsb
sarl
jmp
popf
notb
fisubrl
nop
mov
repnz
inc
sbb
cmp
jne
jns
leave
ret
loope
mov
xor
lods
sti
mov
sbb
insl
scas
push
sbb
xor
inc
cmp
xchg
push
outsb
rorl
lahf
and
aas
insb
or
fs
aam
clc
add
sub
push
rclb
lods
inc
jecxz
pop
adc
jb
sbb
stos
inc
inc
hlt
sub
pop
push
and
pop
lret
lcall
shlb
js
adc
mov
dec
sub
xchg
hlt
imul
and
mov
dec
cmp
scas
cld
lcall
xchg
sub
scas
divl
adc
push
sbb
iret
les
or
jl
jo
jge
hlt
bound
push
add
dec
cmp
inc
fisubl
add
fdivs
xor
and
dec
sahf
xor
shlb
mov
pop
popf
push
add
loopne
cmp
inc
ja
jp
sbb
pop
test
jl
and
push
add
ja
push
mov
jb
js
test
cmc
lea
lahf
mov
insb
and
addr16
vpsubd
sub
cli
in
mov
inc
xor
jmp
incl
pop
call
xor
lods
mov
in
inc
lods
movsl
adc
jae
movsb
int3
cmp
inc
outsb
out
jl
add
vunpcklps
jmp
roll
mov
or
sub
stos
or
lret
cmp
push
jbe
adc
push
mov
jns
or
xor
jge
arpl
cli
xor
mov
inc
dec
in
xchg
cs
adc
pop
adc
adc
dec
xlat
aaa
movsl
mov
mov
adc
cli
ja
jle
or
mov
add
sub
push
inc
mov
int
mov
xchg
enter
adc
jb
jl
cltd
inc
fisubs
seta
jnp
into
and
pop
dec
adc
jno
xchg
ss
subl
lret
sbb
cld
js
jb
mov
jl
jecxz
xchg
or
adc
sub
add
or
inc
testb
cltd
popf
push
inc
mov
push
push
in
xchg
inc
xchg
mov
add
stc
xchg
unpcklps
and
or
jle
idivl
adc
pop
mov
popf
cmp
int3
shr
fs
push
insl
cmpb
dec
popa
lds
loopne
sub
push
pop
jo
test
xlat
xchg
test
or
ds
mov
mov
dec
shld
mov
mov
push
sub
jbe
jnp
bound
or
push
cwtl
mov
inc
dec
divl
aaa
mov
call
cmpsb
mov
scas
mov
push
sub
aas
ds
pop
sub
add
ret
fst
inc
je
idiv
test
sarl
pop
push
fstl
iret
cmp
xor
mov
mov
pop
mov
xchg
mov
push
cltd
sbb
pop
mov
das
xchg
add
push
jecxz
lret
enter
add
iret
andb
mov
inc
loope
faddl
cs
sbb
cmpsl
stos
cmp
or
or
push
dec
xor
scas
inc
mov
mov
mov
push
jns
push
inc
jne
xcrypt-cfb
cmpsl
fnstenv
movsb
shl
aad
cmpb
jge
dec
out
scas
inc
adc
dec
adc
xor
xchg
mul
dec
lds
fldl
push
cmp
scas
int
shrl
sbb
cmc
push
dec
test
pop
cmpb
xor
shrb
push
cmp
pop
jmp
mov
cmp
arpl
dec
or
cli
and
test
sti
sub
into
push
dec
mov
inc
jae
sahf
mov
imul
fwait
inc
jno
xlat
jnp
sbb
std
std
nop
leave
out
pop
aad
inc
mov
cwtl
inc
or
add
cltd
xor
je
or
ja
leave
out
mov
mov
jno
xor
mov
or
xchg
sub
dec
pop
jno
mov
dec
or
cmp
dec
push
sub
push
mov
out
call
js
inc
cwtd
sub
int3
sub
loop
and
dec
in
inc
addb
hlt
mov
adc
or
in
mov
pop
scas
mov
loope
jb
sbb
mov
adc
sti
inc
mov
out
arpl
jmp
mov
dec
pop
mov
cmpsb
cmp
inc
icebp
les
lret
mov
out
jp
sub
add
idivl
and
adc
xorb
pop
or
ret
sub
outsl
pop
mov
cli
clc
mov
les
loope
pop
pushf
mov
mov
push
inc
sti
cmp
mulb
movsb
enter
movsl
aam
mov
aad
jns
shrl
shr
mov
jb
or
mov
or
das
cli
mov
mov
insl
arpl
std
int3
test
push
lods
push
xchg
mov
stos
fnstenv
xor
testl
fdiv
and
mov
xchg
test
popf
gs
loope
cmc
xchg
std
push
dec
mov
cltd
mov
jbe
in
mov
sub
jge
leave
adc
push
scas
ja
sub
shlb
mov
cld
mov
jns
ljmp
pop
les
sbb
add
sti
test
js
push
test
imul
aam
ljmp
arpl
ret
xor
div
mov
cli
dec
in
push
adc
sbb
cmp
pop
or
aas
inc
push
push
or
cmp
stos
scas
jns
mov
cmp
pop
std
sbb
sub
movsl
adc
or
scas
or
das
mov
loope
pop
fldcw
mov
jge
inc
out
jns
test
cmpsb
mov
mov
shl
pop
jle
lock
jecxz
push
or
inc
adc
js
imul
shll
inc
jmp
arpl
jmp
std
movups
push
in
mov
imul
enter
adc
or
scas
inc
mov
sbb
cmp
add
jle
jecxz
fistpl
cmp
xor
push
hlt
lods
adc
jns
les
sbb
xchg
pop
cltd
mov
lret
adc
mov
add
add
scas
cmp
out
sahf
popl
fcmovnbe
push
imul
and
lcall
push
icebp
mov
xchg
jo
pusha
add
cmc
jb
pusha
mov
cmp
roll
and
pop
lds
and
out
inc
sub
or
jge
shrb
mov
pop
repz
test
test
and
stos
jb
adc
les
mov
add
orl
ficoms
push
jnp
subl
psllq
sarb
sub
jns
lock
lahf
mov
bound
xchg
fsts
lret
adc
and
das
push
dec
adc
mov
scas
jg
ret
sbb
sti
cwtl
cmp
movsb
add
xor
push
push
pop
out
lret
sti
paddusw
and
and
push
jo
cld
push
jne
pop
cmpsb
push
mov
addr16
imul
adc
xor
jne
fldcw
mov
cld
xchg
inc
mov
outsb
mov
popa
sbb
cli
xchg
mov
pop
call
add
insb
rdtsc
dec
inc
lea
mov
adc
sti
jb
dec
xchg
or
mov
adc
shll
addr16
dec
shrb
mov
cmp
mov
push
pop
ja
ja
test
fwait
arpl
push
add
xchg
mov
sbbl
xchg
jge
cs
int
insb
or
push
stos
mov
nop
dec
fbstp
cmpsb
out
push
movsl
mov
popa
mov
xchg
lea
inc
adc
inc
scas
dec
inc
loope
fs
mov
fcoms
daa
test
cmp
push
out
push
fldl
add
rol
cltd
add
addr16
xor
andb
leave
pop
jae
jge
pop
test
dec
mov
push
fxrstor
movsl
sbb
cmp
jne
andl
dec
bound
inc
xlat
in
fwait
mov
fisubrs
jecxz
mov
imull
movsb
pop
mov
dec
lcall
sbb
push
in
fldenv
imull
out
cld
out
or
aad
xchg
dec
push
imul
int
cmp
shr
ds
and
out
push
mov
loopne
lods
shrb
testl
mov
dec
jo
xchg
fidivrl
sub
push
add
jmp
cwtl
mov
jne
pop
mov
mov
push
fidivs
xlat
cmc
imul
incb
pop
gs
mov
leave
ret
call
mov
xor
xchg
fimull
jecxz
popa
push
mov
fiaddl
mov
push
aam
movl
or
xchg
out
fdivl
sbb
mov
lds
add
aas
xchg
mov
add
cmp
scas
test
jb
lahf
lret
or
mov
sbb
ret
scas
std
insb
and
loop
mov
js
xor
mov
xchg
aad
fdivp
push
adc
add
dec
push
std
cmp
out
or
sub
aam
sarb
fdivp
mov
cld
movsb
cmp
adc
mov
mov
and
cmp
pop
imul
mov
mov
or
aaa
out
mov
aas
std
jns
sbb
xchg
xchg
pop
int3
lds
rol
cmp
xchg
into
xor
aaa
mov
dec
xor
popa
xchg
adcl
sub
pop
push
test
fsubr
xchg
add
sub
mov
mov
fisubs
stos
pop
pusha
xchg
add
leave
cmpsl
jnp
je
jecxz
inc
repnz
inc
dec
sbb
mov
mov
pusha
sti
iret
into
aaa
sub
dec
test
push
xchg
mov
mov
cmp
movsl
pop
lret
mov
inc
mov
cmp
scas
push
je
lods
inc
std
sbb
xlat
out
add
mov
cli
lods
inc
mov
cmp
push
test
lcall
data16
bound
out
mov
and
xchg
call
insl
xor
ds
and
pop
fucomp
push
gs
daa
mov
sbb
imul
cld
ret
ret
dec
dec
jg
mov
stc
iret
fneni(8087
movsl
mov
es
incl
nop
out
inc
xchg
xchg
mov
mov
pop
outsb
adc
mov
push
test
sub
pop
add
jmp
imul
pop
mov
into
enter
dec
mov
movsl
popf
jl
xchg
repnz
pop
movsl
repnz
scas
and
mov
mov
in
inc
rcrl
imul
movsb
nop
push
es
or
push
imul
imul
jae
xor
or
test
lock
testb
cmp
cmp
dec
mov
out
sub
mov
loopne
stc
xchg
inc
enter
les
insb
out
fs
dec
inc
fnstsw
mov
adc
fbstp
paddusw
inc
xor
dec
aas
xchg
adc
mov
cmp
das
int3
xchg
cli
xor
mov
movsl
mov
lahf
data16
mov
push
sbb
and
sbb
push
inc
or
add
std
or
sbb
cwtl
daa
jno
jno
xor
push
lahf
lods
xor
dec
cmp
aaa
push
nop
rol
push
divl
mov
fidivs
cmp
popa
mov
and
out
jno
inc
jecxz
push
test
and
mov
ljmp
xor
sub
arpl
cwtl
lret
int3
cmp
pop
xorl
popa
xchg
sbbl
sub
or
ds
jle
ret
fcompl
mov
pop
push
sbb
out
adc
lret
mov
mov
call
xor
cltd
test
dec
shrl
jle
jbe
add
pop
das
jle
imul
inc
and
push
pop
dec
pop
adc
mov
fsubr
int3
inc
adcb
add
jge
pop
ret
bound
xor
or
dec
mov
or
cwtl
test
cmc
add
addl
insb
push
nop
dec
jo
daa
cli
loope
lcall
imul
ljmp
dec
ja
xor
pushf
sub
into
or
cmp
rolb
into
lahf
ss
jge
sbb
cmp
mov
xchg
xchg
in
jnp
outsb
fimuls
sbb
xchg
cwtl
push
pop
mov
out
test
mov
out
scas
or
pop
popa
cmp
mov
push
or
push
orl
or
iret
jecxz
popa
push
fdiv
mov
mov
loop
shll
adc
in
test
xlat
outsb
mov
sahf
stos
popa
mov
lds
xor
pop
test
mov
xchg
push
dec
jmp
sbb
mov
sbb
xlat
jb
repz
in
add
repz
addr16
and
lret
cmp
jne
je
loopne
add
les
and
popf
addb
loope
ljmp
cwtl
stc
or
sbb
popa
pushf
cmpb
cs
insb
jo
in
mov
dec
or
and
push
mov
je
es
sub
add
outsb
dec
lods
js
pusha
clc
xchg
cmp
in
popa
mov
mov
fsub
jae
cmp
mov
pop
paddsb
sub
cmpsb
lds
mov
and
data16
mov
adc
add
cli
or
pop
sti
mov
ret
jo
pop
das
mov
fimull
xchg
inc
gs
jno
mov
inc
mov
dec
pop
lock
or
add
lds
adc
out
lret
mov
mov
mov
pop
roll
mov
repnz
sub
mov
xorl
dec
fcoms
sbb
push
or
mov
fdivrl
push
push
push
lods
js
mov
push
push
xor
dec
inc
es
xor
push
insl
mov
inc
sarb
jmp
mov
mov
dec
test
popf
mov
inc
roll
mov
insb
andl
or
fucomip
push
mov
push
jno
dec
ror
aas
std
or
daa
data16
stc
mov
fistpll
loope
sbb
jb
push
mov
sub
stc
sub
push
insb
cld
insl
out
adcb
pop
in
out
push
mov
pop
lock
inc
imul
ljmp
inc
scas
inc
lock
cli
push
stc
adc
stc
popl
out
das
bound
ss
cmp
bound
dec
gs
pop
mov
fsubp
dec
sub
sahf
dec
cmpsl
orl
movsl
jecxz
dec
cwtl
cmp
out
leave
push
out
or
mov
idiv
stos
rcll
bnd
popf
pop
cmp
mov
jmp
adc
outsl
pop
cltd
and
popf
test
jg
in
cltd
cltd
jge
popf
scas
addb
and
xchg
jnp
movsb
lods
mov
aam
lock
outsb
rsqrtps
cltd
cmpsl
insb
push
pop
dec
push
daa
stos
sub
xchg
in
aas
in
or
mov
xchg
stos
push
movsb
addl
hlt
movsb
sub
pop
sbb
dec
jns
inc
and
xchg
xlat
scas
inc
or
shrl
ret
lods
sti
sub
mov
lods
ja
js
xchg
insl
xor
jge
es
sbb
pop
movsl
mov
and
adc
testl
dec
je
and
inc
add
pop
jns
lret
in
lcall
int3
sub
jg
adc
push
and
mov
inc
pop
lods
cli
repz
movl
or
aaa
call
call
shl
adc
cmc
cmp
pop
jl
ss
movsb
and
nop
pop
sar
repz
dec
xlat
lahf
dec
notb
cmpsb
pop
cmc
adc
fildll
hlt
idiv
xchg
xchg
xchg
test
sub
daa
lahf
mov
adc
pop
inc
jp
pusha
nop
pop
bound
sar
repz
cld
movsl
int3
ret
jmp
and
add
jno
ljmp
pop
rcrl
rorb
inc
movl
jp
sbb
repz
mov
test
inc
pop
cwtl
iret
stos
cli
sub
mov
or
imul
add
and
add
clc
out
imull
inc
sub
jae
sub
mov
cmp
or
push
in
add
jb
jmp
pushf
xchg
jl
mov
jp
scas
jmp
fstps
daa
xor
xor
call
data16
cs
xchg
lahf
shll
fsubrp
das
ja
fnsave
test
stc
jp
sbb
sbb
and
mov
loop
push
jbe
dec
sub
arpl
xchg
or
cmp
mov
cwtl
jle
lahf
and
cmp
stos
xor
cmp
pop
cmp
cmp
shlb
xlat
mov
push
lods
dec
jg
out
imul
jmp
jae
inc
fisttpll
mov
xchg
sub
cmpsl
mov
adc
or
pop
rorb
js
xor
pop
sub
push
inc
lock
push
lret
sti
mov
dec
call
clc
and
adc
inc
cmpb
test
dec
in
call
sbb
mov
insb
lcall
xor
and
mov
mov
push
imul
fsubrl
insb
push
lock
jbe
cmp
iret
jae
and
sbb
sub
adc
or
dec
das
fwait
jle
push
scas
inc
stc
jae
push
in
shl
adc
stc
cmp
jp
jmp
imul
rorb
inc
in
mov
sbb
and
xor
out
adc
jge
dec
xchg
sbb
and
ja
jl
mov
sti
adc
mov
in
pop
add
movl
ret
jbe
cld
iret
cmp
frndint
add
lods
outsl
pop
mov
ret
xor
movsl
xchg
test
inc
scas
aaa
rcrb
mov
fidivrl
pop
xlat
ficomps
cmp
repz
outsl
test
add
mov
and
cmp
sbb
sbb
es
or
nop
jge
jbe
repnz
add
lea
and
add
add
rorl
adc
add
push
xor
or
loop
stos
xchg
int3
add
mov
xor
fs
cmpsl
dec
cltd
xchg
in
mov
jb
xchg
int3
test
roll
jb
mov
lds
ret
push
mov
test
mov
pop
mov
jge
leave
pop
xorl
jge
adc
add
add
lea
dec
mov
subb
je
lea
ret
sbb
pop
stos
test
stc
pop
mov
imull
xchg
pusha
fwait
jbe
mov
cmp
or
inc
mov
pusha
ljmp
stos
adc
test
data16
dec
and
jno
in
pop
dec
sbb
into
andl
cmp
in
push
imul
jl
mov
cs
cmp
and
rcrb
mov
movq
out
addr16
ja
in
dec
in
push
pop
clc
or
dec
xchg
mov
pop
dec
cmp
mov
push
mov
imul
popf
mov
pop
xchg
lods
mov
mov
fwait
sbb
ljmp
ds
icebp
out
pushf
xor
jl
sbb
mov
pop
mov
mov
jne
dec
popa
add
adc
sbb
addr16
cmp
jmp
sbb
int
ljmp
daa
rol
ja
cwtl
pop
sbbb
adcb
popa
lods
cmp
cmp
fcompl
ds
sarl
iret
mov
fwait
loope
xchg
sub
aam
rcrl
xor
inc
or
sbb
shll
dec
jecxz
dec
push
loopne
bound
iret
inc
hlt
cmp
mov
cmc
pop
or
sub
push
dec
sahf
adc
push
lea
push
fwait
test
loopne
pop
xchg
mov
shl
mov
mov
cmp
negl
fcmovbe
call
aaa
iret
movsl
call
dec
push
inc
in
and
adc
fwait
add
stos
bound
fwait
jne
cwtl
lret
jb
jmp
inc
out
pop
scas
fnsave
xchg
sub
mulb
out
and
clc
inc
in
dec
sti
cmpb
fadds
mov
xor
push
xchg
cmp
icebp
mov
sbb
mov
insl
or
inc
jmp
mov
mov
ret
xchg
outsb
inc
inc
mov
cld
outsl
push
jp
cmc
push
pop
int3
ficoms
cmp
scas
mov
xchg
ljmp
push
fnstsw
inc
cmp
sbb
outsb
daa
sub
out
ja
dec
scas
inc
jl
ja
data16
cmp
pop
out
les
and
call
into
ffree
jg
es
and
inc
es
add
faddl
push
push
jg
rorl
shlb
xchg
daa
rcr
pusha
adcl
pop
movsl
cmpsl
xchg
inc
xor
mov
loope
fcmovb
aam
loopne
enter
arpl
loopne
jecxz
out
lods
ss
jb
xlat
enter
icebp
adc
outsl
nop
push
mov
xchg
add
lods
dec
lret
daa
es
add
sub
add
cwtl
cmpsl
loopne
iret
sahf
fdivrs
in
jb
pop
outsl
jo
dec
xchg
jno
push
sti
js
stos
cli
jmp
cmp
lret
pop
cld
or
add
push
int
sbb
cltd
hlt
jg
cwtl
push
cltd
inc
adcl
mov
mov
push
in
test
jbe
stos
jmp
jnp
lds
fwait
push
mov
pop
std
push
into
insb
loop
push
add
dec
mov
xchg
inc
arpl
mov
mov
jle
inc
dec
push
xor
pop
daa
inc
stos
loop
cmp
push
sbb
dec
pop
cmp
sbb
stos
leave
sbb
fcoms
or
jge
xchg
adc
xor
mov
xchg
mov
popa
roll
sub
mov
shl
dec
push
xor
xlat
xor
inc
pop
xor
cwtl
jmp
push
xor
fucomp
push
ud0
lock
hlt
addr16
movsb
jp
insb
ficomps
sbb
mov
inc
push
vpsubusw
scas
in
jae
dec
movsl
inc
scas
and
pushl
push
xlat
mov
push
pusha
or
pop
xor
mov
mov
xchg
adc
mov
sahf
cmpsl
aaa
sbb
jnp
loope
lock
push
xor
test
fdivrl
daa
fwait
int3
loopne
sahf
adc
shll
sahf
sub
mov
jae
orl
and
shl
and
push
mov
push
xchg
ficomps
adc
ss
adc
into
je
test
or
mov
xor
dec
mov
dec
imul
sti
test
sbb
pop
add
mov
mov
add
pop
and
leave
cltd
push
cltd
mov
outsl
lods
jp
std
test
mov
mov
push
mov
mov
les
aaa
jp
mov
aam
xor
fs
mov
sbbl
sub
lods
add
cltd
push
push
lods
into
and
push
enter
mov
out
fdivp
gs
sub
sbb
mov
cli
pop
push
mov
lret
clc
adc
inc
mov
mov
aas
and
inc
clc
jae
sub
push
stos
jno
mov
repz
push
mov
fcomps
test
push
xorb
push
je
jl
andl
movsb
push
movsb
mov
cwtl
sub
mov
dec
mov
ret
shll
scas
dec
mov
decb
aad
xchg
mov
sub
mov
aam
fsubrs
mov
jmp
arpl
rorb
fmull
and
and
movsl
in
in
sub
fs
adc
lods
lcall
mov
enter
fwait
repnz
or
lret
fwait
and
in
cmc
adc
lods
adc
sbb
adc
jno
dec
or
aam
xlat
mov
inc
inc
ret
bound
iret
mov
popf
sbb
stos
add
xchg
add
shll
aam
mov
mov
daa
fucomip
dec
test
lcall
and
adc
xchg
stos
inc
jmp
mov
imul
dec
xchg
ret
cltd
in
stos
std
loop
inc
xor
fbstp
cwtl
xor
or
popf
push
mov
push
xorb
cmp
movnti
js
and
lds
mov
inc
jo
mov
mov
cmp
mov
sub
xchg
add
stos
outsb
and
pop
lret
scas
rorl
mov
popf
mov
mov
iret
jl
mov
imul
cmp
xchg
arpl
sub
cmpps
dec
jecxz
pop
jle
inc
fwait
cmc
pop
fistl
rorb
shl
enter
and
iret
sti
mov
mov
jns
xor
fildll
mov
mov
aam
pop
into
xor
loopne
xor
arpl
mov
dec
es
jl
shrb
mov
or
mov
mov
jmp
or
sbb
aam
imul
and
nop
sub
pop
out
ret
add
pop
dec
xor
fxch
arpl
ss
int3
xor
adc
stos
jo
or
xchg
add
divl
mov
xchg
fists
insl
add
xchg
aaa
pop
repnz
and
outsb
mov
push
filds
push
pop
add
ret
mov
sahf
cmp
popf
xchg
add
sub
sbb
and
sbb
ja
and
add
addr16
inc
sub
pushf
js
or
jge
scas
mov
xchg
pop
shrl
ret
ja
addr16
test
sarl
ds
inc
out
push
mov
xor
insb
cmp
sbb
addb
inc
push
out
aas
daa
fwait
xor
scas
or
adc
cltd
cwtl
dec
jg
nop
or
add
cmp
out
push
in
cwtl
jbe
lret
adc
imul
pop
incb
fdivrp
jle
and
or
outsb
jbe
sub
imul
enter
dec
mov
rorb
sub
jge
and
xchg
xchg
add
mov
and
sub
push
scas
jl
add
lahf
test
sub
or
mov
dec
sahf
pop
popf
in
call
sbb
push
ret
movsb
xchg
loop
popa
jmp
or
mov
test
insb
leave
rcrb
pop
shrb
add
push
insl
popf
mov
push
jno
dec
dec
scas
sbb
push
or
push
push
xor
add
mov
fwait
cmpsl
dec
or
mov
cs
lahf
mov
fwait
push
repnz
pop
mov
ret
pop
and
mov
adc
jae
xchg
out
inc
test
inc
pop
aaa
mov
jge
neg
ds
lahf
in
clc
xchg
lods
sub
daa
mov
jae
ret
cmp
cmp
popa
jnp
rcll
test
mov
jle
in
and
dec
dec
and
shr
and
fidivrs
cmp
xor
push
loop
in
inc
bound
imul
lret
sub
mov
out
adcb
out
or
adc
ds
daa
adc
push
jmp
out
jl
pop
lea
xchg
xchg
icebp
cmp
sub
popa
fucomp
xchg
and
lods
pusha
pop
mov
sbb
add
add
add
pop
xchg
stos
mov
ret
ljmp
decl
mov
sub
adc
std
and
push
mov
cmp
inc
cmp
stos
or
arpl
xchg
adcl
das
push
adc
pop
subb
adc
jge
sbbl
dec
adc
add
dec
mov
inc
sub
and
das
outsl
push
lahf
cld
fidivl
mov
out
mov
not
xlat
cmc
adc
test
lock
scas
bound
ja
jae
xor
push
std
xchg
dec
repz
outsb
scas
add
and
mov
sti
xchg
xor
ljmp
insb
stc
out
bound
pushf
xor
mov
cmp
mov
es
out
lods
mov
or
ljmp
or
cmp
mov
aam
add
in
lds
mov
push
push
push
jl
jne
fistpll
add
inc
mov
add
pop
lret
xlat
mov
pop
and
dec
mov
mull
add
pop
lea
hlt
inc
lcall
cmp
inc
scas
test
fsubrp
push
das
subb
mov
insl
sarb
add
add
mov
les
lods
shl
sbb
dec
sub
bswap
std
aam
jae
fidivs
xchg
sub
std
xchg
pop
mov
sbb
test
pop
pop
ja
std
sbb
push
jle
popf
and
cmp
jae
inc
xlat
xchg
inc
push
xchg
insb
test
inc
jle
je
push
fnsave
push
call
mov
sub
sub
repz
in
lods
inc
push
test
sbb
push
push
shl
push
shll
out
in
or
fs
jbe
cmpsl
mov
mov
cmp
mov
cmp
mov
mov
push
add
push
xor
rorb
dec
adc
shr
test
and
pop
adc
lret
movsb
aaa
lret
pop
ret
dec
jecxz
sbb
rorl
push
sbb
nop
xchg
inc
into
mov
sub
std
repnz
push
repz
push
add
lahf
mov
mov
test
pop
test
loopne
pop
iret
int3
push
jb
cmpsl
lret
adc
loop
jmp
fwait
mov
shll
jnp
push
mov
loop
and
popf
add
mov
mov
push
mov
lahf
push
cs
dec
sbb
fdivl
mov
push
cmp
xor
push
inc
sub
inc
pop
movsl
ficoms
subb
sub
push
mov
imull
repnz
pop
or
push
or
jns
push
cmc
sbb
mov
lds
push
xchg
jmp
imul
movsl
mov
fidivl
mov
je
pop
push
lds
movsb
sbb
cmp
subl
jnp
dec
loope
movsl
mov
push
es
jno
shrb
cwtl
push
out
jecxz
cmp
nop
mov
loop
or
fs
fisubrl
cmpl
ret
es
inc
xor
ret
and
enter
jl
movsl
enter
lods
scas
ficoms
mov
push
fcoml
mov
xchg
dec
mov
adc
mov
jnp
push
insl
push
pop
xor
cld
push
int3
jl
std
pusha
inc
dec
stos
dec
addl
xchg
xor
leave
pusha
ss
add
dec
xchg
add
adcb
mov
ss
lea
pop
test
and
in
cmp
pop
adc
sub
cmpsb
push
rclb
filds
out
cltd
xor
notb
push
add
and
daa
mov
outsb
pop
insb
pusha
dec
ds
in
jo
push
aad
mov
fisubrs
adc
add
pushf
mov
imul
test
xchg
sub
jecxz
clc
pusha
jnp
cmp
mov
ret
dec
and
insb
ja
cmp
mov
aad
or
mov
or
scas
ss
pusha
je
ret
and
std
popa
gs
dec
pop
add
adc
mov
popa
pop
es
add
push
xchg
dec
movb
andl
xor
sbb
sahf
xor
dec
mov
dec
inc
sub
sub
in
test
cld
cs
faddp
ficoms
icebp
and
mov
pop
inc
sub
addr16
sbb
mov
out
rcr
mov
dec
and
inc
inc
xor
fsubrs
dec
out
xchg
les
mov
sbbb
mov
popf
stc
ljmp
or
scas
jmp
inc
mov
pop
fwait
pop
ss
jle
mov
add
jbe
or
inc
pop
cmp
push
adc
loop
push
fwait
pop
gs
sbb
pusha
ljmp
jg
add
dec
xchg
mov
test
pop
ret
test
sub
xorl
sub
or
adc
xchg
pop
and
inc
ret
ss
in
adcb
sbb
movsb
mov
outsl
bound
in
inc
inc
jmp
insl
inc
mov
mov
dec
icebp
inc
xlat
and
mov
gs
scas
add
or
cmp
mov
sarb
imul
pop
inc
sbb
popa
cmpb
shrb
pop
fwait
xchg
add
mov
sbb
and
cmp
sahf
repz
sbb
aam
jnp
push
jb
pop
xlat
sub
lret
repz
popf
inc
mov
pop
sbbl
fidivs
aad
dec
lock
imulb
rol
mov
shr
xlat
rol
loope
les
rcll
jmp
sbb
dec
jae
lret
outsl
in
cli
jns
stos
jne
sbb
ljmp
cs
jne,pn
out
stc
adc
cmp
and
lret
cwtl
jbe
aaa
stos
test
cmp
int
dec
push
loop
pop
loopne
stc
out
add
mov
mov
mov
dec
sti
das
add
mov
es
and
call
outsl
das
fimull
sub
mov
dec
ret
leave
imul
idivl
pushf
lods
pop
xlat
outsb
dec
flds
cs
adc
out
inc
imul
nop
push
ret
les
in
std
lea
dec
and
bound
push
xor
stos
inc
flds
jbe
jg
call
cmc
jno
push
jge
mov
out
xchg
mov
dec
ljmp
inc
fs
sub
inc
outsl
sti
cmpsl
pop
adc
pop
sbbl
jp
movsb
push
leave
and
outsb
push
int
mov
add
and
pop
mov
aaa
es
rol
aad
cmpsb
inc
test
pop
test
push
push
xlat
sub
add
test
xor
xor
jb
or
jge
xor
hlt
data16
sbb
mov
push
fldenv
inc
adc
fwait
in
mov
or
test
fsubrs
in
adc
stc
lahf
bound
int
fsubrs
pushf
sub
test
je
pop
insl
mov
insl
add
xchg
mov
fcompl
leave
mov
add
pop
add
je
mov
pusha
push
das
dec
xor
pop
inc
sub
adc
xor
stc
ss
icebp
cs
adc
add
sub
stos
or
ja
ds
jnp
scas
setb
adc
inc
xchg
jp
sahf
icebp
mov
test
frstor
dec
fisubrs
or
mov
jae
orl
jbe
jg
xchg
mov
xor
push
nop
pushf
arpl
rorb
insb
sub
fcoms
test
xchg
cmp
xlat
push
ljmp
jno
mov
insl
mov
and
aam
or
test
adc
sub
cli
pushf
pop
ret
xchg
loopne
inc
lcall
push
daa
sub
fistps
xor
inc
inc
fdivrs
cmp
out
rcrb
mov
leave
lods
mov
jo
ja
mov
jge
out
leave
mov
out
icebp
push
fisubs
movsb
jg
lret
insl
mov
ret
mov
mov
mov
adc
inc
mov
leave
or
dec
int3
shll
das
aad
stos
pop
xchg
add
sbb
popf
and
and
jmp
movb
mov
addb
mov
mov
loopne
xlat
mov
add
push
stos
pop
dec
in
fbstp
out
push
jg
push
test
xchg
mov
lock
push
pop
in
push
mov
dec
pop
inc
stos
sbb
int
pushf
jae
mov
cli
jne
cmp
xchg
xchg
or
sub
insl
aad
imul
fcoms
cmovge
add
adc
dec
cltd
std
mov
insb
ror
adc
pushf
dec
sbb
icebp
mov
pusha
push
mov
pop
call
inc
dec
pop
sub
and
fcom
cmp
sbb
daa
aam
pop
outsl
ret
movsb
xor
lret
sub
jns
adc
mov
sbb
jg
mov
andl
inc
add
mov
ret
int3
sarb
mov
sbb
and
jecxz
call
outsb
inc
test
popa
repz
call
sbb
xor
adc
leave
jns
push
gs
shll
cmp
ret
fnstenv
icebp
cwtl
jae
cld
mov
xor
jb
jno
fisttpll
sub
or
adc
sub
gs
sahf
push
addr16
mov
addr16
jae
dec
or
sbb
push
enter
mov
or
inc
in
fsubl
int3
fnstenv
inc
rcll
aas
scas
sbb
iret
arpl
lea
out
mov
push
in
mov
sbb
cld
dec
daa
loope
cmp
dec
ds
gs
pop
add
lds
push
dec
filds
stc
push
pop
daa
pop
cmp
mov
sub
mov
mov
int3
shlb
inc
push
fstpt
into
or
add
sub
loopne
jne
imul
jo
xchg
sbb
xchg
mov
inc
push
int
xchg
ljmp
xlat
jno
leave
jne
lret
dec
shr
dec
push
and
movsl
negl
rolb
mov
pop
cmp
out
outsl
mov
jl
inc
out
inc
xchg
nop
mov
bound
jl
jle
pop
jns
add
jne
add
push
mov
dec
dec
ja
push
loopne
test
into
movsl
pop
insb
mov
mov
cmp
outsb
les
test
xor
cmp
xor
jmp
out
test
cmc
sahf
in
jbe
fiadds
sarb
jns
in
icebp
int3
xchg
sbb
ficomps
mov
std
mov
add
cmp
cwtl
xlat
aam
dec
int3
push
stos
jbe
cmp
jge
aas
sbb
in
pop
insl
dec
das
jne
fsubl
insl
adc
add
aas
in
mov
fcmovbe
xchg
dec
les
xorb
inc
arpl
cmp
pop
push
and
cmp
mov
stc
or
imul
mov
cmp
movsb
lds
and
aam
dec
xlat
adc
fidivrl
mov
clc
arpl
mov
xor
xchg
jmp
lret
hlt
xor
and
jl
pushf
es
aas
int
xor
lcall
andl
jp
out
xchg
jle
jecxz
jmp
ja
ret
mov
cli
mov
pop
pop
xor
fs
icebp
mov
movsl
movb
cmp
orb
popl
leave
and
or
insb
jge
push
lahf
mov
idivl
in
mov
daa
mov
push
sahf
and
dec
cli
sar
cld
stos
test
sub
popf
cmp
or
cmp
popf
in
push
std
or
sub
push
add
shl
and
pextrw
arpl
lahf
sbb
sub
push
jmp
or
int
xchg
popa
out
cmpsb
pusha
add
rolb
xor
in
call
insb
sbb
mov
mov
aam
xchg
mov
in
jae
sbb
pop
icebp
xor
lods
fwait
sahf
push
adc
jmp
mov
push
jae
add
les
mov
push
sub
jmp
xor
cmpsl
ror
fcoml
ss
push
leave
jae
mov
adc
mov
mov
push
inc
add
int
xor
fiaddl
shrb
cmp
add
lock
adc
push
loopne
fistl
roll
scas
mov
rcll
xchg
push
jnp
sub
popl
and
ss
pop
movsb
push
out
mov
fs
fs
mov
int3
hlt
inc
mov
ror
repz
jo
inc
cmp
dec
jecxz
insb
inc
or
das
lret
dec
subl
pop
add
je
nop
push
fnsave
andb
mov
and
iret
xchg
sub
pop
add
push
inc
orl
push
loopne
fmuls
mov
and
add
jae
rcrl
leave
push
mov
mov
mov
pop
or
lret
sub
icebp
dec
jno
mov
imul
jle
mov
jg
repnz
in
mov
je
aam
rcrl
mov
sarb
ljmp
js
daa
mov
in
outsl
push
xor
call
test
inc
jge
mov
inc
push
mov
je
lahf
and
jno
cmp
test
jns
mov
call
clc
jae
lea
or
lcall
xchg
or
and
inc
ficompl
and
mov
cmpsl
popf
xor
mov
dec
jle
ds
pop
sub
test
std
cli
xor
cli
stos
inc
sub
cmpsb
mov
ds
pop
lods
jae
pop
mov
sti
jle
out
pop
sti
cmp
icebp
dec
loopne
dec
imulb
add
sub
out
inc
sub
int
inc
inc
je
incl
lret
and
mov
call
add
hlt
dec
mov
shl
leave
push
cmp
sub
lahf
mov
dec
mov
xchg
out
sub
das
arpl
sub
pop
pop
adc
popl
sbb
sbb
frstor
sti
dec
iret
xor
mov
in
add
rolb
jbe
and
cmp
cmp
sub
sbb
int
lret
push
inc
cli
dec
rol
jo
fsubs
testb
cmpsl
popf
xor
int
mov
mov
stos
lahf
push
xor
mov
testl
lret
xor
fwait
stc
push
push
fstl
movsl
push
stc
adc
test
pushf
insb
xor
pop
fsubrp
jp
push
cmp
ss
rep
sbbl
cli
push
js
cli
gs
sub
push
mov
sahf
nop
sub
in
in
mov
lods
insl
into
pop
ret
dec
pushf
sbb
in
aas
and
dec
adc
inc
sbb
push
mov
jl
in
addr16
xor
fs
xchg
or
jno
js
cmp
sti
cmp
aas
fisubrs
xchg
sbb
leave
mov
popf
stc
inc
mov
sbb
inc
les
out
cmpsb
jb
mov
in
imul
into
xor
or
icebp
rorb
addr16
in
dec
mov
cld
sub
sahf
mov
fwait
and
mov
dec
lret
fs
mov
adc
mov
cmp
dec
add
sbb
pop
int3
cmp
aam
es
xchg
and
mov
test
test
push
sub
or
pop
jecxz
fucomip
sti
ret
test
sbb
mov
xlat
mov
in
xchg
adc
sub
and
lods
ss
push
jl
lcall
sub
cmp
and
repnz
mov
mov
pop
shlb
mov
xor
mov
mov
and
sar
mulb
test
push
cltd
jb
aas
jbe
rol
sbb
cmp
sub
sti
shlb
ds
inc
pushf
mov
sahf
push
inc
imul
popf
sub
imul
cmp
mov
rcll
mov
push
arpl
pop
xor
arpl
cmpsl
ds
jo
call
mov
push
insl
popa
jmp
cltd
mov
cvtps2pi
adc
or
into
movl
sub
inc
and
aam
dec
xchg
sub
jnp
frstor
cwtl
and
popa
popf
xor
into
daa
cmp
mov
pop
insb
xor
daa
xor
adc
cltd
aam
out
mov
cmp
xchg
sub
xchg
es
jle
dec
insb
int3
leave
je
pop
dec
filds
mov
adc
fsubrl
mov
das
fildll
ret
rcl
mov
jle
mov
ror
cmp
cltd
repnz
lcall
xor
push
xchg
cltd
add
aad
push
mov
xchg
in
mov
jnp
in
xchg
cs
sbb
pushf
dec
aas
sbb
test
and
or
fisubs
dec
test
jl
mov
push
and
inc
movsl
jns
add
into
dec
sarb
add
scas
xchg
mov
jp
jno
mov
dec
addr16
jnp
mov
fstpl
add
jb
mov
dec
lods
stos
jnp
push
jmp
test
out
sbb
dec
fwait
sbb
into
stos
mov
pop
in
rclb
jnp
jb
repz
das
jmp
or
call
outsl
mov
pop
add
lods
fldl
and
fs
push
ja
movsl
mov
push
loope
or
add
pushf
sbb
sarl
outsl
idivb
dec
hlt
mov
insl
xchg
pop
icebp
int3
shlb
pandn
sbbl
cmp
mov
je
scas
push
in
pop
xor
cmc
mov
jae
fsubrs
cmp
scas
pop
mov
inc
mov
imul
xlat
outsb
mov
incb
mov
add
scas
cmp
jbe
mov
mov
outsb
fwait
mov
cmp
fnsave
xchg
pop
stc
cltd
inc
lcall
and
repnz
enter
jg
mov
rcrb
stos
neg
inc
mov
cmp
mov
inc
fcoml
mov
push
and
fidivl
jmp
and
mov
mov
push
jne
cli
fucomip
repz
lahf
outsb
sbb
cmpsb
xlat
lea
into
adc
in
test
cmc
push
push
pop
nop
hlt
mov
mov
add
mov
dec
xchg
dec
pop
jno
nop
sub
jb
and
aam
orl
adcl
cmp
jne
sbb
pop
jb
cmp
inc
sbbb
xchg
push
lods
cmp
xchg
or
jl
aam
push
mov
and
sub
stc
xchg
mov
leave
gs
cli
mov
sbb
fdiv
or
push
jo
dec
jo
pop
mov
and
test
lret
mov
add
xchg
or
dec
adc
adc
popf
adc
int
pop
xchg
imul
pusha
mov
cmpsl
out
fidivl
mov
cmp
insb
mov
push
ret
push
fdivrl
in
mov
out
pushf
mov
push
mov
push
or
mov
jns
stc
add
in
movsl
or
pop
bound
wbinvd
sbb
lock
aaa
enter
aam
das
or
push
pop
loope
sbbb
ja
iret
mov
lcall
mov
jmp
jno
stc
mov
jecxz
lret
ret
gs
aam
fadd
sahf
add
xchg
pop
out
fsub
scas
inc
aad
cltd
and
ss
or
repnz
add
and
in
cltd
pop
jns
inc
aam
and
or
inc
sbb
sub
hlt
sbb
leave
add
push
sub
cmp
dec
es
cltd
sub
rcr
jo
sti
mov
push
fisttps
and
cmp
call
jae
test
and
xchg
add
xchg
pop
int3
mov
sarl
loop
fisttps
mov
jae
ret
inc
inc
fadds
shrb
jle
repz
add
inc
cmp
and
sbb
add
sti
xor
loope
jg
mov
stos
adc
cmp
jle
ret
jecxz
mov
push
shll
sub
sub
shll
sbb
subl
cmp
loopne
dec
dec
and
int
or
jle
mov
jae
shll
aas
push
and
rcr
and
daa
cmp
cmp
jmp
ror
repnz
fucomp
xor
mov
mov
sbb
xlat
aas
xchg
pop
test
add
dec
pushf
insl
mov
pop
out
out
xor
dec
loop
xchg
sbb
lds
stos
incl
pop
pop
cmp
ficomps
xchg
inc
or
xchg
aam
jg
jae
mov
fmuls
dec
xor
orb
xchg
mov
add
scas
cmp
test
xchg
adc
mov
or
aad
mov
cmp
xchg
mov
movsb
ljmp
stos
mov
dec
loope
cmc
jbe
and
nop
mov
lret
xchg
sub
dec
ljmp
cmpsl
inc
dec
roll
es
mov
sub
loopne
inc
cmp
bnd
roll
inc
fadds
and
movsb
aaa
fnstenv
push
xor
and
fcomps
addr16
dec
in
jmp
xorl
jns
sbb
fwait
sbb
test
jb
pop
jo
xor
mov
push
sbb
jnp
jle
fidivs
enter
mov
adc
inc
cmp
xchg
je
jnp
pop
mov
xlat
mov
fistl
xor
cmp
insb
jge
pop
ret
jne
cmp
pop
xchg
scas
dec
or
jb
xor
jne
rcr
jno
mov
xchg
mov
fisubrs
push
lods
add
mov
inc
xor
shr
nop
movb
sub
mov
out
call
adc
mov
xchg
imul
es
sub
pop
loop
test
add
mov
mov
stc
test
fdivrp
pushf
push
pop
out
dec
xor
lcall
add
xor
es
xchg
add
int
ror
mov
mov
repz
adc
and
leave
leave
push
push
stos
xchg
mov
into
je
scas
test
xchg
mov
xor
push
mov
mov
out
clc
addr16
jno
cli
lret
xor
nop
outsb
xor
addr16
mov
fists
mov
ja
push
jno
sbb
jle
outsl
mov
mov
mov
outsb
mov
mov
jne
pop
mov
mov
ds
shll
or
push
pusha
jbe
sar
stos
fldenv
jge
mov
pop
mov
in
add
xor
push
push
jmp
inc
add
cmp
pusha
ret
xor
mov
lods
mov
dec
leave
js
or
cmp
sub
inc
lods
loop
aaa
and
sbb
xchg
dec
mov
inc
sbb
sahf
loop
mov
cmp
adc
dec
ja
push
stos
cmp
insl
dec
jp
mov
sbb
xor
and
nop
pop
daa
arpl
fld1
roll
sub
xchg
popa
mov
cli
mov
and
mov
mov
push
int
rclb
push
outsb
fwait
test
inc
adc
add
dec
lret
inc
rcrb
loope
add
into
aaa
addb
mov
loope
fwait
pop
cmp
ss
adc
icebp
dec
adc
iret
fidivrs
jmp
pusha
repz
fcoms
dec
cmp
imul
test
and
sub
fs
jae
dec
popf
or
and
dec
loope
jo
jmp
mov
int
cmp
divb
xorl
pop
mov
adc
stos
and
push
xchg
xchg
fistpl
test
pop
pop
repz
imul
push
aad
nop
jmp
jmp
adc
add
test
test
imul
push
push
mov
lods
or
and
in
xchg
fisubrs
scas
mov
popf
int3
push
insb
fimuls
inc
lret
cltd
jp
lea
xchg
jmp
test
ret
xchg
add
pop
cld
inc
ret
fldl
push
pushf
pop
popa
inc
lcall
push
mul
pop
mov
leave
stos
flds
push
lret
popa
mov
outsb
les
mov
test
js
jge
mov
sub
js
loop
adc
cmp
fs
add
jmp
jl
jo
je
mov
pop
test
and
sti
pushf
outsb
dec
loopne
rorb
je
stos
inc
cmp
cwtl
pop
insl
in
jmp
das
repnz
nop
xchg
push
sub
jle
enter
fnsave
fs
popa
movsb
ja
fdivrl
pop
inc
jns
mov
fbld
shl
lret
into
data16
mov
pop
cmpsl
rcll
imul
movsl
lds
cmp
fstl
shrb
mov
loopne
test
sub
int
dec
mov
loop
dec
movsl
jnp
add
test
add
or
pushf
push
leave
int
jo
out
mov
push
jo
mov
fisttpl
jo
lods
les
xchg
add
sbb
xchg
aas
in
sub
mov
cmp
mov
jg
loope
popf
nop
cmc
inc
subl
push
lret
mov
stc
mov
jp
xchg
push
rol
nop
add
dec
nop
jns
ret
clc
push
pop
jne
sbbb
aad
in
lea
cli
outsl
mov
cwtl
scas
pop
mov
in
ja
pop
mov
aam
in
lds
mov
das
jl
outsb
pop
lahf
stos
add
jo
xor
insb
mov
lret
repz
pop
cmpb
mov
movb
dec
in
mov
sbb
dec
test
xor
repz
test
xchg
mov
sarb
mov
mov
mov
ret
mulb
nop
ja
mov
pop
add
mov
push
and
push
inc
push
fwait
xor
leave
mov
mov
pop
cld
adc
dec
loopne
out
sub
hlt
push
ja
ja
in
pop
neg
adc
jg
add
jno
sub
sbb
ret
mov
addr16
pusha
imul
or
fcoms
mov
dec
mov
inc
or
in
popa
clc
sub
xchg
sub
cmc
xor
pop
test
dec
fstpt
movsl
imul
out
jg
js
jg
xor
loopne
or
sbb
popf
addl
cmpsb
fxam
dec
roll
inc
pmaxub
lret
push
and
mov
cltd
mov
negb
shll
pop
dec
mov
test
aaa
clc
fnsave
test
rol
adc
inc
inc
out
gs
mov
mulb
int3
shl
rorb
fildl
inc
int3
sub
jl
fists
je
xchg
mov
and
cli
pop
js
mov
cmp
out
dec
jmp
es
push
sahf
mov
ja
lods
mov
and
push
inc
dec
push
xor
sub
sahf
lock
and
sti
ficoml
sub
mov
or
mov
scas
cmpsl
jecxz
sbb
ret
jge
filds
sbb
dec
xor
iret
pop
enter
mov
jo
data16
sbb
mov
mov
xchg
test
sahf
dec
push
sub
nop
ret
xlat
les
mov
adc
and
jb
sahf
clc
jns
inc
fnstcw
xlat
pop
stos
ss
dec
scas
inc
jl
ljmp
lret
or
jl
aaa
mov
imul
push
mov
or
dec
push
jl
jae
lods
add
push
lock
push
mov
and
fs
xor
xor
add
sti
pop
imul
push
dec
mov
repnz
in
subb
mov
xchg
and
stc
push
cmp
sbb
outsb
out
daa
in
or
and
dec
jle
push
sti
jmp
and
xchg
dec
pusha
mov
xchg
pop
cmp
pop
cmp
das
enter
jb
pop
mov
add
jno
or
bound
ret
mov
inc
jmp
xchg
outsb
aad
ss
outsb
and
cmp
jecxz
dec
jg
jno
mov
scas
adc
test
cltd
and
inc
or
aas
fistl
das
cmp
outsb
stos
cltd
stos
xchg
mov
push
dec
and
cmpsb
xchg
in
ret
sbb
push
ljmp
test
sbb
inc
jle
xor
daa
pop
inc
mov
sbb
pusha
adc
adc
push
fbstp
in
cmc
das
in
push
popa
shlb
mov
rol
lods
or
stos
inc
cmp
inc
xor
add
cltd
sbb
pusha
dec
cmp
sbb
out
mov
in
ds
dec
dec
or
popf
sub
in
add
fsubr
sbb
jo
aad
fisubrl
ja
sbb
xor
cld
and
cmp
xor
pop
test
mov
and
sarb
push
or
cmp
insl
adc
and
cmp
add
dec
scas
inc
jge
outsb
mov
or
cmp
lahf
push
cmpsb
testb
sarb
fldcw
add
push
stc
cmp
ffree
ljmp
int
fs
mov
cld
push
rcrl
cmpsb
cmp
xor
inc
arpl
out
into
mov
bnd
cmp
mov
stos
push
inc
dec
push
add
fwait
mov
mov
mov
push
add
mov
inc
inc
xchg
push
mov
fwait
mov
push
mov
jp
xchg
rep
cld
ljmp
mov
mov
xchg
sbb
shlb
add
xchg
xchg
pop
rolb
xchg
movsl
pop
out
out
xchg
cmp
jbe
mov
faddl
mov
mov
lret
pushf
or
inc
and
or
mov
stos
leave
ffree
jle
subb
loope
fdivrs
clc
stos
push
rcrb
adc
jmp
cmpsl
sub
add
cld
dec
cmp
mov
add
mov
cmp
cmp
xchg
mov
out
or
or
add
mov
add
jno
sbb
mov
inc
pop
imul
dec
mov
fldpi
dec
push
insb
shlb
mov
imul
scas
mov
ret
mov
insl
xchg
pop
jmp
cmpsb
pop
inc
pop
or
out
test
lret
int
call
or
notb
mov
cld
xor
out
sbb
push
test
nop
std
cs
sti
rolb
repz
in
adc
push
enter
decl
cmpsb
das
fsubrs
lret
out
lret
shll
leave
mov
dec
sbb
push
ljmp
mov
test
fsubrs
sti
lahf
repz
push
out
test
mov
xchg
dec
pushf
ret
fcomps
mov
lock
jno
int3
xor
sbb
outsl
insl
and
es
cltd
sub
xchg
mov
stc
or
push
or
mov
xchg
push
push
loop
dec
leave
sub
std
cmp
fisubrl
mov
mov
sub
and
adc
push
jbe
jle
outsb
stc
and
popf
push
nop
std
add
cwtl
repz
repz
repnz
mov
adc
test
pop
aad
inc
sti
pushf
decl
int3
mov
sbb
add
loop
lods
popa
clc
fimuls
shlb
mov
push
daa
cwtl
hlt
add
rcrb
dec
call
aam
adc
test
addr16
xchg
dec
add
jle
cltd
orl
pop
out
dec
cmp
cmpsl
sub
jne
mov
pop
movsb
test
mov
mov
in
xor
loope
xchg
cmp
mov
icebp
inc
xchg
mov
jnp
pop
xchg
scas
mov
add
pushf
mov
lahf
orl
adc
or
lock
stos
mov
repnz
scas
mov
popf
cwtl
call
xor
mov
sahf
fs
mov
outsb
mov
test
mov
ret
lds
inc
outsl
sbb
test
scas
inc
mov
repnz
push
or
hlt
lret
hlt
cs
or
cmpsl
push
xor
in
enter
push
jp
push
sub
cmp
sbbb
aad
pusha
inc
into
dec
and
daa
add
shrb
jecxz
lods
pushf
inc
jb
push
lods
xchg
int
cmc
sbb
mov
stos
mov
cltd
xlat
jbe
andb
push
jae
mov
mov
and
imul
lcall
rcrb
je
inc
mov
les
outsl
dec
loop
stc
adc
scas
dec
addr16
jge
and
and
popa
dec
in
ja
daa
gs
pop
mov
jmp
or
lock
jecxz
xor
ss
jno
imul
mov
adc
in
notb
push
mov
xchg
stos
lahf
rcl
outsb
ret
mov
leave
jecxz
outsb
dec
loope
fs
pop
or
or
cld
mov
mov
int
lahf
inc
xchg
dec
jmp
sbb
xor
rolb
ljmp
fdivl
sbb
and
cmp
push
cmpsb
sbb
clc
push
jmp
lret
mov
dec
pop
in
sub
add
sti
lods
mov
pop
pusha
cmp
call
call
aas
dec
jg
std
mov
mov
movsl
movl
mov
xchg
ja
out
js
stos
lea
ret
roll
outsb
lea
inc
adc
sti
fsubs
xchg
dec
movl
icebp
insb
out
sbb
or
push
add
and
lods
loopne
inc
fwait
lret
test
test
jns
cwtl
repnz
xor
sbbl
sbb
and
lret
ljmp
pop
or
aad
ret
mov
and
fcompl
or
inc
sti
daa
mov
xchg
sbb
mov
jge
inc
scas
xchg
jge
call
or
xchg
lgs
js
sub
or
aam
and
cli
push
divb
add
cli
jne
jl
push
fsubrl
movsl
stos
and
aas
je
inc
jbe
leave
addl
std
inc
push
pop
cs
dec
fs
push
aas
test
call
sbb
aaa
into
cli
clc
or
mov
imul
in
stc
sbb
repnz
gs
sub
pop
cmc
in
mov
xor
or
push
gs
fldenv
inc
clc
movsb
or
out
adc
cmp
loop
cmp
push
stos
dec
loopne
jle
pop
or
push
movsbl
popf
add
add
xor
lea
aaa
repz
mov
sahf
jl
iret
ds
sbb
ds
sub
nop
sbb
cmpsb
jle
cmp
pop
mov
cltd
sub
flds
pushf
sub
add
ficoml
mov
popa
fsubrl
int
negb
pop
clc
aas
sti
cld
and
les
mov
dec
cmpl
ljmp
loope
mov
sbb
adc
cmpsb
mov
push
sbb
sbb
ret
mov
in
and
imul
call
mov
stos
jmp
mov
les
inc
push
dec
popa
xlat
clc
lahf
shll
sbb
mov
in
sbb
in
add
pop
fidivs
add
push
das
fcmovne
fs
push
jmp
mov
les
mov
pop
jmp
leave
add
xor
ds
sti
dec
or
pop
xor
and
lea
pop
sbb
xor
mov
cmp
pop
scas
mov
cmc
icebp
dec
add
lahf
xchg
dec
or
movsl
icebp
popa
test
and
lret
and
jbe,pt
xchg
xor
adc
dec
mov
scas
push
xor
push
push
add
dec
fwait
les
dec
scas
out
cwtl
dec
fldt
fwait
push
out
int3
cs
movsl
mov
adc
jns
ret
out
xor
std
cmpl
mov
sub
in
add
mov
cli
push
mov
out
inc
push
es
fidivrl
aas
mov
adc
mov
rcrb
das
mov
cmp
lods
rcrb
idiv
xchg
xchg
ss
jle
mov
popf
popf
flds
in
std
fisttpl
pop
mov
push
add
jb
fdivrp
jle
dec
and
push
push
mov
scas
loop
mov
fildll
aam
mov
daa
bound
sahf
sbb
aas
and
hlt
pop
inc
jne
leave
mov
sahf
mov
pop
lret
xchg
pop
fs
push
addl
sub
movsl
cmp
test
hlt
push
ret
jg
faddl
mov
pop
push
das
cmp
jnp
and
add
movsb
mov
dec
mov
or
mov
add
dec
ss
stos
inc
cli
mov
leave
outsb
adc
rorb
sahf
out
iret
fcmovnb
or
es
and
divl
fcomps
notl
sbb
lahf
xchg
add
adc
mov
cmpl
sbb
dec
outsl
jmp
dec
in
push
dec
arpl
out
insb
cli
and
ljmp
xchg
adc
ds
cmp
xchg
inc
iret
or
sbb
lahf
jbe
jbe,pt
dec
jge
adc
xor
xchg
lcall
jge
popf
xor
inc
cmp
push
jecxz
jae
mov
gs
sub
xchg
in
inc
jo
out
xor
imul
push
movsl
inc
and
dec
popf
and
dec
mov
sub
cmp
imul
aam
lods
push
scas
sub
xor
lods
jae
inc
mov
add
push
movsl
sahf
cmp
dec
xor
lahf
pop
inc
cmpsb
and
cs
dec
dec
cmp
test
mov
mov
mov
jns
loope
idivl
jns
outsl
sbb
mov
pop
mov
aaa
nop
mov
pop
cmpsb
test
push
adc
inc
mov
lods
out
and
lea
lods
xchg
test
inc
ret
pop
clc
hlt
iretw
lret
in
outsl
dec
ljmp
popf
clc
mov
adc
out
and
aad
fimull
lahf
push
xchg
adc
call
push
mov
push
inc
cwtl
jp
pop
in
fs
or
cmc
std
outsl
ret
in
add
aad
add
mov
xchg
das
enter
dec
in
outsb
mov
imul
rcll
mov
rclb
fsubr
pusha
out
pop
cmp
xor
dec
jo
dec
xor
push
adc
mov
jle
sbb
xor
clc
xor
mov
fs
shr
and
sahf
push
loopne
dec
fdivrs
movsb
jecxz
sbb
cwtl
das
mov
shll
pcmpeqw
jp
mov
inc
push
sarl
xchg
sub
les
dec
loope
inc
popf
lahf
loopne
arpl
cmp
test
mov
fisttps
push
add
mov
scas
and
mov
rcrb
dec
xchg
pop
daa
fucomi
fistpll
repnz
mov
outsl
jns
pop
iret
ds
jbe
mov
in
cld
aad
popf
test
inc
jle
and
pop
test
mov
jb
daa
mov
jmp
or
loopne
in
lods
inc
pop
out
push
in
lret
pop
repz
mov
mov
jecxz
int3
fs
jmp
jmp
pop
pop
sub
inc
lcall
arpl
int3
arpl
imul
adc
dec
xchg
ficompl
mov
push
cmpsl
aaa
xchg
pop
and
movb
add
push
push
rorb
mov
add
dec
jne
xchg
test
aam
xchg
pop
lods
sbb
arpl
cld
mov
adc
in
xchg
mov
out
js
sbb
into
scas
mov
ds
in
mov
in
mov
lcall
pop
in
pop
lret
lret
rep
lret
cmp
lret
aad
push
push
shrb
repz
stos
icebp
lock
stos
jmp
adc
in
cld
fwait
mov
xchg
dec
dec
lahf
sti
and
hlt
dec
popa
or
xchg
push
ja
fbstp
loop
pop
clc
sub
pop
sbb
dec
outsl
jmp
imul
and
cmp
dec
mov
in
mov
fisubs
sbb
int
lods
mov
fildll
jmp
inc
test
je
ds
adc
cmc
lcall
in
lea
das
adc
fcomps
xor
popa
test
mov
fldl
aas
inc
call
repnz
fsubr
sbb
jns
mov
sbb
ljmp
jno
out
clc
inc
fmull
dec
test
mov
mov
shrb
je
push
imul
sub
dec
xchg
jbe
repnz
icebp
xchg
pop
cmc
mov
sub
xchg
das
mov
jns
sub
lods
ja
ret
arpl
cmp
dec
sub
xor
popa
insl
jbe
std
daa
fsubrp
stc
arpl
pop
push
dec
add
enter
and
mov
pop
fbstp
xchg
mov
dec
push
cld
outsl
sbb
adc
push
rcr
mov
jb
cltd
pop
dec
mov
roll
mov
cld
filds
hlt
adc
shll
cmp
pop
stos
cmp
popf
popf
or
sbb
je
sarl
seta
pop
aas
xchg
mov
test
or
add
jo
cmpsl
ret
rcrl
insl
add
dec
fists
aad
mov
fsubrl
lret
movlps
xorl
jbe
out
dec
inc
xchg
lds
jecxz
sub
push
jnp
mov
mov
or
xchg
mov
ret
shll
push
inc
repnz
mov
setl
sbb
xor
in
out
lret
sbb
fdivrl
push
jle
sub
pushf
ja
adc
add
push
test
xor
test
inc
push
repz
data16
push
sbbb
xor
and
mov
dec
scas
addr16
pushf
xor
outsl
push
inc
pop
test
push
or
dec
movsl
cmp
mov
push
mov
clc
xacquire
jno
pop
cmp
mov
mov
mov
xchg
mov
push
xchg
dec
push
hlt
xor
fnsave
mov
xchg
out
scas
inc
cmp
xchg
dec
xchg
mov
pop
xchg
mov
add
jbe
sbbb
pop
movsb
ficoml
out
je
out
nop
lods
pop
dec
aam
into
add
sub
or
add
xchg
or
cmp
pop
pop
sub
popa
or
push
sbb
popf
dec
sub
cmp
pop
push
jmp
cltd
push
jo
fldl
shr
and
sbbb
and
addr16
pusha
lahf
push
std
je
sbb
pop
cmpsb
out
inc
lds
outsb
push
sti
xor
push
movsb
inc
push
mov
movsl
adc
scas
repnz
cli
call
aaa
pop
jne
inc
pop
xchg
into
mov
addr16
call
lods
in
outsl
aad
rcll
inc
in
ljmp
jmp
orl
add
and
mov
outsl
imul
pop
jbe
call
add
jo
stc
pop
mov
test
sub
push
imul
insl
into
loop
mov
cli
lcall
in
addl
pop
and
push
mov
push
rdtsc
cli
adc
inc
lret
lock
aas
cmp
lea
and
push
jae
push
test
inc
insl
pop
mov
adc
sbb
add
mov
xchg
pushf
sbb
cmp
push
inc
and
cmpsl
out
ret
pop
inc
pop
xchg
lcall
insl
daa
lds
and
xchg
mov
js
subb
jge
inc
mov
out
lahf
int
fisubl
fistpll
mov
lds
push
popa
cli
scas
sahf
inc
lret
adc
data16
jns
lods
movsb
es
mov
aam
push
mov
jge
fidivl
sbb
out
dec
add
imul
scas
xorb
in
ficompl
xor
lea
cltd
cld
sbb
popa
icebp
outsl
add
lahf
cmp
xor
or
ja
push
bound
repz
mov
scas
sub
in
mov
mov
aad
pop
jg
pop
mov
insb
jg
xchg
data16
lds
testl
cltd
dec
mov
hlt
mov
add
movsb
mov
lds
xor
sbb
pop
or
jle
mov
notb
fcmove
add
ss
cmp
sbb
and
mov
sub
andb
gs
xchg
push
pop
jge
cmpsb
imul
in
sub
sti
push
lods
cmp
cmc
adc
int3
mov
js
and
lret
ds
push
out
stc
push
or
dec
inc
sbb
push
cld
push
xchg
pop
jno
xor
jl
shll
popf
hlt
xchg
cltd
sub
adcb
inc
sbb
lcall
sbb
inc
popl
and
cmp
xchg
pop
sbb
pop
addr16
arpl
int3
xor
dec
pop
or
lods
mov
jns
and
push
in
leave
movsl
push
add
ljmp
dec
cld
jo
popl
and
lcall
adc
add
jno
adc
inc
aaa
lcall
push
clc
mov
cli
push
jae
daa
bound
movsb
cmp
xchg
ret
lock
clc
mov
ja
xor
push
xor
adc
subl
and
or
in
movsl
adc
aam
push
mov
xchg
lods
das
add
adc
enter
loope
adcb
cmp
mov
shrb
ja
stos
sarb
jne
ljmp
mov
add
and
adc
andb
inc
or
ror
sub
push
inc
mov
add
test
dec
cwtl
inc
push
fdivs
aas
divl
fldenv
les
add
push
jne
adc
subb
jno
pop
test
fcompl
and
add
fsubs
inc
pop
push
lods
mov
mov
add
adc
xor
mov
enter
mov
lds
cmp
mov
popf
xlat
into
mov
inc
pop
mov
popa
cmp
xchg
lea
andb
cmp
je
popa
lods
sub
pop
aam
int3
and
push
shlb
push
ljmp
mov
aam
mov
movsb
sbb
push
add
lret
jne
sub
das
add
inc
lods
dec
adc
shlb
cld
ds
adc
orb
jb
js
rorl
mov
test
and
dec
mov
fimuls
movups
xchg
add
ret
xlat
add
mov
add
push
jmp
push
outsl
loop
add
divb
add
out
mov
fs
out
inc
inc
and
jno
in
test
int
test
lret
xor
cmpsb
inc
imul
iret
xor
adcb
xlat
inc
ficomps
jae
xor
cmp
and
jl
add
mov
fwait
xchg
mov
cmp
mov
inc
push
repnz
popa
test
jp
cmp
mov
sti
add
aam
stos
and
and
mov
scas
pop
enter
and
jmp
dec
xchg
ja
fisubrl
test
add
pop
hlt
lds
xchg
loopne
int
mov
insb
cmpsb
mov
and
sub
stc
int3
fs
call
nop
stos
aad
fisttpl
fildll
jb
movsl
pusha
sbb
bound
sbb
add
sub
es
xchg
mov
mov
cmp
rol
push
jl
add
rcll
fnsave
negl
sub
testb
repz
mov
les
mov
mov
inc
fildll
mov
xchg
jle
inc
xor
rdmsr
imul
add
or
mov
cmp
pop
scas
clc
xchg
mov
add
xor
es
shlb
cltd
inc
cs
test
jb
sbb
xor
in
cmp
aad
insb
out
mov
lahf
ficoms
je
mov
sbb
in
test
hlt
sbb
and
cmpsl
leave
call
pop
fbstp
mov
dec
mov
sub
jl
bound
fldt
cmp
dec
hlt
push
popf
pop
pop
test
loope
test
push
data16
lahf
jb
lret
and
push
inc
adc
dec
add
fwait
and
hlt
xchg
adc
inc
out
mov
pop
loopne
cwtl
out
roll
mov
shrb
jge
mov
dec
add
cmc
test
data16
push
scas
mov
inc
sub
test
adc
push
or
xchg
jo
sbb
call
dec
lds
jae
inc
mov
imul
imul
lret
jmp
cltd
add
cltd
inc
mul
mov
aad
jbe
insb
iret
loopne
cli
push
lcall
cld
inc
sub
xchg
stc
and
int3
aas
mov
popa
in
sub
push
xlat
pop
mov
in
stc
push
xchg
loope
rcll
scas
sub
add
add
lret
repz
es
sub
xchg
bound
sti
sub
xor
test
sub
fmul
add
cmpsl
cmp
pop
movsl
hlt
in
jns
ret
and
add
mov
jno
jp
dec
jae
fsubrl
sbb
mov
adc
jo
jno
jecxz
sub
cwtl
je
shll
xor
push
fwait
pop
mov
clc
insb
jl
mov
in
mov
push
pushf
cmp
lods
aas
and
or
sub
data16
clc
mov
fwait
pop
push
dec
push
scas
cmp
mov
insl
adc
jo
cmpsl
jne
aam
mov
adc
mov
mov
xchg
dec
in
popl
vandps
sub
and
inc
lods
arpl
or
jnp
dec
insl
cmp
cwtl
fs
adc
inc
adc
mov
in
orl
xchg
or
mov
push
and
ljmp
jge
cmp
adc
enter
jb
add
push
push
inc
rclb
outsb
mov
jb
xor
pop
fadd
jae
outsl
add
stos
mov
adc
jmp
out
cld
mov
mov
lahf
cmp
test
ret
push
pop
jecxz
gs
addl
sahf
jg
gs
cmp
pop
jno
enter
mov
fdivrl
or
xor
push
fidivrs
jbe
sub
jle
cmpsl
imul
xor
dec
adc
push
sahf
jmp
test
scas
test
scas
adc
xchg
xchg
stos
aam
mov
call
xchg
aad
mov
stos
es
jecxz
jnp
subl
outsl
ret
shrb
out
ds
ljmp
pusha
daa
pop
es
je
out
jecxz
inc
push
dec
add
pushf
sub
jae
cld
adc
jbe
push
jecxz
sub
jb
xor
mul
js
add
call
inc
jmp
mov
xchg
jecxz
or
cmp
dec
sbb
mov
xchg
lock
cmpsl
decl
es
in
add
stc
jp
stos
es
adc
pop
imul
inc
xchg
pushf
xor
pop
cmp
mov
aas
loop
rcrb
dec
push
das
mov
xor
jo
nop
push
aaa
mov
out
mov
mov
lods
dec
gs
int3
sbb
xor
out
xchg
sub
stos
aas
mov
mov
xchg
mov
xchg
shrb
out
repz
or
daa
xchg
in
pop
outsl
pop
push
xor
pop
daa
lcall
and
mov
jmp
popf
frstpm(287
jb
pop
xchg
xchg
xchg
sti
dec
nop
daa
cltd
and
enter
lea
mov
inc
sbb
or
in
and
rcrb
ds
popa
push
cmc
cmp
ljmp
jp
mov
cltd
pusha
iret
add
xchg
push
mov
outsb
sub
std
stos
xchg
sar
lcall
adc
cmpsb
aad
sahf
stos
repnz
test
jbe
pop
xchg
inc
std
dec
cmc
xchg
sub
outsl
inc
pop
jge
daa
into
roll
pop
fisttpll
lret
in
inc
xlat
sub
ljmp
pop
push
lret
pop
and
cmp
add
movsl
sub
imul
jecxz
pop
lahf
xchg
fst
mov
sti
jne
sbb
mov
mov
push
cmp
xchg
sbb
pop
adc
inc
fdivrs
xchg
mov
push
mov
popa
leave
xorb
clc
mov
aad
je
pop
lahf
ss
dec
lret
add
cmp
or
inc
bound
iret
das
xor
neg
add
adc
enter
xor
scas
push
fldenv
inc
dec
mov
lea
or
xchg
inc
dec
daa
sbbb
mov
push
jae
testl
xlat
dec
xchg
or
dec
and
dec
push
lcall
push
xchg
mov
imul
push
inc
not
xchg
mov
arpl
dec
jnp
iret
add
push
push
or
inc
pushf
mov
push
ficoml
shr
pop
aaa
popa
clc
sub
aam
jg
aas
in
ljmp
push
push
inc
and
jmp
push
addl
or
cmpsb
cmpl
or
es
or
dec
or
stos
cltd
scas
aaa
or
xor
sub
mov
cmpsl
mov
js
fisubl
inc
pushl
fiadds
push
cmp
and
mov
stc
inc
jns
sbbl
mov
pop
mov
test
push
adc
lcall
mov
std
cld
pop
test
mov
cmp
mov
out
push
in
inc
sti
fsts
bound
ret
mov
in
mov
jbe
aaa
test
mov
xchg
ja
dec
push
fstpl
pop
imul
loopne
dec
add
dec
sbbl
pop
lock
dec
mov
cmp
push
fsubrs
fwait
je
or
sahf
adc
iret
cmpsb
push
mov
cmpsl
ret
xchg
aad
daa
adc
push
mov
jno
mov
mov
gs
mov
aaa
sub
inc
pusha
dec
mov
and
shrl
sbb
inc
inc
cli
mov
aas
jg
lahf
jbe
adc
insb
inc
addr16
cwtl
leave
fimull
mov
gs
add
xor
pop
adcb
mov
dec
push
pop
pop
pop
fildll
data16
mov
int3
call
jae
xchg
sub
jns
inc
xchg
mov
add
lret
dec
adc
and
push
xor
fidivl
ror
fs
jae
outsl
mov
in
loop
mov
gs
xchg
icebp
adc
shr
add
fnsave
or
repz
lods
or
add
lret
pop
aaa
ret
push
lock
fwait
lahf
in
xor
dec
jmp
jge
mov
inc
aad
rep
jb
sahf
xor
loop
push
xchg
sbb
mov
mov
mov
shll
jl
adc
xlat
imul
rcll
push
jae
xor
or
jnp
xor
out
sub
mov
loopne
jecxz
in
cmp
cmp
push
jmp
inc
int3
jo
fldl
jge
insb
sbb
stos
or
ljmp
xor
xor
dec
aaa
fadds
mov
sahf
jmp
add
int
movsl
inc
mov
sbbl
pushf
aas
push
xchg
lret
mov
or
pop
std
sbb
and
push
lods
mov
lahf
aad
inc
mov
cs
inc
in
movsb
aaa
popa
icebp
insb
push
fbstp
or
outsl
mov
adc
add
or
rolb
xorb
daa
shr
push
ljmp
notb
cmc
jmp
fnstenv
and
cmpsl
dec
notb
dec
jmp
aad
hlt
mov
sub
lahf
rclb
fildl
stos
das
stc
push
cwtl
fistps
jbe
in
repz
stos
stos
push
xchg
jb
loopne
mov
lods
movsl
cmp
out
mov
fists
scas
pmaddwd
lds
sbb
cmp
insl
lcall
push
mov
push
clc
mov
lret
mov
out
outsb
rolb
popf
popa
inc
sub
pop
data16
push
mov
cwtl
xor
adc
jbe
iret
adcb
sbb
fcmovne
mov
scas
mov
int3
lcallw
xchg
inc
sbb
fldl
lret
test
adc
ret
nop
xchg
scas
fwait
dec
push
les
sub
pop
xor
push
scas
xchg
mov
jae
add
iret
add
lods
mov
rcrl
push
sub
popf
es
aam
sbb
in
dec
movsl
adc
icebp
jl
ja
movsl
cmp
nop
rcl
push
ror
outsb
jle
lods
xchg
sub
ret
hlt
addr16
cli
or
clc
push
cwtl
mov
in
xorl
add
fcompl
jb
movsb
cmp
movsl
dec
in
xchg
sbbl
inc
call
repz
movsl
pop
jbe
stos
add
scas
mov
mov
stos
addr16
or
fidivl
pop
andb
pop
sti
fistps
sbb
jmp
cmp
or
jne
xchg
inc
js
xor
push
cltd
addr16
clc
dec
mov
mov
cmpsb
jl
test
leave
dec
pop
mov
shlb
cmpsl
sahf
fs
in
outsb
sub
lock
adcl
push
pushf
push
hlt
xchg
hlt
add
sahf
xor
sarl
and
sbb
inc
xchg
fnstcw
ja
out
cmp
cmp
nop
cmp
pop
scas
addb
call
fsts
outsl
pop
cli
dec
xor
jne
pop
push
test
shll
leave
pusha
sbb
ds
jo
aad
xor
out
inc
ficompl
sbb
lds
sub
cmp
pop
in
inc
and
and
cmp
ret
mov
sbb
inc
pop
sbb
inc
xchg
jns
das
mov
push
pop
out
push
jbe
int
std
test
pop
jns
imull
mov
or
cmp
aaa
xchg
rolb
push
andb
push
mov
push
enter
test
cltd
jle
mov
mov
mov
dec
dec
fcmovne
dec
aaa
into
jns
fidivs
sub
xchg
xchg
add
mov
mov
fsubp
sub
jae
push
jmp
push
jb
push
cwtl
inc
add
enter
cmp
stos
mov
ds
xchg
test
cmp
movntq
xchg
and
cmpl
cmpsb
ds
aam
adc
mov
mov
dec
fs
mov
decb
aaa
xlat
sub
imul
addl
xchg
xor
rcrl
cmc
mov
or
mov
cmpsl
and
pop
movb
int
inc
or
ss
outsb
test
rcll
inc
enter
add
sub
xor
jns
push
stos
push
xor
push
mov
lret
cld
pop
adc
and
mov
mov
mov
add
aas
mov
and
cmp
repz
lods
jno
ja
ficompl
xchg
jge
cmc
fs
sbb
or
lods
cmp
and
xchg
inc
lock
or
xchg
pop
and
pop
movsl
gs
cmpl
cmpsl
ret
cmp
push
sbb
push
cltd
mov
lahf
pop
push
jne
xchg
mov
mov
sbb
add
fs
hlt
push
test
test
mov
mov
pushf
ja
lods
mov
mov
inc
push
lret
out
insl
movsb
sahf
out
outsl
add
int3
add
sbb
out
mov
adc
mov
jo
sub
repz
iret
sti
fwait
popa
nop
inc
loope
add
jmp
test
jbe
or
lods
xor
xchg
imul
dec
pusha
pop
xor
mull
cmpsb
ds
bound
pop
dec
pop
xlat
lcall
ret
jbe
test
pusha
lcall
jo
mov
bound
xchg
scas
mov
in
ja
xor
jmp
mov
pop
call
or
push
jo
mov
mov
xchg
inc
int3
shrb
jno
pop
shlb
shl
sbb
xorl
pop
data16
cwtl
cmpb
scas
lods
stos
dec
lahf
out
xchg
leave
test
cmp
test
sub
jns
bound
cmpsl
out
aad
ret
std
mov
ja
popa
mov
push
addb
add
lcall
or
and
fs
int
fmulp
orb
push
xchg
jbe
sub
jecxz
pop
cmc
pushw
aas
cli
jbe
stos
push
stc
pop
lea
lea
scas
adcb
fdivs
inc
stc
cmp
das
mov
sarl
or
data16
dec
push
mov
enter
adc
adc
lea
cmp
mov
xchg
loopne
sbb
imul
add
pop
xor
rcr
xor
fmull
shlb
popl
pushl
jg
in
loop
es
mov
or
xor
test
pop
pusha
stos
or
push
bound
inc
push
rcll
loopne
cli
jmp
xor
and
dec
repz
pop
rorb
sub
cld
cwtl
cltd
cld
mov
icebp
xchg
gs
aaa
push
sub
xor
mov
mov
pop
xor
testb
dec
push
insb
push
xchg
mov
in
leave
cmp
xchg
and
sub
enter
xchg
sbb
add
lret
and
dec
push
imul
jg
jae
and
jecxz
ret
in
cli
test
push
nop
out
enter
xchg
add
and
push
imul
std
div
mov
push
lahf
enter
mov
cmp
rcrl
mov
mov
data16
jnp
add
lahf
inc
adc
push
xchg
pop
jb
daa
adc
das
xchg
imul
pop
mov
ljmp
jno
jecxz
dec
out
call
insl
stc
mov
mov
jmp
jp
push
ret
insl
mov
push
xchg
mov
add
add
sbb
and
jae
push
jno
movsb
dec
jmp
lods
bound
dec
xchg
into
mov
je
jmp
cld
lcall
mov
repz
inc
fisubrl
mov
adc
int
xor
and
ror
paddd
inc
add
push
je
ds
rcll
inc
mov
mov
xor
mov
adc
ret
loopne
pop
fscale
loopne
sub
xchg
pop
sub
cs
sbb
lock
add
inc
ja
cmp
jecxz
jg
stos
sub
cmp
fbld
lock
and
hlt
dec
out
xchg
sub
gs
mov
inc
and
data16
inc
enter
cmp
ss
and
movsb
sub
int3
sub
mov
pop
sbb
mov
inc
in
rep
sbb
add
shrb
xchg
loope
adc
push
das
pushf
int
int3
lret
push
dec
push
mov
and
lcall
mov
dec
xchg
adc
roll
sbb
and
sbb
sub
mov
loop
mov
xchg
jns
enter
and
pop
sub
jo
clc
jecxz
idivb
jmp
jecxz
mov
out
jns
mov
pushf
fcoms
xchg
jp
fwait
push
add
and
rcrb
aad
sahf
pop
call
xlat
mov
sub
dec
cmpsb
sbb
imul
popf
push
int
cmpsb
out
test
pop
dec
aas
pop
jg
in
jl
pop
push
inc
inc
or
pushf
addl
xor
inc
fstps
xchg
sahf
fdivrs
cmp
test
dec
and
ror
sub
xlat
xchg
jg
sub
shll
mov
pusha
xchg
xchg
xor
sbb
jg
or
mov
jmp
mov
pop
decb
lods
xorb
mov
test
jns
or
rorl
jecxz
aas
jecxz
pop
sub
adc
xchg
dec
in
out
cmpb
mov
push
push
mov
popa
xor
mov
outsl
pop
sbb
lds
or
movsl
mov
xlat
inc
pop
lahf
xchg
test
mov
and
cmp
lret
push
cmp
push
test
push
sbb
mov
fwait
repnz
nop
jae
negb
idivb
pop
xchg
pop
xchg
xor
mov
fxch
adc
lds
mov
test
mov
xchg
out
xor
or
lods
scas
dec
sub
out
cmp
pop
insl
inc
test
and
sti
inc
lock
adc
jnp
mov
and
lds
mov
xor
adc
std
push
mov
mov
mov
xchg
fistpl
cmpsl
faddl
add
popa
iret
out
jnp
lock
hlt
aaa
xchg
pop
mov
pop
out
test
pop
imulb
inc
ficoms
add
mov
in
js
sub
rcrl
jbe
inc
inc
fnsave
mov
sub
fnsave
inc
scas
lea
fdivrs
xchg
xchg
mov
fcomps
pop
fcoml
pop
push
inc
sub
movsb
fstpl
shll
das
outsl
mov
sub
sbb
imul
fdivrl
testb
daa
test
push
cmc
or
lods
fs
xor
dec
dec
ds
mov
ret
mov
mov
jle
push
cs
mov
aas
mov
mov
ret
and
scas
movsl
dec
into
gs
mov
jecxz
in
test
jg
sub
xchg
mov
pop
test
cmpsl
or
in
pop
std
jge
das
inc
fadds
lock
int
lret
and
lret
add
and
adcl
dec
je
push
sub
inc
and
dec
js
std
loope
or
stc
sti
sub
es
adc
inc
or
xchg
adc
cmp
pusha
mov
push
cmpsl
sbb
push
xchg
push
mov
dec
popa
push
jecxz
inc
pop
out
inc
arpl
and
fs
in
or
nop
mov
outsl
mov
dec
add
lea
cmp
inc
pushf
int
mov
fnstcw
test
adc
icebp
push
inc
arpl
imulb
sub
xchg
add
dec
in
and
mov
lock
daa
outsl
fisttps
fnstenv
jno
icebp
lods
cld
pop
mov
mov
inc
ficompl
imul
dec
xchg
jle
in
gs
or
jecxz
enter
push
bound
cmp
pop
scas
inc
nop
mul
add
popf
mov
inc
fisubrs
mov
cmp
and
mov
inc
jb
scas
xor
fiadds
mull
mov
loopne
cmp
sti
pextrw
sbb
add
adc
inc
shrl
mov
mov
hlt
jae
adc
pop
lods
or
aad
out
mov
mov
mov
cmp
lods
enter
std
insl
scas
test
into
cmc
push
daa
add
inc
pop
sti
xchg
mov
xchg
cmp
dec
pushf
sub
fwait
inc
xor
cmpsb
out
inc
pusha
sahf
or
rolb
inc
sahf
out
or
in
or
jae
das
add
cmp
nop
dec
push
in
adc
cmp
and
jo
jne
repz
dec
jg
adc
out
aas
dec
mov
cmp
and
imul
cmp
mov
dec
insl
jg
movsl
inc
xchg
inc
fnstsw
leave
add
and
scas
fldcw
hlt
mov
add
lods
rcrb
xchg
dec
and
fsubrl
fistps
adcl
mov
das
xor
cli
popf
popa
arpl
and
clc
and
inc
lds
dec
popl
out
bound
xorb
mov
arpl
mov
jb
dec
mov
mov
rep
repz
ljmp
aam
add
mov
xchg
xor
movl
dec
bound
push
into
sbb
mov
and
les
das
das
mov
aad
dec
repz
scas
imul
fdivrs
scas
sub
mov
add
pusha
pop
or
daa
sbb
out
push
outsl
sub
sub
push
aad
pop
icebp
jg
rcll
js
xchg
xchg
fidivrl
xlat
add
mov
adc
int3
xchg
jmp
cli
data16
je
lock
scas
addr16
add
popf
cmpsl
jmp
inc
scas
mov
mov
mov
xchg
cmc
cli
jle
out
push
or
fiaddl
lret
repz
adc
push
aam
jo
jns
mov
lret
push
add
pop
mov
out
or
xor
insb
lret
ds
add
adc
or
loop
or
add
inc
xchg
shlb
shrb
adc
pusha
pushf
out
sbbb
lahf
ss
inc
sti
xchg
jb
addr16
sbb
loope
cmp
leave
sysenter
push
inc
ljmp
ss
inc
sarl
andb
sbb
inc
fldcw
mov
dec
mov
lds
pop
mov
ret
dec
cmp
shl
ljmp
jno
and
call
mov
sqrtps
add
sbb
jmp
mov
mov
push
jb
test
ja
or
insb
out
mov
mov
das
push
rcl
fidivl
push
adcb
jo
movsb
test
jg
clc
or
mov
mov
fsubl
sub
pop
loopne
mov
popa
adc
daa
mov
add
shlb
add
cmp
mov
pop
popl
jns
mov
inc
sti
stos
jno
pop
jg
movb
sti
sahf
adcl
arpl
xor
in
loopne
mov
nop
cltd
test
stos
out
insl
in
sti
nopl
popa
mov
xchg
push
add
jae
push
mov
movsb
or
mov
sarl
iret
outsb
add
stc
push
sbb
xchg
outsb
and
push
rcrl
xor
push
cmpsb
cmp
cs
push
lret
divl
repnz
test
or
hlt
shlb
jno,pt
sbb
pop
sbb
outsb
or
mov
popf
jo
xchg
cmp
push
jge
imul
fidivs
cmpsl
sbbl
mov
cmp
mov
and
jae
aaa
mov
andl
cmp
mov
iret
nop
or
decl
loope
mov
pop
mov
ficomps
test
jmp
cs
sbb
cs
ret
jle
pop
stos
inc
mov
rcrl
dec
es
mov
push
or
iret
pushaw
mov
das
je
es
mov
jl
and
jg
nop
xchg
fwait
xchg
sub
add
aaa
add
xlat
ret
push
or
aad
jg
mov
lahf
inc
daa
adc
mov
cld
jl
cmp
repnz
xchg
push
es
out
jmp
cmpsl
imul
add
mov
xchg
mov
mov
dec
sub
sbb
and
test
andl
fcomps
mov
mov
xor
mov
push
push
repz
stos
insb
add
cmp
decb
cmp
clc
outsb
adc
dec
adc
cli
scas
out
aam
xchg
rcrb
lret
add
fistpll
cwtl
outsl
push
push
ret
push
test
push
or
out
in
imul
xor
add
sbb
mov
lock
ja
shlb
dec
adc
into
data16
pop
jg
mov
in
inc
mov
popa
lret
bound
push
je
fiaddl
cli
enter
jo
out
cmpsl
aas
popa
mov
inc
push
xor
inc
in
xor
pop
leave
pop
lea
dec
scas
out
mov
fst
mov
test
lret
loope
mov
or
mov
jb
clc
sahf
stos
enter
scas
mov
and
aas
mov
mov
add
inc
inc
lock
loopne
jb
adc
lret
popa
nop
push
fwait
les
lods
sbb
mov
fisubl
or
add
js
pop
divb
outsl
jge
mov
test
not
sub
js
adcb
in
pop
jbe
cmp
out
lock
jbe
and
or
xor
xor
notl
adc
loopne
pop
xor
shlb
xor
mov
adc
jnp
aas
popa
fsubl
out
cltd
pop
stos
jae
xor
mov
add
out
pop
xor
ja
jg
cmp
xor
add
lret
sti
aad
pop
pop
call
or
pop
mov
push
and
pop
or
cwtl
lds
cmp
jge
jg
cmpsb
ret
pop
fcomps
stos
jmp
loopne,pt
xchg
jp
int
mov
cmp
aas
mov
mov
fstpt
push
loop
aaa
cltd
jp
call
aas
aad
pop
cli
test
add
es
inc
or
dec
mov
inc
xchg
bound
mov
lods
in
dec
fbld
les
rolb
mov
inc
pop
cmp
cmc
pop
adcl
scas
or
fwait
sti
add
mov
test
jnp
add
jp
cmp
adc
ret
into
shlb
cmp
repnz
popa
ja
rorb
ss
in
push
add
fcmovu
sub
push
es
fstl
inc
test
movsb
imul
je
pop
mov
mov
inc
cs
sbb
inc
es
mov
cli
inc
push
push
or
fnsave
pop
data16
xlat
inc
dec
pop
adc
js
enter
jnp
sbb
pop
add
fiaddl
sarl
pop
sub
jo
mov
js
mul
xor
neg
push
in
adcb
into
pop
sub
jno
jo
xchg
mov
push
or
push
and
scas
adc
cmp
jg
mov
mov
add
or
push
movsb
roll
iret
mov
repz
inc
ds
rcrb
test
push
lcall
in
nop
clc
movsb
loope
pusha
sbb
dec
push
pop
adc
jbe
fadds
fidivl
jae
daa
mov
jns
mov
gs
rol
lcall
cwtl
jno
push
push
mov
sbb
loop
insl
xlat
outsb
sahf
insb
dec
and
cmc
inc
leave
fldenv
or
enter
cmp
sbb
mov
lods
pop
jne
mov
test
sbb
dec
pop
mov
pop
scas
jg
mov
and
or
dec
aaa
inc
adcb
pop
jb
xorb
sub
dec
or
jns
push
mov
pop
lods
ret
xlat
outsb
and
mov
insb
rorl
jecxz
pop
mov
jnp
jle
jecxz
adc
push
or
jo
out
andb
dec
jae
xchg
movsb
xchg
mov
rclb
clc
push
imul
fmulp
test
decl
jns
adc
pop
je
in
cwtl
push
je
and
aam
test
push
mov
adc
mov
int3
out
push
sbb
xchg
in
aaa
pop
cmp
test
in
inc
stc
push
sti
fsubl
pop
xchg
daa
mov
mov
loopne
sahf
pop
mov
stos
fdivs
ss
xor
add
pop
inc
mov
arpl
in
or
fnsave
loopne
xchg
insl
jb
icebp
dec
andl
daa
cmp
sub
fists
lea
or
push
mov
addr16
jle
inc
cwtl
outsl
test
pop
hlt
jne
xor
jae
jnp
test
xchg
outsb
dec
popa
push
lods
movsb
sbb
xor
mov
shlb
mov
mov
out
inc
sub
inc
sbb
insl
addr16
ljmp
push
gs
hlt
xchg
ljmp
sbb
mov
sub
push
lods
and
adc
mov
or
les
orb
cwtl
inc
jmp
insb
daa
cld
jge
sbb
jns
pop
mov
movsb
jge
fstp
xor
addl
xor
or
icebp
ss
inc
sahf
cmp
rcll
push
pop
mov
popf
test
in
adc
mov
cwtl
jno
cmp
push
data16
push
push
test
xor
bound
xchg
pop
repnz
pop
push
inc
fwait
push
push
jbe
cwtl
and
testl
jle
mov
das
pop
out
pop
clc
mov
jge,pn
adc
int
inc
cmc
push
xchg
outsl
jae
fsubl
mov
mov
jnp
jge
cli
xor
pop
stos
in
fs
pop
adc
in
xchg
cmp
pushf
or
cmp
lcall
repnz
pop
ss
negb
mov
mov
mov
out
arpl
nop
imul
cmp
jecxz
fsubs
mov
cmp
inc
fwait
out
mov
and
inc
mov
pandn
rorl
cmp
dec
mov
inc
fstpl
into
and
xchg
addr16
jg
jbe
inc
addb
cwtl
jne
pop
test
cmpsb
jnp
mov
add
jns
lcall
shl
dec
cs
shlb
xor
insb
dec
mov
add
repz
leave
in
or
sti
mov
and
dec
mov
stos
subb
pop
faddl
scas
arpl
cmpsl
clc
aas
adc
loopne
stos
decl
xor
fadds
clc
push
pusha
mov
sbb
xor
ljmp
rol
in
imul
scas
aam
sub
dec
loope
add
fsts
scas
scas
push
adc
jp
test
jg
nop
jle
mov
jl
xchg
int
dec
sbb
xchg
inc
mov
leave
sbb
sahf
mov
adc
jae
lret
add
hlt
pop
pop
lahf
sub
mov
sbb
lahf
ss
and
jns
sub
jmp
adc
mov
jmp
jbe
pop
into
mov
jg
lea
mov
int3
pop
mov
flds
movsl
jp
pusha
lods
pop
iret
push
cmp
cmp
push
shrb
in
push
pop
cltd
or
out
aas
add
inc
mov
dec
cmp
fwait
lods
push
jo
push
sahf
pop
mov
cmp
sar
popl
jg
sbb
in
mov
mov
pop
xchg
aam
xchg
sub
std
xchg
popa
or
cs
sub
clc
cmpsl
mov
cmp
mov
fs
push
aaa
inc
pop
data16
filds
mov
pop
jo
lret
flds
mov
fwait
mov
adc
xchg
ja
jns
js
imull
inc
jle
jne
xchg
pop
loope
es
dec
add
jnp
mov
xor
in
ja
mov
jg
inc
sub
aas
dec
rcll
test
sub
fdivl
dec
out
loopne
outsb
inc
inc
loope
sub
sub
aad
icebp
sub
push
scas
hlt
sbb
cld
aaa
stos
cmp
fadd
pop
out
mov
pop
adc
cmp
hlt
insl
push
inc
aas
es
pop
rclb
sub
adc
lret
xchg
fcoms
lahf
mov
mov
ret
ja
scas
mov
into
cmpl
repz
stos
dec
aas
xchg
jp
cmp
pop
fwait
enter
loop
out
adc
cmp
fmull
xchg
ljmp
mov
loopne
mov
filds
jg
or
shll
inc
hlt
adc
sub
imul
xor
loop
cmp
inc
popa
dec
adc
out
test
jns
mov
or
cltd
fsubr
or
mov
jb
ljmp
mov
rcl
test
jl
cmpsl
pop
lea
mov
loope
pop
adc
mov
roll
inc
lahf
lahf
pop
iret
dec
ss
pushf
mov
xor
inc
pop
jb
mov
cld
push
into
adc
xchg
xor
xor
pushf
gs
xor
adc
inc
mov
shll
jo
lcall
pusha
std
push
sub
lock
push
jno
xchg
rcl
adc
imul
test
test
push
lcall
pop
imul
add
mov
outsb
xor
mov
lods
inc
cs
hlt
or
out
sti
cld
aaa
dec
mov
cmc
flds
inc
out
mov
jp
pop
fisubrl
add
sbb
rcl
sub
dec
std
push
flds
jne
mov
lret
jb
mov
inc
lods
sub
sbb
dec
mov
xchg
insl
mov
les
in
outsb
lods
inc
mov
inc
lret
bound
xor
push
inc
popf
mov
push
adc
or
lret
push
sub
scas
pop
aas
push
insb
call
and
push
xchg
test
out
mov
cmpsl
mov
or
fdivs
icebp
xchg
sbb
leave
mov
push
negb
ds
std
jle
dec
mov
xchg
fwait
mov
stc
or
inc
dec
mov
aad
imul
fisubs
xor
xchg
inc
mov
sbb
adc
inc
and
cmp
lret
jo
mov
enter
mov
mov
shl
adc
in
xchg
daa
fisubrs
and
negl
cmpl
xchg
je
dec
out
jno
push
mov
leave
fdivl
sarb
in
xchg
cli
jne
xchg
fcompl
jo
push
ds
xchg
test
mov
jmp
fwait
mov
jg
inc
cmp
test
cmp
add
push
xchg
lods
inc
xchg
dec
into
subb
pushf
out
xchg
popa
stos
xchg
sti
sbb
inc
data16
jbe
call
lods
mov
pusha
in
lret
and
repnz
nop
jno
in
jns
xchg
notb
shr
or
xchg
dec
ds
outsl
orl
add
fldt
jne
mov
push
jnp
in
and
cwtl
sbb
sbbb
mov
mov
test
mov
roll
pop
pop
xchg
xor
pop
out
test
loopne
test
mov
sub
cmc
push
outsl
xor
andb
jge
flds
mov
in
xorl
or
scas
aaa
or
dec
adc
add
add
and
mov
inc
outsl
jge
sahf
xchg
rclb
add
addr16
push
ljmp
jno
jmp
fisttpl
shr
arpl
mov
inc
outsb
xchg
pop
inc
fdivl
lods
mov
sub
pop
push
push
jbe
xlat
dec
in
mov
int3
outsl
mov
outsl
or
cmp
push
loope
imul
sbb
dec
xlat
push
sahf
loop
cmpsl
mull
pop
addr16
xlat
insl
or
jp
mov
adc
gs
mov
pop
das
ja
mov
jge
movzbl
inc
lea
cwtl
test
dec
and
jp
cli
or
inc
mov
dec
stos
aas
rcl
add
fcomip
and
aaa
dec
imul
dec
hlt
mov
fsubrp
icebp
mov
lea
or
add
shlb
scas
xchg
imul
sahf
addr16
sbb
shrl
adc
and
and
aas
xchg
mov
frstor
cmp
into
and
shlb
pop
pop
adc
mov
shl
and
add
ja
jb
lahf
pop
and
xchg
outsl
xchg
mov
aad
pop
aas
pop
ror
pusha
in
xchg
push
jge
insl
cmp
pop
inc
cmpsb
pop
jle
fldt
and
adc
stos
and
pop
out
mov
sti
cld
mov
subl
add
adc
sbb
bound
sbb
lea
add
aam
mov
push
data16
cmp
int3
arpl
push
lock
jmp
setle
iret
fwait
lds
inc
out
subl
addr16
jecxz
xor
push
or
cmpsb
sbb
out
cmpsl
pop
pushf
mov
xchg
inc
fisubl
jbe
lods
cmpsl
inc
fs
xchg
sbb
mov
and
mov
inc
subb
rcrb
cmpsl
jb
dec
loop
adc
rolb
sub
and
xchg
or
pop
mov
fistpl
xor
lret
or
inc
xchg
mov
sbb
push
cmp
sbb
pop
fiaddl
sbbl
push
fnstcw
repnz
inc
xlat
es
scas
jb
inc
sub
dec
sub
cmp
notb
int
cli
push
inc
lods
incl
xor
adc
jge
inc
scas
jo
xor
leave
loope
pop
mov
lock
adc
ds
lret
pop
in
push
pop
inc
and
inc
sbb
sub
jnp
xor
nop
inc
rcll
into
push
fs
adc
sahf
mov
fisubl
mov
pop
repz
sbb
xchg
scas
mov
outsl
daa
addr16
insb
jne
jbe
mov
pop
lahf
incl
dec
sbb
push
lock
dec
popa
and
push
fildl
pop
xchg
adc
out
mov
in
xchg
jns
adcl
inc
fidivrl
out
xorb
dec
xchg
std
push
mov
mov
xchg
mov
add
insb
inc
rcrb
xor
fsubrs
or
pop
pop
xor
xlat
popa
jnp
ss
lretw
outsl
mov
popf
pop
mov
cld
fisubl
cmpsl
jg
out
lods
insl
stos
mov
repz
xchg
ljmp
push
sbb
repz
mov
lock
inc
push
lods
enter
mov
sbb
dec
rcl
out
movsb
cmp
push
lea
jo
jmp
aad
xor
jle
outsb
sub
push
movsb
jns
fbstp
faddl
xchg
leave
cs
mov
in
out
xor
xchg
fs
ja
lss
test
sub
lock
push
inc
jecxz
les
mov
rorl
jo
mov
cmpsl
insb
testb
in
cs
add
sbb
xor
cmp
fsts
push
sub
sbb
push
jg
outsb
stos
mov
sbb
or
jmp
mov
inc
inc
sub
and
lds
outsl
inc
add
test
sbb
loope
xchg
xchg
mov
lea
psrld
mov
mov
cmp
sbb
dec
pushf
ficoml
pop
push
clc
aas
push
sub
dec
ffreep
das
adc
int
ljmp
xor
in
pop
iret
pop
pop
xor
fimuls
pop
jmp
sub
pop
sahf
lds
mov
pop
mov
cmp
cmpb
jnp
xchg
out
dec
jl
cmp
js
jns
and
add
push
push
inc
arpl
ss
add
movsb
jge
push
pop
lcall
movsl
dec
out
jmp
testl
outsb
add
jae
xlat
fdivr
lahf
add
stos
xor
ja
jo
incl
bound
mov
hlt
fildl
dec
loope
jnp
xchg
mov
adc
loope
fadd
mov
cmpsl
or
pop
nop
pop
testb
jge
pop
sub
pop
pop
jno
out
das
loope
cmp
pop
sbb
insl
sbb
fstl
mov
and
movsl
or
push
inc
jge
cmp
hlt
push
inc
ja
aaa
sbb
lret
aaa
xor
jns
inc
push
mov
pop
dec
and
mov
jnp
cmpsl
sub
inc
sbb
cli
leave
mov
rcll
insl
js
sbb
rcr
xor
movsl
dec
push
ret
cltd
loope
adc
and
out
mov
out
push
orl
xor
std
gs
jne
push
sbb
sti
ds
ss
scas
push
call
adc
pushf
lret
sub
or
in
daa
fs
xchg
rcrb
idivb
and
iret
jecxz
cmp
sub
lock
push
orl
into
loopne
adc
das
leave
movsb
aad
std
pushl
divl
sbb
aad
lea
pop
xchg
sbb
ja
cmpsl
shrb
hlt
mov
cmp
jmp
daa
jle
or
sarl
jge
cmpsl
cmp
mov
mov
sbb
dec
rol
or
jmp
fmuls
sub
rol
push
pushf
lret
cwtl
pop
adc
xor
shrb
xchg
sub
or
dec
add
nop
push
out
pop
push
push
or
outsb
sub
cmpsb
mov
cltd
lea
xchg
lods
nop
ja
cmovs
enter
jns
sbb
leave
jbe
stos
xor
mov
pop
cmp
lret
jae
adc
adc
outsl
jns
or
test
and
ds
and
push
out
neg
jle
push
pop
insb
xchg
or
dec
stos
test
inc
fildll
fidivs
out
adc
pop
aam
scas
push
push
andb
sub
add
cwtl
sahf
gs
xchg
add
adc
xor
fnstenv
cmp
pop
rclb
pop
cmp
fbstp
mov
test
and
in
dec
mov
sti
outsb
xchg
sub
pop
data16
mov
shl
jle
push
call
sub
js
jp
movsl
cmc
dec
inc
add
cltd
sbb
xor
add
test
sbb
xor
dec
fs
out
cltd
cmpsl
jmp
sahf
sbb
test
mov
out
test
aaa
fxch
pop
js
jne
pop
shrl
lret
sarb
fistl
adc
or
push
sbb
cmpsb
cmpsl
imul
bound
sub
xchg
cmp
sbb
mov
dec
hlt
test
cmp
out
inc
pop
and
rclb
cmp
sub
or
sub
push
ja
loope
jnp
mov
jmp
cmp
insb
iret
sbbb
clc
fnstcw
or
pop
nop
cli
inc
stc
shrb
sub
push
call
popa
lea
aam
je
leave
push
in
aad
outsb
fstpl
push
mov
dec
das
add
xor
mull
fwait
out
dec
shll
stos
sti
popf
int3
pop
repnz
mov
push
pop
in
mov
mov
adc
ljmp
movsl
js
fwait
mov
push
mov
add
or
in
fnsave
add
ja
imulb
shll
hlt
sbb
add
and
jmp
mov
sbb
jecxz
mov
pop
fsubl
add
sub
mov
in
mov
mov
sbb
ss
adc
dec
cwtl
sbb
or
das
jle
pushf
call
pusha
mov
outsb
inc
loopne
inc
js
out
imul
stos
in
add
mov
pusha
lret
sbb
faddl
jb
pop
int
cmp
addl
cwtl
add
cmp
sti
pop
pop
xor
sbb
stc
insb
out
loope
push
ljmp
out
test
mov
in
jb
cmp
and
lds
lock
stos
push
pop
dec
mov
push
cltd
iret
add
push
sub
cmp
pop
scas
jo
cmpsb
lock
mov
jmp
mov
sbb
dec
dec
pusha
or
or
jecxz
pop
cld
nop
dec
shrb
ljmp
jae
out
cmp
mov
add
bound
inc
jmp
or
aad
in
out
sbb
push
xor
test
out
cmpsb
xchg
aaa
or
xlat
mov
mov
lods
and
pusha
xchg
bswap
testb
adc
ds
xchg
data16
fadds
inc
das
and
mov
lods
test
or
insl
dec
adc
dec
xchg
movsb
add
icebp
adc
xor
mov
jmp
mov
ret
jns
jns
push
adc
popa
mov
jnp
and
cmp
and
in
mov
jle
insb
adc
insl
adc
je
pop
cmpsb
in
inc
mov
sbbb
pop
and
pop
fdivrs
movsb
jae
les
lock
mov
mov
mov
push
ret
or
cmp
imul
dec
js
test
add
js
add
jge
nop
test
jno
fldl
sub
enter
or
adc
in
or
push
and
push
jmp
adc
jmp
movsl
je
pop
mov
sbb
ds
scas
mov
lret
cld
lds
push
push
out
aad
jge
insl
outsb
sub
in
sbb
mov
fs
pop
xchg
xor
or
in
mov
mov
ror
data16
shlb
test
das
cmpsb
jp
add
int
aas
mov
sar
rcll
out
cs
sub
adc
in
pop
in
jl
ss
gs
out
mov
jg
xlat
lods
cli
inc
lret
ss
sbb
clc
push
sbb
cmp
popa
sbbb
fidivrl
iret
aad
jg
int
movsl
mov
xchg
jecxz
adc
cmp
cmp
std
push
xor
orl
movsb
cld
lea
inc
mov
jnp
adc
lock
fcomi
aaa
push
pusha
sub
and
adc
fists
and
into
movsl
daa
mov
mov
inc
pop
and
ds
in
xlat
sub
pop
imul
imul
mov
andb
lds
ja
sbb
fs
xchg
push
icebp
cmp
and
jp
xchg
push
movsl
frstpm(287
addr16
mov
ret
and
xchg
xchg
decl
dec
addl
mov
mov
cmpb
sub
inc
sbb
ds
lods
dec
add
roll
out
mov
lahf
and
or
jns
push
cmp
in
mov
ret
jno
sub
mov
cmp
sbbb
sbb
jnp
dec
push
out
mov
sbb
add
pushf
xchg
sub
jnp
inc
sbbl
xor
sub
cld
cld
sub
out
fsubs
adc
jmp
lds
push
mov
movl
adc
and
shl
bound
push
fldl
xchg
dec
mov
push
pop
fstpt
sbb
pushf
xor
jge
jmp
mov
lods
lds
mov
aas
out
adc
rorl
icebp
shlb
cltd
loop
cmp
mov
sar
in
out
cli
cs
sub
sub
dec
dec
fs
push
jae
mov
push
jne
adc
gs
push
cmp
repz
test
add
in
das
inc
cld
lds
test
into
popf
mov
shll
testl
inc
js
clc
xor
mov
das
adc
xchg
jmp
xor
into
mov
imul
aas
in
xor
bound
andb
es
mov
push
pusha
rcrb
mov
mov
ror
xchg
test
cmpsb
pushf
push
out
mov
frstor
test
pop
fwait
pop
fldpi
mov
mov
dec
aad
scas
das
arpl
pusha
mov
lea
ds
nop
jo
fistpl
jecxz
mov
mov
inc
test
xchg
inc
inc
inc
lods
ljmp
testb
mov
xor
aam
sahf
and
add
push
mov
sahf
xchg
push
push
and
mov
mov
fcmovnbe
sbb
xchg
stos
jecxz
sbb
in
mov
and
sti
xchg
inc
or
add
jb
imul
lock
in
test
stc
mov
js
pop
popa
adc
test
xchg
sub
or
hlt
push
mov
dec
pop
sti
dec
mov
cmp
xor
cmp
aaa
fnstcw
in
jbe
add
aam
jno
mov
ret
mov
jp
dec
dec
rolb
aam
mov
stc
mov
out
daa
out
cld
les
mov
fidivl
sub
sub
outsl
arpl
pop
jno
xchg
dec
sbb
pushf
xchg
in
test
mov
sub
push
jo
es
cwtl
dec
addr16
movsl
shr
push
mov
mov
les
aas
xchg
cmp
dec
out
jb
gs
xchg
mov
loopne
cmp
add
and
mov
mov
test
jns
or
das
fwait
jb
jge
fwait
ss
xchg
and
push
hlt
xor
dec
mov
or
jb
xchg
dec
loopne
insl
jnp
in
mov
xor
test
and
xchg
daa
push
mov
movsb
daa
fstp
xor
mov
jle
movsb
dec
pop
es
and
insl
arpl
pop
stos
mov
in
stc
inc
std
out
xchg
inc
jno
add
sahf
test
scas
popa
push
mov
add
adc
mov
lds
jg
stos
pop
pop
nop
sbb
sbb
mov
xchg
sbb
scas
jbe
lods
adc
js
add
jns
imul
jnp
mov
mov
ret
fsubrp
sub
xchg
adc
ja
sbb
or
pop
pop
xor
lock
orb
cmp
add
inc
and
stc
mov
mov
sub
pop
inc
ret
test
mov
mov
push
jecxz
or
cmovp
lds
ja
pushf
inc
iret
mov
lods
daa
push
xor
dec
xor
mov
xchg
loop
and
add
dec
mov
call
jl
and
divb
mov
lods
or
xor
push
dec
insl
stos
jg
xor
mov
std
xor
stos
xchg
sub
nop
data16
rorb
rorl
adc
leave
sbb
jb
arpl
in
sbb
jno
inc
cli
jnp
test
pop
jne
bound
sbb
xchg
sub
fnstenv
or
jbe
adc
ret
stc
nop
adc
adcl
shl
test
push
test
push
push
jg
xor
xchg
mov
sahf
push
movsb
pop
inc
ss
adc
popa
mov
stos
fwait
sub
sub
enter
pop
lret
inc
pop
mov
out
and
xchg
adc
adc
jo
gs
cs
mov
jno
push
mull
mov
jecxz
xchg
movb
mov
lahf
push
ret
xchg
js
ret
pop
repnz
test
pop
mov
dec
ret
data16
xchg
pop
in
test
jbe
loopne
test
fbld
loope
push
incl
and
fistpll
and
aam
js
arpl
fisubl
ds
js
pop
and
xchg
sahf
cmp
xor
sar
cwtl
mov
mov
int3
adc
cmp
stc
pushf
mov
mul
out
jle
sub
mov
inc
sbb
adc
stos
mov
imul
aas
inc
xchg
xchg
leave
xor
sbb
orl
lods
fidivs
pop
push
jne
into
dec
loop
jne
cmp
sbb
jl
mov
or
or
push
mov
shl
es
push
mov
jge
test
lods
sbb
cld
cmp
mov
movsl
out
fdivrl
inc
and
cltd
ret
aam
insb
add
outsb
sub
call
cltd
das
hlt
pop
cmpl
mov
mov
adc
aad
lcall
test
in
adc
add
xchg
test
sbb
xor
mov
ficoml
stos
dec
arpl
in
mov
enter
test
sbb
push
inc
in
bound
fisubrl
inc
cmpsb
jbe
rcrb
mov
push
cli
inc
repz
in
cmp
out
mov
lret
fidivrs
add
sbb
xchg
popa
ds
mov
ffreep
fistl
sub
addr16
and
out
dec
fabs
mov
ss
lret
jmp
mov
sbb
aad
cli
or
jp
sub
scas
fsubrs
sahf
sbb
or
int
and
add
xlat
mov
pop
pop
adc
mov
adc
dec
xchg
popf
das
push
insl
test
push
nop
lea
out
loop
xchg
push
ss
loopne
xchg
aaa
jle
xchg
stos
jno
mov
pushf
repz
push
add
ss
pop
loope
push
inc
ret
push
jmp
stos
add
jmp
xor
push
mov
test
jne
fsubr
pop
xchg
cmp
lock
add
dec
adc
cmp
sub
es
pop
rcr
jb
sahf
cmpsb
ds
push
stc
into
or
ds
inc
lods
fnsave
data16
jae
in
push
inc
fmuls
mov
pop
push
push
shrb
enter
mov
jns
nop
push
fdivrl
mov
aad
loope
or
shlb
nop
mov
loopne
jae
cltd
dec
push
in
or
mov
sbb
pop
ss
int3
inc
sub
add
loopne
or
add
adcl
leave
int
sub
pop
mov
es
in
push
in
loopne
pop
sbb
lods
cmc
lock
mov
cltd
sbb
sub
mov
repnz
rorl
aad
pop
mov
fs
add
lret
push
testl
xchg
mov
orb
dec
or
popf
aaa
call
and
pop
dec
mov
ljmp
testb
nop
lea
push
push
je
ja
out
mov
imul
addr16
pop
es
push
shr
in
cwtl
repz
int3
cmpsl
fstpl
sar
mov
pop
repnz
xchg
add
enter
aam
out
incb
shrl
int3
mov
or
mov
inc
dec
outsl
popf
clc
or
rcl
fimull
or
mov
daa
or
dec
inc
jnp
jo
dec
mov
xorb
scas
insl
add
fstp
repz
sbb
mov
adc
cmp
inc
mov
cmpsb
mov
jle
sbb
cmc
popf
test
cld
sbb
mov
dec
fcomps
cmp
cli
inc
addl
iret
mov
push
jmp
or
jmp
mov
test
int
negb
mov
dec
les
add
mov
les
lret
sub
xor
fwait
inc
imul
xchg
xchg
popa
clc
xlat
bound
call
jns
push
sub
jb
jns
iret
out
bound
imul
jle
mov
ffree
or
rorb
stc
cli
sbb
sub
mov
adc
out
stos
sbb
shlb
idiv
stos
popa
cmp
cmp
out
cmp
pop
out
pop
insb
scas
adc
sbbb
aam
popa
clc
mov
lret
xchg
add
or
test
push
jb
mov
daa
and
adc
add
dec
jae
inc
push
imul
or
test
fucomp
push
movsb
xor
add
inc
push
loope
mov
call
or
cmovp
or
test
sub
lea
in
mov
push
jbe
cmp
xor
fdiv
and
add
lds
mov
cmpsb
mov
sbb
repnz
jg
arpl
js
push
test
xor
nop
jmp
jle
push
jp
into
inc
js
jo
jmp
mov
aas
outsl
out
cmpsl
pop
xor
in
aas
fwait
jbe
sbb
fnstenv
and
add
inc
pop
mov
jnp
fsubr
pop
imulb
inc
xor
ja
insb
inc
xor
rcl
mov
sub
or
inc
lahf
arpl
test
ljmp
sub
dec
add
shrl
xlat
push
sub
xor
lahf
ss
test
xchg
test
iret
in
push
mov
outsb
out
hlt
pop
dec
test
or
movsl
xchg
js
push
fdivs
dec
imulb
pop
jnp
pop
insb
pop
jl
inc
bound
cmp
dec
mov
xchg
mov
mov
out
dec
bound
add
inc
and
mov
inc
fbld
pop
fnstenv
ljmp
and
inc
out
stos
pop
ds
xor
test
dec
pop
cmpsb
movsl
xchg
es
loope
inc
push
pop
dec
inc
mov
dec
loope
shlb
mov
aam
mov
sbb
mov
aam
negl
pop
movsb
out
sub
sbb
ret
cmpsb
lock
and
loop
ffreep
lcall
sbb
lods
lahf
pop
push
das
fmull
icebp
push
mov
jmp
lret
icebp
xchg
push
push
imul
repz
jnp
sbb
add
push
lret
popa
sub
into
dec
call
pop
jle
gs
enter
stos
jmp
adc
int3
fcomps
ljmp
push
mov
mov
jno
dec
daa
xor
enter
out
cmpsl
push
mov
dec
adcl
out
sub
lods
repz
jne
dec
test
jle
nop
dec
loope
adc
in
aas
loope
add
push
repz
iret
ret
push
jb
cmc
sbb
mov
pop
insb
sub
test
or
sahf
or
fcmovne
sub
xor
arpl
xchg
in
clc
ret
out
mov
jge
xor
gs
mov
mov
out
sub
ret
mov
mov
shrl
cmp
outsl
mov
out
mov
xor
push
shr
cmp
scas
adcb
dec
and
scas
pop
mov
ja
mov
or
add
cmpsl
jae
subb
test
ret
repnz
dec
push
sbb
int3
outsl
shl
jo
pop
cmc
cmpsb
jne
sub
jl
mov
pushf
cmp
int
xchg
jno
inc
pop
push
clc
test
cmp
leave
stos
inc
lret
out
mov
push
xchg
dec
mov
and
repnz
pop
dec
jbe
xchg
push
inc
loopne
dec
stc
aad
imul
adc
xor
dec
jecxz
dec
adc
or
add
xchg
fcomps
aad
std
xchg
lcall
loopne
test
xor
xor
nop
pop
repz
mov
sbb
int3
lret
adc
ret
xor
iretw
je
xchg
adc
push
jge
fwait
push
addr16
lret
push
adc
jo
cmp
imul
pop
jbe
pop
sarl
sbb
aad
mov
adc
pop
xcrypt-ctr
cmpsl
ficompl
ss
xchg
outsb
test
mov
jne
push
cmpsb
mov
mov
mov
dec
jg
ss
sbb
pusha
dec
mov
cmpl
push
jmp
xor
cltd
xor
mov
imulb
int
call
inc
cs
shl
push
enter
mov
lret
bound
pop
fistpll
pop
mov
in
jmp
mov
cwtl
xor
lret
loop
loopne
lcall
push
inc
ret
xchg
mov
push
repnz
movsb
mov
arpl
xchg
imull
cmp
mov
aas
sub
pop
pop
pusha
out
jg
cmp
subl
mov
and
fsubrs
mov
adc
push
xchg
mov
xlat
mov
xor
ret
or
pop
scas
dec
adc
les
jno
pop
fwait
adc
mov
cmpsl
stos
in
test
xchg
add
nop
sub
in
mov
inc
aaa
fisubl
push
jmp
lods
lds
nop
test
fisttps
sti
xchg
xchg
cmpsb
mov
rcrl
and
inc
test
clc
push
lahf
ret
jb
jmp
mov
sbb
lods
and
mov
cmpsb
jge
aam
mov
xchg
lret
fnstsw
aad
inc
sahf
and
or
mov
and
mov
dec
insb
imul
pop
add
dec
and
fldenv
std
mov
rcrb
pop
and
pop
loope
fwait
jmp
push
fs
sbb
ds
push
outsb
xchg
mov
fptan
push
cmp
xchg
shll
mov
inc
stc
and
push
cs
fwait
xor
sbb
fidivrs
fbld
fstpl
xor
jg
movsl
xor
xchg
xchg
dec
mov
inc
xor
and
test
mov
aad
and
dec
cmp
sahf
outsb
pop
sub
int3
clc
jp
sbb
cmp
in
push
rcrb
subl
in
repnz
shr
cs
fmull
mul
inc
rol
pop
jg
sub
pop
mov
ds
mov
shl
mov
sbb
ss
stos
push
sub
cmp
loop
adc
icebp
mov
in
lcall
in
or
inc
ljmp
lcall
push
and
mov
mov
test
jb
pop
negl
fstl
mov
jp
push
mov
xchg
cmc
inc
xor
repnz
fstpl
xchg
jmp
cld
insl
jge
add
cmp
xor
fcomps
dec
and
pop
push
cmp
filds
sub
ficoml
cli
push
js
mov
gs
sub
or
dec
sbb
xchg
sahf
imul
push
add
bound
mov
xchg
popa
ret
inc
arpl
popf
in
push
mov
sub
cmp
out
inc
adc
sub
stc
inc
or
fs
mov
mov
mov
adc
jne
inc
sbb
sbb
scas
xor
loopne
jbe
lahf
add
adc
sbb
or
inc
sub
pop
icebp
pop
mov
ss
mov
fistpl
sub
jp
rolb
mov
pop
mov
and
jae
adc
pop
sub
lock
inc
push
int3
rcrb
adc
mov
xor
stos
cmp
clc
sub
mov
repz
push
call
jno
fdivrl
test
sbb
push
cld
das
sarl
push
or
das
mov
dec
cmp
shrb
inc
inc
sub
inc
inc
jnp
cmp
mov
mov
imul
add
mov
mov
mov
fldt
cld
xchg
lcall
xchg
push
insl
push
and
xor
das
cli
xchg
push
int
cmpsb
gs
shrb
push
mov
sbb
cmp
cmp
and
mov
inc
jmp
pusha
push
imul
sti
xor
xchg
xor
ror
fs
scas
sub
mov
sbb
outsl
dec
xlat
jg
mov
push
cmpsl
out
adc
mov
icebp
dec
mov
cmp
fcom
sbb
adc
xor
or
test
loope
insb
loope
lds
add
mov
fdivrs
jb
adc
scas
mov
roll
dec
xlat
adc
roll
cmpsb
push
cmpsl
shld
fisubrs
jb
scas
dec
loope
push
jge
and
stos
lds
jg
dec
xchg
jns
clc
cmpsb
cld
cmp
addl
popf
es
leave
push
in
mov
testb
cmpsb
cmp
dec
test
add
or
jno
mov
mov
and
popa
lea
stos
movsl
test
loop
pop
xorl
add
sbb
movsl
adc
sbb
mov
mov
subb
sahf
test
rcrb
mov
or
push
imul
jmp
inc
xor
incb
cmp
ds
mov
mov
xchg
mov
push
mov
out
stc
out
mov
pop
aad
mov
ja
shlb
repz
clc
clc
push
movsl
js
ja
dec
jbe
adcl
and
ret
xchg
cmc
xchg
jl
cmpsb
cmp
adc
sti
add
sbb
adc
cwtl
movsb
cmp
jnp
xchg
rcll
xor
movups
push
fnsave
or
jnp
push
inc
jmpw
addb
icebp
sbb
mov
add
leave
into
or
adc
mov
fildll
shll
sub
or
addl
add
popa
or
addr16
cld
jae
dec
add
popf
lcall
mov
sahf
lea
in
mov
lret
mov
xchg
fimull
sub
and
mov
dec
idivb
sub
ror
or
rcl
mov
add
xor
pushf
ss
or
mov
jb
mov
outsl
aam
mov
inc
lea
out
aam
or
sbb
ret
jbe
add
lahf
cmp
mov
jecxz
add
gs
data16
outsl
ds
adc
adc
pop
dec
repnz
mov
add
pop
fnsave
aas
or
popf
cwtl
cli
or
mov
movsl
test
nop
test
or
mov
mov
inc
push
rcrb
xchg
test
mov
mov
or
rcrl
sahf
jp
fbstp
pop
mov
inc
jle
cmp
lahf
inc
push
xchg
nop
sub
arpl
push
sub
lea
and
sbb
adc
popa
xor
inc
outsl
mov
in
sahf
cmp
hlt
hlt
orl
lret
std
inc
add
push
cli
frstor
ret
mov
lock
push
test
add
lret
push
data16
imulb
dec
subl
jecxz
adc
lds
fwait
repnz
mov
decb
rcll
jle
inc
imul
adc
jg
mov
jns
hlt
xor
push
pop
push
call
mov
pop
movsb
push
lret
pop
gs
xchg
sub
sbb
or
inc
mov
clc
xchg
jmp
cltd
pop
fsts
push
adc
fidivrl
out
sarl
xchg
jmp
and
fs
dec
rcrl
sub
mov
add
enter
jge
cmpsb
in
cmpsb
dec
inc
pop
test
mov
das
pop
test
add
bound
shlb
fwait
sti
mov
ss
mov
dec
adc
shrb
lock
pop
shr
pop
mov
dec
cmpsb
mov
mov
iret
jns
mov
outsb
inc
mov
fnstsw
jecxz
pusha
fnstcw
insb
push
movsb
popf
fsub
in
mov
push
push
cmpsb
loop
mov
fld
jg
ret
xor
mov
fldcw
adc
cli
mov
xor
dec
push
push
add
push
sub
dec
icebp
mov
lods
and
jnp
call
mov
enter
mov
mov
push
xchg
test
jmp
jge
xor
popl
aad
aad
xchg
push
stc
nop
nop
cmpsb
ds
setnp
daa
inc
xor
aam
addr16
xchg
mov
mov
xchg
jnp
shrb
lahf
andb
aaa
mov
cmp
push
mov
push
decb
push
pop
into
enter
in
push
push
test
jl
fisttps
sahf
dec
jecxz
cwtl
lods
push
sub
aad
pushf
mov
adc
sbb
fbstp
nop
aam
jg
movb
mov
fnstenv
fnstenv
mov
sub
xor
pop
cmpl
sahf
sub
mov
dec
push
data16
shr
rcll
lahf
jbe
and
cs
data16
cltd
xchg
and
adc
insl
pushw
imul
adc
mov
adc
andl
stc
popf
inc
push
outsb
movl
push
jmp
mov
sbb
into
loop
jo
jg
xchg
and
hlt
test
and
sarl
icebp
mov
rcrl
cmpsb
std
aaa
jg
or
lahf
sub
dec
outsl
and
push
sub
sbb
imul
rcrb
jo
movsl
jl
sbb
pop
xchg
add
sub
dec
add
lret
and
xchg
stos
bound
cmp
push
jo
mov
mov
je
push
popf
jg
subl
sbb
fidivl
mov
pushf
xchg
pop
xchg
mov
adc
aam
cwtl
pop
jno
xor
inc
and
ret
add
cmc
rcrl
mov
and
aaa
add
or
jmp
in
mov
ret
push
popa
jp
cmp
push
add
insb
loope
and
xor
int3
das
sbb
jb
in
dec
mov
stos
out
xchg
push
test
adc
popf
add
push
pop
in
jle
je
mov
aam
sub
pop
mov
or
dec
pusha
lret
in
push
pop
push
and
pop
imul
adc
adc
sub
addr16
repz
pop
jecxz
add
aaa
push
pop
and
adc
fcmove
icebp
inc
cmp
je
push
sub
daa
inc
cmp
push
jnp
mov
arpl
mov
std
lods
leave
push
inc
in
fadd
adc
dec
mov
lcall
xor
stc
or
call
cmc
inc
dec
sub
lds
and
loop
test
cmp
push
push
pusha
pop
dec
sbb
adc
inc
adc
shlb
inc
nop
adc
jge
dec
push
call
fidivl
adc
sbb
sbb
mov
and
test
add
add
lret
xor
stos
sbb
pop
ds
mov
dec
dec
rolb
sub
push
add
out
and
inc
in
cmp
lret
xor
pop
cmp
inc
ljmp
jp
xchg
sti
xchg
out
popf
sbb
dec
add
jge
nop
push
fidivl
add
lods
adc
mov
inc
cld
cmpsl
ds
in
decb
dec
loop
inc
sbb
js
push
popl
sti
mov
jmp
sbb
and
rclb
sub
fwait
add
int3
cmpsl
jne
in
loopne
or
enter
push
rorl
outsl
adc
pop
les
icebp
outsb
scas
mov
cmp
add
mov
mov
out
fsave
jno
loope
mov
sub
jo
mov
or
mov
dec
outsb
push
loope
mov
inc
sahf
mov
fnstsw
popf
fnsave
aaa
push
stos
jne
lret
inc
int3
jbe
shrb
add
mov
iret
jae
es
into
mov
cmpsl
out
jmp
test
adc
jge
inc
ljmp
cmp
ja
ds
ret
filds
repnz
inc
adc
mov
out
sbb
add
es
out
xchg
jmp
xchg
sub
cmp
test
push
jne
push
mov
mov
in
ljmp
and
cmp
jbe
mov
mov
mov
sti
mov
inc
pushf
sub
imul
pop
push
fstl
js
aam
es
std
call
fisttpl
mov
push
inc
faddl
test
sub
xor
scas
rcr
inc
ret
int3
movsl
mov
xchg
adc
ret
xchg
add
test
nop
fsubrp
inc
icebp
int
jle
mov
or
sub
scas
sub
inc
in
push
lods
adc
int
lret
fs
shr
mov
xlat
sbb
outsl
mov
leave
es
adc
sbb
aam
xchg
cmp
dec
icebp
cmpb
in
mov
leave
inc
pushf
mov
imul
sub
inc
pop
daa
and
fwait
addr16
dec
fildl
lods
xor
add
ret
sbb
lret
popf
mov
or
mov
inc
hlt
inc
hlt
enter
ret
push
mov
in
imul
mov
sub
dec
pop
out
mov
push
cmc
into
lods
ret
jnp
aaa
dec
dec
pushf
dec
xlat
sbb
fists
popa
int
jnp
add
std
xor
repz
js
inc
xchg
cmpsl
jecxz
jmp
lcall
or
addb
sti
sahf
push
jmp
mov
jo
jge
fs
adc
aad
data16
bound
mov
lret
pop
sbb
adc
imul
adc
idivl
push
mov
ret
add
sbb
popf
es
fs
jnp
dec
movsl
mov
sub
sbb
xchg
xor
lods
sbb
fs
test
xor
fbld
std
in
cmp
ds
outsl
outsl
push
movsl
je
lds
pop
dec
mov
xor
mov
mov
xor
popf
ret
xor
xchg
and
xor
mov
out
popa
push
inc
rolb
inc
out
inc
adc
pop
mov
inc
loop
mov
xchg
xor
sbb
sub
push
jge
ret
push
sbb
inc
dec
sbb
repz
cwtl
mov
mov
sti
mov
aad
or
mov
ss
pop
mov
push
and
js
pop
mov
lcall
pop
out
jo
shlb
cmp
cmpsl
dec
ret
push
xchg
test
dec
movzwl
mov
cli
jle
repnz
callw
daa
add
scas
popf
or
lcall
jne
cld
fcomps
les
fimull
or
lcall
push
cld
xchg
inc
sbb
fs
mov
push
pusha
ds
jecxz
aas
push
sub
fbld
into
jae
mov
sbb
add
xor
gs
js
adc
jp
cmp
test
xor
mov
gs
lods
push
gs
fdivs
repz
test
and
and
sub
push
xor
enter
sub
inc
pop
add
mov
pop
les
mov
je
std
xor
inc
ficompl
sub
clc
adc
inc
mov
mov
jae
adc
in
shl
sub
and
popa
shrb
inc
and
jle
imul
sub
and
ss
sbb
mov
mov
iret
inc
or
ja
cmp
sbb
test
adc
aaa
adc
loop
fs
sbbl
or
inc
lods
adc
sub
aad
xchg
xchg
pusha
sarl
or
sub
lret
mov
mov
adc
dec
inc
cltd
xor
push
in
mov
inc
jne
icebp
mov
lock
adc
push
push
xchg
fs
icebp
sub
pop
xchg
das
and
inc
movsl
sub
sbb
adc
popf
xor
cwtl
stos
mov
jmp
out
add
sub
jp
pusha
lea
enter
mov
fwait
idivb
test
or
add
or
sub
cld
cmpsl
jecxz
mov
movsb
shll
js
fisubrl
xchg
arpl
cmp
lods
push
loop
insl
lds
out
sarl
mov
sub
jbe
cmpl
cmpsl
add
es
jle
cld
pop
dec
cli
adc
movsl
pop
inc
pusha
xchg
push
pop
xchg
xor
jno
das
mov
shr
xchg
add
inc
dec
add
sti
dec
adc
pop
push
lock
and
loop
xor
lock
inc
adc
mov
jo
jae
jne
xor
lods
imul
pusha
pop
xorb
scas
cmpsb
cmp
sahf
mov
cmpsl
ljmp
mov
loopne
lcall
scas
inc
pop
xchg
sub
and
lods
xor
mov
in
loope
mov
sbb
dec
iret
pop
push
lods
and
pop
mov
xchg
dec
jo
adc
adc
mov
call
pop
std
sahf
js
sti
inc
aas
insl
das
add
fwait
pop
xchg
adc
xor
iret
xor
lods
dec
cltd
sbb
out
pop
ficompl
add
push
insb
inc
addr16
mov
push
mov
jnp
xlat
and
jns
outsb
sbbb
lret
inc
xchg
dec
xor
fldl2t
hlt
mov
jmp
mov
mov
fwait
sub
xchg
cli
pop
ja
icebp
bndmk
cli
mov
lods
bnd
in
sbb
mov
stc
cmpsb
arpl
int3
roll
or
xchg
push
lock
add
add
cmpsb
sbb
adc
mov
pop
dec
add
mov
outsb
sbb
fldt
sub
adc
cs
mov
lret
pop
xchg
sti
cmp
jmp
mov
xor
sar
in
mov
pop
inc
stc
aaa
push
and
push
jns
nop
xchg
xchg
mov
roll
hlt
imul
ret
cmpsl
sub
mov
push
xchg
mov
and
mov
sarb
jno
xorl
mov
nop
add
and
push
push
xchg
push
lock
fsubr
xchg
sbb
jp
shrb
sarl
fbstp
ja
pop
scas
test
addl
add
mov
or
dec
jp
push
mov
pop
lcall
sub
xor
sbb
frstor
cmp
jae
sarb
int3
push
sbb
xchg
sub
sbb
cmp
jecxz
add
push
ljmp
mov
cmp
cmp
shll
pushf
inc
aas
push
out
stos
in
and
adc
in
jl
mov
sbb
lahf
ret
rol
mov
cs
dec
mov
xchg
sbb
xchg
call
xchg
ds
xchg
mov
aad
in
jl
fwait
sub
sub
push
ret
jae
std
mov
xchg
mov
mov
aaa
adc
mov
pusha
cmpb
cmpsb
arpl
jnp
and
add
mov
and
dec
push
xor
movsl
mov
movsl
xchg
cmc
mov
or
and
jl
gs
movsl
in
addr16
mov
pop
test
pushf
pop
sub
pusha
ljmp
mov
add
mov
scas
sti
xchg
cmp
js
es
jecxz
pop
cmp
stc
mov
movsl
jno
fistl
cmp
mov
daa
outsl
push
in
ret
xchg
jp
sub
cltd
pop
in
mov
jge
mov
sub
cmp
mov
mov
push
dec
fistpl
arpl
rorl
jmp
xor
jp
pushf
lret
pop
mov
mov
inc
xchg
in
mov
jns
nopl
sarl
imul
jge
mov
pop
shl
jo
lahf
xorl
out
and
mov
pop
pop
sbb
cwtl
mov
inc
dec
scas
cmp
jecxz
insl
fmulp
bound
movsl
sarb
mov
outsl
in
leave
and
xor
jne
adc
test
in
add
xchg
mov
fdivrl
pop
push
aad
mov
xor
mov
cmp
fabs
add
xchg
mov
dec
inc
sarb
mov
arpl
push
xlat
cmp
sbb
cld
inc
lcall
fisubs
int3
outsl
xchg
pop
repz
mov
js
inc
fisttpll
lds
lds
jecxz
add
lret
jecxz
mov
enter
cmp
jb
mov
stc
cmpsl
push
stos
aad
fnstsw
arpl
add
push
test
and
lds
inc
insb
scas
daa
push
test
rorb
imul
dec
add
scas
call
pop
out
sahf
push
aad
dec
mov
sti
clc
xchg
popa
push
shll
out
xor
and
inc
mov
gs
cmp
daa
mov
jmp
clc
aam
lea
sbb
out
cmpsb
sub
test
repz
mov
mov
dec
adc
cltd
xchg
movl
xchg
add
dec
loope
insl
add
push
cmp
dec
movsb
addb
dec
mov
inc
mov
data16
bound
adc
xor
sub
jo
push
out
popf
sbb
popf
dec
incb
xor
outsl
lahf
nop
push
loop
xchg
aas
dec
movsb
out
es
fldcw
xchg
sbb
cmpsl
inc
mov
inc
dec
outsb
sub
nop
jmp
xlat
mov
sbb
dec
sbb
jnp
mov
cmp
es
pop
cmp
lcall
ja
cld
mov
pusha
push
or
xchg
xchg
les
insb
pop
in
fisubrl
and
ss
mov
scas
aas
pop
std
xchg
data16
push
je
mov
xchg
dec
jb
les
mov
jae
xor
stc
cmc
push
or
jae
inc
fsubr
adc
inc
int
in
push
test
push
xchg
push
mov
aad
jo
in
mov
ljmp
in
pop
sub
adc
mov
and
adc
xor
into
sub
rorl
mov
mov
filds
dec
cmpsl
jne
and
jno
cmc
pop
call
dec
enter
cmp
pop
ljmp
andb
jmp
mov
pop
leave
into
stos
mov
mov
and
xchg
ret
sti
sti
popa
rcll
fisubl
test
subb
pop
mov
pop
in
adc
adc
mov
lea
mov
test
loopne
xchg
adc
mov
sahf
sub
xor
dec
mov
mov
mov
in
add
sahf
bound
or
cmp
movsb
cmp
repz
push
sahf
ds
test
imul
push
stos
hlt
sti
jb
adc
inc
mov
sti
andl
lahf
add
scas
sti
popl
mov
sbb
push
popa
rcrl
cmp
out
mov
movb
lods
mov
sbb
aas
ja
cld
xchg
imul
mov
cmpsb
jl
jo
mov
xor
iret
int
sbbb
push
xor
add
idivb
cmp
or
ljmp
mov
fildll
sbbl
push
cli
pop
aam
sbbb
movsl
mov
cs
test
inc
xchg
pop
mov
lcall
mov
in
cmpsl
mov
cmpsb
dec
dec
push
stos
inc
inc
lret
inc
ret
movb
fcmovnu
xchg
push
adc
pop
cli
pusha
xor
ret
xchg
popf
xor
inc
push
or
dec
test
jl
dec
add
test
xor
mov
inc
fsubrp
lock
iret
mov
into
xchg
push
mov
sub
aas
call
xchg
arpl
lods
dec
pop
das
mov
ffree
adc
ret
imul
popl
cmp
push
incb
pop
lods
inc
pop
sbb
push
push
inc
lret
xchg
stc
nop
lds
xor
push
push
std
inc
cmp
add
imul
dec
in
icebp
shlb
push
push
je
jg
fists
pop
or
jns
or
xchg
subl
dec
mov
mov
subl
mov
sub
cwtl
mov
push
or
jecxz
sub
xchg
push
aas
add
in
xor
rolb
mov
or
gs
inc
or
lahf
add
mov
pop
inc
orb
out
cmp
adc
leave
mov
adc
into
mov
push
inc
push
sbb
stos
and
mov
mov
or
out
push
push
inc
sbb
dec
dec
loop
sub
shr
rcl
add
mov
sbb
ret
je
xor
jb
jmp
imul
sbb
cli
push
insl
mov
mov
mov
cmp
test
addr16
xchg
xor
pop
nop
movsb
mov
xchg
sbb
jns
inc
mov
jl
paddd
int3
int
sub
out
addr16
test
dec
fcmovnb
dec
test
sti
and
or
add
push
push
or
insl
ret
and
call
ficoml
scas
outsb
scas
xor
out
xlat
inc
pop
popa
xchg
cmp
adc
push
mov
js
mov
push
add
mov
xchg
cwtl
ret
insl
cltd
stc
sbb
sbb
dec
mov
and
outsl
mov
xchg
mov
pop
or
cmpb
pop
scas
jo
cmc
mov
sarb
mov
mov
data16
mov
push
dec
mov
iret
adc
push
sbb
push
inc
sti
inc
je
cltd
and
lahf
sbb
out
nop
and
repnz
or
xor
sbb
sub
cmp
cmp
mov
jl
lds
push
std
dec
sub
sub
push
shrb
dec
lret
loope
mov
push
xor
push
pop
jo
and
bound
rcrb
arpl
inc
lcall
icebp
push
out
je
inc
jmp
fstpl
loope
inc
pop
cltd
ljmp
push
getsec
dec
dec
push
ss
fwait
mov
scas
inc
ljmp
jmp
xchg
add
push
adc
mov
cli
xchg
out
sti
add
cmp
je
out
and
cli
xchg
mov
push
call
jne
cmpsb
lds
addr16
fisubs
or
arpl
sub
je
adc
jg
jae
lahf
cltd
xchg
add
out
jnp
mov
lret
mov
sub
in
push
shll
lds
add
jnp
pop
cmp
cld
sbb
outsl
sarl
in
mov
jae
out
jle
mov
jo
adc
xor
sarl
dec
pop
rorl
ljmp
cmpsl
ds
lahf
mov
adc
in
mov
aaa
daa
mov
lahf
in
mov
adc
in
dec
mov
inc
out
cmp
jle
sbb
push
sub
sbb
mov
ret
cmc
addr16
inc
push
dec
bound
rol
pop
add
or
jo
fs
xchg
shl
and
and
pop
es
call
das
lods
mov
andb
ret
fadds
scas
rcl
rolb
aad
cmp
mov
outsl
jnp
cmc
lds
mov
cwtl
push
out
or
adc
mov
pop
xchg
adc
sub
mov
popa
inc
mov
mov
test
pop
out
lahf
flds
dec
pop
pushf
jl
enter
pushf
scas
inc
ret
mov
xchg
decl
push
jmp
xchg
xlat
cmpsb
and
pop
push
popf
cmp
lds
sbb
sbb
add
sbb
subl
fbstp
addl
shll
push
jo
ljmp
mov
push
repnz
lret
cmpsl
bound
cs
xor
loope
enter
push
out
dec
mov
cmp
xchg
push
in
fstp
and
add
rcrl
cmc
adc
sarb
test
or
push
sti
nop
cmpsb
jl
leave
outsl
lret
dec
lret
jb
insb
sub
add
pop
repz
test
scas
mov
das
test
ja
pop
push
adc
insl
mov
pop
call
imul
gs
outsb
rclb
stos
jbe
pop
insb
and
push
mull
xlat
fadds
orl
or
and
subb
insl
adc
fwait
mov
in
push
repnz
pop
outsb
lahf
pusha
pop
rorl
mov
mov
jg
adc
sti
movl
xlat
xchg
mov
fsubrp
mov
jns
fucompp
mov
pop
jns
mov
adc
outsl
shrl
outsl
lcall
sahf
sbb
jns
sbbb
call
sahf
sbb
inc
fisttpl
cmp
push
push
movsb
loopne
adc
mov
fwait
sti
divl
and
scas
fsubrs
push
or
movsb
jg
push
push
shrl
sbb
dec
into
xchg
je
cmp
push
push
mov
jmp
outsl
icebp
mov
mov
mov
jge
call
add
mov
out
inc
lret
or
cwtl
stos
imul
stos
jo
dec
call
in
xchg
pop
push
ja
or
lss
mov
ds
cmpsl
call
f2xm1
and
adc
or
mov
sahf
jmp
int
fidivl
xor
movsb
stc
jns
mov
mov
or
mov
es
sbbb
inc
pop
sar
mov
out
call
cmpb
imul
clc
mov
incb
or
insl
xchg
sub
mov
cld
pop
mov
mov
fstpl
stos
mov
aad
pop
lds
mov
sbb
push
inc
or
inc
rcll
scas
inc
fcmove
pop
add
push
or
and
or
test
and
pop
fs
fs
sub
lock
ret
test
jnp
xchg
lods
and
in
adc
and
decb
enter
inc
sbb
imul
mov
push
dec
icebp
jae
cmp
mov
aam
mov
ret
add
and
lods
push
xchg
cs
cmp
aad
in
int3
out
xchg
in
ds
aad
clc
jb
pop
hlt
dec
xchg
mov
jns
subb
jg
inc
out
mov
add
fs
jae
mov
div
loope
out
adc
adc
push
icebp
adcb
fwait
clc
dec
jns
inc
sub
cli
push
cs
rcrl
cs
xor
cltd
pusha
and
dec
orl
push
or
xor
aas
push
dec
add
jl
jmp
movsb
ret
dec
nop
or
shrl
jge
add
test
mov
xchg
adc
repnz
push
dec
sub
inc
ljmp
fdivrs
lods
jmp
inc
mov
fwait
aaa
xchg
sbbb
sbb
pop
fiadds
xor
call
pop
add
sbb
jno
stc
orb
pop
jno
or
push
mov
fistpll
ret
mov
pop
mov
xor
mov
pushf
xchg
test
les
repnz
cmp
insb
in
out
and
je
cmp
or
push
lods
inc
xchg
imulb
push
sbb
repnz
push
in
ror
stc
stos
insb
mov
push
pusha
inc
fmull
sub
xor
push
dec
cmpsb
jno
idivl
movsl
adc
call
sti
jmp
xchg
or
dec
pop
inc
push
sbb
jle
mov
mov
cmp
jae
movsl
movsb
jg
xor
mov
cmpsl
push
aaa
addb
adc
mov
into
nop
adc
adc
adc
xchg
ja
data16
mov
push
clc
aam
xor
pop
ljmp
sbb
pop
je
iret
in
push
dec
and
enter
ret
jmp
inc
fisubl
popa
clc
jge
test
sahf
jg
or
in
std
lods
jl
xor
lds
push
mul
aam
ret
mov
test
cmp
or
dec
ret
cld
es
stos
inc
out
push
or
lock
dec
addr16
imul
sbb
and
in
inc
jp
push
lcall
or
cmp
cmp
mov
mov
mov
pushf
out
cld
rcrb
lret
rcr
das
inc
push
adc
mov
push
stos
cwtl
cmp
push
inc
xchg
add
and
push
shl
and
outsl
test
add
pop
mov
and
push
sbb
in
and
fcoml
lds
fwait
xor
push
mov
inc
xor
fdivl
nop
cmc
xchg
lret
shld
sub
mov
xor
sahf
mov
or
mov
inc
adc
mov
arpl
icebp
enter
inc
pop
insl
dec
pop
jo
lret
cltd
movsb
jecxz
ljmp
aad
push
out
notb
loop
inc
data16
test
das
xchg
mov
pop
rolb
sbb
mov
or
lret
das
fwait
in
xor
dec
cmpsb
ja
or
jae
or
sbb
out
cmp
in
or
test
icebp
fsubrs
out
mov
in
idivb
ljmp
std
mov
cmp
mov
adc
aam
movsl
push
pop
shll
je
fsin
xchg
test
pushf
adcb
movsb
mov
pop
jo
fsincos
mov
dec
adc
xor
cltd
mov
ss
sbb
daa
loope
fsubp
mov
pop
mov
and
ss
popa
push
pop
or
ljmp
pop
out
mov
jmp
ret
cld
push
xchg
daa
push
adc
dec
dec
into
faddl
sub
xchg
xor
das
adc
les
mov
lret
mov
leave
pop
insl
add
cmp
cltd
inc
test
jae
mov
cmp
fst
xor
fstps
outsb
sbb
fsubl
out
movsl
push
mov
push
ljmp
and
pop
shl
and
mov
sbb
lcall
push
adc
aad
negb
in
vunpcklpd
pminub
rolb
mov
addr16
push
imul
pop
sbb
lods
mov
xor
add
fcoml
inc
xchg
mov
test
jmp
mov
inc
in
loope
pop
ss
test
push
iret
jge
adc
int
push
test
test
xor
and
dec
arpl
add
mov
aas
sub
jno
clc
inc
jns
int3
addr16
cs
jne
arpl
xchg
popa
inc
adc
les
dec
dec
add
or
mov
jnp
fwait
shll
lds
cmpsb
dec
in
repnz
and
insb
inc
xor
pop
cwtl
xchg
out
mov
std
in
adcl
arpl
enter
dec
cmc
mov
int3
pop
push
test
popa
in
sub
pushf
mov
cltd
xor
push
and
mov
pop
int
enter
std
out
sahf
scas
movsb
out
add
std
and
popa
jae
cmp
nop
lods
and
sbb
jp
fwait
mov
fwait
mov
push
fucomip
repz
mov
mov
sub
mov
dec
xor
js
inc
mov
jmp
cs
sahf
in
mov
dec
adc
movb
cmpl
popa
xchg
lea
push
add
sub
stos
inc
ficoms
enter
mov
xor
lcall
aad
into
sbb
mov
or
mov
adc
xchg
fwait
xor
lock
dec
gs
mov
xchg
popa
sbb
jbe
decb
and
jle
and
jmp
lcall
outsl
cmpsl
adc
mov
sbb
xor
add
and
pusha
nop
stos
inc
mov
sub
inc
or
jno
pop
push
push
dec
fs
jecxz
jbe
ja
mov
jnp
dec
js
insl
sub
and
shlb
jecxz
aaa
inc
pop
push
in
test
mov
sub
into
in
lds
sub
mov
hlt
mov
movsb
push
mov
dec
fdivs
xor
sub
push
fcmovnb
jl
test
mov
sarl
or
rcrb
insl
scas
neg
cmp
popa
dec
pop
mov
adc
rorl
out
jp
out
sub
cltd
and
cmp
ds
aaa
mov
pop
stc
in
in
or
cmp
cs
add
xor
push
cmc
cmp
into
movsb
lahf
loop
in
int3
pop
popf
xlat
outsl
xchg
jne
jl
push
aam
mov
sahf
adc
cli
pushf
and
clc
pop
je
push
jns
pop
nop
adc
std
cmpsb
add
jl
lds
mov
iret
rclb
xor
xor
mov
or
jne
push
and
xchg
and
inc
pop
push
adc
sub
pop
xlat
roll
cmpsb
ds
imull
ret
inc
pop
cmc
mov
and
dec
push
stos
loopne
mov
mov
rcl
sbb
int3
popf
sub
push
in
mov
insb
pop
mov
adc
dec
lcall
inc
gs
adc
mov
push
mov
loope
int
cmp
sar
mov
dec
popa
notl
rorb
lcall
jno
rcll
add
push
leave
ds
mov
xchg
lret
lret
cmpsb
or
aaa
mov
lret
add
or
push
pop
mov
sub
jle
jns
fdivl
mov
push
in
ja
lods
scas
nop
or
mov
pop
pop
dec
in
lret
in
add
lods
jne
mov
xchg
sahf
sub
testb
mov
pop
inc
push
dec
mov
in
fucomp
adc
push
in
add
xor
dec
cltd
jg
ljmp
cmp
push
call
cmp
or
sbb
mov
rcl
adc
fsubr
mov
movsl
stos
fnstenv
jnp
cld
nop
xchg
xchg
test
push
sbb
bsr
add
jl
stos
xchg
dec
stc
daa
xchg
lods
loope
and
mov
xchg
ficomps
repz
outsb
sub
cmpsl
jmp
jb
mov
inc
push
pop
add
xor
lahf
cs
lds
mov
dec
andl
cmp
cmp
shll
jbe
jno
xchg
dec
testb
pusha
jbe
push
or
cmp
mov
aad
movsl
cld
jecxz
in
lret
out
jmp
ja
aaa
dec
mov
push
scas
orb
xor
sbb
mov
ds
add
xor
lds
notb
stos
cmp
sahf
inc
scas
int
cmp
jns
dec
sbbl
adc
mov
dec
pop
push
mov
jo
push
mov
into
das
sbb
push
in
and
sti
jae
adc
mov
notl
fdivrs
scas
xchg
xor
dec
jno
insl
je
pop
jb
shll
out
cmp
lods
loopne
es
ds
or
pop
gs
insl
xchg
mov
pop
in
push
cmp
jnp
iret
mov
pop
xor
repz
cli
ljmp
inc
pop
jp
shrb
mov
dec
movsb
sbb
fdiv
pop
mov
aam
and
fimull
stos
or
enter
cmp
sub
xchg
andl
loope
clc
sarl
aas
dec
aaa
sbb
cmpb
xorb
popf
inc
arpl
add
xchg
inc
or
dec
ds
icebp
test
xchg
dec
jecxz
xor
push
adc
insb
in
push
lods
dec
inc
xor
fnstsw
mov
ja
es
push
jae
lods
xchg
negb
lds
sbbl
pop
sahf
xor
cmp
push
test
test
mov
stc
clc
adc
sti
push
add
cmp
out
ljmp
jno
sbb
dec
xchg
sarb
mull
mov
push
aam
jae
iret
stos
lock
icebp
or
jl
cmp
test
inc
sub
in
push
fdivrl
sbb
int
cld
insb
dec
lds
testb
ficoms
movsl
cmp
adcl
int3
dec
aas
sbb
popf
cmp
dec
pusha
xchg
es
repz
in
or
mov
movsl
push
je
outsl
ret
mov
mov
dec
or
into
data16
jl
lock
xor
xchg
push
inc
jae
xchg
shlb
pusha
jne
lret
das
adc
dec
mov
add
daa
pop
test
pop
mov
mov
in
jmp
mov
jne
or
data16
call
enter
imul
imul
movsb
mov
jne
int3
fmull
out
fldenvs
scas
and
or
jg
mov
into
leave
nop
mov
mov
aad
in
xor
std
xchg
sub
sbb
pop
lock
ret
or
int3
jge
xor
push
out
mov
sub
mov
dec
jnp
inc
and
fsubl
lods
push
dec
loope
lahf
add
out
push
jmp
mov
enter
cmp
jae
loopne
dec
pop
jb
inc
test
ja
sbb
out
fdivrp
aaa
push
fcomip
xchg
mov
mov
jne
and
push
sub
cmpsl
test
enter
push
loop
xor
rolb
jle
pop
mov
jl
mov
js
shr
jns
inc
hlt
mov
add
pop
ficomps
and
adc
jbe
jno
push
cmpl
jecxz,pn
pushf
dec
mov
inc
jl
mov
xor
mov
dec
push
iret
push
mov
test
popa
shrb
mov
repz
xchg
xchg
ret
repz
call
or
sbb
nop
xlat
movsb
cmp
lcall
mov
mov
adc
dec
imul
dec
std
mov
lret
jo
pop
push
adc
sub
xchg
adc
sbb
mov
jmpw
dec
cmp
sub
xchg
mov
cmpb
adcb
inc
lds
and
sbb
mov
jno
repnz
push
out
sahf
fwait
and
insl
push
cmp
sub
lret
lret
js
stc
cwtl
cmp
lcall
or
arpl
mov
mov
cmp
or
negb
mov
popf
lods
or
ja
inc
and
dec
or
xchg
jbe
adc
pop
pop
adc
je
lcall
mov
arpl
in
xchg
aam
cltd
shl
int
push
ds
jb
movsb
adc
adcb
subb
adc
jo
and
push
xchg
in
das
popf
jns
xor
xchg
cmp
cmc
cmp
pop
dec
gs
or
in
ret
mov
add
push
xor
bswap
aam
xchg
add
aaa
aam
cmp
iret
push
cmpsb
cmp
push
imulb
das
sarb
aam
insl
inc
std
jo
pop
repz
hlt
mov
fs
enter
out
push
sbb
sbb
sbb
add
movsl
push
inc
pusha
push
mov
xor
inc
sti
xor
push
imul
inc
scas
faddl
popf
into
dec
js
imul
and
inc
cwtl
push
jmp
cwtl
pushl
test
lret
adc
push
ss
ja
inc
mov
dec
sbb
xchg
dec
stos
and
out
lea
sub
mov
or
cmp
out
rcll
cltd
pop
mov
pusha
sub
xchg
or
or
xor
mov
loope
xlat
xchg
cmp
mov
movsb
loopne
xchg
aaa
icebp
cmpl
or
into
cmp
hlt
push
jns
push
sub
arpl
dec
movsl
lds
jne
fwait
das
jno
inc
mov
sub
gs
adc
shr
cli
xchg
dec
xor
push
rcl
lret
xchg
pop
std
and
fldl
popa
scas
mov
jae
adc
and
int
out
mov
mov
pushf
ljmp
adc
jne
test
or
dec
adc
jl
int
test
push
inc
scas
stc
int
sbb
fnstenv
bound
push
dec
les
mov
mov
insb
xchg
adc
scas
orb
sub
std
pop
jo
aam
lret
outsl
add
popa
xchg
jl
push
cmp
fidivrs
or
imul
pop
ret
mov
lcall
bound
or
and
lods
cwtl
xchg
sbb
stc
insb
push
jbe
data16
cmpsl
jle
daa
mov
cld
cmp
fmull
rcrb
stos
sub
int3
pop
cltd
loop
repz
mov
pop
jmp
aas
call
add
add
jnp
adc
data16
dec
in
mov
add
push
lods
mov
adc
in
pop
scas
sub
sbb
xchg
das
xchg
sbb
lods
je
xor
xchg
mov
adc
out
lret
out
mov
in
mov
test
pop
mov
or
dec
scas
enter
pop
jmp
aas
mov
jb
sbb
lahf
or
pop
jb
mov
push
inc
xlat
sbb
lea
aaa
stos
jge
jb
mov
fs
push
sbb
inc
push
aaa
xor
add
es
aad
xchg
add
mov
push
ja
rorl
data16
xor
pop
imul
mov
adc
pop
mov
jb
les
or
add
xor
cs
fstpt
xor
sub
cmc
dec
repz
repz
sbb
les
or
rcll
cmp
pop
xor
pop
pmulhuw
sbb
dec
stos
xchg
dec
ds
sub
adc
int3
mov
rclb
ljmp
and
pop
scas
mov
push
lock
loopne
ja
add
cmpsl
mov
pusha
pop
loopne
cmp
test
nop
xor
loop
lds
jecxz
lds
loop
xchg
dec
mov
dec
out
jp
fnstenv
or
into
scas
popf
dec
scas
int3
int
fsubl
sbbl
cwtl
dec
jecxz
pop
sbb
xlat
out
mov
scas
mov
mov
incl
or
adc
into
sbb
sarb
outsl
or
adc
adc
ret
rcll
pop
jge
int3
xor
fs
pop
out
adc
fcoml
push
cmc
mov
lods
les
push
jns
cltd
mov
xchg
jbe
lods
dec
pop
aad
adc
add
test
jg
test
in
testb
mov
lds
xchg
repz
mov
fistpll
add
jns
push
out
jg
mov
das
out
cmp
outsb
jbe
add
mov
dec
decl
adc
imul
pop
stos
aaa
sbb
inc
push
adc
scas
fists
xor
sbb
stc
sbb
mov
fcoml
lret
sarb
les
pop
dec
jge
dec
pop
mov
mov
cld
xchg
sub
out
std
in
jno
jb
adc
test
lret
cmpl
lods
ja
stos
hlt
push
lds
out
fcomp
insb
sub
repz
xorl
xchg
pop
cmp
jno
mov
rclb
int3
out
cmp
repz
pop
out
xor
data16
lods
jle
or
push
out
sub
cwtl
xchg
dec
or
adc
cmp
hlt
pop
pop
loopne
sbb
std
mov
jo
and
int3
cmp
scas
pop
mov
es
icebp
mov
into
jge
add
punpcklwd
mov
push
or
lret
stc
mov
rorl
outsl
lret
rolb
iret
and
dec
lret
mov
movsb
rcrl
ja
add
add
nop
lret
lds
adc
and
mov
adc
pushf
imul
push
add
or
dec
lcall
inc
mov
aad
adc
cltd
not
jmp
xchg
dec
sbb
jb
mov
jns
sub
add
enter
bndstx
sbbl
rcr
ss
imul
call
stos
mov
push
xor
cli
lahf
push
push
repz
dec
xchg
jg
sub
loope
mov
dec
mov
cmpsl
cmp
pusha
clc
sbb
mov
les
mov
and
daa
mov
sti
mov
mov
add
mov
adc
mov
xchg
pusha
xchg
cld
into
gs
dec
cmpps
dec
push
out
cmpsb
xchg
cmpsl
xchg
fnstenv
or
jge
inc
hlt
adc
add
inc
fcmovb
fildl
mov
dec
rol
mov
ret
loop
vrsqrtss
adc
mov
dec
and
enter
and
cmp
loopne
xchg
pop
inc
std
inc
cmp
adc
mov
fdivl
call
or
cmp
sub
or
sbb
jns
repz
data16
xchg
scas
mov
lret
push
imul
cmp
stc
push
mov
add
sbb
adcl
inc
mov
add
les
pop
aam
lods
mov
push
jae
add
syscall
call
enter
pop
or
scas
inc
rcll
mov
cmpsl
test
mov
ret
pop
movsb
pop
sub
sbb
rorb
movsb
mov
pop
xor
jl
adc
inc
cltd
pusha
dec
jp
xchg
push
arpl
xor
jl
shrb
sbb
jno,pt
das
xchg
jmp
dec
in
sbb
addr16
imul
inc
adc
pop
adc
fucomip
sub
pop
in
push
or
mov
mov
pop
add
fstl
insb
or
js
shrl
aas
gs
jecxz
pop
jmp
add
xor
pop
mov
insb
sbb
outsl
and
xchg
add
sbb
pop
mov
stos
and
cld
lea
in
fcompl
scas
add
fbstp
aam
lahf
nop
icebp
out
and
inc
stos
xchg
xchg
add
mov
fildll
pop
ja
arpl
loopne
or
xor
gs
and
adc
lds
inc
mov
ss
js
aam
jge
cmpsl
dec
sub
popf
adc
add
adc
stos
sub
jne
sub
dec
pop
test
mov
lcall
movsl
js
jnp
lcall
pop
cmp
cmp
aam
sahf
cmp
cmpsl
jmp
or
cmp
cmpsl
outsl
adc
dec
add
iret
pop
sbb
mov
push
push
sub
dec
mov
or
mov
and
aam
jns
or
out
movsb
fldcw
sub
test
xchg
pop
out
flds
xlat
cs
scas
ficoms
call
and
movsl
mov
push
sahf
or
sub
or
bound
mov
push
std
add
aam
xor
cli
js
dec
stos
adc
mov
cmp
mov
lret
gs
loopne
push
push
and
jl
xor
addb
add
push
mov
mov
xchg
out
pop
sub
stos
call
or
xchg
jle
scas
sahf
mov
das
cld
ss
lcall
mov
dec
push
in
jp
iret
adcb
pop
lods
ret
mov
ja
pusha
cmpsb
inc
rolb
ficoms
mov
enter
lock
fcomp
xchg
sahf
sbbb
test
sub
add
scas
or
addb
adc
dec
in
mov
mov
scas
fbld
jb
add
decl
enter
xor
test
lret
pop
mov
jge
mov
rcr
movsb
mov
push
hlt
adc
hlt
or
xor
xchg
cmp
jns
pop
inc
dec
dec
stc
cmp
push
mov
cmp
sub
inc
jbe
gs
addb
cmp
fisubs
or
add
test
push
push
fidivs
xchg
pop
inc
stos
inc
xor
xor
xchg
lret
sbb
cwtl
mov
cmp
rorb
lods
mov
subl
jp
push
inc
int3
mov
xor
pop
rclb
mov
or
jbe
aaa
xor
mov
das
push
sahf
cli
pop
nop
or
sub
mov
movsb
pop
rcrb
pop
xchg
dec
in
std
jb
lret
fldcw
stos
es
jp
int
pop
out
shll
ror
push
mov
mov
xor
lret
xor
inc
and
cmp
fs
shrb
add
and
push
outsb
mov
mov
les
stc
into
rcrl
inc
pop
and
fucom
push
faddp
add
addr16
out
cmpsl
inc
push
fcomi
out
or
mov
test
xchg
mov
pop
movsl
repnz
push
in
clc
mov
hlt
mov
xchg
jbe
shll
cmp
dec
pop
add
out
add
sbb
and
or
or
test
jl
sbb
xor
mov
sbbb
xchg
movsb
pop
add
ret
imul
xor
pushf
pop
adc
add
sub
sub
pop
or
sarl
aaa
dec
imulb
pop
jo
movsb
adc
xchg
xchg
js
je
or
ds
push
imul
movsb
inc
dec
sub
nop
dec
loope
cmp
shll
inc
out
jae
setns
gs
adc
hlt
roll
comiss
dec
jno
adc
fimuls
push
divb
das
xchg
dec
fistpl
ss
daa
jge
insl
addr16
jae
or
sbbl
insl
gs
ret
and
popa
aad
jb
pusha
add
and
pop
jl
dec
in
jle
add
xchg
xchg
lret
mov
les
push
or
mov
jae
outsb
mov
shlb
mov
pop
scas
scas
cmp
push
cmp
fs
mov
pop
iret
out
je
cmpsb
inc
dec
sbb
gs
jle
fsubr
imul
clc
sub
xor
cs
cld
xchg
pop
pop
push
inc
pop
mov
push
or
das
jo
adc
push
je
xor
cli
cmp
es
fucom
pop
pop
mov
fs
sub
sti
fisubl
jg
js
mov
mov
rolb
mov
push
jecxz
or
mov
xchg
gs
lea
sti
or
out
icebp
xchg
negl
fdivrl
push
sub
addr16
inc
add
sbb
cmp
inc
adc
js
sbbl
fildll
cld
das
cli
mov
or
cmp
mov
fmull
enter
sbb
sbb
outsb
inc
jbe
cli
dec
outsl
mov
or
xchg
adc
pushw
js
inc
scas
nop
xor
push
mov
and
popa
jg
push
into
ret
pop
mov
inc
scas
adc
mov
daa
hlt
scas
aad
xorb
dec
and
mov
dec
mov
adc
icebp
xchg
add
inc
xchg
js
lret
mov
xchg
push
pop
mov
mov
out
outsb
mov
subl
lret
ss
nop
mov
xor
add
xchg
cmp
lahf
mov
inc
call
mov
negl
incl
ja
push
adc
push
push
adc
out
lcall
lcall
xchg
inc
and
fmul
sbbl
pop
push
movsb
ds
jle
mov
cmp
jno
mov
test
js
je
out
cmp
xchg
or
xor
adc
ss
loop
insl
pop
lcall
xor
fbld
xchg
aad
dec
cltd
imul
sub
xor
adc
cli
lea
test
lcall
sbb
je
gs
mov
clc
clc
movsl
addr16
dec
cmpb
ds
out
inc
fsubl
push
cs
push
in
xchg
pop
daa
xor
pop
and
stos
xorb
xchg
inc
xchg
adc
fidivl
out
int3
mov
hlt
mov
hlt
test
mov
inc
push
add
repnz
ds
inc
out
jne,pt
xlat
icebp
mov
test
fldcw
adc
jbe
jae
mov
sbb
and
aas
dec
add
insl
sbb
inc
idivl
hlt
shr
adc
dec
pop
jo
or
mov
mov
call
jg
aam
das
or
lahf
jmp
test
push
cmp
cmp
cmp
out
and
xchg
jge
int
out
xor
pop
lcall
inc
add
dec
inc
das
clc
lock
call
mov
or
ret
push
push
jecxz
test
js
mov
push
jae
jmp
xor
xlat
or
mov
adc
daa
inc
lock
push
stos
xchg
fdivl
int3
std
rorl
sub
sbb
nop
jno
ss
pop
es
call
mov
cmpsb
or
in
and
movb
xor
popa
cmp
shll
adc
mov
sbb
addr16
insl
repz
push
addb
test
jne
or
xor
adc
inc
dec
rcrl
sti
pop
daa
cli
cmp
mov
imul
mov
rorb
add
sbb
push
rorl
mov
mov
xchg
sbbl
jecxz
fucom
lcall
mov
mov
sbb
cmc
mov
jo
inc
sbb
mov
sbb
loope
out
sbb
in
inc
lods
pop
lret
cmpsb
lods
inc
pop
jmp
dec
mov
push
and
push
movsl
ret
js
negl
or
mov
cwtl
movsb
inc
mov
inc
sarl
inc
pop
sbbl
mov
stc
je
xlat
outsl
dec
mov
pop
outsb
fbstp
inc
mov
clc
enter
adc
lea
es
hlt
xchg
sbb
pusha
jg
push
sbbb
push
out
xchg
push
popa
imul
pop
lcall
and
fimuls
jg
pop
mov
sub
jmp
push
sub
mov
out
mov
call
ljmp
jp
mov
add
movntq
adcl
stc
inc
out
rclb
push
mov
shl
add
sbb
leave
mov
shll
stos
xlat
shr
sub
cmpsl
xor
xorb
aad
cmp
out
mov
or
lea
repz
xchg
pop
int
sub
hlt
mov
push
in
cld
push
std
fcompl
mov
sbb
and
mov
scas
sub
ds
cld
add
hlt
addr16
mov
loope
push
cmp
ljmp
push
out
adc
sbbb
out
xchg
mov
ret
push
mov
std
orl
in
cmpsb
adc
sbb
nop
pop
and
repz
jle
icebp
movsl
push
sbb
test
fisttpll
push
and
pop
jle
jns
pop
lahf
and
mov
mov
jo
mov
xorb
pop
fiaddl
add
dec
pop
mov
fcoml
sbb
inc
bound
cmc
iret
and
int3
sbb
daa
inc
popa
cmpsl
test
jle
dec
hlt
mov
jle
fiaddl
sbb
pop
push
and
lret
adc
push
push
xor
movq
das
or
outsb
push
cmp
mov
dec
xchg
dec
dec
imul
loop
mov
out
test
inc
in
inc
loope
dec
pop
in
cmp
test
jo
pop
push
mov
imul
aam
outsb
sbb
stc
daa
push
mov
test
test
leave
call
sub
dec
shlb
lahf
insl
in
mov
addr16
push
subl
ljmp
loop
lea
fs
xchg
adc
test
test
push
pop
leave
out
add
fnsave
inc
ljmp
icebp
int
cli
cmp
movsb
xor
sbb
imull
ret
movsb
push
dec
and
hlt
mov
xchg
push
jp
or
into
arpl
jle
fisubrs
enter
rol
jl
cmpsl
sbb
loope
add
jns
inc
mov
sub
and
pop
cmpsl
scas
inc
add
out
xor
daa
mov
and
pop
out
insb
lock
jmp
sahf
xchg
jo
scas
lods
adc
iret
inc
bound
jae
ja
stos
decl
dec
inc
sbb
mov
mov
bound
int
nop
dec
testl
fwait
lret
pop
psrlw
pop
shr
insl
out
loop
jp
dec
and
ja
and
push
pop
insl
cmp
loope
mov
sub
add
movsb
cmp
hlt
pop
xor
stos
ret
movsb
dec
loopne
add
stos
sub
insl
ljmp
outsb
test
ja
scas
test
jns
data16
out
xchg
mov
pop
insl
psrlq
push
cmp
cmp
int
or
shll
pop
rorb
adc
adc
mov
imul
pop
sbb
das
xchg
xor
pushl
sahf
xor
pop
pop
dec
cld
sbb
das
bound
ret
mov
xchg
mov
aad
lret
lea
or
adc
dec
in
cli
dec
push
loopne
imul
lea
repz
jecxz
or
and
rcrb
adc
adc
xor
scas
mov
mov
xchg
rcrl
inc
mov
adc
addr16
ficoml
dec
sbbl
in
and
push
inc
int
and
iret
ljmp
mov
in
cli
sbb
or
movsl
outsl
mov
cltd
in
test
jp
out
or
dec
mov
sarl
outsl
stos
mov
add
sub
pop
movsl
icebp
nop
jnp
pop
movsl
psubd
and
mov
adc
mov
xor
pushf
mov
sbb
dec
xchg
jnp
xchg
cwtl
dec
dec
into
add
int
shl
sub
push
push
push
cwtl
mov
sar
mov
mov
inc
or
rolb
sbb
sub
xor
ret
jne
fists
arpl
test
or
mov
mov
imul
in
aas
xor
outsb
insb
scas
lahf
and
adc
mov
sub
xchg
clc
xor
insb
pop
fcomip
call
mov
repz
leave
sub
push
lea
xchg
movsb
lods
push
sub
sbb
js
add
shlb
dec
fnsave
fidivs
sub
iret
popf
pop
dec
loop
mov
mov
jg
push
jle
stos
mov
sbb
push
inc
mov
adc
cs
jmp
mov
out
jge
sbb
outsl
mov
imul
and
sub
testl
mov
xchg
leave
scas
push
cmpl
xchg
arpl
out
stos
lds
and
pop
icebp
fsubrl
push
sub
in
int
pop
xchg
cmpsl
push
jnp
stos
stc
ret
pop
sbb
call
hlt
sti
fwait
cmp
push
testb
cmpsl
addl
xchg
mov
mov
mov
inc
in
icebp
popa
xor
cs
dec
aad
sbb
xchg
add
je
xchg
mov
arpl
xchg
scas
in
loopne
or
cwtl
js
int
and
push
xor
scas
push
inc
xor
out
arpl
jns
cmc
or
int3
fs
outsb
std
fisttpll
jle
jmp
push
fnstenv
out
aaa
insb
ja
xor
and
ljmp
stos
ja
fbstp
inc
fdivs
pop
aaa
dec
mov
mov
ss
lea
sub
mov
call
das
test
icebp
inc
frstor
movsl
ljmp
in
popf
sub
push
inc
das
jo
mov
ficoml
jns
or
jns
mov
xchg
inc
mov
jp
xor
and
das
cmp
and
jbe
dec
test
pushf
int
popf
push
cs
and
iret
lods
jmp
pop
ret
sbb
mov
je
mov
pop
xor
daa
inc
sbb
call
stos
lds
insb
add
mov
lret
mov
faddl
in
mov
call
pop
mov
inc
adc
clc
aad
xor
pop
push
shlb
cmp
sahf
bound
push
push
pop
sbb
es
xchg
mov
pop
enter
pop
mov
scas
out
xorl
mov
pop
movsl
sub
fmuls
add
xchg
je
pop
cli
lods
fsubrs
jecxz
int
mov
push
and
lcall
stc
mov
cmpsb
in
mov
add
and
lock
or
or
out
mov
pop
inc
fidivrs
test
scas
clc
pop
aad
or
inc
pusha
ret
cld
leave
dec
xor
flds
sbb
in
mov
jg
stos
xlat
pop
inc
insb
lret
pop
sahf
add
mov
sbb
sbb
cmpsb
or
sub
sbb
sub
push
or
jne
cli
inc
pop
jle
jp
cwtl
jle
xchg
pop
ret
int
aas
mov
and
pop
mov
int3
mov
or
or
fnstcw
bswap
push
inc
sarl
push
mov
jmp
outsl
mov
pop
not
pop
ss
outsb
aad
fcoms
daa
in
inc
mov
mov
sbb
cmpsl
push
inc
jne
push
mov
scas
pop
sbb
and
rcrl
inc
outsb
imul
jno
dec
filds
gs
ftst
sub
add
push
movsb
repnz
and
or
dec
cmp
push
popf
test
mov
cmp
and
cmp
ret
fldl2t
inc
lods
dec
fisttpll
jo
or
push
jp
mov
iret
out
out
inc
push
jmp
dec
aas
cltd
jge
test
jl
fdivl
adcb
inc
imul
pop
mov
test
dec
stc
je
jae
push
cmp
mov
pop
test
dec
in
imul
jbe
mov
dec
and
and
add
das
inc
inc
pop
adc
bound
jne
cwtl
cmpsb
jb
aas
fldt
into
jo
cmp
lods
mov
stos
lcall
out
daa
data16
fmul
pop
fistpl
daa
jl
mov
ja
jp
xchg
nop
lea
lcall
in
inc
or
cmp
adc
sbb
inc
ret
iret
in
dec
movsb
out
push
adc
out
rcll
or
lret
mov
jnp
lret
sti
mov
into
jb
push
lods
inc
dec
xor
xchg
dec
pushf
add
daa
inc
dec
insb
fildll
stos
es
add
lds
mov
dec
jle
mov
lea
mov
jne
insb
cmp
xchg
mov
leave
mov
pushf
mov
push
lods
push
cmpl
ds
push
lods
push
xchg
ds
fnstcw
cs
xchg
mov
cltd
adc
shrb
imul
mov
xor
loop
ljmp
jno
and
aam
stc
wbinvd
adc
sahf
mov
or
les
mov
les
cwtl
and
pop
rclb
je
xor
push
subb
mov
push
movsl
std
das
out
shlb
imul
aam
out
dec
mov
cmp
add
sub
repz
push
mov
sub
xchg
add
insl
js
jg
in
lcall
cli
fcmovne
and
pop
adc
xchg
cmp
push
mov
lds
cmp
daa
add
cmp
mov
imull
cli
mov
sbb
xchg
mov
pop
ds
ss
in
inc
jge
fsubrs
dec
popa
xor
xor
into
popa
popf
in
mov
pop
mov
mov
ja
insb
sub
mov
jae
cmc
sub
scas
push
loopne
sub
and
add
push
xchg
cs
out
push
pop
loop
aam
jge
je
cmc
pop
repnz
jmp
enter
mov
jo
xor
sbb
dec
and
mov
test
fsts
jmp
stos
dec
push
sub
repnz
in
xchg
rcrb
call
icebp
out
out
pop
cmpsb
std
nop
adc
jbe
clc
std
rclb
add
mov
push
sbb
dec
xor
and
cmp
mov
pop
dec
push
mov
ret
cmp
lds
insb
sub
jae
and
pop
add
xchg
stc
mov
aaa
xor
xor
adc
cli
push
and
xor
insb
cmpsb
inc
clc
adc
aaa
stc
xchg
xchg
mov
test
cmp
dec
loop
inc
leave
sbbl
sub
push
lret
pop
inc
insb
fldenv
fsubrs
popf
mov
cmp
sub
sbb
repz
xlat
les
loopne
xchg
jmp
mov
mov
stos
inc
stc
cmp
cmpsl
push
push
inc
mov
mov
or
aas
push
call
lods
pop
ljmp
jno
or
sub
sar
push
sbb
pop
push
cmpsb
push
fwait
lods
test
gs
sbb
and
popf
stos
es
pop
or
adc
jecxz
fwait
xchg
pcmpgtw
movsb
leave
jecxz
inc
mov
jp
pushf
mov
mov
lss
adc
dec
outsb
loopne
mov
and
stos
sbb
ret
icebp
mov
sarb
rorb
in
loope
xchg
xchg
xor
add
mov
and
adc
push
add
cmp
imul
push
push
lcall
push
jmp
test
jb
sub
mov
cmp
stc
mov
xchg
js
nop
sbb
mov
leave
cmp
loop
fisttpl
call
and
push
stc
inc
add
shlb
adc
add
jae
mov
and
jecxz
lret
out
mov
aad
cld
adc
ljmp
xchg
lods
or
int
push
or
mov
sub
call
mov
adc
cmp
and
push
fneni(8087
pushf
and
jecxz
push
mov
sti
sbbb
xor
into
sbb
test
ficompl
jne
lock
mov
push
cmp
mov
and
and
shrl
cmpsl
test
enter
fnstenv
dec
mov
cmp
mov
lds
push
mov
scas
cli
or
orl
jl
in
add
out
ret
sub
sub
rcrl
mov
xlat
fdivrs
adc
push
int
xor
mov
lahf
cli
stos
lcall
inc
pop
lret
test
loopne
mov
shll
in
test
dec
pop
pop
push
pop
xor
lahf
lods
shlb
add
pop
pop
jno
into
das
cmpsl
mov
insb
je
mov
mov
cmp
orl
clc
inc
sbbb
std
pop
outsb
push
pop
pop
mov
cmpsb
sbb
pop
jb
cli
adc
jns
xlat
dec
stc
aam
andl
stc
inc
fdivs
xchg
stos
fcompl
mov
daa
xor
mov
push
push
ret
jle
loope
jo
in
add
mov
ret
ss
jb
or
aad
xchg
inc
inc
cmc
push
inc
push
adc
movsb
mov
hlt
pop
out
and
inc
jmp
ja
scas
xchg
in
pop
adc
lea
jg
sbb
cmpb
cmc
pop
push
push
mov
outsb
repz
push
pushf
int
adc
dec
push
inc
sti
jnp
arpl
xor
mov
push
dec
inc
fldcw
adc
add
or
add
jae
mov
out
xchg
loopne
and
sbb
adc
imul
ret
int
xchg
push
ss
and
push
fnsave
inc
lret
out
push
mov
xor
jbe
inc
out
jge
sub
aaa
into
cwtl
jbe
xor
cmp
push
pop
cmpsb
ret
mov
enter
xor
in
scas
inc
fnstsw
push
fs
test
mov
addb
adc
rcr
rorl
sahf
inc
nop
movsb
fisttps
cmp
lcall
cmpb
sub
cmpsl
or
lcall
xlat
out
xchg
cmc
mov
sbb
rorb
sbb
sub
or
fidivrl
fs
mov
fs
ss
cmpsb
out
mov
cmp
cmpl
mov
cmp
xchg
popf
lods
popf
xchg
int
fwait
cmp
pop
outsb
xchg
sahf
ss
sub
lods
jne
inc
xchg
add
pusha
pop
cmp
into
cmc
xor
mov
movsb
cmp
mov
adc
nop
mov
pop
imul
hlt
mov
pop
adc
or
fnstsw
out
push
cmp
popl
xlat
xor
aam
xchg
add
out
add
in
jp
sbb
icebp
cmp
outsb
mov
dec
mov
sti
stos
cmp
sarl
fisttps
push
xor
jmp
inc
fstpl
mov
mov
sbbb
sbb
outsb
std
insl
sub
nop
in
test
fmuls
or
mov
adc
ret
fdiv
add
and
jbe
cwtl
push
adcl
or
push
hlt
mov
loope
xlat
insl
ret
add
lods
sbb
mov
xlat
outsb
pop
push
push
rcrb
jnp
jnp
xor
pop
bound
mov
popf
arpl
jmp
ficoml
adc
lcall
push
mov
sub
iret
arpl
add
ljmp
push
xchg
ja
push
xor
add
ja
out
jae
dec
sub
lds
xor
xchg
ja
clc
lahf
push
movsl
adc
mov
icebp
cmpsl
or
push
dec
or
imul
pushf
xor
insl
aad
jp
mov
mov
mov
fisubrs
cmpsb
ds
aas
or
in
and
xor
xor
out
sub
adc
rorl
loop
out
inc
fcomps
mov
adc
and
enter
xor
outsb
sbb
pop
push
and
lock
insb
inc
push
fdivl
mov
scas
fsubs
loopne
sbbb
sti
stos
mov
sbb
mov
jp
push
mov
jle
das
mov
sbb
xor
scas
and
movsb
and
and
sbb
sahf
add
repnz
mov
xchg
subb
ds
mov
dec
push
or
push
mov
cmpsb
sub
pop
hlt
mov
outsl
clc
mov
push
jle
xchg
xchg
dec
jl
pushf
xor
call
andb
sbb
xor
iret
data16
inc
jbe
cmp
cmp
pop
enter
test
or
cltd
fnstcw
mov
and
or
nop
mov
stos
mov
jge
cmc
pushf
icebp
xchg
mov
pop
cmpsb
addr16
mov
jmp
sub
inc
pop
js
push
jbe
fs
mov
fdivl
and
mov
pusha
ljmp
adc
ss
in
dec
push
stc
popf
jns
je
jb
mov
mov
xchg
jg
arpl
and
sahf
stos
add
dec
pusha
iret
cmp
js
add
inc
lret
cmp
jne
in
or
adc
add
sub
mov
jnp
test
lods
inc
mov
adc
icebp
lret
and
rcrl
sub
pop
lahf
push
sub
push
daa
push
jmp
in
dec
or
aam
bound
cmc
and
ficompl
xor
jo
ret
shll
test
or
mov
loopne
aad
sub
lds
ret
add
int
pop
mov
mov
in
aam
cmp
xor
inc
adc
nop
sub
lods
es
mov
mov
lods
roll
pop
movsb
inc
and
ss
dec
mov
or
cwtl
sbb
sbb
cmc
sub
sbb
pop
test
in
xchg
xchg
cmp
repnz
jp
mov
bound
and
clc
xor
push
andb
or
outsl
cmp
push
pushf
mov
subl
add
fdivr
cmpb
add
xchg
imul
cmc
mov
ret
sub
iret
push
mov
test
mov
pop
sahf
push
adc
pushf
adc
call
and
jbe
jbe
aad
insb
rorl
cld
hlt
push
jae
cmp
ret
popa
sub
dec
mov
or
mov
pop
jg
fs
cmpsl
sub
sbb
ds
push
pusha
sbb
xchg
ficomps
mov
dec
jne
add
sahf
xchg
nop
call
cmp
xchg
add
sbb
faddp
outsb
rclb
cmc
push
jl
idivb
movsb
mov
sbb
mov
mov
cmp
sub
mov
imul
push
mov
mov
push
in
neg
rcr
aam
mov
sub
cmp
pop
sbb
xchg
and
inc
in
cwtl
mov
pop
leave
sub
iret
out
jmp
and
pusha
pop
push
mov
data16
push
outsl
push
outsb
xor
xchg
ret
mov
xchg
inc
leave
inc
cwtl
das
pop
outsb
daa
mov
mov
fisubs
xchg
pop
and
dec
out
in
std
xchg
sbb
sbb
mov
inc
popa
inc
fsubrl
sub
push
inc
push
std
outsb
clc
outsb
icebp
inc
fisubl
pop
add
push
imul
cmp
adc
mov
inc
sar
mov
aad
fmuls
xchg
pop
cmp
int3
test
out
lret
loope
scas
add
push
push
xor
adc
in
jno
jno
pop
shll
sbb
out
pop
das
popf
cmp
data16
loop
xcrypt-cbc
cmpsl
adc
je
ret
outsl
roll
push
xor
out
sub
test
movsl
into
hlt
pop
out
and
test
jne
je
add
jecxz
in
cmpsb
inc
rcrb
outsl
in
jp
dec
add
jle
mov
std
cli
pushf
xor
subl
fs
and
sbbl
leave
pop
and
push
inc
add
mov
in
movsb
push
cli
mov
jns
inc
imul
ret
je
or
movsl
outsl
hlt
add
lds
mov
cmp
xor
sbb
adc
xor
pushf
xor
inc
lds
sub
ja
jg
inc
sbbl
mov
jnp
cmp
cmpl
ljmp
sbb
repnz
lds
fldt
push
sbb
movl
into
notb
int3
push
rcrb
das
out
fwait
xor
xchg
lock
adc
ds
dec
pop
inc
insl
or
popf
outsl
adcb
lock
lcall
ds
into
rcll
pop
mov
lahf
das
xor
pusha
test
ret
mov
add
insl
fwait
or
mov
loop
push
mov
mov
sti
cmp
dec
fsubr
mov
pop
xlat
in
pop
bound
add
es
cmp
fbld
fimuls
scas
jge
and
in
ret
xor
cmp
mov
outsb
je
insl
stc
mov
xchg
add
scas
xchg
adc
mov
push
or
pop
pushf
xor
popf
dec
orl
jp
push
iret
push
adc
cwtl
cwtl
mov
pop
cli
jns
xchg
and
add
xchg
xor
dec
mov
mov
int
and
mov
jg
fucomp
mov
pavgw
jne
call
mov
stos
mov
in
mov
lods
mov
out
add
call
cmp
inc
ret
call
iret
pop
pushf
ja
push
adc
cmpsb
mov
int
sub
ds
sub
adc
dec
dec
inc
or
inc
sbb
sub
fwait
pop
xchg
leave
jae
mov
stos
jecxz
mov
or
adc
mov
aaa
add
add
pop
jecxz
dec
out
repz
push
jnp
push
lods
sub
fidivrs
shrl
scas
cmp
mov
dec
lock
push
es
gs
push
jo,pt
jne
stos
cmpsl
inc
bnd
ret
aam
xchg
pop
test
push
lcall
or
fwait
out
xchg
jp
std
adc
add
and
xor
add
divl
jmp
pop
shrb
mov
jne
sbb
jl
cmp
lea
rcrl
or
mov
fildll
test
inc
sahf
add
sbb
jbe
jnp
pop
insb
cmp
add
mov
mov
and
adc
cmp
adc
daa
push
sbb
mov
mov
jp
jno
cmp
lea
mov
addr16
jl
out
mov
popf
arpl
add
into
mov
fsubrs
pop
jnp
jb
in
xor
push
mov
outsl
outsl
in
or
lea
imul
test
xor
add
in
push
adc
fwait
jmp
sbb
sahf
sbb
pop
outsl
add
pop
jne
aam
arpl
xorl
or
imul
andb
add
je
rcrl
fisubs
faddl
scas
mov
lea
movsl
jb
mov
sub
dec
test
sbb
cmp
out
mov
aam
or
xchg
arpl
cmp
inc
popf
pusha
cld
pushf
sbb
fwait
cmpsl
inc
repnz
mov
inc
or
mov
test
mov
jl
inc
mov
mov
cld
bound
setle
mov
xor
adc
icebp
addr16
scas
test
jg
jecxz
xor
fists
lcall
dec
mov
mov
vpsrlw
xchg
add
icebp
adc
cld
stos
and
dec
dec
inc
lods
mov
mov
fcoml
stc
fsubrl
push
ds
xor
mov
adc
jo
cmc
push
in
jg
es
xor
dec
xchg
push
jo
mov
xor
pop
repz
outsl
loop
mov
jmp
inc
lods
cmp
push
scas
fwait
jnp
jne
loopne
adc
xor
adcw
add
push
sbb
pop
mov
and
mov
sub
stc
sbb
mov
push
arpl
jnp
cmp
sub
in
fbstp
and
lock
mov
fwait
xorl
mov
inc
pusha
scas
adc
arpl
mov
pop
lea
cmpb
lock
sub
pusha
bnd
sbbl
and
test
dec
ret
lods
aaa
popf
pop
pushf
xlat
shrb
inc
mov
rolb
mov
sub
sub
std
ja
outsl
ret
lods
pop
movsb
push
hlt
mov
int3
add
inc
mov
mov
jecxz
dec
jnp
cmp
mov
popf
mov
ret
out
sbb
lret
jecxz
inc
dec
or
scas
fcmovnb
shlb
loope
pop
movsb
ds
add
jae
das
xchg
pop
loopne
adc
mov
jg
sti
or
imul
in
jecxz
sbb
pop
push
mov
cmp
lcall
insb
adc
leave
mov
push
imull
lods
out
fwait
int3
fmul
jmp
pop
in
pop
and
jp
cmc
pop
gs
cmp
xor
push
mov
xor
inc
xchg
test
out
daa
jbe
dec
das
push
scas
cwtl
cmp
add
pop
ljmp
dec
mov
add
jl
pop
inc
das
jbe
cmpsl
push
lea
jnp
jo
test
rolb
mov
mov
insb
outsl
xorl
push
gs
fnstenv
or
fwait
cmpsl
adc
or
and
pop
jmp
mov
sub
mov
xchg
cmp
cmp
lds
mull
or
mov
fidivrl
out
cwtl
dec
mov
rcll
mov
adc
sub
rol
loopne
dec
sub
sbb
mov
pop
mov
cmc
xchg
dec
jecxz
clc
xchg
movsl
add
jno
sahf
in
inc
sbb
mov
pop
xor
sub
rcrl
or
pop
mov
sub
pop
or
nop
mov
mulb
loope
add
add
icebp
dec
mov
stc
ja
clc
out
xchg
pop
jmp
mov
xor
in
sarb
adc
xchg
jmp
movsb
into
iret
xchg
cmp
sbb
adc
xor
pop
ret
add
inc
mov
adc
mov
mov
bound
fwait
xor
test
sbb
push
outsb
push
in
inc
xchg
sub
cmp
and
jp
lcall
mov
inc
pushf
mov
sbb
faddp
js
mov
lds
idivl
push
pop
cld
mov
mov
jo
iret
fidivrl
mov
pushf
pusha
in
adc
sbb
mov
movsl
mov
adc
mov
push
mov
filds
adc
mov
inc
pusha
adc
repnz
les
scas
mov
sbb
shll
mov
insb
inc
pop
sbb
pusha
xchg
movsb
lret
add
movsl
icebp
sub
xchg
out
fsubs
inc
stc
imul
xchg
lret
push
aaa
mov
daa
push
adc
push
or
dec
lea
cmpsl
jle
and
adc
add
fidivl
cmp
mov
cmp
fiadds
jae
int
xchg
mov
push
push
aas
cmp
ja
mov
rorl
andl
int3
shll
adc
ret
or
lret
imul
jl
movsb
repnz
dec
movsl
imul
sub
lret
sub
lcall
and
pop
dec
bound
cld
in
ret
in
shll
out
jl
das
scas
inc
call
pmaxsw
roll
jne
inc
jno
and
ficoms
add
sub
sub
mov
test
pop
jmp
aaa
mov
cli
jge
movsl
outsb
or
inc
push
cwtl
cs
push
ss
les
mov
lcall
xchg
and
and
sub
inc
out
jle
cmp
mov
mov
dec
cmc
aas
clc
es
rorb
xchg
pop
std
or
cmp
in
test
orb
ja
push
lods
dec
cwtl
mov
inc
cmpsl
jo,pt
push
inc
inc
repz
dec
insl
ljmp
adc
mov
adc
dec
les
cli
sub
dec
fldenv
in
scas
mov
outsb
ret
jg
outsb
mov
xor
cmp
dec
jno
les
sub
pop
push
addr16
push
jae
pop
mov
lret
out
les
dec
mov
mov
sarl
pop
and
mov
xor
inc
pop
movsb
jge
cmp
bound
mov
add
pop
iret
stos
jge
mov
adc
jbe
mov
jmp
xchg
test
sub
xor
or
cmp
loopne
pushf
sub
xchg
hlt
dec
xchg
fwait
xor
mov
jns
mov
aaa
mul
jne
scas
mov
aaa
das
repnz
xchg
popa
and
xchg
sbbl
rorb
sub
test
popf
xor
sarl
xlat
cmp
add
pop
xlat
insb
and
adc
inc
cmp
pop
adc
add
dec
fstl
lods
jmp
lods
add
mov
int3
mov
push
jge
mov
inc
or
push
dec
pop
push
in
stc
lds
mov
push
movsl
mov
push
jp
fildll
adc
hlt
sub
mov
pop
mov
cs
arpl
test
sub
pushf
pop
sub
jg
sbb
mov
or
div
iret
loope
popf
dec
mov
push
rcrl
jns
sub
fistpll
pop
fcomps
test
and
insb
inc
es
lock
sub
pop
lret
btr
jae
inc
pushf
in
fsubr
inc
adc
pusha
xchg
outsl
stos
out
repnz
test
mov
orl
inc
xchg
mov
add
sbb
jno
loope
mov
inc
out
clc
lods
jmp
nop
addr16
stos
ret
xchg
mov
fisttpl
sahf
cwtl
push
cld
pop
shrl
or
shlb
xchg
mov
mov
test
ss
dec
repnz
push
cmp
dec
push
jno
imul
jge
push
insl
sub
aam
dec
into
inc
pop
dec
jl
lret
jnp
movsb
nop
xor
cmpb
push
ret
aaa
icebp
dec
out
and
inc
jle
lock
mov
xlat
sbb
in
iret
data16
jns
lock
leave
dec
xchg
xchg
add
xor
das
and
sbb
pusha
pop
mov
fldt
mov
jg
pop
insl
loope
pop
sub
push
testb
pop
loope
xchg
add
lahf
jne
insb
sub
or
call
or
mov
sub
jno
or
sbb
xchg
adc
ds
sub
mov
cs
pop
jge
fwait
daa
jge
dec
cmp
movsl
inc
dec
es
mov
cmpsb
dec
pop
fsubs
bound
test
xchg
insb
scas
xchg
sub
xchg
mov
imul
sahf
pop
lock
popf
or
lods
ja
fimuls
ret
lcall
mov
inc
cld
mov
jmp
dec
xor
aam
call
or
sti
popf
xor
jns
and
push
pop
xor
xchg
adc
mov
mov
shrb
ficomps
setns
pop
cmp
test
out
cmp
lods
add
sub
cmpsb
lock
add
xchg
cmpsb
iret
and
and
in
je
and
and
fimull
and
lods
fdivs
mov
push
add
pop
out
mov
sarb
cmovs
mov
sbb
cld
mov
mov
ret
jnp
mov
es
mov
rorb
mov
push
mov
adc
push
lret
out
testb
std
xor
sahf
xor
pop
mov
dec
xchg
lds
in
and
xlat
test
clc
dec
subl
lods
repz
mov
xchg
push
mov
adc
pop
cmpl
inc
loop
lods
cmp
cmp
test
ja
and
shlb
sub
pop
sbb
repnz
stos
mov
pushf
cmp
fstpt
add
xchg
sbb
loopne
mov
icebp
mov
and
fiadds
in
sub
arpl
aam
pusha
xlat
out
lds
pop
cmp
add
scas
adc
dec
push
sbb
lcall
pop
arpl
add
shrb
cmp
mov
lcall
imul
subl
xchg
cmp
push
sub
repnz
mov
outsb
popf
xchg
bound
add
jne
sbb
out
jmp
addl
adc
int
out
mov
inc
xchg
mov
add
jge
js
flds
mov
sarb
stc
mov
jg
daa
cmp
rorl
lods
ja
cmp
fs
and
xor
cmpsl
sbb
ss
adc
call
jno
fisubrl
add
jg
push
adc
inc
jne
jae
xchg
push
inc
daa
pop
jns
aaa
mov
push
cld
or
fmuls
sbb
scas
flds
leave
inc
test
inc
xor
out
mov
jp
in
jnp
lret
lods
xor
insl
rcr
adc
loop
adc
gs
iret
or
test
hlt
jg
insb
imul
dec
xlat
inc
repnz
push
xchg
les
aad
mov
mov
jbe
mov
out
jo
aam
xchg
arpl
mull
scas
jecxz
enter
leave
or
push
out
inc
rolb
push
mov
gs
mov
and
mov
cld
xor
adc
dec
ret
repz
aam
push
insl
scas
inc
stos
pop
ret
xor
or
and
in
mov
imul
pushf
movsb
cld
xorb
inc
les
outsb
dec
add
push
lahf
sti
mov
jmp
clc
shlb
inc
inc
pop
mov
pop
inc
lcall
arpl
push
lret
pusha
int
inc
jbe
jg
mov
push
pop
test
push
dec
mov
aad
xchg
sbb
mov
push
in
and
adc
bound
cmp
out
mov
xchg
sub
cmpsb
mov
or
mov
add
xor
mov
aam
pop
or
pop
es
or
scas
js
adc
stos
mov
lss
cli
push
ss
pushf
fstpl
xchg
stc
inc
enter
pop
incb
scas
jns
mov
push
add
mov
sbb
out
ja
ja
insl
arpl
and
jne
je
std
cld
jns
inc
ficomps
cwtl
mov
inc
push
addl
repz
sbb
out
sbb
mov
sub
int3
mov
xchg
sub
cmp
insb
int
stc
jg
mov
or
pop
test
add
les
in
xor
movq
lea
and
cmc
xor
out
lahf
stos
shl
sbb
clc
push
lods
inc
mov
lock
xlat
lock
xchg
lahf
adc
fs
fs
xchg
sbb
fiadds
mov
fnclex
dec
pop
jmp
test
mov
fstpl
jnp
jno
xlat
push
leave
data16
push
pushf
pusha
inc
inc
loope
inc
fst
into
iretw
ret
shlb
lea
aad
outsb
mov
pop
mov
data16
iret
shl
aam
fwait
enter
pop
not
xchg
mov
sub
test
jbe
jecxz
lea
pop
clc
fbstp
jmp
sbb
mov
jmp
inc
and
dec
int
add
pop
clc
shlb
jmp
fimull
sbb
mov
mov
addl
mov
dec
add
jmp
cmp
nop
sbb
jg
mov
cmp
cwtl
lea
mov
arpl
cmp
cmp
rcll
insl
lret
data16
or
push
jne
mov
das
shrb
push
jno
and
jp
and
cld
repz
cltd
jb
lret
imul
mov
mov
lods
addl
and
xchg
xchg
int
mov
adc
int3
jae
sbb
lock
sahf
stos
es
cmpl
in
scas
cmp
arpl
clc
jmp
pusha
cwtl
sbb
sbb
add
test
mov
push
cmpsb
es
shll
fs
xchg
popf
cmp
inc
call
mov
dec
xor
in
icebp
jnp
jmp
mov
jecxz
pop
bound
pusha
xlat
enter
inc
pop
add
aad
cmpsb
mov
or
or
sbb
ljmp
adc
sub
out
sub
pop
push
test
mov
mulb
clc
lods
cmpsl
movsl
push
es
ret
add
inc
push
cwtl
inc
pusha
dec
icebp
push
jno
lds
pop
aaa
push
xchg
enter
mov
cmp
push
jmp
leave
xchg
icebp
scas
add
jne
cltd
into
cmpsl
push
mov
out
addb
jno
addr16
cs
cmp
enter
cld
stos
adcb
loope
daa
cmpsb
imul
jge
add
pop
jp
mov
or
or
sub
into
faddp
mov
sub
dec
bndstx
sub
mov
pop
mov
addb
pop
jbe
fcomps
ret
out
pop
outsb
scas
adcb
insb
mov
aam
and
adc
jmp
inc
xlat
outsb
jge
xor
pop
adc
pop
out
stos
fnstenv
mov
test
jmp
xor
fisttpl
jno
xchg
mov
xlat
and
and
loope
out
inc
ret
push
ficoms
ljmp
xchg
sti
xchg
iret
push
pushf
lahf
jno
rol
dec
mov
or
out
push
sub
js
bound
and
shrl
dec
pop
sbb
xchg
fucom
or
subl
ds
add
or
test
sbb
loope
fimuls
adc
daa
dec
sahf
xor
loopne
mov
popa
rorl
push
xor
and
dec
or
nop
jo
inc
jle
mov
mov
or
rcl
cmp
jae
dec
or
into
adc
cmpsl
hlt
dec
fnsave
jmp
jge
xchg
jbe
pop
clc
es
jge
shrl
mov
imul
addb
add
pushf
mov
imul
cmpsl
fldt
shlb
xor
xchg
ffree
cld
cmc
pop
or
test
test
mov
insb
subss
cmp
dec
cltd
cli
pushf
mov
mov
fnstcw
cmpl
int
inc
dec
imul
popf
dec
push
push
sbb
xor
mov
mov
xor
xorl
jbe
movsl
sbb
test
imulb
push
mov
inc
imul
xor
and
ljmp
call
data16
and
or
and
mov
mov
fndisi(8087
inc
int
inc
jo
in
in
dec
pop
test
lds
jae
dec
mov
or
in
mov
into
jecxz
sbb
lods
xor
or
xor
adc
sub
cmp
sub
mov
call
xchg
dec
or
data16
xchg
test
adc
xor
pop
loopne
mov
test
popa
clc
mov
sub
clc
jne
mov
pop
xlat
mov
add
xor
jae
xchg
inc
std
sti
lods
inc
dec
pop
and
push
inc
sub
jnp
cmp
inc
out
sbb
outsl
arpl
xchg
jp
or
leave
arpl
sti
rclb
mov
jl
and
mov
push
sub
mov
push
lock
lret
xor
addr16
cmpsb
xchg
inc
sub
sahf
in
cltd
icebp
sti
mov
jno
lods
les
xchg
in
pop
lods
cli
jecxz
jge
sbb
test
mov
sub
insb
sahf
aam
rcrb
nopl
shlb
ds
out
pop
sbb
test
mov
mov
jl
cmp
test
fnsave
aam
into
daa
xchg
je
shlb
imul
pop
add
sbb
out
stc
pop
in
push
call
loopne
adcb
mov
pop
adc
mov
cmp
inc
in
ja
stos
inc
or
test
scas
insl
ds
int3
ret
fnsave
sbb
pop
shrl
push
mov
sbb
xchg
lcall
push
hlt
into
orb
shrl
js
xchg
xchg
xchg
loop
and
lahf
xor
jle
aas
adc
pop
push
cmp
cli
mov
xor
adc
ficoml
stos
aas
mov
sub
mov
test
lret
rcrb
push
test
aaa
test
ret
push
adc
adcb
fisubl
mov
mov
fsts
mov
scas
fsts
aas
mov
in
jne
shrb
imul
js
enter
mov
int
aas
data16
cmpsb
out
jbe
insl
cmp
xlat
mov
cmc
xchg
enter
mov
push
pop
mov
lcall
fsubrl
xor
addb
jmp
fadds
js
je
mov
aas
adc
repnz
or
adcl
jns
push
mov
inc
loopne
jb
mov
cmp
fcomps
sub
mov
std
pop
psraw
popa
fwait
sbb
jmp
out
fidivl
icebp
cmpsb
and
out
lods
mov
clc
inc
fldenv
push
outsb
jmp
jnp
out
cs
ret
imul
jmp
cmc
jns
in
ficompl
ss
and
mov
adc
call
insl
enter
mov
in
add
push
push
dec
xlat
sbb
int3
out
inc
pusha
pop
test
lods
or
fdivs
lahf
push
insl
adc
mov
sbb
mov
dec
mov
xor
adc
add
arpl
or
jecxz
mov
lods
ljmp
inc
pusha
rcll
add
and
mov
xchg
popf
sub
clc
aaa
add
nop
xchg
cmp
sbbl
enter
pop
jno
xchg
cmp
add
jecxz
insl
cmp
xchg
insb
mov
jmp
mov
mov
push
jmp
mov
out
xchg
daa
mov
jmp
je
hlt
xor
or
lds
push
lahf
adc
imul
mov
bound
adc
pop
jp
leave
fstps
add
push
loope
cli
ret
push
mov
and
xor
test
test
enter
frstor
add
mov
xlat
mov
push
fisubl
cmpsb
mov
imul
shl
inc
decl
cltd
popa
ja
adc
lret
cmpl
push
mov
int3
push
into
aam
mov
lods
sbb
mov
je
shrl
movl
mov
insb
add
popa
jecxz
xchg
or
dec
imul
inc
sbb
mov
mov
ficompl
mov
mov
fucomi
rclb
xchg
cmp
popa
lods
inc
notl
or
test
sub
mov
mov
js
xor
les
ret
pop
or
dec
cmp
loope
mov
pop
jg
jnp
iret
xlat
mov
mov
xlat
jne
pop
iret
cmp
loop
adc
dec
movsl
gs
adc
push
sub
mov
testl
out
aam
mov
leave
mov
pop
cmp
mov
dec
std
fists
ret
mov
cmp
ds
lds
ret
jl
pusha
xor
jle
fidivrs
fdivl
jnp
lds
cli
xchg
pop
or
imul
dec
ja
mov
addb
mov
imul
mov
push
in
adc
sahf
xor
cmpsl
mov
enter
js
mov
jecxz
jl
dec
push
and
xor
loopne
xor
mov
pop
shrl
movsl
into
mov
call
pushf
add
adc
cmp
add
test
icebp
or
scas
inc
add
sti
das
xchg
mov
outsl
ss
mov
mov
and
jmp
aad
mov
and
cmp
jl
stc
cmp
push
pop
lods
adc
and
mov
shll
dec
jecxz
setnp
lods
push
adc
iret
vpunpcklwd
xchg
dec
mov
outsb
std
jge
in
fwait
int3
fisttpll
jmp
sbb
push
insb
inc
iret
subb
dec
stos
mov
ljmp
push
mov
sub
pop
xor
and
jp
xchg
dec
cmpsl
jecxz
fwait
into
repz
dec
mov
scas
flds
pop
cmpsl
movsb
jg
je
leave
dec
mov
jnp
dec
sbb
aas
frstor
push
add
cmpb
lock
aad
xor
loop
inc
inc
cli
inc
or
clc
jge
push
inc
sbb
add
cmovp
std
es
dec
xor
shrl
push
jmp
fidivl
das
cmp
sbbb
imulb
cmp
lock
hlt
push
mov
xor
push
fimuls
jle
ficomps
or
add
cmpsl
std
sbb
jne
mov
xchg
sbb
dec
mov
and
sbb
inc
test
mov
neg
hlt
xchg
dec
scas
add
cs
xor
lret
gs
mov
mov
ss
push
mov
mov
rcrb
xor
mov
movsl
inc
kandb
ss
pop
mov
pop
mov
inc
addr16
or
xchg
pop
and
out
add
shlb
mov
jl
sub
stos
add
pop
xor
shrl
adc
and
ljmp
sub
mov
push
sbb
notl
push
sbb
outsl
add
push
or
shlb
sub
xlat
mov
test
xor
xchg
and
mov
dec
pop
inc
iret
ss
dec
pop
scas
cwtl
inc
jge
push
or
pop
jl
mov
andl
adc
adc
cwtl
push
fucomp
orb
and
sub
aas
xor
mov
cmp
mov
sahf
loop
adc
or
and
stos
das
data16
push
mov
push
call
call
or
leave
cmp
push
test
sahf
push
push
outsb
aad
daa
pop
movsl
add
insl
mov
cmp
pop
lods
xor
cmpsb
add
mov
pop
mov
inc
daa
jp
dec
les
mov
cmpl
repnz
xor
or
fmull
mov
fisubl
sbbb
push
js
mov
in
mov
loope
sub
pop
pop
pop
lret
pushf
fsubrs
int
xchg
cmp
sbb
clc
cs
pop
push
dec
xor
xor
bound
loopne
mov
jbe
inc
fmuls
fucomip
push
lods
dec
leave
mov
imul
aaa
cmp
ret
jecxz
lea
push
mov
popa
and
sarb
add
mov
pusha
mov
bound
push
mov
sbb
and
pop
ljmp
pop
iret
sub
pop
fs
int
jnp
popa
and
adc
sbb
push
pushf
arpl
mov
and
mov
mov
mov
outsb
push
inc
sbb
mov
mov
inc
dec
sub
call
fnstenv
fisttps
or
outsb
lcall
stos
and
insl
ja
in
add
mov
dec
and
push
push
push
or
push
inc
xchg
and
jmp
mov
mov
push
pop
adc
mov
cmp
addl
sub
sti
xchg
sbb
les
bound
mov
sbb
std
leave
add
aaa
call
pop
cmp
jg
rolb
out
xor
rcrl
inc
and
inc
in
dec
dec
xor
addr16
push
cmp
xchg
jne
shrb
add
dec
push
jb
cmp
fwait
cmp
pop
cmp
out
arpl
aad
in
fisubl
adc
stc
mov
pop
xor
sbb
inc
in
clc
cld
sbbb
mov
fs
das
je
andl
xor
outsl
and
push
arpl
cs
iret
xchg
data16
filds
mov
je
xor
mov
idiv
popf
sbb
dec
mov
jnp
test
pop
cmp
mov
push
shrb
out
sahf
std
jg
push
nop
repnz
adcb
xor
popf
push
lods
fcomi
repz
vmread
push
sub
jae
inc
pop
test
inc
sub
pushf
test
mov
shl
cmpsb
cltd
xor
out
out
int3
repnz
out
xchg
ret
outsb
cmpsl
dec
mov
insb
push
faddl
push
shrb
dec
pop
pop
in
pusha
rcll
mov
xchg
sub
xchg
ffreep
jbe
dec
sub
jp
ljmp
add
and
jge
or
js
rcrl
rorb
jle
jp
cmp
inc
stc
sub
add
sahf
push
repnz
mov
add
xor
inc
mov
jle
gs
scas
dec
repz
ja
xor
sbb
push
or
loope
sub
xor
lods
test
and
jp
leave
lods
jae
mov
pop
ss
stc
sub
mov
ds
adc
lahf
and
lds
into
inc
cmpsb
jg
pop
xor
mov
jp
repnz
stos
xlat
repz
pop
ds
xor
mov
jl
jl
xchg
popa
clc
idivb
jg
sahf
push
mov
or
sbb
mov
cli
pushf
jae
jo
add
inc
iret
mov
ss
sbb
das
js
push
cwtl
inc
adc
ss
push
fwait
and
xchg
pop
xor
sub
daa
pop
enter
int3
dec
and
cld
cmpsl
into
enter
dec
loope
inc
pop
call
mov
orb
icebp
pop
or
imul
pop
iret
xor
cwtl
jmp
mov
jg
inc
ror
scas
std
cmpsb
cmpsl
out
jmp
adcl
lods
jle
sbbb
je
sarb
js
cli
inc
or
adc
movsb
push
sti
jl
insl
xor
inc
js
test
dec
loopne,pt
push
mov
jno
mov
popa
scas
cmp
xchg
push
icebp
push
or
jb
add
cmpb
jbe
loope
aad
push
cmpsl
out
fcmovb
xchg
jle
jmp
cmpsl
mov
sbb
jno
data16
insl
scas
sub
repz
jmp
out
icebp
lret
scas
mov
dec
push
fbstp
pusha
lock
pop
xchg
leave
push
lahf
outsl
jmp
shll
mov
and
testl
xchg
cwtl
inc
fdivrl
dec
test
inc
ljmp
fiaddl
jno
add
daa
xor
mov
inc
clc
sbb
ret
jo
add
les
inc
jae
scas
cvttps2pi
stos
fidivrs
mov
push
inc
dec
imul
es
and
sarb
jmp
cld
gs
xor
std
cwtl
out
push
push
jle
adc
pop
adc
push
and
inc
inc
jmp
push
cmp
nop
adc
icebp
sbb
fcomp
push
and
inc
lock
mov
jnp
xor
pusha
pop
dec
jle
sub
cmp
lcall
dec
pop
jb
adc
jecxz
push
mov
inc
aad
add
imul
iret
cli
sub
pusha
xchg
sub
push
add
cmp
mov
hlt
sahf
call
xchg
aad
aad
stos
rcr
pop
arpl
cmp
fildl
insb
push
test
sub
cmp
dec
dec
sbb
mov
adc
and
mov
fwait
xor
jge
mov
bound
shll
int
mov
push
movsb
ja
jl
sar
roll
lods
loope
test
shll
sub
pop
ljmp
jmp
push
rcrl
jp
xchg
xor
arpl
imul
jne
outsl
not
movsb
aam
jge
add
mov
in
sub
lds
xor
dec
dec
mov
and
and
mov
les
mov
mov
mov
test
ljmp
sub
sbb
mov
mov
or
or
mov
xchg
mov
fwait
test
and
jnp
repnz
adc
add
xor
mov
xchg
inc
pop
dec
mov
mov
xor
cwtl
decb
adc
xor
outsb
dec
lea
call
or
mov
lahf
in
inc
int
mov
loop
push
lcall
cwtl
test
xor
xchg
jecxz
jne
jp
and
ss
xchg
mov
xchg
mov
jno
insl
mov
nop
daa
insb
shrb
dec
jg
int
pop
lahf
cld
push
xorl
cli
push
lock
cmp
loop
cmp
rcll
jge
cmp
push
mov
lahf
popa
jnp
cmp
call
out
inc
cmpsb
inc
loopne
lret
rolb
inc
repz
dec
jmp
daa
and
or
sbb
les
push
and
movsb
or
lret
add
andps
negb
cmp
andb
and
add
ret
mov
fs
mov
mov
ret
pop
add
or
mov
inc
and
decl
and
cmp
jecxz
mov
clc
movb
mov
cltd
and
pop
dec
sarl
cmpsb
push
rcll
negb
cmp
xor
stc
repnz
and
aad
add
lea
test
jb
cli
mov
add
hlt
sbb
dec
ret
fcompl
loopne
into
lea
popa
bnd
push
adc
sarl
add
xchg
aas
xchg
out
cmp
xchg
ds
pop
fwait
adc
imul
ljmp
and
pushl
add
mov
pop
lods
fmul
cwtl
sbbl
pop
icebp
popa
and
sbb
cmp
daa
inc
cmp
mov
outsb
inc
push
ret
and
adc
pop
pop
jmp
and
cmc
rcrl
cli
xchg
idivl
and
out
ret
movsl
xchg
mov
jnp
jmp
bound
mov
rcrl
push
pop
or
lcall
jae
sub
mov
inc
mov
leave
fcmovnb
aad
pop
mov
test
mov
aam
mov
cmp
inc
into
lahf
add
xor
sbb
pop
lahf
mov
push
xchg
mov
inc
gs
aad
mov
scas
fdivp
nop
inc
push
mov
sbbb
push
in
add
add
pushf
and
sub
adc
sub
xorb
out
mov
mov
jnp
pop
js
pop
and
int
loopne
push
popf
stos
mov
mov
push
mov
pop
mulb
cmp
sub
pop
dec
push
int
js
lods
sub
adc
dec
or
fidivl
sti
xchg
ficompl
pop
out
sti
sbb
cmp
cmp
sbb
fwait
cmp
ret
lods
scas
xchg
adc
push
int
rep
jle
dec
push
sti
add
add
or
sbb
mov
addb
jne
loope
push
cs
push
out
mov
popf
mov
icebp
push
sub
or
push
sbb
xchg
cmp
jecxz
inc
mov
mov
pop
pop
dec
dec
dec
jg
jecxz
push
test
test
leave
push
repz
push
pop
push
out
mov
shlb
stos
push
test
movsb
pop
or
push
das
addr16
push
jae
test
jg
pushf
and
shll
aad
jmp
in
xchg
fadd
dec
fcmovnb
pop
or
mov
push
jl
popa
imul
aas
mov
push
in
sbb
int3
arpl
dec
in
cmpl
into
cmp
clc
or
fnstcw
sub
mov
adc
test
rol
xchg
adc
cmp
lcall
push
cmp
pop
out
test
jae
xchg
mov
or
adc
sub
iret
fstpl
inc
gs
leave
sbb
jbe
pop
push
ds
das
jecxz
add
inc
mov
sbb
xchg
ret
adc
clc
add
mov
fwait
add
enter
sbb
test
test
out
cmp
and
shll
js
outsl
loop
test
fisubrs
addr16
sbb
sub
xor
add
push
and
cmpsl
in
push
pop
int3
dec
insl
inc
cltd
mov
imul
call
stos
add
in
dec
mov
je
outsl
pop
out
jl
or
aam
jbe
loopne
pop
das
or
fs
aaa
jmp
or
xchg
gs
andb
dec
imul
ficoms
fisubrl
inc
popa
clc
jle
sbb
jle
test
jb
mov
cmpsb
mov
jnp
sub
sub
mov
xchg
pop
sbb
push
hlt
pushl
mov
and
mov
lea
aad
cmovbe
test
ss
call
xor
cmp
cmp
adc
popf
xor
push
in
pusha
dec
aad
inc
pop
cmp
call
movsb
fldt
cwtl
add
lret
cli
rcr
js
out
jge
cmp
into
mov
std
cwtl
xchg
pop
xchg
cmp
movsb
shlb
sbb
pop
sub
adc
leave
stos
xlat
stc
xlat
sahf
stc
rcll
add
ja
xor
or
mov
mov
push
xchg
cmp
mov
test
sub
xorl
mov
mov
inc
sub
push
addr16
cltd
js
cmp
fistpll
or
mov
or
out
scas
inc
and
mov
add
ljmp
xchg
sbb
nop
mov
shlb
cli
sub
rcll
in
fs
xchg
push
cld
cmp
xchg
gs
cmpsl
fwait
xor
lret
add
mov
cmc
mov
lods
fstpt
lret
push
dec
mov
ljmp
pushf
sub
inc
fstpl
rclb
jmp
add
es
or
pop
icebp
lret
in
xor
insb
mov
adc
add
leave
call
sahf
sub
and
inc
mov
mov
add
movsb
mov
leave
es
xor
and
sub
js
sti
imul
dec
lods
enter
pop
add
and
inc
add
sub
adc
stc
ret
push
or
arpl
jge
not
imul
adc
aam
pop
mov
and
pop
cmpsl
mov
pop
mov
mov
xchg
int3
imul
rclb
cmp
sbb
in
ror
add
inc
xor
sti
cld
mov
into
mov
lods
inc
shll
es
rolb
rol
jb
testb
rcr
movsw
cmp
and
push
sar
add
outsb
and
jne
lods
repnz
add
lods
xchg
lret
int
pop
idivl
fwait
int
push
scas
mov
push
cs
mov
fwait
xor
scas
insb
xchg
adc
cmpsl
ja
sub
enter
imul
and
test
mov
pop
out
or
adcb
ss
test
sbb
movsl
js
xchg
cld
inc
cmp
ds
shl
icebp
or
popf
or
and
inc
pop
push
jmp
lcall
int
inc
repz
adc
lods
dec
adc
adc
pop
hlt
lret
fadd
fdivs
bound
inc
adc
out
xor
and
mov
inc
clc
and
imulb
lret
sahf
fwait
pop
cmp
sar
push
inc
cmp
push
xchg
lock
cmpsb
inc
pop
shrl
sbb
mov
and
xchg
push
sub
mov
xor
das
js
jnp
sahf
or
xor
push
push
ljmp
pop
adc
imul
cmpsb
inc
push
sub
dec
dec
pop
test
sbb
cmp
jne
mov
sahf
sub
iret
add
xor
aaa
into
lods
out
pop
hlt
lods
dec
dec
pop
dec
into
jnp
or
icebp
or
cs
cmp
xchg
xor
or
add
sbbl
clc
or
cs
out
add
push
lds
push
inc
add
aas
dec
out
mov
and
stos
dec
int3
push
imul
icebp
adc
mov
sub
lods
hlt
push
fcmovne
push
push
and
call
rcrb
lods
hlt
pop
sbb
mov
xor
leave
adcb
daa
leave
xchg
rcll
lcall
stc
lea
mov
cmp
ds
int3
pop
add
aam
lock
mov
xchg
inc
sahf
iret
stos
fidivs
dec
loop
scas
jg
fiaddl
push
ss
xor
mov
jge
push
sub
pop
pop
nop
scas
jno
sbb
jnp
mov
xchg
movsb
mov
xchg
xor
jmp
adc
inc
cmp
xchg
mov
sbb
sbbb
pop
adc
mov
lods
lea
xor
cmp
int
aad
sub
jns
xor
outsl
sbb
push
call
cmp
inc
pop
jo
xchg
and
push
jg
pop
sbb
xchg
pop
out
rorl
scas
sbb
jbe
jbe
ja
fdivl
and
xor
bound
repz
sbb
sbb
out
mov
dec
mov
push
fcomi
pop
push
out
lret
fmull
inc
out
jle
stos
jmp
mov
jno
cmp
cmp
or
push
mov
push
insb
rcr
dec
mul
jb
mov
mov
add
out
lcall
adc
notb
push
jle
loopne
adc
rcrl
adc
jae
clc
mov
sbb
mov
clc
hlt
mov
xchg
ret
callw
mov
lcall
mov
lock
mov
pop
imul
sub
pushf
stos
or
stc
nop
xor
mov
xlat
pop
xchg
dec
jns
adc
arpl
icebp
add
cmpsl
orb
out
shll
inc
fisubs
popf
xor
mulb
jne
cli
sub
aas
xlat
and
mov
and
fucomp
sub
push
adc
shl
jo
mov
jmp
push
mov
lret
dec
idivb
adc
jl
jg
movsb
adcb
mov
adc
fadds
inc
mov
les
sbb
ljmp
xchg
or
jb
out
pop
pop
stc
nop
mov
dec
pop
pop
jns
loopne
je
pop
out
pop
lcall
and
sub
cltd
nop
rol
sbb
das
adc
jecxz
int
mov
inc
add
xchg
sahf
subb
sbb
cltd
das
enter
dec
pop
loop
mov
sub
or
dec
loop
mov
cmp
or
sarb
fnstenv
cltd
pop
in
xchg
cmp
lea
imul
roll
adc
sub
dec
jle
icebp
xchg
fdivs
subb
mov
inc
pushf
clc
and
jno
cmp
loop
ficompl
adc
inc
inc
cli
mov
jl
out
xchg
adc
add
ret
addr16
xor
xor
xor
push
mov
pop
jp
pop
icebp
ret
and
push
or
xchg
or
xchg
mov
sub
test
mov
push
les
push
stos
movsl
jl
xlat
int3
loop
adc
mov
or
korw
in
cltd
jne
jecxz
dec
lcall
push
jns
inc
jb
cs
jne
iret
sarl
and
pop
adc
div
cmpsb
cmpsl
ret
jmp
mov
rolb
leave
mov
mov
js
lcall
cwtl
jae
xchg
and
or
repz
shlb
pusha
stos
push
out
movl
xchg
xchg
and
clc
aad
lock
daa
aad
push
repz
pop
push
cltd
std
jno
hlt
cmpsb
mov
mov
sbb
jecxz
inc
cmp
pop
cmc
and
sub
mov
cli
xchg
call
mov
pop
push
xchg
test
push
mov
mov
notl
movsl
add
xchg
or
push
or
sub
rcrl
fists
pop
push
mov
pop
mov
mov
cmp
or
inc
decl
ret
dec
shll
jecxz
dec
push
sub
js
lcall
in
mov
pop
cmp
mov
jno
rol
sbb
fisttpll
dec
and
xchg
mov
sbb
stc
nop
xchg
outsl
add
pop
pop
jne
out
ds
mov
in
jmp
xor
pop
cli
fsubr
out
shrl
mov
and
push
in
or
xchg
sub
inc
mov
mov
hlt
leave
dec
pushf
je
aaa
fimull
mov
mov
cmc
lahf
fidivl
insb
loope
pusha
add
cmpsl
rcrl
xor
loope
clc
xchg
inc
popa
rcll
scas
ds
fcmovnu
cmp
cmp
in
jmp
test
xor
mov
adc
cli
cmp
xchg
xchg
mov
bound
adc
push
lret
jae
mov
insb
loopne
bound
add
adc
repnz
xchg
jb
pop
repz
hlt
enter
pop
sbb
adc
jecxz
xor
xor
inc
push
dec
fistl
push
xchg
ss
cmp
shll
pop
mov
mov
sahf
sub
dec
out
imul
sub
repz
xor
or
lret
mov
std
or
scas
popa
xor
xor
int3
or
notb
inc
mov
xor
cmpsb
repnz
mov
mov
bound
scas
xchg
orb
das
xor
jns
sub
mov
cmpsb
xlat
adc
cmpsb
lea
push
sub
mov
loopne
xor
or
arpl
mov
into
gs
int3
outsl
push
dec
jne
mov
imul
pop
addr16
pushf
in
pusha
fnstenv
sbb
jge
sti
outsl
lods
jne
nop
mov
xlat
repnz
fbstp
jno
xor
xchg
push
andl
add
jno
pushf
inc
jp
cmp
jl
clc
in
call
xchg
fldl
push
iret
shlb
jne
je
sub
mov
sub
cmpsb
dec
pop
mov
pop
shll
popf
sub
inc
pop
repz
inc
push
fsubrs
and
fiaddl
cmc
fs
inc
movsl
test
ss
es
inc
mov
movsl
js
pop
inc
repnz
leave
loope
scas
jno
lret
test
push
jg
sti
daa
mov
jp
lret
rol
sub
mov
xchg
test
lods
lea
dec
js
call
adc
lret
lods
pusha
ds
clc
jle
or
in
rclb
mov
jb
lods
or
push
add
dec
mov
into
hlt
push
sbb
dec
clc
or
arpl
outsl
sub
push
stos
add
mov
jp
call
or
les
test
bound
loop
mov
jno
jns
mov
mov
test
inc
adc
ds
adcl
cmp
cmp
pop
or
aas
xchg
mov
arpl
sbb
cmc
adc
shll
and
dec
or
inc
xor
push
dec
int3
fstpt
dec
jge
and
mov
jecxz
push
fmull
sub
js
push
mov
pop
sub
or
outsb
in
dec
push
cmp
xor
inc
lahf
icebp
dec
inc
imul
cmc
leave
mov
mov
fidivs
outsl
arpl
ficompl
popf
pushf
in
dec
pop
test
pop
add
cmp
pop
aas
cmp
mov
pop
sbb
dec
fwait
dec
mov
cmpsl
add
aad
lret
pop
mov
test
mov
add
jmp
int
fwait
ja
rcrl
lcall
mov
cwtl
jle
push
sbb
nop
mov
sarl
in
mov
js
dec
and
push
jg
nop
ss
sbb
jo
mov
testl
adc
lcall
sbbl
xor
mov
pop
fwait
mov
loop
mov
mov
bound
fucom
shrl
mov
jae
mov
dec
or
test
fmul
mov
out
cmpsl
cmp
jb
xchg
and
cmp
aad
add
inc
fs
repz
popa
andl
sahf
negl
insl
sbb
add
cmpsl
out
pusha
fdivr
dec
add
lea
hlt
xchg
pop
mov
push
insb
sub
mov
pop
cmpl
dec
fadds
addr16
negl
cmp
or
stos
xchg
xchg
fwait
push
and
pop
test
add
mov
fistl
xlat
subl
rclb
inc
je
je
insb
leave
cmp
dec
pop
mov
outsb
and
testl
mov
inc
lea
cmp
dec
mov
sbb
or
and
mov
call
lret
ror
fwait
xor
jno
lahf
xchg
dec
and
call
in
jno
or
xor
cwtl
mov
jmp
jge
daa
dec
or
mov
and
dec
jp
mov
sub
cwtl
cld
testl
mov
pop
movsl
push
popf
or
add
push
xchg
cs
sub
xlat
aad
and
mov
mov
mov
lods
testl
xchg
mov
xor
mov
addl
xor
rorl
insb
cmp
rclb
xchg
es
dec
fdivs
cli
lods
cmp
mul
cmp
ret
xchg
push
loopne
das
add
cld
popf
sub
pushf
adc
out
dec
pop
dec
fidivrs
or
ret
inc
shll
sbb
imul
hlt
xchg
jnp
icebp
mov
seta
data16
lret
sbb
aas
mov
nop
pop
out
cwtl
jle
ja
outsl
sub
test
test
dec
sbb
sahf
call
or
cmpsl
lods
push
mov
dec
jbe
xchg
inc
sub
xchg
fsubr
enter
add
push
lods
shll
ss
xor
aad
jecxz
movsb
xchg
jp,pn
fimuls
dec
test
shrl
out
push
in
popl
inc
int3
inc
jecxz
loopne
movsl
sbb
in
sbbl
or
push
jecxz
pusha
cmp
xor
andb
fwait
xor
push
mov
dec
mov
and
out
sahf
jge
inc
push
cmp
pop
repz
ficompl
cs
jp
lahf
mov
jle
test
test
sub
dec
or
pop
ss
lock
inc
fadds
or
push
daa
into
jmp
or
icebp
call
push
test
dec
or
lods
adc
fimuls
mov
pop
xor
dec
dec
arpl
and
xlat
filds
mov
outsb
mov
push
leave
popa
call
or
ja
mov
mul
loope
andl
mov
add
scas
pusha
pusha
std
lods
pop
jo
divb
cmc
dec
test
fistpll
and
int3
mov
mov
outsb
sub
imul
gs
cmpsb
mov
and
cmpsb
popa
clc
xlat
xor
mov
and
jle
or
fxtract
cwtl
lahf
dec
xor
jo
js
or
das
mov
fidivrs
into
xor
sub
push
faddp
ret
cmc
mov
push
or
xor
jmp
push
cwtl
mov
xchg
mov
pop
adc
orl
mov
scas
adc
sti
dec
jmp
sbb
jge
sbb
xchg
push
in
mov
mov
fldt
push
mov
mov
adc
enter
xchg
add
dec
pop
sbbl
cld
out
xor
data16
pop
lea
sarb
cld
stos
mov
inc
cmpl
inc
out
xchg
test
ret
fmul
push
cwtl
inc
jp
inc
mov
mov
in
or
xchg
lret
clc
bound
insb
lret
add
imul
dec
adc
adc
xchg
outsl
mov
sbb
add
sahf
mov
adc
pop
shll
and
dec
repz
jne
jp
or
lods
test
xchg
lea
adc
push
inc
repnz
inc
stos
ja
clc
adc
pusha
lds
stc
mov
lds
jb
outsb
leave
fisubrl
or
stc
mov
and
push
lods
pop
lea
add
sti
pop
adc
push
out
sti
pop
lods
push
imul
outsb
mov
fs
jle
or
scas
cmp
nop
sbb
cmp
dec
fbld
xchg
ret
das
aas
insl
pop
push
or
loope
outsb
addl
seta
mov
xchg
dec
imul
adc
aas
jg,pt
pusha
in
xchg
push
mov
pop
xchg
popa
sbb
out
mov
outsb
fcomip
test
test
inc
fstpl
shlb
popf
out
int
lcall
pop
ss
sub
inc
push
jmp
or
mov
mov
or
ficompl
mov
adc
mov
mov
ss
jmp
fnsave
and
lea
lret
std
or
stos
sahf
mov
mov
icebp
jg
pop
mov
lret
addr16
mov
xor
lock
andl
xor
js
das
rcrb
jge
mov
aam
jae
outsl
and
xor
in
test
add
lret
pop
xchg
loopne
ss
jmp
xchg
pop
or
xchg
sub
add
dec
fidivl
popa
mov
xor
aad
out
pushf
xchg
in
jb
aaa
cmp
xchg
adc
jecxz
mov
call
or
repz
xchg
cmpsl
add
or
movsl
aas
jo
addr16
dec
dec
mov
addr16
faddl
jl
popa
mov
outsl
decb
jbe
mov
addr16
push
rolb
mov
jmp
fcomip
pushf
fpatan
les
jo
test
sub
test
mov
or
mov
pop
mov
fnstcw
hlt
or
inc
pop
cmp
ja
xchg
fsubl
dec
inc
pop
inc
inc
iret
fstl
sub
and
mov
clc
popa
lahf
mov
shll
xor
cmp
mov
dec
imul
je
fnstcw
dec
jecxz
jbe
in
push
fstp
add
cmp
pushf
popf
adc
ja
jge
repz
les
adc
adc
cmpl
mov
fiaddl
loopne
ficoms
mov
xor
ficompl
and
jns
sub
lahf
adc
dec
dec
dec
mov
mov
adc
sahf
fsubrl
scas
pop
repz
jp
cmpsb
add
in
jp
mov
push
push
sub
cmpsl
add
mov
adc
lock
jg
bound
mov
dec
sub
cmp
insb
mov
int
fsubs
or
andl
fs
test
mov
mov
and
scas
jae
in
inc
aam
hlt
mov
insl
xor
repnz
lahf
sub
hlt
mov
dec
pusha
ss
xchg
xor
cmp
pop
pop
ds
pop
jb
out
cld
adc
inc
mov
leave
in
sti
adc
dec
lret
pop
mov
daa
stc
mov
sub
nop
andl
xor
andb
xchg
dec
in
add
xor
push
call
mov
out
mov
scas
sti
and
rorb
lea
scas
push
mov
mov
add
xchg
jns
sbb
std
adc
std
lcall
fnstenv
imulb
es
cmp
pop
insl
sub
sub
sahf
clc
pop
mov
in
fst
pop
stos
xor
loopne
popf
fiaddl
cmp
jp
mov
js
mov
imul
adc
rclb
add
mulb
and
out
push
int
into
repz
push
mov
adc
dec
loope
mov
lea
jnp
in
jnp
adc
mov
out
xchg
scas
mov
loope
cmpsb
test
jle
push
xchg
loope
sub
xchg
and
sahf
fldcw
repnz
cli
cmp
add
pop
lea
notl
or
lock
mov
aam
into
pop
mov
xor
jns
jge
and
xchg
mov
scas
and
add
adc
imul
mov
mov
shll
ja
cwtl
pop
dec
mov
jmp
xor
lea
or
cli
add
xchg
mov
cmpb
pop
sbb
adc
mov
jo
test
into
popf
fsts
cs
pop
add
sub
sti
fwait
push
iret
roll
adc
mov
mov
push
mov
pop
mov
data16
out
sub
subl
sub
inc
mov
in
sbb
jp
lods
jp
sbb
add
lock
test
pusha
pop
mov
ja
adc
add
sbb
mov
push
jo
roll
dec
dec
aas
shlb
imul
jbe
adc
stos
inc
shll
sbb
clc
enter
out
cltd
rorb
xchg
fwait
push
daa
inc
inc
sub
push
cmp
sub
outsb
jae
dec
fcmovb
push
fxch
mov
lods
cmp
sbb
stos
lds
sahf
mov
mov
sub
and
jns
mov
sub
outsl
pop
ret
mov
add
xchg
adc
pusha
scas
ret
stos
mov
mov
mov
mov
push
dec
push
pop
pop
mov
hlt
xchg
dec
add
inc
xchg
dec
push
or
repz
rorl
test
rcrb
mov
popa
movsb
data16
inc
into
adc
sbb
sbb
xor
sti
daa
cmp
bound
test
mov
es
adc
xor
test
aam
adcb
jbe
cli
out
sbb
std
cltd
sub
add
aas
fsubrl
outsb
push
jmp
push
mov
jne
mov
jne
adc
xor
mov
cli
mov
aaa
fidivs
lods
sbb
xor
leave
cmpsb
cmpl
pushf
inc
imul
cwtl
inc
push
cltd
dec
cmpsb
out
mov
sub
cwtl
inc
push
cltd
push
out
sahf
xchg
xor
int
inc
xlat
rol
fidivl
jb
loopne
push
cld
push
pop
mov
add
sub
sbb
inc
mov
mov
jne
inc
sbb
test
rcrb
inc
push
add
mull
cmpsl
in
rcrl
test
fs
inc
shl
or
jbe
jl
aas
push
mov
push
sarl
repz
lods
inc
sbb
mov
bound
sub
jo
loop
xchg
mov
addr16
mov
je
out
test
adc
std
inc
fidivrs
ds
mov
imul
gs
sbb
aas
fwait
iret
add
repnz
mov
aam
pop
movsl
or
xor
mov
and
sbb
push
andl
mov
sbb
xor
mov
push
in
push
stc
or
inc
stc
pop
test
jge
push
xchg
inc
mov
pop
push
sub
lods
std
lods
inc
js
sub
sbbb
push
pop
sbb
lahf
daa
in
cmpsl
ds
sub
and
dec
addr16
jle
jbe
fnstsw
cld
mov
push
in
jp
xchg
xor
adc
inc
push
mov
imul
mov
xlat
mov
or
das
mov
mov
aam
cmc
pop
clc
fwait
inc
sub
fdivr
push
xor
jno
stos
add
aad
jle
int
pushf
dec
leave
outsb
push
and
push
in
inc
dec
stos
inc
outsb
scas
pop
sbb
push
loopne
pop
pop
ljmp
mov
cld
cmp
pop
out
pop
add
sbb
lods
and
mov
insl
in
test
xlat
sub
add
mov
jnp
insb
mov
pop
mov
pop
ljmp
xor
cmp
cmp
mov
les
add
std
pusha
out
imul
pusha
jl
mov
adc
fnsave
addb
mov
pop
ret
jo
add
test
lret
inc
shll
addr16
out
test
fpatan
jnp
movsl
sub
fidivrl
scas
inc
add
jp
into
gs
push
in
outsl
mov
push
shrb
bound
jle
loop
pop
adc
push
mov
in
or
call
cmp
int3
roll
loope
pop
pop
pop
scas
xchg
fsubrl
or
int3
ss
mov
rolb
daa
icebp
fnstsw
scas
sub
dec
sbb
jl
into
cmp
repnz
and
mov
test
cmp
xlat
inc
pop
or
lock
adc
pop
and
sbb
xor
inc
testl
das
push
cs
cmc
cmpsl
les
sub
dec
or
xorb
imul
lods
shll
xchg
adc
mov
jle
hlt
mov
fs
repz
in
and
out
enter
pop
repz
push
add
mov
ja
shll
adc
sbb
loope
xor
inc
loop
xchg
sub
xor
sbb
jp
xor
push
ljmp
testb
lcall
xor
cmp
mov
out
aad
lret
bound
dec
outsl
push
cmp
jg
lock
push
cmp
lods
sbb
test
jns
insb
lahf
imul
mov
cli
xchg
xchg
mov
out
xchg
stos
and
iret
xchg
mov
push
not
popf
xor
aas
and
scas
dec
movsl
cmp
ja
mov
xlat
rcrb
mov
dec
fistpll
imul
testb
arpl
push
jl
add
fptan
mov
test
jne
cmp
mov
inc
loope
add
cmpsb
or
push
push
rcl
mov
rcrl
fwait
xor
cmpsl
ds
shll
sbb
push
cltd
lret
fstpl
sub
jae
scas
sub
mov
push
mov
jle
lds
xlat
push
xchg
aas
ss
jnp
shll
adc
in
test
je
shll
daa
bound
gs
ret
mov
loope
adc
sub
dec
jo
xlat
cmp
dec
sub
shlb
mov
sub
addr16
or
jae
push
mov
mov
mov
lock
xchg
cwtl
icebp
dec
pop
pop
rclb
mov
je
cmpsl
push
aam
lret
sub
add
push
test
push
test
loope
cmpsl
in
stc
adc
hlt
and
mov
jb
xchg
insb
add
ss
pop
mov
xor
lock
or
adc
push
push
pop
rclb
pop
sti
data16
cmp
xchg
push
sub
ja
pop
out
scas
xor
dec
xor
push
lahf
pop
rclb
scas
jmp
dec
jge
mov
dec
dec
js
mov
mov
iret
xchg
test
lahf
jo
jnp
push
icebp
lret
stos
bound
fistl
pop
jmp
mov
repz
mov
insb
movsl
scas
cltd
cli
pusha
lcall
daa
scas
or
or
sub
fstl
fidivrs
jg
inc
daa
sub
dec
inc
outsb
xchg
add
outsb
fistpl
test
mov
js
movsb
inc
mov
push
sub
in
les
mov
data16
jge
jb
leave
ljmp
fidivs
decl
out
int
jmp
push
arpl
add
sub
adc
in
and
add
ds
imul
mov
mov
push
jg
out
stos
inc
xlat
fildl
pop
sub
enter
jl
pop
out
or
lds
push
iret
jnp
pop
ss
push
inc
lahf
scas
pop
std
movsl
lods
jb
pusha
adc
mov
and
subl
cs
push
and
sbb
scas
jmp
push
hlt
push
push
test
pop
rol
or
pop
stos
sub
push
inc
shrl
std
cltd
dec
rorl
leave
inc
ljmp
ret
and
pop
outsb
sub
cmc
xor
das
mov
mov
push
add
jmp
pop
sub
mov
divl
daa
ljmp
push
std
lret
sub
mov
daa
push
pop
or
lcall
aam
sarb
ja
aad
push
cmpb
adc
or
outsl
daa
sbb
add
xor
add
fwait
lods
inc
int
sbb
pop
setns
cmp
push
sbb
loope
addr16
out
mov
lods
push
fidivs
add
dec
push
imul
bound
jns
add
arpl
insb
insb
push
pop
ret
cmpsl
jp
pop
dec
in
loop
jnp
testb
cmp
xlat
test
lds
mov
jns
sub
shlb
pop
mov
cmc
adc
test
dec
dec
and
ret
cmp
push
js
push
sbb
cltd
dec
sbb
dec
insb
sbbl
test
shr
sbb
call
pop
imul
adc
and
mov
fcmovb
cmp
sub
adc
cltd
inc
ss
out
fistpl
ret
sbb
dec
in
cli
fnsave
xchg
ja
mov
add
mov
arpl
fildll
push
in
lds
xorl
adc
std
mov
clc
push
mov
pop
icebp
nop
aad
sub
arpl
jns
pop
and
int
and
mov
outsb
rol
add
mov
pop
ds
js
and
pop
sub
rcrl
jno
scas
mov
fld
add
repz
sub
loopne
ja
sti
sbb
or
cmp
cmpb
rclb
mov
mov
fs
xchg
lea
add
out
adc
cmp
push
pushf
pop
mov
push
jmp
add
and
adc
lcall
in
jp
mov
in
outsb
aam
mov
push
mov
mov
and
pop
inc
xchg
ret
jmp
lds
fmull
divb
fisubrl
mov
xor
movsb
lret
pusha
mov
pop
lods
lods
lcall
xlat
mov
add
sarl
outsl
in
xchg
ficomps
xchg
push
xchg
jns
xor
ljmp
loopne
cmp
daa
scas
rclb
dec
leave
ljmp
pop
std
push
mov
sub
mov
push
dec
scas
cmp
dec
out
jge
or
inc
sbb
push
sbb
jno
adc
pop
pushf
mov
aam
nop
daa
jb
cmp
inc
push
jne
mov
fs
xor
into
cmp
jae
pop
pop
sub
test
jmp
hlt
mov
xor
das
cs
xchg
insl
lret
add
rolb
push
or
stos
out
cli
in
mov
gs
sub
mov
pop
stos
pop
inc
in
repnz
push
loop
add
loope
sarl
jp
pop
xchg
jmp
lcall
xchg
outsb
pop
mov
fisubl
mov
sbb
sub
lcall
stc
mov
jne,pn
or
jb
jne
sbb
inc
adc
xchg
insl
add
ja
je
add
xchg
dec
dec
fs
jnp
sbb
lcall
imul
out
sahf
and
movb
add
pop
adc
pusha
pop
cmp
into
pop
arpl
leave
mov
sti
mov
pop
mov
push
mov
mov
mov
inc
fiadds
and
and
push
mov
sub
push
orl
jl
adc
and
sti
and
xchg
pop
test
fstpl
mov
insl
sbb
adc
das
rcr
and
ror
iret
movsb
enter
push
jmp
sub
mov
or
push
insl
filds
out
sbb
xchg
lcall
fisubrs
pop
negb
insb
mov
mov
mov
test
bound
movsl
sub
cwtl
mov
jle
or
or
add
pop
cld
cmovs
mov
xchg
popf
and
sbb
lods
mov
mov
mov
int3
mov
dec
push
lcall
cwtl
stos
std
js
or
xlat
rcll
inc
adc
cwtl
inc
test
out
rol
mov
sub
xchg
push
dec
mov
aam
mov
pop
icebp
fwait
hlt
mov
mov
aas
xchg
cmpsb
aad
and
dec
push
mov
rcr
dec
in
inc
mov
inc
sub
sbb
lret
fsub
mov
push
push
out
orl
add
daa
pop
xchg
jns
dec
jge
jnp
sti
mov
pop
std
xchg
push
add
push
or
in
xor
int
mov
add
push
mov
xor
in
mov
std
loope
addr16
shr
jae
in
pop
repnz
xor
stc
mov
popf
fists
mov
jp
sbb
scas
jo
js
pop
loopne
mov
pushf
push
dec
loope
cmp
push
call
adc
daa
js
xchg
andl
ret
sbb
cltd
sub
scas
shll
fs
push
mov
in
adc
sahf
add
mov
mov
jmp
jns
jb
imul
testb
fdivp
daa
add
mov
pop
icebp
enter
enter
push
xor
sahf
fnstenv
fadds
rolb
jg
adc
add
nop
gs
sbb
in
int
adc
jg
mov
flds
scas
mov
push
lods
mov
fwait
adc
imul
test
sub
adc
push
mov
xor
and
movb
jge
jmp
daa
fsubp
xchg
loop
lock
stos
add
push
xor
lret
out
test
ret
pop
sbb
scas
mov
jo
cmpsb
sbb
sbb
shll
lds
call
dec
ret
negl
cwtl
jb
lock
cwtl
mov
xor
shll
push
inc
rolb
je
adc
pop
sub
roll
jge
push
mov
xchg
sub
xchg
dec
mov
mov
ja
push
jmp
xor
mov
ret
cmp
mov
movl
push
jb
jbe
mov
sbb
sahf
push
movsl
repnz
jg
jns
cmc
xchg
xor
push
inc
fimull
inc
aas
adc
fisubrl
mov
or
pop
mov
nop
fisubl
cmp
dec
shrl
xchg
les
repz
cmp
loop
mov
shrl
test
in
sbb
test
aas
pushf
icebp
sbb
and
lret
pop
repz
xorb
push
sub
xchg
mov
call
xchg
sbb
cmp
mov
ret
add
add
mov
push
hlt
fwait
add
xor
push
push
sbb
inc
add
jle
or
int
js
push
push
sub
push
cli
xchg
push
ss
out
popa
inc
sbb
jno
dec
loope
cmp
add
cwtl
jecxz
inc
testb
leave
ret
mov
xor
movsb
inc
loop
mov
mov
dec
loope
pop
into
outsl
pop
mov
fisubrl
sbb
jmp
fdivs
adcl
jmp
scas
addl
mov
data16
xor
mov
fcmovnbe
outsb
or
push
sbb
mov
daa
hlt
and
cmp
xchg
jp
lea
popf
aaa
int
cmp
push
xlat
dec
add
jle
and
pop
mov
sbb
dec
xor
adc
inc
push
xchg
or
and
push
pop
cmpsb
stos
push
and
leave
enter
stos
jmp
outsl
mov
imul
adc
mov
js
cli
sbb
adc
fs
sbb
ret
and
ljmp
mov
push
mov
fsubp
je
mov
nop
gs
rorl
mov
ror
mov
stos
sbb
inc
pop
cli
jp
les
push
pusha
rcll
sarl
or
mov
xor
scas
xchg
xchg
mov
out
push
adc
mov
adc
cmp
jns
adc
aas
xchg
mov
dec
cmp
xor
loopne
or
pushf
dec
movsb
sub
iret
leave
icebp
movsl
xor
xchg
pop
pop
aad
cmp
repnz
in
add
les
fstl
out
dec
inc
cmp
in
push
xchg
or
jg
into
test
jge
sub
inc
fmuls
scas
sub
lcall
fwait
sbb
push
cwtl
jae
stc
aad
repnz
fdivrp
fwait
push
mov
push
mov
test
mov
cmpsl
xchg
fldenv
mov
mov
or
loopne
fwait
cmpsb
std
shrl
xchg
in
outsb
loope
jl
mov
cmp
lret
jle
add
popa
fs
ficoml
cwtl
pop
cwtl
inc
xor
xchg
cmc
sbb
mov
xchg
lods
in
movsl
icebp
movsl
pop
mov
pop
ret
or
push
cs
in
aaa
push
test
in
jno
lcall
sar
or
or
dec
sub
bound
int3
mov
nop
xor
popa
aad
mov
or
rcrl
dec
leave
dec
sti
movsl
jge
les
dec
pop
push
inc
aam
push
mov
lahf
push
mov
mov
push
sbb
inc
in
or
or
incl
inc
rorl
mov
sub
fwait
bound
shll
mov
pop
cmp
mov
and
xor
lods
call
lea
cmp
mov
cmpb
cs
cmp
int3
inc
inc
popf
test
and
out
stos
nop
je
stc
adcb
divb
outsl
cmc
mov
daa
xchg
inc
ficompl
dec
lods
dec
call
sbb
imul
lret
push
xchg
ficoms
push
cmc
int3
jecxz
sar
pushl
pop
into
sub
cld
push
jnp
jbe
lret
and
aam
add
xchg
test
lds
inc
fstpl
inc
jne
mov
and
imul
xchg
add
fidivrl
push
jmp
testl
out
lea
cmp
std
popf
push
xchg
or
pop
movsb
roll
pop
loop
xor
in
sub
mov
or
or
ret
inc
cmpsl
mov
incb
cmp
mov
xchg
fwait
xor
or
mov
inc
xor
shl
aas
inc
mov
loope
sbb
pop
ljmp
rcrl
add
scas
push
cli
cmp
mov
sbb
mov
clc
mov
jbe
and
es
push
int3
push
push
out
das
movb
dec
iretw
and
xor
sti
fwait
out
jns
mov
jg
ret
fwait
pop
push
jbe
cld
pop
pushf
shr
cmp
pop
jno
mov
jp
pushf
pop
outsl
rcrb
push
lock
addr16
adc
enter
mov
fistl
add
das
dec
lods
mov
cmp
lock
leave
inc
scas
jb
push
mov
mov
sbb
mov
cmp
pop
mov
inc
popf
push
push
sub
in
xor
stos
inc
test
jge
and
pop
jb
aaa
mov
push
aas
sbb
shrb
lret
iretw
pop
scas
rcrb
and
xorl
pop
cmc
cmpsl
push
loopne
mov
cmpsb
divl
xchg
adc
cli
mov
pop
aaa
sarb
dec
idiv
pusha
int
sub
inc
and
dec
cmp
cs
mov
pop
mov
or
lods
testb
pop
xlat
pop
push
dec
loopne
fwait
enter
in
movsl
add
and
add
adc
xor
pop
cli
sbb
dec
sbb
cmp
fld
sub
sub
dec
loope
push
jne
add
pop
and
pop
mov
xchg
fbld
pop
ja
jb
jle
fucompp
dec
dec
cmp
bound
lret
popa
js
mov
xchg
lods
loopne
push
sub
hlt
lret
dec
cwtl
das
adc
mov
xchg
mov
popf
inc
in
xchg
pop
jne
into
xlat
mov
imull
loop
xchg
lcall
negb
je
test
divl
push
mov
inc
push
leave
int3
push
fucom
mov
pop
and
aam
dec
loope
in
push
ret
sub
mov
xor
xchg
and
sbb
push
pop
aaa
cmp
mov
jmp
loope
mov
pop
ljmp
mov
scas
and
push
sarl
pop
sub
push
repz
jae
lret
mov
bound
xchg
pop
pop
fildll
hlt
pop
inc
ret
ja
adc
push
nop
or
int
adc
outsl
mov
adc
test
jae
cmp
push
mov
push
mov
dec
popa
xor
mov
fildl
lret
rcrb
dec
outsb
add
lahf
mov
and
or
adc
xchg
xchg
mov
test
xor
scas
pusha
cmp
out
hlt
addr16
mov
adc
push
ljmp
inc
lods
enter
pop
jg
jo
and
flds
aam
xchg
adc
cmp
imul
or
into
enter
xchg
inc
lcall
and
xorl
jle
div
int3
loopne
test
mov
rol
mov
xchg
enter
enter
sub
rcrb
adc
je
stos
arpl
jnp
dec
xchg
aaa
fidivs
and
sub
push
inc
leave
dec
xchg
iret
ret
dec
pushf
jns
sbb
rcll
call
shl
movsb
jnp
or
ljmp
repz
lret
and
sub
and
dec
sub
jge
xchg
lods
call
leave
inc
fnstsw
adc
imul
addr16
lds
imul
cmp
sub
push
or
std
mov
movsl
addr16
mov
cwtl
fsub
cmp
jp
fidivrl
lahf
lods
aaa
pop
aaa
push
jge
jo
dec
jp
push
mov
add
and
es
cmpsl
stc
mov
movsl
aaa
ret
jg
lds
sbb
cmp
aaa
lret
mov
shll
imul
sbb
mov
imul
or
inc
sarl
xchg
push
mov
lret
popf
and
sbb
cltd
outsl
cmpsb
fs
mov
aam
out
loop
jae
pop
and
or
fiadds
inc
pop
adc
adc
xor
mov
push
mov
jl
mov
arpl
dec
pop
mov
adc
shrl
pushl
ljmp
jno
dec
lret
sbb
mov
ret
mov
out
loop
fbstp
add
xor
subb
dec
mulb
test
cmp
cmp
loopne
mov
mov
push
jnp
mov
pop
xchg
and
mov
or
loopne
xchg
fwait
sti
pushf
cmpsl
hlt
mov
xchg
mov
inc
adc
xchg
ljmp
pop
fwait
lods
mov
push
inc
pop
pop
scas
lods
cmp
inc
fsubl
jb
icebp
mov
sarb
jp
shr
mov
in
jecxz
mov
or
mov
out
out
xor
cmc
cmp
xchg
cltd
pop
loop
jge
push
mov
call
je
xchg
push
and
scas
call
jne
xchg
push
pop
or
lods
pop
xor
dec
icebp
or
cmpsb
jo
fcomps
adc
pusha
movb
mov
mov
lds
inc
insl
pop
mov
in
out
imul
rcr
or
cli
jo
ret
rcrb
addr16
repnz
ss
mov
xlat
inc
mov
sahf
cmp
and
mov
out
pop
shrb
jle
roll
js
repnz
mov
ja
or
cmpsl
or
mov
or
popf
mov
std
xchg
lcall
mov
loop
sbb
outsb
in
sbb
inc
push
ret
int3
xchg
in
scas
adc
out
cmp
stos
iret
inc
xchg
lods
jae
xor
sub
inc
aaa
in
gs
push
into
gs
lcall
xchg
push
and
dec
cmc
pusha
lahf
es
pop
repz
es
and
shl
or
clc
sub
cwtl
in
sbb
pop
xor
mov
cmp
dec
pop
test
rol
fs
push
iret
fnstsw
inc
jne
sbb
aas
mov
and
jae
mov
sbb
jp
aam
ficompl
jg
pop
aam
or
aas
imul
stc
clc
test
sbb
pushf
push
lret
xchg
xor
add
xor
mov
std
fistpl
mov
ds
test
int3
and
test
arpl
enter
cmp
or
pop
mov
insl
dec
lods
cmp
les
stos
push
push
push
mov
loope
xchg
test
orl
jns
push
xor
jge
jp
xor
mov
outsb
std
rcrb
ret
lcall
leave
movsl
cmp
test
sahf
addl
shrl
addl
push
imul
lret
sbb
je
or
adc
imul
rcrb
inc
mov
sub
mov
jl
jae
jl
jb
inc
mov
xor
bound
and
pop
cmp
popa
xor
pop
pop
xchg
stos
add
xchg
push
bound
add
and
in
insl
outsl
xlat
add
sub
mov
adc
fwait
jnp
sbb
and
or
mov
inc
sub
mov
mov
sbb
jge
out
mov
jo
jmp
js
call
mov
outsb
mov
lock
imul
cmp
aas
and
xchg
push
pop
mov
ret
add
out
cmp
lea
jo
lods
jg
lret
dec
out
cltd
adc
mov
mov
iret
mov
mov
cmp
testl
jg
cmp
cmp
push
sub
push
notb
int
icebp
mov
add
mov
jp
push
xchg
cmp
popf
das
in
push
stos
subl
inc
jmp
fs
stos
ds
js
push
gs
dec
pshufw
pop
sahf
mov
ret
and
pop
mov
fmull
adc
icebp
cmp
cs
jb
stc
popl
dec
lods
cmpsl
out
pop
movsb
pop
aad
cmp
adc
or
mov
adc
loop
je
adc
or
ljmp
gs
xchg
pop
xor
xchg
mov
repnz
mov
loope
xor
push
and
lods
mov
insb
aad
adc
sarb
es
jb
xchg
inc
jmp
or
mov
out
repnz
lea
dec
adc
imul
push
pop
dec
adc
cmpl
xchg
jmp
mov
dec
fstpt
pop
pusha
mov
jne
fcmovne
jbe
mov
gs
out
mov
push
lcall
cmpsb
jns
mov
and
hlt
add
shrb
and
mov
pop
fwait
ret
sub
dec
lea
mov
jo
rol
fdivl
add
aam
imul
scas
and
push
adc
ss
cmp
xor
push
xor
in
or
xlat
stos
inc
lds
mov
cmpsl
movlps
mov
iret
cmpsb
xor
jp
ret
or
jmp
cmp
mov
cmp
or
test
call
inc
push
xchg
into
cmp
mov
inc
inc
in
outsb
lahf
push
test
insb
popf
cmp
xchg
les
jnp
sub
or
movsb
mov
out
aas
sub
push
fdivrp
xchg
add
imul
add
xor
xchg
lcall
enter
adc
cmpsl
dec
adc
shlb
loope
pop
cmp
adc
scas
test
and
fdivs
ja
xlat
pop
pusha
not
mov
sub
repnz
ret
rclb
pushf
scas
call
pop
repz
ret
sbb
push
mov
repnz
aad
je
or
aas
out
sarb
mov
insl
adc
mov
inc
movl
xchg
push
add
push
dec
mov
repz
inc
mov
insl
xchg
ss
jae
xchg
mov
fdivs
xchg
shrb
push
push
lds
sub
push
into
mov
cld
push
push
icebp
bswap
mov
shll
fdivr
aas
jp
repnz
out
fsubs
lahf
pop
mov
pop
cmpsb
push
fcmovnbe
out
ds
jp
mov
pop
fwait
and
xchg
jb
jns
cmp
clc
pop
call
mov
loop
cmp
mov
mov
xchg
sarl
xchg
addr16
inc
push
popf
inc
mov
gs
scas
popf
or
cs
mov
and
shll
bound
leave
lret
mov
or
stos
jbe
or
mulb
stc
push
inc
xchg
loopne
mov
jns
inc
inc
in
fbstp
divb
sub
cmp
orl
jl
inc
lahf
pop
dec
push
push
out
ljmp
push
daa
stc
mov
or
mov
test
jbe
add
or
mov
mov
mov
push
mov
inc
lds
lahf
xor
mov
inc
dec
cmc
fcomps
sbb
xor
movsb
jo
lcall
in
inc
xchg
dec
fbld
lret
jne
bound
jb
pop
test
jb
ret
fs
and
add
std
les
test
loop
ret
fimuls
out
cmovl
shll
lods
xchg
or
mov
repz
add
xchg
daa
rorl
pop
insb
jne
xor
and
popf
sub
repz
adc
jae
mov
add
fdivs
jo
es
sbb
in
mov
adc
push
adcb
pusha
mov
cmp
inc
xchg
roll
leave
ja
or
mov
sbb
repz
xchg
lret
sarl
jp
lods
and
aad
xlat
cmp
inc
pop
faddl
movsl
cmp
fildll
fstl
xchg
add
in
mov
stc
xchg
insl
sub
mov
push
lods
das
shll
push
xor
das
xlat
scas
fistl
ja
mov
fidivl
cmp
cmc
push
clc
inc
pop
push
xchg
xor
dec
aas
mov
cmp
gs
decl
popf
or
pop
in
cmp
mov
into
sub
testl
or
fstpl
loopne,pn
cmp
sub
jb
aaa
mov
xor
pop
xor
das
push
inc
loopne
inc
and
aam
xor
cmp
push
push
add
stc
mov
scas
and
mov
repnz
movsl
sahf
je
test
xor
jg
clc
lret
push
jo
mov
inc
and
arpl
xor
add
out
push
jne
movsl
fucompp
add
mov
scas
mov
xchg
mov
adc
xor
add
dec
hlt
in
push
fsubrs
sbb
mov
int
sub
push
push
push
xor
inc
out
add
pop
ss
loopne
cmpsb
push
imul
rcr
xor
xor
cmc
mov
add
xchg
sub
test
pop
mov
hlt
cld
inc
fcomps
jnp
xchg
mov
pop
cmpsl
ret
jno
xchg
movsb
fistps
cld
mov
call
mov
cwtl
pop
sbbb
mov
mov
in
lret
and
xor
jge
pop
bound
add
sub
movsl
ja
out
sbb
insl
ja
inc
or
aam
dec
bswap
ljmp
gs
inc
cmp
scas
int
pop
icebp
dec
in
xchg
push
js
in
adc
jmp
pop
jle
es
arpl
pop
lea
and
fwait
popf
mov
sbb
clc
xchg
sub
sbb
mov
sbb
popa
xor
sbb
enter
incb
xchg
repnz
dec
xor
cmc
mov
fisttpl
sbb
jg
adc
push
mov
in
mov
pop
cmp
es
cld
roll
sbb
shl
or
arpl
jb
mov
adc
push
fisttpl
divl
in
iret
pop
pusha
sar
cltd
les
jae
xchg
xchg
stos
lret
ds
pop
test
data16
xchg
pop
les
xchg
xor
add
rcr
push
xchg
add
outsl
sahf
xchg
push
jns
scas
cmp
lahf
sbb
pop
add
sbb
popa
stc
xorl
push
out
sub
cli
clc
loop
test
scas
sbb
adc
xchg
ja
repnz
sub
dec
in
dec
push
lahf
sbb
int3
int
jns
and
cltd
sbb
pop
xlat
pop
dec
loop
add
lock
loop
jl
inc
ds
scas
outsl
es
lods
push
out
inc
nop
inc
cmpsl
ret
andb
dec
inc
add
cs
add
repnz
repnz
lds
aam
imul
pushf
and
or
test
negl
mov
adc
scas
jo
andnps
bound
lds
adc
jge
xchg
test
jl
subl
xor
cwtl
out
mov
mov
je
addr16
add
pop
xor
test
nop
js
into
lds
test
mov
call
ret
xchg
mov
cmpsb
insb
fistpll
test
dec
sarb
ja
sub
les
aad
into
movsl
repnz
mov
push
scas
inc
mov
and
test
pop
dec
inc
push
daa
inc
xor
mov
mov
ret
sahf
jp
test
aas
les
cli
or
roll
repz
push
scas
and
mov
mov
cli
sub
mov
fisttpl
push
arpl
xor
bound
out
cld
jecxz
adc
ljmp
and
pop
outsb
jmp
scas
push
sub
push
in
sub
nop
stc
cmp
imul
lret
inc
jmp
add
adc
inc
in
test
jle
test
mov
mov
jb
and
daa
dec
lea
scas
sub
std
push
push
mov
jl
data16
mov
cmp
and
mov
sbb
cmp
add
sbb
rcrl
outsl
ret
and
jmp
dec
pop
andb
stos
call
add
mov
out
bound
pop
and
or
jae
mov
mov
pop
xchg
es
loope
loop
jns
rol
and
inc
dec
shlb
addr16
loop
add
mov
xchg
test
mov
pushf
and
dec
out
mov
insl
fcompl
or
dec
jne
insb
cmpsl
out
push
lahf
enter
adc
mov
adc
icebp
stos
fs
fistl
sub
sbb
push
ljmp
lock
mov
cmp
inc
mov
addr16
inc
test
mov
jns
dec
shlb
and
adc
fadd
sub
repnz
dec
loop
insl
xor
and
lds
out
lahf
test
xor
jmp
jb
jns
cmp
push
xchg
scas
add
xorl
ficomps
pcmpeqb
subl
pop
xor
sub
dec
dec
loope
in
cmpsl
ret
incl
stos
jbe
xchg
test
and
inc
loope
jbe
lret
fbstp
cmp
test
clc
pop
cmp
xchg
pslld
mov
lret
xlat
push
loop
es
test
pop
jmp
ss
mov
out
and
out
push
adc
fdivs
fs
mov
fisubrs
mov
adc
shr
add
cmp
cld
arpl
pop
rcl
dec
out
push
push
pop
jecxz
daa
inc
cmp
or
push
lods
out
test
pop
or
lsl
dec
and
jmp
jbe
jbe
xor
xchg
and
mov
aas
dec
idivb
dec
and
mov
dec
push
xchg
movsb
stos
jne
data16
imul
inc
loopne
sbb
pop
add
lds
sbb
and
adc
pop
jge
add
xor
xchg
clc
dec
cli
sbb
outsl
inc
inc
or
mov
jns
pause
daa
lods
lcall
ljmp
call
stos
pop
mov
pop
push
dec
or
jle
arpl
lods
xchg
push
into
jae
inc
xchg
mov
test
and
in
aas
mov
adc
fldl
inc
fsubl
test
pop
pop
mov
in
test
test
mov
imul
jp
add
jne
sbb
pusha
stos
in
fs
push
andl
mov
pop
inc
gs
divb
mov
or
icebp
cmp
jp
dec
and
dec
jae
mov
fisubs
or
inc
xchg
lret
dec
pop
loope
into
push
mov
ficoms
pop
subl
xlat
in
rolb
pop
insl
pop
jp
sbb
mov
aam
mov
es
jnp
add
cmp
and
pop
pop
pop
lahf
lock
cmp
ds
fucomip
mov
jge
xlat
jmp
test
ja
dec
mov
xor
and
and
xor
jb
xchg
stc
push
adc
out
push
push
push
xchg
push
xchg
jmp
shld
mov
cmp
mov
mov
and
shlb
cld
push
jmp
jecxz
xchg
pop
shll
imulb
dec
ss
shll
out
and
push
fmulp
mov
cmc
aaa
mov
cmp
jp
add
xchg
lock
std
fsubrp
jae,pn
mov
xchg
push
sahf
sbb
inc
aaa
fsubr
ror
push
test
aas
xchg
fidivrs
pop
mov
fstpt
imul
mov
test
xchg
fs
mov
inc
sti
cmp
xchg
ljmp
xchg
fwait
arpl
and
or
pushf
aas
xor
mov
loope
jg
test
lea
dec
out
call
jp
scas
and
pop
fcmove
xor
aaa
into
ja
cmp
das
cltd
push
in
lret
inc
push
imul
adc
loope
ss
or
cmp
or
pushf
xchg
jle
adc
lret
lret
dec
sbb
mov
adc
addr16
lret
or
inc
add
repnz
xchg
jle
cltd
lret
test
test
fsubrl
sub
adc
call
mov
stc
psadbw
pop
rol
cwtl
add
jp
mov
sbb
sar
imul
adc
mov
in
lock
dec
pop
repz
cmp
and
stos
std
xchg
sahf
test
cs
xchg
xchg
add
arpl
cmpsb
pop
ficomps
xchg
adc
mov
mov
adc
pusha
mov
test
jge
hlt
sbb
cmp
cmp
in
ret
push
popf
push
stos
loope
add
jmp
mov
rclb
and
mov
loopne
jl
insb
scas
inc
testl
test
xchg
pop
dec
icebp
xchg
jae
xchg
pop
rcrl
xlat
cmp
sub
mov
sbb
cmp
icebp
adcl
hlt
in
mov
push
lea
cmp
mov
cltd
ret
iret
in
jbe
pusha
test
lcall
pop
inc
lret
test
jp
decl
fbld
mov
in
and
dec
xchg
inc
add
movsb
mov
xor
aas
call
sbb
add
push
cmp
and
fsubrs
idiv
mov
jl
je
add
test
adc
stos
sbb
mov
sbb
or
imul
pop
jb
dec
mov
cmpsb
jmp
fwait
popa
xor
addl
inc
push
mov
fidivrs
push
scas
into
pushl
fdiv
jno
mov
insb
sti
pusha
push
mov
lods
ljmp
and
js
adc
sbb
mov
and
ja
jge
subb
mov
add
mov
cmpsb
cmp
and
pushf
jbe
mov
fildl
sahf
or
pop
scas
add
std
or
sbb
mov
insl
cmp
pop
cmc
mov
nop
insb
out
in
and
sbb
adc
mov
out
and
andb
push
in
xchg
mov
xchg
jae
fwait
xchg
inc
mov
inc
sbb
xchg
mov
cmp
shrl
scas
cmp
repnz
ljmp
lret
out
cmp
cmpsl
xchg
fwait
push
push
push
fwait
inc
jb
popf
aaa
fsts
std
jmp
jnp
and
xor
dec
shrb
mov
lock
mov
in
scas
fnsave
lock
pop
jo
and
fmuls
push
or
ds
sub
push
xlat
mov
xor
clc
dec
dec
lods
xchg
pop
imul
cmp
or
add
xor
add
jecxz
push
adc
xor
jns
scas
call
dec
mov
pop
lahf
imul
cld
addr16
lcall
cmc
mov
mov
aam
cmp
shrb
outsl
add
xor
push
mov
repz
mov
adc
ret
xchg
xor
ljmp
popf
mov
enter
and
testl
loopne
gs
adc
adc
jmp
dec
out
cld
add
jl
jno
push
mov
repz
add
xor
mov
mov
inc
fmuls
pop
neg
sbb
into
insl
lret
nop
jnp
ret
int3
lret
out
lret
push
aas
jo
pop
add
mov
mov
push
dec
test
mov
fs
stos
pushf
push
and
mov
pop
sub
out
mov
mov
add
push
xor
aas
testl
daa
mov
and
dec
daa
dec
call
or
in
cmp
test
insb
jo
mov
outsb
xchg
mov
xorb
outsb
push
sub
adc
fld
repz
push
aas
xchg
or
or
sub
inc
sub
push
sub
jb
imul
mov
sbb
dec
sti
movsl
inc
adc
sarb
imul
xor
mov
sahf
mov
jg
in
mov
jecxz
push
jae
cmp
mov
xor
dec
dec
inc
movsb
mulb
push
pop
mov
push
movsl
arpl
mov
cmpl
out
lea
mov
mov
mov
mov
js
cmpsl
test
dec
mov
repnz
out
es
sarl
jge
mov
fisubs
iret
addl
mov
insb
stc
cmp
jmp
adc
sub
out
enter
sub
pop
es
les
pop
idivb
sti
stos
jg
jmp
xchg
pop
shrb
das
cwtl
mov
clc
push
enter
fbstp
stos
lods
jo
cmpsl
std
xor
jns
sarl
stc
jmp
xlat
cmp
or
ret
mov
lret
mov
jge
fbstp
inc
pushf
scas
inc
into
fs
jge
outsl
imul
lds
mov
sahf
jno
xor
in
add
dec
incl
outsl
cld
push
idivb
stos
pop
cltd
in
nop
jmp
add
outsb
add
push
or
iret
loopne
and
fiaddl
or
jmp
ss
sbbl
int
test
repnz
adc
andl
test
popf
int3
cmpsb
icebp
mov
ja
movsb
push
push
jne
jl
in
out
enter
in
fs
xlat
pop
popa
cmp
popa
negb
fistl
dec
ret
or
mov
fcmovnb
fdivrl
lea
add
lods
pop
sahf
inc
sbb
mov
push
data16
icebp
lea
lret
mov
or
daa
outsl
pop
push
mov
jnp
dec
pop
lds
xchg
xor
jmp
out
jle
orl
stc
rcr
add
add
test
dec
test
lret
jle
out
je
lahf
lea
and
mov
jbe
mov
lret
sub
or
or
dec
sub
stos
inc
xchg
mov
dec
pop
jmp
lods
aas
mov
loop,pt
pop
mov
sub
scas
mov
add
mov
dec
push
mov
add
clc
push
notl
push
jb
scas
xchg
lds
pop
mov
lock
mov
inc
dec
in
add
insb
fildll
inc
clc
sub
xchg
mov
in
sahf
push
jmp
inc
rcrl
mov
aaa
mov
push
sbb
aas
inc
sti
out
outsl
mov
xchg
xchg
out
sbb
pop
mov
or
cmp
add
ret
lret
outsl
jo
inc
xchg
or
jg
mov
jbe
call
mov
add
xchg
pop
jg
xor
push
mov
xor
inc
mov
mov
sbb
jne
pop
pop
out
loopne
cmp
xchg
mov
jno
jno
outsb
add
cmp
das
sbb
sbb
or
das
sbb
add
loop
mov
xor
cld
jp
xlat
xchg
mov
sub
rcl
cmp
data16
arpl
shl
cs
faddl
ljmp
ljmp
cmpsl
pusha
push
push
xlat
inc
insb
cs
ss
inc
push
ret
pop
outsb
mov
sbb
lahf
stos
push
add
xor
and
and
int3
pop
movsb
cmc
pop
mov
dec
or
outsb
js
movsl
test
fisubl
inc
lods
jo
mov
sti
rolb
scas
sub
pop
dec
arpl
int
sub
mov
fildl
stos
jle
sub
add
xchg
cmp
es
push
and
outsb
or
divb
add
push
outsb
jge
in
into
xchg
sbb
fs
jb,pn
insb
loop
pop
mov
xchg
push
inc
dec
out
je
popa
rclb
cmpsl
test
add
ja
pop
loope
dec
sbb
xchg
test
int3
pop
dec
cmpsb
pop
lcall
loopne
mov
xor
pop
aaa
xor
loope
sbb
jmp
mov
xor
mov
mov
rcl
xor
or
dec
icebp
rcrb
push
pop
mov
in
jo
mov
dec
test
pop
pop
aad
mov
adc
pop
jecxz
iret
cwtl
pop
loope
das
mov
pusha
les
cmp
arpl
xchg
sti
cmp
mov
jno
inc
test
inc
push
pop
cld
ds
mov
or
insl
sub
adc
pop
js
fwait
aas
xlat
sub
xchg
xor
adc
mov
cmp
test
sub
jb
push
mov
sbb
notb
fnstsw
jb
daa
dec
fsubrs
iret
mov
mov
jmp
popf
xchg
cmp
push
mov
jg
mov
sbb
mov
mov
adc
jb
cmpsl
inc
sbb
sub
add
dec
pop
xchg
mov
mov
outsl
adc
movsb
dec
clc
and
pop
lret
push
jae
mov
test
fldenv
mov
mov
adcb
jge
xor
inc
fistpl
fbstp
push
mov
les
jnp
xor
mov
inc
inc
push
das
fdivl
aaa
fcoml
and
pop
fdivrl
add
fcoms
jno
imul
dec
aam
orl
aaa
nop
mov
jle
dec
daa
sub
inc
stos
add
repz
cli
cmc
xchg
pop
loopne
and
cli
or
movsb
mov
ljmp
and
daa
arpl
cwtl
lock
jle,pn
and
addr16
je
andb
out
jmp
pop
mov
sti
fwait
cmpsl
pop
dec
xor
lock
mov
cmpsb
jge,pn
mov
jbe
out
arpl
js
jecxz
das
and
and
mov
push
lods
sahf
mov
ja
negb
sub
lods
add
rolb
jp
ret
xor
jecxz
lret
jg
repz
inc
dec
xchg
jnp
lahf
rcll
cmp
out
rorb
pop
in
mov
and
lods
inc
mov
and
ja
and
in
sbb
sub
dec
mov
scas
addr16
dec
dec
pop
subl
sub
cwtl
pop
jge
rcl
mov
in
push
popf
xor
mov
ret
push
jmp
lret
pop
js
scas
xchg
pop
xchg
and
ljmp
sbb
jle
pop
out
mov
add
sbb
gs
loop
mov
cmp
test
call
aas
shll
lock
jecxz
or
mov
dec
cmp
nop
add
xchg
add
and
stos
jae
fdiv
mov
movsb
sbb
xchg
sub
dec
stc
sbb
cli
push
gs
jmp
pop
dec
pop
xlat
add
cmp
loope
scas
pop
pop
addr16
mov
test
ret
inc
popa
jnp
imul
cmpsb
xchg
mov
daa
outsl
mov
jns
aam
xor
inc
loopne
dec
adc
rorl
xor
push
cltd
sub
stos
jmp
dec
mov
xchg
divl
dec
cmp
adc
push
das
jecxz
or
dec
pop
push
mov
xchg
jmp
std
notb
mov
xlat
ljmp
test
jno
xchg
add
sbb
add
sub
enter
outsl
and
outsb
test
cmpsb
push
mov
sub
xchg
jmp
push
and
mov
xor
xchg
jno
gs
shll
cld
inc
cwtl
cmpsb
fldl
fcmovbe
push
pop
stos
clc
jge
xorl
lods
sub
cmc
mov
ja
sub
ds
lahf
sbbl
jae
pop
pop
xor
outsl
notl
inc
push
lock
jae
lds
repz
mov
sbb
pusha
ret
inc
popa
sub
mov
shl
mov
ds
outsl
bnd
cmp
es
cmc
pusha
jo
gs
xchg
xor
in
inc
hlt
inc
push
fists
pop
jl
jne
insl
sbb
cmp
sbb
cmc
cwtl
data16
and
imul
mov
mov
cwtl
and
out
xchg
ss
dec
cmpsl
xor
xchg
in
inc
push
stos
es
ljmp
push
cmpl
enter
mov
jno
or
push
or
jle
push
cmpsb
jnp
das
jb
xor
dec
aam
dec
mov
out
xchg
adc
fwait
xor
orl
xchg
cmc
in
add
ljmp
call
dec
cltd
inc
lcall
inc
fsubl
cmp
fsubrp
mov
and
popa
mov
popf
sub
and
iret
ss
sub
stos
arpl
xchg
popf
mov
cmp
es
lret
scas
mov
or
pushf
rcrl
mov
roll
rorl
sbb
mov
mov
lahf
mov
in
push
push
mull
add
mov
mov
clc
jno
pop
cs
int3
mov
fisubrs
adc
daa
mov
adc
sahf
nop
pusha
repnz
rcrb
jae
sub
addb
inc
mov
ja
xchg
or
mov
jmp
test
dec
and
jp
xor
lods
bound
gs
fstl
je
mov
lods
pop
imul
sahf
fs
or
mov
dec
pop
or
mov
add
cmc
xchg
aaa
mov
and
pusha
leave
and
lods
or
pop
mov
cmc
scas
out
push
add
sbb
inc
xor
add
stos
mov
jecxz
mov
stc
adc
dec
sbb
fdiv
nop
fidivrl
out
pop
cld
push
daa
adc
insl
xchg
mov
and
mov
std
aas
mov
movsb
rcl
in
add
mov
jnp
popa
lret
cs
leave
jno,pn
push
ljmp
ljmp
sbb
outsb
cltd
movsb
dec
cwtl
pop
jp
push
scas
out
fwait
shll
sbb
and
ja
pop
sarb
xor
pop
push
jbe
mov
sbb
lods
adc
popa
clc
push
pop
or
rolb
test
push
mov
clc
xchg
pop
inc
sub
stos
or
sahf
xor
xchg
adc
pop
fcomps
xchg
pop
stos
lods
or
les
cmp
pusha
jecxz
cmp
cli
psubsb
sub
mov
cltd
pop
adc
xchg
scas
push
jp
fcompl
aam
adcb
add
rcl
cld
dec
dec
pop
dec
into
push
popf
loop
sub
pop
mov
mov
cmp
xor
push
mov
mov
xchg
movsb
xchg
jns
xor
xlat
popa
mov
nop/reserved
ja
jg
jp
jp
gs
push
jnp
cs
addr16
int3
int3
or
cld
push
ja
and
inc
push
mov
lret
int3
mov
in
stos
sbb
pop
push
xor
xor
sbbl
test
in
fld
jae
ret
inc
inc
bound
int3
mov
fnsave
adc
cmp
pop
jnp
sahf
mov
adc
sti
dec
sbb
inc
sbb
mov
into
fistpll
xlat
xchg
pop
add
fldenv
or
adc
jge
push
mov
add
adcl
loop
cmc
pop
sbb
push
add
mov
mov
dec
inc
and
jnp
call
jbe
or
or
dec
mov
rol
int3
inc
dec
gs
and
and
add
adc
xchg
add
mov
rcrl
sub
mov
or
call
sarb
cwtl
cmp
mov
cli
add
lods
pop
xor
add
add
movsl
mov
ss
aad
mov
mov
jle
mov
lcall
cld
sti
adc
js
mov
sbb
adc
jno
out
adc
xchg
inc
and
xchg
pop
xor
notb
rol
mov
std
adc
xor
jl
jnp
xor
imull
xchg
repnz
sti
loopne
pop
jmp
movsb
cmp
insl
jp
das
adc
mov
aad
scas
movsb
adc
xor
rcrb
push
sbb
and
dec
push
push
jno
cmpl
loop
in
daa
shlb
xchg
movsl
dec
clc
cmp
mov
sub
pop
pop
jne
popl
je
cmp
xchg
lds
sbb
std
cmp
adc
mov
gs
popf
xorb
mov
push
fdiv
imul
mov
dec
and
loope
test
test
sbb
sub
test
sub
mov
fcomip
sub
inc
mov
mov
fdivrs
rclb
dec
pop
stc
sbb
test
leave
pop
mov
jge
addr16
test
dec
loop
aaa
data16
xchg
pop
sbb
fwait
jo
or
inc
pusha
stos
out
cwtl
push
aas
cmp
data16
and
inc
mov
inc
sub
or
jmp
out
jns
popl
mov
jp
lret
pop
sbb
out
xchg
sbb
jecxz
sahf
jno
cmp
data16
dec
dec
cli
or
add
adcl
outsb
loope
ret
add
mov
sbb
int
sub
mov
daa
dec
lahf
idivl
imul
int
dec
aam
loop
adc
lods
lcall
adc
add
dec
inc
fucom
xchg
lcall
push
jge
fdiv
sub
jae
out
ret
out
dec
and
cvtdq2ps
jl
sub
fidivl
call
sub
xor
pop
jmp
test
icebp
mov
out
mov
popa
clc
fwait
pop
cmp
xor
or
ja
or
push
and
cld
adc
push
add
xor
loopne
repz
jbe
fisubrs
std
or
xchg
cli
adc
xor
pop
movsb
stos
push
repz
jge
sahf
icebp
dec
movsb
test
mov
nop
xchg
test
cmpsb
dec
mov
mov
cmc
pop
jnp
jno
mov
clc
jnp
nop
sbb
repz
aaa
and
xor
xor
in
clc
or
in
and
stos
cmpsl
hlt
addr16
push
das
mov
imul
in
mov
js
mov
ja
jmp
rcll
stos
movsl
sbb
lret
test
lea
sbbl
mov
mov
lods
push
cmc
out
scas
push
clc
cmpsl
movsl
push
in
jae
mov
enter
lds
and
jae
pop
push
pushf
cmpsb
add
fsubl
sbb
and
mov
lret
push
pushf
jmp
enter
sbb
sbb
leave
lods
push
das
pusha
stos
inc
xchg
push
xlat
push
mov
fcoms
mov
inc
inc
jmp
pcmpgtw
inc
inc
sbb
pop
cmp
or
jge
out
loopne
std
ret
mov
inc
and
mov
push
cltd
std
fimuls
xorl
outsb
jns
insl
adc
rcll
add
pop
sub
repz
aaa
and
mov
aas
test
rclb
fs
jge
call
test
rcrb
in
push
cmpsl
dec
loopne
xchg
test
movl
adc
repnz
fwait
addr16
push
push
push
push
xchg
adc
pop
mov
rcrb
add
sahf
rcrl
addb
push
aam
cmp
lock
jnp
xor
notb
arpl
xchg
cmp
movsl
ret
pop
xchg
or
pop
push
movsl
sti
adc
mov
jno
dec
mov
ja
les
sbb
pop
je
clc
jge
insl
push
into
jnp
in
ja
scas
iret
dec
cmpsl
mov
ss
stos
jo
mov
jb
push
sub
aaa
xchg
or
xchg
pop
push
sbbb
out
cltd
pop
shll
loope
xchg
xchg
inc
pop
push
mov
sub
ja
sub
fstl
cmp
cmp
cmp
movsl
mov
mov
mull
insl
inc
scas
arpl
loopne
fidivrs
int
iret
jns
aad
jecxz
inc
gs
ds
jle
mov
sub
scas
es
sub
fisttpl
mov
mov
mov
jbe
sub
sbb
icebp
and
std
cmp
in
push
test
inc
arpl
sarl
divl
pop
loope
stos
adc
or
push
lods
data16
or
pop
loope
mov
out
mov
cmp
lahf
adcl
mov
int3
and
insb
jle
xchg
test
jmp
push
ret
std
fnstsw
cwtl
dec
leave
xor
or
lret
push
fnsave
or
cli
sbb
loopne
ljmp
ficoml
inc
bound
xor
inc
decl
xchg
sbb
shl
pusha
pop
pop
mov
clc
xor
bound
dec
jl
inc
jecxz
sahf
sub
out
stc
roll
popa
fstps
push
out
test
mov
lret
inc
jge
pop
hlt
int3
popf
shrb
inc
out
push
mov
and
and
fs
jb
cmp
adcb
ss
mov
icebp
out
popf
jo
outsb
sub
leave
cwtl
mov
popf
dec
loope
xchg
push
xor
subb
les
sbb
pop
fwait
mov
inc
ret
dec
inc
addl
push
jnp
pop
mov
jbe
pushf
jg
in
sub
dec
sub
imul
xchg
sub
push
nop
daa
std
iret
jb
jne
lock
pop
in
jbe
lds
jo
push
dec
and
xchg
dec
mov
mov
loopne
loopne
lods
inc
shl
sub
or
imul
pop
jbe
fwait
inc
fldenv
mov
inc
pusha
cmp
cmp
push
sub
cmpsb
push
dec
lods
std
repnz
test
pushf
dec
jg
or
dec
insl
out
out
jmp
in
sub
notl
lcall
clc
jne
sub
int3
cltd
test
dec
jnp
stos
inc
jb
cmp
or
xlat
and
mov
cmp
jg
xchg
cltd
dec
out
push
dec
jp
pop
xor
bound
mov
pusha
outsb
aad
fwait
ss
push
clc
or
jb
movsl
insl
sbb
sar
popf
pop
xor
pop
jecxz
popf
jmp
sbb
int
movsb
addr16
mov
lret
jl
aaa
scas
lret
pop
cld
mov
loop
cmpsb
aas
adc
sbb
int
inc
sub
ret
mov
bound
scas
mov
jnp
cmpsl
lods
and
lods
dec
mov
test
cld
sbb
and
push
leave
lods
xchg
push
mov
stc
add
xchg
pop
xchg
rcll
and
pop
sahf
mov
mov
push
mov
lock
lret
lods
jmp
sbb
popf
inc
pause
ret
pop
add
ja
add
ds
dec
and
xor
or
adc
jb
inc
das
pusha
mov
push
out
jns
jl
lcallw
or
pop
pop
outsb
int3
inc
add
xchg
or
add
out
loope
cmc
hlt
mov
push
pop
push
xor
pop
or
jmp
testl
ret
or
or
aad
loopne,pn
pop
jb
test
push
adc
loopne
into
mov
mov
int
repz
int3
sub
mov
cmp
testb
pop
fs
nop
repnz
sbb
test
lret
inc
or
std
lock
aaa
fsubs
or
add
mov
mov
sub
not
cmp
add
shlb
mov
inc
cld
cmc
stc
lret
scas
and
push
and
stos
and
ret
xchg
sti
add
imul
mov
rorb
jnp
push
cmp
add
stos
pop
clc
sarb
shll
sub
add
les
jnp
iret
stos
es
adc
push
push
lds
xor
jb
mov
cmc
mov
ds
flds
push
fsub
add
cmpsl
lds
arpl
std
lods
pop
or
mulb
push
repz
cmp
sbb
xor
jle
stc
lea
pop
xchg
push
loopne
stc
loope
aad
pop
out
and
loopne
add
xchg
fsubrl
dec
ja
push
or
xchg
dec
mov
dec
loope
lret
xor
pop
test
pushf
pop
push
inc
call
into
aam
adc
int
lret
mov
clc
data16
in
popf
ds
popf
shl
in
mov
and
insb
push
adc
xchg
pop
mov
loope
push
loope
mov
dec
arpl
adc
sub
and
leave
neg
inc
pop
adc
mov
cli
lret
movsl
xor
movsl
xor
sub
mov
cli
mov
jbe
nop
xchg
dec
fldenv
mov
cmp
jecxz
je
jno
gs
sahf
dec
filds
pop
mov
movsl
mov
jne
addr16
je
insl
add
inc
jne
mov
aaa
test
mov
xor
aad
sarl
mov
nop
xor
lcall
push
push
fcoml
fmull
cmp
sbbb
pop
dec
add
std
test
mov
pop
add
inc
mov
cwtl
mov
cs
sub
cwtl
xchg
js
lds
imul
xlat
outsb
jnp
or
xchg
jecxz
hlt
lcall
push
clc
xlat
cmp
jbe
sti
mov
mov
adc
sarl
fdivl
mov
or
add
pop
nop
jp
fsubl
xchg
jo
sti
mov
es
cmpl
pop
imul
movsl
js
add
xchg
push
movb
in
fdivs
mov
test
int3
push
gs
lret
pop
xor
leave
enter
sub
pop
popf
bound
into
mov
rclb
data16
mov
xchg
outsl
xchg
push
popf
repz
add
lds
pop
push
add
test
xor
leave
mov
mov
fs
xchg
mov
lods
loope
dec
add
jge
lods
aaa
lea
dec
arpl
test
sub
pop
mov
rol
sub
cmp
jecxz
mov
rorb
testl
je
mov
dec
dec
xchg
loopne
rcrl
shlb
add
mov
cltd
shlb
fildll
push
push
movsb
aas
test
mov
repnz
sub
add
int3
xor
jg
leave
mov
inc
stc
xor
pop
call
jmp
and
pop
inc
fwait
sub
rol
bound
inc
sbb
xchg
and
add
imul
lock
or
fadds
pop
std
mov
rol
cmp
pop
ret
aas
mov
rclb
add
dec
push
add
mov
mov
out
gs
sbb
movsb
mov
gs
mov
lods
xor
push
mov
ror
xor
adc
sub
jno
mov
pop
stos
or
bound
sets
fwait
in
jl
add
jl
cltd
cmc
into
sbb
xchg
mov
cmp
clc
jns
es
ja
add
add
push
andl
push
das
xchg
stos
and
jge
cmp
mov
in
pop
test
out
fwait
xor
cmpsl
rcl
cmc
repz
sub
insl
xchg
or
hlt
or
xor
ja
jns
jns
push
repnz
or
xchg
out
ja
nop
pop
jns
call
cmp
into
xchg
stos
into
dec
dec
inc
arpl
mov
ljmp
pop
por
rcrl
cli
xchg
fildll
mov
xor
xor
adc
cmp
jns
std
aad
mov
xchg
xchg
push
bound
iret
jbe
jne
fcompl
sub
test
fadd
jae
jge
mov
jnp
hlt
nop
mov
sarb
mov
mov
cltd
std
cmpsb
out
push
jecxz
movd
cmp
xor
xchg
ds
pop
lock
in
mov
sti
add
xchg
push
mov
cmc
lds
test
dec
sub
mov
or
stc
or
xor
into
mov
sbb
mov
cwtl
outsl
les
shl
into
lods
jb
xchg
dec
test
cmpsl
decb
jg
lock
sarl
cmpsb
cwtl
pop
mov
sub
ss
mov
cmp
push
int3
jmp
push
ljmp
jno
lret
mov
push
out
aad
xchg
xchg
jns
inc
and
mov
test
pop
aam
sbb
movsb
fidivrs
pop
testb
cmp
out
or
enter
cmpsl
jb
pop
in
fbstp
cmp
cs
and
lea
dec
cltd
or
cwtl
imul
or
test
lcall
push
pop
out
cltd
or
mov
aas
test
data16
ljmp
push
mov
pop
out
cmpsb
or
jns
mov
xor
push
sbbl
or
test
and
ret
outsb
xor
ret
or
call
cmpsl
pop
popf
or
dec
fbstp
fildl
fldl
pop
add
addr16
mov
fadds
hlt
filds
and
test
stos
addr16
es
push
pop
icebp
adc
lods
std
in
mov
stc
xchg
xchg
xchg
sub
push
aad
dec
outsl
scas
jmp
jbe
popf
push
dec
xchg
shrl
ljmp
mov
xor
mov
fidivrl
int
cmp
push
push
mov
loopne
sbb
ds
ss
adcl
dec
mov
and
cmp
rcl
and
fcompl
jne
fldenv
fadds
xor
push
lods
mov
mov
lock
lret
push
mov
idivl
repz
push
adc
jb
mov
push
aam
dec
xchg
inc
pop
adc
mov
jno
adc
push
les
sub
pop
arpl
fwait
dec
into
movsl
loopne
sub
mov
pop
lods
mov
lods
aam
imul
mov
push
or
ljmp
push
repz
fdivrl
mov
cltd
pop
aam
add
xchg
movsb
nop
inc
mov
jmp
dec
and
scas
xchg
push
addr16
lcall
fwait
xor
lahf
xor
inc
loop
aas
cmc
mov
dec
imul
out
das
lods
mov
ljmp
jns
js
pslld
fs
adc
or
xchg
mov
mov
push
imul
mov
imull
mov
push
lods
es
imul
push
mov
loopne
sbb
sbb
fwait
outsb
test
cs
mov
lods
repnz
bound
pop
subb
mov
daa
inc
stc
leave
sahf
inc
data16
lret
ficoml
xchg
mov
add
xor
das
and
xor
loopne
dec
repnz
lock
icebp
hlt
out
pop
cmpsb
rcl
mov
adc
xchg
mov
inc
jmp
push
mov
or
fmull
mov
popa
push
push
inc
faddp
decb
aas
dec
loopne
jne
mov
out
xor
cmpsb
aaa
aaa
push
inc
cli
add
push
scas
inc
test
inc
call
and
pop
xor
push
lods
gs
jb
out
mov
xchg
sti
cwtl
push
aas
cltd
es
add
xorl
adc
cs
add
rcl
sbb
mov
dec
out
xchg
repz
xchg
dec
dec
push
sub
xchg
bnd
test
sahf
jb
push
inc
in
leave
loope
subb
pushf
jle
lds
and
adc
popa
mov
jne
mov
mov
popf
mov
test
mov
clc
push
mov
imul
adc
cmp
xorb
cmpsl
mov
add
mov
in
pusha
mov
lret
xchg
xor
test
and
cmp
jbe
mov
pushf
cmp
les
dec
fsts
mov
outsb
adc
adc
xor
sti
push
mov
sbb
xor
pop
jecxz
shrl
cmc
mov
mov
push
mov
xchg
lret
enter
iret
push
out
inc
sbb
xor
lret
in
cmp
and
jge
adc
mov
lret
fs
push
rcll
into
pop
je
into
movsl
inc
push
in
pop
inc
dec
mov
fwait
pop
push
xchg
ds
les
xchg
cwtl
mov
push
mov
mov
enter
add
aam
hlt
cs
sti
mov
lret
xlat
scas
imul
jb
hlt
adc
xchg
insb
cmp
iret
or
dec
jmp
and
nop
fcoml
fsubrl
xor
cmc
stos
xor
sub
cltd
ret
xchg
mov
push
fiadds
cltd
or
sub
sbb
call
cmp
mov
lcall
mov
push
xchg
jl
stc
arpl
scas
xor
shr
jb
ror
loope
ljmp
add
add
xor
cmpsl
push
lods
inc
push
push
gs
inc
ret
orb
cmp
jecxz
aad
adc
adc
js
mov
and
ss
push
in
xchg
adc
push
repz
pop
aaa
mov
sub
int3
lcall
mov
cmp
push
or
cmpsb
adc
or
sub
add
nop
pop
scas
xchg
push
fsubp
sti
outsl
daa
fst
adc
jb
ss
fildl
adc
xor
push
push
out
adc
xor
inc
xchg
ja
dec
jp
rcrb
jge
or
movsb
sbb
imul
inc
mov
sahf
aaa
dec
cwtl
xor
inc
or
xor
in
pop
cmp
test
xchg
movsb
inc
pop
and
xor
sub
and
mov
imul
popf
stc
ja
sbb
mov
dec
pop
inc
jnp
out
cmpsl
xor
or
jg
pop
int3
fmul
js
xorl
loop
xor
lock
cli
lret
xchg
ljmp
xchg
xchg
dec
inc
fistl
mov
sbb
jl
adc
mov
and
xchg
mov
inc
test
sbb
movsb
push
std
push
insb
loop
sbb
adc
int
out
xor
or
mov
pop
adc
push
shll
shlb
and
ds
in
leave
loop
mov
pop
rorb
movsb
iret
fxch
mov
adc
sub
xchg
mov
imull
movsb
sub
gs
mov
pop
jl
mov
popa
dec
arpl
and
pop
cmpsb
lods
add
outsl
mov
call
adc
or
mov
xor
in
push
fistl
test
inc
jle
inc
push
inc
cwtl
or
pop
imul
adc
rcrb
loop
out
ficoml
cmpsb
std
lds
jns
cmp
mov
testb
scas
mov
or
jmp
sahf
loopne
xchg
or
or
test
xor
out
in
jmp
sub
iret
aam
les
pop
mov
inc
popa
lret
xor
inc
stos
test
hlt
push
repz
pop
cmp
sbb
out
pop
mov
in
xchg
add
imul
mov
jg
xlat
rorb
int
mov
pusha
jle
and
xchg
pop
jo
movswl
jno
pop
aas
jbe
jb
or
in
aas
jg
pop
cmp
sub
pop
test
jmp
into
xor
cmp
jmp
fs
dec
mov
ja
dec
dec
mov
push
outsl
in
cmp
cs
pop
andb
fucomip
in
cmp
push
jmp
xor
nop
mov
mov
adc
addl
cli
fcomi
ret
lret
jg
mov
call
in
out
cmp
out
xchg
cmp
mov
mov
in
outsb
jo
mov
fsts
pop
push
out
in
cmp
push
js
nop
inc
pusha
push
or
jle
pop
mov
push
lahf
fcomi
popl
mov
jnp
arpl
xchg
sahf
push
loop
inc
mov
call
xor
loop
cmpsl
in
and
xor
pop
les
dec
jecxz
sbb
pop
les
insb
cli
and
imul
repnz
cmp
cmpsl
or
xor
sbb
dec
xchg
fnstenv
sub
push
movsl
cmc
jbe
add
jge
push
sub
lods
or
inc
lock
daa
sub
aad
push
addr16
testb
dec
cmp
xor
rcrb
repz
dec
popf
xchg
dec
cmpsb
jge
dec
xor
xlat
cltd
dec
jnp
add
int
loope
loopne
push
jl
add
sti
adc
push
pop
jbe
xor
sbb
and
lods
sbb
mov
xchg
lret
and
mov
jecxz
scas
ret
cltd
jp
mov
jle
mov
fs
xchg
dec
cmp
mov
iret
into
mov
mov
pop
inc
sbb
adc
lahf
xor
fdivp
jmp
mov
jo
push
cli
dec
xor
sub
fadd
fnstcw
sarb
daa
mov
cmpsl
cli
lock
repz
adc
fisttps
cmc
jno
xchg
mov
jmp
daa
cwtl
pop
cli
dec
xor
ficoms
stos
fiadds
rolb
mov
xchg
ljmp
jl
cs
sub
dec
push
mov
push
cli
outsb
push
push
int3
xor
test
push
xor
add
cmp
fildll
cmp
cmp
and
inc
cmp
or
mov
inc
movsb
addr16
mov
repnz
lahf
pop
mov
or
mov
sub
push
lds
mov
or
or
mov
add
addr16
jae
jp
sbbb
pushf
lcall
sbb
aas
out
add
mov
cmp
out
xchg
mov
push
rcrl
xor
inc
dec
arpl
cmp
pop
jmp
sbb
and
test
and
pop
int
fldcw
push
loop
in
jnp
fdiv
inc
dec
or
push
pop
imul
jne
cmp
mov
add
test
or
add
add
dec
mov
push
int
mov
lods
ljmp
cmc
adc
test
cmpsl
clc
and
inc
ss
mov
pop
repz
dec
lahf
pusha
call
push
daa
adc
outsb
int3
cmp
aad
dec
pop
xchg
pop
cmp
and
jnp
and
dec
push
push
subl
mov
ds
neg
inc
dec
xchg
rcl
ret
mov
push
daa
outsl
fcmovb
filds
jg
mov
fldz
lods
int
push
inc
enter
aas
loope
jmp
int3
push
outsb
or
xor
ds
fbstp
ja
in
arpl
push
add
aaa
mov
mov
sbb
xchg
cld
pop
leave
popa
call
mov
gs
cmp
test
ja
stos
les
lods
outsl
repnz
shl
jmp
jbe
lock
inc
shrb
pop
mov
xor
jl
mov
mov
push
xor
dec
add
hlt
xchg
clc
insb
pop
divb
insb
mov
xor
test
push
aam
clc
inc
inc
cmpsb
std
mov
adc
inc
inc
sbb
jb
sub
sbb
inc
sbb
rcrl
and
jae
gs
lret
subb
and
addr16
add
cmp
dec
divb
imul
repnz
scas
fisubrs
jne
adc
adc
fstl
lcall
lret
pop
mov
mov
gs
fs
sbb
cmpl
out
add
fwait
cld
push
cli
xor
jb
rcrb
add
js
xchg
scas
jp
js
push
stos
je
xchg
xor
xchg
push
xchg
mov
xor
jmp
jg
push
adc
inc
aas
fwait
bnd
xchg
or
sbb
pop
shrl
mov
cmp
sub
out
pop
mov
pop
xor
add
stc
xchg
int
ret
sbb
mov
pop
lret
insb
ds
mov
pop
int
out
clc
jmp
fdivl
enter
push
push
pop
fisubrs
mov
pop
arpl
xor
push
sub
xchg
arpl
sbb
scas
pop
adc
popa
arpl
orb
cmc
subb
dec
loopne
loope
stc
adc
ret
pop
shll
mov
loop
int
in
xchg
push
aas
push
or
dec
sahf
sub
or
adc
pop
jno
cmp
sub
mov
insb
push
xchg
xchg
adc
sub
dec
or
cmp
sbb
xlat
dec
pop
mov
xchg
jecxz
jae
or
lcall
in
stos
mov
push
push
mull
fdivrl
shlb
movsl
das
inc
xlat
pop
jp
imul
int
mov
pop
repz
iret
bound
dec
jmp
push
in
aas
push
outsl
das
popf
pop
insb
stos
in
fnstenv
out
lcall
inc
sub
jmp
or
scas
jbe
mov
mov
dec
mov
jp
jl
sbb
mov
lahf
or
and
mov
stos
ja
cmp
jmp
frstor
insb
and
sbb
push
cmp
inc
add
sbb
cwtl
lahf
push
xlat
xor
sarl
bound
sbb
pop
mov
js
cmpsb
insb
arpl
arpl
rorl
push
fldt
fsubrl
jg
stos
fstps
data16
jno
sub
cmp
stos
ret
imul
cld
push
and
test
int3
fildll
scas
pusha
cmp
int3
shll
data16
fwait
enter
adc
push
and
cmpsb
cmp
pushf
push
mov
lods
fildl
pop
cmp
loope
ss
inc
ffree
ficoml
xchg
mov
dec
mov
xchg
xor
arpl
inc
mov
dec
enter
pop
test
mov
not
call
xlat
mov
mov
push
aas
pop
push
cmpsl
sbb
inc
imul
leave
test
inc
mov
js
jae
dec
in
test
xchg
insb
fnstsw
pop
and
in
push
das
adc
lret
or
aaa
dec
push
pop
xchg
jnp
xor
dec
lock
cmpsl
cmp
fmuls
pop
outsl
cmp
out
pop
cmp
ds
jae
push
rolb
mov
sbb
mov
and
sub
or
mov
push
mov
subl
dec
subl
mov
dec
dec
xor
dec
cld
dec
daa
or
pusha
cmp
sbb
cmp
or
repz
gs
cmpsb
ss
adc
mov
xor
dec
arpl
jl
sub
imul
mov
and
leave
ss
push
mov
sar
call
imul
fadds
push
inc
stc
jle
lds
xchg
inc
shlb
adc
dec
cld
stos
inc
faddl
xchg
push
mov
ret
out
jns
in
cmp
push
add
mov
dec
shlb
xchg
xor
pop
xlat
gs
cmp
out
lret
fucomp
xchg
shr
and
pop
sbb
lcall
and
mov
xlat
sub
std
mov
mul
xchg
rcrb
fidivrs
jae
dec
ffreep
xchg
gs
xchg
dec
dec
sti
inc
pop
mov
cmp
mov
xlat
mov
mov
xor
jae
dec
leave
mov
pop
dec
fcompl
lahf
sbb
mov
in
adc
cmp
clc
test
jno
and
pop
dec
mov
adc
shlb
sub
lods
movntps
aas
fdivp
mov
hlt
shll
pop
push
std
push
shrb
push
repnz
inc
pusha
cs
rcrb
add
filds
jle
adc
xchg
pop
les
xchg
cmp
outsb
dec
and
lods
sbb
sbb
cwtl
jle
pop
and
xchg
dec
in
ja
das
xor
bound
into
repz
jne
mov
call
inc
sarb
mov
adc
fnstsw
sbb
mov
lods
mov
push
push
mov
mov
lock
and
xor
xchg
pushf
xchg
mov
arpl
cmpsl
sbb
dec
push
mov
jae
sub
test
dec
les
cmp
mov
pop
hlt
das
jp
xor
push
jnp
andl
xchg
push
outsb
lret
rcl
jl
je
loopne
adc
xor
push
cld
push
inc
outsl
rorl
jl
cli
xchg
xchg
dec
in
push
jl
sbb
adc
je
or
xchg
outsl
scas
cltd
daa
cmp
adc
negl
orb
pop
ja
sarb
ds
and
adc
scas
push
loop
nop
xor
cld
jne
xor
and
xor
lds
and
push
popa
test
icebp
sbb
aas
je
sbb
orl
cmp
xchg
lahf
mov
es
insb
sub
xlat
lea
cmp
imul
into
or
pop
mov
shrb
sbb
xor
xor
dec
dec
mov
cmp
inc
ret
loop
rcrb
cmpsl
ds
das
fsts
repnz
xlat
inc
popa
sbb
out
popa
fs
sbbb
push
lock
mov
cmp
and
test
frstor
mov
inc
or
cmp
pop
nop
shlb
jb
sbb
loope
add
jp
enter
movsl
sub
mov
data16
ds
xchg
mov
push
sbb
mov
test
sub
and
cmp
pop
sbb
jae
lea
sub
mov
std
mov
das
sti
or
and
dec
loop
int
fnsave
push
cld
gs
repz
in
clc
aam
jp
sti
ds
jmp
dec
dec
jmp
sub
lds
ret
push
adc
push
mov
std
xchg
jno
jmp
aaa
cmp
pop
adc
idivb
or
shll
add
lds
sti
jg
aaa
scas
mov
xor
mov
inc
ljmp
loopne
je
repz
inc
addr16
xor
movsl
sbb
or
sbb
sub
sbb
bound
xchg
xchg
pop
test
cld
loope
lea
fdivrl
ror
stc
pushf
das
ficoml
sbb
fisubl
add
and
cmp
dec
data16
push
mov
repz
push
cmc
or
mov
mov
mov
xor
mov
int3
pop
dec
andl
addr16
inc
pop
in
jp
rorl
loope
inc
lcall
mov
jb
xchg
movsb
jl
imul
and
push
cmp
enter
mov
testl
push
mov
fidivl
ss
in
test
sub
jecxz
idivb
xchg
movsb
cli
pop
fbld
inc
push
les
cmpl
shr
dec
cmpsb
jge
xor
mov
fcomip
dec
xchg
dec
mov
jg
stc
push
loopne
xchg
push
add
fwait
jb
inc
push
nop
mov
lret
inc
fistpll
jnp
jecxz
shlb
xor
mov
xchg
mov
adc
out
jo
sahf
fwait
pop
out
les
fadd
jo
stos
sub
and
add
imul
repnz
push
js
xor
and
push
repz
insb
sub
pusha
add
repnz
pusha
pushf
fldl
mov
shl
mov
addr16
js
add
std
mov
xor
in
out
lea
lret
popa
shrd
or
push
psubq
xor
inc
outsl
jns
dec
jno
not
mov
or
test
subl
fs
xor
mov
in
cmpsl
inc
xchg
pop
jb
outsl
popa
imul
xchg
test
lret
cmp
cwtl
jnp
jle
mov
cmp
inc
fnstenv
insb
jle
push
fcmovne
adc
pop
pop
xor
int3
xchg
xchg
adc
test
nopl
outsl
daa
mov
shll
xchg
sahf
mov
test
call
out
test
lret
out
dec
jge
pop
mov
cmp
clc
mov
mov
lret
movsl
movsl
push
das
xchg
repnz
data16
pop
dec
das
cmp
scas
inc
pop
push
pop
mov
imul
jg
ss
outsl
add
sbb
fistps
push
jbe
loope
shr
cld
dec
repnz
cwtl
or
xchg
iret
xchg
mov
lret
insb
addl
pop
mov
inc
into
stos
sub
lods
test
ret
cmpsl
in
xchg
addl
push
cltd
sbb
aad
push
in
mov
cmc
lret
fidivl
or
lret
jne
iret
addb
jno
frstor
nop
dec
mov
pop
pop
xor
imul
pop
mov
cmc
lea
jge
mov
xchg
mov
sub
xlat
jmp
adc
cmpsb
cmp
mov
add
dec
xchg
repz
rcl
scas
mov
mov
call
mov
push
pop
push
fidivl
pusha
xchg
and
adc
es
inc
and
sbb
xor
xchg
add
and
sahf
mov
pop
fdivp
push
cmpsb
int3
sti
xchg
pop
ss
mov
xchg
sti
mov
xlat
mov
dec
mov
mov
and
jg
lods
and
cltd
mov
fbld
adc
jmp
loopne
repnz
adc
xchg
jns
enter
push
sub
xchg
sbb
mov
and
in
xor
adc
push
mov
imul
sub
andl
sbb
pop
fwait
adc
fbstp
nop
daa
lahf
sar
cmp
sub
test
xor
xor
adc
xor
push
cmp
push
cmc
jmp
mov
push
mov
pop
pop
jae
ss
cmp
cmp
mov
loope
sbb
xchg
fisttpll
cmp
or
jns
out
test
mov
subb
jno
or
movsb
dec
pusha
aaa
lock
out
jge
adc
imul
jns
pop
js
in
mov
fs
pop
daa
xor
hlt
mov
jge
mov
test
rorb
fs
mov
rcl
in
pop
jo
mov
mov
jbe
ds
mov
cwtl
test
mov
lds
leave
mov
lods
sahf
imul
movb
or
mov
jne
jle
inc
int3
pop
sbb
dec
dec
lfs
dec
or
xchg
xor
sub
call
or
push
push
sahf
mov
ret
jns
mov
pop
loope
das
mov
sbb
mov
xchg
imul
aad
bound
lret
dec
aad
add
xor
xor
or
insl
mov
popf
in
int
xor
test
or
dec
ret
mov
imul
cmpsl
and
popf
bound
adc
mov
call
out
fmull
ja
subb
or
pop
ds
nop
pop
mov
sbb
add
js
and
aam
mov
pop
repnz
xor
ficoms
jne
cmp
shrb
stos
inc
and
jne
mov
xchg
xor
adc
push
js
xchg
ds
es
push
push
dec
pop
cmp
es
out
loope
cltd
sub
stos
xor
or
inc
dec
data16
movsb
stos
dec
scas
shl
jg
bound
js
mov
lcall
ljmp
outsl
adc
imul
adc
mov
mov
mov
rcrl
mov
cld
xchg
or
cmp
popl
jge
in
fiaddl
mov
dec
ja
jle
mov
xchg
mov
jmp
dec
fsubs
gs
test
sbb
ret
push
or
into
pop
out
inc
mov
push
adc
mov
push
test
cwtl
cmp
adc
mov
mov
xlat
loope
outsb
jl
into
in
jbe
shl
and
xchg
mov
push
inc
out
inc
jo
andb
and
and
dec
cmp
inc
sub
int
mov
inc
adc
or
gs
jne
dec
ss
insl
mov
jmp
cmp
iret
mov
mov
repnz
mov
adc
sub
lea
dec
mov
push
fld
pop
iret
gs
fchs
testl
and
add
icebp
xchg
andb
pop
lods
test
mov
lcall
mov
repnz
push
jmp
mov
subl
cmp
mov
iret
sarl
out
shl
les
cld
inc
dec
jb
inc
enter
in
movsb
out
xchg
jg
testb
cmpsl
xor
sbb
add
pop
cmp
leave
jns
mov
popa
in
mov
sbb
xor
andb
imul
mov
xchg
mov
xor
popa
clc
into
imul
loopne
jg
sbb
loopne
mov
xchg
divl
outsl
push
push
mov
cld
fwait
pop
adc
stos
into
xchg
xchg
add
xchg
add
mov
fsubl
jbe
scas
icebp
xor
push
push
push
out
xchg
mov
or
sub
movsb
out
sbb
adc
inc
test
jns
int3
in
pop
or
repnz
mov
cwtl
scas
dec
mov
cmc
repnz
lods
adc
adc
pop
and
pop
dec
pop
out
leave
rcl
push
sbb
subb
sbb
lret
stos
in
fdiv
lcall
lahf
mov
insl
fistps
in
fwait
mov
adc
mov
ja
xor
lods
or
xor
mov
dec
movsl
jb
mov
fnstsw
imul
sbb
mov
outsl
jno
jmp
cmpsb
pusha
sbb
test
les
out
lea
fidivrl
cmpsl
sbb
pop
pop
mov
test
out
xchg
aad
out
cld
push
out
push
sub
imull
addr16
push
mov
push
pop
mov
test
test
push
popf
pop
insl
ret
mov
loop
popa
mov
js
add
out
enter
push
xchg
fisttpl
das
pop
xchg
push
xor
push
push
call
les
lock
das
loope
add
xchg
mov
pop
into
mov
rcrl
add
dec
movsl
nop
in
bound
pushf
dec
push
push
mov
pop
cmp
movsl
pop
inc
cwtl
or
fistpll
adc
add
mov
sub
inc
loope
add
sub
mov
sub
push
inc
and
adcl
fdivs
in
pop
jno
inc
add
mov
mul
push
pop
cmp
cs
call
popf
push
daa
mov
testb
inc
pushf
cmp
mov
xchg
gs
call
or
stc
fdivs
movsb
loope
xchg
aad
fisttpl
repnz
stos
jg
cmpsb
in
out
xchg
nop
jp
hlt
rcl
mov
sbb
iret
pop
dec
cmp
xor
shr
addl
adc
jmp
mov
xor
gs
pop
sbb
jnp
repz
loope
iret
add
in
cli
sbb
outsb
jl
mov
push
jmp
out
mov
pusha
adc
sub
sahf
inc
mov
push
push
es
ret
xchg
out
mov
arpl
mov
popa
inc
dec
sahf
nop
stos
mov
clc
int
cmp
icebp
adc
jbe
jb
fistpl
gs
in
dec
cwtl
xor
pop
mov
in
jge
es
sahf
cmp
fwait
or
inc
mov
pop
sub
iret
dec
repnz
loop
lods
lret
je
roll
in
inc
leave
add
mov
rcr
push
lods
mov
les
and
out
jp
add
cmp
inc
lcall
xor
ljmp
stos
movsb
mov
mov
adc
data16
jbe
aas
jbe
mov
insb
shrl
sbb
das
push
add
nop
sub
or
shrl
inc
push
mov
fs
xchg
xchg
out
mov
or
add
or
and
dec
dec
and
cmp
in
or
adcl
mov
mov
pop
dec
jecxz
ljmp
jno
push
mov
sbb
pop
scas
xchg
and
rcrb
and
push
and
ss
mov
call
lds
dec
mov
call
add
mov
xor
fcoms
push
cmpb
imul
aaa
sti
sbb
jae
inc
jg
fdivp
or
pcmpgtd
das
sub
ret
mov
daa
dec
sbbl
sub
repz
push
inc
pop
mov
filds
cmpsl
cmc
cld
xchg
icebp
mov
pop
add
notl
outsb
push
sub
shlb
ja
sub
mov
sti
mov
jbe
fistpl
shlb
pop
pusha
aam
mov
das
adc
fadds
sbb
sbb
sbb
sbb
mov
out
stos
mov
loopne
push
push
pop
mov
pushf
shrl
cmp
rcrb
push
push
in
add
xor
shr
dec
inc
push
lds
rorb
xchg
push
stos
sarl
jp
jae
cltd
xor
inc
clc
ret
loopne
test
xchg
hlt
xor
insb
push
xorb
je
sbb
nop
lahf
jmp
out
cmp
call
ret
dec
push
adc
jne
out
sti
push
fldenv
xor
test
dec
mov
fldenv
add
sbbb
jge
xor
bound
ljmp
mov
mov
lea
rclb
nop
add
fiadds
push
adc
inc
movsb
sub
pop
xchg
mov
dec
sbb
shll
push
push
inc
fsubrl
xchg
lods
repz
mov
imul
jno
lahf
sub
xchg
mov
call
fsubs
mov
fcmovne
aad
sti
inc
jb
je
scas
cmc
sbb
test
push
jg
sbb
ljmp
mov
pushf
test
fsubrs
mov
shlb
movsl
mov
shrb
gs
dec
loop
push
add
sub
das
mov
and
test
jecxz
inc
push
lea
js
or
fxch
popf
cmc
loop
cmp
lret
push
out
adc
mov
jae
mov
pop
jns
lret
lods
sbb
scas
jno
in
sbb
push
dec
cmp
add
out
and
and
lcall
aaa
daa
push
loope
lock
stos
add
ja
jns
ficoms
test
adc
lds
xor
jle
lea
add
push
test
daa
xchg
testl
cmpl
jge
cmp
push
jo
notl
cmpb
into
xchg
fldt
xor
add
je
popa
xchg
sbb
enter
dec
fs
jne
xor
sbb
popf
xor
and
mulb
daa
adc
imul
sbb
dec
xchg
cwtl
shl
movb
pop
in
out
adc
and
loop
cs
int3
loopne
mov
out
mov
jge
bound
mov
push
xor
addr16
fcomip
xor
adc
mov
fldz
fimull
mov
fs
add
and
test
inc
stc
push
sub
bound
mov
mov
inc
dec
lahf
stos
repz
les
rcll
std
sub
das
xlat
outsb
sbb
push
adc
push
lods
mov
push
jo
xor
sbb
outsb
push
lods
fidivl
jg
pop
sub
push
js
pop
out
pop
in
sti
mov
sti
inc
mov
pop
cmpsl
ds
jae
aaa
arpl
loope
and
and
and
pop
out
cld
mov
imul
xor
aad
xchg
daa
popa
test
scas
sub
xor
cmp
out
xor
iret
xchg
in
ret
inc
rcrl
xor
dec
ffree
adc
mov
sub
sub
inc
je
push
ds
insl
jo
mov
cmpsl
loope
pop
mov
ret
hlt
jg
dec
mov
add
dec
dec
or
imul
add
dec
lds
lahf
mov
dec
pop
outsl
aad
mov
int3
jne
push
roll
sti
stc
imul
fwait
ret
dec
mov
add
mov
test
fnstenv
movsl
cmp
fmuls
pop
inc
sbb
push
lods
sbb
jb
movsl
jg
fwait
repz
test
mov
mov
cmpb
add
popa
pushf
fidivl
adcb
test
in
cmp
lahf
gs
ret
push
int
mov
push
adc
rcr
mov
push
jp
pop
fcmovnbe
jmp
or
adc
ficoml
sub
ljmp
mov
pop
push
inc
push
int
push
mov
xchg
and
popf
fsubrl
in
test
mov
xchg
cwtl
add
mov
cmp
pop
cmp
xor
fidivl
pop
mov
fsubl
xchg
fwait
add
mov
out
test
outsb
dec
jle
arpl
inc
sahf
mov
addb
shrb
imul
arpl
in
mov
movsl
cld
adc
in
mov
movsl
sub
xor
cmc
stos
jmp
xchg
gs
std
test
test
int
cs
pop
pusha
cmpb
loope
pop
cmc
rolb
jns
es
or
jne
mov
out
pop
movsl
inc
pop
ret
fbld
mov
xchg
test
test
jl
jle
bound
decb
imul
jg
pop
sub
lock
push
mov
sti
or
mov
lahf
sub
shl
sbb
into
popa
xor
mov
aam
sbb
pop
jno
add
xchg
push
cmp
mov
jge
mov
aaa
sbb
mov
pop
jbe
xchg
fs
loop
mov
add
sbb
pop
or
daa
inc
dec
jo
das
push
aad
add
xchg
test
and
push
and
mov
sbbb
in
mov
push
sbb
push
outsl
rolb
sbb
add
adc
shll
addr16
inc
stos
repz
mov
inc
fsts
rcrl
jp
mov
dec
imul
push
shrl
mov
scas
rcrl
in
clc
push
daa
xor
dec
or
icebp
lahf
stos
nop
mov
int
fldenv
js
lds
push
xor
add
push
cmp
inc
insl
mov
cmp
and
idiv
rcr
xor
ja
push
mov
and
inc
inc
xor
xchg
insl
cmc
inc
enter
mov
inc
add
pop
cwtl
pop
lea
jbe
daa
mov
and
push
int3
mov
cmovne
dec
adc
cmp
sub
lds
sub
fs
add
subl
sahf
or
and
push
outsb
xor
mov
and
mov
push
pop
movsb
roll
push
xchg
sub
test
sub
jmp
pop
imul
mov
lret
push
push
icebp
sbb
fstpt
ds
mov
jecxz
fstl
mov
xor
in
stos
fwait
mov
cmpl
adc
or
or
sbb
adc
aam
mov
cmp
mov
xchg
adc
adc
jne
jb
movb
test
sub
aad
addr16
or
imul
mov
je
jbe
clc
xchg
fwait
sti
push
pop
mov
int
bound
movsb
adc
ficompl
sti
dec
loope
sti
call
xchg
pop
aad
movsl
xorb
cmpsb
mov
imul
jo
cmp
xchg
xlat
out
pop
push
sahf
pusha
or
test
rcrb
rclb
outsb
pop
mov
mov
in
scas
push
jb
jmp
insl
mov
adc
popf
insl
jge
mov
mov
stos
mov
insl
imul
addl
mov
inc
fadds
outsb
lret
sbb
dec
jo
and
sub
mov
cmp
in
negb
dec
sahf
push
hlt
sbb
sub
pop
je
divl
pushf
ja
mov
in
mov
sbb
dec
enter
cmpsb
ret
mov
int3
pop
in
or
inc
enter
mov
mov
test
rolb
sub
pop
testb
cmp
dec
loope
pop
xchg
hlt
mov
inc
or
fldt
mov
pop
add
sub
lods
pop
repz
out
addr16
dec
push
cmp
fs
cmp
xchg
jbe
fwait
jmp
dec
push
push
dec
fisubrs
sbbl
sbb
mov
lods
and
hlt
inc
sbb
mov
test
mov
mov
inc
mov
cmp
subb
push
rorb
lods
xor
xchg
sub
push
scas
enter
ja
mov
mov
mov
lret
lret
addr16
sub
adc
sti
hlt
mov
jns
xchg
pop
xlat
clc
vpshab
mov
adc
les
xlat
jle
lds
clc
cltd
and
pop
jno
cmp
jge
in
add
outsl
mov
inc
and
pushf
sub
hlt
jbe
dec
sub
push
arpl
int
enter
in
in
dec
xor
push
lods
xchg
sub
xchg
mov
iret
add
movsl
mov
push
inc
add
dec
dec
xor
jg
out
mov
adc
or
dec
imul
nop
cmp
adc
cli
shll
xchg
loop
adc
aam
je
cmp
out
pop
lods
xchg
xlat
xor
and
and
sub
sbb
sub
nop
pop
sbb
adc
pop
jno
add
imul
cwtl
test
ret
fldpi
ret
test
pop
in
xchg
out
add
cmp
xor
pusha
loopne
fmul
mov
aam
mov
add
pop
pop
xrelease
xor
mov
or
pop
inc
movsl
adc
dec
cltd
or
push
push
popa
push
inc
xor
ja
sub
or
mov
out
or
mov
jg
dec
cmpsb
xchg
jmp
imul
sbb
imul
shl
mov
cmc
mov
mov
cmp
push
clc
call
addb
in
fdivl
pop
andl
outsl
xchg
sahf
rcr
jno
xchg
rol
mov
and
scas
add
mov
fdivrp
inc
ret
push
cmpsb
add
sbb
adcb
cmpsb
dec
ja
jb
aam
dec
dec
add
cmp
loop
movsl
push
mov
xor
inc
bound
jg
xor
mov
in
pop
push
mov
imull
push
cmp
xor
dec
push
mov
and
outsl
xor
dec
mull
imul
sar
repnz
mov
int
push
ficoms
and
leave
cmpsl
inc
dec
dec
ljmp
fsubs
adc
mov
push
lcall
scas
mov
mov
repz
ret
mov
mov
pop
cmp
in
aas
add
push
mov
sbb
test
pmuludq
bound
xor
lret
sbb
arpl
add
mov
imul
inc
dec
sub
or
pop
ret
jnp
cwtl
mov
push
cli
push
sahf
mov
xchg
xor
pop
out
xchg
out
gs
cwtl
lods
and
insb
jo
push
sbb
sti
pop
xor
push
mov
push
pop
mov
xchg
ljmp
hlt
xchg
flds
mov
call
and
scas
push
dec
dec
frstor
out
cmp
imul
cmpb
add
and
sbb
das
lods
das
mov
jp
std
push
mov
sbb
mov
jmp
test
mov
daa
jg
out
stc
lret
mov
xchg
pop
cmp
lea
cmp
shll
push
mov
push
adc
mov
pop
repnz
cmp
jle
repz
inc
fs
mov
out
sbb
clc
pop
adc
adc
push
add
sub
std
cltd
sbb
inc
jb
out
rol
inc
into
lahf
push
push
inc
andl
sbb
inc
push
xchg
add
cmpsb
aaa
pusha
inc
out
jp
jl
inc
leave
int
test
mov
jge
sub
xchg
andl
push
or
lahf
sbb
loop
lcall
jle
mov
std
hlt
xor
xchg
mov
push
outsl
xlat
pop
pop
jecxz
shlb
jns
loopne
adcb
imul
int3
outsl
adc
gs
cmpsl
loop
test
mov
test
mov
lcall
cmpb
adc
sti
mov
dec
mov
mov
outsl
cmp
fs
mov
jge
gs
adc
int3
jmp
ljmp
subl
adc
jg
fidivs
mov
dec
push
in
jnp
inc
test
adc
add
jne
push
imul
jno
pusha
je
push
mov
sub
cmp
enter
sub
pop
push
mov
int
or
in
push
add
negb
add
and
rsqrtps
pop
push
or
out
adc
lea
movsb
jle
rcrl
mov
std
xchg
not
add
icebp
push
sahf
repz
mov
dec
pop
jle
leave
mov
or
sbb
mov
lret
push
and
stos
dec
cmp
mov
ficompl
mov
jne
adc
xchg
outsb
std
adc
mov
mov
popf
stc
xchg
stos
pusha
andb
lea
sbbb
or
sub
into
jnp
add
xor
iret
fxch
loope
fs
and
aaa
scas
shrl
cmp
pop
add
js
push
es
sub
push
xchg
or
aam
idiv
xchg
addr16
inc
fcmove
xchg
pop
xor
popa
fsub
inc
cs
incl
and
mov
subl
xor
das
push
push
add
jge
push
push
xor
adc
and
mov
jmp
xor
push
mov
shl
adc
sbb
mov
sub
sbb
adc
and
js,pn
push
call
sub
in
movsb
sahf
jg
pop
shrb
pop
into
loopne
jle
cmp
sub
mov
xchg
xor
dec
in
cwtl
jl
movsl
popa
imul
lds
cmpb
jnp
mov
xchg
mov
mov
add
test
pop
xchg
jp
int
aas
in
jno
std
xchg
mov
loopne
sub
and
sub
movsb
pop
addr16
lret
add
jmp
sub
or
or
inc
std
push
push
pushf
push
adc
push
call
out
sbb
mov
jecxz
dec
loop
add
push
mov
repz
mov
frstpm(287
add
adcb
pop
stos
pop
lds
or
mov
jb
fisubl
mov
and
and
inc
push
push
test
sub
push
cld
jg
mov
xchg
mov
lahf
pusha
lods
jns
mov
repnz
inc
inc
xlat
push
mov
ljmp
arpl
lds
pop
mov
popa
fisttpll
pop
cmp
scas
insl
inc
mov
test
pop
divb
rolb
int
sub
pop
out
dec
fimuls
dec
call
jle
adc
cli
or
push
lds
inc
pop
sub
sarl
and
clc
jmp
les
cmp
mov
mov
pop
lods
ret
pusha
inc
xchg
xor
or
mov
lea
cmp
stos
nop
pusha
ja
adc
scas
inc
mov
jl
in
sbb
add
sbbl
ljmp
mov
insl
inc
cwtl
lods
mov
shrl
int
out
decb
push
mov
fcomps
mov
add
aaa
into
sbb
sbb
call
sub
mov
movsb
arpl
push
popa
daa
cmp
dec
mov
nop
out
lods
jmp
xchg
call
pop
imul
mov
rcrb
xor
mov
out
in
andl
mov
push
mov
js
xor
in
mov
aam
adc
addr16
pop
fsubs
shr
jae
in
jns
mov
or
jl
sarl
lret
lret
cmp
dec
push
adc
mov
mov
aad
sbb
xor
push
popf
jbe
jle
jmp
dec
rorl
hlt
xchg
xchg
filds
in
cli
or
pushf
and
add
aad
addr16
sti
push
dec
xchg
add
dec
sahf
dec
in
mov
loopne
xor
ja
push
dec
sbb
inc
and
ss
xchg
rcr
ja
mov
sub
imulb
mov
pop
out
mov
mov
fmull
out
mov
popa
inc
push
xchg
movsl
jg
out
pop
testb
inc
ret
push
pop
loop
enter
xchg
adc
mov
push
es
adc
add
pop
mov
stc
popf
sahf
sbb
xchg
sbb
lds
sub
jbe
aas
pushf
bound
dec
mov
cs
inc
mov
lock
dec
sbb
mov
imul
jae
scas
pop
or
mov
ret
out
mov
jge
xchg
rclb
jno
mov
mov
adc
add
stc
popa
inc
addr16
push
cltd
inc
xor
lcall
cmpsb
subb
and
mov
mov
add
iret
fisttpl
hlt
xor
jbe
adc
cmp
fwait
and
add
xchg
lret
inc
xchg
into
faddp
and
aam
pop
jae
stos
inc
mov
dec
mov
sbb
or
mov
mov
sarl
jns
aas
mov
lret
mov
adc
xchg
test
and
notb
rclb
sub
and
adc
lea
dec
mov
mov
jp
ds
adc
inc
loopne
gs
daa
mov
pop
jbe
jns
jb
sub
pop
rcrl
dec
lods
push
cmp
ljmp
adc
xor
enter
and
xchg
push
bound
fwait
shrl
sbb
aas
and
arpl
shll
popf
push
xorl
jmp
cmp
xchg
mov
pop
sub
jnp
mov
xchg
out
pop
add
es
pusha
and
jbe
ja
jg
jecxz
sub
mov
adc
std
das
clc
movsl
jmp
test
inc
packsswb
inc
xchg
out
scas
cbtw
test
rclb
das
mov
mov
adc
jb
maxps
pop
lcall
fbstp
bound
or
inc
les
aaa
mov
jns
loopne
repz
jns
cmp
pusha
mov
sub
pusha
or
lea
scas
xlat
aam
stc
dec
cmp
mov
out
sbbl
das
jns
sbb
movzwl
mov
mov
sub
mov
sahf
into
push
add
or
imul
inc
addl
sbb
mov
lds
inc
sbb
dec
add
mov
jge
std
shl
cs
add
scas
push
cmp
out
ss
cmp
imul
push
repnz
dec
aad
cs
sahf
add
jle
fwait
inc
jno
mov
pop
stos
xchg
sbb
xchg
mov
ficompl
jl
stos
xchg
pop
es
or
std
inc
and
clc
push
loopne
iret
push
xchg
push
jo
jecxz
aad
das
nop
push
cmp
insl
stos
popf
je
or
faddp
adc
adc
in
mov
sbb
test
xor
loopne
repnz
push
and
shll
clc
lcall
adc
or
sub
mov
lods
cmp
sar
je
xchg
in
and
cmp
cmp
lea
xchg
push
test
pop
xor
xchg
jo
ret
push
dec
sbb
xor
or
sbb
mov
xchg
fistpll
movsb
jns
repnz
mov
xchg
add
lods
xchg
addr16
fdivs
ja
push
out
arpl
repz
sbb
rcl
out
jo
sub
mov
fdivs
cmp
pop
pushf
rcll
data16
jbe
sub
or
cmp
push
aam
lret
fwait
xchg
mov
scas
stos
xchg
push
lds
js,pn
pusha
shll
loop
jmp
cmp
hlt
jp
mov
rcrb
xor
and
sub
fucomp
sbb
in
adc
inc
repnz
xchg
jae
lret
call
mov
outsl
notl
lods
call
lcall
sbb
ja
rcrl
cmp
and
das
clc
divb
std
xor
mov
inc
rclb
sbb
or
outsl
fisubl
test
adc
ljmp
sbb
inc
andb
mov
push
repnz
daa
enter
call
pop
xor
jmp
mov
stos
and
push
pop
jo
mov
dec
cltd
mov
std
or
mov
arpl
imul
xor
xchg
jl
dec
cmpsb
int
fs
inc
push
inc
dec
or
add
pop
dec
pop
xchg
xor
pop
or
cmpsl
xor
fsubs
lahf
xchg
mov
inc
or
es
test
lea
adc
or
and
test
pop
xor
divb
addr16
push
es
push
push
mov
pop
inc
gs
negl
test
movsb
cmp
pop
inc
popf
stos
loop
jne
inc
push
xchg
push
inc
mov
mov
lret
push
xchg
cmp
lret
cmp
mov
mov
mov
jle
out
mov
xor
or
scas
xchg
dec
xchg
lods
lcall
or
orl
aas
dec
xchg
jl
mov
adc
aam
push
std
adc
mov
push
or
mov
mov
and
fistpll
push
lods
rclb
fs
aas
aad
rorl
call
or
ret
mov
push
xlat
insb
fucomi
arpl
fidivl
std
scas
adcb
or
sub
mov
sub
nop
clc
mov
ret
sub
pop
dec
stos
sahf
in
adc
shrb
xor
data16
call
imul
lea
lret
xchg
in
stos
pushf
pop
stc
popf
xchg
mov
jmp
jns
xchg
mov
std
pop
imul
lods
jecxz
mov
sti
mov
add
push
notb
loop
or
leave
pusha
push
jns
pushf
scas
lods
out
enter
adc
inc
fs
gs
adc
stos
xchg
into
ss
out
xor
outsb
dec
dec
mov
data16
rorb
jnp
loope
iret
fwait
js
int3
cltd
adc
cltd
out
sbb
xchg
sbb
ljmp
sub
xchg
sub
sbb
arpl
mov
lock
push
into
xor
inc
imul
in
and
adc
or
jp
out
mov
fdivrl
pop
enter
cltd
std
xor
jnp
in
mov
cwtl
pop
inc
sahf
add
sub
cmpsl
sbb
pusha
idivl
fyl2x
movsl
fwait
jle
pop
ret
nop
lods
shlb
jmp
leave
in
sti
mov
mov
test
mov
movsl
cld
dec
jg
test
scas
mov
andl
cltd
outsb
jl
fwait
cmp
mov
stc
lds
lahf
adc
cmp
in
shll
lcall
cmp
loope
or
cmpsl
xor
xchg
addl
pop
int
stos
or
test
shl
cld
lcall
in
jp
clc
stos
in
cmp
lcall
adcl
push
aam
loopne
rorb
jecxz
lret
imull
sub
mov
and
push
aad
xor
jae
ljmp
push
aas
push
popf
outsb
inc
pop
mov
and
scas
pop
fiadds
xchg
addr16
fisubs
inc
mov
ja
repz
sub
xchg
jno
out
shrl
sbb
lahf
jl
mov
mov
jle
in
pop
dec
in
add
xor
test
imul
adc
cmp
pop
mov
pusha
dec
rcr
cmp
insb
pushf
lods
arpl
cmp
cmp
adc
xchg
or
xchg
cmp
adc
mov
mov
mov
daa
or
jb
mov
sub
jnp
or
xor
mov
or
into
jmp
test
inc
push
leave
jno
jnp
mov
les
dec
test
pop
mov
js
shrb
in
push
ja
orb
lods
inc
push
jl
sarl
or
sbb
lock
ret
mov
push
adc
rep
cmp
adc
gs
and
cld
aas
andb
push
push
inc
fsubp
cmc
fucomip
out
shll
add
mov
cmc
pop
mov
sti
sub
ficoml
xchg
cmp
push
aas
imul
outsb
jno
cld
push
push
loopne
in
dec
stc
jmp
dec
fidivrs
push
icebp
ds
lods
pop
mov
ret
mov
mov
fstpt
sub
xchg
and
xchg
imul
pop
jmp
push
stos
xor
enter
jge
rcrb
or
xchg
sub
loop
sub
lods
jo
xchg
pop
incl
scas
mov
and
dec
vmread
lahf
rclb
cwtl
mov
jl
mov
outsl
adc
je
inc
outsl
xchg
mov
mov
lods
outsb
cmpl
mov
dec
pop
cmp
or
fs
cld
pop
clc
jmp
cmp
jge
subb
push
mov
jg
daa
imul
mov
stc
cmp
pop
cltd
std
aam
pop
outsl
lcall
stc
xchg
ret
dec
stc
in
aaa
mov
jle
xlat
insb
mov
fdiv
adc
jecxz
or
loopne
inc
pcmpeqb
outsb
xor
mov
lods
adc
cs
xchg
push
out
ficomps
aaa
cmp
lock
loope
in
dec
pushf
mov
sbb
mov
test
add
mov
or
mov
xor
rclb
dec
inc
fnstenv
cmpsl
add
lea
adc
xor
dec
mov
cmc
loope
pop
cmp
adc
jg
push
xor
xchg
fisubs
cmp
xor
out
dec
mov
jb
imul
jns
and
push
xlat
xor
mov
loope
ds
test
inc
pop
loop
xlat
adc
movsl
sub
loopne
jne
mov
inc
scas
mov
or
arpl
jecxz
jns
js
addr16
test
mov
adc
and
mov
aaa
jne
fs
fistpl
mov
repnz
imul
and
cmc
xor
lret
rclb
and
dec
xchg
stos
jnp
imul
mov
mov
test
xchg
fdivrl
aaa
ja
push
je
adc
cli
xchg
sub
imul
mov
in
out
push
adc
xor
pop
adc
gs
addr16
pushf
and
iret
andl
sub
pop
pop
mov
fbld
xchg
jne
push
jae
xor
lods
addl
ja
dec
xchg
lods
push
add
inc
cmp
aad
fcoms
adc
loopne
ljmp
sbbl
xchg
aad
cmc
mov
push
xor
xchg
sub
adc
pop
mov
stos
arpl
xor
sbb
ret
ror
pop
sub
nop
out
repnz
sub
aas
into
addr16
pop
stos
pop
adc
sbb
out
inc
mov
jae
inc
pusha
ja
ret
pop
mov
outsb
hlt
add
loope
js
out
cltd
push
pop
enter
clc
fs
arpl
shl
adc
mov
sar
adc
leave
test
out
negl
aaa
inc
sub
adc
mov
les
mov
sbb
les
pop
fstpl
test
and
adc
leave
sbb
inc
mov
xchg
sarb
dec
add
arpl
xchg
test
sbb
out
sti
lea
sarb
rcrb
pop
push
sti
rolb
pop
loopne
aas
imul
scas
pop
decb
aaa
mov
or
cltd
ds
cmp
or
adc
nop
mov
or
sub
push
jl
xor
adc
int
das
inc
pusha
jne
int
sahf
outsb
mov
push
subl
mov
push
inc
mov
dec
stos
push
add
pop
xor
outsb
pop
lods
xchg
je
sbb
lahf
mov
data16
push
add
mov
aaa
dec
in
lret
cmp
es
xlat
lcall
je
sbb
xchg
sti
aas
inc
test
and
and
scas
out
ret
loopne
push
in
xchg
into
push
dec
xor
push
mov
fnstsw
loop
fsubs
sub
bound
pop
push
mov
sbb
imull
cmp
scas
mov
mov
dec
add
into
sti
pop
add
cltd
xor
sbb
inc
js
mov
mov
faddl
or
popf
xchg
sub
sbb
or
sub
mov
test
cld
or
subb
nop
inc
imul
push
je
cs
ret
and
inc
out
sub
repz
pushf
iret
xchg
leave
sub
cmpsb
cmc
mov
into
jp
fdivrl
pop
out
lds
testb
push
enter
dec
adc
sub
jmp
mov
cmpsb
xor
and
jae
jcxz
inc
sahf
loop
out
add
xor
dec
push
xor
adc
xor
mov
stos
mov
lcall
pusha
insb
mov
arpl
aas
dec
mov
fidivrl
mov
mov
adcb
and
sub
adc
mov
jp
mov
std
iret
pop
lret
lock
pop
mov
push
clc
or
mov
aad
out
push
out
dec
and
cmp
add
fisubrs
test
icebp
and
dec
nop
jmp
ret
xor
xchg
jns
xor
inc
stos
clc
test
in
stos
adc
les
cmc
inc
adc
xlat
jo
lea
sub
fistpl
repnz
push
xchg
outsb
jle
test
je
setg
fcompl
test
add
data16
push
push
sahf
sub
xchg
push
lds
or
pop
push
sub
and
mov
jge
push
lcall
test
jno
sar
sbb
sub
ret
pusha
jle
scas
inc
jae
out
sub
rclb
push
xlat
das
jge
es
pop
xchg
add
or
or
int3
inc
fwait
mov
pop
pop
or
and
arpl
inc
xlat
cld
mov
mov
and
out
and
push
clc
jne
and
imul
inc
adc
pop
aaa
and
push
mov
jnp,pn
nop
and
and
out
sti
cmc
xor
cld
xor
movsl
aas
in
xor
nop
pop
insb
ret
fsub
jmp
add
cmc
into
adc
mov
mov
test
les
mov
lods
mov
fidivl
faddp
in
mov
imul
movsl
arpl
enter
fs
movsb
stos
inc
ds
fisubrs
push
in
add
jp
dec
push
or
into
ss
mov
mov
pop
pop
cmc
inc
shll
push
sbb
xlat
jmp
cltd
add
cmp
pop
jb
gs
aaa
cmc
aad
mov
out
inc
push
sbb
sbb
stos
push
push
fisubs
mov
adc
push
dec
scas
xor
into
mov
cli
jne
xor
mov
addb
pop
test
daa
jle
fsubs
insl
sub
scas
add
loope
adc
cltd
and
ret
outsl
stos
daa
adc
into
mov
xor
pop
sub
jmp
outsb
daa
pop
ss
notb
push
mov
inc
mov
popa
jmp
cmpsl
scas
movsl
bound
cmp
mov
testl
xor
mov
daa
cmc
sbb
fsts
cmp
sbb
push
out
idivb
jbe
xor
or
xchg
enter
mov
cmc
sub
cmp
decl
add
and
sub
ljmp
push
cmp
ljmp
dec
add
fwait
repz
aam
aaa
mov
pop
jb
cmp
ja
push
popl
lods
xchg
mov
fwait
addr16
lock
lea
jnp
pop
lods
mov
mov
into
sahf
cmp
mov
ficoml
xchg
adcl
js
subb
scas
xchg
pop
sub
in
sbb
and
pop
sahf
out
add
outsb
mov
cli
cmp
sbb
or
xor
mov
or
push
cmp
ds
fstp
les
xor
pop
add
neg
dec
rolb
test
fmull
es
mov
lahf
push
mov
jno
aas
and
sbbl
mov
loopne
xchg
mov
mov
mov
jne
xchg
sub
nop
sbb
mov
xchg
mov
sbb
sbb
push
pop
mov
push
or
ljmp
or
cli
cmc
stos
inc
daa
adc
mov
mov
mov
aam
lahf
bound
mov
xchg
lods
cwtl
inc
jmp
icebp
out
jg
or
mov
out
jmp
stos
adc
xor
jp
bound
bound
imul
sbb
cmp
sahf
call
fdivrl
jns
fwait
mov
mov
out
cmp
dec
in
cmp
arpl
sub
imul
push
mov
das
xchg
les
sbb
testb
sub
push
pop
lahf
outsl
adc
stc
int3
mov
and
push
insl
cld
dec
mov
shl
fdivl
mov
pusha
xchg
mov
push
mov
lret
mov
adc
inc
fsubrl
pop
and
fs
push
pushf
pop
cmp
add
lea
in
add
fnstsw
jo
push
mov
dec
mov
fists
sub
push
out
inc
mov
ret
insb
call
cmpsb
cmp
mov
rcrb
fs
pop
pop
shl
jl
adc
enter
xor
inc
fldenv
cmp
test
mov
enter
dec
mov
imul
sahf
in
subl
nop
mov
mov
stos
sbb
lret
sub
bound
mov
fisubrl
or
xlat
dec
int
cmp
sbb
stc
cwtl
stos
cmp
xchg
jae
mov
cmp
fadd
fisubs
cmpsl
clc
mov
mov
push
das
lret
cmp
and
dec
pop
adc
xor
loope
bound
dec
lcall
xchg
ljmp
push
add
sub
xlat
mov
pop
or
addr16
aas
fsqrt
hlt
out
cmpl
push
fistpl
sbb
mov
sbb
aas
lcall
dec
jmp
push
sub
pop
fbld
mov
out
inc
mov
pop
fdivs
jmp
jle
mov
or
test
xor
out
pop
jae
xor
jge
push
fwait
cld
sbb
push
imul
cmp
xchg
dec
stos
icebp
inc
cltd
test
xor
rcr
fisttps
test
add
pop
sti
pop
sub
xor
mov
pop
dec
loope
les
imulb
jo
pop
lahf
pop
and
dec
mov
test
inc
int3
daa
js
fsubrp
ret
test
repz
out
adc
sti
pop
cmp
scas
rcrl
daa
lock
cmp
jns
and
ror
pop
lds
aas
mov
xor
stc
loopne
ja
pop
dec
sbb
cld
outsb
push
push
arpl
repnz
sub
pop
xor
dec
pop
push
out
cmp
and
jle
push
jnp
and
cli
dec
lcall
dec
popf
cmp
xchg
xlat
icebp
xor
sbb
bound
mov
cli
cs
sub
inc
inc
fs
push
adc
mov
lea
xlat
bnd
sbb
rol
push
and
sarb
negl
adc
daa
cmp
sub
add
push
xor
pop
pop
mov
push
and
aaa
xchg
add
jns
push
sahf
in
mov
xchg
lods
jmp
or
push
daa
dec
test
pop
clc
dec
dec
popf
testl
sbb
mov
les
xor
pop
insb
aam
dec
cltd
and
mov
out
xor
push
sub
mov
mov
hlt
push
nop
xchg
cwtl
lock
mov
add
das
fidivrs
mov
pop
and
xchg
xor
push
push
mov
cmp
mov
in
xor
js
add
pop
or
mov
xchg
inc
cmp
mov
jnp
test
xor
bound
dec
mov
push
test
bound
ret
add
pusha
xlat
jge
fucomp
loope
jecxz
jl
ds
xchg
cwtl
ja
inc
rolb
jno
push
xor
lods
imul
clc
aad
sbb
lcall
std
mov
cmp
cld
push
jmp
mov
sub
in
aad
mov
in
pop
repz
dec
test
xchg
das
cmp
pusha
or
adc
ss
push
pop
dec
in
dec
push
les
mov
push
mov
adc
mov
and
dec
adc
shlb
or
dec
xchg
int3
nop
fisubrs
add
jle
out
sbb
dec
pop
in
or
sub
int
cmp
pushf
sub
add
aaa
aaa
std
in
test
mov
mov
scas
mov
enter
in
dec
inc
cmpsl
push
cmpsl
jne
daa
jno
mov
sub
dec
push
les
cmp
mov
pop
repz
pusha
xorl
roll
mov
adcb
inc
insb
sbb
xor
pop
or
nop
fiaddl
fistpll
pop
stos
push
fcoms
shrb
fimuls
fs
mov
ret
les
sahf
in
dec
test
xchg
mov
leave
out
inc
inc
std
jp
das
push
lret
jbe
int
pop
add
cltd
jecxz
xlat
outsb
dec
mov
mov
test
xchg
push
andb
pop
arpl
jno
inc
addr16
cli
ljmp
mov
loope
jge
aas
add
lcall
and
std
insb
inc
outsl
cs
or
mov
sbb
jl
pop
aad
icebp
and
outsb
xor
cmp
in
mov
pop
jecxz
lahf
ja
sbb
sbbb
stc
push
shlb
sub
push
scas
mov
test
push
mov
jno
aad
sbb
jbe
inc
frstor
adc
adc
inc
test
mov
and
into
in
icebp
hlt
xchg
mov
movsb
repnz
xchg
mov
scas
add
push
in
sahf
sbb
lock
sbb
jbe
sbb
sbbl
jo
test
mov
mov
jb
xor
sub
dec
dec
or
not
in
movsb
mov
je
lds
adc
pop
mov
pop
cltd
imul
cmp
lods
mulb
fucomp
lea
jbe
jne
sti
das
mov
inc
dec
test
or
push
outsb
aad
imul
loop
cwtl
outsb
inc
frstor
push
insb
addr16
out
xchg
xchg
pop
aaa
cmpsl
pop
cmc
jl
inc
dec
stos
addl
xor
sbb
out
out
sub
mov
adc
les
lret
mov
dec
into
fsubl
psubsb
popf
cmpsb
sti
icebp
push
ljmp
sub
push
pop
jmp
lea
inc
dec
jecxz
je
inc
lods
mov
cltd
insl
mov
adc
xor
fsubrp
js
xchg
dec
in
divl
sub
inc
sahf
cmpsl
cmp
cmpsl
jbe
inc
mov
test
add
jmp
push
lock
xchg
xchg
mov
in
filds
js
aam
pop
lea
xor
out
jge
mov
lahf
in
push
jge
das
sbb
xchg
and
iret
sahf
fwait
or
mov
push
inc
repz
xlat
sbb
pop
add
cmpsl
xor
xor
ret
rcll
filds
daa
push
inc
or
lods
andl
xor
sub
jmp
popa
int
sbb
sarl
inc
push
push
mov
lret
ja
pop
int
enter
and
loop
or
adc
movsl
fwait
mov
xor
iret
mov
cmp
adc
mov
sbb
and
inc
jmp
and
add
mov
iret
test
xchg
mov
jns
cs
jnp
insl
cmp
sbb
mov
aaa
test
aad
sub
jle
and
test
std
xchg
loop
add
enter
and
icebp
or
orb
nop
push
pop
out
xchg
ss
in
mov
or
scas
inc
adc
sbb
addr16
movsb
mov
mov
in
xchg
sub
sbb
adc
push
inc
mov
fldcw
fisubl
lea
jo
push
sbb
outsb
insb
adcb
or
mov
enter
fcompl
mov
pop
repz
add
sub
jno
xchg
in
xchg
out
lods
mov
pop
lods
stos
test
xchg
stos
inc
fucomp
mov
pop
jmp
out
cmp
pop
sbb
lods
lods
cmp
and
das
push
add
mov
clc
test
ja
cmp
out
call
hlt
mov
mov
pop
sbbb
stos
pop
and
cli
mov
fiadds
adc
lcall
and
sti
or
add
loop
lret
imul
ss
repz
pop
ret
enter
mov
lock
ljmp
xor
incl
out
stos
fbld
push
cmc
mov
pop
add
add
add
jmp
or
mov
push
add
gs
cs
les
imul
cmp
rorb
jae
push
out
cmp
adc
pushf
sbb
imul
arpl
outsb
ljmp
xchg
movsb
cmp
and
stos
mov
scas
mov
ds
inc
hlt
cwtl
jge
test
xchg
imul
add
in
outsb
jmp
mov
cs
add
aaa
lret
andb
pusha
pop
cld
inc
add
ret
and
pop
fistps
adc
ja
es
or
punpckhwd
mov
pop
or
adc
std
loop
or
ds
call
sub
cwtl
cmp
add
ret
ja
clc
jns
push
push
sub
ret
pop
mov
fistps
cmp
add
sub
push
inc
rcrb
cmp
mov
lea
mov
mov
dec
push
addr16
mov
and
sbb
inc
and
add
xchg
out
out
jmp
lahf
testl
das
mov
mov
mov
pusha
push
stos
std
jo
sti
iret
fistpl
test
mov
sahf
xchg
sub
test
or
scas
nop
popf
mulb
add
test
sbb
cld
lcall
dec
pop
loop
fsubrs
aad
test
out
ficoml
sbb
daa
pop
mov
loopne
mull
dec
pop
fmulp
sub
outsb
push
imul
aaa
lea
dec
pop
pop
cmp
insw
or
std
iret
pop
jnp
mov
mov
iret
sub
pop
incb
into
subb
push
push
fwait
jl
sub
mov
clc
ss
pop
adc
ficoms
push
mov
mov
jmp
or
and
stc
popf
jge
jg
cmp
adc
aaa
push
icebp
pushf
xor
sub
push
and
sahf
cli
mov
jp
scas
stos
or
repz
aas
testb
xlat
popa
fmul
inc
cli
fsts
mov
stos
insl
sub
or
sub
int3
and
mov
sbb
scas
aas
cmc
mov
test
cmp
leave
dec
sahf
jge
shrb
negl
cs
pop
mov
in
lahf
test
das
pop
rcrl
cmp
lods
cltd
jbe
lea
jnp
loope
pop
pushf
rorb
roll
fs
xchg
xor
dec
ljmp
add
shlb
xchg
mov
mov
adc
pop
lods
sti
mov
mov
cmpsl
xchg
pop
or
mov
fcomip
sub
pop
add
inc
mov
sbbb
xchg
sub
ret
ret
clc
jmp
xor
dec
lods
and
fcmovne
sarb
push
add
add
mov
push
mulb
shll
in
int3
push
addl
in
push
popf
lds
lods
mov
icebp
dec
insb
mull
aam
dec
jle
shrl
push
loop
lret
pop
mov
imul
mov
outsl
jl
popf
gs
popf
and
push
lock
sti
cmp
test
arpl
push
dec
pop
sahf
mov
shrl
fwait
adc
pop
mov
adc
pop
jbe
xor
fildll
adc
xor
fwait
sub
jns
mov
enter
sub
mov
imul
test
mov
ss
add
jmp
dec
cmp
loopne
mov
add
cmc
cmpsl
outsl
fs
cwtl
add
cmpsl
clc
pop
lahf
ss
out
pop
lock
jecxz
dec
lahf
push
aas
jo
jecxz
pop
sti
cmp
outsl
movsb
pop
push
nop
lahf
push
je
mov
add
and
movsb
cmp
xchg
jns
aaa
into
push
mov
jge
js
lods
lock
push
lret
ret
subb
sub
data16
icebp
mov
ljmp
xchg
cmpsb
enter
jne
sbb
out
cmp
adc
dec
jbe
pushw
pusha
sbb
test
int3
jp
jecxz
mov
xor
cmp
fldenv
sbbl
pop
ja
ss
push
int3
xor
jo
push
inc
lods
ja
test
mov
int3
or
sbbb
loop
stos
repnz
ror
xchg
incb
aad
out
aam
and
add
fmul
and
pop
cmc
sbb
lea
adc
subl
fisubl
cmpsl
sbb
push
popa
call
xchg
js
push
popf
jmp
cltd
xor
adc
and
adc
inc
or
xor
in
mov
xchg
jne
sarl
mov
mov
into
fiaddl
rcr
push
out
ss
fdivl
jmp
in
cld
fistpll
pop
stos
mov
jne
in
mov
fbld
add
xor
data16
dec
decl
add
imul
sbb
mov
inc
sub
xor
jae
pushf
mov
jle
icebp
xor
rcrl
enter
mov
xchg
jae
lods
aas
adcl
ljmp
daa
xor
mov
sbb
xlat
mov
ja
inc
fbstp
and
cmp
jle
cltd
out
pop
jmp
dec
shll
pop
mov
repnz
cmp
in
inc
inc
adc
push
fidivs
mov
adc
xchg
sti
movsb
aad
scas
inc
cs
ljmp
rorb
call
or
or
inc
xor
dec
sbbb
je
sub
fcmovb
decb
leave
pop
xor
xor
mov
pop
mov
pushf
pop
call
jg
cmpsb
imul
or
mov
and
jnp
in
sbb
loopne
adc
cmp
icebp
int
xor
bound
push
fsubs
ret
pop
cmp
push
outsb
mov
scas
aaa
push
insb
lcall
mov
mov
jbe
mov
add
push
mov
mov
add
sbb
movsb
sbb
push
out
cmp
outsl
sbb
mov
push
sbb
jle
icebp
out
and
fadds
push
sar
rolb
mov
sahf
xor
ss
push
push
cltd
fwait
mov
push
fdivl
call
jg
cltd
inc
jle
mov
push
and
jmp
decb
in
xchg
jns
icebp
out
xchg
ljmp
les
das
sbb
xchg
dec
and
in
pusha
sbb
loop
inc
xchg
xor
scas
fisubs
jge
mov
push
outsb
xor
cmp
out
test
rorb
pop
push
pop
inc
mov
mov
inc
fstps
cmp
push
sbbl
fcmovnb
dec
decb
nop
pop
mov
inc
sub
stc
test
mov
push
lods
insl
mov
je
cli
sub
arpl
rcl
add
test
inc
xlat
cs
insl
adc
push
cmp
mov
ds
das
push
and
push
xor
scas
test
adc
mov
stc
bound
rolb
dec
pusha
cmp
insl
loop
data16
out
add
bound
add
testb
mov
push
sahf
inc
mov
arpl
frstor
sub
xor
cltd
clc
or
add
test
fildll
pop
jp
jge
movsb
pop
das
add
inc
in
sub
and
scas
push
stos
or
enter
ret
setg
or
cmp
dec
lcall
xchg
les
aam
jns
inc
mov
sub
mov
sbb
nop
out
pop
and
stos
sbb
jno
push
aaa
repnz
pop
out
in
inc
pop
imul
sbb
or
and
loop
sarl
mov
sbb
sbbb
jnp
sub
nop
pop
out
sbb
mov
insb
das
mov
sbbl
aas
lret
insl
xchg
lcall
int3
adc
inc
pushf
jae
test
mov
cmp
loope
aaa
mov
mov
push
jmp
xlat
sbb
jp
stc
inc
mov
bound
xchg
popa
clc
adc
dec
decl
ds
fadd
or
ds
idivb
or
sub
sub
ja
ret
imul
pop
push
shlb
cld
xchg
fs
hlt
push
test
or
orb
pop
xlat
fsubr
add
es
orl
jae
mov
adcb
mov
std
in
gs
adc
insb
inc
shl
jnp
test
sarl
lahf
push
test
push
dec
add
inc
into
mov
arpl
add
subl
adc
movsl
andb
sbb
jge
movsl
sub
adc
cmpsb
cmp
and
inc
pop
sahf
jbe
in
test
xchg
jnp
mov
jne
xchg
shrb
push
sub
and
mov
add
sub
or
push
daa
shll
add
stos
repnz
fidivrs
sbb
inc
inc
outsl
decl
mov
push
and
or
xlat
lret
dec
lret
pop
adc
mov
push
repz
adc
or
and
ret
fidivs
ja
jle
add
mov
mov
imul
pop
movsb
cmpsb
mov
sub
or
sbb
xchg
mov
lcall
push
loope
add
fildll
rclb
mov
sti
mov
fsubrp
dec
push
out
cmp
scas
dec
scas
dec
fnstsw
bnd
dec
inc
data16
push
mov
lcall
faddl
int
xor
push
inc
flds
push
pop
sub
out
fwait
or
imul
sbb
cltd
xchg
inc
xor
dec
mov
or
imul
aas
and
mov
aad
int
mov
jecxz
imul
add
cmp
dec
jle
mov
dec
das
data16
out
pop
negb
pop
or
imulb
or
mov
fwait
sbb
pop
ds
mov
xchg
sahf
lods
pop
out
dec
call
and
sbb
decb
xor
mov
psrad
adc
or
jb
das
stc
cmp
xchg
push
jecxz
sbb
add
lds
xor
mov
mov
and
mov
mov
xor
pop
repz
xor
test
pop
aam
jo
or
pop
mov
daa
and
inc
jecxz
mov
mov
inc
and
loope
jns
stos
stos
push
adc
shlb
in
fiadds
enter
xchg
push
loope
pop
xor
cmp
jne
lret
cmpsb
or
outsb
cmp
test
adc
ret
inc
push
sbb
rcl
stc
push
vcvtss2sd
insb
test
sbb
mov
xor
and
push
push
pop
cmp
aas
fldcw
pushf
lods
adcb
in
int
pop
and
or
xchg
into
fbstp
mov
test
pusha
aas
cmp
daa
adc
or
or
jmp
inc
sbb
jae
mov
and
les
ret
in
and
sub
je
std
test
xchg
inc
scas
push
mov
dec
push
imul
pop
cs
mov
sbb
pushf
mov
into
xchg
arpl
cmp
ds
jb
mov
mov
ds
dec
sahf
call
push
clc
mov
cld
mov
add
cmp
jmp
lods
sub
sub
sub
jge
jg
and
sub
jp
in
sub
jmp
mov
add
dec
sahf
inc
jge
das
in
lahf
icebp
popl
mov
je
lcall
mov
das
ficoms
mov
gs
mov
mov
jmp
jo
mov
enter
dec
sbb
dec
jo
adc
pop
mov
mov
fwait
xor
sbb
outsb
pop
jno
scas
arpl
add
mov
cmc
fldcw
push
lret
sti
daa
sub
aaa
icebp
enter
mov
aam
mov
ds
mov
shll
fsubrl
dec
jns
repnz
test
test
dec
dec
cld
push
xchg
and
dec
fbstp
and
add
mov
and
inc
lcall
mov
test
mov
sbbb
repnz
out
lcall
dec
dec
imul
pop
dec
daa
jmp
pop
bound
aas
jle
dec
mov
call
out
jnp
xor
mov
mov
movsl
hlt
das
pop
ficomps
mov
jle
add
repnz
dec
or
sub
js
inc
and
xor
idivl
sub
out
bound
aaa
jmp
cs
call
or
scas
js
mov
ja
inc
push
cmp
mov
lock
fwait
adc
cmp
xor
insl
rol
push
in
out
xor
imul
jp
push
jl
test
nop
and
inc
pop
scas
ja
adc
leave
pop
stos
jge
popa
mov
xchg
in
in
sub
in
add
imulb
mov
jnp
sub
cltd
mov
push
mov
or
sbb
push
lret
iret
jo
xchg
mov
inc
popa
pop
rcrl
fbstp
fdivl
lahf
mov
in
pop
out
repz
pop
sbb
mov
xchg
push
sub
add
ret
sbb
fisttps
sub
mov
adc
or
jl
pop
mov
hlt
jnp
pop
add
ss
mov
iret
push
cmp
mov
pop
popa
push
mov
leave
xor
les
mov
pop
and
mov
cwtl
lds
cmp
sarb
mov
sarl
imul
add
aaa
cmp
repz
lds
push
ss
sub
ret
movsl
ret
cltd
cmp
sub
pop
pop
or
enter
repz
mov
push
outsb
or
loopne
pop
sub
roll
xchg
push
hlt
adc
cmp
jge
push
fnstcw
xchg
aam
push
inc
xor
mov
push
aaa
outsb
cltd
mov
insb
push
and
cwtl
das
sub
gs
dec
mov
xor
pop
sarl
or
and
xor
adc
lea
ds
out
sbbl
or
popf
lods
fildll
in
jp
fnsave
test
push
xor
mov
sbbb
adc
fs
xlat
lret
or
stos
or
adc
in
or
in
jg
xor
add
and
dec
fcom
mov
inc
jmp
push
add
setne
mov
fmul
gs
pushf
out
les
iret
jo
inc
outsl
gs
and
sbb
mov
aaa
pop
sahf
fcoml
inc
mov
test
lds
xchg
ljmp
call
or
in
aaa
lret
pop
test
adc
out
xor
insb
dec
add
inc
adc
insb
sti
addr16
adc
shrl
adc
push
outsb
push
stc
aas
es
mov
addl
lret
xor
or
push
dec
pop
cs
hlt
mov
lret
addr16
adc
repz
fisubrl
in
shr
outsb
scas
jmp
or
cmp
pop
cs
mov
rcrl
cmc
faddl
pop
fists
push
dec
sbb
pop
xchg
mov
data16
out
call
loop
lds
and
mov
hlt
stos
pop
lods
mov
fidivrs
jae
sub
or
mov
sbb
sbb
mov
mov
or
addr16
outsl
push
adc
test
xchg
cmc
dec
enter
sub
push
jmp
add
inc
fwait
push
imull
pop
pop
lods
inc
dec
mov
and
fisttpl
cwtl
adc
dec
fisubs
daa
test
repnz
cmp
lret
mov
cwtl
daa
rorl
mov
mov
mov
xchg
sahf
lods
xchg
sub
arpl
xchg
push
dec
das
cs
sub
in
pop
cmp
movsl
lods
aas
pusha
jb
outsl
notb
inc
in
adc
addb
es
inc
cs
adcb
xor
out
pop
mov
int3
adc
cmc
pop
cmp
pop
xchg
sahf
dec
pop
sbb
and
loop
sbb
test
lods
fsubr
xchg
ljmp
call
popf
push
cmp
incl
push
aas
mov
imul
pop
sub
xchg
push
mov
cmpsb
jb
adc
mov
sub
cmp
dec
pop
fdivrl
cmp
mov
out
shll
inc
add
mov
adc
jo
cld
dec
mov
push
xchg
sub
inc
push
std
xchg
mov
mov
movsl
lock
sub
icebp
ja
and
aad
and
sub
push
push
inc
jge
ret
leave
mov
and
sbb
ja
lahf
or
iret
inc
cmp
test
mov
pop
jecxz
mov
inc
push
add
in
ret
lock
fidivrl
pop
sarb
pusha
adc
cmpsl
cltd
xor
ss
dec
xor
stos
jnp
push
in
pop
mov
xchg
fsubr
pop
imul
inc
lods
mov
mov
push
test
inc
out
mov
int3
fiadds
test
adc
sub
ja
mov
sbb
sbb
xchg
scas
jp
push
mov
dec
adcl
stos
sbb
mov
xor
jl
cld
cld
scas
and
leave
xor
dec
rcl
jge
loopne
cltd
push
dec
pop
adc
dec
cmp
jmp
fadds
daa
pop
negb
pop
jno
cmpsb
in
and
add
and
pop
mov
xor
ret
push
jo
add
xor
and
mov
stc
adc
shll
sub
xor
pop
jne
stos
push
cld
dec
xchg
and
sti
sbb
adc
cli
pop
cmc
xor
mov
mov
out
test
insb
and
sahf
or
cmp
jge
dec
pop
cmp
mov
inc
xchg
sbb
int
mov
lahf
xor
jle
jb
add
and
loope
divb
aad
sub
mov
arpl
mov
mov
or
cmp
mulb
or
mov
dec
out
mov
fucom
imul
dec
mov
add
mov
pop
addr16
or
out
ss
cmpsb
gs
or
mov
out
push
les
lcall
inc
pop
nop
stos
inc
popa
insb
add
inc
xchg
hlt
decb
scas
xchg
call
or
cmpsl
adc
aad
out
pop
das
and
lret
scas
ret
mov
push
outsb
push
mov
aam
rcll
inc
xor
lds
scas
enter
inc
xor
and
movb
adc
lahf
rcrl
dec
push
pop
repnz
loop
jnp
mov
cmpsb
aaa
fidivs
clc
sarl
sbb
outsb
out
mov
push
mov
adc
call
mov
jl
dec
cmpsl
jno
dec
or
daa
add
daa
add
add
fcompl
scas
sbbb
xor
pop
adc
adc
sub
pop
je
cmc
mov
adc
shlb
push
pop
cmp
jnp
xor
ljmp
test
test
stos
cmpl
xchg
add
adc
out
jl
xor
movsl
lahf
divl
mov
jns
les
lretw
imul
jle
and
sbbb
mov
std
inc
movb
jl
addr16
mov
add
xlat
xor
pop
mov
jb
in
push
or
sbb
ja
push
test
into
mov
lods
hlt
out
adc
adc
fsubrl
xor
add
inc
jae
pop
cmpsb
xchg
sbb
add
iret
movsl
rorl
outsb
jmp
test
pop
xor
cmp
lock
das
loopne
sub
cmp
xchg
jmp
dec
push
lahf
in
mov
aas
push
mov
loope
loope
xor
xor
les
clc
mov
and
cmp
xchg
sub
les
jl
in
jo
pop
scas
xor
testb
inc
dec
out
adc
jae
rolb
and
jl
test
jp
inc
divps
jge
mov
bound
jp
out
xor
loop
rcrl
shrl
adc
jnp
xchg
inc
sahf
xor
dec
mov
xor
jl
mov
xchg
jb
or
sbb
mov
in
mov
cmp
sbb
inc
push
cmp
mov
aad
cmp
add
mov
fwait
aad
call
rclb
dec
cltd
lret
sti
pop
or
jbe
or
add
shlb
and
push
aas
pop
cld
sub
shll
and
hlt
or
dec
jne
mov
push
imul
xchg
add
stos
bound
sub
pop
outsb
jg
leave
xor
nop
stos
jns
mov
sub
lock
lret
jge
daa
jmp
sbb
cmp
mov
mov
mov
adc
and
and
sub
or
ret
or
daa
jnp
cmp
mov
xchg
ja
addb
orb
add
jl
lods
loop
or
ret
ret
pop
pop
bound
outsb
loopne
fsubs
mov
push
jle
inc
ror
xchg
popf
addr16
jmp
repnz
flds
cmpsb
mov
xchg
movsl
or
pop
js
in
rorl
repnz
inc
daa
and
sbb
or
cli
mov
addr16
pushf
out
pop
dec
push
cmp
pop
jp
rorb
dec
in
xor
arpl
lcall
inc
cwtl
das
jae
aaa
fwait
mov
pushl
jae
mov
mov
popf
in
mov
jb
cmpsb
and
insl
enter
lods
cmp
nop
mov
mov
ret
hlt
mov
dec
add
pushf
rcl
ja
loop
out
mov
sbb
jnp
loopne
inc
mov
shrl
dec
dec
xchg
pop
mov
lea
pop
aam
push
push
pusha
gs
xchg
jg
and
ret
sbbl
movsl
or
nop
sbb
testb
jl
orl
loope
movl
push
aad
rolb
cmpsb
mov
mov
inc
call
mov
test
pop
xchg
cmp
push
and
adc
push
test
sub
stc
unpckhps
push
adc
in
add
in
popf
xor
jmp
arpl
inc
push
notl
repz
inc
sbb
mov
cli
ficoml
inc
push
xchg
cld
cli
test
lods
sbb
mov
popf
ljmp
out
lcall
loop
mov
sub
jo
mov
and
fsts
mov
mov
ja
jl
imul
push
out
mov
mov
rcrb
stos
loope
xchg
adc
pushf
push
lahf
mov
outsb
rclb
xlat
daa
aad
push
add
push
test
ret
and
xor
push
dec
mov
push
dec
mov
dec
or
setle
out
in
inc
push
cmpsb
dec
pcmpgtw
fidivl
arpl
adc
inc
xchg
repz
js
das
or
aam
inc
sub
pop
pop
addr16
sti
clc
stc
iret
xor
or
js,pt
jo
into
and
push
arpl
add
cmp
sub
jbe
or
addr16
ficomps
adc
fcomps
add
out
aaa
push
cmc
dec
jo
gs
jl
or
and
fwait
adc
ja
xor
in
push
and
ret
daa
outsb
push
js
pop
mov
mov
inc
xor
dec
pop
or
or
mov
incb
sub
push
push
jmp
movlps
sbb
jae,pt
inc
xor
mov
adc
xchg
lcall
sbb
lcall
stc
push
lds
xlat
and
test
fwait
xchg
lds
mov
mov
pop
mov
and
dec
lds
lcall
int
cmp
and
jbe
xchg
add
lock
xchg
out
test
mov
or
jmp
cmp
cmpl
adc
add
xchg
fdivrp
enter
sbb
je
add
rcrb
jmp
xor
mov
fldl
inc
xor
fsubl
fidivs
jmp
in
lcall
sbb
hlt
adc
ljmp
lods
clc
jmp
test
add
es
pusha
mov
xor
mov
mov
pop
xchg
or
cmp
rcrb
push
cmp
inc
je
scas
out
scas
loope
stos
sub
mov
or
clc
lret
bound
inc
jmp
arpl
xchg
jle
sti
les
sbbb
fnsave
pop
imul
scas
push
daa
fsubl
or
je
jo
stc
nop
mov
insb
scas
mov
and
pop
imul
and
sbb
shl
push
mov
sbb
es
push
adc
rcl
and
xor
ret
ja
adc
mov
adc
imul
fbstp
add
aaa
xchg
in
das
ja
xchg
int3
lds
jg
add
ja
ret
rclb
mov
test
gs
outsl
push
push
fcoms
shrb
sbb
iret
pop
clc
mov
inc
outsb
sbb
jp
xchg
mov
mov
fisubrl
icebp
inc
fs
dec
popa
clc
jl
mov
or
jmp
xlat
pop
in
jne
jno
loop
aas
dec
ja
mov
adc
cltd
push
in
xchg
fistpl
stos
test
cli
pop
jae
leave
movsb
jns
out
dec
dec
jo
jne
add
jg
lds
and
ret
enter
xchg
cmpsb
fsubr
addl
dec
jmp
or
mov
cmp
or
adc
imul
xchg
ret
idivl
mov
adc
cmp
cmc
dec
iret
jnp
lahf
pop
push
adc
adc
add
fcomi
sub
popa
ret
inc
fmul
push
inc
in
mov
lahf
xor
js
sub
test
jle
adc
or
out
testb
jp
subl
xchg
mov
shrb
lods
es
outsb
jmp
popf
in
in
xor
bound
cmc
mov
arpl
aaa
push
jg
pushf
mov
xchg
sub
dec
sub
or
xlat
outsb
inc
and
test
jae
fwait
mov
sbb
push
jne
sub
push
jns
adc
add
cmpsb
ljmp
and
insb
add
mov
vmread
jle
push
add
xchg
addb
inc
icebp
daa
xchg
decl
push
and
xor
xchg
xor
xchg
xor
aaa
or
mov
call
cmp
into
or
add
sbb
mov
cld
push
insl
cmp
jl
add
cmp
sub
insb
out
ret
mov
sbb
imul
cmp
sbb
push
call
into
ss
cmp
gs
nopl
push
rclb
xor
sub
pop
js
dec
loop
sbb
mov
in
sub
pop
adc
ss
add
std
clc
push
daa
lea
adc
jne
cmp
stos
int3
pop
or
in
nop
jl
test
icebp
adc
enter
pushf
jecxz
dec
xchg
stos
stos
arpl
push
into
pop
add
shlb
loop
xlat
push
fs
cmp
ret
pusha
mov
testb
jge
dec
mov
cmpsl
rcll
aaa
into
mov
pop
push
call
sub
out
cmc
adc
sub
pop
fcmove
out
test
inc
lock
jecxz
mov
push
es
fwait
cltd
pop
inc
inc
push
test
ljmp
iret
fs
sbbb
xchg
sub
scas
rcrl
vcvttpd2dqy
shlb
jne
mov
shl
and
fisttpl
pop
jmp
enter
aaa
jecxz
push
cwtl
lcall
inc
adc
xchg
ja
je
enter
cli
pusha
scas
inc
xchg
pop
inc
in
jmp
out
bound
into
jmp
aam
lret
cmpsl
pop
out
adc
ss
jecxz,pn
loopne
inc
jecxz
jp
fsubs
adc
dec
fiaddl
pop
shl
sbb
movsl
movsb
sub
mov
sbb
jns
pop
xor
mov
insb
dec
pop
stos
dec
ret
jbe
ret
xchg
les
pop
lock
insl
int3
iret
divb
insl
push
pusha
ret
mov
insl
adcb
insl
sbb
jg
mov
xchg
push
sub
adc
addr16
mov
jmp
push
imul
in
je
xor
pop
insb
add
enter
call
sub
fdivrs
adc
lock
arpl
sbb
rolb
outsl
mov
push
jno
popa
mov
cmp
sbb
rcrb
xor
mov
and
jle
add
subb
inc
dec
repz
jne
aas
xchg
lock
mov
or
and
inc
cmp
push
lcall
movsl
gs
out
fdivrl
inc
mov
sbb
adc
in
sub
inc
ffree
sub
idiv
fsubr
test
adc
mov
or
xchg
test
cld
fnstcw
lret
out
pop
lahf
fstpl
mov
stos
push
inc
movsl
shlb
push
add
rcrl
jae
add
iret
push
sbb
and
sub
repz
add
mov
js
repnz
cli
jp
mov
aad
lret
or
loop
imul
xchg
mov
mov
jmp
stos
inc
pusha
fdiv
test
mov
fisubl
jne
and
xchg
out
in
int3
inc
dec
loope
sti
fsubr
xor
imul
push
sub
sbb
sarl
loopne
pop
fsubrl
call
imul
jne
popf
mov
push
mov
sti
xchg
jbe
ret
sub
mov
push
cli
mov
es
scas
push
mov
ss
pop
rorl
dec
push
xchg
out
push
lds
pop
loop
pop
in
jnp
mov
mov
popa
xchg
test
dec
sbb
jg
xor
mov
cmp
stos
push
loop
mov
push
out
mov
mov
mov
jae
scas
mov
jmp
jae
out
add
pop
fmull
and
in
cld
push
xlat
add
in
push
stc
aas
dec
sbb
mov
cltd
push
ss
cmp
sbb
call
cltd
fidivrs
inc
push
aas
ret
pop
jle,pn
cli
or
into
iret
xor
int3
repz
xlat
dec
das
scas
or
dec
incl
and
bound
xchg
loope
xchg
sub
sbb
imul
stos
inc
das
fdivl
xchg
enter
mov
pop
jge
pop
mov
ret
icebp
sti
stos
mov
incl
rolb
sub
or
aam
ds
cmpsb
lods
test
pop
sarl
or
outsb
pusha
xchg
lahf
ss
and
pop
add
mov
test
movsl
dec
and
xorb
and
rcll
out
sarl
stc
mov
mov
cmp
cmp
fstl
mov
cld
mov
ret
iret
pop
mov
mov
cmp
rcrl
pop
sahf
or
xchg
mov
jp
xor
aaa
mov
rcl
xchg
xor
inc
in
push
adc
push
loopne
add
or
mov
inc
aaa
jle
add
pop
xor
insb
int
addr16
shl
fs
xchg
add
mov
ror
es
and
inc
fildl
push
enter
pop
imulb
inc
jge
jns
fwait
stc
cld
lods
fsubrp
and
ljmp
jne
out
nop
inc
push
sbb
mov
push
jle
mov
adc
cmp
cld
sbb
aad
das
sti
xchg
imul
add
inc
inc
pop
cmp
mov
dec
test
psubusw
inc
or
inc
jmp
jo
jo
push
sbb
lods
sbb
lret
sub
or
xchg
cltd
les
mov
test
sub
aas
push
pop
xchg
sarl
dec
add
and
popf
insl
fs
xchg
push
call
jle
mov
fistps
adc
inc
sbb
mov
or
test
dec
jne
enter
xchg
and
mov
and
push
dec
mov
call
or
and
pop
insb
cs
sub
jns
inc
popa
scas
pop
jne
jo
stos
inc
xchg
jmp
leave
jbe
cwtl
cwtl
xor
std
addb
push
psllq
insb
mov
sbb
lock
outsl
nop
iret
and
pop
push
cli
mov
pop
loope,pn
push
push
adc
and
call
or
lahf
loop
fsubl
add
fcoms
xchg
add
stos
fiadds
mov
cmpsb
pop
xsha256
cmpsb
nop
rcrl
pop
xor
xchg
test
sbb
adc
jl
inc
dec
fisubs
in
je
inc
in
pop
adc
or
in
pop
cwtl
test
sti
sbb
cmpsb
pop
scas
sbb
sahf
add
shll
xor
test
push
hlt
fdivl
xor
enter
xor
adc
sub
sbb
mov
test
mov
xor
je
loop
push
xchg
mov
arpl
ja
enter
cmpsl
shlb
sahf
loope
int3
out
andb
push
jnp
test
dec
loop
mov
inc
fisubrl
jle
lods
xor
dec
fldl
lcall
out
ja
cltd
js
adc
and
out
inc
push
mov
or
mov
jnp
jne
xlat
lods
andl
mov
notb
or
pop
mov
fildll
ficomps
fdivrl
mov
mov
push
add
push
in
shll
xchg
sbb
and
jp
jae
push
enter
pushf
pop
xchg
or
insl
popa
clc
lods
xchg
sbb
mov
mov
daa
test
mov
push
mov
test
fwait
inc
fcmovne
adcb
mov
jg
push
xor
jb
adc
sbb
push
dec
enter
testl
xor
clc
xor
in
pop
les
gs
into
enter
mov
inc
mov
mov
and
sti
hlt
adc
mov
mov
jge
inc
push
scas
cmpsb
mov
or
rcr
dec
repnz
mov
repz
adc
jl
mov
cli
xchg
xor
jb
ret
mov
cmp
fs
stos
leave
sbb
push
xchg
cmp
cmp
outsb
jl
xchg
mov
push
loope
fdiv
mov
ret
lock
cmp
lret
pop
cmpsb
sbb
js
sbb
xor
dec
mov
pop
insb
iret
sub
jo
add
sti
lret
or
and
in
je
xchg
dec
cli
test
lods
adc
fisubs
inc
pop
in
add
aaa
shrb
xorl
dec
mov
fsub
xchg
mov
and
xor
push
push
js
pop
shlb
sbb
rcrl
mov
jno
ret
in
jl
or
mov
or
fsubr
or
fisubl
add
xor
mov
pop
aad
pop
xchg
jae
movsw
mov
sbb
pushf
dec
jbe
mov
mov
repnz
test
sbb
mov
add
int3
jne
and
cli
cmc
jnp
fisubrl
into
xchg
popa
es
in
adc
mov
mov
xchg
jg
xor
mov
inc
cwtl
mov
nop
sub
rcll
into
xor
inc
push
push
xor
adc
xor
aas
cmp
inc
arpl
jnp
xchg
jg
inc
cmp
pop
insl
popa
iret
push
fisubs
push
add
fdiv
adc
stos
cmp
mov
les
jmp
push
dec
lock
mov
adc
push
jno
es
push
ret
ljmp
pop
and
dec
divl
scas
push
add
test
dec
inc
dec
add
xor
cmpsl
cmp
std
xchg
shrl
les
sub
aam
sbb
popa
jb
mov
pop
pop
fsubs
mulb
pop
addr16
roll
jge
imul
sbb
imul
ss
mov
mov
cmpsb
lds
inc
add
xor
xor
sbb
movsl
cmp
sub
push
push
sti
ds
sub
pop
orl
mov
jno
jl
imul
push
sbb
adc
mov
sbb
push
cmpl
cmp
out
cmp
push
cmp
mov
in
pop
mov
mov
pop
xchg
push
jnp
leave
jl
inc
cld
out
dec
xor
or
call
xchg
pushf
jle
into
scas
mov
cwtl
imul
xchg
test
fstp
movsb
in
jmp
int
dec
sti
fisubrl
mov
enter
pop
insl
arpl
dec
sub
xchg
mov
shr
push
fsubr
jae
loop
cmp
add
popa
call
mov
jno
call
sbb
fildll
es
repz
addr16
mov
sub
jg
in
inc
call
add
insb
dec
and
js
mov
xchg
cltd
xor
or
clc
test
lock
sub
inc
ljmp
xor
dec
shr
fisubs
pop
leave
or
push
pop
lahf
mov
movsl
dec
mov
mov
in
shll
test
pop
ret
fisttpll
mov
jl
cwtl
sub
adc
std
dec
in
lea
rcll
pop
jmp
imull
rcrb
adc
adc
xor
scas
stos
mov
les
insl
push
ss
pop
mov
out
mov
cmp
lock
int
add
mov
adc
xchg
push
inc
pop
cld
cmp
mov
movsl
sub
xchg
inc
enter
cmp
sub
test
mov
scas
push
xchg
mov
adcl
pop
mov
pop
fcoms
mov
jne
pop
stc
push
or
mov
mov
js
dec
loop
sbb
jl
push
pop
mov
stos
inc
iret
fmull
test
inc
lahf
mov
test
popa
subl
clc
shlb
inc
in
mov
cwtl
mov
xchg
repnz
sahf
sub
test
adcl
loopne
in
adc
call
jb
aas
lds
test
cmp
cmc
xchg
and
mov
jno
mov
sub
out
addr16
les
cld
std
adc
mov
adc
lret
in
jbe
es
hlt
jns
fsubrs
push
fdivrp
xchg
push
sub
mul
mov
jb
into
dec
sbb
inc
and
mov
data16
das
pop
addr16
xrelease
xchg
mov
add
sbb
shl
cmp
daa
mov
add
cmp
cltd
jae
push
std
and
mov
push
inc
es
push
jp
jae
or
cli
cmp
push
imul
sub
cltd
adc
mov
test
roll
fwait
cmpsb
jnp
call
ja
xor
jmp
fs
mov
cltd
das
push
inc
push
and
outsb
lahf
mov
add
outsl
push
and
pop
jg
push
fs
pop
gs
pop
jbe
push
sbb
scas
and
test
add
icebp
push
jb
icebp
push
ss
inc
test
cmovbe
dec
movsl
das
jo
cltd
mov
cli
push
loop
push
pusha
out
cmp
or
mov
xchg
mov
stos
fsubrs
cmp
add
icebp
xchg
gs
mov
psrad
xchg
xor
inc
jmp
ss
push
pop
xchg
notb
mov
push
mov
lock
mov
sbb
fsubr
push
imul
sbb
js
lods
xchg
dec
adc
inc
mov
popa
icebp
inc
and
xor
cmc
adc
lret
ret
fsubs
dec
lret
mov
loop
jne
push
add
aas
cmp
icebp
or
mov
ret
fcoms
into
and
stos
lods
aad
test
incb
fldcw
scas
insl
jge
mov
sub
ja
push
xor
das
sarb
fcompl
dec
jmp
test
ja
mov
cltd
std
gs
addb
add
repnz
pop
and
subl
pop
bnd
and
repnz
rcrb
aam
andl
stos
xchg
push
pop
insl
or
test
mov
push
mov
popf
lods
mov
jmp
or
mov
push
cli
test
in
fsts
pop
or
jnp
fiadds
pop
sub
ficompl
out
movsb
stc
or
sub
leave
je
mov
jb
xlat
sti
sahf
lret
addl
gs
dec
adc
pop
outsl
shll
iret
inc
repz
inc
lods
stc
xchg
lcall
std
divl
jbe
adc
mov
std
or
mov
jmp
and
gs
mov
adc
in
stc
cwtl
clc
scas
inc
sub
xor
imul
mov
dec
arpl
rclb
xchg
sub
aaa
add
rorb
iret
jg
xchg
cli
mov
cmp
adc
and
iret
pop
lret
mov
push
fsubr
popa
pop
addr16
callw
jmp
inc
out
test
negb
mov
cmc
jmp
mov
mov
fnstcw
das
vshufpd
stos
mov
jge
fpatan
mov
pop
icebp
movsl
mov
loope
les
jp
and
cld
xchg
jno
push
jne
lahf
sub
adc
inc
rcll
jmp
andl
in
adc
cs
xor
or
stos
lock
xor
xchg
cmc
jne
sbbl
cltd
mov
mov
push
inc
mov
in
xchg
xchg
cmpsl
testb
fcoms
pop
sbb
cmp
and
mov
stos
gs
xor
add
movsl
dec
xchg
xlat
dec
mov
test
ret
pop
pop
lret
testl
adc
loope
adc
mov
sbb
xchg
les
sub
cs
fisttps
jecxz
xor
mov
sbb
stos
push
out
mov
repnz
inc
subb
pushf
push
or
lea
ret
adc
subl
loope
faddl
dec
mov
lea
mov
in
movsl
mov
xchg
stos
imul
add
mov
test
jmp
or
idiv
out
push
sub
push
cmpsl
lock
pop
adc
rorb
cld
loopne
test
loopne
mov
push
sbb
sub
dec
push
mov
lcall
adc
loop
xchg
daa
rolb
pop
ficoms
dec
stc
xor
test
mov
leave
push
icebp
aaa
adc
mov
sbb
push
ja
or
xchg
shll
imul
jns,pn
fildll
aaa
gs
lods
mov
popf
mov
fsubr
xchg
xchg
int
dec
mov
jle
pushl
jp
lahf
stos
xlat
addr16
jnp
ret
out
js
nop
std
sbbb
pushf
and
gs
or
xchg
mov
pusha
popf
cmpsl
dec
pop
or
dec
outsl
and
push
pop
movsb
jno
cmp
xor
mov
lret
cmc
mov
icebp
adc
stos
ljmp
cld
movsb
mov
pop
fsubrs
aaa
mov
dec
call
popa
push
pop
outsl
mov
push
jnp
xor
mov
inc
mov
push
sbbl
lahf
fwait
es
mov
fldt
inc
push
jle
stc
out
inc
popa
cmc
mov
dec
xor
dec
xchg
xchg
sbb
xlat
outsb
xor
mov
sahf
nop
mov
mov
and
jo
add
arpl
movsb
inc
ja
in
das
mov
xchg
sar
mov
imul
in
push
leave
or
add
leave
fistpl
pop
lods
mov
fistpll
xchg
jns
mov
and
arpl
aas
sbb
addr16
mov
fsubl
stos
notb
push
or
enter
aad
dec
rcl
and
pop
sbb
dec
out
mov
outsb
call
xor
adc
into
jl
fbstp
push
test
and
sbb
int3
add
in
add
ret
jecxz
xchg
adc
xor
mov
ljmp
cld
cmp
mov
test
add
insb
or
xchg
in
movsl
jmp
push
mov
sub
sbb
sbb
test
inc
and
push
es
pushf
pop
push
ss
ja
sahf
sbb
mov
cwtl
mov
int3
aas
sbb
orl
outsb
fs
and
lret
repz
inc
and
push
cmpsl
ds
fdivl
or
addr16
or
pop
mov
cs
xlat
fdivl
inc
xor
dec
outsl
cli
test
add
test
mov
stos
inc
iret
ror
mov
jge
rcrb
and
push
data16
fsubr
sub
push
stos
lret
push
in
pop
push
pushf
movsb
pop
shl
repz
jge
bound
sahf
xchg
sub
push
mov
je
or
daa
mov
das
gs
fs
lcall
loope
ljmp
fldcw
mov
test
pushf
es
push
mov
add
call
popl
ds
jl
or
movsb
arpl
cs
lcall
or
popf
and
add
iret
or
push
cmpsb
mov
sbb
xchg
int
aad
lock
push
jbe
addl
mov
sbb
es
sbb
lret
imul
cli
add
jno
push
mov
es
insl
aad
lds
fwait
mov
sub
bound
scas
jmp
mov
fwait
aas
dec
incl
dec
notl
pop
lret
push
xor
mov
xor
shl
sbb
cmp
loope
xchg
loopne
imul
movsl
repz
aas
xor
xor
popa
pop
hlt
iret
fidivl
xor
insb
jns
mov
popf
insl
scas
cltd
shlb
mov
mov
test
and
pop
sub
pop
subb
pop
adc
pop
sub
or
ja
cmp
ficoml
test
dec
sti
mov
cmpsb
subb
lods
push
xor
adc
rcrb
subl
stos
test
call
sub
mov
jge
cmpsb
xor
nop
xor
inc
mov
xchg
imul
xor
mov
xorl
push
adc
adc
pop
movsb
mov
testl
scas
mov
lds
shrl
imul
sub
int
sti
gs
pop
mov
movsb
mov
dec
jl
pop
cmpsl
mov
ja
cmp
dec
mov
arpl
jmp
mov
cmpb
bt
pushf
xchg
xor
lock
cld
cmpsl
ret
and
addr16
stc
inc
push
lods
dec
out
adc
lret
xlat
cmc
sbb
fwait
xor
les
mov
mov
nop
xchg
mov
movsl
mov
out
lret
dec
loop
push
insb
rcll
aaa
pop
mov
outsl
shrb
adc
and
data16
cmp
jo
call
xor
cmpsb
sbbb
rol
sub
mov
xchg
xor
and
push
mov
mov
cltd
lock
mov
imul
lahf
push
pusha
pop
jmp
call
out
xor
dec
imul
insb
sub
popa
test
vpmaxsw
fsubr
jns
push
enter
xchg
stos
clc
or
outsb
xor
ss
cs
mov
sarl
outsl
scas
push
mov
lret
test
aaa
lcall
xor
pop
mov
pop
mov
lds
data16
and
subps
or
out
mov
roll
lods
clc
dec
cld
cmp
sbb
fdivr
sbbl
repz
push
stos
push
out
test
bound
imul
xor
push
adc
xchg
sbb
enter
ds
insb
xchg
dec
bound
insl
in
jno
fidivl
es
clc
jnp
test
sbbl
and
dec
jl
stos
stos
xchg
fmulp
xor
mov
push
mov
push
jne
adc
push
into
addr16
xor
mov
fbstp
stos
mov
xchg
add
mov
mov
or
aad
ficomps
insl
out
mov
aam
mov
push
ret
notl
sarb
or
adc
mov
and
pop
or
test
push
sub
dec
adc
or
jo
loopne
stc
ret
mov
dec
addr16
cmp
adc
pop
push
cwtl
or
jmp
sub
lods
dec
loop
or
call
jge
inc
mov
std
xor
sub
jno
pop
jnp
xor
insl
addb
insb
add
mov
fadds
enter
in
xor
popa
enter
mov
cltd
push
xchg
pop
iret
fucom
mov
outsl
in
in
psrld
les
mov
sbb
pop
pop
ss
shrl
jbe
pop
test
lock
stc
aam
movsb
sub
push
xor
xchg
stos
cli
sbb
int
test
pop
mov
push
movsl
cmp
scas
cmp
pop
adc
pop
repnz
loop
mov
mov
fiadds
mov
fs
inc
fidivs
test
or
gs
or
inc
ficomps
mov
push
test
mov
push
mov
in
xchg
cld
insb
insl
inc
fisubs
jge
aas
xor
gs
int
inc
fldl
and
fsubrl
add
lret
inc
cmc
xor
test
aaa
pop
adc
data16
cld
outsl
lock
and
push
pushf
mov
cld
and
push
lods
xchg
push
popf
pusha
or
psubd
cmc
gs
xchg
xchg
in
push
mov
add
and
mov
add
add
ljmp
mov
std
mov
sbb
mov
push
nop
sub
ljmp
in
in
inc
gs
std
insb
and
mov
pop
or
jb
imulb
pop
or
jae
popf
pop
push
jmp
jne
push
pushl
sbb
xchg
inc
lret
push
inc
add
clc
and
cmp
bound
jp
in
sub
arpl
inc
sbb
lcall
stos
mov
loopne
aaa
push
jp
cmpsb
mov
imul
sbb
adc
loope
xor
and
out
push
adcb
inc
cmp
pop
enter
push
mov
repnz
scas
stos
rcrl
sti
xor
shr
loopne
mov
mov
and
fdivl
inc
sub
flds
mov
mov
mov
inc
lds
sbbl
mov
inc
pushf
ret
and
loop
paddsw
stos
rclb
mov
push
jle
aam
jb
cmp
subl
cmp
aas
and
leave
nop
adc
pop
push
out
lods
pop
push
out
fsubrs
xchg
lret
and
push
es
pcmpgtw
cld
fildll
sub
cmpsl
ljmp
rorl
cmp
push
cwtl
pop
lds
js
inc
push
jmp
ret
push
jo
lods
lods
sub
ljmp
dec
clc
bound
inc
pop
cli
xor
shrb
pushf
sbb
mov
xor
adc
call
push
jo
das
sbb
cmpsl
fxch
jg
jle
cs
shrb
shl
stc
ss
test
inc
adc
iret
leave
fnstenv
out
cmc
push
inc
dec
test
in
xchg
mov
pop
mov
sbb
int3
arpl
cmpsl
jb
outsl
xor
cmpsb
mov
ds
xchg
jg
mov
movsb
daa
inc
stc
add
cmpb
or
out
xor
icebp
sbb
fidivrl
mov
add
clc
out
and
adc
cli
stos
xorb
jp
sub
dec
pop
push
jp
mov
std
push
data16
mov
inc
stos
sahf
xor
xchg
std
adc
dec
inc
sbb
in
xchg
cwtl
fiadds
push
xchg
pop
data16
lcall
not
fwait
mov
dec
repz
mov
mov
jmp
mov
fdivl
nop
sbb
dec
rorl
xor
fildl
arpl
push
mov
enter
ficomps
nop
mov
lret
imul
mov
jge
and
mov
sbb
pop
imul
imul
inc
xor
mov
push
or
xchg
sub
out
das
cmp
in
xor
sbb
test
lret
jge
jne
sbb
mull
iret
in
pop
sbb
int3
pop
arpl
mov
movsl
jnp
xchg
add
mov
outsl
pop
sub
mov
pusha
cmp
pop
ffree
data16
mov
adc
outsl
or
or
lods
repnz
inc
es
ds
push
nop
subl
xchg
lcall
push
loopne
sub
or
cmp
call
sbb
mov
addr16
cltd
lret
mov
or
lahf
xchg
cli
icebp
inc
mov
frstpm(287
daa
les
stc
cmpsb
ljmp
insb
ss
fwait
push
or
pushf
lea
ret
xchg
dec
dec
xor
testl
imul
repnz
xor
sub
add
mov
push
sub
mov
movsl
cmc
dec
andl
xlat
mov
inc
sub
lock
cmc
adc
xchg
data16
xchg
aaa
xchg
icebp
mov
push
in
and
lea
loopne
andl
ja
ss
loopne
arpl
js
repz
jo
jecxz
adc
sbb
sub
jmp
push
jne
inc
fmull
fadd
dec
stos
out
sub
out
cmpsl
adc
fdivrs
xor
popf
xor
push
test
xlat
adc
xchg
jp
inc
and
push
inc
xchg
jae
shrl
notb
sbb
out
pop
push
out
addr16
jne
repz
mov
and
shrb
lock
mov
mov
cltd
out
mov
mov
and
jg
pop
xchg
jne
mov
dec
pop
imul
call
lods
push
mov
and
push
pushf
xlat
cmp
and
xchg
scas
jecxz
adc
lahf
jmp
cltd
test
push
sbb
cmc
pop
xchg
xchg
push
mov
outsl
or
push
movl
popf
dec
mov
push
inc
clc
push
dec
xor
push
ret
lods
lret
cld
montmul
cmpsb
inc
sbb
aam
or
sub
xchg
mov
jmp
cmp
fists
cwtl
adc
dec
inc
cld
xor
xor
dec
scas
sti
lcall
mov
stc
nop
ss
lcall
or
test
jmp
push
pop
mov
outsb
mov
cltd
int3
xchg
adc
adc
pop
xchg
cbtw
in
mov
lret
push
mov
push
inc
sarl
mov
add
pop
out
or
or
addr16
daa
lock
and
sbb
lcall
adc
mov
fidivl
jns
aas
lods
inc
and
popa
xchg
test
inc
fildll
adc
and
push
js
mov
cs
mov
int
das
sbb
or
loop
test
ss
ret
or
mov
push
lods
cmp
fidivl
subb
daa
mov
jo
inc
and
call
mov
call
pop
inc
cwtl
outsl
or
mov
xchg
insl
cmp
imul
jae
insl
sbb
push
xchg
out
xor
cmp
pusha
subb
rcrl
mov
popa
sub
iret
mov
js
xor
es
push
shlb
xchg
test
or
rcr
popf
scas
ret
enter
sub
dec
loope
inc
out
jg
loop
add
add
jnp
pop
dec
fistpll
mov
jp
data16
cmp
jae
fmuls
cmpsl
dec
mov
test
add
pop
sbb
lcall
sbb
pop
xor
jns
xchg
lahf
pop
daa
mov
mov
pop
or
mov
inc
enter
mov
or
hlt
pop
sub
mov
dec
clc
dec
jl
in
addr16
aad
mov
inc
mov
test
icebp
and
pop
push
dec
fsubl
int3
repnz
mov
fcoml
enter
push
aam
lret
mov
mov
rcl
pop
addr16
jne
daa
add
lret
aas
pop
leave
and
dec
inc
mov
cmpsl
push
mov
in
push
std
cmp
adc
mov
je
les
push
sbb
adc
sub
test
dec
xlat
xor
movsl
xchg
xor
jns
mov
js
mov
pop
repz
das
mov
sub
cltd
out
test
cltd
push
es
test
pop
enter
stc
aaa
cli
cmc
nop
jle
ret
sbb
arpl
nop
fs
mov
test
cmp
pushf
sbb
ret
and
push
imul
cld
fcmovu
aas
mov
imul
addl
lret
insb
dec
mov
cmpl
adc
pop
jge
pop
stos
lods
shrb
les
push
ljmp
loopne
lea
dec
cld
mov
cmp
mov
sbb
aam
mov
dec
dec
push
shl
adc
scas
hlt
mov
inc
icebp
lret
daa
jbe
mov
sbbb
cwtl
pop
inc
mov
mov
jbe
cmp
adcl
jle
subl
in
rol
lds
ret
xchg
xor
mov
fsubp
jnp
cltd
cmp
shll
push
scas
or
outsl
adc
pop
mov
mov
es
jns
xor
mov
mov
inc
pop
mov
jge
cmp
cmp
push
add
pop
dec
shrl
pop
aas
or
push
in
mov
and
pop
push
mov
mov
sbb
mov
in
push
mov
movsl
jae
mov
adc
cmp
add
cmp
inc
arpl
add
lret
popa
cmp
xor
stos
pusha
js
jae
jnp
movsl
or
add
add
push
fildll
inc
mov
fistpl
lods
push
mov
lds
inc
hlt
rcrl
rol
push
push
cmp
scas
ret
addr16
les
and
mov
cltd
jmp
sbb
dec
pop
insb
out
scas
pop
or
xor
cmp
pop
fwait
xchg
out
fptan
lea
jae
es
xor
ret
scas
mov
adc
and
rcrl
out
or
pop
test
add
scas
addr16
sub
xor
sub
inc
jae
push
jp
jl
pop
or
aad
xor
mov
jne
stc
cltd
cmpsb
lods
adc
adc
push
push
movsbl
cld
movsb
mov
repz
ljmp
pushf
cli
mov
dec
in
std
loop
fmuls
inc
push
sub
mov
xor
lcall
jae
cmp
lods
inc
notl
mov
fadds
xchg
push
cmpl
lds
jecxz
pop
sti
pushf
scas
imul
fdivl
enter
dec
sbb
outsl
pop
sub
imull
iret
in
lcall
fistpll
adc
and
and
pushl
les
push
pop
out
jl
inc
fs
cmc
pop
mov
in
js
push
inc
int
mov
cwtl
fldt
js
lods
nop
inc
dec
dec
inc
repz
or
add
gs
ficoml
out
and
jno
mov
mov
loopne
loope
jecxz
ja
xchg
ds
sub
add
sarl
cld
lret
mov
or
test
in
fcomp
insl
lock
stos
xchg
fdivl
push
lods
test
enter
ror
cmp
push
inc
fidivrs
mov
cmpsb
add
popf
push
das
sbbl
jo
js
pop
adc
sub
xor
xor
cld
adc
mov
sub
jbe
popa
pop
jnp
mov
aad
add
mov
pop
pop
xrelease
or
jp
xor
cmp
dec
lretw
pop
inc
fstl
stc
push
js
push
lahf
adc
add
cmp
dec
sub
jnp
ret
frstor
int
movsb
arpl
adc
aaa
enter
lea
inc
fadds
pop
push
fidivs
aaa
pop
mov
push
lods
push
loope
xchg
movl
daa
dec
and
aaa
mov
icebp
or
and
push
pop
loopne
inc
cld
insl
aad
bound
adc
in
repnz
add
loope
dec
out
sahf
into
dec
cmp
mov
push
xchg
pop
ficoms
ds
pop
jg
jae
call
jg
jge
test
insl
movsb
rcrl
call
mov
pop
and
jl
icebp
xchg
pop
dec
sbbl
je
stc
int3
xor
or
ds
aas
dec
and
or
xor
notb
into
add
leave
hlt
enter
inc
pop
lea
ja
add
xchg
popa
fisttps
adcl
dec
lock
sti
lea
ret
pop
mov
sub
aaa
xchg
loopne
hlt
push
lret
jbe
sub
mov
cs
add
fwait
jp
in
lods
sti
push
and
sub
mov
xor
rclb
pop
push
mov
xchg
sarl
imul
or
push
xchg
add
loop
dec
and
mov
sbb
mov
push
sarl
ss
shrl
imul
test
in
imul
jns
cmp
lahf
movsb
roll
and
cli
cmp
sub
cmp
mov
or
adc
sti
push
and
ret
sbb
int
mov
fwait
int
mov
dec
out
clc
mov
roll
jne
sbb
sti
xchg
movsl
shl
out
clc
sub
cmp
lahf
hlt
or
int3
out
fildll
adc
cli
cwtl
setnp
je
inc
ffreep
aam
out
mov
sbb
lods
dec
rclb
or
xor
popf
lods
inc
out
out
dec
fdivl
loope
jmp
xor
cli
inc
mov
add
sub
aad
push
cmpb
lods
xor
cli
scas
xor
sbb
jbe
pusha
std
leave
sub
adcl
xor
dec
in
cmpsl
lods
int
shl
ret
dec
pop
jo
ds
gs
test
stos
dec
mov
cmc
cli
repnz
add
sbb
xchg
int
jecxz
and
sbb
int
cmp
jbe
gs
push
test
sahf
lock
icebp
push
scas
adc
leave
pop
and
fidivrl
stc
cwtl
or
adc
jae
push
test
xorl
dec
sbb
mov
mov
dec
lahf
xor
divl
cld
jl
fmuls
push
mov
cmp
fs
fmul
fcompl
arpl
dec
xchg
scas
lea
rcll
xchg
or
mov
rcl
adc
adc
mov
push
movsl
sub
mov
pop
cld
cmp
mov
jl
push
cltd
cli
push
rorb
int
push
dec
xchg
mov
sub
fwait
rcrl
jb
mov
mov
jmp
or
aad
outsb
xchg
mov
jecxz
aad
lret
call
cmp
mov
push
sahf
add
shll
cli
pop
aaa
sub
sahf
iret
inc
leave
mov
icebp
outsb
pop
sub
int
mov
iret
out
add
jmp
sbb
insl
xchg
das
pop
dec
fs
push
lret
out
add
add
les
shlb
sbb
dec
pop
dec
dec
pop
loopne
pop
hlt
xchg
cmp
sbb
repz
call
into
test
and
mov
leave
jne
sbb
or
mov
adc
mov
das
lcall
inc
leave
data16
push
sbb
into
cmp
lret
hlt
iret
mov
repz
je
aam
dec
icebp
xchg
dec
pop
jb
xchg
or
pushf
xorl
ja
mov
add
jbe
mov
or
mov
sub
clc
lahf
push
mov
add
rolb
jmp
pop
aam
pushf
fidivl
lret
jae
clc
aaa
xchg
fs
mov
xchg
cmp
daa
xorb
jbe
cli
xchg
jecxz
jns
adc
xor
clc
xchg
lcall
lds
idiv
call
dec
adc
sbb
jecxz
stc
pop
sub
cmp
sub
pop
das
push
insb
sti
xchg
jp
sub
mov
rorl
scas
insl
rclb
in
lcall
sub
jge
mov
mov
lods
pop
push
popa
into
jae
stos
sub
adc
xor
xchg
mov
adc
push
adcl
mov
pop
mov
adc
sbb
add
pop
mov
gs
mov
mov
jae
sbb
add
fistpll
and
and
cmp
jecxz
lret
out
sub
xchg
pop
sub
or
xor
jl
outsb
scas
jl
cli
push
push
mov
pusha
fstpl
ret
ret
pushf
cli
push
in
aaa
sbb
add
xor
inc
sub
xchg
repnz
adc
test
mov
mov
rorb
imull
push
pusha
and
cmova
mov
imul
mov
in
xor
testl
fistpll
jl
loopne
arpl
mov
leave
sbbl
adc
les
cmp
mov
inc
imul
movb
dec
pop
movsl
mov
shlb
xchg
ret
insl
xchg
mov
sahf
xor
pop
jle
or
mov
outsb
and
lods
rolb
xchg
or
rcl
hlt
lret
icebp
lds
adc
sbb
bound
mov
cmp
pop
jl
and
cltd
lcall
pushl
iret
fiaddl
sub
notb
add
stos
dec
cmp
rorl
jns
jno
mov
xchg
ret
mov
and
push
in
popf
xor
inc
inc
or
adcb
decl
ds
add
lret
lahf
mov
or
ljmp
jbe
push
push
test
xchg
dec
mov
lock
lods
inc
rcl
aas
push
fsubrs
pop
pop
add
jle
pop
call
sub
and
js
mov
in
shrb
mov
add
jae
gs
std
lds
xlat
or
jg
and
pop
gs
add
xor
fnstenv
and
cmp
lret
sahf
and
sbb
rcll
lds
xor
shrl
test
xlat
lods
and
addr16
fs
mov
mov
sub
test
push
fistps
fwait
mov
lock
dec
pop
mov
mov
mov
jmp
stc
fidivs
aas
xchg
jmp
int3
jns
dec
lahf
sti
pop
gs
in
adc
leave
and
mov
aaa
loop
mov
jge
mov
push
js
push
outsl
mull
dec
xor
adc
jmp
pop
jg
inc
xor
int3
imull
sbb
and
sti
sbb
dec
add
pop
mov
int3
pop
push
lret
lahf
sub
cwtl
imull
mov
sbb
push
mov
cmp
xchg
outsb
lahf
lds
lcall
dec
aaa
leave
imull
daa
pop
add
in
push
icebp
enter
jg
push
xor
fidivs
int
push
out
cli
xchg
faddl
test
inc
stc
mov
in
or
jg
insb
mov
cmp
push
icebp
and
movsb
cmp
inc
js
jle
ret
inc
lahf
xchg
shlb
stc
push
fs
sbb
mov
sbb
loop
push
pop
scas
inc
jnp
push
jnp
push
jge,pn
hlt
mov
hlt
enter
add
dec
inc
xchg
outsb
stos
popa
xchg
sub
add
arpl
cld
stc
andl
inc
dec
sbb
inc
lret
imul
fstpl
roll
xchg
dec
gs
loopne
sub
inc
inc
fadds
mov
dec
xchg
lods
adc
arpl
inc
cmp
and
fucomip
sub
sub
push
xchg
arpl
cmpsb
dec
fsubrl
sti
pushf
add
cmp
pusha
mov
pop
lock
test
xchg
fnstsw
pop
cmp
xchg
xchg
pop
shrl
mov
mov
addb
and
adc
cmp
sub
ficomps
push
test
mov
sbb
push
lods
scas
sub
stos
cmp
mov
dec
pop
test
cmp
sbb
jl
pushf
lock
mov
xlat
jecxz
dec
das
add
jae
dec
push
out
cmpsl
push
ljmp
and
mov
mov
adc
flds
repz
sbb
mov
adc
lcall
fucomp
cmp
mov
sbb
in
jno
xchg
fcomps
adc
pop
inc
pop
les
lahf
sub
mov
xchg
xchg
shl
dec
cmp
lods
rcrb
or
jg
jge,pt
jmp
pop
mov
cmp
mov
jecxz
mov
pop
hlt
add
fs
int3
mov
pop
lods
mov
pop
es
mov
aas
cmp
cmovnp
lcall
clc
or
imul
jge
data16
outsl
mov
mov
rol
lcall
push
lods
fcomp
or
popa
xorl
lret
icebp
push
jns
movsb
sbb
inc
pushw
ret
aaa
sub
cld
pop
test
negb
or
loopne
pop
and
mov
clc
loopne
bound
out
jb
nop
mov
mov
and
mov
add
ljmp
in
mov
ficoms
mov
dec
mov
cwtl
cmp
lods
mov
sahf
cwtl
shrb
fnstsw
cmovge
xor
stos
mov
sti
js
jb
mov
fisttpll
xor
push
xchg
sbb
sub
mov
inc
and
jb
out
xchg
cli
cmc
test
sbb
out
pusha
test
out
imul
daa
mov
sub
mov
add
in
loop
hlt
xchg
add
ja
cs
push
subb
test
sub
and
sub
inc
sbb
ret
mov
cmp
movsl
mov
adc
sub
das
or
fisubrl
push
fnstenv
movsb
outsl
inc
loope
xchg
jb
sbb
cmpsb
js
push
fsubrs
push
jnp
iret
jae
subb
pop
out
xchg
nop
pop
in
hlt
popl
in
shl
test
cs
out
xchg
aam
mov
mov
mov
fidivrl
mov
repz
cltd
sub
and
push
mov
sub
clc
mov
sub
cli
bound
mov
insl
ja
dec
pusha
int
in
orl
or
jl
dec
add
mov
aas
mov
xor
push
inc
push
jmp
mov
fcmove
leave
push
inc
cmp
xor
stos
inc
repz
into
inc
sti
aaa
into
jmp
mov
stos
fsubl
out
arpl
dec
loop
and
das
cmp
push
out
fdivrs
push
call
bswap
outsl
daa
adc
sbb
and
or
pushf
mov
adc
pop
or
imul
andl
mov
ret
cmp
pop
cmc
cltd
ffree
pop
btc
adc
rolb
mov
cs
mov
ret
sbbl
ja
outsl
push
mov
out
xchg
pop
icebp
addr16
or
sub
das
popf
xor
aad
lods
push
ret
outsb
sbb
jno
adc
cmp
xor
bound
lods
inc
xor
fidivs
int
ljmp
pushf
xor
sub
mov
je
test
std
xchg
mov
lea
dec
inc
fidivrl
stos
jmp
mov
mov
mov
test
push
ss
adcb
pop
shlb
sbbl
sbb
test
mov
mov
inc
pusha
push
out
jbe
jns
sarb
cs
in
iret
pushw
dec
xor
xor
push
ljmp
adc
dec
jecxz
fisubrs
pmuludq
jno
ds
outsb
out
test
and
mov
push
xchg
test
push
mov
fcmovu
jne
out
xchg
cs
adc
out
inc
cs
xchg
pop
iret
rcrl
sbb
push
outsb
cmp
lahf
popa
lds
montmul
cmpsb
lds
sub
ds
es
es
mov
lods
inc
stos
hlt
ja
and
fnstenv
pop
cmc
mov
scas
adc
roll
daa
xor
dec
out
add
add
push
leave
pusha
adcb
ss
ja
addb
push
cmp
stc
ljmp
mov
pop
lock
fidivl
xchg
fnsave
mov
sarb
insl
mov
pop
lock
data16
push
in
loop
pmullw
imul
cwtl
mov
mov
jbe
pushf
cmpsl
add
enter
push
js
mov
loop
aas
xchg
shll
fcomps
or
cmp
push
push
movsl
push
mov
movsb
fisubrl
or
pop
icebp
add
mov
pusha
and
cmpsb
cmp
stos
aam
pop
or
ljmp
ljmp
jp
bts
shlb
mov
jp
pop
stos
insb
adc
inc
mov
jns
cmp
nop
daa
lods
or
mov
lods
loop
push
stos
or
cmp
and
jnp
aad
jnp
mov
sbb
test
je
pop
test
jne
jno
push
or
mov
jge
scas
inc
adc
std
xchg
pop
lock
and
in
adc
mov
add
mov
fdiv
mov
arpl
pop
cltd
sub
popa
mov
stc
nop
mov
fnstenv
into
push
imul
inc
bnd
or
arpl
rclb
test
push
push
imul
lcall
cmpb
outsl
push
pushf
int3
and
ret
adc
cmp
test
js
or
jae
dec
pusha
jae
xchg
loopne
sub
sbbl
xor
push
xchg
call
lret
bound
outsb
movsl
cmp
lock
mov
lea
mov
and
add
and
stc
nop
shl
sub
push
and
sub
xchg
adc
subb
jge
mov
insl
add
fwait
out
lret
mov
popa
pop
notb
xchg
add
gs
xchg
or
mov
fwait
xor
cmp
xchg
or
mov
addl
pop
addr16
xchg
or
mov
mov
jmp
and
sub
idiv
xchg
subl
and
mov
andl
bnd
and
scas
pushf
cmc
stc
nop
sub
mov
jecxz
mov
rolb
testl
sbb
push
and
jle
dec
jecxz
scas
xchg
filds
inc
fidivl
dec
cmc
mov
test
scas
pop
mov
or
cmp
jb
jmp
cmc
sbb
int
cmp
shrl
out
jno
pop
xchg
fwait
xor
lar
in
push
out
sahf
mov
iret
or
jle
pop
repz
mov
add
ja
fnstenv
test
pop
repnz
lock
testl
sub
jnp
addr16
pop
sub
add
outsl
add
xorl
call
xchg
out
fstl
subb
dec
jge
in
scas
lds
sahf
xchg
cmp
subb
in
iret
mov
dec
loop
pop
dec
in
mov
addr16
mov
test
xorb
sarl
mov
mov
cwtl
mov
out
xchg
rcrl
push
push
jbe
xor
imul
test
push
test
lret
jg
add
add
mov
push
and
test
cmpsb
movsl
mov
in
stc
notl
and
cld
mov
xor
insl
stc
push
iret
andw
mov
cld
out
cmp
push
and
jno
add
xor
inc
fcomi
jmp
insl
sbb
ss
add
loopne
std
out
mov
push
or
cmpsl
inc
shl
xchg
sbb
inc
dec
xlat
pop
testb
test
dec
sbb
ret
push
xlat
add
std
sbb
dec
and
movsl
push
aaa
into
push
rolb
add
push
in
pop
pop
ja
dec
les
stc
rorb
jbe
and
ds
les
fs
and
xchg
push
cs
pop
pop
into
xor
inc
std
xchg
imulb
in
pop
xor
and
mov
lods
inc
pop
aaa
pop
data16
cmp
lock
cs
pop
fbstp
enter
shrb
push
adc
movsl
cmp
addr16
jmp
stc
mov
pop
jecxz
ds
add
lcall
push
ljmp
dec
in
sbb
les
addr16
and
push
fwait
inc
cmpsl
js,pt
and
rorb
stos
inc
inc
icebp
xor
xchg
inc
jecxz
jb
aam
in
icebp
or
push
jno
cmp
xchg
stos
pop
pop
and
mov
xor
lods
xchg
sub
mov
mov
loope
cs
dec
pop
idivb
int
gs
daa
ds
xchg
mov
add
and
montmul
cmpsb
add
push
jae
inc
fcompl
jecxz
leave
jns
inc
scas
ljmp
push
inc
in
add
daa
adc
pop
xchg
mov
stos
out
cmpsb
adc
xlat
out
xor
je
pop
jne
push
xchg
add
movsb
fimull
push
clc
sub
out
pop
sbb
xchg
int3
mov
in
pop
cmp
dec
or
scas
aas
imul
cmp
scas
jnp
fisttpll
and
cmp
jge
xor
jae
push
fwait
xor
xchg
sub
loopne
dec
adc
shrl
mov
cltd
mov
gs
mov
jne
mov
and
inc
mov
or
mov
frstor
mov
aaa
data16
daa
dec
lock
add
mov
hlt
pop
adc
fimull
xchg
jns
dec
dec
scas
jno
pop
enter
fwait
andb
inc
es
cmpsl
dec
lret
dec
pop
in
movsb
mov
icebp
inc
fmulp
dec
addr16
inc
mov
dec
repnz
ror
push
adc
xor
in
leave
pusha
mov
mov
cs
jmp
aaa
xchg
mov
sub
xor
loopne
jmp
movl
cmp
push
shr
xchg
mov
pushf
xchg
cmc
jg
mov
push
mov
sbb
or
cmc
sub
push
rcl
push
jmp
cmp
xor
or
xor
xchg
xchg
scas
andb
adc
jl
test
or
in
sar
popl
dec
mov
test
stos
gs
dec
mov
xchg
push
repz
clc
shrl
adc
mov
clc
sbb
clc
and
cltd
and
dec
push
stos
jo
inc
jg
push
cld
pushf
xor
pop
push
mov
out
mov
mov
dec
loope
push
mov
and
js
stos
insl
push
jmp
lock
mov
ret
roll
add
mov
sahf
imul
push
stos
inc
out
and
jl
shll
fmull
ret
repz
push
adc
sub
loope
test
stc
insb
add
pop
into
orl
imul
dec
pushf
dec
or
addr16
mov
out
xchg
sbb
mov
shll
loope
bound
xlat
jmp
fsubl
ret
adc
call
stos
sbb
pop
sbb
lods
push
fidivs
sbb
nop
movsb
roll
sbb
lods
pop
cli
call
lds
std
hlt
out
xor
stos
negb
xlat
loop
in
divb
push
pop
cmp
popf
push
fidivl
sbb
xor
push
loope
cmpsl
cwtl
xor
push
imul
sub
adc
mov
ficoms
jne
roll
and
add
cld
call
mov
xchg
enter
mov
testb
cmpsb
test
lahf
cmc
call
cmpb
pop
or
xchg
sub
dec
xchg
jnp
clc
fldl
sub
xor
adc
je
clc
and
icebp
lret
push
shlb
icebp
dec
mov
lret
cmp
rorb
sub
rcrl
lret
jo
test
stos
inc
hlt
jno
add
lods
mov
jns
xor
and
daa
cmp
aad
repnz
mov
pop
mov
stos
inc
push
test
dec
sbb
popf
mov
and
inc
jbe
sub
int3
jno
mov
mov
jmp
shlb
xchg
out
sbb
jo
push
daa
std
and
cmp
fnsave
or
inc
xchg
ljmp
xchg
iret
cmp
sbb
fidivl
and
loope
cltd
inc
pop
stos
arpl
push
mov
shlb
inc
test
pusha
lret
pop
filds
iret
mov
aad
mov
mov
clc
and
lahf
test
pop
int
insl
ret
push
add
xchg
lahf
clc
sub
push
mov
pop
icebp
push
ljmp
jmp
push
add
setbe
sbb
das
lcall
sub
and
adcl
xchg
and
xchg
add
repnz
or
xchg
xchg
sbb
push
loope
jg
rorl
paddusw
inc
enter
ljmp
or
push
stos
das
jecxz
aas
sti
sub
sbb
inc
nop
setp
out
cmpl
xchg
in
pushf
mov
mov
jne
mov
or
scas
out
or
mov
or
leave
add
mov
scas
cmp
or
or
sbb
mov
adc
insb
add
dec
insb
call
fisttpll
push
mov
push
cmp
push
pop
out
sub
mov
xor
push
ljmp
ret
cmp
mov
das
in
push
bound
and
push
iret
cwtl
jne
jle
lock
loope
les
fcmovb
sbb
out
and
adc
fimull
js
inc
ds
aas
adcl
sbb
loope
sbb
shl
dec
call
cmpsb
mov
and
lods
pop
out
js
popa
aas
mov
pushf
xor
lods
jo
sbb
mov
mov
call
arpl
mov
enter
seta
shll
jmp
adc
and
sbb
fs
or
shll
call
inc
mov
pop
mov
sbb
repnz
add
sarl
sub
in
dec
enter
add
xchg
mov
nop
cmpsb
jo,pt
adc
scas
cmp
sbb
scas
sbb
dec
test
jmp
push
or
notrack
xlat
add
jmp
or
test
jmp
mov
call
or
sbb
scas
pop
or
div
daa
mov
in
daa
hlt
int
dec
dec
lahf
xchg
pop
pusha
scas
jae
pop
push
cmp
shlb
mov
inc
xor
mov
adc
imul
fwait
inc
lret
jp
or
addb
pop
hlt
dec
test
out
pop
mov
jmp
in
mov
out
mov
cmpsb
mov
jns
add
push
cmpsl
mov
mov
fwait
lods
faddl
in
fldl2e
arpl
enter
lods
sbb
mov
hlt
sub
aam
outsb
mov
shl
pop
rol
icebp
sbb
int3
cmp
and
lea
dec
repnz
mov
aas
daa
mov
fcmovne
jbe
rcr
pop
or
loopne
rclb
aad
mov
jnp
adcl
dec
mov
scas
push
call
call
lods
stos
inc
fildll
movl
mov
and
cld
adc
jecxz
and
inc
scas
inc
mov
lret
sbb
jmp
jp
sbb
testl
mov
jb
push
adc
pop
mov
call
aas
cmc
dec
pop
push
lret
cmp
or
xlat
outsb
pop
je
int3
insb
jge
ss
and
fidivl
loopne
cmpsl
cwtl
xor
sub
mov
mov
push
sti
inc
adc
adc
popf
ljmp
cmp
xor
and
mov
testb
dec
mov
orb
ja
stos
lahf
jae
das
out
stc
mov
fildl
push
sub
mov
xor
mov
xchg
das
enter
mov
fnstsw
pushf
nop
iret
aas
fs
ja
imul
xor
stos
xchg
dec
mov
sub
push
ljmp
xor
sub
lahf
fistl
cld
out
or
call
test
mov
mov
xchg
sbb
mov
sti
mov
pushf
xor
adc
xor
add
push
lods
and
dec
fsubrs
xchg
call
xor
jne
dec
inc
or
push
pop
mov
inc
js
cmpl
lea
jnp
movsl
insl
xchg
xchg
jnp
dec
pop
aam
mov
xlat
dec
insb
jne
jl
pop
call
cmpl
jae
pop
pop
adc
and
mov
and
aas
ljmp
cmp
inc
shll
mov
addr16
hlt
inc
dec
mov
add
jbe
add
pop
add
push
hlt
pop
push
sahf
in
test
dec
stc
sub
hlt
dec
mov
push
lret
mov
hlt
fisttpll
pop
pushf
mov
lods
aas
xor
out
xor
jo
push
outsl
inc
out
pop
cmp
push
mov
push
cmp
ret
cs
mov
inc
push
gs
call
jl
inc
movl
sub
orb
jl
cmpsl
fadds
pop
mov
pop
add
ja
xchg
inc
lock
mov
dec
jge
pop
call
fmuls
rorl
pop
mov
mov
push
cmpsb
cmp
cs
mov
stc
xor
jg
scas
outsb
lahf
mov
cltd
jne
cmpb
jge
pushf
mov
loopne
lahf
cmpsb
cld
xchg
fldenv
cmp
jg
inc
rcrl
add
cmp
pop
aas
mov
pop
ss
mov
sbb
pop
add
jno
sti
sub
shrb
ljmp
mov
xchg
sub
shr
xor
fsubr
xor
or
das
arpl
fstpl
in
aas
mov
sti
fcoms
test
lret
ljmp
in
in
std
sbb
mov
mov
jp
leave
pushf
xor
mov
in
pop
leave
lea
adc
test
int3
push
sarb
incl
jmp
rorb
out
rcl
dec
out
mov
ret
cmp
popf
cmp
je
inc
jbe
popa
xchg
les
sub
pop
lods
jl
fcoml
inc
dec
aad
push
les
sbbb
sahf
xchg
jle
sub
cmp
jp
inc
call
xor
inc
jmp
ss
clc
jmp
outsl
add
xchg
jp
lcall
adc
popf
add
insl
jl
sub
xor
jp
mov
mov
push
aad
jge
inc
stos
fcomps
repz
lods
outsl
rcll
xchg
cs
inc
leave
test
and
cmp
sbb
addb
fwait
mov
arpl
lock
loop
scas
je
shlb
lock
clc
bt
clc
sub
lret
push
imul
jae
and
add
or
adc
add
jb
push
int3
out
inc
mov
or
imul
cltd
jmp
pop
lret
or
out
sub
out
aad
popa
lahf
mov
dec
ror
loop
lods
loopne
cmp
shll
push
sub
push
adc
cli
xor
es
inc
sti
jnp
je
int
jne
sub
jno
sub
jno
lds
dec
mov
jge
jbe
sarb
inc
scas
loop
cmp
add
in
mov
xchg
sbb
imulb
out
mov
add
mov
inc
mov
mov
mov
test
orb
or
pop
lret
mov
repz
lret
iret
dec
and
inc
mov
ret
lret
mov
dec
mov
into
cmc
jl
int
pop
out
and
popa
das
repnz
sti
filds
mov
push
rolb
push
xor
stos
adc
push
mov
ja
push
fs
pop
out
sti
test
aam
xchg
lahf
xorl
xchg
imul
jl,pn
jp
fnstenv
inc
inc
cmp
push
push
add
lds
jo
dec
ss
add
out
jmp
sarl
push
push
aad
vpsubd
shrb
mov
mov
pop
ja
mov
sub
mov
xor
rclb
jecxz
xchg
fistps
or
jg
xchg
dec
mov
pop
mov
scas
hlt
outsl
mov
mov
rcrb
fcomip
cmp
and
inc
mov
push
fidivl
mov
pop
adc
mov
pop
pop
cwtl
push
loopne
cltd
scas
bound
or
sbb
mov
and
lret
out
xchg
loopne
sub
xchg
jnp
testb
and
and
sbb
aad
jg
or
data16
cwtl
imul
push
lods
fistl
sub
pop
jno
outsl
fs
leave
pop
xor
jb
add
lods
cmp
mov
addb
mov
add
pushf
mov
lock
cmp
dec
lds
push
andl
sub
daa
cmp
subb
rol
ds
hlt
lds
pop
add
std
daa
and
sbb
js
arpl
pusha
and
push
outsl
cmp
inc
pop
jle
mov
push
test
lods
dec
inc
xchg
jl
pusha
fs
mov
add
cmp
xor
in
in
jecxz,pt
popa
or
inc
lock
ret
and
stos
shl
in
xor
fisttpl
push
int
or
pop
xchg
sarb
jecxz
hlt
scas
jne
mov
ljmp
or
xlat
lds
shll
mov
adc
add
cmc
out
inc
mov
out
stos
pop
int
mov
dec
mov
mov
addr16
dec
jbe
bound
jnp
xor
repz
lcall
mov
jo
xor
xchg
xor
ja
stos
jge
fsubs
icebp
push
adc
leave
test
clc
sub
cmc
hlt
mov
mov
jmp
cmpl
jno
dec
jo
xchg
xchg
dec
aas
mov
nop
dec
imul
ja
cwtl
xor
mov
mov
movsl
jnp
aam
std
push
icebp
pushf
xor
mov
icebp
cli
ss
mov
cmp
addb
maxps
fwait
add
enter
addl
out
or
adc
add
in
lock
xlat
lret
sub
ss
loop
js
mov
sti
jl
out
jo
call
testb
inc
pop
inc
mov
pop
push
cmpl
out
push
rorb
mov
arpl
mov
mov
xchg
push
cmp
nop
jl
cmpl
pop
aad
jns
dec
test
orb
pop
int
dec
cmpl
pop
cwtl
das
pop
and
ret
mov
mov
rcll
sub
rorl
out
fists
or
aas
mov
sub
outsb
cmp
push
loop
cld
mov
push
or
cli
sub
mov
ss
xchg
loop
enter
aaa
ljmp
inc
ret
insb
add
fs
jo
push
arpl
lods
jae
jns
insl
les
mov
cmp
inc
mov
cmp
cltd
clc
pop
shrl
xchg
fldl
mov
mov
push
mov
jns
sbb
pop
xor
add
and
js
in
jne
js
inc
sbb
jae
push
mov
xor
mov
arpl
xchg
push
mov
add
cwtl
imul
popf
fidivl
inc
sub
pop
pop
ss
xchg
jge
adc
add
cmp
pop
fs
ds
xor
imul
notl
sbb
negb
sub
lods
and
aad
lcall
sub
ljmp
ss
sbb
and
aas
mov
jo
repnz
icebp
fnstsw
leave
mov
pop
or
jne
roll
inc
cmpsl
jecxz
dec
mov
push
addr16
rclb
out
cmpl
adc
xor
ret
loope
pop
lods
jl
xchg
push
pop
xor
ret
mov
ljmp
push
cli
arpl
adc
cmp
add
sbb
dec
ret
repz
mov
ret
loopne
mov
cmpsb
xchg
xchg
push
xor
lods
idiv
mov
test
dec
std
push
int
pop
mov
mov
xor
out
lods
loope
pop
mov
jecxz
cmp
pop
movsb
cs
fimull
xchg
mov
js
mov
ret
dec
adc
repnz
fwait
test
cli
cld
ret
cmp
mov
jl
fadds
ret
pop
xchg
jecxz
mov
push
mov
mov
mov
ret
sbb
out
jmp
ljmp
ret
fmull
repz
or
aad
adc
stos
jne
mov
jae
xchg
xchg
sub
sahf
cli
lcall
leave
cmp
xchg
dec
pop
int
jnp
inc
sarb
push
rorb
rcll
xor
push
lods
sub
nop
int3
pushf
ret
les
mov
sbb
mov
push
mov
rorl
flds
das
js
mov
jne
add
mov
cmp
cmpsl
scas
call
cs
lcall
negb
mov
xorb
mov
in
cmp
lea
cmp
mov
xchg
imul
sub
and
std
das
jbe
jnp
xor
icebp
cmp
and
lahf
movsl
push
sbb
jg
mov
jmp
rorb
pop
cmp
test
das
ja
add
push
cltd
inc
mov
push
jge
imulb
shl
sbb
outsl
mov
xchg
push
cmpsb
jle
lods
dec
cwtl
adc
lea
jge
lret
stos
push
push
clc
test
pop
or
repnz
in
xchg
xchg
mov
fdivrl
js
fidivrs
into
daa
in
mov
std
adc
dec
stos
cli
inc
das
push
push
push
popf
mov
pusha
ret
mov
insl
cltd
push
mov
inc
jmp
cmp
dec
jo
dec
fxch
cmp
dec
fcmovnu
and
push
jmp
xchg
addr16
sbb
cli
lret
mov
fst
dec
jecxz
lret
and
into
and
int
sti
push
inc
mov
add
sbb
stos
nop
negl
pop
ret
xchg
in
and
sbb
into
push
jle
aad
cmpb
push
mov
pop
roll
push
sbb
jb
lret
dec
pop
into
push
imulb
mov
ds
orl
and
cwtl
jle
shrb
push
repz
rorl
sbb
repnz
mov
sbb
int
jo
cld
ret
sbb
mov
icebp
pop
add
out
push
rcr
outsb
add
mov
int
pop
add
add
cmpsl
in
xor
enter
into
cmp
in
sarb
lret
in
filds
hlt
mov
aad
jae
mov
mov
fidivrs
mov
mov
mov
stos
dec
lea
loop
imul
inc
jp
addr16
xor
lea
roll
outsl
mov
sub
call
add
adc
scas
std
mov
jle
fcoml
or
test
idivl
loope
lahf
jnp
das
mov
dec
mov
pushf
pop
push
mov
mov
negb
mov
xchg
xor
cmovns
dec
mov
daa
jmp
ja
cli
inc
inc
es
inc
xor
movsl
adcb
outsb
in
arpl
sbb
imulb
jle
popa
movsl
aas
sub
dec
xorb
mov
les
gs
mov
mov
ret
pusha
jecxz
xchg
ret
xchg
and
jns
iret
gs
xchg
lret
push
shll
imull
loop
mov
out
icebp
mov
or
mov
pop
je
insl
or
inc
inc
ret
xor
mov
cs
inc
loop
add
std
fldcw
mov
fdivl
lock
aad
xchg
rorb
mov
imul
and
repnz
add
mov
ret
es
inc
orl
inc
dec
cwtl
inc
adc
sti
mov
adc
sbb
dec
fs
lods
inc
test
stos
cwtd
cmpsb
cmp
test
hlt
push
jmp
push
imul
outsl
lret
loope
test
incl
xchg
pop
test
fdivl
sti
out
mov
mov
in
sub
test
xor
xchg
cmp
xchg
jp
cmpsl
xchg
cmp
int
add
mov
repz
in
mov
mov
push
jl
push
scas
jae
and
iret
xchg
nop
fadds
cmp
scas
jl
icebp
pusha
push
cmp
incb
pop
mov
test
in
sub
xchg
aas
push
fstps
mov
dec
shr
jno
mov
repnz
ja
imul
les
sti
mov
fistps
hlt
pop
fistpl
fldt
dec
int3
mov
push
repnz
fnclex
mov
mov
mov
or
cli
and
test
jb
lahf
jl
sbb
lahf
je
add
imul
mov
cmp
add
pop
lea
jnp
addb
loope
cmp
ss
sub
jle
cltd
mov
mov
xor
int
sbb
pop
cwtl
cwtl
mov
cld
mov
mov
rorb
push
loopne
mov
adc
push
test
lret
lock
add
movsl
mov
pop
cmpsl
cmpsl
xchg
sub
pop
clc
xor
std
int
or
xor
loop
iret
inc
mov
xor
arpl
ds
loopne
das
jge
stos
dec
insl
lret
cmp
inc
gs
jle
cwtl
scas
dec
push
enter
mov
nop
fldenv
int
sub
xchg
leave
pop
mov
sbb
fstps
shlb
jmp
mov
jmp
mov
fcoms
cmpsl
or
push
lods
sub
mov
mov
ficoml
or
push
add
mov
push
orb
cmpsl
shrl
sti
es
sbb
jp
jns
jg
outsl
add
std
rcrl
repnz
and
aad
jo
fisubl
ret
repz
adc
rorl
iret
mov
fstpl
push
cmp
push
pop
or
pop
cmp
inc
fldt
into
pop
repnz
fnstenv
inc
add
jne
ljmp
test
lahf
mov
inc
nop
fidivl
mov
in
aas
push
and
mov
data16
fdivs
push
pop
testb
jle
into
jae
lahf
movsb
out
movsl
cmp
data16
testl
xchg
sbb
adc
xor
or
cmpsl
data16
rorb
add
in
test
and
push
add
mov
test
je
sti
movsl
mov
pop
jecxz
sbbb
out
rcrb
add
sub
dec
stc
jg
into
and
frstor
ret
xchg
incb
jae
cmp
push
insl
test
push
iret
hlt
jb
es
fsubrs
test
lret
ss
cli
lret
roll
adc
pushf
outsl
push
ret
loop
es
cli
mov
xchg
ljmp
xor
xor
lods
test
mov
in
fwait
xchg
fidivs
int3
loopne
cmp
imul
push
repnz
sahf
add
pop
mov
int
shlb
aas
or
sbb
mov
cmpsl
and
dec
xor
stos
xchg
mov
das
testb
ljmp
sub
and
out
sub
xchg
stos
test
test
cld
push
mov
rclb
push
inc
pop
ljmp
cmp
sub
sub
shll
pop
ffreep
sub
das
out
es
stos
xor
push
fdivrs
lods
adc
test
pop
sub
mov
mov
or
andb
jbe
jl
mov
andb
fildll
xchg
xor
inc
jo
jle
push
and
or
fs
pop
ds
mull
clc
or
cmpb
cmpsb
sti
je
push
mov
lcall
dec
add
stos
movsb
xor
jmp
mov
dec
mov
hlt
or
stos
sbb
jg
xchg
push
adcb
lretw
sbb
sarb
dec
mov
dec
jge
and
addl
les
sub
mulb
push
hlt
pop
outsb
or
aam
addr16
xchg
dec
push
lret
mov
push
jecxz
inc
je
fs
xchg
push
rcrl
ljmp
cwtl
xchg
dec
aam
les
adc
jae
jns
shrb
leavew
cs
pop
nop
addr16
xchg
roll
xor
jp
popa
ret
les
adc
mov
mov
mov
pop
in
sub
dec
call
sbbb
ret
add
inc
js
mov
cmpsl
xor
rclb
cli
in
or
bound
xchg
inc
ljmp
xchg
sub
cwtl
dec
fnsave
jl
lret
sti
ret
jmp
lcall
insb
add
fnstsw
adcl
jo
jmp
mov
xchg
cld
jno
add
syscall
or
and
mov
push
mov
jle
popf
push
xchg
scas
call
mov
insb
jecxz
pop
aad
xor
jle
push
push
or
popa
mov
inc
shlb
xor
andl
xchg
sub
mov
aad
push
sbb
outsb
inc
dec
fbstp
push
jmp
pop
std
mov
out
inc
cmp
xor
push
pop
icebp
xchg
js
ljmp
lds
pop
inc
dec
arpl
rcrl
jns
out
adc
sub
xor
popf
loop
rolb
mov
cmpsl
dec
popf
add
add
leave
arpl
cmpxchg8b
int3
jge
adc
adc
or
and
add
jmp
pop
mov
gs
inc
lret
std
inc
fsubrl
mov
fwait
inc
je
loop
dec
fldl
insb
aaa
sahf
push
push
mov
jno
rcll
mov
lret
pop
mov
and
push
shlb
ret
cmp
jo
pop
hlt
pop
rclb
rcll
ret
and
cmpsl
sub
xchg
mov
outsl
cmc
out
out
inc
or
lds
lcall
inc
xor
adc
sar
out
repz
mov
pop
xor
and
mov
inc
xor
fwait
inc
jp
gs
into
imul
mov
inc
dec
fwait
inc
mov
stos
sbb
js
dec
bswap
imul
aaa
lret
xchg
cmp
es
mov
ljmp
bound
cmpsl
es
mov
sbb
outsb
or
inc
or
into
loop
repnz
jb
pop
mov
mov
int3
mov
scas
psrld
jle
or
cmp
mov
and
sbb
mov
xor
stos
and
xor
mov
mov
xor
lret
xchg
xor
pop
dec
adc
scas
xor
ja
jo
jmp
imul
mov
push
cmp
xchg
or
sbb
push
popa
into
xchg
mov
stos
in
jb
cmc
mov
sbb
out
outsl
outsl
dec
les
push
add
push
cmp
jne
jp
mulb
sub
pop
cmpb
fisttpl
stc
stos
fwait
xchg
aaa
test
rorb
fs
stos
ljmp
sub
add
out
pop
incb
fistpl
mov
pop
leave
mov
dec
enter
jnp
xlat
xchg
stc
lea
icebp
pop
sbb
aaa
movsl
outsb
inc
fidivrl
js
adc
fnstsw
push
mov
aam
in
push
xchg
and
mov
mov
sub
cmp
pop
aas
fiaddl
mov
dec
in
mov
mov
pop
les
lds
xor
adcl
xlat
mulb
loope
lods
push
fs
aas
pushf
push
aad
push
add
jbe
adc
arpl
loope
and
les
pop
int3
adcl
bound
cltd
addr16
in
loope
pop
xchg
test
fistpll
int
push
sti
sahf
push
leave
mov
test
test
adc
js
mov
je
leave
add
jle
loopne
stc
jnp
clc
add
data16
push
pop
lret
mov
test
jl
ljmp
lock
add
pop
ret
xchg
aas
xchg
dec
pop
and
cmp
out
loopne
pop
cmpsb
repz
mov
addb
sub
xor
mov
lods
sbb
xor
aas
cwtl
push
xor
aam
mov
pushf
sti
sub
call
mov
cmp
in
lock
shl
cmpsb
mov
mov
pop
clc
sahf
gs
nop
mov
stos
sub
scas
add
fstpt
lcall
shrl
cmp
lahf
jecxz
mov
cmpsl
push
push
cli
push
lcall
shr
cmpsl
xchg
je
push
lcall
ret
push
js
out
test
lret
std
fs
pop
mov
pop
clc
arpl
addr16
sbb
mov
aam
lret
add
pop
rep
cli
cmpsl
xor
jb
jl
in
pop
jmp
scas
sub
clc
ret
xchg
mov
in
out
stos
cltd
cmp
repz
jbe
mov
lds
lret
mov
push
mov
pop
out
or
in
test
adc
push
mov
cld
scas
dec
or
mov
push
mov
fsubr
mov
add
ljmp
lea
scas
lret
adc
cmp
cmp
shrl
cltd
xchg
adc
jg
push
sti
mov
mov
mov
sbb
or
jp
xor
jmp
cli
sub
aad
daa
aaa
popf
insb
mov
inc
or
xor
sarw
xlat
out
in
jle
sub
std
mov
mov
mov
or
cwtl
inc
jns
inc
or
imul
add
movsl
js
fisubl
jge
push
jp
push
js
pop
add
imul
mov
stos
jns
pop
and
pop
outsl
hlt
jae
pop
add
mov
lock
pop
push
mov
scas
jns
roll
in
sbb
pop
mov
hlt
mov
add
fldl
pusha
movsl
js
pop
je
in
mov
gs
dec
mov
mov
jb
jl
arpl
rorl
call
std
dec
adc
xchg
fisttpl
pop
cmpsb
adc
lea
adc
call
std
dec
adc
daa
mov
xor
mov
scas
fiaddl
pop
mov
jae
nop
loop
into
imul
test
mov
orl
andb
js
in
repnz
mov
and
jp
jbe
inc
pop
shlb
push
dec
adc
cs
in
cmp
push
bound
int
and
xor
and
lods
movsb
mov
add
iret
pop
sti
add
adc
hlt
pop
xchg
out
pop
std
xlat
outsl
std
pop
jno
cmp
inc
mov
out
lahf
dec
or
cmc
mov
fnstsw
push
cmpsl
xor
inc
lds
mov
dec
push
lods
scas
bswap
add
cmc
data16
pop
roll
add
inc
push
ss
pop
push
out
testl
pop
cmp
push
add
outsb
jmp
popf
jg
lret
loopne
adc
aaa
imul
sub
cmp
or
imul
clc
addb
in
das
pop
jo
add
xchg
sbb
mov
xor
insb
adcb
dec
pop
sub
xor
dec
cmp
mov
fldenv
fistpll
pop
pusha
cmc
or
mov
clc
pop
cmc
jbe
adc
in
push
add
enter
add
lock
pop
sbb
dec
mov
call
or
mov
cmpsl
sub
or
decb
push
jmp
test
aas
pop
sub
leave
pusha
dec
leave
test
imul
sub
lods
xor
cmp
push
test
xlat
jle
mov
mov
ds
dec
add
inc
in
jo
xchg
pop
add
mov
xor
mov
insb
mov
mov
cmpsl
ljmp
add
push
and
inc
call
test
mov
mov
and
inc
xchg
and
pop
stos
loope
es
mov
stos
sub
jo
loop
sbb
fwait
dec
cmpsb
imul
jp
fwait
inc
cmp
sub
addb
add
add
movsb
cs
push
nop
cmp
mov
in
jno
add
bound
add
jbe
xchg
push
sub
lret
mov
xor
arpl
repz
lods
jle
sbb
int
xor
xor
xchg
xorb
out
inc
or
adc
xlat
sub
movsb
in
inc
or
testl
mov
cmp
jl
mov
int3
xchg
xor
mov
popa
stos
out
stc
jbe
lea
pop
out
mov
mov
sbb
pop
lock
adc
sahf
fmull
aad
or
lret
aas
pop
stos
xor
jmp
xchg
scas
xor
push
add
sub
cld
popa
neg
enter
add
shl
xor
jmp
and
loop
test
and
out
jp
or
push
loopne
mov
mov
arpl
insb
in
mov
adc
std
mov
push
shr
fucomip
sbb
ds
hlt
inc
adc
inc
rcrb
cli
pushf
inc
adc
jecxz
cwtl
cltd
cmp
loopne
sbb
pop
cmp
enter
inc
adc
or
inc
adc
daa
adc
jno
loope
jp
loope
xchg
inc
jmp
clc
scas
sub
adcl
sbb
int3
cmpb
adc
or
jne
cmp
leave
test
inc
scas
xor
inc
mov
and
outsb
cmp
adc
mov
lods
push
push
xor
and
or
mov
push
fnsave
jmp
xorl
pcmpgtw
sbb
dec
cwtl
cmp
jge
xchg
in
jb
lahf
cmp
insl
and
data16
push
jle
xlat
push
mov
subb
insl
leave
jne
mov
push
inc
adc
add
imul
xor
out
push
cli
and
xchg
xchg
sbb
and
mov
sub
pop
lods
push
lea
mov
lods
xor
xchg
in
in
dec
popa
ljmp
xchg
cmp
xchg
xor
pusha
scas
sub
xchg
test
cli
frstor
mov
pop
lods
sub
fidivrl
jne
mov
insb
rorb
lret
mov
adc
subb
xchg
jg
jne
fsubl
std
imul
mov
mov
test
lods
mov
fwait
js
psrlw
jns
notl
sub
lock
or
mov
mov
jmp
mov
orb
rorl
mov
and
pop
sub
inc
or
in
jo
push
sbb
cmc
mov
dec
adc
in
xchg
pop
fwait
jl
inc
push
les
jle
imul
gs
sub
cmp
andb
and
je
cmpsb
inc
repnz
inc
xlat
or
push
aad
sbb
sub
add
jns
addr16
imul
mov
pop
arpl
mov
adc
mov
inc
fildll
xor
adc
stos
sub
xor
test
adc
out
sub
mov
push
sub
sub
pop
push
mov
lea
movsb
aad
mov
sbb
jge
push
push
imul
enter
xor
dec
or
xchg
aas
or
adc
std
push
into
or
rorb
jb
xchg
push
fdivl
jbe
add
xchg
jae
and
lret
in
mov
cs
into
pop
cli
xor
ljmp
dec
sbb
mov
xlat
push
je
mov
mov
pop
sti
inc
test
xchg
mov
and
and
js
adcl
and
lcall
cltd
jl
mov
mov
inc
pop
mov
jp
add
arpl
and
call
loop
jl
outsl
repnz
jle
sbb
cmp
fimull
jmp
and
cmp
push
jg
mov
test
daa
mov
fsubp
je
outsb
inc
adc
scas
xchg
test
push
aam
xor
xchg
inc
adc
xorb
push
pop
in
scas
pop
jb
add
int
mov
test
test
pop
adc
lahf
jne
lahf
cmp
loopne
ja
inc
adc
sbb
jo
mov
test
movsl
push
repnz
ja
mov
movsl
inc
adc
jns
clc
or
int3
in
push
into
mov
mov
movsl
xor
adcl
aaa
fisubrl
push
stos
xor
jnp
loop
and
push
sti
xchg
pop
ljmp
xchg
mov
imul
dec
das
popf
movsl
daa
test
jl
not
dec
adc
enter
enter
arpl
xchg
call
fistpll
call
push
lret
jge
mov
movsb
rolb
add
or
pushf
fwait
popa
ss
cli
int3
jb
lods
jmp
jns
mov
cmp
mov
jle
mov
and
subb
aam
test
adc
push
inc
arpl
or
mov
xor
insb
sbb
adc
jmp
lret
cmp
sub
sahf
and
idivb
mov
ljmp
dec
adcl
outsl
inc
adc
xor
jle
nop
cmp
jo
lods
pop
sbb
std
mov
adc
mov
or
ja
mov
ss
mov
inc
aas
fwait
imul
fwait
aaa
ret
mov
lahf
dec
sbb
xchg
enter
mov
xor
adc
hlt
pxor
in
popa
xchg
popa
mov
vmovdqa
fmull
and
addr16
ret
aaa
test
mov
pop
mov
push
push
sarb
sbbb
subl
mov
dec
adc
mov
lods
xor
lods
loopne
mov
mov
scas
jle
mov
scas
mov
xchg
cmp
dec
rclb
mov
popf
and
call
dec
xchg
dec
scas
dec
adc
lcall
xchg
mov
ret
jecxz
lea
pop
or
loope
pop
push
outsb
in
rcrb
mov
shll
movsb
loopne
add
test
mov
pop
mov
pop
mov
xor
sub
push
jb
out
mov
fnstsw
cmpb
sbb
dec
push
cli
mov
test
mov
adc
leave
orl
addr16
jl
sti
push
push
push
sti
mov
stos
popf
cmp
or
cli
xchg
xchg
inc
sbb
inc
adc
ret
pop
rorl
pop
fs
adc
and
cmp
jmp
scas
jl
sbb
test
inc
or
ret
jle
inc
sbb
pop
testb
js
andb
mov
aam
sbb
mov
dec
cmp
aad
pop
jb
push
std
jnp
jbe
ljmp
mov
in
fisubrl
push
dec
mov
xor
rorb
mov
sbb
outsl
pop
sti
jo
push
sub
mov
cld
ret
xor
sub
jecxz
cmpsl
dec
bndldx
push
xor
add
shlb
xor
mov
push
hlt
pop
xchg
mov
stc
push
xchg
movsl
lock
mov
push
iret
mulb
cmp
movsl
mov
sarb
xchg
cli
pop
loope
aad
mov
mov
xchg
inc
mov
movsb
outsl
out
xchg
cmp
rcrb
into
cmpsl
xor
int
inc
adc
mov
dec
xchg
pop
clc
sbb
lret
inc
in
pop
jmp
inc
testb
je
es
cmp
gs
xor
and
data16
mov
outsb
cmpsl
push
imull
mov
sbb
pop
inc
insl
jmp
or
sbb
mov
das
outsb
mov
push
push
jae
lods
add
mov
or
fcoml
aam
mov
and
mov
push
and
repz
push
cmp
push
roll
stos
cmp
orl
fiadds
test
mov
sbbl
and
jl
gs
inc
pop
scas
mov
mov
inc
push
test
test
shll
xchg
aas
fimuls
sub
cmc
push
add
fldl
ror
sbb
pop
mov
fidivs
mov
jp
cld
xchg
neg
xchg
cmp
out
in
cmp
or
mov
pop
les
lods
stc
bound
mov
jbe
or
mov
jne
add
stc
mov
stc
mov
test
sbb
mov
ret
std
sub
xchg
lds
push
mov
dec
xchg
dec
push
pop
leave
or
rcll
dec
pop
test
sub
test
xor
clc
pop
pop
outsb
icebp
imul
or
leave
test
ret
loopne
and
push
fadds
in
cmpsl
sub
pusha
in
inc
mov
xchg
cmp
jge
xor
subl
scas
ror
mov
xchg
or
add
sti
jno
adc
push
dec
or
roll
lcall
pop
jno
and
dec
enter
jle
lds
mov
mov
sahf
xchg
mov
adc
sbb
cltd
inc
push
aam
lret
jb
inc
call
push
std
mov
xchg
cmp
jnp
int3
ja
sbb
push
add
mov
jns
call
hlt
sbb
cltd
push
mov
sub
stos
adc
subb
dec
push
inc
stos
cmp
xchg
mov
stos
ss
adc
aaa
cwtl
cmp
and
push
scas
movsl
xor
mov
enter
subb
test
jmp
rorl
mov
mov
mov
fnsave
cs
fidivl
xor
or
inc
bswap
push
and
cmp
test
lds
popl
fldlg2
dec
adc
rorb
add
push
lahf
inc
call
cli
xor
fwait
and
sbb
aaa
pushf
nop
dec
xor
mov
xor
sbb
cmpsl
test
and
inc
or
aam
xor
gs
or
add
cmpsl
jne
andb
movsb
cmp
mov
imul
push
mov
mov
aas
mov
clc
cmp
aad
in
xor
or
incl
aam
cmpsl
sarl
add
pop
arpl
mov
mov
xchg
mov
jbe
inc
and
push
neg
jg
xchg
mov
mov
xlat
loopne
add
in
fdivs
and
decl
fstpt
fxch
adc
jmp
jno
mov
into
xor
imulb
cld
popa
mov
mov
loope
xorb
gs
hlt
jge
and
jp
inc
adc
bound
push
daa
imul
sbb
or
fs
sub
mov
mov
pop
jbe
in
dec
insb
cmpsl
lods
xchg
add
add
cmp
push
es
mov
cld
pop
xor
sub
pop
xchg
les
jg
mov
roll
or
cmc
mov
pushf
inc
aas
mov
add
fidivrl
leave
xchg
mov
push
int3
jnp
std
gs
mov
cmp
fidivs
and
je
std
push
jmp
mov
jl
adc
pop
jp
fstpt
popa
xlat
outsb
xchg
les
mov
sbb
insb
mov
mov
push
fcompl
mov
cmp
add
pop
or
inc
or
mov
sahf
inc
push
push
popf
aas
popf
mov
leave
in
lret
fstl
inc
push
test
push
mov
mov
push
xor
pop
dec
aaa
cwtl
pop
fwait
cmp
rol
jg
sbb
cmp
subb
gs
fdivr
pop
and
stc
gs
fistpll
imul
ret
mov
mov
sbb
into
cmpsb
fwait
pop
push
sbb
sub
in
push
xchg
jmp
cli
mov
orb
pop
push
imul
movsb
in
das
sarb
cld
call
movsb
mov
scas
add
add
fdivs
pop
xor
mov
test
adcl
aam
mov
xchg
shrb
mov
into
and
inc
adc
std
pop
jge
pop
idivl
test
and
loope
subb
fisttpl
or
xchg
push
push
add
jb
outsb
pushf
cmp
pop
testl
pop
inc
xlat
jge
mov
dec
out
out
popf
jmp
push
push
lock
dec
jp
adc
jae
pop
lret
insl
out
push
jle
aad
sub
jnp
ret
clc
push
repz
mov
lahf
jl
icebp
repnz
sub
mov
aas
lahf
and
push
mov
jns
and
mov
add
mov
xor
arpl
cli
ljmp
ds
pop
jns
jp
insb
mov
inc
out
mov
inc
push
add
icebp
pop
jp
sarl
jo
dec
lcall
pusha
push
dec
mov
jnp
and
xchg
mov
subb
push
and
inc
pop
cmp
jle
test
mov
fsts
inc
out
lock
ficomps
xor
ss
scas
mov
out
dec
adc
cmc
lds
jbe
cmp
adc
call
mov
mov
mov
addr16
js
je
outsl
mov
in
outsl
jecxz
in
mov
mov
lea
lret
xchg
mov
scas
xchg
aaa
inc
pop
adc
rcll
jo
insl
mov
aas
or
pusha
adc
test
dec
push
sbb
sub
lret
leave
and
fildl
xor
popa
cmp
xchg
ja
mov
movsl
xchg
jl
pusha
lock
data16
pop
add
or
int3
mov
and
xchg
push
mov
cmp
xchg
inc
jecxz
push
add
sub
out
xor
pop
mov
lret
xor
adc
jbe
mov
cmpsl
stc
aad
inc
mov
add
int3
mov
ret
add
mov
xor
add
or
cmpsl
pop
stc
bound
popa
ljmp
mov
jns
inc
in
jbe
iret
jne
push
inc
push
clc
addl
inc
dec
lahf
lods
xor
orb
mov
adcl
je
faddl
and
nop
ds
add
int
ss
mov
jecxz
lds
push
sarl
lds
mov
loop
fnstenv
sti
pop
xor
xchg
inc
mov
mov
fidivs
pop
xchg
sub
mov
dec
nop
rol
sub
dec
adc
addl
xor
push
lods
push
add
stos
dec
loop
aad
pop
pop
sti
or
movsl
push
sub
lcall
mov
and
or
mov
es
push
cld
ja
lds
xlat
lods
rolb
je
cmp
fs
out
fs
stc
fs
xor
pop
inc
insb
mov
fsubs
mov
dec
out
adc
push
inc
orl
or
dec
mov
or
es
xor
data16
cmpb
jmp
xchg
ds
sub
cmp
push
cmp
pop
mov
cmpsb
or
sahf
jae
dec
adc
ljmp
jle
xchg
addr16
mov
push
jb
dec
mov
mov
leave
xchg
aam
fldcw
std
add
cs
and
jle
sub
sub
cmp
pop
dec
dec
xchg
inc
or
adc
imulb
mov
out
incl
lods
add
in
imul
cmp
mov
rclb
inc
or
and
jg
lock
add
or
movsb
fimull
jbe
or
pop
jae
pop
add
addr16
cs
and
xchg
shl
roll
test
mov
dec
ds
je
and
mov
cmp
rcrl
pop
mov
mulb
mov
sub
xor
fcomps
fbstp
movsb
icebp
inc
push
in
je
sub
adcl
ljmp
icebp
pop
pop
sub
xchg
cmp
adc
loopne
lcall
dec
cld
out
icebp
sahf
mov
xor
pop
add
jb
mov
xlat
sub
cmp
jo
sbb
test
pop
imul
xchg
out
imul
scas
sub
push
loopne
dec
cmp
inc
outsb
outsl
pop
push
outsb
jg
inc
add
daa
lods
push
push
sbb
sti
test
pop
loop
stos
ss
dec
comiss
jecxz
cmp
pop
mov
test
add
adc
xchg
aaa
mov
stos
jp
pop
and
data16
add
xchg
push
cmp
push
adc
stc
pop
je
roll
cmovae
or
mov
or
cmpsb
test
push
add
push
push
adc
dec
cmp
icebp
out
push
out
movsb
aad
and
and
xchg
sub
cli
popa
pushf
mov
in
insl
mov
or
jge
sbb
mov
mov
mov
lret
inc
adc
scas
sub
ss
mov
lahf
jp
inc
push
dec
pop
les
daa
mov
inc
mov
stc
cmp
sub
shlb
dec
cli
gs
adc
inc
jmp
inc
icebp
xchg
pop
clc
fsubrp
rolb
mov
mov
loopne
or
lret
imul
enter
adcb
rcr
mov
mov
lret
pusha
repnz
mov
and
sub
sbb
js
xor
adc
pop
ret
clc
dec
jns
call
mulb
sub
scas
jne
push
push
push
cltd
jg
push
call
cmp
fisubrs
lods
lret
jg
mov
insl
call
push
bound
mov
adc
dec
or
aam
jp
dec
mov
dec
or
aam
pop
push
push
stos
sub
dec
repnz
dec
repz
mov
adc
movsb
sub
add
imul
push
xchg
jnp
xchg
or
sti
gs
pop
mov
shl
fidivrs
or
gs
sbb
mov
mov
jl
addr16
pop
cltd
cmp
push
mull
push
les
or
adc
jecxz
dec
and
xor
mov
jl
hlt
jge
std
sub
or
sbb
push
adc
and
dec
ja
out
dec
or
cld
jl
aad
xchg
stos
or
cltd
jmp
ret
xchg
cmpsb
imull
add
cli
pop
andb
mov
mov
mov
cmp
jae
dec
pop
mov
or
xchg
ds
leave
nop
icebp
das
sbb
mov
inc
or
add
hlt
mov
stos
add
adc
adcl
xor
movsb
sub
and
shlb
lret
dec
xor
in
jecxz
ficoms
lods
ss
imul
push
xor
and
aaa
les
push
or
jnp
clc
pop
add
cmp
repnz
mov
mov
enter
cmc
push
xchg
cmp
loope
ljmp
and
mov
xlat
sbb
in
jb
dec
lds
insl
jbe
into
outsl
jbe
pop
popa
js
leave
dec
jp
dec
and
sub
ret
inc
int
int3
mov
push
adc
daa
out
js
inc
scas
sub
js
add
les
mov
inc
js
dec
push
fwait
adc
push
mov
sub
icebp
adc
daa
inc
inc
jae
xchg
rorl
std
sahf
shll
in
or
lods
pop
push
orl
or
sbb
nop
inc
jmp
sub
dec
push
inc
adc
arpl
test
dec
mov
movsl
stos
cld
call
mov
dec
jg
lea
aam
jmp
push
lret
xchg
push
and
jne
push
pop
insb
fildl
adc
sbb
dec
repz
jp
ja
adc
loop
dec
inc
push
mov
push
ficomps
mov
sub
lds
push
dec
push
call
lea
cmc
inc
faddp
xchg
fildl
jp
test
fnstcw
dec
or
les
or
test
push
bswap
ror
dec
jo
cltd
cmp
insl
rolb
mov
negl
ror
mov
mov
fidivrl
inc
movsb
xor
xrelease
cmp
shrb
aad
popf
mov
subb
sbb
jge
dec
fwait
aas
dec
inc
xchg
fidivl
iret
out
xor
jecxz
jb
jb
jp
adc
xchg
pop
add
xor
jl
daa
pop
add
lock
xchg
and
lcall
pusha
jae
sbb
enter
adc
jns
adc
cmp
and
xchg
inc
mov
out
aad
movsb
cli
insb
insb
ljmp
jno
mov
movsl
jecxz
fsubs
test
pop
stc
mov
scas
mov
rcl
mov
adc
lret
jno
add
sbb
pop
dec
dec
sub
daa
xor
push
decb
andb
pop
add
push
in
enter
jnp
sub
sub
and
ds
jle
sub
sbb
fnstcw
add
xchg
adc
mov
ret
out
daa
ljmp
mov
out
or
scas
in
dec
inc
adc
sbb
andb
jne
jmp
hlt
and
sbb
push
lret
adc
mulb
xchg
jne
pop
xor
and
xchg
sbb
inc
push
loop
into
mov
stc
push
add
add
enter
test
push
shll
mov
test
sub
out
scas
js
push
repz
xchg
add
outsl
scas
jne
push
xchg
mov
pop
adc
mov
dec
and
adc
jl
sbbl
arpl
cmp
jecxz
scas
dec
loope
jb
mov
jo
jnp
fwait
sbbl
shrb
ss
loope
inc
stc
jb
sbb
test
cli
pop
or
scas
daa
ret
and
gs
sub
jbe
outsb
mov
cld
mov
xor
push
mov
dec
adc
iret
out
mov
test
cmp
cmp
repz
mov
adc
adc
mov
negl
xchg
adc
inc
inc
test
call
mov
xchg
or
push
mov
xchg
pop
test
and
rcll
loopne
xorl
pop
mov
dec
imul
popa
in
push
xor
jbe
filds
aad
pop
pop
adc
andl
out
jo
xor
jecxz
sbb
aam
pop
xchg
jne
rcrl
mov
xor
cmpsl
xchg
call
addl
jmp
andl
jg
icebp
lods
pop
lods
jno
insb
notb
arpl
shlb
xor
mov
pop
add
fimuls
ss
insl
enter
xor
into
mov
ret
and
xorb
shlb
xor
mov
lods
pop
out
fnsave
sbb
xor
xchg
sub
movsl
mov
xlat
sub
clc
shlb
jle
sub
shll
mov
push
icebp
sub
and
subl
or
sbb
test
sbb
fisubs
ret
repz
rclb
test
inc
loopne
jne
push
cld
xchg
gs
sbb
inc
fdivrs
iret
or
xchg
xchg
sub
pop
mov
mov
jl
or
iret
xchg
sub
pop
pop
out
mov
mov
push
lods
jbe
fidivs
cmpsl
call
sti
push
mov
test
mov
xlat
outsb
sub
lahf
clc
out
test
roll
dec
or
jl
data16
inc
popf
sub
into
test
xchg
out
dec
fbld
mov
data16
jb
rcrl
test
lds
jbe
out
cmp
mov
xchg
in
rclb
sbb
aaa
mov
jne
pop
cmp
mov
cld
xchg
adc
sbb
das
test
iret
mov
xchg
sub
movsb
mov
sub
not
sub
sub
shlb
mov
push
lock
and
subl
or
lds
rorb
sbb
outsl
inc
fisubs
shll
mov
push
mov
jne
addr16
xor
xchg
fs
sbb
aas
xlat
cmp
or
xchg
xchg
sub
pop
mov
mov
jnp
or
into
xchg
sub
pop
pop
out
mov
mov
push
stos
jbe
fnsave
cmpsb
xchg
sub
enter
push
mov
sbbl
mov
insl
sub
sahf
imul
test
rolb
dec
or
jnp
data16
inc
pushf
sub
int
test
xchg
out
dec
fistps
mov
data16
jno
rcrl
test
les
jbe
in
cmp
mov
xchg
in
rclb
sbb
ss
jne
push
cmp
mov
cld
xchg
adc
sbb
test
iret
mov
xchg
sub
mov
je
pop
not
sub
sub
iret
mov
add
into
gs
out
sub
and
subl
or
les
sub
dec
in
sbb
outsb
inc
ficomps
shlb
mov
push
mov
jne
data16
xchg
arpl
sbb
ds
cmp
pop
pusha
std
xchg
xchg
sub
pop
mov
mov
jp
or
xchg
sub
push
pop
out
mov
mov
push
test
iret
movsw
cld
xchg
sub
in
test
dec
mov
sbbl
shlb
insb
sub
popf
cmc
out
test
mov
or
jns
incb
sub
lret
arpl
fistps
ds
outsl
or
pop
cmp
test
ret
ja
jecxz
cmp
rclb
sbb
jne
push
cmp
xchg
cld
xchg
push
test
sbb
sub
dec
xchg
sub
aam
in
add
es
pop
cmc
shrl
jp
sub
mov
lcall
iret
push
in
sub
push
je
test
or
ret
rorl
sbb
insb
dec
fistps
mov
rcrl
test
jbe
mov
xchg
popa
mov
pop
jmp
or
ja
aam
rolb
es
out
push
mov
mov
js
or
add
shlb
xchg
sub
push
pop
lock
mov
push
cmpsl
ja
fnstenv
addr16
sub
testl
movsb
dec
mov
sub
fwait
repz
xchg
inc
or
incl
sub
leave
popa
xchg
sbb
addr16
insl
or
pop
cmp
loope
loope
cmp
scas
call
data16
mov
xchg
jbe
push
cmp
test
std
xchg
or
pop
icebp
fsubrs
js
sub
xchg
sub
add
jne
push
repz
js
sub
lret
mov
std
cltd
push
movsl
lret
addr16
jmp
ret
sbb
out
test
or
testb
ret
xchg
fwait
xor
cmp
addr16
in
xchg
pop
mov
ja
bound
pop
mov
pop
out
sbb
mov
loope
cmp
cmp
add
mov
out
push
scas
sbb
or
xor
xchg
sub
push
pop
icebp
test
dec
dec
movsl
js
xlat
outsl
shrl
clc
xchg
sub
cmc
dec
mov
jge
push
movsl
inc
sahf
shrb
push
lock
mov
push
movsl
jne
imul
pusha
xchg
xchg
call
movsl
cmp
cmp
imul
pop
cmp
jns
fbld
fbstp
ret
add
mov
test
ja
push
cmp
xchg
or
sbb
pop
idivl
sub
shrl
rcrb
add
jbe
push
icebp
shrl
jbe
sub
leave
mov
sti
xchg
xsha1
sbb
push
sbb
xchg
ret
or
add
loopne
push
adc
loope
xor
jmp
ret
pop
mov
fabs
js
pusha
movsl
cmp
sub
xchg
pop
mov
pop
in
sbb
jns
sarl
rolb
pop
add
push
lods
push
mov
jne
push
cmpsl
cmp
das
leave
xchg
sub
push
pop
icebp
sbbl
paddq
imul
dec
mov
jp
montmul
cmpsb
inc
fwait
shrb
push
lock
mov
push
movsl
jb
push
aas
xchg
sub
les
pop
xchg
in
loope
mov
cmp
push
mov
jp
fsubl
fildll
ret
add
mov
and
mov
ds
aad
xchg
pop
movsl
pop
repz
sub
pop
idivl
sub
shrl
pop
out
popf
mov
iret
pop
ja
push
lock
and
sub
inc
repnz
mov
clc
xchg
adc
dec
call
lock
rorb
icebp
mov
mov
fisttps
loop
xor
add
test
pop
mov
mov
cmp
loop
or
cmp
pop
mov
pop
jecxz
push
mov
add
jp
iret
cmp
add
cwtl
mov
pop
icebp
push
stos
pop
mov
jae
shld
cmp
sub
jg
mov
dec
mov
shrl
repz
cs
inc
mov
js
adc
lret
lds
mov
jo
imul
xchg
sub
and
mov
ds
imul
aaa
mov
jnp
cltd
ret
pop
pusha
and
mov
ds
aad
xchg
pop
mov
sbb
adc
jnp
shrb
pop
lock
fwait
mov
int
js
push
out
aam
and
sub
jae
mov
clc
xchg
adc
dec
out
lds
insl
icebp
mov
rorb
icebp
mov
mov
fisttpll
jecxz
xor
add
add
mov
mov
cmp
loop
or
ds
sub
xchg
pop
mov
pop
jecxz
push
mov
add
jnp
int
sar
push
add
push
test
jns
mov
lds
repz
mov
dec
lahf
jp
shrl
imul
repnz
inc
mov
ja
adc
lret
xchg
jmp
mov
adc
cmp
mov
mov
dec
jecxz
mov
aas
loop
push
add
pop
xor
push
in
mov
cmpsb
cmp
fldt
and
mov
aas
jg
add
shlb
push
mov
repz
and
inc
cltd
xor
pop
icebp
cld
cltd
mov
lret
sbb
aad
push
jno
mov
les
test
pop
aam
dec
in
adc
ss
in
mov
imul
adc
movb
and
cmpsl
ds
mov
add
add
and
aam
jp
pop
test
mov
add
loope
pop
mov
add
jl
lret
cmp
lcall
and
mov
ret
cwtl
das
cmc
dec
pop
hlt
jl
mov
dec
popf
jnp
iret
imul
xor
mov
mov
jne
adc
enter
xchg
jmp
dec
in
cmp
test
pop
insl
add
mov
mov
loopne
in
scas
test
add
pop
xor
out
xchg
cmpsl
or
lds
and
mov
inc
xlat
jge
add
shlb
mov
icebp
jl
and
aam
inc
lcall
xchg
mov
adc
insl
sbb
cwtl
das
mov
ret
hlt
nop
adc
inc
loop
adc
mov
mov
insb
add
in
sub
aas
pop
mov
add
jg
pop
mov
mov
cmp
in
add
test
cltd
push
lods
pop
fbstp
mov
add
jge
leave
ds
push
add
test
pop
hlt
dec
movsl
and
lahf
testl
repz
pop
cmc
jp
mov
adc
addr16
insl
cltd
out
lcall
inc
mov
stos
aas
xchg
insl
pusha
xor
xchg
out
mov
mov
out
cmp
test
aaa
mov
mov
fimuls
shrd
dec
pop
xor
jge
xlat
test
or
pop
pop
clc
and
mov
inc
xlat
jnp
add
into
and
mov
out
jl
and
aad
inc
lcall
xchg
mov
adc
insl
sbb
xor
shll
mov
loopne
adc
mov
mov
insb
add
xlat
mov
or
out
sub
add
jge
pop
scas
add
in
add
inc
mov
add
fidivs
mov
jmp
jge
enter
push
add
sbbl
hlt
dec
movsb
and
sahf
testb
rcrb
jns
mov
adc
data16
insl
cwtl
in
lcall
inc
mov
stos
ds
insl
lds
enter
mov
mov
out
cmp
test
mov
mov
fisttpll
push
stos
stos
inc
insb
add
enter
mov
mov
out
adc
aas
or
pop
pop
mull
mov
scas
dec
inc
xlat
jp
add
int
and
and
aad
inc
lcall
xchg
mov
adc
insl
sbb
xor
shlb
mov
fbstp
adc
mov
mov
insb
add
mov
or
out
sub
add
jl
pop
scas
add
and
iret
in
add
inc
mov
add
fnsave
movsl
out
xor
ds
push
add
sbbb
hlt
dec
mov
jnp
popf
cmc
inc
xlat
es
pop
cmc
js
mov
adc
gs
insl
xchg
in
lcall
aas
mov
stos
cmp
pop
xor
in
mov
mov
out
cmp
test
xor
push
mov
mov
dec
in
stos
stos
inc
fsubrl
insb
add
enter
mov
mov
out
adc
aas
pop
movsb
add
aad
pop
pop
mulb
mov
scas
dec
inc
xlat
jns
add
int3
and
mov
in
jl
pop
je
aad
inc
lcall
xchg
mov
adc
insl
sbb
sahf
cmp
mov
mov
icebp
mov
test
inc
fidivs
pcmpgtd
mov
mov
insb
add
mov
pop
pop
dec
out
sub
add
jnp
pop
lods
add
add
inc
mov
add
fdivl
mov
std
out
das
ds
push
add
sbbl
and
pushf
hlt
inc
xlat
and
inc
pop
cmc
ja
mov
adc
fs
insl
xchg
jmp
xor
ds
stos
cmp
insl
ret
pop
xor
mov
hlt
mov
mov
out
aaa
adc
xor
xor
mov
fisttpl
or
stos
inc
fldt
enter
mov
mov
out
adc
add
aam
pop
pop
cmc
and
lods
inc
inc
xlat
js
add
lret
mov
sbb
ds
xchg
mov
adc
insl
push
imul
imul
xlat
outsb
inc
fdivl
or
cs
in
mov
insb
add
rorl
out
es
pop
scas
outsb
add
stos
add
jnp
push
stos
inc
xchg
add
fidivl
mov
sub
dec
add
cmc
inc
mov
jl
lcall
xor
inc
pop
divb
mov
adc
xlat
outsb
xchg
jmp
cmc
mov
cmp
push
outsb
or
cmp
xor
mov
cmc
mov
push
out
xor
outsl
push
xor
lea
cmpsl
stos
inc
fldcw
insl
add
cli
leave
pusha
sub
mov
mov
out
jg
test
pushf
shlb
and
stos
inc
inc
fdivs
add
enter
dec
jmp
inc
xlat
mov
ret
pop
cmc
hlt
mov
adc
loop
outsb
adc
fwait
xor
mov
adc
inc
fidivl
enter
lea
mov
stos
out
insl
add
or
lret
mov
add
call
push
lods
outsl
push
fbstp
pop
test
lret
cld
push
lods
inc
test
lret
outsl
and
sub
inc
xlat
repz
push
popf
jge
pop
testb
mov
cwtl
lock
fldenv
mov
pusha
divl
mov
adc
xchg
out
xor
mov
out
mov
lods
cmp
xor
mov
testb
xor
fs
outsl
push
xor
lea
fcoms
or
outsb
add
sub
and
shrl
pushf
shlb
pop
push
icebp
and
stos
inc
inc
fdivs
fwait
cld
xchg
pop
test
and
sbb
fsubs
ret
repz
adc
adc
xor
mov
adc
inc
fdivs
enter
mov
adc
add
pop
xor
cmp
mov
add
jmp
push
lods
jo
fidivs
pop
cmpsl
decl
jl
push
lods
inc
test
fwait
dec
movsl
lret
outsb
and
sub
inc
xlat
repnz
push
popf
jl
pop
testb
into
gs
xchg
out
inc
fldenv
mov
pusha
divl
mov
adc
xchg
out
xor
mov
in
mov
lods
aaa
mov
outsl
mov
fcomip
lea
stos
push
call
arpl
outsl
push
das
test
leave
mov
lea
xlat
push
out
movsb
stos
inc
sub
pop
test
and
shrb
pushf
iret
and
pop
push
lock
test
lret
sti
xchg
pop
test
and
sbb
fsubs
rcrl
mov
adc
adc
xor
mov
adc
aas
xlat
xor
or
mov
mov
lods
in
insl
add
push
xor
aaa
into
mov
add
jmp
push
stos
jo
fnsave
cmpsb
decb
jl
push
lods
inc
sbbl
fwait
dec
movsb
lret
insl
and
sub
inc
xlat
icebp
dec
push
popf
jnp
pop
testb
mov
xchg
out
inc
fstps
mov
pusha
divl
mov
adc
nop
in
xor
mov
in
mov
lods
ss
outsl
mov
fdivp
lea
stos
push
call
cld
outsl
push
test
leave
mov
lea
push
out
mov
outsb
add
sub
scas
dec
out
jnp
stos
inc
add
enter
and
test
inc
fdivs
add
cli
xchg
pop
test
and
pop
outsb
inc
fcomps
rcrb
mov
adc
adc
xor
mov
adc
ds
xor
pop
pusha
testl
in
insl
add
add
mov
call
jmp
push
test
enter
mov
stc
dec
lods
inc
sbbl
lret
insb
and
daa
mov
push
popf
jns
pusha
testl
jle
xchg
in
inc
fstps
ds
imull
mov
adc
jecxz
xor
ss
lods
xor
push
xor
xchg
testb
das
adc
pusha
sti
jo
iret
into
push
mov
insb
and
popa
jmp
pop
jmp
test
test
pop
je
movsl
cmp
mov
or
mov
imull
mov
pop
pop
shrb
mov
dec
sarl
push
enter
jbe
loopne
insb
mov
dec
bound
dec
dec
xor
pop
or
aas
dec
test
push
or
test
ret
pop
insl
bound
xchg
stos
cmp
jo
sub
mov
xlat
xchg
pop
aam
ficoms
fmulp
mov
movsl
clc
fwait
adc
add
sbb
addr16
sahf
mov
das
jo
pusha
daa
loopne
mov
and
ret
mov
push
fnop
sub
aam
sahf
add
cmpsb
fdivp
stos
test
repz
std
loope
xchg
adc
stos
pop
mov
jns
jae
push
cmp
mov
xchg
shl
xor
jmp
mov
sub
nop
mov
jecxz
add
jp
inc
adc
cltd
fisubrs
pop
lods
pop
jge
jbe
jle
fwait
jg
dec
inc
xchg
leave
mov
mov
push
dec
call
cmp
or
cmp
jnp
xor
push
cmp
fisttpll
mov
arpl
and
mov
push
std
xor
pop
in
dec
push
popa
imul
push
repz
xor
aas
and
stos
add
jae
push
and
sti
mov
push
mov
jno
mov
inc
xor
pop
add
cmp
dec
adc
addr16
cmpsl
in
and
jne
cmp
xchg
ja
sbb
cmp
adc
test
or
loop
hlt
xchg
pop
mov
in
inc
std
and
jb
xchg
js
sbbb
scas
push
pop
das
xchg
dec
mov
mov
ja
add
pop
mov
adc
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
sarl
adc
mov
or
cld
js
std
ljmp
movsb
sbb
scas
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
in
test
inc
cmpl
mov
mov
jmp
imul
pop
sbb
imul
fwait
das
push
mov
push
adc
cmp
