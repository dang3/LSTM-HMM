push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
pop
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
pop
lea
xor
call
stos
stos
xor
mov
mov
pusha
call
add
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
push
mov
xorl
pop
sub
or
xor
xor
movl
add
and
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
add
cmp
jne
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
jmp
ret
mov
xor
add
mov
mov
shl
mov
sub
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
mov
jle
mov
popf
dec
call
add
in
cmp
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
push
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
push
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
push
pushl
push
call
and
add
add
adc
add
pop
and
add
and
add
and
add
and
add
add
aam
add
out
add
mulb
add
push
and
add
and
add
add
repnz
add
and
add
add
add
add
pop
and
add
and
add
and
add
add
in
and
add
and
add
and
add
add
mov
add
inc
and
add
and
add
add
add
add
pop
and
add
add
sub
add
add
add
nop
and
add
add
add
and
add
and
add
and
add
add
and
add
add
mov
add
add
add
add
and
add
add
add
add
mov
and
add
and
add
add
adc
add
pop
and
add
and
add
and
add
and
add
add
aam
add
out
add
mulb
add
push
and
add
and
add
add
repnz
add
and
add
add
add
add
pop
and
add
and
add
and
add
add
in
and
add
and
add
and
add
add
mov
add
inc
and
add
and
add
add
add
add
pop
and
add
add
sub
add
add
add
nop
and
add
add
add
inc
gs
je
dec
popa
outsb
fs
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
insb
outsl
jae
dec
popa
outsb
fs
add
popa
je
inc
jbe
outsb
je
add
roll
dec
gs
jo
jb
add
dec
add
insb
outsb
inc
add
cmp
fs
imul
add
aam
inc
gs
jb
jbe
push
jns
gs
add
add
imul
outsb
je
outsl
insb
add
add
gs
inc
imul
gs
jb
jbe
je
push
jb
imul
push
add
add
je
jne
jb
outsb
je
jb
arpl
jae
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
dec
jo
outsb
dec
jne
gs
add
out
inc
gs
imul
bound
gs
add
repnz
imul
jb
je
arpl
add
push
push
je
imul
inc
add
dec
add
popa
insb
dec
outsl
arpl
push
add
outsb
fs
outsl
insb
jne
gs
insb
outsl
jae
add
add
popa
jo
gs
jb
jns
xchg
add
je
jne
jb
outsb
je
push
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
xor
jae
push
push
popa
je
add
xor
jae
push
push
popa
je
add
xchg
dec
jo
outsb
push
push
popa
je
add
push
arpl
add
inc
gs
push
outsl
insb
outsl
jb
aaa
add
ja
push
fs
inc
gs
imul
gs
add
add
ja
push
popa
arpl
jb
jne
add
gs
push
gs
dec
gs
imul
gs
push
gs
inc
js
outsb
je
add
gs
push
outsl
outsl
insb
add
mov
push
gs
imul
gs
add
jns
inc
gs
push
jns
push
imul
dec
inc
dec
inc
cs
insb
add
inc
gs
jbe
imul
imul
push
add
dec
inc
outsl
outsb
imul
popa
push
outsl
jne
arpl
or
push
push
dec
dec
outsb
jae
popa
insb
insb
dec
inc
inc
inc
add
add
push
push
dec
dec
outsb
jae
popa
insb
insb
inc
jb
jbe
jb
add
inc
inc
inc
push
xor
cs
insb
add
add
inc
push
dec
xor
push
inc
arpl
outsl
insb
add
dec
push
inc
push
dec
xor
fs
insb
add
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
jno
add
add
add
add
add
xchg
add
test
add
mov
or
add
mov
add
ss
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
xchg
xchg
xchg
add
lods
lods
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
stos
lods
mov
mov
lcall
jge
add
jnp
stos
lods
stos
add
test
mov
mov
mov
ret
lret
lret
into
rcl
in
rcl
shl
iret
rcl
hlt
int3
int
hlt
enter
leave
enter
mov
mov
mov
mov
stos
stos
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
and
mov
mov
lret
not
rcl
cld
fcom
std
xlat
xlat
xlat
fdivr
aad
aad
ror
sar
into
into
into
aad
aam
iret
iret
iret
inc
ret
mov
mov
lods
iret
mov
xchg
and
add
push
add
add
add
add
add
add
add
add
stos
stos
lods
add
lods
lods
sbb
mov
jnp
mov
sar
mov
leave
leave
lret
rcl
aad
xlat
fcomp
call
xlat
call
aad
int
int
int3
int3
int
aam
aam
int
int
mov
mov
mov
std
test
test
xchg
xchg
xchg
mov
pop
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
push
add
inc
add
pop
add
or
inc
or
sbb
push
add
add
add
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
leave
enter
int3
call
rcl
fcomp
fdivr
call
aam
int3
into
int3
dec
lret
lret
dec
int
inc
mov
sarl
pushl
cmpsb
test
mov
cltd
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
or
push
imul
fs
sbb
prefetch
sbb
sbb
aaa
cmp
sub
and
adc
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
sarb
leave
enter
rcl
call
aam
aad
aad
rcl
sar
enter
mov
inc
ret
mov
mov
ljmp
movsb
movsb
pushf
popf
sahf
cwtl
cwtl
xchg
lcall
test
pop
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jo
jge
jl
jge
jg
jo
jo
bound
mov
cmp
inc
mov
jo
outsb
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
inc
leave
dec
leave
leave
dec
lret
enter
mov
mov
lods
scas
scas
jmp
lcall
xchg
xchg
xchg
xchg
xchg
xchg
fwait
fwait
lcall
ds
push
or
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
jo
add
pop
or
jp
mov
incb
jp
idivb
jl
outsl
outsl
outsb
out
data16
fdivs
jae
jle
jg
jns
js
arpl
inc
inc
cmp
sbb
sbb
adc
or
stos
stos
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsl
lcall
nop
incl
addl
xchg
xchg
lahf
sahf
lahf
sti
mov
xchg
cwtl
mov
jp
js
xor
das
das
add
add
add
add
add
add
add
add
add
add
mov
pop
push
test
jno
cltd
sahf
in
mov
mov
addl
mov
mov
jge
jno
jb
je
jne
jle
jg
addl
xchg
data16
cmp
es
jg
jg
cltd
fwait
lcall
test
lods
sti
stos
stos
lods
stos
lods
lods
stos
test
std
movsl
movsb
movsl
std
lcall
incl
jge
jns
jns
jnp
jnp
mov
xchg
movsb
mov
scas
sti
mov
mov
mov
mov
mov
lods
scas
stos
xchg
sbb
add
add
add
add
add
add
add
add
push
pop
adc
movsb
cmpsb
out
lods
mov
xchg
nop
xchg
incl
xchg
std
xchg
xchg
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
lea
xchg
or
push
xor
inc
dec
insl
insb
insb
jl
test
leave
fwait
lcall
lcall
std
mov
mov
mov
mov
nop
lcall
cmpsl
cmpsb
ljmp
mov
std
mov
mov
mov
std
mov
mov
movsl
mov
jnp
scas
test
add
pop
adc
test
call
fwait
xchg
cltd
incl
test
decb
xchg
sahf
sahf
popf
std
movsl
movsb
movsb
stc
mov
xchg
xchg
in
nop
nop
in
xchg
push
jne
femms
dec
add
or
dec
dec
dec
outsw
jo
test
xchg
xchg
rclb
xchg
xchg
std
mov
nop
call
mov
test
lods
test
pushl
cmpsl
lods
mov
xchg
stos
std
rorb
mov
mov
ljmp
mov
add
pop
pop
adc
mov
jmp
sahf
cltd
fwait
incl
mov
decl
nop
nop
xchg
xchg
xchg
popf
pushf
pushf
movsl
movsb
movsb
test
stos
movsb
movsl
mov
fstpt
jl
push
push
push
outsl
dec
dec
dec
pop
bound
jo
je
jl
jg
test
int
nop
xchg
in
nop
xchg
testl
mov
jmp
mov
mov
pop
mov
mov
aaa
jge
mov
js
mov
movsl
mov
mov
stos
lods
mov
movsl
mov
add
pop
pop
adc
mov
ljmp
popf
decl
call
xchg
xchg
call
xchg
cltd
fwait
cltd
pushf
popf
pushf
sahf
sahf
lahf
movsb
movsb
movsl
std
mov
lcall
nop
xchg
xchg
les
cltd
cltd
in
xchg
cwtl
out
xchg
cmc
xchg
test
std
xchg
je
cltd
imul
ljmp
cmp
mov
je
mov
outsl
ljmp
adc
lods
or
lods
or
pushl
mov
mov
pushf
movsb
movsb
movsl
and
add
add
mov
add
pop
adc
mov
ljmp
sahf
call
xchg
xchg
lcall
sahf
sahf
jmp
popf
popf
call
xchg
cwtl
call
xchg
xchg
call
xchg
fwait
cld
cwtl
xchg
popf
stc
mov
xchg
sahf
cld
popf
mov
xchg
imul
xchg
dec
jp
cltd
cmp
insb
popf
push
push
jmp
adc
adc
lods
pcmpgtd
stos
packuswb
scas
adc
mov
imul
mov
imul
aas
cmp
mov
scas
lods
scas
movsl
movsb
mov
add
add
add
add
add
pop
pop
adc
mov
ljmp
popf
call
popf
lcall
mov
movsl
jmp
cwtl
cwtl
decl
mov
decl
jbe
lcall
xchg
dec
jns
xchg
cmp
decl
sbb
pop
decl
add
call
pop
lcall
adc
lods
sbb
mov
outsl
pushl
jo
mov
and
mov
and
inc
cmp
xchg
lods
mov
scas
lods
mov
lahf
sahf
sahf
add
add
add
add
add
pop
pop
adc
scas
mov
shlb
sahf
pushf
popf
jmp
test
jmp
test
cmpsl
lcall
orb
dec
jno
mov
imul
sub
mov
popa
decl
or
push
incl
add
mov
pop
decl
add
fwait
add
lahf
add
or
mov
jo
mov
jbe
mov
sub
shrb
inc
sub
jle
leave
cs
movl
mov
mov
lret
mov
add
add
add
add
add
push
push
adc
test
mov
lahf
lcall
stos
stos
stos
ljmp
stos
stos
pushl
lods
scas
jmp
jb
decl
or
push
incl
add
test
push
incl
add
xchg
push
decl
push
call
pop
lcall
add
scas
adc
mov
aaa
cmp
cmp
dec
cmp
sarb
mov
sarb
mov
sarb
mov
rolb
dec
mov
std
mov
mov
movsl
movsb
movsb
push
mov
mov
add
add
add
mov
dec
dec
adc
test
mov
mov
sahf
cltd
lahf
jmp
scas
scas
pushl
mov
pushl
mov
ljmp
jbe
decl
or
mov
pop
decl
or
xchg
push
incl
add
mov
push
call
add
popf
add
mov
add
stos
add
pushl
cmp
dec
inc
mov
rolb
call
dec
nop
fmuls
call
dec
xchg
fisttpll
ficoml
call
test
mov
mov
movsl
movsl
movsb
arpl
mov
add
add
add
lcall
adc
jl
sahf
mov
lcall
stos
stos
pushl
mov
mov
mov
mov
mov
mov
mov
jmp
aaa
outsb
decl
sbb
pop
pusha
decl
pop
decl
add
nop
add
xchg
add
sahf
add
add
cmpsb
add
test
push
arpl
mov
inc
call
push
xchg
call
push
fwait
fistl
fistpl
ficoms
ficomps
jmp
pop
mov
jmp
pop
lahf
call
xchg
mov
mov
jne
sahf
mov
add
inc
inc
adc
ja
lahf
fwait
popf
jmp
lahf
fwait
sahf
ljmp
mov
pushl
mov
mov
pushl
xchg
mov
decl
and
call
pop
arpl
xchg
sbb
nop
or
nop
add
xchg
add
cltd
add
mov
add
lods
add
mov
gs
mov
xor
jmp
movsb
jmp
arpl
jmp
data16
call
push
test
fildl
mov
cmpsb
cmpsb
mov
lahf
mov
add
add
add
inc
inc
adc
je
fwait
xchg
lcall
fwait
sahf
ljmp
mov
pushl
mov
mov
mov
mov
jle
xchg
sub
fwait
xor
lcall
call
or
xchg
add
fwait
add
mov
add
lods
add
mov
pushl
call
inc
xchg
fldt
jmp
jo
jmp
jno
call
jb
jmp
scas
in
jne
out
jbe
out
jbe
out
jb
jmp
xchg
mov
cmpsl
cmpsb
lcall
lahf
add
add
aas
adc
outsl
js
mov
sahf
pushf
lcall
mov
mov
mov
mov
mov
cmpsb
scas
lcall
xor
lahf
aaa
jbe
lahf
cmp
mov
sbb
pop
call
add
movsb
add
stos
add
mov
arpl
mov
gs
mov
sbb
fsts
jmp
js
ljmp
jmp
mov
out
cmpb
lock
hlt
cmpl
mov
inc
mov
stos
cmpsl
pushf
sahf
popf
daa
mov
sahf
lahf
add
add
add
pop
add
xor
pop
jne
jle
out
xchg
xchg
xchg
xchg
pushl
mov
mov
mov
ret
ret
mov
lcall
cmp
mov
inc
jg
mov
sbb
xchg
add
pushf
add
movsb
add
test
add
add
mov
add
shll
movsl
call
mov
icebp
mov
push
nop
ret
push
nop
ret
push
xchg
xchg
clc
pop
out
mov
inc
ret
lods
stos
mov
pushf
sahf
xor
sahf
sahf
add
add
add
inc
cmp
push
inc
dec
inc
jb
pop
dec
in
push
call
mov
mov
mov
mov
inc
ret
ret
mov
mov
jle
lcall
dec
jg
stos
dec
test
movsl
xor
lcall
add
mov
add
lods
add
mov
fs
mov
add
movl
mov
in
xchg
cltd
push
cltd
cltd
push
fwait
leave
push
lcall
sti
lahf
int
cli
popf
int
sti
lcall
fistpll
cli
mov
mov
sahf
sahf
mov
add
add
add
das
cs
cmp
outsb
dec
dec
dec
jecxz
pop
decl
mov
mov
mov
sar
ret
inc
enter
mov
mov
ljmp
dec
xchg
mov
push
pop
lcall
pop
ljmp
add
mov
add
movl
je
fiadds
out
mov
push
movsl
int3
push
movsl
int3
push
test
sti
cmpsl
sar
cld
cmpsl
sar
cli
test
test
iret
test
push
sahf
mov
dec
enter
mov
into
mov
xchg
xchg
add
lcall
xor
xor
daa
sub
or
inc
bound
pop
xlat
jne
jo
mov
rol
ret
mov
ret
dec
leave
inc
rol
mov
cmpsl
jmp
push
mov
scas
dec
test
sahf
sbb
sahf
add
movsb
add
stos
add
mov
arpl
mov
add
int3
add
add
adc
out
pop
test
negl
sar
cli
scas
sti
mov
cld
mov
cld
mov
cld
mov
mov
mov
std
mov
mov
push
movsl
jmp
mov
dec
enter
mov
ficompl
xchg
xchg
or
add
add
xor
sbb
outsl
jo
mov
fcomp
jmp
xlat
not
rcl
std
int3
int3
int3
dec
lret
lret
lret
lret
inc
enter
scas
ljmp
push
mov
lods
cmp
lcall
add
add
mov
fs
mov
add
iret
add
fadds
jb
loopne
jne
jmp
jno
cli
lods
aam
cld
mov
cld
mov
fdivr
std
mov
fdivr
mov
xlat
inc
mov
lret
jmp
mov
call
lret
int3
mov
sahf
sahf
jo
xchg
xchg
or
add
add
xor
add
add
or
movb
jecxz
out
jmp
test
jecxz
leave
fsubp
fcmovnu
fcomi
xlat
cli
aad
fdivr
int
iret
mov
push
ljmp
sub
mov
add
mov
mov
add
lret
call
add
fildl
jbe
in
ja
in
das
xchg
stc
mov
cli
mov
loopne
inc
loopne
std
loop
std
loopne
std
inc
fdivrp
std
enter
leave
fdivrp
dec
dec
loope
sti
mov
enter
iret
mov
mov
xchg
adc
add
add
incb
std
incb
incl
hlt
cmc
cmc
or
out
jmp
in
out
in
sub
out
out
dec
call
ljmp
in
out
fcmovnu
fsubr
ret
mov
xchg
cmpsb
cmp
mov
add
ljmp
add
add
les
imul
add
add
filds
jbe
ljmp
cli
mov
in
cld
lret
in
dec
in
std
into
in
dec
jecxz
dec
jecxz
std
int
call
loop
shl
shl
shl
cld
ret
in
mov
fdivr
ret
out
cmpsl
cmpsl
test
xchg
xchg
xchg
sbb
cltd
fwait
add
incb
std
add
idiv
add
repnz
add
repnz
push
in
icebp
out
pop
out
icebp
lock
out
in
pop
fsubp
loopne
lds
sti
lahf
and
pop
jmp
add
mov
inc
add
leave
add
roll
jo
fildl
jne
jecxz
jnp
in
push
jle
negl
sti
mov
shl
std
shl
std
shl
call
out
std
shl
aam
call
jmp
std
fld1
std
fldl2t
cld
shl
push
ret
aam
in
lret
repz
test
and
xchg
xchg
add
std
sti
add
std
testl
repnz
or
aad
xor
mov
xchg
negb
add
cmpsb
add
lods
add
mov
add
lret
add
roll
jb
faddl
jne
out
ja
out
sbb
cld
ret
loopne
std
fldl2t
std
fucomi
std
fucomi
std
fldl2e
fucomi
std
fucomp
fsubr
fsubr
fucomip
std
loopne
fsubrp
std
shl
push
ret
out
iret
ror
clc
stos
lods
stos
lods
xchg
xchg
xchg
outsl
outsb
jo
xchg
xchg
xchg
add
loop
add
mov
cwtl
repnz
and
sahf
add
add
mov
popa
mov
add
into
add
aad
jno
fiadds
jae
ljmp
cli
pop
cld
shr
std
loopne
std
fucomi
fldl2e
out
cld
aam
std
shl
cli
iret
loope
sti
shl
push
iret
stc
int3
fdivr
test
lret
rcr
call
fcomp
sti
mov
mov
lcall
add
add
add
xlat
add
mov
lahf
jmp
sub
add
test
add
mov
add
rolb
outsl
call
add
loope
jp
call
ss
sti
xchg
enter
loope
cli
lret
cli
stc
mov
aam
repz
sar
lock
int
jmp
mov
sar
jmp
shl
ljmp
in
mov
mov
xchg
add
add
add
int
mov
mov
movsl
loopne
xor
pop
ljmp
add
mov
add
int
jb
rorl
je
ficoml
jns
loop
cmp
dec
cwtl
ljmp
ljmp
std
loop
scas
ret
mov
lock
int
fcmovne
iret
fsubp
iret
shl
xlat
fcmovb
out
loop
in
in
test
out
out
popf
ljmp
push
lods
lods
lods
adc
cmpsl
cmpsl
cmpsl
add
ret
rolb
ret
mov
stos
aam
dec
jg
popf
sbb
cmpsb
sbb
lods
and
mov
ja
mov
inc
test
les
stc
lret
test
mov
out
mov
rcl
mov
int3
rcl
int3
mov
iret
shll
rcl
jg
fcmovu
jb
gs
in
out
jmp
xor
cmc
div
and
repnz
sbb
fcmovnu
or
mov
int3
add
add
add
mov
inc
mov
test
test
sbbb
mov
cmpsl
sarb
mov
ret
cmpsl
mov
mov
leave
int
ror
into
addr16
rclb
rcl
dec
fcom
inc
rcl
xor
daa
fcomp
fistpl
fcmovu
fcoml
fsubp
loop
in
out
jmp
jmp
in
add
cld
cmc
add
std
add
std
incl
std
incb
mov
mov
shrl
mov
mov
mov
mov
mov
mov
mov
mov
ret
kandb
mov
daa
lret
rcl
and
aam
rcl
aam
rcl
aam
aam
aam
aam
add
fstp
add
add
in
add
jmp
add
aam
incl
mov
mov
add
ret
mov
mov
mov
mov
push
rol
or
leave
enter
movl
leave
aam
add
fcom
add
aad
fcom
add
aam
add
xlat
loopne
xlat
aad
add
loope
add
fsubp
add
in
add
repnz
incl
std
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
les
mov
mov
ja
stos
test
cmpsl
cmpsl
cmpsl
and
add
add
add
add
add
add
add
add
mov
push
mov
enter
into
jmp
rcl
cmc
rcl
sar
into
iret
sar
lret
int
stc
int3
lret
mov
mov
iret
stos
lods
lods
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
addb
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
leave
cld
ror
iret
aad
call
aad
call
iret
sar
int
iret
dec
lret
mov
mov
cld
stos
stos
stos
icebp
xchg
xchg
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
jae
jne
je
gs
dec
dec
dec
cmp
sub
sub
xor
dec
sub
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
dec
lret
rcl
sar
rcl
sar
lret
inc
mov
mov
ljmp
sahf
lahf
cwtl
xchg
xchg
jmp
outsl
jo
push
pop
pop
dec
add
add
add
add
add
add
addl
test
imul
movsb
push
push
push
stos
push
insb
insl
push
pop
pop
cmp
cmp
pop
jno
jno
scas
scas
scas
pop
mov
mov
mov
mov
sar
mov
mov
mov
mov
ljmp
pushf
lcall
xchg
xchg
lcall
xchg
dec
dec
dec
dec
movups
xor
add
and
add
adc
add
pop
fwait
fwait
fwait
add
pushf
xchg
cwtl
fcoml
addb
jl
jl
js
jp
jnp
jp
jnp
jns
jae
je
push
push
push
cmp
jae
pushf
pushf
pushf
mov
lods
scas
rep
scas
scas
sti
scas
scas
lods
std
cmpsl
test
std
popf
popf
popf
call
test
call
mov
lods
jmp
scas
scas
leave
movsl
movsb
movsb
cltd
je
jb
adc
adc
add
add
add
add
insl
outsl
outsl
pop
nop
mov
sahf
cltd
popf
incl
mov
sti
xchg
xchg
xchg
lock
xchg
nop
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsl
outsl
outsl
orl
lcall
mov
mov
xchg
xchg
xchg
lcall
movsb
test
std
mov
mov
stc
mov
mov
movsl
mov
addl
add
add
pusha
pusha
pop
or
lods
mov
movsl
mov
mov
mov
nop
lcall
popf
lahf
sti
lahf
mov
cwtl
call
push
push
push
jo
push
pop
outsl
imul
jge
subl
mov
lcall
mov
mov
xchg
mov
mov
mov
jge
mov
scas
stos
insl
test
add
add
add
add
pop
or
mov
in
movsb
test
xchg
xchg
xchg
call
xchg
cwtl
lcall
cltd
lcall
lahf
pushf
cli
xchg
xchg
cwtl
jmp
xchg
lea
nop
orb
xchg
push
cld
xchg
pop
jle
sahf
dec
jl
movsb
inc
jp
scas
xor
jb
mov
insl
pushl
sbb
mov
mov
scas
scas
jle
movsb
movsl
push
popa
popa
pusha
or
mov
in
mov
xchg
lcall
mov
mov
decl
addb
xchg
jno
cld
cwtl
pop
cmp
dec
js
xchg
cmp
xchg
daa
imul
xchg
adc
mov
adc
imul
sbb
pushl
push
jae
mov
pop
mov
scas
scas
xchg
popf
popf
popf
adc
add
add
pop
pusha
pusha
or
mov
stos
movsb
test
mov
test
ljmp
test
cwtl
decl
cmp
mov
decl
adc
xchg
pop
decl
add
xchg
add
pushf
add
test
pushl
jl,pn
shrl
inc
das
jle
enter
leave
xor
dec
pop
xchg
inc
stos
mov
mov
mov
test
test
add
add
add
pusha
or
movsl
stos
in
mov
test
scas
mov
pushl
mov
jmp
inc
jb
mov
pop
decl
or
test
push
call
add
lahf
add
add
mov
outsb
inc
ss
int3
inc
mov
into
inc
mov
roll
xlat
inc
xchg
fiaddl
call
arpl
stc
mov
mov
mov
incl
add
add
pusha
popa
popa
or
mov
ljmp
mov
mov
mov
ljmp
push
jge
push
popa
call
adc
pop
decl
add
lahf
add
test
pop
ljmp
and
rorl
fsts
fistpl
jmp
pop
lahf
jmp
pop
mov
fildll
dec
cmpsb
mov
ret
cmpsl
xor
add
add
dec
pop
jl
jl
fwait
xchg
cwtl
jecxz
sahf
mov
pushl
mov
mov
lcall
sub
lcall
and
xchg
cvtdq2ps
xchg
add
sahf
add
add
mov
arpl
mov
xor
jmp
insl
stos
jmp
outsl
stos
ljmp
out
jae
call
test
std
mov
test
jg
add
add
dec
dec
dec
pop
insl
outsb
imul
test
fwait
cltd
xchg
pushl
mov
mov
mov
jbe
lcall
jbe
pushf
sub
xchg
or
pushf
add
movsl
add
lods
add
mov
fs
or
xchg
jmp
js
jmp
mov
out
test
push
xchg
out
xchg
mov
cmpsl
test
cltd
fwait
lcall
sub
push
push
push
dec
pop
pushw
mov
mov
mov
mov
xchg
jmp
sub
cltd
push
pop
jmp
add
mov
arpl
mov
adc
mov
push
xchg
ret
push
cwtl
push
xchg
clc
lcall
notl
inc
mov
stos
popa
mov
add
add
xor
inc
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
ret
mov
test
cmpsl
pop
mov
stos
dec
cmp
pop
insb
lcall
add
mov
arpl
mov
add
fisubl
cmp
cmc
mov
sar
cli
test
sar
std
lods
iret
cld
lods
sar
cli
cmpsl
int3
jmp
mov
inc
mov
test
or
add
add
push
push
dec
aaa
jae
jae
stos
stos
test
out
int
cmc
leave
int3
int3
sti
enter
mov
mov
test
inc
jle
mov
add
mov
gs
add
into
add
fiaddl
jbe
ljmp
cld
mov
std
mov
std
mov
xlat
cld
mov
fdivr
sti
mov
leave
dec
rol
scas
scas
lods
mov
add
add
add
add
pop
or
rcl
dec
loope
loop
fsubp
loope
fcmovnb
fcmovu
fcmovu
aam
out
mov
data16
cmpsl
sub
jmp
mov
add
add
loop
jp
icebp
push
mov
cld
loopne
std
loop
dec
loopne
dec
std
leave
dec
std
lock
lret
divb
pushf
sbb
add
add
std
incl
incb
jmp
or
out
in
sbb
in
jmp
ljmp
xchg
mov
mov
mov
add
pushl
add
into
add
fldl
je
ljmp
sti
std
shl
std
shl
shl
std
shl
aad
fsub
shl
push
xlat
fmul
sar
mov
mov
add
std
std
add
incl
cld
std
pop
aam
push
mov
pop
xchg
lahf
or
pusha
pushl
add
rolb
jno
filds
jbe
out
and
shl
fsubr
fsubr
fld1
sti
fsub
cld
xlat
out
cld
aam
push
enter
rcl
sti
mov
lahf
sahf
das
add
add
int
into
or
arpl
ljmp
addr16
add
aad
jb
loop
js
out
xor
sti
int
clc
lret
test
repnz
out
sar
in
sar
in
aam
in
aam
in
fsubr
mov
test
std
std
std
add
add
add
aad
push
mov
je
push
gs
mov
insb
inc
sbb
int
jnp
sub
pushf
clc
loop
mov
out
loop
lret
mov
leave
faddp
lret
leave
loopne
iret
mov
in
fcompl
in
call
rorb
mov
add
lods
stos
stos
add
xchg
mov
ljmp
nop
fidivrl
andb
int3
mov
les
aam
int
aad
iret
pop
rcl
rorb
cmp
das
in
frstor
jecxz
lock
in
in
or
incb
std
add
mov
outsb
scas
mov
lods
mov
push
mov
mov
xor
leave
mov
pop
rol
adc
rcl
or
loope
or
into
int
stos
stos
lods
add
incl
std
std
incl
lcall
pextrw
or
into
int3
into
add
std
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
cltd
lcall
rol
enter
leave
leave
leave
mov
ret
mov
scas
scas
scas
insb
stos
stos
stos
xor
jne
add
add
add
add
add
add
add
add
add
add
add
add
lods
stos
stos
add
mov
jmp
aam
aam
rcl
sar
iret
int
std
mov
stc
mov
test
sarl
gs
push
pop
add
add
add
add
add
add
add
add
jb
jno
pushw
inc
inc
dec
das
sub
inc
inc
and
add
add
mov
mov
cmpl
ret
int
call
aad
dec
into
into
inc
mov
ljmp
mov
mov
add
xor
add
sbb
jae
je
xchg
adc
arpl
mov
data16
outsb
outsb
outsb
jb
popa
popa
cmp
pop
sbb
mov
in
mov
mov
mov
lods
stos
lcall
xchg
xchg
lcall
cltd
xchg
lds
jno
es
and
pop
add
add
je
je
pushf
xchg
pushf
mov
test
mov
xchg
or
addb
push
push
push
inc
mov
pushf
into
movsb
mov
mov
decb
mov
fwait
pushf
fwait
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
push
add
add
xorb
lods
movsb
test
test
mov
xchg
xchg
xchg
cld
sahf
pushf
pushf
cmc
cwtl
lcall
push
push
push
imul
jle
mov
xchg
notl
mov
mov
fwait
mov
jno
mov
lods
lods
push
stos
stos
stos
add
add
add
test
test
xchg
xchg
xchg
call
fwait
lcall
fwait
cltd
std
xchg
xchg
xchg
out
xchg
mov
loope
je
out
xchg
arpl
std
pushf
inc
jne
movsl
cmp
sub
mov
jno
mov
insb
pushl
popf
scas
lock
mov
imul
int3
add
xchg
pop
scas
movsb
stos
test
popf
popf
popf
jmp
movsb
call
jl
lea
xchg
inc
je
mov
imul
xchg
adc
cwtl
or
mov
push
insl
pushl
and
inc
daa
jns
les
test
rcrb
subl
jae
push
mov
mov
cmpsl
ljmp
scas
mov
mov
sub
mov
pop
incl
add
mov
push
call
add
adc
ret
dec
aas
mov
iret
inc
mov
inc
mov
aad
xchg
dec
cwtl
mov
mov
mov
mov
add
add
imul
movsb
lahf
mov
pushl
mov
movsl
call
decl
pop
push
call
add
stos
add
mov
push
xchg
fistpl
jmp
pop
mov
jmp
movsw
call
pushf
mov
test
cmpsb
cmpsb
pop
add
add
bound
adc
sahf
fwait
pushf
cld
mov
mov
mov
mov
scas
lcall
jo
cwtl
and
xchg
or
sahf
add
add
mov
xor
jmp
jns
jmp
mov
out
jge
push
jg
fistpl
mov
mov
add
add
dec
adc
imul
mov
mov
mov
ret
ret
mov
bound
lcall
add
jmp
add
ret
or
fimull
in
mov
push
xchg
cwtl
leave
stc
xchg
jmp
movsl
inc
mov
movsb
sub
inc
inc
inc
adc
push
xchg
xchg
mov
inc
mov
cwtl
ljmp
sbb
movsl
add
mov
fs
add
aam
ja
ljmp
cli
stos
iret
cld
scas
sar
std
lods
sar
std
lods
sar
jmp
enter
mov
ds
incb
xor
outsl
inc
mov
mov
aad
mov
aad
fnop
rcl
out
leave
lret
mov
mov
jmp
inc
add
aam
jno
call
pop
mov
fdivr
cld
rcr
std
ret
cld
rcr
lock
shl
test
dec
jg
addl
lods
stos
lods
add
in
in
or
out
call
outsb
movsb
daa
insl
ljmp
add
lret
add
add
lock
std
into
in
shl
shl
call
in
shl
push
leave
fcos
aad
into
in
scas
lods
scas
popa
jg
jg
std
incl
std
incl
int3
int
sub
mov
add
mov
add
jecxz
jns
cmc
push
cmpsl
std
loopne
std
aad
aam
aam
std
shl
cli
shl
push
xlat
fcmovne
shl
mov
mov
xchg
xchg
xchg
pop
ret
ret
mov
mov
cld
lods
push
gs
mov
or
jg
ljmp
cli
out
mov
iret
bnd
shl
in
aad
jmp
fcmovu
scas
lcall
add
sarb
movsl
pop
xchg
lods
inc
and
push
mov
ret
int3
int3
ja
mov
mov
lret
into
outsl
fmul
iret
pop
aad
in
loopne
call
out
out
sbb
rol
add
mov
cmp
movsb
lods
arpl
lods
mov
les
lds
ret
ret
fstp
fisttps
into
int3
int
aam
push
incb
addb
add
add
add
rol
std
incl
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
fstps
aad
jl
dec
pop
push
fs
movsb
rclb
shl
cmp
cld
jmp
mov
sub
cs
and
ja
push
das
add
sbb
sub
fbstp
imull
sbb
pop
inc
adc
xchg
lock
sbb
jecxz
pop
cltd
or
pop
xchg
and
cmp
aad
jle
loop
add
jmp
das
xor
fincstp
xchg
fsubs
fistps
aaa
adc
mov
pop
and
jp
and
js
sti
or
fneni(8087
mov
inc
dec
xchg
add
inc
test
into
push
push
cli
or
add
aam
cmp
fnstcw
stc
imul
jne
push
popf
test
movb
adc
cmp
lcall
cmc
leave
in
or
popl
mov
aad
mov
iret
push
mov
xchg
add
fdivs
push
aam
inc
lea
push
test
push
arpl
jg
bound
add
and
fisttps
dec
jmp
mov
push
ja
divb
pushf
fwait
lcall
daa
push
mov
sarb
ds
ss
ud0
add
lcall
cwtl
mov
fisttpl
jns
rclb
cs
add
and
pop
addr16
pop
pushf
push
pop
xchg
jbe
aaa
out
adc
stos
ss
ja
mov
aaa
std
or
stc
mov
pop
daa
lret
jae
sub
pusha
repz
adc
imul
cmc
xor
pop
lock
inc
mulb
xchg
dec
xchg
jg
test
movsl
xchg
or
lret
call
lcall
xchg
insb
or
mov
std
jg
in
stos
jmp
add
sbb
pop
dec
mov
popa
xchg
xchg
mov
mov
adc
cmpl
out
fsubl
test
and
cli
mov
popa
sbb
or
aam
inc
aam
lret
push
add
xchg
xchg
add
adc
dec
arpl
cmp
jno
cmpsb
call
outsb
dec
arpl
imul
inc
pop
aad
lret
scas
dec
add
mov
bound
mov
pop
outsb
adc
pop
call
dec
or
sbb
mov
adc
mov
mov
pop
imul
das
mov
mov
inc
mov
rolb
test
mov
iret
xchg
lret
xchg
mov
test
insl
hlt
sti
jge
and
sbb
cltd
adc
imul
rorb
mov
or
call
imul
cli
test
pop
std
rol
sbb
test
mov
hlt
lods
outsl
jne
cmp
das
stos
mulb
adc
jmp
clc
mov
rorb
cld
mov
iret
and
mov
jmp
icebp
aam
adc
mov
out
push
movsb
xor
mov
icebp
inc
push
cmp
rorb
xchg
pop
jno
cmp
jbe
jmp
sub
jbe
mov
sub
push
add
and
lret
out
leave
mov
pop
mov
sub
cwtl
in
imul
pushf
cmp
sub
test
dec
xchg
sub
and
push
dec
outsl
cli
hlt
xchg
adc
add
pushf
push
add
cltd
mov
sysret
rclb
fistl
int3
mov
inc
cld
jnp
es
lahf
sub
in
push
mov
jp
in
push
pop
mov
adc
imul
js
and
mov
sub
sbb
mov
popa
enter
mov
mov
xor
pop
clc
sbb
sub
int
push
gs
add
mov
lahf
push
lods
push
scas
daa
aad
mov
jmp
imull
out
cmpsl
push
gs
push
mov
popw
cmp
bndstx
and
rorb
and
pop
push
cmpsb
xor
inc
push
add
sbb
push
mov
enter
cmc
pop
sub
imul
push
jnp
push
ret
xor
mov
shlb
mov
jecxz
xchg
jb
lcall
mov
fidivrs
notl
dec
adc
mov
jl
inc
xchg
imul
jns
in
je
push
mov
cmp
sbb
sbb
add
ljmp
jns
jecxz
mov
rol
dec
mov
sahf
fwait
les
mov
popa
movl
rcrb
mov
sbb
push
shll
mov
fidivs
je
das
push
cltd
lock
lock
push
pop
data16
test
repz
shll
inc
inc
and
inc
nop
ja
popf
insb
lds
sarb
pop
jge
jo
mov
movsb
daa
ss
inc
prefetch
cmp
mov
xor
das
ret
cli
or
out
xchg
jp
mov
mov
out
ljmp
jns
push
ret
sbb
adc
xor
xchg
sub
out
cld
stc
xchg
or
repz
xor
pop
icebp
ja
aad
aaa
add
pop
or
xchg
jno
mov
imull
call
test
inc
jno
push
test
xchg
sub
xchg
daa
jmp
xchg
adc
in
lods
aad
and
or
pop
mov
clc
push
mov
xor
clc
into
ret
inc
das
out
test
and
push
sub
cwtl
movsb
out
pop
out
daa
pop
mov
dec
mov
pop
sti
mov
js
lock
dec
icebp
push
adc
lods
subb
xlat
sub
into
mov
cmp
xchg
fldcw
mov
fadd
test
sbb
push
mov
inc
or
insl
cmp
into
gs
pop
hlt
mov
scas
adc
cmp
inc
fdivrl
pop
cmp
lea
cli
xchg
scas
push
in
fbstp
jne
xor
xchg
sub
lds
push
sub
and
addb
int3
ficoms
jl
cmp
pop
shll
clc
cmp
ret
inc
addl
dec
jp
imul
rcrl
and
repz
and
mov
clc
adc
mov
out
or
mov
ret
and
imul
aaa
mov
fistpll
adc
xor
jae
or
cli
xchg
mov
mov
scas
or
int
pop
cmc
mov
jl
jmp
pop
adc
add
nop
daa
push
decl
xor
inc
cmpsl
push
insl
add
enter
movsb
mov
sbb
orb
inc
sub
mov
jl
daa
mov
iret
adc
push
push
or
inc
cli
pushf
out
icebp
daa
outsl
inc
xor
lods
loopne
jg
and
mov
popa
adc
lret
push
shl
jo
mov
jnp
push
popa
std
xchg
pop
xor
notl
aam
es
dec
pop
cmp
xor
cmp
dec
dec
mulb
push
nop
movntps
push
adc
xchg
dec
sub
es
int3
sbb
gs
push
sbb
or
jbe
push
nop
in
stos
cld
lcall
and
mov
aas
sub
xor
or
jge
push
out
sahf
jnp
sarb
add
and
mov
add
dec
ja
stos
inc
push
cwtl
aad
lret
pop
test
lret
out
std
adc
dec
nop
das
mov
and
adc
inc
fdiv
xor
add
pusha
testl
jle
cltd
fisubl
xor
sub
mov
jp
popa
fnstenv
roll
adc
movsb
ret
outsb
jl
xchg
scas
sub
ror
mov
loop
loope
and
rcrb
adc
scas
and
pop
mov
lds
repnz
ret
out
shr
mov
xor
jae
lock
pop
ja
jno
adcl
cmp
jecxz
aaa
adc
test
loopne
rcr
pop
test
inc
fldenv
inc
mov
jnp
pop
icebp
jno
xchg
pop
xchg
jge
add
jne
push
mov
cwtl
mov
pop
hlt
sub
fidivl
popa
call
push
ds
mov
andl
jbe
call
enter
loop
sbb
pop
xchg
cmp
lods
xor
mov
loopne
add
stc
jmp
es
mov
repnz
and
into
cltd
lret
insl
push
out
pushf
sub
pop
sahf
cmp
lods
xor
sbb
xor
shl
mulb
jle
xchg
lock
jbe
das
push
mov
lcall
ret
pop
lea
aas
xor
aad
sbb
inc
mov
jp
push
xor
inc
jle
push
lods
mov
dec
mov
jl
data16
push
push
popf
inc
mov
std
out
pop
sub
push
jmp
stc
mov
mov
fadds
movsb
xor
push
lods
test
push
mov
stc
pop
sub
cltd
xor
fdivl
lea
call
lahf
or
popf
xor
scas
insl
add
mov
add
mov
mov
jbe
cmp
and
pop
jne
dec
sub
push
insl
push
mov
repnz
repnz
mov
repz
mov
cmpsb
aam
sbb
cmp
aaa
into
stos
repnz
mov
fiadds
into
icebp
lds
repz
dec
lods
inc
xchg
sub
imul
cwtl
cltd
or
fnstenv
clc
add
sbb
sub
out
test
popa
ljmp
je
pop
xor
mov
xchg
clc
cld
adc
and
lds
lods
push
movsl
push
scas
in
adc
sbb
mov
xchg
ret
scas
mov
outsl
push
aad
mov
shl
add
inc
or
scas
jns
dec
out
fwait
call
adc
daa
mov
ffree
push
call
ja
es
dec
in
xor
in
sbbl
mov
add
or
mov
out
out
xchg
nop
je
enter
mov
ret
xchg
sub
sbb
cmp
xchg
sub
mov
aad
xchg
jae
ret
xor
insb
test
ss
push
icebp
mov
xchg
mov
fidivl
int3
mov
or
mov
add
xchg
adc
rolb
mov
xor
cmp
fcomps
mov
leave
scas
pop
repnz
cmp
int
or
loopne
pop
idivb
dec
fbstp
xchg
inc
xchg
sub
add
cwtl
das
push
add
in
mov
cmpl
mov
rorb
lahf
push
jo
adc
lret
or
cmc
cltd
adc
xchg
lods
jns
sbbb
adc
mov
lods
ljmp
mov
loopne
dec
rcrb
popf
xor
imul
lahf
push
xor
ja
ja
bound
and
popf
shrl
xor
leave
pusha
inc
je
shrl
inc
scas
inc
jne
outsb
add
dec
mov
mov
fnsave
and
and
sub
inc
push
mov
push
sbb
push
call
leave
jge
sbb
out
xchg
xor
pop
cmp
pusha
notl
adc
jmp
mov
cmp
sbb
mov
pop
inc
addr16
xor
push
jno
xor
fldl
and
pop
lock
mov
fbstp
dec
out
xchg
pop
test
xlat
jecxz
add
xchg
sub
mov
divb
test
inc
and
sbb
pop
jno
fnstenv
and
insl
push
sarb
aad
cli
aam
and
sbb
add
mov
call
or
jge
pushf
or
jo
stc
lahf
pop
xlat
outsb
dec
shrb
add
insl
scas
pop
sahf
jmp
mov
gs
sbb
jge
in
pop
sahf
xchg
sbb
jns
movsb
mov
test
lds
mov
leave
cmp
outsb
ljmp
cmp
cli
xchg
out
fadds
lret
subb
adc
test
mov
push
adc
mov
fldt
mov
dec
in
dec
loopne
call
add
ficoms
cmp
lods
and
imul
sub
pop
arpl
push
cmp
pop
pop
sahf
dec
ret
cld
xchg
stc
jo
inc
bound
sbbl
jno
xchg
cmpsb
push
int
mov
xor
sbb
sbb
dec
into
adc
xor
enter
xor
jecxz
jbe
ret
add
adc
cmp
popf
xchg
repz
das
cmpsb
cmp
fwait
sbb
imul
imul
inc
sbb
mov
stc
jae
addr16
jbe
xchg
testl
imul
stos
mov
sbb
mov
mov
cwtl
das
or
jb
les
pop
mov
jo
jg
test
push
orb
pop
jl
les
popf
sub
iret
das
mov
mov
ret
mov
into
gs
jns
xor
mov
insl
sti
sti
sub
in
mov
jg
fidivl
mov
js
jo
hlt
mov
jno
mov
rcrl
adc
leave
mov
pushf
fildl
enter
cmpsl
in
or
cli
jle
sub
test
pushl
push
mov
dec
xchg
sub
mov
mov
ds
sbb
notb
js
addb
cmp
ss
cmpsl
push
xor
mov
adc
jnp
fidivs
adc
test
stc
inc
fldt
add
mov
xchg
mov
pop
xlat
les
sub
fisubl
mov
cs
adc
fldl
inc
xchg
xor
push
out
xchg
mov
arpl
mov
or
pop
ljmp
in
stos
data16
pushf
xlat
stc
cmpsl
insb
int
dec
mov
adc
sub
into
xor
and
jae
dec
daa
mov
pop
mov
scas
inc
adc
ss
xchg
mov
stc
cmp
pop
and
pop
je
aas
insb
jg
mov
sub
sbb
dec
sbbb
push
add
xor
mov
test
pop
jg
gs
cli
xchg
ja
push
mov
xchg
sub
stos
hlt
mov
mov
jle
adc
stos
inc
dec
sub
and
cmp
je
pop
pop
int
inc
jnp
mov
daa
xor
jb
ds
xchg
outsl
pop
add
nop
nop
sbb
xlat
add
and
inc
dec
enter
arpl
mov
mov
fbstp
adc
and
mov
int
test
push
insb
or
push
pop
das
pop
jg
dec
fldcw
mov
out
jge
subb
adc
sbb
mov
lcall
mov
pop
push
in
dec
push
sub
inc
mov
and
sub
arpl
push
jno
inc
fidivs
xchg
xchg
and
inc
insb
add
enter
cmp
popf
imul
imul
out
pop
call
or
clc
push
mov
inc
or
mov
jle
sbb
shl
cmp
and
mov
jecxz
inc
rcl
insb
lds
lods
fdivl
mov
jbe
xchg
push
cmpsb
cmp
mov
cmpsb
add
cmpsb
lret
pop
test
inc
xchg
jo
dec
popf
scas
push
jg
sub
inc
jae
in
fs
xor
mov
insl
or
jae
test
sub
mov
pop
xchg
mov
sub
inc
xor
add
cmp
pop
xchg
and
in
aad
in
fwait
mov
stc
nop
stos
push
jne
jecxz
dec
jmp
rcrl
aad
pop
popf
stos
jbe
dec
jl
outsb
ja
inc
ds
call
fwait
notb
data16
shrb
sahf
push
mov
push
cltd
mov
mov
push
jl
call
aaa
das
cmp
rorb
adc
inc
inc
addr16
add
mov
sbb
sti
mov
inc
mov
fimull
jne
mov
je
into
mov
dec
and
push
imul
inc
rolb
ficompl
mov
mov
and
movsb
icebp
lods
inc
mov
stos
fsub
mov
in
add
add
jle
jle
aas
lahf
addr16
sbb
flds
xchg
inc
les
pusha
cmpsl
ds
subb
hlt
mov
sub
push
xchg
scas
data16
inc
mov
cmpl
cmp
test
sbb
out
jp
orl
out
mov
in
test
push
sub
jmp
dec
mov
push
outsb
or
xor
jmp
test
lea
sbbb
dec
jns
inc
mov
push
lcall
rcll
add
mov
mov
ret
hlt
mov
mov
sub
lcall
and
mov
bound
fsubrs
dec
or
and
push
out
pop
ja
insb
test
lret
ljmp
inc
jg
js
imul
stos
inc
xchg
inc
outsb
add
inc
mov
mov
cltd
xchg
stos
and
or
sbb
cs
es
and
and
xchg
inc
fisubrl
dec
xor
cmpb
jl
insb
fidivl
mov
sti
mov
or
push
and
mov
mov
inc
and
inc
jg
outsb
add
test
shrb
jecxz
pop
aam
pop
notb
or
hlt
pop
mov
cmp
loop
aad
clc
lods
in
outsb
cli
rcr
repnz
insl
mov
shll
jl
pop
in
xchg
leave
cmpb
ret
add
mov
sbbl
cmp
les
pop
mov
orl
repnz
cmp
cmpsl
stos
popa
sbbl
pop
in
scas
inc
ficoms
rcrl
xchg
push
imul
push
or
data16
push
lods
jnp
scas
inc
fucomi
rcrl
lea
xchg
add
mov
mov
mov
mov
mov
sub
ret
pop
dec
or
loop
shlb
mov
in
push
jbe
inc
mov
nop
push
lock
add
mov
out
xchg
ror
arpl
pop
cmc
pusha
das
cmc
mov
push
in
push
lret
sahf
xor
sub
xor
sub
and
sub
testb
sbb
cs
mov
ret
repz
lea
jp
dec
adc
or
fisttpl
ds
cmc
pop
lret
push
cwtl
das
mov
loop
mov
hlt
xor
clc
int
hlt
loope
sub
mov
aam
loopne
call
mov
fnstenv
push
cmp
inc
push
dec
loope
fsin
xchg
int
mov
dec
scas
xchg
lahf
jge
or
and
dec
dec
out
test
cltd
xchg
pmuludq
cmpsl
out
pop
pop
ret
mov
lods
test
adc
loop
xor
cmp
jmp
das
sbb
cmp
lret
in
fcomp
mov
movsb
icebp
mov
aam
mov
ret
jmp
loopne,pn
lahf
in
dec
jecxz
push
daa
or
test
dec
jmp
les
and
push
mov
mov
fcoml
test
fwait
mov
and
dec
jecxz
inc
clc
ja
push
rcrb
in
or
repnz
jle
and
cmpsl
inc
inc
call
cmp
lods
lea
and
push
in
divb
insl
dec
pop
or
cmp
hlt
dec
pop
insl
pop
outsl
and
mov
ret
loop
imul
xor
xchg
adc
push
in
outsb
xor
push
ljmp
pop
mov
sbb
cmp
ret
fnstcw
pop
sahf
mov
mov
sub
jno
adc
gs
xor
orb
push
loop
loope
lea
cmc
mov
shlb
sbb
jp
hlt
lock
mov
jb
mov
movsl
cmp
sar
popl
daa
jb
jbe
scas
inc
insl
xchg
in
adc
cld
xchg
sbb
jb,pt
jo
push
jmp
daa
in
push
movsl
mov
fisubl
adcb
sub
or
daa
jbe
or
push
call
cwtl
jg
push
dec
mov
icebp
mov
add
add
jle
popa
mov
xor
in
adc
fidivl
bnd
mov
fdivp
mov
lret
bound
cmp
inc
cltd
fnstenv
popa
sbbl
movsb
lahf
ss
into
gs
adc
jp
sbbl
cmp
arpl
mov
and
push
into
gs
cmpsl
mov
adc
enter
add
push
dec
push
jecxz
insb
outsb
mov
aaa
xor
je
push
fbstp
imul
xchg
imul
pop
into
mov
add
add
mov
out
test
adc
lsl
mov
jp
sbb
sub
xchg
push
call
mov
xchg
sbb
aas
sbb
pavgw
mov
icebp
xchg
ljmp
or
pop
jp
xchg
dec
add
jno
dec
or
lcall
js
mov
lcall
cmpsb
cmp
xchg
mov
jge
icebp
call
push
inc
js
cmp
stc
insl
sub
mov
cwtl
arpl
inc
cld
enter
lock
and
mov
and
test
imul
dec
andl
dec
popf
push
fnsave
stc
jo
mov
add
and
and
popl
out
scas
inc
ffree
xchg
pop
cmc
enter
or
sub
imul
jl
inc
scas
mov
cwtl
das
movsl
scas
out
test
and
aad
lret
les
jnp
sbb
decl
cmpsl
ds
sbb
daa
mov
push
add
lret
jmp
xchg
add
js
ficomps
mov
cwtl
leave
pusha
or
test
sub
mov
cmp
and
mov
shll
jb
std
jp
dec
in
fwait
cmp
int3
insl
push
jmp
xchg
add
je
hlt
mov
push
in
inc
lea
push
or
call
xchg
pushf
push
and
inc
std
xchg
addr16
cmpl
sbb
lcall
imul
mov
mov
aas
or
das
dec
in
sbb
iret
mov
icebp
push
js
mov
in
lcall
daa
jae
jno
dec
aaa
into
jns
in
test
inc
dec
fbstp
or
dec
out
test
adc
orl
fbstp
mov
fmull
es
lret
mov
and
cltd
push
push
lods
adcb
pop
sahf
pop
push
inc
lahf
dec
jns
sti
pop
xor
xchg
das
cmp
lods
cld
ja
out
and
movsl
push
movlhps
nop
aas
insl
add
mov
mov
xchg
inc
inc
mov
sub
jne
cmp
pop
dec
mov
add
jp
pop
sahf
fsubl
add
enter
cli
xchg
xchg
int
cmp
sbb
in
lea
mov
sbb
mov
mov
je
mov
sbb
loop
cmp
pop
ret
shll
movsb
loop
stc
loop
insb
mov
add
mov
sahf
loope
iret
aam
insb
adc
aad
xchg
test
leave
push
xchg
mov
and
outsl
push
cmp
jb
fdivs
sbb
fcompl
or
mov
out
push
mov
testb
lds
loop
movsl
pop
lea
mov
cltd
int3
pop
mov
mov
fildl
xchg
aas
stos
jno
vmwrite
mov
dec
ljmp
rcrb
sub
dec
in
mov
cmp
or
and
test
mov
pop
dec
pop
inc
jl
jns
sub
pop
fistpl
jg
and
imul
xchg
ja
aas
out
xor
iret
sbbb
fisttpl
pop
aaa
icebp
cltd
or
jno
inc
xlat
fstl
call
fisubl
xor
jbe
sbb
cmp
lcall
les
or
cmc
cltd
call
sbb
cltd
int3
arpl
mov
stos
jns
orl
push
fwait
orl
xchg
rorl
or
lcall
push
mov
fdivp
xchg
outsb
push
ja
aad
mov
subl
jbe
and
inc
sbb
movsl
cmp
cmp
inc
lret
xchg
fadd
mov
es
mov
adc
js
adc
in
add
push
or
adc
inc
outsb
pop
or
sbb
push
inc
jp
cmp
and
dec
pusha
rclb
pop
repz
jbe
popa
aaa
pop
adc
lcall
dec
xchg
xchg
inc
dec
sbb
pop
jbe
loopne
jle
pushf
jle
adc
and
push
in
movb
jns
pop
adc
cmp
mov
or
std
fsts
test
data16
cmp
pop
es
gs
test
data16
bound
mov
dec
mov
jle
pop
nop
xor
xchg
sub
pop
mov
and
rorb
int
and
jg
stos
daa
mov
cmc
and
test
pop
rclb
xor
jno
add
movsb
cmp
in
cmp
and
fimull
cmp
sti
lods
pop
push
sbb
mov
imul
leave
sets
cli
into
push
adc
mov
mov
cld
out
xor
mov
pushf
andl
push
imul
in
movsb
and
leave
pusha
es
sub
push
sub
jecxz
dec
xchg
clc
sub
popf
xor
dec
push
push
imul
or
es
and
sbb
cmp
in
mov
pop
imulb
cmp
inc
xchg
mov
sbb
sub
fadd
or
stos
lahf
lds
pushf
xor
xor
icebp
sbb
ljmp
fdivrl
inc
dec
lods
inc
xorl
push
xor
lcall
test
bound
mov
imul
sub
push
cmp
dec
dec
xchg
test
loop
xchg
lea
idivl
dec
xor
jne
repnz
add
jno
aas
fnstenv
int3
cmc
test
popl
into
fnstcw
sbb
xor
jle
push
xchg
jo
les
fs
rclb
addb
test
testb
and
mov
adc
xchg
xorl
xorb
push
or
jne
pop
mov
push
out
dec
sbb
aas
andl
push
test
and
inc
mov
je
cmpsl
lahf
sbb
dec
pop
adc
xlat
js
test
sahf
sub
and
std
sbb
rclb
movsl
orb
mov
or
ret
jnp
adc
aaa
jp
popf
fimull
sub
sub
mov
push
adc
mov
jno
push
movsl
sahf
and
cmp
int
mov
sub
cld
sub
sub
lods
mov
ficoms
negl
stos
push
push
sbb
imul
cmp
dec
add
bound
add
orl
lahf
dec
shll
jge
jae
inc
fsts
insl
mov
jecxz
fucomi
adc
jno
cmp
test
aaa
popa
pop
fisubrl
insb
pop
dec
sbbl
jns
mov
sbb
or
or
inc
sbb
and
dec
ss
sbb
mov
and
out
fsubrl
ljmp
xchg
cmp
mov
pop
out
mov
daa
lret
aad
sub
arpl
in
fimuls
xchg
imul
jl
jmp
push
sbb
mov
ja
mov
scas
insb
dec
jo
jl
out
mov
jle
shl
jp
stos
pop
xchg
out
xor
and
push
xchg
pop
movsb
leave
jl
cmp
test
pop
andl
flds
mov
push
rcll
in
sbb
stos
push
xor
jne
fimull
movsb
cmp
aaa
mov
inc
inc
bound
jns
dec
sub
jle
add
xchg
pushf
insl
xchg
icebp
cmp
pop
in
mov
nop
js
lret
rorl
jne
dec
cmpsb
lahf
and
push
js
scas
xchg
sub
negl
jl
adc
inc
data16
das
in
jmp
dec
cmp
arpl
das
dec
dec
or
emms
add
and
push
aaa
fdivrl
insb
test
pusha
repnz
cltd
iret
bound
std
out
xchg
or
or
pop
int3
or
xor
jno
inc
xchg
push
lock
pavgb
cmp
mov
push
idivb
lods
in
fcmovnb
stos
dec
mov
sti
xchg
cmpsb
ret
aam
movsl
sbb
mov
push
jmp
rcrl
jg
xchg
jecxz
pop
sub
xchg
das
das
push
sahf
xor
push
clc
incl
test
pop
test
xchg
push
jp
cmc
pop
ds
enter
ret
pop
mov
xchg
jge
cmpb
adcl
addb
lds
xchg
inc
fcmovb
sub
xchg
fimuls
jo
mov
cli
pop
and
jmp
sub
test
push
mov
lds
mov
hlt
jecxz
mov
mov
rcrl
pop
and
inc
shrb
es
dec
ja
pop
nop
mov
rol
rorl
and
lods
fiadds
lods
and
and
mov
stos
jecxz
and
or
pop
dec
aam
inc
fidivs
and
dec
mov
ret
lcall
add
addl
in
jno
popf
ss
in
or
xchg
outsb
clc
sub
sub
add
aas
adc
dec
jmp
dec
adc
dec
jbe
into
jno
mov
movsb
mov
cmpsl
sub
jne
stos
or
cmovae
push
inc
push
xchg
sub
xlat
cltd
sarl
xor
sub
shlb
gs
sub
add
lods
xor
aas
cmpsl
dec
push
fwait
sbb
daa
mov
xchg
rcrl
pop
dec
mov
popa
jo
in
gs
test
pop
cmc
pop
fldenv
lret
or
neg
sbb
cli
sbb
jns
scas
ja
fidivrs
pop
and
int3
gs
ja
nop
sbb
addr16
mov
inc
adc
inc
stos
push
pop
jle
loop
movb
test
jne
push
call
xchg
lea
lods
xchg
faddp
cmp
insb
insb
repnz
fwait
xchg
sub
loopne
cs
mov
ja
pop
add
inc
push
popf
js
pop
outsl
dec
sbb
and
push
lock
jecxz
lods
or
das
jmp
testl
repz
mov
call
xchg
pop
adc
cmc
cltd
jae
stc
lret
jmp
pop
cltd
iret
loopne
xchg
sub
insb
popa
inc
lods
inc
cmp
leave
mov
mov
adc
jle
in
cltd
rcl
mov
shrl
push
xchg
adc
inc
add
jae
dec
adc
adc
hlt
xchg
scas
scas
outsb
push
movsl
pop
pop
stos
cltd
sbb
mov
lods
pop
add
mov
pop
cwtl
enter
sub
outsl
in
arpl
push
int
xchg
cmp
push
dec
mov
push
out
sub
shlb
cmp
mov
lods
sbbl
cld
jo
sbb
mov
std
cmpsl
adc
inc
inc
pop
cmp
js
xchg
mov
incb
popf
lea
mov
lret
mov
pop
repnz
lock
dec
pop
insb
or
push
jmp
push
xchg
cs
push
push
ds
scas
sub
push
popf
dec
or
scas
test
aam
adc
fadds
roll
fsubrl
gs
pushf
cltd
cltd
rcrl
and
jne
sti
push
stc
push
fwait
loopne
add
push
out
push
pop
loop
mov
pop
mov
push
sbb
mov
mov
roll
push
sub
jne
xchg
pusha
int3
ret
mov
pop
lock
test
js
push
subb
popf
adc
test
fstpt
jb
push
shrl
lret
mov
shrl
mov
out
mov
mov
aam
xor
push
jge
test
hlt
push
jbe
stc
pop
sub
mov
fcomps
push
push
gs
leave
testb
cwtl
mov
es
es
enter
xchg
sarb
jnp
enter
repz
cltd
xor
pop
jne
push
push
insl
out
inc
sahf
out
push
orl
push
loop
test
int
dec
sub
and
mov
push
scas
mov
mov
lret
jbe
and
popf
dec
rcl
ja
mov
mov
xchg
enter
sbb
aas
and
or
mov
cmp
aad
pop
sbb
xor
dec
mov
mov
mov
out
into
gs
test
jg
shrb
adc
les
scas
cmc
sbbl
jb
aam
inc
lret
jne
cld
xor
jbe
xchg
popa
xlat
dec
xchg
inc
lcall
mov
pop
add
sbb
dec
jne
ret
sbb
adc
aaa
subb
sbb
xchg
inc
mov
lods
or
fldl
rcrl
je
mov
push
xchg
push
enter
js
test
jmp
popa
dec
inc
js
fistl
mov
push
cmp
lea
ret
mov
in
pop
xor
nop
or
sti
adc
es
pop
outsl
and
negl
adc
push
inc
add
lret
jl
mov
jle
mov
les
clc
testl
or
testl
aad
cmp
sub
shrl
dec
int3
leave
xlat
cmp
pop
mov
imul
pop
sbb
and
in
push
and
mov
inc
or
popf
addw
ret
and
mov
int3
xchg
les
sbb
or
pop
push
les
movsb
xchg
mov
dec
out
repnz
sub
mov
pushf
pop
mov
jg
cmpsb
sub
xchg
fldt
movsl
pop
std
test
sub
push
loopne
into
jg
mov
sbbb
fists
adc
mov
bnd
fwait
xor
fwait
xor
clc
popa
in
movsb
xchg
scas
push
mov
push
jmp
out
int
out
mov
push
dec
fidivs
sub
test
aas
punpckhbw
addr16
out
into
cmpsb
push
lock
test
and
push
jle
dec
jne
sbb
mov
hlt
add
add
sbbl
mov
jle
shll
lods
jge
mov
xchg
adc
outsl
insb
in
test
cmp
dec
push
xor
ja
shrb
pop
mov
jo
fcompl
push
mov
jp
add
gs
fdivrp
mov
pop
sub
sbb
test
jl
jne
jle
pop
xchg
sub
je
adc
and
and
add
cltd
mov
xor
call
push
in
out
fdivs
test
pop
jns
out
testb
lcall
adcl
adc
bound
repnz
scas
aad
mov
ja
out
add
repnz
jne
fsubrl
movsb
mov
out
nop
or
insl
mov
mov
jnp
sbb
fstpl
mov
inc
bound
daa
pusha
xchg
pop
mov
enter
push
inc
out
data16
cld
or
leave
out
roll
std
xor
lods
lahf
xchg
scas
and
popf
test
je
jo
sbb
jae
shll
add
push
jo
xchg
mov
xor
adcb
or
adc
mov
out
inc
mov
rol
pop
add
jno
aaa
imul
and
clc
mov
sub
ja
push
lcall
mov
shlb
clc
sbb
mov
ret
sbb
out
sbb
xchg
lret
enter
fidivs
mov
nop
sub
jl
or
jo
test
inc
insb
cld
xchg
push
lret
xchg
nop
sub
out
fwait
outsl
fisubrl
add
mov
popl
mov
xor
and
jecxz
mov
dec
andb
movsb
pushl
fidivl
inc
stos
aaa
jns
mov
and
test
leave
je
dec
ss
dec
loop
sub
das
icebp
aam
aas
hlt
dec
xchg
inc
out
scas
inc
and
aaa
nop
out
adc
adc
adc
jl
sub
aam
outsb
test
or
cwtl
or
mov
cwtl
mov
pop
stos
loope
mov
mov
aaa
jmp
sbb
push
or
lods
dec
jb
and
jp,pt
jo
add
xor
fisubl
rorl
add
jecxz
cltd
stos
xor
push
pop
fisttps
xorb
gs
in
sbb
div
xchg
mov
int3
pop
jo
push
in
adc
jns
cmpsl
cmp
mov
push
dec
test
adc
push
cmp
adc
or
jnp
dec
push
inc
int3
xor
test
pop
add
std
test
push
lret
shlb
mov
fdivrl
fnstcw
dec
inc
into
mov
adc
scas
inc
out
out
dec
xchg
lods
push
lock
pop
in
nop
and
rorb
xchg
cwtl
adc
jne
push
cmp
iret
mov
test
jp
mov
push
sub
daa
xchg
mov
out
push
jmp
hlt
mov
das
in
mov
add
movsb
mov
lea
inc
aaa
add
push
jb
jb
adc
cld
xor
pop
fcoml
scas
or
clc
test
pop
les
call
pop
ljmp
ds
fcomps
xor
aad
in
outsb
mov
mov
xchg
mov
xor
cwtl
dec
dec
mov
outsl
push
dec
push
nop
into
aad
push
pop
pop
add
rorb
cltd
cmp
bound
sub
andb
call
sub
mov
jnp
cmp
cmp
cmp
fbld
pusha
rcrb
icebp
xor
fsub
ljmp
icebp
iret
jmp
or
repz
in
mov
mov
add
inc
ss
adcl
jbe
mov
jnp
push
mov
fildll
outsl
pop
mov
and
or
and
xor
jmp
outsb
push
inc
push
popf
je
cmc
mov
lahf
rol
lods
pop
push
test
gs
add
mov
jae
adc
xchg
jae
inc
xchg
es
movsb
dec
clc
mov
mov
popf
dec
xorl
fdiv
mov
popf
add
out
push
cs
jle
add
xor
gs
adc
sub
imul
cmpsl
loop
xor
xchg
fstpl
push
lods
pop
lods
inc
mov
addr16
jb
out
popa
clc
daa
jle
jns
aad
mov
clc
test
push
test
subb
push
mov
fimull
sub
incl
loope
mov
dec
loopne
scas
call
xor
lcall
jl
js
jo
jo
cmp
pop
inc
pusha
sub
or
jl
mov
and
or
push
cmc
cmp
xchg
decl
das
push
jnp
xor
std
hlt
mov
cmp
push
or
into
test
mov
aam
xor
jmp
dec
incl
gs
std
and
clc
pop
jnp
fucom
xchg
adc
testl
loop
xor
mov
mov
xchg
lahf
xchg
sub
dec
fsubrs
cmpsl
fidivrs
push
stos
jmp
push
shr
fs
jmp
shl
jo
push
es
daa
ret
addl
aas
fdivrs
push
mov
pop
mov
repz
pop
test
lea
dec
inc
clc
add
sub
sbb
sbb
mov
mov
in
xor
movsl
sbb
into
dec
mov
jnp
imul
clc
sub
mov
popf
js
sbb
cmpsl
mov
mov
pop
dec
stos
sar
rcrl
dec
cld
push
and
test
sbbl
imul
enter
les
adc
and
cmp
push
jl
stos
mov
stc
push
mov
fwait
orl
test
jb
jp
sub
jae
dec
lock
pop
scas
adc
lcall
xchg
push
fcmovnb
loop
leave
mov
ret
pop
push
fcoms
dec
shlb
popf
sti
rorl
dec
inc
ret
in
test
xchg
pop
scas
push
inc
inc
lret
xchg
pop
lock
mov
rol
loope
ss
test
push
mov
popf
test
lret
fcoms
cltd
xor
dec
loop
std
and
rcrl
int3
and
mov
pop
mov
xchg
addr16
adc
xchg
xchg
push
sbb
inc
add
push
mov
cld
call
xchg
add
jnp
jbe
mov
dec
loope
mov
cmpsb
mov
fsubrl
in
cs
loop
js
add
lret
mov
std
roll
inc
push
movsl
cmp
jb
pop
movsb
jns
pop
stos
vhaddpd
int3
loope
sbb
lea
les
scas
and
popf
jge
stc
lock
andb
hlt
push
imul
xchg
cs
xor
xchg
push
sbb
xchg
cmp
outsb
insl
mov
call
in
je
int3
dec
pop
pop
mov
xor
lock
mov
xor
pop
lock
add
and
lret
push
mov
xor
out
mov
adcl
cmp
lahf
xchg
pop
sbb
mov
mov
fwait
dec
enter
jecxz
pop
pop
dec
cmp
sarb
into
hlt
lahf
mov
fs
mov
stc
inc
cmp
inc
pop
insb
insb
jae
cwtl
das
push
xchg
stos
inc
sbb
dec
shll
outsb
out
dec
shlb
insb
sti
push
in
arpl
adc
sbbl
in
sarl
fstpl
fs
inc
cmpsb
les
mov
and
push
jp
pop
mov
dec
sbb
nop
or
mov
loop
out
xor
cmp
imul
popf
sub
lret
movsl
outsb
sub
jb
inc
movsl
jmp
int
mov
dec
adc
repnz
or
and
mov
inc
cmp
sbb
and
push
pop
arpl
pop
push
mov
in
je
imull
mov
mov
push
pop
fidivs
test
pushf
daa
hlt
cld
push
aam
pop
stos
aas
inc
xchg
insb
xor
xchg
jae
lret
jmp
fldl
lcall
sbb
imul
cltd
mov
inc
or
jne
pop
adc
and
xor
jl
push
insb
loop
jge
inc
stc
jno
lock
xchg
sbbb
xlat
loop
outsb
inc
out
pop
xchg
mov
add
ljmp
sub
movsb
lret
aam
mov
inc
jecxz
sbb
call
xchg
cmp
popa
add
or
jns
sbb
jb
adc
mov
xchg
adc
mov
cmpsl
mov
and
roll
das
pop
test
lret
test
fildll
pushf
mov
hlt
fidivl
xor
lahf
jl
shlb
imul
mov
inc
bound
xchg
addr16
scas
cwtl
mov
repz
out
popf
jnp
std
test
cmp
and
lret
sub
mov
scas
inc
leave
jb
std
dec
pop
test
add
or
adc
sbb
sub
mov
lahf
pop
pop
cmp
xchg
sub
fs
adc
or
cmp
shrl
movsb
loopne
mov
lds
dec
in
pcmpeqw
and
push
popf
xlat
popa
cmp
cmp
xor
test
jb
push
icebp
mov
or
sub
mov
ja
adc
xor
lahf
push
push
pop
cmpb
mov
js
xchg
cli
jne
std
lcall
mov
repz
jp
or
cwtl
in
insb
cwtl
cmpsl
popf
or
andb
clc
jne
add
outsb
stos
sub
mov
push
addb
pop
call
gs
jg
lret
popf
lock
pop
mulb
sub
xchg
imul
lock
out
out
mov
insb
imul
xchg
mov
cmp
sub
jae
pop
cwtl
stc
mov
fwait
xor
mov
in
push
mov
mov
out
enter
jmp
sbb
push
and
iret
test
lahf
int3
sub
mov
in
cmpsb
xchg
cld
mov
aad
lret
jbe
loope
popf
call
movups
sbb
mov
mov
cmpsb
test
add
or
outsl
ljmp
mov
adc
out
or
or
add
fsubrs
fcmovb
bound
jecxz
cmp
int3
call
xchg
cmp
clc
std
pop
sbb
pop
inc
pop
sbb
sub
mov
shll
jl
jge
xchg
subl
mov
jns
push
and
and
addl
shl
cld
sbb
xor
cmp
aas
mov
pop
xchg
dec
std
dec
popf
jnp
lods
push
or
and
lcall
add
ret
sub
divb
in
fadds
fimuls
lcall
fsubrs
push
push
mov
cmpsb
jae
pop
int3
xlat
cmp
dec
movsb
jmp
in
js
sahf
stos
es
orl
xchg
mov
pop
stos
lds
dec
cmp
or
cs
mov
mov
outsl
mov
cld
icebp
dec
test
mov
mov
xor
mov
xchg
fldenv
mov
shrl
mov
movsl
and
push
pop
pop
test
add
jns
xchg
mov
sub
jnp
arpl
or
mov
jbe
icebp
loopne
les
cmpsl
int3
dec
pushl
push
mov
pop
add
notl
mov
mov
arpl
pusha
movsb
dec
push
jb
dec
xor
cli
push
stos
mov
xor
mov
lret
mov
jmp
pusha
ret
mov
test
shrb
das
shrb
or
jns
es
je
scas
pusha
xchg
icebp
cmp
xchg
dec
xchg
rolb
xlat
aas
add
or
daa
jl
mov
imul
push
aam
or
mov
xchg
ds
sahf
cmp
daa
imul
jmp
iret
iret
shrb
imul
out
fimull
or
data16
jb
sub
int
jl
cli
push
into
sub
xchg
lcall
insl
mov
les
int
dec
out
mov
outsb
xchg
sub
pop
ret
fnsave
dec
mov
mov
cmp
and
mov
jecxz
je
jmp
lock
sahf
out
icebp
adc
xchg
fdivl
push
push
outsl
mov
inc
stos
divb
lods
dec
clc
pop
rcr
fchs
dec
xchg
divb
out
pop
xchg
jno
ret
dec
in
leave
and
cli
insb
das
jo
lods
lcall
je
int3
arpl
mov
cmp
or
outsb
add
test
push
xlat
mov
in
in
sub
stos
in
and
sbb
xor
cwtl
dec
pop
lret
cltd
adc
arpl
sarl
test
fsubrs
or
mov
push
popa
mov
adc
das
inc
test
cmpsl
mov
jnp
sub
mov
jb
dec
jnp
test
out
jle
pop
dec
and
cmpb
sub
addb
pushl
mov
stc
in
mov
pop
adc
lds
and
pop
jmp
dec
flds
jg
push
out
adc
daa
aas
test
ret
gs
and
xor
in
and
sbb
fidivl
lock
xchg
lcall
bnd
lret
mov
addl
fistps
or
and
push
jbe
pop
lods
lds
mov
dec
cmp
push
or
ss
out
aam
xchg
and
mov
mov
rol
inc
pusha
fdivl
movsb
pop
adc
insl
push
test
jmp
loop
xor
mov
jg
dec
cmp
aad
jnp
push
mov
movsl
xor
popa
mov
mov
mov
in
xorl
or
push
test
cmp
sub
sarb
int3
nop
sub
adc
pop
push
jbe
mov
or
lock
pop
and
scas
stos
arpl
imul
sbb
fwait
aad
adc
loop
push
push
sbb
add
testb
mov
in
inc
xlat
into
push
roll
call
mov
cmp
adc
pop
fsts
add
addr16
and
aad
ds
jp
lods
inc
daa
pushf
push
xchg
pop
sbb
ljmp
xchg
jbe
ret
cwtl
mov
orb
js
das
pop
pop
bnd
xorb
sahf
xor
sti
pop
ss
xchg
pop
jb
out
xchg
cmp
in
rcr
js
add
daa
jnp
shrl
mov
xor
mov
test
aas
ret
jb
out
xor
sbb
xchg
jle
sub
jmp
jae
and
cli
jne
push
in
xchg
in
add
mov
loop
fdivrl
fldcw
dec
push
xor
repz
xchg
ds
insb
mov
shll
aad
repz
xchg
sub
stos
push
das
push
cmp
jbe
cmp
negb
xchg
dec
push
jle
mov
push
fcoms
test
sub
jmp
mov
pop
fcoms
aaa
fisttpll
mov
mov
xor
mov
out
mov
lods
fstpl
stos
into
pop
lcall
fistpll
jmp
andl
clc
inc
inc
dec
mov
mov
aad
ja
mov
cli
adc
adc
pop
shlb
jb
adc
mov
fnstsw
out
jo
in
cmp
adc
cmp
js
adc
add
pop
fmull
sarb
dec
add
cmp
jb
pop
sbb
mov
fbstp
ret
repnz
cmpsl
adc
imul
mov
lret
push
lods
out
shl
adc
les
cmc
mov
mov
dec
loop
les
mov
in
inc
pop
and
xchg
or
push
pop
mov
xchg
or
jae
in
in
mov
btr
sarl
jmp
inc
mov
dec
fists
inc
data16
and
leave
xor
ljmp
stc
es
dec
sub
lahf
ficompl
dec
loop
cld
push
jbe
je
adc
sbb
stos
test
repz
mov
les
or
int
movsb
cmp
out
enter
out
ljmp
and
push
jns
in
push
testl
add
xor
mov
fidivrs
fldt
shll
icebp
pop
xor
inc
icebp
jl
iret
lods
adc
clc
jae
mov
int3
insb
inc
pop
sbb
jle
and
mov
addb
popl
stc
or
daa
and
push
fistl
push
sub
mov
fisubl
test
xor
aad
movsb
outsl
das
xor
enter
data16
sbb
incb
scas
pop
and
and
adc
inc
cmp
inc
insl
push
mov
stc
divb
fsubl
cmpsb
int
dec
or
mov
and
repz
mov
stc
jb
push
int
inc
lods
mov
xchg
sub
test
xchg
and
enter
cmp
push
pop
imul
popf
enter
jmp
out
xor
mov
xlat
call
pop
inc
flds
aaa
xchg
sbb
stc
inc
inc
add
mov
push
lods
cmp
shl
jo
mov
test
pushf
cmp
and
or
fdivr
mov
push
or
mov
cmpsl
jp
adc
mov
ret
pop
das
out
jle
jmp
xchg
cmp
loop
insl
sar
stos
lods
inc
leave
mov
lret
rcrb
clc
xchg
mov
fldcw
cwtl
scas
aad
loope
push
xchg
jo
loope
mov
es
outsl
push
lcall
nop
adc
xchg
test
xchg
xchg
loop,pn
mov
bound
je
cltd
cwtl
cmp
jle
sbb
in
cmp
scas
cmp
pop
pop
pop
cmpsb
ldmxcsr
loopne
cs
icebp
and
and
cmpsb
fsub
pop
jg
das
aad
pop
out
das
std
or
xor
loopne
fwait
adc
add
mov
push
aas
mov
pop
jl
out
mov
ljmp
xchg
into
mov
mov
mov
adc
mov
push
jb
cmc
cmp
and
xchg
pop
jae
mov
das
cmp
mov
jne
inc
out
bound
cld
lcall
jbe
repnz
cmp
aaa
fimull
sbbl
mov
imul
cld
mov
ljmp
push
mov
pxor
aad
sub
jg
cmp
cmpl
mov
pop
pushf
push
mov
lods
sbb
dec
hlt
sbb
push
les
imul
in
and
lods
hlt
push
xchg
fdivrs
jg
fiaddl
sbb
jg
sbbl
xchg
and
gs
xor
ret
in
out
orb
add
push
mov
or
lret
xchg
repz
jne
movsl
mov
pusha
pushf
jmp
mov
movsb
jg
push
rolb
inc
hlt
push
push
jmp
add
das
push
imul
mov
inc
push
shll
out
sub
sbb
push
pop
mov
inc
rcrb
ret
nop
add
in
jmp
adc
mov
les
and
std
fbstp
out
addr16
jecxz
test
lods
sub
xorl
scas
ret
inc
cli
aam
adc
lds
mov
test
sub
iret
data16
lds
add
xor
pop
push
andb
popa
sub
bound
lcall
jae
call
sub
leave
xchg
sub
push
pop
das
adc
dec
cltd
mov
clc
adc
sbb
ds
mov
shrl
adc
in
push
jbe
aad
mov
test
cmp
push
inc
fsubrs
je
dec
fbld
lcall
je
mov
incb
push
testl
std
cli
add
mov
lahf
jns
inc
aam
insb
push
adcb
sbb
loopne
add
sub
ret
cld
or
mov
lcall
repz
in
subl
sub
in
and
loopne
jmp
inc
xchg
leave
addr16
dec
out
cltd
mov
mov
dec
inc
or
adc
frstor
inc
xlat
xchg
jl
rcrb
xor
mov
push
aas
repz
push
notl
xor
push
mov
in
fs
mov
fisttps
mov
push
mov
or
sub
daa
push
scas
call
push
add
les
ficoms
test
sbb
mov
ror
gs
xchg
jle
mov
pop
and
je
rorb
clc
nop
sbb
je
inc
jecxz
xchg
sahf
xor
fistl
iret
cli
mov
cmp
xchg
mov
xchg
xchg
mov
lds
mov
in
imul
pop
pop
stos
icebp
sbb
or
imul
jg
loopne
xchg
adc
lret
dec
push
sbb
xchg
mov
loope
idivb
sbbl
add
push
dec
in
scas
sbb
pop
and
loop
jne
and
adc
xchg
stos
mov
sbb
lds
add
push
xchg
rcrl
insl
mov
leave
call
cld
push
mov
jmp
push
js
inc
adc
scas
push
add
hlt
inc
pop
lds
fs
in
in
cltd
call
adc
xchg
jge
lock
mov
mov
pop
mov
pop
out
ds
sub
adc
xor
inc
mov
mov
fs
mov
xchg
add
push
xor
leave
sub
inc
std
mov
jnp
lods
lods
std
push
std
fistpl
sbbl
das
mov
mov
pop
ljmp
dec
adc
repz
fwait
scas
prefetchw
ds
sbb
xchg
ljmp
jo
loop
out
daa
test
popa
cld
jns
mov
cmc
mov
adc
dec
sub
enter
ja
hlt
dec
pop
es
xchg
shll
cmp
mov
cmp
pop
arpl
mov
popf
xor
mov
pop
push
push
mov
gs
popa
jmp
sub
mov
aas
push
inc
jg
xchg
or
add
call
xor
inc
fdiv
std
daa
inc
mov
dec
in
add
mov
outsb
lods
mov
jge
pop
xor
sbb
jne
sbb
call
add
sbb
cld
ljmp
jb
sahf
push
scas
and
notl
cmp
jg
mov
push
pop
fidivs
rep
je
das
das
pusha
mov
xchg
dec
mov
and
js
add
xor
stos
in
push
in
lock
jns
movsb
lods
test
fisttpll
das
mov
sbb
sbb
icebp
adc
push
jo
mov
adc
dec
inc
data16
pop
cmp
shll
sbb
ja
fiadds
jge
lcall
xor
mov
or
add
test
enter
mov
cmp
mov
loope
std
inc
jnp
in
xor
mov
out
lret
popf
inc
fmulp
ljmp
jb
rcrb
arpl
jmp
sub
dec
push
popa
in
imul
sahf
mov
or
insb
testl
push
je
add
inc
sub
xchg
xchg
loope
cld
mov
adc
mov
ss
mov
in
stos
pop
pop
gs
xor
mov
xor
fcmovnu
mov
pop
mov
dec
fdivrl
push
sbb
jae
out
sti
jbe
mov
iret
mov
jne
jge
mov
into
adc
xorl
es
repz
stos
adc
sbb
adc
ss
cmc
cmp
inc
xchg
dec
mov
sbb
in
mov
iret
movsl
mov
push
xchg
pop
lahf
mov
inc
stos
pop
in
test
cmc
scas
xchg
daa
adc
repz
movsl
jb
mov
mov
std
add
shrl
fstpt
and
and
jmp
dec
movsl
ss
test
jg
movsl
movsl
inc
add
push
mov
data16
sub
jo
xchg
inc
xor
push
inc
arpl
enter
or
testl
pop
insb
add
pop
lret
mov
std
sub
mov
adc
xchg
leave
pop
add
mov
sbb
insb
mov
or
push
mov
mov
mov
decb
movsb
repnz
lds
jle
ja
imul
fwait
xor
xor
add
int3
inc
mov
loope
clc
and
in
rclw
insb
jle
pop
ss
jl
xchg
fstps
cmp
jo
adcb
sti
popa
push
out
adc
in
pusha
in
jne
in
add
jecxz
mov
cwtl
out
scas
xchg
fiaddl
daa
fisubs
mov
rorb
imul
cmp
pop
adc
cmp
inc
xchg
aaa
stos
or
cmp
ret
lret
inc
fwait
pop
push
in
dec
inc
cltd
sub
jo
jnp
ret
stos
xchg
and
lahf
es
mov
int
jg
aaa
out
push
xor
das
dec
dec
or
dec
out
push
fucomip
mov
ljmp
xor
dec
arpl
add
stc
xor
shl
inc
cmpsl
mov
jae
repz
stos
aaa
adc
jno
jmp
in
sbb
mov
mov
inc
sub
inc
jbe
fildl
cmp
push
or
andb
daa
clc
or
aaa
and
inc
mov
insl
int
imul
iret
fldt
dec
xchg
mov
loop
stos
and
jno
mov
xchg
iret
dec
lods
adc
inc
int
rol
ds
pushf
cwtl
mov
sti
jbe
leave
sub
std
sbb
rcrl
mov
jns
adc
pop
shlb
das
sahf
push
daa
pusha
jmp
sbb
or
lahf
data16
cwtl
mov
dec
fcmovne
loopne
pop
fwait
ljmp
mov
scas
mov
sbb
xchg
mov
call
test
loop
lea
leave
push
and
inc
into
pop
loope
push
out
and
cli
xchg
mov
sbb
arpl
mov
xchg
xor
or
dec
xchg
in
aaa
bound
jbe
repz
mov
dec
test
inc
xor
out
sbb
cltd
cmc
and
gs
enter
xchg
cmp
enter
lahf
pop
test
mov
or
pop
or
pop
xchg
sbb
in
lods
mov
xchg
roll
jb
cltd
cmpsl
out
ja
adc
push
leave
icebp
cmpsb
sbb
pop
int3
jg
idivb
mov
lret
sbb
mov
inc
imul
cs
push
mov
mov
fs
shll
sub
mov
jl
push
fsts
cmp
push
scas
arpl
xor
push
sbb
idivb
xchg
rcll
mov
jp
jl
arpl
sahf
mov
sbbl
fdivs
push
adc
xchg
sub
or
dec
mov
mov
imulb
jbe
adc
mov
mov
icebp
outsb
test
pop
cmpsl
lahf
mov
and
pop
mov
push
cmc
push
aaa
stos
inc
cltd
pop
mov
lock
and
aas
push
cld
inc
lods
mov
fdivrs
dec
pop
xchg
rcrl
sbb
or
jne
test
cs
or
pop
or
fwait
ja
push
mov
data16
jnp
and
jecxz
mov
ja
add
enter
lret
in
jg
and
test
xor
sarl
fildll
movsb
dec
dec
jo
cli
ds
das
xlat
mov
sti
cs
add
or
xchg
shld
add
ds
addr16
jle
xor
test
hlt
and
xchg
popl
cwtl
shld
lods
pop
rclb
cmp
sbb
lret
adc
pop
push
sarb
pop
repz
in
stos
jns
out
popf
push
lcall
sahf
push
inc
cmpsl
in
add
adc
pushf
test
loop
out
sbbb
mov
sbb
fnstsw
push
test
xchg
xchg
jne
mov
test
mov
jo
mov
orb
mov
mov
lds
out
add
xchg
lds
notb
cmpsb
jecxz
sub
sbb
lods
mov
xchg
stos
aas
jbe,pn
inc
fldl
std
push
in
loopne
call
arpl
jnp
jae
mov
xchg
ret
sub
cmp
jecxz
es
xor
xchg
lods
and
cmp
in
xchg
sti
mov
add
mov
push
in
pop
xchg
inc
popf
dec
insb
and
xchg
inc
xlat
add
adc
pop
and
cmpsb
js
or
rep
add
inc
mov
test
stc
fstps
xchg
adc
push
cmp
fimuls
imul
dec
icebp
repnz
iret
mov
ss
and
xor
jmp
mov
fs
jle
vpcmpeqb
push
push
jbe
roll
xchg
cld
sub
mov
push
jge
fucomp
jno
sbb
out
or
mov
pop
fsubl
xor
jge
je
push
xchg
pushf
sti
or
std
or
or
adc
cmp
xor
cwtl
iret
flds
idivb
daa
inc
pop
or
mov
push
add
ja
movsl
lods
flds
jg
push
inc
sub
add
and
aad
push
fnsave
movsl
les
push
cld
js
je
jnp
push
mov
xor
flds
add
xchg
lock
pop
cmpsb
nop
lret
mov
push
push
ficompl
scas
mov
add
xchg
stos
push
lahf
jg
fdivl
cmp
jne
pop
repnz
lea
pop
jo
push
shl
test
dec
lahf
or
imul
or
insl
outsb
add
jnp
mov
cs
stos
mov
mov
add
call
lahf
push
insl
shrl
pushf
imul
daa
andl
aas
in
push
popa
mov
mov
addl
jge
cwtl
js
add
pop
insb
xchg
dec
cmp
gs
xor
aas
shlb
cli
loopne
movsl
push
lcall
push
das
cmp
fimull
pop
jns
push
pop
divl
out
cmc
mov
and
aad
and
mov
std
xchg
sbb
dec
loope
mov
mov
dec
out
sti
jge
cli
or
mov
shl
pop
dec
sbb
cmp
dec
mov
jns
data16
lods
mov
push
cmp
sub
or
and
pop
adc
test
mov
popf
push
cmp
or
cmpsb
arpl
and
and
jo
dec
lcall
sbb
or
jmp
insb
popf
adc
lds
inc
and
gs
jb
mov
mov
iret
or
xor
repnz
testl
inc
push
xchg
sub
xor
mov
gs
leave
pop
daa
push
mov
repz
inc
lret
inc
test
scas
or
cltd
mov
mov
fbstp
push
mov
inc
mov
jmp
push
repz
dec
push
pop
xchg
test
ljmp
test
push
pop
in
push
add
sub
dec
fildl
les
xchg
jl
inc
inc
int
pop
scas
pop
mov
xchg
jge
jb
jge
jbe
xchg
popf
test
jnp
stc
adc
dec
sbb
aam
jns
add
ja
mov
imul
cld
lods
pop
movsb
jecxz
shlb
mov
lods
int
stos
xchg
ret
dec
loopne
pushf
or
pop
or
test
lret
std
xor
out
call
sub
lock
dec
std
xchg
in
ret
cmp
imul
in
dec
je
sbb
jae
cmp
shlb
icebp
aam
xchg
push
sbb
jne
sbb
scas
xchg
mov
mov
loopne
stos
adc
xlat
movsl
or
js
dec
cmp
mov
scas
cltd
pop
scas
ret
xor
pop
jno
nop
ds
ljmp
jno
xchg
pushf
mov
sub
lahf
dec
xchg
mov
aaa
xchg
shrl
repz
or
lock
insl
aam
lret
lret
test
or
mov
jnp
add
sub
div
jnp
fdivrs
pop
fidivl
lret
jne
shll
pop
and
jb
jp
jp
fcomps
loop
mov
arpl
mov
adc
dec
mov
popf
out
mov
outsb
jne
inc
adc
xor
test
jne
scas
jno
in
sarb
xor
add
imul
mov
xorl
ss
ljmp
cmp
js
pop
sahf
inc
xchg
mov
push
push
fcmovnbe
lods
inc
push
loope
adc
call
pop
aad
mov
aam
movsb
sahf
stos
push
jb
mov
jle
popa
pop
sbb
mov
jnp
mov
test
sbb
or
xor
and
jae
in
out
dec
movsb
pop
fisubs
adc
fbstp
push
dec
iret
clc
ja
xor
push
lcall
iret
add
popa
ret
push
popf
pop
rolb
push
pop
mov
pushf
and
push
adc
ficomps
and
je
cmc
mov
add
ljmp
inc
std
jle
mov
jno
mov
sahf
dec
add
mov
xchg
xor
sarb
xlat
push
push
xchg
push
inc
scas
jb
test
jb
adc
out
inc
xchg
cmpsl
popf
scas
fdivs
loopne
cmp
push
cld
jno
push
insb
mov
pop
mov
xor
repnz
addb
or
pop
mov
stc
add
fistps
mov
sub
push
mov
testb
sub
mov
nop
jecxz
jg
sahf
enter
pop
fisubs
push
lds
icebp
or
jno
pop
ret
or
push
out
pop
negb
sub
inc
pop
pop
jmp
xlat
outsb
push
xor
mov
pop
sbb
repz
scas
popa
push
int
rcrl
fs
out
in
xlat
mov
ds
fisttpl
xor
xor
imul
das
mov
movhps
ja
or
adc
sub
mov
orl
adc
lods
loope
fmulp
mov
shl
lret
and
jecxz
fsts
inc
add
hlt
dec
mov
sbb
push
jae
adcb
aas
xchg
ja
inc
sbb
subb
mov
mov
inc
in
das
lods
inc
testb
inc
push
cmp
jmp
subb
sbb
sarl
sbb
inc
cltd
je
add
mov
dec
mov
adc
mov
ljmp
mov
cs
int3
idivb
mov
jmp
sti
pop
shl
pusha
fbld
push
mov
out
xchg
insl
sub
dec
mov
sub
xchg
fistpll
and
outsb
adc
pop
push
rcrb
fimuls
sti
pop
fnsave
sbb
push
sbb
bound
mov
loop
sbb
rorb
jno,pt
stos
or
cs
push
sti
mov
jae
aad
jecxz
insl
notl
push
mov
hlt
loop
cs
test
push
rorb
insb
pop
mov
sahf
data16
mov
or
mov
movsl
sub
cmp
fstl
cli
jmp
andl
jg
jle
cmp
cltd
lods
push
out
fwait
or
dec
ljmp
cmp
loopne
ss
jb
cmpsl
jle
cmpsl
mov
pop
popf
addl
pop
push
sub
jmp
inc
push
adc
xor
xchg
sbb
into
in
xor
in
std
and
push
adc
sub
mov
sub
xor
rcrb
and
push
cmp
sbb
inc
loop
mov
cltd
in
popa
clc
push
hlt
icebp
or
ja
sub
scas
push
ljmp
mov
scas
xchg
js
dec
cmpsl
push
nop
mov
sti
ret
dec
dec
cmp
fldl
jmp
mov
pop
nop
sbb
cmp
mov
mov
daa
cld
pop
xlat
jno
insl
mov
mov
xor
sub
push
inc
leave
mov
push
push
inc
xlat
inc
push
xchg
sub
mov
gs
negl
mov
cmpsb
imul
push
xor
cmp
mov
push
fadds
arpl
movsl
pop
clc
out
ret
bound
addl
imulb
fnstenv
mov
nop
aaa
incb
jle
test
sbb
fs
testb
out
xchg
cmpsl
lret
jnp
pop
add
sub
dec
repnz
xchg
jmp
mov
add
ds
enter
inc
clc
push
jne
movsb
mov
adc
pop
and
sub
gs
int
inc
cmpsb
jb
mov
sbb
push
jo
loopne
dec
mov
in
cmp
pop
xor
ret
das
test
cmp
sbb
aas
or
xchg
leave
mov
mov
fiaddl
pushf
xchg
mov
stc
and
aaa
addb
dec
inc
test
mov
movsl
test
push
out
jp
inc
sub
dec
hlt
scas
rolb
xor
xor
ret
xor
push
dec
pop
push
aas
testl
aad
add
inc
jmp
jl
negb
pop
hlt
dec
sbb
inc
fsubrl
or
aaa
shl
repnz
sbb
push
add
cmpsb
cmp
scas
jno
hlt
ret
cs
xor
stos
je
jae
push
aam
pop
ret
leave
adc
xchg
pop
xor
xchg
mov
mov
into
enter
ret
mov
adc
mov
xchg
adc
inc
cli
inc
jne
mov
add
test
in
test
in
cmc
sbb
pop
xchg
fwait
pop
mov
push
adc
das
jecxz
fstpt
fistl
clc
push
cld
mov
add
cltd
popa
pop
sbb
loop
cltd
call
lock
rcrb
mov
imul
sub
testb
xchg
sub
adc
aad
nop
andb
rcr
lcall
imul
jl
push
out
and
jecxz
int
push
test
push
loopne
dec
jge
dec
popa
addl
or
out
add
inc
nop
adc
das
jbe
mov
push
xchg
add
pop
pop
and
addr16
popa
mov
repz
test
jbe
jp
test
out
pop
loope
cbtw
insl
ja
inc
aad
jmp
jns
cmp
iret
lahf
mov
in
movsw
out
clc
pop
cvtps2pi
cmpsb
mov
mov
and
into
cwtl
jnp
or
out
adcl
or
cmpsl
mov
ret
lret
repz
push
mov
pop
xor
jb
cmc
sub
frstor
or
xor
jp
xchg
insb
dec
aam
xor
push
orl
aas
shrl
mov
test
enter
xor
sarl
xor
insl
repz
mov
push
test
js
jp
loop
pushw
mov
jno
xor
mov
mov
cmpsl
daa
mov
mov
popa
ljmp
cmp
movsb
lcall
pop
lahf
hlt
into
or
mov
lods
or
aas
insl
out
jb
nop
fbstp
cmc
in
aaa
roll
or
jge
aam
xchg
sahf
mov
test
inc
push
pop
lret
sbb
sbb
mov
aam
adc
orl
push
xorb
in
test
inc
out
mov
popf
sub
sbb
mov
pop
cmp
or
pminub
mov
push
cmpb
sbb
pop
xchg
cmc
adc
push
add
adc
leave
jnp
cmc
jno
add
ja
adc
xchg
xchg
cltd
jge
mov
jae
jecxz
aaa
dec
push
out
stc
sub
jle
sub
cmp
or
ror
sub
mov
cmp
testl
aaa
jbe
loop
popf
adc
and
aaa
mov
mov
jno
push
mov
insl
in
add
hlt
adc
ret
dec
add
dec
cmp
pop
movl
pop
test
inc
out
or
cltd
xor
out
adc
arpl
fwait
and
imul
mov
es
and
xchg
pusha
loop
dec
adc
or
mov
in
and
cmp
gs
mov
cmp
xchg
add
test
lea
out
test
mov
push
or
sahf
mov
sub
xchg
movsl
outsl
arpl
sbb
dec
icebp
pop
sub
pop
jns
stos
mov
shrl
sub
xchg
int
jl
mov
cmpsb
leave
cmp
enter
test
xchg
lret
fs
jmp
movsb
call
loop
enter
jb
scas
inc
fidivs
dec
mov
xchg
xchg
sbb
rcl
je
dec
clc
sahf
dec
cmpsl
xchg
ficoms
sahf
push
shl
jl
popa
add
mov
inc
lods
movsl
inc
push
rcr
cmp
stc
and
sub
out
xor
out
pushf
adc
dec
xchg
mov
test
lcall
pop
stos
push
repz
ret
cmp
xchg
in
mov
sub
scas
or
jge
nop
mov
fists
shl
sub
es
inc
inc
pop
jbe
sbb
cmp
sbb
mov
inc
imul
mov
adc
xchg
pop
icebp
push
aam
cmp
test
mov
and
adc
add
adc
int3
add
mov
dec
mov
mov
jnp
iret
data16
in
cld
and
cmc
data16
aas
cmp
adc
sub
jmp
out
in
xchg
sub
fwait
scas
push
push
jmp
dec
pop
out
stos
and
jae
inc
mov
pushf
mov
ret
mov
cmp
ljmp
push
lds
jecxz
push
sub
cld
xchg
cld
insl
loopne
cmp
cmpsb
cmpl
adc
and
pop
cld
data16
mov
jae
subl
add
push
cltd
jae
fdivrp
arpl
out
das
addr16
cmp
push
sbb
in
add
or
mov
sbb
or
iret
cltd
push
sbb
xor
sbb
xchg
shlb
js
mov
lods
xchg
pusha
xchg
pop
insl
shll
mov
or
add
ret
and
mov
push
mov
mov
mov
add
movsb
xor
jae
bnd
roll
andl
jg
mov
movsl
cmp
icebp
dec
mov
stc
xchg
pushf
xchg
std
enter
dec
stos
orl
xchg
test
jb
add
repz
mov
stc
leave
loopne
mov
mov
mov
jl
sub
pop
jp
push
scas
sbb
or
cmp
test
push
jecxz
and
testb
hlt
adc
adc
idivb
addr16
pop
imul
js
xor
adc
arpl
ljmp
push
jp
mov
push
sub
jle
mov
mov
xor
fcomi
lds
xchg
cmp
pop
or
push
push
jne
dec
lock
dec
sbb
lret
adc
in
pop
test
jle
cmc
inc
pop
ja
jge
push
and
movsl
pop
sahf
lea
sub
mov
mov
loope
in
pop
push
sbb
addr16
sbb
clc
cmp
jnp
imul
xor
movsb
and
dec
mov
add
cmp
or
loopne
and
add
jle
xchg
fildl
mov
xor
mov
sub
mov
push
dec
in
add
mov
clc
dec
inc
in
xor
cmp
out
xor
or
ret
jne
decl
xor
adc
lods
pop
outsl
jle
jno
lods
jnp
xor
dec
mov
loop
out
inc
in
ja
out
mov
test
inc
mov
lds
add
inc
add
dec
popf
insb
mov
outsb
adc
sub
inc
lret
dec
dec
fs
push
and
xchg
pop
aaa
stos
inc
imul
push
out
std
push
insl
xor
inc
sti
fistpll
sub
or
pop
pop
mov
xchg
out
lea
popl
pushf
repnz
std
test
popf
xchg
jo
popa
andl
or
mov
jmp
imul
repz
scas
repnz
jge
inc
movlps
adc
mov
cwtl
stos
cltd
lret
cmpsb
sbb
pop
nop
das
mov
ret
mov
lds
inc
add
cmp
subl
and
les
cmp
add
xchg
shl
inc
push
arpl
scas
mov
cmp
jb
add
stos
rorl
stos
gs
adc
pop
addr16
sbb
scas
adc
or
shll
push
adc
orl
cmp
sub
jle
cs
xor
push
test
mov
ss
mov
push
xchg
sub
pop
daa
outsl
adc
mov
dec
pop
loopne
push
adc
inc
inc
adc
shrb
cwtl
adc
inc
sahf
mov
decl
lds
imulb
xchg
insb
in
out
ds
rcr
pop
bndstx
mov
pushl
shrb
inc
dec
pusha
mov
shll
xchg
sub
lret
fs
jns
xchg
push
negb
fnsave
xchg
push
sub
xor
xchg
test
mov
add
push
or
mov
jne
sub
mov
pop
inc
mov
movsb
push
pop
pop
fdivs
pop
jle
push
daa
data16
mov
mov
push
push
stos
nop
sub
mov
pop
ljmp
out
lock
jns
cmp
andl
nop
std
or
push
pop
loope
mov
xchg
mov
pop
and
data16
inc
pop
sub
push
pop
add
cmc
out
stos
or
faddl
outsb
in
mov
cmp
int3
pop
popf
cmc
nop
sbb
ret
and
sub
mov
xor
push
aaa
fs
test
xchg
push
jns
clc
sarl
mulb
shll
int3
lret
int3
je
stc
ja
data16
push
sahf
cmp
xor
es
mov
mov
sti
pop
fnstcw
push
mov
mov
je
mov
aad
mov
adc
je
sbb
fxtract
inc
popa
adc
adcl
cwtl
sbb
jmp
fisubl
lret
lret
cmp
rol
dec
cmp
push
mov
pop
cmpsb
lret
sti
push
cmp
enter
mov
dec
repz
int
es
cmp
int
inc
std
mov
jns
cmpsb
and
stos
add
aas
push
xchg
sar
paddq
sub
push
in
dec
sub
out
shlb
pop
cltd
sti
jns
sbb
ds
push
pusha
sub
inc
andl
dec
inc
inc
cmp
inc
jns
adc
outsl
lea
nop
pop
mov
xor
in
icebp
cmp
mov
gs
jb
xlat
pop
inc
inc
sub
pusha
mov
adc
aam
dec
sub
test
inc
mov
xchg
cmpsb
hlt
jb
push
cmp
scas
xchg
aas
or
inc
mov
fdivl
add
mov
nop
pop
sub
call
cmp
sub
jecxz
repnz
push
add
adc
rcrb
repnz
pop
nop
cs
vmovss
divb
sbb
ja
jge
or
call
loope
stc
mov
clc
lea
sub
outsb
xor
sbbl
lods
out
sbb
lods
nop
push
mov
pushf
xor
jae
push
ljmp
pusha
mov
cwtl
shrl
stos
sbb
jno
pop
cmp
or
or
xchg
or
mov
add
shll
mov
cmpl
adc
xchg
or
rcrb
cmp
cwtl
lock
adc
or
push
push
push
jae
cmp
and
lods
js
pop
mov
lods
lret
ds
xor
popl
adc
cmp
mov
cmpsb
mov
lcall
push
pop
xchg
lret
in
je
or
jnp
fnstenv
mov
add
sti
ret
xchg
pop
fadd
pop
or
or
leave
mov
dec
dec
cmp
add
push
fiaddl
push
jne
and
mov
inc
into
mov
add
dec
shlb
xor
insl
movsl
mov
arpl
call
mov
mov
sbb
jno
pusha
jmp
push
loope
cmp
cli
jg
sub
or
enter
fimuls
aas
aaa
or
mov
clc
sbb
pop
movsl
inc
repnz
fsubrp
push
popa
pop
mov
stos
add
in
out
add
cltd
test
test
out
lds
pop
push
push
int3
jg
cmp
dec
and
fildll
cwtl
mov
mov
inc
mov
mov
push
inc
fistps
fidivl
dec
cmpsl
or
test
xchg
out
sub
clc
or
outsl
push
xor
popf
mov
imul
ja
cld
arpl
cmp
or
fs
mov
mov
jl
inc
mov
sahf
or
icebp
pop
rclb
scas
xchg
leave
push
stos
int3
arpl
mov
dec
daa
test
jbe
shrl
mov
into
or
mov
or
push
pop
dec
sbb
ja
sub
and
jmp
xor
out
xchg
add
div
pop
and
mov
mov
lock
mov
pop
adc
mov
mov
mov
xor
inc
daa
stos
out
push
faddl
mov
jnp
mov
or
enter
pop
shlb
ds
outsl
add
cmp
rorb
sti
jb
inc
cmp
push
mov
mov
pusha
mov
loopne
mov
js
popa
adc
xchg
add
mov
adc
jb
cltd
mov
test
mov
das
addr16
popa
jle
xchg
pop
insb
testl
mov
mov
adc
leave
dec
cltd
repnz
xchg
pop
sub
push
push
lock
das
add
cli
and
loope
xor
loope
dec
imul
mov
loope
cmp
lcall
aas
test
jae
cltd
jle
movsl
aas
jne
sti
adc
lods
jbe
fcmovu
lret
jp
lods
mov
sbb
sbbb
cmp
shr
jns
leave
cld
push
pop
and
test
cld
aas
fidivs
sub
jo
cwtl
rclb
lea
pusha
cmp
pop
incl
xchg
jl
xchg
and
je
and
cmpsb
jbe
ja
js
ss
add
fildl
cmp
mov
into
jb
ret
jp
mov
xchg
xor
dec
add
dec
pop
xor
mov
jl
mov
inc
out
xchg
lods
shlb
dec
xchg
neg
xchg
mov
frstor
je
es
fisubs
call
std
aas
or
popl
enter
add
daa
sarb
dec
and
loopne
mov
dec
inc
jge
jno
push
sahf
test
jp
xor
jne
outsb
cmpsl
sarl
jnp
jns
lock
pop
or
push
daa
add
or
stos
stc
test
arpl
sbb
lret
test
adc
push
mov
mov
std
sub
scas
add
mov
add
push
aaa
push
test
push
add
mov
cltd
in
and
in
addr16
sbbb
dec
sub
movsl
mov
shr
testl
test
cmpsb
jno
jg
adcl
dec
pop
repnz
mov
or
or
xor
cs
add
arpl
cmpsb
mov
jp
and
xchg
xchg
or
xorl
stc
xchg
cmp
push
mov
add
ljmp
jg
mov
xor
pop
bound
adc
pop
or
leave
mov
and
repz
sbb
rclb
stc
pop
cmpsl
hlt
test
dec
push
jl
loope
outsb
enter
test
mov
dec
icebp
jnp
and
sbb
cmpsb
dec
and
andl
mov
mov
imul
mov
and
call
sub
popa
into
add
and
mov
loop
mov
jl
stc
daa
insb
mov
rorb
movsl
add
jno
test
test
in
or
sub
lock
xor
int3
sahf
pop
sti
into
xchg
mov
enter
in
and
jecxz
cmp
mov
daa
das
xlat
pop
mov
andb
pop
adc
pop
test
or
adc
sbb
dec
int
cmp
sbb
add
sti
push
mov
daa
adc
sub
or
lahf
and
inc
dec
pop
mov
mov
out
mov
ret
in
xlat
cmp
icebp
ds
je
stos
push
jae
sub
iret
dec
fistps
cmp
mull
or
dec
mov
dec
push
fstpl
les
dec
push
mov
jecxz
incb
jp
and
into
fdivr
inc
dec
data16
sbb
inc
adc
rclb
or
enter
push
lods
mov
pop
and
jmp
ja
xchg
cld
ret
loop
xchg
enter
popa
push
lcall
fnsave
mov
xchg
mov
pop
add
sbbb
cmp
push
hlt
inc
or
pop
neg
andl
enter
push
jle
xchg
pop
into
xlat
lods
jg
and
add
dec
out
jnp
lret
jl
loopne
arpl
mov
enter
xor
pushf
xor
ss
cld
push
push
add
sbb
js
inc
and
jle
test
mov
lahf
jb
xor
ret
pop
jmp
sbb
rorb
je
xor
push
dec
clc
inc
dec
jb
enter
mov
les
mov
data16
jns
movsl
adcb
mov
out
inc
loope
xchg
jmp
leave
pusha
ja
sub
xor
cli
inc
sbb
jns
gs
sarb
xchg
sub
mov
sahf
sub
test
movl
dec
mov
in
rcrl
mov
jne
dec
popa
sub
xchg
pop
jg
jno
hlt
fistl
popa
shl
sbb
push
mov
cmp
inc
enter
cs
scas
addl
or
repnz
sub
adc
dec
jge
les
push
mov
and
add
and
dec
es
xor
mov
xor
add
and
xchg
push
cmpb
pop
ret
rcl
lret
rcrl
pop
in
cmp
popa
jns
xchg
loop
daa
pop
or
je
lret
out
sub
mov
fists
out
and
pop
dec
inc
add
sti
push
mov
sbb
xchg
imul
push
add
gs
inc
mov
mov
mov
ret
sbb
cmpsl
xchg
sub
repz
outsb
or
xchg
sbb
mov
mov
inc
lods
insb
fists
add
xchg
pop
xchg
test
mov
jb
cmpsb
cwtl
pushf
fldl
mov
cltd
insl
add
negb
and
inc
mov
fs
arpl
xchg
sub
push
mov
sbb
dec
xor
js
push
xchg
jg
add
rorb
xor
push
pop
test
lret
js
sub
push
sbb
call
push
pop
es
and
dec
cltd
sub
jno
mov
inc
popf
inc
push
test
into
mov
sahf
pusha
pop
lret
aad
dec
push
ljmp
jno
arpl
xor
and
std
adc
jge
js
in
mov
jecxz
cvtps2pi
cmp
pop
sub
sti
scas
jo
pop
push
or
inc
aam
xchg
dec
mov
push
inc
mov
lret
push
rcl
rcll
lock
and
scas
push
inc
mov
xchg
aaa
scas
jb
mov
mov
sub
aas
dec
gs
in
int
ss
mov
mov
push
movsl
lahf
xor
xor
into
jle
fcompl
daa
and
xor
jg
shll
mov
mov
imul
aad
push
xchg
cmp
dec
mov
insb
test
and
movl
cld
stos
cmp
inc
stc
push
leave
sub
push
lods
cli
fcmovu
jae
stc
movsb
add
xor
fistpll
rorb
jo
jle
inc
test
push
add
shrl
mov
sti
call
mov
pop
cmpsb
lret
int
jno
or
icebp
pop
daa
push
mov
hlt
adc
sarl
adc
pop
cltd
xor
in
icebp
icebp
add
xchg
mov
inc
mov
adc
inc
mov
lcall
and
pop
lcall
lea
push
clc
push
cltd
in
cmp
addb
insl
xchg
mull
or
inc
push
stos
mov
pop
xor
mov
push
mov
out
fwait
repnz
test
mov
push
mov
ret
add
add
cmpsb
and
pop
lods
ja
pop
jae
out
inc
jp
repnz
jbe
into
pop
test
dec
clc
sub
cmpsb
cmp
add
repz
fistl
or
push
inc
movsl
mov
mov
out
jecxz
ret
das
mov
aaa
mov
jb
pop
and
adc
xchg
adc
mov
jo
and
rcrl
lods
mov
mov
shrb
lea
orb
in
int3
imul
cmp
loopne
adc
das
add
push
shr
outsl
fadds
xchg
aaa
fiaddl
sub
cwtl
jnp
mov
lret
xor
sarb
jnp
lahf
sub
aaa
xor
jns
mov
addr16
adc
inc
sub
mov
repnz
xchg
add
jns
clc
push
popf
xor
out
cmc
cld
mov
cmp
shrl
imul
int
mov
andb
xchg
push
xchg
push
sub
shl
mov
dec
pop
std
or
push
xchg
mov
rcrb
mov
jle
scas
mov
xlat
daa
sub
and
cmpl
jp
mov
enter
mov
mov
js
subl
dec
jl
stc
fucomp
or
or
xor
xchg
mov
xor
push
adcl
stos
pop
mov
add
adc
ror
ficompl
test
in
imul
mov
or
xor
loopne
out
loope
pop
pop
jns
aam
inc
pop
inc
xor
fwait
xor
xor
fstpt
pop
xor
pop
clc
lcall
repnz
rcrl
mov
mov
aaa
cli
xor
imul
test
popf
out
adc
jnp
out
and
jno
js
push
fcmovnu
outsl
loop
popa
jmp
andl
out
mov
repnz
ret
sbb
daa
dec
sbb
stos
sub
test
scas
aam
cmp
cld
imul
sub
xor
fdivs
fidivs
movsb
adc
ljmp
and
push
ljmp
outsl
dec
addr16
enter
ret
and
shl
aas
stos
xchg
adc
insl
xchg
js
int
ret
push
inc
out
test
loopne
rorl
imul
pop
mov
notl
aad
xchg
dec
shlb
fwait
dec
repz
sub
or
sub
fwait
stc
sarb
xchg
pop
mov
sbb
mov
jge
pop
mov
jecxz
or
ds
mov
ja
pop
cltd
adc
lret
jle
or
fwait
mov
cs
fwait
xchg
insb
add
test
cmp
les
test
scas
stc
push
je
or
arpl
sub
insl
mov
test
ja
addl
xchg
sub
mov
pop
adc
testb
shll
addr16
in
mov
imul
dec
jbe
movsb
dec
jge
add
push
ret
push
hlt
adc
lret
jns
in
adc
aas
lods
xor
push
stc
xchg
sarb
push
cwtl
jne
sub
push
lock
sbb
sub
dec
inc
std
test
and
push
lds
xchg
mov
sub
hlt
fsubrl
leave
aad
adc
enter
es
movsl
push
pop
int
into
mov
dec
mov
divl
push
jg
int3
push
aam
scas
sub
scas
pusha
lea
xchg
or
add
or
pop
fs
inc
fiadds
xchg
jp
xchg
mov
aam
stc
add
inc
cmp
inc
push
orl
lcall
dec
jg
sub
cli
daa
lret
ret
ficomps
insl
and
xor
outsb
jle
bound
mov
inc
cmp
sahf
cld
sbb
adc
jno
sub
sbb
add
pop
cmp
jmp
cmp
xor
bound
les
idivb
adc
xchg
jmp
enter
fisttpll
and
fmull
add
dec
stos
mov
push
bound
push
outsb
loope
jns
notb
cmp
add
cmp
push
or
push
fdivp
nopl
rolb
stos
fildl
in
lret
or
lcall
inc
xchg
scas
rcl
repnz
sbb
fwait
pop
leave
adc
in
sub
pop
addr16
dec
push
jae
lahf
stos
mov
cli
cmc
jnp
push
add
mov
add
aam
push
push
push
sahf
ds
je
icebp
push
cld
aas
or
imul
ret
sub
stc
outsl
or
in
mov
lds
xor
mov
test
push
or
mov
das
js
rorb
xor
test
nop
lods
add
lret
cmp
pop
arpl
cmp
inc
pop
ret
dec
ret
xchg
adc
sub
fcmovnb
cmp
das
adcl
sub
jmp
adc
jp
xor
adcb
jg
dec
xchg
sub
outsl
ds
inc
inc
adc
sbb
lcall
decl
ss
jecxz
cld
push
ss
mov
cmp
sub
sub
jmp
xchg
inc
popa
ret
std
or
jno
mov
scas
jmp
fnstcw
cmc
int3
addb
cltd
fs
aas
lcall
ds
jge
or
pop
nop
fsts
xchg
pop
rcl
jecxz
in
sub
sarl
out
xor
icebp
mov
nop
stc
or
dec
xor
mov
cmpsl
cmp
mov
mov
mov
bound
push
ljmp
jmp
dec
push
ja
pusha
test
pushf
addl
sbb
xchg
sub
je
mov
ja
aas
mov
in
incb
aad
adc
push
fwait
sahf
cmp
xchg
mov
sbb
pop
cmp
pop
pop
or
push
cmc
loopne
dec
push
cltd
loop
in
sbb
in
test
xchg
xor
mov
sbb
inc
stos
cmp
inc
xor
mov
outsl
aad
xchg
imull
scas
hlt
insl
sahf
adc
or
jo
push
mov
cmp
in
test
sbb
out
pop
outsb
fbstp
inc
mov
hlt
push
inc
inc
fcmovnu
es
inc
mov
repnz
pop
add
inc
sub
mov
push
jge
fmulp
cmpsb
jb
dec
sbb
cmp
ss
or
clc
mov
pop
in
mov
sbb
mov
pop
into
pop
sarb
pop
stc
xor
aaa
pop
lods
push
cmpb
leave
mov
push
or
sub
insl
std
imul
imul
push
pop
and
sahf
jmp
sbb
ds
sti
ds
sub
fbstp
push
xchg
mov
aad
pusha
popf
addr16
cld
cli
popf
ljmp
mov
cmpsb
imul
sbb
das
and
into
cli
dec
dec
loop
lcall
add
in
ljmp
outsl
jp
icebp
cmp
in
mov
sub
iret
fstl
inc
ret
fwait
pop
mov
je
enter
push
call
call
fs
xor
xor
mov
xor
sbb
adc
sbb
scas
jle
popf
cmpsb
sti
sbb
loope
xor
hlt
push
cmp
aad
addr16
xchg
xchg
mov
sbb
repz
jl
xor
mov
adc
loopne
pusha
mov
scas
push
out
pop
push
xor
xor
not
dec
repnz
sub
or
jle
sahf
mov
outsb
add
sti
daa
add
andl
mov
mov
add
lds
or
adc
fwait
sti
pop
rcrb
xchg
insl
cwtl
notb
dec
sahf
sbb
xchg
sub
push
sbb
xor
out
and
ljmp
xchg
add
inc
js
jnp
orl
sti
clc
or
iret
jns
clc
adc
xchg
adcb
lcall
jo
ret
mov
cmp
adc
and
or
add
jbe
sbb
fcmovb
sub
mov
jg
fdivs
into
lret
in
xchg
sub
fidivs
mov
hlt
sub
and
mov
xorl
daa
movsl
imul
xchg
test
xchg
rcpps
sbb
xor
xchg
jmp
dec
xor
imul
cli
cwtl
icebp
rol
lock
repz
and
iret
int
hlt
lods
mov
lods
dec
mov
pop
movsl
push
rcl
mov
daa
jp
mov
cltd
js
inc
int
push
jle
inc
mov
mov
js
call
lds
mov
mov
repnz
ret
push
adc
inc
dec
push
call
in
dec
test
repz
adc
cmp
mov
das
add
js
iret
cmp
popf
sub
cltd
mov
gs
push
mov
cmp
sbb
sbb
sbb
pop
test
mov
fbstp
imul
pop
mov
into
and
inc
sti
xor
sbb
push
sub
fsubrs
loopne
in
pushf
pop
mov
pop
test
mov
inc
es
hlt
iret
mov
mov
mov
cmp
movsl
fnstcw
lahf
cli
stos
xor
fcompl
inc
repnz
mov
dec
mov
add
push
xchg
aaa
pop
and
popa
cmpl
sbb
fcomi
dec
xor
cmpsb
addl
sub
push
sub
xchg
lret
lock
push
and
loop
imul
clc
mov
imul
fimull
adc
mov
test
divl
sub
cld
and
out
mov
adc
div
idiv
jg
adc
shrb
jmp
lock
add
and
out
outsl
repz
scas
nop
and
or
imul
mov
mov
out
pop
inc
inc
push
out
stc
test
xor
leave
inc
orb
or
outsb
xchg
mov
int3
push
xchg
mov
movb
cmp
test
mov
or
or
bound
dec
sbb
test
ss
addb
mov
mov
jmp
mov
out
xor
jl
mov
jmp
or
fnstcw
cmp
jns
or
or
adc
cmc
or
add
fisubrs
bswap
repz
out
xchg
sub
sub
lea
xchg
movsb
xor
add
xor
subl
push
dec
pop
dec
cmp
sbb
mov
inc
stc
movsl
add
xlat
sbb
les
cmc
cmc
pop
daa
inc
fildll
push
mov
pop
mov
adcl
outsb
dec
cwtl
stos
orb
jg
push
fs
jmp
cmp
sub
push
xor
int3
mov
cmpsl
or
aaa
mov
cltd
lods
pop
sbb
adc
jae
dec
xor
add
mov
shl
mov
mov
adc
ljmp
push
push
cltd
jno
inc
mov
shlb
fldenv
scas
mov
jb
xchg
mov
clc
fmulp
and
sub
mov
inc
fxch
and
lret
mov
mov
jb
or
icebp
add
push
mov
mov
jmp
sub
push
push
xchg
cmpb
into
lcall
add
sbb
aad
cmp
push
cmpsb
mov
mov
enter
ficoms
or
lahf
iret
decb
jge
cmp
mov
les
lds
lret
mov
and
sub
arpl
dec
mov
cli
jnp
cld
inc
punpckhdq
adc
inc
sti
xor
insb
test
inc
ror
arpl
xchg
xor
dec
scas
xlat
mov
adc
jbe
in
or
rcll
jg
fistps
les
jge
test
sbb
sbb
xor
imul
jecxz
xchg
xchg
inc
sub
dec
fcmove
dec
mov
stc
dec
loopne
lea
push
outsl
pop
out
jle
dec
std
es
adc
xchg
lret
push
test
xchg
mov
stos
push
xor
ja
test
imul
stos
adc
in
or
cmp
adc
pop
fmuls
stc
or
and
sbb
stos
jno
faddl
mov
emms
mov
and
lcall
mov
js
imul
pop
dec
sub
dec
loop
shll
jecxz
out
jnp
insl
cmc
cmp
ret
and
es
and
stos
stc
and
inc
leave
es
mov
and
jl
pop
dec
shld
sub
rcrl
jg
iret
jnp
lds
aad
loopne
sub
pop
sarb
mov
mov
cmp
push
inc
aam
mov
jp,pn
pushf
scas
mov
jnp
fldcw
icebp
mov
and
fsubrs
idivl
adc
mov
ret
mov
push
mov
mov
push
mov
imul
shr
fldt
ds
nop
mov
aam
aad
and
dec
test
mov
fnsave
scas
fisttpll
lcall
xor
insl
imull
fs
orb
test
inc
stc
jae
movsb
xor
pop
push
imul
mov
or
push
or
add
bound
lcall
shr
dec
adc
leave
push
pop
mov
adc
push
xchg
xor
mov
xchg
dec
out
mov
inc
adc
cmp
mov
sahf
shll
xchg
add
sbb
mov
sbb
pop
inc
std
push
cmp
lods
sbb
rolb
sub
jl
inc
ret
lret
add
xor
shrb
pop
jmp
jge
jmp
mov
push
sub
xchg
push
push
hlt
or
xor
sbb
cmpsl
cmp
mov
inc
xchg
pushf
fninit
or
mov
adc
mov
shl
aaa
ficompl
or
mov
and
repz
jnp
jecxz
aam
neg
xchg
or
les
sbb
test
jne
daa
inc
jno
mov
leave
shll
popa
cmp
sbb
arpl
int
push
decl
push
out
cwtl
inc
push
fistps
int3
xor
mov
loopne
push
out
xchg
sarb
rolb
mov
push
ret
data16
popa
int3
aas
mov
or
push
sbb
enter
aad
xorl
push
mov
lea
lods
outsb
xchg
inc
dec
sub
mov
jae
sub
push
scas
fxch
mov
dec
imul
insb
addr16
pop
aam
mov
test
adc
scas
inc
popa
cld
test
jb
sub
iret
iret
clc
fdivrl
cmp
mov
bound
aad
arpl
ret
negl
jb
push
jo
daa
pushf
mov
or
dec
fs
popa
in
cli
fimull
jl
repz
xchg
and
dec
shr
xor
xchg
fstl
call
jl
aam
and
int3
addr16
and
inc
test
bound
jne
push
adc
inc
mov
lcall
idiv
jmp
adc
movsb
xor
xchg
push
loop
inc
fs
xor
lea
pop
movsl
lods
add
sbb
js
jns
xor
leave
imul
xor
loopne
mov
jge
movsl
cmp
sbb
dec
fwait
ljmp
and
pusha
cmpsl
push
je
sub
push
lods
xorb
and
aas
or
hlt
pop
mov
clc
dec
mov
stos
dec
lea
pop
xor
dec
addr16
pop
push
xchg
jae
push
lock
dec
int
cmp
push
xchg
xchg
sub
pop
inc
leave
sbb
jbe
xor
nop
xchg
adc
add
pop
pushf
testb
imul
test
add
test
loop
add
mov
sub
xor
test
fldt
xchg
cmpsl
xchg
out
push
jmp
and
and
jne
inc
dec
mov
pop
adc
or
in
or
popf
popf
inc
pop
xor
movsl
ds
jnp
add
lds
imul
xchg
fwait
xor
or
xchg
sbb
cmp
cmpsb
cmp
push
cmp
cmp
rcrl
aas
out
xlat
sbb
stc
in
jmp
insb
mov
push
out
cmp
pop
push
sahf
imull
out
leave
mov
sub
ret
outsl
sbb
fwait
aas
leave
insb
xchg
js
insl
imul
pandn
dec
push
mov
mov
pop
imul
lods
jae
das
mov
xor
cli
pop
aam
pop
ret
lea
jl
push
xor
jns
sub
fcompl
mov
ret
leave
int
cld
sbb
cmp
cmp
lea
push
and
ljmp
ljmp
add
pop
les
cmp
imul
mov
loope
cmp
cmpb
fwait
bound
in
loope
inc
sahf
pop
cmp
mov
fistpl
gs
mov
mov
aad
pushf
push
cli
jg
out
int3
mov
fmulp
into
insb
pop
mov
push
pop
jbe
sbb
or
jmp
aad
ja
pop
negb
xor
lods
jg
pop
push
ljmp
jno
movsb
mov
popa
jl
incl
adc
insb
popa
sbb
pop
lcall
and
pop
out
lods
sub
cmpsl
dec
neg
mov
cwtl
jo
mov
inc
rcl
movb
adc
daa
inc
enter
ficompl
push
inc
push
cltd
jae
sbb
pop
pushf
arpl
or
cmp
xor
call
jg
pushf
adc
gs
and
shrl
xchg
sub
je
les
pop
mov
xor
hlt
dec
jl
outsl
daa
rorl
out
xor
add
hlt
js
and
rclb
rol
cmp
pop
mov
ljmp
jb
pop
leave
pusha
nop
pop
jge
fcmovnb
out
cld
dec
xor
xor
pop
enter
in
pop
fisubrs
mov
int3
xor
enter
cmp
mov
push
and
ja
js
out
lret
dec
repnz
inc
test
int
ficomps
cmc
add
mov
mov
mov
xor
cmp
call
mov
inc
mov
leave
test
repz
xchg
sub
stc
in
mov
sbb
cmpsb
int3
mov
mov
addb
std
pusha
mov
pop
xchg
pop
jle
jnp
xorb
jle
push
repz
cmp
and
inc
fcmove
jbe
mov
fsubrl
fnstenvs
clc
in
sub
negl
nop
negb
jns
rcll
test
in
and
jae
fwait
ja
test
inc
add
jne
dec
lock
xlat
cld
or
and
ret
cmp
jmp
mov
mov
gs
mov
loopne
push
xchg
and
cltd
arpl
stc
or
mov
xchg
sbb
adc
mov
imul
imul
pop
push
lods
dec
mov
inc
mov
pop
mov
repz
pop
add
cmpsb
cmp
inc
or
jns
repnz
shrl
pop
add
iret
sub
ja
push
lods
and
cmp
fwait
bound
cmpsb
push
lods
cli
lea
fstl
test
ds
movsl
pop
in
and
jno
push
shrb
pop
cmp
cvtdq2pd
in
mov
xchg
mov
and
xor
or
fbstp
cmpsl
dec
sub
popf
inc
popf
jo
vpunpckhqdq
popa
add
cli
dec
aas
mov
jns
xchg
pop
adc
adcl
lcall
lods
sub
fstps
mov
cmp
mov
jmp
mov
cmpl
push
mov
aas
mov
fiaddl
cltd
lret
insb
aam
mov
inc
scas
call
push
lds
outsb
mull
test
xor
pop
out
adc
or
repnz
jb
cmpsl
or
push
cli
into
movsb
xchg
call
xchg
or
mov
push
dec
pop
mov
adc
ja
rorl
je
adc
xchg
push
mov
js
sub
fidivl
sub
sahf
add
sahf
push
sti
mov
push
in
sub
ret
call
sbb
lods
iret
sbb
and
inc
rclb
loop
xchg
xchg
or
cmp
sub
cmpsb
ds
cmp
dec
xchg
push
mov
ret
xorb
adc
mov
or
shl
popl
nop
popf
xor
imul
and
andb
pop
lock
aad
loop
js
push
add
inc
inc
fcomps
loope
imul
cmp
mov
ds
and
testb
add
push
mov
xor
icebp
jmp
and
rclb
cmc
cs
push
loop
jg
sbb
cmpsl
cmp
bnd
add
ret
rcll
addr16
add
xor
xor
mov
ret
rolb
sti
insb
aad
enter
fistps
test
mov
push
in
clc
mov
sbb
dec
mov
das
xchg
popf
xor
cmpsb
shlb
push
fs
pop
out
dec
mov
sub
inc
lods
cmp
lods
out
rcrl
ret
aas
rorb
add
mov
in
mov
out
mov
add
pop
aaa
ss
out
xchg
and
xor
sub
repz
jae
lahf
es
js
imulb
sub
jge
jo
or
inc
push
add
mov
out
dec
out
lret
add
sbbl
or
mov
pop
in
insb
ja
lods
xchg
loope
fisttpl
loopne
adc
dec
js
rclb
cwtl
incb
cmp
push
popf
push
je
addl
or
adc
sbb
out
sahf
test
jbe
andl
movsb
jl
mov
cmp
cmp
sbbl
out
push
icebp
daa
jnp
fiadds
incb
stos
lret
lret
aam
shll
iret
xchg
mov
cmc
shl
popa
add
mov
js
add
cs
xchg
sbb
pop
sbb
jp
mov
lock
inc
mov
pop
popf
xchg
notl
xor
repz
loop
xchg
ja
test
dec
movsb
pop
shll
mov
push
cmpsl
ds
and
ss
xchg
scas
out
aad
ljmp
pop
loop
cltd
lea
imul
add
cmp
mov
inc
ret
xor
lds
xor
jmp
or
fiadds
push
in
popf
rcrl
lahf
insl
and
fnsave
into
insl
int
adc
ss
mov
fisubl
pusha
lods
aam
adc
rol
mull
cmpsb
fs
aad
out
xor
in
inc
aad
lcall
pop
mov
rcrb
or
call
fdivl
outsb
and
pop
hlt
pop
ficoml
xlat
pop
shll
mov
or
fwait
enter
xchg
push
sbb
inc
adc
dec
dec
scas
jbe
movsbl
push
out
movsl
jmp
pop
or
in
jno
int
cwtl
and
sbb
lods
push
out
mov
dec
or
mov
sub
out
pop
loop
in
imul
ja
ds
outsl
shlb
xor
push
outsl
and
mov
dec
mov
xor
sbb
pop
cmp
sbb
pushl
ss
cltd
xor
cld
sub
test
movsb
mov
lahf
movsb
jl
maskmovq
divl
mov
jl
fadd
lds
mov
jo
mov
push
shrl
insl
test
aad
mov
das
dec
dec
test
dec
sahf
lcall
sbb
mov
lods
fldl
pop
hlt
cmp
stos
testl
lock
int3
imul
std
in
push
mov
dec
mov
lods
pop
fwait
xchg
ret
pop
push
cld
cli
cltd
loop
fbstp
insb
clc
xchg
outsl
std
lods
rorl
adc
lcall
xor
clc
popa
jne
push
sarb
sub
movsb
fmul
dec
push
pop
push
out
push
push
jae
jb
mov
lods
int
sub
lcall
fidivl
jns
mov
pushf
stc
cld
and
lds
js
hlt
add
mov
mov
out
xchg
sahf
sbb
cmc
sub
and
xchg
dec
scas
hlt
jmp
dec
dec
pop
andb
cmpsl
in
mov
out
movsl
sbb
std
mov
add
cmp
mov
fisubl
rclb
or
mull
aad
lods
sahf
stos
into
inc
fucomp
inc
aas
xchg
sub
cs
stc
push
mov
add
xchg
jl
and
pop
push
and
adc
mov
sub
jns
cmp
adcb
dec
xchg
pop
xacquire
sbb
ja
xor
xchg
dec
or
movsl
das
mov
andl
sub
movsb
xchg
mov
fcomip
xchg
imul
cmpsb
test
shld
jno
aas
dec
dec
xchg
push
sub
lea
mov
es
lret
bound
mov
imul
in
xor
stos
sub
add
cmp
ds
in
sbb
rclb
or
jne
fistps
test
lods
mov
pop
adc
lret
ds
cmpsl
cmp
testb
das
pop
aaa
push
xor
out
out
test
addl
cmp
or
subb
mov
jle
jecxz
or
mov
arpl
pusha
pop
sarl
mov
cmc
sti
inc
das
push
sbb
shll
fwait
mov
push
ss
aas
ret
cmp
adc
pop
adc
jne
cmp
cmp
pop
pop
push
rorb
add
mov
adc
xchg
sarb
mov
pop
xlat
insl
push
addr16
sar
hlt
push
or
mov
push
loope
mov
or
stos
cs
dec
xchg
in
lret
mov
clc
js
pop
ret
loopne
loope
rcl
insl
ljmp
adc
sbb
insl
inc
andl
jae
out
push
enter
xor
stos
imul
push
mov
push
ljmp
or
pushf
mov
nop
leave
outsl
lods
inc
push
sti
cmp
fmull
lahf
ds
sar
enter
stos
mov
xchg
xor
push
dec
rcrb
cmp
imul
jbe
lds
ss
mov
inc
punpckhwd
jle
lods
xchg
xlat
add
dec
and
outsl
xchg
popf
popa
ss
mov
data16
out
jne
jbe
and
fsqrt
jne
mov
pop
jge
call
push
lahf
cmpl
scas
add
fistl
scas
cmpsb
loope
ja
mov
out
xchg
jb
cmp
jle
xor
push
fs
andb
sub
jns
inc
fs
es
enter
call
ret
loop
push
adc
sbbb
xchg
jl
aas
mov
pusha
push
mov
sahf
jo
out
lea
push
cwtl
jge
pop
cmp
xchg
enter
jns
loopne
sbb
aad
addr16
mov
les
sbb
cli
push
cmp
outsl
cld
mov
fisubs
fistpl
lods
pop
lock
xor
xchg
adc
roll
or
insb
pop
cmp
sbbl
dec
popa
xchg
jmp
sub
es
fsts
mov
lret
test
in
inc
cld
mov
adcb
lods
out
sub
and
xlat
hlt
mov
mov
push
or
or
int
jnp
mov
mov
aad
push
ftst
movsb
das
fbld
popa
lds
mull
sub
mov
xchg
lcall
jge
xchg
sub
inc
loope
test
adc
mov
inc
fisubs
jp
lods
stos
mov
subl
xor
xor
mov
push
mov
outsl
in
inc
std
fiaddl
jnp
lods
je
loope
leave
das
pop
fcoms
ficoml
in
inc
jmp
sahf
push
fldenv
outsl
mov
mov
popa
iret
sub
rclb
addr16
xor
cli
jne
fisubs
mov
scas
enter
into
mov
dec
xor
sbb
jae
mov
pop
sbb
or
popa
cmp
mov
sbbb
mov
int
pop
push
cs
jb
adc
mov
jne
jmp
fsts
adc
iret
out
add
jnp
stos
add
mov
inc
aas
cmp
and
data16
and
je
xchg
and
add
std
rolb
mov
das
movb
mov
jbe
int3
stos
sub
adc
fstps
pusha
ss
mov
xchg
cmc
sahf
shlb
pop
adcb
jle
and
push
and
test
xchg
leave
les
call
stc
xchg
das
cmp
sbb
push
sbb
inc
lods
icebp
mov
inc
xlat
lds
xchg
lret
imul
ds
rcrb
enter
nop
dec
int3
fcmove
sub
outsl
push
adc
jb
stos
movsb
popl
and
push
xor
or
das
push
lea
mov
cmpb
pop
cmpsl
rcl
sbb
push
shll
int
js
fadd
jae
rcll
pop
jne
inc
mov
rcrb
dec
data16
arpl
xchg
dec
pushf
pop
add
adc
xchg
push
jmp
jg
push
push
pop
mov
cmp
out
stos
dec
sub
sub
push
jge
cmpsb
push
xchg
insb
scas
or
js
dec
in
jg
std
sub
scas
lds
xchg
jno
daa
adc
lea
popa
test
sbb
arpl
adc
jbe
addr16
push
dec
lea
xchg
cmpsb
adc
fdivs
std
cltd
adc
jbe
jbe
sbb
imul
pop
testl
pop
adc
mov
inc
bswap
mov
mov
jo
xor
imul
xor
sbb
mov
mov
out
and
lret
jge
repz
gs
out
in
dec
xchg
movsb
cwtl
jae
test
xor
jno
fs
cmp
call
push
push
lret
mov
lcall
in
xor
jb
xchg
jecxz
daa
jg
pop
dec
xlat
mov
push
and
pop
jo
xor
in
pop
nop
jecxz
cld
inc
sbb
mov
xchg
lods
inc
out
mov
sbb
bound
leave
pop
mov
out
adc
pop
sbb
decl
push
mov
pop
movsb
movsb
cli
aas
push
and
jecxz
lds
sub
pop
repz
frstor
stos
rclb
xchg
clc
mov
cmpsb
mov
cld
mov
call
inc
xor
loopne
lods
or
mov
outsb
add
pop
clc
jmp
pop
das
test
push
dec
and
sti
fwait
xor
js
insl
int
dec
bswap
adc
sbb
scas
jb
mov
adc
pop
xchg
ret
ffree
jl
lods
cmpsl
xlat
movsb
mov
push
or
insl
fdivrp
mov
mov
mov
pop
repnz
aam
mov
inc
pop
out
xchg
dec
push
xchg
sbb
adc
popf
int3
add
mov
test
daa
lcall
cmp
fcmovne
jo
xor
aad
lcall
aaa
and
aaa
push
daa
inc
mov
jb
inc
xor
pop
fadds
xor
mov
sahf
clc
jmp
jecxz
xchg
inc
das
push
repnz
in
test
mov
or
cmp
cltd
cs
pop
jp
sbb
es
push
xorl
cmpsb
notb
addb
test
bound
mov
push
divb
xor
shrl
lods
inc
jmp
add
outsl
pop
out
in
cmp
imul
dec
inc
xchg
xor
mov
inc
enter
fld
fadds
in
test
shlb
fisttpl
cwtl
adc
aad
loope
add
jne
push
lods
mov
xchg
scas
mov
cmpb
mov
inc
icebp
aam
lock
pusha
out
xchg
repnz
add
outsl
repz
adc
cmp
push
push
int3
arpl
filds
fbld
mov
pop
dec
pushf
mov
into
int
and
and
mov
xchg
push
jmp
pop
xor
pop
xchg
ret
movsl
cmp
icebp
mov
mov
push
pop
adcb
fs
mov
pop
test
cmp
mov
lea
sbb
cmp
or
add
test
xchg
imul
pop
fisubrs
int3
rolb
jb
pop
rorl
das
inc
in
loopne
hlt
cmp
xor
test
adc
daa
push
bound
xor
sub
and
popa
fidivs
or
cmpsl
out
cld
inc
stc
shll
sub
pusha
mov
jge
daa
jp
inc
dec
in
or
cmp
mov
adc
and
mov
psrld
or
out
jae
mov
xor
clc
jge
sub
cmpsb
sbb
fidivs
adc
stos
mov
dec
movsb
and
aad
adc
negb
in
xchg
mov
cmp
imul
push
jmp
sbb
or
mov
sahf
es
mov
stos
xor
lock
les
sbb
cwtl
test
ret
xor
dec
mov
cmp
js
pop
dec
cs
js
pushf
jge
pop
xor
sahf
arpl
cmp
les
cmp
xchg
insl
pop
lea
xchg
jno
repnz
cmpsl
cmp
sub
adc
xor
and
sub
pop
mov
dec
in
out
popa
mov
or
pop
in
push
jnp
iret
xor
push
fs
andl
pop
xor
cmp
lahf
dec
add
mov
push
inc
cld
add
movsb
xor
shrl
cmpsb
into
adc
dec
inc
adc
das
aas
and
mov
fldenv
scas
adc
sub
cld
ret
sti
adc
mov
inc
sub
fisubs
insb
inc
test
mov
jmp
jle
into
mov
adc
and
fwait
adc
std
out
cmpsl
mov
sti
stc
nop
ficoml
nop
enter
mov
mov
cld
rclb
xor
lcall
loope
loop
inc
fbstp
xchg
pop
int3
push
xor
pop
xchg
add
mov
push
jno
rcrl
add
mov
pop
cld
inc
inc
or
pusha
cs
inc
add
andl
pop
inc
pop
dec
and
and
sbb
mov
sbb
ja
sarb
mov
sub
push
lock
dec
dec
cld
clc
lahf
subb
dec
mov
mov
pop
or
sahf
orl
frstor
outsl
push
push
push
mov
mov
inc
arpl
mov
jmp
stos
pop
pop
cmpsb
scas
or
and
dec
movsl
xor
push
xchg
clc
mov
movsl
mov
mov
inc
pop
hlt
jbe
push
popf
mov
test
push
aaa
mov
fwait
jmp
push
push
nop
out
das
repnz
pusha
jp
xchg
mov
sub
test
fnstcw
mov
xor
lods
add
fidivrs
pop
pusha
jmp
xor
arpl
cmp
out
xchg
lods
mov
and
sbb
repnz
push
cltd
stos
testl
divl
xor
and
aad
lock
test
push
adc
and
sti
inc
test
in
push
sahf
push
push
inc
mov
pusha
mov
jo
pop
shrl
xor
xchg
add
aad
out
lret
inc
loop
enter
mov
lea
in
adc
bound
sti
test
repnz
cmp
repz
pop
call
mov
adc
cmp
push
loope
adc
dec
fs
lds
aam
xchg
andl
mov
hlt
mov
sub
sbb
cmp
std
adc
cwtl
repnz
mov
adc
and
add
cmp
pop
and
movsl
push
cld
imul
mov
fsubs
cmpsl
mov
xchg
scas
enter
jg
mov
mov
push
call
adc
scas
fiadds
jnp
mov
lds
adc
sbbl
xor
and
fildll
xchg
sbb
dec
loop
rcrl
jge
imul
leave
adc
push
gs
push
insb
inc
fstpl
jne
and
std
dec
sti
ret
lods
mov
decb
jl
mov
pop
jecxz
add
push
test
mov
repz
xchg
cltd
cmpsl
mulb
pop
jg
sbb
cmp
sub
inc
pop
mov
out
mov
xchg
sbb
les
pop
mov
push
cmc
enter
sub
add
cmp
inc
or
outsb
jbe
je
mov
pop
and
sbb
cmc
cltd
mov
jmp
push
mov
or
jno
scas
sub
das
mov
cmp
repnz
fldcw
cmc
inc
xlat
es
dec
lock
and
fsts
add
mov
sub
orl
or
add
aad
aas
push
movsl
jo
les
inc
lods
mov
mov
aad
mov
add
and
fcomps
sub
sarl
es
mov
imul
jnp
sub
sub
xor
xchg
inc
push
dec
mov
mov
sbb
fsubp
mov
xorl
xchg
psubusb
ljmp
xchg
or
lcall
add
lock
sub
lret
jb
mov
mov
mov
sbb
lea
mov
pushf
adc
in
test
xchg
ret
lds
je
mov
loope
cmp
movsl
mov
lds
mov
cmpsl
loope
inc
testl
lods
mov
in
lret
mov
mov
rcll
cmp
int
push
jno
mov
mov
adc
and
call
loop
sbbb
js
dec
mov
mov
jnp
mov
dec
adc
cmpl
add
movsb
sbb
adc
or
lods
dec
sub
es
loop
pop
adc
rcrb
lret
mov
insl
sbb
pop
or
cmp
jecxz
add
incb
mov
jbe
or
sti
xchg
es
sbb
jns
decb
testl
xchg
add
add
sahf
fwait
mov
test
xchg
xlat
push
push
loop
push
jg
cwtl
das
sub
mov
rcrl
enter
je
out
adc
push
lods
fs
fcomps
mov
gs
sti
cmp
ds
ret
popa
add
lcall
sahf
pop
push
aas
push
mov
ja
icebp
adc
cs
and
frstor
lods
pop
cs
lock
pop
jnp
int3
loop
cmpsl
lcall
out
imulb
imul
add
jecxz
sbb
adc
outsb
adcl
pop
sub
mov
sbb
xchg
jb
jp
or
ret
jge
js
pop
cmp
jns
lock
xchg
push
lods
ja
pop
inc
icebp
xchg
sbb
jmp
ss
ret
xlat
lea
pop
dec
xchg
push
push
fdecstp
or
sbb
pop
and
adc
ds
mov
inc
gs
popf
pushf
sub
shr
pop
jecxz
and
jge
sbb
mov
fisttpll
sbb
mov
mov
in
cmp
ret
cmp
mov
mov
mov
fldt
or
int3
inc
and
xor
xchg
std
fimuls
into
ss
rcpps
pop
rorb
lods
or
out
fildl
sbb
arpl
mov
mov
loopne
insl
sahf
jl
dec
sub
and
xchg
mov
mov
notb
stos
mov
aad
sbb
inc
xchg
adc
in
dec
push
repz
pop
dec
pop
xchg
or
fnsave
dec
mov
sub
pop
fnstsw
popaw
leave
lock
inc
pop
hlt
data16
jns
das
sar
mulb
adc
ret
cmp
cmp
jns
pop
mov
enter
mov
sbb
stos
add
mov
jle
cmc
dec
or
call
push
sub
sub
mov
fcomip
sarb
sahf
jns
jecxz
jp
sub
subl
inc
imul
pop
cld
inc
orl
push
xchg
clc
adc
int
sbb
hlt
jno
push
xor
add
icebp
xor
add
and
pop
xchg
xchg
add
in
rcrl
mov
rolb
push
aam
addr16
sbb
mov
fcompl
mov
inc
mov
mov
cld
ds
inc
dec
je
push
mov
push
scas
inc
mov
cltd
add
es
lret
cwtl
inc
mov
in
std
adcb
mov
aaa
lods
aas
icebp
mov
mov
mov
fwait
jp
leave
int
sbb
call
mov
adc
jno
jae
imul
icebp
mov
fistpl
mov
cmp
jmp
int
bound
adc
sbb
fdivr
ret
sti
add
adc
scas
rcrb
mov
push
mov
add
jae
ret
push
xor
adc
rclb
xchg
lods
mov
fwait
push
sub
xchg
inc
arpl
lods
inc
push
adc
mov
and
fstpt
dec
hlt
aaa
sub
push
lcall
lods
fsubrs
push
sbb
mov
ss
stc
imul
add
jns
mov
mov
mov
pop
mov
pop
hlt
lret
icebp
clc
cmp
xchg
add
pop
mov
ficompl
jecxz
push
sbb
sarl
xchg
mov
das
and
push
xchg
cmc
inc
push
jne
adc
mov
cmpsb
mov
adc
add
sbb
dec
mov
movsb
call
or
pop
mov
cmpsl
fimull
or
mov
daa
sbb
jg
cmc
hlt
jb
pop
pop
add
cmp
lods
inc
cmp
jo
out
lret
xchg
out
sti
and
xor
push
dec
and
ret
cmc
or
decl
clc
inc
lock
pop
fs
lahf
add
cmpsb
ja
ljmp
jno
sbb
jle
mov
mov
dec
rcr
sbb
pop
adc
pop
loop
jns
mov
jge
popa
sub
push
scas
ljmp
faddp
dec
ror
mov
popf
dec
mov
pop
jp
pop
and
and
jb
sbb
fildl
lods
xor
ds
dec
lahf
call
jmp
arpl
bound
lcall
xchg
mov
add
out
xor
sub
les
shrb
push
mov
icebp
lret
stc
sub
mov
loopne
cli
dec
mov
dec
das
mov
lea
pop
mov
clc
dec
jnp
mov
fdivs
std
mov
pop
mov
mov
loopne
xorl
in
sub
mov
adc
stos
push
jmp
test
mov
mov
adc
xchg
stos
xor
test
int3
inc
iret
mov
and
sub
lods
shrb
das
rolb
lods
mov
int
inc
sbb
adc
mov
lahf
shl
push
outsl
cmp
cs
sub
xchg
dec
ucomiss
mov
sub
fistpl
mov
jle
insl
int
inc
inc
sbb
loopne
mov
adc
push
or
andl
je
xchg
mov
lds
sbb
enter
sbb
int
filds
mov
sbb
sbb
sahf
pop
aad
inc
nop
lcall
and
xlat
jbe
lret
out
push
jb
and
jo
data16
sarb
mov
dec
jecxz
xchg
push
stos
xor
or
lcall
dec
mov
cmpb
add
or
pop
loop
sub
mov
mov
mov
scas
rorl
fs
pop
mov
sub
aad
inc
inc
push
cmc
insl
mov
inc
cli
dec
out
mov
in
cs
pop
add
inc
jnp
inc
push
cmp
xor
test
xor
sub
adc
jp
pop
cmp
in
inc
dec
ds
mov
cli
push
adc
adc
fistpll
in
pop
push
xor
or
imul
rcl
into
jns
mov
mov
movsb
out
xor
rorb
mov
mov
xchg
dec
xor
cltd
push
fwait
pcmpeqd
shrl
and
mov
lock
cmp
sahf
jo
mov
and
sub
ret
movsb
mov
inc
fidivrl
inc
shll
mov
add
dec
push
mov
dec
std
sahf
les
cli
int
push
divl
and
push
dec
cwtl
or
jle
lods
nop
pop
add
mov
ja
xor
add
out
fisubs
push
lods
mov
neg
mov
rolb
push
mov
inc
in
xchg
in
scas
sub
mov
jb
lret
fs
jecxz
jae
dec
sarb
or
das
jp
das
repnz
push
cmp
dec
inc
jge
movsb
outsb
jae
ret
out
je
sbb
mov
or
pop
xchg
xor
fwait
imul
push
inc
lock
out
xor
push
lahf
test
mov
ja
lahf
aas
push
xchg
in
or
cwtl
mov
addr16
jo
fmul
mov
jp
pop
test
fsubl
mov
outsl
xor
adc
or
nop
cmp
repz
pop
popf
jmp
inc
outsl
mov
xchg
out
std
jb
xchg
ljmp
xchg
mov
enter
lret
call
jg
cwtl
insb
adc
sub
xor
fnstsw
aas
das
pop
hlt
cmp
pop
popf
pop
js
xor
pop
push
imulb
cmp
mov
mov
ret
shll
jle
enter
scas
frstor
add
pusha
pop
lds
mov
aam
popf
push
call
ret
les
lret
outsb
arpl
push
adc
ret
mov
fs
fimull
into
xor
xor
cld
lcall
lret
xor
or
in
sub
stc
stos
pop
ficoml
adc
test
movb
les
enter
insb
jno
repnz
outsb
push
inc
sbb
cmp
aaa
jnp
movsb
cmp
leave
movsl
pop
es
dec
pusha
dec
pushf
pop
push
shll
in
or
outsl
mov
cmpsb
pop
or
jae
mov
fwait
push
iret
mov
sbb
push
icebp
sub
push
lahf
mov
aad
cli
mov
stc
sbb
out
pop
repnz
add
mov
xor
jo
push
cld
iret
add
mov
imul
dec
mov
and
fcoml
sti
es
pop
mov
stos
outsl
clc
cmp
pop
mov
jmp
fwait
add
insb
jae
pusha
imul
ret
dec
cmpb
pop
rcr
mov
std
ljmp
iret
pop
lods
or
jg
jns
fsubl
and
sbb
mov
cmp
cmpsl
insl
hlt
dec
fs
mov
inc
inc
push
dec
clc
jnp
jmp
jle
xorb
mov
out
cs
and
pushl
jns
sbb
jl
fildl
rolb
popa
cmp
xlat
daa
cli
pop
outsl
xor
shlb
or
in
pushf
cltd
mov
pop
or
loop
pop
cmp
sub
enter
add
mov
movlps
pop
mov
shlb
lret
push
fwait
add
push
jne
sahf
clc
aam
mov
push
testb
xchg
clc
xor
jae
mov
xor
jae
stos
dec
pop
mov
lahf
cmp
call
test
lods
sub
mov
cmc
aaa
or
mov
and
fst
xchg
std
mov
leave
negl
push
or
loop
test
leave
inc
pop
fwait
inc
aam
xor
xchg
ret
int3
sbb
in
fbld
pushf
das
test
sbb
movsb
cmp
std
xchg
sub
in
jmp
enter
sub
mov
dec
xor
or
gs
jle
movl
add
mov
mov
push
fucomi
and
pop
ret
pusha
ss
es
cmpsb
gs
or
adc
inc
idivl
outsl
repnz
movsl
jp
clc
inc
cli
xchg
out
popa
cmc
xchg
cwtl
and
hlt
push
ret
mov
fwait
push
jmp
mov
mov
aam
scas
push
fldenv
addl
add
and
or
cwtl
sub
rclb
rcrb
push
sarl
icebp
popf
dec
xor
cli
xchg
std
test
je
or
inc
sti
cltd
das
pop
les
cmpl
repnz
les
mov
and
loop
and
subl
movsbl
sbb
andl
outsb
mov
outsb
mov
fucom
fsubl
scas
mov
jp
imul
outsl
sub
imul
cmc
adc
hlt
loopne
es
mov
repz
aad
out
rclb
in
jg
push
pop
flds
xlat
lods
inc
cmp
negb
syscall
mov
jb
xor
cmp
notb
xlat
lods
insb
jge
xchg
pop
pop
push
inc
out
stos
in
cmp
in
mov
int
dec
stos
jne
outsl
and
jmp
movsl
into
jle
data16
sbb
jns
arpl
mov
adc
test
mov
jmp
sbb
stos
cmc
test
sub
mull
outsb
inc
les
fidivrs
add
pushf
scas
inc
and
inc
out
imulb
pop
or
jle
lods
jnp
xchg
ss
aaa
xchg
mov
push
clc
mov
js
mov
jb
dec
scas
mov
in
jno
mov
xorl
sub
call
lahf
mov
fs
push
in
pop
push
clc
xchg
lea
imul
int3
in
or
cmp
jnp
lahf
mov
leave
jle
adc
sub
enter
mov
dec
ja
mov
cwtl
dec
iret
jp
dec
rcrl
outsl
repz
dec
adc
adc
mov
cmp
pop
mov
cmp
push
rorb
xchg
aad
in
test
out
pcmpgtw
fsubs
inc
test
dec
push
js
stos
xor
add
push
ja
aaa
sub
sub
popf
mov
pop
lods
push
test
mov
and
push
test
mov
sahf
jle
mov
cmp
xchg
sbb
sti
mov
sub
jbe
cs
sub
sbbl
inc
inc
inc
in
dec
lcall
test
mov
add
pusha
xchg
fidivs
jb
add
push
loop
loop
popa
aam
jp
and
xor
mov
sbbb
xchg
outsb
add
sub
scas
cmc
inc
lcall
popa
cld
sti
sub
jmp
outsb
aad
rcl
ret
lds
mov
mov
rcrb
cmp
loop
pop
adc
adc
lret
enter
lret
dec
cltd
cs
shll
pop
in
mov
dec
cmp
mov
add
push
or
push
sub
adc
fldl
shrl
outsb
push
push
inc
loope
sub
jne
fldenv
mov
lret
adc
sub
icebp
jle
insb
and
clc
ds
xlat
outsl
fstp
mov
xchg
xlat
out
insb
push
inc
insb
nop
dec
mov
and
jmp
fcoml
arpl
outsb
cmc
adc
jmp
outsl
in
test
mov
test
fs
push
jl
pushf
test
test
mov
adc
out
outsl
sbb
cmp
mov
push
add
and
jg
sti
cli
xchg
icebp
sahf
data16
cmp
xchg
xchg
outsb
out
sbb
and
mov
xchg
test
call
jl
outsl
push
dec
xorb
stos
or
jnp
jno
sbb
xchg
ja
jnp
js
push
outsl
or
into
icebp
inc
push
mov
nop
sub
push
ljmp
shrb
sbb
mov
mov
push
push
loop
mov
lods
lock
or
iret
imul
mul
jns
jp
orl
add
fstps
adc
clc
in
sub
cltd
mov
int
xor
notb
cmp
movsb
mov
je
imull
mov
mov
xor
ja
sbb
push
xlat
cmp
pop
jg
jae
negl
add
mov
xchg
add
imul
or
int
daa
cli
call
leave
outsl
mov
add
shlb
int
dec
add
xchg
ljmp
push
jnp
pop
andl
outsb
out
sbb
and
mov
xchg
negb
test
lock
aaa
out
cld
cmpsl
ret
sub
mov
andb
pop
arpl
ljmp
inc
push
mov
cmpsl
enter
push
shrl
push
push
pop
lret
jno
cld
in
dec
fdivr
movsb
jecxz
lods
cmp
loopne
jle
roll
xor
and
dec
push
cmp
pop
inc
sbb
ficoms
jl
mov
test
icebp
jmp
cmpsl
jb
shl
into
cs
pop
lods
pusha
pop
fisubrs
xchg
pop
adc
aaa
ret
repz
outsb
loope
cs
jne
add
movsb
xchg
add
ret
push
push
lock
daa
lods
jno
xor
push
or
sarl
inc
sarb
data16
into
popa
gs
leave
mov
jnp
daa
test
aam
les
jmp
xlat
dec
mov
mov
add
out
shlb
jns
lock
pop
dec
mov
and
and
popf
sbb
rclb
adc
or
dec
mov
xchg
movsb
mov
gs
jnp
and
push
call
or
sti
test
icebp
mov
imul
or
popf
xchg
mov
pop
cmpsb
xchg
inc
scas
fucomip
fldpi
sbb
cmp
loope
ss
out
mov
add
js
dec
xchg
xchg
adc
in
test
aas
shrl
in
xor
scas
aad
pop
xor
jns
es
mov
pop
loopne
xchg
popa
cmp
pop
repnz
mov
ja
xchg
jns
adc
jecxz
sub
inc
ret
cmp
cmp
mov
and
repz
add
fldt
or
pushf
imul
jne
xchg
rcl
sbb
clc
jp
sub
push
sbb
dec
aaa
or
scas
and
sbb
cmpsb
push
push
scas
ret
ljmp
int3
call
lea
pushw
cmc
inc
test
scas
subl
std
and
mov
cmpsl
fldcw
dec
rorl
mov
xor
jl
xchg
dec
inc
lods
loop
and
frstor
push
out
sbb
je
into
daa
xor
dec
cmp
inc
sbb
aas
push
pop
insb
xchg
and
xchg
cwtl
pop
stos
inc
nop
sbb
call
push
lods
outsl
cmpsb
test
leave
sub
aam
arpl
adc
push
xor
add
repnz
je
std
jae
jns
addl
shll
pop
pop
add
lods
dec
pop
lret
mov
lret
sub
ja
fisubrl
mov
jns
lcall
pusha
mov
xchg
dec
add
fdivrs
dec
sbb
popa
mov
pop
mov
shl
hlt
aam
testl
push
sti
sub
rcl
sti
cmp
dec
xor
add
rcrl
mov
xchg
lods
jbe
out
pop
stos
in
outsl
shll
test
dec
push
shll
andb
lods
popa
lods
xchg
mov
jmp
loopne
es
sub
push
mov
mov
jne
mov
ljmp
insl
mov
or
sbb
xlat
rol
jb,pn
sub
rcll
shl
inc
mov
jb
jmp
push
inc
rcrl
jbe
nop
add
test
out
bound
out
push
stos
pop
inc
das
mov
leave
mov
stos
in
sub
insb
sub
push
loop
std
out
test
pop
stc
pop
lret
enter
fstpt
inc
outsl
push
arpl
add
pop
xchg
add
out
mov
ljmp
movsb
insl
adc
movsb
xchg
leave
jecxz
push
or
leave
int
sbb
cmovge
out
jp
dec
lods
stos
bound
and
add
push
or
movups
push
fisttps
lods
icebp
cs
das
andl
xchg
pop
movsl
lea
pop
scas
out
cmp
mov
loope
je
loopne
cmp
scas
movsl
js
icebp
js
stos
aad
and
mov
out
loop
stos
inc
cmp
leave
in
mov
stos
xchg
fmuls
lahf
lods
jno
test
outsl
jbe
xchg
nop
mov
mov
jo
jne
cmp
test
in
fcmovbe
test
scas
jge
lahf
out
dec
sbb
jge
adc
sar
pop
xor
mov
jl
sbb
xchg
imul
mov
jl
std
jl
push
mov
inc
fsts
out
add
test
pop
flds
xlat
lcall
ret
leave
xchg
pop
add
scas
inc
ljmp
lods
jno
inc
in
adc
push
cmp
cmpsl
out
or
je
jmp
notrack
cltd
dec
pop
xchg
mov
imul
xor
dec
jb
xchg
cmp
dec
or
pop
lea
pusha
push
push
xchg
rcrb
stc
dec
pop
movsb
stc
fsubrs
lret
cmp
testb
loope
lods
dec
aas
push
add
xor
xchg
idivl
out
or
jns
or
cltd
sub
adc
add
or
jb
lret
in
mov
mov
mov
sub
fiaddl
dec
mov
jns
popa
fistl
jge
cmp
fwait
xor
inc
mov
stos
shlb
push
cmpl
cmp
adc
mov
insb
insl
cmp
mov
lahf
aas
imul
push
inc
shrl
mov
cli
inc
or
mov
pop
ret
push
push
movsl
inc
dec
jae
aas
insb
aam
xchg
or
stos
and
mov
and
lcall
xchg
xor
sbb
mov
mov
out
imul
or
cwtl
in
mov
jne
sbb
int3
imul
and
outsl
cs
pusha
lds
push
pop
adc
in
test
and
adcb
or
add
sub
xlat
pop
dec
loopne
pusha
imul
andl
jbe
sbb
or
mov
cli
xchg
add
sbb
ret
into
xchg
hlt
push
icebp
cmp
aam
mov
or
scas
fidivrs
rolb
add
xchg
cmp
xor
mov
jnp
pop
mov
xor
inc
cmpsb
sti
lea
mov
mov
add
push
xchg
mov
in
movsl
in
popa
clc
xlat
mov
add
jle
cmp
ja
inc
xchg
xchg
inc
out
jno
lock
scas
cmpsb
mov
sub
mov
out
adc
inc
fxch
repz
mov
cmpl
adc
das
pushf
xor
or
jae
popa
mov
push
mov
or
adc
data16
test
imul
xor
or
push
aas
test
sub
mov
pop
jne
push
push
mov
gs
adc
mov
and
xlat
lock
lcall
das
and
jo
ret
repnz
sbb
jnp
xchg
in
in
adc
loop
test
xor
insl
cmc
xchg
ror
mov
gs
enter
dec
insl
test
imul
mov
pop
adc
and
jmp
adc
and
ljmp
lcall
inc
fstl
scas
lea
mov
scas
fsubrl
pop
testl
loopne
mov
hlt
dec
jg
jmp
gs
dec
in
xchg
icebp
mov
pop
icebp
sbb
and
loop
sbb
push
push
pop
dec
inc
jecxz
fsubrp
mov
mov
mov
adc
xlat
fsubl
nop
adc
add
mov
jcxz
scas
inc
jle
out
popf
sub
outsl
out
lods
aaa
outsb
jp
cli
rcrl
jne
sbb
fists
flds
nop
adcl
xchg
jnp
fbstp
mov
pop
jno
std
or
lds
call
mov
or
stos
jns
fbstp
shrl
dec
fucomi
ret
push
jb
push
or
out
and
fwait
lods
adc
ja
sbb
sbb
cld
dec
xlat
mov
xchg
mov
adcb
imul
jecxz
sub
pop
push
cwtl
subb
dec
and
shlb
inc
fdivr
lods
andl
idivl
push
jo
pop
lahf
inc
cmp
push
ds
or
adc
in
out
popa
sbbb
cs
loopne
loopne
cmp
aam
data16
or
pop
mov
sub
push
or
push
mov
bound
cmpsb
dec
and
cltd
mov
pop
xor
and
inc
outsl
inc
cld
jnp
pop
push
or
jne
xchg
cmpsl
pop
xchg
dec
jge
rol
cmp
fcompl
adc
push
mov
or
xlat
dec
or
or
aaa
into
cmp
lea
iret
push
insb
jg
insb
or
fldl
xchg
push
xor
push
bound
push
roll
or
fldt
inc
cltd
lods
mov
fidivrs
add
imul
push
sub
and
mov
out
iret
push
xchg
aas
pop
cltd
divl
fidivrs
adc
or
and
lea
mov
pop
xor
aad
adc
inc
or
jge
sbb
or
or
mov
jae
jmp
dec
data16
aam
cld
fcmovne
and
int
push
iret
std
xchg
or
rcrb
bound
aam
les
cmc
dec
out
add
sbbb
push
push
jecxz
or
cld
in
jg
aaa
mov
addr16
scas
inc
sbb
or
mov
ds
fistl
sarl
lret
ljmp
cmp
lea
sbbl
push
lods
mov
enter
rolb
aad
repz
int3
fnstcw
mov
repnz
iret
insl
sub
arpl
fdivp
mov
adc
mov
add
cmp
mov
xchg
hlt
fnstsw
sbb
mov
divl
imul
jg
sbb
jg
and
les
ret
mov
repz
dec
jle
scas
mov
icebp
les
mov
mov
int3
out
sarb
hlt
scas
pop
and
or
jge
rcrb
insb
iret
lods
and
pop
lret
jbe
lret
std
xchg
in
mov
cmp
mov
mov
dec
daa
mov
out
adc
sahf
ret
push
pop
add
mov
mov
popf
das
mov
inc
xchg
sbb
mov
add
xchg
and
outsl
leave
sub
xor
fwait
sub
fsubr
pop
mov
mov
sbb
xchg
cmp
out
fidivs
cmp
xlat
dec
loopne
mov
xchg
cmc
fs
xor
scas
inc
fldl
out
pop
lahf
push
pushf
xor
xchg
mov
aad
jae
jge
jbe
fs
mov
add
xlat
mov
loope
sbb
push
mov
nop
add
rcrb
mov
xchg
je
sbb
ret
sub
sbb
dec
mov
jle
mov
jle
cmpsb
sub
pop
add
leave
xor
out
mov
ljmp
adcl
ds
mov
adc
inc
pop
sbb
pop
xchg
sti
add
shrl
xor
pop
dec
fbstp
or
cmc
mov
ss
dec
mov
int3
cmp
push
out
outsl
dec
lret
cmp
scas
xchg
cli
mov
inc
imul
test
jb
ret
cwtl
insl
fisubl
insl
cmp
nop
lods
fsubs
push
dec
adc
inc
sarl
loope
jl
aas
iret
sub
rclb
das
bound
push
cltd
mov
push
aaa
mov
aas
idivl
int3
pop
lock
xor
push
mov
or
cmp
push
push
dec
jmp
icebp
movsl
cmpsb
or
mov
adc
inc
dec
pop
mov
in
orl
push
orb
lahf
rcrl
ret
adc
adc
push
push
or
and
jl
inc
iret
test
mov
inc
push
or
sub
popa
lods
adc
movsb
inc
testl
push
lcall
jb
addb
mov
test
mov
cmp
ljmp
addr16
sbb
cmp
cmp
call
push
lea
cmp
daa
dec
and
arpl
dec
sbb
inc
xor
xchg
pop
jecxz
movsl
into
jmp
add
xchg
dec
pop
call
dec
mov
addr16
adc
jg
iret
xor
lock
xor
or
mov
mov
cmp
lods
sub
jnp
rclb
lds
pop
imul
mov
jmp
pushf
repz
ds
icebp
outsl
lahf
or
pop
enter
fwait
pop
sub
sbb
bnd
lods
sbb
mov
and
stos
in
movl
shlb
in
mov
pop
xchg
xchg
cs
or
jg,pn
iret
and
mov
orl
mov
fdivrs
fwait
sub
inc
lret
xlat
in
mov
int
sbb
mov
adc
fisttpll
insl
out
push
jle
add
and
lea
mov
in
ljmp
mov
cmp
or
cmpsb
pushf
pop
sub
jne
add
incb
shlb
pop
jno
std
cmpsb
pop
das
adc
jecxz
pop
adc
or
cmp
imul
dec
sbb
and
mov
jmp
mov
push
stc
pop
mov
xchg
shl
mov
call
dec
sub
push
adc
dec
decb
mov
shll
dec
leave
jo
das
push
sub
jbe
or
scas
decb
adc
and
lcall
cmpsl
popw
fsubs
lds
push
jae
sbbl
inc
stc
mov
gs
mov
add
nop
mov
push
mov
jns
sub
ret
add
or
mov
push
jo
ja
lea
mov
pop
divl
fs
sbb
adc
insl
clc
pop
inc
dec
inc
sub
and
aaa
lcall
test
or
xchg
scas
jp
dec
mov
xor
mov
and
call
push
test
and
shlb
dec
jecxz
cmp
ss
aad
mov
jo
jbe
cmp
mov
cmp
xor
mov
xchg
cmp
dec
bound
sub
pop
mov
push
testl
jg
repz
hlt
mov
or
addr16
xchg
cmp
push
mov
loope
dec
testb
mov
dec
iret
stc
sub
sub
jae
add
or
das
adc
mov
notl
test
and
pop
push
inc
xchg
in
cld
iret
jno
std
mov
out
jbe
xchg
iret
bndldx
cmc
pop
pop
repz
pop
pop
pop
addr16
jbe,pt
cmpsl
xchg
pop
rorl
scas
fldcw
cmp
dec
sahf
lret
adc
jno
aaa
mov
cmpsl
iret
inc
cmp
in
stos
insl
mov
jl
mov
jns
sbb
xor
mov
add
xor
xchg
mov
sbbb
xchg
mov
jge
mov
jns
loope
imul
in
jmp
mov
js
xchg
adc
ret
stos
adc
cmp
imull
jecxz
and
sub
loope
fstl
mov
ja
and
mov
aas
fwait
xchg
scas
adc
sbb
les
out
andb
int
xor
xor
jo
cld
test
sahf
fstps
push
leave
test
mov
negb
xchg
push
mov
adc
add
xor
inc
lock
sbb
inc
mov
pop
rol
mov
dec
lods
mov
lods
shl
pop
das
sbb
sub
pop
adc
je
shl
imul
mov
xchg
fisubl
adc
mov
jl
mov
gs
and
xchg
pop
or
jb
je
pop
fists
jmp
stc
xor
popa
adcb
mov
sub
movsb
mov
pop
int
xchg
xor
pushf
mov
push
idiv
fs
cmp
inc
std
js
ja
std
and
and
dec
mov
inc
daa
cmp
adc
cltd
lcall
jno
fwait
mov
mov
lods
movb
aas
movb
xor
jo
push
rcrb
mov
js
iret
cmp
push
lds
in
push
or
ss
int3
fwait
xor
or
cmpsl
cmp
test
push
dec
push
fistps
test
in
add
aaa
push
dec
xor
add
scas
sbb
mov
aam
pop
mov
rorb
rcr
inc
or
pop
lock
mov
mov
ja
fwait
test
xchg
out
add
flds
add
and
mov
rorb
into
outsl
jb
mov
dec
adc
inc
fsubrl
arpl
jge
dec
movsb
cmp
inc
dec
mov
xlat
pop
adc
inc
push
jmp
cmp
sub
in
jno
xchg
jmp
dec
dec
and
idivb
mov
int
pop
test
push
rolb
jmp
jmp
xchg
xchg
fsubr
pushf
icebp
stos
in
cmp
lcall
add
mov
or
outsb
and
inc
repz
loopne
dec
adc
inc
xchg
sti
push
xchg
call
lahf
add
jno
or
jmp
lds
or
js
dec
imul
mov
mulb
push
ret
mov
push
out
adc
cld
mov
push
mov
or
jo
jmp
jae
mov
out
aas
mov
xlat
shl
loop
adc
lds
je
icebp
pop
adc
inc
leave
mov
hlt
cmp
shl
aaa
loop
aad
pop
adc
ljmp
ret
sub
and
loop
js
adc
xchg
xchg
mov
push
xor
xlat
sbb
mov
clc
add
dec
cmp
mov
mov
push
loop
arpl
jle
movsl
mov
cli
push
lcall
add
xchg
frstor
int
mov
pop
dec
ret
aaa
call
int
cld
ret
mov
push
cmp
clc
sbb
add
jbe
movsl
inc
xor
enter
cs
std
popa
push
mov
and
int3
fisttpl
aad
pop
and
xchg
pushf
and
pop
pusha
clc
dec
nop
push
mov
std
push
mov
mov
inc
mov
test
shrl
leave
clc
sahf
lret
data16
adc
push
mov
movsb
pop
xor
sub
in
mov
fstps
adc
adc
ret
mov
iret
fisttps
popf
test
in
push
sub
add
jno
test
sbb
addr16
sbb
cmc
lea
cmp
cli
jne
lea
mov
mov
xchg
leave
loope
sbb
or
lods
xlat
scas
jg
std
and
mov
lahf
or
xchg
addb
jns
xor
leave
push
fwait
addr16
hlt
gs
xor
cmc
nop
or
sbb
push
sub
movsl
jb
adc
jle
jp
ret
dec
or
xor
mov
insl
imulb
dec
loope
ja
jne
clc
mov
insb
sar
es
sub
sbb
inc
rcrl
std
and
pop
fisubl
mov
jne
jmp
add
rolb
inc
pusha
rcrl
mov
int3
cmc
roll
sub
icebp
scas
push
push
enter
push
subb
pop
xor
sbb
sub
test
dec
sub
dec
jno
pop
mov
add
inc
fildl
or
adc
scas
dec
divb
js
fisttps
cli
aam
movsl
add
mov
bound
adc
jnp
and
inc
inc
mov
jno
mov
xor
inc
ret
mov
fwait
pop
jbe
pop
insl
nop
into
icebp
or
mov
inc
loope
push
inc
and
repnz
mov
and
xor
mov
test
or
jmp
xchg
and
pop
movsb
notl
ljmp
xor
jp
adc
mov
test
hlt
sub
cld
cmc
add
xchg
push
enter
repz
mov
cwtl
in
outsl
or
fs
dec
test
adc
cmc
adc
mov
sub
mov
cmp
push
jl
shrl
cwtl
push
stos
add
rcrb
imul
ffreep
ret
lret
xlat
jecxz
add
jg
popf
add
scas
inc
int3
and
xor
test
jl
pop
enter
or
jo
adcb
mov
fdivs
pushf
sarl
xor
pop
adc
sbb
shl
jnp
aaa
ja
leave
sub
xor
cld
mov
rorl
xlat
jae,pn
dec
pop
inc
push
ret
sbb
sti
and
cmp
pop
rcrl
jle
push
sbb
mov
addr16
mov
mov
je
je
push
adc
xor
push
lcall
mov
test
punpckhdq
orb
ja
and
add
xor
je
dec
in
xorb
mov
js
shlb
inc
mov
dec
movsb
xchg
cmp
mov
jnp
jb
xor
das
jge
dec
js
popf
push
sbb
dec
mov
push
sahf
sbbl
movsl
jnp
daa
je
mov
pop
mov
inc
bswap
jmp
loope
je
jecxz
out
dec
dec
out
inc
push
cmc
xchg
jl
outsl
int3
fists
xchg
data16
mov
in
xor
daa
aaa
push
lods
pop
dec
fldt
pop
add
loopne
mull
loop
movsb
ret
frstor
mov
jge
or
dec
mov
fwait
aam
icebp
fcmovb
pop
rcrb
in
xchg
or
inc
inc
cs
push
int3
ficoms
cltd
xchg
pop
inc
sar
nop
in
and
imul
es
xor
inc
sub
pushf
test
je
push
mov
fldenv
outsb
es
xor
cmc
jl
inc
inc
les
push
in
hlt
xchg
mov
pop
xchg
repz
and
es
inc
nop
jo
add
jnp
or
dec
out
les
xchg
test
inc
cwtl
int3
std
inc
in
aaa
clc
inc
fiaddl
mov
lock
repnz
lret
push
movsl
sub
mov
push
aam
xchg
or
jl
cltd
jo
popf
in
clc
xchg
xadd
cs
ljmp
xor
sub
into
jb
jecxz
jnp
cltd
pop
lock
xor
push
cmp
push
inc
and
push
cmp
push
addb
xor
mov
mov
push
sub
scas
fldcw
gs
fs
adc
xchg
or
cld
and
filds
jmp
into
mov
push
xchg
js
mov
cwtl
scas
outsl
clc
mov
jno
sbb
int
push
lret
ret
mov
fs
fs
xchg
sbb
fcomps
mov
adc
in
or
in
das
test
fidivs
cmpsl
lds
stos
leave
rcl
repnz
pop
dec
lds
jae
lret
popf
push
lds
sub
inc
pop
xchg
neg
andb
insl
lret
pop
jmp
sbbb
cmp
mov
popf
popa
mov
fnstsw
mulb
mov
xchg
and
mov
mov
cmp
push
jb
outsl
xor
sbb
scas
out
inc
ljmp
repnz
adc
sbb
mov
push
xor
in
js
cmp
push
mov
dec
hlt
inc
dec
add
ja
orl
arpl
inc
jb
pop
in
ja
dec
push
adc
jmp
scas
add
pop
sub
xchg
xchg
pop
xor
mov
xor
hlt
or
dec
aaa
lea
and
imul
je
push
pop
jbe
push
test
outsl
lcall
adc
mov
mov
jno
add
popf
pop
loope
xchg
mov
gs
stos
push
loope
insl
xor
jmp
lcall
xchg
push
lods
inc
int3
jmp
in
lret
leave
xchg
xor
pop
fdivr
or
adc
mov
std
cltd
inc
and
lea
in
cltd
adc
ljmp
push
jne
mov
sub
mov
cwtl
das
mov
mov
stos
imul
iret
mov
sub
fbstp
rclb
sub
sar
or
or
fldenv
fimull
rcr
test
jno
shlb
jae
inc
jne
repnz
sarl
sbb
xchg
ret
jmp
sub
jmp
sbb
sbb
in
push
inc
fsubrs
loop
int
xor
inc
icebp
inc
fcoml
mov
and
faddl
mov
mov
add
aam
cmp
mov
enter
cmp
adc
xchg
icebp
pop
ljmp
push
insl
pop
in
inc
inc
push
pop
out
pushf
int3
push
jne
add
inc
add
andb
lock
pop
test
mov
stos
ret
mov
mov
mov
out
insb
jmp
xchg
iret
jne
xor
testb
jne
lcall
xchg
mov
mov
ret
xchg
adc
add
call
icebp
bswap
cwtl
fsubs
sar
mov
icebp
pop
pop
cmpsb
xor
jns
pushf
mov
int3
lods
sbb
lahf
imul
fldcw
dec
xchg
sbb
dec
cmp
or
outsb
cmp
push
jb
nop
fs
aad
mov
or
std
jno
or
push
in
icebp
sbb
repnz
xor
cmp
jb
imul
push
insl
scas
les
mov
add
fwait
mov
nop
or
sbb
mov
cli
mov
roll
xor
jmp
add
jbe
pop
jbe
push
sub
in
hlt
jnp
inc
pop
enter
iret
dec
pop
add
cmp
faddl
xchg
jle
mov
mov
push
test
push
cmp
xor
pop
repz
inc
sub
dec
jg
mov
ds
xchg
repnz
leave
mov
adc
cmpsb
into
movsl
adc
in
jle
shrb
mov
push
in
sahf
cmp
cltd
sti
adcb
mulb
adc
inc
cmp
push
insb
sbb
aas
push
jns
outsl
sub
sbb
sysenter
and
daa
jbe
add
xchg
inc
test
pop
mov
imul
into
and
jo
out
inc
int3
or
push
daa
fdivrl
jns
and
jmp
xchg
xorb
ficomps
out
cmpsl
ret
pop
push
adc
cmp
jno
push
stos
es
lods
andl
xchg
push
add
jmp
test
pop
sti
sbb
mov
add
jle
push
pop
fcmove
test
mov
push
mov
mov
add
in
cmp
out
push
stos
repz
lahf
iret
data16
aaa
fstpl
add
xor
in
lds
cmpsb
fs
aad
cmpsl
dec
mov
outsl
dec
test
xchg
rorb
icebp
sti
es
push
idivb
add
push
sbb
xor
std
cmp
push
lret
insl
pop
lahf
fidivs
mov
dec
lds
inc
fdiv
inc
jmp
xor
std
gs
push
ds
mov
sbb
mov
pop
scas
out
xchg
mov
mov
xor
dec
cli
xorb
shlb
dec
add
lods
add
sub
or
cmpsl
into
test
cmp
or
xchg
and
and
sub
icebp
or
or
push
xor
outsb
test
mov
loope
jno
aam
mov
fs
xchg
out
ljmp
push
insl
and
xor
insb
inc
inc
clc
cmp
mov
ret
arpl
inc
jnp
xor
mov
stos
xor
jnp
mov
jbe
loop
daa
xchg
aaa
add
mov
jo
mov
dec
movsl
andb
pop
dec
dec
mov
push
cmp
xchg
stos
dec
or
insb
mov
cltd
int
or
cli
dec
in
movsl
xor
pop
xor
push
sub
and
xchg
rorl
fnstsw
or
insl
jl
adc
cmp
rorl
call
ret
pop
pushf
lea
mov
xor
cs
insb
lret
inc
or
das
dec
test
int3
and
mov
or
outsb
xlat
insl
pop
xchg
mov
stos
aaa
js
xor
mov
repz
les
out
cmp
movsl
loop
sti
sub
lret
rol
sub
mov
dec
cmp
lcall
jns
pop
int
cs
icebp
cltd
cwtl
xlat
or
jle
lock
test
push
ds
in
push
mov
stc
xchg
jno
ret
test
mov
inc
inc
ficoms
xchg
push
or
cmc
xlat
mov
sbb
lret
pop
ja
xchg
pop
es
fistps
cli
nop
stos
sub
shrb
dec
cmc
nop
mov
shrl
dec
in
sar
jno
pushf
pop
push
or
adc
lods
adc
dec
pop
jmp
or
push
test
cld
pop
push
xchg
cmpsl
xchg
jo
out
lods
ljmp
sub
pop
add
cmc
xchg
cmp
xchg
add
xchg
jle
xor
cld
inc
xor
xchg
stos
and
dec
in
dec
imulb
mov
and
inc
movsl
clc
nop
jg
mov
loopne
push
out
jg
testl
mov
shll
lds
sbb
cmp
adc
cmp
add
mov
mov
mov
cli
shr
imul
push
ds
mov
and
jg
lea
and
movsb
stos
or
dec
pusha
mov
ds
or
es
jno
inc
popa
js
test
push
cltd
hlt
jp
sbb
daa
cltd
jbe
dec
ret
xchg
mov
stc
shr
ficompl
mov
xor
test
pop
mov
add
aad
rcl
pop
push
pop
fcmovb
les
sbb
inc
hlt
inc
jno
mov
sbb
les
mov
push
in
pop
jb
inc
cli
iret
sbb
mov
gs
and
add
test
jge
mov
mov
stos
popf
lods
lock
cli
nop
arpl
jmp
push
mov
scas
loope
dec
cltd
sub
cli
jae
mov
rcrl
pushf
sub
mov
push
push
lods
cwtl
mov
mov
cwtl
sub
call
inc
mov
das
pop
jbe
ret
xor
fwait
arpl
push
fsubr
lret
aaa
adc
dec
fwait
pop
fcomps
mov
pop
clc
mov
daa
cmp
fidivrs
xor
and
sbb
aad
data16
jns
cmc
aad
or
mov
mov
sbb
lret
and
dec
mov
pop
in
jb
jno
adc
add
sar
xor
mov
mov
inc
sub
inc
add
cmp
daa
add
pop
lcall
cmp
sub
mov
shl
repz
rcl
pop
stc
ret
lods
shll
mov
mov
lret
or
push
addr16
rclb
test
or
mov
or
stos
mov
into
gs
call
xchg
int3
clc
std
jo
imulb
iret
mov
dec
jno
or
repz
mov
lea
xlat
shrl
ds
mov
sahf
out
sahf
mov
test
sbb
lods
jp
cmp
fimuls
adc
mov
xchg
push
mov
iret
jo
jle
mov
inc
or
sti
mov
sbb
insl
ret
dec
xorb
nop
shrl
mov
push
or
and
xchg
push
xorl
xor
cld
loope
xchg
inc
fcoms
or
shrb
jmp
dec
jno
jb
pop
es
or
mov
jl
mov
arpl
fidivrl
mov
mov
into
sub
ja
sub
movsb
repnz
xchg
pop
outsb
cmp
pop
mov
xchg
in
xchg
ljmp
or
call
rcrb
sti
inc
sub
fs
aad
test
hlt
xor
outsb
icebp
cmp
xchg
pop
cmp
lahf
fwait
jne
dec
addb
out
shlb
pop
mov
out
xchg
xor
pop
cmpps
sbb
in
mov
pop
jmp
scas
inc
test
xchg
gs
icebp
push
cmp
scas
cli
sub
pop
jno
add
add
push
ds
jb
push
pop
out
or
push
cld
push
testl
std
pushf
pusha
add
pop
popf
xor
mov
xchg
call
ss
fbstp
sti
out
fidivl
mov
jne
push
hlt
mov
jp
fs
ds
repz
jl
loope
dec
cmp
inc
dec
cmp
out
stos
xchg
sub
mulb
lods
sbb
cwtl
jge
call
sub
adc
adc
scas
add
in
outsb
inc
fld
nop
popa
clc
sub
xor
mov
pop
sbb
push
lea
in
add
lret
in
xchg
ljmp
ss
idivb
loope
lock
cld
and
aas
rclb
fs
in
xchg
adc
mov
mov
test
cmp
dec
data16
jnp
inc
inc
jg
sub
push
scas
push
sub
push
jbe
gs
inc
xlat
pop
inc
hlt
fcmovbe
jmp
fldl2t
mov
push
mov
imul
jl
out
les
in
es
sub
insl
mov
in
pop
xchg
outsl
sbb
ljmp
dec
mov
imul
pop
aad
movsb
push
sbb
les
in
dec
loope
lcall
cwtl
das
sti
sbb
les
jecxz
dec
add
stos
push
test
cltd
xor
mov
sub
stc
fimull
mov
xor
jmp
incb
xchg
jne
inc
test
ja
aad
data16
jmp
cmp
mov
add
stc
cwtl
loopne
bnd
xor
jae
sti
popf
mov
xchg
dec
roll
pop
sbb
dec
insl
mov
test
test
xchg
hlt
xlat
adc
or
fisubs
jl
xor
and
ret
mov
in
or
inc
pop
stos
out
lods
stc
inc
or
add
clc
fwait
in
mov
enter
gs
mov
inc
loope
mov
sub
stos
xchg
sbb
je
in
daa
out
sub
add
jl
mov
mov
or
shrb
fimuls
ret
outsl
sub
fnstsw
das
scas
pop
jno
mov
jns
or
adc
jae
cs
fdivp
ss
paddsb
mov
jge
ja
and
shll
jae
cmp
xchg
dec
mov
add
cwtl
outsl
ljmp
cmp
int3
xor
ljmp
out
pop
xor
scas
icebp
clc
jb
lods
sub
stos
dec
loopne
out
fdivrl
mov
pop
stos
cmpsl
ljmp
in
dec
sar
aad
or
sahf
jge
mov
mov
cmpsl
pop
mov
push
pop
in
aam
inc
jb
insb
fs
dec
cmp
jo
adc
test
mov
jl
repnz
loopne
mov
xchg
mov
xor
mov
insb
out
out
add
fisubrs
out
pop
dec
rorl
add
xchg
push
scas
lods
mov
push
sar
fdivrs
adc
sbb
mov
orl
xor
jmp
cmp
inc
xor
sbb
jae
je
xchg
test
sub
loop
mov
lret
cmp
es
jg
insl
out
xchg
mov
mov
inc
std
jmp
push
shll
pop
push
xor
out
jle
sti
in
inc
and
jbe
dec
sahf
xor
xchg
push
ds
jns
in
push
push
dec
jns
incl
push
mul
and
push
xlat
sub
or
sub
pop
push
pop
or
sbb
jbe
inc
out
mov
mov
out
outsb
scas
push
pop
idiv
cmp
xor
push
or
cmp
lahf
xor
push
loop
push
pop
loop
push
add
mov
rcrl
mov
inc
add
or
in
cmc
ficompl
push
roll
xchg
inc
lock
or
out
mov
jmp
movsb
outsl
test
les
test
outsb
std
xchg
xchg
lds
jge
ret
stos
icebp
cmp
and
dec
fsubp
std
or
in
and
push
mov
out
out
cmp
add
dec
insl
stc
test
xchg
ds
stc
repnz
cmp
arpl
inc
jb
scas
xchg
and
cmp
ja
imul
aaa
cmpsl
int3
pop
mov
loopne
adcb
aad
jno
call
movsb
insb
js
inc
inc
push
inc
dec
lds
jl
push
ljmp
cld
add
subl
lret
pop
xchg
adc
loope
repz
jnp
jae
inc
pusha
push
xchg
cmp
inc
and
push
inc
sbb
or
add
rolb
cmpsb
and
rorl
push
adc
je
push
pop
dec
lods
scas
xchg
loope
lock
ds
xor
notb
lret
mov
test
arpl
shl
das
mov
pop
int
jge
movsl
push
out
add
add
ljmp
cmp
repnz
mov
ja
pop
fidivl
idiv
fwait
bnd
seto
mov
push
outsb
jle
stos
jo
and
inc
mov
inc
jp
adc
mov
mov
int3
fsubr
clc
sbb
enter
jle
jl
or
out
iret
sbbw
movsb
adc
add
jmp
dec
aam
cmp
push
ljmp
cmp
bound
aas
jp
cli
and
in
mov
jns
cmpsb
xchg
lcall
loope
sub
xorb
mov
xchg
cmpsb
dec
loopne
idivl
sub
je
xlat
pop
aam
js
lcall
scas
jbe
in
scas
mov
sbbb
fidivrl
pop
and
mov
mov
fsub
inc
fdivrs
fistpl
mov
xchg
and
out
pop
dec
xorb
mov
pop
out
pop
mov
pop
js
arpl
pop
bound
stc
adc
loopne
test
nop
push
popa
sti
mov
out
sub
dec
jbe
dec
push
daa
jae
mov
add
lret
pop
sub
sbb
jecxz
push
pop
pop
stos
pop
out
xor
jbe
leave
pop
xor
das
dec
pop
out
or
loopne
sbb
mov
jo
add
addr16
mov
cli
callw
aaa
adc
xchg
in
adc
mov
sbb
stos
jp
xor
sti
mov
cmp
pop
popf
subl
add
mov
pop
dec
mov
outsb
sbb
push
xorl
xchg
or
loope
adc
fldl2t
push
cmp
aaa
sub
pop
lods
push
inc
fiaddl
push
loope
movsb
dec
movsb
jecxz
or
out
xchg
cs
int3
pushl
jle
ja
lock
in
mov
push
gs
jg
xor
repnz
cmp
movsb
sub
mov
push
mov
lods
lock
jge
mov
outsl
mov
cwtl
lods
pop
iret
stos
in
arpl
test
lds
fwait
lods
cmp
popa
cmpl
jge
ljmp
lods
lea
mov
lods
xor
cs
adc
into
add
jb
in
and
popa
pop
push
es
hlt
aam
sbb
mov
dec
in
jl
scas
clc
sbbl
das
xchg
push
daa
into
addr16
fidivrl
mov
shlb
jg
jae
scas
sub
pop
xchg
les
cmpsb
mov
in
es
adc
gs
dec
xchg
pop
jbe
int
mov
stos
jbe
mov
sti
popf
hlt
dec
stos
add
sub
xchg
outsl
pop
push
or
icebp
data16
xchg
add
xor
fwait
or
hlt
mov
inc
jp
data16
pop
adc
mov
dec
push
imul
movsb
pop
jmp
das
mov
mov
jbe
jg
sbb
ss
loop
scas
push
add
into
ss
cmp
inc
loope
cmp
imul
or
ss
jo
aas
test
fs
sbb
lea
mov
xlat
insb
adc
sti
cltd
or
in
test
out
arpl
xor
sbb
outsl
leave
fwait
cmpsl
in
push
fld
xchg
or
jmp
jge
jb
sub
test
mov
push
mov
ficomps
sbb
dec
jns
mov
insl
adc
push
mov
mov
ret
fld
je
testb
adc
lods
pop
scas
fidivs
push
imul
dec
jno
sub
loopne
dec
jecxz
adc
data16
push
add
imul
fs
jnp
add
in
pop
jae
bswap
imul
inc
cmp
iret
inc
sub
fdivs
mov
xor
mov
and
fldcw
in
in
push
bnd
out
mov
aas
xor
adcb
push
jno
dec
sbb
dec
mov
cltd
inc
inc
data16
and
push
xor
push
push
rcrl
and
mov
push
jbe
jb
sub
mov
jno
xlat
bound
lret
fsubrp
sbbl
or
mov
test
mov
jecxz
xor
dec
fdivl
push
add
sub
xor
inc
fbld
lds
movsl
cld
mov
sub
mov
mov
loop
scas
and
push
add
add
lret
ds
imul
stos
inc
sbb
mov
not
xor
sahf
cmpsb
cmp
inc
inc
cmp
cli
lahf
js
lds
mov
and
mov
in
scas
lret
xchg
in
mov
lret
jae
cmpl
outsb
add
stos
fcoms
dec
pop
pop
int3
sbb
push
inc
popf
in
cmp
mov
fisttpl
nop
push
cmpsb
push
sbb
das
mov
mov
xchg
bound
cmp
dec
cmp
andl
cld
mov
movb
stc
jecxz
cmpsl
in
test
xor
clc
nop
stos
add
scas
repnz
pop
scas
subb
dec
and
popa
push
mov
mov
mov
mov
jmp
sbb
xor
jl
sub
cs
cmp
pusha
daa
xchg
xor
call
xor
shll
adc
stos
int3
aam
std
mov
rep
or
lret
pop
aad
aad
data16
int
push
fs
inc
fidivl
sbb
sub
mov
das
mov
dec
mov
aam
sbb
mov
movsl
xchg
movsb
shrb
popf
cmpsb
sbb
lock
int
cmp
push
or
inc
mov
dec
inc
fs
inc
fsubr
shrb
xor
cmpsb
inc
and
jno
addr16
shrb
sbb
cmp
popa
fwait
sbb
mov
icebp
mov
and
les
rclb
aaa
mov
sbb
jge
aam
cld
ret
pop
test
dec
lcall
pop
push
pop
bound
and
mov
xor
adc
ret
inc
inc
divb
sbbl
leave
aaa
ds
and
cwtl
das
adc
notl
in
sbb
mov
outsl
inc
mov
test
push
int
xor
sahf
out
push
sub
add
mov
mov
push
xchg
out
push
call
ja
shlb
leave
loop
test
aas
xor
in
orl
adc
mov
mov
pop
push
out
inc
cld
dec
cmp
push
xchg
fldl
sbb
es
les
cmpsb
dec
mov
pop
xchg
adc
pushf
ret
arpl
outsb
mov
jecxz
pop
mov
insl
sub
pop
jg
mov
add
push
xor
pop
fsub
mov
dec
js
mov
ss
out
sbb
popa
adcl
mov
cmpsb
xchg
sub
or
inc
popa
jmp
push
out
mov
mov
add
je
push
aas
inc
outsb
sahf
stos
mov
in
mov
dec
enter
sub
add
clc
mov
ds
dec
fdivs
xlat
fidivrs
xchg
lahf
nop
ljmp
xchg
icebp
jp
scas
cmp
divl
sub
push
sub
pop
std
sub
pinsrw
xor
inc
shlb
stc
mov
std
and
mov
int
pop
stos
sub
jecxz
je
inc
xchg
popf
arpl
cmc
cmp
and
lcall
cmpl
in
adc
data16
cmp
jmp
inc
inc
add
mov
loopne
testb
nop
sbb
inc
in
or
jmp
mov
mov
pushf
push
cmpsl
inc
fidivl
jnp
rcrl
pop
push
adc
mov
ss
pop
xchg
int3
aam
and
popf
sbb
inc
outsb
mov
stos
subl
test
push
and
dec
popf
xor
or
mov
loopne
jae
xor
es
into
sbb
and
roll
rdtsc
adc
repnz
dec
mov
jo
jns
test
mov
jmp
mov
pop
jmp
mov
mov
mov
pop
addr16
add
fcoms
in
mov
inc
fsub
mov
sub
mov
outsb
cld
iret
mov
mov
addr16
push
cltd
inc
pop
das
cmpsl
mov
mov
loop
int3
ljmp
insb
sti
loop
sahf
pop
mov
xor
jnp
data16
add
inc
xor
ja
insl
mov
mov
nop
mov
imul
movsb
push
les
int
pop
sbb
and
test
inc
add
add
push
repz
mov
mov
mov
mov
or
jle
sub
add
xor
outsl
sbb
js
xor
fwait
out
xor
push
test
andl
pop
cs
push
xor
fs
pop
inc
and
sub
xchg
add
stc
or
mov
out
mov
jno
insb
mov
lahf
or
orl
add
in
inc
xchg
sub
pusha
or
mov
pusha
sub
shrl
inc
or
dec
xchg
sbb
dec
adcl
push
dec
xor
inc
ret
add
lcall
andb
mov
pop
fildll
pop
clc
sbb
loopne
jne
stc
lcall
sub
adc
jl
pop
jns
lcall
mov
mov
aas
pushl
outsl
and
repnz
cwtl
xchg
dec
push
pop
enter
loope
out
testb
subl
int3
lea
jne
pushf
rclb
fsubl
add
lods
int
push
cld
mov
add
sbb
inc
adc
push
test
cmpsl
pop
xor
gs
movsw
mov
in
imul
out
js
jno
mov
aam
into
outsb
jp
cltd
fmul
inc
inc
ret
adc
insb
adc
add
sbb
lods
daa
add
mov
lret
filds
xchg
xor
dec
mov
cli
inc
xor
inc
in
inc
test
push
mov
xor
xchg
in
xchg
gs
cmp
jle
sti
push
push
out
insb
push
mov
sar
push
scas
ljmp
pop
mov
push
flds
in
xor
fcomip
xchg
js
repz
mov
arpl
xor
mov
pop
fcomip
imul
cmpsb
push
in
pop
mov
xor
mov
idiv
or
mov
push
je
mov
cmp
push
jmp
mov
shlb
int
jae
adc
push
inc
cmp
sbb
xor
mov
fstpt
xor
popf
xor
enter
sbbb
and
ds
movsb
dec
xor
jmp
into
cmp
mov
jl
shl
dec
and
imul
sub
int3
xchg
sub
sahf
cltd
test
push
loope
into
lret
and
mov
or
fwait
stos
or
repnz
mov
aam
lcall
popf
xchg
movsl
xchg
sti
in
jb
pop
push
xor
sbb
xor
sahf
popw
shlb
mov
mov
jge
xor
push
fstpl
mov
popf
cs
add
cmp
bound
bound
mov
mov
push
dec
sub
into
int
push
jg
inc
int3
cmpsb
lods
sbb
pop
leave
lret
js
cmp
or
ret
hlt
inc
sti
sbb
pop
jecxz
jne
mov
xchg
addb
push
cld
les
ss
fadds
aam
lret
mov
iret
push
inc
lock
les
mov
stos
mov
push
and
dec
fimull
loop
sub
gs
lahf
add
pop
xchg
jmp
xor
cmp
jae
leave
test
push
pop
scas
mov
fidivs
insb
js
add
push
cld
jns
adc
xchg
adc
add
and
lock
mov
fld1
aaa
pop
pop
cmp
dec
insl
sub
mov
dec
iret
leave
mov
inc
dec
jmp
add
push
adc
xchg
inc
jno
push
add
es
xor
dec
in
test
adc
xor
pop
adc
repz
mov
mov
ds
pop
lods
push
fcoml
mov
in
push
pushf
xor
cmp
jecxz
cmc
add
mov
mov
pop
mov
negb
lret
in
jnp
xchg
das
loope
adc
fstpt
pusha
fbstp
xchg
mov
mov
mov
jle
js
inc
jmp
push
sbb
les
jo
push
and
mov
lahf
rcrb
mov
adc
repz
inc
ret
cmp
jmp
aam
leave
aad
jb
js
add
mov
shll
icebp
rcrl
jl
sbb
mov
popa
sub
sbb
push
lods
sub
push
xor
cwtl
cmp
ret
ss
xor
in
sub
adc
ss
arpl
sub
jp
cmpsl
cmpsb
mov
mov
or
negl
fnstsw
cmpsl
lret
jl
add
insl
and
jns
out
cmpsl
adc
xor
dec
mov
inc
fnstcw
sbb
cltd
xor
popf
push
ficoml
dec
xchg
cmp
sub
mov
mov
mov
lret
adc
std
inc
fs
aam
cs
cmc
leave
test
int
arpl
mov
jb
mov
mov
lret
jmp
add
loopne
push
sbb
mov
inc
xor
push
popa
gs
mov
mov
das
and
xor
xor
adc
sbb
sbb
sbb
xor
pop
rol
xlat
sub
sarb
pushf
or
cmpsl
adc
mov
stos
sub
sbb
ja
push
test
test
mov
jbe
lret
xor
cs
jbe
clc
push
pop
xor
or
jp
or
dec
xor
adc
mov
lahf
mov
cltd
das
jo
jnp
scas
push
call
cmp
xor
pop
ret
pop
and
xchg
hlt
xchg
inc
fnsave
mov
mov
pop
mov
and
inc
pop
mov
push
adc
fcmove
mov
fisttpll
pop
sbb
ljmp
xchg
cmc
mov
cmpsl
clc
jl
sub
enter
push
add
cmp
jo
add
jmp
mov
movsb
fisttps
clc
or
fs
and
scas
fstpt
pusha
scas
jmp
mov
mov
jmp
cmp
or
inc
outsb
sub
gs
sahf
pop
ret
pop
cmp
cmp
movsb
mov
loopne
push
stc
cmpsb
mov
sub
sti
push
push
or
outsb
mov
pop
dec
mov
or
xchg
shrb
adc
cmp
xor
inc
xchg
ret
fisubl
adc
daa
fwait
imul
pop
jl
loopne
les
jge
xchg
test
or
xchg
fstl
stos
iret
and
lea
ret
test
lock
fldenv
or
stos
and
insl
and
pmulhw
movsl
jmp
or
dec
cmp
mov
xchg
repz
xor
dec
push
fistpl
stc
je
mov
add
jmp
mov
mov
lds
lds
mov
inc
sub
inc
test
pushf
popf
and
xor
in
push
mov
xchg
ss
xchg
test
mov
out
xchg
icebp
inc
popa
cs
inc
js
std
inc
push
inc
push
lahf
add
inc
and
push
or
pusha
fisttps
mov
adcl
loope
imul
mov
sub
fdivrs
out
in
aad
stc
mov
push
loopne
mov
mov
push
or
adc
iret
sbb
scas
out
sub
cwtl
dec
fs
in
and
push
pop
jo
pop
jo
clc
xchg
dec
test
je
jg
pop
push
ds
cli
rorl
mov
stc
nop
mov
sub
lret
fldenv
lret
lods
jbe
cld
or
mov
iret
jg
mov
ja
pop
scas
divb
sarb
pop
out
lahf
gs
jb
jmp
push
movsb
or
or
inc
int
addr16
and
cld
fimuls
xchg
cltd
mov
cmc
pop
xor
cmp
jne
fldpi
fdiv
xlat
xor
mov
insb
xor
mov
shll
push
aad
inc
cmp
sti
popf
popa
xor
aaa
xchg
sub
imul
xchg
add
fucomi
xor
mov
faddp
cmpsl
lock
jle
jb
xchg
sbb
mov
int
cli
loop
mov
iret
xlat
mov
das
lcall
mov
pop
lahf
cmp
cmp
cmp
in
ja
jae
outsb
cmc
aas
mov
aas
sbb
mov
push
pusha
mov
sub
cs
push
aaa
loopne
mov
pop
cwtl
inc
jmp
mov
fisubs
and
inc
or
xchg
ret
xor
lock
cli
jne
fwait
mov
pop
jmp
movsl
xor
push
repnz
xchg
xor
insb
sbb
data16
adc
std
stos
fnsave
push
or
mov
push
mov
cmp
ja
call
mov
cmc
out
jo
jmp
adc
mov
fsts
scas
insb
mov
dec
popa
or
inc
sbb
mov
mov
int
or
dec
sub
aaa
popa
sbbb
push
push
inc
gs
or
aaa
jb
inc
mov
movsl
or
adc
arpl
pop
cmp
or
mov
fisubrs
and
stos
in
ds
sub
mov
push
aam
dec
jle
insl
loopne
sbb
or
ret
pusha
outsl
lds
push
ja
pushf
scas
movsb
and
jno
mov
scas
call
jle
ljmp
and
arpl
xchg
mov
push
and
dec
jnp
xchg
inc
movsl
cmp
fcompl
loope
inc
fdivs
mov
stos
in
cmpsb
xor
jae
lods
outsb
jle
sub
lret
orl
jg
mov
add
fwait
daa
gs
jbe
dec
adc
inc
add
in
sbbb
push
in
lahf
sbb
cwtl
push
or
dec
cmp
jnp
and
or
jne
clc
aas
movsl
mov
ret
roll
add
cmp
rcrb
sahf
fucomp
ja
xchg
adc
or
mov
test
lcall
sbb
imul
test
lret
dec
and
and
cmc
rclb
call
loopne
sti
fdiv
cmp
mov
stos
pop
rcl
ror
jg
sti
xor
js
sbb
mov
sarb
mov
jae
sub
insl
aam
xchg
testb
sbbl
or
dec
inc
mov
jo
out
push
push
in
jmp
pusha
ljmp
fimuls
lods
testl
jmp
imul
dec
pop
mov
sbb
xor
sahf
push
pop
xchg
nop
cwtl
pop
popa
xor
sbb
cmpsl
mov
or
mov
ss
subl
stc
insb
cmpsl
xchg
outsb
sub
jns
sbb
mov
dec
or
rcr
fistpl
add
movsb
les
fmull
enter
shlb
imul
das
je
mov
inc
and
fistl
or
jb
mov
fistpll
lods
xchg
fldenv
repnz
rcrl
xchg
pop
cld
and
mov
ja
dec
sub
fsubp
ja
and
push
repnz
mov
xchg
gs
xchg
stos
mov
adc
lds
mov
or
push
sub
xor
ljmp
push
xor
or
jb
jmp
mulb
ljmp
data16
mov
mov
cmpsb
mov
clc
pop
rcrb
dec
lahf
cmp
imul
cs
repz
in
sub
push
sbb
jno
addl
fdivrp
lods
jns
jmp
adc
pop
int3
mov
into
mov
xor
jno
call
stc
jo
scas
test
sub
inc
loope
ret
rcll
cmp
ds
testl
sbb
mov
dec
inc
pushf
popa
inc
cmp
dec
out
shll
pop
adc
push
sti
scas
inc
jb
jmp
xlat
repz
rcl
adc
and
negl
pushf
pop
scas
ret
mov
mov
jns
popf
pop
xchg
lret
mov
push
ljmp
pusha
sub
pop
daa
inc
pusha
pop
cmp
sub
aaa
ficompl
mov
notl
mov
dec
fimuls
jo
add
rorl
test
test
jae
xchg
mov
pop
mov
cmpsb
xor
mov
dec
mov
adc
adc
test
xor
mov
out
mov
out
mov
fucom
and
mov
ret
imul
push
inc
out
push
xor
lock
pop
in
orl
add
stos
dec
jp
push
or
and
js
dec
lahf
loop
push
adc
out
inc
mov
inc
jnp
and
movsb
mov
lcall
and
loopne
lret
bnd
pop
xor
aam
nop
pop
fwait
xor
pusha
mov
pusha
xor
in
bound
pushf
std
scas
dec
pop
cmovo
and
cmp
jae
nop
mov
mov
and
lods
imul
mov
mov
jo
jg
inc
add
push
adcl
push
inc
cli
dec
mov
insl
pushf
aam
js
call
loopne
js
pop
pop
loope
and
adc
popa
sbb
cmpsl
and
jbe
clc
sahf
std
cmp
sar
jge
mov
les
jbe
mov
adcb
adc
enter
lret
xchg
sub
cmp
or
cltd
inc
and
std
jo
cmc
dec
imul
lcall
cvtpi2ps
mov
xor
pushf
pop
cmp
into
test
gs
and
mov
mov
ret
rcr
cmp
iret
jb
nop
jmp
xchg
adc
leave
mov
sbb
shrl
jge
xchg
cli
jmp
adc
jl
mov
jle
xchg
icebp
push
sbb
or
add
xor
in
cs
icebp
mov
test
xchg
andb
outsb
xchg
daa
cmp
into
or
add
lea
mov
insb
add
or
cmp
lds
inc
mov
repz
cmp
pop
je
mov
std
push
fstl
ds
jb
adc
fnsave
loopne
push
cmpsl
test
jno
out
data16
cmp
into
jg
mov
lret
test
pop
dec
dec
ret
aam
mul
cli
repnz
pop
incl
test
jne
cmp
inc
call
mov
jo
xor
lcall
shlb
mov
sbbl
iret
jb
fwait
sarb
mov
mov
cmp
call
and
mov
arpl
pop
inc
gs
mov
push
in
adc
pop
into
fdivrs
int3
test
adc
push
cmpsl
loopne
inc
inc
filds
cmp
inc
sbb
adc
mov
roll
jns
pop
repz
shlb
add
movsl
push
xlat
xchg
iret
adc
std
inc
sbbl
sbb
data16
inc
iret
and
lods
test
shl
mov
fstl
pop
je
cmp
mov
idivb
add
sbb
add
fldl
lods
or
mov
fidivrl
mov
mov
popf
outsb
inc
pop
push
out
notb
mov
dec
mov
iret
ret
sbb
jl
loopne
xchg
mov
int3
sbb
xor
dec
cld
movsb
adc
pop
inc
add
inc
ficompl
mov
bound
sbb
rcrl
rcrl
cld
xchg
sub
mov
mov
xor
jno
mov
mov
sti
xchg
dec
out
pop
mov
push
xchg
flds
push
addr16
lea
dec
pop
and
sahf
push
pop
mov
mov
shl
jb
loope
sbb
fnsave
mov
sub
in
shrl
mov
jle
iret
test
pushf
xor
test
mov
mov
stos
rcl
adc
push
sub
or
ret
jnp
aam
cltd
movsl
cs
incb
ljmp
arpl
out
and
xor
orl
push
movsl
inc
jbe
in
imul
outsb
push
xchg
sbb
repz
fcompl
lock
js
mov
jbe
cmp
pop
in
jne
push
inc
fsubrl
inc
mov
daa
sbb
movsb
adc
inc
imul
outsb
cltd
inc
push
inc
cld
sub
pop
pop
xchg
sub
add
iret
add
or
fsubrp
fcomip
pop
jmp
mov
mov
out
xchg
cmp
mov
fildl
sahf
shrb
mov
sub
rcrb
hlt
inc
test
clc
mov
and
gs
sub
in
dec
es
xchg
cwtl
xor
adc
sbb
ds
and
and
xchg
in
out
cld
push
and
xor
push
adc
push
push
adc
xor
mov
xchg
bswap
xchg
and
test
xchg
pop
test
sbbb
mov
fadd
ror
pop
idiv
mov
adc
inc
add
repnz
dec
sbbb
and
enter
push
mov
or
cmp
fstps
in
jnp
sub
sub
jl
push
sub
push
cmc
dec
inc
fwait
hlt
push
sti
inc
mov
inc
fs
fwait
push
mov
sbb
jge
add
mov
jb
into
lahf
pop
jecxz
stos
rorb
jp
sub
lahf
lods
pop
sbb
inc
dec
out
mov
push
cmpsl
cmp
pop
mov
add
daa
inc
xchg
addr16
gs
sahf
sbb
mov
xchg
mov
xchg
fsts
sbb
lds
jne
dec
mov
dec
in
mov
sahf
jne
dec
cwtl
or
dec
jno
xchg
pusha
adc
jns
pop
ret
adc
mulb
push
pop
les
xlat
aas
mov
cmp
in
lea
lahf
pop
cmp
test
inc
out
cmp
pop
jae
xchg
jl
scas
gs
cs
arpl
mov
push
pop
popa
clc
dec
cmp
fs
pop
cli
es
xchg
mov
add
repz
aas
js
cmp
inc
es
ret
push
xor
sbb
mov
stos
push
andl
pop
in
xchg
pop
cmp
mov
in
mov
push
popa
xlat
mov
hlt
dec
dec
pushf
in
daa
inc
aas
movsl
inc
repnz
test
fadds
xchg
test
mov
add
inc
sahf
out
cli
cwtl
xor
xchg
jns
aad
popf
dec
cld
add
push
outsb
xchg
sahf
pop
test
lret
jae
pop
ret
pop
sbbb
pop
roll
movsb
ret
clc
test
pop
pop
mov
aad
lret
push
lret
je
push
lahf
mov
fldenv
mov
aad
sub
fcmove
inc
dec
sub
dec
xor
and
mov
adc
cwtl
pop
out
and
int
rcr
mov
mov
lahf
test
sbb
adc
test
mov
mov
push
dec
inc
mov
mov
jmp
or
cmp
mov
insb
add
mov
dec
push
cmp
test
mov
out
cmc
imul
popa
leave
sbb
inc
sub
push
outsl
es
repz
mov
jecxz
mov
mov
xchg
rep
jmp
jb
mov
adc
fidivl
cmp
rcll
shl
mov
pop
mov
add
fldcw
dec
pop
mov
cmp
and
adc
push
jge
xchg
hlt
lret
mov
pop
mov
jne
test
cmp
xor
test
pop
push
pusha
fildl
mov
in
sub
push
insb
mov
mov
jp
pop
and
aam
fcomps
repz
add
dec
sbb
cmp
xor
in
pop
ljmp
mov
out
ss
inc
ja
or
stos
aam
pop
insl
pop
xor
lds
aas
cmp
dec
and
sbbb
sbb
xor
xor
adc
pusha
adc
and
loope
lret
push
and
test
out
dec
int
mov
out
mov
in
cmp
insl
ljmp
addr16
out
sbb
mov
popa
and
leave
add
lret
pusha
jmp
xlat
ss
shlb
ficomps
add
into
rolb
sub
mov
inc
mov
xor
and
aad
adc
ja
jle
add
xorw
dec
mov
out
les
andb
jnp
mov
out
cld
sbb
aas
inc
sbb
lock
inc
scas
in
cmpl
leave
stos
in
dec
jecxz
clc
cmp
lcall
jb
out
out
loop
sahf
faddl
lcall
out
push
adc
stos
mov
lret
push
push
push
push
aaa
mov
call
dec
call
stc
addr16
dec
jmp
in
jb
push
and
push
sub
movsb
add
sbb
mov
repz
fdivrs
push
jmp
js
cmp
outsl
hlt
pop
les
sub
cltd
sarb
mov
cmp
add
jne
js
out
ficoml
lock
add
or
vmovlps
sbb
hlt
cmp
push
mov
mov
cmp
popf
jno
xchg
jbe
jne
ds
lds
mov
or
cmp
inc
push
popa
inc
scas
mov
stc
xchg
and
adc
jg
push
cwtl
sbb
lods
push
adc
sbb
pop
shrb
jns
add
popf
imul
cmc
mov
scas
dec
xchg
insl
fstps
pop
dec
pop
adc
imul
push
push
mov
sub
cmpsb
adc
daa
mov
jae
out
sub
sahf
inc
ja
xor
push
outsl
push
test
xchg
dec
mov
cmpl
aaa
sbb
ljmp
lret
cld
xchg
pushl
lods
iret
dec
bound
into
push
mov
push
mov
shl
lret
dec
mov
clc
and
test
rcr
add
stos
inc
xor
push
outsl
clc
into
jmp
dec
xor
jg
outsb
ret
test
mov
xor
and
test
xchg
lock
push
pop
rorl
xchg
out
popa
and
mov
jbe
cmpsl
pop
lea
cld
test
sbb
sti
lar
cwtl
sub
push
ljmp
jno
and
sub
out
xor
cwtl
das
cmp
aad
insb
sbb
cmp
adc
int3
arpl
xchg
int
jae
daa
mov
pop
scas
xchg
mov
jo
and
adc
xor
mov
lock
cwtl
cli
js
mov
test
xor
inc
adc
test
mov
std
repnz
je
movsl
into
ss
bound
es
scas
xchg
mov
jg
jp
dec
xchg
out
leave
push
lods
mov
dec
and
adc
fdivs
xor
dec
incb
adc
adc
sahf
xor
loope
mov
test
mov
mov
jae
iret
lret
pusha
lods
ret
xchg
in
push
lock
fdivrl
cld
push
mov
push
mov
xchg
pop
sahf
inc
sahf
or
and
shlb
cmp
rorb
jb
hlt
sub
adc
icebp
dec
jae
mov
lods
mov
das
jne
mov
shlb
inc
fldenv
in
decb
fucom
and
push
adc
mov
mov
cmpb
cmpsb
mov
stos
adc
addb
push
call
dec
cli
outsl
sbb
out
mov
add
ljmp
jb
dec
enter
dec
push
mov
fsubr
rcl
shrl
lea
and
lods
inc
fstp
dec
in
mov
or
lock
push
push
popf
mov
mov
stc
out
mov
stos
mov
cmc
adc
sbb
mov
sar
inc
push
repz
mov
loopne
cli
or
lretw
cld
add
test
inc
test
or
iret
add
sub
popa
out
into
fmuls
psubsw
xor
sbb
pop
jb
pop
sub
arpl
xor
sub
ret
popf
push
pop
repnz
test
pop
and
jp
insl
mov
movb
pop
push
test
cmp
shll
hlt
loope
mov
stos
dec
scas
push
sub
lret
pop
push
call
xlat
stc
pop
dec
sti
pusha
jb
push
es
fbld
ret
pop
xchg
out
xor
xor
arpl
push
mov
xchg
andb
in
sub
adc
pop
jo
dec
inc
cmp
dec
ret
sbbb
shrb
sub
sbb
jge
jmp
inc
xchg
mov
or
loop
mov
stos
jae
mov
dec
dec
mov
jns
mov
addl
push
sub
lea
decb
adc
mov
inc
mov
or
mov
test
inc
js
mov
addr16
sahf
inc
mov
push
cmp
mov
pop
insb
jnp
mov
cmp
jmp
xlat
adc
xchg
jne
inc
pop
scas
jno
or
cltd
and
jge
scas
cmpsb
mov
stos
jmp
push
test
inc
out
mov
lds
fmuls
shlb
mov
aaa
push
jne
jmp
ss
dec
or
push
or
adc
rclb
xchg
mov
or
mov
dec
loop
mov
and
aad
cli
js
shrl
pushf
sub
sub
and
nop
adc
jl
sbb
jecxz
inc
inc
fisttps
dec
xchg
or
add
inc
xchg
add
cmp
test
cmpsl
int
and
mov
add
idiv
rcrb
or
pop
dec
xchg
daa
fdivs
pop
test
in
add
movsb
fisttpl
jne
aaa
pop
gs
mov
jb
fstpl
popf
jecxz
push
sub
call
imul
rolb
push
push
cltd
push
scas
dec
mov
ss
das
fcompl
mov
das
stos
in
xchg
lds
cmp
add
shrb
xor
mov
xchg
mov
pop
iret
clc
ljmp
loope
je
mov
call
subb
sahf
mov
adc
call
scas
nop
adc
lods
test
mov
pop
xor
or
jns
dec
pop
jecxz
int3
jo
mov
and
sbb
aam
fs
div
xchg
and
hlt
loopne
js
clc
aaa
clc
and
lret
mov
jno
popa
daa
jp
mov
dec
fwait
xor
in
dec
sub
inc
mov
lahf
sub
in
mov
ljmp
push
int
mov
sbb
or
adc
adc
sub
or
iret
test
and
je
and
mov
pop
jmp
add
lds
rclb
cmpsb
pop
fwait
sub
or
lcall
push
mov
xor
mov
dec
mov
fucomip
sub
hlt
dec
test
scas
and
rol
das
gs
xchg
jmp
int
div
or
dec
dec
scas
dec
out
mov
and
std
into
inc
arpl
push
mov
popf
stos
sbb
lea
mov
scas
jne
ja
add
add
das
mov
push
dec
pop
mov
lcall
push
je
inc
daa
loop
cltd
and
data16
mov
mov
mov
imul
xor
inc
cmp
push
lods
dec
cwtl
push
jae
shl
or
sub
lods
inc
je
shl
ds
lret
loope
in
jb
stos
out
out
adc
cltd
mov
and
push
rcrb
flds
push
inc
xor
sbb
and
jb
shll
scas
js
iret
mov
xchg
lods
daa
nop
lods
mov
test
daa
pop
dec
push
xor
add
rcrl
ds
sbb
or
imul
jg
pop
outsb
push
cmc
mov
sbb
xchg
push
sub
push
stc
sub
lods
ss
je
movd
scas
in
add
rorb
les
movsb
cmp
lret
pop
mov
sbb
cli
inc
cmp
inc
sbb
add
das
ljmp
mov
or
gs
pop
dec
and
mov
nop
daa
and
testl
frstor
pushf
sbb
ja
popa
adc
lahf
enter
gs
popa
add
mov
pop
adc
jnp
xor
outsb
aam
mov
inc
repnz
icebp
xor
rcll
testb
icebp
dec
lods
add
fildll
iret
dec
ja
jo
fcmovbe
push
std
xchg
xor
mov
out
xchg
jge
sbb
mov
pop
lds
sub
jne
jle
xchg
call
xor
imul
in
cli
leave
xchg
pushf
or
xchg
mov
scas
fistl
jecxz
push
test
scas
mov
xor
insl
int
and
cmp
ficomps
inc
out
add
iret
cmp
mov
or
lods
cmp
ljmp
mov
mov
lea
sbb
pop
cmp
cmp
mov
imul
jnp
hlt
lcall
sub
jecxz
dec
daa
lds
inc
push
xchg
mov
mov
jmp
push
inc
inc
mov
fldpi
inc
pop
shll
mov
mov
daa
xor
lods
add
imul
test
lcall
cmp
mov
xchg
ljmp
dec
cwtl
outsl
aad
dec
mov
adc
pop
xchg
pop
repnz
mov
jns
push
xchg
insb
jmp
xchg
aaa
jmp
adc
add
loop
inc
inc
test
dec
cmp
das
push
es
push
pop
ret
and
adc
push
xlat
movsl
popf
aas
and
cmp
jbe
bound
cli
lret
cmp
scas
xlat
in
js
pop
jmp
adc
or
xchg
or
xchg
pop
std
xor
xchg
mov
cs
mov
pop
mov
sarl
push
adc
sub
or
stc
sub
fwait
jb
sbb
xor
rorb
lods
ret
sub
inc
mov
cld
dec
push
dec
mov
cmpsl
hlt
mov
push
aam
rorb
es
pop
addl
xchg
or
pop
mov
fwait
mov
int
or
rol
sub
and
cld
cli
xchg
ljmp
divb
out
push
stos
daa
loopne
fs
dec
jno
cmp
js
fiaddl
lods
ss
popa
mov
mov
in
sbb
cmp
lret
ret
mov
fbstp
cmpsl
sti
sbb
fdivrl
cli
mov
xchg
rcrb
adc
shl
in
jmp
or
sub
xchg
popa
in
xchg
aam
test
jle
out
push
in
ret
pop
arpl
lcall
fstps
in
test
movsb
jnp
adcl
sbb
jl
inc
shr
mov
cmp
stc
mov
sbb
addr16
or
push
aas
es
data16
push
rcrl
pop
jl
cmp
sub
jne
popf
stc
jno
mov
mov
sbbb
rcrl
rcrb
xor
push
gs
mov
int3
jl
cwtl
and
jge
push
outsl
pushf
dec
rcll
pop
push
repz
in
or
jecxz
aas
dec
dec
dec
cmp
in
xchg
cmpsl
in
rcll
popa
pop
es
push
popa
stc
test
stc
cmp
sub
mov
or
jne
test
or
add
cmp
push
sub
and
movsl
mov
lret
xchg
ljmp
adc
mov
psubsb
roll
das
hlt
sbbl
loop
mov
in
adc
and
sbb
je
in
lds
popf
out
xchg
inc
pop
add
pop
popf
cli
xchg
cmpsl
pop
stos
pop
mov
sti
push
mov
or
jno
popa
sub
sub
adc
xchg
inc
cwtl
lea
cmpsb
in
and
shlb
or
lahf
in
adc
cmp
ret
lcall
push
call
xchg
xchg
xchg
repnz
dec
fisubrl
dec
movzbl
mov
in
icebp
mov
mov
jno
out
lods
lds
mov
jnp
shrl
xchg
imul
icebp
mov
repnz
cmp
and
xchg
sub
add
ret
out
sbb
jmp
repnz
sahf
and
add
xchg
and
jb
mov
mov
ret
repz
push
push
stos
inc
xchg
fsubrs
fsubl
xchg
mov
mov
test
ficoms
and
jo
adc
sbb
testb
push
adc
enter
test
lods
dec
mov
pop
or
push
jb
add
fsubrs
xor
jp
and
xor
mov
loop
sub
push
roll
xchg
sbb
daa
lret
lods
xchg
std
dec
movsb
cmp
movsl
icebp
std
fwait
shlb
stos
inc
shlb
leave
pusha
mov
dec
dec
mov
test
inc
adcb
push
inc
lods
popl
mov
test
sub
outsl
iret
jae
cli
mov
mov
xchg
xchg
mov
into
dec
inc
fcom
cwtl
gs
lods
jae
jo
push
cs
mov
lret
icebp
loope
and
fmuls
and
inc
fisubrl
xchg
int
dec
fidivs
jmp
sbb
push
inc
out
pop
or
shlb
rclb
jae
and
sub
jo
push
mov
inc
mov
inc
jle
jmp
lret
and
add
leave
pslld
dec
sub
outsb
sub
pushf
dec
iret
xchg
jg
mov
out
push
fdivs
roll
sahf
or
mov
jle
mov
mov
or
push
imul
xlat
outsb
test
sbb
cmpsb
sarl
popf
out
popl
mov
aad
inc
pop
xchg
jp
lds
mov
ja
adc
inc
inc
xchg
lods
mov
shl
xchg
jg
jmp
movsl
cmp
jnp
leave
movsl
jge
mov
adc
inc
push
ja
xchg
test
ja
mov
outsb
fidivs
push
cli
push
xchg
pop
roll
cli
cmp
outsl
pushf
mov
imul
das
inc
mov
aam
dec
push
jp
inc
nop
inc
movsl
cmp
mov
adc
dec
mov
cmc
mov
xchg
stc
rcrl
xchg
and
bound
cmpsb
jmp
mov
lret
adc
jns
cmpb
bound
lahf
or
inc
push
sbbb
cltd
pop
jae
lahf
and
fnstsw
rorl
mov
xchg
repz
cmp
mov
testl
dec
andb
aaa
enter
clc
pop
and
loop
lock
nop
das
push
pushf
lds
ret
or
lcall
call
or
mov
inc
js
cmpl
lds
and
mov
mov
cmpl
xchg
loope
js
push
popa
xor
or
cmc
int3
mov
mov
lock
dec
sbb
mov
pushf
shr
or
xchg
repz
rcl
inc
fadds
cmc
dec
mov
loop
lea
xor
dec
add
push
jmp
sub
or
shll
das
cmpsb
jl
fildl
sbb
sub
notb
je
add
mov
les
bound
cwtl
js
cmpsb
mov
ficomps
push
mov
mov
cmpsb
jecxz,pn
push
pop
ds
mov
xlat
bndldx
xor
popf
fdivs
test
mov
mov
in
mov
pop
mov
rclb
mov
inc
jmp
push
adc
flds
dec
inc
popa
icebp
mov
dec
and
mov
cmp
and
in
mov
popf
in
xchg
dec
scas
cmp
jl
push
shrb
aas
inc
lock
xchg
out
fwait
lds
je
mov
subb
mov
test
test
loopne
mov
push
std
scas
dec
mov
call
adc
sbb
outsb
jge
adc
inc
mov
out
lret
xchg
out
ret
inc
jbe
cmp
inc
add
popa
aad
fnstsw
push
cmp
or
jne
int
ljmp
nop
rol
out
fs
aad
int3
scas
xchg
add
popa
fcomps
cmp
push
cmp
and
add
sbb
lahf
lock
inc
sub
or
jle
fnstcw
push
cmp
mov
cli
adc
rcll
notb
imul
aas
or
std
or
sbbl
mov
fisttpl
adc
mov
fmull
insb
aaa
push
cmp
or
inc
cmp
and
in
ds
mov
adc
sub
xchg
cld
add
mov
sbb
leave
inc
arpl
or
pop
mov
lcall
stos
inc
sub
ja
fs
cmp
lret
adc
in
jg
cltd
or
and
mov
xchg
xor
inc
outsb
mov
ss
sbb
xor
push
cmpsb
cli
sbb
fwait
test
inc
pop
arpl
pop
fsubs
inc
fidivrs
fidivs
xor
outsb
sbb
xlat
xchg
sbb
sti
xor
sub
and
addl
cmc
lds
stos
cmp
lcall
pop
ja
sub
in
pusha
fwait
insl
sbb
daa
push
mov
or
dec
fstl
loope
std
inc
fst
push
out
out
dec
sub
outsb
xor
into
jg
sbb
ret
ret
das
ds
add
hlt
ret
pop
xchg
adc
cmp
sub
cwtl
and
pop
scas
ret
lods
push
test
mov
xlat
in
xor
out
inc
pop
outsb
jne
or
ja
cmpsl
dec
add
pop
in
cmp
xchg
in
push
sub
xchg
outsb
ds
in
loop
or
or
dec
cmp
and
push
cmp
mov
loop
xchg
insl
push
inc
pushf
xchg
stos
incl
int
cmc
test
sub
mov
mov
pop
sbb
mov
xor
decb
les
jl
jmp
or
add
popf
fbld
inc
sub
xchg
xorb
enter
pop
repz
inc
or
je
mov
setg
lahf
enter
mov
pop
sbb
int
loope
in
out
mov
push
push
jge
idiv
aad
inc
mov
mov
cmp
js
push
ret
pop
popf
jecxz
arpl
shl
fsubrl
and
xchg
cmpsl
mov
cltd
xor
fsubl
fadds
fstpt
mov
jae
mov
inc
xchg
mov
inc
adc
inc
xchg
jge
stos
ret
add
cmc
int3
movsb
sbb
mov
pop
xor
cmp
sbb
xchg
mov
add
inc
mov
cwtl
and
sbb
movsb
cmpsl
shr
bound
mov
inc
inc
data16
mov
enter
xchg
outsb
iret
cmpsl
sti
aaa
push
push
sub
subb
movsl
aam
push
pop
xor
aas
cli
fwait
xor
mov
xor
loopne
push
mov
inc
pushf
mov
sarl
ret
mov
je
insl
adc
sub
pop
mov
xchg
sbb
shrl
sahf
jb
and
xchg
jmp
and
jg
ds
cmp
lock
jmp
mov
rorl
imul
pushf
das
sub
xor
bound
inc
xchg
enter
adc
adc
jge
cmp
jne
mov
adc
outsb
aaa
pushf
aam
cmpsl
pop
dec
pop
jae
outsl
scas
aam
in
add
jno
fsubs
imul
pop
and
insb
cltd
aas
jnp
sti
dec
daa
test
push
lods
xchg
aaa
out
mov
aam
xchg
push
push
lcall
loope
test
push
ficoms
mov
cmp
push
nop
xor
dec
pop
cmc
rcrl
sbb
sub
push
cmc
xchg
or
out
mov
push
add
mov
movsb
jle
jge
lds
lahf
stos
or
jl
data16
rcrb
test
or
and
dec
mov
jle
cmp
mov
mov
cld
push
mov
aad
xchg
movsb
push
cmc
sub
or
dec
or
aam
hlt
or
or
sub
enter
loop
aam
cmp
jge
mov
push
inc
add
sbb
and
push
lods
movsb
idivb
ja
iret
fucom
test
mov
jecxz
inc
lret
adc
and
xor
xor
fistl
jmp
cs
dec
loop
jo
jl
xchg
inc
mov
js
xchg
sub
and
cmp
dec
mov
jns
scas
sti
sbb
movsl
cmp
test
setg
ds
push
rclb
add
push
push
mov
fwait
notl
dec
or
aad
jmp
pop
lcall
dec
loop
inc
inc
fidivl
imul
vmovdqa
in
ss
aam
cmp
push
add
icebp
loope
xchg
add
or
pushf
in
imul
rclb
xlat
add
ds
jae
mov
mov
scas
or
loopne
scas
into
jecxz
lret
mov
and
adc
negb
arpl
push
rorl
mov
jns
mov
pop
xchg
in
push
and
rcl
in
push
movsl
sbb
mov
imul
ret
out
outsl
pop
sarl
rcrl
gs
loopne
xor
imul
outsb
loope
adc
cmp
adc
mov
cmpsb
jns
out
int3
adc
add
arpl
jg
dec
and
inc
push
out
div
xchg
push
es
push
aam
mov
iret
repz
test
cli
xchg
xchg
int
sbb
mov
mov
push
cmp
stos
lahf
push
sar
rep
insl
push
orl
enter
sbb
out
mov
dec
push
rol
hlt
pop
aam
mov
repnz
dec
lcall
inc
pop
dec
adc
and
imul
fadds
xchg
xor
mov
or
jl
xchg
lods
mov
mov
and
pushf
test
enter
cmp
clc
cltd
outsl
test
mov
mov
inc
fwait
push
pop
nop
sub
mov
scas
rcl
addb
loope
jne
insb
repnz
mov
or
adc
xor
mov
xor
dec
dec
add
mov
xchg
jl
xchg
and
scas
test
jbe
mov
mov
jbe
push
jmp
pop
aaa
sub
pusha
jb
pop
imul
popa
add
pop
mov
rcll
int
jecxz
mov
xchg
adc
test
movsb
int
orb
popf
in
clc
nop
movsl
lds
sbbb
leave
inc
sti
jbe
jmp
inc
or
fbstp
mov
cmpsb
mov
subb
sub
add
out
mov
push
mov
mov
out
rcrb
mov
add
jo
pusha
cltd
test
jg
negb
xor
jne
cmpsl
jb
add
popf
cmpxchg
cmpsl
pop
ds
inc
mov
sub
inc
loopne
hlt
or
lds
push
mov
adc
clc
cld
testl
cli
jg
mov
enter
mov
scas
xor
sub
lahf
into
push
ficompl
ds
jl
push
push
movsb
test
xchg
fcoms
add
dec
cmpsb
mov
add
xor
mov
pusha
arpl
add
nop
jnp
xchg
dec
add
pop
aam
xchg
mov
cmpsb
mov
pop
cmpsb
call
inc
inc
mov
cmpl
sub
jle
or
adc
xchg
js
fildll
xchg
std
aas
dec
fldl
test
xorl
or
daa
mov
ret
add
shr
mov
pop
mov
cmpsb
stos
js
pop
dec
xchg
lods
and
mov
out
and
push
daa
dec
aaa
jbe
in
xchg
sub
sbb
inc
add
jnp
dec
mov
jbe
xor
test
cmc
push
loope
negl
mov
ret
mov
mov
imul
imul
lock
decb
shll
mull
mov
aaa
test
shll
out
sub
scas
xchg
sub
clc
loop
out
test
mov
repz
mov
mov
inc
mov
jae
dec
cmpsb
add
iret
fsubrl
mov
scas
or
jmp
inc
in
cli
mov
mov
pop
or
lret
sahf
lods
or
in
inc
pop
mov
loopne
lock
adc
popf
xor
mov
sti
ljmp
cmp
push
xor
stos
cmp
scas
shrb
mov
jo
xor
mov
sub
loopne
fdivr
pop
sbb
adc
fcmovu
mov
icebp
out
xor
mov
ror
push
aaa
lret
jmp
aaa
inc
xlat
les
xchg
mov
in
and
and
movsb
cli
inc
dec
inc
xlat
imul
mov
mov
ficomps
or
xor
into
sti
or
aad
or
inc
cwtl
inc
ja
popa
stc
inc
xor
out
and
or
jle
or
std
add
mov
adc
ljmp
inc
xchg
enter
and
test
mov
xor
inc
js
shr
lock
xlat
and
iret
or
push
aas
stc
ss
inc
fsts
xchg
jne
mov
dec
cmp
xchg
lds
sub
sub
pusha
or
stos
push
stos
repz
mov
adc
mov
cmp
das
shr
push
and
pop
js
mov
mov
inc
ljmp
pop
dec
pop
out
insl
scas
arpl
lahf
nop
in
incl
push
mov
sbb
sub
pop
mov
cltd
jbe
pop
mulb
jae
or
add
mov
fwait
outsb
sbb
cmp
and
icebp
cs
push
xchg
rorb
pop
mov
repnz
dec
popa
cmpsl
or
outsb
cmp
push
dec
test
mov
bound
mov
sti
mov
fistl
mov
add
mov
mov
rcrb
sarl
cli
or
jns
cmc
xchg
xchg
in
jnp
xchg
push
rcll
add
imul
fildl
mov
and
out
shrl
mov
fisttps
mov
jae
rorl
idiv
pop
das
ret
cli
ror
mov
in
test
fidivrs
out
adc
adc
sub
stc
jecxz
fcoms
cmp
orb
pop
fsub
mov
out
cmp
shl
mov
out
and
cmc
sahf
stc
fucomip
fnstsw
sub
mov
push
lahf
das
clc
and
cs
fidivrl
mov
jno
pop
ret
nop
scas
mov
or
push
add
push
cld
mov
adc
hlt
xchg
add
fdivl
sub
pop
jae
dec
jecxz
xchg
arpl
out
fwait
clc
sahf
xchg
mov
call
test
daa
adc
push
popa
lret
and
xor
xchg
daa
pop
lock
mov
test
add
xor
mov
rclb
mov
push
or
push
in
push
mov
mov
inc
sbb
push
movsb
aas
xor
xchg
cmp
mov
subl
xchg
add
xor
adc
stos
aam
dec
mov
ret
jmp
lds
insb
inc
mov
not
add
mov
push
push
insb
jne
jnp
mov
or
pop
rclb
shll
outsl
jnp
xchg
roll
das
adc
or
cmp
fucom
push
mov
xchg
sbbl
mov
lahf
jp
xchg
adcl
aaa
mov
push
and
add
inc
sti
pop
jns
sbb
mov
push
ja
mov
jge
xor
gs
jnp
enter
and
int3
ret
rorb
dec
adc
addr16
pop
ja
lock
stos
sub
dec
repnz
jle
jg
shrb
in
pop
push
fucomp
add
loopne
fnstcw
mov
push
xor
xchg
adc
test
pushf
adc
sbb
jnp
xchg
and
mov
movsl
js
scas
inc
add
jae
jecxz
sub
mov
aad
and
call
or
dec
sti
jl
inc
xor
cmpb
pushl
mov
int3
out
inc
int3
pop
imul
dec
in
jle
mov
mov
jo
xor
cmpsl
aaa
dec
outsl
xchg
scas
xchg
pop
ds
fcomps
test
pop
stos
stc
jae
scas
movsb
lds
or
sbb
push
sbb
dec
out
dec
push
arpl
cld
in
cltd
test
push
pop
test
mov
imul
in
jo
test
icebp
push
push
and
jae
cmp
cld
imul
xor
jmp
jp
mov
push
cmp
sarb
or
pop
std
sub
ds
addl
pop
mov
add
adc
imul
mov
dec
xchg
rorl
lea
je
push
mov
jmp
out
test
inc
scas
xchg
xor
mov
lea
and
ret
insb
jg
xchg
hlt
popa
addl
dec
test
xlat
jg
clc
nop
jp
adc
sub
popa
shlb
xchg
in
sub
ljmp
pusha
rcrl
negb
js
xor
adc
ficomps
push
mov
inc
pop
adc
shlb
inc
mov
sub
pop
iret
dec
jg
lret
mov
int
jg
cmpsl
aas
sarb
inc
cmp
movsl
push
test
lahf
dec
subb
jecxz
or
ss
clc
xchg
add
ret
pop
cmpl
clc
dec
popf
decl
jo
jp
int3
lret
pusha
mov
pusha
xlat
es
pop
push
call
insb
mov
shll
xchg
mov
mov
push
jp
mov
les
hlt
rolb
xchg
sahf
inc
fsubrp
iret
sub
sub
inc
inc
cmp
jb
inc
out
mov
mov
icebp
mov
fadds
cmpb
aad
sub
push
mov
xchg
insb
filds
xorl
rolb
inc
flds
lahf
dec
in
scas
adc
mov
shl
push
push
ljmp
jno
imul
cltd
nop
sbb
push
test
loopne
xor
cmp
push
and
mov
call
mov
rorl
pop
pushf
pop
cmc
and
test
push
xchg
add
inc
imul
cvtpi2ps
aam
lods
jp
cld
cld
jnp
test
dec
aas
ret
xor
push
int3
in
shlb
test
adc
add
dec
dec
pop
sar
push
test
inc
bswap
enter
call
adcb
and
adc
out
xor
in
mov
dec
adc
imul
push
shl
mov
cmp
test
int3
mov
gs
repz
scas
mov
xchg
test
pushf
in
imul
push
mov
mov
fsubs
sbb
mov
sub
pusha
jb
insl
movsb
xor
rorb
jp
stos
repz
fs
cwtl
das
and
xlat
push
sub
xor
cltd
jmp
fildll
push
ljmp
test
push
add
mov
sbb
imul
pushf
dec
pusha
jno
cmp
shrb
clc
or
fs
clc
into
aam
add
out
jns
repnz
lahf
xor
push
adc
je
mov
pop
aam
adc
bound
shrl
pop
xor
lret
and
scas
inc
mov
cwtl
dec
aam
mov
xchg
stos
sbb
int3
leave
add
out
push
adc
lea
sub
fs
insb
hlt
in
add
testl
pop
mov
cmp
add
sub
dec
cwtl
xchg
inc
inc
push
add
andb
stos
fisubs
or
fs
sub
and
out
sub
add
or
sbb
or
enter
mov
pop
movhlps
pushf
xlat
test
xor
xchg
inc
sbb
movsb
jnp
mov
and
pop
jno
cmp
fwait
jp
addr16
lcall
lret
cmp
adc
and
imul
mov
push
xor
xchg
inc
mov
mov
push
xchg
and
xor
sbb
mov
pop
decl
hlt
cmpsl
sub
aam
push
jne
clc
std
push
push
aad
xor
mov
in
xor
cmpsl
es
repnz
xlat
xor
and
lcall
mov
push
xchg
xor
jg
or
cmp
fstps
jo
std
popa
jns
push
push
fcompl
mov
add
push
push
out
cmpl
xchg
mov
or
test
jae
pop
dec
sarl
iret
jb
pop
xchg
clc
push
outsl
or
pop
mov
dec
mov
jecxz
cld
pop
dec
pop
cmp
pop
mov
pop
popf
cmp
dec
out
call
and
aad
mov
cmp
cmp
add
cmpsl
shr
xchg
adc
jp
sub
fisttps
test
xchg
mov
xlat
mov
xchg
ja
dec
lcall
imul
jbe
pop
adc
add
scas
pop
cmc
loopne
fsubr
fisttpll
mov
add
loop
pop
adc
mov
call
mov
es
nop
and
push
rcr
ja
repz
aas
adc
out
push
fwait
repnz
jmp
pop
xor
scas
addr16
cmp
stc
mov
mov
cmp
dec
push
jmp
cmp
lods
outsl
cmp
cmpsl
lcall
mov
and
jb
ss
pop
out
mov
stc
xor
adc
xor
test
cmp
or
imul
cmp
stos
xor
mov
adcb
jb
pop
push
xlat
outsb
and
cmc
int3
cmpsl
mov
pop
lahf
push
mov
cmp
xchg
mov
and
push
add
clc
aam
mov
icebp
int3
jle
shrl
push
mov
mov
mov
inc
int
cmp
push
dec
pop
push
adc
mov
popa
sar
add
in
adc
mov
cwtl
mov
pop
add
fldenv
dec
loop
xor
xor
aaa
xchg
imulw
std
into
mov
imulb
adcb
stos
mov
aam
into
imul
leave
xorb
cli
dec
mov
xchg
gs
jg
dec
shll
loope
mov
sbbl
in
je
push
jmp
mov
pop
in
mov
mov
jno
cs
mov
dec
lret
scas
fiadds
adc
push
loopne
fisubrs
pop
lock
mov
cmp
dec
cmp
pop
shl
lds
testl
shrb
mov
sbb
lock
mov
insb
sub
rcl
sbb
addr16
mov
jg
stc
cwtl
call
pop
test
xor
das
inc
jb
cs
mov
jmp
fimull
mov
sub
imul
dec
pop
out
cmp
cltd
stos
sbb
and
inc
sar
push
inc
xor
pop
and
lahf
xor
pop
xor
adc
repnz
push
fstpl
pop
lock
push
addr16
ja
jecxz
std
cltd
mov
push
dec
xchg
in
adcl
arpl
arpl
mov
sbb
outsl
and
push
pop
scas
cmp
jg
mov
ss
adc
ss
ss
jmp
mov
adc
jo
rol
mov
es
popa
push
mov
andb
xlat
mov
lret
pop
xchg
cmc
test
insb
out
jbe
test
ret
fcompl
mov
enter
or
pop
jl
pusha
insl
pushl
or
sbb
daa
in
test
push
mov
shrl
push
int
cmc
leave
cld
fldenv
imul
sbb
fdivrl
pop
sub
lods
loopne
fists
jno
xchg
jle
movsb
testl
leave
dec
and
and
out
cmp
inc
mov
mov
fcmovne
or
cmp
ret
xchg
sbbl
push
test
scas
ja
rolb
in
popf
es
imul
fistpll
or
imul
jbe
mov
cmpsl
fsubrs
xchg
jmp
mov
inc
nop
leave
lahf
sbb
mov
push
jecxz
aas
shlb
inc
cmp
aaa
imul
std
loope
dec
jb
mov
js
adc
popa
popl
adc
addl
mov
aas
push
sti
outsb
and
cwtl
mov
and
test
add
out
mov
sti
scas
mov
inc
pop
jb
in
mov
fiadds
mov
les
jnp
les
xor
rcr
push
dec
pop
or
les
sub
jge
mov
add
xor
lea
sahf
sbb
dec
pop
testb
xchg
enter
push
les
fisttps
or
arpl
dec
pop
inc
sbbl
movb
cmpsb
inc
mov
sub
icebp
sbbb
pop
les
dec
lcall
in
xchg
mov
mov
jne
pop
dec
clc
push
rcrl
cld
dec
sbbb
ret
les
xor
sarb
xchg
sub
in
sarb
ja
shrb
xchg
jno
xchg
scas
mov
sbb
lret
and
iret
mov
add
inc
pop
data16
les
or
rorl
cmp
mov
fstps
cmp
stos
and
xchg
inc
adc
fsubr
and
push
test
push
enter
or
bound
addr16
jne
clc
bound
lret
into
sbb
aas
mov
dec
mov
sti
cmovno
inc
or
notb
data16
mov
and
in
inc
test
mov
imul
ret
xlat
mov
xlat
lcall
repnz
sub
adc
lods
es
std
in
movsb
cld
aad
orb
stc
add
push
xor
sub
mov
scas
xchg
push
push
jbe
cmp
out
sbb
shrl
xchg
sub
or
pop
jmp
cmpsb
mov
stc
out
inc
lods
shl
arpl
sub
sub
sahf
cwtl
ret
sbb
in
adc
xchg
push
push
adc
pushf
test
incl
mov
fnsave
pop
aam
test
mov
out
sbb
movd
mov
rcr
test
or
insl
jl
jne
mov
mov
popa
xchg
push
iret
sbb
sahf
jl
sahf
jne
sahf
adc
int
std
xchg
ss
lods
aas
je
insl
xor
inc
pop
shll
fiaddl
rol
imul
fs
jno
xor
clc
sahf
sub
les
mov
mov
adc
mov
mov
loopne
into
cmp
movsl
xchg
push
sbb
fadd
imul
lods
mov
test
mov
pop
das
sti
xchg
popf
xchg
jecxz
mov
dec
push
mov
icebp
dec
insl
neg
arpl
pop
adc
int
ret
ds
outsl
jp
mov
int
out
out
xor
mov
test
xor
jp
ret
aad
ja
in
pop
push
adc
lods
es
lock
in
xor
add
lock
ret
inc
ja
dec
xchg
jno
lods
int
mov
ljmp
pop
push
push
aad
enter
jae
test
fdivs
lret
xlat
and
or
pop
rol
mov
xchg
dec
sbb
jo
movsb
out
xchg
mov
jae
arpl
xchg
sbb
jg
push
stc
test
xchg
push
cmpsb
sub
pop
mov
pushl
imul
or
inc
jmp
int3
loopne
rclb
mov
xlat
dec
sbb
insl
sbb
into
and
and
mov
jge
repnz
popf
fisubl
jmp
inc
std
lea
pushf
dec
adc
es
mov
lret
sub
ss
push
aam
adc
dec
ffreep
sub
rcr
ss
mov
push
adc
cltd
xor
pop
cli
pushf
inc
fstps
pop
out
ljmp
adc
sub
jbe
scas
js
stos
lea
jbe
xor
and
out
dec
dec
xchg
xchg
cmp
test
xor
xor
rol
mov
fadd
pop
lret
adc
dec
mov
fisubl
push
mov
es
xor
add
xor
sub
and
and
xorb
push
inc
test
and
aas
stos
mov
int3
sbb
cmp
jge
xlat
jg
mov
add
leave
shrb
push
xor
mov
icebp
xchg
hlt
addr16
cmc
push
outsl
mov
lret
pop
imul
pop
xchg
js
call
xchg
push
jno
cmpsb
and
cmp
scas
movsl
mov
out
inc
pop
add
sub
bound
lret
lret
js
pushf
lea
inc
divl
push
scas
fisttpll
push
push
adc
pusha
lods
fsub
gs
lret
into
ja
jge
leave
int
fwait
repz
mov
pop
rorl
sti
pop
sarb
ficoml
xor
and
ljmp
push
or
lret
cld
dec
repz
xchg
add
int3
jmp
add
pop
out
xchg
sbb
adc
cmpb
jle
es
loope
sub
lods
pop
mov
jb
gs
in
inc
mov
jo
mov
lret
jae
pop
xor
add
arpl
mov
movsl
push
sub
aad
rcrl
or
and
add
inc
rep
or
int
push
xchg
lret
addr16
notl
jb
jge
mov
sbb
mov
xchg
mov
adc
iret
cli
dec
mov
push
lods
mov
push
xor
push
stc
mov
cld
and
cli
jg
dec
gs
sub
ret
bound
mov
scas
add
pusha
sub
into
mov
movsl
xchg
cmp
ret
inc
shll
and
jp
scas
xchg
jne
sbb
int
cmpsb
lock
pop
push
inc
pop
mov
jge
and
fisttps
hlt
mov
addr16
add
push
sbb
add
ljmp
aas
pop
xchg
dec
jle
xor
pusha
in
outsl
inc
adc
inc
pop
mov
addr16
pusha
cmp
xor
loope
repnz
push
cs
adc
js
test
es
in
or
pusha
add
orl
dec
and
adc
test
sbb
add
lea
jb
mov
xor
fsts
sub
repnz
mov
pushf
cli
fisubrs
int
mov
or
push
jno
test
into
xor
inc
push
ret
jmp
call
or
daa
inc
stc
add
fxch
xor
jmp
repz
cli
or
sti
push
iret
fldcw
jbe
bound
pushf
fnstenv
mov
xor
les
test
or
addl
movsb
xchg
adc
lcall
cmp
cmp
sti
and
and
mov
rol
mov
push
ret
xchg
mov
movsb
lock
fcmovbe
fdivs
mov
pop
outsl
sub
int3
pop
lahf
jp
popa
sub
pusha
aam
sbb
jg
push
cmp
clc
test
shll
inc
adc
cmpps
cs
mov
daa
xchg
push
xchg
jl
movsb
adc
xchg
loop
or
movsb
mov
mov
fnstcw
mov
add
shll
popf
and
stos
dec
xlat
fwait
inc
ret
pop
je
fcmove
lds
loop
adc
stos
rcrb
test
popf
and
in
test
in
dec
nop
addr16
xor
pop
pop
xor
pop
mov
arpl
xchg
imul
ljmp
cmpsl
int3
jg
testb
lods
fiadds
jg
push
out
daa
testb
lahf
sub
cld
cmpsb
test
stos
in
stos
xchg
xor
leave
outsl
pop
dec
cmc
int3
jge
xchg
and
aas
xor
cmp
push
imul
std
or
popa
adc
pop
jo
ss
test
jle
push
mov
mov
sbb
mov
push
mov
sar
jno
in
inc
jbe
enter
jbe
lcall
mov
adc
jns
ljmp
sub
pop
aam
sbb
jno
jp
inc
mov
outsl
repz
data16
mov
dec
dec
int
rcrl
dec
push
loope
ss
sub
push
dec
dec
daa
rolb
int
dec
aaa
outsl
insl
jnp
xor
mov
jle
jg
js
in
jl
test
or
stc
mov
mov
scas
in
inc
push
adc
test
jnp
arpl
dec
and
mov
inc
push
fwait
or
add
imul
cmp
jns
and
test
scas
push
jmp
and
addr16
or
in
push
divl
push
out
xchg
sub
push
jl
loope
scas
jns
aam
cld
ret
filds
fbld
inc
sbb
push
push
gs
and
cmp
mov
jne
pop
fidivrl
dec
stos
dec
pop
shrl
out
imul
and
dec
int3
leave
lds
hlt
ds
cmp
pusha
das
mov
gs
mov
xchg
decl
lahf
xchg
sub
jmp
in
shll
mov
lods
jmp
mov
inc
movsb
mov
sbb
imul
fdivrs
sub
lahf
push
mov
pop
mov
outsb
movsb
jl
popa
mov
test
adc
pop
mov
loopne
xchg
xchg
clc
xchg
sub
imul
and
bound
mov
push
data16
add
inc
adcb
fstps
call
sub
push
fists
pop
mov
pop
iret
pop
ret
mov
dec
mov
pop
xchg
shlb
mov
sub
insl
xchg
mov
pop
xor
mov
imul
inc
loopne
dec
and
push
std
movb
pop
repnz
mov
jns
pop
mulb
pop
lahf
dec
iret
mov
dec
adc
vdivsd
mov
sub
in
cmp
jecxz
js
ret
add
adc
push
sahf
int3
add
data16
xor
popf
bound
sub
sub
inc
mov
shll
dec
mov
popf
stos
rorl
fidivs
scas
rcrl
sbb
mov
divl
fucomip
test
mov
dec
sbb
std
xchg
jg
push
int
adc
mov
movsl
loop
jmp
sub
ja
sbb
bnd
aad
aaa
push
lds
repz
push
and
lods
or
icebp
add
mov
hlt
add
xor
les
inc
fs
insb
fbstp
pop
jle
js
lahf
mov
jb
pushl
xchg
mov
xchg
push
jg
push
popf
jmp
xorl
sub
sbb
mov
rcr
in
push
shll
pop
push
ljmp
jb
adc
leave
jecxz
inc
out
lods
sub
lea
hlt
test
adc
mov
pop
clc
out
sbb
pop
bound
lcall
mov
sbb
mov
mov
and
jnp
push
jns
push
cmp
fiaddl
mov
or
lcall
mov
push
inc
pop
and
cmp
xchg
adc
or
addr16
pop
xor
sbb
int3
test
jns
xor
fiadds
out
loop
xor
popa
mov
jbe
pop
das
jl
enter
mov
rcr
mov
or
enter
mov
std
push
daa
addr16
push
mov
stos
scas
es
jne
fidivl
lret
movsl
xchg
outsl
sub
mov
fmul
pop
lea
or
xor
inc
in
pushf
ret
imul
imul
pop
sub
idivl
dec
pop
sbb
sbb
out
pushf
xor
pop
loopne
loopne
xchg
jo
cwtl
das
test
push
jae
push
sbb
or
jg
or
inc
pop
mov
sti
jbe
movsb
push
ljmp
cmp
cmpsb
out
loopne
test
pop
push
repnz
loope
mov
or
jo
dec
daa
int3
fisubrs
sbb
cs
daa
mov
add
movsb
push
insb
mov
push
mov
jbe
ds
pop
add
cltd
xor
jne
mov
and
xchg
and
out
sahf
and
cmpsb
jnp
push
jp
sub
stos
xor
in
jne
inc
xor
icebp
adc
add
lahf
and
lret
push
and
hlt
push
cmp
aad
jge
pop
pop
test
push
mov
push
mov
mov
idivb
int3
pusha
movsl
xchg
pop
jnp
and
mov
mov
sub
sub
jbe
mulb
sub
xlat
push
or
lahf
fiadds
sbb
stos
adc
xchg
jp
adc
out
cmpsl
mov
ljmp
mov
ret
push
or
or
aaa
cmp
icebp
jb
jmp
dec
add
jne
or
jbe
pop
sti
xchg
pop
addr16
mov
clc
sub
inc
into
andl
and
or
imul
pop
insb
cltd
jl
test
xchg
mov
mov
xor
outsl
sahf
pushf
mov
sti
fwait
jge
std
jmp
popf
ss
repnz
outsb
xlat
mov
sbb
pop
sub
pop
jle
iret
cmpsl
inc
jge
push
sub
mov
stos
xlat
mov
add
je
in
shll
mov
pop
aaa
test
sti
mov
sbbl
and
push
loope
cmc
sbb
lods
lea
or
push
mov
adc
loope
data16
cmpsb
sub
or
mov
fidivs
jae
jbe
je
cmpsl
jge
loope
xchg
push
push
mov
add
fwait
je
sbb
sub
xchg
hlt
cmp
push
mov
ret
divb
mov
repnz
sahf
or
push
out
ljmp
adcb
mov
fisttps
adc
push
mov
addr16
mov
scas
mov
movsb
or
pop
sub
jne
pop
pavgb
pop
push
andl
push
fwait
mov
pop
ljmp
push
cmp
push
pushf
push
leave
pusha
test
pop
pop
mov
jo
and
mov
dec
pushl
xor
fstpt
pop
mov
mov
and
nop
sub
sti
inc
xlat
xor
mov
jno
ja
sti
push
or
test
xlat
push
das
xchg
sub
lods
push
inc
movsb
sub
and
push
lods
addr16
imul
push
mov
add
xchg
sbb
icebp
movsl
xchg
inc
popf
les
insl
test
xor
fbld
cmp
adc
dec
and
xchg
dec
cmc
test
or
das
push
flds
sbb
mov
jbe
iret
mov
sbb
loopne
jecxz
cmp
stos
mov
mov
jo
xor
nop
sub
pop
pop
inc
sbb
call
add
fdivr
xlat
mov
fidivl
xchg
sub
pop
imul
and
pop
test
jno
outsl
inc
popf
lods
jns
jp
push
and
test
dec
xchg
sub
mov
sbb
rorb
aad
sub
movsb
mov
out
and
cmp
inc
jp
jb
stos
add
cld
fstpt
mov
xchg
call
int
scas
sbb
fidivrl
sub
outsb
fists
imul
movb
fstl
push
testl
fsubrs
sbb
xlat
add
divl
add
dec
xchg
outsb
repnz
shl
cmp
push
stos
repnz
cmp
dec
xlat
test
mov
stos
fisubl
je
lock
lret
xchg
pop
daa
aaa
mov
mov
sbb
sub
push
je
xorb
or
pop
xor
jmp
sub
pop
xor
shr
xchg
roll
fistpll
hlt
insb
fbstp
data16
add
sti
push
jne
xchg
mov
xchg
xchg
mov
mov
cmp
sub
jb
xchg
dec
enter
pop
sbb
arpl
xchg
loop
int3
push
iret
jb
les
mov
int3
mov
cmp
fdivrs
dec
aad
outsl
jg
pop
sub
pop
notb
insl
out
movsb
repnz
or
shr
xchg
popa
in
push
aad
mov
sub
or
les
and
inc
jge
scas
ficomps
push
jmp
in
dec
dec
fs
dec
lret
mov
cli
xchg
sbb
jnp
cmpl
das
cmp
aam
fistpl
popa
leave
adc
and
or
jb
pusha
mov
mov
adc
ret
fsubr
cmpsl
add
imul
dec
sub
sarb
jns
pop
xlat
sub
push
xlat
scas
rcrb
dec
xor
xor
orb
sbb
dec
sub
shll
add
stos
pop
adc
or
out
loop
xchg
shrl
into
ljmp
add
test
push
and
add
lret
push
add
jo
sbb
jne
adcl
in
inc
cltd
xchg
sarl
xchg
or
cld
jns
cmpsb
fbld
popa
iret
pop
adc
mov
cmpsl
scas
xchg
pop
lret
jae
cmp
out
inc
or
pop
dec
clc
jl
adc
or
cld
cmpxchg
lret
lods
insl
mov
mov
push
jne
fsubs
inc
mov
shlb
aas
push
sub
in
inc
push
xchg
stos
nop
stc
pop
jmp
lods
scas
imul
ja
pop
outsb
mov
scas
and
pop
and
js
jns
hlt
scas
movsl
fucomip
jnp
or
das
pop
lcall
clc
sahf
sbbb
inc
js
fidivs
pop
popf
jb
pop
imulb
and
int3
mov
cmp
and
push
pop
imul
in
iret
fiadds
dec
cmc
not
pop
outsl
in
aaa
adc
push
loope
gs
pop
mov
jne
mov
clc
mov
xlat
mov
adc
dec
push
scas
inc
mov
scas
cmp
imul
fisttps
push
lds
inc
pop
jno
test
sarl
or
jl
dec
push
sbbb
pop
out
mov
insl
and
fwait
jo
int
addr16
or
rolb
shlb
cmp
shl
xchg
jnp
mov
in
sbb
cmp
frstor
in
xchg
push
pop
push
mul
sti
daa
jo
pop
lret
out
push
scas
and
cli
mov
push
lcall
inc
add
cmp
jecxz
sti
fnstsw
nop
sbb
xchg
cmp
sbb
mov
mov
in
fnstsw
or
mov
sahf
movsl
lds
ss
out
lds
vhaddps
xor
push
jb
lock
mov
inc
enter
jb
lret
push
xchg
and
rcr
and
xlat
mov
cmp
scas
mov
jnp
pop
jbe
adc
push
xor
test
pushf
scas
xor
cwtl
movsl
ja
testb
cwtl
sub
mov
je
xchg
xor
jmp
and
pop
push
sub
adc
dec
xor
xchg
pop
push
push
dec
xchg
jbe
push
cmp
pop
insl
int
int3
fcomps
mov
cmp
fsubrl
cli
and
je
lock
shrd
jge
lock
xchg
mov
pop
stc
scas
dec
aam
sahf
out
shr
dec
mov
push
into
adcl
dec
pop
shrl
cmp
lahf
push
xor
jge
icebp
popa
and
fwait
xor
sub
push
lcall
sahf
or
xchg
dec
in
mov
out
std
adc
out
mov
dec
adc
pop
pushl
push
cld
lcall
in
pop
fst
sub
test
out
add
fisttpl
int3
xor
pop
add
insl
mov
push
imul
mov
add
mov
push
mov
dec
aaa
xchg
lods
in
cmp
sub
hlt
push
or
cwtl
mov
ficoml
or
popa
and
fwait
xchg
ret
hlt
push
inc
adc
sbb
lahf
lods
int
bnd
out
pop
cltd
push
movsl
and
pop
ja
jmp
fisttpl
rcl
mov
repnz
outsb
test
sbb
fcomps
repnz
xchg
stc
nop
add
cmp
pop
in
xchg
jg
leave
adc
aad
sub
int3
dec
aam
hlt
add
es
pop
xchg
daa
and
mov
bound
roll
lcall
sahf
or
jbe
mov
xchg
jecxz
add
ret
jl
outsl
sub
filds
rcll
sbb
sbbb
bound
mov
mov
out
inc
data16
jne
adc
pusha
pop
sti
fwait
mov
xor
cltd
in
xchg
xlat
jp
popf
ret
shll
adc
push
xchg
xchg
andnps
iret
mov
dec
xchg
lock
push
in
out
mov
clc
xchg
inc
pop
add
andl
pop
ret
jle
dec
sub
mov
repnz
aam
rol
faddl
imul
popf
push
inc
and
xchg
aam
scas
xor
ds
loope
in
cltd
loop
push
je
push
or
xchg
in
outsl
xchg
out
jbe
nop
popa
jmp
jmp
loopne
call
jmp
jmp
es
adc
das
dec
hlt
sub
or
inc
pop
nop
movsb
stos
xor
sub
pop
add
imul
push
outsl
cmp
pop
push
out
bound
sbb
xchg
movq
cmp
test
sub
mov
loope
sahf
adc
pop
jno
jge
sub
pusha
andb
dec
pop
in
andb
out
mov
loope
mov
sub
and
add
stc
or
addr16
fidivs
into
shrl
lods
pop
jne
mov
ljmp
push
es
pop
pushf
movsb
sti
xchg
lcall
jb
mov
cmp
jno
sub
pmullw
sbb
push
and
sub
jecxz
jl
ret
push
inc
push
pop
dec
pop
inc
push
fstps
mov
imul
ret
outsl
mov
rclb
mov
jnp
movsb
and
repz
aas
dec
inc
mov
cmp
packsswb
jle
adc
nop
pshufw
pusha
push
jb
adc
ljmp
ret
jns
mov
clc
iret
jns
mov
test
sahf
scas
push
xchg
cmp
mov
mov
cmp
pop
sub
cmp
add
fs
insl
cmp
fwait
and
dec
cmpsb
mov
add
sub
push
push
lcall
inc
fcoml
in
mov
xor
xor
jnp
mov
add
sbb
cmp
pusha
xlat
outsb
xchg
jmp
cmc
inc
sbb
mov
xor
addr16
test
cmp
xchg
lods
and
inc
xchg
adc
mov
and
xchg
or
scas
mov
sub
loopne
test
mov
data16
mov
sub
jle
mov
popa
sbb
test
dec
jge
dec
clc
and
cs
sarl
pop
in
jno
or
call
xchg
or
nopl
pop
imul
jns
lcall
inc
xchg
js
adc
in
popf
mov
mov
dec
ret
hlt
pop
seto
push
adc
sub
push
dec
loope
repz
outsb
sahf
clc
mov
pop
insb
or
sub
mov
push
fimull
arpl
xchg
adc
sbb
jo
or
test
jg
pop
repz
rcrb
dec
mov
clc
cmp
lock
js
cmpsb
xchg
aaa
pop
out
dec
push
mov
hlt
adc
cmpsl
adc
lcall
sub
dec
data16
mov
fcomi
dec
fmul
lcall
aam
popa
sbb
pop
push
bound
cmp
ljmp
movsl
inc
push
mov
xor
frstor
xchg
mov
xor
js
and
out
mov
pop
cmp
sti
and
jae
push
ret
mulb
int3
or
pop
in
dec
cwtl
fldl
pop
dec
je
cmpb
and
inc
mov
out
test
mov
jb
rorb
dec
add
xor
fiaddl
lods
ss
inc
cmp
xchg
xor
mov
insb
inc
xchg
push
jb
pop
and
sahf
ja
sbb
adc
sbb
pop
pop
enter
jecxz
repnz
aam
dec
movsl
xchg
in
lods
cmp
sub
dec
push
cmp
outsb
test
jge
stc
mov
lcall
cwtl
inc
or
jbe
xchg
adc
sub
pushl
mov
notb
lods
sub
shlb
pop
out
add
dec
icebp
insb
arpl
aad
dec
xor
stc
xchg
ficoml
cmp
shlb
cmpsb
jge
push
and
movsl
fnstsw
push
adc
mov
popf
popa
ret
or
mov
pop
sub
inc
push
and
pandn
xchg
xchg
fbstp
inc
pop
data16
std
mov
jbe
dec
xor
or
lret
es
ret
xor
xor
inc
pop
inc
and
and
xchg
mov
push
push
xchg
dec
mov
mov
aad
and
or
mov
jns
pop
adc
pop
jo
jl
adc
pop
aaa
testl
jne
shl
inc
icebp
mov
fdivrl
arpl
rcl
inc
push
push
mov
out
xchg
aas
mov
and
enter
lret
cmp
cld
xchg
cli
pushf
pop
insb
rorl
dec
ljmp
scas
std
pop
mov
in
outsb
fbld
popa
jo
cmp
xchg
and
pusha
mov
data16
jmp
jecxz
mov
xchg
or
mov
pop
out
inc
popf
dec
fistpll
sbb
push
or
mov
xchg
sahf
adc
mov
inc
sahf
fidivrl
xor
and
iret
int3
subl
ficomps
add
mov
cmp
jae
add
xor
fisttps
lcall
and
and
gs
mov
enter
dec
xchg
stos
mov
in
sub
sub
repnz
mov
xlat
loope
inc
test
push
push
ret
loope
or
xor
dec
shl
push
lcall
mov
or
pop
sbb
push
jae
jnp
in
nop
call
adc
imul
lock
inc
clc
test
ss
pushf
jg
xor
jmp
push
and
mov
lea
mov
popa
fdivrl
jle
add
sub
fdivr
mov
jg
mov
adc
push
mov
imulb
pop
ret
pop
pushf
pop
jmp
rcrb
outsb
scas
dec
imul
mov
or
aas
les
adc
sarb
xchg
dec
adc
xchg
inc
cltd
jp
jb
mov
mov
cld
das
shll
jmp
sub
mov
lods
stos
addr16
jge
jge
dec
pop
rcrb
cmp
fwait
push
xor
pushf
lods
loop
out
push
sbb
fidivs
adc
mov
cmp
pusha
enter
roll
lds
imul
jnp
inc
inc
sbb
xchg
add
add
movsb
fwait
mov
sub
mov
fimuls
and
pop
jns
fsubrs
and
mov
add
push
arpl
into
and
sbb
mov
dec
lods
mov
adc
in
xor
xor
daa
inc
and
inc
into
push
cwtl
mov
std
loope
dec
dec
mov
cmp
subb
jne
pop
test
sbb
push
jb
stos
mov
dec
sub
mov
fsubr
cmp
cmp
sub
out
and
xor
jmp
stos
into
rcrb
ret
idivb
imul
icebp
movsl
pusha
adc
push
xor
or
mov
dec
clc
and
cmpsb
jg
add
push
insl
sub
movsl
ds
pop
push
pop
sub
sbbl
xlat
pop
dec
enter
inc
sub
mov
add
lods
sub
mov
cmp
fsubrs
call
and
loope
je
and
mov
scas
jle
fwait
outsb
jp
push
std
aam
repnz
fnstcw
daa
inc
mov
pop
jb
insb
inc
sbb
cmp
ja
aaa
adc
and
decl
cmp
js
pusha
iret
xchg
sub
nop
fstl
push
imulb
inc
mov
js
sbb
mov
dec
mov
cmpsb
lock
cmpsb
and
or
cmc
mov
sbb
mov
add
pop
and
mov
pop
cmp
aas
push
int3
arpl
pop
xchg
adc
push
lahf
scas
pushf
dec
or
andb
jecxz
int3
pop
movsl
cmpb
xchg
mov
stos
sbb
into
push
dec
lock
testl
push
jns
fbld
aaa
lock
stc
popa
jb
pop
xchg
loopne
cmc
jg
test
sub
push
push
cmp
fldt
popa
lods
xlat
or
xor
cli
pop
enter
mov
fidivl
mov
mov
ret
hlt
add
lcall
cwtl
mov
ret
mov
ljmp
adc
testl
stos
mov
pop
imul
pop
pop
outsl
pop
aaa
xchg
mov
mov
pop
adc
mov
jge
mov
out
lret
xchg
mov
aaa
pop
fs
add
mov
push
movsl
stos
icebp
cmp
fildll
or
mov
jnp
or
loope
lahf
out
pushf
jae
mov
cli
ds
addl
and
mov
lret
movsb
xchg
aad
inc
add
outsb
push
jno
faddl
xchg
pop
mov
fidivrs
add
pop
dec
jle
cltd
pop
pop
lea
pop
cmp
out
stc
out
scas
cmp
cmp
addr16
xor
out
gs
jne
jne
inc
int3
fists
push
cltd
inc
lea
sahf
jne
lods
shlb
mov
adc
sahf
stos
jns
cltd
xor
addr16
or
out
push
loopne
xchg
jo
cmc
or
test
and
xor
std
ljmp
cmp
fildll
pop
pop
sbb
pop
ret
mov
ds
jb
mov
out
inc
sbb
or
jno
or
mov
pop
psubb
push
test
or
jo
add
dec
popa
icebp
icebp
fsubrs
push
imul
sbb
mov
ret
jae
das
mov
inc
pop
loopne
repz
aaa
ds
daa
pop
add
mov
imul
popf
mov
pop
aas
lea
push
mov
loop
sahf
push
popf
inc
fdivrl
inc
rcrl
mov
es
xchg
pop
ret
jne
movsl
cmp
xchg
or
jnp
lods
movsl
fnstsw
lret
imul
push
in
out
push
ja
lea
xchg
jp
mov
or
pushf
jnp
lcall
and
push
ds
fisubrl
imul
adc
es
sti
dec
cmpsb
pop
mov
les
in
jge
ficoms
imul
aam
cld
xchg
cs
or
test
out
outsl
dec
lahf
arpl
inc
decl
sub
data16
ds
xchg
sub
jmp
add
mov
shll
add
iret
xchg
test
popf
popa
outsl
js
aad
sub
in
loop
daa
faddl
sub
aaa
std
pop
inc
add
xor
fcmovb
lret
mov
pop
fsubrl
lret
cld
mov
mov
xor
out
xor
adcb
fisttpll
pop
cmpsl
loop
loop
jns
std
inc
repz
jl
jecxz
push
xor
xorl
dec
bound
cld
lea
cld
mov
cmp
insl
inc
mov
stos
data16
lret
outsb
pop
mov
xchg
lea
test
shl
sti
mov
orb
jo
scas
arpl
push
dec
lods
jmp
into
sbbl
xor
add
pop
jne
and
pop
pop
sub
jp
leave
mov
dec
mov
or
es
xor
mov
sbb
push
es
jae
push
out
and
pop
pusha
add
aam
push
mov
pop
out
out
clc
inc
cmpsb
or
dec
xchg
js
in
imul
out
daa
cmp
flds
pop
shl
pop
xchg
mov
adc
fcmovb
daa
or
fsubl
ds
ds
lods
outsl
inc
cmp
out
rclb
push
inc
sub
inc
lret
inc
stos
inc
mov
mov
addb
pop
lock
test
sbb
mov
lods
add
fidivl
test
rcrl
stc
nop
jnp
dec
divb
ret
sub
call
cmp
cs
pop
iret
mov
jo
mov
sub
mov
repz
mov
in
out
mov
cmp
popa
sub
repz
imul
mov
mov
sahf
sub
nop
js
out
dec
out
rcr
in
mov
cmp
or
lods
add
popa
cmp
aam
pop
xor
fcmovb
int3
jne
sbb
jmp
scas
je
sbbl
in
ret
cs
xchg
mov
fst
mov
jne
add
push
loop
outsl
push
das
sahf
sbb
or
push
movzwl
add
fisubs
pop
adc
test
popf
cltd
xchg
repnz
in
xchg
xchg
mov
incl
sahf
sbb
push
rcll
lods
jle
pop
gs
cld
sbb
sbb
and
stos
gs
aad
das
inc
inc
sbb
inc
jae
out
add
popf
push
mov
cwtl
cmc
mov
push
ss
pop
je
jne
loopne
test
fisubs
aad
sub
cvtdq2ps
lds
mov
mov
push
out
mov
or
test
and
pop
pushf
imul
dec
hlt
lret
sti
test
xchg
daa
pop
push
cltd
pop
stc
dec
mov
sub
cmp
into
sbb
and
push
out
outsl
ret
jo
ljmp
mulb
adc
add
xor
test
aam
imul
in
push
mov
inc
psllq
fidivrs
lods
push
imulb
shr
cmp
shrl
inc
fldl
cs
out
loopne
pop
cld
movsl
test
sbb
stos
jle
jmp
push
out
cld
loope
aad
jne
add
sarl
gs
test
add
aad
das
call
fst
push
addr16
lea
dec
lret
scas
in
mov
mov
cmp
dec
dec
pop
scas
cmp
sbb
push
pushf
stos
dec
mov
sbb
jl
pop
push
jne
std
push
ss
mov
pop
in
adc
test
mov
adc
lods
lods
das
stos
cld
xchg
adc
adc
inc
dec
add
fdivrl
testb
and
cli
sbb
pop
xchg
push
mov
les
jp
ds
sbb
fistl
adc
iret
inc
shr
inc
leave
arpl
mov
fstp
jo
sbb
jl
dec
imull
rcr
jbe
dec
aad
fwait
cmpb
fbld
int
andb
gs
insb
sbb
xor
test
or
fidivs
mov
xsha256
cmpsb
pop
fst
insl
pop
imull
mov
push
pop
push
pop
fnstenv
scas
push
pop
test
lds
pop
test
call
test
add
pop
lret
mov
pop
lods
sahf
mov
or
jg
ret
jp
das
sub
xchg
mov
xchg
pop
stc
mov
jnp
inc
adc
push
xchg
mov
push
pop
inc
sub
and
fcomps
jae
sbb
iret
jae
cmc
mov
jns
sub
fcmovnu
pop
lods
inc
cmp
push
je
pop
or
loopne
cmp
push
xchg
lcall
mov
scas
cmp
mov
mov
xchg
stos
sbb
jne
mov
mov
xor
inc
cmp
sahf
lock
lods
imul
inc
sub
rcrl
test
mov
lea
mov
sub
cmp
andl
dec
rorb
xchg
xchg
add
cmp
cmp
scas
out
test
insl
mov
mov
jl
outsl
push
or
loopne
test
decb
sub
dec
out
jo
cmp
jmp
loope
aaa
xor
sbb
fbld
mov
xor
mov
cmpsl
add
adc
jnp
pop
jo
repnz
add
adcb
push
jb
out
mov
add
and
dec
dec
sarl
sbbl
insb
push
ret
mov
push
lahf
inc
pop
xchg
lea
fistps
push
out
xor
mov
or
sbb
or
adc
xchg
sbb
or
add
dec
out
aad
lret
push
outsl
push
xor
lea
xchg
xchg
leave
and
movsl
or
sub
sarb
dec
aas
aaa
insb
mov
clc
push
pushf
repnz
cmp
inc
daa
mov
scas
psubd
int3
stos
and
push
sub
xlat
hlt
push
push
fisubl
mov
mov
and
add
vmovupd
mov
aas
loopne
iret
nop
fadd
sbb
test
mov
add
rcr
adc
popa
ljmp
mov
movsb
nop
enter
fdiv
imul
xor
adc
lds
out
and
mov
xchg
imul
cmp
or
clc
dec
fldt
mov
daa
nop
insl
and
jbe
mov
push
aaa
xorb
cltd
mov
icebp
js
es
push
lret
or
xchg
out
add
dec
filds
pop
cs
xchg
jne
scas
ret
xor
cmpsb
imul
mov
mov
sbb
sbbb
xchg
nop
push
mov
stc
push
jle
mov
int
cmp
dec
int
xchg
loopne
pop
inc
jno
fnstenv
fistpl
scas
push
aaa
xchg
into
mov
int
rorl
cli
or
cmp
in
sbb
into
popa
hlt
pop
shrl
mov
mov
and
sbb
and
es
mov
cmp
cmp
push
das
adc
dec
cmp
test
mov
push
sbb
insb
sub
imul
aad
dec
cld
and
pop
lods
adc
ret
cmpsl
cmp
popa
stc
xchg
mov
in
roll
pop
xchg
test
mov
daa
sti
das
pop
and
or
add
insb
xchg
mov
xor
mov
mov
and
cmpsl
inc
inc
fnsave
cmp
in
lahf
insl
fdivr
sbbb
adc
mov
loope
icebp
insb
sti
lock
jge
add
ret
loope
or
in
jbe
mov
add
pop
add
jbe
psadbw
push
dec
movsl
fbld
mov
xchg
sbb
inc
fdivrl
imul
push
jae
jmp
ss
or
inc
dec
xchg
push
fisttpll
scas
and
js
js
ret
sbbl
outsb
sub
stos
push
leave
cwtl
jecxz
lret
test
cmp
mov
mov
mov
cmc
dec
dec
fcomps
lds
pop
bound
add
mov
mov
cmc
xchg
mov
dec
sub
or
mov
cmp
and
and
stc
mov
cmp
xor
dec
fbld
xchg
push
fldl
mov
mov
xchg
sbb
fsubs
nopl
fstps
lds
outsb
movsl
xchg
sub
nop
xorb
cld
xchg
stos
and
std
xchg
outsb
inc
xor
daa
sbb
sbb
iret
fldcw
push
repz
insl
push
push
ljmp
cmp
insl
out
mov
jecxz
add
mov
push
rcl
lret
js
daa
stos
mov
dec
adc
push
loope
lcall
sub
and
repnz
adc
or
inc
dec
dec
addb
int3
push
leave
pop
fstl
in
mov
mov
xor
lds
and
mov
out
imul
jns
fisubrl
cltd
sub
xchg
in
inc
loop
xchg
mov
pusha
jmp
sub
mov
pop
flds
in
mov
sti
fsts
mov
inc
mov
push
sub
cltd
stos
xlat
ljmp
dec
jnp
rcrl
mov
sahf
fdivrl
inc
push
in
sbb
mov
jp
pop
ja
inc
in
xor
push
xchg
xor
outsb
cmp
stos
jne
lods
push
sub
aam
pop
aaa
dec
xchg
fdivrs
movsb
scas
mov
sbb
sbb
int
xchg
push
jne
or
mov
lret
cmpsl
mov
dec
push
or
mov
cwtl
jnp
addl
jno
cmp
cmp
jb
inc
movsb
cmp
xchg
add
mov
ret
rolb
jmp
cmc
movsb
hlt
push
lahf
out
jg
jmp
adc
cld
jge
mov
mov
xchg
subl
ret
pop
aam
lea
testb
fildll
jecxz
mov
stc
testb
out
mov
fnsave
mov
xchg
test
pop
cmp
outsb
inc
popf
out
cmp
or
push
js
mov
add
inc
test
stc
shll
xchg
daa
adc
pop
cwtl
xchg
and
jno
je
ret
xchg
inc
fucomi
or
dec
mov
dec
scas
iret
add
mov
lock
inc
loop
add
sbb
push
test
or
mov
sbb
insl
cmp
sub
mov
dec
scas
adc
stos
mov
clc
push
jo
add
or
das
mov
rorb
sub
pop
add
rdtsc
cmp
ja
lret
je
ret
sbb
rclb
shlb
leave
push
jge
sbb
push
dec
xor
mov
lock
jp
loopne
xor
addr16
pop
dec
aaa
mov
xchg
repz
push
push
xchg
xchg
mov
sub
sbb
icebp
int3
xor
repnz
sbb
int3
ds
shlb
pop
pop
bound
sub
bound
jbe
mov
test
outsb
pop
push
les
sub
addl
push
mov
out
adc
or
xor
cmp
or
mov
inc
movsb
mov
xor
cwtl
push
bound
aam
test
std
mov
or
int
push
jno
lcall
cmp
push
sbb
add
lock
lock
xchg
sub
mov
cmpl
adc
ss
stos
xor
cmpsb
icebp
inc
jg
dec
cmp
test
or
aam
sub
cmpsl
push
lds
cmpsl
sub
xor
jle
xchg
daa
ret
mov
loopne
cltd
lretw
out
xor
lods
dec
mov
clc
mov
push
add
xchg
adc
xchg
xor
adc
orb
pushf
sub
test
test
movsl
mov
push
cli
test
out
fsubs
dec
je
jp
push
cltd
mov
stos
cltd
cwtl
je
call
push
lock
sbb
mov
pop
shlb
xor
fxch
or
or
arpl
sahf
mov
lds
insl
dec
sub
fcomps
pop
arpl
pop
xchg
pop
jecxz
jno
sbbb
scas
sub
sbb
adcl
clc
cmpsl
push
xchg
addr16
dec
push
pop
cs
xchg
in
fdivs
inc
or
sahf
cmpl
xor
loop
pop
sbb
mov
jnp
mov
rcl
sub
pop
pop
sahf
ds
jns
xchg
jno
repnz
xchg
dec
cmpsb
cmpsl
int3
push
jb
mov
in
inc
dec
loope
hlt
xchg
pop
loope
cmc
divl
sarl
notb
sarl
fiadds
cltd
lcall
fwait
cmpsl
and
shlb
cmpsl
int3
icebp
and
mov
lret
jo
std
test
xor
xorl
call
adc
jnp
test
cmpb
pop
lret
push
call
xchg
xchg
inc
push
test
lods
ret
imulb
inc
std
or
or
insb
adc
shlb
pop
add
adc
or
cmpsb
push
ret
les
ret
cli
jle
mov
out
xor
out
popa
or
cs
nop
inc
sbb
xchg
nop
out
pop
loope
lock
mov
or
dec
pop
shrb
pusha
jg
rcr
sub
lret
push
mov
lcall
int
fldl
push
jmp
cltd
outsb
outsb
std
dec
popf
rcrl
outsb
push
ret
jns
outsl
stos
pop
dec
stos
jb
imul
sarl
mov
addb
fnstsw
int
stos
cmpsb
sbb
test
dec
test
ljmp
push
jne
dec
pushf
dec
jo
inc
imull
mov
xor
xchg
int
pop
int
adc
movsl
push
mov
insb
ljmp
ja
fsts
fwait
aas
loop
jp
stos
mov
dec
xor
adc
iret
push
gs
mov
iret
dec
popa
push
loope
jl
inc
and
out
pop
push
or
jl
xchg
mov
in
xchg
cmp
mov
hlt
fcoms
ljmp
dec
push
inc
pop
xchg
cmp
mov
hlt
mov
inc
in
mov
mov
rcrl
lds
inc
bound
dec
into
push
loop
xor
lret
out
stos
loop
adcb
jp
adc
shll
sahf
sub
and
mulb
dec
inc
sub
adc
cmp
sbb
in
inc
mov
cmp
dec
pop
mov
cmp
sbb
int
pusha
ss
jmp
test
add
cmp
pop
jno
mull
mov
ljmp
adcb
mov
xchg
add
mov
test
movsb
fistpll
push
pop
xor
pop
in
pusha
dec
xor
notl
dec
xor
out
aaa
je
sti
xor
js
sbb
add
pop
stc
xor
xor
xchg
in
fimuls
xchg
push
inc
and
jno
sarb
ret
hlt
or
loope
popl
jno
pop
sub
sbb
rcll
hlt
bound
jle
adcl
lods
sub
adc
dec
xlat
mov
sbb
enter
addr16
sbb
fcomps
mov
add
pusha
in
fs
add
leave
add
cmpsb
mov
and
push
into
sbb
jge
dec
out
mov
lds
and
add
push
adc
inc
ror
gs
mov
cmp
jl
pusha
mull
push
jle
sbbb
mov
mov
push
pop
xor
add
std
loop
cmpsl
pop
das
lds
mov
dec
mov
mov
ret
mov
mov
fstp
outsl
aam
mov
in
dec
sbb
mul
imul
sbbb
xor
idivb
add
ja
dec
insb
hlt
cltd
sarl
out
mov
mov
data16
push
xchg
pop
test
sbb
call
pop
cmp
mov
dec
movsl
xchg
jnp
insb
and
loope
mov
pop
scas
call
inc
and
pop
sub
jl
jle
sub
push
sbbb
gs
int3
mov
lret
pop
in
cmp
shll
add
push
or
lcall
adc
lret
cwtl
test
and
in
ffreep
xchg
dec
stos
xor
faddl
out
mov
rol
pop
fwait
pop
loop
jmp
sub
mov
divl
push
xchg
jmp
pop
xchg
dec
stos
xlat
and
inc
popf
gs
imul
fistpl
xor
dec
adc
cmp
push
call
xchg
fwait
hlt
mov
mov
aas
jl
ljmp
dec
mov
lds
fimuls
mov
push
mov
cmp
sub
lds
sub
xor
dec
fwait
adc
orl
and
fadds
cmpsb
jecxz
mov
pop
cld
mov
outsb
xchg
aaa
xchg
push
loop
rcrb
outsl
add
ficompl
sbb
insl
add
or
xor
add
pop
jnp
arpl
jns
ret
int
or
js
mov
inc
out
dec
push
mov
and
pop
je
int3
cmpsl
xchg
jg
dec
push
movsb
in
or
out
jmp
cwtl
das
pop
out
add
jnp
jns
outsl
jle
or
cmp
jb
pop
test
pop
inc
sub
sbb
sub
shrb
mov
imul
xchg
mov
dec
test
and
popa
pop
imul
out
cmpsb
lock
mov
dec
push
or
mov
mov
xchg
inc
inc
cs
insl
lcall
sub
mov
into
mov
inc
mov
cmp
jb
out
cmp
das
lock
jno
mov
stos
aad
aas
in
pusha
xchg
into
ret
movsb
cmp
or
lock
mov
pop
pop
insl
inc
in
shl
test
push
xchg
push
adc
add
jp
jno
inc
mov
pusha
adc
sub
xchg
lcall
xor
cld
lcall
in
clc
jb
sahf
scas
mov
mov
xchg
add
ja
mov
adc
vcvtsi2ssl
cmp
out
and
mov
adc
inc
dec
mov
mov
nop
dec
inc
shl
push
dec
repnz
shrl
dec
and
xchg
mov
test
shlb
rolb
xchg
add
lea
mov
and
enter
jno
shl
pushf
push
fistl
sti
pop
nop
cwtl
sub
xor
mov
cmp
mov
mov
jl
add
ljmp
add
xchg
gs
lds
out
das
dec
mov
jp
jne
orl
jo
lss
lock
loop
jmp
or
xchg
cmp
pop
mov
mov
loope
sbb
pop
mov
loope
ja
iret
xchg
xor
xor
push
xchg
and
cmp
shrl
aam
push
mov
or
cmpps
mov
icebp
gs
mov
pop
jns
call
movsl
sub
dec
data16
loop
mov
pop
mov
gs
sbb
dec
cmp
jle
sbb
sbb
insb
dec
fisttpll
lods
stc
aam
xlat
add
sub
push
xchg
mov
mov
in
icebp
mov
bound
mov
mov
pushf
outsl
xor
shlb
mov
arpl
ror
cltd
mov
mov
mov
mov
inc
pusha
inc
add
xorl
jmp
cmp
sbb
mov
mov
sbb
lret
pop
repnz
sub
xchg
ja
pop
fsubrl
repz
and
dec
push
repnz
add
xchg
adc
fs
push
aas
dec
adc
xchg
lods
xor
test
outsb
inc
jmp
mov
xchg
xchg
jo
jno
popf
lret
xabort
jae
sahf
mov
and
mov
cmp
adc
repnz
or
pop
mov
xchg
mov
mov
add
cmp
les
imul
inc
add
mov
lret
jb
iret
loop
shlb
sbb
adc
mov
ja
push
xchg
fiaddl
xor
sub
loopne
xchg
push
shrl
fwait
cwtl
dec
cmpsb
enter
cld
xor
repnz
sbb
sub
sbb
in
push
xchg
push
dec
fbld
lea
call
adc
mov
fcompl
mov
es
pop
xchg
xor
add
push
aad
bound
xor
pusha
adcb
aad
fcmovnbe
movsl
cmpb
jo
iret
mov
cmpsb
or
imul
fnstsw
mov
inc
inc
pop
out
pop
out
lea
jbe
je
adc
adc
xchg
das
mov
push
sahf
adc
dec
jns
and
xchg
loop
lods
pop
jno
add
std
popa
add
mov
pop
mov
push
pop
dec
into
aas
in
test
ds
dec
cmp
sbb
data16
mov
jo
jb
ds
addr16
clc
fdivs
mov
loopne
push
adc
inc
cs
icebp
pop
inc
icebp
and
scas
push
js
mov
jno
dec
mov
xchg
in
negb
push
pcmpgtb
repz
das
lds
sti
lret
or
sub
adc
shl
sub
push
insl
dec
cmpsb
cmp
mov
dec
inc
push
stc
cmp
pop
push
inc
sub
jns
out
inc
jmp
push
in
and
jo
add
nopl
mov
adc
pop
js
dec
ret
push
jl
inc
pop
and
inc
loopne
dec
pop
push
mov
shlb
adc
hlt
orl
dec
xor
shrl
loopne
dec
xchg
sub
mov
pop
adcb
dec
loope
jae
bound
dec
cld
dec
scas
xor
outsb
daa
add
sub
pop
xor
and
test
loop
dec
adc
fwait
test
js
insl
adc
mov
mov
jg
stos
pop
jle
jg
js
pop
xchg
hlt
push
ret
jle
mov
mov
filds
jg
mov
cmp
loop
loopnew
movsl
add
and
sbb
cwtl
cmp
push
lds
push
jbe
inc
add
pop
into
in
or
and
and
mov
cmpsl
inc
sub
or
dec
sub
sti
aad
sub
xor
mov
test
push
aad
dec
jecxz
cmp
jecxz
and
xchg
pusha
rorl
push
clc
je
sub
dec
das
xchg
mov
addr16
adcl
and
and
xchg
ds
dec
inc
or
enter
cmpsb
dec
push
mov
lods
pop
pusha
pusha
insl
xchg
fdivl
push
pop
mov
sahf
rcrb
mov
lahf
pushf
es
rolb
cmp
xchg
xchg
mov
xor
sarl
mov
inc
fwait
jo
xchg
fldenv
mov
mull
adc
hlt
mov
sbb
fnstenv
in
andl
push
roll
pusha
fisubrs
jg
lret
bound
xor
mov
popf
push
lods
xchg
jp
ljmp
test
fistpll
stc
nop
das
mov
dec
test
mov
es
push
pop
loopne
clc
cli
cmp
cmc
call
cmc
pop
stc
add
shrl
add
insl
and
cmp
mov
lods
jg
push
push
imul
mov
outsl
loop
pop
leave
int
dec
push
cmc
cmp
ds
sub
or
and
rorl
push
jne
shlb
aam
jge
shrl
push
mov
mov
cwtl
jmp
add
xchg
pop
add
and
inc
xchg
cltd
scas
mov
adc
push
jecxz
lret
je
in
mov
mov
aaa
lock
and
orb
popf
stc
int
add
ljmp
mov
dec
shll
movsl
push
sub
sub
cmc
mov
and
mov
xor
jl
das
add
jnp,pt
addr16
insb
inc
or
mov
inc
lret
adc
cli
and
push
sahf
xchg
jb
stos
jb
jl
clc
mov
xor
repnz
outsl
push
call
or
aaa
inc
and
push
dec
stos
mov
sub
push
jnp
or
orl
fidivl
dec
push
sbb
push
jp
shlb
mov
nop
cmp
pusha
shl
addl
fwait
push
and
pop
movsb
data16
mov
sub
iret
das
adc
dec
push
jo
push
sbb
mov
imul
and
icebp
fisubrs
push
jbe
lret
in
sbb
push
push
xor
stos
and
sbb
dec
addr16
xchg
push
sbb
in
or
in
scas
mov
and
xor
pop
xchg
and
add
mov
out
out
jns
jno
dec
lcall
sti
add
aam
dec
push
lds
cli
push
jne
pop
ss
xlat
in
popa
sbb
ljmp
and
dec
arpl
stc
pop
xor
mov
dec
enter
sub
dec
jbe
dec
xorl
and
int3
mov
gs
push
in
add
fs
fwait
stos
mov
sub
add
xchg
mov
push
leave
les
in
inc
inc
fdivl
insl
push
das
sbb
enter
loop
outsl
ret
cmp
into
rcl
lock
mov
push
mov
dec
negb
mov
xchg
sub
test
inc
arpl
sbb
mov
test
add
fstpt
fs
pop
add
dec
adc
mov
mov
mov
aaa
rolb
icebp
shll
jnp
pop
mov
outsl
mov
arpl
iret
sub
push
sbb
jne
cmp
addr16
aam
jl
ss
imul
mov
push
xchg
les
sub
dec
sbb
mov
push
in
aaa
sbb
inc
push
fdivr
xchg
and
aaa
mov
xor
fists
nop
cmp
daa
adc
outsl
jecxz
sbb
mov
push
mov
loopne
cmp
cmpsb
test
ja
popa
test
dec
adc
hlt
and
adc
lods
jl
or
cmp
dec
fnstcw
enter
pop
mov
lret
rcll
lahf
inc
sahf
test
mov
movsl
mov
fbstp
lret
dec
add
data16
xchg
or
xor
mov
sub
xlat
xchg
daa
orl
test
scas
or
mov
mov
iret
orl
rcrl
adc
test
cmpsb
pop
loop
mov
sbb
jae
jbe
mov
sub
push
jae
repz
mov
and
add
shrl
inc
test
mov
fwait
out
add
mov
and
inc
inc
adc
push
cwtl
mov
arpl
inc
pop
inc
fsubrs
mov
mov
out
mov
cs
int3
js
fcmovb
push
or
xchg
aas
outsb
out
mov
out
mov
aad
in
loopne
and
xor
loope
fimull
sbb
repz
dec
outsb
adc
dec
push
inc
int3
insl
jg
sbb
xor
jnp
pop
sahf
clc
dec
testb
loop
pop
clc
movsl
xchg
add
sbb
pop
dec
xlat
fnstenv
xor
and
repz
xchg
shlb
clc
push
out
sbb
les
test
mov
xor
xorl
fwait
xor
insb
push
inc
cmpsb
outsl
inc
bound
lock
test
pop
xchg
into
test
add
inc
insb
sub
lcall
or
lods
push
pop
mov
adc
or
data16
pusha
adc
jns
and
push
clc
and
nop
ja
and
imul
xchg
and
shlb
mov
aam
pusha
xchg
aas
dec
ret
inc
dec
aam
in
fwait
outsb
xchg
iret
push
frstor
shrl
xchg
test
mov
mov
fnstsw
jnp
or
fisttpl
xorb
mov
loop
jo
pop
es
ret
arpl
scas
inc
ds
xor
pushf
push
inc
out
inc
fwait
leave
out
pop
push
imul
into
je
adc
in
inc
pop
xor
mov
jg
testl
or
push
cmpl
jle
dec
adc
aas
mov
andl
scas
lea
push
mov
pop
out
sbbl
add
mov
mov
lds
xor
lods
and
pop
or
xchg
popf
sub
es
pop
xor
pusha
cld
mov
das
icebp
imul
clc
pop
ljmp
sbb
dec
or
pop
adc
xor
pop
idiv
ja
pop
push
int
aam
add
xor
arpl
ds
int3
inc
ljmp
addb
addr16
or
inc
into
mov
push
lahf
popf
dec
fcmove
sbb
xor
xor
shl
test
ret
adcl
fldcw
mov
fisubs
enter
jle
xchg
inc
inc
mov
and
sahf
data16
jne
and
adcb
hlt
mov
pop
cmp
or
push
ss
outsl
inc
pop
jle
cmp
push
stos
ds
sbb
stos
ret
fucom
fsubrs
or
sub
std
xchg
pusha
idiv
push
decb
adc
dec
and
xchg
sub
std
sahf
movsl
cmp
add
xchg
mov
loope
lret
sti
push
xchg
mov
iret
dec
mov
idivl
mov
pusha
dec
sarb
scas
inc
jmp
dec
into
subl
in
push
cmp
icebp
jp
gs
pushf
dec
daa
mov
nop
rcll
lods
sbb
scas
push
inc
jg
sbb
lea
ljmp
pusha
mov
or
pminsw
imul
xchg
jg
mov
call
or
subb
repnz
int
dec
hlt
cmpl
lock
lea
sbb
xchg
insl
clc
jge
mov
sbbb
xchg
ret
and
cmp
fucom
add
sub
test
xchg
lret
aam
out
test
xor
lret
jle
push
cmp
ss
imul
loop
imul
mov
cmp
shrl
jmp
jns
in
out
cmpb
xchg
dec
mov
movsl
into
cld
icebp
into
sub
or
aad
out
xchg
dec
loop
es
mov
dec
cmp
int3
mov
mov
xor
in
or
adc
and
or
jecxz
fcoms
or
lods
push
or
jl
call
jl
jecxz
lcall
orl
push
pop
test
int3
repnz
xor
ret
inc
cld
ror
adc
pop
lret
dec
cmp
mov
add
cmp
push
inc
xchg
sti
and
out
xchg
shll
xor
adc
popf
mov
cld
sub
pop
aaa
and
pop
and
and
inc
jg
aas
scas
jo
dec
jnp
imul
cmc
lahf
icebp
bound
cltd
sub
and
push
stc
cmp
sub
bound
int
pop
push
repnz
aam
mov
dec
dec
fistpll
mov
fisubrs
mov
sub
sub
pop
lret
test
shrl
xchg
movsl
arpl
push
mov
push
mov
push
or
cmp
iret
pop
sbbb
outsl
xor
mov
xor
sbb
jl
xor
pop
mov
popf
mov
jecxz
imul
cmp
or
xor
xchg
sub
xchg
aad
push
push
adc
or
xchg
mov
push
cmp
popf
cli
test
ret
repz
dec
pop
loop
xor
add
in
test
test
or
pop
and
enter
into
loope
into
je
jl
test
mov
mov
xor
inc
add
fcoml
and
jns
add
dec
fldt
or
inc
jns
repnz
jbe
lods
inc
dec
sbb
lret
scas
dec
cwtl
cmpsl
push
sub
outsb
sub
jl
notl
mov
adcb
xchg
dec
jnp
lcall
fcmovbe
roll
nop
or
cmc
popa
push
or
inc
int3
mov
sahf
jmp
outsl
add
adc
jne
xchg
sbbb
cmc
inc
movsb
out
aam
adcb
sub
mov
mov
cmp
inc
out
stos
aas
lods
cli
or
pop
jo
pop
js
mov
sub
sub
pop
das
jmp
pop
icebp
xor
ret
popf
inc
mov
inc
jle
and
fisttpl
add
cs
jb
movsb
xor
std
mov
cmpsl
sbb
aas
repz
mov
cld
cmp
sti
xchg
ret
jnp
imul
orl
push
dec
std
icebp
bswap
ds
lock
out
addr16
decb
cmpsl
aas
imulb
sbb
addr16
loope
or
ficompl
mov
jnp
add
cmp
pop
ss
mov
add
out
movl
cli
fcomps
jp
nop
jbe
pushf
sub
sbb
data16
mov
or
loope
and
inc
xor
aaa
lret
and
outsb
into
in
aam
es
popf
insb
js
inc
jmp
fisttpl
pop
stos
sub
jae
cmpsl
push
jno
and
sbb
cld
inc
leave
xor
into
fldl
dec
aaa
out
or
push
in
jb
daa
sub
inc
adc
push
out
lea
icebp
insb
shlb
push
cmpl
hlt
xor
imull
jmp
cli
push
xlat
arpl
fs
nop
push
bound
xor
jb
cmp
sbb
enter
jmp
mov
adc
cli
and
sbb
and
push
loopne
pop
mov
add
and
dec
fisttps
andb
xor
xor
jle
je
adc
lds
imul
in
adc
pop
icebp
pop
mov
adc
fmulp
outsb
addl
sub
test
sbb
dec
dec
insl
xchg
jne
testl
mov
es
fnstsw
cmp
pop
repnz
les
pop
adc
subl
mov
pop
push
jmp
and
xchg
cmp
jge
adc
lods
xchg
mov
xchg
cmp
xor
adc
nop
out
cli
xchg
and
dec
bound
mov
arpl
sub
and
fisubl
jg
in
xchg
inc
lcall
dec
int
mov
jae
fs
fstps
cmp
sub
pop
les
or
jne
stos
pop
test
sarl
push
jecxz
dec
sub
dec
aam
jle
or
push
push
rep
test
push
insb
or
ret
insl
mov
test
mov
sub
or
and
bound
push
pop
jge
mov
faddp
or
clc
jmp
jp
add
lea
hlt
mov
aad
add
fsubrl
inc
push
aam
and
and
sahf
push
xchg
push
jmp
sti
and
adc
insl
rcr
fimuls
imul
push
fdivl
rcrl
cltd
negl
adc
call
andl
int
sub
jne
pop
test
dec
loope
push
cmpsb
add
sbb
jp
cmp
push
test
nop
push
xor
mov
mov
push
mov
ror
add
lcall
cmpsl
hlt
into
ljmp
mull
ds
imul
hlt
mov
cltd
sub
mov
movsb
cmp
in
mov
push
xchg
std
xor
shrl
sbb
mov
jge
lret
frstor
cltd
std
mov
mov
stos
and
jecxz
pushf
addr16
pop
push
push
fdivl
and
cmpsb
push
and
push
lods
leave
inc
dec
fbstp
cmc
test
fcomi
enter
por
in
loope,pt
rol
repnz
adc
mov
cld
and
mov
pusha
mov
mov
imul
fnstsw
mov
cs
push
aad
xchg
mov
mov
mov
xchg
test
mov
cmc
mov
cmp
sahf
sti
xchg
es
xchg
dec
or
ja
mov
lods
mov
fcomps
fstl
loop
sub
adc
xchg
dec
lods
aam
cld
imul
and
or
movsl
dec
iret
push
lret
cmp
push
sbb
sahf
jmp
sbb
sti
jb
add
out
mov
rep
dec
data16
imul
push
add
repz
arpl
mov
cmp
int3
ljmp
loopne
xor
push
mov
divb
popf
jmp
mov
out
mov
in
std
jg
xchg
xchg
sbb
enter
jbe
lret
cmp
mov
inc
sti
loope
js
sub
std
inc
cmp
cmpsb
inc
or
lahf
mov
jb
or
lcall
popf
shr
xor
cmp
add
mov
push
fcoms
dec
or
filds
das
push
jg
js
leave
pop
pop
add
inc
bound
fsub
stc
idivb
test
lods
ja
cs
loopne
sub
movsl
lods
lds
sbb
jle
test
in
and
movsl
jle
mov
ss
jg
ret
imul
gs
mov
jle
xchg
mov
pminsw
xchg
sub
adc
mov
or
inc
and
loop
sbb
mov
loopne
adc
gs
pop
mov
rcl
rol
pop
xchg
in
int
ljmp
int
inc
fstps
xchg
dec
sbb
pusha
clc
add
cli
xchg
shll
jg
push
and
popf
xchg
mov
mov
stc
sbb
jae
dec
std
push
inc
fbld
mov
and
imul
cmp
bound
mov
push
xchg
add
inc
imul
roll
repnz
test
sub
in
out
shll
inc
inc
shlb
inc
xchg
je
lret
outsb
inc
or
pushf
xlat
or
inc
std
stc
test
pop
stc
xor
out
clc
mov
cmc
pop
push
and
adc
icebp
movsl
and
iret
loope
in
cmpsb
pop
mov
pop
xchg
mov
je
jns
cmp
fisubrs
out
jno
out
or
adc
hlt
or
in
and
lock
inc
lock
je
pop
fnstsw
cld
lret
mov
and
push
fistl
cmp
or
es
insb
clc
sub
ja
mov
mov
gs
or
loopne
sbb
popa
ja
inc
out
jb
add
mov
cmp
stc
fldenv
insb
mov
inc
add
into
divb
mov
cltd
push
push
pop
adc
pop
rcl
ret
dec
je
cmp
mov
xor
cmp
outsl
pop
dec
push
insl
cmp
mov
jae
jns
filds
setno
pop
mov
out
xchg
aam
inc
pop
add
dec
pop
or
cmp
jecxz
pop
imul
insb
pop
mov
and
sti
mov
sub
in
call
into
mov
pop
dec
mov
pop
sti
ja
insb
lea
aas
push
lds
popa
cmp
popa
scas
or
mov
adc
lcall
aad
ss
shlb
cmpsb
loope
sub
aas
in
call
mov
not
push
push
and
cmc
inc
and
inc
aas
fdivrs
or
repnz
pop
adc
push
xchg
adc
mov
cltd
dec
rcr
mov
pop
pop
push
fmulp
sbbb
std
mov
ss
lcall
rcll
outsl
stos
es
mov
xchg
mov
push
jae
ret
mov
cmp
push
cmp
and
pop
push
testl
pop
js
sub
call
cmp
push
or
mov
ss
xchg
adc
outsl
loop
mov
out
int
adc
repz
int
sub
mov
call
int
inc
into
scas
add
adc
mov
jns
xchg
sub
mov
dec
pop
sahf
cs
xorl
mov
sub
xor
mov
xor
push
cmp
ret
sub
dec
in
icebp
mov
lahf
pop
data16
test
lods
adc
daa
mov
add
ret
push
aam
push
cmp
inc
addl
fidivl
fildl
iret
push
mov
les
jb
mov
fldl
mov
push
xor
jbe
pop
push
or
mov
std
push
and
mov
es
repz
stos
and
sbb
mov
stos
call
and
lods
idiv
pop
ss
aad
or
jecxz
daa
mov
out
and
xor
xchg
pusha
push
sti
lock
test
loopne
aaa
repz
test
xlat
pop
lahf
push
out
and
mov
ljmp
xchg
and
mov
push
int3
inc
or
fisttpl
int
arpl
clc
adc
sti
stc
cmp
test
cld
sub
dec
inc
shll
mov
add
dec
jns
out
ret
or
jp
mov
decl
and
mov
pop
sbb
scas
xchg
mov
dec
clc
cmp
aad
adc
jmp
in
lret
cmp
and
cmp
ds
sbb
imul
mov
lret
xor
jo
and
lahf
scas
aam
andb
test
mov
push
out
cmp
divb
scas
mov
int3
mov
std
pop
adc
shrb
insl
mov
or
mov
cmp
push
fnstenv
ja
arpl
nop
lcall
push
insb
enter
out
out
pop
xor
adc
jb
sub
nop
cmp
pop
mov
push
pop
out
stos
cmp
ja
out
leave
loope
mov
adc
and
xor
in
arpl
pop
fwait
xchg
scas
ljmp
int
int3
push
and
mov
adc
jo
xor
lods
cmp
insl
jnp
iret
gs
sti
mov
mov
jl
rol
inc
xor
subl
and
repz
jg
sbb
cmpsl
lcall
movl
jge
mov
cwtl
mov
int3
je
xor
adc
push
frstor
fs
testl
and
mov
or
test
sbb
push
mov
mov
ss
xor
add
iret
xchg
push
push
aad
mov
lods
dec
das
mov
or
xor
sbb
xchg
mov
cmp
out
xchg
mov
cmp
leave
lea
fists
adc
mov
sub
fsubp
sbb
arpl
pop
or
movsb
jbe
mov
add
mov
adc
rcll
rorl
dec
dec
js
icebp
xchg
mov
push
push
fistpl
xchg
pop
ss
repnz
push
and
fiadds
insl
push
aas
sbb
sub
pop
inc
adc
outsb
js
mov
in
out
stc
clc
mov
or
push
jmp
data16
mov
pop
ljmp
sbbb
out
push
cs
inc
dec
xchg
jle
movsb
cltd
out
pusha
leave
fnop
xor
jbe
lds
jle
test
dec
mov
pusha
mov
mov
adc
push
insl
iret
js
add
sti
and
or
outsl
pop
cmpsb
sbb
adc
mov
mov
inc
xor
xchg
fcoms
pop
int3
std
inc
lahf
outsl
sti
into
push
sbb
ret
enter
mul
in
cmp
aad
cs
or
xchg
cmpsb
cmc
stos
mov
sbb
cmc
pop
pop
add
imul
pop
lock
pop
and
cmp
les
outsb
jge
dec
push
out
aad
mov
xor
sbb
adc
pop
mov
fucom
push
dec
mov
mov
xchg
lock
out
out
cli
cs
mov
or
test
inc
fcomps
in
add
pop
cmp
mov
into
xor
lahf
dec
or
es
push
push
cwtl
add
mov
aas
mov
pop
fnsave
roll
imul
mov
ds
push
xchg
les
imul
stos
add
sub
add
test
scas
dec
cs
add
cmp
cmpsb
in
sbb
iret
fldt
das
je
aad
data16
mov
popa
cli
daa
adc
sahf
imul
int3
sub
leave
mov
ret
sub
lods
jnp
mov
into
ds
mov
jo,pn
lds
mov
movsb
inc
dec
sub
pop
jle
into
ja
add
insl
add
lods
add
or
xchg
jg
arpl
mov
jle
sbb
push
scas
jae
jmp
je
jo
call
js
jmp
pop
xchg
ret
pop
sbbl
or
in
ja
add
jnp
cwtl
ret
mov
lock
test
sub
xchg
sti
in
clc
pop
mov
mov
cwtl
dec
xlat
push
pop
outsb
mov
test
outsb
in
ss
add
flds
scas
pusha
incl
cmp
adc
xchg
subl
out
shll
icebp
xchg
repnz
mov
fsts
test
aad
push
insl
lock
inc
pop
cmpsb
xor
sbb
ficoms
jae
cltd
push
sbb
ror
in
xorl
out
sti
rol
fidivl
mov
popa
jns
stos
ljmp
scas
lea
xchg
and
test
in
lret
mov
jno
stos
add
ljmp
sahf
movsb
adc
sbb
mov
insl
addr16
fnstsw
sbb
sub
lods
hlt
mov
jnp
pop
and
repz
outsb
mov
and
cmp
jbe
mov
lahf
hlt
insb
mulb
mov
daa
pusha
xor
int
sub
mov
mov
xchg
scas
sbb
jbe
xor
sbb
or
or
mov
shrb
add
lcall
arpl
push
fwait
cltd
dec
xchg
mov
sbb
cmp
repnz
shrb
pop
insb
xchg
lret
mov
movsb
rolb
cmc
fstpt
sbb
push
adc
or
addr16
or
inc
and
xchg
dec
push
jmp
or
push
sbb
jns
lea
rcrl
mov
iret
cwtl
or
out
mov
or
dec
popa
clc
out
fwait
scas
and
sub
or
fidivs
fsubl
jb
mov
fistpll
push
icebp
inc
fsubl
xor
mov
ja
xor
out
int3
flds
rorb
rorb
out
dec
pop
ret
push
test
fbld
mov
ret
adc
or
in
stos
shll
iret
or
fstpt
inc
jecxz
int
mov
ficompl
lret
out
cmc
adc
loopne
add
mov
stc
push
mov
dec
rclb
ret
icebp
ret
outsl
sub
mov
insb
addb
std
xchg
push
rcrb
gs
popf
inc
mov
cmp
xchg
adc
cmp
cmpsb
sub
aas
test
out
loopne
jle
mov
add
adcl
sub
popf
push
movb
jge
rorb
aaa
roll
jge
add
jbe
aam
les
xor
xchg
jp
mov
pushl
push
add
xchg
and
jns
out
dec
cmpsl
adc
ret
xor
sbb
add
lds
xor
cld
bound
adc
mov
sbb
mov
into
fimull
dec
mov
mov
loop
mov
clc
je
lcall
sti
clc
sahf
adc
inc
fldt
stc
add
inc
pop
dec
and
or
movsl
inc
mov
frstor
mov
jo
sub
into
push
pop
pushf
lock
cmp
or
clc
dec
mov
jg
or
out
sbb
adc
lea
xchg
mov
rcll
mov
ret
mov
mov
shl
cmp
aaa
into
mov
xchg
test
sahf
mov
ret
shlb
lock
loop
popa
fsub
push
stos
ja
cmpsb
cwtl
jecxz
inc
and
fwait
das
lds
mov
push
sub
cwtl
pop
pop
movsl
decb
jg
mov
dec
movsl
xchg
in
cmpsl
adc
out
cmp
andb
leave
and
lds
or
int3
xchg
push
or
pusha
jnp
add
adc
mov
stos
xchg
jg
test
cmp
adc
inc
in
ja
adc
inc
int
in
jge
int3
jne
sbb
xchg
mov
faddl
mov
cmp
pusha
jmp
add
call
push
rclb
subb
adc
mov
xchg
inc
jb
bnd
or
cwtl
int
shrl
xchg
push
mov
cld
aas
push
scas
scas
and
jecxz
popa
lods
xchg
dec
sbb
mov
std
ret
hlt
push
pushf
cli
mov
mov
dec
in
and
pop
push
int
inc
lea
addb
cmpsb
fisttpl
mov
mov
stos
xorl
adcb
mov
xchg
data16
stos
cmp
and
xchg
sub
aas
pop
fidivrs
fdivrl
sub
mov
xchg
and
outsb
xchg
or
pushf
push
pop
shrb
dec
sbb
sub
orl
ret
dec
cmp
es
or
shrb
mov
push
jno
fisubrs
lds
in
das
add
and
sub
pusha
scas
xor
xor
push
in
imul
nop
lret
pop
cmp
dec
jo
dec
mov
inc
aam
adc
push
add
mov
fstl
add
dec
filds
jle
popa
sub
aas
push
iret
dec
call
fldl
xor
inc
shr
sbb
mov
jl
xchg
scas
mov
or
xchg
into
adc
orb
div
inc
or
inc
je
idivb
popa
out
shrb
sbb
lea
cmp
outsl
fiadds
cld
fisubl
mov
pop
lods
sbb
mov
pop
cmp
loop
inc
adc
sub
in
sub
aaa
scas
ficomps
mov
fnstenv
xchg
mov
jb
les
xor
cmpsb
cld
pop
mulb
cmp
sub
jge
das
push
out
lret
jl
stos
mov
and
enter
ja
es
loopne
loop
push
in
jg
ljmp
xchg
nop
setnp
pop
hlt
repnz
lods
out
cwtl
add
stc
jl
xchg
dec
sbb
adcb
or
push
push
mov
lods
or
mov
push
movsb
push
out
jbe
sbb
or
and
sti
pop
repz
pushf
xchg
jge
js
insb
mov
xchg
fidivl
xor
inc
mov
fstl
sbb
fdivrp
jae
push
scas
xchg
push
add
push
nop
mov
int3
in
push
inc
mov
stc
call
ss
and
shrb
call
testb
sti
and
xchg
push
test
mov
pop
fsubrl
enter
into
das
pop
push
mov
push
loop
mov
push
into
inc
push
sbb
or
xor
pop
js
cmp
es
dec
aad
jg
add
or
aaa
rolb
xor
cs
mov
mov
fcomi
aad
scas
scas
movsb
mov
fisubrl
sbb
mov
adc
ss
mov
fdivrp
daa
adc
cmp
and
shlb
cld
inc
clc
inc
xorl
pushf
mov
fwait
xor
sahf
sahf
push
mov
push
enter
ret
mov
mov
sbb
xor
push
cmp
xchg
mov
pop
pop
insl
push
ja
push
mov
mov
sahf
scas
push
mov
ljmp
mov
sbb
pop
out
shll
ss
pop
icebp
mov
das
push
pop
js
and
or
enter
mov
dec
xchg
and
sbb
jb
and
and
xchg
ja
lret
inc
pop
callw
xor
aas
insl
in
push
repnz
ja
push
cmpsb
cmp
and
mov
repnz
mov
rorb
aam
jns
inc
fld
or
addl
addr16
popa
ret
sbb
pop
jns
addr16
xor
loope
pop
test
or
adc
repz
std
sub
add
sbb
sub
jge
cmp
mov
and
fbstp
sbb
or
and
jge
call
cmp
ljmp
inc
out
sbb
sub
pop
jno
shrl
adc
imul
fmuls
rorb
inc
sbb
mov
out
sub
addl
pop
imul
add
jbe
imul
jecxz
cli
aad
lret
sarl
xchg
out
cmp
subl
in
aam
fnstenv
loopne
push
xchg
loope
xor
inc
add
nop
dec
fildll
cmpsb
ret
fsubl
pushf
push
or
addr16
stos
inc
lret
push
imul
scas
ret
sbb
inc
mov
dec
in
jne
mov
js
fstpl
mov
orb
and
and
or
sub
daa
cmpsb
mov
std
xlat
xor
test
mov
pop
adc
mov
or
sbb
jbe
daa
sbbb
xor
inc
fxch
fisubs
fiadds
loopne
xchg
fsubl
in
mov
iret
cmpsl
ret
jle
icebp
pop
sldt
lods
sbb
sub
cltd
fwait
roll
push
ja
les
decb
mov
xlat
test
push
dec
mulb
shll
repnz
imul
push
xchg
scas
and
push
popf
cmp
pusha
hlt
adc
mov
fsubl
cmp
pop
dec
xchg
inc
mov
fcomip
pop
cmp
sub
cmp
dec
mov
adc
push
cwtl
fistpll
pop
push
lcall
dec
mov
dec
roll
push
pop
dec
aaa
into
cmp
adc
das
addr16
jg
mov
inc
testl
push
nop
daa
mov
pop
icebp
xchg
es
mov
push
outsl
jecxz
add
add
push
cmp
aaa
push
int3
push
cmc
ja
mov
jp
mov
xor
sbb
lret
jg
cld
sub
push
xchg
popf
aaa
jno
leave
out
jno
fidivrl
xchg
and
or
test
jns
mov
pop
aad
repz
sub
jecxz
xlat
or
ret
pop
jbe
das
and
mov
cli
push
out
loope
cmp
in
mov
loope
out
push
inc
push
inc
aad
jns
lret
inc
fucomi
js
cmp
jge
mov
xor
jmpw
or
cmp
out
dec
pop
pop
shlb
inc
stos
outsb
test
inc
mov
hlt
mov
fld
loop,pt
jge
imul
ja
or
movsl
mov
out
dec
ljmp
add
hlt
mov
cmpsl
movsb
xchg
sub
xchg
mov
test
les
adc
arpl
loop
adc
jb
leave
adc
cmpb
in
sahf
push
ret
cld
xchg
cmp
adc
lcall
shr
je
add
jecxz
mov
cmpsl
and
test
adc
mov
imul
pop
shrb
push
int
test
dec
fidivrl
loop
jge
inc
cmp
bound
mov
dec
aaa
sub
and
aaa
or
cmp
out
out
and
nop
cmp
pop
adc
sbb
repnz
int3
stos
inc
fsubrs
mov
stc
scas
andb
sub
jo
jp
test
mov
rol
mov
lods
mov
ja
or
push
or
inc
int
mov
jecxz
push
inc
aad
popa
lods
stos
jno
pop
cs
add
mov
dec
call
pop
jmp
push
sbb
cmp
mov
test
in
jmp
ja
xchg
jns
je
leave
jmp
cs
inc
insl
ja
cltd
fldenv
or
mov
push
mov
test
and
mov
inc
ds
aas
mov
push
les
lods
mov
mov
sbb
mov
mov
fsub
pop
out
pop
jno
mov
outsb
popa
inc
cld
dec
push
mov
repz
daa
mov
push
sbb
and
leave
mov
jo
rol
lcall
stos
lea
fmul
clc
inc
mov
or
mov
shll
std
sbb
popa
ds
pusha
xor
pop
mov
rcrb
cwtl
inc
jbe
mov
jge
outsb
add
jp
imul
dec
adc
push
lock
xchg
in
std
jo
call
cvtss2si
mov
pop
mov
divb
movsl
lea
inc
cmc
push
cmp
mov
pop
cmp
mov
inc
mov
loopne
into
es
sbb
add
inc
es
add
add
push
mov
push
mov
ljmp
imul
and
sbb
inc
or
repnz
cmp
dec
pop
mov
test
dec
add
inc
jp
push
ret
fmul
gs
mov
xchg
adc
and
mov
pop
aas
cli
js
out
mov
mov
push
iret
das
cmp
data16
push
push
add
nop
push
popa
outsb
std
dec
mov
call
jecxz
prefetch
or
cli
cmp
jb
mov
mov
push
in
adc
xchg
sub
ret
sarl
xchg
iret
std
dec
mov
or
stc
pop
mov
sti
xchg
push
adc
add
stc
sbb
out
sbb
mov
pushw
test
bound
mov
mov
scas
add
rcr
repnz
icebp
movups
and
sub
mov
aam
outsl
add
fsts
fldt
adcb
jge
and
fldcw
inc
pop
int
mov
fs
adc
adc
mov
sbb
xor
jl
clc
iret
sub
pop
inc
test
pusha
push
fiadds
mov
hlt
pop
popa
sub
lcall
jo
add
cmc
movsl
cmp
testl
dec
mov
pop
dec
loope
push
cld
outsl
dec
jmp
jno
jbe
push
test
mov
lods
add
dec
sbb
inc
lret
in
mov
ret
sub
sub
add
dec
mov
decl
mov
mov
sbb
push
jmp
and
stos
mov
or
inc
mov
jmp
cmpsl
mov
and
insb
and
pop
test
int
repnz
ljmp
push
imul
testb
jbe
cmpsl
push
push
xor
sub
test
sub
jp
dec
mov
fwait
adc
mov
jne
mov
add
cmp
fwait
cmp
xchg
imul
lods
out
and
dec
test
jbe
jecxz
loopne
shr
fs
jns
adc
mov
mov
ror
negb
or
dec
sarl
jno
stos
aas
mov
clc
cmp
mov
xchg
fwait
daa
add
call
xor
cli
in
test
xor
enter
faddl
loop
pushf
stos
shrl
jbe
stos
lds
sbb
data16
adc
inc
mov
push
lahf
xchg
jns
and
jns
jnp
aad
push
and
fs
hlt
pop
and
add
pusha
lahf
pop
mov
pop
xlat
ss
rol
and
sbb
outsb
pushf
xor
mov
and
scas
xrelease
mov
push
sbb
mov
aas
adc
popa
mov
xor
das
jmp
or
cmp
xchg
idivl
gs
sbb
push
adc
outsb
dec
add
mov
jno
repnz
je
shl
std
sub
leave
in
or
cwtl
cmp
fs
inc
js
inc
mov
popf
sbb
jmp
or
pushf
sbb
jmp
into
in
sbb
xlat
bound
or
lret
in
pop
lds
cli
mov
sub
cld
pop
aas
aad
jo
mov
and
jo
cmc
jno
jp
sub
pop
div
xchg
dec
stc
cmp
sub
pop
lock
adcb
setb
mov
adc
inc
sbb
fnstsw
adc
stos
mov
jbe
loop
fmuls
stos
es
mov
push
or
push
aad
inc
lret
xlat
jno
dec
pop
sub
push
andb
std
aam
sub
enter
ss
ret
test
repz
mov
out
int
fnsave
xor
stc
sub
in
ss
das
cwtl
jecxz
cmp
xchg
mov
xor
int
std
mov
inc
pop
jp
mov
sbb
add
inc
jecxz
data16
mov
jb
rorb
nopl
pop
jmp
out
fmull
hlt
sub
inc
fsubrl
inc
cltd
fisubrs
iret
push
mov
mov
sbb
mov
call
adc
int
sub
jmp
mov
inc
sti
jo
adc
sub
xor
in
push
imul
jmp
cld
lods
dec
or
pop
dec
cld
mov
shll
enter
dec
scas
mov
jecxz
push
lods
rol
cmp
scas
lods
sub
xchg
ds
dec
inc
or
lahf
mov
ret
and
cmp
scas
inc
imul
xchg
popa
dec
push
fldl
mov
or
adc
out
test
ja
and
jge
out
addr16
aam
mov
jmp
rorb
repnz
and
xchg
xchg
and
jbe
xor
xchg
inc
jnp
adc
test
mov
add
out
push
adc
les
or
pop
imul
cmpsl
push
sub
dec
xlat
jnp
xchg
push
lock
jns
cmp
pop
sub
mov
gs
add
mov
lods
dec
sbb
orl
loop
xchg
pop
roll
jne
out
jle
pop
sar
jecxz
add
shlb
insb
push
adc
pop
sahf
loopne
sub
mov
add
testl
dec
mov
imul
add
jae
bound
sysenter
or
jmp
jp
shll
xor
std
mov
sbb
in
pusha
mull
mov
outsl
outsb
pop
pop
xchg
outsl
mov
shll
mov
shlb
arpl
aaa
sub
mov
mov
int3
ja
subl
cmp
mov
xchg
in
mov
loope
jae
test
movsb
inc
adc
inc
pop
jg
jge
xor
jns
pop
jge
mov
xchg
out
sub
jmp
jg
popf
scas
inc
dec
and
pop
push
in
jo
fisubrl
ret
lods
js
and
and
xchg
test
cmc
pusha
xchg
jp
movb
dec
mull
fdivl
clc
mov
or
pop
rcll
pushf
ret
pop
and
cli
push
inc
xchg
cmp
cmp
adc
or
negl
jno
out
pop
xchg
popa
push
les
sub
cld
loop
fcomps
xchg
imul
xlat
mov
test
hlt
cltd
ret
loopne
orl
loopne
xchg
jo
mov
inc
test
sub
push
dec
push
movsb
mov
sub
fs
and
in
pop
or
mov
sub
pop
icebp
cmpsb
cmp
aaa
lret
cld
cwtl
std
xchg
or
xchg
sub
mov
add
imul
loope
jle
mov
push
cmc
daa
inc
cmp
xor
fiaddl
or
fmuls
aam
hlt
mov
xchg
sub
outsb
mov
loop
popa
jb
out
mov
aas
aam
pop
adc
mov
jge
test
pushf
lods
insb
sbb
dec
ljmp
and
cmpsb
xchg
xchg
and
data16
dec
cld
or
cli
roll
lea
popa
xor
ret
insb
or
push
jmp
mov
jae
dec
sub
daa
std
pop
xorl
push
ret
sbb
cmpsb
pop
cmc
scas
jo
fldt
jl
ret
pop
mov
and
push
pusha
jmp
in
xor
jae
jne
daa
lret
scas
sub
add
mov
test
or
mov
leave
and
mov
lret
loop
add
inc
mov
push
mov
pusha
or
aad
imul
mov
repnz
xor
mov
les
lods
es
sub
add
add
mulb
mov
cmp
clc
inc
inc
lods
pop
movsb
mov
pop
xchg
jo
aad
sbb
test
mov
xchg
dec
addr16
out
push
dec
cmpsb
push
xor
lds
out
inc
mov
mov
lds
movsb
js
repz
mov
push
jmp
lret
cld
addb
fiadds
adc
aad
mov
add
sahf
xor
das
outsb
xchg
hlt
lret
les
cmp
in
in
adc
jne
push
cmpsl
int3
adc
std
pop
sub
setnp
dec
int
jbe
mov
add
xor
mov
icebp
xchg
dec
mov
sarl
xchg
xor
stos
jmp
push
push
scas
jno
test
mov
adc
adc
xor
xlat
and
xchg
inc
mov
pop
mov
fistpl
xchg
sub
enter
add
cmp
mov
and
xchg
push
enter
je
and
pop
sbb
or
mov
test
das
pop
les
out
push
daa
pushf
adcl
js
xchg
fsubl
mov
in
mov
dec
mov
test
dec
repnz
lods
sbb
loop
jl
out
fwait
iret
test
fstps
adc
fs
add
mov
cmp
cmp
xchg
ret
outsb
gs
jle
or
mov
lds
into
movsb
sti
sarl
ss
btr
push
mov
or
jg
fwait
and
shl
mov
inc
xchg
sub
js
jno
and
loope
mov
aas
dec
aas
movb
clc
inc
sbb
fxtract
mov
mov
xor
lret
in
cmpl
lea
adc
sub
xor
mov
sbb
adc
push
cwtl
mov
jne
lret
cli
stc
ljmp
jg
scas
and
jl
dec
dec
call
inc
ficomps
or
in
push
dec
out
js
call
pop
in
ret
or
mov
sub
xlat
adc
pop
xor
je
mov
jle
or
or
lods
push
inc
inc
and
dec
adc
addr16
rcrl
jns
xchg
js
stos
movsl
fdiv
xchg
jne
xor
push
nop
pusha
push
sti
mov
nop
mov
in
hlt
movsl
lea
test
daa
test
or
jno
mov
js
fldcw
adc
mov
dec
sub
fs
mov
in
jbe
add
or
cmp
cli
loopne
lahf
outsb
mov
ret
imul
adc
rolb
jb
push
xchg
or
scas
std
mov
sbb
lret
mov
xchg
jnp
repz
cmp
sbb
test
popf
jmp
xchg
or
cmpsl
int3
and
clc
push
out
xor
sbb
mov
cmp
imul
testb
inc
push
out
nop
cmpsb
inc
mov
pop
fsubs
jecxz
xchg
sub
jle
cmp
or
sarl
cwtl
sarb
mov
repnz
popa
cmpl
xchg
mov
lahf
sti
shrl
add
pop
mov
jae
in
outsl
addl
sbb
and
bound
lock
mov
xchg
clc
or
mov
enter
ret
sub
pop
icebp
cmpl
fs
js
pop
lods
and
cmpl
xlat
roll
xor
fidivs
out
out
inc
push
jns
mov
mov
imul
push
and
std
aaa
cmc
adc
mov
push
and
aas
shrl
mov
repnz
lret
adc
stos
push
insb
push
mov
jbe
push
mov
add
leave
pop
dec
cmp
xor
sub
gs
sub
jge
ret
addr16
cli
pushf
xchg
add
cmpb
or
lock
aad
sbb
xchg
add
add
adc
sub
inc
lods
fdiv
fdivrs
or
mov
lret
data16
sbb
scas
mov
in
lret
cmp
lea
dec
add
mov
push
lahf
std
xchg
adc
mov
addr16
cltd
jno
leave
sub
fs
icebp
lret
and
sub
enter
in
movsb
and
je
les
mov
push
cmpsl
aas
add
and
cmpsb
dec
adc
mov
arpl
int3
mov
fistps
sbb
adc
dec
and
inc
sub
in
sub
divl
in
jb
jle
popa
ss
div
mov
fidivl
jl
or
out
pop
dec
js
aad
or
jae
xor
outsb
nop
mov
rcl
int3
dec
ret
mov
xchg
out
xor
int3
mov
mov
stos
int3
xor
das
shrb
movl
adc
sti
addr16
addb
jae
les
iret
and
scas
out
cltd
mov
inc
push
leave
test
sbb
es
pusha
ljmp
stos
cltd
test
out
fbstp
inc
pop
mov
cmp
or
aam
js
icebp
shrl
out
xor
orb
jmp
add
ret
push
and
pop
pop
push
iret
dec
sub
nop
fsubl
inc
cmp
vmwrite
daa
inc
dec
ja
push
rcrb
and
mov
push
inc
jno
shl
out
jae
add
cmpsb
sar
arpl
in
clc
mov
pop
push
push
test
fimuls
or
inc
and
sbb
jp
and
jg
pop
sahf
loope
std
push
loopne
pop
adc
mov
xor
dec
mov
lds
xlat
push
adc
notb
mov
jg
nop
mul
dec
gs
rorb
out
cmp
and
lods
inc
mov
mov
jge
push
mov
jne
imul
ss
sub
dec
xchg
pushf
sub
xlat
jb
popl
dec
cwtl
sbb
push
mov
inc
pop
lahf
cli
lods
mov
out
je
cmp
mov
out
sahf
pop
mov
lret
xor
sub
aad
xor
xchg
jo
sub
daa
sbb
fnsave
out
orb
sbb
pop
lret
imul
les
mov
roll
jbe
mov
xchg
jmp
jl
adc
push
mov
cmpsb
fiadds
inc
inc
add
je
adc
test
jl
subl
outsb
sub
sbb
inc
xlat
or
test
mov
cwtl
test
or
adc
std
mov
fistps
mov
cld
jecxz
test
jle
mov
andl
cmp
outsl
inc
in
sub
pop
pop
stc
xlat
dec
in
int3
dec
js
ret
imul
movsb
imul
dec
fldl2t
dec
mov
cmc
filds
repz
jl
fsubrs
cmp
mov
fs
and
sbb
cmp
fisubrl
fnstsw
add
mov
sahf
push
daa
mov
gs
dec
pop
xchg
mov
push
cli
xchg
test
shrl
data16
mov
xor
inc
int3
push
cmp
adc
and
mov
rclb
xor
jb
or
in
stos
sub
dec
scas
mov
rcl
cmp
orb
fwait
jg
test
mov
or
lret
es
mov
hlt
fdivs
sbb
push
movsb
mov
sub
out
xchg
dec
jno
dec
in
dec
pop
xorb
or
dec
stos
xlat
xchg
addr16
cmpsl
jns
std
and
enter
mov
les
cld
hlt
and
gs
inc
mov
pop
fcmovb
popf
sbb
mov
in
js
cld
lcall
in
lret
cmp
mov
shrb
mov
dec
outsl
ss
arpl
roll
cmp
lret
cwtl
std
jno
pop
in
mov
loopne
cld
fdivrs
mov
or
add
mov
shrl
inc
jb
out
or
xor
pop
dec
ds
sbb
rcrb
out
fstl
xchg
das
js
pusha
adc
sub
rorb
xor
sbbb
popa
in
loopne
movlps
lods
nop
cmp
fwait
inc
js
mov
add
push
push
sub
je
sbb
hlt
scas
subl
cs
pop
ret
call
and
mov
aad
jns
push
sbb
pop
and
addr16
lahf
stos
repnz
cmpb
xor
testl
out
pop
mov
pop
hlt
inc
push
out
ljmp
dec
push
add
dec
ss
add
leave
je
mov
mov
test
add
mov
sbb
xor
mov
mov
outsl
test
test
repnz
xchg
rorl
xchg
ret
addr16
sbbb
pop
xor
ret
pop
jno
sub
cmp
cmp
adcl
or
ds
mul
add
mov
jne
pop
ds
jnp
jae
in
movsl
test
xor
jmp
lea
jg
mov
dec
fsubrs
jae
addr16
jno
arpl
mov
mov
mov
inc
out
jp
bound
cltd
mov
add
push
cmp
dec
movsl
pop
sub
std
adc
or
jp
pop
and
push
divl
mov
xchg
dec
pop
cs
enter
int3
loopne
in
adc
and
stos
jmp
and
mov
test
int3
lock
and
rcl
cmpsb
out
cmp
jmp
andb
mov
lods
pop
in
push
mov
add
mov
xchg
sub
leave
jae
repz
js
add
stos
push
sub
subl
out
repz
ds
bound
cmp
arpl
insl
sub
or
jnp
inc
sti
sar
data16
addr16
and
push
js
aas
shl
mov
aam
mov
xchg
insb
jae
movsl
idivl
xor
sub
xchg
lock
iret
jns
or
inc
loopne
out
test
dec
enter
std
ds
sbb
dec
loope
sbb
cmp
add
add
sti
push
pop
jnp
into
test
aad
jbe
popa
and
mov
dec
xchg
dec
adc
ja
ds
cwtl
out
cmc
sbb
mov
mov
ja
and
imulb
mov
push
xchg
dec
mov
int3
dec
dec
sub
dec
push
inc
leave
addb
sbb
adc
pop
inc
mov
pop
fiaddl
shlb
adc
js
imul
jp
sub
ret
push
sub
scas
jno
dec
xchg
dec
cmp
sbb
fsubrs
xchg
les
xchg
es
out
icebp
dec
sub
or
add
stos
jne
gs
mov
jp
rcll
push
cmpsb
fidivrl
sbbl
jne
mov
mov
lods
mov
xchg
cs
inc
movsb
pop
sbb
out
faddl
jbe
fstl
loopne
mov
addr16
ljmp
cltd
arpl
fsubs
pusha
int3
push
xchg
shlb
fisubrl
loop
aas
out
sub
jne
sahf
leave
push
stc
push
hlt
int3
je
sub
adc
mov
gs
push
mov
fcmovnu
jb
mov
stc
cwtl
out
jmp
xchg
shlb
movsb
fistpl
dec
mov
pop
lahf
cmp
sarl
cmp
ret
cmp
mov
or
fwait
xchg
pop
pop
cltd
ror
inc
fnstsw
fbld
mov
mov
fnstenv
ljmp
mov
loopne
sbb
mov
cmp
daa
int
push
jo
adc
shlb
sub
sub
add
push
in
jg
mov
push
push
push
mov
cld
push
xor
stos
mov
xchg
pushf
fmul
clc
push
iret
dec
in
gs
loop
movsl
test
add
sbb
add
pop
sahf
cmovb
cs
pop
jne
and
sub
xor
mov
addb
fidivl
dec
xchg
cmp
dec
pop
ds
decb
test
insb
mulb
xlat
mov
or
cmp
adc
fisubs
inc
cmp
mov
adc
jl
mov
int
rcll
xor
stc
lods
pop
loope
push
xlat
shrb
sti
inc
int3
sub
adc
rorl
mov
add
inc
mov
movsb
cmp
cmp
xlat
int3
arpl
test
subb
outsl
shrl
daa
jne
or
or
call
push
and
xchg
shlb
arpl
not
test
lahf
mov
mov
cmp
sbb
test
cld
fnstenv
pop
imul
sarl
jnp
sub
leave
or
adc
sub
pop
mov
mov
les
mov
shrb
lods
imul
fstpt
jbe
push
popf
jmp
mov
js
cltd
inc
pop
cli
gs
icebp
or
cmp
push
clc
pop
jns
fsts
sub
sbbb
mov
cmc
lcall
jne
insb
insb
stos
in
imul
and
out
lods
hlt
icebp
mov
addr16
jmp
in
cltd
inc
pop
sub
ret
cmc
pop
enter
aas
imul
and
pminsw
scas
mov
cmp
inc
dec
test
cmc
push
jnp
inc
pop
js
out
pushf
mov
lods
fstpt
daa
jne
pop
push
mov
adc
or
cmpsb
and
jbe
pop
fwait
xor
jl
push
adc
rolb
and
sub
and
mov
push
push
push
aam
pop
push
inc
enter
rorb
bound
or
sub
and
adc
add
dec
test
jno
jl
adc
xchg
add
pop
in
andb
cld
jne
cmpsb
inc
mov
mov
andl
cmp
jno
add
adc
ljmp
inc
arpl
push
aas
dec
outsl
xor
js
test
cs
or
dec
fidivl
cld
sbb
add
cwtl
faddl
leave
cs
lret
sub
mov
loope
and
rclb
lret
mov
xchg
cli
mov
popf
cli
sbb
cmp
xor
cmp
addr16
sub
in
inc
ret
sbb
sar
stc
sub
call
or
int3
xchg
mov
mov
roll
insl
add
das
out
pop
jle
pop
xorl
fbstp
pop
movsl
sbb
aad
mov
repnz
sbb
and
fwait
inc
xchg
dec
cmc
xor
jnp
or
hlt
cmp
mov
push
and
sahf
jg
inc
loopne
xor
fcomps
mov
mov
push
sub
jle
mov
pop
out
sbb
roll
je
fistl
inc
in
xchg
repz
xchg
inc
ljmp
pop
adc
xor
es
cmp
leave
insb
fs
sub
hlt
rolb
push
jne
mov
mov
sbb
notb
ror
and
pop
lods
in
mov
push
add
shll
leave
dec
int
sahf
outsb
sub
mov
jmp
cwtl
test
lret
pop
mov
leave
in
or
mov
dec
lcall
inc
fsubl
sti
arpl
insl
addl
mov
int
jge
inc
clc
inc
std
mov
subl
mov
call
mov
xor
lods
fimuls
mov
dec
repz
mov
cmp
aas
mov
lahf
int
dec
fisttps
mov
mov
data16
pop
sti
rclb
imul
jbe
cmp
imul
mov
mov
mov
cmp
cmp
clc
pop
add
call
push
pop
sub
mov
test
ja
stc
xchg
stos
es
sbbb
xor
lods
std
xchg
jb
xchg
jo
sti
scas
mov
insb
loope
notb
aas
adc
cmp
rcrl
lahf
scas
mov
andl
push
sub
loope
icebp
cltd
adc
dec
xchg
lret
adc
lret
cmpsl
and
mov
loopne
out
cld
dec
add
xchg
sbb
mov
dec
cmc
icebp
mov
jmp
fwait
cmc
repz
movmskps
sbb
add
or
xchg
shrb
movsl
mov
cmp
dec
pop
adc
jecxz
mov
iret
or
inc
sbb
daa
and
repnz
jl
ss
pop
test
or
cmpsl
popf
sub
or
imul
sub
cwtl
or
pop
sbb
push
push
test
ficoms
xchg
aas
and
in
sub
cli
inc
push
aad
fists
jbe
mov
mulb
addr16
sbb
and
adcb
xor
sub
dec
push
and
sbb
jnp
icebp
movsl
loopne
inc
adc
imull
js
or
mov
mov
and
daa
mov
fst
or
fidivl
lods
jecxz
pop
push
clc
popf
stos
cmp
and
imulb
int
dec
dec
sarb
push
xor
ss
movsl
int3
ret
sbb
jb
out
cmp
cli
test
pop
aaa
lret
cmp
out
jmp
cmp
loop
pop
sbb
cmp
jb
test
xchg
je
fcom
iret
test
outsl
jnp
inc
sbb
subl
gs
test
pop
xchg
daa
adc
jl
add
jle
and
xchg
push
jle
push
mov
dec
mov
out
jmp
cltd
cmp
je
out
lret
pusha
loope
fbld
aam
dec
xchg
aam
inc
rcrb
into
jb
sbb
loop
xchg
xor
movsb
mov
aaa
and
sbb
mov
xor
lds
and
popl
jb
adc
jb
push
test
push
cmp
mov
inc
xchg
push
cs
loopne
loope
out
fs
jns
mov
ret
and
pushf
dec
and
lret
mov
fadds
leave
pusha
movl
sub
pusha
push
dec
jb
lcall
mov
mov
dec
in
aaa
push
ja
push
mov
add
nop
addr16
jp
or
adc
imul
push
stos
xchg
xchg
shlb
and
stos
incb
out
js
pop
xor
dec
mov
mov
aad
out
out
popa
pushf
mov
cli
test
lret
mov
xlat
sub
sub
out
sub
enter
inc
mov
stc
cmpsl
cmp
fdivrs
or
dec
aad
jne
test
adcb
rclb
jno
mov
loop
mov
xor
inc
jl
hlt
sub
imul
dec
out
adc
dec
dec
int
sahf
sbb
les
ja
and
xor
or
push
mov
pop
cltd
mov
xor
mov
pop
mov
sbb
mov
mov
imul
dec
outsb
mov
sub
or
cmp
mov
lcall
repz
inc
fstpl
cli
ljmp
add
ret
fcmovne
mov
fdivl
mov
dec
scas
push
xlat
mov
addl
aam
ss
pop
mov
xchg
push
mov
xchg
fbld
ret
push
mov
into
sti
fidivs
mov
lock
out
imul
stc
sub
ja
call
mov
mov
jne
xchg
sbb
dec
jecxz
xchg
das
cmp
aas
rolb
sub
lds
jns
cmp
cs
push
pop
aam
mov
inc
cmpsb
dec
das
imul
sahf
addb
cmp
sub
clc
cmp
or
jl
mov
mov
xor
and
add
inc
loop
imul
add
fdivrs
mov
add
test
jns
daa
stos
jmp
dec
out
insl
scas
imul
mov
sub
mov
push
test
mov
dec
aas
call
push
sub
xchg
mov
pop
xchg
xchg
jno
fstpt
imul
cmp
dec
ret
pop
dec
xchg
lret
sbb
push
pop
push
jp
or
and
fidivl
outsb
and
push
lret
rorb
mov
or
mov
sarb
das
xchg
dec
dec
daa
cli
xchg
das
push
das
andl
mov
mov
or
orl
rolb
mov
xor
mov
sahf
push
dec
and
push
das
cmp
les
and
sti
imulb
push
cs
mov
inc
std
sub
popf
mov
dec
xor
mov
das
mov
inc
or
je
sub
push
int3
mov
fdiv
push
pop
xor
and
cmp
pop
imul
inc
cmp
aad
push
adc
pop
repz
xor
lock
testb
sub
push
sub
ss
sub
mov
addr16
mov
xchg
stos
xchg
mov
rcrl
add
jp
or
xchg
mov
sub
lock
dec
add
lods
xor
fimuls
out
lods
into
data16
hlt
pushf
inc
in
adcl
or
or
loopne
sub
xchg
test
sbb
aaa
mov
lock
jb
push
sbb
dec
cmp
js
fs
icebp
adc
arpl
js
shl
cltd
push
push
out
cs
jno
push
test
cmp
das
mov
add
popa
pushf
aaa
fwait
mov
ljmp
lret
push
daa
sti
or
dec
lret
jmp
mov
push
fwait
jecxz
sahf
xor
inc
mov
mov
sbb
out
cmpsl
in
mov
fcomip
insb
lds
insl
loop
adc
push
ficompl
jmp
or
sbb
repnz
fstpl
xor
xor
mov
adc
mov
mov
mov
add
jp
insl
add
inc
push
ja
out
mov
pushf
push
adc
loop
sub
pop
jle
dec
add
sar
mov
mov
and
or
pop
and
sbb
stos
sbb
fdivrl
push
shlb
cmpsb
and
cwtl
or
inc
ds
inc
push
xchg
sub
sbb
jge
mov
in
mov
xchg
xor
sub
iret
adc
arpl
mov
cs
xor
mov
in
and
inc
int3
mov
shr
mov
dec
lods
dec
test
jnp
and
xchg
rcll
push
dec
jecxz
roll
push
outsb
rcrl
inc
push
pop
andl
fwait
imul
mov
cmc
mov
fsub
push
cs
cli
pushf
testl
clc
dec
data16
adc
rcll
pop
test
cli
dec
out
fidivs
push
or
jbe
mov
cmc
loope
add
daa
mov
sbb
das
mov
in
ja
jecxz
and
jl
cli
icebp
daa
clc
push
jge
psubd
jae
jge
into
gs
cli
jne
dec
into
xor
ret
addb
or
test
pop
fwait
mov
loopne
paddsw
push
imul
mov
scas
lods
lods
or
test
xor
dec
dec
mov
dec
ret
lahf
lods
and
jns
into
mov
out
mov
adc
ja
add
mov
fisubs
pop
test
mov
jbe
jl
addb
std
xchg
mov
push
ja
dec
out
push
out
test
repz
adc
adc
in
ljmp
mov
xor
pop
scas
xor
mov
fdivl
ret
lods
mov
ds
cld
stos
subl
jecxz
push
sbb
pop
push
mov
fildl
dec
popa
push
inc
int3
jg
xor
into
orl
into
add
arpl
rcrl
adc
aam
jb
and
and
rorl
mov
fs
ss
lret
dec
jns
dec
push
mov
in
notl
cmpsb
cmp
insb
and
jo
cmp
pop
popf
pop
lods
aas
out
jno
loopne
fs
fisubrs
fadds
push
sahf
fildll
adc
fnsave
push
and
out
out
cli
push
inc
xor
insl
mov
movsl
sub
mov
mov
cmc
insl
cwtl
scas
imul
mov
inc
adc
notl
pop
lods
xor
aaa
and
ljmp
jo
bound
cld
xchg
pop
mov
xor
sub
out
sbb
int3
push
out
pushf
xor
dec
pop
xlat
push
and
xor
pop
or
adc
and
jo
sbb
and
xchg
push
test
movsb
lret
mov
pop
out
cltd
pop
and
mov
push
imul
cmp
cltd
xchg
cwtl
sub
jmp
push
or
xchg
mov
and
adc
xchg
jmp
notb
repnz
pop
scas
lea
lods
mov
sub
jo
xchg
pop
cli
inc
cmp
push
dec
and
test
dec
call
jp
xchg
shll
iret
or
cltd
dec
xor
cmp
xchg
addr16
cmp
mov
xor
js
es
sbb
iret
nop
inc
lds
shll
sub
jle
aas
clc
cmp
movsl
scas
jl
mov
incl
andb
aaa
xor
adc
cmp
fldcw
jne
xchg
sbb
pop
push
push
ljmp
jno
mov
vmovdqa
in
push
fisttpl
and
push
and
push
loop
pushf
ds
xor
arpl
jg
popf
pop
ds
mov
or
inc
dec
arpl
mov
xlat
xorl
mov
loop
iret
ss
mov
xor
scas
jbe
imul
js
dec
xchg
cmp
jmp
cmp
adc
loopne
out
in
fdivr
std
arpl
or
pop
andl
stos
xchg
sub
fs
outsb
cmp
lea
std
adc
negl
adc
cmpsb
push
mov
into
adc
xlat
loop
arpl
jge
push
fwait
xor
je
jmp
nop
push
cmp
push
jo
rorb
push
push
aad
ret
push
icebp
adc
dec
pop
out
incl
stos
mov
sbb
orl
mov
pop
push
shlb
mov
dec
mov
sbb
and
mov
sbb
pop
or
mov
xchg
dec
movsl
push
addr16
lock
shl
push
daa
mov
xchg
sub
fcmovbe
jg
test
push
or
aam
lock
les
test
lret
cmp
aaa
inc
sahf
adcl
in
sub
cld
pop
push
imul
mov
ds
lods
mov
mov
inc
jecxz
add
rcl
push
iret
gs
nop
hlt
dec
out
dec
lds
and
pop
out
pop
mov
frstor
xchg
pop
call
xchg
mov
bound
call
xor
pop
arpl
xor
mov
or
ja
fsubr
stos
push
pusha
xchg
in
pop
aaa
fldt
mov
mul
js
dec
pop
jg
mov
or
cmc
pop
dec
sub
add
jle
lret
test
out
sahf
inc
sbb
mov
push
adc
adc
lcall
cwtl
mov
push
popa
lods
in
inc
lods
in
xor
in
mov
jno
or
outsl
lcall
dec
bound
fmull
lahf
jmp
or
jae
mov
iret
xchg
mov
imul
pusha
jle
in
dec
sbb
adc
mov
lods
cmp
outsl
test
pop
sbb
sub
rcl
fcompl
xor
jmp
cmp
cltd
ret
jg
sbb
dec
mov
push
ret
ja
dec
pop
dec
fisttpll
mov
sbb
mov
sahf
mov
std
orl
shr
mov
jg
scas
cmpsb
lods
push
nop
sub
jb
loope
fs
jmp
sub
rorb
dec
mov
or
mov
xlat
test
or
leave
mov
frstor
stc
add
dec
pop
sbbb
mov
inc
mov
lret
pushf
sbb
xchg
sti
and
addr16
cltd
or
adc
fwait
push
daa
and
pop
add
fisttpl
jle
xchg
bound
cld
add
sbb
mov
bnd
aas
mov
jns
stos
pushf
xor
sbb
pop
or
clc
sarb
ret
and
sub
push
in
test
pop
inc
jl
push
inc
mov
pop
add
cmpb
cmc
xchg
fstps
mov
push
imul
mov
mov
and
xor
ss
push
jp
jp
in
xor
in
sub
les
pop
cmp
mov
fidivrs
in
inc
pop
pop
cmp
fstps
sbb
xchg
sub
xor
stos
and
aas
push
out
jo
mov
sbb
lock
xchg
jg
out
test
sbb
test
mov
xor
test
inc
in
mov
xor
mov
outsl
jecxz
mov
sub
clc
arpl
sub
shrl
inc
orl
adc
scas
cmpl
das
scas
hlt
mov
push
lods
jmp
cmp
lods
cmc
xchg
cmpsb
dec
mov
ret
sub
jnp
mov
sbb
lret
call
mov
pop
xor
repnz
fucomp
aaa
fmull
lret
push
cmc
dec
sub
jecxz
lahf
dec
pop
rcll
arpl
lods
daa
out
out
repz
inc
loope
xchg
inc
or
test
xchg
sub
popf
mov
mov
mov
mov
jnp
inc
loope
mov
lds
pop
pop
jmp
test
inc
stc
push
cmp
jle
jnp
testl
or
dec
pop
lahf
push
sbb
in
mov
scas
xchg
lds
dec
xor
mov
add
popa
adc
popa
dec
data16
outsl
adc
test
addr16
cwtl
test
mov
jnp
hlt
cmp
xchg
sarl
cmp
push
xor
pop
mov
scas
pop
repz
sbb
xchg
push
rolb
sub
lret
xlat
inc
jp
sbb
inc
in
test
call
or
mov
imul
xlat
repz
and
es
adc
ss
int
mov
inc
jg
test
lds
lods
inc
push
test
and
push
lods
mov
pop
sub
xchg
inc
lods
js
repnz
aaa
das
stc
xchg
in
sti
dec
jmp
xchg
push
mov
lea
jae
test
pusha
adc
mov
movb
xchg
rcll
jno
outsl
xchg
dec
xor
cwtl
xlat
jnp
ja
add
xor
je
pop
sbbb
sub
push
xchg
lods
test
pop
je
or
in
in
inc
sbb
nop
or
push
movsl
nop
inc
inc
ljmp
xchg
adc
subb
movsl
mov
xor
iret
pop
push
mov
adc
xor
fdivrl
imul
notl
jmp
jp
hlt
mov
and
int
shrl
jmp
stos
bound
leave
cwtl
xchg
pushf
int
and
push
stc
loope
into
pop
das
out
sti
shll
into
sbbb
cltd
or
mov
cmp
lret
jns
push
add
jmp
or
daa
dec
sub
insb
mov
pusha
mov
xor
imul
adc
shlb
test
xchg
jbe
mov
stc
shrb
stc
and
mov
mov
and
xchg
das
aas
lret
pop
xchg
mov
arpl
pushf
lods
and
and
push
mov
enter
bound
pop
cmpsb
sbb
xor
inc
inc
insl
inc
movsb
mov
mov
loope
lret
mov
mov
mov
jmp
xorl
cmp
fwait
lods
mov
push
sbb
xchg
outsl
jae
dec
sub
cmpsl
out
push
mov
outsb
das
popa
or
push
cltd
lods
mov
fwait
imul
adc
add
cli
out
sub
movl
push
pop
mov
jge
push
outsl
cli
pop
shrl
xchg
rclb
sub
pop
pop
cmc
push
and
pop
inc
cwtl
das
scas
int
fildll
bound
mov
aad
lock
pop
adc
clc
sahf
hlt
rorl
pop
and
jl
xchg
arpl
ret
imul
sbb
std
pop
xchg
jbe
repz
push
mov
je
push
aam
mov
mov
into
inc
cwtl
sub
es
sub
inc
push
jl
iret
mov
sub
and
inc
sbb
xor
cmp
pop
xchg
pop
mov
add
jns
xor
or
es
pop
jge
out
repz
data16
fstpt
nop
jg
mov
loope
and
imul
lret
mov
lods
jle
dec
pop
fstps
add
xor
scas
inc
jb
testb
xchg
divb
cmpsb
stc
push
sub
xchg
mov
ss
push
in
popa
clc
pop
sets
and
mov
dec
call
xchg
add
mov
jp
test
stos
xchg
mov
test
add
test
cmp
mov
loope
test
xor
push
push
and
inc
out
fwait
mov
xor
enter
mov
imull
rcll
cmp
sub
aad
lret
lock
arpl
ja
outsl
jnp
sbb
pop
cltd
add
fbstp
fmuls
mov
sbb
loopne
insl
aam
out
push
cmpsb
mov
dec
aas
testl
addr16
data16
test
xor
cmp
mov
testl
lahf
dec
int3
pushf
cld
scas
push
or
cmp
cmp
lods
lds
pop
push
jo
xchg
inc
xlat
pop
andl
sub
inc
popf
jno
and
sahf
xchg
loopne
lcall
pop
faddl
lock
out
xor
test
add
mov
sbb
and
mov
push
jp
push
fsubl
or
and
cltd
dec
dec
mov
sti
hsubpd
xchg
and
or
mov
xchg
and
sub
cld
ljmp
imul
sbb
or
cltd
aam
gs
negb
sbb
orl
xor
jns
push
add
iret
push
push
dec
mov
insl
sub
data16
adc
movsb
adc
sahf
leave
mov
cmp
add
push
xchg
mov
mov
pop
cmpsl
jns
js
fmul
add
push
fidivs
fnstsw
outsl
cmp
jne
fcoms
add
lret
test
or
shrl
pop
dec
inc
dec
movsb
jge
add
xchg
sti
push
xchg
jge
and
shlb
add
xor
rol
pop
repnz
out
mov
rorb
mov
int
jmp
loopne
mov
jbe
jle
pop
addr16
out
sub
pop
ss
out
jns
subb
push
mov
fcompl
fxtract
dec
sbb
stc
insb
lea
clc
jae
and
out
test
xor
inc
mov
jns
cmp
vphaddbw
or
jb
xchg
out
dec
orl
in
iret
seto
inc
and
mov
pop
jae
mov
fdivs
adc
and
pop
mov
js
cmpsb
jecxz
jns
jecxz
push
popf
mov
pop
sahf
dec
insl
inc
movl
cs
ffree
in
hlt
decb
shl
or
jecxz
push
pop
mov
and
adc
pop
or
ja
xor
js
nop
add
xchg
mov
dec
dec
dec
out
ds
push
push
jmp
xorl
inc
notl
hlt
test
ror
adc
lea
cmp
jae
call
mov
jmp
push
jb
mov
jns
data16
lret
sub
lock
jbe
mov
ficoml
es
cmp
push
mov
std
and
and
popf
xor
dec
cmp
jns
pop
mov
addr16
std
push
inc
mov
in
jno
push
xchg
daa
mov
or
sbb
jge
sbb
in
jns
adc
cmc
sar
add
jmp
and
xchg
xchg
or
mov
es
add
cmc
dec
andl
das
lea
dec
andb
aaa
push
mov
cli
xchg
jmp
pop
mov
and
subb
cmp
mov
and
adc
or
jno
push
xlat
mov
mov
call
cmp
lock
stc
xor
scas
movsb
sub
enter
pop
insl
outsb
lds
imul
fstps
mov
add
jle
nop
xchg
or
and
push
lea
add
sbb
jg
jb
test
pusha
inc
sub
adc
fsubl
inc
push
sub
push
sahf
xchg
dec
mov
jb
enter
mov
aaa
cmp
mov
leave
pop
outsb
push
add
xor
lret
mov
int3
mov
hlt
fnstenv
pop
cmp
xchg
cmp
dec
inc
loop
add
das
std
or
xchg
dec
bound
push
cld
scas
inc
mov
addl
xchg
mov
loopne
and
test
push
loope
or
jmp
sbb
mov
add
cmp
push
leave
jge
out
adc
add
fmull
mov
add
inc
dec
movsb
jae
sbb
inc
sahf
hlt
mov
add
jae
icebp
inc
fsubs
jo
mov
cli
xchg
push
push
xchg
mov
inc
cmc
pop
jbe
cmp
push
and
testl
push
notb
insb
lcall
mov
pop
movsl
pop
daa
or
add
leave
push
int3
xchg
mov
or
ja
and
or
scas
mov
or
jle
xor
jnp
jg
les
mov
stc
push
sub
mov
dec
jecxz
test
mov
xchg
leave
mov
stos
fdivs
push
pushf
xor
out
add
dec
jl
inc
push
leave
sar
test
in
mov
or
aas
sub
or
popa
dec
xchg
sub
fwait
sbb
pop
imul
mov
sub
stos
push
shrb
dec
pop
stos
dec
mov
test
jg
lock
lahf
inc
arpl
roll
sub
lods
sub
cmpsl
bound
xchg
fsts
cmc
ficoml
cmc
movsb
cmc
xor
xchg
loop
xor
and
mov
mov
inc
jne
notb
and
xor
mov
lret
call
and
orl
and
fwait
or
in
stc
xchg
dec
dec
ss
jp
int3
arpl
mov
xor
jmp
xor
dec
ljmpw
adc
push
push
mov
mov
ret
inc
pop
aas
shl
sub
data16
mov
sub
push
gs
mov
jae
xchg
xchg
cmc
push
cli
cmp
pop
xor
push
xchg
sbb
scas
xor
cmp
cmc
loope
jnp
inc
push
pop
out
shr
and
loop
cmp
or
dec
pop
push
push
daa
mov
fwait
loopne
pop
xchg
imul
or
inc
pop
iret
jns
mov
test
std
cli
mov
test
xchg
insb
insb
cli
in
lret
mov
cld
loopne
sub
call
scas
scas
int
negl
addr16
xchg
imul
jecxz
dec
lock
cmpps
pop
repz
mov
cmc
rcll
mov
imul
lret
cwtl
xchg
sub
pop
inc
xchg
dec
lods
xor
cli
adc
ret
cmp
cmp
sbb
inc
jl
loopne
push
daa
adc
fwait
push
js
out
js
fs
pusha
xchg
fwait
jnp
add
jg
std
jno
aas
xchg
sbbl
push
popa
adcb
or
push
xchg
arpl
dec
sbb
icebp
popa
push
and
jbe
dec
sub
jnp
pop
push
stc
xor
cmp
dec
lods
pop
sub
fistpll
shl
mov
lods
sahf
je
jecxz
pop
push
add
jne
das
outsb
adc
fdivrs
imul
pop
and
out
loope
int
sub
scas
xchg
push
xchg
sub
mull
les
push
scas
inc
jb
enter
into
and
lea
jae
icebp
mov
push
xchg
mov
lods
in
outsb
jmp
ja
loopne
inc
pop
jmp
cmpxchg
xor
and
js
aam
or
adc
shl
mov
addr16
cmp
pop
popa
dec
pop
jne
bound
dec
iret
aam
mov
movsl
or
pop
or
fwait
push
insb
sub
inc
sbb
push
xor
movsb
cmp
adc
stos
mov
ds
mov
mov
add
decl
popa
or
dec
data16
pop
xorb
rolb
mov
xor
jmp
std
mov
lcall
pusha
fstpt
mov
cwtl
cmpsb
fwait
jle
mov
loope
jno
inc
cli
xchg
imul
sbb
jne
cltd
jmp
xchg
pop
rcrb
out
pusha
xchg
sub
xor
les
out
dec
loop
pop
jp
add
xor
lods
fsubl
xlat
mov
lcall
aad
lret
cld
sahf
sbb
jmp
inc
in
jecxz
mov
cmp
mov
leave
pop
sub
dec
out
imul
mov
loop
es
push
xchg
push
loopne
sahf
mov
mov
sbb
jl
gs
movsb
addb
sti
push
rcl
scas
enter
daa
shrl
cmp
sub
lods
push
sbb
or
mov
scas
les
dec
xlat
mov
xchg
jnp
push
out
inc
sbb
mov
mov
xor
fmull
dec
lahf
es
sub
sbb
sbb
sarb
loope
push
mov
test
push
sub
scas
cmp
cmc
pop
cmp
pop
and
pop
inc
popa
xor
sub
std
shrb
mov
push
push
sarb
pop
pop
cmp
imul
mov
xor
jns
mov
jge
sbb
mov
push
inc
mov
push
or
pop
inc
adc
pop
aad
adc
ret
leave
push
push
pop
sub
mov
lods
in
stc
jae
aaa
and
aad
fimuls
xchg
jecxz
gs
jae
sahf
testl
jg
and
jb
sub
lock
mov
ss
inc
cmp
test
orl
pusha
or
insb
sub
xchg
push
mov
sub
mov
inc
ret
enter
push
jns
dec
mov
xchg
inc
pop
cmp
loope
cli
rcll
add
fwait
add
pop
aam
adc
ret
gs
jno
xchg
xorb
scas
mov
xor
push
test
movsb
in
cli
dec
cmp
xchg
xchg
mov
jmp
aaa
jge
mov
popf
notl
popl
mov
xor
or
push
inc
test
inc
aad
call
or
movsl
and
mov
arpl
loop
adc
je
sub
xchg
fldenv
mov
push
sbb
testb
xor
push
leave
scas
push
add
adc
push
dec
add
call
lds
fstpl
cmpsb
xchg
shr
in
aam
lea
inc
leave
stc
stc
jo
out
fimull
adc
bound
xor
lods
mov
add
sub
fisttpll
mov
mov
pop
call
shlb
push
icebp
mov
add
mov
cmp
movsl
mov
pop
jo
test
pusha
fcmovbe
clc
nop
rcrl
cwtl
daa
jecxz
adc
dec
and
outsb
popf
xor
sbb
mov
rorb
add
add
mov
push
and
mov
repnz
rcrl
lret
cmp
test
adc
xor
insl
sub
jecxz
sbb
pop
hlt
fdivs
shrb
jne
ret
bound
sub
shrl
pop
nop
sub
scas
inc
mov
int
cmp
push
mov
xor
ret
cmp
mov
cmpsl
adc
mov
cmpsb
add
into
mov
push
insl
adc
sti
xchg
or
testb
ljmp
push
movsb
sbb
jno
mov
iret
repnz
sbb
ds
dec
pushf
in
loope
cmp
mull
add
push
negl
xor
pop
inc
sub
ss
or
fnstsw
outsb
mov
imulb
xor
cli
nop
push
sub
mov
push
repz
repz
mov
jno
mov
out
or
ja
mov
ljmp
pop
sbb
mov
aaa
mov
daa
adc
cli
inc
aas
imul
je
add
xor
dec
cmp
stc
jl
das
cmp
inc
pop
jg
mov
cltd
std
push
js
int
jno
mov
ja
push
jmp
andb
arpl
fadd
sar
outsl
lods
daa
mov
mov
inc
fistpl
mov
jle
cli
push
shll
mov
mov
mov
mov
adcl
fistps
mov
xchg
in
inc
adc
lods
push
sbb
push
stc
sub
sub
daa
out
dec
dec
arpl
fs
ja
pop
lods
out
clc
or
xor
leave
xchg
aam
ljmp
ljmp
aad
add
and
sbbl
and
test
xchg
add
iret
lods
clc
test
iret
sbb
jecxz
stc
or
fwait
mov
movb
je
mov
mov
fucomi
test
stos
xchg
mov
cli
mov
adc
scas
lcall
add
jo
je
pop
subb
dec
icebp
pop
add
insb
cmpsb
cmp
loope
mov
test
mov
xor
mov
cmp
ds
addr16
add
push
popf
mov
cltd
popf
xor
js
inc
in
mov
push
movsb
cltd
push
sahf
mulb
es
mov
jge
in
cmp
push
stc
pop
mov
sbbb
sbb
dec
lds
out
mov
ja
push
out
adc
fdivr
cmp
add
ds
arpl
add
push
jne
icebp
mov
inc
sbb
dec
push
jle
out
jne
int
les
imul
push
mov
nop
sti
jbe
mov
inc
fs
clc
inc
test
imul
add
sti
sub
cmp
in
pusha
out
testb
decl
xchg
fsubrl
movsb
mov
scas
dec
lret
xchg
mov
cltd
pop
and
sub
rep
je
lods
xchg
lods
loop
pop
std
sub
cs
mov
cmp
insl
fcmovne
arpl
mov
or
cli
enter
js
pop
shr
cltd
add
testb
dec
or
pop
pop
push
stos
mov
add
adc
popa
jge
jo
xor
adc
call
push
mov
aam
fnstenv
add
xlat
mov
test
pop
in
rcrb
cs
mov
les
adc
adc
pusha
xor
sbb
pop
sbbl
mov
les
dec
xor
mov
aas
xchg
cwtl
jl
xchg
add
push
clc
jae
jle
vpcomud
hlt
pop
jg
cmpsb
icebp
adc
cmp
push
sub
dec
push
out
cli
dec
inc
arpl
lods
scas
and
fwait
xchg
adc
ljmp
jnp
lods
js
lcall
and
std
repnz
and
ret
jle
in
push
mov
mov
test
iret
popaw
aam
movsb
rorl
call
pop
jecxz
mov
call
mov
enter
and
dec
jae
sub
dec
cmp
fwait
mov
aaa
jecxz
test
jne
sbb
js
lcall
dec
cmc
and
call
adc
sarb
and
cwtl
lods
inc
scas
sub
adcb
mov
jo
loopne
arpl
sub
mov
mov
lcall
mov
jae
xor
enter
ss
stos
mov
int
xor
and
adc
cmp
icebp
xor
pop
negb
test
test
xor
fadd
and
jl
dec
add
pop
out
aad
in
icebp
adcb
cmpb
or
add
and
clc
leave
push
lods
cli
sbb
sbb
shl
and
ret
pop
push
pop
call
shl
fcoms
pushf
add
inc
xor
dec
pop
stos
xor
rolb
imul
cmc
jmp
test
push
mov
push
lcall
or
dec
cmp
aam
insl
jg
dec
or
dec
sub
popa
into
dec
mov
cmp
rcrb
push
dec
sbb
jne
pop
imul
jns
cli
fnsave
and
jp
mov
adc
inc
fnstenv
mov
idivl
dec
outsb
sub
or
int3
add
xchg
sub
jns
iret
jecxz
mov
xor
fildll
scas
repnz
incb
and
cli
cwtl
and
lret
fucomp
mov
flds
mov
ret
test
jecxz
fistps
add
push
cmp
cld
sub
test
add
mov
lret
outsb
loope
mov
pop
in
inc
xchg
pop
repz
adc
xor
inc
mov
and
addr16
fldcw
cmp
idivl
jbe
push
and
fildll
xchg
fnsave
dec
mov
add
dec
mov
cmpsl
xor
mov
test
push
lcall
jae
pop
mov
sbb
dec
movsl
mov
or
bndstx
pop
rcrl
inc
add
mov
lods
sbb
test
mov
mov
jp
lods
negl
fs
cmpb
repz
xlat
xor
movsb
mov
je
add
pop
stc
lea
test
shrl
movl
roll
mov
jge
sahf
js
jl
lods
push
mov
dec
add
aad
and
es
nopl
adc
rcrb
push
add
scas
xchg
inc
popa
cli
cmpsl
popf
mov
sub
shll
add
mov
inc
frstor
lds
mov
pop
and
in
mov
ss
cmpsb
pushf
jg
mov
xor
mov
sarl
mov
loope
fistl
les
js
in
lret
jge
cltd
or
jo
insb
inc
jb
xor
aas
sarb
push
mov
fldenv
push
jae
cmp
sub
outsl
daa
lret
push
jns
or
cmc
andl
jns
mov
mov
lds
int
sahf
lods
outsb
push
gs
jnp
lea
les
std
adc
subl
les
icebp
xchg
mov
mov
inc
push
fsubrs
inc
fstl
lret
dec
push
cmpsb
popf
mov
cs
pop
aam
and
fstpt
sub
jp
and
scas
leave
call
push
mov
sbb
xchg
mov
cmovl
inc
cmpsl
mov
fcomps
mov
pop
push
es
or
dec
es
xchg
push
loopne
or
in
xchg
dec
pushf
dec
mov
scas
push
test
cli
rol
fsubrs
repz
daa
sub
jl
mov
aas
and
push
mov
cmc
pop
jns
ss
pop
stos
push
xchg
popa
movsl
inc
addr16
out
push
cmpsb
or
call
xchg
cwtl
jge
inc
fisubrs
xchg
jnp
ret
stos
lea
sbb
mov
or
test
mov
insl
loopne
pop
mov
fistpll
or
lahf
cmc
mov
and
sub
pop
test
inc
in
std
ljmp
sbb
adc
mov
jno
pop
ficomps
pop
pop
xor
in
cmp
jae
lea
mov
dec
sbb
jp
adc
xchg
push
ret
mov
fs
imull
sbb
mov
aam
mov
hlt
je
inc
mov
adc
cmp
or
mov
loopne
in
adc
lock
rclb
pop
movsb
inc
xor
sbb
jecxz
inc
arpl
jb
cs
popf
add
adc
xlat
fwait
test
xchg
mov
mov
pop
inc
mov
loope
scas
add
call
out
and
adc
mov
lods
sub
js
jl
stos
into
jmp
adc
or
fcompl
mov
push
stos
jmp
mov
arpl
xlat
out
and
pop
fidivrs
jbe
push
lods
and
push
lcall
fistl
cmp
sbb
add
adc
fisttpll
jo
xchg
cmp
out
pushf
dec
je
movsb
pop
mov
push
xchg
aad
movb
xchg
add
testl
sbb
mov
pop
jae
cmp
and
cmpl
inc
rep
scas
inc
xlat
shr
mov
cmpsb
cmp
mov
and
jl
lcall
and
or
inc
mov
fstl
mov
jge
pop
scas
insb
mov
bound
sbbb
dec
add
or
lahf
cmp
and
adc
pusha
mov
jns
or
mov
ljmp
mov
ss
addr16
aaa
int
faddl
popf
add
pushf
jne
fistpl
lret
loop
jl
in
cmpsb
lock
jae
out
pop
lret
adc
subl
test
dec
in
movsl
adc
jns
mov
lock
adc
mov
sbb
xor
movsb
fs
stos
jmp
mov
es
inc
jmp
testb
leave
or
push
mov
jnp
aas
je
cmp
outsl
push
mov
fisubl
stos
lea
icebp
bound
loop
mov
sub
and
outsl
inc
adc
jb
mov
adc
sbb
fisttpll
dec
pop
or
cmp
sub
and
xchg
cli
addl
fsubrs
xchg
mov
push
test
mov
xor
jno
push
cli
push
popf
movsl
cmp
das
dec
dec
stos
mov
sub
inc
jno
mov
mov
arpl
xor
leave
iret
fldenv
dec
mov
int
pop
push
push
adc
fisubrs
ds
adc
and
gs
mov
adc
cwtl
das
mov
mov
lds
and
addr16
pushf
push
test
mov
in
test
fidivrs
lahf
test
scas
sbb
push
mov
out
mov
mov
xor
mov
sbb
mov
movsl
xchg
mov
sar
test
das
mov
int
inc
mov
mov
test
in
test
cmpsl
loopne,pt
mov
push
add
pop
mov
int3
or
notb
mov
in
xchg
cltd
lea
cmpsb
add
and
and
or
mov
cmp
push
or
stos
mov
add
mov
sub
cld
mov
sbb
mov
sub
cmp
and
sub
sub
daa
inc
mov
test
les
and
sbb
xor
cmp
in
cwtl
in
inc
mov
mov
mov
push
jecxz
int3
xchg
jae
lcall
mov
jle
call
mulb
ss
pop
test
addr16
pop
push
dec
push
scas
inc
test
std
adc
arpl
popf
je
push
leave
shrb
inc
nop
test
shlb
sbb
in
push
xlat
outsb
cmp
ds
push
cmc
inc
movsl
inc
dec
fidivs
inc
xor
lock
adcb
aas
cltd
jecxz
pusha
test
jbe
mov
int3
push
sti
xchg
mov
or
stc
pop
ret
or
adcb
fidivrl
cs
sub
pop
dec
lods
jmp
jnp
and
jl
xlat
outsb
mov
insb
rcrl
sub
sub
mov
mov
pop
mov
int
lods
les
push
movsb
les
push
xchg
imul
adc
push
scas
mov
xchg
lahf
jg
mov
arpl
dec
jns
xchg
dec
push
dec
or
outsb
and
dec
dec
rolb
dec
mov
cmp
out
push
sahf
scas
add
testl
insl
leave
sbb
or
cmp
push
push
inc
fisubrs
into
and
fnsave
popa
js
sbb
mov
pop
mov
pop
pop
cli
mov
xchg
ds
jae
cs
stc
sbb
pop
fistl
or
inc
sub
clc
and
lock
ja
pusha
es
addr16
test
cmp
push
pop
xor
add
pop
cmpsb
jnp
adc
xor
in
inc
push
lods
pop
mov
adc
cmp
movntq
insb
cltd
and
jecxz
out
repz
sub
imul
adc
sub
mov
bound
clc
outsb
movsl
adc
in
dec
jg
subl
push
stos
push
add
adc
xor
sub
xchg
push
pusha
clc
push
stos
lods
icebp
dec
jecxz
fnstenv
dec
sub
sub
mov
mov
out
sbb
and
adc
inc
sub
cmp
outsb
ret
pop
jmp
dec
lahf
mov
mov
cltd
jb
sbb
stc
push
out
adc
cmp
fnstenv
orb
ja
mov
jns
test
add
dec
stos
jns
fdivrs
popa
mov
mov
inc
lcall
and
cmp
cltd
jb
sbb
pop
fdivr
push
and
pop
mov
xchg
fnstenv
shll
mov
push
daa
fs
inc
mov
in
and
cmpsl
cmp
or
je
bound
add
sbb
or
lret
mov
pop
push
mov
scas
push
add
mov
imul
rol
sbb
dec
xchg
mov
sbb
pop
inc
mov
test
shlb
cmp
push
fists
push
lods
add
sbb
loopne
loope
sub
lret
jecxz
sbb
ret
cmpsb
jnp
shlb
sub
add
push
xchg
pop
mov
ret
push
xchg
cmp
out
stos
xchg
imul
repnz
sahf
adc
dec
fs
and
xor
and
mov
stos
sbbb
push
packsswb
std
loope
adc
ljmp
cld
mov
jo
mov
dec
shrl
lock
sub
push
mov
push
scas
test
jp
loopne
or
push
xchg
addr16
sub
inc
popf
addr16
xor
xchg
mov
xchg
push
ja
pop
mov
dec
jns
in
daa
shrl
cmp
les
int
movsb
das
mov
xor
fnstsw
mov
imul
icebp
push
movb
jmp
clc
sahf
insb
lock
fcomps
in
aas
sbb
jae
imul
cmp
mov
inc
mov
jno
adc
sarb
mov
in
ret
fidivl
pop
scas
insb
xchg
in
jns
or
int
pop
test
lret
xlat
push
jmp
jae
mov
out
push
dec
ret
mov
enter
fsubrs
rcr
cmp
divb
jae
push
out
in
cmp
mov
and
dec
sbb
inc
inc
pusha
xchg
cld
jge
cmp
xor
cmp
jg
lret
xor
mov
cmp
mov
out
test
xchg
or
inc
jb
or
pop
aad
lcall
in
ljmp
mov
popf
outsl
jb
cld
mov
fdivrs
in
enter
xchg
idivb
or
xor
mov
aam
int
mov
dec
popa
out
cs
and
or
nop
push
daa
int3
lock
jmp
cmp
out
xchg
dec
nop
iret
inc
ljmp
aad
fldl
xor
out
fs
filds
pop
movsb
push
je
adc
mov
dec
loope
xor
jmp
sub
mov
and
fwait
lretw
dec
adc
les
cmpb
xchg
lahf
pop
xchg
aam
xor
lods
fidivl
daa
aaa
or
jae
jl
inc
mov
pop
push
popf
sti
testl
jecxz
add
testl
jo
mov
imull
stos
jmp
popa
cwtl
xor
leave
xorb
sub
fcomps
lds
jecxz
add
jecxz
push
or
mov
xor
mov
mov
movb
pop
out
xchg
repz
fs
inc
fidivs
stos
push
cmpsb
sbb
in
dec
lea
pop
jmp
dec
in
xchg
adc
pop
pop
insb
add
clc
adc
lcall
pop
roll
and
cmp
imul
mov
test
mov
pop
push
lods
ss
nop
push
ljmp
jnp
nop
xchg
xor
xchg
add
or
and
shlb
cwtl
xor
mov
or
mov
fdivrs
rcrl
add
int3
mov
cltd
mov
or
ds
inc
push
sub
aam
add
pop
push
xor
jae
subl
pop
cwtl
inc
call
pop
mov
and
pop
and
cmpsb
push
adc
das
jne
or
lods
aad
fucomp
and
int3
sbb
push
or
jbe
xchg
lahf
cltd
push
add
adc
fcomip
outsb
pop
negb
cmp
xor
mov
pushf
push
in
push
ljmp
ljmp
add
jmp
pop
test
mov
repz
int3
fisubrs
or
rcl
aaa
movsb
in
dec
mov
fildll
adcb
loop
sahf
adc
dec
fbld
ret
fldenvs
ret
pop
dec
and
xor
icebp
sahf
lret
lods
pop
mov
ret
jg
scas
inc
inc
mov
inc
cld
les
sub
or
jno
cwtl
das
ficoml
fwait
sub
xchg
jmp
leave
jl
push
ret
insl
or
jnp
jecxz
rcr
outsl
mov
ret
sbb
aam
xchg
aas
fistpll
imul
ss
inc
pop
rcll
sbb
jno
stos
xor
or
pushf
adc
mov
ds
sbb
aas
lds
mov
pop
out
push
fnstsw
jb
xor
ljmp
out
and
sti
push
movsl
ret
cmpb
inc
push
push
or
fnstenv
lahf
fs
cltd
clc
adc
push
dec
loopne
adc
roll
mov
pop
icebp
xchg
push
ss
jbe
cmp
pop
adc
jno
xchg
sub
hlt
or
and
aas
repnz
and
std
push
add
sbb
sbb
jecxz
sbb
test
and
cwtl
jnp
in
xor
ret
outsb
je
or
push
inc
dec
dec
pop
imul
aam
mov
mov
jae
jmp
inc
xchg
in
and
dec
out
cld
fwait
sbb
aaa
mov
out
loop
xor
scas
les
mov
dec
inc
les
mov
cmp
xor
xchg
out
fstpl
jecxz
arpl
movsl
sub
cmp
and
ss
lods
andl
or
cwtl
mov
es
stc
push
and
or
mov
jge
imul
add
inc
or
push
add
push
mov
fsubrs
mov
arpl
sbb
mov
outsb
loope
out
lods
pop
data16
je
movsb
in
popf
stos
inc
or
jle
xor
outsl
adc
je
sbb
push
jb
dec
ss
cmp
js
mov
call
fnstcw
outsb
jns
push
jmp
andb
popf
lods
js
in
popa
sbb
nop
outsb
or
lret
mov
pusha
cmp
push
aad
lods
jo
mov
sbb
xchg
mov
pop
arpl
test
jo
mov
inc
add
in
and
sbb
jge
je
ljmp
jmp
jge
lds
push
repz
cwtl
cltd
rorb
xor
sbb
inc
jp
into
sbb
les
andl
xlat
mov
aad
ja
nop
aas
add
jo
mov
insl
pop
lahf
ret
mov
leave
sarb
into
ret
cmp
pop
imul
movsl
add
shll
in
sbb
lret
xchg
dec
iret
jecxz
or
add
rcrl
jp
jp
push
nop
out
ret
mov
dec
dec
mov
repnz
rcrb
xor
dec
cltd
sbb
rcrb
sub
lret
push
cmp
pop
lret
lret
pop
dec
fdivl
sub
cmpsb
and
popf
or
pop
and
orps
sbb
loop
sub
add
bound
mov
lods
iret
aad
jnp
sub
and
stos
push
aam
lret
sti
iret
shll
into
icebp
shll
imul
pop
or
adc
and
and
mov
push
lret
lret
fisttps
mov
xor
push
push
enter
jno
push
lret
mov
sbb
sbb
sahf
adcb
dec
je
and
and
mov
mov
pop
aam
dec
ret
pop
or
ret
fbld
cs
test
mov
icebp
lods
out
cld
fstl
xchg
inc
xor
inc
iret
pop
xor
cli
cs
mov
lock
int
subl
and
pop
mov
imul
cmpsb
mov
mov
leave
icebp
mov
mov
icebp
dec
out
pusha
icebp
cmp
outsl
hlt
mov
sbb
in
push
mov
fstpt
shll
pusha
pop
push
jmp
loop
fnstsw
in
jl
shr
loope
out
push
dec
jl
xchg
mov
leave
imul
loopne
mov
cmpsl
jle
pop
sbb
sbb
mov
cmpsb
cmp
and
sub
fisubl
add
cmpsl
xchg
iret
cmc
adcb
jno
jle
je
lods
inc
inc
pusha
clc
xchg
add
inc
jle
cli
and
lea
int3
push
mov
in
cmp
nop
in
pusha
notb
movsl
push
pop
xchg
aad
ret
jl
and
rclb
stos
adc
imul
pop
shrl
mov
mov
loopne
mov
add
xchg
mov
es
adc
decb
insl
insl
mov
or
jb
xor
movl
dec
out
dec
sbb
push
mov
sbb
mov
jbe
lret
pop
into
xchg
andb
mov
mov
std
dec
sbb
pop
mov
loopne
jbe
xchg
std
cli
call
int
add
dec
adc
ja
mov
add
outsb
test
je
cs
cmp
loop
cmp
dec
pusha
sbb
sbbl
in
iret
cmpsb
out
inc
rol
popf
and
cwtl
xchg
addl
add
xor
bound
mov
js
cmp
jmp
sbb
loope
repnz
sub
cmp
in
jp
adc
dec
dec
jae
jl
xchg
insl
mov
sarl
dec
xor
xor
and
mov
mov
inc
nop
add
adc
fdivs
xor
aaa
paddd
push
pop
inc
testb
lret
sti
and
jle
out
ret
arpl
dec
mov
addr16
cmp
mov
xchg
test
movsb
mov
std
or
mov
repz
jge
push
enter
andl
ss
sahf
inc
enter
loop
test
push
xchg
sbb
loope
adc
add
ret
test
leave
shrb
jb
add
adc
sbbl
aas
loope
jbe
or
js
sarb
push
jne
sahf
incb
add
cmp
jg
out
dec
les
cmp
lods
daa
lret
rcrl
lret
int3
jmp
cmp
imul
cmp
imul
iret
push
in
push
ljmp
push
cmp
adc
pop
sub
aas
pusha
and
mov
sti
and
fdivl
lcall
loope
and
addr16
test
jae
ja
jp
xchg
mov
adc
xor
lret
call
dec
fcomps
fiadds
aas
add
mov
pop
xor
jo
stos
es
stos
add
xor
mov
push
pushf
rcr
fwait
push
ret
sub
std
push
pop
in
aaa
stos
or
ficompl
in
mov
cmp
call
in
stos
push
add
aad
xor
xor
les
xor
cli
or
xchg
stos
add
in
push
out
sti
mov
orb
mov
xchg
jns
add
ss
cwtl
cmp
das
mov
fsts
adc
pop
push
ljmp
out
xchg
adc
nop
daa
mov
cmp
xchg
sub
rcrb
aas
xchg
sbb
subb
sub
dec
inc
mov
jno
fwait
sahf
push
negb
movsb
or
xchg
sub
das
xor
pusha
es
xor
add
out
int3
mov
dec
dec
mov
mov
sbb
or
cmp
leave
cmp
cmc
mov
sub
push
jge
lods
sub
push
mov
stc
sbb
cmp
xchg
es
and
inc
push
mov
movsb
mov
and
enter
js
int3
mov
dec
or
pop
outsl
loope
mov
mov
repnz
jno
pop
enter
imul
jnp
pop
and
rcrb
mov
loope
add
inc
jo
push
sbb
jle
sub
push
and
dec
adc
enter
int3
out
ds
pop
mov
pop
xchg
ja
repnz
insl
push
test
add
fwait
cmpsl
pop
xchg
pop
lcall
rcrb
ret
scas
fidivrl
ss
mov
std
lret
add
mov
push
ja
mov
fxsave
or
or
cmp
add
inc
scas
dec
icebp
mov
pop
push
inc
sub
dec
mov
push
pop
or
lds
push
jno
jno
std
cmpsb
pop
les
std
push
out
scas
jb
dec
mov
push
mov
mov
inc
sub
mov
fnstenv
push
or
cmp
inc
inc
xor
or
jge
jnp
std
andl
sub
push
xchg
inc
pop
int
xor
jmp
and
cltd
jp
aad
xchg
test
mov
sbb
lcall
inc
fcoml
mov
fdivrs
or
leave
pusha
cmp
or
out
add
imul
pop
lock
nop
ja
gs
cmp
cmpsb
mov
pushf
stc
subl
pop
xchg
cld
mov
pop
xor
std
mov
out
push
popf
or
shr
loope
cld
push
lahf
mov
mov
lahf
dec
fisubrs
ja
sub
sbb
sbb
adc
cmp
pop
sbbb
add
push
push
stos
sbb
js
xor
jg
push
jl
lds
bound
pop
test
inc
cmp
or
push
pop
sahf
cmp
inc
je
fwait
push
fst
es
fbstp
test
fs
cs
or
sub
cmpsl
inc
lock
lcall
shll
rcrl
nop
mov
add
dec
loopne
lcall
cltd
sub
pop
jmp
mov
cmp
cwtl
push
aaa
cmpsb
movsb
std
cld
ja
add
and
mov
movsb
mov
sahf
jnp
fsubl
loope
mov
sub
mov
and
test
ret
cmp
clc
inc
lret
jecxz
xor
scas
mov
mov
lods
adc
xchg
dec
adc
inc
lock
fs
pop
icebp
pop
mov
fwait
out
add
dec
fucomip
fwait
or
xlat
mov
mov
pushf
add
sbb
aad
mov
sub
xchg
dec
rcrl
jle
pop
lret
adc
in
dec
in
leave
ror
cmp
loope
je
push
inc
gs
lahf
xchg
xchg
xchg
add
es
xchg
scas
push
lds
jp
and
xchg
aas
scas
bound
xor
lds
push
jno
or
clc
and
dec
mov
repz
xchg
pop
iret
or
cmp
or
lahf
push
lods
sbb
xchg
orb
mov
push
es
je
xor
jecxz
out
xchg
pop
pop
sub
imulb
sbb
jge
lcall
sbb
aad
sbb
div
cvttps2pi
sbb
rolb
sub
adc
dec
shrl
out
hlt
xchg
push
repz
push
popf
or
cmp
lret
fcomip
inc
adc
dec
frstpm(287
adc
jp
bound
test
scas
or
and
push
mull
mov
push
or
xchg
dec
js
pop
test
mov
dec
cmpl
rcrb
cmp
imul
mov
lock
jecxz
movsl
mov
aad
fidivrl
repz
icebp
inc
dec
cmp
loopne
test
cmp
imul
in
push
test
in
and
scas
adc
mov
icebp
sub
sarl
push
xlat
imul
mov
fidivrl
cltd
xor
sub
sbb
xlat
push
mov
mulb
dec
jge
mov
popf
js
mov
jecxz
add
jo
rcl
cmpsb
sub
jae
cmc
clc
jge
sub
sahf
outsl
mov
jo
and
dec
pop
xor
lods
jge
leave
fnstenv
jp
cmp
es
mov
mov
xchg
outsb
daa
ret
lret
lds
jecxz
iret
jmp
jno,pn
das
mov
fldenv
mov
mov
jns
inc
pop
pop
cmp
push
jnp
xor
bound
jp
pop
cmc
ljmp
cmp
in
push
lea
jg
cmp
dec
into
testb
scas
push
cmp
pop
jp
pop
aam
jle
push
movsb
jge
mov
mov
xlat
cmp
add
xor
shll
add
xchg
dec
jne
adc
hlt
mov
es
mov
push
push
cwtl
fldt
push
loope
pxor
adcl
push
addr16
sbb
lds
jnp
push
cmp
andl
cmp
in
mov
push
xchg
outsb
inc
test
lret
cmc
mov
leave
insl
sbb
hlt
mov
cmp
sbb
in
mov
rorb
lods
js
mov
sbb
lods
nop
jmp
dec
sub
sbb
test
pop
lock
jbe
mov
cmp
xchg
inc
pop
push
sub
test
mov
and
jb
inc
repz
lock
jnp
xor
lea
test
add
lahf
imull
incb
push
sbb
pop
mov
subb
inc
pusha
ja
cmp
sbb
aam
mov
cltd
inc
jmp
lahf
or
sbb
cltd
xor
xor
dec
xor
xor
popa
bnd
test
and
xchg
xor
je
xor
bound
popf
xor
push
mov
jg
mov
push
lret
jg
sub
jno
dec
or
lcall
and
in
mov
loop
xor
adcl
push
or
dec
push
mov
pop
jnp
inc
xlat
mov
fstps
pop
xchg
inc
loopne
cmp
je
aam
bound
aas
mov
xchg
mov
cmp
xchg
or
stc
inc
pushf
sub
popf
scas
mov
cmpsb
xchg
loopne
mov
fimuls
adc
push
test
mov
das
test
cmp
add
dec
imulb
inc
sbb
mov
or
pusha
addl
jbe
out
data16
test
adc
inc
sti
std
pop
inc
scas
mov
sbb
fisttpll
xchg
and
ds
outsl
iret
imulb
ret
outsb
enter
push
scas
jno
popa
dec
stos
rclb
std
push
add
icebp
adc
sub
rolb
loope
add
sbb
out
outsl
in
and
pop
mov
jnp
jg
cmp
inc
mov
cmp
fcoml
xchg
mov
lahf
call
cmp
inc
imul
mov
or
bound
cld
jbe
xor
push
out
push
push
sub
inc
test
out
ret
inc
decl
mov
cli
inc
or
push
in
or
cmp
mov
push
je
fmull
dec
lahf
mov
xchg
xchg
sub
jnp
mov
inc
test
movsl
stc
or
jb
stos
gs
cmpb
sub
inc
dec
adc
jne
fwait
pop
xor
stos
push
jmp
mov
ds
cmp
cmp
out
jle
daa
and
pop
mov
inc
dec
dec
cmc
sbbb
les
inc
push
push
jmp
cmp
leave
pushf
loopne
xor
stc
jecxz
aas
add
dec
dec
loop,pt
lea
repnz
out
adc
aam
mov
andb
cmc
and
add
jecxz,pt
pop
adc
je
decb
rcrb
loope
sbb
mov
mov
mov
cmp
inc
cmp
inc
adc
jo
push
pop
es
push
cmp
add
xchg
fucomp
fldenv
out
inc
adc
iret
data16
int
es
pop
shrb
cmpsb
cmpsb
rorl
out
dec
movl
test
jmp
cltd
adc
add
and
rcrb
mov
jle
shl
mov
dec
mov
jno
sbb
shl
adc
movsb
sahf
scas
pop
push
adc
dec
mov
sub
sbb
cmp
cmp
mov
lcall
jbe
inc
mov
mov
xlat
xlat
dec
xchg
mov
cmpsl
movl
es
mov
pop
movsl
je
inc
test
add
filds
repz
int3
es
cmp
bound
lods
fwait
arpl
fsubrl
and
shl
mov
fistpll
sti
outsl
jne
pop
push
mov
dec
sbb
aam
adc
imulb
clc
inc
outsl
adc
mov
sub
xchg
pop
repnz
je
dec
mov
adc
and
data16
out
in
push
int
iret
mov
decl
fs
sbb
sbb
add
std
mov
xor
stos
jp
fbstp
push
sub
inc
adcb
in
cmp
fiaddl
jno
sub
dec
and
cmc
xor
adc
rorl
lods
fwait
cld
mov
mov
add
pop
scas
repnz
push
mov
push
dec
fdiv
cmp
psrlq
push
stc
push
mov
jae
and
jmp
xchg
xchg
fs
dec
mov
fs
sub
in
das
outsb
aad
ljmp
ja
mov
add
and
fildl
stos
jle
pusha
aaa
inc
mov
imulb
mov
xchg
xchg
xchg
ss
cmc
mov
mov
mov
stos
stos
mov
test
scas
cwtl
pop
xor
cld
mov
cmp
je
cmp
lahf
rcrl
jecxz
leave
mov
cmp
and
imul
mov
test
cmpsb
mov
push
shrl
pop
icebp
adc
sbb
ja
scas
xchg
cmc
cmc
nop
arpl
mov
movsl
adc
ljmp
mov
push
daa
out
jne
dec
lret
inc
xchg
pop
jecxz
dec
fisttpl
ds
sub
sbb
movl
pop
loopne
inc
fdivl
pop
mov
push
adc
adc
inc
adc
loope
lea
testb
xchg
xchg
iret
es
or
aam
cmp
add
jp
shr
mov
add
shll
clc
push
push
movl
inc
jmp
sbb
bnd
negl
ljmp
mov
mov
mov
add
mov
xchg
mov
in
lods
sub
inc
or
xchg
jecxz
sahf
sbb
ret
sbb
test
imul
pop
pop
lret
cmp
inc
repz
ds
dec
pop
fsubr
pushf
dec
nop
iret
retw
jb
cmpsb
je
mov
adcl
jle
cmpsb
sbb
jmp
negb
daa
jp
repz
pop
xor
sub
ja
add
scas
lods
inc
aad
dec
fistpll
cltd
pusha
mov
add
jne
and
loope
dec
push
lds
adc
jne
mov
mov
ret
out
pop
xchg
pop
dec
lret
and
insb
cmp
inc
add
sbb
xlat
sbb
jge
popa
mov
or
add
xchg
cli
mov
fnstenv
loop
xlat
shl
cmp
or
mov
addr16
in
call
pop
insb
push
adcb
push
mov
jb
je
push
cmpsb
or
sbb
mov
popa
cmp
test
inc
xor
in
fisubs
std
jnp
stc
sub
push
add
add
andl
mov
sarb
jecxz
out
icebp
shl
xchg
std
movsb
insb
mov
int
cltd
cmp
inc
sub
out
cmp
inc
and
in
inc
scas
push
mov
les
ds
jnp
mov
das
pop
mov
push
sarb
jl
aas
jns
stc
shll
mov
mov
faddp
test
mov
out
lret
xlat
out
addr16
pop
in
jp
jge
loope
stos
jp
inc
push
nop
adc
out
cwtl
pop
pusha
sbb
push
xchg
xchg
xchg
shlb
dec
cwtl
push
push
ds
add
xor
jne
stos
push
sti
cwtl
mov
sbb
push
insl
test
aad
sub
and
enter
fnstenv
inc
xchg
push
or
mov
aad
loop
popa
clc
ss
jg
dec
mov
cmpsb
call
xchg
fidivl
fcoml
and
adcl
call
jg
xchg
adc
lds
xor
or
shrl
pop
outsl
jb
inc
dec
test
mov
inc
fiadds
repz
or
sub
stc
mov
arpl
push
lods
pop
xchg
fnstcw
fldt
pushf
cmp
adcl
sub
xor
cli
cli
jnp
mov
xlat
jno
push
pop
pop
out
cmp
jbe
lods
inc
ret
lcall
sbb
inc
fs
push
int
mov
cmpsl
jmp
push
mov
mov
js
pop
sbb
les
jnp
fcmovnu
mov
or
dec
cmp
notl
lret
and
adc
adc
xchg
int3
cmpsb
jge
mov
add
ljmp
inc
fldt
or
mov
repz
leave
add
add
incb
and
jo
pushf
inc
fmuls
out
in
cld
adc
faddl
shll
rcr
loop
or
jmp
daa
mov
mov
inc
ret
lret
mov
pop
ret
push
sub
jno
fistps
add
nop
inc
mov
test
push
jb
out
jmp
mov
adc
and
shlb
xor
and
dec
inc
ljmp
jb
push
out
jno
inc
addr16
mov
shrl
add
stc
loopne
inc
mov
divb
sub
ficoml
iret
ljmp
xor
sub
pop
imul
pop
repnz
mov
cmp
dec
xor
sbb
insb
out
cmp
jge
or
out
nop
xor
add
mov
test
int3
mov
inc
in
pop
les
xor
mov
pop
jecxz
int3
xchg
inc
imul
jecxz
call
sub
pop
out
sub
sub
fs
test
mov
mov
into
push
mov
jbe
scas
fcomp
pusha
cs
add
out
leave
mov
and
dec
mov
test
out
sbbb
mov
inc
cmp
inc
inc
pop
out
xor
call
ret
aas
inc
pop
dec
repnz
sub
mov
inc
push
cmp
xchg
inc
cltd
test
xchg
or
movsl
cmp
in
inc
movsl
cwtl
pop
lret
es
dec
mov
sbb
repz
inc
inc
arpl
iret
lds
outsl
add
pop
xlat
mov
cwtl
repnz
adc
mov
fmul
inc
jl
test
call
pop
repnz
out
int3
clc
in
in
pusha
ficoml
jp
addr16
cwtl
add
jl
fnstsw
les
popf
xor
bound
stos
rolb
fidivrl
loop
jo
pusha
sarb
fwait
test
stc
fsubrs
aam
int
inc
mov
adc
testl
mov
loope
loop
movsl
scas
push
mov
repnz
cli
mov
negl
addr16
lcall
dec
xchg
adc
mov
push
test
inc
ja
jl
in
add
jmp
xor
xor
mov
pop
arpl
push
pop
xchg
into
push
imul
je
fcmove
popf
mov
into
out
out
inc
push
das
aam
jecxz
pop
inc
pop
addr16
ds
cs
lea
sub
and
or
push
mov
ret
push
jle
mov
nop
mov
outsl
daa
cmpsl
imul
enter
inc
push
xchg
fbld
inc
arpl
mov
sbb
xchg
sub
lods
out
push
mov
pop
xchg
mov
lahf
dec
cmp
xor
xchg
push
enter
fstl
fnstsw
push
adc
xchg
add
aas
push
jb
adc
aas
arpl
and
lods
js
pop
mov
cmp
and
rcrb
jns
icebp
ret
dec
arpl
jb
bswap
pushf
mov
leave
int
cmp
mov
xor
pusha
cmpsb
sbb
out
ja
aad
pop
outsb
mov
jne
sbb
test
mov
lahf
push
pop
rorb
mov
pushl
adc
mov
enter
clc
imul
lcall
dec
in
adc
pop
add
out
stos
loope
fisttpll
dec
insl
inc
test
pop
cmpsb
or
inc
add
jae
lret
pop
add
dec
out
or
or
insl
add
sub
xchg
popl
movsb
je
fbstp
popa
shl
dec
cwtl
std
cmp
mov
mov
jge
inc
stc
xlat
adc
mov
add
mov
fnstenv
cmpsb
xor
push
or
sbb
lea
gs
inc
jg
xor
ds
daa
cli
test
frstor
xorb
sbb
jmp
and
lret
cmpsl
dec
lods
imul
dec
add
xchg
sbb
sub
pop
test
pop
ret
enter
movsb
pushf
outsl
pop
lret
and
xor
imul
dec
lock
xor
pop
fldenv
cmp
dec
fdivs
push
xchg
es
pop
daa
mov
adc
int3
fcomps
leave
je
jae
push
scas
dec
movsb
adc
test
cmp
lcall
aam
out
pop
pop
in
push
cmp
ljmp
inc
push
fldlg2
or
xor
test
sbb
or
aam
call
adc
aad
xor
push
data16
test
stc
add
dec
mov
push
sar
fsqrt
mov
sbb
out
mul
add
lods
mov
imul
lcall
aaa
sbb
inc
bound
int3
lods
inc
daa
jg
xor
push
inc
rclb
ds
xchg
insl
cmp
popf
mov
int3
push
mov
pusha
insb
pop
xor
xchg
sub
pop
xor
or
add
lea
or
popa
xchg
pop
loope,pn
jecxz
dec
cmp
pop
aam
and
jnp
xchg
outsb
sub
mov
xchg
cmp
std
add
sbb
dec
mov
das
addr16
das
mov
mov
jne
add
push
rcll
xor
pop
xor
sub
sub
and
dec
mov
sub
fcoms
fld
cmp
ja
movsb
fs
cwtl
pop
add
cmp
sub
adc
call
jo
inc
and
fucomp
push
in
repz
cltd
ds
cltd
ljmp
test
sub
xchg
iret
jecxz
pop
add
imul
mov
dec
xchg
std
mov
shr
std
js
or
in
mov
jg
stos
inc
fcmovu
int3
pop
cmpb
mov
push
jnp
cmpsb
aam
xchg
fdivrl
movsl
addr16
mov
xlat
lds
xchg
cmp
sbb
call
jp
test
mov
aaa
dec
mov
xorl
push
rorb
or
arpl
mov
in
xor
mov
or
in
mov
lds
jae
push
test
mov
addl
fcompl
jg
cmp
pop
iret
fnstcw
mov
xchg
imul
repnz
dec
xor
in
pop
push
fdivp
inc
mov
dec
loope
or
loop
jae
jmp
out
pop
push
popa
clc
test
cmc
stos
jg
and
dec
pop
adc
xor
inc
sub
or
adc
push
gs
ljmp
jbe
adc
adc
or
stos
fldl
pop
mov
fadd
out
pop
in
xor
cltd
gs
inc
cmpsl
pushf
mov
test
pop
repz
lea
jecxz
push
es
js
jl
pop
dec
mov
add
xchg
xchg
mov
sub
lret
rolb
leavew
into
mov
aad
mov
pop
ljmp
jno
call
or
aad
dec
repnz
cmp
mov
scas
test
push
popa
push
jmp
mov
call
ffreep
lret
dec
gs
jmp
scas
gs
jbe
xchg
in
clc
outsb
das
sbb
lock
cmp
lea
jnp
pushl
add
adc
test
push
xchg
cmc
shl
cs
xor
cmp
lds
pusha
adc
mov
push
rcrl
rclb
xor
fs
scas
xchg
es
js
add
lcall
or
das
xchg
adcl
mov
ja
xchg
movsl
in
jp
sbb
lret
bound
sbb
clc
jo
mov
xchg
adc
xchg
mov
mov
fdivl
cmc
cmp
mov
add
es
pop
push
xchg
xchg
jg
and
je
pop
test
jno
mov
adc
imul
or
xchg
shl
repnz
add
pop
mov
test
mov
xchg
inc
jmp
mov
imulb
jbe
and
cmp
in
mov
jne
inc
inc
mov
out
ljmp
lods
incb
lahf
cmp
inc
rcr
stos
enter
dec
and
inc
leave
imul
inc
adc
addr16
and
xor
dec
jmp
clc
xchg
xchg
incb
mov
and
test
jns
arpl
inc
in
adc
inc
call
divb
ds
inc
sub
pop
pop
inc
xchg
sbb
xor
or
cs
mov
push
lods
mov
lds
shrb
mov
fwait
xor
movsb
mov
movsl
rol
xor
sub
jo
mov
mov
fldl
dec
notb
or
in
mov
test
mov
adc
push
xchg
cmc
xchg
ja
xor
ljmp
outsl
sbb
decl
lret
add
jne
mov
cmpsb
sbb
addr16
stc
pop
icebp
sbb
insl
iret
mov
mov
mov
jle
aas
fcmovne
enter
inc
adc
jge
ja
imul
jmp
add
fmull
jno
addr16
cmp
xchg
ljmp
aam
loope
jecxz
cmpsb
adc
insb
jl
subb
dec
inc
sbb
call
imul
dec
ret
cli
inc
inc
add
rol
pop
dec
sub
or
adc
mov
xor
int
test
aam
ret
test
mov
dec
mov
stos
mov
iret
fst
shll
leave
mov
sub
fldenv
and
insl
rol
mov
dec
adc
and
dec
popf
mov
montmul
cmpsb
inc
add
mov
xorb
pop
dec
jae
idivb
imul
imul
popf
pop
and
xlat
stos
cs
jl
movq
cld
loop
inc
ret
shrb
repnz
fwait
dec
add
das
pop
aad
out
icebp
inc
jns
out
jno
jne
and
xor
dec
xchg
mov
mov
mov
sub
mov
mov
xchg
lcall
sub
out
test
dec
push
test
dec
jp
sti
scas
jbe
adc
roll
pop
popf
adc
cmp
imulb
pop
lcall
lcall
sub
repz
stos
pop
xchg
cmp
pop
test
aaa
mov
mov
pop
hlt
fidivs
movsl
repz
cmp
mov
cld
lret
addr16
or
sbb
mov
dec
pop
pop
lahf
mov
xor
mov
shl
push
or
movsb
mov
aam
insl
xchg
push
imul
cmp
aad
not
aas
push
les
or
xchg
sbb
ja
add
jns
push
pop
lret
stos
stos
jge
jle
arpl
pop
inc
rcrl
xchg
sahf
xchg
sub
pop
add
movsl
nop
stos
fimuls
xchg
mov
ret
in
stos
insl
push
loop
call
mov
cmc
or
mov
add
cmp
insb
dec
dec
lds
mov
xor
jb
in
sub
ljmp
mov
cmc
push
mov
mov
adc
push
sti
dec
mov
mov
inc
dec
insb
jmp
jle
push
xchg
or
cmp
ret
sarl
xchg
test
aam
sarb
test
cmp
scas
movsl
pop
loopne
pop
lahf
mov
test
lret
inc
add
mov
and
mov
jecxz
iret
stos
inc
add
leave
jb
std
mov
push
jae
aam
cwtl
ror
xor
mov
ret
ldmxcsr
cld
imul
push
inc
movsl
addr16
das
mov
inc
sti
pcmpeqd
mov
jae
push
xor
clc
dec
jl
jecxz
inc
adc
pop
pop
cmp
jo
sub
and
inc
cld
sub
xchg
and
cld
lret
and
test
push
fcomi
push
in
in
imul
cmp
mov
xchg
mov
sub
dec
lods
cwtl
mov
adc
sbb
insl
push
push
scas
inc
rorb
push
mov
int
test
jne
out
out
push
stos
dec
test
cs
movsl
xchg
aad
lret
mov
push
cmp
mov
int3
sub
stc
in
jae
sbbl
in
adc
mov
push
or
mov
das
jge
aad
dec
xor
jnp
fistl
mov
cmp
pop
test
xor
or
repz
add
adc
dec
sbb
add
stos
xor
adc
pop
add
fs
add
int
mov
adc
and
pop
lcall
iret
incb
mov
jle
mov
das
psubsb
test
pop
cmp
and
adc
test
lret
mov
stos
sub
push
repnz
add
sub
inc
ds
f2xm1
lods
aam
outsl
mov
push
popf
add
hlt
jmp
ds
nop
jo
sub
push
adc
push
insb
call
cmp
adcb
xor
movsb
or
pop
scas
mov
inc
mov
lahf
cmp
aam
cmp
aam
in
fdivrs
imul
add
cli
cmp
in
test
fimull
mov
mov
mov
adcb
aaa
mov
ret
pop
dec
leave
xchg
sbb
mov
in
and
fwait
xor
shl
sbb
mov
fucomi
jle
xor
mov
ror
mov
push
mov
rcrb
imul
inc
aas
pop
jbe
xchg
lret
cmp
nop
cmp
popa
dec
push
mov
fldt
dec
cmp
fdivl
imul
addr16
fadds
das
mov
ja
push
imul
out
dec
loope
jnp
cmp
sbb
mov
cli
aas
rcrb
lock
mov
and
mov
rolb
adc
mov
out
inc
pop
faddp
xor
or
jge
gs
jg
test
movsb
push
jmp
xlat
ror
mov
or
test
lock
xor
cmpsl
imul
add
outsb
fwait
or
je
in
dec
repz
mov
dec
enter
push
pop
mov
adc
clc
mov
ret
hlt
pop
shlb
pushf
fbstp
mov
clc
pushf
inc
movsl
aam
add
or
pop
jp
fcomps
test
shrb
jecxz
in
cmp
pop
mov
pop
xor
into
push
sbb
xchg
dec
mov
rep
int
imul
aad
or
aas
mov
lea
mov
insb
inc
jbe
aas
dec
mov
mov
push
leave
cwtl
xor
push
inc
pop
out
dec
data16
aas
or
inc
lahf
mov
xchg
frstor
jbe
lcall
push
sbb
sub
outsl
or
mov
lods
pop
movsl
fldl
sub
mov
jb
outsl
sub
lock
sbb
sbb
add
push
push
cltd
xor
dec
pop
sub
xor
lret
lcall
cmp
xchg
mov
inc
mov
cmp
int
push
cmp
testl
mov
clc
fcos
mov
rcl
or
push
xchg
shrl
inc
cltd
out
xchg
loopne
insb
cmp
out
out
mov
add
cmpb
pop
push
fbld
imul
cld
cmc
mov
mov
fistps
pop
push
sub
xchg
nop
jne
jb
sub
enter
in
imul
shlb
das
mov
adc
fs
sub
pop
push
ficompl
bnd
mov
cmp
inc
mov
pop
setne
sahf
sbb
aas
pop
push
sbb
daa
jp
dec
mov
sar
std
inc
call
pop
inc
mov
xor
push
dec
jne
dec
pushf
icebp
js
pop
mov
push
inc
sub
std
pop
ljmp
xchg
cmp
sbb
sbb
es
aam
or
add
stos
inc
pop
mov
lea
sub
out
dec
out
imul
fmuls
mov
outsl
mov
loope
pushf
xlat
pop
inc
mov
shll
cwtl
out
xchg
fs
mov
sbb
or
notb
mov
into
movsb
sbb
dec
leave
adc
sbb
push
out
mov
jmp
dec
outsb
jl
xchg
mov
or
and
add
cmc
es
clc
nop
inc
fwait
mov
fdivl
loopne
and
cmpsl
mov
ss
mov
mov
lea
clc
xchg
mov
mov
adc
in
lret
jecxz
dec
sarb
pop
outsb
cmpsl
and
daa
out
pop
fldcw
mov
or
cmp
cmp
cmpsl
sarb
pop
loopne
cld
mov
out
sbb
daa
leave
fldenv
inc
pop
push
out
mov
out
scas
popf
leave
ja
outsl
jnp
stos
bound
push
xchg
in
add
sub
mov
or
lea
jg
pop
test
into
addr16
push
stos
jnp
imul
repz
push
fldt
xchg
sub
call
aaa
dec
cmp
test
mov
inc
push
dec
icebp
fidivs
jo
out
mov
or
out
push
cld
jl
ret
sub
into
and
in
scas
je
lahf
mov
mov
sbb
add
xchg
mov
adc
pop
inc
sbb
sbb
fpatan
mov
loope
xchg
je
dec
xchg
or
cs
add
test
iret
sub
dec
scas
fstl
andb
rcl
push
stos
sarl
dec
xlat
sarl
or
loope
in
mov
sub
rorb
fadd
cld
ss
and
arpl
pusha
lods
mov
mov
cmc
pop
das
mov
mov
push
lahf
cmpsb
shlb
mov
jp
inc
pop
jae
pop
add
mov
fcomps
mov
dec
fcmovu
mov
pushf
inc
push
sahf
add
fucomp
mov
inc
lods
fisubl
xor
lods
movsl
mov
xorb
xorb
sbbb
icebp
scas
nop
xor
pop
nop
dec
negb
std
mov
inc
negl
mov
je
clc
push
test
nop
add
mov
sub
or
and
inc
mov
outsl
push
call
notb
xchg
sbb
idiv
in
test
inc
loopne
xchg
aas
push
mov
fcom
jge
cs
dec
cmpsb
adc
fsubrs
jnp
push
int
aaa
fs
mov
leave
mov
into
xchg
or
aas
dec
push
add
lods
ror
lret
in
mov
or
test
das
addr16
jp
imul
pop
sub
and
pop
hlt
loop
or
out
jns
or
mov
add
xchg
adcb
adc
push
pushf
push
xor
lret
mov
inc
rol
jl
enter
mov
dec
fdivrs
bswap
enter
and
popl
test
inc
xchg
fisubl
ret
and
arpl
outsb
movsb
mov
stc
and
pop
pop
inc
and
and
push
xchg
mov
std
imul
movsb
mov
pop
andb
cmp
xchg
sbb
test
sbbl
das
cld
out
int
dec
shrb
jle
imul
or
xchg
cs
add
stos
shl
repnz
sbb
lods
stos
in
sub
clc
dec
pop
mov
jnp
jle
cmp
fiaddl
dec
rol
sub
dec
sbb
mov
xchg
xchg
push
insb
int
pop
je
out
adc
pop
cltd
sub
lahf
divl
push
mov
dec
testl
mov
push
mov
and
jge
lods
stos
sbb
sbb
ja
bound
and
push
push
pop
lea
pop
int
mov
aad
icebp
sarb
xlat
div
and
pop
sub
pop
js
mov
dec
mov
dec
pushf
mov
rol
dec
cmp
jnp
int
test
inc
jae
xchg
sbb
and
mov
pop
repz
and
pop
add
inc
xchg
aas
xor
scas
je
xor
jno
addr16
fdivrs
call
mov
pushfw
jg
es
aam
lods
push
mov
andl
push
jmp
adc
mov
jns
popf
cli
lods
pop
ja
paddd
xorl
jmp
jns
out
push
pop
sahf
cmp
xchg
cs
mov
movsl
add
rcr
rorl
xchg
pop
push
fs
fcomps
push
mov
mov
xchg
sub
imull
sbb
or
push
mov
or
test
cld
push
xor
adc
shl
dec
lahf
inc
jge
stos
ljmp
or
inc
mov
cwtl
loope
cmpsb
loope
ffree
xchg
xor
sbb
fldl
sbb
jecxz
incb
icebp
dec
mov
sarl
imul
mov
dec
sahf
notb
ja
jge
cmpsb
test
add
clc
inc
arpl
jl
pop
stos
das
scas
mov
mov
fmul
inc
pop
or
dec
xor
fadds
mov
push
push
push
test
add
jb
adc
popf
jbe
push
popf
adc
mov
jns
push
jmp
lcall
adc
ss
mov
in
scas
add
adc
dec
int
arpl
cmp
and
cltd
test
daa
xchg
push
sbb
lahf
loopne
lret
xchg
mov
das
xor
inc
xchg
dec
xchg
jp
pop
sub
dec
jno
outsl
inc
or
mov
dec
movsl
add
sbb
mov
jno
mov
push
push
roll
pop
outsb
sahf
xor
aaa
cmp
xchg
aaa
shlb
movsb
adc
pushl
pusha
out
xorl
pxor
sbb
cs
mov
push
jbe
hlt
mov
rorl
push
adc
iret
xchg
mov
jmp
push
aam
repz
stc
sbb
loope
icebp
movsl
xlat
lods
mov
mov
mov
sti
pop
mov
cvtps2pi
lds
sub
pushf
lcall
int
xchg
sub
jbe
cmp
cs
filds
inc
lock
repnz
mov
push
inc
lahf
data16
xchg
hlt
ljmp
in
in
std
push
or
inc
pusha
int3
push
add
stos
adc
negb
arpl
in
sub
sub
pop
je
mov
jno
lret
sbb
addr16
xor
and
pop
andb
mov
imul
xor
sbb
lcall
cmpsb
ljmp
shl
sahf
xor
cltd
mull
xchg
xchg
sub
int
and
or
rorb
es
push
push
mov
sbb
or
jg
adc
stc
dec
cld
or
and
out
andb
adc
lret
in
jp
stos
rorb
fistpl
test
bound
loop
and
imul
pop
mov
std
outsb
mov
adc
push
fldl
cmp
ljmp
lcall
inc
enter
mov
mov
lcall
sbb
rclb
mov
fnstenv
adc
mov
mov
push
inc
mov
lea
pop
bound
and
cmp
xor
mov
mov
scas
vminsd
mov
test
int3
xchg
daa
cs
xchg
fsubrs
cmpsl
and
add
into
pop
jbe
push
xchg
les
sub
movsb
out
nop
mov
lret
not
jns
sub
sbb
loope
lcall
int3
cmp
xor
push
sub
dec
mov
scas
out
xor
arpl
mov
out
mov
clc
xor
das
addr16
scas
fnsave
les
pop
pop
jo
cs
lds
ret
pusha
sbb
aad
xor
sbb
sub
mov
cmpsl
stos
inc
push
pop
xor
cmp
movsl
xor
shll
jo
out
test
and
lds
sti
pop
mov
dec
and
xor
xchg
pop
push
push
test
hlt
push
inc
cmp
sti
lds
pop
dec
jmp
pusha
ret
dec
fwait
xor
push
imul
cmp
je
jle
push
jo
or
mov
pop
lock
adc
xchg
sub
mov
xor
lret
bound
push
fbld
xchg
push
inc
mov
pushf
rorl
adc
and
and
jle
jo
cli
lea
adc
sti
xor
xor
mov
pop
cltd
mov
lock
scas
push
mov
inc
jl
shufps
xor
stos
test
addr16
shll
dec
mov
imul
imul
pop
adc
cltd
push
dec
data16
inc
sub
mov
jb
inc
push
ret
ret
test
repnz
cmp
xor
sti
xchg
push
stos
inc
std
sbb
test
repz
sub
cltd
sub
addr16
push
lods
orb
js
rolb
mov
or
ret
sub
addr16
dec
add
and
movsb
mov
mov
lea
test
xchg
leave
dec
add
test
cwtl
in
insb
mov
out
lret
lea
sub
add
xor
adc
xchg
mov
xchg
and
std
hlt
mov
inc
stos
jnp
imul
jl
into
xchg
sbb
add
pusha
data16
jg
scas
ss
push
imul
out
imul
mov
inc
and
push
out
dec
subb
call
pop
dec
or
add
ja
std
push
xor
lock
mov
add
mov
cmp
lock
add
in
cmp
adc
adc
mov
adc
addr16
jno
add
xchg
inc
cmp
icebp
call
xor
out
ljmp
or
push
sbb
in
test
loope
or
enter
jae
adc
sbb
hlt
ret
mov
sti
push
jno
or
pop
xchg
jbe
out
neg
mov
xchg
repz
imul
xchg
imul
scas
cmp
push
stos
inc
sahf
xor
jg
inc
popa
pop
jge
mov
jecxz
inc
loopne
mov
fwait
mov
cmpsb
cmp
bound
sbb
adc
daa
nop
adc
add
stos
bound
xchg
lds
xor
or
mov
mov
pop
nop
orb
or
ja
bound
push
orl
cmp
int
push
stos
add
dec
mov
outsl
dec
sub
jecxz,pt
ss
push
icebp
fildll
dec
fs
and
pop
fdivl
pop
adc
call
xchg
hlt
pop
xor
add
scas
inc
pop
hlt
xor
cmc
cmp
jge
and
andl
fs
cwtl
inc
add
mov
xchg
fldl
push
jg
loope
daa
imul
and
xchg
or
sbb
xchg
push
addr16
hlt
jle
pop
mov
inc
lds
inc
push
jg
mov
sbb
daa
sbb
cwtl
mov
mov
cmc
inc
test
rorl
pop
jae
popa
mov
jo
into
sub
icebp
mov
fistpll
jbe
insb
jp
in
test
shrl
mov
cmp
add
mov
cmp
cmpl
add
xchg
cwtl
push
iret
inc
in
pusha
or
es
in
iret
or
gs
dec
cmp
loop
mov
mov
dec
arpl
imul
xchg
xchg
cmc
test
pop
repz
scas
xchg
sub
xchg
imul
stc
hlt
pop
repnz
mov
orb
stc
cmpsl
insb
adc
sahf
fsubs
ss
je
jp
shrb
imull
stos
adc
mov
sub
xchg
jns
mov
shrl
lods
push
mov
lcall
mov
sub
call
cmc
icebp
rolb
fcmovnb
pop
mov
jbe
and
stos
movd
inc
repnz
sbb
xchg
aad
adc
or
mov
enter
cmp
jne
and
pop
jbe
aad
sub
cli
lods
push
js
add
es
stos
out
jae
xchg
dec
push
jmp
out
test
jmp
setb
cmpsb
pop
lock
dec
fisttpl
pop
mov
push
dec
in
mov
out
insl
lods
in
and
sbb
mov
sbb
fldenv
add
sub
into
sub
ficompl
fdivp
lahf
adc
pop
movsb
add
jecxz
jbe
jbe
lock
pop
jecxz
xchg
adc
fwait
pop
sbb
add
sub
lods
add
insb
pusha
sbbb
test
pop
gs
dec
repz
outsl
loop
loope
in
mov
push
int
fisubl
stc
xor
jg
call
cmp
pushl
adc
add
jns
stos
pusha
popf
out
test
test
mov
cpuid
pop
jge
push
cmp
adc
ds
mov
aaa
repnz
rcl
out
mov
out
aas
and
shlb
add
movsl
jno
loopne
mov
adc
mov
cltd
pop
adc
cmc
adc
and
in
dec
xor
xlat
xchg
sub
test
or
xchg
mov
or
jno
adc
loope
aad
fidivl
repnz
jb
test
jne
push
das
inc
xchg
cli
rclb
push
cwtl
loope
adc
xor
mov
jo
pop
cmp
je
lret
fldl2t
pop
jmp
xchg
dec
ljmp
dec
jne
push
sub
test
in
test
add
repz
repnz
fisttpl
nop
ja
nop
push
bound
jmp
push
add
pop
cmp
inc
lret
out
xlat
outsb
faddl
fidivs
mov
xchg
int3
mov
pop
mov
mov
cmp
sbb
mov
xor
daa
jge
add
inc
xchg
imul
mov
sahf
jl
mov
addr16
xor
fdivs
shlb
sbb
test
in
and
leave
test
gs
xor
es
neg
out
xorb
cmp
shll
cmp
or
jno
xchg
or
movsl
nop
scas
ret
fimull
jbe
loop
fistl
loope
imul
mov
mov
in
cmp
insl
cmp
cld
pop
cmp
dec
sbb
iret
fildl
mov
cld
in
subl
in
add
or
dec
mov
std
xorb
mov
mov
inc
mov
cmp
popa
xchg
pop
les
mov
adc
dec
loope,pn
cmp
int3
sbb
or
mov
fisubrl
add
cmp
push
je
je
mov
cmp
sub
out
xor
shrb
mov
inc
and
mov
dec
das
push
gs
in
dec
mov
sub
popl
sar
add
push
dec
jmp
xor
jmp
pop
xor
test
jp
cs
dec
jo
jp
and
shrl
fidivs
and
arpl
movsl
out
sub
mov
cvtps2pi
repz
mov
sti
adc
pop
jno
jns
pop
cmp
dec
cmp
fs
out
fisttps
ja
negl
inc
push
mov
xor
js
xor
inc
adc
or
lret
femms
jge
int3
data16
sahf
xchg
scas
mov
ret
stc
sub
lahf
add
push
sub
pop
push
jle
push
shl
mov
xchg
ficomps
push
pop
cs
xor
int
pop
mov
sub
dec
cmp
mov
outsb
jecxz
cmpsb
push
orb
jg
push
and
cwtl
xchg
in
in
pop
cmp
and
xlat
out
pop
mov
icebp
xchg
in
pop
sahf
or
push
inc
jl
xchg
pop
les
das
push
inc
add
sub
bound
mov
hlt
add
imul
lock
mov
push
sub
in
mov
fildll
sbb
bound
subl
mov
mov
jecxz
mov
push
divb
mov
outsb
shrb
and
test
xchg
cmp
sub
iret
pop
sub
sub
jns
jno
repz
std
dec
clc
nop
sub
pop
lods
jo,pn
int
dec
xor
sbb
insl
mov
mov
mov
or
inc
adc
popl
cmpsl
cmp
xchg
scas
les
aaa
push
sbb
stos
loop
fucomi
les
sbb
xchg
cmp
out
pop
divb
mov
mov
imul
mov
jg
dec
inc
divb
mov
ja
clc
or
mov
sub
lods
pop
xor
sub
pop
pop
sarl
jb
ja
repnz
loope
sti
repz
sub
dec
icebp
mov
fisubs
popa
mov
sub
xor
out
pop
andb
mov
mov
addr16
out
xchg
and
dec
test
mov
ljmp
adc
aam
adc
adc
lods
inc
inc
cltd
xor
and
cmp
inc
out
or
xchg
jno
jecxz
or
das
add
sub
push
mov
rorb
loopne
sbb
pusha
add
aaa
js
inc
stos
push
fldl
dec
gs
fndisi(8087
add
sub
sti
and
jo
shl
inc
jne
lods
xchg
xchg
aam
xor
cltd
dec
or
lret
fnstcw
inc
mov
adc
inc
lods
adc
pop
test
in
enter
xchg
test
cmpsl
aam
out
mov
inc
sub
mov
sti
pop
or
xor
or
scas
andl
test
jg
daa
cmp
inc
pop
push
fbstp
clc
adc
sub
cli
mov
out
jg
fdivs
jne
jmp
jmp
mov
adcb
xchg
jmp
mov
jb
inc
movsb
push
js
push
hlt
inc
gs
aad
jle
push
call
int
outsl
add
inc
push
popf
inc
std
mov
ss
jo
movsb
out
mov
and
mov
dec
jle
jg
mov
push
pop
sbb
mov
mov
shl
and
js
push
icebp
sub
mov
mov
pop
pop
xchg
aaa
scas
pop
cltd
inc
jmp
push
insb
jmp
rcrb
lcall
dec
enter
in
cli
jnp
out
mov
je
mov
inc
push
inc
push
imul
fistl
xor
decb
mov
sahf
lret
rolb
imul
arpl
or
cmp
push
insl
adc
rcl
jp
jne
mov
inc
push
or
ficoms
ljmp
cld
mov
xchg
daa
inc
xor
jp
mov
inc
jb,pt
cmp
dec
jae
adc
in
lock
xor
bound
loope
push
jge
inc
jno
adc
int
ljmp
pusha
clc
mov
mov
loopne
daa
mov
lahf
jnp
dec
inc
imul
cltd
movsl
push
sbb
cwtl
shlb
sbb
adc
sbb
pop
js
jae
insl
js
push
push
cs
loope
mov
adc
xlat
push
mov
fists
cwtl
das
mov
xchg
loopne
aaa
addr16
push
and
and
pop
pop
pop
shr
sti
xchg
sbb
cmp
sub
mov
sub
dec
in
ja
cmp
add
movsb
mov
js
mov
inc
and
shll
lock
cmp
arpl
or
xchg
shrl
jle
imul
or
fidivrl
xorb
shrl
add
xor
jae
pop
adc
lahf
cwtl
mov
out
add
imul
pop
add
movsb
pop
jns
mov
push
scas
sub
lret
pop
pusha
push
push
xor
repz
mov
cmp
lods
xor
lds
jge
cmpsl
movsl
lret
xor
pop
cmpsb
inc
stos
xlat
inc
lret
xor
test
movsb
aas
aad
add
scas
mov
fldcw
aaa
or
dec
jns
mov
sub
jge
mov
stos
out
inc
inc
pop
cmp
insb
int
push
lea
jne
in
sub
outsb
sbb
insl
xchg
mov
into
into
xchg
sub
xlat
test
pop
mov
xlat
out
or
xchg
das
jl
mov
stc
nop
or
subb
push
lock
aam
dec
fwait
bound
and
inc
mov
out
mov
sub
jg
mov
and
or
mov
inc
sbb
inc
cmp
faddp
cmc
adc
xchg
xchg
cmpsl
push
aaa
cmp
stc
lock
or
int
add
out
mov
or
adc
movsl
fs
and
sbb
lret
xchg
push
lea
mov
rcrl
hlt
inc
lret
push
gs
in
xor
in
jnp
add
sbb
pushf
ljmp
jl
repz
js
jne
push
jmp
fcoms
dec
int3
jecxz
push
out
movsl
jmp
or
mov
pop
jbe
cmp
add
popf
adc
mov
push
loopne
in
lret
std
add
ja
out
dec
sbb
shll
dec
cld
push
sahf
push
sbb
inc
mov
gs
cmpsl
hlt
mov
jg
icebp
or
bound
inc
shlb
cmpsb
repnz
daa
out
in
jg
xchg
cltd
mov
sbb
jbe
fnstcw
pop
add
add
push
test
add
pushf
xor
ljmp
pop
lea
jae
and
xchg
push
and
ljmp
into
orl
lea
inc
test
fcmovnbe
test
mov
gs
pop
inc
xchg
aam
pop
fisttpll
bndstx
fs
xchg
loopne
repnz
loopne
notl
xchg
es
pop
lock
imul
movsb
imul
lea
adc
stc
add
test
dec
or
ret
sbb
push
mov
push
in
xor
push
push
dec
push
insl
push
and
sbb
add
inc
add
cmp
imul
mov
mov
xchg
sbb
inc
and
mov
xor
mov
gs
inc
gs
fcmovne
mov
dec
sub
mov
loopne
sub
hlt
gs
push
mov
sbb
nop
test
dec
cmpsb
pop
fmuls
daa
jmp
xor
popa
loopne
addl
mov
push
and
std
dec
jbe
jno
xchg
int3
jbe
xchg
sub
cmp
xchg
xchg
add
add
xchg
jecxz
ds
sub
std
mov
loope
adc
daa
fists
or
mov
mov
scas
jns
push
inc
fistpl
xchg
in
popf
add
adc
ficoml
xor
and
inc
test
jl
pop
xchg
loop
ja
mov
cltd
mov
mov
sub
mov
dec
outsl
idivb
fidivrl
xlat
and
xchg
mov
sbb
pop
aam
mov
mov
jl
xchg
hlt
inc
fsubs
sub
imul
loop
mov
aam
inc
push
ficoml
andl
es
lret
outsb
sahf
movsb
cmp
call
cltd
les
sbb
cmp
cltd
jo
mov
pop
jl
pop
insl
mov
loopne
iret
jno
push
aaa
jo
addl
mov
or
ret
jb
add
xchg
daa
test
test
inc
fdivrs
aas
pop
mov
push
adc
push
mov
or
repz
cmp
add
inc
sub
es
pop
pushl
sub
ljmp
int3
fisubrl
loop
push
addr16
flds
xor
xor
mov
jno
pop
rclb
push
cmp
aam
mov
int3
pop
out
js
arpl
out
sbb
sub
fs
mov
sbb
ja
mov
scas
shlb
jns
test
loopne
fidivs
push
int3
in
sar
pop
insb
cmc
push
mov
lret
push
cmp
inc
cmp
cmp
jge
stc
xchg
lds
pop
test
sbb
sbb
push
or
aaa
jecxz
xor
xor
inc
sub
push
call
inc
sbb
inc
bound
xchg
addr16
pop
push
imul
mov
ljmp
lds
sub
and
repz
iret
jp
add
int3
arpl
cld
adc
insl
add
mov
mov
into
lods
mov
xchg
or
insb
cmp
dec
push
shl
mov
pop
mov
and
bound
and
mov
xor
mov
sub
jg
mov
das
lods
out
fiadds
sub
xor
sbb
xor
xor
sti
sbb
sbb
cltd
hlt
push
dec
cld
adc
sahf
stos
scas
icebp
pushf
andb
f2xm1
jns
inc
push
iret
push
out
pop
fucomi
add
test
ja
fcmovu
xchg
leave
and
imul
mov
int
sub
jae
jbe
leave
inc
xchg
outsl
out
mov
dec
sub
xchg
sub
push
and
xchg
jo
fs
out
mov
jmp
jmp
test
push
hlt
lcall
outsb
push
loope
sbb
sub
cmp
fisubl
push
lcall
sbb
aas
pop
in
ljmp
xor
fs
inc
fisubl
inc
pop
cmpb
andb
add
adc
and
mov
xchg
int3
cmp
pop
mov
adc
jge
lods
or
xchg
jle
xchg
jg
or
lcall
in
pop
in
in
or
into
pop
push
out
mov
pusha
mov
mov
add
pop
adc
push
jmp
push
insl
dec
dec
les
dec
dec
sbbl
and
lret
push
jg
inc
scas
pop
mov
out
and
sti
mov
cs
test
push
aam
push
push
aaa
mov
inc
push
jne
pop
add
andl
movsl
jl
sahf
or
int
add
scas
jns
xlat
pop
inc
sub
ja
bound
rclb
mulb
stos
inc
data16
cmp
popa
ljmp
mov
push
jbe
cli
lret
repnz
and
andb
stc
fdivrs
popa
clc
dec
pop
sub
sbb
roll
iret
dec
and
loope
leave
fbld
jecxz
mov
aam
pop
xorb
shlb
negb
roll
je
movsl
xor
sub
mov
loopne
mov
jmp
cmpsb
mov
or
pushf
loopne
popf
push
lcall
cmp
sub
stc
and
pop
xchg
jnp
sub
sbb
dec
mov
jg
into
mov
ljmp
push
adc
and
mov
andb
mov
call
xchg
xor
cli
jl
add
imul
jmp
dec
lahf
xchg
adc
cld
lds
push
shrb
mov
xchg
pop
lock
jmp
daa
adc
in
xchg
test
roll
and
jne
pop
mov
shll
inc
add
test
or
mov
add
outsb
faddl
test
ja
jp
add
xor
loopne
dec
sub
mov
mov
outsl
fldcw
mov
xchg
mov
es
pop
fldl
test
xor
sbb
mov
sub
std
sbb
xor
adc
sub
outsb
inc
popf
inc
adc
cmp
les
mov
adc
fs
dec
pop
movsl
and
cs
jp
dec
sti
inc
dec
pop
lcall
cltd
dec
adcl
xor
int
outsl
fxch
test
add
sbb
cmpsb
xchg
iret
lods
mov
xor
rorb
icebp
mov
mov
xchg
adc
shrl
addl
adc
subl
mov
inc
dec
jb
out
push
xchg
shlb
repnz
lcall
pop
hlt
imul
xor
mov
fcmovne
mov
fs
xchg
ret
pop
les
jns
add
cmpsl
lcall
fdivrs
cmp
adc
ss
stos
add
test
pop
sbb
mov
xlat
stc
sahf
in
dec
lahf
sub
cwtl
add
sbb
ljmp
loopne
pop
mov
int3
ret
je
add
jne
out
add
std
dec
pop
sbb
jecxz
sub
aaa
je
and
ja
stc
pop
pop
mov
ret
sub
jnp
loop
repnz
lret
aas
shll
ret
pusha
loop
jae
fcmovu
push
popf
lods
mov
pop
outsl
pop
lods
jae
sbb
jl
outsb
cmpsb
add
jg
dec
pop
out
mov
movsl
xor
outsl
mov
insb
lret
xchg
adc
xor
lcall
pop
jbe
push
jbe
aad
daa
jo
pushf
cld
inc
cmpsl
cmpsb
out
and
mov
xor
adc
imul
lods
and
xor
lock
das
test
hlt
sub
mov
cwtl
loop
inc
ja
fsubrl
mov
xor
xchg
jl
loope
aas
push
add
xchg
dec
pop
scas
popf
push
sub
mov
mov
push
pop
insl
leave
test
into
sub
or
inc
cs
add
stos
cmpb
cmp
scas
inc
cmpsl
inc
adc
lock
cwtl
gs
shl
jge
or
pop
jmp
shl
cmpsl
push
dec
pop
jle
cmp
push
xchg
es
les
adc
push
rcrl
cli
jne
pop
jmp
out
data16
pop
fwait
enter
mov
sbbl
rolb
repnz
fimuls
push
xchg
scas
inc
mov
jb
and
test
inc
xor
je
pop
ss
adc
cmp
lret
jle
jae
mov
xor
jb
push
call
call
dec
int3
pop
mov
rorl
pop
adc
xchg
pusha
lea
add
push
jmp
sub
xchg
add
cli
xor
lcall
jno
mov
push
ljmp
shll
add
mov
adc
mov
lcall
popa
ror
fsubl
pop
push
and
mov
inc
cmpsl
out
out
mov
out
cmpsb
test
pop
jmp
mov
stos
fs
les
cmp
cmp
mov
dec
loopne
decl
sbb
cli
push
fs
subl
subb
addr16
mov
xor
lds
pop
adc
add
push
clc
jbe
in
cmpsl
xchg
std
lods
test
ss
sub
sub
call
lds
sahf
inc
pop
mov
adc
push
aas
xchg
mov
stos
add
mov
movsl
xor
cmpsb
inc
adc
scas
imulb
push
jae
jae
cld
outsb
cld
sbb
jbe
xor
adcb
or
out
cmpsl
sbb
mov
lea
aaa
roll
inc
cmp
pusha
cli
xchg
adc
les
sub
das
pop
aas
pop
adc
add
aad
sub
sar
outsl
mov
movsb
rclb
test
movsl
mov
xor
dec
jne
pushf
jge
je
cmp
add
rorl
call
test
es
shrl
movb
mov
popa
sub
dec
mov
jecxz
inc
loope
stos
pushf
popa
xorl
imul
sub
ret
push
or
jae
and
adc
sub
pop
dec
pop
cmp
xchg
jmp
lahf
pop
je
cmpsl
xor
outsl
aas
dec
mov
inc
sbbl
and
pusha
inc
jbe
subl
out
adc
inc
pop
jnp
ljmp
ss
scas
pop
mov
mov
cmpsl
dec
fdivrl
sbb
xor
jl
adc
test
mov
fistl
cli
pushf
pop
push
cs
and
xor
imul
push
test
mov
stos
xor
cltd
pop
mov
add
daa
adc
pushf
shll
xorb
mov
inc
ret
das
cli
inc
mov
gs
xor
test
fildl
dec
out
jno
mov
push
enter
lods
fdivl
xchg
sub
inc
add
push
or
dec
movsb
pop
ds
pop
xchg
scas
and
cmp
rclb
lods
outsl
jmp
fisubrs
es
adc
pop
imul
mov
ja
movsbl
out
xchg
push
or
arpl
ja,pn
xor
inc
cwtl
cmc
push
mov
enter
push
popa
mov
adc
lea
pop
cmp
adc
xchg
xchg
fsubp
cmp
icebp
or
mov
jno
cs
sbb
loope
movsb
mov
shrl
lahf
cli
test
shll
pop
movsl
loop
mov
stos
xchg
scas
pop
sbb
scas
je
enter
ds
cld
sbb
inc
jecxz
js
pushf
push
dec
inc
out
xchg
dec
dec
or
and
add
sub
jp
sbb
pop
adc
inc
gs
inc
fbstp
jmp
in
xchg
iret
loop
js
push
rcll
lock
and
jle
jo
lcall
inc
cmp
cwtl
inc
lret
es
in
int
divl
call
mov
mov
sbb
xchg
sahf
cmp
jns
and
sbb
cwtl
mov
sbb
or
lds
stos
and
mull
cltd
push
xchg
fwait
leave
and
out
arpl
and
and
cltd
fs
sub
ds
push
cld
pop
sub
cmpsl
sbb
xchg
or
cltd
mov
ret
sub
lcall
push
jne
push
or
pop
fists
ret
mov
push
outsl
pop
test
psrlw
test
aaa
ficompl
es
std
xor
jns
mov
xchg
fmul
jno
mov
fists
int3
outsl
je
pop
push
jp
mov
ja
mov
or
movsl
mov
cmp
lods
jmp
test
and
fidivrs
fisttps
scas
repnz
mov
fistl
outsb
and
adc
push
cld
jp
sti
cld
outsl
icebp
mov
dec
in
add
adc
jl
push
pop
out
stos
pop
js
add
push
lds
xchg
cmp
movsb
xor
das
cli
dec
xchg
inc
mov
stos
cli
sub
movups
test
push
outsl
pop
incb
repz
mov
addl
pop
xor
lea
leave
mov
cwtl
mov
in
ret
call
test
std
ret
jns
fisubrl
test
repz
stos
jecxz
xchg
lret
addr16
cwtl
ss
jo
xchg
scas
scas
cmp
fmull
pop
in
stos
fisubrs
push
add
cwtl
cli
cmpsb
cld
xchg
fcomps
mov
bound
sbb
xor
daa
jl
sahf
and
push
mov
in
push
test
jo
mov
cmpb
inc
mov
lods
cmp
inc
sub
imull
jo
int3
ljmp
pop
popa
or
mov
imul
sbb
aas
mov
out
jno
int3
mov
into
nop
ss
cmpsb
out
insl
or
xchg
lods
inc
jo
jp
in
test
adc
mov
cmp
cmc
dec
pop
popa
aaa
fbld
cli
fwait
cmpsl
mov
or
push
popf
push
je
push
jmp
inc
iret
mov
repz
mov
mov
enter
or
adc
out
lea
in
xchg
xchg
addr16
adc
jb
lret
scas
xorl
dec
inc
jle
shrl
push
int
test
push
sarb
and
rcl
mov
pop
imul
adc
and
xor
cmp
mov
sub
or
popl
rorl
notl
xchg
add
mov
pop
repnz
out
mov
test
pop
push
pushf
mov
or
sbb
dec
jb
dec
clc
sbb
mov
mov
std
mov
sahf
mov
xchg
inc
fadds
cmp
jg
cli
fstpt
jmp
push
test
mov
bnd
inc
aas
inc
lcall
clc
mov
cmp
jmp
ja
push
add
jp
dec
out
inc
mov
mov
lahf
nop
sbb
add
lods
test
mov
repz
jge
movsb
sti
sti
mov
dec
jnp
sub
scas
nop
xor
je
pop
sub
inc
stc
pop
stos
mov
insb
inc
mov
in
adc
fmul
push
add
and
enter
mov
in
inc
push
sbb
ja
xlat
cmp
mov
xchg
scas
into
push
or
jecxz
jg
xchg
out
xchg
aaa
loopne
cmpsl
jbe
mov
xor
or
js
scas
imul
jp
push
fwait
je
divb
lret
xchg
adc
pop
inc
scas
data16
popf
imul
lods
mov
mov
mov
cs
aad
outsb
adc
je
cmp
outsb
cmp
dec
stos
iret
xor
push
xor
mov
aas
ljmp
jmp
mov
out
popa
and
jo
outsl
sbb
dec
std
mov
push
in
movsl
xor
call
pop
push
sbb
mov
xlat
scas
lods
testb
jl
sbb
ds
ficomps
insl
cmc
or
lret
mov
jmp
jo
jo
sub
dec
mov
sti
dec
mov
std
mov
rclb
aaa
fs
out
sub
in
popl
movsb
xchg
stc
insb
add
popf
mov
or
mov
xchg
lods
add
sbb
add
leave
pusha
jo
nop
dec
loop
mov
ljmp
sub
cmp
jnp
fisubrl
fdiv
das
aam
sub
dec
imul
cs
xlat
test
jns
sbb
stc
nop
je
out
xor
insl
loopne
or
insb
mov
pop
cmc
mov
iret
loope
outsl
shl
gs
test
or
popa
sbb
cmc
mov
stc
xorb
mov
push
pushf
jl
sub
sub
mov
xchg
jle
dec
fs
stc
aam
sub
je
sti
xchg
jecxz
outsl
negl
sbb
je
aaa
inc
pop
pushf
shr
int
into
enter
mov
adc
mov
or
or
or
add
arpl
aas
sahf
xor
and
cli
push
int3
movsl
xchg
jbe
mov
sbb
jne
dec
cmp
cmpsl
outsb
ss
cmpsl
cs
pop
mov
testb
add
fstl
std
mov
xchg
clc
test
mov
inc
fnstcw
mov
xlat
sbb
or
js
xchg
push
push
mov
inc
test
pop
jns
loopne
dec
push
cmp
mov
fldcw
sbb
mov
and
cld
shl
inc
daa
ficoml
int3
lret
pushf
mov
or
movsl
pop
xor
pop
out
bound
lahf
and
jno
lret
lret
push
ror
arpl
mov
cmpsb
pusha
mull
lret
xchg
push
jg
inc
push
mov
into
ficoml
fstps
push
xor
sti
test
addr16
into
or
out
test
mov
pop
add
testb
mov
ss
int3
jg
add
adc
xchg
out
rorb
inc
push
mov
and
scas
loopne
cli
pushf
lods
pop
mov
sub
jae
mov
xorl
jecxz
je
popa
mov
mov
xor
bound
out
ja
push
popf
aam
xchg
push
mov
jle
xor
leave
mov
and
xor
popa
clc
shrb
movsb
mov
cli
or
pusha
ljmp
mov
in
dec
pop
ljmp
shl
and
movsl
rcll
mov
push
mov
fstpl
shrl
ret
adc
aam
scas
add
xor
shl
xor
ret
test
rcrb
ja
mov
les
or
loop
mov
mov
pop
jge
popa
clc
test
sbb
and
pop
ror
adc
cli
push
adc
pop
lcall
xlat
test
arpl
adc
and
pop
mov
mov
push
call
stos
outsl
mov
out
addr16
jno
hlt
mov
mov
leave
mov
in
stos
or
pushf
xor
leave
push
lea
imulb
pop
pop
sbb
lods
xor
stos
mov
int3
push
lea
mov
cmpsl
jo
xchg
sub
and
mov
mov
mull
daa
das
test
mov
faddp
pop
and
inc
push
xchg
inc
loope
icebp
mov
xlat
inc
out
aad
xchg
jo
stc
popa
mov
push
test
jns
ja
insl
lcall
sarb
test
pop
lret
sub
mov
fnstenv
push
cltd
jl
inc
mov
adc
stos
insl
add
fadd
es
test
push
fadd
pop
jbe
icebp
sub
xchg
mov
push
or
and
mov
scas
lock
mov
xor
lods
xor
and
std
dec
les
sub
mov
add
and
cltd
stos
mov
repnz
subl
cmpsl
add
mov
sub
mov
mov
std
std
xchg
mov
pop
pusha
shl
xor
pop
std
inc
add
sbb
fstl
push
and
iret
das
and
popa
lods
jno
jnp
ja
sub
out
rcrl
sbb
mov
ljmp
mov
popf
adc
cli
inc
or
cmp
cmp
add
in
and
jns
daa
mov
bound
stos
adc
arpl
mov
xor
add
shlb
ja
pop
push
imul
into
dec
outsl
sbb
sbb
mov
mov
movsb
popf
sbb
dec
mov
or
mov
bound
push
dec
inc
loopne
sub
repz
stos
jp
mov
mov
xor
repz
mov
faddl
or
jae
leave
testl
mov
add
xor
xchg
push
cld
xchg
andb
mov
sbb
xchg
ljmp
test
pop
fmulp
sub
pop
jnp
pop
ret
jo
pop
mov
xor
sbb
pop
add
aas
jecxz
pop
fstpl
jmp
inc
insl
sbb
xchg
jbe
mov
out
or
mov
mov
lods
pop
add
xor
dec
mov
xor
lods
add
femms
xor
arpl
xchg
mov
mov
loopne
or
and
shrl
xchg
jo
mov
insb
dec
pusha
lds
aad
call
or
cmp
int
rorb
popf
outsl
or
sbb
pop
andl
add
les
loop
adc
inc
mov
jnp
jecxz
jp
out
movsb
jecxz
repnz
and
pop
in
add
mov
cmp
inc
push
push
rcrl
pop
mov
push
jecxz
adc
lods
ljmp
pusha
sarb
negb
mov
pusha
mov
adc
jo
add
out
pop
jle
call
or
aaa
mov
push
sti
inc
mov
xor
out
jmpw
push
imul
sti
mov
sub
push
arpl
divl
loopne
lea
pop
fimull
psrld
mov
repz
leave
fstps
inc
andl
dec
aad
movsl
fsub
jmp
jo
pop
test
inc
xor
ljmpw
shlb
fistl
xchg
add
fiadds
leave
addl
jmp
mov
jmp
or
sbb
xchg
jno
inc
add
and
push
iret
insl
xor
les
add
cmpsl
in
sub
je
les
leave
dec
in
lahf
aam
xchg
lcall
pop
test
fldt
adc
ja
movsb
ret
ds
jbe
dec
mov
fsubrl
fldcw
scas
mov
std
mov
out
cwtl
test
jecxz
and
lret
pop
mov
mov
lock
mov
lret
scas
push
test
je
pop
mov
xchg
std
nop
or
mov
mov
test
arpl
out
sub
adc
mov
insb
push
lcall
rorl
sub
subl
and
fs
lods
test
fidivl
frstor
sbb
cli
jnp,pt
jo
push
scas
push
lcall
jl
dec
ja
fildl
fsubrl
enter
xchg
lds
in
pop
dec
dec
inc
lds
std
int3
ret
mov
into
sbb
scas
or
push
mov
pop
cs
testl
sbb
shll
repz
adc
mov
adc
lods
inc
shlb
mov
mov
cli
sbb
dec
xchg
arpl
cli
in
dec
sbb
xor
pop
xchg
or
adc
bsf
or
sub
cmp
pop
mov
jae
packsswb
pusha
add
in
ret
rolb
push
add
testl
lds
mov
adc
jae
inc
gs
nop
mov
ret
adcb
dec
sub
rcrl
fadd
out
jo
xlat
test
push
in
mov
mov
fnstcw
pop
cmc
dec
mov
js
fiaddl
xor
mov
pushf
jl
xchg
shll
inc
dec
pop
mov
sbb
or
sub
pop
ja
call
ss
rolb
mov
cmp
ja
icebp
adc
pusha
mov
mov
fcmovnu
out
ud1
pop
test
scas
cmp
pusha
xorb
rcrl
pop
push
inc
xchg
mov
mov
movsl
xchg
rclb
cmp
bound
cmp
test
int3
or
dec
sub
dec
mov
jo
jle
mov
jae
scas
xorb
sub
into
leave
enter
cli
jno
add
add
jbe
and
mov
lret
jmp
adc
rclb
std
adc
adc
sub
inc
in
xor
jmp
cmpsb
and
mov
or
subb
and
dec
dec
xor
mov
cld
fwait
sub
push
loop
inc
sbbl
or
adc
inc
imul
xchg
lea
loop
repnz
inc
mov
cltd
out
fistpll
cs
cmp
aad
mov
push
sub
rcrl
mov
icebp
sbb
pop
jnp
add
pop
push
add
dec
fsubs
add
js
clc
and
std
push
scas
and
pusha
shll
lcall
data16
cmp
pop
mov
lret
jne
pop
pop
add
int
ljmp
jl
ljmp
out
test
and
dec
fisttps
mov
push
push
push
faddl
cmp
and
test
pop
push
std
inc
cmpsb
cmp
and
pop
insl
or
xor
add
sub
mov
fs
test
or
das
adc
aad
mov
and
mov
lds
lcall
inc
filds
pop
mov
jbe
add
es
xchg
dec
or
jb
lcall
in
sub
leave
jg
xchg
scas
inc
insb
inc
dec
adc
mov
mov
in
and
cmpsb
loopne
cmc
pop
dec
adc
shrb
aas
mov
pop
fldln2
test
mov
and
clc
sarb
clc
adc
int3
or
in
mov
inc
imul
popf
lea
clc
add
fsubl
adc
jmp
lret
or
push
inc
mov
sti
adc
sub
and
fsubrl
int3
cmp
test
adc
mov
je
cmp
sbb
jnp,pt
imul
pop
ljmp
pushf
vpunpcklwd
push
adc
mov
cli
shlb
lcall
fsub
mov
mov
lahf
hlt
dec
inc
push
xchg
mov
jnp
js
inc
sub
addr16
rcr
into
mov
mov
push
or
pop
in
mov
sub
xor
push
out
lock
fsts
mov
xchg
loop
cltd
push
adc
int
mov
pop
dec
push
mov
clc
xlat
and
loop
jg
add
sti
fnsave
aaa
jne
sbb
or
out
pusha
and
push
stos
mov
pushf
repnz
clc
or
test
xor
cmp
insb
insl
rcl
pop
pop
pop
xor
dec
outsb
ret
mov
mov
push
push
mov
dec
push
sahf
testl
inc
add
mov
mov
or
lcall
pop
dec
mov
ret
call
push
imul
call
xchg
int
cmp
arpl
mov
sti
js
mov
xor
movsl
fistpll
dec
or
ss
popa
leave
imul
int3
xor
xchg
iret
jecxz
jl
adc
es
je
pop
pop
lds
jmp
xor
aas
push
jmp
cmc
addr16
shl
cmp
sbb
stc
nop
hlt
lea
lcall
popa
jg
rorl
lcall
push
stos
push
stos
pop
cmp
fdivl
or
pop
dec
cltd
or
and
bound
jge
push
or
lret
xchg
dec
or
repz
ret
hlt
inc
mov
xchg
shr
stc
pop
or
adc
sahf
lock
xor
jmp
imul
icebp
jmp
or
hlt
mov
jg
jns
xchg
sbb
dec
mov
aam
add
lea
mov
cmp
inc
mov
jge
cmp
sbb
aas
dec
xchg
aaa
mov
cmp
and
ficompl
jg
sbb
mov
inc
outsl
sub
sbb
sub
les
inc
andl
sarb
add
or
mov
pushf
lea
jl
cld
sub
inc
cld
mov
push
test
xchg
sbb
test
push
add
inc
push
sub
jne
mov
mov
cld
and
outsl
shl
aas
cli
mov
fwait
cmpsl
aaa
sub
jmp
dec
push
cwtl
xchg
out
aas
outsl
pop
lods
outsl
rorb
mov
pop
pop
push
jnp
iret
insb
daa
popa
std
or
clc
push
pop
cld
lcall
jae
pop
pusha
ds
pop
adc
xor
outsb
iret
stos
push
scas
addr16
lret
push
sbb
xor
pop
xchg
cmp
or
dec
jnp
mov
and
mov
cltd
xchg
hlt
psubw
sub
sbb
pop
xchg
bound
movsl
icebp
inc
xor
imul
sbb
out
add
dec
popa
sub
mov
xor
or
test
imul
pop
adc
or
inc
rcrb
lret
push
sti
testb
cmp
flds
mov
enter
aad
cmp
push
dec
dec
in
ja
cmp
data16
push
dec
arpl
xor
std
cmp
insb
stos
xchg
dec
pop
inc
inc
ret
sub
fisubl
mov
and
sbb
push
jmp
jbe
jo
stc
cmpl
rol
jmp
pop
clc
enter
push
jb
xchg
ljmp
sub
and
mov
sti
pop
cmc
out
push
insb
scas
imul
fldcw
sub
cmp
test
sub
aaa
pop
jo
shr
adc
pop
or
aaa
cmp
and
sahf
subb
pop
sub
outsb
aad
stos
pop
ret
inc
push
aaa
xor
inc
inc
xor
jne
mov
lods
ljmp
xchg
popa
lret
in
lds
xchg
fbld
stc
sbb
frstor
xor
push
std
test
jge
fiadds
scas
das
mov
jne
inc
add
cmpsl
fincstp
lahf
push
repz
mov
scas
or
bound
adc
jbe
ds
or
push
ret
sbbl
lret
mov
mov
add
fwait
xchg
mov
out
sbb
push
cmp
fwait
pop
xchg
dec
les
rcll
jno
sahf
jg
inc
je
xchg
and
adc
pop
mov
dec
sarb
lcall
cwtl
das
or
sbb
loop
adc
xchg
fdivs
rcrb
inc
scas
sub
movsl
cmp
xchg
mov
outsl
add
push
inc
inc
xchg
push
and
mov
and
loopne
mov
jnp
fsubl
cmp
dec
sub
orl
xor
push
cmp
out
or
rolb
sti
push
rcl
aam
dec
inc
push
push
lock
dec
cmp
jae
sbb
adc
mov
mov
dec
mov
lods
leave
pop
subb
mov
bound
push
xchg
jo
fwait
pushf
add
add
jmp
xor
pop
std
push
sub
iret
in
cwtl
adc
dec
out
loope
sbb
lret
sbb
dec
pop
test
rorb
add
cmp
adc
aas
mov
push
sbb
ret
es
js
aaa
mov
leave
fabs
js
mov
sahf
push
mov
out
in
leave
hlt
mov
shrb
movsb
cmp
mov
and
mov
rcrb
and
daa
adc
jno
idivl
push
js
cmp
ret
dec
mov
dec
and
popf
leave
adc
je
jae
jle
movsl
pop
loopne
addr16
clc
stc
dec
mov
out
test
jl
and
loop
bound
jnp
test
sbb
mov
fstpl
cmp
and
mov
mov
das
jl
pop
lcall
dec
jecxz
test
sarb
cli
test
jecxz
adc
dec
dec
pop
data16
sub
lret
push
add
mov
in
push
outsl
lret
repnz
add
les
push
xor
mov
mov
mov
imul
pop
adc
mov
cltd
or
adcb
sub
mov
insl
mov
fwait
add
std
lret
fldenv
ror
push
in
jge
fidivs
test
shll
cmp
push
subb
push
ret
pop
dec
lock
stos
lock
adc
orl
sbb
movsl
repz
loopne
xor
dec
push
or
out
sub
pop
shlb
push
pop
scas
inc
push
aas
mov
pop
sti
int
inc
xchg
mov
xor
jmp
xor
addr16
mov
popf
jecxz
stc
nop
imul
fmuls
insb
push
push
sub
push
xorb
in
fstpl
ss
push
mov
cmpsl
dec
test
fcmove
push
or
scas
fldenv
mov
dec
repz
jne
xchg
rorl
nop
and
jmp
add
xchg
jmp
mov
or
mov
imul
mov
adc
shll
xchg
add
mov
and
or
pusha
cmp
fdivrl
xor
aas
push
lods
pushw
in
jbe
pusha
mov
insb
fistpll
mov
stos
or
mov
sub
sub
ss
jp
rcl
idivb
nop
cld
stc
insl
jle
jp
inc
jae
jo
js
les
jbe
mov
aad
sub
test
cmp
mov
push
push
or
mov
sub
pop
add
pop
ret
push
push
mov
ret
sbb
mov
inc
lret
dec
sbb
inc
mov
sti
lret
movsb
in
in
jb
inc
mov
and
jb
adc
or
mov
mov
xor
jno
adc
rclb
jae
push
jl
pop
movsl
shll
xchg
xchg
jo
repnz
sbb
ljmp
jle
pop
cmp
imul
in
or
out
jle
add
testl
add
test
adc
lods
js
cs
push
xchg
pfmul
insb
sub
mov
out
dec
rol
scas
push
je
sbb
pushf
dec
hlt
jno
mov
pop
int
pop
dec
mov
sti
test
loope
push
adc
loopne
or
mov
inc
lahf
enter
mov
jo
adc
add
sub
arpl
int3
dec
in
out
pop
scas
cs
hlt
cltd
ljmp
and
inc
fcmovnbe
dec
pop
mov
sbb
jo
aad
add
lahf
xor
mov
fmul
xchg
push
push
inc
add
or
int3
or
ds
fnstcw
push
fiaddl
and
scas
out
mov
pop
mov
mov
lret
and
scas
cmp
push
mov
mov
fdivs
insb
mov
or
sub
xchg
dec
int3
and
loopne
cmp
loopne
xor
mov
sbb
dec
mov
mov
daa
jl
jmp
sti
xchg
gs
scas
sahf
fsubrs
out
jmp
stos
inc
xor
frstor
sahf
mov
je
push
sub
xlat
push
mov
and
ljmp
sbb
fbstp
lahf
push
aam
jns
mov
mov
sarb
inc
pop
xor
xchg
pop
cmp
cmp
or
test
push
sub
test
push
stc
fucomp
sub
pushf
repz
shlb
outsl
mov
out
jbe
mov
lea
xchg
sub
insb
xor
call
dec
sub
adc
in
shrl
xchg
aaa
fwait
dec
pop
fistps
je
js
lds
addr16
inc
divl
mov
xchg
adc
shr
loope
cltd
movl
and
dec
loope
outsb
mov
push
repnz
xor
shr
mov
andl
jg
in
out
mov
push
inc
cmp
int
inc
inc
clc
out
incl
jno
aaa
jge
sbbb
mov
mov
call
or
inc
call
std
xchg
stc
sahf
outsl
pop
out
test
adc
dec
int
jle
dec
cli
repz
xchg
ret
addb
dec
or
mov
outsl
jb
xorb
orl
dec
test
dec
loopne
or
mov
cmpsl
les
push
or
inc
gs
fstpl
and
jmp
loop
mov
mov
repnz
int3
and
gs
lea
adcl
pop
cmpsb
jge
lea
mov
ret
cmp
dec
pushf
dec
add
inc
adc
shll
call
sub
cmpsl
mov
push
dec
data16
gs
lcall
arpl
sub
insl
or
mov
push
dec
dec
pop
popf
arpl
or
loope
or
cld
lcall
push
mov
mov
repz
je
movl
mov
int
mov
push
frstor
sub
ds
and
inc
cltd
xorl
js
pop
scas
mov
fstps
cld
or
xor
xchg
popa
int3
sbb
sbb
xor
sbb
sub
sbb
sbb
js
dec
mov
insl
test
mov
into
push
jmp
and
adc
cmp
js
aam
and
cmpl
iret
push
mov
or
pop
or
or
jnp
mov
mov
pop
cmpsb
ret
jno
loop
insb
jle
stos
ret
hlt
or
inc
ds
fwait
xor
ret
mov
out
lahf
pop
insl
rcll
pop
shrb
dec
pop
mull
mov
lods
and
or
xor
adc
mov
out
jns
ljmp
xor
loop
mov
jns
push
mov
adc
stos
sub
repz
or
dec
add
sbb
push
adc
fnstcw
fistpll
das
jl
mov
sub
push
or
and
or
in
mov
mov
orb
mov
mov
dec
cmp
lods
jmp
in
ret
hlt
mov
push
xlat
outsb
cwtl
adc
jbe
mov
test
pop
adc
xor
mov
daa
mov
movsb
ss
movsb
lock
dec
movsb
xchg
orb
aam
pop
mov
xchg
shlb
fadds
lods
test
or
dec
out
xchg
aas
outsb
inc
in
mov
mov
inc
dec
loope
and
xor
call
testl
cmp
jp
and
dec
cmp
test
sub
jo
pusha
and
jbe
inc
mov
bound
es
test
in
divb
dec
aas
rcl
xchg
jne
loop
icebp
mov
mov
lahf
arpl
push
jo
mov
and
in
mov
lahf
lcall
cmp
mov
fwait
jo
jb
cli
dec
push
mov
or
es
xor
pop
imul
cmpsl
xchg
sbb
mov
sbb
orl
cmc
and
cmc
mov
mov
sbbl
mov
packssdw
cmc
int3
jno
mov
and
orb
lret
mov
fcmovbe
sbb
cmp
and
test
inc
cmp
test
out
and
outsb
sub
dec
and
adc
jle
mov
mov
fnstsw
loop
leave
sbb
sub
lret
mov
sub
mov
inc
ret
fs
repz
add
sbb
push
or
pop
stc
and
imul
lea
push
in
out
mov
je
push
mov
dec
jmp
movsb
sub
stos
arpl
sarb
mov
in
rcrb
xchg
not
in
repz
jecxz
adc
or
cmp
je
loop
mov
sub
sbb
push
cld
movsb
out
xchg
and
adc
imul
lods
inc
sbb
int3
mov
daa
daa
lds
movsb
inc
sahf
xor
das
rol
pusha
int3
dec
inc
jnp
in
cltd
and
mov
xchg
jae
lcall
in
ret
jge
push
movsl
cmpsl
sbb
enter
incb
je
mov
inc
xchg
rcl
mov
or
mov
ret
push
xchg
jl
inc
mov
fistps
adc
xchg
and
lods
push
into
jl
pop
mov
cmpsl
rorb
ja
push
cmp
shrl
lcall
and
fmul
ret
scas
pop
jp
movsb
stos
inc
xor
jne
push
nop
imul
xchg
repnz
cmp
mov
nop
mov
push
pop
es
push
repnz
xchg
std
push
xor
cmc
out
sbb
scas
mov
add
popa
jns
push
out
xchg
mov
and
stos
pop
sbb
dec
xchg
fsubrl
cmp
pop
jmp
pop
icebp
hlt
scas
sub
push
inc
xchg
sbb
jnp
movsl
icebp
and
jns
sahf
xor
inc
mov
xlat
sbb
dec
aam
jg
adcl
lahf
xor
fdivrp
mov
test
addb
cmc
out
jbe
int
movsb
repnz
or
xchg
outsl
filds
fdivr
dec
sub
into
lahf
in
divl
data16
or
cmp
js
add
sub
lods
mov
dec
fistpl
mov
push
sbb
imul
mov
mov
mov
into
dec
mov
or
push
in
adc
and
mov
xchg
pop
or
adc
ds
and
aam
sbb
rol
sbb
push
loope
cmp
in
push
jle
inc
sub
sub
mov
ficomps
mov
mov
jb
aas
fmul
sbb
mov
jle
test
aad
or
clc
lahf
in
ds
dec
push
mov
lods
mov
orb
jo
mov
repnz
dec
ss
aad
xchg
dec
movsl
add
mov
aam
sbb
out
test
ds
lea
or
pop
push
push
adc
bound
xorl
pop
pushl
enter
inc
xchg
or
jns
and
pop
imul
and
cltd
pop
jl
cmp
cmp
sub
pushf
ret
and
jecxz
dec
and
outsb
test
or
arpl
mov
mov
loopne
out
adc
mov
ja
and
jl
mov
add
sub
inc
sbb
xchg
mov
push
stc
sti
movsb
rcrl
cs
out
sbb
aas
ftst
mov
mov
andl
sbb
ficoms
sbb
sarb
sbb
cmp
jo
dec
mov
pop
adc
mov
xor
xor
jne
mov
lds
cmpsb
cld
dec
sub
mov
test
xor
dec
movsb
aaa
imul
push
shr
data16
pop
js
shr
mov
in
sbbb
and
fwait
sti
jb
ss
ja
lods
test
mov
push
xchg
loope
std
out
out
push
cmp
out
movsb
call
cmp
push
push
pop
icebp
insl
pop
iret
push
xor
xchg
jns
adc
cmp
scas
mov
xor
shlb
mov
push
inc
bound
loope
cmpsb
es
xor
pop
pop
inc
ret
push
dec
ret
out
ret
into
stos
and
cs
mov
ds
or
mov
pop
outsl
and
jne
jge
lock
inc
push
push
stc
cmpsb
ds
and
leave
iret
mov
jbe
aam
enter
pop
jmp
jns
and
fimull
and
jp
jns
mov
xchg
jnp
xlat
stc
lods
lret
mov
movsb
pusha
cmpsl
lret
push
cltd
add
inc
push
pop
cli
adc
push
push
js
ret
push
cmovnp
add
lods
jne
mov
sub
cmp
push
repnz
cld
mov
sbb
test
xor
jecxz
adc
roll
gs
xchg
jns
push
in
pushf
mov
pushf
test
sahf
sbb
add
movsb
push
sbb
sbb
fimuls
outsb
test
in
adcb
mov
xchg
scas
add
andb
or
imul
repnz
mov
mov
ret
lret
psrlq
inc
cltd
sub
leave
pop
mov
jbe
push
sbb
sbb
popf
jmp
stc
dec
out
loop
pushf
sub
mov
outsb
mov
repnz
mov
pushf
daa
inc
divb
xchg
stos
hlt
lods
jb
add
fisubrl
into
sbb
dec
pusha
jne
lods
shlb
daa
ja
test
mov
add
inc
inc
jecxz
push
les
push
xor
rorb
mov
push
push
fnstcw
aaa
jmp
pop
sahf
pop
mov
cmp
mov
outsb
jno
mov
loope
hlt
ljmp
cmc
out
inc
outsl
push
orl
xlat
fs
xchg
mov
xchg
jb
and
add
nop
xor
roll
mov
pop
or
lret
fsts
fcompl
jmp
push
into
insb
lods
mov
or
aam
cwtl
inc
xchg
adc
negl
mov
icebp
mov
aad
lds
sbb
daa
mov
cwtl
mov
adc
adc
pop
and
mov
or
cmp
fidivs
push
lret
dec
clc
lea
aaa
dec
adc
ffree
mov
mov
xchg
xlat
fsts
idivl
adc
adc
aaa
jne
cmp
stos
int
inc
int
mov
push
sub
mov
cmp
addb
int
inc
xor
jl
push
mov
out
fucomp
adc
push
mov
mov
dec
pop
sbb
cmp
add
xchg
sub
in
lcall
cmp
mov
add
test
lret
push
sub
scas
mov
pop
pop
data16
mov
insb
mov
lret
cld
xchg
or
xchg
push
test
mov
outsb
daa
movsl
mov
lds
ja
out
and
cwtl
or
dec
cld
mov
enter
bound
mov
shrl
mov
jae
aad
mov
sbb
outsb
or
cld
xchg
xchg
out
out
lds
pop
add
int
scas
mov
testl
fidivs
xlat
sub
aas
fidivrl
jbe
inc
gs
ljmp
xchg
lds
movsb
sbb
jmp
inc
dec
out
out
aam
xor
mov
mov
lds
xchg
fmul
push
cs
mov
mov
and
push
push
mov
push
adc
inc
pop
loop
stos
push
out
pop
or
jnp,pn
hlt
stos
das
or
add
clc
jae
mov
mulb
lcall
icebp
sahf
pop
mov
insl
sti
add
fmull
out
fs
ror
cmp
in
sbb
cmc
aas
push
fs
shl
jmp
xlat
mov
rol
repnz
data16
sub
divb
dec
in
ss
jne
cmp
fbstp
ljmp
or
mov
shrd
in
lods
jmp
cmp
popf
ljmp
mov
fisttps
out
mov
int3
fsub
subb
divb
pop
mov
rcrb
scas
add
mov
ret
and
inc
dec
pop
inc
mov
xchg
rcrb
cmpsb
leave
and
ljmp
pop
ficompl
add
mov
push
xchg
or
cmpb
push
sbb
dec
ss
in
shll
pop
iret
dec
xor
rorb
js
es
dec
sub
mov
xor
xchg
fbld
lds
outsl
mov
cmp
mov
mov
add
lahf
dec
inc
sbb
insl
bound
rolb
or
pop
mov
iret
sub
add
cmpsl
lret
pop
dec
cld
fcmove
xor
mov
add
in
popa
or
inc
sub
inc
xchg
das
ds
fstpl
ljmp
sti
mov
cmp
add
in
inc
testb
xchg
and
jno
lds
cmpsl
sbb
in
mov
mov
push
sbb
push
sahf
inc
pop
mov
add
pop
aad
movsb
inc
aaa
into
pusha
mov
xchg
pop
and
mov
jg
scas
cmp
dec
imul
mov
andl
cmp
adc
pushf
pusha
inc
push
sbb
icebp
pop
mov
fiadds
xlat
mov
aad
stc
push
ss
sbb
cmc
mov
mov
xchg
pop
cmpsl
push
cmp
enter
sub
test
cmpsb
mov
pop
out
push
adc
push
and
pop
xchg
sub
jae
mov
flds
scas
dec
dec
loopne
in
inc
in
mov
inc
sbb
jno
xor
xchg
out
jg
push
add
cmp
jl
sbb
lahf
pop
sahf
nop
xchg
pop
and
stos
dec
add
add
mov
insl
addl
popl
or
xor
sub
loopne
cltd
cmp
xchg
cmpsl
inc
pop
dec
pop
adc
insb
lahf
xor
test
mov
push
jmp
aad
lock
xchg
mull
pop
loope
mov
cmp
sub
gs
mov
sarl
int
push
mov
or
xchg
scas
dec
enter
fbstp
outsb
jae
push
fldenv
aad
cmpb
lods
in
out
mov
subb
or
pop
cmp
pop
cmc
xchg
loopne
mov
xchg
test
adc
or
mov
gs
or
ljmp
jp
int
pop
dec
or
lcall
insl
lret
test
cmp
xor
and
loopne
pusha
xchg
out
push
jecxz
notl
mov
cmp
jmp
inc
fcomps
bound
into
mov
sbb
imul
push
mov
mov
call
adc
dec
dec
cld
xor
out
sahf
stos
aad
lret
jae
arpl
lods
xchg
and
int
repnz
add
arpl
add
lahf
push
xor
nop
mov
dec
dec
push
inc
dec
std
xchg
call
sti
out
xchg
pop
in
adcl
cmp
jp
pop
pop
push
mov
mov
mov
rcrl
outsl
push
leave
xchg
adc
int3
mov
dec
lcall
sub
hlt
nop
daa
call
or
ret
pop
outsl
dec
xor
ss
pop
mov
dec
cmpsb
cmp
cwtl
or
or
ret
mov
arpl
sbb
fsubl
dec
dec
xchg
aaa
sbb
cmpsl
and
jmp
jecxz
fsubl
out
ja
loopne
stos
inc
xchg
test
js
int3
mov
or
fisttpl
ss
enter
cmp
jne
adc
fidivs
aaa
daa
xchg
dec
xchg
loop
bswap
mov
outsl
adc
jg
jl
mov
aaa
pop
in
mov
cli
jne
sbb
add
insb
bnd
sti
xchg
mov
ret
sbb
cld
sub
cmp
pushf
sub
xchg
pop
mov
stc
test
andl
cli
lcall
fcomps
jge
test
test
sub
and
adc
iret
ss
out
int
jnp
mov
aas
inc
push
out
cltd
les
lret
cltd
outsb
jl
inc
xchg
pop
fisttpll
nop
stos
in
outsb
adc
call
sbbb
fwait
std
inc
int
fwait
xor
mov
loop
lods
lods
sbb
lds
mov
jg
outsb
adc
xchg
xchg
mov
jp
in
fadd
pop
test
mov
scas
sbbl
mov
pop
movsb
lret
lahf
pusha
or
rolb
mov
adc
test
or
jmp
xor
ds
repz
shrl
push
xchg
adc
mov
push
jmp
int
xor
icebp
lock
xor
lcall
sub
ret
mov
xchg
test
dec
inc
aaa
push
jg
cmc
cwtl
call
adc
inc
mov
pop
scas
cmp
cli
lahf
iret
cmp
mov
popa
pop
enter
xor
cmp
xor
add
cmp
cwtl
cmp
jge
sahf
lret
shr
mov
jne
pop
sbb
std
in
clc
hlt
add
inc
pusha
mov
jne
mov
add
or
test
mov
cmc
popa
lret
andb
sbb
xor
cmp
shr
hlt
mov
or
aas
push
or
pop
icebp
inc
adc
xor
arpl
outsl
fs
push
pop
stc
rcl
mov
push
or
adc
jno
jae
mov
fiadds
push
xor
ds
jnp
jbe
out
dec
adc
subb
mov
idivl
pop
fldcw
mov
ljmp
es
mov
pop
orl
aaa
adc
jno
cltd
data16
dec
mov
dec
arpl
inc
add
es
pop
mov
mov
lods
mov
add
cmp
lock
and
cmpsl
sbb
out
call
in
jmp
jnp
add
sbb
dec
xchg
or
repz
clc
sahf
lcall
jg
dec
int
mov
ficomps
nop
add
sub
jle
push
mov
pop
insl
xor
push
aam
jnp
subl
rcrl
cmp
jo
lret
out
pop
jnp
bound
sub
test
push
mov
lcall
leave
enter
fwait
xor
out
test
mov
inc
je
xor
or
pop
push
scas
add
push
outsl
fisttpll
fidivl
push
mov
and
mov
incb
xchg
aaa
cmp
sbb
or
and
lret
or
mov
cmpsl
sub
scas
int
cmpsb
aaa
inc
arpl
dec
mov
test
pop
pop
xor
adc
sarl
loopne
gs
mov
orl
dec
mov
aaa
add
jecxz
and
lret
out
inc
icebp
sbb
jp
pop
push
popa
adc
dec
popa
mov
cli
pushf
xchg
or
icebp
lock
adc
sub
or
mov
shrb
mov
pop
fs
in
cmp
mov
and
jmp
lds
mov
popa
test
jno
pushf
insb
stos
in
les
rcl
pop
out
mov
add
xlat
mov
popa
sub
pop
add
arpl
pop
sbbb
ret
sbb
or
mov
jo
call
pop
xor
adc
jl
mov
push
or
lcall
mov
push
dec
loopne
and
xchg
loope
addr16
mov
mov
jns
cld
aad
insb
outsl
add
hlt
inc
dec
xchg
cltd
jb
push
aas
in
add
sbb
add
cmp
and
mov
gs
mov
leave
jnp
test
cs
lret
pop
jbe
lods
sub
out
adc
cltd
or
xchg
jns
mov
mov
add
lret
in
fwait
push
ljmp
popa
push
test
dec
lods
leave
das
pop
or
outsl
nopl
jmp
mov
roll
mov
cmp
mov
cwtl
std
or
mov
cmp
ret
jb
out
jp
int3
jo
mov
pop
leave
aas
adc
push
inc
lea
outsl
mov
jb
or
jg
or
std
nop
push
subb
xor
xchg
pop
cmp
xor
push
imul
add
ljmp
movsl
xchg
mov
lcall
jne
loopne
cmpsl
xlat
dec
test
jmp
dec
sbb
ja
push
jmp
cwtl
cmp
push
adc
sahf
std
jne
xlat
sbb
ljmp
lret
xchg
das
jo
pop
mov
pop
outsb
mov
pop
daa
dec
in
add
mov
fdiv
loopne
test
daa
xchg
jecxz
ret
cwtl
pop
std
jmp
aaa
fidivl
xchg
pop
push
jp
lahf
negb
lods
or
cs
sub
jge
adc
jecxz
pop
je
cmp
cmp
loopne
push
popf
notb
lods
inc
sub
push
cmp
dec
sbb
int
sub
mov
ret
cmp
xlat
lcall
adc
cs
sbb
push
mov
mov
pop
add
rol
popf
test
cld
or
sbb
lret
xchg
and
add
aas
add
lcall
pop
cltd
insl
xchg
push
sbb
andb
je
enter
mov
nop
cmpsl
aas
push
fisubrl
popf
cld
fstpt
addl
xchg
add
shl
inc
mov
mov
jg
ljmp
stos
xor
std
shrl
clc
dec
add
ret
shlb
aad
rcrl
mov
das
loopne
enter
sbb
test
bound
pop
inc
or
mov
loope
fdivl
mov
mov
xor
ret
aam
lods
jb
hlt
xor
push
mov
pop
scas
inc
push
ss
call
fs
call
and
rol
aaa
mov
je
adcb
jae
or
jbe
ror
fsts
sbb
fcomps
pusha
cmp
jg
stc
daa
fadd
sbb
fldcw
pop
push
or
pop
aam
dec
mov
push
adc
repnz
stos
sbb
and
or
mov
daa
es
test
inc
fisubl
mov
push
fwait
outsb
or
dec
rol
repz
cmovo
mov
lods
imul
mov
inc
pop
inc
lods
ja
mov
add
js
outsl
cmp
or
in
jns
shrl
pop
lret
scas
dec
adc
scas
mov
inc
mov
inc
push
ds
sarl
xchg
pushf
shll
dec
cmp
sub
push
sub
xlat
push
inc
mov
cs
shrb
jnp
arpl
setge
inc
clc
cmp
fisubs
jecxz
sbb
add
out
into
into
stos
mov
mov
add
mov
orb
loopne
rclb
in
pop
dec
dec
dec
or
out
pop
out
push
adc
pop
sbb
push
sub
hlt
jmp
jmp
or
cmp
je
sub
pop
sub
push
cli
and
jne
mov
lods
arpl
aad
xor
pop
mov
xchg
daa
push
or
repnz
xor
pop
fidivrs
adc
roll
addb
ds
adc
mov
mov
pop
fiaddl
or
cld
dec
pop
xor
push
ret
aad
sbb
movsl
xchg
sub
dec
out
mov
or
in
xchg
das
mov
xchg
clc
enter
mov
inc
mov
and
ljmp
xchg
sti
inc
lahf
jle
icebp
hlt
inc
mov
lret
mov
mov
outsl
pop
lds
dec
mov
lock
ret
loope
sbb
xchg
repnz
cmp
iret
xlat
or
sahf
mov
cmpl
pop
or
test
mov
and
xchg
xor
sub
pop
iret
and
dec
xchg
imul
lea
mov
fistps
jle
lea
ficoms
mov
mov
pushf
clc
dec
mov
cmpsb
lret
cltd
stc
rcl
shll
adc
or
and
xchg
lods
lock
push
lock
das
scas
xlat
bound
cmpsb
xchg
inc
cmpsl
into
add
sub
jo
scas
push
in
adc
ret
cmc
in
sub
mov
cmpsb
fs
pop
cli
popf
mov
xor
sub
fsubr
fimuls
mov
xor
pop
push
jne
mov
clc
sub
xchg
lods
ret
mov
dec
cmp
pop
fstl
pop
lahf
test
ss
push
orb
jnp
out
mov
add
out
out
mov
loopne
and
cmpsl
cmp
popf
pop
or
add
jl
orl
js
outsl
mov
or
xchg
pushw
mov
int3
out
rcr
icebp
add
push
outsl
sub
mov
mov
in
adc
jle
dec
enter
add
xchg
jp
cmc
mov
fcompl
push
pop
jnp
or
dec
add
add
xchg
push
jb
or
clc
mov
adc
fnsave
notb
call
test
mov
jge
sti
jmp
or
xlat
mov
ficompl
jne
xchg
add
xor
or
jns
xchg
aam
int
xor
xchg
stos
cmp
pop
stc
stos
pop
xor
add
sbb
mov
cltd
xchg
js
shr
mov
sbb
dec
scas
imul
inc
or
clc
mov
imul
mov
enter
test
sub
mov
int
adc
cmpsl
nop
push
icebp
push
dec
sti
pushf
jl
stc
xchg
cmp
fbld
andl
jmp
push
lahf
jb
test
int
aam
inc
jmp
insl
cmc
pop
cmp
dec
xchg
daa
mov
lea
lahf
insl
push
or
xchg
inc
out
or
in
lock
sti
jmp
lock
xchg
cmpsl
fnstcw
add
shll
arpl
xchg
cmpsl
js
lret
and
sbb
and
ret
adc
stos
rolb
movb
test
adc
inc
ret
mov
xchg
out
int
jno
inc
fpatan
test
dec
mov
cmc
aad
stos
lods
es
sub
loop
add
mov
mov
ret
out
xchg
ror
stc
xchg
cwtl
int
mov
repnz
xchg
cmp
jp
sub
orl
xor
call
mov
xor
mov
in
clc
movsb
mov
sub
and
lods
xchg
in
imul
outsb
clc
pop
outsb
idivb
mul
pop
ret
dec
inc
jo
fdiv
outsb
loopne
xchg
cmp
dec
lcall
xchg
data16
sub
pushf
outsb
jle
nop
lods
ja
repz
xor
in
nop
dec
sarl
pop
test
sbbb
fwait
pop
fldenv
enter
sub
dec
add
adc
push
inc
mov
jle
fidivrl
sti
mov
out
out
leave
pop
pop
cmpsb
pop
push
xlat
scas
outsb
test
pop
push
pop
je
push
lahf
stos
cli
dec
sub
loopne
adc
stos
les
jae
dec
fdivl
stos
leave
loop
negl
subl
mov
sbb
aam
loopne
hlt
imul
fs
mov
fdivr
iret
and
int3
pop
lret
push
std
push
or
sti
pavgb
mov
lods
push
or
fists
leave
mov
or
pop
out
or
cmpsb
cmp
dec
out
lahf
mov
enter
std
xor
inc
imul
or
gs
aaa
mov
pushl
pop
test
cmp
push
or
icebp
jp
xchg
mov
dec
sub
push
push
repz
subl
lahf
out
das
rol
push
stos
xchg
jns
clc
sarb
std
sbb
ret
test
pop
mov
jnp
adc
cltd
iret
xchg
popa
inc
push
loope
mov
testb
mov
adc
stc
addr16
adc
inc
dec
add
push
loop
je
lret
push
add
and
out
pop
loopne
or
push
fisubrs
aad
mov
or
movsl
lods
sub
stos
push
sahf
inc
fisttpll
push
sub
fbstp
xchg
push
mov
test
test
lea
adc
pop
mov
xorl
push
fadd
add
inc
pop
fdivp
xchg
sbb
jmp
loopne
add
cmc
pop
push
dec
lea
push
call
sti
nop
pop
xor
inc
jb
push
and
iret
ror
xor
jo
pop
mov
push
xor
iret
dec
fstps
popa
shll
jl
cmp
xchg
fbld
dec
imul
lds
ds
into
mov
sbb
cli
insl
cld
mov
inc
fwait
push
cmp
fidivrs
push
sbb
ja
cld
dec
outsb
pop
shrb
jnp
mov
cmpsl
test
sub
inc
and
rcrl
clc
dec
movsb
xor
shld
push
or
xchg
arpl
mov
rcrb
call
push
mov
aam
sub
xor
das
lcall
push
mov
mov
mov
pop
lahf
pop
out
and
inc
sbbb
sbb
push
cmp
mov
inc
xchg
push
jnp
sbb
or
mov
cmc
push
inc
and
aad
incb
push
insl
jg
in
add
and
inc
inc
addl
cmp
push
or
inc
jae
iret
lret
jae
fwait
cs
cmpsb
push
pop
pop
jecxz
cmp
ret
xchg
jle
loope
test
aad
adc
adc
aaa
movsl
std
lcall
or
jnp
jne
or
hlt
cmp
stc
cmp
loope
scas
sbb
mov
jo
std
aam
xchg
or
or
pop
mov
ret
xor
dec
andl
lret
movd
add
mov
enter
xchg
movsl
push
movsl
repz
cld
xchg
xor
push
ret
arpl
ret
jb
dec
popa
mov
leave
push
jecxz
cld
or
andl
push
in
clc
stos
es
push
mov
cmc
out
and
addb
xor
fildll
pop
das
mov
fs
lds
xchg
in
mov
xor
shlb
rclb
or
push
fiaddl
adc
nop
mov
insl
stos
xor
aad
cli
cli
arpl
pop
mov
inc
jae
jmp
aam
mov
test
cmp
fsubrs
and
lahf
push
cmp
lcall
faddp
inc
add
jl
mov
scas
sbb
mov
pop
push
pop
dec
out
inc
hlt
push
xchg
mov
mov
lret
fstpt
inc
outsl
push
leave
pop
jmp
insb
push
out
cmp
mov
cmp
adc
cld
pop
dec
add
call
pop
shll
hlt
lcall
addl
xchg
sub
add
mov
adc
sti
push
cmp
lock
fisubrl
jnp
mov
inc
fwait
xchg
in
push
fidivrl
dec
pop
out
loopne
lcall
jae
loop
out
cmp
sbb
pop
pop
cs
xchg
and
sbb
sbb
and
rcrb
inc
test
mov
cltd
out
mov
add
xor
cmc
push
jl
and
xor
adc
mov
lcall
mov
repz
add
std
adc
inc
pop
mov
sahf
out
addl
stc
bound
pop
xchg
mov
mov
cmpsb
mov
mov
add
inc
sbb
push
add
adc
shr
iret
andl
pop
pop
sbb
push
cmc
lds
jo
and
pop
and
stos
xchg
in
lea
adc
les
mov
ret
inc
push
mov
fistl
and
ds
nop
or
inc
popf
lret
adc
add
into
and
iret
sub
mov
cmp
sub
add
fisttps
xor
aad
rcll
fidivrs
dec
pop
and
gs
mov
jo
inc
fisubrs
mov
xor
repz
sti
push
inc
push
sarl
sti
jg
in
shrb
dec
adc
aam
outsl
fiadds
mov
imul
mov
pop
shl
mov
cs
sub
xor
jb
xchg
sub
aaa
ljmp
add
sbb
cwtl
sub
xchg
inc
icebp
jecxz,pt
imul
sub
mov
rorb
mov
dec
das
xor
leave
sbb
push
int3
pop
or
ss
dec
out
insl
inc
arpl
mov
leave
ljmp
mov
pop
imull
incb
loopne
fisubs
movsb
adc
sahf
lods
and
sub
inc
imul
mov
cli
fldl
mov
dec
incl
or
adc
cld
mov
and
pop
lahf
push
pop
mov
lret
or
mov
push
cmp
jp
leave
mov
jg
add
cmpsb
mov
lret
ja
pusha
idiv
xchg
push
pop
xlat
sbb
mov
add
mov
pop
add
sti
shl
and
into
stos
jbe
out
pop
jb
rcr
test
cmc
push
mov
popf
add
mov
dec
cmp
mov
rorb
mov
imul
and
leave
push
add
add
popa
stc
jle
fsubs
jmp
sub
xchg
test
test
aad
sub
mov
jg
cmp
and
push
sub
sub
lock
or
bound
xchg
sub
fnstenv
cmp
xor
adc
mov
adc
sbb
sbb
sub
call
sub
sbb
lahf
stos
inc
pop
mov
dec
in
das
mov
loopne
cmp
dec
mov
push
add
sbb
adc
cmpsb
sbb
mov
loopne
cmp
sbb
repz
mov
xchg
or
or
mov
ret
xor
or
inc
push
out
mov
xchg
and
mov
dec
call
out
inc
sbb
filds
jne
and
pusha
mull
jae
enter
inc
lods
dec
xlat
push
rolb
ljmp
sbb
je
pop
lds
shl
popf
pop
into
stos
or
mov
cmp
subl
mov
xchg
outsl
xchg
cli
jne
push
jns
cmp
ljmp
mov
sub
jle
fsubr
add
jo
push
int3
dec
cmp
add
jge
ret
dec
push
push
pop
adc
filds
push
xor
mov
arpl
xchg
int
lock
addr16
sub
sbb
lret
xchg
dec
inc
sti
jecxz
aaa
add
mov
dec
pushf
cmp
movsl
cli
aad
stc
xchg
push
loop
scas
frstor
jmp
es
fcmovb
pop
lret
jge
mov
mov
loope
add
dec
sbb
mov
mov
sbb
add
push
aaa
sti
test
jge
in
jle
sarl
fs
jle
fldenv
test
mov
mov
xchg
cmpsb
mov
push
cmc
adc
jl
cltd
mov
pop
jbe
dec
mov
jl
sub
add
hlt
add
jge
push
mov
repnz
dec
repz
push
inc
idivl
jmp
adc
pop
ss
push
test
in
dec
dec
pop
rcll
popa
xor
inc
jnp
jne
adc
int
arpl
cmovb
stc
out
ret
xchg
sub
out
xlat
in
scas
jge
sub
or
cmc
out
fwait
cltd
push
in
lret
xor
push
lcall
sahf
div
jnp
jecxz
jo
fwait
fs
push
dec
adc
rcrb
sti
pop
or
push
xor
dec
xlat
in
cmpsb
pop
das
fisttps
ret
imull
sub
xchg
shll
stos
pop
dec
fstl
ja
outsb
cs
stos
repz
insl
mov
gs
fsubl
jo
push
jmp
aad
sub
orl
in
scas
test
inc
push
into
cmp
in
push
mov
jnp
pop
insl
ja
pushf
test
pop
mov
pushl
or
imul
rcrb
repz
shrb
pop
scas
xor
fdiv
jl
xor
sub
insb
and
ja
mov
push
sub
icebp
movsl
aad
movsl
cmp
pop
cltd
adc
mov
sub
das
sahf
ss
inc
mov
pop
and
je
dec
fisubrs
inc
andb
stos
clc
cmpl
xor
mov
xchg
stc
popa
les
rol
adc
dec
dec
jl
and
and
push
lahf
inc
cmpsl
xor
das
push
imul
mov
loopne
mov
sub
sub
xor
test
les
sub
pop
mov
fisubs
inc
icebp
mov
inc
outsb
scas
mov
and
xor
pop
jbe
enter
mov
rcl
jo
cmp
xor
pop
lahf
push
imul
std
sub
icebp
leave
mov
lea
shrb
add
push
cmpsl
or
std
mov
das
push
inc
adc
push
in
stc
cltd
idivb
mov
fistl
xchg
popa
cmc
push
lea
in
mov
lock
mov
cwtl
cmp
aad
or
bound
lods
mov
aaa
pop
stos
add
xchg
pop
and
mov
aam
xchg
daa
loop
and
add
inc
ss
xor
sbb
xor
mov
cmp
inc
f2xm1
fcmovnb
mov
push
rolb
sbb
add
mov
subl
sahf
movsb
inc
loope
sbb
shl
sub
sub
mov
push
jl
rcrl
pop
jo
adc
ja
scas
testl
jne
xchg
push
xchg
sbbb
aam
mov
testl
mov
jns
clc
aas
pop
imul
lock
negb
sbb
scas
adc
xor
adc
push
jno
test
mov
push
aas
testl
and
imul
inc
pop
cmpsl
and
movsl
or
loope,pn
pusha
pop
mov
add
mov
and
cld
xchg
outsl
mov
jmp
lahf
outsb
sub
out
pop
adc
in
and
mov
sti
and
imul
jg
les
decb
xchg
cs
pusha
jecxz
sub
xor
dec
add
mov
mov
ljmp
push
mov
rcrl
les
xchg
mov
push
mov
popf
jecxz
cmp
jne
lahf
arpl
std
mov
xor
fisubs
aad
jb
cmpsl
and
mov
mov
insb
sub
cmpsl
inc
cmp
jmp
adc
mov
pop
je
xchg
outsb
imul
or
movsl
inc
sub
adc
inc
in
je
ret
mov
add
push
repz
push
pop
cli
daa
ljmp
push
fcmovnb
fistl
adc
loop
fwait
jge
cmp
lret
pop
fsub
sub
jno
inc
outsl
mov
jg
or
movsl
mov
addr16
mov
adcl
cmp
mov
jmp
pop
or
cmp
stos
cmp
stos
pop
mov
adc
sbb
negb
pop
stos
push
nop
lods
aaa
aas
sub
test
xor
pop
mov
jg
fwait
pop
sub
cmp
stos
inc
inc
pop
or
jecxz
and
sbb
pop
adcb
add
loop
ljmp
cmp
push
rcrb
cs
in
and
ljmp
jmp
mov
inc
mov
mov
stc
or
scas
test
sub
push
stos
jl
adc
pusha
xchg
mov
sbb
sti
push
jno
movsl
xchg
push
mov
xchg
mov
jb
scas
icebp
xchg
cmpsl
ja
pop
mov
jns
loope
xor
in
lret
sbb
adc
mov
loop
fldz
hlt
jp
sbb
pop
aam
lret
out
adcb
call
mov
ds
lods
pop
lods
stc
xchg
stc
mov
or
lea
jp
out
pop
sbb
or
xchg
subb
loope
cld
fwait
in
push
dec
cmpsb
sahf
fstl
movl
int3
and
jno
popa
and
sbb
lret
fs
jg
jnp
popl
int
or
jg
sbb
mov
les
and
outsl
xchg
mov
add
in
dec
out
test
sub
adc
cmp
sbb
pop
mov
idivl
data16
pushf
out
std
cltd
and
jae
mov
shll
out
cwtl
sbb
mov
sti
mov
ljmp
clc
sbb
cmc
lcall
outsb
add
xchg
jno
jle
jmp
notb
loopne
xchg
icebp
sub
dec
mov
push
jne
insl
cmp
ret
add
xorb
mov
scas
push
nop
adcl
std
and
js
int
test
push
jl
jo
push
scas
jne
mov
in
rcrl
xor
jo
and
das
mov
jle
jns
je
daa
or
lock
lea
mov
inc
aad
cmp
test
test
hlt
rol
cmp
xor
movswl
jmp
or
imul
icebp
sbb
loop
mov
shl
out
jns
xor
inc
leave
and
or
movsb
cld
or
ljmp
cmpsl
out
popf
popa
xor
push
jo
out
jno
inc
mov
movsl
gs
sti
or
jno
lods
xchg
jmp
and
xchg
push
mov
sub
scas
mov
mov
fwait
pop
xchg
adc
or
repz
push
inc
pop
add
lret
push
in
dec
pop
popf
bound
je
fbld
mov
jmp
daa
inc
popa
stos
nop
jnp
stos
xchg
scas
xchg
addb
sbb
mov
mov
mov
cld
aad
xchg
dec
xor
jl
dec
repz
mov
xor
cmp
aas
or
cs
fwait
notl
cmp
jl
pop
mov
popa
mov
or
sti
pushf
gs
fwait
cmpsl
add
xor
sbb
push
or
sub
call
ret
push
rolb
or
and
sub
je
jp
daa
ja
cmpsb
adc
out
add
push
xor
inc
test
lcall
in
movsb
inc
cmpsb
jp
lds
imul
mov
and
shlb
loopne
mov
nop
sarb
das
lock
popa
sub
gs
push
xorl
dec
cmp
adc
stos
aaa
xor
icebp
xchg
ss
push
mov
adc
push
xchg
sub
pusha
orb
sbb
in
leave
adc
sub
push
inc
lcall
aad
call
or
sbb
dec
test
loop
pop
fildll
xchg
outsl
push
addr16
inc
or
and
popa
test
das
mov
mov
icebp
cltd
mov
mov
test
add
out
xchg
into
fsubl
daa
xchg
ficoml
sub
push
and
mov
incl
pop
pop
cmp
pop
imul
jnp
pop
int
je
adc
rorl
or
lods
add
js
mov
push
jp
jge
dec
push
push
outsb
sbb
in
fst
int3
sarl
test
sub
lret
sub
inc
stc
inc
stc
or
lds
jge
jecxz
inc
repz
jecxz
in
cltd
adc
dec
xor
mov
clc
mov
sbb
xchg
dec
fsts
mov
mov
mov
push
mov
mov
mov
fidivrl
leave
into
pushf
pop
rol
jns
and
scas
xchg
insl
repnz
inc
leave
adc
pop
les
std
and
out
mov
or
add
cmp
cmc
inc
adc
ss
negl
in
xchg
jge
pop
mov
shlb
or
push
adc
cs
push
xchg
mov
int3
or
mov
cld
insl
or
push
or
outsl
sbb
mov
imul
aam
push
in
dec
and
jmp
mov
cmc
int
mov
push
scas
stos
cmp
popf
mov
pop
adc
fnstenv
out
or
sub
sbb
sarl
fcoml
int3
pushf
mov
or
xor
es
fbstp
fcompl
lods
fwait
xor
jl
push
mov
lds
rcrl
test
jne
les
lret
cmp
insl
iret
repnz
orl
push
bound
rorl
cli
xchg
dec
outsl
mov
jecxz
dec
dec
sbb
cmp
cmpsb
dec
fnsave
push
mov
pop
repz
xchg
sub
sub
mov
xlat
pop
push
jae
clc
adc
arpl
outsb
into
int
push
hlt
das
jno
popa
push
int3
add
or
aaa
in
adc
cmp
and
mov
sti
std
mov
or
inc
xchg
scas
mov
and
xchg
or
in
out
push
in
loop
add
pushf
pop
pop
rcrl
pusha
inc
aaa
dec
add
test
and
movsl
aam
jmp
jp
or
sub
les
out
pop
insl
std
lods
outsl
stc
push
push
cmc
mov
xchg
stos
insb
adc
mov
dec
stc
popf
loop
mov
pop
inc
lahf
push
stc
jno
xor
lcall
cmp
or
int
idivb
jnp
in
cmp
mov
adc
cmpsl
push
push
add
subl
lds
insb
mov
aam
mov
popa
cmc
sahf
insl
out
or
pop
mov
ffree
popa
mov
push
out
jle
insb
js
mov
test
fdivrl
lahf
xchg
xchg
pop
out
ja
cmc
xchg
lds
out
fs
xchg
inc
inc
js
fsubl
cmpl
mov
adc
mov
sti
loopne
insl
es
iret
and
pop
shlb
sbbb
scas
inc
insl
jns
outsb
dec
push
pop
xor
insl
jb
mov
cwtl
sub
dec
daa
push
xchg
mov
and
imul
mov
mov
leave
sbb
scas
dec
push
add
ja
fwait
cmpsl
dec
aad
je
aas
fnstsw
out
decl
inc
sahf
xchg
sbb
dec
leave
aam
push
cmpsb
sahf
pop
mov
out
xchg
imul
sub
xlat
jns
lea
gs
mov
jmp
mov
lahf
out
fcomps
pop
mov
lret
cmp
sub
pushf
jae
stos
mov
push
int
dec
sub
nop
pop
fwait
rcl
daa
mov
xor
sti
mov
arpl
hlt
subb
xchg
xlat
dec
outsb
test
leave
dec
xlat
movl
rcll
leave
inc
leave
adc
sub
xor
insl
popf
mov
sub
push
pop
ret
adc
jbe
out
inc
adc
enter
sub
push
push
call
xchg
mov
xchg
adc
mov
xchg
xchg
dec
pop
or
sbb
out
push
adc
mov
xchg
xchg
test
and
adcl
pop
scas
out
mov
mov
push
mov
outsl
jae
rol
test
push
aad
sub
sub
add
orl
push
outsb
test
js
aam
cmp
pop
outsb
loop
hlt
sub
jnp
imul
icebp
push
mov
mov
bound
push
inc
xor
aaa
imull
inc
pop
leave
int3
arpl
add
sub
loop
outsl
and
mov
int3
xlat
pop
sub
fnstcw
or
shrl
aad
xor
dec
add
push
fildl
insl
add
fadds
rorl
add
into
leave
add
adc
stos
inc
fisubl
mov
xor
inc
pop
mov
repz
mov
movsl
enter
pop
mov
aaa
bound
cmc
xlat
xor
in
cwtl
cmp
inc
xlat
in
fcomps
cld
mov
ja
loopne
cwtl
pop
movsb
movsl
adc
xchg
mov
rorl
mov
out
pop
notb
or
pop
mov
mov
lods
pop
adc
imul
mov
lods
out
ss
sub
in
add
mov
jb
sbb
add
movsb
cmp
push
cli
dec
xchg
int3
cli
es
push
outsl
mov
dec
fistpl
mulb
lods
lret
daa
lret
dec
flds
sahf
sbbl
xor
jns
lcall
jne
inc
adc
sub
stos
mov
inc
repnz
sbb
scas
adc
in
pop
out
jp
nop
outsb
cli
push
das
xchg
clc
cmp
adc
xchg
int3
mov
rorl
xchg
adc
es
cmp
or
sub
adc
push
adc
xor
and
loop
adc
gs
les
mov
ljmp
mov
insl
sub
mov
mov
hlt
mov
inc
aas
mov
dec
aaa
inc
rorb
pop
out
fs
cmp
imul
xchg
mov
andl
xchg
fcmovne
sbb
lahf
adc
dec
int3
pop
pop
ljmp
out
test
inc
arpl
mov
fdivp
pop
adc
jbe
mov
cli
data16
mov
adc
out
jmp
jp
repnz
push
out
and
and
lahf
inc
push
std
or
cld
rcll
push
lret
daa
in
test
sub
mov
pop
push
cmp
sbb
push
les
add
je
xchg
out
xchg
jne
daa
pop
sub
dec
jns
push
jecxz
and
xor
icebp
or
ror
enter
push
movsl
enter
scas
sar
scas
cmp
addr16
push
cmp
xchg
fistpl
add
hlt
sbbl
sbb
sub
call
ja
sub
mov
icebp
adc
in
pop
dec
push
fidivs
cmp
out
or
pop
pop
repz
out
and
int
hlt
push
dec
dec
sbb
cmp
mov
jge
sub
pop
xchg
add
mov
xor
push
push
mov
pop
movsl
xchg
leave
push
test
ljmp
cmp
in
jae
mov
cli
test
pop
test
mov
fucomip
sahf
lea
enter
or
imul
pop
jp
dec
fucomip
jg
add
jl
inc
jb
in
test
jbe
adc
xchg
sub
xor
mov
ljmp
or
add
dec
push
int3
lret
xchg
cmpsl
dec
cmp
insl
insb
jo
sub
data16
adc
movlps
dec
pop
js
andb
sahf
shrl
pop
lret
jp
movsl
out
es
inc
test
imul
lock
mov
mov
out
sbbl
sbbb
and
fnstsw
dec
dec
insl
cmc
orb
ffree
add
fwait
std
or
in
mov
clc
or
mov
iret
mov
xchg
pop
aam
mov
lret
xchg
add
sbb
cmpl
add
fstpl
loop
shr
fwait
sub
mov
test
inc
or
sbbb
cmp
rclb
dec
movsl
dec
call
or
cmp
xchg
shrb
cvtps2pd
mov
test
cmp
adc
scas
and
cmpl
sti
lea
sub
cld
outsl
rol
jg
imul
dec
pusha
mulb
jle
in
cli
mov
leave
shlb
mov
push
mov
int3
in
mov
in
testl
inc
sub
xchg
push
popa
clc
mov
xor
mov
leave
sbb
pop
out
push
ret
and
xor
je
repnz
in
or
mov
cltd
pop
pop
ja
out
nop
and
in
xorl
pop
call
popf
aad
lcall
loop
mov
out
xor
jns
daa
mov
mov
xchg
pop
mov
jb
jnp
sbb
pop
xchg
sbb
jb
sub
stc
inc
cwtl
out
add
dec
fstps
adc
xor
sub
stos
ret
mov
push
xchg
inc
mov
mov
push
lcall
sbb
cmp
xchg
inc
cmp
fisubrl
out
xchg
pop
jg
in
dec
sbb
fdivrl
out
out
sahf
sbb
sbb
pop
xchg
sbb
pushf
xor
ja
imul
ljmp
xchg
mov
mov
pop
je
outsl
sbb
xchg
add
add
insb
scas
adc
xorb
xchg
inc
and
cmpsb
popa
and
adc
js
jg
arpl
ss
dec
push
mov
xor
fmull
and
xchg
repz
les
and
pop
out
pop
arpl
jnp
cmp
pop
or
mov
movsl
ficomps
filds
push
je
int
add
mov
pusha
jae
popf
in
and
test
adc
pop
aam
mov
ret
mov
push
movhlps
scas
iret
pop
adc
jns
pop
sub
or
lret
dec
and
das
push
pushf
aad
scas
xchg
addr16
dec
cs
ds
sub
pop
sbb
packssdw
push
xchg
push
inc
faddl
fwait
jecxz
int3
xor
push
insl
add
push
fcomps
xchg
mov
sbb
filds
adc
je
test
shrd
jmp
loop
faddl
dec
insb
add
jecxz
cmp
xchg
lahf
mov
aad
mov
or
xor
inc
dec
cmp
dec
xchg
pusha
test
repz
aas
adc
in
sbb
cli
js
outsb
adc
mov
adc
rol
lcall
sti
cmp
sbbl
int
lcall
loope,pt
das
pop
sbb
inc
nop
mov
ret
or
pop
sub
movsl
mull
test
std
notl
roll
and
ds
dec
lds
cmpsb
ljmp
pop
sti
js
mov
ljmp
pop
orb
adc
ret
xor
inc
fisubs
inc
add
push
sti
clc
paddb
jnp
add
ret
movsl
or
push
inc
ds
jmp
les
mov
mov
lds
xchg
mov
mov
bound
jns
sbb
push
out
lahf
jp
enter
loopne
cmovg
ljmp
or
jle
pop
jg
pop
adc
jb
pop
movsb
lods
push
and
xor
xchg
add
sub
in
mov
dec
clc
ret
inc
xor
inc
fdivrp
jecxz
stos
inc
inc
pop
call
in
sbb
ss
ja
lods
out
in
insb
inc
cwtl
or
aad
cltd
sbb
cltd
pop
ror
mov
popa
rorl
shl
adc
fiaddl
insl
lcall
jmp
ljmp
mov
mov
mov
loopne
adc
mov
into
or
xor
jo
mov
pop
jl
jnp
sbb
add
das
stos
jmp
fs
pop
mov
aam
loopne
mov
out
dec
push
sub
dec
push
jecxz
inc
rorb
fs
mov
pop
cmp
inc
arpl
loop
loop
clc
adc
mov
shrb
fisubrl
lcall
add
or
dec
xor
xlat
push
add
sub
call
sub
ret
pop
pop
mov
or
mov
outsl
xor
loope
lahf
mov
mov
xchg
fdivl
push
push
pushf
adc
pop
ss
cmp
pop
pop
jle
push
xchg
ss
and
mov
rcrb
sahf
faddl
dec
imul
dec
fimull
mov
repz
add
mov
aam
ret
test
or
mov
jge
lcall
sbb
adc
adc
test
rcr
rep
or
rclb
dec
fucomi
xchg
lods
adc
xor
xor
fwait
out
pop
pop
rorl
clc
mov
dec
scas
sub
push
add
inc
cmp
ja
addr16
adcb
or
pop
orb
repz
cs
dec
sub
cmp
mov
mov
push
in
add
lods
add
add
lods
and
fnstcw
add
aad
add
stos
jo
in
xlat
mov
fsubl
jo
sbb
arpl
jp
mov
inc
inc
mov
incb
cmpsl
popa
or
mov
jbe
repnz
scas
repz
std
popf
add
sub
jecxz
xchg
es
out
aaa
mov
in
cmpsl
pop
jne
loop
jae
cmpb
mov
test
mov
sbb
dec
insb
add
mov
std
mov
and
aad
out
movsl
mov
out
test
sub
test
aas
loop
and
adc
mov
sub
test
push
or
cmpsb
push
sbbl
push
shl
outsl
leave
pusha
testl
mov
xchg
inc
add
sti
stos
pop
and
sbb
aam
jmp
jbe
xor
xorb
in
aaa
ret
push
shrl
lcall
popf
jge
sub
jae
movsl
sub
push
iret
lds
mov
pop
pop
and
clc
mov
jg
push
xchg
out
cld
pushf
add
mov
movsl
sbb
and
fs
out
jno
xchg
pop
cmpsb
loopne
ret
xchg
xchg
sub
push
mov
cwtl
es
insb
xor
push
pop
adc
xor
cmp
inc
add
jb
sbbl
stos
int
push
out
mov
mov
push
adc
mov
add
push
pop
in
jmp
inc
and
mov
dec
int3
dec
movsb
jp
in
fwait
ss
shll
mov
fistpll
mov
xor
push
jmp
cmp
adc
outsl
fistpl
mov
mov
fs
adc
cli
mov
shrb
adc
pop
jae
mov
pop
shlb
scas
inc
lods
pop
jecxz
and
mov
sbb
pop
jecxz
mov
dec
jne
clc
and
rorb
clc
stc
aaa
shrb
inc
pop
mov
cmp
ds
pop
rolw
mov
lret
sar
and
pushf
push
adc
rorb
or
sub
das
inc
lods
and
shr
xchg
call
sub
sub
inc
hlt
cmp
sub
and
xchg
fwait
jbe
inc
jecxz
jne
mov
or
mov
outsw
cmpsb
dec
pop
shld
inc
loop
lock
lods
mov
jp
insl
sbb
aaa
inc
inc
pushf
pop
sbb
mov
mov
inc
in
push
xchg
imul
add
into
and
push
dec
ret
call
or
cmp
nop
pop
add
in
mov
mov
inc
fmul
lret
xchg
iret
aaa
or
mov
out
aad
jecxz
lock
das
addr16
lea
fwait
stos
out
mov
ret
mov
xchg
and
jb
in
loope
push
mov
in
pop
shr
xchg
and
mov
pop
xchg
jmp
lods
mov
pusha
movsb
out
cmpl
inc
outsl
dec
jecxz
and
mov
stos
sub
sbbl
inc
cmp
icebp
xor
orb
cli
or
inc
fbstp
gs
or
test
inc
fldz
in
andl
stc
decl
call
inc
sbb
adc
add
inc
pushf
lods
xchg
dec
mov
clc
mov
cmp
cwtl
pusha
lds
lahf
das
lock
xchg
sbb
dec
fiaddl
stc
cli
jne
adc
jns
sub
push
aad
and
out
push
fcompl
dec
push
push
jg
and
cmc
sbb
cmp
lcall
mov
and
xchg
jo
mov
push
mov
sahf
adc
and
icebp
xchg
dec
out
push
stc
nop
inc
nop
pop
mov
pop
jns
shll
push
mov
cmpsl
jge
mov
jge
movsl
scas
dec
call
adc
stos
sub
jg
shlb
into
and
cmp
xchg
iret
lds
lods
pop
or
mov
scas
imul
push
or
mov
mov
clc
jge
ds
mov
jb
lret
repz
pop
scas
xchg
jb
pop
jg
je
sahf
dec
mov
scas
in
ficoml
or
idivl
sbb
mov
dec
or
jno
sbb
mov
or
dec
cli
adc
data16
loop
xchg
cli
adc
into
mov
lcall
sbb
push
mov
rcl
aam
popa
inc
fnstsw
dec
decb
outsl
pop
pop
mov
push
push
mov
add
inc
mov
fstps
jmp
jnp
mov
aas
outsl
int
xchg
popa
leave
pop
pop
jno
scas
popa
shl
mov
mov
insb
inc
loopne
mov
pop
das
bound
addr16
push
movsl
das
sbb
jg
or
fwait
dec
stos
push
clc
pop
gs
sub
mov
mov
jp
test
lods
inc
lods
ljmp
out
push
jg
push
lea
out
inc
cltd
xchg
jmp
xchg
fbstp
andl
add
fmul
mov
xchg
aaa
jp
mov
pop
shr
mov
bound
cltd
xor
mov
outsb
stos
mov
jl
test
mov
xor
stos
daa
inc
adc
inc
xchg
inc
inc
mov
pop
aaa
test
or
mov
cmp
sub
icebp
mov
stc
cltd
add
sbb
mov
xor
push
into
ljmp
lds
cmpb
fldln2
sbb
add
mov
js
insl
sti
mov
jbe
divb
jge
or
add
or
or
jo
xchg
lahf
inc
xor
movsb
inc
jo
shlb
push
or
mov
lcall
in
ja
pop
andb
roll
rclb
ret
addr16
jmp
das
push
jne
imul
leave
inc
ljmp
xor
and
adc
scas
jne
pusha
mov
adc
xor
ja
inc
pop
std
cltd
shll
inc
in
or
adc
sub
xor
inc
sbb
fists
mov
dec
jl
adc
insb
int3
and
pop
mov
xor
adc
inc
push
cmp
repnz
sub
cmp
and
mov
mov
xchg
cmp
inc
adc
fisubl
loope
xchg
adc
push
sub
xchg
jmp
out
jns
mov
movsb
outsl
push
mov
xchg
push
mov
push
test
xchg
cmpsl
mov
add
mov
mov
adc
adc
xlat
icebp
jle
adc
cmp
sbb
mov
mov
arpl
cmpsl
js
dec
daa
not
jl
xchg
repz
inc
rorb
adc
aad
scas
dec
push
mov
xchg
add
pop
and
dec
add
dec
cmp
jle
inc
push
mov
js
jecxz
rcrl
inc
dec
pop
je
in
push
mov
int
popf
sbb
jmp
dec
hlt
inc
mov
add
fldz
test
sbb
shrb
or
shlb
roll
xchg
cmc
mov
stos
push
pop
loop
sub
dec
mov
outsb
and
mov
xlat
and
dec
dec
fldcw
mov
lea
or
sbb
mov
inc
pushf
clc
notb
andb
mov
insl
add
das
hlt
mov
mov
in
inc
sbb
mov
and
sub
rolb
jns
and
cmp
repnz
jge
dec
jecxz
xchg
aaa
iret
or
jbe
shll
add
or
push
outsl
mov
or
iret
aam
repz
std
cmc
push
pop
mov
ret
fcmovnb
je
pushf
mov
mov
xchg
inc
loope
bound
aas
pop
imull
xchg
adc
inc
jp
pop
push
out
movsl
push
jno
ds
imul
lcall
dec
in
clc
xor
mov
push
out
and
push
inc
and
jno
or
cmp
mov
inc
mov
cmc
cmp
push
imul
lods
dec
pop
xor
lea
sub
xchg
nop
pop
aaa
repnz
dec
sahf
fstpt
add
mov
pop
add
mov
cmpsl
fldl
fiaddl
cmp
aaa
lock
les
pop
insl
adc
ss
pop
dec
jne
adc
mov
mov
xchg
insb
adcl
jne
mov
inc
rol
fisttpl
aad
pop
rorb
dec
jge
and
mov
push
movsb
mov
mov
jmp
sbb
cmp
into
enter
ret
shll
sub
int
push
inc
sub
mov
add
xor
loopne
lret
clc
in
pop
and
jg
xchg
push
popf
push
dec
cmp
xchg
out
lretw
adc
stos
and
mov
gs
enter
push
test
fistl
or
cs
movsl
add
ret
arpl
sbb
add
stos
lret
shll
stos
call
stos
inc
sbb
int3
pop
dec
and
loope
add
pop
mov
shlb
jl
sbb
push
ret
aas
add
pcmpeqw
rol
xchg
rol
fwait
lock
jo
rclb
mov
fisttpl
nop
xor
push
cli
std
xchg
push
pop
mov
xchg
xchg
mov
shll
xor
xchg
sbb
pushf
out
shrb
jg
mov
fldcw
dec
sub
jg
xor
ljmp
in
mov
lea
stos
nop
xchg
gs
data16
out
mov
jge
shrl
lahf
aad
xchg
divb
push
jae
ds
cmpsb
dec
int3
add
add
lahf
ss
popf
or
bound
cmp
idivb
mov
mov
inc
out
imul
sbb
lods
and
cli
fwait
sbb
idivb
cmp
sbb
jecxz
int3
dec
loopne
mov
out
iret
cmpsb
inc
push
cwtl
jnp
fsubrl
into
lahf
xor
imul
clc
adc
icebp
or
mov
aad
ja
cltd
jo
jo
jo
mov
paddb
js
cmpsb
jae
jl
jno
mov
jp
js
into
cmpsb
lods
out
nop
dec
pop
scas
out
xchg
sub
mov
ror
and
fs
and
cmp
mov
shrb
cmpsb
les
pop
jg
cmp
pop
fadds
xchg
cs
scas
bound
pop
xor
pop
sbb
and
add
add
xchg
xor
data16
popf
mov
mov
pop
push
js
sarl
shlb
shll
push
lcall
cmpsl
rorl
or
mov
mov
xlat
jecxz
mov
mov
and
adc
nop
sub
js
dec
dec
insl
scas
aam
fimuls
sub
stos
adc
jg
ja
sarb
out
and
mov
xor
and
pop
scas
imul
pop
mov
mov
inc
data16
je
notb
ja
fwait
xor
insb
xor
shlb
sub
popa
jns
mov
mov
push
or
or
test
sbb
mov
push
xor
in
int
stos
js
pop
mov
jge
ljmp
out
std
cmp
jle
out
inc
mov
outsl
xor
enter
push
call
movsb
cli
ljmp
sbb
test
rcr
sub
hlt
mov
test
cltd
insb
mov
mov
push
inc
dec
repnz
stos
xlat
inc
int3
cmp
xlat
xchg
push
cmp
or
sbb
notb
or
fwait
push
pop
test
dec
lcall
addr16
lods
cwtl
jns
daa
pop
push
sub
das
out
jb
cmp
test
int3
imul
les
xor
pop
add
cmp
lcall
push
rclb
sbbl
bound
pop
std
mov
int
fidivl
call
cmp
xchg
and
cmpsb
out
add
xchg
shlb
and
push
sub
enter
cmovs
ja
dec
xchg
dec
shll
push
push
lea
xchg
xchg
aas
mov
sbb
mov
mov
into
inc
dec
cmc
mov
xor
enter
dec
cli
sub
mov
push
lahf
sbb
sti
xor
addb
xor
ds
add
aam
pop
imul
cmp
jns
mov
std
cltd
pusha
ss
pop
mov
loopne
sar
cltd
pusha
daa
es
mov
cs
jnp
xchg
stos
mov
int
dec
sbb
push
stos
mov
out
int
das
xor
and
pop
icebp
push
mov
push
subl
cs
sahf
cmpsl
push
pop
pop
lock
cmp
scas
cli
shll
xlat
jae
adc
test
imull
mov
out
add
sub
and
sub
aad
rcl
scas
push
push
adc
mov
dec
in
stos
out
test
fwait
nop
mov
mov
aam
mov
fwait
jp
ficoml
das
scas
adc
lods
bound
sub
int
inc
incl
stos
mov
daa
sbb
data16
push
or
sub
into
sbb
cmp
push
mov
add
out
xlat
fmuls
inc
stos
dec
jb
movsb
jno
add
xchg
insb
into
cli
cmp
adc
in
dec
mov
loop
iret
test
mov
xor
insl
stc
inc
fcoml
cmpsl
push
popf
add
lds
and
sar
mov
jo
aaa
push
repnz
add
test
adc
in
das
or
mov
sbb
cmp
sbbl
test
pop
and
loopne
aaa
dec
pop
aaa
in
aaa
cltd
adc
js
addr16
notl
pop
dec
movsb
xor
xor
xor
xchg
sub
sbb
int
add
ds
bound
aaa
out
gs
cmp
push
mov
jg
push
scas
shrl
push
jp
mov
test
fbld
xor
mov
jmp
jno
insl
test
xchg
cwtl
ret
dec
adc
inc
sbb
push
sti
mov
inc
cmc
sbb
clc
push
pop
add
pop
mov
arpl
jne
scas
jl
push
out
add
mov
mov
jns
xchg
pushl
pop
push
inc
pop
mov
out
xor
into
out
loopne
cltd
mov
cmc
jo
push
fcmovb
sbb
sbb
and
xchg
aaa
mov
repnz
call
jns
pmullw
mov
mov
out
nop
andl
sarb
rolb
jno
pop
imul
add
into
lods
cs
out
pusha
orl
cmp
add
push
andb
fwait
scas
or
xor
scas
jo
mov
outsl
dec
lret
bound
orl
jbe
int3
stos
or
xchg
pop
sbb
add
xor
sub
mov
popa
fstl
pop
lahf
movsl
pusha
and
testb
in
pop
cmp
movl
gs
mov
dec
mov
out
ds
js
jno
jge
push
pop
iret
push
mov
xchg
sub
js
call
cmp
hlt
stos
inc
call
sub
xchg
notb
and
jl
inc
jo
js
and
cmp
loope
pop
scas
jb
fs
movsb
movsb
stc
nop
sbb
xlat
insb
or
xor
xchg
ds
imul
iret
or
call
pop
sbb
clc
rcrb
adc
xchg
cs
shll
xor
mov
push
xchg
fldcw
int3
xchg
enter
and
mov
xchg
lds
scas
mov
jo
lods
arpl
popf
xor
stos
push
movsl
sbb
jno,pn
lds
and
pop
push
or
xchg
or
jbe
addr16
jle
ja
xor
icebp
mov
mov
jp
lds
xchg
sub
icebp
cmp
in
xchg
sub
push
out
or
mov
es
push
mov
lock
mov
aaa
mov
or
fimuls
and
or
int3
fs
mov
mov
jmp
cmp
pop
xor
mov
loop
add
adc
loop
inc
rcrb
lea
ror
xchg
outsb
ja
push
sub
xor
inc
in
mov
lcall
lea
add
jge
fstpl
movsl
mov
xor
mov
jg
lret
rcrl
test
insl
scas
ljmp
jbe
test
incb
stc
xorb
bound
xchg
push
inc
jmp
insb
int
mov
or
dec
pop
je
inc
or
jge
out
test
out
dec
inc
fsub
aas
push
cmc
int
mov
lock
pop
xor
pop
or
or
dec
in
jl
xor
push
mov
adc
sub
into
test
inc
push
mov
inc
pop
scas
in
or
mov
add
dec
mov
xchg
add
mov
adc
push
lods
insl
pushf
mov
mov
dec
arpl
push
bound
pop
adc
add
sbb
jge
dec
push
adcl
outsb
cltd
popl
test
pop
inc
mov
xchg
pop
xor
sbb
in
cmp
lods
push
xchg
jmp
enter
push
adc
mov
cmpsl
ds
test
pop
imul
pop
dec
loop
enter
imul
addr16
loopne
pop
push
sub
add
pop
popf
std
test
inc
pusha
inc
xor
jne
es
mov
into
int
mov
test
mov
pop
and
fidivs
lea
add
movsb
das
jg
push
jmp
or
jne
pop
sti
addr16
sub
sub
mov
adc
cmp
jl
mulb
frstor
cmp
fistl
pop
inc
mov
xor
and
sahf
add
ret
jle
pop
adc
out
bound
sbb
imul
xor
gs
call
les
or
shlb
jbe
dec
aas
in
xchg
imul
xchg
or
mov
mov
test
jns
dec
mov
adc
ffreep
ss
mov
mov
call
into
push
and
mov
jl
lret
inc
ss
dec
leave
mov
clc
out
sub
aas
int3
clc
dec
ja
in
int3
incl
mov
jb
xchg
out
in
pop
dec
sub
mov
adc
inc
lcall
sub
out
in
or
adc
out
insb
leave
rorl
xchg
pop
shlb
sbb
loopne
mov
jae
dec
sbb
dec
xchg
jge
dec
ja
mov
in
mulb
mulb
rolb
test
imul
push
add
cmp
or
jbe
add
int3
pusha
dec
test
stc
aad
cmp
cmp
and
push
lret
mov
pop
sub
xchg
pop
push
add
adc
pushf
jne
dec
aaa
lcall
mov
enter
inc
inc
stc
nop
pop
stos
xor
hlt
jo
gs
lds
mov
clc
pop
sbb
push
std
cltd
popf
inc
data16
mov
push
lock
pop
mov
pop
sbbb
ds
push
lret
push
into
stos
or
adc
sbb
sub
and
dec
xor
mov
dec
rorb
push
push
push
in
xor
jmp
inc
leave
pop
cmp
mov
psubsw
sti
xchg
push
push
xchg
xchg
xchg
sbb
test
aaa
movsl
inc
je
dec
mov
pop
lcall
and
ja
adc
mov
fbld
pop
loop
inc
mov
aam
fimull
insl
mov
fbld
mov
mov
lea
mov
jo
in
sub
dec
sbb
xlat
in
add
xchg
ljmp
test
out
lea
shl
mov
data16
mov
cmp
jbe
adcl
les
xchg
add
push
mov
fldt
mov
fdivs
cmp
ret
hlt
jbe
mov
fidivrs
cs
pop
fstps
or
jae
mov
ja
xchg
stos
cmp
fsubrl
xor
insb
arpl
orl
shl
mov
loop
and
mov
fidivl
mov
jnp
and
sbb
add
xor
xor
push
rorl
cwtl
aas
or
push
idiv
sub
fadds
adc
mov
sti
mov
add
arpl
cs
or
mov
pop
cmp
imul
shrb
mov
cmpb
in
in
arpl
repnz
test
ja
pop
mov
xchg
cmpsb
xor
dec
mov
ret
pop
movsb
cmp
lods
fcmovb
jbe
fdivp
cltd
test
mov
adc
pushf
outsl
mov
stos
shrb
xor
daa
xchg
dec
xchg
jg
mov
out
icebp
loop
adc
enter
ret
int3
pop
jg
add
dec
jns
in
dec
jbe
test
or
cmp
jl
out
sbb
aam
xor
mov
add
fnstenv
xchg
pop
xor
jno
into
jo
mov
push
pmulhw
pop
cmpsb
inc
dec
mov
push
jno
jae
xchg
sub
mov
rcrl
testb
jle
mov
ficompl
adc
hlt
movsb
push
and
outsb
jae
xchg
movsl
popl
sahf
or
mov
and
cli
pop
repz
xor
pop
ret
inc
arpl
sub
ret
cmc
mov
mov
frstor
popf
std
push
call
fwait
lret
outsl
sbb
fcomps
jne
std
push
fldenv
les
mov
rol
dec
push
mov
sti
xchg
gs
mov
cmovb
sbb
jge
fwait
mov
iret
jmp
xlat
push
test
cmpsb
out
inc
iret
stos
adc
adc
xchg
sbb
sbb
addr16
mov
xchg
in
push
ss
cli
push
mov
and
scas
xchg
into
xchg
lret
mov
cltd
mov
ret
mov
lret
mov
mov
arpl
into
adc
sahf
jecxz
in
or
adcl
dec
lcall
outsb
data16
or
inc
mov
mov
test
jmp
or
push
mov
ret
jo
mov
xchg
dec
out
inc
xchg
and
ss
int3
mov
movsb
in
xchg
push
sti
add
cmpsb
push
ds
cmp
outsl
daa
and
testb
imul
cmp
fwait
clc
ds
pop
jmp
ljmp
xor
fldcw
aad
out
adcl
push
mov
xor
arpl
cmpsl
push
or
lcallw
mov
leave
adc
mov
push
imul
add
mov
jns
inc
stos
and
pushf
aas
andb
adcb
pop
sarb
sub
adc
pushf
mov
shll
jg
xchg
pop
je
lcall
xor
mov
mov
out
xchg
imul
gs
ss
add
push
mov
adc
mov
outsb
mov
fdivrl
shll
addr16
fsubrs
or
mov
negl
iret
or
ljmp
xchg
fisubl
xor
cmp
mov
mov
test
and
clc
shr
loope
jmp
lods
ja
jp
cmp
jle
aam
xchg
cs
cmc
inc
xchg
add
inc
jecxz
xchg
pushf
mov
sbb
addl
rep
push
and
leave
xchg
fstl
in
das
push
mov
push
adc
xchg
divl
add
adc
outsb
xchg
or
inc
lods
cmp
mull
test
mov
or
nop
sti
shll
cmp
xchg
bound
and
test
sbb
sbb
aaa
shl
mov
pop
push
xchg
jle
lcall
and
lret
pop
cmpl
mov
push
sub
cmp
shlb
inc
ret
mul
ret
std
or
pop
push
mov
loope
dec
inc
jmp
andl
xor
stos
pop
cmp
andb
rcll
stc
and
ss
fldl
notl
jp
nop
lods
sub
test
adc
testl
scas
sub
idivl
sbb
out
imul
sahf
test
or
xchg
leave
and
inc
mov
int
mov
into
xor
adc
imul
loopne
jno
mov
xorb
test
mov
sahf
daa
add
test
adc
int
fbstp
loop
fs
xchg
cli
mov
push
rep
lea
ficoml
add
bndstx
ffreep
cmp
push
in
lcall
into
aaa
cltd
nop
push
xlat
push
inc
add
jae
mov
repnz
lock
mov
popf
lock
dec
int3
fsubr
and
hlt
dec
in
pushf
shrl
inc
bnd
dec
fs
pop
xchg
outsb
add
mov
into
mov
pop
inc
mov
mov
ret
sbb
xchg
aam
repz
pop
pop
sar
sbb
push
cmpsb
std
sbb
add
and
sub
jmp
xor
sarb
pop
lcall
mov
jae
stos
arpl
push
add
popa
imul
addr16
push
cmp
lds
cwtl
xchg
sbb
push
rol
push
stc
loop
lret
fildll
lea
push
sub
or
addl
mov
xor
push
lock
lods
mov
inc
shll
das
jecxz
pop
push
int3
or
daa
mov
and
inc
sbb
ret
adc
test
lret
dec
pop
int
jo
rorl
xor
mov
popf
subb
fldl
cmp
aad
xlat
dec
sbb
add
movsl
push
fistpll
scas
inc
jno
push
lock
sbb
xor
sub
mov
das
xor
inc
negb
data16
lea
mov
dec
jge
icebp
sub
mov
into
jnp
jae
aaa
into
jb
mov
daa
mov
mov
lret
sti
push
mov
jle
pop
mov
push
add
ret
sbb
mov
adc
push
jo
mov
xor
ficoml
xor
scas
push
inc
adc
std
pop
push
cmp
lret
scas
adc
mulb
sbb
mov
push
mov
test
stos
outsb
cmp
int3
adcb
xchg
dec
push
sub
int
pop
aaa
test
cmp
pop
mov
sub
mov
adc
mov
leave
cmp
mov
lret
imul
jl
jb
and
xchg
pop
scas
and
fwait
repnz
and
pop
mov
xchg
pop
scas
addb
sub
and
cld
mov
inc
adc
sub
fwait
lcall
mov
imul
leave
fimull
repz
js
sub
inc
outsb
cmc
das
mov
xchg
outsl
mov
lret
dec
jo
sbb
push
in
pop
push
xchg
sbb
push
adc
jle
sbb
cmp
enter
icebp
fucomp
cmp
add
add
icebp
enter
pusha
xchg
inc
mov
lret
out
call
inc
push
push
jg
sbbb
mov
cli
adc
fstpl
or
cmp
std
push
add
xor
and
sbb
or
jo
cmp
jl
adc
inc
push
fmuls
or
mov
fnstenv
lods
cmp
ljmp
xor
inc
mov
cmpsb
daa
and
ffreep
stc
shlb
pusha
clc
ret
bound
add
adc
aam
outsb
pop
pop
push
push
sub
and
push
cld
pop
adc
mov
mov
pop
jae
ds
fstps
sub
sbbb
test
cmp
frstor
jl
fidivrs
and
pop
movsb
cmpb
mov
mov
sub
hlt
mov
mov
cmp
test
mov
cmp
lahf
inc
test
sub
ds
das
lcall
push
outsb
inc
sbb
pop
xor
into
mov
out
add
hlt
cmp
iret
fcoms
xor
and
jnp
cld
jg
xor
push
dec
mov
jle
xlat
cmp
sbb
lret
and
xor
sbb
divps
lods
mov
xor
jae
sub
iret
pushf
and
ljmp
mov
dec
xor
dec
pushf
pop
aas
testb
test
lea
sbb
jns
jae
pop
out
std
jg
aam
daa
loope
rol
std
jo
insb
push
push
imul
add
xchg
sub
mov
ljmp
pushf
cli
into
dec
add
lea
jbe
pushf
daa
pop
aaa
imul
fsubrp
mov
cmpsb
xor
mov
mov
jp
shr
jae
cli
push
fcoms
test
pop
cmp
ret
call
cmp
fisubrs
cmp
mov
inc
daa
or
cmp
in
or
push
pop
cmpsb
sub
add
jnp
cmpsl
push
and
sub
repz
lock
sub
imul
cwtl
sbb
cmpsl
sbb
xchg
mov
in
fdivs
cmp
stos
cld
lcall
push
addr16
push
rol
mov
sbb
dec
cmpsb
shrl
sbb
or
insb
jae
sbbl
mov
xor
out
ljmp
in
lods
xor
jg
insl
out
sbbb
jbe
mov
in
arpl
and
mov
clc
push
ret
sub
and
add
xlat
inc
lret
fiadds
call
out
inc
dec
and
clc
je
or
mov
push
cltd
mov
push
and
push
add
push
in
and
mov
mov
jbe
and
outsl
daa
inc
inc
xchg
imul
test
xor
stos
stos
in
xchg
fsub
sub
xchg
std
pop
in
mov
int3
loopne
mov
cmpsl
out
inc
gs
test
xorl
lea
dec
pop
loop
push
mov
retw
mov
popa
shll
inc
mov
inc
into
aaa
adc
imul
cltd
add
mov
or
mov
push
push
or
and
jbe
jecxz
xchg
adc
xchg
xchg
lcall
push
xor
inc
add
fwait
xor
xor
ds
sub
push
or
mov
int3
mov
packuswb
imul
cmpsl
call
mov
lock
insl
stc
mov
mov
in
cmp
jo
xchg
js
dec
inc
cmp
mov
push
or
push
jmp
jnp
xchg
fnsave
sti
lcall
addb
push
jno
xchg
xchg
int
pop
push
or
lods
pop
lret
sub
hlt
mov
rorb
xchg
xor
lea
repz
sub
mov
out
inc
cld
data16
or
stos
add
mov
nop
pop
clc
ja
push
xchg
sub
jne
jbe
andl
and
sub
push
lcall
outsl
cmc
or
popa
sbbl
shl
xchg
inc
cmpsl
adc
jns
rcl
movsl
xor
fiaddl
pop
out
andb
adc
cmp
adc
inc
jge
inc
lcall
and
fidivs
lret
mov
mov
inc
jge
push
add
mov
out
pop
bound
and
pop
mov
stos
or
push
mov
push
push
xchg
pop
out
loope
or
xchg
call
or
mov
clc
xchg
xor
pop
popf
ja
inc
ret
divl
pop
mov
stos
or
inc
pop
sub
xchg
ds
inc
in
pushf
cli
inc
xchg
and
mov
jbe
jnp
xor
enter
xor
xchg
push
movsl
pop
ss
and
aas
push
call
push
cmp
mov
and
pop
xchg
cvtps2pi
push
les
add
or
ret
int
sbb
push
gs
or
push
leave
fisubl
daa
setnp
stc
and
sub
into
and
dec
jp
dec
out
mov
push
in
sarl
pop
lods
cmp
mov
ficompl
or
pop
movsb
or
pop
jg
or
lcall
pop
adc
dec
or
pop
cmpsb
jge
and
imul
and
cld
jne
xchg
ljmp
std
push
mov
add
or
lret
mov
sbb
mov
push
pop
cld
mov
repnz
shrb
mov
pushf
out
push
dec
dec
xchg
loopne
icebp
xorl
inc
mov
in
push
adc
add
adc
and
aas
push
shll
loope
push
adc
jno
xor
clc
cld
sub
jae
das
cmp
push
adcb
nop
inc
fsubrs
dec
pop
aaa
loop
fldpi
inc
cmp
mov
idivb
inc
fisubrs
out
lea
outsb
xchg
jno
into
mov
out
outsb
lods
mov
xor
adc
not
mov
or
arpl
stos
adc
jo
adc
or
or
mov
xor
lods
popf
sbb
or
inc
cmp
or
mov
js
pop
dec
repz
add
test
pusha
inc
cmpsl
hlt
lahf
sbb
es
dec
in
scas
adc
outsl
sti
xchg
mov
inc
cmpsb
gs
call
loopne
cmpsb
jge
outsl
inc
jp
sbb
push
jl
add
in
nopl
mov
ss
outsl
in
int
rcl
push
repnz
jecxz
inc
fcmovnb
call
call
in
push
or
xlat
lret
addr16
adc
lret
sub
mov
cmc
mov
lods
in
stc
push
mov
or
or
sahf
sti
xchg
rcrl
rorl
ds
notl
jge
rorb
popf
out
das
jo
dec
dec
movsl
xchg
xor
pop
ja
sub
jnp
xchg
add
pushf
popa
mov
cmp
aad
mov
daa
cmp
lcall
rorb
jecxz
call
sbb
lret
inc
mov
and
push
mov
es
sbbb
int
cwtl
jns
mov
cltd
ret
mov
loope
leave
adc
and
inc
daa
inc
inc
adc
ljmp
jno
test
jg
adc
pop
shlb
mov
cmpsb
xor
adc
fisubl
sub
ljmp
call
fisubrl
sub
leave
jbe
outsb
into
enter
mov
mov
sar
mov
sbb
ret
jmp
hlt
dec
shrb
mov
aam
and
push
push
in
jns
in
sbb
aam
or
scas
add
loopne
push
push
jecxz
cmp
pop
clc
test
hlt
xchg
inc
cmpb
xchg
repz
stos
aaa
into
sbb
lods
ljmp
sbb
mov
mov
inc
add
mov
pop
pop
movsl
mov
and
test
ret
push
test
push
movsb
jecxz
sub
hlt
and
mov
mov
or
push
lea
push
out
ret
pop
mov
aas
push
fxch
cltd
sub
jnp
pop
out
jmp
or
dec
mov
out
inc
sbb
stc
adc
or
push
pusha
lahf
xchg
add
js
pop
sahf
sti
cld
adcb
inc
arpl
mov
ds
daa
inc
adc
popf
add
mov
arpl
push
shlb
leave
pusha
and
pop
xchg
xchg
pop
jg
jae
add
dec
add
dec
cmp
les
shlb
push
pop
in
aaa
push
inc
push
cs
insb
pop
mov
cmp
push
push
fnstcw
lcall
popa
jl
jb
pop
orb
jle
or
xchg
push
mov
jae
sub
lods
inc
jo
xchg
or
in
adc
push
xchg
out
inc
mov
jns
dec
loop
cltd
mov
paddw
out
stc
add
push
clc
in
cmp
sti
bound
lret
sub
add
push
stos
or
inc
rcl
cld
cmp
leave
jmp
ja
and
dec
mov
xor
ffreep
imul
dec
dec
int3
lret
in
pop
xlat
cwtl
mov
and
mov
fstl
mov
cmp
test
sub
repz
aad
xor
dec
shll
mov
cmp
aad
dec
imul
mov
mov
shll
or
dec
stos
add
arpl
lea
pop
mov
outsl
add
mov
fildl
adc
jmp
in
bound
mov
jne
pop
in
gs
out
xchg
mov
nop
test
xchg
scas
and
mov
ja
add
loop
les
inc
movsb
aas
xchg
adc
push
mov
push
cli
add
mov
repz
mov
repz
test
and
pop
xchg
add
mov
cmp
sbb
sbb
imul
xor
mov
in
in
add
std
test
fs
adc
cmpsl
sbb
jp
mov
fwait
sbb
dec
repnz
and
cmp
lods
dec
add
inc
mov
mov
imul
cmp
and
or
in
dec
pop
pop
sahf
pop
push
js
loop
rcrl
pop
mov
ss
inc
popf
pop
cld
xchg
cmc
sbb
and
popf
lahf
pop
jle
dec
cmp
int3
push
pop
cmp
scas
test
mov
fs
outsb
call
lcall
outsl
push
push
pop
sub
mov
xchg
nop
dec
rorb
cmp
js
push
mov
out
mov
or
xrelease
cmp
cmpb
fsubs
adcl
fbld
adc
cmp
xchg
pop
sub
scas
pop
pop
ss
fsubrs
sbb
sub
repnz
loope
fcoms
inc
dec
loop
push
dec
ss
push
fxch
mov
popa
pushf
data16
mov
test
jb
pop
stos
pop
loope
mull
cmp
xchg
ss
adc
pop
add
mov
jno
inc
vpsllw
sub
in
sub
push
loop
dec
out
sub
mov
rolb
jg
mov
push
cli
push
jb
add
dec
adc
sub
das
insl
and
pop
pop
loop
inc
mov
rcl
notb
lcall
stc
test
inc
daa
loopne
popa
xor
mov
lahf
mov
dec
out
lods
xor
loope
bound
jne
adc
arpl
lahf
and
xchg
dec
and
mov
or
and
fdivrl
pushf
sub
mov
sti
jbe
lods
mov
adc
push
scas
fnstenv
sub
fsubrs
xchg
cmc
test
mov
arpl
pop
cmpb
ljmp
mov
pop
mov
jmp
cmp
es
jae
gs
mov
repz
mov
dec
mov
imul
insl
lret
idivl
in
add
aad
mov
push
cmpsl
and
aaa
mov
lea
sbb
test
mov
jno
sbb
jne
data16
cmp
adc
mov
jbe
push
test
inc
call
cmp
insl
jge
xchg
push
fisubrs
push
in
andl
xchg
movsb
sub
jmp
push
jbe
mov
addb
xchg
into
xor
int
dec
nop
movsb
mov
bound
cmc
pop
mov
icebp
sahf
xor
push
inc
sbb
loop
xor
psubq
ljmp
testb
aad
lcall
and
movsb
pop
mov
sbb
cld
push
push
insl
xchg
jns
neg
nop
xor
int
xchg
mov
inc
popa
dec
push
mov
mov
shll
ljmp
lcall
repz
insb
aaa
or
repz
dec
xchg
sub
add
adc
pop
insl
sbb
mov
testl
cmp
test
jbe
or
std
andb
loopne
test
sahf
and
mov
ret
mov
rep
add
push
push
add
mov
jg
clc
jg
mov
sbb
clc
xor
or
cmpsb
bound
mov
xor
or
mov
add
call
mov
popa
clc
movsb
int
add
add
xor
jle
cmp
mov
inc
pop
out
fcompl
aad
pop
jp
cmp
jmp
push
stc
nop
dec
sbb
rcrl
pop
mulb
lret
pop
rdpmc
nop
and
pop
repz
outsb
and
outsl
lahf
jp
inc
mov
cmp
push
gs
popa
repz
dec
test
into
push
scas
scas
shrl
cld
xchg
lret
fisttps
pop
test
push
push
dec
mov
jb
cmp
int
mov
cmp
cmp
add
je
dec
lcall
clc
call
add
xor
mov
pop
jmp
or
outsl
aam
jle
imul
imul
call
pop
inc
mov
pop
shl
and
adc
push
lods
sbb
iret
scas
inc
add
sub
dec
lock
fstpl
jmp
add
inc
sub
pop
in
xchg
cmp
push
lods
ljmp
pushf
or
testb
daa
mov
and
pop
push
test
divb
add
add
pop
repnz
push
push
rclb
mov
loop
adc
sub
in
mov
call
jne
mov
shlb
push
or
mov
cli
dec
repz
data16
sbbl
or
mov
lahf
and
dec
shrb
sbbl
test
cmp
push
xchg
cmp
cmp
stc
cltd
or
std
mov
shufps
mov
cmp
pop
mov
mov
shlb
ds
dec
xchg
lret
inc
scas
fmull
ds
inc
call
adc
and
cmc
dec
and
inc
sbb
jle
xor
add
test
jne
dec
mov
arpl
fadd
mov
pop
aad
sbb
in
fsub
jp
shrl
xor
rolb
mov
lock
or
gs
pop
xchg
cmp
in
push
cli
pop
sarl
sub
in
add
out
add
lcall
push
scas
mov
dec
jmp
aaa
shr
push
aas
mov
test
in
mov
rorl
stc
adc
fadd
mov
jno
or
pop
adc
lret
cwtl
in
mov
ljmp
xor
inc
push
xchg
push
push
call
sbb
inc
stos
push
jns
in
mov
and
je
ret
pop
imul
popf
mov
movsb
mov
test
jne
lock
xor
cmp
lds
and
xchg
out
in
repz
mov
in
inc
adc
add
add
mov
adc
inc
cmp
out
imul
cmp
sbb
fnstenv
cli
mov
jae
pcmpeqd
addb
notb
out
mov
rorl
addr16
dec
lcall
in
lret
push
test
jge
mov
xchg
pop
mov
push
inc
lods
push
mov
sbb
mov
fsub
xchg
sti
push
clc
rcr
pop
lods
xor
pop
in
sbb
gs
das
ds
xor
jl
in
ljmp
push
or
incl
xor
pushf
fimuls
and
mov
and
dec
cmp
jg
ret
mov
outsb
stos
lret
mov
mov
jmp
stc
nop
mov
fstl
push
xchg
and
les
xor
cmpsl
ret
or
mov
jmp
mov
push
loop
dec
arpl
ds
jne
adc
scas
imull
out
imulb
dec
and
fisubrl
in
fldenv
add
or
lcall
mov
movsl
daa
ret
push
jecxz
sbb
lret
cmp
jno
jmp
sbbl
and
fsub
or
mov
dec
or
int
xor
push
mov
sbb
jl
sbb
rclb
int3
shll
jge
nop
cmp
loop
test
sahf
mov
push
push
push
add
dec
pop
jno
std
sub
xlat
pop
dec
clc
lea
fnstenv
idiv
cmp
cwtl
movsb
jb
imul
lods
dec
dec
sarb
dec
adc
push
stos
inc
adc
dec
inc
jecxz
imull
mov
dec
std
add
jecxz
and
icebp
daa
xor
stos
and
dec
fidivrl
mov
fidivrs
shrl
inc
and
sub
ret
add
jnp
fwait
sbb
dec
dec
add
jbe
cmp
cmp
push
pop
mov
push
push
push
into
push
xor
cmp
mull
ret
jle
cmc
aas
pop
jo
repz
sbb
jg
popf
insb
fmulp
push
push
or
push
sub
mov
cltd
xchg
add
adc
test
call
lea
ljmp
xor
xchg
fucomp
xchg
pop
out
inc
xor
je
fisttpll
insl
add
push
out
pop
movlps
outsb
mov
mov
mov
inc
notl
sub
sti
jp
mov
fstl
xor
inc
cmc
ljmp
mov
icebp
or
ja
push
aas
int
cs
xchg
aam
aad
jb
sbb
popf
pop
mov
dec
mov
mov
jb
mov
and
or
adc
fs
jnp
mov
jle
push
jl
jecxz
and
jp
mov
in
pop
inc
leave
mov
cmp
in
or
xor
push
xor
xchg
push
jmp
cmpsb
push
aam
cmp
add
mov
iret
jecxz
mov
aad
inc
in
addr16
aad
negb
in
sahf
outsb
test
or
adc
adc
lcall
push
add
or
cmpsb
or
nop
pop
mov
xchg
insl
cmp
int3
sbb
xchg
fs
shll
rcrb
jnp
mov
and
sub
cmpl
pop
out
mov
add
jo
addr16
inc
cwtl
lock
inc
or
out
push
add
inc
pop
mov
movsl
bsf
mov
dec
mov
test
pop
ss
aaa
dec
ljmp
xor
loope
inc
inc
sbb
pop
xchg
or
movsl
adc
mov
cld
outsb
xor
nop
mov
pop
in
push
hlt
jl
sub
hlt
into
stos
dec
ljmp
out
pop
sbb
in
test
xor
jne
repnz
pop
xor
fs
mov
scas
adc
ja
push
inc
sbb
jge
push
fidivrs
ret
std
xchg
repnz
rorl
mov
inc
cltd
aam
lret
mov
push
adc
add
sahf
push
sub
popf
jmp
xor
out
mov
push
xchg
stc
mov
sub
mov
mov
clc
out
sub
cmc
add
add
es
inc
mov
xor
dec
loope
gs
outsl
cmpsb
push
xor
or
lods
shlb
ljmp
lods
cmpsl
push
incb
mov
stos
shl
or
mov
push
sarb
push
jecxz
adc
dec
jecxz
outsl
movsl
cmp
pop
adc
test
sub
xchg
jmp
fildll
inc
pusha
int3
imul
mov
jl
mov
pop
outsb
aad
xor
div
lea
scas
outsl
out
xchg
xchg
mov
sarb
cmp
mov
insb
sub
divb
cmp
data16
lret
mov
and
and
loop
in
neg
hlt
or
push
ds
xor
and
int3
dec
xor
pop
mov
fstpl
mov
mov
aad
cmp
dec
aam
mov
jp
ds
repnz
xchg
sub
je
sub
test
adc
test
flds
push
out
xchg
or
or
das
mov
js
mov
add
aam
push
dec
sbbb
or
arpl
iret
int3
pop
jge
aas
xchg
jno
jl
aaa
sbb
xor
mov
gs
ret
pop
mov
sbbl
push
popa
cwtl
dec
mov
jns
mov
inc
lahf
cld
aam
sbb
pop
lret
xchg
pop
jge
mov
dec
adc
xor
shl
mov
sbb
xorl
dec
pop
mov
imul
dec
mov
xchg
push
mov
push
ljmp
ss
pop
or
outsb
punpckhwd
add
add
fldt
pop
sbb
rol
jb
out
add
insb
xlat
icebp
xchg
loopne
jmp
test
and
jae
data16
pop
lods
out
add
lahf
pop
or
mov
xor
outsb
fsubs
je
adc
fdivs
cmp
fld
sti
add
rcrl
sbb
adc
gs
xchg
outsb
sub
int
inc
add
add
lahf
out
daa
mov
xchg
sub
sub
mov
nop
stc
push
pop
mov
mov
fldt
fnsave
enter
jns
sub
lods
popf
in
xchg
jbe
jge
je
in
rcrb
xor
push
and
pop
fidivl
mov
mov
dec
arpl
es
test
add
subl
filds
pushf
insl
add
lods
mov
push
ljmp
dec
loopne
jbe
adc
mov
or
sub
mov
sub
test
pop
scas
jno
mov
pop
imul
mov
pushf
sub
xchg
mov
adc
fwait
xor
cmpsb
cmp
pop
mov
shrb
hlt
mov
mov
dec
inc
mov
aam
and
dec
sub
xchg
outsb
dec
cltd
mov
leave
pop
and
sbbl
adc
sti
sub
adc
adc
lods
xor
xor
call
and
pop
inc
push
fstp
xchg
hlt
imul
fnstenv
bound
xchg
xor
je
fdivl
sbb
mov
add
adc
mov
stos
jecxz
push
addr16
or
iret
xor
cmpsl
aas
adc
sub
push
out
fnstsw
sbb
insb
dec
mov
ds
cmp
leave
popa
mov
cmpps
repz
fsubs
sarl
arpl
ret
in
and
loopne
jno
scas
push
shl
jne
ss
out
dec
insb
add
jg
sub
xchg
add
testl
out
loope
jmp
icebp
cwtl
movsb
rcrb
or
ffreep
popf
xchg
sub
out
mov
and
push
or
add
or
lea
faddl
lret
jl
and
retw
cmp
lret
sub
leave
les
jo
inc
jmp
fdivrs
fidivs
adc
cli
std
xchg
mov
test
loop
test
imul
cwtl
push
das
sub
lcall
in
push
insb
cmp
negl
or
xchg
mov
lods
mov
add
pop
cmp
jmp
jg
andl
add
es
data16
jae
xchg
test
rcll
xchg
arpl
sub
data16
mov
clc
sub
fbstp
je
xchg
cmp
std
xchg
call
or
cmp
sarl
ret
sub
jle
mov
leave
mov
mov
mov
idivl
jge
sub
pop
in
inc
stc
add
pop
loopne
imul
cmp
or
push
push
sbb
cmp
and
fists
pop
stc
push
andb
mov
outsb
sarw
add
sub
arpl
aad
mov
sarb
fisubrl
pop
dec
xchg
hlt
loope
mov
lahf
dec
dec
xchg
cmc
mov
cwtl
cmpsb
ss
add
jo
push
push
rclb
lea
xlat
outsb
imul
adc
pop
dec
mov
and
mov
ret
add
or
adc
sti
inc
push
test
sub
push
ficompl
call
jmp
push
cmpsb
mov
jo
push
jmp
adc
lds
scas
fcompl
pop
dec
std
or
sbb
fwait
inc
mov
xchg
and
shr
lret
sti
icebp
outsl
push
and
lea
mov
scas
inc
test
lret
cld
sti
xchg
dec
mov
cmp
insl
mov
push
dec
xchg
fs
dec
push
mov
lds
cmp
mov
sbb
cmpsb
js
scas
sub
test
mov
mov
sahf
and
cmp
pop
nop
divps
pop
cmp
xlat
mov
call
and
movsl
add
es
xor
mov
dec
aam
xchg
rorl
pop
das
lods
and
xor
decl
or
imul
shlb
push
cwtl
xchg
gs
fdivrl
push
jmp
std
push
cli
inc
loop
jae
xor
inc
mov
jo
and
xor
int
rcr
ficoml
or
sub
rcll
mov
out
xor
or
cmp
xchg
insl
push
stos
dec
mov
push
repnz
faddl
mov
mov
fldenv
jl
inc
mov
sbb
loopne
test
adc
jb
xor
lahf
mov
adc
pop
cs
cmp
fwait
fwait
cmpsl
xchg
and
pop
shrb
add
xchg
sbb
stc
lret
xchg
lret
sub
pop
loope
enter
fbstp
xor
add
push
jo
sub
montmul
cmpsb
add
or
cwtl
or
push
test
out
fidivl
push
pop
jo
test
cmp
pop
mov
lea
cmp
cmpb
int3
and
repz
imul
aas
sub
mov
sbb
aas
sbb
call
ljmp
stos
lods
ljmp
pushf
inc
jle
jg
sarl
lods
bound
add
cld
adc
and
test
xor
out
maskmovq
testl
xchg
fnstcw
add
rcrl
sbb
adc
jbe
mov
rorb
dec
in
cs
push
popf
out
iret
jae
aas
scas
pop
sbbb
shlb
in
or
mov
in
xchg
xor
mov
or
add
sub
cwtl
sbb
pusha
mov
jmp
stos
lret
rol
jns
lret
sub
mov
sbb
lds
jmp
mov
sub
inc
add
mov
das
or
popa
push
cmp
out
pop
out
popa
cmp
test
add
adc
xchg
or
outsb
push
std
stos
pop
fwait
icebp
push
mov
sbb
mov
jl
test
mov
icebp
enter
iret
push
mov
xor
ss
jae
sbb
popf
pop
shl
xchg
mov
ss
mov
fwait
iret
or
aam
adc
stos
gs
inc
inc
aam
hlt
push
mov
adc
push
ret
xchg
cltd
es
lret
fisubrs
and
mov
inc
nop
pop
xor
stc
nop
pusha
xor
mov
mov
addl
push
mov
pop
xchg
insl
add
add
stc
lahf
mov
into
insb
nop
neg
push
imul
lcall
sub
mov
mov
sbb
xchg
push
ds
movsb
mov
or
dec
mov
pop
xchg
mov
call
jle
cmpb
xchg
jbe
lea
add
imul
pusha
sub
xor
adc
loopne
stos
hlt
sbb
test
xchg
dec
sbb
in
imul
sbb
fwait
mov
and
ret
jbe
ja
dec
dec
lahf
inc
xor
addb
mov
cmpsb
cmp
movsb
mov
sub
bound
pusha
and
scas
cmc
mov
clc
mov
ja
inc
pop
inc
dec
jl
or
insl
negl
inc
mov
adc
imul
cmpsl
sub
push
jb
inc
rcrb
out
jg
and
jp
mov
push
cmp
lods
jb
aam
jbe
xchg
in
das
aaa
sbb
pop
pop
not
fwait
xchg
iret
les
in
js
rolb
mov
adc
push
subb
rcr
mov
mov
push
pusha
bound
mov
fidivs
es
movsl
sti
push
hlt
pusha
dec
xor
mov
imul
xchg
xor
ds
push
inc
idivb
push
int3
add
xchg
pop
fcompl
fisttpl
es
mov
mov
ret
rcr
inc
mov
jle
loope
jecxz
push
xchg
jge
mov
lret
decb
insl
mov
mov
rcl
push
lcall
ds
bound
js
add
iret
movsl
cmp
push
jp
lret
jo
adc
jnp
adc
xchg
insb
ja
loopne
adc
mov
sub
pop
jns
outsl
in
sahf
in
ret
movb
xchg
jbe
sub
outsb
loop
mov
popf
inc
xchg
or
mov
push
inc
inc
imul
stos
xchg
shr
mov
cmp
cmpsl
xchg
or
call
dec
cmpsl
std
mov
shlb
leave
dec
dec
pop
fstpl
ds
mov
mov
dec
dec
adc
cmp
push
fwait
notl
jbe
out
add
jae
sarb
jp
call
xchg
stos
jmp
or
lahf
nop
es
mov
add
pop
xor
add
mov
inc
stc
xor
add
push
fcomi
mov
xchg
sbb
xorl
cmp
xlat
mov
jno
popf
shll
jl
mov
jecxz
inc
inc
aam
in
les
shrb
dec
push
hlt
imul
fstpt
inc
fidivl
lods
jbe
mov
add
add
jbe
mov
test
adc
pushf
push
insl
jge
mov
sub
fstpt
clc
sahf
icebp
pop
into
sbb
cld
je
cmp
loopne
push
sbb
hlt
jmp
rcrb
movsb
es
nop
prefetcht2
jge
sbb
mov
loop
cld
xchg
dec
test
push
adc
leave
mov
addr16
dec
jne
add
movsb
sub
out
add
lea
mov
sti
montmul
cmpsb
roll
jge
push
iret
into
dec
jo
repz
pop
jg
jo
xchg
in
pop
sbb
or
lock
jnp
xchg
sub
mov
clc
mov
sarl
jae
dec
push
adc
sub
call
iret
mov
dec
fists
mov
shrb
ja
xor
rcr
jmp
in
sub
cs
loopne
pop
cmp
dec
sub
dec
ljmp
ret
mov
ljmp
lea
aaa
je
je
pop
sbb
inc
adc
lods
add
loop
scas
call
fcmovne
fistl
sti
xchg
jno
sbb
fbld
scas
popfw
andl
out
inc
mov
mulb
dec
sbb
sub
add
cmp
imul
shlb
repnz
shrl
shll
mov
pop
xchg
out
aam
int
mov
push
push
aad
fmulp
inc
cld
mov
ret
jnp
sub
inc
mov
push
rcll
pop
adc
nop
pop
ljmp
jmp
decl
sarb
in
jns
mov
jb
sub
sarl
push
adc
mov
js
insl
adc
lea
add
dec
aad
scas
and
mov
mov
mov
pop
cmp
push
stos
jle
pop
inc
fs
or
cwtl
mov
mov
mov
pop
clc
add
dec
and
mov
xchg
repnz
test
or
and
popf
stc
std
fwait
jbe
push
sbb
fcmovu
arpl
mov
stos
jg
lahf
adc
xchg
sbb
mov
mov
and
loopne
pop
mov
bound
pop
fcom
jmp
xchg
mov
shll
stc
test
sbb
push
add
inc
mov
in
insb
inc
mov
ja
pop
adc
mov
leave
ja
pop
pop
sub
repnz
js
add
mov
jno
fimuls
test
xor
cmp
or
inc
xchg
mov
xor
mov
dec
pop
mov
or
jl
xchg
push
cmp
add
mov
mov
xchg
popf
and
xchg
scas
sbb
inc
ret
pop
insb
les
mov
cmpsb
push
xchg
hlt
jnp
adc
mov
dec
imul
lcall
addl
jp
addr16
sbbl
sti
dec
and
popa
clc
mov
or
mov
push
mov
jo
data16
mov
movsb
inc
dec
add
fnstcw
bound
add
mov
daa
test
pop
popf
mov
int3
out
lret
jo
mov
inc
xchg
pop
mov
push
cmp
mov
cmp
pop
mov
sub
add
pop
call
cwtl
pop
cmc
push
and
add
loope
add
dec
sub
fucom
ds
scas
sbb
sbb
xchg
popf
mov
xchg
mov
daa
adc
add
mov
lods
aam
dec
dec
add
xor
icebp
dec
shrl
lea
mov
lret
fidivl
push
push
lods
les
and
stos
mov
mov
sub
dec
arpl
out
cmp
sti
jmp
lock
sub
mov
lahf
add
jp
adcb
out
cld
in
dec
sar
sub
mov
xchg
or
push
fbld
sarb
cli
data16
add
sub
ljmp
imul
jle
insl
lds
loop
cmpl
hlt
das
fwait
push
int
test
aas
out
stos
ja
dec
movsw
dec
xlat
xchg
xor
call
and
aad
fstpl
test
fbstp
mov
mov
mov
aad
je
jb
adc
fisubs
inc
adc
mov
inc
or
push
insb
aad
aas
dec
mov
adc
shll
push
mov
mov
jno
out
add
push
outsl
mov
fucomi
test
sahf
lcall
mov
outsl
mov
rcrl
mov
and
sbb
fists
cltd
jge
mov
rcr
adc
adc
or
xchg
inc
dec
pop
mov
push
sahf
xchg
add
enter
push
movsb
dec
pcmpgtb
lods
stos
test
aam
stc
cmp
sbbl
push
hlt
mov
test
push
ret
pop
push
pop
les
movsl
jl
std
out
dec
iret
push
daa
fcmovb
adc
es
cmp
xchg
stos
xor
hlt
inc
repz
sbb
mov
fstpt
pop
daa
sub
cwtl
mov
lcall
js
xlat
sbb
xchg
nop
lods
loopne
outsb
sub
mov
paddq
in
sbb
push
idivl
repz
xor
add
rcrb
mov
and
stos
inc
popa
fwait
pop
add
push
cwtl
cli
xor
dec
push
xor
mov
lret
cwtl
dec
and
rclb
mov
xorb
jge
aaa
pop
nop
push
cmp
or
jb
pop
mov
or
lcall
adc
mov
fists
out
ffree
jbe
jle
lods
inc
std
test
fildl
push
shlb
mov
and
xchg
sub
cmp
movsb
repnz
mov
mov
fdivrp
int3
xchg
pop
int
stos
lds
test
rolb
pop
mov
push
adc
aas
pop
outsb
xor
mov
sti
test
push
repnz
popa
movsb
std
imul
je
add
dec
mov
jns
lcall
gs
xor
lahf
inc
dec
lret
bound
mov
xchg
lcall
cmp
mov
jg
rcrb
pop
inc
test
xor
mov
adc
lahf
inc
inc
lods
inc
js
sar
cltd
lret
iret
call
lods
popf
mov
cmpsl
ds
addr16
mov
lea
pop
imul
push
fnstenv
push
in
call
or
cmp
sbb
mov
mov
sub
int3
popa
jns
lods
inc
inc
and
je
xchg
jl
dec
add
es
jg
out
sahf
dec
and
lds
ss
xchg
popa
dec
dec
shll
jnp
cmp
push
cmpsb
ja
pop
je
mov
inc
lret
sbb
add
adc
pop
adc
or
cmpsb
arpl
xchg
mov
xchg
addr16
mov
adc
cs
out
sub
mov
and
push
stos
mov
jnp
xchg
adc
je
fists
fdivrl
lds
push
rcl
in
aad
mov
jl
insl
inc
scas
xchg
xchg
fcomps
shlb
push
xor
notb
cmp
rcll
hlt
cmp
mov
pop
fnstenv
mov
scas
stos
and
add
pop
lock
jae
cmpsb
hlt
xor
bound
dec
stc
lods
std
add
gs
or
mov
push
adc
bound
add
mov
lahf
add
inc
fsubl
xor
fisubrs
xchg
test
shl
dec
mov
add
mov
mov
add
lods
scas
pop
and
sbb
dec
outsb
out
and
mov
mov
sti
pop
and
and
imul
subl
or
mov
xor
and
mov
or
inc
and
inc
push
ficoms
dec
in
jl
in
test
mov
cli
test
lods
adc
mov
arpl
nop
scas
cli
iret
and
add
push
inc
xchg
pop
inc
inc
mov
jge
ljmp
adc
ljmp
pushf
add
xchg
lret
pop
sar
or
pop
imul
mov
mov
sub
dec
pushf
xor
pop
scas
out
mov
adc
int3
mov
lds
insl
mov
jb
sbb
or
and
in
leave
add
pusha
addr16
xchg
xchg
mov
dec
std
inc
cld
lret
mov
mov
or
stos
lods
data16
push
stos
mov
lret
lcall
stc
je
ss
je
out
cmpsl
jmp
shll
pop
xor
xchg
xchg
insb
jecxz
add
lcall
mov
sbbl
pop
xor
adc
js
iret
outsb
arpl
sbb
pop
xchg
xor
call
sub
sti
nop
dec
jmp
loopne
and
sti
jae
in
add
ficomps
xchg
call
jo
xor
aas
mov
loop
ret
inc
push
cmp
sbb
test
pop
inc
push
aas
xor
in
dec
inc
dec
lods
mov
mov
sti
dec
cmpsl
loope
and
pusha
sbb
es
mov
mov
xchg
lcall
sbb
dec
add
cmp
pop
stos
xchg
push
test
mov
pushf
add
shrl
and
cmp
int
fsts
or
mov
dec
sub
xor
stos
mov
shlb
add
dec
mov
push
pop
cmovns
imul
in
test
loope
pop
loop
bound
dec
sub
shrl
cmp
decl
ja
nop
push
inc
arpl
scas
inc
shr
jle
sbb
dec
scas
xor
iret
out
test
adc
push
jne
shlb
dec
jge
pop
xchg
pop
lret
fidivl
mov
push
pop
fists
jb,pt
outsl
cmp
loop
xor
cld
in
dec
mov
push
fsubrl
mov
lock
in
cmc
jl
sbb
adc
xchg
cmp
adc
sbb
cmp
test
push
adc
pop
push
xchg
pushl
mov
adc
adc
sti
arpl
or
pusha
sbb
pusha
lea
imul
jmp
push
jp
jmp
mov
sub
sub
ja
mov
sub
insb
adcl
pop
dec
cmp
lea
movsb
inc
cltd
pop
dec
mov
cmpb
sub
sti
scas
scas
daa
sub
pop
sarb
pop
shrl
pop
lds
push
in
cmp
dec
push
fistpll
in
test
addr16
push
addb
lidtl
xchg
add
push
xor
push
hlt
ret
std
push
test
push
ret
rcll
sbb
pop
pushf
movsb
cmp
jl
nop
es
cmpsb
imul
aam
mov
idivb
xor
mov
repnz
insl
in
mov
inc
leave
in
stc
mov
xchg
test
jbe
test
inc
add
aas
and
fsub
cltd
std
push
lock
inc
add
icebp
imul
push
popf
jecxz
inc
je
lret
mov
push
push
das
loopnew
inc
in
push
mov
pop
push
cmp
mov
cmp
hlt
sub
cmp
jmp
imul
nop
and
insl
ja
xchg
cli
daa
xor
mov
mov
outsl
fsubr
and
cli
daa
jo
or
je
pusha
lods
adc
fildl
sub
pop
movsb
lods
jo
ljmp
and
and
or
mov
jp
aas
shrb
mov
add
xorl
mov
push
inc
push
in
out
sub
cli
cmp
jno
dec
push
insl
ret
sub
mov
mov
clc
dec
fcomi
loope
or
sub
popf
stc
dec
mov
aam
push
int
loopne
out
adc
aas
pop
cmp
mov
scas
jns
dec
add
cmp
inc
jns
repz
aam
mov
lds
pushw
repz
xor
add
lds
add
shl
lret
sarb
mov
cltd
call
fucomip
ror
repz
shld
test
sbb
std
or
mov
jg
imul
out
push
loopne
and
cld
lds
lret
lret
inc
addl
scas
dec
inc
leave
mov
aas
movsb
xchg
sub
xchg
mov
mov
into
inc
mov
jbe
rclb
cmp
test
jl
call
or
aad
scas
je
sahf
ds
mov
mov
jae
int
xchg
sub
shlb
xor
mov
jnp
mov
daa
dec
lds
divb
mov
lock
cld
xlat
repz
dec
ds
je
mov
push
sub
mov
shrb
jnp
outsb
ss
ret
sbb
and
xor
add
add
cmc
je
inc
and
ret
lods
lret
bound
xor
test
pop
jmp
movups
fsubrl
mov
mov
outsl
ja
sub
and
ljmp
and
push
loop
pusha
mov
test
jno
scas
popa
cmpsb
add
jmp
xlat
les
mov
push
pop
jg
add
adc
jge
lahf
cltd
out
cmp
push
shrb
mov
aad
mov
loop
jbe
cli
pushf
or
xor
jmp
hlt
push
out
pop
and
jbe
push
mov
mov
jmp
pop
adc
push
sub
out
ljmp
mov
push
outsb
jge
or
ds
out
test
sub
mov
mov
jb
je
mov
pop
lret
ja
rcr
rcrl
pop
das
stos
sbb
pop
mov
pop
mov
fstpl
jg
pop
push
jecxz
pushf
mov
jmp
mov
cld
clc
jae
ret
pop
shr
insb
call
aam
pushf
xchg
sbb
xchg
jae
mov
ret
push
sbb
dec
xor
fsubrs
cmc
pop
lods
imul
cmp
insl
sbb
mov
aaa
repnz
push
mov
adc
out
push
mov
sub
sbb
loope,pt
add
and
mov
pop
addr16
cmpsb
xor
jnp
dec
xchg
ret
outsb
cli
inc
push
aam
xlat
cmp
adc
sbb
aad
jmp
aam
mov
adc
add
sbb
adc
pop
sbb
adc
cmp
fistpll
imul
push
xchg
lds
ss
jae
lret
lret
inc
inc
adc
lods
push
and
xchg
jle
push
inc
dec
arpl
cld
in
loop
jo
shrb
mov
imul
hlt
xor
movl
push
or
mov
jnp
jo
jg
cmc
inc
xchg
mov
mov
mov
test
rcl
mov
jnp
js
das
shlb
dec
sbb
push
push
lret
lcall
jle
es
mov
in
sub
call
mov
dec
add
cmp
pop
out
push
cmp
lahf
cmp
shll
call
xor
sbb
mov
jg
inc
loop
dec
lods
test
out
xchg
scas
lea
shl
icebp
lea
sub
or
push
or
stc
mov
in
adcb
fistpl
fbld
cmpsl
imul
add
cmp
ss
shll
ficoms
jmp
int
push
cltd
and
and
roll
sub
cmp
xchg
mov
jne
fimuls
sub
stos
dec
add
fnstcw
xchg
shrb
lods
fnsave
jb
mov
or
xlat
sub
repz
mov
mov
mov
mov
sarb
orb
imul
push
push
rorb
aad
inc
mov
push
lret
int
cmp
inc
xor
shrl
insl
cltd
mov
sbb
es
push
inc
fmul
jb
mov
pop
xchg
ja
sub
test
sbb
pop
cltd
repz
adc
sub
jecxz
sub
fstl
pop
push
ficomps
sti
fwait
dec
test
loop
jne
fsubrs
fidivs
dec
enter
shl
dec
and
jle
std
rol
push
and
adc
xor
cwtl
jne
mov
jp
mov
add
jl
jo
aas
jge
cmp
imul
lods
shrb
pop
xor
dec
pushf
pop
jg
shll
idivl
rol
jecxz
dec
pop
lods
mov
dec
adc
cmp
rcl
adc
push
inc
fmuls
fisttps
pop
fimull
int
dec
loop
cmp
jo
dec
xor
xchg
decl
dec
fisttpll
out
gs
arpl
adc
mov
mov
mov
inc
call
push
jae
aas
adc
popa
test
fistl
test
sbb
sbb
aas
mov
mov
sahf
scas
mov
sbb
mov
fmull
dec
adc
cmp
les
pop
insb
dec
fcompl
pop
fists
sbb
aas
and
or
cld
xor
outsb
stc
clc
sahf
push
cmp
jb
stc
jae
jg
daa
sbb
lods
cmpsl
ds
imul
push
es
and
sbb
mov
mov
pusha
ljmp
adc
xor
arpl
inc
icebp
adc
dec
cmpl
stc
in
jno
fwait
imul
sar
cmp
add
outsl
xor
enter
add
je
test
iret
push
mov
xor
call
mov
insb
sub
je
call
int
pushf
stos
test
cmpsb
cli
pop
repz
sub
cld
pop
in
insl
add
inc
mov
sub
adc
sahf
incb
arpl
lret
nop
dec
icebp
movsl
sbb
ret
pop
pop
xlat
adc
mov
pop
jb
jp
mov
xchg
jbe
sub
rcl
mov
in
push
push
les
cltd
xchg
adc
ljmp
fisubrl
mov
push
leave
test
jle
and
fldt
adc
ficompl
push
push
stos
inc
loope
pop
movsb
scas
ljmp
mov
loopne
sub
and
xchg
daa
add
aaa
xor
inc
jp
xor
fistpl
and
mov
ret
aas
ljmp
jnp
imul
push
mov
inc
mov
cmpsl
mov
push
mov
sbb
xor
addl
and
scas
mov
js
lods
fdivs
mov
ret
lods
inc
popa
out
dec
cmc
in
cmp
gs
pop
and
lds
pop
dec
mov
adc
jnp
lret
ret
mov
pop
cmpsb
mov
jmp
jne
sbb
push
sub
push
movsb
dec
and
loope
mov
inc
xlat
xchg
sub
pop
sub
jl
shr
pushf
dec
dec
and
mov
pop
mov
rol
movsl
xchg
dec
hlt
ret
out
shlb
in
and
inc
insb
add
lods
push
mov
das
cmp
psubusb
xor
add
jmp
sbb
sub
repz
sbb
jbe
push
insl
pop
mov
dec
ljmp
daa
or
lahf
call
mov
and
dec
adc
mov
movsb
xchg
icebp
clc
mov
ljmp
loope
pop
lcall
pop
insb
sub
test
or
mov
ja
aas
xor
les
jae
pop
dec
ret
cmp
mov
pop
sub
mov
adc
aam
leave
das
js
sub
or
mov
sbb
fisubl
shrb
and
mov
clc
adc
lea
gs
cmp
pop
scas
aaa
adc
push
aaa
in
mov
jno
je
mov
lds
mov
pop
mov
scas
testl
popl
dec
jl
clc
lock
fwait
scas
xorb
jecxz
repnz
xlat
mov
gs
loopne
ja
and
or
jnp
sub
aaa
or
test
mov
scas
push
and
push
push
xchg
repz
xchg
sbbl
jecxz
fdivl
push
mov
inc
ja
call
add
push
mov
insb
loop
lds
add
xor
push
dec
inc
imul
popa
inc
clc
jae
movsl
and
cltd
cli
imul
loope
adc
dec
test
or
insb
out
mov
int3
int
xor
pop
xor
dec
and
stos
adc
inc
xchg
data16
loopne
push
inc
xchg
pushf
stc
aaa
xchg
sub
or
xchg
sub
push
sahf
xor
cmc
std
mov
in
inc
scas
call
adc
xchg
push
aad
and
adc
cmpb
mov
lds
adc
iret
mov
ja
fdivrp
insl
test
xchg
mov
pop
out
add
repnz
cmpsl
mov
rorl
es
int
dec
iret
xor
pop
out
mov
lret
push
or
ja
mov
mov
insb
enter
mov
insb
fildll
pop
fdivl
dec
bound
pop
lcall
jbe
xor
ljmp
and
loope
adc
pop
sub
sub
jae
pusha
negl
sub
shlb
cmpsl
sub
mov
mov
or
and
stos
mov
lds
sub
pusha
sahf
and
pop
xchg
cmp
jno
push
pop
imul
push
les
sbb
imul
pop
movsb
dec
cwtl
pop
rcrl
hlt
jae
mov
adc
sbb
push
leave
mov
jo
xor
hlt
dec
dec
imul
bnd
mov
mov
mov
adc
shlb
jae
push
mov
adc
dec
mov
fdivrl
pop
loop
pop
adc
mov
sub
fucomp
scas
insl
xchg
or
pop
adc
jbe
jecxz
xchg
mov
adc
aaa
or
incl
mov
popa
push
divl
cli
add
jne
mov
jno
lahf
push
or
flds
cwtl
push
cmp
lcall
inc
cmp
fisttpl
or
inc
insl
jg
in
aad
and
leave
int
dec
jmp
push
xor
test
add
outsl
loop
jecxz
enter
mov
pop
and
in
cs
jno
fstps
jnp
jp
dec
and
or
repz
dec
dec
add
movsb
mov
in
jle
lret
sti
jp
test
cmpsl
mov
arpl
mov
fnstcw
scas
bound
sbb
mov
xchg
call
shlb
clc
xchg
mov
adc
pop
aad
and
cwtl
xchg
add
jne
sub
sub
addr16
pop
cmpb
push
out
scas
es
adcl
sbb
ds
xchg
jmp
dec
repz
adc
mov
bnd
test
mov
lock
sbb
stos
cmp
pop
movsb
and
xchg
jl
and
das
pop
aad
popa
jl
sbbl
scas
mov
in
stos
sub
xchg
sbb
in
test
push
xchg
adc
or
cmp
xchg
cmpsl
mov
iret
fcmovne
in
mov
imul
je
das
clc
and
out
je
jne
lret
ljmp
dec
pop
inc
loope
lret
push
lods
lret
mov
insb
dec
enter
cmc
mov
fistpl
fistps
aam
rcrb
in
pop
mov
push
jmp
xchg
es
xchg
add
cltd
pusha
lods
xchg
and
mov
adc
insb
psrld
xchg
sbb
adc
inc
cmp
ss
mov
sti
mov
jle
fistpl
nop
jnp
push
jnp
loope
jmp
xchg
sub
jle
dec
jmp
inc
cmp
sbb
sub
popf
hlt
sahf
inc
icebp
arpl
cmc
movsb
sub
std
andl
sub
jnp
xor
scas
or
push
jmp
sub
pop
je
jle
inc
push
and
xchg
sbb
sahf
inc
dec
mov
xchg
cmc
dec
dec
mov
cmp
ljmp
out
pop
insl
sub
das
popf
fs
mov
mov
scas
test
inc
rclb
xor
sbb
push
in
ficoml
arpl
js
mov
imulb
push
cmpsl
fstpl
xchg
mov
xlat
cmp
testb
cmc
inc
clc
outsl
int
mov
adc
clc
mov
mov
cmp
jns
sub
and
scas
xchg
arpl
dec
pop
push
add
lods
repnz
aas
xor
adcl
outsl
fistpl
add
divl
and
push
bound
xchg
das
mov
jmp
sbb
push
inc
aaa
xor
ljmp
mov
pop
aam
mov
sahf
sub
xor
dec
push
push
or
rol
or
adc
enter
mov
pop
shlb
bound
inc
push
ljmp
jle
fst
in
out
jg
lds
mov
daa
pop
in
cmp
ret
mov
mov
int3
lret
cmp
js
mov
movsb
push
push
jne
les
push
push
or
outsb
sarb
into
pop
fs
mov
cmp
es
insl
pushf
push
mov
test
pop
movsb
test
push
push
icebp
adc
mov
test
stc
test
enter
clc
cs
inc
fimull
bound
push
stc
inc
fisttpl
scas
call
inc
and
rol
inc
sbb
mov
aad
mov
mov
fcmovnu
jb
xor
ret
enter
rolb
pushf
mov
inc
test
pusha
pop
jmp
jbe
mov
jo
mov
das
push
sbb
and
repz
mov
push
outsb
popa
xlat
das
mov
mov
inc
pop
xor
mov
ja
and
mov
push
cmpsl
push
cs
cmpsl
idivl
imul
push
int
dec
add
addr16
pushf
rclb
mov
and
fimuls
shrl
xchg
dec
repnz
cmpsl
repnz
mov
push
insl
fmuls
or
xor
sub
xchg
out
push
int
fidivl
xchg
addr16
sbb
jmp
mov
aad
mov
into
pushf
jecxz
mov
jo
int3
and
xor
loope
inc
aaa
jl
repnz
mov
xchg
into
ljmp
lock
dec
pop
cs
sub
xchg
dec
notl
test
pushf
mov
scas
rcr
cmpsl
notl
or
stos
and
sub
xor
xor
loopne
mov
mov
adc
mov
xor
subb
jae
or
dec
xchg
out
scas
orl
loope
out
push
lahf
std
aaa
inc
je
loope
dec
rolb
or
mov
popa
xor
rorl
sub
sti
hlt
in
cmp
dec
montmul
cmpsb
add
pop
sbb
and
sbb
pop
xor
insb
jo
insb
mov
adc
in
inc
outsb
je
dec
scas
pop
cmc
jo
test
adc
or
hlt
cmp
out
push
push
dec
mov
pop
into
xchg
mov
jecxz
xchg
sbb
mov
and
pop
out
xchg
mov
stc
es
mov
lcall
jmp
mov
test
pop
sub
int3
rcrb
fstl
testb
mov
mov
add
out
mov
aas
fcoml
xor
cwtl
add
arpl
scas
mov
jle
jno
cmp
adcb
push
xchg
xchg
mov
loope
movsl
pop
cltd
inc
push
xchg
pop
andb
fs
pop
shlb
push
jne
mov
push
push
sub
pop
mov
std
xor
insb
fildl
movsl
ds
or
fdivrs
inc
mov
mov
mov
inc
out
pop
add
dec
das
cmp
dec
jg
adc
inc
mov
push
lret
fcompl
inc
mov
gs
rcll
fstl
lock
test
ljmp
and
push
xor
ljmp
and
jge
mov
or
mov
fnstsw
push
dec
sarl
adc
push
dec
mov
jecxz
and
cmpsb
push
cmpsl
or
adc
adc
dec
cmp
pop
repnz
outsl
mov
jno
into
clc
mov
aad
imul
dec
mov
cmp
dec
fdiv
xchg
lcall
inc
jmp
cmp
xor
jmp
sub
xor
js
sub
mov
cmp
sbb
into
shlb
inc
sub
bound
divl
xor
es
add
cmp
mov
cmpsl
or
xor
xor
xchg
iret
shlb
gs
shlb
jns
sbb
add
or
push
scas
fwait
pop
mov
pop
mov
rcrl
icebp
enter
inc
xchg
or
push
ljmp
pusha
ss
cmpl
push
cmc
scas
in
xor
sub
rclb
ret
inc
dec
or
scas
and
lea
or
pop
xor
push
mov
std
mov
rclb
sbb
test
mov
push
cltd
inc
jbe
cmp
outsb
outsl
pop
jle
movd
mov
cmpb
cmp
xchg
sub
mov
dec
mov
jge
sub
push
sahf
shrb
jno
mov
or
inc
ret
mov
ffreep
mov
aad
std
push
mov
cmpsl
loope
adc
mov
dec
dec
adc
sbb
jae
sub
xchg
cmpsl
into
dec
aam
jns
lds
xchg
xor
pop
in
dec
mov
das
pop
inc
pop
icebp
adc
mov
insb
rcll
push
or
stos
jbe
push
pop
adc
in
xor
xchg
xor
sar
stos
add
mov
scas
or
fadds
xorb
cmp
lret
add
xlat
popl
dec
imul
push
addr16
cld
aaa
cmpsl
pop
jae
add
andl
sbb
mov
push
mov
sbb
int
xchg
inc
popa
push
push
cli
pop
aam
jecxz
inc
add
lret
push
into
or
jge
mov
out
faddl
pop
sub
mov
shrb
inc
movsl
outsb
jnp
les
mov
mov
cld
pop
xchg
pop
loope
lea
mov
mov
bound
mov
or
scas
push
gs
clc
dec
inc
fwait
cltd
fsubrl
sub
inc
loope
arpl
sbb
cmc
ja
push
leave
pusha
inc
cmc
out
mov
insb
mov
out
inc
push
das
cmp
mov
in
xchg
mov
lret
hlt
mov
jb
lcall
sbb
rcrl
andb
int
jmp
test
adc
sbb
mov
loopne
jle
pop
push
inc
aad
jle
test
subb
dec
pop
clc
mov
xlat
shll
fldl
and
enter
shlb
dec
jl
jmp
dec
and
mov
lahf
shr
lret
xor
push
mov
inc
pushf
arpl
and
jg
push
out
loopne
pop
jmp
or
mov
insl
adc
pop
push
adc
xchg
xchg
sbb
sahf
xchg
xor
sarb
dec
mov
icebp
movsl
inc
pop
xchg
adc
ljmp
in
or
aaa
mov
popf
pop
mov
mov
aaa
push
in
sbbb
bound
xor
push
push
sub
cwtl
das
arpl
subb
push
add
and
mov
mov
jge
imulb
stos
aam
cmp
sbbb
je
in
shlb
mov
jo
cmp
sbb
sbb
cmovb
insb
adc
pop
ja
scas
xchg
pop
cmpsb
in
je
adc
mov
gs
outsb
rorl
movsb
jg
arpl
fwait
loop
xchg
gs
cmpsb
rolb
adc
rorl
clc
stos
dec
cmp
sbb
cmpsl
ds
je
sbb
add
sub
sub
lock
dec
adc
mov
popf
stos
sbb
jmp
pop
xor
dec
pop
inc
sbb
ja
ficompl
mov
or
ret
cmp
cmpsl
call
leave
sub
mov
iret
outsl
sti
aad
or
fstpt
and
mov
sbb
xchg
cmp
push
xchg
or
lds
push
cmp
add
jmp
jb
jns
cmp
push
fstl
add
and
mov
xor
pop
movsb
pushf
outsl
pop
lret
and
adc
aad
mov
test
mov
nop
add
ds
andl
mov
jno
cmp
xor
aam
fst
cmpl
insl
add
dec
ret
mov
aaa
mov
rorb
adc
repnz
repz
iret
ljmp
jge
xor
and
inc
aas
push
jmp
mov
jecxz
mov
fwait
cli
arpl
jl
jmp
inc
leave
push
icebp
or
bound
shlb
daa
imul
mull
pushf
shrb
clc
aad
push
push
cmpsb
xchg
mov
adc
add
rcrb
sbb
stos
jmp
fidivrl
inc
push
mov
xchg
daa
push
jl,pn
pop
xchg
out
sub
xor
jbe
sbb
mov
cmp
sub
popf
xchg
push
jbe
xor
push
sar
inc
add
cmp
sahf
and
mov
sub
adc
ret
mov
frstor
stc
nop
pop
pop
rorl
push
jnp
test
ss
dec
add
push
jbe
subb
add
dec
or
sti
in
pop
repnz
lahf
jbe
mov
std
xchg
arpl
cwtl
stos
clc
add
aad
xor
ret
mov
roll
add
aam
or
sub
inc
dec
and
jmp
popa
cs
fcom
cmp
ret
pop
mov
jl
sbb
adc
fidivl
cmp
out
fistps
push
xor
dec
mov
test
xchg
enter
jmp
inc
xlat
aaa
add
lcall
mov
iret
popf
mov
sub
add
les
sbb
and
data16
subl
xchg
clc
lret
push
xchg
popf
dec
lahf
inc
mov
jp
push
ret
push
jmp
stos
int
jno
or
and
dec
outsl
fnstenv
mov
adc
pop
add
push
sahf
sub
daa
jge
xor
testl
add
pop
xor
out
jge
aas
xor
cmp
nop
inc
and
xor
subb
pop
mov
call
add
gs
mov
mov
imul
xor
dec
outsl
and
fwait
inc
fcmove
mov
int3
push
adc
xchg
jo
pop
push
testb
mov
bswap
push
cmp
icebp
insb
stos
repnz
imulb
push
lcall
in
orl
fbstp
fnsave
or
rcrl
in
mov
shlb
imul
into
aam
into
nop
out
push
test
js
jecxz
shll
jne
fwait
xor
dec
vmovapd
stos
shrw
int3
fs
mov
push
xchg
aam
jns
xor
pop
pushf
out
inc
pop
decb
mov
daa
lret
repz
mov
iret
mov
loopne
aam
int3
popa
pop
jbe
push
jg
jg
es
cmpsb
add
xor
sbb
adcb
jb
cmp
stos
lea
fsts
jno
and
mov
mov
shll
mov
pmaxub
jmp
lcall
out
xor
sbb
sbb
arpl
int
insl
cld
stos
addr16
in
dec
sub
sti
faddl
mov
data16
test
xlat
enter
int3
fs
cmp
adc
sbb
cmp
mov
pusha
mul
call
mov
ret
out
dec
cmc
push
test
mov
mov
jo
popf
pop
jnp
loop
popf
jo
mov
xor
hlt
or
jno
sub
xchg
and
lock
cs
ret
outsb
es
in
fiadds
in
jnp
jo
mul
add
mov
mov
xor
clc
push
jmp
xlat
sbbb
or
orl
dec
movsb
cmp
arpl
cwtl
rep
or
cli
or
bound
iret
add
scas
fstl
rcl
or
adc
sti
hlt
mov
iret
gs
jne
inc
fbld
les
mov
push
xor
xor
sbb
push
shll
or
sbb
jle
add
insb
fs
xor
push
bound
cli
xchg
hlt
aad
inc
test
scas
sub
xchg
lods
push
pusha
add
add
xor
pop
int
jae
dec
pop
inc
dec
les
mov
shl
inc
adc
lret
mov
push
aas
inc
jg
repnz
sti
loope
test
cltd
arpl
movsb
shl
adc
or
stc
lods
mov
push
sbb
mov
mov
jecxz
cmp
je
inc
fisttpll
inc
and
dec
xchg
pop
or
or
lcall
sub
or
sub
xchg
sbb
ds
scas
mov
imul
push
dec
lods
fcmovne
cmp
mov
push
push
mov
rol
dec
int
dec
sub
addr16
lret
push
dec
xor
scas
mov
inc
xchg
sub
xchg
push
in
mov
mov
cmp
mov
shll
pop
pop
mov
jmp
sahf
mov
mov
cmp
mov
out
mov
fbstp
outsb
cmc
fcoml
xchg
testl
lods
fwait
dec
enter
xor
jecxz
xchg
sub
or
lods
or
repnz
mov
sbb
loope
rorb
cmp
icebp
leave
sbb
pop
xor
or
push
cld
adcl
cmp
ret
mov
jl
aaa
cli
sbb
xor
and
hlt
push
lret
and
mov
sub
cmp
xlat
sti
pop
das
or
jmp
lcall
sbb
test
lds
add
movsb
mov
aaa
shll
sub
jge
repnz
add
xchg
not
fsubrs
shll
repz
insl
cmp
cmp
push
add
jne
repnz
jbe
dec
xor
movsl
enter
adc
cmp
add
aaa
mov
aaa
xor
inc
imul
push
fwait
jb
movsb
inc
dec
dec
xor
clc
dec
in
fists
ss
mov
pusha
lods
sbb
in
test
mov
xchg
sbb
jmp
cmp
xor
adc
dec
adc
lret
jle
arpl
enter
fstpl
mov
jne
pop
jle
in
jecxz
and
dec
mov
dec
adc
loope
lods
mov
pop
mov
pop
mov
shl
push
pop
fcmovbe
lods
mov
shr
dec
and
push
pop
pop
mov
les
pop
push
inc
add
sti
jne
shrb
mov
cmp
repz
test
dec
mov
mov
jne
sub
dec
xchg
xchg
fdivrs
push
test
push
ja
adcl
insl
adc
sub
pop
mov
or
inc
daa
sub
hlt
ljmp
out
mov
xor
je
fidivs
cld
sti
sahf
ljmp
jo
sbb
fldl
sbb
pop
scas
outsl
orl
aaa
popa
xor
int3
pop
cmp
add
fs
inc
arpl
nop
xor
or
and
xor
rcr
test
pop
jmp
xchg
push
icebp
mov
int
imul
in
xorb
dec
dec
les
dec
pop
cmp
push
inc
xchg
fcomps
jo
mov
out
jnp
jecxz
movsb
pop
cmpsl
sub
clc
xor
adc
and
outsb
sbb
mov
jbe
lods
int
and
in
mov
cmpsl
aad
dec
or
out
stos
pop
mov
add
sbb
in
push
add
scas
int
cmpsl
xchg
jmp
xor
ds
pop
or
ret
outsl
out
or
mov
enter
and
lods
scas
dec
or
add
test
fnstcw
insb
and
adc
dec
sarb
inc
pop
mov
lret
bound
shr
mov
cmp
loopne
pop
jmp
or
mov
shl
adc
imul
imul
mov
mulb
scas
inc
cmp
dec
push
mov
xchg
mov
push
in
pop
mov
adc
cmp
push
jne
and
pop
scas
out
fdiv
rorl
mov
add
dec
cld
lcall
and
pop
orl
pop
data16
movsl
lds
mov
pop
adc
pop
inc
fstl
subb
cmp
scas
cli
pop
and
pop
mov
xchg
test
lahf
sahf
add
popf
lcall
mov
mov
sub
scas
mov
sbb
pop
inc
jge
push
adcl
jle
adc
sbb
daa
je
out
pop
adc
js
push
fistpl
mov
lret
test
inc
cmp
jecxz
xor
sbb
cmp
fs
lcall
mov
mov
addb
enter
rcll
push
sub
xchg
push
jle
sub
cmp
ja
pop
xlat
pop
pop
fldl
sahf
push
inc
pusha
ja
xchg
pop
lock
cwtl
xchg
test
or
sbb
add
mov
dec
jbe
sub
xor
dec
leave
sarb
cmp
add
fcompl
sub
xlat
cwtl
pop
ss
es
je
mov
add
ljmp
xor
fnstenv
push
subl
xchg
int3
icebp
sub
das
loope
jbe
cmp
add
cltd
jnp
nop
inc
xor
xchg
push
mov
push
movsl
outsb
cmp
xchg
repnz
arpl
sub
jg
cltd
popa
inc
ffree
pop
ret
scas
leave
vpmovdw
lcall
jo
dec
or
sbb
outsb
pop
jo
gs
xchg
add
loope
daa
push
push
imul
push
and
lods
push
daa
call
push
movsb
xor
aam
idivl
cmpsb
jb
mull
dec
insb
jle
mov
xchg
stc
inc
push
loopne
sub
stc
nop
pop
dec
rcrl
pop
mov
and
rorl
dec
mov
dec
das
aad
fsubrs
insb
push
jb
mov
repz
insb
jle
cmpsl
cmpsb
in
or
cmp
sub
dec
repz
or
mov
mov
inc
jp
cmpsb
les
or
sti
bound
mov
pop
out
sbb
add
mov
xor
mov
add
sub
out
insl
add
mov
out
mov
sti
pop
lods
ss
or
fidivs
sub
sub
les
jg
aaa
xor
push
lds
movsb
dec
adc
mov
pop
dec
jmp
dec
mov
mov
loope
or
fimuls
fdiv
sbb
add
xchg
cmp
dec
into
cs
jo
dec
mov
xor
pop
je
fldt
pusha
sub
es
sub
lcall
mov
mov
scas
xchg
mov
cmp
or
sahf
jle
xorb
inc
cli
cltd
jo
iret
pop
dec
test
dec
adc
aas
outsb
dec
pop
mov
adc
dec
arpl
sub
stos
add
sbb
pop
jl
dec
shlb
outsb
sbb
dec
dec
and
push
ret
ljmp
out
mov
xor
out
lds
adcl
inc
fdivs
xchg
pop
or
push
repnz
pop
push
jno
out
gs
and
movsl
out
ja
push
mov
push
js
pop
daa
je
push
lret
cmpsb
add
adc
fnstcw
mov
mov
inc
fwait
mov
add
pusha
or
shll
and
mov
movsl
mov
stc
inc
pop
inc
mov
std
loop
fcoml
mov
in
fisubrs
je
ret
inc
mov
push
out
aas
shll
call
add
mov
jp
mov
inc
popa
xchg
jmp
rorb
loopne
je
dec
fstpt
lahf
or
int3
mov
xchg
jb
test
adc
jb
lret
aaa
out
and
lods
and
cld
inc
fnsave
sbb
lods
insl
ja
int3
push
cmpsb
les
cmpl
dec
notl
xor
lds
in
ljmp
jno
adc
and
insl
lods
pusha
pop
pop
inc
hlt
xlat
mov
sbb
fimuls
pop
test
aam
arpl
mov
cmpsb
je
out
aas
in
out
mov
adc
jge
scas
das
inc
fsub
test
jb
fsubp
mov
pop
dec
and
ds
or
jae
xor
bound
data16
sbb
outsb
inc
inc
rclb
jmp
dec
push
imul
xor
scas
dec
outsb
adc
ret
ret
shlb
cmp
aad
lock
sub
repz
ret
idivb
dec
cmp
pop
sub
sbb
and
pushl
cs
enter
loopne
bound
xor
mov
sti
int3
lcall
and
je
add
xor
jg
lds
mov
shlb
je
adc
sbb
je
scas
sub
in
xchg
fisubl
es
ds
or
pusha
test
es
pop
xor
sub
pop
sub
sarb
sub
loop
add
sbb
aas
mov
stos
pop
fisubl
adc
sbb
xor
push
pcmpgtd
loopne
inc
fsubs
push
xchg
js
fdiv
lea
mov
xchg
insl
idivl
loop
dec
jno
dec
repnz
decl
ss
push
push
cwtl
les
lcall
and
sarb
int
jp
test
pop
popf
in
xchg
lods
in
icebp
enter
shlb
pusha
mov
pop
adc
sub
fnstenv
dec
ret
dec
dec
shl
push
aas
fimuls
mov
pop
pop
cli
loope
sub
xor
mov
std
xlat
adc
mov
js
jl
jbe
or
mov
cltd
sub
mov
int3
xor
xor
inc
stos
mov
int
je
sbbb
ret
sub
imul
test
cld
mov
fsts
aad
popa
cli
popa
xor
loope
clc
jo
add
repnz
sbb
and
mov
imul
lods
mov
aaa
xchg
testb
imul
add
pop
push
shrl
push
sub
and
loop
or
in
pop
sbb
iret
sbb
mov
xchg
inc
aas
fwait
adc
loop
xor
cld
les
cmpsb
pop
insb
mov
lahf
pop
test
cmp
xor
cmpsl
cmpsl
jmp
mov
fsubl
gs
arpl
xchg
aaa
adc
dec
dec
ret
mov
dec
insl
in
jge
sub
and
or
jge
or
mov
push
addr16
pop
mov
and
push
test
jmp
push
cmp
push
inc
aas
int
xchg
add
pop
push
outsb
mov
sbb
sbb
pop
xchg
xchg
sub
in
scas
cmpsl
xchg
dec
repz
add
dec
ja
pop
mov
arpl
iret
dec
movsl
lahf
mov
sbb
push
pusha
pop
scas
mov
mov
sub
shll
cmc
jg
in
fidivrl
dec
imul
ret
mov
fucomip
inc
int
mov
sahf
mov
pop
cwtl
add
xor
cmp
pusha
cmpsl
negb
stc
sub
sub
pop
imul
pusha
aad
data16
test
in
lahf
imul
or
push
sbbl
test
and
inc
dec
gs
pop
xor
cmp
daa
std
aas
fisubs
aas
xchg
cmp
sbb
xchg
mov
lcall
inc
gs
jae
xor
in
js
push
jo
xchg
pop
inc
adc
outsl
xchg
movsl
sbb
mov
xchg
ret
orl
fimuls
filds
repnz
mov
add
mov
and
cmp
lods
sub
push
psubsw
push
mov
pop
ss
insl
dec
xlat
pop
and
add
adc
push
icebp
or
push
mov
xor
test
data16
jp
popa
inc
aaa
daa
sbbl
test
cmp
ja
je
pop
push
xchg
push
jge
sub
sbb
insl
movsb
insb
insl
cld
pop
push
rcr
sahf
fwait
push
mov
xchg
push
mov
movsl
mov
loope
test
clc
enter
dec
pop
aam
jne
cmpsl
int
data16
out
xor
sti
call
rolb
fldenv
inc
mov
pop
dec
es
incl
int
movsl
pop
lock
mov
sub
es
fisttps
jmp
call
inc
xor
negl
out
div
ret
pop
xchg
pop
jmp
mov
jmp
ror
pop
adc
test
push
cmp
pop
adc
arpl
push
sahf
dec
out
xchg
mov
add
ljmp
jb
and
or
les
stos
cmp
lea
xchg
scas
or
sub
fwait
pusha
mov
push
aaa
xchg
mov
les
rclb
aas
adc
insl
cmp
hlt
mov
std
adc
roll
mov
push
mov
in
sub
mov
lods
std
loope
bound
fwait
push
sub
jne
jge
add
jnp
cld
mov
fldt
pop
dec
lret
outsb
jl
mov
pop
in
mov
xchg
push
or
and
mov
ror
or
push
dec
inc
or
inc
loope
sti
fwait
nop
or
cwtl
cmp
adc
daa
movsl
and
rcl
std
fnsave
int
pop
cmc
fs
insl
data16
mov
mov
dec
pop
xchg
aad
outsl
sbbl
out
into
cwtl
out
sbb
mov
mov
mov
cmp
lods
add
mov
and
and
and
pop
ret
aam
and
inc
mov
repz
add
mov
imull
sub
sahf
stc
jecxz
mov
in
adc
mov
in
push
stos
leave
pop
push
inc
aad
pushf
mull
inc
or
comiss
loope
and
pop
sub
sub
jge
rol
inc
stos
imul
pop
jo
xchg
and
mov
fwait
sti
pop
sar
or
pop
fnstenv
adc
jl
cmpsl
mov
roll
fldenv
jecxz
sahf
lods
push
xor
mov
das
repnz
inc
dec
insb
jge
lret
sub
lds
push
mov
lret
dec
fstpt
popa
addr16
inc
outsl
mov
movsl
jns
outsb
loope
adc
mov
sub
xor
xchg
push
std
gs
mov
mov
cmpb
pushf
cmp
div
lods
and
sub
mov
cmp
mov
lret
cld
lock
cmp
cmove
cltd
ret
daa
push
cmpsb
cltd
test
fwait
out
out
dec
xchg
test
ja
xor
jns
pop
cmp
mov
mov
popa
push
and
and
hlt
test
add
aad
pop
push
add
scas
icebp
imulb
shll
leave
xor
sbb
imul
mov
enter
xchg
xlat
pop
push
test
jnp
pop
mov
mov
shll
ds
sub
xchg
cmpsl
out
and
xchg
call
movsl
cmpsb
fwait
test
mov
fnstcw
insl
ret
dec
mov
addb
xchg
gs
int
mov
push
movsb
aas
clc
mov
xor
in
push
sub
or
es
pop
ss
in
fucomip
imul
sbbl
dec
inc
pop
dec
xchg
je,pn
cmpsb
loope
sub
or
push
movsb
insl
mov
stos
sub
and
xchg
push
mov
sbb
jbe
xchg
mov
and
rcll
shrb
pop
out
and
mov
push
mov
mov
lret
out
sbb
lcall
xchg
sub
repnz
mov
fidivs
or
pop
mov
fcoml
daa
loope
sub
shrb
js
lock
in
xchg
test
inc
push
lock
lahf
push
lds
bound
pop
inc
sarb
push
fidivl
icebp
sub
inc
cmp
pop
sti
jl
fldt
sub
loopne
sbb
test
ret
pop
jb
mov
decb
dec
jecxz
jo
push
sub
dec
outsb
add
xor
pop
movsl
mov
loope
jl
popf
xor
xchg
cmpb
hlt
xchg
inc
xchg
add
jecxz
hlt
loope
es
jp
test
sbb
sub
scas
lods
mov
insb
sbb
aad
imul
daa
sbb
ret
dec
pop
mov
dec
pop
cmp
aam
pop
lcall
or
or
pop
jmp
jae
mov
xor
mov
stc
nop
inc
in
or
pop
movsl
mov
test
in
stos
pop
aam
cmc
movsb
dec
dec
xchg
push
aaa
loopne
mov
test
mov
cltd
test
and
adc
in
fdivl
or
push
push
cmp
fwait
pop
mov
push
mov
dec
inc
stos
imul
push
or
jle
cmp
stc
sbb
xchg
sbb
cld
and
rcll
cmp
sub
in
stc
jbe
test
lea
xchg
lret
prefetchwt1
test
xchg
add
sti
sub
cmp
jae
sbb
mov
sbb
fisubs
in
outsb
or
jae
inc
pop
ret
scas
and
je
ja
aas
and
mov
add
dec
cmpsl
mov
jnp
arpl
mov
pushf
or
inc
int3
dec
test
push
jnp
cltd
xor
icebp
xchg
pusha
int3
arpl
mov
fcompl
xor
rolb
xor
sbb
shrb
inc
xor
mov
pushf
xor
inc
out
jbe
in
addl
or
dec
js
inc
lret
push
pop
in
jecxz
inc
xlat
lods
dec
loopne
add
das
jp
mov
xor
pop
in
orl
or
test
pop
ja
jge
cwtl
or
pop
aas
call
cmp
jecxz
push
andb
bound
daa
jmp
inc
adc
sarl
lcall
push
cwtl
gs
enter
adc
pop
bound
jno
loope
pop
xchg
jp
lahf
lcall
sahf
xchg
aaa
lahf
adcb
sti
sarb
xor
pop
dec
adc
jge
cmp
sub
sub
cmp
in
insl
inc
stos
fidivl
xor
adc
and
call
dec
pusha
out
and
lods
mov
cmp
nop
jmp
sbb
rorl
scas
pop
mov
cmp
mov
in
in
jb
xor
mov
repnz
scas
pop
cmp
stos
out
mov
jl
je
mov
adc
lock
pop
pusha
mov
popa
daa
mov
add
out
test
sbb
lock
mov
fistpll
gs
cmpb
enter
dec
pop
int3
mov
les
jns
iret
push
and
cmpsl
out
push
ret
fdivrs
pop
or
int
enter
and
test
mov
jb
rcrl
mov
sbb
mov
negb
std
push
push
push
xor
in
negl
sub
fiaddl
xchg
cli
or
dec
fisubs
jne
adc
cld
lret
test
inc
cltd
inc
mov
fwait
push
fs
js
lods
push
push
js
push
daa
outsl
outsb
stos
jl
sub
sub
ja
dec
mov
adc
dec
dec
push
sub
pop
and
mov
mov
dec
and
add
out
mov
adcl
mov
cmpl
add
daa
ss
adc
xchg
lods
jp
push
xchg
mov
mov
rol
rcrl
mov
and
jbe
pusha
daa
in
cmpsl
push
ret
sti
fwait
cmp
lock
or
xchg
jno
adc
adc
cmp
jle
lock
lea
xchg
outsb
add
in
fwait
inc
stc
push
mov
andl
inc
mov
xchg
lods
mov
mov
dec
popf
insb
mov
push
inc
or
jae
icebp
gs
repnz
aas
out
pop
push
adc
dec
pop
jbe
mov
ret
stos
sahf
clc
xchg
mov
cmp
fldcw
sub
sub
xchg
pop
push
js
roll
nop
rorb
jno
ds
mov
dec
cs
call
and
and
loope
jmp
hlt
or
rcl
sti
xor
sbb
out
dec
mov
jae
mov
sub
push
mov
or
jno
sbb
push
ja
mov
iret
nop
loop
and
lods
add
outsb
cmp
data16
cltd
fs
dec
mov
inc
fwait
sti
xchg
push
ret
mov
std
inc
pop
or
loope
or
cs
fwait
das
in
mov
and
jnp
mov
push
inc
mov
stc
shl
mov
daa
sub
push
insb
jl
inc
adc
and
dec
rclb
xor
xchg
xchg
les
push
iret
sti
fwait
lock
dec
sbb
xor
add
aad
hlt
xchg
jmp
push
mov
inc
or
repnz
notb
cmpsl
push
inc
mov
sbb
push
and
dec
adc
cmc
mov
cltd
dec
pop
mov
push
jo
or
mov
mov
loopne
xor
aam
sbb
cmp
jg
dec
sahf
js
xchg
shll
mov
mov
dec
push
adc
add
jge
add
fldcw
dec
pusha
sub
mov
sub
add
xchg
and
mov
dec
and
mov
dec
hlt
dec
and
inc
bound
mov
or
cs
push
stc
adc
ret
or
mov
jno
in
push
cmp
popf
addr16
xchg
xorl
and
data16
lea
mov
rcrb
subl
aam
pop
mov
sbb
jae
cltd
pop
pop
or
or
insl
cmp
mov
je
loope
out
sub
rcr
pop
lahf
stc
movsl
int3
xor
lret
loop
rorl
mov
sbb
imul
inc
xor
in
mov
push
sbb
push
sub
xorl
repz
lds
and
mov
pop
xchg
or
dec
bound
sub
pop
imul
adc
scas
push
adc
pop
cmp
add
xor
adc
fstpt
pop
test
and
inc
inc
cmp
fbld
cld
pop
jmp
mov
fisttpll
or
adc
inc
inc
fildll
cli
mov
pop
and
jno
sbb
fcomps
cmp
push
xchg
lods
xchg
dec
outsl
enter
dec
pop
sbb
mov
add
jmp
fcoml
mov
sbb
xchg
xor
mov
dec
stos
pop
cltd
jb
xor
jnp
icebp
in
bound
mov
loop
mov
or
ljmp
push
push
in
sub
xor
pusha
arpl
scas
inc
adc
xor
mov
jecxz
and
js
pop
outsb
jmp
xor
xchg
imul
fnstsw
lock
les
fcoms
std
int3
dec
rcrl
std
or
dec
cmp
sbbl
lods
push
jb
mull
out
mov
mov
outsb
jle
pop
rcrl
jl
inc
es
loopne
jnp
lar
mov
inc
inc
cs
dec
ja
mov
fmul
popa
push
pop
add
pop
adc
push
mov
xor
fcomp
ljmp
shrl
inc
das
push
js
xchg
or
cmp
xchg
cmp
shr
lcall
mov
fdivrs
sbb
mov
cmp
test
lret
bound
mov
mov
mov
and
add
inc
sbb
out
das
xchg
push
je
xchg
hlt
arpl
cmp
pop
jno
mov
or
dec
repz
cltd
loope
jne
loop
sbb
xlat
insb
sub
out
gs
mov
jns
lds
inc
adc
outsb
inc
jno
dec
out
stos
sub
or
jne
push
lret
push
pop
or
popf
xor
jl
outsl
dec
in
jge
lds
mov
lea
fs
cmp
imul
xchg
stos
mov
dec
and
push
insb
cltd
cmc
sahf
iret
fnsave
jnp
out
sti
xchg
lods
pop
dec
loopne
dec
sbb
inc
lcall
xchg
pop
test
jge
lods
pop
filds
add
orb
shlb
sub
and
out
mov
mov
cwtl
insl
sub
jnp
and
in
mov
negl
xor
pop
and
out
std
unpcklps
jo
sbb
enter
lock
aad
cmp
xchg
out
adc
or
stos
mov
push
bound
and
mov
jne
sub
int3
xchg
cs
ret
repnz
xchg
push
stc
nop
dec
push
inc
aas
cmp
or
and
or
xchg
mov
dec
mov
fwait
out
xchg
cmp
pop
pop
cmp
mov
shrl
mov
jae,pn
push
xor
cmp
xlat
and
jbe
push
mov
xchg
mov
xlat
xor
mov
lret
adc
xchg
jb
lahf
xchg
add
into
fucom
sbb
push
add
aaa
popa
andl
mov
dec
sbb
fstps
jle
jno
push
shrl
shrl
leave
push
adc
jb
mov
inc
data16
xor
ds
xchg
sahf
lock
dec
pop
addl
js
mov
loope
mull
daa
cwtl
aam
jle
sub
lea
add
jns
test
push
jecxz
fdiv
adc
fucomip
out
push
jge
or
xchg
fs
cmp
out
cmc
rcl
mov
in
push
lret
push
stos
enter
inc
cld
lcall
aad
icebp
cmpsb
mov
mov
testb
fs
out
or
xor
int3
js
push
out
mov
xchg
mov
ljmp
jl
ret
xchg
push
shlb
pusha
add
pop
and
pop
cmpsb
adc
scas
cmpsb
cmp
fs
cpuid
xlat
sub
lret
dec
in
nop
scas
in
and
cmp
mov
stc
jle
aas
lea
stos
cli
sahf
icebp
push
cs
mov
aas
movsb
jmp
xor
in
xor
ficoms
fsubrp
pop
idivb
in
pushl
xor
or
movsl
inc
fnstsw
add
icebp
es
and
inc
dec
cmc
cmpl
add
call
repz
jmp
leave
pop
int
mov
mov
jnp
dec
mov
pop
adc
jmp
pusha
mov
in
cli
push
lret
sbb
xlat
outsb
mov
add
lea
popf
xchg
mov
fnstsw
rcll
imul
mov
push
scas
nop
outsb
cmp
es
decb
sbb
xlat
sub
jmp
mov
xor
movsb
les
and
push
lret
cs
cmp
inc
in
add
and
push
sbb
mov
jnp
mov
sbb
in
mov
pop
std
push
inc
mov
int
xchg
out
pusha
sbb
addr16
pusha
adc
jo
nop
mov
cld
dec
mov
fisttpll
cmc
xchg
loope
adc
push
mov
pop
sub
filds
scas
fadds
jne
cmc
sub
enter
pop
jmp
dec
fcomi
pop
jg
pop
adc
in
sbb
ja
pop
idiv
jge
clc
mov
mov
jle
icebp
sub
mov
mov
or
data16
insl
add
lods
pusha
and
adc
push
mov
xorb
push
pop
jle
lret
mov
fdivrs
dec
add
movsl
add
cmc
or
pop
push
cltd
sbb
xchg
lods
cmp
loop
xchg
push
pop
mov
out
adc
xor
pop
push
fwait
or
and
outsl
mov
add
sub
or
cli
xchg
lea
mov
sub
pop
cmp
xchg
les
out
push
jne
mov
divb
mov
inc
jp
test
pop
lds
and
mov
dec
leave
loope
push
xor
sbb
insl
testl
addr16
cmpb
fldlg2
jb
pop
push
mov
loop
and
push
cmp
jo
sahf
push
push
mov
enter
and
and
push
cmpsl
inc
dec
adc
jecxz
jp
addl
jbe
test
pop
pop
jnp
iret
lea
or
jle
dec
push
sbb
repnz
sub
test
pushf
imulb
nop
fs
mov
push
mov
inc
call
adc
pop
add
inc
popf
or
dec
jle
jnp
outsl
test
data16
inc
push
jmp
jnp
mov
mov
ds
cmp
cmp
rolb
cmpsl
cmpsl
int
or
lcall
and
insb
aaa
aas
div
adc
out
aam
outsl
inc
orb
sbb
cmpsl
adcb
pop
aas
stos
mov
jecxz
nop
lods
movsb
add
fwait
xor
push
popf
test
ficoml
call
jg
jo
inc
and
inc
leave
insl
mov
mov
xor
pop
rcr
ss
mov
and
mov
inc
pop
jns
fsubrs
jg
into
lock
push
push
je
pop
out
aas
push
adc
ljmp
push
sbb
dec
js
push
inc
cs
or
sub
dec
sub
inc
push
fadd
mov
mov
ds
mov
in
xchg
sahf
stos
aam
out
cmpsl
xor
int
out
fistps
into
mov
sbb
jecxz
iret
ss
push
fcomp
mov
leave
xor
jp
fcoms
sahf
movsl
pop
jnp
mov
inc
mov
ljmp
ljmp
icebp
xchg
mov
gs
fmuls
fwait
insl
fst
lahf
push
dec
pop
movsl
ret
imul
popa
push
rolb
mov
aas
jns
mov
xchg
dec
pop
mov
loop
push
dec
mov
xor
fsubrl
call
ror
dec
nop
inc
inc
jno
cli
jae
stos
les
movsb
mov
push
in
pop
push
mov
push
lret
out
sti
mov
jle
add
cmp
ljmp
ret
and
pop
test
add
popf
pop
fbstp
sbb
mov
cli
incb
mov
mov
andb
add
push
jo
cli
xchg
dec
xchg
xor
sub
cs
push
imul
mov
dec
daa
inc
jl
inc
sbb
sbb
cmc
xor
inc
xchg
dec
gs
jmp
add
jns
and
lahf
push
jno
or
es
mov
insl
cld
sti
push
mov
cmp
push
xlat
leave
cli
movsb
leave
test
sbb
jmp
adc
cmp
inc
outsb
mov
sahf
jecxz
out
mov
add
insb
push
pop
dec
loopne
popf
dec
loope
imul
in
lods
adc
pop
add
mov
das
neg
xchg
lods
add
sub
adc
ss
movsb
cmp
xchg
xchg
jbe
fbstp
mov
inc
sahf
or
mov
sbb
inc
mov
mov
rcrl
cmp
insb
scas
icebp
xchg
add
inc
add
sub
xor
sbb
cmp
sahf
mov
pop
into
mov
mov
fucomip
adc
lcall
pusha
add
or
sarl
in
aam
dec
mov
lods
adc
sbb
gs
pop
out
test
jp
xchg
sub
and
div
push
and
xlat
scas
inc
or
adc
or
cmp
notl
outsb
test
pop
xchg
pop
add
es
mov
push
mov
sbb
dec
aad
roll
int3
cmpsl
mov
popa
jns
cmc
aad
mov
or
jne
sub
inc
pop
xchg
add
jle
lock
scas
pop
mov
xchg
sbb
dec
mov
int
inc
push
jae
into
aad
push
add
and
dec
fsubrl
ror
aaa
push
sbb
jno
push
sti
out
aam
add
pop
add
mov
iret
scas
clc
inc
xor
aad
mov
push
repz
add
jmp
stos
lods
xor
and
icebp
push
xchg
rcrb
jecxz
adcl
movsb
sub
jecxz
mov
int
jle
stos
xor
mov
mov
lds
in
faddl
jmp
andl
mov
fcoms
or
in
je
ffreep
add
insb
jge
imul
jae
popf
les
jo
dec
fsubs
shrl
dec
cmc
dec
mov
dec
movsl
mov
lds
cmpsl
leave
pop
imul
lcall
stos
sub
fs
mov
jbe
cmp
imul
adc
fstpl
push
cld
mov
push
pop
fsubrs
pop
xchg
mov
jo
movsb
and
ja
ja
dec
loop
xchg
xor
or
adc
pop
lock
sub
mov
fnstsw
inc
faddl
or
aad
jbe
sub
pop
inc
push
test
add
mov
imul
pop
int3
pop
stc
cmp
in
sbb
jle
xor
shll
sbb
and
pusha
movsl
testb
nop
out
add
mov
mov
inc
mov
pop
mov
pusha
out
fs
outsl
pushf
insl
fldl
loope
lds
dec
cmp
or
sub
es
gs
les
pop
and
addl
outsl
jnp
stc
jge
mov
int
sub
adc
aad
sub
pop
add
daa
dec
ds
int
sub
pop
xchg
mov
jne
scas
popa
data16
sbb
test
cmp
cmp
dec
jb,pt
pop
lock
xchg
inc
xor
js
sub
mov
xchg
ret
xor
aam
enter
dec
lahf
mov
outsl
neg
test
mov
enter
dec
xor
ljmp
ss
push
pop
and
fisubrs
adc
cltd
mov
lods
inc
ficoms
push
ljmp
jno
loopne
ss
add
loopne
icebp
shrb
adc
pop
repnz
out
in
push
test
adc
push
add
pop
sub
bound
inc
mov
pop
cmpsb
xor
in
mov
aad
sub
test
out
dec
rcr
test
stos
jns
fwait
sti
add
mov
pop
ja
outsl
and
arpl
pop
hlt
push
imul
sti
jecxz
std
adc
xor
xchg
and
jae
mov
xchg
adc
insl
aad
jg
pop
popa
roll
pop
push
sbb
clc
push
stc
mov
lret
add
sbb
mov
push
das
and
xchg
sbb
das
push
loopne
mov
push
mov
mov
rcr
stos
das
or
push
popl
push
jmp
in
roll
dec
into
repz
mov
rcr
shr
or
sbb
lock
loopne
or
scas
inc
das
xor
adc
cli
lret
inc
outsl
data16
test
pushl
data16
cmp
and
jne
cmp
xchg
add
sbb
aam
test
jne
and
cmpsl
xchg
mov
fdivp
xor
loopne
adc
dec
ret
sbb
pop
popa
mov
fwait
scas
jge
hlt
out
mov
or
inc
fnstenv
push
enter
push
fwait
enter
outsb
bound
lcall
xchg
loopne
popf
fisttps
mov
stos
popf
xchg
clc
popa
vsubpd
mov
leave
nop
inc
andb
push
lret
sbb
mov
jb
pushf
mov
repnz
test
xchg
adc
mov
inc
in
int3
push
movsb
repnz
mov
sub
sbbl
repnz
fwait
roll
jp
cmc
stos
test
std
push
leave
or
sar
ret
adc
pusha
shrl
mov
std
mov
in
fstp
jl
daa
loope
inc
fidivrl
inc
fisttps
popa
mov
loop
mov
mov
mov
pop
pushf
outsl
mov
fstpl
mov
adc
fmull
cmp
rorl
pop
repz
cmpsl
and
jne
dec
imul
and
sub
jne
add
out
xor
sbb
ja
imul
nop
sbb
or
jae
inc
and
mov
or
rcll
jle
ret
out
jns
xor
stc
xchg
mov
push
lods
iret
lea
in
shll
xchg
js
icebp
ret
loope
test
lds
cmc
adc
lods
mov
lret
sub
repz
xchg
sub
sbb
mov
xchg
ds
mov
outsl
aas
cmp
clc
xchg
xchg
mov
push
scas
and
iret
inc
rcll
push
out
xor
mov
xchg
nop
out
mov
das
add
cmc
xchg
sub
cmpsl
dec
mov
out
jmp
sub
dec
das
pop
mov
pop
int3
popf
mov
push
mov
adc
lcall
js
mov
pop
add
sub
push
push
movsb
sti
aaa
xchg
push
xchg
jg
ja
or
sub
inc
fnstcw
xchg
fwait
mov
int
imul
repnz
inc
cmp
icebp
pop
mov
cmp
inc
lds
sbb
lods
jecxz
arpl
pop
and
push
cmpsb
gs
stc
leave
scas
pop
jmp
push
and
mov
icebp
dec
pop
lea
jle
std
or
mov
shrl
in
cmpsb
ja
push
mov
imul
xchg
clc
icebp
cs
aaa
xlat
das
mov
jne
mov
xor
jl
push
and
sti
mov
dec
mov
stc
sub
mov
out
lahf
xor
xchg
jecxz
js
jo
pop
jl
jg
insl
mov
push
pop
mov
jp
cmc
leave
adc
lock
ljmp
cmpsb
sub
imul
movsb
in
icebp
adc
push
dec
out
je
imull
in
cwtl
aam
es
cmp
xchg
pop
mov
shlb
pop
loop
pusha
inc
test
cmpsb
adcl
cmp
cltd
push
cmc
xchg
jmp
test
and
jnp
mov
add
scas
or
ds
in
aam
cltd
adc
outsb
lret
fcoml
xchg
dec
nop
daa
jge
mov
data16
out
mov
ja
lds
fisubrs
cmp
inc
cmc
dec
mov
fcmovbe
call
movsl
es
jne
popa
push
pop
lods
scas
inc
out
or
sbb
cmp
and
mov
scas
cmp
pop
fwait
ret
lret
hlt
inc
xchg
movsl
std
adc
sub
sub
sbb
in
lcall
sarl
imul
in
add
fwait
jmp
xchg
and
mov
jb
jns
ljmp
repz
aad
cmp
repz
mov
adc
loopne
push
xchg
xor
push
mov
dec
out
popf
les
outsl
xchg
mov
mov
in
andl
adc
scas
pop
outsl
into
push
ret
sub
xlat
andl
es
insl
fdivrl
adc
xchg
bound
icebp
add
data16
fwait
mov
pop
call
shlb
lret
fmuls
cmp
xchg
cltd
cmpsl
les
push
shrl
jmp
jp
adc
cmp
jmp
and
testl
es
push
xor
xor
add
ret
xor
scas
ret
hlt
rorb
inc
sbb
fimuls
cmp
je
fcomip
cmpsl
sbb
dec
out
sahf
repnz
xchg
shll
xchg
std
or
icebp
movsb
or
adc
sbb
add
cmp
and
dec
loopne
jno
sbb
aas
lds
out
or
imul
popa
mov
lods
call
nop
es
cli
push
into
pop
add
test
or
in
clc
cmc
in
xchg
sub
int3
scas
inc
js
gs
hlt
jns
sbb
add
push
fmull
loop
xchg
addr16
push
sub
cmp
xor
jmp
add
addb
gs
cli
inc
lahf
aad
sbb
lret
and
push
add
inc
fs
pop
and
cli
xchg
std
jns
xor
cltd
and
sub
xchg
cmp
mov
loopne
adc
in
imul
stos
es
fbstp
mov
insb
add
inc
lcall
data16
cmc
dec
mov
in
add
add
dec
push
adc
pushw
xchg
push
pop
lret
sti
or
adcb
and
rorl
out
jmp
fadds
pop
or
xor
jmp
inc
jo
popa
leave
test
cli
xorb
fsubs
and
cli
movsl
outsb
jl
es
loop
xor
xor
jo
push
mov
dec
jg
ret
jl
push
mov
and
jo
and
pop
add
aaa
sub
mov
cmp
pop
stos
shll
imul
pop
icebp
in
ret
repnz
in
push
lahf
adcl
test
nop
xor
adc
sbb
pop
dec
jecxz
jecxz
loope
jns
xchg
push
xor
leave
adcb
sahf
sub
cmp
movsl
lds
pop
insl
jl
fimull
sbb
cli
push
jecxz
test
mov
cltd
cmp
cmp
lods
add
ret
pop
sahf
jmp
push
in
jge
pop
jno
fbstp
fists
jecxz
cs
rol
out
sbbb
mov
jne
fidivs
mov
lret
aas
dec
pop
lock
loop
inc
movsb
cli
cmp
mov
sbb
cltd
mov
mov
sbb
je
insb
cmpsb
push
ja
outsb
add
testl
es
mov
icebp
jb
je
shl
or
and
pop
mov
push
fdiv
xor
popa
adc
iret
mov
push
mov
arpl
imul
fcmove
mov
and
jbe
xchg
imul
mov
adc
and
movsl
icebp
cmp
adc
sahf
push
add
mov
add
movsb
std
mov
js
rcrb
pop
xchg
push
fwait
ss
cli
xor
dec
loop
and
sub
xchg
pop
dec
push
popa
mov
in
test
xchg
mov
in
xchg
xor
inc
fldcw
pusha
jnp
xchg
ret
xchg
aad
iret
stos
pop
jne
jmp
xor
cmpl
int3
pop
mov
dec
sbb
jecxz
push
mov
and
rcrl
movsl
mov
xchg
jne
bound
stc
push
cs
dec
gs
jbe
push
sub
mov
pop
jno
test
or
adc
leave
loope
std
dec
pusha
and
mov
fistpll
adc
pop
bound
int
xor
ret
sbb
jecxz
mov
jle
inc
gs
stos
mov
clc
adc
ficompl
push
xchg
mov
into
pop
push
push
jecxz
push
mov
xlat
jmp
cmp
out
and
mov
imul
ficomps
add
pop
cmpsb
jo
sahf
xor
mov
mov
pop
decb
mov
and
jmp
les
xor
out
insb
cwtl
stos
popf
adc
lds
test
insb
add
pop
mov
fucom
jge
ret
and
and
inc
jmp
js
stos
inc
ficoml
fsubrp
sbb
jb
xor
push
fs
popf
jnp
mov
or
push
pop
adc
sahf
pop
ss
scas
push
test
pop
push
inc
sbbb
les
pop
and
mov
stos
xrelease
bswap
stos
adc
in
bound
dec
icebp
adc
cmpsb
fisubrs
inc
dec
js
dec
ljmp
adc
mov
ficoms
xor
scas
dec
mov
mov
frstor
into
adc
int3
mov
ljmp
btc
dec
ds
sbb
arpl
ja
jb
in
xchg
std
xchg
xchg
sub
fs
jl
outsb
mov
enter
inc
in
mov
lret
xchg
test
jo
shlb
je
cli
cltd
mov
inc
loop
repz
icebp
dec
and
add
mov
aad
xchg
ss
jg
mov
popa
inc
mov
adc
je
mov
repz
inc
jbe
push
bound
jno
mov
adc
jle
push
xor
or
jmp
pop
sbb
jge
bound
sarb
adc
in
int
add
sub
call
jge
add
iret
push
out
sub
pop
mov
mov
enter
lret
mov
imul
insl
mov
and
xchg
rclb
int3
popf
shlb
fimull
outsb
aam
js
jmp
sub
leave
fs
inc
cwtl
xorl
pop
les
hlt
fidivl
cld
loopne
fs
int
xchg
dec
xchg
aas
adc
push
call
jge
pop
xor
xchg
mov
pop
or
sbbb
inc
mov
adc
push
test
xor
adc
pop
xchg
pop
lret
or
arpl
push
cwtl
jo
xor
rcrl
aaa
jmp
sbb
or
jge
sub
shl
jno
push
xor
fnstcw
aaa
aas
stos
je
in
inc
test
add
mov
xchg
movsl
out
into
and
and
outsl
inc
in
arpl
jo
lds
sub
mov
dec
fnstsw
mov
xchg
shrl
add
push
incb
fisubs
inc
adc
out
insb
xchg
mov
jecxz
out
push
ds
out
add
push
inc
enter
popa
ss
scas
aad
lahf
push
aad
push
pop
lods
mov
js
mov
sub
fmull
pop
add
movsb
mov
jle
add
or
mov
test
push
sub
icebp
push
mov
ret
mov
notl
mov
xor
jbe
icebp
xchg
mov
mov
cmp
shrb
fstpl
xchg
push
jg
int3
xchg
dec
sbb
mov
mov
imul
ja
push
xchg
stos
xchg
push
test
test
sbb
iret
fdivs
mov
mov
js,pt
sub
sbb
jge
popa
clc
jle
inc
inc
mov
push
enter
mov
addr16
mov
push
mov
adc
xor
fwait
cmp
xchg
mov
mov
mov
into
addb
stos
mov
push
sbb
addl
sbb
jl
xchg
jno
jle
jp
mov
or
mov
add
add
insl
fdivs
in
xor
adc
adc
leave
xor
sbb
fcmovne
std
mov
or
loope
int3
add
pop
push
cld
cwtl
sahf
xor
lret
push
mov
sbb
inc
jle
jb
call
loop
mov
sub
xor
xchg
icebp
imul
lcall
mov
mov
jae
mov
fnstenv
mov
lcall
mov
sbb
imul
shlb
cmp
adc
pop
loopne
add
dec
push
js
out
push
stos
cwtl
movsb
repnz
jne
pusha
pop
in
or
test
jae
inc
les
add
mov
xor
aam
pop
aaa
js
mov
jae
xchg
cli
cltd
mov
out
cmpsl
and
ja
xor
and
adc
andl
cli
test
jae
ret
sub
jno
adc
or
mov
add
add
push
adc
sbb
add
repnz
xor
mov
test
adc
jmp
xor
jmp
mov
mov
jae
pop
das
jl
sbb
js
insl
mov
pop
jb
insb
sbb
jnp
std
mov
cltd
dec
inc
sahf
icebp
in
andb
dec
out
repnz
or
icebp
mov
mov
icebp
nop
xor
sarl
push
jmp
xor
ret
arpl
arpl
cmp
subl
or
sub
jl
incb
decl
cmp
push
je
push
aad
xor
pop
mov
daa
arpl
and
int
push
out
out
cmpsl
sub
les
sbb
sbb
dec
push
ja
mov
imul
inc
mov
mov
jp
ja
lock
mov
jnp
into
fdivrl
inc
loop
bound
fisttps
inc
mov
jle
mov
inc
mov
in
cmp
shll
pusha
dec
dec
push
inc
rcrl
insb
scas
mov
pop
lea
mov
repz
movsb
adc
rclb
loopne
aad
cwtl
icebp
mov
les
int
xchg
pop
out
dec
push
rcll
and
sar
lods
push
daa
clc
or
jae
fcoml
add
fcmovu
insl
movb
jp
insb
jno
nop
mov
lods
cmp
out
lea
fdivrs
and
push
pop
mov
and
mov
lods
mov
aam
and
iret
decb
cwtl
loope
jo
lahf
push
cwtl
lds
fnsave
pop
popa
sbb
sub
pop
movsb
jns
jecxz
and
shr
xor
cmp
pop
add
mov
mov
xchg
divb
push
push
clc
sahf
in
insl
or
sub
sti
pop
push
or
test
cmpsb
sub
jmp
and
je
and
adc
or
idiv
icebp
cmpsb
sti
fnstsw
add
cs
jp
mov
dec
dec
or
daa
mov
pushf
out
xor
in
hlt
cmp
pop
jecxz
xchg
cmc
inc
ret
int
std
dec
push
sbbl
scas
mov
lods
xchg
dec
cmpsb
dec
ret
lcall
mov
sub
and
cwtl
sbb
fmull
sbb
inc
dec
std
or
xchg
popa
and
dec
mov
rclb
stos
inc
jecxz
test
sub
movsb
mov
pop
lods
mov
add
into
xor
mov
jmp
sbb
jno
xor
call
nop
xchg
scas
lret
push
mov
push
test
call
cs
sub
testb
call
ja
sahf
mov
aam
sbb
lret
xlat
clc
mov
and
stos
hlt
sti
xlat
cmc
push
in
dec
push
pop
stos
into
int3
das
mov
jo
mov
es
cs
les
jae
jge
mov
pop
hlt
jecxz
dec
pop
mov
adc
add
es
and
sub
ret
fisttpl
in
out
rolb
in
pop
xchg
pop
or
outsl
push
test
mov
pavgb
pop
xor
stos
mov
jp
or
testl
rclb
jae
fcomps
nop
or
mov
inc
pop
popl
jmp
bound
dec
sub
jmp
push
in
add
popf
cli
cmc
xchg
imul
repnz
fistpll
leave
xor
mov
or
mov
push
out
std
mov
das
sbb
rol
das
push
jge
outsl
push
and
inc
dec
movsl
mov
xchg
jb
push
notl
dec
mov
add
jb
or
adc
inc
cmp
add
shrb
arpl
lahf
fcoml
outsb
pop
sbb
vrsqrtps
pop
mov
xchg
jbe
xchg
inc
inc
hlt
aaa
xorb
push
jne
sub
mov
addb
mov
out
mov
daa
scas
mov
xor
push
adc
dec
lahf
lret
push
dec
nop
xchg
jecxz
mov
je
sub
jmp
cmp
jbe
sbb
lret
cld
aam
or
push
movsb
stos
mov
in
test
and
jle
lds
xchg
hlt
imulb
or
clc
sahf
sub
xchg
xor
adc
data16
and
shrb
jb
xor
jae
dec
out
mov
push
mov
mov
pop
je
test
jge
add
push
test
adc
adc
or
in
test
mov
or
sahf
adc
xor
subl
outsb
or
psrld
fiadds
lahf
inc
cwtl
inc
aad
nop
into
out
aaa
push
jo
inc
sbb
lcall
sbb
scas
mov
clc
ds
cmp
mov
mov
out
shrb
loopne
ja
xchg
dec
iret
lcall
push
cld
cmp
xchg
insl
and
in
cmp
sbb
aad
fidivrs
out
sti
push
push
fildll
mov
add
aaa
sti
fwait
stc
cmp
inc
push
mov
repz
bound
in
test
ret
mov
lds
pop
xchg
adc
and
lahf
or
or
jle
sbb
sbb
add
packssdw
stc
test
sbb
push
xor
test
js
jbe
in
popf
push
hlt
inc
mov
jns
test
test
test
ret
push
and
subb
rorb
mov
sub
cld
inc
add
cltd
xor
cmpsb
jbe
out
popa
pop
and
jno
pusha
pop
popf
insl
add
nop
int3
out
dec
pop
lock
dec
loope
out
cmp
jg
inc
push
out
adc
mov
or
test
pop
jno
int3
mov
xchg
loope
push
out
fucomi
repz
push
add
xchg
xor
adc
loopne
cmp
shlb
dec
xlat
arpl
sbb
adc
into
xchg
mov
jge
push
sub
mov
push
push
sub
mov
out
jne
adcl
push
mov
mov
call
xor
and
mov
divb
jae,pn
jp
cltd
sbb
inc
mov
push
mov
divb
lret
loope
addb
push
lahf
cmpl
stos
mov
xor
je
rorb
push
cli
adc
insl
leave
adc
stos
mov
sub
and
mov
jle
pop
mov
push
dec
into
in
je
add
sahf
arpl
lret
insb
pop
stos
daa
jo
fisubl
xor
scas
adc
hlt
sub
insb
xchg
mov
outsb
jle
stos
sub
push
and
sub
pop
push
inc
daa
or
es
in
xchg
js
jle
test
test
push
rclb
shlb
leave
int
cmp
stos
adc
sbb
adc
sbb
pop
or
cmp
test
sti
push
jb
test
sti
andl
pop
sbb
ret
cmp
loop
mov
pop
test
mov
jnp
sub
leave
outsb
inc
fidivs
int3
mov
mov
loopne
pop
fwait
xor
pop
cwtl
xor
mov
sub
jle
push
imul
bound
popf
xor
in
ss
adc
inc
xorps
mov
fsub
mov
dec
adc
js
cmp
xchg
add
and
mov
jb
push
js
xchg
js
jb
adc
sbb
int3
cli
dec
pop
sbb
mov
xorl
push
movsl
or
pop
ret
mov
mov
into
int
mov
repnz
ds
jmp
mov
sbb
mov
das
stc
ss
mov
fidivrs
or
jl
xlat
sbbb
and
lret
xor
inc
bound
jg
xor
xchg
bound
mov
pop
test
mov
push
cmp
fmull
add
testl
inc
sahf
xor
pop
movsb
adc
mov
push
in
jae
pop
cmpsb
cmp
jmp
or
mov
push
push
adc
cmc
pop
ss
jns
mull
fnstsw
jnp
mov
data16
ret
in
std
adc
dec
cmp
add
xchg
fisubl
dec
iret
dec
jmp
or
or
fdivrs
sub
adc
andb
bound
cmp
jp
inc
sahf
std
inc
cltd
stc
sahf
dec
mov
inc
sbb
xlat
imul
cmpsb
cltd
push
ljmp
es
add
ret
bound
jecxz
jbe
cld
sub
pop
and
in
iret
xor
xchg
adc
or
into
sti
sbb
lds
in
insl
ja
nop
js
hlt
lods
mov
jnp
push
pushf
add
pop
cmp
cmpsl
xorl
pop
jo
cmpsb
fdivrs
or
mov
dec
or
add
push
sub
dec
movsl
sbb
xchg
js
pop
stos
adcl
in
sbb
sahf
cmp
rolb
out
fiadds
mov
sub
es
add
sbb
cmc
pop
repz
or
bnd
and
xchg
push
lods
data16
push
jbe
popf
sub
lods
add
push
cld
and
cmp
xor
in
cwtl
xlat
and
call
xchg
jns
jbe
mov
mov
sub
mov
mov
push
insb
inc
pop
mov
outsb
cltd
sbb
loope
jbe
shl
mov
cs
popf
aas
dec
lds
imul
pop
repnz
adc
popf
inc
imul
xchg
lods
jmp
aad
negb
sub
shl
aaa
mov
dec
pop
inc
into
mov
xor
ret
hlt
mov
iret
pop
add
int
xor
adc
scas
nop
sub
mov
cmp
sub
and
xchg
test
sub
iret
xchg
and
sbb
xlat
dec
mov
pop
movsb
cmp
mov
nop
ss
or
in
test
cmpsb
ret
repnz
cmp
shll
shl
test
mov
inc
repnz
inc
sbb
dec
adc
sahf
xor
push
cli
push
cwtl
sub
mov
dec
adc
inc
and
lcall
cs
fwait
sub
push
dec
jno
clc
xchg
jle
adc
dec
pop
in
js
outsl
cmp
mov
xor
xchg
cmpsl
inc
jo
jmp
mov
push
addb
jb
lods
ja
xchg
mov
adc
sarb
pop
mov
mov
movl
mov
jb
clc
into
jns
push
sbb
bound
stc
nop
jno
test
scas
ret
movsl
dec
loop
and
imul
xchg
inc
xchg
jns,pn
mov
jbe
xor
aad
leave
mov
add
cmp
and
aas
xchg
pop
hlt
notb
lcall
pusha
loope
cli
rclb
xor
cmp
and
fildl
mov
inc
pop
jb
inc
jno
js
xchg
stc
lcall
icebp
ja
inc
fnstcw
xchg
js
dec
dec
xor
dec
out
test
sub
cmc
sbbl
shrl
pop
jnp
test
inc
imul
pop
lods
cmp
sbb
cmpsb
pushf
lods
add
repz
das
and
inc
mov
js
cmc
mov
inc
int3
xchg
bound
jp
push
ja
cmp
add
out
sbb
bound
mov
dec
mov
or
ja
dec
dec
sub
stos
pop
mov
ja
jmpw
shll
std
xchg
jbe
fbstp
mov
sbb
je
sar
sub
inc
sti
xorb
mov
mov
push
and
jge
cmpsb
cmp
mov
push
or
fdivrs
push
inc
ficoms
inc
pop
sub
stos
inc
test
ret
pusha
jp
sbb
nop
popf
mov
pop
aaa
ja
mov
cmp
inc
loop
orl
and
lea
mov
out
cmpsl
addr16
pop
dec
cmpsl
call
loopne
mov
jp
adc
inc
fwait
repz
insb
sbb
aaa
out
add
pop
pusha
orb
pop
add
xchg
lods
lahf
lods
cld
xchg
xor
pusha
or
jecxz
mov
pop
add
jp
xlat
addr16
sbb
arpl
cmp
jbe
pop
jno
shll
adcb
inc
push
xchg
sub
bound
sar
jne
stc
stos
sbb
xchg
stc
xlat
imul
fdivrs
pop
xchg
push
cmpsb
mov
pop
push
mov
xacquire
into
and
ret
pop
inc
hlt
cld
xchg
push
mov
fxch
and
out
push
sub
cmp
lds
xlat
popa
stos
or
hlt
lea
push
jle
ficoml
cmpsb
popa
or
cmp
xchg
sub
lahf
mov
or
mov
in
sbb
adc
mov
lcall
mov
aas
sub
shlb
out
sub
fmull
repz
das
in
pop
dec
and
ret
xchg
fndisi(8087
stc
xor
add
xor
jg
aad
lcall
mov
shll
call
adc
lret
cmp
xchg
lret
pushl
jae
and
push
fisttpl
mov
lds
inc
dec
loopne
faddl
jecxz
mov
cltd
sub
inc
insb
inc
out
call
jmp
scas
imul
jb
test
fdivrp
cmpsb
ja
adc
jb
push
or
sahf
lea
mov
push
jmp
xchg
addr16
stos
cld
xchg
rcl
jae
ficoms
dec
and
mov
int3
pop
inc
fsubrl
adc
sti
sub
cld
into
mov
adc
nop
aam
inc
pop
adc
pop
jne
inc
sar
stc
mov
cmp
lock
push
ss
ret
dec
fmull
xchg
repz
and
dec
fmul
pop
mov
aad
jecxz
pop
js
bnd
and
scas
movsb
xchg
sub
rcrb
mov
sub
incb
es
sub
dec
pop
out
xor
fmul
int
xor
mov
sub
cmp
cs
lret
scas
mov
jle
ja
xlat
jno
iret
enter
pop
inc
loopne
jl
push
mov
lret
aas
jnp
push
scas
dec
push
ljmp
jb
push
push
in
sub
clc
and
xchg
lds
cmc
jnp
jl
imull
and
mov
fistps
test
mov
cmpsl
sub
subb
jg
pop
mov
and
pop
lods
mov
mov
jns
js
arpl
pop
push
out
add
loop
and
push
xlat
repz
jne
fcoml
adc
test
fdivr
add
push
sub
ss
shlb
into
cld
rcl
xor
pop
out
iret
rorb
in
pushf
mov
addr16
mov
dec
xchg
sub
pop
mov
xor
sub
and
inc
adc
loopne
push
lret
sbb
pop
mov
or
das
sub
dec
out
push
xor
outsl
cmp
rolb
dec
jo
dec
sahf
sbb
mov
imul
or
inc
mov
push
mov
mov
sar
sahf
sbbl
in
adc
aaa
push
pop
mov
out
test
mov
cwtl
and
clc
or
inc
mov
insb
mov
dec
xor
cli
xchg
es
shrb
jl
sub
in
repnz
subb
fcoml
inc
xlat
mov
jmp
dec
and
xchg
daa
outsb
fsubp
sbb
fwait
sub
imul
xor
arpl
mov
push
lret
pop
repz
mov
insb
mov
cmp
push
cltd
xor
inc
push
bound
xor
stos
adc
insb
and
push
das
ret
out
inc
xor
xor
aad
lea
dec
cmc
daa
std
aam
adc
xchg
mov
jge
test
mov
cs
inc
adc
popa
xor
mov
pop
addr16
mov
popa
test
inc
and
inc
clc
xchg
xor
in
lods
lcall
cmpb
inc
pop
mov
repnz
or
mov
mov
mov
imul
jg
sbb
popf
in
push
push
ljmp
arpl
mov
mov
sub
lea
ja
loopne
ss
xor
cltd
jnp
aas
addl
pop
push
call
bound
jg
jecxz
stos
inc
mov
pop
stos
inc
xchg
or
xchg
shll
aam
in
repnz
and
bound
cld
xor
lahf
repnz
adc
test
mov
outsb
rol
dec
loopne
mov
into
mov
pop
push
addr16
sub
jae
shrb
repnz
xor
push
mov
or
lds
jne
mov
inc
xchg
sub
je
mov
xor
fdiv
stos
push
inc
cmc
pop
mov
lcall
push
in
cli
xchg
dec
loop
mov
imul
js
or
call
or
cmp
mov
push
jae
js
mov
mov
mov
add
add
inc
push
push
out
data16
je
jl
and
mov
adc
aas
mov
movsl
test
movsb
jecxz
test
xchg
jo
add
jne
hlt
cmpsb
dec
lahf
or
lods
add
aaa
mov
shll
cltd
xor
cmpsl
pushf
xor
dec
mov
mov
push
mov
xchg
je
popf
push
jecxz
test
les
subl
or
cs
inc
xchg
mov
lea
pop
jecxz
add
bound
inc
adc
lock
sub
rcll
cmp
ss
inc
xchg
inc
jmp
mov
and
or
out
out
cmp
xchg
push
pop
jne
out
jecxz
sahf
lret
and
je
mov
jns
outsb
and
lret
fists
xlat
push
or
inc
jecxz
cmp
clc
rorl
stos
jp
mov
movsl
mov
loope
insb
leave
and
scas
cmc
dec
test
into
sbb
dec
out
rorb
pop
insl
push
stos
push
pop
sbb
adc
stos
cmp
jle
mov
and
fisubs
into
lahf
repz
sub
add
insl
jge
sub
out
shll
mov
push
pop
xor
cmp
pusha
adc
jo
inc
cli
mov
out
aad
mov
popa
mov
sub
and
xchg
adc
or
stc
out
insl
xor
loope
sti
push
hlt
repz
cmp
pop
repnz
in
or
aaa
nop
daa
imul
push
cmp
pop
xchg
xor
jns
fisubl
inc
xlat
dec
andl
pop
add
rcl
iret
data16
dec
fbstp
rclb
jle
add
pop
and
lret
cwtl
ret
mov
pop
fbstp
in
jbe
push
xchg
push
add
sub
add
loope
insl
adc
insl
add
cld
xchg
push
sub
dec
movsl
cmp
sbb
ret
sub
or
mov
mov
cmpsb
es
add
xchg
pop
adc
jp
mov
mov
lcall
lret
in
cmp
movsl
xchg
pop
cmp
cmpsb
mov
jo,pn
clc
sub
fistps
push
je
add
xchg
sbb
mov
stos
fs
call
lds
mov
inc
dec
aas
cmp
sbb
movsl
outsb
jl
mov
out
xlat
pop
pop
icebp
or
add
and
enter
and
out
test
and
minps
jo
dec
movsl
xchg
pop
jns
subl
pop
sub
rclb
testl
mov
adc
in
jb
cs
cmpsl
cmpsl
icebp
out
jp
push
jno
xor
aam
aam
stos
insl
push
test
clc
cld
sub
je
xor
or
mov
fisubs
xor
add
push
cmp
icebp
lods
mov
and
pop
bound
or
ficoms
fiaddl
xchg
mov
dec
sub
pop
lock
ja
mov
adc
and
popa
xor
enter
adc
xchg
bound
and
movl
cltd
das
xor
mov
xlat
adc
rorl
mov
jecxz
sbb
sbb
out
mov
inc
mov
dec
mov
push
sub
xchg
jmp
or
inc
mov
sbb
or
imul
leave
js
mov
mov
fmul
pushf
and
dec
pop
testb
sahf
fstpl
xor
ja
adc
fistps
xchg
sbb
add
test
pushf
call
sahf
lods
hlt
push
cmp
push
dec
data16
cltd
mov
in
sub
cwtl
dec
sbb
sti
dec
stc
jne
loop
jg
outsb
rorb
loop
nop
pop
fmulp
and
test
add
jb
jle
fbstp
sbb
and
das
mov
mov
fucompp
mov
nop
shrb
mov
cmp
and
add
dec
in
or
ja
lods
dec
mov
bound
mov
mov
ror
push
sbb
push
sub
das
xchg
xchg
cmp
mov
imul
popf
outsl
mov
int
sbb
push
scas
in
out
movsl
adc
xchg
sbb
xor
inc
sbb
dec
cli
mov
lock
mov
mov
sub
jo
cmp
subl
nop
push
dec
data16
push
out
add
xor
mov
inc
ficomps
jbe
out
call
dec
lods
ljmp
jno
adc
sub
cmp
cmp
lods
sbbl
jl
pop
jl
test
fcomps
pusha
mov
xchg
mov
pusha
sbb
insl
aaa
mov
imul
cmp
push
and
add
test
test
push
push
xchg
add
dec
jbe
inc
loopne
pushf
inc
lret
xor
scas
es
movups
xchg
inc
jo
sahf
mov
dec
and
cmp
mov
or
lret
dec
xchg
ljmp
imul
ret
aas
sbb
fcmovbe
fwait
bound
in
insb
stos
push
mov
pop
mov
mov
imul
dec
push
sbb
aam
cmp
mov
xchg
jg
sub
push
cltd
push
repnz
add
cmp
mov
jnp
pop
in
xchg
lods
lret
test
test
inc
inc
into
dec
mov
and
push
xor
sub
xor
test
aaa
mov
jle
cmp
mov
ret
lods
ljmp
xor
bound
arpl
mov
in
and
hlt
push
jle
jp
jl
cmp
xchg
push
enter
stos
in
in
mov
stc
sarl
aaa
cld
add
out
orb
or
aad
loopne
sub
push
cmp
sbb
and
sub
scas
mov
adc
imul
xor
jl
xor
mov
push
push
dec
xor
cwtl
cmp
lcall
inc
test
cmpsb
xor
mov
pop
ss
dec
sub
and
outsb
stc
mov
in
test
cltd
cmc
cmpsl
lock
add
xchg
cltd
je
xor
xor
adc
cli
mov
fs
loope
sub
fwait
sub
cmp
and
push
cltd
pop
ja
dec
and
loope
xchg
sahf
pushf
les
daa
adc
xchg
scas
out
test
sub
mov
sub
lods
addr16
pop
daa
jp
xchg
mov
icebp
mov
es
stc
xchg
loopne
fcmovnbe
push
insl
dec
xchg
out
test
push
sub
jle
xor
in
aas
cmpsb
cmp
popa
sub
sahf
lcall
mov
add
data16
jno
add
jg
add
add
fsubl
xor
popa
dec
pop
mov
mov
loope
adc
mov
adc
repz
bound
inc
sbb
add
jno
or
jno
mov
push
lcall
outsb
lods
mov
mov
dec
popf
pop
stos
incb
aad
movsb
jmp
add
mov
mov
push
adc
push
je
gs
mov
sub
dec
add
rorl
push
stos
test
icebp
inc
sbb
sahf
push
xor
jo
movsb
pushl
out
inc
fnstsw
mov
jmp
orb
and
inc
lods
push
popa
hlt
cmp
lcall
and
imul
sbb
add
mov
cmc
adc
jne
jecxz
mov
imul
inc
and
xchg
dec
push
xchg
xor
das
jg
sub
add
inc
sbb
xchg
data16
push
push
pop
xchg
orb
mov
ds
and
push
add
jg
and
aad
jns
cld
out
cvtps2pd
mov
push
xlat
dec
fcoms
scas
cmp
add
pop
xchg
ret
ficompl
xor
push
mov
and
inc
push
call
jnp
repnz
cmpsl
adc
arpl
lock
jae
sbb
push
gs
js
inc
imul
popf
rorl
push
cld
repnz
cmp
sub
jnp
jnp
scas
sbb
pop
push
cltd
pop
cli
loopne
imul
xlat
repz
and
jle
adc
mov
sbb
mov
adc
jne
addr16
pop
pop
pop
repz
push
mov
repz
cpuid
stos
cmp
out
nop
jo
loopne
sub
in
and
lahf
and
push
or
push
je
cmp
fsubl
popa
dec
inc
adc
mov
or
push
cmp
sub
fidivl
jge
insb
lods
js
jne
insl
add
mov
and
adc
xchg
aaa
mov
inc
out
xchg
push
sub
popf
inc
test
cld
je
cmp
shr
mov
std
rclb
jmp
push
insb
jp
rcrl
jnp
sub
xlat
mov
and
stos
in
cmp
push
aam
pop
jae
sub
dec
cmp
test
cmp
movsl
jno
add
add
stos
add
adc
jo
pop
addb
cmpsb
jne
sbb
jno
mov
int
fstpt
test
loope
mov
cmp
jl
inc
fiadds
sahf
out
in
rorb
mov
inc
sub
mov
mov
subl
rorl
cmp
out
cli
jbe
sub
xor
hlt
pop
arpl
cmp
rcrl
rol
imul
fbld
lea
pop
push
lcall
in
test
mov
pop
or
out
jae
sbb
lds
pop
repnz
xor
cmp
out
or
xor
pop
jae
add
jnp
movsl
xchg
sbb
ljmp
and
jo
aas
lret
or
setne
xchg
lahf
movsl
add
add
cld
lcall
psubb
movl
and
xor
leave
pusha
jge
xor
insl
sahf
out
in
mov
inc
jb
std
btr
jle
call
clc
sahf
loope
and
add
mov
push
dec
test
dec
inc
and
and
dec
lcall
enter
out
xor
mov
pusha
fcomps
mov
icebp
lods
mov
sti
into
outsb
insl
shrl
push
lret
insb
jmp
or
mov
test
sub
pop
scas
daa
movsb
push
in
jmp
xor
lea
ret
dec
inc
mov
aas
cmp
aas
sbb
popl
sub
or
xchg
cmp
popl
movsl
enter
fisubl
fstl
xchg
lret
sti
mov
sahf
aad
les
sub
inc
mov
movsb
cmp
icebp
ret
or
test
insl
shl
in
or
and
push
cmp
cmpsl
xor
sub
pop
call
inc
repnz
push
cmpsl
stos
or
jb
dec
lea
daa
sbb
jae
iret
scas
movl
sub
stos
jns
and
xor
ja
stos
inc
mov
es
lods
enter
jbe
mov
scas
cmp
pop
cmpsl
mov
test
ja
sahf
sub
out
mov
aas
jge
out
mov
sub
adc
int3
cmpsb
das
xor
sub
pop
pop
sub
add
mov
push
or
xchg
add
push
test
decb
and
sub
mov
pop
idiv
mov
das
jp
mov
mov
xchg
out
pop
pop
mov
xor
sbb
xor
scas
mov
adc
int
pushf
inc
mov
push
pop
jne
outsl
loop
xchg
add
stos
insl
ds
leave
mov
pop
out
xchg
cmp
aad
insl
in
push
mov
fisubrl
addl
cmp
out
xchg
pop
incl
xor
or
jb
daa
mov
cmp
pop
out
xor
sub
ss
scas
sbb
aam
and
mov
shr
push
insb
cmp
cwtl
hlt
and
out
popa
cvtps2pd
jne
imul
in
ljmp
mov
ss
sarb
mov
and
sbb
daa
mov
mov
insl
mov
fcomp
in
psubd
sti
pop
push
pop
lret
fdiv
js
mov
stos
sub
ja
clc
test
mov
fldl
rcrl
xchg
cmpsb
pop
and
and
stos
ret
or
in
lret
pop
pop
and
xchg
lcall
iret
fistl
mov
lds
cmp
inc
scas
sbb
cmp
mov
sbb
push
mov
pop
push
out
das
push
imul
test
push
jbe
mov
jp
and
xor
pop
lds
sub
test
push
imul
imul
add
pop
sub
or
lret
xchg
add
xlat
test
push
ret
imull
xchg
or
je
enter
inc
jmp
adc
outsl
ret
xchg
mov
push
push
pop
jp
lret
sti
push
pop
cmp
dec
lods
imull
ret
sub
shl
fmull
shrb
adc
cmp
push
jno
sbbb
sub
pop
adc
xorb
adc
cmp
mov
add
testb
movsb
cmp
sbb
sbb
xchg
pushw
cmp
cmp
mov
mov
int3
dec
in
outsl
adc
adc
imul
stos
and
xlat
sub
nop
inc
mov
push
mov
cli
jmp
pop
or
hlt
mov
fbld
xchg
clc
and
mov
inc
pop
add
js
sub
mov
add
pop
sbbl
test
shll
cmp
imul
add
ljmp
xor
xchg
sbbl
int3
fadds
mov
push
mov
dec
loope
gs
ret
call
pop
pop
adc
movsl
add
cli
push
addr16
xchg
daa
divl
cmp
xor
iret
jmp
loopne
lods
pop
icebp
push
frstor
pop
lods
xchg
mov
enter
ret
push
xchg
pop
xor
test
push
insl
push
je
push
gs
out
mov
mov
mov
add
mov
xor
sti
jmp
or
xorl
lret
test
into
cmc
adc
push
sbb
fldenv
scas
lcall
movsl
pushf
lds
fwait
and
addr16
in
shrb
push
jmp
mov
adc
stos
leave
and
push
hlt
mov
imul
adc
push
mov
cmp
sti
sbb
xor
pop
outsb
add
lods
out
mov
mov
ret
pop
mov
cs
loope
push
cmpsl
push
je
dec
pop
hlt
lea
dec
daa
jnp
jae
xor
sub
dec
pop
arpl
mov
and
or
push
mov
aas
push
pop
cmc
push
ljmp
jno
das
and
or
mov
xchg
es
rol
cmp
add
pusha
negl
nop
cwtl
insb
dec
add
loope
mov
fldl
cmpsb
out
lcall
outsl
xchg
cwtl
test
nop
xchg
dec
test
xor
sarb
in
mov
xchg
cs
or
cmc
xchg
scas
push
add
fwait
xor
pop
icebp
lea
in
mov
cld
cmpsl
jbe
push
inc
xchg
dec
sub
daa
popf
jp
dec
pusha
xor
rorl
inc
popa
cmp
out
inc
loope
push
sub
fnstcw
cmpsb
mov
cmp
imul
jns
and
fsubrl
push
pop
jmp
jnp
scas
add
dec
mov
sub
sbb
inc
addl
scas
xor
sbb
sub
outsb
add
push
push
push
call
cltd
xor
inc
faddp
adc
ljmp
imul
mov
roll
mov
mov
iret
mov
subl
lds
cmpb
pop
test
call
xlat
add
test
inc
fsubrs
popa
pop
in
push
outsl
movsl
or
pop
jle
or
push
xchg
sub
xchg
jle
push
shlb
and
xchg
mov
jge
xor
imul
out
aad
aas
cli
cmpl
or
push
test
out
pop
jp
mov
jp
xchg
cmp
in
pop
shrl
ret
add
mov
or
or
pop
js
add
push
xor
scas
push
cmc
js
add
aam
jle
xor
dec
subb
imul
icebp
mov
das
mov
sti
add
push
xchg
movsl
sbb
mov
and
dec
inc
fstpt
xor
xor
sub
repnz
popa
add
xor
daa
cmp
bnd
or
lock
mov
bound
mov
lret
testl
xor
loop
lods
bndstx
notb
fucom
push
les
push
lret
movsl
lods
xchg
pusha
xlat
test
inc
cmp
je
adc
je
lods
inc
out
sbb
insl
adc
aad
fistl
push
cmpsl
daa
jl
aas
add
div
or
mov
gs
push
negl
lods
mov
outsl
push
adc
mov
imul
pop
mov
lods
insb
sub
cltd
pop
repnz
loopne
movsb
add
popa
xor
gs
and
mov
xchg
je
mov
push
cs
mov
int3
dec
sbb
repz
mov
inc
out
pop
cwtl
das
mov
cmp
popf
imul
dec
dec
jge
lods
adc
in
scas
cld
mov
and
inc
ficoml
add
orl
popa
mov
xchg
xor
scas
fwait
and
int3
popa
negl
xor
arpl
aad
or
call
mov
les
or
rclb
lds
dec
mov
aaa
push
or
dec
inc
mov
rorb
pop
test
lea
scas
cs
repnz
or
pop
ds
and
sbb
inc
fnsave
sbb
push
iret
mov
jge
inc
data16
and
cmp
dec
cmp
cltd
inc
call
jae,pt
outsb
and
inc
call
cmp
dec
data16
xor
add
sbb
loopne
jmp
shrb
out
jb
ljmp
movsb
pop
stos
or
mov
popl
dec
jg
std
mov
xor
cld
lds
push
aam
xor
adc
mov
std
xor
cmp
cmpsb
pop
scas
xchg
dec
dec
in
mov
out
mov
sbbl
cmp
and
stos
lds
xchg
mov
mov
ss
addr16
xchg
ss
shlb
jae
push
lea
mov
addr16
jmp
or
or
or
fimull
jnp
or
es
mov
inc
jmp
push
jne
sti
pop
xor
cmpb
pop
cmpsb
ret
cmp
mov
dec
insb
mov
test
movsl
dec
and
iret
or
ret
mov
arpl
rorl
mov
inc
pop
int
mov
mov
cmp
in
call
push
mov
sbb
inc
jmp
fsubr
mov
addr16
mov
dec
dec
out
and
jle
push
inc
jbe
dec
jbe
sub
cld
cli
sbb
inc
xchg
mov
cld
cmp
test
loopne
int3
and
xor
in
popf
mov
mov
pop
imul
inc
mov
sbb
aas
xchg
mov
push
pop
xor
mov
or
pop
addr16
arpl
jg
shrl
cwtl
cmc
subl
mov
push
daa
into
fdivp
mov
cli
es
in
sub
pop
sbb
test
add
clc
js
xor
addr16
add
lock
outsl
ss
repz
sbbb
data16
push
xor
jge
cmpsl
into
loop
cld
xchg
mov
popa
adc
iret
adc
jo
in
loopne
lds
push
test
xorl
and
bound
mov
into
and
cmpsl
ret
aas
and
enter
push
jae
out
repz
adc
test
xchg
leave
je
fimuls
sbb
jle
cmpsl
cmp
ljmp
and
push
mov
dec
or
cmpsb
cmp
jbe
movb
push
pusha
sub
add
aaa
jmp
imul
imul
fwait
mov
add
rol
imul
ret
push
push
ljmp
call
ret
repz
aad
popf
fmul
mov
jle
push
dec
in
mov
mov
shrl
inc
or
inc
fnstcw
sbb
shl
xchg
sahf
mov
outsb
cmp
mov
mov
es
and
int3
or
js
sub
mov
mov
jne
and
pop
lock
xlat
push
in
xor
adc
pop
add
movb
xor
dec
mov
int3
xchg
mov
inc
lds
repnz
gs
push
jmp
xchg
enter
imul
cwtl
sbb
xor
ret
in
addr16
mov
mov
dec
pop
mov
dec
inc
in
nop
sub
js
call
ret
rcl
xchg
gs
clc
pop
sbbb
icebp
cs
imul
scas
clc
cwtl
test
clc
dec
in
push
aas
sub
cmp
or
adc
ret
inc
test
jbe
mov
mov
ja
aam
cli
insl
add
pop
pop
shl
enter
xor
dec
data16
enter
pop
fidivl
adc
pop
sbb
push
sbb
jge
idivb
push
jb
fistpl
rcl
cld
cmpb
test
mov
inc
xchg
mov
rorl
stos
aas
cld
ds
lret
cmp
imul
test
fsts
mov
shlb
or
and
inc
roll
push
xor
addb
fchs
xor
add
dec
pop
pop
and
fsubrl
xor
mov
in
sub
xlat
jne
mov
outsb
sub
pop
add
jb
xor
or
sbb
mov
push
hlt
mov
mov
ss
adc
dec
rcll
rolb
jp
mov
rcrl
fnstenv
jbe
iret
cld
addl
lahf
in
mov
inc
out
insb
add
sub
movzbl
in
push
mov
jb
aas
adc
or
sub
add
out
mov
mov
sbb
aaa
inc
in
sbb
lcall
xchg
insb
decl
xchg
xor
cmpsl
mov
aaa
pop
jg
push
fldcw
cmpsb
or
enter
mov
xor
fimuls
mov
xchg
push
mov
pushf
sbb
inc
push
push
jecxz
addr16
int3
cmc
icebp
mov
out
mov
int3
xchg
pop
icebp
bound
jg
sahf
xchg
les
adc
ficompl
lahf
xchg
mov
movsb
jmp
addl
xor
xchg
lock
rolb
fs
es
lcall
mov
push
inc
call
adc
sub
mov
jne
push
add
dec
sub
sbb
lcall
mov
mov
and
inc
xor
scas
mov
and
dec
add
in
jge
mov
sub
repnz
xchg
mov
jp
cmpsl
popf
xor
push
inc
aaa
lds
push
call
mov
sub
sub
ret
scas
adc
jns
xor
ss
and
aam
and
inc
mov
inc
cmp
add
cwtl
and
jae
test
mov
sbb
movsl
insb
fsubl
inc
pop
js
or
xor
outsb
cmp
xlat
fwait
xchg
outsl
jg
mov
and
loop
push
cmp
sahf
adc
pop
dec
mov
and
imul
adc
sahf
pop
pop
mov
insl
loope
pop
das
aaa
and
imul
stc
jnp
addr16
bound
jnp
sub
or
loopne
and
dec
xchg
jle
cmp
ljmp
jmp
lea
xchg
mov
lahf
mov
dec
mov
rclb
daa
out
fwait
xor
and
mov
push
xlat
fiadds
and
push
xchg
push
stos
inc
sahf
mov
cld
loop
fwait
mov
lcall
or
lret
pop
lock
mov
fxch
mov
fsubrs
les
mov
xor
and
dec
sahf
mov
sbb
int
stos
cmp
add
dec
lea
les
xor
imul
lcall
enter
enter
push
cmp
gs
icebp
mov
cmpl
mov
aaa
inc
adcb
inc
mov
and
jnp
add
sbbb
scas
adc
push
jno
sub
sub
mov
scas
sbb
enter
cmpl
xchg
test
movsl
mov
idivl
fadd
in
pop
push
rcrl
fs
cmp
sub
jecxz
ret
lods
inc
ds
bound
das
cmc
xchg
mov
add
dec
out
dec
jp
xor
xlat
xchg
add
and
inc
cmp
scas
sub
jmp
sbb
push
jo
mov
or
stos
les
cwtl
or
imul
stos
movsb
mov
in
and
into
mov
pop
add
and
jae,pn
jnp
push
push
fimull
in
icebp
fbstp
ja
pop
xchg
mov
aam
adc
mov
xor
xchg
xchg
add
inc
inc
pushl
out
sahf
pop
pop
adc
xor
std
add
mov
ret
adc
push
lret
pop
cmpsb
rcr
jno
das
mov
dec
sub
dec
cli
xchg
jp
loop
adc
movsb
pop
notl
scas
mov
std
mov
popa
jp
or
cmp
shll
fisubl
or
xchg
sub
sub
loope
pop
mov
shr
dec
rorb
add
jmp
adc
sbb
jno
int
mov
andl
push
xor
cld
push
dec
mov
aaa
fwait
cld
xor
sbb
xchg
loope
pop
inc
movsb
sbb
inc
sub
mov
popf
adc
xor
mov
aaa
js
xlat
leave
pusha
inc
jb
mov
push
xchg
je
pop
push
jle
addr16
out
and
mov
add
movsb
dec
jecxz
into
pop
sbb
imulb
sub
push
dec
ret
mov
jbe
addb
cmpsl
xor
sub
out
fisubrl
ds
mov
jle
inc
fwait
arpl
out
test
jp
cmpsl
jecxz
or
js
daa
mov
cmp
jp
inc
pushf
or
lcall
ss
push
outsb
sbb
add
xchg
repnz
movsl
cmp
ret
cwtl
pop
xchg
ret
loope
test
jo
in
test
mov
fs
nop
addr16
ret
icebp
outsl
mov
repz
jg
mov
iret
ret
outsb
rcrl
cmc
mov
and
mov
jge
or
jns
and
jae
fnstcw
fldcw
sbb
inc
fnstcw
jns
inc
dec
adc
movsl
dec
add
mov
jcxz
xchg
xchg
aas
push
mov
mov
push
pop
insl
or
outsb
lcall
mov
ss
cmp
les
push
mov
jmp
andl
add
xor
shr
mov
out
jns
shl
aaa
lcall
xor
cltd
fwait
pop
lret
xor
push
xchg
cmp
movsb
push
cltd
sub
dec
and
sub
pop
pop
or
mov
or
iret
jb
das
xchg
mov
jl
hlt
adc
lahf
dec
pop
iret
adc
pop
dec
rcrb
jmp
out
dec
add
jae
jmp
loopne
test
mov
jecxz
xchg
jne
ret
xlat
shll
filds
ss
imulb
or
ret
mov
out
test
mov
insb
xor
out
cmc
mov
inc
fcoml
ljmp
lods
clc
mov
fucomip
les
int3
xchg
hlt
imull
leave
jle
pop
sbb
imul
outsb
jp
repnz
sub
pushf
add
mov
and
rolb
test
lret
mov
adc
mov
xor
push
aas
and
mov
cld
xchg
pop
xor
lcall
sbb
adc
lret
sti
pop
inc
mov
mov
sub
add
stos
xor
dec
bound
cmp
cmc
jnp
insb
fidivl
mov
les
mov
add
sbb
mov
lcall
mov
cmp
inc
and
test
jp
lock
mov
popf
std
scas
and
add
jg
sbb
jbe
out
sub
outsl
push
push
add
sbb
inc
in
cmp
ss
inc
sub
ss
addr16
inc
xor
cmp
jo
jmp
mov
out
xchg
or
xorl
mov
ror
fucom
sub
stos
add
lcall
cmc
stos
shrl
pop
lock
mov
dec
sub
xchg
lock
or
ret
cmpsb
dec
push
pop
xor
in
sub
add
cwtl
sub
add
out
and
mov
leave
jp
xchg
icebp
cltd
cli
scas
jnp
sbb
aaa
dec
cmpl
les
xor
pushf
loop
dec
fldt
pop
hlt
cmp
scas
mov
lock
mov
inc
cmp
insl
cmpsb
out
in
sbb
outsb
xchg
lds
cmpsb
cmp
adc
mov
push
mov
je
sarb
pushf
mov
aaa
sbb
mov
jge
xchg
rolb
in
aad
mov
dec
mov
push
aad
les
mov
inc
icebp
cmp
jns
xor
mov
mov
inc
mov
ret
push
jp
and
in
xlat
push
xor
test
js
test
lret
outsb
jae
mov
sub
push
adc
sbb
jae
addl
ds
adc
xchg
ds
rolb
push
js
scas
lcall
jns
sti
out
sbb
xchg
arpl
imul
jmp
sbb
pop
lret
dec
fsubr
jecxz
dec
mov
add
xchg
in
lods
mov
subl
les
cmc
push
lcall
shl
insb
fmuls
dec
adc
mov
lods
fucomp
xor
xchg
adc
inc
cmc
mov
pop
sub
pop
pop
pop
sub
scas
inc
pop
jp
add
cmp
lods
pop
pop
ficomps
push
imul
imul
dec
pusha
insl
inc
mov
ret
daa
mov
xchg
and
fcoml
es
shrb
or
adc
les
sahf
into
mov
movsb
mov
faddl
rorb
cmc
push
sahf
sbb
dec
test
adc
add
iret
call
pop
xchg
ljmp
sub
pushf
mov
mov
leave
ret
cmpsl
loopne
hlt
sahf
or
sahf
scas
cli
mov
ja
arpl
mov
sub
test
lahf
xor
dec
cmc
and
inc
sahf
mov
push
jmp
incl
testb
xchg
mov
fsubrs
push
add
cmp
xchg
xor
mov
sbb
xchg
jnp
add
push
sbb
mov
pop
sub
pushf
scas
fisttpl
std
leave
fiadds
addb
arpl
sub
and
xor
adc
or
mov
into
fnsave
les
cmc
div
fcoml
push
sub
fistl
inc
jg
bound
dec
sbbb
mov
pop
mov
adc
mul
mov
jle
jmp
cmp
cs
out
cmpsl
ret
decb
sbb
sub
inc
cltd
and
fidivrl
fwait
push
test
lods
push
dec
outsb
arpl
mov
lcall
xor
lods
jmp
mov
jmp
cmp
add
mov
cli
adc
sub
test
dec
fs
lods
lock
sbb
cmpsb
sbb
pop
xor
mov
mov
outsb
popa
add
imul
inc
mov
test
insl
mov
bound
ljmp
test
lret
cltd
xor
xor
outsb
fiaddl
inc
add
lret
aaa
jo
js
call
sbb
out
cmp
pop
xor
sub
outsl
push
cmp
out
and
adc
mov
cmp
ret
or
call
adc
rcl
mov
and
dec
jecxz
pop
arpl
push
outsb
cmc
lea
into
fs
dec
mov
lahf
xor
jmp
mov
test
sahf
jne
cltd
add
cmp
mov
in
push
sub
xchg
mov
lcall
movsb
addb
inc
loop
cmc
lea
aad
out
into
fs
push
fwait
fs
xor
aaa
out
mov
push
les
loop
jne
jp
lods
xchg
out
dec
in
push
daa
or
shlb
outsl
out
push
movsb
mov
loopne
xchg
fiaddl
dec
out
into
fwait
mov
js
jno
xchg
cmp
iret
dec
aaa
pop
jle
lds
in
popf
jo
push
not
cmp
mov
push
jge
dec
sub
les
mov
lahf
faddp
pop
inc
cmp
sub
loopne
adc
shl
xor
aas
enter
int
mov
pop
jecxz
sub
in
add
add
and
mov
loop
jmp
mov
iret
stos
xchg
loope
test
or
das
daa
lret
in
shrl
jmp
sub
les
xchg
sub
push
add
xor
mov
push
jmp
xchg
insl
stos
inc
mov
fdivs
ljmp
adc
add
divl
jg
outsl
out
adcl
sbb
pop
out
or
sub
mov
inc
mov
jp
adc
pop
xchg
stos
pop
lods
pop
dec
cld
xor
and
adc
mov
dec
fiaddl
push
add
repz
daa
adcb
adc
sub
test
out
outsl
cmp
push
out
xor
pop
mov
aad
push
dec
roll
das
sbb
and
jmp
jl
mov
shrb
mov
in
out
push
mov
lds
push
sbb
insb
sbb
push
imul
xchg
addr16
sbb
xor
cmp
lcall
std
jno
pop
mov
sbb
dec
add
mov
cmp
xor
movsl
mov
mov
dec
pop
movzwl
add
ret
imul
and
xor
inc
addb
scas
shl
pop
add
mov
cli
in
jg
aas
faddl
dec
mov
add
push
lods
shrb
scas
inc
ficoms
jbe
xor
add
lea
xchg
inc
mov
adc
arpl
sbb
add
loope
mov
ss
pop
push
jno
inc
xchg
cmp
aam
and
fwait
jns
dec
das
stos
inc
pusha
popa
fildl
push
add
and
data16
or
popl
jge
mov
cli
hlt
cmp
pop
jo
add
mov
mov
scas
mov
fsubrs
rcrl
sub
out
adc
or
iret
pushf
scas
xchg
xor
pop
out
pop
lods
ljmp
pushf
outsl
mov
fsubl
rolb
inc
xor
out
xchg
aad
in
in
test
das
mov
xor
push
sub
mov
push
mov
addl
dec
stos
mov
fstl
add
fwait
add
mov
mov
iret
fs
mov
adc
cwtl
das
pushf
mov
mov
gs
insw
xchg
push
mov
add
hlt
mov
loop
stos
adc
sbb
gs
jmp
xchg
push
rcrb
mov
and
shrl
push
xor
push
in
xor
jmp
xor
lea
mov
shrl
out
xor
jne
mov
adc
shrl
add
sbb
icebp
cmp
aad
imul
inc
dec
mov
icebp
jnp
inc
push
pop
movsl
xchg
pop
and
lea
dec
add
xchg
pop
lcall
cwtl
mov
rorl
dec
mov
lret
testb
mov
rcrl
enter
push
pop
icebp
inc
pushf
ds
inc
lods
jns
push
fwait
fs
inc
je
or
sbb
lahf
fsubs
mov
mov
out
sub
dec
add
xor
push
jb
lret
sub
jmp
ljmp
movsb
stc
mov
xchg
pop
xchg
and
fcmove
mov
jmp
cld
outsb
jo
xor
jge
cltd
push
out
test
pushf
int
mov
xchg
faddp
push
fsts
lahf
xchg
jb
and
loop
sti
cmp
sub
aam
lock
shlb
icebp
sbb
aam
std
nop
fisubrl
push
jl
rorb
xor
jl
mov
lock
movl
xor
jl
bnd
pop
adc
ss
into
dec
pushf
fbstp
jo
push
jecxz
add
mov
outsl
lds
sbb
mov
lods
es
clc
or
dec
cmpsb
ljmp
sahf
sbb
mov
inc
jecxz
rorb
icebp
aad
imul
pop
repz
mov
dec
cmp
push
mov
mov
dec
mulb
inc
cmpb
insl
pop
daa
inc
fnsave
jmp
aaa
adc
cwtl
das
cmp
xlat
mov
sbb
dec
rolb
pop
or
les
loope
pop
arpl
lret
out
mov
push
dec
pusha
clc
es
add
dec
jg
xchg
mov
xchg
lea
mov
push
xor
cld
push
fbld
popf
push
push
enter
xchg
mov
lret
mov
dec
jle
repnz
sahf
or
pop
sahf
pop
mov
and
call
shlb
lahf
in
jns
mov
push
in
lds
mov
aaa
jbe
test
mov
inc
xor
mov
pop
push
fs
rcrb
pop
lret
lret
adc
imul
jo
sahf
out
mov
icebp
jae
and
lahf
mov
rol
push
popa
mov
and
mov
mov
mov
mov
push
jne
mov
dec
cmpsl
rorb
jmp
xchg
sbb
cmp
pop
xor
in
ds
jge
insl
xor
into
enter
jb
jae
jle
push
pop
scas
test
dec
pushf
push
js
mov
sbb
movsl
dec
push
imul
test
imulb
mov
outsb
jle
push
xchg
outsl
mov
dec
inc
fidivrs
push
mov
imul
push
ret
jns
fsubl
stc
imul
aaa
das
pop
notl
mov
addl
ss
add
or
into
int3
mov
add
xchg
pusha
lahf
hlt
insb
mov
in
mov
mov
lcall
loop
fs
push
adc
add
push
cmp
imul
lcall
cmp
out
cld
sub
ja
dec
pop
sub
mov
and
lea
pop
nop
cmp
sbb
ficoms
xchg
add
imul
aas
fistpl
xlat
push
adc
mov
pop
mov
add
lods
test
push
add
pusha
mov
rcrl
add
add
mov
jo
nop
daa
inc
xchg
fwait
xchg
ret
sub
stc
dec
adc
nop
push
mov
aam
outsb
jecxz
out
or
lret
mov
and
dec
push
cmp
das
cmp
jb
ret
daa
int3
dec
push
sbb
push
lock
sbbl
cmp
jge
repnz
ss
or
in
ss
jmp
in
pop
aaa
jbe
and
sbb
int3
fdivl
mov
ss
xchg
stos
sub
aad
jne
add
ss
cld
outsb
fmulp
imul
ret
mov
or
jecxz
or
repnz
andb
pop
out
jge
dec
jo
loop
sbb
ret
xor
sbb
push
mov
push
cwtl
imul
add
rorl
add
sbb
push
inc
mov
seta
jns
in
xchg
adc
cmp
sub
pop
cmp
sbb
inc
mov
mov
and
mov
push
idivl
push
test
idiv
inc
ss
lods
icebp
jo
pop
mov
sbb
xchg
xorl
mov
stos
dec
stos
sahf
lods
cmc
andb
jp
lea
dec
fldcw
push
dec
or
sti
andl
out
bound
rcll
lods
jecxz
mov
push
mov
inc
push
push
add
mov
pop
dec
push
mov
divl
add
incb
xchg
js
sti
push
stos
test
mov
push
dec
es
and
jmp
jp
insb
lods
sbb
or
out
adc
push
gs
aaa
cli
and
and
leave
cmpsb
sbb
mov
pop
mov
aad
insl
addb
add
xchg
cwtl
and
mov
insb
jle
shlb
lds
jnp
pop
int3
shl
jp
mov
xor
jbe
xlat
cmp
sbb
insl
mov
inc
adc
leave
je
push
jmp
in
dec
ds
shr
sub
lods
dec
or
pop
xor
pop
and
mov
and
xchg
sub
dec
add
cld
sbb
mov
xchg
fldenv
out
arpl
pop
loop
push
aas
iret
data16
inc
inc
push
dec
jbe
jecxz
outsb
popl
test
lods
xchg
sbb
je
mov
inc
mov
aas
mov
push
sub
lretw
dec
fdivp
mov
aaa
outsl
pop
lock
jl
jge
push
dec
fimull
inc
push
adc
push
fdivrp
inc
mov
adc
and
rolb
fsubrs
ljmp
or
int
sbb
lret
repnz
ror
fnsave
add
rolb
lcall
pop
mov
popf
cmp
push
js
cmpsl
jns
stos
rorl
sbb
test
and
dec
fistps
mov
push
frstor
add
mov
or
mov
xor
adc
or
sub
xor
dec
int
pusha
dec
loopne
mov
xor
xor
out
in
ja
xor
cmp
imul
xchg
push
std
je
popa
xchg
cmpsb
pop
or
mov
sub
outsb
adc
pop
add
add
xchg
mov
push
out
jae
push
fidivs
push
cmpl
mov
cmp
insl
rcrl
sub
into
cmc
sbb
jbe
cmp
adc
mov
sbb
inc
sbb
mov
and
xchg
mov
andb
dec
pop
les
adc
pop
jmp
mov
jecxz
fistpll
mov
orl
sahf
sbb
and
pop
mov
mov
sub
sbbl
ror
leave
dec
loope
sbb
mov
fstpl
mov
movsb
daa
dec
dec
loop
inc
sub
add
stos
mov
lea
xchg
add
adc
stos
fidivl
xor
or
xor
pop
push
pop
or
dec
filds
sbb
enter
lcall
jmp
xchg
pop
jb
mov
nop
adc
test
loop
xlat
jnp
xor
jge
xchg
mov
add
or
imul
xor
jae
jle
push
in
leave
lahf
loope
test
mov
addr16
arpl
or
cmp
lea
jle
test
sbb
test
in
iret
pusha
mov
xor
mov
ror
push
aad
push
push
cmp
mov
arpl
mov
xchg
inc
popa
hlt
or
adc
adc
dec
ret
adc
popf
les
icebp
data16
test
rol
or
div
shrl
idivb
lret
sub
daa
mov
outsl
xchg
lds
test
xchg
aad
lcall
aam
jns
sbb
xchg
dec
loopne
repz
and
int
or
jno
jg
out
sbb
jnp
nop
hlt
mov
incl
fadds
js
enter
insb
cmpsb
sbb
bnd
fsubs
pushf
insl
mov
cmp
pop
cltd
arpl
push
pop
push
aam
cli
push
jbe
ss
xchg
push
clc
iret
xchg
jnp
mov
pcmpgtw
loope
jbe
jbe
andl
repz
cmp
popf
popf
push
adc
outsb
scas
enter
jmp
shl
pop
stos
sbbb
mov
xchg
inc
sbbl
xchg
push
mov
push
mov
jo
fst
sub
pop
in
mov
cmp
sbb
insb
lcall
das
xchg
jge
jmp
cmp
sbb
mov
pop
daa
sbb
pop
jne
sarb
pusha
gs
jge
lret
cmpsb
sub
fists
call
sbb
dec
jp
and
adc
dec
outsb
adc
inc
lea
sti
into
and
cmp
movl
add
mov
cmpsb
lret
mulb
test
mov
cmp
or
and
rcl
scas
adc
and
mov
pop
mov
xor
dec
mov
call
js
dec
out
pop
dec
aam
orl
repnz
enter
mov
shll
lods
cmc
cwtl
pop
jecxz
cld
dec
in
lret
inc
popa
add
push
mov
insb
pop
inc
mov
or
daa
fwait
in
inc
cmp
pop
imul
jmp
fucomp
scas
ret
mov
cmp
dec
mov
adc
inc
jg
cmp
pop
xchg
jns
shrl
mov
mov
cmp
outsl
push
scas
divps
xlat
and
out
fimuls
inc
cmp
cwtl
add
lcall
cwtl
js
lods
repz
cmp
inc
mov
adc
test
mov
lcall
mov
data16
orl
sbb
les
pop
add
stos
je
xchg
ror
sub
xchg
insb
decl
test
mov
push
out
inc
repz
adc
daa
outsb
int3
add
testb
sub
imul
lods
outsb
sub
and
mov
push
xor
pop
fucomip
inc
add
and
mov
outsl
jge
xchg
cmp
int
jo
fcoms
sbb
push
sub
sub
jmp
inc
sbb
mov
pop
ret
jecxz
ret
pop
jno
je
cmpsb
and
movl
lret
cmp
inc
push
xchg
jb
mov
js
out
int3
sub
cwtl
std
cltd
dec
add
sti
sub
mov
pop
sub
popa
pop
inc
lods
mov
loope
dec
in
add
addr16
shl
stos
fldt
add
movsb
inc
and
xchg
sahf
imulb
jae
test
sub
in
xor
retw
loope
dec
inc
jp
push
mov
mov
inc
pop
or
dec
xor
and
cld
mov
mov
jmp
mov
and
jns
mov
sbb
insl
lret
or
cmp
push
cwtl
sbb
daa
mov
and
hlt
ds
or
out
push
out
pop
mov
sarl
in
mov
in
mov
pop
pop
xor
shrl
xchg
mov
mov
add
push
jp
mov
int3
push
sbb
lds
or
cli
pop
daa
mov
lea
test
shrl
xchg
or
mov
fimull
fwait
test
mov
in
or
stos
daa
daa
call
mov
cmp
inc
inc
xchg
jo
xor
enter
lahf
stos
pop
dec
sti
inc
dec
push
lcall
sahf
std
lods
mov
scas
inc
ds
xor
movsb
nop
jg
jno
movsl
pop
lahf
and
out
inc
aad
cmpsl
pop
push
inc
lds
push
cmp
push
mov
loopne
push
push
pop
into
aas
push
call
cmp
addr16
into
inc
movsb
js
pop
add
ffreep
filds
popa
aam
mov
xor
sbbl
lods
daa
pop
xchg
add
stc
xor
jno
pop
xor
in
out
mov
and
test
dec
cmpsl
rolb
dec
loopne
jle
xchg
mov
stos
int3
lret
cmp
cmp
enter
lods
jmp
inc
or
push
lods
jnp
cltd
mov
aas
add
in
push
inc
mov
mov
add
jmp
xchg
shrb
lods
xor
aas
push
sub
std
push
imul
test
cmpsb
lock
xor
pop
and
movsl
shrb
mov
ficomps
scas
pop
mov
adc
cmp
cwtl
popa
pop
push
add
jecxz
fcoms
clc
push
es
push
aaa
jecxz
lock
cmp
adc
dec
into
leave
and
and
xor
jmp
xor
pop
push
into
fnsave
xor
rorb
and
jae
cmp
xchg
aaa
mov
clc
lods
push
mov
dec
movsb
in
push
test
lahf
lret
xor
daa
adc
lods
and
sbb
pop
in
pop
sub
cmc
dec
test
xchg
je
mov
push
popf
jg
orb
and
mov
je
push
mov
lahf
loop
movsb
adc
fwait
mull
push
fnstenv
enter
repnz
jg
push
loopew
lcall
push
sub
mov
dec
lds
sbb
insb
and
add
adc
je
cs
push
popf
mov
repnz
lods
or
testb
pushfw
add
jbe
pop
sahf
clc
and
pop
sahf
subb
aam
pop
sbb
xchg
pop
in
aad
lods
add
icebp
jns
and
fisubrl
fdivs
cld
xchg
sti
xchg
adc
int
loop
jg
ss
lods
rolb
icebp
add
xor
stc
fists
xchg
outsl
sub
pop
mov
xor
adc
enter
jle
jne
or
jbe
insb
iret
sbb
aam
sub
in
imul
pop
jae
in
mov
add
pushf
scas
scas
push
add
mov
push
scas
jno
mov
lock
jns
push
jbe
pop
pushf
sahf
stos
gs
cwtl
jle
pop
pop
out
lcall
xor
subb
jbe
and
push
ljmp
shl
push
mov
cmp
cmp
shl
pop
lcall
sbb
cmp
jp
cltd
push
fucomip
popf
push
insl
test
mov
mov
push
mov
cmp
into
dec
loopne
mov
sbb
mov
pop
mov
movsb
hlt
in
adc
test
xor
test
cmp
xor
cmp
les
loopne
sub
dec
mov
fwait
ret
idiv
inc
sub
dec
adc
out
pop
push
push
or
inc
imulb
sti
nop
ja
pushf
jno
aam
ljmp
adc
lret
adc
mov
sub
divps
pop
fmul
out
lret
scas
push
cmp
inc
pop
clc
out
in
adc
adc
mov
xchg
insl
push
mov
and
cwtl
push
xchg
lret
fisubs
ja
ljmp
push
cli
push
xor
add
ljmp
sub
dec
stos
dec
cmp
jl
cmp
mov
outsb
sbb
push
add
add
push
ss
dec
sbb
dec
and
xchg
push
pop
jmp
adc
push
xor
imul
loop
dec
add
cmpsb
sub
fidivrs
lods
and
pushf
push
leave
adcb
xorb
cmp
xlat
mov
jle
scas
lock
pop
xchg
xor
into
mov
push
push
jne
jo
sub
mov
loop
mov
pop
enter
ret
orb
mov
cmp
sub
pop
iret
sub
or
push
push
xor
adc
pop
lahf
pop
shr
aam
and
mov
inc
fwait
dec
sub
cli
mov
sbb
fiadds
shrb
loopne
stos
orb
inc
shlb
jmp
stos
out
jle
es
or
faddl
aam
xlat
add
adc
ret
cld
insl
shlb
andb
push
shr
push
and
ss
in
addr16
aad
insb
cli
mov
psubw
popf
xor
add
loope
ret
lcall
xchg
mov
and
add
jno
shrl
lcall
xchg
movsl
ljmp
out
mov
dec
int3
adc
push
dec
mov
fbstp
cmpsb
mov
clc
sub
dec
fstps
sti
fcoms
dec
cmp
jmp
fucomi
lods
push
addl
fisubrl
imul
sub
mov
cmpsb
cmp
out
arpl
loopne
stos
outsb
jg
push
popf
mov
leave
inc
das
jl
push
rcll
sub
and
push
adc
leave
test
icebp
leave
test
mov
pop
decl
mov
mov
popa
and
sbbb
sbb
push
jecxz
lock
mov
subl
mov
stc
or
arpl
movsl
dec
aam
ret
xchg
sub
clc
sub
mov
xchg
xlat
repz
push
ret
fcoms
rorl
aaa
jl
jge
add
mov
push
fnstsw
cmovle
ret
xor
mov
imul
fistl
mov
mov
adc
cmp
mov
mov
xchg
outsb
sbb
mov
mov
sbb
roll
jecxz
push
bound
icebp
cmpsl
fisubl
psubusb
lock
movsl
stos
sub
imul
ret
mov
push
xlat
xor
movsl
js
lret
inc
in
cmp
push
pop
int3
int
jp
fnstenv
in
aaa
int
push
sbb
iret
pusha
imul
mov
pop
jmp
dec
and
jmp
push
sti
xor
push
mov
ss
lret
daa
inc
std
and
jmp
jne
popf
je
and
rol
test
mov
rcrl
shrb
push
cli
inc
mov
inc
sbb
inc
mov
add
mov
cltd
or
jg
fadd
adc
mov
mov
dec
pop
dec
mov
sub
test
aad
ss
sbb
clc
or
popa
stc
or
pushf
cmp
test
mov
loopne
add
cli
jne
stos
cmpsl
cmp
in
outsb
jl
jno
push
jns
xchg
test
sbb
jnp
pop
scas
mov
jb
enter
shlb
mov
mov
ret
daa
pop
push
pusha
mov
icebp
cmp
push
mov
nop
xchg
mov
or
gs
jg
adc
std
into
mov
js
adc
nop
sahf
hlt
push
imul
dec
cmp
movsb
jmp
adc
sbb
sti
mov
adc
jnp
mov
hlt
cmp
pop
xor
adc
int3
mov
daa
movsl
xor
ljmp
xor
xor
mov
cmp
push
jo
sbb
and
xchg
mov
and
jno
xchg
push
cmp
adc
adc
cli
pushf
lahf
sub
pop
cltd
sub
mov
repnz
xchg
mov
cmp
inc
push
pushf
call
mov
fst
dec
addr16
cli
cmp
cmp
fcompl
dec
insl
fs
adc
jb
pop
xchg
and
out
fst
popf
push
pop
cmp
pop
cmp
mov
push
cs
sbb
icebp
enter
and
dec
ret
push
in
cltd
pop
mov
pop
ret
inc
jecxz
cmp
dec
jne
cmp
test
movsl
cmp
push
dec
lret
stos
or
push
xor
mov
stos
add
ret
xor
fdivrs
sub
or
mov
pop
mov
push
xchg
pushf
and
pop
inc
scas
cmp
mov
sar
lods
daa
outsl
ja
push
lods
xor
fdivrs
xor
out
adc
push
bound
pop
cmc
ljmp
mov
xacquire
push
xchg
addr16
inc
mov
enter
mov
ret
adc
jno
and
mov
scas
jb
and
mov
mov
xchg
sub
mov
mov
mull
enter
dec
das
cmc
dec
mov
push
aam
cmpsl
add
fldlg2
pop
loopne
insl
shlb
pop
or
out
dec
pop
cmp
call
xchg
mov
mov
inc
dec
loope
movsl
pop
imul
dec
cld
cmp
lret
mov
repz
fidivl
jmp
loopne
pop
sbb
es
fcomip
out
shl
lock
mov
or
das
mov
push
sub
imul
movsb
push
fistps
lock
mov
add
shlb
mov
xor
jno
dec
dec
push
xchg
imul
inc
jecxz
jbe
sub
xchg
sbb
daa
pusha
hlt
mov
push
xor
dec
push
mov
mov
inc
cltd
fildll
dec
xor
xchg
loopne
inc
addr16
inc
clc
xchg
std
popa
jae
jle
ds
xchg
lahf
mov
arpl
fisubrs
out
fisttpll
sub
sbbl
mov
insl
add
je
sub
sbbl
cmpsb
lcall
mov
repz
lods
iret
movl
pop
notb
iret
xchg
int
daa
mov
cld
mov
repz
dec
out
sub
push
mov
push
into
gs
fdivl
stos
in
stos
test
adc
xchg
test
mov
cmp
imul
std
sbb
int3
jg
shrb
or
xor
cmp
ret
mov
mov
dec
xor
mov
les
insl
cld
adc
sbb
test
testl
lock
inc
and
or
sbb
outsb
mov
cmc
mov
push
aas
lods
inc
mov
out
test
ror
int3
pop
incb
cwtl
lock
mov
mov
mov
popa
test
push
enter
lock
xor
push
push
call
fmull
inc
push
xor
fs
push
sbb
push
out
mov
scas
jle
test
lcall
pop
push
push
jmp
rol
fbstp
pop
pop
cmc
mov
xchg
dec
scas
jl
faddp
jp
imul
loop
and
xorl
xchg
jae
or
fdivp
shlb
push
add
jbe
push
mov
mov
push
loop
fdivl
sub
std
pop
cmp
xchg
push
test
scas
mov
xchg
jmp
and
xchg
push
rclb
sbb
movsl
mov
or
xlat
jb
push
and
std
push
daa
nop
daa
pop
jbe
sbb
aad
jno
aaa
movsb
cmp
clc
pop
mov
pop
mov
leave
sbb
sti
cmp
cmp
dec
pop
pop
mov
leave
ret
xchg
xor
enter
dec
jmp
popa
clc
mov
jo
sbb
ret
mov
inc
add
enter
out
test
pop
or
mov
pop
icebp
sub
adc
js
jge
sbb
loopne
ja
xchg
ret
pop
ss
xchg
push
lea
push
jne
adc
enter
lret
add
aas
ss
push
mov
jmpw
lock
popa
clc
pop
and
jg
scas
je
andb
movsl
cmp
xor
bound
pop
testb
imul
pop
lock
stos
push
movsl
fdivl
adc
jnp
les
jbe
cmpsl
inc
shlb
jl
pop
mov
test
fsubrl
xchg
lahf
inc
mov
test
mov
mov
xlat
outsb
mov
pop
icebp
out
scas
inc
fwait
ds
fildll
in
mov
stc
out
adc
jo
in
test
push
push
lods
jae
inc
fidivrs
inc
fcoms
nop
and
fistpl
les
xchg
ret
pop
enter
ficoml
mov
inc
inc
xlat
jne
cmp
fcoms
das
xor
outsb
add
cmpb
push
lahf
xlat
mov
mov
fistpl
adc
mov
xor
mov
jb
mov
and
loopne
add
es
pop
xchg
sub
sarl
scas
loop
loopne
jg
inc
scas
add
ja
jge
test
adc
pop
gs
xor
out
loop
jle
pop
scas
pop
adc
scas
out
push
push
jle
jge
push
jno
aaa
jge
iret
scas
in
out
pop
jle
dec
scas
add
aam
mov
mov
and
addr16
cmc
add
mov
outsl
mov
sahf
std
and
das
mov
cld
mov
imul
add
sbb
push
stc
sub
pusha
test
push
inc
xlat
xchg
add
enter
sub
popa
mov
xor
cs
jl
iret
cld
xchg
sub
pop
push
in
nop
in
repnz
mov
mov
insb
ret
in
xlat
pop
jns
pop
lods
add
xor
xchg
jle
cmp
jp
sbb
jg
ljmp
jl
stc
mov
mov
fwait
cmc
xchg
sub
xchg
xor
jecxz
mov
testb
push
push
fwait
loop
sbb
mov
movsl
mov
addr16
loope
dec
adc
jle
mov
insl
out
test
je
sti
test
adc
std
test
jp
and
dec
jnp
adc
sub
scas
pop
xor
imul
mov
rorl
out
test
test
pop
mov
imul
aam
mov
mov
push
outsl
xchg
sahf
and
mov
outsl
push
jmp
mov
stos
mov
outsl
je
sahf
mov
mov
jb
iret
mov
outsl
mov
sahf
push
fwait
xor
xchg
adc
sub
push
jle
mov
sbb
scas
inc
dec
mov
xor
roll
cltd
add
mov
mov
shl
sub
and
out
popf
xor
test
cltd
mov
sbb
stos
int
std
cli
iret
xchg
sub
and
rclb
leave
pusha
dec
jno
fisubs
gs
hlt
mov
mov
das
inc
outsl
rcl
arpl
jae
mov
insl
out
add
cmp
in
push
inc
cmp
xchg
jl
mov
lcall
sbb
xor
mov
push
or
cmp
ja
xor
add
and
xchg
sub
cs
scas
inc
and
pop
cmp
loop
or
xacquire
and
push
movsl
inc
in
test
int
hlt
std
xchg
sub
xor
clc
daa
fstl
repnz
outsb
add
and
cltd
add
pop
xor
jmp
jne
imul
push
inc
xlat
mov
jb
jmp
xor
outsl
test
mov
and
xchg
aaa
dec
loope
mov
mov
insb
add
js
shlb
mov
xor
xchg
xchg
sub
icebp
push
jp
test
leave
pusha
dec
mov
iret
data16
hlt
call
test
inc
jo
je
adcb
cwtl
hlt
mov
pop
enter
push
out
stos
cli
xchg
loopne
xchg
xor
icebp
mov
mov
add
sub
imul
pop
mov
mov
dec
daa
jnp
jns
dec
aad
jns
aad
cld
cltd
aad
lret
pushf
dec
in
add
fwait
cmp
outsl
mov
mov
in
ds
pop
adc
xor
jo
out
test
mov
cmp
pop
pop
jbe
sub
call
in
and
lods
add
sbb
xrelease
mov
jle
jae
jbe
cli
push
sbb
clc
dec
cmc
mov
aas
dec
fwait
xchg
sub
imul
mov
mov
jo
adc
fwait
pop
not
arpl
jge
cmc
iret
and
inc
fidivrl
mov
aas
lcall
xchg
inc
int
jb
xlat
outsb
sarl
icebp
mov
daa
in
test
jnp
mov
mov
sub
rcrb
jnp
jge
cmp
out
sub
pop
pusha
repnz
and
outsl
push
repz
test
xchg
jnp
scas
dec
sbb
push
mov
ret
mov
iret
and
test
xorl
jno
out
scas
shll
mov
enter
aaa
fnstcw
mov
js
inc
enter
test
sub
xchg
xor
cwtl
adcb
repz
adc
neg
dec
mov
or
jmp
sub
push
imul
ds
push
pop
mov
test
dec
mov
lock
fs
push
mov
or
pop
repnz
add
dec
inc
inc
jbe
scas
bound
cwtl
aas
icebp
sbb
nop
cmp
and
adcl
fnsave
pop
jno
ds
fiadds
pushf
push
adc
stos
pop
mov
movb
arpl
pusha
ret
frstor
xor
adc
sbb
movsb
lret
lock
addr16
xchg
leave
loopne
sti
add
sbbl
inc
mov
ret
call
mov
pop
rcl
adc
inc
ret
in
inc
ror
ds
movsl
sub
add
adc
movsl
jge
jbe
xchg
fisubs
mov
orl
or
loop
xorb
mov
icebp
notl
adc
cmpsb
add
sub
sbb
insb
jmp
dec
dec
lds
pop
aas
fbld
jne
fisttps
fiadds
jle
int
jnp
pop
outsb
sbb
mov
push
jmp
jnp
nop
or
add
hlt
push
pushl
cmpsb
rcll
faddl
push
jne
sbb
outsb
iret
out
fsubl
je
ja
test
clc
cwtl
inc
lret
mov
setb
int
xor
push
fnstsw
xchg
sub
popf
mov
cmpsl
jmp
hlt
fcoml
or
sub
leave
sbb
sbb
lcall
fs
nop
or
repnz
movsb
stos
mov
jle
add
cmp
jb
sub
mov
call
xchg
neg
push
mov
cmc
test
hlt
add
out
cmp
out
filds
jmp
lahf
ror
fstps
rcrb
sub
clc
cld
nop
lods
or
shl
outsl
push
shll
or
vpcmpgtb
sbb
xchg
ja
mov
loopne
ret
ficoms
xchg
sub
std
xor
sbb
or
or
add
es
push
iret
mov
push
push
jmp
xlat
leave
push
lods
inc
jle
pop
ret
iret
cs
jb
ss
jmp
add
adc
adc
and
in
sbb
mov
hlt
push
push
mov
ja
aas
rorb
mov
pop
mov
mov
xlat
pop
jl
cmpsb
fistps
loope
pop
icebp
and
inc
ret
mov
out
aam
mov
xchg
movsb
sbb
incl
test
ljmp
and
cmp
or
adc
ss
xchg
cmp
sbb
stos
jge
mov
sbb
ret
inc
enter
scas
fdivrl
scas
and
popa
sbbl
cmp
dec
add
insl
mov
adc
push
cwtl
xor
mov
adc
dec
pushf
jbe
sub
push
pop
or
pop
testl
xrelease
add
mov
jb
insb
add
push
repz
lret
dec
jnp
and
jae
mov
fxch
lcall
in
jae
lahf
movsb
adc
sub
ds
sbb
xor
adc
repnz
leave
cwtl
aas
or
fsubrs
sbb
aam
or
cld
xor
xchg
ss
cmp
fcoml
xchg
adc
sbb
stos
gs
out
mov
or
out
jns
and
inc
shll
sbb
daa
ds
jns
shlb
or
or
sub
call
sti
ljmp
cmp
pop
adc
push
insb
mov
add
inc
popf
adc
pop
add
je
mov
je
dec
lods
cmp
sub
xchg
inc
cvtps2pi
or
mov
xor
push
sub
and
add
out
pop
xchg
pusha
test
in
gs
jmp
add
jp
inc
rorl
stos
pop
inc
cmp
push
push
aad
inc
add
pusha
bound
dec
xor
ljmp
or
je
push
mov
pop
mov
sub
jp
in
pop
mov
xchg
or
pop
repz
mov
pop
pop
popl
insb
sub
pop
ss
lret
stos
jo
add
sahf
arpl
mov
pop
int
int
pop
outsl
mov
or
dec
shlb
icebp
push
inc
or
pop
xchg
pop
lods
jo
xchg
test
push
lea
je
test
jmp
xor
and
mov
shrb
jne
test
jne
mov
testl
movsl
ret
cmp
fsubp
mov
icebp
iret
ret
pop
lock
dec
std
es
les
rclb
xchg
sub
stos
cmp
fcmovnbe
loope
in
decb
into
mov
push
mov
push
adc
fsubl
ljmp
ss
hlt
adc
ret
sbb
std
repnz
adc
xchg
xchg
lret
ljmp
pop
pushf
sub
cmp
push
jecxz
mov
ret
shrb
mov
push
sub
incb
mov
cmp
lds
mov
stc
stc
xor
pop
pop
int
xlat
into
push
aad
das
icebp
push
cmpsb
pop
add
jne
jbe
dec
negl
push
push
jmp
nop
mov
pushf
cmp
mov
push
movsb
je
bound
rorl
mov
mov
repz
jo
popa
shrb
sub
loope
in
cmp
mov
pop
int3
push
arpl
push
xor
inc
ficoml
ret
cmp
inc
aam
inc
out
xor
xchg
jnp
stos
gs
mov
popl
pop
mov
add
imul
pop
jno
mov
jns
lret
mov
clc
sub
incb
or
jo
loopne
jbe
and
cmc
jecxz
dec
mov
fnstcw
add
pop
sarl
movsl
cmc
fldl
or
mov
mov
cli
push
call
push
loope
movsl
mov
cmp
add
pop
aam
vpcomuw
out
movsb
or
push
pushf
je
pop
imul
test
mull
out
xchg
arpl
push
clc
inc
mov
pushl
into
fstps
scas
je
add
cmp
sbb
inc
adc
xchg
mov
mov
cmp
or
and
xor
or
jg
pop
shr
xor
sar
xchg
jge
push
pop
lret
scas
in
daa
push
sbb
lea
in
pop
mov
xor
scas
or
push
adc
add
fcoms
std
das
pop
aad
pop
loop
in
cmpl
das
lret
fnsave
iret
inc
mov
and
pop
cmp
xchg
sub
lds
adc
xchg
or
enter
adcl
jmp
fnstenv
lods
enter
ljmp
pop
loop
mov
adc
mov
data16
movsb
fsubs
cmc
cmp
or
push
pop
adc
add
or
std
hlt
das
in
dec
insl
cwtl
pop
scas
movl
pop
lret
inc
mov
out
test
mov
sbb
lds
adc
cmpsb
filds
fcmovne
es
mov
and
add
int
xor
and
sbb
ds
fdivrs
roll
lret
test
sbb
jge
or
mov
cmc
sbb
roll
scas
fdivl
jo
out
cmp
pop
rcr
pop
adc
stos
shrl
ret
mov
out
add
sub
std
xchg
dec
out
inc
outsl
aam
shr
mov
mov
mov
data16
roll
js
arpl
ds
mov
add
flds
adc
xchg
lcall
or
movsb
mov
out
es
fdivs
lock
aad
mov
sbb
inc
icebp
push
or
push
into
fs
js
je
pop
cmp
ret
pop
mov
fistpl
mov
addr16
imul
in
mov
or
into
and
xchg
addr16
xor
dec
xchg
jle
sub
mov
mov
lea
outsb
add
dec
push
fimull
das
pop
int3
ja
scas
inc
stos
cwtl
xor
and
popa
pop
mov
lods
fwait
xchg
sbb
insl
cwtl
pop
jl
movsl
inc
ja
jl
push
push
outsb
inc
popl
xchg
or
pushf
nop
add
mov
pop
xor
insb
js
pusha
stos
and
mov
test
out
bound
repz
xchg
das
and
jl
aam
cwtl
inc
and
pop
push
lods
inc
fwait
xorb
lea
xchg
addl
push
rcrb
pop
rcrb
insl
push
dec
sub
bound
insl
dec
sub
add
inc
cmp
lods
push
adc
jnp
pop
insl
mov
bound
cs
dec
or
push
dec
repnz
pop
push
leave
pusha
lcall
lea
jle
out
inc
aam
cmpsb
mov
sarb
iret
sub
adc
scas
arpl
or
adc
push
cli
lahf
xor
or
adc
add
out
test
sub
and
hlt
fldl
pop
int3
xlat
fnstcw
lock
and
out
fdivs
std
insl
lds
cmc
xor
mov
sti
ss
icebp
dec
loopne
pop
movsb
pop
add
push
fldl
fucomi
and
es
jne
lea
rcll
xchg
mov
sarl
fsubp
sbb
shlb
add
add
leave
and
and
push
fsubrs
movsl
inc
int3
sbb
aaa
outsl
xor
xor
and
cmp
jbe
jp
mov
push
mov
pop
sti
fs
data16
mov
sbb
push
call
or
mov
jae
mov
cli
and
xchg
inc
adc
cmp
popa
ss
xchg
xchg
push
pop
out
test
push
jp
push
dec
inc
out
pop
dec
fidivs
andb
mov
mov
fbstp
daa
mov
inc
fstpt
add
aaa
jl
int
gs
daa
xchg
xor
icebp
cwtl
mov
pop
add
mov
hlt
push
jne
push
xor
push
inc
js
inc
cmp
in
xor
scas
test
cmp
into
mov
out
imul
inc
mov
cmpsl
cmp
push
pop
cmpsb
addr16
pop
movb
sub
mov
out
cmp
idiv
int
inc
popf
xchg
leave
cmpsl
fstpl
adcb
int
mov
or
dec
mov
pop
lods
push
into
xor
xor
cmc
mov
pop
adc
mov
mov
pop
lock
dec
or
jle
insb
mov
pop
lock
sub
dec
push
pop
std
mov
imul
imul
adc
movsl
cmp
dec
add
cmp
cli
xor
xor
pop
xchg
cmp
or
push
and
push
xchg
cmp
adc
cmpsl
mov
pop
mov
fimuls
lret
jae
aad
cmp
fidivrl
pusha
cmpsl
mov
sarb
into
sbb
test
aad
out
jns
fdivp
xor
out
sub
mov
out
stos
loop
sbb
mov
sbb
cld
js
fnstsw
dec
ror
and
xor
fistl
int
sbb
push
in
pop
fbstp
fsubr
xor
push
std
dec
ret
flds
cmp
rorb
lock
or
dec
movsb
into
dec
and
add
int3
push
jg
mov
mov
pop
ja
mov
divb
mov
shrl
mov
ja
pop
shrl
das
loope
push
mov
mov
xchg
mov
ljmp
pop
jg
push
cmp
imul
cmp
sub
fs
stos
pop
ds
xor
icebp
pop
mov
xor
in
sti
jmp
add
out
sbb
lods
outsl
ss
insl
mov
xchg
popf
test
sbbb
bound
xor
jno
cmp
and
push
lea
aas
xor
mov
push
xor
lahf
xor
push
shrb
sub
daa
push
sub
loope
dec
dec
rcll
pop
lret
pop
test
decb
nop
mov
cltd
mov
movsl
and
push
arpl
sub
out
and
and
and
enter
scas
inc
xor
lds
push
cmc
lret
push
mov
js
jb
lds
arpl
cmp
push
lret
stos
dec
add
mov
dec
sbb
insb
imul
pop
and
dec
loop
pop
xchg
jnp
xor
sub
cmpsb
pop
cwtl
jl
flds
sarl
ss
addr16
rcll
xchg
xor
rorl
ljmp
xor
pop
xchg
out
imul
into
mov
cli
test
mov
stc
mov
mov
push
jae
lods
push
fwait
shrl
jno
repz
roll
sub
bound
pusha
data16
in
sub
lcall
arpl
shrl
loop
sbb
inc
sub
inc
outsl
push
aaa
in
cltd
das
xchg
adc
sub
loope
xchg
mov
lock
loopne
cltd
push
fcompl
cmp
and
in
push
sub
daa
mov
lret
inc
fsubp
cmp
xlat
mov
push
add
ret
pop
lds
subl
jl
je
rorl
sub
mov
aaa
or
xchg
inc
and
loopne
shll
aaa
outsl
adc
popf
xchg
dec
lds
cmp
push
jbe
sbb
insb
and
add
mov
clc
and
add
jo
enter
pop
push
dec
mov
scas
jno
adc
and
push
mov
xor
push
ljmp
inc
cwtl
and
aaa
popl
repz
orl
sub
repz
mov
mov
cmc
push
rcr
push
mov
mov
cli
dec
rcr
mov
shl
stos
add
mov
into
pop
sub
xchg
sbb
stos
mov
out
stc
pop
repz
outsb
popf
fwait
subb
sbb
mov
adc
pop
lock
xor
sub
xchg
aaa
xchg
lea
stc
xor
sti
ficoms
ret
xchg
in
out
jecxz
push
sbb
or
mov
or
sti
cmp
lret
inc
xchg
sub
or
push
adc
sbb
sub
arpl
dec
bound
mov
dec
in
xorl
pop
lret
mov
call
cmp
cmc
sarb
lock
dec
mov
lahf
or
ljmp
stos
xchg
and
cmp
jae
shlb
test
mov
cmpl
repnz
xchg
vmovsldup
iret
mov
arpl
es
jmp
mov
lret
lea
es
into
jbe
out
mov
testb
sbb
jbe
xlat
cmp
rorl
xor
sarb
push
rcll
popf
shrl
mov
mov
cmc
xchg
daa
and
insb
aad
jno
or
cmp
push
mov
leave
and
fwait
xor
adc
xor
pop
outsb
mov
pushf
add
xor
push
out
rcll
xor
jl
mov
or
mov
jno
jnp
inc
xor
adc
stc
nop
xor
inc
shrl
paddw
std
push
movsl
mov
imull
mov
inc
lds
push
ret
push
int
lods
or
xor
inc
shlb
inc
jo
adc
out
inc
mov
imul
es
xchg
mov
std
push
ret
lahf
mov
pop
scas
aam
cmp
leave
filds
fisubrl
pop
mov
xchg
jnp
pushl
stc
mov
jmp
cmpb
mov
stc
dec
cld
pop
pusha
mov
xlat
outsb
push
sahf
ret
jns
cs
mov
push
adc
jg
xchg
dec
fdivrs
nop
mov
inc
int3
pop
mov
sbb
mov
repz
jg
les
es
adc
fldcw
shlb
adc
cmp
or
clc
jb
out
mov
or
adc
aaa
sub
dec
fbstp
mov
fdivl
lcall
insb
lcall
push
js
les
dec
filds
sbb
repnz
fnstenv
adc
aaa
test
fidivrl
orl
and
lods
inc
push
int3
ss
mov
inc
mov
xchg
adc
pop
cltd
xchg
es
or
xchg
xchg
jo
movl
lds
rcrb
sub
std
mov
jle
nop
mov
test
lods
mov
lock
mov
jecxz
int
nop
icebp
sbbl
repz
addr16
outsl
mov
dec
dec
ret
inc
fisubrs
jae
in
arpl
or
scas
pop
jge
pop
loop
fs
ficoml
adc
jbe
pushf
cmp
cli
and
jle
aad
ficoml
ret
repz
push
lret
mov
out
add
mov
hlt
out
pop
lock
cmc
or
mov
fisttpl
test
arpl
or
and
out
add
repz
in
add
add
ja
std
das
sarb
and
aad
daa
out
aad
jae
leave
push
or
mov
ds
popa
nop
jl
es
lods
jo
jle
cmp
pushf
mov
inc
dec
arpl
jbe
shrb
sbbl
add
pop
adc
sarl
xchg
mov
les
ficoml
repz
lock
inc
mov
or
jmp
mov
frstor
ljmp
lret
test
jmp
test
jbe
insl
lcall
jne
xchg
test
add
pushf
jnp
fldcw
sub
iret
mov
fimull
out
test
dec
mov
or
dec
jp
dec
loop
pop
xor
inc
mov
daa
repz
or
cmp
pop
scas
test
mov
inc
in
into
movsb
insl
mov
xchg
sub
nop
addb
jle
push
or
jg
pop
icebp
mov
out
mov
dec
clc
lret
sbb
mov
jbe
mov
and
or
sub
mov
adc
sub
lret
mov
test
ja
inc
mov
xor
cmp
sbb
repz
and
les
addr16
inc
inc
lds
test
call
mov
pop
out
xor
ljmp
and
imul
repz
fdivs
lods
inc
cmp
pop
cmp
into
test
and
lea
montmul
cmpsb
subl
pushf
jnp
push
mov
mov
add
or
fdivl
enter
cs
cmp
adc
push
jmp
ljmp
adc
cmp
and
push
mov
cs
scas
pop
call
sub
jle
insl
inc
shll
xchg
xchg
lock
cmpsb
lahf
adc
xchg
sbb
lcall
in
dec
sbb
icebp
outsb
jno
cmp
or
rorl
sbb
mov
shrl
shrl
add
cmpb
fs
sub
dec
cwtl
js
and
gs
pushl
adc
es
and
push
mov
int
inc
mov
sti
ret
into
sbb
mov
push
jmp
mov
std
push
jmp
std
xor
cmp
sbb
cmp
fldt
in
jo
jmp
dec
sbb
cmp
testb
sbb
daa
fwait
icebp
sub
jbe
push
mov
dec
xchg
loopne,pt
repz
inc
leave
test
aam
mov
or
gs
rcr
out
mov
lret
mov
jnp
loopne
xchg
mov
sbb
xor
ds
push
dec
mov
loopne
sbb
out
xor
inc
cmpsb
in
hlt
inc
int
push
mov
cmpsl
push
orl
sub
out
xorb
insb
scas
mov
test
mov
pop
fistl
pop
fcomps
pop
lds
in
fcompl
gs
fimull
lahf
or
es
add
inc
shll
add
lret
sti
jbe
xor
dec
leave
mov
cmp
ret
hlt
outsl
stc
nop
mov
ret
repz
ss
mov
push
jmp
or
jb
ljmp
sub
movsl
cmp
pop
xsha1
cmpsb
mov
aas
loope
fidivl
sub
ja
or
xchg
rorb
movsl
roll
jno
sub
adc
dec
loop
in
push
pop
xchg
stc
adc
cmp
add
xor
ret
jno
pop
pop
testb
jge
fnstsw
push
lods
push
fwait
sti
ss
lret
push
in
mov
dec
loopne
test
cmpsb
cmp
xor
push
fs
xchg
pop
lock
test
push
lods
imul
xor
mov
fcoml
xchg
cmp
mov
sbb
mov
cmp
and
enter
mov
push
scas
push
dec
mov
jg
xor
jg
int3
and
xor
inc
cltd
cmp
pop
and
xchg
cmp
pop
sub
mov
scas
jl
popf
xchg
xor
test
subl
scas
clc
in
jp
rorl
add
insb
pop
dec
xor
push
mov
fdivs
mov
fcoml
jae
dec
cmpsb
fldln2
xlat
out
xor
sub
shl
ljmp
lods
subl
or
jae
ss
sbb
xor
clc
inc
fcmovb
mov
jmp
lods
mov
jl
xchg
cmp
lret
int3
push
or
xchg
vmovapd
es
addr16
sbb
ja
pop
lret
aaa
in
xor
cmp
icebp
sub
ljmp
and
pop
ljmp
fwait
shlb
push
into
jae
int
insb
popf
icebp
sub
push
int3
sbb
adc
lret
or
sub
enter
aad
pop
test
xchg
mov
lret
push
and
inc
fdivrs
fwait
cmp
shll
push
addr16
fnsave
cmp
jle
dec
or
push
cmpl
push
fisubs
cwtl
lock
test
test
sbb
subb
movl
and
cwtl
clc
loope
mov
or
cmpsb
lcall
mov
cmp
and
pop
sbb
and
cmp
divb
xor
ret
test
or
imul
pop
clc
pusha
or
jb
push
and
ss
xchg
inc
cmp
push
xor
fwait
mov
sub
fs
fstp
shrb
ljmp
imul
and
mov
cmp
pop
imulb
mov
push
and
cmp
clc
mov
dec
adc
xor
add
mov
push
mov
out
vmread
ds
xchg
mov
jmp
enter
icebp
mov
in
push
pop
sti
outsb
jnp
cmp
pop
push
rcrb
dec
inc
and
xor
pop
lahf
jns
sub
or
std
sbb
xor
inc
repz
out
ror
inc
xorb
adc
add
push
cmp
and
imul
movsl
push
jmp
stos
divl
xor
out
lods
xchg
cmpsl
rolb
std
test
adc
out
out
jg
sbb
imul
dec
or
int3
jge
dec
in
push
fsubrs
jle
pop
jo
dec
loope
adc
addl
xor
push
mov
ss
push
xor
cmp
push
movsl
in
fmull
int
cmp
ljmp
sbb
sbbb
add
sti
add
or
adc
clc
jne
or
sahf
mov
sbb
mov
mov
add
test
addr16
xor
sbbl
icebp
pop
adc
pop
jo
pop
push
imul
inc
rcll
fmull
xchg
inc
and
push
add
cmp
out
and
xchg
shrb
mov
cmpsl
popa
cmc
cld
nop
mov
in
into
lcall
jne
push
sub
cmp
shll
popa
cmc
sti
wbinvd
int
out
pop
sbb
pop
add
xor
orl
popf
xchg
cmp
adc
pop
scas
in
insb
lret
ss
jo
mov
test
mov
cwtl
sub
jne
or
test
ret
add
or
xor
rorb
mov
and
insb
nop
loope
dec
ret
andb
lret
pop
add
mov
es
lock
cld
fs
loop
ja
test
mov
shrl
add
imul
pop
les
arpl
xchg
pushf
cmp
push
mov
stos
addr16
cwtl
jecxz
mov
pop
arpl
insl
rorl
pop
push
mov
add
lock
fimull
fistl
out
mov
lods
icebp
pop
bound
test
test
jns
adc
mov
stos
push
sti
fcomp
icebp
pop
hlt
or
jmp
mov
cmc
pop
lods
xor
loop
mov
lea
push
js
out
jb
insl
ja
add
movsl
sub
stos
push
incb
roll
icebp
pop
push
negb
mov
iret
movsl
daa
xchg
mov
lret
xchg
lahf
cmpsl
push
inc
mov
addr16
jae
mov
inc
addr16
lea
test
sarb
add
pop
push
loopne
pushf
mov
test
inc
push
shlb
into
lea
add
int3
jle
sbb
push
or
fs
mov
les
mov
add
pop
jge
mov
out
outsl
aam
pop
cld
mov
daa
mov
int
jb
push
add
imul
lock
adcl
or
push
jns
mov
jne
lret
mov
insl
add
jp
sbb
cli
fs
push
in
aad
mov
sarb
inc
adc
or
jge
adc
cli
gs
bound
cmpsb
and
enter
xorb
sbb
imul
shl
sti
pop
in
mov
mov
test
sbb
push
ret
stc
jne
enter
arpl
sti
pop
outsl
mov
mov
mov
test
stos
mov
lret
in
xchg
inc
or
outsb
in
aam
add
aaa
adc
stos
movsl
sub
dec
or
js
or
add
and
xlat
pop
xchg
aas
rorb
out
inc
int3
xchg
mov
lds
mov
adc
jecxz
push
cmpsb
xor
jnp
mov
xchg
lea
into
stos
sub
mov
cmp
lahf
lret
scas
sub
sahf
cmp
jl
stos
pop
clc
mov
mov
ret
stos
js
and
pop
rorl
mov
dec
into
push
lods
adc
lcall
dec
pop
xlat
push
lret
sub
mov
mov
test
insl
sbb
lret
add
push
fmuls
mov
mov
mov
push
mov
xchg
or
inc
lret
loopne
dec
ss
daa
mov
sub
orl
mov
or
enter
ret
dec
loopne
lret
mov
es
lods
cs
dec
push
add
push
es
orl
js
xchg
inc
into
push
daa
scas
pop
mov
fidivl
aad
jecxz
popf
jo
ret
cmc
jl
dec
adc
pop
cli
shlb
sub
sbb
push
add
push
add
lea
addr16
cmp
repz
inc
popa
pop
test
cmp
sub
mov
fcoml
xor
mov
icebp
loop
cwtl
ds
test
sub
roll
cwtl
ds
lahf
and
sub
jmp
icebp
loope
cltd
cmp
mov
add
cmp
lods
push
gs
in
lcall
push
movsl
sub
outsb
cmc
sbb
push
cmpsb
dec
dec
rdpmc
mov
inc
sbb
dec
stos
xor
sub
jbe
movsb
sbb
sbb
dec
and
mov
adc
jp
jecxz
call
cli
cmc
pop
sbb
ja
sbb
into
test
jo
aaa
mov
adc
insl
gs
cld
sbb
rcll
dec
out
jne
inc
data16
mov
lods
dec
adc
sarb
arpl
incb
icebp
leave
inc
jno
scas
sbb
push
cmpb
xchg
lock
push
cli
outsl
jecxz
mulb
mov
jb
inc
icebp
pop
xor
and
adc
sarl
jb
cmc
scas
inc
add
bnd
fisubrl
adc
xchg
cmp
mov
int3
push
cli
loope
xchg
add
add
lock
cmp
and
pop
pop
xor
ss
mov
add
mov
dec
jae
cmpsl
scas
or
adc
or
push
dec
dec
adc
cs
jb
rcrb
lods
das
insb
dec
jmp
and
lods
out
cmp
dec
mov
lahf
mov
repz
stos
outsl
ss
cmp
cmpsl
push
jle
out
mov
mov
dec
jmp
das
test
mov
mov
lret
and
xor
shlb
mov
mov
mov
jl
jno
xor
cmp
pop
pop
add
or
ret
jg
fldenv
dec
or
dec
push
jnp
mov
imul
dec
jae
pop
inc
xchg
xchg
cltd
mul
popf
popa
repnz
dec
push
cmc
add
jbe
aad
out
insl
ds
push
pop
fidivl
pop
aas
add
mov
es
lret
lods
cmpsb
xor
pop
aam
lahf
push
ret
mov
inc
mov
mov
es
outsl
cmpsl
xor
in
lret
sbb
lcall
mov
testb
sub
xor
cli
mov
jbe
jecxz
pop
mov
jge
das
aam
ljmp
lods
sub
fisubrs
fidivl
stos
mov
xchg
gs
jmp
jnp
mov
pop
xor
dec
push
push
ja
adc
cmpsb
lods
sub
es
fnstenv
adc
or
lcall
sub
popa
sub
ljmp
cmp
add
push
dec
clc
pop
decl
popa
cmc
mov
rolb
jae
or
push
xor
lcall
or
out
addb
outsl
imul
rorl
or
and
test
fcomps
cmc
adc
test
jns
and
mov
ret
sbb
je
mov
mov
test
test
mov
lret
xor
out
loope
mov
into
mov
stos
cmp
ds
arpl
adc
dec
mov
sti
xor
popa
jl
inc
scas
addb
mov
add
popf
inc
mov
int
mov
sub
mov
std
pusha
pop
pop
orl
xor
inc
pop
dec
push
pop
xchg
aas
lahf
sbb
xchg
cmp
adc
shll
sbb
inc
pop
xchg
inc
inc
fwait
cmp
iret
int
mov
adc
sarl
inc
pop
int
jo
or
pushf
jnp
iret
cmp
subl
xchg
inc
roll
add
stos
les
jge
lret
jo
nop
scas
pusha
negb
mov
orb
mov
mov
leave
clc
dec
adc
rol
and
push
pushf
sarl
dec
scas
xor
fidivs
pop
push
pop
fadds
lahf
or
mov
xor
ret
cmpsb
push
mov
mov
sub
jle
in
mov
push
sbb
pslld
jecxz
adc
leave
insb
jnp
inc
divl
mov
out
or
test
popf
out
roll
mov
mov
mov
pop
mov
mov
push
push
xchg
je
add
into
mov
push
jbe
cmc
jb
aas
cltd
xlat
jo
sti
or
cmp
fnstsw
fwait
xchg
inc
sbb
cmp
jmp
stos
aad
in
jg
out
cmp
movsl
mov
xchg
mov
ret
sbb
dec
sarb
ss
jae
es
ss
inc
shl
imul
or
repnz
and
and
lock
or
loop
and
mov
jl
adc
dec
adc
inc
xor
stos
icebp
pop
les
dec
add
push
push
int
lret
inc
bswap
fsubs
stos
adc
pop
repnz
sbb
test
aam
mov
xlat
xorb
add
loope
mov
inc
pop
push
push
add
xchg
lods
mov
jnp
adc
dec
dec
or
mov
je
lahf
pop
pushf
cmp
ret
loopne
lock
adc
mov
push
dec
jmp
pop
xchg
pop
jns
cmp
test
push
fmul
xchg
xor
and
pop
ret
fimuls
adc
push
ss
leave
fldt
inc
lea
push
jb
push
rol
imul
leave
jp
push
add
popa
sub
loope
in
sti
xor
mov
xchg
fcoms
push
into
insb
ljmp
call
loopne
mov
enter
xor
icebp
inc
sbb
stos
cwtl
dec
adc
mov
dec
adc
jmp
ljmp
loope
fdivp
mov
or
dec
in
pop
lahf
dec
adc
cltd
inc
inc
jno
loop
cltd
dec
push
jl
in
push
insb
lods
xor
test
mov
movsl
ja
mov
movsb
les
and
mov
fcompl
mov
fwait
push
inc
dec
mov
or
inc
adc
jno
jmp
ss
push
mov
mov
sti
enter
cld
gs
jmp
lcall
mov
insb
je
icebp
pop
xor
xor
xor
and
jmp
sbb
je
mov
mov
icebp
cwtd
enter
mov
adc
test
test
ret
ja
fisubs
mov
arpl
test
mov
je
out
outsb
and
xchg
jae
mov
lret
push
hlt
pusha
addr16
mov
rcrb
sbb
aam
lds
push
popa
sbb
jge
xor
lret
sti
pop
mov
mov
mov
nop
repnz
cwtl
shlb
sub
xchg
xchg
xchg
push
xor
add
lret
gs
mov
and
loope
xor
cmp
fs
cld
out
xchg
enter
pop
or
cmp
sbb
stos
xor
dec
mov
or
lea
mov
idivl
xchg
cmp
jl
mov
sti
sbb
jg
dec
dec
adc
cwtl
cmp
cmp
mov
fisubrl
mov
mov
cmp
mov
push
jmp
lods
mov
cld
sti
pop
inc
fidivl
mov
mov
cmpsb
cmp
adc
pop
cli
bound
loope
jns
or
lcall
mulb
js
adc
mov
movsb
xchg
add
xchg
mov
cmc
test
or
or
add
or
push
pop
rolb
or
popf
stos
lahf
cmp
mov
sub
shlb
cmp
fimuls
int3
pusha
cld
int
das
bound
xchg
push
mov
les
andl
xchg
aaa
dec
bound
js
mov
and
fucomp
cmp
mov
lods
fnstsw
js
js
negl
aas
push
clc
out
lret
in
xchg
clc
std
pop
mov
pop
stc
push
and
push
ret
xchg
js
loop
sbb
aad
push
fdivrs
int3
cmc
pop
xchg
inc
push
and
paddq
sub
js
sub
xor
push
cli
loopne
movsb
loope
fs
mov
xor
mov
in
jle
lahf
icebp
loopne
dec
ja
mov
mov
cwtl
mov
sub
lods
pop
add
mov
ds
repz
cmpsb
in
mov
shr
sti
mov
cwtl
and
pop
iret
in
test
push
in
testl
enter
scas
xor
stc
adc
clc
mov
xor
dec
sub
xchg
pop
inc
rep
xchg
les
add
enter
push
adc
nop
mov
pop
jp
mov
mov
mov
xchg
js
mov
mov
dec
mov
mov
sub
rcl
js
mov
in
jbe
adc
mov
sub
push
enter
cmpsb
sub
adcb
dec
adc
aam
aaa
push
movsb
ja
leave
inc
mov
push
adc
jbe
stos
ss
arpl
xchg
int
dec
adc
pusha
sbb
out
stc
sbb
out
mov
les
fsqrt
arpl
cmc
pop
jl
mov
mov
mov
sub
mov
mov
dec
or
mov
sub
push
pop
negl
jecxz
movsl
test
lcall
loopne
pop
adc
inc
pop
ljmp
cli
inc
in
mov
cmp
mov
or
pushf
les
lods
dec
hlt
dec
adc
mov
xchg
adc
pop
add
dec
push
sti
inc
jns
sbb
xchg
leave
mov
add
push
xor
js
mov
push
jmp
hlt
dec
pop
xchg
jecxz
mov
shll
xor
out
push
sbb
out
mov
mov
xor
loop
jns
pushf
dec
popa
xor
gs
aas
push
mov
xor
inc
jns
ljmp
mov
les
fmuls
lahf
push
sarl
int
fnstcw
sub
scas
mov
jge
mov
test
adc
pop
fiaddl
cltd
adc
and
jle
enter
insl
add
ljmp
fcoml
xchg
cmp
arpl
mov
out
pop
mov
adc
cmp
aaa
bound
movsl
lods
and
movsb
xor
and
mov
fdivp
push
enter
lods
mov
sub
mov
test
add
push
xor
jae
mov
dec
lret
xchg
xchg
std
pop
mov
test
rcrl
mov
and
xorl
lds
pop
sbb
jle
mov
add
pop
adc
scas
idivl
xor
push
mov
scas
xchg
cmp
pop
mov
mov
lret
mov
into
lea
pop
popf
cmp
test
ljmp
or
out
pop
and
jne
or
fwait
inc
xor
pop
hlt
cltd
mov
jmp
and
jns
shlb
jne
cmc
negb
leave
clc
bound
cmpsl
loope
call
call
js
push
push
clc
push
mov
mov
jecxz
ret
int
movsl
or
rorb
mov
stos
sub
cmp
and
out
insb
movsl
fnstcw
sarb
les
mov
pop
cltd
gs
inc
movb
cmp
mov
pop
sahf
rclb
faddl
and
les
leave
sahf
inc
jne
push
cli
cmc
push
test
addr16
aam
jbe
xor
daa
sahf
inc
mov
sahf
inc
movsl
mov
divl
dec
adc
adc
ret
cmp
sub
push
sub
mov
pop
mov
jg
sub
mov
jp
jno
sahf
aaa
or
xchg
mov
or
outsb
cmc
sti
fistpll
out
jmp
xor
and
ljmp
xor
inc
or
fnstenv
sahf
mov
adc
imul
stc
gs
cld
bound
add
test
xor
dec
sub
ret
ror
scas
sub
adc
cld
push
xchg
inc
cmp
sub
jns
into
insl
call
adc
dec
cltd
xor
sbb
add
fsubr
push
loope
sahf
sti
test
fdivl
out
popa
pop
lea
jae
adc
test
daa
test
bound
ljmp
lahf
mov
jle
out
push
lahf
jg
sbb
dec
cmp
les
ss
and
adcb
jmp
js
dec
aas
xor
mov
out
and
inc
and
lret
inc
xchg
xor
dec
movsb
sub
fwait
hlt
pop
adc
push
rolb
push
mov
movsl
popf
mov
subb
nop
jne
inc
or
fidivrl
push
js
mov
test
into
mov
cmp
enter
aam
mov
add
loop
sbb
jp
jp
jl
pop
stos
cwtl
das
fnstsw
pop
imul
mov
jge
add
xor
sbb
sub
add
sbb
fwait
inc
aas
dec
sahf
inc
icebp
das
xor
add
aaa
pushf
sbb
scas
jge
sbb
fwait
jo
mov
mov
test
mov
arpl
mov
enter
mov
mov
push
push
loopne
mov
hlt
mov
daa
stos
push
sbbl
addb
pushf
loopne
testb
and
mov
mov
paddd
cmp
mov
pop
or
sti
data16
pop
mov
cmp
fdivrs
movsb
inc
test
mov
jne
addr16
mov
mov
stos
movsl
daa
xlat
pop
js
addb
and
xchg
popf
mov
aaa
call
jo
sub
jp
jmp
mov
mov
jp
or
sub
mov
mov
hlt
add
pop
rclb
sarl
loope
push
imul
hlt
je
ljmp
insl
out
cmp
xor
inc
and
mov
clc
pop
jb
xor
shll
pop
roll
and
sbb
jae
push
mov
inc
and
into
xchg
xchg
xchg
lret
mov
shl
jb
jbe
movsl
cmp
test
movsb
xor
aaa
cmp
leave
sbb
lods
xor
addr16
in
pop
jbe
cmp
mov
rcrl
loope
mov
inc
add
pop
imul
hlt
rolb
int
out
insl
jg
inc
cmovge
stc
pop
cwtl
mov
lret
shll
pusha
out
lods
das
lcall
mov
and
mov
pusha
dec
arpl
lret
sti
pop
mov
imul
pusha
xor
mov
or
add
push
pop
movsb
sub
mov
in
rclb
push
fstl
cmp
mov
xchg
cmp
add
test
pop
push
adc
xchg
lea
mov
in
movsl
test
cld
xchg
cmp
xor
jne
rcl
jp
into
lahf
aas
jmp
dec
xchg
test
cmp
mov
pop
or
sub
add
lahf
aas
stos
push
xchg
aaa
leave
mov
jp
inc
lahf
aas
dec
jmp
imul
js
adc
js
jmp
dec
popa
cmp
cmp
or
push
inc
adc
sub
xchg
mov
cmp
mov
ret
xchg
inc
lods
mov
sahf
lahf
mov
mov
push
out
cmp
mov
push
iret
out
ficoml
cs
dec
mov
mov
out
ds
xchg
mov
add
inc
or
adc
xor
rolb
shlb
cmp
xchg
aaa
and
clc
arpl
arpl
lahf
mov
out
lret
icebp
in
pop
sbb
jnp
mov
mov
mov
outsb
add
or
sbbl
xor
inc
adc
jae
sub
cmp
xchg
insb
dec
or
jns
mov
xor
pop
mov
mov
jmp
sbb
cmp
ret
mov
loopne
cmp
ds
mov
andl
repnz
mov
imul
adc
icebp
inc
faddl
cmp
js
adc
cld
test
les
fstpt
mov
addb
aad
pusha
mov
pause
mov
adc
add
sarl
or
or
sub
test
orb
inc
or
cmp
arpl
mov
filds
jns
les
mov
lods
ss
jmp
stc
fs
mov
psrld
arpl
add
sub
xor
mov
ja
dec
adc
gs
jmp
dec
dec
adc
decb
lock
daa
fiadds
cmp
sub
push
das
loopne
cs
add
jbe
sbb
add
fwait
sbb
mov
pop
add
js
das
scas
popa
xchg
inc
or
mov
mov
pop
fidivrl
pop
rclb
adc
pop
insl
pop
mov
daa
std
ss
sub
es
xor
js
sbbb
pushf
cltd
sbb
in
insb
out
stc
jg
ss
sub
arpl
xchg
cs
fcoml
mov
aas
ljmp
adcl
out
sbb
dec
stos
xor
sub
cs
stos
flds
cld
jne
int
inc
adc
inc
xchg
or
imul
fbstp
inc
or
and
sub
xor
call
jns
ficoml
shlb
mov
jl
hlt
xchg
push
ljmp
jecxz
nop
or
adc
rcll
pop
insl
push
sub
mov
movsb
push
ljmp
jno
test
dec
adc
mov
es
stos
xchg
rcrl
push
jl
cmp
mov
xchg
sub
xor
nop
in
out
popa
xchg
pop
scas
movl
mov
mov
mov
or
inc
jg
jnp
xchg
aaa
xchg
out
loopne
test
mov
jp
pop
jne
lahf
out
sub
lcall
das
out
outsl
sahf
xor
aad
ret
mov
mov
mov
and
mov
mov
xor
sbb
dec
push
clc
pop
das
jl
leave
push
jecxz
xlat
sbb
insb
cmp
sarl
adc
xchg
fdecstp
pop
add
or
rcll
popa
xchg
jnp
in
aam
dec
push
cli
ret
cmpl
or
jbe
pop
sbb
sbb
dec
dec
insl
test
std
stos
jbe
in
mov
loope
insb
aas
popf
std
push
cmc
xchg
in
js
int3
lds
das
insl
sbb
add
ljmp
shr
mov
or
push
in
insb
cwtl
lea
add
add
loop
das
cmpsl
jecxz
jg
leave
scas
les
pop
adc
inc
filds
mov
aam
jae
stc
popa
cmp
cli
aas
sub
pushf
pop
sub
inc
pop
popa
in
sbb
dec
into
lea
and
jmp
jne
jl
enterw
dec
or
dec
loop
push
stos
aam
push
inc
pop
mov
cmpsb
mov
xor
dec
lcall
in
xchg
inc
push
js
jne
and
cwtl
aas
das
mov
pop
jl
dec
adc
jae
xchg
int
cmp
add
sub
jne
cmp
xor
xchg
rcrb
aad
sbb
adc
mov
inc
addr16
pushf
push
loopne
ror
xchg
or
push
scas
in
inc
adc
loop
adcl
pop
jmp
mov
mov
sub
icebp
inc
adc
mov
clc
arpl
mov
mov
negl
int
andl
mov
ret
cld
pop
mov
cmpsl
ss
lods
mov
mov
dec
sahf
xchg
test
mov
outsb
mov
mov
xchg
mov
in
rol
xchg
leave
xchg
pop
clc
sti
adc
sbb
mov
jbe
outsb
mov
movsl
xor
mov
cmp
push
fs
cmp
aad
and
and
inc
inc
mov
cwtl
jno
and
scas
loope
pop
adc
cmp
push
pop
and
std
mov
sbb
adc
dec
inc
ljmp
jge
aaa
sub
cli
xor
adc
lret
mov
pop
adc
inc
leave
inc
xlat
cli
fs
mov
and
push
hlt
pop
lods
xor
rolb
cmp
jno
jo
push
mov
loopne
popa
sahf
inc
rcll
push
nop
inc
sub
add
cmpsb
xor
mov
movsb
loopne
xchg
xor
mov
push
aaa
clc
pop
sbb
inc
inc
adc
ret
addr16
imul
lods
xor
outsb
mov
xchg
xlat
jae
frstor
mov
outsl
ljmp
pop
std
jne
sbb
push
jae
cmp
add
es
arpl
shll
mov
cmc
es
mul
mov
mov
pop
cmp
das
push
pop
aam
hlt
pop
sub
jg
xchg
cmp
insl
filds
mov
test
push
int
loopne
or
sarb
cltd
jp
mov
movsb
pop
aam
pop
mov
roll
lretw
call
jae
pop
lds
xor
cwtl
cmp
sub
xchg
fwait
add
cmp
and
cmpsl
xor
sub
in
push
mov
enter
mov
les
mov
clc
pop
jmp
or
mov
movsl
icebp
andb
xchg
mov
and
or
testb
mov
test
movsb
int
call
cli
adc
lcall
push
xchg
adc
fwait
lods
fcomip
pop
pop
mov
fadds
fcoml
cmc
punpckhbw
fucomp
in
jne
adc
jle
nop
and
cmp
xor
sub
pop
add
outsl
repnz
call
sbb
jns
arpl
enter
shl
fistl
push
sti
xchg
btl
ret
roll
push
stc
mov
mov
ficoms
int3
mull
dec
sbb
fidivrl
clc
adc
mov
dec
loop
and
adc
pusha
adc
ret
push
xchg
sbb
int3
mov
loop
dec
out
dec
movsl
xor
frstor
pop
dec
pop
and
xchg
and
bound
iret
jns
incb
xorb
cmpb
sub
je
jmp
jecxz
push
aad
in
add
xor
and
xorl
ds
xchg
js
pop
jmp
iret
push
loop
shll
mov
push
fstp
addl
jmp
test
sbb
inc
push
jmp
std
movsb
out
mov
dec
rcrl
mov
lods
out
jb
mov
push
clc
push
data16
mov
mov
fldl
mov
cmpsl
scas
sub
mov
sub
test
mov
mull
test
sbb
sbb
xchg
cmp
dec
mov
mov
adc
sbb
fdivs
movsb
jo
add
gs
inc
push
xor
mov
sub
subl
mov
mov
roll
pushf
test
pop
stc
or
pop
lods
ljmp
fimuls
dec
pop
adc
cmp
lds
jb
adc
cs
xchg
cmp
cwtl
lret
popa
jmp
into
outsl
icebp
call
incb
int3
cmp
lods
mov
lods
lahf
inc
mov
mov
rclb
enter
cs
or
mov
int3
add
dec
or
pop
in
mov
cmpsl
and
repz
xor
repz
arpl
cmp
scas
insb
mov
mov
into
xchg
fcomp
mov
cmp
push
es
jns
pop
rcrl
mov
loop
orb
cmp
lahf
flds
daa
adc
mov
push
cmp
jnp
mov
shll
movsb
loop
cmp
mov
mov
fwait
ret
mov
movsl
cmp
andl
push
dec
adc
or
in
sub
jne
stos
inc
std
idiv
xchg
sub
insl
repnz
cmp
es
sub
pop
jbe
pop
sti
inc
insl
mov
ret
dec
sahf
call
mov
xchg
insb
in
cmp
cmpsb
xor
stos
push
mov
aad
xchg
inc
test
ljmp
push
xor
into
mov
pop
cli
mov
lea
stos
jmp
lods
adc
sub
push
add
bswap
jb
les
xor
cmp
das
stos
sub
fimull
dec
pop
mov
mov
jae
inc
adc
sub
dec
loopne
xor
cmp
and
pop
bound
rolb
xchg
lea
movsl
cmp
scas
addr16
mov
stos
in
out
pop
mov
cmp
or
out
sub
jb
pop
movsb
cmp
shll
and
fdivrl
filds
sbbb
lret
int3
mov
mov
lret
ljmp
jb
and
out
test
inc
inc
pop
xchg
out
and
mov
mov
fstpl
fildll
mov
cmpsb
lcall
inc
dec
aam
xchg
pop
lds
int
and
mov
xchg
cmp
xor
add
xchg
and
pusha
cwtl
ret
sahf
int
push
cmp
cli
data16
xor
icebp
and
mov
daa
test
cmpsb
aad
xor
mov
cmpsl
fs
xor
and
mov
cmpsl
add
sbb
mov
and
cmp
repnz
lods
and
hlt
pop
cmp
negl
das
cmp
pusha
in
mov
jns
cltd
mov
ss
mov
xor
push
mov
rcrb
dec
adc
push
mov
sub
call
repnz
mov
movsb
stc
mov
mov
fwait
fwait
movsl
sub
mov
mov
das
lods
aam
pop
shrb
adc
movsl
in
insl
inc
mov
sbb
xchg
and
cmp
ds
pop
mov
repz
fnsave
jp
mov
ficomps
mov
xor
iret
fildl
in
sub
dec
je
subl
xchg
sub
jge
lds
rorb
dec
into
gs
push
push
pushf
in
or
mov
cmpsl
out
or
sti
inc
sub
dec
xchg
inc
ffree
outsl
jecxz
mov
ret
add
imul
ds
fnstsw
repz
fdivl
or
adc
cmp
mov
cltd
xor
mov
dec
in
ss
push
insl
cmp
jmp
pop
hlt
mov
lods
adc
push
xor
das
jae
inc
movsl
push
dec
in
int
clc
mov
in
orl
and
insl
or
jp
sub
int
inc
fiadds
in
and
xchg
inc
add
call
or
aad
pop
rclb
pop
repz
mov
mov
fcompl
mov
das
mov
popa
test
aam
mov
push
out
sub
repnz
dec
jne
subb
cmpsl
pop
mov
lds
dec
jecxz
inc
iret
data16
imul
lcall
movsl
in
or
stc
aas
sub
jo
pop
dec
xchg
inc
faddp
insl
in
lahf
jecxz
cld
adc
add
adc
mov
mov
fstpt
hlt
jmp
or
cmp
xor
mov
dec
jecxz
aaa
into
push
add
outsb
ss
in
test
lret
cld
stos
adc
dec
cld
xor
sub
dec
dec
out
into
mulb
in
test
mov
and
inc
test
shr
pop
lret
cmovs
inc
in
in
push
bound
xchg
aas
add
out
and
cmp
aas
adc
rcrl
pop
hlt
data16
fbstp
xchg
mov
ficompl
mov
sub
cmp
fadds
pop
out
sub
repz
dec
jbe
jle
adc
sarl
stos
repnz
and
dec
in
inc
shlb
push
insb
add
out
test
jno
and
lds
shrl
pop
dec
vprotb
in
popf
loope
std
adc
test
adc
mov
mov
fld
push
or
fidivs
or
cmp
xchg
mov
fwait
xor
scas
mov
iret
push
add
outsl
xor
push
in
cmpsl
push
testb
test
stos
fstps
xchg
sub
xor
sub
dec
mov
ret
hlt
sahf
outsb
add
inc
icebp
mov
and
mov
jbe
sub
in
xchg
enter
dec
loopne
ljmp
xchg
cmp
test
and
aaa
loope
xlat
adc
pop
mov
pop
cmc
lods
loopne
fiadds
xchg
xor
lcall
sub
dec
pop
movsl
cmp
jg
insl
mov
pop
out
sub
hlt
mov
adc
iret
js
test
lret
dec
in
inc
shlb
sbb
out
test
jo
and
les
shrl
dec
lea
mov
fbld
adc
test
arpl
and
mov
inc
fcoms
mov
mul
sub
jne
pop
jle
cmp
xchg
scas
pop
pushf
xor
mov
iret
push
add
jo
je
in
movsl
push
testl
fcomps
xchg
sub
xor
sub
dec
lahf
dec
push
call
repnz
outsl
push
iret
adc
test
lea
addr16
cwtl
inc
stos
inc
jne
sub
ljmp
loopne
jmp
decb
pushf
insl
mov
sbb
mov
mov
xor
push
ret
xor
arpl
jge
mov
xchg
das
fcomps
mov
sub
rcl
jle
outsb
mov
pop
out
es
mov
jbe
jp
adc
int
xor
test
mov
and
dec
out
inc
shlb
sbb
add
outsl
mov
mov
ret
stos
inc
cmc
cmp
shrl
pusha
dec
mov
mov
frstor
push
mov
test
popa
mov
mov
inc
fsts
mov
mul
sub
jne
push
jg
cmp
xchg
lods
pop
popf
xor
into
sbb
fisubs
cmp
push
fnstenv
jae
out
movsb
push
testl
sbb
sub
sahf
dec
push
call
icebp
fwait
outsl
push
int
out
xchg
and
or
inc
stos
inc
jae
sub
jmp
or
cmp
out
sbb
decl
scas
xchg
mov
fiadds
orps
pop
mov
pop
mulb
loope
fildl
call
or
mov
sub
rcl
jl
outsb
scas
hlt
pop
lock
inc
ja
jns
adc
int3
jne
enter
dec
pop
enter
inc
shrl
sbb
dec
xchg
out
xchg
insl
mov
lahf
out
movsb
pop
shrl
imul
loopne
addr16
cltd
fsubl
or
test
or
mov
fsts
mov
mul
daa
fbstp
add
push
ss
xchg
lods
push
popf
xor
int
mov
stos
mov
rcll
fnstenv
jb
out
mov
les
mulb
xchg
sub
cmc
xor
imul
js
shrl
cltd
outsl
push
lret
adc
xchg
lea
gs
movsl
xchg
aas
stos
inc
jno
sub
call
or
cmp
out
pop
pop
imul
imul
cmpsb
cmp
or
cs
negb
loop
fildl
add
push
dec
push
mov
daa
mov
rcl
jp
outsb
lods
repz
icebp
and
cmc
mov
inc
js
js
adc
lret
jae
enter
dec
push
dec
out
aas
shrb
sbb
dec
xchg
lock
imul
mov
sub
push
mov
mov
fldt
or
add
sbb
cmp
movsb
cmp
rol
pop
add
es
pop
add
xor
xchg
stos
push
popf
xor
int3
sbb
std
test
push
ficompl
cmp
dec
sti
fnstenv
jno
lock
ret
ja
cmc
mov
xchg
sub
and
mov
pushf
inc
push
call
out
xchg
outsl
push
leave
adc
mov
lea
fs
cmpsb
xchg
cmp
sub
pusha
ret
jecxz
jecxz
jle
pop
push
lea
add
pop
loopne
and
xor
inc
fmuls
push
lds
pop
negb
jecxz
fidivrl
adc
sti
add
add
pop
mov
and
cmp
outsb
stos
repnz
repnz
cmc
mov
inc
jns
jbe
adc
push
xchg
xchg
cs
jno
leave
mov
les
cmc
cmp
outsl
push
dec
nop
icebp
mov
imul
inc
out
xor
lret
xchg
mov
fldcw
or
xchg
pop
or
cmp
pop
inc
fimull
popa
clc
fbld
adcb
js
xchg
stos
push
sahf
xor
cld
cmpsb
mov
rorl
fidivl
jo
icebp
mov
ret
hlt
lahf
push
lods
rclb
xor
and
dec
fwait
inc
push
jmp
out
xchg
jo
pslld
sbb
cmpsl
xchg
cmp
out
lret
pop
dec
in
loope
jg
pop
imul
xor
popf
lods
mov
filds
test
xor
inc
push
pop
xchg
pusha
negl
in
fnstcw
scas
cli
add
add
mov
and
aad
jbe
outsl
test
pop
repz
testb
sbb
cwtl
das
enter
mov
ret
repz
imul
pop
inc
repnz
mov
cltd
loop
cmpsl
adc
lds
lret
bound
dec
jecxz
popa
jmp
add
mov
sahf
out
mov
pop
pop
es
mov
inc
fisttpl
lods
stc
frstor
jns
incb
xchg
test
lret
sti
movsb
mov
aam
neg
jno
outsl
pop
repnz
sarl
popf
push
lods
into
adc
das
inc
out
xor
and
dec
lcall
imul
jo
lds
repz
mov
xchg
cmp
in
lret
push
dec
in
fucomip
jg
pop
insb
add
lods
mov
fiadds
aas
xor
inc
push
pop
test
pusha
negl
in
fdivrs
adc
sub
pushf
xor
dec
and
push
sahf
ds
jne
outsl
cmpsl
lock
repz
testb
sbb
lods
dec
xchg
cwtl
das
outsb
xor
lahf
call
push
call
insl
adc
inc
mov
mov
data16
adc
lds
bound
test
pusha
jmp
add
mov
sahf
in
mov
pop
push
es
scas
pop
inc
fisttpl
stos
stc
fsubl
loop
push
std
adcb
ja
xchg
test
sahf
xor
cli
mov
cmp
jno
outsb
pop
repnz
dec
clc
jnp
jns
repnz
push
lods
int
cwtl
das
inc
out
xor
pop
addr16
cltd
inc
push
jmp
in
xchg
jo
les
mov
xchg
cmp
in
lret
add
call
add
stos
mov
fldl
test
xor
inc
flds
push
pop
test
pusha
negl
in
xlat
jp
adc
sub
pushf
xor
dec
and
push
popf
ds
je
outsl
cmpsb
out
pop
repz
testb
sbb
das
insl
xor
sahf
out
dec
sbb
push
call
insb
adc
inc
repnz
loopne
cmpsl
adc
lds
lret
bound
test
pop
jmp
add
mov
sahf
in
mov
pop
add
cmpsb
cmp
mov
les
stos
stc
loop
push
cld
adcb
jbe
xchg
cmpsl
dec
sahf
xor
stc
mov
cmp
jno
insl
pop
repnz
dec
clc
jp
jns
icebp
fwait
push
lods
int3
adc
lret
push
data16
cwtl
aas
push
jmp
jmp
jo
ret
or
mov
in
and
xchg
aaa
lods
inc
imul
dec
in
fucomp
jg
push
insb
add
stos
mov
faddl
test
das
aad
flds
push
pop
andl
negl
in
jns
adc
sub
pushf
xor
dec
and
push
fwait
ds
jae
jo
in
pop
repz
testl
dec
xchg
cwtl
das
les
popf
in
dec
pop
mov
aam
push
jno
inc
mov
mov
ficoms
cmpsl
lods
inc
ljmp
arpl
pop
ljmp
mov
lahf
jecxz
mov
pop
add
mov
lods
push
inc
faddl
test
cli
fldenv
jecxz
push
cli
sbbl
movsl
dec
lahf
ss
pop
mov
mov
ds
repz
imul
stc
nop
js
jp
out
cltd
pop
scas
lret
xor
xor
dec
xchg
cmp
aad
jmp
or
mov
es
adc
addr16
loope
lret
bound
fucomi
orb
pop
sahf
pop
test
and
andb
sub
dec
pop
andl
jg
test
lret
popf
xor
inc
and
push
cltd
aas
lret
jno
jmp
hlt
sbb
clc
idivl
pop
scas
dec
nop
cltd
xor
push
int3
fwait
jecxz
dec
adc
ss
push
mov
mov
fcoml
test
mov
inc
call
or
cmp
jmp
mov
imul
mov
mov
push
add
mov
stos
push
inc
fldl
cmpsb
fs
xlat
push
in
push
clc
sbbb
jb
cltd
mov
les
mov
sahf
mov
inc
icebp
fdivl
imul
jbe
jnp
in
xchg
sbb
inc
jmp
mov
jmp
mov
insl
out
jb
mov
loopne
daa
adc
lea
scas
inc
gs
xor
filds
push
out
fldl2e
orl
sub
lahf
pop
cmpsb
mov
fdivrs
mov
sub
inc
fildl
dec
enter
stc
push
mov
adcb
repz
and
sahf
xor
jbe
mov
xlat
enter
mov
ret
stc
nop
cmc
cmp
push
sbb
shrb
cltd
loope
dec
adc
insl
or
aas
xchg
mov
ficoml
test
out
xor
pop
pop
into
cmp
in
pop
in
orl
mov
push
add
shlb
test
test
inc
fiadds
movsb
gs
aad
in
dec
testb
mov
ret
repz
mov
xlat
inc
out
fnsave
pop
cmc
cwtl
inc
sti
xchg
je
jl
jmp
sbb
ds
into
sbb
push
xchg
cmp
push
xlat
outsb
in
jae
mov
ficoms
stos
mov
scas
inc
arpl
fs
push
out
fsubr
orb
outsb
add
pop
movsb
mov
jge
mov
sub
inc
faddl
dec
enter
arpl
push
sahf
out
shlb
cmpsb
icebp
add
and
lahf
ss
inc
and
dec
xchg
inc
xlat
outsb
fdivl
out
cmc
sbb
cli
xchg
hlt
cmp
adc
lcall
fistpll
in
jmp
insl
fs
or
test
mov
fcoms
test
in
xor
pop
push
iret
data16
lods
pop
in
test
lods
or
push
ljmp
shlb
test
cmpsl
push
inc
fiadds
mov
in
dec
cmc
sbbl
outsl
add
jp
and
int
inc
xlat
inc
out
fnsave
pop
cmc
xchg
inc
sti
xchg
jae
jl
ljmp
xor
pop
mov
in
imul
testb
pop
adc
mov
scas
inc
bound
int
mov
push
out
xlat
jmp
or
add
pop
mov
daa
mov
sub
inc
faddl
dec
enter
arpl
push
popf
out
iret
jae
sbb
lahf
ss
inc
and
dec
xchg
inc
xlat
lds
jae
out
cmc
pop
sar
repz
adc
mov
mov
into
xchg
fidivrs
in
ljmp
or
pop
xchg
sub
mov
inc
in
xor
pop
add
dec
in
pop
in
test
stos
or
push
std
sub
je,pn
inc
cmpsb
dec
inc
fiadds
mov
out
dec
repz
outsb
add
lahf
inc
mov
mov
lret
adc
inc
in
fnsave
pop
notb
mov
adc
xchg
sbb
cmp
aaa
into
adc
ss
in
addr16
outsl
jecxz
jae
mov
fistl
lods
mov
scas
inc
pusha
stos
xor
fildl
push
call
pop
dec
outsl
push
subl
lea
jp
mov
daa
int
fdivr
dec
leave
pusha
jp
fs
push
fwait
out
int
sbbb
out
add
aaa
testl
push
dec
xchg
inc
fadd
imul
popf
in
notb
ss
push
mov
iret
xchg
fdivrl
in
call
or
cmp
xchg
sub
mov
dec
loop
xor
pop
add
addr16
push
out
test
test
mov
push
sti
sub
sub
stos
inc
movsb
dec
dec
fistpll
enter
data16
rcrb
out
dec
icebp
test
and
popf
inc
mov
mov
leave
adc
inc
ljmp
xchg
cmp
jle
out
sbb
cmp
cmp
adc
mov
in
gs
fnstenv
xchg
add
xor
xchg
sub
push
push
lods
xchg
inc
pop
test
lret
fnstcw
gs
push
jmp
add
or
sarb
mov
and
inc
lret
sbb
call
sbb
ret
mov
mov
dec
nop
inc
fld
imul
notl
mov
jle
data16
mov
xchg
xchg
fidivrl
out
out
fsubrs
pop
jbe
cmp
xchg
sub
mov
loopne
xor
push
add
push
test
out
xchg
cmpsl
or
and
stc
sub
sub
inc
mov
ret
leave
pusha
cmc
popf
addr16
push
call
sbb
push
popf
fwait
inc
mov
mov
push
inc
fidivrl
call
popa
clc
xchg
cmp
xchg
insl
mov
push
in
sbb
cmp
cmp
or
sbbl
sti
mov
push
int3
push
and
and
stc
push
add
and
pop
outsl
in
xor
mov
pop
sub
pop
lods
mov
sub
scas
and
inc
imul
push
mov
push
jno
or
addr16
push
loopne
ds
pushf
and
push
pushf
xlat
lock
dec
sub
ret
out
leave
mov
in
jmp
in
xchg
mov
or
and
mov
jns
cld
out
pop
add
imul
and
mov
pop
mov
shrb
out
xchg
mov
jne
mov
loope
mov
pop
sahf
push
sbb
loop
test
pusha
out
je
enter
mov
pop
lock
stos
dec
enter
imul
dec
sahf
imul
orb
sbb
and
mov
mov
push
sti
data16
jecxz
push
inc
xchg
inc
cmp
push
in
jle
in
lods
divb
adc
xlat
lret
xor
pop
dec
aaa
mov
in
cmpsb
rcrl
movsl
or
mov
jnp
jno
cmpsb
mov
shlb
xor
mov
adc
and
push
js
lea
add
and
push
jecxz
xchg
notb
cmp
pop
push
cmp
and
pop
mov
mull
imul
jmp
mov
enter
push
jae
sub
ljmp
loope
subl
pop
leave
out
aaa
ss
cmp
jne
or
mov
push
sbb
pop
loope
out
mov
sub
mov
xchg
lea
rcll
lret
sbb
lock
inc
pop
or
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
lret
push
mov
aaa
stos
xchg
je
or
je
and
ds
xchg
rcrb
xor
movsb
sbb
scas
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
jecxz
test
inc
cmpl
dec
adc
aaa
outsb
movsb
push
fisttpll
loop
lods
mov
lret
fs
jge
fmul
enter
xor
cmp
fstpt
cmc
jnp
sub
jp
jp
popa
or
mov
aam
gs
es
fdiv
frstor
sbb
mov
out
daa
jnp
in
enter
jnp
arpl
adc
scas
cwtl
xlat
inc
push
add
shlb
inc
pop
push
pop
dec
aas
je
lods
daa
arpl
xchg
cmpsl
mov
dec
push
loopne
and
outsl
pop
das
push
imul
or
jmp
cmpl
mov
test
mov
flds
pop
xor
scas
xor
subl
cmpsb
sub
fistpl
mov
jmp
cmpsb
addb
fadds
aad
in
dec
fildll
int
add
mov
sub
int3
dec
jns
test
mov
add
jno
aam
pusha
insl
iret
inc
adc
shl
stos
lcall
xor
test
mov
insb
push
jo
int
xlat
sub
push
xchg
dec
pop
fimull
mov
adc
or
stos
negl
adc
adc
mov
mov
fcoms
std
cli
jo
jmp
mov
add
test
jmp
iret
jmp
adc
mov
ss
sbb
outsl
mov
pop
jne
jno
and
jmp
mov
push
cmp
xchg
xchg
or
test
sub
sub
ret
shrl
pop
cmp
xchg
push
push
push
lock
daa
daa
mov
xchg
mov
imul
aad
fsts
jecxz
aam
mov
adc
rclb
sbb
popf
lcall
push
repz
mov
lahf
adc
repz
push
xchg
