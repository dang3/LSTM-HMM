jge,pn
mov
ss
adc
cmp
imul
pop
add
call
add
push
jp
lret
cmp
add
pop
push
mov
sub
push
push
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
add
aad
xlat
push
jmp
sbb
ret
shl
shl
jle
and
std
hlt
aas
test
mov
in
xchg
imul
lret
dec
jmp
push
ds
lock
int3
shll
mov
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
sbb
cwtl
stc
push
adc
push
push
cmp
inc
cmp
xchg
hlt
jp
mov
inc
mov
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
into
popa
push
jecxz
and
dec
dec
xchg
jg
sahf
sbb
dec
outsl
jae
sub
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
add
repz
bsr
adc
lcall
push
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
push
es
int
sarl
mov
sub
push
push
lea
push
subl
lea
push
subl
lea
push
mov
push
subl
mov
add
call
pop
mov
xor
adc
sub
mov
popl
mov
mov
mov
mov
sub
push
pop
xor
cmp
je
sub
lea
pushl
pop
dec
lea
push
popl
pushl
lea
pop
repz
jmp
mov
pop
ret
add
push
mov
sub
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
xchg
test
push
das
cmp
xlat
stc
cmp
push
mov
sub
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
push
inc
jecxz
xchg
jmp
pop
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
add
xchg
adc
inc
adc
mov
mov
mov
scas
loop
les
and
std
sub
pop
lret
cmp
lock
mov
dec
cmp
xchg
xchg
jp
sbbl
testl
dec
mov
mov
aam
pop
std
inc
push
pop
clc
sbb
sub
lods
mov
shl
fs
.byte
push
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
sub
add
cmp
add
mov
add
movsb
and
add
and
add
add
and
add
add
add
and
add
and
add
add
push
and
add
add
and
add
add
add
test
add
outsb
and
add
add
repnz
add
and
add
add
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
add
and
add
add
add
add
out
and
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
sub
add
cmp
add
mov
add
movsb
and
add
and
add
add
and
add
add
add
and
add
and
add
add
push
and
add
add
and
add
add
add
test
add
outsb
and
add
add
repnz
add
and
add
add
add
and
add
and
add
and
add
add
add
add
popa
jo
imul
inc
outsl
jo
inc
imul
imul
insl
gs
insb
outsl
jae
add
insb
jae
jb
jo
inc
add
add
fs
imul
add
roll
inc
gs
gs
inc
je
insl
add
sbb
gs
outsl
outsb
jae
insb
gs
add
inc
outsl
insl
insl
popa
outsb
fs
imul
push
insb
gs
add
je
imul
bound
gs
add
dec
add
insb
outsb
push
add
sbb
gs
outsl
outsb
jae
insb
gs
add
inc
gs
jb
jbe
je
push
jb
imul
je
outsl
outsb
push
add
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
imul
jb
je
arpl
add
push
add
fs
je
insl
inc
add
rolb
dec
gs
jo
gs
jb
jns
sbb
gs
outsl
outsb
jae
insb
gs
add
add
je
jb
jbe
push
jns
gs
add
add
je
outsl
imul
jbe
jae
add
inc
jbe
outsb
je
add
push
dec
inc
dec
xor
cs
insb
add
push
add
outsb
fs
push
push
add
outsb
fs
push
pop
add
addr16
outsl
js
add
add
arpl
inc
jae
jb
outsl
jb
or
push
gs
jb
inc
jb
outsl
jb
add
inc
push
inc
jae
jb
outsl
jb
add
inc
jb
dec
jae
add
pop
add
addr16
outsl
js
add
add
jo
jb
inc
jb
outsl
jb
add
inc
jb
dec
jae
add
push
add
outsb
fs
push
add
inc
jb
dec
jae
add
pop
add
addr16
outsl
js
add
push
dec
push
cs
insb
add
add
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
add
push
imul
jb
gs
add
inc
insb
insb
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
add
inc
jb
popa
je
inc
js
arpl
imul
outsw
jb
add
inc
dec
inc
dec
inc
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
inc
add
test
add
cmp
add
add
add
add
add
ja
add
add
add
add
add
add
inc
inc
add
lods
enter
add
add
enter
add
add
add
add
add
add
add
add
and
add
add
andb
add
imul
sub
add
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
stos
mov
mov
fwait
pop
xchg
xchg
xchg
or
jg
jnp
jl
lods
lods
lods
add
cmpsb
cmpsb
push
mov
mov
mov
ret
ret
leave
lret
int3
int
rcl
shr
rcl
shl
rcl
shl
int3
int
hlt
mov
out
mov
in
mov
mov
stos
stos
lods
lea
fwait
fwait
and
jne
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
out
lret
rcl
sar
xlat
fdivr
fcom
fdivr
xlat
aad
rcl
iret
dec
into
int
aam
dec
rcl
inc
ret
mov
mov
lods
iret
movsl
movsl
mov
dec
cs
add
push
add
add
add
add
add
add
add
add
stos
lods
lods
add
scas
lods
sbb
mov
jnp
mov
mov
dec
leave
lret
rcl
aad
fcom
fdivr
xlat
fdivr
aad
dec
int3
into
dec
int3
int
aam
int3
into
into
inc
rol
mov
mov
scas
std
cmpsl
cmpsb
cmpsl
ljmp
pop
fs
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
inc
add
pop
add
or
inc
or
sbb
add
add
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
enter
int
call
rcl
fcom
call
xlat
call
aam
dec
into
int
lret
dec
into
into
inc
rol
mov
mov
jmp
mov
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
arpl
push
imul
pop
pop
pop
fs
sbb
or
xor
aaa
cmp
cmp
cmp
adc
pop
push
pop
add
add
add
add
arpl
add
mov
pop
mov
mov
mov
mov
mov
mov
ret
enter
iret
sar
aam
call
aad
rcl
iret
dec
mov
inc
ret
mov
mov
ljmp
movsb
movsb
pushf
popf
popf
xchg
xchg
xchg
lcall
addb
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jo
jg
jl
jg
jg
jb
jno
popa
arpl
push
dec
push
xchg
cmp
inc
inc
mov
outsl
outsl
outsb
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
movsl
movsb
movsl
add
mov
mov
mov
mov
mov
mov
mov
inc
leave
enter
lret
dec
lret
enter
ret
mov
mov
ljmp
movsl
movsb
lcall
xchg
xchg
xchg
xchg
xchg
cwtl
xchg
xchg
fwait
cltd
cltd
in
addl
push
or
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
jo
jo
pop
pop
pop
or
jl
lea
incb
jp
jp
jp
jo
outsl
out
push
push
ret
jg
jp
js
arpl
inc
inc
inc
cmp
sbb
sbb
adc
or
stos
stos
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
cmpsl
cmpsb
lcall
nop
incl
addb
xchg
xchg
sahf
sahf
mov
ficoms
nop
jle
js
pop
das
cs
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
jno
cltd
lahf
in
mov
incl
mov
std
mov
jle
jno
jo
je
je
jg
jg
addb
xchg
push
cmp
ss
es
jg
jg
fwait
fwait
fwait
lea
test
lods
stos
lods
sti
stos
lods
stos
stos
lods
lods
test
movsl
movsb
std
cltd
fwait
lcall
mov
jp
js
jl
jp
mov
xchg
movsl
mov
mov
mov
mov
mov
mov
mov
lods
lods
stos
test
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
nop
xchg
incl
xchg
mov
std
xchg
xchg
cwtl
stc
xchg
xchg
xchg
in
mov
enter
int
lea
mov
pop
pop
push
or
inc
inc
dec
insl
insl
insb
jl
xchg
leave
lcall
out
lcall
std
mov
xchg
mov
mov
mov
jmp
scas
scas
mov
mov
mov
mov
mov
std
mov
mov
movsb
mov
jp
lods
cmpsl
lods
add
pop
adc
scas
call
fwait
xchg
xchg
incl
xchg
decb
xchg
xchg
popf
sahf
sahf
std
mov
mov
xchg
in
nop
xchg
xchg
in
test
push
jne
push
push
dec
add
or
dec
dec
dec
data16
jno
mov
xchg
rclb
xchg
xchg
std
mov
call
lahf
sahf
jmp
lods
pushl
cmpsb
lods
mov
xchg
test
std
ret
mov
mov
ljmp
mov
add
pop
adc
scas
mov
lcall
xchg
decl
xchg
decl
xchg
xchg
sahf
sahf
popf
movsl
movsb
movsb
stos
test
movsb
mov
cwtl
fstpt
jl
push
push
push
outsl
dec
dec
dec
popaw
bound
jo
jne
jl
jle
test
int
xchg
xchg
in
xchg
xchg
testl
lea
jmp
mov
mov
pop
mov
mov
xor
ja
mov
movsb
mov
mov
mov
lods
lods
lods
mov
movsl
movsl
add
mov
add
pop
adc
mov
ljmp
popf
decl
nop
call
xchg
xchg
call
xchg
fwait
lcall
mov
mov
mov
out
xchg
xchg
nop
xchg
les
fwait
in
xchg
xchg
out
mov
stc
xchg
test
std
xchg
jae
cltd
addr16
sahf
pop
test
movsl
dec
jg
lods
inc
jge
mov
jnp
mov
je
mov
outsb
ljmp
adc
stos
or
lods
or
pushl
lahf
mov
mov
stos
stos
pushf
mov
mov
add
shlb
adc
mov
lcall
nop
xchg
call
cltd
fwait
lcall
sahf
lahf
lcall
lcall
xchg
xchg
nop
xchg
nop
call
cltd
cld
xchg
xchg
sahf
stc
lahf
fwait
sahf
stc
sahf
xchg
popf
cld
sahf
xchg
xchg
imul
xchg
dec
jns
lcall
sahf
pop
push
jmp
adc
ljmp
packuswb
stos
adc
scas
adc
mov
imul
adc
pushl
aas
cmp
mov
lods
scas
scas
movsb
movsl
movsl
sub
mov
add
add
add
add
pop
pop
adc
mov
ljmp
popf
call
pushf
sahf
lcall
mov
movsb
jmp
xchg
xchg
decl
mov
decl
mov
fwait
jno
cltd
bound
call
sub
decl
adc
or
pop
call
add
lahf
pop
pop
jmp
sbb
mov
outsb
pushl
sbb
jb
mov
and
shll
mov
xchg
lods
mov
scas
lods
mov
lahf
lahf
mov
add
pop
pop
adc
scas
mov
shll
pushf
sahf
popf
jmp
cmpsb
cmpsl
jmp
test
jmp
fwait
popf
call
pop
jbe
mov
decl
arpl
mov
pop
incl
add
incl
add
mov
pop
call
add
lcall
jmp
pop
jo
mov
jne
mov
sub
inc
sub
sub
sub
jg
enter
movl
inc
mov
mov
mov
mov
movsb
add
push
adc
test
ljmp
sahf
jmp
test
lods
ljmp
mov
ljmp
mov
mov
mov
arpl
test
push
incl
or
add
incl
add
add
mov
push
decl
push
call
add
lahf
add
add
lods
adc
mov
cmp
dec
cmp
dec
cmp
call
cmp
call
cmp
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
mov
mov
sahf
cltd
sahf
ljmp
lods
scas
pushl
mov
pushl
mov
ljmp
jbe
decl
or
mov
pop
decl
or
test
push
incl
add
mov
push
decl
add
popf
add
add
add
stos
add
jo
ret
dec
inc
dec
inc
mov
roll
call
dec
mov
fmuls
call
dec
xchg
fisttpl
fisttpll
fsts
call
xchg
std
mov
mov
movsl
mov
mov
add
inc
dec
adc
jp
movsb
popf
mov
lcall
test
pushl
mov
pushl
mov
mov
mov
jmp
cmp
mov
pop
decl
sbb
mov
decl
push
decl
add
xchg
add
sahf
add
mov
add
test
pop
pushl
es
into
dec
call
push
cltd
call
push
fwait
fsts
fistl
ficoms
fistps
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
test
cmpsb
jne
lahf
sahf
or
xchg
xchg
cwtl
add
adc
js
mov
movsb
cmpsl
lcall
lods
lods
pushl
mov
mov
mov
mov
ljmp
inc
jne
nop
and
and
call
and
sbb
xchg
or
popl
push
call
add
mov
add
lods
add
mov
data16
mov
xor
fcomps
fisubs
loopne
movsb
jmp
cmpsb
jmp
cmpsb
jmp
test
push
cmpsl
call
test
mov
cmpsl
test
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
inc
adc
jp
xchg
cltd
call
mov
lods
scas
pushl
mov
mov
mov
mov
ljmp
push
jg
xchg
sub
lcall
call
sbb
pop
call
pop
jmp
add
stos
add
mov
pushw
call
inc
frstor
jmp
outsl
lods
jmp
jno
call
jae
jmp
mov
jmp
mov
out
je
in
jne
out
jb
jmp
mov
mov
test
lcall
mov
add
add
add
jge
cmp
insl
outsl
js
lea
lcall
mov
mov
mov
mov
mov
mov
mov
cmpsb
scas
lcall
xor
mov
cmp
lahf
xor
lcall
lcall
add
movsb
add
test
pusha
pushl
add
mov
sbb
fistl
jmp
ja
ljmp
in
cmpb
lock
xacquire
push
cmpb
mov
shl
test
popf
daa
sahf
lahf
lahf
add
add
add
add
ss
jne
jge
out
test
xchg
xchg
xchg
pushl
mov
mov
inc
rol
ret
ret
rol
pushl
insb
mov
cltd
cmp
mov
inc
jge
mov
sbb
add
popf
add
movsl
add
test
pop
ljmp
add
mov
add
call
es
ljmp
in
lea
push
xchg
sar
nop
ret
push
xchg
nop
ret
push
xchg
clc
ret
mov
clc
stos
lods
test
xor
pushf
pushf
add
add
add
inc
aas
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
nop
pushl
mov
inc
sarl
ret
inc
mov
jle
lcall
jg
lods
dec
cmp
xor
lcall
add
mov
add
lods
add
mov
mov
add
leave
push
insl
fdivs
mov
out
xchg
lcall
repnz
push
fwait
leave
push
lcall
cld
popf
int3
cli
sahf
int
cld
cwtl
leave
push
xchg
ret
jmp
mov
dec
mov
rcrb
xchg
add
add
add
cs
or
cmp
dec
jecxz
pop
popa
call
mov
mov
mov
sar
ret
inc
enter
mov
mov
ljmp
dec
xchg
movsl
sub
cltd
push
pop
lcall
pop
ljmp
add
mov
add
leave
add
or
filds
out
lea
push
movsl
int3
push
movsb
int3
stc
cmpsl
int
cld
cmpsl
sar
sti
cmpsb
sar
cli
cmpsl
iret
stos
sar
test
iret
push
lahf
jmp
mov
dec
enter
mov
into
sahf
mov
xchg
add
lcall
xor
xor
daa
sub
or
bound
pop
xlat
jne
jno
mov
sarb
mov
ret
ret
inc
ret
ret
inc
leave
leave
inc
rol
mov
cmpsb
jmp
push
mov
lods
dec
test
lahf
sbb
sahf
add
movsl
add
stos
add
mov
mov
add
into
add
add
loopne
jl
out
pop
cmpsl
push
popf
lret
cli
scas
aam
sti
scas
aam
sti
scas
aad
cli
scas
sar
cld
mov
std
mov
mov
std
mov
mov
std
mov
push
movsb
jmp
mov
dec
leave
int
mov
mov
sahf
mov
xchg
or
add
add
xor
sbb
dec
dec
dec
outsl
outsb
outsl
mov
mov
aam
fsubr
fcom
test
int
dec
lret
lret
dec
lret
lret
lret
mov
scas
jmp
push
mov
lods
jle,pt
sahf
or
pop
ljmp
arpl
mov
add
rolb
outsl
call
add
add
and
sti
lods
aad
std
mov
std
mov
fdivr
cld
mov
mov
xlat
inc
mov
int
out
call
lret
mov
mov
xchg
or
add
add
xor
add
add
pop
or
mov
pop
call
out
test
jecxz
leave
fsub
fdiv
fcomp
fsqrt
aam
xlat
std
int
sar
mov
push
cmp
sub
mov
add
mov
arpl
mov
add
lret
add
add
fildl
jbe
jecxz
js
in
das
xchg
push
mov
cli
mov
loope
inc
loope
std
loopne
std
fdivrp
dec
inc
inc
dec
std
leave
cld
mov
enter
into
mov
mov
xchg
adc
add
add
std
add
incl
std
std
add
cmc
cmc
or
in
in
pop
in
in
in
sub
in
in
dec
ljmp
xchg
call
out
aad
jmp
mov
xchg
cmpsl
cmp
movsl
adc
jmp
pusha
pushl
push
dec
add
fadds
jb
filds
ja
ljmp
cli
mov
jecxz
dec
in
dec
in
dec
in
dec
loop
std
int
dec
loope
std
shl
std
iret
loop
call
in
call
jecxz
cli
ret
in
mov
inc
cmpsb
cmpsb
mov
xchg
xchg
add
add
add
std
incb
std
incl
div
clc
add
repz
repnz
push
out
lock
in
icebp
out
cmp
in
out
pop
loopne
loopne
lds
xchg
sti
lahf
es
pop
pop
jmp
add
mov
fs
mov
add
roll
jb
fiaddl
je
jecxz
jnp
in
push
jge
negb
sti
mov
std
shl
dec
jecxz
std
shr
call
out
call
in
std
aad
fsub
call
jmp
std
std
shl
push
ret
in
fcos
lret
repz
xchg
xchg
and
xchg
cwtl
add
std
sti
add
clc
add
sti
stc
add
cmc
cmc
or
shlb
sarb
negb
add
add
scas
add
mov
add
lret
add
add
fldl
ja
out
js
out
sbb
clc
je
cld
fld1
fldpi
fucomi
fucomi
fucomp
fsubr
fucomi
fucomip
fucomip
fucomip
cld
shl
push
aad
call
ror
clc
lods
lods
stos
lods
xchg
xchg
xchg
outsb
outsb
outsb
add
add
mov
loopne
add
enter
mov
xchg
repnz
and
lahf
add
cmpsb
add
mov
arpl
mov
add
into
add
aam
jno
filds
je
call
sub
std
shl
fucomip
fsubr
fldl2t
std
xlat
call
shl
cli
iret
loope
cli
iret
loope
test
cmc
ret
aad
out
mov
fcom
sti
mov
mov
fwait
cltd
lcall
lcall
mov
mov
add
leave
adc
lods
xchg
lcall
add
mov
mov
add
roll
outsl
fadds
je
loop
jns
jmp
aaa
xchg
cli
cwtl
enter
loopne
cli
int3
loope
sti
stc
rcr
idivl
push
mov
sar
out
mov
int
call
ror
jmp
shl
jmp
fnstsw
in
mov
mov
xchg
add
add
add
into
lret
add
mov
cmpsl
loopne
xor
pusha
ljmp
add
mov
add
dec
push
jno
rorl
je
jns
loope
cmp
inc
xchg
call
scas
lret
mov
call
lods
scas
ret
cli
fnsave
enter
leave
ljmp
into
fsubp
iret
shl
aad
out
loop
in
in
test
in
out
popf
call
lret
lret
push
lods
lods
lods
adc
cmpsb
cmpsl
test
lahf
mov
roll
ret
ret
pop
mov
lods
aam
dec
cmp
cmpsl
sbb
jo
mov
js
mov
dec
xchg
les
stc
lret
test
mov
out
mov
mov
lret
ror
int3
mov
into
shlb
xlat
rcl
jg
jb
gs
in
call
out
in
xor
cmc
cmc
cmc
and
lock
fcmovnu
or
mov
int
xchg
add
mov
rol
mov
scas
mov
stos
test
test
sbbb
mov
cmpsb
sarb
test
mov
mov
cmpsl
mov
enter
lret
jp
int3
iret
addr16
rclb
rcl
dec
aad
inc
rcl
aam
fcmovnu
daa
fistpl
fcmovu
fstl
fsub
loope
loope
in
out
jmp
add
cld
testb
cld
add
std
add
std
incb
mov
mov
shrl
mov
mov
mov
scas
xchg
mov
mov
mov
mov
ret
push
rol
inc
ret
leave
lds
int
daa
int
iret
and
aam
rcl
rclb
iret
aam
or
xlat
push
rcr
fadds
fcmovnu
add
add
in
add
jmp
add
xlat
add
incl
mov
mov
add
ret
ret
lds
mov
mov
mov
push
rol
or
enter
enter
int3
leave
add
aam
add
fcom
add
xlat
add
xlat
aad
aad
add
fchs
add
aad
add
loop
add
fsubp
add
out
add
icebp
icebp
add
incl
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
ret
mov
mov
les
mov
mov
ja
stos
stos
dec
test
test
pop
add
add
add
add
add
add
mov
mov
mov
mov
aam
iret
shr
rcl
aam
aam
sar
into
ror
cli
int3
lret
int
lret
hlt
mov
mov
lods
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
cmpl
add
push
push
add
add
add
add
add
add
add
add
add
mov
mov
rol
enter
iret
sar
aad
call
xlat
aad
ror
iret
dec
into
iret
dec
lret
lret
mov
mov
lods
lods
stos
icebp
xchg
xchg
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
jne
jae
jne
fs
inc
dec
dec
cmp
sub
sub
xor
dec
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
mov
lret
rcl
sar
rcl
aam
int3
int3
lret
mov
mov
mov
ljmp
sahf
lahf
cwtl
xchg
xchg
jmp
outsl
jno
push
adc
add
add
add
add
add
addl
test
push
push
pop
pop
pop
movsb
push
push
push
stos
push
imul
cmp
cmp
jo
jo
scas
scas
scas
pop
mov
mov
mov
mov
mov
rol
vshufps
mov
mov
ljmp
pushf
pushf
call
xchg
fwait
cltd
lcall
dec
dec
dec
movups
xor
add
and
add
adc
add
pop
lcall
pop
pushf
cwtl
lcall
addb
jnp
jge
js
jp
jnp
jnp
jnp
jnp
jae
jae
push
push
push
cmp
je
sahf
popf
popf
mov
lods
scas
repz
lods
scas
sti
lods
lods
scas
std
cmpsl
cmpsl
test
sahf
popf
pushf
call
xchg
call
mov
scas
jmp
scas
scas
leave
movsb
cmpsb
movsb
cltd
jae
jb
adc
adc
add
add
add
add
insl
insl
outsl
pop
xchg
mov
loop
cwtl
pushf
incl
mov
sti
xchg
xchg
xchg
lock
nop
xchg
fimuls
mov
jp
pop
and
inc
inc
dec
jo
outsl
orl
cltd
lcall
lea
call
lahf
ljmp
test
mov
mov
mov
xlat
cmpsl
mov
addl
add
add
popa
popa
popa
or
lods
mov
cmpsl
lahf
movsl
decl
mov
call
sahf
sahf
sti
sahf
mov
cwtl
call
push
push
push
jo
push
push
outsl
insl
insl
outsb
xchg
subb
xchg
lock
xchg
xchg
ljmp
jg
pushl
pop
mov
jl
mov
scas
stos
insl
stos
test
add
add
add
popa
pop
pusha
or
mov
in
mov
xchg
call
xchg
xchg
call
cltd
fwait
lcall
cli
xchg
xchg
cwtl
jmp
xchg
lea
jecxz
orb
xchg
imul
popf
dec
jnp
movsb
inc
jp
lods
aaa
jbe
mov
jb
mov
outsb
pushl
sbb
mov
mov
mov
mov
jle
movsb
movsb
push
popa
pusha
pusha
or
mov
call
lahf
sahf
jmp
lahf
lahf
call
mov
lea
mov
xchg
jno
cld
xchg
pusha
test
xchg
dec
jp
nop
cmp
xchg
sub
xchg
sbb
adc
lahf
or
imul
mov
insl
pushl
push
jae
mov
pop
mov
scas
lods
xchg
popf
popf
popf
adc
add
add
pop
pusha
pop
or
lods
mov
stos
movsb
cmpsb
jmp
cmpsb
cmpsb
ljmp
test
lcall
pop
jns
mov
imul
mov
pusha
decl
or
mov
push
call
add
pushf
add
cmpsl
or
je
mov
sub
jg
enter
lret
xor
dec
pop
xchg
inc
test
divl
test
sbb
add
add
popa
pusha
pusha
or
cmpsb
test
ljmp
scas
scas
pushl
mov
jmp
jno
mov
pop
decl
or
xchg
push
decl
add
sahf
add
cmpsl
add
mov
insl
inc
cmp
dec
inc
mov
rolb
call
inc
xchg
fiaddl
call
arpl
stc
mov
mov
movsl
movsl
movsb
daa
incl
add
add
pusha
pop
pusha
or
mov
ljmp
mov
mov
mov
mov
mov
jl
nop
push
arpl
nop
sbb
mov
pop
decl
push
call
add
test
pusha
ljmp
and
rorl
fstps
fistpl
jmp
pop
lahf
jmp
pop
mov
fisubrs
dec
test
cld
mov
mov
cmpsl
stos
cmpsl
xor
add
add
dec
pop
jge
jl
fwait
xchg
cwtl
jecxz
sahf
mov
pushl
mov
mov
jmp
cs
lcall
and
call
add
sahf
add
cmpsb
add
mov
mov
xor
fisubl
jmp
insb
stos
jmp
outsl
lods
jmp
jo
in
jae
jmp
js
call
cmpsl
mov
shrl
cmpb
add
add
dec
pop
outsl
insl
insb
bound
cltd
xchg
ljmp
mov
mov
mov
je
lcall
cmp
sahf
sub
cwtl
or
fwait
add
movsl
add
lods
add
mov
gs
or
xchg
jmp
js
jmp
mov
out
test
push
mov
out
mov
mov
test
push
lcall
add
sub
push
push
push
dec
pop
gs
loopne
mov
mov
sarb
mov
xchg
cmpsl
inc
cmp
lcall
ljmp
add
mov
adc
mov
push
xchg
cwtl
push
cwtl
clc
lcall
negb
inc
mov
stos
popa
mov
add
add
inc
inc
pop
pop
pop
push
fisttpl
mov
mov
ret
mov
test
ljmp
insb
lcall
add
mov
arpl
mov
add
and
push
mov
into
cli
test
sar
cld
lods
sar
std
stos
sar
cli
cmpsl
lret
jmp
mov
dec
rol
test
sahf
popf
or
add
add
dec
push
dec
aaa
je
jae
test
int
out
int
cmc
lret
int3
int3
sti
lret
std
enter
mov
mov
stos
bound
jmp
add
mov
gs
add
iret
add
fildl
xchg
push
xchg
cld
mov
cld
mov
fdivr
cld
mov
fdivr
std
mov
sar
jmp
ret
mov
lods
mov
add
add
add
add
or
rcl
dec
loopne
loope
fistps
xlat
xlat
out
mov
addr16
cmpsl
sub
jmp
add
mov
add
aad
jae
jecxz
jl
lock
mov
sti
loopne
inc
loopne
std
loope
std
enter
leave
fdivrp
dec
std
out
mov
lret
divb
pushf
sahf
sbb
add
add
std
incl
std
std
incb
ljmp
jmp
in
xor
loopne
in
les
mov
mov
add
mov
inc
add
int
insl
faddl
jbe
call
outsb
mov
std
ret
sti
iret
out
shl
std
shl
std
shl
std
out
call
call
push
xlat
fmul
sar
mov
mov
add
std
incb
incl
cld
cld
incb
aad
aam
mov
pop
xchg
lahf
or
ljmp
add
add
roll
jno
fiadds
ja
out
and
cld
shl
std
fsubr
cld
fsubr
std
std
std
std
aad
push
jmp
rcl
sti
mov
popf
lahf
das
add
add
int
int3
or
arpl
lods
add
mov
add
roll
jb
loop
js
out
das
xchg
push
fwait
stc
int
stc
lret
test
hlt
ret
aad
repnz
out
ret
out
aam
out
shl
in
shl
in
fucomp
enter
stos
test
std
add
add
add
aam
push
mov
jae
or
insb
inc
pop
jae
int3
and
aad
xchg
fists
in
mov
out
in
leave
jmp
fnstsw
leave
loopne
sarl
jecxz
fcompl
out
jmp
rorl
mov
add
stos
lods
stos
add
xchg
movsb
les
pop
xchg
mov
xchg
fidivrl
andb
int3
lahf
mov
sarb
jge
int
aam
into
pop
rcl
rorl
fcomp
cmp
das
in
fsubl
jecxz
icebp
adc
jmp
or
std
std
add
add
add
incl
mov
mov
outsb
scas
mov
scas
mov
push
mov
mov
shrb
leave
and
rcl
pop
rol
adc
rcl
or
loope
or
int
add
std
incl
incb
lcall
pinsrw
or
into
int
add
std
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
rol
enter
leave
mov
ret
ret
mov
scas
scas
insb
stos
stos
stos
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
lods
add
mov
enter
sar
aam
aam
rcl
sar
iret
into
iret
std
mov
stc
mov
cmpsl
test
gs
push
pop
add
add
add
add
add
add
add
add
jae
jb
push
inc
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
into
int
aam
aad
into
into
int
enter
mov
scas
scas
jmp
mov
push
add
add
add
add
je
jne
test
adc
outsl
outsl
ret
bound
outsl
outsb
insl
jb
popa
popa
cmp
pusha
sbb
mov
in
mov
mov
mov
lods
stos
lcall
xchg
lcall
cwtl
cwtl
lds
jno
es
pop
add
add
jb
jb
fwait
xchg
fwait
mov
test
mov
mov
test
addb
push
push
dec
inc
mov
pushf
into
mov
mov
xchg
decb
mov
ljmp
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorl
stos
mov
mov
lea
xchg
cld
pushf
popf
popf
cmc
lcall
mov
push
push
imul
jg
lea
xchg
notl
mov
pushl
push
cltd
mov
scas
lods
push
lods
stos
lods
add
add
add
test
test
xchg
xchg
xchg
call
cltd
lcall
cltd
cltd
std
xchg
xchg
xchg
out
xchg
mov
loope
jne
out
xchg
bound
std
lcall
ljmp
pop
outsl
pushl
ss
mov
mov
imul
int3
add
xchg
pop
scas
movsb
lods
test
popf
sahf
popf
jmp
mov
xchg
decl
push
jbe
xchg
inc
je
lea
imul
push
call
or
mov
push
outsb
pushl
and
jns
ret
inc
test
rcrb
subl
jne
push
mov
movsl
cmpsl
cld
test
scas
scas
pushl
mov
decl
or
xchg
decl
add
mov
adc
shll
dec
ds
roll
call
inc
call
dec
xchg
dec
cltd
mov
mov
mov
movsb
mov
add
push
xchg
xchg
test
mov
lods
pushl
mov
movsl
call
pop
arpl
pop
pusha
decl
add
mov
add
mov
push
xchg
fistpl
fistps
jmp
pusha
movsl
jmp
movsw
call
lcall
cmpsl
cmpsl
test
add
add
arpl
adc
sahf
lcall
mov
mov
scas
lcall
jno
lcall
lcall
add
mov
push
jmp
outsb
stos
jmp
jns
jmp
mov
lock
out
jg
fistpl
mov
and
add
add
dec
adc
imul
mov
mov
mov
rol
mov
fs
cmpsb
inc
jl
lahf
and
pushf
add
pop
pushl
insl
fimull
in
mov
push
xchg
push
xchg
enter
jmp
cmpsb
inc
mov
movsl
sub
inc
inc
inc
adc
push
xchg
mov
mov
inc
sarb
ljmp
sbb
movsb
add
mov
fs
add
emms
jmp
scas
clc
cmpsl
iret
stc
lods
sar
cld
lods
sar
cld
scas
sar
cld
lods
iret
jmp
lret
mov
movsl
ds
std
add
outsl
jno
scas
mov
mov
aam
mov
aad
rcl
shr
lret
enter
xchg
jmp
arpl
ret
add
aam
jae
out
xchg
notl
std
rcr
cld
rcr
inc
cld
rcr
icebp
mov
ret
in
test
addb
add
add
jmp
or
out
out
loopne
jecxz
fcomp
fldenv
mov
add
mov
add
fldl
out
aaa
xchg
sti
mov
std
iret
in
std
iret
in
shl
call
in
std
aam
push
fcos
rol
int3
in
lods
scas
lods
popa
addl
add
std
std
incb
incb
int3
int
sub
lahf
sbb
stos
add
mov
add
loop
jp
hlt
push
cmpsl
std
loop
xlat
out
in
std
aad
sti
aad
cli
shl
push
fsin
fcmove
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
push
arpl
mov
or
ficomps
cmp
out
mov
shl
jmp
rcl
call
lret
ljmp
scas
ret
fwait
cltd
add
mov
pushf
lods
xchg
dec
and
push
mov
shlb
int3
js
mov
xlat
mov
int3
adc
int3
outsl
xlat
int
pop
fst
aad
jecxz
loopne
call
in
in
sbb
mov
mov
scas
arpl
mov
les
les
rol
sbb
bswap
int3
int
aam
push
std
add
addl
lods
incl
mov
std
add
std
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
and
inc
repz
test
arpl
pop
mov
das
push
fsub
jnp
cmp
imul
imul
jge
mov
fisttpll
aad
xor
repz
test
pop
mov
push
movsl
xlat
jecxz
or
mov
stc
sub
cwtl
pop
sbb
mov
insl
lds
cmp
jp
and
adc
cltd
inc
jb
adc
cwtl
das
divl
mov
dec
or
cmp
insb
popf
pop
jnp
lea
cltd
xor
adc
test
xor
xchg
push
insl
xchg
hlt
mov
pop
insl
add
cli
adc
lea
jge
test
in
add
pop
xor
insb
add
push
out
xchg
and
add
fsts
and
sbb
inc
xlat
jle
in
outsl
lahf
pop
cmc
rclb
jl
and
and
ja
ds
cwtl
mov
repz
fidivrl
or
les
cs
mov
push
inc
fidivs
xor
test
lcall
out
and
aaa
dec
insl
add
dec
insb
add
mov
add
test
aas
and
lds
in
test
jecxz
les
add
xor
and
test
cmpsb
cmpsb
out
fcom
pop
hlt
or
add
add
mov
mov
adc
data16
xor
cmp
push
jmp
test
lret
mov
jecxz
das
adc
cwtl
andl
mov
mov
cmp
lahf
cmp
lret
sti
cwtl
cmp
leave
sbb
in
ljmp
mov
add
add
pop
mov
and
cmp
pop
stos
ss
mov
xor
add
sbb
pop
mov
cmp
aam
mov
rcl
fucomip
xor
rolb
jo
inc
popf
xor
jne
mov
adc
jo
sbb
dec
cmp
into
insb
imul
inc
aas
addr16
jo
add
xchg
push
pop
mov
int
loop
mov
push
dec
hlt
pop
repnz
inc
cmp
ja
call
out
leave
adc
jne
sbb
and
sub
inc
nop
mov
ret
stc
cmp
pop
adcb
ss
test
sahf
xor
mov
fldt
rorb
jb
sub
stc
nop
fidivrs
cld
mov
pop
scas
xor
sbbl
push
xor
cmp
push
ljmp
jno
sub
fnsave
es
cld
xchg
push
pushf
lods
inc
into
jb
mov
out
lret
bound
lds
iret
testb
je
push
out
dec
xchg
pop
sahf
imul
sbb
inc
fisubrl
mov
inc
mov
mov
fnstsw
movzwl
test
xor
movsb
cmp
sub
fnstenv
scas
dec
loopne
sub
mov
push
lods
lods
push
xchg
jmp
push
jmp
sub
pop
movsl
dec
loopne
jle
mov
rcrl
lods
inc
dec
repnz
and
bound
shr
repnz
pop
out
adc
lahf
inc
call
es
insl
mov
mov
rorb
cli
cmp
shlb
pop
sbbl
data16
ss
or
mov
fldcw
rorl
fdivl
sub
pop
stos
cli
xchg
fdivrl
std
scas
std
sbb
add
int
and
jmp
jbe
push
test
jb
es
add
jb
fdivl
xchg
stc
jno
mov
adc
testb
pop
scas
inc
inc
xchg
loopne
fadd
pop
push
mov
movsb
cmp
adc
mov
dec
loope
aad
pop
add
adc
push
or
jbe,pt
in
mov
ret
imull
jnp
inc
out
xchg
dec
leave
pusha
jnp
shrl
fwait
jg
roll
jo
xor
call
test
lock
lret
xchg
pop
bnd
repz
xchg
sub
jnp
push
dec
sbb
jbe
lock
mov
cmpsl
ds
std
arpl
sub
test
leave
xor
cli
xchg
popa
clc
push
mov
dec
loope
inc
pop
insl
push
movsl
lcall
sub
orl
data16
scas
inc
add
in
test
stos
or
lock
mov
xchg
pop
scas
imul
repnz
insl
add
sub
sahf
pusha
lods
xchg
sub
mov
mov
or
jecxz
in
std
xchg
jmp
xor
pop
imul
test
outsb
bound
std
xchg
jmp
aad
imul
mov
loop
sbb
imul
dec
fs
in
rcrb
cmp
data16
xor
in
mov
mov
lret
shrl
mov
scas
inc
jne
fnsave
test
push
out
dec
dec
loop
xor
popa
cmpsb
sbb
cmp
dec
out
jp
pop
lock
mov
push
out
aas
jnp
ret
pop
push
sbb
xor
dec
outsl
push
jl
iret
data16
dec
in
push
lea
cltd
outsl
push
int3
mov
mov
cmpl
outsb
sahf
mov
adc
push
lea
cmp
pop
push
int
iret
mov
inc
call
aaa
jnp
data16
pop
repnz
mov
movsl
cmp
ss
ss
cmpsl
sarl
stc
nop
jle
pop
imul
jecxz
jp
adc
pop
fnstenv
sti
xchg
je
sbb
fidivrs
fnstenv
ss
scas
push
in
fnstsw
testl
in
aad
out
ds
outsw
aaa
lods
inc
data16
hlt
call
xor
fs
jmp
aas
pop
hlt
insl
xor
fbstp
mov
outsb
in
test
xor
cmp
add
mov
cmp
aas
push
imul
out
cmp
cs
mov
jne
ljmp
ret
push
ljmp
adc
outsl
mov
sbb
inc
imul
push
ljmp
pop
jne
std
xchg
lock
mov
test
jl
lock
int
hlt
out
sub
sbb
fs
add
pop
call
or
repz
mov
xchg
mov
sbb
adc
sub
sub
push
ljmp
jmp
mov
fildll
dec
and
inc
or
jbe
addr16
mov
and
rcl
cs
lret
cmpsl
ds
xor
push
mov
mov
fisubrl
mov
sbb
pop
jae
pop
test
into
shlb
leave
sbbb
sbb
aam
imul
mov
lds
and
adc
push
sub
pushf
pop
insb
add
mov
fisttpl
das
cmp
sbb
mov
inc
subb
xlat
sti
dec
loop
stc
inc
icebp
stos
inc
and
in
andl
cmp
or
testl
lea
sub
adc
into
cld
and
es
push
ljmp
sti
xchg
leave
popf
mov
lret
in
insb
adc
pusha
negl
cmp
outsl
xor
mov
stc
nop
mov
xchg
or
sub
imul
push
mov
into
and
sbb
sub
cmp
testb
mov
cmpsb
call
or
and
sub
adcb
movsb
loopne
pop
sbb
lock
cmp
lock
cmp
addb
into
gs
ljmp
inc
lock
jmp
das
lret
mov
in
loop
sbb
jne,pt
jo
cmpsl
mov
fnstsw
push
psubsb
inc
sbb
fcomi
bound
insb
subl
mov
push
or
xor
sub
cmp
outsl
push
scas
cmpl
repz
or
cwtl
das
push
and
push
jge
dec
stos
jl
sub
enter
es
adc
push
dec
push
xchg
nop
pop
test
jmp
mov
or
dec
loopne
sub
shlb
adc
popa
clc
adc
adc
outsb
es
scas
push
mov
mov
loopne
clc
adc
dec
push
jne
test
mov
or
sbb
xchg
aaa
loop
test
aas
stos
subb
mov
inc
pop
mov
lcall
repnz
jmp
push
sti
test
cmpsl
dec
push
jae
les
push
mov
out
jbe
adc
xchg
sbb
sub
fxch
dec
clc
sub
push
sub
cmpsb
mov
mov
out
xchg
out
outsb
add
iret
fiadds
jno
stc
shlb
dec
es
cmp
mov
lahf
sub
sbb
pushf
add
leave
mov
jno
jle
js
mov
popf
loopne
pusha
add
loop
fnsave
xor
mov
push
stc
jge
push
test
mov
shll
sbb
movsl
sbb
dec
push
test
inc
lahf
sub
cmp
pop
shrb
imul
iret
jbe
out
je
out
dec
xchg
inc
cld
push
cmpsb
pop
xor
nop
inc
ret
icebp
sbb
movsl
fmul
jae
idiv
out
sub
cmpb
mov
in
scas
fadd
add
add
pop
pop
data16
pop
out
or
faddl
inc
sub
jmp
push
jbe
push
mov
cltd
cmpsl
test
out
xchg
mov
adc
inc
ret
push
lods
jnp
icebp
aam
push
push
xchg
out
xchg
sub
pop
incl
les
mov
dec
aad
and
inc
add
and
pop
xchg
sub
add
insb
dec
cli
or
ja
xchg
sub
cli
hlt
push
push
cmpsb
mov
push
daa
sbb
out
out
xchg
push
subl
jb
stc
aad
xor
push
sub
mov
sarl
pop
js
push
cmpsb
or
in
inc
lahf
inc
cmp
pop
dec
test
mov
mov
inc
pop
out
mov
and
movsl
xchg
mov
inc
fistl
aas
xchg
lock
scas
outsl
scas
mov
shrl
scas
testl
int3
decl
into
outsl
orl
jl
jns
cmc
xchg
fdivrl
std
jp
insl
inc
jp
xlat
mov
out
in
ficompl
xor
scas
scas
inc
loopne
mov
or
lret
cld
fidivs
shr
cwtl
je
dec
and
lret
push
push
jp
popf
lock
inc
jmp
pop
mov
mov
sub
lds
inc
and
add
imul
imul
sub
cmp
mov
lods
jp
fbstp
movsl
xor
fbld
shrl
xchg
push
or
nop
jecxz
or
sahf
hlt
mull
and
fistpl
fwait
push
sbb
push
out
imul
dec
mov
dec
sahf
pushf
rcr
nop
daa
fidivl
aam
mov
pop
repnz
fcoms
jp
adc
cs
lahf
clc
jmp
das
rorl
mov
cmp
jbe
fnstenv
xor
shlb
xchg
loop
push
out
cld
test
outsb
add
andl
push
movsl
push
mov
popa
std
pop
mov
lods
push
icebp
xchg
sub
mov
loope
add
cs
gs
lcall
bnd
pop
icebp
ljmp
adc
dec
and
jns
inc
fadds
rcrl
push
call
sbb
fidivs
xor
cltd
sbb
ja
cmp
xor
pop
pop
out
dec
jnp
mov
addr16
xchg
jmp
mov
or
mov
insl
ljmp
lock
insl
add
sbb
xchg
push
push
movsl
mov
mov
ret
add
fsubrs
sub
loope
lods
testb
stos
and
das
add
push
inc
dec
inc
imul
mov
shrb
dec
or
data16
sahf
xor
lods
push
mov
mov
hlt
sbb
rorl
dec
inc
pop
sahf
dec
hlt
data16
sbb
mov
xchg
inc
das
insb
mov
dec
in
fadd
push
std
stos
jge
clc
push
fbstp
adc
mov
aad
mov
ret
fsubrs
in
rcrb
mov
popf
rdmsr
push
out
push
sub
mov
fsubrl
fbld
in
loop
push
sbb
jae
dec
lcall
cmp
scas
sub
xlat
outsb
adc
ss
xor
pushf
lahf
pushf
push
jmp
mov
jb
into
jnp
int3
xor
nop
daa
subps
mov
fistpll
out
int3
arpl
adc
andl
push
or
push
arpl
mov
push
rolb
pop
sahf
mov
and
fistps
xlat
pushf
clc
xor
gs
cmc
ljmp
adc
aas
jge
lds
xor
ret
mov
push
xchg
outsb
or
cmc
mov
in
fisttps
out
xchg
fisttps
out
push
cmp
add
test
imul
jns
ds
stos
inc
dec
push
xchg
frstor
pop
xchg
sti
aad
fdivrl
repz
rcrl
mov
xor
aam
pop
sub
orb
loopne
cmp
int3
fsubs
or
xchg
cltd
and
cmp
mov
mov
xor
pop
dec
pop
shrl
loopnew
mov
add
shlb
sbb
sbb
xor
or
es
in
jp
out
movsb
out
insb
add
mov
and
xchg
sub
xchg
mov
dec
pop
sbb
loopne
nop
ja
pushf
xor
and
push
loop
leave
mov
rcll
lods
push
pop
out
xchg
outsb
add
daa
pushf
mov
test
xchg
sub
mov
dec
rcr
outsl
je
shlb
xchg
add
insl
xor
mov
xchg
ret
test
sub
imull
dec
loope
popa
push
call
xchg
lods
sbb
cmp
xchg
mov
mov
mov
xor
loopne
cmc
pop
shrl
push
call
repnz
movsl
jle
adc
bound
dec
loope
fmull
push
push
add
add
push
xchg
dec
mov
test
cmpsb
cmp
xor
pop
movsb
pop
fnsave
loop
pminub
test
sub
xchg
xor
or
jmp
push
mov
add
ret
cmp
adc
cmp
ja
outsb
cmpb
xchg
insl
cmc
ffreep
pop
ficompl
cmc
mov
in
outsl
jae
stos
lods
mov
mov
xor
adc
cmpsb
adc
ds
add
add
sbb
jp
xchg
outsl
stos
inc
mov
int3
enter
ret
or
jle
adc
js
popl
mov
rclb
cmpsl
lahf
sbb
flds
lds
pusha
notl
dec
jecxz
jnp
adc
mov
shrl
mov
jo
xor
mov
rcll
inc
repz
inc
or
and
es
decl
inc
fdivrl
xchg
arpl
lds
addb
sbb
jno
sahf
adc
ss
aaa
adc
add
push
sub
inc
int3
pop
not
scas
stc
nop
mov
rcll
scas
or
xor
push
shll
pop
in
jb
dec
push
out
pop
mov
mov
rcrl
adc
sub
std
xchg
cwtl
sbb
sbb
mov
aad
xor
mov
dec
and
popa
ljmp
xchg
movsb
xchg
mov
push
shrb
arpl
mov
jb
inc
faddl
popf
push
movsl
ret
cli
xlat
jmp
ret
fadds
sbbb
repz
loope
dec
nop
daa
dec
dec
push
inc
mulb
fidivs
fmull
xchg
stos
dec
lods
inc
jae
or
lock
mov
dec
testb
arpl
lahf
push
into
fs
pop
jl
mov
pop
lds
jb
daa
sbb
stc
test
ret
sub
sahf
xor
fldenv
and
adc
clc
movsl
bound
enter
stc
lock
add
adc
and
pop
adc
gs
enter
outsb
jne
dec
out
xchg
push
popf
and
insl
add
dec
and
adc
and
mov
popa
clc
push
inc
pop
jg
outsl
push
sahf
cwtl
in
mov
rolb
lcall
and
mov
inc
xlat
mov
aad
cmc
sub
and
out
inc
jl
jp
inc
fidivl
loope
clc
dec
daa
mov
mov
jb
insl
xchg
test
xchg
shll
in
cld
sbb
add
sbb
inc
cltd
xor
insb
pop
icebp
jle
mov
mov
aad
push
in
sub
xchg
pushl
push
inc
shrb
aaa
aas
aad
lock
repz
jecxz
out
push
movsl
or
push
cmp
sub
fs
xchg
cmp
mov
sbb
push
push
inc
xchg
sub
cmp
lods
ret
pop
ds
mov
push
adc
push
and
push
movsl
inc
inc
xchg
cs
jo
ret
xchg
or
shrl
push
imul
dec
xchg
xchg
iret
insl
pop
mov
call
cmp
pop
dec
addr16
fimuls
loope
mov
lock
call
cmpsl
or
mov
rclb
mov
lret
pop
icebp
mov
shlb
fistpll
push
lret
lret
daa
xchg
sub
pop
mov
mov
std
dec
inc
fdivrl
fstl
jns
mov
or
loope
cmp
rorl
xchg
sub
aam
inc
gs
or
sbb
or
sub
cld
xchg
out
mov
adc
ds
data16
ret
inc
pop
in
test
pop
hlt
cmp
jnp
push
push
sub
ds
cltd
xor
push
dec
fisttps
mov
std
xchg
dec
out
dec
mov
add
xchg
cmc
loop
clc
mov
cmpsb
cmc
adc
cwtl
push
push
lds
sbbb
shlb
bnd
cmp
adc
pop
repz
xchg
cmp
adc
mov
out
ja
das
mov
in
xchg
mov
clc
mov
cltd
pusha
adc
insb
mov
int
mov
xor
into
dec
adc
mov
das
mov
adcb
pop
mov
imul
mov
or
lret
xor
adcb
insb
movsb
jbe
mov
ret
mov
sub
lods
add
fwait
xor
cmp
cmp
and
int3
mov
inc
jge
jae
enter
imul
subl
add
jno
pop
mov
xchg
sub
lds
pop
rcll
push
out
jnp
dec
loop
lahf
jge
loopne
jge
mov
nop
daa
cmp
pop
les
and
cmp
jne
dec
cmpsl
dec
mov
jle
leave
pusha
add
icebp
mov
fdivl
jns
mov
or
lret
sbb
push
repz
and
jo
movsb
inc
push
in
jbe
mov
leave
sbb
sub
int3
arpl
mov
into
gs
mov
adc
ss
movsl
addr16
loopne
mov
add
fimull
or
and
sub
lcall
cmpsl
loop,pt
sbbb
add
pop
xor
push
out
mov
pop
push
stos
add
jmp
bndstx
in
push
inc
fmuls
stos
pop
neg
popa
pop
scas
xchg
cld
jge
cs
int3
in
pushf
xor
mov
jne
mov
shrl
lods
xchg
sub
jp
mov
xor
pusha
test
sub
fadds
jno
or
les
jl
jl
pop
sahf
push
in
iret
cmp
add
mov
pop
mov
je
xchg
test
leave
xor
xchg
arpl
mov
mov
cmp
cmp
or
pop
icebp
pop
in
stos
adc
ss
addr16
xchg
sub
mov
fldt
or
mov
pusha
leave
lock
subl
popa
push
outsl
sub
mov
rcll
jp
mov
frstor
data16
mov
shr
sti
andb
mov
fdivl
jmp
rorl
adcl
out
add
es
mov
and
addr16
fmull
gs
sahf
mov
pusha
mov
adc
mov
fildl
xchg
add
shrl
and
lahf
ss
cmp
mov
fcmove
arpl
cwtl
das
andb
and
jg
mov
lret
call
fwait
jb
insl
add
xchg
dec
jno
cld
stos
in
insb
add
int3
int
idivb
add
push
sbbb
mov
fdivl
push
int
mov
popa
pop
mov
ja
jb
cli
stos
fucomp
jg
int
mov
sub
jnp
jae
lods
arpl
into
adcb
mov
mov
aam
fs
xchg
sahf
push
mov
fsubr
lods
sbb
aad
mul
js
push
push
jmp
mov
popa
clc
clc
jb
and
int
and
jle
and
enter
jmp
sbb
dec
outsl
xor
lret
lock
jecxz
adc
aaa
mov
jno
xor
xchg
int3
jle
fwait
cmpsl
in
outsb
add
repz
and
ljmp
fisubrs
movb
xor
int
add
pop
repnz
pusha
fs
cltd
int3
xor
cmc
mov
js
push
add
std
xchg
stos
pusha
push
scas
cmc
mov
jb
push
add
jl
jno
dec
stos
pop
pusha
testl
pop
loopne
push
hlt
sub
sub
dec
popf
xor
into
cld
xchg
clc
cltd
or
inc
jecxz
mov
mov
push
mov
mov
sub
inc
aam
mov
lahf
fnstenv
rcrb
jns
or
les
std
fs
sahf
push
shrl
mov
sbb
xchg
or
movsl
xor
daa
mov
mov
mov
xor
cmpsb
cmp
and
scas
inc
jl
pop
xor
jge
push
je
xchg
out
test
mov
xchg
in
inc
std
xchg
jp
in
test
fwait
es
and
push
pop
movsl
lods
inc
fiadds
cmp
cmp
add
scas
inc
loopne
jge
outsl
add
cmp
pop
out
test
test
push
lods
insl
hlt
push
mov
mov
dec
mov
xchg
sub
xlat
and
pop
divl
xor
dec
test
lret
cmc
lods
jne
push
testl
lods
inc
cmc
mov
mov
sahf
adc
push
ljmp
lods
xor
jge
notb
mov
dec
adc
jl
lods
ss
jno
sti
xchg
stc
xchg
repnz
sbb
xchg
inc
in
cmc
mov
or
and
sti
mov
mov
fisubl
adc
mov
inc
in
add
mov
add
ljmp
movsb
std
xchg
filds
and
add
and
mov
and
fdivl
pop
push
ret
pop
mov
stos
inc
pusha
stos
jl
aam
jne
mov
fsubrp
orl
sub
mov
adc
scas
loop
push
sbb
aas
xchg
sub
lcall
ja
or
shll
push
or
jl
pop
jne,pn
pop
jp
mov
cld
xchg
add
cmc
mov
and
mov
adc
sbb
xchg
ret
divb
jne
inc
add
mov
xchg
push
push
in
xorl
mov
ss
sbbl
xchg
inc
out
je
sbb
les
adc
adc
inc
faddl
cmpsb
outsl
push
roll
mov
loope,pn
adc
push
out
mov
out
gs
in
aad
aam
shl
ss
sbb
push
mov
cmp
jp
mov
mov
fldl
scas
nop
sub
lret
in
xchg
sub
xlat
mov
add
insl
add
and
xchg
sub
jae
xchg
lret
add
insb
je
xor
push
xchg
lock
jbe
std
movsb
jecxz
test
addr16
hlt
cmp
leave
outsb
adc
dec
loopne
arpl
add
ljmp
bound
xchg
jnp
fcmovnbe
outsl
add
sub
or
test
les
xchg
ljmp
and
dec
add
cmp
push
negb
mov
and
stos
mov
flds
mov
cmp
push
out
xchg
inc
cli
lea
adc
jecxz
or
call
cmp
sahf
cmp
mov
ljmp
in
ss
fstpl
pop
push
test
pop
jmp
lods
jl
aam
insb
stc
mov
mov
daa
fstpt
pop
dec
mov
xor
jns
arpl
leave
hlt
xchg
stc
aaa
ss
push
daa
rolb
fnstsw
pop
in
or
test
out
imul
aaa
je
or
mov
mov
fcoms
lcall
bound
adc
mov
inc
lret
pop
popa
out
pop
sub
rcrl
mull
int
mov
pop
shlb
bound
in
pop
and
mov
arpl
ficompl
mov
mov
ds
xor
adc
add
adc
xor
mov
enter
jne
fsubs
fisttpl
repnz
out
mov
fstpl
lcall
or
push
jle
mov
outsl
scas
sub
out
mov
fnsave
std
lods
inc
adc
jmp
xor
xchg
pop
cmpl
arpl
mov
and
inc
icebp
add
push
scas
inc
je
aam
arpl
mov
or
dec
sbb
xor
xor
arpl
lret
push
nop
and
mul
xchg
sbb
shlb
mov
ljmp
shll
cli
jbe
sbb
filds
mov
bound
int3
push
mov
pop
jno
mov
aad
lods
xchg
xor
jl
push
test
xchg
xor
dec
hlt
xchg
jbe
lds
lcall
mov
shl
jnp
aas
lahf
and
or
jp
outsb
mov
jp
fstp
pusha
sti
repnz
js
adc
jg
sub
bnd
lahf
bnd
mov
jle
lret
adc
bnd
sub
nop
jno
hlt
jns
mov
js
stc
sub
pop
add
ja
sub
and
lret
add
int3
lahf
push
push
es
repnz
aas
lea
cwtl
jno
mov
mov
sbb
add
mov
pop
cmp
pop
push
bound
push
aad
xchg
loopne
jp
or
mov
jp
inc
out
xchg
adcl
lock
adc
or
and
popf
sbb
ret
sub
adc
mov
mov
dec
scas
dec
test
fidivs
aam
loope
adc
xchg
inc
es
pop
addr16
scas
cwtl
jns
and
int3
lods
inc
decb
push
in
cmp
shrl
pop
outsb
add
movsb
mov
sub
lds
mov
add
pop
xor
push
pop
mov
pop
fwait
test
mov
lret
popf
xor
dec
and
xchg
mov
jns
call
or
cmp
mov
mov
xchg
sub
jmp
mov
xor
push
shrl
lea
sbb
popf
xor
std
pop
scas
cs
dec
dec
adc
cwtl
mov
fnstcw
or
adc
pop
dec
das
jns
sti
xchg
mov
dec
in
rcrb
mov
jmp
add
mov
push
cltd
cmpsl
ds
fbstp
adc
xchg
sub
jnp
xor
add
jns
push
test
sbb
cmpsb
ja
mov
inc
or
and
xor
pusha
or
lock
imul
pop
mov
enter
lret
imulb
jl
je
pushw
mov
mov
xor
rcrl
inc
mov
inc
cltd
xchg
pop
lea
enter
or
movsb
pusha
lcall
andl
sub
mov
in
xor
jae
ret
test
enter
sbb
loopne
xchg
insl
jle
or
fadds
xchg
into
mov
dec
sbb
inc
divb
adc
xchg
out
subb
xor
fs
outsl
addr16
or
ret
bound
add
outsb
cmp
mov
mov
in
pop
lods
add
lods
sbb
add
pushf
adcb
mull
mov
cmp
ds
push
sbb
mov
shl
cs
cltd
or
lcall
push
test
lcall
test
lock
sub
mov
xlat
push
outsb
bound
aas
xor
out
andl
sub
es
mov
repz
sbb
es
scas
loope
dec
aam
clc
aas
sbb
andb
out
psubusw
add
repnz
mov
sahf
aas
call
jnp
cld
mov
fdivrl
repnz
and
mov
mov
dec
adc
mov
mov
and
jo
popf
mov
daa
fcoml
push
adc
and
mov
xchg
xchg
mov
in
add
jp
or
out
enter
dec
cmp
inc
jae
push
adc
or
mov
shll
pop
mov
mov
mov
nop
xorl
adc
sbb
setl
lds
out
fistpl
mov
lods
jmp
nop
and
outsb
lock
pop
imul
push
jo
pop
push
test
lock
pop
push
pop
mov
mov
fcoms
push
enter
push
rcll
scas
cs
loopne
cmp
jnp
das
stc
add
jp
ret
cmc
xchg
loope
or
cltd
sbbl
gs
xchg
daa
lods
call
out
mov
daa
add
les
adc
sbb
cli
cmovnp
inc
cmp
test
pop
std
loopne
dec
pop
stc
imul
loopne
int
stos
std
fildll
push
fistl
mov
cltd
cs
sub
mov
sub
dec
in
loope
fcomps
sub
outsb
mov
push
shrl
add
push
icebp
in
jo
xchg
cltd
lods
jne
neg
inc
mov
enter
lea
mov
aaa
lcall
movl
and
dec
mov
inc
lea
cmp
pop
sub
icebp
mov
mov
pop
pop
jns
lods
rcrl
xorl
pop
cs
orb
or
lahf
iret
jnp
out
daa
mov
mov
xchg
fisttpll
jb
xor
dec
pop
mov
xchg
sbb
cld
shl
sbb
insl
rcrb
aad
das
xchg
movq
cmpl
xor
cmpsl
into
test
mov
inc
inc
shlb
arpl
mov
pop
dec
xchg
push
push
xchg
leave
adc
or
cmp
xchg
push
arpl
cmp
pop
insb
or
add
push
pop
cmp
pop
mov
adc
shll
push
mov
sub
mov
in
dec
jmp
popf
js
dec
sub
push
or
rorl
into
sub
hlt
sub
mov
fs
sbb
testl
xor
jmp
sbb
repnz
xchg
sub
test
sbb
jb
xchg
jnp
mov
pop
ljmp
stos
mov
jp
pushf
jmp
jae
out
or
popa
shr
lds
jp
sbb
xchg
inc
hlt
xchg
xchg
dec
in
iret
xor
stc
add
sub
hlt
repnz
rcll
idivl
sqrtps
xchg
out
jbe
and
test
adc
push
loopne
cwtl
cmp
in
mov
dec
inc
dec
stos
leave
mov
mov
test
jae
jge
push
fs
fcomps
mov
xlat
ss
or
jne
inc
add
notl
xchg
loope
lea
mov
dec
pop
sub
es
jnp
pushf
or
mov
xlat
repz
in
jb
push
pusha
jb
dec
cmp
test
movb
mov
pop
cmp
push
fisubrs
data16
jne
cmp
inc
dec
ret
push
fidivrl
enter
cli
dec
push
cmp
outsl
fcompl
jo
shll
cs
sub
inc
inc
sar
lods
mov
ds
pop
jb
mov
cmpsl
icebp
jge
inc
pusha
add
cmc
scas
push
cld
xor
hlt
dec
filds
push
fdivrl
add
xchg
imul
jecxz
pop
mov
js
stos
iret
lods
cmpsl
lock
loopne
xor
fs
daa
adc
call
fstp
push
lods
sub
int3
test
xchg
xor
push
rcrl
mov
popf
jb
push
loopne
adc
inc
leave
and
jae
push
adc
adc
ficompl
jno
cmpb
into
or
xchg
jge
push
fwait
mov
cltd
pop
adc
jnp
pop
jg
pop
adc
movsl
into
dec
lea
fisubl
cmpsb
xor
fcompl
stos
or
cld
sub
and
mov
push
adc
mov
es
fisubl
add
dec
jo
and
lds
loopne
jecxz
call
mov
ljmp
aad
or
sahf
dec
test
loope
aas
dec
jge
arpl
mov
repz
xor
and
add
loop
inc
dec
jge
xorb
out
or
sbb
fwait
or
xchg
insb
stos
addr16
xor
adc
cwtl
in
stos
loope
sub
inc
mov
enter
pushf
sti
cmp
test
pushf
cwtl
jno
jo
je
cwtl
xor
mov
pop
loop
sub
aas
fdivrl
add
andl
add
out
xor
xor
mov
mov
std
add
pop
test
sbb
inc
adc
xchg
aaa
movl
repz
and
cmp
push
sarl
inc
adcl
pop
pavgw
xchg
sbb
mov
movq
call
in
mov
mov
push
xor
add
and
fmulp
mov
mov
inc
icebp
gs
cmp
xchg
mov
xchg
and
adc
lahf
sub
adc
or
ds
movsl
bound
push
popf
sub
nop
jo
sub
dec
push
sub
insl
pop
dec
xlat
insl
rorl
pop
mov
sub
adc
decb
add
xchg
mov
cmp
lods
aaa
in
ds
adc
fisubrl
mov
ljmp
mov
inc
repnz
mov
adc
sbb
sbb
sub
je
xlat
es
xchg
pop
pop
loopne
cld
out
repnz
jnp
or
xor
or
insb
rolb
data16
inc
aad
sub
lret
cmp
movl
lahf
sbb
jbe
and
adc
js
sub
fistl
rep
popf
aam
mov
shl
pop
ja
add
jae
and
mov
das
pushf
xor
or
mov
loopne
sahf
test
roll
les
mov
or
addr16
lock
nop
negb
xor
or
sub
sub
rcrl
jbe
js
orl
adc
clc
cmp
or
or
imul
outsl
push
rorb
fsubrs
test
cltd
xchg
mov
xor
or
adc
std
call
cmpsl
nop
jmp
mov
call
xchg
jg
fstpl
scas
jl
dec
sub
lds
xchg
jmp
push
mov
mov
push
cmpsl
jns
xchg
and
test
adc
pop
inc
in
inc
aas
fistpl
dec
push
or
sub
mov
xor
add
inc
cs
lahf
pop
cmpsb
test
sub
inc
mov
push
mov
adc
aas
cmpsb
mov
adc
je
inc
arpl
pop
bound
cmp
cmp
mov
dec
add
enter
cmp
imul
ja
dec
cmp
js
dec
or
icebp
mov
sbb
int
adc
mov
repz
rol
mov
repnz
xchg
add
pop
jnp
cmp
iret
rcrb
push
xchg
lret
pop
sbb
adc
icebp
jle
insb
pop
cmp
sbb
xchg
dec
sti
aam
jb
pop
sbb
pushf
test
pop
ret
shlb
mov
or
in
popf
loop
repnz
pop
xchg
fsubrl
xorl
adc
sbb
fldcw
xor
xchg
xchg
ljmp
cwtl
lock
add
loopne
cmpsb
in
mov
mov
test
fs
dec
adc
xor
and
mov
test
movsl
mov
xor
jnp
insb
xchg
test
inc
outsb
xor
jns
jl
mov
incb
mov
aam
mov
mov
inc
mov
scas
jb
into
mov
divl
mov
dec
insb
fsubrs
mov
lods
shll
das
pop
lods
xor
push
inc
jp
loop
sti
imul
les
mul
js
leave
push
adc
call
sysret
rcr
in
cmp
test
lds
mov
insl
pop
movl
rorb
insl
pop
inc
mov
sub
xor
insl
xor
mov
adc
leave
add
gs
pop
add
int3
add
repz
sarl
ja
pop
in
addr16
sbb
pop
sbbl
rcr
call
jb
divb
in
in
mov
les
and
filds
push
lds
jmp
cmp
sahf
sub
cmpsl
loope
lea
int3
adc
mov
mov
outsl
xchg
insl
jns
sbb
mov
hlt
rorb
dec
or
mov
mov
xor
insb
mov
mov
call
sub
cmp
stos
mov
call
bound
and
les
orl
js
mov
and
data16
test
lock
mov
cmp
xor
decb
fdivrl
cmp
inc
mov
mov
bound
iretw
pop
sub
pusha
or
mov
dec
les
mov
iret
gs
cmp
outsb
ja
mov
in
pop
mov
jp
insb
pop
scas
sub
dec
jbe
pushf
shll
pop
jg
adc
xlat
xor
mov
add
fs
jl
mov
nop
insl
ja
jmp
mov
icebp
mov
cmp
ds
fucom
in
xor
pop
adc
jle
cli
sub
lea
push
arpl
or
sbb
jo
jo
mov
pop
outsl
adc
xor
push
dec
xor
cwtl
push
mov
loope
pop
cs
mov
es
and
ljmp
nop
pop
mov
sarl
pop
stos
mov
xorb
add
inc
add
pop
cmp
dec
int
mov
incl
add
ret
jnp
push
jno
pop
call
or
mov
shll
inc
fbld
or
sahf
cmpsl
insl
mov
mov
js
fmuls
into
mov
in
cmp
jbe
scas
sub
cmp
dec
or
notl
adc
cld
jmp
and
roll
out
cmp
roll
stos
lret
pop
and
and
lods
lcall
push
das
addr16
pop
and
insl
nop
xchg
fisttps
push
ss
mov
stos
jecxz
cmp
cmp
ss
adc
decl
cmp
aad
int3
cmp
in
sbb
ljmp
insb
cmp
lds
movsb
fcmovu
rorb
dec
lret
cli
rcl
iret
imul
cwtl
mov
and
fstpl
sub
jecxz
rcr
add
cs
cs
pop
pop
add
roll
pop
xor
xchg
dec
rol
dec
xchg
les
repnz
cld
pop
rclb
outsl
sub
repnz
jl
or
ss
xchg
cwtl
cltd
sar
shl
fcmovu
das
je
sbb
jg,pt
data16
loop
mov
popa
jnp
xchg
out
sub
push
repnz
adc
pop
adc
sub
and
jg
out
inc
xor
int3
inc
dec
pushf
inc
ljmp
mov
lock
stos
and
fistpll
cmp
mov
daa
xor
insb
test
add
lret
mov
push
std
adc
aam
shl
sbb
pop
adc
cmp
pop
xor
add
xor
mov
andl
pop
and
call
dec
and
fiadds
push
ja
push
push
fwait
out
addr16
push
je
inc
jne
dec
xor
push
add
and
pop
mov
xchg
fiaddl
test
mov
les
jecxz
sbb
pop
mov
and
jp
cmp
imul
cmpl
mov
pop
je
pop
call
test
repnz
push
sarb
hlt
out
xchg
ret
ja
dec
dec
adc
and
leave
das
aad
inc
pop
xchg
popf
mov
ret
jle
and
ret
push
and
and
push
sbb
lret
les
fstpl
mov
scas
fcmovne
jg
or
xchg
lds
scas
push
les
fimull
shrb
adc
fucom
add
xchg
test
out
lock
add
push
cmp
fimull
xor
out
das
dec
and
pop
add
not
mov
stos
mov
jp
push
xor
xlat
cltd
jne
mov
sarb
sarl
jmp
in
aaa
adc
js
cmp
adc
das
sarb
add
out
test
rcrb
in
repnz
cwtl
mov
test
mov
mov
out
jne
jo
push
test
shlb
pop
dec
sub
cmpsb
pop
aas
mov
int3
add
in
out
add
add
das
pop
pop
test
xlat
pop
test
xlat
adc
and
pop
inc
sub
aaa
cmpsb
dec
loop
push
pop
sti
add
sbb
cltd
cmpsl
pop
into
cmp
xor
push
xchg
xor
nop/reserved
sbb
jbe
fisttpl
cmpb
sahf
andl
imul
and
rcpps
push
cmc
les
arpl
xor
sbb
movsl
adc
stc
lret
mov
inc
lods
xor
mov
pop
sub
sub
lret
mov
mov
adc
pusha
sbb
mov
xor
test
mov
jb
cwtl
or
mov
adc
cmc
movsb
outsb
or
lcall
ss
and
shl
clc
jmp
cmp
fsubrp
cmp
fstpl
jae
and
xchg
test
outsl
and
cmp
repnz
jnp
rcrb
jmp
cmp
aaa
arpl
dec
push
mov
and
rcrl
sbb
aam
xor
movsl
std
lds
mov
mov
js
int3
fbld
ds
test
mov
inc
out
repz
mov
mov
mov
int3
jne
outsl
push
pop
nop
enter
push
int3
out
mov
in
shrl
or
and
pop
push
mov
in
dec
mov
ret
cmp
es
sub
mov
mov
jbe
fstps
in
rorl
mov
mov
movsl
xchg
jle
out
leave
je
add
sbb
jg
xorb
inc
sbb
in
insb
pushf
lea
push
mov
es
and
shl
out
inc
cmp
and
sarb
daa
lahf
fs
push
inc
sar
loope
es
jl
std
mov
insl
or
pop
sar
sahf
arpl
jb
cmp
adc
xchg
sbb
inc
hlt
xchg
add
nop
inc
dec
jae
ret
mov
arpl
xor
sub
or
mov
mov
ljmp
push
fucom
pop
sub
pop
cmp
adc
dec
and
out
dec
sub
stos
jae
imul
arpl
mov
and
rorb
jnp
aad
lcall
xchg
mov
sub
es
outsb
aam
sub
adc
lock
ljmp
adc
and
sbb
ds
popf
je
xor
test
push
mov
or
dec
mov
jo
xchg
mov
jo
xlat
lods
aad
faddl
std
or
test
shll
add
sbb
dec
adc
ja
sub
repz
fstps
std
pop
rolb
mov
lret
fldt
add
popa
jle
idivl
xchg
inc
mov
fimuls
in
cs
aam
fldcw
fcomps
cmp
xchg
xchg
or
mov
inc
out
orl
or
jns
pop
xor
jnp
cwtl
jmp
mov
fdivrl
cmpl
adc
subl
add
cld
out
and
jle
enter
cmp
scas
fisubs
fisubl
aad
clc
push
icebp
lods
mov
imul
imul
sbb
cmp
mov
mov
mov
rclb
jo
xchg
pop
pop
jns
cmpl
rolb
adcl
xor
stos
adc
lcall
movsb
cmp
and
cmp
ja
mov
sbb
rclb
jecxz
das
sub
jo
ds
mov
ror
xor
sub
iret
es
cs
xchg
dec
pop
pop
ret
int
cmp
cwtl
ss
mov
mov
pop
xlat
ss
sti
jle
lret
xchg
lods
add
fistps
pop
insl
mov
and
popl
add
mov
popl
daa
pop
pop
sbb
mov
leave
sub
js
push
lea
scas
or
cld
enter
call
das
push
or
xchg
lea
int3
push
cmp
adc
mov
cmp
cmc
pop
mov
or
in
push
sub
push
gs
cmp
xchg
std
dec
mov
xchg
movsl
sbb
gs
aaa
loopne
dec
pop
xor
in
cmp
xchg
jge
movsl
push
cld
jnp
movsb
icebp
xlat
mov
xchg
orl
aam
nopl
dec
mov
pop
cli
test
and
jne
dec
fsts
shrd
lds
inc
test
mov
out
repnz
call
lret
mov
pop
add
and
inc
mov
ss
push
sub
mov
sub
cmp
adc
inc
pop
out
or
daa
insl
adc
pop
lahf
aaa
inc
test
out
push
fstpt
adc
push
loopne
push
inc
mov
cmp
xor
mov
pusha
or
xor
stc
mov
xor
or
test
ret
push
mov
and
int3
jns
xor
out
cmpsb
popf
flds
inc
push
push
or
and
cld
xchg
int
sbb
inc
mov
inc
out
out
and
fwait
cmp
push
jg
xchg
insl
mov
push
sbb
and
daa
cs
xchg
cld
stos
push
mov
mov
xchg
cmpsl
stos
cmpsl
xchg
orb
orb
std
and
mov
cli
pop
jb
sub
jne
mov
dec
cmpsl
inc
pushf
fisubrs
dec
pop
mov
je
pop
xchg
adc
jbe
daa
sub
ds
pop
sahf
fcomp
lods
ret
inc
fistpl
dec
popf
leave
cs
int3
call
push
outsl
leave
imul
dec
sbb
dec
pop
pop
loope
int3
cltd
data16
cmp
movsb
pop
jp
lods
push
inc
sbb
adc
out
xchg
sahf
or
sbb
push
or
das
gs
fstp
push
movsl
mov
aam
xor
cmpsl
inc
lods
lahf
ds
pop
pop
rol
jl
cmc
imul
or
dec
mov
push
leave
inc
imul
pop
sub
sub
push
add
pushf
jns
les
cwtl
nop
mov
jns
aad
dec
adc
push
jnp
sti
push
dec
test
and
and
sub
push
shll
aam
cld
push
adc
mov
dec
adc
and
jnp
loope
pop
dec
mov
push
ljmp
imul
scas
adc
std
mov
inc
mov
test
cltd
aas
sub
ja
cmp
cmc
sub
out
addr16
aaa
and
fsubrs
push
cmp
sub
les
negl
fidivs
aad
inc
jns
add
dec
sahf
aaa
fwait
adc
setl
dec
gs
xor
out
sti
pop
xchg
ret
cmpsl
inc
jns
out
fiaddl
cli
mov
push
push
shrb
outsb
push
jo
jmp
movsb
into
xchg
mov
push
jo
bound
in
xor
pop
sub
in
nop
cmp
lds
cmp
roll
adc
data16
aam
push
cmpsl
cmpsb
outsb
fisttps
adc
push
repz
inc
adc
cmp
scas
enter
push
sbb
jmp
hlt
mov
jg
addr16
shrl
rcrl
inc
cwtl
fsubrl
pusha
sub
lock
mov
xchg
push
mov
jbe
rcr
mov
pop
fs
jecxz
stc
repnz
rclb
lcall
js
shlb
pop
push
outsb
jnp
xchg
loop
imul
imul
dec
das
stc
sarb
out
mov
pop
adc
and
ljmp
gs
and
fucomip
mov
push
inc
pop
jae
mov
fimull
call
pushf
outsl
mov
cmpsl
mov
jae
mov
aas
mov
mov
inc
lcall
or
and
fs
incb
inc
sub
adc
cmpsb
lcall
xor
pop
lret
jmp
pop
inc
mov
arpl
imul
mov
outsl
push
sbb
inc
sbb
mov
dec
mul
jae
nop
imul
out
cwtl
nop
ret
es
add
mov
jae
xor
dec
lcall
xchg
stos
pop
sbb
pop
out
fisttpll
mov
dec
add
lods
xchg
mov
add
jl
test
cltd
adc
sub
cmp
out
inc
sub
je
out
mov
add
pop
fs
pop
call
xchg
cwtl
mov
aas
into
dec
leave
mov
pop
imul
in
jnp
push
insl
cltd
out
xchg
jp
jl
cld
imul
mov
dec
add
or
push
cs
pushf
lahf
imul
push
sbb
mov
idiv
add
jle
push
popa
sub
add
pop
ret
and
jg
xchg
and
je
bound
int3
ljmp
xchg
cld
outsb
ja
cmpb
pusha
pop
popf
push
pop
fs
push
and
jns
int3
sbb
xchg
int3
jns
out
cltd
push
fs
add
xor
mov
mov
mov
xchg
ss
cwtl
lcall
mov
fxch
imul
jmp
xor
jmp
movsb
xor
in
sbb
in
aam
and
data16
push
fsubrl
movsl
in
pop
call
jb
enter
inc
mov
es
icebp
cmpsb
test
fwait
mov
es
aam
or
dec
add
test
mov
inc
jb
out
movsl
or
popf
dec
inc
mov
aas
sbb
jle
or
aaa
shl
loop
popl
in
lds
mov
mov
adc
or
shrl
int
lcall
lods
call
xorl
push
in
mov
jnp
xor
shr
dec
mov
rolb
outsb
stc
pusha
repnz
dec
jp
cltd
pop
scas
mov
test
pop
hlt
fsubs
inc
das
sub
mov
cmp
xorb
jecxz
in
aad
jecxz
popa
push
xor
inc
ret
add
jo
imull
loopne
mov
roll
mov
xchg
adc
jmp
std
call
cmp
addr16
sub
inc
adc
jno
dec
aam
jp
dec
mov
inc
pop
mov
sbb
shr
fstps
pop
and
adcb
xchg
adc
inc
fisttpll
repnz
jnp
push
sub
call
or
mov
cmpb
jmp
xor
int
sbb
jns
or
cmp
test
sbb
in
cltd
int3
inc
lds
push
stos
insl
movsb
xchg
clc
add
add
lret
and
movsb
lods
add
dec
out
lock
fsin
xor
pcmpgtw
testl
call
adc
jle
imul
sbb
lret
jl
cld
mov
sbb
pop
dec
lock
sub
sbb
insb
adc
shlb
orl
add
jb
hlt
push
data16
subl
push
dec
test
enter
push
jnp
adc
or
mov
aaa
pop
sub
sub
das
cs
fstps
add
mov
arpl
sub
jle
jnp
and
or
and
testb
adc
rep
cld
cmp
xchg
orl
push
fldl
out
inc
fwait
push
mov
adc
mov
mov
ret
pop
push
cmpsl
testb
rorl
ret
pushf
lret
pushf
in
cmp
jo
jl
aad
cmp
jne
mov
test
cmc
ss
xchg
loope
loop
lcall
xchg
lea
inc
xor
xlat
push
je
fmull
rcll
dec
add
insl
in
push
addb
mov
mov
aad
sub
xor
push
jg
mov
leave
ljmp
xchg
cwtl
js
lret
mov
outsl
add
or
cmpsb
jnp
pusha
in
roll
cwtl
inc
jns
insb
dec
push
lcall
outsb
push
scas
mov
fcoml
sbb
jg
cwtl
jge,pt
jbe
or
push
fwait
lcall
mov
idivl
dec
dec
stc
lret
inc
out
bound
or
dec
mov
into
push
pushf
pop
or
fisubl
imul
fwait
lds
aas
xchg
inc
and
imul
adc
sub
cwtl
lods
or
push
cwtl
pushf
repnz
mov
test
mov
arpl
sti
rep
mov
add
adc
push
orb
xchg
sbb
jmp
jmp
aad
cltd
hlt
cmp
loope
jecxz
mov
ljmp
mov
stc
xorb
mov
add
jl
aam
movsb
call
fwait
movsb
or
sub
fidivrl
jbe
pop
xorb
out
adc
xchg
push
jae
test
sbb
sbb
mov
and
dec
jae
cmpsl
mov
xchg
sbb
rcrb
sbb
push
es
mov
cs
jne
dec
es
scas
shrl
rolb
cwtl
sub
lock
imul
fs
xchg
call
mov
xor
xor
mov
loop
jno
xchg
add
sub
pop
mov
inc
dec
movsl
mov
insb
stos
pop
lret
bound
xchg
adc
mov
sub
cmp
mov
lds
inc
xlat
add
and
and
mov
inc
fdivs
xchg
stc
fnstenv
mov
out
pop
sti
lds
testb
out
mov
roll
test
adc
in
cmp
mov
inc
fsubp
and
gs
add
aaa
jbe
test
les
push
test
adc
pop
mov
or
movsl
aad
rolb
dec
punpckhbw
add
xchg
sub
xchg
mov
mov
ret
pop
mov
imul
and
cltd
gs
shrl
xchg
stos
rcrl
sub
or
xchg
inc
xlat
xor
push
jmp
jns
xor
push
cmp
push
sbb
mov
sub
mov
out
nop
loope
xor
mov
dec
and
mov
bound
xor
lahf
mov
push
fnstcw
lea
cli
fdiv
stos
or
cld
adc
enter
sbb
dec
cmpsl
push
outsb
push
sub
jb
and
rorb
arpl
test
movsl
les
loope
bound
mov
clc
xchg
xchg
daa
rolb
loope
jo
stos
add
enter
sub
inc
xorb
repnz
in
push
lods
mov
lret
bndldx
add
lock
movsl
cmp
pop
and
data16
pop
div
dec
xchg
imul
js
cmp
or
add
aaa
cmp
dec
cmpsl
xchg
in
sbb
test
enter
and
mov
iret
and
jl
pop
jp
mov
push
and
insb
xchg
stos
jg
sbb
stos
outsl
push
sbb
enter
ja
adc
movsl
cmp
fwait
call
jmp
dec
jecxz
loopne
mov
pop
das
add
out
jl
scas
inc
xchg
push
jge
test
mov
pop
dec
out
pop
inc
clc
push
jg
dec
popa
jbe
or
rcrl
add
inc
ds
sbb
mov
nop
daa
push
xor
inc
ja
cmp
or
sbb
aam
das
rclb
popf
xchg
bound
xchg
mov
pop
push
hlt
cld
xchg
lret
aaa
mov
sbb
xchg
or
nop
bound
xchg
sbb
xchg
xchg
jno
ret
mov
mov
scas
out
xchg
mov
or
fidivl
xor
mov
lock
into
testl
imul
or
shlb
ss
daa
lret
bound
insb
sbbl
cli
inc
fucomp
scas
lods
inc
and
jb
adc
push
out
ljmp
or
sub
pop
jge
nop
jnp
lea
movsl
sub
inc
jnp
cmp
cmp
in
push
pushf
xor
data16
ds
xchg
out
lret
mov
cmp
inc
out
je
or
sbb
pop
or
sbb
and
sub
fbstp
dec
jmp
jg
push
out
lahf
mov
shrl
dec
loopne
repnz
and
jle
inc
stc
jne
inc
cwtl
add
push
ljmp
mov
fidivs
rcrl
xchg
outsb
int3
xchg
cmp
add
sbb
cmp
and
and
and
xchg
lods
repz
pop
dec
dec
xchg
shlb
addr16
mov
bound
fistpll
fnstsw
xor
sbb
cmp
xchg
daa
fadds
in
or
dec
test
sub
xor
jl
add
xchg
cli
fdivr
loop
inc
imul
jns
ss
and
ljmp
add
adc
jl
cwtl
mov
es
rorb
popf
popf
das
xchg
sub
xor
dec
sbb
inc
dec
inc
add
iret
subl
sub
ss
mov
lock
xchg
data16
repnz
stos
scas
ljmp
cwtl
out
push
enter
sbbl
adcl
jae
rcl
fsts
out
cld
bound
dec
idivl
fnstcw
or
into
gs
and
xchg
ret
or
jnp
and
xchg
pop
inc
fmull
in
add
imull
inc
fisttpll
fsubrs
xchg
add
lret
mov
xor
int
adc
int3
arpl
aam
xchg
dec
jecxz
or
jp
testb
pop
aad
popl
out
xlat
decb
xor
mov
mov
daa
and
mov
push
xchg
pop
cmp
jbe
or
jge
sbbl
repz
cld
repnz
pop
sbb
pusha
neg
inc
push
out
jno
imul
lcall
sub
mov
sub
jo
cmp
mov
ja
add
push
sbb
in
xor
inc
xor
pop
lock
or
or
sub
xor
daa
fbstp
xor
xor
aaa
cbtw
das
push
das
int
pusha
xchg
xchg
sub
jnp
push
lods
dec
es
mov
test
jb
and
repnz
xchg
mov
or
shrl
cmp
movsl
fisttpll
sub
adc
sub
int3
xchg
rolb
jns
mov
xchg
jb
xchg
leave
stc
nop
cli
popa
inc
fcoms
cmp
cwtl
jl
or
cmp
pop
aas
jbe
aas
sti
xchg
scas
push
sbbl
sbb
popa
js
push
pop
lds
les
push
out
pop
push
out
xchg
adcb
xchg
sub
cmc
insb
add
jecxz
les
mov
and
xor
insl
add
inc
inc
xlat
xor
in
inc
jne
cmp
lods
inc
push
dec
mov
movsl
dec
testb
dec
cmp
aas
pop
into
gs
dec
jns
aas
aad
les
push
mov
inc
pop
mov
data16
insl
add
gs
out
pop
out
cmpsb
pop
pushf
xor
dec
orl
cmp
inc
jbe
xor
cmp
lods
fiadds
inc
and
sbb
xchg
retw
pop
cltd
ljmp
add
call
outsl
inc
mov
adc
cmp
lahf
popf
fbstp
enter
push
rcrl
ja
adc
pushf
xor
dec
or
xor
dec
cwtl
xor
movsb
ret
hlt
cmpsl
sub
push
out
out
xchg
push
sbb
insl
mov
movsl
dec
out
mov
mov
sub
lea
xor
nop
addr16
nop
sarl
mov
dec
out
stos
cmp
fsubl
loopne
cmp
mov
push
lcall
mov
movsl
pop
inc
mov
lock
aaa
nop
daa
cmpsl
pushf
add
adc
pop
dec
out
xchg
inc
xlat
mov
jp
cld
dec
jecxz
mov
mov
cmpsb
pop
mov
and
xor
sub
adcb
test
popf
mov
clc
jo
cwtl
das
fidivs
push
arpl
sub
cmp
mov
aad
push
xchg
insb
add
dec
lock
cli
xchg
dec
aas
jae
scas
xchg
movsb
cmp
scas
in
test
adc
inc
pop
jo
push
fwait
loope
int3
xchg
lock
pop
jl
dec
dec
outsl
push
cmp
std
xchg
popf
push
mov
add
lods
clc
and
sbbl
or
cmc
mov
sub
pop
push
adcb
and
jg
lods
js
fdivrp
es
or
mov
and
jg
mov
inc
fcmovb
pop
fbstp
sbb
sub
sbbb
lahf
fidivs
adc
stc
inc
aas
es
lahf
rcrl
fbstp
or
pop
nop
daa
push
and
popf
test
cwtl
das
mov
mov
push
insb
inc
imul
pop
popf
addr16
mov
test
inc
xlat
inc
repz
outsl
push
dec
cmp
push
dec
xlat
fbstp
sahf
adc
sbb
lods
inc
dec
sbb
adc
repz
adc
out
xor
sub
xor
mov
xchg
sub
ret
add
push
aas
pop
shlb
ds
or
mov
inc
and
sub
fidivs
lcall
xchg
sub
xchg
cmpb
repz
test
push
pop
loop
push
mov
loop
out
dec
rclb
pop
sahf
xchg
stc
or
mov
mov
cmpsb
cmp
popf
pop
cmp
loopne
push
aam
lret
sbb
stos
mov
or
lret
push
movsl
sti
mov
mov
push
xor
imul
in
orl
bound
xchg
sub
clc
shrl
rolb
add
mov
ret
pop
rcl
insl
add
in
sbb
pop
dec
in
ljmp
pop
sbb
dec
out
aam
pop
enter
cld
or
jnp
mov
sbb
xlat
push
xor
cltd
imul
push
pusha
les
mull
sbb
adc
add
inc
jnp
ljmp
cmp
jg
scas
sbbl
out
adc
pop
xor
dec
inc
and
je
cli
xchg
add
push
mov
mov
jnp
stos
testb
sub
pushf
xor
add
mov
cmpsl
ds
lods
push
in
fimuls
mov
cmp
jp
push
repnz
shl
xor
sbb
stos
mov
fwait
xor
sarb
cwtl
cmpsb
cmp
es
rolb
mov
cltd
mov
xsha1
cmpsb
iret
or
cmp
ljmp
ret
lret
bound
mov
pop
hlt
loopne
mov
inc
cli
call
divl
mov
fsubp
jb
shlb
mov
sbbl
daa
iret
pop
repnz
mov
mov
popf
xor
mov
lds
mulb
out
xchg
shrl
cmp
arpl
inc
fxch
je
or
jnp
or
push
lcall
xor
pushf
mov
jne
push
or
fldl
and
in
sub
aaa
into
fimuls
pushf
xor
aam
push
enter
inc
or
jp
inc
jns
inc
insl
adc
jo
jo
mov
shll
adcl
mov
xchg
ljmp
dec
out
cmp
stc
mov
movsl
cld
xchg
lods
loopne
and
cmpsl
ds
and
mov
pushf
cmp
into
sbb
jnp
add
jle
les
jb
push
and
pop
mov
outsl
adc
or
inc
add
xor
sub
adc
mov
movsb
into
xlat
sbb
or
lret
lcall
mov
mov
xchg
sub
xor
lods
cmpsl
sbb
lds
out
push
xchg
shlb
push
adc
push
mov
jo
mov
movsb
jmp
in
fidivl
push
push
jmp
rcrb
out
test
push
movsl
mov
mov
aam
sub
sahf
pushf
sub
pop
fucomip
or
push
pop
sahf
jge
mov
fisttpll
adc
push
pop
xor
mov
movsl
rcrb
add
inc
fprem
inc
insb
add
popa
clc
dec
jge
xor
lods
test
fidivrs
mov
dec
adc
mov
mov
clc
mov
or
scas
cmp
ds
jbe
ss
nop
cwtl
pop
icebp
lret
out
in
jp
pop
pop
ja
cmp
xchg
sub
lea
scas
inc
fsubp
shrl
add
xor
repnz
in
test
movsb
pop
lcall
and
out
inc
inc
fidivs
push
rclb
sbb
out
jg
sbb
cmpsb
cmp
popf
xor
ret
pop
mov
jge
loopne
je
sub
xchg
pop
aaa
sti
xchg
imul
mov
sarb
rolb
fnsave
into
push
and
push
das
push
in
pusha
jne
push
cmpsl
xorl
cli
aam
sub
sbb
dec
dec
daa
scas
inc
pop
outsl
shrb
jp
lods
ret
cmc
scas
jmp
pop
out
xchg
sub
pop
or
imul
dec
loopne
mov
imul
clc
cli
xchg
sub
movsb
cmp
stos
inc
dec
jg
aad
jp
fs
loopne
mov
sbbl
mov
sbb
leave
inc
jns
push
stos
test
divl
or
std
sti
xchg
das
cmc
mov
imul
aaa
into
mov
mov
cli
xchg
test
ss
lods
pop
sahf
pop
xor
pop
fs
adc
mov
inc
xlat
add
dec
loope
push
lahf
cmp
inc
fcoms
mov
sbb
sub
test
movsb
shrb
add
scas
ss
testl
stc
jnp
jmp
cld
xor
out
mov
test
out
stc
nop
daa
das
or
aaa
xor
push
jae
arpl
mov
jmp
lahf
sub
mov
bound
inc
fldt
mov
sbb
es
sbb
in
inc
and
lea
popf
mov
out
xchg
xor
mov
loope
sub
mov
sub
jge
sbb
insb
xchg
xchg
mov
add
sbb
mov
or
add
pusha
int3
arpl
int
or
sahf
call
es
ja
pop
scas
subl
lahf
ret
mov
fidivs
mov
lods
daa
loop
pop
adc
pop
mov
dec
and
dec
in
clc
xor
jmp
out
xchg
jmp
sbb
lea
lods
inc
mov
sub
add
pop
aad
mov
decb
das
jge
lahf
push
stc
nop
xchg
mov
mov
int3
add
jnp
das
mov
rorb
lahf
rep
add
call
leave
pusha
mov
jne
stos
inc
sub
jne
pop
mov
push
mov
in
test
and
pop
aas
mov
lds
data16
lcall
imulb
add
mov
and
push
insl
xchg
stos
inc
or
gs
xchg
sub
fucomp
test
adc
shll
lods
inc
imul
push
in
mov
mov
imul
sub
fnstenv
xor
mov
loopne
mov
xor
mov
imul
mov
jg
repz
dec
ds
xor
xchg
imul
fwait
fwait
std
xchg
or
fsubrs
cmp
lock
and
cmp
sarb
stos
insl
loop
mov
jne
inc
cmpsl
loope
or
mov
fsubrs
ljmp
fiaddl
and
xchg
loopne,pn
ss
adc
insl
or
pop
std
mov
sub
out
icebp
sbb
data16
mov
sahf
xor
xchg
mov
xchg
adc
sahf
xor
cwtl
xor
js
sbb
jl
push
out
test
or
and
xchg
repnz
jle
cmp
xor
jbe
out
mov
jbe
shl
repnz
mov
and
jle
jne
dec
ss
mov
enter
iret
inc
mov
sahf
xor
sbb
dec
cmc
mov
rol
push
repz
pop
nop
ljmp
enter
pop
or
pop
jnp
in
test
jp
dec
push
mov
dec
pop
jns
add
ret
cmp
dec
dec
pop
call
push
fcoml
std
scas
inc
out
call
ret
xor
push
sbb
loopne
lret
aam
push
enter
inc
sbb
testb
xchg
fimull
mov
cmp
lahf
lea
ss
push
fistpll
into
mov
pusha
mov
cmpsb
jae
fld
jp
mov
mov
mov
pop
sub
jmp
shrl
pop
sahf
orl
fwait
xor
mov
shrl
sub
jns
cmpsl
insl
add
loopne
adc
add
cmpsl
xor
and
xchg
mov
popa
lds
jecxz
leave
dec
loopne
mov
out
clc
mov
shlb
pop
imulb
in
int
mov
fidivl
scas
outsl
push
loope
imul
cli
adc
dec
xor
inc
jno
push
in
scas
andl
ljmp
add
inc
insb
add
inc
adc
xor
inc
fwait
inc
mov
cmp
dec
out
dec
pop
repz
icebp
mov
dec
hlt
mov
cmp
xor
xor
mov
shlb
inc
in
sbb
sbb
inc
jecxz
js
es
bound
xchg
jns
mov
std
sahf
mov
push
out
cmp
inc
or
xor
cmp
jae
mov
ss
popf
xor
ja
idivl
or
push
cmp
xchg
push
jae
in
push
out
xchg
outsb
jl
pop
ljmp
fs
sub
ja
sti
xchg
push
jo
insb
mov
mov
js
mov
stc
nop
daa
mov
inc
mov
xchg
aad
push
leave
testl
shlb
mov
test
jne
fsubl
rcl
repnz
imul
mov
adc
push
arpl
pop
cmp
dec
out
cs
add
call
inc
fadd
inc
mov
jbe
out
xchg
int
mov
sub
or
fmuls
mov
out
jl
dec
scas
in
dec
fnstsw
mov
fsubp
jecxz
cmp
fldcw
add
add
dec
test
cmpsl
mov
mov
mov
rorl
movsl
cld
dec
repz
xor
int3
arpl
subl
icebp
fdivl
xchg
cmpsl
push
add
out
das
cmpsl
dec
popa
clc
test
in
jns
loopne
out
jbe
fbstp
fs
cld
lea
shll
or
mov
jg
push
push
imul
imul
lods
xor
aas
pusha
xor
mov
mov
add
push
scas
inc
dec
in
mov
ret
pop
cmpsl
hlt
ret
pop
daa
cmpsl
pop
sahf
push
inc
pop
hlt
jb
int3
arpl
call
inc
mov
push
out
loop
rclb
inc
dec
in
andl
ja
cli
xlat
inc
faddp
in
and
push
pop
jbe
xor
xorb
push
imul
pop
call
cmp
or
shll
push
cmp
inc
cmp
xor
push
mov
mov
mov
test
mov
stos
fimuls
pop
sub
mov
popf
js
scas
inc
shll
xchg
icebp
xor
in
push
call
xchg
jmp
sbb
xchg
sub
pop
scas
inc
dec
outsl
daa
mov
repz
stos
inc
jae
mov
shl
xor
arpl
stos
inc
ja
mov
shl
mov
aam
or
jbe
sahf
cmp
or
lods
inc
sahf
jle
repz
mov
fisubl
mov
stos
inc
inc
icebp
cwtl
das
and
cmp
shrl
pop
ja
imul
outsb
add
int3
sti
adc
xorl
dec
movsb
lods
inc
sbb
icebp
lods
cmp
popa
imul
adc
mov
and
in
nop
mov
call
in
dec
addb
push
repnz
adcb
das
xchg
ss
jno
sub
and
rcl
jg
adc
repnz
jecxz
scas
jg
push
repz
adc
push
scas
inc
mov
jb
jge
cmpsl
cmp
fists
movsl
xchg
or
fwait
mov
xchg
cs
pop
int
pusha
inc
sub
lahf
enter
inc
shrl
mov
mov
sti
mov
adc
jno
lods
inc
outsb
dec
out
lret
cmc
push
in
fnstenv
jb
test
andb
out
sahf
nop
sub
ja
sub
jmp
fnop
or
fildll
test
xchg
sub
orb
mov
mov
test
sub
fldenv
xlat
pusha
cli
fsubrs
add
inc
or
leave
pusha
adc
mov
sub
jl
mov
ficompl
cs
xor
add
pop
decb
out
cld
jb
adc
add
mov
mov
push
cmpsl
ja
adc
dec
dec
in
xchg
int
mov
xor
pop
cmc
pop
repnz
fs
jb
sbbl
add
les
pop
mov
push
sub
jmp
imul
dec
pop
mov
push
jmp
sbb
fs
add
test
jl
mov
cmpl
jle
lods
stos
fwait
xor
lock
test
scas
sbb
stos
shl
or
jecxz
aam
inc
cmc
movsb
cmp
popf
in
test
or
arpl
pop
xchg
fwait
out
or
cs
lock
icebp
sti
xchg
sub
int
xor
xchg
sub
xchg
add
fldcw
mov
cli
or
test
mov
jns
push
lahf
fdivl
clc
mov
and
cmpsl
movsl
ret
add
mov
mov
fimull
sbb
pop
repz
xor
adc
adc
or
ds
in
pop
sbb
xchg
sub
loop
cwtl
das
mov
fnstsw
mov
mov
inc
jle
jle
cld
xchg
je
jge
inc
xchg
mov
pop
jecxz
add
cmpsb
cmp
cld
mov
mov
xlat
dec
out
test
fnstenv
jp
or
outsl
aaa
jne
add
xchg
sub
mov
mov
jnp
sbb
mov
shrl
push
sbb
je
dec
fbstp
sbb
pop
inc
fimull
pusha
pop
fwait
repz
pop
fnsave
fsubrs
sbb
cmp
ret
pop
nop
loopne
lds
addr16
and
fs
add
iret
cmpsl
pop
cmc
out
push
xor
dec
mov
mov
enter
push
lods
mov
insl
sub
jo
push
ret
jl
xchg
xlat
fnsave
xor
and
pop
divb
mov
push
dec
push
adc
cmp
sbb
pop
jns
jge
arpl
clc
xor
xchg
cmp
leave
and
cwtl
mov
pop
sub
push
aas
dec
sbb
subps
rorl
jb
fldcw
pop
pusha
jge
scas
mov
mov
test
filds
cmpsb
inc
fistl
or
jle
out
add
int3
xor
mov
fisubs
iret
lea
loop
dec
loop
add
shll
push
adc
jno
loope
sub
sub
dec
pusha
idivl
lcall
pop
nop
daa
xchg
cld
arpl
ljmp
lcall
sub
jbe
mov
ds
stos
lock
cmp
lret
cmp
ds
sar
xchg
ret
xlat
jno
fidivl
sbb
jb
idivb
add
or
cmpb
into
pushf
cmpsl
ds
jb
nop
subl
fbstp
rcrl
stc
add
out
mov
mov
or
push
pop
nop
or
and
arpl
aam
xor
int3
arpl
lds
mov
rcl
cli
xchg
leave
jbe
xor
xor
iret
cmp
fnclex
jns
adc
lret
aam
aas
adc
ss
test
sub
mov
fsubr
or
lock
loop
cmp
sbb
and
dec
loopne
xchg
mov
cmpsb
int
leave
pusha
pushf
pop
hlt
lcall
lcall
mov
push
popa
lods
inc
push
cli
or
addr16
fnsave
and
lds
mov
lea
jns
scas
loope
and
stos
push
add
jbe
push
add
dec
out
ret
jns,pn
push
imul
test
std
xchg
push
jmp
push
jmp
mov
and
mov
xchg
xor
test
inc
push
test
in
push
in
sbb
ret
pop
mov
sub
jnp
sub
dec
loope
mov
pop
add
das
andb
lods
xchg
sub
xchg
and
inc
xchg
cmp
fidivl
pop
cwtl
das
dec
lahf
int3
arpl
pop
mov
popf
addb
arpl
repz
cmpsb
lea
fcomip
mov
mov
dec
jmp
test
xlat
shrl
lcall
cwtl
add
jbe
lock
xchg
int
or
push
popf
push
sub
jo
scas
and
sarl
cmp
lods
push
lret
inc
push
out
movsl
cmp
and
push
ja
shrl
in
and
arpl
add
scas
inc
fsub
scas
icebp
mov
mov
fiadds
mov
test
inc
xor
sbbb
add
shrl
jp
nop
insb
into
adc
lcall
pusha
lods
and
into
xchg
inc
fbstp
mov
mov
bound
xor
push
dec
jecxz
loop
xchg
sub
inc
pop
vcvtdq2ps
mov
lea
sahf
loopne
lock
mov
sahf
xchg
sub
inc
inc
fdivl
xchg
shrb
pop
iret
dec
jle
vmwrite
test
xor
dec
sbbb
icebp
call
or
shlb
hlt
stos
cmp
ljmp
ss
ficomps
iret
out
or
loop
dec
loope
add
je
adc
pop
pop
pop
icebp
xchg
push
lcall
ja
clc
mov
es
jle
inc
leave
inc
fisttpl
movsb
xchg
jbe
jbe
outsl
cltd
mov
mov
sbb
push
inc
lods
lods
inc
pop
ljmp
xor
add
pop
repnz
addr16
popa
dec
in
jp
adc
jno
jne
lcall
outsb
add
xchg
out
mov
mov
mov
or
mov
push
jmp
xchg
imul
pop
aas
push
out
jle
bound
mov
sbb
cmp
loop
clc
xchg
xchg
pop
cmc
les
jl
pop
or
xor
push
ljmp
jno
loopne
insl
adc
nop
daa
xor
hlt
outsb
arpl
scas
and
rcll
jg
sbb
jb
xchg
cmp
rorl
adc
jb
cs
mov
and
jne
push
push
insl
xchg
pop
gs
mov
and
pop
int
cmp
sub
push
adc
or
pop
movsl
xchg
pop
test
in
clc
jecxz
adc
sbb
dec
ss
xor
and
mov
outsb
push
adc
inc
das
cmc
mov
jge
xchg
adcb
mov
fwait
xor
aam
enter
push
cmp
dec
out
pop
fsubrs
js
add
mov
loop
mov
std
add
inc
push
push
xor
xchg
pop
mov
out
idiv
outsl
push
sub
add
and
push
mov
sarl
push
loop
xor
ds
repz
add
adc
adc
or
nop
es
movsl
cli
mulb
mov
mov
mov
xchg
andl
ss
loopne
or
icebp
fdivr
popf
pop
das
push
addb
jmp
adc
negl
and
fnstcw
test
leave
int
fwait
iret
xchg
fidivrs
in
call
or
cmp
sub
mov
dec
loop
xor
pop
add
addr16
push
out
test
test
mov
push
sti
sub
sub
stos
inc
cmpsb
dec
dec
fistpll
enter
data16
rcrb
out
dec
icebp
test
and
pushf
lahf
inc
mov
mov
leave
adc
inc
ljmp
xchg
cmp
jle
jmp
or
fimuls
dec
dec
dec
shrb
rolb
cmc
mov
aam
stos
add
jle
shrb
jb
ds
pop
int
push
cld
shlb
mov
rolb
fisttps
std
sub
pop
push
pop
je
xor
push
scas
shr
xor
fists
call
mov
iret
aam
das
enter
push
mov
test
imul
add
stc
add
inc
xor
push
movb
pop
sahf
add
out
lock
nop
daa
js
sbb
sarb
test
jbe
inc
dec
popa
clc
cmp
adc
add
sub
inc
add
movsl
cmp
enter
insl
xor
les
push
pusha
incl
out
fs
or
add
in
test
inc
ficompl
scas
nop
aaa
pop
js
incl
dec
xor
sahf
jbe
out
aam
pop
leave
rolb
inc
add
loope
movsb
lret
dec
fsubp
fsubs
lods
mov
test
pop
cwtl
and
jne
aam
daa
xor
jns
fadds
xchg
gs
mov
arpl
pop
jo
lret
cmc
cmp
inc
popf
or
lahf
mov
mov
sbb
mov
nop
push
ret
std
or
pop
clc
loop
adc
pop
lret
xor
push
and
sub
aaa
cli
xchg
inc
pop
sub
imul
test
push
sub
cs
sub
cmpl
or
xlat
pop
aam
inc
inc
mov
iret
scas
dec
scas
add
shr
cmp
in
mov
jp
outsb
xchg
test
xchg
sti
jl
into
dec
mov
cmpsl
push
aam
jnp
daa
inc
jmp
into
imul
mov
fwait
loop
cmpsl
outsb
jns
lahf
scas
ret
dec
fcoml
add
shrb
xor
sbb
call
push
repnz
std
out
cmpsb
mov
xor
je
mov
int
cld
mov
cli
and
xor
out
out
sub
outsl
sbb
hlt
xor
rorl
pop
outsb
ja
addb
add
or
out
xor
add
inc
mov
ss
fiadds
jecxz
mov
and
sub
scas
rcll
dec
inc
fdivrl
int3
inc
movsl
into
sbb
mov
cmp
cmp
adc
rcrl
sub
or
mov
mov
sub
stc
xlat
cmc
push
push
in
mov
sbb
cltd
loope
inc
add
aad
dec
cmp
xchg
mov
ljmp
sbb
leave
sbb
out
imul
pop
aas
jle
cld
in
in
ffreep
mov
mov
outsl
dec
shr
inc
rcrl
push
push
sub
adc
inc
imul
mov
js
pop
int3
aad
jmp
sbb
std
push
movsb
cmp
mov
lret
imul
push
mov
loope
sub
sub
pop
mov
push
xchg
testb
adc
popf
into
xchg
adc
xchg
fisubs
dec
cmc
fs
inc
leave
mov
dec
dec
push
mov
test
test
sbb
sbb
sub
mov
fisttpl
and
fstps
stc
pop
stos
cmp
negb
mov
xchg
cld
add
pop
outsb
push
jne
inc
mull
push
shr
loop
lcall
test
pop
clc
adc
mov
js
mov
and
dec
push
gs
arpl
push
dec
imul
inc
aam
push
cmp
popa
icebp
cmp
fnstsw
and
rorl
rcll
cmp
aam
inc
dec
xchg
mov
pop
pushf
push
pop
test
ljmp
add
add
jmp
adc
lock
test
sub
jp
mov
jo
pushf
std
push
mov
xor
mov
mov
rcrb
dec
mov
inc
mov
test
fstl
test
mov
sub
push
push
rcrl
sahf
push
call
inc
add
pusha
inc
adc
andl
scas
xchg
es
sbb
repnz
inc
mov
lock
repz
out
aam
in
fwait
xlat
pop
pop
into
ljmp
pop
mov
add
dec
dec
pop
mov
in
jge
or
add
sbb
jl
mov
sarl
ret
shlb
xchg
push
sarl
pop
sbb
sbb
push
xor
push
out
dec
xchg
jg
es
xlat
lea
xor
cmp
cs
les
roll
sub
fldt
addr16
in
jb
das
sbb
sub
pop
add
mov
fadds
or
jnp
adc
adc
inc
rcr
lods
dec
mov
xchg
lret
lea
push
dec
push
jmp
lock
add
imul
jnp
insb
testb
jns
xchg
dec
adc
les
popa
mov
fscale
jae
icebp
xor
in
sahf
and
jbe
into
push
stc
mov
mov
mov
int
pop
arpl
in
xchg
lods
addr16
gs
lods
dec
inc
push
push
mov
add
cmp
jl
mov
mov
int
mov
nop
cmp
int
out
xor
jmp
mov
stos
fiadds
ss
cmp
jne
inc
pop
out
add
sub
push
xchg
xor
scas
dec
sbb
je
in
pushf
and
add
push
dec
jae
or
push
cmpsl
push
shr
mov
mov
jne
je
sarb
push
scas
lods
pop
push
rorb
jp
aas
daa
cmp
cmp
dec
jmp
dec
jne
das
sbb
xchg
mov
lods
xor
lcall
dec
icebp
xor
in
rorb
fs
jns
cmpl
mov
pop
lcall
mov
xchg
je
mov
and
inc
and
test
xlat
mov
pop
call
adc
cwtl
out
rolb
cli
pop
lahf
adc
push
inc
clc
movsb
or
lss
mov
adc
outsl
pop
push
cmp
adc
cltd
gs
mov
scas
jno
xchg
js
and
mov
pop
dec
adc
jge
mov
lea
insb
sahf
xchg
add
jp
sahf
or
pop
mov
mov
pop
movsb
mov
or
mov
andl
popf
popf
mov
sbb
push
jle
jp
fucomp
es
loop
dec
les
sub
cmp
clc
push
cmp
pop
in
mov
pop
sub
shrl
and
xchg
fcomps
in
add
sbb
outsb
cmp
cld
rolb
add
dec
loope
mov
insb
scas
cmp
and
jns
or
or
pushf
push
pop
lea
inc
jns
js
jge
pop
mov
stc
popa
sub
inc
or
cmp
mov
add
leave
inc
jbe
out
adc
imull
and
mov
sub
or
pop
test
xlat
pop
fs
mov
inc
push
fdivs
in
ja
cltd
pop
out
or
ret
jp
test
mov
ja
mov
cmpsb
mov
orl
cmp
test
pop
pop
aad
sub
lahf
xchg
inc
js
pop
or
and
push
jb
and
dec
in
or
aaa
pop
adc
data16
xchg
fcmove
ja
xor
loope
sbb
movsb
push
pop
std
out
push
mov
mov
popa
mov
xchg
adc
and
test
and
lods
mov
test
mov
xor
cmc
or
insl
cmp
pop
hlt
mov
mov
test
in
add
leave
sub
dec
ds
pop
xchg
mov
in
out
jp
and
add
in
pop
and
aas
lods
aas
fisubs
outsl
xchg
lcall
xor
adc
movsb
cltd
xor
sbb
testl
mov
loopne
lret
pop
scas
fidivl
push
in
incb
outsb
js
jne
push
cltd
cmc
mov
jb
sub
mov
imul
dec
repz
sarb
cmp
pop
pushf
push
out
int
pop
out
mov
jne
and
jbe
add
xchg
add
sbb
sbb
or
and
mov
pop
mov
nop
jb
shlb
les
insl
cmp
inc
iret
jge
aaa
into
pop
sahf
push
in
iret
jle
in
scas
lock
and
jae
add
jbe
jl
dec
xchg
mov
mov
les
insl
pop
fidivrs
out
aas
imul
idivb
mov
mov
fidivrs
adc
cltd
xor
cmp
xor
out
adc
insl
or
mov
sub
jle
test
jl
mov
sbbl
xorb
pop
mov
movsb
mov
repz
mov
push
push
push
dec
daa
mov
addr16
loope
xchg
les
mov
bnd
in
sbb
jmp
adc
sbbb
mov
mov
sub
jge
xor
daa
lahf
dec
loop
dec
push
jmp
and
xchg
jbe
mov
lret
inc
jae
ret
pop
sbb
loope,pt
jo
call
xchg
les
push
popf
insb
in
mov
mov
mov
loopne
fsts
mov
mov
fdivl
push
test
mov
xchg
sub
fcomps
mov
mov
push
mov
out
xchg
testb
and
lds
js
int3
test
or
jae
movsb
pop
xchg
sub
sbb
cli
dec
pop
mov
nop
push
sbb
mov
iret
gs
pop
inc
pop
jmp
mov
je
stos
or
out
and
sub
push
cmp
test
int
test
out
stos
push
jmp
cli
insb
add
xor
adcb
movsb
cmpsb
stos
inc
xlat
enter
cmc
pop
sub
icebp
mov
fbstp
ja
mov
lret
shl
adc
dec
inc
sub
fists
mov
sbb
out
push
jo
xchg
add
and
in
mov
mov
enter
fidivs
cli
dec
in
push
pop
pop
or
and
push
sbb
fimuls
and
cmc
stc
xor
movsb
icebp
stc
loope
sub
sbb
aas
aad
sub
lods
js
cmp
push
jns
mov
nop
bound
xor
inc
fnsave
push
sbb
fiaddl
mov
jecxz
sub
outsl
push
add
fstl
mov
pop
adc
mov
or
arpl
xlat
sbb
push
out
xchg
mov
push
lret
negl
sbb
inc
dec
cmp
mov
pop
int3
subl
xchg
inc
ficomps
push
or
pop
jl
mov
pushf
push
stc
inc
divl
into
out
clc
pop
or
cmp
outsb
xor
mov
xor
pop
dec
popf
sbb
pop
mov
sub
sahf
xchg
xor
mov
xchg
xchg
inc
stos
gs
xchg
js
xor
jl
xchg
cmp
outsb
adc
adc
or
data16
mov
inc
fs
push
mov
pusha
pop
push
pop
lods
gs
inc
lea
mov
dec
xchg
sti
mov
xchg
sub
enter
mov
xchg
pop
pop
in
cltd
cmp
imulb
daa
mov
inc
ret
push
mov
fisttpl
fadds
mov
imul
mov
xchg
sub
mov
daa
fwait
mov
int
iret
cmp
cli
xchg
int
inc
fdivp
or
mov
lods
shl
in
lret
sarb
xor
dec
or
pop
or
test
xlat
push
jmp
data16
sub
mov
fimuls
ret
jo
jecxz
scas
inc
hlt
push
mov
mull
sti
xchg
out
arpl
fisttpl
lods
push
out
add
fidivrl
icebp
mov
lahf
and
jns
pop
lock
mov
cmp
pop
test
arpl
test
shrb
leave
xsha256
cmpsb
rcrl
push
call
icebp
in
and
inc
sbb
cltd
fs
xor
daa
mov
jp
pop
icebp
cmp
aas
sub
mov
jge
inc
imul
sub
dec
mov
insl
lods
xchg
adcb
in
roll
ret
pop
jae
dec
cmp
inc
sahf
cmpsl
rclb
out
xchg
push
cli
xchg
push
and
movsb
shlb
stos
inc
xchg
pop
fbstp
mov
cmp
pusha
sahf
xor
mov
ret
push
out
fldl
cmp
iret
and
jnp
lock
fadd
stos
sahf
xor
mov
fisttps
mov
ficoms
scas
loope
mov
pop
add
lahf
jnp
aas
rclb
test
outsl
or
dec
loop
sub
push
pop
cmpsl
aam
adc
fisttps
xor
mov
fiaddl
or
sbb
cvtps2pi
xor
inc
bound
fnsave
or
inc
std
add
leave
push
sbb
dec
int
div
inc
push
call
and
add
adc
sub
je
jns
add
aas
xor
sbb
sbb
shlb
out
call
xchg
pop
or
mov
push
aam
rcrb
jnp
cmc
adc
xchg
push
sti
xchg
dec
mov
pop
push
dec
je
jne
aaa
ljmp
push
lret
imul
sub
dec
jg
sahf
lods
mov
push
repnz
xchg
nop
adc
sbb
daa
add
mov
test
fs
insb
lret
and
xor
mov
js
mov
movsb
sbb
sub
fsubrs
leave
lret
bound
flds
or
ljmp
push
sti
pop
cmc
iret
jne
cmp
push
movsl
int
out
mov
sbb
jno
fcompl
or
mov
in
sbb
imul
xchg
sub
fstpl
dec
aas
pop
xchg
sub
ja
jl
xchg
jo
jbe
mov
das
cmp
dec
mov
das
pop
mov
add
je
dec
loope
xchg
push
jmp
cmp
data16
mov
jne
add
shlb
pop
mov
and
fwait
mov
dec
push
mov
inc
mov
or
addr16
or
clc
xchg
sbb
lcall
mov
cmp
push
in
sbb
movsl
pop
xor
pop
dec
push
aad
test
lahf
mov
inc
ret
fs
es
sub
inc
mov
fcoml
daa
repnz
arpl
xchg
aaa
pusha
imull
jne
adc
testb
xchg
imul
inc
push
int
cltd
bound
xor
pop
scas
dec
xor
cli
dec
fsave
sbb
inc
dec
lea
arpl
xor
imul
outsb
jge
aaa
inc
xor
sbb
jno
cmp
sarl
fwait
mov
xchg
lods
inc
out
loope
adc
icebp
mov
mov
jge
mov
rcrb
insl
out
sub
inc
bsr
mov
arpl
cmc
mov
mov
cli
mov
jne
mov
test
xchg
and
mov
xchg
das
into
gs
add
xlat
xor
jb
shll
xor
push
jno
pop
mov
mov
sub
aam
test
das
fbstp
neg
insl
out
xchg
push
jo
push
or
xor
or
pop
cli
mov
loopne
dec
clc
fbstp
dec
sbb
cmp
data16
lahf
jnp
jmp
sbb
insl
mov
je
sahf
push
pop
repz
adc
add
add
dec
pop
cmc
mov
mov
lcall
pop
repz
jp
adc
mov
rcll
sarl
aad
int3
sub
mov
pusha
mov
push
ljmp
arpl
add
je
pop
out
or
xor
mov
adcb
inc
lds
call
cmp
xchg
mov
loopne
mov
push
aaa
into
inc
or
imul
out
sub
lds
shrb
shrb
popa
dec
jecxz
loopne
push
aam
inc
fsubrp
jg
xchg
cld
xchg
stc
add
mov
arpl
and
sbb
cmp
rcll
ror
cmp
jl
sub
and
ds
insb
insl
scas
das
sti
mov
in
loope
fs
or
loopne
jae
xor
scas
inc
lcall
inc
push
jne
adc
daa
scas
inc
pop
push
fwait
xor
stos
inc
inc
mov
jp
gs
xchg
ds
xor
mov
jp
pop
mov
cltd
cwtl
jb
dec
xor
mov
sub
dec
aad
fstps
jmp
mov
les
not
scas
inc
pop
cmc
mov
roll
ds
or
mov
lret
imul
mov
ljmp
dec
je
push
iret
movsl
cmp
jne
xchg
shrl
imul
loop
repz
xchg
sub
mov
mov
add
sti
xchg
out
rclb
xchg
add
sbbl
jge
testb
gs
xor
test
mov
aaa
into
inc
and
jbe
inc
fnstenv
xchg
cmp
and
mov
pop
cmpsl
push
ljmp
push
lods
jbe
pop
cmc
push
xchg
dec
in
jae
adc
sbb
jg
dec
fistpll
fiaddl
pop
hlt
insl
ret
mov
lds
and
inc
jo
push
jp
pop
dec
jne
mov
outsb
mov
dec
push
je
arpl
cmpl
xchg
mov
or
aad
pop
lock
clc
mov
sub
scas
mov
pop
scas
fdivrs
or
int3
arpl
sub
cltd
sbbb
jmp
fdivrl
fwait
sbb
xor
sub
rcrl
push
mov
inc
xchg
pop
repnz
pop
jb
dec
add
ja
popf
test
ret
adc
cmp
sub
sub
leave
stos
mov
lea
sahf
std
mov
sub
push
outsb
leave
pusha
mov
repz
int
push
add
mov
fistpl
fisttps
lret
inc
loope
inc
mov
mov
jp
rcrb
pop
mov
mov
lea
fistl
and
cmp
out
mov
mov
mov
adc
inc
out
std
pop
mov
in
sub
dec
sti
xor
add
inc
mov
into
xchg
mov
cmp
pop
mov
insl
xlat
mov
and
rcrb
jl
push
lods
or
push
sbb
pop
outsl
add
push
in
inc
jmp
ss
loopne
xchg
fwait
dec
test
ret
xchg
or
fdivs
jg
ret
or
out
mov
ljmp
movsl
mov
shll
mov
push
mov
push
in
inc
pop
mov
sub
fst
pop
jp
cmp
jo
mov
jb
or
je
sarl
es
in
in
repz
jle
xor
aad
and
jae
sarl
xchg
loop
and
inc
lods
or
outsb
mov
stos
jl
fnstenv
popf
xor
push
dec
pop
icebp
jge
sbb
daa
sub
pop
and
xchg
xchg
rolb
cmpsl
mov
es
aad
lods
dec
inc
js
lods
inc
jnp
fs
or
cmp
jb
or
cmpsl
cmpb
sbbb
test
adc
std
repnz
enter
or
das
mov
sbb
out
cltd
lcall
scas
shl
aaa
pop
aaa
jmp
imul
cli
pop
ret
adc
ret
stos
mov
adc
push
out
mov
xchg
test
cltd
push
loop
mov
imul
repnz
mov
ss
xor
lods
fsts
push
ljmp
lods
call
mov
aad
repnz
pop
or
ret
push
dec
jecxz
in
cmp
pop
or
push
bound
dec
ds
ja
inc
jl
sti
jo
mull
divb
xor
xchg
jg
lahf
push
aaa
into
test
push
xchg
stos
dec
leave
ljmp
in
orl
in
movsl
test
sbbb
push
out
jae
or
shl
mov
scas
idivl
pop
mov
or
xor
and
jno
fmul
or
xchg
dec
aas
test
cmp
inc
add
xor
test
das
je
add
mov
push
xor
mov
and
test
jle
dec
fisttps
cltd
test
mov
in
dec
je
aad
fsub
jmp
rolb
xor
pop
inc
inc
in
sub
pmaddwd
xchg
sbb
and
sbb
sub
mov
lahf
cmpsl
push
mov
mov
xor
std
dec
loopne
push
mov
flds
lods
jecxz
shll
xor
mov
das
outsb
mov
pop
inc
lock
iret
xor
iret
pop
mov
sbbb
dec
cmp
jl
rorb
adc
and
out
inc
sbb
test
dec
push
enter
mov
fnstcw
inc
mov
js
cwtl
outsl
sub
mov
rcrb
shl
pop
sub
out
jle
out
pusha
jns
setl
mov
xchg
call
or
pop
push
inc
push
fcmove
int
push
inc
adc
aas
in
or
dec
insb
aaa
dec
adc
outsb
add
mov
decl
or
test
or
xchg
xchg
add
jne
sbb
push
mov
ss
push
jmp
push
inc
xor
mov
test
sub
loopne
or
cmp
stos
sbb
inc
and
push
aaa
xchg
pop
dec
sbb
scas
fisubl
imul
out
repnz
inc
ror
out
pop
movsb
inc
mov
and
pop
fldcw
mov
lods
cltd
mov
cmp
fucomp
fisubs
dec
jge
lods
mov
add
add
mov
popf
adc
ss
sbb
popf
js
pop
notl
in
inc
adc
cmc
insb
jnp
imul
mov
sbb
jge
inc
xchg
or
xor
cli
mov
mov
or
in
in
call
jmp
add
out
imul
stos
enter
cmc
cmp
or
pop
shlb
test
js
cmp
repz
es
push
dec
and
jg
lret
bound
cmp
pop
shrl
fwait
and
gs
sbb
adc
loope
lret
mov
test
jmp
push
pop
sti
lock
scas
cltd
xor
cmp
sub
pop
sub
add
or
pusha
sbbb
sub
je
repnz
fiaddl
pushf
sbb
mov
jae
outsl
push
adc
sbbb
mov
jbe
or
sarb
iret
add
xchg
fs
push
inc
dec
in
jb
lcall
pop
repnz
out
mull
dec
jecxz
lock
jmp
or
pop
cmp
fs
and
mov
or
fbld
mov
cld
lock
inc
mov
ret
inc
fcmove
mov
dec
add
adc
or
inc
push
js
or
loope
push
jle
jae
sub
or
ljmp
cmp
xchg
sahf
insb
fldt
adc
jecxz
jp
sub
pop
adc
in
pop
push
mov
jae
sub
fs
jbe
mov
cmp
pushf
lods
push
push
inc
dec
push
xchg
fadd
cmp
pop
xor
popf
gs
rorl
pop
stos
push
test
add
xor
cwtl
push
mov
cmpsl
aaa
nop
dec
sahf
or
in
jge
arpl
scas
cwtl
sbbb
sub
mov
xor
sub
xchg
ljmp
adc
push
mov
inc
adc
jo
and
in
adc
aaa
imul
pop
loop
adc
imul
jg
jg
shrl
jecxz
dec
cltd
sub
int
dec
and
nop
jge
gs
jae
inc
and
jo
pop
jnp
fsubrs
filds
jnp
popf
pop
xchg
outsl
ljmp
dec
test
inc
inc
std
xchg
mov
push
ret
lcall
cwtl
pop
mov
jbe
addr16
cmpsb
pop
fadds
dec
jns
cmp
out
sahf
sub
hlt
pop
ljmp
xlat
ret
imul
clc
int
xor
in
cmc
push
inc
xor
test
mov
mov
fnsave
jnp
push
mov
cmpb
arpl
insl
icebp
xor
xchg
xor
mov
mov
xor
subl
or
nop
mov
mov
shl
lahf
rolb
stos
mov
pop
sarl
movsl
cmp
in
gs
adc
imul
in
lds
dec
adc
adcl
push
call
jno
rorl
push
out
jg
inc
sub
push
repnz
and
inc
clc
mov
cmpl
jnp
mov
xchg
es
mov
fstpt
pushf
xor
mov
lret
das
mov
xor
cs
push
inc
fldl
fdivl
add
mov
jo
add
test
pop
mov
fucom
inc
in
mov
push
sbb
pop
jl
and
mov
daa
jae
pop
dec
ffreep
insl
xor
cmp
rorl
hlt
or
addr16
out
mov
mov
or
jno
or
lock
xchg
daa
test
cmp
in
pusha
out
stos
pop
jo
enter
loopne
mov
lahf
xchg
rcrl
iret
negb
loop
daa
mov
add
pop
sbb
or
out
xor
and
adc
jmp
daa
and
pop
xor
outsb
sarb
divl
dec
insl
shrb
dec
jl
xor
je
ljmp
andl
popf
lea
insb
ficoms
fnstenv
test
dec
jmp
mov
push
or
aas
cltd
pop
sub
pop
shrl
mov
sbb
or
jae
or
int
data16
hlt
clc
movsb
stc
fidivrl
lret
test
or
fs
pop
comiss
xor
adc
sub
push
fsubl
inc
mov
or
scas
pop
pushl
sbb
into
adc
mov
test
sub
or
mov
jns
inc
cs
rorb
int3
sub
std
mov
xor
cmp
jle
mov
repz
out
vmwrite
pop
ror
test
insb
lret
in
or
out
lods
aad
fdivl
mulb
paddq
in
pusha
and
iret
es
imul
in
and
ja
xchg
push
push
in
test
je
je
push
ficoml
arpl
xchg
xor
cmc
call
insb
hlt
add
int
jecxz
lret
sti
xchg
push
xchg
jbe
lret
out
lods
std
xchg
fbld
testb
mov
mov
mov
imul
fsubs
out
sarl
rcrb
aad
lret
mov
loope
push
adc
aad
cmpsl
push
lea
mov
lock
clc
sbb
pop
pop
inc
loope
sub
pop
mov
push
out
stos
dec
xchg
pop
mov
push
lret
fwait
decb
fninit
movsb
add
out
mov
sub
negl
lcall
incb
mov
std
jg
mov
out
mov
test
jl
movsl
fmuls
and
bound
stc
pop
mov
xlat
loop
leave
movb
add
leave
shlb
sub
push
pushf
fisubs
insb
fdivrs
scas
nop
loope
add
or
dec
loop
jo
ret
pop
jecxz
nop
mov
icebp
loope
fs
int3
add
mov
mov
cli
lahf
pushf
pop
fisubs
mov
xchg
rcll
dec
hlt
sarb
push
xor
jae
xchg
mov
int3
or
adc
pop
ja
push
outsb
imul
pop
lock
mov
mov
pop
inc
pop
and
push
inc
cmp
or
js
mov
jl
jge
int
pop
or
xlat
push
mov
push
ficoms
xor
jns
inc
loopne
imul
inc
push
dec
lock
loop
outsl
adc
push
pop
sti
xchg
nop
lock
cli
dec
movsb
out
mov
test
jp
enter
stos
inc
in
cmp
hlt
mov
inc
jne
mov
mov
fidivs
lock
xchg
add
fwait
std
dec
aam
sarb
ror
scas
lahf
ss
mov
mov
pop
rorl
push
push
xor
mov
jmp
mov
clc
mov
mov
insb
xchg
mov
daa
clc
les
pop
pop
add
scas
lret
adc
shrl
adc
icebp
xchg
xor
mov
ja
push
lret
inc
adc
xor
xor
pop
or
xchg
mov
cmpsl
fldenv
adc
pop
adc
addl
mov
fucomp
and
inc
fisubrl
dec
and
dec
cltd
adc
pop
aaa
mov
xchg
mov
popf
xor
into
cwtl
das
repz
and
mov
xor
aad
scas
inc
pop
mov
cmc
jo
stos
add
aam
xchg
and
sbb
mov
lret
in
push
add
jbe
jo
mov
in
jae
mov
cmpsb
mov
inc
iret
rcll
dec
mov
loop
adc
ja
imul
xor
and
sbb
lea
cmpsl
pop
mov
sub
pushf
or
int3
dec
div
or
sar
dec
mov
cld
js
jmp
xchg
fidivs
test
fnstsw
ret
hlt
pop
cli
inc
jle
pushf
xor
sahf
out
lcall
stos
xchg
repz
and
ljmp
mov
adc
aad
push
lock
sub
sub
or
ret
jl
or
stos
aaa
inc
push
push
push
jne
call
push
adc
mov
adc
adc
mov
cwtl
adc
dec
xchg
shrl
jb
into
jp
jmp
inc
insb
dec
ret
sub
stos
pop
xor
es
movsb
pop
add
xor
adc
mov
std
add
das
ss
lahf
mov
pop
jns
shrb
out
sbb
clc
mov
rcr
int3
popa
cs
xchg
outsb
jg
or
cld
inc
xchg
jg
mov
pushf
ja
repnz
mov
dec
xchg
dec
xchg
fstl
adc
iret
pop
aas
sub
xchg
or
inc
jns
or
mov
pop
mov
dec
mov
cltd
dec
loop
in
push
pop
xor
dec
movsl
in
test
push
adc
mov
mov
cmpsl
rcr
inc
stos
inc
ja
pop
push
cmp
or
mov
mov
mov
adc
aad
out
iret
pop
push
cld
pop
pop
inc
pop
std
pushf
xchg
adc
or
sti
add
and
or
mul
test
imul
outsb
pop
out
pop
mov
xor
pop
popf
push
sbb
loop
ds
cmpsb
movsl
cmp
push
lahf
vmwrite
loope
xchg
mov
in
aaa
mov
fsubrs
leave
cmp
ret
repz
pop
jnp
jp
push
lods
push
pop
icebp
aaa
int
imul
pushf
jo
cmpsb
mov
fmuls
mov
lock
movsl
jns
cli
dec
mov
sbb
imul
jbe
pop
test
out
xchg
mov
cs
xchg
add
cmpsb
movsb
pop
repnz
fs
in
jecxz
push
adc
ret
pop
ljmp
insl
mov
loopne
xchg
ror
ja
mov
loop
add
jno
or
jp
in
decl
into
ja
xchg
outsb
sbb
xlat
gs
inc
stos
xchg
add
es
cmpsb
out
adc
into
push
jge
test
inc
fbld
cmp
sub
mov
aaa
pop
adc
xchg
push
loop
xchg
call
or
mov
iret
subb
hlt
stos
mov
call
mov
lsl
xchg
lcall
mov
xchg
mov
cmc
jge
mov
je
xchg
clc
adc
scas
jl
lods
dec
ljmp
imul
out
out
xor
dec
pop
lock
pushf
lods
jae
daa
and
jl
in
popf
cmp
incl
cmpsl
and
add
sbb
xor
lcall
int3
lsl
ss
aad
pushl
leave
out
out
mov
fbld
insl
dec
add
jnp
sub
lret
add
scas
add
mov
out
mov
inc
dec
insb
add
addr16
pop
loopne
dec
ja
imul
stos
ljmp
mov
insl
cltd
shl
repz
and
cmp
jp
adc
push
cmp
imul
inc
xor
repz
cmp
push
movsl
addr16
sarl
push
and
rorl
push
inc
fsubs
out
fidivs
xor
les
push
popf
xlat
and
cmc
xorl
sahf
outsb
adc
adc
and
repnz
jmp
test
sbb
push
push
adc
pop
scas
mov
dec
mov
hlt
xchg
ja
inc
sbbl
fsin
and
jp
std
xor
cmp
and
sbb
jne
hlt
ret
jne
lret
inc
cltd
pop
cmp
mov
cmp
xchg
xor
sub
adc
das
jbe
arpl
leave
xchg
xlat
mov
pusha
or
xchg
xchg
sub
pop
and
mov
jle
movsb
cmp
xchg
dec
loope
or
subw
sahf
mov
andl
jnp
inc
outsb
roll
sub
fwait
cmp
enter
dec
shll
rcrl
jbe
jnp
xchg
test
call
mov
repz
pop
sti
pop
mov
dec
dec
or
cmp
gs
in
inc
test
and
mov
int
push
imul
mov
das
sub
mov
cmp
pop
iret
dec
outsb
cmpsb
cmp
add
dec
push
lods
cmp
cltd
xor
shr
adc
clc
insb
add
cmp
fidivl
mov
lahf
ss
and
push
out
jno
je
sbb
enter
scas
mov
mov
movsb
scas
xchg
ljmp
sub
xor
stc
jg
insl
jne
lahf
lcall
pop
xchg
push
clc
out
pop
lock
stos
inc
cmp
inc
in
xchg
push
int
lret
fs
out
inc
out
jo
fdivl
in
cmp
xchg
idivl
clc
in
movq
nop
mov
mov
xor
out
data16
insl
nop
xor
clc
aas
adc
add
je
int3
movsl
out
xor
in
leave
push
mov
cld
mov
add
dec
xlat
outsb
cmpl
mov
int3
icebp
mov
cmc
adc
push
inc
xor
js
lds
les
jmp
add
pop
imul
mov
jo
mov
pushf
xchg
test
ds
mov
daa
dec
lds
test
mov
jne
cmp
fstpl
sub
push
icebp
xor
repz
sbb
jmp
sub
leave
mov
xlat
inc
add
call
xchg
lahf
or
add
sub
les
jns
adc
es
rclb
ljmp
testb
jmp
enter
mov
inc
mov
jmp
sti
xchg
cmc
cli
xlat
lods
rcrl
sbbb
daa
or
inc
push
xchg
mov
or
cli
or
jno
adc
xchg
jge
cmpsb
xor
aaa
addr16
aad
push
mov
mov
jg
int
dec
jno
repz
das
sbb
mov
or
mov
mov
sub
sub
dec
popf
dec
fnstcw
mov
sub
inc
ret
rep
push
sub
adcb
adcl
cmp
call
outsb
inc
popa
dec
loop
popa
cmc
mov
scas
adc
jb
add
xor
inc
daa
arpl
in
rorl
xchg
pop
dec
aaa
mov
rcrb
repnz
inc
fs
loope
xor
inc
cmp
imul
mov
xchg
adc
imul
jp
xor
adc
cmp
mov
push
jmp
call
jb
pusha
add
xchg
test
pushf
and
sahf
xchg
or
scas
test
ffreep
add
mov
aas
and
mov
inc
jg
ficompl
inc
lods
sub
dec
dec
add
icebp
add
pushw
rolb
fistpll
mov
dec
dec
jmp
add
pop
je
sub
adc
repz
movsl
imul
and
adc
inc
push
push
ljmp
cmp
scas
test
inc
std
mov
mov
mov
dec
add
outsl
pop
xchg
mov
jg
sub
imul
aas
add
mov
push
stos
adc
out
aad
loope
cs
sub
iret
insb
inc
pushf
xor
push
inc
adc
imul
rclb
pop
sti
pop
rcl
iret
dec
mov
cmp
mov
int3
arpl
ss
xor
addb
cmp
xor
ja
cmpb
add
xchg
pop
ret
or
in
das
cltd
push
faddl
mov
fistps
pop
out
mov
ss
je
lcall
and
orl
in
js
xor
push
inc
out
fsubr
pop
mov
and
cltd
pop
shlb
sbb
mov
push
xchg
into
xchg
adc
adc
inc
inc
mov
jmp
orl
dec
add
jmp
les
xorl
jl
mov
sbb
push
pop
cmp
filds
xchg
cmp
xchg
inc
aam
orb
outsb
and
pop
das
dec
mov
mov
fsubl
call
jns
inc
dec
push
cmpsl
mov
int
or
bound
leave
pop
icebp
stc
and
lret
add
mov
in
flds
xorl
and
adc
cltd
cmc
or
jle
in
or
mov
shrb
push
or
mov
hlt
mov
popf
jle
jge
xchg
insl
inc
inc
cmpsl
add
mov
push
push
and
stc
xor
xchg
add
jmp
push
mov
fs
pop
push
test
lcall
in
ja
insb
mov
jp
setp
movsb
stc
and
cmp
mov
mov
in
popf
fldcw
sbbb
sub
sub
sub
dec
push
sbb
popf
push
clc
std
pusha
fnclex
xchg
rclb
pop
mov
jns
mov
sub
or
dec
dec
fnstcw
pop
ror
pop
jbe
insl
inc
adcb
fistpll
adcl
adc
lahf
in
or
mov
lahf
out
sarl
pop
movsl
mov
pop
jp
cmc
push
outsl
cli
xor
sub
repz
ss
inc
or
lods
andb
sub
or
and
test
lods
inc
mov
lods
dec
std
lods
dec
aad
int
or
out
jns
and
push
dec
jge
jl
cmpsb
inc
lahf
movsb
lret
in
add
ljmp
xor
lcall
sahf
pop
in
popl
push
imul
in
pop
imul
push
xor
xchg
xchg
dec
mov
in
lret
insb
sbbb
jle
inc
fidivrs
sub
insb
cltd
sub
je
sbbl
xchg
pop
mov
dec
idivl
jge
shrb
in
into
iret
push
cld
and
sub
jl
add
fisttpll
adc
push
and
sbb
ret
dec
jp
jno
add
call
int
lods
adc
xchg
scas
cli
mov
jb
aas
in
pusha
mov
xor
ret
jb
adc
stos
sub
lcall
fldenv
xlat
ss
stos
pop
mov
mov
fistpll
dec
dec
out
and
dec
mov
shl
jg
daa
adc
mov
int
xchg
sbb
mov
xor
fcomip
pushf
daa
aas
loope
test
jo
dec
jnp
or
in
jb
aad
repz
scas
inc
test
arpl
je
push
bound
pop
orl
lds
dec
es
push
outsb
push
inc
xchg
inc
xchg
outsb
andl
xchg
push
cmc
mov
inc
imul
movsl
inc
das
push
push
imul
mov
add
xlat
or
mov
pop
shrl
xchg
add
or
call
test
xor
mov
sub
xor
push
int
shlb
or
sub
push
adc
scas
and
jno
fidivrs
scas
mov
jnp
fwait
jo
adc
das
loope
pop
push
lret
xor
aam
jne
sub
lea
lods
or
ret
push
mov
rclb
push
fisubl
xor
sbb
ret
scas
inc
jl
push
jmp
into
imul
mov
in
popa
or
pop
cmp
mov
rol
nop
adc
call
sub
das
cmp
cmpsb
jbe
jecxz
xchg
pop
test
addr16
pop
mov
daa
mov
push
js
dec
les
lret
mov
push
pop
dec
mov
and
gs
mull
in
aas
ror
ret
dec
adc
dec
in
mov
fcmovnb
or
pop
push
and
fnstcw
mov
dec
jns
dec
in
sti
inc
dec
jecxz
and
cmp
pop
test
aam
jg
push
xchg
outsb
pop
mov
adc
dec
pop
imul
jno
insl
fsubs
mov
push
adc
sub
repnz
idivl
xor
xor
add
mov
add
xor
inc
push
push
cwtl
add
xor
pop
outsb
sub
inc
scas
inc
lods
sub
push
ror
and
scas
call
inc
loopne
jnp
repz
notb
lcall
inc
daa
clc
sti
sub
lock
push
jno
fmuls
setb
push
cmpsb
sub
shlb
sbb
push
iret
or
adc
hlt
cmp
pop
pushf
push
xchg
dec
pushf
dec
jbe
jns
aas
sbb
fstpt
imul
in
jecxz
add
jg
adc
aas
cmp
andl
push
aam
xchg
push
push
incb
cmp
leave
hlt
or
leave
int
sub
or
mov
scas
mov
les
in
mov
mov
xchg
xor
sarb
ss
int
mov
jl
push
xor
xchg
push
je
cmp
sbb
xlat
repz
je
jmp
aam
cmp
outsb
subb
nop
daa
sahf
shll
inc
repnz
insl
repnz
xor
add
es
in
das
loop
mov
add
sub
sub
fs
pop
mov
icebp
test
int
adc
fstpl
xchg
adc
push
fisubs
mov
push
push
arpl
jne
pop
jno
add
aad
aam
int
mov
pop
leave
xchg
sub
push
add
loopne
inc
repnz
mov
test
or
loope
jne
shll
outsl
cmpsb
bound
icebp
or
aaa
push
insl
jge
pop
scas
cmp
sbb
or
shrb
arpl
adc
pop
lahf
xor
cltd
call
fiadds
jle
js
in
stos
dec
cmpsb
stc
inc
sbb
ja
cli
push
cmp
adc
adc
pop
xor
cmp
imul
xchg
adc
xor
icebp
cmp
nop
mov
fwait
test
test
addr16
ljmp
loopne
adc
loope
inc
push
pop
sub
clc
mov
cld
lcall
movsl
mov
push
sub
pop
xchg
stos
cmc
lods
xor
mov
test
jg
pop
and
std
rcrl
inc
fwait
or
arpl
loopne
jmp
sub
cli
test
hlt
addr16
shrb
sub
data16
data16
mov
fdivrl
pop
inc
insl
leave
ss
lret
leave
pusha
mov
adc
and
icebp
push
xor
stos
or
pop
repnz
imul
scas
xlat
pop
sub
xchg
mov
subb
sti
xchg
les
and
stc
or
mov
jl
sub
leave
add
scas
mov
xor
inc
pop
out
out
adc
mov
imul
pop
cld
or
xor
pop
xor
lret
into
mov
stos
lock
stos
aam
sbb
addl
push
loop
clc
shll
sub
divb
xchg
sbb
sub
add
stc
and
push
out
sahf
mov
insb
das
jge
jmp
nop
dec
pop
filds
ret
push
ljmp
icebp
inc
shrb
lret
mov
cld
mov
add
sbbb
or
std
lahf
je
shl
cmp
andl
pop
push
cmp
jmp
inc
fists
pushf
lds
lret
cmp
xchg
mov
int
or
adc
pop
and
sub
rorl
or
push
jo
movsl
mov
call
lods
lods
sbbl
jecxz
xor
orl
xor
cmpsl
cmpsb
fwait
cli
push
in
movsl
dec
test
lret
rcl
jnp
xor
dec
lcall
lcall
inc
sbb
test
mov
cli
test
mov
push
fnsave
xchg
jp
xchg
pop
in
nop
mov
push
roll
xchg
sbb
and
xchg
pop
int
mov
pop
jo
outsl
cmpsl
jp
jp
dec
inc
mov
dec
jmp
push
imul
sbb
xor
mov
dec
xor
test
outsb
bound
pusha
shrl
sbb
outsb
gs
scas
testl
push
test
xor
xchg
inc
cmpb
push
mov
add
bound
sub
adc
inc
cmpsb
and
shl
into
data16
adc
xchg
pusha
das
sbb
stc
cmp
xor
adc
cmp
addr16
ljmp
dec
cs
mov
stos
and
int
dec
mov
xor
dec
sbb
in
jmp
pop
sub
out
xchg
fwait
inc
jno
jno
andb
push
insl
add
lds
mov
mov
xlat
lcall
loop
fsubl
iret
cmpl
hlt
mov
loop
mov
int
mov
out
rol
incb
jmp
pusha
push
stos
cmp
jmp
jle
add
fists
push
incl
cmp
loop
test
or
scas
sub
cmp
jg
mov
sbb
jne
lcall
pushf
jo
xor
shlb
into
les
int
iret
and
loope
rorb
mov
mov
xchg
jecxz
cmp
bound
adc
or
lret
jl
shrl
addr16
add
in
mov
jno
cmpsl
sahf
or
mov
in
push
mov
pop
movsb
inc
fildl
xor
xlat
repz
xor
sbb
mov
shrl
jnp
jb
mov
cmpsb
ljmp
xlat
andb
add
mov
mov
rclb
xchg
or
je
cmp
leave
cmpsl
mov
pop
push
mov
adc
testb
inc
repz
popf
stos
jnp
sbb
aam
mov
mov
testl
mov
das
and
in
jo
mov
cmc
jnp
repnz
adc
xlat
jne
pop
test
push
lahf
cmp
sbb
mov
clc
loop
movsl
cmp
add
jecxz
scas
ds
loopne
xor
lock
adc
pop
push
dec
inc
cmpsl
lcall
ficompl
sub
adc
jbe
jle
sarl
jne
dec
mov
lahf
push
sub
std
cs
pop
es
add
push
mov
fwait
push
cli
pop
xchg
ret
or
dec
mov
cmp
sub
ljmp
fwait
cmp
cmpl
cmp
inc
xchg
pop
cmp
aaa
mov
testl
pop
aas
fldt
into
movsl
rorb
pop
mov
xchg
sub
adc
lret
dec
mov
push
pop
daa
push
jle
mov
sahf
push
or
cmp
inc
fdivp
das
bnd
mov
add
or
xchg
fiaddl
mov
mov
xchg
xchg
dec
lcall
inc
mov
pop
or
push
je
xchg
xor
cltd
fcoml
into
shll
mov
pop
mov
imul
pop
mov
fnstsw
test
add
jbe
insb
jbe
dec
das
mov
out
xchg
pop
hlt
pop
mov
jg
mov
jle
sbb
pop
cmp
cmp
in
shrl
xor
in
test
cmovae
aas
mov
outsl
lds
imul
loope
sbb
mov
mov
popa
mov
mov
sbb
xor
cltd
sub
inc
inc
adcw
subb
mov
cmp
movsl
in
rcl
dec
cmpl
in
ds
cmc
mov
mov
xlat
fwait
xchg
in
push
cld
xor
push
fldenv
cmp
push
push
repnz
xchg
pop
or
mov
jecxz
add
add
bound
mov
insl
int3
je
mov
les
or
mov
xor
imul
inc
xor
jbe
push
mov
sbb
cltd
and
jne
dec
pushf
jmp
mov
mov
jg
movsb
adc
stos
clc
or
and
fs
pop
cltd
or
jbe
jp
pusha
pop
pusha
idivl
xchg
shrl
out
dec
fcmovnbe
test
and
xchg
loopne
jg
mov
cmpsb
imul
dec
out
pop
and
push
inc
sub
ret
add
cs
jbe
or
mov
lock
out
jb
mov
das
bound
rolb
dec
test
cwtl
pop
jno
fidivrs
dec
stos
cmp
pop
ret
mov
loopne
push
rcrb
jle
mov
out
iret
sub
data16
fsts
mov
pop
notl
cmp
mov
sahf
aam
repnz
cmp
popf
imul
xchg
dec
mov
sbb
push
imul
mov
rcrl
fiaddl
pop
aam
ja
xor
inc
out
ja
dec
loopne
das
sub
sbbl
dec
dec
pushf
jle
mov
dec
sti
xchg
push
mov
ret
cmp
dec
call
dec
dec
loope
outsl
lret
push
repnz
sbb
cmp
lods
and
add
repnz
sub
sbb
pushf
jo
sbb
pop
shlb
in
pop
cmpsb
inc
push
test
adc
cmp
xchg
add
cmpsb
xor
loopne
adc
jns
cmpsl
xorl
aad
xor
cmp
jl
mov
jmp
data16
in
mov
sub
mov
push
mov
in
pushf
and
pop
scas
or
mov
in
popfw
sbb
cwtl
lock
and
pusha
dec
lcall
sub
decb
aad
push
out
test
imul
mov
fwait
push
test
add
ds
repz
jbe
lods
and
iret
jg
add
jo
fildl
loope
jae
outsl
push
sbb
lea
int3
lcall
xor
subl
dec
add
sti
mov
in
push
fmull
xor
insb
fisttpl
pop
lods
jg
hlt
shlb
jge
pop
adc
adc
loop
cmp
xchg
jmp
sbb
jae
and
mov
add
push
jmp
mov
sub
cmp
sub
test
jbe
and
dec
and
popf
inc
cmpsb
mov
stos
xchg
push
jo
push
xchg
movsl
sbb
cmp
mov
mov
add
cmp
rcr
mov
add
cli
xchg
je
adcb
clc
cmc
xchg
xchg
mov
dec
test
cmp
jg
push
sahf
jb
inc
je
mov
les
clc
cmpsb
adc
scas
in
pop
imul
add
jmp
adcb
mov
xlat
sbb
adc
fisubrl
mov
xchg
inc
imul
jmp
cmpb
jmp
std
frstor
nop
lret
ret
loop
pop
jo
stc
xchg
dec
sgdtl
stos
sub
je
push
push
jg
adc
popa
jge
lock
iret
xor
cli
xor
popa
push
imul
lock
arpl
test
xor
fucom
lahf
stc
nop
roll
pop
lret
shrb
leave
aad
shl
sbb
movsl
xchg
sub
dec
jae
imul
xor
call
in
fldt
jmp
add
inc
and
sbb
jne
sarb
loope
adc
sbb
leave
xchg
cvtpi2ps
jae
mov
jle
jns
push
add
cltd
inc
and
hlt
xor
cltd
sbb
lods
cs
test
shl
lock
jmp
xchg
dec
out
out
mov
push
sub
sbb
jecxz
dec
bound
fsubrl
sub
or
arpl
mov
add
test
mov
push
sarb
push
xchg
fxch
push
sbbl
in
or
lea
jmp
dec
inc
popa
mov
pop
adc
mov
sbb
jecxz
or
daa
mov
add
jle
mov
push
xchg
inc
sub
lods
icebp
or
sahf
pop
aam
rcll
repnz
call
xchg
je
adc
clc
pop
aad
cs
lds
andb
out
dec
and
sub
sub
enter
cmp
iret
pop
pushf
sbb
mov
push
stos
cmp
jns
aas
lcall
ljmp
lods
sti
test
sbb
cwtl
mov
cltd
cwtl
adc
sarl
mov
and
push
dec
rcll
xor
stc
pop
pop
inc
stc
inc
mov
test
adcl
sub
in
outsb
enter
xor
pop
ret
inc
mul
sti
lods
sbb
sarl
cmp
imul
inc
add
aaa
lahf
or
setle
adc
add
jl
cmp
sub
jmp
lret
ss
js
rorl
stos
sbb
aad
xchg
or
mov
adc
pusha
or
and
cmp
loop
xlat
sub
xor
dec
pop
lret
mov
push
decb
inc
pusha
and
mov
leave
addr16
scas
push
arpl
pop
incb
aaa
push
in
cmpsb
adc
mov
add
mov
jmp
addr16
addr16
test
inc
jne
xchg
dec
stos
mov
mov
ret
jg
xor
test
push
jg
lods
pop
shr
stos
cmp
xor
cmp
xchg
pusha
mov
movsl
mov
loop
ljmp
jmp
stos
inc
jb
aad
xor
push
inc
mov
pushf
or
inc
or
pushf
push
inc
push
test
xor
es
push
scas
xlat
jns
add
xor
sub
sub
ret
hlt
in
loop
in
add
aaa
es
mov
and
daa
cmp
lret
divl
dec
jecxz
sbb
stos
mov
fidivl
enter
push
je
out
xor
jbe
xchg
rclb
jle
cmpsb
or
je
addr16
sub
sbb
adc
cmp
imul
scas
jno
inc
stc
ret
mov
lret
and
cltd
mov
lret
repnz
inc
test
push
sbb
repz
and
shlb
scas
pusha
ss
mov
cwtl
xchg
jo
lahf
int3
jnp
add
fadd
out
mov
fnclex
xchg
cmp
jmp
and
addb
jle
je
adc
pop
ret
inc
jne
in
adc
and
aam
in
mov
mov
jns
dec
es
adc
push
cmpsl
xchg
pop
sarb
loope
inc
dec
xlat
mov
xchg
in
es
das
mov
mov
mov
dec
mov
mov
out
aaa
jecxz,pt
rcrb
push
fisubl
dec
inc
fimull
outsl
jo
mov
push
lods
xchg
or
lods
dec
mov
xor
and
xlat
mov
sub
fdivl
pop
sahf
dec
inc
loopne
rclb
fistps
stos
push
mov
test
sub
adc
mov
cmc
mov
cltd
push
xchg
fdivl
pop
mov
cmpsl
inc
lea
cmp
lock
stos
aam
push
or
adc
xchg
test
scas
mov
jle
xor
cmpsb
jns
test
leave
call
or
es
lcall
scas
cmp
cwtl
addr16
mov
dec
mov
cmpsb
xor
or
stos
jle
arpl
pop
test
cmp
mov
xchg
fistpll
or
movsb
rcrl
call
sub
push
mov
xor
lcall
or
arpl
xchg
std
xchg
and
enter
mov
andb
mov
add
test
sti
mov
xlat
sbb
sahf
jmp
into
and
stos
xor
jmp
xchg
lds
or
fs
sbb
ja
pop
add
and
imul
dec
loop
push
pop
push
add
imul
dec
out
cmp
pop
or
add
daa
and
sbb
lcall
jecxz
repz
enter
mov
push
pop
lods
add
testl
jle
push
clc
popf
or
sub
mov
int
xor
mov
mov
adc
iret
add
repnz
int
pushf
add
popf
stos
test
xor
cmp
cmp
jns
mov
jnp
push
inc
cltd
inc
aaa
decb
iret
dec
in
out
inc
xchg
cld
pop
mov
nop
adc
cmp
bound
pop
repnz
xchg
xchg
sti
push
ret
test
outsb
cmp
push
push
imul
aaa
sti
in
test
inc
lea
stos
cld
cmp
scas
mov
movsl
hlt
roll
inc
das
ds
adc
cs
cmpsl
mov
push
cmpsb
je
test
xchg
cs
inc
fcomp
mov
imul
and
repz
and
mov
arpl
add
out
iret
adc
jae
ret
loopne
pop
popa
movsb
jl
sub
xchg
pop
popa
jg
aam
fwait
mov
test
jecxz
fdivr
dec
sub
out
push
sub
idivl
sahf
mov
or
push
pop
out
dec
fcomip
mov
hlt
or
fs
push
out
scas
push
mov
fwait
push
fwait
cltd
push
and
and
lret
call
or
cmpsb
gs
jmp
in
movsl
jne
shll
pop
imul
pop
fdivs
xor
notl
addl
xor
in
aaa
lahf
mov
shlb
push
inc
add
mov
leave
into
push
push
gs
push
sbb
mov
test
dec
or
icebp
add
rcrl
cmpl
nop
shll
aad
fnstsw
and
mov
mov
enter
adc
mov
and
test
mov
push
push
push
cmc
cmp
and
hlt
fdivl
adc
cwtl
xchg
test
ffree
pop
push
adc
testb
and
cmp
xor
xchg
repz
push
mov
pop
insb
mov
rcrb
cld
push
cmp
clc
je
adc
mov
shrl
jnp
fs
push
jmp
or
lds
aad
out
into
fwait
xchg
sub
repnz
in
shrl
je
lods
fidivs
lea
sahf
cmp
fistpll
push
xchg
test
mov
in
jg
add
mov
mov
cld
xorb
pop
jb
xor
mov
pop
mov
shrl
mov
xor
add
dec
fsubs
cmp
xchg
jnp
inc
and
inc
cld
clc
lret
sti
sbb
jo
lods
sbbb
sub
stc
adc
rorl
push
cwtl
das
pop
enter
mov
inc
testl
and
push
cmp
cmpsl
clc
sbb
inc
push
call
cmp
push
pusha
in
mov
ss
mov
xchg
test
leave
add
pop
imul
aas
dec
pop
clc
mov
pop
out
rolb
pusha
jae
push
add
xchg
mov
xchg
out
js
dec
insl
add
xor
ja
subb
mov
jbe
lahf
mov
test
test
je
pop
xchg
nop
pop
lcall
hlt
fists
pop
jne
negb
fucomp
repz
jmp
mov
js
fldenv
mov
testl
dec
pop
lret
xor
adc
push
pop
out
push
push
or
jge
cwtl
pop
pop
push
push
std
add
sub
stos
insb
aam
lcall
add
scas
mov
xor
popa
or
fdivrs
dec
add
lcall
sub
adc
repnz
mov
xor
ja
fcmove
sbb
mov
xchg
sahf
fidivrs
movsl
add
adc
daa
or
fldl
aas
sti
adc
dec
aaa
stos
sub
cwtl
out
push
inc
into
andl
xor
mov
push
pop
in
push
sub
sub
lods
fisubrs
pop
and
pcmpgtd
loop
mov
bound
push
cmovne
js
stos
cmp
inc
leave
in
mov
jcxz
jp
popf
mov
push
inc
or
xchg
jle
cmp
adcl
shll
jnp
enter
lods
mov
jo
mov
in
stos
movsl
das
outsl
mov
shll
fcomps
sub
into
test
sbb
stos
mov
cltd
enter
loop
mov
popf
sbb
ja
pop
and
aad
push
jnp
je
jb
addr16
aam
in
or
cmp
cmp
jns
mov
ret
test
mov
std
xor
fiaddl
test
fnsave
movq
dec
stos
lods
and
xchg
insb
xchg
jge
adc
sahf
push
add
shrb
imul
int
repz
divl
dec
loope
jno
es
insl
sbb
xchg
insl
pop
or
pop
idiv
hlt
lahf
in
fwait
clc
xchg
jb
dec
frstor
pop
fidivl
fdivs
pop
sub
test
mov
adc
push
aam
cwtl
outsl
ret
leave
adc
mov
cmp
das
ljmp
incl
jbe
lcall
inc
mov
sbb
orl
xchg
pop
nop
outsl
sbbl
in
push
xchg
push
jnp
das
stos
jnp
dec
call
mov
mov
mov
loope,pt
stos
adc
jmp
mov
test
dec
pop
shl
xor
mov
jmp
jns
xchg
jnp
lcall
xlat
test
jne
dec
popf
add
adc
pop
mov
ret
dec
rclb
fdivr
cmpsb
mov
sbb
mov
pop
rcl
xor
push
test
jbe
dec
pop
test
leave
das
sbbl
insl
je
ficoml
sub
adc
adc
mov
push
dec
xchg
push
call
aas
aas
cmpsl
jno,pt
inc
clc
mov
push
arpl
pop
xor
mov
xor
pop
call
shlb
shlb
cld
pop
std
pop
loop
popa
and
fs
cli
es
or
loope
mov
pop
adc
rcl
lods
pop
mov
push
pop
xchg
adc
add
pop
repz
push
xchg
add
lret
movsl
sbb
je
pop
arpl
movsb
iret
sub
daa
adc
jmp
insl
out
and
mov
push
pop
or
add
push
mov
subb
popa
mov
aam
loope
and
out
out
jge
xor
add
xchg
test
push
out
xor
sub
iret
xor
js
jp
jbe
jg
dec
xchg
sub
jle
sub
pop
or
fisubrs
repnz
sbb
cwtl
loopne
lret
stos
cwtl
xlat
jle
add
xor
cmp
fwait
leave
sub
arpl
rol
divl
push
dec
push
jns
cli
sahf
and
mov
or
cmp
aad
mov
mov
pop
jae
rorb
mov
subl
add
and
xchg
fcompl
push
push
sbb
jno,pt
clc
mov
adc
jb
xchg
mov
xchg
xor
popf
ss
cmp
add
xor
inc
movsb
addr16
jae
call
bnd
dec
mov
movsl
sbb
sbb
mov
mov
xchg
mov
into
sti
out
aaa
mov
mov
sub
mov
pop
rcrl
fstps
adc
shl
rol
dec
addr16
jmp
je
jo
call
mov
or
add
sub
out
push
push
leave
xor
cmp
cmpsl
push
sub
sub
mov
or
rorl
xchg
lock
lods
aaa
lds
dec
jl
outsb
xchg
loope
pushf
add
test
fwait
mov
lea
cld
outsl
jbe
and
bound
leave
cli
addr16
or
and
testb
mov
enter
repnz
int
add
sbb
mov
jg
data16
jecxz
dec
cmp
pop
rol
or
cltd
dec
push
pop
ret
cmp
lods
fadd
cmp
adc
cltd
jg
inc
push
outsl
inc
jg
xchg
adc
mov
mov
cmp
dec
inc
and
outsl
mov
ja
mov
ja
test
roll
out
cmpl
mov
mov
mov
or
pop
push
or
cmp
cmpsb
adc
test
lahf
shlb
and
inc
mov
scas
call
mov
sbb
jmp
hlt
movsl
jbe
add
cmp
insl
mov
xchg
or
in
out
jp
inc
push
fwait
cmpsl
cltd
outsl
pop
mov
fisubrs
lret
pop
andb
fistpll
das
pop
rorb
pop
xor
mov
hlt
adc
pop
hlt
push
test
rolb
je
inc
ret
adc
scas
xchg
hlt
testl
pusha
jns
in
or
cmp
and
aas
call
push
mov
push
rcr
mov
add
mov
mov
into
loope
add
sbb
call
lock
add
lods
xor
sub
je
sub
mov
pop
mov
mov
stos
xchg
call
test
mov
aam
mov
mov
loop
or
push
mov
adc
out
bound
pop
add
enter
jmp
pop
push
mov
dec
aam
aad
cwtl
or
xchg
test
mov
cmp
bound
push
and
fadd
sub
add
xchg
cmpsl
cmp
add
jae
dec
shrb
stc
mov
stc
jne
ficompl
and
mov
clc
or
or
pop
mov
roll
lods
dec
out
cmc
js
and
and
fwait
mov
fstps
iret
mov
jp
dec
mov
fildll
xchg
sbb
fidivl
jne
shrl
mov
fidivrl
mov
cmp
xchg
sbb
stc
out
dec
xchg
push
jp
scas
lods
ret
or
or
cmp
adc
and
lahf
cmp
outsb
subl
loope
inc
call
loope
rorl
inc
push
in
daa
and
mov
push
or
pop
mov
sub
sub
mov
mov
or
pop
inc
rcrb
cmp
data16
cwtl
dec
or
mov
arpl
cmp
add
pop
fcmovnb
es
pop
cmp
xorl
loop
lea
or
sbb
mov
xchg
pop
sub
pop
mov
sahf
and
movsb
inc
lret
xchg
leave
insl
jg
sbb
sbb
xchg
in
stc
ljmp
xchg
adc
and
lock
scas
scas
cmpsl
add
lahf
notl
mov
inc
xor
es
xchg
or
xor
in
repz
out
xorb
cmp
push
mov
add
clc
sti
cwtl
scas
gs
and
loop
into
imul
repz
test
ret
mov
fisubrl
mov
lods
cld
cmp
aas
jecxz
jecxz
mov
xchg
cmp
pop
imul
test
or
daa
dec
les
popa
jmp
fwait
and
shrl
cmp
cmova
fadd
dec
fsts
fistpl
shrb
out
je
cmovs
lret
jmp
mov
mov
dec
or
mov
daa
nop
adc
fucomip
pusha
fst
jp
lds
and
push
xchg
push
lock
out
inc
adcb
js
daa
adc
pop
int
fidivrl
xchg
popf
addr16
pop
xchg
add
cs
jmp
lret
sbb
or
cmp
xor
or
ret
push
pop
dec
fisubs
iret
or
push
adc
imull
mov
xor
xor
std
jmp
jne
pop
aad
adc
mov
test
hlt
sub
cmp
mov
test
js
test
orb
nop
fstl
movsl
das
fcmove
fnsave
sti
fwait
cmp
sti
pop
inc
xor
imul
dec
mov
or
mov
inc
sbb
fdivl
xchg
mov
adc
push
stos
and
xchg
mov
js
leave
and
or
xchg
outsb
cmpsl
ds
hlt
cmp
jmp
add
jg
and
or
into
cmp
pop
and
lods
or
lret
in
adc
loopne
dec
jno
push
cmpsl
pusha
ret
xchg
sbb
mov
scas
inc
mov
je
fisubrs
or
or
in
ja
mov
retw
sahf
lcall
push
out
or
leave
enter
iret
mov
fildl
jno
test
cmp
iret
xor
fsubs
and
xlat
insl
inc
faddl
sbb
in
hlt
mov
in
pop
in
adc
push
pop
cld
sbb
xor
ret
mov
xlat
inc
dec
popa
jb
loope
mov
dec
shl
mov
mov
pop
dec
push
test
push
add
mov
stc
out
sub
ffreep
ud0
idivl
fs
jle
in
fsts
es
inc
push
rolb
mov
rorl
in
inc
fdivrl
outsl
cwtl
push
pop
aad
or
mov
lcall
xor
js
movsb
std
rorb
in
inc
outsl
push
out
lahf
rcrl
lret
in
aas
js
mov
mov
iret
cmp
xor
pop
push
push
jp
fwait
xor
ljmp
jg
xor
mov
and
cld
jnp
sbb
jecxz
pop
stc
inc
or
out
loop
jmp
xchg
xchg
stos
mov
test
pop
and
loopne
das
mov
and
sub
mov
inc
adc
inc
pop
ds
add
loop
lahf
dec
fsubrp
int3
insl
or
std
sbb
or
sub
pop
jg
mov
mov
jno
sti
shl
jge
ret
lcall
jne
xchg
gs
repz
adc
std
sarl
sub
mov
shrl
in
mov
xlat
jl
mov
mov
mov
ljmp
add
mov
mov
bound
jo
das
cltd
inc
mov
push
inc
sbb
call
pop
or
jo
jp
xchg
fsubrs
cltd
cli
pop
mov
mov
dec
clc
push
loopne
xor
and
icebp
push
lds
jmp
xchg
push
push
ds
cld
xor
jns
les
sub
ficoms
xorl
mov
inc
cmp
sti
outsb
jmp
mov
fmuls
scas
jl
xchg
push
push
mov
xchg
push
xchg
arpl
lret
push
aaa
out
pop
adc
mov
jecxz
mov
loopne
cmp
stos
out
ret
xchg
call
into
pop
or
das
adc
push
orb
out
rclb
or
cmp
repz
mov
xchg
xor
mov
sar
mov
cld
mov
mov
iret
jl
jl
pop
pop
pop
jmp
cmp
fsubl
popf
sub
insl
int3
shll
xor
xlat
push
or
and
mov
shll
xlat
cmp
mov
pushf
fwait
sti
sub
pop
xchg
xor
push
sub
or
sub
in
out
movsl
push
cwtl
hlt
jo
cmpsb
push
scas
or
imulb
scas
lock
mov
fsts
sub
aad
daa
xor
xor
pop
xchg
repnz
fisubl
xchg
xor
jnp
push
xchg
inc
inc
fistpll
xchg
insl
mulb
pushf
jecxz
rorl
add
out
inc
inc
mov
lods
hlt
pop
dec
scas
adc
fsubs
cwtl
rcrb
test
mov
xchg
cmp
sbb
xor
mov
push
movsb
daa
lods
mov
into
cmp
pop
add
test
jl
rol
ficompl
mov
dec
mov
js
jl
lret
int
adc
dec
sub
mov
or
repnz
adc
jge
call
cmp
push
add
xchg
in
mov
shl
cmp
lea
mov
xchg
out
add
outsb
sub
call
out
or
lods
sbb
in
in
lds
pop
in
adcl
fcmovb
test
js
mov
dec
inc
and
mov
fldcw
or
clc
cmp
in
add
mov
ljmp
pushf
xor
dec
inc
push
push
inc
das
push
test
adc
and
or
xchg
jnp
or
out
xchg
ret
daa
enter
loope
stc
xlat
enter
sbb
xchg
sbb
jle
inc
pop
or
leave
inc
mov
cmp
arpl
jp
xorb
sub
push
inc
test
sbb
adc
insb
mov
inc
cli
mov
sbb
int
xor
fldenv
popf
das
cmp
dec
loope
dec
movsl
js
fldt
adc
jecxz
push
ret
fdivp
sbb
ret
cltd
adc
mov
sarb
aaa
addb
push
rcrl
xchg
dec
push
mov
and
pop
mov
or
lods
addl
dec
aad
test
lds
mov
mov
arpl
sub
push
jle
pop
lahf
pusha
xchg
insb
sarl
lret
mov
rcll
test
mov
jnp
cmp
mov
mov
mov
sub
adc
aaa
sbb
inc
push
push
stos
xchg
pop
inc
pusha
inc
xlat
adc
es
fsubr
inc
sub
push
mov
loope
xor
into
adc
into
pop
out
popf
pop
sub
in
imul
dec
out
push
orl
cltd
mov
cmp
fwait
jg
adc
test
lods
sahf
add
rcrb
icebp
mov
gs
nop
inc
pop
sarl
mov
push
jo
sbb
xchg
movsl
push
imul
or
mov
test
nop
repnz
mov
rcll
mov
cmc
ja
stos
mov
mov
je
inc
and
mov
stos
call
fiaddl
and
sbbb
fnsave
xchg
push
clc
testl
mov
pop
insl
mov
jmp
ss
test
clc
jb
sub
cmp
imul
mov
and
and
push
rorl
pusha
mov
pop
ljmp
fstpl
stos
adc
inc
in
xor
call
mov
sbb
push
sti
sub
aad
popf
popf
xor
or
mov
inc
sbb
les
jbe
les
fldl
outsb
dec
jno
loope
fwait
popf
xor
push
repnz
hlt
dec
into
out
popf
cmp
mov
xchg
mov
pop
and
dec
cmp
xor
das
sub
popf
dec
mov
repz
lret
adc
jne
lds
xchg
lods
leave
or
jbe
sbb
jae
mov
int3
je
gs
rcll
push
cmp
lret
in
inc
stc
lahf
mov
repnz
and
lahf
push
std
inc
xor
inc
pop
dec
out
popf
xchg
adc
fmuls
xor
xchg
jp
mov
push
cmp
sbb
sbb
dec
add
mov
repnz
mov
inc
add
inc
inc
pop
add
mov
push
ss
dec
jge
inc
fistl
js
pop
data16
ret
adc
push
into
xor
cmp
add
in
out
pop
jb
lods
incl
or
mov
push
jnp
sbb
movsl
cmpb
mov
mov
popa
scas
ret
leave
mov
mov
mov
leave
repnz
xlat
mov
shrl
push
push
insb
out
xchg
cmp
jle
mov
test
or
mov
in
outsb
push
mov
cmp
sbb
inc
jg
mov
fwait
shll
int
cmp
scas
inc
xchg
insb
inc
dec
data16
out
fadd
cmc
pop
shr
cmp
mov
ja
pushf
scas
adc
insb
jge
adc
in
dec
repz
scas
cs
fistpll
out
dec
stc
sbb
inc
je
mov
adc
loopw
jle
mov
dec
sbb
pusha
mov
ret
or
push
out
sub
pop
pop
cs
jne
add
pop
mov
xor
push
aam
xchg
bound
jmp
scas
mov
or
imul
ljmp
jb
cmp
cwtl
in
mov
push
pop
sti
jl
adc
fwait
cmpsb
lock
mov
adc
sub
ss
xchg
clc
mov
dec
push
sbb
jo
jo
sarb
fistpl
or
mov
sub
sbb
fwait
daa
inc
neg
aas
shll
xchg
xchg
bnd
syscall
mov
cmc
loope
mov
push
nop
je
ffreep
jno
in
mov
jmp
inc
fnsave
sbb
add
pop
mov
jb
adc
out
lret
sub
mov
jp
rcrl
xchg
sbb
inc
mov
insl
popa
rcrl
mov
cmp
jae
testl
cld
sbb
imul
aas
pop
pusha
test
cmpsb
pop
imul
dec
into
lods
or
stos
adc
adcl
pushf
cmp
pusha
jae
xchg
imul
out
lahf
stos
in
cmc
iret
pop
dec
nop
into
xor
daa
pop
cmc
mov
arpl
and
push
andb
in
lea
xchg
test
mov
or
gs
sti
xchg
mov
sbb
and
in
int
adc
imul
testb
xchg
lahf
ss
mov
inc
test
sub
lahf
xlat
mov
and
and
xchg
mov
push
pushf
subb
sbbl
push
out
cmp
subb
lods
in
cltd
or
leave
test
sti
lods
outsb
pop
inc
inc
fbld
jb
ret
call
or
lea
sbb
nop
mov
lea
stos
xchg
rol
jnp
jb
in
aaa
or
fdivl
iret
mov
fdivs
dec
mov
insl
mov
xor
loop
insb
and
mov
dec
push
js
cmp
pop
int
fcom
cmp
mov
sbb
mov
pop
and
dec
cli
hlt
pop
jge
scas
sub
loopne
add
mov
dec
and
xchg
xchg
shrl
adc
adc
repz
push
or
icebp
dec
xchg
xchg
xor
sub
lea
jnp
hlt
insb
mov
push
push
inc
cwtl
sub
jl
mov
fucomip
aas
pop
cmp
mov
lret
and
adc
adc
jb
mov
je
push
xlat
cltd
cs
sub
out
add
jo
fucomi
fs
shl
mov
mov
adc
and
inc
xor
pop
sahf
ret
inc
fdivp
mov
cmp
jno
lods
push
jb
test
xor
das
pop
xchg
adc
cmp
dec
and
test
lock
ficoms
dec
xlat
sarl
movhps
pop
mov
out
jns
testb
mov
addr16
mov
out
pop
std
test
imul
cmp
add
dec
lds
stos
movsb
push
cmp
les
and
jno
jb
push
cmp
adc
push
cmp
xchg
sub
iret
jno
inc
pop
outsb
xchg
pop
mov
ror
sbb
xlat
sbbl
xor
ds
adc
cmp
sbb
dec
cmp
subb
mov
int
and
xor
dec
out
push
lock
lods
fcomip
xlat
push
ja
lret
movsb
aaa
mov
push
push
and
inc
jne
sbb
xchg
adc
inc
cltd
sahf
xor
mov
sarb
scas
xchg
dec
sbb
outsb
out
jo
pop
xchg
adc
mov
arpl
bound
or
pop
cld
inc
dec
mov
xor
mov
sar
xchg
sbb
xchg
jo
enter
inc
mov
dec
popa
dec
sbb
sub
stc
aam
icebp
add
sub
insl
pop
push
movl
loopne
jne
pop
mov
push
add
or
add
sub
movsl
add
add
jb
mov
sub
lret
sti
jge
cmp
and
pushf
mov
daa
xlat
lret
cld
or
imul
cmp
rcr
call
pop
clc
bound
fsubrl
stc
orb
and
adcb
jp
pop
out
add
je
xchg
mov
xchg
adc
loopne
push
icebp
jnp
jmp
pop
andl
mov
adcb
jmp
std
xor
push
js
fwait
in
or
xchg
push
dec
sub
push
pop
mov
dec
std
insl
nop
data16
sbb
mov
sub
shrb
dec
cmp
test
punpckhwd
outsl
fwait
in
mov
leave
testb
nop
adc
into
dec
test
clc
add
add
fnstcw
iret
add
push
out
jno
insl
test
cmp
push
lret
and
xchg
add
mov
pop
push
xor
adc
dec
xor
stos
mov
lea
inc
cli
mov
mov
imul
dec
pop
push
push
test
jne
adc
inc
and
xchg
lock
fsubr
mov
sub
push
sarl
fcomps
pop
popf
aas
inc
mov
mov
and
push
add
inc
out
je
mov
outsl
mov
mov
testb
out
push
scas
mov
xor
inc
ljmp
sub
sub
cli
xchg
test
shlb
sbb
or
sub
dec
mov
aad
ret
pop
das
or
push
cmp
hlt
push
jp
mov
or
push
sub
xorl
arpl
or
lret
xor
mov
xchg
filds
push
lock
push
pop
mov
nop
jnp
mov
sti
stos
adc
out
mov
inc
jecxz
mov
cli
lret
mov
in
lret
adc
push
sub
or
negb
mov
dec
insb
sub
popf
imul
icebp
pop
int3
cmc
mov
fadds
pop
mov
pop
and
in
lods
add
inc
scas
jo
loope
fnstenv
es
mov
les
nop
rorb
cmp
inc
outsb
jbe
and
mov
mov
sahf
call
decb
xchg
fs
xor
insb
cmpxchg
or
or
push
mov
adc
jl
negb
mov
add
jp
fs
push
clc
or
push
aas
loop
jno
xchg
push
jns
cmpsb
sbb
cwtl
dec
scas
clc
mov
icebp
aas
jae
xor
shr
push
mov
sub
rcrb
das
pop
shrl
inc
mov
shr
sub
movsl
lahf
inc
inc
roll
or
clc
add
mov
fisubl
mov
pop
inc
cmp
jno
and
insl
test
sbb
sub
mov
cmc
insl
daa
xchg
pop
add
add
pop
sbb
xchg
pop
aam
addr16
into
mov
fdivs
push
pusha
cld
cmpsb
stc
push
push
movsb
movl
inc
add
xchg
xchg
in
mov
call
xchg
sub
mov
scas
sub
lcall
and
dec
jns
mov
jecxz
shrl
fmuls
scas
mov
out
push
xchg
popf
lds
xor
jge
out
jge
lods
xchg
scas
ret
pop
cs
sbb
mov
xchg
divb
jb
xlat
push
movsl
xchg
mov
test
adc
fists
inc
icebp
jp
add
or
sbb
xchg
pop
lret
in
inc
xchg
in
mov
shrl
dec
pop
or
out
movsl
cld
fwait
and
xchg
fdivl
add
xlat
dec
mov
fs
cmpl
pusha
jne
pusha
or
adc
insb
dec
mov
or
ret
into
pop
pop
dec
loop
call
dec
dec
xor
xor
push
mov
mov
pop
cmpsb
xor
rorb
pusha
mov
xor
stos
shlb
sbb
or
popa
sbb
les
insl
add
jbe
mov
inc
cli
push
xchg
shll
int
andl
ss
adc
fsubr
aaa
subl
ss
push
mov
roll
je
into
mov
push
and
sub
adc
fmul
in
outsl
adc
and
mov
jae
int
jne
push
jge
pop
xchg
mov
push
inc
sub
test
sub
sub
push
in
stc
sbb
das
ds
arpl
dec
rcrb
aad
jp
cltd
cs
outsl
int
movsb
mov
nop
pop
mov
inc
jmp
mov
or
outsl
jbe
mov
cltd
test
cltd
mov
jne
outsl
and
mov
jb
inc
je
lock
dec
xchg
ss
jne
bound
data16
adc
jmp
subb
jne
jmp
clc
or
cld
xchg
pop
test
popa
push
data16
sbb
insb
jle
jg
loop
loopne
mov
movsb
lret
xor
sbb
inc
sub
pop
dec
lock
lea
icebp
sub
clc
das
adc
rolb
jge
daa
push
nop
stos
cmp
fwait
inc
stc
or
jne
mov
pop
lret
es
mov
xchg
mov
fsubrl
jns
jnp
pop
cmc
xchg
xor
cwtl
das
sub
aas
mov
shll
pop
pop
pushf
mov
sbb
mov
dec
in
test
insb
inc
in
cmp
mov
in
add
fwait
xor
sub
lret
ljmp
adcl
mov
mov
adc
ret
add
inc
sub
clc
cmc
out
ret
repnz
ficoml
loop
xor
popa
aaa
inc
arpl
pop
aaa
out
add
popa
jno
xchg
xor
jmp
cmp
pop
scas
ret
jle
pop
into
ret
cli
fwait
test
out
mov
rorb
sbb
mov
xchg
popf
cmp
jecxz
icebp
dec
and
mov
hlt
leave
ficoml
leave
orb
ss
mov
mov
jne
fs
cmp
push
andl
pushf
scas
aad
loope
mov
loope
push
rcrl
adc
sbb
int
adc
pop
pop
push
aaa
test
push
jo
cli
inc
scas
movsb
jmp
mov
fidivl
aaa
pop
dec
add
jnp
xchg
xor
xor
xchg
dec
lea
sub
push
lret
inc
loopne
out
ss
pop
lods
andl
out
cmp
int
push
fsts
faddp
push
jecxz
ficoml
jae
jmp
jg
iret
adc
js
ds
dec
jae
sbb
in
scas
adc
and
loop
andl
cwtl
or
xchg
add
ss
movl
cmp
cmc
pop
cmp
cmpsl
cld
lods
test
shlb
outsb
push
pop
lahf
xor
out
adcb
or
addr16
testb
push
sub
cmp
pop
sub
inc
fnstenv
push
and
cltd
ja
mov
pop
fidivrl
jge
outsl
fwait
jecxz
pop
adc
inc
aaa
loope
in
inc
or
into
sbb
test
hlt
xor
out
pop
stos
mov
cmp
xchg
ss
pop
jmp
sahf
fnsave
fildl
push
mov
add
xor
mov
aad
loopne
push
mov
jne
mov
pop
sbb
jg
jns
mov
inc
imul
mov
jnp
icebp
push
test
adc
sti
cmp
and
rcrb
pop
shlb
inc
or
lahf
std
das
xchg
sub
mov
push
popa
push
in
mov
loope
lret
bound
repz
lahf
js
xor
jecxz
cld
xchg
loope
dec
or
jnp
scas
push
shl
mov
out
test
mov
push
push
das
adc
push
push
jle
ret
lret
test
cld
adc
aad
inc
out
add
outsl
pop
insb
cltd
out
jae
cmp
mov
pop
dec
bound
add
mov
xchg
push
aas
push
pop
mov
adc
or
cltd
sub
ret
imul
xchg
xchg
adc
xchg
iret
lret
mov
adc
xchg
cmp
dec
mov
jp
sbbb
pop
mov
jmp
call
xchg
fisubl
lock
lock
add
dec
hlt
int3
ja
dec
inc
repz
jb
in
jnp
sbb
mov
lret
and
dec
pop
xor
out
aas
ret
mov
stos
daa
mov
mov
sub
popa
cwtl
mov
scas
inc
repnz
push
call
sahf
mov
nop
sub
rorb
shrb
jp
sbb
push
ljmp
jno
popa
gs
sub
mov
inc
mov
xchg
adc
fdivl
pop
popf
bound
xchg
imul
inc
dec
dec
ljmp
loopne
jecxz
test
nop
dec
cmpsb
mov
das
call
or
pop
shrl
imul
mov
or
addl
jge
lcall
inc
mov
hlt
call
mov
sbb
or
cwtl
cmp
mov
mov
push
lods
ficoml
pop
adc
mov
fsubrl
add
addr16
idivl
cmpsb
aad
adc
out
pop
jnp
and
int3
lock
rorb
fidivs
pop
sti
or
adc
daa
mov
repnz
mov
cmp
fnstcw
stos
std
ds
or
inc
pop
pop
popf
push
jmp
mov
jb
add
jecxz
push
adc
and
movsb
lods
dec
js
or
sbbb
or
pop
cmp
add
popf
out
or
xchg
jl
movsl
pop
test
xchg
mov
push
fldl2t
stc
xor
pop
xor
scas
je
xor
and
outsl
fcompl
xor
push
and
mov
ss
push
push
push
cwtl
pop
insb
lret
fucomip
jmp
sbb
imul
aam
xchg
inc
repz
cmp
xchg
cs
jle
ds
movsb
inc
shll
lret
insl
mov
push
mov
jl
out
mov
nop
fbstp
inc
mov
nop
pop
or
inc
sahf
or
mov
mov
inc
push
pop
or
scas
aaa
jns
mov
in
js
lret
rcrl
sub
nop
testb
dec
ret
mov
inc
mov
jecxz
mul
mov
xor
cmp
sub
xlat
cmpsl
gs
jns
je
xor
out
pop
dec
push
jns
scas
stos
xor
push
inc
inc
test
jnp
mov
repz
cmp
dec
mov
xor
orb
decb
xor
sub
xchg
pop
psubusb
pop
dec
stos
xor
pop
mov
pop
nop
pop
insl
scas
pusha
iret
mov
aad
pop
mov
pop
inc
or
add
jmp
out
mov
idiv
push
aad
popf
add
ret
mov
cmc
push
in
dec
cwtl
leave
mov
cmp
push
sub
xchg
sub
imul
andb
xchg
mov
and
xor
iret
pushw
cmp
xchg
sub
jae
xchg
sub
sub
cmp
int
lods
add
aas
enter
hlt
lret
lret
xchg
xor
outsl
jnp
mov
adc
rcr
pop
inc
fmull
cs
pusha
repz
add
std
mov
mov
jae
jbe
js
cwtl
lea
addb
scas
and
nop
lds
mov
call
fnstenv
in
aas
sub
sti
inc
or
xchg
fsts
push
dec
jno
xchg
xchg
rcll
dec
xor
mov
gs
pop
dec
ret
mov
test
inc
lret
data16
stos
jns
xor
in
add
mov
aas
xorb
mov
sbb
hlt
cmp
jmp
mov
inc
aaa
and
ljmp
sub
mov
mov
je
aas
das
xor
test
scas
mov
iret
add
repz
jns
and
pop
jge
xchg
adc
sbb
fstps
fstpl
test
movsb
js
mov
sbb
jb
outsl
cmpsb
loope
sub
cmp
push
inc
mov
mov
cmp
xor
jge
hlt
mov
jp
and
mov
andl
ror
mov
pop
sbb
or
sbb
test
cmp
adc
sti
mov
jmp
jo
jbe
hlt
adc
xchg
sub
xor
addr16
dec
jecxz
add
mov
or
stc
mov
push
int3
cwtl
sti
mov
inc
inc
and
mov
inc
js
mov
push
xor
adc
lret
push
inc
pusha
jne
pushf
xchg
adc
and
sub
inc
addr16
inc
jp
gs
sbb
xchg
cmpsl
jns
inc
or
aaa
ja
xor
sbb
mov
mov
aaa
jbe
push
dec
out
fcoms
mov
mov
and
pop
adc
scas
test
ja
lahf
cmp
mulb
add
out
imul
popa
test
in
jle
adc
xchg
add
mov
in
lahf
ss
add
xor
test
mov
pop
sub
imul
cwtl
jp
add
scas
pusha
xor
hlt
iret
loope
iret
scas
jne
dec
test
jl
clc
or
jns
outsl
lahf
sbb
gs
ss
jmp
inc
or
xor
rorb
scas
mov
in
das
push
imul
xchg
jb
xor
xchg
sbb
sbb
sbb
sti
dec
jmp
push
loope
fwait
sub
fnsave
ss
or
cmp
sbb
add
mov
addl
lods
mov
sbbb
adc
addl
outsb
jns
ret
test
repnz
in
popa
push
movl
int
pop
test
xor
nop
dec
ljmp
test
iret
cmpb
pop
jbe
mov
mov
push
pushf
xor
gs
movsl
adc
sub
adc
cmp
inc
pop
jne
or
mov
mov
pop
push
xlat
shl
mov
mov
sbb
jecxz
adc
or
cmp
push
orb
and
das
out
xchg
lea
adc
xchg
lret
mov
cmp
push
lods
sub
cltd
pop
cmpsl
ja
mov
sti
add
aaa
hlt
hlt
lcall
mov
sub
push
jne
mov
lods
out
fs
cmpsl
sbb
dec
add
dec
push
sub
cmp
fisttpll
outsb
mov
loopne
test
jnp
push
cs
aaa
cwtl
subl
lods
fcomi
inc
jnp
jno
fnstsw
leave
jbe
cli
sub
fdiv
fs
xchg
and
dec
push
xchg
aas
mov
sub
test
movsb
nop
mov
mov
mov
rolb
xchg
jbe
lcall
mov
test
hlt
push
xor
aad
out
idivl
shl
sbb
shr
test
inc
or
hlt
out
jnp
sub
cmpsl
addb
ret
push
out
push
dec
int
pop
add
adc
in
loopne
jo
xlat
dec
jle
jnp
push
lea
adc
pop
mov
pop
out
pop
add
gs
and
xchg
orb
add
daa
out
jnp
xchg
dec
leave
mov
stc
adc
rep
mov
lods
ret
mov
adc
jo
clc
cmpsb
cld
xor
sbb
iret
imul
ficoml
dec
or
adc
ja
scas
fs
enter
popa
mov
stos
out
push
daa
testb
movsl
sbb
jne
mov
xchg
pop
std
int3
mov
push
mov
or
cmp
mov
fstpl
push
mov
imul
add
sti
push
pop
hlt
and
aad
push
and
mov
stos
das
add
fisubs
xchg
jae
repnz
mov
inc
lret
jbe
xor
call
hlt
sub
xlat
insb
pop
daa
cmp
nop
push
sub
iret
xchg
push
nop
out
sub
pop
push
sub
mov
pop
push
xchg
pop
sbb
cmpsb
cmp
popf
dec
loop
hlt
sbb
sub
cltd
pusha
aaa
pusha
xorb
jbe
loopne
gs
push
mov
sahf
cmpsb
iret
sarl
sub
repz
push
out
roll
lcall
icebp
dec
xchg
movsb
cmp
in
push
repnz
scas
dec
sbb
or
add
cld
lcall
sbb
packsswb
cs
xchg
call
jle
aas
push
xchg
fwait
add
lock
mov
pop
repnz
push
int
mov
rclb
ret
aas
push
in
sbb
ret
adc
push
gs
and
fistpll
pop
subl
pop
pop
cmp
in
cmp
xorl
rolb
inc
mov
mov
cmp
loopne
fldl2e
cmp
xchg
int
inc
fs
pop
imulb
pop
adc
hlt
sahf
cwtl
pusha
add
fwait
pop
in
adcl
mov
insb
add
dec
add
fidivl
popa
mov
sbb
jb
insl
ficoml
mov
shr
dec
js
imul
stc
cwtl
xchg
repz
sub
out
bound
pushf
add
jns
lahf
jno
inc
adc
ja
rorl
lret
mov
fidivs
cmpsl
dec
or
xlat
dec
inc
cmp
mov
push
cmc
les
cli
xchg
xchg
in
mov
push
cli
pop
push
pop
dec
in
mov
or
adc
out
sbb
ds
addr16
cmpsl
adc
sub
add
ficomps
cld
and
in
add
adc
cmp
mov
sub
xor
xchg
mov
mov
dec
imul
dec
ret
mov
jp
or
call
in
decb
xchg
xchg
dec
sub
aad
hlt
sbb
dec
xor
mov
inc
fmuls
adc
sub
ficoml
mul
add
fucomp
and
inc
sti
pop
dec
adc
stos
sbb
es
mov
adc
cmp
shr
cmp
sub
mov
adc
mov
test
ret
fs
lea
xor
dec
daa
jle
or
or
sbb
fs
out
sahf
data16
mov
dec
jle
cld
cmp
mulb
imul
cmp
jg
inc
xlat
stos
jg
ror
pushf
mov
pushf
cmp
fisubs
mov
andb
sbb
cwtl
enter
cmpsl
ljmp
pushf
lods
ljmp
adc
inc
test
sbb
cmpb
jge
pop
into
push
mov
add
lret
lret
lcall
mov
mov
xchg
cmpsl
repnz
sub
jg
pop
notb
pop
mov
aam
repz
lcall
clc
iret
outsl
xor
adc
xchg
stos
add
xchg
and
andl
and
pop
xor
lahf
inc
inc
push
xor
pop
gs
inc
push
push
xchg
and
cmp
outsb
mov
push
lods
jle
inc
sbb
mov
loope
mov
dec
xor
aam
nop
ret
imul
xor
or
and
int
aas
mov
psllq
push
fwait
insl
addr16
fmuls
and
cld
or
imul
sti
dec
push
repnz
sbb
icebp
adcb
xchg
es
stos
sub
fidivrs
lret
dec
aas
push
jge
mov
mov
adc
cs
mov
sti
xchg
jnp
repnz
mov
or
inc
pop
insb
add
jae
mov
jg
mov
lret
ffree
rclb
sbbl
fistpll
adc
es
enter
pusha
cmp
push
insl
daa
lcall
or
and
adc
inc
ret
ficomps
or
cmp
fdivrl
xchg
pop
xchg
ss
add
push
sbb
push
jp
mov
dec
lods
jmp
jmp
std
and
insl
and
push
and
les
mov
xor
movsb
mov
movaps
mov
xchg
lock
icebp
mov
and
js
cmp
pop
cmp
xorl
adc
push
lock
mov
cmp
in
stos
jnp
pop
adc
pop
fnstsw
jg
pop
add
fstpt
xchg
jmp
testb
in
stos
in
repz
push
dec
cmp
and
js
nop
pop
jne
lea
mov
inc
dec
lret
lods
and
sub
repnz
ss
sub
pop
xor
js
dec
stos
insl
mov
cltd
inc
out
dec
adc
popf
mov
pop
inc
jp
jmp
mov
and
sti
mov
in
sbb
testb
icebp
orl
dec
mov
cwtl
ret
xchg
gs
out
les
adc
mov
testl
jb
dec
sub
cmp
mov
cmp
aaa
pop
mov
or
xor
nop
mov
dec
test
stos
jg
sub
call
lret
out
into
push
ss
adc
pop
out
pop
push
fnstsw
xchg
repnz
je
inc
jge
mov
lret
mov
dec
add
aas
and
cmc
adc
fcmovnbe
sbbb
fnsave
or
cs
inc
inc
dec
ss
int3
fcmovnbe
mov
jnp
jb
push
into
add
xor
ret
bound
scas
loopne
pop
icebp
mov
mov
and
repnz
aad
push
cmpsl
push
xlat
imul
dec
ss
mov
mov
jmp
mov
mov
stc
je
mov
jns
rorl
xchg
jns
dec
in
sbb
pop
imul
mov
sbbl
icebp
hlt
inc
loope
sbb
out
mov
mov
lds
cmp
add
sti
fwait
jns
xchg
sbb
xchg
lea
test
cld
insl
mov
sbb
pop
jg
pop
jmp
test
and
loope
mov
cs
test
mov
cmpsl
add
stos
lods
fdiv
fstl
nop
push
or
fwait
push
jae
out
lea
push
pop
scas
cmp
pop
push
cmpsl
pushf
fldenv
or
mov
cwtl
xchg
jl
dec
mov
js
add
inc
mulb
inc
jge
rcl
outsb
leave
gs
imul
xor
push
sbb
fisubl
inc
loop
jmp
push
out
shlb
and
popf
cmpl
jl
lret
sbb
sbb
sarb
popa
or
mov
jge
or
inc
movsl
mov
aad
test
sub
push
push
push
in
inc
xchg
fnsave
lcall
in
pop
sub
stc
xor
mov
dec
or
pop
xor
mov
test
loope
fbstp
mov
and
fstpl
sub
or
into
mov
mov
jns
aaa
lcall
rolb
jb
mov
sti
jo
idivl
popf
push
sub
fs
cwtl
fdivl
data16
add
mov
or
adc
sub
hlt
fs
aad
aam
xor
movl
rcrl
add
xor
out
je
inc
bound
in
fwait
roll
mov
add
pop
pop
aam
jmp
cmp
popf
and
cs
pop
scas
xor
not
dec
movsl
push
jo
lret
mov
pusha
insl
clc
jle
mov
mov
jne
iret
jns
pushf
ret
popa
jmp
out
lods
push
movsb
or
iret
mov
fadds
xlat
push
push
or
adc
pop
mov
inc
inc
mov
add
shrl
movsb
aas
icebp
xchg
fdivs
aam
in
insl
mov
mov
nop
sbb
xchg
loop
sbb
orl
shl
dec
icebp
movsl
loope
shrl
loope
lret
jl
mov
add
xchg
xchg
push
shl
ffreep
push
int
jle
sub
popa
loope
out
jge
sbb
push
mov
imul
add
xchg
jmp
call
fistpl
test
add
in
sub
mov
xchg
int3
ret
sub
and
sbb
rolb
jecxz
mov
ss
adc
cmp
adc
mov
pop
ret
sub
adc
addr16
push
lock
mov
inc
data16
movsb
ret
subb
mov
adc
xchg
sbb
sub
rcll
adcb
push
mov
aas
into
gs
mov
ficoml
outsl
jmp
jo
mov
sbb
jne
fcomip
mov
or
mov
idivl
mov
inc
pop
and
and
mov
jns
inc
aad
push
nop
xor
jbe
mov
adc
enter
xchg
fs
sbb
mov
insl
pop
cmp
adc
jne
xchg
mov
cmp
lods
pop
mov
int
jne
mov
and
icebp
cmpsl
sub
aam
fiaddl
xor
mov
mov
cmpb
popf
pop
add
mov
pop
insl
fistpl
fistps
leave
addr16
push
outsl
daa
je
shrl
dec
ja
cmp
pop
mov
rorb
scas
cmp
jl
outsb
daa
pop
mov
js
in
sti
adc
in
add
inc
hlt
cwtl
stos
jl
fsubl
jg
xchg
pop
and
add
push
push
mov
sbb
insl
ret
popf
mov
arpl
bound
lcall
push
jge
cmp
pop
filds
adc
sbb
inc
push
in
je
lods
sub
in
sti
or
push
push
stos
rcr
aaa
dec
xor
jbe
mov
ss
ljmp
jno
loop
scas
dec
aam
or
jge
inc
push
pop
outsl
ja
pop
dec
inc
xor
and
aaa
push
clc
hlt
pop
inc
testl
and
incl
or
mov
push
inc
sahf
lcall
in
adcb
outsl
jge
test
pusha
mov
nop
jb
mov
push
inc
adc
int3
arpl
int
cmp
push
ljmp
sti
or
add
mov
int
pusha
imull
jno
fcomps
mov
xchg
xorb
ds
xchg
cmp
les
push
ljmp
jno
rcl
ret
push
outsl
test
lret
jg
or
lret
fsts
mov
rcrl
xchg
adc
lea
lcall
pop
insl
orb
enter
mov
aaa
jl
dec
scas
jo
mov
pusha
add
inc
mov
fisubrs
xchg
fxch
mov
jae
negb
dec
sarl
dec
xchg
jno
scas
mov
adc
adc
sub
sbb
mov
fistps
mov
aam
rcr
pop
cmp
add
push
add
xchg
pop
add
in
jns
push
movsl
or
sub
inc
pop
mov
rcrb
fstpt
pop
dec
mov
mov
outsb
mov
loope
mov
hlt
pop
mov
inc
fsubrs
push
aaa
pop
adc
mov
add
or
add
rol
push
push
mov
or
cltd
xchg
fisubrl
cmpl
mov
lret
xchg
sbb
lcall
push
repz
push
fwait
ret
mov
aas
ret
add
dec
insb
dec
cmp
rcrb
scas
or
fdivs
into
inc
mov
push
or
dec
jge
cld
mov
dec
gs
enter
mov
ficoml
lods
or
xchg
xor
bound
mov
js
jmp
dec
adc
clc
adc
pop
aam
jae
xrelease
sub
sub
je
aad
loopne
cmp
mov
jae
and
add
jg
enter
jg
xchg
dec
cmp
fdivr
sti
not
stc
ret
sub
rcll
dec
jmp
dec
mov
push
lods
fmull
push
rcrb
test
stos
out
daa
stos
jnp
in
je
sbb
mov
jae
sbb
sub
mov
test
mov
or
insl
jge,pn
push
into
jle
aas
clc
inc
mov
sub
push
inc
pop
push
in
mov
hlt
ja
out
pop
cwtl
jle
add
fcomip
aaa
xchg
ret
dec
pop
repz
mov
add
jbe
sub
push
or
add
repz
daa
xor
cmova
pop
gs
cmp
divl
push
lods
or
test
imul
imul
xchg
out
popf
test
push
call
add
hlt
pop
push
jge
inc
sbbb
dec
pushf
fimull
nop
xor
xchg
fs
scas
jg
dec
jecxz
nop
inc
in
in
out
rclb
jo
pop
xor
ret
jl
xor
outsb
mov
rcrl
xchg
jp
daa
lods
xor
push
xchg
sbb
mov
xor
out
adc
pop
movl
mov
and
push
cld
lods
mov
xchg
mov
sub
mov
out
aas
xlat
fidivrl
mov
fsubl
or
cmc
fld
cmp
mov
xor
sub
insb
push
andb
lea
mov
lds
pushf
cmp
push
repz
pop
jl
inc
cmp
add
lret
mov
pop
enter
aaa
inc
js
add
repnz
test
inc
push
xor
mov
inc
push
in
jae
xchg
xchg
cs
or
xorw
mov
push
pop
and
es
fnstsw
mov
mov
sbb
fs
loopne
cmp
shr
sbb
insb
pop
std
xchg
or
cltd
sbb
pop
sbb
cli
add
addr16
cltd
xor
int
jg
lret
cmpsb
lcall
ret
xorb
add
and
inc
test
scas
push
and
out
add
mov
movsb
les
jno
jg
mov
rcrl
dec
loope
push
cmpsb
push
rclb
sub
or
sub
add
fsubr
pushf
enter
or
dec
xor
jnp
aad
sub
and
cwtl
test
inc
xchg
xchg
cmp
out
test
sbb
jo
shrl
xchg
adc
out
sub
sbb
push
jmp
jp
cmpsb
adc
or
xchg
jle
and
mov
in
pop
xor
inc
mov
loope
movsb
lret
add
sub
jge
dec
jp
inc
sub
pop
jecxz,pt
das
adc
addr16
mov
dec
push
movsb
jmp
xchg
sbb
add
mov
pop
out
pop
and
xor
cmc
sbb
xor
notl
aam
dec
sbb
pop
inc
fcoml
stc
push
enter
dec
pop
fmuls
mov
ljmp
add
jp
loope
jo
xchg
or
push
out
inc
jb
sub
enter
add
push
and
pusha
or
cltd
gs
andl
pop
aaa
mov
xchg
mov
dec
or
decl
out
mov
lods
sub
mov
fcom
lds
mov
pop
add
inc
xor
jb
mov
aad
mov
push
ljmp
jmp
jnp
sub
mov
pop
and
adc
repz
adc
xchg
ret
bnd
cmc
aam
iret
push
xchg
add
mov
and
push
push
loope
xor
gs
xor
add
push
adc
stos
inc
movsl
insl
and
int3
xchg
jo
cmp
push
cmpsb
jl
mov
lcall
xorl
mov
and
jg
cld
lahf
outsl
add
stc
jmp
daa
shl
sti
and
repz
mov
or
sub
push
push
add
xor
nop
out
push
stc
lret
jmp
sbb
push
or
xor
mov
cmp
fdivl
arpl
xchg
je
jg
clc
inc
lds
or
int
mov
sti
push
jecxz
push
shr
ss
xor
test
nop
outsb
in
ret
mov
pop
pminub
movups
jns
and
mov
dec
andl
xchg
int
loopne
lea
fcoml
jno
incb
mov
or
and
clc
pop
icebp
sti
xchg
and
jmp
shrb
pop
popf
popf
fiadds
xchg
loope
sarb
add
aam
push
lods
jp
push
mov
test
les
pop
cmc
add
mov
adc
mov
fwait
mov
dec
inc
inc
mov
adc
push
pop
stos
inc
xor
jle
and
dec
pop
fucomi
lds
xor
repnz
dec
cmpsb
sbb
fcmovne
push
mov
push
icebp
popa
testl
outsb
int3
pop
push
inc
out
lock
lret
or
aad
xchg
gs
ficompl
mov
cmp
notb
adc
fwait
insb
cmpsl
mov
lods
mov
pop
sbb
jge
enter
fs
iret
call
jae
aas
mov
xchg
test
bound
icebp
mov
push
or
adc
pop
lods
or
inc
imul
mov
mov
dec
movsl
mov
add
repz
ror
ljmp
loope
lret
xlat
aam
sub
adc
lods
sub
or
dec
andl
xchg
insl
cmp
add
ret
jbe
ret
jle
and
xchg
imul
popa
cmp
inc
inc
rcll
ret
shll
or
repz
iret
cmpsb
xchg
xor
movsl
movsb
pop
sub
pop
cmpl
test
imul
jno
push
nop
dec
xchg
aam
inc
push
ret
xlat
cwtl
mov
mov
jg
and
loop
xchg
aaa
fsubr
bound
inc
iret
aad
push
loopne
xchg
cmp
testb
pushf
inc
xchg
fimull
das
lock
in
sub
aad
or
out
pusha
and
cltd
std
imul
lcall
or
js
fldcw
ret
jp
faddl
xchg
ret
sbb
xchg
sarl
test
mov
xchg
daa
rcll
inc
fsubs
pop
pop
xor
adc
in
xor
jp
lahf
jbe
scas
xchg
fmull
and
and
test
xchg
clc
xchg
mov
inc
bound
popa
js
leave
lahf
cmp
inc
imul
rolb
cwtl
aas
popl
jbe
lret
dec
aaa
add
push
push
iret
or
jno
fsqrt
ret
clc
mov
lret
pop
push
cltd
scas
lea
aam
or
add
test
outsl
fbld
outsl
jecxz
mov
and
fimuls
sbb
jnp
pop
outsl
xchg
pushf
mov
jmp
xor
and
out
call
inc
and
add
jge
dec
inc
popa
xchg
jae
sub
rorl
xor
push
add
push
xor
xlat
loop
pop
insb
js
jle
hlt
push
mov
int3
enter
add
mov
or
andb
scas
push
jge
jns
aas
repnz
push
insb
leave
inc
nop
jg
xor
add
push
fnstenv
push
fiaddl
shlb
xor
jecxz
cmp
pop
push
es
ljmp
mov
or
out
fcoms
xchg
scas
xchg
and
dec
mov
das
ja
fsubrl
pop
pop
jns
xchg
roll
loop
loop
inc
shr
pop
je
in
mov
mov
cmpl
mov
pop
loopne
rcll
mov
push
cmp
dec
shr
je
inc
fisubrl
lods
mov
ljmp
jg
ljmp
movsl
or
rolb
mov
push
incl
xor
inc
mov
mov
rorb
scas
adc
mov
icebp
pop
cwtl
adc
negl
call
cld
pushf
das
out
add
imul
out
aas
inc
mov
lahf
cmpsl
in
xchg
adc
outsb
add
xor
pushf
lods
sti
mov
push
andb
add
xor
and
mov
aas
in
add
pop
and
pushf
xchg
rcr
cmp
sbb
push
insl
add
int3
adc
xchg
push
andb
cli
mov
out
lock
push
jmp
xchg
pop
pop
push
cmpsb
test
loop
mov
push
fiaddl
andl
ljmp
jmp
add
fdivs
jbe
mov
and
sub
push
fadds
lods
mov
or
sub
fadd
popf
sti
rcrl
or
jo
faddl
xlat
xchg
sub
in
adc
addl
inc
push
movsb
dec
subb
insb
sub
popf
push
leave
sbb
in
arpl
xor
push
pop
cld
out
pushf
or
int
stos
jae
mov
ficompl
sbb
call
test
dec
stos
mov
les
xchg
adc
or
cs
aam
and
dec
mov
stc
xor
jp
loopne
xor
adcl
sahf
mov
dec
and
insb
push
call
inc
dec
xlat
xchg
mov
add
into
jne
inc
lret
hlt
and
xor
sub
mov
push
mov
in
push
insl
push
cmp
pop
outsb
aaa
xchg
imul
repnz
cltd
xor
or
mov
mov
out
dec
dec
and
aas
or
mov
lcall
dec
pop
addl
adc
inc
arpl
xor
das
sbb
out
push
xor
pusha
subb
aad
xchg
call
imul
test
cmp
stos
fdivs
pop
xor
fisubl
iret
sub
insl
and
mov
and
push
mov
je
mov
sti
adc
out
arpl
in
mov
daa
orb
loope
cmp
daa
cmp
fstpl
add
lea
xchg
shll
fistl
popa
dec
adc
fcmove
pop
lods
inc
insb
fidivrs
outsb
mov
fcomip
imul
aad
adc
cmp
cltd
addb
popf
pop
lcall
mov
inc
notl
ja
jns
xlat
and
add
jo
mov
aam
ret
in
fisttps
inc
mov
sbb
xchg
call
aam
sub
mul
rorl
lods
jns
imul
mov
shlb
jo
jb
push
mov
movsl
cmp
popa
and
in
lcall
pop
adc
movsb
cmpsl
push
fisubrl
adc
cld
shll
mov
mov
fs
mov
pop
arpl
push
pushf
test
ljmp
das
cmp
int
sub
dec
pusha
mov
push
data16
std
fcomip
or
roll
sub
mov
fiaddl
and
test
scas
pushf
and
sti
iret
mov
sbb
mov
dec
adc
sub
stos
aad
loop
into
push
or
js
sub
xchg
es
mov
sbb
inc
fwait
test
fadd
dec
aaa
add
or
nop
jnp
mov
mov
dec
aad
jle
jle
add
adc
stos
adc
sub
aad
shr
sub
and
inc
mov
rorl
push
lods
mov
arpl
inc
cmp
push
fnsave
or
or
mov
loop
sub
mov
sahf
jnp
lods
mov
xor
fstps
stc
jp
dec
adc
jmp
cs
push
sub
iret
rcrl
ss
inc
shrb
insl
mov
xor
cltd
fldl
stc
dec
cli
cmp
pop
addr16
ds
push
fs
xor
mov
movsb
jl
and
sub
sahf
outsl
pusha
push
mov
mov
cmpsl
ret
les
mov
push
iret
jnp
imul
mov
cmp
rcrl
mov
push
jo
adc
les
pop
imul
daa
bound
bound
push
je
addl
int
mov
sbb
arpl
mov
push
je
xchg
lds
mov
cmpsl
jecxz
xchg
inc
mov
add
jne
cld
xchg
sub
sbb
add
rcrb
out
inc
lret
in
test
xchg
mov
lods
inc
jnp
fldcw
popf
int3
ficoms
fdivrs
mov
cld
mov
sub
mov
or
nop
addr16
sub
or
mov
sub
fcoms
mov
lcall
scas
inc
sub
in
fldenv
mov
jmp
notl
mov
leave
popf
subb
mov
jae
mov
mov
mov
int
fucomp
std
or
mov
adc
mov
out
xchg
dec
fdivl
data16
in
adc
insb
add
mov
jns
scas
jge
cs
test
dec
stc
cmp
push
or
add
lahf
mov
cltd
clc
or
jl
hlt
inc
add
pop
mov
xchg
cs
aam
mov
jl
add
in
xchg
fidivs
fcmove
icebp
insb
les
dec
push
icebp
ret
xor
in
dec
bnd
add
push
push
test
lret
or
dec
mov
pop
fidivrl
ja
stos
pop
mov
dec
aaa
sub
xchg
dec
lret
xor
andl
jae
fdivrl
loop
or
inc
sbbb
adcl
shll
sbb
push
sub
int
mov
fidivs
jge
loop
pushf
fisttps
sub
pop
mov
stc
sub
inc
jne
cwtl
shrb
jo
cli
push
add
in
inc
and
push
dec
in
sbb
outsb
sub
xlat
cmp
or
loopne
in
mov
push
cmpsb
ret
imul
add
mov
cli
rcrl
lret
push
out
out
xor
fcomi
mov
dec
adc
lods
inc
mov
xchg
cmp
and
fnstsw
cwtl
inc
push
pop
mov
jg
add
cs
insl
xlat
pop
push
scas
inc
les
ss
test
fisubs
mov
dec
outsb
loope
xchg
pop
push
leave
fldl
jbe
shll
call
movsb
loopne
fcmovu
push
push
mov
jecxz
sbb
xchg
push
cmp
cmp
sahf
xor
in
cmp
push
pop
fistl
sub
and
repnz
scas
sbb
jo
pop
addr16
add
sarl
imul
mov
inc
ss
mov
xchg
ljmp
add
sti
fwait
add
adc
adc
call
fldcw
mov
je
jno
je
call
jns
mov
adc
insl
xor
inc
shrb
hlt
adc
xchg
xor
dec
mov
mov
call
loope
aam
xchg
or
jecxz
fs
add
aas
or
push
mov
js
sub
out
mov
push
sub
jns
cmp
cli
cmp
mov
push
mov
jle
and
and
int
sbb
mov
in
push
add
outsl
mov
ret
inc
adc
sahf
clc
es
cmp
jp
mov
lods
out
pop
js
out
jb
push
pop
frstor
pop
fadds
scas
or
in
xlat
push
shlb
add
loop
mov
frndint
push
or
cli
cmp
sbb
xor
or
scas
mov
mov
loop
and
lock
ret
ja
xchg
mov
cwtl
push
push
mov
jg
or
jnp
imul
ss
pop
shll
fwait
shl
sarb
inc
lods
jo
lods
xor
push
sbbb
inc
inc
xor
push
xor
fists
test
js
in
push
and
data16
or
xchg
arpl
pop
push
and
lahf
div
xchg
mov
cmc
imul
lock
decb
adc
cmp
and
ljmp
push
into
or
push
cld
pop
je
ret
outsl
cld
pusha
aad
push
popa
ds
cmpsb
rcrl
sbb
or
sub
lea
leave
imul
fwait
mov
int
sub
xchg
repz
das
hlt
aam
or
sbb
jo
lret
popf
xchg
insb
lock
push
fldln2
iret
push
add
inc
xlat
cli
dec
int
int3
loop
xchg
push
pop
adc
jbe
dec
ljmp
jno
dec
mov
popl
mov
jno
add
shll
jno
int3
stos
mov
mov
call
aad
dec
pop
inc
and
mov
push
imul
subb
mov
call
pushf
dec
daa
icebp
jle
fmulp
xchg
jns
jl
lret
enter
aad
inc
shl
mov
push
int3
pop
adc
ret
jns
push
ret
addr16
xchg
dec
psubw
gs
xchg
fmulp
mov
fsubs
ficoml
loopne
bndldx
sbb
loope
xor
mov
xchg
add
jae
movsl
jp
jo
imul
sbb
sbb
cmp
out
xchg
jmp
push
xchg
or
aad
or
mov
es
imul
insb
shrl
mov
cmp
lds
mov
lds
mov
roll
shrl
xchg
add
cmp
xor
xchg
lods
add
fwait
les
mov
add
outsb
popa
fcompl
iret
pop
loope
and
adc
mov
xchg
faddp
xor
sbb
jmp
loopne
stos
int3
mov
xor
or
ljmp
mov
cmp
scas
test
cs
or
mov
inc
or
mov
pop
in
scas
popa
pusha
pop
jmp
iret
jno
jl
add
pop
mov
jge
add
iret
cmovle
daa
mov
insb
popf
jb
sbbb
loop,pt
push
push
mov
pop
movsb
cmp
sbb
lret
cmpsl
jecxz
push
sbb
out
in
inc
arpl
xchg
adc
test
mov
sub
inc
rorb
mov
or
xchg
iret
sub
mov
pop
adc
xchg
test
mov
push
aaa
sahf
scas
loop
xorl
aaa
sub
adc
rcr
jo
insl
scas
lcall
jmp
sbb
loop
jle
out
add
and
das
outsb
mov
enter
imul
dec
cmp
stc
xor
int3
cs
mov
fists
add
lock
xchg
xor
jecxz
lahf
sub
mov
roll
xlat
divl
mov
loope
inc
arpl
lcall
cli
mov
fildl
pop
dec
xor
dec
jb
mov
fmuls
pop
ljmp
push
or
mulb
inc
fxch
iret
lret
adc
or
mov
les
inc
aas
push
jo
cmpsb
mov
ret
movsl
jge
lods
out
push
cs
inc
fldt
mov
dec
pop
push
insl
cmpsb
cmp
add
cmp
mov
xchg
insl
xor
mov
adc
add
pop
adc
jno
mov
in
clc
insb
ror
jo
pop
mov
jl
std
stos
ss
cli
leave
add
sbb
outsl
and
in
test
frstor
cmp
add
sub
xchg
xchg
mov
pushf
and
mov
add
rcrl
test
jnp
aad
mov
out
jg
cmp
mov
fadds
mov
inc
nop
dec
ss
jge
push
fucomip
ret
arpl
push
and
jge
ljmp
lods
xor
cmp
mov
popf
test
dec
add
adc
push
hlt
imul
loopne
pushf
pushf
lds
jmp
adc
dec
or
add
into
mov
psubusb
in
inc
lds
enter
addr16
pusha
or
jmp
inc
mov
push
fsubs
cmp
mov
sbb
sbb
pop
dec
dec
mov
jge
mov
jge
add
arpl
js
xor
lcall
xor
test
xorb
or
mov
mov
nop
jg
xchg
sub
ret
inc
mov
jne
movsl
ret
popf
inc
shlb
data16
add
out
pop
hlt
sti
add
adc
pop
les
outsl
adc
shrl
movsl
cmp
ret
sub
xchg
xchg
push
jns
xchg
mov
movsl
mov
inc
test
es
dec
movsl
inc
cs
daa
inc
lret
fldl
dec
mov
sbbb
enter
or
int3
gs
add
in
test
ret
jmp
fiaddl
or
bound
pop
hlt
out
add
shrl
movsl
push
hlt
jns
icebp
mov
paddb
in
cmc
push
push
pop
mov
stos
sub
lret
and
pop
mov
mov
mov
fcoms
out
mov
mov
pop
lods
ret
daa
and
or
aad
sbb
rorb
dec
mov
arpl
insb
cmp
xor
xchg
lock
outsl
adcb
or
and
xchg
je
xchg
sub
scas
sbb
hlt
dec
shlb
push
push
mov
fldcw
push
push
aas
movl
sbb
inc
stos
mov
lret
dec
aaa
rcr
ss
cmp
lea
iret
popw
xchg
nop
aam
jb
jns
movsb
cmp
out
ds
mov
pop
mov
mov
dec
popa
shll
add
daa
xchg
push
and
rorl
cmp
xchg
sub
lret
insl
dec
pop
jnp
sub
cmp
jo
lcall
imul
insl
pusha
xchg
mov
dec
orl
cmc
loop
int3
negl
push
bound
cmpsb
ljmp
jae
pop
gs
pop
out
jg
lcall
pusha
mov
xor
pop
mov
scas
loopne
mov
add
cmp
dec
mov
lea
mov
xor
cli
inc
cmp
push
push
add
dec
adc
or
pushf
repz
into
adc
imul
repnz
inc
insl
loopne
xchg
imul
and
fs
ljmp
sbb
or
cmc
mov
icebp
test
cmpsl
mov
iret
aad
cmp
fdivrl
dec
test
dec
icebp
and
pop
mov
dec
inc
inc
popa
jne
push
fnstsw
pop
mov
mov
jge
roll
sti
mov
in
inc
rcrl
jmp
push
inc
push
push
xchg
xchg
leave
int
mov
jne
or
or
js
pop
mov
stos
ret
repz
cmp
insl
sbb
and
je
fistpll
loop
mov
xchg
adc
call
cmc
adc
mov
lret
scas
dec
data16
xchg
mov
adc
sbb
xor
xor
xchg
gs
movsl
push
loopne
std
es
jp
add
lods
dec
icebp
notb
dec
jns
lock
add
fisttpll
push
xor
xchg
aaa
xchg
jmp
pop
leave
std
in
xor
xchg
sub
in
ss
pop
mov
test
or
inc
mov
lds
adc
js
xchg
imul
dec
lcall
std
lods
cmp
rol
pop
add
inc
testl
addr16
iret
call
cmpsl
scas
jno
and
add
es
movsl
ljmp
insb
mov
outsl
dec
and
sahf
dec
jg
jp
enter
repz
out
daa
sbb
xor
mov
pop
jo
cmp
inc
mov
fisubs
push
xchg
in
jnp
test
mov
lcall
jp
inc
mov
cmc
cmp
pop
lock
and
dec
nop
inc
repz
pop
push
jp
adc
scas
dec
out
aaa
and
sub
insl
lock
sub
sbb
sbb
or
out
lods
cmp
adcb
enter
add
adc
pop
nop
sub
ljmp
out
mov
or
xorl
mov
lcall
push
scas
ss
pop
lods
lock
sbb
xchg
xchg
adc
orl
movsb
ret
fwait
cmp
int3
mov
inc
and
or
xor
test
mov
sar
jge
sbb
inc
mov
or
and
loopne
ud1
add
js
cmp
fdivrp
jbe
pushl
fadds
adc
icebp
stc
aas
dec
sub
mov
out
cmp
in
movsb
mov
daa
cltd
jbe
stc
subb
lods
pop
pop
or
mov
pop
lcall
mov
jb
or
ficoms
in
int3
dec
push
inc
push
sbb
inc
jmp
mov
into
adc
adc
inc
bswap
mov
ret
xchg
gs
and
sbb
fdivrs
out
and
adc
aas
xchg
aaa
je
pop
cmc
cmp
mov
sub
xchg
push
insb
fpatan
lods
sub
jno
imul
aad
jl
shrb
movsw
cld
adc
dec
mov
cmpl
xorl
lret
test
into
popa
stc
and
call
push
shlb
xchg
mov
enter
mov
or
sbbl
ja
jns
loop
ds
lret
mov
bound
gs
ret
insl
or
insb
inc
das
ret
popf
sbb
loop
mov
lods
dec
pop
mov
jnp
and
and
sbb
test
ss
das
sub
xor
cmp
cmp
in
or
rolb
addr16
pop
test
xchg
sbb
push
ljmp
insl
jnp
or
adc
sub
add
pop
gs
mov
jae
jo
addl
pop
or
scas
outsb
inc
pop
adc
mov
ss
inc
mov
lret
sub
mov
shll
add
jecxz
mov
cmp
mov
rol
setbe
shrl
lcall
push
test
fidivrs
shll
mov
and
push
iret
sbb
test
les
paddsb
je
jg
pushf
mov
and
push
fsubrp
xchg
mov
pop
xlat
mov
inc
inc
dec
xor
jmp
lret
push
sbb
in
lret
cwtl
popa
xor
hlt
test
dec
push
jno
xchg
les
fidivrs
out
jb
sbb
sahf
pusha
jle
mov
addr16
cmp
push
scas
outsb
pop
out
xor
lea
cli
jle
je
cmp
sub
into
sub
jge
das
pop
enter
data16
mov
in
dec
adc
and
xchg
shl
pop
fldcw
pop
push
aaa
movb
stos
flds
or
ret
sub
bound
jno
mov
push
push
inc
mov
adc
push
sub
out
mov
push
out
cli
xor
add
in
in
adc
lods
add
mov
loopne
in
or
jae
mov
lahf
xlat
push
aad
jne
js
lret
and
xchg
jge
ret
mov
fidivl
lret
cmp
cwtl
lret
inc
movsb
test
movsb
push
jno
mov
fcmove
or
jo
xchg
mov
mov
test
push
dec
cli
pusha
mov
inc
daa
lcall
cmpsb
imul
fdivp
int3
iret
and
outsl
xlat
aam
or
iret
ds
ljmp
or
test
jl
pop
int3
xor
cmpsb
dec
mov
adc
pop
bound
std
push
cmpsl
lea
dec
sbb
or
jns
mov
inc
inc
aad
jo
add
cld
mov
out
add
sbb
stc
fimull
inc
mov
negb
fildll
cmp
jne
pop
out
cmpsl
pop
fidivs
mov
mov
movb
je
movsb
add
pusha
int
out
mov
push
jne
lcall
push
adc
sub
pop
repnz
cli
lret
fbld
inc
dec
fwait
dec
xlat
xor
bound
add
xchg
lahf
jb
mov
insl
test
jmp
sbbl
int
dec
sti
xchg
mov
fstpl
xchg
sub
pop
inc
add
jle
es
xchg
in
jl
xor
inc
sub
repnz
addb
mov
lds
jns
stos
aas
inc
fwait
dec
rol
lahf
mov
sti
cltd
int
mov
outsl
mov
xor
daa
adc
inc
adc
clc
cmp
fcoms
fwait
cmpsl
inc
std
lds
es
dec
mov
cwtl
or
xchg
insl
cmp
loop
ss
repz
cmp
add
fmull
fwait
test
xchg
mov
imull
mov
push
dec
cmc
cmp
insl
pop
rcr
mov
push
ja
negb
arpl
and
sbb
movsl
add
mov
icebp
pop
movsb
loope
clc
jg
and
mov
or
lods
xorb
or
mov
data16
int3
pop
lds
xchg
outsb
pop
push
xor
sbb
adc
mov
mov
es
loop
jae
pop
je
dec
sub
inc
mov
jae
stos
fstps
clc
jmp
or
inc
mov
mov
mov
sti
pop
or
push
xor
cld
inc
adc
cmpb
das
jecxz
outsb
add
iret
push
cltd
leave
sub
push
push
dec
sbb
jnp
xor
sbb
cmp
and
daa
movsb
aaa
fwait
lahf
scas
inc
mov
mov
pop
or
adc
insb
arpl
mov
fdivrs
je
inc
push
mov
push
fs
ja
xchg
test
dec
or
mov
movsl
cld
jbe
xor
lea
dec
mov
out
sub
stos
jmp
subb
jle
push
ficompl
in
arpl
mov
sub
cmp
inc
fdivl
fldl
ret
inc
sarl
into
jne
pop
loope
push
ret
hlt
pushf
or
sbb
push
dec
aad
cmpsl
pushf
mov
adc
std
fs
ja
xor
add
stc
inc
push
sbb
push
cmp
sti
pop
aaa
cmc
stc
adc
xor
pop
outsl
in
clc
or
orl
pop
inc
ficompl
xchg
mov
je
ret
rolb
enter
js
mov
mov
dec
mov
inc
movsl
rcrb
mov
cmp
mov
mov
adc
xor
sti
pop
shlb
jl
arpl
dec
sub
cmp
add
cli
sub
sbb
nop
sbb
lret
xor
add
pop
mov
movsl
pusha
cmp
ljmp
inc
int
ss
dec
sahf
xchg
sub
pop
repz
insl
aad
xor
mov
mov
adc
mov
cmpsb
sbb
push
pusha
push
mov
push
xchg
adc
sub
mov
aas
sbb
or
sub
sbb
add
jge
cmpsb
shll
ds
jecxz
dec
in
pop
dec
mov
nop
daa
insl
xchg
jp
lret
cld
out
aas
dec
out
std
pop
mov
fistl
mov
and
ds
rcll
adc
mov
in
outsl
add
jp
mov
and
sub
loope
lret
adc
fsubrs
dec
ficompl
outsb
insl
mov
cmp
and
aad
repz
sbb
dec
and
enter
pop
sahf
dec
js
jb
pop
inc
enter
mov
and
mov
movsb
push
mov
ret
push
xchg
fisttpl
sbb
lock
or
mov
cmpsl
cmc
test
add
mov
cmp
mov
fstpl
lds
push
inc
push
adc
pop
and
imul
mov
mov
jecxz
jmp
sbb
push
and
outsl
push
shrb
jnp
sti
ret
mov
jle
data16
movsb
inc
adc
jae
imull
xchg
lods
dec
xchg
shl
pop
repz
adc
int
outsb
stc
lahf
or
add
fcmovu
stos
mov
lock
push
and
mov
addr16
test
add
fstpl
leave
and
cli
test
fcoml
mov
arpl
jns
int3
lahf
in
aad
xchg
mov
mov
mull
outsl
pop
cmp
test
sbb
sub
mov
jg
test
popf
ss
xchg
mov
xlat
push
cmp
push
loop
cmpsb
pop
pop
pop
lods
fistpl
or
push
call
dec
arpl
sbb
inc
cld
in
jb
sub
dec
add
push
xchg
divl
mov
icebp
xchg
jle
scas
divb
add
nop
test
inc
mov
stos
nop
pop
jnp
push
mov
jno
lods
outsl
add
xchg
lods
sub
mov
xor
enter
adc
mov
pop
mov
or
mov
mov
inc
mov
clc
les
mov
mov
dec
je
cmp
pushf
jle
into
push
mov
push
add
je
add
push
add
scas
shlb
jo
mov
add
test
mov
or
xor
add
icebp
sarb
sub
jmp
cmp
mov
or
stos
in
insb
lret
addr16
and
das
adc
stos
imul
add
or
movsb
inc
es
push
or
je
insb
addb
hlt
push
fcomip
std
or
mov
adc
pusha
dec
sub
in
xor
lods
inc
adc
inc
cmpsb
loop
and
mov
jne
test
and
cld
scas
pop
jno
out
ds
jnp
mov
sbb
call
push
call
mov
movsb
fs
jno
xchg
fildll
adc
and
mov
xchg
push
xor
sbb
or
fsubl
xchg
jp
pop
cmpsb
jmp
push
das
dec
adc
mov
fdivp
sub
push
xor
and
push
jae
sub
aaa
mov
cmc
pop
add
mov
je
std
and
pop
pop
xchg
sub
pop
xchg
add
dec
movsl
pop
mov
add
cmpsl
mov
sbb
push
and
mov
cmpsb
lods
dec
arpl
sbb
jecxz
adc
pushw
sbb
insb
cmpsl
xchg
mov
mov
daa
bound
mov
jnp
scas
xchg
lcall
insl
je
pop
adc
push
cmc
sbb
push
es
mov
std
lret
and
dec
adc
jne
outsl
loop
and
bound
clc
lock
dec
push
xor
insb
lea
stos
adcb
xor
or
nop
adc
add
sbbl
ret
jo
pop
shl
stc
or
leave
xchg
sub
add
cmp
aaa
dec
xchg
pop
loope
stos
mov
mov
adc
movsl
pop
fwait
cmpsl
mov
jbe
and
mov
add
xor
xor
sbbl
or
test
popa
jl
pop
mov
fwait
push
mov
push
leave
leave
push
mov
push
in
mov
sub
scas
dec
test
sub
jb
jg
adc
les
ds
add
adc
mov
xor
stc
rcl
sbb
les
fsts
add
ret
fidivrl
fiadds
sbbl
push
lahf
mov
push
mov
jae
lods
fcoms
mull
inc
jbe
jns
push
jae
imul
hlt
fisubrl
lcall
mov
jg
xlat
pop
mov
inc
mov
adc
sbb
sub
das
pop
fcoms
das
loopne
mov
jle
test
lret
jb
adc
inc
xorl
popa
rcrb
imul
pop
icebp
in
add
gs
xchg
rcll
mov
mov
jge
sahf
shlb
fdivr
push
movsb
cli
sbb
mov
pop
jp
aad
jo
hlt
fisubrl
lods
sbb
mov
orl
push
mov
mov
aas
or
js
es
out
or
push
jle
cmp
dec
adc
inc
dec
mov
fmulp
inc
sub
dec
mov
pop
sub
and
jb
jge
add
clc
vptestnmq
xor
popa
jns
sbb
cwtl
jl
in
test
mov
sbb
jg
cmp
xchg
mov
les
addr16
mov
aam
aad
xor
mov
orl
sbb
test
jae,pn
sbb
push
popf
mov
push
nop
push
push
ret
pop
mov
mov
cmc
cmp
pop
mov
test
lret
cld
int3
adc
pop
cmp
cmp
mov
jo
cmp
add
scas
add
xor
xor
mov
lret
popa
mov
cwtl
addl
push
jmp
jle
fimuls
lahf
decl
or
jne
inc
inc
push
dec
test
mov
cmpsl
and
data16
rdmsr
lea
popf
fs
dec
fdivrp
mov
jle
loop
and
mov
pop
andb
pushf
je
sahf
mov
ljmp
jae
clc
cmpsl
lds
fwait
sti
pop
pusha
push
mov
jl
je
dec
ret
mov
loopne
rcrl
push
xchg
jbe
enter
dec
fcoml
daa
in
jo
mov
add
mov
xchg
int
outsl
mov
cmp
testb
or
fbld
int3
push
ljmp
jno
lret
cmp
repz
test
sub
mov
loopne
pop
addr16
repz
cmp
jnp
std
loopne
dec
push
into
and
mov
pushf
mov
push
rol
push
push
pop
int3
push
cmc
cmpsb
fisubl
pusha
xchg
dec
push
push
push
adcb
jb
int3
bound
aaa
xchg
out
inc
inc
xor
add
cmp
das
mov
push
cmc
push
aad
xor
push
jmp
inc
out
in
cmp
dec
out
je
push
cmp
pop
add
adc
push
pop
popa
push
out
xchg
jg
mov
cld
rorb
jne
insb
jno
popf
cmp
pop
pop
lock
mov
sub
data16
int3
push
popf
mov
outsb
popf
lods
ja
pop
pushf
xor
mov
push
mov
out
sbb
scas
loopne
mov
sub
cmpsl
sub
in
xchg
jb
and
cli
mov
pop
in
push
int
jbe
nop
pop
push
xchg
sbb
sub
test
push
out
fmul
cmpsl
dec
lret
out
cwtl
out
pushf
in
xchg
add
mov
stc
mov
subb
inc
add
lods
push
xchg
sub
jp
orl
in
lods
ret
int
mov
xor
inc
fincstp
aas
push
cmc
jl
jecxz
loop
add
adc
pop
and
xor
mov
sub
push
push
mov
stos
xor
setb
lods
insb
mov
js
pop
stos
xchg
fwait
cmp
and
in
mov
xor
sub
imul
push
and
jp
lods
lea
jne
mov
inc
mov
enter
in
in
fldl
push
mov
xchg
adc
icebp
adc
mov
fimuls
loop
pop
xchg
lret
mov
sub
stos
inc
aad
cmc
lcall
cmpsb
repnz
pop
or
cmp
pop
and
add
ds
xor
pop
lods
aas
imul
cwtl
test
cmp
or
dec
jle
pop
in
pop
mov
in
xchg
andnps
cmp
sub
mov
rcrb
mov
cmpsl
inc
lret
scas
or
dec
rcrl
inc
mov
mov
fbld
sahf
int3
cmp
fdiv
mov
arpl
mov
inc
stos
test
fstp
xorb
jo
rcll
mov
ficoms
jno
lds
cmpsb
test
add
sbb
push
adc
out
add
inc
lods
aas
data16
push
push
repnz
fbld
cmpsb
xchg
ja
stos
mov
mov
push
adc
test
cmp
lret
into
dec
js
jl
push
jmp
outsb
mov
add
adc
cmp
xchg
jp
push
mov
or
mov
lahf
imull
leave
test
nop
dec
stos
pop
xor
mov
pop
cmp
popf
pop
int3
jg
xor
loop
scas
push
pavgw
jae
pop
std
inc
gs
inc
add
lret
ror
pop
push
push
jecxz
mov
cmp
repnz
outsb
outsb
add
out
out
mov
mov
mov
fxch
movsb
fldl2t
ret
adc
mov
loopnew
cltd
shr
stos
pop
cmp
lock
out
out
stos
pop
jge
mov
lods
jmp
ljmp
lcall
pop
fisubs
pushf
xor
hlt
ds
dec
push
inc
mov
jo
push
sub
outsl
add
aam
dec
pop
mov
ret
rcrl
outsb
xlat
test
push
shrl
sub
jnp
dec
imul
fstpl
push
popf
loope
add
xchg
aas
push
push
fisubs
das
adc
loope
jbe
add
jbe
mov
and
mov
aam
lods
add
inc
mov
and
js
pop
out
xchg
das
xchg
pop
add
insb
js
mull
inc
mov
jmp
mov
push
test
sub
inc
in
sub
cmp
pop
and
dec
sbb
out
mov
out
in
inc
pop
cmpsl
in
in
cli
adc
lds
xchg
push
sub
gs
enter
push
inc
mov
inc
mov
push
stc
inc
inc
insb
incb
or
jecxz
cmpsb
lock
inc
pop
out
jns
xchg
icebp
push
mov
loop
int3
out
adc
lahf
jle
adc
jns
push
inc
stc
dec
jae
dec
sbb
xor
imul
das
cmp
stos
and
fstpt
cmpsl
sbbb
rol
add
sub
mov
push
mov
data16
rcl
imul
cmp
loop
mov
jge
jecxz
and
dec
call
pop
jo
repnz
les
mov
arpl
les
or
repz
jae
js
cmpl
mov
xchg
jmp
push
pop
outsb
cmp
jp
pop
sub
jecxz
nop
jle
shrd
out
push
mov
data16
adc
sub
fcomi
mov
decb
popf
sub
sub
mov
out
aaa
pop
dec
ror
lret
gs
fisttpl
fnstsw
ljmp
sbb
cmpb
add
andl
dec
ljmp
aad
cmpsb
pop
cmp
iret
jnp
pop
std
xor
pop
pop
stos
push
mov
or
sub
mov
xor
cmp
jecxz
orl
sbb
jns
lahf
mov
repz
pop
pushf
mov
mov
jne
xchg
jmp
fstpl
sub
pusha
jp
sbb
mov
testb
test
sahf
xlat
scas
fucomp
dec
popf
xchg
mov
jge
lcall
sub
dec
jnp
ror
movsb
mov
jp
into
cmp
fdivrs
sbb
cld
sub
icebp
pusha
mov
dec
dec
fwait
and
lret
mov
sahf
push
mov
sbb
es
stos
outsb
shll
and
lds
dec
sbb
xchg
scas
inc
ret
cwtl
jnp
leave
push
inc
fiadds
fcompl
cwtl
adc
jmp
pop
sti
insl
inc
stos
jge
fldenv
mov
jnp
fdivp
mov
in
sbb
outsb
ret
pcmpeqb
inc
cwtl
mov
xchg
jg
xor
push
pusha
cli
pushf
mov
imul
imul
in
jns
sbb
add
adc
loop
cmp
nop
and
outsb
arpl
lods
aam
shlb
and
jmp
je
in
jge
xchg
lods
push
mov
fmuls
lods
je,pn
cld
mov
add
repnz
cli
pop
jb
jmp
movsl
imul
js
imul
fsubrs
loopne
ja
aam
mov
fwait
inc
aas
sbb
jnp
shlb
sbb
rorb
or
cmpsb
pop
outsl
lods
sub
pop
sbb
push
call
outsl
test
notl
xchg
sub
cmp
shlb
push
add
ja
and
push
fdiv
and
lcall
dec
shlb
lock
mov
xchg
lahf
lock
insb
into
adc
and
inc
jecxz
daa
cmp
idiv
imul
sub
dec
cmp
pushl
mov
ret
leave
nop
pop
inc
lret
shll
out
inc
test
or
cmpsb
mov
ljmp
mov
xchg
lods
arpl
das
xchg
aam
adc
lock
pop
ret
ja
xchg
fisubs
mov
and
mov
xor
sbb
icebp
adc
pop
mov
in
popl
xor
xor
insl
mov
bound
mov
loop
ja
cltd
mov
je
xchg
movsl
daa
outsb
pop
dec
push
mov
into
cltd
out
popa
daa
addr16
cmp
icebp
mov
jle
xchg
fdivs
add
xchg
das
lret
sub
mov
sub
inc
adc
shr
inc
repnz
jmp
test
push
and
xor
jmp
xchg
adc
xor
add
push
xor
inc
ss
and
xor
pop
std
adc
adc
test
inc
dec
fnstenv
je
sbb
stos
in
mov
mov
push
sub
fsubrs
dec
dec
test
jno
xor
rcrb
subl
imul
ret
cmc
das
sahf
or
fidivs
fsubrl
mov
flds
decb
push
or
mov
lret
inc
imul
cmpsb
and
aam
fiadds
into
fcompl
pop
add
lahf
daa
testl
int
ret
mov
cmp
les
dec
xchg
pop
sar
loop
inc
arpl
mov
mov
jns
inc
fwait
movsb
inc
push
lea
cmpsl
mov
mov
into
xor
scas
and
and
add
add
xor
in
iret
mov
je
inc
dec
shll
addr16
ret
ret
jb
aas
sbb
les
stos
int3
into
shll
add
push
insl
and
pop
and
jmp
pop
rcll
ljmp
insl
sub
or
nop
lahf
push
aaa
mov
cli
jbe
sarl
vpminub
or
int
imulb
addr16
cmpsl
fdivs
fs
je
jns
or
pop
cmpsb
shrl
mov
je
cmc
aad
fsubrl
jge
arpl
xchg
inc
cwtl
cltd
je
adc
loop
int3
mov
stos
fisubrs
fdivp
mov
sar
repz
dec
lock
roll
inc
mov
and
pop
xchg
dec
and
shrb
mov
shll
pop
adc
mov
adc
push
pop
mov
xchg
push
pop
iret
imul
cmp
loop
or
xor
nop
mov
testl
scas
and
and
not
cltd
or
int3
gs
sti
jbe
scas
sbb
pop
fsin
int
jne
or
cmpsl
lods
xlat
dec
jle
add
lret
mov
sarl
add
jmp
aam
cmpsb
push
xchg
sbb
or
aaa
jbe
cwtl
clc
int3
pop
xchg
sahf
sbbl
jl
loopne
xchg
pushf
jg
aam
add
scas
aaa
movsl
mov
aaa
fsincos
and
fidivrl
aaa
popa
clc
push
add
stos
inc
insl
sbb
xchg
popa
es
sub
test
or
xchg
pop
icebp
add
jmp
aaa
add
sub
cmp
push
test
push
test
cltd
ret
clc
sarl
cmp
dec
lock
and
stos
pop
icebp
fsubrl
scas
jno
lea
mov
sub
jl
das
addr16
jnp
fsub
adc
lea
push
in
je
push
insb
repnz
push
fadd
or
sbb
pop
rorb
sbb
ret
mov
pop
andb
mov
pop
loopne
xor
pushf
dec
sub
or
sahf
clc
andb
jns
leave
mov
lods
jmp
dec
inc
inc
inc
fs
movsb
repnz
imul
mov
xchg
imul
data16
cmp
push
cmp
insl
leave
test
cld
sub
fisubs
jnp
adc
scas
mov
imull
movsb
imul
sbb
mov
mov
daa
lahf
ss
cwtl
inc
mov
cmp
sbb
out
xchg
pop
je
out
jmp
int
and
push
and
cmp
xchg
add
inc
movsb
push
sarl
push
lcall
jge
das
xchg
cmp
lds
pop
push
mov
adc
jne
push
cmp
add
fsts
sub
xor
sbb
inc
lret
pop
out
scas
jp
inc
dec
sbb
and
cmp
hlt
push
cmp
fistps
or
push
sub
fldt
neg
xchg
mov
bound
test
fs
imul
js
mov
xchg
mov
out
push
mov
xor
push
imul
sub
inc
mov
jo
imul
fucomp
sti
leave
cltd
ss
fisubl
stos
lods
push
or
in
shrl
add
pop
lds
inc
or
push
fmuls
push
jbe
add
mov
sbb
lock
jns
daa
mov
mov
inc
iret
mov
adc
stos
lret
and
mov
pop
testl
inc
popf
sub
scas
pop
data16
sarl
inc
push
je
jnp
jecxz
and
iret
gs
lcall
mov
aas
aam
sbb
cmpsb
test
mov
mov
and
xlat
fsubrl
mov
inc
in
xchg
mov
loopne
lea
arpl
clc
rcl
cmc
lods
mov
xor
cmc
cmp
xor
stos
fdivl
fcmovne
lock
fldt
nop
xchg
fldenv
stc
cmp
scas
dec
outsl
jo
jno
imul
add
mov
outsb
stc
xrelease
pop
inc
hlt
dec
cmp
and
dec
popf
mov
mov
pop
movsb
icebp
shrw
insb
xchg
pusha
rcrl
jmp
adc
push
mov
and
jmp
ret
loopne
into
cwtl
mov
and
xor
loope
lods
test
loopne
data16
xchg
clc
test
ja
jnp
aaa
adc
sub
fistl
movsl
xchg
nop
sub
mov
dec
movsb
stc
stc
stos
cmp
xchg
test
ret
mov
cltd
jl
mov
sub
lahf
test
xor
shrb
notl
jns
jne
mov
cmc
sti
jmp
xchg
rcrl
jns
int
mov
cld
dec
and
inc
ret
dec
and
mov
mov
mov
adc
xchg
dec
sbb
sub
pop
xchg
rcr
repz
outsb
clc
daa
js
insb
rcll
ret
insl
movsl
in
or
adc
push
push
aad
inc
push
cmpsl
dec
sbbb
pop
push
push
adc
or
sahf
mov
mov
rcr
xor
in
dec
adc
mov
dec
call
jne
dec
cmpsl
jae
cmp
add
fwait
mov
xchg
aaa
inc
jecxz
andb
dec
inc
popf
in
test
scas
or
shlb
adc
cli
movsb
and
ss
inc
in
jne
push
push
jge
mov
add
cmp
pop
cmpsl
repnz
adcl
mov
dec
jo
add
lock
out
mov
fs
ja
pop
fisttpll
rcl
lods
adc
lret
xchg
in
ja
xor
and
je
insl
outsl
push
lea
and
es
jle
pop
adc
popf
shlb
xor
jb
sbb
pushf
xor
insl
shlb
imul
pop
adcl
lret
ss
stos
in
and
xor
gs
sbb
mov
cmpsb
orl
dec
inc
mov
loopne
mov
dec
mov
addr16
push
mov
pop
pop
stos
pop
sbb
pop
lds
dec
dec
sbb
xor
inc
movsb
pop
cltd
insl
push
mov
jne
out
adc
mov
push
mov
lock
inc
xchg
mov
inc
sbb
push
leave
loopne
mov
jne
pop
out
out
and
xlat
mov
pop
std
xchg
mov
lcall
cmp
jae
cs
mov
adc
test
ret
cltd
test
xchg
mov
aas
cmc
rcrl
enter
aam
test
cli
pop
xchg
jae
lcall
pop
in
xchg
dec
sti
xor
mov
add
jbe
fldcw
cld
xchg
inc
imul
sbb
ljmp
push
in
daa
xchg
mov
jle
mov
inc
mov
mov
stos
dec
cmpsb
push
dec
xor
mov
fldl2e
mov
cmp
push
mov
cmp
sbb
rcrb
call
popf
test
repnz
sti
sbbb
push
in
fdivr
fldcw
outsl
clc
push
and
ffreep
xchg
mov
mov
mov
les
insl
mov
pop
popf
mov
into
imul
repnz
jns
std
jg
push
mov
inc
pushf
loop
dec
bound
sbb
xor
outsb
or
push
inc
repnz
rorb
enter
mov
lret
mov
push
lea
lret
dec
testl
int3
shll
xchg
fstps
and
out
bound
aad
mov
or
loop
in
and
pop
call
mov
mov
inc
std
andb
mov
test
dec
cmp
sub
gs
xchg
call
jecxz
outsb
data16
push
js
into
mov
shlb
insl
fisubl
jo
push
sbb
gs
or
loop
enter
into
mov
in
sbbl
lahf
fnstcw
lret
bound
imul
push
ljmp
jmp
push
jae
adc
lahf
push
cmpl
sbb
jle
or
mov
sub
cmp
inc
sbbb
lock
or
es
pop
in
daa
dec
pop
insl
dec
testb
cmc
out
popf
insb
jnp
dec
lods
xchg
aas
mov
stc
dec
popa
sub
mov
sbb
push
arpl
xorl
mov
iret
mov
lods
shll
call
icebp
jbe
jecxz
leave
andl
xchg
bound
mov
push
adc
xchg
inc
and
sti
icebp
xchg
and
mov
cmc
cmp
es
repnz
dec
sub
cmp
test
xchg
lret
push
fistpl
repz
mov
out
adcb
or
push
sub
push
stc
ret
test
gs
xchg
ja
in
aas
or
pop
repnz
xchg
add
and
popa
out
lahf
out
stos
lds
pop
mov
push
xchg
ret
jnp
daa
adc
cwtl
or
scas
nop
pop
mov
or
mov
adc
or
pop
iret
ret
shl
dec
push
cmc
rcrb
mov
cmpsl
popa
or
enter
mov
mov
cltd
dec
jne
cmpl
add
or
push
cs
test
push
push
shll
dec
mov
xor
and
xlat
dec
mov
or
sub
jp
mov
bound
scas
xor
cmp
andb
jge
push
scas
emms
add
push
mov
insb
sti
push
mov
add
inc
addb
sbb
insb
dec
roll
pop
sub
scas
sbb
std
adc
jno
icebp
mov
jbe
jne
sbb
mov
insb
in
cmp
shl
xchg
inc
into
cmpsl
bound
sbb
jnp
cmc
ret
adc
int3
mov
jo
pop
fisttpl
daa
adc
lock
fisttpll
out
ja
mov
pop
xchg
sub
and
sub
mov
xchg
or
mov
call
xor
push
xor
adc
in
test
or
out
cmp
mov
ret
xchg
mov
mov
stos
fldl
test
xor
sub
inc
fidivl
pusha
popa
adcl
mulb
ffreep
jns
int
adc
mov
outsb
in
test
or
mov
pop
add
sbbb
mov
cmc
lretw
std
testl
inc
xchg
outsb
lahf
cmc
mov
cmpsb
xor
dec
scas
xchg
dec
xor
aam
push
stos
lahf
xchg
jmp
mov
xchg
mov
popa
mov
sbb
aas
dec
xor
int3
arpl
hlt
pavgw
sbbl
or
pop
xchg
es
into
repz
cwtl
fucomi
cwtl
gs
and
pop
add
mov
popa
push
inc
sti
mov
les
mov
push
int3
fisubrl
adc
pushl
notl
inc
ss
in
std
pop
icebp
aam
imul
jbe
mov
leave
or
sarb
add
mov
loope
pop
clc
sahf
xlat
push
push
xchg
aas
insl
lods
inc
lahf
pusha
sbb
sbb
pop
adc
aad
movsl
push
pop
sahf
xor
cwtl
pop
aas
inc
into
mov
jmp
lock
frstor
stc
daa
mov
or
rorb
sbb
popf
dec
jle
ljmp
jo
in
inc
xor
xchg
jp
das
loope
xor
rolb
adc
clc
cmp
insl
jmp
fstl
int
jp
mov
adc
lret
lods
and
xor
inc
inc
pop
jmp
stos
dec
cmp
incb
xchg
lds
or
cmp
xchg
jge
stc
push
lahf
loopne
and
adc
out
cmc
lcall
jo,pt
cmp
sbb
lods
cmp
mov
xchg
jle
movsb
test
dec
jg
jle
xor
lret
sub
rorb
jge
popa
sub
das
jb
clc
sbb
std
in
subb
cmc
jbe
fwait
rcrl
test
push
or
push
cmp
fadd
sarb
adc
jmp
and
and
push
lahf
adc
inc
gs
jg
movsl
cmp
pushf
stc
push
sti
sbb
pop
sar
fstpl
xlat
and
mov
pop
xor
dec
in
jle
push
test
aaa
mov
aas
inc
mov
ja
outsb
cmc
pop
test
xchg
outsb
sbb
loope
sbb
jae
xchg
or
jae
adc
sub
cmc
add
sbb
xor
movsb
decb
scas
cmp
mov
add
scas
inc
sbb
rclb
lret
rcll
or
sahf
mov
hlt
jl
test
orl
pop
mov
sbb
pop
pop
inc
in
pop
out
sbb
jge
push
cmp
jmp
mov
les
jg,pn
pop
out
dec
sahf
cltd
xor
cmc
in
add
push
arpl
inc
arpl
push
jne
insl
scas
sbbl
cs
sbb
fldpi
cmp
adc
push
pushf
or
ss
loopw
sbb
mov
test
iret
enter
fsts
inc
xchg
fnsave
orb
pop
scas
xor
mov
sbb
fs
xor
rclb
push
scas
add
push
jmp
mov
enter
or
jg
mov
push
xlat
fnstsw
push
int
scas
lock
ljmp
inc
fdivrl
fadds
jb
cs
push
movsl
dec
wbinvd
movsb
ss
sub
sub
xchg
lahf
gs
shlb
push
je
mov
mov
pop
xchg
cld
das
lock
and
inc
mov
or
push
dec
xor
sub
fidivrl
lret
daa
mov
lds
aas
test
rcrb
and
cld
xor
insb
fs
sbb
adc
add
je
xchg
push
shlb
outsb
cli
mov
cmp
pop
daa
xchg
iret
insb
andb
add
xchg
scas
andb
mov
inc
lahf
push
enter
jbe
pusha
mov
shlb
cmp
adc
in
insb
pop
lock
dec
add
in
cmc
mov
in
pop
xor
xchg
adc
imul
mov
lret
shlb
lock
rcrl
ljmp
inc
loopne
mov
pop
in
lods
adc
jle
lea
push
xlat
xchg
inc
mov
pop
push
xor
or
fidivs
test
add
xchg
pop
pop
jae
or
push
popa
jg
iret
data16
adc
clc
in
xchg
mov
sbb
push
mov
in
test
stos
out
sbb
pop
sarb
adc
lea
bound
xchg
xchg
inc
dec
dec
mov
subl
js
sbb
fs
pop
or
repz
add
mov
popa
adc
sbb
push
dec
scas
add
fisttps
or
dec
adc
out
pushl
mov
fiaddl
xor
hlt
jbe
push
hlt
scas
and
jae
popa
cmp
cmp
fsub
pop
mov
or
lahf
loopne
push
mov
or
test
fidivrs
push
cmp
mov
jb
jbe
or
xchg
orb
out
sbb
pop
dec
cmp
and
cli
arpl
decb
xor
jo
cld
imul
and
loop
add
iret
jns
cmpsb
vandnps
es
mov
push
mov
fsubr
roll
xor
lds
ja
dec
cli
xor
dec
aas
xor
sbb
cltd
call
sub
adc
cmpsb
and
xor
scas
adc
je
push
inc
xor
mov
and
jb
pop
sti
xchg
mov
jb
pop
movsb
sub
jns
test
sub
icebp
fldl
incl
dec
fldl
mov
repnz
add
lret
cmp
cld
bound
addr16
mov
cmp
cs
mov
mov
and
scas
sbb
xchg
test
push
mov
ret
rep
aaa
ljmp
inc
mov
iret
mov
jb
lock
sahf
loope
loope
sahf
sahf
and
jg
aaa
leave
xor
daa
in
pushf
je
mov
sub
cmp
repnz
cmp
out
cmp
sti
loop
in
jp
out
lods
cmovnp
jne
jne
mov
movsl
cmp
jle
xchg
jmp
es
cld
ret
and
mov
das
shlb
xorl
jmp
out
loop
das
shll
jnp
out
aam
push
pop
scas
sub
js
cld
shufps
or
push
inc
push
or
ficomps
ds
cmc
adc
js
sbb
mov
insl
cmpsl
cltd
js
or
hlt
xchg
in
adc
cmp
push
xchg
enter
imul
fistl
sahf
cld
outsb
cmp
xchg
loope
es
jp
outsl
and
xor
andb
pop
fsts
mov
ret
pop
loop
imul
mov
xchg
jb
mov
cmpsl
dec
test
push
pop
jge
cli
mov
cmp
mov
sub
mov
in
mov
rolb
sti
xchg
scas
xor
jae
pop
jae
scas
test
lods
sbb
imul
hlt
add
pop
cmp
stc
leave
stos
cmp
xchg
lds
outsl
push
sbb
push
lahf
xor
mov
imul
add
cmp
pusha
andb
stos
test
imul
mov
movsl
xchg
pop
mov
int3
imul
sahf
adc
sbb
data16
push
adc
popa
repz
stos
sub
jmp
movsl
frstor
mov
adc
mov
push
jo
add
inc
xchg
fucompp
ret
fs
out
adc
sahf
cmp
and
jg
xchg
daa
or
sbb
and
push
xor
ds
mov
xor
out
xchg
add
mov
pop
cli
popf
dec
iret
fsubrs
push
ljmp
inc
fldcw
mov
xchg
scas
sbb
loop
cmp
jl,pt
das
insb
inc
fidivrs
push
fstpl
pop
xchg
sub
sub
insb
jnp
and
mov
pop
mov
daa
int
sbb
and
xchg
dec
push
add
hlt
mov
cmpsl
movsl
call
jecxz
lret
loop
in
scas
dec
cli
xor
mov
inc
fadds
adc
jnp
clc
icebp
pushf
scas
pop
inc
data16
repnz
notl
lcall
in
ret
mov
xchg
cmpsl
mov
or
rclb
cmpsb
push
data16
fldcw
sarb
pusha
or
mov
jnp
lahf
pop
cmpsb
in
sahf
jge
shlb
bound
pop
fwait
xchg
or
outsl
jl
cmp
test
mov
mov
les
movsb
outsl
xchg
jle
and
shl
sbb
cltd
mov
in
les
cmp
imul
push
or
sbb
push
mov
xchg
inc
in
pusha
xor
sahf
push
lods
fcmovb
sbb
stc
popf
dec
jne
sbb
inc
movlps
xchg
mov
insl
xlat
filds
pop
or
mov
add
jnp
or
pop
dec
rol
sbb
cmp
xchg
jb
cltd
cmpsb
cltd
cmpsl
cmp
ret
and
lock
jg
xor
jno
shlb
pop
mov
push
jns
mov
xor
out
inc
incb
bound
shrb
int3
sbb
adc
addr16
fstps
insl
hlt
mov
cmpsl
loope
cmc
js
adc
mov
jp
xor
sti
add
andb
cmpsl
test
mov
mov
inc
into
jne
inc
xlat
fcoms
arpl
into
cmc
sub
cli
in
sahf
and
shll
aam
dec
adc
push
dec
adc
cmp
repnz
mov
mov
push
inc
jo
jb
aas
dec
pop
daa
shl
mov
ret
cmp
xchg
aaa
dec
mov
sub
outsb
cltd
dec
xchg
and
adc
fwait
in
mov
mov
pop
rcl
inc
mov
xchg
scas
repz
lods
movsb
aaa
pop
push
and
daa
add
cmp
clc
sbb
dec
push
int
daa
out
fsub
cs
cmp
fwait
scas
mov
int3
lock
test
add
xchg
scas
sti
in
pop
pop
sbb
mov
pop
arpl
mov
sub
or
push
sbbl
add
jne
mov
inc
sbb
dec
mov
mov
insl
pop
fiadds
or
scas
es
jmp
mov
pop
cmp
dec
in
fcompp
inc
push
mov
std
enter
loopne
test
cli
daa
and
lds
jae
sahf
inc
push
xchg
mov
les
lret
jne
push
inc
sbb
pop
data16
adcb
in
add
leave
ljmp
lock
jnp
jl
enter
push
outsb
jb
adc
pop
sub
je
pop
and
outsl
mov
int3
mov
lret
fmul
inc
and
or
mov
add
jge
fsubl
dec
adc
movsl
stos
jmp
nop
das
call
inc
fisubrs
add
add
pop
cmpsb
lock
and
sbbb
cmp
scas
loop
pop
pop
sti
addr16
lea
sbb
inc
mov
out
rorb
out
pop
test
push
jle
sub
in
jnp
movsb
negl
sub
push
jmp
push
fcoms
jae
sarl
inc
pavgb
and
rcl
loop
fdivl
fwait
or
and
push
ja
add
jle
jp
lods
fistpll
in
xor
popa
out
imul
xchg
mov
add
fbstp
mov
fs
movb
cmpsb
outsl
shrl
cmp
shll
and
aaa
ret
cmpsl
add
gs
xor
pop
add
xchg
stos
sti
adc
jmp
out
xchg
inc
sbb
mov
pop
int3
xchg
ret
and
push
mov
stos
mov
rol
and
sub
aas
lock
outsl
aam
repz
add
push
mov
shrb
xchg
push
iret
cmp
andb
lea
mov
mov
inc
cwtl
sbb
pop
out
push
or
ds
or
hlt
push
jecxz
push
push
pusha
subb
arpl
movsb
dec
cmp
mov
mov
gs
pop
xlat
sbbl
imul
sahf
addr16
add
pop
xchg
sbb
lods
lea
and
pop
mov
in
sub
and
imul
lock
mov
push
lock
stos
ret
and
mov
adc
lea
dec
in
adc
in
pushf
and
add
lcall
in
sbb
jb
gs
xchg
sarb
bound
inc
shl
cmp
xor
mov
cmp
push
mov
cmp
mov
jns
cmp
je
hlt
mov
push
subb
ds
dec
adc
mov
xchg
int
dec
cmpsl
jmp
sub
mov
xchg
or
test
ss
push
jns
fsubr
inc
dec
adc
pop
test
or
aaa
ficomps
lock
or
stc
loope
das
lcall
gs
or
jge
enter
dec
lods
add
popa
sub
jnp
pushf
int3
fmul
jmp
mov
in
inc
push
repz
lcall
out
call
xor
shlb
or
out
xlat
out
or
int
jae
je
test
jmp
push
cmpsb
rorb
ljmp
cmp
insl
pop
adc
xchg
test
shlb
push
data16
lock
add
or
fnsave
addb
jbe
cwtl
xor
inc
jg
xor
jge
or
push
xchg
out
push
pushf
sub
sub
stc
dec
and
sbb
xchg
icebp
sub
jae
mov
test
mov
scas
sub
pop
imul
lock
out
pusha
lahf
push
mov
push
and
lret
xchg
lea
add
push
xor
dec
xchg
xchg
dec
ret
leave
cmp
popf
mov
stc
lea
scas
and
adc
jnp
fsts
mov
addr16
lock
outsl
push
imul
pop
mov
popa
xchg
pop
inc
and
ss
arpl
and
jle
ret
xchg
or
and
cmp
movsb
imul
xorl
fsubrl
jle
or
xor
add
jl
pusha
sub
fwait
cmpsl
test
push
outsb
outsl
mov
sbb
aad
imul
fs
xor
cs
xor
pop
xlat
sahf
rorl
or
pop
ljmp
jl
loopne
sbb
inc
inc
mov
jno
das
xchg
jb
push
loop
add
add
jnp
jae
xchg
popa
or
cmpsl
dec
stos
ds
pusha
outsb
add
imul
adc
jle
or
test
popf
mov
daa
or
sbb
les
push
std
ret
lahf
push
rcll
xor
jle
js
fstps
mov
adc
ja
sub
ret
ficomps
ds
je
add
stc
les
fwait
shlb
push
or
cmp
jbe
seta
fldcw
aad
xchg
loope
stc
xchg
push
les
sbb
adc
sbb
pushf
xor
insl
dec
in
mov
int
jbe
mov
mov
adc
jl
fidivl
jmp
cmp
dec
jecxz
jnp
sub
js
add
lds
inc
ds
loopne
hlt
mov
add
xchg
adc
es
and
lds
add
cmp
jno
popf
jae,pn
and
push
inc
pushf
xor
cmp
test
in
mov
mov
push
mov
pop
cs
or
outsb
inc
in
fldcw
mov
fsub
push
mov
fadd
loop
inc
call
test
in
sbb
pop
mov
pop
jge
sub
mov
lret
adc
dec
pop
push
loop
mov
ljmp
stc
mov
sbb
xor
loop
mov
push
xor
pop
ss
push
in
jnp
js
js
jb
inc
cmpsl
ljmp
sbbb
pop
fisubrs
mov
mov
cli
rcrl
orl
mov
add
sub
push
and
pop
lods
in
loopne
movsl
mov
inc
fdivrs
aam
ds
pusha
into
xor
sahf
in
adc
mov
lret
outsb
or
mov
mov
outsb
das
xor
pusha
lods
test
dec
add
hlt
sbb
and
push
mov
cltd
loopne
divb
out
test
pop
dec
mov
mov
and
out
cmp
jb
call
mov
data16
pop
mov
cmp
add
outsb
repz
push
insb
loope
into
mov
push
xor
or
cs
fsubrl
stos
jbe
dec
test
lock
inc
mov
push
es
adc
mov
pop
mov
or
pop
daa
jp
loope
int
ds
fcoms
jg
or
dec
jg
jno
mov
xor
das
popa
dec
ret
dec
mov
cmpsl
js
cli
mov
push
sbb
fimuls
call
inc
xor
rolb
fmul
xchg
cmp
je
lods
mov
cld
aam
test
mov
dec
fdivp
jns
jmp
insb
xor
cmp
sahf
test
and
mov
adc
mov
xor
push
scas
cld
mov
rcll
mov
popa
cmp
adcl
divb
leave
lock
jge
pop
pop
mov
push
cmp
insb
fdivs
xlat
aaa
lcall
and
aad
mov
movsl
mov
andl
nop
inc
cwtl
inc
add
jl
repnz
jb
adc
mov
mov
cmpsb
imul
faddl
addb
jecxz
mov
mov
dec
xchg
es
mov
mov
sbb
adc
mov
sbb
shl
add
lret
xor
xor
or
repz
push
cmpsb
cmp
mov
adc
inc
xor
sub
mov
mov
mov
mov
outsb
adc
pop
scas
xchg
lret
ret
je
dec
addr16
or
xlat
mov
jl
inc
push
xchg
ss
rorl
addb
push
aam
arpl
add
jne
xchg
adcl
mov
mov
push
inc
out
push
int
aas
push
xchg
repnz
mov
icebp
add
stos
jae
xor
sarb
cltd
mov
sbb
jge
sub
inc
fsub
outsb
mov
repz
pop
push
or
stc
push
or
icebp
js
mov
ja
cmpl
pusha
jnp
mov
jle
mov
and
sti
xchg
mov
add
arpl
pop
sbb
imul
movsb
pop
and
dec
das
dec
mov
jmp
mov
inc
stc
dec
insl
test
js
loopne
jbe
test
push
js
cmp
mov
xor
xchg
in
push
and
call
shr
push
adc
lret
cs
jg
xor
xchg
mov
push
or
ja
jl
mov
mov
push
mov
js
pop
daa
cmp
sbb
push
sub
inc
sbb
lret
in
add
mov
daa
jg
jg
cmp
out
pop
loop
push
iret
jnp
mov
inc
push
pop
sbbb
pop
cmp
call
jno
mov
pusha
add
inc
cmp
push
pop
rep
jae
push
cmc
lahf
push
or
ja
pop
scas
jo
push
mov
les
mov
push
push
pop
adc
sub
enter
and
movsl
fcompl
out
mov
xchg
sbb
rcrl
roll
dec
pop
in
push
loop
les
test
jbe
test
ds
cmpsb
sub
pop
test
mov
push
jno
sbb
out
add
add
cmpsl
xor
mov
mov
sbb
mov
sbb
push
insb
adc
dec
insb
pop
stos
aad
jmp
test
iret
cs
clc
gs
inc
lret
scas
popf
push
test
and
jb
adc
push
adc
scas
inc
pop
mov
stc
or
dec
inc
pop
adc
outsb
or
jmp
dec
push
ret
enter
insb
adc
scas
inc
mov
push
push
jle
sarb
pop
mov
jle
ja
lock
loope
mov
sbb
adc
pop
mov
mov
lcall
mov
xor
in
cmp
inc
push
pop
jecxz
mov
jg
insl
imull
sarb
lea
outsb
psubusw
pop
pop
hlt
dec
pop
shl
test
mov
push
int3
icebp
out
push
push
push
insb
xchg
test
sub
xorl
rclb
stc
nop
fimull
imul
jp
fsubrs
sbbl
xchg
jle
jmp
sti
into
movsl
scas
xor
mov
lret
addr16
or
gs
arpl
leave
mov
jge
mov
and
cmc
jmp
mov
add
sti
shrb
or
cmp
scas
loope
lock
sti
push
mov
xchg
call
or
les
pop
mov
dec
iret
sub
dec
pop
daa
sar
jne
lahf
mulb
shll
mov
adc
cmp
inc
aam
je
test
inc
cli
rcrl
push
and
int3
adc
add
jb
xchg
mov
cwtl
mov
popf
lock
outsl
nop
push
xchg
add
outsb
out
lcall
loope
push
add
mov
xchg
pop
test
imul
xchg
leave
mov
mov
test
push
bound
mov
fstpl
nop
fucomp
mov
frstor
outsl
push
xchg
inc
shlb
rcrb
scas
inc
inc
int
rorw
aad
stos
cmp
jmp
loopne
or
cwtl
add
and
ljmp
and
dec
cmp
fsubrs
dec
xor
rorl
push
push
shrl
ds
sbb
ss
cltd
ds
push
ret
mov
imul
fimuls
mov
pop
and
loope
push
fnstenv
adc
pop
inc
sub
das
mov
fs
jge
cmp
sbb
aas
loop
or
xchg
mov
fcoml
pop
fwait
aaa
sub
push
fisubl
js
dec
inc
es
fstps
cmp
lods
adc
pop
call
or
enter
inc
loope
out
fbld
mov
cmp
jns
mov
or
stc
idivl
push
lret
and
jp
mov
mov
mov
js
dec
das
sti
cwtl
daa
ret
inc
ret
mov
daa
sbb
xchg
sub
je
and
arpl
ror
push
insl
jmp
inc
les
cltd
push
mov
sub
and
adc
pop
icebp
movsb
fistpl
push
lea
loope
cld
jecxz
inc
dec
shlb
fdivrs
push
sub
fwait
pop
repnz
push
in
add
je
push
test
push
pop
repnz
jg
inc
and
cld
stos
mov
lret
bound
stos
inc
jo
in
xlat
aas
cmp
scas
addr16
push
xor
pop
ljmp
jno
mov
mov
lahf
mov
add
aas
push
mov
imul
les
inc
or
gs
mov
adc
sbb
mov
push
lea
or
add
loopne
data16
addb
jae
inc
dec
dec
adc
pop
fwait
scas
cwtl
pop
loope
fbld
xor
jecxz
xor
ret
add
cmc
imul
inc
movsb
imul
das
push
call
stc
mov
jae
mov
pop
push
out
xchg
adc
outsl
or
pop
xor
andb
jnp
iret
pop
imul
hlt
adc
cmc
mov
cmp
mov
lea
xor
mov
inc
push
mov
ss
daa
push
dec
xor
ja
or
jns
pop
shll
add
nop
lods
ljmp
xchg
out
fidivs
xchg
mov
and
shlb
mov
outsb
jl
out
pop
dec
clc
push
mov
dec
jnp
push
or
movsl
mov
xchg
fsts
push
and
movsl
push
ficompl
out
popa
fwait
sahf
mov
inc
adc
ljmp
mov
xchg
inc
xorb
dec
outsb
adc
jle
mov
stos
sahf
or
mov
les
sub
inc
sarl
jmp
movsb
fwait
fs
inc
dec
imul
ja
adc
mov
arpl
ret
fistpl
sub
loop
cli
lods
mov
push
xchg
adc
mov
dec
push
cmp
pusha
sub
cltd
mov
out
imul
push
fstl
out
sub
adc
daa
and
lret
ficoms
cmp
and
inc
pop
dec
xor
into
js
cmp
lahf
cs
push
pop
xchg
test
mov
push
pop
xor
and
cwtl
outsb
mov
out
and
dec
das
in
aad
int3
dec
dec
dec
mov
shrl
sbb
in
or
icebp
fldl
cltd
mov
ljmp
lcall
and
test
mov
cltd
inc
daa
inc
xor
pop
ja
push
xchg
pop
jp
mov
and
sub
inc
inc
std
jo
ljmp
in
mov
pusha
jp
dec
cmpsl
dec
insl
cmp
lods
dec
inc
dec
fbld
mov
mov
sub
jge
stc
push
movsl
push
add
xor
push
loope
vpackuswb
xchg
pop
or
scas
cmc
mov
inc
ficompl
xor
xor
xchg
test
insl
shll
mov
scas
fsub
jge
repnz
add
xchg
scas
jb
jb
and
pop
add
cmp
cltd
and
sarb
outsb
sbb
push
xor
mov
pop
cmc
inc
sub
mov
mov
push
mov
mov
call
test
fldl
mov
ja
test
shll
ds
cmp
or
adc
arpl
mov
int3
sbb
mov
cld
imul
sub
mov
ja
lds
ja
pushl
push
out
mov
js
push
cwtl
insb
orb
jno
and
adc
lock
jle
pop
pop
mov
ja
push
fldt
adc
lret
jne
push
push
push
icebp
mov
or
adc
mov
aad
mov
mov
push
test
into
sbb
into
scas
loopne
into
pop
out
inc
add
or
aas
sub
jmp
cmp
xchg
inc
rorb
xchg
add
cli
lahf
pop
popf
xor
es
mov
es
sub
test
jg
push
cli
subl
aam
ficompl
cs
jmp
lods
pop
icebp
adcl
sbb
cmpsl
cmpl
jl
jnp
jp
push
lret
xchg
cmpsl
gs
xor
cmp
bound
not
dec
cli
sar
dec
nop
jae
out
sub
cmp
dec
dec
cld
js
lret
cmp
push
movsl
enter
add
push
imul
xor
leave
les
xor
dec
cwtl
xchg
push
adc
in
lods
inc
xchg
xorl
sub
fwait
mov
cwtl
into
xchg
pop
es
std
out
add
xchg
pop
icebp
inc
mov
adc
scas
dec
loope
jnp
es
lods
jp
pop
das
cltd
jp
sbb
into
in
jmp
lods
mov
test
or
aam
push
test
ficoml
shrb
shrl
mov
mov
mov
pop
pop
add
clc
mov
out
ljmp
pop
push
cmp
shll
mov
test
and
pop
addr16
fwait
xor
inc
inc
cmc
adc
addl
call
jnp
out
push
xchg
cs
sub
mull
sbb
aas
mov
or
arpl
sub
dec
xchg
sub
and
outsb
hlt
mov
push
jb
xlat
ljmp
jns
imul
jecxz
orb
or
fidivrs
xor
mov
leave
mov
lcall
dec
mov
ja
inc
outsl
test
and
cmp
and
mov
popa
into
aas
fcmovb
mov
mov
adc
in
sbb
xor
imul
xor
mov
out
sbb
ror
loop
lcall
fcoml
push
sub
pushf
outsl
push
in
push
insl
lcall
inc
push
push
mov
xor
cli
ljmp
mov
or
sub
and
push
pop
in
int
cmc
adc
pop
and
subb
jecxz
mov
and
ja
xor
movsb
xor
xlat
test
pop
cmc
sbb
les
xchg
xchg
mov
sbb
les
out
xor
sub
fwait
push
and
add
scas
ljmp
jb
cmp
jb
fdivrl
pop
cli
popa
jecxz
sbb
mov
ss
mov
aaa
dec
mov
xchg
pop
pop
jle
addl
mov
or
adc
pop
push
in
enter
ljmp
aad
xor
fs
lds
jmp
mov
fmulp
movsl
divb
icebp
adc
rcrl
or
pop
xchg
sub
pop
jmp
cmp
sbb
push
call
or
sbb
fs
pop
jb
mov
sbb
xlat
jns
or
cmp
pop
into
mov
outsl
mov
jmp
push
lea
and
lock
mov
dec
cwtl
cs
cltd
test
push
xor
int
aaa
sahf
cwtd
push
test
adc
fbstp
mov
imul
or
mov
and
fxch
pop
xchg
mov
outsb
stos
jmp
pop
sbb
in
aas
dec
out
stc
nop
ss
cmp
ficoms
scas
comiss
test
cmc
and
rol
push
popf
dec
mov
push
fstpl
mov
rorl
adc
mov
dec
sub
lret
addr16
and
mov
test
push
clc
iret
mov
shrl
push
aam
sbbl
mulb
pusha
jmp
mov
dec
daa
into
iret
sti
sbb
cmp
mov
jl
or
pop
movsb
and
pop
cli
xlat
insb
sub
inc
push
or
mov
mov
jp
mov
mov
sub
pusha
mov
hlt
lret
sbb
add
jmp
mov
mov
dec
inc
fnstsw
aas
push
jbe
cmp
and
mov
pop
jbe
fisttps
dec
scas
out
pop
push
mov
idivb
daa
out
es
cmpsl
ret
mov
dec
push
les
jmp
adc
aas
dec
sub
scas
aas
cmp
and
popa
mov
push
adc
ss
fucomp
ret
mov
rclb
mov
mov
jecxz
mov
or
in
pop
sbb
test
add
outsl
push
movsb
into
lds
mov
mov
int3
mov
jae
arpl
add
jmp
dec
mov
add
mov
repz
mov
popa
sub
pmuludq
mov
pop
enter
test
sbbl
or
fsubrp
mov
ljmp
mov
or
jl
pop
jae
mov
les
fsubs
pop
mov
or
clc
bound
out
fimull
cmp
cltd
xchg
loopne
or
push
xor
or
mov
iret
fwait
dec
mov
lea
sbb
inc
push
daa
pop
ljmp
mov
ret
std
shrl
lret
mov
loop
mov
mov
adc
call
leave
int3
popa
je
fldcw
lods
mov
cmp
rclb
subl
sti
clc
add
shrl
enter
mov
push
add
and
int
xor
pushf
xor
mov
jmp
jb
loopne
pop
jecxz
stos
push
adc
pop
xor
in
in
pushf
cmp
xchg
xchg
imul
icebp
mov
in
push
xchg
fstp
and
mov
adc
add
sub
stos
add
lcall
cmpsl
es
leave
push
addr16
mov
rclb
stos
dec
mov
js
inc
xchg
and
test
xor
clc
sbb
notl
push
add
inc
mov
xchg
adc
je
aas
adc
hlt
inc
hlt
xchg
mov
mov
push
inc
scas
mov
dec
sub
pop
push
ret
mov
lods
in
sub
push
pop
inc
xlat
repz
es
xchg
sub
aad
movsb
out
dec
sbb
push
insl
jo
fcmovnbe
or
or
push
es
movups
mov
fnstcw
mov
xchg
adc
mov
stc
popf
fimuls
sub
dec
sbb
mov
out
mov
pop
mov
and
or
clc
add
cmp
push
cmp
lcall
hlt
gs
push
insb
in
mov
xor
push
inc
jmp
lret
and
push
dec
sbb
add
xchg
adc
loop
cmp
notb
dec
jmp
or
outsb
adc
data16
sub
cmc
mov
into
adc
popa
and
or
out
jb
mov
add
daa
inc
xchg
sbb
push
jb
and
adc
aam
dec
mov
outsb
psubsw
das
mov
push
lods
mov
add
add
or
dec
push
leave
push
test
repnz
adc
xchg
call
int
adc
cltd
daa
pop
sbb
aas
in
out
push
xor
ljmp
mov
pop
mov
mov
cmp
or
push
std
and
sub
sub
sbb
add
je
adc
push
ljmp
pop
mov
mov
lcall
mov
sahf
xchg
dec
and
cmpsb
cmpsl
sub
dec
sub
mov
ljmp
shlb
xchg
loopne
dec
in
mov
sbb
aam
mov
mov
sbb
arpl
fsubr
xor
xor
mov
adc
imul
push
sahf
stos
ja
imul
xchg
mov
mov
push
push
leave
dec
ja
sahf
fidivs
outsb
sbb
in
or
ficoms
popa
push
or
ss
das
pop
push
test
jle
adc
sub
es
std
inc
cmc
outsl
icebp
dec
adc
mov
jl
out
xchg
nop
mov
es
stc
shrl
fisttpll
movd
ret
jne
cmc
sub
pop
push
movlps
cwtl
fs
jecxz
sub
mov
out
xchg
mov
and
sub
fldl
or
xchg
outsl
loop
loope
scas
out
popa
sbb
xlat
inc
inc
into
mov
nop
int3
push
xor
dec
and
push
jae
jno
mov
rol
cld
mov
out
pop
and
add
sbb
jp
imul
mov
sbb
pusha
jl
xor
shrl
inc
or
jmp
pop
mov
add
test
add
lret
cmp
mov
push
xchg
jmp
mov
mov
fs
xor
xchg
fsts
pop
lea
push
xchg
adc
mov
jno
ficoml
push
dec
mov
arpl
sbb
shrl
lea
out
push
mov
push
jmp
pop
xlat
push
in
jae
mov
inc
or
jo
cld
fmull
out
ds
loop
movsb
out
dec
pop
mov
hlt
jg
clc
fbstp
cmpsl
or
jne
andl
add
es
add
mov
movsl
lock
cmp
inc
jns
cmp
xchg
ret
pop
mov
ds
mov
pop
aas
add
add
sub
push
mov
mov
sub
inc
hlt
outsl
cwtl
fistl
sar
fdivrl
pusha
mov
pushf
test
lcall
mov
fistl
std
cmp
fbstp
mov
mov
xor
xor
pushf
inc
arpl
sbb
sahf
xor
xchg
mov
arpl
jnp
cmp
into
sub
out
jo
mov
sbb
cmpb
push
pop
cmp
pop
mov
push
test
cmp
sbbl
push
int
and
pushf
aam
jmp
xor
cmp
xchg
pusha
jno
push
cmp
cmpsb
mov
out
inc
testb
fstpt
lret
xor
hlt
xchg
adc
pop
dec
jnp
rol
movsb
cmp
cmp
stos
sub
lcall
sahf
or
arpl
mov
outsb
mov
inc
inc
push
pop
lds
xor
push
jecxz
lea
mov
popa
adc
xchg
sbb
test
pop
or
push
aaa
leave
cltd
pusha
stos
xchg
gs
xchg
jae
inc
repnz
rorb
adcl
dec
ror
mov
bound
dec
push
xorl
inc
cmp
sub
dec
shrl
lcall
pushf
mov
mov
ja
jbe
outsl
rorb
mov
movsb
decl
andb
push
mov
or
into
xchg
push
rcrl
dec
hlt
into
popa
cmp
data16
call
cmp
push
mov
shll
cmpsb
sbbb
mov
mov
movsb
in
xchg
mov
cs
or
xchg
pop
movsl
or
andl
mov
nop
imul
imul
add
mov
shrb
push
inc
xchg
pop
dec
or
out
ret
jl
push
ret
testb
pop
imul
mov
mov
sbb
enter
inc
ja
add
pop
out
fsubrl
js
icebp
ljmp
aad
jg
ror
movsb
adc
push
hlt
or
orb
and
xchg
aas
cmp
pop
shll
lock
es
push
cmc
mov
cmp
jae
arpl
call
lods
lds
fiaddl
sarl
clc
push
jb
and
fs
lds
mov
and
adcb
arpl
aaa
adc
mov
and
cltd
addr16
fisubl
xbegin
mov
fistpll
ficompl
mov
aas
cmc
sub
das
aaa
pop
popa
push
fidivs
xchg
adc
xor
movsb
data16
dec
mov
xchg
sub
enter
and
enter
mov
int
xchg
mov
arpl
or
jecxz
xchg
jle
or
add
xchg
inc
mov
test
adc
das
and
push
mov
mov
loopne
jo
lcall
pop
mov
inc
data16
in
pushf
adc
in
lods
sbb
cmp
dec
cmpsb
loope
out
cmp
jmp
je
dec
fisubs
add
jno
sbb
mov
out
mov
sbb
push
pop
dec
mov
mov
xchg
fldl
and
jo
sub
dec
divl
push
rolb
pop
shrb
pop
ds
mov
lea
in
xor
dec
mov
cmpsb
fs
adc
orl
sub
fimull
mov
leave
shlb
hlt
jmp
dec
fisttpll
cli
push
adc
jne
inc
popf
add
sbb
adc
mov
adc
push
leave
popa
aad
inc
push
cli
xchg
dec
es
adc
rol
sub
jns
mov
sub
xor
inc
shll
sbb
inc
ret
leave
push
loopne
add
mov
shlb
add
addr16
jnp
and
or
shl
jg
dec
cmp
inc
pop
jbe
fs
int
lods
inc
jne
pop
adc
or
insl
loopne
lahf
mov
pop
mov
test
push
and
scas
out
push
mov
or
fmull
mov
inc
data16
out
mov
fldl
mov
cli
xchg
repz
jmp
cld
rcrb
out
sbb
sub
xor
mov
mov
sbb
xchg
lcall
cmp
mov
in
sti
rcrl
sub
sbb
jecxz
lret
xor
sarb
daa
or
cmp
dec
mov
push
bound
fmuls
add
dec
dec
add
jns
in
sbbl
jae
addr16
cltd
fimuls
ficoms
int3
jne
inc
push
mov
inc
popa
ret
push
pop
lods
movsb
movsl
pushf
sub
dec
sub
idivl
loope
inc
arpl
packssdw
jle
je
cmp
sub
sahf
pop
push
push
shrb
pop
icebp
pop
shrb
and
and
push
outsb
or
mov
xlat
pop
push
add
cmpsl
mov
pushf
outsl
mov
notl
push
scas
jb
std
pop
jg
xchg
push
xchg
ss
stc
adc
push
push
sub
gs
lods
add
xor
fsub
mov
adc
fidivl
outsb
aas
or
insb
pop
and
push
mov
mov
xor
mov
jmp
into
sbbl
dec
fistpll
dec
in
mov
test
loop
xlat
out
std
addr16
hlt
addr16
xchg
mov
les
and
popl
pop
setns
sub
xchg
xchg
popa
daa
xchg
pop
mov
nop
push
jae
push
jecxz
push
push
ss
outsl
inc
xchg
insl
cli
pop
mov
aam
dec
mov
into
in
xlat
repz
mov
mov
in
cmp
and
scas
test
sbb
jg
xlat
pop
hlt
out
in
push
mov
xor
xor
scas
mov
cmc
test
and
mov
das
cmp
je
clc
pop
fucomip
cmp
cmp
testl
and
call
sbb
sbb
xor
jmp
je
es
jbe
aas
fists
nop
jae
adc
les
and
arpl
mov
lret
xor
inc
xor
push
das
jb,pn
fs
dec
cmp
cltd
fisubrs
sub
nop
daa
push
sbb
dec
cmp
fisubrs
xor
xor
inc
adcl
fcmove
aaa
adc
es
outsb
out
xchg
repz
pop
fdivs
mov
add
sub
jg
jl
cmp
sbb
dec
insl
jle
inc
test
adc
mov
shll
mov
inc
les
fdivr
pop
repnz
je
insl
pop
xchg
sub
popl
mov
mov
cmpsb
les
ljmp
and
dec
pop
rcrb
fs
sbb
cmp
sub
imul
out
out
sti
cmpsb
mov
clc
sti
add
cmpsl
out
js
aas
mov
cwtl
cmp
mov
jg
xorb
or
shlb
adc
popl
ror
push
push
pop
scas
mov
lret
or
stos
mov
stos
stos
inc
xchg
jbe
leave
fsubr
cmp
add
push
inc
aas
push
aaa
jp
stos
stos
cwtl
loopne
lret
movhlps
pop
mov
cmp
repz
lret
in
mov
es
repnz
adc
lock
xor
out
cld
adc
fisubrs
jle
bound
es
lea
push
stc
stos
rcrb
push
test
adc
flds
sti
stos
test
mov
sti
das
out
xchg
cmp
sahf
outsb
mov
leave
pcmpgtd
scas
jmp
add
adc
mov
push
or
inc
lcall
push
mov
or
pop
pop
mov
mul
cmp
imulb
cwtl
cld
movsl
mov
adc
adc
ret
and
popf
lods
jns
cltd
mov
jle
jp
and
arpl
dec
add
jns
sub
pop
dec
mov
jge
lods
push
in
ficoms
addr16
movsl
je
mov
lods
xor
fisubs
mov
imul
push
add
das
pop
cmp
ljmp
sub
je
and
jmp
arpl
aas
add
push
xor
mov
gs
scas
aas
inc
outsl
into
addr16
das
push
lock
mov
cltd
inc
lretw
ds
es
pop
ds
stos
pcmpeqd
enter
pop
adc
jle
movsl
fidivrs
fmulp
and
xchg
bound
xor
sti
sbb
dec
scas
addr16
test
inc
mov
jns
dec
xchg
test
sbb
jp
sbb
inc
mov
pop
lcall
fwait
xor
addr16
or
jno
cmp
jecxz
mov
je
mov
jae
sub
mov
mov
cmp
dec
je
rcrb
test
jnp
mov
repz
ror
push
fdivr
std
mov
jae
mov
into
jno
mov
and
inc
xor
stc
lock
fimuls
jb
dec
jnp
lcall
mov
sbb
popa
xor
add
push
add
stos
push
cld
jb
sub
fists
xor
push
mov
mov
sbb
xchg
cmp
xlat
sbb
mov
mov
mov
inc
push
fstps
add
xor
ret
adc
sbb
push
ret
pop
stos
jne
sbb
or
fdivs
into
popa
xchg
cld
ljmp
int
or
add
loope
mov
outsb
inc
stc
nop
je
dec
in
mov
inc
jne
inc
sbb
popf
mov
or
sahf
push
add
lret
xor
push
inc
arpl
xorb
shll
addl
mov
push
sbb
jle
imul
jae
fadds
gs
pop
mov
dec
mov
mov
mov
add
dec
mov
call
imul
loope
pop
outsl
dec
out
out
pop
sub
ret
stc
lds
clc
and
bound
lcall
inc
testl
cmpsb
insl
push
fstpt
fstps
dec
addr16
xor
in
push
lods
xchg
imul
dec
jne
jecxz
outsb
lcall
int
xchg
xchg
cli
movsb
cs
sbb
jo
cld
jl
or
pop
cli
pop
mull
out
cmp
fstl
push
add
inc
test
and
and
jne
and
mov
scas
int3
data16
adc
xchg
les
and
push
and
xchg
sub
lret
mov
mov
xchg
pop
adc
xchg
dec
pusha
or
ss
shl
out
popf
push
push
cmp
xor
out
aas
mov
sahf
pop
roll
mov
mov
cmpsl
mov
in
sbb
test
test
xor
les
mulb
adcl
adc
jnp
pop
out
test
cwtl
xchg
pop
arpl
adc
xchg
pop
and
mov
gs
sub
loope
adc
xchg
mov
jp
inc
clc
push
dec
movsl
xor
lcall
std
inc
adc
sahf
and
dec
push
ds
jmp
movsb
sub
outsl
pop
scas
inc
push
push
adc
insl
mov
cmpsl
cli
push
js
aam
call
fwait
rorl
lds
sbb
inc
push
adc
mov
cwtl
xchg
mov
pop
adc
pop
xchg
pop
jge
mov
xchg
test
fdivrs
out
repz
sub
stos
das
out
mov
xchg
mov
push
sbb
sbbl
or
lods
loopne
adc
adcl
xchg
sbb
push
sub
dec
iret
jg
movsl
js
test
in
add
inc
lret
mov
mov
and
rcrb
sub
sbb
sub
or
mov
pop
ljmp
jnp
dec
xchg
pop
xor
dec
mov
mov
insl
mov
repnz
jb
ret
xchg
push
test
and
sbb
je
mov
push
jnp
mov
add
imul
jb
xor
inc
out
xchg
xchg
fwait
test
mov
aad
pop
mov
cmpb
or
scas
sbb
inc
inc
sub
loopne
int
sbb
push
adc
or
mov
or
iret
dec
iret
mov
push
jge
push
or
pop
ret
subl
idivb
mov
lahf
jl
or
out
rcrl
icebp
or
xor
andb
mov
pop
mov
ds
mov
test
mov
rorl
ret
popf
mov
mov
es
idivl
gs
cmp
lock
divl
mov
mov
ret
push
cli
into
sahf
scas
xor
jo
jno
xchg
pop
xor
mov
scas
inc
jbe
insl
mov
mov
loopne
lret
sahf
push
ja
push
mov
jne
xchg
es
sub
mov
add
sbb
xchg
xor
jg
dec
cmp
jmp
push
leave
mov
push
rorl
out
inc
out
lods
fsts
lahf
mov
jno
sbb
pop
pop
dec
lahf
pop
je
xor
adc
mov
dec
mov
mov
jmp
arpl
sbb
push
jmp
repnz
sti
mov
frstor
adc
jb
jo
scas
ja
adc
addr16
mov
test
das
push
or
lock
jle
or
movsb
mov
and
mov
and
test
sbb
inc
sbb
xor
or
in
ret
movsl
jle
mov
or
jl
add
sub
repz
sbb
mov
push
int3
adc
jb
ljmp
testb
xchg
and
and
sbb
xchg
dec
xchg
mov
repz
out
clc
fsubrl
sub
orb
aad
pop
adc
jl
push
mov
int
mov
and
sbb
je
repz
daa
lcall
cld
loopne
gs
stos
arpl
adc
dec
xchg
mov
pop
movsl
and
xor
dec
es
xor
jmp
icebp
jl
cmp
das
mov
dec
daa
divl
dec
les
jl
cmp
jae
mov
out
push
jns
aam
ficompl
adc
lock
mov
mov
dec
mov
lret
jns
loope
pop
adc
and
xor
xor
and
xor
and
flds
adc
xor
scas
fnstenv
adc
dec
push
push
xor
xchg
mov
neg
adc
mov
lahf
inc
out
mov
mov
out
popa
pop
mov
rolb
roll
lret
ret
enter
lret
movsl
lods
cld
lahf
mov
cmp
xor
xchg
hlt
movsb
popa
push
mov
dec
dec
pop
add
ja
xor
sub
cmc
pop
jb
mov
lahf
inc
arpl
into
popa
xchg
imul
pushf
mov
jg
pop
xor
dec
cmp
stos
pop
ret
outsl
pop
and
pushf
rolb
and
jb
jecxz
sub
rorl
daa
pop
nop
push
nop
mov
imulb
pop
mov
outsl
call
and
jle
in
shrb
in
sbb
int
outsb
xor
mov
push
xor
dec
in
shll
shlb
scas
mov
push
cmp
mov
mov
dec
push
dec
scas
xor
nop
inc
enter
stos
fimuls
adc
mov
in
or
mov
and
jb
into
in
inc
sbbb
add
sbb
fmull
mov
cmpsl
rorl
mov
mov
xor
enter
pop
push
or
add
xor
lods
dec
dec
add
dec
push
mov
inc
mov
in
scas
mov
out
cld
repz
outsb
repz
loopne
mov
clc
pop
test
mov
and
xor
or
jnp
in
jle
cmp
cmc
mov
mov
pop
cmp
int3
dec
test
insb
shrl
jbe
cmc
mov
jle
push
inc
push
dec
mov
mov
pop
push
js
or
add
jb
stos
imul
cwtl
in
jo
xor
jae
aam
int3
xor
adc
jecxz
mov
inc
jnp
mov
in
lahf
lock
cli
into
cltd
test
xor
jmp
and
mov
jns
nop
cmpsb
mov
shll
notb
xlat
xchg
das
mov
and
dec
cmp
sub
imul
cmc
in
cmpsl
fsubp
jge
leave
add
cld
fwait
add
sub
outsb
add
jg
mov
xchg
and
in
adc
jl
mov
sub
inc
shl
cmp
jg
jae
mov
test
ds
aaa
stc
loop
ffree
daa
ljmp
fwait
mov
cltd
call
ficoml
insl
fxch
into
incb
pop
stc
ds
fmull
xchg
mov
or
int
pop
in
jo
cs
sbb
mov
inc
divb
and
test
lcall
and
xchg
adc
ret
jle
hlt
loope
loop
fnsave
add
xorl
sbb
dec
fwait
mov
mov
das
js
mov
std
jecxz
out
xchg
or
mov
icebp
shlb
mov
ja
scas
icebp
pop
push
rcrb
daa
sub
mov
repnz
push
out
xchg
lods
stos
test
add
pusha
imul
adc
jp
cli
push
scas
orl
inc
sub
inc
sbb
imul
add
pop
imul
or
mov
or
jp
adc
jge
jbe
adcb
adc
add
push
sub
pop
jmp
rcr
lret
aad
out
test
cmp
out
pop
aam
mov
pusha
in
xchg
mov
fbld
mov
sub
cmp
mov
shrl
rolb
mov
sub
pop
pop
mov
jecxz
mov
push
jnp
sahf
lods
mov
jmp
cs
call
fnsave
pusha
test
aad
pop
scas
popa
neg
lret
inc
push
scas
adc
push
lret
cld
popf
scas
shll
repnz
push
das
xchg
mov
hlt
repnz
test
or
mov
xchg
and
sub
and
cld
repz
cmp
sbb
lods
jg
push
lea
jne
cmp
xchg
jnp
repz
aam
fsub
sub
ja
or
xchg
pop
test
test
lods
dec
add
dec
and
in
jno
and
add
jae
jp
mov
repnz
ret
loop
leave
mov
gs
pop
ja
xchg
xor
nop
push
fcoml
aas
pusha
mov
xor
inc
movsl
call
and
adc
or
lcall
push
mov
dec
lea
jle
and
add
pop
lods
mov
test
fidivrs
xlat
notl
mov
sarl
mov
xrelease
cli
push
pop
repz
xchg
mov
fdivl
in
or
cmp
jne
rclb
lcall
cmc
dec
lds
pop
adc
inc
push
cltd
cmpsl
lret
cmp
jb
pop
aam
scas
gs
mov
mov
and
test
dec
je
mov
adc
out
subl
jp
add
cwtl
sbb
ret
imul
aaa
or
rcll
ret
pop
mov
pusha
insb
xchg
outsb
lods
in
adc
jae
mov
pop
mov
es
xor
mov
sarl
clc
arpl
mov
push
in
fiadds
cmpsl
out
xor
jmp
mov
adc
dec
cwtl
xchg
push
icebp
mov
mov
dec
pusha
mov
movsb
iret
mov
mov
or
pop
push
cmp
xchg
pop
xor
or
sub
sbb
in
test
pop
shr
pushf
sub
lock
xor
mov
stc
daa
lret
mov
or
push
cmc
arpl
push
mov
jno
jb
stc
sarb
push
and
mov
add
xchg
fucomi
and
xchg
lahf
sbb
imul
cld
or
test
cmp
sbb
pop
mov
ljmp
fdivl
xchg
sti
push
into
and
sbb
push
mov
push
xor
iret
mov
pop
mov
xor
hlt
cmp
mov
out
nop
insl
cwtl
push
adc
les
test
repnz
pop
adc
or
rcll
mov
test
les
ljmp
out
xchg
cwtl
movsl
fmuls
jp
jne
jp
and
test
enter
mov
dec
popa
jmp
clc
testb
jno
xor
inc
mov
fdivrl
add
sbb
inc
ret
sbb
scas
and
inc
and
aas
nop
insl
call
mov
sbb
in
test
out
shrl
hlt
dec
mov
dec
outsb
jle
shrl
mov
mov
sub
scas
mov
dec
cs
stos
pop
in
pushf
push
dec
dec
xor
jle
inc
push
xchg
xor
sahf
lcall
adc
pop
mov
xor
push
or
and
cmp
sub
mov
mov
adcb
test
inc
cmp
sbb
pop
fidivs
iret
insb
pop
mov
mov
std
mov
int3
xchg
and
adc
dec
mov
icebp
mov
pop
inc
sub
int
jmp
iret
cmpsb
bound
subb
jo
popf
outsb
sarl
dec
adc
out
adc
cwtl
es
mov
nop
push
jmp
jb
inc
imul
stc
rclb
push
pusha
sub
or
test
pop
pop
pusha
or
jg
lret
scas
mov
fwait
sbb
xchg
stos
cmp
icebp
xor
mov
push
ja
sbbb
test
ljmp
push
dec
inc
inc
jp
shrb
aas
sub
enter
xorl
shll
sbb
push
movsb
jecxz
pop
pop
sahf
dec
inc
mov
jl
mov
inc
nop
sbb
xchg
dec
cmpsl
jp
fmuls
lds
sbb
int
mov
mov
xor
mov
dec
mov
js
mov
vmptrst
pop
cmp
adc
ja
fidivrs
adc
and
jmp
adc
cs
js
fidivs
cmp
ja
mov
adc
inc
mov
add
outsb
xor
divb
add
dec
pop
aas
outsb
sub
stos
pop
or
ja
mov
jnp
add
or
fs
call
sub
adc
adc
movsl
inc
lock
mulb
inc
inc
add
sti
or
dec
cmp
mov
pop
xor
lds
loopne
in
int
xor
rcl
or
inc
xor
and
push
jl
sub
hlt
mov
int
rcl
cmp
cmc
stos
shrl
sbb
shrb
adc
scas
cmp
aad
daa
in
js
cmp
fs
sub
int
imul
out
xchg
mov
xchg
bound
outsb
aaa
xor
dec
sbb
mov
push
cltd
std
xor
data16
outsl
mov
jne
jne
sub
pop
xor
in
or
imul
rorl
pop
or
imul
loopne
incl
jle
xchg
mov
push
scas
mov
jb
jge
jne
push
lahf
mov
cmpsl
sbb
rcl
xor
jmp
xchg
jmp
nop
in
sbb
or
mov
jb
clc
ljmp
lret
pushf
and
adc
ss
pop
mov
pop
cli
add
insl
mov
mov
insb
add
fisttpl
ss
pop
and
fidivl
mov
mov
push
in
xor
sbb
ret
subl
in
inc
adc
xor
idivb
and
in
jno
sub
xchg
mov
xor
jae
pop
adc
xor
divb
add
scas
mov
add
sbb
inc
dec
fistpll
cld
or
aad
sbb
mov
insl
sbb
jno
mov
jl
adc
jns
shrb
into
cmc
mov
mov
xchg
incb
pop
adc
pop
and
hlt
out
test
add
pop
mov
jmp
push
dec
cmp
add
sub
inc
mov
dec
cmp
inc
mov
pop
mov
lret
xchg
insl
out
jbe
loop
rcrl
jl
mov
jp
push
cli
inc
xchg
xor
repnz
jns
jno
scas
data16
jecxz
xor
adc
jge
nop
icebp
cwtl
lds
divb
jmp
xchg
dec
mov
jmp
les
lock
sbb
pop
push
sub
andb
daa
dec
rcrb
dec
dec
pop
and
aas
aad
mov
pop
sarl
dec
cli
pop
shl
in
shlb
test
xor
test
mov
and
pop
jmp
dec
sub
inc
pop
jmp
fs
call
or
mov
repz
jbe
fnstcw
xchg
sbb
jge
mov
add
inc
mov
inc
stc
cmpsl
add
stc
out
push
fs
or
add
inc
xchg
and
lds
jecxz
dec
loop
fdivrs
push
ljmp
jno
push
pusha
add
push
inc
xlat
mov
mov
xor
jb
mov
xchg
sub
mov
fwait
cmp
js
pop
in
fnstsw
jae
mov
ss
xchg
pop
dec
imul
lock
sub
jo
fsubr
sub
xchg
stc
sub
add
incl
sbb
push
xorl
cwtl
jge
mov
mov
xchg
and
push
and
bound
jmp
roll
and
pop
aam
and
cmpsl
dec
pop
insb
jle
xor
sbb
mov
and
mov
popa
es
or
imulb
lods
aaa
add
aad
adc
imul
ljmp
into
and
aas
rorl
cld
lret
and
or
push
arpl
jb
cmp
js
sub
adc
cmpsl
movsl
andb
f2xm1
pusha
and
dec
out
dec
jecxz
out
adc
xor
push
adc
test
push
lock
sub
pusha
pop
mov
in
in
pop
and
mov
xchg
push
repz
jmp
cmpsb
mov
mov
add
aas
test
cmp
cmc
pushf
dec
mov
fucomp
insl
push
pop
in
insl
loopne
ficoml
fstps
push
jo
and
iret
sub
xor
jl
sub
std
pop
shll
cli
add
into
mov
xchg
jmp
cmpps
cwtl
nop
popa
sub
ss
xor
pop
adc
roll
xchg
out
sub
push
xor
call
mov
stos
sbbl
xor
xor
ret
rsm
or
daa
cmpsb
pop
jge
xchg
pop
out
into
int
jmp
and
pop
jge
mov
adc
lods
mov
fsubl
test
xlat
mov
enter
loope
daa
divl
scas
inc
mov
das
test
jmp
jmp
inc
cmc
sbb
outsb
cwtl
mov
sbb
ds
jl
mov
mov
scas
pop
or
aad
rcr
dec
mov
pusha
int
jp
das
push
insb
orb
push
add
inc
mov
jle
fstpl
mov
es
lahf
adc
fmull
nop
ret
push
fsts
in
fsubrl
pop
jp
push
nop
sub
dec
cmp
pusha
jl
sub
push
outsl
mov
pop
xor
rep
sub
inc
or
inc
mov
mov
clc
sbb
mov
negl
push
mov
lea
rcrl
aaa
mov
inc
or
in
test
mov
mov
das
or
jecxz
fwait
push
cmp
push
push
rcll
call
mov
mov
sar
jbe
bound
test
add
add
inc
push
adc
inc
and
mov
push
push
adc
and
and
mov
fiadds
or
push
sub
scas
cmp
scas
jg
loopne
subb
and
pop
pop
push
mov
shll
add
ret
adc
add
and
fidivrl
cmpb
test
jo
loop
push
sbb
movsl
and
cld
loope
es
cld
hlt
jae
popf
mov
ljmp
mov
xchg
mov
jae
inc
pop
dec
loopne
out
clc
fildll
xor
mov
fucomi
fdivr
mov
rcrl
mov
mov
stc
fsts
sub
and
test
pop
int3
ds
imul
pop
loopne
dec
data16
push
cmc
test
idivl
in
pop
sub
out
fs
sbb
ret
stos
outsb
rclb
pop
test
dec
mov
jmp
inc
sbb
sarb
rcll
push
jb
adc
and
sbb
testb
stc
adc
leave
stos
cli
mov
test
adc
add
adc
mov
std
rorl
mov
sbb
mov
rcrl
insl
push
ror
fldt
mov
lret
mov
stc
into
push
dec
sbb
hlt
pop
cmp
mov
lock
pop
popa
sarl
mov
adc
adc
jns
lock
mov
pop
jb
leave
test
cmpps
mov
xor
inc
adc
outsl
adcl
push
mov
cltd
and
lcall
mov
cld
inc
push
xlat
imul
or
jnp
es
mov
lds
outsl
cli
mov
dec
mov
xchg
xor
jbe
inc
push
mov
out
cmp
lods
call
adc
jne,pt
sbb
mov
int
mov
enter
ret
pop
cmpsl
xor
aad
mov
popf
pop
pop
lahf
inc
jge
add
mov
enter
and
xchg
add
clc
or
dec
flds
stos
pop
push
or
xor
inc
mov
or
dec
shlb
or
imul
out
jle
push
inc
sub
inc
pop
lret
cmpsb
aam
sbb
std
loope
sbb
enter
iret
in
and
cmc
cmp
add
xchg
in
push
and
jno
xchg
scas
push
jle
jb
jecxz
mov
and
out
xchg
outsl
inc
dec
cmpxchg
jnp
nop
out
fldenv
stos
xchg
aas
mov
mov
xor
pop
pop
cli
cmp
fs
or
cmp
cwtl
fistpl
aaa
xchg
ja
dec
pop
aam
pop
jg
lods
repnz
jno
cmc
jg
pop
xor
cld
fisubl
push
and
sbb
outsl
mov
xor
mov
lds
bound
addl
xor
mov
push
insl
clc
xchg
sahf
loope
cmp
sbb
sti
mov
push
sbb
xor
into
daa
adc
call
cmp
sub
stos
pop
mov
loop
js
out
inc
dec
sarb
push
cmc
xchg
pop
mov
pop
jb
sbbl
ljmp
adc
sub
cmp
test
xor
arpl
imul
pop
stos
inc
and
xor
mov
mov
out
mov
cmp
sub
xchg
pop
push
test
add
add
sahf
je
cmc
inc
sarl
mul
or
aad
xchg
mov
sub
andb
xchg
insl
mov
mov
pop
call
xchg
push
or
sub
mov
fisubrs
mov
outsb
inc
inc
adc
popa
mov
fbstp
cmc
imul
sub
xor
or
mov
cmp
repnz
jge
sub
sbb
fmull
scas
push
jp
test
movsl
cli
inc
jmp
dec
movsl
adc
or
das
frstor
jbe
repnz
fistpll
cmpsb
add
lods
inc
mov
dec
mov
or
std
daa
mov
mov
ret
mov
fisttps
pop
or
push
nop
imul
mov
stc
cmp
fisubrl
cwtl
dec
mov
ret
repnz
mov
pushf
push
ss
aaa
into
inc
inc
imul
cmp
or
pop
in
xchg
pop
lock
push
mov
icebp
mov
jne
stc
out
mov
sbbb
clc
sbb
arpl
xchg
mov
jae
rclb
mov
pop
or
xchg
scas
inc
push
mov
mov
cmp
mov
in
fdivl
sbbb
xchg
add
inc
rcrl
inc
test
rcrb
pop
pop
cmc
mov
aas
scas
xor
mov
jb
lods
mov
dec
std
jbe
push
sbb
jl
test
push
scas
push
shll
push
cltd
mov
jp
pop
notb
lret
fdivl
xor
movl
add
add
cmp
adc
aas
dec
jmp
push
jmp
mov
das
mov
rolw
and
rolb
jp
xlat
fidivl
or
and
push
adc
or
xchg
popa
sbb
and
jecxz
inc
ret
jnp
sbb
pop
fwait
cmp
pop
lods
inc
leave
pushf
pop
lea
mov
es
push
pop
dec
cmp
js
pop
ds
sbb
out
or
mov
jo
sbb
push
lock
push
out
gs
cmp
mov
cmp
jnp
ficomps
cmp
push
lret
adc
inc
and
add
push
mov
imul
sbb
or
fistl
xchg
adc
jb
daa
movsb
xchg
mov
dec
mov
ja
pop
jbe
movsl
xchg
xor
push
ja
push
aaa
sub
sbb
sbb
mov
pmullw
or
push
fwait
xchg
lret
xor
lea
xchg
inc
cli
inc
cmp
gs
mov
negl
xchg
mov
loope
push
outsl
dec
fstpt
jle
mov
fnsave
dec
sub
stos
out
ret
into
gs
mov
xchg
pop
jne
lea
loop
or
dec
loop
ljmp
aaa
outsb
arpl
xchg
inc
je
gs
mov
fmuls
pcmpgtd
adc
imul
ds
mov
sahf
jns
daa
into
mov
in
mov
lcall
inc
xlat
jbe
xor
fldt
loope
addr16
fisubrl
gs
sub
jecxz
ja
sub
push
popf
gs
mov
xchg
outsl
into
mov
add
arpl
xchg
loopne
push
push
mov
push
adc
pushf
in
mov
mov
scas
xlat
icebp
sarb
cmc
nop
jp
mov
into
fwait
pop
mov
test
sahf
arpl
cs
lahf
in
push
xchg
sub
adc
leave
push
mov
dec
push
sbb
pusha
pusha
ss
fiaddl
sbb
neg
jo
or
push
mov
jp
pop
in
jp
xchg
mov
mov
rorl
leave
xor
and
mov
subl
outsl
loop
inc
out
aad
push
sub
mov
push
popa
repnz
adc
test
js
mov
pop
div
lcall
in
cld
iret
xchg
mov
xor
mov
inc
sarb
push
push
jecxz
int3
daa
lret
shlb
lds
repz
fwait
aaa
mov
mov
icebp
mov
adc
sub
jb
insb
movsb
outsb
jae
jnp
jbe
push
xor
xchg
add
movsl
and
mov
jnp
adc
lret
mov
xchg
jg
jns
std
mov
sbb
pop
fidivrl
mov
enter
inc
fisubrl
in
lods
or
cmpsl
push
fsubl
outsb
hlt
mov
ficomps
and
dec
sbb
dec
xchg
in
or
cmp
lret
push
rclb
or
jmp
push
ror
fmull
loopne
js
inc
fistpl
mov
aam
ret
mov
scas
out
and
cmc
jns
push
lods
ja
pop
stc
push
aam
int
inc
jg
js
das
or
jbe
push
mov
push
fisubs
xchg
inc
fiaddl
rorl
loopne
out
xchg
add
add
ds
call
movnti
and
sbbl
jl
lret
hlt
lds
jecxz
adc
insl
daa
push
mov
pop
daa
ja
mov
aaa
or
mov
jle
out
and
adc
inc
inc
or
jnp
jg
mov
mov
adc
in
cmp
and
inc
fisubrl
sub
sbb
das
std
inc
pop
jge
mov
inc
fisttpl
stos
cmp
push
cmp
fisttpll
data16
lret
xchg
xchg
jnp
push
push
testb
adc
icebp
das
icebp
adc
jno
or
mov
insb
pop
jle
lds
fisubrs
pop
xor
sti
sbb
xchg
lds
mov
mov
sbb
stos
jp
data16
jbe
test
fimuls
es
pop
inc
mov
ds
movsl
and
pop
xor
je
fisubs
sbbl
cmp
push
sub
add
hlt
push
mov
mov
xor
ja
adc
repz
imul
mov
loope
cmp
pop
or
je
ja
out
sbb
pop
cmp
or
insb
cmc
and
jp
sbb
addr16
call
jb
fxch
push
sbb
in
mov
pop
ret
xor
sbb
jnp
or
sbb
xor
popf
or
pop
dec
dec
sbb
push
mov
ljmp
mov
clc
out
dec
cmpsb
mov
mov
xor
xor
addl
xchg
in
sub
js
sub
push
hlt
cmpsl
stos
or
nop
mov
push
in
loope
and
jae
pop
pop
and
xchg
mov
test
shll
inc
pop
popf
dec
mov
xchg
mov
adc
mov
adc
or
adc
sahf
les
cltd
cmp
movsb
in
xchg
cmp
and
pushf
and
mov
lds
mov
sti
test
fiadds
fildl
es
mov
and
je
jg
xchg
cmp
fists
sti
adc
test
stos
insb
and
outsb
enter
pop
sub
arpl
arpl
pop
dec
divb
ds
mov
cld
pushf
outsl
stos
das
popf
add
shll
daa
or
lock
mov
mov
and
cld
or
jmp
dec
daa
cmc
adc
sahf
dec
sub
repz
xchg
sub
aam
or
jns
mov
pop
pop
xchg
shrb
rcrb
sbb
add
es
push
pop
jne
test
adc
xor
mov
add
pop
dec
inc
sbb
xchg
aas
jg
loope
inc
notl
mov
rcll
mov
imul
inc
xlat
push
rcrb
cmp
rorb
push
mov
mov
aas
pop
sahf
out
into
sbb
faddl
xchg
les
cmc
pushl
movsb
loop
lret
mov
movsl
outsb
dec
orb
pushl
sti
cmpsl
xor
dec
jmp
pop
lds
cmpsb
cltd
ret
pop
fcompl
push
jle
sub
in
lret
adc
jae
ss
out
mov
jo
push
sub
sub
sar
cmp
outsb
jge
dec
fs
scas
mov
xlat
je
lahf
mov
cmpsl
bound
fistps
inc
lret
adc
mov
aam
jne
movsb
stos
jbe
xchg
addl
dec
xchg
sub
hlt
pop
mov
add
ds
add
mov
mov
nop
out
xchg
cmc
push
jmp
into
sub
cwtl
xchg
push
mov
fisttpll
ljmp
jno
xchg
xlat
jmp
es
and
mov
faddp
out
mov
jmp
lcall
sbb
push
pop
stc
nop
push
push
cmp
mov
scas
fcmovb
mov
cli
cmpb
sbb
adcb
popf
fildll
or
jmp
jmp
adc
gs
add
fcmovbe
int3
dec
out
xchg
sub
dec
fbstp
arpl
clc
into
xchg
fisubl
fistpl
lret
sub
inc
fldcw
or
adc
rclb
and
and
dec
sbb
call
lods
in
bound
into
jnp
testb
call
in
jns
xchg
int3
jbe
sbb
pop
xor
lcall
and
push
in
mov
jecxz
mov
or
inc
pop
leave
inc
js
jbe
test
ret
jl
mov
dec
push
adc
dec
enter
rcl
andb
stc
mov
icebp
ds
push
jne
shll
jns
jo
or
sarl
mov
les
mov
jp
repnz
cli
pop
or
cmpsb
jno
pop
or
fsub
cmp
sahf
clc
sbb
into
movsb
movb
sbb
dec
push
inc
mov
rcl
mov
mov
cmpsb
imul
mov
mov
mov
xor
hlt
push
insl
aas
mov
imul
call
mov
xchg
mov
jg
fldenv
stos
test
sub
aaa
lcall
dec
not
push
in
movb
aad
sarb
push
popa
mov
aad
pop
mulb
add
inc
lahf
mov
std
pop
pop
and
inc
push
pop
sbbl
in
lahf
sbbb
sub
jl
test
add
test
lahf
in
jnp
xor
add
arpl
lds
push
inc
sbb
pop
and
je
xor
scas
dec
pop
rorb
lock
mov
shrb
add
mov
lret
adc
movmskps
and
test
xor
dec
jns
sbb
mov
sti
lret
std
xchg
mov
jnp
inc
out
xchg
dec
int3
add
xchg
xchg
ret
pushf
ja
dec
or
adc
sub
es
pop
data16
dec
stos
fnstsw
in
jae
repz
dec
and
sbb
test
aad
and
test
adc
xorl
mov
fwait
insb
mov
sbb
sbb
and
inc
cli
enter
jg
jno
sbb
dec
xchg
pop
jecxz
lahf
clc
aas
mov
push
mov
mov
cmpsl
sbb
stc
iret
and
mov
pop
or
sub
dec
jns
ljmp
adc
fidivl
icebp
movsl
inc
sub
inc
aad
adc
repnz
xor
es
mov
loope
int
dec
mov
push
out
inc
or
in
jns
fsubl
mov
mov
rcll
adc
mov
mov
fnstsw
sbb
into
pop
pop
sub
gs
xchg
add
in
mov
fnstcw
or
testb
inc
or
stc
sub
repz
sbb
push
lds
rolb
and
mov
adc
dec
xlat
enter
push
popf
sbb
lret
jl
inc
mov
stos
push
test
sbb
scas
dec
test
inc
es
loop
clc
pop
das
push
es
add
inc
fnstcw
sbb
das
inc
dec
aas
xor
jo
cmp
push
pop
mov
fisttpl
in
pop
lret
testl
mov
cmp
push
push
out
out
loop
and
stc
adc
adc
mov
mov
test
mov
sub
adc
inc
std
mov
das
cmp
int
call
lds
xchg
aas
dec
mov
movsb
sbb
mov
aam
adc
xor
sub
dec
loop
inc
dec
sti
dec
imul
mov
inc
push
fmul
dec
pusha
sub
mov
mov
pop
out
cmpb
cmpsl
movsb
sub
xchg
test
inc
mov
xor
test
arpl
add
and
les
arpl
cli
insb
lret
pop
jmp
flds
add
ret
mov
outsl
scas
push
push
jl
iret
not
icebp
stos
mov
mov
mov
push
add
leave
pusha
enter
les
jle
out
cmpsb
pop
pop
push
rorl
mov
adc
sahf
xchg
hlt
add
pop
popf
add
daa
and
sub
test
lret
std
idivl
scas
int
out
gs
inc
add
stos
test
call
test
dec
or
ss
cwtl
sbb
jo
sub
pop
in
and
push
aas
jno
pop
or
sarl
xchg
das
imul
jg
sbb
mov
push
mov
ret
push
mov
lret
push
jnp
in
stos
adc
or
mov
and
jo
lods
lds
xchg
mov
pop
loop
lret
ds
jo
jb
dec
push
xchg
repnz
add
js
push
sub
repz
repz
shrl
push
stos
dec
xchg
enter
mov
out
sbbl
outsb
push
jno
mov
scas
inc
imul
adc
xor
xchg
rorb
icebp
icebp
repz
test
test
lret
leave
rclb
pop
jg
outsl
mov
icebp
dec
xchg
push
imul
mov
mov
popf
xor
mov
gs
decl
outsl
mov
xchg
ds
bnd
pop
adc
nop
cmpsl
lret
bound
inc
mov
jmp
pop
adc
pop
mov
pop
pop
or
xchg
cmp
sahf
inc
push
out
fmull
mov
add
rcrb
ss
loope
xchg
hlt
cmp
in
lret
pop
subb
and
inc
inc
sbb
mov
lods
sbb
mov
stc
insb
sub
ljmp
mov
push
cmp
mov
mov
movsl
push
lods
aad
sbb
mov
xlat
pop
inc
scas
test
sbb
dec
fdivrp
nop
mov
sbb
adc
pop
ja
sbb
pop
lods
movlps
cmp
lahf
cwtl
lret
cld
movsb
xchg
sub
insb
pop
pop
into
stos
aaa
clc
cmp
mov
int3
jg
adc
scas
inc
pop
movb
push
icebp
insb
idivb
add
leave
jno
cli
movsl
sbb
sbb
sub
rcr
jb
dec
imul
cmpsb
ret
dec
pop
loop
sbb
jnp
push
cmp
lea
sbb
jbe
inc
and
addr16
cld
inc
loopne
mov
pusha
test
jmp
inc
inc
mov
lretw
test
scas
mov
into
pop
dec
pop
sahf
jle
and
test
dec
dec
stos
fwait
jo
insl
mov
add
mov
xor
xor
adc
or
inc
push
push
js
xchg
mov
movsb
cmp
ret
sti
and
xchg
mov
in
xlat
sub
cmc
jmp
adc
dec
add
popf
xor
cltd
mov
int
push
inc
out
cmpsb
xchg
lret
out
in
imul
sbb
ljmp
pushf
scas
jge
inc
cld
inc
mov
daa
lcall
dec
test
jmp
bound
divl
cmp
andl
jae
pop
push
mov
push
xchg
popf
in
sarb
dec
enter
xor
lds
push
fs
repz
aas
orl
pop
pop
in
test
or
or
stos
jecxz
jmp
pop
stos
icebp
mov
sub
sbb
mov
pop
cmp
sub
js
inc
stos
subl
aas
inc
aas
jno
dec
inc
cmp
dec
loope
out
ret
ror
and
and
pop
jg
addr16
mov
jmp
setb
or
std
lea
mov
jg
mov
notb
mov
and
mov
push
mov
leave
pusha
or
cltd
lods
jmp
jb
push
loopne
sbb
notb
pop
or
mov
ja
arpl
popa
xchg
add
addr16
ret
fadds
lea
push
add
pop
jecxz
lea
movsl
sbb
idiv
icebp
and
and
popf
icebp
and
outsb
inc
jl
mov
imulb
lods
dec
cmp
ds
icebp
mov
inc
adc
cmp
or
lea
ljmp
jae
test
out
enter
xchg
insl
push
pop
or
or
shlb
sub
push
das
ja
mov
dec
mov
cs
jmp
mov
and
cmp
lock
stos
mov
add
jbe
movsb
xor
or
cmc
push
jl
push
testl
aad
adc
pop
out
or
add
addr16
iret
mov
pop
stc
stos
xchg
sub
and
sub
stos
aas
inc
popa
js
pop
mov
mov
in
and
mov
adc
cwtl
add
in
add
mov
inc
xchg
sarb
sbb
sub
shl
mov
call
loope
push
pop
loope
into
gs
jecxz
push
out
pusha
sbb
mov
xor
les
dec
mov
imul
rcl
into
push
xchg
sub
and
andb
or
roll
mov
add
push
add
pushf
das
loope
popa
movsb
sbbl
insl
xchg
mov
mov
ret
scas
jg
xchg
imul
pop
jnp
xchg
mov
or
pusha
mov
insb
cmp
popl
addr16
push
ret
mov
mov
fs
jae
movsb
add
jbe
mov
sub
popf
rol
pop
imul
adc
out
sbb
enter
pop
xor
out
into
jo
pop
out
outsb
push
icebp
fwait
and
lret
jns
bound
inc
ja
jecxz
ss
push
cmc
mov
push
sub
adc
xchg
add
hlt
test
mov
popa
adc
pop
inc
loope
sti
dec
movsl
jbe
sbb
xchg
dec
adc
ja
in
dec
mov
dec
mov
in
pop
psubd
adc
dec
jle
shr
mov
push
lcall
mov
and
mov
xor
jge
add
outsl
adcb
sbb
pop
jnp
dec
data16
cmp
mov
xchg
cld
xchg
dec
xchg
push
cwtl
in
xor
lret
movsb
jnp
lea
sub
leave
mov
add
jmp
leave
inc
add
in
out
or
and
loopne
or
mov
jecxz
aad
sub
jnp
sbb
pop
cmpsb
jbe
mov
sar
xchg
sub
std
ds
jo
outsl
push
jp
adc
xor
lods
jp
fcomps
or
in
push
mov
stos
mov
and
out
es
or
sahf
stc
xchg
and
fisttpll
aad
or
rolb
xchg
or
popl
dec
fistpll
sbb
add
mov
jb
sahf
sub
and
inc
daa
out
hlt
and
sbb
bound
inc
jb
jp
cmc
sbb
jbe
rorl
mov
sbb
xchg
das
mov
and
es
in
std
sbb
dec
les
loop
mov
sub
xor
inc
push
push
jns
in
test
jecxz
test
sub
test
js
xchg
add
popf
sbb
adc
xor
lea
xchg
adc
xchg
int3
icebp
fwait
mov
sbb
add
pop
inc
stc
nop
xchg
test
aam
repz
pop
or
push
xchg
xchg
pusha
xchg
pop
pop
repnz
into
adc
mov
sbb
mov
add
pusha
in
xchg
mov
cld
pavgw
mov
cli
sti
pop
add
je
testl
test
push
adcl
nop
pop
movsb
xchg
and
test
cmp
filds
pop
divl
loope
xchg
sub
cmp
jbe
call
adc
dec
loop
sbb
test
xchg
outsl
stos
in
ret
lods
push
shlb
sbb
mov
out
push
lods
fsubrp
pop
test
in
scas
out
add
arpl
mov
sbb
jg
cs
push
push
aas
jb
cmp
mov
fmuls
cmpsb
inc
add
loopne
out
sbb
divl
icebp
popa
out
sub
int
out
lcall
add
popa
or
sbb
negl
inc
cld
xorb
mov
push
popf
dec
lods
fldenv
outsl
and
orb
std
mov
push
loop
push
popf
dec
jecxz
jo
ljmp
or
pushf
pop
sub
stos
push
ret
movsb
inc
loope
sbb
mov
or
dec
mov
test
outsl
call
or
scas
inc
out
ret
push
and
dec
pop
dec
cmp
jg
sbb
call
mov
jg
fs
cmpsb
mov
sub
push
dec
cld
dec
and
jb
pop
pop
cmp
fbld
cltd
adc
dec
push
xor
jbe
into
cli
xchg
and
loope
push
sbb
ret
sbb
sub
add
mov
mov
les
ret
loopne
mov
pop
cmp
loop
mov
mov
mov
pop
adc
lret
cwtl
test
pop
mov
bound
paddq
test
xor
jne
inc
int
mov
ret
hlt
pop
or
xor
adc
xor
pop
adc
inc
adc
jb
or
lcall
leave
mov
jno
sbb
js
pop
cmp
daa
lock
mov
jno
int
push
mov
mov
push
roll
jae
lock
inc
mov
inc
mov
stos
cmp
shr
test
test
fdivrl
or
xor
xor
cwtl
aam
insl
test
mov
lock
lea
lahf
div
mov
mov
mov
xchg
pop
mov
jecxz
negb
and
lcall
in
inc
lds
mov
cli
and
out
xorb
orl
movsb
push
ficompl
je
jb
out
sub
xchg
fidivrl
dec
jmp
test
mov
mov
inc
jb
mov
and
xchg
sti
jle
adc
cmc
push
sub
pop
imulb
add
ds
sbbb
pop
inc
fiaddl
popf
js
movsb
jo
sbb
jecxz
cmp
or
jmp
pop
pop
out
add
fbstp
and
popf
jo
pop
call
ss
out
add
out
jae
pop
dec
add
add
push
sub
bound
fdiv
xchg
push
jecxz
adc
mov
or
xlat
mov
inc
cmp
sub
rcrl
cmpsl
xor
mov
subl
push
arpl
lahf
or
xor
sub
mov
adc
mov
sbb
test
jbe
add
mov
aad
mov
dec
and
std
lahf
sub
xchg
inc
push
jnp
or
les
sbb
mov
fnstcw
rorb
repnz
dec
push
aas
pushf
insl
push
jmp
fsts
xlat
mov
jecxz
mov
int
pop
call
xchg
imul
mov
mov
push
push
insb
xchg
xchg
arpl
lock
aaa
mov
or
dec
pop
cmc
xor
ret
xor
push
or
xlat
mov
push
mov
ljmp
rcrl
pop
adc
pop
push
in
iret
ret
jge
mov
std
adc
inc
mov
cmp
mov
inc
dec
and
jb
negb
sub
jns
xchg
loop
aam
cs
xor
mov
push
adc
adc
cmp
arpl
mov
push
pop
daa
pop
je
push
xchg
sub
push
stos
mov
cmp
in
rcl
or
bound
imul
mov
mov
fidivrs
shl
das
pop
inc
adc
fstps
xchg
xchg
xlat
mov
cltd
xor
push
in
xlat
push
or
into
xlat
repz
cmp
out
fsubr
jp
sbb
popa
pop
jne
adc
mov
push
or
loop
stos
fs
fldt
jnp
mov
xchg
cs
shll
movsb
gs
and
inc
inc
mov
cmpsl
out
xor
lret
imul
repnz
lea
pushf
push
ss
data16
sub
mov
push
test
shl
or
scas
pop
pop
dec
and
mov
and
adc
dec
xchg
fadds
pop
mov
stc
icebp
je
dec
frstor
iret
lods
jo
jb
aam
call
fucomip
push
rorl
ret
rcll
jmp
mov
jo
or
arpl
jecxz
mov
lea
mov
ret
jno
dec
mov
sbb
insl
movsl
fnsaves
inc
pxor
sbb
je
xchg
data16
push
mov
pop
push
sti
jo
lock
xor
push
adc
sbb
mov
bound
cmpsb
xchg
lret
pop
inc
add
int
ret
pop
sub
xorb
lret
jb
mov
mov
mov
enter
xchg
rcrl
add
idivl
pop
jae
sbb
mov
negl
mov
enter
in
pop
push
negb
cmc
adc
lahf
mov
pop
cli
into
scas
fldl2t
movsb
shll
aas
pop
out
aas
xchg
cltd
mov
hlt
cmp
xchg
sub
jecxz
jmp
mov
xor
mov
fimuls
nop
loopne
cmp
push
repz
and
popa
aam
mov
loop
pop
hlt
and
shl
ljmp
fistpl
mov
shr
insb
add
in
shrl
cwtl
adc
addr16
int
ret
out
lretw
push
mov
xchg
push
call
subl
cmp
jg
push
add
inc
mov
sub
popa
cmp
int3
lret
cmp
icebp
xor
sub
mov
cmp
mov
out
cmp
jg
xor
xchg
gs
add
leave
dec
sbb
sbb
repnz
and
in
nop
repnz
imul
mov
dec
fisubs
xlat
adc
scas
cmp
inc
adc
insl
aaa
inc
jo
cli
add
mov
fnstenv
inc
lods
clc
mov
pushf
add
movsl
mov
gs
and
lahf
enter
lret
mov
push
xchg
popa
mov
outsl
xlat
addr16
mov
test
mov
sub
push
inc
nop
repnz
and
mov
sub
jno
jns
mov
clc
mov
xor
repnz
push
leave
xor
sbb
cltd
mov
stos
incl
cld
push
push
xchg
cmpsl
push
jbe
inc
loope
push
pmuludq
fisubrl
fcoms
mov
mov
lods
and
mov
fimull
outsb
xlat
mov
sub
push
pop
dec
iret
and
mov
sub
mov
jo
sbb
lds
clc
or
int
jecxz
jmp
iret
adc
cmpsl
inc
stc
and
movsl
insl
adc
xchg
cmpsl
dec
and
cli
test
pop
into
jle
or
adc
arpl
cmc
mov
popa
jmp
int
and
iret
pop
popf
lods
fwait
sbb
ljmp
inc
adc
jp
pusha
inc
pushl
jp
cltd
mov
cmpsl
cli
lods
push
jo
xchg
inc
loope
mov
fbstp
lds
sahf
adc
adc
les
lods
mov
in
mov
mov
in
cld
xchg
mov
lea
sbb
sub
movsl
push
inc
dec
inc
shrb
inc
mov
fcompl
test
xor
xchg
adc
xchg
aad
pop
imul
push
mov
cmp
mov
add
sbb
ficomps
aas
cltd
push
dec
xor
movsb
scas
ljmp
jmp
add
outsb
pop
rep
sarb
andl
jnp
subb
jg
and
add
test
xchg
mov
popf
push
mov
and
sub
pusha
loope
add
sbb
jmp
iret
cmp
test
movsl
push
insb
fsubl
adc
das
inc
mov
js
cmpsl
jp
sbb
ds
ss
or
pop
cld
pop
push
add
and
fdiv
mov
mov
adc
or
xor
mov
sbb
xor
push
ljmp
jecxz
mov
aad
sub
jle
test
push
mov
jae
sbb
cs
dec
adc
js
call
mov
mov
sbb
xchg
sub
sbb
ds
jo
mov
jnp
dec
mul
add
push
and
cwtl
xor
pop
rcrb
out
test
jp
jge
fwait
repz
lea
dec
add
sub
mov
push
jg
lcall
mov
test
rcrb
scas
push
jno
shl
jmp
out
popa
push
pop
int
or
jmp
lcall
xchg
hlt
mov
or
sbb
aad
cmp
in
pop
sub
scas
aad
popf
xor
divb
add
push
repnz
std
mov
lret
jp
sbb
pop
stc
lret
xor
sbb
dec
pusha
mov
mov
mov
jp
pop
inc
jle
push
out
addb
sub
ret
ret
in
mov
out
test
rcr
pop
push
mov
out
sub
cmp
in
mov
gs
int
mov
in
ljmp
outsb
jle
int
stos
and
dec
pop
dec
in
cmp
mov
loopne
dec
adc
scas
push
scas
inc
lea
shlb
or
add
add
jb
test
nop
mov
ficompl
movsl
stos
push
jnp
movsb
scas
push
or
cwtl
cmc
push
sbb
inc
popf
je
jns
and
imul
mov
scas
fistl
xchg
imul
mov
sbb
ds
aad
push
das
roll
push
add
push
ss
push
into
sub
andb
mov
or
fucomi
aam
dec
enter
fs
inc
jb
ja
jmp
push
ljmp
ss
rorb
jo
cmpsl
sub
aam
inc
mov
jnp
fbstp
lods
cmp
cs
out
rclb
add
insl
jge
inc
mov
dec
adc
aaa
shll
and
je
nop
dec
add
or
fadds
mov
mov
nop
pmaxub
int
add
add
xor
sbb
das
sahf
cmp
mov
lcall
cwtl
imul
mov
jl
aas
xchg
fidivs
pop
jb
daa
ss
or
ljmp
test
jle
je
out
sahf
clc
xlat
clc
outsb
lods
stc
fldcw
je
scas
push
sbb
mov
pop
cmp
hlt
mov
sbb
pop
nop
pfmax
mov
and
xorb
jl
mov
cltd
daa
xchg
mov
mov
jg
int
nop
pusha
xchg
pop
cltd
dec
push
test
into
gs
int3
push
inc
lock
pop
xor
sub
mov
lret
sub
jl
pop
dec
popa
dec
fildl
lcall
cwtl
push
pop
cmp
inc
sub
adc
or
data16
scas
cmp
mov
pop
jl
int
jne
pop
or
sti
cltd
pop
mov
das
loopne
clc
xchg
inc
xchg
mov
mov
enter
push
test
les
adc
cmp
lret
loop
and
dec
cltd
adc
aad
mov
jne
xor
je
adc
sbb
mov
movsl
aad
push
add
ds
jg
mov
les
adc
dec
mov
mov
add
add
xchg
pusha
sub
mov
pop
std
scas
push
outsb
shlb
inc
popf
js
mov
mov
pop
mov
xchg
fucomp
push
push
lock
outsl
dec
out
pop
mov
add
jo
mov
fcoml
popa
dec
mov
push
into
sub
ror
pop
add
repnz
sub
xlat
dec
flds
mov
or
outsb
shrl
js
pop
pushl
adc
scas
pop
ja
cmp
clc
sub
cmc
mov
cmp
ljmp
addr16
in
push
xchg
cmp
pop
je
jl
rorb
ret
icebp
es
clc
ror
inc
inc
mov
arpl
sbb
fs
xor
sbb
repnz
cmp
cmc
xchg
and
add
pusha
add
adc
jo
arpl
inc
mov
lods
test
or
sbb
and
sbb
jmp
sbb
test
lret
mov
repnz
xchg
in
push
stos
sbb
xchg
mov
jnp
cmp
repz
rcl
cltd
push
test
mov
adc
iret
and
xor
int
xlat
dec
push
jbe
pop
lock
faddl
movsb
imul
aad
rdpmc
push
mov
pop
insb
mov
shrl
mov
iret
jle
inc
mov
pop
mov
pop
out
sub
aas
bound
cmp
xor
push
lcall
push
jg
pop
orb
aad
cmp
push
jp
pop
lods
jb
sub
jns
xor
scas
fbstp
dec
mov
mov
lds
insb
lds
sti
mov
sub
dec
sbb
mov
pop
pushf
arpl
out
shll
mov
stc
cmp
mov
dec
shl
nop
jle
or
jp
or
js
xor
xchg
mov
loope
notl
jbe
jmp
add
ss
pusha
mov
adc
inc
nop
cmp
lods
lea
out
pop
jno
adc
adc
jno
sbb
and
adc
jb
fidivrl
add
pushf
fimull
imul
fmuls
inc
xlat
sub
aad
into
cltd
pop
cmp
add
outsl
jo
dec
sub
mov
imul
xchg
push
cmp
dec
outsb
stos
push
lods
dec
lods
sti
fisubrs
fsub
push
xor
clc
repz
loope
or
jno
jg
inc
and
dec
lcall
ret
dec
cmp
aam
mov
out
int3
and
push
push
jge
mov
add
mov
dec
loopne
sarb
scas
fisubl
popf
dec
add
jno
add
and
xchg
add
aad
xchg
xor
cli
push
out
sub
xor
inc
jne
jmp
push
shrl
jg
out
dec
lahf
loop
ret
cmp
cmc
xchg
mov
add
idiv
aas
cmp
cli
jno
xchg
sub
sahf
add
stos
aam
ret
sarl
cmp
and
fwait
mov
jnp
jl
inc
cmpsb
mov
fiadds
pop
adc
cmp
ret
mov
and
loope
sbb
cmp
push
push
push
lods
jnp
pop
mov
jg
scas
cmpsb
out
insl
pusha
lret
mov
inc
xchg
pop
shlb
add
inc
insl
icebp
xchg
cltd
pop
setns
sub
cld
cltd
ret
into
lods
in
jle
in
pop
or
imul
sbb
dec
sub
aad
push
mov
pop
jge
mov
leave
ud1
xor
jbe
or
ja
stc
and
mov
or
mov
clc
pop
jmp
loopne
add
pop
pop
fists
aas
xchg
adc
cmc
adc
or
setb
push
out
fisubl
jecxz
repz
call
mov
arpl
mov
hlt
or
pop
xor
pop
cmpsl
faddp
int
imul
loop
xchg
inc
jecxz
add
sub
sub
insb
lcall
fsts
mov
cmp
push
test
cmp
jecxz
enter
mov
jl
cmpsl
aas
pop
inc
mov
fildll
or
push
addl
adc
mov
adc
sub
inc
popa
sti
push
sbb
cld
xchg
popf
or
dec
shlb
stos
gs
ljmp
jae
leave
inc
in
stos
cmc
lcall
and
aaa
sahf
sub
scas
and
push
cmpsl
fdiv
and
push
aas
push
add
cmp
test
fsubrs
fidivl
lahf
or
rorl
out
add
cltd
lods
jmp
sbb
mov
movsl
xchg
inc
xchg
dec
add
cwtl
jns
aam
fcomps
adc
shr
fs
decl
push
or
testl
pusha
idivl
sub
and
and
into
pop
repnz
jbe
clc
jmp
xlat
mov
jb
adc
fnstcw
mov
daa
orl
jne
popa
add
and
mov
push
in
push
in
xor
imul
push
jae
fsub
jp
xchg
hlt
aam
and
inc
mov
ljmp
aas
mov
data16
mov
repz
rcrb
jo
jmp
jnp
inc
and
jns
sbb
pop
adc
sahf
in
and
dec
xchg
daa
jno
popa
xchg
cmpps
popa
clc
cmp
or
daa
call
fdivrp
add
pop
push
test
insl
cmp
lahf
jbe
nop
test
jle
sbb
and
in
push
jl
jmp
pusha
jmp
mov
and
xchg
fbld
push
js
sub
nop
adc
push
sbb
adc
push
das
lds
test
out
shlb
cmp
sbb
ret
lods
fs
lgs
and
mov
xor
test
mov
jp
flds
mov
xchg
sub
jnp
test
movb
movsl
pop
sbb
mov
inc
aas
pop
rcl
mov
popa
push
cmp
call
jnp
push
shll
xor
pop
lds
in
ret
lret
jp
sti
stos
cmp
aam
bound
jp
mov
add
clc
lods
or
push
mov
sub
mov
rorl
cwtl
call
or
mov
aas
icebp
add
sarl
jmp
or
xchg
jne
jno
inc
enter
fisttpl
shr
inc
fucomip
out
xor
fldl
outsl
aam
sbb
outsb
mov
mov
jns
add
xor
test
mov
mov
pop
mov
sarl
shl
sbb
jbe
test
scas
push
out
mov
sahf
xor
inc
pop
mov
js,pt
pop
adc
test
scas
lods
outsl
xchg
mov
leave
and
jb
jmp
clc
cmp
pushf
or
jp
push
jl
dec
iret
sbbw
test
lret
or
mov
push
lods
sub
and
sub
cltd
das
dec
cmc
nop
cmpsb
dec
imul
add
shll
out
sub
aaa
inc
inc
mov
subl
sub
fwait
mov
sti
lcall
or
fdivrl
ja
inc
cltd
repz
xchg
sbb
lds
push
push
or
leave
cmp
xor
sbb
xor
inc
jns
fwait
rol
xor
mov
rcrl
add
dec
filds
xchg
pop
pop
icebp
inc
out
lahf
imull
js
jecxz
lret
add
push
in
and
mov
std
jecxz
ljmp
orb
scas
out
out
sbbl
shrb
mov
ljmp
std
adc
adc
call
cmp
call
push
jmp
push
cmp
cmpsl
cmpsl
cwtl
sbb
mov
movsl
or
js
pop
stos
jnp
jp
out
push
es
cld
push
xchg
into
sbb
mov
icebp
das
insl
inc
fdivrl
pop
lds
ds
jecxz
sbb
jmp
push
adc
dec
cmpsl
sbb
mov
clc
cmp
cmp
adcl
mov
rcrb
in
xor
lock
pushf
dec
mov
ja
loopne
lcall
fisttpl
xchg
test
js
xchg
fnstsw
gs
test
call
inc
jg
ret
pop
mov
jae
stos
cmp
fisubl
sahf
cmpsl
jp
fs
into
aaa
fisubl
out
mov
dec
jo
sbb
rorb
into
push
sub
into
fsubrs
loopne
xor
adc
mov
lahf
mov
sarl
roll
bound
movsl
dec
pop
sahf
sahf
repz
and
sti
pop
repnz
dec
dec
ret
or
xchg
test
xchg
sub
je
push
dec
cmp
jp
inc
push
fdivrp
ret
jl
fs
push
adc
stc
test
dec
loope
and
std
cmp
xchg
pop
add
out
xor
jmp
and
fisttpl
cmp
cmp
push
in
inc
fwait
and
cmp
inc
pop
jne
rcr
loop
xchg
cs
sub
xchg
outsb
adc
into
jne
shrl
xchg
xor
jmp
or
fldenv
cmpsl
hlt
mov
jne
iret
fstpt
xchg
jb
fwait
lea
mov
xchg
lods
outsb
leave
mov
fisttpl
push
lds
and
jge
push
pop
mov
loopne
add
shll
dec
jge
jle
test
movsl
ret
jnp
gs
mov
pop
test
lods
mov
adc
adc
xorb
jmp
jle
shrb
sbb
ds
mov
dec
repnz
outsl
unpcklps
rcrl
add
lret
lret
aaa
jno
insl
daa
fidivrs
lret
lcall
cmp
mov
rcll
jbe
sbbl
loopne
aad
add
jae
insl
add
popf
cmpps
mov
pop
mov
mov
or
dec
ja
out
xor
xchg
cmp
push
jmp
in
jo
cmp
insb
scas
ds
mov
fidivrs
mov
ljmp
daa
ss
push
negl
dec
test
ss
cmpsl
and
into
sub
inc
sub
add
addr16
mov
stos
inc
jmp
fistl
out
leave
iret
out
adc
sar
and
mov
xor
test
and
xor
das
leave
jle
push
mov
aas
aad
in
comiss
mov
jo
ljmp
or
dec
les
mov
iret
xor
rolb
push
in
test
mov
pop
dec
or
pop
and
mov
jl
inc
scas
cmp
jmp
jns
pop
out
mov
mov
adc
aas
push
out
sub
mov
or
imul
or
mov
sti
jge
xchg
stos
dec
addb
insb
push
repz
aam
int3
add
into
in
lock
in
stos
ret
mov
bound
dec
sbb
out
add
jns
xchg
cmpsl
addb
push
fwait
stc
push
xor
or
jl
push
cmpl
push
push
xchg
sub
inc
pop
pushf
xor
add
xchg
lds
pop
imul
mov
in
xlat
mov
and
dec
clc
mov
sub
inc
xchg
sub
pop
pop
mov
fs
push
ljmp
sbb
gs
xor
notl
fisttpl
pop
repnz
or
ljmp
test
popa
aad
xor
cmpsl
adc
hlt
mov
stos
jmp
pandn
fwait
xor
jb
mov
mov
sarl
aad
lea
cmp
bound
ror
xchg
inc
push
dec
cltd
pop
mov
sub
call
stos
sub
or
enter
sahf
inc
xchg
adc
cmc
and
mov
sbb
cmp
lea
mov
ret
stos
inc
hlt
and
enter
dec
inc
imul
aam
clc
in
xor
xchg
sub
jle
cmp
fnstenv
mov
inc
aas
mov
jne
sbb
lea
cwtl
fimull
sbb
jne
fistpll
popl
loop
cmp
and
dec
cmp
iret
sbbb
jg
pop
and
dec
in
ret
lea
ljmp
inc
fdivrs
jnp
fucomp
pop
cltd
decl
and
adc
imul
int3
lahf
nop
dec
vrcpps
lds
mov
mov
test
cmp
shr
aaa
shll
gs
ror
xor
or
add
mov
out
inc
cltd
push
cmp
jns
lds
test
into
mov
scas
jno
js
notb
sbb
inc
mov
jmp
js
int3
push
jecxz
andl
push
scas
push
inc
data16
scas
jmp
and
mov
cmpl
xor
sbb
dec
mov
shlb
jo
dec
mov
dec
shrb
inc
aaa
sbb
mov
push
lahf
in
cmc
xchg
flds
int3
push
add
xchg
sub
stc
shr
sub
adcl
xchg
mov
loope
mov
jmp
scas
pop
pusha
test
leave
std
mov
jnp
je
xchg
pushf
dec
dec
xchg
test
sub
xor
arpl
mov
jb
push
in
out
xchg
testl
or
mov
sbb
cli
or
sbb
inc
js
jb
movl
insl
inc
jne
sti
fisubs
clc
mov
dec
jae
mov
test
xchg
pusha
int3
sbb
dec
cmc
pop
cs
enter
aad
fwait
enter
push
inc
cmp
inc
jae
ds
sub
cli
pushf
je
ss
inc
push
jmp
dec
popa
enter
add
das
insl
int3
and
cmp
mov
xor
mov
ss
test
sbb
jecxz
insl
jae
jmp
jle
lret
scas
mov
jmp
cs
jo
add
jbe
lahf
sbb
leave
push
push
sbb
aam
aas
sbb
shrl
js
dec
mov
stos
mov
aaa
mov
ret
cmc
aam
fnsave
pop
sbb
in
fadds
loope
subl
push
sub
inc
dec
ret
dec
lea
imul
repz
pop
xchg
sub
pop
loop
out
xchg
adc
adc
or
mov
cli
xchg
nop
jge
fwait
insl
jo
cmpsl
les
jmp
and
loop
or
arpl
daa
sub
xchg
lret
inc
sub
push
push
pop
rcrl
xlat
rolb
in
ds
jo
lcall
jns
fwait
mov
push
leave
mov
ret
sbb
test
pop
jge
mov
jp
cmp
jne
lea
xor
aas
data16
arpl
sbb
movsb
out
jnp
xor
mov
rcrl
stos
jbe
aam
lret
in
inc
cld
adc
fldenv
xor
rclb
lds
push
jnp
mov
js
gs
inc
cmp
jle
push
pusha
lret
jbe,pn
pop
xor
jmp
test
out
mov
and
mov
jne
and
cli
out
sahf
arpl
repnz
pushf
adc
lds
and
movsb
xor
repnz
in
iret
push
mov
outsb
xchg
ss
mov
jne
daa
mov
push
mov
fiadds
lea
sahf
pop
leave
outsl
inc
inc
pop
outsb
add
xchg
sub
jg
cmp
mov
mov
or
popa
aam
in
sub
jns
daa
push
stos
adc
test
inc
cld
mov
fisubs
outsl
mov
shlb
sti
inc
scas
adc
add
orb
mov
xchg
add
push
jp
xchg
mov
sub
inc
pop
lahf
lret
cwtl
jo
jbe
inc
loope
stos
daa
fstpt
lret
inc
pop
ret
mov
shlb
add
idiv
xchg
xor
cmp
movsl
int3
subb
popf
xor
std
or
dec
adc
bound
xchg
cmpsl
inc
mov
out
sahf
scas
mov
cs
in
imul
rolb
insb
loopne
sbb
adc
pushl
sub
cmpsl
add
iret
popf
jp
mov
jle
cmpsb
dec
call
pop
push
xchg
ret
outsl
sub
push
and
fs
outsl
and
out
xchg
sub
jne
imulb
sbb
add
lds
jnp
and
cmp
lock
mov
or
sub
repz
xchg
and
cpuid
cmp
sub
mov
jno
push
or
rcll
js
mov
add
hlt
adc
inc
andl
ret
mov
fwait
imull
or
scas
inc
imul
mov
push
and
adcl
fwait
mov
sbb
test
sti
xchg
sbb
xor
outsl
js
push
stos
insb
fbstp
inc
xchg
cmpsb
mov
das
pop
xlat
pop
cmp
mov
pop
cmpsb
adc
dec
sbb
jecxz
push
stos
mov
ret
cmp
mov
fld
cmpsl
popa
xor
loope
xor
out
ss
push
push
repz
arpl
ret
dec
adc
sarl
lcall
sahf
clc
add
jp
sbb
pop
push
xor
je
imul
insl
adc
fsubr
pusha
xor
xor
lds
cmpsl
inc
out
push
fldenv
outsb
cli
into
repz
pop
arpl
cmp
mov
faddl
push
aad
icebp
stc
mov
fnstcw
inc
pop
fst
xlat
sbb
sbb
xchg
cmpsl
dec
pop
push
mov
lahf
lahf
lods
scas
mov
mov
outsl
out
dec
outsl
movl
mov
popf
mov
jg
lahf
push
and
iret
jmp
cmp
or
loopne
or
dec
sti
sbb
xchg
movsl
mov
fldt
mov
rcll
lods
aas
cmp
incl
lock
inc
ficoms
lret
fdivrs
pop
and
bound
shl
gs
test
stos
movsb
lea
test
dec
pop
shll
pop
leave
loop
mov
rcr
push
push
aaa
xchg
mov
adc
shll
popa
push
inc
pop
aas
jmp
or
sbb
int
xchg
or
in
mov
dec
in
stos
xor
loopne
outsb
std
test
dec
fnstsw
cwtl
push
fdivrl
lret
sbb
push
push
inc
or
mov
movsb
into
cmpl
daa
movsl
lds
adc
pop
out
cli
stc
xchg
andl
gs
xor
push
jle
dec
js
in
outsb
fs
dec
pusha
aam
js
dec
mov
adc
and
loop
loop
bound
and
inc
jbe
jg
ljmp
shrb
mov
fistl
add
outsb
pop
sarb
lahf
xchg
pop
cld
cmp
mov
pop
pop
pop
rolb
cmp
inc
xor
js,pt
sbb
lcall
in
lods
push
fmuls
aaa
sub
mov
js
sbb
cltd
xor
int3
iret
mov
adc
nop
adc
shl
cmp
cmc
ljmp
sub
lock
aad
out
lock
je
sbb
xchg
cmp
pop
outsb
xchg
aad
xor
jmp
or
sub
lods
sub
cmc
inc
int
dec
mov
ficoml
mov
xor
cmpsl
shll
pop
jecxz
inc
dec
xor
mov
loope
mov
scas
and
xchg
cmp
inc
xor
mov
add
flds
les
sbb
in
mov
mov
mov
add
std
loope
push
xor
icebp
nop
xor
cmpsb
std
xor
mov
fnstcw
test
cmp
stos
into
mov
mov
rorl
popf
orb
std
mov
gs
inc
mov
adcl
sbb
bound
ret
pop
adc
nop
daa
jns
dec
lods
sbb
data16
mov
ficoms
in
enter
adc
leave
cmp
xchg
je
dec
leave
outsb
cmc
out
jge
aad
mov
inc
mov
fidivs
mov
out
test
cmp
inc
dec
dec
pop
stc
repnz
jns
cmpsb
push
lret
sti
inc
andl
inc
fs
cli
jg
lock
mov
movsl
xchg
mov
imul
sbb
or
mov
lcall
hlt
enter
rcr
out
inc
and
lcall
and
xor
push
stc
shlb
inc
rolb
cmc
jmp
pop
imul
add
push
adc
jecxz
in
jecxz
mov
pop
scas
mov
sbb
push
or
mov
lds
out
aaa
test
aad
ljmp
lret
je
clc
sub
adcb
rcrl
dec
pop
insl
js
jp
mov
test
subb
push
pop
dec
and
dec
xor
mov
testl
fistpl
dec
lcall
mov
ret
push
inc
pusha
adc
in
inc
je
in
in
add
mov
imul
jne
test
cmpsl
jp
fsts
sub
sub
stc
fldl
popa
js
ret
dec
or
cmp
xchg
outsb
and
call
ret
xchg
sbb
dec
fldt
in
jge
test
sub
iret
mov
inc
dec
mov
leave
dec
mov
push
in
dec
repnz
mov
sbb
inc
adc
mov
pushf
xor
aas
loop
cmp
loopne
xchg
call
lock
fadd
pop
mov
push
scas
and
ficoms
pop
int
xor
fwait
push
ret
adcl
or
call
adc
je
mov
mov
pop
xlat
push
call
adc
xchg
mov
test
std
aas
mov
fistl
pop
mov
out
jmp
hlt
pop
std
xor
stos
and
aas
dec
cs
ja
and
fldlg2
orl
fimuls
inc
or
addr16
pop
rol
xor
into
popf
jb
dec
lret
pop
arpl
into
push
push
inc
ret
jecxz
pop
int3
fimuls
daa
mov
inc
xor
fbstp
push
pop
iret
cmpsl
test
add
leave
cld
lcall
ljmp
jno
push
je
sub
jb
cli
mov
les
ret
lahf
jp
mov
xor
imul
jecxz
adc
lret
push
dec
in
das
push
or
pop
addl
pusha
clc
rcr
pop
inc
push
jns
push
stos
daa
enter
sahf
test
mov
mov
push
call
aam
outsb
and
or
jne
mov
xchg
xchg
lret
hlt
dec
xchg
sub
pop
pop
jmp
scas
shl
fbld
std
popa
sbb
lock
sti
push
and
lds
lds
int
out
sbb
jmp
push
jns
lahf
jmp
mov
leave
loopne
in
xchg
inc
leave
and
aad
inc
add
dec
clc
mov
dec
scas
sub
lcall
xchg
mov
sarb
inc
and
decl
sub
jno
add
inc
clc
clc
test
lret
jle
push
mov
fidivrl
fimull
and
lcall
or
xor
addr16
js
fs
push
inc
rep
fistpll
out
cmpsl
data16
jae
mov
sarb
cltd
aaa
mov
push
sbb
dec
pop
aaa
mov
mov
xor
or
xchg
aaa
ljmp
call
cmp
and
mov
fldlg2
test
xor
fmul
xlat
sahf
out
cltd
test
mov
fldenv
pop
inc
sub
add
pop
mov
adc
movsl
cmp
out
xchg
sbb
aas
mov
mov
mov
cltd
das
inc
clc
cmpsb
jle
bound
loopne
pop
jmp
add
jl
or
test
dec
mov
fwait
sbb
test
jp
push
ljmp
test
nop
dec
repnz
mov
adc
mov
das
std
xchg
popa
insl
les
mov
mov
lods
dec
xchg
mov
fistpl
shl
mov
stos
sti
mov
mov
cmp
fisubs
cwtl
lods
add
xchg
bound
adc
jl
or
int
jle
or
out
push
dec
inc
int3
out
mov
mov
insb
mov
mov
xlat
jl
inc
sahf
rcll
daa
clc
aas
popf
push
mov
ljmp
pop
and
cmpsl
inc
jns
jp
mov
pop
lret
shlb
notl
fwait
dec
loope
aas
push
or
mov
testl
aaa
rcrl
out
movl
sub
bound
cwtl
out
int3
xchg
leave
aam
adcb
cltd
cmp
xor
cmc
sub
xchg
jl
movsb
xchg
inc
int
rcr
cmp
je
inc
and
push
jle
push
mov
orl
shll
test
mov
pop
cmp
mov
xor
ret
outsb
xchg
dec
pop
push
loopne
outsb
sub
mov
scas
test
mov
mov
bound
cmpsl
pop
popf
notl
or
or
mov
std
jo
dec
repz
scas
or
adc
dec
lods
jno
fildll
fisubs
jge
out
mov
repnz
push
mov
popl
mov
in
cmp
mov
adc
in
dec
cli
push
push
adc
shlb
xor
jl
pop
inc
xor
pop
rolb
out
xchg
repz
orl
jns
lock
popf
lret
aaa
in
imul
aam
inc
add
jge
adcb
sbb
int
in
es
out
jo
mov
add
mov
ret
xchg
dec
hlt
cmp
cmp
mov
ffreep
popa
push
mov
pop
mov
mov
add
jge
push
or
pop
int3
into
or
lcall
xchg
sub
fldl2e
orl
mov
sahf
clc
push
sti
popf
js
lcall
repnz
dec
inc
loope
inc
mov
mov
pop
test
rorl
idiv
mov
xor
js
inc
aaa
mov
cmpsl
sbb
or
inc
nop
insl
scas
push
jnp
inc
sbb
cltd
push
dec
std
pushf
xor
insb
pop
sub
xchg
mov
pushf
mov
cli
inc
test
popf
cmp
mov
push
jb
rorb
cmp
lods
icebp
nop
mov
jle
xor
jmp
pop
jns
xchg
rcll
cmp
ror
scas
jne
mov
mov
loopne
cs
adc
loopne
adc
into
jge
sub
pop
sahf
push
out
das
fwait
cmp
loop
jne
adc
mov
repnz
sbb
or
negl
out
insb
add
popa
arpl
or
outsb
mov
mov
lods
cmpsb
cmp
mov
fstps
pop
imul
loop
pop
int
aaa
mov
xchg
mov
sahf
sbb
jmp
mov
stc
jg
scas
push
mov
icebp
outsb
aas
aad
sbb
fdivrl
lds
dec
push
leave
pushf
inc
pop
fists
pop
jae
or
xor
add
addr16
rorl
leave
inc
cmp
push
jmp
pop
shlb
xor
add
mov
mov
jae
mov
pop
jle
int3
in
cmpsb
pop
push
mov
sarb
and
stos
popa
fcompl
subl
out
mov
scas
xchg
pop
mov
jp
jp
xchg
sbb
test
inc
call
outsb
jp
ja
cmp
orb
inc
lds
push
dec
mov
enter
jecxz
in
or
arpl
lcall
mov
xchg
dec
jne
mov
mov
xchg
pop
xor
clc
cmp
imul
cltd
and
inc
movsb
ljmp
mov
xchg
sub
movb
and
ss
xlat
xor
push
ljmp
repz
pushf
xor
cld
jb
add
insb
inc
mov
pop
xchg
jnp
sbb
data16
push
push
sub
xor
lahf
pop
and
cmp
push
insb
xchg
cs
adc
mov
lods
and
mov
xchg
sbbl
sbb
repz
scas
add
iret
and
insl
out
sbbb
sbb
cmpsl
aad
lea
dec
pop
lods
jp
sbb
in
ljmp
cltd
inc
out
inc
dec
adc
xchg
push
add
imul
or
aas
sub
dec
divb
ret
addr16
adc
mov
test
test
shrl
pushf
cmp
inc
arpl
imul
adc
push
lcall
inc
or
je
inc
push
sub
xor
mov
push
lds
in
adcb
adc
or
popa
lret
cs
repz
jecxz
pop
adc
arpl
test
push
push
sbb
xor
sbb
jge
mov
nop
mov
test
lods
jbe
fistpll
fsubl
push
or
or
mov
imul
mov
add
cwtl
outsl
insl
pop
cmp
andb
fldenv
bound
imul
dec
sahf
jno
pop
movsl
and
and
popa
or
mov
repnz
leave
push
sub
fdivl
pop
mov
loope
cld
and
push
mov
and
fisttpl
jp
add
shll
cmc
cli
adc
cmp
addb
mulb
in
cmp
ja
xchg
push
fildl
movlps
cmpsb
inc
das
aaa
loopne
scas
mov
loopne
js
or
pop
mov
xchg
jae
aad
fidivs
dec
cmp
dec
shrl
pop
mov
mov
adc
mulb
arpl
inc
ljmp
int
mov
arpl
aam
das
mov
push
aas
repnz
popa
pusha
fsub
mov
fldt
hlt
icebp
rclb
mov
in
test
mov
jmp
inc
fidivs
xlat
mov
pop
ljmp
mov
xor
pop
and
cld
sub
push
ja
popf
sbb
in
mov
pop
mov
push
std
std
sub
xchg
ss
lahf
jbe
les
pop
xchg
loope
adc
mov
bound
into
push
xchg
daa
ret
pop
aaa
jg
jecxz
stos
add
ss
test
push
inc
movsb
out
xor
ss
sbb
pushf
loope
mov
jp
mov
cmp
pop
push
shll
aaa
mov
ficomps
xchg
mov
sub
jns
sti
ret
dec
arpl
pop
add
and
int3
or
enter
mov
pop
xor
icebp
ljmp
xchg
jp
lods
insb
and
sahf
into
js
rorb
adc
insb
out
sahf
push
mov
inc
jno
lea
inc
xor
mov
stos
inc
or
inc
ret
fmulp
aam
ret
push
in
and
sbb
add
pop
adc
movsl
inc
jg
lea
scas
inc
push
push
incb
imul
mov
data16
adc
shr
shlb
lahf
mov
inc
mov
mov
dec
dec
push
push
out
add
pop
pop
mov
shll
pop
jg
adc
jb
sub
cmpsb
inc
js
in
movsb
cmp
lock
lret
inc
out
cmpsb
mov
inc
inc
stc
ja
mov
xchg
fstl
hlt
adc
cmp
int3
inc
out
mov
mov
push
loop
psadbw
push
lods
fcmovbe
cmpsb
das
pop
fdivs
pop
pop
pop
fisttpl
dec
jp
or
inc
pushf
jo
loop
xchg
adc
pop
movsb
fnsave
in
lret
addr16
in
jg
ja
adc
mov
push
or
push
mov
stos
xlat
rcr
jge
loopne
jecxz
mov
adc
xor
or
pop
push
scas
dec
ror
pop
inc
pop
adc
fdivrl
out
std
xor
inc
or
push
rcrb
addl
aas
sub
sub
jo
pop
lret
jo
sub
enter
adc
mov
push
or
aaa
sub
out
es
and
das
movsb
sbb
repnz
xchg
bnd
cmp
jg
mov
add
mov
pop
loopne
clc
call
xchg
jne
aaa
add
push
lds
xor
jmp
inc
sbb
lods
sbb
push
bndstx
nop
mov
cmp
fisttpl
xchg
stos
stc
cmp
add
jnp
repz
sub
and
popf
xchg
test
popf
mov
lods
mull
jno
ljmp
inc
mov
xchg
lock
dec
pop
mov
mov
js
mov
fs
jno
ret
xor
adc
jmp
iret
mov
jae
push
cmp
mov
out
cwtl
int
fcmovbe
mov
mov
iret
ljmp
mov
lea
movsl
clc
lods
cwtl
push
jno
cmpsl
jnp
leave
mov
xchg
filds
int3
lods
jle
xchg
sbb
cltd
outsl
xor
lcall
push
ja
sbb
scas
push
push
push
cli
inc
and
inc
or
bound
jle
add
lcall
in
push
cmpsb
push
je
mov
ljmp
out
stos
add
jge
xchg
ret
stos
stc
fsubr
lcall
mov
push
shll
cmp
xor
gs
scas
in
mov
lcall
out
mov
or
test
cmpsl
mov
sub
add
inc
add
sti
jbe
cmc
dec
push
test
xchg
or
xchg
adc
int3
mov
sbb
stc
and
movsl
rcrl
fcmovne
adc
inc
sarl
push
cs
or
lcall
sbb
push
lret
push
lods
push
mov
dec
xor
or
xor
and
into
lods
pop
jg
sub
aad
daa
lcall
or
cli
pop
pop
loope
xor
loop,pt
addr16
sarl
inc
jl
fidivrs
mov
pop
adc
add
fsubs
fcoml
data16
inc
adc
inc
lds
mov
fidivrl
inc
stc
popl
aad
shll
hlt
mov
cltd
xchg
push
hlt
or
and
mov
sar
pop
jecxz
unpckhps
in
sub
cmc
mov
mov
int
xchg
fiaddl
fsubrl
into
pop
lret
and
push
jmp
cmp
jo
repz
sbb
jl
sub
nop
sub
inc
xlat
adc
jne
add
iret
push
push
jb
pop
and
push
addr16
and
inc
aad
out
divl
dec
setge
mov
ret
mov
pop
adc
popa
mov
fnsave
sub
inc
add
mov
fcomps
mov
adc
adc
in
jbe
int3
add
adc
pop
push
call
ret
add
mov
lret
call
ja
mov
mov
dec
cmp
pop
lret
bound
mov
sarb
ficomps
mov
xchg
lret
sarb
cmp
fistpll
xor
hlt
mov
mov
aad
push
test
dec
pop
ljmp
jno
pop
adc
sti
pop
mov
mov
mov
add
pop
cmp
js
adc
cld
adc
xor
pop
js
fwait
push
mov
mov
cwtl
mov
aas
gs
je
mov
sbb
hlt
aaa
jbe
pop
xchg
js
xchg
push
mov
daa
scas
lret
and
dec
andb
test
sub
shrb
sbb
adc
enter
pop
lock
out
aaa
incb
add
xor
jmp
fnstsw
lea
lock
insl
jg
adc
mov
inc
idivl
push
inc
jbe
add
fimuls
lea
stc
sbbl
push
inc
adc
mov
std
push
or
rorl
jge
push
jae
push
loop
outsb
ds
mov
adc
jp
and
jb
repz
xchg
nop
loop
ret
in
mov
pop
jl
mov
or
xchg
add
out
lahf
nop
and
roll
shrl
jmp
or
jmp
rolb
push
sub
mov
inc
push
xor
jmp
mov
shrl
pop
int3
imul
pop
ss
arpl
jno
icebp
mov
das
xlat
mov
xchg
mov
cltd
lret
jo
add
and
lea
jle
adc
clc
push
repz
fstpt
fidivl
and
bound
and
adc
repnz
sahf
mov
xchg
add
inc
aad
and
scas
add
fwait
mov
mov
mov
movsb
or
lds
lea
lahf
add
jge
and
sub
test
push
stc
adc
fs
jo
mov
in
sub
shl
je
jecxz
jnp
popl
pop
mov
test
mov
ja
mov
in
mov
jae
jmp
adc
or
cs
sub
push
mov
xor
dec
in
insb
dec
mov
shrl
fildll
loop
dec
cmp
push
je
pop
in
cmp
lahf
and
lahf
cli
xchg
adc
cld
mov
mov
ret
mov
jb
and
push
pop
pop
stc
sbbb
jnp
jnp
push
xor
loopne
outsl
dec
xchg
sarb
and
leave
sub
aam
xchg
mov
repnz
mov
jmp
inc
jns
cmc
adc
iret
fildll
xor
jmp
mov
push
mov
cltd
xor
xchg
aaa
vmovntdq
stos
inc
fcomp
orl
or
lcall
jp
lahf
pop
mov
sarb
notb
xchg
inc
pop
push
jge
data16
sahf
popf
pop
xchg
dec
sahf
xor
push
aam
outsl
pop
outsl
cwtl
das
pop
imul
push
into
jae
mov
stc
popa
into
pop
daa
mov
sbb
pop
mov
add
ja
inc
loop
adc
push
cmpl
outsb
xor
mov
push
out
pop
sub
call
or
out
stos
cmpsl
mov
mov
out
cli
pop
push
xchg
fstpl
lods
xor
jo
outsb
add
je
xchg
xor
push
fincstp
jns
insb
ds
imul
jge
insb
fistpll
push
gs
inc
repnz
lahf
sti
bound
in
lahf
inc
fimuls
test
push
call
pop
adc
es
ret
insl
xchg
dec
mov
or
xchg
and
sbb
jle
lahf
testl
je
loopne
movsl
sub
hlt
mov
dec
sub
in
mov
cmp
add
ss
fwait
lret
mov
xchg
mov
jno
cmpb
or
adc
sbb
push
dec
jg
pop
cmp
rclb
scas
pop
imul
outsb
movsb
sbbl
ljmp
test
stos
inc
push
loopne
sub
inc
lahf
sbb
pop
daa
inc
movsl
fildll
cwtl
into
fdivs
push
test
mov
push
fmul
insb
cmp
insb
gs
sbb
inc
mov
js
push
out
and
xchg
dec
scas
sti
stos
jne
cltd
cmp
aad
dec
mov
rcrb
push
or
jecxz
push
adc
push
loope
cmp
imul
mov
and
out
loop
sbb
mov
mov
lea
sti
sbbl
push
and
aam
pop
cmp
cmc
adc
pop
mov
jo
mov
mov
adc
cmp
inc
push
mov
jb
enter
adc
sub
sbb
mov
mov
inc
dec
inc
scas
iret
pop
test
sti
fdivs
into
imul
jmp
dec
xor
out
cwtl
pop
and
popf
rol
faddl
ja
mov
jg
insl
stc
into
ret
sbb
hlt
aad
ja
xor
cmp
xchg
add
xchg
sub
test
sbb
pop
arpl
sbb
dec
mov
adc
inc
mov
sub
jmp
push
pop
addr16
fiadds
add
xor
lods
fwait
mov
pop
and
mov
jae
mov
adc
mov
push
out
push
jb
out
xchg
lahf
push
inc
adc
stos
jne
sbb
ret
scas
data16
pop
cwtl
or
jbe
mov
imul
and
arpl
pushf
jmp
sti
cwtl
nop
fucom
dec
xchg
sbbl
or
mov
jns
jp
mov
pop
add
aas
lret
sbb
sub
adc
adc
aaa
ds
popf
jo
mov
push
popf
cmp
mov
mov
mov
xchg
rcr
fstpt
jne
push
inc
imul
pop
pop
out
cmp
sbb
mov
sarl
insb
dec
pop
gs
pop
and
mov
lds
lods
and
push
cmp
or
lahf
ss
adc
pop
lcall
dec
pop
push
and
cmpl
lock
and
lea
pop
xlat
xlat
test
adc
mov
jo
pop
lret
loope
mov
sbb
adc
pop
sub
sahf
dec
cmpl
adc
inc
ret
lret
pop
inc
cmp
push
sbb
daa
imul
lret
add
xchg
insb
push
fcomp
jmp
pop
jge
in
pusha
adc
or
scas
inc
push
inc
jmp
add
xor
popf
js
sub
jecxz
pop
xor
lds
mov
dec
arpl
mov
js
ret
enter
pusha
jmp
push
jne
lock
rclb
fnstenv
dec
repz
imul
inc
shlb
mov
popa
subl
loopne
and
daa
cld
stc
xchg
mov
sbb
je
mov
fwait
aad
jae
les
loope
jge
hlt
pop
stos
add
lods
fwait
jmp
jge,pn
pop
lods
dec
sbb
lcall
fstpt
movsb
dec
lods
icebp
pushl
jg
adc
mov
jae
jmp
mov
cmp
mov
mov
sbb
mov
or
or
push
jnp
or
subl
out
jo
lea
sub
mov
and
dec
loop
inc
scas
cmp
int
cmp
inc
push
adc
dec
xchg
jecxz
adc
jae
jbe
add
xor
je
push
in
addr16
nop
inc
nop
pop
fnstsw
fs
inc
imul
shlb
push
push
cmp
sbb
mov
into
and
arpl
enter
fisubl
aad
ja
psubsb
imul
push
into
pop
negl
xchg
dec
in
pop
jae
or
imul
rcrl
pop
jne
iret
out
or
int3
out
push
jo
dec
mov
dec
shlb
push
jno
in
mov
loop
xor
shll
xchg
pop
aad
and
addr16
cli
out
stos
add
mov
pop
cmp
pop
sbb
in
pop
nop
inc
jp
jmp
xorb
pop
mov
dec
aam
push
cmpsb
sti
mov
insl
push
test
or
push
and
in
jp
add
je
fistpll
pop
sub
rclb
mov
inc
cltd
jbe
inc
cmp
push
das
addr16
xchg
sub
loop
dec
call
mov
add
lods
push
jmp
leave
mov
ret
lds
arpl
addr16
fwait
sbb
imul
push
in
push
sub
pop
mov
jb
xor
cld
and
pop
mov
sbbl
xchg
mov
aam
or
jecxz
mov
negb
call
cld
movsl
lock
jge
fiaddl
push
push
or
int3
repnz
cmc
jns
and
leave
inc
daa
test
push
into
push
stc
mov
fnstsw
dec
pop
outsl
mov
ss
int3
popf
inc
pop
ss
xlat
lods
movsl
push
sbb
adc
sti
adc
dec
pinsrw
inc
pxor
loopne
jge
jbe
jp
mov
mov
iret
mov
xchg
dec
into
mov
pop
into
xor
add
dec
xchg
mov
sarl
aad
cmp
les
fcompl
or
mov
lods
mov
sbb
and
mov
test
cmp
sbb
push
test
adc
div
mov
enter
dec
xchg
dec
bound
push
inc
icebp
push
dec
lcall
popa
andl
in
ret
dec
dec
mov
ja
lret
rorb
fistpll
push
adc
fisubrs
lds
fbstp
bound
popa
cmp
mov
inc
mov
repz
andl
sbb
test
push
inc
add
inc
jno
inc
stos
pop
mov
test
mov
pop
scas
inc
inc
data16
loop
sti
sub
jp
mov
mov
je
dec
movsl
sub
ficomps
mov
inc
xchg
cmp
fprem
push
call
stos
nop
jo
mov
loopne
xor
sarb
mov
adc
je
sub
push
mov
dec
leave
test
xchg
ljmp
sub
push
outsl
adc
and
pop
xor
aam
push
push
or
fwait
jle
aas
or
push
sbb
test
jecxz
ret
push
leave
push
imul
inc
sbb
in
sbbl
aam
lret
pop
aam
mov
or
fdivrl
mov
insl
mov
lahf
add
leave
xchg
push
mov
ljmp
mov
insb
jge
add
and
adc
push
mov
push
and
adc
inc
fnstsw
jmp
add
mov
subl
leave
fstps
fimuls
sbb
mov
cmp
ja
cli
sub
ret
sub
jb
and
mov
shrb
mov
jnp
lods
mov
cwtl
sbb
cmpsb
mov
or
push
sub
and
inc
pop
lahf
in
movsb
es
and
or
fwait
lret
sbb
shlb
sar
mov
lret
jg
daa
xchg
mov
repnz
dec
out
pop
movl
dec
dec
sub
aaa
jno
cwtl
push
sub
loop
leave
adc
shlb
push
mov
inc
push
cmc
mov
int
pushl
bound
push
mov
lods
and
pop
mov
cmp
or
push
insb
pop
push
sub
pop
lock
lock
pop
cmpsl
pop
jl
dec
enter
cmp
add
mov
gs
xchg
arpl
push
aas
testl
add
mov
add
mov
aas
mov
add
cmp
cmp
push
pop
adc
aad
ds
call
in
insb
mov
out
std
xchg
adc
mov
outsb
mov
mov
mov
sahf
scas
jnp
stc
push
xchg
faddl
lcall
add
scas
cmp
outsb
lods
lock
outsl
shll
mov
in
jecxz
xor
loop
jo
push
lcall
addr16
cmp
xchg
jns
inc
jl
cmp
dec
imul
adc
cltd
js
push
jb
insl
push
in
scas
pop
inc
sbb
shlb
push
lcall
mov
out
inc
int3
sbbl
pushf
pop
and
data16
xchg
andl
sbb
inc
mov
sub
xchg
pmaxub
jo
cmp
pop
js
add
push
pop
xlat
push
mov
sbb
gs
stc
push
cmp
cmpsl
mov
add
xchg
js
repz
ljmp
mov
xor
in
popf
dec
cmp
jg
fimull
dec
cmpsb
cmp
mov
sub
loopne
or
or
lds
pop
pop
cmp
pushf
imul
inc
sbb
sti
inc
js
xchg
scas
test
mov
jle
push
mov
inc
mov
push
push
fisttps
xlat
out
mov
or
inc
aad
lods
dec
aas
adc
mov
popf
das
inc
fmulp
mov
sub
mov
int
mov
gs
cmp
stc
orb
sbb
fwait
xchg
pop
outsb
mov
and
cmpsl
shl
ja
jo
and
push
out
cwtl
popf
sbb
sub
xchg
pop
into
scas
inc
scas
jle
mov
loope
jb
cmp
jp
push
adc
mov
sub
push
and
jnp
ficoms
icebp
outsb
add
xor
aas
dec
fsubrl
jge
jmp
loopne
shl
pop
arpl
adc
stc
push
xchg
add
pop
xchg
imul
push
add
sbb
xchg
leave
jne
mov
ds
std
cmpsb
jnp
cmpsb
mov
pop
or
sbb
mov
xor
inc
enter
cmpsl
or
cmp
jns
rol
aad
dec
xchg
push
adc
jl
icebp
cltd
jg
mov
cmp
lods
mov
xorb
jmp
add
pop
inc
movsb
sbb
and
or
jns
adc
addb
pop
cmp
push
mov
adc
les
shll
stos
or
pushl
in
shrb
inc
and
dec
hlt
inc
repz
addr16
xor
adc
ret
xchg
test
sbb
xor
xor
lods
aad
pop
jbe
push
xchg
jl
outsb
push
cli
mov
adc
jg
repnz
es
push
mov
aas
mov
jbe
fcompl
adcl
jl
dec
push
frstor
jmp
adc
int
sti
pop
adc
pop
test
mov
or
imul
cmpsb
jp
repnz
add
xor
xchg
ja
xlat
stos
push
inc
loopne
repz
aad
lods
sbb
sbb
jl
int
cwtl
inc
jb
mov
sti
aas
in
xchg
pop
mov
iret
xchg
sbb
imul
test
loop
cli
les
cmc
sbb
xchg
sub
or
mov
mov
sub
inc
ljmp
or
lahf
mov
pop
jle
cli
scas
jnp
lds
int
data16
pop
mov
ja
push
xor
pushf
fs
jp
aaa
repz
add
or
movsb
sar
pop
lret
sub
and
es
insb
jne
adc
subb
lods
sbb
in
cmp
push
or
out
arpl
popf
nop
mov
cmc
into
push
mov
dec
or
dec
cmp
jnp
jg
xchg
dec
dec
pop
loop
stos
sub
dec
fnstenv
cmc
adc
mov
sub
jmp
push
push
insb
daa
cltd
inc
or
dec
xor
insl
lret
push
pop
repz
idivl
jne
out
sbb
out
imul
pop
lds
repnz
add
sub
pop
jmp
mul
mov
shr
add
out
jae
pop
aas
test
fiaddl
mov
push
inc
mov
and
push
add
rcr
mov
ficoms
dec
mov
jb
cld
mov
inc
adc
in
mov
inc
dec
dec
push
je
daa
jno
and
dec
imul
adc
cmp
gs
mov
js
and
cmp
fisubrl
and
fcoml
pop
or
jmp
mov
cld
or
push
in
dec
or
push
inc
lret
mov
add
rorl
xchg
or
not
xchg
cmp
out
lahf
lods
sti
js
mov
fdivrs
test
js
jl
ret
push
decl
or
push
imul
xchg
popf
cmp
add
lret
jge
and
cmpb
push
jb
fs
repz
inc
sbb
and
insb
dec
add
mov
jnp
in
pushf
push
adc
nop
pop
test
mov
xor
push
lods
and
dec
push
mov
addb
dec
adc
or
outsl
test
aad
insb
shrl
dec
jmp
pusha
negl
mov
sahf
add
in
mov
mov
mov
into
loop
iret
cmpsb
dec
pop
jb
sbb
sbb
add
stos
xchg
mov
jge
out
sub
aad
mov
insl
jl
ds
out
popf
adc
nop
xor
mov
bnd
xchg
adc
jbe
int3
test
pop
into
xchg
add
nop
daa
ljmp
or
mov
push
popf
push
mov
iret
push
xchg
sub
cld
and
sub
hlt
insl
adc
ss
out
fidivrl
pop
imul
adc
mov
mov
call
or
jmp
aad
cmp
jle
pop
sbb
adc
rcll
enter
mov
push
sbb
lock
jnp
rol
fisttpll
pop
xchg
jge
lcall
jbe
mov
out
movsl
add
mov
adc
jg
add
jl
xor
aas
orl
adc
sbb
lods
push
xchg
pop
xor
jno
ret
jae
stc
dec
cwtl
xchg
dec
std
xor
test
out
xchg
cmp
dec
mov
cltd
pop
ds
ret
push
outsl
dec
test
clc
ret
loope
mov
repz
fmul
into
imul
pushf
das
mov
xor
and
out
cmp
insb
and
or
stos
aad
cld
push
rorb
fnstsw
xchg
push
xchg
xor
inc
cmc
dec
xchg
mov
shrl
jmp
mov
push
icebp
insb
je
aaa
dec
or
and
popf
stc
sbb
sahf
jecxz
stc
pushf
jae
int3
pop
es
sbb
or
cmp
sti
lea
divb
int3
gs
push
xchg
out
push
push
in
mov
fbstp
jg
xor
bound
dec
inc
sub
js
cwtl
push
gs
dec
mov
mov
ds
sbbb
sarb
imul
xchg
and
and
gs
popf
pop
aad
in
xchg
add
sub
adc
int
ret
insl
xor
inc
and
test
cltd
test
outsl
negb
push
ret
leave
outsl
data16
pop
rclb
fwait
or
xchg
cmp
mov
xlat
aas
xor
xor
insl
ficoms
xor
dec
fisttps
imul
call
mov
xchg
mov
cwtl
and
aam
mov
pop
jnp
sbb
inc
dec
pop
add
andb
sbb
aad
loop
mov
push
mov
pushf
inc
scas
sub
arpl
sbb
jecxz
dec
mov
fcomps
inc
out
mov
ret
xor
and
mov
mov
sbb
and
testl
daa
outsl
lcall
lahf
clc
rorb
mov
jne
or
pop
and
xor
enter
inc
je
pop
sbb
aad
inc
adc
fsubrp
inc
add
mov
mov
ljmp
cmp
cmpsl
add
fwait
outsl
mov
adc
xchg
scas
inc
jmp
movsb
pop
out
inc
sub
mov
xchg
fs
or
icebp
fimuls
and
cmp
push
ds
sbb
dec
test
imul
leave
test
in
pop
es
lods
pop
leave
sbb
das
cmp
lea
pop
jnp
and
jne
pop
add
xlat
cmp
sbb
cld
dec
clc
push
adc
xor
shlb
sub
mov
int
add
aaa
hlt
push
shll
cwtl
push
scas
or
xchg
rcrb
sarl
mov
fcompl
inc
xchg
mov
loop
shrl
sbb
mov
pusha
in
mov
xor
adc
cmc
push
pop
je
daa
testl
push
iret
jns
mov
pop
fiadds
xchg
out
and
adcl
repnz
pushf
insb
pop
push
pop
lock
in
imul
sub
test
das
push
sbb
adc
pushf
sub
movsl
pop
and
clc
cmc
das
ljmp
sub
dec
inc
mov
lret
pop
add
ja
sbbl
mov
jne
dec
mov
inc
loopne
adc
dec
scas
out
cmpsb
mov
or
jnp
push
aaa
push
ljmp
xchg
sub
pop
mov
mov
pop
in
icebp
adc
cmc
xchg
cmp
xor
testl
aaa
push
out
insb
adc
es
add
or
adcb
ret
cmp
mov
cmpsl
out
push
mov
pop
call
insl
sub
pop
pop
pop
cltd
xor
dec
add
mov
sub
add
xor
in
aam
lret
jp
mov
and
pop
mov
jg
mov
gs
xor
iret
mov
sub
xor
xorl
mov
push
or
int
test
pop
das
add
int3
jg
mov
fistpl
fxch
cmp
pop
sub
scas
cwtl
sub
in
add
int
or
dec
dec
mov
inc
imul
jbe
mov
lret
xchg
jb
in
cmp
push
insb
in
push
js
ret
pop
and
hlt
push
subb
sub
loopne
hlt
mov
sbb
fisubrl
dec
sbb
inc
mov
xchg
push
cwtl
xor
sbb
aaa
mov
cmpb
adc
gs
push
adc
in
jp
adc
test
inc
lahf
outsb
test
push
mov
mov
aam
fsts
out
xor
orb
leave
test
repz
lods
inc
cmpsl
int
mov
push
pop
mov
gs
out
lea
ret
or
out
add
imul
jno
xorb
jle
stos
jmp
cmp
pusha
cld
jae
sub
cmp
and
movsl
mov
movsl
push
dec
xlat
icebp
jp
cmp
popa
jg
xchg
fcomps
repnz
inc
das
lcall
cmp
stos
cmp
pushf
or
lds
ret
in
mov
loope
inc
out
fcoms
lahf
mov
dec
and
cmp
rcrl
movsl
shlb
rol
pop
aam
dec
xchg
rcr
enter
sbb
adc
in
push
xor
and
test
pop
dec
or
or
sub
or
jbe
daa
mov
jb
mov
push
sbbb
jle
xlat
jp
pop
cmpsb
stc
or
mov
adc
sbb
jg
dec
pop
dec
out
push
pushf
sbb
shlb
xchg
sub
aaa
dec
mov
jno
rcrl
pusha
jmp
pop
ljmp
xor
cmpsl
cli
adc
xor
inc
push
adc
in
adc
cmpsb
cmp
inc
stos
les
cmp
mov
mov
ds
addb
mov
push
test
ja
push
test
dec
pop
ljmp
xor
lods
inc
jl
pop
icebp
dec
fldcw
inc
and
popa
adc
dec
mov
jb
fcoms
mov
stc
leave
sub
dec
in
js
inc
mov
jb
dec
add
stos
inc
push
sahf
in
mov
popa
sub
pop
adcl
pop
aam
or
mov
mov
loop
and
push
jmp
push
mov
or
xor
push
fcmove
and
mov
dec
stos
iret
pop
ret
sahf
adc
icebp
ret
pop
ret
into
aas
ja
push
shrl
inc
popa
rcrb
icebp
sbb
sub
sub
mov
mov
jns
cmc
aad
adc
jbe
bound
mov
cmp
in
push
fstps
inc
out
ljmp
pop
pop
pcmpeqd
mov
or
in
push
mov
pop
jl
jne
fistpl
xchg
jl
inc
sub
mov
adc
shlb
fisubrl
int
lods
cmp
nop
adc
subb
cmpsl
jnp
pop
cmp
adc
cmp
sysret
mov
addr16
stos
aas
rclb
out
xor
stos
dec
push
pop
inc
xchg
cltd
pop
pushf
outsl
les
rolb
pop
outsl
jb
mov
xchg
mov
loop
add
push
add
mov
xchg
mulb
test
sbb
xorl
and
int
test
ret
add
dec
mov
inc
loopne
xchg
or
and
das
and
jp
cli
shll
addb
jmp
jo
repnz
in
test
lahf
or
cmpsl
mov
inc
cmpsb
add
in
push
push
loope
mov
sahf
and
xchg
fbstp
jg
in
ds
cwtl
cmp
lahf
pop
out
das
icebp
insl
and
fiaddl
pop
shrb
push
lret
jge
out
lahf
push
push
mov
xor
dec
cmc
inc
ss
imul
pop
xchg
jnp
mov
mov
iret
negl
pusha
sub
es
lret
mov
in
into
std
fldl
mov
and
ror
sti
sbb
jno
sub
insb
jle
add
cwtl
rol
sbb
out
push
hlt
xchg
sbb
loop
pusha
cltd
out
xor
sbb
jmp
insb
call
xchg
xor
and
test
in
call
fcoms
mov
das
iret
mov
sub
ficoms
jmp
mov
ja
sub
outsl
fwait
add
inc
pusha
jae
sbb
stos
std
xchg
jns
cmc
mov
cmpl
icebp
mov
fwait
lss
cmp
insb
push
mov
cmc
push
and
inc
cmpsb
in
fs
cmp
jle
or
mov
out
inc
scas
mov
fisubl
cld
fsubr
and
ja
sub
xchg
push
cli
fistps
and
fs
int3
push
fs
mov
incb
movsb
cmp
mov
jecxz
adcb
mov
or
inc
pop
push
cwtl
jns
cmpsl
jb
pop
pushf
dec
jge
test
sub
fisttps
jg
and
pop
inc
inc
mov
jnp
push
and
sbb
mov
shl
add
cmp
cmpl
int3
mov
loopne
dec
adc
push
push
mov
add
rolb
mov
push
xor
sub
dec
loop
jmp
dec
inc
xor
das
stos
ss
pop
dec
fists
mov
inc
fildll
cmp
jb
mov
data16
mov
xchg
stos
adc
fisubrs
and
push
popa
daa
test
dec
mov
mov
cld
shll
lahf
xor
xorb
mov
data16
inc
dec
lcall
mov
std
hlt
outsb
std
mov
std
jo
pop
xor
ss
movsb
cmp
clc
mov
pop
popw
insb
cli
or
jns
popa
push
loope
addb
fwait
push
dec
pop
test
cmp
mov
fwait
mov
jg
lds
inc
and
jo
xchg
cmp
and
cwtl
push
jmp
mov
pop
mov
mov
lods
cmp
pop
xor
rolb
sarl
mov
aaa
insl
aam
lcall
stc
xchg
sub
jmp
cmp
loop
dec
jb
loope
adc
mov
mov
sbb
dec
cmp
lods
mov
mov
cmpsb
push
in
fsts
pop
xor
int
sub
mov
add
xchg
add
shll
call
out
into
in
mov
into
or
dec
inc
faddl
adc
and
icebp
jbe
xorl
test
int
or
rorb
xchg
push
cmc
dec
jnp
xorb
cmp
adc
outsb
sbb
xchg
mov
sbb
mov
push
lods
inc
dec
pop
ja
aad
jne
movsl
das
idivl
lds
inc
loop
xchg
dec
pop
nop
xlat
pop
inc
pop
out
shll
cmc
jl
lret
mov
inc
aad
jmp
mov
dec
inc
sti
jo
ficoms
xchg
mov
push
pop
xor
lods
dec
inc
add
xchg
pop
lods
dec
stos
add
insb
mov
daa
lcall
gs
inc
stc
pop
mov
ror
repnz
adc
jno
sub
mov
xor
or
insl
dec
add
push
xor
fiadds
mov
inc
dec
incb
sahf
ja
int
cmc
sbb
sub
push
js
mov
jb
adc
inc
testl
push
hlt
pop
sub
lods
cmp
push
daa
inc
dec
es
insb
lea
and
xchg
sub
testb
sbb
out
gs
pop
lret
dec
gs
mov
or
enter
into
sub
test
inc
xchg
sub
xchg
sbb
sti
rcrb
add
jns
and
or
add
jle
pop
insb
shlb
test
stos
jl
lret
mov
xor
jmp
outsl
and
xchg
out
test
mov
jns
push
out
push
sub
sbbb
scas
imul
mov
cmp
orl
pop
sahf
subl
shlb
push
scas
shlb
fs
bound
cmp
subb
pop
adc
jl
mov
cmp
adc
xchg
push
push
arpl
xorl
icebp
sub
pop
push
into
mov
or
outsb
testl
dec
cmp
lds
int
add
push
lcall
test
jge
std
xchg
pop
dec
jle
jp
mov
divb
cltd
mov
mov
sbb
xor
stos
lea
xchg
xorl
sbbb
repz
jp
cld
cltd
add
push
push
push
pushf
scas
clc
subl
pop
lods
sbb
rcrl
out
xor
arpl
push
add
pop
rorb
stos
inc
cmp
push
dec
in
ret
xchg
jmp
jg
out
mulps
sub
jne
sar
repz
std
pop
push
test
int3
divb
jp
mov
xor
lret
pop
inc
sbb
ret
outsl
not
je
imull
jb
stos
sti
pop
sbb
leave
call
lock
movsl
in
pusha
add
fildll
or
cmpsl
mov
movsb
pop
mov
ja
jmp
rol
stos
stc
out
xor
ret
jle
add
insb
add
cwtl
cmc
adc
ret
divl
fldenv
js
sub
add
mov
loopne
pushf
adc
mov
cmpsl
jp
lods
bound
clc
insl
adc
adc
and
loopne
jecxz
inc
lods
inc
pop
xor
cmp
rcr
push
adc
orb
xchg
and
sti
aaa
lret
xor
jmp
sbb
lret
add
and
push
fs
adc
xor
push
adc
push
xor
clc
mov
popa
stos
je
mov
aas
cmp
and
xchg
push
add
mov
addr16
popa
popf
cs
fisubs
in
cmpsl
mov
inc
out
inc
int
ja
inc
jl
xchg
and
test
mov
xchg
sub
movsb
cmp
ret
sbbl
leave
repz
mov
add
inc
pop
or
mulb
mov
push
or
jbe
insl
leave
pop
push
andb
or
mov
push
mov
dec
xor
pusha
addr16
adc
sub
sbb
adc
or
out
arpl
pop
or
outsl
pusha
cmpsb
dec
outsl
add
cmpsl
dec
push
ret
pop
loopne
cmp
jge
in
test
push
mov
cmp
sbb
push
repnz
test
mov
fs
addr16
int3
dec
aam
repz
push
mov
fstp
sbb
rclb
imul
sbb
das
or
scas
xchg
rcrb
inc
xchg
sub
push
movsb
xchg
addb
lret
or
aad
jno
push
push
or
mov
roll
push
adc
mov
cltd
stos
inc
and
loope
fdiv
cmp
out
rorl
mov
out
sbbl
xchg
push
in
je
flds
jmp
mov
pusha
subb
jo
mov
roll
inc
pop
insl
je
push
fxtract
popf
mov
dec
or
mov
rolb
push
lods
cwtl
fiadds
inc
lret
mov
icebp
ja
cmp
push
add
data16
cmp
and
pop
outsl
cltd
rclb
cli
gs
stos
arpl
ret
fnsave
jmp
ljmp
repz
lods
sub
push
pushf
and
xor
lahf
inc
and
rep
mov
rcrb
xchg
xor
mov
sbbl
idivl
in
add
dec
fs
orl
sarb
or
xor
xlat
mov
and
fisttpll
popl
fcoms
push
jle
xor
adc
xor
loope
out
xchg
repz
mov
idivl
add
daa
mov
xor
fistps
cmpsl
mov
mov
roll
dec
mov
mov
sahf
xchg
enter
sbb
mov
xchg
iret
inc
es
ud0
xchg
ret
mov
ret
gs
mov
mov
cmc
mov
jnp
mov
adc
fsubs
cmc
sub
jle
push
cwtl
pop
roll
sub
add
and
adc
adc
jg
inc
clc
pop
fisubl
loopne
insb
in
jnp
aaa
fisubrl
inc
xchg
jp
inc
xlat
jb
mov
ret
xchg
xor
mov
outsl
add
lret
mov
mov
orl
fcoms
lret
dec
jbe
in
xchg
pop
pop
in
je
adc
lea
jp
data16
cmpsl
fldt
movb
leave
jg
inc
pusha
out
jecxz
push
sahf
pop
mov
loopne
loopne
push
repnz
mov
push
or
subb
mov
or
xchg
pop
insb
cmp
cmp
jl
mov
popf
stc
mov
xor
jbe
jae
stos
push
xchg
xchg
stc
push
and
mov
or
xor
adc
lret
lret
popf
xor
mov
fsubrl
sub
std
push
imul
sub
mov
mov
insb
sbb
push
pop
loopne
lock
dec
dec
hlt
cmp
mov
push
add
sbb
loop
add
scas
test
adc
icebp
jo
mov
fucomip
subb
cmp
lahf
jl
shll
push
dec
dec
dec
inc
rcl
or
push
mov
mov
out
push
fwait
insl
fwait
dec
aaa
pop
dec
aas
jmp
mov
cwtl
test
imul
sbb
lods
dec
adcb
xor
ret
call
sbb
sti
cmpsb
ds
cmp
in
ljmp
fisttpll
mov
push
sub
xchg
pop
jg
sub
dec
inc
scas
mov
add
adc
xchg
cwtl
das
lds
cwtl
push
je
add
push
test
lret
and
push
mov
cmp
inc
push
mov
pusha
push
mov
mov
sub
ret
ret
or
lods
fsubl
addr16
cltd
shrb
loope
stos
fwait
orb
mov
sub
push
int
insb
in
popa
sub
xchg
repz
roll
pusha
mov
inc
cmp
into
rorl
mov
pop
inc
in
fmuls
inc
pop
adc
cmp
loope
mov
mov
add
lds
insb
add
jb
cmpsl
mov
test
add
sbb
lods
mov
push
jns
sbb
lds
jl
shrb
mov
mov
mov
inc
lea
sbb
stos
leave
nop
pop
push
ljmp
pushf
repnz
fdivrl
test
andl
aam
mov
jg
push
mov
xchg
fwait
pand
pop
jo
fsubrp
jp
jnp
sub
mov
roll
lret
stos
scas
pop
cmp
push
int
xor
mov
inc
and
ljmp
clc
repnz
pop
inc
les
pop
shrl
aad
mov
jns
push
sbb
lret
cwtl
fsubrp
jns
push
ds
outsl
aaa
mov
out
pop
push
cmpsb
or
gs
sub
rclb
test
pop
or
mov
jo
aam
cmp
lods
cmp
inc
notb
jne
and
ljmp
dec
and
mov
pop
push
mov
push
in
push
mov
pop
cmpsb
jecxz
fildll
mov
add
shll
ror
repz
arpl
mov
pop
fimuls
fidivrs
pop
cmp
add
add
fwait
lods
addb
inc
lock
das
ss
lret
sti
jge
clc
mov
push
iret
enter
mov
or
nop
pop
lods
xor
cmp
out
push
mov
jl
je
lds
and
pop
inc
sbb
xlat
sbbb
rorl
call
adc
pop
incb
xchg
das
das
notb
daa
xor
icebp
and
loope
and
mov
jg
lea
or
in
sub
mov
mov
notb
dec
dec
sahf
das
cmp
pop
or
or
add
sbb
out
loopne
dec
movsl
sbb
sub
push
jbe
imul
xchg
pop
dec
inc
rsqrtps
dec
pop
rorb
push
aaa
and
dec
inc
mov
cli
lahf
enter
xor
cmpsl
jge
push
sbb
aaa
sbb
pop
mov
cwtl
xchg
and
mov
jbe
push
ljmp
pushf
sub
mov
ficoms
or
jne
sti
pop
inc
xchg
jmp
testl
xchg
cmc
mov
dec
mov
mov
js
stos
inc
push
out
push
xor
inc
hlt
pop
sub
jl
mov
and
pop
xor
sahf
stc
sbb
popf
dec
pushf
xlat
mov
xchg
dec
rcrl
jecxz
icebp
jbe
dec
cs
pop
insb
mov
xchg
mov
popf
cwtl
xor
add
jl
mov
movsb
mov
iret
data16
pop
jnp
test
lcall
jl
test
fisttpll
nop
mov
ja
inc
push
mov
xor
lret
lea
xchg
in
and
stc
dec
cmp
mov
dec
jl
inc
loopne
fdivrl
enter
mov
loope
aas
mov
push
pop
sti
push
loope,pt
mov
jns
add
sbb
jbe
inc
xlat
repz
pop
test
fnstenv
mov
inc
push
ret
push
in
aam
jg
dec
pop
bnd
xor
ljmp
pop
loope
xchg
xchg
iret
lret
xlat
push
lahf
nop
add
push
pop
xor
imul
shrb
loope
cmp
in
je
mov
cwtl
loop
insb
leave
or
cmc
divb
mov
push
jo
movntq
sahf
inc
push
jge
dec
cwtl
das
jl
adc
pop
cmp
jp
lock
xlat
push
loope
out
fistps
mov
add
enter
andl
xor
fs
or
pmuludq
loopne
push
push
in
mov
pop
lds
cmp
inc
aad
lcall
iret
jb
cmp
push
sub
icebp
xor
cwtl
xlat
sbb
mov
sbb
add
mov
inc
adc
sub
pop
mov
inc
int3
sub
out
popa
xchg
mov
sbb
sbb
inc
adc
addr16
pop
cltd
sub
dec
push
and
xorl
in
mov
mov
add
decb
call
lret
push
lea
in
fidivl
add
jne
andb
mov
pusha
cli
mov
adc
and
jp
test
icebp
stc
add
sti
mov
xchg
idivl
loop
rcrb
dec
push
mov
subl
stos
lock
pop
popa
clc
repnz
add
es
dec
mov
mov
pop
mov
sti
shlb
clc
push
mov
test
and
ljmp
and
jl
mov
cmp
push
ret
jb
push
hlt
or
test
es
mov
lods
dec
xor
jnp
neg
out
and
movsl
xor
inc
xchg
shr
add
jmp
sbb
popf
cmp
das
mov
xor
xchg
jnp
pop
fidivs
lock
dec
cmp
filds
lods
xor
cmovl
lret
dec
or
imul
and
xchg
cs
js
cmp
dec
loope
add
stos
xchg
fisubl
cmc
aad
mov
les
negb
mov
jmp
insb
sbb
test
mov
jnp
xchg
ss
adc
add
sbb
stos
idiv
in
movsb
pop
xor
into
fsubs
or
xchg
imul
add
dec
jnp
aam
mov
mov
loop
cmc
cmc
out
jl
rcrl
or
pop
fcomip
outsb
jmp
shlb
mov
add
movsb
mov
mov
aad
scas
iret
sub
mov
mull
les
lock
adc
or
or
cltd
ja
movsb
jno
insb
and
add
add
dec
iret
and
jl
out
jp
dec
lods
xlat
jmp
push
mov
push
jl
fcoms
pop
pop
gs
in
xchg
cmp
mov
inc
je
gs
mov
and
es
mov
aam
cmp
repz
or
aam
repnz
pop
mov
jb
push
and
jl
push
mov
fldcw
imulb
ljmp
jae
pop
cwtl
sbb
jecxz
fnstenv
mov
jns
inc
sub
dec
stos
pop
in
test
mov
inc
adc
or
mov
xchg
daa
push
jne
jns
sbb
sub
fmuls
inc
ja
js
pop
idivb
fidivrl
or
cmp
out
push
mov
sbb
xchg
inc
loope
call
or
adc
sub
dec
gs
dec
call
or
sub
les
jno
repnz
pop
rcl
push
mov
int
ficompl
jo
sti
lret
xchg
idivl
aad
xor
pushf
in
pop
cmpsb
cmp
insl
pop
ret
cmp
stos
stc
dec
stos
push
adc
mov
adc
movsl
repz
std
push
rclb
ds
sti
or
pop
sub
xlat
push
js
aaa
mov
int3
ds
rorl
inc
push
pop
imull
inc
adc
or
cmp
add
fdivrs
sub
lods
fidivs
test
outsl
aad
mov
mov
das
add
scas
sti
psraw
push
addr16
fs
push
ljmp
pop
lret
test
sbb
dec
cmp
pop
subb
cmp
mov
cmp
aaa
int3
pop
sbb
and
jp
mov
outsb
arpl
sub
cmp
arpl
jmp
or
jnp
mov
push
ljmp
pop
int3
sbb
xor
leave
test
insl
pop
sbb
lock
cmc
sub
or
je
push
mov
adc
leave
cmpps
popf
inc
mov
push
cmp
xchg
mov
lcall
hlt
add
fsubl
pop
dec
pop
data16
adc
pushf
push
mov
push
pop
mov
xor
jmp
mov
xor
enter
test
mov
arpl
pop
aam
pause
jge
adc
xchg
jns
out
in
cmpl
dec
sbb
cmpsb
addb
jle
mov
inc
inc
or
cmp
pop
scas
scas
lea
inc
iret
fildl
int
call
and
jecxz
idivb
leave
inc
xor
cli
lahf
mov
testl
jb
inc
movsb
mov
data16
lcall
jno
jns
mov
jp
out
xchg
push
mov
inc
add
movsl
mov
mov
es
stc
mov
std
mov
popl
mov
mov
inc
rclb
out
enter
outsb
data16
js
and
sbb
sbb
in
orb
cmp
rcll
in
xor
in
arpl
inc
fistl
mov
js
bound
cs
stos
cwtl
sahf
inc
cmpsl
mov
jge
add
popf
hlt
xorb
shrl
xor
sbb
xchg
jns
lahf
jno
call
xchg
mov
push
adc
adc
xlat
sbbb
scas
xchg
mov
jbe
push
or
imul
pop
add
repz
jecxz
xchg
insb
or
xor
and
lret
jmp
xor
data16
cwtl
or
mov
pop
rolb
pop
jp
fdivrs
cmp
sub
fstpt
adcb
ja
movsl
push
leave
cmpsl
jle
les
cmp
test
push
mov
stc
sbb
dec
inc
scas
sbb
out
in
cmp
sahf
outsb
add
sub
push
xchg
mov
sbb
test
aas
mov
xchg
in
cwtl
push
test
xchg
cmc
push
pop
inc
xchg
popa
out
push
xchg
stc
and
push
ret
in
sub
out
adc
jle
popa
clc
jns
push
lods
and
cmpps
mov
xor
fsts
scas
loop
jns
adc
pusha
mov
sbb
push
xor
cmp
xchg
inc
rcll
sbb
xchg
sbb
mov
dec
jo
jb
jg
loope
test
fucomp
out
xchg
and
jae
insb
xlat
or
sbb
mov
and
xchg
jecxz
mov
add
test
cwtl
jns
xchg
jno
or
pop
cmp
sbb
jl
sbbl
daa
mov
lods
icebp
gs
rcl
xchg
inc
ljmp
call
fimuls
ret
and
push
lods
pusha
neg
xor
iret
sahf
cmp
pop
outsb
mov
pop
adc
pusha
sarl
mov
add
pop
dec
scas
daa
cmp
imul
mov
sbb
out
addr16
add
mov
xor
push
jmp
and
or
adc
pop
ds
mov
add
fisubl
sub
mov
xorl
or
mov
stos
aam
mov
divb
xchg
push
dec
mov
push
pcmpeqd
lret
stos
cmp
jbe
sbb
lret
dec
mov
xchg
out
push
insl
cmpl
daa
sbb
rcrb
xor
push
in
push
insl
rol
cmp
or
push
flds
adc
jb
mov
shll
push
adc
mov
mov
add
sarl
xor
jl
push
out
sahf
mov
daa
subb
das
push
rorl
lods
dec
mov
ret
dec
pop
fmul
int
pop
cmpsb
jge
pop
pop
ret
add
in
mov
pop
dec
adc
out
mov
jbe
push
and
add
push
sub
push
or
cmp
mov
add
xchg
stc
jecxz
lret
push
mov
ljmp
inc
push
add
pushf
push
js
test
gs
fcompl
out
jne
xchg
dec
jecxz
hlt
mov
push
lock
rcll
push
mov
sbb
xor
cltd
dec
dec
add
xchg
in
ret
dec
dec
mov
nop
in
push
insl
xchg
mov
out
jg
push
xchg
inc
lods
sbb
sub
repz
and
inc
fidivl
cli
sbb
mov
cmp
and
and
sub
push
in
aas
xchg
jmp
dec
out
in
inc
in
ret
sbb
fdivrl
aaa
jmp
in
repz
lods
les
cmpl
repnz
ds
jle
fs
in
clc
repz
insb
das
xchg
inc
xor
jmp
fstpl
ret
sub
imulb
shll
cmp
add
fbstp
scas
sarb
jbe
sbbl
inc
in
imul
xor
mov
sbb
xchg
ret
push
mov
sbb
pop
push
mov
dec
sub
or
sbb
cmc
cmpsb
jmp
add
push
xor
or
scas
pop
loopne
cmpsl
out
add
imull
jno
clc
adc
and
jno
push
push
inc
push
or
hlt
mov
inc
inc
xor
nop
daa
mov
push
xor
aas
sub
rcrl
fdivl
jecxz
inc
fdiv
aam
aas
scas
sbb
mov
addr16
test
inc
push
scas
jo
mov
adc
xor
clc
nop
scas
inc
push
jp
mov
scas
int
cltd
add
push
bound
fsubrp
push
repz
das
and
or
dec
divb
or
fs
rcll
mov
push
rolb
dec
loopne
push
ljmp
call
jl
orb
jb
cwtl
pop
scas
repz
mov
in
out
jo
mov
push
mov
mov
into
mov
cmp
out
je
sub
pop
fidivrs
or
push
jbe
adc
mov
or
out
xor
repz
pop
push
pop
hlt
fsubrp
pop
push
jl
stc
notb
gs
insl
or
pcmpgtw
insl
push
sbb
icebp
adc
test
jne
sub
stos
lret
scas
add
je
xchg
sub
lods
dec
in
adc
xor
stc
iret
inc
inc
inc
sbb
sub
int
pop
xor
inc
cmpsl
lret
aam
sbb
mov
pop
fwait
lock
jnp
mov
push
jns
jne
push
icebp
cmp
mov
rcrl
in
orl
or
daa
xor
orl
cmpsl
orl
or
sbb
and
stos
jno
fwait
sbb
xchg
pop
add
int
repnz
mov
xchg
inc
adc
dec
mov
cmp
lock
fisubrl
cmpsl
push
es
and
xchg
push
xor
mov
xchg
sub
mov
xor
pop
push
pop
mov
hlt
pop
icebp
daa
int3
cmp
sbb
jl
test
sbb
jb
cmp
adc
and
mov
inc
test
lret
in
outsl
sub
lock
daa
repz
mov
adcb
cmpsb
inc
or
adc
les
mov
mov
push
pop
jecxz
sbb
sbb
jnp
mov
jecxz
cmp
pop
call
jae
sbb
icebp
test
arpl
xchg
jb
in
push
or
out
mov
mov
push
push
lds
sub
cmp
clc
rep
mov
pop
jmp
pop
adc
pop
into
movsb
mov
je
lds
sbb
aas
or
cmp
jg
pop
mov
pop
lret
in
dec
int
adc
push
mov
push
insl
push
and
std
xchg
pop
pop
lock
cmc
sbb
mov
push
pop
adc
inc
stos
xor
xor
sub
inc
adc
pop
pop
and
sbb
out
mov
push
loope
leave
adcl
fcompl
mov
out
test
pusha
fistl
adc
inc
xchg
mov
inc
xchg
push
frstor
mov
cmpsl
imul
lahf
lods
mov
out
addr16
pop
lcall
in
test
add
push
cwtl
pop
out
aaa
iret
pop
std
pop
xor
shrb
and
testl
orl
add
std
sbb
and
mov
rcrl
jg
push
andb
call
cmp
in
and
sub
stos
pop
inc
fdiv
jecxz
xor
sbb
fsubp
scas
mov
mov
in
sbb
cmpsb
movsl
lret
adc
in
inc
pop
cmp
fldenv
xor
cmp
mov
repnz
mov
aaa
into
or
jl
imul
loopne
mov
and
push
cmpsl
push
dec
les
jns
pop
scas
rorl
mov
cmpb
shll
repnz
lret
jb
shlb
adc
push
jp
mov
js
shlb
push
pop
xchg
rcrb
adc
mov
xor
imul
xchg
shl
std
sub
jge
imul
mov
jo
and
aam
jge
pop
out
sahf
lods
mov
sbb
push
xchg
mov
add
push
shll
mov
add
stc
pop
xor
jne
adcb
xchg
mov
ja
and
jecxz
movsl
cmpl
mov
mov
jle
in
scas
jle
clc
lcall
xchg
mov
in
fsubrs
int3
hlt
fwait
js
sbb
push
ret
lcall
dec
aaa
jle
cltd
mov
adc
lock
mov
sbb
ss
cmp
sub
fidivrs
es
cmpsl
mov
and
rcr
test
fs
test
jle
popa
repz
dec
or
inc
jb
bound
xchg
into
lds
jo
rclb
pop
sar
notl
adc
fstpt
rorb
cmp
jno
in
pop
sbb
push
nop
leave
add
and
jecxz
mov
and
dec
aaa
adc
pushl
rcll
xor
out
cltd
loope
aad
inc
push
gs
push
xorl
mov
or
aad
mov
jp
mov
jle
adc
outsb
data16
daa
push
arpl
lret
ja
scas
push
push
mov
mov
cmp
loopne
adc
movsb
add
sbb
call
repz
xchg
mov
inc
sub
daa
loop
jecxz
xchg
mov
out
add
out
sbbl
cmp
sub
jbe
mov
pusha
ret
ret
adcb
ja
dec
popa
dec
and
push
cmp
mov
sbb
pop
mov
in
fbld
outsl
popa
jo
or
leave
loop
imul
push
call
xchg
lods
outsl
mov
repnz
arpl
push
outsl
inc
mov
orb
mov
jae
inc
inc
xchg
jns
aas
mov
das
mov
pusha
pop
sti
jne
movsl
jle
mov
xor
push
fnsave
mov
cld
xchg
fsubrs
xlat
push
mov
sbb
imul
push
adc
sub
mov
in
mov
in
pop
in
xchg
mov
int
cmpb
hlt
scas
and
dec
adc
hlt
jbe
shl
sbb
xchg
push
push
jle
stos
inc
push
lcall
and
test
cmp
sbbl
pop
sub
mov
nop
dec
jmp
jl
jmp
mov
ror
add
scas
outsl
add
sbb
pop
arpl
pushl
sbb
inc
cltd
sarl
inc
fdivl
xor
jmp
cmp
pop
push
jae
dec
sbb
xchg
mov
pop
pop
mov
jne
fists
sbb
pop
cltd
std
mov
das
mov
adc
scas
or
dec
pop
dec
lods
mov
lds
hlt
jg
aad
jmp
push
in
jg
dec
and
mov
sbb
xchg
jge
shrb
inc
pop
add
sub
test
and
bound
or
jo
mov
xchg
mov
jno
rclb
jno
lahf
ss
xchg
test
or
cmpsl
adc
pop
cmp
sub
adc
mov
mov
sbb
pop
cwtl
xor
push
cmp
in
movsl
inc
dec
cmp
mov
cmpsb
cmpsb
sub
fwait
sbb
insb
push
jae
xchg
cmpsb
in
pop
lods
jmp
fiadds
push
add
hlt
nop/reserved
jb
xor
icebp
add
mov
mov
es
cld
push
xor
fisubs
mov
mov
pop
mov
jo
hlt
mov
dec
sub
xor
jo
cltd
and
stos
xor
ffree
sbb
add
aas
mov
out
inc
nop
add
mov
fs
xor
push
push
add
jae
pop
jmp
cmp
mov
rcl
mov
or
mov
mov
in
pushf
mov
dec
cmp
mov
xchg
int
stc
or
testb
push
pop
sub
shlb
loopne
das
pop
pushf
pop
out
cmp
mov
icebp
out
mov
adc
gs
add
cmp
pop
sub
in
jbe
mov
out
sbb
jno
inc
icebp
leave
mov
add
and
loope
call
sbb
push
loopne
fwait
jmp
mov
and
sbb
inc
decl
cmp
notb
mov
test
mov
hlt
pop
inc
sbb
int3
fstpt
xchg
mov
rol
jnp
call
mov
test
ljmp
dec
inc
push
fmull
jmp
pop
cmp
or
cli
dec
cmp
orb
adc
add
mov
cmpsb
push
jl
lods
cmp
sbb
repz
pop
or
stos
in
dec
mov
dec
mov
jge
push
mov
mov
inc
test
cmp
in
pop
repz
sbb
pop
fildll
dec
es
dec
js
mov
mov
sbb
lods
adc
test
in
fldcw
xor
int
mov
divl
dec
daa
cli
inc
mov
jp
mov
add
mov
sub
lcall
shl
xchg
add
popl
mov
xchg
repnz
lahf
and
xchg
xorb
nop
adc
pop
cmp
je
mov
loopne
add
out
adc
ss
cmc
adc
jae
push
mov
add
cwtl
push
jbe
sarl
repnz
sti
jno
add
outsl
cli
les
xor
es
lea
jns
int3
shr
xor
push
or
test
insb
scas
push
and
mov
and
lods
cltd
push
adc
and
sub
and
out
dec
int
xor
jae
push
mov
pushf
movsb
test
ss
or
call
and
and
xor
push
hlt
cwtl
pop
imul
and
clc
or
adc
lret
lret
fsts
jmp
cmp
insl
insb
mov
xchg
pop
addr16
sub
movb
sbb
inc
sbb
dec
std
pop
push
fucomi
cmpl
jae
jl
js
add
iret
cmpsb
pop
mov
sbb
faddl
fwait
jb
and
loope
sar
push
mov
push
cmp
out
jae
lods
adc
xlat
xchg
and
mov
mov
incl
mov
jno
fstpl
mov
fisubl
jecxz
outsb
cltd
sarl
iret
shlb
mov
clc
sbbl
or
sbb
push
or
mov
addr16
pusha
pop
or
fstpt
add
lods
adc
mov
cs
or
mov
add
insb
mov
or
mov
gs
sbb
in
add
aad
fstpt
int
mov
bound
sbb
test
das
and
lods
mov
xorb
xchg
push
sbb
out
xchg
cld
push
fisttpl
out
sub
jl
sub
cmp
ret
add
jnp
dec
push
jb
nop
xchg
adc
push
push
imul
pop
cmp
xor
pop
cmp
and
add
xchg
push
mov
lret
nop
stos
pop
daa
sbb
mov
setae
inc
aas
mov
adcl
pop
jmp
adc
adc
xor
fidivrl
xchg
mov
add
cmc
sbb
push
xchg
out
adc
inc
mov
sbb
jne
repz
outsb
loope
pusha
jb
inc
loope
cmp
sysenter
mov
fbstp
add
push
xchg
sub
test
lahf
push
clc
pop
sub
jg
pop
es
in
push
adc
and
sub
pop
or
push
jecxz
cmp
cld
dec
pop
fidivs
lret
mov
iret
insb
mov
mov
js
sub
and
mov
mov
mov
ds
leave
mov
push
add
xor
je
shrl
aad
and
daa
out
cld
outsb
loope
push
xor
jae
mov
xlat
push
adc
or
cmpb
adc
mov
mov
dec
into
mov
xlat
xlat
mov
es
fucomip
pusha
lds
fstps
xor
cli
mov
notb
xchg
das
mov
mov
or
pop
jne
lcall
scas
dec
xor
or
fld
jg
test
nop
stos
int3
or
cmp
fwait
insl
iret
and
cli
pop
daa
add
mov
scas
or
aam
jge
or
inc
or
sub
adc
arpl
fs
out
mov
ss
scas
pop
mov
inc
es
fs
pop
push
mov
push
pop
and
or
outsl
mov
fdivrl
pop
in
lods
rclb
in
mov
pop
into
mov
cltd
lock
or
mov
shrb
sub
hlt
inc
mov
xchg
mov
and
sub
scas
repnz
inc
adc
in
sbb
push
outsl
dec
or
mov
and
jle
add
cwtl
jmp
or
jns
out
test
pop
cmp
loop
ds
scas
or
sub
idivb
xchg
hlt
add
aad
push
sub
dec
dec
iret
out
sbb
xchg
out
int3
loopne
xor
imul
fs
popa
sarb
mov
cwtl
push
adc
push
subl
pop
or
mov
js
jmp
testb
push
inc
xchg
mov
sbb
add
inc
jecxz
mov
ja
out
xlat
aad
adc
scas
scas
out
loope
xor
out
data16
inc
aaa
clc
dec
fucomi
stc
push
in
inc
shlb
jb
mov
int3
jg
mov
and
sbb
pop
jg
cld
mov
imul
pop
scas
mov
pop
mov
loope
test
sbb
xchg
popa
divl
das
inc
mov
paddw
call
sahf
xor
adc
xor
or
push
gs
ljmp
je
xlat
outsb
xchg
xor
or
inc
arpl
bound
xorl
sahf
in
rcrl
xor
sbb
lret
pop
bnd
cli
mov
arpl
jecxz
fnstenv
xchg
imul
cmp
mov
data16
cmpsb
add
fwait
pop
xorb
loope
push
cmp
cld
out
mov
mov
int3
adc
bound
mov
jb
adc
gs
call
jp
mov
cmp
shlb
sbb
pop
and
sti
leave
iret
hlt
push
cmp
stos
rcl
lods
xor
mov
sbb
mov
mov
mov
jl
mov
dec
insb
out
je
inc
loopne
xchg
jbe
xor
adc
mov
xchg
dec
enter
push
test
mov
cmp
push
mov
xlat
outsb
or
and
imul
pop
jno
mov
add
js
sbb
dec
pop
addb
cltd
push
mov
int
repz
mov
xchg
jge
adc
add
test
mov
push
push
jbe
fs
add
int
lock
mov
rcrl
mov
insl
scas
pop
jnp
mov
mov
mov
sub
pop
cmc
add
popf
xchg
cmp
pop
cltd
mov
dec
out
mov
mov
popa
icebp
ja
call
mov
sar
fidivrl
cmp
lret
jmp
sbb
mov
rcr
adc
adc
add
insb
test
cmp
pushf
mov
cmp
int
mov
mov
mov
push
jno
jle
sahf
stos
pop
mov
in
inc
dec
cmc
sbb
fbstp
clc
stos
lcall
inc
cwtl
test
mov
push
imul
sarb
les
mov
aam
mov
arpl
fimull
pop
jg
mov
nop
push
sbb
cmpb
xchg
push
flds
jmp
aaa
aas
les
rorl
mov
push
push
and
sub
push
inc
rclb
outsb
adc
imul
les
mov
add
enter
dec
mov
lea
cli
push
push
out
pop
fadds
decl
mov
fnstenv
int
das
pop
repz
push
fwait
daa
jno
mov
test
mov
mov
ret
add
adc
push
lods
jbe
clc
xor
xor
push
sahf
loopne
nop
movsb
xchg
inc
shll
cmp
ljmp
shl
and
arpl
jp
mov
je
mov
and
shrl
ret
xchg
out
or
repz
sub
popa
mov
call
mov
cmc
cs
mov
dec
movsl
aaa
aad
xor
cmp
xchg
inc
jecxz
dec
or
mov
es
and
dec
push
mov
sti
fsts
insb
jmp
and
jl
jl
sbb
in
sub
inc
add
pop
xor
aad
sbb
jge
pop
pop
mov
fwait
incl
xor
or
pop
movsb
popf
int
fnsave
sub
ljmp
test
sbb
add
in
mov
out
xor
aam
push
jbe
jg
pop
aad
sub
mov
fnstsw
mov
inc
mov
xchg
or
dec
test
pand
add
xor
fdivs
loope
adc
js
jo
inc
add
jp
mov
mov
enter
xor
sarb
or
jno
push
int
scas
insl
test
sbb
ja
leave
adc
fists
xor
sbb
out
jne
lahf
ss
sbb
imul
cmpsb
loope
in
jnp
pop
popa
mov
jecxz
ljmp
mov
push
test
mov
push
addb
mov
hlt
out
pop
xor
mov
addb
inc
pop
xor
mov
inc
outsb
adc
aaa
rorl
inc
cmp
idivl
fwait
neg
inc
aad
std
sti
jge
das
xchg
ret
jnp
insl
add
into
and
and
mov
adc
cltd
xchg
inc
or
adc
das
push
xor
push
jo
loopne
cwtl
cmp
jae
mov
cli
xchg
or
xlat
add
jo
clc
sub
xchg
and
push
ss
and
push
inc
fwait
das
add
add
add
xlat
push
cmp
and
xor
test
addr16
cmp
int3
mov
fs
roll
sub
rcrb
daa
or
dec
push
jmp
or
adc
mov
push
lock
jne
push
cmpsl
cmp
jnp
cwtl
mov
pop
test
mov
mov
popa
or
mov
push
out
adc
inc
pop
pop
cmp
int
shrl
movsb
xchg
out
pusha
mov
fcomip
test
pop
ficoms
and
jns
add
in
sbb
xchg
jge
aaa
push
mov
add
jge
pushf
inc
sub
pop
pop
rorl
divb
out
push
mov
push
add
mov
ret
sbb
jnp
dec
ds
jl
sbb
ljmp
orb
aad
mov
arpl
int3
mov
fildll
and
int
xchg
std
js
stos
cmpsb
maxps
ret
sub
pop
cmp
jmp
xchg
aaa
ret
mov
push
sahf
push
rclb
out
push
std
fmulp
push
cltd
leave
test
lods
outsl
jns
subl
push
adc
movsb
into
pop
dec
sbb
push
loope
rcr
sbb
pop
rorl
lcall
out
lock
lods
sbb
adcl
push
and
inc
mov
in
inc
xchg
add
ds
lods
shlb
push
arpl
mov
mov
call
pop
dec
mov
push
xchg
negb
js
in
jns
shl
push
xchg
pop
imul
stc
add
jno
push
mov
adc
mov
mov
inc
inc
sub
cwtl
mov
xor
xchg
cmp
mov
pushf
call
sub
dec
jne
add
addr16
je
cltd
xor
imul
outsb
into
pop
jl
nop
cld
sbb
imull
es
sbb
add
cmp
mov
icebp
cmpsb
loopne
enter
pop
cmpsb
shrb
or
std
or
test
daa
mov
ljmp
imul
dec
mov
mov
pop
ret
lret
cld
xor
pop
jmp
fidivs
popa
xor
mov
add
pop
bound
mov
adc
xchg
shl
rorb
scas
rcrl
jbe,pt
mov
iret
cmp
xchg
outsb
sahf
sbb
cmc
int
mov
iret
pop
fists
std
addr16
ds
adc
out
mov
mov
aas
in
sub
mov
faddl
into
movsb
mov
fcmovbe
lods
mov
add
inc
or
mov
pop
xor
pop
sbb
mov
xchg
mov
mov
xchg
roll
test
shll
js
mov
or
cli
fistps
dec
icebp
mov
fists
adc
dec
cmc
dec
repz
lret
and
jbe
lock
or
cmp
sub
push
mov
cwtl
ja
pop
pop
imul
dec
fnstsw
pusha
lahf
inc
mov
jle
test
pop
and
jle
and
add
push
xchg
inc
and
mov
mov
push
cs
lods
dec
out
mov
daa
ljmp
dec
loopne
jae
shlb
sbb
jmp
divb
scas
pushw
adc
xor
lret
mov
xor
cwtl
xchg
dec
ds
jg
out
dec
nop
popf
jno
dec
nop
add
xor
stos
push
xor
testb
ds
and
mov
test
mov
sbb
loope
jne
or
and
push
dec
adcb
cwtl
int
dec
arpl
adcb
push
insb
insb
sub
pop
pop
lds
repz
imul
pop
popa
stos
xor
and
lcall
or
jbe
jmp
loopne
into
shlb
lret
xlat
out
ja
loopne
or
mov
jbe
ljmp
cmpsb
or
sbbl
nop
negb
pop
cmp
cmc
lcall
loope
inc
jecxz
test
push
pop
xor
xor
add
xor
inc
out
jmp
out
in
test
xchg
imul
inc
into
mov
rolb
push
sub
lods
nop
shr
imul
enter
cmp
adc
mov
or
stos
ja
jmp
pop
adc
dec
mov
push
mov
pop
leave
in
xor
leave
arpl
fwait
sbb
shrl
mov
repnz
je
pop
adc
sbb
fistl
sbb
or
cmp
or
in
cmp
jl
sbb
and
xchg
mov
pop
fisubl
imul
push
insb
xor
arpl
mov
adc
pop
mov
call
pop
and
loope
orl
nop
pop
scas
sub
xchg
repnz
fnstcw
ror
push
cli
pusha
dec
fisttpl
or
outsb
jne
cmpsb
enterw
test
jecxz
bound
dec
add
ror
insb
fsts
mov
adcl
mov
xchg
loope
pop
cmp
add
fdivs
cmp
sbb
cmp
test
cmp
pop
fidivrs
arpl
xchg
outsb
je
ret
push
lods
test
push
mov
les
xchg
xorl
test
subb
pop
sahf
cmpsb
andb
xor
scas
notl
clc
pop
aaa
scas
inc
arpl
arpl
push
ljmp
repz
dec
test
stos
inc
movl
pusha
sbb
cmp
adc
jecxz
push
insl
lcall
mov
adc
int3
arpl
and
add
insl
add
adcb
push
push
scas
push
add
mov
mov
pop
sahf
int3
jg
cltd
push
pop
popa
aam
push
or
push
mov
push
mov
lret
test
call
cld
pusha
xchg
mov
fldcw
push
mov
cmc
mov
lods
pop
jb
shrb
xchg
mov
jne
bound
and
push
test
cmpsl
imul
push
loopne
xchg
scas
mov
mov
sbb
inc
mov
push
pop
push
and
sub
jae
xor
test
cmp
jbe
sbb
ret
push
xchg
mov
stc
adc
add
xor
lds
xchg
sbb
jno
push
adc
sbb
lret
test
rcll
pop
and
xor
out
sbb
jae
jl
sub
inc
fcmovbe
imul
adc
lods
test
ss
jae
cmpsl
cmp
sbb
imul
out
adc
add
push
or
loopne
into
xchg
push
nop
mov
dec
gs
jp
fsubrl
fdivp
mov
int
ror
test
pop
sub
or
or
cmp
mov
test
insl
loop
pop
inc
out
mov
loopne
mov
add
jmp
out
sub
mov
test
adc
pop
or
mov
jg
std
test
mov
jb
out
add
js
xor
lea
jp
out
std
push
xor
sbb
adc
cmp
mov
xchg
push
jg
mov
adc
xchg
ficoms
jns
test
mov
fimuls
jecxz
loope
insb
mov
and
jb
cmp
mov
jno
inc
frstpm(287
xchg
push
rcll
adc
insb
je
or
fcmovnu
imul
adc
cltd
incb
xor
mov
cmpsb
xchg
mov
repz
xchg
lods
into
fincstp
mov
or
add
push
fs
or
push
dec
dec
xchg
mov
pusha
dec
cmp
popa
incl
sbb
jne
sti
pop
leave
and
cmc
jg
leave
cmp
dec
jecxz
outsl
mulb
push
pop
addr16
mov
adc
mov
imul
sbb
mov
push
mov
loopne
call
mov
xchg
pop
lcall
out
sbb
daa
movsl
sub
dec
jl
ret
rorl
jge
sub
inc
xchg
add
cmpsl
out
mov
push
rclb
xor
lds
cltd
mov
iret
data16
jno
and
fcmovb
sbb
in
cmp
ds
and
rorl
gs
shrl
add
or
mov
imul
mov
dec
cmp
mov
adc
push
insl
lea
jnp
je
mov
lods
fildl
sbb
loopne
lea
pop
sub
imul
imul
jle
mov
out
lods
fwait
jmp
sbb
push
fsubrl
test
adc
ret
fbstp
jl
push
push
mov
push
mov
push
loopne
adc
test
mov
into
lcall
sbb
adcb
leave
int
repz
xrelease
inc
pop
or
mov
adc
or
sub
adc
pusha
jnp
push
rclb
and
jg
cli
fwait
repnz
xchg
pushf
test
lret
sub
mov
adc
inc
xchg
in
inc
inc
data16
outsb
insb
test
mov
fists
sub
fsubrs
pop
and
cmp
dec
stc
inc
mov
out
jbe
pushf
push
push
dec
fldt
pop
add
ss
pop
sbb
movb
sub
jp
jge
adc
add
rolb
std
scas
mov
icebp
dec
jge
jecxz
mov
mov
lods
inc
cwtl
push
mov
inc
cld
into
cmp
icebp
lret
rcrb
filds
mov
imul
int
push
add
orb
xchg
sub
or
and
push
mov
sub
out
mov
arpl
dec
cmp
dec
pop
pop
dec
test
addr16
cwtl
cmc
out
cltd
das
mov
cli
push
mov
mov
inc
pop
iret
mov
repnz
outsb
dec
icebp
inc
lds
xor
incl
mov
in
popf
inc
push
mov
xchg
es
dec
mov
mov
xor
fstl
xor
mov
jo
aad
fidivrl
daa
push
fwait
insb
in
sub
pop
dec
lods
aam
sub
mov
push
inc
stos
rorb
sub
fcmovnb
lods
dec
adc
outsb
jl
je
pop
or
jge
stos
mov
jns
sbb
or
adcl
dec
inc
decl
scas
call
sbb
pop
mov
movsl
icebp
or
dec
or
sub
add
mov
sbbl
adc
xor
jnp
fbld
jo
push
sub
call
movsb
xabort
jbe
divl
mov
push
dec
or
popa
jmp
cld
sub
cld
inc
sbb
or
jb
mov
hlt
cmpsl
push
stc
cmp
loop
faddp
cwtl
add
pusha
in
fldt
pop
ficoms
mov
shrb
je
divl
fwait
movsl
imul
mov
lods
pop
cmp
jb
push
movsb
fs
popf
shlb
mov
jns
sbb
in
mov
outsb
jle
jne
mov
js
push
out
pop
ja
or
movsb
aam
lock
pop
out
push
insb
sarl
ficomps
add
dec
cmp
add
mov
mov
imul
pop
jb
or
mov
out
lds
inc
cmpsb
hlt
jge
xchg
sbb
call
add
mov
adc
ds
out
mov
mov
cmp
dec
and
sub
dec
idiv
stos
mov
sbb
outsl
dec
push
cmp
jg
jae
les
enter
test
fidivs
lods
arpl
mov
fwait
loop
int
lcall
daa
clc
cltd
adc
dec
data16
jbe
jp
hlt
arpl
sub
ljmp
fisubrl
cmp
fnstcw
or
add
jle
outsb
aaa
int3
repz
or
cmc
adc
call
aaa
in
cli
fnstenv
lret
or
enter
mov
gs
daa
pop
xchg
leave
mov
jg
push
rclb
mov
jge
out
lcall
sti
and
cwtl
hlt
loopne
pop
loop
inc
lcall
and
lcall
cmpb
out
out
aam
xchg
sub
xor
and
xchg
xchg
pop
pop
mov
into
add
aad
aaa
jb
adc
sbb
ds
jmp
sub
lret
xchg
sub
fstl
mov
mov
or
lahf
mov
fbstp
ret
mov
int
cmp
or
xlat
sub
pop
mov
imul
cmp
jl
daa
outsl
dec
popf
pop
and
mov
mov
ljmp
push
pusha
pop
or
test
and
mov
inc
dec
mov
xchg
mov
rclb
or
mov
mov
out
out
cmp
ss
xchg
rclb
nop
dec
mulb
stc
xchg
jb
repz
cli
push
sub
ret
fisttpl
xorb
cld
and
imul
inc
jnp
loopne
bndstx
add
icebp
jne
sub
leave
dec
and
lahf
cs
sbb
add
in
adc
es
cwtl
pop
imul
test
cmp
mov
mov
pop
lahf
xchg
stc
cld
cmpb
fwait
xor
dec
mov
insl
lock
and
frstor
je
popa
mov
out
aas
xor
pop
adc
cmp
aam
push
push
dec
pop
pop
shrl
pop
repz
insb
add
cmp
inc
jecxz
sub
movsb
ljmp
leave
push
mov
xor
add
scas
out
js
cmpsb
icebp
movsl
xchg
mov
fbstp
jl
jg
pop
adc
addr16
pusha
fsubrl
js
lods
daa
push
loopne
add
fwait
addr16
push
pop
inc
enter
inc
into
sbb
inc
rolb
in
and
cmp
fildl
lea
dec
push
out
cld
sub
cs
cmp
sub
mov
cmp
vphaddbq
cmpsl
sbb
in
inc
sar
and
xor
lret
jle
lds
pusha
add
cmp
iret
cmp
adcl
sub
sahf
push
in
mov
lahf
je
adc
ss
call
in
cmpsl
dec
sti
xor
push
or
pop
cmp
xchg
test
mov
lods
jecxz
out
je
mov
xchg
mov
inc
mov
and
ja
xor
mov
call
out
in
mov
and
push
in
fwait
daa
into
stc
popf
bound
adc
mov
mov
pop
pop
ror
fmulp
cmc
cld
imul
push
sub
xchg
mov
mov
jmp
dec
or
mov
xor
in
fisubrs
xchg
sub
adc
data16
mov
leave
adc
fisubrs
push
mov
pop
in
shrl
xchg
outsb
xchg
sub
mov
sub
push
jns
xor
test
push
movsb
adc
jno
push
or
insb
clc
xorb
mov
aas
or
cltd
adc
xchg
sub
and
xchg
ss
test
mov
rcrb
repz
sub
gs
inc
sahf
movsb
addr16
popa
sub
cmp
lret
pop
dec
repnz
iret
movsl
imul
into
pushf
pop
data16
std
arpl
mov
das
dec
lahf
insl
jp
rorb
xchg
ficoml
sbb
adc
add
cmp
mov
ret
mov
xchg
or
jp
ds
subps
mov
scas
cmpb
jmp
or
add
lea
pop
cmpsb
arpl
mov
icebp
mov
inc
push
inc
xchg
jne
mov
out
or
cltd
shl
lret
jae
ds
or
fs
adc
xlat
inc
cwtl
out
leave
arpl
stos
jg
cmp
push
inc
jbe
pop
mov
cld
fistl
repnz
pop
ret
leave
jge
mov
mov
rcl
and
orb
push
loop
xchg
adc
shrb
insb
cmp
sahf
mull
cld
mov
aad
ret
jg
and
mov
or
and
fbld
shlb
dec
push
or
bt
movsl
addr16
popf
add
int
cmp
mov
push
sbb
popa
out
push
xor
int3
aad
out
push
out
mov
in
sbb
add
mov
out
pop
mov
mov
adc
sub
xor
lcall
xor
and
mov
negb
pop
dec
scas
jl
add
cmp
insl
test
pop
mov
sarb
je
popa
and
pushf
cmp
lock
push
or
mov
or
or
adc
push
ret
lock
sub
cld
jg
jo
mov
idivl
mov
out
dec
fistpl
repnz
movq
shrl
jae
or
mov
jno
int3
sub
sarb
mov
mov
dec
ljmp
cmp
jb
int3
movsl
or
lods
repz
xchg
out
adc
jb
push
aas
es
pushf
jb
and
out
das
jne
and
popf
or
stos
andl
or
aas
jp
adc
ret
adc
jb
lret
cmp
lahf
aas
call
into
push
clc
dec
cmp
aad
jle
fdivl
sbb
out
and
ret
into
lods
ljmp
pushf
imul
in
inc
dec
icebp
cmpsb
nop
arpl
push
jne
mov
and
and
add
push
or
call
xchg
popa
mov
aas
jge
das
mov
es
shll
inc
push
gs
in
test
jge
xchg
mov
push
fnstcw
fimuls
lods
pop
hlt
sbb
xor
and
subl
mov
test
out
xor
or
push
std
in
iret
fdivrl
jle
shll
scas
jno
rcll
lock
xor
push
frstor
ljmp
and
pop
test
dec
rcll
fidivl
sbb
mov
int
rolb
pop
and
hlt
ja
and
fisttps
rorl
push
pop
test
jmp
mov
sbb
push
out
xor
push
aas
lea
out
test
and
jge
arpl
sub
cmp
sbb
xchg
jne
sti
inc
mov
popf
jge
lret
bound
jge
adc
jmp
test
cmpsl
inc
aas
pop
mov
pop
psllw
repz
dec
mov
push
sbb
and
push
in
pop
test
aaa
mov
mov
xor
in
dec
idivl
push
out
bound
in
vpaddq
mov
fidivs
cmp
fnstenv
fdivrl
mov
inc
mov
cld
aas
lret
sbb
fwait
push
sbb
insl
and
mov
jmp
loopne
mov
jbe
jmp
xor
mov
add
in
clc
or
sar
add
out
lahf
cmc
xchg
cmpsb
icebp
fmul
and
std
test
sbb
sub
outsb
mov
jle
lods
lds
fmulp
clc
xchg
rolb
or
mov
icebp
iret
dec
mov
jb
xchg
fistps
add
int3
in
js
or
mov
int3
js
bnd
pop
stos
adc
xor
imul
jp
or
mov
movsb
stos
push
add
das
fdivr
fidivl
jl
test
pop
adc
cmp
adc
add
xchg
ljmp
xor
cmp
mov
fldenv
mov
or
movsb
cmp
inc
cwtl
jle
std
lods
rcrb
fmuls
adc
mov
sti
ret
or
aad
jecxz
ret
xchg
xchg
daa
cmp
push
push
in
mov
test
mov
fcmovnb
fidivrl
aad
call
or
insl
add
sub
pop
jns
or
fidivrl
or
movsb
cmp
sub
out
ds
pusha
sub
pop
subb
cld
loop
sbb
push
lock
push
sub
pusha
inc
jecxz
add
mov
adc
mov
imul
or
mov
and
jbe
cld
push
lock
sbbb
fdivl
lods
ret
sub
cmp
xor
dec
popf
out
cltd
and
test
jmp
xchg
push
ds
mov
xchg
push
ret
ret
xchg
into
xchg
cmpb
inc
xchg
inc
leave
test
jo
jmp
mov
jne
sbb
int
les
mov
stos
jb
fwait
mov
jmp
int3
mov
mov
push
or
push
outsl
push
cmpb
jl
mov
mov
sub
push
jnp
or
in
clc
or
sarb
mov
push
fmull
popa
aam
jno
and
inc
push
jnp
mov
lret
push
mov
enter
mov
mov
push
ss
fsubr
js
subb
or
xchg
adc
repnz
xchg
pop
cmp
sbb
sub
es
adcb
pop
scas
arpl
mov
xchg
loop
out
subb
jmp
or
shrb
xchg
pop
stos
jb
bound
dec
fcmovnb
outsb
adc
aaa
div
je
addl
addl
or
xchg
pop
lcall
sbb
jge
xchg
xchg
in
std
insb
jle
sbb
subb
adc
mov
sbb
adc
pop
pop
fwait
jg
enter
add
sbb
and
adc
inc
movsb
movsb
pop
movsb
imul
lret
shr
cli
dec
or
test
stc
clc
mov
cli
mov
fiadds
mov
lret
movsl
add
add
addl
jo
sbb
mov
mov
fdivp
fbstp
jecxz,pt
push
adc
ss
pushf
aas
popa
push
inc
xlat
movsb
dec
cmp
lret
jae
adc
pop
repnz
jns
xchg
dec
sbbl
push
fs
ret
mov
fisttps
add
fs
sub
test
mov
call
shl
adc
aas
add
add
insb
jl
and
cmpsl
cmp
sub
cmc
scas
cs
mov
loop
cmp
xchg
add
sub
sbb
daa
mov
test
pop
pop
push
xchg
cmp
pop
cmpsb
pop
scas
mov
or
in
outsl
std
or
faddp
loopne
add
flds
ficoms
outsb
test
push
jo
hlt
gs
inc
mov
or
sti
cmp
inc
popa
xor
lahf
cmp
shll
aam
jge
cmpsb
cmp
xlat
movsb
add
push
stc
ljmp
mov
aad
ficomps
mov
testl
popf
movsl
cmp
xor
shrb
xchg
jbe
cs
xchg
imul
icebp
mov
mov
jo
add
call
in
push
mull
inc
insl
mov
lahf
out
jecxz
aad
fiadds
imul
xchg
scas
add
push
cmpsl
in
aad
adc
pusha
insb
shrb
lahf
and
and
sbb
push
sub
es
and
pop
rcl
jg
enter
shr
popa
sbb
jl
and
mov
stos
and
in
aam
out
dec
cltd
pop
inc
push
scas
sbb
call
int
aas
mov
stos
mov
loopne
int
sub
adc
stc
sub
and
pop
inc
aas
loope
lretw
mov
nop
mov
dec
iret
dec
fldcw
fbld
sbbl
nop
dec
clc
rorl
out
testb
les
repnz
xchg
lock
minps
jo
push
xor
cmp
in
push
xor
push
mov
pop
in
shrb
mov
cld
inc
fiaddl
push
add
xor
and
jbe
stc
in
push
jg
call
dec
test
idivb
pop
shlb
aad
cmpsb
rcll
sti
adc
rorl
inc
jb
sbb
xor
xor
mov
jae
xor
mov
xchg
int
cmp
dec
sub
dec
or
je
sti
out
dec
add
jbe
sbb
and
add
pop
sti
and
jg
test
ret
ds
ljmp
add
sbb
decl
daa
mov
ja
push
xchg
mov
add
cld
or
sub
push
add
mov
das
mov
jnp
mov
fnsave
cmp
inc
sbb
test
outsl
inc
sub
ljmp
jb
cmp
ret
aaa
dec
mov
xor
sub
movsb
sbb
add
jecxz
ud0
adc
push
push
xor
xchg
dec
mov
rcrl
cmp
stc
jae
xor
inc
and
test
mov
es
and
cmpsl
inc
pop
lds
cmp
push
mov
or
std
addr16
push
pop
xor
daa
data16
or
pop
mov
sub
xchg
push
not
cmp
das
add
sbb
pusha
adc
pavgb
mov
ljmp
andl
adc
push
cmp
dec
loopne
add
out
dec
icebp
sub
out
pusha
xchg
or
pusha
pop
sub
mov
mov
ret
xchg
sahf
mov
imul
dec
mov
clc
sarl
jno
fadds
mov
int3
lods
outsb
jle
stos
jo
push
and
out
add
mov
jno
mov
jg
jb
pop
lahf
addr16
call
cltd
mov
scas
xor
loopne
pop
rolb
push
sub
mov
fldcw
mov
cmpsb
mov
lret
and
mov
lods
jmp
push
sbb
sahf
pop
jno
adc
mov
push
fsubrl
cmpsb
push
sbb
jp
jle
repnz
stos
pop
loope
orb
jb
js
pop
jp
sahf
pushf
dec
push
popf
xchg
mov
and
adc
out
sub
pop
mov
lret
inc
testb
in
movsb
in
sahf
adc
call
sub
inc
inc
in
jge
iret
mov
lret
pop
fcmovne
jecxz
shlb
mov
and
daa
lret
jbe
cli
mov
ljmp
dec
call
jecxz
dec
shl
xchg
scas
scas
mov
mov
repnz
sub
negl
daa
sub
inc
dec
and
mov
push
hlt
and
out
jp
subb
outsl
mov
insb
fcmovnu
dec
fcoml
xor
xor
fidivs
jne
or
cs
and
mov
adc
jmp
mov
push
in
inc
mov
ret
jae
leave
xchg
pop
or
sbb
lahf
data16
stos
test
mov
xchg
pop
and
and
das
pushf
scas
mov
cld
cwtl
dec
sub
add
jo
sub
cmpsl
inc
es
lret
xor
jmp
scas
or
push
add
lcall
and
xchg
and
and
ds
mov
leave
sbb
es
mov
add
pop
aaa
ljmp
scas
sarl
into
subl
cwtl
jecxz
negl
sub
mov
insb
outsl
jg
ds
mov
push
or
int3
mov
cld
out
or
pop
jbe
nop
pop
mov
add
outsl
scas
imul
clc
adc
jo
fidivs
aam
shr
xchg
es
push
mov
dec
inc
sbb
push
int3
pop
or
mov
pop
sub
std
fsubrs
imul
push
xchg
lret
push
jmp
pop
sbb
mov
sahf
pop
sbb
dec
mov
js
nop
mov
sub
cmp
jno
xor
fiadds
push
mov
and
xchg
imul
popf
cli
xchg
iret
add
mov
cmp
jno
xchg
fldenv
adc
jl
lods
xor
inc
scas
popa
and
nop
dec
dec
mov
inc
sub
jae
loope,pn
pop
cmp
adcb
pop
dec
test
jb
outsl
adcb
dec
jecxz
push
into
push
faddl
cmp
scas
ret
lcall
loope
push
or
xor
jg
push
shl
je
pop
or
popf
inc
push
lret
fisubl
shlb
lock
iret
and
sub
ret
jge
hlt
dec
rclb
repz
sahf
xchg
insb
mov
push
imul
ljmp
push
sbb
fnsave
mov
lods
xor
jle
ja
js
cld
sbb
adc
or
enter
dec
roll
into
jne
push
repz
fstl
jge
insb
notl
xor
and
jge
add
xor
lea
pop
sub
arpl
xchg
jmp
dec
pop
mov
push
or
loope
inc
icebp
adc
loopne
repnz
stos
jbe
shrb
sar
insb
adcl
adc
cld
lcall
in
dec
mov
ret
lret
mov
in
iret
scas
hlt
mov
dec
sub
xchg
js
jns
sub
cmp
lods
movsl
testb
mov
iret
repnz
hlt
imul
out
lods
push
inc
adc
lds
in
aam
ljmp
es
sbb
lcall
mov
outsb
icebp
push
mov
faddp
sub
inc
sbb
push
push
xlat
mov
movsb
lea
mov
cmp
fistl
das
or
push
insb
inc
addr16
dec
cmp
cmp
push
insb
pop
ret
lds
mov
js
jg
in
inc
inc
aas
fsts
int
popa
jo
push
xlat
sbbb
dec
sbb
popf
adc
in
ja
jnp
daa
and
jae
pop
sub
nop
ret
jle
jne
jne
shll
mov
adc
or
jbe
pop
out
sti
fcomi
jb
and
out
clc
subb
lret
lret
jl
rorb
adc
inc
loopne
mov
mov
aam
fisttpl
sbbl
and
and
pop
fmuls
push
sbb
cmp
push
movsb
pop
mov
and
add
out
xchg
fsubs
in
or
mov
fildl
jmp
fdivs
sbb
out
mov
adc
xor
jp
stos
sub
call
adc
mov
and
jbe
mov
enter
movsl
jl
push
ss
and
imul
sbb
nop
std
xchg
ret
adc
sbb
xchg
les
in
popf
xor
cs
mov
cmpb
sbb
lea
fildll
adc
xor
int3
push
mov
jecxz
push
inc
cld
push
cmpl
and
iret
mov
clc
mov
inc
arpl
or
fildll
lods
ficoms
imul
mov
or
std
cmp
push
mov
subl
pop
cmp
add
fcoml
rorl
push
fcmovnu
out
mull
dec
ja
nop
notb
stos
popa
mov
jnp
lret
fwait
mov
int
mov
jae
stos
jle
rorl
repnz
cmp
xchg
sbb
repnz
arpl
dec
outsl
dec
mov
pushaw
xor
insb
roll
pop
loop
push
jecxz
xchg
sar
pop
xchg
mov
jmp
jo
cmp
xchg
or
mov
and
mov
mov
mov
adc
mov
pop
inc
in
push
and
inc
sahf
in
push
jmp
in
xchg
or
pop
mov
in
cmp
sub
sahf
mov
imul
mov
inc
push
test
adc
mov
mov
and
subb
icebp
sub
mov
lretw
test
int
jg
cli
push
std
push
cmpsb
shll
jmp
sbb
aad
pop
xor
mov
push
popf
call
mov
fnstsw
int
lcall
push
scas
mov
lea
seta
call
mov
mov
fldenv
and
aaa
scas
stos
jmp
mov
popa
lea
inc
add
fadds
add
iret
xchg
lods
pop
mov
repnz
leave
jns
aas
arpl
xorb
cmc
loopne
or
cmp
xchg
xor
outsl
movsb
fists
jno
xor
mov
sub
insl
push
pusha
fwait
jno
sbb
mov
jb
pushl
sbbl
cld
push
xchg
cmp
push
mov
fdivl
loope
iret
fldt
sbb
push
xchg
mov
test
push
bnd
jmp
or
dec
js
cmp
dec
jge
xor
into
pop
ljmp
call
enter
iret
cmpsl
pop
lret
jns
fldcw
jmp
mov
cmpsb
push
int
mov
dec
out
mov
mov
popf
repnz
incb
add
jl
mov
mov
fildl
push
lock
dec
or
call
sub
inc
test
aas
aas
rcl
mov
add
push
fcom
ss
sub
or
stos
cmpsl
jmp
cmpsl
push
stos
es
dec
lods
pop
dec
aaa
out
pop
sbb
movsl
sub
pop
lds
addr16
fcmovne
into
cmp
ss
mov
fidivs
xchg
test
test
loopne
rcrb
jecxz
clc
mov
sbb
pop
sbb
andnps
dec
xchg
push
outsb
pop
les
mov
push
inc
and
shlb
shlb
mov
pop
aam
lods
sbb
xchg
xor
into
xlat
jl
or
sub
dec
xor
jnp
xchg
inc
imulb
negb
jo
add
jne
lock
gs
rorb
cmp
and
loopne
imul
shll
repnz
pop
jmp
sub
imul
ret
notl
sti
insl
lds
dec
je
xor
fcmovne
adc
adc
cmc
insl
sbb
pop
add
mov
push
arpl
mov
dec
test
call
sbb
or
mov
arpl
sti
xchg
dec
sbb
arpl
xor
mov
nop
jge
jl
cltd
jne
sub
jb
std
leave
movsb
mov
sti
scas
call
xor
sbb
lock
out
insl
loopne
jecxz
into
mov
call
in
lods
out
neg
mov
aas
adc
out
hlt
push
ret
xlat
pop
mov
lret
jnp
cli
sbb
pop
add
fucomp
sub
xlat
pmulhw
xor
dec
lahf
loop
test
pop
and
jmp
ljmp
xchg
dec
add
and
fmull
and
or
mov
ret
icebp
xor
mov
xchg
push
fisubrs
cwtl
and
or
jmp
xor
rcrb
shr
rolb
fldt
mov
pop
cmpsl
jmp
pusha
jle
shrb
gs
lret
xor
dec
jae
mov
mov
nop
dec
loop
lea
into
movsb
xchg
rolb
in
xchg
mov
push
js
adc
add
int
xchg
jbe
mov
mov
aad
xchg
sbb
xor
fidivs
stos
sub
aam
xor
dec
jge
inc
fwait
vpcomuw
cmpsl
adc
jnp
int
cwtl
jnp
and
test
pop
sub
jnp
mov
aad
inc
loope
dec
jle
repz
out
jle
pushf
pop
notl
sbb
jae
jle
jne
jo
stos
xchg
das
stos
sar
cmp
loop
mov
mov
vpsraw
jbe
add
inc
idivl
in
es
cli
adc
jle
mov
lret
je
js
insb
shrb
cli
push
lcall
loope
arpl
rolb
inc
loope
out
call
in
mov
popf
dec
pusha
int
push
add
test
movsb
push
aaa
loop
xchg
pop
lahf
rclb
push
loop
lods
jecxz
pop
mov
outsb
in
aaa
into
sbb
xor
decb
sahf
add
shll
xchg
rcrl
jl
dec
pop
sbbl
bound
hlt
pop
lret
add
arpl
xchg
in
xchg
cli
fsubs
or
icebp
pop
out
adc
xchg
out
fdivrl
mov
sbb
icebp
add
inc
fnstenv
jl
or
aam
xchg
adc
xor
cmp
loop
mov
pop
test
cld
xchg
test
in
and
insb
inc
or
dec
pop
xor
insl
pop
std
sbb
inc
sub
loop
fsubl
dec
push
push
lcall
or
test
cs
mov
test
in
xchg
movsl
inc
sahf
mov
and
cli
xchg
cmp
xor
pop
stc
and
les
int
and
jbe
add
sbbl
xchg
movsb
cmp
inc
mulb
out
mov
test
or
inc
xchg
jnp
cltd
pop
adcl
ret
xlat
cmpsb
jo
and
ss
mov
adc
pop
adc
jnp
inc
inc
leave
ret
movsb
dec
adc
pop
leave
int
jmp
out
mov
js
xchg
dec
jl
jno
dec
mov
aad
pop
ret
mov
data16
mov
rorl
scas
std
cs
lods
pop
xchg
nop
mov
mov
neg
cmpsb
sbb
push
adcb
mov
dec
fidivs
sub
repz
inc
xchg
mov
movsl
xchg
gs
cmpsl
sub
xor
imul
xchg
push
ljmp
mov
jne
mov
pop
stos
std
lods
std
rol
into
test
add
clc
cmpsl
icebp
sub
aad
mov
mov
fildll
sahf
insb
xor
dec
gs
adc
xchg
sbb
pop
cmp
mulb
addr16
dec
mov
inc
sahf
xor
cltd
mov
shrl
or
icebp
inc
jnp
push
lds
popa
or
mov
shrb
inc
je
xchg
cmpsb
sub
fisttpll
jle
sti
or
xchg
mov
stos
idiv
xchg
push
rol
pop
push
loop
shrl
scas
sub
inc
fmul
mov
add
into
movsl
popf
mov
inc
xchg
jne
lods
xchg
dec
mov
mov
lea
in
gs
rep
xchg
cmc
pop
ret
pop
mov
inc
push
adc
or
xchg
xchg
les
andl
push
stos
xchg
jne
and
mov
movups
roll
jl
daa
iret
pop
es
pop
in
jno
cmc
pushf
xor
lock
sbb
inc
push
and
fdivrs
int
ds
imul
aam
rcr
repnz
lock
out
and
ja
ja
in
mov
pushf
mov
lahf
push
shll
mov
mov
daa
xchg
and
and
sbb
aam
movsl
add
inc
jo
out
scas
xlat
mov
addr16
xchg
scas
mov
push
call
pop
xchg
movsb
cmp
div
fistl
mov
testl
fwait
into
jne
popf
xor
movsl
addr16
arpl
out
and
jge
push
cmc
pop
dec
pop
jno
aas
pop
dec
fstps
ss
repnz
lods
lock
rorb
push
jmpw
inc
push
or
test
mov
ret
xchg
test
mov
mov
js
iret
aam
shl
mov
lret
xlat
sub
out
call
pop
or
and
fsts
jns
fstpt
push
push
out
push
mov
insb
outsl
test
jne
aam
enter
xchg
scas
xchg
fcoml
lods
inc
jbe
xor
daa
jl
or
push
mov
mov
lcall
gs
inc
test
into
xchg
ret
fmulp
or
les
jne
or
push
in
or
dec
push
inc
sbb
test
orl
xchg
jge
jb
or
aas
jecxz
push
add
fwait
jae
push
aaa
aaa
mov
mov
cs
push
movsl
js
mov
jecxz
jb
fdivs
mov
cmc
xor
into
jae
movsb
subb
xor
addr16
xor
out
out
popf
ss
mov
mov
les
das
jle
or
int
addl
pushf
jg
test
cmpsb
cltd
jbe
stc
push
stos
push
inc
sub
inc
lcall
and
imul
adc
adc
scas
xchg
into
mov
mov
add
out
fmull
jns
popf
insl
add
mov
out
cmp
push
push
jno
sbb
jp
repz
fisubl
pop
je
shll
jae
mov
je
push
inc
sbb
cmp
je
jecxz
fwait
dec
push
sti
xchg
inc
orb
cmpsl
push
repnz
subb
shl
dec
push
xor
jns
imul
lods
push
std
cmc
and
lods
daa
mov
flds
add
sbb
xor
mov
aad
fisttpl
scas
mov
fsubr
sub
fwait
cmpsl
sti
mov
das
push
xor
xchg
push
sbb
xchg
sbb
sbb
mov
xchg
subb
add
jo
sbb
xchg
dec
mov
pop
inc
cmp
divb
dec
loopne
mov
addr16
push
sub
mov
js
in
push
test
insb
fidivl
mov
in
inc
filds
mov
push
hlt
out
cmp
dec
int
imul
dec
popa
mov
add
add
test
and
mov
push
dec
pop
out
xchg
mov
lods
jecxz
xchg
sub
cmp
mov
jo
inc
dec
aam
in
pop
call
and
repnz
test
mov
insl
movsl
shll
sbb
ret
fs
daa
out
lock
add
ret
push
dec
pop
je
iret
xor
cwtl
repz
rclb
stc
xor
push
or
in
data16
push
in
pop
bnd
jl
pop
in
pop
add
movsb
pop
jno
adc
sub
shrb
mov
test
pop
out
adc
fs
in
push
inc
jle
pop
mov
mov
inc
cli
jle
cmpb
pop
and
daa
mov
pop
repz
test
fbstp
mov
push
daa
xchg
dec
xchg
pop
inc
jno
lret
mov
sarb
subb
cmp
aam
mov
out
fxch
xchg
push
icebp
insb
xchg
cmp
pushl
jbe
stc
cmpsl
mov
sub
and
movsb
mov
jb
imul
andl
subb
into
mov
cltd
lret
xlat
or
icebp
adc
fucomi
jnp
and
imul
rcl
test
ret
loop
bound
dec
inc
out
popf
mov
fimull
arpl
roll
mov
adc
mov
jecxz
push
push
or
in
jb
movsl
idiv
imul
sti
stc
mov
dec
xor
loop
js
mov
lods
pop
or
mov
stc
rclb
and
stos
inc
inc
gs
push
mov
lret
jno
xchg
pop
dec
mov
scas
inc
push
scas
sahf
xor
dec
cmp
mov
pop
cwtl
mov
xchg
mov
repz
dec
mov
test
leave
push
pop
dec
cli
popf
inc
negb
xchg
sbb
int
pop
add
loopne
mov
mov
mov
cmpsl
add
xchg
test
test
sbb
mov
lahf
in
dec
sbb
cwtl
stos
add
pmuludq
das
cmp
cwtl
xchg
cmp
inc
sub
xor
pop
pop
repnz
lea
push
adc
xor
sahf
pop
in
test
xor
test
lret
ds
cmpsl
push
lahf
lods
into
dec
cs
inc
sti
sbb
sbb
mov
outsl
push
xor
je
cli
in
mov
and
push
frstor
mov
sbbl
push
push
xchg
push
and
inc
pusha
in
pushl
and
dec
sar
fwait
nop
dec
int3
xchg
popa
stos
test
pop
insl
int
xor
movsb
fsubr
sub
add
fsubl
andl
out
xor
ljmp
int
icebp
cmp
bound
dec
lcall
loope
push
or
cmp
inc
or
pop
xor
aaa
dec
jecxz
pop
xchg
mov
andb
jp
pop
adc
stc
mov
in
mov
pop
lcall
jbe
mov
fisubl
ret
rorl
lods
test
add
bnd
fnstsw
push
pop
out
popa
adc
pop
xor
std
sbb
cltd
lds
xchg
jns
push
mov
fwait
cs
sub
or
push
inc
push
repnz
cli
xor
test
bound
jno
xor
cli
inc
fistl
fisubl
test
jo
add
sub
jp
xchg
mov
dec
fildl
push
out
inc
and
scas
aaa
inc
sbbl
add
int
out
inc
or
fstl
xchg
dec
pop
repz
mov
add
fsubr
pop
push
mov
xlat
jecxz
daa
in
inc
mov
ja
mov
testl
leave
mov
mov
out
adc
add
clc
cmp
fstps
popf
lods
ss
imul
or
sbb
dec
lods
pop
loop
push
out
mov
ret
es
enter
xchg
mov
mov
in
pop
outsb
mov
iret
dec
mov
inc
mov
imul
xchg
in
aas
pop
adc
fbstp
push
sub
mov
sahf
cli
clc
pop
pop
push
popf
cmp
sbb
add
sahf
or
and
nop
ljmp
mov
cmp
push
aas
pop
fstpt
insb
jae
pop
out
or
insb
sub
jo
adc
jb
or
es
sti
xor
cltd
outsl
inc
dec
idivl
mov
or
cltd
daa
pop
or
fstpl
sub
cmpsb
nop
add
fdivl
out
popf
adc
mov
addr16
pop
mov
mov
adc
pop
fisubrl
fcomip
jb
sti
jne
shll
pop
int3
mov
mov
repz
mov
mov
scas
mov
subl
jp
mov
add
xchg
insb
and
mov
xor
xchg
mov
mov
push
ficomps
lcall
push
sbb
push
popa
add
sahf
mov
int
sti
stc
push
test
cs
lahf
add
call
or
adcb
cmp
scas
cmc
test
scas
pop
xchg
mov
ret
cmp
push
pop
push
hlt
movsb
cmp
cli
xor
addb
test
aas
dec
mov
jge
out
cwtl
dec
mov
imul
hlt
and
clc
pop
inc
pushl
repz
jmp
arpl
jae
jmp
aam
je
push
mov
loop
or
cmp
jle
push
arpl
push
cld
dec
add
push
fwait
ret
rcll
jns
and
cmpxchg
out
mov
into
mov
mov
pop
mov
push
out
clc
scas
sub
inc
add
push
or
xchg
sbb
push
jecxz
inc
in
mov
push
aad
imul
pop
lods
or
pop
jae
mov
inc
shlb
std
mov
jle
mov
into
lods
mov
fmul
and
call
lods
popa
jb
aad
in
outsl
leave
cmp
xorl
lret
xor
cmp
subb
jb
mov
rcrl
loop
test
mov
sbb
pop
insb
shrb
and
mov
int3
sbb
pop
xchg
jnp
jge
jbe
adc
int3
add
push
stc
clc
push
mov
or
add
xchg
jno
movsb
or
jle
decl
push
insl
mov
xchg
incb
adc
add
mov
rcrl
cmpsb
cmp
mov
xchg
lods
and
fdivl
and
or
imul
jge
push
pop
insl
popa
loopne
ja
pop
push
inc
sbb
adc
and
pop
orl
lea
xchg
inc
outsl
cmpsb
scas
inc
cmpl
cmp
cmp
repnz
jmp
mov
push
cmc
xor
cltd
push
mov
or
cmp
imul
cltd
mov
out
leave
out
inc
enter
xlat
sub
mov
inc
xchg
xchg
imul
sti
or
insb
sbbl
lock
outsb
add
out
fmulp
cmp
mov
dec
out
xchg
push
scas
dec
ds
mov
and
das
popf
cmp
xorb
psrld
jo
xchg
test
adc
push
adc
cmpsb
jp
or
sub
je
loope
fbstp
mov
hlt
sbb
jp
cmc
mov
insb
call
add
insl
add
fwait
sub
aam
lret
xchg
ret
push
fnstenv
push
adc
dec
xchg
ljmp
jmp
call
ret
adc
andb
movsl
rcll
mov
pop
mov
inc
sarb
cli
mov
jae
mov
pop
dec
stc
pop
call
push
or
adc
jp
xor
dec
add
xor
sahf
pushf
dec
push
inc
fadd
mov
sub
cmp
jmp
or
sub
fnstenv
inc
mov
or
push
fidivl
negb
sbbl
test
nop
push
mov
stc
and
sahf
pop
cmp
dec
daa
mov
in
test
sbb
mov
jg
xchg
mov
test
inc
fcmove
pop
ljmp
jno
pop
pusha
pop
inc
or
dec
and
repz
pop
test
or
push
popf
sbb
push
js
in
enter
mov
xchg
push
mov
mov
mov
int
insb
add
stc
lahf
and
out
minps
xor
cld
push
sub
lock
fs
sbb
and
in
jnp
sub
jo
jb
cmpsl
mov
push
in
xchg
push
xchg
or
mov
xchg
mov
dec
sub
shlb
dec
shll
xchg
inc
xchg
sub
dec
inc
jb
xchg
rcll
cmp
lds
jno
stos
movsb
sbb
cld
dec
add
fists
in
loopne
xchg
sub
add
dec
clc
in
int3
lret
inc
fwait
dec
push
addr16
cmp
and
lcall
and
add
sbb
sub
stos
push
dec
adc
cmc
aaa
jno
movsl
ljmp
sbb
scas
jl
sub
ss
into
push
fnstsw
sub
jns
out
mov
jnp
movsl
aad
push
mov
mov
out
sbb
nopl
out
push
mov
rol
lods
in
imull
cmc
mov
pop
jge
mov
std
push
push
outsl
mov
stc
clc
push
xchg
adc
cmp
cmp
shrl
mov
mov
rcll
or
movsb
mov
fisubrs
les
push
jno
sbb
sbb
jne
push
cmpsl
inc
mov
mov
cmpsl
lret
xchg
in
mov
mov
add
and
jg
and
dec
enter
insb
cmp
dec
dec
jo
sbb
xchg
pop
in
push
xor
imul
mov
xchg
in
std
xor
sbb
insb
enter
mov
sbb
jno
ret
stos
ret
gs
js
dec
xchg
lock
add
cmpxchg
xchg
call
cld
jne
and
adc
imul
pop
subb
sub
aas
scas
inc
mov
sti
stos
push
mov
push
cmc
mov
fsubl
inc
push
inc
cwtl
mov
xchg
push
mov
push
dec
aas
popf
fstps
xor
or
int3
data16
outsl
lret
icebp
mov
pop
loop
bound
add
mov
sub
and
xor
ljmp
lcall
sbb
sub
mov
mov
inc
xor
test
fisubl
cli
mov
lea
sub
inc
call
mov
testl
mov
push
mulb
push
jle
aaa
sub
cmp
xchg
mov
jp
sub
jecxz
cmp
ds
shl
rcrb
call
sbb
xchg
int3
test
mov
ja
aam
cmpsl
cld
inc
xchg
adc
outsb
push
fwait
imul
xchg
mov
pop
push
sub
dec
cltd
xchg
popf
enter
mov
or
dec
push
mov
setg
scas
cld
or
test
int3
daa
mov
lods
jnp
fisubrs
ret
jle
mov
mov
or
jmp
addl
movsb
or
lods
jg
inc
mov
adc
sti
lcall
and
sub
popa
clc
mov
jg
out
popf
xor
shr
push
test
outsl
push
das
cmp
fcomps
xor
xchg
ficompl
loope
loop
scas
enter
notb
ret
sbb
scas
cmp
lds
pusha
dec
scas
xchg
ds
arpl
movsl
jns
pusha
shr
lods
pop
bound
lock
mov
xchg
jle
mov
mov
lods
xor
xor
cmp
inc
pop
pusha
decl
sub
sub
xchg
sub
imul
xlat
je
jae
lods
push
sbb
aaa
ret
cld
pusha
or
mov
test
inc
pop
jne
or
into
dec
insb
cli
jle
aam
dec
fdivp
dec
dec
pop
jb
xchg
aam
sarl
xor
stos
fcoms
inc
add
xor
shll
inc
ret
int3
movsl
cpuid
cwtl
in
cltd
push
repz
and
cmp
out
ja
stc
xor
jne
add
es
stos
xor
sub
push
int3
inc
divl
jp
jns
jo
mov
test
rcrl
cld
scas
pop
orl
jno
repz
inc
mov
into
fdivr
push
push
stc
inc
scas
lods
mov
into
push
orb
scas
dec
or
clc
xchg
add
add
adc
popa
or
push
lods
jnp
jle
insb
stos
mov
jg
push
or
mov
mov
rorb
add
cld
gs
jno
lret
test
loopne
adc
jne
pop
or
xchg
jmp
fsubl
jmp
faddp
or
add
inc
leave
xor
daa
mov
mov
pop
clc
dec
xchg
sbb
jns
fidivs
rcl
in
pop
pop
cmp
addr16
adc
jmp
jno
xor
sarb
leave
pop
nop
negl
dec
adc
cmp
push
xchg
ja
insl
sub
rorb
add
cmpsl
sbb
mov
jge
std
mov
lds
out
mov
shlb
and
mov
imull
cmp
dec
and
fcmovu
je
aas
jmp
ja
jle
dec
sbb
and
dec
pop
jbe
pop
adc
imul
cs
pop
leave
fs
mov
jbe
test
into
ret
cli
repz
rcrb
sbb
das
and
pop
push
cmp
pop
ja
sub
subl
sub
test
jnp
pop
sahf
push
inc
inc
clc
cltd
or
fildl
or
pop
mov
in
imul
ret
inc
addr16
mul
cmp
pop
roll
inc
push
pop
jb
dec
mov
push
push
push
aam
or
and
and
dec
inc
inc
je
dec
mov
dec
mov
adc
in
enter
add
movsl
sub
mov
repnz
test
lret
cs
leave
cbtw
sti
and
push
movsl
loop
push
adc
test
mov
movsl
data16
repz
or
repnz
xor
fs
aas
dec
xchg
mov
dec
outsl
push
ljmp
xchg
adc
stc
scas
sbb
push
shrl
mov
jae
lds
jecxz
ss
inc
std
nop
cmc
mov
pop
inc
push
pop
stos
push
mov
test
inc
test
iret
in
sbb
icebp
rcr
mov
sub
and
leave
insb
and
mov
pop
jne
in
cmpsb
out
or
jno
jnp
or
sbbb
push
shll
and
mov
fsubp
scas
push
mov
aas
jecxz
xlat
push
sbb
rcl
sbb
scas
pop
icebp
loopne
jp
push
or
xor
jnp
inc
mov
push
jg
pop
mov
outsb
loope
gs
push
xlat
sbb
xchg
sbb
shl
fisubrs
icebp
xchg
pop
inc
mov
mov
loopne
push
pop
dec
repnz
mov
test
mov
icebp
xchg
icebp
or
mov
pop
pusha
xor
mov
xor
push
cmc
out
push
push
add
jmp
add
push
nop
test
scas
xor
mov
orb
mov
mov
add
push
cs
mov
jecxz
jecxz
mov
mov
punpcklwd
cli
xchg
insb
popa
data16
mov
add
sbb
imul
pop
lock
and
xorl
inc
aas
loope
movlhps
stc
aad
clc
dec
ret
inc
pop
popa
out
outsl
cwtl
mov
sbb
movsl
dec
xchg
sub
push
jae
mov
mov
into
fsubr
jmp
test
mov
clc
rcr
rcll
in
mov
mov
mov
sti
jnp
or
jge
sbb
fiaddl
cmp
test
aam
cmp
shlb
movsb
lds
sub
xchg
mov
jmp
rol
dec
and
ret
pop
push
pusha
jl
je
inc
std
mov
decb
pop
and
adc
hlt
sbb
loope
lahf
subb
sbb
addr16
mov
fcoml
xor
ret
mov
rclb
push
fsubrs
imul
push
aad
addr16
orb
cltd
or
lret
int
xchg
insl
outsl
jno
mov
dec
popl
mov
fnstenv
ja
inc
mov
mov
sbbb
test
xor
fmul
add
rcrl
scas
fdivrp
adc
int
mov
sbb
jbe
popf
and
add
jbe
mov
stos
mov
adc
sub
clc
xchg
cwtl
xor
adcl
in
lcall
jne
ficoms
jbe
negb
into
enter
pop
inc
popf
add
mov
xor
pop
push
cwtl
imul
dec
imul
pop
cmp
aam
xchg
dec
sbb
outsb
mov
in
or
ret
pop
xor
pop
cmp
cs
dec
add
les
jle
adcb
jno
aad
pop
inc
test
fbstp
jmp
pop
mov
cmp
pusha
hlt
mov
lods
pop
pop
sub
fbld
ljmp
mov
dec
sbb
test
fsubs
mov
cmp
fmulp
js
push
inc
pop
mov
add
clc
cmp
jnp
push
leave
jo
mov
aam
scas
lcall
jno
enter
push
out
popf
sbb
sbb
scas
loope
adc
cmpsb
cmp
rcrb
lds
sar
mov
loopne
sub
sbb
cmpsl
out
fstps
sbb
push
pop
sbbb
xchg
inc
repz
or
adc
mov
pop
repnz
enter
adc
lds
jmp
fbld
leave
xchg
add
mov
xchg
stos
call
and
test
pop
leave
or
jecxz
push
cs
xor
xor
add
mov
or
rcrl
int
out
stc
or
inc
mull
inc
dec
and
ljmp
outsb
scas
jo
or
mov
mov
imulb
sub
je
or
or
mov
mov
cwtl
inc
je
mov
lret
shr
cld
xor
or
sbb
stos
add
in
les
cmc
aaa
cmp
dec
dec
push
add
outsb
addl
shlb
and
push
jle
pop
mov
adc
xor
js
push
je
push
and
addr16
sbb
and
inc
jl
jbe
int
aam
lcall
notb
lahf
dec
popa
iret
shr
cwtl
mov
insl
cmp
insl
out
test
ficompl
dec
push
fmulp
mov
loopne
dec
test
rcrb
mov
or
aam
arpl
out
and
notb
inc
jmp
out
xchg
mov
mov
sbbl
pop
cmp
jnp
cmp
fmull
xor
push
popa
mov
mov
leave
mov
push
mov
ret
pop
add
cld
pop
push
imul
push
int
mov
add
jl
or
notb
jg
xchg
dec
push
sti
das
pop
pop
sbb
sbb
leave
cmp
popw
insb
push
jmp
clc
insl
inc
in
dec
sub
push
add
call
in
adc
push
dec
test
push
sbb
mov
push
adc
cmpsb
xor
stos
outsb
push
add
xor
xchg
loop
out
dec
dec
cmp
xchg
jl
fistpll
fs
icebp
movsl
cs
jbe
push
jecxz
faddp
iret
popa
xor
xor
push
mov
add
sbb
or
mov
cltd
fwait
je
stc
stos
sbb
mov
lock
push
int3
repz
add
scas
ret
sub
mov
add
mov
mov
out
iret
fdivl
pop
test
std
mov
add
cmp
imul
lret
fcomps
push
mov
fwait
mov
arpl
push
jae
mov
ljmp
or
add
cmp
sbb
stos
adc
push
stc
rcll
daa
cli
roll
sub
cltd
xchg
rcl
mov
jbe
mov
cld
push
repz
call
add
sub
icebp
sbb
fdivrp
pop
lcall
add
imul
repnz
mov
enter
xchg
bound
mov
addr16
jo
lahf
test
lcall
es
inc
scas
add
in
push
add
dec
lret
ja
push
inc
inc
or
or
inc
popa
sbb
adc
in
std
sahf
sub
dec
fistpll
push
push
xchg
into
lock
enter
fldenv
sbb
push
pop
cmp
std
mov
pop
ja
sbb
test
mov
inc
pop
test
xor
hlt
cmp
std
cmp
jbe
inc
test
sbb
pop
mov
push
cltd
mov
xchg
push
loop
movsl
sbb
imul
mov
mov
mov
sbb
sbb
loope
jns
jne
add
add
call
pushf
dec
push
das
std
or
inc
pop
mov
and
mov
adc
mov
in
push
loopne
xchg
xchg
inc
clc
and
sbbl
outsb
ftst
leave
test
jae
jo
ds
ret
loopne
pop
test
inc
fdivrl
xor
mov
lcall
xor
jb
out
mov
pop
xchg
sub
adc
push
ds
aas
adc
push
dec
dec
lret
cmp
in
cmpsb
inc
inc
sarb
js
sub
inc
adc
and
lock
sub
and
sbb
pop
test
fsubs
dec
adc
inc
out
pop
sub
sbb
ret
lea
int
outsl
dec
pop
out
std
cmp
leave
inc
fildll
mov
lock
sbb
cli
adc
shll
cmp
mov
push
cwtl
add
out
shl
imul
xchg
mov
icebp
stc
fs
jae
lcall
pop
pop
incl
jmp
xor
pop
and
jno
lret
in
mov
cwtl
test
push
rcll
int3
jo
pop
cmp
push
lods
std
pop
mov
iret
lahf
xor
sti
out
imul
leave
xchg
inc
fiaddl
clc
popa
add
add
mov
les
dec
inc
and
push
or
mulb
mov
rcll
add
push
cmpsb
mov
std
lret
mov
mov
lods
ficompl
jge
cmpsl
sub
xchg
mov
mov
push
pusha
nopl
pop
xchg
dec
mov
in
or
mov
mov
je
xchg
out
cmpsl
ret
push
push
push
cmp
inc
cmc
adc
sbb
movsb
push
mov
adc
int3
or
loop,pn
add
push
in
arpl
std
lods
sub
jmp
sbb
pop
cmc
cmp
nop
fwait
cmp
mov
and
xlat
lret
mov
mov
ja
roll
jmp
aas
push
mov
xchg
mov
loop
push
imul
mov
mov
adc
dec
dec
hlt
sbb
movsb
enter
das
sub
jne
out
arpl
pop
imul
outsl
loop
insb
les
mov
xor
sbb
sti
dec
xor
or
sbb
push
push
xchg
inc
xor
stos
dec
or
dec
repnz
dec
cld
jo
push
lock
sahf
cmp
sbb
push
out
mov
pcmpgtw
pop
repnz
test
or
hlt
cmp
cmp
sub
push
loopne
xchg
or
out
jo
push
mov
jl
lods
inc
push
cmpsl
dec
or
ds
adc
jno
movsb
repz
andb
mov
test
mov
cmpsb
lods
mov
mov
inc
clc
jae
jmp
xor
lahf
and
ds
mov
stos
aam
sbb
in
lcall
mov
into
fxch
movsb
mov
sub
dec
pusha
inc
jmp
inc
xchg
push
adc
dec
and
cmpsb
jl
mov
rolb
nop
loopne
dec
and
es
jns
test
decb
inc
jns
popa
mov
subl
mov
pop
xchg
inc
adc
mov
mov
jne
sbb
pop
lret
adc
xchg
rcll
psubd
mov
shll
sub
dec
hlt
fiadds
push
jns
add
enter
mov
pop
adc
leave
sbb
fwait
push
mov
adc
jle
adc
insl
jmp
mov
mov
test
push
leave
jmp
dec
daa
pop
rcll
push
and
jb
dec
loop
sbbb
push
push
aad
jg
movsl
jl
cmp
lds
or
call
stc
mov
jb
mov
adc
jb
xor
cmc
lahf
inc
cld
push
and
xchg
cs
ret
ljmp
jl
je
xor
sbb
mov
xchg
cmpl
lret
lea
and
add
sbb
push
es
dec
inc
add
xor
icebp
mov
sbb
lods
mov
ja
out
sti
fcomps
jge
rcrl
aad
dec
xor
pop
stc
adc
mov
bound
ljmp
xor
dec
push
in
mov
push
je
pop
jo
in
aaa
fmuls
test
negl
xor
fidivrl
dec
bound
xor
and
ret
data16
rcrb
and
aam
jb
hlt
mov
ljmp
jb
push
cmpsl
call
adc
and
ljmp
arpl
leave
int
xor
in
fcmovne
fwait
sbb
jbe
rcr
add
imul
insb
sub
dec
cmp
mov
cwtl
rolb
jmp
mov
jbe
test
ja
lcall
out
ja
cmpsl
xchg
cmc
dec
nop
pop
jnp
fistpll
dec
xchg
sub
or
pop
sub
dec
add
dec
dec
pushf
mov
pop
mov
jb
into
enter
push
pop
cmc
aam
and
or
push
test
test
out
lods
insl
cmp
popf
xchg
sub
in
add
dec
and
sub
stos
xor
xchg
mov
mov
dec
and
repz
mov
push
lods
outsl
mov
ljmpw
mov
out
push
dec
jns
push
icebp
in
popa
pop
int
adc
call
popa
cmp
xor
fwait
jbe
lret
push
and
sti
int3
lret
pop
jbe
shlb
bound
rcrb
pop
popf
sahf
or
cmpsl
cltd
push
out
dec
cwtl
pop
mov
add
push
rcrl
rorb
mov
xchg
pop
shl
rorb
jmp
or
imul
add
in
cmp
imul
sbb
pop
jno
nop
daa
repnz
xchg
inc
loop
test
in
sbb
xchg
jle
int3
sub
outsl
add
nop
shrb
lock
jl
nop
pushf
sti
xchg
into
mov
gs
stos
jmp
fst
jmp
xor
rcrb
out
dec
pop
push
mov
dec
in
pop
push
je
pushf
cli
lea
les
adc
xchg
loope
push
dec
ret
mov
add
fsts
icebp
or
out
xchg
leave
push
mov
stc
and
mov
mov
sub
loope
enter
inc
jmp
test
mov
push
jno
lcall
insl
mov
into
jne
mov
dec
movsl
inc
test
repnz
add
adc
scas
addr16
decl
aam
pusha
bnd
push
mov
jne
ja
xlat
test
je
sub
jb
xchg
mov
mov
jbe
inc
test
mov
jp
dec
jecxz
cltd
nop
pop
jecxz
push
daa
sub
mov
fldenv
movsl
xor
jl
decb
movsb
lret
pop
es
dec
lods
aam
sub
lahf
hlt
adc
jmp
mov
mov
adc
stos
mov
negl
pop
fldcw
decb
idivl
sub
sbb
inc
sbb
sahf
dec
out
mov
fwait
cmpsl
mov
xchg
addl
pop
outsl
repz
lret
ret
fistps
dec
rclb
jge
pop
sub
mov
mov
aas
push
jb
cmpb
cltd
sbb
imul
xchg
xchg
pop
mov
pop
leave
xor
insl
jno
lahf
mov
jns
dec
sub
fcomps
lahf
lea
daa
fsts
enter
mov
add
lea
insb
cli
popf
mov
mov
sarb
jb
fwait
adc
cmc
and
rcrb
push
pop
mov
mov
mov
dec
out
lods
pop
add
int
popf
push
popa
in
push
ror
sbb
ds
ss
push
scas
adc
sub
lods
cmp
in
push
jmp
out
sub
insb
sbb
xchg
lahf
les
lock
mov
xor
cmp
fsts
mov
icebp
pop
mov
sbb
jle
icebp
jb
and
mov
test
add
inc
icebp
fisubs
sbb
scas
cmpsb
sub
push
aam
cmpsl
cmp
add
mov
or
call
mov
fstl
dec
pop
int
adc
ds
hlt
inc
or
dec
shll
push
leave
in
xor
or
lret
into
fisttpl
imul
dec
es
xchg
cltd
cmp
pop
push
dec
xchg
sub
insb
inc
or
pop
mov
fsub
jge
lret
ljmp
outsl
and
xchg
xchg
dec
repnz
aaa
xchg
sbb
aam
mov
push
loopne
mov
cmp
arpl
clc
rol
dec
int3
pop
cmp
pop
movsl
std
dec
pop
outsl
ljmp
sarb
nop
lods
inc
push
aad
or
mov
sti
jmp
repnz
and
cli
fildll
xorl
scas
xchg
mov
lret
pusha
test
inc
mov
add
inc
repz
das
pushf
and
test
scas
mov
repnz
sti
arpl
es
adc
adc
in
mov
shrd
test
adc
aaa
add
repz
hlt
xchg
shrb
add
test
in
mov
cs
xor
push
jne
pushf
mov
mov
mov
sub
lock
sbb
cmc
push
jns
ljmp
mov
cmp
loopne
lods
or
push
adc
ss
jg
fsubrs
out
inc
sbb
and
js
hlt
jb
xor
sub
rolb
inc
cld
xor
jo
dec
cltd
add
scas
pop
mov
jns
add
cli
mov
mov
mov
inc
fimuls
scas
aaa
push
pusha
enter
sbb
outsb
insb
inc
sbb
dec
xchg
xor
mov
inc
mov
adc
jmp
push
test
add
call
xor
xchg
cmc
mov
or
and
add
mov
xor
sub
sahf
cmp
dec
pop
sbbb
dec
or
lds
cmp
in
movsb
lea
fwait
dec
sbb
out
xor
mov
lods
cld
sub
jne
roll
mov
mov
sahf
in
jns
sahf
inc
fidivl
push
aam
and
fwait
test
dec
in
jecxz
scas
push
fwait
out
jg
mov
arpl
inc
add
jne
rcl
dec
ds
fldl
insl
sbb
sbb
pushf
in
jae
imull
call
and
lcall
xchg
inc
dec
in
jo
fsubl
fwait
xchg
and
mov
nop
adc
shll
arpl
mov
jmp
icebp
mov
sbb
push
lahf
xor
jno
mov
mov
add
adc
pop
dec
fadds
pop
pop
leave
call
xchg
pop
and
push
jmp
leave
cmp
enter
push
mov
ret
jo
pusha
int
inc
pop
jae
mov
popa
in
in
stos
inc
pop
cli
mov
mov
jb
dec
cmpsb
scas
fdivp
jecxz
scas
in
lea
or
push
loopne
xchg
and
xchg
stos
jnp
mov
dec
lea
or
cld
push
fadds
outsb
mov
push
popl
mov
sbb
js
mov
push
push
sbb
push
ss
mov
ficomps
ret
xchg
int
adc
cmp
mov
push
lds
stos
sub
rcrb
fists
test
les
lret
jl
int
sbb
dec
movsl
je
sbb
xor
rcr
add
data16
and
out
mov
int3
lea
fcmove
jae
jmp
je
icebp
xor
mov
loop
or
lds
push
ss
lret
mov
sbb
cmp
adc
aam
xchg
mov
lcall
pop
cmc
int3
cmpsb
arpl
pop
imull
movsb
xor
dec
popf
stc
jp
mov
imul
add
push
mov
mov
mov
jb
xchg
jg
mov
add
cwtl
cmp
ret
xchg
xor
sahf
jo
pop
push
call
fs
aad
xchg
sbb
jg
mov
daa
push
mov
dec
or
loop
dec
pop
or
jo
xchg
outsl
fwait
je
popl
dec
mov
pop
iret
mov
aam
aad
mov
imul
push
out
loopne
loopne
xchg
rcrl
add
sub
arpl
jns
cmpsb
xor
jge
xchg
shll
push
jne
xor
sbb
hlt
add
push
loop
out
xchg
jle
in
aaa
or
inc
sbb
arpl
mov
fdivs
das
xchg
scas
adc
scas
jmp
mov
popf
lret
test
enter
sti
lods
xchg
pop
movsl
xchg
pop
mov
mov
mov
pop
xchg
xchg
jle
jg
push
dec
in
inc
out
xchg
out
dec
adc
cmc
push
std
bound
sbb
sti
cmpsb
push
jns
mov
ja
dec
int
pop
mov
mov
call
dec
fists
orb
jge
fsub
mov
xor
jnp
bound
add
jp
popa
lods
mov
dec
data16
inc
sbb
enter
std
cltd
repz
jno
cltd
in
test
orb
pop
and
inc
pop
sti
and
and
fmull
imul
in
fisubrl
push
mov
jp
sub
cmp
sub
sub
jno
mov
push
ret
outsl
xor
lods
ljmp
mov
xchg
cmp
movb
jl
orb
jge
adc
lret
shll
lret
and
leave
lods
call
into
cltd
dec
fcoms
mov
adc
fiaddl
adcl
push
pop
jle
mov
je
vpmaxub
mov
movsl
les
pop
and
xor
mov
dec
fs
push
aaa
dec
test
ja
popf
mov
nop
insb
sbb
outsb
dec
push
ret
lds
std
pushf
pop
or
lahf
dec
add
cmp
imul
bound
repz
jne
gs
repz
lock
stos
sub
pop
icebp
lods
dec
in
dec
js
jne
lods
ljmp
sbb
mov
pop
in
ret
clc
adc
pop
cmp
jno
std
add
adc
xor
cmp
cmp
scas
fs
loopne
inc
in
inc
and
out
jb
pop
jecxz
pop
es
xchg
sub
roll
mov
xor
sub
scas
sti
pop
in
xor
mov
inc
push
pop
dec
xchg
add
outsl
pop
push
cmp
sub
sub
sbb
std
shlb
dec
ljmp
rorb
pop
mov
mov
pop
arpl
pop
mov
in
mov
mov
sbb
pop
ret
xchg
dec
outsl
and
cmc
fisubs
sub
iret
pop
or
cmc
add
call
sub
mov
mov
or
clc
mov
cmp
popf
xor
cmp
sub
fimuls
jg
mov
jl
in
mov
sti
pop
xor
dec
pusha
push
lock
movsb
jb
mov
push
pop
lret
and
das
mov
or
aas
imul
mov
int
sbb
mov
es
in
jp
cmp
fwait
mov
pop
mov
pop
cmp
lret
mov
sbb
sbb
jnp
sub
dec
jl
adc
dec
lcall
adc
xlat
xlat
clc
or
out
xor
lea
mov
adc
adc
outsb
in
stc
or
movsl
call
dec
scas
xchg
out
bnd
mov
jns
std
sub
pop
add
push
push
mov
mov
pusha
ja
xchg
fcomp
mov
pop
add
add
xchg
and
pop
jne
xorl
dec
loope
cmp
xchg
jle
jmp
out
sub
or
sbb
or
fwait
xor
lahf
mov
ret
push
aad
pop
popa
idivl
in
jnp
jle
add
cmp
jns
pop
stos
inc
xchg
sbb
lret
in
out
test
aam
xor
or
xor
mov
scas
xor
imull
push
sub
cmp
pop
dec
out
stos
or
pop
adc
std
or
jl
inc
dec
cmp
adcl
shrb
mov
outsl
sbbl
enter
imul
jno
xor
ret
fisubrl
hlt
push
stos
or
test
imul
dec
aas
mov
mov
outsl
neg
daa
outsl
out
ds
pop
inc
add
push
inc
fildl
pop
rcr
and
stc
push
pop
rcl
or
stc
nop
icebp
dec
push
ljmp
jb
lds
or
mov
push
js
and
icebp
outsl
inc
ret
shl
lods
mov
jecxz
nop
pop
lock
inc
mov
seto
dec
divb
arpl
js
lods
push
lea
xchg
outsl
xor
test
sub
daa
dec
dec
fabs
sbb
call
add
jno
and
sbbb
pop
cmp
aam
jecxz
mov
and
movsl
or
in
insb
sub
lds
mov
in
std
inc
loopne
test
cmp
jb
ret
js
inc
pushf
mov
aas
loop
addr16
lret
cmc
in
icebp
iret
insb
xchg
movsl
jne
xchg
inc
and
mov
xchg
fisubs
std
mov
sub
aaa
jbe
aas
hlt
dec
jl
pushf
xchg
sub
and
sti
pop
xchg
lcall
push
jg
dec
ret
push
es
add
lahf
xor
push
movsl
mov
lret
shll
mov
repnz
sub
xchg
pop
test
repz
arpl
andl
jbe
mov
dec
jmp
aaa
sbb
jno
mov
add
lds
test
mov
ja
cltd
rclb
daa
inc
add
clc
push
mov
dec
mov
sbb
dec
leave
sti
jbe
loop
xor
ds
out
bound
lcall
and
xchg
iret
push
xor
fs
ficomps
dec
cmp
jp
or
rorl
cwtl
mov
mov
adcb
nop
int3
dec
ret
daa
int
leave
pusha
test
sub
ja
subb
scas
push
and
cmp
cld
xor
xchg
sub
lock
xchg
push
adc
rcl
jb
popf
xor
xchg
and
lods
sbb
cmp
xor
or
pushf
loopne
push
add
test
add
pop
xchg
push
inc
in
xor
xadd
inc
aas
stc
dec
sbb
or
sub
inc
or
xchg
pop
sub
jns
and
test
inc
fbstp
add
stc
lds
jno
and
push
push
mull
das
cmpsl
lds
sub
mov
cwtl
push
inc
cltd
popa
mov
dec
test
mov
cmpsb
xchg
nop
scas
xchg
outsl
xor
push
jne
cmc
dec
pop
rcl
cmc
mov
shrl
hlt
icebp
sub
hlt
icebp
movsl
and
jo
xchg
mov
adc
sub
cmp
jg
cmp
arpl
ds
insb
test
adc
in
dec
dec
repnz
and
push
add
out
xor
sub
rolb
mov
in
and
xchg
and
aas
cmc
pop
xor
xchg
pushf
xor
mov
xor
dec
mov
xor
add
mov
aas
xchg
pop
push
scas
test
pop
fcmovbe
cli
jno
pop
pop
and
push
out
or
mov
jne
movsl
xchg
jne
leave
mov
pop
stos
arpl
js
int3
shlb
repz
mov
xchg
dec
leave
pusha
jle
or
popa
dec
mov
int
fcompl
cmpsb
popa
mov
adc
mov
ss
xchg
lods
pop
lods
jge
mov
and
aaa
sub
inc
stos
shr
jns
lret
lret
push
xor
dec
fs
fidivrl
repz
and
dec
pop
gs
loopne
out
stos
cmp
into
insl
lret
cli
or
mov
mov
loop
or
mov
jbe
pop
mov
pop
sbb
cs
jnp
xchg
lods
out
xlat
popa
je
in
loop
cmpsb
dec
pop
insl
add
lret
addr16
insl
insb
xorb
push
mov
test
xor
jecxz
ds
and
fistpll
loopne
mov
xchg
xor
ja
into
cwtl
sub
negl
cs
inc
outsl
mov
mov
stos
cmc
test
leave
std
adc
loope
fnstsw
xor
pcmpeqd
adc
xchg
add
or
fs
sahf
pop
adc
imul
or
nop
sub
mov
xor
jmp
sbb
mov
outsl
add
mulb
push
stos
xchg
xchg
cmp
les
hlt
adc
mov
scas
pop
mov
sub
ljmp
popf
pop
adc
data16
push
daa
push
mov
xchg
mov
dec
out
dec
add
test
cmpsl
lcall
sbb
test
mov
arpl
pusha
inc
xchg
inc
fmul
fwait
insl
sbb
jmp
rclb
push
add
push
ret
mov
cmp
scas
inc
fiaddl
dec
sti
jbe
mov
jmp
inc
adc
clc
xchg
mov
shl
ret
mov
dec
push
xchg
ret
pop
cs
xchg
leave
jmp
out
sbb
out
xchg
jmp
cmp
mov
subb
aam
sbb
mov
leave
jmp
repz
push
scas
inc
pushf
in
xchg
out
int3
and
fisttpl
in
mov
stos
pushl
subb
inc
pusha
xchg
jge
es
fcoms
ds
lret
pcmpgtd
cmp
imul
mov
in
sarl
inc
sub
pop
jge
loopne
inc
sahf
cmpsb
ret
sahf
xor
int
jmp
out
popa
add
dec
lods
jnp
xchg
cld
pop
mov
or
ret
mov
dec
pushf
xor
jbe
out
jne
inc
xor
in
inc
in
inc
mov
mov
mov
mov
stos
push
stos
out
sbb
add
sbb
in
sbb
inc
add
outsb
sarl
cwtl
or
insb
aas
aas
js
jecxz
push
cmpsl
lea
cmp
ja
sbb
dec
gs
lahf
push
mov
aas
in
push
cmp
mov
testb
dec
das
dec
lock
inc
arpl
daa
mov
lret
pop
sub
stc
jo
dec
mov
imul
sbb
fnstcw
int3
pop
outsl
jns
js
icebp
gs
filds
cwtl
or
mov
cmp
mov
jp
aas
mov
gs
aad
jo
cmp
sbb
or
nop
test
out
stc
adc
xor
and
xchg
shlb
dec
push
lods
jl
pop
pushf
cwtd
lock
or
xlat
or
pop
stc
jge
nop
mov
int3
jg
pusha
jge
mov
fistpl
inc
out
fwait
sbbb
mov
jo
dec
rcrb
int3
push
ljmp
aaa
push
and
push
je
shll
fnstenv
rcll
cmpb
call
cld
push
imul
imul
jge
gs
mov
or
addl
inc
enter
xor
mov
data16
pop
les
push
or
sub
mov
sbb
pop
daa
out
adc
push
or
xor
mov
push
add
fs
call
or
xchg
pop
outsl
js
loop
daa
jle
xor
inc
xchg
jg
test
mov
jecxz
sub
or
test
rcrl
stc
movsl
subb
push
insl
shlb
add
xor
js
test
mov
mov
mov
arpl
sub
clc
lods
adc
fistpl
mov
lods
jo
fwait
xor
xchg
jno
fwait
stc
sbbl
cltd
mov
xchg
arpl
shlb
push
mov
cmc
mov
ret
imul
mov
xchg
sub
insl
or
test
lret
cld
cli
sbb
cmp
pmuludq
or
add
arpl
aad
pop
subb
lahf
mov
aaa
mov
push
cli
push
or
and
movsl
lds
imul
dec
fptan
inc
jo
stos
leave
jecxz
aam
xchg
mov
mov
fdivl
aas
sub
lcall
and
push
pop
push
sti
mov
jns
sbb
push
pop
add
mov
or
insl
mov
sbb
popa
push
cmp
mov
mov
js
push
jne
sbb
outsb
jbe
orb
mov
push
mov
jns
mov
shlb
or
push
repz
xor
add
jno
addr16
adc
inc
inc
sub
and
insb
cmp
sbb
sarb
sbb
gs
sub
daa
subb
pop
inc
mov
and
sub
lock
fstps
shlb
fistps
mov
fdivrp
fwait
inc
icebp
or
in
movl
add
lea
rorb
and
fxch
pop
fstp
xchg
fcmovne
mov
out
ja
out
ret
sub
mov
rorl
xchg
and
repnz
fsubs
out
push
shrb
dec
int3
cltd
test
jg
int3
pop
xchg
mov
sub
adc
and
jle
lcall
test
pop
inc
stc
dec
pop
ret
jle
in
call
jb
push
fs
sti
xchg
sub
addr16
adc
sub
push
sub
pop
out
mov
and
adc
int
shrb
in
out
fwait
cltd
lock
mov
xchg
test
jl
cs
mov
jnp,pn
mov
push
adc
idivb
lock
js
call
jae
outsl
push
pop
cmc
dec
mov
lahf
lea
inc
call
repnz
mov
sbb
fucom
das
push
loop
fldcw
mov
stos
es
ds
jo
and
popf
cmp
js
xor
jmp
xchg
pop
loop
and
out
cmp
push
dec
add
mov
loopne
loope
rcll
push
mov
int
and
lea
jl
and
orl
mov
in
mov
cmp
xor
jecxz
jl
not
lcall
jno
sahf
in
popa
mov
in
and
pop
adc
inc
push
add
nopl
call
inc
aam
xchg
outsb
cmpsb
cmp
or
mov
mov
adc
adc
xor
inc
hlt
cmp
sub
inc
sti
push
dec
mov
sub
pop
lahf
mov
dec
dec
dec
dec
lea
ljmp
jno
test
dec
aad
movsl
xchg
mov
push
gs
test
mov
gs
mov
popa
ljmp
sbb
jns
ret
mov
test
push
mov
pop
mov
pop
pop
and
mov
int3
xchg
in
es
sti
jecxz
insb
adc
mov
pushf
push
jo
and
aaa
push
mov
sbb
lret
mov
fidivrl
pop
sub
shlb
xchg
add
loope
push
imul
lock
xchg
xchg
test
test
mov
cld
push
fsubrs
mov
test
or
jnp
movsb
cmp
hlt
imul
iret
imul
inc
jae
inc
movsl
cmp
jo
icebp
loope
sub
and
sbbl
inc
filds
call
push
imul
add
sbb
mov
lods
mov
test
aaa
fcmovnbe
daa
mov
sti
mov
in
les
pushf
pop
into
inc
mov
pop
push
ds
imul
xor
mov
push
cmc
adc
imull
cwtl
add
sub
cbtw
pop
cwtl
in
scas
out
aad
xor
loope
dec
push
xor
jecxz
adc
pop
xor
xchg
in
push
stc
ja
adc
sbb
xchg
push
jbe
in
int
js
mov
xor
xor
inc
out
ja
into
cltd
sub
dec
and
jecxz
sub
addr16
popf
cltd
int
mov
ds
icebp
aam
xor
adc
sbb
pushf
nop
std
dec
dec
xor
push
leave
xor
lahf
ss
in
stos
pop
pop
fcoms
faddl
cmpl
xorb
add
adcb
xchg
xchg
sub
jmp
cmp
iret
mov
cmpsb
dec
in
and
stc
aam
aad
adc
xor
and
aaa
lret
movl
mov
mov
cli
jmp
pop
push
cli
pop
lcall
and
enter
das
push
xchg
jo
sahf
mov
add
das
inc
xchg
xchg
les
dec
jns
dec
call
fdivrp
xlat
mov
add
xor
stos
sbb
fnsave
aam
in
push
xor
ja
inc
loope
clc
rcrb
mov
clc
adc
cmp
jo
stc
pop
sbb
dec
sbb
pop
or
and
jl
add
xacquire
gs
sub
pop
inc
add
xchg
pop
cmc
enter
pushf
sub
lret
test
fidivl
in
xchg
pop
mov
jae
jnp
sbb
lods
mov
dec
cmpb
jl
imull
lea
hlt
xchg
jo
sbb
sub
out
cmp
insl
sbb
xchg
rcll
das
push
sub
mov
sti
add
inc
sti
and
repnz
inc
pushf
imul
addr16
sbbb
inc
dec
je
call
mov
stc
mov
mov
out
xor
cmpsb
jbe
mov
lods
pop
fstps
jl
push
pop
and
dec
ljmp
mov
call
cmp
lret
xchg
inc
pusha
mov
jo
jae
movsl
ds
push
int
push
cmp
push
movsl
test
inc
sub
jne
xor
xlat
push
inc
fimull
stos
xor
jae
dec
and
or
ffree
loopne
repz
popa
mov
xchg
mov
xchg
lret
xchg
lret
xor
add
and
scas
aas
into
add
pop
jbe
xchg
push
mov
out
insb
sbb
shlb
pop
leave
cwtl
test
pop
test
pop
cmp
xlat
xor
mov
gs
xor
sub
jbe
pop
xor
arpl
test
pop
daa
mov
fisubrs
push
aad
jne
lods
xchg
scas
sub
rcr
lret
ja
sub
xchg
sub
mov
fstl
pusha
sub
fucomp
inc
xor
and
xor
aas
push
mov
aas
aad
pop
testl
inc
pop
fs
cltd
adc
sub
and
mov
clc
in
xlat
jb
sar
mov
mov
xchg
sub
loop
inc
in
cs
mov
aam
pushf
add
jle
clc
scas
fildl
or
lahf
mov
and
jle
jge
dec
jno
mov
jge
and
mov
pusha
addr16
sbb
insb
mov
fdiv
dec
roll
shrb
dec
rcl
dec
pop
sub
cmp
lods
push
inc
fstpl
add
dec
pop
lods
inc
mov
jmp
call
scas
sub
loop
push
inc
mov
inc
sbb
jmp
nop
xchg
adc
movsl
cmp
xchg
pop
repnz
jne
mov
mov
cwtl
bnd
aam
aas
adc
pop
mov
jb
mov
mov
stos
add
xchg
and
mov
cs
cmp
adc
dec
dec
dec
mov
lahf
nop
out
lock
ret
outsl
sub
push
mov
hlt
cwtl
xor
or
popa
addl
dec
repnz
fsubrs
pop
add
mov
sbb
pop
shll
jno
xchg
sub
pop
repz
mov
int
xsaveopt
jnp
mov
sahf
out
aaa
sub
test
lret
lds
inc
sahf
and
jecxz
fs
inc
inc
mov
mov
and
notb
sbb
test
movsl
mov
jg
outsl
jns
mov
jle
push
pop
outsb
mov
int
sub
xchg
pop
cmc
add
xor
iret
xor
adc
repz
insl
popf
push
push
call
aaa
daa
lret
xchg
aad
adc
pop
repz
lahf
push
fisubrs
and
ljmp
mov
sub
push
pop
hlt
or
iret
cmpb
jnp
dec
and
cld
adc
add
fdiv
xor
mov
lods
cs
dec
push
add
xchg
xchg
adc
inc
out
nop
insb
adc
xor
ja
iret
js
inc
xchg
int
nop
jp
sti
cmp
jl
fucomip
add
test
xchg
pop
ss
cltd
mov
xchg
test
lret
sub
data16
js
add
add
xchg
and
push
cmp
inc
dec
repz
inc
push
dec
loop
insl
push
out
xor
add
xchg
test
and
cmp
xor
or
and
dec
jp
lock
dec
movsl
cmp
subb
outsb
cmp
dec
mov
inc
inc
pushl
adc
xor
mov
add
iret
fwait
and
les
in
pop
xchg
cmpsl
rorb
pop
stc
std
push
sub
sub
test
outsl
repz
in
mov
mov
sub
movsl
lods
xchg
jnp
rcr
loope
xor
push
mov
mov
or
rorb
jno
lahf
lcall
or
data16
pop
cwtl
shll
adc
mov
cmpsb
mov
mov
jno
sbb
gs
add
stos
fsts
or
call
lods
outsl
stos
xor
fcoml
mov
cmp
fs
cmp
pop
adc
data16
test
cmp
jge
mov
shll
mov
les
xchg
sbb
dec
mov
xor
fsubr
push
jns
fidivrs
ss
or
inc
fwait
sti
outsl
cmpsb
cmp
out
dec
les
fmull
and
cld
int
rorl
sbb
pop
lcall
loop
lods
add
out
xor
loope
cmp
lods
ss
inc
fbld
push
lods
sbb
sbb
fisubrs
push
push
push
add
outsb
lods
ljmp
add
in
sub
in
push
inc
hlt
loop
jl
int3
iret
add
cs
push
fwait
xor
loope
adc
cs
sub
mov
jp
or
and
stc
inc
out
test
popa
fdivl
jg
mov
cmp
aas
outsb
pop
sbb
pop
sarb
ret
mov
mov
cmp
dec
das
enter
cmp
fs
push
lock
mov
arpl
aam
shlb
mov
xlat
scas
roll
dec
aas
call
and
movsb
outsl
mov
ss
cmp
mov
and
cli
rorl
mov
fdivs
push
cmp
insb
mov
pop
lds
push
dec
dec
fimull
sbb
dec
pop
popf
data16
lock
xor
or
mov
fsub
cmp
stos
mov
lea
push
inc
inc
stc
in
stos
sub
xchg
sbb
bound
test
jp
int
aaa
clc
sahf
mov
shlb
add
out
add
xchg
lods
cmp
cmp
js
fsubrs
and
fcom
jmp
gs
or
pop
pop
cmc
xchg
or
ljmp
jb
stc
pop
and
scas
mov
negb
mov
lahf
inc
jbe
scas
stos
aaa
out
cli
dec
in
hlt
lret
bound
rolb
mov
lret
xlat
sub
xor
int
loopne
aad
rolb
int
aad
xor
fldenv
out
dec
nop
clc
test
daa
ds
lods
inc
sbb
xlat
pop
xor
test
lret
daa
jle
jg
sub
aas
int3
mov
adc
movl
pop
mov
inc
loop
stc
loop
stos
adc
popf
fmull
mov
adc
sub
scas
cwtl
jle
scas
mov
jge
subl
or
adc
sbb
pop
dec
xchg
insl
jl
lahf
aad
mov
add
jbe
cmp
mov
or
dec
push
popl
data16
dec
pop
xchg
je
dec
fmull
and
fstl
je
jb
or
mov
jg
dec
sbb
test
mov
adc
mov
or
pop
aas
mov
mov
aad
mov
push
mov
mov
pop
insb
or
test
out
pop
lahf
jns
rol
lds
int3
xor
mov
inc
mov
stos
outsb
mov
cmpsl
out
or
adc
xor
lods
ds
mov
repz
outsl
inc
fistpl
scas
shr
mov
push
pop
push
test
pop
outsb
push
xchg
shl
call
cs
xchg
lods
ljmp
cmp
push
dec
jp
repnz
scas
lcall
adc
sub
rorb
cmp
jbe
aas
jmp
xchg
adc
je
jns
sbb
fs
jmp
into
jb
push
fwait
testb
mov
lahf
fsubl
test
es
repnz
ss
mov
movsl
pop
clc
addr16
clc
sub
pop
sarb
xchg
test
fcmovne
sbb
mov
subb
mov
imul
loope
jmp
sub
testl
cmpsl
es
or
std
inc
push
inc
xor
repz
push
loope
adc
or
push
adc
test
filds
movsl
int
add
enter
shlb
jle
shll
hlt
out
in
inc
fsubrl
push
xlat
outsb
stos
mov
inc
xlat
mov
or
data16
inc
mov
popf
subl
add
out
gs
in
fwait
repnz
mov
pop
adc
cmp
pop
and
push
dec
and
ret
lds
dec
push
cwtl
xchg
stos
adc
fs
stos
gs
mov
mov
add
ja
mov
cmp
lock
mov
shll
cmc
xchg
push
popf
sbb
jle
add
mov
scas
adc
stc
mov
mov
pop
xor
xchg
mov
sbb
jge
mov
sub
sbb
cmp
sti
sbb
and
inc
xchg
adc
mov
jecxz
inc
mov
je
push
jmp
mov
jb
dec
xchg
add
pop
rorb
push
inc
mov
in
push
adcb
mov
sahf
or
cmp
iret
sub
dec
dec
shll
xor
dec
lods
pop
popf
mov
int
scas
arpl
mov
jp
sbb
and
adc
call
or
jno
arpl
shll
cmp
and
and
sub
std
pop
enter
and
addps
aam
jp
jae
jb
cmp
fsin
xchg
loope
jnp
push
add
inc
push
test
out
sarl
pop
mov
push
in
xchg
shr
mov
mov
out
pop
and
mov
xchg
outsb
add
lods
fiadds
jb
mov
push
in
sbb
xchg
sub
int3
mov
fs
ret
xor
ret
xchg
jnp
sub
push
cli
gs
and
subb
sbbl
ds
cmpsl
dec
pop
sbb
popf
pop
pop
loopne
jle
jecxz
cld
repnz
lods
push
push
pop
repz
pushf
stc
fisubl
and
inc
cmp
pop
xor
sbb
pop
mov
and
cmp
sub
fnsave
sub
data16
pop
jo
xchg
dec
daa
pop
push
inc
adc
jecxz
lods
cmova
adc
add
or
lds
insl
push
aas
insl
cld
mov
dec
xor
cmp
xor
xor
ds
jb
jp
xchg
push
mov
shll
pop
dec
xchg
call
data16
dec
mov
ss
sahf
popf
add
pop
repz
jb
popa
gs
inc
subl
test
cmpsb
js
or
bound
mov
xor
pop
sub
sub
test
xor
jle
pop
xchg
adcl
loopne
xchg
jno
dec
xchg
lock
clc
lods
push
cmp
cmp
in
rcl
out
psraw
cld
and
jp
xchg
or
aam
or
ja
mov
xor
addr16
std
push
pop
scas
inc
adc
pusha
jb
pop
or
adc
movsb
lea
mov
push
out
sbb
outsl
mov
mov
or
outsl
adc
imul
mov
or
push
mov
rolb
mov
sbb
add
mov
aad
adc
aad
pop
add
pop
push
mov
add
and
xor
and
mov
repnz
cmp
pusha
jp
cmp
mov
out
mov
cmp
and
inc
scas
js
lock
mov
lret
add
shlb
movsl
fld
mov
lock
shld
cli
shlb
shr
push
insl
sbb
and
jp
pop
sub
pop
in
subl
cmp
push
push
sbb
call
cmp
jg
xchg
insl
jge
movsb
dec
mov
loopne
adcl
pop
dec
add
fidivrs
jno
into
das
xchg
lods
push
xor
pushf
cli
cmp
repz
mov
fcmovnb
faddl
stos
push
adc
stos
add
xor
dec
mov
mov
sbb
inc
xlat
ds
inc
rcrl
js
add
iret
sbb
mov
pop
cs
or
xor
pop
xor
sarb
test
stos
int
sbb
divl
dec
and
ds
xchg
sub
pop
cmpsl
jle
mov
lret
add
add
pushf
into
gs
pop
or
xor
in
jo
push
shlb
lahf
pcmpgtd
mov
ljmp
clc
adc
repz
cltd
inc
push
sarl
stc
sub
jle
add
repnz
in
push
xchg
cmpl
xor
test
sbb
test
sbb
ret
and
lock
loopne
mov
sbb
repnz
or
stos
xchg
mov
fcoms
add
aaa
jbe
hlt
jp
gs
xor
cmp
xor
cmp
test
loop
pushf
lcall
imul
inc
jbe
shrb
fistpl
xor
aad
mov
xchg
pop
jmp
mov
xchg
inc
subl
xchg
lret
in
inc
dec
das
ret
xor
and
push
scas
pop
dec
push
and
cmp
push
fwait
shr
das
inc
dec
push
cmp
data16
inc
and
cli
cmpsb
add
pop
shl
pop
es
or
ds
sub
jo
fwait
in
in
arpl
xor
cmpsl
sti
sahf
mov
sub
mov
dec
movsl
and
add
inc
enter
xchg
mov
pop
mov
add
ret
pop
in
adc
jno
xchg
and
lret
xorl
and
jae
sbb
imul
out
dec
iret
pusha
sub
push
or
lahf
cmp
mov
mov
fs
pop
xchg
js
cltd
jmp
std
and
cs
test
xchg
shr
repnz
pop
jl
mull
mov
lret
clc
jno
sbb
ds
inc
jo
sbb
cmp
cmp
adc
dec
dec
nop
adc
je
cmp
out
out
pushf
pop
dec
cmp
imul
sbb
cmpsl
mov
shrb
xlat
in
int3
lea
lods
sahf
loop
and
cwtl
addl
inc
leave
or
cli
popa
testb
ja
pop
pop
fbstp
jl
mov
adc
sbb
cmpsb
lock
aad
outsl
popf
xchg
add
jo
popa
subb
xor
cmp
lea
jge
mov
add
pop
dec
pop
mov
sbb
aam
xor
fbld
inc
in
mov
inc
frstor
call
iret
fisubl
int
clc
enter
jo
inc
test
and
outsl
loop
jmp
loope
lahf
jle
mov
inc
xchg
daa
ret
sub
lcall
push
out
adcl
cmp
push
je
mov
xchg
lods
mov
and
gs
push
lods
xchg
inc
arpl
jecxz
cmpsl
enter
push
inc
stc
movsb
leave
inc
mov
dec
stos
mov
jg
and
and
sti
aas
jae
lfs
xchg
or
push
aam
je
push
test
and
dec
mov
lea
xor
dec
sbb
mov
cmpsl
xchg
aas
push
and
sbb
into
js
push
movsb
mov
mov
push
sub
mov
test
adc
mov
filds
mov
and
cwtl
es
out
imul
mov
in
jb
arpl
std
sarb
enter
xchg
xor
push
mov
push
adc
lea
out
cmp
mov
inc
push
in
jne
pop
stos
sub
jne
dec
dec
xor
shr
or
loope
cmpsl
and
mov
test
adc
jg
mov
pop
mov
and
pop
xor
lea
adc
add
sbb
icebp
or
pop
imul
or
push
xchg
xor
mov
xor
vxorps
jb
xchg
xor
mov
sbbl
sbb
imul
pop
pop
mov
xchg
testb
mov
ss
out
mov
leave
mov
rcrb
hlt
push
adc
jnp
mov
fstl
js
add
and
sub
not
inc
jns
icebp
mov
out
mov
cmpsb
cmp
loope
les
or
stos
or
dec
imul
inc
stos
and
pusha
inc
dec
out
inc
mov
cmp
aad
adc
mov
scas
movsb
xor
jecxz
movsl
mov
lret
fistps
decb
push
or
mov
sub
dec
in
xor
cli
push
out
je
test
inc
xchg
out
arpl
fisubl
pop
aaa
lods
pushf
cli
das
ljmp
fisttps
inc
cli
mov
or
nop
jmp
test
sbbb
or
shrl
leave
gs
out
xchg
sbb
in
in
inc
pusha
adc
push
xlat
outsl
push
into
orl
pop
or
pop
repnz
sub
or
dec
xor
push
popa
jnp
dec
add
popf
pop
test
push
bnd
xchg
jp
lock
jl
dec
pop
xlat
into
sbb
cmp
mov
adc
leave
andl
adc
mov
and
mov
sbb
divl
rolb
xchg
ds
adc
hlt
sub
xor
test
fcompp
dec
mov
xchg
ret
daa
outsl
insb
cmpsb
or
mov
stos
mov
test
ficomps
jp
jmp
mov
neg
or
or
jns
jmp
xchg
sbb
mov
xchg
xchg
push
pop
or
push
daa
aad
lods
hlt
mov
push
rolb
push
cltd
les
clc
and
sbb
orl
sub
mov
ret
jmp
mov
pop
movsb
lods
fwait
call
sbb
cs
fistpl
and
jno
in
clc
jo
imul
lahf
fsubl
dec
es
xor
and
sar
mov
dec
push
sbb
dec
ljmp
sbb
pop
dec
fsts
idivl
jle
sbb
push
leave
mov
test
mov
mov
aaa
out
xchg
int
lahf
idivb
out
mov
push
dec
fnstsw
outsb
repnz
mov
fisubl
stos
notl
mov
mov
pop
mov
popf
jecxz
jmp
sbb
sahf
fidivs
je
mov
cmp
or
xchg
dec
inc
adc
loopne
inc
imul
push
imul
sub
in
adc
sub
insl
pop
rcll
add
dec
or
aam
mov
mov
sarb
enter
repz
dec
inc
mov
mov
dec
test
int3
xor
int
cs
cmpsb
sub
les
sub
sbb
or
stos
scas
gs
or
bound
cld
xchg
mov
or
pusha
jno
pop
je
cltd
xchg
dec
psubusb
pop
xchg
out
into
and
in
jg
das
out
and
loop
adc
lock
and
ss
stos
jbe
mov
int
in
push
pop
popa
dec
shlb
data16
cmp
les
mov
int3
lcall
in
inc
inc
lahf
je
xchg
pop
mov
pop
rcll
mov
or
fnsave
lret
aas
lds
mov
cmp
insl
shll
mov
or
inc
sbb
pop
cmc
jle
je
mov
jl
inc
iret
out
xor
popf
mov
push
gs
mov
xor
pop
pusha
ds
mov
test
dec
add
dec
jl
mov
bound
lods
dec
pop
adc
inc
faddl
out
imul
pusha
fstpl
aam
int
adc
arpl
les
inc
stos
push
fdiv
mov
and
mov
mov
pop
sbb
dec
xor
aam
push
cwtl
and
jbe
jge
js
adcb
mov
mov
and
pop
add
jge
or
outsl
inc
jl
cmp
cmp
clc
xchg
cltd
inc
arpl
fistpll
push
fwait
inc
cld
push
or
push
mov
mov
add
shrl
fsubrs
test
jmp
mov
pop
call
and
xchg
movsl
xor
sub
orb
fdivl
push
adc
in
mov
out
mov
mov
add
decb
outsb
push
mov
or
out
inc
std
pop
les
mov
push
add
dec
dec
xchg
xor
aas
fdivrl
enter
loop
adc
aam
scas
push
pop
mov
inc
fstpl
mov
mov
hlt
outsl
hlt
test
fildll
jne
adc
test
add
insl
loope
pop
insb
fisttps
sub
mov
loop
pop
adc
and
or
cmc
movsb
mov
enter
xor
testl
pop
shlb
sbbb
and
iret
dec
fimuls
adc
je
cmp
sbb
cmpsl
or
pop
sahf
cmc
adc
add
fs
jle
aad
outsl
jmp
mov
enter
adc
jo
mov
call
jb
arpl
rorb
lock
scas
push
sub
test
inc
orl
dec
and
xchg
fsubl
dec
jnp
cmpsl
orb
push
jo
aas
outsl
sti
inc
pop
je
cmp
inc
outsl
testb
xor
pop
imul
shr
and
lahf
gs
repnz
int
push
js
xor
add
imul
add
loopne
and
fldenv
fists
clc
or
xor
mov
test
insl
mov
inc
stc
outsb
lods
aas
inc
adc
mov
fdivrl
xor
jo
cmp
cmpsl
mov
outsl
jl
mov
cs
ljmp
xchg
mov
dec
inc
inc
sahf
xchg
aas
sbb
imul
ret
mov
pop
pop
push
insl
in
inc
pusha
mov
mov
lahf
addl
outsl
mov
sbb
jbe
fs
bound
idivb
lret
nop
or
cmpb
test
shll
jo
ljmp
and
mov
mov
in
add
pop
adc
push
sbb
mov
jecxz
das
test
mov
xchg
rolb
mov
push
and
push
idivb
mov
sbb
and
sub
add
in
pusha
outsb
cs
jb
adc
mov
stc
pop
icebp
push
call
mov
or
xor
test
orl
fldz
mov
push
iret
dec
xchg
fcompl
mov
pop
shlb
dec
and
lcall
cmc
je
aad
pushf
jo
dec
mov
into
shr
std
cmp
cltd
sub
shrb
jo
rorl
and
xor
cmpsb
ljmp
pushf
pop
or
dec
push
test
mov
fucomp
push
lcall
cltd
aad
dec
add
jmp
push
dec
mov
sbb
add
loope
mov
push
cs
jne
mov
sahf
scas
jecxz
and
inc
pop
insb
negb
lods
fidivs
xor
cmpsb
int
push
xchg
lock
jp
pop
jge
sti
mov
punpcklbw
push
push
sti
aam
jmp
fucom
adc
dec
sti
pop
dec
lock
addl
inc
daa
xchg
mov
push
pop
lret
scas
push
and
adc
xor
mov
sbb
lock
mov
cmp
repnz
fidivrs
push
fsubs
jl
cmpsl
xchg
in
lock
jnp
insl
shlb
cwtl
inc
push
fsub
push
cld
inc
fs
sub
inc
addr16
cmpsl
lds
mov
mov
divl
test
mov
jge
push
imul
dec
jnp
loopne
push
aas
repz
test
int
daa
insb
out
jb
push
outsb
ret
sahf
pop
loope
lea
insl
jg
jnp
add
pop
movsl
mov
jnp
push
push
adc
addb
sbb
scas
ret
push
jbe
rorb
xchg
push
movsl
decl
pop
mov
mov
cld
or
jbe
mov
mov
dec
push
adc
loop
rolb
cmpsl
daa
mov
sbb
je
ds
lret
mov
cli
push
fbld
test
adc
sti
dec
adc
cmp
jg
sahf
and
adc
pop
cwtl
mov
nop
ljmp
xchg
or
les
addr16
daa
arpl
sbb
push
fsubrl
imul
add
mov
mov
cmp
mov
sbb
movsb
mov
lcall
xor
mov
jecxz
pusha
lds
xchg
mov
xchg
ret
pop
out
jge
and
inc
dec
jne
dec
outsb
mov
stos
mov
je
arpl
cmp
sub
ss
mov
out
call
jp
clc
dec
scas
fnstcw
xchg
jb
loope
mov
sub
pushw
cmpsb
clc
mov
lret
cmpb
push
mov
nop
push
test
mov
xchg
cld
scas
out
sbb
jp
rcrb
loopne
inc
or
xchg
mov
cmp
push
insb
adc
dec
cmpsl
mov
mov
dec
mov
dec
rcrb
or
fstps
cmp
sarl
pop
lahf
cli
xchg
mov
mov
lods
sub
sub
cmpsl
and
mov
or
dec
aaa
movl
or
aas
cltd
imul
clc
out
das
push
lods
cmc
inc
lahf
stos
jp
lods
inc
andb
mov
cltd
pop
sahf
out
xor
jge
xchg
ficoml
mov
xchg
icebp
fldt
imul
sbb
negb
fwait
mov
push
shrb
dec
add
xlat
dec
add
addr16
cltd
mov
fmull
xchg
add
push
jnp
mov
xlat
imul
push
test
fnstenv
in
push
test
aas
add
ds
and
mov
pop
xor
aaa
out
adc
push
stos
call
int3
jmp
into
addl
cmp
enter
jno
out
inc
cmpsl
in
rcr
inc
divl
mov
xlat
inc
pop
add
pushf
js
adc
mov
fildll
jle
in
arpl
ja
jmp
gs
sbb
cld
jle
xchg
rcrb
test
inc
rcll
insl
or
outsb
testl
push
leave
fwait
stos
mov
dec
enter
scas
mov
mov
push
push
out
sub
lea
xor
inc
add
push
pop
shrl
push
cmp
clc
jno
lods
bound
push
jp
inc
lods
xor
rorl
daa
sti
hlt
fisubl
ror
xchg
sti
iret
inc
das
repnz
inc
pusha
push
adc
fistpll
jecxz
sub
ljmp
add
test
xor
mov
pop
leave
out
shl
je
and
fcmovnbe
xlat
divl
arpl
mov
arpl
mov
lret
bound
gs
inc
scas
lcall
sbb
dec
andb
mov
add
cltd
lock
cwtl
cmc
mov
push
inc
and
jg
loop
pushf
push
sbb
lock
es
xor
divl
js
pop
jne
in
fwait
loopne
iret
push
add
xorl
jecxz
insl
cmc
mov
mov
enter
dec
in
test
dec
jno
aad
stos
lcall
adc
rolb
popa
fsubrs
sbbb
mov
in
mov
repnz
mov
and
push
add
pop
sub
aam
xlat
add
jg
mov
es
mull
pop
or
adc
inc
push
shll
aaa
xor
xchg
ja
add
and
cmpb
outsl
mov
test
cmpb
pop
push
insl
cmp
mulb
pop
pop
and
test
mov
adc
cmp
lods
repnz
sbb
in
mov
insb
cmp
fbstp
into
cmp
xor
loop
jae
mov
lret
cmp
adc
js
xchg
cmp
fstps
add
inc
lret
jge
icebp
jnp
ret
stos
push
enter
loopne
inc
in
inc
scas
call
cmp
rcl
jo
sub
int3
xchg
mov
jb
enter
ljmp
call
clc
shlb
add
add
repz
push
sbb
sub
xchg
pop
ret
mov
test
mov
pop
pop
cwtl
jne
inc
pop
ftst
lret
loopne
jecxz
jo
or
pop
mov
cmp
in
loopne
lods
jmp
and
xchg
push
xlat
not
jmp
jo
xor
outsl
pop
adc
andl
mov
in
imul
test
mov
sti
ja
gs
out
sti
xor
pop
lds
cltd
jae
out
adcl
adc
stc
jmp
adcb
mov
in
es
mov
outsl
jbe
addr16
and
test
arpl
mov
add
mov
nop
cmp
div
push
dec
xor
pop
push
daa
daa
jno
mov
cwtl
mov
popf
test
sub
aad
xor
jmp
push
jmp
dec
clc
stos
sbbb
fnsave
fdivs
cs
les
push
mov
stos
mov
inc
xor
cs
loopne
dec
and
test
lea
in
inc
xchg
inc
adc
adc
int
cwtl
dec
je
sbb
lods
xchg
stc
or
or
mov
xchg
insl
movsb
dec
lahf
aaa
push
es
scas
mov
sub
sub
mov
push
mov
repnz
mov
pop
out
or
fidivl
dec
and
pop
mov
xor
scas
push
jne
enter
jg
jne
push
sbb
inc
or
aaa
jle
insl
mov
ja
mov
and
add
sub
xlat
jno
push
sbb
test
sti
sub
jo
sub
xor
cmp
imul
std
gs
mov
mov
cld
push
cmc
cmpsb
sti
test
add
push
pusha
push
iret
call
cmp
sbb
cmc
push
cmpsb
out
push
xchg
js
in
push
pop
mov
jno
push
cltd
mov
fdivs
pop
pop
jae
add
sbb
scas
test
add
xchg
or
mov
into
rcrl
mov
bnd
sbbl
cmp
aas
cmp
lcall
in
cld
pop
sbb
dec
in
cmp
xchg
dec
add
pop
loope
ja
cmp
rcll
xchg
lret
pop
cld
and
dec
fwait
adc
insb
mov
pusha
daa
pop
add
sub
mov
sub
xchg
mov
dec
xchg
xchg
pop
cmc
mov
mov
mov
jg
es
ja
enter
jne
dec
in
mov
imul
dec
rcrb
push
push
push
mov
cmp
sub
add
and
mov
jge
xchg
xchg
adc
repz
xchg
notb
loop
sub
inc
out
sub
xchg
movsb
pop
push
or
sti
xor
push
outsb
and
xor
aad
gs
ror
lods
mov
lcall
outsb
sub
ss
xor
xchg
and
jb
shlb
xor
stc
and
mov
leave
xor
insl
jmp
lea
leave
jnp
pop
fildll
shlb
or
xchg
sub
xlat
negl
sbb
inc
mov
jbe
dec
es
mov
js
pop
adc
subb
sub
loopne
sbb
ss
push
adc
lea
adc
bound
or
mov
jge
rclb
and
out
cld
mov
or
fwait
push
xchg
push
and
push
movsl
inc
aad
rcl
mov
fiadds
jnp
mov
repz
leave
pop
push
inc
pop
cmp
cmp
arpl
leave
iret
sub
faddp
shll
mov
mov
jb
jmp
sub
inc
and
mov
xchg
dec
dec
dec
cmp
or
stos
cmp
js
scas
test
inc
ss
aas
test
ss
ja
inc
xor
or
dec
or
cmp
dec
lahf
sub
test
ja
out
pushf
lret
pop
testl
in
test
sbbb
pop
sti
movl
jnp
popa
cmpsl
dec
mov
ret
push
mov
jle
mov
or
hlt
stc
inc
fcomps
xchg
jmp
add
inc
lret
iret
inc
dec
jbe
inc
cmc
push
mov
add
sbb
mov
mov
lahf
adc
rcll
fcoml
jne
xor
mov
cmpsl
sub
dec
test
or
mov
jb
sub
lock
or
mov
adc
lret
mov
mov
mov
push
mov
int
pusha
adcb
movsb
push
scas
fisubrl
cmpsl
cmp
mov
imul
jmp
sub
inc
mov
outsl
jae
fists
sbb
addl
push
cmp
loop
push
inc
sbb
dec
dec
push
adc
sub
aaa
outsl
mov
mov
addr16
or
outsb
inc
repnz
mov
inc
push
int3
mov
xor
mov
pop
cmp
js
in
sahf
push
call
shr
sbb
in
jne
mov
jge
out
push
jge
int3
adc
rol
mov
ja
dec
push
or
adc
xchg
add
popa
inc
lret
stc
scas
ss
push
cmpsl
icebp
ljmp
xchg
out
sbb
inc
adc
pop
pop
sub
lea
lfs
jae
mov
mul
jp
mov
insl
js
das
sbb
and
mov
sub
fistps
dec
clc
repz
and
mov
push
out
in
xor
xchg
adc
sbb
sbb
sbb
mov
movsb
les
xor
dec
mov
mov
addr16
cwtl
and
dec
test
xchg
push
daa
test
sbb
mov
clc
sbb
pop
pop
iret
ja
add
mov
cld
jae
push
out
xlat
mov
jne
lcall
cltd
mov
leave
in
subl
out
mov
cmp
sbbl
in
cmc
mov
mov
inc
iret
insl
mov
cmp
enter
mov
xchg
mov
sbb
jecxz
or
jo
jg
jae
mov
rcrl
mov
shrl
movsl
mov
mulb
adc
lods
pop
sbb
fsts
xchg
or
push
mov
int
les
lret
das
test
dec
cltd
lds
mov
sub
or
into
jns
xchg
ds
add
pop
addl
orb
pop
aam
xlat
xchg
pushf
adc
jae
cwtl
jne
mov
dec
dec
movlps
in
sub
push
cmp
shl
mov
pop
repnz
mov
imul
lods
inc
ficompl
dec
and
js
lods
dec
cmp
inc
js
ds
lea
aaa
clc
sub
mov
mov
cli
daa
sub
push
ljmp
lock
cli
ds
arpl
loop
loope
xlat
push
sub
adc
add
add
in
repnz
test
imul
in
mov
and
xor
loopne
xor
cmpsb
pop
sub
push
cmp
jns
sub
mov
mov
push
cltd
das
adc
jne
or
sarb
jl
je
popf
adc
inc
inc
ss
jne
push
ljmp
jo
fisubs
pop
std
adc
insb
inc
adc
push
test
and
adc
adc
pop
test
sti
pop
add
out
test
jns
push
std
lea
mov
pop
or
inc
push
sti
jne
arpl
mov
push
in
fs
push
mov
fstpt
sub
cmpsl
repnz
loopne
in
test
es
dec
xchg
add
pop
pop
adc
xchg
xchg
aas
inc
xchg
sub
arpl
stc
shrl
ret
loop
mov
test
push
shr
mov
xor
mov
adc
addr16
je
es
adc
add
sub
scas
xor
push
movsl
jmp
push
xchg
fimuls
mov
sbb
dec
popa
sub
rcrb
out
dec
sub
fsubr
loopew
mov
cmp
xlat
add
cmp
arpl
xorb
out
in
clc
add
fsts
cltd
repz
fsubl
jl
pop
jg
popa
cmp
test
rolb
xor
bound
pop
js
pop
xchg
cltd
pop
dec
cmpsl
shlb
sub
stos
stc
loope
lods
push
sub
adc
cwtl
push
jmp
lcall
or
les
jae
mov
adc
je
out
ficompl
jmp
mov
cs
sub
add
lcall
dec
add
aam
xchg
sub
imul
add
xchg
or
inc
and
in
add
and
fidivrs
mov
test
mov
or
mov
mov
insb
push
movsl
stos
repz
jno
cs
dec
gs
les
mov
sbb
into
and
cld
add
xchg
and
sub
faddp
dec
pusha
sti
mov
pop
andb
mov
fsubrs
in
fcmove
icebp
in
pop
cld
mov
sbb
outsb
mov
inc
push
sbb
xchg
xchg
inc
dec
pop
mov
sbb
and
mov
rcll
inc
hlt
pop
popf
outsb
push
cli
test
xor
push
stc
sub
add
adc
lret
movsb
inc
dec
dec
fldenv
test
cs
aam
cwtl
bound
mov
push
fs
xchg
inc
pushf
scas
fwait
mov
adc
enter
mov
sbb
push
notb
mov
sbb
adc
add
mov
roll
rcrl
mov
stos
daa
pop
xchg
sub
mov
sub
xor
jg
mov
packsswb
cmp
add
mov
movsl
xor
dec
jmp
ja
das
ss
mov
or
fs
push
test
dec
jmp
roll
mov
pop
xlat
stc
popf
into
outsl
imul
fbstp
pop
ds
pop
pop
adcl
push
xchg
sbb
jmp
cs
aad
das
jnp
xchg
cli
mov
mov
fmulp
cmpsb
adc
lret
lea
push
jge
mov
lods
pop
stos
fldcw
cmp
add
in
jo
popf
pop
loope
xchg
jle
jmp
mov
pop
or
lcall
mov
mov
pop
cmp
pop
inc
daa
mov
loop
inc
mov
int3
sti
mov
inc
push
fucomp
shrl
mov
mov
stc
stc
ljmp
xchg
icebp
jle
sbb
mov
fmuls
xchg
add
int
sub
aad
popa
ret
add
stos
add
mov
scas
fnsave
push
push
inc
fdivrl
dec
fwait
loope
xlat
or
sahf
jl
and
inc
sbb
test
jnp
xchg
cmp
popf
mov
fcompl
xorb
xchg
ds
cmp
push
jg
ret
lret
add
enter
fdivr
cmp
outsl
push
xor
shl
js
dec
out
xchg
dec
fdiv
sahf
jb
cmpsl
sbb
sbb
fs
mov
mov
cmp
push
in
jbe
repnz
je
divl
daa
pop
adcl
outsb
adc
test
out
test
int
xchg
cmp
push
fbld
insb
bound
imul
shlb
jae
mov
cli
mov
jl
test
orb
push
test
movsl
in
push
movhps
scas
imul
or
cmc
mov
xor
clc
push
sub
dec
push
out
dec
jne
jp
mov
fldl
aaa
roll
mov
popa
mov
mov
xor
outsb
lds
inc
jmp
out
xchg
js
cmp
and
mov
xchg
insl
mov
sahf
inc
push
in
aas
shrl
mov
adc
addl
movsb
sahf
mov
fsubp
jg
inc
ljmp
or
jnp
pop
push
rolb
scas
push
test
jl
js
sti
les
push
mov
clc
xchg
mov
lock
pop
aaa
loop
imul
sar
sub
ret
outsb
test
add
or
jle
out
jb
scas
and
sbb
cmpl
cmp
call
orl
lahf
in
fisubl
lods
xor
cmp
mov
idiv
jle
add
jo
cmp
iret
shr
repnz
arpl
lods
lret
leave
js
lahf
test
in
jo
mov
pop
xchg
cs
loope
or
mov
mov
sbb
movsb
xchg
insl
stc
faddl
add
inc
ret
repz
lods
and
xor
and
test
add
pop
mov
fistpll
das
aad
mov
fimuls
rcl
push
xchg
repnz
and
std
push
adc
iret
and
lods
inc
xor
push
mov
and
jg
out
adc
loop
xlat
addr16
xchg
mov
sub
jmp
xor
shrb
xor
mov
jg
adc
bound
adc
push
jbe
popa
add
mov
cmp
fcmovnu
hlt
lds
lea
movsl
jle
int
adc
adc
pushf
jne
fsubs
test
cld
push
mov
adc
fdivl
push
mov
xchg
pusha
jg
clc
pop
push
sbb
xor
inc
repz
shl
shrl
fstpt
or
aaa
jge
mov
and
test
cmp
cld
pop
cli
lcall
pop
xchg
and
test
stc
pushf
cmp
inc
sti
push
add
cmp
push
jb
enter
scas
arpl
imul
imul
movl
dec
xchg
stc
les
negb
fsubl
lds
pop
inc
mov
sbb
imul
fmull
and
push
sub
outsl
divl
xor
dec
jmp
cmp
pop
sbb
ljmp
enter
mov
pop
push
jmp
lods
gs
xchg
into
sub
add
daa
mov
cmp
cltd
out
mov
jnp
xchg
test
mov
sub
xlat
insb
push
push
lods
and
jne
xchg
insl
insb
test
or
decl
and
pusha
or
mov
inc
sahf
push
or
mov
mov
add
cmc
aas
mov
pop
and
hlt
test
shrb
dec
adcb
pop
cmp
pop
sahf
movzbl
jmp
sbbb
cmp
sbb
orl
jnp
orl
sarl
pop
test
xchg
push
scas
and
lret
push
xchg
lods
mov
loope
ret
cld
jo
test
lret
push
adc
dec
inc
icebp
or
cmp
dec
in
invd
insl
cld
shrl
pop
lock
jne
shl
jbe
decb
repnz
mov
add
ret
pop
fs
dec
out
and
xchg
rorl
add
popa
sbb
xor
and
fisttpl
stos
or
ret
jbe
push
outsl
jmp
lret
lock
in
aas
inc
pop
out
negl
frstor
mov
jbe
dec
lock
sub
popf
outsl
movsb
fbstp
jnp
je
mov
mov
jb
imul
sbb
shr
push
test
and
xor
xlat
xor
enter
cs
pop
jb
cmpl
adc
lock
clc
sahf
shrl
cmp
pushf
scas
and
pop
insb
push
and
xor
cmpl
mov
mov
push
loopne
into
pop
lods
or
sahf
imul
outsl
sbb
and
mov
push
dec
pop
xor
mov
xor
pop
cmp
lock
aas
test
in
xor
jns
jle
or
dec
cmc
jns
ficoml
int
mov
jo
mov
daa
lret
adc
movsl
pop
adc
push
int3
jbe
adc
bound
jp
cs
xchg
mov
inc
lahf
mov
shrb
dec
mov
cmp
cld
hlt
fstps
sbb
cmp
pop
push
add
pop
jb
push
stc
inc
sbb
pop
jb
pop
adc
lret
adc
and
jecxz
push
bound
sbb
dec
mov
stos
push
pop
push
mov
test
scas
sbb
loope
sub
push
jo
mov
lahf
in
stos
subb
lods
pop
sub
scas
mov
inc
adc
into
aam
jecxz
mov
icebp
repnz
inc
jle
je
cmc
push
testb
movb
fcomip
fucomp
push
inc
jne
jge
mov
xchg
mov
xor
dec
repz
dec
adc
jge
aas
idivl
xor
icebp
xchg
push
daa
push
pop
pop
enter
mov
dec
or
hlt
add
xchg
mov
daa
and
loopne
cmp
pop
outsl
popf
or
xchg
adc
jmp
idivb
or
cmp
xchg
dec
loop
push
loop
test
out
test
fwait
cld
fsubs
mov
shlb
mov
or
lahf
loopne
shr
push
inc
dec
cwtl
or
pop
addr16
pop
out
push
popa
lcall
jg
lea
xchg
popl
aas
xor
mov
testl
imul
pop
test
adc
movsb
leave
ss
dec
cmpsl
sub
loopne
jecxz
sbb
xchg
data16
ljmp
popf
mov
sbb
jle
sub
mov
sti
cmpsb
in
int3
cmc
mov
cwtl
inc
inc
mov
hlt
add
sbb
mov
gs
dec
jne
in
clc
cmp
aad
mov
adc
mov
mov
mov
jns
pop
call
inc
sub
jl
clc
and
add
mov
sar
rep
add
lcall
arpl
fimuls
jl
insb
pushf
cltd
mov
cmp
or
inc
lahf
sub
test
scas
jl
pop
insb
jno
xor
push
pushl
xchg
outsb
xchg
cltd
notb
or
or
jae
jnp
xchg
orl
aas
sbb
xchg
sub
add
xor
sub
outsb
and
vmovdqa
ss
insb
cmp
mul
xchg
add
xchg
ljmp
jno
mov
punpcklbw
mov
fsubr
cltd
sub
cmp
dec
js
sbb
jo
xor
aam
jp
int
pop
ds
push
inc
cs
cmp
pop
imul
dec
cltd
mov
adc
pop
sub
call
lea
or
lock
ds
xchg
out
add
mov
call
iret
repz
mov
mov
rcrl
jmp
jae
ficoml
je
adc
aas
data16
enter
pop
xchg
or
addr16
fmul
pop
test
rorb
out
jns
testb
sub
sahf
xor
in
mov
dec
jl
aas
ljmp
sbb
inc
loopne
negl
mov
stos
in
enter
jb
push
cmp
pop
push
push
inc
sti
push
cmp
in
jg
addr16
imul
cmp
loopne
xchg
test
mov
popa
xor
adc
mov
fs
cmpsl
ret
rorl
mov
pop
shlb
jbe
cmp
jmp
xchg
mov
rcrb
push
pop
jo
mov
xor
pop
adc
popa
in
sub
sub
sahf
xor
jmp
cmp
adc
pop
test
xor
inc
xchg
push
js
push
lods
cltd
fstl
mov
add
cmp
pop
outsb
cmp
imul
lcall
xchg
push
pop
push
hlt
aaa
inc
sub
dec
cmp
pop
cmp
sub
shrb
jp
lret
mov
or
push
call
mov
aam
push
orb
jl
push
ja
jmp
cwtl
adc
pop
mov
pop
jns
clc
fldcw
dec
cmp
sbb
jne
mov
fdivs
roll
pop
or
mov
push
out
mov
jne
xor
std
mov
cmpsl
out
push
jno
adc
sub
aam
test
mov
cmp
shrl
in
scas
pop
fbstp
jg
jb
inc
xchg
ja
jns
sti
xorb
mov
jecxz
cmp
loopne
and
mov
aam
and
pop
mov
adc
sbb
xchg
enter
lret
push
test
mov
mov
push
sub
inc
cmp
sarb
mov
mov
add
inc
add
mov
es
xor
adc
xchg
in
scas
loope
cmpsb
rorb
notl
addl
mov
push
dec
lret
or
inc
pop
mov
ss
fsubrl
inc
adc
ds
das
cmp
xor
sbb
in
mov
jae
lahf
add
xor
rolb
aaa
push
pop
call
or
jb
cltd
xchg
xchg
cmp
movsb
mov
push
adc
enter
rclb
inc
mov
sahf
lret
cmp
aam
cmpsl
lea
cmp
xor
arpl
jmp
or
outsb
xchg
adc
sbb
pop
dec
dec
sbb
test
push
push
repz
addr16
shlb
sar
jg
sbb
imul
xchg
sbb
loopne
mov
sub
repz
xchg
push
fmuls
hlt
xchg
aas
movsb
mov
push
pop
ficoml
lds
pop
loop
inc
sub
inc
sub
shll
ret
fxam
mov
add
mov
nop
clc
jnp
mov
sub
or
xchg
cltd
jne
cmp
xor
pop
lock
pushf
out
insl
test
and
xchg
mov
cmpsl
aas
xor
xor
dec
cmpb
mov
test
cmp
ret
add
sti
xchg
jne
push
inc
rclb
pop
aad
push
fmuls
mov
pop
cmp
add
mov
lea
sti
dec
insb
add
and
into
sbb
add
add
jns
or
shll
movsl
add
jp
xor
push
out
mov
jbe
sahf
test
dec
les
and
pop
inc
dec
roll
out
nop
mov
pop
jae
jg
mov
mov
or
dec
mov
mov
push
jp
dec
imul
pop
in
xchg
push
or
mov
js
int3
fisubrs
nop
hlt
je
mov
fdiv
cld
push
pop
push
sbb
dec
jle
fs
cld
call
andb
in
push
insl
inc
inc
fcomip
jl
sbb
cld
mov
jp
aaa
xchg
add
iret
mov
testl
imul
loopne
mov
dec
out
push
fimull
test
mulb
or
mov
jle
mov
in
popf
sub
popa
push
xor
dec
enter
lds
jge
xor
mov
popw
lahf
movsl
inc
icebp
jo
xchg
push
test
pop
inc
lods
dec
mov
fstps
outsl
frstpm(287
xchg
jb
dec
mov
or
scas
or
jno
and
cwtl
sbb
inc
ficompl
xor
inc
fs
js
or
fcomip
andb
pushf
jmp
sub
jl
and
pop
fs
xor
push
sbb
xorb
fdiv
shlb
push
and
addr16
imul
pop
cmc
cmpsl
mov
sbb
enter
test
mov
repnz
adc
pop
ja
xchg
das
and
aad
jg
jae
ss
data16
cmp
mov
fldt
cmc
push
push
movsb
repnz
mov
jno
jnp
stos
movsl
adc
es
imul
add
je
or
cs
stc
stc
call
int
out
stos
pop
push
push
mov
fdiv
pop
insb
xor
pop
repz
adc
cmc
out
push
sbb
loop
jmp
test
mov
sub
mov
push
mov
pop
or
add
or
popa
ss
push
mov
sbb
popa
xchg
xchg
push
out
bound
fisubrl
add
inc
cs
das
or
int3
subb
rol
ret
repnz
pop
xchg
push
in
lods
pusha
mov
fnstenv
cmp
arpl
push
fstpl
inc
and
push
adc
imul
xor
mov
push
add
iret
pop
out
jnp
jns
mov
mov
inc
pop
mov
mov
mov
stc
cwtl
andps
or
fcoms
or
jae
xor
mov
inc
or
pop
jmp
cmp
xlat
dec
mov
addl
stos
das
ds
repz
xor
push
add
or
pop
sbb
pop
sbb
xor
sub
inc
pusha
push
lret
iretw
sbb
jbe
cmp
enter
cmp
mov
sbb
sbb
mov
rcrb
or
iret
lret
inc
pop
idiv
pop
cmp
pop
xchg
adcb
ja
pushf
mov
mov
pushf
push
add
outsl
repnz
repnz
lcall
hlt
or
xchg
cmp
dec
sbb
add
lret
aaa
roll
test
lods
daa
aad
loop
lds
add
push
mov
mov
in
pop
aaa
adc
outsb
bound
sbb
xchg
in
iret
sbb
sbb
ja
out
mov
scas
mov
gs
pop
loopne
push
shl
pop
cmp
inc
pop
xchg
insb
shl
mov
lods
jp
mov
stos
jg
ficompl
cmp
push
mov
jp
mov
add
aam
wbinvd
fnstcw
imul
mov
fisttpll
movsl
xchg
std
shll
jbe
shlb
dec
push
pop
es
push
push
aam
jne
dec
mov
add
bound
fmulp
fisttpl
loopne
es
subl
fmulp
xchg
mov
sbb
call
insl
mov
xor
scas
xchg
xchg
or
push
les
xchg
int
bound
outsb
mov
das
or
add
lret
nop
insl
or
out
pushf
stc
xor
sbb
mov
xchg
inc
filds
sahf
dec
loop
push
jnp
ds
repnz
das
cmpsb
enter
int3
inc
lods
and
int
jecxz
lock
call
adc
mov
push
xchg
mov
fs
and
pusha
test
mov
cmovle
push
repz
lea
inc
fldl2e
pop
dec
pop
outsl
rol
and
shrl
inc
int3
xorb
ffree
mov
pop
hlt
cltd
mov
lds
mov
xchg
xchg
adc
push
inc
add
inc
mov
mov
movsl
mov
js
xor
cmp
pop
fsubrp
rcrl
subb
movsl
jg
leave
mov
mov
or
dec
cli
push
fsubrl
nop
jbe
out
mov
inc
lock
ja
test
dec
and
mov
imul
mov
pop
cmp
ficompl
jecxz
aad
or
cmpsl
movl
es
add
mov
jecxz
inc
sbb
mov
testb
inc
mov
dec
inc
mov
or
rclb
pop
and
out
sbb
shlb
je
lods
rorb
and
push
push
lods
adc
lods
xchg
test
push
rcr
mov
prefetch
adc
cwtl
das
not
xchg
call
pop
adc
sbb
sub
out
sbb
setl
dec
arpl
jmp
add
sbb
sti
and
in
fidivrl
mov
movsl
sbb
aad
imul
and
ds
xchg
mov
stc
scas
pusha
cmp
data16
inc
fnstcw
scas
popa
decl
pop
pusha
push
test
loop
or
cld
in
add
inc
sbb
les
std
cltd
push
movsb
mov
xchg
icebp
in
mov
xor
shll
push
add
dec
in
mov
push
push
cli
lea
cld
cmpsl
jns,pn
or
pushf
xor
out
imul
add
push
adc
fmull
add
ds
push
je
ljmp
mov
mov
jle
add
push
fsubrl
dec
in
andl
fiadds
inc
lods
mov
shll
mov
fwait
mov
fcmovnb
inc
and
test
mov
sub
xor
lret
ret
push
cmp
mov
dec
aam
push
popl
pop
insb
fmulp
shl
add
and
push
out
cmp
in
sti
leave
imul
adc
loopne
push
addr16
sahf
sbb
sub
pop
mov
mov
imulb
xchg
add
xor
pop
lock
xchg
adc
xchg
jb
mov
ret
inc
aaa
pop
and
cmpsl
incl
les
aaa
or
push
out
push
test
mov
mov
jne
adc
or
pop
shlb
mov
lret
xchg
xchg
sbb
mov
inc
xor
and
pop
dec
cmp
repnz
mov
dec
testl
mov
imul
iret
and
push
movb
shrb
loopne
xor
movsb
xchg
pop
imul
jmp
outsl
or
ficoms
scas
dec
xchg
jno
mov
dec
popa
add
cmpsb
out
push
ja
fdivrl
jo
call
xchg
popa
xorb
dec
dec
fimuls
cmp
fsub
decb
jno
iret
icebp
adc
dec
xlat
repnz
stos
jbe
iret
and
xor
lret
shrl
arpl
dec
pop
fsubrl
push
ljmp
push
sbb
add
ljmp
stc
sub
push
push
sbbb
fisubrl
lds
mov
cli
mov
adc
xor
outsl
fcmove
sub
ret
inc
popa
mov
and
inc
lcall
and
inc
or
cmp
pop
sbbl
loope
pushf
mull
sbb
mov
mov
mov
jmp
inc
cltd
das
leave
pop
mov
jp
stc
stc
test
cmovl
xchg
imul
loopne
push
fdiv
inc
dec
ss
and
stos
jg
inc
add
mov
push
fistpl
pusha
mov
jmp
inc
cltd
sub
adc
jl
stc
repnz
lcall
div
dec
jl
loopne
dec
adc
jo
rcrb
push
scas
test
xchg
mov
loopne
mov
fnstcw
or
mov
ret
out
loop
clc
fstl
pushf
lds
pop
pop
jge
push
xor
cs
xchg
pop
push
sbb
shlb
movsb
push
rcl
add
nop
loope
pop
loope
jo
pop
cmp
loop
xchg
and
dec
nop
cmp
cmpl
mov
jne
cli
out
aam
pop
pop
lods
mov
adc
int
sbb
repnz
outsb
in
add
push
cmc
jge
stos
jmp
sahf
jnp
and
inc
popf
mov
cwtl
inc
dec
adc
sahf
imul
mov
clc
xchg
daa
mov
inc
sarb
pop
adc
mov
cmpsl
test
das
std
and
mov
xchg
jg
loope
movsb
out
push
add
mov
push
mov
dec
push
outsb
movsb
or
shlb
cltd
cli
and
dec
xlat
xor
fldenv
fimuls
mov
fidivl
mov
add
or
push
pop
ljmp
bound
xor
dec
mov
jo
pushf
xchg
loope
and
sahf
stos
cs
lcall
mov
cmpsl
cmp
sahf
ja
mov
sbb
mov
fstpt
into
jl
enter
and
loopne
cmp
and
out
imul
insl
cmpsb
cwtl
or
lods
mov
jecxz
pop
insb
mov
popf
xchg
les
imul
and
movsb
sub
xchg
xchg
imul
or
out
leave
xchg
sub
test
ret
sbb
rorl
je
xor
sti
cwtl
jp
mov
xor
xor
pop
sbb
fs
pause
jnp
push
imul
xor
ljmp
rclb
mov
or
mov
cmpsb
jo
cmpsb
inc
xchg
sub
in
dec
jge
stc
lods
mov
in
push
outsl
inc
mov
pop
je
pop
andb
and
jb
xchg
cmpsb
dec
fiaddl
dec
fdivrl
jne
pop
push
sbb
nop
stc
rcrl
shlb
inc
shrb
pop
in
inc
and
cmp
add
addr16
shrl
and
in
inc
addb
dec
popf
sub
xchg
xor
mov
stc
jp
nop
ss
clc
cmp
ss
popa
xor
sub
jns
cld
outsl
xor
andb
push
fisubs
repnz
push
adc
jnp
in
xchg
scas
ret
fsubr
int
sub
mov
insl
in
and
imul
add
adcb
add
adc
add
dec
and
loop
pop
add
sbb
pop
lock
mov
std
xchg
mov
pop
sbb
fwait
ljmp
push
mov
ficoms
add
mov
xchg
mov
xchg
inc
hlt
mov
cmpsl
fsubrl
mov
add
fwait
mov
and
shrb
inc
sub
aaa
and
pop
aaa
pushf
ret
shrl
push
mov
test
push
int3
xor
outsl
ret
xchg
jmp
cmc
rorl
adc
add
stos
xchg
insb
in
jp
inc
push
out
sbb
jecxz
xor
clc
hlt
dec
mov
scas
push
xor
cmp
sub
mov
pop
cmp
and
out
jg
in
xchg
sub
add
mov
sbb
dec
loopne
cmp
sbb
or
ret
in
adc
insl
xchg
and
or
mov
cld
aad
rolb
imul
lock
jg
adc
cwtl
push
sbb
inc
ss
sub
jle
mov
out
ja
sub
jp
push
lea
or
cwtl
xor
mov
fists
ja
notb
out
xchg
adc
pop
daa
insl
test
inc
pop
fistl
add
dec
or
lea
movsb
fiadds
push
std
and
add
scas
push
leave
sub
mov
mov
jmp
mov
lret
mov
scas
fisubrs
and
das
push
mov
lock
add
mov
or
loopne
push
adc
cwtl
push
pop
push
xor
mov
loopne
dec
cmp
movl
iret
je
mov
xchg
mov
aas
add
popf
int3
dec
push
xchg
stos
dec
sub
in
and
xor
mov
mov
movsb
mov
add
std
push
aam
fldenv
shlb
popa
dec
fisubs
adc
lods
rcrb
aaa
xlat
data16
xchg
in
mov
mov
fndisi(8087
sbb
dec
fildl
lahf
inc
es
push
xlat
mov
stos
jnp
xor
cmp
and
insl
inc
je
dec
mov
lds
jne
cli
push
pop
sbb
test
aad
pushf
leave
lea
out
test
out
sahf
dec
lcall
hlt
or
notb
jecxz
les
pushf
xor
popa
cmp
push
cld
mov
pop
arpl
aad
jo
jg
dec
lahf
daa
ficoml
int
repnz
add
data16
sbb
outsl
mov
int
xor
cltd
mov
into
add
in
push
inc
add
mov
push
mov
add
scas
ret
xchg
dec
xchg
fs
jecxz
xor
int3
jnp
out
in
add
push
inc
mov
jo
out
and
xchg
or
pop
icebp
mov
pusha
pop
test
mov
out
or
jnp
lcall
sub
gs
push
and
call
jmp
movsb
in
mov
test
push
in
xor
fisubs
push
adc
test
outsl
lret
int
and
shlb
xchg
rol
cmpsb
sbb
in
andl
push
mov
and
lahf
sbbl
sbb
arpl
outsb
imul
sahf
aam
mov
dec
sub
scas
lahf
in
std
sbb
or
popf
and
or
add
rcl
mov
push
mov
mov
dec
das
je
xchg
mov
dec
mov
add
inc
add
add
stos
cmp
outsl
inc
push
ret
in
and
jb
jb
inc
mov
in
rolb
stos
insb
inc
lock
pop
dec
fisttps
loopne
jl
mov
pop
pop
pop
flds
xchg
pop
mov
mov
pop
icebp
mov
loopne
pop
out
pop
xchg
aas
lea
shll
inc
lds
inc
mov
and
xor
popf
stc
or
sbbb
inc
fdivl
add
jle
jge
lcall
and
popl
cld
es
inc
scas
jmp
cwtl
lods
dec
pop
fbstp
jecxz
dec
cmpsw
xor
xlat
divb
mov
sub
gs
push
xchg
cmp
leave
int
mov
sub
push
call
inc
jecxz
mov
xchg
sbb
xor
jae
push
test
and
aas
insl
or
mov
or
push
mov
sub
mov
dec
and
out
inc
lret
push
lock
mov
mov
mov
das
test
ds
dec
cmpl
arpl
and
shr
ja
xorl
push
and
cmpsl
jae
and
cli
mov
xor
sub
addr16
dec
mov
ret
and
push
jae
pop
popa
mov
adc
cs
xor
rclb
in
lds
sub
sub
jge
into
pop
rcrb
xchg
xor
inc
and
or
sub
mov
or
jle
insl
ja
add
mov
inc
mov
out
or
sbb
in
cltd
add
dec
sub
pop
repnz
in
add
dec
cmp
push
dec
dec
mov
push
mov
cmp
xchg
add
push
sahf
stc
popa
push
sbb
andb
cmp
cmp
lahf
outsb
aam
test
les
loop
scas
lcall
mov
pop
orl
or
fcomip
pop
push
dec
push
imul
stos
das
aam
mov
shlb
sub
lock
shrb
je
cmp
mov
jp
and
pop
mov
movsb
lahf
inc
add
add
rcrb
rorl
sub
lea
lea
imul
or
cmp
outsb
stos
pop
inc
lcall
loopne
jno
mov
xchg
dec
out
xor
jmp
in
xlat
outsb
push
xchg
insb
mul
jnp
rorb
or
jb
mov
shll
push
dec
xor
and
inc
in
mov
shlb
xor
or
mov
stos
test
push
test
jbe
clc
push
ljmp
mov
fs
ja
pusha
pop
jne
aam
add
or
cmp
imul
int3
rolb
inc
mov
aas
xchg
fnstcw
jbe
repz
cmpsl
jp
add
push
inc
push
fisttps
mov
icebp
pop
push
loop
push
call
and
sarb
jp
push
push
mov
fdivrl
push
pop
fnstenv
out
cmpsb
lock
js
pop
push
insb
test
test
jmp
roll
stos
jbe
fwait
repnz
or
xchg
jp
push
leave
aad
push
sub
js
sub
jle
pop
mov
ret
mov
mov
mov
lret
jae
ss
jg
xor
or
aam
shlb
sub
adc
jge
pushf
xor
adc
mov
mov
popf
mov
mov
mov
pusha
ja
shll
imul
scas
push
push
repz
jbe
push
fs
add
jge
lret
mov
imul
push
mov
outsb
sub
xchg
push
lcall
adc
jo
lcall
push
push
push
xchg
es
fsincos
xchg
jecxz
adc
int3
fiadds
sub
in
xchg
cmpsl
push
dec
fldl2t
mov
icebp
pop
add
and
mov
mov
push
jl
ret
out
insb
decl
dec
out
gs
push
xchg
enter
hlt
sub
pop
popa
les
jns
pop
inc
icebp
pop
icebp
adc
lods
ljmp
hlt
dec
mov
pop
pop
std
nop
jg
add
cmp
jb
push
rorl
cmpl
sub
fadd
sbb
cmc
xlat
push
dec
mov
data16
rcrb
push
cmpsl
dec
aam
inc
inc
in
sub
push
daa
push
lahf
test
and
cmp
mulb
mov
rolb
push
cli
pushf
xchg
mov
jae
js
sbb
les
ret
or
jns
mov
push
mov
mov
repnz
shlb
jmp
mov
cwtl
xor
andl
adc
mov
dec
repnz
popf
xor
sub
mov
lock
ret
mov
and
push
jb
inc
repnz
pop
sbb
es
mov
sbb
cmp
sbb
mov
fdivr
mov
or
fstpt
and
sti
stos
test
push
pop
repz
jg
aad
rcll
mov
int3
shll
mov
enter
cmpsl
mov
popa
je
jne
sbb
test
add
ss
shlb
push
lock
xlat
es
les
roll
mov
xchg
xor
jnp
jle
or
imul
mov
jae
fsubrs
fisttps
inc
int
dec
cmp
pusha
mov
ds
add
dec
iret
imul
or
jo
add
or
adc
or
push
inc
mov
jnp
fidivs
movsl
push
fisttpl
call
arpl
mov
addb
mov
dec
xchg
negb
sbb
jp
jne
dec
ds
fidivrl
push
in
pop
icebp
fisubs
cli
add
dec
fdivrl
mov
xorl
or
fcompl
xor
jbe
and
inc
push
lods
mov
ljmp
notb
fnstcw
ja
ficoms
mov
jle
cmpsl
or
jb
mov
lahf
out
mov
aaa
leave
loopne
push
ljmp
mov
dec
imul
cmp
jo
pop
lret
xchg
in
shrl
cltd
rol
shlb
mov
loop
test
cmp
xchg
stos
ja
jmp
scas
cltd
fsubr
lret
data16
xor
push
push
pop
loopne
mov
sbb
lock
xchg
inc
sub
mov
push
adc
or
int
pop
sub
mov
in
inc
repnz
mov
test
fcomps
sub
xor
scas
mov
push
cmp
lock
pop
lret
push
jb
ss
sub
test
dec
repnz
cmp
stc
and
xor
notb
or
inc
fidivs
out
rolb
fisubs
mov
lods
cmp
push
inc
pop
xor
xchg
shrl
div
or
push
ss
push
xchg
sbb
xor
sti
outsl
les
out
mov
clc
ffree
add
jb
addr16
fs
in
adc
movsl
test
fs
addr16
test
and
scas
mov
out
mov
cs
sahf
in
xchg
xchg
inc
leave
xchg
cmp
xorl
jg
gs
insb
addb
pop
rclb
stos
mov
out
pop
sub
mov
dec
pusha
jb
cmp
mov
push
sub
adcl
push
add
add
pop
hlt
stos
add
jnp
xor
push
mov
cmc
push
or
shrl
out
sbb
mov
sub
aam
pop
mov
mov
fidivl
mov
psrlw
pop
cmc
sub
pop
clc
test
aad
sub
movsb
or
and
sub
test
mov
fs
sub
or
dec
pop
sti
dec
pop
adc
pop
fstl
andl
jge
ret
hlt
mov
mov
test
aam
pop
outsb
jle
push
mov
mov
and
mov
hlt
jge
daa
nop
add
arpl
stc
mov
fs
mov
mov
mov
int
mov
or
mov
lods
pop
ret
and
jo
pop
push
and
or
enter
movsl
push
lahf
jbe
iret
xchg
ret
pop
dec
movsl
nop
mov
mov
loope
je
in
mov
cmovae
ljmp
js
sub
mov
mov
test
adc
xor
lcall
push
mov
pop
fwait
shr
cmpsl
loope
cmp
mov
mov
iret
xchg
push
aaa
mov
outsb
leave
xor
sbb
jmp
xchg
sub
das
push
out
lcall
and
adc
mov
dec
pop
insl
mov
lock
out
cmp
inc
mov
scas
inc
stos
add
push
insl
sbb
and
int3
out
and
lock
fwait
mov
add
imul
sub
rorl
dec
sahf
mov
js
in
cmp
popa
enter
dec
std
pop
ja
add
cmpb
lock
sbb
xchg
cmpsb
fiadds
out
enter
add
mov
idivb
mov
cmp
or
sbb
fadds
leave
xor
or
xchg
adc
adc
push
mov
insb
xor
das
xor
outsl
jnp
loopne
in
push
scas
cmpl
or
adcb
lcall
or
xor
out
inc
jno
xchg
not
enter
into
fisubs
es
stos
pop
stos
or
and
or
das
imul
pop
and
xchg
lods
jg
scas
push
lods
adcb
stos
and
add
cmp
xchg
xor
inc
ljmp
or
pop
sub
mov
cmp
mov
test
in
clc
mov
vmovapd
aad
push
insl
add
outsl
mov
lret
mov
call
fstpl
sub
sub
fldt
dec
sahf
cmpl
das
rcl
movsl
cmp
dec
jbe
xlat
dec
shr
loop
fwait
cmpsl
xor
daa
mov
imul
sub
and
pop
imul
es
mov
pop
stc
loopne
out
jl
jo
in
push
add
pop
mov
or
iret
mov
ss
add
lret
mov
sub
enter
cs
mov
xchg
mov
dec
dec
aam
insl
adc
cmp
data16
lds
test
push
aas
mov
nop
pop
push
lock
xchg
sub
or
xlat
mov
mov
and
cmp
arpl
jns
fwait
cmpsl
or
fwait
int3
test
and
addr16
pop
sub
insb
xor
pop
andl
lods
push
lea
mov
mov
dec
dec
daa
jo
data16
jle
test
cmpsl
pop
in
stos
mov
lahf
mov
in
adc
adc
add
gs
adc
mov
xlat
mov
mov
gs
mov
test
repnz
mov
sub
inc
rcrb
xor
inc
or
add
int3
testl
push
lods
jg
fnsave
stos
xor
lock
cwtl
dec
pop
std
or
aaa
js
shr
and
adc
mov
mov
and
sbbl
imul
add
adc
movd
sbb
scas
jo
fisubs
cwtl
mov
adc
ret
xchg
subl
jnp
pop
push
mov
insb
ja
mov
pop
or
sbb
jo
mov
test
mov
and
js
add
mov
outsl
cmp
jp
out
cmc
outsl
test
fmul
insb
cmc
xchg
jmp
je
xor
fisttps
push
jbe
mov
mov
mov
bnd
and
jno
lods
arpl
into
je
push
in
pop
mov
add
inc
push
cmp
push
jge
mov
dec
imul
sub
cmp
sub
mov
daa
imul
ret
adc
sti
mov
dec
lahf
dec
or
popa
lods
jo
dec
mov
adc
call
test
leave
jno
push
cmp
notb
data16
push
jns
clc
and
xchg
daa
je
fdivs
mov
sbb
orb
and
rcrb
push
call
mov
jb
sub
lods
add
test
mov
mov
lahf
loope
add
sbb
lcall
iret
test
xchg
enter
pushf
cli
sbb
lret
aam
or
sub
xor
sar
pop
into
push
add
loop
cld
xchg
subb
cmp
jg
cld
sbb
mov
add
mov
js
jnp
jno
ljmp
inc
gs
loopne
xchg
int3
or
aad
fxtract
pop
or
fsubrs
sub
fldt
inc
loopne
cld
in
decl
sbb
jns
xchg
jb
and
cli
and
xlat
jbe
aad
test
adc
push
xlat
xor
inc
clc
sbbl
idivl
aaa
popa
mov
ret
shrb
and
jp
sub
add
out
sbb
ffree
in
cmp
test
pop
dec
clc
cmp
sbb
sahf
xor
outsl
adc
sbb
sbb
daa
or
xor
lods
je
jo
leave
xchg
das
push
int3
loopne
mov
out
dec
jmp
jle
cmp
pop
cmpsb
out
fcoms
addl
mov
mov
bound
in
dec
insl
ljmp
adcb
inc
push
popa
mov
or
sti
dec
push
mov
inc
sti
scas
xor
xchg
cmpsl
vmovapd
das
ljmp
mov
mov
mov
dec
lea
dec
pop
bound
sbb
push
cmp
ljmp
cmp
xchg
pop
inc
cmpsl
pop
inc
jnp
testl
mov
dec
sbb
jecxz
leave
pop
in
push
ljmp
lea
xchg
add
test
scas
hlt
cmp
and
sti
bound
inc
imul
push
xchg
ret
loope
stos
loope
cltd
stos
test
test
pop
mov
mov
mov
jle
cld
fs
mov
sub
bound
inc
es
lahf
push
sub
pop
sti
or
shlb
push
loop
adc
cmp
cmpsb
ret
xchg
add
insb
ficoml
or
sbb
sub
testb
ret
ffree
pop
jnp
mov
movsb
mov
rcrb
mov
push
pop
mov
ja
mov
or
and
mov
push
sub
mov
or
xchg
mov
sahf
out
xor
xchg
adc
lds
pop
subb
and
frstor
cli
mov
loop
scas
ss
hlt
arpl
push
dec
mov
pushf
dec
push
fwait
popf
or
jb
mov
mov
xor
bound
testb
xor
push
xchg
cmp
mov
and
shlb
fisubrs
or
scas
inc
add
mov
inc
rcrb
dec
in
jp
mov
sub
pop
pop
call
and
sbb
mov
adc
test
pop
shlb
and
push
popf
ds
inc
cmp
fnsave
sti
pop
incl
dec
out
jle
not
and
aam
mov
popa
mov
std
hlt
mov
jmp
jae
cmp
adc
sbbl
xchg
adc
rcll
sbb
fcomps
cmp
jl
repnz
inc
clc
inc
dec
sbb
addr16
pop
fdivl
jg
fidivrs
enter
test
addr16
xchg
adc
and
lock
push
loope
pop
outsb
jb
call
push
cmc
push
mov
je
mov
push
les
add
xchg
outsl
mov
in
enter
ds
lea
or
mov
sub
mov
add
mov
ret
mov
or
fdivl
pop
int3
movsb
arpl
mov
add
out
dec
cmp
loopne
pusha
dec
aaa
pop
clc
adcl
orl
das
sahf
pop
repnz
dec
sub
cltd
movsb
push
in
xchg
and
dec
push
mov
xor
addb
out
or
or
shlb
lcall
repnz
cwtl
adc
and
jg
pop
pushf
jmp
or
ss
sti
jne
repz
sbb
and
dec
lods
inc
orb
sub
test
sub
add
push
popf
loope
sub
out
pop
xor
sbb
subl
xchg
cmp
or
rolb
movsl
inc
pop
into
lds
mov
and
xor
stc
adc
mov
mov
les
cmp
mov
cld
out
inc
mov
insl
dec
pop
xchg
stos
inc
movl
test
push
jne
loope
and
xchg
mov
push
cmp
fisubrs
sbb
push
cmc
jg
sub
ror
add
add
jns
dec
hlt
decl
cmp
test
ret
test
mov
imul
xor
shlb
and
mov
popf
sbb
imul
inc
mov
xchg
sub
mov
aas
pcmpgtd
mov
jmp
or
mov
push
inc
cld
addl
mov
arpl
inc
xor
pop
xchg
fbld
and
subl
xor
push
xor
mov
movsl
aam
fucomip
pop
xor
and
push
jne
jp
cmp
cmc
js
xlat
pusha
ret
adc
aaa
bound
jno
adc
mov
push
movsb
mov
std
mov
ds
dec
inc
or
pop
jae
shrl
mov
imul
add
cli
js
dec
mov
dec
and
xor
push
out
lahf
cli
pushf
add
cli
push
ds
adc
cld
sbb
adc
lock
xor
inc
jmp
call
or
in
adc
cmp
sub
pop
mov
adc
inc
sbb
sub
leave
xor
data16
mov
push
and
dec
lea
lret
or
mov
pop
test
dec
sbb
repnz
into
jmp
aaa
mov
pop
sbb
push
add
testl
out
hlt
movsl
icebp
aad
adc
mov
imul
lods
cmp
out
sub
xorb
out
bound
sub
mov
xchg
ja
xchg
dec
mov
cmp
ja
icebp
aas
popf
sbb
loopne
jnp
nop
cmp
imull
ret
add
aas
push
push
lds
xor
fs
xrelease
andl
in
test
imul
add
jmp
sub
jno
pop
lock
mov
xor
fisubrl
sbb
mull
add
push
jbe
or
adc
dec
mov
stc
xchg
lock
lret
push
lea
mov
mov
lret
ds
pop
loope
js
jge
hlt
lods
mov
dec
in
jnp
popf
push
cmp
hlt
xor
js
adc
dec
and
shrb
cltd
repz
fisttpl
or
fdivrl
fcmovnu
pop
or
xor
jno
or
movsl
pusha
fsubrs
sub
inc
xchg
popa
aas
dec
mov
mov
push
mov
pushf
add
loopne
mov
push
out
jb
xchg
mov
in
ret
or
push
divl
pop
lds
xor
cmp
add
sahf
push
push
sub
xor
and
add
xor
in
and
aaa
jb
jno
cmp
jbe
jge
pop
ret
ret
mov
addr16
cwtl
dec
mov
mov
sub
jmp
sbb
push
mov
stos
jmp
fstp
dec
add
pop
mov
lea
sbb
xor
mov
mov
subb
nop
inc
jns
jmp
or
movsl
dec
and
repnz
jp
out
out
data16
xor
popf
ljmp
jo
mov
or
es
fildll
int
jb,pn
mov
sarl
dec
push
jg
push
sub
and
lock
pop
and
pop
insl
hlt
inc
ret
das
cmp
pop
movb
or
aaa
lock
aaa
das
or
loop
jae
scas
jl
push
bound
int3
imul
aaa
orl
pop
outsl
pushf
xor
rcrb
jns
sti
inc
outsb
sub
xchg
adc
loope
decb
imul
or
jbe,pn
or
cmp
call
mov
fnstsw
cmp
addr16
ja
fiaddl
shlb
xchg
xchg
xor
dec
add
xchg
pop
pop
xchg
sbb
mov
aam
fwait
pop
jmp
in
out
jge
or
lea
repnz
lea
xchg
in
cmp
in
call
push
lock
cmpsb
ja
xchg
sarl
pop
adc
mov
pop
repz
leave
mov
in
cs
xchg
jmp
pop
ret
adc
call
fdivl
adc
gs
push
cli
mov
cli
cwtl
das
lock
jge
jns
mov
mov
add
cmpsb
adc
or
les
jl
adc
mov
xchg
jae
in
ret
pop
xchg
pop
pop
and
lods
mov
ret
rclb
mov
shll
xchg
sub
inc
xor
and
xor
inc
mov
fnstsw
push
movsb
xchg
imul
mov
mov
montmul
cmpsb
add
lcall
in
dec
or
daa
inc
out
jmp
cmp
addb
mov
sbb
inc
jge
mov
and
jge
pop
ja
js
mov
mov
cld
cmp
xor
xchg
jle
sbb
add
pop
inc
movsb
movb
out
jns
pop
arpl
pop
mov
mov
or
adc
iret
lret
jno
mov
xorb
adc
les
outsl
sub
je
fcoms
mov
sub
inc
iret
xor
cmp
movsb
add
imul
mov
call
xor
or
scas
inc
adc
jl
and
leave
or
or
pop
mov
test
test
out
push
scas
mov
sbb
test
mov
fucom
ret
cs
rcr
je
add
lret
xchg
fildll
arpl
mov
rorb
pop
cmc
push
imul
cmp
and
jae
test
lahf
or
xor
or
pop
imul
daa
lcall
adcl
sbb
mov
mov
int3
cmpl
push
mov
nop
clc
lods
in
jns
cmc
add
pop
out
inc
add
sbb
jno
es
mov
ud1
dec
cmp
mov
popa
jmp
push
loop
mov
lock
out
xchg
dec
dec
adc
data16
je
jg
pusha
test
ss
xor
xchg
lea
adc
push
test
das
es
lret
add
fists
sarb
mov
loop
sub
dec
pop
xorl
incb
jg
pop
in
test
hlt
testl
mov
fdivrl
test
imul
scas
or
idivl
inc
fimuls
nop
add
incb
ret
and
dec
dec
inc
aas
push
lods
jo
sub
dec
inc
negb
cmp
xchg
lcall
call
cmc
insl
and
icebp
pop
cmp
jg
lahf
fnstsw
insb
add
cmp
dec
fisttpl
push
xor
popf
sti
cmpsb
in
pop
dec
xchg
mov
lds
sbb
or
cwtl
js
imul
xor
movsl
jmp
loopne
sbb
xchg
imul
pop
in
rol
mov
push
jne
cwtl
pusha
ss
pop
mov
fsts
lret
bound
inc
jecxz
js
push
mov
adc
imulb
lret
ret
xchg
mov
mov
leave
out
mov
andb
das
cmp
xorb
sbb
xchg
stc
cmp
mov
xchg
pop
adc
imul
idivl
pop
sub
or
scas
mov
lahf
push
cli
mov
lods
repz
xor
das
shlb
xor
mov
mov
lret
rcrb
xor
pop
loop
push
mov
mov
pop
out
sarl
fcom
add
repz
or
cwtl
popa
and
mov
xor
leave
pusha
xor
jb
fsubr
cmp
xor
dec
gs
cli
xchg
aam
rol
xor
jno
sbb
mov
sarb
jno
inc
lods
ljmp
and
pusha
inc
cmpsb
call
fs
dec
push
or
lock
cmp
xor
xor
sub
jp
es
adc
rcrl
inc
push
xchg
mov
fwait
cmp
xchg
jbe
lds
pop
mov
movl
cs
or
sbb
push
jp
cmpsl
xchg
pop
add
adc
imul
clc
insb
aam
inc
cltd
fidivrs
jb
push
fnsave
jo
or
or
lock
fisubrs
sub
stos
xchg
add
xor
lret
jle
sub
sbb
xor
mov
jno
gs
push
jo
dec
sub
call
int3
pop
dec
sbb
mov
push
ds
rcrl
xor
insl
xor
push
scas
inc
or
stc
ds
cmpsl
jle
loope
jle
pop
cs
scas
jp
jns
sbb
push
leave
sbb
test
daa
mov
stc
aam
fcomi
movsl
shll
pop
push
rorl
add
cli
je
call
sti
stos
push
add
cmp
std
icebp
insl
xor
insl
popf
fisubl
inc
aad
mov
gs
dec
inc
nop
fbld
js
adc
test
loopne
in
adcl
or
dec
mov
lret
out
mov
mov
sub
pop
sbb
fiadds
repnz
xor
sbb
adc
sbb
ds
jl
adc
insb
xor
xor
or
xchg
mov
jg
les
or
daa
flds
in
add
cmp
iret
in
out
cld
inc
push
insb
scas
fsub
xchg
scas
cmc
rcll
jg
ds
pop
in
push
frstor
in
cmp
fstl
dec
jno
loope
cwtl
loopne
hlt
cmp
mov
and
ficoml
mov
lret
adc
cwtl
cmpb
fst
push
rdmsr
jbe
ja
fcoms
or
xchg
xor
adc
push
lods
mov
push
mov
cmpsl
enter
std
xor
movsb
out
leave
mov
ds
cld
jp
pop
and
dec
arpl
xchg
daa
mov
mov
lret
lret
sbbl
gs
and
cmc
xchg
pusha
ret
or
iret
fstps
rcrl
cli
lcall
push
xor
pop
adc
scas
dec
mov
movb
mov
mov
ds
adc
mov
mov
xorb
imul
data16
jg
mov
in
sbb
mov
pop
mov
in
sub
out
push
sub
repz
or
repnz
out
pushf
sub
cmp
xchg
and
outsb
add
sbb
mov
sub
cmp
add
out
gs
inc
sbb
mov
jp
mov
mov
adc
fnstsw
enter
cmp
pop
mov
loope
cltd
out
std
test
jbe
int
nop/reserved
imul
cmp
fnstsw
and
sti
add
sbb
das
insb
aam
lock
lds
push
mov
jo
in
adc
inc
subb
cli
cmp
dec
mov
test
add
lods
inc
fisttpl
sbb
adc
adc
ret
sbb
jno
ja
ret
dec
test
add
shl
pop
pusha
mov
lcall
xchg
adc
pop
aas
dec
je
in
push
jnp
das
pop
sbb
mov
cmp
mov
int3
xor
inc
add
loope
fdivp
and
push
mov
dec
jno
in
jmp
test
es
scas
or
shll
stos
shlb
jge
mulb
shrl
dec
popf
jle
cmp
dec
test
in
lods
xchg
fs
dec
pop
push
inc
or
popa
jnp
xchg
call
xchg
js
int3
lea
xor
testl
shrl
mov
scas
mov
test
in
aad
fldt
call
pop
mov
lret
fs
hlt
sbb
mov
iret
je
fwait
repnz
es
dec
dec
or
or
dec
mov
sti
rep
test
xor
jns
add
out
pop
mov
loope
jae
dec
mov
xorl
add
repz
push
nop
pop
inc
std
movsb
xor
xor
test
sub
loope
add
hlt
mov
pop
xor
gs
add
mov
mov
pop
jno,pt
add
jbe
dec
insb
mov
into
add
out
test
xor
lods
inc
jae
or
rcr
in
sti
push
pop
out
sub
mov
add
mov
insb
add
in
push
jecxz
xlat
pop
imul
lock
jb
ja
les
mov
daa
mov
enter
add
cmpsb
dec
mov
nop
repz
clc
cli
cmp
inc
mov
pushf
mov
and
out
mov
ljmp
ds
lods
test
inc
xchg
push
dec
fistpll
pop
addl
jnp
out
dec
jecxz
ret
mov
push
notl
mov
ret
lea
mov
xor
sub
punpcklwd
cwtl
movsl
adc
stos
aaa
xchg
adc
and
fsts
cli
jmp
cmp
mov
jnp
add
xchg
les
sbb
add
fucomp
cli
rcr
in
or
stos
cmc
mov
popa
sub
xchg
sub
xchg
dec
jne,pn
stos
cmp
sahf
xchg
adc
cmp
push
ljmp
and
popf
stc
or
mulb
nop
xchg
add
jbe
cmp
cltd
inc
jl
lcall
int
inc
inc
int
mov
in
cmpsb
shll
sahf
and
adc
cmp
cmp
pop
inc
push
inc
inc
shl
add
into
and
mov
call
mov
ret
sahf
xlat
mov
sahf
mov
push
daa
ss
xchg
aas
cs
call
cmp
sbb
arpl
jg
mov
sti
and
add
xchg
jle
ret
and
popa
fadd
repz
nop/reserved
popf
xchg
jns
movb
cli
bnd
fs
je
imul
test
test
fnstsw
mov
ret
mov
xchg
push
pop
dec
sub
push
sahf
xchg
lock
cmp
xor
dec
pop
sbbl
lret
push
mov
sbbb
mov
std
xor
cli
adc
pop
and
push
or
aaa
jo
ljmp
dec
mov
jb
mov
iret
sub
mov
cld
loopne
sti
pushf
mov
jb
inc
out
jns
xlat
in
mov
inc
data16
jne
outsl
jl
mov
ret
jge
call
mov
inc
leave
push
adcl
xchg
jl
ret
pop
movsb
out
or
xchg
pop
int3
mov
testb
mov
mov
ss
mov
loopne
in
out
inc
pop
jns
test
test
push
jge
push
xor
dec
cmp
push
dec
fbstp
ds
data16
jecxz
imul
in
test
inc
xchg
sbb
mov
push
mov
and
test
shrl
test
mov
mov
movsb
ret
cmp
and
pop
push
movsl
push
and
lds
mov
negl
rolb
es
fbstp
cmp
mov
jl
jne
mov
ret
inc
jecxz
xor
in
inc
inc
hlt
and
mov
push
mov
test
and
mov
jo
inc
xlat
fidivl
pop
mov
aam
and
arpl
mov
dec
imul
xchg
jne
add
mov
push
xchg
adc
adc
out
ljmp
mov
mov
dec
cmp
es
sbb
lds
rorl
fwait
dec
pusha
das
pop
icebp
pusha
out
loope
inc
mov
mov
cltd
push
ror
aas
loope
or
jne
mov
aad
insb
shrb
adc
add
ss
push
mov
cwtl
cmp
jae
pop
jmp
and
push
lds
push
rol
or
inc
and
pop
push
ret
lcall
sbb
sbb
push
and
scas
mov
shll
les
push
ds
in
fcomps
mov
into
imulb
loope
mov
std
lea
mov
jae
outsb
push
inc
scas
insb
pop
sub
pop
jle
add
lcall
mov
jbe
and
mov
out
inc
call
xor
lret
push
mov
inc
jae
pop
push
mov
fidivrs
repz
xor
imul
push
fisubrl
leave
cmp
addr16
adc
cmp
sbb
inc
push
in
dec
pop
movsl
mov
mov
fs
sub
mov
out
sahf
push
std
ret
sbb
arpl
fidivrl
pop
fcomi
mov
lods
cld
movsl
jo
je
aas
sub
fistpl
mov
popa
jns
cmpsb
lea
xchg
pop
test
mov
cmpsb
pop
jge
lea
lret
xchg
mov
hlt
aam
pop
sub
inc
in
cmp
rep
call
test
dec
dec
inc
or
outsb
mov
imul
in
insl
pusha
pop
in
ret
lds
aas
out
mov
add
lret
xchg
icebp
cmp
and
mov
add
movsl
mov
dec
lock
push
push
cmp
sbb
inc
sbb
shll
jl
into
mov
jl
add
icebp
jnp
push
jmp
inc
xchg
xchg
mov
mov
dec
add
push
cmp
fbstp
xchg
inc
pop
repnz
ret
stos
mov
fcmovu
xor
sti
xor
mov
ret
ficomps
imul
aam
dec
mov
lock
scas
add
rep
mov
repnz
mov
pop
mov
out
cli
cmp
clc
xchg
mov
fs
cmp
adc
mov
push
jno
ret
test
insb
shrb
pop
in
test
jo
imul
xor
push
int
pop
dec
mov
addr16
mov
add
lret
jmp
cmp
mov
mov
repz
pop
push
inc
adc
or
imulb
mov
out
add
int
ja
xor
lods
inc
hlt
push
push
popf
mov
push
inc
mov
jle
xchg
mov
cmpsb
pop
movsb
jecxz
sub
jb
pop
xchg
jnp
sub
enter
xchg
test
stos
mov
push
jae
add
mov
sbbb
or
psadbw
ja
inc
mov
add
pop
adc
or
mov
mov
lret
in
insb
xchg
push
arpl
scas
repnz
cli
mov
mov
dec
int
pop
in
into
xlat
dec
movsb
lea
lds
mov
mov
daa
loopne
mov
cmp
test
pop
push
mov
add
push
cmpsl
xchg
incb
sbb
fists
cmc
push
cmp
data16
mov
lret
push
in
mov
arpl
shrb
adc
mov
call
ds
fdivs
push
daa
out
jnp
pop
push
mov
scas
leave
out
lock
and
fbstp
mov
add
mov
outsb
les
push
push
jp
out
mov
jl
pop
pop
jb
stos
inc
adc
testb
andl
daa
fwait
sti
or
mov
ret
pop
fwait
test
pop
cld
gs
imull
jle
test
add
mov
cmc
ret
hlt
push
sbb
mov
aad
aad
ret
fdivrs
sbb
jae
xchg
clc
popl
lahf
and
mov
int
loop
leave
push
jne
sbb
in
cld
mov
or
mov
sub
cmp
arpl
push
push
or
and
test
jno
sbbb
imul
jle
cmc
adc
xchg
dec
in
jle
outsb
mov
hlt
mov
xchg
insl
roll
and
and
mov
adc
lret
bound
mov
imul
in
test
fistpl
pop
sbb
cmpsb
out
scas
ret
pop
loopne
mov
lret
mov
xor
out
mov
in
mov
dec
lret
je
mov
out
add
sbb
sub
lret
mov
dec
dec
dec
in
movsl
mov
cmp
xchg
dec
sbb
cmp
mov
test
pop
sbb
cmp
mov
xchg
jecxz
fwait
mov
dec
cmp
leave
pop
ret
mov
inc
or
push
jmp
aaa
ss
adc
call
or
test
popf
out
mov
mov
repz
subl
inc
jp
adc
pop
nop
cmpsl
sti
pop
add
xchg
lcall
movsl
push
repnz
cmp
dec
jns
ss
cmp
xchg
mov
ret
jmp
popf
jnp
push
rol
jbe
out
movsl
pop
movsb
push
mov
add
xchg
push
and
int
mov
mov
pop
or
add
lods
sub
daa
mov
loopne
sub
and
in
daa
push
aas
inc
dec
and
xor
inc
ficomps
mov
rep
mov
xor
mov
jns
out
or
mov
dec
cmp
jge
cli
lea
sti
xor
jmp
iret
sbb
arpl
mov
push
jg
ret
lds
fdivs
hlt
mov
or
sub
adc
mov
pop
pop
imul
mov
mov
sarb
adc
cmp
shrb
pop
rorb
inc
mov
xor
fsubl
sub
pop
gs
lret
shll
jo
loop
in
out
cmpsl
adc
cmpsl
cmp
cmc
sbb
fdivrl
lcall
and
je
push
sub
nop
lea
stos
or
pop
push
fnstenv
or
js
subb
scas
sahf
push
insb
rclb
mov
inc
loope
fildl
pop
inc
xor
adc
ljmp
jns
aad
sub
lea
dec
mov
jbe
pop
sub
adc
and
outsb
xchg
add
lods
xchg
jb
lahf
jae
inc
xor
cmp
inc
mov
jae
jne
or
mov
jns
xchg
cmpsl
add
and
pop
add
jbe
dec
ds
stos
ret
lcallw
out
in
std
das
and
xchg
add
test
inc
jo
movsl
dec
data16
sbb
add
test
pop
ja
mov
pop
rorb
movsb
jae
aad
add
add
repz
js
adc
sub
mov
out
mov
cmpsb
maxps
dec
out
cmpsb
cmp
insb
xchg
pop
lcall
push
adc
push
or
out
imul
out
pushf
jg
popa
inc
cld
dec
jmp
xchg
rcl
jae
nop
movsl
dec
cs
out
shr
std
pop
mov
adc
jnp
into
push
sub
xchg
jns
and
add
in
push
nop
mov
aas
mov
lret
into
popa
and
es
mov
and
push
adc
fbld
bound
lods
pop
xchg
or
cmp
out
inc
pop
in
movsb
add
mov
or
adc
scas
and
fldenv
fimull
ja
cld
ror
ficoml
fstpt
hlt
add
sub
les
enter
lods
mov
dec
in
pop
adc
in
frstor
arpl
inc
sahf
or
rorb
lods
dec
adc
cmpb
daa
xchg
mov
bound
inc
mov
pop
pushf
mov
cli
inc
xchg
mov
sub
pushf
mov
cwtl
xchg
mov
cmp
inc
in
popa
es
insl
enter
jo
hlt
pop
sbb
pop
movsb
cmp
xchg
dec
sbb
pop
mov
pop
jecxz
fsub
pop
cs
xchg
pop
xchg
scas
cmp
scas
mov
std
jl
add
into
in
xor
outsb
mov
inc
pusha
cmp
dec
jle
sahf
jno
push
ret
mov
fdivrl
es
inc
adc
lea
fldl
push
adc
jo
fbstp
push
clc
push
dec
dec
cld
push
lahf
shll
jl
shlb
daa
xor
test
pop
mov
push
les
aas
stc
rorl
xor
test
cmp
add
inc
out
aaa
test
in
push
cs
fistpl
mov
rcrb
lret
lret
xor
xor
dec
stos
push
pop
and
jne
incl
xor
or
mov
sub
repz
sub
mov
xchg
ja
dec
out
sbb
xchg
inc
xor
movups
cmp
ja
into
outsl
daa
xor
cmp
fidivrl
inc
xchg
addr16
out
sbb
sbbb
outsb
add
xor
lock
jbe
push
mov
mov
ja
pop
xlat
movsb
cmpsl
add
cmpsb
div
push
shrl
sarb
clc
pop
ret
xor
fldcw
mov
pop
inc
xor
arpl
sbbl
or
movsb
movb
cmp
pop
movsb
fwait
jne
sub
push
sub
or
inc
test
test
mov
test
pcmpgtd
aad
addr16
frstor
je
jno
jno
or
mov
out
cs
movsb
jbe
mov
push
je
jb
inc
mov
jae
icebp
mov
dec
sub
sbbl
test
call
stos
xchg
pop
add
add
bound
lret
pop
sti
pop
ljmp
cmp
in
ljmp
pushf
mov
mov
xchg
stc
and
aaa
mov
cmpsb
push
pusha
icebp
dec
mov
data16
enter
dec
push
pop
lock
call
add
cs
in
cld
cmpsl
xchg
sbb
shll
leave
push
rcrl
bound
mov
aam
out
mov
pop
dec
les
and
pop
hlt
jp
arpl
in
cmpsb
xchg
das
add
sbb
and
mov
jbe
scas
xor
loopne
test
sub
into
rcl
and
sbb
add
sub
stos
aad
push
and
pop
cmp
jecxz
bound
aad
xor
ret
outsl
cmpsl
ret
push
mov
mov
or
in
icebp
xchg
mov
addr16
test
add
mov
loope
shl
imul
pop
jb
popf
shr
add
xlat
mov
mov
push
inc
cmp
push
adc
xor
dec
push
int
mov
shll
lret
and
inc
push
push
sub
imul
jl
into
enter
adc
xchg
jns
arpl
jg
xlat
es
aam
negb
shr
out
fcomi
adcl
int3
or
out
out
test
sub
sbb
repnz
dec
mov
jno
xor
jmp
fistpl
fs
ret
mov
ret
in
mov
data16
xor
stos
mov
dec
dec
cli
sub
xchg
pop
sbb
pop
inc
frstor
int
insl
mov
adc
je
jmp
cmp
sbb
dec
mov
jp
ficoml
pop
mov
mov
jg
xchg
mov
pop
cld
xchg
xchg
jo
subb
jle
push
icebp
movsb
inc
mov
jnp
push
rorl
cmp
shr
out
pop
xchg
or
jg
xor
mulb
dec
dec
movsl
xor
fnstsw
ds
in
fnsave
or
test
and
pop
xor
out
xchg
sub
dec
pop
movsb
push
iret
sub
fiadds
mov
ljmp
lret
cli
adc
dec
push
xchg
outsb
add
fiaddl
sar
mov
out
in
xorl
aas
mov
out
insb
loope
xor
in
orl
pop
dec
pop
fisttps
jns
test
fidivrs
adc
fldl
orb
scas
inc
data16
cmpsb
adc
inc
fisubs
cld
pop
mov
mov
hlt
push
pusha
and
sub
addl
pop
dec
xchg
movl
fimuls
or
pop
xchg
cmp
inc
push
pop
mov
push
dec
inc
adc
sub
and
dec
xor
or
adc
jle
arpl
and
cmp
jae
mov
push
mov
sbb
mov
pop
jge
jb
int3
dec
pop
and
nop
and
mov
pop
xor
xchg
pop
negl
or
movsl
adc
gs
sbbb
lods
movl
cmp
dec
pop
adc
or
xor
push
jp
and
xchg
icebp
jl
arpl
pop
xor
sarl
cmpsb
lret
lods
mov
fwait
cmc
jg
inc
out
mov
rol
jle
arpl
and
mov
int
in
jp
xchg
mov
push
fwait
cmpsl
or
pop
daa
mov
divb
or
or
subb
xchg
out
add
cmp
fstps
shrb
movsl
push
cmc
mov
rcr
in
lds
and
aas
push
stc
push
jae
lret
gs
in
or
divb
mov
push
lsl
and
push
ss
xchg
cmpsb
mov
loopne
cli
xchg
push
or
lods
sbb
mov
rolb
pop
xor
add
lahf
cmp
imul
fmul
int3
pop
mov
and
cmc
mov
inc
xchg
cmp
sbb
adc
int3
dec
loop
xor
sub
push
pop
jg
je
aam
aam
push
ja
aaa
je
jge
cmpsb
push
outsb
mov
cmp
sub
inc
sub
and
xchg
ds
andb
sbbb
rcrl
adc
dec
mov
add
cli
rcr
mov
lods
rol
repnz
cmp
mov
push
pop
xor
ret
in
push
movsb
orb
aaa
dec
test
xchg
xchg
daa
inc
cmc
cld
mov
stc
in
adc
sub
and
test
mov
ret
pop
sub
in
xlat
add
sbb
pop
and
push
cmpb
fsubrl
lea
cltd
nop
daa
lret
js
jmp
out
or
nop
cmp
push
push
negl
cmp
push
jne
lcall
mov
mov
xor
aas
insb
sub
shl
orb
out
repz
cmp
add
push
or
xor
push
xor
cmp
stos
adc
mov
inc
push
repnz
outsl
xchg
sub
into
fidivrl
shlb
sub
stc
pop
cmp
sarl
aad
inc
repnz
popf
or
mov
jns
adc
out
lock
adc
sub
icebp
mov
and
adc
shlb
mov
test
push
xor
dec
das
dec
stc
xchg
in
lods
aam
icebp
nop
movsb
and
out
push
mov
xchg
mov
popa
jl
sbb
popa
mov
and
push
mov
arpl
daa
mov
int
movsl
and
pop
out
imul
cmpsl
jo
jbe
in
adcb
lea
stos
jle
jo
adc
ss
push
jmp
lret
dec
inc
lods
jmp
add
xor
and
inc
cltd
mov
xchg
xor
ja
outsl
cmp
fucomi
dec
out
test
fbstp
cmp
popf
fwait
xor
es
sbb
sahf
mov
cltd
loop
les
dec
jl
loop
aad
mov
xchg
mov
xchg
jne
jp
xlat
pop
inc
mov
sub
mov
das
clc
movl
cmp
into
inc
jae
jp
inc
js
daa
mov
mov
cmpsb
or
ljmp
inc
fucomp
clc
pop
enter
test
loope
xor
fidivs
jne
es
mov
test
shl
pop
adc
in
popf
cmp
jno
pop
in
and
mov
xchg
iret
sbb
push
sbb
pop
cmp
mov
lcall
jp
addr16
push
fsubl
fsubs
fwait
mov
add
bound
xchg
push
dec
xchg
outsl
arpl
xchg
push
mov
ljmp
jmp
lods
sbb
out
xor
xchg
sub
iret
mov
mov
addr16
leave
mov
inc
mov
cmp
sub
mov
adc
cmp
mov
ret
sbb
divl
mov
and
or
sbbl
into
test
stos
fdivrl
and
fildl
insb
mov
adc
pop
pop
shlb
cmp
add
adc
rol
mov
dec
dec
lcall
daa
stc
jp
in
sub
mov
xor
pop
push
xlat
shlb
mov
mov
jb
mov
data16
or
lea
push
iret
hlt
fwait
xor
mov
sbb
jns
mov
movb
clc
in
loop
loop
ret
inc
jne
and
push
sub
cltd
inc
push
sarl
xor
sbb
pushf
lcall
sbbb
jle
jg
out
lahf
mov
in
int3
and
add
lods
imull
sbbl
add
imulb
lahf
add
cwtl
imul
adc
orl
rorb
shlb
inc
sub
mov
cltd
je
and
inc
call
jns
sub
sbb
mov
iret
popa
and
cwtl
add
js
hlt
clc
pop
std
inc
cmp
or
adc
jl
stc
nop
lahf
xchg
push
mov
jg
insb
adc
xchg
out
sti
rcrl
les
jmp
xchg
pop
mov
cli
jb
mov
fdivrl
adc
dec
cmp
dec
cltd
test
ljmp
fwait
aaa
adc
lret
jmp
std
scas
inc
jmp
arpl
les
mov
subl
sbb
popf
mov
je
stos
sbb
js
lods
fisubs
add
or
je
ret
bound
sbb
fnstcw
ror
cmp
fimuls
xchg
in
add
mov
fbld
cmc
mov
and
bound
adc
aam
fwait
inc
lahf
inc
lahf
sub
int3
sbb
lea
out
inc
arpl
enter
sbb
jge
insl
scas
lea
dec
mov
add
mov
dec
mov
add
loope
push
xchg
pop
cmp
cmp
ljmp
pusha
imul
dec
push
mov
arpl
push
mov
xchg
sub
aas
cs
xlat
imul
xchg
in
aad
or
push
imul
push
sbb
pop
das
ret
jnp
push
dec
dec
loope
decb
jle
push
imul
movsb
mov
testb
adc
je
jnp
and
inc
cltd
add
xchg
pand
ss
rclb
test
insl
hlt
scas
inc
out
sub
dec
push
outsl
call
iret
repnz
pop
call
jmp
test
adc
sbb
adc
xchg
cmpsl
icebp
out
adc
fnstsw
out
adcl
aad
nop
jl
or
xor
xor
xor
mov
push
addr16
sub
xchg
loop
push
out
imul
jg
pusha
mov
or
pop
add
rclb
xchg
cmp
sbb
data16
and
sahf
mov
leave
imulb
lcall
ss
cmc
jnp
fucomi
int3
push
dec
jg
xlat
outsb
pop
sahf
into
sarl
insl
and
sbb
push
add
fdiv
paddb
jo
adc
sbb
daa
outsl
xchg
add
pop
scas
xchg
sub
fnsave
mov
rep
sub
pop
inc
sbb
lock
insl
punpckhdq
or
mov
inc
into
xchg
imul
adc
lret
jne
gs
ljmp
idivb
add
nop
lea
mov
mov
imul
lods
jl
cmpsb
leave
clc
cmpsb
mov
jl
fnstcw
fnstcw
push
and
xchg
das
adc
dec
rcll
mov
lahf
push
mov
in
icebp
fidivl
mov
stos
lea
stos
jns
mov
or
jae
add
cmpsb
sub
leave
loopne
jg
jle
adc
mov
notl
std
repz
jne
int3
outsl
jb
aas
push
nop
in
xchg
jp
inc
push
sbb
dec
or
dec
std
adc
push
pop
aam
aas
lcall
xor
dec
and
inc
inc
mov
xchg
pop
or
rcrb
pop
repnz
std
stos
addl
shlb
scas
orb
inc
loop
mov
lock
ljmp
testl
sbb
jnp
dec
icebp
mov
mov
in
js
xor
jbe
mov
les
test
mov
shll
clc
push
jg
mov
sbbb
xlat
test
mull
mov
sbb
mov
das
pop
test
mov
push
adc
xchg
mov
mov
cmp
fninit
push
jp
pop
add
sbb
nop
cmp
loop
jbe
sbbl
mov
mov
sbb
rol
mov
adc
rorb
frstor
xor
scas
mov
test
bound
inc
cmp
xor
ffreep
loop
adc
jne
mov
jmp
or
into
dec
stos
push
sarl
or
icebp
dec
test
sbb
pop
les
adc
out
add
or
inc
push
inc
out
iret
pop
adc
lock
ds
add
cli
lret
scas
sub
insl
inc
mov
sbb
pop
mov
sbb
xchg
or
sub
sbb
cmp
xchg
les
fmulp
sub
dec
in
dec
movsl
icebp
add
cmc
mov
stos
adc
sbb
inc
jmp
insb
pop
inc
add
push
insl
out
pushf
xor
mov
hlt
imul
movsl
inc
cld
jmp
dec
test
ret
xchg
mov
sub
loopne
in
das
mov
repnz
sahf
inc
out
out
dec
es
or
push
push
push
mov
inc
stc
out
ja
and
dec
aad
lds
xor
xor
incb
shll
insl
jnp
fistl
mov
in
icebp
int3
sub
insb
inc
and
pop
xor
push
jle
jb
scas
push
in
leave
stc
lea
mov
aas
mov
cli
aad
xchg
fsubr
nop
fildll
notb
xchg
pushf
dec
in
popf
out
dec
imul
insb
test
and
jmp
mov
adc
js
add
ret
lods
inc
hlt
iret
shl
jns
lret
cmp
jns
mov
jge
test
sahf
sahf
or
fadds
test
iret
jne
fcmovnbe
inc
pop
jecxz
pop
fwait
jp
lahf
inc
push
mov
mov
pop
and
clc
nop
cmpsb
sub
cld
pop
pop
scas
inc
add
jae
bound
cmp
aam
scas
out
xchg
pop
hlt
add
repnz
jg
fstps
jg
std
lods
sarb
mov
mov
xchg
inc
pop
xchg
lret
mov
pop
sub
xor
xor
mov
add
movsl
push
add
pop
mov
fdivrl
dec
rcrb
repz
xorb
push
negl
inc
jecxz
sbb
mov
loopne
addr16
das
adc
dec
jnp
daa
ret
sahf
jae
repz
push
adc
adcl
push
jg
out
jl
xchg
or
mov
sti
subl
adc
test
pop
lcall
sbb
add
adc
xlat
push
lret
in
test
vpandn
shl
or
arpl
and
sub
mov
jbe
cld
fst
cmp
jl
mov
mov
test
addr16
ret
fwait
xchg
mov
xor
cmp
and
imul
inc
pop
or
js
and
pop
stos
es
push
popa
clc
aas
daa
movsl
mov
push
push
ljmp
jno
pusha
fdivrs
stos
mov
jg
push
jb
popf
xchg
push
imul
cmp
stc
xor
outsb
arpl
mov
push
lea
sbb
stos
adc
dec
insb
or
loope
sbbl
jne
sbb
add
repz
xchg
cmp
lock
pop
mov
aad
inc
idivl
add
cmp
and
mov
psraw
je
inc
movsb
xchg
add
sahf
mov
jo
insl
shll
test
insl
fistl
xchg
xor
repz
cmp
mov
movsb
aas
lods
lahf
mov
sbb
sub
lds
pop
xchg
shlb
cmpsl
daa
pop
jo
or
fbstp
sbb
insb
inc
int3
adc
iret
loope
jl
mov
and
es
iret
add
mov
sbb
jo
scas
dec
and
push
cmpsb
stc
mov
test
bound
out
adc
cmc
jl
inc
pushfw
sahf
int3
pop
mov
or
lahf
add
mov
hlt
gs
gs
bound
mov
mov
push
ljmp
mov
jns
aad
xchg
lcall
jmp
or
push
pop
rorb
dec
insl
lods
lret
xor
push
jns
in
sbbl
out
or
mov
cltd
or
push
test
xchg
imul
gs
pop
or
movsb
and
mov
and
xor
cmp
mov
or
mov
ret
cmc
push
mov
dec
sbb
pop
pusha
jg
xor
das
inc
cmp
pop
jmp
loope
push
icebp
roll
pop
ljmp
push
inc
sub
mov
aad
mov
fwait
add
pop
or
movsl
inc
test
clc
xchg
xchg
aam
decb
arpl
add
repnz
dec
pusha
inc
cmpsb
daa
mov
cmp
sbb
or
in
jbe
mov
xor
sbb
stos
dec
leave
sub
mov
xor
xchg
xchg
cwtl
push
or
sbb
stos
cmpsb
repnz
pop
sbb
stos
or
clc
es
inc
adc
push
ret
inc
mov
cmp
pop
sti
subl
stos
push
dec
lret
bound
adc
inc
cs
mov
loope
dec
push
adc
int
push
or
xchg
push
inc
fimuls
pushl
insl
dec
add
fsts
in
psrad
lods
stos
cltd
dec
mov
std
sbb
sti
xchg
adc
test
xchg
pop
movsl
or
pop
out
jae
adc
sub
and
pop
mov
jnp
fwait
mov
or
push
out
add
sbb
xlat
pushf
js
dec
mov
push
aad
inc
roll
mov
push
ljmp
repnz
inc
push
std
out
or
pop
xchg
xor
enter
mov
sbb
call
adc
xchg
les
popa
dec
shlb
sbb
aad
cmp
add
in
sahf
push
shlb
inc
dec
inc
inc
aas
out
inc
pop
mov
insb
jp
into
fidivs
jo
cmpsl
xchg
aaa
into
ret
dec
test
jae
cmpsb
aam
cmp
xorl
push
cmpsl
or
mov
xlat
fxch
mov
sbb
movsb
inc
or
cmpsl
sahf
ss
sbb
lret
xor
sub
sahf
dec
std
cmpsl
movsl
xchg
mov
mov
xchg
shl
inc
jl
aas
mov
fwait
cmpsl
gs
jl
sbb
sbb
xor
add
xchg
arpl
jg
mov
outsb
cmp
dec
jns
mov
mov
in
fisttps
sbb
or
outsl
arpl
frstor
sbb
incb
mov
add
add
xchg
les
sub
mov
cwtl
in
sub
jmp
popf
or
sub
aad
jns
cwtl
sub
push
jb
or
movsl
add
out
mov
and
xlat
stos
inc
pop
shlb
sub
pusha
pop
mov
push
gs
mov
sub
or
cmp
incb
popf
sbb
lahf
and
shr
cmp
or
cmp
jmp
adc
js
xchg
hlt
cmp
ljmp
popa
push
aam
test
repnz
jnp
in
adc
movsl
scas
insl
jno
jnp
inc
in
or
or
cs
pop
mov
and
pop
repz
stos
lods
loopne
or
add
dec
out
dec
mov
shrb
mov
movsb
lret
add
arpl
inc
pop
sbb
loope
jge
push
mov
icebp
or
faddp
push
insl
jge
in
and
mov
ljmp
outsl
xor
push
cmc
mov
stc
adc
push
testb
sahf
into
mov
inc
cld
gs
lret
and
fisubs
dec
popa
repz
movsb
mov
cmp
jae
loopne
xor
shl
ss
pushl
call
or
pop
repz
ret
jge
jle
sbb
xlat
cmc
dec
cmp
test
or
sub
mov
jl
sub
pop
mov
pop
sub
enter
sbb
dec
cwtl
cli
nop
xchg
repz
jle
divb
pop
push
mov
jb
sub
test
push
inc
push
mov
inc
and
repz
push
mov
ret
loopne
lods
adc
in
jl
mov
add
addl
aaa
jmp
ret
and
fdivl
jb
jne
sti
xchg
mov
das
add
and
push
sahf
das
imul
push
and
mov
aam
push
mov
cli
sbb
or
push
movsb
ret
pop
lret
jnp
push
lods
in
out
xchg
in
mov
fwait
cmp
sbbb
xchg
push
mov
adc
xchg
call
add
xchg
lea
sahf
mov
inc
lcall
fildll
xchg
nop
ljmp
cmp
mov
dec
dec
movsl
and
push
lret
lds
add
dec
pop
call
mov
aam
cmp
adc
xor
fs
lea
push
jo
push
inc
bnd
mov
fbstp
rdpmc
push
mov
std
mov
fnstcw
repnz
outsb
jns
push
push
push
pop
fsubrl
mov
in
xor
es
xchg
sbb
test
sahf
add
pop
add
je
add
int3
xor
sbb
mov
aas
xor
fwait
xchg
cmp
es
test
fnstenv
data16
mov
js
and
and
inc
test
js
xchg
insb
pop
ljmp
jno
push
and
fisubrs
push
lcall
lods
inc
xchg
dec
mov
xchg
insl
shlb
outsl
or
test
clc
mov
mov
ret
jnp
lock
sub
jp
clc
mov
mov
je
lods
shrl
daa
fcmove
orl
repnz
adc
or
sub
into
repnz
in
popl
test
xchg
stc
in
cmp
cmpl
and
jo
in
gs
add
cmp
leave
xor
pop
jl
fidivrs
repz
jb
scas
inc
fcoml
cmc
int3
and
lahf
sbb
nop
test
pop
mov
roll
xor
aad
dec
pop
xchg
mov
js
movsl
mov
or
jge
iret
add
dec
mov
sahf
clc
std
inc
sub
inc
pop
fdivs
sbb
jge
notl
es
push
cmp
and
outsl
add
add
test
pop
xchg
xor
out
popf
aas
xchg
cmc
out
jmp
jp
out
mov
test
pusha
adc
xchg
adc
ja
mov
cwtl
and
cmpsl
add
fisttpll
or
xchg
cmp
lods
and
add
cmc
fstp
mov
pop
xchg
mov
lods
fcmovne
repz
xor
fisubl
pop
lds
mov
and
inc
pop
and
pop
fsubs
aaa
pop
dec
sub
int3
movsb
pop
mov
dec
in
out
push
fists
push
xlat
test
aas
push
xor
cmp
imul
shl
imul
mov
gs
jp
movsl
fistpll
xchg
mov
addl
jns
fcoms
sub
jge
xor
daa
push
xchg
lea
inc
int3
add
push
int
jbe
xchg
pop
testl
aas
jmp
adc
js
mov
sbb
jmp
cmp
int3
fsubr
stos
add
mov
push
sub
fwait
scas
inc
inc
jl
or
test
lret
jae
sti
mov
in
jecxz
jns
or
xor
pop
cmpsb
mov
jle
push
mov
lds
in
xor
inc
sahf
xor
xchg
mov
das
cmp
nop
pop
insb
cli
pop
cmc
aas
sub
jl
jl
xchg
inc
jbe
jp
sbb
mov
ljmp
hlt
int3
mov
fwait
mov
arpl
leave
imul
in
dec
inc
mov
cmp
push
mov
loopne
pop
push
xor
fdivr
bound
xchg
cmp
subb
outsb
out
xchg
ret
lea
hlt
cmp
adc
jns
push
add
mov
fistpl
enter
or
cmpsl
scas
out
rolb
mov
sbb
sbb
and
dec
push
adc
sbb
rcrb
aas
loope
push
in
adc
pop
and
adc
in
aad
mov
add
scas
mov
sub
repnz
xchg
jg
dec
sti
enter
cmp
cld
pop
cmp
movsl
aad
mov
pop
lds
cltd
rol
or
mov
dec
enter
les
sbb
pop
pusha
and
loopne
mov
out
mov
shl
xor
das
fs
icebp
setnp
xor
inc
fwait
mov
aaa
into
imul
ds
test
inc
sbb
lds
mov
out
mov
inc
jno
aad
pop
cs
fstpl
xlat
jb
sahf
xor
jbe
test
inc
bound
js
inc
fucomp
inc
fs
xchg
les
rcrb
push
add
test
cltd
ret
jge
imul
scas
jne
pop
hlt
int
in
sub
stos
inc
int
mov
mov
data16
xchg
js
mov
jg
inc
fs
push
sbb
sahf
pop
imul
mov
jmp
jg
hlt
cmp
lea
and
xchg
adcl
xor
jmp
dec
inc
cmp
aad
inc
add
lock
rorl
and
enter
xor
xchg
add
mov
call
inc
xor
mov
push
cli
mov
movsl
dec
daa
mov
xchg
test
xchg
addr16
xor
dec
rorl
shrl
mov
sub
push
scas
jmp
push
push
sahf
lea
outsl
inc
pop
mov
or
and
idivb
cmp
lahf
decb
mov
out
dec
or
sahf
inc
lea
ja
lahf
jb
cwtl
sahf
pop
std
in
stc
or
lret
aam
ja
xor
ja
in
in
push
dec
pop
repnz
pop
loope
jecxz
sbb
sub
pop
xchg
pop
xchg
leave
cmp
cld
test
ja
cs
xlat
dec
arpl
push
jl
sub
lds
mov
inc
jns
sbb
sbbb
in
mov
test
cmovno
aad
test
lret
into
mov
stc
xor
xchg
sub
add
js
xlat
cli
lods
xchg
cmp
pop
stos
push
mov
sub
fstl
cmp
sub
aas
push
sahf
dec
pop
lock
jo
and
aam
xlat
sbb
pop
gs
push
xchg
in
xchg
jb
movsb
mov
dec
in
test
ja
jnp
scas
mov
mov
bound
mov
and
inc
mov
dec
ja
rclb
push
or
mov
movsb
ja
insl
movsb
cmp
mov
decb
fsubr
add
push
dec
sbbl
popf
or
decl
movsl
andl
cmpsb
mov
push
push
sbb
outsl
pop
loope
test
xor
sbb
or
xchg
xchg
add
jnp
sub
adc
ss
push
insb
iret
pop
add
rcrw
adc
mov
outsb
cmc
or
adc
lds
add
dec
mov
jecxz
mov
adc
jnp
pop
shlb
mov
xchg
loope
bound
fisttps
shlb
pusha
mov
jae
inc
dec
out
inc
stos
inc
js
sub
or
in
xchg
dec
xchg
xor
xorb
lock
dec
in
mov
in
roll
inc
arpl
xor
daa
aas
dec
lock
dec
inc
xlat
aas
add
fldt
dec
adc
add
mov
mov
dec
fists
adc
push
mov
xchg
or
mov
xor
push
loopne
push
fnsave
jno
lds
pop
push
testb
cmp
cltd
mov
int
loop
mov
fsub
jno
dec
pop
sub
andl
jo
bound
pop
mov
subl
jbe,pt
loopne
inc
mov
jmp
jae
sbb
dec
mov
cmc
mov
imul
lcall
aad
mov
addr16
das
loop
pusha
fbld
rclb
loope
ret
sti
popa
jmp
mov
inc
ret
pushf
mov
and
sti
sbb
pusha
pop
ljmp
ss
repz
sub
popa
pop
aaa
popa
jnp
aas
jns
imul
pop
jno
psraw
stos
mov
mov
stc
xor
mov
in
cmp
jbe
ret
cmpsl
or
sub
sbb
and
cmp
je
mov
mov
shrb
hlt
add
jb
enter
cli
lea
fidivrs
push
mov
repz
clc
sbb
mov
lret
arpl
shlb
cmpsl
aam
cltd
or
mov
leave
pop
lcall
mov
stos
das
and
mov
std
call
int
jp
xor
cmpb
and
bound
xchg
mov
xor
insl
loope
cmp
imul
mov
dec
ret
and
lods
mov
movl
adc
stos
lock
push
jno
pop
lret
mul
into
push
mov
xchg
sbb
dec
jmp
pop
in
rcll
jge
and
arpl
cmc
mov
and
adc
cmpsb
mov
sbb
push
test
je
xor
testb
jl
loop
cli
addl
adc
xchg
sbb
mov
rcr
out
jbe
call
out
pop
sub
call
push
jno
mov
leave
inc
insl
cld
les
pop
shlb
and
mov
jmp
and
jb
mov
inc
sbb
dec
mov
jecxz
push
and
or
pop
test
dec
sarl
adc
outsl
loope
mov
and
cltd
call
or
scas
inc
sbb
data16
adc
xor
ret
es
push
add
cmp
push
aad
sbb
mov
pop
fldenv
ret
xchg
idivb
call
jecxz
in
clc
cmp
out
xor
bound
or
jb
or
push
cltd
and
inc
pop
inc
xlat
int3
pop
adc
push
mov
or
xor
xchg
mov
sub
vpsubb
add
cltd
or
lret
cmpsb
and
push
xor
mov
mov
and
pop
mov
adc
les
sbb
mov
pop
test
jg
pusha
mov
stc
pop
xchg
rcrl
inc
imul
xor
sahf
xchg
ret
jbe
leave
inc
ljmp
xor
mov
add
push
mov
mov
cwtl
rol
jle
mov
inc
call
lcall
test
call
int3
pop
repz
ret
push
pusha
ret
fistpll
xchg
imul
sbb
out
jbe
aam
push
pop
mov
cmp
jp
iret
repnz
stos
and
xor
flds
arpl
vbroadcasti64x2
jp
daa
inc
sub
or
je
loop
pop
push
dec
dec
add
sub
mov
fidivrs
std
sahf
lret
or
lcall
js
stc
inc
popa
and
xchg
add
adc
lds
or
pop
cmp
stos
inc
push
push
loopne
xor
cli
sub
cmp
in
in
inc
fildl
push
or
js
cmp
addl
or
sub
inc
add
xchg
ret
call
movsl
jl
xrelease
push
push
js
sbb
inc
jp
mov
in
inc
mov
loopne
jmp
arpl
or
jne
pusha
xor
roll
mov
sbb
pop
ror
mov
lds
adcl
add
mov
dec
fs
sub
cmp
in
mov
fldcw
push
dec
push
stos
and
das
fisttpl
popf
mov
sbb
int3
ret
jle
bound
xchg
pushf
in
jge
mov
jae
xor
pop
imul
cmc
jl
and
roll
loopne
adcl
popa
call
arpl
fadds
idivb
loop
aaa
xchg
lods
shlb
and
mov
cltd
test
or
sub
les
imull
pop
mov
push
or
inc
cli
pushf
in
lcall
into
mov
icebp
adc
dec
xchg
pop
jmp
into
sub
add
push
dec
inc
loopne
sbb
cmp
cmp
push
push
dec
dec
inc
add
push
xor
loope
bound
xchg
fs
cmpsl
lcall
sub
mov
aam
movsb
jmp
in
cmpsl
or
mov
js
loopne
test
mov
pop
out
notb
test
cs
negl
cmp
mov
test
cmpsb
mov
xchg
push
inc
pushf
xor
or
nop
and
xchg
mov
jo
enter
mov
enter
mov
push
push
out
xor
scas
push
stos
test
loopne
push
xchg
daa
xlat
dec
add
rcrl
and
push
ljmp
imul
int3
jg
or
push
and
insl
jmp
dec
xlat
pop
cs
mov
icebp
push
push
enter
cmp
sti
inc
cmp
aaa
jle
loope
push
xchg
jns
sbb
dec
data16
sti
sahf
fmuls
pop
cmp
cmp
mov
arpl
shl
mov
jl
fisttpl
popf
mov
ret
fs
hlt
bound
and
xor
sub
pushf
int
xchg
cmp
and
shrl
fcompl
push
mov
icebp
mov
or
int
cmp
sub
loop
test
in
inc
inc
jae
rep
outsb
inc
test
or
aam
mov
cmpsl
jb
insl
cmp
aas
jns
pop
cmp
adc
repz
mov
pop
loopne
sbb
jl
rcrl
push
add
insl
cmp
fdiv
xor
cwtl
add
in
add
sti
xor
jae
and
in
mov
push
es
fbstp
pusha
daa
xor
lret
sti
fisubrl
loope
into
into
mov
popa
aam
inc
shll
sub
aam
mov
jle
xor
cwtl
negl
jl
addr16
add
mov
push
jecxz
xlat
out
mov
lds
or
in
push
add
cmp
and
aad
sub
xchg
xor
in
addr16
lea
icebp
out
fistl
xchg
js
adc
scas
lret
pop
lahf
sbb
lock
lret
cld
mov
fwait
sub
shlb
pop
mov
push
repz
and
ss
int3
pop
fsubrs
insb
sbb
ret
nop
repnz
cmp
fwait
scas
and
pop
ss
fidivs
rcrb
sbb
cld
fwait
aad
aad
jo
and
je
aaa
and
stos
inc
into
push
das
inc
data16
out
cmc
pusha
addl
or
jg
push
jle
mov
mov
rorb
fdivl
in
loop
pop
jp
cltd
sub
pop
pop
jne
cmp
sub
test
fwait
fs
int
jbe
aas
fcmove
loope
cmp
test
lds
xchg
inc
rol
lds
pop
dec
sbb
cmpsl
fs
aad
jns
and
sbb
ljmp
pop
mov
mov
clc
in
fstpt
out
nop
jg
daa
cmp
cwtl
xor
loope
pop
pop
mov
and
in
sub
iret
dec
in
int
push
subb
scas
pop
mov
xor
orl
adcb
dec
push
stos
repnz
xchg
pop
push
inc
flds
sub
movsb
inc
mov
sbb
scas
and
cs
je
pop
rcll
imul
mov
sbbl
pop
sbb
inc
push
mov
orb
or
mov
imul
stc
ret
push
dec
sarb
cmp
inc
adc
and
aam
sbb
cmc
ss
mov
jg
cmp
xchg
es
dec
jmp
or
mov
imul
iret
push
add
enter
push
ljmp
pushf
fdivrp
mov
cmp
mov
pop
out
outsl
jb
jle
es
sbb
aaa
nop
pop
add
ljmp
jne
outsb
mov
sbb
xchg
pusha
sub
out
rol
mov
repnz
test
lods
push
in
push
push
jns
aad
notb
mov
adc
fidivrs
mov
push
mov
out
xchg
popf
lea
xlat
sbb
and
mov
sahf
int
push
push
mov
lcall
scas
inc
sub
inc
inc
test
push
or
xor
aas
sbb
xchg
sub
push
mov
fstps
xchg
jno
leave
xor
adc
sbb
fnstenv
cmp
mov
xchg
mov
mov
je
mov
xor
mov
sub
cmp
scas
adc
and
push
xor
jge
imul
push
add
mov
gs
or
mov
mov
mov
sub
pop
leave
sub
jo
int3
dec
mov
jnp
dec
movhps
lds
and
inc
outsl
aad
shrl
mov
shr
add
xchg
aas
xchg
mov
dec
nop
sbb
mov
cmc
sbb
ss
inc
sti
stos
incb
xchg
mov
in
hlt
jae
lds
or
rcl
les
outsl
pushf
mov
mull
lcall
and
pop
pop
scas
push
iret
xor
jl
push
es
xchg
fwait
pop
ja
cmpsb
xor
popf
cmp
xorl
rorb
xchg
subb
xchg
das
mov
loopne
mov
testl
sbb
js
xor
cltd
sub
adc
adc
inc
negb
fcmovu
lret
sub
push
cmpl
adc
cwtl
out
mov
dec
div
adc
data16
popa
pusha
jge
out
movsb
pop
cmp
push
xchg
push
cwtl
mov
mov
sub
lock
dec
int3
mov
mov
lahf
or
xchg
sub
mov
cmp
push
loop
stos
in
dec
inc
ret
out
fistps
fmull
mov
data16
aam
xchg
movlps
sti
push
scas
mov
add
dec
das
or
mov
std
mov
data16
mov
repnz
aam
mov
pop
cmc
jns
setg
clc
cmp
sarl
dec
cltd
out
xchg
adcl
imul
xchg
pop
push
insl
mov
xor
addr16
je
pop
pop
sub
xchg
adc
push
pop
mov
mov
gs
sbbb
dec
push
inc
inc
mov
or
ret
stc
cmpsb
or
xchg
movl
pop
xor
fnsave
pop
in
loopne
inc
iret
cs
jge
ret
sub
ja
out
movsb
cmp
int
sti
jns
insb
scas
push
jg
jno
aaa
adc
out
mov
pushfw
scas
adc
xchg
out
xchg
mov
dec
xor
movsb
mov
cmp
jb
push
pop
call
mov
and
repz
pop
hlt
aaa
adc
mov
sbb
icebp
mov
imul
popf
dec
add
popf
adc
jo
inc
xchg
in
pushf
sub
mov
mov
aam
cmpsb
clc
cli
lcall
push
xchg
xchg
xchg
mov
lcall
cmp
stc
fsubrs
pop
shl
into
adc
mov
test
jo
and
pop
roll
cwtl
out
cmp
sub
push
movsb
sbb
scas
roll
and
test
xchg
pop
pop
call
pop
push
adc
std
jl
xor
ret
push
push
rcr
and
scas
or
out
scas
pop
cmp
cmpsb
pop
dec
push
add
test
mov
mov
dec
ljmp
imulb
pop
test
xchg
enter
inc
pop
repnz
sub
into
out
inc
ja
fistl
jns
test
inc
or
test
cmpsb
js
mov
hlt
cli
or
mov
filds
jbe
jmp
xchg
lods
roll
lcall
loop
jns
mov
shll
and
cmp
shl
cmpsl
dec
arpl
popf
add
mov
repnz
test
test
mov
call
test
sbb
mov
cmp
imul
mov
xchg
add
mov
lahf
dec
lods
jmp
decl
outsb
loope
andb
mov
xor
xor
aaa
push
imul
xchg
movsb
ret
mov
or
out
push
mov
or
sbb
xchg
jmp
fists
jl
jmp
cwtl
xchg
sub
scas
dec
inc
jnp
test
push
xchg
and
mov
rclb
mov
test
sahf
dec
stos
test
dec
pop
xchg
leave
xor
cli
sub
sub
push
xchg
push
jae
jns
movsl
stos
andl
lret
es
xchg
xchg
jecxz
stc
nop
push
in
inc
dec
jne
cmp
sbb
sti
cmp
outsl
insl
cld
xlat
out
pop
negl
movsl
insl
stc
test
sbb
mov
dec
mov
mov
push
subb
repnz
outsl
jnp
push
lea
mov
add
aaa
push
push
popf
aas
xchg
pop
cmp
fistpl
inc
or
dec
loope
sub
icebp
adc
adc
in
jno
inc
fmuls
adc
and
or
insl
ljmp
stos
dec
ret
pop
pop
into
pop
mov
jge
dec
pop
or
or
movsl
and
mov
mov
sbb
not
mov
insb
adc
push
bound
loopne
pop
repnz
fisttpll
test
mov
xchg
divb
popf
mov
testb
mov
dec
ljmp
and
mov
jb
or
cmp
jo
scas
and
fsubs
xchg
imul
movl
jnp
sbb
scas
jb
sub
push
inc
test
test
inc
scas
jle
bound
mov
or
or
or
std
dec
inc
or
mov
fcomps
stos
inc
data16
xor
arpl
jp
mov
cmp
pop
mov
cmpsb
push
adc
push
out
jo
aam
ret
inc
cmc
push
pop
repnz
sbb
sub
rolb
xor
cltd
pop
pop
mov
pop
push
lahf
incb
cmp
lods
movsb
cmp
dec
jmp
in
jge
mov
or
and
mov
addr16
arpl
aas
mov
pushl
hlt
mov
enter
int3
fidivs
scas
sbb
shlb
ret
push
fstps
dec
lret
pop
cs
xor
fwait
and
jg
mov
je
cmpsl
mov
ret
pop
std
aam
mov
jb
test
xor
push
loope
test
xlat
xchg
into
xchg
cmp
jmp
insl
add
fsubr
fmuls
imul
or
hlt
inc
xor
push
add
daa
fstl
stos
jp
in
push
fadds
stos
icebp
jnp
lods
inc
push
mov
cld
lock
fsubp
cltd
leave
imul
xorl
int3
inc
jno
fstpt
push
pop
push
in
dec
fs
xchg
lcall
jecxz
mov
lds
daa
out
mov
mov
call
sbb
mov
mov
mov
push
or
inc
mov
cmp
clc
inc
fcomps
xchg
mov
mov
push
pop
inc
je
inc
ja
mov
inc
insl
xchg
push
xchg
xor
enter
dec
jmp
cld
aaa
pop
mov
mov
jo
xor
mov
and
sbb
rcll
pop
lahf
mov
push
mov
pop
cmp
test
clc
cmp
cmp
popf
jbe
xor
pop
push
jne
cltd
mov
mov
jle
ds
loopne
add
jno
push
arpl
and
stos
addb
clc
and
mov
mull
xor
adc
pop
dec
and
lods
mov
sub
mov
popa
mov
aas
es
jno
lods
jnp
fisubrl
iret
mov
xchg
int3
pop
inc
jnp
lods
inc
inc
and
mov
jne
ds
sbb
sub
decb
notb
ja
xchg
mov
rolb
mov
dec
imul
shl
mov
mov
js
call
mov
aad
cmp
dec
arpl
lds
push
out
lods
lret
pop
xor
ds
pop
push
sub
mov
cli
filds
inc
andb
ja
out
dec
jge
jnp
ficoml
sbb
sbb
inc
push
testl
lret
and
incb
push
test
rcrl
push
sahf
outsb
sub
lahf
mov
xor
xorl
int
xlat
add
mov
jo
lock
mov
fildll
test
js
bound
mov
jge
scas
rcll
leave
dec
mov
stos
outsl
cmp
sub
sti
mov
mov
repnz
add
inc
fstpt
inc
mov
xor
dec
popf
ret
mov
inc
xor
scas
testl
ss
cmp
add
es
or
cmp
in
or
jp
js
mov
ret
pop
fidivrs
clc
adc
sbb
jmp
out
push
cmpsl
push
mov
sti
mov
negb
call
adc
or
cmp
lds
push
repz
push
mov
movsb
bnd
movsb
xchg
jno
scas
jmp
andl
sahf
mov
xor
lods
and
test
loope
inc
prefetchw
or
pop
ja
pop
jg
out
push
mov
je
orb
cs
icebp
jno
push
cmpsb
lock
xchg
cltd
mov
pop
sbb
xor
dec
repnz
jnp
insb
mov
retw
mov
loop
pusha
cs
xchg
stc
bound
cmp
fldl2t
dec
push
xorl
xor
inc
data16
jnp
out
xchg
push
sub
pop
sbb
or
adc
out
adc
cmp
gs
adc
push
push
movsl
aaa
add
xor
or
jnp
ja
movq
ljmp
lods
or
in
gs
outsb
sbb
outsb
xlat
imul
out
dec
leave
mov
out
pop
cltd
aam
aad
clc
mov
inc
mov
shrl
pop
or
in
pop
out
les
insl
sarb
xchg
xor
shrb
mov
and
ja
xchg
rcll
insb
sub
mov
std
bt
clc
pop
and
inc
adc
mov
ret
inc
shrl
ror
test
jp
sub
cwtl
lahf
cld
push
stos
xchg
insb
sub
mov
inc
cltd
psubb
push
pop
xchg
push
xchg
rol
mov
pop
rol
pop
xchg
ja
cltd
mov
xor
adc
cmp
push
sbbb
lds
jb
sbb
sub
sbb
test
repz
push
mov
rcl
movsl
mov
dec
sbb
aaa
mov
cmp
push
pushf
iret
fidivrs
mov
ret
xchg
cmp
push
in
jg
xor
cmc
cmpb
pop
rol
add
outsl
fldenv
ret
pusha
ss
mov
fstpl
fwait
pop
fucomi
cmp
dec
sbb
cwtl
inc
xor
out
out
jo
or
mov
lret
mov
dec
ds
mov
pop
sbbb
scas
push
cmp
adc
add
sub
pushf
clc
sub
repnz
in
jnp
xchg
pop
mov
lods
out
push
mov
sub
push
lock
lahf
aas
sti
push
cld
in
std
pop
add
shll
or
mov
or
iret
aam
in
test
adc
add
pop
je
mov
mov
jecxz
sub
add
inc
xor
pop
pop
repnz
das
inc
sub
xor
jns
js
out
cmpsb
mov
add
ljmp
sahf
or
fwait
ja
xorb
mov
fucomi
sbb
sub
cmpsb
cmc
and
jmp
sbb
notl
pop
mov
add
adc
and
push
inc
xchg
and
mov
adc
enter
aad
xor
shll
bound
jecxz
aam
in
xlat
push
inc
cmp
ljmp
call
xor
xchg
ret
stc
mov
push
in
adc
nop
pop
stc
mov
or
push
cld
cmpsl
mov
dec
fdivp
pop
js
pop
and
sarb
in
fnstsw
jp
les
cwtl
dec
fbld
and
xchg
loope
out
scas
sbb
jno
add
adc
les
dec
jne
mov
aaa
mov
xchg
mov
pop
test
inc
dec
inc
out
mov
cmpsb
sbb
sbb
outsl
mov
ds
xchg
dec
jg
cmp
out
int
pusha
pop
push
test
js
es
mov
leave
loope
pop
outsl
leave
mov
xchg
pop
pop
xor
repz
pop
outsb
dec
adc
out
xor
and
fcom
in
or
fnsetpm(287
mov
fisubrl
or
mov
int3
in
or
pop
fidivl
and
jns
popa
cs
lcall
cli
jb
mov
adc
push
aam
cmpb
mov
xor
xchg
xchg
enter
loopne
add
sbb
add
shlb
cld
iret
and
ret
pop
pop
mov
fst
push
mov
jbe
xor
dec
push
hlt
cmp
adc
add
shll
lcall
ss
inc
cmp
js
mov
mov
cmp
in
cmp
fidivrs
push
nop
les
int
sub
jns
std
test
cmpsl
ret
pop
ja
add
xor
fsubrs
iret
pop
nop
popa
ficoms
push
cmp
jmp
roll
rcrl
nop
inc
fildl
adc
das
jbe
inc
adc
cmp
sahf
or
fiadds
es
jnp
cs
in
xbegin
sub
or
lods
inc
sahf
jmp
jns
cwtl
stos
xor
xchg
xchg
sub
cld
stos
mul
mov
push
add
loop
notl
sub
stc
sahf
in
dec
xchg
iret
ds
add
add
sbb
add
adc
or
mov
pop
fbstp
popf
ljmp
inc
mov
jmp
stos
pop
jae
fs
pop
push
scas
dec
and
ret
adc
outsl
loop
lea
mov
xor
aas
ljmp
adc
xchg
jno
jbe
cmp
inc
add
es
adc
inc
aaa
adc
jns
loop
daa
fdivrs
adc
out
push
scas
aas
or
push
xor
fdivl
data16
adc
stos
xor
das
clc
cltd
stos
inc
lds
mov
xchg
mov
jns
out
popf
hlt
ret
shlb
sbbb
push
lcall
inc
and
jo
mov
gs
add
xchg
jno
addb
lahf
mov
movsb
ja
sar
ret
mov
loope
mov
jmp
sbb
xchg
andb
or
jbe
cwtl
mov
dec
jecxz
push
xchg
jo
jle
ds
cwtl
jno
in
shl
addr16
mov
add
cmp
popa
mov
in
clc
sahf
mov
lods
call
dec
push
test
push
xchg
nop
dec
add
nop
ljmp
loopne
cmc
and
imul
xchg
or
cmpsb
imul
inc
jmp
out
mov
clc
jno
add
pop
cmc
or
dec
test
sub
std
mov
sbb
pop
cwtl
out
pop
popf
mov
cltd
mov
ret
rcrl
inc
fwait
in
dec
rorb
push
inc
xlat
cmp
pop
pop
cmc
lea
push
les
jge
lret
mov
jp
mov
pop
or
jle
sbb
sbb
xchg
mov
adc
data16
sub
test
stc
sbbb
sub
mov
inc
xlat
idiv
arpl
inc
dec
sub
lret
ljmp
cmc
mov
push
jl
push
mov
repnz
cwtl
int
pushf
add
adc
adcl
gs
je
inc
ret
test
xor
xor
jg
mov
mov
jb
fbld
insl
loopne
adc
sbb
pop
inc
loopne
cltd
mov
lret
xchg
imul
inc
lods
add
push
dec
stos
mov
ja
jbe
je,pt
daa
cmpsb
pop
xchg
add
sub
movd
cmp
mov
imul
sub
aad
adc
imul
rclb
hlt
xchg
fbld
inc
imul
ret
sar
out
in
xor
and
add
das
test
dec
in
sub
sbb
adc
sub
in
clc
cli
cmp
cmp
jecxz
or
testb
lahf
ret
jp
cmc
adc
fwait
je
ljmp
dec
push
mov
sub
mov
loopne
xchg
sti
add
add
cmp
lret
push
loope
dec
push
into
icebp
es
negb
sub
mov
jl
imul
movsb
xor
add
mov
pop
push
idivl
mov
fidivs
sahf
sub
xchg
popf
out
push
repnz
mov
xchg
mov
sub
pop
data16
push
inc
and
cmp
adc
popa
addl
jb
pop
lret
push
sbb
mov
adc
mov
fwait
insl
adc
jg
arpl
shrl
mov
nop
clc
sahf
int
call
adcb
or
xchg
add
rcrb
ss
sub
outsb
aas
out
gs
movsb
add
sbb
push
push
push
or
jae
dec
sub
bound
repz
adc
sarl
xchg
sbb
sbb
mov
insl
test
inc
stos
in
jne
mov
loope
aaa
popf
jno,pn
mov
add
or
data16
xor
test
stos
repz
mov
insl
loop
icebp
adc
shrl
mov
addr16
icebp
dec
rol
mov
stos
mov
fidivrl
sub
xchg
dec
add
or
bound
out
into
cwtl
out
dec
mov
cmp
dec
imul
call
xchg
or
in
push
test
adc
jne
cmc
test
aad
jae
mov
push
push
aas
pop
jmp
loopne
sbb
flds
insl
xchg
stos
adc
xor
mov
fstpl
int
out
pop
and
or
add
stos
mov
pop
orl
cmpsl
fdivl
movsl
and
mov
jno
mov
int3
repnz
cmpsl
ja
adcl
mov
mov
in
xor
outsb
paddw
jns
and
mov
fstpt
inc
cmc
fs
iret
roll
stc
repnz
fsubrs
in
mov
gs
cs
icebp
cmp
jo
xchg
int
mov
jecxz
pushf
dec
mov
repz
fistpll
jp
adc
les
cli
cmp
loop
sti
cmp
push
aad
out
lock
pop
out
outsb
jnp
and
imul
imul
jnp
or
aas
lods
sbb
inc
lret
sub
in
pusha
jbe
push
and
cli
mov
jbe
outsb
jno
int3
mov
inc
addw
pop
xchg
fisubl
lcall
lahf
mull
mov
mov
int3
popl
gs
pop
push
int
xor
inc
popa
add
and
nop
add
cmp
xor
push
sahf
push
inc
mov
jne
cmpsl
lds
mov
or
insl
aad
testb
testb
daa
mov
push
int3
xchg
mov
lret
push
hlt
add
ds
pop
mov
mov
lds
popl
mov
leave
gs
sbb
dec
leave
test
sarl
and
pop
add
imul
test
lahf
leave
inc
popa
repnz
test
mov
xchg
sbb
adcl
loopew
push
cltd
cmpsl
into
jae
bound
push
push
ja
inc
push
into
sti
js
shrl
stos
aad
fnsave
adc
mov
cli
mov
mov
jle
push
lahf
lods
inc
or
jne
and
inc
imul
push
mov
das
lock
lock
mov
ljmp
les
mov
cltd
and
xor
mov
dec
loopne
fs
gs
mov
addr16
cmp
enter
fs
sub
insl
jl
mov
mov
mov
push
rorl
sbb
pop
cmp
dec
push
rol
orl
ret
mov
dec
stos
pop
jle
cmp
or
jp
xor
rcrb
push
xchg
jno
mov
lods
inc
mov
pusha
inc
sti
test
rorl
jne
jbe
popl
push
xchg
test
mov
add
push
dec
sbb
int
leave
adc
push
lret
sub
repz
or
divl
fs
ret
outsb
push
mov
mov
gs
test
dec
popf
ret
xor
divl
sub
pop
out
pop
dec
and
imulb
push
xor
push
test
jbe
sub
or
mov
jge
push
xchg
inc
movsl
adc
dec
scas
mov
test
lods
inc
jg
leave
mov
cmp
pop
ficomps
sub
movsb
pop
in
mov
sub
mov
add
pusha
jl
scas
aad
pop
cmp
fnstsw
in
sub
popf
cs
inc
sub
divl
dec
pop
sbb
fcoms
sub
inc
mov
lock
shl
jge
test
pop
repz
sbb
repnz
imul
out
add
roll
xor
das
xchg
inc
xchg
sarb
add
stos
jo
mov
aad
call
or
shrl
add
lock
icebp
xchg
and
js
inc
cmp
add
and
xchg
daa
dec
stos
test
call
insl
jge
xchg
xor
cltd
push
inc
dec
cwtl
mov
dec
fs
pop
xchg
outsb
es
aaa
add
inc
dec
xor
cmp
imul
add
cmpl
or
movsb
lock
aad
mov
ds
cmp
mov
sbb
pop
int3
jle
jp
mov
sbb
or
xor
imul
aas
xor
outsb
in
push
mov
xchg
aas
xchg
testb
cmp
inc
cli
and
out
jmp
rcll
movsl
ret
insb
cmp
fidivrs
sbb
push
sbb
aam
enter
dec
rcll
loop
or
sarb
lret
xchg
and
fldt
mov
pop
dec
jnp
or
mov
or
stos
lea
pop
nop
inc
stos
in
out
adc
pusha
or
in
dec
mov
push
pushf
xor
es
in
in
push
lock
dec
push
jmp
xor
and
cmp
push
test
and
inc
stos
popa
cmp
push
mov
xor
adc
cwtl
call
call
loope
imul
divb
mov
dec
xchg
rcl
inc
shrb
shll
mov
add
pop
xorb
icebp
cltd
sbb
mov
test
cmpsl
jno
sub
add
adc
xor
mul
cwtl
mov
sub
mov
out
dec
pushf
and
setg
es
aaa
xor
adcb
add
dec
push
inc
and
rol
mov
je
add
mov
lcall
and
xchg
dec
jae
call
mov
mov
sub
shrb
push
scas
inc
rorb
dec
inc
jo
ds
mov
fisubl
fs
dec
mov
pop
sbb
mov
push
cmpsl
pop
xlat
sbb
movsl
stos
mov
shr
test
sbb
jbe
inc
stc
test
cwtl
adc
mov
insl
mov
mov
lock
xlat
addl
jo
sbb
aaa
int
adc
xchg
ret
cmp
jmp
add
adcb
mov
test
jno
push
arpl
test
cltd
lret
dec
cmpsb
jle
xchg
outsl
push
lahf
jle
pop
jnp
subl
int
es
aad
sti
loop
xor
mov
lea
cltd
inc
dec
pop
cmp
popf
xor
sti
dec
cmp
insl
addb
mov
outsl
andl
enter
rcrb
jb
imul
dec
lds
rclb
insl
lret
pop
jge
adc
stos
xor
jne
sub
cmp
sub
and
mov
xlat
sub
add
add
xor
jb
int3
mov
or
mov
mov
aam
mov
lahf
pop
imul
pop
push
cmp
and
pop
sbb
or
test
xchg
stos
or
pop
mov
dec
loope
mov
jl
orb
fistl
mov
pushf
test
adc
and
xor
pop
inc
fcomps
rorl
mov
sub
inc
mov
fld
iret
push
outsb
push
push
mov
add
dec
xchg
add
xchg
in
lret
mov
sbb
sbb
jmp
fstpl
xchg
jmp
add
or
in
pop
mov
or
loopne
pop
push
sarl
dec
dec
loop
into
ljmp
leave
xor
fstps
xlat
rep
mov
adcb
ja
imul
sub
mov
mov
imull
mov
jno
cmp
inc
lcall
push
mov
and
or
mov
or
adc
or
push
cwtl
jne
loopne
sbb
cmpl
outsl
xchg
ss
sbb
inc
sbb
stc
adc
dec
cmpsb
cmpsb
pop
mov
jns
add
nop
xor
xchg
imulb
sahf
mov
repnz
cmp
out
inc
xor
mov
int
mov
and
push
xchg
fldt
or
pop
xchg
adc
aaa
loop
add
fsubr
subl
jo
fbld
pusha
ss
rcl
inc
mov
jmp
jo
jbe
mov
ja
outsb
mov
stc
sub
pop
scas
xor
mov
mov
cmp
cmpsb
cmp
int3
or
inc
mov
sub
pop
je
jne
adc
stos
xor
jecxz
ret
lock
rcll
inc
ja
jbe
dec
xchg
push
cltd
mov
fcomi
cld
add
test
test
arpl
aas
ficoml
orl
outsb
mov
insb
add
cmp
mov
push
out
mov
ret
frstor
shlb
mov
test
js
add
out
rcrb
xchg
test
sbb
pop
mov
jmp
imul
sbb
fimull
xor
add
fwait
insw
adc
xlat
rclb
lds
stos
in
rcr
scas
call
xchg
sbbb
pop
xchg
mov
clc
ret
pop
mov
push
test
dec
and
or
sub
sub
xchg
push
gs
jg
dec
arpl
jnp
lret
lods
arpl
aaa
gs
mov
lcall
sbb
jae
insl
movsb
inc
xor
cmc
mov
neg
cmpsl
cmp
stos
jo
test
sbb
stc
adc
imul
lahf
mov
sub
in
mov
xchg
push
or
add
jecxz
cwtl
push
or
dec
add
pop
xchg
nop
ljmp
adc
jmp
cmovbe
rcll
and
mov
push
cld
xchg
mov
sbb
pop
scas
cmp
mov
test
in
test
cld
jns
das
stos
sbb
insl
sub
inc
cld
dec
cld
dec
cs
ret
xchg
arpl
repnz
fldenv
roll
cmp
popf
cmpsl
sub
sub
pop
xor
inc
or
cmp
adc
scas
in
mov
mov
xor
out
or
mov
jne
push
push
inc
lock
jae
lret
shlb
scas
insl
push
jl
jae
cli
mov
cmp
inc
popa
push
and
fisttps
das
mov
sbb
lds
rcll
stos
pop
fdivrp
or
adc
inc
mov
pusha
or
mov
scas
xchg
imul
add
add
xor
mov
stos
out
lods
inc
jne
testb
pop
xchg
pop
aas
mul
int
mov
jl
dec
test
sub
cwtd
mov
sub
xor
cltd
shr
lret
and
test
or
out
test
pusha
out
sbb
jb
ret
xchg
int
loope
es
ljmp
and
mov
fnstcw
aam
mov
pop
loopne
out
mov
aad
mov
or
out
mov
loopne
adc
bound
sbb
pop
jb
dec
fmull
in
call
or
sbb
loop
jle
xchg
cmovnp
mov
lods
cmp
out
jae
imul
test
inc
andl
sub
notb
sbb
pop
sbb
xor
popa
subl
stc
ljmp
adcl
mov
cmp
xlat
mov
sar
sub
sub
mov
jb
jge
sub
fistps
hlt
mov
out
or
aaa
dec
and
dec
sbb
sarb
mov
add
and
sub
sub
xchg
filds
xchg
mov
popa
lock
sbb
cmp
adc
xchg
sub
adc
subb
xor
ret
mov
sbb
aad
mov
inc
fsubl
ss
into
xchg
jmp
jno
and
dec
lock
int
jl
pop
mov
xor
mov
into
xor
int
mov
insl
addb
cmp
add
mov
inc
sbb
rclb
clc
mov
jns
jg
pop
jg
push
popf
inc
push
sub
cmc
lea
fmulp
notrack
repz
and
xchg
sti
pop
scas
mov
ficoml
fisttpll
aad
incl
xchg
pop
pop
cld
jg
mov
bnd
mov
jg
pop
into
enter
mov
ret
test
jnp
push
in
sbb
fisubl
insl
dec
pop
les
mov
inc
sbb
jl
pop
sar
xabort
mov
outsl
pushl
and
mov
pop
std
sbb
or
mov
cmp
jecxz
and
outsb
push
mov
adc
inc
enter
or
aas
fisubrl
iret
pop
jne
mov
outsl
mov
or
adc
jbe
stc
sub
in
mov
les
lcall
xor
sahf
mov
push
inc
dec
or
test
out
inc
clc
rcrl
add
cli
push
xchg
jbe
cmpsb
mov
push
jg
inc
leave
inc
loopne
mov
repnz
outsl
or
stos
js
inc
inc
add
ss
and
and
xlat
pop
lds
adcl
movsl
popa
aam
add
sbb
out
mov
stos
je
push
movsb
mov
mov
add
cmp
mov
dec
int
add
xchg
mov
inc
les
mov
inc
je
aaa
das
stos
xor
add
call
sub
jb
aas
lcall
and
mov
ret
clc
leave
push
mov
fdiv
cmp
mov
jge
mov
clc
subb
lods
jecxz
mov
mov
adc
add
movsl
inc
push
cmc
push
mov
add
jmp
inc
adc
orl
push
inc
push
xor
push
or
imul
mov
arpl
adc
xchg
inc
mov
out
call
ss
es
ret
ror
add
loop
push
js
fidivs
push
pop
iret
push
lret
sahf
popf
bound
inc
outsl
pop
ficoml
pushf
dec
mov
sub
enter
add
out
xchg
mov
neg
xor
ds
andb
mov
popa
or
push
ljmp
mov
in
inc
mov
add
maskmovq
idivl
mov
adc
fimull
cmp
mov
ret
xor
xchg
pop
pop
fcomi
int
dec
and
in
and
enter
js
adc
inc
popf
stos
testl
xor
das
mov
xchg
into
enter
pop
xchg
test
aad
hlt
adc
popf
shrl
adc
adc
lds
fs
ret
jno
rcll
mov
leave
sahf
bound
and
shrb
push
outsl
notl
mov
loopne
adc
cmpsl
sbb
fisubrs
sbb
dec
out
ret
xor
insl
sbb
xor
sahf
jb
push
out
pop
pop
sahf
push
add
daa
push
dec
sub
lahf
daa
push
push
sbb
shl
adc
adc
sbbl
cld
pop
mov
pop
cld
inc
int3
dec
les
dec
in
addl
push
rcrl
daa
or
mov
jnp
stos
mov
test
out
or
mov
mov
int
hlt
fsubrs
stos
pop
and
sub
xchg
add
and
js
mulb
adc
jbe
cltd
and
pop
loop
mov
dec
pop
sbb
pop
cmpsb
lock
cld
mov
sarl
pop
ljmp
cmp
pop
dec
pop
adcl
ljmp
lcall
outsl
mov
mov
imul
sub
inc
fsubr
xor
xchg
dec
pop
aas
cmp
pop
push
loope
bound
enter
popf
shrb
cmpsl
jp
or
movsl
nop
rorb
test
sub
icebp
cmc
jmp
sub
sub
aaa
imul
fs
jb
push
fstpl
mov
cld
loope
mov
or
pop
cmpsb
fbld
ds
dec
into
xor
ljmp
jp
add
sbb
divl
add
or
push
sub
or
call
jbe
repz
xchg
inc
fildl
mov
or
xchg
or
sbb
cmp
out
mov
mov
push
mov
iret
enterw
mov
imul
push
mov
les
mov
fisttps
adc
es
mov
hlt
jns
iret
cs
inc
stc
fwait
jno
xchg
mov
insb
sbb
adc
cmp
and
insl
aaa
aad
push
push
jmp
scas
addr16
mov
jno
cmp
mov
mov
push
aas
push
jnp
pop
imul
das
mov
orl
inc
stos
dec
mov
sub
adc
popa
add
or
xor
pop
inc
sbb
in
and
jns
popa
mov
dec
fwait
aas
outsb
int
inc
push
les
fs
jecxz
push
nop
sbb
lcall
cli
sbb
test
jne
cmpsb
popa
cli
pop
shlb
fnsave
sbb
xchg
and
push
fwait
xor
cld
mov
sub
mov
push
sub
mov
or
cwtl
stos
sub
mov
jmp
pop
xor
push
xor
sub
sub
jns
popa
or
cmp
xchg
xchg
adc
sbb
lret
mov
gs
pop
push
inc
aam
dec
pop
xchg
mov
lods
jo
mov
enter
loop
jl
mov
mov
xor
push
dec
cmp
dec
and
push
in
pop
cmpsb
jmp
cmpb
mov
lahf
daa
lods
push
mov
inc
cmc
pop
icebp
es
in
jns
sub
out
stos
test
pop
mov
mov
adc
data16
rcrl
icebp
or
mov
scas
or
ret
std
jo
fbstp
xchg
xchg
push
xchg
std
xchg
vpmullw
dec
leave
enter
jge
xchg
lahf
movsl
inc
mov
and
mov
ret
loope
pop
jp
inc
sbb
jb
out
bound
dec
fisubs
lock
pop
movsl
lret
jp
fwait
mov
pushf
in
xchg
sbb
adc
cmp
popf
or
test
insb
adc
or
jge
dec
dec
insb
outsb
jp
loopne
and
sahf
fadds
mov
push
dec
mov
add
dec
jecxz
rol
ret
lea
lcall
les
into
shl
pop
scas
push
enter
xchg
fdivs
add
adc
pop
sbb
ret
fwait
and
in
test
or
out
pop
and
loop
popf
jbe
xlat
movsb
jl
stc
shl
sub
add
adc
push
sti
inc
xor
into
loop
addl
test
mov
test
pop
mov
cld
adc
data16
adc
ss
dec
bound
mov
cmpsl
fstps
sbb
jno
imul
mov
jno
clc
mov
dec
ret
mov
and
mov
xor
and
or
inc
aas
movsl
lds
cmpsl
pop
into
mov
das
cmp
pop
xchg
repz
scas
mov
movsl
dec
inc
ret
fsubrs
sbb
bound
jo
ror
enter
ljmp
xchg
jae
adc
xchg
mov
shlb
lahf
push
in
inc
ss
daa
call
test
stos
cli
jno
dec
sbb
sbb
pushf
fmuls
ret
int
aaa
mov
sub
outsb
jl
lds
pop
mov
in
jp
das
inc
jbe
imul
sbb
imul
loope
xchg
sbb
icebp
pop
fadds
mov
mov
mov
jle
or
mov
xchg
cmp
sar
rorl
mov
and
lods
pop
push
push
loop
add
mov
out
inc
test
jnp
loop
in
jnp
ds
mov
push
dec
sbb
pusha
cmp
rolb
ret
sub
jne
xchg
and
inc
insl
aas
push
into
aad
add
mov
mov
adc
cmp
sbb
push
lcall
pop
or
sub
mov
sub
jp
pop
popa
loop
push
adc
push
xchg
sbb
mov
cwtl
cmpsb
xor
scas
idivb
shlb
mov
dec
jge
mov
lods
adc
mov
adc
insb
out
ljmp
arpl
mov
cli
test
and
jno
adc
mov
mov
pop
in
fistpll
push
sahf
jl
rcr
adc
mov
adc
jg
xor
je
testl
into
inc
mov
pop
cld
dec
bound
ret
mov
xor
and
lea
js
out
jbe
enter
notl
icebp
sub
imul
mov
mov
xchg
lea
int3
iret
outsb
xchg
je
mov
add
push
mov
or
repnz
daa
test
mov
mov
dec
cmc
enter
aad
addr16
sahf
clc
add
inc
lods
mov
and
aas
mov
jle
stc
cli
stos
inc
in
mov
movsl
ret
outsl
or
dec
mov
sti
xchg
aad
arpl
test
test
testb
inc
pop
shl
mov
xor
push
sbb
push
js
mov
push
mov
adc
xor
popf
sub
ret
repz
inc
pusha
fisttpll
ljmp
stos
jmp
in
jnp
inc
js
pop
lcall
outsl
daa
pop
dec
scas
call
outsb
jnp
clc
mov
jae
add
or
sbb
push
dec
xchg
scas
insl
jge
ja
data16
nop
mov
mov
aam
xor
mov
sahf
cld
mov
lods
sub
cltd
xchg
mov
mov
loope
arpl
test
sbb
xchg
xor
add
rorl
mov
push
scas
cmp
fiaddl
mov
pop
cmp
jle
xor
lret
jnp
and
mov
inc
fwait
adc
in
inc
cwtl
or
cmpsb
xor
lret
lret
ds
imul
sbb
jp
push
insb
jecxz
adc
outsb
push
sbb
fs
es
nop
fildl
stos
pop
lods
repz
dec
and
mov
imull
mov
dec
lods
push
call
pusha
jecxz
add
xchg
sub
dec
cli
mov
test
jecxz
fcmovnu
jp
mov
out
pop
xor
push
loop
jbe
mov
stos
cmc
push
mov
dec
mov
subl
add
aaa
daa
jb
or
and
es
sbbl
and
imul
inc
pop
mov
pushf
push
sub
test
inc
mov
mov
data16
mov
fidivs
pushf
xchg
sbb
sub
pop
xor
sbb
sub
daa
lcall
or
sbbl
add
jmp
pop
and
xchg
insb
je
popf
jo
test
fcmovnb
mov
push
lret
into
push
scas
stc
loopne
sub
pop
repnz
aam
ret
into
jno
aam
cmpl
data16
cmp
xchg
stos
repnz
pop
lea
in
mov
fistps
push
mov
cmpsb
mov
es
pop
push
sahf
sbb
fisttps
xchg
addr16
sbb
fbld
lret
xlat
sub
mov
inc
lret
std
push
pop
insl
xor
in
jne
push
es
subb
and
pusha
andl
push
mov
pop
cmp
insb
ret
loop
mov
mov
fldt
sbb
js,pt
test
fwait
iret
cmpsl
push
sbb
enter
pop
add
pop
test
ja
les
ss
jmp
fs
pop
pop
mov
add
mov
addr16
xor
fsubrp
push
add
outsb
xor
xor
ficomps
test
push
mov
insb
sbb
add
push
lret
test
add
sbb
enter
pop
aaa
inc
inc
xchg
fcompl
push
mov
push
push
fidivrl
or
imul
test
pop
cmc
mov
iret
insl
jle
fcomip
cmpsl
cmp
mov
sbb
scas
pushf
mov
jns
push
ds
iret
je
dec
xor
enter
xchg
mov
mov
or
dec
adc
xchg
lcall
and
test
cwtl
loop
or
outsl
sti
jmp
daa
add
mov
out
lret
addr16
jge
aam
pop
sub
jno
cmc
mov
addr16
jmp
jno
and
inc
iret
xchg
add
sub
pusha
lods
inc
xchg
jno
ret
push
dec
loope
or
sub
idiv
xchg
mov
ficompl
insb
push
mov
std
push
imul
adc
ss
prefetch
or
lret
pusha
pop
sub
popa
bnd
imul
aaa
push
jae
lds
fdivrl
pop
jae,pn
cltd
movsb
dec
fdivrs
cmp
or
xor
aad
lea
mov
lahf
push
stos
sub
loopne
push
jno
add
lods
xor
fisttpll
movsb
std
xor
stos
jl
out
pusha
or
fwait
mov
xchg
cs
aas
push
pop
in
in
dec
push
adc
dec
or
pop
inc
stc
and
add
dec
sub
jns
jno
push
add
pop
ja
cli
push
mov
in
clc
push
popa
fstpl
nop
mov
cmpsl
cmp
loopne
ljmp
or
stos
sahf
mov
and
orb
adc
fwait
fwait
mov
mov
dec
push
ficompl
pop
int3
sub
fdivrs
stos
lret
daa
pop
cmp
xor
add
add
movsl
rorl
xrelease
jae
sbb
inc
xchg
and
popf
fisubrs
mov
test
pop
scas
or
pop
sbb
push
out
dec
cmp
cmc
mov
adc
pop
or
xchg
mov
mov
mov
movsl
popa
inc
data16
mov
mov
mull
push
adc
jle
mov
add
sub
push
inc
cmp
xchg
sarl
mov
mov
jg
ja
jecxz
mov
outsl
push
jge
fistpll
mov
cld
add
lret
xchg
adc
repz
movsl
in
clc
aas
push
cmp
xor
and
pandn
orl
jne
shrl
inc
dec
mov
push
or
or
mov
aas
xchg
jo
push
jp
fistpl
fdivl
and
fists
and
jmp
aaa
add
in
and
sbb
int
in
pop
outsb
inc
mov
hlt
xchg
cmpsb
push
scas
xchg
xchg
scas
stos
test
jne
test
cltd
sbbl
insl
jecxz
jno
pop
sub
dec
subb
lds
mov
xchg
fwait
mov
mov
pop
xor
out
ret
push
fbld
lods
out
cltd
lock
dec
daa
scas
cld
frstor
push
dec
data16
jns
jmp
add
mov
into
mov
aad
fs
int
jmp
pop
mov
loop
xor
insl
dec
les
push
js
dec
ljmp
es
add
outsl
imul
and
sub
mov
xor
adc
push
mov
mov
hlt
push
sub
repz
outsb
mov
mov
call
insl
stos
fldcw
test
xchg
inc
icebp
mov
mov
xlat
and
add
aam
push
xchg
adc
ds
pushf
test
ljmp
mov
loope
int
adc
or
mov
xchg
fbstp
loop
inc
les
dec
lahf
mov
jecxz
inc
jg
pop
push
mov
lret
int3
cmp
in
inc
pop
dec
aas
shlb
jmp
cmc
les
aam
ds
xor
push
jns
dec
loope
lcall
outsb
dec
les
dec
mulb
repz
out
mov
ja
pushf
lods
bound
inc
xchg
cmpsb
mov
clc
loopne
sbb
mov
pop
sbbb
cmp
mov
test
lods
pushf
ficomps
adc
addr16
sub
xor
shrb
pushl
fisubl
and
xchg
ud1
lds
aas
push
push
adc
data16
jo
mov
pop
inc
jg
xchg
xor
dec
push
rcl
les
dec
pop
loopne
bound
cld
add
xor
cmpb
stos
mov
pop
hlt
fxch
fstps
or
mov
orb
sbb
xor
pop
pop
jg
mov
icebp
in
mov
pop
mov
inc
mov
insb
add
loopne
sub
mov
mov
mov
and
jbe
fldl
call
scas
push
xor
or
cli
imul
cli
iret
aaa
pop
inc
out
mov
push
stos
or
mov
sbb
mov
adc
mov
outsb
jecxz
xchg
notl
or
jecxz
mov
cmpsb
aad
pop
jmp
leave
xor
xchg
push
out
in
sub
out
fucomp
cwtl
mov
dec
add
imul
dec
sbb
xchg
scas
in
fcom
fidivl
pusha
movsb
test
enter
and
and
out
add
xor
insl
add
inc
add
ds
and
xor
leave
int
cld
orb
dec
mov
sub
push
lods
pop
je
sub
cmp
lods
cli
push
mov
jge
test
pop
jae
ss
outsb
ljmp
cmp
adc
sbb
mov
inc
push
and
lret
nop
inc
fadds
clc
fnstenv
into
xlat
in
adc
mov
mov
xchg
add
cmp
inc
nop
les
jbe
or
jae
xchg
repnz
mov
sbb
or
jbe
inc
inc
cmp
and
outsl
stos
hlt
or
nop
sub
shl
sbb
imulb
imul
sbb
push
in
adcb
cmc
mov
cwtl
in
enter
mov
jns
cmp
and
scas
pop
str
lret
push
test
ljmp
jno
fldenv
fbstp
and
mov
mov
ret
ds
jb
mov
mov
and
dec
mov
pushf
lea
fistps
imul
mov
mov
and
std
push
mov
and
xor
stc
test
cltd
xor
bound
xor
mov
daa
shll
les
mov
mov
pop
fwait
dec
push
cwtl
mov
leave
xor
data16
sbb
adc
and
gs
cmp
dec
jae
push
add
es
lods
push
cmp
mulb
outsl
push
push
lea
and
addr16
push
lret
lret
pop
loope
outsb
enter
sub
pop
ja
fidivrl
pop
lods
push
add
aas
sti
cli
jnp
mov
add
jns
out
imul
jle
push
lret
bound
dec
loop
cmp
mov
mov
dec
jg
xor
mov
pop
and
decl
inc
ret
mov
aas
xor
push
movsl
add
int3
xor
push
outsb
nop
testb
jl
dec
jno
dec
out
push
and
test
int
stos
sti
data16
jmp
xlat
insb
daa
sbb
add
xor
pop
loop
inc
mov
inc
ret
xchg
adc
repz
jbe
lahf
pushf
sbb
cmpsb
jge
push
mov
ljmp
xchg
in
jle
mov
push
lcall
mov
sub
je
xchg
lods
data16
adc
insl
bound
ret
lret
push
das
dec
data16
in
cld
cwtl
sub
push
pop
adc
ds
mov
pushf
testb
mov
sbb
xor
cmp
xchg
cli
js
sub
mov
fimuls
lods
cmc
mov
or
std
adc
in
adc
jp
mov
imul
pop
inc
mov
jecxz
pop
std
mov
or
sub
fldt
inc
xchg
cli
cld
outsl
and
add
xorb
sub
sub
pushf
mov
and
add
rolb
sub
insb
cmp
mov
pusha
add
xor
in
sbb
push
xchg
loope
pop
push
adc
mov
mov
sub
jns
jmp
xor
pop
daa
jle
scas
push
iret
dec
test
std
enter
xor
adc
insl
jl
outsl
jnp
sub
arpl
dec
js
push
fmul
inc
ficompl
push
cmpsb
pusha
xlat
enter
inc
fdivr
jecxz
and
cs
nop
mov
xorb
cmp
xlat
lcall
mov
mov
fdivs
adc
imul
add
pop
out
hlt
sub
adc
out
popa
dec
scas
xchg
outsb
lods
ljmp
pushf
out
data16
dec
cmp
ret
jne
aad
push
add
outsw
cmp
adc
mov
dec
fwait
mov
cmp
adc
jg
adc
cltd
dec
into
fdivrl
iret
pop
arpl
xchg
sub
xchg
jns
inc
jp
add
nop
fldcw
fwait
or
pop
xchg
les
stc
add
sub
scas
aas
rolb
xchg
jp
int
jbe
or
pusha
inc
gs
push
xlat
push
call
sub
icebp
inc
bound
leave
xchg
bound
stos
push
imul
pop
jo
mov
mov
stc
sub
dec
scas
push
lret
bound
push
jns
das
fisubl
testb
sbb
sub
shrl
push
sub
leave
jecxz
je
std
ret
sbb
cmpsl
jg
sbb
test
jne
fists
mov
dec
popa
cmp
sub
dec
out
lock
test
add
mov
pop
pop
int3
xchg
repz
mov
cmpsb
in
test
out
decl
or
mov
ret
daa
outsb
out
cld
xchg
iret
jl
mov
xchg
sub
clc
sti
xchg
insb
les
outsl
insb
cmc
sbb
jb
stc
pushf
out
dec
inc
test
stos
cltd
test
icebp
lock
shll
jno
shll
xchg
in
lods
addl
add
out
out
sbb
or
lea
mov
mov
cmp
sub
mov
mov
xor
inc
or
cmp
or
pop
shrb
add
js
outsl
cs
adc
push
pop
cmp
add
pop
sahf
pop
cmpsb
inc
xor
std
and
imul
xor
cld
xor
jnp
sbb
inc
adc
xor
cltd
jmp
rcr
mov
cltd
jo
shrl
mov
mov
lods
adc
lods
mov
test
dec
into
jne
call
fwait
dec
outsl
push
cmc
sub
and
push
push
or
mov
sub
cwtl
dec
or
stos
jnp
dec
hlt
xchg
stos
jl
cmpsl
jnp
sbb
cltd
cmp
cmc
lds
or
fwait
dec
arpl
loopne
mov
mov
jmp
or
and
repnz
add
or
hlt
mov
cmp
in
ljmp
mov
jp
mov
lret
dec
inc
cwtl
cmp
mov
aaa
dec
xchg
aas
es
mov
aaa
leave
mov
push
int3
fbstp
sarl
push
xchg
mov
dec
inc
xor
test
mov
mov
jp
cmp
loope
fstpt
sub
jg
inc
fcoml
cmp
push
outsb
jp
fsubrl
inc
arpl
scas
dec
or
jle
clc
repz
popf
cmp
imul
mov
test
das
add
mov
out
mov
outsl
inc
and
repnz
lret
xchg
outsl
cmpsl
test
idivl
jo
or
fwait
jae
push
int
adc
shlb
aaa
mov
add
jmp
dec
and
sub
shll
bound
xlat
lldt
stos
mov
xor
jle
sahf
ja
sbb
adc
mov
xchg
sub
and
mov
or
push
inc
fsubrl
int3
fs
jle
or
popf
adc
scas
jnp
loopne
add
std
dec
iret
cmpsl
adc
add
adc
cmp
scas
inc
ja
test
arpl
repz
in
ljmp
and
fists
add
arpl
pop
outsb
lds
adc
jno
sub
xor
mov
fistps
jle
xor
jl
mov
in
mov
lcall
test
movsl
add
stc
push
popf
inc
mov
push
push
data16
data16
xor
sbb
scas
push
pop
mov
pusha
adcb
dec
and
pop
divb
int3
imul
ds
jo
repnz
pop
aad
push
cmp
jne
sub
in
mov
adc
dec
ds
pop
ret
sub
pop
push
or
add
les
lahf
into
fisubrs
js
push
xor
in
popa
fisubl
sbb
xor
sub
mov
call
jmp
mov
out
sub
scas
test
int
dec
mov
out
sbb
dec
sahf
insl
mov
sub
stos
cwtl
mov
cltd
and
in
test
push
or
lret
mov
mov
push
jo
jo
rclb
in
shll
mov
test
xor
in
add
adc
inc
adc
mov
push
shrl
inc
pop
pop
ficompl
rcll
xchg
outsb
jg
fcomi
jle
pop
push
add
cmp
mov
shlb
sahf
pop
mov
inc
or
adc
orl
jnp
fmuls
sbb
jbe
cmp
xchg
in
xor
mov
push
and
pop
std
mov
or
shll
or
xchg
movsb
insb
push
xor
jbe
subb
jb
pushf
scas
ret
pop
loopne
int
hlt
add
jbe
ror
pusha
add
inc
lcall
mov
movsl
shr
test
sbb
pusha
divl
je
in
xlat
jle
pop
call
jno
and
sahf
or
loope
jmp
shrb
pop
mov
dec
push
jae
jb
into
icebp
push
mov
push
mov
ljmp
sub
mov
push
or
xchg
ret
cmp
push
push
and
cmp
pusha
pop
imul
pop
dec
sbbl
sub
push
jno
mov
int
lea
fisubl
fs
cli
das
sub
daa
out
mov
dec
in
inc
stc
ds
mov
test
vmovdqu
sub
clc
popl
or
sbb
cmp
lret
mov
mov
lods
outsb
cmpsl
cmp
imul
stc
clc
push
fsubrs
or
sbbl
mov
movsl
cmp
mov
aas
out
or
mov
mov
stos
icebp
dec
lods
mov
rcll
mov
int3
out
in
in
enter
xchg
lahf
stos
ret
mov
mov
jnp
sbb
arpl
shl
or
pop
push
mov
add
dec
aad
insl
push
in
lds
or
xchg
mov
ljmp
ret
cmp
arpl
cltd
inc
mov
outsl
rol
mov
loopne
loop
fstps
mov
cwtl
cs
shrb
or
jae
rolb
lods
in
fucomip
addl
lret
add
paddusb
or
pop
and
or
cs
fadds
xor
in
sahf
loop
pop
int
aas
int
test
pop
in
mov
push
mov
andl
inc
jmp
test
loopne
sub
jbe
sahf
xchg
movsb
cmp
push
data16
cwtl
jbe
mov
out
inc
fsubrs
inc
push
js
pop
xchg
and
repnz
inc
pop
loopne
ja
cmpl
xor
dec
mov
inc
popf
inc
dec
loop
jge
xor
inc
pop
or
in
gs
stc
dec
sti
sub
out
in
fistl
aas
push
inc
stc
pop
push
push
les
loop
call
loop
and
dec
jp
icebp
mov
cmp
imul
aaa
and
inc
bound
mov
arpl
fucomp
push
mov
jns
jb
xor
mov
test
inc
daa
push
scas
dec
stos
dec
je
xor
pushf
stos
cmp
sub
stos
push
xchg
mov
ficompl
sub
test
mov
repz
gs
mov
xchg
in
adc
in
cmp
out
xchg
movsl
or
ds
ds
sub
ljmp
adc
cli
ja
inc
dec
movsb
inc
outsl
in
je
push
negb
stos
jl
clc
xor
push
xchg
popf
push
mov
popf
jl
movsl
insl
mov
pop
out
pop
or
pop
jb
loop
fstps
push
ljmp
pop
fiadds
mov
rorb
jbe
rcl
pop
xor
cwtl
mov
in
inc
or
pushf
popa
popa
orb
aas
xchg
lds
xlat
mov
leave
push
cli
jns
out
push
pop
jmp
gs
cmp
jp
stc
and
mov
push
add
std
pop
add
xor
sti
pop
je
lea
cmp
lock
xchg
mov
mov
mov
repz
adc
movsb
lds
cmc
movsb
mov
add
aaa
sub
jmp
add
scas
shll
ss
push
jb
ljmp
jno
aas
jp
jno
jge
icebp
fs
movsb
dec
jo
mov
adc
jg
cmp
scas
xor
pop
repnz
mov
mov
pop
jns
stc
or
cmp
out
test
ret
jne
repnz
outsb
or
scas
cmp
sbb
mov
push
and
lea
dec
pop
fs
movw
pop
dec
fisttps
adc
push
hlt
enter
xor
mov
cmpsb
mov
movsb
cmp
inc
arpl
into
fcoml
ret
out
loope
pop
aam
xlat
addl
jae
loop
arpl
in
xorl
mov
cmp
repz
mov
inc
sbb
mov
sub
xchg
stc
sub
xchg
jo
adc
jle
fisubrl
rcrb
pmulhw
lods
xchg
xor
je
mov
mov
icebp
mov
mov
mov
sahf
xor
fimuls
aam
add
data16
popa
popf
je
iret
sub
push
icebp
xchg
sub
cmp
dec
mov
jecxz
adc
fcompl
imul
xor
dec
or
cs
cmp
jmp
inc
push
push
fstps
pop
adc
cltd
cld
add
cltd
jns
dec
test
sbb
xchg
jp
ss
fwait
mov
divl
push
pop
in
sub
sub
notl
mov
pusha
lahf
stos
push
cmp
js
into
pop
stc
mov
and
cmpsb
pop
and
mov
fs
lock
cwtl
xor
gs
pushf
cmp
in
mov
sub
inc
popa
adc
into
sahf
das
push
xchg
dec
insl
sbb
and
mov
pop
fistps
test
rep
das
gs
mov
insl
cli
sbb
movsl
icebp
xor
adcb
xor
lahf
std
fildll
int
dec
mov
data16
lret
pop
out
stos
imul
cmpb
inc
js
xor
mov
mov
push
arpl
das
pop
lea
int
inc
jo
xchg
in
or
stos
sub
fsubl
xor
adc
xchg
loope
loopne
sti
mov
sub
sub
xchg
sbb
dec
icebp
push
and
pop
mov
push
addr16
jno
sbb
mov
stos
mov
in
push
fdivrl
mov
pop
rcrl
repz
cmpsl
ret
pusha
cltd
mov
je
ljmp
push
repnz
cmc
outsl
data16
mov
cmp
ret
push
cli
jecxz
push
xchg
fdivl
lock
outsb
xor
lods
push
in
inc
mov
xchg
push
ffreep
bound
pop
out
mov
jmp
mov
arpl
push
push
sbb
fs
cmp
adc
adc
mov
loope
adc
pop
inc
mov
xor
pop
icebp
lea
pop
and
jns
xchg
arpl
xchg
push
dec
sarl
mov
bound
sbb
cwtl
pop
data16
xchg
jp
mov
sbb
int
xor
mov
js
inc
movsl
mov
lds
dec
insb
lret
sti
mov
inc
fisubrs
xchg
inc
int3
adc
ds
cmp
lods
nop
stos
filds
jno
icebp
lret
mov
sbb
dec
in
iret
mov
ss
or
mov
mov
mov
ljmp
fdivrp
dec
in
mov
jmp
or
inc
fcom
xchg
mov
loop
push
mov
dec
iret
bound
adc
cli
rcrl
shll
pop
sub
xchg
imul
popf
mov
jge
inc
clc
out
pop
lods
add
ja
jne
stos
add
pop
scas
and
push
ja
and
cmc
mov
imul
and
xlat
scas
aaa
or
dec
xchg
add
or
add
data16
mov
lahf
mov
pop
test
xchg
enter
dec
fwait
xchg
jp
push
outsl
mov
sbb
test
sub
mov
or
fwait
push
fisubrs
sub
mov
rolb
pop
dec
aad
aas
nop
cmp
cltd
scas
cmp
call
pavgw
and
mov
leave
mov
lret
ljmp
xorl
fwait
xchg
cmp
ret
sbb
cmc
cmp
xor
aad
jns,pn
xor
loopne
xchg
xchg
inc
add
and
add
mov
and
mov
xchg
loopne
addr16
icebp
lods
dec
mov
inc
pop
fwait
loope
outsb
mov
outsb
dec
pop
mov
lahf
jp
jbe
loop
gs
xor
loopne
xor
pop
fwait
add
inc
ds
arpl
pop
xchg
inc
movsb
sub
inc
test
repnz
sub
xlat
pop
cmp
or
scas
xorl
loope
adc
stc
adc
mov
icebp
xchg
jno
inc
cltd
fcom
sub
pop
adc
jne
sub
and
andl
mov
or
xchg
jbe
pcmpgtd
out
fnstsw
mov
aam
nop
je
ret
les
push
jne
mov
nop
outsb
mov
sbb
arpl
sbb
mov
xor
push
dec
fsubrs
lods
xchg
stc
je
cmp
test
push
inc
rol
out
sahf
adcl
andb
jecxz
arpl
push
ljmp
jno
mov
aas
outsb
stos
add
push
sub
fyl2xp1
or
sub
out
xchg
aad
pushf
add
sbb
dec
test
in
pop
mov
add
test
clc
add
dec
or
jg
mov
adc
test
mov
rcrl
cld
inc
jp
mov
jbe
movsl
xor
push
in
test
mov
push
jb
add
sub
jo
mov
int3
and
jle
mov
or
lret
and
test
popa
xor
sub
mov
sarb
mov
je
loopne
cltd
xor
popf
ja
cld
sahf
cltd
push
pusha
pop
jp
adc
or
mov
or
dec
jne
ja
fwait
pushf
dec
lods
mov
dec
sub
popa
sbb
into
std
loope
lret
shrb
lods
enter
xor
hlt
mov
lahf
rcll
push
jmp
inc
sbb
pop
mov
mov
popl
cs
and
or
jg,pn
imul
cmpsl
lods
icebp
jb,pt
stos
xchg
ja
cmp
jl
dec
dec
jge
sbb
push
ljmp
xchg
jge
jg
js
test
mov
lea
iret
lcall
push
ret
in
jns
mov
call
testl
ds
or
in
das
xor
pusha
test
iret
pop
mov
jmp
lods
in
xlat
jne
adc
hlt
or
mov
adc
push
pop
repnz
sti
sub
xchg
sub
xchg
mov
lds
jmp
rcrl
or
mov
in
add
push
icebp
in
addr16
adc
testb
mov
mov
mov
test
mov
push
mov
test
loope
xchg
sub
push
jno
cmp
mov
xchg
pop
sti
pop
outsl
inc
or
mov
jno
outsb
std
sbb
filds
int
jmp
adcl
aam
les
imulb
push
fisubl
psubusw
loope
inc
pushf
jbe
inc
push
cmp
jne
ja
sbb
mov
lret
jbe
cli
or
and
test
sbb
pop
jge
mov
dec
or
push
stos
aad
xchg
jo
pop
jbe
pushf
js
cwtl
in
xchg
mov
mov
inc
fldt
inc
sbb
cmp
and
movsb
sbb
popl
dec
add
mov
ficoms
sub
jecxz
insl
inc
dec
push
dec
add
iret
lods
add
lret
shll
dec
jno
push
and
rcr
push
mov
scas
push
xor
ffree
arpl
je
fists
cmpsb
and
inc
xchg
test
and
cmp
and
mov
xchg
idivb
or
repnz
sub
jae
jno
pushf
call
jle
ret
lahf
stos
cmc
fmuls
test
jne
dec
sub
pushf
xor
cmp
gs
lret
movsl
jmp
jg
pop
popf
ja
mov
add
add
ds
test
mov
cmp
mov
leave
js
dec
sahf
jnp
push
mov
adc
mov
and
sbb
dec
jae
popa
orb
inc
loop
inc
push
aam
ja
nop
jne
test
adc
addb
outsl
nop
movsb
push
jno
ljmp
lods
pop
scas
push
popf
into
or
idiv
gs
std
flds
icebp
mov
fnstsw
int3
pop
push
call
sbb
mov
and
call
movsl
inc
ljmp
pop
xor
sub
xor
mov
cmp
iret
dec
dec
sub
insb
add
jecxz
stos
daa
cwtl
loope
cmc
fsubrp
inc
test
inc
mov
or
pop
mov
jo
inc
in
jmp
sbb
lea
test
xor
and
adc
add
sub
and
negb
mov
fnstenv
pop
jmp
jns
adc
fxch
mov
addr16
cld
lcall
push
inc
mov
lods
sahf
push
dec
pop
push
mov
movsb
mov
mov
shlb
mov
xlat
adc
lock
es
sbb
shl
out
sbb
or
hlt
add
and
rorl
lret
mov
stos
loop
jae
jbe
sbb
jge
push
cmpsl
sbbl
int
jmp
mov
sub
jo
ret
loop
push
loop
or
aad
or
lds
insl
dec
or
lods
aad
loope
pop
rorl
or
gs
add
clc
adc
aas
jg
subl
adc
cmp
push
and
xor
in
push
jg
dec
subb
xor
scas
mov
jbe
into
rcll
cltd
rolb
pop
repz
movsb
inc
or
jp
es
stc
ss
and
and
lret
push
ss
mov
jae
andl
pop
imul
mov
cltd
test
add
lcall
xlat
sbb
insb
jl
xor
jmp
mov
pop
ret
mov
insb
pop
xlat
or
pop
add
dec
shrl
popf
andl
jle
lds
jo
int3
mov
xor
stos
xchg
dec
pop
jnp
jb
or
outsb
xchg
mov
stc
repnz
or
add
andl
push
lds
xchg
movntq
aas
mov
mulb
incl
sbb
pop
ljmp
bound
out
mov
dec
sbb
xchg
scas
in
hlt
mov
dec
and
mov
sub
mov
cltd
mov
mov
xor
xlat
cltd
or
sub
insb
fxtract
xor
adc
scas
fsubrl
push
aaa
subl
push
repz
cmp
ret
testl
negb
mov
cmp
lret
rcrb
add
cmp
outsb
adc
mov
and
popa
imul
ja
das
xor
dec
cmc
mov
rcrl
stos
push
out
push
nop
mov
in
aad
mov
ret
pop
bound
mov
pop
cmp
jns
popf
lcall
daa
dec
jb
movsl
pop
cmp
in
in
sbbl
sub
xchg
pop
out
les
loope
and
and
sbb
xor
orl
fucomip
in
jnp
jge
ret
ja
fdivs
in
cmp
xlat
xchg
stos
dec
xchg
notl
cs
sub
nop
mov
push
iret
stc
js
and
jae
push
call
iret
inc
add
push
ja
out
add
out
add
pusha
icebp
mov
and
into
pop
cmc
mov
arpl
stos
add
push
xor
int3
mov
mov
jl
and
cwtl
mov
sahf
and
push
aas
mov
and
subb
sub
xor
xor
fs
cmp
add
test
pop
mov
pop
in
xor
xor
in
push
rorb
lcall
xorb
scas
mov
jno
mov
mov
sub
jl
dec
xorps
sub
call
mov
xor
jne
ret
jp
fucomip
mov
in
cmc
in
loope
out
fbstp
out
sti
mov
jne
jo
inc
lods
js
cmp
sub
push
in
out
cli
pusha
aaa
sti
add
inc
mov
sbb
jne
pop
movsl
push
fisttpl
cld
gs
mov
adc
mov
test
sub
push
rolb
push
inc
lea
dec
pop
sbb
pop
je
pop
fnstcw
cmp
inc
popa
sbb
sub
imul
dec
xchg
in
adc
fsub
push
faddl
push
cmpsb
test
sbb
push
aam
das
or
mov
cmp
mov
cmp
jmp
cli
mov
cmp
shlb
mov
dec
xchg
adc
xchg
pop
out
sbb
jo
cmpsl
mov
int3
and
fdivl
les
and
outsb
cwtl
pop
add
inc
xor
xchg
insl
js
cmp
push
xchg
mov
lea
je
je
rcl
mov
sbb
sub
jle
sarl
out
adc
jns
and
push
mov
test
test
clc
adc
loope
sub
and
mov
stc
popf
add
cltd
fcoml
cmp
jne
pop
push
test
clc
hlt
mov
imulb
or
inc
cmp
push
adc
jp
fsts
sub
cmp
scas
rcll
mov
sbbl
pop
sbb
and
mov
loopne
cmp
ret
pop
dec
ljmp
pop
les
sub
test
adc
sbb
push
cmpsb
cmp
dec
pop
les
mov
lcall
push
fnstenv
inc
dec
repnz
add
and
push
xchg
rorl
jge
and
lahf
and
enter
and
out
dec
pop
adc
cmc
mov
ret
push
xchg
cs
fnstcw
mov
cmp
mov
jnp
inc
sub
cltd
add
scas
aaa
dec
aad
or
or
das
dec
mov
pop
mov
pop
jge
jle
push
call
inc
rol
pop
inc
out
sub
mov
cmp
mov
or
mov
xchg
inc
mov
add
jmp
cmc
int3
les
rcrb
aam
and
sar
mov
fsubl
mov
xlat
sub
or
cmc
bound
loop
sub
mov
or
cltd
mov
ficompl
and
call
scas
mov
cli
loop
je
std
test
push
ljmp
jno
pop
out
jle
lcall
mov
shrl
inc
ljmp
out
jge
insl
fsts
xor
das
cmpsl
iret
pop
les
add
or
test
inc
and
xchg
add
lds
dec
jle
sbb
ds
jmp
pusha
jns
xchg
cmp
pop
cmp
loope
fsubrp
lea
add
fdivl
sub
xchg
inc
xor
mov
jp
jmp
ror
fcom
jb
ljmp
cltd
popa
cmp
jmp
insl
aaa
jb,pt
mov
jb
dec
mov
mov
inc
and
mov
cld
data16
push
mov
inc
and
aam
movsl
and
adc
sub
and
sub
or
cmp
mov
sub
lret
sarl
int
inc
adc
xchg
movsb
jns
push
lds
jl
sbb
pop
or
cmpsb
sub
cld
sbb
daa
mov
imul
add
scas
negl
movsb
les
ret
sti
imulb
xor
bound
jge
out
pop
add
ret
into
enter
push
icebp
fistpll
sbb
mov
imul
ss
sub
mov
scas
dec
mov
xchg
jg
int
mov
fidivs
int
aam
mov
push
imul
es
loop
rorb
fnsave
pop
das
inc
push
lcall
std
nop
pop
xchg
insl
or
jno
fsubl
push
stc
iret
sbb
mov
fimull
cmp
fwait
dec
loop
mov
mov
xlat
repz
stos
and
xor
ja
mov
dec
sbb
sbb
xchg
mov
arpl
insb
stos
xchg
inc
lret
loop
cmc
push
cmpsb
les
or
mov
pop
fwait
cwtl
mov
sub
rclb
jnp
or
ficomps
in
mov
jecxz
xor
sbb
lcall
mov
call
cmp
jnp
les
call
repz
insb
pushf
push
or
daa
jbe
mov
ss
jae
push
push
loop
lahf
jg
rorl
out
loop
sub
mov
xchg
pop
call
jno
js
stos
inc
jne
mov
xchg
insl
sbb
and
into
cld
hlt
mov
lock
jmp
and
inc
out
lods
lret
aad
xor
repz
mov
adc
dec
and
cmc
sub
pop
shlb
jg
nop
jl
sbb
aad
aaa
adc
xchg
jmp
push
inc
cltd
pusha
cmp
imul
sarb
ficoms
leave
xor
push
mov
sbb
cltd
in
push
data16
sub
test
sbb
pop
arpl
dec
cmpsb
fcoms
adc
lcall
aam
out
sub
pop
and
xchg
cmp
mov
stos
frstor
and
stos
ds
add
cmpl
outsl
ja
or
and
or
xchg
and
push
movsl
ret
test
in
outsb
adc
mov
and
popa
clc
push
cmp
cs
xrelease
fisubs
cld
sahf
mov
sbb
roll
mov
shrl
inc
ret
pop
mov
add
loopne
sub
cmc
test
add
pop
icebp
std
test
mov
cmp
adc
in
js
mov
jp
std
or
dec
inc
ficoms
das
sbb
cmpsb
cli
add
std
or
fs
stc
push
xor
les
push
mov
in
jp
test
add
fldt
in
andl
adc
enter
or
push
dec
pusha
nop
inc
mov
movsb
shl
mov
mov
popa
pop
movsl
sbb
out
cmp
sarl
mov
in
adc
aam
pop
mov
movsl
cmp
sub
cltd
xchg
push
pop
fiaddl
and
bound
add
mov
out
lahf
mov
fadds
aam
sti
test
daa
push
xor
mov
out
rcll
inc
pop
sbb
mov
std
jecxz
loope
pop
mov
psubw
mov
movsl
insl
inc
fmuls
xchg
pop
mov
stc
mov
in
add
and
jge
enter
mov
ds
mov
mov
cmpsb
inc
lretw
xlat
xchg
into
out
js
xor
fldenv
std
dec
cmp
lret
hlt
mov
into
push
call
in
or
xchg
cs
jbe
mov
cmp
test
test
jne
es
mov
mov
into
adc
xchg
inc
incl
jno
adc
jnp
mov
aaa
icebp
cmp
push
or
aas
mov
push
popf
sub
dec
inc
xor
ds
arpl
push
lds
or
call
shll
xchg
xlat
cmpsb
xor
lods
push
cmp
mov
icebp
and
repz
and
xchg
xor
jle
sub
ret
adc
ret
cwtl
mov
mov
xchg
ss
jge
mov
and
dec
and
in
ds
mov
outsl
push
repz
inc
repz
xchg
sti
lds
dec
fisttps
ret
pop
cmp
jge
gs
pop
push
out
dec
sbb
push
mov
cmp
lods
cltd
test
insb
jecxz
mov
push
mov
std
fstps
or
xchg
pusha
fildl
inc
shlb
leave
and
jb
inc
cli
xchg
pusha
popf
and
mov
jo
lods
pop
test
lods
ja
sub
fst
repz
jge
jns
icebp
jnp
aad
popf
mov
pop
shlb
inc
cmp
mov
pop
xchg
leave
call
test
mov
lret
insl
inc
enter
sar
mov
xor
push
push
aad
dec
cmpsb
dec
cmp
xor
cwtl
mov
push
or
push
mov
push
es
jp
insb
sub
jnp
test
fmull
mov
mov
je
jmp
xchg
inc
insw
add
cmp
mov
and
loopne
cmc
add
faddl
ljmp
mov
test
call
shr
nop
ss
test
dec
mov
jne
sub
pop
movsb
mov
pop
add
ret
dec
test
sbb
lea
xchg
xchg
lds
and
push
mov
sarb
fistpl
or
data16
insl
add
adc
dec
mov
mov
insb
or
sbb
mov
pop
jne
nop
sbbl
push
push
cmpsl
mov
inc
dec
stc
mov
sub
xchg
sub
pop
mov
adc
xchg
rol
in
insb
int
mov
jae
aas
sub
push
cmp
hlt
push
call
js
outsl
jnp
dec
stos
jnp
cmp
ljmp
pop
or
jae
inc
cltd
test
in
push
push
or
adc
mov
daa
dec
sbb
pop
dec
insl
test
scas
sub
rcrl
mov
mov
mov
movsb
adc
mov
sub
mov
fcmovnbe
test
xchg
nop
sbb
mov
fwait
repnz
xchg
das
ficoms
fwait
mov
jge
mov
gs
mov
in
sbb
sbb
jle
in
es
mov
data16
sbb
inc
je
fcmovnb
shl
cmc
cld
push
cmpsb
cs
popf
dec
arpl
jecxz
int
mov
scas
in
add
mov
push
rorb
mov
cmc
mov
ret
testb
jns
pop
loope
mov
mov
push
lock
or
mov
mov
out
cmp
xchg
movsl
ret
loop
outsl
inc
and
adc
add
jle
xlat
cmp
jecxz
sbb
or
push
outsb
and
cmp
and
ds
aad
outsl
mov
mov
mov
jo
sub
in
mov
mov
mov
rorb
mov
cmp
and
loope
xchg
xchg
rcrb
inc
cmp
cmp
andb
push
scas
fucomip
in
add
mov
inc
fsubp
cmc
lret
add
xor
xchg
jl
call
enter
dec
jecxz
cmp
clc
loopne
andb
iret
ret
test
mov
pop
push
dec
rclb
ret
sub
mov
jns
xchg
lret
and
mov
es
arpl
loopne
fimull
cli
adc
inc
int
call
xor
mov
xlat
xchg
scas
pop
leave
clc
aam
sub
jecxz
add
es
movsb
dec
cmpsl
lds
or
dec
sub
mov
icebp
and
mov
les
dec
popa
scas
negl
pop
mov
jns
sti
shl
out
enter
in
and
loop
dec
stos
inc
out
mov
pop
loopne
pop
sbb
and
mov
lahf
shrl
pop
loop
loope
mov
lods
imul
stc
in
subl
shrl
dec
jo
aad
mov
mov
push
cli
lret
pop
push
sub
mov
mov
scas
xchg
push
popa
dec
rcr
repnz
xchg
sahf
pop
adc
inc
out
cmp
jl
push
xor
movsl
pop
cmp
add
sub
scas
and
aas
cmp
sbbb
xchg
ret
mov
fldl
jnp
dec
dec
push
movsl
xchg
cmpsl
mov
inc
xlat
out
pop
testl
xchg
ljmp
inc
dec
lods
inc
out
leave
test
mov
and
movsb
insl
sbb
roll
mov
cmp
and
lock
mov
stos
add
sbb
add
inc
in
inc
sbb
shl
mov
push
movsb
ds
mov
pop
in
dec
js
ret
mov
pop
repnz
and
sub
add
jno
dec
xor
sbbb
or
rcll
call
in
jle
adc
inc
icebp
movsl
jae
nop
cmc
mov
jl
daa
dec
int3
out
inc
mov
or
rcll
xchg
cmp
mov
add
mov
sbb
imul
int3
data16
pushf
sub
push
outsl
cmc
dec
and
repz
scas
aaa
dec
xchg
nop
daa
ret
jno
pop
outsb
imul
aaa
and
test
xchg
push
xlat
outsl
and
insl
ds
popa
clc
pop
adc
cmp
stos
jp
repnz
loop
push
nop
popa
int3
popf
dec
bound
pushf
jne
xchg
add
and
insb
pop
std
push
popl
mov
jo
or
push
in
inc
insl
lock
jmp
xchg
jmp
and
mov
xor
mov
adc
sbbb
fisubrl
cs
sub
je
push
fwait
adc
push
sub
add
jno
mov
cmp
nop
into
dec
mov
xchg
push
mov
mov
scas
out
sub
pandn
clc
cwtl
das
sub
aas
lds
mov
aas
jno
lcall
dec
in
repnz
and
mov
ja
xor
fs
push
scas
cwtl
xchg
lret
jp
fidivl
cmp
push
push
or
negl
stc
jp
movsb
pop
lds
mov
mov
mov
int
sub
mov
int3
inc
into
shrl
jno
add
aam
loop
cmp
mov
fucomi
push
sub
push
popf
daa
pop
pushf
jb
js
enter
mov
call
enter
test
push
push
enter
and
xor
gs
cmp
jno
mov
adc
scas
nop
lods
shl
ss
cld
nop
out
lds
bound
dec
jmp
inc
or
xchg
daa
ss
jmp
mov
loop
in
push
xchg
xchg
mov
aaa
pop
pop
ds
in
daa
out
and
cli
inc
ja
or
jl
sbb
push
and
aad
xchg
cld
xchg
pop
test
pop
push
fcmovb
sar
lods
outsl
add
jle
movaps
hlt
sbb
mov
mov
loop
inc
es
scas
insl
push
sub
lahf
jge
andb
mov
jle
mov
outsl
out
aas
iret
dec
arpl
push
aaa
ret
sub
adc
iret
repnz
addr16
cmp
lock
pop
lea
inc
push
sbb
or
mov
mov
insl
jecxz
or
repz
jp
and
repz
pop
ja
sarb
in
pop
stos
add
mov
ds
cs
cmp
dec
cwtl
xor
sub
loop
mov
lds
loopne
fisubl
and
dec
fists
hlt
adc
lods
fdivrs
add
pop
fsubs
loope
in
cmp
dec
sbb
lods
sbbl
xchg
jl
or
in
cltd
push
add
mov
pop
sub
mov
pop
mov
loop
pop
inc
xchg
cmp
jmp
in
add
mov
mov
sub
xchg
adc
int
jne
sarb
test
mov
fsub
ja
insl
loop
ret
mov
sarl
aad
add
mov
shll
xorb
or
outsb
or
lock
gs
mov
shll
sbb
mov
mov
or
outsb
test
sti
push
push
xor
sub
cmc
or
cmp
jle
lods
ficomps
test
xchg
sub
pushl
add
popa
cli
cwtl
pop
pop
xor
sbbl
push
nop
daa
mov
adc
scas
inc
leave
arpl
pop
jg
in
std
jns
push
lret
cmpl
lret
inc
lods
fsubr
sub
shrl
mov
pop
or
push
je
call
sub
push
loopne
lea
adc
out
mov
pushf
inc
pop
jno
test
mov
xchg
sub
insl
pop
repz
adc
pop
cwtl
cmp
jl
dec
xchg
daa
in
xchg
fisttps
cli
dec
jbe
inc
dec
xchg
push
cs
std
dec
fldenv
or
es
fbld
pop
push
aam
sub
sub
push
or
dec
notb
push
test
pop
xor
cld
fwait
mov
push
loop
idiv
xchg
rcl
cltd
sub
in
xor
jne
pop
xchg
dec
stos
mov
imul
xchg
sub
xor
mov
mov
in
mov
fsubl
mov
insl
loopne
xchg
mov
js
mov
ret
out
loopne
mov
xorb
jae
push
jo
out
mov
adc
pop
int3
push
je
imul
loopne
rcr
daa
fwait
ret
hlt
jns
push
xchg
hlt
dec
push
xor
jbe
addr16
push
adc
rorb
mov
aam
movsb
add
out
xchg
fs
sbb
iret
lods
sti
stos
pusha
xchg
loop
push
mov
pop
aaa
jnp
jge
test
sbb
xchg
inc
clc
xchg
add
pop
icebp
jle
mov
cmp
mov
leave
mov
mov
push
push
push
inc
fsubs
push
pop
hlt
mov
ret
jnp
aas
xchg
add
adc
mov
pop
cmp
dec
test
mov
add
clc
xor
adc
jp
lret
js
stos
lea
pusha
cltd
mov
hlt
divl
scas
xchg
push
movsl
scas
pop
pop
cmpl
mov
pop
arpl
das
adcb
and
cmp
into
lods
sbb
push
dec
push
ret
js
xor
dec
mov
fisttpll
inc
test
adc
inc
cmpsb
lret
fs
and
mov
imul
sbb
pushf
out
mov
std
or
mov
lods
cmp
push
jmp
inc
fdivrl
mov
cmp
push
in
sbbl
incb
pop
je
xchg
adc
mov
test
and
dec
inc
adc
and
cli
mov
and
rcl
xor
push
lret
into
mov
dec
jnp
bound
dec
mov
mov
cli
xchg
xchg
sbbl
rolb
lahf
xor
rcrl
push
pop
and
nop
cli
xor
jns
sbb
mov
cmc
sbb
cmp
ret
inc
mov
in
dec
dec
rcrb
push
cmp
lea
movsl
aam
sti
cmp
cwtl
imull
popa
cmp
pop
popf
sbbb
mov
jle
dec
sub
shrl
push
fsubr
jno
and
movsl
inc
dec
add
test
es
mov
out
mov
in
and
sbb
jns
mov
and
inc
clc
jmp
inc
aaa
mov
pop
imul
inc
repnz
fwait
inc
cmp
push
mov
add
out
fs
ds
dec
int3
mov
cmp
rclb
ja
add
xchg
lret
lds
dec
in
out
add
dec
mov
pop
dec
and
push
aad
mov
push
lods
jbe
inc
pop
add
mov
cli
lret
mov
fisubrs
leave
adc
mov
adc
push
jne
cld
inc
filds
inc
faddl
pop
out
cmp
ja
jbe
add
xchg
jmp
xchg
and
inc
pop
imul
sub
clc
ret
fldt
sbb
cmp
cmp
addr16
dec
lahf
mov
inc
xchg
insl
dec
cwtl
ret
mov
inc
lods
imul
insb
jbe
push
mov
inc
in
jp
xchg
enter
push
enter
mov
sahf
insb
or
mov
xchg
xor
and
movsl
push
jno
outsb
outsb
sti
sub
cmp
lcall
pop
enter
push
inc
hlt
lds
nop
mov
inc
pushf
inc
inc
mov
sub
pop
push
lea
jns
push
insl
jne
xchg
add
mov
rcrl
xor
jns
faddl
in
xor
cmp
stc
adc
loope
mov
mulb
in
cmpsl
adcl
fldl
fld
popl
mov
cmp
aam
sbb
mov
fldenv
sahf
cmp
jge
icebp
stc
loop
test
popf
mov
cmpl
push
ds
mov
sbb
pop
adc
decl
into
ficomps
xchg
and
jne
xlat
jbe
pop
test
adc
movb
xchg
ret
lods
inc
jno
adc
dec
lods
xor
cmp
std
jbe
insl
xlat
inc
fsubs
and
shll
ss
or
xor
inc
lcall
or
cmp
shlb
jns
push
orb
sti
adc
and
xor
jp
xchg
aas
lahf
push
fistl
fisubs
insl
int
bound
mov
gs
and
mov
mov
mov
rcll
inc
cmp
addr16
popf
jmp
ret
shr
adc
stc
push
std
ficomps
out
push
scas
inc
inc
jecxz
push
into
in
fsts
mov
push
in
popa
clc
push
orb
lods
idivl
movsl
mov
push
icebp
in
cmp
data16
adc
add
aam
das
adc
std
pop
jae
hlt
jo
mov
or
movsl
jbe
sub
js
jmp
movsb
mov
sub
and
shr
stos
pop
or
andl
stos
xchg
outsb
mov
adc
int
fucomp
adc
sub
test
movsb
xor
stos
xor
bound
xchg
mov
jmp
mov
pop
int3
ficoms
sbb
sub
cmp
lds
rorl
iret
inc
cltd
iret
adc
popa
lcall
popa
ret
lds
pushf
and
fidivrs
std
pop
inc
hlt
fcomps
movnti
shlb
fdivp
pop
cld
pop
outsl
sbb
push
andl
cltd
pop
leave
fsubrl
push
jecxz
cld
cltd
daa
xchg
sub
out
sub
and
xchg
lods
pop
or
imull
sbb
fwait
push
lea
aaa
jns
popf
fstpt
push
xacquire
inc
inc
filds
bound
sbbl
jmp
sub
popa
add
pop
pop
hlt
adcl
pop
dec
movsb
jnp
add
lds
mov
sub
scas
adc
fistpll
and
ret
push
orl
xlat
jle
cmp
inc
xchg
nop
and
jl
leave
pop
andb
xchg
imul
mov
aam
aaa
movsl
bound
sti
insl
jnp
inc
mov
lret
or
xor
and
cmp
iret
data16
pop
push
add
iret
cmp
shrl
fidivl
je
push
mov
jnp
pushf
xor
and
jg
nop
pop
cmc
add
jae
mov
inc
push
jmp
es
lret
aad
mov
pop
lock
pop
mov
test
ljmp
std
repnz
int3
sbb
enter
mov
sub
leave
ret
mov
in
insb
inc
imul
mov
mov
pop
scas
inc
lret
bound
sub
cmp
xor
enter
shlb
or
cmp
dec
mov
leave
xchg
test
int
loope
test
mov
push
mov
je
pop
add
xchg
pop
loop
std
adc
in
pop
pop
inc
jge
fsubl
adc
sub
cmc
mov
push
jae
jo
inc
popa
mov
xchg
test
ja
mov
orl
cvtps2pd
push
pop
sbb
sbb
imul
adc
add
mov
lret
mov
fld
add
out
jb
push
lods
les
pop
ss
xor
jns
cmp
push
nop
push
hlt
test
inc
sbb
jg
loopne
in
loop
stc
cmp
loopne
cmp
cmp
out
dec
push
pop
nop
sbb
xchg
or
lret
push
mov
dec
bound
ja
ret
cwtl
repz
movups
jg
jb
lea
pusha
sbb
jge
add
ds
push
mov
mov
or
sub
lods
adc
call
adc
jo
pushf
jp
movsb
stos
adcl
jae
mov
decb
or
adc
push
pushf
cltd
mov
je
cltd
xor
filds
xchg
fstpt
dec
or
mov
pop
dec
push
mov
je
pop
add
adc
xchg
xlat
lods
jmp
dec
popf
jg
out
xchg
push
in
aam
inc
push
ret
adc
or
or
lock
push
outsl
xor
dec
fmull
and
imul
cmpsl
push
cmp
cmc
setl
hlt
pushf
mov
fwait
push
ljmp
mov
pop
xchg
jp,pt
xor
addl
enter
push
dec
dec
lcall
inc
adc
pop
movups
lret
sarl
cmp
sub
bound
jle
push
rorb
inc
leave
loop
inc
imul
in
cmp
inc
bound
mov
add
ds
lods
insl
sbb
aad
clc
fwait
cmp
sub
push
sub
mov
scas
cmp
aaa
push
add
les
cmpsl
jecxz
xchg
stos
jns
loopne
out
testb
ret
mov
push
inc
es
insl
cmpsb
mov
sbb
subl
adc
shrl
mov
aas
xorl
divb
notb
sub
jl
sahf
arpl
sbb
subl
push
xor
jno
add
sub
pop
pop
cmp
and
mov
test
arpl
aad
stc
mov
xchg
inc
inc
movsb
fdivr
inc
lods
idivl
xchg
ret
xor
test
lock
shrb
in
mov
push
fsub
dec
adc
lahf
test
in
jle
lret
jp
loopne
adc
aad
sbb
fcompl
cs
scas
xor
ds
insl
rcr
inc
pop
mov
ret
imul
movsl
ret
popl
jge
mov
inc
in
cmc
mov
lods
mov
cmp
imul
push
and
jmp
xor
fdiv
cs
push
lods
inc
inc
mov
add
cmpsl
pop
lock
xchg
mov
ret
push
je
push
cmpsb
pop
test
inc
scas
xchg
sti
cmp
xchg
mov
jmp
jle
int3
adcb
test
scas
and
xchg
xchg
dec
imul
xchg
cltd
xchg
data16
mov
enter
xchg
push
es
pop
cwtl
dec
cmpsl
cmpl
add
mov
loope
or
xor
jns
cmp
nop
inc
popa
adc
fimull
jg
insl
test
xlat
lods
adc
mov
mull
js
add
cmp
adc
lock
push
pop
mov
clc
rdpmc
sbb
xor
cli
sbb
mov
pushf
jp
push
mov
cs
xor
push
mov
push
dec
movsl
push
or
in
mov
jge
test
js
inc
mov
or
lods
inc
push
push
out
cld
loop
dec
and
sub
add
arpl
sub
push
jecxz
xor
dec
mov
pop
sub
push
push
iret
lahf
mov
add
inc
sub
nop
lock
dec
push
mov
imul
and
or
mov
dec
in
aaa
add
inc
cmp
adc
ret
les
lcall
jno
jl
nop
sub
scas
xor
loopne
mov
dec
stos
jne
in
push
push
cmc
repz
dec
popa
movsl
xlat
add
xchg
repnz
pushf
dec
inc
fucom
cmp
pop
jmp
mov
lods
fidivs
pop
push
outsl
mov
cmpsb
mov
mov
add
ljmp
or
sahf
scas
bound
mov
jo
jbe
stos
repnz
test
fisubl
decl
movb
cmc
fsubr
cmp
enter
and
iret
jne
add
mov
xlat
shlb
fwait
icebp
and
push
mov
mov
inc
inc
mov
sbb
jmp
xlat
sub
pop
rcrl
cmp
lods
mov
inc
mov
insb
out
push
insb
dec
pop
imul
divb
cld
push
xchg
inc
add
and
leave
xorb
cmpsb
test
stos
jbe
jp
mov
xchg
testl
incl
jmp
dec
jp
push
xchg
leave
int
adc
js
xor
mov
clc
sbb
es
lds
cld
add
sbb
int
daa
and
xor
xor
add
mov
outsl
aad
push
mov
ss
mov
mov
cmpsl
push
in
push
in
sbb
out
leave
xor
test
lods
in
dec
adc
adc
mov
xor
cwtl
das
insl
rol
ret
idivb
sbb
dec
pushf
cmp
inc
imul
mov
mov
ljmp
pushf
mov
fmull
xchg
sbb
xor
movsl
les
loope
cwtl
nop
inc
push
mov
std
pop
cmp
repz
sub
cltd
adc
stc
ret
add
out
xor
insb
jecxz
pusha
push
add
or
mov
jne
movaps
push
lock
into
xchg
add
movsb
cld
xchg
or
sbbl
dec
dec
aad
lcall
sti
xor
cmp
mov
jle
leave
pop
out
fidivrl
push
repz
push
lcall
imul
jo
and
and
mov
sub
loopne
jno
pusha
adcb
cmp
mov
scas
gs
mov
push
mov
in
cltd
das
mov
xlat
xchg
mov
jno
or
mov
fisubl
dec
sbb
xor
jo
out
sbb
sahf
inc
scas
sub
aaa
sub
inc
mov
popf
test
stos
stc
jb
lock
hlt
cmp
dec
sahf
cmc
mov
adc
out
sbb
jnp
lcall
int
into
aam
jne
lods
xorb
and
gs
jl
or
adc
ds
mov
and
mov
pop
repnz
pop
jne
push
fs
mov
adc
cmp
add
fdivr
stos
cwtl
incb
bound
xchg
inc
pop
mov
lea
int3
cmpsl
out
fisttpll
mov
pop
sbb
dec
lahf
xor
fnstenv
jne
dec
loope
loope
mov
jne
out
push
stos
movsl
shrb
decb
lea
fucomip
leave
xchg
lods
sti
mov
in
mull
mov
cmp
mov
pop
outsb
fidivs
pop
push
aas
lret
addr16
mov
xchg
incl
xchg
cmp
push
dec
in
cmpb
mov
sahf
nop
bound
cmp
cmp
mov
push
lcall
mov
test
fidivl
sbb
std
mov
inc
adc
rcll
inc
mov
mov
popa
mov
xchg
aaa
ss
push
xchg
adc
jge
divl
and
sub
or
notl
int
add
and
mov
orb
push
pop
jae
pop
push
pop
adc
aas
mov
pop
sti
inc
int
and
adc
push
imul
pop
mov
loop
mov
push
in
insb
inc
push
add
fldenv
sbb
dec
or
shr
mov
inc
pop
mov
fsubrp
lods
les
js
sbb
stos
jge
into
jle
in
and
pop
and
xchg
idivb
sub
sbb
out
das
jno
adc
dec
loope
jecxz
jae
dec
xchg
add
sti
inc
movsl
jae
push
test
js
data16
xor
data16
repz
xchg
jp
inc
mov
iret
sbbb
push
mov
insb
add
dec
mov
add
pop
adc
push
push
sub
adcl
pop
lret
sahf
adc
cmp
and
insb
negl
jne
shrb
mov
ret
add
cli
add
add
xor
pop
jns
loop
mov
fnstcw
into
and
or
cmpsl
and
int3
aas
dec
sub
mov
xchg
std
daa
mov
enter
add
je
fldt
sti
pop
jno
push
lret
sub
icebp
aad
insb
adc
fldl
in
jne
aaa
xor
lock
push
arpl
movsl
xchg
or
jbe
or
mov
or
popf
mov
popa
cmpb
xchg
jge
imul
les
sub
jg
ja
and
xchg
pop
cli
ds
in
jmp
lret
sbb
fcoms
dec
js
push
push
push
shlb
cltd
test
or
std
pop
jecxz
incb
push
xchg
mov
jecxz
fsubrl
jbe
jne
push
jecxz
mov
jp
sub
jg
pop
es
out
ror
hlt
mov
jnp
inc
mov
push
outsb
adc
dec
pop
enter
adc
in
and
cmovo
mov
add
test
add
mov
mov
repz
adc
pop
inc
pcmpgtd
je
sub
xor
add
imul
outsl
nop
mov
dec
cli
aaa
xorl
adc
pop
sub
rolb
insl
sar
push
test
out
inc
jle
jecxz
or
cmp
out
push
fwait
jmp
jbe
cmp
fs
repnz
mov
sbb
scas
xchg
lods
xor
cmp
fiaddl
dec
int3
iret
gs
adc
dec
lret
and
in
fucom
les
jbe
cmp
or
stos
in
mov
dec
and
inc
lret
outsl
push
or
cmp
jne
test
sbbl
cli
divb
sbb
test
out
ret
inc
and
mov
sti
dec
add
hlt
andl
pop
loopne
icebp
mov
into
mov
push
and
push
hlt
jp
lods
mov
sbb
and
xor
push
icebp
inc
inc
lcall
pop
rcll
xchg
sub
enter
mov
pusha
neg
or
add
outsb
daa
inc
ficomps
sub
cmp
sbb
fcoms
insl
mov
lahf
xor
adcb
pop
pop
mov
pusha
add
sub
loopne
fnsave
fisubl
sahf
pop
pop
cli
data16
test
mov
inc
mov
jbe
scas
jg
aaa
sbb
hlt
cmp
xor
popa
mov
sbb
mov
mov
test
and
push
daa
mov
sti
jecxz
sahf
push
es
mov
push
xor
dec
cmc
mov
inc
test
fimull
or
sub
mull
cmpsl
push
pop
test
scas
jae
jmp
sbb
mov
pop
pushf
pop
lock
sub
cli
inc
stos
inc
ja
cmp
into
in
jb
leave
jmp
mov
fwait
mov
xor
or
dec
mov
nop
sub
inc
xchg
or
mov
in
notb
nop
test
dec
add
push
inc
dec
popa
inc
jmp
pop
xchg
lcall
outsl
mov
pop
loopne
fadds
or
in
je
mov
stos
sub
jmp
ja
ljmp
mov
push
jp
inc
mov
repz
fcoml
popa
mov
fistpl
in
sbb
mov
pop
fstpt
mov
jne
aas
mov
and
mov
mov
and
in
sub
dec
arpl
jbe
shll
js,pn
dec
sub
inc
scas
push
repz
lds
insb
call
lds
inc
sbb
loop
sub
cltd
pop
insb
mov
push
jno
inc
add
mov
fsubl
cmp
jbe
fidivs
and
adc
call
sahf
sub
scas
in
or
mov
incl
push
std
jbe
mov
mov
xor
add
imul
sti
xor
stos
dec
addr16
hlt
push
test
jbe
popa
test
inc
sbb
call
stos
xchg
pop
das
stc
or
mov
and
das
lods
ljmp
mov
aad
cmpsb
lock
add
or
js
in
ret
lret
lret
dec
shl
scas
sub
insb
pop
mov
mov
or
int
in
jp
sbb
jmp
fs
and
sete
data16
sbb
addr16
stos
mov
in
cmp
hlt
push
pusha
cmp
and
fnstsw
and
in
mov
insb
test
or
mov
adc
add
pushf
addb
cmp
int3
mov
rolb
jns
push
fnsave
push
das
sbb
test
cmpsb
sbb
movsb
cmova
mov
jns
xchg
imul
shrl
repz
cmp
pushf
cli
pop
andb
xchg
jmp
lds
pop
fsubrs
cmp
jbe
leave
jl
push
jo
xchg
aas
adc
sub
pusha
mov
clc
mov
sub
lahf
inc
stc
cli
push
mov
aam
mov
jo
rcr
test
pop
xor
xchg
mov
push
fistpl
leave
mov
sub
mov
or
les
sti
jle
shr
les
fwait
xchg
in
out
add
lahf
xor
es
jb
inc
fdivl
xchg
fisubs
shlb
mov
shlb
push
sub
push
andb
fwait
ret
mov
mov
mov
mov
out
cs
fcomi
into
dec
insl
add
out
cmc
adc
lahf
fsubp
ret
lahf
arpl
push
jmp
test
xlat
sub
xchg
jl
xor
jge
adc
movsb
ret
pop
dec
push
mov
jno
mov
fidivrs
orb
jnp
push
pop
pop
pusha
iret
xchg
jnp
adc
mov
repnz
mov
shl
insb
pusha
or
adcl
cmp
les
testl
adc
xchg
pop
shlb
mov
xor
mov
sub
ret
enter
stos
iret
fstp
rcrb
jmp
mov
js
inc
sub
jne
jecxz
sub
cmp
into
int
mov
dec
pop
jb
inc
mov
mov
fistps
out
xchg
test
or
rcrb
jle
jecxz
xchg
lcall
jle
xor
inc
popa
inc
jl
pop
inc
enter
inc
ret
pop
mov
movsb
jns,pt
outsl
lds
test
popf
scas
dec
pop
push
test
test
pop
or
insb
sub
jp
mov
pop
in
jl
aam
and
iret
verw
ret
repz
or
cs
mov
dec
cmp
sbb
faddl
icebp
fisubs
lods
sbb
ds
mov
in
xchg
pusha
adc
inc
add
daa
xor
sahf
xchg
rclb
icebp
fs
push
cltd
movsb
cmp
lret
jo
insl
inc
dec
bound
pusha
repz
inc
mov
pop
fnstcw
cld
cltd
cltd
jg
xor
mov
dec
add
add
sbb
jecxz
loop
dec
fisttpll
mov
mov
inc
or
imull
enter
out
imul
insl
mov
pop
adc
or
fdivrl
lea
cmp
out
dec
aas
push
inc
xlat
test
cltd
xor
and
cld
pusha
icebp
mov
and
ret
or
mov
sbb
mov
pop
repnz
dec
sub
jae
xor
lea
mov
fmulp
jge
cli
pushf
xor
push
call
gs
outsl
push
rcll
mov
sahf
sbb
aaa
jns
mov
dec
mov
cwtl
or
stos
ret
nop
daa
pusha
xor
cmp
lea
mov
insb
mov
dec
mov
or
or
hlt
or
stc
inc
push
cmp
mov
insl
add
pop
sub
inc
and
out
pusha
sbb
insb
jl
jne
out
adc
sub
xor
hlt
inc
dec
pop
jmp
mov
jmp
sub
mov
dec
adc
xchg
int3
rolb
mov
xchg
std
xchg
jge
std
lods
fstpl
call
shll
dec
gs
mov
das
sbb
mov
jmp
aas
out
add
xchg
in
pop
dec
sbb
push
insb
js
add
loop
xchg
rcl
test
ja
pop
jmp
mov
dec
lods
into
sbb
dec
inc
popa
stc
add
lea
adc
orb
or
adc
mov
aaa
andb
subb
push
xchg
nop
xor
lods
rorl
and
xchg
lea
or
push
adc
push
xor
movq
pop
ja
push
loope
hlt
aad
xor
mov
fdivrs
mov
enter
adc
fiaddl
das
addr16
jp
sbb
nop
imul
fiaddl
mov
and
cmp
lcall
jp
xor
cmp
xor
push
cli
or
xor
dec
pusha
inc
jle
jecxz
push
push
jge
mov
xchg
in
outsl
ret
push
lcall
scas
imul
repnz
sti
sub
pop
lock
decb
inc
lret
scas
enter
fistpl
test
pop
imul
imul
mov
int
cwtl
push
inc
cld
sub
pop
jns
dec
pop
cld
cmpsl
daa
outsl
mov
sub
jnp
cmp
xchg
inc
pop
ret
adc
pop
sbb
or
sbb
and
int
pop
add
inc
aad
mov
jp
jmp
cmp
mov
adc
xor
addr16
lret
inc
int3
mov
and
clc
add
adc
sahf
ljmp
and
jp
cmp
mov
arpl
sbb
out
or
lea
dec
repnz
push
jbe
mov
subb
jno
and
hlt
push
stos
pop
or
add
mov
or
mov
jl
sub
ljmp
push
scas
and
fsubr
addb
lcall
in
das
lds
mov
int3
pop
movsb
js
pop
jg
jge
aad
popl
and
xor
mov
scas
push
faddp
fmuls
mov
lahf
jno
xor
adc
mov
cmc
add
cmp
adc
scas
push
mov
inc
lret
mov
sub
aad
sub
dec
lret
jnp
xor
nop
inc
push
stos
pop
push
insb
shlb
sbb
inc
cmc
mov
in
daa
mov
xor
add
in
movsb
repnz
call
add
bound
iret
jae
ror
and
mov
push
repz
xlat
cmp
loop
jne
mov
jg
movsb
gs
das
and
xor
std
pop
ds
adc
and
dec
scas
call
stc
dec
ljmp
sub
test
xchg
add
mov
repz
dec
mov
mov
dec
dec
sbb
lahf
pop
adc
cmpb
mov
int
cmp
jecxz
or
in
sbb
call
push
je
mov
adcl
add
adc
cmp
enter
inc
ljmp
lock
xlat
jbe
push
std
mov
push
and
and
orb
rol
mov
fcompl
iret
add
in
and
dec
sti
jo
xlat
xor
fsubrs
lret
mov
std
nop
jae
clc
bnd
repnz
adcb
dec
cwtl
jl
jle
scas
or
das
add
adc
test
mov
leave
xor
shll
inc
mov
xchg
mov
or
pop
add
fsubs
lods
in
fildll
mov
xchg
sub
iret
repz
pop
insb
jmp
jmp
out
dec
sbb
aad
jb
mov
jmp
cmp
sbb
mov
sbbl
je
pusha
xor
repnz
mov
and
std
xor
pusha
xchg
enter
sbb
lock
mov
inc
iret
push
xor
sbb
movsb
sub
mov
xor
js
lds
inc
push
sbb
mov
add
or
insl
xor
xchg
insl
notl
dec
fnstcw
lds
lret
mov
cld
pop
mov
js
add
sbb
mov
aam
shl
movsl
pop
sbb
lods
mov
pop
adcl
xchg
mov
or
stos
xor
js
int3
push
xchg
or
mov
pop
jo
fwait
in
xchg
outsb
cmpsb
pop
daa
mov
clc
inc
inc
jmp
mov
xor
lcall
mov
pop
dec
je
jbe
loopne
and
pop
sub
and
fnsave
inc
hlt
addr16
pop
fs
lds
jno
int
int
insb
xchg
es
sti
mov
inc
test
sub
ds
mov
stc
int
sbb
scas
mov
xlat
push
xor
jmp
or
adc
imulb
pop
sub
out
or
loope
sub
outsl
repz
push
int
pop
xchg
dec
dec
xchg
scas
repz
fnstsw
push
cmp
push
and
cld
fsubrl
push
in
pusha
std
lret
fsin
inc
in
test
loope
fists
or
inc
js
movsb
push
sub
sarb
test
inc
push
outsl
cld
xchg
mov
in
movsb
adc
mov
xchg
mov
cmc
insl
add
out
push
lods
and
and
lret
jne
stos
int
pop
lea
mov
loopne
repnz
push
idiv
into
mov
adc
out
loope
inc
lret
sti
loope
xchg
inc
xlat
sbb
xchg
loope
sub
pop
mov
cmp
popf
shlb
decb
loop
mov
repz
jb
stos
out
dec
push
mov
iret
inc
into
clc
xchg
mov
pop
and
push
rcll
xchg
dec
or
fbstp
clc
xchg
push
test
sbb
mov
pop
and
inc
in
in
push
popa
or
repz
lea
sbb
fidivs
mov
mov
fisttps
aaa
mov
mov
mov
les
mov
pop
mov
popa
leave
and
mov
xor
loop
sti
jns
fcoms
loope
data16
in
ret
test
push
fstps
mov
mov
dec
push
jg
sti
sbbl
sbb
testb
mov
dec
fistpll
adc
in
mov
hlt
loop
outsb
add
lea
jl
adcb
fmull
dec
les
mov
int3
mov
mov
or
push
lods
cmp
dec
or
shll
xchg
into
or
jg
andl
cld
push
xchg
mov
ljmp
xor
outsl
mov
lret
pop
push
xchg
sbb
movsb
int
cwtl
iret
lret
sahf
xor
fldt
addl
xor
lods
adcb
sti
popa
or
es
mov
add
push
dec
daa
outsl
mov
pop
jle
in
aas
push
xchg
je
jl
mov
xor
orb
adc
jl
jno
lea
fidivrs
xchg
cltd
in
mov
adc
and
xchg
and
imul
clc
jl
xor
mov
jbe
push
inc
adc
js
mov
jns
mov
mov
call
psrlw
int
dec
shll
xchg
dec
mov
mov
roll
jns
push
fucomp
xor
ja,pn
lods
mov
test
and
mov
in
inc
pop
add
xor
inc
fdivrs
stos
xchg
stos
scas
dec
pop
das
lods
into
gs
or
cmp
and
adc
pusha
inc
stc
jne
addr16
push
sub
or
inc
or
outsl
daa
fwait
stc
jnp
aaa
jb
aaa
imul
mov
subb
das
push
cli
pushf
fidivl
int3
xchg
pop
adc
notl
and
iret
mov
sub
out
jae
sub
add
ret
jnp
sub
flds
xchg
mov
add
add
daa
andb
jecxz
rcl
mov
mov
insb
negb
test
or
stos
inc
out
pop
jmp
sub
js
pop
pop
and
imul
inc
es
xchg
dec
mov
push
mov
lea
mov
fdivrl
scas
and
xchg
hlt
mov
fisttpl
mov
bound
leave
loop
out
mov
popf
orl
mov
push
fsubrs
cmp
ret
pushf
xchg
jecxz
mov
dec
pusha
mov
test
mov
ljmp
repnz
insb
mov
or
or
add
cmpsl
lcall
ret
aad
das
or
cmc
arpl
sahf
aad
out
fwait
cmc
cmp
lock
push
and
cmp
addr16
or
ds
lock
clc
in
in
adc
cwtl
divl
mov
or
xchg
sbb
in
notb
inc
mov
cmp
xor
aaa
rcrb
dec
or
repnz
pop
jae
lret
cmp
into
or
mov
fnstsw
pop
mov
fstpt
icebp
leave
mov
push
inc
sbb
sbbl
mov
inc
push
js
inc
popa
lahf
mov
sbb
mov
aas
out
xchg
sub
and
mov
sbb
test
add
mov
jno
rorl
mov
pop
and
add
jle
enter
mov
cmp
outsb
out
cmp
mov
in
cmpl
adc
or
aas
ret
cmp
ljmp
mov
arpl
mov
das
stos
push
out
xchg
aad
xor
outsl
push
cmp
leave
aaa
pop
clc
mov
loopne
call
push
mov
push
xor
xchg
fdivrs
jae
mov
cltd
cmpl
mov
add
cld
pop
cmp
repz
xor
scas
loopne
push
mov
ret
int3
fdivrl
pushf
xor
fsts
adc
pop
and
mov
hlt
fcomp
and
das
fs
fs
and
rcrl
cmpl
mov
shl
rorb
jne
scas
movsb
mov
xchg
push
imul
push
or
cmp
sbb
adc
mov
adcb
lret
pop
pop
mov
ds
xor
inc
sti
adc
ljmp
fidivrl
mov
cld
lds
dec
xchg
or
xchg
sub
lods
cmp
mov
lret
iret
sbb
arpl
lock
add
scas
aas
mov
xorb
jbe
fcompl
push
je
mull
sbb
dec
inc
push
out
in
mov
out
adc
inc
mov
jbe
xor
pop
jle
fstpl
mov
xor
out
fwait
shll
jle
dec
jge
push
mov
mov
int3
lahf
mov
subl
stos
leave
int
ja
mov
psrlq
mov
push
jns
xchg
or
adc
lahf
push
movsb
cmp
push
icebp
jle
addb
dec
add
cs
xlat
lahf
loopne
mov
jbe
xorps
rcrb
scas
mov
les
xchg
and
xchg
sub
ja
lcall
lods
and
cld
push
mov
mov
repnz
jbe
xchg
mov
push
dec
jecxz
lcall
out
out
add
xor
dec
bound
or
mov
inc
call
inc
push
call
imul
cld
popa
mov
insl
in
scas
or
and
sahf
stos
sbb
mov
aad
sub
pop
mov
xor
mov
orb
pushf
fwait
adc
jae
jge
jg
mov
xor
lahf
daa
pop
mov
mov
sub
inc
pop
out
mov
and
jl
stos
cmp
dec
mov
add
lcall
outsb
jl
pusha
adc
popf
and
sub
in
into
clc
inc
leave
incl
jne
pop
add
cwtl
fisubl
jl
inc
out
cmpb
adc
xchg
mov
aad
in
mov
xorb
cmp
jg
fdivl
sbb
mov
cld
int3
push
xchg
mov
stos
sti
daa
jnp
sar
les
xchg
add
inc
loope
cmpsb
inc
add
adc
pop
or
mov
mov
jecxz
call
arpl
mov
ret
lret
mov
mov
popa
mov
xchg
lods
in
push
cmp
jg
lock
push
xlat
imul
pop
cwtl
dec
xchg
cwtl
lods
ret
push
scas
mov
fs
nop
sahf
cli
fdivrs
sbbb
fisubrl
mov
adc
jno
pushf
out
test
xchg
xchg
inc
xlat
jmp
ds
test
sbb
stos
bound
jbe
pushf
fbstp
std
mov
pop
clc
xchg
adc
mov
jno
mov
pop
push
imul
sbb
lods
nop
fdivrs
addb
cltd
add
jge
push
mov
inc
arpl
nop
popf
clc
test
adc
dec
dec
gs
mov
pop
sahf
sbb
pop
push
cmpsl
sbb
hlt
sbb
sub
loop
xlat
pop
addr16
imul
je
xchg
mov
enter
mov
mov
push
jns
pushf
mov
shlb
mov
repz
mov
shll
mov
aaa
imul
and
mov
icebp
inc
add
fwait
xchg
pop
adc
orb
cmpb
iret
jno
in
outsb
xchg
mov
sbb
xchg
stos
scas
adc
mov
mov
mov
mov
mov
cmp
aaa
pop
adc
cmp
ret
cmp
or
loope
or
scas
lret
push
add
xchg
jno
add
adc
xor
stc
lea
push
rcr
adc
mov
mov
adc
daa
aam
insl
sahf
fdivrs
test
sahf
lods
popa
xchg
jl
dec
xchg
xor
mov
mov
pop
fsts
lods
or
pushf
xchg
aas
lods
inc
pop
dec
xchg
push
fs
lret
pop
sahf
pop
pop
mov
dec
jecxz
push
stos
sub
sub
int
and
loope
pop
in
jmp
mov
sbb
scas
stos
mov
imul
test
sbb
outsl
push
mov
xchg
mov
push
lds
idivb
mov
mov
sub
sub
adc
mov
xor
das
loopne
or
out
jo
push
pop
pop
inc
mov
fcmovnbe
sub
movsb
push
jbe
jo
jp
or
pop
ds
dec
pop
xchg
repz
cmp
jp
fs
cmp
adc
adc
cmp
dec
movsb
xchg
mov
shll
mov
xor
push
adc
add
pop
jo
aas
sub
fdiv
es
mov
add
mov
rcrb
pop
cmpsb
pop
shll
cmp
and
popf
mov
adc
push
cwtl
xor
stos
mov
cmp
xchg
out
mov
daa
add
jnp
cmc
or
sbb
pop
js
mov
jno
mov
jg
outsb
add
lahf
call
mov
mov
pop
shrb
inc
pop
sahf
test
mov
pop
sub
aam
jp
ljmp
jb
and
mov
enter
cmpsb
cmp
jmp
cmp
jbe
cmp
and
mov
add
mov
int
pop
push
addr16
xchg
or
mov
dec
fisttps
lahf
daa
sbb
scas
xor
push
mov
xor
nop
icebp
test
push
loope
cs
cld
fdiv
jb
sub
cmp
popf
or
jge
cmp
into
dec
and
cmp
out
jg
mov
in
pop
stos
iret
ficoms
push
mulb
xchg
adc
sbb
mov
shll
ljmp
jns
into
gs
mov
xchg
popf
test
ds
sbbl
add
xor
aas
mov
int
dec
incl
dec
lock
stos
and
sub
sub
inc
jg
sbb
sbb
sahf
cmp
adc
and
sahf
jl
stos
mov
mov
sbb
cwtl
notl
repz
cmpb
jl
cmc
movsb
cmp
inc
jae
inc
fld
loopne
mov
sub
das
push
mov
leave
jne
cvtps2pd
jle
fcomps
sahf
sub
pop
dec
faddl
cs
frstor
push
mov
clc
inc
notb
sbb
std
dec
mov
jno
cld
flds
push
rolb
push
jp
push
sahf
or
mov
xlat
push
shrb
stos
pop
loope
fwait
pusha
adc
xchg
in
cmpsb
pop
cwtl
mov
loope
or
mov
mov
jg
es
pop
lds
pop
xor
or
mov
sahf
pop
lds
repnz
add
fisubs
mov
xchg
das
mov
std
push
jmp
cltd
cs
and
inc
sti
jl
push
push
icebp
xlat
pop
inc
aam
mov
je
xor
out
aam
cmp
mov
fstl
fildll
cltd
adc
mov
arpl
gs
test
jmp
mov
nop
daa
ds
xor
das
popf
addr16
push
dec
rcl
adc
mov
jecxz
cwtl
mov
add
cmp
mov
pop
jle
leave
int
movsl
pop
and
jmp
insb
pop
mov
je
daa
or
pop
jmp
add
lods
in
hlt
mov
into
das
mov
or
inc
in
addr16
int3
push
repz
fidivrs
in
jnp
push
popw
loopne
js
pop
add
imulb
aas
fcom
pop
mov
jb
out
dec
jb
ret
hlt
mov
or
xor
repnz
sahf
cld
pop
jl
cmp
jle
or
add
pop
xchg
loopne
pop
ljmp
sub
xor
push
dec
fmulp
or
xor
sbb
aas
maxps
lcall
mov
lcall
cwtl
push
ret
jecxz
lods
mov
adc
ss
out
lret
and
stos
arpl
jbe
add
aaa
and
inc
mov
stc
jp
inc
ret
sbb
inc
sub
lods
push
mov
fstp
cld
test
sub
inc
movsl
jno
pusha
je
popf
movsl
xchg
mov
pushf
xchg
push
jp
inc
push
add
dec
xchg
sbb
test
into
mov
adc
test
ret
jg
and
iret
mov
movsl
fiadds
cs
out
inc
nop
imul
lods
inc
jmp
mov
popa
loop
stos
xchg
adc
sub
shrl
jl
sub
aaa
sub
sub
pop
repz
nop
sbb
mov
inc
push
pop
sbb
fs
arpl
xchg
test
lock
xor
mov
in
aam
imul
sahf
jno
xor
inc
jbe
inc
xor
sub
push
rorl
inc
popa
cmpb
and
push
jmp
mov
iret
dec
sub
mov
mov
out
stos
scas
jns
and
dec
pop
out
into
gs
repnz
mov
xor
into
outsl
imul
popf
xor
pop
push
push
inc
fs
xchg
jae
mov
add
sahf
adc
cmp
xor
insb
xchg
xor
or
movl
and
aaa
pop
push
hlt
jne
stc
mov
mov
add
hlt
mov
lret
adc
sti
mov
xlat
push
add
shll
decb
test
or
movl
lods
inc
addr16
in
shl
mov
sub
pop
xchg
rol
dec
ds
and
hlt
mov
dec
mov
or
mov
and
xchg
rorl
mov
gs
and
in
push
and
cmp
lret
test
ds
lds
flds
jbe
mov
xchg
je
pop
sub
insb
cmc
jle
lret
xchg
mov
popa
push
pop
xchg
and
sarb
jae
stos
std
fbld
int
xchg
test
mov
mov
push
mov
pop
xchg
add
mov
mov
push
movsl
xchg
outsb
hlt
sub
cmp
subl
and
push
loop
into
lcall
xchg
mov
enter
int
and
adc
and
cs
pop
jo
mov
sub
adc
out
xlat
sti
xor
out
js
mov
inc
mov
stos
mov
sub
sar
mov
sbbl
mov
fld
sub
sub
test
lcall
loopne
repz
repnz
dec
stos
les
pop
and
ffree
mov
ljmp
inc
in
mov
imul
sarl
scas
rclb
shrb
scas
mov
lea
xor
mov
adc
aaa
jae
jp
hlt
and
aad
dec
sub
ret
push
mov
push
lods
cmp
add
mov
pop
lods
outsl
mov
mov
dec
out
or
hlt
jnp
add
xor
das
adcb
es
mov
pop
scas
jmp
mov
sbb
into
and
jecxz
mov
jb
fisttpll
xchg
les
das
push
loopne
xchg
cmc
mov
jge
fcmovb
repnz
cmp
adc
cs
iret
xor
xlat
push
lods
xor
mov
ret
lret
cwtl
pop
jno
ss
mov
cmp
sti
cmc
jle
sbb
push
inc
inc
or
push
inc
lret
daa
int
cltd
add
loopne
cmc
jbe
jbe
ficomps
and
scas
int3
sub
ss
ret
mov
pop
adc
sbb
lahf
mov
out
ja
orl
dec
mov
leave
jecxz
pusha
sub
scas
inc
jp
fsubs
adc
fdivl
xor
or
and
xchg
cmc
sbb
in
in
sbb
xchg
ds
xchg
xorl
and
cmp
add
scas
jmp
cmp
insl
or
call
adc
ljmp
add
jp
pop
stc
jl
jns
nop
sbb
decb
sbb
and
cmp
fnstenv
jo
mov
xchg
mov
or
lret
addl
mov
mov
ret
popw
lods
loop
xlat
lcall
fcoml
xor
xchg
cs
jecxz
cmp
mov
cli
mov
jb
sbb
fwait
and
fld
xchg
lea
lds
negl
outsb
xlat
sub
mov
jge
subb
fidivl
inc
cmpsl
mov
push
pop
lcall
cwtl
jmp
pop
imul
sub
sbb
dec
jae
xorl
jl
rcrl
mov
push
adc
loop
jl
dec
bound
and
mov
nop
ret
in
pop
push
dec
pop
xchg
cwtl
pop
icebp
leave
jnp
fistpll
ljmp
add
pop
scas
dec
mov
stc
push
loope
push
mov
push
mov
les
cmp
and
insl
push
in
mov
fwait
insl
jg
scas
lock
add
xlat
mov
out
jecxz
push
ret
scas
std
aam
xor
cltd
sbbl
adc
add
dec
data16
cmc
jp
scas
xor
test
xchg
hlt
lret
mov
fsubrs
daa
xchg
lea
int3
dec
ss
mov
aam
dec
push
out
jg
lea
xchg
xor
jge
xchg
das
mov
mov
push
pop
push
repnz
pop
lcall
loopne
fisubrs
and
into
add
iret
mov
addr16
gs
movsb
pop
in
adc
hlt
cmp
mov
jb
sahf
or
or
cld
dec
mov
pop
lret
es
xor
test
lea
sarl
fmull
inc
jl
scas
loope
pop
daa
xchg
dec
jmp
or
orl
shl
in
inc
and
fistps
dec
popf
and
lods
rcrb
xor
iret
push
lods
push
sub
lods
imul
mov
outsb
addr16
inc
dec
orl
test
fs
and
out
lret
adc
mov
fldl
in
fucomp
fdivrs
mov
dec
adc
cmp
adc
jecxz
ja
outsb
pop
sub
mov
frstor
and
loope
shlb
mov
mov
cmp
or
dec
add
in
push
inc
mov
pushf
icebp
mov
pop
mov
add
out
or
mov
mov
xchg
inc
cltd
mov
insl
sbb
fs
mov
dec
add
int3
fsub
pop
bound
and
push
roll
cs
paddd
pop
mov
xchg
hlt
mov
push
sbb
jnp
pop
rcrl
push
test
dec
jns
xchg
cmp
dec
mov
add
mov
in
sub
sbb
dec
pop
xchg
pop
jno
mov
js
lds
les
ss
and
jg
les
stc
loopne
dec
fists
adc
push
int
enter
dec
gs
dec
pop
push
cmp
mov
out
leave
ds
pop
fisubl
and
sti
je
and
stc
fdivrp
sti
bound
add
out
jb
and
cs
mov
out
test
adc
lods
push
lcall
bound
lea
add
into
fwait
daa
les
scas
pop
pop
repz
and
loopne
shrl
into
decb
jge
cmc
xlat
lods
test
stc
test
mov
inc
add
mov
cs
xchg
loopne
dec
outsb
sti
xchg
mov
lods
xchg
test
pusha
adc
leave
popf
out
inc
dec
xchg
mov
test
mov
push
or
sbb
xchg
sbb
jmp
mov
add
jno
and
inc
xor
pop
in
mov
popa
out
mov
adc
xor
bound
pushf
jg
sbbl
mov
or
jns
push
sub
out
jae
mov
adc
xor
fnsave
pxor
sub
dec
aaa
jmp
push
inc
jmp
xor
lds
pop
mov
xorb
movsb
adc
jno
push
push
mov
test
cmp
sbb
sub
mov
dec
cmc
mov
push
mov
push
adc
or
pop
xchg
call
out
jae
mov
ret
sarl
mov
fadds
cmc
inc
jg
jne
addr16
cltd
dec
pushf
lods
ja
pop
stos
ficoml
rcrb
ss
xchg
pushf
jecxz
rclb
mov
scas
ljmp
loope
add
pop
jb
popa
or
inc
bound
sub
pop
scas
nop
nop
fs
mov
pop
or
mov
sbb
push
adc
jl
pop
inc
pop
imul
inc
sbb
pop
push
daa
mov
stos
sbb
or
mov
std
xchg
inc
aad
rorl
dec
push
or
inc
mov
ficoms
roll
add
adcl
and
xorb
and
sahf
outsl
jge
push
cmp
pop
add
lods
xchg
sbb
jp
push
push
pop
mov
movsb
mov
les
rcrb
pop
lods
stos
xor
xchg
inc
xor
and
mov
pop
sbb
shlb
xchg
inc
mov
in
xchg
mov
nop
call
pop
mov
inc
cmp
and
stos
or
dec
xor
loopne
out
cld
unpckhps
loop
shll
pushf
and
in
inc
push
js
push
bound
fucomip
cmp
data16
adc
addr16
pop
jbe
enter
dec
inc
sti
lahf
mov
loope
xchg
pop
test
cmp
mov
or
pop
shrb
stc
cmpsb
shlb
mov
mov
and
iret
inc
cmpsl
lock
popf
sub
mov
pop
test
xor
jecxz
aas
mov
inc
and
xchg
cmp
shll
mov
mov
jle
adc
cmp
mov
xchg
sub
outsb
leave
pusha
mov
call
dec
scas
test
push
inc
push
fs
pop
xchg
rcrb
loop
dec
fwait
jl
andl
nop
mov
mov
dec
lods
mov
and
push
push
cltd
jno
dec
sbb
subb
add
int
cmp
pop
repnz
rolb
popa
popa
jns
xchg
cwtl
inc
pop
ret
cltd
cmc
inc
loope
mov
idivl
in
sub
jmp
fstpl
stos
cld
adc
faddl
mov
out
es
inc
pop
push
in
jle
arpl
mov
je
push
stc
or
sub
inc
and
inc
fimuls
insl
movsl
enter
inc
xlat
mull
push
sbb
xor
fs
jge
imul
lret
dec
pusha
xchg
add
xor
loope
add
or
sti
mov
imul
mov
cmp
aas
jecxz
test
enter
dec
mov
mov
outsb
dec
cmp
mov
lcall
scas
sbb
push
les
stc
je
xchg
add
cwtl
daa
jbe
test
shll
dec
pusha
rorb
cmc
jmp
data16
mov
inc
fldl
addl
mov
in
cmp
or
lock
pop
gs
orl
inc
dec
sbb
flds
notl
sub
pop
jl
jecxz
jne
jge
dec
in
push
mov
add
mov
sarb
fs
pop
push
ljmp
lock
mov
xchg
ss
and
xlat
loopne
in
addr16
dec
fucomip
js
jae
mov
rcrb
add
pop
mov
add
pop
ficompl
push
push
adc
cld
mov
inc
popf
and
dec
popf
pop
push
test
mov
gs
out
push
fidivrs
push
cmpsb
add
dec
add
sti
mov
pop
mov
mov
sbb
cmp
jl
fnstenv
fucomi
xor
sbb
jnp
ss
arpl
daa
mov
push
flds
or
dec
daa
inc
lahf
sub
vpsllw
sarl
shrl
pusha
pusha
nop
repz
and
pop
adc
cmpsl
cs
js
aam
cmc
repz
ja
jl
ret
inc
and
repz
mov
bound
rorl
mov
sarb
and
push
test
or
insl
add
hlt
sub
sbbb
imul
test
mov
imul
push
dec
xchg
mov
mov
mov
dec
adcl
mov
xchg
and
inc
pop
js
mov
subb
in
roll
mov
dec
sti
aam
insl
pop
and
mov
sbb
scas
mov
add
jmp
push
sbbl
iret
xchg
xor
mov
ja
pop
cmp
ret
push
in
aad
loope
insb
inc
lret
ljmp
cwtl
scas
inc
lret
call
iret
dec
cmpsl
mov
push
cmp
loope
inc
cltd
xor
mov
mov
mov
sub
fdivrl
inc
lret
jg,pt
outsl
sub
jns
iret
cwtl
pop
inc
sbb
xor
dec
pusha
add
push
cltd
and
out
mov
push
stc
adc
aaa
push
push
mov
pop
jmp
or
mov
out
xchg
xchg
mov
in
push
ljmp
and
gs
fmulp
push
scas
nop
ljmp
loope
fs
push
iret
shr
loope
out
or
in
addr16
rorb
das
adc
add
sub
mov
xchg
push
or
jmp
or
insb
in
cmp
repnz
push
fcomps
xchg
sub
std
jecxz
jge
insl
add
dec
xor
cli
insb
ret
pop
scas
inc
and
stos
mov
cmp
insb
mov
cmpsl
push
movsb
in
test
es
xor
dec
cmp
pop
jae
push
mov
bound
mov
mov
js
xor
gs
inc
insb
dec
mov
or
mov
std
mov
sbb
xor
cld
sbb
ficoms
fistps
ljmp
adc
std
cltd
popf
bound
test
sbb
in
push
fs
out
decb
lods
inc
sbb
xor
lods
sti
ja
fdivp
adc
pop
lahf
xor
insl
std
negb
ret
sbb
sub
jno
lret
clc
adc
sbb
xor
sti
add
out
mov
push
push
sub
loop
or
sbb
ljmp
and
iret
jp
push
aas
into
pop
mov
sti
adc
or
insb
mov
sbbl
insl
pop
daa
outsl
popl
pop
mov
loop
rclb
and
jg
cli
and
lock
and
add
arpl
and
jmp
jnp
scas
sbb
lret
loop
lret
iret
push
push
in
mov
int3
movsb
dec
and
and
push
cltd
adc
cltd
test
and
clc
call
push
lods
fistpll
lods
xor
nop
push
lods
dec
std
jne
or
enter
outsb
mov
fnstenv
or
push
adc
in
push
push
or
sbb
cmp
outsl
push
xor
pop
pop
push
sub
push
cwtl
adc
popl
mov
cmpsb
jnp
inc
jecxz
imul
int
or
dec
ds
mov
fisubs
jo
out
mov
adc
mov
sub
adcb
fsts
xlat
repz
test
mov
fimull
mov
or
sub
stos
addl
mov
dec
lret
push
imul
mov
enter
cmp
lret
xchg
jno
add
sub
adcb
mov
cmp
jne
icebp
negl
insl
fs
mov
fidivs
testl
dec
loopne
mov
cs
jp
int
pop
xor
rcll
pop
push
and
dec
dec
std
shll
inc
pop
cs
inc
jb
jg
adc
and
int
push
sti
cmp
inc
fnstcw
insl
popf
xor
cltd
sub
mov
push
push
ljmp
mov
lcall
and
jo
cmp
jge
pop
lods
xor
fiaddl
std
gs
push
add
sahf
cld
or
aad
sbb
dec
mov
dec
outsl
inc
mov
int
push
jmp
fstps
lret
loop
std
xchg
inc
jae
out
add
or
mov
gs
ret
les
shrl
adc
loop
fstps
rcl
ficoml
pop
fdivl
shl
mov
stos
sub
mov
cmp
test
sub
sbb
dec
in
ss
inc
mov
testl
enter
filds
sbb
mov
cmp
fdiv
mov
lock
scas
push
aas
jle
or
in
pop
fimuls
adc
push
push
push
mov
sbb
loope
inc
testb
cmpsl
push
movsb
cmp
jno
stos
xchg
jbe
test
jne
fldt
test
sbbb
inc
out
inc
cld
dec
mov
insb
push
pop
sub
mov
in
sti
pop
notb
shrb
ret
or
jo
test
clc
push
das
data16
out
test
push
into
hlt
push
sub
inc
lods
inc
decl
lods
stos
sub
not
sub
mov
mov
sbb
fwait
sahf
or
js
inc
pop
insb
jge
push
scas
lea
sub
sbb
and
jl
into
test
jmp
nop
push
jne
cmc
push
sub
or
into
int3
and
sub
stc
jno
xor
cld
arpl
cli
xchg
orb
sub
clc
xchg
and
in
nop
lret
scas
rcl
push
adc
fcoms
fwait
jl
mov
add
add
pusha
or
mov
sub
jle
fistpll
iret
cmp
clc
out
pop
push
add
cmp
cmp
enter
pop
add
lea
negl
cmp
sbb
pop
lock
out
jmp
add
and
movsb
fsubrs
addr16
add
test
and
out
sbb
popf
mov
pop
cli
stos
rcl
adc
aad
addl
xor
or
test
aas
ficompl
or
lahf
test
cmpsb
loop
sbb
mov
ja
sub
cmp
jne
data16
addr16
pop
leave
int
cmp
sub
xchg
aaa
loope
push
mov
pop
push
jno
ror
cli
sbb
nop
mov
mov
xchg
mov
xchg
jge
loope
imul
pop
rorb
enter
xor
lret
int3
out
push
or
das
pusha
fldcw
jno
lret
je
popl
xchg
sub
jo
shlb
inc
test
mov
and
enter
mov
jbe
enter
sti
xchg
leave
jo
mov
lds
testb
jb
test
inc
sahf
hlt
mov
jl
fisubrs
repz
and
cld
inc
fidivs
adc
xchg
dec
lock
xor
repnz
out
inc
fiadds
sub
xchg
mov
test
mov
mov
xchg
test
stos
cmp
js
cmpb
add
lret
sbb
je
xor
shrl
cli
fsubrs
fcomps
insb
in
mov
ror
and
xor
dec
pop
mov
fadd
ret
shll
or
bound
call
push
lcall
lcall
rcrb
cli
sahf
scas
jecxz
xchg
sub
jmp
mov
iret
movsl
sbb
ss
cli
mov
sbb
lock
mov
cmpsb
mov
xchg
inc
adc
in
xchg
aam
imulb
cmp
popa
shrl
adc
sahf
testb
lea
dec
sahf
add
push
arpl
test
je
mov
pop
xor
mov
adc
stos
and
lcall
jge
fnsave
ja
mov
cld
and
mov
shrb
loope
and
shrb
lods
movsb
outsl
ja
pop
icebp
insl
addl
call
pop
test
out
push
push
mov
fxch
inc
jbe
jns
pop
dec
pop
cld
mov
sub
and
sub
in
inc
sbb
out
mov
jne
cmp
dec
maxps
ret
push
scas
push
loope
xchg
movsl
xchg
std
incl
lods
dec
push
mov
ljmp
insl
test
sbb
pusha
repz
pop
adc
out
mov
mov
test
push
sbb
repnz
jmp
and
push
popf
dec
loope
sbb
pop
std
bound
sbb
cmp
mov
faddp
dec
cmp
pop
add
out
stos
es
out
push
dec
dec
js,pt
lds
cmp
add
rcrl
es
in
jns
jp
call
jmp
xchg
sub
jno
mov
jo
jle
dec
mov
or
inc
sub
mov
jecxz
mov
mov
sbb
push
lea
cmc
ror
cmpsb
xor
pop
adc
jns
push
dec
cmp
movsl
mov
outsb
xorl
lods
jb
ja
loop
or
in
jmp
out
repz
add
jecxz
and
mov
jmp
shl
cmp
lret
insb
mov
adc
jns
pop
insl
xor
pop
shl
pop
mov
sub
push
mov
cmpl
or
or
sbb
fmuls
psubd
test
sub
leave
push
or
mov
sub
adcl
cmp
add
in
push
sub
rcrb
dec
cltd
shrl
inc
in
scas
cs
pop
mulb
into
and
add
push
dec
adcb
xchg
lock
movsb
adcb
mov
fisubs
push
mov
ret
sub
push
pop
or
subb
js
adc
stc
imul
ss
pop
notb
lcall
stos
ss
jg
or
enter
out
iret
jnp
xchg
hlt
bound
inc
popa
dec
addr16
rorl
pop
lcall
call
mov
add
mov
fs
nop
push
lcall
lcall
cmp
bound
sub
je
dec
fcmovnbe
jno
in
pop
sub
jne
xor
shl
aaa
iret
leave
mov
daa
sbb
outsb
sbb
stc
je
sub
pop
push
ja
sub
out
push
data16
repnz
mov
sarb
imul
mov
movsl
push
lret
testb
arpl
dec
xchg
das
test
seta
cmp
nop
inc
inc
jo
stc
jo
shlb
iret
mov
mov
clc
in
sub
pusha
xlat
cmp
negl
sub
fbld
ret
lods
lret
mov
or
sbb
xor
push
xor
mov
jge
jb
aam
rcrb
adc
mov
pop
jb
xor
mov
adc
push
pop
sahf
dec
int
push
sarb
fistl
pop
icebp
lahf
xor
mull
popa
sahf
add
push
sub
loopne
nop
pushf
gs
mov
negb
add
jnp
jno
xchg
cmp
and
leave
xchg
push
pop
fiadds
test
cmp
or
jg
vunpckhpd
in
pusha
mov
jb
cmpsl
sub
fdivp
outsl
mov
push
sarl
loop
xor
sbb
stos
inc
adc
push
jmp
cli
leave
into
addr16
out
aaa
mov
mov
cmp
ljmp
mov
mov
rolb
in
cmp
aaa
push
xor
mov
jae
scas
or
jge
or
adc
sti
popf
jg
push
stos
aas
or
out
sub
mov
push
les
pop
pop
mov
jns
icebp
adc
lods
addl
xchg
cmp
push
and
inc
add
call
in
sub
lcall
pop
insb
xor
mov
clc
or
push
test
lock
rclb
ds
dec
inc
dec
mov
jg
jb
jbe
xor
data16
jo
push
test
pop
insb
add
ret
lods
icebp
jo
and
lea
inc
icebp
int3
sub
movsl
cmp
xchg
and
dec
repnz
sub
push
cmpl
and
xorb
lds
dec
fs
rorl
cmp
jg
add
mov
xchg
mov
lods
fistps
push
add
mov
push
add
fstpl
addr16
ja
pushf
ret
outsb
sbb
int
pop
cmp
cli
mov
sub
shlb
in
xor
das
test
push
jo
adc
dec
push
mov
push
int
pop
je
lods
aam
pop
aam
push
daa
inc
sub
movsl
in
mov
clc
shr
les
push
fnstsw
push
cmp
push
add
outsb
add
stc
ficoml
jnp
repz
repz
and
push
enter
cld
movl
xchg
cmc
xchg
roll
or
sub
mov
sbb
sbb
outsb
sub
pop
sarb
sahf
cmp
repz
into
cmp
into
movsl
ffree
and
jmp
jns
xor
repz
xchg
jp
push
push
cmpsl
orl
lods
add
ret
or
add
out
adc
mov
mov
test
enter
mov
pop
sub
xor
inc
cmp
add
fildl
cmpsl
stc
push
jns
je
sub
cmpl
scas
jo
xor
add
jbe
pop
sbb
pushf
lock
inc
mov
inc
and
adc
ret
xor
push
add
cmovbe
enter
mov
pop
scas
push
xchg
xor
pop
sarb
push
jo
sti
inc
or
sbb
test
xor
mov
subb
rorb
and
stos
push
mov
scas
sub
dec
pop
pop
xchg
or
xchg
mov
lahf
pcmpgtd
dec
push
insl
sub
inc
jecxz
push
dec
fildl
fcomi
icebp
cs
movsl
add
sbb
sub
divb
pushf
scas
lods
shll
xorb
inc
aas
inc
movsl
push
inc
mov
mov
cmovs
jae
bound
loop
inc
aas
lcall
xchg
cs
into
or
lods
lods
inc
loopne
pushf
jp
lods
xchg
push
cwtl
adc
std
test
sub
popf
imul
mov
pop
xchg
mov
mov
cmp
sbbl
mov
mov
test
xchg
jo
out
les
inc
scas
jle
cmp
lahf
xor
xchg
inc
out
mov
aas
jmp
shrl
sub
outsb
scas
stos
icebp
mov
sbb
push
xchg
ds
and
repnz
sti
jg
fsubrs
pop
cli
leave
add
pusha
add
lock
adc
jp
push
lahf
daa
rcl
js
mov
pop
xor
test
mov
fwait
cs
sub
popa
pop
clc
mov
add
pusha
mov
in
outsb
push
ret
ror
inc
aaa
cmc
mov
xchg
mov
mov
daa
cs
aad
and
cmp
push
montmul
cmpsb
test
xchg
xchg
insb
adc
dec
leave
movsl
mov
and
or
shll
cmpsb
jmp
mov
jg
sti
rol
cmpsb
mov
lds
push
xchg
cld
sbb
popf
dec
xor
test
inc
push
cmpsb
push
fs
and
sub
test
mov
outsb
clc
je
cmc
sbb
rolb
loop
jp
xcrypt-ofb
cmpsl
outsl
inc
push
ret
sbb
fsubs
addb
data16
movsl
or
add
pop
loop
mull
push
pop
popf
lods
mov
scas
xor
adc
rol
je
sub
pop
out
mov
jle
pusha
ja
loop
cmp
adc
mov
stc
imul
test
shll
adc
lcall
fs
xchg
test
pusha
int3
jo
sbbb
adc
std
enter
out
pop
xchg
adc
add
jl
cmp
add
fisubs
fwait
jbe
jnp
mov
xor
jno
jmp
and
int
lds
mov
ds
aam
sub
xorl
cmpsl
mov
inc
adc
jno
sbb
mov
pop
addr16
popf
xor
xor
cmp
loope
cmp
or
dec
arpl
loopne
adc
push
cld
fwait
pop
dec
cmpsb
icebp
aam
test
inc
jbe
or
sbb
imul
mov
sbbl
pop
lea
in
sbb
ja
movb
and
jne
hlt
imul
mov
shr
xor
jp
lock
xchg
push
mov
cmpsb
mov
sbb
mov
inc
or
je
and
sar
push
cli
leave
add
sub
or
int
xor
adc
mov
add
aam
cmp
dec
and
cvtps2pd
fildll
test
jg
aaa
outsl
sbb
jo
dec
fstp
inc
dec
dec
cmpl
mov
cmp
popf
popf
sub
mov
test
std
insb
in
xor
pop
int3
fists
push
out
loop
inc
jl
imul
sbb
cmpsb
sbb
das
inc
cs
or
or
pop
cmp
std
xor
xchg
scas
repnz
xchg
icebp
jne
loopne
xchg
mov
rol
sbb
test
arpl
mov
scas
sti
notb
iret
jb
repz
mov
xor
pop
adc
xchg
adc
test
add
lock
stos
jbe
mov
mov
adc
movsb
daa
sub
pop
cli
loop
in
xor
jns
push
xor
xchg
mov
repz
dec
adc
ret
pop
loopne
pop
les
xor
sub
xchg
add
push
mov
sbb
cwtl
cmp
xchg
jle
lcall
test
xchg
jp
cs
sbb
ret
or
dec
xchg
lock
sbb
mov
addr16
dec
cwtl
mov
mov
add
xor
test
ss
sbb
cli
scas
jo
call
fnsave
xchg
imul
lcall
cwtl
test
das
mov
dec
dec
mov
lods
cs
pop
sbb
push
sbb
push
pop
and
call
aas
add
gs
icebp
sub
popa
jo
ss
orl
mov
in
in
cltd
sbb
cli
or
outsb
add
sbb
mov
push
jg
mov
out
cmc
dec
sub
push
inc
sbb
adc
outsl
inc
add
leave
jg
xchg
mov
inc
fs
mov
sbb
leave
loope
popl
lcall
push
adc
js
dec
cmp
outsl
fimuls
stos
cmp
adc
pop
decl
mov
push
loope
dec
out
out
ss
in
aad
mov
push
loop
jecxz
movsl
repnz
out
push
lahf
mov
adc
movsl
lea
jbe
movsl
mov
lret
call
adc
lret
hlt
in
cmpsb
xchg
jno
cmp
in
ja
or
cmovge
add
in
push
mov
dec
mov
add
mov
jl
mov
sub
xor
sub
das
leave
pop
sbb
pusha
andb
xor
int
ret
lret
lods
mov
push
rcll
in
rcll
enter
dec
pop
or
xchg
push
dec
pop
inc
out
test
add
mov
fdiv
push
add
sbb
mov
fisubrl
arpl
int3
adc
jp
push
and
mov
adcb
sbbl
xchg
push
xor
ret
out
movsb
mov
incb
jns
pop
ljmp
jecxz
xchg
pop
popf
jg
xor
negb
es
mov
push
xorb
out
mov
in
mov
shl
int3
mov
jns
inc
subl
movsl
movsb
jge
xchg
setp
fidivl
cmp
mov
jno
jle
dec
mov
dec
push
push
test
jo
cmp
jns
mov
cmp
lcall
pop
add
push
xor
ja
jl
lea
insb
mov
cltd
jg
push
add
sbb
lahf
fsubr
imul
mov
inc
cmp
add
fstpl
cmp
loope
rcr
push
mov
xchg
stc
sub
or
pop
mov
inc
xor
dec
pop
sub
ret
in
movsb
xchg
shl
popf
jl
inc
scas
cmp
aas
loop
inc
push
imul
or
clc
push
cltd
ficoml
rcr
jb
cmp
mov
sub
jge
gs
int
data16
bound
ret
ljmp
sbb
pop
add
dec
int3
cmp
jbe
std
xchg
dec
aaa
xchg
psubsw
rorl
out
pop
sbb
loop
xor
mull
sbb
mov
repz
setb
mov
dec
pop
shlb
mov
enter
xor
pushf
in
jns
fcmove
pusha
mov
push
ja
bound
jne
inc
scas
mov
shlb
daa
int
inc
shrl
movsb
scas
popf
sbb
sub
mov
mov
pop
xchg
popa
shrl
lods
inc
dec
int
stos
leave
aad
fcmovb
arpl
push
into
loop
mov
mov
enter
xor
push
mov
xor
mov
xchg
xchg
imul
dec
negb
dec
jg
ljmp
movsb
stos
mov
fidivs
mov
sub
xchg
pop
cld
or
jmp
aad
movsl
push
insb
out
push
push
rorb
xor
push
out
push
pop
sahf
push
xchg
mov
rcr
int3
mov
sbb
push
sbb
in
cli
fsubrl
lods
add
mov
insb
test
add
pop
jmp
and
jb
ret
pusha
jo
pop
or
cmpsb
xor
or
int
jns
xchg
out
pop
aas
outsl
mov
mov
add
les
xchg
push
out
bound
adc
mov
test
add
andl
cmpsl
icebp
es
jle
inc
pushf
movsl
jp
xor
push
sbb
inc
jmp
dec
xchg
mov
pushf
insb
add
mov
rolb
pop
addr16
fnstsw
leave
fldz
pusha
mov
movsl
jmp
or
xchg
loope
movsb
push
rclb
aas
adc
jge
out
inc
cltd
xchg
jp
push
in
sbb
je,pt
out
ficoml
leave
roll
out
mov
dec
dec
jle
jno
cmp
add
stos
mov
rcll
mov
loope
ficoml
sarl
push
sub
inc
sahf
mov
insb
cltd
inc
inc
ret
push
inc
faddl
push
mov
leave
dec
sub
mov
ss
pop
aas
and
or
xchg
jbe
outsb
das
ret
xchg
jb
dec
rcl
mov
add
xor
dec
xchg
fs
int3
movsb
ror
inc
jbe
clc
push
mov
adc
int3
das
jle
xor
loope
xchg
sub
add
or
pop
int
imul
adcb
sbb
ljmp
mov
in
inc
inc
cwtl
icebp
imul
cld
mov
jmp
fsubs
inc
fs
adc
rorl
adc
stc
imul
mov
push
mov
jne
int3
es
sbb
xchg
xor
outsb
inc
dec
jno
lahf
push
sbb
ret
add
inc
sahf
fisubrs
and
mov
cmp
cltd
lcall
inc
gs
rcrb
shrl
push
in
cmp
xor
sbb
push
inc
in
jecxz
push
sbb
lahf
idivl
or
mov
sahf
sbb
out
or
ret
pusha
hlt
xchg
cmp
sbb
xor
or
inc
fwait
cwtl
pop
adc
xchg
scas
xor
fdivl
lock
scas
push
mov
test
mov
push
jo
outsb
mov
pop
test
cltd
sti
mov
out
cld
nop
out
test
jae
mov
jg
adc
hlt
ret
sub
imul
addr16
xchg
or
gs
jae
or
pop
ljmp
push
lahf
ffree
pop
push
andl
xlat
repz
mov
push
sarl
stc
sbb
cld
cli
sbb
adc
or
repnz
ret
cltd
sub
jl
sub
dec
cmp
dec
pop
movsl
sbb
and
cwtl
stos
pop
std
hlt
inc
imulb
xchg
lods
mov
dec
pop
jle
sbb
out
xchg
fmul
or
gs
push
fadds
mov
pop
das
dec
iret
pop
scas
add
jg
jb
stc
scas
jmp
ss
and
dec
mov
stc
lcall
or
sbb
xor
mov
ljmp
mov
mov
loopne
inc
out
out
inc
pop
or
mov
sub
adc
loop
jns
fcoms
cmp
inc
stc
mov
aad
and
movsb
int3
dec
sbb
clc
lods
aaa
xchg
js
jae
pop
mov
cmp
negl
cli
pop
mov
inc
or
mov
outsb
pop
fsubrp
mov
mov
inc
mov
pop
xchg
in
mov
cmp
inc
test
scas
mov
test
push
mov
lcall
sbb
js
pop
jp
dec
sub
lret
add
je
add
cltd
jb
in
xor
js
dec
jge
mov
repz
cmp
adc
nop
scas
call
imul
fistpl
bound
fwait
mov
subl
popf
out
xchg
xor
push
negb
inc
or
cltd
xor
and
push
push
ds
in
jns
adcb
cli
rcr
mov
mov
push
add
cwtl
lods
lret
mov
arpl
xor
stos
inc
mov
repnz
push
pop
jle
aam
outsl
inc
cmp
pop
xor
add
mov
sti
popa
sub
lcall
jo
outsl
add
lods
paddw
sbb
je
shll
add
xchg
pop
xor
out
cli
mov
mov
dec
or
aam
inc
or
cmpl
or
jp
cli
imul
addl
ror
test
jecxz
lds
stc
lret
fcoms
test
push
rcr
insl
loopne
je
inc
fdivs
ds
scas
cmpsb
push
jo
inc
sbb
push
mov
dec
add
xchg
in
pushf
scas
push
cmp
pop
xchg
jns
rcrl
push
sbb
xor
pop
sbb
mov
subb
imul
cmp
test
ret
adc
adc
loopne
jge
les
movsb
addr16
mov
xchg
das
jno
movsl
adc
int
imul
pop
sub
xchg
sub
cwtl
jns
mov
and
popa
xchg
pusha
cmp
xchg
imul
pop
icebp
mov
popf
out
int
divl
fcomi
sbb
sub
and
pop
or
mov
in
ljmp
iret
mov
add
push
cmpsb
mov
jb
cmp
sbb
pop
inc
imul
ds
and
cmpsl
jne
mov
jge
mov
jnp
mov
dec
fcomps
inc
movsb
sahf
lods
and
sub
sub
sbb
pop
mov
sbb
cmp
icebp
xchg
aam
fwait
sub
dec
ss
js
sub
fwait
fs
repz
jg
pop
inc
aam
mov
cmpsl
add
adc
sub
adc
in
jg
lea
or
call
xor
ljmp
push
nop
out
push
mov
iret
dec
sbb
and
repz
ss
sti
inc
cmp
cmp
test
ret
scas
mov
and
jno
inc
lret
in
int
sbb
jp
cmp
fcomps
test
dec
ds
dec
repz
jp
mov
lret
js
cli
lods
xor
daa
push
jge
inc
lahf
in
add
aaa
and
cmc
cmpsb
das
mov
lods
pop
jb
icebp
xchg
mov
mov
mov
aam
or
int
mov
inc
push
or
xchg
lcall
sbb
push
adc
cmc
dec
add
xor
insb
jl
push
fidivrs
add
daa
cwtl
pop
stos
xchg
clc
inc
add
movsb
shrb
cmp
enter
pop
loope
adc
sub
psubq
lods
loope
test
cmp
pop
in
cmc
mov
scas
loopne
lahf
cmp
stos
sub
pop
iret
or
fcmove
in
sti
push
out
sub
ljmp
or
test
push
je
pop
mov
arpl
pop
mov
cltd
sbb
call
adc
sub
mov
or
jg
out
pop
sub
mov
adc
mov
das
dec
and
lods
pusha
fs
sbb
jp
and
lahf
fisubrl
fdivrs
test
mov
push
jne
mov
lcall
mov
lods
sbb
push
lock
in
inc
inc
mov
cwtl
xor
lock
lret
pop
push
push
clc
dec
out
mov
mov
and
or
push
lahf
push
sub
mov
je
jle
mov
aad
outsl
cld
push
aas
pop
bound
mov
cmp
mov
jno
pop
lahf
cmp
add
add
test
adc
jno
in
dec
loop
add
mov
and
push
dec
loop
hlt
test
cmp
movsb
cmp
enter
dec
in
stos
in
shrb
outsl
int
popa
push
and
scas
fwait
iret
or
cmp
enter
sbb
xor
lret
lret
mov
dec
dec
inc
outsl
mov
ret
pop
lea
sarl
lds
mov
inc
sahf
loopne
mov
hlt
test
insb
add
mov
push
inc
jmp
mov
int3
add
popa
ja
loope
movsb
lret
cld
imul
xchg
aad
push
push
jg
out
mov
testl
mov
pop
pop
cmp
xor
imul
ljmp
jnp
lea
cmp
fs
stos
jmp
mov
mov
lret
dec
pushf
jmp
mov
cmp
push
ds
fidivrs
movsl
fistl
lret
add
in
jo
inc
incl
cmpl
in
xlat
pusha
or
fsub
jns
ja
xchg
test
add
insb
scas
loopne
push
ret
fdivl
aas
cwtl
icebp
sub
stos
cltd
adc
roll
cwtl
test
lret
sarl
lret
xor
or
test
es
imul
mov
mov
fsubrl
rorl
sbbl
cmp
in
shrb
add
fdivl
inc
dec
loope
and
xchg
push
cltd
push
mov
in
jle
pop
fstpl
add
xor
bound
and
lods
std
xchg
loope
es
add
xor
mov
mov
shrb
fldenv
leave
inc
push
mov
subb
movsl
pop
mov
sub
stos
repz
jmp
fmull
jmp
gs
jo
jb
pop
mov
jo
andl
or
popa
add
pop
xor
jecxz
xchg
xor
jno
jge
testl
aad
lods
inc
cs
das
aas
xchg
sub
sub
mov
mov
adc
pop
es
pop
lcall
push
loopne
test
sub
enter
sahf
jmp
in
sub
pop
cmc
pop
ds
jp
adc
fdivl
repz
inc
adc
cltd
cwtl
cs
aaa
into
out
out
push
jmp
cmp
sahf
xor
lea
lods
pop
repz
aam
adc
loopne
xor
jp
mov
insl
loope
dec
filds
add
data16
pop
out
push
push
aaa
into
xchg
jae
movsl
movl
xchg
dec
dec
repz
movsb
das
sarl
mov
pop
inc
inc
sbb
setle
adc
cmc
out
inc
adc
xchg
inc
lea
data16
xchg
xchg
jbe
lahf
or
xchg
xor
rcrl
fidivl
jb
push
test
jo
aam
testl
dec
inc
fidivl
imul
aad
data16
out
repz
popf
sub
lret
bound
mov
sbb
mov
mov
stc
in
das
adc
inc
push
add
adc
ret
pop
cmp
mov
jecxz
mov
xchg
fdivl
or
addr16
add
out
fwait
adc
adc
inc
pusha
sub
xchg
fisttps
cmpsb
or
sbb
xchg
fadds
pop
lds
jae
dec
pop
lcall
xchg
pushf
xor
push
mov
dec
pop
cli
xchg
aad
xchg
or
popf
xor
pop
and
add
xchg
sub
nop
sarb
add
fwait
xor
mov
cmp
lea
cltd
mov
test
cltd
ret
xrelease
mov
fs
out
mov
mov
clc
arpl
mov
jg
stc
lods
xor
inc
imul
sub
jg
test
addr16
inc
movsb
mov
je
stos
xor
dec
in
mov
mov
jns
xor
lods
inc
mov
jge
fwait
scas
cmp
jbe
jb
pop
mov
jle
stos
scas
cmp
lret
ljmp
jnp
mov
jbe
mov
mov
adcb
aaa
pop
mov
jne
mov
jb
std
mov
jl
fnstenv
push
adc
imul
push
out
cmp
mov
mov
movsl
cmp
insb
jb
mov
jp
xchg
stos
mov
in
push
jmp
outsl
jne
ja
mov
lock
push
popf
test
mov
arpl
arpl
xchg
shrb
mov
mov
call
xchg
mov
xchg
cs
bound
les
cmp
outsl
js
sahf
mov
and
mov
mov
outsb
shrb
mov
lock
xchg
sub
outsb
repnz
mov
mov
insl
push
jmp
mov
cmp
mov
data16
shld
lret
mov
rcl
imul
sbbl
pusha
aad
add
jmp
push
aad
cmpsl
add
aam
sub
pop
rcrl
add
insb
scas
and
push
push
shl
or
js
and
and
sub
cmpb
push
xlat
xlat
outsb
add
and
push
ret
divl
les
into
xchg
sub
insl
lea
sbb
call
test
outsb
add
cld
pop
in
lea
xchg
push
test
mov
jnp
ret
notl
mov
inc
test
add
repnz
loope
mov
inc
jmp
push
dec
loop
test
xchg
fisubs
mov
lcall
scas
sub
mov
out
dec
dec
loope
or
fldenv
push
xchg
cli
fidivl
mov
pop
cmc
xchg
and
aam
dec
in
cmc
lret
mov
sub
std
lds
cmp
mov
push
and
mov
fs
inc
cltd
dec
jp
jl
aaa
into
mov
sahf
xor
add
mov
pop
and
adc
fidivs
jp
mov
mov
rcrl
xor
arpl
daa
mov
mov
lret
add
xor
pop
sub
pusha
ja
or
int
adc
ljmp
dec
xor
mov
lcall
pop
in
loope
cmp
cpuid
mov
gs
inc
fcoms
mov
cmpsb
cmp
xor
js
pop
push
xor
xorb
movsl
stos
repnz
into
push
imul
adc
mov
data16
mov
mov
ret
hlt
cli
jecxz
sub
jnp
dec
dec
jg
jle
or
fwait
lahf
adcb
stc
and
sub
loope
dec
fstpt
jl
nop
sahf
push
jmp
ljmp
pop
ds
mov
jmp
mov
scas
inc
shl
xchg
push
sti
lds
aas
add
mov
in
aad
sub
adc
out
xor
js
insb
pop
enter
xchg
sub
mov
cli
xchg
xchg
pop
cltd
lods
dec
loope
fdivl
add
aaa
fisubl
mov
mov
out
test
sbbl
mov
mov
xor
cld
xchg
add
cmp
scas
sarl
aad
push
inc
jno
push
pusha
fdivl
pop
les
rcrl
dec
sub
push
insb
clc
sub
and
xor
into
push
push
js
mov
pop
clc
je
ret
pop
xlat
push
leave
in
mov
pusha
mov
mov
pop
adcb
jge
sub
push
adc
aam
pop
push
sti
xor
jle
iret
imul
mov
inc
es
lahf
bound
and
jns
xchg
jge
sub
add
inc
add
lahf
dec
xor
adc
mov
pop
pop
repnz
push
fs
cmp
pop
sub
aas
and
jb
insl
inc
sbb
aad
js
incl
ss
sub
out
push
fstps
shrl
cld
pop
ljmp
dec
shrl
sbb
mov
dec
in
xchg
into
pop
roll
fisttpl
dec
stos
jo
mov
stc
sub
fstps
pop
daa
mov
lock
jmp
lods
cli
inc
andps
aaa
outsb
pushf
cmpsl
cmp
nop
mov
fimuls
mov
pusha
xor
push
cmp
add
push
out
sbb
imull
ja
adc
xchg
lock
aad
adc
sub
aas
cmc
jecxz
out
sbb
testl
out
popa
push
stos
xor
bound
inc
sti
xchg
clc
xor
mov
or
or
test
mov
xchg
dec
and
push
jno
sub
movsb
ret
jmp
lods
popl
push
xchg
addr16
inc
mov
xor
pop
arpl
adc
das
repnz
jb
pusha
dec
and
in
insb
pop
dec
call
cmpsb
imul
adc
out
js
jle
test
movl
and
pushf
orl
mov
in
bsf
popa
test
mov
jae
scas
clc
cmpsl
ds
push
rcr
push
sbb
push
iret
sub
out
xor
lcall
mov
adc
jle
jne
std
add
and
pop
shlb
inc
inc
and
les
leave
push
aas
lahf
sbb
xchg
mov
xor
xchg
mov
lds
inc
outsb
call
mov
fisubrs
outsl
mov
repz
stos
leave
stos
pop
push
call
and
push
cmpsb
jae
pop
cmp
divl
push
loope
shlb
xchg
mov
jecxz
push
icebp
icebp
mov
sbb
loope
or
ja
pop
aaa
mov
ss
je
orb
pusha
adcb
adc
in
mov
div
and
scas
push
cmpsl
pop
adc
jae
sub
in
dec
inc
jp
cmp
dec
lods
pop
push
cmp
push
andl
pop
movsb
mov
mov
jg
mov
jo
mov
inc
inc
push
shrl
sub
inc
daa
inc
fisubl
stos
dec
cmp
out
lcall
pop
nop
sub
lea
inc
lea
mov
ret
stos
or
xor
xchg
lret
cld
sbb
cmp
add
mov
in
lock
out
sbb
in
fidivrl
in
out
sti
xchg
jmp
cwtl
xchg
mov
sarl
sub
inc
mov
scas
jae
int
out
neg
outsb
push
enter
out
sub
jnp
sbb
mov
bound
dec
js
loop
pop
dec
aam
dec
sbb
mov
adc
jl
addl
rcr
add
jmp
xor
fadd
testb
sbb
mov
clc
ss
mov
lock
fadd
jl
ret
decb
xchg
fistpl
or
std
jns
lds
dec
jecxz
cmp
inc
mov
xor
mov
test
aam
add
push
xchg
pop
inc
cwtl
push
ret
mov
sub
gs
insb
pushfw
xor
nop
sub
push
and
push
and
xor
push
repnz
fdivrs
bound
xlat
cmp
dec
mov
sbb
repz
mov
sti
push
cmp
jns
cmovae
lcall
add
dec
jbe
push
imul
aaa
pop
insb
add
pop
leave
push
push
dec
or
addr16
and
cmpl
movsl
insb
popf
icebp
sbb
popa
pop
mov
xchg
hlt
sbb
jge
stos
pop
je
xor
mov
mov
sti
test
lret
pop
add
sahf
xor
repnz
iret
inc
enter
mov
mov
fxch
loopne
add
icebp
pusha
test
xor
push
jmp
insl
movsb
xor
cmp
sub
mulb
xchg
scas
lods
nop
or
mov
sbb
popf
adc
sbb
scas
mov
and
mov
fcoms
popf
xor
xchg
cwtl
xchg
pop
inc
cltd
mov
lds
orb
xor
xchg
and
mov
repnz
scas
rclb
int
pop
rolb
xchg
in
mov
gs
imul
mov
in
jge
stos
jne
and
cwtl
mov
jne
ss
rorl
mov
xchg
mov
mov
push
push
pop
enter
sbb
pop
sar
xor
push
xor
movsl
adc
xor
leave
adc
addb
jb
popa
push
iret
push
jmp
sub
dec
loopne
sub
pop
push
movsl
mov
rorb
jl
pop
fidivl
hlt
sti
xchg
jns
mov
in
loopne
pop
adc
or
stos
nop
repz
cli
and
movsb
add
lahf
lea
hlt
dec
jbe
push
mov
jae
js
rclb
push
fldenv
xchg
inc
repnz
in
imul
push
add
cmp
ja
cmc
sbb
xchg
mov
add
add
out
rcrb
jbe
test
mov
enter
sub
xor
out
xchg
jge
and
flds
mov
inc
mov
sub
dec
mov
add
loope
dec
or
sub
pop
push
nop
inc
fnsave
ret
cmp
sgdtl
sub
jnp
int3
push
je
add
sbb
mov
mov
sub
test
and
out
or
xor
pop
xor
addr16
add
inc
fisubl
test
add
fistps
sbb
scas
or
dec
push
mov
fidivl
jl
loopne
in
ret
addr16
jns
fmuls
adc
sub
sbb
not
imul
dec
xor
imull
shll
inc
in
adc
mov
or
or
dec
or
andl
aas
jl
jecxz
xchg
xchg
dec
pop
int
dec
pop
test
insb
jge
dec
cmp
push
fs
inc
mov
mov
imul
adcl
into
jo
pop
rcll
arpl
shll
sub
sub
cmp
and
lds
clc
inc
mov
xlat
testb
ja
and
dec
sub
insb
lea
and
mov
pop
add
loope
js
jp
or
scas
cmp
cmp
pushf
aad
daa
push
inc
mov
and
sahf
xorb
sbb
add
xor
dec
xor
mov
fstl
mov
sub
lods
aad
pop
iret
push
or
mov
repz
scas
fwait
mov
cltd
in
add
stc
xchg
sub
mov
inc
sbb
mov
jecxz
in
cmpsl
sbb
adc
add
dec
jl
xchg
dec
push
out
and
inc
mov
imul
jecxz
push
aam
inc
fsubs
mov
jbe
adc
cmp
rcll
fimuls
or
pop
scas
and
or
mov
add
lcall
pop
js
fs
jbe
test
sbb
mov
sti
leave
leave
xchg
pop
jmp
mov
negb
mov
lods
addl
mov
xor
inc
aaa
add
inc
push
add
mov
pop
fs
into
cmp
mov
in
insb
lods
mov
cmp
and
push
jb
push
data16
aad
pop
xchg
sarl
cmpsl
pop
pushf
sbbb
lret
ret
jo
sub
adc
push
cli
adc
arpl
inc
mov
adc
ret
sub
adc
add
sub
or
outsl
popa
movsb
cmp
hlt
sub
dec
shrb
cmp
cmp
xchg
shll
xlat
sbb
lret
stc
add
mov
stc
and
ficompl
or
sbb
ja
jle
push
test
and
orb
xor
inc
call
xchg
adc
xchg
movsl
adc
or
jecxz
jns
in
xor
mov
lock
lret
imul
mov
mov
cmpsb
pop
mov
xor
pushf
repz
lret
add
push
clc
cmp
imul
sub
jne
dec
loopne
and
out
mov
inc
sub
adc
mov
xchg
mov
xor
inc
jb
dec
mov
out
add
mov
in
mov
mov
sti
sahf
pop
lcall
int
pop
lds
outsl
les
in
mov
sub
adc
pop
mov
xchg
ljmp
push
xchg
sub
mov
fwait
mov
jp
push
dec
jne
loop
push
xchg
cmp
outsb
dec
loope
inc
sbb
sarb
stc
lds
or
clc
lcall
add
ret
cwtl
mov
daa
mov
add
imul
xor
enter
cli
and
outsl
mov
fdecstp
cmp
pop
test
sub
push
jo
push
cmp
xor
jae
cmpsb
test
mov
xchg
lret
adc
or
mov
jmp
into
iret
sbb
cmp
rol
dec
jmp
push
add
out
sub
loopne
fwait
jg
shll
leave
mov
adc
aam
or
or
and
shrl
cmpsl
or
leave
cmp
lcall
subb
push
adc
pop
sarb
testb
mov
repnz
ds
push
shrl
aas
jns
in
insb
lds
jbe
xor
stos
pop
push
stos
bound
mov
lahf
dec
xchg
sbbb
bound
pop
cltd
xchg
mov
push
inc
and
cmpsb
arpl
or
int3
xchg
xchg
inc
lock
jb
ljmp
aas
add
pop
imul
lret
inc
xchg
cmpsl
pop
xor
xor
cltd
jne
dec
sbb
xchg
cmpsl
jbe
fldcw
push
pop
stc
into
aaa
into
xor
inc
fcmovnbe
outsb
or
cs
test
lahf
xchg
jbe
js
dec
cmp
test
cmpsb
push
or
sub
fwait
pop
push
adc
push
dec
test
data16
icebp
inc
and
add
or
sbb
cmc
cmc
sbb
andl
or
adc
mov
add
jle
adc
push
cmp
clc
jp
and
xcrypt-ofb
cmpsl
imul
push
ljmp
dec
stos
push
unpcklps
mov
daa
aaa
arpl
in
dec
fists
rolb
pop
test
jo
sub
jbe
test
cltd
ss
sub
pop
pop
fisttps
dec
xor
pop
xor
mov
and
addl
lcall
stc
and
jns
int3
dec
jnp
xor
jno
in
sub
repz
jle
daa
test
loop
jae
push
cmp
fiaddl
push
outsb
cltd
lods
sub
mov
mov
xchg
fxch
sbb
out
lret
fsubrl
test
movsl
sbb
filds
repz
into
fidivrs
and
add
sbb
imul
sbb
mov
mov
and
pop
cltd
xchg
lret
inc
jp
mov
add
xor
and
mov
faddl
ja
mov
mulb
fs
cltd
mov
out
pop
sbb
popf
xchg
adc
adc
movsl
xchg
sti
es
jo
int
out
adc
subb
loopne
sub
xor
popf
xor
jo
adc
shrl
cmp
cmp
inc
adc
std
sub
jmp
ja
aaa
mov
jl
jo
aaa
xchg
insb
xorb
inc
adc
xchg
xchg
push
xchg
loop
add
and
xchg
js
push
jne
ds
lcall
sarl
je
mov
jecxz
cmp
pop
cmpsl
popf
xchg
dec
out
sbb
push
xchg
aad
dec
ljmp
inc
jmp
jecxz
inc
lock
or
loop
mov
outsb
add
out
sub
jno
adc
push
scas
adc
or
push
fimuls
lret
jmp
test
inc
and
dec
jbe
adc
or
mov
std
inc
jae
push
mov
lods
add
sbbb
sbbb
ret
in
cmp
test
faddl
jmp
push
pop
pop
jmp
adc
push
or
pop
shl
dec
call
mov
xor
mov
shl
fidivrl
ljmp
add
push
test
repnz
jbe
jns
and
bound
pop
add
pop
cmpsb
pop
inc
mov
into
cmpl
xchg
mov
adc
cmpsl
pop
mov
mov
je
nop
daa
add
and
mov
sahf
cmp
jbe
stos
dec
je
aam
push
jne
insl
arpl
xchg
pop
data16
cmp
aas
jecxz
jbe
stos
xor
bound
xchg
lea
pop
leave
adc
dec
sub
daa
push
outsl
mov
ja
scas
test
data16
pop
mov
ficoms
mov
add
cmp
mov
hlt
insb
movsb
aad
mov
jne
in
adc
jmp
fists
or
in
lret
ljmp
es
cld
inc
fldenv
jecxz
push
rorb
fidivrl
out
dec
adc
pusha
test
arpl
jmp
jno
mov
clc
push
lret
jmp
pop
stc
addb
in
dec
out
or
aam
add
cmp
xchg
push
movsb
cmp
movsb
inc
mov
sbbb
push
lods
dec
and
decl
aas
push
push
sbb
mov
sub
jge
nop
gs
repnz
dec
mov
dec
shrl
int
movsl
bound
sbb
in
repz
xchg
mov
fistpl
fidivrl
push
cmp
push
and
xor
js
arpl
js
test
dec
ja
je
pop
xchg
in
xor
cmp
add
dec
ljmp
and
cmpsb
push
je
aaa
out
cwtl
mov
push
push
mov
xchg
push
mov
dec
pop
lods
dec
push
call
push
jb
gs
dec
insb
push
arpl
xchg
push
test
test
pop
mov
mov
push
mov
out
mov
loopne
dec
cld
inc
mov
xchg
loope
shl
movsb
cs
or
out
mov
out
push
add
push
loop
lock
adc
or
scas
adc
xor
mov
cmp
adc
push
scas
popa
add
out
addr16
add
or
clc
xor
mov
shrl
fsubrs
stos
mov
or
and
mov
push
xchg
test
sub
subl
mov
jl
or
or
sahf
sbb
cmp
sbb
iret
repnz
mov
jecxz
pop
pushf
or
nop
jno
les
cmpsb
xor
repz
cmp
xchg
add
jne
addr16
sub
or
adc
cs
pushf
xchg
leave
sbb
xor
sbb
pusha
dec
lret
imul
popa
popl
sub
std
push
gs
cmp
jne
std
inc
ss
je
push
lods
xor
jne
sbb
in
addl
sbb
rorb
enter
aad
scas
lods
roll
mov
sbb
xchg
jp
sahf
test
aaa
push
int3
jnp
mov
repz
inc
mov
sub
push
insl
call
dec
and
mov
out
push
xorb
xchg
sbb
add
sub
and
mov
cmpsb
sbb
dec
int
fstl
pushf
inc
imul
mov
dec
call
int
nop
fisttpl
cmpl
push
mov
call
or
and
in
int3
arpl
rorb
xchg
pop
push
data16
scas
inc
fsts
xchg
adc
outsb
sahf
sub
ja
push
sub
jae
xor
lcall
mov
mov
cmovl
lds
repz
inc
test
and
std
and
push
xor
inc
mov
das
cwtl
sbb
ds
dec
ret
ds
mov
push
hlt
nop
jo
les
loop
cmpsb
cmp
je
icebp
sub
cmp
daa
mov
cmc
mov
lods
fidivl
bound
fcoms
dec
push
enter
imul
orb
fidivrl
in
push
jmp
mov
sub
or
adc
lahf
inc
xchg
lea
fisttps
stos
les
aas
mov
aas
popf
xchg
mov
cs
pop
stos
imul
sub
pop
ret
push
adc
mov
cld
inc
inc
test
cld
daa
push
mov
mov
mov
dec
sarl
pop
ret
cmp
lret
scas
test
movlps
xchg
cmp
mov
dec
inc
push
lret
ss
aaa
call
xor
std
dec
popa
xor
int3
lods
pusha
inc
int
jmp
adc
addr16
jmp
inc
and
dec
ficoms
or
xchg
sub
xor
inc
xchg
cli
mov
jl
out
pop
pop
lret
mov
std
fbld
stc
fists
add
loope
arpl
add
loop
mov
cld
stos
leave
mov
out
sbb
cmpsl
dec
stos
lea
imul
cmp
loop
cmpsl
lret
inc
and
pop
cmp
add
dec
sbb
bound
daa
iret
jg
rorb
data16
jecxz,pn
in
insb
jb
pusha
xlat
or
in
popa
clc
pusha
std
sub
xor
cs
rcrl
dec
cmc
insl
out
lock
cmpsb
ja
inc
push
repz
adc
xchg
sbb
cli
cltd
out
xor
xlat
sbb
mov
in
mov
mov
jmp
xchg
sub
or
push
mov
in
sub
mov
mov
ret
xchg
adc
daa
iret
cltd
xchg
in
ja
addr16
inc
mov
inc
int3
popa
lods
lock
gs
push
mov
shl
test
xor
dec
ret
popf
sbb
pop
adc
xchg
sub
ret
out
out
dec
stos
pop
add
inc
lock
mov
fmuls
fmul
aaa
faddl
dec
inc
leave
fldcw
jo
in
jmp
shll
jb
xlat
sub
sahf
adc
add
rorb
inc
inc
aam
jns
push
stos
inc
test
cmpsb
pop
shll
push
sahf
push
mov
fmuls
gs
mov
pop
insl
mov
jb
sti
push
jns
inc
mov
mov
cmp
sahf
xchg
cmp
fsubrl
jnp
add
push
shlb
addb
inc
in
cmp
bound
fwait
add
das
dec
inc
lds
adc
enter
xor
jecxz
iret
inc
ja
sub
and
inc
push
xor
push
xorl
jle
out
jb
xchg
ret
lret
cld
js
ret
pop
fucom
loopne
mov
dec
pop
mov
sub
push
xchg
test
stos
jno
mov
lock
arpl
sbb
and
jb
xlat
push
repnz
std
shrl
out
push
lock
iret
lods
inc
cmp
xchg
xchg
mov
mov
pushl
sarl
lea
sub
negl
and
xchg
push
mov
add
jb
lret
negl
inc
outsl
sub
das
pop
dec
gs
mov
mov
push
in
idivb
fistps
neg
repnz
push
leave
shll
jmp
repz
aad
sahf
mov
cld
sbb
outsl
and
cmp
in
subb
pop
mov
adc
out
xchg
pop
pop
out
pushl
inc
mov
and
jbe
mov
dec
ss
ljmp
inc
mov
lock
les
insl
rcrl
or
outsl
mov
cld
and
or
aas
lcall
scas
xor
adc
add
xor
push
fidivrl
or
push
out
sub
outsb
add
mov
lea
rcr
outsl
add
testb
jns
stos
stos
adc
jg
lret
xor
cld
addr16
popf
cwtl
sbb
and
ljmp
fidivrl
lea
pop
popa
clc
mov
jg
loope
lret
add
jg
push
mov
sahf
aas
test
jno
pusha
and
sub
dec
push
lods
jg
stc
mov
adcb
repnz
jmp
fldl
jbe
mov
and
sub
inc
sbb
ds
clc
push
lods
sub
xor
jnp
push
popf
push
popf
push
jmp
push
mov
mov
fsubl
or
jle,pn
pusha
jmp
pushf
xor
mov
popf
shrl
outsl
pop
loop
mov
scas
xor
fldenv
adc
add
xor
xor
push
dec
out
dec
add
sbb
aaa
insb
pop
pop
mov
lret
loopne
js
add
xorb
out
xchg
pop
sahf
les
and
sub
cmp
flds
mov
jno
push
test
cmpsb
xlat
mov
or
lods
jmp
dec
lea
mov
filds
adc
fbstp
and
into
push
mov
pop
mov
fldt
sub
cs
push
pop
jns
dec
stos
jg
cmp
int3
iret
es
lcall
dec
in
loope
pop
int3
arpl
cmp
inc
push
sbb
pop
stos
imul
mov
mov
fnsave
outsl
and
sub
adc
ficompl
mov
add
and
clc
sbb
repnz
jae
es
ljmp
fnstsw
xchg
jno
shll
jbe
adc
push
inc
fs
mov
push
jbe
in
push
test
sub
sahf
sbb
mulb
push
daa
out
stc
mov
imulb
pop
rcrl
mov
jl
and
cs
sbb
pusha
mov
sarb
and
inc
mov
cltd
sub
and
stos
ss
in
jmp
ss
xor
mov
sub
mov
xchg
hlt
jmp
mov
jns
ljmp
in
pop
push
mov
dec
mov
clc
pop
xchg
dec
push
add
or
dec
sub
and
lea
jmp
dec
jmp
cmc
pop
lret
push
jne
add
scas
iret
sub
enter
xor
mov
aas
and
or
xchg
jle
cmp
arpl
inc
xor
or
xor
lods
push
negl
outsl
fidivrl
dec
jl
xchg
lcall
pop
mov
xor
sub
repz
les
sbb
adc
mov
test
data16
cmc
insb
ljmp
dec
outsl
ret
stos
jae
xchg
inc
adcl
and
sub
sti
jl
xchg
gs
imul
add
call
cmc
jmp
pop
push
mov
add
shl
and
popa
jnp
sarb
cmc
mov
lods
test
mov
add
lea
adc
iret
dec
pop
int3
pop
dec
sbb
jmp
loopne
mov
xor
inc
fcmovbe
subl
or
rclb
sbb
dec
jbe
xchg
pop
sub
jge
inc
or
xor
insl
out
mov
jmp
push
jmp
inc
loopne
adc
out
cwtl
mov
mov
sub
test
and
push
push
lea
jge
popa
in
subb
dec
into
adc
pop
cld
mov
pop
mov
push
fildll
xor
lret
pop
or
mov
subb
loopne
adc
enter
cld
inc
lea
push
out
outsl
push
sbb
jne
add
inc
and
xchg
sub
aad
cwtl
arpl
xchg
push
out
push
sbb
aad
push
inc
xlat
lods
ljmp
dec
insb
out
pop
add
jb
imul
je
aaa
into
add
call
es
gs
jnp
leave
or
lods
inc
and
mov
xchg
int
jle
jnp
pop
lock
jnp
loopne
fcmovbe
add
adc
xor
add
outsl
xor
xchg
sub
push
testb
test
mov
aad
lock
jle
xor
popa
std
je
xor
hlt
stos
xchg
push
vcomiss
les
and
sbb
lods
sbb
push
add
dec
loopne
jp
adcl
pop
jnp
mull
data16
jecxz
cmp
dec
pop
add
out
adc
xchg
cli
test
cmp
rclb
pop
and
sbb
mov
mov
stos
adc
aas
mov
mov
loope
nop
orl
cmp
push
push
inc
or
push
mov
sbb
cs
xchg
inc
mov
loop
call
add
sub
enter
or
mov
lahf
inc
push
jnp
xchg
xchg
call
aas
movsb
mov
loop
cmp
ret
in
les
ror
xchg
fsubl
cltd
mov
addr16
daa
outsl
hlt
hlt
cltd
inc
pop
lahf
out
inc
adc
dec
jl
pop
fstpt
into
xlat
jnp
iret
lret
mov
and
and
push
iret
xchg
add
or
jge
cmpsb
sub
jo
jle
ds
lret
sub
dec
adc
mov
push
mov
scas
mov
xor
xchg
add
cmp
xor
push
pop
aaa
lcall
popf
inc
divb
or
jecxz
ficomps
cmp
inc
fwait
jge
into
mov
mov
and
push
inc
or
mov
xor
pop
cmp
orl
daa
test
push
lds
adc
and
ret
sub
je
pop
jl
adc
pop
rcrb
mov
cld
movsl
loopne
sbb
mov
clc
and
xor
xor
out
jo
aad
adc
and
mov
dec
movsl
pop
fwait
inc
mov
scas
pop
rorb
ret
mov
pop
lcall
test
orl
stos
xor
cltd
sahf
inc
pop
mov
jg
dec
ret
mov
cltd
jp
outsb
pop
sahf
inc
pop
jnp
icebp
dec
orl
lret
sbb
mov
push
dec
lret
mov
js
leave
sbb
cs
fstpt
aaa
push
int
ljmp
ljmp
add
ret
cmpsl
mul
je
rclb
ret
cwtl
sub
dec
shrb
cmpsl
std
xchg
and
movl
icebp
and
cmpsl
xor
xor
mov
ljmp
inc
pop
ja
mov
stos
pop
aam
dec
mov
lahf
ficoms
inc
clc
adc
in
rolb
les
push
add
xlat
add
push
push
jecxz
xchg
inc
add
dec
or
sbb
test
mov
in
fdivl
sbb
outsl
cwtl
adc
add
pop
pop
ret
je
and
cmp
jne
aas
xchg
inc
lds
pop
cld
jmp
jp
pop
stc
mov
inc
loop
test
ds
adc
je
xchg
adc
or
sbb
push
ja
inc
sbb
inc
push
dec
add
scas
sub
pop
and
test
sub
mov
or
dec
inc
out
push
add
pop
adc
bound
nop
imul
and
cmp
ds
mov
add
add
push
popa
clc
pop
mov
mov
stos
sub
add
pushf
pop
dec
xchg
inc
cmpsl
subl
dec
pop
jecxz
fadd
dec
mov
and
cmpsb
fnstsw
stos
push
add
sbb
dec
xchg
inc
sub
xor
adc
dec
mov
jmp
stos
cmpsl
fdivl
mov
or
sub
fstps
and
xchg
test
adc
movsb
push
les
dec
sbb
fwait
inc
mov
jmp
push
jns
sbb
dec
mov
cmp
lcall
addl
in
mov
out
jne
fimuls
aad
loope
push
lahf
add
jg
iret
dec
adc
lds
cmp
mov
sub
pop
daa
out
push
cli
xor
aas
movsb
sti
and
stos
es
sbb
fnstenv
jecxz
adc
push
aam
mov
xlat
jnp
jne
cltd
or
mov
enter
daa
sbb
pop
add
xor
dec
daa
data16
jl
cmc
pop
cmp
xor
mov
jo
mov
jl
push
mov
push
jg
cld
pop
dec
adc
ljmp
and
fildl
add
push
ret
lea
lds
lods
sbb
add
sbb
rorl
mov
and
cmp
mov
add
or
dec
adc
ss
jns
sbb
cmp
lea
cwtl
rcr
push
sti
adc
xor
jnp
inc
pop
push
outsb
push
stc
xor
adc
fdivl
jle
fimuls
mov
add
out
ss
or
pop
lret
ja
movsb
mov
lods
daa
cmpsl
loop
jmp
inc
testb
sti
xchg
into
nop
or
pop
mov
pop
dec
adc
pop
add
jne
jo
scas
pop
arpl
ljmp
out
aaa
xchg
arpl
loop
cli
fs
movsl
out
jmp
xor
cli
xchg
sbb
ljmp
fadd
jle
and
loopne
mov
mov
push
add
cltd
dec
or
pop
std
out
jo
in
clc
nop
inc
cmpsb
push
jns
repz
add
leave
aam
mov
int3
mov
scas
push
add
mov
test
mov
mov
push
and
pop
aad
jg
gs
and
pop
ficoms
les
test
call
rcrb
sbb
xchg
push
sub
push
xor
xor
push
ret
add
pop
repnz
iret
aam
sub
sbb
bound
xchg
inc
cmc
test
scas
mov
int3
mov
cs
xchg
lcall
inc
jg
loop
call
hlt
fwait
aaa
mov
fistpll
scas
lret
sti
mov
xchg
aas
push
rolb
inc
xor
sub
add
das
cmp
push
rcll
addr16
stos
cli
js
ud1
push
jnp
adc
aam
add
pop
mov
sub
cwtl
cmp
ss
mov
test
inc
xchg
pop
xchg
int3
and
pop
test
fistpll
insb
repz
int
sbb
dec
or
ja
mov
rclb
rcrl
pop
decb
push
sub
or
iret
add
xchg
and
pop
cmpsl
ret
aas
movsl
movsb
jmp
pusha
call
dec
xchg
lea
repnz
push
mov
jae
insb
cmc
jmp
jmp
xor
sbb
pop
push
push
adc
mov
mov
test
mov
cli
pusha
leave
dec
jno
dec
sbb
icebp
addr16
xchg
aad
add
insb
shlb
sbb
orb
sub
jle
inc
pop
icebp
imul
xlat
sarl
xchg
push
adc
test
cmp
xchg
dec
or
iret
inc
adc
push
gs
popa
cmp
ja
jnp
mov
fnstsw
pop
inc
out
sti
xchg
mov
nop
mov
jl
bound
shr
and
sbb
push
imul
pop
sub
movsl
xor
xor
andb
aam
out
mov
mov
xor
fadds
push
and
push
push
xchg
cmp
push
jns
and
mov
rolb
mov
orb
dec
adc
fdivrl
in
mov
aas
pop
add
jnp
jl
xchg
insl
test
sub
dec
aad
iret
aad
enter
fistpll
aad
testl
imul
shrb
sub
aad
push
pop
xchg
cld
xchg
enter
mov
mov
dec
daa
push
test
movsl
int
pop
push
jle
inc
sub
arpl
jb
shll
jo
pop
mov
inc
inc
movsl
bswap
dec
sahf
xchg
inc
xchg
pop
les
mov
dec
push
out
xchg
movsb
pop
sbb
add
sarl
jnp
aas
adc
jmp
fcoms
mov
arpl
cmc
pop
add
lods
sub
and
test
ret
fldt
test
sub
loopne
or
cmpb
lods
xor
add
lods
fwait
push
int
mov
jmp
inc
ret
inc
push
pop
adc
scas
into
or
mov
cltd
jnp
testb
stos
xor
push
lea
sbb
inc
sbb
jo
jmp
xlat
push
std
push
add
jp
test
dec
cwtl
stc
and
and
sub
push
gs
mov
mov
add
cli
cmp
push
mov
rcll
pop
rcll
mov
mov
outsb
dec
or
sbb
xchg
push
add
cmp
lea
sub
jne
fdivr
add
pop
enter
sub
xor
sub
rorb
leave
in
mov
jg
in
cltd
mov
xchg
mov
ret
xchg
mov
cmpsl
mov
jns
cli
orl
add
in
dec
mov
std
inc
or
in
push
stc
jge
in
mov
jl
test
or
test
mov
stos
adc
dec
ja
repz
push
jne
mov
adc
lret
inc
lret
mov
push
xchg
xor
loopne
inc
or
into
fiadds
stc
push
xchg
inc
stos
in
push
inc
mov
icebp
jns
sub
fcoml
ds
jge
or
sahf
cli
dec
dec
or
sub
lea
aaa
lcall
push
add
cmpsl
mov
and
jne
sbb
fldcw
ss
xchg
movsb
push
add
stos
fdivrl
mov
call
sub
xchg
cs
mov
push
fsubr
jbe
xchg
cli
inc
fdivrl
movsl
repnz
je
shr
adc
cli
or
lods
xor
lret
xchg
mov
and
cmp
cmpsl
call
neg
jns
in
sub
mov
dec
adc
push
mov
cmpsb
lret
mov
push
movsb
fisubl
jp
dec
adc
outsb
pop
stc
mov
mov
add
fs
test
jecxz
mov
cli
test
in
pop
in
call
xchg
mov
dec
dec
int
movsb
xchg
xchg
insl
out
mov
cltd
cmp
aad
pop
mov
inc
adc
sarb
popf
testb
imul
loop
jbe
fsubl
test
cli
fldln2
jbe
data16
cwtl
pop
ja
sbb
push
sti
popa
fwait
mov
adc
mov
lock
cmp
imulb
jo
jmp
addr16
push
popl
mov
mov
fcmovbe
jl
jb
addb
inc
or
cmc
pop
or
pusha
inc
or
adc
lods
xchg
in
jo
mov
jb
xchg
out
jb
fcompl
xchg
pop
push
cld
fldt
adc
data16
mov
aas
sahf
out
xchg
ljmp
jecxz
xor
xchg
xor
or
push
ret
xchg
fmul
jp
popa
pop
cmc
popa
cmp
lock
lea
repz
lods
inc
dec
pop
sub
push
add
into
lock
jns
mov
sub
lret
jp
adc
inc
arpl
inc
xchg
faddl
inc
dec
orl
fdiv
pop
fisttpl
cmp
xor
scas
scas
xor
popf
pop
add
pop
fstpt
push
scas
xor
cmp
hlt
mov
test
aas
cmp
cltd
inc
sub
lea
cmp
test
cmp
sub
fiaddl
popf
xchg
sub
rorb
mov
push
int
cmp
shll
lods
push
add
int3
mov
stos
mov
hlt
add
ja
sub
loope
aaa
xor
movsb
das
test
pop
sub
lods
mov
mov
mov
call
clc
dec
fildll
inc
inc
fdivrl
push
aad
imul
xchg
add
sbb
mov
and
sahf
mov
lock
inc
push
stc
addr16
lods
loop
dec
add
add
inc
scas
cli
pop
or
push
pop
cli
mov
test
inc
inc
dec
les
mov
cld
inc
fsubrl
inc
jg
mov
push
faddl
leave
or
lcall
lret
xchg
xor
arpl
push
xor
stos
into
repz
pusha
mov
ret
lods
jl
in
sbb
mov
arpl
cmp
xchg
int3
inc
xchg
push
movsl
les
sub
pop
and
test
jle
xchg
movsb
repnz
xchg
cwtl
inc
sub
faddl
add
in
push
push
pop
sarb
pop
lcall
jp
je
sarl
xorl
outsb
xchg
jo
push
scas
leave
lock
mov
mov
push
enter
sub
icebp
lods
add
mov
decl
inc
adc
js
push
jmp
sbb
add
cmpsl
xor
push
sbb
sbb
nop
dec
sti
popa
mov
negl
test
push
push
mov
mov
dec
dec
or
fistps
cmp
xor
aas
loopne
cld
into
clc
and
mov
pop
xchg
xchg
dec
out
push
jbe
push
rcr
xor
jmp
lcall
adc
outsl
sub
sti
jle
aas
arpl
mov
jno
mov
lcall
dec
aas
lahf
inc
jg
cmp
adc
inc
push
stos
aad
add
cmpsb
add
xchg
mov
imul
xor
mov
or
addr16
cmp
fcom
hlt
push
cmp
sub
mov
stc
out
jg
out
dec
push
push
popf
or
enter
nop
push
out
xor
and
cmp
test
jle
dec
mov
arpl
push
cmp
sub
or
icebp
ja
sti
gs
arpl
stos
dec
jne
inc
sub
inc
or
mov
orb
out
sbb
jns
cli
ds
stc
jbe
jg
lock
push
mulb
aad
jmp
add
cmp
popa
shl
pop
aam
push
divl
add
mov
gs
and
je
xchg
and
mov
lods
sub
inc
dec
or
outsb
xchg
xchg
aas
sahf
jne
fsubl
mov
cli
cmc
adc
jns
mov
mov
int3
mov
mov
sahf
inc
pusha
call
lcall
int3
push
and
jb
dec
xchg
int
xor
psubusw
rcll
popl
add
cltd
pop
add
add
add
push
ret
mov
mov
mov
cmp
xchg
xchg
xor
jne
add
pop
insb
out
fiaddl
ljmpw
inc
and
sbb
cmp
xor
sbb
jbe
adc
pop
jne
xchg
xor
inc
repnz
fs
add
dec
fcompl
fwait
xor
cmpsl
imulb
enter
push
add
jnp
leave
push
cmp
mov
bound
mov
arpl
push
lret
jnp
mov
cmp
pop
xchg
and
rcl
xor
and
stos
outsl
push
push
shll
pop
outsl
jmp
into
mov
mov
push
movsb
cs
std
add
jae
pop
pop
popa
idivb
cmpsb
ret
xchg
pop
mov
sub
mov
and
rorb
jno
xchg
push
flds
clc
xor
ja
dec
add
cli
xchg
ss
test
iret
mov
or
lret
movsl
das
mov
mov
mov
stos
push
add
mov
test
loopne
mov
and
cld
test
pop
pop
pop
gs
lea
xchg
cmp
mov
xchg
add
test
adc
push
outsl
lahf
inc
jno
fisttps
test
orb
dec
mov
movsb
pop
mov
push
call
lods
and
cs
inc
xor
add
ja
pop
test
mov
aas
movsb
pop
push
mov
pop
aam
pop
ljmp
add
divb
out
insb
pushw
dec
inc
jle
pusha
call
cmc
sbb
daa
shlb
outsb
cwtl
push
add
mov
xchg
or
fstps
pop
pushf
cmp
movsb
pop
clc
sbb
leave
mov
rol
nop
sub
xor
pushf
les
jns
adc
pop
into
and
out
jbe
ss
push
imul
mov
push
les
pop
jbe
arpl
inc
les
jg
sbb
jno
inc
or
aam
jl
xchg
push
dec
push
add
push
movsb
sub
jns
mov
pop
inc
push
push
dec
mov
lahf
mov
jo
outsb
movsl
repz
fdivrl
add
mov
bound
xor
jbe
pop
lret
push
orl
adcb
inc
push
arpl
mov
cmpl
add
loope
std
adc
inc
or
pop
leave
lods
dec
inc
mov
in
jl
adc
sbb
jo
int
dec
lock
or
int3
mov
dec
adc
movsb
rorb
mov
insl
out
pmaxub
pop
jo
add
mov
lds
sub
in
shrb
popa
jmp
lret
aas
mov
fldl
ret
mov
pop
sub
push
mov
sbb
stos
stos
dec
push
mov
mov
je
addl
aam
gs
cmp
int
addb
scas
pop
pushf
sub
orb
jnp
ja
adc
loop
scas
xor
ret
out
adc
sub
aas
add
adc
or
cwtl
dec
cmpsl
sub
int
sbbb
in
or
faddl
xor
and
mov
testl
in
enter
cld
xchg
fstl
push
fisttps
aam
test
repz
jb
dec
in
lds
test
fwait
push
xor
mov
cmp
daa
inc
adc
pop
xchg
nop
lods
sub
leave
pop
stc
jl
dec
pop
in
push
incl
fnstenv
push
jmp
jle
nop
xchg
inc
mov
bswap
or
pop
mov
sbb
sbb
adc
dec
adcl
xchg
test
dec
scas
inc
cmovbe
dec
popa
les
sbb
decb
mov
sahf
outsl
repz
daa
sarl
xor
ljmp
cmp
xchg
roll
sub
hlt
pop
ljmp
imull
dec
inc
push
xor
sub
sub
divb
dec
es
addb
pop
lock
pop
sahf
cwtl
mov
outsb
es
dec
aaa
js
in
imul
dec
aam
sbb
test
movsb
sbb
jae
push
out
popf
aas
push
repz
mov
jecxz
mov
lods
std
bound
xor
sub
sub
lret
inc
sub
loopne
and
cmc
mov
or
push
pushl
jae
xor
mov
sub
nop
inc
dec
rolb
popa
pop
stc
mov
lds
or
cmp
scas
sub
cmp
fs
adc
mov
outsl
adc
cmp
xchg
pop
sbb
xchg
push
adc
mov
outsb
sub
inc
and
sub
xor
lock
sarb
in
rcll
push
mov
pop
mov
or
cmc
sarl
in
out
sbb
rolb
out
addr16
pusha
notl
jo
stos
mov
les
inc
lds
jno
push
or
or
inc
or
stos
xchg
cmp
out
aas
push
pop
xor
push
or
lds
push
movl
sbb
add
pop
cli
add
adc
pop
sbb
dec
sub
test
ds
xorl
loop
test
lcall
sbb
cmpsl
xchg
push
ret
pop
dec
push
das
aaa
outsl
lds
xor
lahf
inc
push
jl
lods
rcrb
les
fiadds
xchg
push
mov
push
jne
shrb
mov
mull
lcall
pushf
mov
pusha
repnz
cmp
stos
jle
sti
xor
stc
pop
lock
out
xchg
sub
jmp
sub
xor
call
cli
dec
adc
sarl
repz
adc
je
cltd
arpl
pop
add
fisubrl
in
faddl
jne
out
ja
aaa
cwtl
jl
add
cmc
rolb
imul
aaa
cmpsb
arpl
add
cmpb
flds
div
mov
cli
jmp
dec
stos
call
xor
sub
aad
cmp
fwait
cmp
movsb
xor
lret
cmp
aam
daa
repnz
pop
les
lods
fwait
pop
iret
fidivs
jnp
xchg
aaa
outsl
out
int3
inc
adc
and
idivb
cltd
cmp
push
stos
test
mov
shr
mov
fnclex
fwait
pop
lock
add
outsb
ss
cltd
inc
mov
scas
jp
cmpl
repz
lods
repz
call
sti
jmp
dec
inc
pusha
loopne
or
pop
sub
gs
jo
jb
xor
gs
fdivl
cmp
or
test
mov
lahf
mov
mov
mov
repz
mov
fs
cmp
inc
sbb
xlat
sahf
cmp
sbb
cmpsb
sbb
les
mov
into
xchg
sbb
inc
or
dec
adc
cs
stc
es
jne
ss
aas
jo
pop
lret
jnp
mov
test
hlt
fs
ja
js
lods
cli
fnstsw
ljmp
sbb
gs
push
orb
push
dec
sarl
dec
test
fdivs
cwtl
hlt
data16
sub
js
es
sub
repnz
cltd
cmp
xor
lea
jmp
adc
sbb
filds
jp
das
pop
push
lahf
movsb
gs
icebp
pop
inc
popa
sub
jle
jmp
add
push
sbb
in
sbb
inc
fucom
das
lods
aad
dec
or
or
or
and
adcl
shll
or
or
addl
sub
roll
sti
rorb
sub
ja
cltd
mov
dec
prefetch
jns
xchg
jecxz
push
aam
xchg
int
jmp
adc
or
les
imul
dec
andb
sahf
enter
jns
addr16
push
clc
mov
lods
sbb
add
push
dec
adc
add
and
pop
and
out
mov
dec
je
adc
pop
bound
cmp
add
mov
mov
mov
push
mov
loope
mov
enter
pop
cmpsb
xor
mov
adc
pop
cli
insb
pushf
enter
cmp
sub
adcb
xor
dec
mov
mov
popa
cmc
sbb
mov
jl
push
jno
ss
add
scas
fisttps
aad
mov
lods
xor
jbe
or
pushf
inc
or
loop
pop
add
outsb
ret
cmp
lods
ja
mov
push
add
adcl
push
mov
mov
imul
cmp
movsl
sub
das
jns
add
in
jo
push
jb
push
test
stos
xchg
pop
add
mov
fnstcw
adc
push
push
jnp
mov
add
pop
mov
add
adcb
sbb
ljmp
arpl
xchg
out
or
push
js
int3
jnp
aad
sbb
mov
mov
popa
jmp
xor
out
je
and
in
lahf
sbb
int3
jmp
inc
push
sbb
pop
inc
fiadds
fs
inc
mov
mov
lds
sub
cmp
xchg
cmp
lret
sbb
scas
push
sub
mov
mov
clc
pop
fildll
lods
shlb
jl
mov
mov
ljmp
pop
add
cmc
in
inc
adc
ljmp
lea
fs
shlb
sub
fisubs
ss
lahf
ds
push
add
rclb
and
and
mov
iret
rcll
adc
in
leave
pop
cmp
loopne
sub
add
call
les
fs
cltd
rorl
xchg
mov
pop
cs
mov
inc
xor
pop
mov
mov
outsb
in
subl
movsl
xor
and
mov
xor
repnz
adc
adcb
lret
faddl
rolb
into
mov
popf
xchg
inc
sub
sbb
outsb
mov
out
stc
pop
inc
cld
pop
stc
xchg
lcall
cmp
lea
out
mov
mov
mov
dec
push
ret
lcall
lock
dec
push
adc
push
lret
je
adc
in
mov
mov
lret
xorb
dec
sbb
xchg
fwait
lods
xor
add
push
std
add
movsb
fadds
in
cmp
jmp
cmp
sub
sbb
mov
jo
imul
addr16
pop
addr16
mov
jno
push
in
ret
or
fstpl
fldt
xor
aas
pushf
sub
mov
xor
cmpsb
xor
pop
add
sbb
mov
js
shrl
mov
pop
mov
lods
iret
xchg
pop
lret
fimuls
in
adc
sar
fiadds
dec
scas
stos
das
inc
cltd
call
aad
outsl
in
jb
divb
sahf
repz
pop
jne
cmpsl
or
add
mov
xor
ret
cli
push
and
sarb
xchg
inc
fwait
arpl
pushf
dec
ret
test
rclb
mov
xchg
dec
sti
pop
push
sbb
lods
hlt
nop
push
lret
cmp
or
sahf
aaa
adc
in
insl
dec
sbb
faddl
lcall
and
xor
adc
jne
xlat
jge
gs
xchg
stc
clc
push
aaa
jmp
int
fdivp
lcall
flds
shrb
mov
xor
push
rdtsc
sbb
xchg
test
sub
push
sub
cwtl
sbb
mov
rcrl
push
push
jl
pusha
mov
mov
sub
das
mov
xor
cs
pushw
add
push
dec
sti
outsb
mov
fdivs
mov
pop
add
and
insb
adcl
jp
jo
cvtpi2ps
call
cmc
sub
and
data16
arpl
insb
hlt
pushf
inc
jmp
pop
inc
dec
dec
bswap
cwtl
sbb
xlat
pop
imul
add
cmpsb
iret
addr16
ret
lea
outsb
lock
movsb
mulb
out
mov
mov
pop
enter
fstl
into
xchg
insb
jmp
into
xor
andl
lock
sub
pop
mov
in
loopne
cli
testl
scas
das
or
dec
pop
lock
scas
rclb
in
xor
and
je
adc
cmp
leave
cmp
out
arpl
push
xor
inc
adc
xchg
push
add
mov
dec
cmpsb
xor
stc
pop
adcb
aam
enter
je
jg
push
add
cmp
and
shlb
pushf
aaa
fisttps
or
cmpsl
rcrb
jp
sete
in
push
add
cli
js
or
jl
push
push
jl
mov
shll
xor
push
mov
and
add
mov
lea
xor
pop
test
push
cmp
xchg
mov
test
sti
cltd
sbbl
les
test
xchg
adc
push
ja
pop
movsb
adc
lods
xor
cltd
js
loope
lods
push
mov
lahf
sub
add
xor
mov
mov
mov
sbb
into
and
xchg
inc
pop
fucomi
push
inc
and
mov
xor
fs
jne
in
pushf
in
out
int
outsb
stos
mov
pop
add
jge
push
sub
adc
dec
adc
clc
faddl
mov
and
fdivrl
and
cwtl
into
je
and
push
pop
sti
leave
sbb
or
es
jp
in
ss
jle
and
jns
ja
push
test
pop
xchg
sub
fwait
cmp
mov
jmp
cs
mov
push
mov
jo
int3
cmpsl
nop
cmp
sarl
jb
mov
movsl
gs
adc
filds
mov
leave
xchg
cltd
mov
lret
xchg
inc
mov
popf
adcl
adc
pop
cmpsl
adc
daa
sub
andl
lods
mov
pop
jmp
jp
jl
sbb
lahf
mov
negb
mov
cld
imul
ret
mov
ret
test
out
cmp
loop
fbstp
inc
mov
inc
das
addr16
jbe
inc
cmp
loop
jp
lods
testl
movsl
outsl
push
xchg
jb
push
cmp
sub
rclb
int
lgs
sub
test
adc
mov
inc
dec
mov
lahf
negl
popf
test
xor
cli
and
or
and
jecxz
inc
adc
jnp,pt
mov
insb
mov
xchg
add
test
ficompl
rcr
test
mov
lds
shrl
xor
das
iret
xchg
lret
je
cli
inc
lds
push
cli
lds
push
les
fwait
inc
cmp
fiaddl
mov
dec
int3
xor
stos
xlat
adc
mov
lods
jge
aaa
cmpsb
mull
outsb
in
lock
pop
xor
push
int
sub
push
incl
aas
popf
jge
pop
clc
or
push
lcall
dec
stc
pop
xor
and
icebp
shll
adc
mov
imul
loop
mov
mov
push
mov
mov
mov
mov
jle
or
add
pop
popf
aaa
xlat
mov
pop
mov
mov
jg
xchg
mov
insl
loopne
fnsave
xchg
cmp
cmp
mov
mov
mov
js
dec
mov
aas
dec
jg
insl
xor
jo
in
mov
jge
xchg
inc
or
pusha
ljmp
in
cmp
lcall
xchg
mov
cmp
jge
vaddss
and
mov
fistps
adc
fwait
cwtl
xor
arpl
xchg
sub
or
cmp
mov
or
testb
jge
loop
out
xchg
rorb
push
mov
sub
push
stos
fsubrs
je
loopne
std
testb
push
adc
sbbl
xor
shrl
sahf
hlt
push
out
rol
repnz
outsb
add
inc
cltd
mov
lret
callw
push
mov
enter
cmp
cmp
pop
pop
icebp
in
fwait
push
mov
pavgw
and
mov
mov
fistpl
or
shrl
sub
icebp
mov
sbbl
dec
push
movsb
sub
insl
pop
testb
jnp
mov
into
adc
int
xor
push
out
movsl
cmp
jae
out
inc
ret
pop
jae
insl
add
xchg
loope
sbb
sbb
sahf
cmp
pop
icebp
mov
sarb
ficomps
pcmpgtd
push
bound
xchg
sub
or
cmp
mov
or
testl
jl
xchg
iret
or
push
mov
sub
push
test
dec
loopne
cld
testl
sbbb
sbb
shrb
cmp
mov
outsl
push
ja
loope
inc
cwtl
lea
call
sbb
ds
pusha
jo
cmp
cmp
out
ret
pop
pop
icebp
mov
add
psrad
and
xor
push
mov
mov
pop
testb
shrl
sub
adc
std
icebp
mov
sbbb
adc
sub
outsb
pop
cmc
dec
loop
jp
mov
adc
int3
pop
xor
push
in
movsl
cmp
jb
out
inc
ret
pop
jb
outsb
add
lds
lea
out
xchg
sbb
inc
popf
cmp
pusha
lock
sarb
pop
lock
gs
popf
xchg
das
ja
popa
mov
mov
mov
inc
fidivrl
aad
dec
pop
pop
popa
clc
lea
shrl
scas
jg
loopne
out
xchg
into
or
push
xchg
sub
push
cmpsl
fidivl
jb
loope
cli
clc
sub
push
lods
jle
xchg
dec
lahf
xor
shrb
cmp
icebp
push
jmp
lock
jo
jne
loop
inc
xchg
mov
xchg
jmp
push
mov
cmp
popa
outsb
or
jg
pop
pop
repnz
push
popf
adc
and
add
fnstenv
fsubs
or
jle
pop
sti
repnz
dec
adc
add
fsubrs
repz
jecxz
js
lea
lret
adc
cld
cwtl
mov
lret
lret
cmpsb
cmp
mov
ret
hlt
xchg
loop
ret
adc
add
fwait
ss
mov
mov
cmp
mov
ficompl
or
sahf
xchg
sub
divps
xchg
sub
cmp
mov
add
stc
mov
adcb
js
xchg
int3
push
movsl
std
push
mov
les
fidivl
jo
loop
clc
clc
add
dec
push
lods
jl
mov
dec
popf
xor
into
imul
pop
out
inc
jo
jae
jecxz
inc
xchg
mov
xchg
out
inc
sbb
lret
or
aad
call
repz
push
popf
adc
and
arpl
cltd
xor
test
mov
mov
test
pusha
testl
sub
pop
cli
repz
pushf
xor
iret
mov
shll
fsubrs
repnz
in
jbe
lea
leave
adc
cli
xchg
mov
leave
sbb
lret
cmpsl
ds
push
call
outsl
shrb
nop
jecxz
ret
and
adc
lods
inc
cltd
xor
lret
xchg
cmpb
pop
repnz
sahf
xchg
sub
pop
mov
mov
mov
inc
shll
stc
mov
push
stos
adcb
ja
mov
lret
cld
push
mov
lds
fidivl
outsl
dec
jecxz
idiv
add
dec
push
lods
jp
mov
inc
fwait
xor
int3
push
push
jmp
out
aas
jo
jno
in
inc
xchg
mov
xchg
in
inc
pop
mov
mov
cmp
popa
push
aas
cmp
pop
hlt
mov
push
popf
shrd
xor
popa
lcall
fnstenv
pusha
testl
daa
jle
pop
stc
repz
jnp
xor
into
mov
shlb
fsubrs
icebp
dec
in
jne
lea
enter
xchg
mov
enter
dec
jmp
push
call
outsb
mov
jecxz
rcll
and
adc
inc
cwtl
xor
mov
mov
cmp
cmpb
pop
repnz
sahf
xchg
sub
pop
mov
mov
scas
add
push
stc
mov
shrl
test
icebp
mov
lret
sti
dec
mov
lds
fidivl
outsb
dec
jecxz
cmc
clc
daa
shrl
dec
push
lods
jns
mov
inc
lcall
cltd
in
push
jmp
in
jo,pt
jo
in
inc
xchg
mov
xchg
in
inc
push
mov
mov
aaa
lret
push
aas
aaa
mov
jg
pop
pop
hlt
mov
push
popf
push
stos
jnp
and
pusha
cltd
xor
addb
push
mov
adc
testl
clc
repz
jp
xor
mov
into
and
jo
out
dec
in
je
mov
adc
and
sbb
dec
out
sbb
popf
cmp
pop
insb
mov
jecxz
mov
loopne
cwtl
adc
inc
xchg
xor
mov
mov
cmp
cmpl
sub
pop
mov
mov
lods
add
xor
mov
add
cli
xchg
shrl
test
sbb
je
mov
enter
dec
mov
lds
insb
dec
jecxz
hlt
stc
nop
es
pop
scas
js
mov
inc
cltd
xor
ds
jmp
ljmp
jno
outsl
or
jnp
nop
es
cltd
nop
jecxz
inc
adc
ss
bound
aas
xor
push
pop
hlt
xchg
pop
sahf
or
cs
xor
addl
adc
aad
aad
jg
push
div
mov
jns
xor
dec
adc
fwait
das
int3
pop
fidivl
in
dec
in
jae
movsl
aas
imul
push
lods
notl
xor
ds
imul
cmp
pop
push
jno
out
mov
jp
adc
cwtl
pcmpgtb
mov
mov
arpl
cmpb
cmp
pop
repnz
es
pop
mov
mov
stos
add
xor
mov
push
fs
test
aam
push
cmpsb
sbbb
jb
mov
adc
jle
das
dec
lahf
fdivl
push
in
repnz
xchg
and
imul
inc
sbb
inc
xchg
ss
arpl
jmp
mov
pop
jmp
or
jl
mov
lcall
and
data16
xor
pop
cmc
test
or
fldcw
mov
sub
inc
shll
add
adcb
hlt
hlt
mov
ja
xor
js
mov
lret
jb
jmp
in
jno
nop
mov
les
scas
cmc
nop
mov
ret
int
jecxz
aas
adc
ss
pop
push
mov
jnp
push
xchg
sub
add
xchg
and
out
ds
or
cmpl
pop
repz
lea
adc
sub
test
lret
cld
push
gs
sbbl
sbb
jo
mov
les
test
dec
mov
movl
dec
in
lock
xchg
and
sbb
inc
xchg
aaa
into
popa
test
in
sbb
jae
imul
jge
mov
fwait
mov
scas
inc
adc
int
add
xor
pop
testb
jge
xlat
sub
mov
sub
fsubrl
iret
arpl
add
sbbl
and
lahf
cmpsl
inc
adc
cli
xchg
xor
enter
dec
jmp
cli
xchg
mov
ret
repz
into
inc
loope
inc
adc
in
cwtl
xor
pop
mov
jmp
in
mov
fiaddl
lcall
and
in
aas
scas
push
in
test
rcrb
add
mov
push
lods
sub
fnsave
xor
leave
mov
sti
push
gs
sbbl
sbb
outsl
hlt
mov
ret
adc
jp
xor
inc
fsave
dec
out
out
sti
xchg
and
sbb
aas
xchg
aaa
into
les
inc
xchg
in
in
push
mov
pop
out
jae
imul
xchg
sub
scas
inc
shrd
mov
incl
xor
testb
jge
sub
mov
sub
lods
dec
mov
cli
lcall
sbbb
lock
mov
je
aaa
cmpsb
inc
adc
stc
xchg
xor
sbb
je
out
out
outsb
sti
xchg
mov
rcrl
repnz
iret
inc
fildll
in
xchg
xor
pop
fs
in
mov
xchg
sub
pop
mov
xchg
sub
mov
in
aas
lods
add
pop
hlt
lcall
mov
push
stos
sub
xor
mov
std
jg
xlat
outsb
dec
mov
cmc
mov
rcll
repnz
rclb
xor
inc
cltd
fidivs
gs
out
in
cld
xchg
push
mov
sbb
cmp
pop
stos
inc
nop
jecxz
in
adc
leave
pusha
in
je
addr16
xchg
sub
mov
pusha
std
inc
fldcw
sub
mov
pusha
testl
daa
sub
daa
jp
int3
fs
std
fsubrs
push
sbbl
out
testb
inc
adc
jb
mov
leave
les
fidivs
in
out
insb
cld
xchg
sahf
aaa
outsb
add
lock
inc
out
xchg
xor
pop
bound
out
mov
xchg
sub
add
pop
pop
mov
pop
mov
loopw
inc
xlat
stos
add
xchg
push
or
adc
test
ret
fwait
xor
lds
jge
fsubrs
sahf
test
imul
popf
icebp
mov
stos
lock
rcrl
xor
inc
xchg
fbstp
arpl
xchg
ljmp
call
or
rol
pop
lods
inc
mov
push
out
adc
jne
gs
xorb
pop
sahf
xchg
mov
or
iret
pop
sti
inc
fisubrl
in
test
rorl
mov
shlb
popf
xor
js
fisubrs
lret
sti
cltd
fnstenv
sbb
sbb
testl
jo
rclb
xor
ret
jbe
jecxz
call
pushf
xor
sbb
mov
fldt
out
xchg
cs
pusha
pusha
mov
or
mov
xchg
sub
aam
pushf
add
and
loopne
inc
fsubrs
lret
sti
push
push
movsl
test
adc
xlat
outsl
pushf
xor
ret
mov
jnp
fnstenv
pushf
xchg
fwait
out
movsb
cmp
mov
ret
sysenter
lret
inc
xchg
loopne
popa
push
jmp
sbb
mov
pop
cmp
lods
inc
mov
pop
out
adc
jbe
arpl
ljmp
push
or
or
shlb
stc
inc
fldt
jle
test
rorl
add
sub
push
icebp
sahf
xor
cmpsl
inc
mov
std
stc
xchg
fidivl
sbb
sbb
mov
lods
outsb
rol
repz
xor
rclb
inc
loope
jmp
lcall
mov
xchg
sarb
fldcw
xchg
sub
popa
pop
mov
push
in
call
sub
add
dec
mov
mov
fidivs
fldenv
leave
pusha
idiv
push
push
movsl
sbbl
push
dec
movsb
sub
aad
popf
xor
testb
ret
hlt
dec
push
jno
lcall
lcall
lods
in
inc
ret
push
xor
ja
pusha
push
ljmp
jno
in
sbb
push
nop
daa
cmp
scas
inc
mov
pop
out
push
lods
int3
arpl
das
jbe
popa
add
xorb
xchg
sub
mov
pop
cmpsb
daa
mov
pop
clc
inc
fsubrl
jl
test
iret
or
add
sub
push
lock
and
movsl
inc
mov
std
notl
test
jmp
mov
scas
insl
mov
xor
ja
loopne
ljmp
jno
fs
es
cmp
cmp
lods
inc
or
lock
sub
bound
ja
loop
jmp
sub
add
dec
mov
and
imul
std
lock
enter
push
push
movsl
sbbl
sub
shrl
xor
and
inc
push
jb
cwtl
xchg
cltd
jmp
cmp
ds
or
loopne
ret
pop
push
jmp
in
xchg
push
mov
or
aaa
sbb
push
mov
sarl
fistpl
or
int
fisubrs
jmp
xor
or
push
movsl
daa
mov
pop
testl
lods
dec
arpl
jp
or
lcall
sub
push
out
lahf
and
loopne
inc
mov
notb
sbb
sbb
cmp
mov
xor
js
ficoms
pcmpgtw
xchg
xchg
xor
bound
es
cmp
cmp
lods
inc
or
icebp
mov
lret
bound
js
loope
jmp
cs
pop
sahf
add
dec
mov
and
push
jae
fisubl
popa
clc
testl
pop
dec
mov
sahf
xor
and
mov
add
cwtl
xchg
lret
nop
xchg
jmp
cmp
mov
ret
pop
jo
ss
xchg
loope
ret
pop
push
jmp
in
xchg
push
mov
or
aaa
sbb
sub
push
scas
inc
mov
pop
lock
int
fsubrl
jmp
das
adcl
dec
push
mov
shrl
cmc
inc
fsubl
jnp
xchg
into
or
sbb
and
push
in
lahf
ss
jae
loope
aas
mov
push
xchg
pop
xchg
dec
in
nop
pop
imul
imul
loop
inc
fcoml
or
jno,pn
pusha
mov
mov
orl
inc
push
pop
pop
repnz
lret
bound
jns
loopne
jmp
das
xor
pop
sahf
push
mov
xchg
es
fnstenv
les
cmc
dec
adc
dec
lahf
cs
lahf
ss
icebp
dec
jecxz
mov
push
jne
fdivl
xchg
mov
enter
xchg
jmp
sbb
outsb
or
into
cmp
push
in
mov
add
loopne
push
mov
add
shll
fcomps
or
js
pop
sti
in
subl
or
add
shrb
repz
frstor
lock
lret
push
movsl
cld
xchg
sbbb
sbb
mov
loop
cmp
imul
ret
pop
inc
jecxz
xchg
adc
sbb
out
mov
int
pavgw
ficoml
arpl
cwtl
xchg
sub
or
pop
mov
jg
daa
mov
ds
shrb
repz
jp
fidivrs
subl
push
mov
test
daa
mov
xlat
jo
fsubl
ret
arpl
hlt
dec
adc
inc
popf
cs
mov
jecxz
mov
push
jae
fnsave
mov
sti
xchg
xchg
out
cmp
out
les
or
iret
cmp
push
in
mov
add
fbstp
push
mov
add
shll
pop
icebp
pop
cmpsl
iret
data16
js
pop
cli
in
test
xchg
sub
jle
mov
add
shrb
repnz
fisubs
jbe
xchg
leave
push
movsl
cli
xchg
sbbl
sbb
cmp
outsb
dec
loop
cmp
push
outsb
shrb
fnsave
mov
inc
loop
xchg
adc
cmpsb
cmp
mov
in
xchg
into
mov
fsts
or
cwtl
xchg
sub
pop
mov
mov
jle
sub
shrl
xrelease
adc
ja
subb
or
sbbb
imul
inc
frstor
ret
repz
adc
inc
fwait
cs
mov
jecxz
mov
push
jno
fidivs
xchg
mov
les
xchg
xchg
in
cmp
out
les
pop
cmp
cmp
push
out
mov
add
fidivs
push
mov
call
shll
pop
icebp
push
cmpsb
iret
data16
js
pop
stc
in
test
jnp
sub
jge
mov
add
shrb
icebp
inc
fisubs
jne
xchg
enter
xchg
sbbl
sbb
cmp
insl
dec
loop
cmp
add
mov
je
adc
xchg
adc
cmp
gs
aaa
into
mov
jecxz
fcoms
or
cwtl
xchg
sub
pop
mov
mov
jge
sub
shrb
xrelease
int
push
test
jmp
test
cwtl
das
cs
sti
dec
mov
sbbl
imul
inc
fstpl
shll
adc
inc
lcall
cwtl
in
dec
jecxz
mov
push
jo
fidivs
xchg
mov
ret
pusha
cld
xchg
xchg
in
cmp
icebp
cs
mov
daa
ret
mov
jne
hlt
out
add
cmpsl
in
out
pop
mov
mov
dec
mov
xor
mov
pop
out
add
jbe
fwait
push
shl
test
push
cmp
dec
mov
fisubrl
cmc
push
int
test
ds
push
aad
add
mov
ljmp
xchg
aas
or
inc
and
cmpsb
and
outsb
inc
jae
sahf
or
mov
enter
add
xor
andl
bound
pop
gs
data16
enter
dec
pop
stos
add
daa
jmp
or
fstpt
mov
adc
dec
push
add
rorb
jae
push
fwait
pop
in
xor
or
sub
js
add
je
int
call
pusha
adc
lahf
cltd
lods
xchg
idiv
inc
and
leave
sbb
loope
mov
pop
mov
sub
mov
jo
mov
fldt
sbb
iret
cmp
cmp
mov
out
es
movsl
cmp
xor
or
je
jg
mov
xor
xchg
pop
mov
mov
dec
in
cmp
daa
out
cmp
clc
aam
add
and
jbe
popa
stc
inc
or
sti
int3
push
sub
in
insb
sub
int3
repnz
lret
popf
mov
mov
and
mov
jns
addl
es
jmp
fistps
cmp
in
mov
hlt
adc
cmp
and
jno
xlat
mov
mov
in
xchg
fldenv
adc
xchg
flds
xlat
cmp
in
sub
inc
popa
push
jne
loope
and
add
out
sbbl
sahf
test
or
mov
scas
stc
xchg
les
outsb
xchg
leave
and
dec
lock
insb
sbb
mov
enter
decl
and
pop
mov
adc
xchg
lahf
movsb
fstpl
push
call
testl
or
inc
jo
js
adc
mov
or
icebp
pop
stos
xchg
jns
jno
jb
test
jl,pt
sub
jl
xchg
add
jge
sarb
adc
loop
add
cmp
xchg
call
imul
out
xor
data16
xchg
sbbl
push
jl
jns
add
arpl
mov
adc
lcall
inc
fwait
inc
mov
das
inc
inc
dec
add
stos
xchg
mov
movsb
rorb
mov
je
add
fiaddl
lock
push
push
outsb
push
sub
in
fdivrl
sbb
push
sub
ja
mov
aad
int
cmp
into
inc
fnstcw
cmp
jb
test
mov
cmp
push
add
mov
mov
loope
fisubl
out
in
jmp
and
cltd
je
xlat
into
xorl
int
scas
fdivrl
test
mov
mov
out
mov
xchg
bound
jge
jp
sbb
pop
lds
cmp
and
fxch
xor
cmp
int
jle
sbb
repz
xchg
and
andl
jno
cmpsb
mov
pop
push
popa
xchg
clc
push
or
inc
adc
inc
vpandn
popa
loope
and
into
int3
lods
cmp
push
lods
fcoms
cmpsb
sub
pop
add
dec
mov
push
fmuls
out
scas
lods
push
push
adc
mov
mov
pop
add
adc
xor
inc
mov
fwait
data16
cmp
lods
or
shlb
outsb
xchg
jnp
fsubrp
jge
hlt
in
fs
mov
xlat
xchg
out
fbld
sbb
loope
arpl
lds
jge
push
and
js
fbld
add
pop
stc
js
scas
bound
xchg
insl
xor
sbb
clc
mov
outsb
cmp
out
add
sbb
cmp
push
mov
jl
arpl
cmpsl
pop
mov
sub
mov
add
jne
push
negl
jo
or
sbb
add
pop
dec
xchg
jge
fs
and
or
xchg
test
sub
insb
mov
cwtl
imul
and
dec
sti
popf
xchg
insl
mull
add
and
nop
arpl
and
rorb
dec
dec
mov
je
push
stos
mov
adc
je
popa
cli
mov
xor
adc
mov
lods
popa
dec
mov
dec
xlat
sub
insb
sbb
cmpsl
inc
mov
lret
sbb
les
sahf
arpl
cmp
popl
mov
sub
in
dec
or
cmc
or
fincstp
pop
xor
or
push
push
das
js
stos
jb
mov
jnp
movsw
out
adc
in
mov
xchg
daa
or
aam
sub
jecxz
ds
xlat
adc
jecxz
aas
test
jns
push
adc
aaa
out
test
enter
sub
lds
aaa
xchg
cs
out
or
outsb
jp
pop
dec
and
test
gs
movsl
ucomiss
fdiv
jo
getsec
jecxz
push
dec
sar
loope
sub
int
sti
xor
les
js
or
cmp
xchg
mov
jmp
pop
push
int3
fbstp
in
cwtl
aaa
lret
push
addr16
push
jbe
lods
stc
loopne
push
or
hlt
jmp
mov
cmp
test
push
dec
ja
jae
xchg
in
adc
adc
add
cli
arpl
subl
out
dec
test
cmc
fs
dec
fwait
mov
xor
ds
mov
dec
dec
aaa
xchg
stc
or
mov
adcl
mov
loop
rcrb
xchg
pop
pusha
hlt
mov
pop
fwait
cmp
ss
ds
out
leave
cmp
and
in
adc
pop
addr16
ficompl
inc
dec
xchg
js
pop
lods
inc
add
jle
jnp
in
cmpl
int3
adc
inc
sub
pop
cld
call
pop
add
dec
add
jne
push
mov
incb
enter
je
pushl
pop
cmp
outsb
fwait
std
sbb
xlat
push
inc
jecxz
out
jmp
push
ds
mov
mov
dec
ja
adc
aaa
and
fwait
jne
test
repnz
mov
mov
dec
mov
lds
push
arpl
icebp
rcr
lock
dec
pop
push
mov
icebp
jle
mov
push
ret
popa
pop
cmp
stos
loope
or
xor
and
es
jge
dec
mov
ret
jne
fcmovb
dec
sbb
xor
stos
dec
gs
scas
sbb
xchg
enter
lods
xlat
jg
push
add
pop
add
push
jmp
pop
in
je
inc
mov
lcall
gs
sbb
dec
fs
mov
lds
or
ljmp
add
fwait
and
int
pop
mov
pop
in
iret
aad
inc
dec
aas
dec
xchg
sbb
hlt
test
jmp
cmp
and
cmp
or
test
cs
cmpsb
mov
pop
or
xor
push
and
hlt
or
in
jl
xchg
xbegin
call
xor
push
cld
jmp
mov
jl
pop
or
in
push
mov
push
rcll
push
jo
loope
jnp
insb
mov
and
fidivs
push
pop
sahf
mov
inc
scas
mov
pop
es
gs
inc
pushf
xchg
add
ror
push
push
shr
iret
repz
or
sub
in
das
jnp
cmp
push
mov
pop
inc
dec
stc
fldl2t
stos
adc
into
leave
jl
xchg
sti
fistps
inc
scas
mov
mov
jno
lret
mov
outsl
xchg
lret
mov
insl
xchg
int
mov
and
mov
add
jbe
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
jl
je
cli
int
xor
cwtl
adc
jmp
jb
adc
ss
or
cmove
xchg
dec
cld
dec
jne
jecxz
bound
leave
outsl
cltd
lods
xchg
inc
push
notb
sbb
jno
