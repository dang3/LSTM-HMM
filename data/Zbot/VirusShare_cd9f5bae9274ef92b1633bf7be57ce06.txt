call
test
es
mov
pop
iret
lahf
add
push
sarb
pop
mov
and
call
cwtl
stos
inc
loop
and
add
jns
sbb
jne
icebp
andl
pop
xchg
push
push
lret
and
sbb
pop
jl
ljmp
jmp
rcrb
sbb
mov
repnz
mov
push
mov
pop
inc
jle
vphaddubd
sub
fucomip
pmuludq
mov
bound
call
test
popf
sub
aam
xor
xchg
inc
pop
mov
and
loop
mov
call
and
lock
icebp
dec
xchg
repnz
mov
stos
sti
jl
in
lcall
js
push
aad
push
lock
mov
inc
nop
cmpsb
mov
add
rcrb
clc
test
incl
mov
xlat
movsb
cld
push
test
cmpsb
adc
scas
cwtl
cmpsb
pop
mov
test
fildll
pop
call
daa
fucomp
mov
mov
aad
sbb
test
out
push
scas
out
cmp
decl
adc
out
add
stc
insb
push
scas
incb
inc
xchg
fists
ja
mov
es
ljmp
cwtl
jne
movsb
idivl
rcll
loop
pop
sbb
xor
cmp
jmp
push
test
testb
push
dec
pop
inc
pop
je
jae
mov
ret
lea
mov
ljmp
pop
stos
ljmp
adc
jbe
xor
fdivs
ret
popf
sbb
jle
loope
sbb
cmp
pop
adc
or
aad
addl
push
jne
jmp
cmp
stos
adc
xchg
aaa
stos
mov
scas
push
jl
cmp
push
rorl
jmp
and
insl
push
jecxz,pt
leave
lahf
inc
ds
sbb
cwtl
xchg
or
or
jnp
jge
pop
in
dec
inc
int3
mov
shlb
lcall
rorb
mov
or
fdiv
movl
hlt
jl
push
xchg
mov
faddl
xor
sub
ds
ljmp
push
cmpsl
popf
push
addb
psraw
test
or
jb
test
ljmp
call
and
test
mov
cli
repz
sub
fwait
sahf
fwait
adc
inc
push
psubsb
xor
pushl
xor
adc
fisttpll
call
mov
pop
scas
pop
or
add
test
jmp
lcall
je
pop
cmp
cs
roll
or
jp
or
testb
jae
data16
sbb
add
cmp
sbbl
mov
ljmp
push
stos
add
push
ljmp
mov
rcl
push
inc
add
jmp
call
scas
lock
shll
mov
iret
insb
mov
mov
fisubl
inc
int3
pop
je
andl
dec
inc
rcr
mov
inc
jge
into
and
sub
xchg
jne
mov
mov
int3
cs
xchg
aam
inc
popf
bnd
sbbb
jns
push
cmp
decb
push
cmpsb
imul
psubb
jo
cld
inc
and
insb
clc
mov
lcall
mov
xor
dec
xchg
xor
xor
mov
cwtl
cld
mov
ret
es
lcall
lcall
fimull
jecxz
push
movsl
add
and
mov
addr16
or
adc
lcall
stos
int3
and
inc
ficomps
mov
cmp
fs
mov
repz
mov
sub
movsb
pop
add
mov
sub
dec
dec
int3
icebp
test
in
cltd
into
scas
je
in
mov
push
iret
pop
jmp
fldenv
or
lods
cmp
pop
xor
idivl
mov
pop
pop
lods
and
lahf
adc
pop
rol
inc
mov
adc
lods
mov
cmp
fcoms
rclb
mov
incl
lcall
mov
sbb
mov
cmc
cs
sbb
sbb
mov
mov
test
xchg
xor
jle
rcrl
push
or
cmp
jmp
sub
imul
jno
and
call
xor
je
sub
repz
call
mov
movl
fistpll
bound
sbb
mov
pop
testb
incl
cs
lods
fcmove
arpl
lods
jecxz
lock
sbb
push
push
lcall
mov
sub
and
push
iret
mov
aaa
fmul
sbb
inc
scas
ror
jne
imul
aam
orb
imul
inc
popa
dec
xor
in
and
subl
jp
fwait
cs
cmp
sub
pushf
clc
jae
std
stos
int
xlat
in
std
jmp
out
cmp
call
test
scas
xchg
pop
bound
loopne
lds
in
xlat
mov
and
add
push
mov
incl
hlt
push
lods
lahf
in
pop
ficomps
dec
rorl
mov
imul
in
out
inc
jle
mov
stos
jmp
fnstenv
jae
ds
fsubrs
xor
je
ljmp
xchg
xchg
sub
roll
pop
aad
mov
jg
sub
xchg
loopne
out
out
lcall
xor
pop
xchg
xor
dec
mov
in
mov
data16
incl
push
mov
adc
jo
xor
pusha
psllq
scas
call
push
xor
mov
arpl
mov
dec
push
jecxz
pop
sarb
mov
call
arpl
jl
mov
and
jecxz
jbe
mov
mov
sbb
jb
xchg
mov
cmp
shl
adc
mov
call
xchg
mov
mov
nop
orl
leave
lret
paddusb
dec
ljmp
popa
and
jle
aaa
imul
xchg
stos
mov
mov
sti
xor
sti
jge
sub
out
inc
sbb
push
and
jo
mov
call
mov
dec
and
jg
jle
pop
xchg
fistl
add
cltd
xchg
fiaddl
jmp
test
rcl
scas
cmc
and
inc
mov
jl
sti
mov
lcall
cmp
push
mov
pop
cmp
pop
sahf
xorb
testl
test
cmp
fnsave
gs
fnsave
ror
sahf
jno
fmuls
pop
stc
jb
mov
jmp
dec
iret
jge
inc
fbstp
push
pop
test
clc
mov
hlt
add
cs
cmp
insl
stos
clc
jecxz
pop
pop
dec
aam
cmp
incl
outsb
js
hlt
jg
push
mov
fs
sub
mov
les
dec
test
jmp
shlb
jbe
lea
cmp
cwtl
jp
into
jmp
mov
pushl
and
jg
mov
push
repnz
sub
out
nop
and
stos
xchg
cmp
pushl
inc
mov
sub
cmc
outsb
mov
ret
inc
lret
lods
push
call
push
cmp
mov
pop
cmp
cs
add
test
jb
lock
lcall
test
scas
aaa
loop
cli
jns
adcb
sbbb
enter
push
fbld
repnz
adc
cs
outsb
subl
fcos
inc
sti
cs
or
popf
xchg
xor
jg
out
and
and
push
sti
xchg
and
sarl
cmp
xchg
or
and
cli
sbb
pop
in
pop
and
decl
jp
cmp
repnz
push
pop
or
mov
lods
cmp
mov
ljmp
insl
popa
cmp
in
dec
cmp
test
mov
jp
and
sub
std
loopne
mov
call
or
xor
jbe
jno
call
mov
push
int
aaa
ret
out
sbb
cmp
fbstp
scas
mov
ret
pushl
sbb
fistpll
std
pop
test
mov
xchg
pop
xchg
fwait
cmp
rcll
pushl
mov
xor
jmp
push
test
adc
xor
roll
loopne
lcall
mov
push
jge
int3
int
adc
add
mov
add
call
push
das
xor
outsb
pop
test
ja
adc
jb
ja
jmp
cltd
test
popf
cld
mov
add
out
xchg
vpcmpgtb
fldl
icebp
sbb
decl
dec
xchg
scas
aad
sbb
sub
int3
andl
push
mov
shll
pop
sub
push
les
fisttpl
inc
mov
mov
xor
sub
mov
sti
mov
mov
add
loopne
cmp
sub
scas
std
out
fisttps
push
mov
adc
fs
jmp
pushf
out
mov
dec
inc
and
sti
pop
mov
dec
mov
fbstp
mov
dec
inc
mov
fists
adc
dec
arpl
xor
mov
and
mov
sub
lds
neg
imul
in
sbb
xorb
rcrl
mov
add
add
fisttpll
pop
xor
fwait
popf
mov
push
rcrl
jle
fnstcw
sti
dec
cmp
jae
xor
out
jne
and
test
xor
clc
pusha
mov
inc
loopne
ret
push
push
mov
cmp
add
adc
fistpl
andb
jmp
icebp
xchg
jmp
popa
gs
and
in
push
and
sub
inc
fnstcw
xchg
and
lds
stos
or
mov
cmp
and
add
popf
loope
ret
xor
and
adc
adc
mov
stos
xchg
pop
cli
out
setbe
push
rcr
leave
jnp
test
jne
aaa
insl
sub
or
sbb
push
xor
enter
addb
test
or
inc
push
and
movsb
add
push
adcl
mov
fisubs
mov
ret
loopne
rcrb
repz
sbb
push
adc
aad
mov
dec
xor
mov
lcall
push
cmp
adc
cmpsb
push
mov
clc
shrb
sahf
xchg
cmp
call
mov
pop
data16
iret
adc
out
jmp
fnstcw
mov
insb
push
push
aas
inc
xchg
push
in
loop
stos
jecxz
clc
gs
imul
lahf
out
jmp
incl
inc
sub
push
push
cmp
xor
addr16
aad
adc
xchg
and
call
mov
add
int
dec
sub
repz
stos
push
mov
fdecstp
loope
push
fmull
sub
dec
mov
ljmp
pop
pop
push
fldenv
cmp
andb
mov
ss
push
add
test
aaa
sti
add
imul
scas
cmpsl
sub
test
push
sub
fs
mulb
or
stos
sub
mov
push
das
fbld
sub
fs
cmpsb
lods
je
xor
pop
cmp
out
sbb
imul
pop
mov
popa
ret
mov
sub
ss
adc
popa
xchg
fs
fwait
gs
sbb
jne
inc
xchg
and
imul
gs
ja
or
insl
and
mov
jo
das
sbb
in
or
sbb
xchg
and
fildl
push
jbe
enter
cmp
aas
pop
sbb
les
push
ret
jno
pushl
aaa
out
and
xchg
push
or
dec
repz
mov
scas
xlat
xchg
mov
mov
inc
add
fs
add
nop
push
add
andb
adc
or
and
or
add
cmp
sbb
loopne
loope
and
add
loop
sub
mov
call
add
add
mov
sub
xchg
push
push
xor
push
xchg
mov
inc
inc
adc
and
inc
adc
xchg
add
inc
inc
adc
mov
inc
add
adc
adc
nop
inc
add
test
and
pop
push
subl
inc
add
insl
adc
incl
stc
cli
jae
and
sub
das
inc
call
fidivrl
bound
pushl
jnp
and
sub
push
pusha
push
shl
loope
sarl
sbb
incl
sub
add
fwait
jmp
aam
mov
repz
cmp
rol
cmp
pushl
dec
mov
push
pop
pop
in
mov
adc
pusha
stc
mov
jge
mov
jmp
adc
or
xor
xchg
cmp
pusha
push
stos
sub
mov
test
ljmp
jno
ror
in
bound
xorl
sbb
aaa
cltd
in
mov
mov
and
incl
lods
ret
mov
test
push
and
xchg
inc
ss
iret
inc
enter
pop
mov
mov
imul
push
fistpl
imul
dec
push
es
mov
lcall
push
cmovnp
rcrl
mov
cltd
movsl
mov
xchg
xlat
push
mov
cmp
pushl
fadds
out
cli
mov
and
lea
adc
pop
stos
pop
sbb
inc
push
insl
nop
frstor
sub
push
imul
inc
mov
rcr
incl
inc
xchg
aam
jmp
adc
push
loopne
jp
insb
fmul
mov
adc
fcomip
cli
jle
xchg
add
fsubs
adc
inc
and
nop
push
xchg
mov
cmp
mov
ret
mov
sti
inc
repz
iret
dec
movsb
xchg
xchg
xor
enter
mov
inc
dec
or
or
pusha
cld
inc
or
andb
mov
lcall
incl
iret
cmpsb
mov
jmp
xor
test
sbb
lahf
ficompl
and
ljmp
sub
movsb
cmpsb
in
add
mov
test
adc
insb
cmp
call
or
hlt
repz
out
iret
dec
in
mov
jbe
push
pop
call
push
push
xor
not
cmp
inc
mov
jle
mov
sahf
lcall
cwtl
xlat
sti
aam
sub
add
in
inc
add
call
dec
or
movsb
sbb
imul
clc
adc
imul
lcall
std
xchg
pop
or
lret
mov
pop
int
dec
and
scas
mov
stc
adc
incl
add
cld
movsb
imul
xchg
jecxz
adc
sub
call
add
adc
enter
add
or
inc
and
xgetbv
inc
pop
add
cld
cmp
dec
pop
push
aas
pop
je
sbb
in
sub
xor
pushf
shlb
sub
ljmp
das
or
sub
lock
ja
enter
sub
xor
pop
push
pushl
div
mov
shll
sub
or
sarb
mov
pushl
cmp
fwait
cmp
mov
xor
mov
mov
mov
test
outsb
xor
dec
inc
ljmp
lcall
push
and
push
fs
inc
bound
cmpsb
ds
sub
jne
fwait
decl
inc
push
jle
popa
pop
insl
and
xchg
lret
sbb
push
inc
jg
push
lcall
fs
inc
push
dec
push
push
js
jns
xchg
scas
test
movsb
int3
data16
pushl
pop
dec
pop
jns
inc
xchg
inc
js
jge
dec
and
in
ljmp
clc
in
cmp
dec
inc
or
inc
inc
arpl
dec
dec
inc
fs
int
jl
jp
loopne
scas
test
add
jg
andb
fs
ss
pop
push
pusha
dec
inc
bound
pop
pusha
pop
xchg
aaa
cld
outsl
fmul
repz
push
sbb
push
mov
sbb
popw
inc
sahf
negl
push
pop
bound
inc
dec
push
fs
pop
jbe
inc
xchg
push
aad
dec
repz
mov
sarl
and
push
jg
pop
pop
cmc
js
test
mov
mov
inc
push
imul
fs
jg
dec
push
arpl
sub
inc
data16
imul
or
cld
sub
lcall
loope
xchg
sub
mov
test
pop
pop
arpl
fwait
in
jg
dec
pop
js
inc
jbe
pop
imul
jne
lock
std
outsl
pushl
push
out
sub
jmp
push
lret
repz
push
cmp
lock
ret
dec
push
adcb
aad
pop
imul
popa
in
inc
cmp
mov
jns
dec
insl
decl
mov
arpl
arpl
mov
mov
pop
sti
incl
push
dec
mov
inc
outsl
mov
imul
clc
jg
pop
adc
add
dec
repz
mov
cmpsl
cld
out
stos
mov
pop
pushf
inc
test
outsb
iret
aas
test
xsaves
mov
pop
arpl
loopne
movsl
jle
xchg
inc
dec
imul
jle
mov
fdivs
fs
push
or
dec
pop
inc
mov
fstl
push
rcl
out
and
push
dec
repz
jge
push
push
es
and
dec
jl
cltd
ficoms
pop
dec
les
inc
inc
and
push
pushl
add
ss
shl
mov
outsl
imul
cmp
dec
repz
sti
outsl
mov
mov
cltd
decb
repz
cld
push
test
lods
lret
mov
pop
es
sbb
sub
xchg
xchg
testl
xchg
scas
fimull
bndldx
mov
add
push
mov
mov
sbb
cmp
ss
mov
pop
push
into
mov
shll
jp
or
mov
sbb
outsl
push
sti
mov
int3
mov
sub
or
test
movsl
repnz
mov
rolb
and
mov
mov
jo
out
jns
cmpsl
jno
clc
pop
cld
add
ljmp
movsl
repz
out
aaa
xor
jg
rorl
xchg
xchg
imul
sub
mov
ljmp
fists
mov
pop
cmp
mov
sbb
jnp
xchg
in
xor
sub
mov
lock
scas
movsl
testl
cmp
fists
inc
inc
push
out
mov
adc
jl
test
mov
jmp
orl
movsl
test
and
out
mov
aaa
aas
dec
cli
outsb
inc
cmp
mov
out
call
std
fs
add
fwait
test
fisttps
add
or
mov
outsl
or
cli
mov
mov
push
inc
sub
jno
inc
movzbl
sub
xchg
dec
xor
xchg
xchg
xchg
int
push
lea
xchg
pop
and
add
mov
je
repz
jl
fisubl
or
in
xchg
cmpsb
ss
call
adc
or
scas
in
inc
insb
mov
jns
ret
dec
lods
daa
mov
push
das
mov
test
xor
pushl
sub
and
xchg
popa
hlt
xchg
test
idivb
sbb
mov
adc
dec
out
sub
push
and
fcompl
xor
adc
jno
adc
int3
pop
stc
sarl
fists
adc
xchg
push
add
sub
pop
pushf
jbe
std
stos
push
lcall
pop
idivb
push
lea
idiv
push
sti
aaa
jae
cmpsl
mov
dec
or
imul
ljmp
or
pop
and
lea
mov
jle
adc
lea
mov
out
shr
in
neg
hlt
pushl
pop
mov
scas
push
or
fs
cmpl
repz
dec
push
push
xorb
and
push
add
in
add
sbb
adc
mov
sbb
pop
imul
and
pop
sbb
push
xchg
pop
sub
push
data16
std
into
shrl
repz
pusha
sub
incl
push
fisubrl
xor
sub
xchg
xchg
jg
call
sub
rclb
cmpsb
cs
and
dec
pop
or
sbb
je
int
pushl
and
fistpl
test
mov
mov
data16
xchg
call
insl
mov
inc
aaa
lea
nop
shrb
int3
fsub
stc
xchg
cli
pop
xchg
js
rolb
icebp
jo
cmpsb
and
fbld
and
inc
dec
gs
push
xor
incl
dec
inc
jp
jns
gs
xor
dec
push
xor
push
push
xor
insl
gs
ljmp
jo
dec
bound
xor
dec
xor
inc
pop
gs
inc
popa
inc
insb
jae
jne
insb
je
pushl
je
bound
push
fs
push
ss
push
jb
imul
push
data16
dec
popa
outsb
ss
dec
imul
push
jp
jno
inc
imul
push
xor
inc
push
inc
push
imul
jp
addr16
push
dec
xor
gs
push
push
dec
jo
xor
jno
insb
stos
sti
pop
cld
pushl
push
ss
dec
dec
jbe
addr16
or
dec
dec
insb
addr16
jns
cli
incl
dec
jp
xor
dec
dec
push
dec
fs
dec
bound
js
ljmp
jae
jne
jns
push
inc
jp
xor
insl
jp
ja
aaa
imul
inc
aaa
imul
sti
pushl
pop
imul
je
dec
insb
fs
push
into
push
xor
cmp
pushl
and
dec
dec
dec
jno
dec
jne
xor
outsl
je
push
jbe
outsb
push
fs
inc
xor
lds
dec
xor
inc
push
dec
dec
push
push
ss
mov
arpl
lock
js
cmp
push
fs
push
imul
inc
inc
inc
inc
add
dec
push
gs
jbe
aaa
dec
push
jp
popa
ja
xor
sub
mov
incb
inc
push
jne
xor
inc
lods
push
jne
bound
je
jb
push
ja
push
inc
inc
push
jo
add
sbbb
add
inc
mov
add
jl
xchg
pop
push
ss
xor
sub
add
xchg
fcom
movsb
jns
sub
lock
int3
iret
test
xlat
loopne
lock
in
and
and
test
dec
and
adc
shrl
push
pop
dec
repz
or
test
test
repnz
mov
push
int3
pop
cmc
inc
cmp
and
ja
inc
sub
outsb
sbb
jbe
push
or
push
mov
fwait
int
jnp
push
and
adc
adc
sahf
xor
sbb
in
frndint
sbb
sbb
jbe
dec
lahf
xor
in
jnp
adc
push
lods
aad
rorb
mov
cwtl
xor
loop
loopne
inc
sbbb
ret
xchg
dec
dec
mov
push
mov
jge
imul
xchg
push
xchg
adc
les
jmp
idivb
daa
out
dec
outsb
in
out
testb
inc
test
pop
jnp,pt
js
rolb
insb
nop
loopne
pop
sti
jbe
adc
or
mov
loopne
add
push
in
sarl
push
mov
fisttpll
inc
push
sbb
adc
xor
xchg
xor
cs
xchg
add
pop
jbe
loopne
add
xlat
inc
aas
inc
enter
mov
test
or
pop
jbe
pop
in
cmp
ret
push
cmp
or
and
inc
adc
es
xchg
jb
push
pop
xor
cmp
fstpt
sub
leave
mov
sub
mov
rcll
fadds
out
icebp
ror
data16
ds
mov
nop
mov
mov
jmp
pushl
jns
test
psubq
pop
sub
fwait
in
sti
fiaddl
das
jge
insb
les
out
jle
fists
call
out
into
loope
jbe
insl
push
jae
loop
pop
inc
icebp
dec
push
scas
fnstcw
lcall
jne
lds
in
les
fmulp
cmpsl
ret
imul
ja
std
mov
imul
gs
xor
cs
insb
pop
inc
sbb
mov
jmp
gs
jb
je
arpl
push
arpl
outsl
outsb
cs
gs
jbe
outsb
pop
jb
dec
outsb
and
in
scas
mov
imul
jne
inc
jb
gs
fnsaves
inc
outsl
arpl
or
pop
outsl
add
push
xchg
imul
call
insl
push
jne
jns
push
outsw
jb
popa
outsb
arpl
sbb
pop
fwait
push
push
adc
sbb
jb
cmp
xorb
fs
push
mov
pop
in
pop
inc
fs
das
adc
fiadds
pop
push
imul
popa
jb
outsl
dec
jne
mov
jns
sub
int
popa
ss
sub
movsb
mov
or
mov
pop
arpl
sbb
and
xorb
inc
push
dec
add
jnp
cmc
and
popa
divb
rcr
dec
mov
inc
and
cmp
push
jae
imul
hlt
gs
or
xchg
fstpl
inc
imul
mov
or
sbb
popa
es
inc
mov
loopne
sbb
insl
mov
mov
sbb
fs
bound
jae
pop
add
cmp
cmp
idiv
push
push
outsb
push
cmp
inc
cmp
xor
out
cmpsb
fxch
ss
push
outsl
xchg
and
dec
data16
jo
jle
push
je
xorb
cmp
xchg
cwtl
cmp
add
insl
aam
sbb
pop
pop
push
adc
add
test
push
jns
inc
shl
xchg
lcall
adc
mov
pop
push
gs
pop
jb
jae
jg
sub
addr16
fsubl
gs
outsl
outsl
notb
pop
mov
dec
gs
push
inc
jbe
jo
adc
push
insb
jae
jg
add
mov
ret
es
movsb
outsb
mov
jo
adc
add
popa
jne
jg
lret
sub
push
jns
sbb
pop
pop
bound
dec
mov
daa
sbb
inc
aad
push
or
aad
cltd
sbb
inc
adc
vmovups
pop
inc
push
lcall
push
insb
push
dec
bound
push
push
xchg
stos
popa
icebp
push
jo
cmpsb
sub
sbb
xlat
mov
scas
mov
inc
sbb
jbe
out
mov
xor
push
cmp
outsb
roll
adc
sub
and
xchg
push
addb
xchg
inc
mov
test
fnstsw
pop
xchg
dec
fwait
repz
movd
lods
scas
mov
push
sbb
nop
stos
push
mov
xor
cs
popa
jae
adc
sub
xchg
jbe
rolb
imull
pushw
mov
pop
inc
stos
xchg
or
sbb
ret
frstor
ljmp
in
ret
mov
test
xor
das
add
insl
inc
jo
loop
sbb
loope
xchg
sbb
dec
test
jmp
add
imul
push
jecxz
int3
mov
lock
es
or
cmp
int3
sbb
inc
xor
test
or
mov
in
jnp
push
sbb
xchg
fistl
push
xor
inc
imul
test
gs
inc
insb
js
sbb
pop
movsl
outsb
test
mov
cmpsb
int3
idivl
pop
push
jbe
lcall
pop
cmpsb
inc
cwtl
and
imul
adc
pushf
jecxz
imul
cmpsl
negb
adc
push
xchg
adc
daa
lods
insl
dec
roll
in
cmpsl
and
inc
jb
jae
ja
or
repz
push
or
push
in
out
cs
pop
sbb
fmuls
popa
xor
inc
add
pop
inc
lret
xlat
imul
adc
mov
arpl
adc
mov
fs
adc
push
subl
inc
add
adc
push
push
and
add
subl
inc
add
fs
push
dec
ret
andb
mov
mov
add
inc
subl
inc
add
adc
adc
nop
inc
inc
and
sub
fs
add
nop
add
add
add
or
adc
nop
push
add
add
xorl
push
and
add
subl
inc
add
adc
adc
nop
inc
push
and
mov
subl
inc
add
fs
add
lods
jmp
add
enter
incl
add
add
and
add
add
add
adc
enter
lods
inc
add
add
add
and
add
sub
mov
add
adc
adc
nop
inc
add
add
subl
inc
push
mov
bound
shll
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
inc
push
add
test
es
mov
movsb
jecxz
movsl
pop
iret
lahf
add
push
sarb
pop
mov
and
cwtl
stos
inc
loop
and
add
jns
mov
icebp
andl
pop
xchg
push
push
lret
and
sbb
pop
jl
jmp
rcrb
sbb
jmp
mov
repnz
mov
push
mov
pop
inc
jle
vphaddubd
ljmp
dec
or
ljmp
cwtl
mov
bound
popf
sub
js
xor
xchg
inc
pop
mov
and
loop
mov
insb
xchg
xchg
lock
incl
add
mov
stos
sti
jl
push
js
push
aad
push
lock
mov
pushl
jmp
nop
cmpsb
mov
add
fwait
and
cmp
test
xlat
movsb
cld
push
test
cmpsb
call
scas
cwtl
cmpsb
pop
mov
test
fildll
pop
push
dec
daa
fucomp
mov
decl
sbb
test
out
push
scas
out
cmp
mov
pushf
fistl
stc
insb
push
scas
incb
inc
xchg
fists
ja
mov
es
dec
cwtl
jne
movsb
idivl
pushl
fwait
push
rcll
loop
pop
sbb
xor
cmp
push
test
testb
push
dec
lcall
pop
je
jae
mov
ret
lea
mov
pop
stos
ljmp
call
adc
jbe
xor
fdivs
ret
popf
sbb
jle
loope
sbb
cmp
incl
pop
adc
or
aad
addl
push
jne
cmp
stos
adc
incl
popa
xchg
aaa
stos
mov
scas
push
jl
cmp
push
rorl
cmpsb
pop
popl
and
insl
push
ds
jmp
push
leave
lahf
inc
ds
sbb
cwtl
xchg
or
or
jnp
jge
pop
in
dec
int3
mov
shlb
lcall
mov
cltd
push
rorb
mov
or
lock
dec
pop
hlt
jl
push
xchg
mov
faddl
xor
sub
ds
insl
nop
lods
rcrb
popf
push
cmp
incl
xchg
psraw
test
or
jb
test
ljmp
xor
and
test
mov
mov
lret
repz
sub
fwait
sahf
fwait
adc
inc
push
psubsb
xor
pop
adc
fisttpll
decl
shr
repnz
pop
or
add
test
jmp
pop
add
jno
movsl
pop
cmp
movsl
jno
lret
lret
roll
or
jp
or
and
mov
shlb
push
or
dec
sbb
add
cmp
sbbl
mov
ljmp
push
stos
add
faddp
push
ljmp
mov
rcl
push
inc
add
or
shlb
adc
jmp
xor
inc
mov
fisubl
ret
int3
pop
je
andl
jmp
dec
inc
rcr
mov
inc
jge
into
and
sub
xchg
jne
or
adc
xchg
aam
push
ljmp
sbbb
jns
push
cmp
imul
out
psubb
jo
cld
inc
and
insb
clc
mov
mov
xor
dec
xchg
xor
pushl
xor
mov
cwtl
cld
mov
ret
es
lcall
fimull
jecxz
push
movsl
incl
and
mov
addr16
or
adc
stos
int3
and
inc
ficomps
pushl
or
mov
repz
mov
sub
mov
sub
decl
icebp
test
in
cltd
into
scas
je
in
mov
fldenv
or
decl
insl
lods
cmp
pop
xor
idivl
mov
pop
pop
lods
and
pop
rol
inc
mov
test
sub
fcoms
rclb
xchg
xorb
inc
mov
sbb
mov
cmc
cs
sbb
sbb
mov
push
and
xor
call
xor
rcrl
push
or
cmp
sub
imul
pushl
and
call
xor
je
sub
repz
das
inc
adc
mov
inc
inc
imul
jl
fistpll
bound
sbb
mov
pop
testb
ffreep
cmp
pop
lods
fcmove
jmp
cwtl
rcll
lods
jecxz
lock
sbb
push
push
lea
mov
sub
and
jmp
push
iret
mov
aaa
fmul
sbb
inc
scas
ror
jne
imul
jbe
dec
test
pushl
mov
jae
imul
xchg
mov
cmc
in
and
subl
lret
cmp
dec
sti
pushf
clc
jae
std
stos
int
xlat
in
std
jmp
out
cmp
test
scas
xchg
pop
bound
loopne
jge
cs
xlat
mov
and
add
push
mov
lods
lahf
in
pop
ficomps
mov
or
imul
in
out
ret
jle
mov
stos
jmp
movsl
jae
sub
je
ds
fsubrs
xor
je
test
roll
inc
ds
aad
mov
jg
sub
xchg
loopne
out
out
xor
pop
or
call
inc
dec
mov
in
mov
data16
push
mov
jns
adc
dec
shll
xor
pusha
psllq
scas
call
push
xor
movsl
arpl
out
cli
inc
mov
dec
push
jecxz
pop
sarb
mov
xor
outsb
std
and
decl
aaa
das
jecxz
jbe
mov
mov
lea
incl
cmp
shl
adc
mov
pusha
mov
push
xchg
mov
mov
nop
orl
leave
lret
paddusb
dec
adcb
jecxz
jle
stos
mov
inc
mov
cld
mov
mov
fistpl
sti
fadd
sti
xor
call
arpl
jge
sub
out
inc
sbb
push
and
jo
mov
lcall
jg
jle
pop
xchg
fistl
add
cltd
xchg
fiaddl
pusha
xchg
test
rcl
scas
cmc
and
ljmp
inc
mov
jl
sti
mov
lcall
mov
pop
cmp
ljmp
pop
sahf
xorb
testl
test
cmp
mov
fld
xlat
gs
fnsave
jle
lret
ror
sahf
jno
fmuls
pop
stc
jb
mov
jmp
dec
iret
jge
fbstp
push
pop
test
clc
pushl
mov
iret
cmp
insl
stos
clc
jecxz
pop
pop
dec
aam
cmp
outsb
js
hlt
jg
push
mov
fs
sub
mov
les
dec
test
cwtl
pop
sub
call
addr16
xchg
lea
cmp
cwtl
jp
into
jmp
mov
and
jg
mov
pushl
push
repnz
sub
out
nop
and
stos
xchg
mov
hlt
pop
js
mov
sub
decl
push
outsb
mov
ret
inc
lret
lods
push
xchg
lock
adc
push
cmp
mov
lcall
mov
pop
fsts
mov
add
test
jb
pop
out
test
scas
aaa
jg
jmp
add
jns
adcb
sbbb
enter
push
cltd
fdiv
sub
mov
adc
cs
outsb
subl
fld
sti
cs
or
popf
xchg
pushl
cld
jg
out
and
and
xchg
and
sarl
cmp
ljmp
xchg
or
and
cli
sbb
pop
in
pop
and
jp
cmp
repnz
call
pop
or
mov
lods
cmp
mov
cmc
push
outsl
insl
popa
cmp
aas
in
dec
cmp
test
mov
jp
and
sub
std
sbb
mov
mov
and
xor
jbe
jno
mov
push
dec
cmpsl
aaa
ret
out
sbb
cmp
fbstp
scas
mov
ret
mov
lea
in
sbb
fistpll
std
pop
test
mov
xchg
pop
xchg
fwait
cmp
rcll
ss
xor
jmp
push
push
jecxz
push
test
adc
xor
roll
loopne
ljmp
jge
ljmp
fwait
adc
sub
pop
fucom
fadds
cmp
ret
ljmp
cmp
cmp
popf
mov
test
mov
fcomip
sbb
cmp
sahf
out
int3
jp
sub
sub
jne
and
mov
ljmp
arpl
jge
call
cmp
pop
bound
ljmp
mov
cmc
int3
fiadds
das
mov
lods
mov
stos
push
insb
jg
call
cld
or
adc
push
push
push
push
std
push
add
inc
lcall
test
pushl
pop
std
pop
mov
out
mull
adc
leave
testl
pushl
shll
pop
repnz
orl
out
add
fldcw
std
lcall
cmp
add
shll
sarb
lahf
mov
fstps
call
push
test
or
sarb
push
xchg
enter
sub
dec
icebp
dec
xchg
nop
lret
movsb
adc
jmp
cmpsl
popa
out
movsb
sub
inc
mov
sbbb
cmc
int
shl
pop
adcb
iret
stos
fbld
adc
dec
sub
pop
adc
jg
push
xor
inc
in
out
sub
pop
or
mov
jmp
jp
divl
jp
ret
lret
cld
aas
stc
pushf
adc
icebp
mov
cli
pop
repz
dec
pop
movsl
lret
lahf
fdivrl
jae
fisttps
sbb
jb
test
adc
mov
outsb
xchg
lahf
push
mov
sbb
sbb
inc
pop
mov
and
push
xor
cmc
fidivrs
lcall
or
push
das
cmp
into
push
cwtl
aam
mov
xor
pushl
sub
andb
aaa
mov
popa
sbb
call
popf
js
adc
inc
leave
mov
std
xchg
xchg
out
mov
mov
loopne
push
ljmp
xor
out
cld
inc
out
rorb
cmp
or
and
cmpsb
lcall
or
xor
dec
mov
dec
outsb
pop
in
dec
mov
push
and
cmpsl
mov
jg
pushf
popl
add
imul
jge
and
pop
orb
sar
cld
jmp
inc
ljmp
mov
sbb
hlt
insb
add
js
pushf
mov
xchg
adc
iret
out
mov
std
gs
jle
lods
mov
out
stc
test
decl
ss
jle
lgs
mov
rolb
les
movsb
pushl
mov
lret
mov
xchg
cs
das
ss
sbb
mov
rclb
mov
xchg
pop
sub
pushf
inc
iret
pushf
icebp
sub
stos
dec
adc
sub
pop
stos
inc
fisubs
in
ja
add
shll
scas
inc
dec
or
outsl
clc
mov
into
out
filds
cmp
inc
pop
sbb
gs
bndldx
ljmp
imul
mov
add
pushf
out
mov
push
push
leave
lcall
aas
and
pop
sbb
movsb
jb
mov
fcmovbe
fwait
jo
and
scas
add
jmp
fildl
sbb
xchg
call
inc
fisubrl
fnsave
fwait
inc
or
ficoms
sub
cmp
ss
pushf
jns
call
jge
push
stos
mov
dec
add
insl
cld
movsl
xor
stc
xchg
mov
jo
jle
arpl
and
mov
cwtl
dec
xchg
pop
imul
cmpsb
orb
sbb
cmp
xor
lcall
mov
and
in
popa
gs
mov
push
notl
repnz
js
fwait
lahf
sbb
pop
pop
mov
test
iret
pop
inc
mov
cmp
adc
mov
inc
mov
dec
out
xor
jle
lock
jecxz
xchg
leave
cmpsl
int
xchg
adc
ljmp
into
jnp
pop
and
jb
sub
fbstp
add
inc
jns
and
mov
or
in
xchg
pushl
aas
lret
mov
pop
and
imul
lcall
call
lret
test
dec
lods
or
dec
stc
out
push
sbb
scas
call
loopne
out
cmp
negb
fs
stc
inc
push
ds
lock
sbb
incl
mov
or
dec
cmp
jae
addl
jmp
mov
stos
js
sub
pop
dec
xchg
add
inc
inc
mov
pop
lret
jmp
adc
ss
or
adc
insb
rol
ret
pop
sub
inc
subb
loop
addr16
adc
xchg
dec
in
js
add
cmp
inc
push
push
sub
popa
out
stos
rolb
out
js
gs
push
hlt
mov
sti
push
fcmovb
ljmp
fidivs
or
es
int3
mov
lcall
jg
dec
jmp
adc
sub
jg
xchg
cmpsl
mov
mov
mov
sbb
pop
pushf
rorb
in
mov
or
cld
call
xchg
fdivr
cld
repz
inc
test
rcrb
mov
adcb
test
jmp
insl
daa
leave
stos
int3
in
ljmp
mov
or
mov
out
mov
cmp
push
xlat
jae
or
loopne
aas
xorb
rolb
rcl
imul
pushf
adc
enter
mov
inc
ljmp
inc
inc
pop
repnz
jecxz
decl
add
add
xlat
push
adc
stc
cs
lret
and
push
mov
int3
lcall
jbe
daa
lcall
jbe
xor
mov
dec
mov
call
or
or
mov
ror
xchg
pop
xchg
cwtl
bound
lea
out
jp
fimuls
scas
dec
jp
xchg
aaa
out
stos
in
xchg
repz
push
cmp
ja
or
enter
jg
call
inc
mov
cmp
adc
mov
push
das
mov
sbb
aas
push
pop
mov
mov
jmp
xchg
sbb
out
and
xor
fistl
je
mov
outsl
xchg
xlat
or
sub
ljmp
pop
sbb
and
xchg
adc
xor
dec
xor
js
decl
dec
fnstsw
and
lahf
pop
jo
lods
mov
in
decl
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
adc
xchg
movups
sbbl
jg
push
mov
les
lahf
incl
add
add
xor
push
add
in
xor
inc
mov
add
mov
test
fistps
add
hlt
add
sbbb
dec
xorl
jb
adc
fucomi
incl
or
inc
addl
incb
pop
rolb
sti
sbbl
sub
adcl
mov
roll
adcl
aas
rorl
cwtl
js
adcb
xchg
sbb
je
mov
js
rorb
pop
shrb
xor
sub
pusha
shll
je
stc
lcall
rclb
cmp
rolb
rorb
lds
mov
insb
nop
adc
rolb
sub
rorl
data16
or
or
add
sbb
and
adc
dec
jo
add
or
in
xchg
pop
out
movsl
pusha
sub
jae
dec
shll
popa
pusha
sbb
xor
jnp
jns
or
mov
ss
dec
xor
sbb
pop
jl
cmp
imul
insl
add
lods
insl
lcall
add
cmc
pusha
test
std
pop
imul
lds
pusha
or
popa
push
pop
fs
cmp
cmpsb
cmp
mov
push
std
gs
xor
jnp
jne
ss
bound
mov
movsb
xchg
mov
lods
or
iret
fstpt
sbb
pop
mov
add
imul
gs
push
pop
push
outsb
lcall
add
add
push
push
add
shrl
xlat
outsb
scas
push
int
add
fcmovbe
adc
sbb
inc
xor
cmpsb
mov
jmp
mov
lock
jns
or
push
push
add
rcrl
aad
mov
xchg
sbb
jnp
pop
add
aas
das
mov
sbb
push
pusha
pop
push
int
aas
clc
lea
push
pusha
fstpt
addr16
mov
seta
fucomip
leave
int
inc
ss
add
loope
out
dec
iret
jae
cltd
mov
test
lcall
popa
sbb
cmp
jg
mov
clc
lds
int
mov
imul
cmp
adc
daa
sbb
dec
arpl
or
shrl
sbb
mov
mov
or
rcrl
popf
push
mov
out
add
mov
mov
cs
arpl
push
loopne
aad
inc
testb
jg
and
add
add
mul
notb
sbb
inc
pop
popa
add
mov
int3
stos
popa
and
add
cmp
mov
shll
jl
loopne
mov
sbb
cmp
sbb
outsl
repz
ja
push
lahf
cwtl
or
fs
xchg
loopne
sub
xor
inc
pusha
pop
pop
js
mov
jne
daa
sbbl
sti
adcl
adc
sbb
sti
popa
loopne
push
sbb
xchg
roll
and
out
jo
or
cmpsl
imul
sbb
mov
add
adc
push
jo
jecxz
out
add
repz
fisttpll
push
pop
ficoms
bound
in
arpl
jo
outsl
jp
or
add
sbb
sub
clc
fdiv
push
outsb
add
push
cmp
xorl
mov
js
sub
sbb
icebp
jl
add
dec
repz
sbb
shll
in
mov
mov
xor
pop
sahf
mul
sbb
pop
aaa
mov
stos
sbb
sub
sub
cmpsb
jns
push
jnp
movsl
mov
pop
ds
gs
sbb
mov
mov
push
lds
mov
jmp
cmp
ret
dec
mov
sub
or
mov
js
jo
fucomp
add
dec
add
add
ds
mov
add
lods
and
add
jl
mov
xorb
imul
lock
in
push
repnz
mov
cmp
roll
jne
popa
mov
mov
sbb
jle
pop
jl
xchg
pop
xchg
jo
or
outsl
jo
jno
cld
cmovle
pop
pop
inc
add
add
xor
leave
stos
pop
adc
add
mov
cwtl
ds
push
test
pop
decb
vmovsd
jbe
cld
pop
pop
loop
pop
cmp
fcomip
mov
pushf
dec
pop
ja
das
mov
testl
cmp
xor
lcall
fiaddl
push
sbb
sbb
cmp
add
aaa
insb
dec
inc
xchg
lahf
add
push
jle
mov
jle
mov
inc
imul
adc
or
aam
cmp
dec
inc
jno
clc
or
jne
cmp
daa
fldl
jo
pop
call
add
push
enter
ljmp
ja
mov
add
dec
sub
mov
jbe
xchg
imul
popa
jb
xchg
gs
lea
jo
jae
fbstp
and
ljmp
je
add
and
je
imul
inc
scas
sbb
das
adc
jb
stc
andb
xchg
lods
popf
add
incl
add
test
adcb
or
loop
daa
cmp
sbb
fcomip
iret
push
push
mov
add
xlat
orb
pusha
push
xchg
push
jo
mov
shll
lcall
mov
mov
add
push
notl
xor
add
ss
fisttpl
push
inc
mov
add
add
shl
inc
mov
inc
adc
mov
mov
or
je
and
mov
fbstp
shr
add
add
fwait
sub
into
xor
lret
pop
mov
sub
add
jbe
inc
data16
or
sbb
xchg
les
add
or
call
or
ret
xchg
push
icebp
lods
mov
incl
lock
mov
or
push
push
cmpsb
pop
dec
sbb
nop
fcomi
pop
sti
add
js
cmp
pop
adc
mov
push
sub
push
dec
sarl
fdivp
lock
push
mov
jecxz
sub
cmpsb
xor
xor
sbb
mov
imul
test
xor
add
push
cmpsb
mov
push
cwtl
dec
pop
push
fs
cmp
sarl
fdiv
cli
sbb
pop
or
dec
imul
xor
pop
sarl
add
int3
jb
les
or
ss
repz
movsb
add
sbb
inc
in
pop
pop
sbb
push
dec
jo
cmpb
aam
dec
lahf
cmpsb
cmp
sub
fwait
lods
imul
add
push
xor
jbe
ss
sbb
aad
jle
data16
push
stos
xchg
mov
cmpsb
in
or
pop
xor
pushf
dec
cmp
sarl
sbb
fistpl
cs
mov
dec
mov
in
mov
adc
lock
jno
push
xor
cmpsb
insl
mov
icebp
or
lcall
orl
pop
inc
ss
or
sbb
pusha
ss
mov
jns
cmp
rclb
imul
add
es
repnz
sbb
lds
lcall
add
fldenv
xor
gs
push
adc
pop
xor
add
icebp
cmp
mov
rclb
insl
sub
insl
repz
add
mov
xor
adc
icebp
add
sbb
jae
jo
or
iret
in
adc
fimuls
cmpsb
push
loop
xorl
out
mov
mov
jo
or
jo
or
pop
imul
lods
or
push
negb
push
or
pop
clc
pop
ja
aaa
mov
push
addr16
daa
jge
repz
inc
insl
push
out
push
adc
sbb
std
sbbb
push
sahf
inc
mov
jg
aas
fisubrs
test
aas
repnz
push
das
push
or
nopl
dec
adc
push
push
push
jo
sahf
out
cmp
pop
or
pusha
and
push
pop
cmpb
loope
push
pop
cmp
hlt
jns
xchg
add
cmp
out
shrl
push
sahf
out
mov
add
out
popf
push
ja
sub
cmp
jns
or
push
xlat
popf
out
pop
test
jmp
repz
sahf
sbb
xchg
push
jl
fstps
pop
insb
sub
or
sahf
out
mov
push
out
sahf
out
mov
out
sahf
lds
bound
movsl
add
out
addb
pop
out
sahf
out
xchg
inc
jp
cmp
repz
aad
jle
sub
repz
add
cmpsl
fsin
xor
int
iret
repz
lods
push
repz
xrelease
or
out
iret
push
popf
arpl
jle
fldl
repz
adc
outsb
cs
iret
mov
push
adc
repz
icebp
cmp
xor
iret
repz
popa
and
repz
cmp
pop
sbb
jns
shrl
leave
repz
mov
mov
iret
adc
into
push
dec
add
jne
iret
repz
cmp
gs
repz
inc
jmp
sbb
fwait
jge
fldt
mov
sub
decb
inc
aaa
jns
addr16
ret
jae
cmp
jae
cmpsl
cs
je
or
out
daa
iret
jae
sbb
jae
xlat
imul
call
notl
sahf
out
pop
ja
iret
addr16
push
daa
scas
push
filds
iret
leave
out
pop
pop
lahf
jg
adc
out
aas
filds
mov
jle
sahf
call
push
jo
dec
in
adc
add
ljmp
loop
inc
ds
push
add
add
jecxz
and
add
jmp
in
sahf
push
jle
sbbl
imul
cmpsb
rclb
xor
or
xchg
roll
mov
adc
test
and
hlt
es
loope
xor
repnz
mov
imul
push
out
inc
push
shl
les
jo
push
push
lret
jmp
int
fisttpl
pop
mov
aad
ja
rclb
inc
jl
jle
sub
mov
sbb
mov
mov
test
jmp
mov
hlt
cmp
insb
adc
test
fs
std
adc
mov
decl
pushf
cmp
pusha
aaa
and
mov
inc
pusha
aad
jno
mov
cs
cmp
aam
dec
add
or
xchg
cwtl
mov
sub
mov
lods
fcomip
lcall
fdivs
mov
xor
shrl
lcall
dec
jmp
hlt
mov
fadd
mov
xchg
mov
mov
testl
inc
fucomi
or
out
dec
push
rol
data16
inc
fdivl
jno
add
rol
lcall
jbe
mov
loopne
mov
pop
in
lahf
int3
aam
call
lret
ljmp
pushf
test
xchg
out
push
loope
or
insl
or
fs
pop
arpl
or
cmp
ljmp
popa
insb
sbb
xor
add
adc
add
ds
lcall
test
pmaddwd
fnstenv
adc
mov
bound
decl
mov
popa
mov
xor
cmp
mov
mov
ljmp
xchg
fdivrs
add
rcll
fldcw
mov
mov
add
lcall
sbb
or
ret
jno
push
push
inc
add
out
adc
mov
fidivl
decl
and
aam
mov
icebp
stc
ficomps
leave
fldcw
fstpl
xlat
call
jle
mov
les
push
insb
mov
in
dec
mov
lcall
mov
movb
call
rcrb
jl
fdivl
or
jnp
fs
shrl
push
pop
push
hlt
iret
push
in
jg
bound
fsubrs
pop
jge
xchg
sub
call
ret
mov
orb
sbb
imul
aam
pop
sub
mov
jmp
dec
frstor
fistpll
mov
mov
pop
mov
shll
cmp
fdivrs
lods
repnz
addr16
cmpsb
and
mov
mov
mov
and
sbb
scas
decl
dec
add
lahf
jp
inc
cmp
pusha
fildll
mov
xchg
popa
lret
in
mov
lcall
outsl
and
push
or
cld
inc
or
shlb
add
inc
xlat
or
sub
push
pop
pop
call
ret
shlb
loop
ficomps
ret
lcall
arpl
insl
add
or
addr16
jb
jl
mov
mov
push
sub
or
mov
xchg
repnz
fdivrl
fisttpl
sub
roll
pop
mov
push
xor
mov
negb
ja
outsl
mov
inc
mov
sbb
mov
cmp
mov
gs
xchg
scas
cli
clc
sub
imul
push
xchg
or
stos
addl
jg
cmp
push
pusha
shlb
ja
ds
shrl
cltd
or
inc
ud0
cmp
aaa
lods
scas
mov
fiadds
mov
jecxz
mov
lret
mov
jmp
mov
cli
sarb
push
ficoms
fldenv
sarl
mov
dec
aad
jmp
std
sbb
imul
sub
mov
or
in
add
sub
mov
jge
xor
sub
hlt
ja
std
jns
pop
push
cmp
fxch
mov
ret
call
hlt
jecxz
dec
mov
mov
ja
call
jno
sbbl
adc
dec
out
and
push
sub
js
inc
sar
out
popa
stos
xlat
scas
cs
mov
sub
addl
test
jg
sub
mov
insb
insb
jmp
aas
inc
aam
pop
dec
pop
and
xchg
sbb
lahf
mov
inc
mov
sahf
ja
mov
sbb
repz
lcall
ficoml
pop
pop
adc
inc
inc
xlat
int3
imul
jo
fdivl
cmp
pop
sub
rorl
outsl
cli
incl
or
ss
fisttps
pop
mov
iret
gs
sub
inc
xor
lret
mov
lahf
pop
inc
lea
out
mov
add
jae
out
clc
decl
push
sbb
inc
ret
sub
pop
cli
dec
jns
mov
sub
mov
adc
lea
mov
lds
and
xchg
decl
xor
int3
pop
mov
xlat
inc
je
cli
outsb
xor
pop
mov
mov
decl
scas
cwtl
xlat
fsubrp
test
loope
insb
lret
cli
cmc
mov
out
imul
cld
ljmp
sbb
test
cmpsl
adc
push
out
adc
and
inc
and
pushl
out
fimull
lret
push
fwait
cmp
dec
pop
scas
xchg
add
int3
cmpsl
xor
ljmp
loope
lods
adc
adc
adcl
xchg
mov
xchg
leave
adc
inc
jle
call
jns
das
dec
dec
and
mov
or
or
lea
fisubs
dec
out
jle
add
out
inc
ret
adcl
int3
add
pop
xchg
lcall
inc
cmpsl
test
cwtl
cmpl
test
mov
ja
scas
adc
insb
hlt
inc
xor
fldcw
pushl
ret
adc
std
and
jo,pt
sarl
fdivrs
out
mov
mov
movsl
jnp
sbb
mov
ja
fldcw
dec
sub
or
sub
jmp
sbb
ds
add
mov
cs
mov
jmp
hlt
out
les
ret
mov
ljmp
xchg
fdecstp
push
mov
sbb
xchg
fidivs
pushf
aad
test
push
lret
decl
rcll
sub
push
fisubs
pop
lds
push
call
dec
sbb
mov
pop
inc
test
xor
mov
lahf
fdivrp
test
call
addb
lcall
cltd
rorl
mov
cmp
push
adc
sub
mov
pop
dec
loope
dec
or
call
imul
inc
jp
mov
arpl
out
shlb
mov
stc
jb
xlat
loopne
adc
jmp
lea
jbe
mov
add
insb
cmp
cmp
adc
sub
ljmp
ljmp
jns
jle
bound
cmp
cmpsl
push
mov
xchg
adc
mov
xor
bound
daa
push
add
dec
loope
test
sub
decl
dec
in
mov
xor
call
push
adc
jle
push
ret
xchg
cli
adc
insb
shlb
adc
push
pop
or
xchg
rorb
aam
aas
adc
sar
scas
adc
cltd
sbb
mov
pop
shr
popf
in
jg
fsubr
out
inc
loope
adc
shlb
xorl
lret
imul
jmp
inc
test
pop
dec
imul
pop
jle
enter
mov
dec
testl
adc
ljmp
dec
push
add
mov
jmp
lret
push
dec
jl
add
push
dec
add
jo
rorl
sub
lcall
out
push
or
stc
sbb
lods
xchg
fmuls
cmc
sub
pop
or
leave
in
clc
fists
mov
push
push
or
sbb
sbb
mov
sbb
repnz
out
add
adc
mov
outsb
dec
jae
jmp
cmp
fdivl
adc
mov
pop
pop
inc
decl
sub
cmp
leave
cmp
or
ret
out
inc
aas
hlt
test
cmp
push
add
lcall
nop
jge
aaa
leave
ret
fidivl
jnp
push
xor
xor
add
xor
lcall
imul
mov
xor
daa
ss
sub
and
out
ljmp
and
mov
sub
fidivrs
sub
sbb
cmp
mov
sub
enter
mov
jo
out
jno
pop
push
jae
xor
jb
jmp
and
push
jbe
icebp
pop
je
fwait
aad
xchg
mov
mov
jg
or
jl
jg
lcall
cmpb
inc
js
mov
jnp
cs
insl
and
cmp
mov
es
xchg
push
push
xor
cmp
imul
adc
insl
arpl
shr
sub
cmpsb
gs
fs
add
data16
loopne
xlat
lcall
add
mov
outsb
xchg
dec
add
dec
xor
sbb
insl
decl
pop
fstpl
push
lock
inc
or
inc
ds
inc
mov
decl
dec
inc
loop
mov
push
xor
mov
mov
jae
clc
push
incl
push
sbb
jle
push
pop
cmp
pop
and
pop
jns
pop
dec
xchg
cld
sti
sub
outsl
pop
xchg
das
lods
pop
jg
xor
loopne
iret
mov
movsl
jae
mov
loopne
call
mov
in
dec
es
lock
movsb
sahf
mov
lcall
loop
call
jne
stos
jmp
pop
imul
cmp
sar
popa
insb
xchg
call
call
adc
cli
lods
fdivr
mov
scas
pop
clc
mov
add
addb
repnz
inc
icebp
imul
pop
sub
cmc
add
decl
lahf
pop
js
test
mov
fdiv
mov
fcmovb
jecxz
fildl
jno
je
mov
sub
dec
aaa
fsubl
or
xlat
adc
call
dec
fsubr
aam
mov
aad
movsb
ror
into
mov
shll
pop
pushf
in
les
sbb
xor
ret
xchg
ret
pop
adc
push
adc
push
scas
dec
lret
pusha
cmc
inc
leave
enter
leave
mov
inc
int3
mov
rol
iret
sarb
lcall
xchg
mov
insl
nop
roll
xchg
out
jmp
xchg
push
push
fs
and
call
pop
mov
sahf
imul
cli
popf
fldt
cwtl
in
add
mov
mov
repz
dec
mov
mov
adc
inc
mov
decl
mov
mov
lcall
mov
subb
faddl
pushf
cmpsb
push
test
lcall
pop
xchg
jb
xchg
loop
push
add
stos
push
outsb
movsb
stos
cmpl
mov
sub
loopne
outsl
lods
cmpsb
lods
lods
out
icebp
cmpsl
fidivs
cmpsb
mov
movsb
mov
jmp
or
cmp
bound
les
inc
cmpsl
inc
mov
int
mov
fcmovne
mov
mov
mov
push
stos
mov
mov
imul
pop
hlt
call
into
pushf
xchg
mov
jl
push
and
xor
mov
add
inc
stos
adc
dec
lock
and
and
adc
mov
jne
or
loopne
outsl
incb
dec
jmp
fsubrs
int3
ja
loopne
adc
pusha
push
sbb
xor
cli
mov
lods
inc
aaa
sarb
in
push
cmpsl
mov
outsl
into
int
jg
xchg
ljmp
aas
popa
rcrb
xchg
call
iret
sbb
mov
inc
jp
shrl
sbb
cmp
das
incl
xchg
repz
in
xchg
sbb
xchg
in
xchg
frstor
ljmp
xor
adc
ljmp
in
inc
xchg
mov
sub
cmp
and
fdivl
loop
outsl
dec
jg
movl
mov
rcrb
lea
sbb
out
std
mov
incl
insl
hlt
adc
call
adc
cmpsl
aas
test
dec
nop
sbb
mov
test
dec
lods
push
pop
jg
jnp
ret
push
sub
pop
sbb
cmpsb
mov
adc
rcrl
cmp
mov
jle
icebp
das
lret
jnp
dec
ja
prefetchw
or
jae
movl
or
fcomip
cwtl
outsl
inc
outsl
push
cld
adcl
push
mov
mov
mov
out
mov
jle
lcall
sbb
mov
addl
pop
pusha
cld
mull
cmp
cmp
aas
das
xchg
adc
sub
pop
clc
or
dec
push
inc
dec
icebp
cmpsb
adc
xchg
jbe
cs
cwtl
pop
fwait
push
std
jo
in
inc
dec
lock
das
dec
leave
iret
cmp
stos
jmp
inc
arpl
aas
imul
adc
push
mov
aaa
pop
in
push
loope
mov
lcall
mov
pop
inc
addb
ds
mov
xlat
loopne
xor
mov
xor
mov
in
mov
jle
inc
sub
in
call
inc
xchg
sbb
xor
jge
decl
in
sub
push
nop
mov
xor
jl
cmpsl
sbb
pop
test
jmp
inc
mov
shrb
dec
pop
mov
cmc
scas
or
and
imul
sub
fsts
js
scas
dec
sarb
std
rcrb
inc
push
pop
xchg
testl
sbb
or
imul
xlat
out
shll
adc
xlat
ficomps
mov
ret
mov
es
add
and
jo
arpl
sahf
jg
jg
and
sahf
push
inc
cmpsb
mov
mov
or
adc
ljmp
movsl
out
xchg
mov
rdmsr
fsts
xchg
push
mov
sbb
fdivl
fbstp
add
add
jae
movsb
push
mov
cmp
ljmp
inc
stc
out
dec
jbe
mov
into
jb
inc
fcoml
inc
clc
fs
jns
stc
lret
push
xchg
inc
and
jmp
push
inc
lcall
mov
lock
imul
ss
test
cltd
xchg
cs
add
call
call
loope
xor
ss
mov
addl
pop
add
dec
addr16
ds
icebp
fiadds
subb
aam
into
mov
xor
jg
mov
mov
sub
ljmp
nop
sbb
sbb
adc
jle
test
sub
adc
ja
jmp
jle
jg
test
and
mov
mov
data16
call
fisubrs
mov
rcll
out
mov
dec
or
sbb
pop
outsb
sti
cli
call
cmp
fucomi
pop
xchg
addr16
push
or
imul
push
push
add
mov
mov
xor
or
clc
insl
les
push
arpl
jmp
xchg
mov
push
push
mov
sub
mov
sbb
xchg
loop
adc
and
or
jno
jnp
inc
fsubp
fcmovbe
jge
fucom
jmp
aam
push
jl
call
test
in
insb
cwtl
push
fwait
imul
jne
leave
in
jmp
pop
dec
pushf
push
insb
flds
decl
or
enter
pop
sub
in
addr16
ret
add
shll
test
pop
decl
mov
lret
cli
mov
mov
stc
inc
int
insb
jecxz
fistps
or
call
cmp
lods
scas
fiadds
cmp
xlat
push
addb
push
fidivs
and
mov
mov
mov
or
or
mov
or
and
outsl
jl
cmpsl
push
sbb
jmp
cmp
shlb
mov
mov
mov
pusha
mov
mov
leave
mov
imul
cwtl
sbb
insl
cmp
xchg
sbb
jmp
add
popa
bound
xor
or
push
xchg
in
in
movsl
jnp
or
rorl
decl
les
mov
in
mov
push
je
mov
jl
fstpl
dec
jae
jl
ljmp
or
dec
gs
popa
pop
lds
mov
xor
mov
movsl
incl
fcoms
insl
sub
hlt
sti
mov
outsb
frndint
push
mov
pusha
mov
lcall
jae
add
and
jno
fadds
inc
stos
inc
or
adc
mov
mov
fildll
mov
data16
xor
lahf
mov
fxch
cwtl
dec
mov
and
xlat
test
cmpsb
mov
pop
rorb
aas
mov
andl
jmp
mov
cld
mov
or
mov
lcall
ja
sti
adc
sbb
or
ljmp
cmp
push
test
push
iret
or
popf
cmc
add
mov
setae
stos
js
mov
movsb
push
ret
bound
jg
addr16
out
ss
loopne
incl
xor
add
sbb
shrl
loopne
fidivrl
cwtl
fisttpll
push
mov
cmp
out
stc
call
mov
aad
mov
push
fadd
les
fcomip
push
cs
push
shlb
mov
dec
daa
or
sbb
add
mov
out
ret
cmp
jl
incl
cld
outsb
mov
mov
mov
inc
sbbw
outsl
shlb
xor
decl
xchg
inc
or
fldl
push
mov
cmp
or
aam
pop
xchg
mov
call
jmp
rcr
sahf
mov
ret
arpl
mov
pushf
std
insl
xchg
or
decl
push
test
lea
addr16
add
push
dec
sbbb
sub
insl
call
mov
sbb
mov
fcmovnu
and
rcl
push
aam
inc
xchg
fnsave
outsb
jle
mov
es
nop
mov
loope
mov
ja
or
add
push
cltd
push
cmp
out
add
pop
jo
jmp
incl
bound
shr
insb
iret
inc
pop
or
js
or
adcl
ret
jmp
popa
das
pusha
push
divl
outsb
ja
push
shrl
es
pop
fdivrl
fdivrs
lock
mov
sahf
lds
mov
jmp
xor
mov
xor
mov
cmpsb
inc
call
ss
stos
ficoms
addr16
cmp
mov
aad
sub
or
mov
rolb
out
jmp
sbb
inc
int
bound
ljmp
lds
ja
inc
test
inc
xchg
aaa
dec
add
jg
push
fxch
push
mov
or
scas
jle
popa
subl
ret
lods
fldenv
adc
incl
out
inc
xchg
shrl
out
jecxz
mov
cli
addl
add
decl
cli
fistl
lret
lcall
insb
sbb
inc
aas
fbstp
pop
push
sahf
push
and
jae
adc
lcall
inc
and
ja
push
call
shl
cmp
andl
scas
stos
mov
cld
call
jo
imul
sub
hlt
pop
or
ss
mov
pop
pop
mov
jo
jno
imul
sub
negl
ret
sbb
jne
pop
jmp
sti
icebp
test
jns
mov
cmp
dec
mov
cmpsl
fdivrp
mov
vmwrite
push
bound
cmp
sbb
imul
inc
pop
jmp
call
ret
lds
cmc
xchg
cmpsl
in
lea
or
cli
bound
inc
mov
insb
adc
outsb
xchg
push
xchg
and
cwtl
push
cmp
test
jmp
cli
rorb
cli
lret
xchg
lea
pop
xchg
jns
sbb
cmpsb
dec
test
lock
out
clc
cmp
ret
fwait
lcall
test
or
xchg
scas
mov
out
lahf
loop
cmpsl
int3
and
mov
loope
dec
aas
shr
pusha
adc
jns
mov
decl
dec
and
das
push
adc
sub
aas
jns
leave
and
mov
or
lcall
je
adc
xor
lods
dec
lea
lahf
jle
xor
out
incb
std
ret
sar
call
cmp
gs
pop
mov
push
cmpsl
gs
sbbl
divb
cli
leave
out
scas
lret
mov
hlt
insb
push
xchg
fnstcw
int
ret
or
adc
inc
and
ds
pushl
daa
ja
subb
inc
jno
out
pop
add
test
pop
mov
call
fldl2e
sub
jle
fcomps
sub
fldl
add
pop
xorl
je
mov
insl
mov
shll
hlt
lds
cmp
adc
cmpsl
xchg
or
xchg
aad
pop
mov
sar
lea
jp
out
subb
sub
dec
lods
pop
pop
sbb
inc
sub
mov
fidivs
loope
lds
mov
gs
or
in
ret
incl
es
scas
mov
sub
int3
cmp
call
imul
lcall
cmp
sbb
mov
pop
adc
xor
xor
mov
loope
scas
imul
test
clc
incl
ss
pop
mov
xor
xlat
dec
sub
int3
mov
pop
xlat
push
push
xchg
adc
decl
and
bound
inc
mov
and
in
insb
pop
into
adc
push
test
incl
jns
shlb
lds
addr16
pop
dec
push
cmpsl
popf
push
adc
add
incl
dec
xor
bound
xor
fdivs
cli
jle
test
sub
aam
lea
dec
xchg
mov
xchg
stc
mov
repz
mov
mov
jg
ljmp
lds
ss
negl
push
aas
sub
jns
jo
dec
movsl
pop
xchg
scas
lcall
inc
mov
daa
or
rorb
bound
out
and
mov
mov
dec
cmpl
xchg
mov
shlb
xchg
lret
adc
cmp
jmp
imul
push
or
or
jbe
or
lock
int3
xor
jb
call
inc
push
cld
test
outsb
std
inc
mov
fdivr
lret
ret
lea
cli
dec
push
test
adc
lock
repnz
test
repz
out
loope
sbb
fs
xchg
push
cmc
sahf
sub
push
pop
inc
cmp
loop
leave
inc
loopne
ja
loope
sbb
lods
in
popa
fwait
out
ffreep
decl
lock
imul
inc
cmpsb
out
jae
xchg
ljmp
jmp
xor
jmp
jp
dec
dec
inc
loopne
sub
leave
xchg
mov
or
mov
mov
xchg
ret
gs
pop
pop
pop
enter
lret
jp
test
add
push
mov
mov
shrl
int3
adc
fstp
imul
mov
cmpsl
fdivr
decl
pop
leave
fsubl
dec
frstor
cltd
and
and
adc
aam
add
pop
cld
pusha
inc
xlat
or
jno
shll
enter
pushl
mov
rorb
pop
scas
fdivl
cltd
mov
dec
sub
call
fwait
inc
orl
or
or
and
inc
push
xchg
test
lret
cmc
pop
inc
lret
mov
xchg
nop
jmp
jecxz
ljmp
in
pop
xchg
xor
xchg
repz
pushf
insl
js
sub
push
clc
rcll
xlat
aam
fs
cwtl
loopne
lea
add
adc
dec
mov
jns
fisubs
mov
or
dec
mov
mov
mov
frstor
mov
inc
dec
idivb
int
inc
mov
pushl
dec
out
mov
icebp
push
addr16
mov
or
stos
pop
cld
mov
scas
mov
cmp
movsb
and
cmpsb
in
xchg
call
add
lods
das
insl
push
xor
jno
sbb
jae
fstps
cmp
mov
xchg
imul
xor
jp
add
adc
and
adc
ljmp
pop
das
ficoml
in
mov
adc
mov
adc
jg
rcl
movl
push
push
test
add
jp
push
sahf
les
pop
scas
jne
add
ljmp
jg
test
adc
or
or
sub
or
dec
es
pusha
daa
mov
mov
and
jecxz
and
mov
and
and
and
fcomip
decl
sub
fsubrs
test
xchg
sub
movsb
add
mov
aad
jmp
jo
sub
pop
adc
pushf
xchg
daa
cmp
sub
inc
dec
cmp
cmp
cmp
roll
xchg
xor
scas
test
pop
lahf
aaa
leave
jnp
or
icebp
xor
pushl
xchg
xor
rcrl
xor
mov
inc
outsl
insl
cld
ja
sub
insb
jmp
ds
jg
ljmp
push
stos
push
ljmp
xbegin
arpl
adc
jmp
data16
adc
xor
jge
jb
xor
pop
add
jmp
pop
jo
mov
jne
popf
in
je
neg
add
dec
xorb
mov
jl
mov
push
mov
out
roll
jnp
int3
push
jp
cmpsb
arpl
js
sbb
jns
jb
add
sar
ljmp
mov
mov
into
push
movsb
outsb
stc
add
js
push
sub
dec
add
lods
mov
push
lods
and
sbb
jmp
add
push
jbe
aas
inc
add
sub
inc
pop
cmp
add
stos
pop
mov
les
dec
push
sbb
add
cmpsl
mov
incl
dec
int
or
cmpxchg
add
punpckldq
gs
add
push
add
testb
cld
incl
pushf
xor
inc
fimuls
addl
pop
pop
fiaddl
xor
incl
addr16
or
mov
mov
out
add
xchg
push
enter
add
fwait
mov
rcl
cmp
orb
mov
nop
mov
ljmp
add
mov
fldl
pop
fbstp
cmpsl
arpl
push
add
movsl
xor
add
jg
sbb
inc
jno
and
enter
lods
add
clc
pushl
into
outsl
add
jg
rclb
sbb
sti
js
rcrb
cld
das
clc
lcall
popl
dec
and
xor
pop
add
cmp
dec
xchg
rolb
push
cmp
in
pop
enter
loop
in
pushl
xchg
and
loopne
add
dec
pop
mov
sub
add
pop
ja
add
mov
push
mov
clc
mov
add
sahf
push
dec
add
ljmp
cmc
or
xchg
cld
rcrb
lret
dec
jb
mov
add
sbb
fsubr
clc
ljmp
jg
add
inc
sbb
inc
and
hlt
xchg
push
dec
call
cmp
ljmp
sbb
not
add
jbe
push
lret
add
pop
loope
ret
pusha
test
mov
mov
mov
or
fistpll
cs
xchg
jle
loopne
test
dec
das
push
cmp
dec
imul
or
push
sub
mov
outsl
cwtl
cmc
add
pop
icebp
call
jle
fidivl
sbb
icebp
mov
inc
sub
mov
jecxz
mov
decl
mov
xlat
jg
aam
js
insb
outsb
pop
hlt
add
testl
call
aas
mov
xchg
pop
orb
push
repz
pop
mov
decl
fistps
iret
mov
in
mov
fwait
pop
adc
jo
add
lock
mov
add
xorb
inc
out
xchg
aas
mov
cli
out
cld
ds
jb
sbb
lret
mov
mov
incl
call
das
push
push
mov
push
add
addb
ds
ljmp
xor
and
scas
int3
pop
mov
add
pop
mov
stos
in
pop
add
incl
in
sbb
add
xchg
add
xor
out
mov
call
in
sahf
aam
push
stc
mov
jge
push
pop
lds
cmp
xor
add
push
xchg
or
cmpsb
insl
add
loope
cli
cld
sbb
call
cmc
dec
dec
add
and
push
jne
adc
js
xchg
fstps
dec
aas
dec
scas
add
inc
movsw
incl
or
cmp
mov
and
repnz
xlat
jle
add
loopne
mov
cmp
mov
add
inc
fldcw
mov
stos
test
fbstp
ljmp
stc
popa
gs
jg
jg
clc
mov
rcr
mov
ss
dec
lcall
dec
cmp
jnp
adc
loope
add
fxch
aad
mov
adc
movsl
jbe
aaa
adc
and
daa
data16
jp
iret
scas
xor
test
mov
and
sbb
cmp
add
icebp
mov
and
jmp
lea
push
das
jns
mov
lods
es
adc
xchg
add
jbe
inc
jmp
add
lock
bound
imul
daa
ss
pushl
imul
push
mov
cld
add
jno
lret
loope
ja
mov
out
mov
add
aas
out
inc
addl
jmp
jmp
ds
add
ds
inc
add
mov
stos
xorl
add
inc
cmp
xorl
pop
add
mov
decl
add
push
in
test
orl
ret
jmp
cmp
arpl
cltd
in
leave
mov
push
outsb
add
push
cmpsl
rcr
pop
loopne
inc
add
outsl
fisubrs
sarl
xor
inc
or
jmp
mov
push
add
pop
sub
ret
scas
addr16
cmpsb
add
mov
pop
mov
jp
pop
mov
popa
xchg
and
jg
and
std
pop
shll
loopne
or
cli
add
popa
or
out
adc
add
and
push
cmc
add
rorb
mov
jmp
outsl
gs
gs
loopne
popa
test
loopne
push
cmpsb
jmp
cmp
divb
repz
scas
mov
adc
in
push
jp
adc
pusha
lods
and
add
popa
pop
repz
stos
jae
test
cmp
xchg
adc
out
jecxz
mov
lcall
lcall
pop
popf
sbb
in
insl
lods
sub
out
lea
imul
adc
and
repz
test
xor
mov
sbb
test
dec
repz
mov
icebp
jno
repz
mov
rcll
adc
mov
dec
repz
addl
xor
mov
push
xor
repz
outsb
scas
cs
repz
repz
mov
divb
repz
mov
push
xchg
push
xor
repz
data16
es
repz
repz
xchg
cli
jp
repz
mov
sbb
adc
xor
push
mov
inc
lret
sbb
cmp
or
jb
xor
adc
add
loop
fcomps
pop
insl
mov
inc
push
xorb
cmpsl
icebp
xchg
sub
mov
add
insb
mov
inc
push
lods
add
add
out
sbb
mov
add
idivl
sbb
aam
push
sbb
xchg
add
add
mov
and
push
les
mov
add
push
clc
add
imul
jnp
add
add
add
sbb
push
call
test
sub
mov
add
add
ficomps
push
lock
add
out
jnp
rolb
add
mov
pusha
sbb
mov
push
jnp
mov
push
addb
js
incl
mov
sbb
and
scas
sbb
lcall
xlat
xchg
out
lcall
mov
fistpl
adc
fwait
mov
xor
jl
movsb
add
insl
dec
inc
fmull
pop
pushf
push
sbb
rolb
idivl
out
stos
jo
sbb
std
int
xor
in
cmc
in
jmp
xor
out
mul
sbb
sar
ljmp
stos
hlt
add
jb
call
les
add
sti
add
add
pop
inc
pop
pop
testl
insl
jl
or
or
or
and
or
mov
fisttpl
repz
aas
add
add
or
add
add
add
add
ltr
add
jbe
or
in
adc
adc
push
ds
data16
or
sbb
scas
out
std
insb
test
or
sbb
jecxz
scas
je
cwtl
add
daa
repnz
add
shll
lock
sbb
sbb
test
fnstenv
jnp
adc
adc
test
adc
inc
adc
add
mov
or
clc
notb
or
adc
cmc
adc
add
aaa
fbstp
std
adc
pop
sti
sbb
sbb
cld
pushl
cmpb
mov
mov
mov
icebp
mov
out
jmp
sbb
jecxz
xlat
cmp
mov
pop
outsb
je
mov
pop
jg
aas
cwtl
icebp
push
xor
pop
push
mov
jno
xor
aas
icebp
add
xor
icebp
add
add
dec
sbbb
lea
jge
pop
xchg
push
add
push
xor
or
popa
xor
sbb
add
and
add
mov
add
push
daa
dec
push
inc
out
outsb
push
mov
xor
mov
imulb
or
or
and
mov
add
lret
loopne
cmp
mov
nop
xchg
add
pushf
je
shr
push
std
xor
jo
out
mov
out
mov
outsl
data16
ds
and
jbe
mov
adc
push
loopne
movb
adc
push
add
in
jo
dec
jo
test
xor
loopne
fistpll
mov
out
add
push
fidivs
mov
pop
mov
mov
cmp
addl
incb
push
decb
add
clc
adc
sbb
and
xor
inc
add
pusha
icebp
adc
aas
in
mov
ss
adc
sub
lcall
sub
add
imul
push
xor
lcall
dec
fs
mov
scas
jge
push
popf
std
add
cld
push
sti
xchg
ja
and
or
ds
bound
les
or
pushf
and
and
insl
out
mov
stc
filds
sub
mov
mov
push
scas
add
in
enter
xchg
add
mov
fistpl
mov
sub
push
outsl
and
std
cmp
xchg
outsb
push
pushf
divb
xor
xor
shrl
inc
jle
add
add
out
adc
lea
loopne
push
xchg
es
decl
ja
inc
rcll
xchg
inc
inc
dec
mov
ljmp
dec
dec
mov
dec
push
scas
push
mov
pop
popa
bound
imul
mov
mov
mov
jp
xor
xor
xor
sub
idiv
in
ja
popl
jae
mov
js
jp
and
push
mov
insb
outsl
push
ds
mov
mov
mov
dec
int3
scas
push
stos
push
aas
pop
pop
movsl
pop
pop
pop
mov
pushf
fldcw
fcomps
outsl
cmpsl
jg
fucomi
es
push
xchg
cld
jo
mov
mov
sahf
imul
outsl
ss
add
into
adc
adc
fcomps
jle
mov
push
push
mov
or
cmp
std
jns
jge,pt
mov
pop
lds
sub
pop
enter
xchg
or
add
adc
push
mov
sti
jmp
push
pop
add
add
add
cmp
push
add
push
add
push
add
add
push
add
push
add
dec
add
inc
incl
fildl
dec
add
dec
pop
add
pop
xor
movl
fcomi
incl
inc
add
inc
add
inc
add
fldl
lcall
inc
filds
aas
mov
out
add
add
add
call
add
add
ljmp
cs
sti
sub
lret
pop
add
add
and
jo
and
bound
pop
adc
jg
rcrl
pop
sbbb
pop
add
add
add
out
mov
adc
test
inc
pop
lret
jno
add
mov
flds
pop
add
xor
sub
add
add
dec
add
jp
lret
mov
inc
add
add
add
daa
mov
add
add
and
insb
push
xor
add
mov
fwait
insl
add
mov
lcall
loope
push
add
add
pop
add
mov
int
push
add
mov
add
inc
add
mov
insb
fadds
cmp
add
add
add
inc
mov
add
add
xor
add
fdivs
push
add
add
or
sub
incb
jb
add
add
mov
add
add
ss
repnz
sub
add
or
imul
or
push
imul
mov
pop
add
pop
add
xor
xor
lods
pop
add
xor
lcall
repnz
mov
xor
movsl
xor
cmpsl
xor
xor
jecxz
push
add
xor
call
out
push
add
xor
cld
xor
mov
xor
xor
test
dec
add
xor
decl
stos
xor
lods
xor
scas
xor
mov
inc
add
xor
xor
mov
inc
add
xor
incl
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
cmp
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
pushl
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
ljmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
decl
and
xor
add
sahf
add
sbb
inc
add
and
cmp
incl
cmp
and
cmp
and
push
cmp
sub
ss
sub
incl
xor
sub
xor
sub
push
xor
xor
cs
xor
incl
sub
xor
sub
xor
push
sub
cmp
es
cmp
incl
pop
add
inc
push
sbb
add
inc
push
sbb
inc
push
sbb
incl
pop
add
dec
push
adc
add
dec
push
adc
dec
push
adc
incl
syscall
push
push
push
add
push
push
pop
push
sbb
sub
lds
inc
pop
push
push
pop
push
sub
pop
bound
jb
push
adcb
push
push
lds
mov
push
ret
add
insl
fwait
ret
sbbb
push
and
insl
adc
add
hlt
rolb
loop
add
adc
pop
add
or
or
push
sub
xor
add
or
or
bound
mov
cli
add
aas
push
repnz
rclb
ret
add
or
push
lret
add
or
rcr
inc
mov
ljmp
or
mov
lret
sub
ficompl
push
add
cli
jp
mov
loopne
cmp
and
ret
mov
ret
loopne
sub
ljmp
mov
test
push
sub
cmp
push
stos
and
lret
push
inc
ret
xchg
add
mov
fdivl
add
push
sbb
rcrb
push
pop
ret
xchg
mov
adc
insb
fdivs
add
loop
adc
add
mov
push
add
adc
jb
push
jbe
jo
adc
and
push
xor
push
mov
cs
loop
pop
xchg
popa
adc
mov
test
lcall
decl
mov
add
mov
pop
pop
mov
pop
pop
mov
stos
push
incl
pop
pop
stos
add
mov
stos
add
add
push
incl
test
push
pop
adc
cli
pop
lods
push
pop
scas
aad
scas
pop
mov
scas
lcall
add
int3
add
int
pop
mov
pop
mov
inc
pop
into
add
pop
xchg
add
push
ljmp
add
pop
xchg
add
pop
xchg
push
xchg
lcall
jp
cwtl
rolb
cltd
add
pop
fwait
add
pop
pushf
add
pop
popf
add
pop
ljmp
pop
lahf
loop
mov
sub
fidivl
pop
movsl
lcall
jmp
pop
test
es
test
add
pop
mov
sbb
mov
sbb
mov
sbb
mov
clc
fbstp
pop
pop
mov
adc
pop
mov
add
mov
adc
mov
add
pop
inc
add
pop
roll
pop
ret
add
ret
pop
les
or
lds
or
movb
pop
movl
incl
add
mov
pop
or
pop
or
and
and
pop
decl
add
push
or
and
cmpsb
and
and
popf
and
sahf
and
decl
mov
and
lods
and
and
pusha
and
and
sub
aas
or
ds
ljmp
or
and
shlb
aaa
or
or
xor
aam
xor
shlb
xor
popa
std
jmp
sub
sbb
and
or
and
or
and
or
and
or
and
fildl
or
xchg
enter
push
xchg
and
push
and
jg
or
pop
or
and
sbb
or
sbb
or
push
sbb
push
or
and
or
and
adc
and
adc
cmp
mov
or
and
or
or
mov
and
and
or
sub
pop
or
pop
or
and
outsl
cli
pop
or
and
pop
or
pop
or
outsl
and
and
push
or
push
or
and
and
mov
and
and
or
or
dec
or
dec
or
mov
or
dec
or
dec
or
inc
mov
inc
or
and
sub
inc
or
add
clc
decl
sub
cmp
pop
and
or
or
cmp
pop
and
or
xor
jg
xor
shll
or
and
das
or
and
or
and
or
lcall
and
or
and
or
and
push
daa
and
lods
and
and
mov
fwait
or
iret
sbb
scas
and
or
sar
and
sbb
mov
sbb
and
or
and
push
or
sahf
adc
arpl
adc
adc
gs
sub
and
daa
or
pop
push
jge
andb
outsl
es
inc
sbb
inc
sub
hlt
stos
les
push
es
or
lds
std
and
or
and
mov
cmp
pop
or
add
jle
icebp
mov
aas
or
and
mov
nop
mov
cmp
pop
add
or
and
or
sub
or
sub
or
rcll
rolb
ljmp
mov
clc
pop
and
or
add
sbb
or
incl
sbb
add
pop
or
add
adc
or
incl
adc
add
loopne
push
or
add
or
jecxz
jbe
lock
or
add
out
xchg
pop
or
push
js
ljmp
fwait
decb
pop
or
pop
pop
or
pop
fdiv
fwait
jbe
push
pop
jo
push
or
push
push
push
fldt
push
push
or
push
push
or
push
push
or
adc
decl
dec
or
adc
dec
or
adc
dec
or
push
push
dec
or
sbb
decl
inc
or
sbb
inc
or
sbb
inc
or
push
push
inc
or
and
ds
and
cmp
inc
cmp
cmp
ljmp
cmp
push
ss
sub
xor
sub
xor
pushl
or
cs
xor
xor
cs
xor
sub
xor
sub
ljmp
or
ss
sub
cmp
cmp
lock
call
cmp
and
push
pop
or
inc
push
sbb
or
decl
inc
push
sbb
inc
push
pop
or
dec
push
adc
or
insl
sar
dec
push
adc
push
call
push
mov
fwait
jbe
or
push
pop
or
push
or
or
pop
push
pop
cmp
pop
dec
xor
push
sub
xor
xor
xor
xor
insl
cmp
pop
cmp
push
xor
xor
mov
lcall
aas
xor
xor
mov
imul
fiaddl
ljmp
inc
xor
addb
xor
dec
xor
sub
mov
dec
xor
xor
xor
xor
addb
dec
xor
lods
mov
push
xor
xor
xchg
repnz
xor
push
xor
fdivs
and
xor
inc
pop
xor
sbb
insb
push
pop
xor
xor
pusha
or
xor
xor
xchg
ret
shlb
loop
adc
push
lods
fdiv
test
adc
lds
inc
scas
adc
adc
pop
mov
mov
jb
adc
adc
mov
mov
adc
mov
shlb
inc
mov
mov
loop
adc
xor
fdivs
adc
xor
jbe
mov
rclb
shlb
add
xchg
insl
xor
pop
adc
js
push
jg
rolb
push
xchg
add
add
sub
xor
adc
adc
cs
mov
lods
mov
push
add
push
add
js
pop
and
and
mov
mov
mov
and
and
outsl
outsb
push
and
push
jle
jmp
jns
add
push
div
sahf
out
sahf
repz
in
in
int
jns
add
add
repz
fisubrl
cmp
fsubrs
cmp
test
lahf
fdivp
cmp
pushf
sahf
push
rcrl
lock
jnp
push
rclb
jae
fbstp
repnz
cmp
cmp
cs
push
mov
cmp
repz
iret
fisubrl
fsubs
iret
repz
arpl
gs
leave
repz
frstor
push
sarb
out
pusha
rcll
push
out
sahf
out
push
xchg
push
xchg
dec
repz
push
xchg
push
nop
add
lahf
mul
cmp
mov
stos
dec
out
add
add
add
fwait
stos
dec
push
lcall
imul
xchg
inc
sub
sub
and
int
dec
add
data16
shll
outsl
int
mov
mov
add
xchg
push
xchg
sbb
dec
repz
xor
xor
xor
repz
jle
jge
jl
xor
repz
sub
sub
int
repz
push
addb
stos
sbb
fwait
cmpsb
add
pop
sbbb
pop
push
cs
jnp
stc
pop
addb
pop
or
movsb
or
mov
add
push
mov
fisttps
or
and
add
sub
sub
push
test
add
fwait
data16
decl
jno
jae
jne
ja
xchg
orb
pop
lahf
imul
cmpl
and
pop
add
incl
jmp
jg
sti
add
les
repnz
pushl
mov
mov
shll
add
or
jg
pop
add
push
aad
leave
add
jnp
out
or
repz
ja
hlt
adc
adc
sbb
sbb
push
pop
inc
in
xlat
sub
sub
ljmp
jo
pop
pop
adc
push
cld
or
jnp
pop
jg
mov
xchg
mov
icebp
lea
xchg
imul
fwait
arpl
dec
sar
mov
movsl
cmpsb
cmpsl
push
test
scas
dec
mov
mov
decl
mov
inc
mov
mov
add
ret
cmp
mov
leave
add
lret
xor
into
iret
das
call
std
sbb
aad
xlat
daa
mov
fstp
fistps
loope
loop
fcomip
das
clc
sbb
out
pop
into
ljmp
icebp
xor
or
div
inc
mov
sar
add
jmp
pop
lcall
pop
add
jg
pop
mov
add
add
loopne
push
cmpsl
pop
bound
and
pop
ds
dec
incl
daa
popa
mov
push
imul
adc
mov
mov
jne
sbb
pushf
ja
or
add
jg
or
fwait
repnz
ljmp
and
pusha
add
pop
sti
popa
pop
push
popa
fsubs
loop
out
cmpsb
or
inc
pusha
or
addb
sbb
add
cli
sbb
in
adc
sub
add
sub
adc
push
std
add
add
aas
push
add
scas
iret
div
and
add
add
xchg
mov
and
mov
dec
loopne
outsl
jbe
out
mov
or
add
pop
sub
jo
sti
sub
cmp
sahf
push
mov
or
add
add
jne
cli
lock
and
add
outsl
into
pop
sub
inc
repnz
or
push
in
mov
xchg
test
fisttps
add
push
hlt
push
dec
mov
inc
vpackssdw
ljmp
inc
mov
mov
sar
repz
sbb
or
repz
dec
push
dec
loopne
sahf
test
mov
push
daa
push
pop
cs
mov
mov
add
pop
mov
scas
sub
pop
aad
cmp
mov
ljmp
movsb
adc
mov
inc
cmp
xor
test
mov
stos
mov
pop
dec
push
jno
mov
adc
in
pop
bnd
jg
orl
inc
mov
push
cmp
cmp
adc
cmp
or
bound
dec
pop
push
cmp
or
mov
outsb
ja
inc
ss
cmp
cmp
cmp
sub
cmp
cmc
cmp
and
sarl
lods
rclb
and
jae
in
lcall
jmp
int3
imul
sub
inc
push
cmp
les
cli
fwait
mov
cmp
xor
push
pop
in
push
lds
ss
jbe
sub
fnclex
sahf
jge
mov
sti
cmp
je,pt
cmpl
adc
xchg
arpl
xchg
ret
add
jg
outsl
adc
and
sbb
cmpl
cs
adc
jecxz
and
sarl
xor
ret
aas
inc
adc
fcomip
pop
sub
pop
filds
jo
push
jl
jle
pop
inc
std
in
outsl
push
bound
int3
xlat
les
aas
aam
and
in
sbb
mov
cmp
mul
pusha
ljmp
imul
insb
sub
bound
icebp
mov
dec
inc
std
pop
lock
xor
call
or
imul
aaa
add
dec
push
pop
inc
dec
lds
enter
pop
loopne
rcrb
sti
xor
jmp
sbb
sub
mov
divb
lret
xor
mov
pusha
lods
xor
pop
jl
and
sbb
fcmovnu
pushl
roll
jge
das
jno
xor
sub
fcoml
sbb
pop
loopne
cld
in
xor
xor
sub
test
mov
or
dec
es
jg
mov
push
es
mov
fidivs
insb
xor
std
xorb
xor
pop
xor
add
roll
or
fcomi
push
xor
jae
add
push
sbb
push
xor
repz
xor
cmp
mov
xor
cmp
icebp
inc
jg
decl
dec
gs
pop
leave
faddl
jnp
and
xor
xor
in
outsl
inc
sbb
in
xor
xor
adc
xor
xor
xor
filds
ret
lcall
sbb
mov
fnstsw
sahf
incb
mov
inc
or
xorb
lock
pop
cmp
cmp
cmp
mov
stos
jno
add
mov
jl
dec
mov
test
pop
jo
in
xor
mov
ret
jl
xor
enter
ljmp
cli
or
aas
jns
ret
call
add
mov
mov
pop
das
fiaddl
ja
nop
cmp
int3
cmp
cmp
idivb
adc
ljmp
ljmp
mov
data16
rclb
mov
aas
outsl
out
push
push
mov
sbb
push
push
jno,pt
movsb
adc
fdivrs
and
push
stos
pop
add
add
insb
shlb
mov
addr16
scas
das
fsubrl
xor
cld
add
adc
xchg
xor
test
cli
sub
jns
frstor
pop
push
pop
sub
cli
fwait
jle
pop
sbb
es
aaa
cmp
nop
ss
cmp
cmp
fbstp
ja
repnz
inc
jmp
je
mov
std
call
fstpt
jbe
pop
cmc
add
sub
add
xorl
jno
dec
xor
xor
mov
pushf
push
das
push
jmp
imul
aaa
sub
pop
cmp
pop
add
jl
xchg
xor
mov
incl
add
xchg
cmpb
and
pop
in
xlat
sub
cmp
and
imul
in
sub
xchg
adc
cld
pushf
add
ja
mov
cmpb
popa
add
out
daa
inc
push
frstor
add
test
push
add
iret
aas
xchg
cmp
mov
mov
adc
xlat
cmp
stos
adc
les
out
out
lock
std
push
and
in
mov
jb
std
push
pusha
add
rcrl
mov
xor
cmpb
sub
pop
movsb
xor
loopne
lds
clc
dec
cmp
add
in
sub
mul
add
jmp
ret
add
push
inc
pop
mov
jns
xchg
aas
mov
mov
add
push
fwait
mov
pop
movsb
je
lcall
pushl
fdivs
pusha
popf
sub
les
jmp
fwait
add
icebp
aaa
cld
jno
dec
fadds
in
stos
lds
xlat
or
pop
in
andb
push
arpl
xchg
and
inc
scas
cmc
xchg
and
mov
addr16
lret
pushf
xchg
stc
inc
or
mov
jl
mov
push
inc
jl
inc
xor
dec
daa
adc
mov
movb
pop
lcall
rcll
loop
sub
push
repnz
cmp
cmpb
pop
mov
and
push
icebp
adc
data16
or
adc
add
dec
in
movsl
out
sar
mov
hlt
ss
les
stc
mov
push
roll
call
jb
outsl
mov
stos
fdivl
gs
ljmp
xlat
sbb
adc
jae
push
dec
loopne
adc
lock
add
clc
mov
add
and
hlt
adc
xchg
inc
jle
cmp
mov
and
xchg
mov
inc
leave
fwait
out
add
loopne
cmp
inc
adc
mov
cld
add
jb
and
add
push
stos
lock
dec
aam
jo
sub
add
add
add
add
add
lock
add
push
cld
add
add
mov
push
push
loope
add
mov
rep
std
add
pop
imulb
das
xor
jb
adc
jo
lret
ret
and
pop
ss
add
or
insl
xlat
les
stos
xor
mov
sbb
add
xchg
je
cmp
lcall
jnp
in
push
subb
adc
sub
pop
call
sbb
fisubs
add
adc
es
mov
adc
test
scas
and
xchg
lods
pop
fdivrs
andb
movl
or
cmpsb
push
and
jle
inc
lock
add
movsl
add
arpl
xor
pop
mov
xor
andb
add
push
and
add
adc
push
sbb
sub
cmpsl
or
mov
stos
push
inc
adc
add
xor
dec
mov
mov
roll
jmp
test
out
or
add
arpl
cld
add
inc
mov
dec
test
jecxz
ret
push
sbb
dec
dec
push
add
inc
add
imul
push
addb
sbbb
or
mov
jo
or
xchg
and
xchg
jbe
mov
push
int3
les
or
add
push
add
subb
mov
imul
fidivrl
scas
mov
dec
fldt
scas
inc
jg
add
jns
cmp
pop
adc
add
inc
mov
jmp
aad
testl
pop
pop
xchg
xchg
nop
dec
sti
shrl
or
andb
out
jae
xor
sbbb
int3
jg
jnp
imul
cmpb
or
push
rorb
rolb
mov
inc
scas
stc
add
ljmp
scas
sbb
inc
xchg
xor
adc
adc
pop
adc
mov
mov
lret
out
xlat
fldl
mov
push
adcl
pop
pop
sbb
insb
inc
add
scas
xor
adc
add
sub
sbb
repz
jae
leave
inc
insb
scas
inc
rclb
dec
mov
mov
loop
mov
jmp
clc
cmpsb
insl
nop
adc
pop
or
dec
in
xor
push
or
or
inc
mov
dec
push
jo
push
stos
shll
sbb
sub
sub
ljmp
cltd
push
ss
mov
shrb
stos
jnp
das
cmp
int
imul
cmp
sarb
lahf
mov
xchg
ja,pn
pusha
rolb
insb
shlb
in
and
aam
dec
or
or
pop
fldt
or
sbbb
mov
div
push
shlb
rcrl
cmp
popf
adc
iret
mov
sbb
sbb
das
adc
add
mov
divb
cld
rorb
decb
xor
loopne
jecxz
add
jmp
jnp
pop
inc
loopne
nop
inc
loopne
pop
jg
aad
push
adc
xor
ficompl
dec
sub
cmc
loopne
aaa
adc
lahf
out
filds
cmp
push
dec
loopne
pop
push
xor
add
push
shlb
loope
push
fwait
mov
pop
jmp
test
cmpsl
add
stos
es
sbb
div
fs
sarl
loopne
or
in
mov
cld
pop
sti
imulb
loopne
add
movsb
adc
add
test
sub
pop
loopne
dec
mov
fistpl
adc
pop
inc
or
loopne
dec
fwait
mov
sub
inc
push
push
pop
sbb
lods
xor
lret
leave
fiaddl
fwait
cmpsb
jg
add
imul
xor
cmp
aad
jecxz
adc
push
or
mov
fs
punpcklbw
loopne
cmp
ds
loopne
inc
pop
pop
fisubrl
js
loopne
sbb
mov
push
jg
pop
jnp
inc
into
dec
or
jle
or
loopne
call
sbb
loopne
out
cmp
loopne
stos
int3
push
ljmp
std
and
add
loopne
push
mov
lock
mov
and
add
adc
xor
dec
xchg
mov
add
loopne
inc
inc
es
cmpsb
jle
icebp
stos
loope
jge
dec
adc
rcr
aam
stos
fadd
adc
xor
ret
push
pop
clc
sbb
ret
iret
sub
sbb
loopne
cld
or
add
aam
mov
je
xorl
popa
movsb
and
stos
mov
jge
add
stos
jmp
iret
mov
es
sbb
jbe
fwait
push
cld
popa
or
mov
inc
loopne
das
fidivrl
mov
loope
push
or
jnp
inc
loopne
push
loopne
popf
imul
xchg
jb
and
add
xchg
stc
adc
iret
fcoml
sub
add
hlt
ficoms
int
push
push
push
loopne
xchg
es
inc
int
insl
sbb
add
or
push
clc
add
mov
scas
sub
pop
mov
fucom
inc
sbb
mov
sbb
addr16
ret
flds
fsubrs
faddp
mov
cld
loopne
mov
lds
fbstp
jmp
push
jo
incb
aaa
add
lock
or
ja
push
or
int
and
inc
cmp
lock
mov
pop
shll
jae
push
jo
sbbl
dec
repz
sbb
mov
ret
mov
test
cld
jo
push
sbb
lock
out
repz
js
add
sub
adc
test
inc
mov
inc
add
push
outsb
nop
inc
bound
pusha
cld
lcall
decb
mov
add
mov
inc
mov
add
repnz
call
ljmp
or
dec
shl
jmp
cmc
inc
and
leave
xchg
add
daa
fcomip
pop
std
sub
inc
xchg
das
xor
mov
jne
sub
push
test
cmp
add
lcall
xorb
sub
hlt
mov
sub
leave
adc
bound
dec
mov
lahf
jle
lcall
or
rclb
shrb
sar
mov
testb
pop
inc
pop
pop
addb
outsl
leave
stos
movsb
pop
mov
mov
sarb
not
sti
xchg
cmp
sbb
push
fcomip
cs
pop
imul
insb
lret
add
push
push
cld
popa
lahf
aam
xchg
mov
jge
addl
inc
imul
mov
push
pop
cmp
add
gs
std
sti
push
jg
rcll
add
leave
cmpsl
xchg
inc
ja
add
xchg
jno
adc
adc
outsb
popa
sbbl
adc
pop
fbstp
btr
add
lods
xor
add
or
mov
fistl
inc
adc
add
cmp
clc
mov
outsl
arpl
fs
mov
mov
popa
mov
bound
jb
add
add
and
gs
push
sub
gs
fs
sbb
in
mov
inc
jb
lcall
jne
push
dec
xchg
outsw
lods
fidivrl
int3
push
ss
arpl
mov
push
lods
pushl
call
gs
fwait
push
je
lea
je
push
ljmp
dec
nop
popa
or
mov
inc
lcall
popa
outsb
fwait
insb
test
rcl
push
clc
imul
mov
push
imul
je
sbb
mov
or
js
in
and
mov
inc
je
jo
das
das
ja
mov
bound
pushf
outsl
insl
das
xor
js
mov
nop
mov
arpl
dec
add
xor
fisubrl
pop
xor
cmp
inc
fsubrl
push
jbe
push
pusha
loopne
xchg
lcall
ret
jmp
push
mov
sbb
jno
mov
xor
ss
mov
nop
insb
add
push
add
mov
fs
lea
je
add
and
cld
ljmp
xor
sub
insl
and
fldl
mov
gs
mov
incb
mov
cmpsb
mov
pop
cmpsl
mov
dec
mov
or
jmp
add
rclb
cli
les
sbb
inc
aaa
out
cli
inc
in
xor
lock
add
adc
or
out
pop
or
loopne
mov
test
loop
pop
inc
dec
test
push
cmp
decl
push
dec
add
gs
and
int
cmc
jns
jae
or
addl
fadd
imul
stos
push
mov
cmpsb
loopne
mov
mov
mov
notb
dec
movsb
test
arpl
add
lcall
sub
leave
and
daa
out
add
inc
sub
les
cmp
add
cld
clc
add
std
push
enter
repnz
fstl
pushl
add
dec
xor
add
dec
shll
mov
cmp
fsub
xor
iret
icebp
loopne
daa
and
aas
fisttpl
sub
push
dec
inc
push
or
cld
add
inc
pusha
imul
popa
jle
mov
pop
js
jnp
imul
add
pop
imul
shr
in
inc
push
cmpsl
inc
inc
inc
sub
aaa
aam
ret
into
and
je
ffreep
icebp
loop
stos
sbb
repnz
pop
xchg
dec
adc
or
incb
stos
repnz
cld
std
ja
jo
ret
aas
ror
cltd
and
add
fidivrs
and
and
sub
call
fnstcw
and
lds
cmp
and
add
lcall
mov
add
xor
xchg
cmc
in
pop
sahf
xor
fdivs
adc
sarl
sbb
orb
ds
clc
pop
sbb
rolb
paddsb
ret
data16
mov
sub
lret
data16
ds
lock
cld
shlb
cmp
aas
dec
cmp
sub
inc
cld
inc
pop
dec
mov
mov
jmp
pop
or
pop
inc
pop
in
push
cmp
test
push
dec
add
lahf
jmp
sahf
bound
and
les
insl
sub
cld
push
add
push
hlt
inc
push
sbb
fcomip
add
fsubs
pop
mov
inc
inc
xchg
ljmp
inc
add
loopne
push
jae
sbb
push
testb
push
icebp
sbb
mov
ret
fbld
lret
cltd
mov
jmp
fcompl
pop
sbb
int3
push
push
loop
adc
jecxz
mov
in
adc
inc
or
add
aaa
std
pushl
int
ret
mov
xor
cmp
daa
mov
mov
pop
xchg
ret
fcmovu
pop
adc
mov
cwtl
addr16
jmp
jne
das
pusha
add
outsl
sub
je
add
jo
jg
jbe
add
jp
jo
dec
loopne
icebp
scas
les
sbb
jecxz
jle
repz
add
sbb
sar
or
push
negl
sbb
or
cmp
sti
scas
adc
outsb
stos
decl
jmp
in
in
lock
rcrb
in
out
push
sbb
hlt
std
icebp
adc
in
and
hlt
loopne
add
hlt
movsl
mov
ret
aad
into
ret
faddp
xorb
iret
fsts
shrl
add
or
pop
cltd
jbe
pushf
nop
sahf
lock
cli
jmp
cltd
andb
mov
data16
xor
lret
into
sub
or
xlat
and
jmp
mov
cmc
cmpsb
lcall
mov
lods
mov
cmp
cli
fildll
and
xor
sub
adc
test
out
ljmp
mov
fistps
in
repz
testl
adc
test
jo
call
push
iret
mov
ret
jmp
mov
dec
int3
add
aaa
loop
fiaddl
sub
ljmp
jl
dec
push
add
out
clc
sub
out
and
stos
loop
mov
outsl
xchg
cmp
test
mov
sahf
or
jg
fcomip
out
and
out
in
add
push
push
inc
mov
ljmp
sub
inc
imul
push
test
push
dec
add
xor
cmc
fcomp
lock
pushl
int3
sbb
aaa
inc
aas
jo
add
int3
jecxz
and
rorb
in
mov
insb
fld
jmp
clc
vmovaps
xlat
fnstenv
out
ss
clc
or
xor
aad
ds
pusha
cmp
das
sub
fdivs
sbb
into
sub
cmp
cmp
es
out
fldl
faddp
sub
ljmp
xchg
lods
add
cmpsl
lock
or
ds
or
or
shll
lcall
mov
mov
push
fcomps
jns
fs
pop
repnz
hlt
lock
cmc
cmc
cmp
js
jns
ja
decl
pushf
arpl
xchg
mov
aas
pop
lret
fmul
inc
mov
filds
dec
dec
imul
clc
xchg
push
imul
xchg
push
pop
dec
mov
push
push
jle
test
mov
xchg
mov
pop
cmpb
inc
mov
cmpsl
add
lock
jnp
mov
subb
mov
fwait
lahf
outsl
subl
fldenv
jae
jno
jne
insb
out
cli
mov
std
push
out
call
rol
shll
fcmovbe
leave
insl
hlt
mov
incl
rol
add
out
add
jmp
push
repnz
fnclex
in
mov
lock
scas
mov
lods
scas
sbb
aam
cmove
ja
nop
pushf
packssdw
jmp
push
repz
imul
stc
std
and
lock
insb
push
push
out
andl
test
scas
insl
es
jp
aas
js
mov
push
out
pushl
imul
decl
dec
inc
pop
mov
pop
pop
test
mov
sti
mov
push
insb
insb
sbbl
in
mov
hlt
cmc
hlt
or
lock
mov
cmp
cmp
jl
sub
dec
cli
mov
pop
mov
fcmovb
cmp
js
fcmovne
xor
je
xchg
les
das
xor
sub
je
sub
add
mov
mov
sti
in
aas
jns
xchg
andb
xchg
pop
sub
shll
call
ret
xor
cs
cmp
dec
inc
push
stos
inc
push
inc
lods
lock
lock
jg
bound
cltd
gs
lahf
je
xchg
jbe
outsb
xchg
sub
fistps
inc
push
scas
dec
dec
dec
mov
mov
or
jecxz
cld
adc
add
sbb
pop
stc
roll
incl
inc
mov
mov
adc
and
ret
xlat
fcom
jmp
imul
pusha
inc
mov
out
jle
dec
mov
push
push
mov
pop
dec
mov
inc
sub
ss
aam
cli
scas
aam
sub
shll
adc
xlat
and
iret
or
pop
ret
or
add
add
lods
movsl
bound
or
call
fcomp
sub
fistl
inc
mov
xchg
push
fimuls
ret
sbb
sub
xor
fistps
push
cmpsl
dec
pop
repnz
jmp
sbbl
loopne
push
loopne
mov
test
jge
jae
add
lahf
mov
dec
lods
mov
dec
test
scas
xchg
imul
out
mov
sti
cmc
add
adc
cltd
xchg
inc
mov
jle
dec
pop
pop
mov
cli
mov
push
sbb
mov
push
out
stos
pop
cmpsb
test
add
icebp
icebp
adc
clc
out
sar
popl
cld
pop
inc
pop
mov
add
inc
mov
cltd
cmp
cmp
and
push
sarl
and
ds
cmp
aaa
mov
pop
inc
mov
inc
imulb
inc
push
inc
lods
dec
or
jg
gs
inc
jp
lea
push
jae
jge
jle
fsubrl
out
pop
dec
push
push
dec
pop
pop
scas
test
loopne
call
mov
cmpsl
cmpsl
mov
mov
xor
fadd
xor
roll
subb
xchg
jnp
and
sti
out
stc
mul
pop
xlat
lret
mov
or
or
sbb
divb
inc
inc
ljmp
push
push
ret
and
cmp
sub
sub
or
cmp
and
lods
mov
push
push
addr16
int3
fimull
arpl
outsl
clc
fbld
push
imul
je
sub
cld
testl
mov
sub
daa
and
push
fstpl
push
ficompl
imul
cmp
fisubl
xor
sbb
jge
es
rolb
aaa
jae
mov
adc
outsb
div
pushl
in
fs
adc
sub
jo
cs
jbe
adc
jg
repnz
dec
lods
stc
lret
push
mov
sbb
fdivp
pop
pop
mov
and
push
xchg
cmc
adc
outsl
inc
dec
cmpl
dec
push
jns
jle
jno
gs
pusha
das
pop
stc
jg
add
and
fwait
xor
xor
fnstcw
das
js
or
out
sbb
rcll
push
pop
icebp
pop
jbe
mov
dec
scas
push
mov
pop
and
sub
cmp
mov
add
iret
cmp
mov
imul
pop
sbb
test
dec
sbb
shl
or
loopne
adc
stc
or
icebp
mov
push
jmp
in
sbb
shlb
sub
loopne
lret
ljmp
xor
pop
add
sbb
std
repz
in
es
icebp
jg
fimuls
sbb
sub
push
or
icebp
adc
mov
aas
mov
clc
sti
lret
pop
ja
fwait
inc
cwtl
pop
pop
push
movsb
inc
inc
pop
mov
push
push
imul
in
repz
push
push
or
pop
das
adc
push
lcall
mov
jns
xchg
jns
jg
pop
jle
pushf
jg
jge
js
pop
lahf
outsw
lea
mov
data16
sti
cmp
and
test
push
xor
xor
sbb
aad
and
add
and
cltd
pop
jne
jnp
xchg
arpl
mov
sahf
pusha
mov
mov
je
add
jo
scas
insb
mov
xor
imul
mov
or
xlat
rolb
mov
leave
and
and
rolb
cmp
int
cmp
fbstp
and
ljmp
shrb
cmp
fisubs
arpl
push
sub
loopne
or
movsb
or
push
int3
pop
adc
icebp
push
incl
in
add
add
clc
stc
add
iret
cmc
mov
std
das
sub
add
jmp
and
ret
push
lcall
push
adc
cld
adc
adc
adc
cmp
xor
cli
pop
sbb
sti
add
test
and
dec
dec
sbb
push
push
inc
lods
push
clc
xor
inc
adc
push
inc
cmpsl
inc
push
add
mov
fs
jb
popa
mov
and
mov
mov
incl
mov
dec
scas
mov
adc
mov
add
ja
pop
pop
mov
push
dec
pop
mov
pop
dec
stc
bound
pop
loopne
mov
mov
push
or
mov
fs
enter
xlat
push
scas
rcrl
xchg
cmc
push
ljmp
shrd
out
sysret
in
cs
int3
and
and
add
sub
and
add
cmp
out
clc
stos
pop
sub
sbb
das
sub
push
xor
jmp
xor
push
clc
lcall
ljmp
push
jmp
adc
sbb
mov
cs
jp
into
jl
pop
mov
scas
incl
inc
mov
dec
mov
inc
insb
js
inc
push
inc
stos
pop
dec
sbb
gs
sub
scas
push
jbe
subl
ja
jp
mov
dec
pop
addb
sti
or
jg
insb
incl
mov
push
push
lea
insl
xorl
scas
mov
dec
pop
jge
inc
dec
dec
mov
cld
incl
add
add
mov
outsb
jge
outsb
jle
cmp
push
mov
push
outsl
inc
push
imul
lock
jns
pop
dec
pop
lea
inc
mov
call
xchg
xorl
lcall
xchg
xchg
outsl
xchg
cwtl
decl
int3
movsl
movsb
loop
out
loope
call
mov
mov
push
mov
pushl
jb
aad
sub
rcl
jp
enter
orl
out
addr16
mov
popa
ja
xor
jo
insb
insb
jne
outsl
sub
outsl
push
jg
insb
popa
cltd
arpl
mov
mov
push
push
out
add
decb
push
inc
push
adcl
movsb
inc
pop
dec
decb
lock
jg
xor
in
xor
shrl
xor
shll
sar
insl
bound
adc
jp
add
push
and
hlt
sbb
call
add
jmp
sbb
in
xor
add
loopne
test
decl
in
cli
inc
mov
cld
sbb
hlt
jecxz
mov
ljmp
ljmp
sar
lds
rol
shrb
nop
or
add
leave
int
or
inc
xor
test
inc
mov
mov
add
mov
dec
int3
mov
cmpsb
mov
mov
jmp
test
cld
lcall
mov
ja
nop
loopne
mov
lret
mov
mov
sbb
push
or
pushl
arpl
fwait
js
and
inc
fisubs
push
dec
pop
movsl
dec
adc
decl
hlt
push
dec
dec
test
dec
or
inc
fnstenv
jle
mov
aaa
dec
data16
dec
cmp
fucomp
sbb
jmp
or
mov
jge
imul
xor
int3
aaa
cmp
cmp
xchg
mov
insl
into
or
cs
out
call
add
lret
dec
stc
sbb
cs
push
test
mulb
arpl
xor
std
aas
xorb
popf
inc
test
mov
mov
mov
and
loopne
cmp
or
sbb
add
adc
pop
fnstenv
add
ret
dec
in
jecxz
and
neg
and
scas
aas
loope
repnz
cli
aam
aas
fcmovnb
fldcw
pop
pop
pop
jmp
jmp
fstpt
mov
daa
fidivrs
and
xor
sub
xor
cmp
cmp
mov
dec
nop
pushl
lds
adc
push
fimull
add
pop
mov
dec
aam
enter
iret
iret
out
add
add
add
dec
out
mov
mov
or
mov
pop
inc
clc
aas
push
mov
sahf
inc
mov
mov
mov
mov
pop
xchg
iret
ror
lcall
push
aaa
in
sbb
sbb
adc
sbb
jp
outsb
pushf
out
push
push
jp
push
and
mov
jle,pn
pop
repnz
cmp
adc
jecxz
adc
mov
mov
pop
push
pop
stos
push
pop
add
pop
cld
call
push
scas
and
add
sub
sub
loope
sbb
in
adc
add
dec
and
push
push
or
nop
mov
inc
inc
repnz
jg
jmp
in
gs
int
rcr
shll
lds
rol
jne
fcmovne
sub
sahf
inc
cmp
adc
clc
out
push
mov
loop
test
fwait
push
jo
adc
add
pop
cld
inc
sbb
sti
pop
pop
pop
cli
sbb
mov
loopne
notb
adc
sbb
push
cmp
fbstp
pop
dec
dec
dec
sahf
add
inc
dec
inc
mov
inc
sbb
mov
adc
pop
stos
push
pop
push
mov
add
aam
es
xchg
sbb
ret
xchg
jbe
push
xchg
les
push
cmp
enter
iret
pop
aaa
mov
pop
sub
inc
loope
mov
xchg
scas
aas
xor
aam
push
subb
test
dec
mov
repnz
cmpsb
mov
sbb
mov
and
or
outsl
mov
add
shlb
push
in
fldl
dec
mov
daa
fdivl
aaa
add
or
sub
xorl
bound
out
mov
push
xchg
outsl
xchg
cmp
sub
lret
into
notb
push
sub
and
cs
adc
popa
mov
gs
add
add
mov
leave
xchg
and
inc
in
sbb
push
mov
jg
jmp
int
into
cmpsl
mov
sbb
out
dec
stos
lods
fcomi
ljmp
std
sti
sub
inc
cmpsb
dec
push
push
in
xchg
sbb
jmp
stos
pop
decl
int
sub
shlb
jb
jl
xor
or
aaa
jp
jg
pusha
sub
fidivs
ja
jge
mov
inc
sub
adc
or
aas
pop
push
out
cmp
xor
in
jg
ljmp
hlt
div
or
call
sbb
lock
sbb
mov
or
stc
icebp
ljmp
mov
int
cmp
lret
lret
ss
cltd
and
fildll
icebp
filds
add
cmpsb
mov
inc
dec
inc
cmp
les
dec
add
fdiv
cmpsl
pop
cmp
push
dec
gs
or
jne
mov
jns
or
push
insb
cmpsb
add
lahf
inc
mov
add
shl
add
xor
sbb
outsb
cli
imul
lods
inc
inc
fnstsw
out
add
xor
push
outsb
pop
xadd
push
dec
push
add
std
mov
popa
bound
gs
fwait
ret
dec
inc
lea
je
scas
add
cmpsl
push
adc
imul
in
jae
mov
jae
jb
jns
test
mov
push
xchg
add
dec
loopne
sbb
arpl
pop
mov
cltd
mov
es
outsb
xchg
sbb
hlt
pop
push
addr16
jbe
pop
xchg
push
push
push
mov
nop
push
mov
idivl
mov
mov
ss
leave
pushw
xchg
sahf
pop
js
or
cs
xchg
push
loopne
or
lea
dec
loop
js
lds
icebp
incb
push
arpl
cmp
bound
insl
and
pop
fsubrs
and
pop
cld
repnz
add
into
push
push
mov
fldl
sbb
subb
mov
mov
je
dec
data16
addr16
cmp
lods
cs
add
outsb
lcall
mov
insl
mov
incb
ss
insb
insl
sub
cmpsb
lds
dec
sbb
outsb
push
cmp
inc
xchg
mov
ljmp
push
mov
outsb
add
dec
bndstx
push
mov
nop
add
pop
gs
push
int
inc
add
sbb
nop
mov
insb
push
stos
cmp
fwait
sub
add
popa
and
jnp
cmp
xchg
inc
nop
cmp
mov
subb
orb
andb
adcb
xorb
ljmp
cmp
add
pop
aaa
ljmp
sub
daa
add
movl
mov
ljmp
subl
dec
bound
push
loopne
clc
inc
push
mov
inc
adc
push
mov
andl
mov
lock
push
inc
mov
xorl
mov
mov
push
push
add
stos
dec
push
pusha
stos
adcb
push
clc
outsl
icebp
jbe
dec
dec
mov
push
scas
inc
sbb
call
sub
addl
inc
sbbl
or
mov
add
stos
push
xchg
add
sbb
mov
insl
es
mov
add
adc
dec
subb
sbb
loop
adc
arpl
outsb
gs
arpl
rolb
add
jno
ficomps
fnsave
outsb
mov
arpl
mov
jb
outsl
push
aas
push
pushf
push
stos
or
shlb
mov
ljmp
mov
pop
rorl
inc
add
ret
adc
fcompl
scas
call
add
jb
or
or
add
gs
imul
insl
mov
dec
push
or
mov
add
jae
dec
xchg
popa
mov
adc
fs
std
incl
push
jp
push
lds
popa
jbe
mov
jle
lcall
jmp
popa
xchg
shrb
pop
sbb
inc
arpl
pop
mov
or
popf
in
inc
les
shlb
rcrb
rclb
insb
ret
jae
outsl
mov
push
std
shrl
shlb
push
mov
ret
sbb
mov
aam
push
jbe
inc
ret
cmp
jge
popa
cmp
inc
inc
insb
outsl
pushf
imul
and
jns
insb
int
fdivl
shlb
adc
arpl
add
insb
and
mov
js
mov
idivb
cld
or
and
push
sahf
popf
pusha
pop
mov
mov
std
arpl
and
imulb
push
fs
fbstp
mov
sbb
and
loopne
xorb
loope
push
adc
pop
fucom
add
ljmp
lods
xchg
mov
loop
rcll
clc
popa
push
movsb
jg
push
pop
stos
mov
push
lods
mov
adc
loop
pop
jbe
cld
add
into
mov
push
jnp
inc
je
aam
mov
pop
and
out
jne
test
mov
movsbl
sti
push
jg
out
mov
push
stc
inc
cmp
jne
addb
pushl
jne
int3
leave
test
jle
mov
lea
add
cmp
jne
cmp
and
cmpb
mov
add
push
rolb
add
mov
movsb
test
test
jne
notb
or
cs
or
xor
std
jp
jmp
movsb
leave
ret
xchg
in
cmp
xchg
cmp
test
fisttpl
fcoms
in
jg
mov
inc
inc
fmuls
or
ss
push
push
decl
mov
cmp
xlat
jg
aas
jne
xor
jmp
push
test
call
jp
pusha
data16
push
cmp
jmp
and
jg
das
jne
decl
inc
sbb
cld
mov
ja
and
mov
lea
add
cmc
call
cli
call
add
mov
call
mov
pop
adc
outsl
mov
xor
inc
mov
jmp
icebp
or
lea
or
push
pop
sbb
mov
cmp
das
mov
loopne
sbb
in
hlt
mov
fcompl
or
inc
ror
add
je
mov
cmp
add
clc
inc
ret
jg
inc
icebp
add
cs
sub
add
sub
jne
int3
call
aas
je
sti
mov
inc
hlt
mov
movb
and
jne
inc
test
jne
add
rol
les
je
cmpb
mov
or
je
and
jle
sbb
je
cmpb
je
push
jl
xor
mov
lock
testb
dec
ret
ljmp
adc
fbld
push
add
sbb
add
add
loopne
cli
mov
mov
call
lock
pop
pop
ss
divb
test
cmp
ds
inc
push
ss
jg
decl
in
loop
pop
mov
ds
mov
and
incb
or
and
pop
add
mov
and
mov
addl
adc
leave
push
pop
push
mov
mov
mov
call
cmp
leave
inc
pop
jmp
xor
mov
insb
mov
cmpb
and
jmp
mov
jb
int3
stc
cmp
mov
lods
ljmp
sbb
and
test
pop
xor
icebp
jg
dec
sub
jg
sbb
inc
pop
add
sahf
cs
add
mov
loopne,pn
xchg
jo
push
pop
mov
inc
mov
pop
lock
xchg
inc
movb
xor
mov
testl
xor
add
add
rcll
in
xchg
pusha
or
mov
movzbl
fcoml
divl
xor
push
mov
mov
dec
decl
in
xor
pop
cmc
outsw
dec
jb
adc
pop
sbb
mov
cmp
mov
dec
addb
mov
aaa
adc
mov
es
push
aam
adc
sbb
push
push
mov
push
jbe
mov
inc
xor
repnz
add
jl
mov
cmp
add
adc
push
je
pop
mov
sbb
inc
pop
mov
rolb
jge
lock
fdiv
into
loopne
add
pop
pop
pop
pop
add
movl
cmp
xchg
cmp
add
dec
fcmovnu
fimull
rcll
dec
mov
and
jmp
jg
fcoms
push
dec
jae
and
mov
sbb
push
inc
jae
add
push
add
call
pop
mov
add
ljmp
add
pop
imul
sbbb
iret
add
jo
push
sbb
dec
sbbb
rorl
pop
mov
xor
sahf
jmp
ja
fiaddl
cmp
jb
fsubp
pop
mov
pop
lock
imul
mov
jnp
lock
push
adc
decl
push
das
js
scas
je
add
mov
lcall
jb
lret
sub
in
sbb
out
pop
inc
mov
jmp
jl
gs
dec
mov
jo
push
lock
push
xchg
pop
xchg
dec
add
xchg
push
jbe
jbe
cmp
push
jb
push
jge
sar
or
and
xor
cli
push
les
out
decl
adc
cmpl
je
xor
mov
sbb
jbe
jo
jo
adc
inc
adc
jp
pop
adc
fmull
les
add
je
push
in
add
jb
push
add
dec
inc
je
lock
sub
jne
xor
mov
adc
mov
jmp
lea
pop
mov
fdivs
jne
mov
jo
inc
jg
testb
xor
mov
add
mov
loopne
cli
add
dec
lock
adc
je
mov
std
jne
dec
mov
clc
inc
jmp
mov
push
adc
pop
fdivl
les
ret
clc
add
lea
lea
fs
loop
mov
cmp
jbe
idivb
bnd
add
sti
decl
lret
rorb
mov
xor
and
cli
ljmp
mov
mov
pop
cmc
adc
pop
sbb
mov
jg
cmp
jae
add
jge
call
jo
mov
pop
cmp
sub
push
sti
cmp
xor
or
mov
and
cmp
into
mov
cld
sub
scas
in
add
xlat
insl
add
pushf
call
in
jne
pop
or
cmp
lea
rcl
pop
mov
repz
add
xor
hlt
adc
jmp
loopne
mov
mov
push
jo
mov
wrmsr
cs
daa
add
les
jae
pop
lock
pop
lcall
pusha
data16
lea
sub
sub
jnp
push
xor
xor
popa
and
adc
cltd
add
push
shrl
lret
inc
sub
je
in
stos
cld
mov
jp
xchg
jl
mov
add
dec
shl
lea
pop
mov
inc
imul
jae
test
scas
call
push
or
mov
into
add
pop
fmull
incl
jo
push
call
jge
in
icebp
or
imull
cli
inc
shr
xor
mov
lock
mov
testb
addb
add
or
or
xor
icebp
jno
mov
test
or
cwtl
pop
mov
lcall
pop
cld
sub
data16
lock
jecxz
or
ljmp
or
lock
dec
mov
inc
cmp
mov
push
mov
adc
or
scas
add
mov
xor
pop
jns
pusha
xor
or
sbb
add
ret
cld
pushl
mov
inc
call
lcall
pop
sti
push
jbe
push
orl
push
xchg
push
mov
cmpsl
fists
sti
fcom
mov
xchg
jg
inc
and
and
into
call
sbb
and
and
fdivs
add
jmp
lea
push
in
cmp
shll
mov
mov
lock
add
je
push
mov
fadds
add
inc
sahf
je
push
inc
jmp
mov
push
push
pop
mov
add
push
mov
test
inc
hlt
cmp
repnz
jbe
adc
mov
mov
cmpsb
jne
pop
mov
movsb
insb
repz
mov
call
inc
fisttpl
stos
cmp
stc
cld
les
sbb
or
push
mov
or
in
mov
scas
mov
or
into
jmp
hlt
fwait
adc
adc
push
push
jl
adc
gs
fcomip
stos
sbb
xchg
rclb
mov
push
or
adc
pop
aad
lock
cmp
pop
add
dec
add
sbb
insb
and
adc
pop
in
jg
fwait
lods
es
clc
push
push
adc
xor
add
lcall
push
push
push
pop
mov
lock
pop
mov
mov
outsl
incl
jmp
xor
leave
and
xor
mov
adc
cld
push
xor
dec
mov
add
cld
leave
cmp
sub
push
into
and
xor
push
jo
and
inc
jg
push
aad
jp
xor
push
and
sub
sbb
or
dec
dec
and
and
cmp
sbb
push
stc
push
or
push
iret
lock
mov
in
push
mov
xor
orb
or
divb
adc
push
fbstp
repz
push
jo
push
pop
and
inc
repnz
adc
cld
nop
sbb
rclb
test
test
jg
or
nopl
xor
push
mov
hlt
add
decl
imul
dec
mov
xor
pusha
inc
repz
or
add
push
inc
clc
outsl
sub
mov
push
pop
push
repnz
fdivs
xor
inc
outsl
push
sbb
cld
push
lock
sbb
mov
mov
mov
mov
mov
out
loopne
xor
hlt
push
call
pop
and
jno
mov
pop
je
xlat
andl
push
mov
inc
scas
dec
mov
push
push
decl
in
add
jb
loopne
push
jo
dec
push
fstpt
jmp
push
mov
fdivs
add
or
jns
inc
lea
std
xchg
mov
pushl
xchg
add
je
mov
mov
fsubrl
ja
cmc
inc
fidivl
push
cmc
sub
pop
cmp
jle
test
lcall
call
mov
idiv
sbb
loopne
test
testb
sbb
dec
lret
rorl
aam
mov
fsubr
xorl
mov
jl
push
popa
mov
ja
addb
dec
mov
xlat
jo
sub
push
lea
adc
adc
call
mov
mov
jbe
jae
orl
repz
inc
sub
test
mov
add
repnz
fistpl
adc
pushl
jne
adc
push
ret
sub
push
test
aaa
xchg
and
pop
cwtl
call
add
adc
push
push
outsb
push
fdivrs
add
std
mov
and
and
and
pop
fsubrp
mov
mov
inc
or
dec
mov
pushl
xor
cmpsb
js
cmp
lea
sub
pop
adc
inc
xor
push
mov
sti
stos
scas
pop
push
add
jnp
inc
cmp
fadds
test
add
jle
xlat
push
push
push
mov
and
adc
xor
lea
insb
repz
das
inc
sub
ds
inc
xor
and
cmp
dec
push
jmp
or
lods
pop
sarb
fiaddl
mov
ja
or
push
ret
add
pop
sbb
adc
ss
js
cmpb
dec
cmpsb
mov
and
scas
mov
mov
pop
push
cmp
jmp
mov
mov
das
push
or
jb
rolb
ljmp
ss
subb
out
pop
dec
mov
je
xorl
mov
fsub
xor
add
subl
and
mov
xor
dec
pop
lcall
aam
xchg
inc
incl
add
sub
add
in
mov
hlt
jae
cmc
jnp
sub
mov
or
pop
sbb
sub
jmp
inc
test
cmp
push
mov
adc
jne
imul
decl
cmp
add
jae
pop
loope
fcmove
sahf
lcall
mov
push
add
negl
mov
mov
adc
mov
mov
pop
sahf
xor
stos
mov
mov
xchg
jmp
or
mov
jl
mov
pushf
rcr
pop
inc
lcall
das
push
and
das
add
insb
aam
jp
or
in
lret
pop
adc
pop
shrb
cmp
rolb
enter
push
lret
inc
xchg
push
xchg
pop
arpl
mov
test
add
orb
insb
fwait
xlat
ret
in
clc
aam
mov
mov
push
shrb
loopne
rolb
and
inc
test
push
sbb
cmpsb
fstpt
pop
and
mov
jmp
jbe
and
add
push
xchg
testl
cmp
dec
rorb
adc
jbe
adcb
sti
je
test
adc
les
rclb
adc
ret
jne
sbb
xchg
cmp
or
loopne
mov
xchg
adc
xor
pop
lcall
sub
xchg
pushf
cmp
jne
mov
add
xchg
scas
push
push
loope
lea
call
call
and
push
xor
pop
mov
mov
ja
insb
int3
rorb
fistpl
stos
cmp
fildll
stos
jb
or
scas
ret
push
xchg
add
add
add
mov
add
les
fbstp
adc
add
lea
aam
repnz
cmp
jmp
outsl
xor
hlt
sbb
inc
adc
pop
cmp
scas
je
out
call
fbld
add
lods
pop
adc
int
mov
fistpl
xor
adc
data16
adc
shl
mov
in
ja
or
push
jo
or
out
insb
ljmp
sub
inc
mov
testl
push
mov
add
icebp
es
call
xor
divb
lds
lock
add
mov
icebp
lret
call
stos
pop
adc
clc
inc
std
or
push
sbb
data16
inc
ud2
ss
shrb
sub
clc
xchg
xor
dec
roll
jnp
add
inc
xchg
aas
movzbl
scas
push
add
jo
or
fs
arpl
and
add
lock
hlt
and
push
in
dec
mov
mov
pop
push
daa
mov
mov
jg
pop
inc
dec
mov
jb
ret
mov
cmpsl
in
incb
or
leave
je
jp
jne
inc
pushf
jle
aas
mov
and
cs
mov
mov
push
shll
sti
in
je
test
mov
push
lods
lea
cmp
mov
sbb
dec
add
xchg
dec
xchg
and
mov
xor
inc
push
js
popa
cmp
add
rorl
insl
incl
adc
push
mov
mov
call
lods
mov
call
fstl
insl
mov
jl
jb
add
decb
pop
loopne
notl
pop
cmp
loopne
lea
fdivrl
cmp
xchg
fcoms
je
sub
dec
out
dec
stos
or
adc
sbb
sub
pop
push
inc
jbe
std
loopne
mov
mov
clc
adc
cmp
je
cmovs
or
aaa
je
push
sahf
mul
iret
ljmp
fbstp
and
addl
je
push
stc
pop
jne
push
pop
cld
add
push
pusha
jg
scas
clc
add
pop
das
data16
sti
divb
add
ss
das
jmp
lea
mov
and
notb
leave
jmp
jb
lahf
mov
jl
and
add
add
add
or
movsb
pushaw
pop
add
enter
pop
cmp
or
push
je
sub
call
xchg
pusha
push
add
push
fs
pusha
mov
idivb
and
cld
and
daa
mov
es
adc
call
push
mov
push
fwait
bound
add
hlt
add
in
pop
cs
cmp
loopne
cmp
loopne
out
mov
sub
data16
adc
fcomps
pop
loopne
stos
mov
and
pop
push
movsl
mov
add
or
cld
or
push
roll
xchg
inc
mov
dec
in
add
popa
lea
pop
pusha
pop
mov
in
push
pusha
or
cmp
fistpl
or
nop
je
jne
movsl
add
movsl
cmpsb
aaa
roll
bound
pusha
adc
or
lea
sbb
je
xchg
inc
enter
cld
push
loop
pop
sahf
push
cmp
xor
jecxz
loopne
loope
je
add
push
jp
cli
mov
test
lret
leave
cmp
and
scas
push
pop
out
adc
loopne
sub
mov
mov
push
rorl
leave
imul
notb
inc
std
clc
scas
les
loopne
call
pusha
call
fistpll
enter
orl
sti
inc
ret
movb
imul
addb
mov
pop
push
add
in
push
mov
add
add
pop
rolb
shr
inc
decl
jmp
push
pop
pop
mov
loope
pushf
orb
jb
dec
mov
mov
pop
push
jne
fiadds
dec
sti
andl
decb
adc
repnz
gs
mov
xor
mov
test
lock
add
sub
xor
sti
mov
push
je
sub
pop
icebp
sbb
call
rclb
outsb
jo
add
mov
call
sti
jae
mov
in
jg
push
jbe
mov
dec
cld
decb
and
pusha
mov
lea
or
fwait
add
push
jb
adc
mov
decb
jbe
add
inc
mov
or
add
addb
add
add
dec
mull
loope
or
in
outsl
clc
or
lock
sarb
mov
or
sbb
fmul
adc
decb
je
fcoms
or
mov
or
add
add
mov
in
add
push
and
adc
test
notl
lock
add
dec
mov
dec
jp
xor
loopne
jg
cmpsb
call
add
adc
inc
and
stos
or
and
stos
std
fstpt
pushf
mov
aaa
add
add
pop
mov
add
inc
rclb
call
adc
rcrl
and
lea
ljmp
xor
outsb
mov
inc
addl
sub
mov
add
cmc
sbb
add
or
xor
dec
test
je
mov
sbb
orb
sbb
mov
or
stos
adc
push
push
sub
inc
xor
scas
jo
mov
push
call
call
sub
in
or
sbb
jo
sub
adc
repnz
stos
or
in
in
inc
add
leave
ret
fcomip
lock
xchg
and
pop
add
je
int3
fstpt
pop
cmp
jg
test
and
jg
pop
dec
mov
add
stos
sbb
in
xor
mov
decl
mov
call
mov
pop
cmp
push
adc
in
sub
into
xor
jb
sbb
mov
jp
mov
push
add
stos
jl
mov
pop
mov
mov
sub
add
aad
jno
push
push
inc
jbe
mov
or
inc
sub
std
or
ljmp
je
js
jecxz
inc
or
lock
sub
ja
lock
xor
repnz
je
jo
add
fldl2e
lcall
cmp
mov
mov
or
insl
in
cmp
adc
adc
push
inc
imul
cmp
addl
sub
sbb
jle
inc
push
mov
repnz
or
ljmp
jl
test
call
push
jl
jne
mov
mov
mov
xor
or
push
push
adc
ss
jl
add
mov
jg
or
adc
add
pusha
mov
jbe
sub
lret
imul
int3
mov
cmp
or
test
sete
fimuls
jp
ret
jmp
bound
and
add
or
xlat
push
mov
cmp
rolb
push
mov
sub
sbb
mov
add
mov
mov
xor
and
sub
data16
pop
and
out
ds
cmp
push
cs
cmp
mov
cmp
aam
movsb
mov
add
mov
shlb
lock
add
adc
movsl
or
cmp
test
and
cli
mov
loopne
pop
mov
fistl
xor
xor
lock
pop
hlt
adc
adc
inc
mov
mov
xchg
add
test
lock
inc
inc
lock
dec
and
adc
incb
shll
inc
repnz
jecxz
inc
dec
cltd
enter
inc
push
jb
std
push
sub
push
jp
jg
pop
cmpsl
data16
stos
jo
lret
lock
jp
adc
je
xchg
adc
fistpl
cld
test
mov
cmpsl
sahf
jne
pop
xchg
pop
mov
adc
ret
inc
push
push
decl
in
pop
xor
jl
add
mov
jbe
cld
jmp
or
cmpl
and
lods
add
pop
test
or
sub
cld
xor
call
das
cli
mov
xchg
adc
rcrb
mov
dec
stos
sbb
jle
fbld
cld
mov
pop
xor
lock
divl
loope
pop
shrb
or
jo
stc
aam
mov
mov
mov
int3
push
loopne
add
je
push
cmpsb
xor
jno
bound
pushl
cmc
add
pop
jo
adc
mov
mov
call
fdivs
or
adc
or
ljmp
push
jne
pop
push
or
adc
rcrb
jg
sbb
inc
rorl
mov
push
scas
jle
mov
aaa
mov
js
les
ret
jae
sub
ss
lock
add
loope
into
inc
fbld
ret
mov
rcrb
mov
orb
scas
call
lcall
pop
clc
fbstp
xor
push
adc
lea
or
xor
push
inc
repnz
adc
fisubrl
pusha
stos
xor
adc
push
adc
or
fcomip
jne
call
pop
add
push
add
test
int
sub
cmp
sbb
out
test
jge
and
pop
add
cmp
jl
call
sub
dec
push
adc
jp
xor
test
ljmp
incl
jae
lock
cmp
sbb
dec
icebp
jnp
clc
add
lock
lcall
test
mov
push
int3
add
jo
push
scas
jmp
jne
popa
xor
adc
cmpsb
out
shl
mov
int3
cmovge
cmp
sbb
movsb
pop
ret
std
mov
mov
push
test
adc
jp
idivb
or
push
decl
mov
jp
call
sahf
jle
mov
je
mov
notb
lock
lock
je
test
add
push
jge
jle
js
add
adc
xor
ret
pop
cmp
add
or
or
push
xchg
mov
or
pop
notl
jo
je
add
cmp
outsl
fdiv
inc
add
and
leave
pushf
repz
pop
jae
push
cli
rorb
sti
push
mov
cld
pusha
push
or
mov
ljmp
adc
shlb
cmp
jg
call
cmp
mov
sub
cmp
push
xchg
jb
add
out
test
or
ret
jo
sub
sub
mov
inc
call
sub
or
lock
scas
test
jb
js
lea
std
roll
roll
mov
or
fistpll
jmp
xchg
js
add
push
pop
ret
in
je
fwait
push
test
inc
or
je
andl
sar
xor
add
loopne
dec
add
push
add
and
add
xlat
or
fdivr
ljmp
push
arpl
incl
lea
je
push
movb
scas
push
clc
stos
lock
adc
or
pcmpgtd
or
lret
in
repnz
lock
mov
add
pop
cmp
sbb
inc
sbb
shrb
or
daa
mov
add
mov
jge
loope
fistl
inc
cld
rclb
orb
clc
or
ss
xchg
lcall
into
andl
imul
sub
dec
ljmp
mov
jp
in
add
cmp
or
push
or
xor
test
sub
xor
add
pop
mov
add
adc
mov
add
sbbb
pushw
mov
sbb
scas
pusha
jl
push
mov
fcomp
xchg
mov
sbbb
cmp
insb
addl
fcmovu
push
ret
in
xor
aas
je
jb
fstpl
pusha
out
push
dec
pop
xchg
dec
push
push
movsl
fbld
push
push
mov
xor
mov
adc
pop
ret
cmpl
fmuls
or
std
call
mov
insb
int3
pop
or
push
sbb
mov
pop
push
pop
dec
addl
xchg
lcall
mov
cs
ret
subl
or
decl
mov
jb
mov
pop
pop
push
inc
stos
and
lret
mov
jge
andl
and
dec
mov
cmpsb
int
movsb
subb
shll
jle
xor
xor
push
sbb
call
cmp
jl
je
negl
outsl
cmpsb
add
push
inc
inc
sarb
rorl
jp
js
jg
rorb
lret
dec
dec
xchg
pop
cmp
add
xadd
or
push
test
adcb
xor
xchg
or
xor
cmc
push
add
lea
add
cli
divb
and
xor
jmp
jb
mov
fbstp
jl
add
jmp
and
add
hlt
pop
test
fucomi
clc
inc
add
ja
mov
jl
add
data16
dec
xor
je
repz
arpl
stc
push
pusha
daa
test
jl
push
or
cmp
jae
mov
cmp
sahf
mov
data16
decl
je
mov
icebp
jae
mov
cmp
mov
push
add
mov
andl
mov
pop
cmpsb
jne
out
sub
cld
lret
pop
or
jb
dec
outsb
std
push
shrl
test
jp
sbb
into
jl
add
add
hlt
pop
mov
push
inc
outsb
and
xor
call
jo
push
jo
mov
je
sbbb
push
sbb
ret
push
lret
ja
add
push
sub
addb
rcrb
les
jl
clc
jl
aam
lea
js
xchg
sub
cmp
or
or
pop
xchg
jmp
dec
jns
adc
incb
insl
or
add
in
call
jo
fnstsw
lods
jb
insl
add
sarb
pop
dec
fists
mov
lods
push
xorl
jmp
inc
lock
clc
xchg
adcl
lods
add
pusha
dec
je
andl
fdiv
popf
mov
push
push
inc
hlt
cmp
adc
mull
or
inc
addb
jg
mov
jb
mov
ret
add
sbb
lea
xorb
jle
fwait
repnz
fnsave
sub
cld
jmp
jne
lods
fbstp
push
outsb
or
or
jle
inc
cmp
pop
sar
ljmp
sub
pop
jne
int3
leave
fisubs
add
cmpsb
fdivs
and
mov
sar
and
cli
jb
push
jne
add
loopne
and
pop
inc
les
mov
sub
scas
add
pop
or
and
xor
push
lcall
inc
dec
ret
push
lods
pop
push
jl
push
icebp
inc
sub
jbe
pusha
jo
adc
push
add
mov
inc
ret
mov
enter
pusha
and
ljmp
add
les
call
push
popa
and
clc
add
or
or
dec
mov
fisttps
push
adc
lock
mov
testl
cmpsb
xor
cmpl
pushf
addl
or
decl
cmp
in
add
mov
add
js
lock
repnz
dec
and
jge
popa
ret
sub
out
mov
or
pop
addb
out
jo
std
or
das
cltd
cmp
jne
lea
movsb
jo
std
fildl
cltd
shlb
mul
and
add
add
subl
mov
xor
add
rcll
sti
call
inc
lods
aaa
loopne
jp
sbb
shrb
clc
add
add
sti
loopne
push
or
and
xchg
loop
je
add
or
shlb
je
std
mov
and
clc
lret
and
sahf
cld
das
and
enter
sub
lods
push
and
pusha
and
pop
or
xchg
push
sub
adc
jb
sahf
out
clc
sub
inc
nop
xor
je
jmp
cltd
stos
mov
fs
pop
or
push
pusha
add
sbb
push
loop
cltd
dec
ljmp
add
mov
inc
adc
decl
inc
hlt
mov
call
pop
pop
jl
ljmp
and
push
pop
cltd
push
add
mov
cmp
scas
pop
and
pop
mov
jnp
push
pushl
pop
and
mov
pusha
outsb
lret
jnp
repnz
lods
add
and
insb
push
xchg
and
fs
std
jg
dec
inc
or
add
inc
pusha
adc
inc
les
push
push
mov
and
call
mov
and
mov
adc
xchg
stc
xor
xchg
cmp
xorb
mov
adc
inc
add
pushf
pusha
pop
adc
xor
aas
inc
jmp
add
shr
mov
cmp
loop
lods
mov
testb
cmpl
and
movsbl
add
inc
aam
div
push
jne
aam
pusha
mov
addb
and
bound
xchg
out
adc
push
ljmp
test
push
es
or
add
fst
pusha
ret
sahf
push
or
bound
jp
dec
incl
sbb
test
adcl
repz
inc
inc
call
pop
jmp
sub
xor
add
pusha
roll
clc
mov
sbb
movsb
pusha
sub
and
mov
sub
add
jl
inc
movsb
jne
dec
jmp
mov
add
pusha
xchg
outsb
inc
lock
mov
mov
pusha
je
in
adc
jne
in
or
and
int
shrl
adc
jne
js
jo
push
push
lock
add
mov
std
push
je
adc
inc
push
xor
adc
notb
push
mov
mov
fimull
repz
add
fidivl
insl
fisubrs
loop
test
xchg
outsb
ljmp
rorl
add
inc
mov
nop
mov
aaa
loopne
lahf
shl
fcomps
aas
pop
lea
incl
cld
lcall
xchg
inc
add
mov
cmc
cmp
notb
ret
jmp
cltd
cmp
in
xchg
shl
or
inc
es
subb
jo
add
decl
cld
test
addb
adc
fwait
sub
push
test
loop
dec
cmp
push
lock
pusha
sbb
test
push
orl
sbb
mov
leave
mov
stos
or
adc
pop
jg
jmp
jp
and
add
xor
dec
sub
inc
and
scas
push
add
jge
lock
xor
enter
orb
adc
das
clc
or
jno
add
dec
add
pop
inc
clc
fildll
mov
or
xor
pop
jns
adc
mov
cld
or
mov
aam
cmp
into
call
and
ja
mov
xor
jo
or
call
mov
push
std
call
dec
add
clc
adc
cmp
jnp
pop
mov
out
jo
repz
pop
jno
daa
hlt
mov
or
call
ljmp
pop
and
sbb
pop
repnz
add
push
decl
jo
lea
mov
sbb
pop
jns
mov
pop
rcl
mov
lds
cs
pop
leave
ret
mov
aaa
pop
ss
mov
adcb
dec
ds
mov
icebp
pop
call
xor
jae
je
clc
jbe
daa
icebp
mov
movl
jnp
add
push
jo
adc
mov
bound
imul
xchg
jmp
ret
pop
fdivrp
fnsave
and
je
mov
mov
incl
into
cmp
add
mov
inc
cltd
mov
stos
push
mov
inc
dec
sbb
mov
inc
mov
mov
cmp
ljmp
loope
shr
inc
into
jb
je
sub
adc
push
ljmp
cmpl
jl
cmp
jne
mov
incl
lock
lret
add
jle
testb
push
loopne
stos
sbb
mov
aam
add
jmp
out
int3
fldt
add
lods
add
jbe
mov
cld
mov
and
adc
lea
pop
or
pop
mov
inc
cmp
push
sar
jb
fimuls
out
inc
shr
jbe
adc
mov
pop
in
jmp
cs
std
icebp
xor
dec
jbe
hlt
mov
xchg
dec
sti
mov
lds
jne
les
int
push
mov
sbb
or
mov
incl
and
pop
mov
jne
jnp
push
outsb
xor
mov
rorl
jle
lea
stc
out
add
dec
inc
push
sbb
jp
ret
and
sbb
dec
mov
add
fists
cld
int
jo
adc
mov
inc
fidivl
loope
xchg
or
cmp
and
jne
lock
mov
and
mov
outsl
idivb
inc
mov
pop
sbb
jo
inc
add
push
jmp
inc
or
add
xor
sti
or
mov
les
add
inc
inc
dec
add
bound
push
mov
mov
inc
adc
or
push
adc
pop
aaa
adc
orb
jbe
mov
mov
mov
or
insl
cwtl
push
sti
jo
data16
jmp
cmp
xor
or
push
xor
push
call
adc
aam
inc
daa
cmp
adc
xor
ljmp
adc
sub
mov
add
lock
dec
pop
add
mov
js
out
xor
pop
xor
adcl
in
inc
jmp
incl
pop
push
add
lea
scas
push
pushf
push
lock
ss
sbb
bound
mov
mov
jle
mov
scas
lcall
sub
fdivrs
enter
add
je
add
ret
dec
cwtl
faddl
mov
orb
jne
movsb
xchg
jne
mov
pop
add
jecxz
sbb
cs
inc
jl
cmp
shrl
and
mov
push
inc
les
jbe
icebp
inc
or
push
mov
add
and
push
clc
out
loop
movsl
mov
pop
adc
inc
movsb
dec
cld
aad
add
aas
dec
xorl
call
jle
icebp
je
xor
js
ret
pop
scas
outsb
mov
pop
adc
xchg
add
fsubl
clc
jo
mov
inc
mov
jne
xchg
xchg
add
add
inc
inc
divl
push
shll
adc
and
add
add
add
add
xor
sti
jno
jo
xchg
incl
add
push
or
push
mov
pop
xorl
adc
stos
cmp
repz
jno
nop
ss
add
adc
adcb
ja
notl
mov
and
pop
pop
cmp
or
add
sbb
add
push
push
lods
lock
and
loopne
add
sub
push
andl
int3
bound
push
icebp
fidivs
mov
dec
xor
cmp
xorl
lret
or
or
lock
scas
incl
sbb
mov
aaa
add
xor
push
adc
xor
mov
clc
adc
add
add
sbb
call
cwtl
and
mov
loope
sbb
fsubs
mov
sub
jo
lods
adc
mov
mov
add
enter
pop
pop
pusha
and
fcmovnu
xchg
clc
ljmp
jmp
pusha
inc
xor
push
add
cld
jle
add
jmp
neg
adc
and
ret
mov
or
sub
test
mov
mov
ja
add
mov
jo
rolb
lret
inc
push
xchg
lods
clc
call
and
push
sbb
xchg
cltd
mov
dec
or
mov
push
cmpsb
lock
push
incl
inc
and
movzwl
outsb
mov
and
dec
mov
outsl
lcall
fcoms
lds
ljmp
js
enter
mov
repz
nop
push
push
pop
data16
adc
pop
jg
sti
push
in
push
pop
and
mov
fisttps
call
and
inc
mov
add
pop
inc
mov
loopne
sbb
mov
push
sbb
icebp
subb
lock
rorb
cmpsl
pushl
aas
pop
clc
lods
test
outsl
enter
or
mov
mov
call
lock
jne
pop
inc
jle
pop
sub
sbb
test
add
lret
daa
icebp
inc
cmp
test
sub
add
cmp
clc
sar
push
xchg
add
shlb
clc
bound
clc
mov
sarb
call
cli
or
push
mov
add
cmp
add
arpl
sahf
test
inc
scas
mov
push
jle
out
mov
sbb
ret
add
negl
jl
in
xor
inc
push
scas
mov
mov
mov
jbe
add
mov
les
inc
add
fiadds
cmp
and
sahf
jae
ljmp
jmp
cmp
cmpl
je
mov
mov
stos
js
mov
jmp
push
inc
test
cmp
jb
and
out
mov
sbb
mov
dec
loopne
cmpsb
xchg
je
sub
jg
movsl
mov
pop
rorb
fadd
jmp
push
data16
pop
ficoms
jb
mov
inc
cmp
xchg
std
or
outsb
sbbb
mov
mov
loop
lahf
divb
push
test
mov
pop
push
dec
outsb
mov
lock
test
jl
add
decb
add
push
xchg
mov
scas
pushl
dec
mov
or
push
jmp
lods
movsl
xor
adc
inc
lods
xor
je
je
mov
jecxz
push
push
aas
push
das
adc
xchg
adc
mov
or
imul
or
mov
pop
ds
je
shr
cld
bound
push
lea
sub
filds
cld
in
push
test
fmuls
jne
dec
clc
dec
dec
mov
or
mov
cmp
mov
out
popl
notl
lcall
fmul
sub
loope
sub
notb
dec
add
loopne
fbld
cld
das
mov
dec
inc
mov
call
jmp
pop
aad
inc
sbb
movsb
shlb
nop
loop
cmpsb
out
mov
push
sahf
cwtl
jp
jne
gs
arpl
hlt
jg
add
aad
jg
int3
xor
pcmpeqw
inc
shlb
cltd
cmp
je
neg
sbb
and
jb
dec
clc
cmp
test
xor
push
mov
je
clc
mov
push
push
pop
cwtl
add
addr16
mov
adc
outsb
clc
cld
in
dec
outsb
jmp
int3
mov
jecxz
jo
call
hlt
xchg
aam
fwait
in
call
stos
rorl
adc
inc
and
dec
shufps
sub
or
out
aas
clc
jl
sub
jge
movb
mov
or
fbld
je
add
clc
pop
jne
movl
sahf
adc
nop
or
data16
lods
and
push
pop
cmpb
push
cmovns
push
mov
cmp
inc
push
jbe
mov
call
xchg
dec
cld
popl
data16
dec
jmp
xor
add
push
push
jle
rclb
das
inc
cmp
adc
mov
push
inc
ret
call
pop
roll
adc
xor
mov
or
adc
inc
testb
call
fs
push
sub
xchg
sub
sub
mov
push
mov
adc
push
push
fdivp
cli
add
adc
xchg
push
add
pop
push
sub
adc
mov
adc
sub
xchg
addb
mov
adc
dec
jb
push
xchg
push
push
mov
call
push
test
cmpl
inc
jae
aad
or
fisubs
push
jne
push
out
inc
loopne
scas
ret
pop
mov
and
jbe
loopne
dec
cltd
cmpsb
mov
adc
lds
jb
fsubl
fsubl
aad
fisubl
data16
cs
adcl
shlb
mov
cwtl
cmp
pop
and
aam
out
sbb
push
frstor
mov
sahf
mov
xor
je
jmp
movb
jne
jbe
hlt
addl
xchg
in
ret
clc
repz
cmp
hlt
ja
test
rorl
rcr
cmp
ja
sahf
cli
jge
or
rcll
test
jecxz
sarl
xorb
dec
cs
fidivl
cmp
add
add
out
lods
add
pop
or
jne
fsubp
pop
or
les
jne
test
xor
adc
jmp
aaa
sbb
mov
and
dec
sub
pop
xlat
aaa
int
cs
fimuls
or
adc
xchg
pop
and
or
inc
push
and
push
mov
les
mov
push
jl
or
fiaddl
or
add
ret
push
adc
push
pop
gs
loop
pushf
aas
movsb
mov
scas
mov
xchg
je
pushf
shlb
jle
inc
hlt
cld
lock
ss
or
addl
scas
mov
call
xchg
mulb
bnd
negb
mov
mov
push
inc
bound
int
call
lock
cld
xchg
adc
mov
pop
call
xor
sbb
push
lock
jmp
imul
or
es
mov
pop
sbb
push
mov
sub
xchg
and
lock
loopne
in
call
popa
push
mov
mov
adc
xchg
add
pop
sub
test
test
loope
test
pop
add
testb
outsb
add
std
push
and
and
fimuls
sub
call
std
das
push
pop
scas
mov
mov
jl
stc
pop
cld
push
add
cs
push
test
es
add
push
xlat
cld
pop
and
fiadds
sbb
loopne
shl
test
push
adc
jo
imull
jne
cmp
scas
ja
cmp
push
fbld
in
aas
rolb
lea
cs
sbb
jl
pop
call
out
pop
notl
and
aaa
jge
push
lea
jge
push
call
insl
pusha
xor
xchg
mov
pop
xchg
jle
xor
mov
call
add
push
jb
lret
adc
pop
cmp
lea
icebp
lretw
lea
subb
adc
dec
es
fildl
cmp
mov
sub
das
push
addr16
xor
lea
add
mov
and
xor
dec
or
cmp
mov
test
inc
vlddqu
out
fidivs
or
dec
sarb
aaa
sahf
jmp
push
call
sub
daa
jbe
subl
dec
movzwl
hlt
incl
add
lea
ss
mov
loopne
test
fmuls
hlt
adc
jb
cmp
ja
testb
jne
sub
push
jae
fcomip
std
out
or
inc
pushf
mov
xor
dec
sti
punpckhdq
mov
call
cmp
mov
jnp
dec
pop
sub
scas
cmpsb
and
bound
mov
jne
es
jg
decb
jbe
jb
mov
loopne
out
adc
or
mov
cmp
sbb
cmp
mov
ret
fsubl
mov
imul
add
mov
ss
mov
sarb
dec
add
inc
mov
ficoml
fdivl
shlb
mov
in
outsl
call
mov
mov
pop
sub
ljmp
add
mov
out
inc
cmp
fmull
clc
notb
mov
push
decl
cmpsb
or
inc
pusha
data16
int3
call
loopne
push
cmp
sbb
mull
xlat
add
ljmp
je
test
push
hlt
out
dec
addl
cwtl
adc
outsb
push
jb
call
push
loopne
aam
pusha
daa
fmul
cmp
repz
data16
mov
test
outsb
pop
lods
pusha
divb
movb
mov
add
icebp
and
xorl
pop
sbb
out
shr
lea
dec
cmp
mov
test
dec
cmpsb
lods
repz
cmp
xchg
into
sub
je
call
fsubrl
jne
pop
div
add
jne
jmp
push
add
jle
hlt
sub
cmpsb
daa
jecxz
scas
out
loopne
push
push
cmp
daa
or
call
movb
adc
xlat
xor
cmp
fsubrp
add
push
testb
daa
cmp
ss
mov
rcrb
cmp
inc
add
mov
xchg
sbb
inc
mov
or
cmp
add
push
inc
and
mov
shlb
push
je
inc
or
addb
jne
sbb
jl
inc
and
mov
push
sbb
or
add
adc
xor
push
es
mov
lods
xor
lock
push
push
push
mov
pop
mov
cmpb
add
loope
out
pusha
pop
ds
push
cmp
push
inc
iret
rolb
jle
cmp
es
cmp
push
mov
jle
push
call
pusha
xor
pushf
call
dec
addl
xor
xchg
xchg
call
push
call
cmpsb
and
pop
mov
cmp
and
test
mov
insb
in
in
mov
jle
test
mov
outsb
add
mov
or
data16
and
inc
jnp
dec
adc
call
daa
stc
leave
sarb
rorl
add
call
jnp
add
pop
jl
push
test
mov
mulb
xchg
cmp
aaa
dec
emms
xor
mov
adc
mov
mov
sbb
jae
xor
push
and
bnd
mov
sub
and
jge
lock
in
jae
push
xchg
les
mov
inc
fcompp
mov
pop
cmp
in
pop
pop
inc
jle
in
cmpsb
sub
mov
cmp
mov
or
or
int
jmp
fiadds
outsb
add
jo
cmovne
fwait
push
cld
and
jmp
push
fdivrs
add
lea
into
testb
or
mov
hlt
addr16
lock
push
jb
push
or
sbbb
mov
or
jo
add
lock
or
jmp
pop
pop
mov
cmp
push
cmp
je
cmp
je
cmp
je
aaa
dec
outsb
lock
jmp
mov
jmp
mov
jmp
mov
inc
out
cmp
inc
jbe
decl
mov
call
sub
mov
ret
sub
sbb
cmp
mov
pop
push
xor
test
subb
std
jne
into
pop
repz
pop
rcrl
scas
mov
call
mov
testb
je
or
and
call
aam
xchg
add
mov
cmp
test
and
push
lea
shlb
sbb
fimuls
mov
call
jp
jle
cld
mov
clc
out
mov
int3
leave
mov
cmp
cs
fisttpll
dec
cmp
mov
inc
iret
daa
xchg
cltd
icebp
iret
and
in
push
lock
xor
nop
dec
fbld
call
ds
fisttpll
mov
push
adc
fmul
ficomps
cs
sahf
jbe
xchg
push
mov
or
test
dec
jl
adc
push
cld
clc
decb
test
fiadds
mov
dec
and
dec
adc
sub
jle
mov
cmp
mov
mov
je
mov
push
push
mov
sbb
xchg
cmp
rolb
fidivs
add
push
call
add
dec
xchg
scas
add
push
inc
xchg
sahf
mov
pop
call
xor
pop
adc
jl
cmpsl
ret
popf
jb
sbb
addb
jnp,pn
lret
mov
mov
aas
orb
and
mov
loop
cmp
jecxz
fistpl
rcl
pop
pop
cltd
mov
mov
pop
or
cmp
fucomi
loop
jno
in
or
dec
adc
add
and
stc
es
movb
stos
or
add
std
and
jb,pt
adc
add
adc
push
fbstp
mov
shlb
inc
out
lcall
call
mov
cli
stos
repnz
pop
cld
pop
mov
mov
mov
push
ljmp
and
jecxz
loop
movzwl
aam
jg
ret
cmpl
jae
xchg
and
adc
hlt
xchg
pop
pop
dec
adc
jb
mov
sbb
add
and
mov
je
pop
pop
lods
clc
pop
test
push
push
xlat
aad
les
inc
sbb
jp
sbb
jg
and
mov
jp
jne
push
ss
mov
data16
mov
mov
shrb
call
and
aas
hlt
out
test
mov
test
adc
push
add
jo
xchg
push
mov
or
mov
cli
addl
shlb
into
lcall
inc
or
sub
or
out
xor
push
pushf
mov
pop
fsubp
or
dec
xlat
xchg
mul
call
fisubrl
push
loop
into
push
call
adc
adc
into
jne
out
jp
popf
ret
testb
call
mov
add
pop
mov
call
add
dec
sub
mov
loop
inc
xchg
dec
inc
jb
dec
test
outsl
xchg
lea
pop
add
movsb
ja
sbb
test
adc
dec
jg
addb
sbb
add
pop
jg
and
aaa
jbe
testb
mov
sbb
cli
xor
pop
or
lret
push
aam
pop
icebp
cld
mov
fimull
push
loopne
adc
and
sbb
inc
xchg
shll
sub
add
sbb
mov
or
test
test
in
inc
and
rclb
jb
inc
sahf
pop
inc
jg
push
fcmove
sub
lea
cmp
hlt
mov
mov
sbb
loope
rorl
cld
jne
add
jae
sub
outsb
add
sbb
cmpb
adc
sahf
daa
jmp
call
push
les
push
pop
lcall
mov
ret
push
dec
sbb
cmp
out
lea
cmp
inc
les
mov
adc
xchg
sarl
pop
es
and
out
mov
fists
push
je
pop
mov
bnd
je
cmp
lea
cmp
ja
data16
adc
aaa
or
data16
add
out
sub
inc
cmp
jae
and
nopl
incb
sub
adc
hlt
ljmp
lcallw
push
cmp
jge
or
rcr
scas
sub
in
xchg
adc
cmp
pop
or
call
clc
or
cld
dec
or
adc
or
jl
cltd
mov
cmp
aaa
stc
jne
outsb
add
dec
jnp
xor
cmp
mov
ja
add
add
clc
xor
pop
adc
test
in
cmpsb
bound
outsl
mov
add
xchg
push
push
mov
mov
cs
mov
add
mov
cs
hlt
push
dec
rcr
ss
push
mov
fcoms
mov
call
scas
mov
mov
out
fbstp
add
mov
sub
test
cmp
das
addl
test
pop
roll
mov
in
jmp
test
jl
call
jbe
add
mov
mov
add
loop
sti
pop
or
or
mov
sbb
repz
ss
xor
cld
dec
adc
loopne
cmp
lock
jecxz
cmc
jg
mov
cld
jge
xor
ja
je
or
notl
xor
iret
out
jae
lds
mov
std
xchg
sbb
adc
inc
out
fists
and
outsb
adc
pop
mov
addl
data16
jmp
add
stc
adc
cld
subb
mov
dec
add
rcll
das
push
xchg
mov
leave
mull
sbb
sbbl
push
mov
mov
jbe
fdivrs
jbe
outsb
cli
cmp
push
lods
jecxz
push
adc
mov
inc
push
push
in
adc
add
sarb
or
mov
pop
jp
je
incl
inc
insb
inc
lds
test
outsb
ret
xchg
ljmp
outsl
cli
fisttpl
aam
jbe
lea
call
cli
cmp
jge
lods
push
inc
cmpsb
adc
mov
sub
fsubrs
cld
push
xchg
subb
cmp
mov
push
roll
push
hlt
int
add
push
sbb
leave
sub
je
or
xlat
adc
add
inc
subb
aas
add
adc
jmp
mov
inc
ljmp
mov
sti
repnz
cmpsl
lock
je
mov
sub
mov
inc
cld
jbe
pop
es
das
mov
fiadds
xor
fimuls
loop
les
ja
mov
pusha
mov
add
add
jae
out
cmpsl
adc
mov
call
ret
orb
adc
je
in
pop
call
daa
pop
push
mov
cld
mov
nopl
icebp
repz
mov
pop
push
mov
sbb
in
mov
jmp
jb
or
pop
ret
test
iret
xchg
mov
xchg
push
or
clc
rcll
call
pop
inc
cmpsb
clc
ficoml
push
je
imul
add
sub
add
out
rclb
dec
jne
mov
jno
and
add
mov
mov
add
ficoms
mov
inc
hlt
xchg
data16
pop
fdiv
and
pop
fneni(8087
jecxz
mov
in
movsbl
mov
push
push
data16
mov
add
push
xor
mov
inc
pop
and
add
sbb
push
mov
xor
dec
xor
test
mov
mov
push
inc
aas
lock
add
xchg
add
inc
inc
add
loop
jl
roll
add
dec
sbbl
add
or
push
lods
inc
or
fs
ss
push
push
call
call
add
inc
inc
adc
xchg
jecxz
fidivl
mov
push
fisubs
adc
mov
out
fisttpl
cmp
push
jb
dec
cmpsl
call
mov
stos
add
xor
adc
add
fmuls
inc
sarb
jl
pop
jbe
shrb
jg
and
mov
mov
pop
or
jo
inc
iret
inc
pop
enter
sbb
jp
fisubrs
push
push
call
inc
cmp
sbb
mov
ljmp
les
jo
cmpsb
lds
jns
jp
sub
xor
jg
mov
xor
scas
mov
push
push
inc
jle
es
push
add
daa
lods
sub
or
xchg
jp
mov
sbb
idivb
scas
daa
add
jg
push
std
or
push
pop
outsb
sub
push
xor
sub
shrb
cltd
divb
pop
shl
add
es
sahf
es
lret
call
jbe
rolb
pop
xchg
mov
add
jmp
ret
fildl
or
push
je
xor
mov
call
decl
sti
outsl
jb
xor
cmp
sub
cmp
mov
jmp
cmp
jbe
lret
mov
jno
push
push
jb
je
push
mov
jo
mulb
frstor
xor
call
cld
xchg
push
loopne
inc
sbb
idiv
jno
loope
xchg
call
subb
push
test
sub
in
sub
mov
fists
cld
mov
lds
fisttpll
xchg
push
mov
leave
xor
jbe
ljmp
or
scas
or
lret
dec
popl
repnz
into
pop
jae
jo
imul
mov
inc
test
jne
pop
inc
ret
push
xchg
sub
pop
jb
movsb
rol
dec
cmc
pop
loopne
je
cmpsb
or
xorl
cli
cmp
or
push
or
mov
add
and
clc
scas
inc
or
mov
jmp
inc
jmp
mov
push
xor
call
push
or
lea
lea
pusha
js
mov
mov
xor
xchg
add
mov
aam
push
adc
idivb
mov
pop
call
fmuls
inc
push
cmp
adc
push
jb
loopne
adc
inc
adc
incl
jb
adc
xor
jb
loopne
adc
push
call
mov
cmp
hlt
lods
lods
cld
inc
push
push
outsl
lods
clc
xchg
adc
lea
sbb
test
jp
stc
pop
mov
jb
loopne
fisubs
jo
cmc
sbb
and
jecxz
xchg
test
clc
movsl
mov
sub
mov
insb
sbb
adc
add
add
jmp
sub
lods
xchg
cmpsb
xchg
jnp
ficoms
stc
or
jge
je
mov
adc
xchg
cmp
sub
pusha
ds
mov
sbbb
pop
ss
mov
pop
mov
in
outsl
or
push
push
lea
int3
popa
lock
add
lret
mov
jl
pop
cmp
or
mov
mov
clc
add
cmpsb
push
pop
aam
mov
test
out
cmp
dec
push
jmp
call
and
rorb
lea
popf
cmp
imul
pushf
mov
xor
sarl
dec
sti
mov
movsb
xlat
test
js
in
jg
sub
mov
xchg
jmp
xchg
sbb
push
xor
pop
hlt
add
add
push
cld
push
repnz
clc
out
mov
cld
outsl
xchg
fmull
push
jb
jle
ljmp
inc
add
inc
call
and
fdivrs
fucomip
push
mov
lock
jno
mov
jne
jne
mov
dec
fmuls
pop
mov
lahf
and
jo
mov
xor
xchg
or
sub
mov
lock
or
call
jge
jne
push
popf
add
dec
insb
xor
jno
xor
push
outsb
in
cld
lea
out
scas
out
pop
xchg
hlt
jmp
xchg
pop
cmpsl
ss
xlat
bound
aam
iret
or
je
mov
int3
add
ffree
rclb
adc
les
std
xor
cmp
lock
dec
add
clc
add
xchg
push
xor
cmpsb
adc
cmp
stos
subb
jbe
call
rorb
adc
dec
mov
jle
dec
clc
fadd
push
test
cmp
js
dec
inc
push
adc
addb
sub
es
adc
sbbl
ljmp
jg
fimuls
test
pop
add
push
push
jmp
shl
sbb
dec
mov
push
xchg
adc
or
scas
cmpsb
lahf
repnz
mov
or
loop
pop
pop
push
adc
fmuls
mov
cmpsl
ret
sbb
push
out
xor
mov
adc
outsb
lock
rorb
hlt
and
xchg
mov
rclb
in
ss
pop
pop
in
push
inc
sub
rclb
cltd
rol
xchg
fdivrs
add
je
xor
add
push
cwtl
cmp
sub
inc
aas
xchg
test
and
add
jmp
je
dec
or
mov
or
sbb
flds
xchg
adc
icebp
subb
push
es
inc
clc
pop
fimuls
mov
out
clc
pop
jl
dec
dec
cli
cmp
fimull
add
insb
push
add
stos
je
adc
pop
orb
and
mov
ficoml
xor
pop
sub
push
mov
repnz
push
dec
jb
mov
pop
mov
xchg
inc
mov
data16
cld
std
movzwl
cwtl
in
inc
aam
adc
sbb
hlt
fsts
or
out
nop
push
mov
xchg
mov
call
pop
incl
ret
push
jb
and
jle
adc
cmpsb
cmp
adc
cmp
icebp
ss
pop
jo
test
loope
sub
mov
jmp
mov
adc
push
jb
fs
push
in
mov
subl
dec
sub
fsubl
pinsrw
jne
call
adc
inc
adc
push
push
jbe
inc
insb
lea
sbb
mov
add
out
sub
push
loope
cmp
lds
add
add
xchg
or
je
or
cmp
mov
loopne,pt
mov
xor
inc
lcall
and
pop
adc
mov
sarl
hlt
mov
jmp
push
shl
lret
sbb
xor
sbb
std
xchg
enter
inc
in
and
scas
dec
ret
fwait
push
inc
push
dec
xchg
add
imul
push
sti
adc
dec
daa
sbb
loope
mov
dec
mov
push
mov
cmp
sar
mov
jb
jmp
mov
adc
inc
mov
repnz
out
adc
dec
jbe
dec
repz
int
lcall
add
push
or
adc
jae
jmp
ret
xor
push
xchg
adc
add
and
cmp
push
inc
dec
dec
lcall
mov
and
adc
loope
loopne
es
repz
cs
push
data16
outsb
ret
lea
hlt
call
sub
add
in
std
add
push
pusha
add
mov
xor
sbb
in
ficoml
mov
adc
out
je
push
call
cmpsb
ret
dec
dec
lods
call
ror
cmp
adc
iret
or
orb
mov
ds
rcrb
sub
scas
push
aam
inc
xor
jmp
push
inc
lahf
test
ljmp
pop
and
mov
mov
jbe
inc
mov
xchg
add
push
adc
mov
cld
lret
xchg
mov
sub
adc
jb
call
aaa
sahf
pop
test
movsl
and
mov
pop
mov
ret
out
mov
mov
stos
andb
mov
iret
and
lea
xor
outsl
push
push
inc
fmull
lret
adc
pushl
movsl
sti
adc
fdivrl
out
dec
popa
xor
mov
enter
ljmp
icebp
xchg
fcmovu
je
jne
je
cmp
imul
inc
xor
push
loopne,pn
popa
xchg
cmp
call
or
popf
rolb
add
jp
xchg
jmp
hlt
lret
or
aas
or
jne
mov
cmp
cld
sarb
pop
cmpsb
ljmp
clc
lea
mov
lock
fs
dec
sbb
or
sarb
repz
jae
mov
xchg
div
jae
xchg
dec
in
je
sarb
xchg
bound
fldt
xchg
repnz
jae
jo
jle
mov
and
pop
sub
sub
shrl
jne
lea
bound
jg
add
cli
mov
arpl
cmpsb
sbb
jle
cmp
dec
jno
mov
repz
jae
mov
test
cli
dec
pop
sbb
sub
pop
adc
adc
decl
sbbl
mov
out
pop
fcmovnu
pop
jp
push
xchg
push
mov
fisubrl
jmp
test
mov
es
fcomp
out
jl
mov
arpl
bound
and
mov
dec
pushl
scas
outsb
bound
sbb
mov
iret
jle
fisttps
mov
shrl
add
jle
inc
in
xchg
jp
mov
test
aas
xlat
loop,pn
or
push
decb
subb
std
dec
pop
into
addr16
shrl
movb
push
cmpsb
lock
decl
fistl
add
and
mov
mov
test
push
into
add
jmp
sub
inc
clc
sbb
mov
mov
add
inc
and
pushf
out
aas
push
pop
and
mov
pop
push
mov
pop
outsb
xor
sbb
pusha
xor
cmc
pop
or
nop
es
outsl
test
ss
jmp
outsb
push
cld
cmp
fsubrs
nop
inc
mov
daa
fbstp
sub
and
and
adc
or
inc
js
jmp
mov
arpl
mov
dec
lcall
or
or
fnsave
cmc
mov
or
fldt
in
mov
aaa
jle
push
jg
clc
stc
lret
jne
inc
xchg
ret
mov
pop
aam
data16
fbld
enter
and
add
fists
pop
lcall
cmc
mov
pusha
clc
addr16
mov
movsl
leave
sti
mov
andb
jnp
test
xor
jo
push
inc
dec
push
jo
push
aaa
cmp
sub
or
push
fildl
or
mov
xchg
push
int
mov
push
push
popa
call
cld
mov
and
jne
sub
xchg
and
adc
neg
insb
stc
xor
push
jb
fadds
aad
int3
mov
movsl
subl
pop
sub
pop
scas
fidivrl
dec
inc
pop
insl
inc
imull
inc
je
sbb
movsb
push
push
cmp
adc
das
mov
loope,pn
arpl
mov
adc
inc
and
jmp
push
xchg
shlb
push
pushf
push
adc
jo
adc
mov
xor
mov
mov
mov
cmp
adcb
hlt
cmp
imul
push
jbe
call
testb
inc
call
push
xchg
xchg
shrb
add
add
cmpsb
add
or
cmp
jbe
or
add
aad
xchg
test
lock
or
popf
les
xchg
pop
pushl
push
xor
dec
xchg
push
xor
rcr
sbbb
cmp
lea
test
jo
call
mov
pop
insb
xchg
or
cmc
mov
aas
call
mov
clc
imulb
mov
inc
push
test
xchg
push
loop
lods
loope
and
enter
fs
mov
es
in
push
imul
aas
jo
push
hlt
add
call
and
int3
fldt
add
outsb
jge
dec
clc
mov
or
dec
in
fmull
push
iret
lret
pop
push
xor
movzbl
out
push
pop
cmp
out
mov
and
push
call
jae
or
push
mov
popa
lds
das
cld
jns,pt
outsb
fstl
mov
rolb
call
into
lds
and
es
mov
bound
inc
cmp
or
scas
xchg
std
ss
stos
mov
pop
push
fdivr
imulb
in
adc
jnp
shrb
sub
testb
lea
test
shr
or
push
xchg
jg
mov
lret
dec
fcoms
inc
inc
enter
inc
pop
mov
push
test
mov
jmp
lods
orl
xor
jno
addr16
mov
or
jo
sahf
mov
repnz
push
out
adc
or
test
notb
or
or
mov
jo
ds
push
cmp
sub
jg
push
dec
mov
jg
loopne
or
pop
mov
dec
jle
push
push
xor
mov
aam
push
mov
notl
inc
jne
decl
or
push
decb
dec
dec
decb
stc
mov
lock
in
mov
push
push
rolb
xor
inc
sti
ljmp
or
xor
ja
inc
pushl
pop
mov
mov
mov
cwtl
add
testb
and
sub
jne
mov
sbb
add
cmp
jne
inc
dec
jne
pop
pop
pop
lods
rolb
push
lret
cmc
push
dec
insb
and
xchg
cmc
ja
rclb
xor
inc
sbb
push
call
jbe
mov
data16
jmp
loopne
dec
jne
mov
push
je
shr
mov
call
xchg
sbbl
mov
loope,pt
rcll
or
jne
cmp
jg
or
cld
cmpb
dec
cmc
mov
loopne
cli
and
shl
std
ja
add
jmp
xchg
outsl
jmp
mov
addb
fsubrs
add
outsb
sub
dec
jge
outsl
insl
jnp
fisubl
into
repz
cmp
leave
cltd
mov
ljmp
add
push
add
push
jl
or
out
mov
mov
push
add
dec
add
addr16
test
xchg
inc
sub
cmp
hlt
cmp
flds
scas
add
int3
push
inc
ljmp
xor
jnp
jne
loop
inc
sti
jg
push
ret
add
incb
inc
sub
ja
out
rcll
das
int
test
mov
outsl
xor
lock
sar
and
cmp
jb
push
pop
inc
add
push
loopne
leave
mov
inc
addl
jne
mov
sbb
push
shl
aas
call
sub
mov
cld
mov
push
push
cmc
dec
sti
rcrb
ret
lea
add
std
ds
mov
movl
leave
mov
push
jecxz
or
jb
outsb
pop
adc
cmpsb
pop
mov
mov
fiadds
jbe
jb
add
dec
out
xor
mov
mov
ret
cmp
je
test
es
call
outsl
xchg
push
and
adc
jne
fsubs
jl
inc
jb
sub
sahf
lea
push
xchg
mov
movsb
je
loopne
cmc
cs
test
ja
cmp
push
call
push
push
inc
mov
cli
mov
notl
push
add
decl
mov
push
mov
add
cmp
jne
je
mov
iret
xor
stos
and
jl
xchg
dec
cmpsb
push
and
cld
xor
ret
je
inc
movsb
lock
or
add
push
mov
call
sub
adc
dec
xor
mov
pop
xchg
outsb
in
lods
sub
int3
fs
cmp
fldpi
std
in
outsl
add
mov
adc
ljmp
mov
inc
pop
je
loop
push
push
mov
call
push
mov
and
cld
scas
fwait
lods
jbe
or
cmpsb
fisubs
outsl
cmp
test
adc
push
call
rorb
pop
out
jp
pop
push
sbb
std
icebp
loopne,pt
push
repnz
add
push
loopne
mov
push
imul
or
adc
inc
nop
repnz
out
mov
adc
add
addr16
jmp
mov
sbb
mov
outsb
int3
dec
jle
outsb
test
push
in
jo
lret
movsb
mov
loopne
call
aad
faddl
cmc
add
inc
into
call
inc
shlb
xor
push
hlt
cmp
rcll
repnz
movsb
push
lock
ljmp
ret
test
das
xchg
jo
xchg
add
ficompl
add
into
mov
popa
xor
or
jp
inc
outsl
add
add
mov
add
mov
into
mov
jmp
mov
gs
or
mov
cmp
add
stos
std
xor
push
xor
aaa
xor
adc
cmp
rol
sub
and
mov
xchg
jp
or
push
xor
imul
insb
add
mov
lret
inc
ret
pop
pop
cmp
inc
jl
mov
jo
add
ret
mov
adc
push
add
mov
jl
test
mov
dec
mov
pushf
add
mov
adc
and
addr16
fadd
or
and
pop
inc
rcll
mov
int3
add
test
daa
mov
int3
andl
ret
xchg
subl
mov
or
sbbb
xor
xchg
ficompl
xchg
add
jae
push
std
outsl
mov
lea
call
add
cmp
jg
jl
push
and
cmp
roll
inc
js
in
pop
cmp
inc
jnp
jae
mov
adc
pop
pop
andl
and
test
je
add
call
ds
subb
addb
lock
xor
adc
pop
andb
nop
lea
cmp
dec
es
or
orb
out
hlt
and
sbb
leave
cmp
outsl
sbb
mov
cmp
cmp
ljmp
rorb
cld
cmp
rol
jne
inc
mov
ljmp
les
mov
sbb
xchg
rclb
test
sti
adc
cli
push
adc
push
add
call
mov
push
xlat
call
clc
ljmp
xchg
scas
push
test
ret
sbb
cmp
jbe
pop
xchg
xor
sub
aaa
add
testb
push
sbb
add
or
push
int3
xchg
fisttps
jbe
test
inc
mov
fistl
mov
fwait
sbb
pop
shrb
mov
mov
stos
and
out
push
stos
test
clc
add
add
push
mov
sub
rorb
add
cmp
pcmpeqd
inc
in
aam
add
adc
add
or
mov
mov
jbe
adc
mov
xchg
popa
mov
or
stos
adc
jne
add
push
xchg
xor
xchg
ss
das
cli
mov
inc
psubsb
dec
add
adc
xlat
push
add
dec
sub
cs
sbbb
fucomi
mov
inc
orb
enter
ficoms
jne
mov
cmpsb
rcrb
pushf
out
inc
or
inc
outsb
push
idivb
outsl
rorb
clc
pop
outsb
xchg
push
pop
xor
add
adc
and
sbb
xor
sbbb
out
mov
test
or
cmp
addb
or
mov
push
push
add
or
sub
iret
repnz
and
pop
testl
popa
aaa
lods
add
je
mov
incb
out
xor
add
imull
test
or
mov
incb
mov
cmpsb
ljmp
cmp
sub
jge
pusha
inc
pop
pusha
pop
adc
out
addl
sar
xor
and
dec
jne
adc
sbb
mov
mov
pusha
or
data16
jo
xor
decl
stc
popa
jb
cmp
add
inc
cmp
pop
push
pusha
push
add
stos
add
mov
lea
movsb
daa
jno
sub
jp
adc
fs
sbbl
pusha
jle
rorb
pop
ss
outsl
adc
pop
cmp
dec
dec
loope
ret
loopne
jb,pn
or
dec
outsb
mov
jg
icebp
jne
lds
cltd
sub
cmp
inc
aaa
and
add
pusha
add
lret
adc
sbb
add
jle
lea
mov
cmp
leave
sub
outsb
jmp
mov
stc
push
dec
xchg
loopne
adc
shr
loopne
pop
shrl
cmp
pop
test
outsl
push
mov
cmp
add
push
pop
mov
cmp
je
loopne
aam
or
sub
or
call
clc
mov
jge
lret
inc
push
inc
adc
dec
lea
push
add
test
in
cmc
jg
loopne
pusha
sahf
cli
cmp
cmp
mov
movb
ja
jp
fwait
and
inc
push
mov
decb
add
add
sub
outsb
jmp
xor
pop
in
adc
loop
and
lea
pop
mov
cmp
sub
in
mov
add
pop
into
jb
adc
loopne
dec
jecxz
loopne
adc
push
add
scas
call
rcrl
jecxz
mov
and
add
add
cmp
add
inc
call
mov
in
jg
pop
mov
jb
cmp
call
jmp
je
repz
adc
call
loopne
add
loope
cli
out
icebp
fildll
push
add
test
popa
lea
pusha
test
je
push
clc
and
nop
mov
cmp
push
mov
aaa
aad
pushl
add
xchg
add
pushl
rorl
addl
loope
decl
xchg
push
jb
popf
in
pusha
adc
pop
popa
or
add
mov
xor
scas
or
insl
pusha
cmpsb
push
and
das
inc
or
xor
mov
push
loope
push
adc
add
sti
call
loopne
sbb
call
bound
or
jmp
shll
cmp
and
or
jmp
or
mov
or
nop
test
sub
adc
test
fbstp
push
and
pop
fimuls
or
pusha
and
inc
in
adc
mov
mov
push
lret
in
call
pushf
fcomps
adc
mov
xlat
cmp
cmp
cld
ljmp
loope
cmpsl
xchg
xchg
les
mov
movsl
add
jne
loop
aad
jmp
test
imul
inc
pusha
or
call
jne
add
xor
adcb
xchg
inc
sbb
fcompl
add
bound
or
sbb
call
xchg
adc
push
pushf
loop
pop
and
frstor
out
scas
in
movsb
pusha
push
push
fbld
insl
mov
dec
mov
adc
or
push
out
fsubrs
je
mov
loope
add
cmp
xchg
jp
add
std
jmp
dec
insl
lcall
loopne
sbbl
add
or
pop
imul
scas
loop
out
pusha
ljmp
clc
outsb
xor
jmp
adc
or
jb
fnsave
movsl
add
or
mov
sbb
and
je
adc
inc
xor
cmc
or
push
mov
mov
adc
shlb
addb
in
sub
jbe
adcb
mov
mov
ja
and
mov
sbb
pusha
test
jo
add
mov
jecxz
xor
loopne
mov
aam
sbb
pop
add
fcoms
and
add
xchg
mov
sbb
subb
shr
mov
add
add
xchg
pusha
js
jo
icebp
jo
pop
std
cmpsb
xor
push
and
pop
call
ret
push
and
aam
xchg
add
test
xor
call
call
jbe
pop
add
jno
cmpb
aam
adc
adcl
mov
add
cs
mov
or
jb
clc
mov
shlb
leave
cmp
repnz
js
cli
inc
inc
push
and
dec
testl
es
mov
pop
ud0
jp
xor
mov
sbb
mov
push
imul
xchg
mov
mul
adcb
sbb
lock
jp
rclb
push
push
and
add
mov
pusha
sub
push
jb
test
xor
mov
fbld
sar
sbb
inc
mov
call
xlat
push
rcll
pop
mov
cld
dec
ljmp
push
inc
or
xchg
mov
or
filds
insl
xchg
xor
inc
call
inc
test
inc
cmp
mov
inc
cmpsb
fdivs
mov
jb
cld
or
scas
mov
rorb
sub
testl
xchg
loopne
jo
push
push
mov
sub
jecxz
ljmp
or
xor
mov
and
cmpsl
mov
xor
push
test
mov
mov
push
mov
jb
mov
inc
jp
insl
push
dec
adc
out
add
sub
add
sbb
call
loopne
dec
or
add
xor
nop
jmp
jo
mov
push
jmp
dec
inc
lock
lock
mov
out
repz
sub
test
push
lock
insb
lods
xor
jb
ss
sbb
test
cmp
jg
flds
sbb
or
or
jae
testb
into
adc
jg
and
push
pop
lods
popa
adc
sub
lea
cld
cld
push
cwtl
xor
and
gs
mov
inc
mov
pop
sub
mov
inc
cmp
xor
mov
loop
clc
sub
xor
and
scas
or
sbb
pusha
xchg
or
add
decl
addb
push
lock
stos
lret
sub
leave
mov
xor
mov
fists
lods
lea
push
jle
add
jo
push
sbbl
mov
adc
mov
push
mov
insb
add
fs
xor
roll
jb
adc
and
mov
jmp
xor
cwtl
sbb
in
lock
push
test
dec
repnz
jno
mov
jb
adc
xor
jecxz
sbb
add
jo
add
add
adc
stc
js
loop
add
or
lock
subb
mov
push
xor
sbb
adc
data16
call
or
outsl
cmpsb
pop
push
xchg
insl
inc
mov
stos
sbb
pushf
mov
cmp
fidivrl
inc
rolb
cmp
push
rcrb
clc
push
cs
inc
cmp
decb
test
and
push
cld
add
sahf
test
dec
push
in
mov
test
adc
pop
pop
push
mov
cld
call
jecxz
and
mov
add
test
pop
ljmp
je
inc
sbb
push
fiaddl
cmp
cmp
ljmp
mov
mov
pop
stos
or
testb
les
add
dec
jg
cmp
and
test
add
mov
xor
push
into
jmp
sbbb
xor
add
mov
jp
sbb
pop
hlt
jl
or
xchg
movsl
ja
or
xorb
push
movsl
mov
adc
pop
adc
stos
sub
lods
push
shll
dec
lea
jg
inc
inc
lods
and
int
and
sub
adc
dec
jno
jno
dec
inc
lds
js
push
jge
or
into
data16
xor
ret
add
adc
mov
cmp
push
inc
enter
add
pop
loopne
and
pop
inc
pusha
mov
push
push
pusha
lcall
push
xor
mov
mov
pusha
psubsb
mov
ffreep
cmp
mov
hlt
xor
sahf
xchg
add
xor
aam
cmpsl
call
aad
adc
adc
cltd
adc
push
lock
adc
sbb
or
push
fadds
dec
testb
adc
xchg
insl
dec
jg
lcall
xor
or
adc
xchg
stos
cmc
add
mov
outsb
cld
leave
adc
les
ficoml
jo
mov
divb
push
in
fcmovnbe
icebp
int3
push
inc
fdivl
fwait
call
imulb
scas
jmp
adc
cld
subb
push
add
jmp
sar
mov
call
xchg
and
insl
mov
inc
adc
jmp
xor
test
dec
lock
icebp
or
mov
dec
ss
pop
outsb
lock
push
mov
ljmp
test
and
xorl
loope
mov
adc
lods
scas
push
pop
pop
mov
add
movsb
jle
mov
or
cs
lret
mov
lock
or
inc
lock
and
cmp
mov
cmp
jae
rclb
cwtl
ficompl
scas
push
and
aam
adc
decl
sbb
xchg
push
stos
addb
imul
jo
add
push
pop
pop
data16
dec
push
xchg
inc
in
aam
pop
xor
lods
nop
in
dec
stos
xchg
mov
dec
or
test
xor
mov
cmp
mov
mov
pop
popa
push
push
sub
pop
in
sub
or
pop
outsl
fdiv
fisttps
insl
out
popl
push
cmp
or
lea
mov
pop
pop
mov
or
and
sub
push
push
test
push
outsb
dec
js
xlat
mov
add
jb
enter
lods
add
pop
lock
scas
jne
cltd
sub
add
clc
ss
jne
add
jmp
push
std
xchg
call
aam
cmp
inc
lock
cmp
pop
sbb
add
add
loope
lock
mov
mov
pop
call
imul
mov
lret
pop
je
loopne
sub
and
arpl
loope
mov
jmp
dec
add
push
je
pop
dec
mov
cmp
mov
cmp
pminub
in
push
add
adc
inc
xchg
adc
add
mov
jmp
ss
sub
lcall
pop
sub
jecxz
and
pop
ret
in
pop
inc
jle
fwait
loop
add
add
call
add
sbb
clc
add
imul
pop
inc
mov
add
in
roll
pop
push
movsl
inc
js
stos
inc
sub
push
dec
add
cld
cmovbe
fld1
fiadds
adcb
jp
fstps
xchg
mov
fcomps
push
cmp
mov
mov
xor
and
add
adc
add
or
scas
sbb
mov
sub
popf
repnz
aam
push
push
bound
lcall
push
adc
adc
add
and
fucomi
cmp
jmp
mov
movsb
subb
arpl
mov
clc
call
mov
mov
add
xchg
aaa
sbb
or
fsubr
add
loope
orb
add
jge
push
fcoml
dec
mov
lcall
xchg
fsub
sub
and
xchg
ret
repnz
pop
adc
movsl
jle
add
add
push
icebp
sub
and
lds
bound
pop
ss
idivl
cmp
add
push
or
dec
hlt
mov
lods
ja
les
test
inc
lea
or
pop
sbb
adc
mov
movsb
ds
shrb
or
add
jg
and
mov
lock
sub
and
scas
shlb
mov
stos
mov
call
mov
test
mov
inc
cli
and
jg
push
or
xor
call
addl
leave
mov
push
lcall
test
bound
lcall
mov
test
inc
mov
mov
repnz
lods
add
pusha
add
mov
lods
pop
rorb
add
test
or
add
addb
add
adc
or
sarb
notl
aas
shlb
lea
pop
pop
cmpsl
mov
push
clc
outsl
inc
arpl
xchg
add
jp
nop
shlb
shrb
pop
or
pop
test
cmp
movsb
test
lods
pop
addb
jo
inc
add
pop
shll
rcrl
push
or
jbe
push
lods
mov
xchg
and
adc
mov
jne
cld
push
lods
ja
cmp
mov
rcll
cld
jl
add
or
loopne
rclb
xchg
faddp
jg
ss
push
push
add
rorb
dec
subb
add
inc
loopne
sbb
subb
push
add
inc
add
js
sbb
dec
jg
jecxz
adc
or
loopne
add
bound
adc
add
adc
mov
movsl
cli
sub
lea
pusha
or
imul
call
aas
popa
sbb
pusha
daa
loopne
clc
cld
testl
pusha
adc
add
pop
push
jg
rcll
mov
cmp
dec
cmp
das
call
push
in
test
lret
outsb
testb
daa
lods
cli
push
jbe
call
adc
add
out
loopne
mov
or
clc
pusha
and
push
add
fs
add
add
mov
adc
fsubrs
loopne
loopne
popa
jno
loopne
cmpl
sti
jbe
bound
aam
or
xchg
ljmp
decl
jne
push
pusha
cltd
or
and
or
ds
or
push
insb
enter
adc
call
out
mov
mov
lock
loopne
xor
and
shrb
and
jbe
cmp
mov
sbb
mov
jmp
sub
xor
jne
je
or
pop
mov
mov
loope
pop
icebp
pusha
test
addl
dec
ljmp
mov
or
add
cmpl
push
xchg
test
add
pop
aaa
decl
stos
sub
test
call
adc
enter
orb
fiadds
add
or
std
push
sbb
inc
pop
mov
outsb
inc
sbb
push
sbb
sbb
inc
aam
sub
or
paddsw
mov
mov
js
push
adcb
sbb
pop
enter
loop
fmuls
lret
pop
or
and
orb
decl
in
push
inc
pusha
popf
loopne
in
pop
push
sbb
jnp
push
add
jl
loop
sbb
inc
push
les
push
adc
shl
push
push
in
loopne
lock
or
jbe
inc
push
mov
mov
es
jne
mov
sbb
aaa
hlt
mov
cwtl
pop
data16
sahf
mov
icebp
mov
push
loopne
inc
xor
popa
cmp
fisttps
add
loopne
push
cmp
decb
cltd
stc
rorb
mov
test
cld
pusha
lahf
lea
lods
loopne
mov
sub
cld
jmp
add
in
loope
rsqrtps
add
scas
mov
popa
mov
pusha
sbb
xchg
push
push
movsb
sti
sbb
call
pop
or
add
xchg
push
mov
add
cli
cmp
push
cmp
push
mov
lds
lods
call
mov
addl
clc
ljmp
sub
add
stc
mov
add
fisttpl
es
and
inc
in
inc
cli
jg
pop
jo
xor
scas
shll
dec
hlt
call
outsl
sub
lcall
mov
lods
adc
cmp
test
das
push
inc
cmp
mov
adc
xchg
inc
mov
xor
insb
push
jne
clc
je
js
xor
sbb
inc
sar
inc
out
lock
and
loop
or
lock
xor
push
dec
dec
sub
int3
push
adcb
jg
add
xchg
jb
and
and
add
lret
add
or
jne
es
loope
push
push
pop
insl
repnz
call
adc
sbb
dec
and
int3
jo
add
cmp
call
ret
jo
mov
xlat
jo
mov
jmp
shl
pop
jb
mov
push
cld
xchg
stos
add
adc
inc
jns
add
cltd
sub
sub
or
jge
lock
xchg
lea
call
popa
inc
dec
and
or
jle
cmp
loopne
adc
add
adc
test
cld
jo
mov
add
cmp
mov
dec
aad
inc
idiv
push
outsb
aas
data16
cmp
jl
shlb
mov
fs
incb
loope
pop
or
sub
push
add
xor
add
movl
jg
xchg
jbe
push
mov
adc
push
pop
add
jae
push
cli
add
xor
add
stos
hlt
push
push
xchg
rolb
stos
outsl
aam
or
jl
clc
stos
lock
mov
jg
mov
add
sub
mov
xchg
jle
dec
loopne
mov
das
xor
je
adc
xchg
and
jnp
and
icebp
jg
data16
lret
xor
jle
pop
rclb
push
dec
les
pop
ljmp
nop
xchg
test
and
dec
jo
push
push
lcall
push
ja
pop
and
add
mov
mov
cld
xor
sbb
lcall
sbb
and
fwait
lock
add
lock
loopne
cmpsb
xchg
sub
ret
mov
dec
lock
adc
sbb
add
push
sub
add
xor
and
pusha
stos
sub
mov
inc
js
inc
adc
mov
mov
imul
ja
adc
or
mov
push
inc
xchg
mov
scas
mov
mov
ljmp
cmc
addb
sbb
push
test
push
mov
mov
push
incl
fildl
cwtl
outsb
cmp
or
pop
dec
cmp
std
or
je
test
adc
push
jno
and
push
js
je
or
test
and
push
cs
mov
shll
mov
jo
stos
imul
mov
and
mov
subl
adc
mov
cli
jle
cld
cmpsl
in
inc
adc
xor
pop
adcl
rcrb
cmpsb
xor
int3
fcmovnbe
and
sar
or
add
lock
data16
add
xor
call
adc
cmp
and
or
mov
sbb
sti
popa
jne
pop
mov
and
sub
push
out
lock
ja
lret
dec
cmpl
or
jnp
jne
pop
add
out
clc
cmp
push
mov
pop
inc
call
xchg
jecxz
pop
dec
lcall
ja
jg
icebp
ja
stos
jg
int
mov
jb
and
and
jb
add
push
jb
mov
adc
xor
add
lcall
pop
cld
jne
push
jge
inc
js
xor
mov
and
or
inc
in
sbb
in
or
fdivs
dec
orb
je
pop
fists
and
jne
lods
push
cmpsb
xchg
or
and
lret
hlt
mov
adc
inc
addl
jb
jo
jbe
sub
std
scas
in
ss
xchg
lret
mov
push
mov
ret
or
call
push
jg
popa
ret
daa
push
insb
icebp
inc
lock
sar
add
jle
pop
jge
lea
pop
pushl
sbb
stos
inc
dec
mov
negb
add
sti
pusha
test
jle
push
movb
add
mov
mov
xchg
mov
std
scas
jl
inc
or
cmovns
insl
push
push
inc
inc
les
out
inc
sti
mov
out
mov
aas
fisttps
push
add
iret
andl
es
out
pop
test
mov
in
xor
mov
push
lods
cmp
or
in
notl
adc
mov
cmp
add
pushf
add
inc
xor
pop
and
std
pushf
xchg
adc
xchg
mov
add
je
clc
add
adc
push
xchg
sub
nop
mov
xchg
loope
push
push
cmp
jo
pushl
in
push
je
fcoml
sbb
inc
push
mov
repnz
scas
mov
xchg
or
mov
add
jo
add
ds
je
aaa
push
fisubrl
bound
cmp
je
clc
add
lock
xorb
mov
and
and
jne
and
jge
sbb
mov
inc
mov
pop
cmpsl
adc
mov
cli
xor
sarl
clc
inc
xor
pop
push
imul
in
enter
outsb
cwtl
les
test
xor
pop
mov
das
aam
aaa
add
lcall
insb
mov
hlt
push
push
test
xor
test
nop
je
decl
outsl
sbb
push
arpl
mov
lock
lock
push
jb
dec
mov
js
add
or
clc
cmpsb
ljmp
mov
lods
std
push
jno
mov
and
mov
call
dec
adc
clc
rcrb
dec
arpl
sbb
sbb
push
inc
add
divl
cmp
aaa
adc
xor
rorb
fistpll
ljmp
stc
adc
call
outsb
mov
sub
xor
jmp
divb
call
mov
inc
dec
cmc
add
into
or
lea
lods
push
cmpl
ss
in
cwtl
inc
xchg
mov
pop
jg
fadds
mov
jp
xorb
xchg
cmp
lods
in
mov
push
adc
pusha
clc
into
cli
rorb
jmp
mov
add
dec
jne
inc
into
out
cmp
inc
jae
outsb
mov
out
pop
ret
mov
mov
filds
inc
and
xlat
and
rclb
add
ret
lea
push
push
sub
fsubl
sbb
sbb
inc
rolb
in
flds
outsb
dec
and
mov
pop
xchg
jmp
fsubl
lcall
stos
fsubl
sub
and
sbb
cmp
add
push
clc
nop
xor
lods
and
add
int3
fs
inc
or
mov
aam
add
jle
xchg
push
popa
rcr
add
push
xor
pop
jne
fdivs
pusha
popl
in
rcrl
rorb
add
jo
scas
incb
insb
or
loop
stos
push
add
ret
adc
call
or
clc
test
xor
movsb
pop
add
int3
js
inc
sahf
cli
adc
or
jg
inc
jecxz
adc
lret
or
add
mov
mov
pop
call
add
jmp
subl
adcb
popf
xorb
adc
test
sub
dec
mov
stos
cld
push
xor
add
lock
popa
and
mov
rolb
adc
sub
fwait
mov
xchg
rolb
es
mov
mov
ljmp
pushf
addb
jmp
inc
adc
add
mov
add
jp
sbb
mov
add
push
test
scas
mov
ret
scas
movsl
xorb
add
xchg
add
rclb
ret
lahf
jo
out
sub
or
jnp
and
xor
cltd
lock
rclb
cli
inc
call
and
into
pop
inc
lea
shrb
jl
mov
cmp
push
enter
roll
ret
push
cmp
mov
fucomi
std
mov
push
adc
push
jmp
xchg
pop
sar
in
inc
cmp
popf
shrb
add
shlb
push
push
push
aam
mov
lods
cs
cmp
mov
mov
and
adc
daa
and
les
dec
ja
stos
cwtl
rclb
adc
rclb
enter
lds
pushf
sbb
fisubrl
add
sub
jp
je
outsl
sub
sub
dec
push
inc
mov
cmp
call
stos
and
bound
add
push
sbb
add
pop
mov
inc
pop
lret
sub
mov
or
add
jb
es
or
and
add
popl
cli
and
and
call
pop
adc
rclb
pop
testb
mov
outsb
mov
and
push
xchg
or
shlb
divb
jae
xchg
rolb
rolb
mov
pop
and
add
cmp
pop
call
daa
add
push
adc
jg
jo
loopne
xchg
clc
ret
jg
fisttps
and
sti
pusha
int3
adc
insl
std
loopne
jecxz
bound
push
ficoml
clc
das
mov
add
xchg
loope
sahf
jp
loope
ret
loopne
pusha
dec
add
mov
pusha
add
hlt
int3
div
loope
add
add
mov
call
dec
movsl
mov
add
jg
or
mov
andb
add
push
and
shlb
push
clc
fbstp
clc
shlb
mov
add
es
ljmp
add
call
loopne
lock
pop
loopne
pop
fwait
hlt
test
and
loope
dec
push
add
and
test
aas
dec
outsl
std
cld
idivb
notb
stc
cmp
cmp
fldenv
loop
push
loopne
adc
loope
cmp
ja
push
and
xchg
fcoms
inc
cld
add
and
add
pop
icebp
jg
mov
jmp
pop
test
test
push
mov
outsb
inc
rolb
test
insb
adc
loopne
out
dec
xchg
mov
xchg
cmp
jmp
and
jl
scas
adc
nop
outsl
pusha
loopne
lcall
sub
mov
jo
fisttpl
adc
and
pop
popa
jbe
add
mov
enter
repz
call
stos
and
loopne
loopne
xchg
xchg
loopne
pusha
es
dec
popa
mov
sahf
inc
insb
jmp
andl
mov
inc
mov
sub
push
loop
xor
and
mov
xor
mov
hlt
fst
pop
sub
call
mov
mov
in
jg
mov
lcall
das
adc
gs
jp
xor
mov
lods
jmp
clc
mov
jo
imul
jne
je
push
jmp
ja
xchg
sbb
mov
sub
ljmp
adc
sub
je
adc
mov
and
pop
ret
incl
pusha
sbb
xor
cmp
mov
cwtl
pop
or
xor
je
fisubrs
push
xor
cmp
test
aaa
inc
in
mov
sbb
arpl
add
or
lcall
sbb
lea
andl
jns
or
adc
pusha
pop
xchg
jo
shlb
fildl
pop
mov
adc
cmp
test
push
stc
jg
cmp
xor
call
pop
out
popa
aaa
mov
or
imul
dec
movl
jbe
call
lock
call
inc
adc
sti
sbb
loopne
call
pop
or
arpl
pusha
ss
rcl
jo
lahf
loop
loopne
scas
and
popa
nop
and
and
sbb
dec
lcall
mov
mov
pop
mov
add
mov
dec
cmpsb
scas
cli
scas
push
xchg
jb
sarb
and
add
aaa
jge
push
inc
inc
pop
mov
jecxz
adc
add
fsubl
ljmp
mov
enter
loopne
mov
cmc
pop
sar
bound
loopne
and
pusha
xlat
cmpsb
cmp
lea
movsb
pop
iret
ss
push
mov
incl
cld
jb
mov
inc
fists
jge
xor
add
push
inc
push
loop
sbb
fcomps
ss
insb
out
inc
mov
loopne
pusha
push
jnp
mov
fiaddl
inc
test
xor
adc
pop
jo
cmp
add
add
shlb
xchg
les
shl
mov
adc
jmp
xor
or
ss
sub
andb
or
data16
call
clc
adc
jge
sti
fisubs
jo
jb
mov
mov
mov
ret
and
xor
mov
roll
stos
pop
push
test
cmp
shlb
fdivrl
push
dec
addr16
ja
xor
shlb
add
and
out
jp
out
jo
jne
and
mov
mov
xchg
xchg
lock
call
jp
mov
mov
pop
test
or
int3
or
int3
xchg
jo
jg
or
jae
push
lock
aad
jg
jae
fdivr
jo
mov
push
add
sbb
subb
cld
adc
mov
mov
and
and
mov
fiadds
or
and
or
inc
inc
xchg
dec
daa
outsb
push
insb
cld
jg
jmp
clc
mov
sti
cmp
add
stc
add
data16
jmp
add
jns
insb
push
outsl
push
push
or
fcoms
add
jb
add
add
pop
push
push
mov
outsl
adc
mov
test
lea
fwait
bound
aaa
xor
aaa
addl
dec
mov
or
ljmp
cmpsb
mov
orb
xorb
xor
fcomps
push
jne
dec
jge
push
dec
ja
sub
inc
popa
mov
adc
fsubr
and
jmp
xor
mov
push
jae
imulb
daa
push
push
gs
or
mov
loopne
or
adc
xor
popa
int3
int
push
mov
pop
pusha
sbb
add
mov
mov
out
enter
addb
mov
mov
add
arpl
icebp
jg
lret
lock
adc
push
ds
ss
adcb
fcoml
into
jmp
stos
pop
mov
inc
cld
out
push
test
insb
add
ret
sar
addl
enter
and
fs
rclb
idiv
mov
xorb
mov
bound
inc
jg
test
aam
push
mov
popf
icebp
sub
ljmp
add
mov
lea
dec
or
push
pop
jne
pusha
ret
jb
adc
loopne
cmp
add
dec
pushf
jl
addb
mov
jne
cld
add
or
mov
shrb
cmovns
cmp
push
dec
add
pop
sub
inc
inc
lcall
mov
push
push
mov
js
cmp
and
adc
jo
mov
lds
push
fdivl
mov
xchg
shlb
mov
inc
ret
ss
jb
das
lock
inc
dec
fisttps
je
ds
cmpsl
mov
add
mov
je
jo
inc
jb
mov
or
stos
nop
adc
dec
push
or
jg
fs
pop
xchg
jo
icebp
xor
je
aaa
ja
push
inc
icebp
inc
jmp
call
xor
xor
std
sbbl
jb
iret
jo
sbb
jnp
jge
out
add
pop
jne
fsubp
inc
cmp
push
pop
lods
mov
and
pushf
cmp
jge
test
mov
shr
lock
adcb
out
or
mov
shlb
add
sbb
add
ffreep
je
sub
lret
sbb
ja
pushl
xorl
push
inc
pop
xchg
jo
mov
push
adc
scas
rcr
jb,pn
push
add
inc
or
mov
mov
push
js
ret
fwait
mov
les
push
adc
in
or
cmp
xchg
repnz
lods
pop
adc
mov
or
mov
cld
push
aas
scas
jp
mov
ficoms
out
xor
fsubl
js
fdivs
hlt
jge
mov
inc
and
nop
call
mov
lock
sbb
call
mov
call
push
jle
push
jmp
rorl
mov
cmp
enter
push
inc
adc
cmp
enter
or
mov
dec
mov
mov
lcall
call
mov
lock
fisubrs
adc
push
cmc
sbb
add
push
pop
ret
add
pop
xor
fisubrs
std
mov
add
call
and
jo
fists
mov
mov
jo
dec
mov
push
pop
push
pop
loopne
mov
repnz
adc
jg
es
add
xor
inc
and
lea
cmpsl
mov
and
andl
push
mov
mov
pop
loopne
outsl
jo
int
mov
add
push
mov
icebp
add
jo
fsubl
cmp
adc
jns
xor
xchg
jmp
jo
jecxz
xor
lock
mov
inc
jb
jb
and
scas
pushl
mov
adc
mov
push
jecxz
cmpsl
mov
andb
call
mov
push
sub
xchg
scas
adc
in
fbstp
fs
sar
stos
add
movb
into
sbb
add
lods
pop
das
ss
cmp
cmc
stos
jl
ja
dec
inc
notl
jmp
adc
push
sbbl
out
push
inc
cmc
call
ljmp
ja
loop
lock
adc
testl
mov
scas
je
pop
lock
and
sub
sbb
mov
cld
cmp
je
cmp
xor
out
loopne
arpl
adc
std
mov
fwait
push
dec
cld
mov
add
adc
mov
add
rolb
xorl
ljmp
es
push
mov
mov
insb
insb
incl
xor
xor
out
jg
loope
mov
pop
insb
movl
add
sbb
xlat
stos
push
cmc
ljmp
dec
sub
call
stos
icebp
sbb
in
enter
cmp
sub
or
mov
mov
cmpsl
sahf
pop
cwtl
iret
add
adc
pop
inc
test
outsl
add
mov
incl
sub
movsb
add
and
jb
lods
testb
pop
mul
jp
mov
add
call
inc
call
fcoml
add
ret
sbb
sub
std
clc
enter
test
add
xlat
aam
outsb
sub
or
sbb
mov
adc
or
and
es
in
sbb
fbstp
add
and
popa
lea
jle
data16
ss
test
aaa
je
push
xchg
add
push
test
sbb
push
push
add
push
hlt
nop
pop
push
add
inc
jl
test
or
xor
add
jne
jbe
sbbb
clc
and
lret
subb
mov
das
call
adc
xor
sbb
xor
dec
les
scas
stos
out
sub
orb
mov
add
push
mov
call
xchg
add
sti
or
pop
sbb
mov
push
pop
jl
pop
mov
push
neg
pop
test
inc
mov
inc
call
xchg
jne
mov
mov
adc
xchg
cmp
call
cld
pop
rclb
rorl
or
or
mov
add
cmp
add
das
mov
cmp
sbb
mov
and
fcmovnb
inc
loop
lods
jmp
out
nop
in
sbb
inc
pop
nop
inc
dec
lds
cmp
jp
lcall
orb
inc
and
xor
mov
test
dec
sub
jge
lcall
shlb
fwait
mov
je
fcoml
inc
adc
adc
mov
fadds
call
aaa
mov
cmp
idivb
push
jbe
adc
sub
pop
push
and
pusha
cmpsb
pop
pusha
pop
lock
pushl
push
jle
mov
adc
and
cmpsl
call
test
add
mov
sub
mov
testb
xlat
inc
xchg
cwtl
adc
mov
add
mov
aam
mov
ror
lea
push
rolb
add
mov
add
addr16
int3
out
fs
xchg
sbb
or
rcrb
push
mov
xchg
xchg
sub
decl
add
xchg
and
adcl
in
rclb
fisubs
sbb
jbe
aam
mov
js
inc
jl
fistps
push
mov
ja
pop
inc
mov
mov
mov
mov
xchg
push
and
inc
fwait
test
stos
bound
xchg
inc
mov
push
out
inc
cld
lcall
mov
inc
xlat
push
ds
mov
in
or
mov
mov
cmpsb
or
xorb
mul
mov
in
or
inc
roll
xor
mov
mov
lcall
mov
inc
mov
mov
mov
divl
inc
mov
push
cmp
or
mov
int
pop
les
push
repz
jno
push
int3
aad
or
inc
rorl
das
mov
mov
mov
in
jns
imul
jbe
std
jns
imul
add
outsl
dec
sub
or
mov
dec
push
iret
fwait
mov
mov
lret
jecxz
insl
int
aaa
out
inc
aas
bound
mov
inc
xchg
fbstp
lods
mov
push
pop
mov
pushl
cli
mov
inc
cld
mov
pusha
sub
inc
dec
fldt
das
fcomp
std
ret
rolb
mov
xor
clc
outsl
fisttps
push
mov
xchg
idivl
loopne
or
fdivr
int
dec
or
femms
inc
mov
out
mov
mov
sbbl
mov
xchg
loopne
loopne
out
cmp
bound
negb
mov
mov
push
inc
vpavgb
jg
dec
and
call
and
cmp
dec
fildl
shll
cld
mov
mov
test
xchg
loope
dec
sub
push
sub
mull
ljmp
mov
mov
mov
loopne
xor
add
aaa
fisubl
adc
pop
fwait
int
inc
add
loop
ds
popf
shrb
mov
inc
inc
xor
and
jb
lcall
add
mov
loope
inc
mov
inc
inc
pop
mov
add
aaa
cld
jmp
xchg
inc
adc
sub
dec
mov
inc
bound
add
mov
pushf
and
inc
and
add
mov
or
inc
and
cmpsl
mov
pop
mov
pop
rcl
push
outsb
dec
sbbb
mov
push
hlt
pmaxub
bound
jmp
outsb
inc
sti
mul
fstpt
or
mov
mov
mov
cmpsb
loop
outsb
inc
cltd
arpl
mov
or
insb
mov
mov
icebp
mov
adc
repnz
jecxz
cltd
sbbl
xor
sar
jl
jnp
mov
lea
jbe
sbb
testl
and
jb
inc
lea
data16
mov
xchg
cmovns
shrw
or
xor
test
icebp
sbb
inc
jl
pop
sub
mov
xchg
cmp
js
insb
jl
in
cmc
sbb
insb
lock
add
jo
mov
mov
or
add
idivb
out
push
push
scas
push
push
sub
and
jae
add
and
sub
aam
add
xor
push
mov
loopne
adc
xor
push
inc
enter
jo
lea
xchg
xor
lcall
imul
xchg
xchg
mov
push
xor
dec
cmpb
jmp
and
or
jno
pop
lds
jle
call
aam
test
jp
clc
push
add
lock
lock
push
into
jo
mov
mov
push
sbb
insl
mov
insb
and
xor
lcall
dec
mov
mov
call
push
std
xor
test
add
push
push
test
inc
insl
xor
mov
je
mov
xchg
xchg
clc
mov
mov
mov
add
xor
lock
xor
jne
jmp
idiv
aaa
add
add
call
sbbl
loopne,pn
mulb
inc
in
add
sbb
add
inc
out
pushf
mov
and
xor
inc
cld
icebp
or
fistl
dec
dec
int3
add
mov
fstpt
mov
jbe
cld
push
inc
inc
lock
lock
pop
push
test
sub
jle
add
je
pop
shr
test
cmp
jbe,pt
pop
hlt
lcall
js
insb
subb
mov
lea
inc
hlt
pop
js
or
pop
ljmp
pusha
xor
scas
mov
add
gs
mov
and
aam
fs
lock
cli
sub
and
push
scas
call
xor
int
repz
xor
adc
sub
incl
fisttps
pusha
mov
add
adc
push
call
sbb
mov
adc
aam
test
push
push
int3
rcr
cli
dec
inc
push
pop
testl
leave
jne
cmp
cli
shrl
and
push
notl
stos
fdiv
mov
pushl
lock
dec
dec
xor
cli
push
ljmp
adc
arpl
xchg
xor
pop
mov
test
lock
push
lock
push
jl
adc
add
pop
xor
cs
stos
cmpl
sti
xor
push
xor
rolb
cld
add
in
dec
xchg
pop
xor
push
lea
and
pop
sub
loopne
jge
enter
or
push
lea
dec
mov
adc
lods
add
add
neg
push
cmpsb
jne
dec
cmpl
pop
hlt
mov
push
and
pop
imul
loopne
and
xchg
or
push
inc
adc
lods
dec
pop
cmpsl
sub
jno
cmp
rcrl
mov
jo
in
xor
in
jmp
sahf
inc
sub
rorl
adc
mov
add
jmp
inc
ret
mov
adc
ss
or
ss
mov
mov
mov
jl
or
lret
loopne
and
cmpsb
mov
adc
pop
les
lret
cltd
mov
bound
ljmp
adc
decl
rep
ret
push
xchg
or
pusha
icebp
or
lock
add
cmp
mov
push
add
jle
add
add
fisubrs
mov
scas
mov
loopne
adc
jne
data16
inc
add
pusha
jne
add
xchg
fxch
inc
cltd
xor
aas
call
and
lea
clc
cmp
jp
out
nop
sbb
xor
mov
mov
mov
add
cmp
mov
mov
adc
adc
addl
mov
pop
push
jnp
mov
je
jbe
data16
je
int3
or
stc
dec
jne
shr
pop
xchg
sti
out
data16
sub
adc
cmp
imul
enter
push
rolb
test
add
adc
inc
rolb
ficoms
mov
fistl
sub
mov
pop
pop
push
push
imulb
mov
mov
pop
pusha
fisttpl
adc
push
push
add
mov
dec
clc
jg
pop
rolb
or
mov
out
fwait
imul
inc
leave
add
divb
mov
mov
pusha
sub
sub
js
test
mov
inc
dec
in
sbb
cmp
or
xor
inc
lret
test
into
aas
push
jg
stc
sub
popa
add
lcall
xchg
mov
or
pushf
leave
jb
rolb
fildl
xchg
jge
jnp
mov
cld
mov
je
mull
add
or
adc
test
add
in
push
mov
mov
lcall
incl
jo
add
mov
cli
jle
test
add
or
xor
jle
je
xor
push
push
cld
subb
sbb
mov
push
adc
add
cmp
add
test
push
and
mov
mov
add
xor
cmp
mov
push
in
jg
jg
out
add
stos
and
inc
sub
add
rcrl
lock
inc
and
mov
test
jle
add
addb
and
fwait
jbe
orb
sbb
lock
sub
lock
incl
pop
add
push
shll
ja
nop
mov
ja
cmp
push
mov
test
loopne
or
addb
fists
xor
cmp
inc
push
inc
sti
mov
cwtl
pushf
sub
mov
pop
mov
enter
dec
dec
insl
adc
pop
adc
jb
sti
aaa
std
subb
mov
add
mov
xor
and
arpl
insl
dec
or
cli
pop
rcrl
or
jo
inc
push
stos
test
jl
fidivl
inc
mov
mov
xor
orb
stos
mov
mov
jo
jg
mov
add
adc
subl
stc
lea
nop
or
lock
cltd
call
jmp
addr16
xor
mov
movsb
add
mov
xchg
add
adc
sarl
repnz
add
jb
cld
clc
jmp
and
and
push
inc
add
or
jle
jg
pop
out
add
enter
repz
clc
pop
jnp
pop
out
clc
cmpsb
sbb
mov
push
cld
or
cmp
push
sub
jmp
or
rclb
xchg
addb
into
jge
pusha
push
or
ret
addb
lahf
add
loop
cmp
or
lock
subl
and
rorb
lock
and
add
jnp
testl
adc
dec
and
mov
lods
cmp
inc
in
les
jl
and
je
mov
and
pop
cld
sbb
jbe
je
add
push
lock
add
hlt
jl
adc
add
mov
pop
pop
cmp
sub
mov
inc
rorl
pop
nop
aas
cmpsb
orb
repz
out
add
lcall
mov
ja
lret
xor
add
test
hlt
subb
add
sbb
push
dec
in
clc
stos
out
mov
test
in
mov
add
test
dec
cmpb
add
das
adc
es
xchg
adcb
or
push
cmpb
pusha
test
push
addb
xor
or
jno
cld
pushf
push
add
enter
shrb
cli
push
jecxz
xlat
and
xor
lods
sbb
lret
add
call
cld
rolb
es
pushf
rorb
test
push
test
add
addl
std
bound
and
addb
add
in
xchg
nop
loope
add
push
add
fmuls
js
es
sub
adc
push
sbb
test
dec
push
push
pop
or
push
xchg
lret
pop
cwtl
and
je
mov
or
cmp
dec
and
push
adc
lea
incl
inc
push
test
arpl
sub
sub
bound
or
aam
shlb
call
fs
xor
mov
adc
dec
repz
sbb
sub
sub
stos
jne
inc
clc
or
shll
int3
popa
mov
mov
add
jbe
bound
sarb
arpl
or
loope
adc
mov
in
sub
add
inc
sub
scas
pop
shll
es
inc
cld
filds
jl
jmp
mov
push
pop
inc
outsb
fs
mov
aam
loopne
in
jb
mov
add
push
adc
pause
movl
rclb
sti
fimull
loop,pt
ds
out
sub
mov
adc
mov
push
lret
shlb
ror
das
adc
std
jmp
inc
xchg
shlb
cmp
call
cmp
and
jb
mov
inc
or
cli
rcrb
or
repz
and
inc
test
sbb
call
outsl
adc
jmp
jnp
push
sbb
push
and
rorl
negb
stos
or
inc
sub
scas
test
pop
ret
mov
sub
cli
subl
sub
je
into
dec
cld
mov
dec
and
icebp
leave
movsl
andb
mov
js
rclb
mov
jnp
sbb
add
xor
rclb
test
sub
and
add
out
jns
add
das
xor
loopne
repnz
add
cli
pusha
dec
inc
xchg
cmp
cli
push
sbb
out
push
dec
jp
incl
add
popf
loopne
cmp
push
stos
sub
test
call
and
xchg
pusha
adc
jae
cwtl
xchg
adc
pusha
mov
mov
out
pop
add
pop
pusha
push
in
add
adc
movsl
push
in
push
lcall
sub
inc
cmp
push
pop
js
incl
mov
inc
cmpl
lcall
loope
mov
xchg
bound
jp
jmp
sub
inc
push
mov
std
cld
lea
sub
ss
and
mov
add
sub
aaa
je
std
push
or
jbe
andb
or
push
cli
sbb
pusha
add
jle
xchg
xchg
cltd
ja
add
add
incl
sub
pusha
jns
lea
push
dec
clc
stos
adc
fsubrl
aaa
sar
xor
jns
jmp
loopne
add
push
push
jle,pn
pusha
jge
punpckhbw
arpl
push
dec
sbb
cld
jne
fs
sub
inc
and
mov
jne,pt
and
bound
cmc
loopne
add
add
mov
pop
inc
and
mov
cltd
loopne
pusha
xor
lock
outsl
loopne
jb
add
sbb
fildll
dec
cld
jg
sbbb
pop
add
loope
or
add
js
stos
test
push
pop
sbb
sub
filds
mov
push
add
push
icebp
incl
loopne
pusha
int
pop
repnz
clc
inc
or
push
mov
enter
sbb
xlat
ss
dec
or
call
mov
add
repz
loope
inc
sbb
loopne
push
mov
shl
add
add
lcall
cmpsb
fildl
push
loop
jb
add
mov
push
mov
or
xor
or
mov
popa
aas
hlt
shl
adc
clc
push
and
jmp
dec
sub
stos
pop
push
pusha
or
cmp
sarl
jmp
mov
and
loope
dec
addl
test
and
or
loope
div
pop
enter
sbb
ss
aas
fildl
pop
adc
jg
pop
or
adc
dec
and
add
mov
inc
or
mov
out
dec
add
or
aaa
lea
and
stos
ljmp
cmp
dec
cmp
adc
or
pusha
xchg
out
pop
test
repnz
mov
je
adc
jo
das
adc
or
cmp
mov
test
add
cmp
decl
push
pusha
fimuls
pusha
cmp
addl
add
je
cwtl
pcmpeqd
dec
and
shlb
outsb
add
or
mov
cs
mov
jo
inc
out
in
js
mov
mov
pusha
push
mov
mov
scas
rorb
outsb
lock
test
gs
mov
loopne
add
push
sub
popa
xchg
incl
dec
testl
negl
mov
cmp
add
pop
jmp
jle
cmpsb
cmp
pop
mov
sbb
xor
std
incl
mov
invd
test
out
jne
sbb
fimuls
adc
sbb
sub
xchg
pop
movsl
xchg
mov
outsl
xor
mov
call
daa
test
mov
adc
dec
inc
jecxz
enter
cmpb
add
enter
push
icebp
sub
push
cmp
jo
aaa
loopne
mov
mov
ror
js
and
jle
add
sahf
jo
into
push
mov
cld
mov
lcall
cmpb
daa
jmp
mov
sbb
aam
fcmovnu
push
mov
xchg
bnd
mov
outsb
push
ljmp
sbb
outsl
adc
into
mov
sbb
adc
call
jne
mov
add
nop
je
jne
add
pusha
shl
xchg
jno
enter
pop
negb
sbb
inc
pusha
jle
popa
lock
mov
xor
inc
out
pop
loopne
bound
clc
dec
mov
fcoms
fidivrl
rcll
out
cli
jg
xor
or
sub
and
xor
js
push
mov
sarb
dec
jecxz
mov
in
xor
xor
inc
sub
insb
aam
or
les
add
cmpb
jmp
xor
das
xchg
pusha
les
jno
and
add
adc
ss
incl
mov
arpl
push
dec
push
mov
fucom
mov
lret
ss
bnd
xorl
cmp
adc
jmp
xorb
mov
xor
jle
pop
sub
adc
mov
xchg
lea
adc
xor
mov
or
jmp
mov
jb
push
jl
sbb
mov
pop
divl
xor
cpuid
xor
add
push
mov
push
push
push
xor
dec
add
sub
push
mov
inc
mov
add
mov
out
push
ds
adc
adc
mov
jo
sub
or
xchg
mov
sbb
adc
sbbb
mov
scas
cmp
jg
inc
sbb
fwait
pusha
repnz
mov
or
repz
lock
lock
in
pop
lock
or
ret
cmpb
adc
push
and
icebp
mov
or
fstpt
and
mov
or
add
hlt
pop
jmp
xor
mov
dec
xor
or
or
mov
cld
mov
mov
push
cltd
mov
push
jmp
pop
testl
push
mov
add
xorb
sub
mov
incb
sti
out
cli
fisttps
add
sbb
add
adc
mov
sbb
jae
ss
or
dec
add
fidivrs
leave
shlb
cmpsb
jbe
andb
pusha
adc
jmp
xchg
xchg
in
ret
adc
sub
and
cli
jo
dec
inc
pusha
fsubl
cld
mov
jmp
xor
aam
aas
and
jo
ja
inc
mov
jmp
cmp
mov
mov
pushf
ja
sub
stos
mov
clc
notb
loope
and
in
pop
mov
mov
xor
adc
mov
sarl
icebp
pop
orb
adc
and
inc
cld
pushl
test
outsl
jo
cmp
jnp
mov
pop
xor
loopne
add
popf
jl
adc
add
xor
aam
dec
xor
ficompl
add
mov
imulb
mov
push
sub
add
or
or
xor
or
ret
xor
call
xor
lcall
add
jmp
add
lock
loop
cmpb
xchg
mov
cmp
mov
adc
add
cmp
pop
lock
lds
aam
mov
movsb
mov
mov
jnp
push
inc
inc
fs
jb
test
nop
int3
test
fbstp
mov
push
fadds
xchg
add
add
xor
dec
xor
mov
jge
addl
adc
sti
orl
push
add
cs
xor
sub
xchg
orl
mov
pop
mov
or
fidivl
xor
mov
into
shll
mov
push
sti
push
nop
stos
adc
jg
jbe
in
jo
adc
nop
add
nop
cmp
sbb
divb
mov
mov
outsl
mov
movl
cmp
mov
clc
mov
push
inc
mov
xor
jo
xor
mov
add
push
lock
sub
pop
sarb
inc
or
lret
adcl
out
and
mov
inc
test
popa
add
je
inc
nop
fnstcw
mov
adc
gs
insl
sbbb
ret
xor
mov
leave
and
xchg
adc
and
lret
jge
imul
cwtl
addr16
adc
push
mov
mov
in
inc
lea
jl
and
inc
roll
lock
jo
int3
or
mov
lar
mov
add
test
jo
mov
stos
popa
or
and
jne
inc
cmp
dec
popa
rolb
aas
adc
add
or
notl
adc
push
add
ds
jno
testb
adcl
xor
enter
adc
inc
shl
jo
rorb
lock
pop
add
testl
sub
cli
xor
dec
adc
xor
inc
les
test
mov
jge
fbld
pop
jbe
test
adc
pop
inc
and
out
fimull
adc
jbe
cmp
lea
cmp
pusha
lock
adc
mov
lea
xor
push
andb
lcall
sub
xor
outsb
adc
push
mov
push
dec
dec
jb
add
bound
icebp
mov
mov
cld
and
mov
pushf
add
test
mov
jnp
add
add
into
mov
es
pop
sub
sub
pop
dec
pop
adc
shl
xor
add
and
dec
add
out
xor
push
mov
xchg
je
incl
cmp
cwtl
push
mov
test
or
dec
or
pop
add
pop
pop
hlt
loop
gs
cmp
dec
xor
adc
xchg
dec
or
ds
sub
adc
sub
or
pop
mov
orl
ss
mov
sub
in
pop
xorl
sbb
jne
dec
xor
or
in
and
mov
in
pop
pop
hlt
jne
aam
fiaddl
inc
sbbb
dec
sbb
xchg
push
jl
xor
fmuls
mov
xorb
fiaddl
stos
inc
pop
cld
nop
mov
pop
push
and
jg
ja
daa
out
enter
jle
sbb
jne
push
mov
lahf
js
adc
xor
js
add
add
push
push
cmp
andl
and
popa
stc
movsl
add
andl
mov
sar
and
push
pop
adc
mov
adc
ljmp
adc
std
add
inc
mov
ret
lock
jmp
loop
sub
ds
adc
jbe
pop
test
push
fimuls
sbb
rorb
outsb
pop
fidivs
adc
pop
lock
pop
inc
fildl
add
xchg
and
mov
fidivl
sbb
fwait
je
insl
or
dec
mov
or
testl
sub
lahf
test
cli
and
inc
and
inc
mov
test
shrb
adc
lock
or
push
push
jge
rorb
mov
inc
push
cmp
jmp
add
outsl
mov
adc
pop
add
push
mov
ret
add
mov
ret
popa
ret
int3
add
xor
sbb
add
cwtl
mov
mov
shrb
jl
int
xor
shrl
lds
les
lfs
gs
dec
fs
or
fimull
cld
xor
mov
mov
add
or
loop
and
add
rolb
adc
sbb
inc
xchg
movsb
shl
in
rcrb
dec
dec
and
inc
das
push
add
add
pop
pop
or
ret
adc
or
icebp
sub
mov
mov
cli
adc
or
mov
cld
aad
shr
and
cli
pushf
xor
jl
jp
adc
sub
mov
cmp
adc
in
orps
je
add
mov
jl
sub
sub
inc
fimuls
ret
push
sub
adc
pusha
pop
lock
adc
mov
notb
je
inc
adc
and
and
jmp
in
add
lcall
jp
push
sbb
cmp
add
in
mov
push
scas
add
jmp
push
test
hlt
aaa
test
cmp
jl
decl
xor
test
jmp
neg
loope
rorb
push
repz
and
xor
mov
cmc
ja
xor
ljmp
jg
std
jg
and
in
inc
pusha
or
jmp
loopne
dec
loopne
push
push
pop
loopne
or
mov
and
test
mov
pop
popa
insl
push
jecxz
lods
jo
call
add
loopne
test
add
adc
rolb
adc
lcall
test
ljmp
xor
shlb
jmp
jecxz
jmp
popa
loopne
mov
cmp
loop
dec
add
push
fsubr
jg
or
xor
movl
mov
faddl
sbb
ds
add
push
or
int
adc
dec
pusha
add
mov
cmp
cld
decl
or
push
push
add
jmp
dec
ret
mov
xchg
enter
jl
stos
xlat
xchg
cs
lock
mov
jecxz
nop
mov
pushl
loopne
call
loope
push
fimull
cmp
add
mov
push
out
mov
repz
dec
stos
and
dec
adc
inc
mov
ficoms
clc
jg
je
test
fimull
xchg
push
cmp
fsubr
lret
gs
pusha
sub
xchg
loop
pop
add
add
inc
jl
or
push
mov
add
adc
or
cli
test
jp
repz
sbb
push
xlat
push
pusha
loopne
bound
xchg
jle
or
mov
pusha
mov
sarl
cmp
mov
inc
jmp
or
adc
jl
and
rolb
pusha
pushf
pop
and
insb
in
inc
dec
into
and
add
or
xchg
loopne
jle
mov
mov
lds
cmp
lods
push
and
or
loopne
and
sbb
loopne
mov
orb
test
aaa
add
fcom
push
loopne
pusha
jmp
sti
pop
push
pop
cmc
jl
inc
or
add
test
mov
push
pushf
insb
or
rclb
decl
or
or
xchg
pusha
aas
loope
cmp
or
mov
and
or
add
in
dec
mov
add
push
sbb
push
mov
testb
aaa
ljmp
push
ja
shl
sbb
fiaddl
jnp
cmp
add
rcr
mov
sahf
stos
mov
jb
inc
cld
jg
jg
jl
popa
aaa
jg
or
cmp
cs
jg
dec
push
mov
loope
fdivrl
icebp
mov
lock
jle
add
xor
push
fstpl
push
jmp
cmp
jmp
mov
jb
add
repz
or
adc
add
lock
jmp
jle
jmp
incl
xor
in
sub
xchg
xor
mov
mov
dec
inc
dec
vmread
adc
and
xchg
push
inc
jg
add
cmp
clc
jge
mov
cmp
add
std
out
clc
mov
jle
mov
jbe
mov
lea
inc
pop
add
mov
jno
sbb
ja
mov
pop
shl
cld
cmp
or
add
bound
add
es
mov
sub
add
je
insb
fists
mov
sub
fs
jnp
jnp
imul
jle
divb
jnp
jo
mov
cmp
sbb
es
push
xor
rolb
adc
jb
das
cli
push
call
fmuls
mov
jo
or
cmp
fdivs
xor
enter
add
cmp
leave
xchg
in
push
or
je
jne
outsb
jo
add
inc
test
mov
or
popf
mov
cltd
and
insb
mov
push
test
xor
jno
loope
push
lcall
xor
jl
xor
jo
dec
add
and
pop
mov
pop
lock
hlt
ljmp
inc
inc
les
jo
mov
andl
enter
mov
or
jns
cmp
ret
aam
sub
mov
outsl
sbb
or
mov
aam
inc
xor
mov
insb
jmp
xchg
xor
or
pop
outsb
push
xorl
cmp
test
push
sbb
or
adcb
shlb
jne
pop
inc
mov
push
xor
fisubs
test
adc
inc
in
mov
or
push
dec
dec
adc
push
rorl
mov
add
testb
idiv
adc
sub
xor
fsubrp
sbb
add
adc
xor
adc
in
sub
clc
xor
push
ljmp
and
xor
movsb
mov
mov
cmp
fdivrp
lods
std
inc
push
mov
mov
popa
jbe
out
ljmp
outsl
in
je
test
adc
bound
inc
or
incl
add
or
adc
xor
hlt
movb
sub
jmp
jg
outsb
inc
xchg
push
inc
jae
lret
add
cmp
lock
pop
std
incl
cmp
jl
movl
dec
jl
and
add
xor
rcrl
clc
pushl
scas
movsb
hlt
jg
adc
insb
sbb
xlat
sub
lret
hlt
lea
loope
lea
lock
scas
add
cld
cmpsl
adc
ds
das
push
sub
add
jg
cmp
movsb
cmpl
push
mov
pop
lock
pop
mov
call
fwait
pop
fs
push
mov
lock
push
add
pop
loopne
inc
les
jne
and
and
aam
dec
and
push
shll
push
adc
scas
push
hlt
xchg
call
loopne
inc
jp
or
data16
mov
add
adc
call
inc
es
push
jo
xchg
jmp
test
xor
mov
and
test
inc
push
jbe
lea
jne
fucomi
xchg
loop
mov
pop
push
mov
cmpb
pop
aam
cltd
shrb
inc
add
add
call
loop
movsb
clc
cmp
pushl
pop
add
adc
mov
or
mov
pushl
inc
jo
mov
add
mov
test
inc
mov
ljmp
fimull
ret
mov
cwtl
and
call
cld
xlat
or
pushl
jno
jb
add
call
mov
push
push
xor
lcall
pinsrw
ret
incl
adc
adc
xor
cmp
xor
add
or
jecxz
out
push
add
jmp
pop
push
incb
aaa
mov
cmp
jno
cld
jbe
and
lods
bound
incl
xor
lock
lock
inc
das
and
and
icebp
scas
fcomip
sbb
inc
aaa
fistps
mov
shr
xchg
mov
mov
cmc
and
push
xchg
cmp
mov
and
sbb
push
insl
orb
sbb
and
loop
repz
sub
sbb
icebp
add
loope
fdivp
stos
mov
push
cmp
lea
pop
mov
mov
sbb
inc
stc
sbb
sbb
icebp
push
ror
mov
fwait
xor
add
outsl
ficomps
dec
sub
push
mov
hlt
jg
add
mov
mov
and
in
mov
mov
sub
sti
mov
or
jno
xorl
sub
xchg
jmp
popf
mov
test
push
mov
popf
jb
push
cmp
cmp
add
pop
add
mov
add
je
add
pop
add
lret
in
push
fistl
jg
imul
out
sub
or
pop
inc
filds
int3
mov
mov
test
dec
push
add
or
push
mov
stos
mov
inc
mov
xor
mov
adc
or
cld
mov
add
dec
adc
sub
jbe
mov
cmp
or
mov
add
add
add
xchg
push
addb
addb
xchg
pushf
cltd
rcrb
mov
xchg
mov
push
or
orl
jmp
jne
lods
jg
sbb
mov
jne
dec
pop
je
lock
and
mov
pop
inc
loope
fdivrl
jge
mov
or
test
insb
jle
shlb
imul
movsb
mov
adc
cmp
adc
addb
add
add
cld
sarl
cli
inc
or
fisubs
jmp
rorb
cmp
add
inc
add
adc
dec
xchg
cld
idivb
cmpl
mov
mov
mov
lods
pop
cmp
orb
mov
pushf
inc
push
add
jmp
mov
jo
adc
pop
adcb
add
call
jbe
push
cmpl
push
ss
fsubr
stos
add
add
movsl
mov
mov
add
cwtl
nop
cmp
in
xor
int3
sub
push
mov
cli
incl
push
ret
outsl
add
test
dec
rorl
rclb
mov
fadd
sbb
ljmp
inc
ret
cld
subb
rorb
adc
outsb
pop
ret
lods
das
dec
xchg
rolb
xor
add
loope
lods
pop
and
shll
sbb
shrb
pop
mov
adc
scas
mov
push
enter
out
ret
dec
mov
xchg
cli
add
xchg
rcll
cs
nop
push
jbe
fs
incl
ficoml
xor
js
push
dec
out
aaa
and
fcompl
mov
push
ret
add
jae
rorl
lds
or
push
ret
fs
out
sbb
stos
adc
sub
push
mov
jmp
adc
out
movsb
add
je
stos
mov
cmp
jo
into
addb
repnz
add
inc
clc
rcrb
mov
pushf
lock
roll
dec
fimull
and
movb
xor
mov
adc
fldt
cwtl
sbb
xlat
and
xor
dec
adc
xchg
decl
je
push
jmp
add
rcrl
rcr
aaa
jge
dec
shlb
add
mov
arpl
shll
dec
or
jp
adc
inc
pop
jl
add
fidivrl
in
jl
arpl
jb
in
sub
push
mov
inc
pop
loopne
std
add
shlb
inc
mov
push
leave
imul
sub
and
adc
adc
jg
dec
ljmp
outsl
lock
sub
js
cld
mov
jmp
sbb
shlb
jl
leave
push
out
in
xor
and
add
mov
das
mov
andb
enter
push
xchg
dec
das
push
clc
ret
in
jnp
jle
mov
dec
enter
pop
sub
add
shr
mov
mov
outsl
xchg
and
loopne
inc
sub
dec
push
xorb
push
jp
flds
bound
add
push
enter
mov
sub
call
sub
mov
test
inc
xor
mov
call
pusha
mov
divb
incl
mov
push
pusha
adc
sbbb
sbb
or
dec
fisubrl
rclb
loope
sbb
andb
xchg
subb
dec
cli
aas
cmpsb
dec
pusha
adc
sub
add
in
inc
inc
adcl
cmpsb
rcll
sbb
cli
mov
fwait
inc
jmp
or
mov
or
sbb
push
adc
loopne
pushl
adc
xor
push
adc
in
xchg
popa
add
fwait
loopne
cmp
dec
iret
lods
push
mov
test
xchg
js
and
inc
push
fs
fsubs
loopne
or
cmp
loop
scas
jmp
sarb
clc
cmp
jge
ret
fidivl
lock
mov
and
push
jp
push
fsubs
mov
mov
movsl
add
jmp
out
arpl
loopne
fs
cmp
pusha
pop
popa
cmp
xor
loopne
jecxz
ret
mov
loopne
cmpsb
loopne
xchg
add
push
aam
stc
sub
shr
out
popa
jb
loop
sub
and
out
loopne
mov
rolb
mov
and
xor
test
fs
in
add
xchg
js
test
inc
jmp
repnz
add
and
es
gs
lahf
loop
mov
call
mov
loopne
dec
inc
insb
cmp
pop
or
ret
or
or
mov
mov
subb
inc
xchg
dec
push
add
fnstenv
sbb
or
popf
sub
mov
mov
jo
and
pusha
lock
pusha
push
lcall
pop
inc
lock
xchg
jae
and
fisttpl
mov
fsubs
roll
clc
mov
add
je
cmp
inc
jne
les
inc
pusha
ss
mov
or
lods
add
mov
insb
gs
jmp
mov
cmp
pop
sbb
lods
pop
and
loopne
adc
xchg
les
pop
push
stos
jbe
rcr
nop
and
enter
mov
add
mov
pop
or
adc
orb
sub
add
xchg
scas
cmp
or
or
or
cmp
or
lret
mulb
mov
adc
mov
inc
testb
push
pop
sub
sbb
inc
pop
or
pushl
aas
pop
lock
xor
sub
test
jge
jmp
push
pop
mov
lret
rolb
or
push
rolb
mov
push
aaa
or
lods
insl
add
push
push
dec
adc
pop
mov
aad
jo
sbb
cmp
xor
push
mov
adc
mov
bswap
add
sub
pop
add
jl
cmp
in
add
xor
push
fbstp
add
lret
push
add
xor
inc
sub
adc
aam
dec
jnp
shrl
in
inc
pop
loop
cltd
mov
add
out
lock
ja
mov
insl
int
cwtl
xor
int
push
data16
xlat
js
out
mov
jb
xor
sbb
fwait
in
add
adc
dec
jb
xor
xor
xor
mov
adc
sub
jp
dec
pushl
cmp
inc
mov
or
hlt
add
dec
mov
pop
sbb
jb
jg
adc
adc
push
call
pop
les
add
sbb
push
pop
and
sbb
fisubs
and
outsl
fcmovnu
and
shlb
xlat
add
sub
sub
sub
and
dec
jl
mov
jp
jl
xor
int3
xor
cltd
clc
in
mov
enter
adc
push
cmp
pop
lock
pop
ds
inc
mov
inc
dec
nop
adc
mov
mov
pop
clc
and
jo
out
outsb
seto
push
xor
addb
fidivl
add
mov
nop
pop
pop
cs
adc
or
fmull
add
inc
test
inc
aas
je
es
jecxz
prefetch
roll
push
mov
jmp
inc
push
mov
cmp
lods
in
or
add
mov
pusha
imul
push
or
hlt
decl
lock
mov
adcb
clc
outsb
loope
loop
add
loop
dec
mov
add
in
int3
mov
or
outsl
pop
xor
pop
test
je
xchg
std
jmp
cld
movsl
sahf
and
loop,pn
in
outsl
xchg
xor
sbb
dec
sbb
push
mov
ja
lods
add
adc
push
cmpsl
mov
mov
inc
out
mov
fbstp
xchg
mov
and
mov
dec
and
adc
add
mov
mov
jbe
test
orb
cli
mov
inc
cmp
mov
dec
daa
icebp
fisttps
add
mov
and
cmp
popf
clc
jle
incb
pop
inc
sub
add
add
xor
adc
fisttpll
mov
inc
and
ficomps
mov
sbb
xor
mov
push
sub
cwtl
jmp
jb
dec
adc
push
enter
add
cld
shll
icebp
in
pop
or
jno
mov
repz
test
add
add
add
fmull
popl
or
pop
or
adc
mov
scas
mov
call
insb
pop
add
into
push
out
adc
push
adc
mov
test
ret
dec
or
jno
pusha
add
inc
or
jle
add
call
js
test
aaa
hlt
cli
inc
push
pop
mov
bswap
and
pushf
loop
or
add
ja
adc
jbe
push
xor
and
mov
sub
jge
jbe
mov
cmp
call
push
je
push
mov
sbb
scas
mov
jmp
lock
rorl
mov
jbe
jge
mov
adcb
add
adc
jle
ret
and
je
xchg
push
pop
cmp
inc
adc
sbb
push
mov
inc
pushl
fcoms
ss
or
xor
adc
mov
sbb
sarb
je,pn
stos
fimull
inc
cmp
add
mov
dec
push
mov
pop
add
or
stc
mov
and
dec
and
pushl
xor
je
idivb
pop
clc
push
jmp
mov
test
sbb
add
cmp
idiv
jo
adc
add
das
cli
ja
je
sbb
pop
idiv
enter
jns
imul
or
mov
iret
ds
ljmp
sub
pop
lock
mov
sbb
movl
fs
mov
adc
xchg
sbb
xchg
mov
sbbl
sub
imulb
pop
pusha
les
int3
dec
mov
jb
incl
ss
adc
jo
loopne
pop
mov
mov
dec
das
sub
jo
jb
mov
pop
push
xor
roll
inc
loopne
add
es
xor
repnz
into
cmp
jae
and
sbb
jne
mulb
inc
stos
daa
std
jg
push
or
or
and
orl
decb
je
or
push
and
ret
cld
xchg
testb
or
push
inc
push
xor
adc
add
mov
test
or
shll
adc
mov
je
add
scas
fcoml
sbb
je
jo
inc
decl
xchg
stc
mov
iret
mov
jmp
adc
das
xchg
push
push
mov
pop
mov
or
loopne
jae
mov
adc
lea
and
xor
scas
pop
cmpsb
and
mov
jo
xor
adc
sbb
adc
xor
cmpb
mov
mov
lds
jl
xor
push
clc
inc
mov
push
mov
push
loope
add
xlat
jbe
or
add
mov
test
xor
jo
jl
add
xor
adc
movzbl
ds
jno
sub
sti
or
test
jo
cmp
les
fwait
add
mov
dec
inc
adc
mov
jno
sub
jo
sub
jge
popa
push
xlat
push
bound
xchg
enter
jmp
lcall
inc
daa
les
jne
ja
ljmp
ja
xchg
cmp
pop
sti
std
sbb
dec
cmp
call
mov
lret
mov
cwtl
and
pop
jle
test
sub
shrl
cmp
test
mov
out
cmpl
xchg
add
roll
testb
dec
or
lcall
or
movsb
lcall
cmp
add
or
or
stos
dec
mov
add
push
in
jne
mov
mov
push
verr
pop
sub
ret
test
jl
add
push
lock
bound
les
int3
jbe
inc
les
sbb
lock
sbb
inc
inc
mov
mov
mov
les
jb
adc
add
dec
or
push
sbb
jb
jmp
dec
test
pop
add
out
add
mov
push
ja
push
add
add
addl
std
out
clc
fiadds
mov
mov
call
jo
add
adc
xchg
movsb
je
push
sbb
and
cmpsb
cwtl
push
imul
sbb
sbb
inc
xchg
dec
outsl
loopne
xor
je
jle
pop
fwait
pop
dec
add
sub
in
adcl
add
mov
sub
movb
cmp
jae
or
es
lock
orl
and
adc
cld
pop
jg
bound
and
jne
sbbb
adc
movb
jp
adcb
xor
xchg
mov
sub
pop
mov
or
cmp
orb
push
cld
pop
add
add
and
pop
je
mov
test
xorb
stc
add
je
jo
rclb
pop
add
sti
inc
pop
gs
test
xor
adc
es
je
lahf
cmp
jl
fdivl
push
or
shrl
add
ljmp
andb
adc
jmp
push
in
add
call
sbb
mov
dec
cmp
cwtl
cmc
jmp
or
aam
mov
mov
jmp
push
sub
insb
push
add
mov
mov
add
incb
andl
dec
clc
shlb
fsubrs
sbb
push
cwtl
inc
sbb
add
xorb
cmc
movl
sub
test
and
ss
add
jmp
jb
add
pushf
clc
jbe
sub
add
sbb
mov
adc
jl
push
add
jp
stos
cmp
cmpsl
daa
ret
add
or
or
jae
outsw
add
shlb
pop
add
lea
jle
mov
fidivl
lock
mov
shrl
cmpb
cld
jmp
sti
adc
xchg
shlb
pop
pop
xchg
cmpb
adc
mov
adc
sti
jmp
sbb
pop
sub
fsubrs
mov
outsw
ficompl
dec
or
roll
stc
and
pop
aam
add
cmpb
mov
push
add
filds
inc
push
add
push
adc
addb
dec
inc
pushl
xor
add
jmp
push
dec
sbb
push
jmp
movl
fbld
lahf
xchg
rolb
out
roll
mov
pop
rcrb
sub
pop
add
sbb
std
jg
ss
push
std
sub
cmp
ret
nop
cmpsl
push
shlb
rolb
add
imul
add
pop
imul
dec
add
add
cmp
sub
gs
dec
cltd
outsb
add
inc
add
mov
cmp
cmp
and
add
add
stos
add
pushw
fcoms
dec
push
add
iret
xchg
sub
loopne
mov
cwtl
dec
sub
fimull
sbb
sti
pop
ljmp
jl
add
cld
movl
cli
mov
mov
lret
or
int3
or
aam
adc
mov
or
loopne
sub
pop
or
xchg
add
add
adc
sbb
add
add
mov
xchg
fisubrl
push
aam
aaa
mov
xor
bound
or
pop
jg
push
and
fs
xor
cmp
je
xor
adc
sub
loopne
lods
ret
out
add
and
iret
repnz
loop
cmp
mov
mov
cmp
adc
jl
in
adc
inc
pusha
pop
pop
nop
sbb
movsb
loopne
mov
and
adc
adc
add
jg
bound
or
mov
pop
ret
xor
jecxz
add
ss
loope
push
push
xor
push
add
je
or
loop
xchg
add
sub
jg
mov
jb
in
mov
arpl
pop
jg
mov
xor
pop
xchg
pusha
push
cmp
decl
xor
push
inc
push
clc
jle
cmp
mov
sub
jbe
cmpsb
add
push
pushf
loopne
pusha
add
enter
addr16
arpl
or
xchg
or
scas
decl
mov
cmp
or
arpl
jl
xchg
loope
adc
xorb
adc
dec
lock
repnz
push
xor
push
and
jecxz
adc
daa
dec
xchg
mov
pop
or
addb
mov
scas
and
mov
xchg
push
mov
or
adc
inc
ret
mov
jne
mov
outsb
ljmp
sbb
js
clc
push
test
nop
add
pop
aam
es
adc
adc
shrb
mov
cmpl
enter
add
test
cmp
lea
mov
sbb
out
andb
incb
shrl
aaa
mov
adc
loopne
mov
iret
add
adc
out
mov
cmp
cs
sahf
push
mov
cmp
jle
or
mov
mov
add
in
add
mov
subb
sub
inc
mov
je
dec
test
dec
mov
inc
fmul
lcall
es
lahf
mov
cs
insb
mov
in
movsb
ja
sar
pusha
pop
lea
inc
pop
scas
jg
jbe
sub
daa
xchg
cs
mov
add
fs
push
push
lods
clc
call
mov
pusha
push
cmpb
xchg
xchg
loopne
stos
jbe
cmp
xchg
les
pop
inc
daa
in
cmp
push
cmp
add
cmp
arpl
je
lea
cmp
jmp
cwtl
int3
aam
and
mov
adc
sub
mov
or
ljmp
sbb
ret
xchg
fimull
jg
mov
add
jmp
divb
nop
or
push
fwait
clc
lcall
sbb
pop
lock
leave
mov
mov
es
adc
pop
enter
lods
mov
bound
jo
add
sbb
xchg
and
leave
or
inc
rcr
mov
addb
mov
or
mov
cmpl
pop
into
lea
adc
je
call
shll
cmpb
add
call
fildl
mov
or
dec
shl
sti
daa
test
lock
call
or
add
lock
incl
cld
push
je
lock
push
notb
cli
cs
test
push
stos
pusha
mov
add
bound
inc
mov
inc
cmp
push
lea
push
sub
fwait
shrb
cld
hlt
sbb
adc
push
mov
ljmp
loopne
je
mov
and
add
mov
call
js,pt
add
xchg
mov
jg
add
jb
sbbb
and
pop
pop
add
cld
pushl
jno
adc
je
or
and
inc
and
jmp
fsubl
sbb
push
inc
imul
pop
lock
push
mov
decb
jne
adc
icebp
movsb
mov
clc
sbb
dec
call
mov
mov
mov
lods
and
xor
add
adc
push
lods
shlb
adc
mov
sti
outsb
mov
test
cli
jno
push
inc
inc
inc
push
pop
mov
call
dec
mov
push
aaa
xor
xchg
andb
icebp
sub
or
lea
cld
out
into
push
sbb
arpl
call
mov
jne
lods
push
inc
loopne
icebp
push
add
jo
addl
aad
dec
jmp
add
or
add
call
mov
push
adc
mov
sahf
icebp
js
pop
mov
mov
das
lock
push
mov
icebp
pusha
call
push
pushl
js
lock
add
dec
jo
cmp
and
icebp
push
add
fs
inc
cmp
push
and
mov
add
fs
in
jo
cli
incl
adcb
xchg
test
mov
lock
je
push
xor
sbb
adc
ss
or
cltd
mov
out
sub
scas
and
ret
punpckhdq
jo
in
mov
add
jmp
jmp
decl
divl
cmp
pop
clc
and
jo
call
or
jo
incl
mov
push
xchg
jo
lea
repnz
stos
xchg
mov
call
mov
xchg
add
push
jo
mov
jbe
inc
push
dec
sbb
mov
pop
hlt
add
or
jo
cmp
mov
mov
adcl
flds
mov
iret
adc
or
add
movsl
inc
hlt
mov
leave
outsb
xor
sub
outsl
bound
jae
push
out
iret
add
out
adc
inc
mov
imul
push
dec
mov
push
dec
cmp
inc
incl
push
pop
sbb
xor
jo
mov
adc
fucomp
je
inc
mov
sarb
jmp
mov
loopne
fisttpl
lods
or
cwtl
jecxz
std
pop
fdivrp
xor
pop
int3
dec
jmp
std
push
push
and
jo
mov
stos
push
xchg
mov
jb
xchg
pushl
mov
adc
inc
repz
dec
add
mov
lods
mov
push
add
rorb
adc
mov
cld
incb
pushl
icebp
jb
add
repnz
mov
and
outsl
xor
mov
pop
lods
mov
call
hlt
mov
xor
dec
or
insb
sub
adc
mov
mov
mov
sub
add
dec
es
nop
fisubs
aas
fcmovnu
mov
push
aaa
jo
add
aas
movsb
icebp
push
lock
and
push
xor
daa
add
dec
jmp
add
sbb
sahf
sub
fwait
sub
or
pop
mov
sbb
add
or
incb
stc
mov
call
and
inc
sbb
dec
push
dec
or
xchg
les
test
pop
xorb
mov
mov
push
jbe
popf
sub
repnz
jne
lods
jae
push
jmp
push
inc
shll
aam
sbb
decl
mov
mov
mov
mov
das
and
adcl
xchg
mov
jo
jg
dec
jb
push
jbe
pop
mov
icebp
lret
fadds
repz
jo
sbb
sbb
mov
mov
cld
imulb
jne
ljmp
in
cs
and
rcll
jge
call
nop
xchg
push
add
bound
xchg
aam
jbe
lcall
mov
dec
and
mov
out
cli
push
cld
jo
mov
mov
lea
inc
testl
mov
jo
sub
xor
ret
icebp
mov
adc
scas
insb
or
pop
sbb
lcall
call
loop
inc
shlb
mov
call
addl
dec
call
sub
jp
adc
fs
pop
jo
jge
mov
jo
push
lock
jg
adc
push
inc
int3
lock
sbb
lcall
push
jo
sbb
xchg
jo
test
mov
mov
iret
adc
adc
adc
test
ja
xor
push
pop
and
cmc
inc
pop
jo
mov
or
cmp
int3
inc
mov
sub
cli
cmp
call
fst
lcall
shr
cwtl
pop
leave
add
icebp
cmp
add
mov
dec
testl
inc
popa
xlat
mov
adc
sbb
add
or
je,pt
data16
push
loopne
mov
imul
test
jb
push
dec
call
mov
shrb
data16
movsl
add
xchg
or
bound
adc
rolb
scas
jmp
dec
add
lock
cmp
dec
cld
jg
clc
call
pop
cld
movb
cmp
push
push
sub
hlt
push
jae
dec
add
push
push
add
sub
loopne
lcall
add
inc
lea
mov
xchg
inc
xor
pop
imul
push
call
fsubl
test
enter
add
and
cmp
orb
mov
hlt
and
push
add
out
jle
pop
sbb
lock
mov
add
test
jo
mov
inc
test
add
mov
popa
xor
push
push
push
and
popa
shlb
jo
or
jno
incl
es
mov
js
ret
mov
mov
add
mov
push
inc
mov
int3
dec
or
icebp
test
cmp
mov
int3
dec
inc
dec
cli
lcall
lock
inc
mov
xchg
call
jle
ficoms
add
hlt
mov
cmpl
adc
push
add
push
add
pusha
or
or
cmp
jbe
ljmp
mov
or
dec
sbbb
dec
dec
loop
loope
cmpsb
insb
push
lea
stos
adc
mov
insl
push
add
inc
jmp
mov
test
daa
xor
push
les
and
or
jo
rcrb
pop
loopne
mov
add
fldt
out
sub
add
imul
sub
mov
jbe
mov
sti
jmp
push
mov
sub
push
xor
pop
and
pop
mov
pushf
cmp
or
sbb
clc
stos
icebp
lock
pop
outsl
push
add
sbbb
call
iret
mov
add
mov
inc
xor
jo
aad
or
push
imull
orb
mov
adcl
mov
adc
fld
clc
jg
add
inc
inc
je
call
ret
jp
xlat
aam
mov
je
fldl
and
or
ret
js
aas
xor
sbb
lcall
iret
push
outsb
fdivrl
orl
cli
cld
xor
dec
cld
pop
adc
push
loope
hlt
rclb
xor
ds
fbld
pop
sarl
mov
les
lods
sbb
sarb
push
rorb
lcall
aas
insb
pop
adc
cmp
and
aaa
pop
rolb
add
out
add
mov
rol
cmp
lahf
jl
mov
jp
hlt
xor
mov
cmp
aam
sbb
jnp
xchg
sub
mov
push
or
sub
out
pop
dec
cmp
ret
add
xor
dec
add
push
enter
call
adc
mov
fs
fisttpl
dec
repz
pushf
push
jb
mov
nop
mov
leave
call
daa
or
arpl
scas
dec
lods
adc
or
sbb
sahf
rorl
push
add
sbb
ds
sbb
mov
clc
and
stos
lea
inc
adc
ret
fidivl
or
push
movb
add
or
shll
push
pop
cwtl
sub
cld
xchg
dec
push
loope
add
rcr
jne
insb
sbb
dec
and
sbb
fistpl
shlb
cmc
rorb
jb
js
mov
add
js
add
sbb
push
push
data16
test
test
push
adc
mov
add
pop
pop
xchg
add
inc
je
cmp
pop
push
add
cs
jge
cmp
or
loopne
mov
frstor
xor
inc
ret
in
xchg
icebp
incl
js
sbb
or
jbe
test
cmp
call
cmpb
int
mulb
cli
bound
je
xchg
mov
nop
adc
lods
loop
add
fcoms
sub
mov
pop
pusha
insl
subb
out
loopne
scas
repnz
test
fs
push
arpl
push
add
mov
aad
add
outsl
add
jmp
subb
push
outsb
xor
pop
sar
push
inc
pop
bound
mov
adc
mov
andb
mov
sub
xor
std
add
cmp
and
mov
dec
push
dec
call
xor
pusha
or
dec
cwtl
rcrb
push
mov
adc
pop
negb
pop
jnp
adc
mov
push
sub
sub
shrb
addb
push
filds
imul
andl
jge
stos
ss
hlt
adc
sbb
jecxz
push
sub
xor
mov
add
fsubrs
or
pop
cmc
in
sub
pop
outsl
dec
pusha
incl
jmp
or
add
push
gs
mov
push
dec
js
cld
jbe
add
popa
sub
js
cmpl
mov
pushl
in
or
jecxz
pusha
or
je
push
call
mov
call
inc
out
jg
mov
xchg
pusha
pop
call
jmp
pop
in
pusha
das
test
jo
cmpb
mov
jne
mov
loop
loop
pop
jae
mov
xchg
imul
or
mov
and
mov
bound
outsl
jne
inc
cwtl
dec
push
pop
pusha
mov
lock
call
shl
add
outsl
inc
stos
icebp
jmp
mov
arpl
push
push
test
sarl
inc
mov
pop
inc
mov
subb
in
movsl
cmc
cwtl
loopne
push
jl
dec
movsl
mov
pop
add
loopne
je
popa
push
cmp
sub
test
pop
rcl
shrb
pop
je
pusha
and
sbb
lcall
arpl
pop
ds
adc
mov
shlb
lds
loopne
xchg
inc
negb
scas
jbe
adc
call
in
adc
bound
pop
rcrb
insb
xchg
xor
loopne
cltd
push
and
adc
inc
mov
mov
clc
les
add
mov
mov
push
or
sub
mov
cld
lea
jmp
push
or
lcall
ss
add
filds
add
shl
ss
lds
add
pop
mov
pop
lock
mov
jl
push
jb
shlb
pop
idivb
in
mov
fcomi
rcrb
sti
mov
je
or
sub
mov
cmp
icebp
add
lock
or
and
add
nop
add
nop
push
xorb
mov
jmp
dec
mov
adc
add
mov
mov
xchg
jnp
aaa
or
xchg
scas
repnz
icebp
cmpsb
scas
adc
jge
adc
pusha
jnp
icebp
mov
mov
sbb
shlb
xor
push
cli
add
mov
movl
fs
decl
movb
push
push
sbb
mov
sub
sub
mov
call
inc
ficomps
imul
jle
icebp
mov
call
or
inc
mov
jb
mov
mov
lock
bnd
mov
in
jbe
xchg
adc
or
mov
adc
outsl
push
mov
dec
pushf
mov
pop
mov
pop
and
pop
je
push
fwait
and
inc
xor
loop
pop
mov
das
add
add
je
add
add
mov
mov
test
xor
or
add
adc
hlt
mov
xor
cmp
pop
leave
jae
popa
addl
and
lret
jp
add
fbld
add
lock
or
pop
mov
adc
je
jp
ljmp
push
sub
sub
push
loope
xor
hlt
adc
jl
sti
loopne
mov
push
out
add
dec
addb
jbe
mov
clc
add
pop
add
add
mov
mov
push
adc
adc
fwait
mov
dec
es
lock
je
jbe
test
call
ds
mov
mov
xor
stc
add
mov
cmp
out
ljmp
stos
xor
push
or
cwtl
les
add
lods
jbe
cld
idiv
decl
pop
hlt
mov
add
mov
inc
jl
adc
jb
mov
imul
jbe
and
sub
lock
mov
js
sti
je
bound
jle
jo
loopne
sbb
aaa
mov
loopne
inc
jmp
mov
or
clc
incl
add
mov
filds
cmpl
inc
repz
loopne
and
sub
adc
shr
or
stos
or
sub
test
call
pushf
add
movsb
js
addr16
inc
fwait
push
add
call
lock
and
jae
cltd
mov
mov
pop
clc
adc
outsb
jg
mov
adc
je
mov
das
pop
lock
sub
add
fs
sbb
pop
push
push
dec
sti
pop
mov
jg
inc
test
shll
mov
fdivrs
shll
call
pusha
xor
sti
mov
mov
jne
movsb
mov
mov
pop
std
jmp
sbb
das
adc
or
clc
mov
mov
push
fcmovu
or
stos
pop
adc
fincstp
fsubrs
fsubrs
ja
sti
jle
stos
adc
xlat
fsts
mov
mov
lock
outsb
inc
sbb
jbe
fs
pop
cs
xchg
add
mov
dec
push
mov
das
and
jno
outsb
sub
xlat
mov
xlat
sbb
or
dec
mov
insl
scas
add
aam
xor
mov
sbb
pop
pop
sahf
mov
subb
arpl
xor
jno
mov
pop
inc
push
or
ss
push
xor
jo
push
jbe
mov
nop
xchg
add
jo
mov
jg
and
shlb
inc
daa
push
rorb
std
mov
push
mov
xchg
add
adc
add
mov
je
aam
add
inc
and
and
nop
dec
cli
scas
mov
push
mov
add
nop
mov
pushf
push
fcomip
out
stos
xorl
mov
inc
xor
and
or
add
cld
adc
mov
sbb
mov
data16
xchg
add
les
je
ljmp
mul
add
or
aaa
xor
je
ret
mov
and
sbb
inc
fiadds
pop
add
lods
sbb
adc
mov
xor
stos
lods
jmp
in
mov
outsb
adc
cmpl
inc
add
xor
mov
mov
shrb
sbb
jne
mov
or
fldenv
testl
sbb
fdivrl
sub
aam
mov
jge
adc
xor
mov
adc
jle
lea
roll
out
mov
inc
push
sbb
xlat
jae
sub
add
or
outsl
fisttps
add
adc
cmp
push
add
cli
add
rorb
cmp
jg
sbb
inc
in
inc
cmp
pop
add
movsb
xor
add
mov
pushf
addb
pop
mov
shr
add
adc
lock
xchg
push
mov
lcall
mov
sbb
inc
ret
bnd
scas
jl
dec
sbb
xchg
adc
add
mov
lods
and
rolb
jge
out
loop
add
movsb
push
loopne
inc
int3
add
call
lret
je
into
push
mov
loopne
inc
inc
jmp
pushl
je
lods
jo
and
inc
jne
pusha
ret
push
imul
add
neg
xlat
incl
adc
and
jne
icebp
rcrl
xorb
or
mov
add
mov
xor
jl
es
xor
push
adc
jg
loopne
es
int3
sbb
or
push
xchg
adc
pushl
xor
es
xor
stc
jl
push
mov
cmp
call
mov
add
jbe
cld
mull
into
daa
hlt
nop
sbb
or
aam
push
add
scas
orb
jo
push
mov
outsb
lcall
pop
and
xchg
test
jns
clc
and
pop
cmc
sub
pop
call
and
ret
shlb
ret
add
pop
pusha
adcl
jmp
icebp
and
or
dec
insb
pop
pop
stos
sbbb
bound
out
sarb
sbb
add
and
add
pop
sbb
push
inc
lcall
mov
daa
and
jb
sbb
push
xor
mov
mov
mov
jb
js
sub
cmp
loopne
sbb
mov
cmp
jne
push
out
adc
mov
and
shlb
and
es
inc
loope
scas
cmpsb
data16
and
call
adc
scas
add
lock
lea
scas
clc
add
push
push
int3
sub
andb
add
and
hlt
test
adc
mov
cmp
pop
orb
jne
into
lock
int3
aam
aam
out
loop
hlt
dec
xor
jle
sub
int3
test
test
lock
ret
mov
push
push
test
sub
or
out
mov
lods
cmp
xor
imul
push
lock
shrb
push
xchg
cmpb
jl
lock
cmpb
jmp
test
mov
xchg
mov
jg
jl
push
vmread
xchg
outsb
pop
jmp
repnz
outsb
mov
adc
ret
aam
inc
mov
fimull
out
lea
push
fs
loopne
call
movsb
and
sbb
pop
orb
addl
sub
sub
in
or
sbb
jmp
aaa
cmpb
mov
aas
push
test
cmp
add
adc
popa
or
testl
sbb
out
mov
cli
ret
push
inc
loopne
negb
xorl
or
sub
imul
inc
add
stos
jg
add
add
add
lahf
and
mov
pusha
mov
dec
shll
pop
pop
and
mov
add
fldl
jmp
inc
es
cltd
cmpl
add
mov
adc
add
loopne
adc
add
insb
jle
ss
rolb
add
sub
jo
inc
jmp
push
lods
pop
mov
movsb
inc
test
or
call
or
adc
clc
sub
pop
push
call
sub
je
xchg
sti
add
std
daa
in
shlb
or
lock
add
rcrl
std
loope
add
or
rcrb
xor
cli
and
cmp
adc
sahf
ret
jge
mov
xor
jp
roll
inc
add
xor
jl
decb
test
pop
xor
cmp
packssdw
push
cltd
inc
mov
ds
add
sbb
pop
loopne
adcl
sub
add
test
inc
push
pop
xchg
cld
rolb
and
cmp
test
ss
dec
cmp
roll
ret
inc
je
repnz
shlb
add
into
mov
mov
sbb
dec
inc
sbb
adc
and
mov
mov
or
add
mov
hlt
test
sbb
les
cli
sar
mov
shlb
push
outsl
clc
fisttps
cmpsb
rorb
inc
lock
je
movl
mov
sbb
fiadds
add
es
pop
inc
loopne
mov
pusha
dec
sbb
xor
pushf
fsubs
jmp
inc
and
pusha
pcmpeqb
and
push
adc
loope
lret
pop
cwtl
push
push
and
add
mov
loopne
push
pop
cltd
mov
and
lea
cmp
outsb
dec
or
rcrl
or
pop
push
and
imulb
add
add
and
les
dec
sub
test
and
pop
jecxz
loop
adc
mov
pop
add
enter
fsubs
lcall
loopne
loopne
mov
incb
cltd
loopne
xor
adc
lret
pop
rorl
jne
js
je
sbb
hlt
ljmp
in
in
popa
lcall
aas
scas
cwtl
pushl
jo
ljmp
add
loopne
push
inc
divl
and
cmp
mov
sarl
iret
loop
inc
loopne
mov
xchg
sub
scas
stos
dec
push
in
pop
jne
push
idiv
jmp
push
pop
inc
and
cltd
sub
mov
push
sti
sbb
les
aas
sub
sub
inc
aas
lret
ret
sub
enter
fsubr
xor
aas
dec
add
jp
jb
imull
or
dec
add
push
cmp
mov
fsubl
mov
lds
lcall
cld
filds
or
add
mov
jg
loopne
enter
sub
cs
test
add
sbb
lcall
mov
sub
lods
pusha
jnp
inc
sub
mov
add
push
mov
sbb
mov
call
loopne
movsb
or
popf
mov
jg
popf
xor
jae
mov
and
fistps
inc
call
push
push
adc
xchg
sub
mov
popa
inc
cwtl
clc
sbb
loope
push
or
mov
push
and
lea
addl
push
cmp
shlb
je
in
incl
push
icebp
add
loopne
insb
das
add
rol
jp
loopne
loope
push
ret
push
jp
sbb
jmp
fisubs
inc
pusha
add
sbb
push
sbb
push
xchg
cmpsb
push
xchg
jle
test
bound
cmp
enter
push
popa
xchg
pop
mov
jecxz
mov
or
or
gs
pop
call
je
mov
mov
cmp
xchg
sub
cli
incb
lock
mov
jp
sub
mov
loopne
lock
pop
popa
add
push
mov
pusha
jl
test
js
sbb
pop
jne
inc
hlt
ljmp
sub
add
push
sbb
daa
std
test
mov
scas
mov
cmp
mov
jle
movsb
adc
jne
and
loope
loopne
ret
loope
call
loop
add
test
loopne
or
bound
mov
add
incl
out
arpl
aad
inc
pusha
mov
adc
add
out
add
or
mov
ret
js
outsl
decl
jb
loope
pop
cmpsl
pop
loope
pusha
adc
push
sti
push
enter
pusha
scas
aam
add
jle
adc
jmp
jmp
adc
xor
inc
in
lea
stos
mov
inc
lods
jno
mov
pop
dec
cli
or
aaa
std
std
jno
scas
call
test
xchg
popa
cmp
pop
cli
xor
mov
push
and
int3
mov
andl
or
add
shlb
or
and
fisubrs
mov
adc
jmp
adc
fsubs
mov
movsb
add
sub
dec
lock
pushl
mov
adc
pop
mov
lock
filds
lock
cmc
push
mov
mov
or
out
xor
mov
mov
dec
add
loopne
xchg
je
jo
add
add
jmp
data16
loopne
ret
add
mov
call
stos
and
stos
add
xor
jg
pop
mov
mov
das
push
dec
rolb
mov
lret
xor
in
subl
test
push
lock
aas
push
call
adc
fwait
add
cmp
add
sub
jb
and
ljmp
sub
inc
and
negl
add
ret
into
add
pop
icebp
subb
adc
adc
lock
fwait
add
jo
add
sub
hlt
push
out
pusha
loope
je
mov
stos
das
cmp
or
push
mov
push
aam
push
orb
add
jg
lock
loopne
loop
icebp
adc
fdivl
mov
pusha
sbb
jle
lock
lds
loope
sar
mov
cs
jne
mov
xor
jmp
push
xor
pushl
lea
push
push
xorb
push
pop
lret
and
push
jb
push
decl
enter
dec
jl
and
or
lock
add
adc
xor
mov
push
icebp
sbb
xor
cmp
lea
adc
mov
jb
ds
add
inc
jbe
lea
out
add
adc
mov
shrb
mov
jl
push
push
push
dec
mov
pop
and
incb
xor
lock
push
mov
jg
rclb
mov
pop
add
call
mov
pop
pop
add
push
lods
fsubl
pop
xor
dec
sub
inc
or
shlb
push
dec
inc
test
cmpsl
stos
stos
loope
test
sarb
xor
loopne
mov
negb
or
jne
enter
dec
lock
pop
pop
mov
ret
add
jle
xchg
xor
test
test
fidivs
or
push
adc
call
mov
call
aas
loopne
sub
sbb
movsb
xor
je
mov
adc
sti
cmp
dec
mov
call
or
cli
adc
cmpsb
jmp
push
sbb
pop
and
dec
push
pushf
push
xor
add
and
cld
add
jle
jo
mov
inc
mov
pop
loope
push
popa
push
fcoms
repnz
adc
insb
lds
ret
ds
stc
test
jge
ja
clc
scas
mov
mov
push
add
jbe
mov
push
add
lahf
adcl
push
adc
inc
insb
add
cld
jo
mov
mov
pop
popa
fcom
int3
jae
push
and
aas
adc
add
pusha
mov
jo
sbb
inc
jo
data16
mov
xchg
cmc
push
lock
mov
lcall
add
xor
pop
or
test
push
and
mov
xchg
push
sti
data16
ljmp
push
xor
or
hlt
pop
lock
or
adc
sti
test
xor
test
ljmp
and
jno
xchg
out
or
jbe
addl
or
ds
mov
dec
push
out
sub
jo
movsl
cmp
adc
ja
ljmp
je
call
js
xchg
mov
or
push
andl
adc
jmp
lock
xor
gs
dec
push
push
pusha
pop
or
push
bsf
cltd
xor
pop
fmul
xchg
lock
xchg
adc
outsl
loop
sti
add
sub
mov
jmp
pusha
sbb
fsubs
sbbb
inc
mov
repz
adc
jo
pop
sbb
add
pushl
pop
mov
pop
adc
inc
shrb
hlt
pop
mov
jb
mov
mov
in
mov
das
pop
push
icebp
xchg
jno
pop
or
rclb
fnstenv
adc
mov
lock
adc
in
aas
push
pop
test
outsl
fistpll
jb
sbb
mov
testl
stos
mov
add
clc
jbe
loopne
push
adc
xchg
xchg
negl
or
add
adc
add
mov
scas
push
mov
mov
call
clc
jo
and
xor
push
cld
push
sti
inc
in
pop
imul
pusha
pop
xor
inc
adc
test
incl
popa
or
and
cwtl
out
xor
and
and
xor
sub
pop
inc
xor
cmp
lret
add
sbb
int3
movsl
push
push
pop
lock
fisubl
cs
mov
inc
mov
lock
pop
jmp
lock
stc
jo
and
mov
add
jg
addb
mov
push
push
test
mov
cli
inc
xor
jne
adc
jo
lea
imulb
add
pop
inc
cltd
cmp
mov
sahf
mov
scas
stos
mov
adc
int
xor
inc
aad
fidivrl
dec
ljmp
mov
cld
mov
add
rol
or
mov
cmp
fistpl
jae
lods
push
mov
cmp
data16
aaa
push
cli
cmp
cltd
xor
data16
cli
rclb
xchg
fsub
inc
data16
dec
les
adc
pop
pop
and
add
sub
or
ret
mov
sub
orl
call
les
or
xchg
test
mov
jne
jp
inc
stos
add
fld
jb
imul
aas
mov
jmp
push
mov
inc
jl
stos
mov
call
adc
movsb
loopne
notrack
ss
jno
cmp
cs
por
add
int3
jne
inc
xchg
leave
pop
pop
icebp
fldt
mov
jbe
xchg
jnp
mov
jl
imul
mov
incl
add
lahf
mov
mov
pop
jno
xor
mov
push
mov
mov
in
fs
push
lea
xor
sarb
fdivp
sub
mov
sarl
mov
add
inc
mov
add
pop
sbb
mov
imul
rol
add
inc
jecxz
fcmovbe
sub
bound
and
cmp
out
cmp
xchg
xlat
jbe
incb
jne
add
add
add
or
jg
xor
sbb
add
test
mov
incb
stc
or
add
mov
jbe
add
push
inc
dec
pop
shll
mov
out
int3
outsl
push
fiaddl
cmp
push
sub
adc
pop
icebp
cltd
add
push
testb
add
push
fdivr
adc
rcrb
jo
push
push
outsl
cli
jmp
push
sbb
jmp
or
add
jne
adc
sbb
les
loop
or
jne
mov
lods
sarl
mov
les
ja
aaa
and
jle
out
sub
ret
xchg
add
sbbl
rolb
mov
or
call
xchg
push
push
mov
xor
rol
andb
ljmp
pop
sub
push
mov
jle
call
cli
nop
clc
xorl
xchg
fcmovnb
loopne
neg
out
je
test
push
adc
or
es
dec
out
call
daa
orl
xchg
fimull
push
sub
or
adc
add
les
mov
das
jne
pop
ficompl
call
sbb
ret
add
mov
mov
call
mov
sbbb
push
outsl
cmp
imul
cmp
push
jo
push
push
push
jle
adc
sbb
fstpt
push
rorb
enter
xor
xor
sbb
cmp
xchg
cmp
mov
test
int3
mov
sbb
mov
fisubl
xchg
jb
mov
inc
xchg
jbe
push
sti
push
lods
std
push
sub
jne
je
xchg
mov
mov
sbb
sub
les
js
call
or
outsl
xchg
mov
shlb
sbbb
std
push
ret
xor
cs
ljmp
jne
push
add
aaa
inc
cmpsl
jne
jb
or
shlb
push
add
adc
inc
ja
inc
je
call
push
adc
fstpt
dec
les
pusha
lcall
adc
mov
inc
sub
cmp
mov
xchg
push
test
and
xchg
aam
jne
adc
xchg
cmp
add
mov
mov
push
or
sub
faddl
or
shll
aaa
sbb
push
je
rorb
ljmp
add
xor
dec
pop
aam
sub
xchg
shrb
test
push
push
jmp
out
push
xor
or
jbe
sub
cld
or
xlat
cwtl
cmc
jo
xlat
push
jmp
adc
or
sub
repnz
enter
inc
rcll
std
das
rcrb
loope
incl
inc
idivl
cmpsb
mov
loope
inc
push
add
scas
sbb
addb
fstps
push
jbe
or
add
movsl
push
mov
push
add
cld
es
mov
pop
mov
dec
jecxz
xor
aam
push
or
out
scas
adc
dec
jne
icebp
lds
inc
loop
inc
es
jbe
jg
mov
jb
add
inc
je
push
call
mov
adc
mov
adc
imul
xlat
lcall
xor
push
sub
dec
pop
clc
dec
add
clc
je
jp
push
rolb
lods
call
add
jmp
iret
xchg
leave
inc
lods
popa
add
ljmpw
loopne
mov
xchg
push
push
push
add
es
imul
call
jno
orb
ljmp
call
xor
mov
pop
fs
clc
outsb
pop
pop
dec
ljmp
push
mov
or
add
push
popa
pop
pop
lret
cwtl
ret
jg
iret
sub
jmp
push
loop
adc
adc
jns
hlt
inc
adc
lret
pusha
fs
addl
stos
mov
sub
pop
or
push
or
fadds
push
loopne
pop
loopne
add
je
popa
xchg
ss
mov
je
fisubl
ficompl
mov
test
dec
lods
adcb
arpl
pop
push
mov
xor
sbb
jne
sbb
add
xchg
mov
andb
sub
sbb
mov
add
push
or
lret
loope
mov
or
or
adc
sbb
or
xor
dec
inc
repz
pop
add
sub
cld
call
inc
ds
jbe
add
jp
add
xor
adc
and
callw
sub
and
xor
mov
loopne
std
je
xchg
or
and
cwtl
popa
adc
mov
cmc
mov
mov
loopne
pop
cmp
stc
mov
aam
inc
inc
add
push
and
or
popa
jo
jo
cmp
sahf
push
shrb
push
or
jmp
or
inc
in
aad
incl
sub
cwtl
add
mov
in
incl
clc
adc
cmp
jne
add
sti
push
pop
test
loopne
fs
cmp
or
inc
hlt
push
mov
and
cmpsb
adc
arpl
call
adc
lcall
and
clc
push
xchg
adc
icebp
xorb
mov
mov
jmp
xor
ds
andl
fadds
lods
lret
cmpsl
and
pop
imul
cmp
bound
cmpsb
dec
pop
sub
inc
loope
push
adc
aas
mov
cmc
les
loopne
cmp
jge
loope
xchg
data16
push
or
or
push
sahf
pop
call
incl
lea
pop
mov
lret
adcb
add
xchg
jb
jge
mov
push
push
add
xchg
dec
jge
test
sbb
pop
pop
inc
imull
addb
ret
popa
pop
addb
adc
pusha
pop
dec
dec
mov
pusha
das
xor
push
insb
sub
xor
xorl
clc
fistpl
push
les
mov
jp
fidivrl
lret
push
sbbl
push
push
andb
lock
out
add
je
xor
inc
mov
test
cwtl
mov
daa
icebp
lcall
popa
arpl
std
mov
jge
add
mov
xor
jg
push
fwait
dec
sbb
jge
ret
mov
loop
jne
js
inc
aam
ss
cs
and
je
sub
mov
dec
lock
mov
jo
nop
pop
mov
jbe
xchg
inc
jle
mov
cli
mov
adc
mov
je
inc
ljmp
addb
inc
inc
add
enter
or
imul
jo
jo
cmp
pop
jb
mov
fucom
dec
and
test
outsb
jle
push
addb
std
inc
data16
aam
mov
cmpb
loopne
mov
cmp
cld
pop
imul
sbb
and
pop
add
mov
ja
pusha
lcall
pop
and
add
cmp
mov
enter
jo
push
test
inc
shl
pop
push
in
call
movsb
inc
loopne
icebp
ss
cli
in
push
mov
cmp
and
mov
and
sub
pop
loope
imul
inc
test
mov
or
cli
sbb
rorb
add
lea
lods
sbb
bound
or
jge
sbb
xor
push
into
or
fsubr
mov
hlt
jg
xchg
or
jne
mov
mov
shll
mov
aaa
sbb
mov
push
or
mov
push
sbb
out
mov
jg
mov
xor
adc
insl
push
push
and
sbb
mov
lods
xor
mov
pushf
mov
push
loop
push
mov
je
ror
loopne
call
outsb
pop
jo
xchg
dec
push
leave
clc
or
mov
push
inc
and
pop
inc
cli
pop
cmp
dec
adc
xchg
or
outsb
test
ss
je
je
cmp
call
cmpsl
sbb
loop
js
shlb
sar
add
or
add
mov
jo
lcall
ret
call
push
les
scas
pop
and
push
int
or
lea
lea
mov
loop
mov
add
jg
fs
add
test
jae
cld
sbb
xor
jo
inc
ss
scas
ljmp
outsb
mov
jb
add
adc
pop
imul
mov
or
imul
nop
cld
pop
pop
sbb
add
adc
testb
mov
cs
xor
aaa
hlt
inc
ror
mov
and
lcall
sbb
sbb
es
and
mov
shlb
inc
push
je
adc
sub
adc
clc
cmp
movsl
dec
add
aam
fcomps
xor
mov
lcall
cs
outsl
repz
jbe
les
sbb
inc
call
lock
adc
testl
cmp
add
jb
cmp
mov
test
mov
adc
sub
cld
scas
notb
sbb
fstpl
sarb
add
je
pop
shrb
inc
loop
sbb
dec
insb
lock
mov
push
icebp
or
fs
push
mov
mov
sub
inc
inc
pop
push
cmovne
or
fidivs
lret
repnz
dec
jb
hlt
mov
or
and
xor
push
clc
add
adc
inc
or
adc
insb
add
lock
sub
cli
fwait
mov
js
xchg
add
mov
push
xchg
dec
cmp
andl
xor
shr
loope
mov
jbe
test
and
mov
cmp
sub
adc
xlat
pop
cld
int3
lds
adc
fdivrp
inc
mov
mov
mov
push
inc
add
jmp
add
lea
mov
xor
mov
mov
mov
adc
dec
xchg
xchg
mov
push
les
inc
inc
jecxz
sbb
push
jo
lock
hlt
jmp
jne
push
xor
adc
enter
jmp
mov
xlat
aam
jb
mov
push
jnp
jo
pop
fnstenv
mov
add
jge
cmpsl
or
or
xor
adc
fisubs
jno
fsubs
push
in
or
dec
in
adc
and
push
mov
xor
shll
test
inc
test
clc
pusha
aaa
jo
add
jg
xor
sub
jg
sub
adc
xchg
jo
cmpl
adc
mov
inc
adc
mov
je
and
clc
mov
shll
xchg
std
addl
xor
dec
add
cmp
add
sbb
push
lock
lock
adc
icebp
push
insl
ss
inc
nop
inc
dec
call
adc
mov
notb
sbb
dec
call
jmp
jno
mov
pop
andl
xlat
xchg
jo
ss
or
push
clc
jo
and
lock
mov
and
push
jbe
mov
outsb
ljmp
push
xor
pop
cld
mov
sahf
inc
out
cmp
repnz
fucomi
cmp
pop
mov
inc
and
fnstenv
shrl
mov
and
outsl
xchg
and
je
cmp
pop
mov
xor
xor
xchg
mov
scas
subb
daa
insl
loopne
in
data16
call
lret
pusha
ficoms
jmp
push
mov
jecxz
into
shlb
les
cmp
push
sbb
ja
mov
mov
test
jge
mov
out
inc
idivl
pop
in
mov
or
movsb
test
xor
sbb
loopne
mov
fwait
call
je
and
pop
into
xor
stos
mov
ja
iret
mov
jo
xor
sbb
add
andb
lcall
cmp
cld
add
xchg
mov
xchg
icebp
cltd
push
int3
sub
lods
pusha
push
fwait
js
or
repz
jg
inc
add
ret
sbb
jno
mov
sub
add
std
cli
dec
ret
lock
nop
mov
mov
outsl
bound
pusha
jo
adc
mov
xor
mov
addl
test
scas
pop
mov
aam
cmp
push
sar
fcmovnu
nop
fs
mov
cli
mov
add
mov
ss
push
push
test
call
or
adc
dec
add
or
inc
sbb
ffree
mov
add
test
inc
pop
mov
inc
repz
lock
push
or
movl
cmpsb
in
lea
orb
fsubs
cmp
add
loop
inc
jmp
test
test
lea
outsl
lock
push
adcb
cmpsb
mov
out
out
add
rcrb
inc
mov
addb
dec
adc
mov
jbe
addb
mov
lods
mov
les
add
icebp
ds
sbb
xor
lea
jle
push
push
jle
loop
mov
mov
outsl
push
mov
xchg
clc
scas
mov
cmpw
ljmp
test
mov
test
jg
mov
sub
iret
jmp
or
das
leave
inc
add
movb
mov
xor
jg
lock
mov
sub
pop
jne
es
xor
jno
add
push
push
lcall
sahf
gs
add
outsb
dec
adc
mov
pop
dec
sbbl
clc
orl
xor
or
dec
or
push
jae
and
js
jl
fbld
mov
pop
add
mov
lock
insl
fdivp
push
add
xor
xor
lock
and
add
push
sbb
test
add
orl
jmp
adc
je
and
adc
movb
jl
dec
int
scas
push
mov
jns
shlb
xchg
add
inc
and
cwtl
test
ret
leave
lea
iret
sbb
in
nop
sbbb
pushf
rclb
arpl
shll
out
sub
mov
inc
pop
mov
ss
add
subl
cmpb
dec
in
cmpl
xchg
xchg
inc
add
pop
push
mov
jg
subb
push
orb
rolb
and
incl
push
or
ret
push
movsb
rolb
faddl
sbb
sub
aas
movsb
icebp
jno
movsb
mov
inc
push
rcrb
mov
sbb
xchg
sbb
ss
lods
es
dec
fs
xchg
or
dec
test
imulb
lock
mov
clc
call
inc
add
push
or
sbb
push
ret
aam
mov
jbe
mov
test
ffreep
in
or
cvtps2pi
icebp
or
dec
and
jbe
push
mov
insb
mov
orl
dec
adc
or
ret
inc
js
je
and
shlb
sysenter
or
mov
or
dec
adc
ljmp
mov
mov
or
je
push
mov
or
mov
data16
jmp
or
sub
push
dec
add
inc
xchg
movsl
xchg
incl
cwtl
pop
xor
dec
or
je
ret
or
roll
sarb
shrb
push
lock
add
inc
push
sub
push
cmp
test
jno
or
xor
pop
jmp
add
jo
inc
out
outsb
adc
cmp
fdivrl
mov
xor
cmp
pop
cmp
cmp
jne
je
push
adc
insb
test
ljmp
arpl
sbb
push
rolb
call
pop
pop
decl
lcall
fimull
filds
pop
gs
add
leave
ret
pusha
mov
xchg
je
aas
hlt
pop
ret
add
je
xor
jne
mov
pop
sbbb
lods
test
mov
add
add
sbbb
fs
add
add
jl
jne
and
and
out
rcll
testb
inc
jne
add
push
or
lret
jne
sbb
lcall
insb
hlt
in
adc
sub
jmp
mov
popf
bound
and
jl
cmp
je
mov
push
jecxz
and
inc
adc
jbe
ret
pusha
or
dec
pusha
mov
add
and
filds
push
sbb
pop
imul
xchg
adc
cmp
andl
scas
or
push
cli
decl
push
adc
pop
mov
fs
jl
inc
adc
mov
scas
enter
int
cmp
testb
or
cld
jne
ljmp
loopne
xorb
hlt
pop
dec
or
loopne
add
xor
and
push
mov
xor
rcr
inc
ret
je
arpl
or
mov
dec
sbb
ljmp
loop
loopne
and
add
call
clc
inc
pop
mov
cld
sbb
or
pop
ss
pusha
sbb
push
out
push
bound
fs
cmp
ds
add
out
stos
sub
push
cmc
sub
cmpsl
inc
bound
mov
arpl
lods
aaa
inc
icebp
call
fs
call
fnstsw
ljmp
inc
pop
sarb
movl
pop
or
or
inc
movsl
hlt
sbb
loop
nop
mov
idiv
jg
jae
lea
loopne
pop
dec
mul
daa
popa
inc
mov
inc
adc
pop
test
add
pop
sbb
adc
adc
fsubl
mov
push
push
add
popf
add
mov
into
mov
adc
add
shrb
inc
and
loope,pn
cmp
or
cmp
popa
mov
shl
inc
sbb
das
jno
mov
add
mov
hlt
mov
nop
mov
sbb
add
imul
popa
loopne
hlt
test
jg
cs
cmp
xlat
add
test
in
inc
add
adc
adc
xor
cwtl
mov
loopne
loope
pop
mov
loopne
pop
pusha
loop
pop
mov
orl
push
jmp
mov
add
addb
andb
hlt
push
fwait
cmp
call
orb
mov
adc
enter
pushf
and
inc
inc
jb
fbld
add
cmp
mov
icebp
pop
adc
push
movsb
jge
cmpb
call
test
dec
mov
push
fldt
jbe
ds
add
pop
xorl
js
or
add
push
je
cmp
mov
xorb
roll
inc
ret
xchg
loope
push
call
cmp
add
sub
jg
push
loopne
push
mov
mov
and
push
mov
jl,pt
data16
in
fisttps
call
loopne
sbb
loopne
call
lea
lods
xchg
push
leave
ret
mov
mull
add
adc
sub
and
je
inc
adc
add
or
scas
add
push
pop
add
stos
pushf
mov
mov
xor
imulb
cmp
pop
dec
loope
push
cs
mov
add
pop
lret
or
push
int3
scas
xor
and
add
or
dec
jne
sub
lea
adc
lret
dec
pop
inc
sub
or
enter
jo
ret
push
and
fidivrl
bound
pop
xchg
cmpb
pop
pop
dec
insb
dec
or
mov
dec
add
cmp
inc
xor
mov
out
cmp
mov
jl
add
mov
fisttps
sbb
add
jbe
hlt
subl
dec
xor
call
or
mov
icebp
sar
or
ficomps
cld
pop
incl
popf
jo
mov
adc
sar
push
jo
fistl
repnz
jns
adc
lock
adc
xchg
ja
add
iret
bound
lea
hlt
mov
icebp
adc
dec
cwtl
outsb
insb
in
mov
xchg
mov
jo
lock
jecxz
insb
jne
xor
inc
das
mov
ljmp
xlat
imul
or
or
orb
push
jmp
sbb
pop
ss
adc
add
bound
add
pop
push
icebp
push
mov
pop
ds
jae
pusha
mov
mov
clc
pop
xor
cld
adc
push
mov
pop
jo
and
adc
add
hlt
call
jo
mov
add
pop
push
add
dec
or
cmpsb
add
dec
or
ljmp
lcall
dec
jp
subb
es
call
and
mov
cld
push
xchg
cmc
and
dec
mov
pop
xor
sbb
push
pop
jb
add
cmpsb
leave
mov
fdivrp
jae
repnz
and
push
and
ret
pop
mov
jl
pushl
sbb
mov
mov
js
pushf
cmpl
pop
adc
and
lock
and
dec
lret
inc
mov
addb
pusha
shlb
fadds
std
add
inc
pushl
pop
push
jo
sahf
add
outsb
js
add
jo
jb
je
outsb
or
orl
pop
je
sbb
test
xor
ss
pop
inc
add
je
rolb
jecxz
test
or
ss
mov
loop
fisubl
jno
and
mov
bound
rcrl
fs
mov
jne
insb
xor
addr16
mov
pushf
mov
mov
call
inc
and
fdivp
outsl
and
roll
mov
clc
sbb
call
pop
lock
adc
mov
inc
lods
test
loopne
call
adc
or
xor
sahf
or
cmp
lcall
mov
xor
push
and
jl
repnz
sbbb
add
and
les
inc
test
andb
mov
mov
popa
std
decl
adc
xor
std
arpl
mov
test
test
mov
repnz
add
adc
sbb
push
inc
and
and
nop
adc
fcom
lock
mov
mov
in
jo
test
cmp
repnz
lods
push
adc
xchg
and
lods
lock
mov
push
icebp
push
jo
jp
mov
jns
adc
addr16
ds
inc
andl
inc
inc
lock
mov
cltd
cmpsb
fisubrl
jbe
push
adc
sbb
inc
cmp
pop
loop
sub
or
mov
jle
or
fdivl
add
or
pushl
xor
adc
sub
testb
ret
and
cmp
cs
sbb
int3
cmp
loope
js
mov
dec
gs
inc
mov
add
dec
push
push
adc
or
dec
shrl
lods
jno
or
inc
add
sub
mov
inc
inc
mov
cmpb
or
or
loope
das
or
data16
add
adc
ljmp
and
mov
push
mov
cmp
repz
push
push
or
in
mov
insl
sbb
sbb
mov
or
add
shll
sbb
lahf
push
xchg
dec
das
jbe
or
repz
lock
jg
push
fildll
shlb
sub
or
inc
cli
jo
mov
mov
mov
add
repz
sub
push
cmp
sbb
loopne
push
jo
xor
push
push
push
jecxz
call
ljmp
je
sub
imul
call
mov
cltd
push
dec
mov
add
movsl
test
add
xor
aam
cmp
or
les
jl
in
xchg
push
xor
int
adc
divb
add
adc
std
incl
mov
or
cmp
sub
fiadds
push
sub
dec
pushl
jno
mov
xor
sub
rcl
ja
rorl
in
sub
pop
cmp
inc
clc
sub
dec
outsb
jo
sbb
test
push
push
pop
xchg
adc
out
loope
scas
pushl
shlb
add
out
cmc
push
add
adc
dec
dec
and
movsb
aam
jmp
call
inc
and
movb
and
jno
sbb
decl
pop
cmp
testl
mov
xor
adc
add
mov
mov
testb
push
adc
mov
fld
scas
or
imull
icebp
rorl
add
jmp
inc
icebp
call
mov
sbb
lahf
or
push
mov
xor
cld
or
mov
subb
aad
or
and
notb
hlt
xorl
add
and
lea
inc
push
push
jl
push
dec
inc
ja
pop
loope
xchg
sahf
je
jo
aam
push
sbb
jne
lea
test
adc
pusha
add
sbbb
pop
xor
and
pop
imul
or
xchg
xorl
add
scas
scas
subb
inc
jmp
push
hlt
mov
dec
xlat
outsb
cwtl
push
pop
hlt
sbbb
mov
lea
lahf
xor
je
lea
int
push
inc
jmp
add
add
pop
popa
lea
add
xchg
lock
rolb
incb
fwait
adc
and
xor
cmc
ds
pop
or
and
mov
sub
dec
decl
in
add
jmp
mov
sub
sbbb
push
mov
mov
pusha
fiaddl
loopne
sbbl
ret
fsubr
sarl
shrb
sbb
in
icebp
ret
push
add
mov
pushl
int3
orb
cmp
outsb
sub
xor
scas
or
dec
aam
xchg
adc
clc
movsl
mov
jmp
inc
scas
loopne
adc
mov
data16
jne
mov
push
pop
adc
xchg
push
fldenv
ret
adc
pushf
or
inc
cld
ja
adc
xchg
cmp
je
inc
push
call
inc
push
in
pusha
jp
mov
adc
test
add
call
shll
repnz
test
rcl
popa
in
adc
sbb
adc
pop
loope
push
cmpsb
push
int3
into
pop
stos
adc
mov
add
call
or
sbb
dec
add
push
dec
push
nop
mov
loop
inc
aad
jle
add
icebp
jg
mov
add
lea
sub
xorb
pop
cmpsl
mov
not
test
pusha
scas
outsl
adc
push
adc
adc
add
sub
cli
rorb
push
and
mov
push
ret
shrb
push
roll
das
mov
inc
mov
aas
mov
cmp
inc
sub
sbb
jo
pushf
sbb
shlb
adc
dec
out
push
dec
inc
ret
push
shlb
test
outsb
mov
inc
mov
cmp
inc
jle
mov
cli
fiadds
inc
sbbb
pop
jnp
hlt
xor
cld
jl
mov
sbb
out
inc
rcll
stos
jne
cmp
rcl
lea
lock
add
xchg
add
incl
lea
rcrb
test
or
mov
sbb
je
lods
call
js
pop
fistpll
adc
add
add
push
rclb
leave
cmp
add
inc
aam
and
dec
mov
shll
jne
incl
nop
adc
rclb
arpl
test
pop
es
cmp
mov
test
lock
incb
test
jmp
cmpsl
mov
nop
push
test
inc
ja
mov
pop
movsl
es
add
sti
add
inc
dec
sbbb
shlb
jl
fildl
fldt
mov
ret
lret
pop
adc
enter
push
mov
adcb
loope
inc
jecxz
clc
gs
xor
add
add
pop
push
and
jp
add
cmpsl
cmp
sbb
mov
pushf
push
pop
jle
fs
cmp
and
sub
mov
fs
pop
sahf
cmpsb
push
inc
add
cs
pop
mov
cmp
push
or
mov
popa
sub
aam
sub
incl
or
ret
ljmp
dec
mov
dec
pop
push
xchg
sbb
arpl
mov
das
add
push
push
push
add
push
xchg
loopne
push
pop
adcb
adc
cmp
addb
loopne
push
push
adc
dec
pusha
jl
mov
and
out
and
jp
mov
cmc
loopne
andl
sbb
and
pop
call
sbb
dec
pop
sub
loope
or
cltd
fdivrs
jl
call
mov
je
call
mov
add
or
pop
gs
aaa
lcall
xor
call
shl
ss
fsub
bound
push
pop
push
orb
xor
nop
inc
mov
add
rolb
mov
cld
out
inc
and
pusha
inc
pop
push
adcb
mov
lret
pop
dec
jbe
lods
sarl
loop
or
sbb
scas
push
idivl
cltd
js
data16
push
cmp
stc
push
push
mov
scas
bound
adc
in
pusha
mov
and
pop
and
fwait
movsl
add
cli
ja
cmpl
pop
and
jg
aaa
adc
popa
bound
add
insl
into
clc
pusha
insl
bound
test
sub
gs
jl
ja
sbb
or
fistpl
ret
inc
jmp
and
loopne
inc
ret
decl
push
inc
pusha
push
xor
cmp
jmp
mov
cmp
or
aaa
cli
data16
ss
adc
xor
in
add
push
and
hlt
sub
add
add
lock
mov
aas
adc
pusha
jno
scas
dec
sbb
jbe
roll
push
mov
mov
popa
cmp
and
xor
jne
add
ficoml
sbb
pushf
and
inc
test
and
sub
adc
and
cmp
aaa
xor
out
sbb
dec
loop
loopne
call
jg
sti
call
and
in
scas
negl
repz
leave
sbb
popa
and
lcall
bound
loope
mov
aaa
jmp
pushf
sbb
and
pusha
pop
notb
and
add
mov
dec
cmc
adc
test
adc
aam
bound
or
mov
and
cmp
lock
pop
addb
dec
fdivs
jno
push
xorb
jb
leave
inc
xchg
and
scas
mov
lret
call
loopne
dec
push
jo
lock
xchg
clc
bound
fidivrs
mov
jecxz
insb
adc
mov
cmp
dec
mov
inc
or
push
or
and
cltd
or
xor
inc
lods
or
dec
or
movsl
aam
fisttpl
cmpsl
push
xor
cmpsl
mov
cmp
inc
fs
inc
and
xorl
shl
incl
call
add
sub
ljmp
call
lock
push
scas
sbb
iret
call
les
adc
lock
dec
in
and
dec
dec
and
test
or
andl
and
out
jo
sbb
xchg
incb
adc
jg
imulb
ljmp
jg
push
lea
push
push
jno
mov
or
adc
add
fnsave
ret
mov
jo
sbb
xchg
and
ret
and
adc
xor
js
adc
jg
mov
adc
mov
jmp
push
mov
rcll
mov
sub
dec
add
cmc
rclb
into
xor
pop
lock
or
aas
popa
in
sbb
and
stos
jo
pop
mov
scas
inc
xor
fcomip
jb
lock
xor
sbb
pushl
not
call
sti
xor
xchg
mov
and
dec
xor
mov
add
xor
and
dec
add
jno
push
out
cmpl
mov
add
sbb
cmp
jb
cld
or
aaa
jmp
leave
addl
mov
xor
inc
bnd
xor
dec
mov
clc
ljmp
adc
icebp
jb
lock
jbe
pop
je
mov
jno
les
or
ss
add
xor
xorl
or
dec
push
int3
or
aas
jmp
add
add
jbe
decl
pushl
and
cltd
shlb
lock
push
test
pop
mov
xor
mov
out
jg
movsl
cmp
mov
jbe
ja
jmp
mov
push
ljmp
lock
inc
sub
icebp
push
mov
fs
popa
push
and
jae
jl
lcall
pop
fisubs
jo
xlat
push
jo
pop
sub
dec
sub
or
xor
dec
mov
repnz
jmp
mov
repnz
call
icebp
or
mov
mov
lock
pop
and
jge
repnz
dec
stos
loope
adc
add
mov
jle
test
xor
add
xor
jg
add
mov
sub
call
mov
lock
mov
sub
mov
and
or
filds
insb
mov
mov
sbb
jo
adc
cmp
bound
inc
xor
in
cli
add
outsl
hlt
add
les
jb
test
push
icebp
clc
lcall
test
cltd
fstpt
add
mov
adc
sub
cmp
sti
in
add
mov
lock
pop
lds
cmp
mov
lds
mov
fistpl
and
mov
enter
movsb
inc
mov
loope
mov
jmp
adc
int
add
sbb
and
dec
xor
mov
fs
adc
mov
mov
clc
mov
push
out
push
data16
pop
or
pop
arpl
dec
mov
sbb
dec
or
scas
sub
in
add
test
lahf
push
into
jns
mov
push
push
or
sbb
add
jg
jecxz
dec
and
add
jo
mov
mov
inc
inc
add
or
repz
or
or
sub
add
dec
xchg
pop
pop
push
test
adc
jmp
inc
lock
add
jno
mov
and
add
jno
fcompl
inc
jne
lock
lret
xor
aad
cmp
jbe
jp
inc
js
dec
mov
add
xor
scas
fwait
jle
xchg
push
push
clc
push
xchg
xchg
jo
incb
test
test
cmp
pop
sarb
jle
push
dec
clc
push
xor
push
ds
div
roll
jo
incl
jae
fsubrl
daa
lea
xor
decl
cmpl
cmp
sti
jecxz
add
stos
push
push
dec
int3
inc
idivb
cmp
mov
push
pop
add
icebp
mov
enter
call
adc
int3
rcrb
testl
add
lea
div
mov
orb
lods
adc
pop
push
lock
cmpsb
inc
std
or
and
cmp
mov
xor
cli
cwtl
cmp
mov
xchg
fnop
inc
cmp
je
inc
jmp
mov
push
mov
movsb
mov
aas
ret
rclb
jo
push
lock
mov
and
xorb
push
adc
pop
and
cld
push
jb
inc
inc
mov
test
dec
and
stos
mov
fs
ret
rclb
pop
ljmp
sbb
call
add
les
incl
outsb
add
mov
add
pop
add
outsb
icebp
sub
inc
mov
dec
addb
aam
outsb
roll
sbb
push
jno
dec
pop
icebp
pop
mov
or
leave
add
mov
sbb
in
lock
into
fwait
es
shlb
add
push
scas
cmp
adc
sub
into
lret
mov
jl
add
ss
std
decl
and
pop
inc
mov
mov
fmul
mov
mov
add
icebp
fdivrs
inc
arpl
orb
adc
sbb
sbb
or
js
incb
cmp
xchg
les
sahf
bound
jecxz
xor
sbb
xchg
gs
add
dec
push
mov
lea
jl
add
rorl
ljmp
pusha
or
popf
sub
or
or
ljmp
movsb
inc
inc
sbb
xchg
jb
in
ret
mov
aam
inc
mov
cmp
pop
and
cli
and
mov
enter
pop
mov
mov
dec
jbe
add
call
repz
cs
add
std
in
das
test
rolb
mov
dec
test
jecxz
inc
jmp
jg
and
jns
cmp
cmp
jnp
inc
test
push
subb
sbb
mov
mov
sbb
cmp
push
js
mov
in
push
xor
gs
add
fwait
sub
mov
cld
test
push
sbbb
jg
icebp
adcb
add
add
add
xorb
loop
add
sub
enter
add
mov
adc
fistl
or
insb
jp
dec
push
and
mov
icebp
mov
sub
push
pop
dec
adc
and
push
adc
inc
movsb
ret
pop
dec
mov
push
ret
xor
ret
std
mov
fidivrl
add
and
out
sarl
mov
test
pop
inc
xorb
inc
pop
adc
pushf
js
inc
shll
bound
orb
add
mov
xor
sbb
mov
int
cmpsb
and
cmp
jmp
add
mov
icebp
int
incb
inc
sbb
mov
jnp
daa
cmp
es
decb
xor
push
mov
rorb
or
or
push
bound
incl
insl
dec
insl
leave
incb
push
jns
cmp
movb
jo
fiadds
rcll
fiaddl
lock
mov
add
push
clc
mov
mov
inc
and
jge
push
push
and
outsb
nop
or
add
es
decl
daa
mov
mov
mov
lods
inc
jmp
ret
mov
add
ret
mov
push
or
dec
xchg
ficompl
cli
xor
dec
xor
mov
cmp
adc
dec
pop
fistps
inc
fldcw
rol
mov
aam
mov
sub
cmp
dec
xlat
les
xor
mov
jle
add
push
pop
adc
ret
adc
in
out
out
or
ror
adc
in
add
add
inc
adc
cmpsb
or
or
and
push
addl
dec
arpl
fdiv
xchg
and
sbb
push
jbe
mov
mov
orl
arpl
pop
sar
mov
sbb
inc
jmp
push
push
pop
xchg
and
lea
pop
mov
jg
icebp
pop
adc
and
dec
in
jbe
fiaddl
sub
imul
fstpl
aaa
push
jp
je
adc
inc
push
or
jbe
popa
popa
cmpb
clc
sub
dec
call
insl
mov
jo
mov
jne
fwait
test
loopne
xor
jge
jmp
mov
roll
cld
loopne
cmp
je
mov
add
jl
test
hlt
sbb
xor
push
sbb
inc
or
repnz
jmp
insl
cld
dec
mov
into
arpl
push
je
pusha
push
out
cli
sub
out
or
lahf
clc
outsl
pop
push
push
push
clc
push
xchg
or
push
inc
loopne
je
xchg
or
repnz
xor
clc
test
add
loop
cld
ret
clc
cld
pop
les
into
adcl
sbb
sub
fadds
push
test
and
gs
ljmp
jb
push
xchg
into
cmp
mov
mov
ja
or
subl
mov
dec
mov
adc
xchg
dec
add
ret
jmp
jb
pop
call
aam
out
mov
add
popl
push
sub
into
shrb
hlt
pushl
testb
jne
add
pop
pusha
dec
enter
push
dec
sbb
and
fwait
inc
clc
dec
fidivs
or
pop
mov
call
and
loopne
pop
lds
repnz
popa
cwtl
push
dec
ds
jb
hlt
incb
inc
cmp
xchg
hlt
sub
mov
pop
dec
inc
push
pop
dec
inc
push
and
xchg
mov
dec
popa
imul
sbb
sbbl
push
jl
and
test
hlt
mov
cmpsl
test
push
dec
enter
lock
sbb
pop
lods
pop
pop
pop
xor
adc
loop
stos
inc
push
and
push
mov
adc
popf
push
mov
and
popa
loopne
cmp
stc
cmpsb
xlat
loop
loopne
cmp
sub
mov
je
push
push
sub
jno
sti
jmp
pusha
insl
loopne
and
pusha
les
call
clc
loopne
sbb
test
out
pusha
add
add
bound
stc
cli
mov
test
out
xor
cmp
mov
scas
scas
fbld
imul
push
adc
clc
and
add
add
and
mov
scas
test
out
mov
cli
aas
xchg
push
push
inc
lock
das
jle
mov
mov
add
sarb
jne
loop
data16
mov
lahf
or
loopne
push
mov
mov
xor
mov
aaa
sbb
inc
push
pop
pusha
jle
or
add
add
cmp
lcall
push
mov
adc
sub
out
sub
pushl
push
xchg
push
or
cltd
push
sbb
cmp
sub
add
rolb
dec
loopne
into
jl
scas
js
shl
pusha
stos
jecxz
addl
incl
xor
loopne
adc
mov
shr
arpl
jg
call
add
shll
inc
rcrb
pusha
inc
ds
push
pop
or
sub
movsb
push
cli
cmpsb
rorl
push
ds
not
jmp
ja
in
inc
mov
mov
adc
jg
std
mov
lods
add
cmp
add
pop
in
xchg
mov
cmp
xor
call
cmp
mov
call
sub
push
fisubrs
cwtl
lcall
ret
aaa
add
mov
sub
lock
adc
and
mov
outsb
mov
loopne
pop
dec
call
aad
jo
and
and
test
les
inc
lods
xchg
mov
dec
test
in
int
je
push
mov
adc
mov
scas
ret
mov
lea
stos
add
fmull
and
xor
lret
fs
add
cwtl
adc
mov
mov
xor
push
pop
pop
push
adc
into
mov
push
cs
add
call
test
mov
loopne
jmp
and
imul
mov
out
add
mov
mov
sub
cltd
nop
leave
movb
xchg
inc
movsl
mov
inc
push
push
sbb
fbld
add
jl
push
jl
movl
insl
in
xor
ljmp
jmp
cmp
jb
mov
xor
and
lret
jne
push
xor
add
or
push
jb
sbb
mov
add
rolb
adcb
sbb
cs
add
or
inc
push
sbb
loopne
pop
jmp
out
clc
push
and
fs
inc
jo
xor
mov
cmpsl
lock
test
lret
dec
sub
pushf
xchg
adc
sub
jg
jp
lock
pop
jo
mov
add
adcb
incb
xor
mov
adc
ret
push
or
dec
mov
inc
mov
ret
add
push
in
xchg
jo
lea
mov
es
adc
arpl
jae
lods
jo
sbbb
jl
mov
decb
ret
push
loop
xor
movb
incb
lock
je
push
aad
pop
fcoms
call
dec
hlt
mov
sti
or
test
xchg
stos
add
add
lret
scas
call
and
in
faddl
outsl
call
sbb
insb
sbb
mov
add
je
inc
popf
push
ret
sbb
in
fbld
jmp
sahf
push
or
jo
imul
and
dec
imul
fisubs
popa
and
cld
push
mov
pop
pop
stos
ficoml
out
adc
xor
nopl
adc
push
clc
adc
call
call
xor
test
je
ja
stos
call
test
mov
mov
push
jl
sub
mov
out
push
mov
push
xor
clc
push
add
mov
sbbb
add
pop
sahf
out
cmp
mov
adc
xor
adcl
pop
mull
cld
fldt
push
decb
and
pusha
cld
pop
cwtl
or
lock
imul
nop
lcall
inc
incl
lock
jne
inc
add
mov
je
add
pop
jno
lea
inc
ret
es
cmpsl
jg
mov
mov
inc
jae
ljmp
mov
incb
mov
adc
mov
pop
mov
push
pop
push
add
pop
addl
jo
xor
push
ss
sub
jo
les
or
adc
in
mov
xchg
test
sub
inc
mov
xor
add
call
add
mov
inc
inc
les
or
jg
mov
inc
movsb
push
jae
dec
dec
scas
call
xor
add
addl
cmp
fs
mov
and
nop
loope
loope
jne
or
sbb
call
loop
adc
insl
add
loopne
inc
push
cli
lock
mov
adc
popf
fbstp
loop
mov
fwait
mov
lock
decl
push
inc
mov
sbb
shlb
jno
pop
sub
add
lock
xor
scas
fcomps
push
lock
adc
add
fidivl
sub
add
scas
push
sbb
adc
inc
ljmp
mov
je
push
xor
js
or
add
dec
ret
mov
cmp
lcall
or
mov
add
mov
sbb
jg
adcb
jmp
push
and
jecxz
dec
sbb
scas
stos
sar
push
mov
inc
pop
ret
pop
dec
xor
cmp
push
notb
sar
sub
enter
or
mov
cmp
fistpl
sbb
xor
xchg
rorb
data16
pusha
and
add
insl
fwait
imul
push
jecxz
es
add
outsb
jl
and
pop
pusha
scas
std
dec
mov
sub
imul
mov
or
mov
mov
inc
xor
push
pop
bound
fcomip
dec
fwait
mov
jecxz
or
pusha
fs
xchg
sbb
idivb
or
xor
cli
fisttps
nop
mov
call
mov
cmp
mov
sar
adc
loopne
sub
fs
fcomip
fucomip
stos
jg
je
jmp
lret
lock
push
lock
add
rol
loopne
lock
fldt
mov
orb
repnz
lock
jmp
outsb
cmp
or
inc
jns
xchg
bound
roll
sub
cwtl
test
lock
xchg
sbb
test
out
insb
lock
or
and
or
mov
mov
lock
adc
nop
mov
or
ja
mov
pusha
enter
aas
push
test
or
out
ret
jecxz
mov
aas
push
cmp
adc
bound
xchg
and
outsl
push
outsl
fadd
mov
pushf
jne,pn
xor
enter
mov
fdivl
add
cwtl
xor
sbb
inc
clc
sbb
xor
mov
xor
mov
cld
clc
add
mov
jge
xchg
xorl
adc
sbb
aam
call
std
cmc
je
addl
jbe
xor
sub
dec
inc
loopne
pop
dec
jl
adc
cmp
jae
and
bnd
mov
and
cmp
jne
mov
ljmp
lea
mov
js
pop
call
dec
add
xor
push
xor
pop
mov
inc
push
push
clc
mov
xchg
push
xor
js
test
jb
fwait
or
xchg
cwtl
out
mov
mov
mov
pusha
or
push
andb
mov
cmp
push
push
add
mov
mov
ss
xor
inc
sub
mov
jns
sbb
xor
pop
sub
pusha
adc
ficoml
cmp
dec
cmpsl
testb
cmp
push
lea
add
js
lods
or
and
push
sub
sbb
mov
sub
cmpsb
jbe
mov
je
std
addb
stos
dec
pop
std
and
outsb
aaa
sbb
ljmp
push
add
and
mov
je
mov
outsl
push
aad
push
je
inc
jo
std
test
and
movd
jg
mov
pop
sbb
inc
add
orb
jge
mov
test
xchg
xor
test
ror
xchg
ss
sti
jmp
add
dec
jecxz
cs
testb
loopne
andl
sub
cmovae
cmp
jns
ret
jmp
repz
jp
call
cltd
mov
pop
ljmp
jg
add
cltd
pop
or
jecxz,pt
mov
or
add
add
ds
pop
imulb
jmp
fmull
xor
nop
loop
and
pop
cmp
inc
mov
cld
sbbb
shrb
sbb
lds
cli
cmp
dec
fcoms
add
test
mov
hlt
jg
push
adcl
out
push
add
cmc
divl
clc
mov
bswap
adc
shufps
ret
sub
add
ret
push
pop
pop
xor
mov
popa
pop
aam
push
pushf
sbb
add
in
jmp
call
rorb
and
pop
mov
jg
sub
shlb
lea
ret
inc
call
cmp
rclb
sub
inc
loope
fwait
cmp
sub
aaa
add
cmp
out
rorb
add
das
pop
mul
sbb
dec
outsb
mov
ret
rcll
adc
and
push
sub
push
inc
fisttpl
xor
lret
sub
xor
adc
clc
rcrb
jne
pop
cld
push
lcall
pop
negl
cmpsb
xchg
sbb
js
or
push
inc
inc
pop
dec
int3
andl
or
negb
or
push
test
add
xchg
fmuls
push
pushf
mov
addl
and
aaa
pop
push
add
lret
push
fcoml
stc
sub
or
cmc
fcmovnb
or
dec
adc
test
shrb
adc
jg
pushf
jne
pop
push
sarb
fwait
in
cmp
or
popa
inc
jl
dec
clc
add
or
jne
mov
mov
and
push
bound
mov
and
adc
test
stos
mov
adc
cmpsb
and
mov
push
dec
pop
ret
and
add
jb
test
decb
mov
push
and
mov
add
mov
ja
adc
cwtl
pusha
dec
test
popl
or
add
call
push
mov
push
ss
adc
sub
stos
push
inc
loopne
and
or
ljmp
push
inc
int
cli
dec
cs
inc
in
jmp
cli
pusha
jge
inc
stc
test
pusha
je
inc
loopne
loop
cld
mov
aam
mov
sub
push
or
and
sub
jge
adc
jb
test
xchg
dec
ljmp
loopne
and
and
in
mov
pop
int
loopne
sub
dec
mov
or
add
and
mov
pop
loope
add
add
cli
add
sub
and
or
insb
cmp
add
mov
or
pusha
adc
xor
xor
sub
mov
push
imul
pusha
sbb
nop
movsl
andb
push
push
and
add
and
adc
pusha
push
in
loope
adc
es
push
pusha
in
jg
add
inc
cmp
add
dec
mov
mov
xchg
dec
loop
push
push
jp
adc
test
cs
and
fisttpl
cmp
pop
or
les
bound
xor
pop
pop
iret
cmpsb
push
sbb
hlt
add
or
jne
adc
negb
xchg
sahf
popa
xorb
xor
lods
sahf
pusha
pop
loopne
sbb
adc
push
in
nop
jle
icebp
ss
or
jmp
xchg
aaa
jge
jmp
clc
mov
mov
in
push
ss
sub
loope
aad
push
repz
push
jne
lods
aaa
add
ss
ret
inc
dec
sbb
cs
xchg
adc
inc
cmp
sbb
cli
push
dec
repz
bound
add
imul
cmp
mov
push
dec
mov
push
and
adc
add
sbb
adc
xor
loopne
addr16
inc
and
ljmp
or
pusha
sub
popf
loop
je
jmp
in
inc
je
bound
inc
sub
add
cmp
mov
nop
ds
rclb
ljmp
add
test
pusha
cmp
loopne
add
dec
loope
aaa
nop
orb
push
push
orb
fisttpl
and
ret
cmpsl
push
dec
sub
push
push
clc
push
mov
xchg
les
sub
pusha
inc
jae
pop
dec
mov
loopne
adc
cmp
lret
sub
das
loopne
mov
xchg
sbb
aad
sub
lock
mov
xor
add
mov
xor
mov
aaa
add
insb
or
push
aas
push
ret
sub
lcall
or
mov
xchg
in
jle
mov
pop
add
push
call
add
and
in
jle
pop
inc
ss
jmp
inc
cmp
jnp
sbb
nop
les
push
pop
inc
stos
loopne
xor
push
arpl
inc
add
loopne
inc
ret
clc
outsb
jb
insb
sub
push
inc
loopne
in
ljmp
sub
pop
out
xor
mov
adc
mov
cmp
sbbb
jns
adcb
push
push
xor
xor
jo
outsb
clc
push
cmpsl
mov
or
enter
xor
icebp
fbstp
jno,pt
jp
push
inc
push
lret
mov
cli
pop
pop
mov
jle
mov
call
les
jl
mov
shll
sbb
mov
lods
xchg
xor
dec
clc
cmpb
xlat
adc
cmp
loop
inc
sbb
jo
xor
or
lock
frstor
fists
add
shr
imul
add
inc
push
lock
push
inc
rolb
push
sub
cmpsl
and
push
xor
int3
xchg
stos
outsl
mov
lea
fs
cmp
xor
add
fsubrl
nop
les
mov
xchg
pusha
dec
sub
xor
ljmp
fwait
adc
imull
mov
xor
lock
clc
add
dec
jmp
lock
rorb
lods
sbb
add
jmp
xchg
movsb
clc
mov
push
in
or
adc
add
dec
adc
add
sub
push
jo
jl
jo
call
rclb
aam
sarl
in
sbb
xor
push
and
cli
push
insb
push
call
mov
push
mov
clc
leave
test
or
inc
call
js
hlt
xchg
adc
add
mov
frstor
and
push
je
xchg
or
ljmp
insl
xor
push
data16
xchg
xor
imul
add
mov
push
fcmovbe
pop
push
test
punpckhdq
test
mov
or
adc
jno
or
mov
adc
pop
sub
in
sahf
push
inc
pop
jle
dec
call
jcxz
jo
push
mov
pop
sub
sar
mov
xor
push
cld
movb
lea
mov
adc
inc
scas
test
xlat
mov
js
ljmp
ds
xor
add
mov
jb
push
aaa
add
push
test
mov
mov
bound
or
test
and
add
fs
mov
adc
inc
adc
mov
subl
push
push
inc
push
pop
test
sahf
call
mov
sahf
call
add
add
movl
sub
ret
test
inc
adc
test
sbb
inc
sti
in
rolb
sahf
imul
fmul
jbe
mov
shl
js
lea
icebp
mov
add
les
or
push
dec
cmp
add
pop
jmp
mov
cli
push
dec
dec
xor
les
fildll
xor
test
inc
cltd
inc
in
mov
sbb
jne
data16
decl
mov
stos
inc
jbe
jo
add
mov
mov
and
call
mov
dec
dec
xor
adc
push
mov
push
mov
int3
and
add
xchg
inc
adc
add
mov
jb
inc
fcoml
call
jo
sbb
lods
inc
test
jnp
mov
or
cmc
jo
xor
cmp
rorb
dec
lock
mov
test
mov
inc
jne
cmp
ja
ds
lea
push
push
dec
xor
pop
mov
dec
sub
push
or
and
sbb
popf
inc
or
adc
popf
lock
jl
test
mov
and
jne
inc
jge
rcrb
sbb
push
inc
jmp
jle
and
jbe
lock
fidivs
push
data16
and
fstpl
mov
or
cld
lea
sub
and
adc
dec
jge
cmpsb
xchg
and
push
mov
sub
sbb
dec
fs
push
fprem
or
adc
push
or
pushl
inc
pop
jb
test
call
add
dec
adc
call
pop
xchg
aam
add
push
and
je
xor
fs
pop
rcr
add
adc
cmp
jge
sub
jne
xor
incb
loope
outsl
or
notl
call
jb
outsl
sub
add
mov
and
pop
or
xorl
mov
sbb
mov
push
scas
xor
inc
push
or
mov
je
pop
mov
xor
aaa
push
add
je
push
mov
xor
sti
mov
jl
add
loop
ret
fbld
jne
inc
mov
pusha
mov
and
push
mov
add
adc
adc
insb
pop
cmpsl
cmp
mov
ss
mov
jae
and
movsb
jb
jle
mov
jle
dec
push
fdivr
pop
mov
jne
mov
xor
and
in
incl
in
xor
xor
inc
jae
vmwrite
frstor
mov
mov
mov
add
movl
stos
inc
divl
dec
adc
mov
inc
xor
sub
incb
popl
mov
cmp
jl
pop
fisubl
jp
inc
jo
mov
mov
adc
mov
js
aaa
inc
call
loop
push
pop
jne
lea
add
push
mov
jne
mov
dec
inc
jl
jp
pop
insl
mov
mov
add
mov
inc
iret
pop
out
jb
hlt
in
fs
inc
adc
cmp
jmp
inc
shrb
add
test
or
decb
add
jmp
adcl
je
cld
add
inc
add
sti
shll
sti
jo
jae
pop
and
fisubrs
cmp
jmp
cmp
icebp
cmp
pop
out
rol
push
daa
lds
icebp
push
xor
sub
das
add
mov
add
sbbb
inc
das
sub
mov
test
clc
mov
mov
or
jg
pusha
inc
sub
in
or
int3
or
inc
or
inc
add
jmp
callw
mov
imul
adcl
call
jo
and
je
add
sbb
sbb
pop
outsl
fs
cmp
and
add
repnz
dec
call
flds
lock
testb
xor
inc
sbb
or
pushl
cmp
mov
pop
lock
sub
sar
lcall
icebp
xor
sbb
mov
iret
dec
mov
sbb
cmp
pop
outsl
xor
or
ss
aas
and
notb
add
lock
adc
and
or
inc
rcrb
sbb
jo
jne
adc
cmp
add
add
sbb
push
mov
jb
jmp
mov
and
push
or
mov
pop
push
mov
push
jg
clc
test
mov
inc
stos
je
call
rcl
lock
adc
call
xor
push
movsl
test
mov
jmp
push
jbe
test
mov
add
jp
sbb
icebp
pop
sti
pushl
mov
cmp
jmp
cmp
out
mov
leave
mov
insl
and
js
add
pushf
loope
add
data16
stc
loopne
lock
push
inc
push
lret
mov
call
push
mov
xlat
xchg
mov
sti
pusha
fldt
ljmp
pop
enter
push
push
mov
xor
mov
stos
pop
add
adc
jg
xchg
mov
push
es
fwait
call
es
lret
aam
adc
and
sti
sar
dec
sub
lea
mov
fmull
call
xor
in
push
pushf
sti
dec
jne
sub
stos
ds
mov
addr16
mov
sbb
jbe
cmp
jb
mov
mov
mov
sbb
cmpb
faddl
aam
fs
rorb
cli
shlb
call
push
dec
movl
clc
push
push
andl
and
push
insb
jg
ljmp
pop
mov
push
clc
mov
xchg
shl
and
and
add
mov
jle
push
mov
cmp
js
test
iret
fimuls
into
xor
cmp
les
jg
popa
nop
cmp
adc
in
and
mov
ds
add
jl
movl
inc
bnd
push
insb
mov
mov
into
mov
push
and
insb
scas
mov
mov
and
pop
xor
shrb
push
jecxz
cs
mov
xor
call
pop
jl
jl
icebp
dec
cmp
mov
icebp
inc
mov
push
shlb
mov
dec
negl
call
adc
xchg
lea
mov
jle
or
fmuls
loop
cs
dec
call
mov
sub
and
divps
mov
xor
mov
hlt
mov
jo
mov
cmp
cmp
nop
or
or
push
cmpsl
cmc
mov
scas
dec
popf
test
inc
popa
pop
inc
push
add
inc
mov
inc
int
push
fadd
push
outsb
sbb
cwtl
pop
push
push
mov
mov
add
pop
jecxz
pop
and
adc
or
cmp
js
fcomps
data16
push
cmpb
pushfw
test
jge
jb
ja
pop
mov
lods
push
stc
add
sub
aam
loopne
int3
punpckhdq
aad
push
xchg
aaa
hlt
push
mov
js
mov
imul
roll
cld
push
cmpb
push
pop
push
inc
sub
dec
test
ret
push
cmp
divb
loopne
sub
push
nop
pop
out
add
adc
fst
frstor
call
out
outsl
je
movb
xor
call
sti
adc
ss
call
or
add
and
jp
fstpl
or
scas
mov
loopne
lods
dec
ds
ljmp
mov
pop
cmpsb
or
enter
cmp
jmp
cmc
or
nop
fsts
idivb
add
jmp
jb
shr
push
ret
popa
add
sbb
div
pop
out
bound
xlat
aas
out
adc
adc
or
rorb
lcall
cmc
mov
mov
push
lea
mov
scas
gs
lahf
mov
cmp
jle
adc
scas
test
test
mov
or
push
xchg
ss
scas
jl
dec
lock
incb
add
cmp
das
add
pop
cmc
divb
mov
and
jmp
hlt
flds
shlb
xor
jle
or
enter
mov
dec
aaa
jmp
or
push
push
mov
dec
negb
push
jnp
xchg
packssdw
cld
xor
mov
jg
cmp
sti
inc
roll
mov
or
inc
mov
xchg
hlt
cmp
push
inc
mov
sbb
cmp
lock
stos
add
push
comiss
mov
popa
mov
add
divl
push
pop
push
mov
into
sbb
shlb
jecxz
clc
cmp
inc
hlt
xchg
pusha
sub
lds
push
adcl
add
sbbl
inc
sbb
fs
inc
pop
imul
cs
add
mov
push
movsb
cmp
xor
add
ljmp
out
pop
cwtl
out
cmp
dec
jbe
ret
mov
inc
xor
push
sub
fcom
mov
pop
popf
rep
mov
pop
mov
mov
adc
lahf
xor
mov
call
cmpsl
sar
or
fisttpl
call
sbb
and
scas
inc
mov
inc
push
sahf
into
outsl
mov
lock
add
jle
in
sar
dec
mov
repz
inc
adc
fimuls
cmp
push
mov
aaa
test
enter
into
adc
mov
pop
mov
xchg
and
fiadds
nop
mov
adc
dec
loop
adc
jb
jmp
push
and
sti
cwtl
repz
sahf
inc
cmp
stos
jbe
sarb
jg
jp
testb
add
xorb
pusha
xchg
test
es
aad
lcall
mov
ja
cs
cmpsb
mov
mov
mov
jbe
cmpsb
xchg
cli
mov
pop
addl
inc
xchg
push
push
mov
in
in
into
addr16
or
inc
adc
cmpsl
roll
sarl
clc
scas
and
out
sti
cmp
ds
call
mov
sbb
fcomi
push
push
add
cmpsl
push
mov
insb
xchg
jne
pop
add
or
or
xchg
roll
dec
lahf
fsubrl
out
add
mov
inc
out
and
jne
les
sub
and
div
sbb
call
xchg
ficompl
or
arpl
decl
sahf
push
scas
sub
nop
cmp
sbbl
orl
and
insl
push
pop
and
xor
fimull
push
cmp
in
cmpsb
and
jp
cmp
push
mov
or
dec
push
nop
push
jb
mov
je
hlt
cmp
pop
sub
pop
cmp
push
movq
mov
in
cmp
mov
cmp
push
ds
cmpsb
in
sti
sbb
fldcw
jne
pop
sub
repnz
or
decl
decb
mov
mov
lds
loope
mov
mov
add
push
sbb
inc
movsl
sbb
pop
movsb
ret
or
pop
mov
sub
sbb
sbb
pushf
cmp
inc
arpl
jne
xor
setb
xchg
pop
push
adc
xor
push
push
mov
mov
pop
out
xchg
shlb
dec
call
xor
push
cld
jmp
out
out
sub
cmp
push
cmpsl
rorb
aad
inc
xchg
js
or
push
in
call
dec
push
enter
inc
cmp
das
xchg
cmc
push
push
ret
jbe
jne
inc
into
je
jg
cmp
clc
xchg
or
or
mov
les
cld
andl
xor
mov
mov
rcrb
call
push
and
push
mov
popf
sar
or
mov
jne
leave
lea
imul
add
rorb
or
push
pop
fsubr
push
es
fildl
repnz
lret
scas
lret
orb
cmp
lock
rcrb
pop
je
adc
add
adc
and
sbb
stos
jl
mov
fiaddl
and
pop
jp
lods
inc
xchg
inc
inc
add
add
mov
sbb
add
adc
ret
jmp
mov
cld
fists
mov
inc
inc
cmp
jb
jmp
cmp
in
sub
cld
movsb
fwait
int
push
jne
mov
add
ss
int
sub
cmp
in
inc
mov
inc
or
cld
dec
or
xchg
cs
pop
xor
xchg
scas
or
push
add
dec
gs
es
push
call
in
cmc
cmp
mov
dec
or
fdivl
mov
fcmovnu
dec
out
xor
into
mov
pop
and
dec
lds
mov
cmp
add
ja
fiadds
cmp
sbbb
adc
cmp
clc
cmp
sbb
adc
negb
cmp
jl
mov
lock
dec
call
fildl
add
test
cmp
addl
imul
mov
into
xchg
inc
xchg
in
call
mov
insb
sbb
pop
push
in
ss
flds
jne
cs
orl
inc
sbb
adc
push
sub
jge
incb
outsb
cld
lea
je
adc
mov
jg
cmpb
xchg
inc
dec
add
mov
inc
mov
sbb
enter
mov
sbb
lea
cmc
lret
ja
aaa
mov
add
pop
rol
ret
jge
sahf
or
clc
add
push
aam
fmul
xchg
loop
fcomps
jmp
push
push
subl
or
jg
pop
sbb
mov
mov
out
lea
or
decb
hlt
and
jl
in
popa
mov
lock
adc
out
outsb
adc
movl
or
and
pop
shr
or
dec
pushf
dec
jecxz
or
cli
mov
jecxz
cmp
add
cld
cli
jo
inc
std
dec
andb
pushfw
cs
sub
jb
push
xor
push
es
adc
scas
movsb
jo
aaa
xor
lea
mov
or
mov
cmpsb
mov
data16
leave
int3
hlt
dec
push
and
push
bound
dec
pop
push
push
adc
fwait
rcl
adcb
add
rorb
insl
dec
mov
pop
test
add
movb
jne
jbe
fdivs
sub
call
xor
add
test
adcl
mov
xor
add
scas
push
push
or
out
push
shll
cld
sub
cmp
mov
pusha
xchg
push
pop
inc
aaa
decl
mov
lock
add
out
push
inc
ja
imul
jbe
mov
or
push
pop
addb
cmpsb
call
sarb
je
jg
add
mov
inc
ss
imul
or
je
std
jle
lds
or
mov
mov
push
fistpll
inc
adc
or
xchg
adc
sbb
or
test
lock
push
push
call
add
push
ss
or
inc
push
jmp
idivb
inc
dec
pusha
out
add
xchg
push
into
aam
aam
and
sbb
out
cld
repz
mov
lcall
rolb
es
out
sahf
pop
pop
int3
mov
and
pop
fsubrl
in
rcll
mov
and
jle
cmp
push
dec
pop
or
loopne
mov
push
cld
fimuls
js
mov
lsl
mov
push
dec
mov
mov
test
or
rcr
js
test
mov
push
cmp
pcmpeqw
xorb
xchg
mov
gs
outsb
and
xchg
les
dec
jbe
xor
out
push
hlt
outsb
push
stos
dec
dec
add
or
add
pushf
adc
inc
push
fwait
jl
add
sar
inc
flds
mov
lcall
sub
mov
push
hlt
sub
rcrb
dec
mov
lcall
push
sarb
mov
push
fcomps
dec
pop
mov
sub
xchg
jo
inc
ljmp
rorb
aas
mov
xchg
rcr
es
repz
mov
pop
mov
sar
mov
aas
or
aaa
jne
ss
stos
mov
jb
xor
shrl
pushf
sbb
pop
scas
jge
or
mov
scas
in
mov
outsl
mov
mov
adc
push
jmp
test
insl
scas
xchg
je
and
cltd
xor
push
mov
mov
mov
inc
and
push
test
daa
jl
mov
xchg
add
xor
mov
push
out
outsb
nop
test
push
push
shl
cld
stos
mov
es
test
sarb
test
jecxz
loop
push
cmc
inc
push
or
test
sub
call
ret
fidivl
xchg
roll
jbe
mov
data16
push
pop
insb
and
lea
mov
mov
pusha
enter
mov
dec
push
shr
mov
mov
push
lods
xchg
push
mov
stos
stos
or
fmull
int3
xorb
fdiv
in
push
push
lock
cmpsb
fs
jl
ljmp
or
dec
movsb
adc
test
push
loopne
mov
and
push
mov
stc
jne
mov
pop
incb
ret
int3
jle
inc
cmp
adc
lret
das
push
cltd
in
mov
mov
mov
or
jne
xor
and
repnz
mov
and
push
mov
adc
fcmovb
jg
arpl
movsb
fcom
fsubrs
int3
outsb
js
jbe
xchg
test
inc
pop
jle
push
cltd
push
scas
cwtl
push
mov
xchg
je
mov
xor
or
inc
push
add
pop
rolb
fstpl
xchg
inc
shlb
xor
mov
fistps
je
mov
or
mov
fsub
iret
jae
mov
xchg
mov
or
mov
rorb
jmp
mov
or
or
movsb
mov
sub
dec
add
xchg
or
push
mov
bound
cs
push
int3
call
stos
xchg
xchg
scas
fistl
hlt
cmp
pminsw
mov
dec
lcall
xor
pop
push
in
push
in
mov
pop
pop
shl
jbe
repz
dec
dec
adc
out
cs
sbb
cs
data16
push
sbb
push
inc
inc
pop
jge
cmp
mov
add
push
cmp
mov
repnz
lods
push
cld
cmp
xchg
repnz
push
test
push
or
jle
es
mov
inc
add
inc
mov
mov
push
xchg
in
xchg
lret
inc
push
lcall
aam
mov
test
stos
dec
call
push
loope
fwait
push
rcrl
shl
jno
int
inc
es
jne
jle
inc
sbb
cli
mov
pop
movb
mov
dec
adcb
nop
add
inc
call
out
call
mov
adc
ss
xor
inc
les
and
push
mov
mov
inc
pop
fcmovnb
in
andb
lds
scas
adc
push
fdivl
sbb
dec
mov
ret
adc
scas
adc
je
insl
sub
mov
call
int3
idivb
xor
xor
add
insl
das
push
sub
and
adc
push
inc
movsl
jns
mov
push
in
cmp
mov
mov
cs
xor
pop
mov
dec
cmc
add
or
daa
push
and
cltd
ljmp
mov
push
hlt
adc
cmpsl
mov
push
fsubr
push
popf
loopne
ds
adc
mov
fstpt
fs
mov
sub
push
mov
push
mov
adc
andl
pop
popa
gs
ret
enter
outsb
mov
cmp
clc
mov
jmp
xlat
push
xor
push
enter
les
stos
pop
jne
sub
add
mov
ljmp
sbb
ds
push
shll
mov
push
add
scas
mov
cli
inc
mov
mov
movl
sbb
testb
mov
push
std
je
sbb
push
cld
dec
data16
subb
clc
and
pop
js
pushf
cmp
and
test
pop
mov
orl
mov
push
push
jmp
sub
int3
popf
mov
and
or
and
sbb
pop
lods
decb
xor
cmp
or
sub
inc
fstpt
add
or
iret
fidivrs
fstpt
loopne
inc
jle
mov
add
mov
sti
add
bnd
mov
mov
inc
mov
lcall
sti
adcb
mov
ja
xchg
or
lret
sti
jne
push
mov
jae,pn
mov
mov
mov
test
cmpsb
or
jbe
scas
mov
push
lock
push
add
test
cmp
es
inc
sti
daa
pop
mov
data16
repz
aam
rcr
inc
dec
cld
shrb
adc
enter
add
sbb
pop
or
jp
mov
in
aaa
push
enter
xchg
pusha
pop
push
xchg
fidivrs
inc
jbe
mov
mov
push
stos
enter
add
lock
je
inc
push
adcl
repnz
data16
cld
movsb
aam
neg
adc
mov
movsl
xchg
rorb
or
push
ss
jne
pop
arpl
subl
pushfw
imul
jl
cmpsb
hlt
pop
push
xor
or
pop
adc
fdivs
mov
inc
jnp
test
clc
push
movb
xor
out
jg
add
lea
push
aad
mov
jne
fiaddl
mov
inc
ret
outsb
mov
inc
push
cmc
add
add
rorb
xchg
push
shlb
cmpsb
lds
and
push
out
add
cmp
jbe
jmp
adc
xchg
mov
fistps
add
cmp
fcomip
std
sub
cld
icebp
mov
jne
mov
cltd
cmp
jne
add
ret
cmp
xor
into
jmp
xchg
dec
inc
ss
lock
mov
xchg
mov
roll
cmp
jae
orl
ja
aam
jbe
mov
add
stc
mov
add
shr
dec
fmull
or
das
inc
xchg
shr
jbe
loop
jg
ljmp
inc
pop
les
loopne
adc
lea
mov
in
ss
add
lea
add
mov
or
mov
jle
insb
fcompl
ret
mov
pushfw
mov
data16
jbe
add
lock
ret
jp
hlt
push
mov
push
imull
dec
cli
lea
xchg
test
fwait
mov
xchg
out
xchg
lods
mov
into
mov
je
dec
push
push
out
lods
adc
sbb
cmpb
pop
xchg
cli
push
sub
and
sub
outsb
dec
int3
nop
mov
push
test
jbe
pop
jl
jnp
fisubrl
stos
aam
sub
mov
cld
dec
mov
or
push
movb
movsb
push
mov
sub
pop
rcrb
pop
int3
jmp
scas
add
jmp
sbb
push
pusha
pop
jmp
mov
addl
or
pusha
or
or
pop
push
shrb
pop
imul
cmp
dec
push
insl
mov
or
bound
jle
and
add
xor
adc
shr
add
into
mov
mov
adc
or
add
add
xchg
sub
lahf
popa
cltd
imul
mov
enter
xchg
in
adc
rcl
xchg
adcl
cmp
xchg
add
scas
push
push
loop
sbb
jecxz
test
sub
cmp
push
inc
add
push
push
call
xor
add
std
insb
or
mov
sub
mov
xchg
mov
xor
or
push
shrb
or
add
fisttps
call
fisttps
jbe
inc
faddp
inc
and
jg
or
stos
test
push
xchg
cltd
mov
inc
push
jl
adc
movl
push
dec
loopne
pop
mov
pushf
sbb
and
sbb
xchg
sahf
xor
sbb
aad
int
filds
ljmp
mov
call
hlt
in
out
call
sbb
scas
call
pusha
imul
incb
inc
or
add
lret
jp
inc
xor
ficoms
scas
or
cmp
or
adcb
xchg
out
mov
sbb
or
mov
clc
ds
push
pop
dec
add
mov
sarl
jb
lahf
ret
cmp
sbb
jl
push
sbb
test
call
test
push
sbb
and
sub
into
ljmp
or
mov
and
loop
hlt
lret
negl
or
add
mov
aam
cmc
sbb
mov
fildl
cmpsb
add
xchg
mov
or
sbb
loopne
movsl
in
mov
lods
loope
or
insb
lret
incl
or
ja
mov
or
xlat
loopne
out
mov
scas
lea
scas
mov
ss
mov
clc
push
xor
mov
mov
data16
mov
loopne
push
pop
sub
pop
mov
fistpl
call
push
dec
pop
daa
pop
sub
loopne,pt
mov
add
dec
outsb
mov
pop
je
cmp
jge
mov
jle
inc
push
in
push
lods
add
adc
out
adc
lcall
sarb
inc
test
push
or
imull
rolb
pusha
jmp
call
add
cwtl
rcl
lods
sub
push
push
dec
lock
and
sbb
ficomps
push
pop
fildll
inc
testl
scas
push
add
mov
sbb
or
or
das
pop
inc
ja
and
test
fimull
das
inc
mov
pop
enter
fs
mov
hlt
repnz
jge
mov
xor
inc
mov
xor
arpl
cmc
wrmsr
iret
fisubrs
and
test
and
push
or
sahf
aam
test
aaa
mov
mov
and
or
test
inc
mov
inc
fistps
push
and
push
pop
scas
mov
aaa
sti
or
or
push
pushf
call
adc
adc
mov
cs
sbb
sub
jp
sahf
push
cmpsb
push
push
adc
and
inc
inc
xor
push
or
push
jo
mov
xlat
push
lea
test
cmp
stos
add
addl
das
ss
out
pop
pop
cmp
add
pop
jo
ss
clc
mov
jg
mov
nop
add
push
mov
test
push
push
mov
mov
cli
out
insb
lods
add
inc
add
out
adc
cmp
lea
aam
inc
jno
sbb
subl
es
lea
lret
mov
push
cltd
hlt
mov
jle
jbe
lock
test
ret
call
fs
jno
ret
clc
lcall
fwait
push
dec
jge
fcompl
xchg
clc
mov
adc
push
iret
pop
cli
in
ja
adc
cltd
add
loop
or
add
fldt
dec
xchg
adc
pop
or
jb
inc
mov
push
fisubrl
push
sub
xchg
xor
mov
mov
sbb
jnp
push
jo
add
fldl
scas
shl
push
sbb
inc
insb
insl
js
fadds
jle
add
mov
add
addb
sub
aam
jo
or
fistl
nop
pop
push
sub
xchg
add
mov
lea
incb
cmpsb
jge
xchg
js
or
and
jne
push
fbld
pusha
addl
sti
pop
rol
adc
inc
push
loop
sub
sub
adc
les
cld
sub
cli
push
ret
sbb
les
hlt
sbb
adc
orb
xchg
sub
les
or
loopne
call
xchg
push
xchg
push
push
outsl
lods
repnz
faddl
lock
mov
push
jne
ss
pop
ds
add
mov
ss
insb
push
jne
data16
mov
dec
push
je
add
daa
mov
sarl
add
add
fwait
insb
xor
adc
leave
cmp
jg
sahf
xchg
shll
inc
insb
aaa
or
lock
adc
ds
and
push
test
lods
mov
or
aaa
jbe
add
loop
cmp
out
enter
test
pop
nop
dec
adc
pusha
add
hlt
and
or
mov
aam
outsb
push
jg
and
cmp
aaa
je
pop
icebp
or
dec
sbbl
add
lock
ret
push
xor
lds
xor
or
or
xchg
lea
mov
aaa
cli
aam
inc
lock
repz
or
ret
pop
out
add
loopne
sarb
jge
push
mov
push
pop
lret
fisttpl
push
mov
push
adc
xchg
push
jge
es
add
and
orb
adc
xchg
inc
hlt
shrl
push
or
enter
fsubr
cld
popf
and
cs
scas
adc
mov
mov
int3
jb
sub
xchg
rcrb
pop
push
scas
sbb
xor
roll
sub
xor
jge
xchg
add
adc
mov
and
cmp
ror
aam
add
loop
or
jne
sub
mov
inc
cmpl
inc
and
and
push
sahf
popa
jne
ret
mov
fistl
imul
dec
xchg
or
sbb
sub
or
or
push
inc
adc
call
faddl
sub
and
shll
mov
ret
test
andl
jmp
scas
inc
sub
mov
in
arpl
andb
jmp
pop
out
mov
test
mov
pop
shl
jb
pusha
inc
jb
call
mov
push
loop
pop
inc
shlb
enter
or
subl
and
cmp
push
inc
xor
out
and
xor
aaa
mov
and
shl
or
clc
and
jo
xchg
sbb
bound
and
hlt
mov
xor
mov
cmpsb
cmp
mov
mov
outsb
and
ljmp
pop
cli
cmp
lea
inc
dec
in
cld
fbld
add
into
loopne
out
or
repnz
dec
mov
or
mov
push
xchg
xchg
xchg
cmpsl
pop
and
sti
js
add
les
mov
out
ljmp
mov
movsl
loope
arpl
add
jmp
jecxz
clc
jg
adc
xor
in
and
jb
inc
mov
adc
fabs
dec
or
jle
fbstp
incl
stc
pusha
add
jne
pop
addb
je
pusha
aas
adc
or
inc
mov
jg
jge
pushf
loopne
adc
mov
mov
popa
aaa
adc
adc
cwtl
sub
mov
mov
jb
push
or
out
jmp
inc
jle
add
pop
movsb
decl
xchg
cmpb
cmc
loopne
jmp
je
add
dec
pusha
stos
jmp
prefetcht0
sub
push
scas
sub
loope
mov
push
push
dec
int3
imul
jmp
cmp
add
sub
add
push
xor
inc
jl
sarl
jg
mov
imul
add
sub
test
and
jge
sub
jmp
loopne
add
jl
loopne
notb
je
imul
dec
cwtl
dec
jg
pop
ret
push
pop
add
pop
sbb
insl
loopne
andl
jmp
mov
scas
mov
push
enter
add
pop
inc
xor
push
addb
xlat
pop
pop
lret
adc
pushf
jne
push
cmpb
mov
mov
xor
add
imul
insb
into
mov
mov
cmp
push
gs
pop
test
out
fadds
loop
js
add
push
add
cltd
ljmp
dec
call
rcrl
lret
mov
shlb
pop
adc
push
pop
mov
mov
adc
inc
bound
sbb
rclb
push
mov
addb
out
xchg
push
sbb
sub
mov
int
call
mov
jbe
add
movsb
andb
cmp
mov
mov
adc
dec
mov
loope
dec
arpl
jecxz
or
and
sub
or
fildll
pusha
mov
add
push
popa
pop
push
test
add
sub
mov
decl
add
adc
mov
stc
sbb
scas
xchg
in
xor
add
arpl
jb
adc
loopne
sti
loopne
sub
add
icebp
ret
adc
clc
repz
or
sbb
add
enter
adc
sbb
scas
push
jecxz
in
adc
pushl
jne
pusha
cld
pop
add
sub
aaa
out
arpl
sub
mov
xor
xor
mov
sbbl
push
sbbl
jb
pop
mov
adc
inc
lcall
cmp
adc
xor
push
insl
jg
lods
fdivl
mov
mov
fbld
vmovaps
mov
lock
jl
adc
jo
je
ret
jp
push
daa
add
jmp
lcall
adc
sub
adc
cmp
cmp
mov
xchg
test
xor
cli
add
ja
lock
xchg
push
jge
sub
push
cmc
fwait
mov
repz
cmpsb
nop
lods
aaa
adc
xorl
xor
and
and
cs
xor
into
sbbb
stos
add
rorb
ljmp
mov
clc
xchg
add
push
pop
adc
shr
outsb
add
dec
addl
shl
adc
push
inc
adc
jg
add
ret
cmp
ss
inc
std
outsl
inc
test
adc
pop
cld
fwait
bound
and
add
sub
add
lock
test
movb
out
xchg
popa
mov
push
mov
aaa
adc
mov
cwtl
pop
dec
mov
lahf
mov
call
sub
cmp
hlt
fdivl
inc
jno
dec
sub
incl
or
clc
mov
jo
sbb
mov
add
adc
fdivr
pop
js
leave
cmp
sahf
mov
inc
adc
jo
push
test
push
xlat
fildl
and
and
or
sbb
adc
das
movsb
stos
add
xor
mov
ret
add
pop
jno
mov
mov
adc
mov
xor
testb
cmc
push
add
pop
add
dec
push
adc
cmp
lods
fwait
xor
call
rolb
mov
push
pop
mov
xchg
lods
pop
add
push
and
ljmp
sbb
xor
test
pop
inc
jo
xorb
inc
adc
mov
insb
out
cmp
outsl
scas
xor
dec
je
dec
jne
add
adc
add
add
xor
decl
lea
ss
mov
or
add
sub
mov
sbb
pusha
dec
idivl
sub
outsb
inc
fwait
xor
jp
out
call
rcrb
inc
adc
cmp
jo
out
clc
pop
add
leave
add
or
div
pop
mulb
or
jg
lock
sbb
mov
xchg
push
inc
lock
xor
inc
ret
icebp
mov
mov
outsl
aam
mov
or
add
add
imul
ss
movsl
add
mov
js
dec
and
or
bound
xor
adc
adc
call
inc
sbb
fnstenv
adc
and
icebp
inc
add
pushf
addl
pushl
sub
push
mov
inc
sbb
dec
adc
sub
mov
clc
xor
adc
inc
lock
and
daa
outsl
xchg
lock
cmpb
or
cs
cmp
pop
mov
mov
push
jo
xor
mov
leave
mov
negb
lock
sbb
lock
pop
mov
mov
mov
test
icebp
jg
push
lock
and
jo
decl
addb
jo
pop
shl
pop
push
dec
jg
lock
xor
mov
dec
dec
inc
mov
cmpl
mov
push
mov
or
add
int3
lret
loop
in
je
push
loopne
push
in
outsl
aaa
mov
xchg
enter
jo
lret
stos
adc
fs
ret
push
loopne
fistl
mov
pop
cmp
or
ljmp
imul
xor
xor
push
xor
mov
aad
cld
out
or
stos
or
jnp
ret
out
clc
decl
inc
test
jo,pt
push
and
pop
sahf
aaa
xor
scas
lea
addl
clc
ljmp
jnp
cwtl
xchg
dec
add
add
jbe
xor
mov
push
sub
lock
or
jbe
shlb
int3
inc
or
inc
push
pop
fisubl
ljmp
push
mov
lcall
fwait
add
stc
and
push
push
mov
or
cld
push
sbb
and
push
push
lret
push
xor
pop
fst
or
jmp
repnz
clc
mov
jbe
dec
ljmp
xchg
xchg
push
or
sbb
xor
push
aam
or
repz
cs
add
adc
lea
test
fisubl
jbe
hlt
cmp
jl
push
add
push
mov
dec
jne
or
adc
lock
jp
jge
sub
or
jb
add
dec
push
test
add
stos
mov
ja
sbb
mov
in
mov
add
dec
hlt
push
fildl
push
xchg
bound
out
mov
mov
or
xor
and
jmp
push
or
xchg
cli
outsl
jecxz
test
and
add
rol
into
xor
pop
dec
jg
xor
lods
lea
or
clc
lock
push
adc
imul
lret
icebp
jno
mov
in
dec
add
lea
bnd
push
xchg
cmp
lock
add
rcl
or
push
fs
adc
fcoml
mov
cmp
jbe
or
icebp
adc
jl
add
pop
pop
cli
mov
js
enter
cmpsb
test
jbe
add
aam
inc
inc
ret
mov
cmp
and
sarb
push
push
sbb
inc
sbb
les
xor
movsb
adc
xchg
adc
iret
xchg
or
fcomps
ja
mov
pop
push
call
cmp
pop
xchg
adc
xor
mov
add
or
into
cmp
mov
mov
pushf
cmpsb
add
and
push
add
pusha
sbb
test
jb
dec
mov
mov
dec
cli
and
test
sbb
add
adc
aam
adc
and
outsb
ret
mov
clc
push
aas
fs
fcomip
pushl
je
adc
add
call
dec
push
pop
jo
mov
and
sub
bound
insb
popa
lret
hlt
scas
pop
or
adc
mov
pop
mov
pop
adc
inc
rorl
jle
lea
mov
sbb
dec
adc
dec
neg
movl
mov
bound
repz
adc
mov
jmp
or
jne
xor
pop
aaa
push
jmp
lea
insl
mov
lret
insb
xchg
leave
mov
lods
test
rclb
xor
orb
xorl
add
mov
jl
xor
add
jle
enter
push
xor
rcrl
xor
ja
test
mov
cld
icebp
cmp
jl
inc
std
addl
mov
int3
mov
mov
insb
and
arpl
mov
bnd
pop
inc
inc
sti
call
sbb
lahf
rcr
cmpl
test
outsl
and
or
add
leave
push
notl
and
idiv
or
push
loopne
inc
mov
imul
add
cmp
or
sub
inc
jl
notl
dec
call
jle
xchg
xor
xor
sbb
push
jb
data16
pushf
xchg
push
in
xor
mov
and
adc
pusha
cld
and
cmp
add
notl
ror
and
add
test
outsl
xchg
jo
or
mov
push
push
push
lds
inc
int3
and
add
add
or
push
pop
out
out
and
mov
or
orb
mov
flds
mov
addb
adc
ficomps
xchg
rcl
or
sub
fstpl
jle
shrl
lds
bound
pop
adc
xchg
pop
fisubl
fisubl
fadd
push
and
ss
pop
jecxz
cmp
xor
mov
lds
movsb
testl
nop
and
orb
mov
adc
lods
pusha
push
test
sbb
mov
add
add
dec
fldenv
icebp
cmp
movsb
aaa
cmp
jl
pop
rorb
add
sbb
push
mov
xchg
xor
nop
loope
xor
call
movl
push
out
sbb
add
mov
mov
notb
sbb
sub
out
pop
push
aaa
rorb
add
push
xchg
push
jle
inc
adc
mov
add
add
jo
fimuls
je
lcall
jmp
inc
add
jne
ret
adc
dec
adc
mov
mov
or
push
mov
mull
std
rclb
add
cmp
mov
testb
ja
and
push
jb
xor
jnp
push
dec
cli
mov
push
push
adc
mov
lock
pusha
movsb
and
adc
adc
xor
cmp
das
inc
sub
rorb
jmp
rolb
call
xchg
or
fcoms
pop
inc
hlt
or
push
mov
movl
int3
sbb
push
sti
xchg
adc
push
lret
repnz
lods
or
lods
jmp
test
and
push
andb
in
rol
cmp
roll
dec
stos
arpl
hlt
or
mov
lret
dec
mov
je
dec
ret
dec
cmp
sbb
push
mov
orb
test
adc
loope
add
ret
dec
push
pop
mov
test
add
dec
repz
push
mov
jecxz
fsubrs
pop
pop
testl
cmp
mov
cld
fldenv
test
mov
or
mov
and
dec
sub
inc
mov
adc
mov
add
push
int
mov
sub
or
sub
gs
push
shll
cmp
in
or
loopne
sbb
icebp
decl
filds
pusha
and
pusha
js
in
jbe,pn
adc
cmpsb
testb
stc
push
loop
les
push
inc
add
push
mull
mov
sbb
pop
adc
inc
jmp
inc
or
and
pusha
orl
push
mov
or
push
gs
pusha
jp
daa
lea
or
popa
sbb
loope
adc
push
mov
push
sbb
add
sbb
dec
adc
jmp
push
std
dec
push
test
popa
add
xor
push
mov
mov
xchg
xor
add
incb
sbb
adc
and
ss
sti
inc
call
push
mov
dec
test
cwtl
mov
or
mov
out
push
rcr
stos
sbb
push
call
jne
sbb
cmp
and
loope
je
fidivs
push
add
popa
mov
cli
dec
adc
mov
rolb
push
sub
mov
push
stos
and
pusha
jg
outsl
bound
or
add
cmp
pusha
cmp
cs
sbb
push
pusha
mov
xlat
pop
xchg
ss
push
adc
cmp
jo
fst
rcrl
insb
dec
mov
push
ret
nop
or
sbb
cmp
mov
push
gs
std
cmp
hlt
rcll
mov
outsb
test
xor
adc
lods
jne
sti
mov
imul
jle
mov
add
shl
push
and
add
in
jp
mov
or
loope
push
and
pusha
mov
ficomps
pop
imul
mov
lahf
clc
lods
xchg
ret
mov
insb
sub
push
test
add
mov
push
into
or
sbb
pop
fsub
or
xor
dec
pop
pusha
add
rdmsr
fisubrs
or
mov
lods
loopne
jp
sbb
xchg
inc
adc
ds
xor
inc
adc
or
mov
jg
push
jbe
pop
shr
xor
xchg
fidivl
inc
cltd
movsb
sbb
call
jp
inc
test
std
add
fadds
in
mov
ret
lea
pop
push
ret
pop
pop
add
push
fcoms
into
call
inc
adc
in
adc
sarb
and
jl
cmp
pop
inc
xchg
sbb
loopne
adc
ret
bound
fucomi
push
mov
lcall
xchg
and
jo
and
add
andl
and
pusha
mov
mov
jae
add
and
into
sarl
push
jg
aam
jb
call
sub
rorb
cld
nop
cmp
mov
push
add
fadd
neg
lods
sbb
add
std
mov
fmul
push
add
orb
lock
mov
add
fmuls
lea
mov
xchg
and
xchg
or
jo
sub
stos
clc
mov
shrb
and
stos
loopne
add
jo
push
scas
es
jo
loop
into
in
lock
addb
xchg
shl
sbbl
insb
inc
idivl
nop
adc
pop
cwtl
cmpsl
loope
xchg
test
cmpl
push
xor
push
psubsb
mov
ret
or
incl
arpl
lea
lcall
and
or
dec
mov
outsb
or
mov
into
movsb
cmp
js
add
jbe
mov
jl
jb
call
add
inc
es
jle
sbb
dec
mov
and
sbb
inc
mov
add
mov
pop
insl
push
lods
jle
adc
add
ret
les
push
push
pop
mov
js
pop
pop
bound
mov
add
sub
mov
es
ljmp
pusha
xor
inc
push
jl
cld
cmp
sub
adc
repz
mov
xor
adc
ljmp
dec
call
mov
jmp
shlb
out
mov
lods
enter
xor
cwtl
and
jo
jne
icebp
and
in
in
aas
cmpb
xor
outsb
cmp
inc
and
add
mov
mov
push
add
mov
jmp
cmpsb
or
pop
mov
xchg
xor
hlt
enter
mov
jmp
pushl
add
xchg
sub
inc
fiaddl
adc
add
shrb
or
xor
xor
arpl
push
call
js
movsb
jo
cmpsb
or
add
add
mov
sahf
or
add
gs
dec
push
inc
add
inc
adc
push
jb
inc
in
mov
hlt
inc
or
xor
sub
and
add
pop
jo
fildll
push
pushl
xor
call
aaa
xor
add
xor
outsl
idivb
xor
sbb
mov
les
les
lods
inc
fcompl
sub
xchg
lock
push
outsb
push
ret
aaa
call
mov
subl
mov
push
pusha
loop
push
loopne
mov
jmp
lcall
jle
inc
les
or
mov
xchg
mov
addb
shrb
sbb
mov
jae
adc
pop
mov
push
fwait
mov
test
mov
out
xor
adc
mov
cmp
xor
jne
pop
mov
cmp
adc
hlt
incl
or
mov
jo
jne
je
adc
jne
decl
inc
mov
and
test
add
jne
jl
pusha
mov
jo
jge
push
jne
cmp
jne
push
daa
add
push
jmp
mov
jbe
cmpb
xorb
add
pop
fldt
jmp
xorl
out
lea
pop
je
test
jne
subb
scas
and
pushf
test
addb
pushf
test
pushf
adc
add
test
xor
stos
sbb
mov
sbb
cmp
push
cld
xor
lea
or
mov
mov
and
call
adc
dec
pusha
jmp
and
sbb
mov
mov
mov
rolb
cmp
dec
not
faddl
or
or
outsl
das
cli
dec
or
lock
adc
add
mov
push
fisubl
call
and
xchg
pop
and
mov
inc
cs
pushf
xor
push
out
aas
cmpsb
das
mov
mov
stos
pop
mov
call
lret
xlat
lock
mov
mov
lock
pop
push
icebp
les
add
test
mov
dec
inc
add
addr16
push
rorb
xor
jne
dec
fwait
mov
xor
push
push
ret
push
ret
cmp
push
lret
push
dec
incl
jo
and
es
dec
dec
es
or
lcall
inc
call
push
mov
adc
xchg
push
testb
sub
jne
pop
in
push
lock
add
cmp
mov
push
and
mov
shlb
pop
mov
rclb
adc
adc
sub
mov
dec
adc
into
clc
push
push
hlt
cld
sub
mov
add
jo
sbb
mov
cmp
clc
pop
push
sub
andb
inc
lea
inc
stos
shl
xor
xchg
mov
repnz
add
insl
jl,pn
stos
fs
adc
inc
cmp
mov
or
mov
mov
call
pop
mov
adc
xor
xchg
push
add
clc
mov
fsubs
imull
xchg
adc
bound
cltd
push
rcrl
xor
xor
inc
mov
adc
dec
jo
out
and
test
movb
mov
mov
sbb
mov
icebp
roll
dec
sbb
xor
fistps
pushl
fldt
inc
or
jne
mov
add
pusha
xchg
ljmp
push
rorb
dec
call
lods
lcall
pop
pop
call
sarl
xor
adc
mov
lock
aad
or
in
cwtl
mov
cld
fcmovnbe
lock
lea
adc
xor
add
jne
addl
dec
std
pop
ficompl
stc
or
mov
aad
mov
cmpb
adcb
inc
sarl
push
inc
jbe
jmp
cmp
xor
sti
outsl
jb
mov
jl
add
jle
andl
cmp
xor
sbb
push
fdivrs
sbbl
lods
sbb
adc
and
test
ret
inc
rcrb
inc
adc
add
ret
mov
loop
add
adc
lcall
jle
bnd
and
lock
jmp
xor
aas
outsb
push
mov
xor
addl
lods
mov
mov
and
adc
mov
sbb
std
add
jg
mov
cs
mov
setne
and
add
mov
sbb
inc
adc
jbe
jle
repnz
aam
inc
jg
aam
loope
or
cmp
mov
add
adc
cbtw
or
shlb
mov
push
mov
jne
jbe
call
push
inc
inc
adc
es
sbb
pusha
sbb
push
add
mov
pop
add
cmp
clc
sbb
push
stos
add
mov
loopne
in
and
add
adc
or
filds
cmp
mov
add
pusha
aad
lock
dec
and
cmpsb
ss
inc
fcmovnb
rcrb
cmp
add
push
push
inc
cmp
pop
push
xchg
loopne
jp
sbb
fcoml
xor
add
inc
dec
je
adcb
ljmp
loope
add
and
call
mov
sti
jle
jb
add
cld
fildll
jne
iret
add
ret
je
mov
adc
xor
add
mov
add
lods
pop
lods
aaa
adc
pop
add
icebp
mov
mov
jmp
add
repz
ljmp
add
mov
call
je,pn
call
leave
adc
jbe
mov
push
add
mov
pop
mov
jp
cmp
loope
test
mov
mov
fistpll
lods
dec
push
dec
test
mov
add
mov
inc
adc
sbb
lret
cs
add
test
push
push
xchg
adc
add
pop
orb
mov
mov
jmp
add
add
testl
xor
pop
add
jo
sub
jge
je
sahf
loop
pushf
pop
dec
cs
or
and
dec
sbb
cmp
push
or
clc
sbb
add
push
and
sbb
outsl
mov
in
ret
push
and
or
sub
daa
insl
mov
adc
xchg
sub
add
mov
mov
add
subb
inc
idivb
lods
call
add
into
xor
inc
insl
dec
insb
cmp
inc
repz
testb
sbb
roll
in
lods
mov
mov
adc
insl
roll
into
fimuls
inc
outsl
or
hlt
filds
call
push
inc
or
mov
push
sub
sbb
cmpsb
rol
dec
adc
in
fists
push
cmpsb
xor
fbld
push
cmp
and
sub
aad
cmpb
dec
and
rorb
inc
cld
xlat
clc
hlt
jmp
je
imul
xchg
fdivrp
cmc
mov
mov
imul
mov
lods
sbb
sub
add
inc
inc
mov
and
push
mov
or
pop
mov
shlb
cld
add
es
jle
shlb
cli
mov
push
inc
push
and
cmp
sbb
call
cli
sahf
push
inc
cmp
sbb
sub
lcall
rorb
push
xor
push
xor
mov
push
inc
xor
movsb
ret
icebp
sbb
or
or
mov
je
jne
mov
or
fcoms
push
je
ljmp
pushl
cld
lea
add
mov
scas
adc
cmp
add
pusha
xchg
adc
adc
sbb
out
roll
test
cmp
sti
dec
std
bnd
jb
fsubs
jle
fmull
ljmp
test
sarb
loopne
ret
xchg
imulb
sbb
fwait
stos
js
adc
pop
aaa
mov
mov
decb
pop
push
ret
and
or
pop
push
mov
orl
pop
repz
movb
push
dec
dec
mov
lcall
xchg
dec
add
ja
jbe
add
dec
push
add
add
call
das
and
in
mov
adc
outsb
rclb
lock
cmp
ja
outsb
es
lret
ret
inc
mov
pop
lcall
jecxz
test
pusha
or
jne
xor
popa
loope
push
sub
push
push
call
cmp
adc
leave
loope
add
pop
mov
xchg
adc
mov
add
insl
and
push
lret
je
pop
pop
jae
mov
shl
fs
jg
xor
imul
les
fwait
loope
movsb
adc
fcmovb
lea
inc
mov
addr16
add
xor
jb
jne
mov
bound
pop
push
add
pop
out
and
call
sub
sahf
mov
nop
mov
jle
adc
ja
cmp
loopne
push
es
xchg
jo
pop
imul
jle
in
xchg
int3
push
ja
mov
push
inc
call
les
mov
pop
lods
dec
inc
xchg
push
jge
call
pop
cmpsb
pusha
jle
test
xchg
xchg
stc
loopne
inc
and
mov
mov
add
lea
xchg
pusha
push
punpckhbw
adc
loopne
movl
or
das
push
rorl
sub
cmp
mov
xchg
std
hlt
adc
movl
xchg
popa
movups
xor
pop
pop
push
lea
push
negl
fidivs
pop
add
pop
stos
and
loop
jb
and
jo
or
fistps
aam
pusha
sbb
loopne
loopne
repnz
cli
lock
dec
pop
pop
adc
sub
xorl
hlt
and
call
insb
cs
xchg
nop
cld
pusha
xchg
call
fisttps
loopne
pusha
push
push
test
push
mov
sbb
clc
cmpb
daa
sub
adc
push
push
jb
pushf
or
pusha
push
aam
test
or
push
adc
scas
mov
dec
push
jmp
sub
loopne
popa
mov
cmpb
loopne
pop
xor
xchg
pop
hlt
xchg
jp
stos
xchg
mov
cmp
xchg
lock
decl
pusha
sti
jb
jge
pop
sti
mov
adc
popa
add
push
aam
pop
test
lods
add
imul
xor
push
push
rol
incl
dec
or
rol
lret
inc
clc
scas
out
jbe
sbb
cmp
xor
das
adc
je
pusha
jns
and
and
push
and
jb
test
insb
pop
adc
push
loopne
xor
sub
outsb
adc
test
inc
js
lock
nop
inc
adcb
loopne
adc
sub
xchg
inc
xchg
cmp
jge
mov
cwtl
loopne
mov
mov
pusha
cmp
xchg
add
movsl
and
icebp
pop
inc
cmpsl
and
and
je
pusha
shrb
jp
out
shrb
and
loopne
pop
jecxz
adc
add
jl
sbb
or
xchg
loopne
and
add
lcall
loope
cmp
andb
xor
leave
xor
popl
jg
xlat
xor
pop
hlt
lcall
add
enter
inc
cmpb
cld
scas
clc
scas
outsb
add
add
data16
scas
sbb
subb
pop
call
mov
stos
inc
js
xor
xchg
dec
ret
jge
testb
xor
das
lcall
push
xchg
xor
in
in
jmp
add
fs
push
add
pop
movb
add
sbb
in
nop
push
gs
inc
mov
jp
cltd
add
loop
add
fists
adc
mov
movsl
mov
xchg
inc
push
call
sub
add
mov
cmp
call
movsl
inc
xchg
out
push
enter
adc
jo
xor
xchg
pop
lcall
mov
and
mov
outsb
std
lock
mov
sub
jecxz
test
nop
aam
movsl
jno
mov
addl
dec
add
iret
mov
xor
add
add
mov
and
xor
std
mov
xor
push
lock
xor
daa
add
xor
lock
or
push
push
jo
push
xor
push
enter
push
inc
sti
push
fldenv
clc
in
and
push
pop
je
push
icebp
jp
mov
push
mov
pop
xchg
out
nop
pop
push
and
lock
wrmsr
sahf
inc
outsb
pop
add
sbb
sbb
cmp
xor
push
and
push
shlb
push
xchg
fcmovnb
mov
andb
stos
xchg
add
in
push
ljmp
or
add
je
adc
xchg
fdivp
inc
push
movl
dec
jle
push
and
lret
lock
sahf
cmpsb
mov
fdivp
jle
mov
and
movsb
mov
ds
test
pop
jo
stos
mov
or
dec
add
daa
loop
jp
dec
testb
push
mov
push
mov
add
adc
or
test
jmp
pop
or
je
jo
pusha
pop
movsl
and
aam
aas
ds
into
push
dec
mov
mov
sub
scas
add
das
or
fimull
lods
je
mov
cmp
mov
mov
or
mov
push
call
test
lods
add
push
sti
sub
xor
and
xor
aam
sub
dec
sub
addb
popa
mov
mov
xchg
fs
xor
inc
add
pop
adc
adc
int3
add
push
xchg
push
jne
sbb
psrld
movb
jmp
ret
inc
cmp
fdivs
popa
mov
xor
jmp
inc
pop
mov
andb
popf
inc
frstor
sub
add
inc
std
xchg
icebp
and
mov
lcall
push
mov
add
test
inc
jecxz
jae
cmp
sub
andl
push
mov
adc
jbe
rcl
lcall
in
jp
push
adc
push
lock
or
pusha
sub
jbe
jb
pop
sub
sub
jne
xor
adc
xchg
adc
push
add
xchg
mov
xchg
jp
mov
push
ret
cmpsb
es
mov
add
xchg
sub
and
and
xchg
inc
ljmp
int3
fidivl
adc
lcall
mov
add
cwtl
in
jno
cld
xchg
mov
xor
add
fcompl
push
cmp
push
add
or
and
repz
lock
addl
and
stos
adc
mov
sbbb
or
push
jne
jp
les
fisubrl
inc
and
orb
push
test
sti
push
adc
sar
push
pop
int
xor
jne
push
loopne
and
dec
icebp
test
incb
sbb
inc
enter
push
adc
push
and
jno
mov
addl
sbbl
loopne
test
shrb
es
mov
loopne
ret
filds
incl
mov
adc
jo
inc
cli
outsb
imul
es
inc
pusha
inc
fisttps
rcrb
sbb
xor
lcall
enter
movsb
pop
or
push
call
lret
pop
jo
ret
lock
repz
lar
mov
fcomps
idivb
push
push
ret
xor
dec
je
call
test
mov
jb
add
les
loope
mov
rol
sti
fadds
sub
push
clc
scas
adc
js
sub
cmp
out
dec
cmovge
xchg
movsb
dec
adc
push
push
and
mov
je
and
out
fnstenv
loopne
mov
cmp
push
addb
movl
out
mov
cmp
xchg
hlt
add
je
out
mov
xchg
testb
jo
call
leave
call
outsb
or
and
sub
add
ret
and
inc
add
pop
xchg
out
push
sarb
or
mov
or
pop
clc
jg
out
mov
sbb
or
xchg
add
and
or
add
mov
in
mov
and
mov
mov
jb
inc
and
std
incl
or
add
and
lea
or
loopne
cmp
pop
add
loopne
out
pop
jmp
sub
sbb
ljmp
and
mov
mov
or
mov
ja
ficompl
outsb
mov
aas
subb
mov
dec
push
lahf
xor
xchg
xor
roll
add
mov
sub
jo
push
mov
and
scas
add
es
add
stos
sub
xor
pop
ret
mov
adc
jb
cmp
hlt
lock
enter
push
dec
inc
shlb
mov
pop
mov
mov
mov
int3
test
stos
and
push
jbe
add
lds
fsubr
mov
xor
int3
mov
pop
mov
lahf
or
jg
rolb
cmp
add
outsl
add
mov
les
jmp
jle
je
lcall
or
xor
mov
adc
fisttps
jl
cs
sub
icebp
pop
je
mov
add
hlt
mov
nop
jl
jo
push
addl
add
or
fbstp
add
incl
cmp
or
mov
call
inc
add
jo
xlat
mov
pushf
and
aaa
add
test
inc
mov
test
add
loope
mov
pop
pop
xor
inc
jg
stos
mov
pop
jg
or
adcl
repz
cmp
mov
mov
push
pop
jbe
sub
jnp
add
cs
or
and
pop
adc
sbb
xchg
into
jbe
mov
add
sub
mov
loope
cmpsb
ss
and
push
cmpsl
add
xchg
aam
cld
cs
xor
cmpsb
sbb
ret
rclb
sbb
xchg
xor
add
mov
pop
test
and
add
inc
inc
dec
cmpsb
jb
xchg
adc
lea
jle
jp
sti
push
mov
lea
pop
or
iret
or
cmp
or
inc
push
pop
add
loopne
adc
push
and
xor
dec
jo
fbstp
inc
xor
sub
jmp
xor
movb
jmp
pop
jmp
pop
sbb
or
int3
xor
scas
dec
cmpb
adcl
pop
movsb
insb
and
add
or
or
mov
push
je
push
push
xchg
adc
xlat
sbb
pop
repnz
mov
cld
push
mov
stos
add
xor
push
cli
icebp
aaa
test
data16
add
or
add
mov
pop
push
ss
push
jb
sbb
sahf
aad
and
lcall
mov
mov
cmc
incl
andl
pop
in
add
cltd
movl
ljmp
and
cmpb
mov
mov
dec
sub
or
dec
dec
push
mov
gs
out
test
inc
shll
mov
mov
xor
in
pop
movsl
mov
lea
scas
invd
cwtl
das
movsb
hlt
mov
push
pop
sbb
call
xor
mov
cltd
test
sbb
call
dec
jo
and
ret
lock
insb
pop
and
and
pop
loope
inc
insb
cs
adc
subb
and
repnz
movsb
add
sbb
icebp
mov
inc
and
xor
lcall
lods
push
out
outsl
adc
adc
ljmp
flds
pop
jne
test
js
add
or
je
aam
sub
jp
add
popf
andb
pop
jecxz
and
adc
idiv
sbb
dec
clc
ja
and
mov
pop
and
inc
rorb
pop
and
push
push
or
push
jb
push
push
pop
mov
dec
and
mov
add
cli
sub
pushl
inc
scas
push
xchg
loopne
and
mov
cli
fwait
jae
mov
inc
add
enter
bound
sub
xor
add
ret
ret
sub
jp
xchg
xchg
jbe
adc
addb
add
adc
jne
rclb
rorb
sub
sub
leave
ret
popa
insb
ret
mov
test
stc
rorl
pop
mov
add
or
fwait
in
add
lock
scas
xchg
call
mov
adc
imul
xchg
mov
sbb
pop
push
xchg
js
jb
jb
ds
sbb
rcll
rcll
fisttps
call
mov
cmp
mov
std
dec
pop
rolb
test
add
ret
sub
stos
adc
das
inc
mov
mov
mov
sbb
je
cmp
lock
inc
adc
dec
outsl
or
js
mov
or
push
or
cwtl
testb
test
inc
or
inc
jne
ret
or
push
shlb
inc
adc
pop
andb
inc
and
and
lea
and
into
jg
clc
in
rolb
lods
or
mov
loopne
int
outsb
inc
fs
mov
fildll
loope
add
jne
faddl
mov
aaa
xor
shr
xor
adc
pusha
hlt
loope
incl
and
add
mov
loopne
add
lock
out
popa
outsl
pusha
sbb
mov
cmpsb
outsl
fs
test
jne
mov
push
loopne
jo
sub
push
fimuls
jecxz
in
loopne
ss
jbe
lret
in
mov
clc
in
xchg
add
xor
inc
sub
add
cs
adc
mov
loop
call
call
arpl
add
and
pop
cmp
out
addb
insb
mov
push
mov
or
rorb
sti
cld
cld
dec
push
and
loopne
add
bound
mov
cmp
jle
loope
inc
rcr
sub
jmp
cli
jnp
popa
pop
jecxz
or
js
hlt
jbe
scas
adc
inc
jg
inc
enter
xchg
adc
dec
or
imul
scas
push
mov
inc
push
add
decl
jo
add
add
js
sub
dec
mov
ljmp
sbb
pop
mov
sbb
test
inc
pushf
mov
fcmovu
inc
push
call
adc
out
bound
xchg
adc
pusha
int
loopne
or
jmp
cmp
addb
sbb
cld
mov
adc
mov
popa
adc
les
push
push
adc
and
mov
or
jp
cmp
rol
fimull
adc
mov
je
adc
and
pusha
add
mov
pop
xchg
nop
fs
jge
sar
dec
cmp
add
nop
psubsb
in
pusha
pop
insb
add
clc
call
or
add
inc
mov
pushl
push
push
push
lret
mov
out
xchg
xor
pusha
arpl
js
ret
or
fstpt
push
je
push
jo
test
mov
inc
sbb
cmp
pop
incl
or
aam
arpl
test
cld
fcmovnbe
orb
dec
clc
mov
inc
shlb
ss
jae
jnp
or
xchg
int3
nop
xchg
sbb
inc
pusha
or
into
cmpb
jmp
jmp
mov
xchg
loop
mov
and
inc
fs
loopne
lcall
ret
jb
rclb
or
pop
lahf
decl
int3
or
mov
or
pop
adc
loopne
scas
pop
dec
sub
subl
incb
sbb
fmuls
push
ljmp
fadds
push
mov
arpl
inc
loope
fs
fimuls
inc
add
cld
pop
movsb
adc
pop
sbb
pop
cmp
in
jbe
negb
xchg
jmp
or
or
scas
ljmp
jb
loopne
push
xor
test
loope
int3
jbe
pushl
popa
popf
adc
lret
es
adcb
and
sbb
or
add
xor
sti
mov
xchg
jno
jl
mov
es
call
sub
or
call
lcall
mov
push
add
adc
mov
lock
jo
aad
mov
call
push
jno
iret
into
mov
jp
inc
lret
jae
mov
add
jle
int3
pop
dec
lods
mov
mov
movb
clc
call
sub
add
ja
push
pop
push
jae
mov
push
add
mov
movups
mov
or
movsb
cmpb
les
fdivrl
adc
jg
mov
xchg
sbb
mov
add
scas
outsl
pop
cmpl
mov
out
dec
sub
push
mov
negb
add
js
cmp
scas
pop
or
jo
jns
jge
add
pop
push
fldt
call
jo
ficoms
ret
push
add
xchg
sub
jg
push
test
or
cmpsl
mov
loopne
sbb
scas
cmp
adc
jle
call
je
and
push
sub
sbb
psubsb
xor
loope
push
xor
lret
andb
andb
adc
mov
sbb
mov
rolb
nop
jmp
xchg
or
insb
sahf
rolb
adc
shlb
inc
js
out
mov
push
inc
cltd
jle
cmpsb
inc
push
dec
mov
mov
or
inc
divl
mov
add
adc
lea
mov
test
lods
ret
push
xchg
pop
pop
inc
sub
lods
decb
mov
dec
jo
xor
mov
sbb
xchg
pusha
dec
push
inc
and
test
add
adc
stos
and
cmp
mov
add
mov
test
movsb
xchg
jno
adc
mov
push
jo
add
push
adc
ficomps
add
jmp
add
push
and
mov
add
adc
loopne
mov
xor
aaa
test
jmp
es
incw
push
adc
adc
pop
lock
lock
add
xor
sbb
cld
xor
xor
xchg
movsb
xchg
cli
or
jle
dec
repz
and
int3
cmpsb
add
pop
inc
add
hlt
and
lods
nop
loopne
mov
lret
mov
scas
and
sub
and
jne
jbe
pandn
or
inc
clc
push
push
mov
pop
pop
mov
jmp
mov
sbb
pop
js
add
loop
lcall
cmp
add
inc
std
cmp
or
adc
add
or
das
stos
xchg
in
mov
sub
or
in
call
je
cmp
pop
mov
xor
aas
jo
jge
add
adc
sti
sti
add
xor
call
xor
je
stos
xchg
imul
jno
cmpl
cmp
or
hlt
xchg
enter
inc
push
dec
jo
mov
adc
jl
clc
inc
xor
dec
hlt
mov
lock
push
add
add
decl
mov
adc
push
call
test
incb
sahf
cmp
call
mov
sub
push
push
and
xchg
in
mov
push
test
and
bound
add
inc
add
add
aaa
and
repz
js
test
les
sub
sbb
dec
adc
dec
or
pop
lods
mov
nop
js
push
call
mov
and
mov
jo
fistpll
or
sbb
test
out
adc
adc
mov
add
movsl
outsl
out
add
mov
mov
shl
pop
mov
xchg
or
cmp
hlt
ret
mov
mov
fwait
in
xor
fdivrs
ds
rorb
pop
pop
mov
inc
sub
mov
jl
push
push
in
jg
incl
lock
repnz
jbe
mov
add
or
sti
push
mov
inc
push
sbb
push
mov
inc
xchg
stos
push
add
lret
jg
movsl
call
xor
rcll
cmpl
scas
lea
or
or
pop
stos
shll
push
lea
push
lods
xor
mov
or
add
dec
xchg
mov
push
pop
jo
inc
out
aam
jle
dec
jo
fstl
push
push
jb
dec
daa
xor
sub
add
bound
pop
and
dec
jecxz
cmpb
dec
mov
icebp
jg
rclb
xor
lcall
or
into
cmpsb
adc
cmpsb
xchg
addl
into
push
pop
xchg
lock
or
ss
rcrb
add
mov
mov
and
lock
movsb
jle
mov
es
mov
sti
cld
in
add
jae
pop
pop
test
loopne
test
addl
add
sbb
lock
adc
adc
cmc
add
outsb
cmpsb
mov
adc
aam
mov
mov
jb
jg
loop,pn
mov
pop
xor
jmp
addl
add
mov
sub
jo
mov
ficoms
adc
mov
rcl
call
jle
pop
inc
test
icebp
sub
cmp
rcrl
repnz
into
push
add
gs
insl
scas
in
or
outsb
adc
es
mov
cli
pop
fcoml
pushf
movsb
add
mov
fadds
jo
dec
adc
sub
pop
pop
icebp
xchg
or
add
or
pop
push
scas
cmp
inc
icebp
and
mov
inc
and
sub
push
push
inc
lock
loop
xchg
cmpsl
lea
and
adc
push
mov
aam
jne
jb
add
or
pop
adc
add
outsl
mov
lds
sub
js
mov
push
adc
mov
jb
mov
adc
mov
mov
scas
clc
mov
and
push
adc
and
sti
jg
pushl
and
xor
mov
cli
hlt
fnsave
repz
xchg
mov
add
and
mov
call
or
std
add
cmpsb
ret
addl
cmc
cmp
lods
int3
lods
fucomi
xor
aaa
nop
cmp
mov
add
nop
cmpb
sub
sbb
sbb
or
adc
fcomps
xor
cmp
adc
add
aas
lret
jp
in
mov
pop
and
cmc
pop
or
xorb
mov
or
sarb
push
pop
lcall
jbe
add
jecxz
movsb
mov
xchg
mov
push
call
jp
mov
fs
mov
adc
shlb
inc
insb
jle
fmull
scas
fwait
xor
stos
mov
mov
cmp
push
call
add
jl
ficoms
out
imul
push
jmp
add
scas
lds
sar
mov
clc
cmp
mov
clc
mov
jle
xchg
inc
add
xor
sub
sub
or
push
add
les
hlt
cmp
dec
jno
lea
sub
jmp
inc
mov
or
pop
loop
sbb
dec
push
pusha
dec
pusha
insb
rorb
les
mov
push
pop
and
and
aam
mov
call
or
fwait
or
sbb
daa
pop
sbb
sbb
xor
xor
bound
jle
ds
and
mov
shl
sub
inc
sub
jno
push
xor
push
xchg
pop
and
add
dec
mov
stos
movsb
xor
pop
addb
cmp
xor
add
call
filds
ds
lret
rcll
xor
in
call
rorb
xchg
pop
adc
add
insl
sti
adc
addl
or
je
cmpb
adc
add
jle
ficoml
or
and
les
adc
cmpb
push
imul
jo
fdivs
shlb
push
cmpl
pusha
pusha
sub
div
jmp
mov
lcall
popf
or
add
fcoms
loop
or
jb
mov
cltd
nop
aam
push
mov
cmp
sbb
and
orb
lcall
ret
sarb
lds
mov
ret
rol
pop
lock
pop
jmp
daa
addb
mov
and
orb
xchg
and
jo
fisubrs
arpl
xchg
ds
shrl
ret
push
sbb
es
jbe
add
shlb
mov
mov
push
outsl
cmp
mov
loopne
sbb
dec
cli
int3
rorl
je
adc
sbb
dec
push
push
decl
mov
adc
ret
or
or
push
push
into
adc
leave
js
and
add
add
popa
ja
ror
push
adc
shll
mov
imul
ret
adc
int
sbb
call
add
push
test
and
pop
roll
add
cwtl
rcl
incl
sub
rcll
pop
ret
adc
fisttps
shlb
mov
hlt
jne
ret
inc
enter
mov
sub
scas
adc
mov
add
aaa
jle
lea
hlt
add
out
inc
call
push
inc
mov
lcall
aad
adc
lahf
dec
test
stos
test
jnp
add
lods
push
andb
shl
repnz
hlt
or
adc
pusha
sbb
xor
lock
push
sbb
adc
cmp
mov
push
loop
jmp
xor
iret
ret
pusha
add
mov
inc
jg
mov
jne
out
pusha
push
inc
lahf
or
sbb
pop
test
push
add
jo
add
ja
out
and
call
pop
pop
shrb
or
inc
and
aam
mov
jb
js
in
add
call
sti
decb
mov
add
add
test
sub
fwait
inc
xchg
into
sarb
mov
ret
sub
ja
add
addb
sbb
movsb
nop
repnz
loopne
mov
xor
subb
add
jl
notrack
add
mov
jle
push
lcall
mov
sub
loopne
cmp
add
scas
mov
outsb
hlt
add
movsl
push
sbb
adc
adc
int
nop
popa
pusha
pop
ficoms
jg
mov
inc
call
cwtl
push
rorb
cmp
xchg
jmp
jbe
sub
xor
pop
xchg
push
add
ljmp
mov
add
pop
sub
mov
or
mov
inc
and
arpl
cli
call
sbb
das
fs
movsb
add
pusha
cmp
rol
inc
mov
data16
cmp
and
fisttps
cmpsb
std
pop
push
add
js
adc
ljmp
aad
or
xor
mov
push
and
sub
jp
inc
mov
xchg
xor
adc
dec
pusha
push
es
mov
and
push
pop
or
xlat
or
aas
inc
loope
rcrl
inc
ss
add
add
and
mov
popa
inc
mov
popa
loopne
push
insb
in
pop
add
and
cmp
add
push
pusha
cmp
or
jecxz
js
jne
fcomps
andl
xor
pusha
or
adcb
adc
dec
add
nop/reserved
adc
aas
and
ljmp
xor
or
sbb
pusha
adc
add
inc
cmp
or
inc
pop
inc
js
loope
mov
xchg
loopne
andb
dec
or
push
outsb
dec
mov
cmp
test
fdivrs
xchg
jp
push
mov
sbb
lea
loopne
mov
push
insl
stos
inc
pushf
mov
inc
lods
jge
mov
cmp
inc
push
xchg
mov
call
incl
outsl
add
xchg
inc
pusha
cmpl
inc
incl
push
lock
pusha
adcb
mov
shrb
ret
add
cli
loop
loop
mov
cmp
and
xchg
nop
mov
push
jb
adc
add
subl
adc
adc
ret
inc
cmp
lock
insb
adc
call
xchg
shrl
push
pusha
push
inc
adc
mov
insb
out
loop
push
pop
or
adc
cmpsl
popa
pop
test
in
mov
and
sarb
or
subl
outsl
stc
addb
xchg
pop
enter
or
inc
pusha
sub
dec
mov
mov
xchg
add
dec
or
popa
pop
les
or
sbb
aad
cmpsb
xor
mov
mov
call
loop
and
jne
mov
into
ljmp
add
mov
ret
mov
xchg
test
sbb
add
lock
xor
mov
inc
and
or
inc
fs
or
push
mov
lock
or
mov
ljmp
mov
test
je
push
loop
ret
inc
or
cmp
scas
add
jbe
adc
add
pop
inc
add
stos
push
lods
inc
mov
cmp
push
push
jo
int
adc
test
add
jo
inc
push
adc
cli
pop
sub
sbbb
xlat
pop
mov
pop
pop
ret
mov
sahf
push
std
stos
push
mov
inc
inc
cmp
inc
hlt
std
jo
inc
dec
popa
test
jb
xchg
orl
std
cmpsl
sbb
fnsave
xor
lock
movsl
jo
cmpb
movl
mov
add
cmp
enter
or
push
fs
mov
lock
hlt
lock
cmp
fbstp
jl
pop
cli
or
and
subb
inc
adc
push
les
int3
jbe
fisttpll
std
or
inc
in
push
pop
imul
xchg
add
mov
mov
lret
jo
mov
or
dec
pop
aaa
pop
es
push
or
lock
add
adc
test
leave
js
in
xorb
hlt
pop
cmc
test
sub
add
test
clc
call
jo
shlb
dec
fstpl
lea
dec
mov
and
ficompl
and
test
lret
inc
xchg
mov
and
xchg
adc
test
scas
ljmp
repnz
xor
jmp
mov
lret
jo
push
or
xor
mov
add
mov
imul
sbb
call
cli
jg
leave
xor
jno
arpl
adc
xor
out
mov
mov
fidivs
lcall
add
pop
ret
and
jo
add
mov
pop
add
imul
test
bound
push
mov
dec
subl
push
adc
xorl
xlat
push
insb
mov
jle
lock
lock
inc
jno
add
mov
aas
hlt
sti
add
mov
jg
sbb
push
push
sbb
xchg
add
addb
cwtl
jge
xor
fcoms
scas
inc
xor
loope
mov
andb
clc
push
sbbb
mov
or
lods
adc
test
outsl
stos
cwtl
pop
adc
sbb
gs
xor
call
push
dec
or
pop
pop
mov
sub
add
pop
aam
mov
dec
push
mov
push
pop
xchg
mov
xchg
outsb
pop
es
and
push
call
ljmp
scas
or
xor
aam
jge
pop
mov
sbb
mov
out
test
int
cld
xor
loope
test
call
pushf
mov
sub
add
les
dec
lcall
and
or
clc
es
shlb
outsl
mov
dec
mov
or
icebp
inc
sub
sbb
pop
test
cli
jg
lock
pop
adc
add
insb
jmp
pop
push
jne
push
sub
pop
push
les
bound
adc
pop
xor
adc
adc
or
decl
xchg
or
dec
add
ljmp
xor
scas
xor
xor
xor
mov
push
mov
lods
jo
sub
insb
push
mov
ret
mov
sub
ss
icebp
mov
cmp
adc
and
xchg
aaa
add
or
lret
gs
sub
add
outsb
sti
fistps
inc
inc
decl
inc
test
push
mov
mov
mov
jl
push
enter
mov
push
dec
ss
iret
push
add
mov
ret
add
sub
test
push
xor
ja
or
scas
mov
add
push
xor
cmp
or
adc
add
add
xor
mov
out
mov
xchg
rolb
mov
xor
es
incl
testl
and
je
outsl
xchg
mov
mov
lock
call
inc
divb
insb
or
cmp
mov
mov
inc
xor
sub
aam
mov
inc
xchg
std
adc
xor
daa
mov
add
and
and
add
or
push
and
dec
mov
out
xor
jg
sbb
bound
xorl
call
pop
add
ret
inc
addb
xchg
stos
pushf
ljmp
nop
lea
jp
mov
xorl
movb
pushf
dec
mov
xor
jb
lock
arpl
adc
mov
pop
jno
call
lock
data16
insb
aad
mov
loop
sarb
ja
mov
pop
add
imul
mov
mov
adc
push
roll
lock
pop
dec
in
cli
inc
jmp
and
jg
add
jo
mov
outsb
sbb
insb
mov
idivb
or
call
mov
mov
in
push
mov
bound
loopne
mov
push
call
xor
je
mov
mov
js
jno
pop
xor
cmp
jg
and
add
adc
add
or
jecxz
fildll
cmp
mov
inc
jmp
push
adc
addr16
push
aas
push
push
call
xchg
sbb
mov
pop
mov
pop
cmc
in
call
jb
xor
clc
leave
pop
call
movb
add
movsl
mov
xor
test
push
pusha
sub
lock
add
xor
aas
xor
pop
sub
out
xor
sub
add
jne,pt
mov
movsb
enter
test
sbb
sub
icebp
sbb
mov
das
rorb
pop
repnz
inc
xor
and
pop
xor
call
pushf
sbb
fadds
lcall
lock
or
sub
sub
enter
ret
sbbl
adc
inc
pop
test
mov
cmp
mov
mov
xor
sub
sbb
jo
cmp
in
loop
ss
sbb
and
sub
addr16
sub
hlt
mov
add
jecxz
add
iret
bound
add
in
pop
or
addl
hlt
add
xor
stos
les
out
pop
dec
imul
jbe
test
add
and
xor
test
outsb
nop
mov
sub
jb
aam
xchg
inc
je
mov
lock
addl
out
or
inc
notb
shrl
rol
sub
and
xchg
dec
add
repz
addr16
xchg
inc
movsb
xchg
sub
push
icebp
fs
add
xchg
mov
sub
add
push
sbb
pop
add
aam
test
mov
mov
mov
cmp
test
xchg
aam
mov
xchg
lret
or
js
add
push
enter
dec
loop
pop
xor
push
adc
push
into
mov
cmp
sahf
sbbb
sbb
sbb
push
clc
jne
imul
inc
addb
jmp
inc
push
and
adc
pop
push
test
mov
mov
mov
or
scas
cmp
addr16
data16
push
jne
lds
add
and
inc
sub
imul
inc
jae
jb
dec
mov
and
push
cmpsb
fcoml
call
mov
cs
dec
adcb
jp
sbb
sbb
adc
xor
jg
and
mov
xlat
mov
push
cmpsl
xchg
mov
test
and
pop
push
jmp
inc
pop
pop
inc
push
rorl
cmpsb
xor
loopne
fidivs
clc
mov
jecxz
or
add
jecxz
inc
out
shll
ret
xchg
push
call
and
sub
shr
add
xchg
outsb
cli
lock
mov
push
push
or
adc
add
dec
pushf
cmp
cmp
jb
cmpsb
je
and
inc
movsb
insl
movsl
xchg
lcall
pop
inc
adc
pushf
lea
imul
jmp
call
mov
push
inc
sbb
or
jge
imul
clc
mov
push
mov
inc
loopne
mov
jg
jecxz
jnp
sub
mov
sarb
cmp
sbb
push
dec
outsl
enter
or
dec
lods
mov
mov
mov
imulb
cmp
jl
shlb
add
push
xchg
outsb
test
out
jae
push
das
add
dec
shr
xchg
jmp
fs
push
call
inc
jbe
rclb
ret
inc
iret
and
adc
jl
cmp
inc
mov
ljmp
xor
mov
xchg
into
pop
rorl
add
add
and
push
dec
mov
mov
shll
pop
fistpll
scas
shrb
pushf
shlb
cmc
insl
test
out
xchg
add
or
test
stos
push
ss
xchg
or
or
push
adc
cs
ret
rclb
dec
or
add
out
loop
rcll
jbe
pop
xchg
xchg
dec
fldl
add
mov
fidivrl
aam
mov
mov
dec
dec
pop
or
sub
call
rcl
xchg
dec
xor
inc
inc
mov
scas
loope
jo
mov
enter
xlat
push
pusha
push
data16
pop
and
inc
outsb
mov
add
loop
xchg
add
cltd
jnp
subb
inc
xor
incl
cmp
aam
and
js
pushf
dec
lods
or
lods
and
pop
jbe
fimull
dec
fwait
lret
inc
call
mov
sti
int3
jg
add
adc
insl
jecxz
ja
jb
push
popa
add
outsl
push
xchg
and
mov
call
xchg
popf
cmpsb
push
dec
test
shlb
adc
xor
test
inc
xchg
inc
sti
push
ljmp
mov
jl
mov
outsl
mov
add
sub
popa
add
pusha
add
push
sub
add
test
xor
push
insb
ds
sub
mov
fsubrs
bound
push
and
dec
pop
cltd
sahf
adc
xor
or
xor
insl
mov
pusha
xor
add
mov
insl
adc
std
push
and
sbb
test
adc
iret
data16
push
jne
mov
adc
inc
pop
jp
pop
inc
adc
xchg
enter
fisubrl
dec
loopne
sti
xchg
push
xorb
dec
test
pusha
or
sbb
adc
push
scas
and
popa
push
test
test
adc
cmp
rorb
sbbl
sahf
jo
push
push
and
filds
jecxz
lcall
loope
sbb
pusha
xor
add
pushfw
mov
or
mov
ja
pusha
mov
loope
add
je
push
add
call
pusha
insb
ds
movsl
pushf
xchg
mull
inc
xlat
scas
xor
mov
stc
popa
inc
mov
push
inc
jne
stos
mov
popa
mov
adc
loopne
xor
dec
inc
mov
xchg
test
mov
clc
or
sbb
call
loopne
test
ret
mov
jge
adc
push
mov
in
adc
stos
mov
test
inc
adc
push
mov
push
add
mov
popa
add
jo
sti
dec
add
loopne
add
or
push
pop
sub
arpl
adc
push
bound
popa
dec
push
push
loope
inc
sub
dec
cli
and
add
mov
testb
clc
or
ret
repz
push
out
cwtl
mov
add
dec
bound
in
les
jmp
loopne
jne
pop
mov
ljmp
mov
cld
jle
loop
sbb
dec
loopne
dec
out
loopne
cmp
jbe
and
xor
or
jmp
or
inc
enter
decl
and
add
sub
xor
aaa
adc
jmp
push
pop
xor
dec
adc
push
pop
inc
roll
dec
and
sbb
insb
cmpb
jp
jmp
loopne
push
and
jb
loopne
sub
sahf
push
or
add
adc
aam
mov
loopne
cmp
push
push
stos
jbe
add
jne
clc
cmp
in
inc
mov
into
push
popa
fabs
aas
sbb
ds
xchg
cmp
cs
inc
push
jo
sub
cmpl
cli
pushl
push
push
ljmp
add
jbe
ud0
mov
hlt
xor
xchg
adc
outsl
push
call
add
add
pop
pop
lock
mov
pop
outsl
sbb
adcb
lock
repz
orl
mov
xor
or
or
psubsb
xchg
imul
xchg
push
mov
cmpsb
cmpsb
pop
pushf
inc
push
and
sbb
xor
test
lock
fsubrs
mov
sti
incl
inc
mov
inc
pushf
push
xor
push
in
sbb
jmp
sub
orb
jb
jmp
add
lods
pusha
movsl
movsb
add
sub
loop
mov
pop
xor
push
bound
gs
fcomip
inc
leave
ret
push
test
mov
xor
add
or
xchg
out
jg
mov
adc
loopne
adc
addb
lock
clc
and
sub
and
jmp
imul
lock
push
mov
ret
scas
and
inc
sarb
add
lcall
push
inc
call
push
adc
mov
mov
mov
push
xchg
test
sub
sub
loop
push
or
adc
mov
jge
or
jp
in
aas
fidivrs
lods
xchg
add
dec
test
out
frstor
enter
sub
jo
mov
sahf
mov
mov
pop
mov
adc
xor
jno
lock
ljmp
jo
test
xor
scas
xor
or
sbb
mov
cld
mov
xor
add
cmpl
andb
movsb
pushl
mov
pop
xor
xor
repnz
aaa
xor
pop
lods
nop
adc
xor
addl
mov
hlt
and
cmp
jg
pop
je
xchg
pop
adcl
and
cli
sub
xor
pop
jo
xor
dec
pop
add
inc
push
inc
call
ja
xchg
lcall
mov
xorb
mov
decl
test
adc
add
movups
jmp
xor
cmp
inc
or
dec
in
loopne
adc
xor
pop
add
sbb
dec
call
pop
cld
inc
dec
call
cli
mov
or
dec
and
into
push
sbb
adc
and
inc
call
or
mov
clc
loop
jno
mov
push
scas
testl
mov
gs
sahf
je
adc
cmpsl
call
jnp
adc
ds
xor
inc
aaa
mov
fmuls
inc
adc
stos
cmp
out
xchg
incb
push
and
aaa
mov
ficoml
fbld
lods
call
call
or
and
insl
cmp
mov
in
lcall
mov
dec
sub
je
dec
out
and
jg
je
mov
mov
clc
adc
test
pop
sbb
pop
pop
add
add
or
sub
add
out
loopne
xor
test
xor
gs
scas
xor
inc
icebp
repnz
mov
mov
pop
or
xchg
mov
push
ret
dec
adc
jbe
ja
sub
jno
inc
or
mov
pusha
sub
or
cmpsb
add
dec
push
cmp
add
cwtl
jb
mov
xchg
loopne
push
xorb
add
lds
adc
mov
mov
xor
inc
je
sub
jne
rorl
xchg
stc
pusha
clc
add
pop
add
ret
xor
xchg
inc
xchg
jno
clc
jmp
push
ret
out
out
mov
xor
mov
adc
adc
adc
xor
push
xchg
fwait
clc
adc
sub
ljmp
sbb
push
mov
sbb
sub
decb
add
call
addb
inc
or
pop
or
jg
or
out
pop
or
adc
push
adc
stc
je
push
sbb
iret
jmp
mov
cli
sub
call
push
inc
mov
scas
clc
je
dec
mov
ret
jge
adc
inc
call
or
imul
lret
xor
je
xor
or
pop
scas
or
out
push
add
pop
cld
adc
jo
data16
sbb
cmp
or
adc
sub
ret
arpl
inc
xor
xorb
inc
test
inc
mov
jo
pop
add
insb
add
xlat
lock
push
ss
add
inc
sbb
sbbb
xor
sub
mov
testb
je
aam
adc
adc
jne
enter
add
jo
ds
push
orb
adc
add
adc
sub
push
sahf
adc
adc
decl
cld
mov
pushf
inc
icebp
push
clc
xor
jns
jmp
jne
cld
jno
lods
mov
mov
into
aam
ljmp
jl
sub
adc
fsubp
jo
sbb
test
aaa
lods
xchg
sbbb
xchg
sbb
in
xor
adc
sub
inc
jmp
push
aad
pop
adc
mov
cwtl
cld
arpl
or
mov
pop
lock
rorb
and
adc
adc
jle
je
push
pop
jno
cld
fistps
nop
jne
push
icebp
aaa
adc
add
sahf
and
mov
adc
push
movl
shrl
stos
lcall
je
addl
xchg
xor
rorb
and
pcmpgtd
popa
jo
jo
or
scas
adc
je
sub
xor
or
lock
or
xor
and
pop
sub
mov
jne
jp
aaa
add
jb
loopne
pusha
mov
xor
mov
insl
fcos
in
or
lock
mov
or
push
xchg
adc
cmp
and
push
lret
jl
rolb
rolb
aaa
and
or
je
lea
sub
cmp
cmp
shlb
mov
jno
je
ret
mov
test
fs
or
test
inc
jo
imulb
push
sbb
mov
xor
push
jmp
cmp
or
push
add
jmp
adc
add
dec
sarb
jmp
add
mov
pusha
movsb
dec
or
das
rclb
add
push
or
sbb
cmp
pop
test
lret
incl
xchg
jmp
cmp
popf
sub
and
aad
dec
cmp
xchg
pop
sub
adc
xchg
lcall
pop
jo
dec
and
add
je
test
outsb
idivl
call
and
ja
xchg
mov
outsb
sbb
sbb
jle
and
push
test
adc
sbb
hlt
sti
mov
addb
jmp
lcall
scas
push
addb
cmp
pop
add
lods
push
arpl
ljmp
cmp
or
add
add
pop
daa
sarb
rcr
adcb
pop
jmp
gs
or
pop
sbbb
rcrl
or
es
decb
filds
jmp
loopne
icebp
mov
cmp
xor
clc
inc
inc
xor
mov
out
je
dec
gs
and
pop
or
sub
inc
sti
andb
pop
adc
xchg
dec
push
push
les
push
insb
call
fnsave
popl
test
mov
push
jmp
push
int
mov
sub
push
add
jp
inc
sbb
pusha
adcl
lods
add
inc
dec
add
rcll
jmp
ja
fsubl
in
jmp
push
testb
test
push
aam
dec
or
roll
push
mov
mov
push
inc
adc
add
push
pop
and
not
and
shrb
add
mov
sbb
xchg
ret
jo
add
add
fs
dec
push
mov
add
test
shl
mov
sbb
pop
ja
xchg
lock
dec
mov
test
or
inc
pop
rclb
mov
shll
rolb
push
arpl
or
mov
cmp
test
outsb
scas
lock
cmp
jge
je
push
adc
sbb
test
scas
mov
call
fadds
ljmp
xor
mov
cmp
adc
and
or
or
fistl
in
pop
je
sahf
or
mov
push
addl
push
xor
test
dec
shlb
test
and
push
cmp
sub
or
fsubl
and
adc
xor
push
push
scas
pop
inc
cld
rcrl
and
xorb
call
or
sti
jmp
loop
sub
cs
push
aam
mov
rolb
lea
mov
clc
ja
test
push
and
xchg
rcl
mulb
sbb
cs
or
mov
rolb
and
rcrl
scas
adcb
ret
jbe
mov
add
pop
rcrb
rorb
loop
push
add
push
rclb
out
push
decb
xchg
jge
push
adc
push
sti
stos
call
outsl
cmp
sbb
push
push
dec
sub
push
or
pop
mov
hlt
ja
inc
mov
add
outsb
pop
test
subb
mov
inc
inc
add
push
mov
rorb
pusha
addl
aaa
cld
inc
push
repnz
adcl
push
push
or
inc
dec
aam
xlat
loopne
mov
mov
push
call
add
jno
add
imul
mov
push
cli
jbe
das
ljmp
fiaddl
push
test
fdiv
add
dec
fsubs
jl
inc
das
jecxz
aaa
or
add
inc
es
pusha
xchg
adc
fisttpl
xchg
and
push
mov
jecxz
mov
mov
inc
and
mov
fisubl
mov
mov
shr
cmpsb
or
mov
fucomi
mov
mov
mov
adc
fs
scas
xchg
push
popaw
or
cmp
loopne
fs
xor
mov
pop
cmp
mov
pop
mov
test
dec
sub
and
dec
xchg
jle
std
or
cwtl
cli
ret
adc
rorl
sub
jp
lcall
cli
jg
adc
xlat
pusha
adc
pusha
movsb
jmp
in
inc
pop
test
xchg
jne
jmp
mov
jmp
push
arpl
cmp
out
push
or
push
jge
and
mov
push
mov
pop
push
ljmp
pop
or
mov
mov
ljmp
mov
xor
or
idiv
adc
loopne
adc
inc
mov
mov
inc
pusha
je
mov
test
je
in
mov
mov
in
inc
inc
lcall
xchg
add
mov
or
add
pop
pop
int
sub
and
jo
xor
lahf
xchg
adc
adcl
add
or
loopne
insl
push
mov
mov
xchg
jl
aaa
cmp
adc
pop
std
push
out
add
add
in
dec
loope
out
imul
mov
push
sbbl
cwtl
and
adc
shlb
xor
loopne
jle
pop
ret
test
popa
sub
sahf
add
ficompl
xchg
loopne
int3
pop
pop
pop
or
inc
loopne
stos
test
fistpl
loopne
lea
test
xchg
push
pop
daa
or
xorb
mov
mov
mov
jno
in
mov
sbb
or
cmp
dec
flds
loop
jg
jg
and
or
mov
pusha
push
pusha
in
pusha
ret
sub
das
or
mov
dec
dec
or
mov
pusha
lret
fcoms
mov
add
xchg
push
lock
insb
add
adc
mov
adc
fimull
mov
add
les
and
lods
test
ja
fimull
mov
mov
inc
test
sub
clc
enter
adc
and
or
mov
lods
sub
add
out
xchg
sub
or
ror
stos
xchg
and
test
pushf
sbb
repz
add
cwtl
pop
jae
mov
sub
dec
jg
add
push
lock
and
mov
jbe
call
fists
or
sbb
add
xor
add
decl
mov
mov
or
insb
lods
push
cwtl
xchg
lock
pop
and
mov
and
jbe
sub
sub
xor
add
sar
xlat
mov
dec
xchg
mov
sub
adc
adc
jo
clc
call
orl
add
jo
xor
test
jnp
lock
js
pop
sub
cltd
mov
cltd
rorl
adc
mov
lret
test
cmc
outsb
sbb
mov
cs
xor
push
popf
sarb
sub
cmp
lea
mov
pop
inc
inc
pop
pop
mov
mov
inc
cmp
pop
mov
xor
adc
es
shl
insl
addb
xor
sub
mov
add
cmp
sub
push
push
sbb
sbb
mov
sub
adc
add
mov
dec
sub
cmp
jbe
pusha
jo
call
push
adc
adc
fs
rclb
adc
jmp
sub
lock
jl
mov
pop
jo
jp
clc
mov
insb
das
shrb
call
mov
xor
jne
sub
enter
adc
shl
or
add
push
filds
int
rcll
sbb
stos
add
sbb
pop
push
sti
outsb
loop
xchg
pop
lock
inc
adc
xor
push
incb
inc
scas
jo
mov
or
loope
out
push
hlt
add
xor
pop
lock
or
jg
mov
push
sub
add
add
sub
push
xor
pop
adc
mov
sbb
jns
push
jo
add
test
in
in
ja
hlt
add
lock
inc
cmpsl
adc
inc
dec
mov
sbb
hlt
lock
addl
xchg
mov
aaa
cwtl
adcb
mov
and
and
jg
lcall
cs
sete
dec
lock
and
decl
mov
pop
add
mov
cmp
mov
cmpb
mov
or
jo
insb
inc
push
insl
jg
ja
adc
lret
add
jno
fimuls
mov
inc
jae
std
test
incl
jmp
jnp
and
jno
or
mov
sub
or
cmp
inc
add
scas
add
test
fistpl
popa
lods
std
or
add
out
or
mov
dec
sti
adc
mov
mov
inc
fadd
jno
mov
mov
mov
xchg
inc
pushl
cli
xor
xchg
add
sbb
fdivs
xchg
xor
mov
lea
stos
mov
sbb
loopne
nop
push
pop
mov
enter
add
mov
nop
add
mov
pop
add
mov
dec
and
push
inc
push
jo
call
jo
or
mov
pop
add
mov
inc
push
and
xor
ret
mov
lahf
or
add
add
push
sub
aaa
in
sub
adc
sub
xorl
push
cmc
lock
sub
sarl
mov
lea
push
aaa
sbb
mov
push
lret
lcall
add
filds
lods
cmp
add
nop
cli
inc
add
orb
xchg
andb
cwtl
lds
lods
fimull
je
or
and
xor
pop
dec
test
or
or
test
cmp
or
mov
jo
out
xchg
mov
incl
jo
clc
repz
repz
add
pushf
mov
fdivp
xchg
mov
jo
mov
ljmp
or
stos
adc
add
mov
pop
push
hlt
push
ds
xchg
mov
add
cld
add
cs
adc
fistl
jo
add
jo
push
xchg
push
bound
xor
add
test
sub
and
insb
pop
mov
push
insl
add
push
xor
add
rorb
sbb
outsl
push
and
jo
adc
int3
rcrl
and
adc
adc
mov
xchg
sbbb
pop
jl
adc
push
decb
sbb
add
out
shr
or
aaa
into
xor
xor
fiaddl
mov
mov
add
or
mov
cwtl
mov
add
and
incl
fs
loopne
xor
xchg
jo
xchg
mov
lret
add
or
aam
cld
add
sub
in
push
xchg
sbb
or
push
rcrb
es
daa
push
or
mov
nop
fists
icebp
insl
call
jmp
cmpsl
jno
lock
push
mov
push
jb
or
xor
sbb
cmp
push
daa
mov
sbb
loope
mov
add
testl
add
and
notl
xchg
pop
xor
popl
xchg
lea
aaa
call
jne
out
scas
pop
icebp
mov
xor
xor
sahf
movsb
fisttps
add
divb
test
mov
lock
jg
decb
push
ds
mov
jmp
mov
xor
fucomi
lods
or
and
pop
sub
jno
out
and
pop
mov
jne
jo
je
shl
jg
jmp
mov
pop
jmp
jno
xchg
push
xor
cmpsb
pop
pop
push
xchg
xor
mov
xor
out
add
mov
sbb
lret
push
dec
jno
lock
jmp
mov
outsl
xor
testb
add
push
mov
shlb
or
std
or
pushf
lock
adc
pop
or
pushl
cld
mov
sbb
and
add
data16
and
add
es
adc
sbb
pop
push
sbb
sub
popa
xor
sub
hlt
xchg
lret
sbb
xor
mov
mov
add
mov
sub
mov
and
idivb
ss
mov
pop
inc
mov
mov
fsubl
cmp
or
or
mov
add
cwtl
push
adcb
sahf
nop
adc
testl
lock
lock
or
jp
add
sahf
hlt
loopne
add
mov
fstpl
cli
notb
in
sbb
and
cld
or
add
lcall
add
sahf
push
push
addb
addb
mov
pop
sti
fwait
pop
repnz
sti
push
adc
push
sbb
test
adc
orb
mov
scas
bound
loopne
or
mov
mov
mov
and
sbb
fildll
cmp
test
call
dec
test
sub
mov
imul
push
adc
fildll
les
fcomp
push
inc
cmp
mov
aad
add
mov
cmp
mov
push
or
sub
jmp
enter
orb
xchg
divl
fiaddl
loopne
ret
arpl
lret
inc
rol
xchg
adc
sub
xor
inc
fmull
mov
mov
and
adc
lcall
in
add
pop
or
ret
test
mov
sub
pop
dec
fs
sub
dec
ljmp
mov
mov
rorb
adc
push
scas
sub
pop
jbe
lcall
js
int3
call
sub
add
jne
je
or
xor
add
push
fadds
fsubrs
and
push
and
int3
test
ret
pop
jmp
inc
insl
push
mov
or
ja
leave
cmp
call
sub
cmp
jl
xor
sub
fdivrs
les
xor
rclb
adc
xchg
shrl
ret
incb
ret
sub
add
jo
add
add
xor
push
mov
subl
leave
lods
mov
and
push
and
adc
jbe
jo
test
pusha
pop
sub
rolb
adc
jg
or
rcrl
push
rolb
jmp
stos
mov
sbb
or
and
mov
cmpsl
mov
push
push
jl
push
mov
sub
add
add
inc
sub
loopne
inc
or
jecxz
movsb
clc
scas
push
cmp
inc
add
mov
jne
loope
add
clc
fisttps
add
movsb
sbb
dec
add
mov
loop
push
fadds
pusha
mov
jp
scas
bound
push
lea
or
push
push
adc
jl
divb
je
push
and
pusha
bound
aam
or
rolb
pushl
pop
shrb
dec
xchg
sub
add
add
inc
call
pop
xor
push
pusha
xor
push
rcr
dec
pop
dec
inc
push
loopne
pusha
pop
mov
cs
add
popa
add
inc
stos
add
or
pop
jb
xchg
adc
hlt
mov
jecxz
and
xor
push
int3
rol
add
jbe
imul
hlt
mov
dec
shrb
lret
cmp
add
and
push
call
pusha
adc
cmp
fisubrs
cli
add
push
xor
xchg
testb
jo
dec
push
mov
add
and
pop
or
push
lods
out
loop
cmc
pop
mov
mov
lock
pop
jp
mov
mul
sub
xchg
dec
push
cmc
pusha
add
add
or
ds
loopne
inc
ljmp
push
hlt
pop
xchg
push
jp
mov
lcall
mov
sub
movsl
mov
lea
or
andb
inc
add
jecxz
pop
cmp
loopne
js
or
jmp
sub
mov
cmp
pop
loope
inc
fsubrs
ret
cs
hlt
jmp
sub
insb
hlt
push
imul
aas
push
add
dec
mov
mov
add
movsbl
mov
inc
aas
xchg
cmpb
pusha
sbb
sar
add
hlt
shlb
inc
xchg
loop
add
movd
rolb
mov
xchg
fiaddl
jne,pn
movzwl
mov
aaa
inc
mov
cmp
in
add
push
les
xor
cmp
ret
lods
out
mov
loope
gs
movsl
sub
fs
std
xlat
xor
mov
and
addr16
xor
pusha
lea
bound
push
test
lock
jl
adcb
int3
dec
cmp
adc
pop
add
inc
mov
test
push
je
and
push
sub
cld
mov
insl
inc
or
jb
repnz
adc
lock
sub
mov
stos
adc
es
std
xchg
mov
push
add
inc
ljmp
add
and
pop
mov
add
pusha
and
xor
mov
mov
push
loopne
data16
call
loope
xor
popa
add
ret
cs
add
push
cld
sbb
inc
call
jne
mov
or
add
xchg
add
mov
data16
or
xchg
ljmp
gs
cltd
ret
cs
mov
ljmp
test
js
mov
lock
cld
add
loope
fistpl
sbb
inc
imul
xor
insb
inc
adc
push
sbb
sub
repnz
test
lds
add
inc
insl
test
sbb
push
jb
dec
pop
inc
test
add
pop
test
dec
mov
out
pcmpgtd
xchg
test
incb
dec
add
popa
mov
mov
inc
push
and
xor
in
decl
or
push
mov
inc
jo
and
out
add
lock
pop
push
stos
sbb
and
sub
mov
inc
cmp
add
sub
adc
jne
mov
mov
mov
scas
enter
sbb
mov
xor
and
negb
out
mov
int3
cli
orb
dec
aam
dec
mov
or
clc
mov
xor
add
jo
insb
mov
lock
test
mov
call
inc
jl
and
jb
pop
cmpsb
adc
mov
or
lock
adcb
fwait
and
mov
mov
lods
jg
fisttpl
sbb
jo,pn
cli
sbbb
test
and
mov
mov
mov
adc
cld
or
push
lret
or
je
xor
int3
cmc
cs
sahf
pop
mov
inc
lock
cld
shll
test
mov
jl
fcmovbe
lods
or
cmc
mov
mov
shl
sti
je
cmp
push
sti
incl
adc
jo
dec
jo
cmp
or
inc
xor
pop
inc
jg
in
sbb
test
ljmp
inc
xor
je
inc
xor
movsb
inc
lret
sub
out
mov
out
pop
push
filds
jo,pt
jo
xor
add
push
ds
xlat
rcr
mov
mov
mov
test
or
repz
call
push
sbb
rclb
adc
adc
mov
je
aam
jo
xor
mov
xor
xor
jb
and
pop
jl
or
sahf
or
lock
pop
je
sub
adc
xlat
call
add
mov
xchg
jo
mov
and
subb
andb
push
rclb
lret
or
mov
icebp
call
pushl
scas
fists
pop
call
sbbl
pop
je
and
dec
mov
sbb
sahf
mov
mov
sub
cs
xchg
push
push
scas
cmpsb
jae
xchg
pop
or
pop
data16
cmpsl
mov
pop
jmp
push
imulb
xor
leave
cmc
test
inc
cmp
push
pusha
scas
test
jb
lret
lret
push
sub
cmp
xacquire
adc
lock
ja
ss
and
out
shrl
mov
lcall
push
ds
ja
je
or
mov
out
mov
les
mov
outsb
aad
xor
mov
lea
decl
ficoms
mov
add
cld
inc
cld
cmp
pop
popa
ficompl
push
pop
dec
fiaddl
ret
outsb
add
retw
mov
jmp
jb
add
cmp
jne
push
insl
fildl
add
ds
and
add
or
xchg
add
inc
add
push
lret
fiaddl
hlt
mov
add
push
icebp
xchg
pop
call
dec
imul
int3
dec
add
and
xor
fsubr
mov
movl
cli
cmp
outsl
decl
cmpl
add
and
ror
lock
mov
jb
push
pusha
lock
lock
in
add
pop
call
mov
mov
ret
xor
add
push
push
push
ljmp
push
jecxz
adc
xor
push
xchg
mov
add
push
pop
std
inc
push
push
mov
cmp
je
mov
add
or
pusha
add
lods
movsb
lock
xor
xchg
ds
mov
sub
in
xor
sbbl
inc
inc
je
idivl
xchg
clc
enter
jmp
adc
gs
inc
test
push
pushf
pop
cmp
jbe
gs
and
mov
add
je
lea
mov
add
jl
mov
mov
pop
and
adc
jne
cmp
int3
test
lods
mov
into
ss
stos
add
repnz
stos
or
test
push
hlt
int3
xchg
and
jle
cmpsb
and
clc
inc
ja
adc
ja
xchg
jmp
shlb
lock
and
jmpw
cmpsb
incl
fdivr
fsubs
mov
mov
mov
inc
mov
aam
jne
add
mov
xlat
fwait
ret
add
adc
cmp
push
push
add
icebp
fbstp
pop
inc
mov
xchg
test
or
lock
jg
cli
add
xchg
push
xor
pop
pop
jne
in
das
mov
xor
inc
adc
adc
int3
push
xor
and
xor
mov
push
sub
lock
jo
sub
dec
call
jno
jp
sbb
mov
pushf
ljmp
dec
repnz
push
push
xchg
pop
add
jo
push
adc
vpshufhw
mov
inc
call
or
pop
pop
xor
rolb
push
or
or
xchg
xchg
inc
xor
mov
imul
jb
jno
mov
hlt
cmp
je
adcb
add
rolb
sub
aam
mov
push
add
lock
or
orb
push
mov
add
cmpl
inc
adc
or
ss
dec
xchg
cmpxchg
enter
sbb
adc
lds
in
repnz
outsl
mov
call
add
mov
jbe
mov
pop
adc
shlb
xor
add
xor
pop
mov
inc
in
mov
adc
push
test
xlat
pop
xor
aam
movsl
es
or
add
sub
or
adc
sub
sti
repnz
xchg
push
adc
mov
or
fistpll
or
xchg
xor
mov
adc
and
add
test
rcrl
and
punpckhbw
inc
in
repnz
or
shrl
and
xacquire
sbb
jp
xor
das
pushf
sti
jne
mov
hlt
and
and
into
mov
fcmovu
inc
sbb
xor
push
add
test
cmpb
add
dec
xchg
ret
push
add
cmc
das
subb
test
mov
lock
or
fmuls
dec
in
mov
jmp
mov
pop
or
add
insb
js
lret
decb
or
pop
dec
adc
cli
add
pop
jo,pn
mov
push
mov
sub
aaa
mov
in
adc
rclb
mov
mov
adc
ffree
sbb
or
inc
rorb
hlt
and
mov
jmp
hlt
push
loopne
cmp
cmp
or
fwait
pop
push
je
ret
mov
push
rorb
std
in
add
repnz
push
lock
popa
jbe
insb
adc
and
sub
mov
int
movsb
adc
mov
xchg
call
sbb
mov
mov
sub
clc
pop
imul
flds
insb
popf
aam
rcrb
rcrl
mov
call
popa
fmuls
sbb
lret
or
xor
mov
bound
cmp
addb
xor
adc
add
sub
call
push
cmp
mov
add
push
les
jne
mov
shlb
hlt
je
out
lea
xchg
insl
pop
fisttps
call
sbbl
and
inc
add
out
push
and
push
mov
inc
push
mov
or
sbb
adc
push
mov
ss
adc
add
je
test
das
shlb
jmp
test
cmp
push
outsb
sbb
dec
pop
lods
add
enter
mov
push
xor
mov
xchg
addb
xor
push
and
fwait
or
or
ss
fidivrl
jbe
sub
fistpll
pop
sarb
xchg
add
pop
enter
shrb
and
cmpl
aaa
or
push
jp
sub
add
imul
lds
cmpb
jb
and
push
dec
dec
call
mov
push
push
loop
mov
mov
xchg
or
adcb
and
dec
enter
add
pusha
push
adcb
push
rorb
es
pushl
test
inc
das
jne
jbe
sub
mov
addl
fmull
mov
rolb
and
in
xor
adc
movb
xchg
adc
ret
orl
mov
xor
xchg
cmp
inc
cld
mov
sarb
ret
test
cmpsb
mov
cli
mov
enter
bound
into
xchg
push
in
mov
adc
and
push
dec
xchg
shlb
pop
jb
pop
inc
rorb
stos
js
sbb
inc
in
fdiv
push
and
adc
add
shrb
jne
mov
imul
adc
add
pop
dec
mov
or
aas
repnz
shlb
pop
les
and
pop
shrl
sbb
mov
mov
push
xor
test
clc
xlat
adc
mov
add
mov
ss
cmp
ret
fcoms
test
or
jbe
rclb
xchg
popf
xchg
lcall
add
inc
scas
clc
test
mov
dec
cmp
rcrb
into
xor
js
or
push
add
addb
lods
hlt
add
sti
loopne
shl
jne
test
mov
movzwl
or
xor
rcll
push
push
mov
push
mov
jb
ja
rcl
loopne
adc
dec
jg
test
popa
outsb
jp
adc
jmp
fsts
cwtl
xor
mov
pusha
push
repnz
mov
cld
cli
sbb
cld
sub
mov
loopne
hlt
rorl
mov
jne
addb
xchg
and
rclb
sub
fs
mov
and
ret
push
push
inc
push
inc
out
call
and
into
in
push
inc
loopne
and
push
bound
pushl
or
dec
push
popa
push
adc
push
imul
loopne
pusha
add
add
popa
jo
add
xlat
sbb
and
jg
inc
adc
adc
add
push
jbe
mov
ljmp
adc
add
and
and
inc
add
in
pop
sti
jmp
mov
add
and
shll
je
cmp
sbb
push
out
add
mov
mov
incl
or
inc
das
add
pop
xor
jno
xchg
decl
lds
mov
bound
movsl
cmpb
add
add
aad
loopne
inc
inc
sub
popf
or
pop
push
adc
sub
cmpsb
add
add
push
rolb
inc
das
nop
push
cmp
or
hlt
loopne
lea
mov
gs
push
insl
fldt
xchg
xorl
pop
mov
call
inc
shl
mov
jmp
arpl
adc
mov
inc
mov
les
std
pop
and
rcrl
pusha
stos
dec
sbb
pusha
and
inc
add
xchg
mov
insb
enter
push
pop
push
call
inc
jmp
push
pop
xchg
popa
enter
dec
mov
mov
bound
jb
inc
sbb
inc
call
or
mov
insb
sub
in
je
pusha
pop
fidivl
jecxz
bound
jg
add
movsb
bound
lock
ljmp
add
data16
dec
mov
sub
loopne
mov
push
data16
pusha
and
sub
fimull
subl
fdivrp
xchg
pop
jl
adc
and
mov
adc
add
inc
insl
addb
dec
test
or
outsb
data16
mov
pusha
xchg
fcmovu
aad
push
push
pop
add
pusha
and
push
sub
sbbb
add
adc
or
je
cld
leave
mov
gs
adc
mov
jle
inc
out
inc
les
addl
cs
subl
inc
push
sub
xchg
fidivrl
addb
decl
dec
jl
stc
xor
push
insb
add
mov
cmp
inc
add
ljmp
adc
sti
sub
push
adc
jmp
mov
add
or
addb
or
ds
popf
add
xor
stc
jmp
push
add
sti
stos
add
stc
or
mov
jmp
xorb
push
loope
sti
inc
jl
pop
test
add
add
mov
neg
add
inc
jmp
or
push
jmp
add
sub
fnstsw
dec
idiv
push
inc
repz
pop
mov
sub
jnp
je
mov
and
sbb
addb
push
fisttpl
push
and
dec
lea
nop
sbb
clc
jg
push
or
xorl
add
or
add
add
xor
ja
data16
sbb
sub
pop
inc
out
icebp
pop
rcrl
shll
lds
mov
mov
xor
sti
cmp
push
ret
or
lret
or
ds
or
ret
movsb
sbb
pushf
mov
add
pop
and
sub
jmp
mov
push
mov
push
or
loopne
mov
negb
sti
fbstp
xor
xor
movsb
inc
adc
mov
push
adc
std
jmp
lea
rcrb
xor
ret
mov
inc
sti
xor
push
add
mov
add
loopne
dec
mov
push
jge
loopne
test
into
rol
mov
into
ss
imul
loop
or
add
data16
subb
jmp
inc
lds
js
je
outsb
or
or
jp
inc
lock
icebp
rdmsr
jmp
sahf
or
or
fbld
push
or
cmp
push
inc
sub
fdivs
xor
jbe
loopne
and
xor
mov
jp
icebp
or
or
cmc
mov
mov
icebp
mov
pushl
ror
mov
cli
outsl
mov
lock
incb
sbb
lock
jbe
mov
xor
inc
shl
fidivl
test
mov
aas
dec
je
adc
mov
popa
test
pusha
and
adc
add
xchg
cmc
jmp
mov
push
and
xor
cmp
cmpsb
jge
inc
add
jmp
dec
mov
add
je
mov
xor
dec
inc
sub
sbb
fs
incl
insl
scas
test
push
xor
mov
push
dec
xor
clc
jmp
mov
call
psubsw
mov
push
and
fdiv
lods
and
mov
movzbl
sub
add
sbb
enter
sahf
fstl
mov
aam
mov
sbb
add
icebp
cmp
and
jecxz
sar
jg
pop
ret
add
add
jne
cmpl
adc
sti
mov
adc
add
jo
cmp
or
xor
lret
sbb
clc
outsl
cli
pushl
out
mov
adc
push
or
sbb
pusha
jno
lret
mov
jae
mov
movb
enter
lock
adc
mov
sub
loop
pusha
pusha
sti
add
jmp
push
outsb
xor
mov
xor
mov
adc
push
add
add
sub
add
fcompl
in
mov
faddl
repz
cmp
and
pusha
jg
jg
stos
push
adc
repnz
adc
mov
add
jb
mov
cmp
lods
std
orb
test
cld
inc
inc
lods
cmp
in
jno
int
push
jmp
je
lock
add
cmpsb
test
mov
clc
cld
adc
ficoml
inc
or
rolb
push
mov
dec
and
dec
mov
popf
orb
pop
xor
mov
adc
cmp
adc
sub
and
lret
mov
adc
insb
out
arpl
push
mov
adc
or
mov
lahf
and
jne
ret
or
ret
popa
jl
adc
mov
jg
cmp
cmp
je
pop
xor
add
xor
xor
or
in
shrb
dec
outsb
push
xor
jb
add
mov
sti
xor
les
fbstp
mov
repz
jno
sahf
add
sahf
cmp
jno
or
mov
xor
xor
adc
and
js
std
shl
add
je
fsubrs
je
cmp
mov
test
std
lcall
and
jo
jmp
or
jno
pop
or
and
jo
lock
fcmovu
je
loopne
aam
push
mov
addl
and
mov
aas
addb
jg
dec
pop
je
insl
jb
or
fidivs
pusha
sti
repnz
cmpsl
ret
jmp
push
aas
cmp
pop
sbb
pop
aas
adc
dec
lret
in
mov
adc
add
sbb
pop
push
andb
sbb
pop
scas
push
add
inc
nop
inc
pop
push
imul
or
or
stos
mov
cmpsb
incl
jno
or
dec
adc
mov
mov
les
adc
incl
fnstenv
lods
or
jo
jno
dec
call
sbb
aam
and
mov
xor
test
cs
stc
push
bound
dec
lock
mov
mov
or
and
movsb
adc
sbb
push
mov
fnstsw
insb
pop
adc
cmc
icebp
sbb
icebp
adc
add
sub
and
add
and
and
jecxz
adcb
test
add
mov
fidivs
insb
outsl
fisubrs
call
sub
jo
sub
or
inc
iret
xchg
or
inc
test
mov
cltd
or
mov
mov
fistpl
ret
sti
cs
hlt
add
icebp
adc
sti
mov
lock
adc
or
inc
ja
pop
or
mov
or
mov
gs
or
mov
adc
or
sub
hlt
add
mov
sbb
mov
jno
mov
pusha
or
inc
testb
xchg
loope
inc
mov
arpl
pop
cmp
xor
dec
cmp
dec
mov
add
es
je
dec
mov
mov
daa
adc
inc
xorl
add
jmp
mov
xchg
jl
es
shll
cld
cmp
xor
sub
rol
push
es
mov
or
dec
ja
mov
movsl
call
mov
movsl
xchg
fdivrl
lock
pop
test
into
fcmovnbe
jg
add
movsbl
sub
mov
jg
imul
insl
mov
ds
addb
fistl
sub
shr
pop
pop
sbbb
pushl
pop
mov
or
fwait
push
add
rcl
add
mov
add
sub
ja
jb
or
fisttps
ja
mov
lds
pop
pushf
jne
test
mov
push
jl
orb
pop
xorl
and
in
pop
pop
adc
fmull
xchg
shl
and
test
dec
andb
int
pop
fucomi
push
shll
and
push
push
cmc
add
or
sbbb
bnd
cli
or
addl
push
hlt
call
inc
popa
xchg
inc
ret
add
andb
insb
ljmp
subb
pop
push
test
and
les
rcll
pop
test
shl
inc
popf
or
ret
add
push
movb
stos
rolb
cmp
push
ret
dec
repz
mov
mov
test
cld
shlb
fistl
mov
rolb
or
in
jmp
mov
call
add
shr
sub
push
cld
adc
aas
xchg
fs
inc
xchg
imull
rcll
adc
xor
xchg
adc
mov
rolb
cmp
enter
fwait
mov
rclb
cmp
testb
and
ret
clc
pop
jmp
lcall
stc
lds
add
jmp
mov
movsb
test
mov
pop
mov
sbb
mov
or
inc
test
scas
and
test
and
shlb
push
rolb
adc
mov
mov
adc
dec
jl
enter
fildl
inc
sbb
aaa
or
enter
roll
enter
mov
rorl
pop
inc
shlb
repz
sbb
adcb
je
add
mov
sbb
rep
and
ljmp
and
icebp
inc
test
arpl
add
jne
rolb
or
test
fisubs
mov
nop
aaa
or
lcall
inc
testl
jne
shrb
push
rcll
and
jmp
sbb
mov
dec
jecxz
test
pusha
orb
addb
fbld
movb
xchg
sub
sbb
out
ret
lock
loop
sbb
ljmp
add
clc
sub
pusha
cmp
lods
aam
out
loope
jbe
fcmovne
scas
ljmp
xor
dec
addb
sub
mov
xchg
rcrb
jbe
adc
dec
or
push
loopne
mov
pushf
xchg
pusha
xchg
call
pusha
addl
or
out
add
lcall
or
loopne
fs
pusha
jae
in
add
add
in
scas
sub
mov
inc
mov
push
movsbl
jl
call
push
pop
push
inc
inc
push
pop
out
inc
mov
pusha
xchg
andb
or
and
sbb
or
dec
and
jne
inc
enter
leave
adcb
pusha
or
add
sub
fcos
incl
idiv
jecxz
adc
psubsw
push
je
subl
cmp
jle
jl
adc
inc
movsb
and
cs
std
mull
jmp
mov
fdivr
pop
adc
fisubrl
and
fadd
aad
faddl
xor
xor
sti
bound
cmp
xor
fdivr
add
mov
mov
andl
add
outsb
or
cli
sub
or
push
nop
bound
mov
addr16
clc
or
fsubrl
clc
push
ds
or
pusha
and
xor
push
inc
or
push
and
mov
dec
push
pusha
mov
out
jmp
loop
imul
in
or
jmp
shlb
pop
jmp
or
pop
add
adc
mov
push
das
mov
push
xchg
outsb
xor
in
push
xchg
add
jl
cld
idiv
mov
ljmp
xchg
fwait
loopne
popa
jns
sub
loopne
adc
push
mov
inc
roll
test
call
ret
stos
cmp
add
mov
xchg
pushf
and
jnp
add
out
and
push
add
mov
ss
out
mov
divb
cmp
mov
leave
mov
pop
or
xor
or
idivb
add
call
sbb
nop
push
dec
pusha
adc
lods
push
cli
ss
popa
or
int3
and
aam
xchg
nop
add
mov
jg,pn
jl
cmp
jae
loop
add
add
jae
sbb
lods
mov
jg
xchg
jno
mov
pusha
pop
ficoms
gs
outsb
cltd
inc
cld
mov
lods
adc
je
clc
xchg
out
sub
sbb
jbe
or
mov
incl
sbb
pusha
js
call
add
lods
or
push
stos
mov
pop
sbb
jmp
mov
mov
and
mov
jg
outsl
adc
xchg
dec
jno
adc
aam
or
jb
push
loopne
shl
addr16
mov
mov
adc
mov
out
lock
in
jg
test
cmp
or
icebp
lcall
mov
incl
sbb
push
mov
xor
adc
mov
ret
adc
mov
mov
je
adc
push
sub
mov
das
add
add
and
mov
push
lret
mov
in
aas
xor
add
out
xor
xor
loop
mov
xor
lock
sahf
test
or
mov
lock
into
jg
ror
add
fmull
andb
fucomip
jge
xor
incl
fisttpl
lcall
lock
sub
outsb
ss
roll
fisubs
lcall
fistps
fwait
mov
pop
push
cld
xor
xor
cmp
cmp
sbb
or
arpl
clc
push
xor
inc
mov
stc
lret
xchg
jmp
xor
sub
in
lock
or
pop
or
sete
xor
clc
dec
cld
mov
jmp
mov
sahf
clc
out
xor
sub
rclb
cld
xor
adc
pop
hlt
mov
add
sub
ret
inc
sub
and
add
insb
adc
push
vpshuflw
incl
pop
add
xor
call
insl
popa
loopne
add
jp
shlb
jae
mov
movsb
xchg
and
add
jo
adc
push
rorb
aas
mov
cld
xor
inc
fs
add
lock
aam
mov
jl
or
push
xor
shlw
xchg
movsb
xor
mov
pop
add
inc
sub
data16
jns
sbb
js
dec
or
mov
mov
sti
lcall
sbb
xchg
repz
pop
mov
je
lcall
add
mov
cmp
add
cmp
add
mov
insl
or
outsl
insl
or
insb
push
and
mov
cld
inc
ds
imul
or
mul
mov
xlat
adc
push
add
add
xor
fiaddl
mov
inc
adc
sbb
dec
mov
adc
jg
loope
divb
xchg
add
call
imulb
mov
ds
jp
outsb
adc
enter
sub
divl
out
cwtl
adc
mov
and
mov
jmp
int3
rorb
ljmp
push
imul
push
in
add
jno
aad
push
adcb
pop
lret
js
push
test
pusha
inc
cwtl
movl
pusha
xchg
pushf
or
rorb
fs
dec
push
inc
dec
mov
rolb
xorl
pop
aad
cs
mov
movb
adc
clc
xor
call
xchg
cmpsb
sbbb
or
dec
pop
insb
xor
adc
lods
xchg
dec
rolb
out
pop
in
cmpsl
adc
stos
or
inc
cld
pop
adc
push
test
mov
or
push
shl
pop
and
cmc
call
jne
and
mov
jo
jbe
cmpb
das
movsl
out
add
lret
push
clc
xor
adc
dec
sub
jle
clc
aaa
test
push
lock
sub
loope
dec
add
inc
adc
int3
repnz
call
loope
jo
adc
inc
add
cmpsb
mov
push
mov
adc
es
xor
push
adc
insb
push
add
xor
push
push
push
addl
xchg
mov
fidivrs
or
mov
cmp
sub
es
sub
adc
push
popa
push
jnp
push
ja
cld
mov
addb
or
add
std
pop
mov
out
or
jl
push
or
imul
popa
mov
jp
and
ljmp
cmp
lea
pop
xchg
scas
andb
xchg
cmp
inc
cmp
inc
ljmp
adc
out
outsl
insl
test
repz
pop
add
imul
subl
ja
push
dec
sbb
dec
push
mov
loopne
jp
fs
outsl
nop
addb
shl
imul
inc
add
jno
inc
adc
mov
leave
shlb
cmp
lock
call
movsl
hlt
incl
imul
cmp
mov
lock
cmp
adc
int3
mov
or
clc
not
mov
mov
daa
scas
pop
xor
call
enter
shlb
cmp
or
lcall
inc
push
push
inc
and
enter
add
inc
andb
mov
push
cmp
je
pushf
subb
ficoml
jmp
mov
mov
sbb
pop
xor
jb
test
sbb
sbb
xlat
sete
lea
add
int3
fmuls
or
pop
test
or
jmp
sbb
addl
scas
pop
push
scas
push
inc
jo
dec
test
das
add
push
mov
call
mov
inc
inc
test
rcrb
andb
push
incl
hlt
mov
push
je
jl
xor
je
out
cmpsb
imul
xor
pushl
and
inc
xchg
test
cmpsl
dec
movb
shlb
nop
xchg
pop
mov
pop
call
mov
fidivrl
dec
jo
arpl
jp
fisubl
mov
push
jb
add
imul
adc
sti
jmp
orl
cmpb
or
add
out
mov
inc
jbe
movsb
ljmp
or
or
cmpsl
jp
or
in
inc
push
push
mov
mov
pop
jo
out
jb
sbb
shlb
data16
clc
daa
in
or
ljmp
jl
clc
fs
out
mov
inc
mov
fidivs
and
jb
or
in
inc
adc
in
inc
cmpsb
sbb
pop
mov
ret
mov
xor
push
int3
add
lea
or
scas
std
insb
push
push
sub
call
pop
subb
push
mov
mov
add
mov
lret
push
jb
lods
cmp
add
xchg
adc
jo
push
mov
in
test
mov
movb
sub
sub
cmp
jne
push
aaa
mov
xchg
mov
adc
cmpsb
popa
add
call
filds
jp
and
cmpl
dec
jne
jno
mov
dec
loope
int
pop
call
dec
mov
xchg
add
adc
add
out
cmpsb
shlb
or
stos
clc
mov
adc
or
icebp
pushf
outsb
adc
xchg
ss
pop
add
add
mov
bound
rorb
xchg
call
push
add
xchg
xchg
and
and
sbb
lcall
xorb
inc
xchg
es
add
mov
dec
movsl
sbb
dec
cwtl
fmulp
inc
rclb
test
pop
lods
pop
or
mov
lea
stc
scas
call
nop
jmp
cld
std
call
pop
inc
les
xor
pop
pusha
xor
lea
xchg
cmp
shlb
dec
call
dec
pop
in
fiaddl
cmp
push
sbb
inc
lds
xor
into
pop
add
push
inc
idivb
jo
inc
mov
jne
test
add
mov
rclb
aam
fcoms
mov
mov
push
sub
mov
xchg
push
adc
popa
xchg
add
in
shr
xor
dec
jmp
jl
adc
fs
pop
cmp
or
add
pusha
pop
adc
sub
movsl
imul
rorb
cs
inc
and
loopne
push
call
xor
das
add
insb
daa
push
scas
addb
or
fwait
js
push
push
adc
mov
add
sbb
divl
adc
in
jb
int3
mulb
sub
mov
push
dec
cmp
dec
fcoms
orb
sbb
call
fsubs
ret
inc
pop
lea
or
push
cwtl
jae
test
lods
push
adc
stc
sub
mov
insb
jl
adc
push
sbb
xor
pop
test
pop
sbbl
add
adc
ss
fs
cs
adc
jecxz
inc
sbb
dec
pop
in
mov
add
mov
add
jb
jg
call
daa
rorl
bound
inc
pop
and
xor
push
into
add
mov
pop
clc
lods
cli
or
mov
push
pop
xchg
sbb
mov
sbb
fwait
mulb
add
mov
rorb
divb
mov
sbbl
ss
aaa
ret
mov
or
clc
jmp
bound
in
mov
adc
loopne
pop
dec
dec
sub
leave
add
test
jl
data16
push
add
test
lret
jo
add
clc
and
scas
call
ss
jbe
sbbb
adc
loop
mov
ss
mov
mov
mov
lcall
adc
or
mov
jns
aaa
xor
xor
sub
jmp
inc
dec
dec
std
cmpsb
lea
cwtl
sbb
or
xchg
sub
and
aad
xchg
push
inc
in
inc
jns
loopne,pt
dec
or
jbe
fsub
lret
jge
dec
fimull
push
call
cmp
pop
clc
ss
std
ret
sahf
je
loope
add
fsubs
mov
loopne
dec
cwtl
cmpb
dec
push
push
push
push
rol
cmp
mov
fwait
clc
add
ja
shlb
push
lret
jp
shlb
push
and
faddl
popf
rolb
jl
jb
add
adc
aaa
or
sub
setg
add
inc
fwait
pusha
cmp
sahf
insl
jl
int3
push
outsb
jmp
jbe
mov
jecxz
add
cwtl
dec
inc
inc
jmp
clc
mov
fists
pusha
inc
rdpmc
lcall
push
stos
aam
cmpsb
gs
push
sti
popa
dec
jne
test
xchg
ret
mov
jl
orl
pop
push
xchg
and
call
bound
add
fildl
es
push
es
in
scas
jmp
decl
inc
cli
adc
jle
mov
mov
or
or
adc
jmp
test
add
add
lea
sub
popa
fcomps
jg
insb
add
mov
fcmovnbe
stos
in
xchg
mov
adc
mov
inc
xor
jl
pusha
test
call
or
mov
sar
loope
add
xchg
sbbb
cli
jb
jmp
dec
add
xchg
out
xchg
add
push
bound
push
push
add
add
ja
add
adc
adc
dec
mov
pushl
xchg
dec
out
add
inc
cmp
mov
or
std
hlt
std
rolb
add
push
add
fwait
rorb
mov
mov
sbb
push
cmp
cmpb
or
jge
jecxz
sub
cld
incl
pop
or
test
cmpsl
call
add
push
adc
int3
fiadds
and
loope
jne
push
stos
pop
dec
pop
jne
pusha
cmp
push
pop
add
xorb
jo
add
jmp
xchg
add
pop
add
add
inc
ja
sbb
mov
ljmp
loop
cs
add
gs
xor
or
add
test
add
pop
imul
adc
pop
sub
push
or
mov
push
xlat
sub
fsubrs
loopne
movsb
xor
ljmp
push
xchg
mov
push
cwtl
add
dec
insl
popa
ret
repnz
xchg
adc
inc
rcr
dec
dec
icebp
neg
dec
jbe
dec
ret
fildll
mov
lcall
xor
fimuls
and
pop
and
push
push
lock
or
sbb
add
dec
and
inc
clc
add
clc
pusha
or
mov
mov
lret
movl
sbb
hlt
lods
push
loope
in
out
shll
cmp
mov
mov
push
mov
jbe
mov
cwtl
ds
and
adc
or
mov
jbe
cli
sbbl
mov
lea
adc
pop
ja
data16
or
ret
dec
out
lcall
cld
mov
sti
xor
ficoms
sub
in
adc
adc
jb
pop
dec
push
cmp
sbb
jge
xchg
pop
cmp
dec
push
mov
mov
dec
push
ret
add
fildll
mov
inc
xor
push
adc
dec
mov
inc
push
cld
int
mov
cmp
mov
inc
ret
pop
jb
out
pop
pop
ret
incb
nop
bound
or
ret
fiaddl
fisttps
pop
repnz
xor
loop
or
and
add
or
xchg
adc
loope
fs
testb
fdivrp
add
and
pop
fwait
add
pop
aam
dec
sbb
adc
lds
jmp
xchg
into
inc
adc
adc
xor
movsl
cmp
cmpsb
jg
mov
pusha
mov
lea
and
movsl
push
jo
push
lea
add
pop
add
inc
pop
jp
or
adc
adcb
dec
aam
or
mov
mov
xchg
and
aas
lock
inc
les
add
mov
adc
andl
push
add
icebp
add
ds
xchg
pop
jnp
adc
nop
jo
push
or
jo
or
jle
add
mov
or
aam
xchg
test
add
jne
test
subb
adc
adc
and
jo
cmpb
call
jo
adc
mov
jo
andl
cmp
add
das
pop
mov
pushf
sbb
cltd
add
mov
rol
sub
mov
sub
mov
js
or
fcoms
leave
aas
js
pop
adc
in
lods
inc
mov
ret
mov
insb
jo
sub
dec
jbe
jge
xor
sub
mov
xor
in
nop
out
ja
add
xor
cld
test
lcall
adc
cmpl
add
enter
inc
in
insl
xchg
inc
push
sti
or
mov
sub
ljmp
pop
adc
add
inc
out
add
add
divl
push
and
push
jl
cld
je
xchg
adc
mov
jp
dec
xlat
mov
inc
mov
pop
xchg
adc
jle
mov
push
mov
dec
movsl
call
lock
jo
xchg
mov
js
adc
cmpl
pop
jle
add
test
mov
and
mov
jo
xor
sub
and
mov
repz
jae
xchg
icebp
mov
sbb
cli
jg
and
push
adc
lret
push
jae
jg
lock
dec
xor
jo
shll
or
pmaddwd
inc
or
mov
mov
and
and
movsb
and
sahf
xor
sub
mov
sarb
jo
dec
dec
and
and
add
inc
ljmp
sbb
add
inc
jle
or
je
mov
push
xor
push
pop
pop
xchg
pop
cmp
inc
testl
add
xchg
sub
sbb
push
int3
or
incl
mov
cwtl
add
mov
lock
inc
mov
cmpsb
movsl
push
test
arpl
pop
or
push
lods
fwait
pop
pop
push
and
add
shrb
xchg
mov
dec
add
adc
enter
xchg
jmp
add
int3
rolb
lock
add
lds
jo
mov
mov
bound
aaa
insb
xor
xchg
mov
xchg
and
inc
dec
push
popa
push
push
pop
pop
dec
add
mov
pop
lock
jg
adc
jae
nop
inc
jo
xchg
fwait
clc
or
mov
inc
cmpb
call
xor
incl
adc
jo
push
pop
add
pusha
insb
pop
ljmp
mov
jg
mov
mov
lock
mov
cmp
lock
les
adc
or
rcll
mov
call
cld
pop
pop
cli
and
mov
dec
mov
mov
call
inc
mov
or
or
mov
jne
push
push
icebp
or
xor
inc
sbb
rorb
pop
pushf
xor
sub
aam
pushl
stos
xor
jo
mov
push
jb
jbe
insl
adcb
push
sub
mov
mov
call
je
push
push
mov
mov
adc
in
gs
sub
mov
jl
rol
faddl
lcall
xor
or
rcrl
das
and
xchg
xor
ret
decl
or
into
and
cmpl
pop
pop
inc
std
mov
adc
add
inc
add
mov
icebp
popf
adc
mov
inc
shlb
xchg
jno
mov
adcb
pop
mov
les
ret
cmp
xor
jbe
dec
pop
sbb
jl
adc
sarb
ljmp
add
jo
pop
pop
test
iret
out
inc
mov
popf
sti
and
jmp
test
xor
es
call
add
add
sbb
xchg
add
dec
add
mov
test
adc
xor
and
fildll
cld
jno
sub
std
add
pop
mov
push
shrb
fwait
insb
push
jl
je
xor
adc
xor
jo
fdiv
ja
jo
addb
sbb
clc
jmp
loope
xchg
cld
xor
inc
xor
sysexit
xchg
loop
pop
lcall
push
and
mov
ret
inc
cs
push
push
stos
mov
xchg
scas
clc
jle
mov
push
push
pop
add
adc
push
inc
fsubrs
cmp
lock
cld
cmpsb
pushl
xor
sub
pop
add
xor
out
pop
std
and
mov
jne
cmp
inc
jmp
or
in
push
repz
cmpsb
fsubr
repz
add
cmp
dec
inc
xchg
adcb
fwait
and
dec
xorb
xor
and
clc
add
xor
push
inc
mov
test
outsb
and
int3
hlt
mov
inc
inc
xchg
jo
sbb
out
pop
add
scas
ret
mov
mov
inc
out
ss
jne
rolb
pop
pusha
clc
aas
mov
cmovns
add
gs
incl
mov
sub
add
dec
jle,pt
imul
push
jo
jecxz
adc
mov
adc
xchg
test
lret
add
or
push
leave
mov
je
xor
inc
out
orb
adc
incb
mov
mov
mov
push
in
sti
pop
and
lret
push
add
repnz
and
xor
andb
ljmp
mov
xor
xor
jno
cli
and
cmp
or
pop
jo
push
xchg
xchg
sub
daa
inc
push
fcmovb
push
mov
mov
aas
xor
mov
xor
and
inc
mov
pushl
adc
mov
je
call
sub
cmp
mov
paddsb
dec
mov
xchg
mov
xchg
call
loopne
add
pop
adc
pusha
fisubrs
push
push
call
and
adc
cli
sahf
push
dec
loopne
out
je
pop
push
dec
push
adc
inc
dec
jl
aam
sbb
or
fiaddl
adc
add
push
test
lock
xor
pop
cmp
call
and
aad
cmp
jg
mov
mov
cmpsl
add
addb
loopne
xor
or
or
lcall
je
add
pop
adc
js
lock
mov
add
push
and
les
mov
mov
inc
sub
sub
outsb
stos
inc
ss
ret
fidivl
mov
push
sub
test
test
fmul
adc
sbb
push
dec
notb
push
mov
inc
cmp
push
or
fmull
adc
cmp
adc
scas
decb
push
sbbb
adc
mov
mov
mov
push
shlb
mov
push
and
push
push
push
repz
insb
sub
and
push
aaa
pushf
mov
inc
int3
testb
mov
lea
add
pop
testb
adc
push
xchg
and
pusha
add
lea
jmp
mov
push
pop
sahf
jl
test
inc
loop
xchg
and
or
dec
push
and
adc
repnz
sbb
lret
sbb
movsb
movsb
cmp
sub
repnz
and
sbb
push
outsl
inc
jl
or
push
rclb
or
and
dec
cld
rolb
inc
lret
les
call
cmp
push
jg
or
shlb
jnp
push
js
add
test
aad
xor
push
shlb
add
clc
pushl
aam
xchg
ret
movsb
les
scas
enter
pop
cs
popa
popf
dec
dec
and
insb
out
js
or
cli
xchg
decl
roll
xchg
add
push
js
decb
xlat
and
adc
xor
push
push
jp
addr16
jo
je
or
xor
cmovs
fs
pop
ret
cld
test
sbb
clc
retw
fmuls
shrb
mov
add
ret
mov
sbb
dec
inc
nop
jo
cs
pop
mov
dec
jae
dec
dec
into
cmp
inc
sti
xchg
mov
fildl
pushf
and
inc
sub
sarl
lahf
insb
xchg
je
popl
dec
sub
aaa
je
push
filds
adcl
fcom
shrb
add
xor
cmpsb
jb
mov
xor
incb
add
cmp
push
dec
mov
add
sbb
test
inc
testb
xor
sub
lods
dec
std
push
shlb
test
push
or
adc
rolb
aad
adc
adc
ret
push
adc
shrb
jg
xor
sub
dec
in
inc
mov
push
jbe
rclb
mov
mov
push
xchg
lock
call
mov
xor
repz
or
push
enter
push
cmc
or
hlt
adc
stos
imul
push
jle
sbb
adc
fidivl
lods
ret
add
xor
insl
and
and
data16
or
jecxz
jo
push
xchg
push
xchg
inc
cwtl
loopne
mov
hlt
clc
pop
pusha
cmpsb
hlt
lds
insb
sub
and
aaa
bound
or
push
loopne
add
push
add
es
xchg
loopne
or
mov
pusha
popa
das
push
loopne
popa
push
and
shl
sub
cwtl
and
bound
push
std
push
pop
fwait
hlt
and
call
jmp
xchg
into
ds
pop
fmuls
jbe
mov
je
xor
addr16
mov
inc
jle
push
push
sbb
xor
sbb
lods
add
add
push
sbb
push
push
loopne
lahf
push
andl
adc
shlb
cmpb
mov
or
leave
xchg
aam
cmp
cmpsb
dec
ficoms
ja
stos
pop
and
ficoms
lock
shlb
arpl
sub
pusha
push
loope
jle
add
jo
push
mov
dec
add
xlat
add
test
cs
shll
test
adc
jecxz
loopne
cwtl
test
orb
in
jl
cld
pop
and
mov
mov
ret
out
pop
or
icebp
popf
adc
bound
add
xchg
pop
pusha
es
insb
pusha
int3
adc
fs
nop
dec
aam
popa
xor
inc
adc
ss
and
adc
push
pusha
inc
test
add
scas
inc
jns
xor
in
xchg
add
insb
mov
adc
nop
outsl
jg
pusha
fdivr
inc
push
or
fidivl
push
icebp
fisttpl
in
adc
loopne
popf
cwtl
and
and
pop
sbb
arpl
test
hlt
sarb
or
jecxz
fldt
sbbl
adc
call
pop
or
add
pop
or
fcmovnb
test
pusha
adc
and
mov
mov
cli
inc
pop
rcrb
and
xor
and
xchg
add
in
push
loopne
push
je
es
loopne
dec
add
call
xor
call
xchg
xchg
or
add
cmc
mov
pop
cmp
sub
adc
jbe
loope
jmp
and
push
push
call
pop
cld
fadds
adc
fs
add
mov
jno
or
add
jecxz
or
ror
jmp
in
and
dec
add
inc
push
push
pushw
add
mov
pop
testl
lea
or
sbb
sub
or
lds
lock
sub
call
inc
out
xor
push
xor
clc
xor
lock
std
push
push
cltd
clc
mov
sti
jno
scas
xorb
shll
and
push
xor
mov
dec
rcrl
jb
fisubrl
repnz
inc
ja
xor
sbbl
push
orb
mov
xor
ret
incl
mov
lock
mov
or
roll
xor
shlb
lret
cld
into
mov
or
xorb
ret
add
lods
mov
add
lcall
mov
mov
or
test
mov
outsb
outsw
dec
add
aad
or
ss
xor
adcb
mov
test
fimull
data16
adc
adc
rorb
adc
dec
ret
clc
iret
bound
mov
pop
notb
push
bound
adc
jmp
lock
mov
adc
movsb
inc
mov
mov
jno
sarb
add
lods
test
or
jne
cmp
jbe
lock
cmp
inc
nop
add
mov
cmp
ds
sub
ljmp
sub
fists
adc
mov
xor
inc
xchg
aam
pop
mov
dec
insb
or
dec
mov
adc
xor
ss
lock
jae
adc
xor
push
lcall
shll
fisubl
imul
push
cmp
push
xor
outsl
xchg
loopne
and
add
xor
ljmp
cs
into
pop
pop
in
sub
sbb
add
cmp
push
fs
mov
scas
lea
pop
div
pop
jecxz
pop
xor
add
xor
add
fs
add
sti
data16
fiaddl
jl
cs
lock
out
adc
add
or
addb
mov
leave
ret
push
adc
rcrb
jo
loopne
inc
or
xor
xchg
mov
jo
sub
push
push
pop
repnz
sub
inc
mov
or
incl
mov
xor
cmp
add
call
xor
cmpsb
mov
jg
dec
jmp
jne
mov
jb
fsubr
or
cld
dec
lock
pop
add
add
add
jl
lock
call
and
je
mov
mov
testl
pop
add
dec
mov
loopne
pusha
imul
orb
add
push
or
add
or
pop
or
or
push
rorb
mov
jle
mov
add
cmp
add
or
pusha
xchg
mov
adcl
data16
sti
sub
test
inc
jl
cmp
shlb
jle
xor
pop
jbe
jl
movsb
xor
add
pop
and
xchg
je
mov
add
mov
mov
and
je
mov
das
inc
sahf
mov
jl
jge
sbb
das
fdiv
add
jge
or
jmp
jo
loopne
sbbb
testl
inc
mov
shlb
je
jne
ret
dec
shlb
or
fildl
mov
in
cmp
xor
sbb
xor
jno
outsl
popa
jne
dec
xchg
xlat
xor
jmp
adc
sbb
mov
dec
insb
repnz
add
js
loopne
data16
and
hlt
movq
mov
fdivs
add
decl
test
or
dec
add
ss
cmp
mov
mov
subl
and
mov
clc
decb
ds
mov
rcrb
lock
mov
cld
lock
scas
jno
aad
incl
cmp
or
pop
repz
jl
inc
inc
push
inc
fdivs
fsubl
jo
mov
mov
pop
inc
xchg
lods
movl
jp
test
xor
add
clc
ljmp
cmp
orl
push
xor
push
push
push
mov
ljmp
js
mov
adc
mov
nop
xchg
or
jne
or
dec
pop
and
loopne
nop
ds
and
mov
lds
mov
push
mov
sub
idiv
add
cmp
stc
push
inc
test
push
mov
push
lcall
in
repz
sub
inc
push
jb
jne
call
inc
clc
pop
rorb
insb
call
lods
mov
fsubs
sub
add
mov
stos
mov
inc
xor
cmp
lock
testb
xor
repnz
dec
add
sub
xor
cwtl
fcomip
fcmovb
outsl
ret
xchg
push
je
inc
push
mov
lea
add
cltd
ss
stos
mov
loopne
cli
and
es
mov
ja
sarb
adc
push
jo
scas
add
xor
ret
insl
xor
je
insb
lods
shr
mov
pushf
push
jg
mov
and
loope
add
xorb
and
mov
xor
stos
das
test
std
sbb
lock
add
popf
shl
stos
icebp
div
mov
fistl
push
scas
inc
divl
or
mov
inc
xor
movb
jl
pop
push
pop
in
jge
fwait
mov
pop
mov
ss
outsl
adc
add
sbb
mov
sbb
ljmp
cmp
push
sarl
add
lea
or
cmp
lock
adc
add
call
enter
lock
fidivs
sbb
xor
cmpsb
shll
test
cwtl
push
ljmp
mov
or
jl
jp
jbe
mov
divb
push
push
mov
sub
push
inc
test
clc
xor
fnsave
or
pop
lods
sub
out
daa
mov
jne
lock
xor
push
push
lret
lods
xor
push
cmp
jae
inc
movsl
lock
icebp
inc
push
push
shl
clc
ja
pop
sub
cmp
and
mov
jne
out
clc
outsl
pop
out
mov
mov
or
jb
sbb
lock
loope
pop
jmp
or
xor
mov
xor
add
clc
jg
and
push
mov
jo
je
push
mov
or
lock
mov
xor
cmpsl
add
jnp
pop
dec
lock
shll
mov
pop
test
xor
lret
pusha
adc
filds
sbb
xorb
sbb
lahf
inc
add
aas
pop
add
lahf
call
add
movsb
leave
inc
jo
movsl
movsb
cmp
xor
ret
lock
sub
add
hlt
xor
arpl
aaa
pop
dec
sub
sahf
cmc
add
addb
clc
mov
xor
and
lods
or
xor
lock
sbb
ds
push
aad
rolb
adc
adcl
aam
jp
call
test
sbb
ds
adc
pop
mov
dec
dec
insb
jmp
data16
sbbb
pushf
and
stos
add
push
in
outsl
aam
or
in
add
lock
adc
clc
pushl
jmp
adcb
inc
fistl
and
loopne
enter
es
cmc
push
sbb
pop
ret
add
push
push
push
mov
hlt
scas
dec
or
aad
sbb
insl
mov
and
pusha
incl
adc
add
sub
jmp
int
mov
push
and
sbb
daa
dec
fdivs
pop
rcll
jl
push
sbb
mov
add
push
dec
push
inc
mov
pop
sbbb
gs
movsb
ret
fidivrl
fsubl
aaa
sub
orl
je
or
adcl
sbbb
orl
lea
sbb
fsubp
dec
test
sbb
fsubl
dec
aad
inc
and
xor
sbb
mov
pop
jecxz,pt
sbb
mov
add
add
add
hlt
cli
and
lock
inc
inc
add
adc
andl
xor
test
addb
pop
call
adc
rolb
xor
ret
mov
fildl
cmpsb
add
pop
in
ss
insl
inc
mov
subb
cli
pop
fstps
xor
leave
xor
xor
inc
push
and
andl
or
ret
cli
jo
push
ret
mov
ja
es
jle
or
mov
adc
sub
fstpt
inc
cmc
inc
ss
and
outsl
stos
jle
rcr
fwait
pusha
rolb
inc
push
jne
outsb
xchg
fimull
adc
jg
pop
xor
into
call
jle
pusha
and
lret
mov
dec
inc
mov
mov
sti
decl
addb
jne
jg
rclb
hlt
in
call
jl
push
cmp
or
jnp
ja
jp
xor
dec
push
addl
mov
add
adc
fwait
adc
jp
add
and
xchg
aam
aas
pop
and
xor
dec
sbb
inc
dec
xchg
stos
enter
rorb
sbb
ds
xchg
push
jg
call
mov
addr16
stos
fidivl
add
enter
mov
dec
push
pop
les
push
add
dec
dec
push
es
lods
add
in
mov
scas
add
lea
dec
icebp
test
mov
or
jo
mov
pop
adc
clc
addl
push
mov
or
pop
push
mov
mov
fsubs
push
sahf
inc
test
sub
adc
je
mov
addl
pop
movsb
ffreep
mov
xor
push
xchg
dec
and
mov
inc
push
jmp
lods
mov
push
inc
clc
rcl
adc
test
into
hlt
add
push
mov
sbb
scas
movsb
add
add
cmp
adc
adc
push
ret
pushf
bound
sub
dec
cld
andb
pop
push
inc
cmpsl
andl
ljmp
shlb
mov
mov
mov
xchg
inc
xlat
mov
lds
mov
push
adc
and
incb
adc
mov
or
and
mulb
mov
dec
inc
mov
or
das
insl
cld
lcall
push
add
pusha
imul
pusha
xor
dec
int
xchg
pushf
or
or
pop
call
push
mov
jecxz
or
sub
lret
loope
adc
ljmp
into
adc
rclb
movsb
inc
adc
in
popa
sti
incl
pushl
inc
test
decl
cld
pusha
sbb
jg
pusha
adc
loope
sbb
inc
and
xchg
inc
add
out
cwtl
jno
mov
clc
add
add
jecxz
movsb
dec
insl
or
push
push
loope
rolb
shrb
xchg
jo
pop
movsb
cld
loopne
call
pop
testl
cmp
scas
cmp
fadd
adc
inc
push
pop
dec
push
adc
add
pop
sti
loopne
popa
pop
fs
std
ret
jg
push
pusha
and
add
ja
push
cltd
cmp
adc
cmpsb
cmp
out
icebp
data16
push
inc
add
adc
call
sub
sub
cmpsb
jl
mov
orb
jb
mov
inc
adc
or
sbb
arpl
push
dec
pusha
push
sti
and
push
pop
jge
lock
sbb
pusha
cmp
push
cmpb
or
cmpb
xor
add
decl
dec
mov
movb
add
and
add
xor
popf
js
test
adc
xor
call
pop
mov
pusha
push
mov
and
orl
out
inc
add
pusha
lods
dec
setns
ret
mov
popa
xor
and
pop
adc
add
shlb
loopne
xchg
xor
outsb
test
fbld
sbb
adc
aas
adc
jecxz
syscall
test
aam
mov
lock
push
push
repnz
movsl
push
fbld
pushf
mov
mov
mov
js
loopne
movsb
or
adc
sarb
add
pusha
and
jmp
mov
mov
sti
jne
out
add
ds
enter
les
mov
imul
sub
and
and
mov
xchg
outsl
mov
adc
mov
pop
in
and
loope
lods
inc
push
pop
test
dec
and
pop
xor
loopne
add
add
orb
mov
mov
arpl
push
idiv
jmp
xchg
loopne
inc
cmp
pop
add
subb
out
lock
push
call
test
add
xor
jne
and
or
std
inc
push
pop
pop
xchg
pusha
mov
aaa
or
cld
xchg
or
add
push
push
loope
sti
in
mov
dec
in
add
xor
movsb
jle
push
js
sub
in
ds
decl
int
add
push
loopne
push
pusha
adc
pop
movsl
pop
loop
sahf
or
ds
fdivl
notb
mov
pop
fcomi
sub
push
mov
clc
pop
adc
sub
outsb
addb
mov
jb
inc
pusha
mov
xchg
jp
jl
pop
pusha
xchg
or
adc
or
aam
mov
dec
in
push
jge
or
pop
mov
cld
push
sbb
pop
mov
hlt
or
je
push
nop
jbe
add
test
or
or
add
cld
inc
stos
clc
and
add
xchg
dec
cli
out
push
shll
fisubrs
pop
out
dec
sbb
test
pop
shl
xor
cli
push
lock
cmpsb
insb
ss
jbe
mov
in
xchg
xchg
cmp
ljmp
call
adc
mov
sbb
insl
push
mov
das
push
mov
testl
xor
movsb
sub
mov
daa
xor
mov
stos
adc
ja
int3
push
jmp
mov
or
push
imul
movsb
filds
mov
sub
inc
mov
insl
xchg
int3
jno
add
jp
aaa
jae
and
mov
fbstp
repnz
xor
mov
adc
jg
or
cld
mov
or
jmp
add
cmc
lea
lahf
mov
test
and
or
pusha
or
inc
pop
adc
pop
xor
inc
mov
add
ljmp
and
jo
fs
test
sti
sub
mov
lods
mov
sbbb
ss
sbb
rolb
cmp
lds
in
jno
scas
xor
and
mov
aam
xorb
inc
in
push
sbb
or
or
psrld
jno
push
jno
push
lock
cmc
jmp
popf
add
mov
and
push
or
lds
leave
lods
and
js
pop
xor
mov
and
cmp
es
ljmp
push
lock
add
ret
addr16
xor
and
out
pop
inc
xor
ret
shl
call
rorl
je
cld
inc
out
add
and
sbbb
bound
pop
ja
push
push
inc
adc
lea
ljmp
pop
xor
jg
sbb
mov
lea
xchg
mov
xor
lea
orl
jle
jne
jo
add
mov
and
repz
adc
jmp
outsb
add
imul
hlt
add
bound
cld
fdivp
jle
dec
loopne
es
or
insb
cmp
es
or
pop
add
int3
shl
repz
nop
pop
idiv
mov
mov
add
psubsw
adc
adc
jmp
movsl
sub
cmpsb
movups
je
adc
sub
xor
dec
les
push
add
and
addb
aad
std
pop
push
dec
lock
lock
add
and
add
jg
mov
jmp
xor
add
xor
adc
mov
jp
add
leave
bound
rclb
dec
pop
mov
mov
pop
inc
pop
cmp
add
or
cmpsl
sub
sbb
push
mov
add
mov
add
add
loope
and
mov
inc
push
jmp
dec
orb
push
jg
add
imulb
jecxz
sub
xor
dec
xor
push
and
inc
je
hlt
loop
jo
enter
add
hlt
xor
leave
adc
lock
movsb
push
pop
pop
ret
loope
mov
repz
dec
xor
adc
mov
lea
xchg
shlb
adc
add
jmp
sarb
test
add
sbb
cltd
push
pop
add
test
add
stos
jge
cmp
sub
cmc
outsl
inc
je
ret
inc
xor
push
add
lea
pop
inc
ret
push
jb
jg
sbb
or
fdivl
xor
std
add
mov
jbe,pn
ret
mov
stos
ja
popa
push
fwait
movsb
mov
popf
ljmp
inc
cmp
icebp
lods
pop
dec
es
mov
sub
push
scas
aam
cmp
mov
and
out
add
lods
std
lret
and
cmpb
ss
mov
sub
xor
enter
das
push
add
mov
jl
iret
jb
cmp
stos
scas
ror
dec
repz
sub
fiaddl
ret
adc
xor
ret
add
rcrb
jbe
and
adc
out
ljmp
ret
aad
dec
sub
jne
mov
add
dec
addl
ja
xchg
movsl
hlt
pushl
nop
mov
xor
lock
pop
push
jl
scas
jb
or
arpl
cmp
inc
mov
loopne
mov
insl
sahf
sbb
inc
lea
pop
clc
cmpb
mov
adc
popa
or
lock
ret
xor
lock
sub
sbb
dec
push
adc
jg
lea
pop
call
in
or
mov
add
cli
cmp
scas
sub
pop
lods
outsl
adc
call
push
inc
mov
cmp
sub
imul
roll
mov
movsl
or
mov
ljmp
rolb
pop
xor
dec
jp
push
dec
int
push
cld
push
mov
inc
pop
lds
mov
add
out
sbb
mov
adc
mov
test
inc
adc
xor
add
ss
call
add
inc
xor
or
mov
jecxz
mov
cli
or
and
sbb
mov
mov
fs
scas
sub
pop
cmpsb
icebp
or
lock
lods
call
test
and
cmp
test
ljmp
sbb
adc
jo
ljmp
cmp
jmp
enter
pop
mov
pop
push
jae
outsb
push
add
inc
mov
lock
xor
mov
dec
mov
xor
movsl
cmp
sbb
dec
adc
xor
jae
and
pop
pop
in
mov
cld
pop
in
sbb
xchg
adc
aas
and
test
call
call
or
xor
pop
adc
divb
int3
add
jle
sbb
mov
add
stos
hlt
push
sbb
scas
mov
push
es
lock
fcoms
mov
and
xor
mov
rcr
adc
bound
add
xchg
adc
mov
lret
lcall
xor
outsb
add
add
push
and
and
push
and
lock
adc
adc
insl
je
movsb
mov
sub
inc
in
icebp
test
cltd
cmp
je
in
jl
das
je
fimull
push
cmpsb
lock
rolb
jp
fidivl
dec
sbb
or
xor
cmc
daa
or
mov
jno
fisubrl
hlt
or
and
fs
dec
mov
les
mov
adc
call
enter
inc
in
xchg
xor
test
fs
sub
out
les
ss
or
sti
jne
add
adc
adc
mov
pop
or
orl
xor
dec
push
mov
xchg
push
mov
push
je
push
je
adc
xor
and
subb
or
rorb
notl
jnp
inc
xchg
ljmp
sub
aaa
arpl
aaa
xchg
fs
lods
jmp
pushf
and
pop
push
mov
mov
test
jle
adc
pop
aaa
mov
mov
inc
push
jnp
js
pop
mov
cmovs
mov
push
add
shlb
xchg
jle
std
subb
add
ja
addb
and
inc
lret
mov
add
pop
cmpl
mov
js
insb
lret
mov
ljmp
filds
adc
addb
pop
pop
inc
andb
pop
adc
or
mov
push
lcall
adc
mov
or
pushl
movsb
xorb
std
orl
cmp
inc
lods
addb
inc
js
pushf
or
or
rcrb
test
rorl
orb
and
rolb
icebp
add
imul
xchg
and
cld
xchg
call
xchg
lds
sbb
mov
cmp
add
cli
add
into
in
imul
inc
mov
or
daa
cmc
push
adcb
xchg
add
add
push
pop
add
sub
out
ja
push
and
mov
insl
sbb
pushl
pop
push
dec
add
pop
or
test
mov
jp
push
cmpb
popa
loopne
pushf
data16
je
rol
inc
test
xchg
inc
call
rolb
insb
shrb
sub
lods
push
dec
divl
jne
shrb
out
and
test
imul
sub
dec
out
add
mov
int3
adc
lds
xlat
andb
mov
xchg
mov
clc
shrb
fcompl
jp
daa
roll
aam
and
and
sahf
mov
or
jg
subl
cltd
mov
or
outsl
decl
test
ret
rolb
inc
inc
rolb
popl
jle
mov
test
rolb
add
sub
rclb
push
aad
and
insb
clc
mov
add
push
jp
adc
rol
push
jbe
adc
int
sbb
stos
leave
ret
das
stos
loope
dec
mov
int3
int3
xor
xchg
sbb
mov
sbbb
lret
add
mulb
cmc
and
mov
pop
icebp
push
inc
sbbb
ja
dec
mov
orb
pop
mov
adc
int3
cli
sbb
cli
jbe
xorb
or
mov
dec
fdiv
jg
adcl
sarb
nop
xchg
add
outsl
adc
lods
add
add
pop
push
inc
cmp
scas
mov
cmpb
nop
test
push
pop
hlt
xor
iret
nop
jne
nop
sub
sbb
mov
cmp
into
lock
in
pop
mov
xchg
sub
ljmp
loope
ljmp
adc
sbb
dec
outsb
or
loop
inc
fdivl
test
fwait
sbbl
push
cmp
push
aad
add
pusha
and
loope
rcrb
pop
bound
and
sbb
cmpsb
jbe
add
data16
jne
lods
xchg
rcrl
jmp
push
xor
lods
dec
subb
adc
loopne
in
mov
dec
sub
or
mov
incb
repnz
clc
and
sub
jbe
add
xor
div
and
mov
gs
mov
inc
push
push
lods
adc
pop
lock
adcl
adc
sahf
pusha
adc
or
movb
mov
push
sbb
inc
pop
dec
ret
jp
mov
jg
add
pusha
push
push
push
lods
push
imul
xor
mov
popa
add
loope
inc
jmp
mov
cmpsb
jbe
cld
pop
pushf
and
adc
or
add
mov
loopne
jmp
mov
ss
pop
adc
mov
shlb
add
loop
aam
sub
push
mov
push
scas
add
jg
cwtl
cmp
mov
lret
add
iret
dec
pop
and
add
push
hlt
mov
adc
mov
icebp
or
test
push
push
ja
and
test
repz
sti
in
mov
or
jae
call
add
pcmpeqb
in
testb
jge
cmp
mov
dec
dec
out
push
out
mov
loope
cli
pushf
clc
mov
adc
aam
sub
icebp
jbe
jae
cmp
hlt
mov
js
pop
mov
push
inc
lock
jae
sarl
mov
jmp
and
add
pop
mov
pushf
jb
adc
rclb
mov
rorb
or
aam
inc
xchg
mov
pusha
push
lahf
adc
sahf
hlt
xlat
filds
add
push
js
xchg
mov
inc
jl
adc
add
lds
cli
in
clc
push
scas
or
or
in
pop
mov
imul
lods
push
push
push
xchg
inc
shll
inc
jmp
fst
ja
in
les
and
aaa
ljmp
scas
shll
sbb
sbb
cmp
xor
add
add
cs
lock
inc
dec
dec
or
movsb
mov
push
push
faddl
mov
sub
repnz
sbb
cmp
xor
fs
cli
pusha
stos
add
cmp
sarb
or
push
loopne
mov
pop
lods
add
loopne
dec
cmp
enter
or
lret
loop
inc
call
fidivs
call
in
daa
mov
pop
bound
fldt
idivb
add
ret
push
pusha
sbb
adc
jno
add
decl
rolb
xor
pushf
sub
push
rclb
inc
sub
and
rolb
shll
dec
jp
loopne
sarl
add
and
loopne
xchg
add
out
xchg
cmpb
add
jg
loopne
add
inc
lods
test
and
and
insb
cs
inc
push
push
and
daa
and
sub
ds
test
pop
or
cmp
xor
test
cli
sahf
cmp
test
xchg
lock
or
pusha
add
push
or
int
inc
xchg
sbb
or
iret
xor
push
sbb
lock
jp
jo
add
sub
sbb
jbe
loop
or
loope
sbb
push
addb
out
in
test
push
dec
imul
xchg
and
push
push
mov
scas
fld1
cmpsb
and
pusha
adc
push
or
and
cmp
inc
je
lock
xchg
cli
decb
push
push
push
cmc
pop
insl
call
lock
and
inc
or
jmp
cmp
cmp
ja
push
ss
pop
fildl
add
dec
add
test
add
pop
xchg
add
push
orl
mov
mov
pop
repz
dec
or
xchg
add
ret
mov
jb
ss
mov
adcl
add
inc
push
dec
and
or
adc
add
test
stos
inc
mov
or
mov
rolb
push
adc
ja
push
movsb
push
mov
jo
scas
push
add
jo
adc
push
test
pop
add
nop
sbb
xlat
mov
xor
sub
mov
or
insl
jg
cmp
les
xor
dec
jg
data16
mov
mov
data16
mov
jge
movsl
testb
adc
popl
xor
aam
or
fdivs
mov
mov
loopne
test
out
fiaddl
add
daa
xor
pop
fdivl
fdivl
xchg
cwtl
rorb
ret
mov
jo
cmp
outsb
mov
fstpl
pop
add
jp
faddl
andb
jb
push
xchg
xchg
test
inc
mov
fsubrp
into
lcall
cmp
pushf
xchg
mov
inc
cld
outsl
or
shl
sub
mov
mov
pop
sbb
fs
mov
push
enter
xor
shr
mov
ljmp
test
in
xor
rcll
roll
fcmovnbe
adc
jne
hlt
testl
ljmp
sub
out
jb,pn
push
cmp
ja
jb
cmp
mov
jbe
lcall
add
mov
aam
shlb
or
push
mov
ficoml
jl
add
mov
jno
pop
ret
int3
lods
push
mov
in
sub
hlt
push
adc
jo
rolb
xor
dec
or
clc
jg
mov
push
push
push
cmpsl
and
pop
movsb
ret
rol
test
xor
inc
xor
xchg
mov
or
sub
ret
mov
js
sub
inc
jp
clc
mov
jo
cmp
mov
push
and
and
xorl
inc
dec
cmp
aaa
sub
jmp
dec
dec
or
mov
lea
dec
aam
or
inc
xor
stc
jb
je
and
es
jb
sub
lea
rcl
jb
mov
dec
adc
xchg
pop
jo
cmp
inc
cld
mov
popa
adc
das
cmp
xchg
sub
push
dec
push
outsl
inc
pop
cmpsb
pop
mov
sub
mov
shr
or
and
aam
popa
inc
sbb
and
xor
push
pop
xorb
pop
dec
scas
push
arpl
pop
sub
call
and
or
aaa
mov
or
inc
aam
pop
clc
dec
fisttpl
jo
loop
cwtl
mul
je
xorl
fdivs
or
add
cmp
sbb
adc
pop
jbe
add
cmp
lock
aam
into
add
add
lds
jbe
or
sbb
push
or
inc
mov
mov
add
lock
mov
mov
push
add
pop
push
cmp
movsb
cld
cld
fadds
push
push
fimuls
sbb
pop
sbbb
push
ret
outsb
out
sbb
xor
xor
mov
cmpsb
lock
stc
jbe
cli
adc
mov
mov
push
cmpsl
and
mov
inc
sbb
mov
xchg
add
mov
jle
je
sub
cmpsb
jbe
xor
and
mov
add
xchg
int3
nop
jne
shlb
sti
call
jo
mov
jno
mov
push
mov
aad
es
test
sbbl
fildll
mov
and
sbb
add
adc
scas
or
lcall
addb
dec
dec
dec
and
dec
lock
adc
sbb
or
pop
scas
inc
xlat
clc
shll
dec
test
sub
add
fldcw
scas
sub
js
jecxz
mov
push
or
add
mov
add
les
pop
xor
adcb
mov
xor
cmp
in
loop
inc
sub
mov
inc
add
adc
add
shlb
jb
adc
pop
fsubs
sub
ret
aam
fs
je
mov
and
pcmpeqb
push
iret
push
add
fwait
sub
add
xorl
adc
xor
and
xchg
or
addb
mov
test
pop
mov
pop
mov
mov
sub
aam
je
mov
inc
or
lea
inc
stos
insl
pusha
ret
ret
inc
mov
cmpsb
dec
test
in
outsl
fildll
je
dec
dec
addb
add
jo
and
mov
mov
xchg
jmp
outsb
fst
movl
ds
je
and
inc
pop
rorb
or
sub
fst
adc
inc
mov
inc
add
xchg
add
dec
push
mov
in
xchg
jo
jnp
int3
cld
push
push
xor
push
sbb
mov
inc
cmp
call
inc
ss
jl
cmpsb
movsb
or
enter
sbb
sti
add
push
mov
shl
adc
xor
and
adc
clc
jbe
inc
dec
orl
pop
mov
add
sar
repnz
jo,pn
mov
push
xor
dec
rorb
out
addr16
insb
orb
into
clc
outsl
out
mov
mov
cli
add
or
mov
push
add
decl
xor
xor
pop
mov
jl
movsb
ret
lea
or
push
sar
ret
aam
add
mov
icebp
sbb
push
cld
enter
icebp
mov
xchg
stc
fistps
add
inc
mov
inc
add
sbb
jo
int3
ficoms
push
popa
lret
fists
or
sub
xchg
mov
arpl
test
cli
lea
cld
ret
ja
pop
xorl
je
hlt
pusha
push
xor
jbe
push
es
cmp
dec
mov
mov
cmp
jb
sub
mov
aaa
or
push
cmp
sar
add
pop
inc
pop
and
push
push
mov
cmp
mov
ds
shlb
gs
xchg
jl
scas
adc
fsubs
fstpt
pop
icebp
sub
sub
adcb
rol
and
pop
push
pop
fisttpl
or
jg
dec
insb
add
mov
or
dec
mov
add
xchg
mov
inc
mov
pop
inc
jo
repz
fwait
rolb
xchg
ror
test
jb
add
push
cmp
sub
lods
mov
es
lock
add
mov
popa
cmp
push
xchg
add
shl
leave
inc
nop
mov
push
xchg
clc
in
out
scas
int3
adc
cmp
add
xor
jno
dec
daa
dec
idivl
adcb
add
jb
and
push
mov
push
add
cmp
mov
mov
mov
movsb
add
jb
ret
dec
rorb
addb
fidivrs
in
push
or
cmp
mov
adc
xor
inc
and
cmp
dec
lods
inc
mov
mov
sahf
add
jb
insb
and
es
and
pushf
add
inc
int3
add
insb
push
adcl
mov
or
pop
mov
jl
or
push
and
fcoml
dec
inc
lahf
cmpl
adc
xor
pushf
or
dec
jo
push
sarb
inc
pusha
je
movsb
add
call
cmp
or
xchg
cwtl
rolb
sub
mov
xor
lahf
add
addr16
push
movsb
pop
inc
movsl
ss
fsubl
shlb
subb
idiv
mov
add
inc
cmp
pause
leave
pop
adcl
push
cs
sbb
ds
push
adcb
ret
cwtl
jg
xchg
rclb
inc
leave
sub
movb
insb
sbb
rcl
add
outsl
ss
dec
je
xchg
ja
jl
pop
insl
jmp
std
lods
add
sub
cmp
mov
mov
jecxz
mov
xor
fsubrl
insb
cmc
or
xor
and
loop
and
test
sti
pop
sbb
or
dec
mov
inc
push
stos
js
insl
and
pusha
mov
mov
mov
les
adc
push
push
mov
pop
mov
mov
mov
test
sub
mov
rol
inc
clc
out
dec
or
pop
rcrl
mov
std
mov
pushl
push
push
dec
ret
dec
mov
pop
dec
outsl
clc
ljmp
adc
inc
data16
sbb
adc
xchg
lret
in
stos
int3
enter
inc
cmp
stos
je
mov
mov
iret
std
addb
mov
mov
add
lods
call
mov
sha256rnds2
dec
push
or
out
ret
test
inc
cld
inc
cmpsb
mov
outsl
out
mov
leave
xor
dec
shrb
hlt
ljmp
ror
pop
pop
out
adc
stc
pop
inc
mov
xor
sahf
mov
pushf
and
jl
dec
jl
jp,pn
add
pusha
push
lea
inc
lcall
das
cli
or
addl
jo
push
cli
loopne
out
or
aaa
cs
adc
inc
sbb
loopne
outsl
adc
push
dec
push
clc
mov
pop
pusha
and
xchg
mov
pop
insb
dec
out
add
sub
pusha
cmp
repnz
mov
sub
pusha
pop
pop
add
add
dec
orb
mov
call
icebp
ja
sbb
mov
dec
js
es
pop
dec
test
mov
je
jne
mov
jae
add
xchg
das
sub
loopne,pn
cmp
ja
rolb
xchg
or
mov
sarb
add
mov
sarb
add
adc
sub
mov
fisttps
add
add
js
loopne
subb
inc
sti
incl
cmp
cltd
popa
pop
loopne
cltd
dec
mov
je
aam
jle
sub
lahf
movsb
rolb
or
mov
push
xor
ljmp
xchg
jmp
jecxz
sub
cwtl
mov
pusha
bound
lahf
loop
mov
lock
inc
or
lock
add
nop
add
ficoms
inc
inc
mov
xor
inc
movsb
add
sbb
inc
pop
pop
ljmp
js
fisttps
je
xchg
xchg
js
or
inc
js
jo
rolb
sarb
sub
enter
jbe
mov
sbb
mov
cmp
mov
fdivl
sub
rol
test
sahf
std
and
push
xor
movsb
fwait
inc
adc
mov
push
aam
movsl
sub
pop
dec
out
inc
or
or
inc
outsb
dec
loop
and
jne
pop
dec
loope
loopne
and
movsl
int3
push
pop
je
inc
inc
lahf
loopne
xor
popa
popf
test
pop
test
push
mov
xchg
add
add
or
ret
cmp
dec
loopne
mov
loopne
loop
inc
mov
loopne
sbb
or
lods
loopne
sbb
pop
push
adc
sarb
cmpsb
mov
dec
insl
pusha
cmp
addb
call
fwait
dec
incl
popa
xchg
inc
fidivs
push
je
das
mov
jg
test
add
add
push
cltd
mov
jg
outsl
clc
pushf
xchg
popa
insl
jb
loop
xchg
js
outsl
add
and
pusha
aad
adc
ljmp
pusha
and
rcll
inc
mov
addr16
cmc
add
loopne
pop
jmp
ljmp
push
sbb
jne
add
mov
add
je
mov
inc
loope
das
mov
inc
xor
bound
pop
popa
lcall
popa
mov
push
popa
adc
lahf
cmpsb
pop
popa
push
mov
and
daa
cmp
cld
test
sub
cltd
cli
jl
add
stos
or
adcl
lds
es
cmc
call
push
push
cs
xchg
jp
shll
sbb
jg
inc
jmp
dec
jmp
or
and
mov
insb
or
jbe
testb
int3
int3
mov
filds
sub
sub
stos
dec
adc
adc
add
push
adcl
dec
enter
push
add
push
dec
push
push
dec
movl
xorb
add
and
jmp
lock
pop
inc
and
rcrb
je
xchg
pusha
insl
push
push
xor
or
test
and
and
dec
pop
push
faddp
add
inc
sub
xor
jl
bsr
sbb
jl
decb
jle
jmp
add
add
movsb
xor
fmuls
adc
sbb
and
push
jbe
push
or
rorb
ret
sbb
cmp
adc
lods
ds
mov
sub
adc
loop
add
fwait
xor
into
xor
xchg
xor
mov
cmp
adc
or
dec
les
or
pop
test
out
mov
decl
call
std
movl
pop
sub
mov
push
ret
stos
inc
inc
in
sbb
dec
fistps
in
rorb
inc
push
repz
call
pusha
repz
pop
mov
add
mov
mov
test
out
xchg
xor
mov
call
cs
stos
lcall
movsl
mov
decl
add
push
ret
xchg
xchg
inc
dec
and
pusha
push
js
test
inc
jo
cmp
push
pop
cli
popa
ljmp
pop
jl
pop
push
in
jae
jl
xor
jne
aam
fcomip
enterw
mov
push
dec
xlat
sysenter
ss
sub
rol
inc
fwait
cli
lret
fdiv
pop
and
mov
bound
cmp
adc
mov
inc
sub
sub
and
test
push
sub
sub
lock
jg
adc
aaa
push
nop
push
call
cs
and
pop
xor
das
fdivs
iret
xor
xor
pop
mov
aam
insb
add
push
mov
mov
push
lret
add
loopne
sub
mov
or
je
sub
aam
je
inc
mov
std
ret
insb
xor
sub
ret
adc
ret
outsl
clc
push
xor
push
shl
inc
ret
mov
cmp
fidivl
mov
jae
enter
adc
mov
and
or
mov
xorb
and
jmp
js
sbb
fucomip
lock
rorb
mov
in
shrb
add
cmp
clc
or
add
mov
adc
pop
cmp
jbe
mov
push
je
cmp
inc
push
or
movsb
push
or
fsubrs
cmp
dec
pop
push
invd
xchg
adc
inc
incl
pop
js
or
movl
cld
adc
mov
adc
lods
add
pop
mov
dec
loopne
or
mov
sub
inc
dec
adc
filds
mov
add
in
push
jmp
or
sbbl
mov
xlat
nop
ds
cli
pop
pop
pop
sbb
inc
and
add
adc
and
mov
xchg
sub
mov
lock
stos
add
decl
in
out
cmp
or
add
xor
mov
adc
mov
mov
add
sarl
inc
xchg
lock
xor
imull
or
sbb
or
and
les
jg
test
roll
cli
divl
mov
push
mov
jle
outsb
cli
push
add
lock
and
jmp
xor
loope
jl
jg
ljmp
or
mov
sub
mov
mov
lcall
std
jmp
xorb
pop
or
sub
jecxz
add
mov
mov
push
iret
mov
loopne
testb
or
enter
ret
jbe
lret
jmp
push
push
sbb
loop
cmp
mov
jle
jae
add
cld
push
mov
or
sbb
add
xor
shll
and
out
and
and
pop
cmc
popaw
mov
test
ss
test
inc
fadds
cmpsb
out
xor
jmp
inc
shlb
sbb
mov
sub
div
or
mov
mov
mov
and
rcll
push
adc
in
cmpsb
push
scas
adc
or
pop
jo
jo
push
int3
fistl
ja
lods
jmp
dec
adc
fnsave
xor
nop
in
test
xchg
mov
pop
mov
pop
testl
clc
incb
jb
and
push
add
clc
das
test
jl
push
xor
shl
sub
ds
adc
sbb
loope
in
mov
clc
out
rorb
scas
push
pop
add
and
mov
pushl
pop
adc
xor
out
inc
adc
jb
loope
push
mov
mov
and
mov
roll
push
xor
sbb
cwtl
mov
das
clc
or
mov
or
pop
mov
xor
add
clc
dec
lock
jno
aam
clc
pop
sahf
and
sarb
fbld
mov
lock
adc
inc
xchg
pusha
sub
mov
xor
cmp
hlt
mov
mov
mov
popf
add
jo
aaa
dec
fcomip
out
loopne
xor
mov
add
mov
icebp
addb
fsubs
gs
sub
mov
fisubs
fdivrs
mov
shll
mov
es
aad
jno
jae
adc
fucomip
mov
mov
dec
adc
xor
xor
jmp
dec
ficoms
outsl
adc
lret
aam
in
push
mov
data16
pop
aam
inc
xchg
push
andl
ljmp
shlb
in
enter
mov
incb
push
pop
notl
ja
test
sub
shrb
mov
jg
rcll
loop
mov
pop
cld
call
push
stc
jo
icebp
adc
xchg
xchg
xor
xchg
call
sbb
clc
adc
jo
and
push
cmpsb
aam
pop
rorb
cmp
mov
aad
xchg
incl
xor
es
test
inc
xor
or
adc
push
push
ljmp
push
rcl
das
orl
jbe
fcoml
cmc
or
xchg
push
lock
xor
sbb
aas
push
das
push
adc
mov
xor
xor
xchg
add
xorb
inc
inc
and
out
or
inc
outsb
jb
inc
cmp
cmp
xor
cmp
add
add
add
dec
add
sbb
dec
dec
lret
dec
sub
adc
js
push
cmpsb
rcr
push
jl
nop
mov
or
arpl
and
sarl
push
inc
cmp
add
jl
xor
adc
mov
test
js
std
mov
loopne
pusha
mov
lea
xor
add
jo
std
sub
xchg
add
loopne
or
push
test
daa
fdivp
push
cmp
adc
sti
jle
inc
popf
push
idivb
filds
or
adc
stc
or
sub
inc
mov
cmp
adc
test
push
adc
or
add
mov
call
xor
and
xchg
pop
and
movsl
shl
cmp
dec
dec
mov
push
jne
and
je
mov
loopne,pt
sbbl
aas
add
lret
or
ss
roll
ret
cmpb
mov
cltd
mov
in
or
adcb
das
and
repz
or
addb
dec
icebp
and
cwtl
inc
cmp
subb
es
clc
add
outsb
je
cs
orl
mov
jle
pop
sub
and
icebp
cwtl
sbb
incl
jae
adc
and
and
xchg
xchg
jo
lret
cs
inc
loopne
mov
sbb
or
dec
sub
push
jmp
incl
ljmp
add
test
or
and
rclb
jle
xchg
push
stc
push
adc
add
int
rol
or
jl
add
shrb
jmp
add
mov
sub
shrb
add
adc
addb
or
push
idivb
or
sbb
add
adc
clc
xor
dec
jae
cmp
push
or
and
dec
mov
cli
ret
ja
pop
cmpsl
sbb
push
adc
test
adc
stos
scas
push
addb
inc
fisubl
mov
pop
push
shlb
scas
push
test
mov
movsl
sub
adc
ret
pop
ret
add
adc
pushl
mov
or
js
add
or
inc
clc
add
orl
xchg
insb
jmp
popa
add
jae
ror
sub
iret
orl
push
jl
add
push
adc
add
ret
xor
mov
loopne
and
add
and
pop
add
push
cmpl
cld
jg
jbe
pop
invd
js
stc
rcrb
add
stc
std
add
add
xchg
shlb
mov
shlb
fs
mov
incb
loopne
or
testb
inc
add
stos
test
push
and
cld
cmpsb
add
bound
add
inc
mov
fcompl
pop
push
dec
inc
in
notb
inc
push
rcrl
jb
mov
sub
or
loop
jmp
or
or
push
jbe
fisubl
adc
inc
mov
cmpsb
out
xchg
add
mov
jle
ret
cmpsb
jb
lock
jle
add
mov
add
or
jb
mov
xchg
cmpsb
test
mov
sub
pop
sub
add
jmp
subb
mov
cld
inc
pusha
adc
loopne
sbb
xchg
mov
mov
pusha
sbb
and
je
addl
jg
mov
mov
arpl
or
loope
push
cmpl
pusha
pop
mov
mov
or
sbb
jg
leave
pusha
inc
inc
push
ja
mov
loopne
adcl
out
jae
in
cmp
jbe
pushl
out
jecxz
mov
repnz
add
test
call
shr
sub
incb
inc
or
push
or
and
push
pusha
mov
testb
nop
jbe
clc
push
adc
pusha
mov
add
call
shl
sub
or
or
sub
shlb
add
cwtl
cmp
mov
xchg
pushf
sahf
aam
cmc
lea
adc
icebp
or
mov
sub
or
pusha
mov
xchg
inc
in
add
push
and
cltd
cmp
rorb
xor
dec
jb
add
out
sbb
popa
or
movsl
call
rorl
ret
mov
add
xchg
add
push
je
inc
pusha
pop
adc
jecxz
pushf
clc
jmp
adc
cld
fcoms
xor
sub
mov
fidivrl
or
mov
pop
inc
stc
mov
add
lret
ficoml
mov
mov
enter
cmpb
pusha
inc
pop
push
cmp
add
push
orb
pop
add
hlt
add
adc
fidivrl
jne
jecxz
inc
inc
lds
sbb
adc
sbb
push
dec
je
mov
xlat
adc
and
push
mov
test
loopne
and
and
enter
mov
loopne
les
hlt
sbb
push
fcos
push
lea
mov
push
out
pop
pusha
loopne
pusha
push
or
pusha
push
or
dec
push
push
pop
fildl
imul
add
popa
mov
and
sbb
xor
adc
fldl
insl
mov
inc
lea
jge
ljmp
sub
nop
enter
adc
mov
sbb
scas
adc
decl
add
ja
pop
dec
daa
inc
fstps
dec
mov
pop
mov
fs
out
push
rorb
mov
dec
dec
es
in
sub
cld
lods
add
in
or
aas
loopne
bound
jno
movl
bound
cmp
mov
inc
adcb
decl
add
add
sub
jb
test
dec
insb
addb
mov
test
add
mov
inc
push
leave
inc
cld
imul
xchg
xor
push
rol
inc
test
out
ret
sub
add
dec
sbb
enter
dec
or
jp
inc
mov
mov
roll
xor
inc
add
ja
aaa
sarb
lret
lock
arpl
hlt
pushl
pop
sti
imul
or
jo
lods
cld
inc
in
mov
mov
jo
aaa
jne
xchg
inc
mov
xor
inc
sub
insb
ficomps
and
adc
icebp
sub
xor
inc
sub
pop
jb
mov
dec
pushl
sub
cmp
jne
add
pushl
jbe
dec
or
push
out
mov
inc
ss
or
cmp
sbb
lock
cmp
adc
or
xor
mov
fcoml
setns
push
hlt
mov
add
mov
dec
enter
lea
jle
lock
xor
pop
cmc
incl
stc
pop
testb
sahf
mov
hlt
or
add
sub
jmp
mov
lock
mov
xchg
lock
push
mov
mov
je
pop
icebp
xchg
add
enter
mov
repz
roll
in
mov
sti
push
mov
lcall
sbb
mov
push
pop
add
sbb
jge
jo
push
repz
push
lcall
sbb
add
test
sbb
inc
mov
outsb
mov
pop
sbbb
mov
jbe
mov
sbb
jbe
jo
jbe
xor
in
sub
mov
je
sub
dec
sbb
xor
addb
mov
je
add
jo
out
clc
xor
cmp
cld
dec
sub
xor
mov
jl
rcrb
pop
dec
sub
sbb
xor
dec
lret
add
xor
and
and
sbb
adc
mov
and
add
cmp
xchg
mov
jbe,pt
push
push
mov
ret
adc
mov
sub
push
inc
dec
aam
fisubrl
sub
push
jo
mov
enter
shlb
inc
xor
or
mov
mov
mov
xor
adc
sbb
cwtl
mov
add
fidivrl
mov
call
lods
push
jg
lock
xor
dec
push
xor
incl
xchg
mov
repnz
add
xor
jg
or
incl
xor
ret
adc
cs
shl
pop
adc
or
mov
sub
loopne
sub
call
push
sbb
push
and
add
adcb
pop
sub
jbe
add
pop
mov
call
iret
icebp
add
cmp
and
push
movsb
and
mov
lret
xor
mov
test
jle
nop
push
xchg
and
cld
sarl
out
or
pop
movl
or
clc
xchg
mov
xor
mov
sbb
fildll
jbe
lock
clc
stos
je
pop
ljmp
js
push
add
inc
clc
fcmovnb
inc
ljmp
add
fcoms
xchg
and
cmp
xor
jb
adc
push
mov
cld
mov
pusha
mov
jle
movsb
add
orb
int
insb
mov
sbb
or
mov
sub
das
sbb
std
push
or
gs
push
mov
adcb
add
mov
xlat
add
mov
sarb
in
cmp
ret
push
add
and
pop
xchg
frstor
fsubrl
jo
jmp
cmc
sub
test
xchg
push
push
mov
inc
sub
sub
popa
imul
mov
adc
xor
sub
push
out
push
out
incl
dec
incb
push
sub
push
call
adc
dec
aaa
dec
test
mov
aam
mov
subb
sbb
cs
clc
and
clc
adc
xor
jmp
clc
push
adc
add
or
and
inc
mov
ret
or
sbb
stos
loopne
add
test
jne
test
and
push
sub
sub
inc
xor
sbb
push
push
adc
pushl
mov
add
push
call
inc
and
pop
inc
ljmp
insb
push
mov
arpl
imul
add
imul
and
adc
enter
in
cmpsb
sub
xor
adc
nop
xor
mov
ss
mov
clc
mov
int
lcall
cli
loop
shll
lds
repnz
push
and
and
subb
xor
test
mov
nop
inc
pop
cld
xor
ljmp
push
inc
adc
jecxz
daa
inc
and
push
push
mov
out
je
pop
adc
mov
orl
push
shr
cmpsb
aam
cli
inc
imul
test
jbe
mov
mov
lret
icebp
dec
jb
adcl
jl
adc
add
adc
cmp
adc
ds
adc
or
lea
pop
pop
pop
jo
test
or
sti
adc
push
and
testb
adc
inc
mov
mov
test
ds
cmp
inc
add
in
mov
or
add
sti
decl
mov
inc
inc
scas
test
jecxz
adc
cmp
push
repz
movsb
les
mov
push
add
mov
pop
std
add
pop
imul
cld
add
push
push
cli
add
sbb
not
in
testb
push
repnz
mov
addl
dec
std
mov
or
andb
mov
mov
pop
orb
or
loope
shr
imul
cs
sub
test
or
test
ljmp
add
shr
jle
add
addr16
cld
cmpsb
inc
out
pop
cld
aaa
cld
pushf
add
pop
add
enter
loope
xor
inc
addl
mov
pop
lret
shl
pop
cltd
ds
sbb
and
push
fcmovb
add
sub
or
divb
adc
rolb
loop
jbe
add
mov
sti
xchg
enter
push
rolb
enter
jl
and
mov
pop
adc
push
dec
aam
mov
js
jle
movb
mov
push
ret
or
lahf
insb
cmp
jmp
enter
jmp
pop
je
sbb
mov
adc
enter
or
xor
ret
pushf
cli
mov
mov
sti
and
add
inc
test
rcrb
add
aaa
sub
fstpl
lods
out
and
mov
push
insl
imul
sub
cmp
in
bound
or
mov
lcall
sub
pop
mov
ljmp
ret
cvtpi2ps
rcr
add
ret
test
pusha
add
jnp
std
int3
push
or
mov
xlat
adc
and
sbb
push
add
ret
shlb
pop
cs
ret
ss
add
clc
decl
fcom
shlb
mov
and
frstor
stc
add
stos
out
push
add
int3
inc
cld
out
orl
push
outsb
jg
jg
or
imull
dec
cmp
fildl
pop
xor
jb
ds
pusha
mov
mov
mov
and
cmp
loope
call
enter
outsb
jg
lock
nop
push
and
popa
cmp
add
dec
mov
sub
das
add
rcrl
push
mov
loopne,pt
cld
jne
jp
stos
outsl
rcrb
loopne
xor
adc
test
sub
pop
sbb
add
int3
stos
push
push
push
jl
jo
pop
inc
and
cmp
inc
xor
push
mov
js
lcall
pop
mov
mov
loop
dec
shl
shr
sbb
jecxz
addb
mov
je
sahf
mov
mov
jbe
sub
push
add
push
lea
mov
fdivs
adc
shll
xchg
dec
mov
call
inc
inc
ljmp
xor
pop
mov
mov
cmp
loopne
repz
hlt
inc
das
mov
jmp
lret
add
jle
cmp
pusha
loopne
mov
lods
aam
lock
pusha
add
jnp
jmp
xor
lock
adc
jne
mov
je
adc
add
and
icebp
mov
clc
ret
cmp
cmpsl
addb
jno
xor
test
adc
mov
sti
xor
add
movsb
jne
cmpl
and
ret
add
aaa
or
pusha
insl
sub
notl
sti
cmp
and
mov
jge
add
and
jg
icebp
push
adcb
test
push
shrl
cli
pop
js
fucomi
dec
or
pop
cmp
loopne
sbb
dec
popl
pusha
mov
daa
insb
sti
or
mov
mov
inc
mov
dec
dec
mov
sbb
popa
or
and
adc
mov
dec
int
das
cld
cmp
pop
sbb
inc
mov
fdivrs
ret
in
andb
out
jle
outsl
lcall
popa
jae
leave
xorb
mov
push
xchg
sub
outsl
je
or
xchg
adc
jae
lcall
insb
xchg
andl
insl
and
insb
jg
mov
and
xchg
je
jb
adc
adc
or
and
cmp
cmp
inc
xor
sbb
jb
xchg
loopne
mov
loope
int3
mulb
iret
mov
fistpll
jne
lea
and
je
mov
loopne
adc
mov
lea
negl
push
in
loopne
in
add
add
pop
aas
mov
subb
sbb
cld
mov
and
ret
int3
loope
mov
fs
adc
cs
add
lds
sub
test
add
pop
pop
loopne
xorb
ja
ss
mov
mov
xchg
test
adc
push
sbb
aaa
sbb
jb
push
pop
imul
insb
adc
add
xchg
push
fprem
or
adc
dec
mov
cltd
mov
push
pusha
cld
add
cmpsb
sbb
pushaw
movsb
or
lock
je
push
cld
mov
xor
cmp
adc
cs
dec
outsl
icebp
add
lea
add
cmp
addl
jno
mov
and
test
add
or
je
jecxz
jp
cmp
pushf
lods
int3
std
or
je
or
sbb
inc
dec
cmpsb
dec
lcall
pop
sub
sbb
xor
inc
add
jp
leave
sbb
xchg
or
rcrl
jg
mov
adc
jbe
mov
add
mov
adc
ret
or
sete
icebp
or
dec
xchg
add
add
push
and
push
repnz
cmp
push
adc
mov
mov
inc
cmp
stos
lods
hlt
add
nop
nop
std
mov
push
mov
mov
rol
mov
iret
jle
mov
test
pop
loop
inc
mov
jge
data16
hlt
mov
and
stos
mov
sub
add
or
bswap
push
cld
push
jo
add
imul
decb
clc
push
fisttpl
leave
je
mov
lock
xlat
add
and
inc
xor
sub
mov
sub
jne
and
test
icebp
and
js
xor
cmp
jl
xchg
repnz
pop
and
out
hlt
dec
jl
add
xorl
mov
cmpl
sbb
add
or
jg
xchg
dec
add
mov
lret
lock
mov
mov
pusha
jg
xor
in
pusha
mov
push
inc
outsl
and
push
je
dec
pop
sub
lea
cld
in
push
sti
mov
loopne
dec
lods
shl
jl
add
adc
add
mov
aam
js
adc
jl
loop
cwtl
mov
clc
stc
add
push
in
push
or
js
jo
jne
andb
or
add
push
xchg
xchg
xchg
xchg
mov
in
add
cs
dec
test
ljmp
and
rolb
pop
call
adc
pop
stos
dec
pop
jb
add
cli
sbb
jge
mov
add
fistl
or
push
mov
pop
clc
mov
add
mov
cld
xchg
in
cmp
insb
add
lods
dec
imul
imul
or
das
dec
pop
popa
mov
les
scas
int
lret
adc
adc
pop
clc
xor
or
jno
and
cltd
les
lods
sub
jne
mov
call
adc
cmp
cs
mov
mov
sbb
ret
std
jmp
inc
mov
cld
das
mov
cli
jg
or
push
jne
ret
adc
cmpb
inc
adc
mov
pop
or
or
push
test
push
lock
icebp
dec
aas
xor
ljmp
inc
popa
loope
inc
adc
jge
mov
inc
mov
dec
rcrl
push
or
xor
push
adc
adc
shl
les
idiv
das
rolb
clc
movsl
xor
hlt
mov
add
je
lock
jo
sub
push
sarl
es
adc
inc
mov
aaa
jl
sub
out
mov
inc
cld
add
jecxz
incl
decb
lcall
mov
out
scas
cli
mov
add
out
repnz
pop
jmp
lret
out
lea
pop
std
add
dec
les
adc
stos
out
scas
adc
icebp
push
rcrw
cld
iret
sub
int3
mov
out
outsb
add
adc
mov
lret
es
adcb
stos
mov
and
out
sub
fiaddl
push
aam
test
xor
imul
push
sbb
outsl
inc
add
subb
notb
mov
push
or
mov
adc
je
adc
or
ja
outsb
outsl
mov
stos
inc
sub
adc
pop
xor
cld
inc
pop
push
aad
decb
repnz
cld
ss
ljmp
inc
je
push
mov
mov
outsb
aam
inc
mov
cltd
or
ret
aam
xor
add
cld
and
inc
jo
inc
pushw
sub
sub
or
inc
xchg
jg
lock
lods
xor
add
add
sbb
sub
jg
pop
out
sbb
xor
xor
ja
push
xor
cmpl
jle
jg
das
clc
mov
add
mov
adc
xor
out
add
mov
je
add
hlt
push
pop
jmp
xchg
and
loop
and
ljmp
add
cmp
mov
mov
xor
sbb
lock
adc
movsb
add
or
pusha
push
shll
xchg
sbbb
pop
cmp
add
out
imull
in
mov
sahf
scas
adc
add
xor
in
and
mov
into
mov
je
jno
adc
adc
mov
xor
inc
ret
sbb
xor
lock
jb
insb
lcall
and
jo
jg
pop
xor
inc
or
scas
test
cld
sbbl
mov
and
or
add
mov
stos
outsb
clc
jg
and
and
testb
pop
ret
add
adc
aad
data16
repz
clc
scas
cli
or
and
sub
ja
jl
roll
out
mov
or
stos
pop
ss
sub
insb
push
andl
dec
and
xor
sahf
sbb
xor
cmp
jg
sub
inc
dec
imul
clc
mov
xor
and
jae
imulb
and
xor
mov
xor
rorb
stos
or
inc
mov
jb
ffreep
loopne
dec
jl
lock
ror
sub
inc
fisttpll
mov
mov
fsubs
dec
cwtl
push
or
push
mov
into
cmp
outsb
idivb
jp
jl
sbb
repnz
fs
add
mov
add
add
xor
loope
scas
cli
in
sbb
push
jecxz
mov
mov
rorb
divb
jmp
adc
ss
and
sahf
mov
shl
in
add
sub
pop
push
mov
mov
jmp
cmp
jne
sub
mov
hlt
add
mov
add
lock
mov
stos
sub
imul
add
sbb
loope
and
imul
sub
ss
stc
or
aaa
cmp
adc
add
imul
jne
orl
loopne
mov
jle
mov
push
xchg
dec
mov
pop
test
loopne
or
and
imul
pop
cli
int
cmp
mov
sarl
sbb
or
sar
loop
and
or
push
cltd
mov
lret
add
sbb
xor
xchg
jg
mov
xchg
inc
shlb
jle
fidivs
bound
cmp
xchg
mov
mov
add
hlt
mov
push
pusha
das
adc
adc
pop
outsb
push
jl
roll
xchg
push
pop
xor
clc
imul
lret
cmovns
shlb
sub
pop
xchg
adc
pop
mov
stos
dec
mov
pusha
ja
adc
mov
xchg
xchg
or
and
cmc
out
aam
int3
ret
pop
adc
pop
call
add
push
data16
or
inc
lret
xchg
pushf
xchg
push
or
lds
arpl
add
lock
push
add
or
shrl
call
in
and
test
clc
rclb
lds
clc
call
test
pop
rorb
cmp
shrb
les
movsb
rclb
mov
rorb
xor
inc
repnz
push
push
mov
ret
aad
divb
sbb
push
adc
push
mov
cmpsb
loop
sub
cld
sub
jle
add
jle
sar
popa
mov
fistpl
enter
mov
fwait
mov
push
mov
push
lods
pop
std
add
adc
inc
out
repz
inc
rcrl
mov
push
jmp
lcall
out
and
mov
imul
inc
out
xchg
mov
stc
ret
add
arpl
fiaddl
fcoml
add
xchg
jg
mov
lock
cmpsl
outsl
loope
mov
jne
pusha
sub
adc
add
lcall
loop
or
pusha
add
jmp
push
jbe
loop
pushw
pop
inc
sbb
cmpsb
sbbl
or
addr16
sbb
aaa
outsb
inc
loopne
cld
mov
adc
ljmp
dec
pop
shlb
out
loopne
aam
adcl
data16
add
cmp
addr16
mov
ficoms
rcrb
mov
xchg
pusha
xchg
and
fsubl
sub
popa
and
loope
lret
sti
inc
dec
and
or
hlt
lcall
adc
into
sbb
adc
lret
mov
inc
mov
std
adc
mov
adc
pop
dec
repz
in
mov
pusha
adc
mov
mov
arpl
mov
xchg
jb
pusha
sub
sub
cmp
jbe
loope
inc
in
js
cmp
loopne
and
add
jle
bound
adcb
mov
pop
loopne
out
xchg
out
outsb
hlt
and
popa
cmp
out
and
jle
jecxz
inc
notb
iret
jbe
pop
push
adc
imul
mov
cld
aas
dec
test
and
mov
bound
mov
into
mov
mov
xlat
popa
adc
push
gs
push
into
add
and
push
add
js
fs
cwtl
adc
aam
or
mov
lcall
push
cmpsb
arpl
adc
iret
jecxz
call
dec
hlt
cmp
popa
fs
add
xchg
add
or
sub
bound
out
pop
into
adc
inc
lds
dec
jmp
aaa
call
cmp
es
dec
mov
cmp
and
cmp
mov
xor
scas
loopne
mov
sbb
rcll
into
add
xchg
push
or
loop
loop
loop
mov
or
pop
xchg
fmuls
mov
cli
cmp
cmpsb
mov
pusha
in
pop
cltd
xor
loop
add
xor
inc
or
mov
pop
and
jg
stos
inc
jl
sub
data16
push
mov
ret
lcall
inc
or
inc
inc
pusha
mov
clc
pop
sub
and
mov
and
mov
addl
aad
mov
test
adc
and
push
inc
fadd
lea
cmp
sbb
ds
dec
jl
lods
and
mov
mov
inc
loope
in
cwtl
push
push
fidivs
dec
out
hlt
mov
push
add
mov
lock
pop
arpl
loope
je
bound
push
addl
jle
in
clc
lcall
xor
push
add
in
adc
test
adcl
dec
cli
dec
dec
xor
xor
int3
xor
lret
bound
pshufw
xchg
les
outsl
decl
call
imull
add
xorb
rcr
fmuls
mov
mov
ljmp
bound
sub
js
inc
mov
add
sar
fldt
adc
or
shll
imull
lock
sbb
je
xor
lock
dec
cmp
or
sbb
das
inc
test
mov
pop
pop
jne
clc
or
or
sub
cmp
leave
add
sub
ret
mov
clc
loopne
cld
icebp
mov
adcb
push
inc
data16
xor
pop
mov
or
dec
add
push
sbb
fisubl
xchg
or
pop
sbb
ret
decl
cmp
jle
pop
adc
pop
lock
adc
notl
fistpl
clc
and
addl
dec
decl
std
pushl
cld
cmp
sbb
mov
xor
sarb
mov
push
dec
cmp
in
mov
jb
jo
xchg
dec
pusha
jnp
or
xchg
bound
cmpsl
test
push
enter
or
xchg
pop
incb
mov
std
jge
loopne
mov
jg
jge
mov
pushf
aas
clc
dec
cs
mov
adc
jnp
pop
adc
pop
pushl
xor
jg
mov
or
hlt
adc
xchg
push
lock
ljmp
mov
dec
and
aam
sbb
and
popl
orb
adc
mov
add
sti
add
push
nop
mov
repnz
add
movsb
and
or
mov
push
jo
sahf
pusha
cmp
clc
inc
addb
xor
call
orb
in
add
add
adc
je
testb
mov
adc
push
push
lock
cmc
jg
or
push
and
mov
or
mov
bound
pusha
pushf
adc
or
mov
subb
push
or
incb
fs
mov
movsl
and
ret
push
icebp
inc
push
push
js
or
lahf
add
inc
mov
adc
and
dec
mov
add
movsb
adc
fldl
lock
xchg
mov
push
das
sub
jno
sarb
jno
pop
loopne
xchg
cmp
mov
add
mov
test
inc
clc
ljmp
mov
pop
push
dec
xchg
lock
pop
dec
out
mov
sub
push
add
adc
push
mov
jo
enter
or
jle
mov
orb
les
mov
jmp
test
jle
xor
mov
imul
outsl
mov
imul
pop
mov
outsl
outsb
sub
cmp
xor
or
jl
inc
jg
pop
add
jb
dec
inc
adc
mov
popa
lea
out
add
mov
inc
sub
add
mov
add
push
in
inc
call
or
mov
outsb
xchg
push
add
adc
aam
mov
mov
repnz
mov
adc
push
cwtl
dec
adc
sbb
dec
mov
mov
sub
mov
xor
icebp
arpl
lret
mov
mov
andl
je
dec
out
mov
push
or
es
jmp
insb
mov
mov
lock
adc
js
lock
push
sbb
cld
jno
jle
ds
or
dec
shrb
jbe
inc
push
add
xchg
cwtl
mov
inc
cld
dec
and
mov
pop
cmp
pushl
add
mov
mov
xor
mov
lea
inc
or
cmc
shr
decl
mov
mov
jmp
jb
dec
add
lods
cmpsb
push
ja
in
aam
inc
or
mov
adc
push
and
lock
or
dec
jo
addl
adc
xor
jne
push
add
scas
mov
lea
add
adc
rcrl
aaa
ret
or
adc
xor
pop
mov
push
mov
pop
sbb
fsubl
test
inc
fcomip
fisttps
shl
xchg
xor
mov
jmp
mov
pusha
sar
je
daa
jno
jb
xor
add
inc
push
inc
jp
aad
scas
inc
push
call
mov
sub
mov
push
lock
cmc
push
mov
adc
mov
fstpt
inc
std
subb
mov
inc
sar
mov
ja
or
shlb
je
push
pop
mov
xchg
sbb
mov
cwtl
dec
hlt
nop
push
push
sbb
and
fistl
pop
xor
cmp
adc
lahf
aam
rorb
outsl
ljmp
push
mov
mov
cld
push
jnp
mov
add
add
push
jo
into
incl
subl
sbb
in
lock
mov
adc
gs
dec
and
add
mov
push
pcmpeqw
pop
add
inc
xchg
add
lahf
lret
scas
add
add
jnp
add
ret
sub
jg
and
mov
cli
test
push
push
arpl
add
sub
mov
push
push
inc
mov
fildl
add
cmp
int
out
mov
aam
test
jmp
test
inc
imul
cmp
cmp
dec
dec
mov
inc
mov
dec
std
or
and
xor
push
sub
dec
and
push
or
call
xchg
mov
outsl
adc
xchg
push
sub
or
call
xor
or
lea
xor
fsubrs
mov
add
ficoms
clc
pop
popa
aam
and
sub
xor
loopne
sbb
sbb
movsb
mov
push
pushf
cld
les
jo
mov
adc
mov
movsb
and
jmp
push
loope
dec
xor
add
lods
sbb
or
adc
push
cmp
add
and
push
adcb
add
adc
and
bound
rclb
push
mov
mov
outsb
add
loope
mov
addl
mov
mov
popa
and
jne
ret
insl
inc
cwtl
in
std
jmp
cli
insb
into
and
xor
or
or
call
addb
cmpsl
add
xchg
repnz
sbb
lret
cmpb
hlt
call
or
aad
es
mov
aad
shr
andb
movsb
jne
loop
mov
in
xchg
mov
ja
push
inc
mov
rcll
mov
push
inc
or
addb
das
adc
je
cmp
out
out
mov
lahf
loope
add
xorl
rcrl
mov
cmp
lds
lods
sbb
cmp
ja
or
fildll
out
add
test
add
subl
test
push
add
loop
mov
scas
div
cmp
fidivs
pop
mov
inc
shrb
xorl
and
sub
in
inc
adc
decl
ljmp
les
ret
imul
subb
push
mov
lods
add
call
mov
movb
orb
pop
cld
repz
mov
shr
lcall
cli
add
cmp
or
dec
sbbl
push
inc
push
inc
xor
scas
inc
push
mov
pop
pop
push
inc
jne
xchg
rclb
add
shlb
add
jmp
std
incl
sbb
pop
or
pop
out
sbb
pop
mov
rclb
rorb
lret
cmp
or
jne
js
lods
add
mov
mov
mov
xor
les
sub
lock
jo
mov
or
pop
push
out
cmp
jbe
add
lock
sub
out
adc
pusha
ret
test
add
insl
inc
push
rolb
dec
hlt
lcall
or
dec
rorl
adc
add
inc
fstpl
and
mov
mov
cld
pop
inc
movd
mov
setno
and
and
xchg
jbe
icebp
cmpsb
adc
pxor
fcomps
nop
inc
or
roll
outsb
cmc
push
ds
fcmovnu
lock
lds
pand
movd
xor
fdivl
and
test
jbe
or
out
pop
sbb
out
stos
cli
call
hlt
xchg
sarb
rol
or
or
pop
pop
cld
or
rcll
push
sub
cli
shl
enter
mov
call
xchg
movsl
ja
add
rolb
in
cmp
lods
mov
dec
fwait
pop
nop
ljmp
cmp
jnp
and
and
hlt
jg
decl
or
hlt
dec
int3
and
sub
rcrb
cli
orb
rclb
test
in
sub
shrb
pop
je,pt
push
push
jno
repnz
addb
pop
fwait
adc
adcb
add
push
cmp
adc
ljmp
test
push
jne
andl
mov
loopne
sub
push
dec
out
add
loope
or
movl
sub
pop
mov
loop
and
adc
fcmovb
and
and
pop
add
sahf
push
je
or
or
int3
bound
cmpsb
jo
dec
ret
cld
lret
call
popa
xor
inc
ret
clc
in
add
push
arpl
popa
inc
cmp
adc
sub
loop
push
scas
pop
dec
inc
cmp
jbe
sub
push
repz
mov
inc
loopne
sub
add
gs
add
mov
in
mov
jecxz
bound
and
push
and
lock
jbe
pushl
in
adc
and
or
and
mov
hlt
loope
sbb
in
inc
add
filds
sub
jb
hlt
out
add
pop
pop
out
adc
sub
hlt
push
lock
adc
les
lock
aam
pop
xor
sbb
mov
add
js
mov
push
inc
push
imul
pop
ret
sub
aam
mov
scas
adc
sub
fists
pop
sti
adc
sbb
incl
popa
mov
in
jne
loop
add
mov
adc
pusha
ljmp
fidivs
aam
lods
or
jl
or
rorb
stos
or
out
sbb
pusha
mov
fbstp
and
filds
sub
scas
pop
jmp
sub
mull
xchg
mov
and
add
sbb
push
add
dec
cmp
loopne
add
dec
cld
push
nop
fisttps
test
test
adc
mov
mov
jp
pop
movsb
outsl
fmuls
je
ds
lea
mov
inc
dec
pop
rorb
sbb
push
cmpl
and
aad
cs
paddusb
jl
pop
inc
mov
adc
jno
mov
loop
jge
inc
adc
or
sub
fwait
or
add
mov
adc
inc
pusha
sbb
in
mov
push
or
movl
movsl
test
loope
push
mov
repnz
andb
mov
mov
cmp
repnz
jb
into
adc
add
sub
push
js
adc
pop
test
enter
jb
loopne
adc
add
sbb
pop
xor
xor
or
pusha
jns
mov
or
je
push
add
int
add
add
test
jb
mov
jecxz
lds
xchg
ljmpw
or
inc
or
int
or
data16
jb
ljmp
xor
inc
aam
mov
push
or
mov
mov
mov
push
mov
in
xor
test
mov
ljmp
rolb
lds
inc
pushf
xchg
cmp
in
pusha
xor
jg
jne
xorb
jle
adc
add
and
push
js
ljmp
add
jl
or
pop
lea
add
cmpsb
jge
cmp
cwtl
dec
xor
hlt
cmp
jmp
push
add
inc
xor
pusha
xchg
push
icebp
add
sbb
push
outsl
aam
mov
sbb
roll
adc
sbb
in
enter
push
add
push
and
fs
lcall
jbe
ja
adc
mov
push
push
adc
xchg
push
and
lahf
jo
jbe
adc
flds
jmp
je
int3
jge
mov
mov
pop
xchg
or
push
outsb
xor
add
mov
loop
sub
push
cmp
and
jg
loope
daa
loopne
and
test
je
mov
cmp
mov
lds
inc
xchg
or
add
daa
pop
add
call
pushw
loopne
push
movsb
aam
stos
test
in
jo
jle
jnp
xor
pop
inc
outsb
test
adc
jle
test
pop
xor
cmp
add
push
sbb
mov
rolb
fsqrt
jnp
adc
or
and
or
pop
add
or
loopne
shl
xor
jae
loopne
jae
shr
sub
pusha
mov
dec
pop
push
inc
inc
hlt
add
es
add
pushf
cmp
fcomip
mov
sub
sbb
add
mov
mov
mov
inc
dec
mov
stos
jo
add
inc
mov
xchg
add
and
push
jae
push
sar
pop
adc
push
mov
data16
mov
ret
in
nop
xor
stc
fcomi
or
lods
dec
xchg
mov
jbe
ret
sub
lock
test
push
orb
jecxz
sub
cmp
into
adc
scas
add
arpl
jo
inc
clc
ja
aaa
cld
incl
das
mov
mov
shr
xorl
les
push
add
je
nop
lock
hlt
adc
dec
repnz
fdivs
or
mov
dec
mov
into
movsb
pop
sbb
test
or
xor
mov
pop
mov
int3
ret
cmp
test
ret
nop
icebp
add
mov
les
pop
ret
cs
inc
adc
or
mov
filds
adc
mov
mov
add
add
jmp
ljmp
mov
sub
jg
pop
jbe
xchg
cld
shll
stos
call
mov
pop
adc
jo
add
add
lahf
and
xchg
inc
test
test
xor
push
mov
cmp
xchg
loopne
adc
mov
test
add
icebp
xor
adc
fwait
mov
pop
lock
xor
pop
scas
xchg
push
leave
push
xor
shll
cli
aas
orb
jo
jno
push
daa
adc
ja
add
fadds
rorl
jb
mov
jl
add
in
xlat
mov
or
adc
sarl
movsl
fnsave
adc
dec
js
xchg
jo
xlat
sbb
fwait
mov
jnp
push
adc
rcll
popf
ss
jg
pop
pusha
or
mov
in
add
sbb
pop
fadds
push
in
adc
ss
xchg
pop
sahf
mov
ds
push
push
push
add
pushf
sbb
imul
push
push
inc
lahf
push
lock
push
sbb
mov
adc
icebp
add
outsb
cwtl
imul
rep
fildl
clc
and
insl
cs
sub
enter
test
add
in
pop
lods
insl
dec
or
rolb
sbb
das
mov
fisubrl
movsb
data16
xor
jl
js
fcmovnu
add
mov
sub
xlat
mov
cli
or
or
push
std
or
add
or
mov
add
dec
stos
sub
fnstcw
insl
imul
imul
jo
add
lods
std
xchg
push
lock
aam
scas
ret
iret
push
or
mov
mov
imul
das
sarb
sub
mov
mov
or
stos
movsb
push
cmpsb
imul
xchg
nop
mov
pop
sbb
mov
push
aam
inc
out
add
enter
lock
dec
inc
push
icebp
out
xor
daa
cmp
dec
xor
stc
orb
lea
or
sbb
cld
push
ljmp
xchg
inc
push
das
mov
cmp
loopne
pop
pop
inc
add
xchg
add
out
jb
dec
rcl
mov
movsb
aad
jle
pop
std
add
shlb
test
push
shlb
adcb
mov
cmpsb
pop
adc
adc
sbbl
jns
aad
out
jecxz
jo
daa
adc
mov
sbb
push
sbb
mov
xchg
fiadds
xor
xor
or
ret
call
cs
adc
or
or
lock
stos
fiaddl
sbb
xlat
or
mov
pop
les
sub
rep
shr
cld
cmc
mov
lds
mov
loopne
and
mov
xor
or
dec
rorb
test
inc
adc
sahf
add
adc
cmp
lods
pop
and
sbb
lcall
add
or
or
add
test
mov
hlt
add
lock
push
in
add
in
sub
cs
pop
fisttpl
jl
ds
sbb
xor
add
add
mov
lods
das
mov
movsb
push
push
add
adc
fidivl
add
or
mov
jmp
dec
loop
fisubs
ficompl
rolb
add
in
pop
fisubrl
negb
pop
add
push
dec
sbb
inc
cmpsb
imul
xor
lcall
and
sbb
sbb
xor
adc
or
add
shll
cmpb
in
lcall
loopne
fcom
imul
imul
shll
adc
int3
pushf
sub
xchg
sbb
mov
sbb
add
jo
add
xchg
pop
sbb
push
test
or
call
jge
orb
pop
lods
mov
add
adc
je
scas
imul
sbb
adc
outsl
mov
add
add
mov
cld
or
aas
hlt
mov
pop
repz
add
in
leave
push
inc
xlat
xchg
xchg
popa
cmpsb
inc
add
mov
sub
and
cwtl
shll
xor
push
sub
pop
lods
adc
cmp
cmp
push
pushf
sbbb
int
and
add
cmpsb
jp
insl
fidivl
jo
insb
add
add
pusha
lcall
push
out
dec
dec
test
stos
rorb
dec
pusha
lcall
stos
add
or
jge
sub
jnp
dec
mov
or
loopne
lcall
ror
lcall
les
push
mov
cmpsl
imul
mov
sbb
insl
orb
push
lock
lea
rol
sbb
fmull
lea
addb
inc
xor
sbb
push
xor
push
dec
xor
mov
sbb
rclb
push
sub
adc
fisubrs
loopne
and
sbb
sbb
or
fisubl
push
bound
or
dec
push
stc
xor
sbb
add
jmp
in
ss
add
fnstenv
shll
xor
sbb
push
adc
mov
xchg
test
inc
mul
cs
xchg
cltd
sbb
xchg
add
mov
test
jge
jne
loopne
ret
cmpsb
mov
mov
scas
stos
cmpsb
setle
xchg
mov
imul
sbb
setle
mov
imul
dec
dec
cmpsb
xor
jae
inc
inc
cmp
sub
ss
add
add
sahf
push
add
pusha
cs
add
out
ljmp
loop
fcmovbe
add
xor
ror
lret
addb
cmp
das
pop
call
add
cli
inc
push
aaa
mov
mov
inc
sbb
inc
sbb
inc
sbb
test
sub
addr16
shll
sbb
cld
imul
xor
aaa
cmpsb
xor
outsb
push
data16
cmpsb
imul
ret
imul
xor
xor
sbb
and
sbb
adc
push
xor
add
add
cs
sub
out
sub
fiaddl
add
jns
cmp
mov
in
sbb
stos
cmpsb
mov
sahf
lcall
pushf
mov
and
sbb
mov
add
mov
pop
pop
add
movsl
call
jp,pt
adc
cmpsl
movsb
push
cmpsl
movsb
inc
jo
adcb
push
cmpsl
orb
shld
mov
xor
push
movsl
mov
loopne
lret
or
mov
mov
lcall
mov
fimuls
mov
sahf
mov
dec
inc
inc
xor
push
and
and
pop
lock
push
test
push
jle
dec
sbb
add
cmpsl
icebp
cmp
fdivrp
cs
int
add
sbb
loope
fstp
aad
int
leave
cmpsl
imul
mov
lcall
mov
xor
decl
inc
and
push
cmp
push
ret
imul
push
mov
fcomps
or
xchg
adc
call
jl
and
mov
xor
pop
movsl
pop
add
mov
push
ret
sbb
mov
ds
aad
inc
dec
pushl
shl
push
pushf
test
mov
adcl
and
and
mov
aam
sub
add
adc
nop
jl
push
sub
loopne
ds
sbb
push
ret
ret
jl
push
sub
andl
or
std
and
jbe
adc
xorb
fstpt
or
jne
stos
mov
mov
ret
adc
push
adc
shrb
push
std
or
insl
rolb
cmp
add
cld
and
incl
adc
adc
mov
adc
stc
call
sbb
jle
pop
push
nop
add
jne
call
sbb
fistps
add
add
sbb
pop
and
mov
cmpb
add
imul
ret
cmp
icebp
xchg
or
add
push
in
outsl
pop
mov
lock
cmp
xorb
sub
xchg
lods
data16
incl
pop
popa
mov
mov
pop
adc
or
mov
mov
push
and
pop
or
mov
cmpxchg
sub
and
add
jo
add
and
add
push
and
call
xchg
jo
mov
pop
add
push
icebp
or
mov
add
mov
adc
add
or
mov
xor
add
pop
incb
pop
lock
or
test
mov
and
je
xor
and
adc
adc
cs
adc
adc
dec
loop
rolb
push
cmp
shrl
pop
cltd
xor
xchg
xor
mov
pop
negb
clc
add
adc
dec
or
fistpl
sbb
call
or
mov
jae
outsl
xor
and
sbb
adc
je
or
outsl
ljmp
push
or
push
icebp
add
stc
add
and
dec
sbb
and
mov
mov
pop
adc
test
xorl
cmpb
loop
icebp
or
inc
mov
mov
jno
cmp
pop
push
shll
cmp
sbb
mov
cwtl
adc
jne
mov
and
jo
scas
clc
ja
jnp
jo
mov
orl
imul
mov
push
fisubl
jno
call
loopne
ljmp
cmp
mul
add
add
mov
shl
push
fmul
or
jnp
movsl
hlt
je
ret
scas
add
xor
xchg
jnp
jbe
stos
xor
jle
mov
push
sbb
xchg
or
pop
push
inc
dec
push
das
sub
enter
jle
inc
lock
orb
or
pop
ds
sub
rol
push
addb
arpl
cltd
divb
add
push
aaa
out
and
outsb
cli
call
cli
sbb
add
pop
lock
inc
ret
aaa
fucomp
or
add
mov
testb
insl
xlat
push
add
mov
sub
in
in
cld
aad
adc
add
mov
mov
adcb
mov
fbld
inc
orl
pop
insb
xor
mov
ds
andb
or
jne
sub
test
add
out
js
cmpsb
adc
push
pushf
test
cli
xorb
add
call
mov
jp
adcb
xor
or
sar
mov
xchg
adcl
or
sti
or
add
test
and
out
mov
adc
mov
fs
std
push
addb
cmpsb
cld
or
add
sub
aaa
or
sub
clc
jle
outsb
ja
add
pop
mov
fildll
adc
nop
lahf
xor
adc
mov
pop
dec
add
cmpsb
fdivl
lock
rorb
pop
cmp
shlb
cld
dec
je
call
add
push
jne
out
call
cmc
mov
add
pop
add
shlb
sbb
xchg
cmp
ret
cmpsb
jp
stos
shrl
add
pop
add
adc
xchg
push
sbb
shll
mov
sbb
lock
fwait
shrb
or
mov
inc
es
sarl
shlb
jle
shlb
fs
push
call
neg
pop
rclb
push
les
sarl
call
test
js
inc
add
das
les
ret
ljmp
sub
lds
mov
fcoml
shll
bndldx
or
jle
loopne
push
push
clc
roll
mov
aad
adc
pop
aam
sub
das
clc
clc
sub
rol
fistps
and
pop
loope
loopne
ljmp
ljmp
loopne
inc
popa
and
adc
adc
test
pop
mov
paddw
test
sahf
push
lcall
pusha
lock
jg
pop
adc
loopne
inc
bound
loopne
ljmp
loopne
add
and
add
add
push
jne
pop
pop
or
or
adc
fisttps
jne
call
clc
jg
call
mov
call
cmc
pusha
inc
push
flds
insb
scas
mov
or
cmp
lock
idiv
aaa
clc
mov
jne
pop
mov
push
loope
adc
stos
movsb
testl
call
popa
sub
pusha
sub
or
push
nop
push
mov
popa
or
mov
int3
cmpsb
lods
push
adc
pusha
and
dec
rorb
pop
mov
xchg
test
adc
imul
ret
cmp
push
and
and
pavgb
loop
dec
push
shl
mov
je
adc
pop
add
add
jnp
sub
sub
push
adc
add
dec
add
andb
pusha
add
xchg
push
mov
push
sbb
add
cmp
adc
pusha
xor
je
cmp
std
mov
add
lock
notl
or
sub
repnz
mov
adc
loopne
pusha
mov
je
ret
test
adc
je
fistpll
ret
stos
je
adc
je
lods
jg
in
je
ret
mov
ret
insb
je
adc
push
ret
outsb
je
shlb
aaa
outsl
je
ret
fiadds
adc
add
sbb
mov
pop
mov
lock
mov
es
popa
lock
loop
push
lea
jnp
stos
cld
jmp
push
sbb
and
pusha
pop
add
bound
test
xchg
popa
test
in
jmp
cli
jbe
rorb
ss
loopne
jb
test
imul
and
ljmp
jb
loope
jmp
into
ret
jbe
mov
sbb
rorb
pusha
pop
jmp
fistps
out
xor
xor
bound
addl
jle
pop
or
cmp
pop
push
icebp
ret
adc
aam
rolb
mov
fcomp
loope
sbb
mov
push
loop
mov
mov
pop
aam
inc
insb
sti
mov
xor
test
ret
loopne
cmp
pop
pusha
inc
mov
inc
cmp
jg
cmp
popa
add
push
call
pusha
adc
fucom
sub
dec
mov
adc
cmp
inc
mov
call
data16
loopne
and
sub
fildll
roll
jne
in
imul
push
or
push
pusha
pop
ret
and
cmp
cld
or
add
adc
sbb
repnz
test
and
cmp
sbbb
fisttpl
repnz
ljmp
stc
je
pop
addb
in
call
xor
push
adc
jl
and
stc
test
push
push
sub
mov
push
mov
leave
pop
cmpsl
push
push
cli
xor
and
cmp
loope
mov
inc
icebp
mov
jnp
lcall
cmpsb
std
inc
push
lcall
xor
and
sub
ret
xor
ljmp
pop
in
div
pusha
out
mov
and
mov
cld
pop
sub
add
add
adc
jo
ret
adc
xchg
cmp
loope
mov
fildl
lret
jl
imul
cli
mov
mov
cmpsb
mov
mov
jmp
daa
pop
push
icebp
or
and
stc
call
xchg
fwait
test
in
pop
sbb
xor
stos
sbb
pop
sbb
mov
xor
xor
inc
cmp
repz
fisttpl
loop
mov
adc
xor
test
pop
pop
cld
cs
sub
jge
aas
repz
add
decb
xor
push
inc
call
cmp
int3
pusha
int3
int3
lret
test
test
cs
in
idivb
sbb
adc
pop
dec
aaa
add
pop
sbb
adc
mov
inc
sbb
xchg
sub
aad
data16
adc
cmp
jecxz
cmp
mov
insl
in
xor
daa
adc
or
push
jg
std
xchg
lea
or
push
push
arpl
adc
push
xor
fs
adc
cs
xchg
push
xor
adc
dec
iret
stos
js
mov
mov
adc
sti
jnp
or
or
pushl
push
mov
mov
mov
jp
add
xchg
and
or
sub
int
dec
sbb
sbb
rcl
sahf
popa
jl
leave
cs
fwait
shll
pop
dec
add
and
in
pop
sbb
mov
pop
lock
outsb
cmp
cmp
addl
jne
adc
mov
add
pop
xchg
adc
iret
mov
loope
fucomi
add
cmp
jnp
enter
add
cwtl
inc
in
xor
mov
out
lock
imull
stos
insl
xchg
sbb
and
pop
dec
in
cmp
add
flds
and
and
nopl
jns
add
lods
mov
mov
push
lock
dec
je
sbb
cmp
xchg
pop
test
xchg
das
dec
cmp
sti
lock
mov
test
jge
imul
pop
mov
pop
xchg
xor
jnp
sbb
mov
fildll
call
sbb
sahf
pop
add
repnz
or
cmp
mov
xchg
xor
push
fmull
mov
lret
out
or
sub
mov
dec
arpl
jecxz
idivl
mov
frstor
repz
mov
push
rcll
js
xorb
shrb
sub
mov
loopne
and
arpl
icebp
and
sbb
inc
shl
pop
cld
stc
dec
xorb
push
mov
pop
lock
fstp
inc
sbb
leave
popa
sbb
sbb
clc
lock
popf
stc
inc
jmp
cs
push
mov
loope
lret
sub
sti
icebp
add
xchg
mov
add
in
js
jnp
adc
pop
sbb
jbe
arpl
adcl
mov
sti
clc
rcrl
popa
jo
push
jns
sbb
andl
fstpl
adc
ds
stos
fbstp
and
bound
pop
and
fistps
enter
fistps
and
inc
fists
inc
or
and
cmp
adc
stos
xor
pushf
inc
enter
ss
jl
aad
xor
add
icebp
push
add
cld
sbb
daa
push
shll
pop
sbb
int
imul
or
add
cld
xchg
pop
push
mov
fs
sub
mov
dec
mov
mov
add
push
jge
imul
int3
pop
sub
aaa
add
push
lock
jmp
add
xor
cmpsb
jge
dec
jnp
pop
add
gs
fdivl
outsb
add
jno
mov
sbb
add
adcb
cmp
cmp
mov
rclb
or
fs
and
push
fcoms
mov
jg
orb
addb
push
push
cli
addb
add
out
testl
xor
cmpsb
or
lods
push
stc
push
add
add
mov
pop
repz
sbb
add
insl
sti
mov
xor
and
xchg
push
xorl
outsl
bound
subl
adc
mov
jl
gs
mov
ds
gs
push
decl
popa
add
mov
test
in
pop
fst
mov
push
xchg
gs
cltd
inc
imul
incb
outsb
insl
popa
push
ds
inc
xchg
insb
inc
dec
and
and
stos
ret
sbbb
pop
add
jno
loopne
and
mov
outsb
adc
push
in
pop
push
jle
cmpsb
add
int3
push
jbe
ret
call
sarb
mov
mov
call
jne
insb
xchg
arpl
lcall
push
sub
insb
pop
jo
inc
pop
dec
or
add
outsl
push
popa
xchg
inc
jb
sbb
add
gs
xchg
and
push
mov
push
push
or
loop
or
hlt
insb
imul
arpl
outsl
xchg
mov
lcall
pusha
rorb
mov
in
inc
mov
mov
into
add
sbb
sbb
lock
or
fs
out
test
ficoml
dec
dec
leave
add
add
adc
mov
outsl
sub
je
mov
xchg
push
nop
push
imul
sarb
lea
xchg
std
fwait
jne
stos
xchg
jp
inc
sbb
popa
xchg
mov
test
sti
cmpsb
mov
adc
cmp
dec
sbb
out
loop
fistpl
notb
loopne
imul
xor
push
cmp
inc
insb
mov
bound
or
add
mov
loopne
dec
les
push
loop
pushf
pusha
xchg
fs
lea
push
adc
je
je
and
ret
mov
pop
shl
or
jg
pop
sbb
test
inc
insb
mov
rorl
mov
loop
shll
shll
jae
clc
bound
nop
push
adc
push
or
cmp
les
xchg
pop
out
js
push
add
sbb
and
jle
inc
mov
add
adc
add
loopne
adc
add
shrb
jb
loop
adc
outsl
pop
xorb
pop
jne
add
dec
inc
xchg
mov
gs
mov
or
push
lods
inc
add
arpl
mov
fbstp
jle
xchg
jae
mov
loopne
mov
pop
mov
and
fs
push
mov
jbe
outsw
lea
or
dec
add
add
es
or
adc
sbb
jecxz
data16
adc
clc
pop
inc
add
cwtl
pusha
adc
add
sahf
fwait
inc
loop
xchg
pusha
es
adc
dec
mov
jbe
daa
add
dec
mulb
add
incl
jb
mov
pusha
sub
and
pop
inc
nop
insl
jo
sbb
lock
cwtl
loopne
sbb
dec
nop
mov
jne
arpl
add
loop
and
in
adc
outsb
adc
adc
push
xor
bound
jo
sbbb
rcrb
push
gs
sbb
mov
inc
fildl
lods
mov
loope
in
test
cmp
sub
pop
jb
gs
mov
xor
popf
xchg
and
gs
arpl
mov
das
inc
xchg
add
cmp
jg
or
loop
mov
jb
jg
cmp
sbb
je
adc
cld
xor
xor
gs
outsb
jns
inc
loop
push
push
pop
or
mull
or
popa
fwait
push
gs
inc
push
or
in
popf
adc
sbb
jo
mov
inc
add
xchg
xor
dec
or
jo
inc
insb
xchg
sbb
jne
jns
icebp
incl
and
pop
in
dec
lcall
popf
int3
or
add
add
xchg
fildll
push
pop
enter
push
add
or
aaa
mov
cmpb
mov
and
xchg
outsl
push
loope
stos
imul
push
add
sbbb
dec
add
and
and
andb
jns
add
pop
or
insl
decl
loope
inc
loop
test
xchg
push
enter
dec
mov
test
push
aaa
in
mov
push
xor
pusha
and
outsb
inc
mov
clc
mov
popa
xor
pop
jne
lea
jecxz
dec
loopne
into
mov
adc
xchg
loopne
pusha
scas
insb
mov
xchg
leave
icebp
xlat
xchg
push
add
out
loopne
outsb
popa
lcall
sub
mov
popa
sbb
sub
cld
xor
add
and
add
add
push
or
inc
outsl
mov
pusha
mov
sbb
cmp
subb
mov
push
xor
pop
lock
dec
adc
jne
dec
inc
outsb
data16
idiv
pop
xchg
cwtl
pop
mov
push
insb
lock
pusha
push
rcll
sbb
xor
adcb
lods
in
mov
jbe
addb
jo
xor
out
imul
scas
pushl
xor
jb
jae
cmp
mov
xor
dec
adc
xor
add
cwtl
mov
jle
push
or
int3
xor
cbtw
adc
lahf
pop
push
jno
adc
cmpsb
mov
sahf
jno
fcomip
daa
dec
pop
inc
or
dec
mov
fcomip
popa
mov
xor
les
xor
imul
mulb
xchg
nop
jo
xchg
xor
insb
jne
outsl
in
mov
dec
popa
insl
lcall
outsb
lcall
add
nop
imul
or
cmp
inc
js
adc
repnz
jno
cmp
adc
incl
mov
addr16
mov
repnz
inc
mov
sub
push
push
cmc
push
rclb
jp
mov
push
mov
mov
inc
cld
jo
lock
cmp
jbe
mov
add
push
xor
jae
sahf
xor
jle
add
icebp
bound
mov
xchg
icebp
or
push
or
xchg
in
js
mov
xchg
outsb
sbb
jne
shlb
adc
adcb
pop
les
add
pop
imul
xor
imul
ret
push
fs
mov
cmp
mov
clc
dec
sub
inc
push
dec
mov
shll
inc
jg
and
add
enter
incb
jb
push
outsl
stos
outsb
imul
or
cmp
lea
loopne
mov
push
gs
popf
and
sbbl
push
ret
das
andb
jae
xor
nop
mul
das
dec
xor
inc
push
lcall
hlt
insl
shl
mov
adc
jae
add
and
imul
popa
add
mov
cs
jle
push
dec
out
mov
push
add
movsb
jno
cwtl
push
and
outsl
jae
fcmovnu
sub
arpl
add
fwait
outsl
push
ja
xor
les
push
insb
xor
jg
subb
insb
push
xor
icebp
sub
es
jnp
xor
add
in
add
push
jo
cli
xor
cwtl
incl
mov
mov
and
inc
xchg
cmp
js
add
push
push
outsl
ljmp
es
data16
dec
inc
dec
mov
fwait
jno
jo
fcomip
or
fstpt
push
push
nop
lock
or
gs
insb
inc
sti
mov
inc
mov
mov
mov
dec
sahf
addr16
adc
mov
sub
int3
add
gs
sbb
jne
lock
or
nop
push
jb
jl
adc
add
mov
cmc
or
mov
xchg
filds
fs
push
xor
or
push
incl
pop
xchg
push
popa
imul
mov
dec
outsb
jne
inc
lock
je
cwtl
imul
sti
aaa
pop
jp
adc
push
addr16
test
addb
jp
pop
hlt
mov
pop
lock
sbb
or
jnp
inc
sbb
icebp
pop
hlt
jbe
incl
icebp
add
xor
push
es
inc
cmpsb
jbe
mov
ret
hlt
sbb
test
ds
call
mov
rorb
jae
stos
push
xchg
xor
je
repnz
jg
or
mov
fs
inc
xor
mov
mov
mov
mov
rolb
push
lock
push
outsl
or
inc
mov
pusha
push
add
jae
lods
or
rcl
adc
insb
dec
jb
xor
scas
jp
inc
mov
jge
sarb
cli
mov
pop
mov
or
pop
dec
movsb
push
icebp
pop
ret
imul
pusha
mov
xchg
fs
xor
jne
add
or
sbb
pusha
outsl
mov
cli
xchg
imul
add
lock
or
push
outsl
cmp
shrl
jno
dec
loopne
lock
stos
test
xor
xor
mov
loope
mov
cmp
ja
jg
cltd
fadds
jo
je
push
cmp
sub
add
cwtl
push
cli
imul
mov
rclb
mov
push
mov
incl
jne
lock
movsb
xchg
or
xor
lock
icebp
js
add
mov
lret
sub
jae
imul
ljmp
clc
push
jo
jle
jbe
or
pop
jno
jae
xor
sti
mov
cmovno
hlt
mov
rorb
popa
jae
shrb
aaa
or
push
push
xchg
icebp
or
add
fs
in
jb
incl
fiaddl
xor
hlt
aaa
mov
pushf
mov
mov
sbb
push
jo
hlt
hlt
inc
lods
xchg
into
and
inc
ljmp
push
mov
in
and
sbb
jne
jo
mov
les
outsl
mov
aaa
add
test
adc
mov
test
shrb
jne
inc
adcb
cwtl
add
inc
add
clc
inc
dec
add
xchg
add
mov
or
clc
xor
in
add
ret
data16
jb
jae
push
movsl
and
xor
bound
insb
arpl
inc
xor
push
add
sub
push
lcall
pop
xor
push
xor
fs
mov
insl
mov
add
pop
lods
mov
jp
das
push
mov
in
xor
aaa
mov
pop
data16
jb
inc
mov
add
mov
xchg
dec
push
pushf
add
push
gs
imul
loopne
cmp
cmp
add
outsl
sub
xor
xorb
data16
ret
addl
and
add
fimuls
inc
add
cwtl
subb
push
xchg
inc
insb
push
scas
aad
xor
push
jb
cs
popa
adc
sub
mov
jle
nop
lahf
js
sbb
mov
fs
insb
mov
inc
inc
sahf
sub
lcall
cld
dec
push
mov
jbe
sub
or
out
adc
inc
addl
sub
out
sahf
addl
bound
imul
adcl
pop
dec
pop
push
xor
add
data16
fisttpl
insb
leave
orl
movsl
xchg
mov
les
scas
cltd
fiadds
sub
inc
mov
mov
les
ret
stos
mov
xor
jns
arpl
pop
xorb
dec
push
lcall
pop
out
dec
arpl
jo
inc
out
arpl
mov
push
dec
mov
pop
lds
inc
lea
ret
jle
sbbl
outsb
cmpsb
pop
cwtl
aam
mov
jb
xchg
jae
adc
lcall
iret
add
inc
dec
ret
into
sbb
sbb
lock
imul
add
xchg
data16
jl
pop
mov
popa
sub
shlb
test
jp
stos
shr
jne
mov
ret
add
jo
jb
dec
push
addl
or
jle
jl
pusha
push
aam
ret
or
sub
loope
inc
sub
fidivrl
dec
test
push
push
ljmp
jbe
add
cmp
inc
imul
fadd
push
and
js
ss
popa
mov
sbb
or
add
inc
pushf
loopne
lea
or
push
jle
rorb
sbb
insb
enter
add
ret
xchg
rorb
add
ret
addl
and
mov
mov
push
popa
int3
dec
add
inc
aam
xchg
les
ret
sarl
mov
bound
push
mov
add
sbb
push
xchg
fbstp
push
pop
cmpsl
rorb
je
pusha
outsl
jl
loopne
gs
insb
in
inc
xor
fdivp
jae
mov
pusha
xor
add
mov
xchg
insb
lcall
mov
pop
add
or
or
jbe
decl
add
cmp
inc
push
dec
in
xchg
jecxz
mov
outsb
loopne
popa
jo
xor
sub
inc
or
dec
insb
xorb
mov
xchg
pop
ja
and
mov
or
inc
mov
jae
or
ja
inc
loopne
push
dec
mov
and
jnp
dec
ja
sub
xor
pushaw
testb
push
cmp
cld
les
and
lretw
mov
mov
mov
adc
or
das
mov
popa
xchg
push
imul
cwtl
cmpsb
pop
mov
mov
pusha
push
loope
incl
dec
jae
push
dec
pusha
push
push
bound
mov
jbe
adc
arpl
push
mov
int3
popa
inc
add
push
fs
pop
sub
fistpl
test
jl
lods
mov
add
pop
outsb
mov
adc
pop
inc
testb
fwait
inc
inc
inc
pusha
inc
mov
add
sub
shrl
adc
call
nop
pusha
push
mov
adc
loopne
test
adc
inc
arpl
xor
add
mov
cwtl
mov
pop
test
cwtl
fcoms
xor
dec
pop
gs
adc
shl
fcomip
mov
push
push
add
mov
add
or
inc
lret
loopne
push
pusha
jnp
push
dec
or
dec
mov
pop
cmc
or
and
loopne
push
mov
lcall
xchg
int
bound
pusha
or
loopne
mov
test
xchg
clc
je
outsb
arpl
popa
shlb
sub
sbb
loope
hlt
ja
jo
dec
adcb
inc
mov
mov
push
add
inc
add
jp
push
call
stos
pusha
sti
in
loopne
gs
outsb
jo
mov
jecxz
mov
add
shlb
loopne
cmp
adc
push
loop
sbb
or
in
xor
pop
cwtl
jbe
dec
and
xchg
das
int3
add
inc
loopne
popa
adc
bound
xchg
std
sub
dec
repz
fs
xchg
test
inc
jmp
in
and
int
add
fs
adc
pop
sub
push
inc
insb
adc
mov
pusha
ss
inc
movsb
xchg
push
sbb
loop
mov
icebp
sbb
mov
xchg
clc
lea
add
fwait
sub
lea
push
das
jl
lret
xorb
in
mov
pop
incl
loopne
mov
inc
dec
inc
sub
sbb
mov
cmp
fwait
loopne
pop
ds
pop
and
adc
sub
clc
dec
push
test
inc
pop
xor
les
or
push
push
mov
test
add
rcr
test
adc
pusha
fistl
popa
add
aad
sbb
xor
xor
add
adc
shrb
dec
lods
cli
push
jae
ss
dec
jbe
insb
push
insb
mov
ficomps
mov
repnz
jo
xor
int
jl
xor
adc
mov
fldt
adc
adc
pushl
outsl
je
sbb
xchg
add
cmpsl
ljmp
repnz
les
mov
js
inc
and
imul
arpl
lea
cmpsb
jle
imul
subb
jb
sarb
aaa
rol
sbb
mov
mov
add
loopne
imul
mov
add
add
insb
push
xor
push
ret
xor
je
xor
scas
inc
pop
push
jo
mov
dec
mov
pop
inc
push
cmpsb
push
push
hlt
mov
mov
pop
jne
and
xor
jle
pop
clc
mov
pop
outsb
jo
pusha
jne
xchg
pop
jo
mov
aam
adc
subl
push
lods
loop
or
outsb
mov
mov
add
mov
and
sbb
jb
jae
pushl
inc
fidivl
push
lods
xor
xor
push
xchg
mov
mov
lret
in
mov
add
test
lret
add
fs
inc
insb
pop
xor
hlt
cmpb
xor
jbe
lock
out
xchg
xorb
or
pop
add
insb
lock
or
add
inc
inc
out
xchg
sub
inc
pop
mov
push
icebp
jg
push
sub
jo
cmc
adc
cwtl
std
aaa
add
lods
jbe
dec
mov
in
mov
mov
mov
or
or
push
lea
xchg
fsubp
sbbb
push
push
mov
push
push
lcall
dec
mov
push
xchg
testb
add
imul
pop
jbe
lock
cld
ljmp
gs
push
dec
and
repnz
dec
dec
cwtl
sbb
stc
inc
push
push
xor
mov
jo
icebp
popl
mov
ret
imul
push
lret
xor
add
je
xor
inc
inc
inc
outsl
ljmp
add
mov
cmp
out
xchg
inc
subb
mov
sub
gs
push
mov
jb
arpl
std
xchg
lock
mov
scas
test
lea
add
ja
outsl
imul
sahf
add
enter
arpl
pop
jne
xchg
je
xchg
jle
mov
arpl
jecxz
sub
jae
arpl
je
xor
stos
jp
mov
sub
mov
cli
add
sar
lcall
popf
jne
inc
mov
xor
out
push
je
jnp
or
push
inc
xor
sbb
es
shl
test
lret
pop
adc
sbb
icebp
dec
xor
lcall
pop
add
cmp
push
mov
xor
pop
cli
test
fisttps
js
sbb
add
or
incb
aas
add
aas
add
pop
add
movsl
adc
out
movsl
mov
sbb
filds
popf
inc
pop
push
mov
jo
hlt
add
push
xchg
jg
mov
out
divl
mov
xor
xor
mov
fcomp
xchg
loop
mov
ret
js
fnstsw
adc
mov
inc
mov
aad
sarb
xor
mov
sbb
lock
ljmp
mov
sub
imul
sbb
mov
jmp
inc
mov
in
pop
xor
xchg
mov
scas
inc
inc
push
mov
add
jle
mov
mov
cmpsb
xor
dec
pop
xchg
mov
leave
inc
inc
xchg
test
inc
test
sti
jg
inc
in
testl
push
mov
pop
cmpb
subl
sub
jnp
es
xlat
out
cli
adc
stos
pop
scas
mov
cmp
cli
inc
adc
add
repz
loope
test
decb
xchg
icebp
scas
mov
repnz
or
addl
dec
cmpsl
inc
in
insb
cmp
inc
mov
jmp
cmpsl
lcall
xchg
cmpsb
lock
and
bound
pop
xchg
pop
mov
popa
cs
pop
jbe
add
outsl
xchg
clc
repz
fldl
xchg
fisttps
add
jne
rcll
adc
int3
int
xor
mov
or
cmp
insl
pop
jo
sub
cmp
mov
outsb
in
divb
xor
cmp
sub
out
pop
pop
dec
shl
xor
mov
mov
clc
stos
xor
cmpsl
out
aas
mov
add
xor
pop
icebp
jg
cmp
aad
xchg
jb
nop
out
cmp
cmp
adc
stos
in
rorb
mov
mov
leave
aas
insl
les
push
int
adc
adc
lcall
movb
sti
push
cli
dec
lock
xchg
aas
dec
mov
jp
pop
std
pop
jge
push
pop
roll
pop
aas
sub
das
jp
mov
call
mov
daa
ljmp
aas
subb
das
fstl
add
outsb
loope
push
ja
xchg
cmpl
arpl
jl
mov
cmp
mov
std
xlat
cmp
mov
in
call
add
addb
cmp
jne
sti
aaa
cld
ljmp
cmp
jno
rolb
xor
mov
pop
in
pop
xchg
adcb
and
mov
adc
mov
adc
insb
loope
xor
dec
in
leave
rolb
push
sbb
cmc
into
imul
ret
call
sbb
popa
out
pop
test
cmp
scas
subl
ffree
dec
bound
scas
stc
xchg
jge
sbb
mov
loop
cmpsb
fsub
add
mov
lds
in
rorb
cwtl
loop
outsl
mov
les
addr16
scas
inc
push
pop
orl
sub
aaa
test
in
sub
incb
adcb
mov
inc
mov
into
mov
fwait
cmpsb
add
lret
push
push
roll
push
sbb
imul
cltd
addl
dec
or
add
add
adc
add
fistpll
lods
lcall
add
lea
stos
sbb
add
out
das
aaa
inc
dec
inc
jmp
jl
arpl
cli
negl
add
xchg
add
lds
lcall
add
int3
add
mov
mov
push
mov
push
dec
add
sbb
inc
pop
lea
out
lret
adc
int3
mov
inc
xchg
mov
imul
loope
pop
sub
std
cmpsb
add
insb
xchg
lret
xor
icebp
insl
dec
fistpll
and
outsb
mov
mov
fwait
dec
mov
or
or
out
jge
mov
xor
mov
jmp
push
push
mov
popa
insb
ss
dec
js
sub
add
lcall
test
addr16
jmp
push
dec
sub
adc
xchg
insl
mov
cs
es
rorb
push
xor
pop
adc
pusha
xchg
lret
cmp
loope
jg
push
aaa
mov
aas
adc
aaa
daa
aaa
in
paddb
idivl
adc
dec
adc
sti
push
push
fs
cmp
cmp
out
cmp
out
sbb
pop
jg
mov
and
ja
sarb
cmp
sahf
idiv
xlat
sbb
xor
xor
xor
xor
adc
xor
xor
mov
sbb
test
jae
fwait
jo
mov
in
inc
insl
and
xor
aam
cmp
cmp
adc
mov
fstpt
add
cmp
add
cmp
cmp
push
adc
or
inc
ss
fildll
daa
mov
xchg
add
cmp
cmp
cmp
dec
movsb
cmp
mov
inc
cmp
cmp
adc
cmp
loopne
adc
add
fstps
rep
ret
pop
stc
fwait
mov
cmp
push
mov
cmp
mov
jae
xchg
arpl
dec
adc
add
xchg
dec
adc
sbb
pop
out
mov
cmp
add
repz
and
sarl
inc
ss
ds
ds
ds
pop
test
mov
roll
sbb
arpl
int
jbe
push
mov
inc
les
xor
and
in
adc
enter
add
add
repz
ss
fistpl
sarl
mov
mov
int
mov
mov
aas
aas
cmpl
aas
jae
aas
arpl
movsb
aas
sub
aas
aas
inc
push
xor
popa
sbb
test
dec
push
inc
ss
rolb
daa
sti
aaa
enter
xor
sub
lret
adc
js
xor
xor
fwait
xchg
dec
sbb
jl
outsl
sbb
pushf
xor
lods
xor
xor
xor
xor
fdivl
sbb
in
adc
sbb
cld
xor
add
flds
outsl
mov
xor
xor
xor
jl
jnp
mov
fs
outsl
xor
fmuls
fdivl
in
aaa
and
sti
xor
mov
inc
nop
add
sub
mov
cmp
mov
xor
pop
xor
fcoms
jl
sbb
pushf
xor
fcmovne
sbb
xor
xor
fwait
mov
xor
xor
cld
pop
xor
mov
sbb
sbb
adc
mov
adc
fwait
mov
xor
xor
xor
xor
xor
and
cld
xor
fcmovne
sbb
xor
xor
mov
mov
xor
xor
xor
ss
or
jo
xorb
adc
mov
lods
ds
aas
insb
aas
inc
jno
pop
fs
inc
loope
mov
rcrb
inc
xor
add
pop
push
decl
ljmp
ss
int
call
decl
mov
cli
cmp
cmp
mov
add
add
add
sbb
inc
add
sbb
decl
xor
outsb
mov
cmp
cmp
cmp
cmp
fdivr
sbb
cmp
loope,pt
add
add
add
dec
sub
inc
sbb
pop
xor
nop
xor
xor
into
xor
adc
xor
xor
cmp
inc
xor
xor
xor
mov
dec
ss
aaa
add
sbb
aaa
and
add
in
and
pop
pop
cmp
add
sbb
sbb
cmp
cmp
stc
clc
and
cmp
cmp
xorl
lock
cld
in
ret
es
popf
cmp
xor
add
adc
leave
sahf
aaa
push
aaa
lret
loopne
loope
cmp
cmp
cmp
sub
cmp
inc
inc
cmp
cmp
cmp
mov
mov
out
cmp
cmp
rclb
jo
push
cmp
cmp
je
mov
adc
fdivrs
and
push
ret
mov
sti
cmp
adc
fsubrs
gs
stos
fdivp
jb
jp
cmp
cmp
xchg
cmp
fwait
clc
push
cmp
inc
out
sbb
cld
out
ds
jo
cs
mov
push
inc
aas
repnz
mov
lock
xchg
push
xor
pop
mov
aam
imull
xor
jl
xor
data16
sub
incb
cmp
lret
cmp
popw
cmp
cmp
cmp
fstps
inc
mov
aam
or
jg
ja
inc
nop
push
test
xor
inc
fisttpl
pop
xor
xor
xor
xor
hlt
xor
adc
xor
incl
mov
add
into
xor
xor
xor
fstpt
ds
ss
push
sub
popa
in
cmp
cmp
outsl
clc
sbb
cmp
pop
cli
cmp
dec
push
cmp
add
aad
cmpsb
ret
xchg
adc
cmp
cmp
cmp
cmp
cmp
jg
mov
adc
cmp
adc
aaa
ds
jo
push
ds
mov
aas
jg
jp
fwait
aas
sub
adc
inc
xchg
xor
lcall
mov
aaa
jle
cmp
stos
xor
imul
call
sbb
add
ret
xor
xor
push
lahf
xor
add
loope
pop
adc
xor
add
ss
scas
call
mov
ss
aaa
adc
jge
lea
fs
dec
dec
ljmp
cli
push
cs
cmp
cmp
adc
cmp
hlt
nop
dec
and
test
js
dec
xchg
cmp
push
add
sbb
cmp
mov
mov
xor
in
push
jl
adc
sbb
ds
ds
pop
jmp
ds
push
aas
lds
inc
aas
mov
aas
push
aas
sub
and
lods
andb
mov
lods
aad
jmp
xor
mov
jne
xchg
xor
xchg
ret
xor
xor
outsl
mov
in
and
or
pop
cmp
cmp
out
push
clc
mov
outsb
jge
mov
ret
jo
dec
mov
inc
aaa
mov
xor
xorb
mov
xor
inc
xor
jbe
call
cld
add
int
or
mov
add
loopne
fcomi
cmp
cltd
cmp
mov
sarl
cmp
mov
adc
mov
pop
cmp
sub
mov
loop
cmp
add
jmp
jle
sub
jo
lret
xor
lock
roll
dec
xchg
xor
xor
xor
in
pop
decb
ss
ss
adc
shll
cwtl
mov
std
cmp
pop
cmp
lds
lret
cmp
cmp
cmp
xor
dec
std
inc
ds
and
cmpsb
xlat
or
cwtl
xor
add
push
aad
lock
aaa
and
out
sub
fidivrs
add
jl
popa
push
cld
inc
add
aam
mov
adc
pop
xor
push
loop
fsub
xor
cmp
cmp
cmp
test
mov
mov
repnz
mov
es
xor
cmp
nop
inc
sahf
cmp
cmp
sti
add
daa
jle
lcall
in
cmp
dec
cwtl
pop
outsb
and
mov
mov
lea
mov
xor
mov
mov
mov
sub
cli
xor
mov
int3
cmp
xor
xor
in
daa
xor
adc
xor
mov
jo
pop
xor
imulb
fiaddl
js
xor
and
xlat
adc
ljmp
sub
iret
xor
xor
mov
add
push
xor
pushl
jg
xor
insb
xor
jl
cmpb
xor
push
add
add
xor
pop
movsb
xor
outsb
sub
sti
lcall
xor
ss
add
ss
adc
ss
repz
aaa
lahf
ss
ss
xchg
jl
repz
jg
test
ja
mov
xchg
ss
pop
movsb
ss
lods
jg
pushl
orb
ss
ss
aaa
ss
ss
add
pop
fdivl
pop
cli
or
fsubp
mov
ds
out
cmpb
ds
aas
mov
aas
cld
inc
mov
inc
pop
adc
pop
cmc
decl
inc
or
xor
xor
out
jb
or
xor
pushl
sbb
ss
add
pop
stos
xor
cwtl
push
xor
bound
jo
sarl
mov
ret
xor
bound
xor
xor
xor
outsl
fcomip
hlt
inc
xor
add
stc
nop
imul
sbb
fbstp
sub
iret
adc
outsl
pushl
popf
xor
lea
test
outsl
mov
and
xor
xor
xor
adc
push
adc
fidivl
cmp
xor
adc
xor
dec
lock
hlt
add
out
push
pop
loopne
sub
mov
mov
outsb
rorb
rclb
and
xor
push
out
xor
xor
lock
sbb
cltd
fisubs
push
xor
ljmp
ljmp
incl
mov
push
cmpsb
push
cmp
adc
jo
dec
ss
call
pushl
push
aaa
movsl
add
jb
xchg
test
insl
insl
loop
mov
aaa
divl
add
loope
xor
jg
das
or
cmp
adc
cmp
fidivrs
sbb
or
cmp
cmp
adc
and
mov
es
into
inc
cmp
pushl
std
idivb
aaa
cmp
adc
cmp
cmp
cmp
shrb
cmp
pop
pusha
cld
cmp
rclb
adc
cmp
cmp
jge
stos
add
dec
lods
aas
outsl
add
inc
dec
add
and
add
and
scas
stos
add
push
adc
xor
sub
cmpsb
xor
xor
pusha
mov
rcl
xor
xor
xor
sar
pop
scas
add
xor
xor
xor
loope
and
xchg
int
jne
test
xchg
xor
mov
das
cli
ja
out
xor
xor
xor
xor
fidivl
fs
xor
xor
xor
sub
adc
xor
xor
hlt
fcomip
or
lret
fdivs
xor
xor
outsl
sbb
ret
out
ret
lcall
movswl
ss
sahf
sub
fldt
or
stc
into
add
aaa
in
aaa
pop
aaa
jecxz
sub
pop
dec
fnstenv
sub
iret
aaa
xor
insb
dec
aaa
mov
push
aaa
cmpsl
aaa
out
cli
lcall
popf
aaa
addr16
xchg
aaa
jno
mov
jnp
jg
test
jne
push
aaa
cltd
aaa
popa
ljmp
lods
aaa
dec
aaa
mov
inc
aaa
shll
aaa
lret
aaa
das
aaa
aad
and
fbstp
sbb
jmp
aaa
pop
aaa
std
add
pop
cmp
cmp
cmp
cmp
cmp
cmp
loope
cmp
push
cmp
sarl
cmp
inc
mov
cmp
cltd
cmp
cmp
test
jg
jnp
mov
jno
xchg
cmp
ljmp
cmpsl
cmp
mov
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
out
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
sub
cmp
cmp
xchg
jg
outsl
cmp
cmp
push
cmp
sbb
scas
scas
ljmp
cmp
pop
cmp
enter
push
cmc
divl
test
xchg
mov
sub
xor
xchg
shlb
into
stos
in
push
std
scas
xor
ljmp
jb
push
cmp
cmp
xchg
filds
hlt
cmp
cmp
ret
into
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
fstpt
je
call
out
cmp
adc
push
ds
ds
mov
aas
ret
lods
aas
xor
nop
movsb
ljmp
cwtl
lods
xor
int
sbbb
push
fisttps
sub
xor
xor
aad
outsb
xor
add
xor
xchg
and
loop
pushl
xor
adc
inc
shrb
inc
jp
stos
jmp
xor
jbe
aaa
mov
push
cmp
push
jl
test
inc
cmp
cmp
cmp
aaa
cmp
cmp
stos
cmp
sub
jo
pop
mov
jg
jbe
arpl
test
or
stos
adc
inc
lahf
cmpsb
loopne
xchg
aas
dec
aas
out
mov
aad
jmp
and
adc
ljmp
pop
subb
add
push
xor
xor
rcl
xor
mov
push
xor
or
mov
xor
xor
xor
inc
xor
or
mov
xor
xor
xchg
inc
cli
lcall
mov
xor
or
mov
mov
dec
ss
push
sbb
push
mov
shlb
cli
stos
popl
pop
in
push
cmp
cmp
ljmp
jle
dec
cmp
leave
cmp
jg
xchg
jb
lahf
cmp
scas
mov
incl
aas
cmp
cmp
cmp
cmp
cmp
cmp
cmp
decl
std
pop
sub
cmp
xlat
cmp
push
scas
ds
ds
js
sub
aas
cwtl
xor
iret
into
mov
xlat
xor
sub
xor
xor
inc
xor
xor
xor
mov
mov
xor
stos
cmc
xor
add
xor
daa
xor
notl
inc
jg
rcrl
cmp
cmp
xchg
icebp
dec
cmp
mov
int3
mov
cmp
cmp
cmp
lods
cli
ds
ds
pop
adc
sub
cmpsl
cmp
out
or
mov
decb
lret
cmc
or
xor
loop
fiaddl
xor
pushf
xor
xorb
inc
dec
mov
loop
divb
adc
fbstp
sub
dec
ss
ss
sarb
cld
lea
aaa
scas
aaa
cmp
cmp
cmp
cmp
cmp
cmp
cmpsl
ds
rolb
out
imul
pop
stos
inc
xor
cld
ja
or
mov
adc
add
enter
add
loop
xor
xor
xor
xor
fdivs
jb
repnz
pop
ljmp
call
push
inc
aaa
test
aaa
cld
cmp
cmp
cmp
cmp
ljmp
movsb
xchg
cmp
cmp
call
lds
cmp
sbb
loopne
loop
decl
jle
int
push
sbb
xor
xor
jg
lods
xor
xor
xor
jg
loopne
xor
xor
mov
push
cmp
adc
or
jbe
ss
sbb
sbb
fstpt
push
cmp
idivb
jmp
mov
inc
adc
cmp
jb
push
adc
repnz
pop
xor
xor
adc
ret
sub
mov
or
pop
sub
or
ss
rcll
out
sbb
lock
adc
aaa
push
aaa
mov
repnz
sbb
cmp
push
repnz
mov
push
pop
push
fs
jae
test
push
jo
insb
out
pop
sub
mov
jg
cmp
cmp
cmp
cmp
fcompl
add
cmp
pop
test
push
cmp
cmp
push
lea
or
aad
mov
cmp
xchg
sahf
jne,pt
xor
sar
call
push
xchg
ja
xor
xchg
xor
xor
xor
mov
xor
xor
outsb
aaa
stos
aaa
inc
aaa
sbb
sarb
inc
or
jo
jns
test
pop
mov
cmp
cmp
rolb
test
jl
cmp
cmp
add
xchg
cmp
cmp
loope
jecxz
jo
cmp
cmp
cmp
cmp
mov
cmp
cmp
and
cmp
mov
pusha
call
cmp
push
arpl
pop
loopne
cli
bound
xor
xor
icebp
aas
shlb
jb
xor
xor
xor
xor
pop
adc
lods
cli
mov
push
sub
ret
cs
xor
cmpsb
mov
xor
or
mov
movsl
and
xor
xor
in
xor
rolb
rol
out
or
in
or
cmp
cmp
scas
cmp
clc
cmp
dec
cmp
cmpl
cmp
cmp
cld
scas
inc
aas
pushf
push
loope
sbb
xor
xor
xor
mov
xor
cli
outsl
les
mov
xor
xchg
xor
ss
fcmovbe
or
and
xor
jg
ljmp
mov
mov
xor
xor
dec
xor
dec
clc
stos
hlt
xor
xor
dec
or
xor
push
aaa
mov
ret
aaa
fdivl
sbb
inc
test
push
and
daa
lcall
sar
push
xlat
cmp
clc
cmp
cli
mov
cmp
cmp
ds
ds
sub
xchg
aaa
inc
addr16
xor
xor
call
int
inc
ffreep
and
xor
loope
push
popa
xor
xor
xor
xor
push
adc
mov
scas
cmp
cmp
pop
clc
mov
jbe
xchg
cmp
sarb
sub
cs
push
std
or
push
cltd
cmp
leave
sarb
cmp
cmp
cmp
clc
ljmp
push
loope
xchg
cmp
inc
cmp
mov
ds
ljmp
add
lret
aas
cmp
mov
outsb
or
jo
push
lock
in
mov
mov
add
ljmp
outsl
add
pop
xor
xor
addr16
cmc
push
stos
jge
xchg
xor
mov
dec
std
pop
loop
xor
xor
cmp
cli
scas
push
lds
or
adc
dec
mov
clc
scas
scas
or
fdivs
idiv
jg
repnz
push
ss
ss
imul
pop
aaa
xchg
aaa
mov
clc
jmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
incl
pusha
cmp
cmp
int
push
cmp
push
cmp
pop
lret
cmp
ds
sbbb
fistpll
shlb
mov
je
movsl
xor
mov
add
xor
xor
jg
cmp
bound
insl
push
mov
xor
cs
xor
pop
fnstenv
adc
shlb
inc
xor
mov
mov
loopne
mov
xor
jge
lds
xor
push
lods
pop
xchg
mov
test
sub
test
adc
sbb
cmpsb
push
shlb
mov
xor
ret
mov
add
xorb
aaa
in
cld
push
subl
push
ret
mov
mov
cmp
mov
cmp
cmp
cmp
ljmp
cmp
cmp
mov
cmp
adc
add
call
cmp
mov
outsb
sar
cmp
cmp
cmp
cmp
mov
cmp
lret
lds
add
cli
ret
dec
mov
jb
push
cmp
orb
xor
xchg
loop
fcomip
jle,pt
inc
push
ds
aas
ss
cmpsb
aas
data16
push
aas
sarb
aas
dec
mov
divb
repz
enter
inc
test
sbb
xor
xor
xor
maxps
mov
xor
jae
cwtl
xor
pushl
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
hlt
xor
out
jb
aaa
cld
aad
mov
cmp
cmp
mov
mov
out
dec
lcall
call
jbe
add
stos
cmc
cmp
inc
add
and
dec
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
loop
dec
cmp
cmp
cmp
cmp
cmp
int
bound
test
lods
les
lds
inc
rorb
dec
dec
push
push
ret
xchg
outsb
add
sbb
xor
aas
ds
mov
aas
test
and
push
xorb
jp
sahf
xor
aad
pop
xor
sarl
push
dec
push
xor
xor
jbe
inc
xor
aaa
push
push
pop
sub
cmp
push
jmp
cmp
loopne
cmpb
imul
test
nop
jg
imul
xor
sbb
mov
xor
xor
bound
jge
cmp
xor
sub
jo
mov
out
les
or
add
xor
inc
dec
push
mov
test
dec
out
aam
int3
les
jp
decb
movsb
and
xor
push
xchg
mov
push
ja
jg
test
xchg
and
lret
xchg
mov
inc
ss
aaa
cmpsb
aam
les
push
loop
adc
cmp
repnz
or
cmp
cmp
xchg
push
shl
je,pt
icebp
mov
mov
adc
xor
aaa
mov
xor
mov
or
push
into
jg
sub
fidivs
in
je
push
jne
xchg
mov
mov
dec
adc
loopne
mov
in
scas
std
xor
sbb
push
xchg
push
pop
ds
xor
aam
adc
cmp
push
jp
aaa
aaa
or
mov
mov
mov
ljmp
lea
jp
jno
ja
dec
sarb
push
cmp
mov
lcall
cmp
and
adc
cmp
cmp
add
in
cli
jmp
cmp
cmp
cmp
cmp
cmp
cmp
jb
outsl
cmp
sbb
and
mov
cmp
call
adc
push
sbb
pushf
clc
out
sarb
mov
or
and
lret
mov
cmp
aas
ja
mov
das
popa
xor
jae
xor
xor
jg
push
js
jg
ret
xor
xor
xorw
scas
push
xor
jno
inc
dec
mov
pop
xor
add
and
xchg
aaa
xlat
aaa
out
cmp
xor
hlt
cmp
sbb
cmp
hlt
add
mov
push
loop
cs
adcb
repnz
jle
fwait
dec
je
mov
sbb
cmpsb
mov
clc
les
or
xor
add
aaa
mov
enter
xorb
leave
xor
xor
sub
cmp
sbb
stc
xor
xor
jecxz
jno
ficoms
push
xor
loope
cmpsb
stos
dec
cmp
enter
cmp
cmp
in
pusha
or
arpl
cmp
test
sahf
xor
sub
aas
aaa
aas
popf
call
mov
dec
std
lar
xor
xor
xor
test
xor
sbb
in
mov
dec
xor
enter
and
sbb
pop
mov
loop
cld
and
shll
xor
xchg
and
ss
sub
out
or
ret
pop
es
mov
add
jmp
inc
sti
lahf
imulb
je
notrack
jle
stos
xor
inc
ret
ss
ret
xor
cmp
mov
pushf
inc
cwtl
and
fsubs
ljmp
jo
or
cmp
pop
xor
cmp
adc
adc
test
lcall
cmp
mov
dec
cmp
ljmp
fcomps
insb
cmp
or
xchg
ds
add
pop
mov
ficoms
movlhps
aas
sub
iret
push
jge
or
aas
jp
js
cli
inc
sbb
add
mov
xor
aas
and
testb
xlat
cmp
and
gs
ds
push
adc
jno
std
jbe
mov
cmp
and
and
adc
fisubs
cmpsb
add
mov
adc
test
arpl
add
mov
add
cmp
cmp
mov
lret
mov
stos
scas
push
cmp
cld
stos
push
in
aaa
jp
xor
les
fcoml
jle
jp
arpl
xor
std
sub
divb
jmp
sbb
sub
mov
mov
pop
pusha
dec
jl
pop
into
push
mov
adc
mov
aaa
adc
outsl
aaa
stos
test
dec
adc
aaa
or
subb
sbb
jle
pushf
add
sub
ret
xor
xchg
lahf
mov
or
je
xchg
push
nop
xor
pop
cmp
xor
cwtl
xorb
lcall
mov
xor
sbb
rolb
or
rorb
imul
adc
xor
xor
ljmp
mov
add
cltd
jae
jbe
push
adc
xor
inc
push
mov
aad
mov
xchg
fdivl
add
cmpsb
ret
xor
inc
pop
es
push
xor
mov
pop
stos
xchg
sbb
mov
push
xchg
inc
ss
ss
push
mov
aaa
mov
pop
adc
dec
dec
rcr
push
aaa
mov
xchg
xchg
and
cmpsb
add
jg
jg
jg
add
adc
sub
aas
add
leave
sub
and
andb
lock
call
lock
cmp
dec
sub
in
lret
addr16
mov
and
and
mov
fcomip
scas
xchg
xchg
jb
and
dec
pushl
pop
stos
push
adcl
rcll
clc
or
push
out
add
sub
les
mov
jg
and
add
xchg
inc
test
mov
pop
dec
cs
add
mov
in
bnd
shlb
and
xor
jle
mov
mov
pop
cltd
lods
pop
out
add
jl
adc
pop
sahf
add
adc
and
decl
sti
push
mov
sbb
jne
popl
fstpl
add
out
mov
push
jmp
adc
jecxz
mov
fucom
dec
movsb
leave
xor
push
lods
ljmp
out
imul
adc
cld
mov
scas
addr16
mov
sarb
xchg
xchg
addb
out
and
add
aad
les
mov
in
or
add
cld
rcrl
dec
ds
cmp
xchg
dec
or
stos
jg
xchg
xor
mov
push
push
lcall
decl
add
and
test
xor
xor
int
add
addr16
cmp
es
add
mov
insb
push
jbe
sbb
pop
call
add
aaa
xchg
mov
fwait
xchg
std
fcom
aam
xor
out
and
jb
das
clc
pop
xchg
int3
adc
fwait
in
xchg
mov
outsb
aam
ljmp
jbe
das
sahf
push
hlt
ret
jne
pop
mov
lcall
aad
es
shll
fwait
dec
xor
dec
mov
lcall
dec
addl
cmpsb
fisttpl
outsl
addr16
in
sub
xchg
pop
icebp
sahf
lods
daa
nopl
sbb
cmp
mov
clc
pop
ljmp
mov
je
jno
les
xor
fsubrs
ljmp
clc
lcall
out
and
xor
aad
repz
cli
ret
cmpl
ja
incl
xchg
stc
add
xchg
mov
ss
aad
fstps
inc
add
inc
sbb
cmpsl
mov
jl
adc
inc
ret
dec
outsl
arpl
or
push
dec
sub
mov
call
jne
dec
mov
and
arpl
push
jb
je
nop
add
dec
sbb
lcall
adc
gs
jmp
jb
jle
addl
dec
outsl
out
dec
adc
imul
ss
adc
fs
add
call
jae
push
or
arpl
fs
add
pusha
jae
fs
and
test
xchg
sti
fdivrl
jns
sbb
inc
and
mov
imul
jb
push
inc
mov
arpl
in
mov
push
pop
inc
push
popa
bound
push
je
cmp
sub
test
jbe
xor
fbstp
inc
dec
push
popa
rol
mov
out
push
jne
cltd
sub
xchg
inc
sub
test
and
dec
sub
inc
repz
jae
mov
pop
mov
pop
cmp
adc
ds
push
adc
sbb
dec
shll
mov
flds
lea
sub
fildl
mov
jo
fildll
inc
je
push
xchg
inc
insl
inc
and
and
mov
imul
dec
inc
xor
and
pop
push
adc
mov
nop
icebp
and
fwait
orl
inc
mov
sbb
xchg
mov
add
cvtps2pi
les
lea
pop
popf
mov
lret
jb
inc
push
mov
push
loope
xor
pop
das
lahf
or
add
push
std
lcall
mov
and
xor
sbb
subb
or
mov
jg
test
or
nop
pop
cli
dec
shlb
test
mov
add
inc
cmpsl
xchg
push
adc
mov
jne
inc
xor
sbb
andl
test
data16
dec
push
mov
repz
test
sub
sbb
mov
xchg
add
push
adc
add
adc
and
mov
inc
cmp
add
jmp
test
shrb
push
leave
inc
mov
add
adc
lods
xchg
inc
loopne
lods
pop
xchg
jae
nop
popa
insb
insb
xor
cwtl
adc
and
mov
add
je
push
inc
or
addl
add
adc
inc
mov
push
stos
mov
popf
jge
add
les
or
add
or
in
xorl
insl
push
xor
mov
imul
jge
add
nop
xchg
rorb
adc
inc
test
xor
sub
inc
xorl
movsl
nop
mov
and
xor
add
adc
mov
addl
out
push
or
fisttpll
add
adc
dec
inc
orb
add
push
sub
push
push
push
daa
mov
add
cmpsl
adc
adc
push
mov
and
mov
or
or
test
cmc
pop
rolb
mov
push
fildl
push
add
mov
jmp
push
dec
and
inc
jno
mov
jmp
call
xchg
sbb
or
mov
push
xor
addl
lods
out
sub
add
or
and
add
mov
add
adc
inc
pop
shll
adc
mov
add
adc
dec
popf
add
sub
mov
or
mov
mov
dec
adc
jne
jmp
mov
and
inc
add
int3
pop
xor
push
arpl
shrb
adc
loop
add
popf
inc
sub
adcl
insl
inc
lea
sbb
andb
test
test
add
sarb
dec
or
daa
nop
cmpsl
add
stos
adc
aaa
outsl
inc
mov
pop
sbb
pop
inc
mov
adc
xor
je
inc
test
adc
dec
rep
adc
add
ret
adc
lahf
sub
loopne
inc
adc
or
inc
stos
sub
and
mov
sbbb
or
adc
pop
fadd
add
popa
inc
mov
pop
adc
imul
mov
adc
aaa
push
shrl
and
and
add
sti
push
addb
mov
outsl
xor
rorl
dec
movsb
ljmp
jno
nop
mov
scas
add
bound
inc
push
dec
push
orb
stos
lret
adc
cmc
sub
or
addb
fldl
inc
and
or
adc
xor
inc
test
add
push
dec
cmc
jo
and
insl
sbbl
cmpsb
push
cmpl
mov
xchg
inc
mov
mov
sub
aaa
mov
xchg
pop
push
mov
shll
aad
push
je
insl
movsb
orb
add
xchg
gs
aaa
xor
loopne
adc
add
orb
cs
mov
arpl
push
rorb
lea
adc
rclb
loop
mov
add
test
push
fstl
jno
test
loop
push
and
rcr
and
sbb
mov
push
dec
xchg
lret
add
adc
adc
add
xchg
mov
insl
sbb
and
test
push
xchg
jmp
push
xorl
or
pop
mov
inc
or
xchg
push
inc
xchg
repz
adc
rcrl
loopne
mov
test
dec
inc
mov
mov
and
iret
outsb
push
lea
inc
test
movsl
xor
and
cmp
sbb
ret
inc
andb
adc
xchg
or
stos
jno
mov
pop
jmp
and
xchg
adc
add
adc
mov
xchg
adcb
adc
or
and
mov
pop
ret
mov
movsl
inc
xor
test
xor
xchg
ret
ret
das
add
and
mov
push
fisubrl
add
push
dec
xchg
fistpll
sub
popl
test
xchg
sbb
daa
xchg
xchg
or
inc
pop
and
mov
mov
rolb
add
mov
imul
add
and
jo
push
or
mov
out
add
add
mov
add
inc
push
dec
xor
pusha
rolb
mov
sub
fs
je
cmpsb
mov
push
xchg
jle
inc
outsb
dec
jb
push
xor
cld
dec
shlb
daa
pop
orb
fisttpl
pushf
dec
dec
xor
add
jae
arpl
cmp
es
xor
fsubrs
push
add
mov
and
xchg
test
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
and
add
loopne
add
add
add
add
add
add
or
add
add
js
add
mov
add
add
add
addb
add
add
addb
add
inc
add
addb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
inc
add
add
add
add
add
add
add
add
add
add
mov
push
inc
add
add
add
add
add
add
add
add
add
add
loopne
add
in
push
inc
add
add
add
add
add
add
add
add
add
add
or
add
rcrb
add
add
add
add
add
add
add
add
add
add
xor
add
mov
inc
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
test
add
pusha
inc
add
add
add
add
add
add
add
add
add
add
rolb
add
inc
imul
in
add
add
add
add
add
arpl
add
clc
add
addb
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
jb
add
loop
movb
jo
or
mov
nop
jp
shll
inc
mov
notb
pop
pop
dec
pushl
cmpsb
stos
push
adc
lods
ds
push
out
push
push
or
sub
adcl
xchg
mov
xchg
mov
add
pop
mov
gs
jno
or
sub
daa
in
pop
jae
das
and
push
mov
mov
rol
pop
cltd
push
pop
out
xchg
data16
jmp
pop
sahf
ss
and
repnz
push
mov
in
jne
jo
nop
out
pop
fstpl
jb
movsl
push
push
add
scas
jmp
jecxz
inc
fucom
dec
jl
leave
int3
in
dec
ja
lods
fcmovne
xchg
in
push
out
imul
dec
rcl
adc
fwait
xchg
mov
dec
mov
xchg
lret
inc
and
aad
in
jo
sbb
or
mov
adc
outsb
seta
push
xchg
xor
mov
push
lcall
ret
xchg
jecxz
and
jnp
or
into
fwait
lods
xor
pop
int
push
addr16
cmp
andb
fisubrl
sarl
scas
ja
push
mov
add
daa
aaa
xchg
mov
xchg
ret
xor
sbb
mov
lea
out
outsb
fistps
mov
imul
movsl
jbe
das
cmp
bound
pop
mov
and
add
shll
fwait
dec
xor
roll
mov
xor
or
outsl
cwtl
push
in
xchg
dec
pop
icebp
sahf
push
daa
nop
sbb
lds
mov
pop
pop
ljmp
jno
fldt
push
ja
xor
divl
sbb
xchg
and
cmc
sub
repz
mov
rorb
add
push
stc
inc
xchg
ljmp
jge
xlat
inc
subb
jl
pushf
cmpsl
mov
loop
aaa
jg
jbe
mov
dec
cmpl
jbe
push
push
jae
rclb
movsb
xchg
les
pop
lret
in
jmp
enter
push
mov
inc
mov
jg
jle
hlt
inc
xor
aaa
sbb
mov
movsl
sub
add
dec
cmp
cld
cwtl
cli
and
lods
outsl
add
cmpl
fs
inc
bound
sub
or
insb
gs
mov
cmp
push
push
jl
and
daa
ret
sarb
movsl
stc
nop
std
aam
fsubp
pop
push
imul
je
std
mov
jae
orps
cmc
cmp
push
xchg
and
xor
pushf
insl
popa
sub
pop
push
xor
sbb
jne
add
loop
movb
jo
or
mov
nop
jp
shll
inc
mov
notb
pop
pop
dec
pushl
cmpsb
stos
push
adc
lods
ds
push
out
push
push
or
sub
adcl
xchg
mov
xchg
mov
add
pop
mov
gs
jno
or
sub
daa
in
pop
jae
das
and
push
mov
mov
rol
pop
cltd
push
pop
out
xchg
data16
jmp
pop
sahf
ss
and
repnz
push
mov
in
jne
jo
nop
out
pop
fstpl
jb
movsl
push
push
add
scas
jmp
jecxz
inc
fucom
dec
jl
leave
int3
in
dec
ja
lods
fcmovne
xchg
in
push
out
imul
dec
rcl
adc
fwait
xchg
mov
dec
mov
xchg
lret
inc
and
aad
in
jo
sbb
or
mov
adc
outsb
seta
push
xchg
xor
mov
push
lcall
ret
xchg
jecxz
and
jnp
or
into
fwait
lods
xor
pop
int
push
addr16
cmp
andb
fisubrl
sarl
scas
ja
push
mov
add
daa
aaa
xchg
mov
xchg
ret
xor
sbb
mov
lea
out
outsb
fistps
mov
imul
movsl
jbe
das
cmp
bound
pop
mov
and
add
shll
fwait
dec
xor
roll
mov
xor
or
outsl
cwtl
push
in
xchg
dec
pop
icebp
sahf
push
daa
nop
sbb
lds
mov
pop
pop
ljmp
jno
fldt
push
ja
xor
divl
sbb
xchg
and
cmc
sub
repz
mov
rorb
add
push
stc
inc
xchg
ljmp
jge
xlat
inc
subb
jl
pushf
cmpsl
mov
loop
aaa
jg
jbe
mov
dec
cmpl
jbe
push
push
jae
rclb
movsb
xchg
les
pop
lret
in
jmp
enter
push
mov
inc
mov
jg
jle
hlt
inc
xor
aaa
sbb
mov
movsl
sub
add
dec
cmp
cld
cwtl
cli
and
lods
outsl
add
cmpl
fs
inc
bound
sub
or
insb
gs
mov
cmp
push
push
jl
and
daa
ret
sarb
movsl
stc
nop
std
aam
fsubp
pop
push
imul
je
std
mov
jae
orps
cmc
cmp
push
xchg
and
xor
pushf
insl
popa
sub
pop
push
xor
sbb
ja
add
loop
movb
jo
or
mov
nop
jp
shll
inc
mov
notb
pop
pop
dec
pushl
cmpsb
stos
push
adc
lods
ds
push
out
push
push
or
sub
adcl
xchg
mov
xchg
mov
add
pop
mov
gs
jno
or
sub
daa
in
pop
jae
das
and
push
mov
mov
rol
pop
cltd
push
pop
out
xchg
data16
jmp
pop
sahf
ss
and
repnz
push
mov
in
jne
jo
nop
out
pop
fstpl
jb
movsl
push
push
add
scas
jmp
jecxz
inc
fucom
dec
jl
leave
int3
in
dec
ja
lods
fcmovne
xchg
in
push
out
imul
dec
rcl
adc
fwait
xchg
mov
dec
mov
xchg
lret
inc
and
aad
in
jo
sbb
or
mov
adc
outsb
seta
push
xchg
xor
mov
push
lcall
ret
xchg
jecxz
and
jnp
or
into
fwait
lods
xor
pop
int
push
addr16
cmp
andb
fisubrl
sarl
scas
ja
push
mov
add
daa
aaa
xchg
mov
xchg
ret
xor
sbb
mov
lea
out
outsb
fistps
mov
imul
movsl
jbe
das
cmp
bound
pop
mov
and
add
shll
fwait
dec
xor
roll
mov
xor
or
outsl
cwtl
push
in
xchg
dec
pop
icebp
sahf
push
daa
nop
sbb
lds
mov
pop
pop
ljmp
jno
fldt
push
ja
xor
divl
sbb
xchg
and
cmc
sub
repz
mov
rorb
add
push
stc
inc
xchg
ljmp
jge
xlat
inc
subb
jl
pushf
cmpsl
mov
loop
aaa
jg
jbe
mov
dec
cmpl
jbe
push
push
jae
rclb
movsb
xchg
les
pop
lret
in
jmp
enter
push
mov
inc
mov
jg
jle
hlt
inc
xor
aaa
sbb
mov
movsl
sub
add
dec
cmp
cld
cwtl
cli
and
lods
outsl
add
cmpl
fs
inc
bound
sub
or
insb
gs
mov
cmp
push
push
jl
and
daa
ret
sarb
movsl
stc
nop
std
aam
fsubp
pop
push
imul
je
std
mov
jae
orps
cmc
cmp
push
xchg
and
xor
pushf
insl
popa
sub
pop
push
xor
sbb
jp
add
loop
movb
jo
or
mov
nop
jp
shll
inc
mov
notb
pop
pop
dec
pushl
cmpsb
stos
push
adc
lods
ds
push
out
push
push
or
sub
adcl
xchg
mov
xchg
mov
add
pop
mov
gs
jno
or
sub
daa
in
pop
jae
das
and
push
mov
mov
rol
pop
cltd
push
pop
out
xchg
data16
jmp
pop
sahf
ss
and
repnz
push
mov
in
jne
jo
nop
out
pop
fstpl
jb
movsl
push
push
add
scas
jmp
jecxz
inc
fucom
dec
jl
leave
int3
in
dec
ja
lods
fcmovne
xchg
in
push
out
imul
dec
rcl
adc
fwait
xchg
mov
dec
mov
xchg
lret
inc
and
aad
in
jo
sbb
or
mov
adc
outsb
seta
push
xchg
xor
mov
push
lcall
ret
xchg
jecxz
and
jnp
or
into
fwait
lods
xor
pop
int
push
addr16
cmp
andb
fisubrl
sarl
scas
ja
push
mov
add
daa
aaa
xchg
mov
xchg
ret
xor
sbb
mov
lea
out
outsb
fistps
mov
imul
movsl
jbe
das
cmp
bound
pop
mov
and
add
shll
fwait
dec
xor
roll
mov
xor
or
outsl
cwtl
push
in
xchg
dec
pop
icebp
sahf
push
daa
nop
sbb
lds
mov
pop
pop
ljmp
jno
fldt
push
ja
xor
divl
sbb
xchg
and
cmc
sub
repz
mov
rorb
add
push
stc
inc
xchg
ljmp
jge
xlat
inc
subb
jl
pushf
cmpsl
mov
loop
aaa
jg
jbe
mov
dec
cmpl
jbe
push
push
jae
rclb
movsb
xchg
les
pop
lret
in
jmp
enter
push
mov
inc
mov
jg
jle
hlt
inc
xor
aaa
sbb
mov
movsl
sub
add
dec
cmp
cld
cwtl
cli
and
lods
outsl
add
cmpl
fs
inc
bound
sub
or
insb
gs
mov
cmp
push
push
jl
and
daa
ret
sarb
movsl
stc
nop
std
aam
fsubp
pop
push
imul
je
std
mov
jae
orps
cmc
cmp
push
xchg
and
xor
pushf
insl
popa
sub
pop
push
xor
sbb
jge
add
loop
movb
jo
or
mov
nop
jp
shll
inc
mov
notb
pop
pop
dec
pushl
cmpsb
stos
push
adc
lods
ds
push
out
push
push
or
sub
adcl
xchg
mov
xchg
mov
add
pop
mov
gs
jno
or
sub
daa
in
pop
jae
das
and
push
mov
mov
rol
pop
cltd
push
pop
out
xchg
data16
jmp
pop
sahf
ss
and
repnz
push
mov
in
jne
jo
nop
out
pop
fstpl
jb
movsl
push
push
add
scas
jmp
jecxz
inc
fucom
dec
jl
leave
int3
in
dec
ja
lods
fcmovne
xchg
in
push
out
imul
dec
rcl
adc
fwait
xchg
mov
dec
mov
xchg
lret
inc
and
aad
in
jo
sbb
or
mov
adc
outsb
seta
push
xchg
xor
mov
push
lcall
ret
xchg
jecxz
and
jnp
or
into
fwait
lods
xor
pop
int
push
addr16
cmp
andb
fisubrl
sarl
scas
ja
push
mov
add
daa
aaa
xchg
mov
xchg
ret
xor
sbb
mov
lea
out
outsb
fistps
mov
imul
movsl
jbe
das
cmp
bound
pop
mov
and
add
shll
fwait
dec
xor
roll
mov
xor
or
outsl
cwtl
push
in
xchg
dec
pop
icebp
sahf
push
daa
nop
sbb
lds
mov
pop
pop
ljmp
jno
fldt
push
ja
xor
divl
sbb
xchg
and
cmc
sub
repz
mov
rorb
add
push
stc
inc
xchg
ljmp
jge
xlat
inc
subb
jl
pushf
cmpsl
mov
loop
aaa
jg
jbe
mov
dec
cmpl
jbe
push
push
jae
rclb
movsb
xchg
les
pop
lret
in
jmp
enter
push
mov
inc
mov
jg
jle
hlt
inc
xor
aaa
sbb
mov
movsl
sub
add
dec
cmp
cld
cwtl
cli
and
lods
outsl
add
cmpl
fs
inc
bound
sub
or
insb
gs
mov
cmp
push
push
jl
and
daa
ret
sarb
movsl
stc
nop
std
aam
fsubp
pop
push
imul
je
std
mov
jae
orps
cmc
cmp
push
xchg
and
xor
pushf
insl
popa
sub
pop
push
xor
sbb
cmpb
push
loop
movb
jo
or
mov
nop
jp
shll
inc
mov
notb
pop
pop
dec
pushl
cmpsb
stos
push
adc
lods
ds
push
out
push
push
or
sub
adcl
xchg
mov
xchg
mov
add
pop
mov
gs
jno
or
sub
daa
in
pop
jae
das
and
push
mov
mov
rol
pop
cltd
push
pop
out
xchg
data16
jmp
pop
sahf
ss
and
repnz
push
mov
in
jne
jo
nop
out
pop
fstpl
jb
movsl
push
push
add
scas
jmp
jecxz
inc
fucom
dec
jl
leave
int3
in
dec
ja
lods
fcmovne
xchg
in
push
out
imul
dec
rcl
adc
fwait
xchg
mov
dec
mov
xchg
lret
inc
and
aad
in
jo
sbb
or
mov
adc
outsb
seta
push
xchg
xor
mov
push
lcall
ret
xchg
jecxz
and
jnp
or
into
fwait
lods
xor
pop
int
push
addr16
cmp
andb
fisubrl
sarl
scas
ja
push
mov
add
daa
aaa
xchg
mov
xchg
ret
xor
sbb
mov
lea
out
outsb
fistps
mov
imul
movsl
jbe
das
cmp
bound
pop
mov
and
add
shll
fwait
dec
xor
roll
mov
xor
or
outsl
cwtl
push
in
xchg
dec
pop
icebp
sahf
push
daa
nop
sbb
lds
mov
pop
pop
ljmp
jno
fldt
push
ja
xor
divl
sbb
xchg
and
cmc
sub
repz
mov
rorb
add
push
stc
inc
xchg
ljmp
jge
xlat
inc
subb
jl
pushf
cmpsl
mov
loop
aaa
jg
jbe
mov
dec
cmpl
jbe
push
push
jae
rclb
movsb
xchg
les
pop
lret
in
jmp
enter
push
mov
inc
mov
jg
jle
hlt
inc
xor
aaa
sbb
mov
movsl
sub
add
dec
cmp
cld
cwtl
cli
and
lods
outsl
add
cmpl
fs
inc
bound
sub
or
insb
gs
mov
cmp
push
push
jl
and
daa
ret
sarb
movsl
stc
nop
std
aam
fsubp
pop
push
imul
je
std
mov
jae
orps
cmc
cmp
push
xchg
and
xor
pushf
insl
popa
sub
pop
push
xor
sbb
cmpl
push
loop
movb
jo
or
mov
nop
jp
shll
inc
mov
notb
pop
pop
dec
pushl
cmpsb
stos
push
adc
lods
ds
push
out
push
push
or
sub
adcl
xchg
mov
xchg
mov
add
pop
mov
gs
jno
or
sub
daa
in
pop
jae
das
and
push
mov
mov
rol
pop
cltd
push
pop
out
xchg
data16
jmp
pop
sahf
ss
and
repnz
push
mov
in
jne
jo
nop
out
pop
fstpl
jb
movsl
push
push
add
scas
jmp
jecxz
inc
fucom
dec
jl
leave
int3
in
dec
ja
lods
fcmovne
xchg
in
push
out
imul
dec
rcl
adc
fwait
xchg
mov
dec
mov
xchg
lret
inc
and
aad
in
jo
sbb
or
mov
adc
outsb
seta
push
xchg
xor
mov
push
lcall
ret
xchg
jecxz
and
jnp
or
into
fwait
lods
xor
pop
int
push
addr16
cmp
andb
fisubrl
sarl
scas
ja
push
mov
add
daa
aaa
xchg
mov
xchg
ret
xor
sbb
mov
lea
out
outsb
fistps
mov
imul
movsl
jbe
das
cmp
bound
pop
mov
and
add
shll
fwait
dec
xor
roll
mov
xor
or
outsl
cwtl
push
in
xchg
dec
pop
icebp
sahf
push
daa
nop
sbb
lds
mov
pop
pop
ljmp
jno
fldt
push
ja
xor
divl
sbb
xchg
and
cmc
sub
repz
mov
rorb
add
push
stc
inc
xchg
ljmp
jge
xlat
inc
subb
jl
pushf
cmpsl
mov
loop
aaa
jg
jbe
mov
dec
cmpl
jbe
push
push
jae
rclb
movsb
xchg
les
pop
lret
in
jmp
enter
push
mov
inc
mov
jg
jle
hlt
inc
xor
aaa
sbb
mov
movsl
sub
add
dec
cmp
cld
cwtl
cli
and
lods
outsl
add
cmpl
fs
inc
bound
sub
or
insb
gs
mov
cmp
push
push
jl
and
daa
ret
sarb
movsl
stc
nop
std
aam
fsubp
pop
push
imul
je
std
mov
jae
orps
cmc
cmp
push
xchg
and
xor
pushf
insl
popa
sub
pop
push
xor
sbb
xchg
add
loop
movb
jo
or
mov
nop
jp
shll
inc
mov
notb
pop
pop
dec
pushl
cmpsb
stos
push
adc
lods
ds
push
out
push
push
or
sub
adcl
xchg
mov
xchg
mov
add
pop
mov
gs
jno
or
sub
daa
in
pop
jae
das
and
push
mov
mov
rol
pop
cltd
push
pop
out
xchg
data16
jmp
pop
sahf
ss
and
repnz
push
mov
in
jne
jo
nop
out
pop
fstpl
jb
movsl
push
push
add
scas
jmp
jecxz
inc
fucom
dec
jl
leave
int3
in
dec
ja
lods
fcmovne
xchg
in
push
out
imul
dec
rcl
adc
fwait
xchg
mov
dec
mov
xchg
lret
inc
and
aad
in
jo
sbb
or
mov
adc
outsb
seta
push
xchg
xor
mov
push
lcall
ret
xchg
jecxz
and
jnp
or
into
fwait
lods
xor
pop
int
push
addr16
cmp
andb
fisubrl
sarl
scas
ja
push
mov
add
daa
aaa
xchg
mov
xchg
ret
xor
sbb
mov
lea
out
outsb
fistps
mov
imul
movsl
jbe
das
cmp
bound
pop
mov
and
add
shll
fwait
dec
xor
roll
mov
xor
or
outsl
cwtl
push
in
xchg
dec
pop
icebp
sahf
push
daa
nop
sbb
lds
mov
pop
pop
ljmp
jno
fldt
push
ja
xor
divl
sbb
xchg
and
cmc
sub
repz
mov
rorb
add
push
stc
inc
xchg
ljmp
jge
xlat
inc
subb
jl
pushf
cmpsl
mov
loop
aaa
jg
jbe
mov
dec
cmpl
jbe
push
push
jae
rclb
movsb
xchg
les
pop
lret
in
jmp
enter
push
mov
inc
mov
jg
jle
hlt
inc
xor
aaa
sbb
mov
movsl
sub
add
dec
cmp
cld
cwtl
cli
and
lods
outsl
add
cmpl
fs
inc
bound
sub
or
insb
gs
mov
cmp
push
push
jl
and
daa
ret
sarb
movsl
stc
nop
std
aam
fsubp
pop
push
imul
je
std
mov
jae
orps
cmc
cmp
push
xchg
and
xor
pushf
insl
popa
sub
pop
push
xor
sbb
mov
add
loop
movb
jo
or
mov
nop
jp
shll
inc
mov
notb
pop
pop
dec
pushl
cmpsb
stos
push
adc
lods
ds
push
out
push
push
or
sub
adcl
xchg
mov
xchg
mov
add
pop
mov
gs
jno
or
sub
daa
in
pop
jae
das
and
push
mov
mov
rol
pop
cltd
push
pop
out
xchg
data16
jmp
pop
sahf
ss
and
repnz
push
mov
in
jne
jo
nop
out
pop
fstpl
jb
movsl
push
push
add
scas
jmp
jecxz
inc
fucom
dec
jl
leave
int3
in
dec
ja
lods
fcmovne
xchg
in
push
out
imul
dec
rcl
adc
fwait
xchg
mov
dec
mov
xchg
lret
inc
and
aad
in
jo
sbb
or
mov
adc
outsb
seta
push
xchg
xor
mov
push
lcall
ret
xchg
jecxz
and
jnp
or
into
fwait
lods
xor
pop
int
push
addr16
cmp
andb
fisubrl
sarl
scas
ja
push
mov
add
daa
aaa
xchg
mov
xchg
ret
xor
sbb
mov
lea
out
outsb
fistps
mov
imul
movsl
jbe
das
cmp
bound
pop
mov
and
add
shll
fwait
dec
xor
roll
mov
xor
or
outsl
cwtl
push
in
xchg
dec
pop
icebp
sahf
push
daa
nop
sbb
lds
mov
pop
pop
ljmp
jno
fldt
push
ja
xor
divl
sbb
xchg
and
cmc
sub
repz
mov
rorb
add
push
stc
inc
xchg
ljmp
jge
xlat
inc
subb
jl
pushf
cmpsl
mov
loop
aaa
jg
jbe
mov
dec
cmpl
jbe
push
push
jae
rclb
movsb
xchg
les
pop
lret
in
jmp
enter
push
mov
inc
mov
jg
jle
hlt
inc
xor
aaa
sbb
mov
movsl
sub
add
dec
cmp
cld
cwtl
cli
and
lods
outsl
add
cmpl
fs
inc
bound
sub
or
insb
gs
mov
cmp
push
push
jl
and
daa
ret
sarb
movsl
stc
nop
std
aam
fsubp
pop
push
imul
je
std
mov
jae
orps
cmc
cmp
push
xchg
and
xor
pushf
insl
popa
sub
pop
push
xor
sbb
add
add
inc
add
insb
inc
add
insb
inc
add
inc
add
insb
inc
add
insb
inc
add
add
add
insb
inc
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
outsb
jae
popa
jb
cs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
addr16
jb
push
inc
popa
jb
push
xor
imul
