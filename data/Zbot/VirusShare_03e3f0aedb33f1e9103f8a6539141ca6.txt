mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
mov
mov
mov
add
add
cmp
jl
andl
andl
ret
xor
ret
push
mov
mov
call
mov
xor
mov
mov
push
push
push
mov
mov
mov
mov
push
mov
pop
xor
xor
lea
mov
rep
mov
lea
movsl
movsl
movsw
push
lea
push
push
movl
movsb
call
push
lea
push
push
mov
call
mov
add
push
push
movl
mov
call
mov
push
push
mov
call
mov
movl
mov
movl
mov
mov
mov
mov
mov
lea
push
call
push
push
push
push
push
xor
test
mov
push
push
push
push
pushl
setne
pushl
push
add
mov
call
push
mov
call
mov
mov
mov
xor
lea
stos
mov
lea
stos
stos
stos
xor
mov
lea
stos
stos
stos
xor
lea
mov
stos
cmp
je
lea
push
push
call
test
je
cmp
jne
incl
movl
lea
push
push
call
cmp
je
push
call
xor
mov
movl
lea
push
push
call
mov
lea
movsl
add
pushl
movsw
call
test
je
push
push
call
mov
cmpl
jne
pushl
pushl
pushl
call
test
je
movl
cmp
jne
lea
push
call
pop
pushl
call
test
je
xor
mov
lea
stos
stos
stos
xor
mov
lea
stos
stos
push
stos
lea
push
push
push
call
test
jne
incl
pushl
call
cmp
je
lea
push
push
call
mov
cmp
je
push
pop
push
pop
jmp
mov
lea
lea
push
push
push
call
mov
mov
sub
mov
cmp
sbb
push
and
push
add
mov
push
mov
push
lea
push
call
mov
sub
je
sub
je
dec
je
dec
dec
je
dec
dec
je
sub
jne
push
push
push
push
call
jmp
push
pushl
call
push
pushl
call
test
je
push
call
pushl
call
jmp
lea
push
push
call
push
call
mov
cltd
push
pop
idiv
mov
push
pop
sub
mov
cltd
idiv
mov
sub
cmp
jle
cmp
jle
cmp
jge
cmp
jge
mov
push
call
lea
push
call
jmp
call
jmp
mov
push
push
push
lea
push
call
call
mov
mov
mov
push
call
mov
add
mov
call
mov
cmpl
jae
addl
jmp
addl
mov
push
push
push
call
mov
mov
cmp
jne
mov
mov
lea
mov
mov
mov
mov
mov
xor
lea
stos
stos
mov
dec
push
pop
je
sub
je
jmp
push
push
call
cmp
je
push
call
test
je
addl
push
call
test
je
mov
push
call
push
call
lea
push
push
push
push
push
call
cmp
je
incl
push
pushl
call
test
je
call
push
push
call
cmp
je
lea
push
pushl
push
call
test
jne
push
call
pop
pushl
call
push
push
call
test
je
push
call
test
je
lea
push
call
lea
push
push
call
pushl
pushl
call
push
push
lea
push
push
push
call
test
je
push
push
push
call
lea
push
push
push
push
push
mov
call
test
js
push
lea
push
push
mov
call
add
push
push
lea
push
push
pushl
call
pushl
call
lea
push
call
lea
push
call
push
call
call
mov
add
mov
mov
mov
mov
mov
mov
mov
xor
inc
mov
mov
mov
movl
mov
mov
movl
movl
mov
movl
mov
movl
movl
movl
movl
movl
mov
mov
inc
test
jne
sub
je
push
push
push
call
add
mov
movl
movl
movl
movl
mov
xor
mov
mov
mov
mov
add
add
cmp
jl
mov
mov
mov
add
mov
mov
mov
mov
cmp
je
mov
cmp
je
mov
mov
xor
mov
mov
mov
cmp
jle
mov
add
xor
xor
movzbl
xor
cmp
jle
cmp
jne
xor
cmpl
mov
mov
jle
movl
jmp
incl
mov
inc
mov
cmp
jl
mov
mov
mov
jmp
mov
dec
mov
inc
inc
cmp
jne
mov
mov
add
add
mov
lea
cmp
jne
mov
movl
mov
add
sub
call
mov
jmp
lea
push
call
lea
push
call
push
push
push
lea
push
call
test
jg
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
andl
xor
movl
mov
ret
push
mov
cmpl
jb
pushl
call
pop
andl
movl
xor
mov
pop
ret
mov
push
mov
pop
jmp
cmp
jne
repz
jmp
mov
push
mov
cmpl
je
pushl
push
pushl
call
test
jne
push
call
mov
call
push
call
pop
mov
pop
pop
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
mov
push
mov
pop
jmp
push
push
call
andl
decl
js
mov
sub
mov
call
jmp
mov
mov
mov
mov
mov
mov
cmpl
je
movl
mov
ret
call
mov
movl
call
ret
push
push
call
andl
mov
mov
imul
add
andl
decl
js
sub
mov
call
jmp
movl
movl
call
call
ret
cmpl
jne
pushl
pushl
pushl
pushl
call
ret
push
push
call
xor
mov
mov
mov
mov
cmp
jge
mov
mov
call
add
mov
incl
jmp
movl
movl
call
call
ret
cmpl
jne
pushl
pushl
pushl
pushl
call
ret
mov
push
mov
pop
jmp
mov
push
mov
cmpl
jne
call
pushl
call
push
call
pop
pop
pop
ret
push
push
call
lea
push
call
xor
cmp
jne
push
push
push
push
call
mov
cmp
je
mov
jmp
mov
cmpl
jne
mov
cmp
jne
cmpl
jbe
xor
cmp
setne
mov
call
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jns
push
call
pop
call
mov
call
mov
call
test
jns
push
call
pop
call
test
jns
push
call
pop
push
call
pop
cmp
je
push
call
pop
call
testb
je
movzwl
jmp
push
pop
push
push
push
push
call
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmpl
jne
push
call
call
movl
mov
call
ret
call
jmp
movl
jmp
mov
push
mov
push
mov
movl
call
testb
je
push
call
pop
mov
pop
pop
ret
mov
push
mov
push
pushl
mov
call
movl
mov
pop
pop
ret
mov
push
mov
sub
jmp
pushl
call
pop
test
je
pushl
call
pop
test
je
leave
ret
testb
mov
mov
jne
orl
push
lea
push
mov
movl
call
push
mov
call
pop
push
lea
call
push
lea
push
mov
call
int3
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
mov
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
mov
pop
ret
add
push
pop
cmp
sbb
and
add
pop
ret
call
test
jne
mov
ret
add
ret
push
push
push
call
xor
test
setne
mov
mov
ret
mov
push
mov
mov
push
mov
movb
test
jne
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
testb
jne
orl
movb
jmp
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
mov
sub
push
pushl
lea
call
mov
mov
test
je
mov
test
jne
call
movl
call
cmpb
je
mov
andl
xor
jmp
cmpl
je
cmpl
jl
cmpl
jg
andl
mov
push
mov
push
lea
cmpl
jle
lea
push
movzbl
push
push
call
mov
add
jmp
mov
movzbl
movzwl
and
test
je
mov
inc
jmp
cmp
jne
orl
jmp
cmp
jne
mov
inc
mov
test
js
cmp
je
cmp
jg
test
jne
cmp
je
movl
jmp
mov
cmp
je
cmp
je
movl
jmp
movl
jmp
cmp
jne
cmp
jne
mov
cmp
je
cmp
jne
mov
add
or
xor
divl
mov
mov
movzbl
movzwl
mov
and
je
movsbl
sub
jmp
and
je
lea
cmp
movsbl
ja
sub
add
cmp
jae
orl
cmp
jb
jne
cmp
jbe
orl
cmpl
jne
mov
dec
test
jne
cmpl
je
mov
andl
jmp
mov
imul
add
mov
mov
inc
jmp
mov
test
jne
test
jne
and
je
cmpl
ja
test
jne
cmp
jbe
call
testb
movl
je
orl
jmp
testb
push
pop
setne
add
mov
mov
test
je
mov
testb
je
negl
cmpb
je
mov
andl
mov
jmp
mov
test
je
mov
cmpb
je
mov
andl
xor
pop
pop
pop
leave
ret
mov
push
mov
xor
push
pushl
pushl
pushl
cmp
jne
push
jmp
push
call
add
pop
ret
push
push
call
call
mov
test
je
andl
call
jmp
xor
inc
ret
mov
movl
call
call
ret
push
call
mov
ret
int3
int3
int3
int3
int3
int3
int3
push
pushl
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
js
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
mov
push
mov
mov
mov
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
je
cmp
je
cmp
jne
call
xor
pop
ret
push
call
xor
ret
mov
push
mov
push
call
test
je
push
push
call
test
je
pushl
call
pop
ret
mov
push
mov
pushl
call
pop
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
ret
mov
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
cmpl
je
push
call
pop
test
je
pushl
call
pop
call
push
push
call
pop
pop
test
jne
push
push
push
call
mov
mov
pop
mov
cmp
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
push
call
push
call
pop
andl
xor
inc
cmp
je
mov
mov
mov
cmpl
jne
pushl
mov
call
mov
mov
test
je
pushl
call
mov
mov
mov
mov
sub
mov
cmp
jb
call
cmp
je
cmp
jb
pushl
call
mov
call
mov
call
pushl
call
mov
pushl
call
cmp
jne
cmp
je
mov
mov
mov
mov
mov
mov
jmp
movl
cmpl
jae
mov
mov
test
je
call
addl
jmp
movl
cmpl
jae
mov
mov
test
je
call
addl
jmp
movl
call
cmpl
jne
movl
push
call
pop
pushl
call
cmpl
je
push
call
pop
ret
call
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
mov
push
mov
call
pushl
call
pop
push
call
int3
mov
push
mov
xor
mov
cmp
je
inc
cmp
jb
xor
pop
ret
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
mov
push
push
call
mov
xor
pop
mov
cmp
je
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
je
cmp
je
push
push
mov
push
call
add
test
jne
push
mov
push
push
mov
call
mov
test
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
push
call
inc
pop
cmp
jbe
push
call
lea
mov
sub
push
sar
push
sub
push
push
call
add
test
jne
push
mov
push
push
call
add
test
jne
pushl
push
push
call
add
test
jne
push
push
push
call
add
jmp
push
push
push
push
push
jmp
push
call
mov
cmp
je
cmp
je
xor
mov
mov
cmp
je
inc
cmp
jb
push
lea
push
lea
push
mov
call
pop
push
lea
push
push
call
mov
pop
pop
xor
pop
call
leave
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
jne
push
call
push
call
pop
pop
ret
mov
push
mov
push
call
mov
test
je
mov
mov
mov
push
cmp
je
add
lea
cmp
jb
add
cmp
jae
cmp
je
xor
test
je
mov
test
jne
xor
jmp
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
push
mov
mov
mov
cmp
jne
push
pop
mov
andl
add
cmp
jl
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
pop
mov
pop
or
pop
pop
pop
ret
mov
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzbl
push
call
pop
test
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
cmpl
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
pop
lea
mov
test
jne
push
inc
push
call
mov
pop
pop
mov
test
je
mov
push
jmp
push
call
cmpb
pop
lea
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
jne
add
add
cmpb
jne
pushl
call
andl
andl
movl
xor
pop
pop
pop
pop
ret
pushl
call
andl
or
jmp
xor
push
push
push
push
push
call
int3
mov
push
mov
push
mov
push
xor
push
mov
mov
mov
movl
cmp
je
mov
addl
mov
mov
cmpb
jne
xor
cmp
mov
sete
inc
mov
jmp
incl
test
je
mov
mov
inc
mov
mov
movzbl
push
inc
call
pop
test
je
incl
cmpl
je
mov
mov
incl
mov
inc
mov
mov
test
je
cmpl
jne
cmp
je
cmp
jne
test
je
movb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
dec
test
je
movb
inc
incl
test
jne
mov
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
movsbl
push
test
je
call
pop
test
je
mov
mov
incl
mov
inc
incl
mov
mov
incl
mov
jmp
call
pop
test
je
inc
incl
incl
mov
inc
jmp
test
je
movb
inc
mov
incl
mov
jmp
mov
pop
pop
test
je
andl
incl
leave
ret
mov
push
mov
sub
push
xor
push
push
cmp
jne
call
push
mov
push
push
mov
call
mov
mov
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
push
lea
call
mov
add
cmp
jae
mov
cmp
jae
mov
shl
lea
cmp
jb
push
call
mov
pop
cmp
je
mov
lea
push
add
push
push
lea
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
mov
push
mov
sub
push
push
call
mov
xor
cmp
jne
xor
jmp
cmp
je
add
cmp
jne
add
cmp
jne
push
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
pop
mov
cmp
je
push
push
pushl
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
push
call
mov
jmp
push
call
xor
pop
pop
pop
leave
ret
mov
push
mov
sub
push
lea
push
call
push
push
pop
push
call
pop
pop
xor
cmp
jne
or
jmp
lea
mov
mov
cmp
jae
add
orl
movw
mov
movw
movb
mov
mov
mov
add
lea
add
cmp
jb
push
push
cmp
je
mov
cmp
je
mov
add
mov
add
mov
mov
cmp
jl
mov
cmp
jge
mov
push
push
call
pop
pop
test
je
addl
lea
mov
cmp
jae
add
orl
andl
andb
andl
movw
movw
movb
mov
add
add
lea
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
cmp
je
mov
mov
test
je
test
jne
push
call
test
je
mov
and
mov
sar
shl
add
mov
mov
mov
mov
mov
mov
push
lea
push
call
test
je
incl
addl
inc
incl
cmp
jl
xor
mov
shl
add
mov
cmp
je
cmp
je
orb
jmp
movb
test
jne
push
pop
jmp
lea
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
push
lea
push
call
test
je
incl
jmp
orb
movl
inc
cmp
jl
pushl
call
xor
pop
pop
pop
leave
ret
or
jmp
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
call
ret
call
ret
mov
push
pushl
call
mov
test
jne
pushl
call
mov
push
pushl
call
mov
pop
ret
mov
cmp
je
push
pushl
call
call
orl
mov
cmp
je
push
call
orl
jmp
push
push
call
push
call
mov
movl
andl
xor
inc
mov
mov
movb
movb
movl
push
call
pop
andl
pushl
call
movl
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
pushl
call
pop
movl
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
mov
push
push
call
pushl
mov
call
call
mov
test
jne
push
push
call
mov
pop
pop
test
je
push
pushl
pushl
call
call
test
je
push
push
call
pop
pop
call
orl
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
mov
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
mov
test
je
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
andl
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
movl
call
push
call
pop
movl
mov
test
je
push
call
pop
cmp
je
cmp
je
cmpl
jne
push
call
pop
movl
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
mov
push
push
call
mov
test
jne
call
xor
pop
ret
push
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmpl
mov
mov
je
cmpl
je
cmpl
je
test
jne
mov
mov
mov
movl
mov
mov
call
mov
cmp
je
pushl
push
call
test
je
call
pushl
mov
call
pushl
mov
call
pushl
mov
call
pushl
mov
call
mov
call
test
je
mov
push
pushl
call
call
mov
cmp
je
push
push
call
mov
pop
pop
test
je
push
pushl
pushl
call
call
test
je
push
push
call
pop
pop
call
orl
mov
xor
inc
jmp
call
xor
pop
pop
ret
mov
push
mov
sub
mov
andl
andl
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
cmp
jne
mov
jmp
test
jne
mov
or
shl
or
mov
not
mov
pop
pop
pop
leave
ret
mov
push
mov
mov
mov
movl
mov
mov
movb
pop
ret
mov
test
jne
mov
ret
mov
push
mov
cmpl
push
mov
je
push
pushl
call
lea
push
call
pop
pop
mov
test
je
pushl
push
push
call
add
movb
pop
pop
pop
ret
mov
push
mov
cmpb
je
pushl
call
pop
andl
movb
pop
ret
mov
push
mov
push
mov
push
mov
cmp
je
call
cmpb
je
pushl
mov
call
jmp
mov
mov
mov
pop
pop
pop
ret
movl
jmp
mov
push
mov
push
mov
movl
call
testb
je
push
call
pop
mov
pop
pop
ret
mov
push
mov
push
pushl
mov
andl
movl
movb
call
mov
pop
pop
ret
mov
push
movl
call
pop
ret
mov
push
mov
push
mov
call
testb
je
push
call
pop
mov
pop
pop
ret
mov
push
mov
push
push
push
mov
push
pushl
call
pushl
mov
mov
call
mov
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
add
cmp
jb
push
pushl
call
pop
pop
test
jne
lea
cmp
jb
push
pushl
call
pop
pop
test
je
sar
push
lea
call
mov
pushl
mov
call
mov
add
push
call
mov
mov
jmp
xor
pop
pop
pop
leave
ret
mov
push
push
push
call
pop
pop
mov
push
call
mov
mov
test
jne
push
pop
pop
ret
andl
xor
pop
ret
push
push
call
call
andl
pushl
call
pop
mov
movl
call
mov
call
ret
call
ret
mov
push
mov
pushl
call
neg
sbb
neg
pop
dec
pop
ret
mov
push
mov
push
mov
cmp
ja
push
push
cmpl
jne
call
push
call
push
call
pop
pop
test
je
mov
jmp
xor
inc
push
push
pushl
call
mov
test
jne
push
pop
cmp
je
push
call
pop
test
jne
jmp
call
mov
call
mov
mov
pop
pop
jmp
push
call
pop
call
movl
xor
pop
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
pushl
call
test
je
pushl
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
mov
push
mov
sub
mov
push
push
push
pop
mov
lea
rep
mov
mov
pop
mov
pop
test
je
testb
je
movl
lea
push
pushl
pushl
pushl
call
leave
ret
andl
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
cmp
je
push
call
pop
andl
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
lea
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
lea
push
call
test
jne
test
jne
cmp
je
push
call
pop
mov
pop
xor
pop
call
leave
ret
mov
push
push
mov
push
push
call
add
push
call
push
call
pop
ret
mov
push
mov
pushl
call
test
je
pop
jmp
pushl
pushl
pushl
pushl
pushl
call
int3
xor
push
push
push
push
push
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
push
push
mov
push
xor
lea
push
push
call
xor
movzwl
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
lea
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
lea
push
pushl
call
mov
test
je
xor
mov
inc
cmp
jb
mov
movb
test
je
lea
movzbl
movzbl
cmp
ja
sub
inc
push
lea
push
push
call
add
mov
add
test
jne
push
pushl
lea
pushl
push
push
lea
push
push
push
call
xor
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
xor
movzwl
test
je
orb
mov
jmp
test
je
orb
mov
mov
jmp
mov
inc
cmp
jb
jmp
lea
movl
xor
sub
mov
lea
add
lea
cmp
ja
orb
lea
jmp
cmp
ja
orb
lea
mov
jmp
movb
inc
cmp
jb
mov
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmpl
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
movl
call
jmp
mov
push
call
pop
ret
mov
push
mov
sub
push
xor
push
lea
call
mov
cmp
jne
movl
call
cmp
je
mov
andl
jmp
cmp
jne
movl
call
jmp
cmp
jne
mov
mov
movl
jmp
cmp
je
mov
andl
mov
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
mov
push
call
mov
xor
mov
cmp
jne
mov
call
xor
jmp
mov
xor
cmp
je
incl
add
cmp
jb
cmp
je
cmp
je
movzwl
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
xor
inc
add
mov
mov
cmp
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
lea
push
push
call
mov
add
imul
mov
lea
mov
jmp
mov
test
je
movzbl
movzbl
jmp
mov
mov
or
movzbl
inc
cmp
jbe
mov
add
cmpb
jne
mov
incl
add
cmpl
mov
jb
mov
mov
movl
call
push
mov
lea
lea
pop
mov
mov
add
add
dec
jne
mov
call
jmp
orb
inc
cmp
jbe
add
cmpb
jne
lea
mov
orb
inc
dec
jne
mov
call
mov
mov
jmp
mov
xor
movzwl
mov
shl
or
lea
stos
stos
stos
jmp
cmp
jne
or
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
orl
call
mov
mov
call
mov
mov
call
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
rep
andl
push
pushl
call
pop
pop
mov
test
jne
mov
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
mov
call
testb
jne
testb
jne
push
call
pop
andl
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
movl
call
jmp
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
movl
jmp
andl
mov
call
ret
cmpl
jne
push
call
pop
movl
xor
ret
mov
push
mov
push
push
mov
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
push
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
mov
push
mov
push
push
mov
mov
xor
push
cmp
je
cmp
je
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
pushl
call
add
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
lea
movl
cmpl
je
mov
cmp
je
cmp
jne
push
call
pop
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
add
decl
jne
push
call
pop
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmpl
pop
jne
cmp
je
push
call
pop
mov
pop
jmp
xor
pop
pop
ret
push
push
call
call
mov
mov
test
je
cmpl
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
pushl
add
push
call
pop
pop
mov
movl
call
jmp
push
call
pop
mov
ret
mov
push
mov
sub
push
pushl
lea
call
mov
lea
cmp
ja
mov
mov
movzwl
jmp
mov
sarl
lea
push
mov
and
push
call
pop
pop
test
je
mov
push
mov
mov
movb
pop
jmp
xor
mov
movb
inc
mov
push
pushl
pushl
lea
push
push
lea
push
lea
push
push
call
add
test
jne
cmp
je
mov
andl
xor
jmp
movzwl
and
cmpb
je
mov
andl
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
call
test
je
push
call
pop
testb
je
push
push
push
call
add
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmpl
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
mov
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
mov
push
mov
mov
pushl
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
movl
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
test
jne
push
call
pop
call
movl
mov
jmp
mov
jmp
push
call
pop
movl
call
mov
call
ret
push
call
pop
ret
mov
push
mov
mov
push
lea
cmpl
jne
push
call
pop
test
jne
push
call
pop
pushl
call
pop
pop
ret
mov
push
mov
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
pop
ret
pushl
call
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
pushl
mov
call
pop
lea
mov
jmp
mov
sub
je
sub
je
dec
je
call
movl
call
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
movl
push
call
mov
xor
cmpl
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
movl
cmp
jne
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
incl
jmp
call
mov
movl
call
cmp
jne
pushl
push
call
pop
jmp
mov
mov
cmpl
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
push
xor
pushl
call
mov
add
cmp
jb
pop
pop
ret
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
mov
push
mov
sub
mov
xor
mov
mov
push
mov
mov
push
push
mov
call
andl
cmpl
mov
jne
push
call
mov
test
je
mov
push
push
call
test
je
mov
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
mov
test
je
push
push
call
push
call
mov
mov
mov
mov
cmp
je
cmp
je
push
call
pushl
mov
call
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
orl
jmp
mov
cmp
je
push
call
test
je
call
mov
test
je
mov
cmp
je
push
call
test
je
pushl
call
mov
pushl
call
test
je
pushl
pushl
pushl
pushl
call
jmp
xor
mov
pop
pop
xor
pop
call
leave
ret
mov
push
mov
push
mov
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
test
jne
xor
mov
jmp
mov
cmpw
je
add
dec
jne
test
je
sub
movzwl
mov
add
test
je
dec
jne
xor
test
jne
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
push
mov
push
push
test
jne
test
jne
cmp
jne
xor
pop
pop
pop
pop
ret
test
je
mov
test
jne
call
push
pop
mov
call
mov
jmp
test
jne
xor
mov
jmp
mov
test
jne
xor
mov
jmp
mov
cmp
jne
mov
sub
movzwl
mov
add
test
je
dec
jne
jmp
mov
sub
movzwl
mov
add
test
je
dec
je
dec
jne
test
jne
xor
mov
test
jne
xor
cmp
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
mov
add
test
jne
sub
sar
dec
pop
ret
mov
push
mov
push
mov
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
test
jne
mov
jmp
mov
sub
movzwl
mov
add
test
je
dec
jne
xor
test
jne
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
test
js
cmp
jle
cmp
jne
mov
pop
ret
mov
mov
pop
ret
call
movl
call
or
pop
ret
mov
push
mov
sub
pushl
lea
call
movzbl
mov
mov
test
jne
cmpl
je
mov
mov
movzwl
and
jmp
xor
test
je
xor
inc
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
pushl
push
call
add
pop
ret
mov
push
mov
mov
push
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
jmp
mov
test
jne
mov
jmp
mov
sub
mov
mov
inc
test
je
dec
jne
test
jne
movb
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
ret
mov
push
mov
push
push
xor
pushl
call
mov
pop
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
pushl
pushl
call
mov
add
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
pushl
pushl
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
push
push
call
push
call
pop
andl
mov
mov
test
je
mov
mov
mov
test
je
cmp
jne
mov
mov
push
call
pop
pushl
call
pop
andl
movl
call
call
ret
mov
jmp
push
call
pop
ret
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
mov
push
mov
cmpl
jne
call
movl
call
or
pop
ret
pushl
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmpl
je
jmp
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
mov
push
mov
mov
test
je
sub
cmpl
jne
push
call
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
mov
push
xor
push
push
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
mov
cmp
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
mov
push
push
push
pushl
pushl
pushl
call
mov
cmp
je
mov
test
je
mov
cmp
je
cmp
jg
push
pushl
push
pushl
pushl
pushl
call
jmp
mov
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
pushl
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
pushl
push
push
pushl
call
mov
push
call
pop
pushl
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
add
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
mov
xor
mov
push
xor
push
push
mov
cmp
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
jne
xor
jmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
test
je
lea
push
push
push
call
add
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
push
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
push
call
add
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
mov
push
mov
sub
pushl
lea
call
movzbl
mov
mov
movzwl
and
cmpb
je
mov
andl
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
jmp
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
hlt
outsl
inc
add
jo
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jo
add
inc
add
inc
add
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
inc
add
jo
add
jo
add
jno
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
xorb
movsb
jno
add
jno
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
jb
add
jb
add
jb
add
inc
add
inc
add
inc
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
jl
inc
add
inc
add
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
push
call
pop
ret
mov
push
mov
mov
test
je
push
xor
pop
div
cmp
jae
call
movl
xor
pop
ret
imul
push
mov
test
jne
inc
xor
cmp
ja
push
push
pushl
call
test
jne
cmpl
je
push
call
pop
test
jne
mov
test
je
movl
xor
jmp
mov
test
je
movl
pop
pop
ret
mov
push
mov
cmpl
jne
pushl
call
pop
pop
ret
push
mov
test
jne
pushl
call
pop
xor
jmp
push
jmp
test
jne
inc
push
pushl
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
movl
xor
pop
pop
pop
ret
call
mov
call
push
call
pop
mov
jmp
call
mov
call
push
call
pop
mov
mov
jmp
pxor
push
push
mov
and
test
jne
mov
and
shr
je
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
test
je
mov
shr
je
jmp
lea
movdqa
lea
dec
jne
and
je
mov
xor
shr
je
mov
lea
dec
jne
and
je
mov
inc
dec
jne
pop
pop
ret
mov
neg
add
sub
xor
push
mov
and
je
mov
inc
dec
jne
shr
je
mov
lea
dec
jne
pop
jmp
push
call
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
push
mov
and
test
jne
mov
and
shr
je
jmp
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
test
je
mov
shr
test
je
lea
movdqa
movdqa
lea
lea
dec
jne
and
je
mov
shr
je
mov
mov
lea
lea
dec
jne
mov
and
je
mov
mov
inc
inc
dec
jne
pop
pop
pop
pop
ret
mov
sub
sub
push
mov
mov
and
je
mov
mov
inc
inc
dec
jne
shr
je
mov
mov
lea
lea
dec
jne
pop
jmp
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
jmp
movl
mov
jmp
ret
add
test
add
add
add
mov
add
jbe
add
add
add
or
add
imulb
add
fisubrl
add
ret
add
lods
add
xchg
add
push
lods
add
push
lods
add
inc
lods
add
lods
add
adc
add
push
scas
add
mov
add
movsb
cmpsl
add
xchg
cmpsl
add
xchg
add
push
cmpsl
add
dec
cmpsl
add
fisubrs
add
lods
add
xchg
lods
add
mov
add
add
push
lods
add
dec
lods
add
and
add
stos
add
sahf
stos
add
mov
add
stos
add
fisubrl
add
adc
add
sub
add
dec
stos
add
pop
stos
add
outsb
stos
add
jl
add
mov
add
scas
stos
add
les
add
hlt
stos
add
push
lods
add
sub
add
add
add
pop
stos
add
add
add
enter
add
add
fwait
add
cmp
add
sbb
add
cmp
add
add
add
in
test
add
add
add
test
add
and
add
or
add
cld
test
add
test
add
test
add
test
add
test
add
add
data16
add
add
inc
test
add
add
sub
add
cld
cmpsl
add
out
cmpsl
add
loopne
add
add
add
jae
add
fs
inc
add
inc
add
jbe
add
inc
add
inc
add
inc
inc
add
and
insb
outsl
arpl
imul
inc
add
inc
add
jb
js
je
jb
arpl
jae
add
jae
arpl
outsl
add
add
add
add
add
jne
outsb
add
add
add
add
jb
jb
outsl
add
and
add
add
or
add
add
add
push
add
and
add
jb
outsl
add
or
add
dec
add
inc
add
add
jb
jb
outsl
add
or
add
add
add
inc
add
dec
add
add
jb
jb
outsl
add
or
add
add
add
add
add
add
add
add
add
add
je
je
add
jo
je
and
je
outsl
add
add
jae
add
add
push
add
dec
add
add
outsl
add
add
add
jb
outsl
add
and
je
push
add
add
jae
jae
add
bound
insb
add
and
add
jb
imul
and
outsb
add
je
imul
and
arpl
outsl
add
add
add
outsb
add
je
imul
imul
je
imul
or
push
add
imul
imul
imul
je
add
and
popa
add
add
jne
add
add
outsb
add
add
outsl
add
jb
and
popa
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
je
and
imul
insl
add
jae
je
and
insb
add
imul
add
add
add
add
and
jb
add
jne
insb
add
add
data16
add
popa
add
add
outsb
add
and
popa
add
and
dec
add
dec
add
add
outsl
add
jo
imul
add
add
add
add
insb
add
sub
and
data16
outsb
add
je
imul
and
data16
outsl
add
and
popa
add
add
popa
add
add
add
add
outsl
add
jae
je
jb
jne
arpl
je
outsl
add
and
outsl
add
and
data16
outsl
add
and
inc
add
add
popa
add
outsb
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
insb
add
arpl
popa
add
add
add
outsb
add
outsl
add
insl
add
je
imul
or
add
add
add
add
add
add
add
add
je
je
add
jo
je
and
je
outsl
add
add
outsb
add
je
imul
imul
and
je
push
add
push
add
add
outsl
add
add
add
add
outsb
add
add
outsb
add
add
add
add
add
jae
and
imul
imul
je
add
and
popa
add
add
jne
add
add
outsb
add
add
outsl
add
jb
and
popa
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
add
add
add
add
add
add
add
push
add
add
outsl
add
add
outsb
add
je
imul
imul
add
add
add
add
add
add
add
add
add
outsb
add
bound
insb
add
and
je
outsl
add
add
outsb
add
je
imul
imul
and
push
add
or
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
insb
add
ja
imul
imul
je
imul
imul
je
imul
or
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
jae
je
add
outsl
add
add
outsb
add
je
imul
imul
je
imul
or
add
add
add
add
add
add
add
add
add
jb
add
add
imul
jne
popa
add
add
jne
outsb
add
je
imul
and
arpl
popa
add
add
add
add
add
add
add
add
or
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
pop
add
outsb
add
js
imul
popa
add
add
imul
je
popa
add
insb
add
or
add
add
add
add
add
add
add
add
add
add
outsb
add
bound
insb
add
and
je
outsl
add
add
jo
add
and
arpl
outsl
add
jae
outsl
add
add
add
add
imul
or
add
add
add
add
add
add
add
add
add
add
outsb
add
js
jo
add
je
add
add
add
jo
and
add
jb
outsl
add
or
add
add
add
add
add
add
add
add
add
add
outsb
add
js
jo
add
je
add
add
jne
insb
add
add
add
add
add
add
add
imul
add
jb
jb
outsl
add
or
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
je
push
add
add
add
add
add
add
add
add
add
add
add
add
bound
outsl
add
je
sub
sub
and
push
add
add
add
outsb
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
add
jbe
imul
outsb
add
add
je
or
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
popa
add
add
insl
add
outsb
add
add
add
add
add
add
add
add
add
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jne
jo
jo
outsl
add
je
and
outsb
add
je
and
insb
add
popa
add
add
add
add
add
add
inc
add
add
add
mov
or
add
test
inc
add
add
add
inc
add
add
add
mov
adc
add
test
inc
add
add
add
inc
add
add
add
mov
sbb
add
cwtl
xchg
sbb
add
dec
xchg
sbb
add
fadds
add
push
add
add
xchg
push
add
add
test
pop
add
add
test
and
add
test
inc
add
add
add
add
add
add
js
inc
add
add
pop
addb
add
add
add
add
add
inc
add
imul
outsl
add
outsl
add
je
and
push
add
jae
jne
popa
add
add
sub
sub
and
push
add
outsb
add
add
add
add
add
jb
popa
add
jns
add
add
or
or
add
add
add
add
add
add
jo
jb
outsl
add
jb
popa
add
and
outsb
add
insl
add
and
jne
outsb
add
outsb
add
ja
outsb
add
add
add
add
jne
outsb
add
add
add
add
jb
jb
outsl
add
and
or
or
push
add
outsl
add
jb
popa
add
cmp
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
or
add
add
add
add
add
or
add
nop
add
add
add
dec
add
push
add
inc
add
add
add
add
add
add
add
jae
jb
add
jae
gs
popa
insb
jne
add
jae
gs
popa
insb
jne
add
jae
insb
insb
outsl
arpl
add
add
mov
inc
add
outsb
imul
outsb
and
arpl
je
outsl
outsb
add
add
inc
add
jae
loopne
add
add
add
add
add
add
add
add
dec
add
cmp
insl
add
cmp
jae
jae
add
add
add
add
add
add
dec
add
dec
add
add
add
and
jns
jns
jns
jns
add
dec
add
das
add
add
add
jns
add
add
push
add
add
add
inc
add
add
add
inc
add
arpl
add
bound
add
add
add
dec
add
jbe
add
bound
add
add
add
dec
add
je
outsl
add
add
add
push
add
jo
je
add
bound
add
add
inc
add
add
jae
je
add
add
dec
add
insb
add
add
add
dec
add
outsb
add
add
add
inc
add
jb
imul
dec
add
jb
arpl
push
add
bound
jb
jne
popa
add
jns
add
add
dec
add
outsb
add
popa
add
jns
add
inc
add
arpl
add
dec
add
jbe
add
dec
add
je
add
push
add
jo
add
inc
add
add
add
jne
insb
add
add
jne
outsb
add
add
popa
add
add
inc
add
jb
add
dec
add
jb
add
inc
add
bound
add
dec
add
outsb
add
add
popa
add
add
add
jns
add
add
inc
add
imul
jns
add
add
push
add
jne
jb
jae
add
jns
add
add
push
add
add
add
add
jns
add
push
add
add
add
jns
add
dec
add
outsb
add
add
add
add
push
add
outsb
add
add
add
add
push
add
je
add
inc
add
imul
push
add
add
add
add
add
dec
add
outsb
add
add
jne
outsb
add
add
cmp
cmp
add
add
fs
dec
dec
dec
dec
and
and
jns
add
das
fs
jns
add
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outsl
jbe
insl
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
insb
jns
add
add
outsb
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outsb
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
insb
add
outsb
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outsb
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outsb
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outsl
outsb
fs
jns
add
outsb
fs
jns
add
je
inc
jb
add
add
add
add
outsb
add
outsb
add
add
add
push
pop
or
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
gs
jb
arpl
jae
imul
popa
je
outsl
outsb
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
push
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
jnp
jge
jg
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
jmp
inc
outsl
insl
jo
gs
and
push
arpl
outsl
arpl
outsl
jb
add
add
inc
insb
popa
jae
and
gs
jb
push
jae
jb
jo
outsl
jb
add
add
and
jae
and
popa
jae
and
jb
jns
add
and
jae
and
popa
jae
and
arpl
jo
outsl
jb
popa
je
sub
and
and
arpl
jo
outsl
jb
add
add
outsl
arpl
and
popa
je
arpl
je
jb
popa
and
popa
jb
daa
add
popa
outsb
popa
gs
arpl
and
jo
and
outsb
jae
jb
arpl
and
gs
je
jb
add
pusha
jbe
arpl
and
popa
jae
and
jo
and
outsb
jae
jb
arpl
and
gs
je
jb
add
add
pusha
jbe
arpl
and
jo
and
outsb
jae
jb
arpl
and
gs
je
jb
add
pusha
fs
popa
insl
imul
imul
jne
je
jb
outsw
jb
daa
add
add
pusha
fs
popa
insl
imul
imul
and
jb
daa
add
pusha
gs
je
jb
jbe
popa
jae
and
jo
and
outsb
jae
jb
arpl
and
gs
je
jb
add
push
je
jb
arpl
jns
arpl
jae
jb
arpl
and
gs
je
jb
add
add
popa
outsb
popa
gs
arpl
and
je
jne
je
jb
imul
daa
add
add
pusha
insl
popa
outsb
popa
gs
arpl
and
outsb
jae
jb
arpl
and
gs
je
jb
add
add
insb
popa
arpl
outsb
je
fs
gs
pop
pop
and
outsl
jae
jb
daa
add
add
pusha
jo
popa
arpl
outsb
je
fs
gs
and
outsl
jae
jb
daa
add
pusha
outsl
insl
outsb
imul
jae
addr16
add
and
gs
pop
pop
add
add
outsb
gs
pop
add
pusha
insb
outsl
arpl
and
je
bound
arpl
jae
jb
arpl
and
outsl
jae
jb
daa
add
outsl
arpl
and
je
bound
add
push
push
dec
add
add
dec
add
fs
jb
je
jb
imul
outsl
jo
and
outsb
jae
jb
arpl
and
outsl
jae
jb
daa
add
pusha
gs
je
jb
jbe
popa
jae
and
outsb
jae
jb
arpl
and
gs
je
jb
add
pusha
gs
je
jb
fs
jb
arpl
and
gs
je
jb
add
push
je
jb
arpl
jae
jb
arpl
and
gs
je
jb
add
add
pusha
jbe
jb
jne
insb
and
jo
popa
arpl
outsb
je
insl
popa
jo
add
pusha
jbe
arpl
and
popa
jae
and
outsb
jae
jb
arpl
and
gs
je
jb
add
arpl
and
je
jne
je
jb
imul
daa
add
add
pusha
jbe
arpl
and
outsb
jae
jb
arpl
and
gs
je
jb
add
add
arpl
popa
jb
fs
gs
outsb
and
jae
jb
arpl
daa
add
add
pusha
fs
jne
je
arpl
jae
jb
arpl
and
outsl
jae
jb
daa
add
add
arpl
and
gs
outsb
and
jae
jb
arpl
daa
add
add
pusha
jbe
popa
jae
and
je
jne
je
jb
add
pusha
jae
jb
outsb
addr16
add
add
pusha
insb
outsl
arpl
and
popa
je
arpl
addr16
jb
daa
add
add
pusha
je
jo
outsl
data16
add
add
pusha
jbe
popa
insb
insb
daa
add
bound
insb
gs
add
add
data16
bound
add
add
add
jl
add
es
cmp
add
cmp
add
sub
add
jl
add
es
jl
add
pop
add
add
add
sub
add
sub
add
ds
add
cmp
add
cmp
add
and
add
add
add
add
add
add
sub
add
sub
add
sub
jo
jb
je
jb
add
add
add
and
add
and
add
cmp
add
ds
and
gs
add
outsb
gs
add
add
jne
popa
insb
imul
pop
jb
jae
jb
arpl
pop
pop
jo
jb
xor
pop
pop
gs
bound
add
arpl
popa
insb
insb
add
add
popaw
jae
arpl
insb
add
pop
pop
je
imul
add
jae
arpl
insb
add
add
jo
jae
popa
insb
add
add
pop
pop
arpl
insb
add
bound
gs
add
add
add
inc
add
lahf
inc
add
inc
add
lahf
inc
add
inc
add
lahf
inc
add
sahf
inc
add
sahf
inc
add
sahf
inc
add
sahf
inc
add
mov
inc
add
sahf
inc
add
xchg
inc
add
sahf
inc
add
sahf
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
inc
add
sahf
inc
add
inc
add
sahf
inc
add
inc
add
sahf
inc
add
inc
add
sahf
inc
add
sahf
inc
add
popf
inc
add
popf
inc
add
popf
inc
add
popf
inc
add
inc
add
add
add
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
add
add
inc
add
inc
add
pushf
inc
add
inc
add
inc
add
fwait
inc
add
fwait
inc
add
fwait
inc
add
inc
add
add
inc
add
fwait
inc
add
lcall
movsb
lcall
dec
lcall
aam
inc
add
inc
add
lcall
int3
cltd
inc
add
add
add
gs
xor
fs
insb
add
push
dec
add
push
dec
inc
jo
add
add
outsl
je
add
add
je
add
add
add
imul
jb
jns
add
add
inc
add
outsl
add
je
add
add
add
add
add
cmp
inc
add
inc
add
add
add
inc
add
add
add
add
add
add
xchg
mov
inc
add
add
add
inc
add
add
add
add
add
incl
add
add
add
test
inc
add
incl
add
add
add
fsubs
add
add
add
add
add
call
mov
add
and
inc
add
mov
add
or
inc
add
mov
add
add
add
add
add
sub
inc
add
add
add
ret
incl
add
add
add
sbb
add
xorb
add
pop
add
xor
add
incl
add
add
incl
add
add
cld
sub
and
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
sub
add
add
incl
add
add
add
add
jmp
inc
add
inc
add
add
add
add
add
mov
add
or
inc
add
add
add
inc
add
add
add
incl
add
add
add
fsubrl
add
and
inc
add
add
add
incl
add
add
add
pop
dec
inc
add
incl
add
add
incl
add
add
out
xor
repz
add
add
incl
add
add
incl
add
add
incl
add
add
aaa
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
inc
inc
add
incl
add
add
inc
add
incl
add
add
incl
add
add
incl
add
add
dec
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
push
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
decl
pop
inc
add
pop
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
incl
add
add
incl
add
add
incl
add
add
gs
add
add
add
add
add
cmpsl
add
and
add
aam
add
push
add
inc
addl
add
addb
test
add
cwtl
test
add
xchg
movsl
add
ljmp
add
add
add
add
xor
add
mov
add
ds
add
and
add
dec
stos
add
lods
addl
add
add
sbb
add
ret
add
test
add
add
add
mov
add
jbe
add
add
add
or
add
imulb
add
fisubrl
add
ret
add
lods
add
xchg
add
push
lods
add
push
lods
add
inc
lods
add
lods
add
adc
add
push
scas
add
mov
add
movsb
cmpsl
add
xchg
cmpsl
add
xchg
add
push
cmpsl
add
dec
cmpsl
add
fisubrs
add
lods
add
xchg
lods
add
mov
add
add
push
lods
add
dec
lods
add
and
add
stos
add
sahf
stos
add
mov
add
stos
add
fisubrl
add
adc
add
sub
add
dec
stos
add
pop
stos
add
outsb
stos
add
jl
add
mov
add
scas
stos
add
les
add
hlt
stos
add
push
lods
add
sub
add
add
add
pop
stos
add
add
add
enter
add
add
fwait
add
cmp
add
sbb
add
cmp
add
add
add
in
test
add
add
add
test
add
and
add
or
add
cld
test
add
test
add
test
add
test
add
test
add
add
data16
add
add
inc
test
add
add
sub
add
cld
cmpsl
add
out
cmpsl
add
loopne
add
add
add
jae
add
lret
add
popa
jo
insb
insb
outsl
arpl
rolb
gs
jne
jb
outsb
je
jb
arpl
jae
xchg
add
je
imul
je
add
bound
inc
insb
insb
outsl
arpl
addb
jb
popa
je
inc
jbe
outsb
je
add
int
dec
gs
jo
jb
popa
je
add
mov
bound
inc
jb
add
push
add
outsl
jae
dec
popa
outsb
fs
add
push
dec
inc
dec
xor
cs
insb
add
dec
add
imul
popa
jae
inc
add
call
fs
jne
jae
jb
add
inc
insb
outsl
jae
push
imul
add
jae
gs
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
jo
je
push
popa
addr16
add
fildl
dec
jae
imul
filds
push
push
outsb
outsl
ja
add
add
je
jne
jae
jb
outsl
jae
add
add
je
gs
je
jo
imul
mov
je
outsl
jns
jne
jae
jb
daa
add
je
insb
addr16
je
insl
add
insl
add
gs
je
push
imul
inc
add
push
imul
outsb
addr16
add
mov
push
gs
jne
jae
jb
outsl
jae
add
inc
push
imul
outsl
insl
push
outsl
imul
push
jb
outsb
jae
popa
je
dec
gs
popa
add
and
inc
gs
inc
add
inc
gs
insb
imul
je
in
add
fs
arpl
inc
add
add
fs
outsb
jne
add
inc
gs
outsl
arpl
add
addb
gs
popa
jo
jne
add
roll
dec
jae
arpl
imul
outsl
jae
push
jne
je
gs
popa
add
gs
imul
arpl
add
je
gs
popa
addr16
add
inc
push
xor
cs
insb
add
jg
push
gs
imul
add
dec
xor
cs
insb
add
add
imul
add
dec
inc
dec
inc
xor
cs
insb
add
dec
add
addr16
gs
gs
push
popa
insb
jne
push
add
add
gs
imul
dec
jo
outsb
dec
gs
js
add
inc
push
outsl
imul
gs
bound
jae
imul
inc
push
dec
xor
cs
insb
add
mov
gs
imul
add
mov
gs
imul
add
mov
gs
outsl
insb
fs
outsl
arpl
imul
dec
dec
xor
cs
insb
add
inc
inc
push
push
xor
cs
insb
add
push
push
xor
xor
fs
insb
add
adc
push
dec
gs
insb
outsl
jae
inc
outsb
jne
add
push
cs
insb
add
add
je
popa
jae
inc
jb
outsl
jb
add
add
popa
jo
jb
add
xchg
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
dec
gs
jo
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
arpl
inc
gs
je
jb
jne
dec
outsb
outsw
push
add
add
gs
imul
outsl
arpl
jae
add
add
outsb
push
gs
js
gs
imul
gs
add
push
outsb
push
gs
js
gs
imul
gs
add
dec
jae
bound
addr16
jb
jae
outsb
je
lret
arpl
gs
outsl
imul
add
arpl
gs
outsl
imul
add
je
jb
arpl
fs
jae
add
sbb
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
sbb
inc
js
je
jb
arpl
jae
and
je
inc
imul
je
je
dec
popa
outsb
fs
add
adc
inc
gs
outsl
fs
gs
imul
add
adc
inc
gs
outsl
fs
gs
imul
add
popa
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
inc
push
dec
jne
je
inc
jns
gs
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
outsl
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
repz
je
imul
roll
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
insb
jae
insb
insb
outsl
arpl
add
add
insb
jae
gs
popa
insb
jne
add
add
insb
jae
gs
popa
insb
jne
add
add
insb
jae
jb
gs
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
push
gs
popa
jae
inc
jb
outsl
jb
add
add
je
jne
jb
outsb
je
push
dec
add
jmp
dec
outsb
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
roll
gs
jne
jb
outsb
je
jb
arpl
jae
add
inc
gs
jns
je
insl
push
imul
insb
gs
imul
popa
imul
jo
imul
inc
gs
push
dec
outsb
outsw
add
inc
gs
inc
push
add
aaa
add
je
inc
dec
inc
push
add
or
dec
jae
popa
insb
imul
add
add
je
push
outsb
ja
outsb
add
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
out
add
je
jb
jb
je
arpl
push
arpl
outsb
add
aas
add
fs
imul
add
mov
push
insb
gs
aam
dec
gs
jo
imul
dec
inc
dec
popa
jo
je
imul
add
insb
je
inc
jns
gs
outsl
push
imul
imul
je
imul
push
add
rolb
dec
gs
jo
gs
insb
insb
outsl
arpl
add
dec
jae
jb
arpl
jae
jb
gs
je
jb
push
jb
jae
outsb
je
add
add
xor
inc
add
add
add
aas
inc
push
bound
pop
popa
insb
insb
outsl
arpl
je
inc
inc
add
add
cs
inc
push
gs
gs
imul
inc
inc
add
inc
mov
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
or
add
or
add
incl
add
add
pushl
add
cs
inc
push
je
jo
pop
imul
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
ret
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
incl
add
movsb
nop
inc
add
nop
inc
add
nop
inc
add
nop
inc
add
inc
add
add
inc
add
add
add
inc
add
add
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
nop
inc
add
inc
add
popl
hlt
popl
xor
inc
add
popl
in
inc
add
popl
rorb
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
inc
add
inc
add
popl
in
mov
fmull
inc
add
mov
mov
mov
test
inc
add
mov
nop
mov
mov
inc
add
inc
add
inc
add
inc
add
inc
add
add
mov
sub
inc
add
mov
adc
inc
add
inc
add
lea
loopne
inc
add
lea
mov
lea
test
inc
add
inc
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lret
inc
add
xchg
inc
add
movl
mov
inc
add
ret
lods
xchg
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
lret
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jg
jg
jg
add
inc
add
add
add
add
add
add
add
add
lret
inc
add
xchg
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
data16
jg
xor
dec
dec
cli
push
xchg
mov
jno
dec
scas
add
sbb
push
fidivrl
lcall
mov
mov
adc
outsl
fidivl
das
movsbl
mov
jg
dec
push
and
add
dec
test
in
in
xchg
pop
push
dec
jle
lods
dec
pop
xchg
cltd
adc
aam
or
mov
shlb
dec
mov
daa
stos
sbb
repnz
xchg
sbb
inc
popa
xchg
jbe
test
mov
add
arpl
inc
ljmp
bound
out
mov
push
adc
in
icebp
mov
adc
jmp
ja
inc
mov
sahf
out
push
movsb
test
mov
enter
pop
sub
orb
sub
dec
push
stos
scas
jnp
aas
pop
test
lret
es
pop
mov
movsb
ja
adc
shl
mov
pop
xchg
test
xor
mov
mov
adc
dec
sbb
ret
inc
inc
jbe
sub
mov
jl
cmp
xchg
mov
xchg
popf
dec
fs
repnz
mov
cltd
popa
mov
mov
adc
adcl
push
dec
jns,pt
pop
cmp
dec
mov
mov
and
dec
cmp
cmpsb
adc
push
sub
arpl
test
sub
aam
loopne
insb
dec
les
ds
mov
jns
mov
loop
mov
mov
pop
movsb
lea
and
and
lret
sbb
inc
scas
push
ret
mov
fstpl
ljmp
xchg
arpl
xor
mov
jns
mov
in
or
cli
cmp
or
pop
mov
jns
sahf
insl
ss
inc
repz
lea
adc
aaa
rolb
testl
inc
and
das
xor
or
push
xchg
sub
xlat
fs
call
hlt
cltd
mov
fbld
ds
fcom
das
xchg
jo
and
sub
scas
fwait
std
fldenv
cmpsb
in
sub
jne
inc
and
mov
mov
or
and
les
insl
ja
and
push
pop
sbb
loope
pop
jno
mov
sbb
xor
pushf
cmp
jb
imul
popa
lret
cmpsl
repz
insl
out
xor
sub
ret
sti
les
in
hlt
mov
sarl
test
orps
or
add
leave
add
or
add
push
mov
sti
xchg
out
mov
clc
pop
shlb
inc
jl
stos
pop
mov
and
xor
cli
fadd
mov
stos
cmp
push
add
mov
pop
pop
pop
in
mov
enter
sbb
ss
mov
pop
and
mov
es
cltd
lds
jmp
push
dec
cmp
adc
les
aam
das
popa
rcrl
mov
popa
push
cli
in
mov
lahf
mov
popa
js
push
imul
or
mov
mov
jo
cld
xor
jo
in
insl
mov
inc
pop
pusha
test
mov
lds
mov
movsb
pop
inc
cld
out
or
fwait
inc
mov
xlat
adc
push
fdiv
and
xchg
mov
leave
mov
es
and
cs
int3
pop
inc
cmp
popf
mov
add
add
mov
popa
cmp
aaa
aad
rcll
cmp
jns
cmp
sub
cmpb
cmp
xor
cmp
jg
mov
insb
add
ja
cmp
cmp
aaa
xor
xchg
xor
aaa
xchg
mov
inc
cmp
mov
das
mov
cmp
aaa
mov
jne
and
aaa
inc
cmp
push
xor
pop
sbb
dec
inc
mov
arpl
cmp
outsb
cmp
aaa
xor
push
dec
pop
xor
incl
or
ja
cmp
negl
cmp
pop
pop
pop
cmp
lds
xor
sbb
jns
xor
dec
push
push
xor
xor
or
sbb
lret
xor
mov
cmp
push
cmp
aaa
dec
pop
cmp
push
aaa
test
cmc
push
xor
je
cmp
mov
aaa
sbb
xor
push
cmp
aaa
push
pop
cmp
push
cmp
aaa
mov
xor
lcall
rcll
iret
pop
xor
gs
xor
push
cmp
push
aaa
jns
pop
xor
cmp
cmp
push
aaa
rcrl
lret
push
xor
xor
xor
sti
mov
xor
push
xor
push
cmp
push
xor
push
cmp
xor
gs
xor
push
cmp
push
aaa
cmp
shll
or
push
cmp
aaa
pop
pop
cmp
push
aaa
jmp
cmp
cmp
mov
pop
cmp
dec
aaa
cmp
push
aaa
lahf
pop
pop
xor
cmp
aaa
dec
pop
cmp
push
aaa
fwait
pop
cmp
push
aaa
rcrl
iret
push
xor
xor
push
cmp
aaa
lahf
imul
push
aaa
mov
push
cmp
cmp
push
xor
pop
cmp
dec
aaa
cmp
fnstenv
sbb
aaa
lahf
out
pop
and
cmp
aaa
mov
cmp
push
aaa
test
push
xor
rcrl
rcll
inc
cltd
xor
adc
add
lahf
jge
xor
cmp
cmp
push
aaa
out
pop
cmp
push
xor
mov
xor
push
pop
cmp
xor
push
cmp
sub
xor
fwait
icebp
aad
xchg
push
aaa
lods
pop
cmp
push
aaa
pop
pop
sub
jge
cmp
bound
and
cmp
push
xor
in
cmp
daa
sbb
xor
push
xor
push
cmp
pop
xor
aaa
arpl
xor
aaa
sub
push
cmp
dec
push
push
pop
cmp
push
xor
pop
cmp
inc
aaa
cmp
pop
xor
aaa
push
outsb
pop
xor
cmp
push
aaa
pop
pop
cmp
push
aaa
xor
xor
insb
push
aaa
sti
pop
cmp
xor
push
xor
push
cmp
push
xor
xor
push
cmp
push
xor
mov
pop
xor
ds
cmp
xor
mov
push
xor
xor
pusha
pop
cmp
xor
push
xor
push
cmp
push
aaa
ja
pop
addr16
cmp
push
aaa
int
cmp
bound
fsts
loope
cmp
push
aaa
cmpsl
pop
cmp
xor
xor
and
fs
mov
pop
xor
push
pop
pop
cmp
bound
repz
aaa
mov
cltd
push
xor
mov
xor
pusha
pop
cmp
xor
aad
sub
xor
push
cmp
push
aaa
lea
xor
aaa
mov
cmp
push
cmp
mov
cmp
cmp
xor
add
xor
pusha
or
or
mov
cmp
leave
jo
add
subl
xchg
add
mov
add
jg
cmp
add
sub
cmp
aaa
xlat
pusha
or
loope
xor
add
xor
add
push
outsb
or
jg
cmp
cmp
mov
adc
cmp
xor
fisttps
cmp
pop
xor
pusha
dec
cmp
pop
xor
add
xor
add
push
outsb
or
outsl
add
sbb
cmp
bound
fildll
sti
insb
add
test
cmp
aaa
xchg
pusha
dec
cmp
xor
cmp
pop
xor
add
and
cmp
xor
aaa
xchg
adc
lret
xor
aaa
inc
or
sbb
aaa
aas
mov
ret
cmpsl
sahf
lret
add
cmc
or
xchg
pop
xor
dec
or
push
pop
xor
add
xor
add
lahf
adc
cmp
add
dec
cmp
add
xor
loope
xor
outsb
or
int
cmp
test
cltd
dec
jne
loop
cmp
rcrl
xor
and
cmp
sbb
or
int
xor
rorl
inc
inc
xor
and
cmp
dec
mov
or
and
cmp
leave
xor
cmp
aaa
lahf
dec
or
and
sub
fwait
outsl
add
dec
or
mov
add
orl
add
aaa
mov
adc
dec
out
mov
cmp
push
or
mov
loop
mov
int
fistl
scas
xor
jmp
jle
aaa
and
xor
in
adc
dec
test
jae
cmp
adc
mov
mov
inc
mov
xor
sbb
mov
in
xchg
xor
enter
xor
dec
dec
mulb
mov
aaa
jle
sbb
jo
data16
xchg
xchg
xor
mov
test
arpl
sub
or
mov
cmp
dec
mov
inc
mov
xor
add
out
jmp
xchg
insb
fstpt
popf
jae
shr
and
inc
leave
cmp
sbb
cmp
lret
test
cmp
inc
add
jne
dec
bound
popf
jnp
sub
test
mov
rorb
add
and
lock
cld
or
and
mov
cmp
insl
sub
bound
cmp
inc
dec
inc
cmp
cmp
cltd
dec
sub
and
cmpsl
cmp
xor
int
jl
sub
xor
mov
push
jl
jnp
and
dec
ret
xor
mov
xor
jbe
in
mov
xor
xor
bound
into
cmp
cmp
lock
xor
lods
bound
mov
mov
jle
sahf
in
xchg
js
stos
xchg
xor
and
ljmp
outsw
add
repz
enter
xor
jg
jle
mov
cmp
add
jno
or
xor
add
add
pop
femms
pop
add
or
add
jp
add
aaa
stos
sbb
test
xor
xor
xor
inc
cmp
shll
cmp
shll
jp
pop
aaa
inc
cmp
xchg
inc
or
inc
aaa
inc
dec
push
popa
inc
xor
test
pop
mov
jo
xor
push
mov
dec
bound
push
dec
cmp
ss
xchg
inc
ss
sub
dec
ss
imul
cmpsl
xor
push
inc
xor
dec
cmp
pop
or
mov
pop
add
cmp
jbe
cmp
inc
ds
jmp
mov
or
lods
cmp
xor
daa
xor
cmp
andl
pop
test
cmp
and
push
xorl
ss
ds
mov
jb
ss
mov
xor
imul
xor
mov
inc
out
sub
push
movsl
cmp
pop
shll
or
or
dec
ss
cmp
adc
adc
cmpsb
xor
xor
jmp
xor
pop
mov
dec
cmp
inc
cmp
cmp
xor
pop
mov
loop
pop
jmp
push
test
das
icebp
and
adc
cmpsb
jecxz
mov
inc
and
sub
test
xor
mov
sub
jle
repz
fadd
clc
xor
mov
test
loope
or
mov
push
in
jnp
arpl
sub
push
sbb
adc
imul
outsb
das
outsl
cmp
addr16
mov
aaa
mov
jle
and
subl
subl
cmp
addr16
push
bound
add
or
or
add
jne
arpl
addr16
or
cmp
add
add
iret
movsl
xor
xchg
add
pop
or
cmp
mov
cmp
lret
cmp
cmp
and
xor
shrb
jecxz
mov
add
mov
mov
mov
push
xor
cmp
xchg
loopne
push
lods
xor
cmp
lock
out
dec
popa
shl
xor
jge
loop
into
cmp
pop
or
cmp
mov
sti
push
sbb
sub
add
xlat
xchg
jae
fists
ret
xchg
mov
out
movsl
pop
cwtl
dec
out
push
test
cmp
cs
lahf
ljmp
leave
insl
imul
jns
nop
stc
mov
dec
orl
sbb
imul
fldenv
adc
push
fwait
adc
sub
shll
xchg
sub
bound
sbb
rorl
hlt
push
add
sarb
insl
jns
aam
sbb
call
sbb
sbb
adc
jecxz
rolb
dec
xchg
adc
add
sub
inc
sbb
mov
mov
popa
or
add
popa
cmpsb
push
push
call
data16
call
lds
xchg
sbb
mov
inc
add
out
inc
xor
add
aaa
inc
cs
popa
cmp
fbld
int
enter
lock
jmp
sbb
jge
push
pop
inc
xor
inc
cmp
xor
insl
jp
adc
sbb
or
push
pop
add
jno
jno
jnp
imul
or
add
push
push
cmp
xor
cmp
aaa
xor
addl
lea
in
or
minps
cli
js
addl
cmp
jbe
std
cmpsb
data16
test
mov
sbb
pop
add
out
adc
test
sub
mov
fwait
out
test
in
out
dec
sbb
clc
pop
pop
pop
mov
out
or
cmp
test
mov
mov
sbb
rcr
mov
pushf
xchg
lods
sub
pop
sub
addb
setg
and
sub
jg
les
mov
mov
mov
inc
push
rclb
push
lock
push
dec
test
mov
mov
cmp
repnz
test
mov
mov
dec
daa
xchg
sti
mov
loope
mov
aas
fnstsw
xor
test
lret
cli
sbb
hlt
dec
test
xor
xor
push
call
inc
sarl
mov
add
jnp
or
outsb
push
rcll
xor
rorb
xchg
xor
dec
and
sbbl
cmp
mov
mov
or
mov
in
stos
mov
jb
pop
fidivl
mov
xorl
ret
sub
scas
lods
inc
sub
inc
or
and
xor
mov
fwait
leave
subl
ret
push
gs
jnp
or
sub
push
es
stos
femms
jb
mov
cld
adc
sub
sub
arpl
fs
jge
push
dec
fs
xor
push
push
jb
imul
xor
lret
cmpsb
pop
stc
repz
pop
hlt
mov
in
repnz
xor
mov
subb
inc
jp
pusha
push
in
pop
push
jg
cmp
cwtl
je
cmp
into
mov
inc
lcall
jnp
cmp
imul
leave
mov
ret
push
mov
cs
nop
pop
pop
add
xor
in
dec
push
mov
xor
mov
sbb
mov
jb
pop
xchg
loope
imul
data16
inc
in
push
and
xchg
aad
sbb
xchg
outsl
xchg
mov
ret
jne
mov
jb
or
clc
sub
inc
adc
dec
pusha
sbb
lock
adc
or
inc
push
pop
shll
inc
mov
mov
test
pop
xchg
jle
mov
xchg
dec
adc
inc
jae
outsl
xor
stos
mov
push
and
and
shll
bound
pop
dec
jl
add
lea
aaa
xor
xor
xor
cmp
mov
jnp
aaa
aaa
xor
xor
daa
cmp
xor
xor
jne
sub
aaa
xor
adc
xor
xor
xor
xor
cmp
push
dec
dec
inc
ret
pop
pop
decb
xor
inc
mov
jl
pushf
jecxz
xchg
movsl
xchg
inc
cmc
mov
mov
std
add
add
cmp
scas
xor
xor
mov
dec
cmp
xchg
imul
push
mov
in
aam
lret
test
cli
mov
jne
clc
in
xchg
lret
or
or
jno
cmpsl
cmpsb
add
mov
jmp
fs
jne
icebp
pushf
inc
or
push
jp
sbb
cmpsl
mov
jmp
xor
xlat
pop
add
js
adc
loop
push
stos
lods
aad
shl
push
pop
mov
popa
rcl
dec
cltd
cmp
sub
dec
es
mov
push
jae
cmp
mov
iret
lods
sub
mov
fdivrp
outsb
adc
mov
shll
js
sbb
mov
and
push
in
add
movsl
mov
fimull
mov
adc
mov
mov
fdiv
insl
dec
mov
or
ja
cmp
clc
ja
sbb
dec
bound
adc
int
pop
mov
lods
sub
pop
xchg
lret
jecxz
and
sahf
mov
lcall
shll
mov
mov
hlt
xchg
test
ss
or
jmp
lods
lret
stc
lds
dec
sbb
lcall
daa
dec
out
pop
jb
and
sbb
mov
adcb
sub
jl
jmp
sti
dec
cli
outsl
iret
es
lahf
push
mov
testb
sub
push
push
dec
xchg
and
test
repnz
ficoms
sbb
mov
mov
adc
pop
rcrb
pop
insb
adc
dec
std
pop
push
xchg
int
inc
mov
inc
dec
mov
mov
cmp
push
pop
mov
push
push
andb
add
ss
pop
push
sahf
arpl
adc
lds
test
loop
je
pushf
rcl
dec
inc
lods
mov
mov
movsb
mov
dec
dec
mov
ret
lret
and
jb
lock
xor
lcall
cltd
fwait
int3
jb
xchg
rcll
stos
test
ret
inc
mov
inc
orb
mov
pop
pop
pop
or
add
rol
mov
or
pushf
fimuls
fildl
cmpsb
nop
loope
inc
push
or
bound
xor
aaa
lods
div
addr16
adc
clc
cli
outsl
pop
sub
mov
cmp
stos
cmpb
cmp
daa
sub
sub
aad
not
ficoml
jnp
push
pop
dec
xchg
movsb
sub
ds
adc
pop
pop
sub
push
in
pop
xchg
fwait
cltd
lret
imul
mov
loope
inc
mov
dec
ljmp
dec
sub
pop
aaa
xor
fcoms
jns
pop
push
fadd
int
dec
mov
aam
pop
pop
test
out
inc
add
jp
jg
out
jnp
out
mov
fnstsw
jmp
pop
repnz
adc
lahf
lret
mov
jbe
out
push
or
mov
mov
jb
rol
enter
cmp
leave
dec
inc
mov
inc
or
scas
lea
xchg
rclb
xchg
xchg
lds
mov
mov
push
test
test
or
xor
call
cwtl
out
loope
jae
adc
sbb
daa
add
enter
mov
jmp
ja
cmp
and
not
aad
mov
fadds
mov
stc
adc
std
bound
dec
mov
repz
push
fwait
data16
add
inc
inc
scas
stc
push
push
xchg
and
jbe
xchg
jmp
pop
pop
insl
sbb
pushf
ds
mov
jae
repz
fistl
push
mov
or
imul
cmp
es
ljmp
push
or
addr16
lmsw
cmp
jle
aaa
aas
aaa
cmp
scas
cmc
mull
loop
pop
js
popf
fdiv
pop
pop
xchg
push
movsb
stos
xchg
add
roll
leave
inc
dec
mov
mov
add
cmp
push
stos
jnp
jmp
sahf
pushf
fndisi(8087
pop
pop
adcl
sbb
push
push
xchg
int
dec
mov
and
popl
mov
adc
pop
addr16
pop
inc
or
xchg
popf
enter
cld
scas
div
fs
adc
out
dec
filds
movsl
movaps
sbb
test
cmp
inc
stos
inc
wbinvd
ja
mov
cmpsl
jge
loope
xor
ds
mov
and
pop
add
data16
pusha
push
mov
cmpsb
lods
cli
clc
imul
rcl
or
push
mov
sub
jecxz
pop
adcb
mov
xchg
sbb
sub
sub
mov
repnz
pop
mov
idivl
pusha
outsb
popa
pop
sbb
dec
cmp
cwtl
leave
ds
cmp
mov
push
mov
jnp
out
push
xorl
adc
inc
sub
and
repnz
arpl
push
mov
nop
std
pop
push
mov
inc
inc
test
inc
dec
mov
dec
dec
ss
mov
push
pop
xchg
push
push
cmpsb
lock
imul
ss
cmc
pop
push
dec
arpl
adc
ror
lds
loopne
fnsave
scas
xlat
dec
inc
jb
icebp
rep
sub
cld
mov
aam
lret
faddl
jb
xor
mov
push
mov
in
push
xchg
xchg
stos
test
mov
scas
sti
stc
repz
orb
mov
pop
insl
pop
or
add
rol
mov
or
pushf
add
enter
fildl
inc
nop
loope
fs
or
push
sbb
xor
imul
cli
sbb
sub
mov
adcb
cmp
pop
adc
sub
out
aad
not
ficompl
sbb
cld
dec
xchg
and
cmp
stos
es
adc
adc
sub
mov
pop
pop
fisttpl
fwait
cltd
xchg
imul
out
sti
inc
mov
pminsw
fmuls
sbb
lods
sub
bound
ljmp
lock
pop
jns
pop
sub
dec
mov
xchg
pop
pop
jge
cli
cld
in
pop
xchg
out
mov
jnp
rorl
idiv
pop
mov
jmp
fdivrl
lahf
sub
mov
jbe
fs
push
or
mov
jb
rol
enter
cmp
xchg
addr16
or
scas
aam
xchg
xchg
ret
push
insb
xchg
xchg
sti
mov
mov
lcall
cmpsb
jno
prefetch
enter
pop
test
inc
cwtl
out
loope
jae
adc
sbb
daa
das
faddp
into
cmp
enter
out
jne
cli
clc
das
and
and
not
aad
mov
fwait
add
mov
or
cs
cmpsb
std
ret
bound
dec
jl
or
cltd
repz
push
rorb
sub
lods
xlat
inc
inc
fwait
stc
push
push
lods
and
jbe
xchg
jmp
pop
inc
insl
sbb
mov
mov
sti
mov
call
adc
out
mov
and
cmp
dec
xchg
ljmp
push
or
jg
smsw
and
js
aas
aaa
aas
aaa
pop
jge
sbb
fs
cmc
notl
loop
fidivrl
popf
xchg
icebp
pop
pop
cltd
push
movsb
stos
popf
add
sarl
loopne
fidivs
std
repz
pop
add
mov
pop
pop
mov
test
in
jecxz
jnp
fnstcw
pushf
loope
pop
iret
xchg
outsl
addr16
iret
int
clc
xchg
sti
push
push
mov
dec
dec
fdivrl
das
and
popl
push
jae
adc
pop
pop
adc
xchg
popf
incb
subl
rcr
dec
xchg
out
lods
filds
sbb
sub
out
jp
jmp
cmp
mov
roll
jns
wbinvd
icebp
dec
mov
cmpsl
jge
cmp
xor
cmp
mov
xchg
negl
outsb
pop
add
rcrb
mov
cli
clc
push
or
test
es
leave
test
mov
sub
nop
call
mov
xchg
scas
mov
test
repnz
jle
cmc
test
popa
pop
sbb
mov
insb
lcall
sub
cmp
pop
mov
icebp
mov
jnp
out
push
cli
mov
je
adc
sbb
sub
cli
dec
test
in
push
mov
nop
std
pop
dec
mov
inc
dec
test
inc
inc
mov
dec
ss
mov
push
pop
xchg
push
cld
cmpsb
lock
pop
xor
cmp
push
pushf
cmc
pop
sbb
adc
sub
lret
in
pop
test
sahf
fnsave
scas
xlat
dec
sti
jb
icebp
mov
jns
decb
ret
dec
int
aam
push
clc
mov
cwtl
xlat
js
jecxz
mov
xchg
lret
xchg
cmpsl
xchg
stos
xchg
int3
push
inc
mov
scas
sti
mov
inc
add
ror
cmpsb
xchg
add
adc
pop
pop
insl
pop
or
int3
cmp
sar
mov
or
faddl
enter
fildl
inc
nop
loope
fs
or
sbb
xor
imul
and
pop
sub
xor
xor
adcb
cmp
pop
adc
mov
push
out
fcoml
not
push
pop
jnp
mov
dec
xchg
fildl
and
cmp
insl
pop
and
add
and
sub
mov
pop
insl
fisttpl
fwait
imul
add
or
pop
mov
test
inc
mov
dec
addr16
pminsw
adc
outsl
sbb
rcrb
cmp
aaa
xor
adc
sub
lds
faddl
pop
jge
cli
mov
pop
xchg
jl
add
mov
jnp
rorl
mul
pop
mov
sbb
ficoml
sub
mov
jbe
fs
push
mov
hlt
mov
into
and
xor
dec
mov
lret
cltd
popa
or
add
cmpsb
cltd
aam
xchg
cmp
xchg
push
iret
push
cmp
mov
mov
xor
xor
test
sbb
ret
int3
xor
testb
jmp
lcall
sub
pop
and
xor
out
xchg
aaa
clc
ja
cld
cmp
and
sub
sbb
xlat
cmp
mov
add
jno
add
and
xchg
leave
insb
xchg
aaa
dec
mov
inc
add
push
cltd
repz
insb
rorb
pop
and
roll
pop
xchg
notl
mov
call
lcall
sbb
cmpsl
sahf
add
cmp
mov
fstpt
and
sbb
xor
imul
outsl
aaa
ds
cmp
inc
xchg
loop
xlat
push
loopne
add
or
or
add
das
and
cmp
movsl
jl
xor
jns
imul
data16
repz
xchg
xor
xchg
icebp
pop
cmp
xchg
push
mov
roll
ret
dec
xor
std
js
stc
aaa
add
push
pop
and
xor
push
test
cmp
test
pushf
cmp
out
pop
insl
ret
popf
popa
xor
fistps
neg
aaa
push
xchg
repz
dec
mov
fdivrl
das
and
pop
addl
pop
jge
adc
daa
sbb
outsb
xchg
aaa
cmp
lods
pushl
fists
lock
dec
xchg
out
inc
stos
fisttpll
adc
sub
jb
mov
mov
mov
inc
stos
flds
ja
pop
xor
popf
stc
pop
cmp
movsl
jae
xor
ss
xor
ret
xor
pop
lcall
aaa
in
xorb
movsb
sub
lock
lods
cli
cmp
cmpsl
mov
stos
cmp
or
aam
sub
iret
xor
and
sbb
aaa
pop
sub
out
inc
xchg
loopne
mov
nop
push
scas
cmp
adc
sub
mov
sbb
fidivs
pusha
les
imul
xor
iret
insb
lcall
es
push
mov
or
shll
pop
sub
aaa
je
mov
mov
adc
sub
cmp
lahf
popa
cmp
add
xchg
icebp
dec
inc
mov
mov
iret
xor
ss
pop
pop
mov
cmp
test
cld
hlt
arpl
cmp
xor
stc
push
adc
lret
lds
loopne
pop
mov
pushf
sahf
fnsave
scas
xlat
cmp
std
jo
mov
lock
ja
inc
inc
mov
xor
insb
xorl
jl
mov
xor
jecxz
mov
xchg
xchg
enter
fnsave
movsl
lods
mov
lahf
popf
fs
cmc
sti
bound
inc
lret
fdivs
movsb
cmpsb
xchg
add
adc
cmp
add
push
push
jbe
cmp
xor
mov
prefetch
nop
sahf
int
aaa
rcr
or
shlb
inc
test
jmp
add
pop
sub
or
cmp
arpl
jno
clc
lods
aaa
sub
mov
xor
stos
lods
adcb
xor
cmp
fisttpl
xor
adc
jg
xchg
movsb
shll
ds
sub
sbb
sub
add
and
sbb
push
push
sub
popa
arpl
adcl
imul
dec
xor
jecxz
mov
sbb
dec
imul
push
push
inc
imul
push
xchg
in
push
mov
ficompl
cli
sbb
aaa
push
jnp
int
mov
faddl
jecxz
lock
mov
or
dec
jnp
xor
loope
popa
imul
jge
jmp
xor
sbb
lahf
xchg
cmp
js
shrb
je
cmp
mov
js
mov
pop
mov
mov
cli
mov
enter
cmp
popa
aaa
mov
cmp
cltd
aaa
mov
cmp
xor
movsl
xor
or
xor
cmpl
jmp
mov
sbb
mov
cmp
cmp
cld
aaa
mov
cmp
fnsave
mov
cmp
xor
repz
dec
cmp
pop
xor
aaa
mov
dec
xor
aaa
mov
cmp
adc
mov
cmp
mov
mov
xor
lahf
das
cmp
xor
in
xor
pop
cmp
xor
mov
cmp
cmp
repz
mov
cmp
push
aaa
mov
cmp
xor
shlb
add
mov
mov
mov
cmp
nop
xor
aaa
mov
cmp
push
aaa
mov
cmp
cmp
mov
cmp
xor
sub
cmpl
mov
cmp
xor
aaa
mov
cmp
inc
aaa
mov
cmp
push
aaa
mov
cmp
xor
push
xor
bound
mov
mov
mov
cmpsl
xor
aaa
mov
cmp
pop
aaa
mov
cmp
movsl
aaa
mov
cmp
xor
stc
xor
sbb
xor
xchg
cmp
xor
mov
cmp
cmp
jo
mov
cmp
ds
mov
cmp
xor
rcrw
sub
xchg
clc
add
aaa
imul
movsb
xor
xchg
ret
imul
lcall
dec
test
xor
shl
cld
sbb
in
pop
add
mov
pop
xor
adc
shll
test
shl
sbb
mov
xor
mov
int3
std
cmp
xor
fsubl
loope
mov
sbb
jle
push
adc
inc
cmc
mov
dec
inc
mov
xorb
call
lds
sbb
add
aam
xor
push
pop
pop
bound
dec
jle
push
inc
aad
push
xor
sub
xor
sbb
mov
mov
dec
xor
out
dec
jp
aaa
cs
pushf
pop
mov
sbb
sbb
incb
in
cmp
xchg
pop
sbb
xor
pop
adc
mov
sub
pushf
inc
xor
jnp
cmp
xchg
push
loope
cld
xor
cmp
es
xchg
xor
data16
fwait
ret
fwait
cmp
pop
lahf
iret
xor
inc
xor
cmp
popf
imul
mov
sub
adc
shlb
or
xchg
je
aaa
mov
gs
push
aas
aas
in
push
imul
enter
adc
cmpsb
mov
out
xor
ja
ds
sub
icebp
xor
out
lcall
ds
mov
xor
mov
mov
adc
jg
cmp
inc
fwait
pop
popa
dec
jg
xor
mov
outsl
or
fwait
out
daa
pop
sbb
xor
cmp
pop
push
insl
xchg
adc
cmp
in
nopl
xchg
xor
scas
stos
cmpsl
mov
cmc
jbe
jmp
cltd
arpl
inc
jle
and
cmp
sbb
or
sbb
je
and
sub
xor
mov
adcl
outsb
xor
sub
xchg
inc
xor
cmp
push
lret
cmp
test
dec
int3
lea
pop
add
insb
into
inc
or
dec
cli
adc
out
xor
leave
push
adc
add
jns
mov
cmp
sub
mov
jno
dec
in
push
rcrl
push
xchg
push
and
test
pop
cmp
shl
push
cmp
subb
jo
pop
sbb
xchg
or
outsl
xor
jecxz
add
jns
loop
loopne
mov
lods
out
xor
xchg
xor
dec
in
jmp
xorb
adc
imul
sti
scas
outsl
inc
ja
ret
cmp
fstps
xor
notb
xchg
cmpsb
inc
push
xor
sbb
repz
dec
nop
fnstsw
movsl
push
pop
out
add
inc
cmp
and
fnsave
scas
mov
mov
scas
xchg
fbstp
mov
rorl
cmp
cmp
stos
out
jg
ud0
xor
test
add
xchg
mov
pushl
xchg
mov
cmc
dec
cmp
add
mov
test
loope
xor
fabs
into
dec
aaa
clc
imul
cmpsb
ret
adc
xor
mov
fiadds
jp
fildll
call
mov
divb
push
push
lods
aaa
imul
xor
mov
dec
ret
sbb
test
cmp
addr16
in
jle
lods
xor
xchg
aaa
inc
push
fisubl
mov
xor
incb
fidivrl
sub
orb
cmp
out
outsb
pusha
leave
dec
push
das
xor
repnz
bound
ret
outsb
lret
out
or
inc
jne
mov
cmp
cmc
or
negl
es
inc
mov
push
xor
mov
cmp
xor
xor
test
test
dec
cmp
mov
loopne
popl
xor
lea
bound
idivb
jns
aaa
jne
insb
xor
cmp
aaa
jne
cmp
pusha
cmp
aaa
jne
cmp
xor
jne
cmp
xor
jl
cmp
xor
aam
jns
bound
xchg
cmp
aaa
jne
insb
xor
cmp
aaa
jne
cmp
pusha
cmp
aaa
jne
cmp
xor
jne
cmp
xor
subl
and
cmpl
jnp
xor
cmp
aaa
jne
insb
xor
cmp
aaa
jne
cmp
pusha
cmp
aaa
jne
cmp
xor
jne
cmp
xor
xor
jno
xor
nop
cmp
bound
cmp
aaa
jne
insb
xor
cmp
aaa
jne
cmp
pusha
cmp
aaa
jne
cmp
xor
jne
cmp
xor
or
cmp
xor
cmp
bound
fwait
cmp
aaa
jne
insb
xor
cmp
aaa
jne
cmp
pusha
cmp
aaa
jne
cmp
xor
jne
cmp
xor
jb
cmp
xor
les
xor
jae
jno
xor
into
cmp
popa
xor
adc
jns
aaa
jne
sbb
ja
cmp
aaa
jne
cmp
cmp
jns
aaa
jne
cmp
xor
jne
cmp
xor
lahf
fidivrs
jno
xor
cmp
lcall
cmp
aaa
jne
jne
ja
cmp
aaa
jne
cmp
mov
jns
aaa
jne
cmp
xor
jne
cmp
xor
lahf
sub
jno
xor
dec
cmp
iret
xor
pop
cmp
aaa
jne
lret
fnstcw
jns
aaa
jne
cmp
lods
cmp
aaa
jne
cmp
xor
jne
cmp
xor
lahf
cli
cmp
xor
cli
cmp
pop
xor
xchg
cmp
aaa
jne
xor
ja
cmp
aaa
jne
cmp
fnstsw
jns
aaa
jne
cmp
xor
jne
cmp
xor
lahf
pushf
cmp
xor
cmp
jns
ret
xor
popf
cmp
aaa
jne
inc
xor
cmp
aaa
jne
cmp
sti
cmp
aaa
jne
cmp
xor
jne
cmp
xor
lahf
popf
cmp
xor
jg
jns
shlb
cmp
aaa
jne
je
ja
cmp
aaa
jne
cmp
cmp
aaa
jne
cmp
xor
jne
cmp
xor
lahf
imul
sub
ja
cmp
dec
xor
mov
jne
or
ja
cmp
aaa
jne
cmp
or
jns
aaa
jne
cmp
xor
jne
cmp
xor
lahf
add
jnp
xor
cmp
cmp
je
jns
aaa
jne
out
ja
cmp
aaa
jne
cmp
inc
cmp
aaa
jne
cmp
xor
jne
cmp
xor
lahf
jle
jno
xor
iret
cmp
pop
xor
jns
jns
aaa
jne
repnz
cmp
aaa
jne
cmp
cmp
aaa
jne
cmp
xor
jne
cmp
xor
lahf
cmpsl
cmp
xor
mov
jns
push
xor
std
cmp
aaa
jne
inc
xor
cmp
aaa
jne
cmp
cwtl
cmp
aaa
jne
cmp
xor
jne
cmp
xor
lahf
xchg
cmp
xor
pop
cmp
lret
push
xor
cmp
aaa
jne
cmp
ja
cmp
aaa
jne
cmp
idivl
jns
aaa
jne
cmp
xor
jne
cmp
xor
lahf
cmp
xor
sarl
fwait
mov
lret
cmp
aaa
jne
insb
xor
cmp
aaa
jne
cmp
fidivrl
jns
aaa
jne
cmp
xor
jne
cmp
xor
lahf
cmp
xor
into
cmp
fidivs
stos
cmp
aaa
jne
mov
ja
cmp
aaa
jne
cmp
cmp
jns
aaa
jne
push
mov
jne
insb
xor
cmp
aaa
jne
cmp
xor
jns
mov
or
nopl
in
pop
xor
xchg
adc
xor
mov
or
xor
movsb
bound
scas
jecxz
fldt
jbe
notl
jle
arpl
and
sub
lea
fldcw
cmp
je
sbb
sub
cmp
cmp
xchg
ret
mov
sbbl
jns
dec
xor
mov
mov
cmp
test
cmp
lea
cmp
hlt
jae
inc
or
dec
mov
adc
leave
push
fadd
push
sbb
jmp
in
or
ja
lods
sub
mov
cmp
shl
xor
xchg
push
sbb
sbb
scas
pop
out
xor
ss
cmp
pop
push
mov
jno
mov
xor
or
cltd
shll
jecxz
dec
cmpsl
ficompl
or
jns
mov
add
xchg
leave
mov
loope
mov
adc
orb
fists
inc
xor
scas
push
data16
popa
inc
cmp
cmc
ret
mov
fldenv
sbb
int3
mov
xor
cmpsb
inc
push
loope
sbb
hlt
sbb
scas
push
repz
dec
nop
and
frstor
cmp
cli
adc
int
outsb
xor
scas
xchg
mov
fbld
clc
cmp
fisubrl
cmp
jge
cmp
in
stos
inc
out
sbb
xchg
push
or
push
aaa
mov
cmc
push
fwait
xor
xchg
leave
mov
stos
loope
add
cmp
into
jo
xor
ret
adc
mov
jl
js
xor
notl
cmp
jnp
cmp
mov
sbb
ja
xor
add
mov
mov
sbb
xor
sub
pop
jecxz
cmpsl
loopne
addr16
sub
pop
jecxz
pop
mov
push
xchg
xor
or
aad
cwtl
incb
mov
rcr
fisubl
cmp
outsb
test
cmp
dec
das
and
inc
lock
lahf
pusha
data16
aaa
pop
das
out
in
mov
jge
les
push
cmp
outsb
cmc
xchg
cmp
inc
and
push
xor
mov
or
xor
add
xor
test
push
insl
cmp
inc
loop
cmp
jg
insb
jnp
xor
je
push
aaa
and
lods
add
pushf
pop
lock
outsl
sahf
xchg
fidivl
movsb
jle
or
bound
xor
aaa
ja
les
shr
lds
in
cld
xor
jno
pop
push
xchg
mov
jl
subl
adc
sarl
scas
jo
stc
shrb
adc
xor
jns
sub
mov
xor
stos
mov
fiadds
xchg
loop
xor
cld
repz
aaa
divl
inc
int
outsl
or
mov
sbb
sarb
test
sbb
test
in
sub
mov
pop
cmpsb
fs
jle
xor
fisttpl
cmp
sbb
outsl
inc
jle
sub
mov
aaa
inc
call
sub
pop
pop
cmp
pop
xor
cmp
dec
lods
mov
xor
pop
mov
push
xorl
mov
aam
clc
sub
mov
andl
enter
jnp
jecxz
cli
push
ds
xor
xchg
lds
movsb
add
xor
faddl
cmp
ficomps
xor
sub
xor
call
or
xchg
in
rorl
mov
xor
aaa
jecxz
aas
imul
adc
shlb
std
mov
aaa
fnstsw
cmpl
stc
fldz
inc
cmp
jb
jnp
fimuls
mov
cmp
mov
cmp
or
inc
xor
jnp
aaa
into
mov
mov
cmp
ds
mov
cmp
pop
aaa
mov
cmp
xor
divl
inc
cmp
stos
xor
aaa
mov
and
mov
cmp
cmp
shlb
dec
cmp
dec
aaa
mov
cmp
xor
je
mov
cmp
or
mov
cmp
pushl
mov
cmp
cmp
scas
aaa
mov
cmp
lock
mov
cmp
xor
lret
xor
dec
cmp
jo
mov
cmp
in
xor
aaa
mov
cmp
or
mov
cmp
dec
aaa
mov
cmp
xor
push
mov
cmp
xchg
xor
aaa
mov
add
mov
cmp
cmp
movsb
aaa
mov
cmp
and
mov
cmp
xor
xchg
xor
nop
cmp
ja
mov
cmp
sahf
xor
aaa
mov
cmp
jl
mov
cmp
cmpsl
aaa
mov
cmp
xor
imul
cmp
mov
cmp
out
xor
aaa
mov
cmp
cwtl
aaa
mov
cmp
jbe
mov
cmp
xor
shlb
cmp
xchg
xor
aaa
mov
lcall
aaa
mov
cmp
cltd
aaa
mov
cmp
addr16
mov
cmp
xor
ss
jne
push
aaa
xor
fwait
aas
push
cmp
push
aaa
adc
fs
pop
xor
xor
cmp
aaa
cmp
cmp
and
cmp
adc
aaa
ja
xchg
cmp
push
xlat
xor
fnstenv
xor
cmpsb
jne
add
leave
shll
inc
sbb
jne
xor
fstpt
test
xor
fnstenv
cmp
xlat
xor
mov
fnstenv
mov
xor
xor
cmp
mov
xor
cmp
xor
insl
fstpt
jno
aas
cmp
aaa
adc
sub
cmp
aaa
mov
cmp
cmpsl
jne
pop
xor
mov
fnstenv
repnz
xor
xor
xor
aad
imul
mov
sub
mov
fnstenv
repnz
xor
aad
call
cmp
shll
sbb
mov
ss
cmp
aaa
adc
jge
mov
repz
mov
aaa
pop
cmp
das
mov
xor
jo
and
dec
xlat
xor
jns
cmp
xor
cmp
cmp
cmp
jle
xor
sarl
std
fstpt
test
adc
cmp
inc
aad
xor
dec
xor
inc
cmp
aaa
mov
inc
cmp
dec
xor
cmp
or
xor
out
dec
xor
aaa
mov
cmp
aaa
aas
cmc
dec
cmp
inc
cmp
xor
xor
in
cmp
out
cmp
dec
xor
lds
addl
xchg
xor
fwait
addr16
xor
cmp
inc
xor
mov
cmp
jae
cmp
mov
bound
xor
outsl
repz
xor
dec
xor
mov
xor
inc
cmp
inc
inc
aaa
or
cmp
inc
xor
imul
dec
xor
xor
xor
xor
adc
lds
xor
nop
cmp
jno
fnstenv
ds
inc
xor
inc
cmp
mov
xor
xor
xor
inc
dec
cmp
cmp
dec
xor
dec
cmp
xor
inc
cmp
popa
aaa
and
add
and
inc
sub
vmovaps
sbb
aaa
insl
lret
xor
mov
popf
orl
dec
xor
inc
xor
inc
cmp
dec
xor
aaa
jae
aas
fs
xor
inc
cmp
aaa
outsb
dec
xor
ss
aaa
mov
cmp
bound
sahf
sarl
cmp
xor
mov
inc
and
dec
cmp
xor
and
xor
inc
cmp
dec
xor
aaa
or
cmp
xor
cmp
test
aaa
push
stos
and
inc
xor
cmp
inc
xor
pop
dec
or
ret
inc
aaa
lahf
std
dec
xor
cmp
aaa
or
gs
inc
aaa
rorb
cmp
sbb
leave
mov
cmp
leave
and
inc
cmp
inc
cmp
xchg
lds
stc
inc
aaa
inc
lret
cmp
or
mov
cmp
dec
xor
inc
lods
inc
aaa
lahf
arpl
cmpsl
inc
cmp
cmp
inc
aaa
ja
cmp
xor
insl
dec
cmp
xor
inc
xor
inc
cmp
dec
xor
inc
cmp
dec
xor
inc
cmp
xor
test
jl
xor
inc
add
cmp
cmp
inc
aaa
xchg
popf
inc
xor
xchg
dec
cmp
cmpsl
aaa
scas
dec
xor
inc
xor
inc
cmp
into
inc
cmp
dec
xor
inc
sub
inc
daa
xchg
lds
or
cmp
inc
or
popf
cwtl
dec
cmp
xor
inc
cmp
inc
xor
sub
xor
and
mov
cmp
cmp
roll
cmp
xor
inc
xor
inc
cmp
inc
cmp
inc
sub
xchg
test
xor
cmp
cmp
xor
inc
jo
cmp
inc
xor
pusha
dec
cmp
xor
inc
cmp
dec
xor
inc
sbb
mov
fnsave
inc
cmp
dec
xor
arpl
dec
cmp
orb
inc
cmp
inc
xor
ss
aaa
mov
and
inc
cmp
inc
xor
dec
cmp
bound
pop
inc
aaa
gs
xor
inc
xor
jge
cmp
xor
inc
xor
inc
cmp
popa
aaa
and
cmp
cmpsb
stos
fsts
jbe
aaa
jmp
xor
cmc
inc
aaa
mov
or
cltd
loop
cmp
push
cmp
fwait
jo
cmp
aaa
or
xor
popa
dec
cmp
xor
xor
inc
xor
inc
cmp
cmp
inc
jns
cs
inc
xor
xor
cltd
dec
cmp
xor
lret
xor
xor
inc
cmp
fs
xor
dec
xor
inc
aas
add
xor
and
shll
dec
cmp
inc
aaa
add
leave
mov
setb
inc
cmp
cmp
dec
cmp
add
dec
xor
inc
cmp
pop
xchg
jbe
cmp
xor
pusha
dec
cmp
xor
inc
cmp
dec
xor
lds
sub
inc
outsb
leave
es
inc
cmp
aaa
xor
inc
cmp
dec
ja
clc
leave
and
cwtl
dec
cmp
es
cmp
xor
inc
xor
xor
inc
cmp
inc
cmp
inc
sub
aaa
inc
pop
jne
aaa
jae
cmp
inc
sbb
data16
xor
inc
dec
cmp
xor
dec
inc
enter
xchg
fldl
pusha
dec
aaa
in
xor
cmc
dec
cmp
xor
inc
or
jle
push
inc
xor
add
js
and
xor
push
pop
sbb
adc
je
sbb
jo
jnp
pop
push
push
dec
adc
pop
dec
inc
pop
pop
pop
push
adc
inc
dec
pop
adc
push
inc
xor
adc
inc
pop
cmp
pop
dec
sbb
push
adc
pop
pop
pop
pop
jbe
les
cmp
aaa
cmp
xor
xor
xor
cmp
xor
xor
mov
xor
cmp
dec
ja
repz
lahf
add
xor
add
mov
or
xlat
dec
jnp
mov
xor
pop
or
jne
xor
roll
repz
outsl
mov
cmp
xor
add
xor
add
xor
lds
cmp
xor
iret
cmp
xor
jmp
xor
nop
cmp
xchg
xor
cmp
sahf
xor
cmp
lcall
xor
xchg
xor
xchg
cmp
xor
xchg
loop
aaa
xchg
jnp
xorb
cmp
or
xor
cmp
xor
xchg
dec
mov
in
mov
cmp
xor
clc
cmp
lock
xor
xor
cmp
cmp
repz
xor
cmp
ss
cmp
xor
xor
cmp
ss
jmp
jo
out
cmp
in
cmp
out
xor
cmp
ss
cmp
xor
fstpt
fs
cmp
xor
xor
cmp
xor
shll
cmp
cmp
fnstcw
and
fdivs
cmp
ss
enter
leave
cmp
sarb
xor
xor
cmp
ss
cmp
xor
lds
push
ss
xor
xor
pop
xor
cmp
ss
cmp
cmp
xor
xor
cmp
mov
or
repnz
xor
divl
pop
xor
cmp
xor
aaa
addr16
xor
ds
cmp
ss
and
lret
cmp
xor
sysenter
cwtl
cmp
nop
cmp
xor
xor
cmp
cmp
xchg
outsb
xor
xor
cmp
cmp
mov
pop
xor
xor
cmp
xor
xor
cmp
ss
cmp
xor
adc
loopne
jo
jmp
jnp
call
cmp
ljmp
cmp
xor
xor
cmp
fnstcw
cs
adc
shlb
lret
xor
enter
int3
cmp
lret
cmp
xor
cmp
or
xchg
aas
xor
or
xor
ret
pop
xchg
aas
cwtl
add
xor
add
cltd
aas
fiaddl
lcall
or
cmp
fwait
add
xor
add
cmpl
add
xor
add
mov
mov
mov
mov
mov
mov
xchg
mov
cmc
aas
xchg
divb
cli
or
xor
or
xor
stc
pop
lock
repz
xor
or
xor
or
xor
incl
aas
testb
xor
or
xor
or
xor
ljmp
xor
or
xor
or
xor
roll
loope
fldl
loop
fisttpll
out
fisttpll
out
xor
fildl
in
aas
rolb
in
xor
or
xor
or
xor
ret
aas
mov
or
xor
xor
sbb
cmc
xor
aas
repnz
cmp
cmp
xor
ds
aaa
lock
stc
xor
xor
cmp
xor
adc
sti
xor
aas
cld
xor
cmp
hlt
cmp
xor
or
out
or
jecxz
pop
cmp
out
cmp
xor
ds
loope
or
cmp
loop
or
out
add
xlat
xor
shlb
je
xor
jge,pt
shlb
jle
xlat
xor
fidivs
xor
cmp
xor
jo,pt
fnsave
jno
fidivl
jle
aad
jnp
cmp
xor
ja,pt
fdivs
je
shll
cmp
leave
cmp
xor
push
aas
popf
aaa
arpl
sahf
aas
xor
xor
xor
nop
aaa
outsb
xor
cmp
addr16
xchg
aaa
imul
test
cmp
mov
xor
cmp
cmp
aas
xorl
cmp
cmp
xor
test
cmpsl
xor
cmp
jne
lock
xor
aas
ja
icebp
cmp
push
cmp
aaa
add
repz
je
cld
cmp
add
cmc
aaa
or
idivb
or
xor
loope
or
call
aas
jno
out
js
jecxz
jns
in
jbe
out
aaa
add
in
aas
add
in
cmp
jo
jmp
add
loop
jg
out
jl
call
xor
xor
fnstenv
sbb
fidivrl
and
xlat
cmp
sbb
aas
fdivl
and
fnstsw
adc
xor
fdivs
sub
xor
aas
sub
fnstcw
daa
cmp
aaa
sub
lret
aas
cs
cmp
sbb
int
adc
xor
cmp
sub
shlb
xor
aas
es
cmp
push
cmp
aaa
adc
les
sbb
xchg
cmp
xor
xor
sahf
ds
xor
cmp
xor
xor
ss
ds
lcall
cmp
ss
ss
ds
xor
cmp
xor
xor
cmp
ds
xor
cmp
xor
movsb
cmp
movsl
ss
mov
xor
xor
cmp
mov
xor
cmp
xor
xor
cmp
ss
idivb
lods
xor
cmp
xor
xor
call
ds
xor
cmp
xor
xor
cmp
ss
ss
cltd
xor
cmp
xor
xor
cmp
test
fistpll
test
cmp
xor
xor
cmp
ss
sarb
mov
cmp
xor
xor
cmp
mov
aad
xor
cmp
xor
xor
cmp
xor
cmp
ss
ss
sarl
xor
cmp
ss
ds
xor
cmp
xor
aas
cmp
lcall
adc
xor
adc
aas
xchg
sbb
xor
adc
test
xchg
cmp
adc
xor
sbb
cmp
test
push
adc
idivl
sub
sti
cmp
pop
xor
adc
cmp
loope
idivl
in
hlt
xor
jecxz
and
in
cmp
mov
in
push
pop
out
sbb
call
aas
aaa
sbb
cmp
push
leave
xor
sbb
aas
cmpsb
sbb
cmp
adc
xor
sbb
fnstsw
cmp
fidivs
cmp
fnsave
sbb
sbb
sarb
daa
adc
xor
adc
cmp
sbb
ds
sbb
cmp
xor
sbb
sub
int3
cmp
adc
xor
adc
cmp
sbb
cmp
xor
pop
xchg
xor
xchg
aas
cmp
xchg
cmp
ds
pushf
xor
sbb
cmp
adc
test
push
xchg
outsl
sbb
cmp
xor
xorb
adc
cmp
xor
xor
pop
mov
adc
mov
adc
sbb
cmp
xor
lock
aas
gs
cmp
and
divl
lock
xor
sbb
cmp
das
adc
out
and
sbb
cmp
add
pop
in
xor
in
aas
xchg
sbb
cmp
adcl
ljmp
sbb
cmp
lcall
xor
xlat
cmp
popf
adc
xor
adc
aas
daa
pop
fidivrl
push
adc
xor
pop
pop
aas
sbb
sarb
adc
shll
push
ret
pop
cmp
jne
ret
xor
int3
xor
pop
int
cs
cmp
unpckhps
xor
pop
lret
xor
adc
or
xchg
cmp
pop
xchg
xor
adc
cmc
ds
sbb
cmp
sbb
cmp
aaa
pushl
and
sti
ds
sbb
cmp
sbb
cmp
adc
xor
adc
xor
adc
ds
sbb
cmp
adc
xlat
cmp
cmp
cmp
fstpt
loop
shll
in
xor
cmp
cmp
cmp
fidivrs
jmp
xor
cmp
cmp
cmp
ds
jmp
xor
out
fdivrs
in
sarl
ds
leave
xor
fidivl
cmp
cmp
cmp
ds
cmp
xor
aaa
shll
cmp
cmp
cmp
ds
cmp
cmp
cmp
xchg
cmp
aaa
xchg
cmp
xor
pushf
xor
cmp
cmp
aaa
fwait
cmp
xor
xchg
xor
cmp
cmp
xor
mov
cmp
cmp
aaa
test
and
lea
cmp
cmp
aaa
mov
sub
cmpl
mov
and
aaa
cmp
xor
sti
xor
cmp
sbb
cmc
cmp
aaa
repnz
xor
xor
cmp
ss
aas
lock
stc
cmp
cmp
xor
cmp
adc
sti
cmp
aaa
cld
cmp
xor
hlt
xor
cmp
or
out
or
jecxz
pop
xor
out
xor
cmp
ss
loope
or
xor
loop
or
out
add
jmp
cmp
xor
fidivl
cmp
ss
aam
js
aad
jno
fdivrl
cmp
xor
cmp
ss
fistpll
jae
fdivrs
jl
sarl
cmp
ss
fidivrl
jbe
sarl
xor
leave
xor
cmp
ss
ret
cmp
les
pusha
xor
int3
xor
cmp
ss
aas
into
cmp
nop
cmp
fwait
aas
add
push
xchg
xor
push
or
aas
add
aaa
or
pushf
xor
add
lcall
add
aaa
or
fwait
xor
add
cmpl
jbe
mov
jae
xchg
jg
test
jo
aas
jno
mov
jbe
lea
jb
mov
jg
cmpb
add
aaa
jge
mov
jne
mov
jp
stc
aas
addr16
aaa
pusha
push
divl
push
or
aas
bound
xor
arpl
clc
cmp
aas
insl
add
aaa
push
stc
xor
data16
cmp
idivb
push
push
in
pop
add
cmp
loop
push
or
aas
lahf
and
aaa
cwtl
es
xchg
and
cmp
sub
aas
lcall
xor
mov
in
cmp
in
andb
xor
mov
sarl
subl
aas
andb
mov
shlb
subl
sarl
mov
aaa
mov
fbstp
test
fnstsw
cmc
sub
aas
mulb
xor
dec
or
cmp
lret
aas
dec
add
aaa
mov
shll
or
cmp
add
aaa
fisubl
int3
xor
ret
cmp
xchg
arpl
mov
push
mov
inc
cmp
adc
pop
xchg
sbb
sbb
xchg
adc
popf
sbb
sbb
adc
cmp
xor
xor
xor
cmp
cmp
cmp
cmp
cmp
xor
xor
les
xor
xor
xor
adc
cmp
lretw
adc
xor
xor
les
xor
xor
cmp
xor
xor
adc
cmp
popa
lret
adc
xor
xor
push
les
xor
xor
xor
xor
push
cmp
xor
cmp
xor
xor
pop
les
xor
cmp
mov
xor
xor
cmp
cmp
mov
ss
xor
cmpsl
les
xor
cmp
mov
xor
xor
inc
cmp
xor
aaa
xor
xor
mov
xor
xor
xor
sbb
lret
adc
xor
xor
scas
les
xor
enter
xor
xor
sbb
cmp
test
cmp
pop
aaa
xor
xor
sahf
les
xor
cmp
xor
xor
pop
cmp
xor
aaa
xor
xor
test
cmp
push
xor
xor
xor
push
cmp
xor
xor
xor
add
xor
cmp
xchg
xor
xor
push
cmp
xor
aaa
xor
xor
mov
cmp
inc
xor
xor
xor
inc
cmp
xor
lret
inc
aaa
xor
xor
test
xor
cmp
cmc
enter
xor
xor
inc
cmp
xor
lret
dec
aaa
xor
xor
std
les
xor
cmp
clc
enter
xor
xor
dec
cmp
xor
lret
dec
aaa
xor
xor
clc
les
xor
cmp
dec
xor
xor
mov
cmp
out
cmp
mov
xor
xor
out
cmp
mov
cmp
loop
xor
xor
mov
cmp
loop
cmp
mov
xor
xor
xlat
les
xor
enter
xor
xor
xchg
cmp
xor
lret
xchg
aaa
xor
xor
faddp
cmp
insb
xor
xor
xor
push
xor
jne
test
aaa
xor
mov
cmp
test
jnp
lock
xor
xor
aaa
call
cmp
cmp
jne
stc
xor
xor
idivb
cmp
clc
out
cmp
aaa
xor
xor
call
cmp
into
in
cmp
xor
xor
std
cmp
xor
jnp
clc
aaa
xor
xor
cmp
jns
cld
xor
jne
cmc
xor
xor
clc
cmp
xor
jecxz
cmp
aaa
xor
xor
ss
jns
out
cmp
cmp
jne
call
out
jno
out
cmp
loop,pn
cmp
aaa
xor
xor
inc
in
jns
loop
cmp
xchg
loopne
cmp
xor
xor
loop
cmp
xlat
loop
cmp
aaa
xor
xor
insb
ljmp
push
out
cmp
xor
xor
jmp
in
cmp
aaa
xor
xor
mov
jns
aad
cmp
mov
xor
xor
sbb
pop
xor
pop
cmp
aaa
xor
push
dec
pop
pop
push
dec
pop
cmp
sbb
xor
push
push
pop
pop
push
pop
push
cmp
mov
lret
xor
lret
xor
mov
popf
aaa
xor
fucom
sbb
leave
mov
sti
mov
xorl
iret
xor
aad
mov
cmp
xor
enter
test
aaa
xor
inc
dec
mov
or
lahf
decb
ss
cmp
sbb
mov
mov
in
das
mov
xor
mov
jge
mov
enter
mov
test
push
mov
in
gs
push
ss
pop
or
shll
int
arpl
aas
sbb
mov
cmp
in
ss
jmp
mov
cmp
push
or
adc
xorl
aaa
jmp
pop
cmp
out
addl
loopne
jae
adc
mov
dec
xor
push
jne
adc
data16
add
add
iret
les
shll
mov
mov
mov
xchg
rorl
sub
bound
jp
ss
xlat
imul
mov
mov
sub
mov
cmp
mov
add
xor
mov
jmp
inc
fxch
lds
xor
gs
aam
loop
hlt
ds
inc
and
out
les
clc
adc
test
jbe
jae
fcomip
xchg
cs
xor
xor
call
push
mov
dec
xor
sarb
dec
jl
cmc
pop
dec
xchg
cmp
shll
aad
jne
dec
dec
sub
into
roll
imul
sub
sbb
mov
stos
int3
mov
ret
mov
cmp
jne
arpl
push
mov
push
bound
pop
or
loop
mov
push
loopne
xor
xor
push
and
ss
pop
lret
aas
pop
scas
fidivs
xchg
outsb
sarb
sub
xor
xor
push
aaa
xlat
sub
mov
rcll
sbb
adc
cs
jno
inc
loop
jle
cmp
cmp
jp,pt
mov
pop
aaa
inc
cmp
inc
xor
xor
xor
addr16
push
xor
push
pop
pop
cmp
fdivs
push
aaa
js
pop
inc
ja
pop
xor
pop
pop
shlb
bound
cmp
pop
xchg
xor
pop
aaa
pop
cmp
xor
inc
dec
pop
pop
aaa
xor
pop
dec
dec
inc
dec
mov
cmp
pop
push
inc
aad
cmp
ss
push
pop
push
pop
push
dec
inc
push
inc
dec
cmp
cmc
fs
push
pop
pop
dec
cmp
push
xor
pop
push
push
cs
pop
inc
push
and
cmp
jne
inc
aaa
jp
pop
inc
aaa
pop
dec
xor
dec
pop
xor
push
pop
xor
cmp
xor
aad
dec
xor
pop
cmp
push
push
cmp
inc
cmp
inc
pop
cmp
inc
xor
xor
pop
dec
cmp
aaa
dec
dec
push
sbb
pop
dec
push
xorb
push
pop
push
ja
adc
pop
push
push
mov
inc
repz
pop
dec
xor
pop
stc
xor
aaa
or
dec
inc
sbb
pop
cmc
cmp
cmp
dec
push
inc
push
dec
push
inc
xor
pop
push
push
push
xor
push
pop
dec
push
adc
xor
push
push
pop
push
xor
jne
pop
sbb
push
dec
dec
push
cmp
cmp
aas
xor
mov
jne
lds
jne
roll
rorl
roll
xchg
aad
aaa
fisttpll
cmp
pop
xor
jmp
xor
add
xor
add
aaa
xchg
xor
inc
pop
sbb
mov
dec
adc
inc
sbb
aaa
jo
cmp
jno
sbb
xchg
add
cmp
popa
imul
sbb
mov
xor
sub
pop
aaa
pop
dec
pop
pop
inc
sbb
cmp
dec
mov
inc
dec
dec
xor
push
push
pop
mov
push
inc
int
gs
inc
leave
and
push
pop
inc
pop
inc
xor
pop
jmp
xor
push
sbb
push
pop
push
dec
jmp
loop,pt
add
cmp
push
aaa
inc
dec
pop
inc
or
push
push
push
pop
cmp
jno
xor
pop
cmp
push
pop
cmp
sbb
pop
push
push
sbb
pop
push
inc
fsts
cmp
mov
dec
or
xchg
ss
pop
mov
pop
or
xor
inc
push
pop
push
push
imulb
jl
inc
pop
dec
fdivs
xor
cmp
sbb
sbb
aaa
pop
cmp
cmp
xor
xor
push
test
cmp
jno
outsb
jne
aaa
jno
jge
xor
aaa
cmovae
jle
push
cmp
dec
cmp
xor
or
push
adc
or
and
add
and
push
mov
mov
pop
pop
adc
add
pop
xor
xor
xor
xor
jns
jne
sbb
loope
adc
pop
push
dec
adc
xor
push
push
or
addr16
popa
or
cmp
aaa
adc
xor
jl
mov
dec
cmp
xor
cmp
gs
sbb
pop
push
adc
aas
enter
adc
cmp
add
xor
jo
pop
ja
xor
xor
inc
dec
pop
push
pop
pop
pop
push
xor
pop
push
pop
sbb
fsts
inc
cmp
xor
or
xor
adc
inc
pop
dec
sbb
fwait
pop
mov
inc
sbb
push
dec
test
jl
push
pop
pop
push
loope
les
imul
mov
pop
dec
push
pop
pop
jbe
and
stc
popa
inc
pop
inc
inc
sbb
xor
sub
sub
or
inc
lds
insl
je
xor
xor
cmp
pop
push
pop
adc
pop
xor
shlb
push
pop
sbb
inc
ljmp
and
aas
or
jo
outsl
sub
mov
sbb
jo
jb
pop
push
pop
inc
dec
cmp
push
pop
pop
push
pop
pop
push
cwtl
and
rorb
add
adc
gs
jg
inc
aaa
jnp
insl
adc
xor
dec
xor
xor
out
adc
das
lret
aaa
ss
sub
xor
es
cmp
and
aaa
push
cmp
push
and
push
stos
and
ss
sub
cmpsw
xor
rolb
mov
shll
cmp
leave
adc
push
or
popf
dec
imul
add
inc
lret
iret
xor
pop
and
push
js
popa
pop
pop
dec
cmp
xor
in
dec
fs
pop
mov
mov
cmp
xor
dec
push
xor
aaa
inc
xor
aaa
jnp
dec
xor
lds
ljmp
xchg
fsubrs
dec
data16
pop
lds
and
dec
xor
gs
cmp
daa
or
push
aaa
inc
jmp
sbb
inc
insb
xor
mov
push
or
addr16
jb
and
aas
mov
add
mov
mov
inc
xchg
or
mov
inc
cmp
xor
int3
xor
xor
adc
inc
adcl
js
mov
dec
xor
pop
cmp
xor
pop
cmp
jb
cmp
push
cmp
dec
inc
cmp
push
xor
xor
xor
cmp
lods
fs
mov
push
cmp
dec
aaa
jne
push
aaa
inc
imul
je
pop
xor
dec
dec
xor
jns
cmp
jns
pop
inc
push
inc
aas
inc
jo
or
jb
push
fwait
pop
inc
push
popa
push
cmp
push
xor
fs
push
dec
cmp
add
xor
pop
dec
dec
jle
pop
cmp
pop
pop
dec
pop
pop
pop
cli
cmp
aaa
xor
pop
cmp
and
dec
xor
ss
jg
pop
xor
cmp
push
pop
pop
cmp
inc
xor
xor
xor
cmp
aaa
jae
insl
xor
jp
adc
jle
add
add
add
outsl
mov
pop
aaa
push
mov
imul
pop
push
jae
dec
mov
push
pop
push
inc
pop
inc
mov
push
dec
push
aaa
inc
mov
mov
sbb
push
inc
pop
inc
mov
dec
push
push
xor
pop
push
cmp
xor
inc
pop
dec
pop
inc
jb
cmp
cmp
adc
add
mov
insb
mov
mov
push
mov
jg
push
pusha
mov
inc
mov
dec
fs
dec
mov
sbb
or
mov
mov
sub
xor
adc
dec
xor
imul
xchg
add
sub
xor
mov
test
lock
jl
and
ss
pop
pop
mov
add
xor
inc
push
push
pop
pop
inc
push
cmp
adc
adc
adc
sbb
sbb
cmp
sub
das
aaa
sbb
pop
add
sbb
adc
xor
scas
xchg
mov
aaa
mov
mov
movsl
test
xchg
mov
test
mov
lret
rol
xor
fistpll
xor
aaa
cmp
cmp
mov
adc
pop
or
pop
sti
sub
xor
add
and
or
add
mov
adcl
sbbl
xchg
jns
insl
ss
lock
and
and
sbb
cmp
cmp
aas
dec
cmp
cmp
push
push
xor
fmul
jecxz
ret
lret
std
fnstenv
hlt
aaa
sbb
add
push
sbb
sbb
insl
jle
xor
je
js
jp
cmp
pop
dec
push
dec
pop
jo
jbe
inc
dec
dec
pop
push
push
xor
push
bound
aaa
jae
inc
jns
gs
xor
xor
sub
sub
xor
das
cmp
mov
cmp
pop
add
cmp
aas
ja
sbb
push
cmp
xor
adc
adc
mov
cltd
adcl
cmp
mov
movsb
mov
xor
mov
mov
testl
jle
cmp
lods
mov
xor
mov
mov
cwtl
addl
aaa
sub
xor
cmp
bound
insl
jo
push
and
xor
aaa
cwtl
xchg
divl
jle
dec
dec
inc
inc
pop
dec
add
dec
inc
inc
inc
dec
inc
or
sbb
push
pop
push
sbb
inc
pop
xor
and
sub
and
sub
jno
xor
cmp
and
xor
aas
or
push
inc
cmp
cmp
mov
mov
mov
icebp
scas
mov
mov
test
test
scas
stos
lods
cmpsl
mov
test
aaa
scas
cltd
fwait
shlb
popa
dec
inc
xor
dec
or
cmp
dec
pop
dec
pop
push
push
cmp
pop
push
push
push
pop
xor
push
data16
aaa
xor
mov
test
scas
mov
push
aaa
mov
cmc
pop
and
inc
addr16
insb
pusha
pusha
jne
bound
popa
insb
insl
push
cmp
xor
adc
cmp
cmp
push
xor
or
aaa
xor
sahf
xchg
xchg
mov
nop
stos
nop
xchg
xchg
lcall
bound
pop
insl
cmp
insl
cmp
rcl
sarb
fsubr
rcr
fcomp
aaa
xor
das
sbb
add
and
adc
ds
pop
push
pop
fs
xor
push
inc
cmp
push
pop
cmp
sahf
lcall
mov
mov
insb
xor
arpl
aaa
jge
push
jnp
jns
jg
jle
xor
sbb
add
or
cmp
or
cmp
xor
sbb
or
cmp
pop
xor
xor
adc
add
xor
fstpt
aam
ret
jecxz
les
fsubrp
ror
daa
enter
outsl
push
aaa
gs
jnp
jo
jnp
xor
outsb
jae
pop
ja
cmp
ja
cmp
xlat
sarb
clc
int
rol
fbstp
fst
xor
bound
imul
push
popa
imul
inc
jle
gs
xor
enter
lret
into
rol
std
fdivrs
xlat
int
and
cmp
push
xor
xor
cmp
add
xor
xchg
mov
scas
adc
push
aas
cwtl
popf
xor
mov
mov
xor
cmp
and
sub
mov
ss
xor
hlt
repz
ja
call
fistl
aaa
push
pop
outsl
gs
popa
xor
push
jle
insl
jb
cmp
pop
push
sbb
sub
pop
push
adc
adc
and
push
cmp
data16
inc
jne
push
fcomi
xlat
xor
leave
int3
ret
aaa
iret
ret
ljmp
loopne
in
call
ret
aad
fidivrl
aam
enter
lret
pop
xor
hlt
aad
jecxz
bnd
loop
in
out
shll
lds
rol
fadd
dec
xor
enter
aaa
xlat
fcmovu
ret
ret
mov
xor
test
fnstcw
push
xor
lcall
mov
xchg
mov
xor
dec
enter
ror
fstpt
fsubr
in
shl
call
out
out
xor
jmp
in
cmp
mov
cmp
cmpl
pop
add
push
or
push
cs
cwtl
mov
orl
xchg
cmp
push
and
jmp
loope
loopne
clc
pop
xor
or
add
or
add
sbb
or
sbb
pop
sbb
and
aam
cmpsl
mov
cli
mov
les
out
cli
in
xlat
outsl
mov
cmp
rol
aad
ffree
nop
xor
rcr
mov
push
inc
inc
xor
bound
sub
and
xor
cld
in
loope
loop
clc
out
rcl
lret
fdivl
leave
aaa
aad
xchg
xchg
lock
jecxz
cld
sbb
push
out
inc
xor
sahf
cmp
ficomps
mov
cmp
jecxz
lock
jmp
aaa
loopne
in
lret
vpmaxub
ror
lret
aad
xchg
mov
fnclex
cld
idiv
out
xor
in
lock
shll
hlt
out
imul
cli
call
jns
addr16
gs
ds
cmpl
xor
add
sub
sub
xor
es
adc
xor
adc
sub
rcr
xchg
loope
jne
cmp
or
dec
xor
cmp
push
jns
push
xor
push
dec
dec
inc
aaa
push
dec
pop
jno
inc
push
inc
xor
push
jno
dec
push
dec
cmp
dec
xor
add
or
aaa
lea
xchg
xchg
int3
mov
mov
xor
fcompp
int3
rol
aaa
lahf
cmp
in
movsl
mov
xor
pop
push
cmp
push
mov
clc
loop
ret
sbb
pop
pop
inc
dec
cmp
dec
inc
inc
cmp
mov
inc
and
adc
cmp
movsb
mov
ss
aam
ss
cmp
out
sti
icebp
in
aaa
out
test
xlat
aam
shlb
int3
rcr
enter
jecxz
enter
cmp
mul
out
jmp
ret
jno
xor
je
jbe
jbe
xor
icebp
cld
out
loopne
aas
push
xor
mov
stos
mov
lods
add
das
roll
push
inc
xor
pop
inc
dec
inc
aaa
pop
jns
pop
push
jnp
inc
xor
pop
cmp
vaddsubpd
fmulp
ffree
rol
loopne
cmp
shr
repz
icebp
jmp
iret
imul
in
int
lock
loope
cmp
out
ret
adc
into
int
xchg
jae
xor
cmp
and
xor
sbb
inc
jns
push
je
push
mov
insl
jns
cmp
rcr
and
aaa
xor
daa
cmp
xor
repnz
popf
into
fdivrs
rolb
ss
xor
sub
cmp
add
adc
sbb
xor
xor
rcl
shll
fmul
aam
repnz
xor
mul
repnz
cld
xor
jecxz
or
sub
cmp
dec
cmp
lret
rcl
sub
add
cld
hlt
dec
xor
daa
sub
aaa
xor
and
cmp
sub
cmp
inc
or
mov
cmp
cmc
repnz
push
clc
ljmp
mov
ljmp
adc
sbb
adc
pop
adc
cmp
sbb
dec
pop
add
push
xor
inc
dec
inc
or
and
cmp
push
aaa
mov
scas
mov
mov
xor
mov
test
test
mov
cmpsb
mov
popf
sarb
and
aas
adc
pop
sbb
xor
adcb
cmpsb
cmp
jno
jnp
xor
push
push
push
push
push
cmp
push
push
push
inc
aaa
cmp
and
adc
xor
popa
das
xor
cmp
sub
xor
lret
xor
pop
mov
xlat
mov
adc
sbb
sbb
pop
adc
cmp
aaa
sbb
pop
sbb
or
daa
sub
pop
cmp
add
jo
jg
jb
xor
jmp
ljmp
adc
aaa
mov
mov
scas
lock
mov
rcr
frstor
popf
fcmovu
into
inc
push
out
loop
mull
cmp
std
aaa
mov
xor
aam
into
aam
out
hlt
cmp
popf
lcall
fld
cmp
sbb
dec
dec
cmp
push
dec
xor
pop
inc
add
sub
jmp
test
in
mov
fnsave
mov
idivl
repz
cmpsb
idivl
xor
sub
jg
sbb
jnp
jae
mov
and
out
iret
cmp
cli
loope
cmc
enter
cli
std
idiv
hlt
loopne
aaa
out
dec
xor
stc
xor
push
push
sub
ja
cmp
dec
cmp
jmp
cmp
std
cli
lret
cs
bound
and
push
dec
inc
pop
and
add
cs
jg
sub
bound
cmp
push
xor
daa
das
xor
push
or
aaa
and
add
inc
pop
push
pop
addb
or
adc
adc
add
add
jne
aaa
push
pop
sbb
pop
push
and
xchg
sbbl
mov
lods
daa
test
cmpsl
cmpsb
out
jo
pop
aaa
push
inc
pop
dec
gs
push
xor
cmp
pop
je
insb
jnp
jb
pop
jne
jne
jle
outsl
inc
cmp
push
pop
cmp
arpl
inc
or
inc
mov
leave
iret
int3
fnstsw
mov
mov
mov
je
inc
cmp
cmp
gs
mov
scas
fwait
xchg
mov
dec
mov
xchg
cmpb
mov
mov
pushf
lea
mov
mov
xchg
orb
mov
xchg
mov
xor
test
or
or
or
xor
dec
or
sbb
sbb
dec
xor
cmp
jp
and
cmp
sub
in
icebp
idiv
pushl
jmp
shr
in
adc
hlt
loop
in
add
xor
inc
pop
push
add
cmp
or
dec
pop
inc
cmp
pop
inc
dec
cmp
mov
aaa
test
xchg
mov
lods
mov
mov
mov
stc
nop
mov
mov
cmp
out
aaa
idivl
mov
mov
xor
std
ljmp
in
stc
clc
cmp
ret
sbb
jg
cmp
js
arpl
outsl
xor
dec
dec
pop
dec
aaa
push
inc
push
dec
gs
jb
xor
jae
addr16
inc
push
cmp
cmpsl
in
out
cld
stc
movsl
cmp
jecxz
sti
jmp
shl
repz
sbb
xor
adc
cmp
adc
sbb
pop
sbb
subb
stos
movsb
movsb
movsl
popf
test
testl
ror
loop
cmp
fst
lcall
lret
lret
aad
lret
aaa
fcmovbe
enter
ret
icebp
clc
mov
mov
cwtl
pushf
cmp
jecxz
clc
fdiv
stc
jmp
loop
loope
icebp
aaa
loopne
xor
xchg
xchg
fidivrl
fcmove
fsubp
pop
mov
cmp
ja
inc
popa
data16
jb
cmp
gs
jb
jl
sub
fs
push
insl
sub
popa
mov
aaa
pop
pop
dec
pop
pop
inc
adc
xor
or
or
aaa
push
pop
cmp
jnp
pop
inc
dec
add
add
pop
inc
push
inc
aaa
sub
aaa
sub
xor
or
cmp
xor
and
xor
insb
gs
and
cmp
jnp
or
sub
or
sbb
push
aaa
pop
push
sbb
dec
xor
or
sysexit
sbb
cli
cmp
clc
cli
cld
loope
repz
mov
out
jne
ljmp
sti
xor
xchg
pushf
les
rcr
iret
rcl
int
xor
fadd
aad
enter
enter
rcl
fdivl
mov
mov
stos
xchg
idiv
mov
mov
mov
leave
mov
cltd
mov
lods
stos
jmp
mov
test
lea
mov
mov
xchg
cmpb
cwtl
lcall
jg
gs
and
sbb
insl
fs
inc
insl
bound
sub
jl
fs
cmp
jae
ja
jle
cmp
inc
push
push
push
inc
push
pop
pop
dec
pop
pop
inc
inc
pop
aaa
push
pop
inc
dec
push
jp
inc
xor
push
or
dec
dec
dec
cmp
ss
push
pop
aaa
xor
sbb
cmp
mov
cmp
popf
test
or
push
add
inc
aaa
push
cmp
dec
dec
pop
push
push
push
and
xor
cmp
dec
xor
push
inc
cmp
pop
dec
inc
inc
dec
js
xor
dec
dec
dec
pop
xor
jg
cmp
inc
imul
js
cmp
inc
inc
inc
dec
cmp
add
push
cmp
push
sbb
dec
push
xor
sbb
pop
pop
aaa
pop
push
push
imul
daa
xor
cmp
cmp
cwtl
lahf
int3
ret
les
mov
ljmp
imul
aaa
add
pusha
movaps
sub
and
daa
and
mov
push
sbb
loope
cmpsl
movsl
mov
stc
aam
fstp
int3
lahf
cmp
rcr
fcmovnu
orl
test
test
rcr
mov
jmp
mov
xor
jecxz
cld
cli
in
out
int
aaa
in
cmc
jmp
out
out
xor
clc
lock
stc
call
out
ljmp
iret
xlat
ror
ret
iret
hlt
in
into
ror
fcmovnb
fmulp
xchg
aaa
in
enter
aad
xor
jecxz
mov
in
cmp
jecxz
ljmp
jecxz
mov
arpl
push
pop
dec
inc
push
dec
pop
push
jbe
push
inc
push
dec
pop
dec
xor
pop
inc
push
dec
aaa
inc
pop
or
push
inc
jge
outsl
jns
dec
dec
push
jne
mov
adc
adc
and
xor
adc
sbb
xor
int
lret
rcl
fxch
repz
into
fld
fmulp
fld
aaa
in
not
rol
fcmovnbe
xor
cwtl
hlt
lret
in
cmp
lock
loope
cli
loop
in
loop
enter
cmc
xor
std
loope
mov
divb
xor
inc
dec
pop
inc
push
gs
push
pop
dec
pop
inc
push
inc
push
cmp
dec
push
dec
pop
inc
dec
xor
pop
dec
jb
mov
outsb
inc
pop
je
jns
sub
mov
mov
mov
mov
sbb
cmp
test
cli
pushl
cli
lods
jmp
cmpsb
nop
imulb
jmp
jmp
popf
cmp
into
enter
ret
mov
lret
xchg
lret
enter
xchg
enter
mov
in
in
stc
cmp
hlt
std
repnz
out
out
cmp
cmc
loopne
xor
test
nop
leave
fcmovnb
mov
adcb
lods
xor
dec
dec
dec
dec
pop
inc
cmp
or
push
push
dec
cmp
push
dec
pop
sbb
xor
pop
pop
pop
insb
ss
sbb
lret
lds
mov
push
dec
aaa
inc
push
or
push
dec
adc
add
enter
stos
movsl
mov
cmp
lret
mov
cmp
icebp
xor
mov
cmp
repz
aad
fildl
mov
xor
call
sbbl
xchg
cltd
mov
mov
fcoms
lock
cmpsb
scas
mov
cwtl
rclb
rcrb
xor
pushf
leave
mov
lret
aam
cmp
aam
fnsave
out
mov
sahf
mov
xor
mov
mov
xor
sar
ja
in
scas
out
stc
in
loopne
cmp
hlt
mov
xchg
cmp
sbb
push
add
or
cmp
xor
pop
xor
inc
dec
cvtpi2ps
push
dec
dec
or
or
add
xlat
ss
addl
mov
lahf
mov
mov
mov
xor
in
jecxz
mov
imul
repnz
mov
mov
mov
in
cmp
fsubrl
lods
mov
xor
jmp
xchg
sahf
aaa
int
mov
into
xor
int3
mov
lret
mov
mov
fstpt
mov
mov
mov
movsb
mov
leave
xor
lcall
xchg
fstpl
fiadds
cltd
cmp
adcl
sub
aaa
xor
xor
ss
xor
jno
jne
outsb
jnp
jae
jns
push
pop
dec
pop
inc
push
inc
push
cmp
dec
dec
dec
inc
pop
pop
xor
outsb
push
insl
fs
je
outsl
inc
jb
data16
je
dec
inc
imul
cmp
dec
popa
jp
push
das
cmp
iret
lock
in
clc
xor
std
clc
in
clc
aaa
jecxz
in
rcr
in
jmp
clc
fadd
idiv
cmp
out
lret
fst
call
cmp
adc
cmp
lahf
xchg
mov
icebp
out
out
jmp
out
repz
std
shll
test
call
lods
jmp
sti
loopne
insb
xor
idiv
loop
icebp
xor
stos
mov
mov
into
xor
ret
mov
mov
loop
test
loope
out
aaa
test
ffreep
fcmovne
rcr
rclb
outsb
xor
jb
cmp
mov
xor
mov
pop
pop
sbb
adc
xlat
mov
cmp
jg
xor
outsl
insb
imul
loope
out
lock
mov
mov
jb
push
imul
cmp
pop
add
or
add
adc
inc
inc
sub
dec
push
jns
aaa
xchg
sarl
ffree
xlat
xchg
aaa
push
cmp
inc
xor
pop
imul
aaa
or
cmp
xor
jns
push
xor
ss
in
xor
cmp
xor
aaa
xor
dec
adc
xor
xor
and
xorl
imul
mov
cmp
xor
in
in
mov
mov
mov
mov
cmp
fnsave
test
jo
and
mov
fnsave
aas
pop
ss
aaa
pop
pop
pop
pop
push
inc
pop
mov
fs
xor
sbb
push
notl
shrb
push
cmp
add
xor
aaa
xor
inc
pop
cmp
inc
dec
fnstenv
push
xor
aaa
adc
sbb
dec
pop
sbb
dec
inc
inc
inc
dec
inc
dec
cmp
cltd
xor
xor
xor
jae
jno
aaa
jg
jne
jns
imul
outsw
insb
addr16
cmp
outsb
outsl
pusha
gs
imul
pop
pop
push
push
pop
cmp
pop
pop
push
push
pop
inc
arpl
cmp
sbb
aad
dec
icebp
aaa
jnp
pop
xor
adc
xor
aaa
inc
fistl
pop
and
push
xor
ds
pop
aaa
dec
sarl
insl
push
xor
xor
jae
or
ss
mov
imul
dec
dec
xor
mov
inc
movsl
sub
sub
roll
xor
xor
xor
inc
pop
dec
dec
aaa
jl
pop
pop
inc
pop
pop
dec
xor
push
imul
xchg
aas
push
xor
aaa
adc
aas
push
jmp
pop
cmp
add
cmp
sub
pusha
pop
xchg
dec
pop
add
pop
mov
xor
xor
inc
pop
dec
push
aaa
pop
dec
pop
push
pop
pop
cmp
inc
push
pop
dec
push
jb
dec
cmp
pop
push
push
push
pop
inc
cmp
pop
push
push
cmp
jae
pop
dec
inc
inc
pop
inc
mov
or
push
push
push
sbb
aaa
adc
cmp
pop
pop
sbb
push
dec
push
dec
inc
aad
sbb
pop
inc
push
sbb
pop
push
dec
sub
aaa
xor
pop
sbb
push
push
xor
push
cmp
out
mov
add
xchg
xor
sub
test
push
xor
push
push
push
sbb
adc
pop
push
pop
inc
test
cmp
push
add
jl
jl
jl
add
or
adc
push
push
push
pop
inc
dec
sbb
popa
sbb
push
push
sbb
popa
add
cmp
pop
push
cmp
add
push
pop
push
cmp
dec
inc
pop
pop
push
cmp
cmp
jbe
inc
push
push
sbb
js
mov
push
push
pop
shll
dec
das
add
xor
cmp
daa
cmp
cmp
aaa
js
cmp
push
sub
jg
outsb
or
pusha
add
push
dec
cmp
xor
xor
adc
xchg
and
stos
add
js
adc
cmp
xor
push
jno
or
xor
dec
add
push
push
pop
push
std
push
inc
aaa
ss
jle
daa
dec
xor
test
js
push
jae
sub
xchg
inc
push
jp
xor
sub
add
or
inc
ss
add
push
pop
pop
xchg
dec
xorl
sub
sbb
inc
xor
cmp
or
cmp
sbb
add
add
aaa
xor
push
dec
shrb
dec
xor
cmpsb
jnp
or
xor
pusha
or
sbb
xor
add
xor
add
and
xor
xor
aas
sbb
xor
pop
mov
cmp
pop
push
dec
dec
or
sti
jnp
inc
pop
pop
sbb
inc
pusha
lds
or
add
or
push
xor
movsb
ja
mov
inc
or
test
jo
aaa
insb
mov
je
inc
and
aaa
addr16
cmp
inc
cmp
jl
and
addl
jno
cmp
test
cmp
xor
int
push
jl
ljmp
rcrb
pop
inc
lret
and
pop
aaa
jl
xor
dec
inc
inc
xchg
jnp
les
pop
dec
dec
xor
je
jns
inc
pop
push
dec
jg
inc
pop
push
jno
jle
jbe
jo
xchg
jge
inc
inc
stos
or
jle
pop
pop
repz
jle
xor
pop
push
push
pop
push
xlat
inc
dec
push
dec
mov
lea
inc
xor
push
inc
jbe
insl
pop
inc
add
push
pop
inc
cmp
push
push
or
xchg
add
jge
xor
jae
pop
cvtps2pd
inc
test
add
outsb
xchg
jbe
push
jne
or
sub
lds
inc
jae
dec
push
push
daa
push
js
inc
ss
pop
pop
inc
push
jnp
push
pop
gs
cmp
jns
pop
cmpsl
xor
push
dec
cmp
aaa
and
and
or
cmp
das
lret
addr16
pop
sbbl
dec
jmp
jl
cmp
pop
mov
cmpsb
outsb
or
xchg
dec
arpl
sub
jo
sub
imul
push
test
inc
jns
lret
movsl
sbb
push
in
dec
sbb
xor
xor
dec
aaa
add
xchg
mov
fs
cmp
movd
jl
bound
pop
jnp
push
mov
push
mov
cmp
mov
aas
xchg
pop
xor
mov
sarb
mov
popa
bound
sti
cmp
xor
mov
inc
aas
or
neg
dec
iret
ss
cmp
enter
mov
aaa
cmp
fcmovu
mov
xor
iret
cmp
mov
mov
lret
xchg
xor
mov
dec
in
mov
cld
clc
push
jo
xor
xor
add
shll
xor
int
test
les
aaa
xor
and
sub
ja
cmp
mov
xor
shll
push
xchg
xchg
cmp
aaa
mov
and
dec
aaa
dec
lds
cwtl
xor
arpl
sbb
jbe
cmp
outsb
imul
xor
out
add
xor
bound
xor
xchg
divl
aaa
icebp
cmp
cmpsb
aas
push
cmp
xchg
dec
cmp
or
testb
enter
and
pop
out
shll
mov
addr16
scas
xor
adc
mov
mov
repz
mov
cmp
and
mov
aaa
xor
fs
or
or
dec
jo
aaa
in
sbb
aaa
xor
push
std
dec
add
inc
cmp
xor
cmp
or
push
add
mov
cmp
cmp
cmp
xor
mov
mov
add
bound
mov
cmp
outsb
push
stc
cmp
mov
and
lret
xor
cmpl
out
fldl
cmp
cmp
add
fsts
mov
dec
das
mov
mov
aas
cmp
insb
cmp
js
aaa
mov
inc
filds
mov
repnz
push
cmp
lods
js
xor
mov
lock
sub
xor
push
dec
sbb
mov
jns
mov
aaa
add
inc
fimuls
xor
push
idivl
cmp
neg
sarl
data16
or
icebp
aaa
sub
mov
xor
or
dec
xor
repz
cmp
fidivs
mov
dec
popa
sbb
jp
mov
mov
sub
setg
cmp
adc
xor
cmp
mov
ss
mov
push
xor
lret
movb
xor
mov
mov
rcl
mov
mov
cmp
aaa
mov
sbb
jns
sub
testl
push
lock
lds
fdivrl
xor
roll
mov
mov
adc
cmp
mov
xchg
xor
xor
insw
cmp
lds
jp
xor
js
xor
jge
aaa
jne
ss
xor
adc
cmp
cmp
xor
cmp
or
bound
bound
push
insb
je
xor
xor
adc
jne
or
mov
jnp
mov
xor
cmp
xor
and
mov
mov
mov
jnp
xor
inc
fidivrs
xor
std
ss
cmc
cmp
pop
fadd
cmp
fisttps
mov
xor
repnz
xor
xor
xor
xor
daa
jnp
lock
push
arpl
je
addr16
cmp
xor
cmp
pop
cmp
cmp
inc
cmp
cmp
cmp
cmp
outsl
shrl
dec
aas
mov
and
imull
and
adc
das
mov
sub
ds
mov
cmp
cs
stc
or
cmp
add
cmp
cmp
cmp
dec
xor
mov
xor
cmp
cmp
cmp
mov
aaa
jg
sbb
fnstcw
imul
popa
mov
push
bound
dec
sub
fs
inc
xor
xor
fisubrl
mov
outsl
popa
ss
xor
imul
xchg
adc
sub
xor
mov
adc
xor
divb
daa
mov
sub
div
mov
mov
adc
xor
stos
dec
push
mov
push
dec
sbb
mov
pop
dec
push
pop
adc
xor
insl
shl
adc
xor
mov
pop
ds
jnp
fildll
inc
or
adcl
add
cmp
xchg
xor
shlb
test
mov
cmp
inc
xor
xor
xor
ds
mov
cmp
gs
lahf
ss
xor
mov
adc
loop
mov
mov
pusha
mov
testb
fld
mov
adc
mov
sub
push
dec
sbb
lock
cmp
xor
sarl
xor
pop
or
adc
jns
aaa
arpl
xor
mov
jp
rorl
cmp
sbb
iret
ss
sbb
cmp
xor
mov
dec
and
jne
mov
xor
aas
cmp
js
dec
leave
into
inc
xor
inc
and
inc
and
mov
mov
xchg
aas
jne
stc
and
sbb
xor
aas
push
and
shll
and
mov
sub
ja
and
cmp
fnsave
xor
xor
mov
sub
mov
ss
push
xor
xor
fstpt
mov
cmp
ss
xchg
cmp
shlb
aad
cmp
cmp
mov
imul
xchg
xor
enter
mov
xor
push
stc
dec
xor
stc
xchg
and
inc
push
jne
cmp
xor
adc
mov
subb
in
pop
cmp
mov
or
cmp
or
aas
mov
dec
int
repnz
and
fwait
adc
cmp
loope
test
leave
mov
jbe
inc
out
push
adcl
fdivs
ds
dec
push
push
gs
inc
pop
sbb
dec
or
cmp
xor
xor
sub
ds
jno
mov
stc
push
mov
stc
add
arpl
aaa
pop
fisttpl
adc
xor
ds
jnp
or
sub
mov
xor
and
adc
dec
or
andps
test
jno
sbb
adc
nop
and
mov
push
cmp
and
mov
aaa
pop
out
mov
aaa
and
shll
jnp
leave
pop
xor
ja
outsb
pusha
enter
nop
cs
mov
push
fistpl
adc
lods
cmp
push
jmp
cmp
mov
xor
jl
lret
int
mov
fs
roll
xor
jg
ja
mov
dec
sarl
xor
das
lret
in
pop
popa
mov
sub
xor
inc
push
pop
xor
in
cmp
fs
cmp
mov
mov
cltd
jb
xlat
push
xlat
outsl
mov
xor
add
ja
dec
adc
sub
mov
xor
ret
xor
cmc
jnp
repnz
sti
addr16
mov
mov
popa
fsubr
or
xor
jne
or
jbe
xor
mov
dec
inc
pop
xor
ss
repnz
jp
aaa
es
stos
mov
xor
xor
popf
fisttps
icebp
xchg
or
cmp
dec
mov
sub
xor
xchg
add
xchg
inc
enter
ret
or
xor
and
mov
je
cmp
push
out
shrl
xchg
outsb
loope
mov
push
out
xor
add
cwtl
das
cld
js
gs
inc
jno
adc
hlt
xor
dec
adc
push
enter
sub
ret
ret
test
addr16
mov
iret
mov
cmp
sbb
mov
xor
jns
ret
xchg
daa
ss
aas
sarl
das
xlat
jo
jl
mov
mov
or
inc
jmp
cltd
sub
xchg
and
bound
fwait
cmp
sub
adc
ret
xor
jns
pcmpgtd
fs
xor
mov
xor
cs
xor
fcomip
dec
pop
popa
mov
cmpsb
es
adc
xor
std
adc
fsubl
add
cmp
sub
cmp
mov
repnz
mov
and
out
arpl
leave
ss
lcall
lcall
and
push
rcll
xor
in
stc
inc
dec
mov
xor
lock
inc
push
mov
cmp
imul
ja
adc
iret
fisttpl
enter
jl
fildl
pop
mov
and
pop
mov
push
imul
push
xor
inc
leave
dec
jecxz
aaa
and
xor
mov
jle
leave
xor
aaa
mov
ret
mov
shrl
inc
aas
fidivrs
sub
cmp
or
ds
jb
pop
out
repnz
dec
leave
flds
pop
cmp
xor
pop
mov
mov
pop
xor
stc
cmp
xorb
aaa
adc
aaa
mov
movsb
mov
fnstenv
ss
xor
inc
mov
dec
sti
cmp
nop
xor
push
lahf
xor
cmp
or
jne
sub
add
daa
jecxz
cmp
or
ljmp
gs
adc
mov
btc
add
mov
mov
xor
popf
inc
xchg
daa
jmp
rclb
out
ss
and
fldz
int3
jp
int
les
clc
mov
dec
scas
sbb
ffreep
xor
pop
xor
mov
cmp
mov
daa
movsl
mov
mov
sti
aaa
mov
dec
das
xor
addr16
jp
sub
inc
cmp
cmp
mov
and
out
cmp
test
mov
sbb
cmpsb
mov
cmp
mov
sub
jns
aaa
inc
gs
mov
jecxz
xor
cmp
daa
cmp
lods
or
cmp
dec
sub
xorb
aas
push
and
mov
cmp
scas
mov
mov
mov
cmp
xor
inc
mov
cmp
repnz
mov
cmp
mov
sarb
cmp
jno
push
cmp
sub
mov
sub
pop
inc
sarb
test
repz
lret
push
mov
push
adc
sub
and
xor
ss
cltd
xor
popa
jl
sub
pop
pop
cmp
lahf
mov
cld
jg
lock
scas
hlt
lret
movsb
and
fidivrl
jno
push
jp
push
mov
shll
aas
mov
rorl
jg
sarl
jb
cmp
cmp
push
cmp
fdivrs
push
mov
adc
ss
xor
repz
fnsave
or
js
inc
xor
imul
jo
jno
adc
xor
xor
and
cmp
cmp
mov
xor
js
dec
mov
mov
leave
mov
sti
sub
sub
sub
or
or
inc
cmpsb
xor
xor
jbe
dec
sbb
pop
rorl
sti
or
inc
mov
stc
jno
insw
shll
shlb
and
mov
add
and
sub
cmp
xor
sub
ss
and
push
cmp
mov
inc
push
out
sbb
mov
and
imul
jbe
push
lock
dec
jae
xor
aaa
mov
shlb
pop
cmc
das
cmp
ss
test
and
shrl
xor
dec
daa
xor
mov
dec
cmp
mov
jo
ja
iret
imul
sarl
jp
sbb
mov
jmp
dec
fldcw
aaa
fnsave
xor
ficomps
adc
push
je
lret
les
xor
xor
cmp
ljmp
pop
sub
outsb
xor
xor
loope
mov
xor
ja
cmp
mov
cmp
aas
shlb
fists
jmp
xor
cmp
dec
sub
inc
cmp
std
rorb
sub
push
mov
adc
cmp
loopne
bound
mov
xlat
data16
add
aas
cmp
insb
mov
daa
stc
imul
xlat
ds
shll
push
push
xor
dec
cmc
add
mov
xorb
cmc
divl
mov
ret
mov
sub
or
inc
leave
cmp
push
cmp
adc
and
xlat
sbb
fstp
test
xor
fldl
enter
xor
int
xchg
aas
lret
and
dec
std
fcomip
dec
sub
add
xor
int3
sbb
bound
aad
push
aad
mov
inc
mov
mov
jge
aaa
or
pop
or
bound
xor
cmp
into
inc
fst
xchg
xor
cmp
cmp
divl
cmp
cmp
cmp
xor
ss
jle
xor
or
xor
aam
cmp
fisttps
mov
inc
cmp
mov
xor
xor
aad
cmp
aaa
pop
aas
bound
aaa
jne
stc
ds
cmp
divl
imul
add
mov
daa
mov
pop
fnstcw
cmp
pop
cmp
xor
cmp
mov
inc
push
pop
and
push
xor
sarl
pop
aaa
xor
cld
int
lret
xor
jb
xor
fbstp
mov
lret
fsts
xor
push
cmp
insl
shrl
pop
aaa
cmp
sahf
cmp
dec
xor
dec
xor
mov
psrlq
xchg
xor
mov
cmp
cltd
mov
daa
mov
insl
mov
xor
push
sti
outsb
add
cld
mov
cmp
xor
mov
ret
inc
fisttpl
or
inc
xor
xor
idivl
mov
mov
sub
fstpt
insb
cmp
cmp
aaa
xor
jbe
xor
mov
mov
lret
mov
jl
lock
cmp
mov
mov
int
push
adc
cmp
xor
cmp
je
or
xor
xor
or
xor
xor
in
mov
xor
gs
mov
jnp
cmp
mov
sub
inc
pop
cmp
push
or
jnp
inc
imul
sub
xor
mov
ss
jo
outsl
xor
mov
sarl
cmp
push
dec
cmc
and
mov
dec
and
inc
lret
jns
inc
cmp
push
sbb
enter
mov
fnstsw
ret
ss
xor
sub
push
sti
xor
fstl
adc
ss
imulb
xor
hlt
imul
and
into
aaa
repz
xor
jo
cmp
fnstsw
xorb
mov
jle
cmp
out
mov
and
mov
mov
cmp
mov
iret
jns
cmp
jle
xor
xor
lret
rorl
dec
daa
fucomip
fidivrs
xor
and
clc
js
mov
xor
push
rorw
leave
mov
cmc
xor
aas
jns
ds
inc
mov
int
dec
gs
cmp
jbe
xor
aas
fnstsw
add
mov
cmp
aaa
and
xor
mov
bound
jae
ds
adc
mov
cld
js
dec
adc
jno
lock
stc
xor
jbe
pop
cmp
out
mov
xor
xor
hlt
dec
dec
sbb
je
or
dec
cmp
push
shlb
or
adc
cmpsl
jle
cmp
shll
mov
shlb
inc
dec
push
and
mov
or
mov
and
push
mov
dec
imul
add
cmc
icebp
mov
repz
or
mov
mov
mov
fbstp
push
stc
pop
mov
xor
cmp
int3
xor
or
das
test
sub
push
rcll
xor
ret
xor
jnp
jno
xor
fwait
xor
mov
lret
aas
jp
in
jnp
addr16
adc
icebp
mov
or
ss
aad
cmp
bound
cmp
mov
lret
inc
out
push
repnz
pop
ss
mov
lock
dec
rcl
xchg
sub
pusha
xor
dec
dec
pop
mov
mov
int
ja
pop
mov
push
jns
fsubs
pop
aaa
outsl
adc
out
adc
stc
add
cld
add
dec
and
cli
sub
xor
cmp
and
xchg
xor
mov
mov
aaa
int
cltd
and
pop
jmp
mov
xor
gs
xor
mov
in
hlt
insl
mov
push
roll
adc
adc
fildl
shlb
rclb
test
cmp
test
sbb
push
sarl
push
into
adc
cmp
stos
mov
sti
mov
sub
out
jp
fldcw
cwtl
jne
mov
test
and
mov
mov
adc
pop
sbb
xor
cmp
xor
jae
mov
adc
push
adc
ret
jmp
dec
push
fnstcw
int
mov
add
and
daa
and
pop
mov
sbb
loope
xor
mov
mov
xchg
jge
popa
cmp
mov
mov
dec
adc
or
ja
mov
insb
push
jne
jne
xor
outsl
data16
xor
movb
xor
arpl
sub
es
mov
shll
flds
je
fnstenv
popa
push
jg
test
xor
sub
aaa
xor
and
lods
push
js
adc
xor
sub
xchg
cmp
out
mov
ds
inc
and
adc
adc
pop
pop
cmp
lock
negb
xchg
cli
cmp
mov
mov
mov
or
das
and
addr16
push
xor
push
xor
or
xor
push
mov
xor
xor
xor
aaa
sub
xor
xor
fsts
daa
xor
sbb
push
mov
and
insl
les
push
aad
pop
xchg
xchg
cmp
adc
or
push
jno
xor
inc
cmp
xor
addr16
icebp
into
fbld
addr16
hlt
sbb
adc
popa
mov
xor
sarl
bound
cwtl
xor
push
ds
mov
pop
xchg
shll
cmp
orb
xor
xor
mov
jae
adc
sbb
mov
push
cmc
dec
fdivl
lcall
aaa
outsl
inc
sti
or
fs
mov
jno
mov
lcall
adc
ss
pop
ss
xor
xor
push
mov
mov
cmp
mov
into
aaa
xor
adc
push
and
outsl
fstl
xor
aaa
lcall
adc
mov
adc
dec
cmp
sub
pop
imul
add
movsl
xor
pop
cmp
cmp
fldl
sub
mov
xor
xor
insl
rcll
loopne
ss
xor
and
sub
push
sbb
jno
jge
popa
cmpl
xor
and
mov
fldl
xchg
ds
xchg
and
xor
push
inc
pop
mov
dec
pop
popa
xor
and
and
pusha
push
cmp
cmp
or
imul
adc
cmp
inc
aas
lret
sub
inc
adc
iret
xor
cmp
xor
dec
cmp
and
xor
inc
xor
inc
or
xor
or
push
mov
les
iret
leave
add
xor
popa
push
mov
dec
cmp
call
test
cmp
add
iret
ss
xor
cmp
leave
xor
bound
les
inc
push
mov
sub
xor
inc
sub
sbb
adc
or
mov
fs
cmp
fidivrs
sbb
adc
jne
std
fldenv
xor
cmp
ss
sub
lret
insb
shll
cmp
out
pop
cmp
fs
push
iret
xor
or
xor
arpl
xor
sub
js
pop
mov
and
stc
jmp
xor
mov
arpl
inc
xor
xlat
xor
pop
into
imul
adc
or
fnstcw
arpl
insl
cmp
adc
and
outsl
adc
lea
popa
fucomp
shlb
push
in
cmp
push
cli
push
push
cmp
xor
xchg
adc
push
and
or
inc
ds
jno
cmp
mov
test
lret
push
cld
xor
test
aad
ss
mov
sub
pop
insb
dec
mov
xor
push
sbb
add
out
mov
ss
jo
and
pop
xchg
cltd
and
lret
and
push
add
push
pop
mov
cmp
mov
ja
insb
push
and
sub
xor
xor
mov
push
fldenv
js
pop
xchg
roll
mov
enter
cmp
xor
leave
xchg
and
push
cmp
push
xor
xor
test
cmpl
pusha
pop
sub
mov
xor
lret
arpl
mov
in
xor
gs
iret
dec
aas
pop
adc
mov
sub
mov
les
and
lds
cmp
push
jnp
cmp
push
int
sarl
shll
and
or
xor
add
gs
xchg
sub
and
mov
pop
icebp
add
cmp
push
xor
aad
sbb
fsubs
idivl
jb
add
movsl
sub
fnstcw
mov
ds
adc
xor
jo
cmp
xor
imul
in
dec
xor
lret
enter
push
xor
mov
xor
mov
idivl
adc
adc
adc
xor
pop
dec
sub
in
ss
adc
mov
ss
jno
adc
ss
loope
repnz
inc
xor
adc
stc
cmp
popa
lea
mov
les
popa
jg
push
out
icebp
cmp
mov
pop
in
push
fstps
mov
mov
add
into
add
std
sub
cmp
dec
cmp
xchg
sub
jbe
aas
dec
jno
mov
or
or
ds
xor
adc
pop
xor
xor
ss
popf
rolb
daa
push
cmp
and
aas
fwait
imul
sub
jb
pop
xchg
sub
cmp
sbb
xor
cmp
or
fs
mov
adc
popw
bound
gs
cs
mov
pop
movsl
cmp
xchg
xor
call
jno
jecxz
jae
mov
loope
xor
cmp
adc
aaa
xlat
leave
xor
inc
dec
mov
mov
xor
in
pop
arpl
iret
mov
stos
mov
fdivl
lret
jl
std
add
cmp
test
aas
mov
xor
adc
mov
aad
sbb
sub
es
inc
outsb
mov
ss
loopne
jp
cltd
or
inc
jno
mov
and
jne
ljmp
pushw
xor
inc
jnp
xor
je,pt
or
or
pop
add
or
jae
aad
and
fcompl
pop
cmp
xor
loope
sub
xor
xlat
addl
fsubs
push
aas
xor
lea
cmp
mov
sbb
lret
lcall
xchg
les
sarl
mov
jns
and
xor
dec
or
pop
fstp
mov
push
and
cmp
xorb
mov
shlb
add
xor
cmp
mov
pop
fstpl
sarb
push
lea
gs
jns
aaa
les
and
testl
and
popa
mov
aaa
xor
cmc
mov
mov
cmp
bound
lret
xor
aaa
push
fs
imull
cmp
popa
pop
cmp
andb
cmp
adc
cmp
mov
inc
adc
test
mov
mov
icebp
xor
xor
lret
adc
xor
cmp
push
or
xor
enter
cmpsl
aaa
imul
mov
aaa
pop
xor
outsb
inc
data16
cmp
aaa
inc
jo
and
cmp
xor
les
cmp
pop
adc
scas
imul
cmp
push
xor
xor
adc
xor
shll
sbb
cmp
or
divl
cmp
lret
test
xor
pop
xor
scas
xor
xor
and
jb
cmp
cmp
and
ds
xor
inc
cmp
cmp
mov
dec
xor
and
xor
jle
cmp
xchg
and
cmp
cmp
lds
and
add
popa
bound
cmp
pop
cmp
je
cmp
sarl
ret
mov
cwtl
fdivrs
xor
mov
and
pusha
pop
cmp
mov
fstl
cmp
jno
lds
lret
xor
outsb
and
mov
cli
jno
mov
mov
sub
ds
mov
aas
mov
cmp
mov
push
mov
fs
lret
mov
sub
dec
xor
lret
mov
std
roll
shll
mov
jb
mov
loope
popa
xor
mov
cmp
and
cmp
sub
iret
ds
fstl
mov
add
aaa
inc
cmp
push
xor
or
dec
xor
lods
jae
leave
add
xor
mov
int
xor
cli
and
cmp
mov
dec
sub
lret
sub
lret
jno
imul
std
and
shlb
xor
dec
stc
cmp
filds
cmp
mov
insb
cld
clc
push
cs
int
xor
pop
xchg
cmp
xor
add
pop
jmp
aas
push
pop
mov
add
sbb
mov
mov
das
mov
mov
xor
mov
cmp
mov
mov
int
mov
cmp
add
rdtsc
enter
mov
dec
iret
bnd
xor
xor
in
stc
xor
and
xor
icebp
push
xor
dec
mov
lret
and
mov
cmc
aas
outsb
xor
add
cmc
cmp
aas
mov
and
lds
dec
sarl
mov
cmp
std
enter
into
inc
lds
and
push
aas
mov
ja
iret
mov
aas
xor
cmp
cmp
jl
leave
jl
cmp
xchg
push
and
xor
xlat
cmp
mov
das
fwait
sub
cmp
int
inc
xor
imul
icebp
cmp
stc
xor
and
push
ds
pop
xor
divb
cwtl
xor
xchg
aas
enter
jmp
xor
xchg
aas
jmp
mov
cmp
mov
std
inc
add
cmp
xor
ss
push
frstor
xor
ss
popa
popa
mov
fnstsw
add
ss
cltd
mov
shlb
lock
sbb
shlb
sarl
adc
fstpt
aad
pop
ds
cmp
shl
pop
xor
aad
je
mov
mov
sbb
pop
inc
cmc
and
fptan
fnstsw
jmp
fld1
ficomps
mov
adc
into
aaa
jo
mov
push
jle
inc
cmp
push
pop
fidivl
cmp
mov
fsts
ss
xor
mov
mov
lret
mov
ficoms
movsl
cmp
mov
sub
xor
mov
xor
cmp
xor
jnp
jns
sbb
aaa
cmp
jmp
jmp
xlat
xor
cmpsb
sarl
push
xor
mov
arpl
iret
cmp
cmp
jmp
adc
mov
aaa
xor
dec
or
dec
sub
int
xor
je
fidivrs
mov
aaa
adc
imul
push
and
mov
dec
adc
js
mov
divl
mov
cmp
lock
cmp
xor
cmp
xor
popa
pop
cmp
pop
cmp
aaa
cmp
fidivrl
xor
mov
aaa
mov
lret
xor
jne
adc
xor
mov
cmp
cmc
adc
cmp
inc
sub
inc
mov
mov
inc
xor
dec
push
cmp
aas
cmp
dec
ss
test
rclb
xor
push
add
inc
cmp
out
mov
sub
cmp
enter
aaa
mov
xor
mov
and
mov
inc
pop
sarl
arpl
or
xor
jmp
sti
sar
mov
mov
daa
xchg
inc
cmp
out
or
roll
pop
cmpsl
je
mov
xor
inc
cmp
testb
stc
cmp
fstps
cmp
xor
jb
jnp
adc
mov
insb
and
jp
xor
ds
xor
jle
or
dec
adc
inc
add
xor
xor
js
ss
cmp
cmc
inc
cmp
cmp
mov
lret
adc
mov
mov
divl
insb
xor
and
jnp
fs
popa
xchg
xchg
cmp
mov
aas
mov
dec
sub
pusha
addr16
jle
inc
and
jmp
jmp
xor
lret
add
insb
mov
mov
aaa
cmp
in
sbb
mov
mov
addl
loope
lds
cmp
into
add
push
jb
mov
and
adc
movsl
cmp
dec
dec
mov
xchg
pop
aas
and
enter
xor
jmp
mov
pop
aad
push
lds
bound
ss
test
fstps
negl
cmp
add
dec
sub
arpl
mov
xchg
cmp
sbb
sbb
mov
sti
mov
sub
cmp
fnstsw
dec
cmp
inc
xor
je
xor
xor
mov
cmp
frstor
insl
push
mov
cmp
out
push
xor
stos
push
jno
mov
stos
cmp
ss
aas
out
rorl
push
and
mov
aas
dec
push
and
lea
cmp
cmp
cmp
jmp
divl
mov
inc
jge
and
je
daa
push
xor
xor
cmp
or
std
add
mov
insb
int3
ficoms
dec
cmp
adc
frndint
lcall
jbe
idivb
test
mov
out
or
or
aas
dec
sbb
adc
mov
cmp
ja
mov
xor
cmp
aas
arpl
ror
loopne
cmp
xor
fisubrs
xor
and
stc
aas
cmp
inc
push
rcrl
xchg
xor
push
aaa
mov
add
inc
xchg
stc
mov
ds
loopne
int
cmp
jp
xor
push
inc
add
and
xor
mov
add
xor
iret
je
cmc
dec
xor
mov
jmp
adc
std
aas
icebp
fidivs
movb
test
xor
lahf
xor
fptan
cld
cs
xor
cltd
xor
ds
mov
movsl
xor
inc
imul
cmp
xor
cmp
pop
pop
scas
xlat
cmp
xor
mov
insl
test
movsb
jne
sub
mov
xor
pop
sarl
mov
arpl
gs
inc
cmp
sub
aaa
stc
or
out
inc
cmp
inc
push
outsb
into
inc
xor
pop
nop
add
int
daa
and
lock
jno
daa
lret
cmc
xor
cmp
mov
and
xor
inc
pop
repz
push
sbb
insb
adc
les
inc
das
lret
into
inc
and
daa
and
xor
sbb
push
cmp
pop
sub
cmp
je
sub
mov
mov
icebp
js
push
push
push
fcomp
xlat
lods
mov
or
movsl
cmp
mov
aaa
fstl
xor
cmpsb
add
push
jle
inc
xchg
adc
loopne
mov
outsl
pop
mov
fnsave
imul
dec
loopne
xchg
inc
cmp
cmp
into
and
test
cmp
test
mov
cmp
movsb
xchg
rdtsc
or
icebp
faddl
arpl
cmp
jecxz
cmp
lea
pop
sarl
xor
lret
xor
and
sub
mov
cmp
les
into
and
cmp
out
cmp
xor
sti
cmp
cli
fs
iret
mov
sbb
bound
into
and
lret
xor
lret
pop
pop
jbe
mov
mov
sub
ret
sub
fidivrs
mov
adc
xor
cmovle
dec
adc
lds
inc
sbb
mov
ds
popa
xor
cmp
imul
lret
add
das
mov
adc
into
loopne
push
cmp
ss
adc
out
int
dec
cwtl
aaa
push
repnz
stc
and
fisubs
mov
mov
aaa
xor
inc
xor
mov
xor
cmp
mov
mov
cmp
mov
cs
pop
xor
aaa
daa
ret
mov
or
cmp
mov
lret
nop
sbb
cmp
fsin
adc
xor
jo
cmp
mov
inc
mov
int
lds
inc
js
cmpsl
aaa
jecxz
mov
cmp
sub
idivb
mov
cmp
dec
mov
mov
es
pop
cmp
mov
rcr
int3
enter
icebp
inc
push
mov
and
pop
sub
mov
rorl
loop
xor
std
out
sub
xor
imul
out
dec
and
mov
mov
dec
sub
pop
xor
xor
mov
cmp
jno
mov
jns
add
gs
aad
xor
pop
cmp
jle
sub
je
ss
cmp
divl
mov
outsb
imul
xor
leave
mov
jno
insb
xor
mov
xor
mov
adc
and
ja
ss
jne
stc
ss
mov
hlt
es
xor
mov
mov
jbe
sub
mov
bound
inc
and
jns
mov
jno
mov
cs
clc
sub
xor
and
xor
cmp
shl
bound
cmp
sub
adc
and
hlt
xor
popa
fisttps
or
jno
push
mov
insb
xor
or
ja
or
cmp
std
enter
je
mov
pop
add
mov
cmp
jo
movb
pop
xor
mov
inc
add
outsb
mov
inc
xor
xor
adc
cmp
pop
loopne
xor
and
mov
inc
sbb
into
inc
leave
rcrl
icebp
and
sub
xor
and
cmp
cmp
cmc
and
in
sti
xor
inc
movb
divl
cmp
jp
js
repnz
mov
cmp
mov
xor
sbb
or
push
or
dec
xor
addr16
lahf
adc
ja
sti
sub
or
xor
testb
icebp
jae
mov
push
insb
add
jae
mov
cmp
je
mov
push
sbb
cli
and
or
dec
inc
data16
insl
js
jno
add
inc
pop
xchg
push
sub
fnstsw
pop
sub
out
mov
cmp
jno
cmp
xor
jns
push
cmp
pusha
outsb
pop
cmp
push
xor
xor
je
xor
test
dec
xchg
xor
stos
rol
clc
xor
or
push
jp
sub
jb
mov
cmp
data16
aaa
push
hlt
cmp
xor
cmc
cmp
es
inc
rcrb
or
sub
xor
pusha
popa
rorl
xor
adc
xor
aam
cmc
cmp
daa
divb
outsb
fnstenv
mov
pop
ss
jne
into
hlt
pop
cmp
dec
outsb
jns
xchg
xor
xor
ja
leave
into
fidivs
cmp
mov
mov
mov
aaa
pop
loopne
mov
cmp
mov
pop
pop
jns
insb
or
ds
sti
cmp
fnstenv
aas
cmp
loopne
insl
and
and
and
sub
push
jno
pop
add
inc
jge
imul
jge
cmp
mov
ss
sub
xor
frstor
pop
sub
xchg
cmp
xchg
aaa
das
mov
sub
lcall
das
push
cmp
adc
roll
xor
mov
xor
stc
je
sti
insb
push
adc
jne
cmp
sub
and
and
not
jbe
dec
fnstcw
or
ds
xor
outsl
mov
daa
inc
jno
cli
cmp
enterw
xchg
xchg
pop
les
pop
jns
mov
lret
mov
insb
shl
pop
mov
cmp
lock
xor
sbb
push
push
aas
aaa
dec
xor
jb
mov
inc
xor
filds
or
xor
push
aas
add
mov
pop
jbe
mov
push
cmp
pop
push
or
imul
aas
mov
mov
or
imul
cmp
pop
popaw
mov
push
xor
imul
mov
push
loopne
sub
cli
xchg
pop
jle
mov
jo
cmp
adc
push
xchg
sub
jnp
mov
jae
mov
cmp
in
insb
sar
sti
mov
dec
leave
std
fnstenv
popa
cltd
xor
pop
mov
xor
mov
push
or
fisttpll
sub
push
cmp
fbstp
pop
sbb
cmp
insl
sarl
lret
pop
cmp
xchg
xor
sub
data16
cmp
inc
daa
test
shrl
mov
lret
or
inc
pop
roll
stos
arpl
push
push
jo
inc
imul
pop
add
jbe
pop
movsl
adc
cmp
or
sbb
cmp
add
xor
jp
mov
mov
mov
mov
divl
sbb
inc
aaa
sti
xor
xor
mov
adc
cmp
push
ss
pop
add
sub
fxch
add
cmp
push
popf
sbb
mov
mov
sbb
add
jecxz
add
jne
inc
popa
fbstp
push
fdivrs
cmp
mov
aas
mov
adc
push
ljmp
add
or
incl
xor
rclb
lock
jns
fnstenv
cmp
mov
pop
inc
pusha
sbb
jo
xor
sti
jno
or
add
dec
pop
and
xchg
xor
and
cmp
xchg
xor
xor
sbb
jns
inc
shll
cmp
cmp
into
xor
dec
outsl
xchg
xlat
popa
addr16
xor
pop
dec
inc
cmp
xor
in
pop
inc
aaa
adc
pop
adc
xor
bound
fnsave
sbb
xchg
sti
scas
mov
fnstenv
aaa
and
inc
xor
nop
in
cmp
fidivrl
push
cmp
leave
ds
mov
add
inc
jge
shlb
mov
cmp
ss
jge
sbb
cmp
xor
mov
mov
mov
mov
jge
dec
ss
das
rcrb
xor
mov
mov
adc
fldln2
sarb
mov
aad
cmp
dec
adc
sarl
or
mov
and
out
fisubrl
pop
cmp
cmp
ss
fistpl
ss
inc
flds
aaa
cmc
or
int
xchg
pop
jnp
jb
insl
enter
pop
jae
nop
jbe
dec
sbb
adc
lret
xor
add
ror
movsb
push
ss
xorb
sbb
cmp
scas
lods
iret
push
mov
shl
aaa
xor
ja
cmp
sub
fldl
ds
imul
dec
add
mov
cmp
test
jp
mov
outsl
pop
xor
sti
and
jne
jg
imul
sub
rcll
sbb
or
mov
imul
ss
push
push
es
dec
pop
cmpl
aaa
fs
enter
lret
jge
pop
xor
cmp
mov
xor
dec
cmp
pop
sbbl
cmp
and
aad
jmp
imul
dec
cmp
xor
push
and
sub
sub
popf
and
mov
mov
xor
jp
jns
xor
ss
outsl
das
push
sti
pop
cmp
mov
cmp
ds
test
aas
movb
cltd
loope
xor
rolb
ficomps
mov
outsl
sub
sub
jmp
cmp
mov
data16
push
cmp
aaa
cmp
iret
pop
jmp
and
outsb
rorl
in
push
mov
pop
into
mov
cmp
mov
sbb
jns
mov
iret
sbb
fnstenv
xor
sti
shlb
maxps
popa
subl
and
in
rol
divb
cltd
sbb
jle
popa
adc
sarb
divb
cmp
adc
imul
push
mov
dec
xor
xchg
and
push
int
mov
inc
pusha
or
mov
lret
add
jp
push
sub
lock
dec
or
inc
shll
mov
notl
push
jg
lds
jns
and
frstor
mov
pusha
arpl
aas
ja
and
jp
stc
cs
fstpt
aam
sbb
addr16
cmp
daa
inc
or
cmp
loopne
xor
mov
xor
xor
lods
mov
jne
xor
dec
leave
cmp
ficoms
aaa
iret
sbbl
inc
lds
mov
cmpsl
mov
jo
mov
int
repnz
mov
cmp
xor
outsb
leave
xor
or
dec
cmp
enter
xor
ds
xor
fnstenv
mov
xor
lret
xor
mov
sub
add
pop
cmc
cmp
and
push
movsl
push
pop
hlt
inc
gs
push
and
jnp
fnstcw
mov
pusha
mov
cmpsb
cmp
add
jnp
mov
or
ds
fnstcw
imul
leave
add
mov
inc
mov
cmp
dec
sub
jo
cmp
cmp
enter
inc
rcr
xor
cmp
rolb
les
dec
lret
mov
xor
jl
es
mov
addr16
or
fnstsw
mov
pushf
mov
cmpsl
mov
and
xchg
scas
icebp
mov
neg
sub
jb
rorl
fdivrs
mov
fdivs
push
cmp
xchg
cmp
sbb
sbb
filds
lret
and
into
xor
mov
sbb
out
fisubs
lock
es
and
push
das
inc
xor
je
cmc
sbb
cmp
cmp
add
fiadds
cmp
ret
icebp
cmp
xor
inc
int
inc
sub
jns
mov
lret
cmp
cmp
jg
jle
ds
cwtd
ds
daa
pop
ds
cmp
cmp
mov
push
inc
jno
inc
and
xor
aaa
mov
push
test
xor
sub
sarb
pop
ss
mov
sbb
jp
cmp
add
xor
xor
inc
pop
sub
aaa
dec
sarb
inc
cmp
and
sub
push
mov
adc
mov
cmp
aaa
sar
xor
lret
jge
sub
int
mov
mov
cmp
and
xor
xor
mov
mov
dec
ss
cmp
aaa
cmp
roll
lret
bswap
inc
adc
shll
fsincos
cmp
ss
xor
sub
jns
cmp
add
rcrl
xor
enter
sbb
cmp
xchg
aaa
push
cmp
loop
mov
dec
popa
or
inc
outsl
cmp
jge
rorl
xor
adc
mov
and
mov
cmp
mov
jno
cmp
xor
inc
pop
adc
or
jne
mov
loopne
aaa
mov
add
es
xor
mov
jl
mov
cmp
fistps
mov
mov
fldln2
push
cmp
pusha
mov
lret
into
cmpsl
inc
xor
cmp
xor
mov
sbb
cmp
xchg
shlb
xor
adc
mov
xor
xor
push
cmp
jno
lock
cmp
mov
fldt
mov
mov
or
cmp
andb
stc
push
xor
xor
ds
testl
push
mov
mov
idivl
mov
pusha
aaa
data16
mov
add
add
cmp
sti
mov
add
add
add
je
pop
sti
ss
or
add
cmp
xor
inc
aad
ljmp
sub
mov
insb
cmp
ds
add
xor
shll
and
cmp
xchg
hlt
fldt
cmp
cmp
sub
jno
mov
sbb
icebp
xor
lea
sub
xorl
xor
push
xor
ds
and
xchg
add
vmread
dec
aas
mov
xor
movsb
idivb
mov
xor
cmp
inc
leave
insb
imul
xor
xor
cs
into
jmp
dec
cmp
mov
sub
xor
mov
xor
shll
mov
jl
sbb
aaa
cli
sub
aaa
pop
sti
pushw
divl
cmp
ja
mov
push
insb
xchg
cmp
inc
xor
notb
sti
xor
xor
xor
mov
and
aaa
dec
xor
pop
cmp
cmp
jo
imul
mov
mov
shll
mov
lret
xor
mov
cmp
push
in
jb
xor
inc
iret
je
arpl
ss
xor
xorl
and
mov
pop
sarl
cmp
xor
xor
ffreep
sti
cmp
mov
les
xor
insl
push
icebp
or
cmp
clc
divl
or
test
push
xor
or
fldenv
daa
roll
aaa
xor
pop
aaa
xor
and
sub
xor
cmp
shlb
mov
and
aaa
cmp
ror
ja
jnp
xor
mull
mov
or
or
push
or
outsb
xor
dec
push
mov
and
sbb
das
mov
sbb
cmp
cmp
adc
adc
xor
mov
cmp
clc
jnp
pop
and
sbb
aas
inc
sub
aaa
pop
cmp
add
push
push
push
fstpl
xor
addr16
fucomp
jns
mov
pop
hlt
cmp
mov
xor
xchg
jns
mov
aaa
inc
aas
or
faddl
mov
dec
xor
mov
xor
lods
jns
xor
jl
mov
and
sarl
aaa
mov
es
adc
cld
cwtl
xor
xor
icebp
jo
cmp
dec
data16
pop
insl
jle
xchg
mov
mov
rcl
or
xor
xor
cmp
or
jo
dec
and
cmp
xor
mov
outsb
pop
adc
lods
or
aad
lret
fsubrs
fnstcw
mov
addr16
icebp
jns
ja
rcrl
add
negl
xor
rcll
int
fists
push
pop
aaa
iret
mov
push
loope
cmp
mov
shll
mov
cmp
cwtl
xor
insl
jnp
inc
ret
mov
aas
mov
icebp
mov
dec
lds
out
cmp
xor
push
mov
sub
lds
jnp
or
inc
add
xor
cmp
jmp
cmp
es
push
xchg
xor
out
data16
bound
adc
fnstcw
addr16
shll
aas
cmp
xor
outsb
jns
adc
aad
iret
mov
jl
cmp
in
sbb
pop
xor
xor
rcll
shll
lods
mov
lret
mov
sbb
mov
mov
int3
cmp
into
mov
xor
adc
addr16
gs
loop
xor
push
and
mov
cmp
xchg
std
rorl
loope
cmp
xor
sub
cmp
cmp
cmp
jbe
xor
adc
pushf
jb
fldenv
adc
lret
fistpll
push
xor
inc
je
dec
push
and
jg
icebp
cmp
jbe
cmp
pop
pop
cmp
imul
jle
push
cmp
xor
cmpl
mov
cmp
mov
cmp
cmp
mov
mov
outsb
mov
and
jno
sub
repz
aad
mov
adc
je
xor
cmp
ljmp
xor
cmp
xor
cmp
cwtl
xlat
add
xor
add
clc
sbb
inc
adc
cmp
mov
mov
cmp
dec
xor
ds
pop
lret
push
int3
mov
rcrl
aaa
imull
adc
jmp
cmp
das
push
in
inc
sub
testl
cmpsl
test
cli
xchg
lods
lock
add
call
jge
push
jl
xor
fildll
inc
sub
divb
or
sbb
xor
sub
inc
jnp
push
aaa
and
sub
inc
imul
adc
inc
pop
mov
fs
adc
enter
dec
sub
or
imul
adc
sti
and
jb
stos
cmp
pop
gs
sbb
imul
mulb
cmp
pop
fnstsw
in
ss
jecxz
dec
ds
xor
stc
add
jne
sti
cmp
mov
mov
xor
inc
cmp
imul
cmpsl
and
cmp
mov
stos
es
and
cmp
shr
sbb
mov
xlat
xor
push
insl
mov
imul
ljmp
adc
mov
push
in
sti
push
ds
lods
pop
or
push
es
cmp
lret
push
cmp
jge
rorl
pop
aas
inc
or
ljmp
push
mov
negl
pop
leave
and
or
dec
xor
fidivrl
or
and
stos
repnz
xor
mov
lret
adc
sub
xor
cmp
xor
cs
aas
fdivrs
ficoml
pop
mov
jne
sub
dec
daa
xchg
sti
cs
push
and
shlb
sub
add
xchg
popf
out
dec
shrb
or
mov
and
xchg
jnp
sbb
sub
aam
cmp
xor
icebp
daa
adc
or
mov
cs
es
xor
fucom
jns
cld
sub
cmp
icebp
shl
jno
shr
popa
aaa
daa
test
std
mov
jns
inc
and
and
jae
cli
adc
mov
push
nop
pop
cmp
pop
xor
jne
dec
aaa
ret
repnz
mov
and
or
test
shll
es
test
shrl
aad
sub
xor
push
cmp
rcll
sub
push
aas
push
into
xor
cli
shlb
addr16
sub
shlb
repnz
fucomip
nop
adc
cmp
and
xor
sub
pop
cmp
lahf
addr16
cmp
dec
aaa
xchg
sub
cmp
mov
inc
xor
xchg
daa
rcl
jnp
out
sub
inc
mov
and
xchg
dec
cmpsl
mov
and
aas
mov
and
jle
mov
sarl
cmp
mulb
jle
out
push
insb
xchg
dec
mov
std
jno
mov
pusha
iret
mov
or
xor
mov
cmp
mov
mov
je
iret
cmpsl
ds
mov
daa
mov
rclb
mov
aaa
inc
cmp
xor
sbb
addr16
or
shll
mov
xor
dec
mov
lock
or
mov
cmpsb
xchg
cmp
xor
inc
shrb
pusha
popa
bound
int
clc
or
aas
dec
sub
mov
cmp
inc
pop
mov
xor
and
fdivs
push
cmp
xor
arpl
cmp
and
add
xchg
inc
jg
dec
int
adc
aaa
mov
xor
adc
shll
xor
sub
jecxz
je
mov
mov
jmp
or
aaa
cmp
add
xor
shll
mov
mov
outsb
dec
xor
cmpsl
adc
cmp
js
aaa
rolb
cwtl
sarb
push
xor
xchg
test
fisttpl
xor
mov
lcall
pop
pushf
stos
cmp
mov
fwait
mov
aaa
lods
stos
cmp
and
cmp
cmp
bound
stos
cmp
mov
leave
cmpsb
xor
lahf
jns
xor
cmp
mov
fwait
pop
movsb
cmp
aaa
or
xor
or
xor
pop
stos
cmp
xor
cmpsb
xor
xor
xor
movsb
cmp
test
sbb
cmpsb
xor
xor
aaa
lods
stos
cmp
popa
jbe
aas
loopne
sub
xor
insb
mov
or
jg
stos
cmp
cmpsb
xor
movsb
cmp
cmpsb
xor
movsb
cmp
mov
xor
movsb
cmp
cmp
mov
loopne
std
stos
cmp
movsb
cmp
mov
mov
xor
movsb
cmp
ret
jno,pt
xor
loopne,pt
cmp
xor
xor
xor
mov
xchg
aaa
adc
xchg
leave
xor
ret
lret
cmp
cmpsb
xor
movsb
cmp
xor
mov
lds
imul
push
add
sbb
mov
sub
add
sbb
sub
jns
in
jecxz
or
xchg
add
xor
aaa
pop
pop
dec
jno
bound
cmp
out
jno
stc
jae
aaa
pop
push
xor
xchg
xor
mov
mov
inc
sub
push
dec
jo
jne
dec
add
mov
xor
jge
xorl
repnz
imulb
fnsave
fs
and
xor
insl
outsb
or
xor
mov
xor
cmp
ss
xor
mov
mov
cmp
xor
mov
xor
cmp
add
mov
mov
sub
mov
cmp
mov
dec
pop
aaa
push
repnz
lret
mov
jo
dec
outsl
mov
xor
pop
popa
inc
cs
lock
sbb
sub
sub
mov
dec
push
jno
shr
xor
jnp
sbb
or
pushl
fiadds
jnp
insb
aas
getsec
and
sbb
fidivrs
or
enter
xor
cmp
cmp
xor
push
int
iret
aaa
inc
or
out
inc
sbb
dec
and
cmp
cmp
adc
dec
es
mov
mov
xor
mov
fbld
into
aaa
or
jg
or
dec
fadds
imull
sbb
rol
aaa
mov
aad
sub
outsb
mov
cmp
cmp
iret
ds
cmp
or
mov
cmp
dec
mov
aas
mov
sarl
adc
mov
into
xor
pusha
iret
mov
lret
fidivrs
cmp
sub
xor
xor
inc
mov
push
les
sbb
cmp
aas
mov
ja
xor
sbb
mov
adc
xor
cmp
xor
and
xor
inc
cmp
cmp
mov
cmp
loope
push
int
mov
fbstp
mov
jo
dec
pop
mov
inc
das
les
mov
iret
push
inc
aad
cmp
es
cmp
cmp
or
mov
jno,pt
in
ss
push
jmp
out
inc
aas
mov
leave
push
cmc
push
mov
sub
xor
jae
jmp
xor
leave
mov
into
pop
jo
mov
int
push
jno
mov
cmp
cmp
leave
mov
insl
pcmpgtw
mov
pop
lds
pop
mov
xor
or
aaa
int
pop
mov
xor
les
mov
iret
push
repz
data16
mov
and
inc
mov
cmp
jns
aaa
divb
cmp
jae
jne
daa
add
arpl
and
mov
inc
cmp
mov
shrl
fidivrs
or
cmc
xor
mov
jg
jnp
inc
ss
or
in
push
les
xor
mov
dec
xor
xor
ljmp
and
cmp
adc
inc
sti
cmp
mov
dec
cmc
push
in
imul
mov
mov
aad
aas
xor
xor
mov
sbb
aaa
xor
lret
xor
mov
sarl
int3
mov
lret
mov
push
rorl
and
sbb
mov
aas
sub
mov
gs
adc
push
sub
mov
inc
cmp
fs
xor
xor
push
push
jno,pt
push
xor
and
mov
xor
js
push
inc
sub
cmp
cmp
ds
cmp
aas
jo
sub
mulb
jo
inc
into
fnstenv
add
add
inc
inc
sub
jp
jb
sbb
xchg
inc
dec
adc
mov
icebp
mov
cmp
and
xor
pushl
cmp
xor
fstpt
sbb
xor
insb
jne
repnz
cmp
xor
cli
cmp
cli
xor
mov
cmp
into
enter
jno
adc
psubq
pop
mov
aad
mov
mov
enter
or
cmp
xor
cmp
mov
sub
cmp
dec
sarl
mov
jge
das
mov
ret
cmp
jns
push
sub
ret
xor
inc
xlat
stc
add
mov
jne
jns
dec
lds
push
xor
cmpsb
sti
xor
xchg
mov
mov
dec
mov
dec
push
xor
inc
in
filds
cmp
mov
mov
fcomip
or
loopne
dec
xor
icebp
je
jno
scas
mov
mov
mov
idivb
mov
sub
xor
sbb
adc
ss
and
icebp
cmp
cwtl
and
xor
rorb
or
or
rorl
jno
and
fcoms
inc
es
xor
cmp
adc
add
xor
fldt
mov
aad
cmp
and
xchg
neg
cltd
arpl
jnp
jle
xchg
pop
into
sbb
jae
xchg
ds
xor
dec
sti
or
xor
cmp
rclb
push
fcomps
xor
pop
xor
pop
adc
push
scas
fisttpll
cmp
mov
mov
das
mov
push
xlat
xor
and
shll
jmp
cmp
mov
xor
sarb
sbb
cmp
cmp
jb
cmp
sbb
hlt
out
inc
jmp
es
ret
aas
cmp
fwait
adcl
sbb
cmp
adc
xor
cmp
fldcw
xchg
shll
jp
jle,pn
and
js
sub
enter
fistl
xor
imul
inc
std
xchg
aaa
cmp
sub
mov
sub
mov
mov
xor
ja
std
cmp
and
cmp
ds
sub
xor
jb
xor
xor
pop
aaa
inc
add
mov
mov
jns
cli
fdivs
xor
and
cmpl
aas
aaa
mov
lds
jle
rcll
ficompl
jae
lahf
fnstcw
mov
mov
pop
repz
rol
into
xchg
cmp
cmp
xor
int3
xor
ja
pop
mov
ret
sub
jl
fimuls
mov
jp
rclb
mov
pop
mov
mov
sub
xor
daa
mov
lea
fidivs
mov
neg
xor
inc
jl
ss
mov
aas
mov
pop
dec
fwait
push
cli
xor
ja
leave
insb
add
ret
int
xor
pusha
or
cmp
xor
add
xor
add
int
sbb
popa
outsl
mov
adc
sbb
ds
jns
mov
mov
aaa
lods
mov
icebp
cmp
int
cmp
cmp
adc
adc
cmp
push
mov
insl
scas
cmp
jnp
cmp
xchg
jg
xor
add
push
mov
mov
mov
movsb
xor
xor
cmp
xor
fmul
lret
mov
into
popf
pusha
dec
xor
pop
xor
add
xor
add
iret
out
or
xor
sub
add
aaa
mov
cmp
mov
xchg
ret
jle
and
mov
mov
inc
aaa
je
mov
cmp
daa
les
and
repz
fsub
add
in
cmp
fistl
mov
adc
mov
xor
repz
xor
aad
icebp
pop
add
shll
fldpi
and
ss
inc
test
lea
add
aas
shll
lea
cmp
cs
sub
xchg
xor
cmp
cmp
cmp
popa
shlb
cmp
xor
cmp
divl
xchg
jle
sarl
jo
sub
cmp
xor
imul
xor
inc
ss
mov
cmp
add
fildl
andl
inc
push
xor
fwait
mov
xor
xor
cmp
int
movsl
divb
jo
imul
jl
mov
aad
mov
push
insl
add
xor
adc
xor
gs
outsl
push
or
sarb
jg
cmpsl
cmp
xor
add
hlt
inc
leave
cmp
test
xor
mov
xor
push
cmp
ds
je
jnp
imul
jge
cmp
push
pop
pop
cmp
inc
jmp
fdivl
shlb
add
pop
aas
popa
mov
cmp
cmp
ss
movsl
stos
cmp
jb
cmp
aaa
imul
inc
cld
jl
mov
bnd
and
mov
hlt
jno
xor
or
jns
cmp
mov
cmpl
cmp
push
inc
daa
popa
and
xchg
pushf
cmp
mov
xor
sub
mov
cmp
cltd
jle
shlb
xor
cmp
leave
xor
ds
mull
popf
sub
fstp
add
out
xor
mov
mov
data16
xor
stc
enter
ret
std
jl
xor
shrb
add
or
clc
dec
and
xor
jge
mov
inc
es
ja
sbb
vmaskmovdqu
leave
idivl
in
xor
inc
sti
cmp
ss
adc
inc
and
frstor
inc
xor
cmp
fdivl
inc
jecxz
imul
in
xor
jns
cmp
jl
daa
fnstsw
sahf
xchg
jl
cs
xor
pop
mov
ja
jbe
rcll
mov
push
aaa
sti
cmp
stos
cli
cmp
cmc
ss
stc
and
inc
stos
xchg
xor
xor
in
ret
push
sub
decl
js
out
divb
mov
das
cmp
jmp
mov
mov
mov
je
mov
orl
add
inc
push
xor
jne
mov
fwait
test
sub
dec
bound
cmp
add
and
inc
cmp
jno
jge
aaa
mov
subb
xor
pop
aam
aas
xlat
mov
sbb
jne
or
mov
xor
nop
dec
or
enter
shrb
ss
xchg
out
jnp
inc
xlat
arpl
cwtl
jno
mov
rcll
cmp
sbb
loope
loope
mov
push
out
mov
lds
sti
push
subb
daa
imul
ja
adc
je
cmp
das
popa
push
sub
add
movsl
aaa
fldt
sub
daa
les
cmp
mov
mov
sub
xor
aad
sub
and
pusha
leave
mov
ret
inc
jns
ja
lds
ds
dec
cmpl
mov
shll
cmp
pop
add
ja
and
jl
mov
cmp
or
jne
mov
mov
es
mov
out
add
sahf
aas
xor
cli
xchg
cmp
divb
jg
mov
mov
scas
xor
fnstenv
cmp
xor
data16
sbb
popa
fbld
sahf
cmp
aaa
cmp
mov
jae
inc
or
fwait
xor
cmp
mov
outsl
push
mov
xor
sub
mov
xor
je
sub
pop
xor
push
and
cmp
aaa
and
xor
mov
xor
mov
les
push
aaa
cmp
mov
mov
into
data16
cmp
icebp
mov
cmp
cmp
cmc
cmp
mov
mov
and
and
xor
cmc
xor
adc
jecxz
ret
mov
loope
push
std
dec
and
xor
xor
addl
xor
cmp
inc
ret
lret
cmp
mov
aaa
dec
out
int
cmp
jg
push
jl
sbb
call
mov
test
xor
dec
xor
cmp
xor
inc
jmp
into
and
cmp
ficompl
mov
test
mov
dec
lahf
xor
dec
mov
cmp
xor
outsb
pop
mov
or
jnp
xor
sbb
cmp
mov
push
xor
test
add
mov
stc
mov
je
fnstsw
push
fnsave
xor
adc
fs
mov
scas
stc
jns
mov
xor
jl
jecxz
data16
dec
sbb
push
or
leave
inc
sub
dec
cmp
xor
jl
pop
xor
ss
into
inc
frstor
and
xor
mov
xor
xor
shrl
sarb
cmp
inc
jecxz
mov
fnsave
add
add
cmp
jmp
xor
pop
popa
jne
and
jno
push
jnp
dec
cmp
mov
inc
inc
push
repnz
mov
xor
xor
lock
jne
mov
clc
sbb
cmp
mov
cltd
aaa
mov
aaa
dec
js
jns
cmp
mov
ja
sub
aaa
mov
xor
mov
adc
lret
push
push
mov
les
cmc
mov
cmp
popa
daa
les
add
cmp
ja
mov
flds
jp
movsb
daa
hlt
mov
adc
add
clc
xor
mov
js
mov
jne
cmp
sarl
xor
xorb
loope
mov
test
sub
fnsave
jns
iret
lret
aaa
icebp
jo
cmp
xor
mov
dec
cwtl
xor
jbe
ja
cmp
cmp
add
pop
mov
cmp
inc
xor
sbb
cmp
lds
cmp
cmp
fstpl
cmp
cmp
mov
jecxz
mov
cmp
arpl
inc
aas
fnstsw
xor
int
mov
mov
aas
xor
rcll
add
mov
dec
jns
enter
sub
je
mov
cmp
sbb
adc
cmp
int
ds
aas
mov
out
cmp
xor
cmc
mov
mov
cmc
je
cmp
std
jl
int3
xor
rcl
and
jns
mov
rolb
outsl
arpl
stc
mov
jae
dec
jno
mov
shl
xor
adc
rcl
xor
rcrl
aaa
xor
mov
int3
or
xor
mov
int3
or
cmp
cmp
dec
cmc
rcrb
cmp
adc
xor
sbb
scas
stc
fsubrs
dec
aaa
movb
int
and
mov
sub
jns
cmp
jle
nop
push
adc
cmc
jns
inc
cmp
or
sub
xor
xor
mov
mov
xor
xor
jo
mov
ja
push
xor
aaa
repz
xor
xchg
fdivrs
cmp
push
bnd
mov
imull
cmp
mov
push
push
roll
insl
mov
and
outsb
jo
pop
cmp
push
mov
sub
xlat
fisubl
cmp
aas
stc
fdivs
mov
xor
xor
imul
xor
cmp
fucompp
mov
hlt
push
jns
aaa
mov
and
mov
fistl
and
cmp
fnstcw
hlt
fnstenv
cmp
pop
jae
push
insl
or
pop
sub
mov
mov
xor
push
xlat
sbb
push
imul
inc
out
fadds
fwait
adc
mov
addr16
inc
pop
or
insb
fimuls
jns
fdivrl
inc
xor
aaa
dec
xor
movb
sub
xor
je
gs
ret
test
mov
repnz
or
push
ja
push
sbb
cmpb
shll
hlt
push
mov
xchg
jnp
arpl
cmp
sbb
pop
jne
mov
out
scas
pop
jns
daa
dec
clc
jns
sbb
push
mov
fsubrs
aam
lret
imul
arpl
fldl
dec
xor
xor
jo
arpl
fnsave
insl
aad
in
mov
push
jns
cmp
cmp
cmp
cmp
outsl
aas
fsubrs
adc
outsl
insb
cld
stc
cmp
fdivl
mov
xchg
fisttpll
pop
or
insl
shl
ja
ds
pop
mov
xlat
imul
gs
insb
fidivrs
xor
cmp
push
dec
movsl
rclb
inc
lods
cmp
aad
push
cmp
imul
mov
adcl
call
ss
xor
mov
cmp
inc
ss
xor
adc
aaa
or
xor
cmp
mov
mov
mov
aad
jo
cmp
mov
xor
sbb
mov
je
xor
incl
cmp
clc
cmc
cmp
push
scas
mov
xor
outsl
data16
xchg
mov
mov
fildll
sbb
mov
ds
sti
add
imul
xchg
negb
lock
xor
icebp
aaa
aaa
xor
ret
cmp
mov
stc
inc
push
cmc
cmp
movsl
add
cmp
xchg
inc
mov
fldpi
push
cmp
jge
imul
jae
pop
sbb
imul
push
cmp
mov
cmp
gs
xor
sub
aaa
mov
lds
cli
mov
shlb
cmp
xor
add
inc
adc
std
lret
mov
xchg
ss
jbe
xor
pushf
adc
mov
mov
sub
fnstsw
test
ss
and
push
xor
jne
push
dec
push
movsl
adc
xor
jo
xor
cmp
or
aaa
fimuls
xor
sarl
xor
cmp
xor
adc
out
cmp
xor
daa
cs
xor
xor
xor
aaa
inc
aaa
jns
jne
mov
cmp
leave
xor
dec
mov
add
ficoms
cmp
mull
rol
jno
lret
mov
mov
cmp
pop
jp
ss
sub
imul
rcll
jmp
mov
out
dec
xor
aas
bound
fsub
call
push
divl
sub
filds
aaa
lahf
pop
xor
das
shl
lods
mov
sub
mov
negl
cmp
mov
fwait
xor
sub
ds
xor
cmp
and
and
xor
mov
cmp
xor
or
mov
leave
shrl
mov
cmp
or
icebp
xor
stc
getsec
xor
xor
test
cltd
mov
dec
jnp
inc
sub
gs
jg
pusha
adc
dec
and
insb
rcrl
cmp
dec
add
sub
data16
add
cmp
lret
cmp
fistpll
cmp
loopne
and
aad
and
xor
push
mov
cmp
arpl
pop
inc
sub
fldenv
sub
inc
sub
and
and
mov
jns
daa
arpl
sub
jno
repz
popf
fldenv
mov
imul
xchg
xchg
cmp
sti
pop
dec
inc
cmp
lock
shlb
xlat
push
shll
jle
and
cmc
sub
ja
addr16
mov
dec
push
mov
loop
push
jae
daa
leave
sub
push
xor
aam
cmp
and
jne
imul
add
xor
mov
dec
sub
aas
sbb
push
addr16
gs
cmp
lret
pop
xor
fdivrs
not
xor
aam
mov
xor
int
fdivs
and
push
cs
mov
ret
mov
cmp
outsl
jnp
pop
aaa
arpl
dec
shll
cmp
mov
flds
bound
sub
mov
dec
xor
out
scas
fs
xor
cmp
loop
dec
xchg
out
xor
adc
in
xor
ss
out
xor
out
dec
pop
lds
add
inc
lds
loope
dec
and
cmp
fwait
cmp
idivl
sub
cmc
or
rorl
or
and
out
test
and
popa
pop
mov
and
cmp
mov
dec
cmp
xor
arpl
ja
cmp
mov
icebp
jo
adc
mov
mov
cs
xor
sbb
sub
fldenv
in
ljmp
ss
aaa
and
jb
shll
cmpsl
fidivl
mov
mov
xor
and
xchg
mov
xor
jge
lods
cmp
and
push
dec
and
cmpsl
mov
push
xor
xor
sub
clc
mov
lock
adc
xor
cmpl
cmp
fs
movsl
je
mov
out
mov
xor
inc
cmp
adcb
outsb
adc
push
sbb
daa
arpl
out
cmpsl
push
addr16
in
push
movsb
mov
push
enter
popa
xor
sub
sbb
aaa
mov
ja
mov
cmp
repnz
mov
outsl
shlb
push
push
mov
pop
xchg
cmp
push
mov
out
mov
cmp
cmp
xor
push
adc
sbb
adc
xor
mov
xor
fnstsw
mov
ja
xor
lock
xor
cmp
pop
xor
add
cmp
lods
xorl
mov
inc
ja
les
jmp
enter
call
dec
leave
xor
inc
lds
cmp
ja
sti
jno
push
gs
or
jbe
adc
add
addr16
out
jns
aaa
ret
leave
testl
lods
add
xor
and
xor
jne
repz
or
inc
mov
xor
mov
adc
adc
and
sub
repz
add
scas
stc
ficoml
jg
xor
jno
jbe
imul
xor
jecxz
push
stc
mov
and
arpl
pop
cmp
add
mov
movsb
xchg
ss
jp
clc
fdivs
add
idivb
mov
mov
xor
lds
xor
add
arpl
enter
xor
dec
inc
adc
inc
add
xor
inc
mov
add
xor
cmp
or
inc
xor
sbb
les
mov
pop
mov
push
xor
xor
out
mov
or
add
aaa
inc
sub
push
sub
lea
aas
push
ja
je
sbb
xchg
sbb
sarl
xor
push
cmp
ds
enter
jbe
lret
and
xor
mov
fnstsw
in
aaa
test
cmp
xor
mov
bound
xor
xor
dec
stos
aaa
in
or
fistps
mov
dec
xor
icebp
inc
jo
cmp
sarl
mov
in
jge
cmp
ss
push
cmp
insl
fnstsw
insl
jb
lret
and
cmp
rcrl
enter
out
mov
add
into
and
inc
shrl
xor
mov
rcll
aaa
adc
xor
stc
cmp
ds
inc
ss
outsl
lret
clc
xor
mov
aaa
cmp
xchg
xor
push
mov
insl
aaa
aas
fwait
roll
cltd
sub
mov
cmp
xor
mov
cmp
ds
or
mov
xor
movsb
imull
cli
bound
mov
test
xor
mov
jge
das
mov
cmp
into
or
cmp
popa
pop
or
cmp
cmc
mov
cmp
mov
inc
shrl
xor
mulb
and
xor
mov
xor
cmp
mov
pop
xor
xor
cmp
ja
popa
mov
mov
cmp
push
mov
cmp
mov
stos
xor
push
bnd
jp
sbb
mov
cmp
inc
sub
or
xor
or
mov
add
fcoml
and
and
jp
and
pop
xor
add
or
dec
aas
mov
inc
adc
inc
add
cs
adc
fsubrl
sub
xor
xor
cmp
imul
inc
clc
ss
aad
ja
adc
aaa
pop
xor
cmpsl
cmp
mov
cmp
mov
je
jmp
push
cmp
mov
ja
pop
add
cmp
mov
in
cmp
xor
je
fidivrs
or
pop
mov
jne
add
test
xor
push
mov
in
xor
cmp
cmp
fs
lret
add
daa
imul
or
repnz
mov
popa
lea
sub
mov
cmp
aaa
insb
bound
and
test
ss
repnz
and
dec
dec
jno
mov
movb
ds
jns
push
sub
test
cmp
cmp
xor
lret
sub
cs
mov
ja
js
divl
cmp
xor
insl
cmpb
andb
enter
cmp
stc
inc
mov
sarl
xor
lahf
orb
ss
cmp
cmp
xor
or
xorb
into
add
xor
mov
sahf
push
leave
lock
cmp
sbb
jo
lds
ljmp
add
dec
xor
or
inc
sbb
insb
aaa
cmp
cmp
les
mov
sti
enter
aad
pop
and
and
xor
call
imull
pop
and
xor
jno
cmp
cmp
bound
mov
xor
add
cmp
xor
mov
fisttps
xor
leave
mov
xor
and
cmp
inc
xor
fld
aaa
mov
xor
mov
xor
imul
xor
ret
mov
mov
cmp
int3
adc
mov
mov
lret
into
or
or
cmp
dec
cmp
xor
or
ja
das
imul
jne
jns
out
ret
inc
cmp
cmp
shlb
aas
icebp
mov
mov
std
cmp
cmp
jae
and
inc
int
mov
mov
aas
fucomp
cmp
leave
mov
cmp
push
xor
add
and
mov
fstps
iret
xchg
idivl
iret
fstpl
stc
xor
adc
adc
icebp
mov
fstl
sbb
sbb
and
jae
out
sbb
ret
fnstcw
jb
sarb
mov
xor
or
or
in
testb
insb
mov
lret
lds
repnz
cmp
xor
inc
add
dec
add
xor
push
xchg
sbb
mov
iret
cmp
adc
leavew
mov
sub
pop
cmp
jae
pop
dec
xor
jo
shlb
lret
jno
adc
mov
dec
dec
aad
dec
mov
inc
cmp
jg
mov
icebp
xor
fnstenv
fildll
cmp
dec
outsb
xor
inc
xor
shlb
dec
mov
cmp
or
jp
xor
dec
ret
cmp
inc
or
or
inc
cmp
push
xor
cmp
shll
aaa
sub
cmp
cmp
movsb
jb
sarb
mov
jae
mov
jno
fst
sub
mov
cmp
imul
inc
pop
xlat
rcll
pop
and
repnz
add
jge
or
mov
xor
fisttps
adc
pusha
xlat
outsb
pop
aas
insl
sbbb
test
add
mov
cmp
mov
xor
adc
addr16
cmp
cmp
ret
or
adc
mov
aas
dec
sarl
mov
cmp
aas
xchg
in
mov
pop
pop
imul
popa
bound
test
imul
xchg
idivl
adc
divb
add
jle
mov
push
fnstcw
xor
inc
repz
cli
cmp
leave
push
xlat
ss
imul
insb
mov
cmp
dec
jne
jb
xlat
xchg
jo
ret
xor
mov
jp
mov
mov
jo
push
cmp
lret
xor
or
xor
adc
cmp
je
mov
mov
mov
or
mov
dec
fnstenv
es
ds
inc
shll
mov
daa
xchg
insb
inc
and
xor
or
mov
cmp
pop
mov
ss
jle
fadds
lea
ss
addr16
jge
ds
test
xor
cmp
cmp
cmp
jno
mov
xor
xor
adc
mov
mov
and
lret
loope
ss
data16
enter
std
cmp
xor
cmp
cmp
jge
dec
rcrl
add
adc
or
mov
mov
adc
fnsave
adc
mov
repz
jmp
cmp
fists
lods
mov
fldl2t
mov
jecxz
dec
xor
mov
or
subl
fisubl
or
push
push
sbb
xor
mov
test
mov
cmp
sar
and
cmp
xlat
lret
jo
je
mov
mov
in
mov
enter
inc
aaa
xor
in
mov
popa
add
or
stos
adc
aas
mov
mov
dec
pop
mov
sbb
xor
mov
test
jns
mov
iret
push
ds
rclb
mov
cmp
popa
jno
inc
inc
xor
mov
outsb
imul
cmc
add
mov
jno
inc
sub
cmp
xor
dec
and
in
xor
mov
cmp
jmp
inc
and
xor
shl
in
pop
mov
es
out
or
cmp
fists
dec
sub
xor
frstor
inc
xor
jne
dec
jnp
fnstenv
jae
push
cmp
pop
mov
jae
mov
dec
idivl
xor
hlt
sti
cmp
lock
inc
xor
xor
imul
push
inc
jb
jl
aas
jne
cmp
fistps
out
or
int3
jge
pop
aad
inc
mov
cmp
and
divl
pop
jne
mov
in
ds
dec
dec
adc
js
jns
dec
jge
shlb
das
shll
xor
add
cmp
xchg
mov
pop
daa
push
rorl
les
inc
xor
and
xor
sbb
jecxz
push
dec
ss
mov
jbe
mov
xchg
nop
or
push
dec
xor
ds
or
or
xor
mov
jno
cmp
inc
xor
inc
adc
inc
cmp
cmp
cmp
mov
sub
jl
or
cld
mov
jbe
stc
jo
xchg
sub
iret
xor
fstpt
cmp
fwait
mov
sub
cmp
aas
xchg
cmp
cld
jae
xchg
cmp
ds
mov
xlat
or
push
dec
ss
adc
jp
je
cmp
stos
cmp
out
ret
into
pop
and
jo
in
popa
fbld
loope
shl
addr16
pop
leave
inc
fs
inc
and
inc
add
addr16
mov
mov
xor
or
and
or
cmp
leave
or
cmp
jmp
sub
ss
jno
mov
out
xor
xor
jl
dec
sub
inc
aas
cmp
inc
xor
sarb
pop
mov
cmp
fnstenv
xchg
and
cmp
add
xor
add
dec
pop
xor
xor
cmp
fsubs
loope
fstpl
mov
inc
sub
imul
orl
lds
xor
inc
jg
jle
xor
mov
mov
rcr
xchg
sub
cmp
xor
xor
mov
add
sbb
ffree
leave
xor
test
xor
sub
jns
mov
notl
arpl
and
inc
imul
js
xor
push
xor
aaa
pop
mov
mov
into
enter
mov
jb
push
test
xor
sub
insl
and
adc
dec
mov
sub
mov
repz
push
popa
xor
xor
mov
out
push
loopne
in
push
xor
xor
cmp
leave
sbb
jg
and
jae
dec
cmp
jae
cltd
aas
stos
mov
mov
addr16
daa
mov
mov
xor
das
fidivl
pop
sti
mov
mov
sbb
mov
imul
mov
es
sub
and
sub
sub
sub
pop
fldcw
dec
cmp
cmp
sub
jnp
xorb
add
aas
lds
cmp
xor
ds
dec
xor
pop
cmp
or
fnsave
cmp
dec
and
cmp
cmp
pop
cmp
out
rclb
mov
cmp
jae
or
ja
es
andb
aaa
adc
xlat
cmp
lds
xlat
test
ljmp
ss
inc
mov
push
push
mov
bound
stc
fwait
cmp
cmp
pop
stos
xor
and
sbb
adc
popa
rclb
xor
mov
and
push
jo
movb
cmp
add
aaa
inc
daa
aad
mov
ds
imul
fmull
mov
jb
push
inc
leave
std
cmp
xlat
fildll
mov
xor
jecxz
mov
xchg
mov
xor
mov
test
aad
imul
xor
cmp
iret
lret
mov
inc
dec
inc
xor
jne
imul
xor
mov
lret
cld
dec
xor
xor
cmp
or
lds
bound
movb
mov
aas
xor
lea
cmp
daa
mov
out
ss
fnsave
cmp
inc
aaa
pop
mov
mov
js
dec
aaa
xor
pop
rol
addr16
xor
sbb
aaa
adc
nop
mov
fbstp
mov
inc
das
cmp
mov
outsl
insb
cld
stc
sub
sarl
add
in
aaa
sub
cmp
sub
dec
cmp
mov
fnop
mov
cmp
roll
cmp
inc
sarl
mov
mov
sub
mov
dec
ss
rcr
mov
mov
cmp
adc
cmp
aas
imul
cmpsb
adc
mov
fstl
mov
shrl
sbb
mov
daa
xor
mov
mov
adc
xor
lret
fs
mov
cmp
arpl
mov
dec
or
enter
and
push
mov
ret
push
xorl
xor
cmp
cmp
or
xor
mov
xor
mov
pushf
mov
or
cmp
xor
xor
cmp
mov
cs
arpl
mov
out
mov
push
cmp
shll
ds
lret
sub
sarl
cmp
xor
or
inc
icebp
aas
jne
lock
cmp
adc
divl
mov
roll
xor
cmp
xor
fstpt
inc
je
ss
mov
out
mov
divb
outsb
mov
fldenv
scas
mov
pop
mov
mov
mov
cmp
cmp
mov
lds
xchg
jnp
jns
inc
ret
mov
pop
leave
pop
mov
hlt
inc
mov
cmp
xor
clc
sbb
xchg
imull
insb
push
adc
clc
cmpb
adc
xor
fnstsw
add
sub
sub
dec
sarl
cmp
divl
dec
mov
repz
fistpll
es
mov
xor
cmp
stc
mov
rol
mov
mov
outsl
inc
xor
and
or
and
into
and
jnp
mov
mov
adc
mov
sub
clc
pop
gs
xchg
hlt
jbe
inc
popa
ja
shlb
sbb
mov
push
cmp
das
ss
imul
xor
sub
ljmp
push
in
sub
or
ss
jmp
je
fidivs
fcmovnbe
cmp
or
adc
cmp
inc
mov
stc
pop
jg
fldenv
add
add
jge
adc
jne
adc
in
stc
ss
arpl
sarl
cmp
mov
pop
jb
adc
imul
fldcw
mov
xor
xor
ja
jnp
adc
xchg
push
adc
cmp
cltd
es
imulb
pop
sbb
adcl
and
fisubrl
ds
lds
sub
rcrb
push
adc
sub
mov
mov
xor
xor
rol
mov
mov
shl
mov
into
jae
sub
dec
adc
adc
xor
xor
mov
xor
xor
lret
adc
xor
cmc
sbb
cmp
and
fistps
inc
cmp
es
cmp
adc
push
cmp
xor
dec
test
mov
cmp
adc
stos
ja
pop
add
rol
fwait
mov
stc
daa
das
xor
xor
pop
sbb
push
ds
ds
rcll
add
sbb
and
pop
cmp
mov
aas
mov
push
fs
or
xor
cmp
fdivr
les
mov
pop
sbb
jae
ss
dec
mov
sub
roll
notl
loopne
es
adc
cli
inc
cmp
stc
xor
pusha
mov
push
aas
jns
filds
dec
cmp
push
pop
test
adc
jne
cld
enter
mov
pop
push
or
jg
das
xor
mov
mov
inc
outsl
push
ss
adc
ja
pop
cmp
jnp
cwtl
jg
jne
and
sub
and
mov
push
mov
aam
clc
icebp
aas
cmp
roll
mov
xor
sub
mov
push
enter
pop
sarl
xchg
xor
xlat
lods
imul
cmp
and
mov
rcr
ss
clc
sub
push
sub
cmp
mov
xor
xor
lcall
outsb
mov
mov
add
inc
cmp
aas
adc
xor
push
xor
push
pop
xor
and
in
sbb
mov
or
aas
cmp
add
sub
or
cmp
cltd
ss
fimuls
push
xor
insl
and
and
mov
sub
jb
xor
aaa
pop
cmp
inc
aas
fstl
shrl
push
xor
loop
leave
mov
adc
pop
jo
inc
movsb
or
adc
pop
push
ds
jo
lock
xor
mov
and
xor
lds
jbe
ds
cmp
enter
adcb
xor
xorl
jp
mov
fnsave
jne
sarl
xor
aaa
adc
push
dec
xor
push
lds
aas
ja
inc
ret
shlb
sarb
push
mov
and
movsl
cmp
cmpsl
xor
pop
or
sti
dec
addr16
xor
mov
fnstcw
push
mov
sbb
sbb
fnstsw
fsubs
fstpt
add
or
adc
rcrl
sbb
jl
sbb
jnp
cmp
add
pusha
cmp
mov
lds
jp
fstpt
popa
je,pt
pop
mov
push
cmp
adc
mov
and
sbb
sbb
sub
cs
gs
rorl
or
xor
mov
and
adc
jbe
add
dec
jmp
xor
shrb
or
inc
adc
or
cld
dec
adc
decl
pop
movb
adc
xchg
sbb
dec
cmp
xor
push
inc
cmp
movb
add
pusha
inc
insb
push
xor
popa
pusha
lret
popa
and
jns
dec
and
pop
push
rorb
test
sbb
inc
pop
mov
scas
aaa
mov
xor
add
outsb
mov
nop
jnp
js
mov
inc
in
leave
cmp
mov
test
lret
add
out
clc
mov
pop
int
cmp
testl
or
pop
xor
mov
iret
fidivl
pusha
fstl
jne
fpatan
adc
test
push
push
fisttps
push
aas
add
add
dec
fstpt
fs
hlt
cmp
rcll
enter
sub
daa
xchg
pop
push
jns
adc
rcl
sbb
pop
ljmp
xor
sarl
xor
roll
adc
fs
gs
cmp
js
into
xor
sub
dec
ss
pop
cmp
enter
cmp
mov
stc
inc
aaa
mov
ds
roll
shll
and
mov
fs
cmp
lock
sahf
aaa
std
xor
sarl
jmp
xor
je
push
xor
sahf
jb
xor
ljmp
lcall
sbb
idivl
mov
mov
mov
cmpsb
push
cmp
and
and
ss
popa
mov
adc
jnp
jbe
xor
xor
add
jo
add
cmp
mov
jo
and
xor
mov
cmp
mov
jb
mov
dec
fcompl
pop
cmp
mov
shlb
xor
pop
ss
push
xor
fwait
xor
mov
jb
xor
repz
or
in
or
jbe
cmc
mov
fnstenv
mov
mov
pusha
das
ss
mov
add
push
add
ds
add
es
and
adc
lock
mov
mov
xor
fnstenv
data16
dec
int
xor
mov
or
sub
fdivs
xor
inc
xor
dec
leave
jbe
movl
mov
rorl
leave
dec
xor
cmp
inc
cmp
roll
jne
sarb
mov
aaa
and
push
dec
sub
inc
aad
js
cmp
jp
adc
jo
mov
pusha
lret
adc
mov
aad
lds
call
in
lcall
sbb
mov
xor
aad
cmp
mov
xor
cmp
ds
adc
sarl
mov
in
cmp
xor
js
mov
jl
adc
std
mov
mov
clc
divl
xor
jns
cmp
and
fwait
mov
loope
jne
inc
jb
pusha
fldt
out
mov
in
aad
insb
rcr
aaa
and
xor
and
dec
sub
mov
das
xor
pop
jp
jl
loope
ffreep
and
ss
or
inc
jmp
or
push
xor
pop
or
jecxz
js
cmp
sub
cmp
jl
mov
scas
and
int3
jae
jge
and
mov
push
bound
rcr
xor
cmp
xor
std
jl
aaa
repz
iret
jns
mov
negl
cmp
repz
stc
dec
add
jle
jne
cmp
cmc
cmp
xor
jmp
mov
pop
fs
lock
sbb
jo
stos
xor
mov
xorb
adcb
sub
shl
daa
pushf
xor
icebp
sub
adc
fnsave
aad
mov
or
jge
cmpsl
stc
xchg
jl
icebp
jo
cmp
and
cmp
ss
xor
aad
imul
xor
mov
lret
into
jb
sbb
and
xor
xor
movd
inc
and
cmp
jo
jl
adc
xor
xor
cmp
jl
or
jle
inc
aas
mov
pusha
sub
push
jb
mov
into
aaa
mov
les
mov
xor
jle
inc
cmp
xor
jle
cmc
jno
lcall
xor
cmp
mov
mov
xor
cmp
xor
dec
and
mov
xor
fdivrl
mov
loope
cmp
std
into
inc
jmp
cmp
lret
or
jne
call
cmp
xchg
dec
icebp
xor
cmp
mov
lods
int3
mull
or
cmpsb
lcall
lret
fldcw
push
jmp
ss
dec
sub
mov
fisttpll
cmp
aas
mov
cmc
add
lea
bound
repz
and
push
xlat
sbb
cmovbe
aad
pushf
fmull
xlat
push
sbb
or
and
add
push
cmp
jno
ss
jp
xor
cmp
adc
popa
mov
out
dec
or
push
addr16
jmp
mov
or
inc
jnp
cmp
cli
add
jecxz
pop
pop
pop
xor
std
or
push
pop
push
inc
int
or
ljmp
or
xor
xor
cmp
aad
xchg
mov
fistpll
fsts
je
sbb
jp
xor
ret
push
outsb
cmp
mov
cmp
inc
jecxz
sahf
lds
xor
xor
in
mov
aad
mov
and
dec
xor
je
mov
sahf
bound
cmp
or
cmp
mov
aaa
xor
xor
pop
mov
mov
cmp
xor
mov
cmp
cmp
aas
repz
mov
xor
aas
icebp
cmp
out
mov
dec
shll
fs
testb
mov
lret
ss
mov
shll
inc
aas
shrb
mov
int
movb
es
mov
insb
aas
ss
or
inc
cmp
daa
adc
js
xor
or
jbe
dec
stc
lret
xor
mov
lret
xor
cmp
xor
js
jns
jb
xor
mov
je
mov
cmp
outsb
cmp
repz
xor
xor
fldcw
jl
cmp
bound
jbe
mov
xor
rorl
icebp
jo
cmp
icebp
jo
cmp
dec
mov
xor
ss
data16
stc
fdivl
mov
xchg
ss
mov
xor
mov
push
and
jbe
mov
js
add
dec
cmp
mov
out
mov
xchg
js
xchg
mov
xor
les
inc
iret
cmp
ds
push
cmp
pop
in
mov
fstpt
cmp
aaa
mov
adc
cmpl
pushl
std
jl
aaa
xor
loop
imul
cmp
outsb
cmp
cmp
jmp
jo
shrb
mov
inc
fnsave
inc
cmp
jmp
mov
xlat
jne
flds
les
jo
jl
loope
stc
xor
es
test
xor
cmp
je
inc
xor
mov
jo
sub
xor
and
jnp
jno
lret
jnp
in
inc
xor
stc
and
inc
and
cmp
clc
fnstcw
cmp
pop
lds
mov
divl
aas
cmp
xor
mov
dec
jmp
mov
xor
cmp
push
mov
push
outsb
addl
xor
mov
sub
daa
lret
mov
and
and
lret
mov
inc
test
jl
cmp
leave
xor
lds
cmp
xor
clc
arpl
xor
cmp
xor
jle
mov
cmpsl
shl
cmp
aaa
insb
iret
cmp
icebp
roll
sub
mov
lret
mov
cmp
daa
push
jle
ds
mov
xlat
stc
xor
stc
divl
mov
mov
xor
std
addr16
cmc
and
sbb
data16
or
into
jo
sti
cmp
pusha
iret
cmp
je
inc
aad
bound
xor
mov
mov
shll
lret
mov
mov
mov
sbb
call
mov
mov
js
ss
cmc
ds
divb
sti
cmp
cwtl
dec
insb
mov
cmp
dec
ret
add
xor
mov
or
inc
cmp
testl
dec
and
lds
dec
aaa
mov
ret
jge
inc
inc
int
dec
dec
cmp
or
inc
cmp
aaa
aas
js
mov
xor
or
das
inc
fwait
ja
inc
aad
jp
cmp
inc
aad
dec
fnstenv
mov
mov
lock
lcall
adc
push
inc
ret
xor
mov
sti
cmp
mov
aas
push
mov
fisttpll
fstl
js
adc
and
and
and
mov
add
mov
mov
pop
mov
fnstenv
mov
mov
stc
cmp
leave
xor
cmp
pop
mov
jp
push
mov
push
mov
aad
fimull
rcrl
je
mov
cmp
xlat
insl
fidivrl
sub
cwtl
mov
xchg
inc
sbb
shll
mov
lea
jle
xor
testl
sub
aaa
pop
mov
or
loope
nop
mov
lcall
jno
scas
out
mov
jne
fmuls
xor
inc
xor
aad
jo
dec
adc
jl
xchg
jnp
in
xor
push
dec
inc
xor
jl
inc
aaa
adc
clc
fstpt
gs
das
ss
sub
sub
xor
mov
sub
mov
aas
mov
xor
mov
push
jbe
xor
mov
ss
ss
jno
and
ss
mov
adc
lret
cmp
mov
movb
sbb
adc
sysenter
adc
adc
lock
aaa
cmp
ss
cltd
pop
ss
mov
roll
mov
cmp
rcrl
fists
sbb
jbe
aas
cmp
or
xor
xor
mov
inc
cmp
loop
push
dec
cmp
mov
add
sbb
stc
mov
jb
sti
cmp
xor
cmp
insb
and
mov
das
mov
insb
and
xchg
movsl
xor
into
cmp
push
leave
dec
add
xor
add
inc
rcr
adc
cs
int3
xor
mov
aas
mov
jl
mov
into
enter
push
mov
jp
xor
scas
adc
cmp
jge
popa
push
loopne
mov
loop
mov
cmp
aaa
xor
push
add
ret
and
xor
cmp
loope
sub
call
mov
xor
cmp
repz
icebp
sub
js
sti
mov
push
stc
ss
pop
aas
pop
outsl
inc
push
lret
dec
xor
inc
pop
leave
fidivl
fwait
or
ja
repz
mov
fld
aaa
cmp
bound
mov
cmp
adcb
fstpl
icebp
out
test
cltd
xor
xor
push
add
mov
mov
das
xchg
xor
jbe
pop
cmp
addb
insl
es
dec
jno
hlt
mov
addl
cmp
repz
jl
cmp
jo
pop
in
mov
insb
mov
imul
mov
or
pop
addr16
divb
mov
mov
cmp
xor
push
sti
add
inc
xor
push
repz
aaa
mov
cmp
lret
jnp
inc
fidivrl
dec
cmp
loope
mov
cmp
jo
std
or
insb
fnstenv
cmp
or
testl
cmp
aaa
mov
cmc
pop
mov
add
add
inc
cmp
push
lock
cmp
faddl
xor
fcmovb
ss
and
cmp
cmp
cmp
leave
cmp
adc
xor
xor
jns
dec
cmp
out
shlb
add
jge
push
mov
sbb
stc
xor
mov
pop
mov
xor
mov
push
sbb
jo
sbb
push
jnp
repz
push
mov
xchg
aaa
rcll
mov
roll
rorl
mov
xor
jg
dec
ss
mov
sarl
fidivs
xor
jge
add
xor
xor
shrb
dec
mov
xor
mov
iret
stos
cmp
outsb
xor
outsb
flds
int
xor
cmp
mov
pushf
jo
push
stc
mov
mov
sahf
lret
insb
shll
lret
cmp
mov
mov
or
push
inc
or
pop
xor
cmp
lds
fs
fildll
cwtl
and
inc
sub
inc
ja
out
xor
fnsave
xor
push
int
fidivrl
or
popa
frstor
and
xlat
pop
xor
add
out
ss
adc
pop
mov
adc
xor
push
pop
xor
mov
outsl
cmp
aaa
ficompl
cmp
mov
cmp
mov
inc
cmp
mov
xor
ja
push
sub
popa
lret
xor
pop
cmp
jns
and
sub
xchg
cmp
and
sbb
mov
mov
fucomp
xor
ss
and
cmp
push
mov
xor
mov
ss
add
cmp
aaa
xchg
xor
xchg
sub
int
pop
sti
cmp
outsl
pop
mov
jae
sbb
jno
imul
cmp
mov
xor
and
cmp
sub
je
xor
bnd
rcll
je
jl
xor
sub
lds
mov
xor
test
imul
xor
mov
jae
jns
mov
fs
ja
lds
pop
shll
shl
and
xor
lds
int
mov
cmp
data16
add
roll
popa
es
aaa
jp
cmp
icebp
xor
sbbb
mov
and
dec
and
lret
and
and
xor
cmp
and
insb
shl
pop
aaa
sbb
push
xlat
pop
sub
and
lds
outsl
fnstenv
jnp
add
mov
add
cmpb
xor
inc
xor
movb
sbb
aaa
jno
dec
inc
aaa
arpl
adc
xor
in
outsl
fldenv
stos
dec
mov
mov
divb
mov
adc
mov
not
sub
sti
mul
push
clc
sarb
ds
imul
mov
ret
adc
mov
insl
movb
aas
or
xor
mov
push
adc
sub
cmp
cmp
xor
cltd
cmp
aaa
cld
sti
xor
mov
cmp
adc
sub
mov
je
gs
xor
lea
xchg
test
or
xor
sti
push
mov
in
fsts
mov
mov
xor
in
or
mov
popa
pop
xor
jo
pop
lock
xor
cmp
cmp
lret
xorb
sub
pop
loope
mov
sub
cmp
xor
jle
mov
lret
xchg
xchg
aad
leave
ds
mov
mov
mov
sub
loope
cmp
cli
fstpt
push
and
lcall
mov
jp
mov
mov
aam
cmp
jns
mov
jb
aaa
mov
outsb
xchg
mov
cmp
mov
aas
add
adc
xor
aaa
mov
cmp
lret
mov
ds
stos
cmp
adc
pop
xor
mov
xor
ds
jmp
in
mov
rcll
jle
push
aad
pop
cmp
pusha
imul
xor
adc
cmpsl
xor
lock
and
out
daa
sbbl
adc
mov
cmp
aaa
push
cli
jl
xor
xor
xchg
xor
mov
adc
xor
cmp
sbb
push
adc
popf
sahf
stos
xor
movsl
cmp
mov
icebp
adc
out
push
pop
or
push
js
shll
xor
aaa
mov
xor
xor
ret
add
ds
mov
mov
popa
pop
ljmp
fnstcw
cmp
mov
and
aam
sub
and
adc
jl
data16
or
dec
xor
xor
and
sub
lds
ja
xor
and
push
in
inc
mov
in
cmp
dec
fnsave
lret
mov
cmp
xor
inc
jge
into
inc
cmp
mov
into
mov
ret
ds
aas
cmp
pop
mov
ss
xor
xor
sbb
jb
jnp
xor
dec
sub
jp
mov
clc
mov
fnstsw
cltd
push
ss
xor
stc
pop
cmp
aas
lret
xor
jle
cmp
xor
ret
add
cmp
dec
sub
sub
fcompl
cmp
ja
and
xor
jle
popa
add
jnp
mov
xor
mov
cmp
xor
es
mov
jnp
jns
mov
cmp
xor
pop
mov
cmp
xor
mov
cmp
aaa
jb
imul
rclb
imul
pop
xor
xor
xor
pop
cmp
cmp
jbe
mov
xor
xor
and
fldcw
mov
xor
in
sarl
not
cmp
cmp
mov
imull
cmp
in
mov
jle
mov
cmp
das
shll
cmp
mov
cmp
data16
shll
aaa
sub
lret
or
gs
cmp
or
das
mov
mov
pop
lock
xor
xor
ret
push
xor
std
sub
aaa
sbbb
out
cmp
jle
inc
cmp
mov
int3
dec
xor
xor
sub
jl
mov
xor
fidivl
or
mov
dec
sub
mov
jmp
mov
xor
cmp
cmp
cmp
mov
int
cli
xor
lock
mov
mov
cmp
push
xor
mov
cmp
lods
icebp
jg
fcmovnu
mov
xor
jo
xor
cmp
cmp
imul
xor
mov
mov
xor
add
cmp
jno
xor
xchg
int3
movb
imul
jl
lahf
and
das
enter
mov
jle
sahf
cmp
jle
cmp
dec
mov
cmc
xor
icebp
mov
lods
mov
out
repz
fsubs
mov
mov
pop
ds
pop
xor
cmp
mov
cmp
fdivr
lds
and
jae
pop
ds
rclb
xor
jne
hlt
mov
cli
cmp
loopne
xor
ljmp
add
cmp
ljmp
xor
lds
add
inc
xor
xor
inc
xor
idivl
sub
xlat
cmp
inc
sub
cmp
jle
pop
idivl
sti
mov
sub
jno
xor
lds
xor
sarw
xor
mov
cmp
popf
cmp
jnp
aad
pop
cmp
adc
cmp
mov
xor
jl
sarl
popf
jns
aaa
xor
fdivl
xor
add
add
add
xchg
push
mov
xlat
mov
mov
lock
mov
xchg
jae
clc
rcll
sub
aas
adc
lret
aaa
rcll
cmp
or
icebp
push
push
jl
inc
jge
cmp
andb
cmp
mov
xlat
aas
and
xor
push
cmp
push
adc
cmp
lret
mov
mov
aaa
insb
add
jbe
jnp
inc
pop
mov
xor
dec
cmpl
stc
push
mov
cmp
mov
lock
xorl
jecxz
cmp
mov
xor
sbb
ss
adc
xor
jne
cmp
mov
mov
sub
xor
scas
into
inc
sub
shr
xlat
aaa
mov
cmp
xchg
xor
filds
cmp
inc
dec
cmp
test
sub
adc
js
pop
mov
sbb
cmp
fwait
cmp
aaa
inc
arpl
imul
cmp
lea
mov
pop
daa
aad
mov
xorl
xor
rcrl
test
fnstsw
shlb
inc
and
movsl
fdivl
sub
fbstp
cmp
cmpsl
push
xchg
lret
or
xor
sub
cmp
fdivrl
jnp
push
xchg
fnstsw
mov
clc
cmc
and
or
jb
and
aam
xchg
xor
pop
cmp
mov
cli
fbstp
cmp
mov
sti
imul
ja
repnz
push
mov
xor
jae
dec
enter
stc
mov
mov
mov
push
aaa
pop
stos
dec
jno
les
inc
push
cmp
dec
xor
mov
and
mov
jge
ss
xchg
cmp
into
and
mov
dec
aas
fistps
cmp
imul
xlat
cmp
arpl
cmp
sub
fxch
popf
sbb
rorl
ss
cmc
push
or
mov
aaa
xor
inc
lds
xor
adc
xor
cmp
int3
inc
push
mov
lret
or
daa
inc
ja
in
mov
xor
das
push
xor
arpl
inc
fwait
cmp
mov
push
and
mov
pop
xor
cmp
mov
and
idiv
xor
cmp
mov
xor
cmp
adc
dec
xor
dec
aaa
loope
cmp
in
rcl
cmp
and
xchg
aaa
push
mov
jb
adc
push
and
cmp
inc
cmp
xor
into
cmp
fstl
mov
or
fcoms
xchg
fnstenv
ss
mov
test
sub
fnstsw
arpl
xor
arpl
mov
xorl
xchg
xorl
xor
aaa
fucomp
sbb
js
fbstp
or
mov
inc
std
xor
push
sub
aas
gs
flds
aas
insb
xor
inc
sbb
cmp
icebp
mov
add
mov
arpl
mov
shll
xor
sbb
mov
pop
xor
xor
push
aaa
jo
cmp
xor
rcll
in
aas
jns
xor
mov
lods
xor
jbe
mov
jb
sarl
xor
in
nop
xor
xchg
xor
fwait
cmp
cmp
xor
pop
xor
cs
sbb
cmp
cmp
jns
repz
dec
repz
pop
ja
call
lock
enter
jno
jge
xor
xchg
cmp
xor
sub
aaa
lcall
and
ja
mov
add
push
imul
mov
sbb
mov
das
ja
pop
mov
mov
sub
cmp
lret
test
ljmp
mov
sbb
sub
dec
fistpll
cmp
mov
aam
mov
mov
xchg
add
fstpl
stc
pop
ret
xor
into
xor
movb
shll
aaa
aaa
pop
cmp
and
push
push
xor
jmp
dec
push
ret
xor
ret
xor
xor
imul
das
xor
fisttps
cmp
inc
sub
inc
aaa
push
shl
and
sbb
imul
sub
and
loope
and
pop
mov
das
es
push
xor
adc
adc
adc
aaa
insl
shr
mov
sbb
popa
fucomp
dec
xor
cmp
mov
sarb
cmp
js
sub
aaa
mov
push
add
aas
cmp
jmp
mov
or
dec
pop
xchg
fldenv
jb
cmp
mov
fisttps
mov
inc
and
rcrl
xor
mov
and
push
and
sbb
in
gs
xor
imul
mov
insb
mov
adc
cltd
inc
fidivs
cmp
inc
cmp
sbb
adc
shlb
fs
sub
and
mov
jno
and
addr16
pusha
mov
add
gs
cmp
ja
add
xor
cmp
xor
aas
dec
jmp
xor
mov
cmp
mov
cmp
xor
xor
in
aaa
or
cmp
imul
mov
inc
xchg
dec
xorl
aaa
xor
pop
cmp
inc
and
jge
sub
push
cmp
fists
cmpsl
lock
sarb
fs
mov
sub
aaa
xor
and
sbb
mov
rcrl
xor
insl
push
ret
jnp
popa
pop
push
xor
andb
pop
mov
cmp
ds
ljmp
fisubrs
roll
aaa
sbb
cmp
dec
mov
or
insl
jmp
cmp
imul
inc
mov
jno
jno
cltd
dec
aaa
inc
das
or
jno
shrl
xor
mov
sub
and
stc
popa
filds
jbe
xor
sbb
cltd
xor
xchg
cmp
outsl
bnd
adc
inc
aaa
sbb
xor
sbb
sub
stc
insl
out
xor
add
imul
adc
push
aaa
hlt
sarl
sub
imull
ss
cmp
sub
stc
push
fucom
cmp
ljmp
mov
cmp
cmp
jnp
jnp
inc
or
jno
pop
sbb
jno
cmp
mov
out
inc
jno
jne
out
enter
mov
icebp
and
sub
add
dec
jo
gs
in
stos
inc
mov
and
test
pusha
pop
cmp
mov
movsb
lods
sbb
ss
rorl
inc
movsl
repnz
xor
mov
cmp
inc
aaa
mov
cltd
aaa
inc
cmp
sub
mov
jp
inc
xor
xor
sbb
aaa
push
lret
lahf
movsb
add
in
test
lret
ds
cmp
aaa
leave
rclb
in
js
fnstcw
mov
je
xor
fildll
mov
push
or
daa
pop
sbb
push
bound
fdivrp
aam
rcll
loope
adc
dec
testl
mov
inc
adc
dec
popa
sub
mov
sub
adc
outsl
test
cmp
and
cmp
inc
jge
push
imul
or
xor
fnstenv
cmp
mov
cmp
adc
mov
xor
icebp
xor
aaa
push
lods
mov
dec
xor
mov
xor
sarb
xor
fidivrl
mov
test
dec
mov
mov
lret
shll
cld
imul
xor
xchg
cmp
mov
pusha
addr16
insl
xchg
sbb
mov
cmp
fbstp
xor
lds
dec
jne
mov
mov
add
xchg
xor
push
pusha
push
cmp
icebp
xor
mov
es
movsl
pop
pushf
lds
sub
mov
out
sti
bound
sti
dec
pusha
add
jl
jno
aaa
or
outsb
imul
add
divb
dec
cmp
ss
shrl
into
pop
inc
das
imul
inc
adc
mov
cmp
mov
loop
data16
test
jl
fdivp
or
xor
fwait
dec
sub
arpl
rcll
xchg
xor
rcll
mov
aaa
xor
dec
cmp
pop
in
je
les
lret
inc
xor
mov
mov
cmp
mov
shll
mov
stos
push
je
shll
aas
mov
jmp
and
dec
xor
or
fists
xor
mov
aad
aaa
inc
cs
mov
dec
xor
lret
mov
in
cmp
psubusw
cmp
mov
xor
cmp
arpl
inc
shll
aaa
mov
lret
xor
aas
lret
dec
and
cmp
xor
shll
cmp
fnstcw
cmp
outsb
into
add
mov
fyl2x
jo
cmp
mov
xor
mov
cmp
aaa
jge
aaa
xor
mov
sbb
aaa
cmp
inc
cmp
aaa
inc
sbb
mov
aaa
xor
xor
daa
jnp
or
aaa
cmp
xor
sub
jbe
xor
push
cmp
mov
inc
cmp
mov
lds
aaa
inc
iret
mov
adc
cmp
enter
jmp
fldln2
mov
test
cmp
inc
adc
aas
mov
xor
dec
and
mov
xor
je
into
mov
ret
cmp
aas
cmp
xor
shrl
mov
cmp
xor
xor
mov
mov
xor
data16
insl
mov
xor
xor
imul
jbe
dec
mov
mov
pop
sbb
and
aaa
xor
std
jge
adc
cmp
mov
mov
push
xor
mov
fldl
adc
enter
into
aaa
inc
mov
xor
test
xor
adc
insb
mov
sbb
fisttps
cmp
inc
mov
mov
sub
sbb
bound
mov
cmp
cmp
xor
cmp
xor
mov
and
mov
mov
icebp
mov
xor
pop
leave
xchg
mov
jb
xor
out
dec
push
icebp
xor
jb
sbb
add
shrl
lret
mov
mov
cld
push
dec
jle
xor
sub
jne
sbb
shrl
out
sub
mov
icebp
cs
cmp
cmp
imul
pop
stc
cmp
pop
cmp
cltd
inc
adc
mov
cmp
roll
aaa
ss
jnp
inc
adc
shll
aas
xor
mov
xor
bound
and
mov
fldcw
pop
xor
je
fwait
fs
or
enter
mov
inc
jge
je
or
clc
bound
mov
xor
mov
leave
or
dec
cmp
mov
lretw
icebp
inc
lret
mov
and
cmp
xchg
push
jnp
mov
xchg
mov
fs
daa
outsb
repnz
xor
addr16
mov
lret
cmp
pop
sti
add
lret
adc
mov
jne
rcll
pop
mov
shrl
aas
xor
leave
cmp
jb
imul
popa
fistpll
sti
xor
mov
les
mov
inc
icebp
xor
sub
jne
sti
and
in
inc
and
leave
into
inc
and
xor
cs
aaa
aas
mov
fidivl
cmpsb
mov
and
cmp
imul
ja
cmpsb
clc
jae
inc
mov
clc
cmp
es
adc
cmp
mov
pop
cmp
ss
addb
or
push
cmp
xor
mov
cmp
mov
fisttpll
push
icebp
ss
cmp
es
lea
into
mov
roll
je
and
jecxz
outsw
or
or
xor
push
fdivl
sub
jl
push
xor
mov
iret
inc
sub
xor
inc
sub
jp
push
pop
dec
xor
or
inc
jp
aaa
hlt
push
aas
cltd
pop
add
mov
sti
add
inc
adc
or
push
xor
xor
fidivs
mov
pop
out
cmp
loope
ret
dec
sbb
je
sub
or
xor
adc
mov
xor
lret
xor
mov
cmp
mov
pop
daa
mov
ja
imul
xor
sub
ffree
cltd
ss
and
sbb
xor
aas
notb
cmp
mov
cmp
enterw
and
xor
lret
jno
jae
rorl
sbb
fnsave
jnp
das
mov
movb
rol
jg
xor
int
push
je
sub
add
xor
inc
cmp
dec
int3
xor
inc
xor
jnp
adc
aam
rcrb
sub
cmc
cmp
addr16
add
aaa
pop
js
inc
jnp
inc
sbb
xor
cmp
push
jp
ficoml
je
sub
sub
es
xor
leave
xchg
pop
js
pop
popa
cmp
xchg
ss
sbb
xor
aas
cmp
addr16
pop
jnp
xor
add
insb
and
in
cmp
or
dec
add
cmc
rorb
popa
fnstenv
adc
ds
pop
cmp
sub
ss
shr
pop
sbb
xchg
das
push
sbb
mov
cmp
aaa
and
xor
std
jg
fimuls
push
std
mov
cmp
mov
cmp
mov
xor
ss
mov
jno
mov
das
and
aas
mov
cmp
mov
mov
xor
fwait
sub
xor
ds
or
cmpsl
pop
push
popa
aaa
arpl
aaa
mov
dec
jnp
fxtract
mov
sbb
adc
mov
cmp
cmp
insl
subb
mov
mov
adc
mov
ss
mov
mov
fldcw
xor
cmp
xor
push
clc
ss
in
pop
cmp
push
xor
loope
mov
shll
push
aas
pop
push
xor
mov
xor
lahf
adc
sbb
xor
xor
xor
mov
mov
cmp
adc
xor
pop
es
xchg
cmp
popa
pop
jg
insb
xor
stc
inc
add
inc
pop
push
cmp
int
ss
or
lods
imul
cmc
pop
insl
push
dec
xor
mov
test
add
aas
mov
jl
mov
cmp
xor
enter
cmp
lock
and
bnd
jne
xor
cmp
jecxz
jne
xor
ds
jb
out
jge
mov
cmp
fdiv
jmp
imul
cmp
lret
pusha
shll
jnp
mov
and
xor
addr16
or
xor
or
cmp
insl
xor
xor
push
jno
jae
leave
xor
jg
ss
pusha
add
out
xor
add
cmp
repz
xor
cmp
clc
cltd
ss
xor
shl
add
cmp
popa
mov
push
jne
jg
mov
sahf
cmp
xor
mov
xchg
cmp
xchg
xor
xchg
aaa
jmp
mov
jge
and
lcall
inc
sbb
mov
xor
mov
shll
ja
xor
das
or
call
xor
mov
mulb
cmp
pusha
ds
test
imul
loopne
jae
mov
sysenter
sub
ror
xor
mov
jnp
mov
ja
aas
pop
and
xor
les
mov
cmp
loope
mov
jae
jge
pop
int
cmp
dec
adc
and
outsb
fldcw
aaa
pop
mov
into
mov
js
dec
cmp
push
mov
xor
cmp
lret
push
daa
xor
or
data16
cmp
cmp
push
add
and
mov
mov
lock
mov
push
mov
ds
scas
or
mov
ss
push
xor
data16
shll
ds
pop
dec
cmpsb
dec
leave
xor
mov
xor
cmp
dec
jnp
pop
xor
imul
jne
pop
cmp
xor
cmp
test
mov
cltd
and
xor
mov
cmp
aaa
inc
cmp
dec
and
mov
mov
push
sahf
jns
aas
cmp
cmp
ds
enter
gs
sub
cmp
daa
xor
or
mov
pop
xlat
cmp
fnstcw
inc
lock
mov
sbb
aaa
bound
test
test
xor
aas
or
fdivl
jnp
xor
shll
mov
pop
cmp
sbb
or
adc
and
xor
mov
ss
loope
and
imul
cmp
ss
xor
sbb
xor
fisttpl
push
xor
or
lds
insb
or
pop
xor
cmp
xor
adc
xor
and
jb
xor
or
ja
sarb
cmc
sub
push
xor
pusha
mov
push
in
cltd
xor
mov
xor
mov
sti
rorb
push
es
insb
rorl
cmp
jl
mov
xor
aas
adc
mov
xor
or
cmp
xor
cmp
mov
dec
aaa
je
cmp
cmp
aaa
std
cmp
mov
mov
loopne
loop
jmp
fsts
in
rcrl
dec
popf
outsl
lds
call
xor
cltd
aaa
and
push
mov
pop
add
sbb
insb
ret
jne
dec
mov
xchg
hlt
int
aaa
inc
movsb
mov
iret
jne
add
movsl
and
idivl
jmp
lds
pop
mov
movsl
xor
push
sbb
mov
cltd
mov
xor
mov
adcl
cmp
cmp
xchg
mov
inc
jge
or
mov
fdivs
cs
sub
inc
cmp
sub
mov
repnz
sarb
divl
aad
js
movsl
inc
mov
xor
in
dec
addr16
sub
aaa
hlt
movsb
inc
stc
xor
jae
mov
dec
cli
mov
xor
dec
and
stos
stc
jnp
mov
xor
add
xor
cmp
daa
mov
inc
pop
cmp
lret
jns,pt
jnp
inc
adc
stos
push
aaa
aaa
xor
xchg
mov
mov
or
mov
xor
push
mov
popa
xor
xor
mov
aaa
dec
xor
mov
mov
ss
sbb
inc
xor
pop
cmp
les
rcll
rcll
shl
gs
cmp
cmp
push
mov
mov
cmp
jns
jge
jno
xlat
dec
dec
and
add
cmpl
xor
int
inc
xor
mov
jno
xor
shlb
outsl
mov
add
inc
pop
movb
stos
dec
adc
fidivrl
cmp
loope
fstpl
xchg
movsb
icebp
and
cmp
cmp
push
leave
cmp
xor
stos
xor
inc
xor
sbb
cmpsb
mov
das
gs
xor
cmp
mov
mov
lret
and
outsl
jne
and
cmp
cmp
sub
repnz
and
mov
out
mov
jo
ss
scas
adc
pop
aas
cmp
pop
sbb
add
mov
cmp
shrl
iret
sub
push
scas
xlat
scas
out
cmp
xor
mov
aas
arpl
shll
orl
ss
jmp
in
xchg
fnstenv
aad
cmp
push
je
xor
mov
js
movb
sbb
mov
pop
mov
mov
sbb
sarl
mov
xor
cltd
mov
push
sub
mov
aas
xor
jae
mov
aaa
and
imul
xor
mov
mov
jg
mov
mov
pop
js
sbb
cmp
aas
mov
ss
mov
jb
shlb
pop
mov
jb
les
cmp
mov
int
inc
das
shll
add
mov
into
or
xor
stos
aaa
xor
xor
mov
shl
lret
lret
ljmp
fisubrs
push
shll
mov
xor
inc
cmp
push
jmp
xor
xlat
ja
aaa
xor
jge
add
sub
mov
mov
inc
js
xor
mov
dec
or
fdivl
or
xor
and
dec
jno
jge
sbb
and
jne
inc
mov
xor
ret
aaa
enter
cmp
aas
aas
das
pop
leave
insl
xor
stc
sub
bound
push
loopne
insb
sub
xor
xor
bound
push
jno
xor
adc
in
adc
or
sarb
mov
outsl
pop
add
rorl
or
inc
cmp
pop
aaa
mov
cmp
jne
push
cmp
cmp
movsl
mov
cmpsl
shll
je
mov
dec
adc
xorl
arpl
lea
pop
mov
out
je
lods
mov
jl
inc
aaa
popa
mov
mov
xor
mov
sub
mov
jl
cmp
lds
jg
xor
mov
and
jne
mov
cltd
mov
lock
loop
push
xor
mov
xor
fs
dec
movb
or
pop
inc
cmp
sub
jae
sub
and
jge
ffreep
xor
insw
cmp
push
jae
sub
inc
cmp
fidivl
aas
push
jno
cmp
xchg
push
inc
mov
jp
or
or
cmp
mov
inc
xor
ss
push
cmp
js
insl
movb
sub
stc
mov
xor
xor
shrb
add
bnd
jns
mov
inc
sub
xchg
inc
sub
sub
fstpl
shll
movsb
cmp
sub
and
cmp
daa
fstpl
adc
ja
mov
cmp
xor
mov
push
loopne
fucompp
mov
sub
aaa
mov
xor
cmp
xor
stc
negb
aaa
push
mov
shll
xor
mov
cmp
mov
mull
jnp
inc
daa
fucom
jns
rolb
cmp
jns
mov
fists
sti
sarl
and
jl
mov
push
push
pop
and
cmp
inc
aaa
jne
imul
push
mov
push
cmp
addr16
aaa
dec
cli
xor
mov
clc
and
mov
cmp
sub
dec
cltd
push
fdivrl
sub
iret
adc
xor
mov
push
pop
xor
xor
outsl
mov
pop
aam
push
cmp
adc
rcr
sbb
cmp
and
mov
cmp
add
shrb
xor
jns
mov
mov
mov
dec
dec
cmp
cmp
jae
mov
jne
lret
fcmovb
push
jne
xor
ja
fistpll
push
cmp
and
dec
bound
daa
or
dec
xlat
mov
mov
cmp
xor
pop
mov
pop
xor
xor
dec
sub
cmp
jae
jl
mov
xor
ss
mov
loope
xor
mov
pop
icebp
xor
ss
xor
mov
sub
jp
fstl
push
push
adc
and
sub
xlat
sbb
test
jp
enter
ja
add
dec
and
iret
sbb
mov
mov
push
pop
jbe
adc
mov
and
jge
xor
gs
stc
popa
ja
jp
xor
roll
shll
ds
xor
lret
mov
jbe
rorl
xor
xchg
cwtl
jp
sbb
pop
add
add
jno
jno
sub
mov
iret
mov
sbb
aaa
cmp
cmp
or
and
push
lods
push
and
int3
push
xor
push
mov
xor
push
lret
cltd
xor
arpl
mov
push
xor
fnstenv
pop
xor
icebp
xor
aas
jnp
mov
xor
rcrb
xlat
and
shl
mull
cmp
adc
or
shll
cmc
and
cmp
je
mov
sti
sub
fsubs
ss
or
cmp
cmp
rclb
call
push
int3
mov
daa
mov
or
pop
mov
lret
shll
js
inc
add
aaa
les
mov
jns
mov
mov
sbb
rorl
adc
fdiv
cli
fisttpl
ja,pn
mov
les
add
dec
cmp
mov
push
mov
and
fnsave
sbb
push
xor
xor
and
cmp
or
inc
cmp
je
mov
sbb
mov
jns
xor
cmp
push
xlat
cmp
ss
inc
sub
push
mov
jbe
insb
rorl
pop
mull
cs
cmp
mov
push
sti
sarb
outsb
std
cmp
jbe
lcall
xchg
mov
pop
sbb
out
adc
xor
xor
sbb
lcall
test
sbb
addr16
fldenv
fnstenv
jbe
gs
push
aas
inc
jnp
rcll
cmp
pop
add
adc
enter
in
add
xlat
xor
add
fnstsw
aas
outsw
xor
xor
data16
xor
mov
sub
adc
std
shll
loopne
xor
mov
and
ss
mov
addr16
push
mov
fidivs
mov
iret
outsl
add
add
sbb
add
inc
dec
insb
push
dec
pusha
sti
push
cmp
and
leave
pop
fs
lret
inc
aaa
orb
mov
aaa
xor
xor
mov
mov
inc
or
dec
and
sub
xor
addr16
sub
sub
cmc
xor
jno
sub
rcrl
daa
xor
and
aas
pop
cmp
sub
and
sub
cmp
sub
and
movsb
sub
inc
cmp
sub
or
shr
sbb
psubsw
or
pop
and
sbb
cmp
push
push
mov
pusha
push
push
xor
and
repz
lahf
mov
cmp
inc
sub
push
xor
xor
mov
cmp
xor
decl
cmp
adc
sub
rclb
cmp
lret
xor
mov
cmp
jno
pop
jge
cmp
mov
cmp
lock
sub
push
mov
scas
mov
jbe
into
fsubrl
mov
imul
sub
out
ss
stos
cmp
pusha
add
sbb
xor
mov
aaa
pop
repnz
jae
pop
cmp
les
xor
pushf
pop
cmp
movsl
shlb
adc
xchg
fmulp
les
push
imul
cmp
rol
lret
push
sub
sahf
cmp
xor
dec
xchg
cmp
aaa
mov
cmp
cmp
pop
mov
xor
xor
push
push
cmp
les
xor
pusha
movsl
cmp
cmp
fnstcw
xchg
xor
dec
cmp
mulb
cmp
bound
ss
subb
xchg
push
ja
xor
cmp
inc
add
rcll
fnstenv
xchg
fisubrs
pop
sbb
add
unpckhps
into
and
adc
dec
push
adc
fldt
mov
lret
imul
aas
fbld
sbb
push
cld
dec
ffreep
sbb
and
icebp
xchg
cmp
pop
lahf
or
add
sub
xor
mov
xor
jo
adc
mov
popa
xor
outsb
cltd
push
pop
pop
push
cmp
xchg
mov
xor
xor
push
or
jb
cmp
mov
cmp
push
and
xor
fstps
xor
insb
push
and
popa
dec
xor
das
xchg
xor
cmp
hlt
inc
or
lahf
xor
mov
imul
ss
mov
cmp
dec
out
in
shll
outsl
add
dec
nop
xor
mov
daa
dec
or
push
popa
fists
inc
sbb
fnstenv
lcall
and
xchg
mov
test
cmp
jg
cmp
pop
ret
mov
and
adc
jl
inc
adc
aaa
mov
inc
ja
xor
jae
cmp
inc
inc
fnstsw
sbb
icebp
inc
cmp
mov
mov
cmp
lcall
inc
lock
imul
arpl
adc
mov
adc
icebp
and
fildll
sbb
in
aaa
sub
mov
es
insb
iret
ds
dec
xor
testl
dec
xor
push
stc
dec
xor
in
push
mov
sarl
xor
jne
je
push
bnd
jmp
in
mov
push
mov
xor
sub
jge
je
push
cmp
xor
mov
or
sub
add
fcoms
jo
imul
xor
sbb
mov
cmp
jns
mov
inc
fs
daa
popa
arpl
stc
cltd
mov
push
aaa
sbb
jp
rcrl
adc
rcl
jo
or
mov
cmp
mov
sarl
add
jbe
add
jne
lret
mov
cmp
jb
cmp
push
bound
adc
loopne
js
sub
jp
or
xor
mov
out
xor
jmp
in
imul
xor
cmp
xlat
ds
and
imul
aam
fwait
imul
aad
cmp
icebp
fisubs
stos
sbb
push
pop
ss
add
int
or
jb
cmp
xor
dec
iret
mov
mov
hlt
iret
je
aaa
inc
dec
inc
mov
ss
ficoml
leave
mov
dec
sub
xor
fs
mov
fbld
push
dec
in
push
mov
enter
addr16
xchg
stc
xor
inc
sub
test
cmp
arpl
stos
or
xor
cmp
jge
idivl
xor
jo
rclb
addb
aaa
mov
bound
mov
xor
or
iret
mov
dec
ja
jne
dec
and
lods
cmp
push
lock
jo
mov
fs
bound
xor
aas
xchg
xor
fidivs
sub
inc
cmp
xor
frstor
and
xor
imul
outsb
mov
mov
stos
shll
popa
xor
cmp
add
or
divl
and
fldenv
cmp
mov
adc
mov
mov
fildll
cmp
mov
sti
ss
xor
clc
fldcw
mov
xor
cli
ror
xor
in
push
rcll
xor
ds
mov
hlt
mov
out
or
xor
inc
and
push
pop
xor
mov
dec
mov
and
add
ja
aaa
cmp
popa
and
xor
lcall
xor
mov
push
mov
fnstsw
xor
pop
mov
pop
fs
pop
push
cmp
inc
cmp
jle
xor
aaa
inc
cmp
leave
fbstp
mov
mov
inc
adc
sub
mov
int
outsl
dec
sub
jns
pop
rcrl
mov
call
sub
outsb
pop
cmp
xor
mov
mov
cmp
arpl
arpl
data16
dec
ds
fsubrl
scas
xor
xor
adc
ja
aaa
gs
leave
fists
push
outsl
mov
cmp
ds
cmp
mov
mov
lock
add
sar
xor
mov
aam
mov
mov
xor
mov
fnstenv
xorb
cmp
mov
mov
cmp
ss
xor
jb
ss
jbe
xor
xor
cmp
cmp
cmp
cmp
mov
mov
mov
fdecstp
fidivs
mov
xor
sarl
cmp
inc
aaa
mov
in
dec
xor
ror
cli
jp
cmp
jae
mov
push
xor
xor
stos
iret
jne
mov
jl
push
divl
sub
mov
ss
out
jbe
xor
xor
mov
mov
ds
repz
jns
shll
xor
mov
jnp
push
mov
aaa
sub
cmp
mov
cmp
and
cmp
enter
mov
cmp
cmp
fistpll
mov
rorl
jbe
nop
sub
cmp
add
mov
jne
mov
jbe
cmp
xor
mov
je
enter
add
xor
js
push
jns
mulb
cmp
mov
cmp
push
mov
ror
jge,pn
ja
jnp
addr16
mov
jno
cmp
repz
dec
icebp
xor
push
xor
mov
sbb
fs
pop
mov
xor
and
mov
popf
inc
xor
jnp
xchg
cmp
pop
daa
jns
jb
imul
jae
cmp
outsb
mov
xor
inc
mov
jae
call
negl
xor
sbb
xor
arpl
stc
xor
mov
out
cmp
pop
xor
cmp
xor
push
cmp
xor
fwait
xor
daa
ss
movsb
xchg
and
push
cli
push
xchg
mov
fs
adc
pushf
cli
mov
push
out
ljmp
jne
mov
fisttps
mov
cmp
jne
stc
sub
fnstcw
pop
pop
dec
mov
addr16
mov
pop
aaa
cld
daa
cmp
ja
imul
sbb
inc
fstpl
sub
ja
dec
xor
pusha
ss
mov
ja
add
pop
cltd
cmp
mov
cmp
rcl
push
mov
les
pop
cmp
daa
icebp
xor
pop
mov
fisttpll
cmp
xor
jg
fcompl
sbb
jecxz
and
xor
adc
xor
jp
mov
jle
into
inc
gs
rcll
cmp
fstpl
pop
xor
xchg
arpl
sti
into
jmp
scas
xor
pop
jns
mov
cmp
divl
inc
jno
insl
xor
notb
xor
dec
pop
mov
fistl
adc
xlat
adc
lods
pop
mov
xor
repz
inc
sysexit
dec
jo,pt
dec
cmp
xor
jnp
rol
cli
cmp
mov
pop
cmp
inc
jne
or
enter
mov
mov
mov
adc
jb
push
xor
pop
cmp
inc
or
ds
popf
push
jl
ret
sbb
push
cmpsb
sub
aas
stc
mov
xor
mov
je
add
fnstsw
mov
mov
xlat
popf
shl
pop
ss
cmp
adc
test
sbb
add
cmp
xor
inc
int
dec
aad
cmp
mov
leave
aaa
mov
or
dec
xor
cmp
jns
mov
aaa
xor
cmp
jb
mov
sarl
or
or
rorl
mov
aaa
lods
mov
mov
cmp
sub
push
push
aaa
pusha
ret
movb
and
je
shlw
cmp
xor
aaa
mov
add
inc
mov
stc
fs
adc
ss
xor
or
xor
mov
mov
add
inc
xor
arpl
fsubrl
sbb
fs
ss
int
cmp
mov
mov
dec
aad
addr16
mov
dec
xlat
shll
xor
xor
add
fstpt
xchg
sbb
or
xor
push
cli
xchg
or
push
xor
fs
jno
arpl
jle
and
adc
insb
jno
mov
ss
xor
fnstsw
add
xor
mov
movzwl
push
cmp
jg
xor
std
lret
inc
xor
mov
push
jnp
push
jbe
xchg
add
add
or
xor
addr16
aas
aas
ss
xor
les
cmp
cmc
fidivrl
xor
mov
aaa
cmp
out
outsb
int
mov
inc
cmp
and
mov
jo
or
mov
push
xor
xor
cmp
inc
cmp
xor
xor
mov
and
mov
cmovge
mov
ret
mov
stos
cmp
jnp
les
imul
popa
ss
lret
add
mov
daa
mov
xor
fs
mov
fidivrl
mov
adc
xor
dec
xor
xor
je
or
inc
icebp
js
xor
push
mov
pop
push
aaa
cmp
pop
add
pop
repnz
fs
mov
or
sub
lock
clc
mov
add
shrl
pop
push
lret
repnz
mov
cmp
xor
aaa
sti
add
cmp
jl
ss
cmp
xor
je
lret
test
ret
cltd
in
sub
je
xor
xchg
cmp
mov
inc
xor
inc
jnp
popa
adc
xchg
or
je
outsb
mov
js
add
ret
repz
push
jae
fisttps
imul
pop
push
sub
pop
dec
adc
push
mov
adc
mov
repnz
push
les
xor
inc
dec
into
pop
cmp
fwait
push
aaa
aaa
fisttpll
roll
cmp
xchg
xor
xor
mov
aaa
mov
fdivl
pop
aas
addr16
cmp
cmp
adc
cwtl
push
add
jmp
add
and
xor
mov
mov
mov
aas
or
mov
je
dec
xor
cmp
dec
jle
jg
dec
add
fistpll
dec
cmp
mov
sub
mov
cmp
inc
sub
xor
xor
jl
mov
aaa
xor
sbb
mov
xor
xor
cmp
fidivrl
xchg
sarl
mov
sbb
adc
and
cmp
mov
shll
inc
xor
loopne
and
xchg
sarb
test
shlb
xor
fidivrs
sbb
popa
addr16
out
dec
cmp
jne
test
jns
scas
sbb
dec
cmp
ret
ds
cmp
xor
adc
or
faddl
cmp
adc
gs
inc
mov
jae
aaa
cmp
dec
mov
arpl
sbb
cmp
popa
and
and
xor
dec
cmp
inc
stos
inc
dec
or
mov
sarb
mov
addr16
push
fs
shlb
xor
pop
mov
ljmp
add
add
or
fdivl
cmp
xor
inc
and
push
mov
add
ds
sub
jno
inc
rcl
mov
cmp
gs
add
fnsave
mov
inc
movsl
mov
inc
jns
fistps
in
xor
je
sub
pop
xchg
cmp
lcall
cmp
or
out
dec
aaa
mov
outsl
pop
les
sub
sub
in
shrl
inc
aaa
ret
jmp
inc
pop
sub
mov
aaa
popa
pop
ss
mov
xor
call
sbb
pop
cmp
mov
out
jge
mov
add
mov
jo
xor
ds
or
jp
inc
jbe
sub
sbb
add
xorps
imul
jo
mov
sbb
pop
mov
insl
sarl
cmc
xor
dec
jns
repz
leave
popa
fucomip
stos
xor
mov
sub
sbb
xor
ficompl
adc
mov
xor
mov
loop
aaa
mov
xor
push
clc
inc
sbb
sti
js
fisttps
xchg
bnd
inc
cmp
cmp
adc
mov
cmp
xor
xchg
inc
cmp
daa
add
ja
mov
adc
push
xor
insl
or
leave
bound
out
sub
pop
and
mov
inc
mov
mov
fstps
sub
mov
rol
enter
xor
or
xor
aaa
or
dec
popa
sbb
sub
inc
cmpsb
imul
inc
push
cmp
mov
add
adc
mov
movsl
sbb
sarl
shll
mov
or
xor
inc
es
lret
stos
js
xor
pop
cmp
or
jns
cmp
sbb
cmp
aas
mov
xor
cmp
and
jb
or
or
std
dec
and
mov
in
daa
insl
shll
js
xor
imul
xor
mov
rcll
jg
ja
and
lret
test
xor
dec
jle
dec
mov
xor
xor
cmp
xor
inc
ss
cmp
aaa
jne
jle
inc
aad
sbb
push
inc
add
mov
mov
mov
hlt
jae
repnz
shll
pop
xor
sbb
jne
dec
fnstsw
mov
enter
nop
bswap
les
fs
stos
xor
and
cmp
sub
imul
rcrl
inc
in
lea
adc
mov
fisttpll
ds
mov
mov
rorl
xor
ja
pop
xchg
xor
aad
or
xlat
adc
cmp
pop
xor
jb
les
out
jo
or
mov
mov
and
xor
js
idivl
jmp
xor
lock
xor
mov
jbe
mov
movsl
vmwrite
jge
std
test
jmp
mov
sub
pop
aaa
mov
jb,pt
cmp
loop
adc
adc
cmp
mov
mov
fwait
inc
aaa
cmp
out
mov
inc
std
les
out
adc
mov
icebp
inc
aad
push
in
fxtract
aaa
lret
xor
les
sub
cmp
enter
mov
pop
pop
cmp
enter
fsts
add
fldcw
cmp
loop
xor
lret
fnstenv
ret
ret
clc
cmp
insb
roll
lret
xor
inc
cmp
cmp
inc
cmp
cmp
repnz
cld
cmp
xor
xor
pusha
cmp
das
aaa
xor
aaa
inc
xor
repz
bound
popf
cmp
cmp
leave
aaa
xor
in
push
cmpl
aaa
xor
dec
ret
mov
ret
mov
cmp
xor
fnstsw
or
xor
ret
push
cmp
and
popa
ffreep
and
xor
mov
xor
pop
ds
jo
pop
aad
or
rcr
sysenter
or
pop
xor
mov
ret
fisttps
daa
xor
iret
mov
stc
enter
xor
xor
inc
xlat
adc
cmp
xor
mov
mov
cmp
sbb
xor
cmp
rcll
xor
je
sbb
cmp
xor
ss
push
xor
and
ss
sbb
gs
cmp
sbb
bound
insl
outsb
mov
or
cmp
mov
and
aaa
jno
add
aaa
xor
fbstp
mov
cmp
jno
repnz
outsl
or
mov
adc
rcl
sbb
xor
mov
mov
pop
cmp
mov
and
mov
push
dec
xor
pop
xor
aaa
cmp
cmp
popa
cmp
xor
sbb
cmp
mull
jg
or
cmp
aas
cmp
xchg
mov
cmp
mov
xor
cmp
xor
and
jns
sub
cs
cmp
mov
pop
sbb
faddl
cmp
sub
int
add
mov
ss
dec
mov
roll
xor
pop
ret
xor
push
mov
cmp
sbb
xchg
sub
push
aaa
or
dec
ss
ds
es
pop
cmc
sub
fidivl
jae
sbb
xor
cmp
popa
mov
jp
es
adc
shrl
repz
pop
and
push
das
cmc
sub
adc
pop
push
shlb
jno
adc
sub
mov
mov
xor
cmp
adc
adc
aaa
xor
cmp
mov
cmp
sbb
jnp
jno
xor
mov
inc
cs
xor
push
xor
add
ss
jne
cmp
mov
xor
adc
inc
cmp
repnz
sbb
add
icebp
push
lds
cmp
xchg
aaa
push
imul
popa
fisttpll
jp
daa
xor
xor
shll
xor
mov
ds
push
mov
jge
adc
push
cmp
mov
cmp
roll
into
jae
or
sarb
ds
mov
aaa
and
hlt
mov
cmc
jae
fnstcw
cmc
xor
pop
mov
arpl
xor
mov
rcrl
cmp
aaa
xor
push
imul
cmp
and
xor
push
dec
aas
xor
mov
sarb
fs
mov
cmc
cmp
xor
jno
xor
cmp
adc
std
pop
sarl
cmp
xchg
ds
mov
loop
xchg
adc
xlat
ds
popa
cmp
pushf
cmp
popa
cmp
pop
pop
arpl
mov
fldl
cmp
aaa
xor
mov
insl
imul
mov
sub
push
inc
cmp
xor
cs
xor
jne
mov
mov
xor
mov
sbb
ss
jno,pt
enter
jno
xor
adc
pop
xor
insl
rcrl
jge
xor
sahf
xor
jmp
xor
xor
xor
cmp
xor
test
fsts
and
xor
mov
addr16
cmp
pop
xor
mov
aas
shlw
push
int
ret
add
imul
cltd
xor
mov
bound
clc
xlat
cmp
lods
cld
test
or
fsubl
or
cmp
shl
icebp
ss
lds
xor
jae
sub
mov
mov
push
cmp
and
rcrl
add
lret
fnstsw
sbb
xor
std
mov
stc
daa
push
push
mov
pop
js
add
mov
or
fnstenv
es
inc
mov
mov
sti
pop
mov
shlb
lret
and
sub
pop
xor
cmp
adc
je
aaa
pop
fnstsw
icebp
cmp
outsb
into
and
fistps
enter
xor
sbb
and
add
cmp
ret
hlt
xchg
dec
adc
xor
lret
shlb
push
fstpt
xchg
and
cmp
ds
sub
jge
or
movsl
ds
sub
push
jbe
add
imul
mov
mov
push
cwtl
jns
inc
cmp
aas
sbb
lock
cmp
filds
lcall
jae
movsb
jg
shrl
mov
aaa
insl
jg
mov
xor
xor
xor
dec
xor
aad
aaa
rcll
cmp
xor
and
outsl
xor
bound
dec
das
addr16
sub
dec
sbb
cmp
mov
jle
rorb
cmp
jp
fs
lret
xor
mov
add
pop
mov
insl
outsl
addr16
ss
gs
icebp
cmp
jo
or
inc
xor
pop
ja
sbb
arpl
push
xor
leave
icebp
xor
sti
xor
push
std
dec
adc
adc
fidivrs
shll
test
xor
les
enter
jno
mov
ss
hlt
xor
pop
push
std
dec
cmp
dec
cmp
xor
mov
mov
add
jne
dec
xor
int
cmp
add
mov
xor
movsb
idivb
xor
mov
cmp
mov
mov
movb
das
dec
subl
cmp
cmp
xor
mov
arpl
cmp
ds
xor
ss
dec
or
mov
cmp
sub
xor
outsl
add
fnstcw
jge
and
mov
dec
and
adc
sub
addr16
jle
popa
mov
aaa
pop
pop
movb
jle
jo
or
pop
push
iret
cmp
cmp
shll
les
xor
jns
inc
cmp
xor
xor
push
xor
sbb
pop
fdivrs
xor
xor
fbstp
sub
sub
cmp
xor
fdivl
cs
xor
xor
pop
fdivs
fdivrl
xor
shlb
sub
push
cmp
aaa
ss
push
and
mov
xor
gs
jb
insb
mov
mov
dec
sub
xor
aaa
xor
xor
mov
and
add
daa
fnstenv
push
test
das
mov
addr16
nop
bound
mov
xor
xor
sub
jno
xchg
popa
xor
add
add
fists
mov
mov
or
mov
xor
outsl
sub
add
stc
sahf
aaa
or
lret
mov
inc
or
mov
push
jmp
insl
jns
mov
xchg
push
icebp
cmp
shlb
imul
mov
add
movsb
pop
mov
test
push
mov
jmp
jne
or
mov
in
sub
push
mov
lahf
dec
add
test
push
cmp
push
ss
and
cwtl
mov
jno
xchg
adc
mov
fstpl
das
xorl
fnstenv
or
xor
jns
pusha
fstpl
xor
daa
std
add
clc
je
xor
stc
or
xor
and
jecxz
mov
push
int
xor
xor
fbld
cmp
inc
cmp
jb
xor
xor
jb
das
cmp
xor
je
add
inc
xor
and
addr16
cmp
aaa
sub
test
into
and
scas
cmp
xor
test
ss
xor
xor
pop
lds
mov
ss
mov
dec
sbb
out
mov
imul
cmp
aaa
rcl
addr16
enter
mov
xor
inc
out
push
sti
fmuls
int
jae
mov
jg
cmp
and
mov
cld
rcl
jbe
cmp
js
aaa
add
dec
or
pusha
pop
cmp
into
pusha
adc
repnz
and
and
test
adc
push
insb
mov
xor
mov
arpl
xor
cmp
aaa
xor
jecxz
stc
inc
divl
pop
mov
pop
les
imul
inc
or
fwait
or
dec
xor
cmp
cmp
rol
mov
bound
jae
mov
push
cli
icebp
scas
mov
cmp
sar
jo
stos
cmp
cmp
test
xor
test
inc
aaa
jno
shll
fucomp
pop
and
cmp
fs
gs
or
insb
idivb
push
adc
pop
fucom
dec
xor
xor
lret
xor
xor
ljmp
fwait
sub
and
mov
dec
icebp
cmp
xchg
xor
pop
cmp
mov
mov
push
iret
je
aaa
insl
dec
adc
mov
jns
popa
xor
daa
push
mov
das
mov
add
ficoms
or
sub
cmp
mov
imul
push
xlat
and
mov
aaa
fs
mov
aas
sub
mov
mov
mov
cmp
mov
push
test
cmp
mov
mov
jg
pop
xchg
mov
hlt
or
xor
stc
icebp
les
xor
add
aam
dec
adc
mov
add
sub
enter
mov
lret
mov
mov
cmp
arpl
rclb
mov
cmp
adc
xor
and
dec
cmp
inc
aas
mov
dec
xor
imul
mov
call
cmp
pop
mov
jns
hlt
es
shlb
aaa
xor
lcall
aaa
mov
xchg
jmp
mov
xchg
movsb
jecxz
mov
and
cmp
addr16
push
mov
mov
movb
xchg
cmp
movsl
sub
fidivl
filds
repnz
mov
xor
or
mov
ffree
xor
xor
xor
pop
cmp
and
sbb
xor
xor
add
cmp
adc
pop
xor
aaa
inc
fists
ss
add
inc
ds
push
fidivl
hlt
inc
cmp
cmp
js
jp
ss
imul
xor
pop
xor
xor
enter
cmp
inc
cmp
nop
ret
and
xchg
das
adc
lea
xor
cmpsl
push
cmp
xchg
sbb
xor
test
clc
cmc
xor
cmp
sub
sub
outsb
add
arpl
loop
mov
xor
stc
xor
js
clc
shll
ss
inc
cmp
fs
lret
icebp
inc
xor
cmc
inc
push
mov
ret
dec
sbb
xor
orb
sbb
movl
sub
mov
cmp
inc
shll
add
dec
in
outsb
roll
cmp
insb
push
mov
iret
mov
aad
aaa
xor
inc
xor
mov
adc
dec
cmp
add
mov
andl
push
loopne
gs
mov
mov
xor
xor
dec
cmp
xor
fs
movsb
mov
mov
pop
mov
sbb
xchg
pandn
ret
pop
dec
mov
sbb
aas
xor
xchg
mov
pop
mov
cmp
mov
sub
insl
adc
dec
inc
xor
mov
inc
pop
mov
pop
cmp
iret
or
dec
push
mov
mov
imul
adc
mov
les
xor
cmp
daa
cmp
daa
ficoms
inc
ss
mov
xor
jge
xor
adc
mov
cmp
cmp
mov
xor
cmp
mov
loopne
cs
xchg
mov
cmp
lea
mov
inc
mull
jg
std
jae
stos
clc
sub
push
cmp
into
loope
scas
stc
xor
push
cmp
xchg
in
cmp
popf
outsb
jle
jecxz
aas
std
jbe
in
js
jmp
jb
sarl
jne
cwtl
sub
mov
add
and
add
mov
dec
and
inc
aas
cmp
and
ds
aas
add
ja
cmp
icebp
fimuls
pop
cmp
cmp
cmc
pop
inc
and
jne
jge
jbe
dec
sub
mov
stc
xchg
ficomps
xor
xchg
mov
mov
sub
xor
pcmpgtw
mov
jo
lret
xor
stc
xor
cmp
mov
into
mov
sti
dec
mov
pop
das
dec
adc
push
xor
mov
jnp
mov
lds
xor
js
jno
cmc
mov
rcrl
ss
data16
aaa
enter
add
mov
xor
mov
lret
ftst
adc
cmp
daa
xchg
xor
scas
mov
jb
cmp
jno
pop
adc
adc
stc
es
mov
fistpll
dec
xor
sahf
jne
xor
in
xor
fcomip
sbb
cmp
mov
je
js
mov
mov
cmp
or
push
andb
xlat
aas
subl
movsb
mov
rorl
xchg
sub
dec
xor
push
sti
outsb
mov
mov
nop
aaa
lds
xor
sti
push
push
xchg
test
xor
xchg
xor
aad
mov
sub
xor
daa
loope
cmp
shrb
pop
and
inc
aas
shll
mov
push
xor
arpl
inc
and
xor
adc
push
pop
cmp
push
repnz
aas
cmp
ja
xor
mov
mov
aad
xchg
dec
mov
cmp
jne
sbb
cs
or
imul
call
push
xor
mov
les
jo
mov
mov
cmp
mov
push
or
xchg
cmp
mov
icebp
cmpsl
jle
cmp
xor
xchg
sub
xor
inc
daa
mov
mov
cmp
sbb
aaa
xor
or
xor
les
cmp
filds
xor
mov
push
xor
xor
sub
cmp
jbe
aas
xor
fnstcw
cwtl
cmp
fstl
pop
loop
cmp
fbstp
push
sub
cmp
cmp
aaa
or
dec
inc
mov
jb
mov
and
cmp
in
rorb
xor
or
dec
ss
je
add
inc
ds
mov
xor
push
push
mov
adc
sub
jae
sub
imul
fcomip
and
push
and
cmp
ja
xor
mov
cmp
xor
jo
cmp
insl
inc
mov
pusha
xor
xor
adc
xorb
cmp
mov
pusha
aad
mov
cmp
push
stc
imul
dec
xor
xor
or
mov
sub
adc
cmp
push
xor
mov
ss
cmp
xor
push
sarl
int
fdivrl
movb
cmpl
data16
ss
daa
xlat
dec
js
and
add
dec
sub
push
xor
aaa
sub
aaa
daa
mov
mov
push
jno
xchg
xor
push
cmp
adc
imulb
pop
adc
jne
outsl
mov
mov
je
xor
insl
lock
daa
xor
inc
lds
rcrl
idivl
insb
xorb
xor
or
pusha
mov
pusha
mov
xchg
push
cmp
and
pop
aaa
dec
cmp
sub
cmp
cmp
sbb
insl
push
xor
adc
sbb
int3
mov
jns
mov
push
jl
push
mov
dec
jns
iret
xor
jnp
aaa
aaa
insb
mov
ja
cmp
add
fstpl
pop
mov
xor
and
mov
jne
push
push
cmp
movsl
pop
sbb
or
add
xor
rolb
push
mov
frstor
jns
addr16
xor
fistpll
ljmp
inc
aaa
dec
imul
mov
sub
cmp
daa
push
jl
inc
outsb
mov
xorl
jbe
and
imul
inc
stc
fnstenv
leave
adc
dec
std
imul
add
mov
jmp
pusha
xor
shl
nop
aaa
xor
shr
nop
aaa
aaa
mov
inc
es
sub
cmc
in
mov
fistl
pop
pop
adc
mov
cmc
out
imul
jl
out
jg
xor
mov
xor
mov
xor
gs
imul
inc
xor
sti
jns
and
in
imul
and
inc
fists
cmp
cmp
mov
sbb
mov
and
jg
ret
cmpb
jp
out
test
cmp
mov
sub
pop
sub
clc
adc
in
cmp
daa
and
cmp
jo
sbb
jno
jns
out
dec
jg
add
cmp
push
movsb
or
lret
es
aas
cmp
mov
dec
cmp
or
sbb
js
jge
lods
adc
add
sti
mov
pop
mov
or
xor
xor
adc
sub
cmp
jg
sub
push
mov
cmp
stc
or
fisubs
xor
mov
aaa
xor
test
mov
jbe
outsl
pop
add
stos
mov
fnstcw
sbb
mull
adc
or
xor
jns
and
inc
cs
sbb
inc
and
mov
pop
xor
cmp
xor
mov
inc
xor
adc
dec
xor
jg
xor
xchg
push
cmp
fidivrl
mov
mov
inc
jmp
adc
push
mov
fildll
push
push
and
inc
mov
outsl
cmp
xor
mov
cmp
xor
outsb
xor
xchg
jmp
sub
adc
cwtl
xor
adc
aas
mov
fisubl
ja
stc
sub
cmp
cmp
sub
push
rclb
das
shrl
pusha
daa
sub
mov
add
repnz
loope
sub
mov
cmp
pusha
addr16
mov
push
xor
into
add
cmp
and
sarl
xchg
push
jae,pt
sbb
xlat
cs
xor
cld
add
out
sbb
xor
pop
pop
add
xor
aaa
out
sbb
push
mov
outsl
xor
ds
mov
rcr
cmp
xor
aad
cmp
mov
dec
sub
mov
out
mov
xor
mov
cmp
inc
cmp
push
push
sbb
push
fwait
aas
xor
jp
inc
cmp
cmp
inc
xor
dec
xor
dec
or
pop
xor
stc
adc
daa
xor
fists
dec
bound
sbb
cmp
and
sbb
jle
fs
mov
or
xor
pop
lock
mov
repz
sqrtps
xor
cmp
pop
cmp
xchg
jne
add
or
mov
xor
add
cmp
addl
sti
cmp
and
mov
xor
cmp
xor
xor
push
push
dec
and
push
mov
add
out
mov
mov
lret
mov
mov
cmp
ss
nop
cmp
fucom
sbb
das
stc
clc
jno
out
mov
popa
pop
xor
mov
cmp
adc
and
cmp
xor
adc
imul
xor
dec
cmp
xor
int
pushf
daa
inc
push
into
sub
xchg
fst
leave
push
pop
mov
xor
cmp
mov
ja
xor
pop
fucomp
sbb
xor
cmp
dec
inc
xor
adc
rorl
cmp
xor
aaa
cmp
fildll
push
pop
add
ss
cmp
and
mov
and
add
xor
or
ret
mov
rcrl
push
and
jbe
cmp
xor
in
dec
xor
push
aaa
jne
jg
xor
mov
cltd
sbb
popa
fnstsw
mov
mov
xchg
xchg
outsb
stos
push
jne
push
push
cmp
ja
insl
rcrl
aaa
push
adc
xorl
or
mull
imul
mov
popa
dec
popa
push
cmp
mov
add
sub
loop
adc
xor
lret
icebp
hlt
fstl
roll
add
fwait
jns
enter
push
js
jecxz
pop
xlat
loope
mov
shrl
inc
jge
sbb
out
das
dec
cmp
xlat
sub
aad
imul
mov
adc
sub
cmp
pop
and
fildll
cmp
cmp
sub
push
add
stos
or
push
shrb
negl
mov
aaa
jecxz
fidivl
xor
aaa
xor
xor
fstp
jnp
enter
xor
inc
cmp
cmp
popa
js
xor
fnsave
xor
ret
sbb
sbb
push
xor
push
cmp
jno
pop
cmp
mov
pop
or
iret
into
ss
xor
and
jno
mov
aas
ret
mov
xor
enterw
xor
mov
into
fs
adc
fcomp
xor
cmp
mov
pop
sub
xor
add
xor
cmc
daa
mov
cmp
xor
cmp
sub
mov
daa
pusha
ss
mov
cmp
push
shlb
mov
sbb
cmp
enter
xor
jb
sarl
cmp
das
rcr
sub
xor
inc
ds
cmp
lret
and
and
int
dec
and
filds
je
xor
jg
fiadds
cmp
mov
es
mov
cmp
popa
pop
push
pop
enter
lods
popa
jb
lret
sub
mov
adc
mov
loope
js
enter
jae
xor
cmp
xchg
bound
imul
cmp
mov
cmp
ljmp
mov
and
and
cmp
faddl
mov
cmp
fdivs
jg
xor
mov
mov
jno
imul
adc
mov
jge
gs
cmp
jno
fldl
xor
mov
lods
adc
and
sub
inc
pop
xor
pinsrw
pop
xor
shll
imul
mov
into
or
scas
dec
cmp
cmp
xor
xor
adc
icebp
add
ss
dec
cmp
sub
xor
mov
xor
imul
or
mov
rcr
push
ss
cmp
xor
imul
cmp
fs
fs
fnstsw
mov
movq
xor
jae
push
std
jl
ss
and
sub
xor
lret
cmp
mov
or
or
cmp
cmp
jmp
inc
xor
cmp
or
push
sbb
xor
xorb
into
push
dec
cmp
mov
push
dec
and
inc
ds
inc
inc
and
repz
xor
fidivs
jns
aaa
fidivrs
pushl
cmp
int
clc
xor
and
xor
sti
jae
aaa
arpl
sub
sub
jnp
add
xor
mov
fcoml
cmp
sti
mov
cmp
outsl
cmp
shll
cmp
dec
lds
mov
mov
imul
aas
cmp
pop
xor
movsl
repnz
add
mov
lods
icebp
ja
cmp
iret
inc
sub
jbe
or
mov
repnz
and
xor
mov
add
mov
dec
int
dec
clc
jp
aaa
insw
outsb
add
mov
xor
mov
mov
aas
xor
fdivrl
mov
pop
in
cmp
out
int
adc
jbe
sub
jnp
xor
mov
xor
jp
sarl
inc
or
jle
xor
data16
sub
xor
xor
mov
and
insl
sub
xor
mov
adc
mov
add
rcrl
push
es
les
cmp
push
aad
cmp
inc
cmp
cmp
into
enter
fnstcw
and
cmp
sbb
xor
xchg
mov
aas
dec
je
sub
cmp
xor
cmp
dec
int3
or
int
push
mov
inc
xor
jnp
adc
aam
sarb
arpl
cmc
cmp
addr16
mov
jnp
pusha
mov
push
sbb
pop
cmp
shll
ss
adc
leave
mov
jge
adc
mov
push
or
fbld
sub
repz
int
addr16
xor
mov
cltd
jo
adc
pop
xor
add
fsincos
mov
cltd
xor
push
jge
or
in
outsb
clc
dec
xor
sub
aas
dec
xor
or
jbe
mov
xchg
cmp
sub
mov
outsl
jno
cmp
es
gs
and
and
ja
dec
push
imul
jo
cmp
pop
mov
mov
push
adc
mov
imul
cmp
xor
idivl
xor
and
fldenv
mov
ds
pop
push
pop
mov
mov
stc
outsl
fnsave
add
roll
jbe
add
inc
insl
rorl
ja
cmp
cmp
xor
outsl
mov
add
add
add
out
mov
cmp
cmp
outsb
insb
pop
lcall
adc
push
mov
mov
adc
mov
stos
ds
and
or
jb
pop
cmp
andnps
pop
jb
cmp
stos
xor
cmp
push
mov
cmp
mov
mov
cmc
cmp
das
inc
xlat
mov
sbb
sub
sti
xor
hlt
rcrl
mov
fdivl
mov
lock
fildll
cmp
jl
enter
ds
mov
fistpll
fistpl
jns
pusha
pop
cmp
mov
fs
xor
adc
mov
sbb
icebp
mov
insl
push
mov
push
loop
xlat
lahf
cmp
jno
xor
das
jl
adc
fs
jnp
mov
or
stos
enter
cmp
cmp
sbb
hlt
cmp
inc
leave
les
out
adc
inc
adc
mov
sub
xor
cmc
pop
clc
xor
fs
cmp
cmp
loop
xor
cmp
mov
pusha
dec
icebp
push
sub
ja
imul
loopne
mov
push
mov
sub
outsb
jb
xor
push
mov
lods
daa
aas
push
xor
ss
pop
xor
pop
xor
jae
ja
mov
mov
cmp
xor
fldcw
jae
mov
dec
pop
mov
xchg
xor
and
adc
cli
rcrl
mov
cmp
out
or
ss
jge
jbe
inc
mov
daa
orl
xor
popf
xor
xor
mov
xor
shrl
xor
xchg
xor
aas
dec
cmp
ss
xor
xor
and
mov
lcall
push
push
aas
clc
jb
lret
mov
cmp
adc
lcall
ja
inc
jns
xchg
sbb
mov
inc
sub
xor
imul
sub
enter
xchg
fwait
inc
dec
out
pop
imul
cmp
xor
jbe
addr16
bound
pop
xor
mov
aaa
fistps
fs
fsts
pop
sub
and
mov
cmp
push
xor
and
jno
fstpl
rorb
and
jp
pusha
jne
xor
xor
mov
pop
xor
outsb
fldcw
inc
aas
mov
jb
push
xlat
and
xor
fsubl
daa
aaa
outsl
les
aaa
jecxz
xor
daa
cmp
mov
aaa
lock
adc
cmp
jne
fstpt
xchg
aad
ja
popf
jnp
ret
gs
cmp
xor
jecxz
cmp
adc
pop
pop
mov
lds
mov
mov
je
cmp
cmp
xor
icebp
flds
dec
cmp
and
fsts
cmp
push
jle
ds
mov
iret
mov
fidivs
adc
sbb
xor
jl
aas
mov
repnz
jg
aaa
push
pop
xchg
dec
cmp
mov
ja
and
pop
dec
and
lret
inc
sbb
pop
xor
mov
aaa
fnsave
xor
jns
dec
ret
jno
ljmp
jmp
push
pop
cmp
xor
add
cmp
mov
jno
mov
in
mov
add
mov
mov
xor
xor
stos
cs
mov
pop
cmp
aaa
sbb
jg
in
daa
divl
cmp
xor
jne
push
stc
and
or
es
shll
mov
xor
nop
cmp
xor
daa
mov
leave
sahf
cmp
mov
cmp
inc
sub
push
cs
cmp
push
cltd
aaa
cmp
inc
sbb
adc
or
cmp
xor
repz
xor
and
or
mov
fnstenv
cmp
insl
mov
stos
cmp
push
ss
xor
add
mov
jo
mov
enter
push
xor
loope
mov
or
ss
push
and
mov
shll
inc
sbb
ja
push
and
icebp
xor
pop
adc
adcb
leave
pusha
xor
fnstsw
fiaddl
xlat
mov
fnstcw
xor
inc
aaa
imul
rcrb
outsb
inc
insb
aaa
pop
push
cmp
jg
mov
sub
sarl
mov
or
fidivrs
fisttpll
jo
mov
jecxz
je
sbb
inc
cmp
cmp
cmp
mov
mov
and
xor
ss
xchg
xor
xor
mov
fs
and
xor
adc
int
ret
pushl
loope
pusha
mov
mov
xor
cmp
fs
mov
mov
inc
and
fstl
xor
mov
xor
jo
cld
mov
inc
adc
ja
leave
and
rclb
mov
or
popa
cs
icebp
aaa
cmp
cmc
scas
cli
bound
dec
sbb
sbb
add
sbb
fstpt
mov
ss
add
cmp
daa
ret
movb
rcll
xor
mov
cmp
mov
pop
mov
imul
inc
xor
sbb
xchg
jne
stos
xor
xor
movsl
cmp
imul
jge
imulb
ds
stos
out
mov
inc
add
cmp
mov
cmp
push
sub
test
cmp
dec
xor
xor
popa
xor
stos
cmp
xchg
cmp
adc
xor
xor
mov
das
ss
jns
inc
and
je
cmpsb
dec
xor
mov
inc
cmp
cmp
mov
inc
pop
mov
je
dec
and
cmp
xor
sbb
mov
cmp
inc
das
mov
sub
xor
xchg
stos
sbb
dec
and
mov
adc
inc
sarl
stc
mov
cmp
div
mov
xor
rorl
gs
fwait
xor
imul
aaa
lret
mov
mov
mov
jbe
adc
loope
sti
and
not
aaa
cmp
aaa
jg
popa
fldl2t
rcrl
loop
jp
pushf
adc
cmc
cmp
pusha
fisttpll
sbb
shll
sbb
or
cmp
push
cmp
fnsave
xor
mov
xor
push
ds
push
test
sarb
xor
sbb
sahf
fldenv
pcmpeqb
shrl
mov
sbb
xor
or
cmp
cmp
inc
adc
mov
sub
xor
and
cmp
jnp
punpckhwd
arpl
cwtl
lds
xor
inc
das
shrl
adc
into
xor
das
mov
cmp
xor
mov
test
add
xor
es
inc
cmp
cmp
sarb
xor
inc
xor
mov
into
inc
cmp
mov
sbb
xor
mov
jbe
mov
pop
fstpl
pop
and
mov
cmp
sbb
mov
sbb
sub
inc
daa
ss
addr16
les
and
push
xor
inc
lss
push
js
xor
les
fxtract
cmp
xor
push
cmp
pop
cmp
pop
aaa
mov
cmp
mov
cmp
sub
mov
daa
mov
pop
pop
sub
insb
bound
sub
xor
movb
outsl
into
xor
adc
addr16
mov
mov
int
aad
arpl
adc
testl
cmp
mov
inc
sub
dec
pop
cmpb
fs
sbb
xor
int
inc
adc
into
inc
jno
and
ss
sbb
push
dec
sbb
xchg
cmp
xor
mov
cmp
aaa
fldl
jg
jno
mov
movb
and
fldenv
loopne
xor
inc
cmp
insl
mov
add
or
sbb
and
push
mov
shll
xchg
xor
pop
in
aaa
adc
push
cmp
xor
repz
fiaddl
mov
cmp
scas
mov
fs
jnp
shll
mov
jnp
inc
aaa
adc
xor
xor
inc
aaa
mov
jo
ror
xor
dec
sub
xor
inc
xor
mov
xor
sbb
shll
push
and
cmp
xor
pop
inc
jno
mov
and
testl
mov
adc
mov
insb
ss
mov
hlt
cmp
xor
mov
das
iret
mov
xor
mov
mov
and
jbe
sti
pop
and
and
sbb
xor
out
and
dec
sbb
mov
inc
adc
or
inc
aaa
ss
xor
cmp
jne
xor
and
ds
sarl
cmp
mov
sti
xor
icebp
inc
hlt
pop
pop
adc
lock
sub
cmp
mov
inc
sub
vmovddup
je
insb
outsl
xor
and
and
inc
pop
jg
fnstcw
lds
cmp
xor
xchg
pusha
push
jge
and
cmp
ss
or
dec
and
mov
sub
or
shl
shl
sub
aaa
arpl
dec
xor
fidivs
les
lock
hlt
lahf
cmp
into
enter
lock
or
xor
cmp
cmp
push
sti
sub
sub
adc
pop
or
pop
mov
stc
pop
cld
add
cmp
and
outsl
sbb
adc
fidivl
fstpl
push
xor
aaa
rcrb
xor
ss
xor
adc
xor
or
dec
ss
jne
inc
xor
inc
cmp
fadd
push
cmp
in
int3
cmp
mov
dec
cmp
divl
shlb
add
stc
cmp
mov
and
jb
arpl
data16
add
or
dec
ja
iret
lret
dec
cmp
int
dec
jne
int
lds
push
mov
xor
push
negb
jb
xor
push
xor
mov
push
xor
dec
and
mov
dec
push
fdivs
icebp
cmp
mov
shrl
mov
add
cmp
jno
movb
shrl
mov
xlat
aas
jg
xlat
xor
jb
fists
cmp
mov
pop
xor
cmp
pop
ja
rcrl
dec
xor
and
cmp
and
sub
mov
sbb
xlat
es
adc
outsb
je
sub
lahf
mov
fstp
or
cmp
shlb
jl
cmp
inc
sub
adc
je
cmp
inc
sub
ds
sbb
inc
cmp
cmp
jle
aad
jl
ss
adc
mov
punpcklwd
xor
dec
icebp
aaa
push
les
mov
pop
movsl
shll
push
mov
add
jne
mov
cmp
mov
cmp
cmp
mov
fisttpll
xor
push
mov
les
dec
and
mov
cmp
jp
xor
mov
sub
add
fisttpll
and
pop
insb
outsb
pop
movsl
adc
xchg
sub
cmp
cli
jge
addr16
aas
cmp
jo
mov
bound
rcll
sub
xor
gs
mov
adc
cltd
cwtl
pop
lret
and
cmp
lea
pusha
adc
cmc
or
xor
fstpt
insl
icebp
cmp
cmp
and
mov
dec
pop
pop
pop
mov
xor
pop
cltd
pop
xor
sub
out
push
ss
out
cmp
aad
cmp
cmp
adc
bound
xor
sub
das
imul
cmp
ss
fs
pop
popf
mov
sbb
jns
setne
adc
jae
add
and
xchg
fidivl
adc
fidivl
loopew
cmp
addr16
xor
fdivrs
insl
xor
or
mov
les
push
adc
rcrl
ss
aaa
fidivrs
stc
or
jbe
jns
push
push
jno
sbb
imul
cmp
xor
or
shl
mov
sbb
jne
cltd
in
adc
cmp
loope
stc
into
enter
fcoml
cmp
adc
sbb
add
lret
sbb
mov
int
daa
ficoms
dec
adc
je
sarl
fsubl
mov
jge
fmull
push
mov
ss
push
xor
mov
aad
mov
jg
mov
xor
xor
add
mov
adc
mov
je
pop
inc
xor
js
sarl
int
mov
cmc
dec
ss
lds
xor
sub
wrmsr
xor
mov
cmp
fstpl
xchg
dec
loope
pop
mov
sbb
sbb
pop
sub
cmp
outsb
inc
in
mov
lret
ffree
xor
mov
ret
adc
and
jle
inc
add
or
adc
mov
cmp
orb
mull
mov
xor
gs
cmp
sub
sub
adc
xor
aaa
adc
fistps
shr
inc
fs
ss
add
mov
cmp
sahf
popa
xor
pop
cmp
ss
je
push
mov
xlat
mov
sbb
xor
inc
and
xor
push
pop
cmp
leave
fstp
cltd
push
mov
xor
pop
add
push
cmp
dec
aad
mov
sarl
inc
fs
fbstp
xor
push
cmp
push
xor
mov
jle
cmp
movb
fnstsw
je
cmp
xor
push
cmp
loope
fstp
jns
xor
jno
fists
cmp
mov
jne
movb
sbb
jp
sub
icebp
jb
sub
cmp
idivb
mov
jg
cmp
gs
sarl
jns
fstp
test
cmp
mov
jl
aaa
xor
jo
movb
and
je
and
pop
adc
enter
es
xor
xor
xor
xor
push
rcr
sbb
fidivl
cmp
mov
outsb
adc
add
jecxz
cmp
cwtl
sbb
shl
shrb
les
push
ljmp
xor
aad
ja
sub
xor
addr16
fnsetpm(287
adc
aaa
stos
and
pop
aaa
imul
pop
cmp
mov
ja
mov
lcall
or
mov
cmp
xchg
sbb
xor
stc
sub
pop
push
xor
xor
iret
fstl
cltd
sarw
adc
add
imul
push
and
iret
fnsave
xor
pop
aaa
scas
sbb
lahf
xor
out
pusha
movsb
icebp
sub
mov
imul
push
cmp
sub
inc
imul
cmp
mov
int
mov
inc
inc
push
and
pop
mov
jecxz
push
push
add
or
dec
lds
addb
dec
leave
xlat
pop
ljmp
push
push
mov
sub
dec
xor
and
outsb
pop
incl
fstpl
dec
sbb
adcl
popa
dec
xor
xor
shll
aaa
xchg
mov
mov
movsl
leave
ret
jmp
shrb
test
fstps
cmp
or
inc
and
xchg
into
inc
std
rcl
sbb
sub
insl
cmp
jo
sub
xchg
loope
and
jecxz
cmp
jecxz
jmp
and
aaa
xchg
and
cmpsb
xor
pop
pop
xor
cmp
aas
pop
xor
cmp
lods
add
mov
mov
add
fstpt
sbb
or
pop
mov
cmp
mov
addl
sub
mov
cmp
pop
jg
and
and
push
fcoms
shll
pushf
sbb
jg
mov
insl
jmp
sarl
testl
aas
mov
repz
testb
cmp
inc
shlb
cmp
ja
add
xor
mov
out
cmp
mov
adc
cmp
sub
dec
bound
jae
cmp
divl
fldcw
ficoms
dec
or
add
cmp
pop
xchg
imul
xor
cmp
and
test
fisubrs
jle
push
xor
cmp
push
cmp
roll
xor
je
xor
mov
push
cmp
cmp
and
aaa
or
mov
and
imulb
fxch
cmp
xor
icebp
fidivs
jne
add
adc
mov
xchg
cmp
andb
add
bound
dec
fldt
xor
ror
dec
add
or
imul
xchg
dec
mov
pop
cmp
xor
mov
push
mov
and
je
roll
push
push
das
adc
mov
sub
push
movsb
les
jne
shll
les
es
jb
lahf
shl
pop
xorl
cmp
fstl
rorl
sbb
scas
cmp
cmp
inc
pop
cmp
cmp
xchg
adc
mov
and
inc
and
cmp
shlb
test
jno
mov
lods
xor
cmp
mov
lahf
dec
aas
test
fnsave
inc
in
into
out
ss
lret
and
mov
pop
xor
inc
mov
push
or
mov
sbb
repnz
xor
push
or
cmp
cmp
dec
xor
int3
addr16
aaa
pop
xor
cmp
push
mov
shlb
xor
arpl
xchg
xor
imul
fs
iret
mov
dec
xor
xor
push
loopne
lea
jnp
bound
aaa
and
jg
xor
push
clc
ss
xor
sub
mov
fs
into
enter
inc
daa
gs
inc
adc
jl
daa
inc
sarl
lret
std
jge
cmp
addr16
adc
xor
xor
sub
jb
cmp
aaa
pop
aas
push
icebp
mov
mov
adc
lret
icebp
cmp
mov
cmp
cmp
xor
pop
pop
xor
jne
cmp
mov
lret
pushf
mov
fbld
cmp
adc
and
sub
daa
adc
cmp
and
xor
or
sbb
cld
aaa
aaa
mov
xor
lret
xorb
punpcklwd
mov
mov
mov
and
addr16
add
sub
mov
add
cmp
repz
adc
mov
and
push
xor
dec
xor
mov
xor
mov
and
xor
fs
shrb
fs
cmp
cmpl
aas
mov
mov
insl
push
xor
sub
and
inc
xor
xor
cmp
enterw
shll
xchg
cmp
mov
ror
aaa
mov
cmp
inc
and
lret
mov
aam
mov
jl
push
mov
sub
mov
cmp
mov
cmp
add
ds
enter
xor
ss
mov
hlt
or
mov
xor
mov
lea
gs
xchg
jnp,pt
pop
lea
cmp
adc
imulb
jne
sbb
cmp
xor
in
xor
adc
loopne
xor
add
insl
dec
xor
mulw
mov
bound
mov
cmp
in
dec
pusha
push
xor
mov
aam
mov
push
std
xor
addr16
fdivs
mov
or
push
mov
xor
std
fstp
leave
xor
xor
pop
jnp
jne
push
mov
roll
and
xor
mov
data16
ljmp
inc
sbb
xorl
aas
gs
test
lret
jne
adc
lods
mov
hlt
ds
dec
cmp
outsl
cmp
cmp
mov
dec
subl
adcl
std
mov
fstpl
xor
mov
icebp
fs
outsb
mov
cmc
mov
jae
mov
jmp
cmp
or
xor
dec
sbb
ja
js
inc
adc
inc
adc
or
hlt
xor
filds
cmp
cmp
jnp
les
into
add
add
jp
lods
mov
jle
xor
mov
cltd
xlat
dec
pop
mov
pop
or
pop
mov
int
pusha
mov
iret
mov
xlat
mov
and
aad
push
mov
mov
dec
and
pop
fldenv
enter
add
mov
mov
cmp
sbb
dec
aad
movntps
pop
pop
pop
repz
icebp
fldl
rcrl
addr16
cwtl
nop
jne,pn
cmp
fs
mov
imul
cmp
xor
add
sti
xor
adc
sbb
mov
push
cwtl
xor
cmc
and
sub
mov
sub
rcll
ljmp
xor
or
into
jbe
cmp
fbld
pop
aaa
sysenter
jnp
add
push
std
dec
cmp
xor
mov
ss
lds
inc
iret
ss
mov
cmp
mov
je
mov
cmp
add
mov
push
cmp
xor
cwtl
jo
adc
cmp
push
mov
push
pop
mov
clc
insb
inc
int
roll
repnz
xor
inc
cmp
cmp
push
jo
dec
mov
mov
mov
cmp
mov
fnsave
push
xor
xor
jnp
je
int
shl
add
cmp
jge
jmp
mov
adc
dec
sbb
mov
sarl
ss
fisttpll
push
xor
xchg
push
jp
xchg
jbe
add
xor
les
test
mov
mov
ret
xchg
cmp
cmp
add
cmp
jp
test
pop
sbb
adc
xlat
sub
xchg
or
mov
hlt
xor
popa
aaa
cmp
shrl
xor
or
icebp
xor
sar
pop
xor
cmp
sbb
adc
int
xchg
popa
jnp
icebp
and
roll
xor
stos
icebp
inc
aas
mov
lds
js
push
loopne
push
push
mov
add
loopne
ret
pop
dec
inc
push
xor
and
and
and
fs
push
test
jbe
push
mov
sub
aaa
push
cwtl
js
popa
fldl
stc
xor
imul
imull
mov
pop
xor
aas
ret
mov
add
hlt
es
jp
sub
and
je
push
js
fs
cmp
xor
xor
adc
fnstsw
insl
imul
jne
push
mov
ds
sarl
cmp
mov
mov
push
jp
cmp
push
imul
arpl
mov
mov
and
or
inc
shlb
mov
jnp
divl
or
cld
or
nop
xor
adc
aaa
mov
sub
push
xor
or
lret
roll
adc
ja
mov
jns
xor
inc
out
push
fdivrs
xchg
aaa
jg
hlt
mov
dec
das
mov
je
xor
and
test
add
inc
jnp,pt
mov
add
push
outsl
cmp
fs
mov
adc
xor
mov
or
cmp
mov
cmp
cli
dec
cmp
mov
mov
or
inc
xor
jno
repz
cmp
cmp
lret
cmp
add
inc
cmp
jbe
push
stc
add
mov
jns
bsf
jb
xor
mov
and
xor
sbb
aaa
xor
and
adc
mov
dec
aas
mov
dec
sub
cmp
repnz
insl
pop
aaa
test
insb
and
mov
dec
xor
into
inc
cmp
push
xchg
adc
pop
test
outsl
fisttpll
xorl
jo
dec
cmp
mov
mov
xor
xor
push
ret
dec
push
mov
les
fnsave
xor
fdivrl
mov
cmp
xchg
jecxz
mov
imul
or
xor
aas
sbb
jecxz
aas
add
jns
cmc
inc
int
ret
aaa
and
xor
xor
dec
xor
dec
and
cmp
imul
lret
inc
pop
ja
or
mov
cmpsb
xor
cmp
std
inc
into
sarb
mov
into
lds
push
addr16
sysexit
test
xor
pop
pop
mov
imul
cmp
adc
xor
mov
mov
push
ss
mov
mov
cmp
xor
fstps
cmp
and
ret
cmp
sub
mov
and
out
and
xor
aaa
ljmp
cmp
xor
sub
pop
pop
mov
xchg
je
outsl
mov
sub
les
out
aaa
loope
xchg
and
outsl
ds
add
fidivl
enter
sub
ds
lret
cmp
call
push
push
dec
or
adc
lret
lds
enter
mov
xchg
cmp
sbb
divl
imul
add
xor
inc
jmp
mov
adc
inc
outsl
popa
flds
mov
sahf
xchg
cmp
pop
mov
inc
mov
inc
ds
insb
mov
bound
mov
fsts
pop
aas
leave
cmp
fsubp
cmp
dec
inc
jmp
adc
push
push
xor
mov
inc
jns
shll
dec
or
push
leave
xor
gs
les
lock
xor
pop
cmp
fidivrl
aaa
or
loope
es
jge
and
push
mov
or
xchg
ss
icebp
mov
pop
sbb
or
sbb
rcr
nop
aaa
sbb
shl
xchg
aaa
mov
jo
call
or
jo
jmp
mov
jb
imul
mov
add
xor
mov
bnd
pop
push
cmp
aaa
mov
xor
xor
cmp
xor
int3
xor
pop
xor
xor
les
js
jge
sahf
add
idiv
mov
push
or
in
add
fnstsw
adc
gs
je
jl
xor
and
mov
js
shrl
sarl
cwtl
mov
les
mov
push
cmp
pop
cmp
jmp
icebp
insb
jnp
shlb
pop
cmp
mov
stc
int
dec
aaa
add
mov
mov
cmp
mov
mov
inc
stos
mov
mov
repz
mov
ss
mov
mov
xor
xchg
dec
cmp
inc
xor
sub
inc
cmpsb
mov
test
je
mov
les
xchg
dec
xor
imul
test
pop
rcrb
dec
xor
mov
lret
cmp
jp
dec
sarl
jle
sub
sub
cltd
mov
aaa
sbb
sbb
cmp
je
cmp
jl
aaa
mov
cmp
shlb
out
loope
cmp
es
mov
aas
rcl
shll
push
jl
mov
aas
adc
je
mov
shl
jnp
dec
cmp
mov
aaa
das
dec
jp
inc
or
jl
and
inc
fisttpl
jle
mov
hlt
fst
mov
mov
daa
ss
xlat
cs
cmpsb
in
cmp
test
shll
xor
xor
inc
cmp
cmp
pop
addb
xor
pop
add
mov
pop
mov
pusha
test
enter
add
insb
push
adc
sti
fsts
mov
aaa
sbb
es
or
add
shrb
sbb
xor
push
cmp
xchg
gs
clc
jbe
jmp
push
or
mov
mov
nop
xor
fcmovnbe
out
xchg
lock
int
xor
cmp
sbb
xor
mov
xor
rorb
fstl
jb
fisttpl
push
sbb
cs
xor
add
insb
aaa
shll
shll
adc
mov
ret
insl
shll
xchg
xor
aaa
mov
add
fwait
sbb
mov
mov
and
sbb
movsl
das
push
xchg
jnp
scas
cmp
daa
jp
inc
adc
sarl
and
mov
sub
mov
xor
inc
and
lock
aaa
mov
jge
inc
adc
not
imul
push
cmp
cmp
mov
inc
mov
sub
cmp
mov
mov
mov
cmp
sub
inc
xor
dec
aas
ds
xor
inc
sub
jmp
and
daa
jnp
outsb
aaa
imul
aaa
pusha
mov
mov
bound
cmp
mov
cmp
push
shlb
lret
into
inc
or
cmp
mov
and
clc
inc
and
mov
mov
daa
lret
xor
shlb
stc
inc
aaa
and
xor
xor
push
inc
daa
lret
or
loope
repz
pop
dec
ss
jns
packsswb
aaa
pop
insb
mov
xor
push
and
imul
ror
xor
cmp
cltd
cmp
add
jne
dec
cmp
sub
aaa
fldl
xor
xor
adc
add
inc
outsl
fldcw
neg
out
xor
mov
jne
push
inc
sti
je
cmp
inc
cmp
aaa
popa
mov
sub
xor
adc
imul
and
adc
es
mov
mov
sbb
sub
mov
mov
les
or
cmp
inc
jbe
mov
cmp
xor
xor
adc
dec
xor
mov
add
fnsave
sub
inc
sub
mov
cmp
mov
and
ds
filds
cmp
pusha
aaa
add
cmp
add
shlb
movsb
aaa
jne
cmp
and
loope
sub
sbb
xor
mov
jge
sar
aaa
adc
inc
xor
inc
jns
xor
rorl
mov
imul
push
aaa
cmp
mov
ret
lret
pop
mov
mov
shll
ds
cmp
push
sub
jne
and
je
xor
mov
dec
daa
xor
sub
xor
xor
cmpsl
mov
cmp
jno
cmp
cmp
pop
ds
xor
mov
mov
arpl
push
mov
leavew
lret
aaa
mov
push
mov
xor
mov
clc
lock
jo
mov
fisttps
int3
xor
mov
ss
adc
fnstsw
xor
mov
cmp
lds
and
jbe
jns
xchg
into
aaa
fs
cmp
xor
lret
push
jg
jo
cmp
jb
roll
mull
lret
mov
mov
fbstp
xor
sub
and
pop
inc
cmp
cmp
pop
mov
xor
inc
lret
movb
sar
or
outsl
jge
pop
cmp
jno
fstpl
xor
shll
and
ja
jnp
mov
mov
fnstsw
jo
xor
shll
jo
sub
popa
jb
hlt
xchg
insb
xor
push
js
sub
mov
cmp
cmp
cli
sbb
aaa
adc
sarb
and
inc
sub
jne,pt
sub
sub
outsl
xor
rcll
dec
sub
add
jle
xor
pusha
icebp
mov
int
imul
xor
push
push
cmp
fstl
sbb
mov
cmp
lock
mov
add
cmc
mov
pop
cmp
cmc
stos
jns
mov
pop
sbb
sub
dec
and
pop
push
fxch
cmc
cmp
cmp
cmp
mov
popa
sbb
xor
ja
js
mov
sarl
jo
xor
sbb
int
dec
add
xor
mov
leave
popa
aaa
inc
xor
dec
lret
xor
xor
mov
sub
push
daa
ss
fs
xor
jp
fwait
xor
cmp
stc
cmp
add
into
mov
test
ss
cmp
cmc
cmp
mov
jne
push
sub
fdivs
mov
shll
lret
push
mov
cmp
inc
adc
in
cmp
sbb
mov
xchg
jge
flds
cli
mov
cmp
pop
cmp
les
stos
clc
leave
aad
xorl
aaa
arpl
jo
sbb
dec
cmp
fidivl
jb
inc
sub
pop
mov
mov
mov
xor
xchg
sbb
jns
sbb
mov
pop
das
insb
xchg
aaa
xor
imul
dec
sbb
pop
mov
cmc
xor
std
xlat
mov
fisttpll
pop
or
sub
dec
sbb
ja
notl
or
ficoms
xor
cmp
mov
cmp
or
xor
cmp
ss
xor
mov
sub
cmp
imul
arpl
fnstenv
xlat
adc
cmp
adc
sub
insl
xchg
add
cltd
lods
or
ja
sub
mov
imul
movsl
sub
jo
lret
jnp
adc
mov
push
cmp
adc
and
pop
imul
cmp
xor
and
xor
aas
adc
enter
or
cmc
sub
jne
add
cmp
inc
sbb
sub
addr16
stc
cmp
lret
adc
adc
divl
push
lock
mov
sub
xor
aaa
das
cmp
ds
and
pop
pushf
cmp
and
cmp
aaa
and
cmp
cmp
jmp
aam
call
mov
sti
mov
imul
or
je
clc
jmp
adc
flds
adc
xor
jns
fcoml
cmp
pop
add
xchg
cmp
imul
pop
xor
cltd
pop
enter
addr16
or
in
push
add
outsl
fisttpll
mov
cmp
divl
fbstp
popa
lret
cmp
bound
push
cmp
pop
and
cmp
inc
inc
sbb
add
stc
dec
sti
mov
rorl
cmp
inc
xor
ror
cld
xor
mov
ds
movsl
aaa
jns
and
and
ja
cmp
shll
sub
xor
pop
stc
xor
ficomps
adc
test
shll
in
sbb
sbb
sbb
dec
int3
xor
jne
sarb
add
xor
add
mov
mov
mov
flds
xor
rcl
in
dec
sbb
xlat
cmp
sti
xor
mov
cmp
inc
cmp
mov
push
inc
and
les
testl
sub
xor
and
rcrl
xor
pop
pop
into
or
out
in
ss
loop
push
loope
sbb
sarl
pop
add
sbb
test
inc
cmp
pop
and
xor
xchg
gs
and
fsts
test
sub
push
xor
adc
jne
dec
xchg
fisttps
test
js
or
js
jnp
sub
jo
leave
cmpsl
sbb
xorb
or
pop
pop
push
or
aaa
dec
ds
sbb
fists
stc
adc
xor
fiaddl
cld
jg
xor
lods
das
dec
adc
inc
sub
xor
das
pop
cmp
lds
sub
aaa
and
jno
je
jae
jae
daa
sbb
aas
fidivrs
sbb
and
test
outsl
push
sub
xor
orl
ja,pt
xor
sti
cmp
sub
divl
xchg
bound
inc
mov
data16
mov
jae
je
das
ficomps
cmp
ss
daa
pop
mov
jno
xor
lahf
cmp
cmp
cmp
xchg
jnp
push
jne
and
mov
jae
mov
sarb
fldcw
imul
add
xchg
bound
outsb
inc
adc
mov
fmul
mov
insb
into
loope
bound
std
aas
addr16
shlb
aad
mov
adc
sti
iret
sahf
pop
jno
cltd
pop
inc
mov
xor
daa
ss
je
aas
fstpl
js
xor
mov
sbb
xor
bound
mov
mov
adc
cmp
popf
incb
mov
dec
imul
and
imul
pop
xor
xor
sub
xor
fistpll
flds
jo
sub
sbb
testl
xor
xor
dec
aaa
mov
adc
inc
xor
mov
aad
bound
cmp
pop
aaa
jne
cmp
cld
enter
lods
jl
fstps
xor
icebp
fsubl
push
xchg
push
repnz
inc
xor
pop
add
aaa
xor
dec
pop
cmp
or
mov
jns
inc
es
popa
cmp
mov
cmpsb
push
mov
sbb
inc
in
add
mov
test
mov
mov
std
jl
out
aaa
pop
cmp
int
dec
xor
lret
popa
pusha
repnz
cmp
and
add
and
addr16
mov
cmp
mov
fnstenv
xchg
xor
mov
push
jno
add
cmp
and
jle
sbb
xor
jnp
outsl
icebp
fistpll
cmp
or
xchg
test
scas
pop
cmp
sti
mul
cmp
adc
dec
jge
dec
xchg
lods
je
fs
dec
popa
cmp
mov
loopne
imul
push
xor
and
pop
mov
xchg
and
jge
cmp
sub
inc
and
push
xor
int
rcrb
xor
xor
stc
sub
push
sti
jns
cmpsl
aaa
or
clc
xchg
and
xor
lret
dec
ss
leave
mov
sarl
bnd
loope
xor
lret
mov
pop
pop
jp
pusha
bound
popa
aas
xor
sub
mov
cmp
inc
cmp
cwtl
cmp
xor
mov
xor
pop
sub
aaa
mov
aaa
cmp
xor
lds
mov
cmp
aaa
push
mov
leave
enter
in
enter
jno
mov
stc
ds
cmp
data16
xor
cmp
pushaw
lret
int
dec
iret
and
xor
or
int
mov
jb
test
cmp
mov
jb
imul
shll
aaa
push
dec
fnstsw
and
xor
xor
xor
xor
mov
cmp
cmp
mov
xor
mov
cmp
aas
push
mov
xor
mov
xor
push
add
mov
xor
add
xor
sarl
mov
leave
xor
mov
aas
dec
inc
jne
push
cmp
fbstp
jo
xor
xor
cmp
xor
xchg
ret
ss
xor
lds
aas
aaa
and
cmp
pop
aaa
mov
xor
push
fnstenv
xor
xor
mov
or
dec
xor
jo
sbb
and
mov
jp
push
push
mov
cmp
adc
xor
jb
mov
xor
pop
mov
mov
shrl
clc
hlt
arpl
pop
mov
add
rcr
cwtl
mov
cmp
lds
rclb
mov
add
sbb
pop
cmp
aad
outsl
jbe
and
daa
jnp
xor
aaa
mov
sarl
test
xor
or
imul
mov
xor
inc
addr16
les
insl
pop
mov
aaa
shll
push
mov
fists
pop
cmp
cmp
aas
pop
cmp
icebp
sub
cmp
sub
iret
aaa
dec
dec
jno
or
jno
shll
xor
lret
xor
jb
or
je
and
imul
pop
aaa
aaa
and
adc
popa
js
sbb
push
cmp
and
add
stos
xor
mov
imul
cmp
ret
jnp
pusha
arpl
mov
iret
add
lret
fldenv
jne
stc
cmp
mov
cmp
or
dec
pop
mov
and
imul
ja
test
idivb
jg
inc
leave
inc
out
daa
cmp
or
pop
hlt
aaa
xor
lret
xor
fs
xor
mull
sub
push
mov
inc
add
or
div
daa
sub
cmp
icebp
pushf
int
inc
fisttps
jns
fdivl
push
sbb
jecxz
shl
repz
xor
cmc
adc
data16
jnp
xor
dec
and
mov
xor
cmp
repnz
imul
push
sbb
jecxz
cmp
inc
cmp
aaa
jno
incb
imull
bound
sti
sub
addr16
jb
inc
mov
shl
jb
push
insb
add
push
dec
and
imul
icebp
pop
dec
cmp
mov
fnstcw
cmp
adc
or
iret
shll
shl
rorl
xor
jbe
insl
shl
xorb
ds
cmp
fldl
ss
xor
mov
adc
jge
mov
cmp
add
jno
js
stc
jno
jle
rcll
cmp
jne
movsb
idivb
mov
xor
insb
cmp
adc
sarl
ss
add
into
add
jns,pn
aam
and
fldenv
je
leave
mov
daa
das
cmp
fnstcw
cmp
icebp
mov
cmp
sub
xchg
aaa
aaa
jle
jb
push
push
push
outsl
mov
int
jge
jmp
cltd
and
jb
cli
mov
push
mov
jbe
test
pop
sbb
mov
loope
jecxz
dec
jmp
lds
xor
mov
sti
dec
dec
jmp
ja
cmp
rcl
cmp
inc
dec
add
inc
stos
cmp
pop
imul
pop
fnstsw
pop
pop
mov
cmp
testb
data16
sti
and
ret
gs
cmp
and
ljmp
iret
inc
mov
aaa
aas
mov
xor
int
dec
and
je
std
cmp
icebp
xor
mov
roll
add
into
lds
bound
imul
arpl
test
add
pop
xchg
cmp
xchg
popa
and
push
xor
cwtl
sti
inc
push
aaa
mov
les
frstor
cmpsb
push
int3
cmp
shll
mov
icebp
sahf
xchg
ljmp
aas
xlat
in
mov
fcoms
push
mov
xor
shll
insl
push
je
cmp
rcll
mov
and
lods
push
sbb
fists
adc
xchg
out
or
pop
aaa
out
cmp
repz
loopne
pop
cltd
jl
xor
xor
cmp
mov
popf
push
fidivl
sub
ss
xor
icebp
sbb
add
aaa
xchg
ljmp
mov
shll
in
fldenv
xor
pop
cmp
xchg
jp
mov
cltd
dec
fldenv
ss
cmp
cmp
ja
fwait
mov
xor
aaa
rolb
xchg
out
adc
xor
cs
imul
sub
sbb
pop
sub
xchg
xor
mov
sub
cs
xchg
pop
rcrl
hlt
pop
fsubl
movsl
cmp
aad
fdivs
jmp
push
cwtl
add
lods
push
fstpt
shll
sub
mov
fldenv
jns
outsl
pop
cmp
sbb
cmp
xlat
cmp
push
pop
pop
fdivrl
add
xor
ds
fidivrl
into
jmp
fst
sbb
shll
into
rcll
pop
xor
enter
fstpt
imul
cwtl
ljmp
mov
fs
jge
lret
xor
in
adc
adc
mov
shll
pop
pop
xor
sbb
pop
pop
push
sub
and
out
fcoms
add
xchg
xchg
notl
xlat
xor
aam
pop
shlb
fnstenv
push
nop
iret
mov
cmp
push
int3
fsubs
dec
add
rclb
aas
jno
out
arpl
xor
push
lcall
jle
cmp
cmp
rcrl
sub
xchg
sbb
insb
icebp
les
or
mov
cmp
getsec
les
xor
aaa
push
inc
ds
pop
sub
sub
cwtl
leave
ds
cmp
pop
popf
xchg
dec
cmp
movsb
inc
and
or
and
pop
or
shrl
mov
sbb
outsb
ja
sti
inc
jns
dec
sbb
aaa
cmpsl
addr16
jo
or
loope
xchg
in
lods
add
cwtl
dec
adc
mov
pop
shlb
jo
add
add
mov
jmp
sbb
mov
cmp
shl
cmp
aad
and
sub
out
sbb
repz
lods
mov
pop
xor
cmc
push
mov
mov
mov
push
pop
imul
add
jns
je
sarl
cmp
pcmpgtw
mov
jno
mov
pop
in
movsb
mov
xor
stc
inc
pop
mov
fstl
xor
mov
test
mov
aas
frstor
xor
pop
das
mov
pop
xor
jne
mov
popa
in
shll
mov
insb
dec
add
or
aas
insl
out
adc
xlat
pop
pop
cmp
cltd
and
cmp
in
sub
and
negb
mov
push
pop
pop
fwait
call
jmp
js
insl
sub
lcall
xlat
xor
imul
mov
adc
mov
xchg
popa
fisubrl
jmp
mov
push
mov
add
fimull
or
mov
xor
push
push
leave
xor
pop
fxch
push
pop
cs
jo
inc
cmp
mov
inc
sbb
leave
push
addl
mov
xchg
jmp
pop
mov
lea
pop
or
add
xor
xor
mov
mov
lret
rcrb
and
movsl
inc
adc
divl
mov
push
jo
lds
enter
mov
int3
rclb
movsb
xor
inc
jae
adc
stos
sub
add
or
adc
rcr
jb
add
adc
xor
mov
movb
insb
push
cmc
leave
xor
xor
push
enter
cmp
or
roll
out
push
lds
dec
sbb
cmovnp
add
push
aas
stc
pop
test
push
adc
sub
gs
mov
je
shlb
add
mov
pop
add
loop
fnstsw
dec
xor
inc
cmp
jp
je
add
fcmovnbe
xchg
push
adc
aas
mov
and
pop
cmpl
lahf
addr16
push
pushf
and
in
inc
jl
or
sub
and
andb
add
xchg
ljmp
inc
push
mov
in
lcall
jmp
aaa
xor
push
sub
xor
pop
aam
mov
outsl
out
push
jae
nop
jle
mov
imul
fbld
jmp
lret
das
inc
dec
ja
das
cmp
or
imul
jae
add
outsb
adc
stos
pop
sti
out
and
das
sbb
inc
add
add
test
je
adc
jmp
add
lret
inc
das
add
and
insl
push
pop
inc
sub
jp
cmp
add
adc
sub
cmp
or
fmulp
sub
lds
mov
in
stos
pop
lods
clc
rorb
and
leave
lds
lret
ror
in
and
jge
cmpl
mov
add
enter
rcrl
andl
push
or
inc
push
pop
xchg
add
pop
add
les
push
cmp
inc
and
adcl
mov
arpl
test
cmp
cs
jns
mov
xor
sub
lock
push
frstor
sub
adc
push
cmpb
and
ffree
xor
dec
sub
xlat
dec
add
cmp
flds
jecxz
add
push
out
add
xchg
jl
xor
scas
dec
cmp
xor
sbb
jge
mov
add
adc
outsl
push
jp
shll
lods
and
dec
cs
sbb
cmp
push
mov
test
mov
maxps
inc
sub
pop
andl
mov
lret
push
insl
or
aaa
das
mov
sbb
lods
inc
adc
arpl
inc
inc
add
mov
push
xchg
xchg
in
pushf
sarl
pop
mov
ljmp
xchg
jne
lret
cmp
cmp
mov
in
popf
add
inc
and
dec
sbb
push
inc
js
xor
sub
cmp
sub
xchg
add
jns
cmp
push
xchg
loope
mov
push
push
out
dec
mov
test
aaa
xor
js
push
les
dec
cmc
jno
lcall
mov
xor
push
test
pop
fldl
mov
mov
add
in
ljmp
lret
add
mov
adc
and
mov
sub
imul
popf
xor
out
inc
mov
aas
cmp
jbe
gs
ds
aaa
and
cmp
jo
ds
rcrb
push
jne
push
inc
mov
xor
jo
jae
shll
cmp
push
push
xor
adc
mov
mov
das
cmp
xchg
and
xor
sub
mov
push
ss
aaa
test
loope
fst
popl
sarl
jecxz
ss
shl
add
aad
pop
sub
shl
add
int
pop
ss
sarl
pushf
push
xor
loop
or
sbb
fldcw
aaa
mov
xor
mov
mov
mov
xor
subb
cmp
xor
inc
mov
test
push
fildll
jne
pop
imul
jno
mov
xor
lret
ret
xorl
incb
hlt
pusha
jnp
fnsave
packsswb
or
pusha
mov
xor
imul
enter
mull
lds
aaa
jne
mov
or
xor
xor
dec
cltd
sbbl
aaa
pop
ror
out
sub
imul
and
add
repnz
inc
mov
leave
mov
xchg
lret
push
cmp
mov
outsb
mov
inc
pop
xor
xor
and
sub
cmc
dec
push
xor
rol
aaa
xor
int
pop
mov
xor
iret
mov
xor
hlt
movsb
ss
xor
xor
add
es
cmp
push
dec
ds
xor
push
xor
rorw
xor
xor
mov
mov
pop
xor
push
les
aaa
insl
mov
adc
mov
xor
xor
push
xor
sti
ss
push
xor
gs
leave
pop
gs
add
xor
mov
stc
ds
cmp
jb
pop
add
cmp
dec
les
inc
daa
fstpl
sbb
enter
inc
pop
mov
gs
mov
cmp
aaa
ds
shrl
mov
js
aaa
cs
cmp
xor
xor
cmp
sar
dec
mov
das
xor
sub
jne
cmp
dec
iret
cmp
adc
dec
sarl
jno
jno
lret
or
jbe
or
fmulp
lret
push
pop
pop
cmp
jno
xor
mov
cltd
fildll
sbb
mov
aaa
aas
js
mov
insb
mov
mov
ror
mov
cmp
pop
xor
movsl
adc
mov
xchg
jnp
add
cmc
sub
mov
pop
xor
xor
mov
cmp
scas
fbstp
cmp
insl
jb
aaa
push
cmp
arpl
and
add
adc
adc
cmp
xor
mov
cmp
cmp
xor
sub
xor
pop
sbb
mov
lret
xor
add
fwait
and
test
xor
xor
jns
ja
stos
jns
jbe
jp
jb
sub
cmp
inc
icebp
adc
arpl
and
mov
jle
popf
mov
and
ds
popf
divb
cmp
mov
sub
out
xor
int3
mov
daa
mov
ljmp
or
arpl
enter
pop
aaa
lret
xor
xorl
fdiv
mov
push
sti
stc
bound
pushf
sti
cld
xor
or
sub
cmp
add
cmp
mov
xor
mov
push
loopne
push
imul
je
cmp
fcmovnb
out
pusha
mov
pop
cmp
mov
mov
xor
enter
ja
idivl
adc
hlt
cmp
repnz
xor
mov
std
outsl
fnsave
cmp
enter
mov
jp
ffree
jmp
sbb
xor
push
mov
xor
mov
aaa
xor
je
xor
sarl
das
push
xor
cmp
mov
cwtl
xchg
cmp
xor
inc
and
mov
call
iret
mov
ljmp
xor
pop
dec
stos
jno
xor
adc
push
and
cmc
sub
andl
xor
sbb
lret
mov
mov
jl
mov
add
push
xor
jo
popf
mov
mov
sub
insb
outsb
xchg
bound
les
xlat
adc
test
movb
mov
fsubrl
stc
cmp
and
mov
add
cmp
jno
xchg
sbb
ja,pt
dec
es
mov
shl
lahf
xlat
xchg
dec
stc
into
in
push
flds
lret
xor
xor
cs
mov
cmp
sbb
jl
mov
mov
cmp
fstps
pop
cmp
fnstcw
mov
xor
imul
mov
cmp
dec
fistps
movsl
pop
mov
fistpl
shll
sbb
mov
sub
inc
mov
xor
push
add
fnstenv
cmp
je
and
cmp
mov
sarl
lods
icebp
faddl
or
sub
ds
xor
or
dec
push
xor
jge
dec
rcrl
push
je
add
xor
out
xlat
sti
fdivs
mov
sbb
or
mov
or
fwait
gs
enter
mov
pop
cmp
into
inc
xor
xchg
sub
cmp
xor
mov
adc
pop
data16
mov
gs
adc
fcmove
lret
adc
push
xor
pusha
and
push
cmp
frndint
aaa
fwait
mov
and
addr16
xor
subl
fbld
mov
mov
add
inc
push
push
add
fsts
jno
ss
inc
jns
push
cmp
jno
iret
push
cmp
insb
push
aas
sub
mov
xor
shll
xor
iret
ljmp
inc
pmaddwd
mov
daa
xor
and
and
insb
or
mov
fucomp
fnstenv
jbe
mov
cmp
and
jne
mov
leave
sarl
sbb
mov
fisttpll
test
ss
insb
jno
leave
pop
cmp
call
sub
ss
cmp
fnsave
pop
cmp
inc
ret
add
pop
push
xor
les
xorb
cmp
inc
adc
or
xor
mov
aaa
mov
adc
pop
cmp
cs
xor
adc
mov
insb
xor
arpl
ret
pop
je
push
xor
push
jb
call
and
sub
xor
js
mov
mov
clc
inc
cmp
imul
sub
cmp
lds
and
sbb
mov
push
xor
mov
adc
mov
cmp
aam
cmp
mov
xorl
cmp
push
cmp
mov
dec
xor
inc
mov
dec
js
ss
pop
fidivs
ss
mov
xor
push
mov
and
into
imul
xchg
aas
leave
imul
int
dec
mov
shll
in
je
mov
int3
jno
in
ja
push
jp
cmp
mov
adc
ss
sbb
dec
ds
lret
sbb
loopne
cmp
sub
add
shrl
inc
inc
addr16
mov
xor
jae
fs
leave
js
dec
fwait
mov
lahf
push
sti
or
lds
sub
hlt
mov
xor
inc
and
aaa
test
or
clc
cli
add
mov
out
push
inc
xor
xor
xor
cs
inc
jle
add
or
mov
fdivs
jmp
in
mov
daa
cmp
mov
icebp
sub
xor
popa
pop
cmp
imul
aad
cmp
cwtl
test
or
push
dec
push
mov
cmp
xor
loop
mov
enter
jmp
icebp
mov
mov
fnstcw
push
push
dec
xor
and
daa
mov
ds
cmp
sub
test
mov
in
add
mov
popa
xor
aaa
xor
dec
jb
aaa
pop
xor
mov
rcrl
loope
cmp
cmp
ds
leave
insb
jmp
jnp
daa
add
jnp
std
jg
push
movsb
cmp
xor
data16
jns
cli
ja
mov
dec
das
push
mov
cmp
inc
sub
cltd
sub
dec
xor
jp
insb
into
daa
jmp
sti
xor
add
jns
inc
pop
in
rcr
cld
movsb
mov
insl
outsl
pop
sub
daa
push
push
sbb
out
popa
xchg
das
add
divl
cmp
testl
or
dec
leave
cmp
sahf
pop
xor
mov
movsb
xor
xchg
dec
mov
xor
hlt
or
mov
cmp
int
cmp
imul
xor
ljmp
cmp
adc
daa
cmp
mov
pop
pcmpgtd
xor
add
out
jae
push
sti
mov
cmp
addl
enter
lock
or
cmp
push
sbb
gs
mov
ds
adc
cmp
push
jo
dec
push
add
sbb
dec
mov
and
and
mov
leave
push
xchg
pop
or
pop
xchg
xor
pushf
jnp
leave
out
fwait
sbb
xor
or
lret
cmp
negl
or
aas
jne
push
ss
pusha
xchg
ds
jl
sbb
jle
inc
xchg
mov
aam
xor
fs
cmp
cmp
add
xor
gs
pop
lret
test
mov
daa
cmc
je
popa
push
inc
dec
cmp
jb
inc
push
and
dec
cmp
jns
ss
cmp
test
sbb
sub
inc
das
mov
mov
movl
push
mov
mov
cmp
xchg
xor
sti
cmp
adc
pop
cmpsl
inc
inc
ja
and
mov
cmp
jne
pop
mov
bound
sti
cmp
inc
add
xor
sub
into
out
shlb
xlat
pop
cmp
ja
xor
inc
mov
adc
xor
xor
sub
cmp
addr16
xchg
call
mov
cmp
inc
jne
lret
push
int
inc
add
jbe
adc
inc
sub
cld
jge
pop
test
jmp
inc
xor
mov
xor
xor
mov
and
data16
aas
test
xor
out
pop
ljmp
scas
pop
dec
mov
xlat
xchg
sti
pop
mov
bound
mov
lret
cmp
sub
sub
mov
cmp
rcrb
xor
sbb
jne
xor
jmp
fdivs
xor
xor
lret
cmp
shll
aaa
cmp
xor
inc
xor
xor
iret
fs
sub
xor
lret
xchg
adc
mov
xor
mov
adc
xlat
xchg
adc
arpl
lds
das
out
cltd
dec
mov
mov
xor
jo
mov
mov
mov
inc
test
cmp
mov
aaa
cmp
jo
jl
gs
leave
aas
mov
and
addb
jmp
fiaddl
sub
cmp
pop
lahf
cmp
enter
fsts
add
push
xor
sub
sti
sub
fnsave
aaa
xor
jo
imul
xor
jg
xor
push
loopne
pop
dec
xor
rol
sub
and
cmp
shll
mov
xor
add
cmp
mov
cmp
xor
xor
fs
enter
mov
cmp
mov
jl
fs
aaa
addr16
xor
cmp
fcoms
mov
imul
or
mov
and
mov
xor
mov
cmp
aaa
arpl
les
pop
lds
or
aaa
push
cmp
jne
aad
and
mov
push
jmp
mov
fnsave
xor
aas
or
into
fsubl
sub
sub
aaa
sub
outsl
mov
mov
fnstsw
in
dec
ja
mov
loope
into
dec
cmp
fnstsw
xor
xor
pop
add
inc
cmp
mov
push
mov
push
lahf
mov
mov
xor
fstpt
xchg
cmp
into
inc
xor
xor
aaa
dec
or
mov
frstor
cmp
das
imul
mov
sub
mov
movsl
sub
cmpsb
cmp
pop
lods
sub
rcrl
cmp
outsl
cmp
mov
lock
das
popf
hlt
and
daa
repz
sub
cmp
xchg
icebp
sub
and
pop
mov
fwait
xor
pop
adc
xor
sbb
pushf
xor
sbb
xor
mov
roll
push
mov
fbstp
push
mov
cmp
aas
mov
stc
cmp
xor
jne
fnstcw
mov
das
clc
cmp
mov
sbb
les
sub
adc
jno
cmp
icebp
dec
sub
xor
clc
fs
sti
xor
dec
xor
cmp
lock
xchg
sub
mov
push
push
cmp
arpl
mov
fnstcw
mov
arpl
dec
cmc
aaa
data16
fistpll
aaa
gs
xlat
cmp
aaa
or
or
lret
mov
iret
cmp
data16
ds
mov
or
or
inc
jnp
aad
fidivs
shll
test
mov
insb
fildl
push
xor
dec
in
imul
push
fsqrt
or
mov
xor
fstpl
stc
cmp
mov
aaa
xor
mov
mov
icebp
mov
jne
cmp
clc
leave
je
dec
push
push
stc
call
in
flds
or
clc
dec
jbe
std
mov
mov
xor
ja
imull
fs
sarb
enter
xor
inc
and
dec
jmp
rcll
jmp
mov
rol
andl
and
mov
xor
sbb
pop
push
mov
lea
xchg
cmp
mov
aad
sbb
xor
xchg
outsl
add
aad
jmp
pusha
sub
mov
inc
lds
fisttpl
popf
mov
cwtl
mov
rorl
push
cmp
stc
xor
mov
sbb
aad
rcl
aas
aad
fcmovnbe
xor
xlat
cmp
fxch
pop
cmp
cltd
mov
cmp
or
insb
push
arpl
int3
and
mov
shll
xor
xor
sbb
jne
mov
push
or
mov
enterw
jae
mov
sub
mov
mov
push
ja
imul
jp
iret
cmp
fnstcw
and
out
sarl
cli
ds
pop
aas
mov
jo
mov
hlt
cmp
mov
push
cmp
mov
dec
in
cmp
cmp
cmp
jns
inc
movsl
arpl
adc
jecxz
pop
xor
shl
push
cs
pop
jnp
test
or
mov
mov
insb
and
push
int3
xorb
mov
cmp
cmp
or
inc
ds
imul
fidivrl
jo
mov
cwtl
cmp
and
mov
add
rorl
ljmp
xchg
dec
mov
jl
cmp
rorl
test
popw
inc
mov
dec
pop
jne
xlat
lea
nop
mov
xor
lods
jb
test
je
hlt
mov
aas
cmp
xor
ss
mov
fbstp
cltd
mov
aas
scas
xlat
add
outsl
and
pusha
jne
mov
push
divl
cmp
cmp
mov
inc
mov
imul
divl
outsb
arpl
lds
cmp
push
add
lcall
push
jb
jp
jns
jne
fwait
jae
mov
int
jg
ss
leave
xor
push
xor
dec
int
ds
lds
dec
xor
aaa
cmp
shrl
xor
push
jle
inc
popa
adc
mov
icebp
xor
cltd
push
gs
mov
push
xor
xor
insb
mov
and
call
dec
lret
or
ja
fldenv
stc
fistpll
mov
pop
jge
std
pop
adc
stc
es
test
sub
cmp
insb
xchg
das
cmp
cmp
push
popa
cmp
fdiv
jo
inc
int
dec
mov
loope
aaa
enter
jb
inc
cmc
outsl
frstor
cmp
cs
sbb
jbe
push
imul
enter
xchg
sbb
addr16
push
inc
xchg
loope
cmp
gs
sub
in
les
dec
cmp
xor
cmp
loope
cmp
gs
cmp
pop
xor
data16
cmp
in
cmp
adc
adc
popa
cmp
gs
mov
jns
cmp
xor
or
ss
ss
and
jbe
mov
shlb
aas
ss
cmp
fnstsw
pop
cmp
mov
xor
inc
push
mov
out
push
jns
pop
bound
das
pusha
notw
mov
data16
cmp
xor
xor
ss
cmp
pusha
pop
cmp
dec
mov
cmpsb
sub
lret
xor
ja
cmp
pusha
pusha
out
fwait
dec
and
test
jnp
xchg
jl
mov
mov
sbb
inc
aas
addr16
and
xor
test
mov
add
cmp
mov
gs
in
gs
mov
idivb
ss
jno
mov
popa
fdecstp
repz
xchg
mov
sbb
divl
stos
push
loope
aam
mov
stc
xor
xor
inc
xor
ss
inc
sbb
js
inc
jmp
fldcw
jge
or
mov
stc
in
jmp
popa
insl
cmp
and
leave
aaa
dec
imul
xor
cwtl
inc
jg
shll
xor
ret
jnp
cmp
in
and
outsb
leave
adc
mov
std
ret
sub
mov
imul
es
stc
jo
repz
xor
cmp
mov
fnstenv
xchg
shll
pop
pop
imul
jp
mov
mov
mov
xchg
pop
mulb
lret
cmp
inc
add
adc
pop
pop
cmp
movsb
xchg
imul
cmp
sub
roll
imull
or
adc
iret
rcll
xor
sarb
mov
inc
dec
xor
inc
cmp
jb
mov
xor
pop
data16
xchg
cmp
cmp
aas
mov
aaa
cmp
stos
cmp
inc
and
and
in
jae
cmp
es
dec
mov
xor
cmp
adc
and
lret
xor
shlb
adc
xor
insl
ret
ss
iret
push
jo
push
mov
loope
cmc
stos
nop
adc
cmp
lahf
cmp
inc
iret
shlb
mov
pop
inc
jo
shrl
jl
sub
add
xor
sti
lahf
mov
mov
mov
mov
std
mov
flds
aaa
ja
or
add
mov
add
add
add
lret
inc
xor
sbb
cmp
addb
scas
xor
xor
xor
cmp
xor
ja
gs
inc
loope
xchg
mov
sbb
lds
fnstsw
push
jae
add
pop
pop
leave
nop
jb
xchg
cmp
arpl
mov
aas
cmp
xor
stos
mov
ret
pop
mov
adc
fwait
shll
bound
xor
jns
ror
mov
push
mov
inc
mov
cld
cmp
mov
aas
cmp
inc
sub
mov
fstl
sub
nop
pop
cmp
cmp
xchg
js
sarl
ret
xor
mov
adc
and
push
cmp
aaa
lret
shll
cmp
xor
cmp
popa
adc
outsl
mov
sub
cltd
and
and
cmp
es
adc
scas
lret
jp
pop
xchg
xor
mov
imul
mov
adc
je
sarl
movsl
xor
nop
daa
xor
popa
test
push
xorl
push
test
push
xorl
adc
xor
outsl
xlat
enter
xor
pop
jmp
mov
adc
and
add
ss
in
mov
mov
leave
aad
ss
push
outsb
cmp
jns
xor
je
xor
fstps
jb
jge
cmp
lcall
push
daa
aas
ja
fnstenv
inc
cmp
icebp
fs
xorl
mov
and
aaa
sub
xchg
adc
cmp
jno
fidivrl
sbb
xchg
xor
xchg
fwait
sub
scas
cmp
pop
cmp
shll
cmp
xchg
mov
in
fimuls
xor
dec
xor
inc
push
mov
dec
mov
mov
sbb
xchg
xor
mov
dec
stos
cltd
inc
mov
fistl
testb
popa
add
xchg
dec
push
sarl
stos
xor
fnstsw
xor
push
pop
dec
fistl
mull
bnd
adc
and
jl
and
adc
pop
jl
add
int
mov
xor
or
enter
repz
sub
mov
push
mov
mov
ss
cmp
idivl
xor
jg
cmpsl
lret
cmp
inc
xor
adc
lock
inc
insl
rcl
fisubl
cmpsb
rcrl
cmp
divl
mov
pop
adc
inc
adc
jns
sub
cmp
arpl
loopne
push
aaa
mov
mov
outsb
fbstp
or
call
sub
cmp
mov
jmp
cmp
mov
cmp
xor
bnd
inc
shll
and
cmp
mov
sub
xor
lret
into
enter
mov
mov
dec
fidivrl
xchg
push
add
jo
cmp
aaa
push
cmp
popa
frstor
jns
and
fnsave
daa
enter
xor
mov
xor
mov
cmp
and
inc
clc
or
xor
ss
and
jae
js
xor
add
push
lds
xor
cmp
aad
das
pop
cmp
stc
xor
adc
xor
sub
mov
divl
dec
xlat
mov
aas
push
sti
pop
xor
fdivl
or
icebp
push
xor
mov
sbb
xor
insl
rorl
incl
mov
cmc
add
gs
xor
les
pusha
ret
cmp
cmp
mov
xor
push
shll
aas
xor
cmp
divl
mov
mov
lods
insw
outsb
mov
lret
xor
ds
xor
inc
lret
add
aas
cmp
dec
xor
jno
pop
xor
enter
cmp
mov
cmp
xor
pushl
fists
cmc
xor
mov
mov
cmpl
fpatan
cmpsl
cmp
leave
mov
enter
xor
mov
cmp
xor
sarl
inc
lret
mov
aaa
cmp
imul
cmp
xor
sarl
xor
inc
fwait
cmp
xor
inc
idivl
xor
cmp
add
es
mov
pop
lret
lret
icebp
mov
push
aas
add
test
mov
imul
divl
mov
mov
insb
push
jno
cltd
xor
push
jnp
mov
mov
xor
ja
xor
push
mov
mov
inc
jns
pop
push
mov
inc
testl
push
movb
cmp
gs
mov
ret
mov
xor
stc
push
out
stos
mov
sti
xor
mov
mov
idivb
cmp
jae
mov
lret
xor
xor
xor
sbb
rcr
movsb
jnp
inc
xchg
insl
roll
xor
mov
aaa
cmp
cmp
xor
push
cmp
and
mov
sbb
fcomip
push
and
xor
xorl
push
mov
and
push
sti
inc
pop
jne
cmp
leave
addr16
cmp
pop
movsl
inc
mov
aas
aaa
cmovs
mov
push
mov
scas
xorb
mov
addr16
lea
cmp
aas
fisttpll
les
mov
jl
bound
aas
cmc
mov
popa
enter
mov
xor
cmc
xor
aaa
pop
or
or
xor
xor
mov
mov
sub
mov
adc
js
dec
mov
fstp
mov
mov
aas
fnstenv
jle
mov
in
adc
je
aad
mov
cmp
adc
sti
cmp
jl
dec
test
mov
addr16
sti
imul
xchg
cmp
lds
adc
mov
aaa
aas
rorl
adc
stc
xor
xor
fwait
xor
push
push
cmp
mov
mov
push
sbb
mov
aas
dec
xchg
mov
xchg
xor
mov
pop
clc
and
dec
fldenv
add
fcomps
xor
push
mov
push
rcll
push
aad
pop
ss
pop
adc
inc
and
cmc
and
fists
or
xor
je
mov
mov
stos
addr16
push
cmpl
mov
js
mov
pop
jle
and
dec
leave
xchg
push
push
es
and
and
ja
fdivl
xlat
jg
jnp
jl
pop
sub
mov
jb
mov
xor
lret
fs
cmp
and
pop
mov
imul
mov
rcl
push
dec
jns
jmp
inc
adc
ss
cmp
aaa
cmp
lahf
movsl
cmp
xor
iret
mov
mov
pop
mov
mov
cmp
mov
cmpsl
adc
mov
sub
mov
xchg
dec
sbb
cmp
mov
adc
mov
mov
fwait
cmp
xor
jns
imul
and
mov
xor
popf
daa
shll
mov
jbe
test
pop
cs
cmp
das
xlat
and
jnp
ds
xchg
adc
xor
mov
add
cmp
xor
xor
test
dec
jno
pop
stc
sub
arpl
clc
xchg
push
sbb
cltd
mov
xchg
sbb
je
push
repnz
pusha
xor
adc
mov
fwait
sbb
xor
adc
add
sbb
or
arpl
mov
xorl
lahf
mov
mov
mov
mov
add
fwait
sub
fists
mov
mov
mov
pop
mov
int3
nop
push
adc
add
inc
adc
mov
dec
adc
xchg
mov
aaa
shll
push
xor
jno
inc
pop
sti
stc
mov
cwtl
aam
xlat
lcall
sarl
push
shrl
or
push
cwtl
or
daa
add
mov
fnstenv
push
mov
cmp
movsl
cmp
fidivrl
sbb
jo
sbb
sbb
cwtl
add
xchg
or
xchg
add
mov
xor
jge
and
xor
addl
mov
pop
pop
and
add
icebp
pop
cmp
add
mov
cltd
and
ss
imul
xor
dec
adc
xor
pop
sub
adc
cmpsl
movsl
imul
sub
stos
add
xor
addr16
adc
xor
out
cmp
dec
es
jge
cmp
adc
dec
xor
cmp
enter
sbb
aas
dec
or
add
fnstenv
mov
or
repnz
ss
sbb
xor
stos
cmp
movsl
jo
fnstcw
test
pop
sarl
mov
pusha
cmp
cmc
xchg
and
adc
adc
js
mov
push
movsl
out
dec
cmp
jae
mov
add
mov
adc
and
xor
xor
or
dec
inc
jb
cmp
je
dec
int
mov
mov
cmp
pop
cs
jge
sbb
out
sbb
sarl
cmp
repz
pop
jns
adc
push
icebp
and
and
mov
sahf
popa
and
in
imul
hlt
and
add
xor
fisttpll
xchg
scas
popa
aaa
jbe
sbb
aas
sub
mov
mov
xchg
xor
cmp
fs
xor
push
add
pusha
mov
push
ss
cmpsb
cltd
lret
aas
xchg
mov
int
pop
add
add
fcoms
mov
mov
xchg
addr16
pop
outsl
addr16
ss
adc
pop
enter
mov
dec
mov
notl
ljmp
addr16
inc
add
stos
outsl
popw
dec
mov
inc
ffreep
fstpt
mov
adc
jge
cmp
add
xor
jo
add
pop
inc
and
adcb
loopne
cmp
jl
xor
sub
gs
add
adc
sub
push
nop
add
lret
or
sbb
push
mov
adc
lea
arpl
dec
addr16
test
sub
xchg
adc
mov
xor
jo
cmp
aaa
jmp
gs
rclb
mov
mov
push
push
aaa
imul
cli
cmp
mov
lret
sbb
mov
and
xor
cmp
mov
cmp
pop
cli
imul
repnz
mov
je
mov
xor
and
cmp
or
movb
loop
mov
in
sbb
mov
rorl
cmp
cmp
cmp
add
stos
cmp
pop
out
divl
dec
xchg
xor
xor
fdivrl
repnz
jge
mov
pusha
add
lds
xlat
pop
or
stos
xchg
cmp
aaa
fs
pop
xchg
gs
fstl
fdivl
mov
mov
mov
lds
push
cmp
cmp
xor
adc
dec
shll
inc
shrl
je
arpl
ljmp
xor
lret
fstpl
sub
mov
jbe
sti
push
fs
imul
movsl
je
insb
int
and
and
xchg
and
bndldx
adc
je
mov
leave
xor
cmp
iret
shll
data16
add
adc
mov
das
lret
pop
rcr
rorb
xchg
push
sbb
bound
hlt
rcrl
sbb
mov
mov
mov
fnstcw
push
sbb
cwtl
jnp
mov
ss
cmp
aad
mov
test
mov
mov
es
adc
mov
gs
aaa
mov
cmp
xor
mov
orl
dec
or
ja
xor
mov
fidivrl
into
aaa
inc
cmp
xor
ja
or
jno
cmp
add
add
int
cwtl
or
shl
fcompp
repz
cmp
enter
rcrl
ss
sbb
add
lret
xor
lret
xchg
cmp
mov
jne
and
adc
jb
fisttpl
mov
and
xchg
add
cltd
sbbl
repz
mov
cwtl
jmp
iret
pushf
clc
xor
cmpl
aaa
fst
sti
xor
aaa
fstp
stc
xor
popf
or
mov
in
push
cmp
mov
xor
xor
leave
popa
aaa
les
dec
xlat
cmp
aas
cmp
enter
mov
xor
adc
or
je
data16
je
xor
out
jmp
xor
int
ds
cmp
xor
sub
jne
cmp
cld
cmp
mov
xchg
xor
lret
mov
popf
xor
xor
lods
aaa
xor
adc
cmp
cmp
xor
cmc
dec
inc
xor
out
enter
mov
inc
push
mov
sbb
out
cmp
mov
cmp
inc
aas
mov
into
aaa
xor
and
mov
cmp
cmc
xchg
enter
je
mov
gs
xor
mov
sub
xor
mov
outsb
stos
cmp
mov
das
mov
mov
rcr
pusha
mov
stc
inc
xor
jle
flds
movsb
les
mov
mov
into
pop
lret
xor
adc
xor
jb
ret
mov
mov
movb
mov
inc
flds
mov
jns
pop
lock
stos
cmp
fnstenv
into
loop
into
fdivrl
mov
cmp
testb
mov
cmp
xor
and
into
divl
xor
fnstcw
xlat
lods
xor
test
pusha
pop
mov
xor
mov
pop
sbb
clc
iret
xor
ss
outsl
mov
dec
add
xchg
mov
repz
jbe
mov
daa
cmp
xor
adc
push
xorb
pop
cmp
xor
shlb
xor
mov
lods
cmp
popa
xor
jno
push
shlb
pop
jge
shll
xor
inc
pop
jno
jnp
pop
sbb
push
icebp
and
mov
sbbl
ja
leave
mov
mov
adc
cwtl
mov
adc
or
xchg
jne
add
jo
xor
cmpl
jnp
or
pop
sbb
sub
jno
sub
outsb
mov
sbb
icebp
xor
sbb
mov
mov
ds
push
stc
xor
pop
arpl
add
sub
mov
adc
sub
mov
sbb
ss
and
xor
and
xchg
xor
fcomi
sub
cmp
jne
out
lahf
loop
cmp
jns
daa
xor
repz
xor
sbb
xor
jb
cmp
fbstp
cmp
lock
pop
adc
adc
test
clc
and
inc
inc
hlt
sub
xor
cmp
pop
or
or
cmp
inc
cmp
inc
insl
cmp
icebp
rdpmc
dec
imul
mov
or
inc
adc
pop
push
jnp
inc
outsl
jne
rclb
push
and
jns
divl
mov
ja
sbb
jae
roll
xor
cmp
dec
mov
aas
jne
sbb
adc
pusha
sti
pop
fsts
mov
xor
flds
cmp
mov
jne
xor
cmp
repz
fnstcw
je
bound
sahf
cmp
push
jne
mov
pop
pop
xor
mov
ja
imul
fists
sbb
idivb
xlat
and
aaa
lds
fdivs
add
mov
cmp
enter
addr16
xor
sti
dec
das
popa
and
ss
cmp
gs
jbe
shll
cmp
or
scas
mov
lahf
mov
fwait
in
mov
lahf
dec
push
and
sbb
mov
test
push
pop
xor
into
mov
sub
popa
fisttps
mov
sbb
jns
aas
jns
or
xor
mov
popa
aaa
adc
mov
fwait
xor
incl
mov
lea
mov
xchg
mov
in
cmp
mov
jle
popa
pop
movsl
xor
mov
xor
xchg
aas
imul
push
push
fwait
ret
xor
mov
cltd
leave
sbbb
xchg
mov
cmp
mov
cs
push
pop
push
loopne
cwtl
xor
fnstenv
sahf
mov
add
cmp
mov
out
aaa
fbstp
popf
cmp
dec
mov
test
mov
mov
fwait
inc
pop
mov
cmpsb
adc
inc
stos
popa
fldenv
sti
js
jp
mov
aad
adc
push
mov
mov
jmp
mov
cmp
pop
enter
cmp
push
fwait
fwait
inc
push
cltd
fsqrt
jge
fcomip
jg
nop
add
cmp
inc
xor
push
xchg
insb
mov
mov
fnstcw
cmp
xor
push
mov
mov
mov
iret
xor
mov
inc
xchg
insl
call
out
jns
xor
mov
xor
xor
mov
xor
cmpsl
subl
jb
jbe
cmp
xor
xor
shll
cmp
scas
loop
insb
xor
xchg
sbb
insl
xor
xchg
jnp
xor
xchg
orl
sub
lock
cltd
fnstcw
xor
lahf
sbb
xor
outsl
and
cmp
xor
test
mov
cmp
xchg
lea
sbb
mov
orl
mov
xor
adc
jnp
jp
xor
mov
std
mov
idivb
decl
xor
lea
mov
pushl
andl
mov
stc
cli
data16
in
mov
jmp
add
jecxz
dec
in
mov
jecxz
lock
sub
in
sti
add
inc
addr16
in
mov
aaa
jmp
cmp
mov
fildl
cmp
or
roll
fldl
cmp
and
repz
mov
xlat
subl
mov
mov
pop
mov
lret
mov
ret
les
mov
int
lods
jne
mov
sbb
xor
cmp
xor
add
cmp
jnp
mov
std
int3
hlt
mov
cmp
xor
xor
cmp
mov
aas
lea
push
mov
aas
jg
andb
pop
mov
xor
mov
fsubrs
and
mov
das
subl
mov
add
sbbl
xor
cmp
mov
or
add
je
mov
add
mov
adc
cmp
mov
pop
mov
mov
sub
dec
mov
pop
mov
inc
fs
or
xorl
push
daa
cmp
mov
pop
sub
or
jecxz
jecxz
jne
cmp
daa
mov
daa
ja
jne
mov
jg
inc
jne
pop
cmp
push
lret
xor
cmpl
cmp
mov
jnp
loop
sub
std
pop
mov
mov
gs
mov
mov
xor
adcl
sub
outsb
call
mov
xchg
push
imul
adcl
mov
push
cmp
cmp
xor
inc
shlb
add
ja
mov
sub
aaa
pop
incl
subl
fidivl
pop
aaa
bnd
mov
lock
mov
addr16
rorl
in
mov
or
cmp
mov
mov
fnsave
jl
add
stc
mov
dec
sbb
cmp
push
mov
xorl
lock
pop
cmp
out
or
mov
cmp
repz
push
mov
jbe
adc
push
sti
sub
fidivl
mov
mov
mov
sub
mov
lea
loop
scas
scas
cmpsl
and
insb
push
cmp
xor
pop
and
dec
mov
dec
mov
mov
mov
add
test
and
outsb
xor
fnstsw
sub
inc
pop
sub
popa
fisttps
mov
mov
in
or
cmp
cmp
mov
pop
loopne
cmp
cmp
addr16
sub
inc
dec
lods
mov
push
cmp
std
lret
imul
int3
loope
je
mov
xor
jbe
aas
mov
xor
imul
mov
push
mov
movsl
xor
or
xor
mov
test
or
adc
fldenv
cmp
add
jmp
xor
test
push
cmp
sub
imull
test
fnsave
push
es
gs
in
cmp
leave
mov
ljmp
or
mov
dec
xor
aaa
xor
dec
dec
push
dec
ret
dec
adc
mov
pop
into
out
push
mov
dec
ds
stc
pusha
mov
enter
push
xlat
cmc
in
out
dec
int
ja
dec
shll
xlat
imul
mov
sub
xchg
sub
std
pop
and
xchg
inc
xlat
shl
inc
inc
cmp
push
sti
xor
inc
jno
arpl
shrw
aaa
int
sarl
xor
inc
jp
nop
aaa
hlt
xor
cmp
aaa
xor
xchg
pop
cmp
mov
daa
shrl
cmpsl
xor
adc
roll
mov
mov
sbb
cmp
inc
cltd
orl
sub
cmp
mov
gs
fldenv
xor
pushw
rorl
cmp
pop
lret
sbb
shl
xor
les
fstpt
out
stos
cmp
popl
fwait
ss
mov
fs
mov
popa
enter
and
test
xchg
cmp
mov
cmp
xchg
xchg
ret
mov
aas
mov
cmc
bound
mov
pop
or
popa
in
xor
jnp
adc
test
jne
xchg
fnstsw
cmp
fidivs
in
int
aaa
inc
inc
int3
jno
ljmp
jns
push
xor
push
add
inc
aas
xor
dec
jno
fimuls
lret
aaa
aaa
dec
xor
icebp
mov
rcrb
pop
push
cmp
fbstp
mov
std
pop
jo
xor
mov
mov
jne
insb
mov
rolb
sbb
add
and
inc
cmp
inc
sub
jns
add
cmp
inc
cmpb
xorl
xor
aas
sub
pop
aaa
mov
lea
add
xor
aaa
xor
mov
imul
hlt
pusha
mov
mov
mov
arpl
ret
pop
mov
inc
sbb
aaa
mov
lret
xor
dec
cmp
jne
cmp
mov
pop
cmp
icebp
insl
fstl
cmp
or
mov
leave
addr16
das
imul
lock
cmp
loope
jne
cmp
mov
cmp
pop
div
xor
xchg
fidivrs
mov
xor
inc
cmp
jns
add
sti
outsw
idivl
cmp
mov
mov
aas
cmp
aaa
xor
cmp
data16
jbe
mov
gs
and
xor
cmp
lea
jne
cmp
cli
inc
das
mov
shll
dec
popa
xor
lret
addr16
fucomip
xor
pop
push
imul
xchg
cmp
xchg
imul
xor
jle
addr16
cmp
cmp
jne
and
cmp
mov
adc
cmp
aaa
pop
rol
xor
fnstsw
rorl
inc
sub
mov
cmp
fisttps
jns
aaa
cmp
addr16
outsb
adc
cmc
mov
insw
cmp
aaa
outsb
pop
sbb
cmp
into
mov
mov
cmp
mov
cmp
cmp
aaa
add
jno
lds
into
mov
xor
sub
outsb
iret
enter
jo
sti
dec
add
cmp
jp
test
mov
mov
and
das
inc
cmc
sub
xor
and
adc
and
mov
mov
mov
adc
fnstenv
and
adc
mov
daa
bnd
adc
inc
inc
cmp
mov
xor
stc
xor
cmp
and
enter
jne
sbb
xor
je
cmp
addr16
sub
cmp
push
lds
adc
mov
dec
adc
mov
and
cmp
cmp
mov
das
rolb
pop
cmp
dec
cmp
jno
cmp
insw
ror
lea
cmp
sbb
pop
aaa
jne
cmp
fists
clc
adc
sarl
xor
xor
loop
mov
dec
mov
and
inc
mov
dec
sbb
stc
cmp
lods
jne
dec
adc
xor
adc
out
jno
push
psrlw
negb
aas
aad
xor
mov
cmp
mov
fs
push
cmp
jae
fs
mov
push
mov
jp
popf
ja
imul
pop
mov
mov
idivl
xorl
xchg
cmp
lret
xor
test
xor
adc
cmp
xor
inc
xor
mov
fnstenv
add
mov
xchg
ss
aaa
cmp
cmp
jmp
mov
pushl
mov
xor
cmp
jae
and
cltd
push
insl
mov
xor
mov
mov
push
mov
dec
mov
cltd
mov
rcll
pop
cmp
jo
cmp
xor
pusha
mov
jmp
xor
mov
loope
mov
cmpl
mov
mov
aas
testl
and
jns
xor
in
xor
xor
mov
cmp
xor
cmp
xorl
fbstp
cmp
cmp
mov
in
fnstenv
fs
mov
mov
cmc
xor
adcb
aas
push
pop
rcrl
xor
xor
cmpsl
ss
cmp
int
jl
adc
mov
cmp
xor
inc
cmp
enter
and
jle
or
inc
sub
mov
pusha
addr16
mov
hlt
mov
and
xchg
mov
push
jnp
mov
xor
cmc
and
lret
add
xchg
cmpsl
into
mov
and
cmp
mov
xor
inc
fstpt
mov
and
lret
xor
aam
ret
gs
inc
xlat
lret
mov
xor
adc
cld
cmp
adc
loope
ss
in
adc
cmp
cmp
sbb
jo
inc
xor
in
je
mov
cmp
pop
pop
xor
data16
icebp
cmp
push
sbb
stc
and
mov
loope
push
mov
adc
mov
inc
ret
mov
stc
xor
fildll
xor
inc
icebp
sub
sbbl
into
bound
cmp
push
test
fnstenv
sbb
cmp
push
lret
in
push
xor
cmp
mov
and
mov
rcl
pop
data16
sahf
mov
jmp
push
xor
bound
das
fs
ret
jnp
inc
add
add
dec
cmp
and
adc
ja
bnd
or
dec
rcr
das
pop
cmp
jge
inc
out
and
mov
jo
sarl
pop
or
cltd
sbb
fldl
mov
mov
aad
push
int
push
popa
les
daa
sbb
or
push
xor
movsb
pop
ss
add
jl
and
stos
fstps
dec
sti
cmp
xchg
ss
stc
xchg
stos
xor
cmp
mov
jbe
mov
sub
xor
fwait
xor
cltd
sub
inc
sarl
jns
enter
icebp
mov
cmp
xor
data16
xor
fdivrl
mov
bound
lock
fs
push
push
aas
test
inc
mov
lret
adcl
xor
xorl
inc
ds
fs
adc
cmp
push
inc
sbb
cmp
cmp
xor
stc
cmp
add
aas
fldl
ret
int
movb
mov
pop
ss
les
push
sbb
xor
dec
jp
jb
mov
jb
xchg
cmp
sti
pop
jno
mov
jne
test
xor
xchg
cmp
popa
xor
xor
fists
cmp
outsl
fnstenv
dec
cmp
push
aaa
xor
mov
cmp
sti
xor
aaa
fs
dec
push
je
outsl
pop
xor
sbb
imull
pop
jmp
cmp
dec
push
or
add
mov
fs
xor
mov
xchg
pop
sub
mov
aaa
jle
leave
jge
aas
call
pop
enter
adc
fcmovu
push
cmp
cmp
or
bound
shll
cmp
and
les
cmp
jbe
imul
filds
or
aaa
lret
or
cmp
or
adc
and
xor
pop
adc
jbe
adc
or
mov
sahf
mov
dec
sub
aaa
sbb
sbb
ja
sub
cmp
repnz
push
adc
pop
xor
jg
xchg
aaa
mov
dec
sbb
jmp
cmp
ss
cmp
sbb
movsl
mov
sub
and
cmp
push
fldenv
cmpsl
inc
xor
mov
pop
lret
lock
mov
sbb
or
or
cmp
enter
cmp
gs
sub
rcr
shlb
faddl
add
xor
addr16
xor
js
pop
mov
xor
ss
or
cmp
ds
jae
mov
add
mov
lds
xor
sbb
xor
icebp
jo
cmp
mov
test
mov
ret
into
daa
jg,pt
in
xchg
cmp
imul
jle
and
sbb
mov
pop
sub
mov
jnp
cmp
adc
mov
fbld
jmp
and
test
popa
jge
pop
hlt
and
imul
aaa
xlat
ds
jl
cltd
and
mov
pop
cmp
sbb
push
xor
adc
mov
mov
sbb
sub
call
cmc
mov
xor
xor
and
push
sbb
cmp
mov
sub
xor
ljmp
les
and
shll
in
sub
mov
xor
movsl
cmp
sti
inc
cmp
push
idivl
inc
mov
xor
cmp
fwait
cmp
xor
sbb
xor
cmp
cmp
mov
cmp
pop
and
pop
dec
nop
inc
daa
lcall
lock
movsl
push
sbb
repz
sbb
fisubrs
ss
daa
add
dec
sub
xchg
xor
xor
arpl
repnz
sub
cmp
or
dec
es
mov
cmp
xor
xor
mov
daa
rorb
cmp
fisubrl
mov
cltd
xchg
ss
lcall
pusha
ss
cmp
ja
repz
and
mov
sub
xor
cmp
aam
jmp
xorl
out
dec
push
mov
pop
pop
mov
mov
push
add
inc
jl
inc
lds
inc
jle
xchg
aaa
mov
mov
add
adc
add
aaa
cmp
fldz
push
jmp
arpl
je
rcrl
xor
mov
mov
pop
xor
xor
aaa
mov
jg
sbb
and
jo
xor
xor
and
mov
sub
scas
cmp
cmp
pusha
and
cmc
mov
sti
lock
cmp
mov
hlt
and
xchg
cmp
adc
mov
add
add
les
std
neg
insl
cmp
push
and
adc
jl
fldcw
test
clc
pop
pop
add
xorl
xor
jno
shll
xor
xor
bound
les
cmp
addr16
push
jmp
sub
inc
mov
mov
pop
xchg
leave
lret
xorl
mulb
xor
in
aaa
adc
xor
push
aad
mov
aaa
daa
cmp
int
ss
add
cmp
mov
imul
add
ss
pop
popa
notb
push
ds
data16
push
in
les
or
in
cmc
cli
sub
icebp
pop
dec
pop
outsl
xor
dec
cmp
mov
pop
push
or
xor
jbe
gs
nop
pop
in
sbb
bound
mov
jnp
leave
xchg
push
scas
cmp
jmp
sub
lds
push
mov
xor
jae
ds
xor
cmpsl
aaa
cmp
fwait
xor
inc
jle
xor
push
inc
cmp
and
insl
and
cmp
ljmp
negb
jnp
sbbl
mov
add
jno
xor
jge
fs
cmp
xchg
in
dec
and
cmp
inc
in
sbb
mov
clc
fsubs
pop
dec
adc
aas
adc
ja
add
fidivs
les
and
xor
lret
mov
push
push
jp
enter
xor
fs
outsb
mov
aam
divl
cmp
cmp
mov
xor
fstpl
outsb
into
aaa
lret
inc
adc
mov
jb
imul
add
cmp
ss
into
inc
and
inc
aaa
movb
and
and
fidivrl
cmp
xor
ja
sub
repz
out
cmp
movsl
xor
stc
jno
xor
into
adc
cmp
pop
xor
outsl
mov
inc
aaa
dec
adc
cmpb
add
push
push
pop
xor
xor
cmp
add
into
xchg
fidivrs
xor
and
xor
imull
ss
and
pushf
cmp
cmp
pop
adc
mov
cmp
mov
pop
daa
mov
movsb
mov
jl
mov
movsb
mov
les
xor
mov
cmp
cmp
push
and
outsl
sub
stos
daa
sub
add
mov
add
outsl
jbe
popa
outsb
sub
repnz
cmc
inc
arpl
xor
inc
jg
ss
popa
cmp
cmp
in
insl
jle
mov
and
xor
cmp
mov
xlat
add
mov
ss
push
pop
jno
push
ds
and
shl
dec
jo
ja
jae
lock
jns
cltd
data16
mov
ret
dec
sbb
xor
jmp
pop
adc
mov
xor
mov
out
gs
xor
cs
mov
xor
mov
mov
add
and
mov
pop
mov
add
cmp
aas
or
cmp
in
rcll
aas
jecxz
je
in
xor
add
sbb
test
sub
ss
inc
dec
cmp
inc
mov
push
adc
and
sbb
int
cmp
adc
stc
cmpsb
lret
cmpb
lret
cmp
jns
mov
adc
rcl
ss
mov
mov
dec
or
frstor
jo
xor
push
xor
xor
xor
aad
cmp
mov
inc
cmp
cmp
or
push
cs
mov
xor
mov
arpl
pop
xor
fnsave
imul
adc
and
fwait
xor
shll
ds
cmp
and
mov
sbb
aaa
xor
lea
inc
imul
xor
fstpt
mov
xor
xor
cmp
cmp
xor
xor
adc
aad
mov
xor
ja
xor
pop
cmp
mov
and
mov
and
xor
daa
pop
mov
cmp
mov
pop
and
xor
pop
pop
jne
xor
gs
loop
cmp
add
aas
adc
icebp
xor
dec
shll
sbb
cltd
xor
xor
cmp
sub
dec
adc
hlt
cmp
and
je
gs
aaa
cmc
cmp
fnstenv
xlat
sub
and
mov
or
xor
and
xor
push
xor
xor
cmp
xor
mov
shll
addr16
cmp
out
ds
push
ss
sbb
adc
dec
pop
xchg
sub
or
cmc
xor
xor
pop
clc
ds
pop
lock
xor
fcomip
sti
xorl
xchg
xor
les
cltd
imul
fs
dec
fnstcw
das
aad
and
fnstenv
pop
aad
push
divb
push
sub
add
gs
mov
dec
xchg
cs
hlt
jno
pop
ret
cld
xor
mov
sbb
ja
cld
sbb
ss
or
in
push
enter
lret
and
xor
data16
rcrl
outsl
mov
adc
aaa
les
leave
pop
dec
sbb
fs
cmp
push
shll
cmp
cmp
cmp
cs
rcrl
add
in
push
sbb
daa
mov
xor
cmp
cmp
mov
xor
shr
xor
cli
xor
xor
xchg
xor
jns
pop
fldl
aaa
xor
test
cmc
popw
pop
movb
cmp
cmpl
mov
ja
push
jmp
cmp
xor
xor
pop
cmp
push
pop
ss
and
adc
jne
or
addr16
cs
sbb
add
cmp
std
and
inc
cmp
mov
or
lds
mov
je
xchg
jp
mov
leave
inc
xor
les
and
sbb
xor
mov
mov
dec
and
inc
and
add
cmp
xor
cmp
dec
cmp
xor
shlb
xorb
inc
and
jno
es
fnstsw
and
inc
add
fst
cmp
mov
xor
cmp
jns
jae,pt
sub
dec
inc
aaa
jge
sarb
inc
xor
mov
cmp
inc
jne
pop
pop
xor
cmp
inc
and
mov
pop
imul
or
cmp
sbb
mov
cmp
rcrl
mov
enter
xor
aaa
or
xor
push
clc
push
push
je
cmp
cwtl
shll
insb
dec
jl
pop
cmp
testb
xor
push
arpl
cmp
cltd
xor
popf
sub
divb
xor
and
loopne
sbb
xor
fmulp
mov
shll
xor
mov
lahf
mov
xor
xor
dec
sbb
leave
ja
jle
or
daa
jge
mov
inc
xor
inc
push
mov
sbb
pop
stc
xor
mov
roll
inc
push
mov
push
xlat
inc
cmp
imul
sub
and
sub
shrb
xor
aas
pop
mov
outsb
mull
nop
pusha
ss
inc
and
xor
inc
xor
mov
cmp
xor
push
jns
inc
aaa
inc
outsl
push
xor
pop
sbb
in
add
ss
int
pop
pop
xor
xlat
and
push
sbb
push
and
fs
imul
xor
cmp
and
push
hlt
cmp
repnz
and
mov
lret
pop
sbb
xor
stos
sbb
push
xor
pop
sti
mov
fcomip
lret
pop
mov
sub
icebp
addr16
imul
cltd
mov
mov
jb
mov
sub
mov
lds
mov
xor
into
ds
fs
mov
xor
jge
or
dec
adc
xchg
pop
cmp
jne
dec
and
or
push
pushf
push
aaa
inc
pop
shrb
daa
pop
cmp
push
cmp
pop
jbe
xor
adc
bound
mov
push
les
fmull
cmpl
push
aaa
jnp
cmp
mov
dec
xor
fcmovu
xchg
dec
inc
sub
ss
pop
mov
cmp
sub
ds
imul
xor
mov
mov
dec
divl
ds
mov
jp
test
xor
xor
sub
jne
cmp
xor
adc
xor
or
js
in
mov
mov
daa
mov
and
daa
add
mov
xor
cmp
cmp
aaa
inc
jle
fists
xor
cmp
sbb
aas
mov
xor
cmp
push
icebp
adc
xor
mov
xor
imul
xor
mov
sub
test
ds
cmp
or
or
mov
xor
dec
cmp
jae
bound
lret
cmp
jo
stos
dec
dec
ret
push
add
adc
jb
cmp
es
mov
adc
lret
pop
cmp
xor
lret
dec
mov
mov
jb
iret
add
inc
xor
sub
adc
into
xchg
test
xor
push
jge
cmp
mov
out
aas
cmp
leavew
mov
push
lret
cmp
pop
cmp
xor
ret
clc
cmp
and
ja
push
jns
inc
jb
pop
fstpl
xchg
mov
xchg
cltd
fnstenv
and
test
fadd
cmp
into
mov
jp
mov
mov
push
pop
mov
sarl
dec
add
push
jnp
cmp
mov
adc
ljmp
xor
and
xor
mov
mov
rol
xor
popf
jnp
adc
iret
ss
test
sbb
out
fbstp
bnd
mov
jne
push
inc
push
imul
out
xor
jle
ss
xor
mov
fisubl
mov
inc
cmp
mov
and
add
cmc
aas
mov
sub
jo
imul
es
xor
je
adc
in
lret
pop
xor
sbb
fnstenv
xor
and
adc
push
jle
adcb
xchg
xlat
aaa
sti
xor
iret
fidivrs
mov
aas
mov
mov
push
pop
xchg
adc
pop
jl
sub
sub
or
mov
icebp
push
cmp
ss
shlb
pusha
test
mov
cmp
adc
call
pop
xor
push
mov
pop
ss
dec
rcrl
pop
xchg
sbb
lock
cmp
push
xor
pop
push
dec
xor
test
cmpsl
adc
xor
push
cmp
xor
aaa
lret
mov
into
inc
leave
mov
fldcw
shlb
cmp
xor
xor
sti
rcl
fcmove
lret
xchg
xor
icebp
fs
cmp
and
xor
in
enter
jno
xor
imull
cmp
aaa
xor
dec
sbb
ffreep
jge
into
mov
dec
cmp
mov
aaa
cmp
mov
cmp
cmp
lock
lret
in
and
cmp
cmp
add
mov
cmc
scas
dec
adc
mov
add
ss
jno
add
jnp
xor
xor
lret
lea
jae
rorl
jae
cwtl
lock
mov
bound
aas
jp
xor
aaa
lret
popf
xor
push
sarl
or
insl
adc
jmp
sub
popa
arpl
or
mov
and
cmp
aaa
into
aaa
inc
cmp
and
arpl
leave
enter
xor
popa
arpl
outsb
mov
in
es
movsl
aas
jle
rcl
jb
adc
adc
cmp
push
imul
xor
push
sti
addr16
outsb
clc
push
xor
and
cmp
adc
sti
mov
push
addr16
sbb
sbb
mov
ss
xor
and
mov
mov
push
push
jb
or
add
mov
icebp
imul
into
adc
dec
pop
cmp
cmp
enter
sbb
sbb
sbb
xor
mov
sub
mov
jge
xor
mov
mov
cmp
sub
sub
stc
daa
mov
mov
mov
mov
cmc
ds
cld
xor
xor
inc
jne
dec
sub
inc
mov
les
aas
mov
jne
jg
xor
scas
xor
xorl
inc
push
push
dec
xor
mov
clc
jle
push
enter
pop
jnp
popaw
frstor
mov
adc
bound
jo
jbe
cmp
fs
das
in
idivl
cmp
or
inc
sub
and
cmc
cmp
fs
and
xchg
sarb
pop
xor
data16
mov
mov
aas
outsb
imul
jnp
hlt
stc
adc
cmp
je
xor
xor
aaa
les
je
mov
int
ss
mov
mov
cmpsl
mov
not
lret
jae
daa
pop
clc
in
and
cmp
fcom
xor
cmc
cmp
clc
cmp
add
pusha
mov
mov
dec
leave
add
add
xor
mov
lds
cmp
cmp
or
dec
sbb
data16
jns
paddsw
sub
cmp
jo
mov
enter
flds
cmp
xor
mov
dec
inc
mov
xor
sti
es
push
lret
icebp
jg
mov
cmp
daa
cmp
test
xor
cmp
xor
inc
add
xor
xor
aas
jp
cmp
leave
xor
js
je
int
jl
mov
mov
cmp
mov
sbb
pusha
ffree
cltd
aaa
fs
push
and
cmp
mov
cmp
cmp
ja
inc
aad
mov
cmp
into
adc
mov
negb
cltd
sbb
push
push
mov
outsb
fxch
or
dec
fs
data16
mov
jg
mov
add
or
mov
mov
in
xor
imul
fsubl
popa
fnstsw
daa
push
and
pusha
mov
push
xor
mov
sub
cmp
xor
push
pop
cmp
xor
push
xor
push
cmp
pop
xor
cmp
aaa
or
xchg
xor
adc
xor
and
adc
xor
push
cmp
pop
xor
push
cmp
pop
xor
push
cmp
push
aaa
in
pop
cmp
jecxz
cmp
push
aaa
aam
lahf
push
aaa
push
ds
icebp
xlat
xor
pop
xor
aaa
cmp
xor
cmp
pop
xor
fwait
pop
xor
push
xor
shll
xchg
push
xlat
ss
cmp
sub
cmp
xor
mov
xor
ss
cmp
ret
xor
xor
and
and
push
xor
push
cmp
pop
xor
push
cmp
shlb
sbbb
push
xor
xor
cmp
xor
ds
cmp
push
aaa
fstps
aas
xlat
cmp
in
shll
fstpt
fwait
push
xor
aaa
pop
cmp
and
sti
push
cmp
push
and
cmp
xor
push
xor
push
cmp
pop
xor
aaa
mov
push
cmp
cmp
push
aaa
dec
pop
cmp
xor
rcr
xor
cli
pop
cmp
xor
jge
cmp
xor
or
or
mulps
pop
push
cmp
push
xor
push
cmp
pop
cmp
push
xor
push
cmp
pop
xor
push
cmp
shrb
aad
mov
push
xor
push
cmp
push
aaa
lahf
jg
xor
cmp
cmp
push
aaa
in
pop
cmp
push
xor
inc
cmp
add
cmc
or
lea
cmp
cmp
add
popf
or
xchg
pop
xor
cwtl
or
test
loope
xor
sarb
add
loop
cmp
inc
aaa
mov
cmp
je
xor
test
scas
shlb
cmp
aaa
lahf
push
or
add
sub
cmp
add
push
dec
cmp
cmp
int
mov
aaa
and
push
aaa
lcall
or
jmp
movl
add
xor
add
jmp
add
add
pusha
lret
cmp
pop
xor
add
xor
xor
pop
or
cmp
arpl
stos
mov
mov
aaa
mov
or
mov
cmp
aaa
test
cld
add
lahf
xor
add
popa
or
imul
sarb
add
jns
or
xchg
les
xor
sets
cmp
sub
xor
lret
aaa
cmp
cmp
pop
xor
mov
leave
das
cmp
and
or
roll
xlat
or
filds
xor
dec
das
pop
add
movd
xor
add
cmc
or
lea
cmp
cmp
add
popf
or
xchg
enter
add
pop
cmpsl
or
roll
sub
lcall
xor
add
xor
test
add
lahf
arpl
xor
cmp
aaa
jns
cmp
add
jne
cmp
add
add
cmp
pop
xor
add
adc
xor
and
cmp
pop
xor
mov
xor
ds
ss
xor
add
xor
add
jmp
add
in
cmp
pop
xor
icebp
or
icebp
pop
xor
pusha
or
test
xor
add
xor
add
and
push
lds
mov
aaa
mov
add
dec
or
xlat
xchg
inc
mov
pop
pop
xor
pusha
or
addl
mov
pop
xor
add
int3
aas
xchg
mov
xor
xor
cmp
add
lahf
daa
or
das
add
and
add
xor
cmp
pop
xor
cmp
cmp
pop
xor
cmp
pop
xor
add
cmp
pop
xchg
or
xor
sahf
mov
shlb
or
test
xor
inc
cmp
push
xchg
inc
cmp
cmp
add
movsl
or
mov
add
mov
cmp
das
pop
inc
dec
cmp
xor
xor
push
or
insl
pop
xor
pusha
or
popa
pop
xor
add
ss
pop
xor
add
xor
add
lahf
and
xor
add
cmp
cmp
xor
add
cmp
xor
add
cmp
bound
aad
cmp
pop
xor
loope
cmp
pop
xor
sahf
lret
aaa
cmc
or
lea
xor
orl
xchg
or
lahf
add
xor
xor
pusha
or
mov
xor
pop
xor
add
inc
outsb
or
inc
add
pop
or
jecxz
test
pop
inc
aaa
imul
outsl
insb
add
or
jge
xor
pusha
or
jno
xor
add
xor
add
cmpsl
outsb
or
push
add
mov
cmp
shll
or
inc
xchg
pop
dec
cmp
xor
sahf
lret
in
cmp
pop
xor
int3
dec
cmp
pop
xor
add
xor
test
or
aaa
lahf
loop
xor
add
clc
or
fwait
sub
and
cmp
pop
xor
orb
addb
xchg
or
popf
pushf
or
xchg
pop
xor
inc
cmp
or
cmpsb
add
lahf
mov
xor
aaa
dec
or
fwait
dec
add
repz
cmp
pop
xor
or
xchg
xor
fwait
or
fwait
pop
xor
add
xor
add
lahf
mov
xor
aaa
mov
cmp
add
inc
or
inc
pop
xor
pop
or
push
pop
xor
imul
imul
insl
or
gs
xor
add
outsl
add
adc
xor
pop
xor
add
sub
xor
aaa
daa
or
aas
bound
xor
cmp
pop
xor
iret
or
movl
fldenv
cmp
pop
xor
add
xor
les
xor
add
xor
add
lahf
orl
mov
aaa
fwait
or
pop
popf
add
xchg
lret
aaa
scas
out
or
mov
aaa
mov
lahf
mov
cmp
aaa
dec
lret
pop
xor
xor
add
xor
add
lahf
imul
jae
aaa
jae
cmp
add
ud2
cmp
pop
xor
sbb
and
adc
aaa
xor
pop
cmp
das
aaa
add
xor
sub
xor
mov
cmp
lret
aaa
cmp
cmp
cmp
popf
sarl
aas
shll
xor
cmp
in
xor
xor
cmp
stc
xor
lahf
std
cmp
cmc
xor
cmp
fwait
xorl
aaa
ss
lahf
xor
cmp
scas
aaa
mov
cmp
mov
xor
aaa
ss
cmp
xor
dec
cmp
inc
xor
pop
cmp
fwait
push
xor
imul
imul
xchg
outsl
xor
cmp
jg
ss
xor
aaa
ss
cmp
cmp
sbb
lahf
sbb
cmp
mov
das
mov
cmp
mov
sbb
xor
mov
cmp
xchg
lret
mov
int
xor
mov
xlat
mov
lahf
sarl
fwait
in
mov
out
mov
out
cmp
mov
xchg
repz
repz
test
cmp
xor
cmp
push
mov
pop
mov
push
cmp
mov
mov
mov
xchg
mov
es
xor
mov
xor
mov
or
xchg
pop
mov
push
mov
pop
mov
lahf
gs
outsl
mov
addr16
sub
mov
ss
xchg
pop
mov
btc
pop
mov
or
cmp
divl
cmc
cmp
stc
xor
cmc
cmp
icebp
aaa
outsl
xor
add
xor
xor
add
xor
cmc
cmp
icebp
aaa
fldt
xor
cmc
cmp
icebp
aaa
xlat
sti
cmp
cmc
cmp
icebp
aaa
jecxz
cmp
divl
xor
cmc
cmp
divl
test
xor
aaa
xchg
xor
aaa
xchg
sti
cmp
icebp
aaa
scas
sti
cmp
icebp
aaa
mov
xor
pusha
sti
cmp
xor
cmc
cmp
divl
cmc
cmp
aaa
push
outsb
stc
xor
cmp
aaa
arpl
cmp
cmc
cmp
icebp
sub
sti
cmp
divl
or
cmp
stc
xor
divl
cmc
cmp
divl
cmc
cmp
icebp
aaa
daa
outsb
stc
xor
cmc
cmp
icebp
aaa
xor
cmp
cmc
cmp
icebp
iretw
sti
cmp
divl
cmp
divl
pusha
sti
cmp
divl
cmc
cmp
divl
cmc
cmp
icebp
aaa
imull
xor
aaa
cmp
andl
xchg
icebp
aaa
lahf
sti
cmp
icebp
aaa
stos
sti
cmp
xor
aaa
mov
xor
dec
sti
cmp
xor
hlt
inc
insb
icebp
aaa
pop
sti
cmp
xor
pusha
sti
cmp
xor
cmc
cmp
divl
hlt
inc
stc
xor
cmc
cmp
stc
xor
aaa
lahf
adc
adc
sbb
sub
fwait
sub
aaa
daa
pop
cmp
push
xor
xor
xor
popf
iret
pop
cmp
push
xor
push
cmp
pop
xor
push
cmp
push
aaa
lahf
loope
xor
push
cmp
push
aaa
sti
pop
cmp
push
cmp
rorb
push
cmp
pop
xor
aaa
fwait
pop
cmp
push
aaa
xchg
pop
cmp
push
aaa
mov
xor
pusha
pop
cmp
xor
cmp
push
xor
push
cmp
aaa
pop
outsb
pop
xor
cmp
aaa
imul
bound
outsl
push
aaa
addr16
cmp
xor
jae
cmp
xor
pusha
pop
cmp
push
xor
push
cmp
fs
xor
push
cmp
push
aaa
das
outsb
pop
xor
push
cmp
push
aaa
cmp
cmp
cmp
push
aaa
aaa
pop
cmp
push
jge
insb
push
aaa
ret
pop
cmp
push
xor
pusha
pop
cmp
push
xor
push
cmp
and
xor
push
cmp
xor
popa
cmp
aaa
sub
cmp
xor
add
or
xor
je
cmp
aaa
xor
shrb
lds
aam
aaa
fcompl
aam
push
cmp
push
aaa
call
xor
out
cmp
push
xor
pusha
pop
cmp
push
xor
push
cmp
xor
aaa
nop
cmp
imul
push
cmp
je
xor
and
cmp
jb
cli
cmp
inc
xor
mov
xorl
xor
mov
xor
jmp
dec
aaa
mov
adc
jne
pusha
mov
adc
xchg
cmp
jno
push
jns,pt
adc
cmp
jmp
mov
int
dec
xor
xor
mov
aad
cmp
xor
mov
aaa
clc
sbb
clc
fnstenv
idivb
inc
sbb
mov
xor
mov
sub
inc
xor
xor
xor
jge
and
push
lret
into
mov
mov
mov
jle
repnz
xor
jmp
sti
cmp
fbstp
cmp
adc
mov
cmp
cmp
ja
cmp
pop
ds
xor
pop
cmp
aam
dec
jno
aam
xor
ja
jge
ffreep
mov
sbb
push
pop
cmp
sbb
and
sbb
ss
jle
loope
dec
sbb
push
cmp
out
push
aas
jo
xor
aas
xor
cmp
rol
leave
lret
aaa
xor
xor
sbb
jge
aas
push
xor
fidivrl
shlb
jbe
adc
xor
subb
xor
shll
push
xor
xor
test
xchg
cmp
daa
inc
cmp
and
add
es
aad
enter
add
cmp
mov
inc
xor
and
sti
jp
je
xor
sub
mov
cmp
cmp
or
jg
test
daa
xor
cmp
xor
sarl
aas
repnz
cmp
mov
sbb
cli
fnstenv
dec
and
cmp
icebp
xchg
cmp
fistps
insl
ds
cmp
daa
xor
pusha
cmp
inc
push
and
xor
cmpsb
cmp
sbb
insl
aaa
fidivrs
cmp
ds
push
xor
pop
mov
xor
push
jnp
dec
xor
dec
cmp
shrl
es
sub
or
sbb
xor
sub
xor
shll
cmp
jno
xor
test
repz
add
fcmovne
xor
adc
imul
cmp
pusha
xor
xor
sub
fwait
inc
jae
mov
mov
adc
cmp
ds
mov
cmp
inc
daa
cmp
data16
insl
xor
aaa
mov
insl
popa
shll
xor
cmp
adc
cli
xor
adc
das
and
out
xor
shll
xor
fxch
cmp
cmp
xor
fsubl
adc
ss
sub
xor
xor
sahf
cmp
xor
xor
inc
xor
sub
xchg
pop
inc
cmp
xor
fistpll
cmp
xor
imul
rcll
pusha
adc
adc
pop
scas
xor
lea
xor
cmp
adc
aaa
shll
add
sub
pop
xchg
aas
aam
cmp
xor
aas
push
or
nop
aas
stos
push
cmp
fildll
cmp
cmp
fucomp
inc
push
fisttpll
cmp
arpl
xor
add
xchg
ds
cli
sbb
sarl
and
das
xor
sub
xchg
aaa
outsl
cmp
fnstsw
xchg
cmp
xchg
es
ds
jge
push
fucom
pop
xor
xor
and
cmp
xor
cmp
sub
and
shll
xchg
les
mov
xor
cmp
xor
xchg
nop
ss
lahf
cmp
push
popf
cmp
xor
pusha
xchg
ss
ja
xor
push
fbstp
cmp
xor
aaa
cltd
sbb
cmp
pop
cmp
fnsave
jl
dec
xor
int3
mov
lret
aaa
ffreep
pop
es
sbb
es
sbb
movsl
and
stc
push
cmp
cmp
push
psrlq
popf
push
ss
sbb
xchg
push
xor
xor
mov
sub
mov
fwait
mov
or
mov
dec
cmpsb
xor
jp
ljmp
sub
data16
loopne
mov
ss
xor
or
pushf
dec
aas
or
lcall
cmp
xor
jle
xor
ss
push
aas
test
cmp
prefetch
xchg
dec
or
xor
pop
xchg
inc
aaa
pop
pop
xchg
inc
adc
xchg
dec
xchg
adc
pop
xor
sbb
lahf
and
push
adc
pop
sbb
pop
pop
xor
push
xor
je,pt
sbb
lock
xor
xchg
mov
les
xor
mov
sbb
aaa
inc
cmp
cli
xor
mov
cmp
mov
stc
xor
je
lods
das
ret
leave
cmp
lock
mov
or
sarl
mov
and
aaa
fisttps
xchg
into
mov
jb
mov
push
and
cmp
push
mov
mov
push
push
stc
xor
xor
hlt
sarl
fdivrs
mov
ss
xor
ret
jne
pop
cmp
pop
mov
aaa
inc
add
xchg
imul
xor
xor
xor
aaa
aas
or
xor
jnp
and
and
aaa
push
cmp
dec
or
rol
cmp
xor
sub
mov
cmp
fisttpll
loop
and
inc
cmp
mov
sarb
mov
or
add
enter
xor
inc
inc
and
dec
inc
and
insb
mov
or
sarl
pop
add
push
frstor
xor
sbb
cmp
daa
sub
imul
jnp
mov
clc
rcl
les
and
xor
pop
or
test
ss
sub
mov
jns
jns
dec
push
xchg
xor
sub
inc
xor
or
push
jle
cs
mov
mov
pop
aaa
cli
aas
jb
loopne
cmp
cmp
cmp
daa
sbb
sti
cmp
push
mov
xor
xchg
icebp
lret
jnp
stc
cmp
inc
xor
aaa
xor
cmp
xor
shll
xor
xor
mov
divl
sti
xor
inc
repnz
stc
mov
icebp
ds
cmp
cmp
and
push
cmp
dec
push
xor
and
and
mov
aaa
aas
sti
pop
cmp
mov
and
xor
push
cmp
lods
xlat
xor
shll
fwait
pmullw
in
pop
sbb
xor
cmp
std
pop
xor
and
inc
push
cmp
ds
neg
xor
mov
xor
xor
add
xchg
push
push
xor
push
cmp
pop
xor
push
cmp
push
aaa
rcrl
xchg
xor
push
xor
or
popa
push
xor
push
cmp
pop
xor
aaa
pop
icebp
pop
xor
push
cmp
push
aaa
cmp
cmp
push
aaa
jns
cmp
xor
xchg
pop
cmp
xor
push
xor
aam
insb
xor
sti
pop
sbb
xor
pop
cmp
xor
push
cmp
cmp
push
sbb
pop
xor
push
cmp
pop
xor
push
cmp
push
aaa
lahf
jg
xor
cmp
aaa
mov
cmp
mov
xor
fisttpl
xor
iret
push
aaa
xor
xor
pusha
pop
cmp
xor
cmp
push
xor
push
cmp
pop
xor
push
cmp
push
aaa
lret
pop
cmp
popa
dec
fildl
aaa
add
xor
imul
push
xor
pusha
pop
cmp
xor
push
cmp
xor
xor
dec
cmp
cltd
popa
dec
pop
sub
cmp
push
xor
popa
fstpt
pop
push
xor
pusha
pop
cmp
xor
push
xor
push
cmp
das
push
aaa
adc
or
jge
push
aaa
push
pop
cmp
xor
push
xor
push
cmp
fs
xor
push
cmp
aaa
push
outsb
pop
xor
cmp
aaa
adc
sub
push
cmp
push
aaa
fildl
xor
pusha
fldt
fwait
push
xor
push
cmp
push
xor
xor
push
cmp
pop
xor
xor
aad
adc
jmp
xor
push
aaa
lahf
pop
cmp
push
aaa
mov
cmp
xor
cvtdq2ps
sbb
xor
push
cmp
pop
xor
push
cmp
push
aaa
mov
pop
xor
inc
cmp
popf
xlat
xor
mov
cmp
xor
jns
cmp
push
xor
push
cmp
pop
xor
aad
fistl
lahf
cmc
pop
xor
aaa
lods
pop
cmp
push
aaa
push
pop
cmp
xor
xor
pop
rcll
cmp
adc
push
pop
dec
aaa
xor
cmp
pop
xor
aaa
mov
out
xor
sahf
pop
cmp
aaa
pop
fstpt
adcl
or
popf
mov
xor
add
xor
add
lahf
xor
xor
test
aad
aaa
aad
cmp
add
xchg
or
mov
add
push
or
imul
xchg
sbb
cmp
add
cltd
mov
out
aaa
decl
cmp
add
lods
or
mov
add
push
or
addr16
xor
pop
or
cmova
sub
xor
add
pop
lods
or
mov
cmp
aaa
pop
mov
cmp
aaa
or
cmp
pop
xor
and
xor
xor
pop
xor
lds
in
xor
add
arpl
push
or
imul
pop
add
cmp
xor
inc
cmp
or
icebp
bound
scas
or
mov
add
arpl
cmp
xor
mov
xor
mov
sbb
pop
xor
lds
add
jmp
add
sti
or
cmc
bound
xchg
or
cmpsl
pop
xor
dec
or
push
pop
xor
pusha
or
sbb
xor
cmpsl
sub
or
testl
pop
test
lret
cmp
add
arpl
cmp
xor
pop
or
and
xor
xor
xchg
or
dec
inc
push
ja
lcall
xor
add
xor
test
stc
add
lahf
cltd
or
mov
aaa
push
or
fwait
jnp
cmp
add
das
or
xor
add
or
pop
pop
xor
lds
je
inc
xor
add
in
or
pop
xor
pusha
ds
inc
jns
or
cmp
adc
pop
xor
push
mov
pop
nop
adc
or
xor
filds
mov
pop
mov
or
xchg
add
xor
cmp
xor
push
inc
aaa
cmp
cmp
xor
and
or
sbb
or
pop
add
xor
add
aaa
or
inc
pop
mov
push
pop
dec
push
js
mov
pop
fs
pop
dec
pop
aaa
pop
push
cmp
xor
pop
pop
xor
cmp
fbstp
jo
dec
xor
enter
push
xor
push
dec
bound
pop
sbb
jp
push
mov
xor
inc
push
pop
cmp
push
push
cmp
xor
dec
jnp
push
addr16
pop
push
aaa
gs
dec
xor
fistpll
jle
push
inc
jge
pop
push
je
cmp
pop
pop
dec
inc
push
inc
sub
aaa
fmull
cmp
pop
cmp
aaa
xor
xor
push
dec
pop
inc
ja
jp
xor
aaa
imul
aaa
pop
pop
dec
pop
push
jge
push
aaa
push
in
jmp
push
add
add
add
push
xor
ja
push
pop
xor
aaa
outsl
push
push
pop
jbe
jns
pop
inc
cmp
hlt
jecxz
outsb
aas
pop
aaa
xor
cmp
dec
dec
xor
push
dec
pop
pusha
xor
jbe
dec
inc
push
pop
dec
xor
inc
fwait
xor
xor
xor
xor
cmp
cmp
pop
dec
imul
inc
xor
aaa
js
mov
xor
xor
xor
lods
xor
je
xor
xor
aas
mov
dec
out
imul
dec
movsl
cmp
xchg
cmp
repnz
insl
pop
inc
push
cmp
push
pop
dec
pop
xor
cmp
iret
inc
inc
xor
mov
cmp
mov
xor
aaa
cmc
aas
insl
push
inc
pop
push
push
jns
inc
pop
pushf
cmp
popa
aas
inc
push
push
adc
dec
cmp
xor
inc
xor
lret
ds
xchg
cmp
pop
dec
push
pop
pop
nop
jnp
xlat
aas
push
pop
mov
sub
ds
push
xor
data16
jl
cmp
inc
movsl
xor
pop
pop
inc
aaa
mov
cmp
xor
shll
movsl
cmp
jp
pop
pop
loop
push
dec
xor
jnp
dec
pop
inc
push
push
pop
push
js
push
push
mov
outsl
push
inc
inc
dec
push
cmp
es
xor
das
outsl
push
pop
push
cmp
sbb
cmp
test
gs
xor
jnp
push
push
inc
pop
je
and
or
push
dec
mov
inc
aas
cmpsl
xor
outsb
dec
push
inc
jno
pop
xor
cmp
push
push
pop
sbb
pop
or
xchg
inc
jle
inc
pop
movsl
adc
aaa
outsb
or
jae
orb
and
pop
push
mov
jns
outsl
lcall
sub
and
dec
xchg
aas
aaa
dec
dec
and
xor
add
inc
ret
inc
sub
push
adc
and
push
push
push
inc
cmpsl
dec
cmp
jae
and
adc
or
cmp
das
stos
sub
cmp
xor
insb
cmp
cmp
xor
bound
and
stos
aas
jo
jno,pn
or
xor
inc
or
imul
movsl
aaa
push
or
pop
inc
dec
leave
xor
jno
xor
popl
push
push
pop
pop
push
cmp
add
push
dec
push
pop
xchg
mov
mov
mov
push
dec
xchg
sub
sub
ja
aaa
push
dec
inc
data16
xor
popa
push
pop
cmp
inc
pop
jp
pop
inc
cmp
push
pop
dec
inc
pop
xor
xor
pop
dec
ja
pop
pop
js
inc
inc
dec
push
push
inc
inc
pop
cmp
loope
cmp
push
pop
stc
inc
push
gs
push
push
aaa
arpl
sbb
inc
xor
jno
pop
push
push
pop
xor
pop
push
inc
pop
push
dec
cmp
mov
cmp
xor
pop
pop
pop
cmp
pop
xor
ljmp
dec
cmp
cmp
aaa
xor
xor
xor
add
cwtl
xor
pop
dec
cmp
and
imul
cmp
xor
push
dec
pop
pop
pop
pop
cmp
arpl
pop
push
push
jnp
push
pusha
xor
popa
mov
jg
inc
jae
mov
mov
pop
push
adc
xor
push
pop
xor
aaa
jae
push
inc
addr16
js
pop
pop
push
pop
xor
mov
inc
mov
push
mov
inc
sub
xor
dec
jo
pop
add
cli
mov
mov
push
push
mov
cmp
push
mov
imul
inc
jo
cmp
aas
xor
jl
pop
push
push
pop
push
pop
mov
cmp
mov
jge
push
mov
jno
and
mov
mov
cmp
inc
push
pop
sbb
push
inc
inc
mov
mov
arpl
xor
push
push
js
push
inc
popa
cmp
inc
pop
dec
push
jae
add
ja
cmp
push
pop
inc
dec
cmp
repz
pop
inc
inc
inc
push
inc
xor
mov
cmp
xor
mov
mov
outsb
xor
jae
mov
cmp
scas
ja
test
adc
push
push
cli
mov
cmp
adc
mov
sub
cmp
sub
mov
pop
imul
hlt
dec
js
fs
inc
pop
mov
push
inc
cmp
push
push
jl
jno
jle
xor
inc
pop
pop
mov
xor
xor
stc
push
jb
pop
push
dec
push
aaa
ss
mov
negl
pop
jne
inc
sti
xor
sub
sub
mov
inc
push
adcl
jle
cmp
fdivrp
sub
cmp
jnp
adc
lods
jne
pop
xor
hlt
or
pop
push
mov
push
dec
xor
push
mov
pop
inc
jns
data16
fsin
sub
jg
inc
mov
xor
js
dec
addr16
push
dec
cmp
insb
pop
pop
jg
mov
lahf
cmp
icebp
cmp
add
aas
insl
push
pop
inc
mov
cmp
mov
jo
xor
cmp
addr16
je
push
or
push
pop
pop
sbb
xor
aaa
jbe
jno
push
cmp
dec
jp
ret
outsl
push
fs
pop
pop
cltd
inc
aaa
aaa
sub
push
dec
push
pop
cmp
pop
pop
cmp
jne
pop
cmp
dec
jns
bound
js
int
popa
dec
pop
pop
inc
pop
js
push
je
cmp
sbb
adc
outsb
mov
pop
push
dec
lock
xchg
cmp
fs
push
dec
jbe
pop
xor
bound
xorl
outsb
js
mov
std
push
dec
pop
xchg
push
sarl
xlat
sbb
ds
fidivl
xor
pop
ss
xor
and
and
xor
fdivrs
pop
cmp
gs
cmp
sub
xor
imul
dec
dec
aaa
test
push
js
shlb
aad
inc
push
ds
pop
lcall
addr16
inc
dec
push
xor
lret
inc
fwait
je
aas
xor
pop
dec
jge
shlb
pop
jns
gs
push
pop
push
pop
adc
sbb
jge
ja
xchg
imul
dec
shll
push
cmp
adc
inc
pop
cmp
xlat
aaa
xor
pop
push
pop
addr16
jnp
xor
mov
jge
push
inc
jle
lods
xchg
add
pop
or
add
ret
cmp
stos
push
xor
xor
cmp
pop
cmp
sti
jmp
cmp
cmp
lea
cmp
inc
xchg
and
cmp
imul
cmp
cmp
jb
sub
push
sbb
push
inc
inc
jp
xor
inc
jne
cmp
insb
popf
sbb
jb
pop
push
jo
sub
nop
xor
cmp
adc
push
dec
dec
inc
inc
aad
mov
jge
je
push
push
mov
movsl
push
aaa
jg
push
hlt
xor
shll
fs
push
dec
push
pop
sbb
jnp
sbb
adc
push
dec
dec
stc
inc
pop
dec
mov
push
push
cmp
push
push
push
cmp
or
ss
sbb
outsl
jle
scas
aas
xchg
aaa
sbb
sbb
pop
inc
dec
dec
pop
popa
mov
xor
xor
ss
xor
and
xor
aam
jne
inc
push
dec
jnp
inc
push
pop
leave
xor
cmp
pop
jp
pop
fstps
movsl
xor
enter
sbb
inc
dec
jne
xor
test
add
aaa
popa
push
jbe
xor
aaa
jno
dec
inc
mov
daa
mov
in
or
dec
push
sub
jge
pop
je
or
inc
add
jp
xor
adc
xor
pop
cltd
popa
xor
aaa
jbe
inc
push
bound
inc
inc
outsl
test
pop
mov
cmp
pop
pop
pop
js
out
mov
pop
xor
jle
and
mov
add
xor
pop
sub
sbbb
sub
or
jo
scas
ljmp
inc
cmp
push
and
popa
push
dec
js
and
cmp
out
fidivl
je
pop
cmp
popa
add
movsb
movsl
pusha
daa
sub
sub
mov
xor
sub
imul
cmp
outsl
pop
push
popa
pop
inc
dec
dec
push
ss
dec
fs
xor
pop
jp
xor
pop
cmp
push
mov
test
cmp
xor
gs
jo
jae
pop
aam
in
daa
cmp
jne
sub
cmp
daa
popa
cs
cld
mov
inc
js,pt
ja
sbb
aaa
and
push
or
inc
sub
cltd
xor
bound
sub
pop
dec
cmp
xor
lods
push
push
inc
dec
push
mov
dec
jmp
push
inc
pop
dec
test
push
xor
mov
jp
sub
push
xor
inc
in
leave
sbb
cmp
or
sub
shlb
push
push
inc
pop
out
push
loopne
xlat
mov
leave
push
pop
dec
sub
lock
outsl
ja
xor
inc
dec
push
pop
cmp
adc
out
push
inc
inc
scas
sub
pop
aam
push
addr16
pop
pop
cmp
pop
xchg
sub
pop
xor
jg
xchg
aaa
sbb
xor
add
jge
push
push
pop
inc
pop
cmp
xor
jg
gs
push
fnstenv
data16
addr16
cmp
xor
out
pop
xorb
jp
adc
movsb
cmp
test
and
cmp
xor
inc
pop
add
adc
shlb
add
pop
push
and
pop
pop
cltd
push
pop
je
dec
pop
pop
je
cmp
cmc
test
cmp
inc
dec
mov
ja
cmp
and
mov
cmp
dec
aam
popa
push
ja
push
xchg
or
and
cld
push
test
cmp
arpl
push
cltd
fwait
clc
adc
push
mov
mov
mov
cmpsb
addr16
push
inc
inc
loopne
mov
dec
daa
test
xor
fcom
sub
mov
xchg
aaa
lahf
test
xor
jbe
push
dec
mov
xlat
xor
inc
loopne
xchg
aas
into
adc
std
call
movsb
js
popa
je
imul
lea
mov
mov
cmp
bound
jne
xor
mov
xor
ss
jmp
pop
pop
jl
fisttpll
push
in
push
push
and
addr16
jns
jp
nop
mov
loopne
stos
dec
cmp
loope
xor
jb
inc
jne
imul
xor
mov
add
pop
pusha
sub
and
inc
xor
jmp
or
cmp
stc
or
ss
pop
cmp
xorb
jg
adc
mov
pop
pop
inc
imul
daa
xor
ss
push
push
sbbl
add
dec
pop
cmp
jl
inc
clc
sub
js
std
pop
mov
ja
icebp
das
xchg
and
adc
push
pop
jl
ja
dec
xchg
inc
stos
xor
mov
push
inc
nop
iret
in
aaa
out
push
push
xchg
bnd
xor
jp
test
inc
pop
dec
data16
xor
jns
or
sbb
cmp
sub
jle
inc
pusha
cmp
inc
jnp
push
push
jb
inc
cmp
push
dec
dec
xor
jb
jbe
pop
push
inc
xor
inc
pop
push
push
daa
push
cmp
push
aaa
adc
inc
aaa
gs
push
dec
dec
ja
pop
jno
pop
pop
dec
xor
sbb
push
push
inc
pop
push
push
cmp
xor
je
push
dec
push
pop
fs
mov
cmp
xor
cmp
and
jb
add
jne
cmp
xor
cmp
inc
inc
cmp
or
xor
or
ss
dec
cmp
pop
pop
push
aas
cwtl
pop
aaa
aaa
imul
jae
cmp
fs
dec
sub
aas
xor
jbe
push
jno
push
dec
push
push
pop
aaa
cs
xor
push
inc
imul
mov
pop
cmp
jle
push
push
mov
cmp
mov
dec
push
mov
dec
cmp
xor
inc
push
cmp
and
mov
mov
cmp
pop
inc
dec
jbe
push
cmp
jle
ss
jge
inc
pop
cmp
je
dec
dec
xor
xor
push
jae
inc
push
pop
inc
aaa
and
repz
jl
ds
aaa
add
aaa
xor
inc
inc
pop
pop
mov
jb
pop
jle
insb
push
aaa
pop
push
push
aaa
mov
inc
pop
pop
push
mov
pop
push
mov
mov
push
cmp
mov
push
dec
pusha
mov
cmp
ds
jp
and
dec
dec
gs
mov
outsb
xor
mov
xor
push
dec
push
xor
aas
or
sub
xor
xor
pop
je
jp
inc
inc
stc
push
fs
ss
shlb
push
pop
pop
push
mov
cli
inc
jne
cmp
aas
jp
pop
pop
fs
arpl
push
mov
stc
mov
popa
pop
pop
dec
pop
jne
sbb
je
pop
dec
push
jns
inc
jb
mov
push
push
jp
inc
inc
push
sti
xor
cmp
inc
pop
inc
inc
aaa
and
sbb
jno
jo
out
sti
jbe
aaa
inc
dec
insb
pop
inc
inc
push
dec
xor
jg
inc
push
xor
insb
imul
imul
dec
cmp
push
dec
dec
add
mov
sbb
pusha
inc
test
dec
jle
imul
cli
xor
jno
scas
cmp
pop
inc
push
pop
aaa
inc
divl
mov
push
pop
sbb
jno
jae
imul
push
sbb
adc
scas
jns
cmp
imul
aas
js
repz
inc
outsl
clc
aas
stc
cmp
imul
xor
cmp
bound
jl
xor
jp
push
sub
sub
outsb
xor
pop
add
push
mov
dec
sahf
xor
push
mov
mov
dec
pop
inc
inc
xor
pop
pop
pop
push
sbb
adc
dec
sbb
bound
push
jo
addr16
xor
js
ss
push
adc
xor
js
jae
mov
pop
je
jnp
pop
push
jo
dec
jb
bound
pop
stos
ret
cmp
lock
aad
cmpsl
shlb
cmp
jb
je
popa
pop
jle
jnp
jp
xor
inc
cmp
xor
lahf
stc
daa
push
and
cmp
js
pop
ja
sbb
push
dec
jg
inc
xor
xor
jp
hlt
dec
fnstcw
aas
adc
adc
outsl
adc
cmc
fisubrl
cmp
stc
xor
insl
pop
pop
inc
and
pop
xor
xor
scas
pusha
xor
data16
jg
cmp
cmp
addr16
pop
inc
bound
xorps
and
sahf
xor
cmp
aad
jbe
jbe
insl
push
pop
ret
inc
push
sbb
test
mov
and
jp
mov
cmp
xor
xor
xor
sub
xor
xor
lret
cs
cmp
xor
xor
cmp
ds
cmp
xor
xor
cmp
ss
cmp
xor
xor
cmp
xor
xor
xor
cmp
xor
xor
xor
cmp
xor
xor
lret
ds
cmp
xor
xor
cmp
ds
cmp
xor
xor
cmp
ss
cmp
xor
xor
cmp
xor
xor
xor
cmp
xor
xor
xor
cmp
xor
xor
lret
ds
cmp
xor
xor
cmp
ds
cmp
xor
xor
cmp
ss
cmp
xor
xor
cmp
xor
xor
xor
cmp
xor
xor
xor
xor
les
mov
inc
xor
mov
xor
jns
xor
sti
cli
xor
mov
dec
cmp
cmc
aas
mov
cmp
and
xor
lret
and
jne
shlb
enter
adc
aaa
mulps
cmc
xor
ds
call
xor
aam
xor
pop
dec
pop
cmp
adc
insl
push
arpl
dec
cs
inc
cmp
jg
add
mov
inc
enter
repz
outsl
hlt
arpl
aaa
inc
pop
sub
mov
jnp
and
xchg
outsb
push
cmp
cmp
fstpl
push
xor
dec
aaa
mov
push
cmp
sbb
repz
xor
lret
adc
mov
cmp
or
inc
xor
jno
adc
cmp
push
sti
pop
cmp
xor
cmp
ror
xchg
sub
ss
imul
jno
aaa
and
cmp
loope
popa
bound
gs
sbb
push
xor
cltd
and
and
sub
addr16
rorb
cmp
cmp
mov
sub
lret
nop
aaa
sub
cmp
ss
aad
lock
mov
xchg
mov
sbb
ss
cmp
inc
xor
xor
ds
inc
aaa
ss
pop
div
sarb
xor
divb
sbb
xor
mov
cmp
pop
mov
mov
sbb
lret
push
fnstenv
sbb
les
xor
data16
bound
fidivrl
adc
xor
or
sbb
add
cmp
daa
or
sub
into
cmp
inc
cmp
mov
fstpt
mov
adc
cmp
not
lcall
enter
mov
int3
xchg
xor
cmp
and
push
xor
cmp
cmp
adc
inc
icebp
cmp
ds
adc
and
into
and
cmp
xor
xor
lock
inc
shlb
dec
and
or
bound
sub
cmp
mov
aas
mov
xchg
xor
xor
mov
leave
cmp
cli
xor
aaa
xor
mov
xchg
mov
dec
sbb
aaa
push
sub
popa
and
cmp
dec
std
mov
into
or
jnp
lock
mov
jae
dec
mov
mov
sbb
shlb
pop
cmp
mov
mov
enter
jno
int
loope
enter
xchg
mov
xchg
cmp
fadds
push
cmp
add
adc
xor
pushl
xor
je
hlt
gs
divl
sarl
addr16
ret
sub
mov
std
or
xor
xor
pop
xor
or
and
mov
cmp
repz
xor
cmp
add
mov
xor
xchg
xor
icebp
imul
fwait
cmp
xchg
dec
xor
sbb
xor
cmp
aaa
inc
test
cmp
int3
ja
xor
push
mov
cmp
add
arpl
xor
aaa
outsb
mov
inc
or
cmp
aas
cmp
add
cs
sub
stos
aaa
es
aaa
and
sarl
jo
xor
mov
sbb
aaa
aaa
xor
ss
xor
jne
aas
sbb
gs
lret
jge
je
mov
mov
fnsave
cmp
cmp
data16
mov
mov
sarl
iret
leave
xor
mov
lock
xor
cmp
xor
sti
inc
push
popa
push
xor
add
mov
and
and
cmp
mov
xor
mov
iret
xor
jae
leave
xor
adc
mov
jns
mov
inc
sub
xor
dec
shrb
add
inc
cmp
xor
push
xor
xor
repnz
int
jecxz
pop
out
aas
jno
cmp
mov
push
fcmovnbe
xor
cmp
xor
xor
add
mov
iret
cmpsb
aaa
ja
gs
inc
cmp
cmp
cmp
xor
or
cwtl
or
jle
mov
xor
jo
cmp
ss
jae
daa
mov
into
or
arpl
mov
xor
pushl
mov
adc
mov
data16
cmp
mov
pushf
sbb
cmp
jg
jnp
clc
pop
xor
cmpb
inc
and
xor
repnz
mulb
shll
mov
or
sbb
cmp
mov
pop
add
xor
ss
loop
inc
xor
xor
mov
cmp
shr
addr16
fs
mov
addr16
fwait
xor
aaa
mov
push
cmp
add
cmp
arpl
jge
icebp
xor
add
repz
rdmsr
lock
cmp
cmp
mov
cmp
lock
cmp
jno
xor
dec
sub
mov
sbb
jno
inc
xor
inc
shl
pop
xor
cmp
cmp
imul
daa
pop
loopne
mov
cmp
fidivrs
mov
mov
cmp
mov
mov
cli
cmp
mov
arpl
inc
mov
jmp
mov
mov
sti
rcrb
mov
jno
inc
xor
shlb
cmp
sbb
cmp
xchg
hlt
fnstcw
cmp
cmc
push
mov
cs
jecxz
cmp
xor
mov
xor
outsl
aas
mov
bound
repnz
mov
pusha
aad
sub
enter
mov
adc
add
add
xor
xor
jo
aaa
mov
sub
mov
and
enter
or
or
inc
cmp
dec
add
aas
mov
xor
or
dec
cmp
mov
cmp
sarl
sbb
xor
fisubrs
mov
cmp
jae
repnz
add
pop
loopne
inc
xorb
imul
ds
add
cmc
xor
pop
mov
fdivrl
mov
loope
lds
and
mov
cmp
jbe
loopne
ss
aas
sub
sbb
pop
js
mov
xor
test
mov
lds
xchg
dec
xor
or
leave
or
xor
test
mov
mov
cmp
xor
int
inc
lds
xor
sub
dec
xor
cmp
inc
xor
testb
mov
sbb
mov
xor
es
bound
jne
loope
and
pop
mov
xor
pop
xor
shll
fwait
sbb
enter
xchg
inc
or
jge
cmp
xor
jle
mov
inc
das
mov
mov
mov
mov
addr16
les
push
inc
mov
lret
pop
pop
jmp
mov
filds
jns
jae
cmp
leave
sub
cmp
jae
xor
outsb
int
or
xor
mov
stc
adc
in
sarb
cmp
xor
pop
aaa
add
inc
shll
or
stos
add
mov
xor
int3
sbb
hlt
cmp
xchg
lcall
cmp
xor
loope
mov
fsubrl
das
cmp
or
dec
cmp
cmp
je
push
sub
out
rcrl
add
daa
dec
or
pop
jecxz
jnp
xor
movb
sub
shl
sub
mov
aad
mov
jae
add
jns
mov
cmpsl
xor
dec
in
cmp
xor
xchg
mov
lds
inc
cmp
xchg
push
sub
sub
mov
mov
mov
push
mov
sbb
cs
inc
xor
xor
adc
xorb
sbb
fsubl
aas
push
cmp
mulb
ret
fnstsw
xchg
lds
iret
xor
inc
xor
outsl
adc
jb
pop
cmp
sbb
xor
xor
int
xor
cmp
cmp
icebp
push
xor
int
jl
cmp
and
pop
aas
rcrl
or
xchg
xor
cmp
mov
cmp
imulb
cmp
or
dec
cmp
jne
mov
shll
fwait
fwait
out
mov
xor
and
xor
cmp
xor
divl
xor
fiadds
lret
enter
xor
inc
sbb
cmp
mov
adc
inc
arpl
jnp
mov
inc
jne
xor
cmp
xor
aad
bsf
cmp
dec
enter
loope
xor
mov
xor
loope
in
sbb
ljmp
out
inc
sub
cmpsl
cmp
test
jns
hlt
dec
aam
xor
mov
xor
scas
idivb
cmc
cmp
outsb
imul
aaa
dec
pop
sub
xor
inc
aaa
mov
mov
enter
xchg
aaa
cltd
xor
popf
test
xor
xor
cmpb
jmp
adc
push
mov
stc
inc
gs
cmp
and
inc
shlb
xor
test
cmp
insl
push
insb
xor
cmp
xor
cmp
mov
imul
adc
sub
std
inc
ss
lock
ret
cmp
add
clc
mov
adc
mov
cmp
xor
jns
mov
mov
push
inc
ret
xor
xor
xor
decl
xor
cmp
repnz
and
push
add
aaa
sub
xor
cmp
xor
mov
cmp
adc
cmc
pop
mov
mov
mov
adc
mov
push
mov
aaa
scas
lret
mov
adc
aaa
aas
aaa
mov
sub
or
jecxz
iret
dec
jo,pt
adc
fnstsw
and
jno
mov
jno
out
ljmp
and
aaa
mov
mov
cmp
jge
sbb
es
xchg
cmpxchg
sbb
je
pop
icebp
jg
jnp
and
xor
xchg
cmp
cmp
clc
xor
add
mov
jnp
and
push
mov
sub
mov
insl
mov
and
xchg
mov
cmp
popa
fs
and
xor
cld
pop
mov
aaa
or
addr16
lret
xor
lret
xor
cmp
mov
mov
inc
cmp
xor
push
js
cmp
insb
sub
and
jns
icebp
jno
cmp
ds
int
lret
add
idivb
les
cmp
cmp
cli
fs
add
pop
mov
sub
ret
lret
je
leave
cmp
sub
test
xor
pop
fildll
into
aaa
adc
mov
sub
shl
mov
cmc
mov
int
imul
and
or
sub
push
leave
cmp
daa
inc
sub
icebp
mov
mov
int
fisttpll
iret
dec
ja
les
and
sub
xor
jp
mov
mov
repz
jo
cmp
ffreep
jno
ljmp
adc
stc
xor
cmp
cmp
push
stc
and
bound
cmp
fxch
into
jnp
leave
aaa
mov
inc
adc
jno
xor
xor
xor
mov
icebp
mov
mov
jno
testb
outsb
hlt
xor
int3
cmp
mov
xor
into
aaa
inc
xor
xor
xor
pop
clc
cltd
pusha
xchg
and
mov
xor
fidivs
add
jnp
dec
divl
ret
sysexit
dec
xor
push
imul
lcall
xlat
arpl
cmp
push
push
mov
sbb
xchg
xor
xchg
cmp
xor
pop
addr16
push
mov
xor
ss
jbe
xorb
std
add
jnp
and
mov
inc
sub
dec
cmp
cmp
ss
ds
mov
mov
cmp
inc
xor
mov
cmp
cmp
push
mov
sub
xor
in
rcrl
mov
or
in
push
les
outsl
daa
inc
sbb
mov
mov
ja
push
cld
mov
out
mov
rcr
mov
movsb
mov
xor
dec
sub
ja
gs
fwait
je
fstpl
cmp
and
rorb
adc
jne
add
cmp
mov
xor
jae
mov
pop
add
inc
and
cmp
mov
pop
cmp
outsl
insb
xor
xor
mov
pop
xor
mov
sub
mov
cmp
repz
inc
sub
xor
mov
aas
xor
mov
mov
sbb
ficompl
mov
gs
cmp
mov
leave
icebp
jo
shlb
and
mov
leave
addr16
cmp
je
or
sub
aas
dec
sbb
aaa
int3
ss
adc
and
cmpb
mov
add
cmp
mov
cmp
mov
popa
stc
xor
cmp
xor
aas
jl
or
xor
xor
xor
cmp
mov
mov
leave
jp
xor
cmp
xlat
sub
jno
sarl
xor
and
lods
cmp
fsubrl
fdivs
popa
cmp
mov
out
dec
jns
rdtsc
and
testl
repnz
xlat
into
mov
cmp
push
ficoms
test
push
xchg
xorl
hlt
mov
das
mov
ss
mov
cmp
add
rclb
rclb
bound
cmp
sbb
mov
mov
pop
in
xor
jnp
cmp
aaa
sub
xor
pop
xchg
or
or
add
push
add
iret
push
or
pop
pop
popa
cmp
js
pop
sub
push
or
mov
pop
xor
fildl
pop
push
xor
jo
pop
xor
mov
push
mov
ror
sub
xor
pop
push
adc
cmp
je
push
push
cli
dec
push
testl
add
addr16
sbb
or
push
xor
sbb
popa
inc
cmp
mov
arpl
adc
fimuls
test
jo
aaa
adc
addr16
arpl
arpl
push
pop
arpl
xor
push
sbb
push
push
ss
cmp
into
sub
push
pop
cmp
lcall
jg
xor
mov
lds
call
ret
loop
adc
xor
sbb
out
mov
in
adc
jbe
ja
mov
mov
loopne
mov
sbb
dec
mov
sbb
jo
push
mov
mov
ret
jnp
xor
mov
sbb
push
push
cld
jl
lret
xor
mov
cld
lcall
xor
arpl
push
and
in
cmp
jle
dec
es
cltd
pop
mov
pop
add
xor
jne
adc
imul
push
clc
cwtl
jge
jbe
add
ja
cmp
ds
pop
bound
jmp
jb
fwait
jae
mov
aaa
push
aas
mov
ds
cmp
divl
fbstp
xor
cmp
mov
ss
xor
mov
mov
sbb
push
mov
movsb
add
jbe
sub
jno
mov
inc
and
push
ret
mov
mov
aas
xor
dec
jecxz
ss
aaa
xchg
pop
cmp
testb
cmp
shlb
xor
pop
cmp
aaa
xor
pusha
xor
cmp
inc
aaa
mov
div
shll
add
mov
insl
add
lock
xor
xor
cmp
or
andl
push
pop
jne
cmp
pop
xor
xor
fs
adc
and
and
pop
or
fs
cmp
lret
sbb
mov
xor
jg
push
adc
and
lret
leave
enter
xor
push
aas
imul
dec
push
cmp
jns
cmp
aaa
mov
int
inc
ss
mov
push
xor
cmp
cmp
mov
inc
and
sub
ja
add
idivl
dec
add
add
cwtl
mov
js
ss
daa
mov
sub
lret
pop
rcll
xor
lret
xor
or
sarb
imul
mov
dec
adc
fsts
aaa
xor
jae
iret
mov
out
pop
cmp
mov
cmp
inc
xor
cmp
popf
cmp
out
push
sbb
mov
shlb
out
jno
inc
flds
inc
imul
shlb
jg
call
xor
jne
icebp
into
push
jns
xor
adc
test
andl
mov
push
es
shll
add
xor
xor
shlb
ljmp
jp
les
mov
xor
xor
cmp
xor
pop
or
adc
mov
cmp
xor
push
sub
das
xor
xor
xor
mov
ss
jle
adc
xor
add
jp
dec
cmp
cmp
inc
cmc
or
lock
xor
bound
mov
icebp
aaa
fdivrl
jle
enter
xor
xor
jecxz
iret
cmp
inc
add
pop
lods
mov
and
rclb
add
movsl
cmp
cmp
sbb
mov
jmp
cmp
mov
iret
xor
cmp
xor
cmp
leave
ss
cmpsl
mov
dec
sub
mov
cmp
add
stos
or
xchg
pop
xor
mov
lret
mov
xor
mov
les
mov
pop
jnp
xor
fldl
jnp
xor
inc
sub
lock
jle
aas
dec
lret
mov
xor
jno
enter
es
and
mov
cmp
jbe
ds
ror
das
inc
xor
movb
or
daa
daa
xor
xchg
add
and
mov
jp
fwait
sub
aad
mov
mov
mov
cmp
mov
mov
loop
hlt
xchg
mov
inc
and
je
leave
mov
cmp
xor
dec
leave
mov
xor
push
les
jecxz
or
roll
repnz
xor
push
jle
ds
clc
aaa
mov
xor
aaa
dec
xor
into
adc
scas
clc
iret
pop
lock
xor
push
ss
repnz
jnp
iret
jnp
int
inc
cmp
mov
fs
mov
xor
aas
icebp
mov
ss
iret
mov
icebp
aaa
aam
xor
fdivrs
insb
int3
daa
adc
mov
addr16
lret
mov
aad
repz
and
mov
mov
xor
aaa
testb
adc
cmp
cmp
mov
sub
cmp
ret
add
mov
fsubr
ja
push
sub
add
xor
lahf
mov
sub
or
inc
out
add
mov
test
cmp
jmp
lea
addr16
clc
xlat
aas
ds
sbb
leave
mov
mov
cmp
cmp
add
xor
subl
aaa
subl
bnd
aam
aas
cmpl
xor
fnsave
ret
xor
aaa
push
mov
jae
imul
add
mov
sbb
dec
xor
cld
mov
xor
mov
adc
cmpsb
fs
stc
sub
fnstcw
test
mov
mov
add
add
sub
jns
mov
xchg
xor
cmp
mov
xor
cli
mov
daa
jb
inc
xor
enter
xor
fildll
cmp
out
lea
cmp
lea
mov
scas
sbb
cmp
mov
xchg
loop
cmpsb
add
jns
mov
sub
lcall
mov
lret
xor
andl
or
jno
ss
mov
xor
cmp
pushf
lret
mov
xor
inc
movsl
mov
aaa
mov
and
sub
enter
xor
push
sub
cmp
pop
cmp
into
addr16
enter
outsb
ja
gs
xor
insb
mov
xor
subl
popa
cmp
xor
dec
xor
sub
cmp
cmp
xor
subl
cmp
cmp
cmp
xor
cmp
xor
xor
xor
xor
lock
add
cmp
aas
push
or
pusha
adc
dec
cmp
and
xor
cmp
sbb
xorl
cmp
mov
cmp
cmp
add
mov
cmp
cmp
cld
jge
inc
lds
xor
xor
push
sti
sarb
xor
lea
mov
push
cli
shlb
aaa
push
jecxz
fidivrs
push
ret
mov
or
btc
and
out
adc
cmp
add
fdivrl
mov
and
sub
mov
mov
cmp
mov
aas
mov
push
leave
cmp
insb
cmp
mov
add
and
mov
mov
mov
and
and
rcrl
mov
mov
out
xor
sub
cli
xlat
cmp
lret
mov
xorb
add
jg
jno
sub
int
aas
jae
mov
or
mov
xor
in
sub
clc
adc
stc
daa
leave
neg
cmp
mov
xor
mov
hlt
cmp
ds
cmp
or
lret
or
sub
inc
cli
fidivl
mov
and
stc
popa
mov
xor
daa
int
xor
xor
xor
adc
js
fnstsw
adc
pushf
inc
dec
pop
inc
stos
stc
dec
mov
inc
cmp
sbb
mov
mov
ja
mov
ret
cmc
ds
inc
sub
dec
jo
xor
out
add
aaa
sti
mov
orl
xor
ss
mov
lock
sarl
fs
cmp
inc
mov
cmp
xor
int
xor
cmp
or
aad
lcall
xor
xor
adc
das
hlt
sti
cmp
dec
sarb
mov
adc
ja
cld
xor
xchg
out
cmp
sbb
adc
in
push
pop
dec
adc
lds
adc
sti
push
pop
jle
adc
or
jo
fdivrl
ss
push
xor
js
xor
sub
dec
push
xchg
cmp
insl
cmp
int
daa
jge
jbe
inc
cmpsl
int
or
xor
cmc
xor
insb
int
insb
cmp
or
xchg
push
or
push
cmp
fdivr
xor
xor
inc
cmp
push
and
ret
mov
inc
ret
fidivl
movsb
mov
fldenv
add
jnp
lds
icebp
cmp
dec
push
adc
sbb
xor
ds
push
mov
cmp
adc
ds
xchg
push
sahf
inc
push
xor
das
lahf
dec
aaa
les
push
xor
mov
negb
jo
xchg
dec
fstpt
fcoms
dec
adc
enter
dec
hlt
and
sbb
dec
xor
pop
sbb
or
pop
jg
int
pushf
or
or
mov
cmpl
jo
mov
leave
aas
push
enter
push
pop
cmp
push
cmp
mov
cmp
pop
xor
push
sti
xor
pop
scas
xor
push
enter
ljmp
xor
or
or
je
loope
imul
xor
out
stos
xor
or
cmp
lea
test
xor
ret
rorl
cmp
xor
xor
ret
roll
mov
inc
shll
sub
loop
ss
aas
movsl
cmp
sub
mov
mov
mov
aaa
cwtl
cmp
jg
mov
xor
xor
jno
xor
insl
cmp
jae
and
xor
ds
lock
cmp
xor
cltd
xor
and
mov
mov
cmp
aaa
gs
icebp
ja
bound
mov
mov
xor
ret
dec
xor
les
mov
dec
cmp
divb
push
inc
sub
mov
fsts
sarb
mov
dec
jo
ss
outsl
mov
xor
mov
imul
into
mov
pop
xor
cmp
xor
mov
ret
cmp
sub
shr
aaa
xor
sub
inc
repnz
fidivrs
dec
test
cmp
cmp
aas
cmp
aas
aaa
cmp
das
cmp
xor
sub
xor
push
jle
xor
mov
mov
jne
mov
cltd
xor
out
stos
cmp
jb
sub
ds
stos
cmp
push
aas
mov
mov
jae
sub
sbb
jns
mov
jns
mov
mov
aaa
xchg
mov
cmp
pop
cmp
xor
lds
stos
test
mov
loop
mov
fstpt
xchg
fs
dec
cmp
xor
xor
add
jo
xor
fldcw
ds
xchg
xor
xchg
bound
pop
pop
mov
xor
sub
les
aas
repz
gs
popa
arpl
cs
jb
mov
leave
mov
fistpll
clc
in
enter
aas
shrw
push
aas
mov
aaa
or
add
and
aad
outsl
mov
jge
cmc
ds
imul
lret
pop
and
and
pop
pop
xor
daa
push
call
mov
mov
mov
mulb
fnsave
and
xor
mov
xchg
sub
push
sub
cmp
or
and
cmp
out
mov
cmp
enter
into
and
dec
aaa
testb
sbb
mov
push
xchg
mov
xchg
xor
xor
cmp
mov
mov
nop
cmp
cs
mov
jno
jo
ss
xor
mov
inc
or
sbb
xor
mov
mov
cmp
dec
xor
mov
cmp
mov
arpl
and
lock
pop
dec
xor
push
add
xor
rclb
mov
or
jne
call
ds
sub
pop
xor
insl
insl
imul
test
xor
das
shl
aaa
dec
daa
data16
and
aas
inc
sub
shll
fstpt
fnstcw
std
sbb
sbb
pop
dec
pop
mov
xor
mov
pop
aas
stc
xor
push
sbb
xor
fbld
leave
daa
shll
movsl
pop
sub
jmp
xor
lret
cmp
pop
aaa
xor
sub
rolb
xor
arpl
inc
and
cmp
leave
add
cld
outsw
mul
jnp
arpl
xchg
xor
sub
adc
or
cmp
mov
lock
sub
fisubrs
cmp
cmp
sbb
ss
and
inc
rcrl
xchg
aaa
pusha
ds
sub
in
jne
push
adc
and
or
sbb
sub
xor
stc
fidivrl
jle
fnsave
daa
sub
push
lock
cltd
adc
push
popa
push
lret
adc
cmp
ss
sub
sub
std
test
cmp
sbb
cmp
mov
and
xor
and
xor
xor
push
mov
int
adc
add
jge
pop
aas
int
cmp
inc
and
into
add
testb
mov
pop
cmp
icebp
jg
pop
cmp
xor
cmp
xor
inc
cmp
add
pop
xor
mov
cmp
fstpl
jae
pusha
test
push
cmp
or
add
cmp
mov
xor
cmpb
aaa
test
mov
rcrb
mov
mov
jns
repnz
ds
push
test
sbb
cltd
fstpt
inc
jbe
sub
sub
or
and
or
aaa
cmp
arpl
add
or
push
mov
icebp
inc
das
push
jne
sbb
roll
mov
xor
mov
cltd
mov
inc
cmp
cmp
addr16
cmp
xor
arpl
into
and
mov
dec
sbb
inc
sub
mov
mov
into
fsubl
mov
xor
inc
xlat
out
mov
push
sti
addr16
divl
cmp
insl
cmp
sarl
cmp
inc
xor
mov
fistps
into
push
mov
xor
cmp
xor
sub
xor
dec
cs
movb
cmp
push
lret
inc
cmp
out
mov
repz
mov
or
pop
in
cmp
and
xor
push
sub
ds
cmp
xor
bound
xor
in
xor
cmp
jb
add
ds
cmp
and
and
jg
je
xor
lret
icebp
xor
cmp
icebp
aaa
addr16
mov
iret
data16
and
dec
mov
pusha
mov
lock
jbe
mov
xor
mov
push
shr
mov
cmp
cmp
sbb
pushw
sbb
cs
cs
inc
aad
scas
xor
lret
insb
sarl
scas
cmp
data16
xor
sbb
pusha
xlat
mov
mov
xchg
jmp
clc
cmc
cmp
cmc
mov
cwtl
sbb
mov
mov
xor
mov
adc
xchg
sub
cltd
cmp
xor
adc
adc
popa
enter
xor
pop
aaa
arpl
and
insb
push
cli
mov
cmc
imul
and
mov
mov
dec
cmp
mov
jbe
sti
xor
mov
bound
es
sub
cmp
and
cmp
xor
mov
and
mov
outsw
mov
sti
inc
and
popa
fbstp
xor
dec
cmp
cmp
idiv
stc
cmp
cmp
cmp
pop
sbb
icebp
es
jnp
cmp
mov
xor
sub
stc
cmp
jns
cmp
cmp
sub
mov
aaa
cltd
testb
jb
push
xor
xor
fstpl
into
mov
mov
mov
or
push
mov
cmpl
jne
xor
call
outsb
push
sub
pop
aas
mov
xor
xor
cmp
jge
jae
xor
xor
movsb
cmp
mov
mov
sti
scas
icebp
pusha
mov
outsb
cmp
hlt
sbb
sarl
cmp
fisttpll
movsb
neg
xor
jp
xor
jno
outsb
add
jne
testb
cmp
pusha
xor
mov
cmp
les
or
ljmp
mov
jg
jnp
jno
xorl
xor
sub
mov
mov
lds
inc
aad
insb
push
xor
bound
adc
mov
mov
dec
cmp
jns
push
ss
sti
pushw
gs
pusha
mov
cmp
mov
imul
pop
pop
jns
loope
jb
sbb
sub
cmp
xor
jecxz
out
xor
dec
cmp
ds
ds
push
inc
leave
out
outsl
ja
mov
aaa
push
inc
xchg
cmp
pusha
fdivrs
ss
pop
xor
orl
xor
sub
mov
cmp
jp
push
and
cmp
jl,pt
enter
cmp
inc
jecxz
ja
data16
insb
das
mov
cmp
mov
xor
jno
mov
dec
aaa
mov
repnz
mov
insl
and
incl
mov
xor
xor
int
cmp
pop
cmp
sub
xor
jp
xor
push
lds
or
dec
cmp
add
or
fidivrl
pop
mov
mov
inc
xor
andl
xor
add
adc
aaa
cltd
sub
gs
sub
aaa
xor
sub
xchg
pop
test
je
mov
stc
push
sub
or
mov
cmp
cld
sarb
mov
jp
pop
imul
push
jecxz
into
push
xor
xor
aas
add
inc
aaa
mov
jmp
dec
daa
xor
inc
fnstenv
pop
jbe
adc
mov
dec
sarl
fbld
cmc
pop
push
mov
push
sub
or
add
sbb
ss
lds
int3
inc
jnp
into
inc
int
pop
push
xor
sbb
and
mov
cmp
xor
mov
arpl
outsl
jbe
ss
dec
shlb
in
cmp
sub
outsl
cmp
fildl
gs
mov
sbb
out
jge
into
mov
dec
dec
xor
inc
and
pushf
and
nop
jnp
lcall
or
ret
dec
sbb
fucompp
leave
mov
pop
pop
xor
mov
add
inc
and
je
cmc
jge
jno
and
aad
adc
jl
ss
sarl
xor
mov
mov
sub
je
push
and
daa
mov
jns
xlat
data16
jl
aad
cmp
sub
add
mov
push
and
mov
xor
js
cmp
pop
pop
leave
and
mov
cmp
cmp
cmp
mov
into
pop
daa
mov
lds
mov
inc
xor
inc
pop
mov
aas
lret
mov
movsb
mov
xor
std
pop
xor
shlb
enter
xor
jo
sbb
jb
mov
jbe
xor
xor
cmp
push
cmp
jecxz
dec
dec
cmp
int
imull
jp
std
js
rcr
lret
jecxz
adc
mov
rcl
iret
xor
les
enter
fucomip
jnp
mov
inc
sbb
cmp
inc
adc
fistps
sub
fs
pop
arpl
sti
mov
jae
mov
lret
sub
aaa
xor
push
ds
daa
cmp
jo
test
ss
iret
jb
mov
mov
cmp
mov
test
and
inc
aaa
rcl
sub
inc
xor
adc
jge
fistl
xor
add
imul
addr16
out
movsb
popa
pop
and
leave
xor
jmp
imul
mov
lret
pop
bound
stos
les
loope
dec
sbb
or
dec
cmp
ss
test
mov
cmp
fxch
cli
cli
sub
inc
mov
pop
and
lds
push
lock
mov
jo
rcll
xor
xor
divb
mov
aaa
xor
shll
dec
aad
inc
and
xor
int
ljmp
mov
icebp
in
sbb
xor
call
stos
ja
out
fstpl
repnz
pop
inc
lret
dec
loope
mov
stc
imul
cmp
xchg
cmp
inc
push
lret
lds
mov
mov
aaa
fisttps
arpl
movsb
xor
mov
mov
outsb
les
addr16
sub
add
das
inc
xor
das
arpl
dec
xor
inc
ds
inc
xor
int
jecxz
stos
ds
movsb
xor
fsubrs
jg
push
loope
jo
dec
mov
inc
xor
mov
dec
fnstsw
xor
aaa
fwait
add
das
xor
daa
push
outsb
xor
xor
addr16
jno
aaa
or
xor
mov
pusha
mov
outsl
movsl
cmp
xor
outsb
sarl
dec
aad
int
addr16
cmp
cmp
jno
xor
not
ds
cmp
lret
lock
push
push
stc
outsb
aaa
stos
cmp
lock
push
xor
xor
mov
xor
xor
sub
xor
test
jns
xor
mov
lds
jp
mov
xor
test
cmp
sbb
mov
jnp
cmp
imul
outsl
mov
adc
sbb
jge
xchg
fldenv
xlat
cmp
jge
xor
scas
sbb
cmp
ss
xor
movsl
xor
movsl
cmp
mov
insl
or
xor
mov
lds
add
cmp
imul
shll
mov
mov
mov
jae
icebp
dec
xor
xor
jae
mov
mov
cmp
push
cmp
add
or
jno
fcompl
dec
popa
xor
in
outsl
or
xor
xor
enter
xor
mov
xor
mov
mov
imul
outsl
pop
mov
imul
and
pop
mov
xor
sti
roll
cmp
movb
shrl
ja
movsl
cmp
lock
mov
sbb
aas
jg
mov
gs
cmp
mov
mov
xor
repz
inc
jae
mov
jne
jnp
mov
aaa
add
clc
inc
xor
cli
shlb
push
cli
cmp
lds
or
neg
cmp
outsl
push
sbb
divb
add
mov
lret
insl
ffreep
stc
cmp
mov
xchg
cmp
mov
xchg
xor
gs
xchg
aaa
jge
inc
mov
xor
aaa
fs
jns
jge
mov
xchg
mov
mov
mov
movsb
xor
adc
dec
aas
mov
js
add
lret
push
and
mov
jp
xor
xor
jp
aaa
cmp
sub
add
inc
xor
and
ficomps
sub
bound
mov
mov
or
sub
or
dec
sbb
or
cmp
sbb
and
mov
cmp
xor
xor
out
cmp
or
jg
cmp
cmp
lea
jno
bound
dec
and
popa
aaa
aaa
sbb
popa
sbb
mov
cmp
mov
mov
mov
add
inc
cmp
divb
jae
out
sub
jbe
mov
xor
addl
sbb
mov
cmp
jg
jle
mov
mov
mov
dec
mov
xor
mov
xor
and
adc
cli
cmp
and
cmp
jl
xor
je
arpl
inc
cs
cmp
into
mov
ret
mov
pop
and
repnz
cmp
xor
cmp
insw
aaa
mov
lret
xor
pusha
add
inc
xor
je
mov
ss
cmp
jecxz
fnstenv
sbb
inc
cmp
dec
roll
cmp
mov
inc
xor
hlt
sarb
mov
repz
mov
xor
mov
popa
mov
add
mov
jo
adc
jno
cmpb
mov
mov
mov
sbb
or
dec
cmp
mov
jno
mov
mov
cmp
dec
cmp
xor
jge
shrb
aas
mov
mov
int3
lret
xor
xor
lret
or
jge
cltd
sbb
sbb
jns
aas
or
or
add
nop
aaa
add
push
divb
dec
inc
xchg
xor
sbb
pop
cmp
xchg
sub
or
out
dec
pop
xor
jnp
and
shll
push
add
mov
repnz
mov
and
or
jne
aaa
sbb
mov
sub
and
je
inc
mov
cmp
cmp
rolb
jnp
adc
xor
cmp
cmp
dec
jno
jb
mov
cmp
jbe
mov
xor
cmp
testl
mov
mov
jb
fstl
into
enter
mov
mov
jbe
and
mov
das
xor
mov
dec
sub
mov
jge
sub
enter
xor
inc
jg
pusha
enter
jns
xor
cmp
cmc
xor
mov
jno
xor
jae
inc
aaa
je
jno
bound
xor
int3
out
sbb
cmp
loop
outsb
add
inc
xor
push
xor
sub
fidivs
mov
dec
ss
sti
cmp
fiadds
cmp
aaa
mov
cmp
mov
cmp
ss
dec
enter
xor
mov
adc
cld
dec
xor
mov
pop
mov
cmp
mov
pop
mov
mov
sbb
sbb
aaa
mov
add
fbstp
mov
ss
sub
fistpll
sub
add
mov
xor
adc
jno
xor
cmp
xor
or
add
aaa
mov
and
jns
add
cmc
mov
xor
addr16
mov
mov
lret
flds
xorl
sar
xor
jae
mov
jne
daa
xor
push
sti
cmp
xor
data16
xor
sarb
sbb
cmp
xor
push
cmp
inc
int
aad
fistpll
ljmp
pop
xor
push
shrl
ss
inc
fsubs
ja
mov
cmp
jbe
fnstsw
xor
clc
insb
mov
into
mov
mov
add
inc
push
rcl
and
mov
add
aaa
cs
into
jmp
xor
xor
xor
inc
add
cmp
jne
cmp
lock
fstl
pop
fdivl
mov
enter
mov
shll
xor
cmp
inc
ficomps
or
ja
add
repz
mov
cmp
mov
das
jl
add
jge
jno
jnp
or
es
pop
icebp
xor
inc
lret
aaa
jnp
mov
pop
mov
cmp
hlt
mov
cmp
js
jne
mov
jnp
mov
adc
or
add
mov
mov
cmp
rorl
dec
xor
insl
cmp
ret
xor
pusha
mov
jge
pop
shll
xor
ja
mov
cmp
lea
cmp
and
xor
sbb
xor
cmc
cmp
mov
dec
adc
icebp
xor
mov
aaa
das
add
inc
and
mov
xor
sub
aas
movsl
mov
dec
pop
add
stc
xor
cmp
fnsave
int3
stc
adc
push
in
cmp
xor
icebp
je
pop
sub
aas
and
idivb
mov
add
pop
divb
daa
xor
mov
cs
inc
ds
pushaw
lret
xor
or
cmpsl
add
fcoml
icebp
ss
sbb
imul
addr16
add
sub
dec
push
mov
dec
cmp
cmp
adc
jmp
cmp
dec
cmp
pop
test
stc
xor
inc
sbb
pop
mov
sub
roll
fdiv
aaa
sbb
add
inc
xor
shrb
xor
sub
push
pop
sbb
js
das
adc
ret
jnp
sub
inc
pop
or
sub
adc
cmp
dec
aaa
pop
fisubl
mov
cmc
push
cmp
mov
imul
sbb
mov
xor
add
dec
adc
adc
not
cmp
and
jne
or
and
push
clc
aaa
xor
jne
adc
repz
xor
inc
mov
daa
xor
sbb
push
mov
fwait
xor
xor
aaa
mov
mov
mov
dec
or
cmp
aas
cmp
sub
pusha
sub
sub
pop
ffreep
shrl
push
ficoms
cmp
adc
int
pop
pop
inc
or
cmp
das
std
clc
mov
ss
adc
xor
xor
adc
les
and
xlat
xor
rcll
ss
mov
ja
sar
push
xor
push
pop
das
fsts
and
fnstsw
add
xor
sbb
push
je
jns
cmp
dec
cmp
sbb
lret
jl
xor
cmp
cmp
rcrb
pop
aad
notl
outsl
xor
insb
or
add
mov
fs
bnd
adc
les
inc
cmp
leave
mov
mov
xor
aaa
mov
cs
divb
inc
cs
aaa
das
mov
lds
shll
shlb
bnd
mov
mov
cmp
jl
stos
aaa
mov
mov
inc
xor
and
xchg
das
mov
fnsave
xor
ja
mov
push
cmp
jl
push
xor
push
ds
and
xor
xor
hlt
shlb
outsb
mov
and
pop
xor
cld
jl
sub
aas
xor
mov
xor
cs
lds
mov
or
and
out
xor
je
mov
sbb
dec
shll
and
inc
jp
mov
sbb
repnz
jl
mov
aad
jp
shlb
sub
xor
xor
mov
mov
cmp
aaa
es
add
adc
xor
call
stc
outsl
mov
fcomi
leave
data16
mov
outsl
mov
inc
cmp
add
mov
jne
cmp
rcrl
mov
leave
jp
call
je
push
repz
outsl
mov
sub
cld
push
pop
mov
leave
ss
arpl
leave
aas
xor
cmp
rcr
xor
aaa
movb
sub
call
cmp
aam
push
loop
dec
cmp
and
cmp
pop
cmp
xor
aaa
mov
jle
cmp
push
repz
mov
mov
addr16
pop
cmp
roll
fisubrl
lret
xor
push
les
jo
imul
push
inc
aaa
call
mov
divl
fdivs
iret
jg
mov
sub
aaa
xor
adc
sub
cmp
xor
popa
enter
xor
iret
enter
xor
push
mov
sti
cmp
aad
mov
outsb
addr16
cmp
outsb
cltd
xor
test
sbb
fs
xor
jne
in
pop
add
mov
aaa
cmp
dec
ret
movsl
and
and
mov
mov
aas
ficoms
mov
dec
sbb
das
cmp
data16
fisubl
cmp
mov
cmp
mov
inc
stc
and
cmp
and
sti
cmp
mov
mov
ss
push
mov
or
dec
jp
and
lds
dec
cmp
fs
mov
pop
cmp
inc
leave
shll
xor
dec
leave
fbld
dec
cmp
cmp
cmp
xor
bound
mov
data16
pop
es
mov
in
mov
push
xor
cs
cmp
cmp
shll
xor
xor
push
xor
inc
xor
sti
cli
xchg
and
aad
daa
arpl
push
mov
mov
es
xor
and
roll
xor
lds
popa
pushf
divl
lods
and
aad
mov
dec
lds
sub
aaa
sub
and
cmp
mov
shll
mov
mov
aaa
ds
into
mov
in
inc
cs
mov
sbb
mov
cmp
ds
hlt
mov
cmpl
xorl
sbb
xorl
mov
cmp
inc
and
or
mov
jge
aaa
in
int
fsub
cmp
mov
xor
out
xor
test
outsb
inc
sbb
sbb
xor
adc
iret
mov
gs
push
push
add
insb
and
lds
mov
test
xor
aaa
inc
cmp
pop
test
repnz
and
cmpsl
add
popa
lret
xchg
and
iret
sub
inc
jnp
cmp
pop
aaa
mov
fnsave
and
sub
jne
mov
fnstcw
in
or
les
push
cmp
dec
mov
imull
mov
clc
repz
mov
adc
leave
push
and
enter
push
xchg
clc
insb
mov
mov
and
mov
ret
rcrb
inc
dec
add
ja
jle
mov
or
dec
mov
ss
pop
popa
pop
or
add
movsl
xor
or
or
outsl
popa
mov
sub
add
pop
dec
add
enter
inc
or
stos
cmp
aaa
xchg
mov
dec
popa
arpl
cmp
push
xor
jge
aaa
lds
cmp
out
xor
add
repnz
ljmp
pop
aaa
jo
mov
ss
jns
inc
dec
fwait
sub
or
jmp
pop
jl
aas
push
mov
mov
stos
jae
bound
pop
mov
lock
aaa
stos
xor
shlb
fldl
mov
add
xchg
arpl
adc
dec
imul
push
jne
jb
js
and
leave
and
and
or
add
cmp
ja
inc
or
cmp
fbstp
dec
xor
leave
xor
shll
sbb
sbb
mov
das
jne
adc
mov
xor
cld
jl
xchg
sub
sub
cmpsl
xor
sub
inc
jae
sub
repnz
icebp
cmp
mov
push
sub
sbb
xor
imul
push
jno
cmp
mov
sub
aaa
fstl
mov
mov
xor
cmp
cs
xor
xor
mov
or
mov
gs
dec
sub
add
xor
jb
fisubl
dec
aad
fwait
xor
and
jecxz
aaa
pop
ret
icebp
ja
and
aaa
xor
stc
mov
cmp
cmp
les
fstpt
jno
xor
cmc
imul
xor
add
add
xor
add
push
cmp
cmp
or
mov
xor
xor
int
imulb
lret
xlat
xchg
xor
lods
and
sarl
sub
ja
xor
stc
clc
hlt
aad
mov
cmp
sbb
cmp
aaa
inc
cmp
dec
sub
or
xor
jnp
adc
pop
and
jbe
cmp
xor
aas
push
ljmp
inc
ss
cmp
xor
adc
aaa
sub
js
xor
jo
or
lds
lret
adc
sbb
movsl
sub
outsl
xor
arpl
and
inc
or
daa
test
fsubrs
pop
es
dec
jno
jne
aad
popa
arpl
andb
xor
inc
add
aas
cmp
or
jnp
jne
add
sbbl
dec
sbb
mov
imul
enter
cmp
aas
in
or
add
push
addr16
inc
add
lds
dec
xor
imul
pop
add
push
mov
xorl
cmp
icebp
push
ss
pop
and
daa
pop
sub
add
jg
cmp
inc
cmp
adc
cmp
mov
and
and
xor
shrl
xor
addr16
mov
and
ss
into
aaa
inc
iret
movb
leave
mov
xor
cmp
and
mov
add
inc
cmp
cmp
cmp
cmp
shlb
add
sti
clc
hlt
pusha
mov
mov
fldcw
push
pop
mov
out
shll
enter
xor
pop
cmp
aaa
adc
inc
lds
xor
inc
cmp
aaa
pop
push
push
mov
and
ss
xor
mov
push
cld
stc
cmp
outsl
mov
adc
ja
xor
xor
cmp
into
and
sub
xor
aaa
xchg
shrl
test
les
das
sub
and
or
and
mov
data16
add
cmc
xor
pop
les
mov
aaa
cmp
add
aaa
inc
das
dec
cmp
add
clc
cmp
sub
mov
sub
xor
fidivl
add
inc
adc
xor
enter
and
xor
daa
push
cmp
bound
mov
mov
ss
push
mulb
lret
inc
xor
pop
cmp
mov
xor
loopne
mov
insb
mov
and
cmp
add
adc
push
popf
or
xor
jl
mov
das
pop
aaa
pop
cmp
and
mov
xor
adc
fidivrs
or
ja
push
pop
and
testl
das
stc
xor
push
jmp
jecxz
xor
cmc
cmp
jno
je
icebp
mov
xor
loopne
in
call
xor
inc
ror
ret
int3
pop
adc
jne
and
fbstp
out
aas
aaa
or
cmp
xor
push
jp
cmp
jne
jecxz
pop
pusha
adc
daa
xor
sub
jne
xor
cmp
aas
rcl
and
ja
jg
xor
cmp
repz
xor
sub
int3
jnp
xor
mov
sbb
cmp
shlb
mov
mov
sub
rcr
xor
stc
add
divl
cmp
jne
movb
js
or
repnz
cmp
jbe
xor
xor
aas
jno
mov
aad
mov
and
jno
aas
mov
adc
fisubrs
xor
mov
jns
xor
cmpl
sti
mov
testb
adc
xor
xor
mov
cmp
xor
push
cmp
push
xor
xor
cs
jne
mov
cmp
add
inc
scas
push
sti
jns
nop
jne
mov
outsl
mov
add
int
into
inc
and
cmp
cltd
insb
mov
jnp
lock
jne
outsw
aaa
push
xor
xchg
xor
sti
cmp
dec
add
cmp
mov
mov
jno
mov
xor
data16
xchg
iret
pop
cmp
cmp
test
cmp
test
mov
fisubs
mov
cmp
mov
xor
xlat
and
cmp
fdivl
cmp
sub
adc
mov
mov
lret
mov
xchg
mov
jae
sbb
pusha
xor
or
sti
dec
add
push
fiadds
mov
mov
xchg
mov
sub
js
and
movb
add
add
inc
cmp
iret
enter
repnz
aas
jns
mov
leave
enter
sbb
mov
inc
cmp
xor
enter
aaa
enter
push
das
mov
cmp
xor
aas
and
cmp
aaa
add
jge
adc
inc
xor
les
xor
push
xor
xor
jl
aas
jne
sti
cmp
xor
cmp
insb
hlt
arpl
xor
xchg
aas
and
les
fnstenv
addr16
mov
sti
xor
xor
aam
cmp
and
inc
adc
outsl
fidivrs
mov
aam
imul
daa
xchg
fldenv
nop
adc
pop
xor
push
cmp
outsl
mov
gs
rcll
fdiv
sbb
gs
das
aad
stc
outsb
cmp
push
mov
or
popa
pop
popa
lods
roll
xor
js
jge
mov
cs
or
enter
jno
mov
aad
stc
jno
gs
xor
je
adc
adc
xchg
jp
fnstenv
mov
mov
cmp
jae
lods
clc
hlt
cmc
and
push
mov
push
cmc
aad
and
pop
pop
inc
lods
xor
lret
and
imul
xchg
inc
push
pop
lcall
loope
daa
mov
cmp
xchg
add
cmp
jl
mov
mov
pop
mov
mov
nopl
dec
xor
pop
cmp
mov
cmp
cmp
aaa
adc
mov
mov
cmp
push
or
jb
cmp
push
movsl
jae
stc
fwait
add
or
cmp
jnp
push
push
aaa
push
xchg
icebp
xor
imul
pop
cmp
cwtl
jge
imul
adc
jns
mov
sbb
loope
aaa
dec
js
loope
sbb
imul
adc
inc
adc
dec
adc
or
add
inc
and
mov
xchg
pop
sub
aaa
das
cwtl
cmp
popa
mov
les
mov
or
icebp
push
and
cmp
cmp
aas
cmp
inc
cmp
pop
pop
cmp
lea
xor
fisttpll
popf
divb
repz
aaa
mov
xchg
dec
imul
mov
or
mov
mov
mov
pop
cmp
or
and
scas
stc
shlb
mov
cmp
mov
and
xor
clc
jbe
aaa
jns
jns
mov
sbb
mov
mov
xorl
sbb
pop
xor
leave
push
data16
xor
push
jns
ja
push
test
xor
adc
in
jne
popf
jo
addr16
js
aam
jnp
loope
xor
pop
imul
sub
mov
cmpxchg
cmc
dec
cmp
shr
lcall
sub
imulb
jg
xor
sub
repz
into
aaa
fnstsw
mov
enter
add
cmp
add
lds
jne
or
xor
mov
xor
mov
xor
push
push
jne
mov
imul
and
mov
or
mov
lds
xor
rcr
xor
mov
insb
and
pop
xor
jne
push
xor
sbb
fs
subb
jnp
and
mov
xlat
adc
xor
xor
loope
in
mov
enter
sarb
xchg
add
pusha
mov
jne
push
fld
adc
jns
jg
aas
bound
imul
sbb
lret
outsb
aas
imul
xor
mov
addr16
xor
and
inc
mov
mov
test
xor
add
inc
cmp
mov
jae
gs
xor
leave
xor
lods
push
mov
ret
cmp
frstor
stc
jo
or
roll
xor
aas
fs
and
xor
aad
movb
mov
fst
push
fwait
imull
jns
test
xor
data16
mov
cs
or
xchg
mov
mov
and
ss
mov
test
cmp
cmp
mov
lret
mov
lret
clc
add
inc
std
cmp
mov
ja
jnp
ds
scas
mov
jne
cmp
add
ficoms
cmp
lds
sbb
jmp
jg
cmp
mov
xor
sub
sub
daa
mov
icebp
movsw
xor
mov
js
xor
js
lds
xor
jne
and
push
popf
and
addr16
imul
mov
jnp
mov
add
in
cmp
push
cld
lret
into
inc
pop
cmp
repnz
pop
mov
dec
aaa
addr16
xor
dec
adcl
xor
lret
or
xor
jns
push
jo
dec
or
pop
cmp
mov
aaa
mov
pop
outsb
fldenv
cmp
imul
in
roll
add
jnp
lds
push
push
lret
mov
shll
arpl
and
fisttps
mov
mov
add
add
outsl
sbb
xor
mov
jno
add
aad
sub
test
xor
shrb
sub
ds
jne
and
sub
adc
cmp
or
and
out
pop
push
and
cmp
adc
btc
and
cs
xchg
cmp
enter
and
xor
mov
xlat
xor
and
das
mov
or
xchg
cmp
xor
push
push
aaa
movsb
xor
jae
ss
data16
push
roll
add
inc
arpl
sbb
daa
xor
shlb
xchg
ds
das
jne
stc
and
cvtpi2ps
cmp
jne
stc
cmp
mov
in
add
divl
adc
push
and
and
or
jnp
ds
jno
rcll
lcall
or
jmp
mov
bound
cmp
sbbl
mov
in
jns
cli
xlat
cmp
add
sbb
sbb
push
mov
mov
jns
xor
xchg
xor
jl
mov
cmp
fidivrl
aaa
jge
fsts
and
mov
stc
imul
aad
cmp
inc
int
mov
pop
mov
xor
xor
mov
add
cmpsl
push
jae
sarl
mov
stc
sbbl
inc
adc
ret
mov
and
mov
aas
mov
xor
leave
xor
inc
aas
pop
aas
sbb
sub
jge
fldenv
lds
pop
mov
or
cmp
and
dec
shll
xchg
xor
sub
mov
inc
lret
pop
cmp
mov
aaa
xor
ret
gs
inc
cmp
xor
cmp
mov
ss
sbb
fs
add
xor
shll
dec
cmp
xor
xchg
mov
lret
and
fistps
fldt
popf
das
test
jns
movsl
out
dec
aaa
repz
loope
jb
popf
xor
push
dec
xchg
add
mul
int3
fwait
sub
movsl
sbb
push
mov
popa
sbb
cmp
push
shll
imul
shrl
mov
inc
xor
leave
cmp
lds
mov
andl
into
and
xor
int
out
mov
fnstcw
dec
cmp
iret
push
dec
std
fidivl
add
inc
data16
ds
pop
mov
adc
in
xor
insw
outsb
add
mov
lret
bound
sbb
and
xor
cmc
dec
dec
mov
adc
mov
jno
ficomps
jno
cmpsl
push
xor
jge
push
inc
ja
addr16
push
mov
sub
cmp
add
pop
mov
cmp
inc
inc
or
push
mov
jo
cmp
pop
and
cmp
repz
xor
xor
fs
lret
mov
push
xor
xor
insb
mov
leave
mov
and
xor
xor
lret
cmp
fs
xchg
lret
jne
mov
pop
xor
cmp
shll
xor
aaa
add
push
sti
mov
xor
and
xor
add
je
shlb
inc
sarl
xor
pop
cmp
inc
and
adc
adc
cmp
adc
lret
xchg
cmp
jno
cmp
int
jns
mov
cmp
mov
xor
idivl
lret
or
data16
sub
mov
outsw
pop
mov
mov
mov
cmp
xor
mov
cmp
jns
aaa
mov
lret
mov
xor
aaa
stos
dec
adc
sbb
and
icebp
cmp
xor
or
jmp
mov
mov
add
and
in
add
out
cmp
mov
mov
shrl
or
inc
aas
inc
sub
xor
ret
jge
addr16
rcrl
enter
icebp
inc
daa
mov
cmp
fists
mov
idivl
mov
dec
add
push
cmp
and
xor
jae
xor
stc
jno
adc
pusha
mov
inc
aas
cmp
mov
mov
and
lods
jno
push
int
or
and
cmp
mov
cmp
dec
fxch
cmp
mov
cmp
mov
dec
cld
stc
xor
dec
xor
leave
cmp
jb
cmp
and
pop
mov
xlat
imul
inc
push
cmc
push
ret
xor
cmp
popf
int3
cmp
leave
ss
cmp
shll
les
xor
cmp
les
lret
xor
lahf
lret
xor
xor
fstpt
cmp
xor
leave
push
and
and
mov
pushl
hlt
push
sti
lock
arpl
cmp
pop
xor
dec
adc
mov
fucomip
mov
xor
pusha
jne
mov
fildll
mov
sbb
iret
mov
sub
xor
mov
mov
and
jne
mov
ss
jne
mov
jge
das
gs
xor
cmpb
xor
cmp
imul
mov
stc
ss
addr16
cmp
ljmp
xor
xor
cltd
mov
pop
lret
push
imul
lock
mov
xor
popa
aaa
xor
out
lock
sub
rcrl
outsl
push
leave
icebp
das
sub
jecxz
cltd
xor
aad
fnstenv
aaa
sub
out
fidivl
mov
dec
stc
xor
hlt
outsb
mov
daa
outsl
mov
and
imul
enter
mov
or
mov
sub
aaa
inc
sub
cmp
cmp
dec
xor
mov
inc
aas
cmp
icebp
mov
imul
push
adc
aas
xor
push
les
popa
pusha
pop
les
fs
enter
fcmovbe
xor
mov
ds
gs
mov
mov
push
pop
ja
and
sbb
cmp
push
cmp
mov
push
cmc
fwait
into
fs
and
ss
cmp
push
insl
mov
hlt
rorb
xor
mov
sub
cmp
ds
ds
xor
iret
xor
cmp
cmp
and
bound
fstl
imul
xor
mov
cmc
ds
add
push
cmp
jne
in
mov
or
fwait
outsb
aam
aas
lcall
cmp
mov
loope
mov
sarl
into
pop
xor
fsubr
loope
sub
xchg
cmp
cmp
mov
inc
scas
mov
xor
scas
daa
aas
inc
and
js
daa
shlb
mov
and
aam
cmp
aaa
pop
mov
xor
lods
jnp
repnz
mov
and
sub
cmp
divl
clc
shll
aaa
lahf
es
cmp
and
and
inc
rcl
mov
dec
fs
icebp
repz
jl
aaa
fnsave
cmp
mov
addr16
les
icebp
jo
mov
add
cmc
rorb
jae
sbb
push
mov
icebp
dec
cmp
sbb
arpl
into
rcrb
xor
pop
dec
adc
xor
xor
aaa
ds
pop
pop
xor
aaa
sbb
xlat
aaa
aas
and
xor
mov
mov
leave
ja
and
pop
ds
push
fldl
mov
cmp
xor
cmp
pop
pop
xor
ds
shll
cmp
cmp
inc
xor
dec
jmp
cmp
mov
cmpb
jmp
add
inc
sub
jge
mov
jne
das
mov
inc
jno
js
rcl
pushf
sbb
aaa
nop
mov
xor
push
rolb
repnz
or
xor
push
iret
sbb
ret
pop
add
mov
or
xor
or
mov
jmp
out
fcmovnb
mov
rdtsc
divl
xor
cs
xor
pop
add
cmp
cli
mov
jecxz
repz
rorl
ja
or
mov
pusha
mov
in
js
ss
push
sti
shl
cmpsb
pop
jnp
xor
xlat
inc
xor
and
and
adc
xor
decb
loop
jne
mov
cmp
mov
daa
inc
mov
xchg
inc
xor
pop
mov
add
xor
push
in
mov
ss
cmp
or
cmp
repz
call
int
adc
xorb
push
mov
dec
xor
mov
ds
xor
iret
adc
or
and
jb
add
xor
push
repnz
testl
dec
mov
xor
cmp
or
enter
sarl
mov
or
jb
xchg
cmp
iret
ss
adc
pop
xor
mov
test
imul
and
mov
cmp
bound
mov
or
dec
dec
xor
cmp
cmp
ss
fcmovbe
gs
push
pop
popa
xor
pop
and
push
xor
xor
and
incb
mov
ficoml
jne
inc
mov
sub
xor
ss
insb
shrl
aaa
je
cmp
adc
stos
nop
aaa
repnz
dec
imul
xor
cmp
sahf
sbb
xor
cmp
adc
dec
dec
xor
int
cmp
mov
xor
xor
ljmp
jno,pt
add
xor
ss
pop
inc
arpl
jge
jle
stos
mov
inc
arpl
xor
push
ds
push
loopne
cmpsl
aaa
pop
xor
xchg
rolb
xchg
or
cmp
sub
add
clc
imul
jae
inc
cmp
xor
insl
shll
mov
repnz
sub
ss
fnsave
push
aad
add
std
sbb
sbb
or
jns
mov
fistpll
mov
xorl
mov
adc
cmc
push
jl
pop
js
and
test
bound
shl
test
mov
xor
inc
adc
mov
cmp
inc
mov
xor
jl
lret
or
push
mov
adc
xor
mov
jne
jmp
ja
push
clc
jns
add
rcr
loope
in
pop
mov
jne
sbb
shll
inc
xor
mov
ja
jne
dec
sbb
addr16
pop
xor
xor
cmp
aas
mov
jne
jg
aaa
push
mov
in
push
mov
jo
mov
cmp
xor
jnp
ja
aaa
sarb
mov
jns
mov
das
divl
xlat
or
fistl
cmpsl
mov
in
outsb
jno
cmp
or
adc
aaa
add
dec
push
addr16
sub
xchg
push
or
jns
les
push
xor
dec
push
cs
push
hlt
and
enter
xor
mov
pop
aas
cmp
and
cmp
imul
mov
cmp
addr16
inc
xor
jg
or
imul
push
mov
sbb
add
dec
cmp
pop
add
outsb
cmp
adc
insb
or
xchg
je
je
leave
jne
imul
adc
lcall
jb
mov
add
je
fidivrs
cmp
mov
sub
outsl
mov
imul
xor
in
dec
cmp
mov
mov
cs
or
mov
xor
jmp
xor
and
ja
pushl
jns
jecxz
add
andb
push
cmp
aas
outsb
or
dec
stos
es
shll
and
push
fsubrl
pop
lahf
and
lea
cmp
add
xor
mov
sub
fstp
sbb
inc
xor
je
jl
dec
mov
xor
adc
jno
cmp
inc
jg
pop
xor
jae
js
shll
add
inc
popa
add
ds
inc
adc
ds
loope
aaa
sub
sub
jns
jl
xor
fidivs
mov
xchg
mov
lds
shrl
push
jl
and
xor
cmpsl
out
gs
cmp
pop
and
xchg
or
or
sub
push
lock
xor
xor
inc
ds
sbb
push
jns
pop
inc
xor
cmp
jp
xor
and
xor
inc
aas
add
push
adc
push
mov
adc
sbb
cmp
aaa
cmp
jb
stc
xor
aam
cmp
clc
addb
cmp
xor
icebp
xor
xchg
mov
sbb
aaa
fstpl
mov
es
mov
daa
lds
enter
xor
test
test
inc
xchg
mov
mov
and
mov
adc
push
cld
dec
gs
insb
mov
loope
xchg
push
add
in
inc
jb
inc
aas
inc
sub
or
dec
push
cmp
xor
push
lds
popa
aam
das
lds
ds
pop
sbb
inc
push
int3
dec
popf
aam
cmp
mov
ss
dec
shlb
mov
mov
push
cmp
inc
jmp
xor
enter
mov
cmp
aas
cmp
mov
mov
or
dec
aaa
adc
insl
lret
xor
mov
fildl
mov
fidivl
adc
xchg
fidivs
pop
cmp
or
ja
xor
mov
sarl
aaa
cmp
mov
daa
mov
ret
and
iret
xor
mov
cmp
xor
rcl
mov
stc
mov
and
outsb
mov
mov
js
push
aaa
bound
xor
mov
inc
leave
add
inc
gs
bound
lahf
into
mov
dec
jnp
aaa
jo
dec
pop
enter
xor
inc
xor
and
es
xor
jb
cmp
and
mov
sbb
adc
aaa
fs
add
shll
mov
sbb
cmpsl
mov
aaa
xchg
int3
dec
lahf
push
insb
cld
stc
cmp
cmp
and
xor
jbe
xor
push
cmp
cmp
mov
add
repz
mov
xor
cmp
movsl
insl
mov
fists
cmp
mov
sub
cmp
aas
dec
and
lods
inc
mov
dec
inc
mov
inc
xor
leave
rcr
mov
je
xor
inc
iret
jg
dec
int
dec
xor
xor
adc
jae
cmp
cmp
and
lock
std
cmp
sub
cmp
mov
fnstenv
jb
cmp
out
xor
in
repnz
mov
mov
add
xor
pusha
mov
cmp
xor
mov
aas
xor
sarl
xchg
sub
mov
cmp
xor
cmp
testb
mov
xor
fisubs
mov
aaa
xor
into
inc
cmp
aas
mov
mov
cmp
adc
cmp
imull
mov
out
ffreep
cmpsb
mov
inc
and
rcl
aam
xor
mov
mov
fwait
ss
jb
mov
xor
repnz
or
aas
mov
int
movb
sti
adc
and
mov
xor
out
xor
aaa
stc
mov
aaa
or
clc
shll
neg
aas
les
mov
ss
stc
xor
adc
xor
leave
divl
cmp
or
dec
inc
pop
out
mov
divl
jns
inc
pop
mov
xor
or
inc
ss
or
inc
xor
aam
xor
icebp
push
cli
or
mov
les
add
rcrl
bound
mov
les
aaa
push
clc
outsl
cmp
jno
jb
mov
ja
mov
stc
cmp
xor
rorl
mov
enter
xor
data16
add
push
mov
cmp
xor
cmp
ja
xchg
cmp
leave
mov
lret
pop
push
push
push
xor
movsl
dec
pop
cmp
mov
cmc
jbe
and
movsl
aaa
ss
xor
cmp
xor
imul
push
cmp
ss
cmp
and
jo
mov
mov
xor
cs
add
inc
adc
test
les
es
mov
cmp
mov
cmp
adc
xor
xor
push
les
shr
cmp
sub
insb
mov
icebp
xor
and
daa
mov
iret
lret
mov
popa
ja
mov
inc
xor
inc
fs
add
testb
pop
xorl
xor
or
aaa
aas
imul
mov
aas
or
inc
cmp
push
imul
and
cmp
dec
clc
pop
xor
lret
and
adc
xor
or
push
pop
lds
stc
cmp
sub
xor
inc
cmp
aad
imul
inc
adc
xor
jns
es
xchg
mov
push
cmp
fs
ja,pt
cmp
xor
mov
xor
inc
mov
xchg
mov
push
cli
xor
das
iret
push
mov
jnp
popa
pop
ss
pop
xor
adc
xor
ret
insl
cmp
outsl
mov
shlb
mov
outsb
cmp
adc
mov
mov
les
aas
xlat
jns
es
xor
mov
mov
jg
push
iret
xor
and
push
int3
push
ss
adc
adc
push
sbb
adc
and
mov
stc
adc
xor
inc
cmp
addr16
cwtl
xor
xor
mov
cmpl
sarl
mov
and
cmp
pop
inc
lock
dec
cmp
cmp
xor
mov
dec
aas
jno
lds
add
push
cmp
ret
and
xor
or
fldenv
pop
mov
aaa
xchg
and
pop
popf
sub
xchg
and
xchg
push
sbb
sub
xchg
xor
pop
mov
and
cmpb
mov
cld
dec
xor
xor
push
mov
cmp
stc
xor
pop
sti
cli
bound
shr
stc
adc
daa
cmp
punpcklbw
add
nop
dec
sub
xor
add
jb
insb
icebp
dec
imul
jl
insl
mov
negl
cmp
stos
pop
cmp
cmp
cmp
adc
mov
ss
cmp
xor
icebp
push
std
dec
dec
and
scas
xor
pushl
cmp
xor
aaa
xchg
cmp
mov
add
mov
fs
jne
mov
shll
sbb
scas
movsl
fwait
je
gs
imul
je
fndisi(8087
jns
mov
icebp
fildll
ss
je
mov
and
fnsave
in
idivb
jge
dec
shrb
mov
jno
cltd
cs
jp
bound
xor
adc
outsl
mulw
loop
and
aas
xor
dec
cmp
mov
int
dec
cmp
push
mov
sbb
mov
push
mov
into
and
lret
cmp
sub
pop
aaa
pusha
scas
and
ja
xchg
sub
push
fwait
cmp
push
mov
adc
xchg
fs
xor
mov
popa
adcl
ret
movl
jnp
fld
mov
and
mov
pop
popa
xchg
xor
sub
aaa
js,pt
outsb
push
movsl
cmp
stc
and
daa
push
adc
xor
cmp
ss
shll
and
mov
adc
loope
fidivs
test
shrl
daa
add
test
fwait
cmp
shll
add
xor
testl
outsl
clc
pushf
cmp
xor
ja
inc
aas
push
xor
stc
xor
jge
adc
roll
jne
xor
adc
or
das
in
pop
xor
and
lds
mov
daa
cmp
or
or
inc
and
xchg
mov
aad
cmp
in
lret
xor
jno
fsubs
fwait
push
movsl
imul
and
idivb
dec
cmp
dec
cmp
aas
dec
jno
inc
xor
inc
or
cmp
or
jg
jl
adc
jae
dec
adc
inc
sub
mov
and
sub
inc
adc
inc
ds
adc
out
push
xor
dec
icebp
jnp
clc
cmp
adc
dec
cmp
test
jne
imul
xor
mov
inc
sub
out
ss
gs
add
mov
mov
and
cmp
or
mov
xor
inc
and
cmp
sub
mov
and
cmp
xchg
mov
jns
inc
xor
aad
xorb
cmp
xchg
cmp
arpl
jg
mov
sub
mov
pop
xor
inc
mov
pop
daa
mov
lds
shll
mov
negb
add
outsb
jns
pop
xor
divb
sbb
xchg
jmp
das
mov
cs
mov
cmp
aas
hlt
mov
mov
and
and
mov
aaa
mov
inc
pop
mov
cmp
test
je
xor
fidivl
xor
jae,pn
pusha
aaa
iret
repz
dec
sub
mov
ja
sbb
xor
rorl
xchg
aas
mov
jp
cmp
or
sbb
pop
ss
sub
jne
xor
mov
cmp
mov
push
add
mov
insl
mov
push
jno
loop
cmp
lods
fwait
cmp
sub
mov
lret
push
mov
sub
out
mov
int
stc
cmp
inc
or
pop
stc
xchg
push
cli
mov
xchg
icebp
xchg
jo
sub
jbe
sub
mov
cmpsl
xor
mov
outsb
clc
ds
cwtl
mov
mov
dec
sub
jo
rcrl
aaa
xor
cmpsb
daa
sub
sbbl
mov
xor
mov
insb
cmc
aas
stc
mov
and
xor
adc
lret
into
add
mov
and
cmpsl
rcll
xor
aaa
cmp
arpl
mov
sub
test
sub
dec
daa
inc
push
imull
cmp
popa
xor
mov
or
cmp
cmp
imull
mov
sub
stos
loope
mov
ds
cmp
mov
cmp
bound
cmp
cmp
inc
mov
shll
xor
xchg
or
jp
das
insb
data16
add
sub
xor
mov
xor
mov
stc
sbb
mov
and
or
inc
xor
inc
mov
cmp
or
gs
mov
icebp
fsubl
mov
or
mov
dec
ds
mov
cmp
jge
cmp
roll
aas
rcll
les
mov
ja
adc
aad
rcll
add
jae
cmp
sarl
outsb
inc
scas
gs
rorl
and
inc
xor
inc
cmp
out
fs
outsb
outsb
imulb
nop
mov
jne
rorl
xor
popf
and
stos
xchg
xor
xor
mov
inc
movsl
pop
sarl
jne
dec
cmp
sarl
inc
adc
dec
adc
das
mov
outsl
xor
mov
addr16
xor
mov
mov
xorl
sbb
insb
leave
cmp
push
sti
rcrl
cmp
mov
mov
js
mov
cmp
mov
aaa
xor
adc
cmp
addr16
cld
sbb
icebp
fisubs
dec
and
popa
and
lock
aaa
cmp
aaa
xor
mov
cwtl
shrl
xor
and
xor
int3
clc
xor
aaa
xor
cmp
clc
insl
mov
xor
add
xor
mov
mov
lds
ja
lret
and
insb
mov
cmp
mov
jae
sub
lock
rcll
mov
popa
mov
and
dec
push
jno
das
mov
xor
stos
in
xor
cmp
aas
mov
mov
adc
mov
mov
and
sti
sub
jae
jnp
mov
sub
inc
and
pop
test
push
test
inc
mov
xor
cmp
mov
divb
rol
mov
aaa
inc
dec
mov
das
pop
cmp
fists
xor
pop
lods
daa
rcrb
xor
dec
push
add
xor
cmp
or
dec
xor
mov
cmp
xor
mov
dec
das
pop
daa
lret
and
cltd
xor
mov
pushf
into
inc
int
pop
xor
dec
mov
cmp
fdivrl
mov
lds
imul
jae
sti
outsw
insb
cld
stc
cmp
mov
cmp
jle
xor
jnp
mov
arpl
lret
xor
xor
fucom
lds
dec
lds
add
lret
sbb
inc
mov
mov
xor
pushf
cmp
cmp
mov
xor
mov
repnz
leave
mov
mov
aaa
and
add
inc
aaa
into
jno
xor
inc
sub
insb
int
mov
insb
mov
inc
and
fisubrl
xor
hlt
cmp
sbb
fdivl
sbb
cmp
lock
sarl
inc
ja
mov
cmp
push
xor
mov
xor
mov
and
mov
shlb
add
popa
xor
ss
mov
mov
daa
jp
mov
mov
aaa
mov
aaa
cmp
dec
aaa
xor
je
pusha
mov
sub
popa
filds
stos
jno
cmp
cmp
into
cmp
iret
mov
dec
cmpsb
ss
mov
gs
xor
inc
push
insb
cmp
arpl
ret
lret
dec
daa
xor
xor
push
ret
dec
cmp
into
pop
cmp
jns
or
dec
int
enter
aaa
aaa
inc
cmp
es
xor
mov
out
rol
in
ffree
mov
jmp
cmp
lret
fstl
fidivrl
arpl
cltd
xor
mov
and
jmp
addr16
sub
dec
cmp
ss
xor
mov
xor
mov
xchg
mov
mov
jb
outsb
dec
xor
adc
iret
xor
imul
add
mov
sbb
add
inc
sub
cmp
aaa
jl
imul
adc
adc
mov
popa
fdivl
or
xor
xor
mov
mov
or
mov
aas
jo
adc
mov
sahf
jnp
sub
adc
stc
adc
and
ror
lods
ret
xor
das
cli
and
xor
push
mov
das
cmp
mov
leave
pop
inc
push
jmp
lret
sbb
inc
ja
mov
fnstcw
lods
inc
aaa
or
arpl
jbe
mov
pop
fmull
push
jno
jmp
icebp
ds
xor
incb
pusha
ss
cmp
sub
cli
xor
push
insb
xorl
enter
leave
inc
cmp
js
negl
shlb
pop
ss
add
bound
icebp
xor
sub
ss
into
and
mov
cmp
xor
sub
xor
and
adc
mov
sarl
into
lret
cmp
divl
mov
aaa
cmp
jo
imul
fnstcw
and
icebp
sub
into
add
lods
xor
xor
jp
into
push
dec
xor
ds
mov
dec
xor
or
push
repnz
mov
fnsave
xor
rorl
mov
add
add
sbb
daa
sbb
pusha
push
cmp
jns
data16
lcall
cmp
cmp
ss
aad
mov
movb
pop
xor
xchg
aaa
lcall
mov
cmc
cmp
cmp
into
add
sbb
fnstsw
aam
into
mov
xor
mov
and
imull
repz
je
sbb
in
mov
xor
mov
enter
stos
pop
sub
pop
push
adc
xchg
sbb
lock
xor
popa
inc
pop
cmp
and
jne
sarl
pop
pop
xor
sub
push
pop
push
push
jl
mov
cmp
sbb
aas
adc
loop
jg
mov
ret
xchg
xor
adc
aas
leave
ja
aaa
cwtl
or
cmp
mov
leave
jae
cmp
push
aad
adc
xor
rol
dec
imul
cmp
xchg
xor
sbb
repnz
sub
out
xor
out
sarb
push
dec
cmp
dec
cmp
mov
mov
movsl
jb
mov
cmp
mov
pop
xor
jo
cmp
inc
xor
cli
inc
or
xchg
or
or
jbe
cmp
int
sub
xor
push
pusha
xlat
fsubs
inc
xchg
shlb
and
insl
shll
dec
fwait
aaa
jmp
push
lret
sbb
and
and
mov
add
inc
adc
mov
push
test
jl
aaa
and
and
repz
fnsave
xlat
mov
jno
rclb
xor
cmc
pop
jg
push
cmp
dec
movsl
add
push
mov
dec
cs
and
aam
and
inc
pop
sub
fldl
stc
cmp
ffreep
icebp
sub
mov
cmp
aaa
pop
gs
aad
fwait
mov
sub
jg
adc
cmp
xor
sbb
enter
adc
jae
std
fistl
and
daa
mov
sub
sbb
std
pop
inc
jle
inc
adc
jne
jns
sub
lods
repnz
cmc
aas
xor
cmp
ss
icebp
jno
xor
xor
dec
sbb
shll
xor
mov
outsb
mov
insb
hlt
arpl
mov
es
xor
cmp
dec
aas
xor
add
xor
jno
jecxz
shll
pop
xor
jmp
fs
icebp
incl
jnp
outsl
hlt
arpl
or
lea
mov
imul
inc
xor
add
outsl
fnstenv
pop
pop
daa
mov
jge
cmp
rcll
mov
xor
mov
or
outsl
je
inc
or
pop
iret
cmp
mov
fprem1
cmpsl
or
aas
dec
das
pop
sbb
push
push
xor
cmpb
aaa
ss
cmp
rcr
imul
add
mov
aaa
mov
push
or
jns
cmpb
xor
repnz
cmp
rorl
pop
cmp
sbb
bound
sti
popa
fists
lods
into
enter
and
gs
aaa
ss
jg
dec
ss
dec
xor
pop
or
aas
es
inc
stos
adc
sarb
shl
inc
sub
cmpsl
sub
mov
push
pop
adc
inc
or
xor
mov
mov
xor
mov
shll
mov
lds
xor
mov
push
pop
iret
pop
mov
aaa
fisttps
pop
xor
or
adc
inc
xchg
add
into
clc
xor
fs
mov
addl
cmp
and
or
push
jo
dec
sub
cmp
aaa
or
and
xor
xor
aas
inc
mov
sbb
mov
pop
aaa
or
sbb
outsb
xor
or
into
cmpb
jb
mov
lret
loope
dec
mov
cld
cmp
inc
call
sarl
cmpsl
popa
addr16
imul
imul
push
inc
cmp
xchg
mov
mov
aad
add
inc
xor
xor
out
mov
sbb
cmp
mov
inc
xor
jne
dec
fsubs
jp
pop
push
clc
ss
movsl
cmp
idiv
cmp
fisttps
out
sub
adc
testl
jle
xor
js
fcomip
stos
mov
gs
popa
mov
xor
out
mov
add
xchg
xchg
ss
dec
xor
add
sub
fcmovnu
xchg
test
mov
jb
fisubl
cmp
mov
xor
sub
cmp
stos
scas
dec
cmp
xor
and
in
cmp
mov
fidivrl
and
rcr
push
push
cmp
sub
xor
lret
cmp
push
inc
aas
dec
pop
popa
xor
add
decl
push
aas
xor
mov
sbb
push
xor
les
cmp
xchg
or
mov
movzbl
xor
dec
and
inc
popa
jno
xchg
jae
jg
jo
jns
scas
jne
shlb
mov
sub
mov
les
push
xor
addr16
subl
pop
and
jmp
inc
adc
mov
xor
cmp
fs
pusha
cmp
movsl
cmp
aaa
inc
cmp
clc
hlt
inc
xor
jns
enter
xor
jbe
shl
mov
lock
fldenv
aaa
mov
jns
fdiv
mov
xor
mov
mov
cmp
inc
cmp
or
and
cmpsl
and
jmp
mov
ss
inc
xor
push
sub
adc
mov
add
add
test
jb
push
pop
sbb
cmp
loope
shrl
mov
xor
inc
add
jbe
pusha
popa
pop
mov
mov
push
aaa
insb
popa
xchg
leave
fildll
jmp
das
add
in
cmp
xor
pop
pop
add
push
dec
cmp
mov
sbb
dec
jae
push
outsl
or
dec
xor
aaa
lret
xor
xor
mov
or
out
inc
push
xor
dec
nop
sbb
int3
dec
mov
pop
aaa
outsb
fildll
xor
cmp
roll
mov
sub
push
mull
ds
ds
aas
and
inc
cmp
in
shlb
arpl
sahf
xchg
pop
xor
mov
push
test
cmp
dec
cmp
mov
shll
push
cmp
shrb
loopne
bound
les
stc
jb
cmp
push
repnz
mov
divl
pop
imul
inc
or
push
xor
xchg
fidivrs
mov
push
or
cmp
push
ja
jg
xor
dec
adc
dec
adc
or
add
cmpsl
push
mov
cmp
mov
jbe
mov
mov
mov
pop
xor
mov
push
imul
daa
xor
sbb
push
push
loopne
out
aas
cmp
insl
push
inc
movsl
scas
xor
lds
stos
xor
pop
lret
and
in
mov
xchg
xchg
xor
stc
sbb
cmp
mov
and
leave
xor
or
jp
push
fnsave
and
jmp
data16
mov
xor
pop
mov
adc
xor
dec
and
cmp
cmp
jbe
or
push
inc
sti
push
aaa
mov
xchg
popa
pop
adc
xor
cmp
push
es
lock
cmp
pop
cmp
or
pusha
xor
data16
ja
pop
adc
cmp
pop
shll
xchg
lret
sub
add
xchg
or
cmp
mov
cmp
xchg
xor
mov
mov
xor
push
icebp
adc
shr
cmp
sub
aas
mov
cmp
inc
ds
sub
sbb
aas
mov
xor
mov
cmpb
sahf
jno
mov
cmp
test
xlat
cmp
xor
hlt
ret
cmp
repz
daa
push
cmp
inc
xor
das
xor
inc
sub
aaa
lret
into
and
sub
aaa
mov
inc
aas
cmp
int3
inc
das
outsl
fldenv
inc
cmp
into
push
push
adc
in
add
outsw
insb
cld
stc
and
mov
mov
pusha
pop
cmp
jo
mov
cmp
xor
jb
xor
or
cmp
mov
inc
imul
xor
and
aaa
sarl
scas
xor
ds
ja
cmp
add
cld
stc
xor
cmp
xor
or
push
xor
xor
cmp
xchg
ss
cli
adc
xor
cmp
shl
cmp
divb
iret
xor
aaa
arpl
ret
neg
cmp
dec
lret
imul
ficomps
push
dec
xor
xor
xor
sub
inc
cs
sub
xor
xor
cmp
movsb
jne
cmp
push
xor
xor
xor
mov
fnsave
aaa
add
xor
daa
pop
cmp
push
xor
leave
test
cmp
jno
xchg
lret
inc
jno
aad
cmp
push
xor
aad
cltd
inc
ja
stos
insb
xor
mov
xor
pop
fstpt
dec
xlat
xor
xor
aad
fsubs
shll
jge
cmp
xor
cmp
or
aaa
aam
xchg
adc
xor
sarl
xor
xor
das
cmp
xor
pop
fstenv
rcl
cmp
xchg
jo
mov
xor
mov
js
inc
aad
sub
jbe
ds
push
xor
jns
push
cmp
fsubrs
aaa
ja
shlb
jge
xlat
cmp
test
and
xor
fnstcw
mov
sti
cwtl
out
fidivl
pusha
xlat
cmp
out
xor
in
sarb
dec
leave
cmp
int
and
ret
adc
cmp
lret
xor
push
fwait
sub
cmp
xor
iret
cmp
mov
cmp
lret
xor
xor
leave
cmp
int
popa
push
pop
lret
cmp
push
int3
xor
leave
cmp
jno
leave
lds
pop
std
shrb
lret
xor
xor
leave
cmp
int
mov
repz
cmp
into
xor
lret
xor
js
cmp
leave
cmp
ret
leave
cmp
lret
xor
xchg
xor
add
clc
mov
sbb
lods
int3
xor
dec
int
pop
xchg
ret
leave
cmp
sub
xor
inc
jb
inc
ja
cmp
add
shrb
les
ljmp
xor
xor
int
enter
cmp
int
cmp
enter
jae
xor
outsl
xor
xor
int
mov
rol
cmp
cmp
test
sarb
xor
xor
int
enter
lret
cmp
xor
mov
aaa
lret
xor
ds
in
lret
cmp
scas
lds
sarb
pop
mov
sub
xor
jne
cmp
pop
xchg
les
aad
xor
cmp
cmp
mov
xlat
das
sarl
cmp
pop
lret
cmp
aaa
shlb
pop
xchg
xlat
push
shll
or
les
mov
enter
cmp
cmp
pop
shll
outsl
leave
xor
ds
xor
xor
pop
int3
ds
xor
ds
loop
ss
inc
shlb
xor
ss
fists
xor
xor
pop
lret
cmp
ds
cmp
ds
xor
ljmp
xor
xor
cmp
ss
cmp
xor
xor
cmp
xor
xor
xor
cmp
cmp
enter
xor
and
cmp
daa
add
add
jns
jnp
cmp
aaa
and
cmp
mov
add
mov
decl
std
add
roll
xlat
or
add
cmp
das
or
add
push
pop
or
jns
insl
add
pop
or
inc
or
mov
mov
movsl
add
or
or
add
push
out
aad
int
lret
push
aas
or
and
or
jge
jnp
outsl
or
push
add
mov
mov
add
jne
or
fldl
int
xor
xor
or
add
push
or
or
add
gs
add
inc
add
mov
or
add
add
push
in
add
add
or
add
push
lds
add
add
or
prefetch
jno
jne
arpl
andnps
pop
or
mov
or
xchg
jne
pop
sti
add
paddsw
rorl
sysexit
add
or
push
sub
pop
push
sbb
push
jae
ja
add
pop
push
pop
add
dec
add
add
or
push
mov
decl
std
add
or
push
roll
xlat
push
lds
leave
or
or
or
adc
adc
add
jns
insl
or
pop
add
inc
add
mov
mov
movsl
pop
add
add
or
or
flds
int
lret
or
and
and
add
or
outsl
add
push
add
inc
or
add
or
push
addl
testl
fisttpll
fisttpl
add
push
xor
xor
add
or
movq
jge
popa
add
push
xorps
inc
or
mov
or
orl
cmp
addr16
xor
sub
push
pop
add
or
add
or
push
add
or
or
ja
popa
or
add
imul
add
aaa
xor
xor
cltd
add
add
or
rorl
xlat
add
or
cmp
das
add
or
push
pop
add
jns
insl
or
pop
add
inc
add
mov
mov
movsl
or
add
add
xor
inc
cmp
add
xor
add
jno
or
cmc
add
jmp
add
fldl
xor
xor
mov
mov
push
mov
push
stos
add
or
push
orl
sbb
or
jp
push
add
or
push
lret
or
mov
add
adc
or
push
or
popf
or
or
add
or
or
pop
aas
or
add
push
aaa
xor
jge
cmp
pop
add
mov
add
or
add
or
add
or
or
mov
add
add
push
ret
or
push
test
dec
or
or
cmp
or
pop
rorl
add
pop
arpl
outsb
add
dec
pop
mov
or
or
add
aaa
push
xor
cs
or
add
push
add
or
inc
push
inc
or
add
sub
sbb
jl
mov
add
or
cs
add
add
add
or
add
or
stc
movntq
and
push
or
jp
push
inc
or
push
lcall
or
push
xor
pop
add
add
paddusb
sbb
push
push
cwtl
add
xor
je
insb
add
add
add
or
jnp
push
add
or
push
fldl
xor
or
push
or
inc
or
aam
leave
pop
sub
or
add
or
or
or
pop
push
or
lfs
mov
add
push
stc
or
push
xor
xor
xor
cmp
pop
and
add
js
cltd
or
pop
xor
aaa
add
add
or
mov
add
or
adc
push
mov
popf
add
or
add
push
imul
sbb
pop
add
mov
sets
orl
gs
push
mov
add
or
push
xor
add
or
in
in
les
sub
invd
or
add
add
or
or
add
or
pcmpeqb
fs
nop
ja
add
or
push
and
sbb
add
inc
push
cmc
add
or
pop
cs
jne
jg
imul
or
or
push
popf
or
or
add
or
add
inc
pop
scas
or
add
cld
push
decl
xor
xor
push
or
add
add
or
addl
lcall
push
lcall
add
or
or
pop
add
add
or
push
rorb
or
xchg
or
das
or
or
push
fisttpl
xor
xor
and
push
add
push
push
pop
pop
or
movsl
add
cmpsb
or
or
add
movsb
or
add
push
xor
addl
push
sub
pop
add
mov
vmwrite
outsl
or
pop
add
pop
add
inc
or
add
mov
mov
mov
push
test
fwait
or
push
addl
or
or
add
push
cli
add
or
or
add
push
fldl
aam
lds
add
push
xor
aas
or
sub
and
das
add
or
movlps
pop
or
or
jns
jbe
jns
push
add
push
add
pop
cmovg
dec
or
mov
or
xchg
setge
lcall
je
add
or
pavgw
in
or
fisttpl
lret
or
xor
xor
ds
add
or
push
sbb
sbb
add
or
push
pop
add
jae
jb
addr16
outsb
add
push
pop
or
push
add
dec
add
push
mov
add
add
orl
add
or
push
out
add
or
add
or
push
roll
or
pop
aaa
or
adc
push
pop
add
xlat
or
add
push
xor
lea
cmp
adc
sbb
add
add
push
testl
rorb
push
pop
or
add
add
je
cltd
or
in
add
lret
or
dec
or
or
ret
or
add
pop
add
mov
test
add
push
add
add
jbe
jle
jbe
add
add
pop
add
add
or
jo
jle
or
insb
add
add
mov
add
jo
pop
or
pop
add
or
or
cmp
xor
cmp
dec
pop
mov
add
or
cmovl
xor
add
or
cld
or
pop
fmuls
jl
mov
or
pop
push
or
pushw
cltd
or
cmp
and
xor
xchg
or
or
add
out
adc
mov
repnz
or
addr16
mov
lea
push
aaa
or
add
or
and
ja
imul
dec
push
mov
leave
or
or
add
or
test
jmp
add
add
push
add
or
lret
add
jle
cmpsb
or
int
xor
and
add
fwait
add
addl
pop
xor
add
aaa
xor
mov
add
dec
or
or
add
arpl
pop
or
add
add
or
add
or
cmp
adc
add
add
add
or
or
jmp
rorb
or
jnp
xor
cmp
add
pop
or
add
or
add
add
or
add
or
add
scas
or
gs
mov
jl
push
addps
or
jp
lods
add
or
getsec
add
cwtl
pop
test
test
xor
xor
xchg
or
or
push
cmp
add
or
add
add
or
push
or
add
pop
or
add
pop
pop
adc
or
xchg
pop
stc
or
add
push
push
sti
or
add
inc
add
popa
add
call
ud0
or
add
or
or
or
pop
add
mov
mov
out
or
and
sbb
add
pop
push
inc
add
or
out
fiadds
iret
or
dec
or
push
jno
mov
or
add
in
push
fmuls
rolb
ss
xchg
or
or
pop
into
or
add
pop
or
add
fiaddl
mov
mov
add
lret
or
add
cmpsl
add
add
or
add
add
or
add
add
or
push
xor
jge
movsb
or
or
pop
add
cmpsl
or
push
lahf
or
add
push
aaa
xor
cmp
xor
inc
or
add
add
or
add
push
movb
ja
xchg
add
add
or
add
mov
sbb
add
pop
or
or
inc
or
mov
xchg
lret
or
xor
jge
cmp
aam
cmp
sub
ja
jo
js
popa
or
mov
mov
or
add
push
leave
or
add
nopl
pusha
add
push
add
clc
add
unpckhps
add
or
add
or
add
push
add
push
push
mov
sub
sbb
add
mov
mov
invd
add
or
add
push
les
lds
cmp
add
or
dec
add
cmpsb
add
add
or
push
push
jp
jbe
jp
popa
or
or
add
sahf
or
add
add
pop
or
or
dec
or
mov
or
pop
or
arpl
or
dec
or
or
jns
gs
pop
pop
pop
or
dec
cmovge
inc
pop
mov
mov
or
add
sti
pop
stc
or
add
int
int
xor
push
or
das
or
add
push
insl
or
push
or
inc
push
mov
scas
push
stos
or
or
push
cli
or
add
push
aaa
movsl
cmp
xor
xor
add
jg
imul
push
pop
pop
or
inc
add
mov
cmpsb
add
push
push
or
add
push
or
add
lods
or
add
add
es
sub
or
dec
push
orb
add
push
add
add
or
add
mov
ud1
fimuls
or
inc
add
or
pmulhuw
in
or
sbb
add
ja
ja
gs
mov
cltd
or
or
add
or
xlat
push
fldl
sub
adc
prefetch
addr16
in
into
or
add
imul
or
adc
or
or
addb
or
sbb
push
jge
pop
add
push
mov
test
add
push
movb
aaa
xor
xor
cmp
insl
add
pop
std
or
add
add
or
dec
or
add
pop
inc
or
add
push
or
add
push
add
loopne
in
pand
enter
xor
add
push
adc
add
or
add
mov
fldl
adc
cmpsl
add
add
pop
add
or
inc
add
add
or
or
add
or
pop
cmove
lods
or
lods
push
stc
add
or
pop
hlt
or
ret
or
pop
xor
add
or
into
add
or
imul
insl
push
push
or
test
push
enter
cmp
xor
cmp
add
push
jmp
sbb
or
add
push
daa
or
or
push
push
or
or
add
push
aas
or
cli
add
add
psubb
aam
fiadds
mov
lahf
push
fwait
add
add
pop
or
and
sbb
cmc
or
pop
fmuls
dec
or
or
push
or
repnz
push
push
or
dec
push
dec
or
add
push
test
xchg
push
sahf
or
or
push
xor
xor
shll
xor
sub
add
test
sti
add
add
xor
xor
or
push
fisttpl
lret
pop
xor
daa
add
sbb
ud2
or
mov
add
fldl
ret
or
add
arpl
push
add
or
mov
add
vmwrite
mov
mov
add
or
sub
or
jb
add
push
add
add
push
roll
add
cvttps2pi
pop
or
pop
cmovns
mov
mov
mov
add
mov
add
xchg
push
xchg
add
or
jae
push
pop
mov
add
repz
push
or
or
or
add
or
pop
cvtps2pd
test
rorb
add
push
xchg
cmp
xor
in
cmp
xor
pop
or
push
jnp
push
lea
push
or
or
and
inc
or
movsl
add
or
add
add
push
add
mov
nop
add
decb
movb
jle
fs
add
sbb
add
fwait
pop
aaa
add
push
lods
add
iret
or
or
pop
add
or
or
or
mov
cmp
or
pop
or
add
xor
mov
lahf
add
or
or
add
and
or
or
fmull
cmp
or
push
jbe
push
or
dec
add
or
and
or
pusha
or
stos
add
or
push
cmp
or
setne
cmp
pop
ret
and
inc
or
xor
xor
add
bound
cmp
add
add
arpl
push
add
or
push
xor
rorl
or
add
test
xchg
or
cmovns
aam
outsl
add
push
or
pop
test
cmc
or
fmull
jae
xor
adc
add
adc
and
or
push
xor
lds
cmp
inc
xor
add
add
repnz
adc
cmp
or
cmp
mov
add
out
add
or
add
jns
outsb
pop
aaa
push
or
scas
rdtsc
xchg
add
bswap
add
or
push
add
loope
lahf
or
wrmsr
add
or
or
aaa
or
jae
or
add
fs
push
aam
add
cmp
and
xchg
or
lock
push
push
cmp
add
or
add
cmp
add
xor
or
add
ja
das
add
sub
or
mov
xor
mov
and
pop
jns
addl
add
pop
mov
cmp
pop
push
inc
xor
or
add
or
pop
jl
or
cmp
mov
cmp
adc
movsl
add
cmc
add
add
pop
fidivrs
aaa
push
jecxz
push
cmp
sti
or
cmp
or
push
push
xor
or
push
or
or
outsl
or
xor
mov
test
cmp
iret
or
push
xor
aaa
cmp
xor
xor
xor
add
add
inc
or
jno
adc
add
jo
pop
mov
fwait
add
xchg
add
or
or
add
push
pop
add
xor
add
or
aaa
add
mov
testb
aad
and
adc
outsb
push
pop
add
std
or
push
ss
or
or
add
bound
dec
xor
addl
or
push
cmp
sahf
psubd
loopne
aam
add
or
sbb
add
pop
push
mov
xchg
aaa
push
addb
or
add
xor
or
or
dec
or
cmc
pop
testl
add
aaa
or
inc
or
addl
or
or
cmp
or
pop
jns
pop
cmp
dec
or
xor
or
sub
or
jl
popa
add
xor
inc
or
mov
push
in
testb
xor
pop
sbb
push
add
dec
or
or
inc
push
lods
or
sub
add
add
mov
add
cmpsb
add
add
or
loope
xor
jae
pop
or
or
sbb
cmp
dec
pop
mov
xchg
fisttpl
xor
adc
aaa
jne
outsl
or
or
xor
mov
lods
or
mov
cld
or
jne
cmp
or
add
xor
mov
adc
bswap
or
and
push
jo
cmp
and
negb
addr16
cmp
or
pop
add
mov
test
out
add
add
or
push
jno
mov
cmp
divl
add
push
or
pop
dec
or
cmp
movsb
add
or
push
adc
or
add
std
or
mov
xor
add
or
aaa
push
fimuls
mov
stos
push
pushf
xor
fwait
push
test
add
cmp
xor
cmp
sbb
ud2
add
vmread
mov
out
cmp
ret
add
or
or
push
sub
pop
push
jae
add
mov
xchg
or
xor
pop
dec
add
xor
icebp
add
or
or
or
sarb
add
or
or
out
add
ja
faddl
fisttps
pop
add
daa
or
jns
jl
or
pop
or
mov
nop
xchg
or
push
in
or
push
leave
or
or
cmp
sub
adc
add
imul
mov
add
sahf
pop
repnz
or
pop
call
xor
and
push
sbb
jge
adc
outsl
add
push
mov
mov
cwtl
push
xchg
mov
dec
lret
push
aaa
cmc
fisttpl
push
imul
daa
pop
sbb
add
jp
pop
push
adc
sbb
fwait
aaa
add
xlat
or
xor
and
sbb
sbb
cmp
arpl
or
inc
cmp
mov
add
in
fisttpl
fnsave
add
or
add
add
fs
cmp
inc
pop
inc
or
lahf
add
in
or
add
aaa
push
or
or
add
or
mov
test
add
cmp
in
aad
int
xor
add
arpl
add
inc
add
mov
jae
icebp
pop
loop
adc
xor
daa
or
push
movsb
add
sahf
cltd
mov
or
sbb
cmp
push
cmp
nop
push
addb
or
xor
adc
push
sub
or
or
cmovl
xchg
aaa
jbe
add
xor
movsl
or
add
or
or
inc
or
aas
add
add
add
or
add
pop
jae
pop
add
add
mov
jnp
call
xchg
mov
sub
xor
insl
pop
jl
pop
adc
cltd
mov
add
cmp
and
and
jns
addr16
or
add
pop
pop
repnz
add
add
or
add
push
pop
xchg
bswap
add
add
add
sbb
pop
or
cmp
shll
aaa
cld
or
add
add
add
test
adc
rorb
add
mov
cmpb
loopne
xchg
add
and
adc
xor
movups
pop
ss
out
dec
or
mov
sbb
push
jno
mov
or
xor
or
add
add
mov
xor
lcall
add
jb
dec
dec
push
jp
push
adcb
std
jg
out
inc
ret
add
pop
sub
cmp
iret
or
push
cli
xor
xor
mov
or
rcll
or
xor
stos
pop
xchg
jns
fildl
int3
or
push
or
cmp
and
and
aas
or
push
or
or
jge
or
pusha
or
pop
cmp
dec
add
or
xchg
mov
mov
sbb
and
out
or
or
dec
add
xchg
adc
jo
or
add
outsb
inc
inc
sub
nopl
add
arpl
or
les
push
add
or
or
xor
std
add
or
add
add
ret
add
inc
add
add
sub
jnp
and
or
or
xor
cmpsl
add
or
dec
inc
dec
and
add
addl
mov
imul
mov
or
inc
add
flds
sub
sbb
push
jl
xor
int3
or
cmp
add
ja
lods
or
mov
mov
test
mov
lret
dec
out
push
and
mov
pop
rorb
xor
add
test
and
repz
lret
or
add
add
popa
and
mov
pmaddwd
cld
or
jbe
add
mov
cmp
or
add
push
cmp
mov
add
or
or
cmpl
ret
add
jo
add
xor
sbb
aaa
pop
outsl
mov
jne
dec
jmp
push
add
mov
mov
addb
push
outsl
pop
dec
add
cmp
add
adc
adc
pop
or
or
in
movsl
and
add
xor
or
mov
rorb
outsb
data16
xor
xor
add
add
inc
jg
mov
imul
and
add
sub
cmp
add
cltd
aas
or
std
pop
loope
or
pop
rorl
aad
jne
int
iret
add
and
add
xor
or
adc
jne
imul
dec
daa
add
or
std
xor
sub
add
or
or
xor
mov
sub
jmp
adc
xor
sbb
pop
cmp
jnp
or
dec
cmp
mov
add
jmp
xlat
or
xor
aaa
leave
pop
sbb
pop
or
leave
jbe
jl
add
add
int
add
or
add
lret
and
ja
addr16
add
add
lods
xchg
sub
add
add
or
lds
or
aaa
add
mov
sub
or
jnp
loope
gs
push
sub
mov
movsl
xor
xchg
or
xchg
pop
testl
jmp
sbb
test
push
sbb
jns
jmp
jno
add
popa
add
pop
jno
pop
or
push
dec
inc
pop
mov
add
add
xchg
icebp
add
cmp
loope
jmp
xor
add
add
sub
add
or
jns
imul
or
dec
mov
cmp
xor
xor
cmp
ss
cmp
xor
xor
cmp
xor
xor
xor
cmp
xor
xor
xor
cmp
xor
xor
lret
ds
cmp
xor
xor
cmp
ds
cmp
xor
xor
cmp
ss
cmp
xor
xor
cmp
xor
xor
xor
cmp
xor
xor
xor
cmp
xor
dec
fiadds
aaa
pop
cli
xchg
pop
cwtl
les
dec
imul
and
iret
test
cmpsb
mov
sub
push
push
in
add
add
add
stos
inc
sub
mov
jns
inc
jl
int
or
repz
out
inc
xor
xchg
add
jae
test
ret
jg
cmp
mov
cmp
mov
mov
jne
in
stc
dec
in
cmc
dec
dec
push
xor
div
test
out
inc
mov
mov
iret
xor
cmc
jg
arpl
mov
repnz
mov
pcmpeqd
lahf
push
xchg
jl
or
aaa
sbb
out
push
dec
or
pop
xor
es
cmpsb
out
cmp
ret
into
in
icebp
cmp
inc
xor
in
out
jae
sub
aam
shll
xchg
stc
or
inc
ds
mulb
ror
dec
scas
cmp
fistps
mov
jo
dec
adc
outsb
xor
add
cmp
cmp
adc
cmp
push
add
cmp
dec
pop
xor
fcompl
xlat
mov
inc
cmp
xchg
je
movsb
call
insb
cwtl
arpl
lock
cmp
daa
cmp
out
pop
xchg
ljmp
dec
cmp
dec
filds
sarb
int3
fidivrl
sub
cmp
cld
shlb
cld
cltd
fwait
icebp
aaa
and
inc
or
xor
mov
or
jp
dec
inc
adc
lods
test
lahf
hlt
xor
pop
or
hlt
aaa
outsl
pop
sahf
mov
cmp
dec
xchg
add
inc
sbbb
shrl
mov
fstpt
dec
sub
inc
xor
jbe
or
xchg
in
cs
ja
xor
sub
add
cs
pop
int
lret
sbb
cmp
mov
stos
shlb
mov
into
dec
aaa
and
push
dec
xor
pop
frstor
push
xchg
fadds
leave
cmp
cmpxchg
pushf
xchg
push
insl
icebp
pop
test
stc
cli
xor
adc
test
or
mov
cmp
cmp
std
fs
out
xor
fistpll
xor
mov
sahf
andl
push
aaa
dec
iret
cmp
dec
fs
lahf
lods
ja
add
jl
repz
aaa
push
ret
dec
sahf
adc
push
loop
ficomps
push
inc
cmp
int
sub
lock
push
sub
dec
jg
pop
push
sbb
stos
out
xchg
aaa
lcall
fnsave
loopne,pn
inc
in
sti
out
push
dec
jb
rcrb
inc
pop
fwait
xchg
push
xor
pushf
push
pop
divb
cs
lods
push
cwtl
mov
addr16
mov
insb
dec
cmp
fnstenv
add
fiadds
sub
xor
repnz
stos
nop
aaa
mov
mov
push
xor
pop
mov
aaa
pop
cmp
adc
mov
dec
inc
outsb
mov
xor
stc
pop
ljmp
adc
call
jmp
cmp
mov
cmpsb
das
mov
fmuls
xor
mov
mulb
dec
test
adc
xor
jle
jno
orb
adc
cmp
ret
popa
stos
push
sub
aam
push
jle
mov
jbe
jle
or
xor
into
jnp
dec
cmp
imul
sbb
jbe
push
xor
movsl
aas
mov
aaa
inc
mov
pop
or
loopne
aad
jo
insb
sub
inc
cmp
mov
or
cmp
xchg
lcall
push
push
inc
lock
in
nop
or
xor
pusha
pop
cmp
jge
mov
jne
out
test
dec
xchg
sub
xchg
and
data16
sahf
test
aaa
imul
jb
ficoms
jns
movhlps
mov
lds
mov
cmp
insl
or
xor
mov
mov
push
mov
mov
xor
sbb
cmp
or
pop
pop
mov
cmp
add
add
add
leave
decb
and
in
loopne
in
jge
shlb
shrb
and
jle
adcl
cs
gs
cmpsl
fsubl
loope
in
dec
ficoms
cli
dec
cmpsl
jo
mov
cmp
pop
or
ja
fstl
call
sub
or
out
and
test
inc
movsl
jbe
stos
cmp
test
ds
jmp
loopne
in
in
cmpsl
into
jno
imul
aam
popa
fisubrs
xchg
aas
cmpsl
fsubrl
stos
gs
push
and
lds
and
enter
jg
sub
loopne
jne
ret
and
shlb
pushf
xor
insl
shrb
ror
lret
mov
and
cs
and
cmp
das
movsl
fsubl
mov
movsl
cli
pop
cs
clc
mov
jne
and
jne
ret
sub
jnp
and
dec
shll
pop
sub
jmp
loopne
cmc
adcb
mov
cwtl
and
icebp
ret
dec
std
cli
push
and
add
int
loopne
leave
adc
sbb
fsin
aad
mov
dec
movsl
in
stos
gs
cmpsl
fdivl
ja
lds
sub
in
in
loopne
in
in
cmpsl
into
mov
sub
and
cmpsl
sub
test
fisubs
jns
movsl
ja
mov
aam
fs
test
shlb
cmpsl
imul
ja
sub
stos
jne
movsl
imul
push
mov
fsubrs
sub
and
daa
cmpsl
ja
stos
in
sub
imul
push
pop
outsb
cmpsl
ja
mov
aam
and
ja
jp
and
imul
shrb
xor
cmpsl
jns
stos
insl
fisubs
shlb
xor
cmpsl
jns
stos
insl
es
test
in
and
in
in
loopne
in
in
loopne
stos
les
fsubrl
cs
stos
insl
and
stos
jge
inc
lock
and
jnp
test
and
stos
insl
shlb
sub
in
in
jns
int3
stos
push
cmp
push
lods
push
sub
push
ss
and
insl
and
cmpsl
ja
jp
add
and
lods
call
sub
cmp
outsl
sub
movsl
jns
jb
cmp
and
and
out
out
in
in
loopne
in
in
loopne
in
in
jns
int3
stos
ret
gs
imul
push
aaa
mov
add
ljmp
and
clc
mov
aam
popa
shrb
xlat
pop
movsl
ja
mov
fistps
stos
and
cmp
jnp
gs
cmp
insl
aam
in
and
stos
jge
scas
loopne
mov
mov
sub
es
xchg
mov
sub
das
movsl
fsubl
test
mov
aam
popa
shrb
fsubs
jns
mov
fsubl
sub
ficoms
outsl
fcompl
cmpsl
jge
loop
out
in
in
loopne
in
in
loopne
in
jge
shlb
movsl
fsubl
sub
push
sub
sub
movsl
popa
fisubrs
and
sub
fwait
xor
and
and
in
and
push
sub
cli
test
jg
and
loopne
in
in
loopne
in
in
loopne
in
in
cmpsl
into
jno
imul
aam
popa
fisubrs
and
sub
fwait
xor
and
and
in
and
push
sub
cli
test
jg
in
loopne
in
jge
shlb
movsl
fsubl
test
and
push
movsl
imul
xor
mov
sub
sub
movsl
imul
cs
loop
out
in
in
loopne
in
in
loopne
in
jge
shlb
movsl
fsubl
test
and
push
cmp
and
loopne
mov
mov
jne
and
in
in
loopne
in
in
loopne
jne
ret
xor
pop
sub
loopne
adc
sub
or
xor
sub
lcall
stos
jge
scas
loopne
mov
and
in
and
stos
gs
xchg
and
loopne,pn
jne
ret
sub
imul
and
cmpsl
sub
in
fsubrl
sub
and
daa
cmpsl
outsl
aam
out
sub
jns
sbb
push
or
aam
imul
insl
cmp
cmpsl
ja
jp
imul
fstp
lods
out
pop
sub
fadd
sub
in
insl
shlb
sub
in
jge
shlb
and
cs
shrb
ljmp
and
cs
sub
sub
ficoml
outsl
xor
cmpsl
ja
sub
test
mov
gs
ja
sub
adc
sbb
movsl
imul
outsl
fisubl
sub
and
sub
and
daa
cmpsl
ja
stos
in
sub
subl
loopne
in
in
loopne
stos
les
shrb
and
call
imul
out
fisubrl
and
lds
in
and
aam
arpl
addr16
and
movsb
cs
shll
lcall
jne
movsl
imul
repnz
cmpsb
popa
fsubrs
aam
jnp
stos
xor
and
imul
leave
sub
sub
movsl
leave
jg
in
loopne
in
in
cmpsl
into
mov
fsubrl
cs
out
sub
and
jmp
cs
adc
mov
faddl
fisubrs
sub
push
and
pop
sub
fsubrl
cs
stos
insl
shlb
loopne
in
in
sub
and
jbe
loop
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
loopne
in
in
jns
int3
stos
ret
mov
rcl
stos
gs
and
cmpsl
imul
xchg
stos
insl
into
jl
or
rcl
stos
gs
movsl
popa
lcall
insl
fiaddl
fstpl
addr16
dec
call
imul
out
xlat
sub
gs
dec
ljmp
push
out
imul
out
pop
in
roll
lret
imul
and
jne
cmpsl
imul
imul
jl
jecxz
rcl
stos
andb
movsl
jae
inc
or
imul
cwtl
mov
and
push
pushf
push
movsl
imul
fstp
mov
nop
movsl
jns
test
and
cld
cmpsl
sarb
fcmovnu
xlat
cmpsl
imul
ja
mov
sahf
xor
test
jns
xlat
shll
xchg
test
ss
cmc
fstpt
stos
insl
into
jl
popa
rcl
shrl
lcall
inc
fs
sub
pmovmskb
cwtl
mov
xor
add
cmp
and
fstp
mov
nop
movsl
jns
test
popf
jmp
js
cmpsl
imul
ja
mov
xchg
add
test
sti
fcom
shll
xchg
test
or
cmp
pop
stos
insl
mov
lret
rcl
stos
gs
popa
lcall
inc
testb
jb
imul
cwtl
mov
sbb
inc
cmc
jl
imul
mov
subb
adc
cmpsl
test
pop
fcmovu
xlat
cmpsl
imul
ja
mov
sub
test
jne
xlat
shll
xchg
test
push
dec
mov
and
insl
mov
rcl
shrl
lcall
inc
rolb
mov
or
rcr
test
cwtl
mov
insb
movsl
leave
jg
in
loopne
stos
les
rcl
fsubs
pop
fistps
shll
mov
aam
leave
jg
and
loopne
in
in
cmpsl
into
mov
fst
shll
aam
sub
and
jns
test
fsubl
sub
loopne
in
in
loopne
jne
ret
sub
fcmovnbe
fstp
mov
shlb
fcmovbe
push
sub
jnp
stos
gs
imul
es
loop
out
in
in
jns
int3
stos
ret
in
rcl
stos
gs
imul
outsl
fcom
pop
and
jne
movsl
leave
jg
sub
loopne
in
in
loopne
in
in
loopne
in
jge
shlb
cmpsl
imul
push
mov
cmp
pop
fistps
shll
mov
aam
leave
jg
and
loopne
stos
les
rcl
fsubs
pop
fistps
rcll
xlat
pop
and
jne
cmpsl
imul
jge
ds
in
in
loopne
in
in
loopne
in
in
jns
int3
stos
ret
add
shlb
push
movsl
outsl
aam
pop
cmp
push
cmp
pop
fistps
shll
mov
aam
leave
jg
cmp
loopne
in
in
loopne
in
in
loopne
in
in
cmpsl
into
mov
fcmovnbe
shll
aam
push
fistps
rcll
xlat
jnp
stos
gs
imul
sub
in
loopne
jne
ret
sub
fwait
xlat
fstp
mov
shlb
fcmovbe
push
sub
jnp
stos
gs
imul
es
loop
out
in
in
jns
int3
stos
ret
movsl
rcl
shrl
fisubrl
aam
jnp
jo
insl
ss
insl
cmp
cmpsl
ja
jp
imul
sub
jnp
test
jg
xor
loopne
in
in
cmpsl
into
mov
fcmovnbe
shll
aam
push
fistps
rcll
xlat
pop
or
push
xor
pop
cmp
pop
cmp
push
xor
pop
and
push
and
jns
test
fsubl
sub
loopne
in
in
loopne
in
in
loopne
in
in
cmpsl
into
mov
fcmovbe
shll
aam
push
fistps
rcll
xlat
pop
cmp
push
and
pop
sub
jge
movsl
fsubl
test
and
in
loopne
in
in
loopne
in
jge
shlb
cmpsl
imul
push
mov
and
jns
test
fsubl
sub
loopne
in
in
loopne
stos
les
aam
fsubs
pop
fistps
rcll
xlat
pop
cmp
push
and
pop
sub
jge
movsl
fsubl
test
and
in
loopne
in
in
jns
int3
stos
ret
gs
shrl
fisubrl
aam
pop
xor
push
xor
pop
fistps
rcll
xlat
pop
and
jne
cmpsl
imul
jge
ss
in
in
loopne
in
in
cmpsl
into
mov
fdivs
cs
sub
cmp
sarb
jne
jl
and
insl
and
shrl
jns
jb
ds
fists
ret
sub
loop
int
out
out
in
in
cmpsl
into
mov
fsubrs
cs
sub
cmp
mov
cmpsl
ja
jp
sub
and
cmpsl
addr16
movsl
popa
sub
sbb
fstp
lods
out
pop
xor
cwtl
rcl
lcall
sbb
cmpsl
jge
loop
out
in
in
loopne
in
in
jns
int3
stos
ret
shrb
sub
and
and
movsl
fsubs
jae
jge
jle
and
gs
or
loopne
adc
lods
jge
jle
and
cmpsl
xor
popa
fidivs
in
rcr
fildll
jge
jle
gs
rcl
adc
ret
cmp
xor
push
rcl
lcall
nop
das
sub
and
in
loopne
in
jge
shlb
and
cs
fsubrs
sub
and
imul
and
cs
pop
xor
pop
and
imul
outsl
fdivrs
jns
jb
cmpsl
addr16
movsl
popa
sub
mov
fstp
lods
out
pop
sbb
scas
gs
mov
sub
jne
jl
fdivrs
stos
in
push
xor
fwait
rcl
lret
movsl
jns
jb
rcr
fildll
ret
sub
lret
jno
in
in
loopne
jne
ret
sbb
imul
and
cs
shrb
sub
out
sub
and
jmp
cs
les
sub
and
imul
and
cs
shrb
cs
out
sub
and
jmp
cs
gs
cs
and
imul
and
cmpsl
sub
test
sub
lock
popa
cli
stos
jge
das
xor
adc
lret
sub
and
and
sub
jg
stos
jne
movsl
imul
fstp
mov
shrb
pop
and
and
sub
es
jae
mov
enter
and
cmpsl
popa
into
stos
jge
scas
sbb
pop
and
lock
ljmp
jge
cmpsl
addr16
mov
hlt
lods
adc
jns
stos
sub
sub
and
hlt
movsl
cmp
sub
test
stos
insl
repnz
sub
sub
cmpsl
imul
outsl
in
mov
insl
jl
adc
gs
push
fisubs
pop
cmpsl
outsl
aam
jnp
stos
xor
sub
imul
jecxz
mov
mov
cmp
jns
leave
xor
rcr
nop
sub
loopne,pn
in
in
loopne
in
in
jns
int3
stos
ret
and
fisubl
adc
fisubrl
and
shlb
movsl
fsubl
test
push
test
int3
sub
test
and
cs
pop
fsubrl
and
cmpsl
fsubs
cltd
fs
leave
das
and
test
fisubrs
jo
test
movsl
popa
sub
gs
out
imul
das
sahf
jnp
cmpsl
repnz
and
sub
movsb
mov
gs
sub
ret
cs
clc
sub
sub
lret
and
das
movsl
ja
mov
sub
lds
icebp
rcll
cli
push
jg
jns
inc
mov
and
scas
ret
cltd
in
fldcw
pop
sbb
test
xor
lahf
in
ja
sub
aam
insl
hlt
adc
lds
test
stos
sub
fisubrl
outsl
cld
mov
stos
in
cs
jne
lds
and
movsl
outsl
fstp
mov
in
cmpsl
into
jno
imul
and
cmpsl
sub
cs
and
and
sub
and
cmpsl
popa
fisubrs
and
cs
add
sub
insb
push
mov
sub
sub
push
and
outsb
movsl
ja
ret
pop
cmpsl
sub
cs
add
outsl
sub
push
aam
out
test
stos
insl
or
and
outsb
pop
xor
gs
ret
and
lods
push
sub
sub
jns
lret
sbb
imul
mov
fisubs
fadd
xor
sub
and
daa
test
and
stos
shrb
shrb
jg
in
loopne
in
in
loopne
jne
ret
mov
cs
shrb
and
out
imul
and
cs
fsubrs
cs
stos
insl
movsl
addr16
test
repnz
fs
fisubs
hlt
mov
sub
sub
les
cmpsb
sub
and
pop
sub
shrb
and
mov
inc
cs
and
and
sub
xchg
and
pop
sub
shrb
sub
and
adc
cli
cmpsl
push
mov
cmp
pop
push
mov
push
stos
push
fsubs
push
or
xor
bound
push
sub
stos
jge
jle
and
cwtl
fcmovnu
fbld
sub
sub
pop
cmp
pop
sub
movsl
mov
insl
xchg
jl
and
gs
daa
stos
jle
and
inc
sub
and
movsl
popa
out
mov
outsb
fisttpll
scas
sub
stos
insl
ljmp
push
xlat
xlat
roll
dec
sub
sub
stos
jge
jle
gs
jle
jb
xlat
shll
insb
test
addr16
js
push
aad
xlat
movb
stos
andb
test
push
test
mov
and
scas
pop
xchg
sub
test
and
cs
mov
dec
sub
jns
jb
cs
and
pushf
mov
movsl
popa
mov
test
cs
out
mov
jmp
cs
jne
adc
inc
sub
inc
and
sub
cmpsl
outsl
mov
enter
mov
mov
mov
data16
gs
daa
jmp
subb
sub
lret
sub
cltd
mov
imul
inc
cs
and
test
rcr
test
subb
add
inc
mov
arpl
les
ja
jp
imul
mov
enter
lods
jge
movsl
ja
movsl
imul
dec
push
mov
jne
rcr
stos
insl
xchg
movsl
addr16
ret
cmp
dec
sub
sub
stos
gs
fstp
mov
les
arpl
stos
jge
jle
in
rcl
in
test
sub
and
daa
cmpsl
addr16
sub
popa
fisubrs
lahf
jg
sbb
push
sbb
or
and
jl
addr16
add
insl
les
das
cmp
insl
scas
inc
loop
mov
lock
push
int
xlat
lds
pop
sub
mov
rcl
mov
add
cmp
arpl
jae
sub
rcr
mov
clc
mov
lock
jns
test
gs
gs
cmpsl
jae
mov
call
gs
test
pop
aad
shr
cmpsl
pop
xlat
rcl
and
sub
sub
fstp
stos
out
sub
rcr
stos
shlb
xchg
jno
pop
mov
push
jle
lods
push
rcr
filds
add
insl
les
das
and
pop
roll
or
sub
movsl
ja
mov
xlat
inc
in
or
and
les
out
mov
call
jns
jns
jb
imul
scas
movsl
popa
imulb
xor
ret
stos
fsubrs
jle
pop
xor
pop
fs
cli
test
shlb
push
rcl
fbld
pop
rcl
fbld
xor
shll
xor
add
pop
scas
pop
cmp
pop
inc
test
cs
fbld
xlat
movsl
outsb
cs
fbld
xlat
adc
rcrl
stos
mov
mov
xor
or
cmp
xlat
movsl
popa
ljmp
xlat
rcl
test
add
cmp
shll
rcr
ffreep
subb
test
cli
test
stos
int
out
cmp
in
loopne
jne
ret
sbb
imul
and
cs
in
cs
out
out
and
sub
imul
in
clc
xor
and
imul
and
cs
clc
ss
out
repnz
and
jmp
cs
gs
xor
and
imul
and
cs
int3
ss
out
fidivs
and
sub
imul
in
rcl
rcr
fbld
sub
imul
fisubl
push
and
out
sub
enter
movsl
push
xor
gs
imul
jecxz
mov
mov
xor
shlb
sub
and
subl
addr16
lret
jno
xor
loop
out
in
in
jns
int3
stos
ret
fdivrs
mov
xchg
insl
sarb
xchg
jne
jl
xchg
fidivrl
xchg
insl
fdivrs
sub
xlat
shll
loopne
in
jge
shlb
out
shrb
and
movsl
imul
push
xor
in
ret
lods
out
pop
and
and
sub
mov
cmpsl
test
cmpsl
outsl
sub
xlat
adc
sbb
cs
movsl
mov
out
stos
mov
ljmp
out
mov
call
rcrl
movsl
mov
rcr
inc
out
stos
mov
pop
ljmp
out
mov
fstp
je
test
popa
in
mov
rcr
dec
out
stos
mov
dec
ljmp
out
rcr
filds
test
pop
in
mov
rcr
dec
out
stos
mov
dec
ljmp
out
mov
fstp
je
test
outsl
in
adc
fnsave
test
push
rcl
jle
lods
test
fstp
imul
rcrl
movsl
test
rcr
push
out
stos
sbb
xlat
dec
ljmp
out
sahf
rcr
fisttps
test
inc
in
lcall
lahf
xlat
dec
ljmp
out
fwait
rcr
fbstp
xchg
fst
shrl
pusha
inc
mov
mov
inc
sub
and
inc
sub
lods
nop
rcl
fnsave
mov
and
ja
jp
imul
lret
rcl
mov
mov
xlat
sarl
movsl
nop
rcl
fnsave
mov
fstp
movsl
arpl
fstp
jp
cmpsb
inc
sub
movsl
nop
rcl
fnsave
das
sub
mov
fildll
pop
push
xchg
jge
mov
rcl
fnsave
das
sub
mov
fildll
movsb
rcl
filds
stos
mov
popa
sub
imul
shrb
sub
gs
sub
and
adc
lods
mov
jp
sub
dec
rcr
xlat
lods
call
test
jl
insl
nop
jg
mov
aad
shll
sub
sub
enter
frstor
fsubrl
cs
stos
insl
shlb
loopne
in
in
cmpsl
into
mov
sub
jne
popa
sub
xchg
fstp
stos
ljmp
ja
mov
gs
jae
jp
imul
test
sbb
arpl
jno
jl
lret
and
faddl
inc
and
inc
sub
cmpsl
outsl
fdivrl
popf
aad
xlat
cmpsl
imul
fstl
sarl
stos
int
out
es
loop
out
in
in
loopne
in
in
loopne
jne
ret
or
lock
popa
cs
les
cs
out
shrb
and
jmp
cs
jne
movsl
imul
test
and
clc
stos
out
sub
push
lret
stos
and
sub
je
and
stos
ljmp
and
sub
push
ljmp
and
sub
sbb
and
stos
ljmp
addr16
sub
sub
out
sub
and
lds
lds
test
fsubrs
pop
cmp
and
sub
scas
out
mov
pusha
cmpsl
jns
lret
repnz
push
into
and
addr16
add
test
stos
xor
sub
movsl
popa
out
cmpsl
ja
stos
in
sub
imul
leave
inc
mov
and
imulb
hlt
test
and
shlb
mov
ret
daa
cmpsl
ja
stos
les
push
shlb
pop
cmpsl
addr16
add
test
stos
xor
sub
lds
in
shrb
and
mov
fsubr
imul
lret
xor
cs
jne
jl
cwtl
and
cs
out
mov
aam
pop
imul
mov
les
mov
and
stos
ljmp
test
and
shrb
pop
xor
gs
add
repnz
xor
mov
cld
ret
test
scas
pop
fsubrl
pop
daa
test
and
stos
jge
scas
enter
shrb
test
clc
daa
cwtl
cmp
jns
stos
insl
imulb
hlt
scas
insl
lock
push
and
cs
out
mov
les
push
and
pop
daa
cmpsl
ja
stos
in
sub
push
into
and
mov
sub
ret
and
pop
and
in
and
stos
jge
scas
enter
fsubl
cmp
int3
mov
mov
stos
out
sub
cmc
test
out
shrb
pop
jne
movsl
imul
test
and
clc
stos
out
sub
imul
lret
mov
rcl
test
cs
int
out
out
in
in
loopne
in
in
loopne
in
in
jns
int3
jns
imul
ja
mov
sub
and
imul
xor
sub
stos
in
sub
cmp
insl
and
insl
cs
sub
sub
jne
movsl
outsb
sub
shrb
ret
imul
insl
and
movsl
imul
fsubl
loope
in
loopne
in
in
loopne
jne
ret
gs
sub
and
push
rcl
frstor
fsubl
aam
imul
fstp
stos
ljmp
fsubl
loope
in
loopne
in
in
loopne
stos
les
fdivrl
popa
jno,pn
jnp
jo
insl
cmp
cmp
and
dec
ret
rcr
stos
insl
shlb
sub
in
in
loopne
in
in
cmpsl
into
mov
sub
imul
gs
imul
adc
stos
push
cmp
das
mov
mov
shlb
scas
xor
sub
cmpsl
sub
nop
and
jmp
and
jmp
cs
fsubrs
sub
and
imul
and
cs
sub
and
les
push
jno
insl
es
fcomps
imul
jp
inc
daa
and
lods
call
cmpsl
sub
stos
and
and
sub
xchg
test
and
jge
cmpsl
addr16
stos
shlb
movsl
outsl
rol
mov
pop
fsubrl
pop
xor
shlb
in
in
fisubl
sub
test
pop
daa
out
imul
and
cs
cmp
sub
pop
outsl
shlb
mov
les
sub
and
daa
cmpsl
outsl
int3
stos
out
sub
imul
and
jmp
les
mov
cmp
and
shrl
lret
imul
xor
xor
and
fisubrl
fmul
xchg
shl
fstp
mov
fsubl
cs
es
lds
lcall
jne
loopne
stos
les
sub
and
movsl
imul
addr16
cs
lret
and
sub
outsl
aam
jnp
sbb
push
or
in
and
sub
arpl
test
stos
and
sub
movsl
imul
out
in
in
loopne
in
in
loopne
jne
ret
sub
imul
and
cmpsl
xor
in
fsubrl
sub
and
daa
cmpsl
outsl
aam
out
das
stos
insl
fsubl
and
stos
insl
scas
loop
mov
and
shlb
popa
fisubs
fadd
loopne
fsubs
loope
in
loopne
in
in
loopne
in
jge
shlb
test
fsubrl
sub
cs
fsubrs
cs
stos
shlb
out
and
fsubl
test
jecxz
mov
aam
in
and
stos
gs
jge
and
cmp
imul
gs
sub
and
fsubl
fisubrs
and
test
shrb
stos
jge
cmpsl
shlb
jae
jge
jle
test
rcl
mov
aas
stos
insl
shlb
in
es
imul
fidivrl
imulb
cs
in
lds
pop
and
pop
aas
stos
jge
cmpsl
shlb
es
jnp
jo
insl
fidivrl
sub
sub
in
lds
pop
and
pop
aas
stos
shlb
out
jo
arpl
stos
jge
jle
mov
in
lds
pop
cmp
shlb
mov
fidivrl
std
int3
rcl
mov
fisubrs
aam
cld
es
fsubrl
aam
add
push
and
stos
xchg
and
movsl
imul
and
int3
mov
int3
jl
and
cs
rcr
test
xor
pop
ds
outsl
enter
fcmovu
xlat
lods
call
push
and
cmpsl
ja
jp
imul
jae
jge
jle
add
rcl
leave
jbe
push
cmp
push
xor
arpl
jae
jge
jle
sarb
shrl
scas
pop
xor
pop
cmp
ja
jp
imul
fstp
stos
ljmp
daa
push
cmp
popa
into
jno
jnp
jo
insl
jl
fwait
aad
shll
into
stos
int
out
ss
loop
out
in
in
loopne
in
in
loopne
in
jge
shlb
test
fsubrl
cs
out
fisubrl
and
lds
in
and
aam
jnp
pop
sbb
fsubl
xchg
sub
fsubl
aam
cld
adc
mov
fsubl
sub
out
shrb
and
lds
in
and
cwtl
sub
sub
stos
int
out
out
in
in
loopne
in
in
loopne
in
in
loopne
stos
les
movsl
addr16
imul
and
cs
aam
cs
lret
and
das
movsl
outsl
aam
jnp
sbb
push
pop
test
das
xchg
cmpsl
ja
sub
adc
mov
fsubl
sub
shrb
and
lds
in
and
cwtl
sub
sub
stos
int
out
out
in
in
loopne
in
jge
shlb
jae
imul
sahf
xchg
xchg
movsl
addr16
fstp
inc
les
faddl
cmpsl
addr16
mov
fstp
inc
and
imul
fstp
movsl
arpl
fucom
insl
lret
and
movsl
jns
jb
imul
jno
jnp
jo
insl
mov
jg
ja
jp
imul
rcr
jo
inc
ret
mov
mov
pop
and
push
mov
push
xor
adc
sub
rcll
xlat
pop
aam
lret
add
or
push
fstp
xlat
movsl
imul
fstp
xlat
fwait
push
fstp
xlat
rcrl
rcll
xlat
jnp
jns
int
out
ja
les
and
and
and
lods
push
sub
and
and
and
lods
push
sub
pop
and
and
and
lods
push
sub
pop
sub
xor
daa
nop
adc
and
sub
in
add
add
add
add
sbb
add
sbb
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
or
add
add
pop
mov
add
in
add
add
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
je
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
insb
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
and
and
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
push
inc
