ljmp
js
ljmp
cld
mov
jne
fbld
sbb
scas
mov
dec
cmp
movsl
int3
cmc
out
push
int
push
es
fidivl
aad
lea
call
push
xor
add
stc
inc
dec
test
sub
test
dec
mov
fs
lcall
xor
adc
jp
clc
cmp
popa
bound
jae
or
cld
pop
cmp
cld
xchg
mov
imul
and
xor
shrl
adc
bound
xor
aaa
cwtl
sahf
gs
push
out
mov
rorl
xor
inc
mov
aad
pop
andl
aaa
arpl
mov
insb
add
inc
push
jle
fdivs
arpl
mov
test
jbe
xor
lcall
popa
lret
push
aaa
hlt
dec
loopne
imul
cmpsb
ljmp
xchg
or
iret
cmc
and
ljmp
or
inc
adc
add
and
dec
scas
push
fwait
pop
aam
pop
inc
sub
push
ljmp
push
xchg
movsl
or
mov
arpl
int3
mov
pop
dec
add
push
jno
lret
mov
pop
outsb
jl
mov
xchg
adc
mov
mov
xor
cld
push
mov
sti
pushf
daa
cmp
pushf
and
fcomps
test
dec
pop
dec
addr16
cmp
jmp
in
inc
jge
jecxz
mov
dec
mov
or
adc
stos
ret
mov
adc
inc
push
pop
imul
inc
cwtl
ret
add
testl
xor
in
cmpsb
add
rolb
push
mov
fistpll
hlt
int
pop
jl
orb
inc
mov
xchg
daa
push
inc
mov
inc
cld
and
andl
loop
mov
imul
pushl
fisubs
mov
xchg
jo
push
xchg
dec
icebp
cmpsb
dec
xor
xor
lcall
out
sub
aam
inc
stos
lcall
xor
xchg
xchg
add
xor
decl
sbb
mov
adc
and
mov
or
xor
daa
aad
cmpl
pushl
xchg
xchg
mov
movsb
mov
ret
imul
cmp
mov
jns
decl
push
cmpsb
mov
mov
dec
mov
sarb
sahf
mov
pusha
into
pusha
mov
call
sub
test
inc
frstor
sarb
incl
dec
sbb
leave
cmc
push
and
dec
dec
dec
andl
mov
pushf
xchg
adc
jg
call
and
inc
cmp
stc
cli
loop
stos
lods
mov
into
pop
and
incl
push
dec
dec
out
and
mov
lahf
loope
cli
sbb
mov
cmp
add
cmp
adc
dec
rcrl
push
pop
xchg
adcl
adc
push
popf
cmp
mov
dec
jns
int3
loope
mov
and
out
cmp
ljmp
jo
xchg
decl
add
add
lret
jle
jnp
sub
sbb
mov
pop
fldl
hlt
decl
push
xor
mov
popa
sbbb
xchg
imulb
sub
and
sub
sbb
jns
test
scas
dec
outsl
xor
js
shlb
mov
sti
jbe
fs
pusha
in
stos
push
mov
add
scas
xor
mov
add
in
xor
xor
ds
dec
std
lret
pop
add
jp
dec
out
pop
popa
incl
sub
mov
test
or
es
in
or
or
scas
in
das
idivl
pushl
mov
and
stos
mov
into
repnz
xor
hlt
pop
negl
sub
jmp
pop
outsl
stc
lock
movsl
cld
cmp
pop
cltd
iret
cmp
ljmp
repz
jne
ret
mov
push
sub
sbb
add
shr
mov
or
dec
decb
pop
lret
mov
and
aaa
pusha
fists
scas
cli
jmp
sbb
out
mov
test
jmp
rorb
pop
jb
ficompl
aad
pushl
mov
out
push
xor
faddp
cmpsb
xchg
xchg
in
sub
sub
jns
enter
add
scas
mov
ja
inc
mov
push
sub
pop
rorb
in
in
loopne
std
gs
push
push
or
insl
scas
jbe
xor
ret
fchs
test
cltd
fwait
ljmp
jnp
shrb
ja
into
rol
jo
inc
sti
pop
test
lretw
hlt
inc
jno
push
jl
sub
leave
jae
adc
mov
jne
es
mov
pop
fs
pop
lcall
xchg
sahf
test
lds
xchg
dec
dec
and
dec
add
dec
cmpsl
dec
icebp
cmpsl
loope
decl
xchg
cli
test
fbstp
cld
imul
mov
inc
inc
cmp
jmp
bound
rcrb
int
push
call
lcall
fbstp
sub
xchg
es
push
or
sbbb
lcall
dec
nop
popf
jo
neg
pop
std
leave
xor
mov
mov
leave
in
add
lcall
mov
add
push
jno
inc
lods
pop
push
fcmovnbe
mov
push
mov
pop
mov
or
mov
pushf
lahf
mov
fnstenv
mov
call
test
cmp
test
adc
xchg
stc
outsb
jae,pt
push
cmp
test
lret
and
mov
sbb
jns
pop
and
xor
les
sbb
insb
cmp
js
loop
inc
stc
sar
clc
es
arpl
cmc
into
cmp
sbb
or
mov
jg
add
data16
scas
cmp
mov
dec
and
sbbb
in
inc
pushl
stos
adc
fs
adc
sbb
clc
lret
cmp
incl
cmp
or
push
mov
adc
fstpt
fs
pop
lods
cltd
leave
jg
stos
movsl
sar
incl
mov
test
jb,pt
sub
cmp
lcall
jl
dec
mov
pushl
adc
xchg
lea
outsl
sbb
roll
dec
push
dec
bound
call
push
pop
sub
wrmsr
inc
pop
add
jnp
iret
je
jnp
or
rorb
out
ret
and
mov
cmp
adc
add
pushl
es
add
mov
cwtl
outsb
fstpl
std
mov
scas
je
decl
test
lea
xor
mov
arpl
out
pop
lcall
mov
cs
repnz
xor
sar
fmuls
jecxz
ljmp
or
pushw
mov
rol
rcrl
mov
sahf
rcrb
insl
mov
fiaddl
cmp
mov
lret
insb
cmp
cmp
decl
ret
icebp
xchg
out
jle
mov
data16
sbb
loope
mov
sahf
lret
adc
int
jg
int
arpl
mov
xchg
push
xchg
sub
fcmovnb
sbb
jmp
imul
mov
ret
enter
js
int
ljmp
mov
push
call
sbb
fwait
das
mov
pop
loop
pop
push
jle
cli
jae
cltd
scas
mov
int3
cltd
daa
pop
jnp
adc
mov
call
and
shrb
push
adc
mov
decl
xchg
aam
push
mov
jecxz
addl
mov
lahf
mov
pop
cld
ljmp
pop
xor
add
jno
or
push
mov
fisubl
in
icebp
repnz
in
out
xchg
pusha
mov
test
bnd
mulb
shlb
ja
or
inc
pop
mov
inc
out
insl
mov
inc
pop
cmc
push
enter
mov
pcmpgtb
jbe
sbb
in
test
push
sbb
xor
jno
jle
cld
jg
jmp
or
jbe
mov
xchg
push
insb
dec
fwait
icebp
adc
pop
sbbl
incl
into
mov
sub
push
adc
add
ljmp
mov
mov
push
out
jnp
inc
cmp
inc
jl
dec
dec
icebp
push
cwtl
cmp
jnp
sbb
mov
aad
aad
rcll
andl
xchg
mov
adc
iret
inc
loope
fwait
sbb
in
push
popa
mov
notb
sarl
decl
stc
cmc
movsb
lods
mov
fwait
out
cmp
pop
sbbb
repz
mov
xor
sub
mov
std
fucomip
fsubs
or
mov
sub
jg
sbb
add
mov
test
mov
dec
inc
and
fstps
aas
or
adc
mov
repz
imull
mov
adc
pusha
imul
gs
dec
pop
dec
imul
mov
ljmp
sti
insb
mov
sub
out
push
out
and
into
jle
xchg
xchg
and
add
xchg
cmp
cltd
std
test
je
mov
movsl
adcb
cmc
dec
dec
mov
pop
xor
jns
fstps
dec
decb
cmp
add
mov
add
inc
arpl
ret
jbe
jno
test
pop
pop
xchg
int
mov
mov
xor
push
push
xchg
lret
mov
add
mov
sub
and
jmp
add
gs
pop
mov
add
add
push
dec
inc
xor
scas
xor
inc
add
ret
std
mov
sarb
sbb
ret
inc
add
jp
dec
mov
xor
out
add
lods
add
cmpsl
mov
xchg
sub
out
imul
add
das
rclb
popl
roll
dec
insl
adc
popf
arpl
imul
and
add
xchg
or
mov
int
cmpb
mov
adc
incl
nop
fst
dec
pop
add
sub
lret
mov
outsl
rcrl
mov
dec
aad
push
adc
ja
adc
test
pop
inc
dec
push
dec
sub
xor
lcall
adc
stc
add
mov
jmp
movsl
jo
xor
mov
decl
ss
pop
fldt
push
mov
push
inc
push
lcall
cmc
test
lcall
pop
test
pop
into
jl
mov
movsb
stc
xor
pushf
xchg
push
js
scas
mov
sahf
daa
fdivrl
push
insl
push
shll
mov
mov
out
xor
hlt
lahf
cmpl
ds
decl
inc
fmuls
jne
ret
xor
push
dec
shlb
loopne
mov
or
pushl
sub
je
aad
bswap
sub
inc
push
jbe
roll
xchg
ljmp
xchg
jbe
loopne
or
imull
fs
ds
mov
cmp
dec
push
adc
and
fists
and
inc
sbb
dec
or
and
das
in
xor
cmp
xchg
jl
sbb
sub
and
jne
sbb
outsl
xor
insl
xchg
adc
xor
sub
das
cmp
fildll
cmc
xor
or
add
sub
and
push
and
and
popf
popa
mov
add
xchg
daa
int
mov
setge
xor
call
ljmp
push
ret
inc
enter
loop
inc
pushf
cmp
outsl
push
js
fwait
mov
or
sub
ds
mov
gs
add
adc
adc
nop
inc
add
sub
inc
push
inc
xchg
or
ljmp
push
push
and
fstl
sbb
add
and
add
add
add
sub
mov
stos
incl
add
sub
jmp
xor
xchg
adc
and
push
or
xorb
add
fs
adc
add
stos
call
and
add
nop
adc
push
and
add
sub
mov
sub
in
cmp
add
add
notb
add
dec
push
push
bound
repz
rep
lods
mov
jnp
testb
push
and
cmp
jns
mov
push
js
cwtl
lahf
out
sahf
mov
fsubr
decb
mov
push
ss
pop
je
cmp
repz
lcall
cmp
out
sahf
push
push
nop
cmpsb
mov
lahf
out
int3
loop
add
sbb
cmp
repz
push
insb
jl
repz
mov
cmp
ds
pushw
cs
iret
repz
push
nop
test
sahf
out
cmp
decb
ret
jns
out
ds
data16
out
sahf
out
cmpsb
mov
loop
repz
repnz
sbb
inc
pop
cmp
repz
test
repz
aam
add
sbb
jns
out
inc
push
data16
out
sahf
xchg
iret
sarl
sub
dec
pop
repz
repz
movsb
mov
out
ds
add
push
es
out
sahf
ss
fs
mov
mov
repz
shll
cmp
jb
repz
adcb
mov
enter
cmp
repz
dec
pop
je
movsb
mov
aam
cli
or
into
push
iret
repz
xor
push
repz
mov
sahf
cmpsl
stc
or
sbb
inc
push
out
sahf
out
je
pushf
mov
repz
ret
add
push
es
repz
inc
push
data16
cmp
repz
lcall
dec
sahf
out
sahf
data16
xchg
cmpsb
mov
lahf
out
fdivp
push
int
repz
repz
fs
repz
mov
sahf
cmpsl
stc
cmp
adc
sub
push
jns
out
fs
stos
rcl
sahf
out
out
adc
and
repz
xor
push
repz
mov
sahf
cmpsl
stc
or
sbb
inc
pop
out
sahf
out
test
sahf
fsubr
decb
shll
cmp
repz
pop
insb
jl
repz
rep
mov
aam
out
lcall
push
sahf
out
sahf
push
sarb
or
sbb
repz
repz
push
bound
iret
repz
cmpsb
mov
sahf
out
lcall
jns
out
js
cmpsb
mov
out
cli
or
sbb
iret
repz
inc
push
data16
pushf
cmp
repz
lret
cli
jns
cmpsl
stc
adc
and
dec
pop
out
sahf
out
xchg
jns
aam
cli
or
and
cmp
repz
push
push
iret
repz
out
sahf
out
fcomps
sub
dec
sahf
out
sahf
pop
jbe
pushf
lods
les
or
and
repz
repz
pusha
jo
cwtl
out
cmp
mov
fsubr
add
sahf
out
sahf
sbb
inc
pop
jbe
jns
out
pushf
lods
ret
repz
out
push
cmp
iret
repz
insb
test
cmpsl
stc
cmp
add
adc
inc
jns
out
push
bound
mov
mov
repz
push
cs
pop
jbe
iret
repz
pushf
lods
mov
repz
add
sbb
out
sahf
out
pop
push
jns
cwtl
test
enter
dec
repz
push
fildll
push
repz
repz
mov
iret
shl
testb
es
out
sahf
ss
fs
test
xlat
out
rcl
loopne
loopne
repz
cmp
es
push
iret
repz
data16
movsb
mov
sahf
out
cmp
cld
or
and
jns
out
inc
push
fs
out
sahf
out
movsb
mov
in
repz
cld
adc
sub
jo
iret
repz
nop
test
into
jns
iret
repz
push
in
cs
sahf
out
dec
data16
lahf
out
sahf
cmpsb
mov
fdiv
add
cmp
repz
sub
dec
jb
xchg
test
cmpsl
stc
cmp
aam
cli
adc
and
dec
pop
outsb
jle
jl
out
scas
out
push
out
cmp
rcll
sub
pop
outsb
iret
repz
test
cmpsl
stc
cmp
or
sbb
jns,pt
out
dec
pop
je
mov
mov
jmp
sbb
dec
pop
je
cmp
repz
movsb
mov
out
cli
or
and
dec
out
sahf
out
jb
mov
sahf
rcr
clc
or
and
repz
inc
push
push
repz
imul
in
sub
sahf
out
sahf
push
push
cwtl
mov
xor
out
shl
lock
in
sbb
cmp
repz
pop
jb
iret
repz
xchg
stos
rcl
clc
sahf
out
ds
and
dec
pop
jns
out
push
repz
out
ljmp
cmp
inc
pop
push
nop
mov
mov
lock
out
adc
inc
pop
jo
jns
out
cwtl
test
ror
sarl
clc
push
icebp
es
cmp
repz
je
mov
repz
push
repnz
repz
jl
repz
repz
out
sahf
out
repz
dec
pop
sahf
out
sahf
push
int3
out
out
loop
or
pushw
xor
push
data16
cmpsb
jl
out
mov
fsubrp
add
repz
rcrl
inc
push
fs
repz
jp
stos
mov
stc
cmp
or
push
cs
jns
out
push
data16
movsb
repz
out
aam
cld
adc
iret
repz
and
dec
pusha
jbe
cmp
repz
lods
mov
out
clc
push
clc
es
out
sahf
out
jb
xchg
mov
mov
shl
repnz
cmp
repz
cs
data16
repz
cmpsb
mov
cmpsl
stc
cmp
fsubr
cld
or
and
dec
pop
push
out
cmpsb
mov
fdivp
repz
repz
adc
cmp
repz
pop
push
mov
cmp
loopne
adc
and
out
xor
pusha
jo
jns
out
cwtl
test
ror
sarl
lock
push
cs
repz
fs
movsb
repz
repz
aam
cli
out
sahf
out
sbb
dec
pop
sahf
out
sahf
push
into
cmp
out
in
add
sbb
repz
repz
pop
je
iret
repz
xchg
movsb
mov
aam
repz
cmp
sub
iret
repz
outsb
test
repz
cli
adc
sub
jns
out
push
fs
pushf
aad
sahf
out
enter
cmp
repz
push
es
push
repz
rep
jle
lods
mov
aam
hlt
or
and
inc
push
data16
jns
out
mov
repz
repz
cs
push
iret
repz
outsb
jle
sahf
mov
repz
repz
lock
repz
cmp
jo
xchg
cmp
repz
mov
out
jns
cmpsl
stc
add
adc
cmp
jns
out
jo
nop
mov
mov
pop
adc
repz
cmp
jbe
cmp
xrelease
imul
or
cs
out
sahf
inc
push
data16
mov
mov
fsubr
or
or
and
push
pusha
jo
sahf
out
adcb
lahf
out
hlt
add
adc
sahf
cmpsl
xor
inc
push
into
push
je
jns
out
lcall
int
cli
adc
sub
dec
iret
repz
pop
je
mov
repz
lock
sub
out
inc
push
data16
out
sahf
out
scas
mov
xor
testb
iret
repz
sbbb
repz
cld
or
cmp
repz
push
push
xchg
repz
repz
out
sahf
out
nopl
dec
fs
out
sahf
je
pushf
lods
aam
dec
repz
add
adc
xor
cmp
repz
push
bound
iret
repz
cmpsb
mov
out
repz
ds
adc
push
ss
pop
iret
repz
je
movsb
mov
aam
out
cmp
hlt
or
and
jns
out
dec
pop
jo
cwtl
out
sahf
out
fsubrp
dec
repz
push
adc
cmp
pop
insb
cmp
repz
xchg
movsb
mov
jns
iret
repz
add
adc
out
sahf
out
inc
pop
jb
fsubp
jns
cwtl
scas
mov
adc
push
and
dec
pop
sahf
out
sahf
push
nop
test
into
cmp
out
in
or
sbb
repz
repz
bound
iret
repz
cwtl
test
aam
cld
sahf
out
adc
sub
dec
pop
jns
out
jbe
cmpsb
mov
out
in
add
sbb
iret
repz
inc
push
pusha
js
mov
mov
fsubr
add
iret
repz
into
push
sub
bound
iret
repz
test
aam
jns
out
hlt
or
and
dec
out
sahf
out
push
out
sahf
mov
fdiv
or
and
repz
dec
pop
insb
xor
iret
repz
mov
imul
sbb
inc
sahf
out
sahf
pop
jo
nop
mov
jns
in
add
sbb
cmp
repz
outsb
xchg
repz
xchg
cmpsb
mov
cmp
or
pushw
sub
dec
iret
repz
bound
test
into
sahf
out
cmp
hlt
add
adc
jns
out
cmp
jbe
out
sahf
out
mov
iret
repz
or
and
inc
push
pusha
cmp
repz
adcb
repz
fdivp
push
and
out
sahf
out
ss
push
outsb
sahf
out
sahf
test
dec
repz
adc
sub
repz
repz
cmpsl
stc
cmp
into
out
or
and
dec
pusha
out
jle
sahf
out
fimuls
shlb
out
loopne
cld
or
repz
repz
push
pop
iret
repz
insb
jp
xchg
movsb
mov
shl
ror
lahf
sahf
out
fcomip
push
push
and
inc
jns
out
push
data16
xchg
inc
add
bound
push
push
test
add
or
adc
and
inc
mov
dec
add
xor
iret
sub
decl
pushf
jne
in
fbstp
cmp
push
cltd
adc
stos
jge
filds
fwait
mov
jg
nop
fistl
insb
in
mov
lcall
stos
jae
enter
push
bound
push
push
mov
test
lcall
cld
jecxz
sti
or
jno
ljmp
stos
dec
enter
incl
mov
dec
or
outsb
mov
mov
ret
xchg
add
adc
das
mov
call
in
fmulp
fisubs
pop
jmp
pop
notl
jge
ljmp
mov
mov
incl
ljmp
insb
xor
fadd
aam
int3
push
adc
mov
mov
fdivrl
decl
out
frstor
adc
inc
js
add
imulb
aad
int3
sbb
mov
testl
cmpb
mov
scas
or
push
inc
pushf
add
push
sarl
mov
jl
rcrb
imul
or
mov
pop
push
sub
fwait
call
scas
lahf
sub
push
mov
or
dec
jecxz
daa
mov
pop
gs
cmpsb
lcall
lock
inc
bswap
push
shll
pop
mov
mov
add
adc
incl
fldenv
outsb
mov
adc
mov
cld
lcall
push
imul
dec
enter
shr
ret
mov
mov
xchg
mov
adc
popf
clc
cmp
sbb
into
pop
decl
push
mov
movsb
mov
push
and
inc
mov
insb
test
movsl
dec
aaa
mov
cmc
decl
aad
jecxz
pop
inc
in
stc
cmp
test
int3
cmpsl
rcrb
jl
pop
push
cmp
gs
incl
jge
or
mov
pusha
imul
es
je
data16
stos
mov
popa
test
call
dec
pushf
or
fimull
lock
mov
lods
insb
jne
arpl
dec
lods
xor
add
test
enter
out
es
pushl
lock
je
or
stos
repnz
jmp
or
mov
repz
sub
jmp
mov
xor
aam
or
imul
sub
test
cld
mov
rcll
sub
in
jnp
in
inc
mov
add
mov
sbb
cmp
sub
mov
xchg
add
andb
mov
xchg
incl
pop
add
adc
and
pop
push
shlb
repz
call
pop
call
push
xor
mov
and
inc
and
xor
ds
cmp
imul
mov
lcall
in
jnp
jmp
inc
into
in
test
mov
jge
mov
cltd
add
sub
aas
fisttpl
jge
jnp
pop
aad
gs
pop
push
arpl
xchg
and
and
push
mov
dec
adc
jbe
push
rorb
ds
test
fildll
popa
push
shrl
incl
jg
dec
fbstp
jo
push
mov
scas
popf
std
xor
adc
push
int
fidivl
inc
push
cld
call
xlat
inc
jmp
inc
lret
ja
dec
test
aam
rorb
shlb
dec
lret
imul
lret
stos
sti
or
cmp
js
cld
idivb
inc
imul
push
rorl
jo
stos
fidivrs
loopne
dec
cmpsl
jle
xor
mov
jns
jmp
neg
and
adc
popf
ret
movsl
fbstp
add
sub
and
scas
or
mov
mov
xchg
in
filds
lds
mov
incb
mov
xchg
in
bound
incl
fisttps
rclb
loop
aaa
ljmp
sbb
pop
rcr
inc
fldt
ret
test
incb
mov
inc
sarl
je
sub
mov
aaa
movsl
jle
xorl
mov
ss
lds
cmpsb
ret
dec
jl
in
call
mov
dec
lret
jbe
ret
jae
popf
loopne
jmp
mov
mov
jo
ret
mov
add
lret
filds
or
fidivrl
fldl
adc
rorb
loope
mov
fnstenv
pop
jns
ja
push
loop
insb
xor
ss
in
push
rcr
sti
lock
jecxz
inc
out
test
xor
pop
sbbb
mov
dec
fcmovnu
fmuls
ret
ljmp
pop
out
mov
pop
test
test
int
cld
repz
shl
int
dec
ljmp
xchg
xor
popf
mov
mov
sar
in
fsubrs
sbb
pop
fcmovnb
mov
movsl
into
push
cmp
fldt
nop
mov
mov
and
jo
fstpt
add
sbb
push
je
ss
ds
mov
stc
ja
js,pt
dec
jns
pop
inc
jp
jo
push
ret
jl
lret
push
and
or
aam
dec
repz
clc
lret
jbe
fistpll
mov
or
mov
lahf
or
ds
ret
ss
negb
mov
and
aaa
stos
mov
push
inc
into
mov
or
sti
out
dec
xchg
ret
loopne
jno
outsl
mov
mov
mov
and
ret
xor
in
and
dec
mov
mov
push
das
in
add
push
push
repz
cmp
outsb
push
divb
out
or
inc
mov
movsb
mov
xorb
jns
cld
in
std
ljmp
data16
insb
ds
fdivr
jo
sbb
mov
sarl
lods
es
sub
push
aaa
adc
mov
cmp
jmp
mov
shl
aaa
fxrstor
mov
into
jo
aaa
mov
decl
into
je
loopne
and
jg
out
inc
pop
xor
jl
xchg
cmp
cmp
imul
jg
imul
xor
mov
xor
ret
jmp
pushl
push
dec
fmul
outsl
cmp
dec
mov
cmp
push
xor
outsl
fisttps
mov
ja
jmp
pop
mov
jle
loopne
add
in
mov
cmp
dec
aam
sub
filds
lret
cmpsl
lret
mov
xchg
jne
mov
push
and
push
incl
push
movsb
cmp
dec
nop
loop
mov
sbb
jle
xor
add
ret
outsb
lcall
stos
sbb
mov
jno
out
or
or
lock
mov
lods
mov
sahf
aaa
inc
stos
stos
xor
jg
push
dec
dec
cmp
push
add
and
cmp
ss
jle
std
ffreep
dec
xor
mov
sub
rol
xor
jbe
xor
lock
scas
std
outsb
repz
shr
jg
stos
loopne
repz
mov
aas
out
mov
in
pop
cld
jo
push
xchg
add
ss
mov
push
mov
icebp
inc
cld
mov
loope
loop
lock
outsl
repz
add
jnp
jge
pop
mov
push
mov
ljmp
pushl
push
mov
and
mov
jp
pop
mov
aaa
or
pop
adcb
mov
scas
iret
and
jbe
aam
out
rcll
mov
data16
jmp
cmp
push
mov
xlat
xor
dec
mov
xor
call
xor
lret
es
dec
xor
push
inc
xor
decb
lods
push
aaa
jecxz
cmp
ret
dec
inc
lea
add
push
and
aaa
sti
jle
cli
sbb
push
outsb
aam
dec
xchg
into
inc
dec
or
push
incl
loop
pop
xchg
xor
inc
dec
loopne
jmp
mov
aam
sti
inc
jle
out
jg
mov
jno
add
push
mov
mov
jns
add
lods
mov
sti
add
jle
pushl
std
jb
jecxz
push
scas
xchg
xchg
pop
andl
call
adc
mov
and
enter
cmp
or
fs
push
pop
jg
decl
cs
lcall
cmpsb
pop
scas
push
jle
mov
fisubrl
push
insb
ljmp
imul
dec
push
push
ss
jae
push
imul
xor
popa
cmp
push
inc
dec
jp
addr16
push
inc
outsl
dec
push
jne
dec
push
dec
outsb
je
inc
jb
popa
push
push
push
dec
push
push
fs
decl
ja
ja
inc
jb
push
jae
xor
xor
arpl
push
push
bound
dec
decl
jp
xor
js
bound
inc
dec
js
popa
push
and
push
arpl
xor
pushl
outsb
push
outsb
cmp
pop
aaa
arpl
inc
push
pop
imul
inc
inc
push
popa
in
jg
pushl
xor
xor
cmp
outsl
orb
push
xchg
inc
arpl
je
push
pushl
xor
xor
addr16
popa
dec
data16
xor
dec
inc
popa
push
push
insl
pop
pop
insb
dec
xor
decl
addr16
js
jb
pop
jae
dec
fs
push
push
xor
dec
je
push
arpl
js
popa
pop
dec
push
xor
jae
dec
insb
insl
insw
fs
dec
inc
pop
lock
mov
xor
js
dec
jne
jae
jp
push
scas
xor
outsb
inc
std
add
jne
dec
inc
dec
push
inc
push
push
jbe
je
jne
pop
dec
jb
push
push
xor
sti
mov
xor
xor
aaa
dec
pop
inc
arpl
jae
mov
pop
jne
jae
imul
push
bound
xor
dec
jns
inc
outsb
bound
push
push
dec
inc
inc
cmp
inc
insb
cmp
bound
cmp
dec
jp
dec
insl
dec
dec
sub
mov
push
inc
addr16
pop
inc
jne
fs
jno
imul
mov
addl
cmp
xchg
pop
and
mov
or
cli
add
enter
xchg
xchg
pop
push
xor
xor
jnp
dec
lds
clc
mov
sbb
or
in
sbb
add
lock
int3
enter
xlat
loopne
lock
stc
pop
mov
adc
enter
and
fcoml
shrl
push
cmp
sarb
jns
iret
test
mov
pop
fisubl
jbe
and
jbe
sahf
in
sti
testb
outsb
sbb
jbe
push
or
push
mov
adc
data16
push
and
adc
adc
mov
sub
sbb
jnp
mov
jecxz
lahf
xor
insb
pop
sti
sahf
inc
mov
lods
aad
rorb
jnp
cmpsl
fstps
inc
xor
mov
mov
jbe
xchg
dec
dec
mov
push
mov
jo
negl
cmpsb
xchg
push
xchg
adc
fcos
outsl
les
and
mov
je
jp
daa
out
dec
bnd
fnstsw
mov
push
popf
inc
pop
pop
ds
rolb
fadd
shl
sti
jbe
adc
sbb
adc
jl
ss
in
or
lds
inc
in
or
push
sbb
adc
adc
lock
cmpsl
dec
jo
jmp
or
xchg
jbe
clc
inc
push
in
pop
xchg
loop
xlat
inc
aas
inc
adc
test
jge
clc
ss
pop
jbe
pop
addr16
negb
outsb
push
cmp
or
outsl
and
inc
adc
es
jb
shll
into
push
pop
xor
cmp
aas
adc
fisubl
clc
scas
leave
add
mov
data16
xchg
jo
out
icebp
roll
fldcw
iret
mov
nop
mov
push
jo
mov
jmp
add
std
test
add
sti
or
pop
sti
fidivrl
das
jge
insb
les
out
mov
out
dec
dec
pop
call
out
into
loope
je
fisttpl
arpl
out
pop
inc
icebp
dec
push
scas
ds
out
xor
inc
mov
lds
in
les
push
shrl
jne
add
or
out
push
pop
imul
gs
xor
cs
insb
pop
inc
sbb
fcmovu
idiv
gs
jb
je
arpl
push
arpl
outsl
outsb
cs
gs
jbe
jbe
mov
jb
dec
outsb
and
mov
mov
push
imul
gs
jne
inc
outsl
arpl
or
pop
xor
xor
inc
outsl
jne
pop
push
out
fbstp
push
outsw
jb
popa
outsb
arpl
sbb
ss
jnp
push
adc
sbb
jb
cmp
ja
fimuls
popa
fs
fs
push
mov
fs
mov
add
ds
adc
jnp
das
dec
jmp
loop
flds
push
outsl
dec
jne
mov
jns
sub
ss
test
sub
sub
movsb
mov
pop
and
pop
arpl
sbb
jb
add
fimuls
inc
js
push
dec
cmc
or
fldenv
push
je
divb
rolb
mov
into
and
cmp
fs
jae
imul
hlt
mulb
popa
gs
push
or
inc
imul
dec
popa
insl
sub
pusha
xor
inc
inc
mov
mov
pop
xchg
xor
sbb
imul
dec
sbb
fs
jb
scas
cmp
and
jae
mov
lds
cmp
push
idiv
cmp
cmp
push
jo
fxch
icebp
in
xor
out
fwait
push
outsl
xchg
xlat
jle
cmpsb
and
dec
data16
push
je
xorb
cmp
das
popa
imul
loope
pop
adc
test
insl
aam
push
adc
push
jns
inc
in
and
shl
xchg
xchg
pop
lcall
dec
gs
pop
sub
fs
int3
mov
jg
jae
fsubl
gs
outsl
mov
push
insb
outsl
testb
je
inc
jbe
jo
jae
mov
adc
jg
add
es
fnstenv
and
adc
sub
jbe
add
popa
jne
jg
jns
sbb
sahf
sub
icebp
pop
pop
aas
and
cltd
mov
daa
lret
push
cltd
sbb
or
inc
sub
aad
out
adc
inc
adc
push
lcall
push
insb
push
dec
bound
repz
icebp
push
push
jg
jo
cmpsb
mov
xchg
stos
sub
sbb
scas
mov
jbe
xlat
jbe
pop
sbb
cmp
outsb
mov
repz
adc
pop
dec
push
cmp
mov
cmp
xchg
arpl
test
dec
fwait
xchg
inc
fnstsw
repz
pop
xchg
outsl
sti
or
popl
insb
push
mov
mov
push
nop
stos
xor
popa
sub
daa
inc
rcl
adc
pushf
xchg
sub
sub
daa
push
or
pushw
notl
inc
sbb
ret
add
stos
xchg
frstor
add
cmpsb
lods
loopne
ret
xor
fdivl
jne
inc
jo
loope
cmpsb
xor
adc
sbb
push
push
clc
dec
dec
jmp
add
push
sarb
mov
dec
add
mov
int3
sbb
or
rolb
or
lds
mov
movsb
in
jnp
int3
or
mov
fildl
dec
push
xor
inc
imul
scas
inc
insb
js
stos
rcrb
enter
movsl
jecxz
push
sub
test
idivl
fcomps
jo
addl
pop
and
jnp
cmpsb
mov
ret
gs
js
add
jecxz
jo
addr16
mov
xor
jecxz
outsl
pop
inc
or
cmpsl
push
xchg
adc
movsb
pusha
jnp
daa
sub
rcll
pushf
je
incl
jne
push
xor
push
push
shr
dec
in
or
push
in
pop
mov
fdivl
sbb
fcomps
inc
add
pop
inc
lret
and
call
mov
add
sub
mov
and
incl
mov
addl
test
stos
decl
and
add
nop
inc
add
add
subl
inc
add
pusha
adc
pop
inc
adc
adc
enter
nop
inc
add
inc
push
add
add
adc
nop
adc
push
and
add
subl
inc
add
push
and
push
addl
or
adc
nop
inc
add
mov
and
add
nop
sub
or
inc
addl
orb
adc
adc
nop
inc
add
add
subl
add
test
mov
add
adc
pop
ret
add
enter
nop
inc
add
add
add
orb
add
adc
mov
sub
add
add
add
push
and
inc
push
subl
inc
add
adc
adc
xchg
inc
inc
xchg
sub
sbb
add
orl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
jg
and
mov
add
aas
incl
incl
xor
testl
out
aaa
scas
inc
mov
add
jbe
out
dec
add
lcall
add
add
add
sbbb
dec
xorl
addl
adc
add
add
add
add
add
andb
add
mov
std
fistpl
std
sub
adcl
mov
roll
cmp
pop
test
rorl
cwtl
js
adcb
xchg
sbb
je
in
mov
add
dec
push
shrb
xor
sub
pusha
shll
je
rorb
iret
dec
rclb
cmp
rolb
rorb
lds
mov
insb
nop
arpl
adc
rolb
sub
rorl
fs
or
or
add
sbb
and
adc
mov
or
in
imul
pusha
add
xor
aaa
mov
push
test
fisubl
or
push
adc
pop
add
rcrl
mov
popf
mov
jge
mov
sbb
and
pop
aaa
lods
jns
fildll
mov
add
xchg
rep
insl
incl
inc
or
and
add
outsl
fstpt
in
cmp
roll
jge
fisubrl
dec
sbb
imul
movsl
add
pushl
dec
mov
or
popa
pusha
push
loopne
popa
or
push
lretw
cmp
jmp
faddp
in
xchg
sbb
insl
push
xlat
sub
xor
stos
pusha
sbb
scas
lahf
inc
cmpsl
loopne
out
jnp
stos
pop
lahf
das
nop
pop
xor
std
push
in
fildl
dec
add
stos
sarb
imul
out
sbb
push
dec
jmp
xlat
pop
mov
fwait
sbb
inc
loopne
fidivrs
cli
mov
stos
jnp
ret
rcl
xchg
popa
stos
mov
jecxz
int
ss
out
incl
push
pop
cs
add
daa
mov
lcall
lock
mov
sbb
inc
je
loopne
gs
lcall
mov
or
cmpsb
test
dec
add
mov
xchg
cmp
iret
fucomp
stc
or
gs
xchg
mov
inc
push
movsb
mov
out
xor
fistps
push
hlt
adc
inc
jne
jp
or
outsl
in
mov
notl
testb
andb
xor
imul
stos
loopne
mov
icebp
loopne
cmp
and
addr16
aas
cwtl
loopne
shlb
stos
adc
aas
mov
cmp
loope
cmpsl
in
rcl
in
arpl
bnd
lea
mov
imul
cmp
mov
popa
mov
adc
lcall
aad
ret
add
popf
shll
imul
mov
and
cmp
dec
rcl
mov
out
add
adc
jle
inc
mov
and
sub
sub
aas
lods
mov
stc
push
jo
or
xor
stos
lock
sbb
jmp
xor
xor
sahf
inc
push
add
dec
sbbl
mov
jo
push
sub
jae
dec
mov
xor
xchg
mov
or
add
xchg
push
mov
mov
lock
dec
jge
adc
push
xchg
xor
imul
scas
jno
int
and
push
sti
add
adc
sub
imul
lahf
xor
push
pop
inc
fldt
sbb
roll
outsl
push
test
mov
hlt
es
jmp
jo
mov
xor
xor
xor
lods
es
mov
and
sub
stos
dec
xor
xchg
mov
pop
mov
push
nop
lock
jnp
clc
add
jno
pop
mov
dec
jno
pushf
xor
sbb
daa
xor
sub
pushl
loopne
cmp
cli
popa
push
mov
aas
jo
stos
cld
out
movsl
loopne
mov
sub
jle
xor
lods
jecxz
aaa
inc
jnp
adc
add
and
cld
bound
push
cld
scas
vmovsd
jbe
lock
pop
loop
pop
cmp
dec
inc
inc
negb
das
mov
testl
lret
pop
in
add
push
sbb
sbb
xchg
pop
or
aaa
insb
dec
inc
xchg
dec
jbe
push
jle
mov
adc
outsb
fadds
cmp
cmp
aam
cmp
shrl
decl
jno
add
or
jne
cmp
daa
mov
inc
pop
call
incb
inc
sub
ja
mov
adc
ljmp
pop
add
xchg
imul
xchg
gs
lea
add
mov
fbstp
sti
inc
and
imul
je
nop
cld
decl
xor
mov
inc
jb
stc
inc
addb
popf
in
sbb
movsb
push
xchg
js
inc
test
mov
add
xor
or
sub
cmp
notb
dec
push
push
add
orb
push
pusha
push
es
sti
clc
js
jo
add
or
bound
pop
es
sub
fildl
add
shlb
add
add
mov
add
and
mov
filds
mov
adc
mov
xor
pop
je
push
sbb
add
incb
std
dec
add
in
fists
push
notb
inc
jl
xor
lret
pop
sbb
ret
in
or
lret
or
std
jg
fwait
sbb
add
enter
movsb
out
pop
lock
pusha
lock
incl
mov
adc
mov
or
sbb
outsb
lods
mov
cmpsb
pop
dec
sbb
nop
jle
pop
cmp
fimull
out
pop
adc
push
mov
sbb
sbb
lock
imul
add
or
sbb
push
sbb
mov
sbb
test
push
in
lods
mov
or
xor
add
add
mov
pop
push
fs
cmp
lock
sbb
pop
shrl
pop
or
mov
data16
in
fwait
clc
jo
push
or
adc
pop
mov
xor
mov
xor
sbb
int3
bound
movsb
pop
rcrl
lock
data16
xor
mov
imul
xor
cmp
aam
rcrl
adc
sub
stos
mov
add
push
cmpsb
fsts
xor
into
stos
xor
lcall
data16
mov
sarl
in
or
pop
dec
repz
rcrl
pushf
dec
arpl
jle
fsubrl
repz
outsb
cs
imul
bound
mov
pop
jae
push
push
xor
ret
icebp
or
push
and
dec
and
outsb
fisttpl
inc
ss
or
pop
sbb
xchg
lock
int
pusha
jns
cmp
push
mov
pusha
push
mov
or
or
sbb
loope
cld
mov
lcall
xor
gs
stos
adc
pop
mov
sub
scas
xor
cmp
add
pop
add
jbe
fimull
cli
pop
xor
adc
movnti
inc
dec
lock
jae
jo
or
jb
lods
mov
int
sbbl
or
pop
lods
repnz
xchg
inc
jnp
push
adc
imul
or
jo
or
inc
pop
testb
mov
insl
pop
clc
hlt
ja
mov
push
addr16
mov
add
push
push
xchg
inc
push
out
push
adc
mov
aaa
sti
cwtl
sbb
pop
aas
add
mov
push
push
fdivrs
repnz
push
das
push
or
nopl
fisubs
push
push
jo
fcmovnbe
jmp
pop
or
pusha
and
jns
cmp
ds
loope
shl
mov
xchg
gs
js
iret
jmp
jle
sub
cmp
repz
mov
iret
jnp
iret
add
ja
sub
repz
leave
or
iret
jmp
test
inc
jmp
scas
pop
push
sbb
xchg
push
jl
repz
sahf
cmp
sahf
pop
insb
sub
cmp
repz
mov
repz
repz
adc
cmp
xor
or
movsl
cmp
repz
addb
repz
repz
sbb
cmp
jle
sub
or
jns
out
fsin
xor
out
sahf
ss
lods
jns
out
push
xchg
or
jnp
out
push
popf
arpl
jle
jns
sub
fldl
ljmp
mov
push
mov
push
out
loop
adc
jns
xchg
ret
popa
and
sahf
addl
sahf
xchg
xchg
jns
shrl
jns
out
mov
mov
pop
popf
xchg
repz
dec
dec
iret
leave
repz
gs
stos
add
leave
repz
pop
sbb
out
cmp
insl
push
sub
xchg
out
decb
addr16
repz
pop
inc
jae
movl
or
cmp
iret
inc
out
sbb
jnp
xlat
imul
mov
mov
dec
idivl
jns
push
pop
ja
fnstsw
push
daa
scas
push
filds
incb
pop
pop
push
jge
leave
lahf
jg
aas
filds
ljmp
jle
sahf
call
push
out
add
out
ret
mov
push
add
add
fisubrs
mov
push
add
add
in
add
jns
jno
jmp
jle
andl
push
imul
xor
enter
or
movsb
inc
xor
imul
mov
and
hlt
add
out
repnz
xchg
jo
incl
imul
push
out
inc
push
ljmp
pop
jo
push
lret
jmp
int
fisttpl
pop
mov
aad
pushl
rclb
inc
jl
jle
sub
mov
sbb
mov
mov
jmp
inc
mov
sbb
mov
hlt
cmp
insb
adc
test
fs
std
jg
call
leave
mov
insb
push
arpl
pusha
aaa
and
mov
decl
pusha
aad
jno
mov
mov
test
movsl
add
cwtl
mov
incl
leave
mov
lods
sbb
fdivs
mov
xor
shrl
out
lcall
jmp
hlt
mov
fadd
mov
xchg
mov
mov
incl
sub
mov
fucomi
or
out
dec
push
rol
data16
inc
fdivl
jno
add
rcrb
jbe
mov
loopne
mov
pop
in
lahf
int3
aam
call
pop
loopne
js
pushf
test
xchg
out
push
loope
or
insl
or
pushl
pop
arpl
or
imul
gs
adc
add
ljmp
sarb
cwtl
test
pmaddwd
fnstenv
adc
mov
jmp
sbb
ficoml
lcall
dec
xor
cmp
jmp
mov
xchg
fdivrs
add
rcll
fldcw
mov
ljmp
mov
add
mov
jl
ffree
jno
push
push
inc
add
out
adc
mov
fidivl
outsl
and
aam
mov
icebp
stc
ficomps
leave
fldcw
fstpl
pushl
call
or
mov
rcr
mov
lcall
incl
shlb
ljmp
fildl
push
fdivl
or
jnp
fs
shrl
aas
sar
push
pop
push
hlt
iret
push
in
and
scas
add
dec
sahf
pop
jge
xchg
jg
sub
add
add
push
imul
ss
sbb
push
imul
ljmp
sbb
pop
sub
mov
dec
frstor
fistpll
mov
mov
jmp
mov
shll
lods
repnz
addr16
cmpsb
and
mov
mov
mov
decl
sub
scas
or
ss
jp
inc
cmp
pusha
fildll
mov
xchg
incl
mov
lret
in
mov
outsl
and
push
or
cld
inc
or
shlb
add
xor
mov
mov
pop
mov
sti
push
pop
pop
call
ret
shlb
fldcw
scas
ficomps
ret
fptan
arpl
arpl
insl
add
or
addr16
fistpll
jl
jge
mov
push
sub
or
mov
call
dec
out
fdivrl
fisttpl
sub
roll
pop
mov
push
xor
mov
andl
mov
sbb
mov
cmp
mov
std
pop
sub
clc
sub
imul
push
xchg
or
stos
mov
xor
cmp
push
pusha
shlb
ja
ds
shrl
and
fstps
cmp
aaa
lods
scas
mov
fiadds
mov
jecxz
jg
mov
lret
mov
pop
mov
sarb
push
ficoms
jmp
and
jp
mov
dec
popa
std
sbb
imul
sub
mov
or
in
add
fucomip
out
add
sbb
xor
sub
call
mov
hlt
ja
jns
pop
push
cmp
fxch
mov
ret
call
hlt
ljmp
mov
mov
mov
xor
xchg
and
push
sub
mov
out
popa
stos
xlat
scas
cs
mov
sub
addl
mov
fwait
xor
mov
insb
insb
jmp
aas
inc
ljmp
pop
and
xchg
sbb
lahf
mov
inc
mov
sahf
ja
mov
sbb
sar
push
call
lcall
pop
adc
inc
inc
xlat
int3
imul
jo
fdivr
jg
cmp
pop
sub
rorl
pop
or
ss
fisttps
pop
mov
iret
gs
pushl
ljmp
mov
lret
mov
lahf
pop
inc
lea
cld
inc
out
mov
add
jae
dec
call
inc
ret
sub
pop
cli
dec
jns
mov
sub
adc
sbb
mov
lea
mov
jmp
and
xchg
or
xchg
lea
testb
pop
mov
xlat
inc
je
cli
outsb
xor
pop
mov
mov
push
cwtl
xlat
fsubrp
test
loope
insb
lret
cli
cmc
mov
jmp
loop
jns
and
pop
cmpsl
adc
push
out
adc
and
cmp
inc
and
inc
out
fimull
lret
push
fwait
cmp
dec
pop
scas
xchg
add
aaa
std
fmulp
cmpsl
xor
loope
lods
adc
adc
adcl
xchg
mov
xchg
dec
adc
inc
jle
xchg
ja
loop
jns
das
dec
dec
and
mov
or
or
decl
lea
fisubs
into
out
jle
add
out
inc
ret
adcl
int3
add
incl
xchg
cmpsl
test
cwtl
cmpl
test
mov
ja
scas
adc
lcall
insb
hlt
inc
xor
fldcw
push
ret
adc
std
and
jo,pt
sarl
fdivrs
call
cmp
sbb
mov
ja
fldcw
dec
sub
adc
arpl
add
in
add
mov
cs
mov
jmp
cmpsl
ret
xchg
fdecstp
push
mov
sbb
xchg
fidivs
pushf
aad
test
decl
jo
nop
sbb
shrl
inc
loope
fisubs
pop
lds
push
call
frstor
dec
sbb
mov
pop
ret
cwtl
xchg
test
fldenv
lahf
fdivrp
incl
test
cltd
rorl
mov
cmp
push
adc
sub
decl
jo
or
imul
inc
jp
mov
arpl
out
shlb
mov
stc
pushl
xlat
loopne
adc
mov
jo
popf
jbe
mov
add
insb
cmp
cmp
adc
jp
push
sub
test
jns
jle
bound
cmp
cmpsl
pop
icebp
decl
mov
xchg
adc
in
xor
bound
daa
push
add
dec
loope
test
jle
push
push
xlat
jnp
sbb
in
mov
xor
call
push
mov
call
repz
push
ret
xchg
xchg
dec
insb
shlb
adc
push
pop
or
xchg
sar
call
or
gs
adc
adc
cltd
sbb
mov
pop
mov
in
fsubr
out
inc
loope
adc
shlb
xorl
shlb
adc
out
test
pop
dec
imul
pop
jle
enter
mov
dec
testl
or
int3
int3
aas
adc
and
dec
push
add
jg
call
mov
mov
ret
dec
jl
add
push
dec
add
decl
jo
rorl
sub
push
or
stc
sbb
lods
xchg
fmuls
cmc
sub
pop
or
outsl
cli
sbb
leave
in
adc
push
push
or
sbb
sbb
mov
pushl
imul
add
adc
mov
outsb
dec
jae
jmp
cmp
fdivl
adc
decl
jp
pop
inc
dec
cmp
sub
cmp
leave
cmp
or
ret
out
inc
aas
hlt
test
cmp
cmp
push
add
nop
jge
aaa
leave
ret
fidivl
jnp
push
xor
xor
imul
and
adc
outsl
in
and
mov
xor
daa
ss
sub
and
incl
out
ljmp
sub
fidivrs
sub
sbb
cmc
incl
jb
jbe
sub
enter
mov
jo
out
pushl
pop
push
jae
xor
jb
and
push
jbe
icebp
pop
je
fwait
aad
xchg
mov
mov
mov
jmp
iret
jl
je
jns
push
inc
js
mov
jnp
cs
fcomip
mov
insl
and
cmp
nop
es
xchg
push
push
xor
cmp
imul
adc
sub
shr
sub
cmpsb
gs
fs
add
data16
cli
add
imul
sbb
outsb
xchg
dec
jg
incl
arpl
dec
xor
sbb
insl
mov
dec
pop
fstpl
push
lock
inc
or
incl
and
inc
mov
pop
cmovo
out
inc
loop
mov
push
xor
mov
call
mov
jae
clc
push
inc
stos
cmp
adc
push
sub
push
pop
cmp
pop
and
pop
jns
data16
lcall
xchg
cld
sti
sub
outsl
pop
xchg
das
lods
pop
jg
xor
loopne
iret
mov
jmp
movsl
jae
mov
fsin
out
addr16
in
dec
es
lock
decl
movsb
sahf
mov
in
sbb
das
call
jne
stos
jmp
pop
imul
mov
std
cmp
sar
popa
insb
xchg
push
push
push
call
adc
cli
lods
fdivr
mov
scas
lcall
jmp
ret
cmp
inc
icebp
imul
pop
sub
cmc
add
decl
lahf
pop
js
test
mov
fcmovb
jecxz
fildl
jno
je
mov
sub
dec
pushl
fsubl
or
xlat
adc
dec
fsubr
aam
mov
aad
movsb
ror
into
mov
shll
jmp
out
pop
pushf
les
sbb
xor
ret
xchg
ret
pop
adc
ljmp
adc
push
scas
dec
lret
pusha
lds
enter
leave
mov
inc
int3
mov
rol
iret
ljmp
into
mov
insl
nop
roll
xchg
out
jmp
xchg
push
push
fs
incl
ljmp
pop
mov
sahf
imul
cli
popf
fldt
pushl
cltd
aas
mov
xor
iret
xor
dec
mov
mov
call
popf
orb
dec
add
dec
and
mov
lcall
mov
subb
faddl
stos
int3
xchg
test
pop
xchg
jb
xchg
loop
push
add
stos
push
outsb
movsb
stos
stos
pop
lock
adc
scas
in
lods
outsl
lods
cmpsb
lods
lods
out
icebp
cmpsl
fdivrp
pushl
cmpsb
mov
movsb
mov
sub
mov
push
std
jl
bound
les
incl
mov
cmpsl
inc
mov
int
mov
fcmovne
mov
mov
mov
push
stos
mov
jmp
xlat
mov
stc
notb
into
pushf
xchg
mov
jl
push
and
scas
out
cmc
adc
mov
mov
scas
call
test
bound
and
and
adc
mov
jne
or
loopne
ljmp
xchg
xlat
inc
mov
push
int3
ja
loopne
adc
pusha
push
sbb
xor
push
cli
mov
lods
inc
aaa
sarb
cmpsl
mov
outsl
into
int
jg
xchg
ljmp
pushl
sbb
mov
mov
inc
jp
shrl
jmp
cmp
das
add
das
repz
in
xchg
sbb
xchg
in
xchg
decl
cmp
movsl
dec
iret
shrb
ja
adc
ljmp
in
inc
xchg
mov
sub
pop
cmp
cmp
and
push
sahf
loop
outsl
dec
jg
movl
mov
rcrb
lea
sbb
jg
daa
out
std
mov
insl
hlt
adc
call
adc
cmpsl
aas
test
dec
nop
sbb
push
mov
adc
test
lods
push
pop
jg
jnp
ret
push
sub
pop
sbb
cmpsb
mov
fists
rcrl
cmpb
das
lret
jnp
dec
ja
prefetchw
or
jae
outsl
cli
call
movl
or
cld
adcl
push
mov
mov
push
xlat
inc
add
movsb
pop
mov
in
fildl
outsb
js
sub
pop
lcall
cmp
das
xchg
adc
sub
pop
clc
or
cmp
dec
push
inc
iret
icebp
cmpsb
adc
xchg
jbe
cs
cwtl
pop
fwait
push
std
jo
in
inc
dec
lock
jmp
das
dec
leave
iret
cmp
stos
out
arpl
aas
imul
adc
push
mov
aaa
pop
in
call
loope
mov
cwtl
call
scas
jmp
inc
addb
ds
mov
xlat
loopne
xor
mov
in
mov
jle
inc
sub
in
call
push
inc
xchg
sbb
xor
jge
mov
sahf
in
sub
push
nop
mov
xor
jl
cmpsl
lcall
outsb
xor
test
cmp
ds
add
mov
cmc
scas
or
and
ljmp
sahf
mov
fsts
js
scas
dec
sarb
std
rcrb
inc
push
pop
xchg
idiv
pop
scas
clc
xchg
sub
sbb
or
imul
xlat
ljmp
adc
ficomps
mov
ret
mov
es
add
and
jo
mov
sahf
and
sahf
push
inc
cmpsb
mov
mov
mov
gs
jb
add
into
movsl
out
xchg
mov
rdmsr
fsts
xchg
push
mov
sbb
out
pop
cmc
cmp
jbe
sbb
jbe
jp
add
jae
push
movsb
push
mov
cmp
inc
stc
out
dec
jbe
mov
into
jb
inc
fcoml
inc
clc
fs
jns
stc
lret
push
xchg
inc
and
lcall
mov
lock
imul
push
fwait
cmp
ss
test
cltd
xchg
cs
add
call
ret
jno
aam
loope
xor
ss
mov
addl
in
negb
pop
jmp
icebp
fiadds
subb
aam
into
mov
xor
jg
jg
jmp
mov
sub
lret
sbb
sbb
adc
jle
test
decl
imul
stos
mov
jle
jg
test
and
mov
decl
cmp
fisubrs
mov
rcll
out
mov
dec
or
ljmp
rolb
pop
outsb
sti
cmp
fucomi
pop
xchg
addr16
push
or
imul
pop
std
mov
fdivrp
mov
xor
or
clc
insl
les
push
push
arpl
mov
xchg
mov
push
push
mov
sub
jl
sbb
sbb
dec
mov
repnz
jno
jnp
inc
fsubp
fcmovbe
jge
call
aam
push
jl
test
in
insb
cwtl
push
fwait
imul
jne
leave
in
jmp
pop
dec
lcall
cmp
cmc
les
enter
pop
sub
in
addr16
ret
add
sar
pushl
test
pop
or
cli
mov
mov
stc
inc
int
insb
jecxz
mov
or
pop
xor
xlat
push
addb
push
fidivs
ljmp
mov
movsl
add
or
or
mov
or
and
outsl
jl
jmp
popa
sbb
cmp
shlb
mov
mov
stc
mov
pop
pusha
mov
aam
xchg
leave
mov
imul
cwtl
sbb
push
insl
cmp
xchg
sbb
add
popa
bound
xor
or
push
xchg
in
jmp
add
rorl
les
mov
in
mov
push
je
mov
jl
fstpl
ljmp
repz
dec
gs
popa
pop
lds
mov
add
xor
mov
movsl
inc
ret
xlat
pop
rol
insl
sub
hlt
sti
mov
outsb
frndint
push
ljmp
mov
pusha
mov
jae
add
and
jno
fdivr
lcall
add
inc
or
adc
push
test
mov
fildll
mov
data16
xor
lahf
fcomip
jmp
fxch
cwtl
dec
rcrb
mov
mov
pop
rorb
cmp
mov
andl
mov
loop
mov
inc
cmp
ja
sti
call
sbb
or
imul
insl
push
test
test
push
iret
or
popf
cmc
add
daa
addb
mov
setae
mov
movsb
push
ret
bound
jg
jg
addr16
out
ss
xor
add
sbb
shrl
loopne
fidivrl
cwtl
lcall
dec
int3
push
mov
stc
call
mov
aad
mov
pushl
push
fadd
les
mov
push
shlb
mov
dec
daa
or
pop
loopne
or
loopne
dec
idivb
out
ret
cmp
jle
fistpll
out
mov
mov
inc
sbbw
fisubrl
mov
xor
xchg
inc
or
fldl
push
mov
cmp
or
call
mov
xchg
mov
xlat
jmp
rcr
sahf
mov
ret
arpl
es
decl
insl
xchg
or
push
test
lea
addr16
add
push
dec
sbbb
incl
sbb
insl
rorb
or
hlt
fcmovnu
and
rcl
push
aam
inc
call
fiaddl
int
mov
ja
out
inc
ja
or
add
push
lcall
add
pop
jo
sahf
incl
bound
shr
insb
iret
inc
pop
or
js
or
pushl
add
popa
das
pusha
push
divl
outsb
ja
push
shrl
es
pop
fdivr
mov
fdivrs
lock
mov
sahf
lds
mov
jmp
xor
ljmp
mov
add
stos
ficoms
addr16
cmp
mov
mov
outsl
sub
or
mov
rolb
out
jmp
sbb
inc
int
bound
fwait
insb
lds
ja
inc
test
inc
xchg
aaa
ljmp
ret
add
hlt
fxch
push
mov
or
scas
jle
popa
subl
mov
lods
fldenv
adc
out
inc
xchg
shrl
out
jecxz
mov
cli
addl
sbb
sbb
cli
fistl
lret
lcall
insb
sbb
inc
aas
fbstp
pop
push
lcall
jae
adc
and
ja
push
call
shl
cmp
andl
jmp
pop
scas
stos
mov
imul
mov
imul
sub
hlt
pop
or
sub
inc
repz
mov
jo
jno
imul
sub
negl
pushl
ret
sbb
jne
pop
mov
sti
icebp
test
jns
mov
cmp
lock
call
sbb
fisubrs
cmp
jns
add
cmp
sbb
ljmp
mov
jb
mov
addl
ret
lds
cmc
xchg
cmpsl
in
lea
jmp
xlat
xor
cli
bound
inc
mov
insb
adc
outsb
xchg
push
xchg
jmp
xlat
cwtl
push
cmp
test
rorb
cli
lret
xchg
lea
pop
xchg
jns
sbb
cmpsb
dec
test
jmp
adc
jo
ret
fwait
lcall
test
or
jmp
xchg
scas
mov
int3
cmpsl
int3
and
mov
loope
dec
aas
shr
pusha
adc
jmp
mov
dec
and
das
push
adc
sub
aas
jns
leave
and
mov
or
je
adc
xor
lods
dec
lea
lahf
jle
xor
jmp
repz
std
ret
rclb
cmp
gs
pop
mov
push
cmpsl
gs
incl
test
leave
out
scas
lret
mov
hlt
insb
push
xchg
fnstcw
int
ret
or
lcall
inc
adc
insb
jo
daa
ja
subb
inc
jno
out
pop
add
test
inc
mov
xchg
pop
mov
cwtl
movsl
insb
ljmp
pop
fcomps
sub
fldl
icebp
lcall
xor
scas
bound
and
lds
cmp
adc
cmpsl
xchg
mov
fsts
jmp
arpl
fisubrs
sub
subb
sub
dec
sub
ljmp
inc
sub
cltd
fidivs
loope
lds
mov
gs
fisttps
in
test
xchg
addr16
lahf
mov
mov
sub
int3
cmp
call
jg
imul
or
push
test
jg
sbb
mov
pop
adc
xor
xor
cld
pushl
imul
test
ss
pop
mov
xor
xlat
dec
sub
int3
mov
pop
xlat
pushl
push
xchg
adc
lea
or
jo
jnp
inc
mov
and
in
insb
pop
into
adc
inc
xlat
push
push
test
push
test
shlb
lds
addr16
pop
dec
push
cmpsl
lcall
sbb
add
pop
sub
cltd
xor
fdivs
cli
jle
test
sub
xchg
popf
int3
sbb
rorb
mov
xchg
stc
mov
repz
mov
mov
outsb
mov
das
lds
ss
negl
push
aas
sub
jmp
dec
movsl
pop
xchg
sbb
mov
daa
or
rorb
bound
out
and
lcall
xlat
mov
cld
dec
cmpl
xchg
mov
shlb
xchg
lret
adc
clc
mov
std
ja
and
mov
jle
hlt
adc
aaa
or
jbe
or
jg
push
jne
int3
xor
jb
inc
push
cld
test
outsb
std
inc
mov
fdivr
lret
ret
lea
dec
push
test
adc
lock
repnz
test
repz
out
loope
sbb
jmp
xchg
push
cmc
sahf
sub
cmp
loop
leave
inc
loopne
ja
loope
sbb
add
in
popa
fwait
out
ffreep
out
mov
in
xor
cwtl
inc
es
jmp
ljmp
and
mov
in
dec
inc
loopne
sub
leave
xchg
decl
rolb
xchg
ret
gs
pop
pop
pop
enter
lret
std
lcall
sbb
test
xchg
aad
int
imul
adc
fstp
imul
incl
mov
cmpsl
fcom
fldcw
dec
dec
frstor
cltd
and
cld
fisubs
adc
aam
ficomps
cld
pusha
inc
xlat
or
jno
call
mov
ret
shl
enter
mov
rorb
pop
scas
fdivl
cltd
mov
decl
pop
icebp
jb
aad
inc
orl
or
or
and
scas
incl
add
lret
lret
mov
xchg
out
es
jmp
xchg
ja
pop
xchg
xor
xchg
repz
pushf
insl
add
sahf
sub
lcall
jecxz
add
scas
cli
mov
mov
lret
and
pop
dec
mov
jg
mov
arpl
mov
or
mov
mov
mov
frstor
mov
inc
dec
idivb
jmp
mov
addps
dec
out
mov
icebp
push
addr16
mov
call
or
stos
mov
scas
mov
cmp
movsb
and
cmpsb
in
xchg
jb
mov
sub
add
lods
das
insl
push
xor
jno
sbb
mov
out
sbb
movsl
fstps
cmp
pop
sbb
xor
jp
add
call
call
in
movlps
hlt
popa
pop
das
ficoml
in
mov
adc
mov
mov
cmp
rcl
movl
push
push
test
add
jp
push
sahf
call
les
pop
scas
jne
add
test
adc
or
or
dec
sub
or
int
js
pusha
daa
mov
mov
and
jecxz
and
mov
pushl
and
and
dec
in
imul
test
xchg
sub
ljmp
bound
sub
jo
sub
pop
adc
pushf
xchg
daa
cmp
sub
mov
cmp
xchg
cmp
roll
xchg
xor
scas
test
pop
lahf
aaa
leave
jnp
inc
or
icebp
xor
xor
rcrl
xor
mov
inc
outsl
insl
cld
ja
sub
jmp
ljmp
insb
jmp
ds
push
and
repnz
pusha
mov
ljmp
xchg
cli
jns
addr16
and
ja
adc
xor
jge
jb
pushl
pop
add
loope
jo
mov
jne
popf
in
je
neg
add
dec
xorb
pushl
mov
push
mov
out
roll
jnp
int3
push
jp
cmpsb
arpl
js
sbb
aaa
cld
cmp
jb
add
shlb
mov
into
push
movsb
outsb
stc
add
js
jl
sub
dec
add
lods
adc
and
sbb
jmp
add
push
jbe
filds
inc
add
sub
pop
cmp
add
stos
pop
mov
les
dec
push
sbb
incl
dec
inc
cmpsl
mov
add
fisttpl
cmpxchg
add
punpckldq
gs
add
push
inc
adc
push
testb
xchg
pushf
xor
inc
fimuls
addl
pop
pop
fiaddl
xor
incl
mov
enter
scas
out
add
hlt
pushl
xchg
push
enter
add
imul
cmp
incl
nop
mov
xchg
add
push
fldl
pop
fbstp
cmpsl
arpl
push
add
sbb
pop
movsl
xor
add
jno
and
enter
lcall
mov
inc
xor
outsl
add
jg
rclb
sbb
sti
js
rclb
cld
pushl
in
call
inc
add
and
xor
out
enter
cmp
cmp
fcmovnu
icebp
imul
lock
in
es
mov
xor
decl
sub
add
pop
ja
add
push
mov
clc
mov
lcall
xor
sbb
orb
cmp
or
xchg
cld
inc
sbb
lret
dec
jb
mov
add
sbb
fsubrs
jg
add
inc
sbb
inc
and
hlt
pushl
xchg
push
dec
call
cmp
add
sbb
not
add
jbe
sar
iret
push
lret
add
pop
loope
ret
pusha
test
mov
pop
mov
or
mov
cmp
cs
xchg
jle
loopne
test
das
push
cmp
dec
imul
or
push
movl
es
outsl
cwtl
cmc
add
call
jle
fidivl
sbb
icebp
mov
clc
dec
dec
add
out
jecxz
mov
sbb
xlat
jg
aam
js
jg
call
add
testl
outsb
das
aas
mov
xchg
pop
decl
pusha
push
repz
pop
mov
pop
icebp
iret
mov
in
mov
lcall
adc
jo
add
dec
das
fiadds
and
xorb
inc
out
ja
sbb
pushf
sub
cld
ds
jb
sbb
pop
std
pushl
lret
mov
mov
incl
call
mov
aaa
out
push
add
addb
clc
inc
clc
inc
ds
ljmp
and
jmp
xlat
scas
int3
pop
mov
add
pop
mov
stos
in
pop
add
sbb
add
cmp
insb
and
aaa
xor
out
mov
sahf
aam
push
stc
mov
jge
push
pop
lds
jg
xor
ret
and
outsb
out
repnz
or
cmpsb
insl
add
loope
cli
cld
ljmp
add
dec
sub
push
cmc
dec
dec
add
and
jne
adc
js
xchg
fstps
incl
dec
scas
add
inc
movsw
add
xchg
pop
sbb
sub
jns
mov
lock
jmp
icebp
repnz
xlat
jle
add
mov
add
mov
push
fists
out
fldcw
mov
xor
ljmp
add
stc
popa
gs
add
mov
rcr
cmpsb
mov
ljmp
dec
lcall
xchg
lock
loope
mov
incl
insl
adc
int
lods
mov
adc
movsl
jbe
add
data16
jp
lcall
xor
test
icebp
and
sbb
cmp
lcall
add
icebp
mov
and
fwait
clc
inc
call
push
mov
lcall
mov
adc
xchg
add
jmp
add
lock
bound
imul
ret
fwait
inc
jnp
ss
xchg
cltd
xor
add
lcall
call
popa
call
pop
jno
lret
loope
ja
ss
out
mov
add
call
aas
out
inc
addl
movsb
pop
notb
add
push
ds
add
addb
sub
popa
inc
add
mov
stos
xorl
jg
cmp
xorl
loop
incl
pop
add
mov
adc
in
test
cmp
lret
imul
pop
ret
jle
cmp
arpl
cltd
in
incl
leave
mov
push
outsb
add
push
cmpsl
rcr
ret
outsl
fisubrs
sarl
xor
dec
mov
dec
jnp
mov
push
add
pop
sub
fcomi
ret
scas
addr16
cmpsb
add
mov
pop
mov
jp
cltd
mov
push
icebp
fndisi(8087
jg
in
or
and
std
loopne
or
cld
lods
jmp
popa
or
mull
or
cmc
jmp
incl
rorb
gs
outsl
gs
gs
loopne
popf
mov
push
or
pop
shll
mov
or
or
mov
add
push
jp
adc
add
popa
pop
repz
sbb
out
imul
adc
out
lcall
lcall
jge
cmp
fstpl
sbb
out
lods
sub
imul
out
aad
xchg
adc
out
movsl
and
imul
out
fstps
sbb
out
lcall
lcall
jno
xor
out
rcll
adc
out
lcall
lcall
jle
imul
imul
imul
out
push
xchg
push
out
imul
imul
out
ficompl
sbb
mov
out
push
mov
or
push
mov
or
jb
jns
cmpsb
mov
rclb
pop
and
insb
mov
fisubrl
jb
push
addb
add
in
add
insb
jo
push
lods
add
out
sbb
int3
add
add
idivl
sbb
mov
xor
mov
aam
push
sbb
xchg
add
mov
sbb
movsb
add
mov
inc
sbb
test
imul
jnp
add
add
add
pop
sbb
cwtl
add
add
ja
push
test
sub
push
enter
mov
mov
add
out
jnp
mov
xor
push
rolb
mov
adc
push
loopne
pusha
sbb
fidivrs
mov
push
rolb
icebp
or
add
add
inc
movb
fistps
xor
mov
divl
xlat
xchg
out
movl
jmp
aaa
int
stos
lret
mov
xor
jl
sahf
mov
push
pop
pushf
out
sti
fcmovu
push
sbb
rolb
subl
imul
in
imul
imul
fucom
rcrb
mov
imul
jmp
add
add
add
add
mov
cld
pop
inc
pop
pop
testl
add
int
and
or
or
or
aas
add
add
or
ret
adc
push
add
aas
add
add
add
ja
inc
jmp
adc
adc
out
add
adc
push
mov
or
jbe
in
mov
add
in
or
sbb
fxch
add
loop
add
adc
dec
daa
repnz
add
lock
mov
and
sbb
sbb
test
adc
adc
test
adc
inc
adc
fwait
cltd
or
add
in
clc
notb
or
adc
mov
push
push
adc
add
std
adc
jg
mov
sbb
jg
mov
cmpb
mov
mov
mov
icebp
lds
jmp
aad
sbb
mov
incl
lcall
icebp
push
xor
or
push
mov
jno
xor
aas
icebp
add
xor
aam
jne
lcall
pop
incl
jo
add
imul
xor
or
add
xchg
mov
mov
inc
add
adc
fwait
or
push
inc
out
outsb
mov
xor
pop
data16
imulb
or
or
dec
mov
sub
sub
adc
mov
add
pushf
nop
xchg
add
pushf
je
jo
add
jo
out
mov
out
mov
sbb
ds
and
jbe
mov
add
movb
adc
push
add
sbb
into
dec
jo
test
xor
js
ja
divb
push
fidivs
mov
clc
in
jle
sarl
addl
incb
push
decb
pop
push
add
adc
sbb
and
xor
inc
add
pusha
icebp
adc
add
xor
out
cmpl
in
push
out
mov
outsb
or
sbb
sbb
loop
sbb
aaa
mov
in
lods
add
add
mov
stos
popf
data16
mov
cmpsb
es
or
fisubrl
push
xchg
add
push
add
add
int
lret
cmp
scas
jae,pt
mov
jbe
push
outsl
idivb
movsl
adc
iret
jae
push
push
fcmovb
add
jg
cmc
ds
into
pop
push
cli
xor
inc
xor
pushl
aam
mov
ja
ja
adc
mov
xchg
negb
fcomip
ljmp
mov
insl
stos
add
cli
fsubrl
push
push
jo
mov
and
mov
mov
mov
repz
cli
or
or
add
xchg
lods
mov
adcl
pop
int3
aad
cmpb
mov
dec
je
cwtl
rcr
jnp
fdivr
mov
clc
dec
shlb
and
sbb
loopne
std
sbb
adc
cltd
xlat
sbb
stos
pop
mov
clc
mov
mov
in
xchg
test
push
popa
roll
sti
and
xor
xlat
cmp
lea
mov
roll
sub
and
leave
or
icebp
out
push
pop
cmp
sar
mov
rorb
rclb
mov
jg
or
inc
jecxz
jg
cmp
lcall
and
lods
jg
or
addb
imul
mov
inc
or
adc
orb
add
add
inc
lods
imul
adc
stc
add
out
xor
add
loope
adc
cld
lds
cmp
std
add
fidivs
push
ret
mov
add
add
sti
rolb
rorl
or
adc
incl
add
mov
push
cld
or
add
sbb
add
sbb
ss
xchg
outsb
loop
cmp
or
jecxz
add
and
push
pop
popa
pop
fistpl
add
push
fldt
add
push
jb
sbbb
pop
jbe
push
les
ljmp
xchg
push
or
sti
out
cmpsb
push
fcoml
sahf
add
not
or
jmp
or
adc
or
notb
or
rorb
or
in
mov
rclb
inc
or
inc
hlt
jo
dec
fidivs
pop
jo
fs
subl
jb
jl
lret
jo
add
sahf
and
push
cltd
cmpb
and
dec
aas
inc
femms
xchg
fmuls
and
sub
aas
sub
xchg
addr16
mov
or
mov
pop
enter
int3
add
push
shlb
scas
push
and
jle
mov
stos
mov
out
rolb
fbstp
sti
push
adc
out
xchg
pop
mov
loopne
mov
adc
sar
daa
or
shlb
or
mov
sbb
repz
xor
sbb
or
loopne
jae
jbe
pop
jg
fdivrp
jns
loopne
jl
or
fsubp
add
ss
adc
or
add
imul
dec
js
and
xor
dec
loopne
lahf
adc
mov
jecxz
insb
rorl
loopne
pop
push
cwtl
add
or
push
mov
sbb
daa
sbb
jmp
outsl
push
mov
mov
push
adcl
sub
lahf
cli
push
add
inc
imul
loop
or
sbb
scas
shrl
jmp
mov
in
xor
jbe
and
sbb
dec
push
add
push
in
loopne
inc
mov
pop
adc
mov
pop
arpl
pusha
mov
sub
jbe
movsb
stos
mov
add
outsl
adc
lcall
jbe
sbb
loopne
stos
fildl
loopne
in
stos
push
push
xchg
pushf
loopne
jbe
popf
sub
stos
ja
cmp
stos
xchg
add
aas
aaa
push
loopne
or
jno
stc
std
lods
cmp
adcb
and
add
sbb
in
push
sub
stos
xor
or
out
imul
arpl
je
sbb
sbb
insl
mov
pop
xor
add
and
mov
mov
jge
out
loopne
mov
push
jmp
lcall
add
inc
add
fucomi
pop
shll
or
loope
das
or
out
dec
stos
cmp
aad
addb
stos
mov
push
pop
inc
out
loope
mov
mov
jae
mov
ret
sbb
pop
cld
jne
xlat
cwtl
and
jecxz
sbbl
lods
loopne
add
add
ljmp
mov
lock
or
add
arpl
pop
or
push
pusha
fistpll
movsb
inc
xor
sub
xor
add
and
js
inc
arpl
push
add
bswap
xor
lret
xchg
mov
jb
fwait
call
shlb
ss
movsl
loopne
out
adc
or
lcall
rolb
pop
adcl
or
add
loopne
dec
sbb
mov
push
cltd
adc
mov
jnp
roll
sbb
adc
popf
je
pop
or
dec
sub
outsb
or
or
filds
out
ljmp
add
lock
in
les
or
and
in
insl
xlat
push
cmp
stos
fdivl
adc
xrelease
ficomps
aaa
or
lock
or
lock
add
lock
xor
ret
or
lret
cmp
adcb
lods
jns
adc
or
lock
or
lock
enter
cltd
movsb
or
jo
or
lock
jo
fildll
fdivl
adcb
jg
adc
jecxz
adc
lock
sbb
lock
xor
or
stos
or
pop
imul
lock
mov
sbb
aaa
mov
xchg
loop
dec
cs
push
add
sbb
lock
mov
pop
jmp
nop
mov
into
outsb
xchg
outsl
clc
mov
rcrb
mov
adc
or
jo
inc
adc
cmp
scas
inc
enter
jo
cltd
insb
sbb
lock
nop
les
iret
mov
test
or
lock
jb
mov
jb
jle
sbb
pop
jge
jo
jp
jae
and
hlt
test
xchg
jg
mov
nop
shlb
imul
push
add
push
xor
pop
mov
mov
cmp
mov
ret
mov
adc
push
xchg
jbe
or
lock
loopne
or
ret
insb
adc
fidivrl
lods
push
setg
adc
iret
pop
repnz
xor
and
push
sahf
jnp
and
and
cmp
mov
inc
pop
push
cld
or
pop
imul
jo
stos
push
add
jns
push
sbb
jo
mov
jo
shl
lock
jne
and
sbb
mov
jg
cwtl
dec
inc
mov
dec
inc
adc
bound
insb
call
lock
icebp
mov
inc
fists
jl
bound
jns
out
mov
cmpl
push
jno
xor
fsubrl
hlt
add
std
adcb
mov
add
push
xchg
inc
add
fwait
xor
sbb
ret
inc
push
push
outsb
add
fiaddl
cmp
add
imul
das
je
add
adc
mov
addl
fists
cld
add
cwtl
inc
push
inc
pop
out
or
sbb
lods
or
movsb
cmp
in
lods
jmp
or
and
dec
shlb
rorb
les
repz
jne
fbld
cmp
lock
in
sub
ljmp
es
xor
add
bound
lds
fwait
data16
imul
jb
mov
ja
fcomip
mov
pop
lahf
incl
icebp
testb
jge
mov
aas
or
or
push
in
pop
add
add
incl
push
add
xor
lret
add
add
mov
push
push
ud0
xor
push
or
addr16
mov
add
add
fidivrl
jnp,pt
mov
popf
adc
ds
dec
pop
sbbb
mov
and
cld
fisttps
inc
inc
xor
stc
popf
inc
or
push
sbb
push
inc
fistpll
cmpl
fisttpll
scas
cmp
adc
xchg
push
cmp
pop
cmc
aas
ljmp
cli
jmp
ss
loopne
add
xlat
jle
nop
mov
add
sbb
lods
xor
cld
fucomi
cli
cltd
rcrb
and
or
cld
lds
jg
pushl
mov
lahf
jg
add
in
and
and
lods
mov
mov
add
mov
imul
cwtl
rorb
jmp
xlat
les
pop
push
xor
pop
outsl
cwtl
xor
mov
lds
inc
fs
jmp
sbb
pop
dec
nop
rclb
cld
adc
in
mov
mov
icebp
cmp
xchg
push
jne
movsl
add
inc
pushf
xor
lods
xor
mov
stc
cmp
int3
xor
faddl
aad
add
fsubs
test
add
rcr
js
and
lea
push
xor
in
out
sahf
pop
xor
adc
aas
jnp
mov
pop
je
sub
push
xor
sbb
stos
inc
pop
xchg
mov
insl
inc
dec
daa
pop
xchg
mov
xor
xor
jmp
sbb
sub
lret
out
cli
pushl
cmp
mov
sbb
jb
popf
icebp
inc
mov
pop
push
jge
or
incl
jb
xor
mov
xor
xor
xor
xor
xor
xor
xchg
mov
sar
incl
cmp
inc
sbb
pop
sti
mov
insb
xor
xor
lcall
lods
add
shrl
nop
mov
insb
fisttps
outsb
shl
mov
sbb
xor
xor
xor
xor
xor
xor
xor
lret
fisttpll
cltd
out
cmc
adc
jbe
jbe
jmp
push
int3
adc
sbb
xor
xor
xor
xor
xor
xor
xor
xor
cmp
jmp
inc
scas
out
cmovge
in
pop
sahf
jle
or
shll
adc
push
xor
imul
lcall
lods
xor
cmp
inc
or
inc
sbb
add
inc
rolb
cmp
add
call
loopne
ljmp
ss
mov
jl
arpl
in
clc
add
mov
call
dec
aad
pusha
cmp
or
ret
aaa
inc
aaa
mov
push
aaa
mov
aaa
je
fcomip
pushl
inc
inc
pop
fldt
mov
mov
scas
sbb
hlt
aaa
ds
in
rdpmc
adc
ljmp
jmp
ficoml
or
add
jl
outsb
cmpsl
test
push
add
cltd
cmp
cmp
call
outsb
xor
sbb
mov
test
jnp
xchg
cli
pop
push
adc
call
xor
xor
lods
xor
xor
xor
add
out
pop
push
daa
xchg
lds
mov
out
sbb
ljmp
mov
inc
jle
rcll
mov
aaa
mov
mov
dec
aaa
shll
push
aaa
adc
lods
test
dec
shrb
lods
iret
xlat
inc
incl
popf
push
pop
xchg
les
jg
cmp
cmp
cmp
cmp
cmp
dec
sar
decl
mov
dec
mov
mov
fisttpl
xchg
data16
jg
cmp
cmp
cmp
cmp
jle
xchg
dec
or
data16
mov
fwait
std
fidivl
or
ljmp
mov
aas
in
add
cmp
ss
popa
cmp
ljmp
mov
int3
lret
xlat
xchg
xor
cmp
fists
push
adc
inc
push
push
mov
shll
subl
and
adc
into
add
mov
add
xor
sbb
xor
xor
push
call
jo
pop
sub
sti
inc
xchg
in
inc
mov
pop
jno
lds
dec
ds
mov
iret
aaa
lock
jbe
jo
and
in
xchg
mov
pop
ret
lret
push
ja
pushl
xor
cld
addr16
cmc
sarb
int
fnsave
test
adc
stos
loop
cmp
cmp
or
jae
scas
sub
push
adc
lds
lock
and
pop
jg
or
outsl
icebp
ljmp
je
push
or
je
jno
movsb
in
aas
imul
es
shlb
sub
cltd
imul
call
mov
jmp
push
jle
outsl
lods
and
lea
hlt
inc
pop
mov
lea
call
mov
adc
sbb
insl
pop
loopne
mov
jge
aas
dec
xchg
pop
lods
decl
inc
jecxz
lods
sub
adc
adc
in
shll
xchg
les
inc
mov
pop
lea
mov
sub
sub
adc
inc
adc
fwait
cli
scas
and
cmp
and
mov
or
test
enter
and
loop
sahf
mov
inc
scas
rcll
mov
nop
push
lock
pop
sti
add
and
gs
sar
lcall
into
das
push
cmp
in
leave
sti
xchg
insl
mov
adc
lcall
jg
out
mov
mov
jb
xchg
dec
stc
adc
loop
xlat
pop
add
add
fadds
pop
add
pop
add
add
push
add
push
add
incl
push
add
push
add
push
add
dec
add
add
add
add
pop
fcomi
incl
dec
add
add
popa
add
pop
add
add
jp
fldl
lcall
inc
add
mov
add
cmp
cmp
push
add
add
xor
add
add
add
add
add
cs
add
sub
daa
add
clc
fwait
hlt
add
add
jo
and
bound
pop
adc
sti
outsl
out
pop
sbbb
pop
add
add
add
jb
push
fidivrl
repnz
push
pop
scas
inc
pop
lret
jno
arpl
fnstcw
pop
add
xor
sub
add
add
dec
add
jo
mov
lret
xor
add
push
add
insb
push
shrl
push
xor
add
insl
shll
or
lcall
clc
or
add
pop
add
mov
mov
push
add
mov
add
fnstenv
add
add
add
andb
add
dec
add
xor
mov
cmp
cs
add
add
cs
push
fdivl
sub
incb
jb
add
add
incb
push
pop
add
sub
adc
sub
add
or
push
or
xchg
push
add
imul
imul
add
and
rcrb
xor
xor
mov
add
xor
repnz
xor
movsl
xor
cmpsl
xor
call
xor
jecxz
push
add
xor
out
push
add
xor
cld
xor
mov
xor
sar
dec
add
xor
test
dec
add
xor
stos
xor
fiaddl
scas
xor
incl
mov
inc
add
xor
xor
mov
inc
add
xor
mov
xor
add
xor
ds
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
pushl
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
call
cs
xor
add
xor
add
xor
add
xor
add
xor
add
pushl
daa
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
incl
inc
add
pop
push
ds
and
cmp
and
cmp
and
cmp
es
cmp
sub
ss
sub
xor
sub
xor
sub
xor
cs
xor
xor
cs
xor
sub
xor
sub
xor
sub
ss
sub
cmp
es
cmp
pop
add
incl
sbb
add
inc
push
sbb
inc
push
sbb
dec
push
push
add
dec
push
adc
add
dec
push
adc
dec
push
adc
push
push
push
add
push
push
or
push
sbb
sub
lods
pop
mov
pop
push
inc
pop
push
push
pop
push
bound
mov
push
adcb
push
push
mov
push
push
mov
push
ret
add
insb
add
push
and
add
sbb
add
loop
add
adc
sub
mov
pop
add
or
or
or
add
rolb
or
bound
popa
inc
lds
orb
aas
push
repnz
add
and
mov
lret
add
adc
test
lret
push
inc
and
ljmp
test
lcall
push
mov
push
sbb
pop
ljmp
jp
mov
lcall
xor
inc
lret
lret
jo
ljmp
xchg
or
lcall
cmp
test
push
lret
push
and
sbb
add
adc
sbb
add
push
rcrb
push
pop
fiaddl
popa
ret
xchg
mov
adc
add
sub
insb
fcom
add
loop
adc
add
add
sbb
mov
ljmp
or
or
xor
push
inc
or
xchg
add
xchg
add
call
add
add
xchg
ret
push
mov
jg
add
mov
add
mov
pop
pop
mov
pop
pop
mov
pop
pop
stos
add
jg
stos
mov
stos
add
add
test
push
pop
adc
jmp
pop
lods
push
pop
scas
mov
scas
mov
call
pop
lret
pop
nop
add
int3
add
int
pop
lret
xlat
scas
lcall
pop
mov
inc
pop
into
add
pop
xchg
add
xchg
cmp
jmp
pop
xchg
add
pop
xchg
add
pop
xchg
push
xchg
jp
cwtl
std
ljmp
xor
pop
fwait
add
pop
pushf
add
pop
popf
add
pop
sahf
add
pop
lahf
pop
cmc
mov
cmp
mov
ljmp
inc
pop
movsl
lcall
daa
pop
test
es
test
add
pop
mov
sbb
pop
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
cld
out
ficompl
mov
adc
pop
mov
rolb
cmp
mov
add
pop
mov
add
pop
roll
ret
incl
ret
add
ret
pop
les
or
lds
or
movb
pop
movl
jg
leave
add
mov
pop
or
pop
or
and
and
pop
or
and
incl
ljmp
or
fwait
and
popf
and
lcall
and
test
dec
or
inc
or
inc
or
inc
or
and
or
in
pushl
or
and
shlb
aaa
or
or
xor
aam
xor
shlb
pushl
or
sub
sbb
and
or
and
or
and
or
and
or
and
mulb
or
xchg
enter
push
xchg
and
push
ljmp
and
or
pop
or
and
sbb
or
sbb
or
sti
sbb
or
sbb
push
or
and
or
and
adc
and
call
cld
call
or
wbinvd
mov
or
or
add
or
mov
or
outsb
clc
dec
decl
add
pop
or
and
pop
or
pop
or
fistps
and
and
or
push
or
push
or
and
and
or
and
ljmp
and
push
or
or
dec
or
dec
or
dec
or
and
pop
and
pop
and
and
and
sub
inc
or
add
sub
cmp
cmp
or
cmp
pop
and
or
cmp
pop
and
or
xor
inc
and
xor
lret
and
das
or
and
or
and
or
in
lcall
and
or
and
or
and
push
daa
and
lods
and
and
mov
and
iret
mov
or
or
or
and
sbb
sbb
and
or
and
cmp
mov
cmpsb
es
adc
arpl
adc
adc
gs
xchg
daa
push
push
and
daa
or
pop
daa
push
aaa
sub
outsl
es
inc
sbb
inc
mov
or
es
or
and
or
push
cld
aaa
fsubs
add
pop
or
add
jle
or
ljmp
mov
or
and
mov
nop
and
or
or
incl
xor
or
and
or
sub
or
sub
lods
xor
push
or
mov
push
dec
mov
pop
or
add
sbb
or
add
incl
sbb
add
pop
or
add
adc
or
add
incl
adc
add
loopne
push
or
add
or
jecxz
or
mov
or
add
out
pop
or
dec
sub
add
pop
or
jmp
pop
or
pop
rolb
pop
jo
push
or
push
push
sub
outsl
mov
or
push
mov
push
push
add
push
or
adc
dec
or
decl
dec
or
adc
dec
or
adc
push
dec
or
sbb
inc
or
decl
inc
or
sbb
inc
or
sbb
push
inc
or
and
ds
decb
cmp
or
cmp
es
cmp
decl
sub
ss
sub
xor
sub
xor
sub
pushl
or
das
push
das
or
xor
sub
or
xor
sub
loop
sub
aaa
push
daa
or
push
lock
and
ds
mov
inc
push
push
or
inc
push
sbb
inc
push
sbb
decl
inc
push
sbb
dec
push
push
or
dec
push
adc
dec
push
adc
fcoms
cld
or
push
call
push
mov
push
push
or
imul
push
lods
or
push
aam
addb
or
xor
xor
lods
pusha
shll
push
pop
jp
sub
xor
aaa
xor
mov
fisttpl
xor
xor
xor
xor
or
stos
xor
xor
mov
ljmp
inc
xor
push
sub
sbb
sub
cmp
dec
dec
xor
addb
xor
xor
sub
mov
dec
xor
xor
mov
lret
cmp
xor
insb
fdivs
push
xor
push
xor
push
xor
pop
xor
pop
xor
xor
mov
bound
pop
pusha
push
mov
inc
xor
xor
ss
ret
shlb
loop
adc
test
adc
stos
adc
stos
adc
lods
adc
push
lods
pop
xor
push
scas
adc
adc
mov
mov
xchg
mov
mov
adc
adc
mov
jno
mov
call
mov
cmp
push
mov
sub
adc
mov
pusha
mov
in
mov
adc
adc
xor
rorb
jg
insb
push
xchg
call
adc
xchg
sub
inc
sbb
cmp
pop
mov
lock
adc
std
scas
call
insb
adc
add
push
add
adc
pop
and
and
mov
pop
and
fildl
fcompl
movsl
mov
cmpsb
adc
cmpsl
ror
insl
pop
mov
and
stos
push
and
int3
mov
cmp
add
stos
testb
repnz
sarl
rep
repnz
add
pop
jae
imulb
in
add
or
add
mov
imul
int
stos
addb
add
fiadds
test
repz
fcompl
int
rcrl
pushf
sbb
orb
rcrb
pop
xchg
cld
or
fisttps
jbe
subl
repnz
push
or
mov
sbb
fstpt
push
dec
rcr
data16
arpl
gs
bound
addl
pusha
shr
push
add
shll
xchg
push
xchg
loopne
sti
push
rolb
add
nop
shrb
xchg
cmp
xor
lahf
rolb
mov
dec
dec
repz
push
popf
add
sbb
repz
dec
cltd
dec
cwtl
shll
inc
xchg
push
fsubrl
mov
dec
cmp
dec
sub
lods
adc
cmp
stos
cmp
imul
cmp
mov
cmpsl
imul
imul
cmpsl
imul
cmpsl
imul
imul
cmpsl
imul
cmpsl
imul
add
loop
add
adc
movsb
adc
mov
mov
or
repz
aaa
or
push
push
sbb
sbb
sbb
and
out
add
add
sub
sub
add
xor
sbbb
add
cmp
cmp
or
add
xchg
pop
mov
lahf
xlat
pop
jnp
jg
addl
xchg
mov
pop
xchg
xchg
xchg
imul
lcall
lahf
pop
add
cmpsb
cmpsl
push
add
scas
scas
dec
add
mov
clc
mov
add
mov
ret
cmp
mov
leave
lret
incb
iret
xor
rcl
sub
xlat
push
fstp
fnstsw
das
clc
or
loop
sbb
out
sahf
jmp
out
out
jg
mov
or
div
pop
cmp
sti
add
lcall
add
pop
inc
inc
inc
mov
incl
inc
mov
dec
dec
mov
dec
add
push
push
push
stos
push
push
lock
cmpsl
pop
pop
inc
add
pop
xor
mov
loope
aaa
sbb
push
popa
add
inc
inc
cwtl
insb
sbb
nop
lock
xchg
cld
add
add
and
pop
xchg
loopne
mov
es
rcrl
sti
add
add
and
and
pusha
add
insl
adc
or
sub
popa
js
add
mov
adc
insb
sbb
add
or
andb
jecxz
or
sbb
add
cmp
sbb
fisubrs
mov
or
js
insl
add
jbe
jl
sub
jle
in
out
sub
jg
arpl
loope
xchg
outsb
add
pushf
je
mov
push
push
shlb
incl
mov
aam
dec
push
sarl
popf
arpl
add
cbtw
push
je
ja
jp
sahf
pop
aaa
add
imul
out
push
in
xor
popa
xor
pushl
nop
add
xchg
add
push
xor
mov
inc
enter
add
or
shlb
std
aaa
mov
or
xchg
gs
insb
push
mov
sbb
je
notb
mov
and
xchg
gs
je
jle
idiv
xor
push
add
call
mov
bound
sahf
or
scas
mov
push
mov
and
add
aas
test
lods
mov
lret
add
add
test
repnz
rorl
loop
push
and
ja
push
js
repnz
add
mov
inc
xchg
cmc
jns
or
movsb
or
push
outsl
inc
add
add
add
dec
add
or
ja
mov
push
jo
inc
add
mov
sbb
pushf
mov
push
push
outsb
jg
inc
add
arpl
nop
cltd
lods
mov
sbb
fwait
inc
mov
call
rcr
push
jo
stos
jo
mov
or
or
adcl
sbb
mov
fimuls
xor
push
or
das
js
mov
and
sbb
xor
push
xchg
jo
cwtl
jo
and
in
add
sbb
xchg
ss
cmp
imul
add
mov
adc
add
and
mov
ljmp
lock
mov
imul
mov
inc
aam
dec
mov
pushf
and
shl
clc
mov
mov
push
xor
add
stos
inc
inc
and
xor
xor
das
jp
add
test
mov
inc
pop
push
icebp
out
add
test
ret
push
push
pop
cwtl
push
mov
xchg
pushf
fs
add
insb
jae
lret
jle
je
js
stos
jg
insl
sub
js
push
andl
and
lock
jp
and
cld
decl
push
jo
jg
jb
repz
movsl
pop
inc
pop
pop
mov
das
insb
std
in
push
dec
cltd
addr16
adc
or
xor
lret
push
or
pushf
loop
push
mov
into
bound
ret
mov
inc
ss
decl
push
inc
push
mov
mov
jbe
pop
ljmp
or
sub
push
inc
and
inc
mov
mov
dec
fucomi
incl
push
jb
mov
inc
inc
stos
dec
or
stos
mov
lods
inc
push
lods
lock
cld
mov
push
mov
or
xchg
dec
dec
inc
and
or
dec
push
dec
mov
add
add
mov
push
pop
dec
stos
push
inc
add
push
mov
out
mov
add
fisttpl
fimull
mov
push
or
ja
scas
inc
cmp
inc
mov
dec
outsb
outsb
lcall
loop
jb
js
sub
xor
arpl
cmpsb
cmp
je
push
sub
add
mov
push
mov
out
rcrb
arpl
out
sbb
jno
mov
jb
loopne
pushf
push
pushl
outsl
or
shlb
test
lock
outsl
jae
ds
xchg
jg
icebp
mulb
je
xor
push
outsb
mov
mov
lock
dec
xor
or
fsubl
sbbl
lods
mov
xchg
inc
add
jae
outsl
mov
xor
lea
add
arpl
jae
fldl
push
xor
lcall
or
mov
inc
outsb
mov
xchg
add
dec
mov
enter
gs
mov
jns
xchg
jbe
nop
int3
ss
je
mov
int
arpl
lds
fwait
push
and
and
hlt
ja
imul
jp
and
and
cwtl
push
outsl
je
mov
jo
popf
push
push
mov
insl
add
cltd
push
lcall
lods
push
push
sbb
or
mov
ja
and
fidivl
icebp
mov
xor
xchg
xor
ljmp
xchg
mov
das
ja
ja
bound
movsb
cs
or
insl
mov
js
addr16
outsl
subb
cli
xchg
das
jo
scas
ffree
sbb
hlt
cmpsl
xor
insl
adc
jle
fcomp
xor
add
adc
insl
xchg
sbb
adc
jo
cmpsl
in
ljmp
add
xor
dec
mov
jae
jb
xchg
mov
orb
add
mov
or
les
xchg
lock
lcall
push
cs
pushf
cmpsb
lea
test
test
lcall
insl
dec
dec
enter
pop
xchg
jno
xchg
xor
nop
mov
mov
stc
dec
push
mov
popa
xor
jb
fdivl
aaa
mov
mov
push
mov
bound
lcall
xor
add
add
into
adc
adc
jle
add
mov
pop
mov
jle
inc
std
jnp
ljmp
xchg
push
mov
rorl
and
test
jns
inc
jge
mov
scas
scas
sbbl
add
cld
bound
or
add
adc
push
add
add
lock
jp
or
push
lock
lret
add
push
or
adc
or
sbb
int3
incl
jno
fiaddl
sbb
xlat
add
std
out
sti
push
sbb
inc
out
mov
dec
pop
outsb
mov
dec
pop
mov
jecxz
jg
push
mov
add
push
cmpsl
js
dec
stos
incb
mov
pop
mov
stos
pop
inc
sbb
push
xchg
idiv
jmp
sbb
cmp
out
and
xor
or
cmc
loope
sub
shrb
rcr
loopne,pn
mov
pusha
mov
call
addl
and
rcrl
adc
lret
and
aam
faddl
add
cld
add
call
repnz
into
cld
std
incl
ljmpw
jecxz
ds
mul
push
out
clc
cmp
icebp
cli
sub
xlat
or
in
dec
cmp
shl
lret
rcl
roll
and
fadd
sub
incl
add
or
jecxz
testl
aas
adc
in
add
decl
adc
xchg
push
call
mov
mov
mov
dec
cmpsb
cwtl
mov
cld
pop
adc
xchg
fs
fwait
dec
sub
ljmp
loopne
scas
mov
inc
scas
mov
bound
lcall
mov
inc
mov
test
dec
stos
scas
scas
ja
in
out
add
rorb
sti
pop
ljmp
dec
cmc
push
adc
cld
pushl
xor
mov
sub
mov
mov
das
xchg
ja
add
mov
or
xlat
sub
lret
ror
sarl
or
adc
in
sbb
or
or
ret
ret
fadd
sub
out
in
fcmovbe
fnstenv
lret
shr
jmp
stc
aaa
into
int
adc
cmc
out
imul
jmp
sbb
int3
insb
push
ljmp
bound
and
and
adc
xor
aas
inc
xor
xor
ljmp
lods
jmp
inc
dec
repnz
push
inc
lods
push
lock
add
push
loop
xor
clc
pushl
push
adc
pop
inc
inc
xchg
push
cmp
das
arpl
lfs
pushl
scas
mov
push
arpl
addl
fs
xchg
pop
lock
andb
sub
test
and
aam
xor
mov
aam
flds
inc
pop
mov
mov
pushl
aaa
xor
sub
jns
cmp
cmp
cmp
insb
and
and
push
xor
jbe
adc
stos
call
div
push
mov
sti
cmc
mul
dec
std
sti
std
sti
lea
jge
jb
jl
outsb
test
jns
je
jle
outsl
outsb
imul
jmp
pusha
jae
popa
ja
lods
push
mov
mov
dec
pop
pop
cmpsb
inc
fnstsw
mov
scas
inc
inc
or
or
into
fwait
es
lret
xchg
fisubrs
jg
jg
fcomp
lds
xchg
xor
sbb
rcr
cmp
fildll
int3
rol
or
lock
fcomip
iret
cmp
mov
lock
es
in
jecxz
in
imul
pushl
jg
jg
into
in
mov
pop
dec
lahf
pop
push
pop
movsl
inc
pop
mov
jne
mov
movsb
cs
push
inc
push
sub
mov
inc
dec
mov
push
inc
add
insl
clc
mov
push
inc
mov
push
inc
mov
jnp
xchg
cmp
idiv
push
addl
xchg
cmpsl
popa
cltd
mov
inc
orb
das
ficompl
sbb
outsb
ss
icebp
out
call
repz
inc
test
std
outsl
out
jle
imul
jbe
scas
mov
push
test
mov
cmovne
xchg
mov
jbe
xor
stc
clc
or
call
cmp
sti
jmp
sbb
es
in
out
lcall
in
ja
lcall
push
maskmovq
iret
aaa
and
and
fistpll
aaa
aaa
sub
sarb
cmp
or
xor
cmp
xor
fbstp
std
pop
mov
mov
mov
stos
push
inc
int
or
into
and
jg
ljmp
add
cmp
xor
sar
shrl
fcmovnbe
and
mov
xchg
scas
test
pop
mov
mov
dec
mov
sbb
mov
sbb
cmp
dec
out
sbb
sub
or
cmp
or
stos
jg
or
jecxz
or
clc
dec
scas
subl
mov
lret
leave
fsubs
movsl
mov
lods
dec
dec
dec
pop
loopne
shll
es
add
sbb
cmc
and
jg
adc
scas
inc
pop
int
pop
pop
jecxz
dec
pop
scas
adc
clc
aaa
std
rorl
out
cmp
sarb
push
ffree
fistps
mov
jg
xchg
pop
dec
dec
pop
jno
xchg
lcall
test
push
test
stos
dec
pushf
mov
mov
cli
in
outsb
mov
out
lcall
xchg
xchg
gs
mov
jg
fs
jb
jo
je
incl
test
xor
sub
cmp
cmp
cmpsb
jmp
into
loopne
push
add
sysret
sbb
push
dec
push
rclb
adc
sbb
outsl
aam
cmp
push
ds
rcl
and
and
mov
out
icebp
andb
xlat
imul
pop
ljmp
sub
lcall
xchg
orl
pop
mov
mov
pop
mov
jae
mov
ss
push
mov
movq
mov
and
scas
push
mov
xchg
fstpt
mov
inc
xchg
mov
stos
lods
faddl
xchg
xchg
imul
xchg
xchg
lret
mov
les
addr16
shrl
loop
test
jp
test
push
icebp
fsubp
cld
test
cmpsb
pop
push
in
iret
mov
cli
mov
lock
dec
loope
sbb
repnz
iret
mov
pop
stc
pop
mov
sub
xor
pop
push
mov
scas
dec
jg
fildll
mov
or
adc
add
mov
dec
add
lcall
popf
jle
xor
xorl
mov
jg
lcall
dec
mov
push
push
mov
pop
jmp
adc
add
bound
jns
jo
xchg
adcl
xchg
jg
fists
push
jmp
out
cmc
cli
repz
or
icebp
adc
add
pop
lock
cmp
sub
daa
ret
cmp
pop
sub
xor
add
jae
jne
js
mov
lcall
push
dec
mov
inc
push
push
mov
mov
cmp
jnp
cmpl
repnz
push
xchg
ja
cld
in
add
and
mov
jnp
punpckldq
std
aaa
in
outsb
push
mov
cmpsb
aaa
bound
sbb
subb
test
ret
mov
aas
cld
es
fmul
xor
sahf
arpl
push
pop
imul
cld
aaa
sub
cmp
sbb
aaa
jecxz
xor
cltd
xchg
pop
pop
mov
mov
aaa
out
mov
imul
pop
pop
add
push
cld
push
pop
sbb
pop
inc
push
pop
sub
jmp
push
pop
push
movsl
pop
dec
int3
adc
mov
fisttps
mov
ret
cltd
shrl
mov
jo
mov
add
xlat
and
daa
sbb
std
sti
lock
adc
jb
cltd
cmpl
lock
mov
inc
push
mov
jno
mov
mov
es
cwtl
fs
imul
cmp
ret
push
mov
outsb
movl
jg
dec
dec
dec
movsb
inc
pop
add
lds
into
fcmovb
xor
roll
adc
loop
add
sti
sub
data16
adc
in
cmp
sub
sbb
sbb
adc
xchg
negb
add
pop
push
outsl
xchg
adcb
mov
mov
in
call
push
mov
mov
mov
mov
sahf
fcmovne
lret
addr16
pushl
mov
mov
mov
xchg
test
cmp
sti
incl
xor
and
aaa
outsb
mov
pop
das
adc
call
adc
cmpsl
mov
add
icebp
ds
lcall
pushl
sbb
in
ljmp
mov
ljmp
rcl
lods
mov
andl
test
in
idiv
test
or
cli
mov
push
cld
lcall
cld
inc
movsb
icebp
ret
pop
idivb
mov
pop
jns
out
pop
push
inc
loope
sbb
nop
in
cltd
xor
adc
jg
aaa
cld
and
or
and
das
fdivrs
ds
ja
lock
cmp
or
cld
adc
push
sbb
push
jge
test
push
js
lds
cs
dec
pop
xor
mov
fucomip
cld
mov
jl
in
sti
psrad
mov
inc
ljmp
or
pushl
adc
mov
fsubl
fisubrl
enter
addl
jg
sub
sbbl
cmp
roll
ror
int3
in
mov
stos
into
xchg
lahf
inc
repnz
nop
test
xchg
xchg
cltd
jnp
xchg
jg
mov
xchg
pop
mov
bound
ja
bound
adc
aaa
stos
jo
jle
push
jg
jle
or
add
adc
inc
mov
add
test
setno
dec
aam
adc
icebp
push
sub
loopne
inc
and
cmp
sub
das
out
push
int3
das
xor
ljmp
add
iret
ss
xor
es
or
leave
ret
shrb
ret
rol
xchg
decl
iret
es
cs
and
int
icebp
and
out
jg
dec
scas
dec
push
pop
std
push
add
mov
dec
dec
mov
in
call
pusha
add
cwtl
sbb
add
or
out
and
ret
jno
jmp
jmp
sub
shrb
jns
and
int
and
mov
mov
icebp
insb
mov
mov
push
mov
add
pop
decb
jae
scas
jge
xchg
insl
jns
fs
xchg
insb
push
xchg
movsl
dec
dec
loopew
fs
mov
inc
test
decb
stos
test
mov
add
pop
adc
rcrb
adc
testl
inc
test
les
jae
das
xchg
mov
push
mov
mov
mov
test
outsl
and
fwait
cmpb
stos
inc
or
sub
shlb
popa
lock
sub
sarb
cmp
push
pop
push
in
mov
push
push
fldt
and
pushl
shll
sub
cmp
cs
aam
lds
xlat
sub
loop
sub
leave
sarl
lret
and
es
rolb
ret
push
and
mov
add
xor
das
jg
addl
mov
dec
push
inc
stos
dec
inc
push
in
inc
dec
lods
push
dec
pop
mov
sbb
pop
pop
xchg
jns
add
push
mov
pop
cli
ja
arpl
mov
ljmp
sub
sahf
xchg
push
pop
fistps
adc
fdivs
adc
repnz
adc
push
cmp
or
sbb
or
es
xor
pushl
lock
ss
das
xor
ss
push
xor
sub
ljmp
mov
adc
pop
call
sbb
add
sti
and
shl
decl
lcall
lock
out
add
call
call
ret
cmp
iret
cld
bound
xchg
inc
dec
dec
mov
jg
orl
xchg
xchg
data16
mov
adc
cmc
lcall
lcall
pop
test
data16
rol
cmp
icebp
in
and
jbe
test
movsb
subl
sbbb
adcl
xchg
jbe
mov
mov
out
cmpsl
scas
pop
out
bndldx
or
pop
in
pop
push
adc
pop
add
negl
inc
sbb
out
lcall
adc
push
icebp
xchg
adc
cmp
jl
js
jg
jbe
insl
mov
adc
inc
sub
xor
xor
dec
dec
pop
mov
dec
dec
in
push
push
stos
adc
adc
add
mov
notb
rol
and
int
aam
into
mov
xor
mov
ss
cmp
ret
into
sub
inc
mov
scas
dec
mov
dec
push
jecxz
and
lock
movsl
lods
sbb
ljmp
decl
loopne
xchg
lods
xchg
jb
sahf
xchg
insb
mov
test
mov
aaa
mov
in
and
cmpsl
mov
push
mov
mov
mov
jecxz
scas
inc
cmpsl
xchg
mov
incl
mov
inc
pop
pop
in
sbb
dec
push
inc
negb
das
sub
pop
pop
dec
lea
xor
mov
popa
mov
xor
jae
bound
mov
xchg
insl
and
jecxz
add
loopne
sub
mov
push
mov
imul
pop
int3
sbb
sbb
hlt
pop
hlt
pushl
and
aam
sub
clc
inc
cmp
sub
sbb
das
xor
ljmp
sub
fld
shrb
mov
sbb
enter
incl
cmp
xlat
sarl
andl
out
add
out
or
in
cli
add
in
call
call
adc
lods
mov
js
add
inc
scas
test
or
sbb
push
mov
call
data16
inc
mov
inc
add
jne
sbb
lds
or
in
push
in
testb
in
adc
ljmp
aad
out
fadd
shrb
fmulp
add
scas
stc
pusha
stos
push
std
fisttps
decl
pop
add
push
add
call
aaa
xor
incl
out
popf
sub
rcr
out
sub
ljmp
or
or
cli
jmp
adc
or
or
add
imul
jl
ljmp
push
cli
hlt
in
aaa
fsub
iret
xor
in
sub
ret
ret
sub
ror
xchg
loopne
inc
hlt
pop
sbb
fdivrs
cmp
jo
out
and
ret
movb
push
xor
lahf
jg,pn
mov
jg
dec
xchg
mov
jne
cwtl
jno
add
pushl
out
aas
popf
dec
dec
push
mov
push
pop
dec
pop
bound
lods
hlt
gs
ljmp
mov
imul
inc
jmp
pop
std
pop
scas
pop
push
push
mov
mov
dec
inc
mov
outsb
fcomip
outsl
dec
lods
es
sub
das
shlb
and
sub
and
gs
push
aad
das
xchg
data16
out
cs
lds
xor
fmull
out
aas
and
in
repnz
sbb
out
sbb
ljmp
lea
shrb
sbb
xchg
popf
popf
outsb
mov
or
insb
mov
test
mov
movsb
inc
mov
mov
sbb
mov
movsb
adc
in
push
push
pop
mov
sub
push
or
push
push
les
push
jle
add
or
lock
cld
pop
inc
inc
add
jns
jns
ds
sbb
cmp
xor
add
pop
fmuls
popf
pushf
mov
lahf
filds
jo
addb
imul
mov
pusha
call
lret
push
test
jle
addr16
jae
mov
jle
aam
and
insb
lea
and
inc
pusha
mov
or
add
call
mov
jg
test
sbb
stc
scas
pusha
add
xor
push
stos
add
pop
lods
incb
jmp
jecxz
loope
loop
pop
dec
movsl
xor
and
sub
fcomip
mov
addr16
add
stc
out
pop
mov
shl
loopne
clc
data16
mov
mov
scas
subl
mov
out
add
and
fldl
ljmp
xor
xor
mov
push
mov
out
pop
adc
xchg
dec
scas
mov
jg
aam
leave
mov
pop
mov
add
movsl
add
movsb
aam
movsl
pop
testb
call
add
mov
inc
pop
imul
ret
xor
push
sub
xor
fldt
or
add
sbb
adc
or
inc
pushf
rcr
fwait
xor
mov
outsl
add
fstpt
fdivs
xchg
xlat
rorb
lock
pop
mov
inc
pop
mov
jmp
loope
in
stos
inc
stos
insb
xchg
push
push
pusha
fwait
adcb
sbb
cmp
iret
addb
add
add
dec
add
mov
lods
and
push
pop
push
lods
dec
add
repz
push
pop
movsl
inc
add
sbb
hlt
add
fdivrs
leave
aas
hlt
and
adc
push
xor
jae
call
lahf
mov
add
enter
adcb
cmp
ffree
mov
aad
shll
addb
in
shlb
vpsubsb
ljmp
cmc
mov
adc
icebp
mov
add
mov
ljmp
int
mov
das
pushl
mov
arpl
hlt
dec
sahf
outsb
addr16
addr16
cmp
cmp
mov
cmp
orb
and
xor
pusha
or
add
rorb
insl
sub
fs
insb
in
inc
or
popa
xchg
outsb
push
jb,pt
inc
addr16
std
cmpsb
jb
outsb
cwtl
rorb
and
adc
add
hlt
or
mov
roll
xchg
pusha
daa
hlt
pop
or
jae
add
outsl
arpl
stos
inc
scas
jb
xchg
add
or
jb
jb
inc
add
sbb
popa
xor
push
inc
sahf
xor
sahf
add
in
scas
jb
insb
lcall
add
jns
xchg
outsw
jb
xchg
popa
shrl
sbb
adcb
sbb
jb
push
xchg
in
testb
dec
lea
shlb
dec
nop
enter
cld
in
shrl
pushf
jb
lcall
outsb
fwait
insb
add
loopne
pushf
imul
ret
jmp
mov
mov
in
and
mov
outsb
push
mov
imul
fcoms
outsb
shll
inc
xchg
andb
push
nop
hlt
mov
adc
scas
roll
lea
je
push
mov
outsl
add
roll
sbb
mov
or
or
jae
fwait
jp
add
add
jb
mov
incl
jne
fs
adc
outsb
ret
shrb
gs
imulb
stos
sub
jb
outsb
mov
dec
push
mov
push
add
mov
repnz
enter
rorl
push
pop
cmp
cld
add
ret
lods
imul
push
lods
pop
jl
pop
and
mov
push
push
and
cmp
xchg
loopne
mov
decl
add
mov
sub
pop
mov
add
push
or
or
mov
aas
push
test
mov
mov
sub
mov
add
je
adcl
cmp
adc
ret
pop
push
add
rorl
ret
pop
or
cmp
icebp
mov
repnz
call
mov
ljmp
decl
dec
mov
inc
cmp
jb
jmp
fs
sub
clc
jne
inc
imul
adc
mov
ss
add
adc
add
pop
insb
flds
cmp
addb
fldt
decl
mov
pop
test
cmpsb
mov
inc
xchg
or
pop
lock
or
jae
clc
push
incl
adcl
dec
jne
repnz
clc
je
je
jecxz
add
mov
jp
ljmp
add
ret
faddp
stos
mov
in
push
inc
hlt
pusha
push
push
call
add
fdivp
test
pusha
cmp
movsl
jge
je
add
sub
inc
pusha
add
jne
call
mov
inc
loopne
fildl
cmpsl
pusha
add
call
mov
add
push
add
jmp
jb
add
dec
add
testb
adc
addb
mov
sbb
cmovs
push
push
cmovo
ja
ret
mov
dec
jbe
aam
sub
ss
scas
add
push
test
jg
xor
sbb
enter
pop
inc
pusha
pop
jmp
push
adc
adc
sub
push
push
pop
add
lret
jne
add
adc
adc
mov
mov
clc
mov
jmp
loopne
and
fistpl
add
pop
add
or
sti
jmp
aas
sub
sub
shlb
scas
jmp
add
add
add
test
mov
pusha
push
clc
insl
ret
xchg
inc
test
push
loopne
cmpl
mov
sbb
and
pop
mov
inc
add
pushf
mov
into
lock
movsb
incb
ret
or
pop
loopne
call
popa
cmp
and
sub
pop
and
scas
or
jnp
mov
add
lods
lcall
push
pushl
aas
mov
mov
call
push
nop
test
clc
in
pop
mov
ljmp
sbb
cli
out
add
jp
jg
push
repnz
jle
call
mov
adc
xchg
loop
or
loope
push
loopne
mov
mov
outsl
negb
jne
pushf
pusha
and
sbbb
incl
loopne
push
loopne
inc
adc
mov
test
mov
cli
sbb
sbb
mov
push
sbb
divb
jle
sub
pusha
adc
mov
push
cmp
jb
adc
mov
add
pushf
xchg
outsb
pop
mov
lods
nop
incl
and
pop
fiadds
pop
pop
pop
mov
sbb
jo
fs
in
bound
loopne
call
mov
adc
pop
test
mov
pop
pop
push
or
push
je
push
or
sub
or
sbb
je
aaa
sub
or
adc
cmp
dec
je
call
fsubs
int3
fildl
adc
flds
mov
filds
cmp
jb
mov
in
push
je
sti
push
inc
test
mov
outsl
mov
inc
sub
adc
faddl
adc
sbb
jne
daa
push
add
call
xor
add
xor
inc
sbb
or
inc
jecxz
mov
sub
outsl
pop
mov
je
ss
hlt
push
je
movzbl
mov
rorl
push
rorb
add
cld
and
mov
shrl
xorb
add
addb
mov
sbb
inc
mov
xchg
push
mov
mov
je
or
mov
outsb
mov
mov
cmp
pop
shlb
testl
cmp
aaa
std
lods
adc
sub
mov
inc
mov
add
cld
inc
lods
fldcw
jb
jmp
cmp
jne
push
test
in
dec
push
sbb
enter
adc
fiaddl
decl
or
addl
jb,pn
add
inc
jmp
cmp
jne
mov
call
add
add
jmp
jl
add
dec
repnz
sbb
inc
add
ret
jb
adcb
ret
inc
jmp
or
dec
adc
pop
or
sbb
stos
call
xor
movsb
hlt
push
add
fldt
std
pop
dec
add
and
fisubs
outsb
mov
or
add
dec
pusha
cmp
je
test
je
inc
and
mov
add
and
rorb
pop
adc
jbe
call
test
in
sub
lahf
lds
test
jo
lock
scas
xor
push
into
in
jg
fwait
mov
jmp
push
jb
test
lea
pop
hlt
mov
fimuls
push
mov
fmull
cld
or
mov
rolb
lock
add
loopne
test
jo
cmp
jge
sub
ds
in
je
addl
add
fcomip
fists
inc
je
testl
add
jmp
loopne
fldt
test
inc
aam
call
insb
aas
setne
ret
adc
repnz
pop
sub
je
add
clc
decl
in
outsl
mov
pop
jmp
mov
or
mov
pop
jo
mov
jb
lock
inc
pop
cmp
cmp
pusha
mov
je
push
stos
lods
mov
scas
clc
pop
push
cmp
lock
and
or
sbb
pop
shlb
push
fwait
enter
adc
sbb
or
mov
loope
movb
cmp
add
mov
jp
dec
add
cli
insl
imul
jne
sbb
fdivrs
inc
mov
adc
scas
mov
xor
add
pop
test
or
dec
jg
cli
add
cmp
insb
push
sarl
jp
aam
sbb
xorb
imul
bound
pop
in
jne
cmp
jp
push
xor
cli
int
mov
and
sbb
daa
jo
lock
dec
call
in
mov
jp
sbb
pop
cld
pushf
call
pop
pushf
adc
push
push
xchg
pop
add
pusha
adc
dec
adc
in
push
xor
dec
inc
lea
sbb
icebp
cmp
xor
call
decb
jne
call
lcall
int3
mov
sahf
add
sub
add
adc
xor
hlt
cmp
insl
xor
in
call
xor
jle
ljmp
lods
and
mov
hlt
add
jmp
inc
xlat
cs
sbb
push
cld
add
sbb
inc
push
mov
xchg
sub
inc
icebp
lock
sbb
call
push
or
or
mov
arpl
add
lcall
push
push
or
lock
mov
inc
add
cmp
add
js
mov
adc
mov
je
outsl
outsl
fsubs
inc
and
add
mov
inc
sti
pop
cld
xor
mov
call
push
test
sub
add
rcr
je
xchg
inc
les
add
xadd
add
adc
ss
add
xor
ret
fistps
test
or
fistpll
jae
rdtsc
add
mov
sbb
jb
adc
xchg
pop
add
test
cli
fadds
nop
or
out
mov
sub
test
jl
jmp
adc
mov
jb
inc
jp
test
cvtps2pd
xor
xor
clc
inc
jo
mov
das
cmp
jne
mov
je
push
inc
mov
inc
sbb
mov
push
adc
or
jl
push
dec
call
lcall
mov
cmp
notl
jb
and
pop
lock
cmp
popa
hlt
push
xor
or
sbb
es
call
mov
cmp
add
outsl
shr
or
mov
aam
lock
mov
testb
fwait
movsb
inc
pop
addl
test
decl
call
jmp
xorb
inc
adc
mov
or
call
movb
rorb
mov
xlat
jo
sbb
outsl
scas
cli
mov
or
es
jb
add
jo
repnz
cli
add
testb
das
inc
push
pop
or
or
fsubrs
add
and
mov
fcom
fildl
add
test
pop
je
jmp
clc
loopne
lock
mov
sbb
outsb
sar
cmp
je
mov
and
add
sub
test
je
mov
ja
sub
loopne
jp
ds
clc
pop
mov
ret
push
mov
mov
mov
mov
or
aad
aad
adc
les
bound
sbb
push
push
or
scas
call
loopne
pop
ret
xchg
sub
jo
adc
outsl
add
or
mov
mov
test
mov
stos
mov
sbb
xor
push
jmp
push
adc
insl
in
xor
pop
pop
cmp
sbb
adc
clc
jo
loopne
in
pop
adc
cli
sbb
push
ret
call
mov
add
out
add
mov
xorl
or
mov
mov
xor
int3
xchg
popa
mov
aaa
icebp
cmp
shlb
inc
jecxz
aam
fbstp
pop
xchg
add
pop
cmp
mov
or
jle
jp
cmpb
push
push
xchg
adc
push
mov
xchg
in
cmp
andb
jl
sbb
jecxz
lea
dec
das
movb
lea
pusha
clc
mov
sbb
rorl
push
add
les
push
and
pop
dec
sbb
lea
enter
outsl
push
dec
and
push
lea
or
orl
repz
jb
inc
in
mov
lcall
mov
int3
or
inc
repnz
or
insb
subb
push
inc
pusha
sti
push
call
inc
adc
add
shr
add
adc
and
inc
roll
ss
push
rolb
cld
dec
mov
adc
das
xchg
or
xchg
and
adc
xchg
add
call
pop
jb
enter
jp
ret
mov
mov
push
clc
add
loopne
mov
faddl
pop
push
insb
das
andb
mov
and
pop
addl
test
sub
inc
fistl
cmp
xor
cld
adc
mov
scas
test
lock
sbb
adc
jg
mov
pop
call
repnz
jmp
addb
addb
dec
fdivr
push
lea
out
jl
add
leave
or
mov
xchg
aas
pop
mov
mov
outsl
mov
ss
call
dec
rolb
test
jp
subb
pop
shrb
scas
orb
sub
call
jb
push
mov
clc
lea
dec
lea
pop
test
subb
js
mov
adc
jle
pop
stos
mov
inc
call
movb
in
add
jo
or
xor
mov
cwtl
mov
ljmp
pminub
or
shl
hlt
rcll
push
push
add
mov
or
enter
js
clc
outsl
pop
push
out
inc
rolb
adc
lds
test
aas
data16
mov
mov
je
inc
adc
add
subl
pusha
xor
mov
adc
push
push
or
call
mov
int
jne
rorb
add
cmp
jne
jne
scas
incl
inc
dec
dec
jl
add
mov
sbb
mov
rep
cmp
inc
add
aas
and
fwait
cmp
mov
fcoml
mov
ret
push
rcll
data16
lcall
or
add
lret
mov
add
out
pop
mov
pop
sub
lods
add
je
adc
cmp
jo
mov
jmp
dec
and
adc
jmp
cmp
pop
dec
pop
andb
mov
rol
out
call
loopne
sti
jmp
inc
loope
ret
and
roll
adc
je
je
fadd
xor
insb
pushf
aas
adc
mov
mov
out
inc
lock
rolb
adcb
xchg
adc
movsb
push
rclb
jbe
pop
push
enter
dec
or
insl
rclb
add
rol
ss
adc
incl
clc
mov
call
push
sbb
test
aam
inc
sub
pop
sub
shl
testb
fdivrp
inc
mov
mov
pop
ret
shll
add
fistpll
ret
xor
jecxz
add
xchg
call
jo
test
sub
pop
mov
add
add
inc
stos
in
or
addl
mov
mov
enter
loopne
push
shl
sub
push
sub
incl
pusha
outsb
xlat
adc
pusha
adc
inc
inc
loopne
and
cmp
loope
jb
pushl
cwtl
jp
inc
loopne
adc
add
loopne
pusha
jg
jg
adc
loopne
lock
fstpt
and
push
inc
hlt
incl
data16
hlt
pop
scas
lea
imulb
call
stos
mov
add
add
push
les
call
mov
sub
in
loopne
pusha
sub
pusha
pavgb
add
nop
repz
xor
ja
add
add
call
sub
lock
adc
lods
push
hlt
dec
loopne
fcoms
xchg
in
push
push
push
jmp
ljmp
punpcklbw
add
rcll
adc
add
movsb
leave
ret
cli
cli
fistl
jmp
jb
or
imul
or
insl
pop
push
xor
clc
das
scas
or
add
cmpsb
subb
or
dec
pop
icebp
cmp
aaa
xor
loop
loopne,pn
je
adc
icebp
or
xchg
les
decl
or
jle
loopne
push
pop
outsb
push
add
mov
lock
push
call
or
push
loope
pop
pop
ret
js
adc
in
insb
test
std
loopne
call
fwait
jmp
xor
movsb
pusha
sub
test
andl
mov
shll
or
jp
xchg
add
add
adc
sub
fcoml
push
call
pusha
xchg
mov
add
ret
enter
arpl
rcl
scas
jo
xchg
mov
cmp
mov
lcall
cmp
je
push
pop
bound
pusha
adc
push
or
push
mov
mov
jns
dec
sbb
mov
cmp
push
inc
xchg
or
cmp
repnz
mov
imulb
mov
mov
jo
jne
les
sub
cmp
mov
scas
outsl
clc
ljmp
cmpsb
add
inc
jl
or
mov
and
lcall
xchg
movsb
pop
fimull
mov
xlat
lods
lcall
jg
mov
cmp
mov
insb
adc
in
icebp
add
in
icebp
das
mov
xchg
in
mov
add
loopne
std
data16
fnsave
aad
adc
or
mov
in
ljmp
pop
lcall
xchg
les
sti
insb
cmp
test
out
cmp
cltd
movsb
insl
sarl
push
and
mov
mov
sub
in
mov
mov
or
sbb
sti
fimull
outsl
cmp
pusha
mov
icebp
clc
cmp
pop
imul
xor
outsl
jg
fistps
adc
sub
xchg
out
inc
cltd
rorb
shrl
push
adc
xlat
mov
cmp
pop
cwtl
dec
add
push
pop
pop
outsl
stos
addb
add
outsl
sub
shrb
out
test
ljmp
mov
les
inc
mov
push
push
pop
mov
loope
add
lock
rcrb
add
es
outsl
jmp
out
cmp
mov
cmp
ja
cmp
das
and
andb
in
fchs
sbb
in
sbb
sbb
leave
sbb
inc
mov
mov
imul
pushl
hlt
push
mov
xor
cmp
pop
jle
call
dec
jg
push
test
pusha
stc
push
dec
pop
xchg
mov
xchg
stos
adc
add
dec
sub
and
jo
add
ljmp
inc
insb
inc
sub
out
icebp
ja
add
lock
sbb
add
int
outsl
fistps
rcrb
mov
mov
in
rolb
lret
cmp
lods
xchg
movl
cmpl
add
test
jp
mov
in
mov
sub
inc
mov
fwait
les
xchg
pop
sbb
mov
enter
aam
clc
scas
clc
cmp
push
push
mov
push
add
sbb
xchg
xor
xor
mov
repnz
ret
notb
cld
fwait
lcall
cmpsl
xchg
inc
adc
out
pop
test
mov
and
adc
dec
dec
test
cmc
mov
les
ret
int3
les
jbe
mov
scas
aad
sbb
mov
nop
hlt
pop
inc
sbb
push
cld
decl
rcl
xchg
ds
xchg
decb
add
add
loopne
pop
fistpl
xor
ljmp
mov
sub
stc
xchg
add
out
sub
rolb
cmp
addr16
sarb
inc
or
mov
clc
jl
mov
pop
lods
outsb
rol
lcall
mov
rcll
int
jp
loopne
add
int3
lahf
jp
add
cmpsb
out
mov
adcl
xchg
fidivl
and
push
dec
xor
jl
mov
pop
or
cli
aas
hlt
cmp
ret
lock
ljmp
icebp
cwtl
call
jno
or
adc
cld
ljmp
clc
push
lea
lock
push
adc
inc
pop
add
notrack
addl
push
push
mov
push
nop
mov
xchg
iret
add
jno
jne
ja
add
sub
cmp
pusha
pop
jmp
cli
outsl
dec
add
pop
jbe
mov
adc
jne
mov
sbb
jb
inc
mov
jl
inc
cwtl
scas
mov
and
nop
mov
add
xor
xor
outsl
mov
pop
int
jmp
mov
mov
mov
pop
hlt
mov
pop
lock
sbb
jle
push
inc
xchg
add
lds
sti
push
inc
jbe
clc
shlb
add
ret
je
ret
xlat
inc
cld
add
jne
push
test
mov
int3
mul
or
incl
pop
jbe
add
push
scas
sar
es
mov
lock
add
ret
mov
inc
jnp
lock
push
jle
call
insb
jg
jecxz
mov
out
popf
icebp
add
or
push
add
bound
ret
push
or
fistpl
call
inc
xchg
push
mov
nop
stc
fisubrs
adc
repnz
sub
pushl
add
xchg
lods
loope
add
sub
jo
hlt
hlt
push
xor
pop
adc
movb
sahf
nop
and
jg
cmp
ljmp
jne
orb
cltd
mov
mov
lock
call
jle
in
ljmp
xor
add
xchg
pop
xor
sbb
adc
sbb
jmp
mov
push
call
push
push
je
mov
xchg
pop
mov
mov
mov
or
add
cld
xor
into
fimuls
mov
leave
mov
call
xor
cmp
xor
aas
outsb
xor
mov
das
les
and
xor
or
xor
or
in
add
loop
mov
mov
sarl
inc
add
push
shll
pop
mov
outsl
mov
rolb
into
pop
mov
jb
xchg
or
pop
cltd
in
mov
scas
stos
enter
or
lret
or
mov
push
aaa
fmull
xor
enter
push
ljmp
inc
popa
ret
cwtl
sahf
test
ds
div
add
jg
mov
jmp
adc
loop
dec
scas
shrb
push
popa
mov
scas
cmp
cld
outsl
pop
enter
or
inc
mov
mov
cmp
adc
add
or
adc
jle
dec
mov
inc
mov
add
pusha
mov
mov
call
pop
dec
add
cmp
xor
sub
call
shlb
mov
rolb
pop
xor
xor
fisubrl
mov
or
or
dec
call
jg
sbb
add
fsubl
out
fsubl
aad
pop
icebp
sub
clc
mov
mov
jl
adc
lcall
xchg
or
test
jge
cmp
cld
mov
andl
lcall
add
pop
mov
cmp
jp
pusha
adc
jl
push
hlt
addl
bound
addb
xor
add
xor
cmp
test
mov
sarb
clc
das
mov
stos
je
mov
xor
jle
jo
mov
bound
testb
mov
cmp
je
mov
rcr
dec
ss
or
inc
adc
push
mov
inc
inc
jne
test
sub
add
dec
adc
adc
clc
jmp
mov
dec
mov
dec
sub
adc
fimuls
and
or
pop
adc
and
xchg
ret
or
mov
dec
mov
je
mov
add
push
jl
or
fidivl
cli
adc
sub
push
adc
aaa
push
jge
push
push
xchg
adc
xchg
inc
das
clc
jg
inc
lock
or
mov
fadds
cld
lock
dec
clc
incl
jae
or
cmp
aaa
lock
xor
add
mov
rclb
jo
mov
mov
incl
push
mov
mull
lock
xor
inc
lock
sahf
adc
call
push
in
xor
add
fisttps
int3
imul
out
mov
jmp
sbb
movl
stc
nop
add
es
mov
push
cmp
or
scas
out
or
fbstp
rorb
jmp
mov
jo
test
rcrb
mov
jo
push
cmpsb
das
dec
pop
or
mov
faddl
xlat
cli
incl
push
lret
div
dec
mov
outsb
mov
add
pop
or
pop
sbb
js
cmp
mov
imull
mov
xor
inc
addb
scas
add
pop
in
mov
clc
sbb
hsubpd
pop
mov
pop
add
xchg
vmread
inc
mov
jo
add
and
and
fnsave
jl
sub
jns
adc
rcll
test
fisubs
adc
or
mov
pop
shr
sahf
add
xor
fistps
and
rolb
loopne
jge
inc
sub
mov
sub
jl
stos
pop
call
out
ja
je
push
call
push
cli
rcl
aam
cld
dec
or
inc
push
jge
cmp
xlat
idivb
aaa
in
aam
xchg
xchg
call
push
or
decl
popa
lcall
mov
int
jb
subl
add
pop
mov
scas
push
sub
add
mov
cld
subb
in
adc
hlt
dec
mov
and
push
inc
xchg
testl
jne
fs
mov
inc
pop
cmpsb
and
or
inc
cmp
mov
sarb
cmpb
imull
shlb
pop
cwtl
dec
or
dec
sarb
aaa
sub
lods
or
add
aam
add
je
daa
jmp
hlt
mov
lock
call
pusha
inc
push
add
lea
pop
aaa
sahf
loopne
leave
inc
rorb
xor
adc
mov
mov
jb
cmp
ja
testb
jne
sub
push
jae
idivb
lea
inc
jb
mov
dec
sti
punpckhdq
mov
lods
or
dec
call
in
cmp
adc
xor
aam
cmpsb
dec
pop
sub
xchg
cmpsb
and
cli
pushl
rorb
jne
cmp
ret
jne
jb
mov
loopne
cli
ljmp
push
aaa
or
mov
sbb
jecxz
idiv
pop
pop
outsb
gs
ret
mov
imul
add
mov
lea
call
mov
and
das
adc
add
jl
incb
push
ds
mov
call
inc
cmpsl
pusha
out
mov
mov
pop
push
ja
push
adc
sbb
fmull
pop
shll
mov
push
decl
cmpsb
or
out
pop
data16
int3
call
loopne
sahf
cmp
sbb
mull
sub
dec
cld
test
adc
mov
mov
lock
subb
jnp
loope
movsl
aas
sbb
adc
out
fadds
call
aam
outsl
sub
lock
daa
ror
inc
enter
mov
mov
call
add
ss
mov
movb
js
hlt
idiv
add
loope
xchg
inc
pop
push
sbb
fstps
sti
outsb
xor
out
enter
ds
test
mov
repz
xorl
push
push
cld
jne
stc
aaa
mov
mov
test
jne
jmp
add
outsb
fcomi
sub
xor
fs
sub
push
loopne
mov
push
push
cmp
vsqrtpd
daa
or
call
loop
imul
xlat
xor
cmp
psubq
pop
jns
es
pop
mov
and
push
inc
add
pop
adc
loopne
pop
xorb
sub
data16
clc
fucom
cmp
add
add
mov
test
inc
push
andb
shr
push
je
inc
ja
jl
or
addb
jne
mov
in
push
xchg
daa
lea
inc
xchg
cmpl
xor
scas
cwtl
jecxz
push
data16
aas
add
jg
arpl
les
jbe
mov
adcb
inc
cmp
push
call
inc
push
neg
mov
push
push
je
mov
jle
cmp
es
xor
lock
mov
jle
push
call
pushf
addl
dec
mov
xchg
xorb
pop
xlat
test
push
enter
mov
inc
pusha
sahf
inc
add
or
test
out
pop
hlt
cmp
mov
lock
push
insb
in
push
clc
scas
mov
push
loope
jl
lock
imul
mov
data16
je
dec
adc
push
call
data16
int
shlb
stos
or
andl
rclb
adc
cwtl
dec
insb
mov
adc
sub
fisubrs
test
or
ret
jmp
mov
or
lea
dec
emms
aad
mov
xor
mov
or
popl
lea
xor
push
stos
dec
in
cmp
mov
sub
jbe
or
pop
test
in
jae
push
xchg
les
sbb
popl
dec
outsl
mov
xor
scas
lea
xchg
adc
xchg
ja
cmpsb
sub
mov
mov
mov
cmp
jmp
test
jmp
or
xchg
daa
dec
out
mov
filds
sub
mov
or
rorb
fmul
ljmp
lea
into
testb
xchg
jns
rcll
cmp
jbe
call
push
jb
push
xchg
add
xor
jne
test
or
xlat
and
jmp
data16
cmp
push
cmp
je
cmp
je
cmp
je
xor
lock
fucomi
lock
jmp
mov
jmp
mov
jmp
mov
inc
je
mov
sti
divb
inc
jbe
push
mov
xor
in
jle
pop
jle
push
sub
mov
dec
fcoml
or
mov
inc
mov
dec
pop
add
add
inc
popf
push
cwtl
into
pop
repz
push
loopne
jns
cmpsb
or
sub
js
lcall
inc
or
jecxz
subb
ss
cmp
pushl
and
jb
push
lea
mov
fimuls
push
loop
call
mov
cmp
lock
jle
sti
in
clc
out
mov
int3
leave
mov
cmp
lods
xor
dec
loopne,pn
cmp
mov
inc
iret
dec
decl
daa
xchg
lea
jb
in
loopne
fwait
push
mov
lahf
add
xor
sub
push
call
out
jmp
ja
cmp
push
sub
push
scas
shrl
scas
faddl
fisubs
add
or
xchg
push
sarb
insl
int3
test
xchg
dec
test
idivl
addl
xchg
outsl
push
inc
shlb
inc
or
fdiv
dec
rorl
incb
inc
mov
or
or
mov
loopne
cmp
or
lods
or
aad
mov
rorb
jb
cs
xchg
dec
cmpsl
in
xchg
mov
pop
add
fbstp
pop
call
pop
adc
jl
mov
mov
jne
addb
jnp,pn
lret
mov
adc
dec
jg
mov
int3
jbe
sub
fistpl
adc
into
rcrb
mov
mov
pop
or
cmp
push
push
xchg
addb
sbb
inc
push
std
scas
cli
pop
jl
or
es
movb
xchg
cmp
jne
std
and
cli
ret
jb,pt
adc
add
add
add
sub
and
or
mov
adcl
push
stos
loopne
pop
push
sbbl
test
push
lock
mov
push
es
inc
mov
je
lock
push
pop
pushf
rorb
lock
movzwl
test
pop
aam
pushl
cmpl
jae
xchg
and
adc
dec
adc
jbe,pn
cmp
clc
push
inc
aas
cmp
inc
or
mov
push
sub
mov
hlt
pop
test
adc
push
out
scas
stos
setns
push
push
cmp
sub
out
jo
in
lea
cmpsb
data16
mov
std
mov
les
test
mov
in
add
test
jne
inc
lods
and
scas
sub
xchg
push
push
push
dec
adc
sbb
cmpl
into
fdiv
xchg
rclb
fdivr
pop
cmp
ja
or
inc
sub
filds
push
pop
xor
or
mov
mov
and
into
into
push
call
lds
adc
into
jne
out
push
or
cmpl
lods
call
scas
rcl
add
add
mov
call
adc
push
clc
inc
leave
ret
mov
sbb
push
test
add
andb
fidivl
outsb
mov
orb
cmp
cli
decl
cmpsl
xchg
sbb
mov
cmp
push
inc
dec
cmp
jbe
testb
sub
cli
xor
fsubrp
cld
insl
mov
ja
cld
mov
js
clc
dec
jae
stos
cld
stos
mov
lock
mov
lock
push
sti
sub
add
mov
clc
jp
sub
pop
cmpsb
lods
mov
add
js
jle
notb
in
push
pop
inc
add
sahf
push
cmpsb
enter
ljmp
xor
lock
jne
jb
add
mov
fidivs
imul
add
stos
addb
sbb
push
xor
lea
fucomi
adc
sahf
daa
jmp
ja
divb
call
clc
push
pop
in
fimull
outsl
in
xchg
dec
sbb
cmp
out
lea
ss
lea
enter
int3
dec
testl
or
jmp
mov
out
push
push
push
je
push
je
pop
mov
cmp
push
jb
je
cmp
lea
cmp
ja
data16
adc
js
jne
sub
std
ud0
jae
xor
jmp
stc
mov
sub
mov
adc
hlt
mov
rorb
mov
jl
mov
jp
je
jl
clc
imulb
jbe
testl
scas
out
jae
loope
rolb
lock
mov
loop
clc
outsl
mov
cld
dec
or
inc
pop
jl
cltd
sahf
push
insb
pop
or
sub
outsb
decb
push
cmc
cmp
cmp
iret
push
sub
add
add
add
shl
call
cmpsb
test
jo
add
cmpsb
mov
outsl
loope
dec
andb
fists
push
xchg
movsb
push
add
cs
mov
out
adc
lock
hlt
push
mov
or
cmp
pop
inc
inc
push
jbe
adc
fsub
add
pop
scas
mov
mov
add
mov
sub
test
adc
fldcw
cmpsb
cmp
rolb
insb
in
mov
sbb
push
pusha
in
jmp
cmp
call
loope
xlat
sbb
add
push
dec
mov
cmp
cmp
or
shlb
dec
cmpsl
and
mov
xor
push
ss
xor
loopne
sub
inc
sbb
xchg
fists
mov
cld
jge
xor
je
pushl
je
or
notl
xor
iret
out
mov
dec
shl
xchg
adc
inc
out
push
hlt
push
data16
and
pop
sub
dec
mov
addl
data16
das
xor
stc
adc
cld
cmpsb
push
sbbb
xchg
adc
xchg
imulb
add
mov
mull
sbb
sbbl
rcr
mov
jbe
fdivrs
cmc
mov
outsb
cli
cmp
push
mov
icebp
mov
jb
push
push
in
push
mov
or
xchg
shlb
push
mov
pop
jp
mov
cld
incl
sbb
mov
or
es
outsb
test
add
call
and
or
push
psubb
shrb
call
jge
xorb
cmpsl
inc
enter
sub
fsubrs
pop
mov
cmp
mov
push
inc
cld
mov
push
pop
je
pop
fbld
push
push
out
out
aad
idivl
pop
xlat
adc
push
push
testb
inc
add
mov
fiadds
adc
mov
xchg
jmp
mov
cltd
fs
out
pop
cmp
mov
push
daa
scas
cli
mov
mov
test
cmp
fisttps
pop
mov
leave
fidivrs
mov
inc
add
sub
rclb
or
jmp
xchg
jle
pusha
mov
add
outsb
jl
icebp
add
jae
aaa
mov
jl
addb
out
orb
adc
cld
xchg
je
in
pop
mull
pop
push
mov
imul
cwtl
data16
nopl
lret
lahf
xchg
sub
xorb
sysenter
pop
jo
xor
aas
mov
or
mov
pop
es
ret
test
call
push
push
or
dec
adc
inc
ret
loopne
fbstp
push
push
je
imul
add
sub
pop
into
les
ja
dec
jne
mov
scas
in
ret
lahf
icebp
adc
add
xchg
jo
fistpll
ljmp
dec
jbe
hlt
adc
sbb
inc
and
sub
fdivl
pop
fucomi
lcall
adc
cltd
jp
or
push
push
js
mov
insb
inc
movsb
jbe
ficomps
call
pop
and
cmpsb
xchg
add
fstl
xor
dec
add
pop
sbb
filds
inc
add
inc
scas
call
xchg
add
mov
int3
mov
xor
cmpb
push
dec
push
divb
cli
rorl
add
or
push
lock
or
xchg
mov
push
or
cmp
js
sub
xchg
ret
pop
xchg
push
cmp
add
mov
xor
pop
neg
lcall
xor
mov
movl
pop
jb
dec
cmpsl
js
sbb
jl
xchg
dec
div
cmp
mov
inc
jo
in
push
jb
mov
sub
jmp
andb
lcall
sub
cmp
call
and
outsb
out
or
call
sbb
adc
push
lea
xchg
push
call
das
lock
push
cmpb
sub
push
mov
pop
subb
xorb
xchg
cmpsb
in
and
lock
pop
mov
outsl
xor
sub
decl
mov
subb
xor
subl
cld
subb
and
leave
push
sbb
push
inc
jle
sub
jl
mov
insl
clc
test
or
ljmp
xchg
orb
orb
pop
sbb
adc
adc
push
cmp
jnp
pop
sbb
xor
call
std
add
push
jmp
xor
pop
mov
in
enter
in
ss
roll
in
add
sbb
out
les
pop
test
mov
lock
pop
adc
push
rorb
je
xor
call
rolb
jg
ss
pusha
cmp
sub
icebp
sbb
cmp
or
pop
aaa
fcoms
add
dec
mov
push
jmp
jnp
inc
je
push
insb
dec
rcrb
cmp
fbstp
enter
lcall
jne
push
push
inc
push
add
sbb
add
adc
pushl
push
outsl
movsb
outsb
inc
and
add
cmp
test
sbb
inc
sub
decl
mov
or
mov
add
call
mov
ret
mov
leave
jne
cmc
push
or
push
lock
in
mov
cmp
ficompl
mov
into
pop
jae
mov
inc
add
push
test
jne
fsubr
scas
mov
push
xchg
add
data16
pop
xchg
lret
push
jge
add
sub
cmp
in
jg
outsl
and
jmp
jne
push
push
or
mov
add
sub
mov
mov
jmp
inc
jmp
int3
stos
dec
incl
inc
ret
je
call
aas
call
xor
add
ljmp
lea
shlb
jnp
fists
pop
add
inc
adc
rcl
shlb
cld
daa
cld
test
add
add
cltd
aam
ror
pop
inc
jge
mov
test
inc
xlat
push
jo
jmp
cli
in
rcll
sbb
mov
pop
stos
push
inc
mov
ret
in
sarl
pushf
int3
sbb
inc
repz
mov
sar
dec
loopne
adc
adc
add
cmp
test
mov
je
aas
cmp
jb
adc
jg
outsl
loope
mov
mov
into
call
sti
mov
jp
adc
jp
mov
mov
je
and
rcrl
adc
nop
mov
add
pop
mov
mov
out
addb
pusha
bound
dec
or
lods
or
mov
adc
ds
or
enter
es
jmp
xor
xor
cmp
aaa
xlat
call
incl
adc
mov
lea
add
mov
adc
in
ja
js
pusha
pop
or
sbb
or
xor
or
scas
sbb
andb
pop
inc
cmp
mov
push
outsl
repnz
jle
dec
cld
pusha
jle
insb
cld
push
adc
std
loope
shl
inc
ret
arpl
push
out
lcall
int3
loop
je
push
xchg
mov
add
push
push
add
cld
loopne
mov
xchg
push
xor
mov
add
call
pop
mov
dec
int3
add
pop
or
add
outsb
loope
adc
mov
rclb
push
ljmp
lods
adcb
or
fistl
loopne
and
filds
fwait
sub
imul
lock
pusha
fisttpl
outsb
adc
sbb
mov
jne
add
cmp
push
les
mov
or
rorb
mov
loopne
ret
pushf
sti
in
andb
stos
loopne
mov
icebp
loopne
pusha
orb
add
loop
inc
movsb
out
pop
mov
pusha
sub
dec
fildl
jb
in
sbb
ja
add
mov
xchg
and
rcr
sbb
push
push
loop
xor
stos
pop
inc
xor
clc
push
push
mov
scas
push
mov
sti
popf
test
and
pusha
pop
sbb
hlt
call
jge
jp
loopne
ret
int3
cmp
dec
xchg
ljmp
out
add
push
lods
push
jg
decl
shrb
repz
jmp
hlt
ret
nop
add
movsb
fistl
leave
lods
jl
sbb
sub
push
dec
stos
cmp
xchg
dec
pusha
push
loopne
loopne
add
or
js
ds
lods
mul
push
mov
test
outsb
shr
ss
loopne
push
push
sub
sbb
pushf
in
lock
push
mov
andl
dec
xchg
mov
loopne
xor
mov
push
lods
fnsave
mov
into
mov
lock
mov
sub
in
mov
push
cli
lret
jle
call
or
adc
adc
sbb
adc
mov
adc
pusha
xchg
loop
mov
movsb
push
xor
jle
movsb
icebp
push
ss
adc
sub
mov
cmp
test
sub
into
push
sbb
sbb
add
ds
mov
push
push
out
add
jg
mov
inc
stos
xor
pop
lea
test
mov
dec
lock
xor
push
xchg
loopne
push
subb
pop
sbb
lea
xchg
mov
repnz
xchg
and
aad
fstpt
pusha
xor
mov
inc
cmp
lcall
xor
cmp
out
scas
call
cmp
ret
mov
push
jp
mov
or
xchg
push
push
arpl
add
jnp
test
jbe
add
aaa
or
shrl
mov
cli
je
cmp
call
dec
loopne
add
cli
loopne
imul
outsl
pop
shlb
movsb
into
lock
mov
lea
fs
pop
std
jb
sbb
scas
int
sub
dec
jp
hlt
xchg
decl
adc
add
cld
mov
xor
call
pop
das
std
stos
add
mov
push
pop
xchg
int
or
lcall
jb
adc
lock
xor
mov
ret
stos
in
push
jb
lock
inc
jge
inc
mov
inc
or
pusha
icebp
add
int
cli
fsubrs
ret
lock
or
or
xor
mov
sub
loope,pt
or
ljmp
add
xor
sbb
inc
and
or
lock
sub
jo
mov
jp
mov
fbld
std
call
inc
inc
test
call
leave
mov
xor
aad
pushl
jl
inc
lods
push
cmp
sti
rclb
pusha
adc
ja
xor
aaa
add
jb
sbb
call
jecxz
incl
add
cld
mov
pop
test
mov
out
sbb
add
pop
and
loop
ficoms
jmp
jge
add
jbe
push
cmp
sbb
ja
jg
pop
jl
adc
mov
adc
add
xor
inc
mov
xchg
add
lea
xor
mov
xorl
clc
inc
jmp
jno
je
incl
mov
jne
xor
enter
inc
push
mov
mov
pop
mov
and
ret
pop
or
add
pop
cmp
mov
addl
mov
pop
pop
push
testl
lret
mov
add
cmp
ja
push
jo
add
cmp
rol
stos
mov
mov
and
mov
add
xor
jo
add
or
xchg
cmpsb
mov
mov
stos
jbe
dec
fadd
repz
xor
rep
xor
push
cmpl
push
call
hlt
lret
jo
adc
jge
lock
cmpsl
mulb
decb
incl
inc
xchg
lret
mov
mov
cmp
push
xor
lcall
divl
jo
xor
inc
or
push
inc
testb
and
in
incb
cmp
jne
jmp
in
and
add
je
mov
pop
insb
adc
fiaddl
dec
aas
lea
xor
xor
mov
rcr
or
dec
or
inc
lcall
fdivl
cmp
mov
aaa
mov
mov
mov
call
jno
divb
cli
jp
jbe
mov
jecxz
icebp
mov
xor
jle
jo
testb
add
clc
sbb
iret
jmp
icebp
push
mov
cmpl
and
mov
cmpsl
and
jle
add
adc
push
sub
jle
push
je
clc
mov
xor
cmp
push
testl
cli
es
sbb
iret
pop
push
pop
mov
es
sbb
add
jge
je
addl
push
loope
lock
andl
or
sub
and
add
arpl
add
push
incl
cli
dec
mov
icebp
cmp
mov
divb
or
xor
loopne
and
jno
sbb
mov
mov
jmp
jl
js
mov
js
adc
cld
enter
xlat
outsl
mov
cld
pop
cwtl
leave
sub
lock
icebp
bound
es
push
add
insb
mov
mov
mov
push
hlt
xchg
xchg
out
or
repz
in
incl
dec
adc
scas
xor
fs
add
jno
add
mov
sar
pop
jl
aas
xor
nop
mov
in
add
fldt
xor
push
mov
adc
xor
xor
push
pop
add
stos
mov
jo
adc
cmp
lcall
aas
xor
xor
repz
and
jo
call
hlt
jmp
mov
add
mov
add
dec
pop
mov
xchg
test
fistpll
call
inc
inc
jmp
sbb
inc
add
pop
mov
push
call
outsl
push
shl
dec
mov
jle
sub
xor
mov
ss
mov
or
jl
or
mov
mov
dec
jmp
jl
aaa
icebp
decl
xor
pop
jae
sub
pop
and
fldcw
shl
lea
sarb
add
js
xor
and
jne
and
call
daa
test
fisttpl
jnp
adc
or
pop
mov
sub
pop
lock
sub
jg
clc
or
cmp
push
cld
pop
mov
adc
jno
into
push
fdivrs
add
mov
lea
inc
iret
or
shlb
fwait
jl
push
std
add
movsb
xchg
adc
fbstp
mov
adc
sbb
pop
or
or
xor
xor
add
fwait
add
cmp
jmp
xor
push
xor
enter
pop
push
ss
inc
outsb
adcl
xor
adc
fisubs
xor
jno
cmp
test
inc
xor
call
push
mov
hlt
call
inc
fildl
insl
pushl
xor
push
mov
ret
inc
mov
sbb
fwait
adc
adcl
push
fidivs
inc
push
mov
or
mov
andb
clc
shrb
adc
adc
pop
clc
adc
jo
out
pop
or
pushl
lea
lret
call
ss
or
pop
cmc
stc
xchg
add
je
adc
xor
adcb
pop
add
jp
test
mov
push
cmp
push
cltd
and
and
jmp
insb
add
les
notl
call
fs
add
stos
hlt
pop
sub
leave
pop
cmp
push
inc
mov
insl
cli
lcall
mov
push
xor
or
pop
insb
add
jle
cmp
ret
jl
mov
adc
inc
shlb
jo
jg
add
or
orps
or
lret
jb
dec
add
frstor
andb
adc
add
clc
in
call
pop
and
int3
add
add
xor
lea
dec
inc
mov
mov
jle
cli
sbb
daa
andl
xchg
push
add
add
mov
jle
add
ret
mov
mov
sub
cs
xor
jbe
add
or
jl
mov
or
int3
shll
rorl
loope
jo
stos
add
incb
add
pop
pop
jno
inc
repz
jno
inc
mov
adc
shlb
hlt
xor
lock
shl
clc
fiaddl
mov
movsb
pop
add
adc
loope
fcompl
xchg
clc
or
jecxz
ljmp
clc
push
and
sbbb
add
jo
in
inc
mov
enter
adc
push
dec
add
pushf
cmp
cmp
sbb
xchg
mov
lock
mov
outsl
add
push
ljmp
add
mov
sbb
xchg
pusha
jbe
pop
loopne
sub
cli
adc
inc
pop
int3
les
add
add
sarl
dec
cld
adc
call
ljmp
ljmp
cmp
pop
fmull
jbe
pop
xchg
in
add
enter
add
adc
js,pt
sub
shl
scas
shrb
ret
pop
pusha
sub
sbb
idivb
xchg
lock
cli
push
jbe
movzbl
adc
mov
pushl
dec
and
mov
add
out
ret
outsb
mov
adc
mov
or
mov
sub
adc
test
push
rorb
mov
call
rolb
pop
rorb
xor
mov
cld
jbe
adc
or
xchg
sbb
es
push
sub
jne
test
repnz
jne
push
andb
or
adc
movl
lret
call
jecxz
mov
mov
inc
cld
imul
add
call
inc
ja
ja
and
add
aaa
jne
mov
mov
cmpb
in
add
jbe
or
loope
mov
jne
idivb
call
add
push
test
std
adc
sarb
xor
insb
rcrb
pop
adc
xchg
add
je
adc
push
pop
xchg
addl
push
jl
sbb
fwait
or
push
pop
add
or
jbe
ret
jbe
repnz
mov
pop
bound
lock
or
adc
negb
fbld
rcrb
mov
or
incb
mov
jmp
sub
jge
rorb
je
push
cmpb
add
and
and
dec
jne
adc
and
scas
push
sbb
cwtl
rclb
data16
pushl
fdivs
in
movzwl
add
jb
cmp
mov
push
cld
inc
rolb
or
pop
leave
cmp
mov
dec
lret
test
push
or
dec
lret
int3
nop
push
cmp
mov
xchg
movsb
xchg
add
mov
and
pop
adc
adc
test
adc
cmp
js
or
call
or
mov
mov
ret
ds
jp
scas
call
or
and
xlat
sbb
push
dec
mov
inc
shrb
or
mov
mov
call
mov
push
andl
xor
inc
cld
adc
test
xchg
push
adc
adc
call
cli
ljmp
sbb
ret
rclb
sbb
add
add
testb
je
rolb
mov
mov
push
xchg
adc
icebp
shlb
push
cmp
in
xor
aas
ret
cmpsl
adc
and
xchg
int3
aam
mov
sub
sarl
pop
cld
shlb
aad
pop
lock
mov
add
shrl
inc
sub
pop
leave
ljmp
lock
add
push
mov
call
dec
es
repz
stos
orb
xor
cld
push
xchg
icebp
or
sub
bound
cld
xchg
adc
sub
add
adc
repz
or
dec
call
adcl
jb
and
pusha
loopne
fiaddl
pop
call
mulb
jne
add
xor
gs
ss
and
jmp
add
push
xor
push
pusha
and
or
mov
leave
adc
push
add
push
bound
sahf
fistl
jl
and
test
add
dec
int3
and
dec
lods
loop
add
mov
and
in
mov
sarl
out
jne
jb
adc
mov
inc
sti
pop
and
and
inc
lahf
adc
call
xor
bound
shll
test
psraw
nop
fcomps
addb
or
dec
mov
shrb
jbe
lea
subb
roll
decb
sbb
pusha
adc
lock
lahf
and
pop
mov
pusha
xor
pop
sbb
xor
repnz
push
aam
incl
pop
push
in
pusha
pop
pusha
adc
mov
sti
xor
iret
and
aas
add
or
lods
ljmp
dec
les
pop
mov
add
add
pop
add
add
lcall
mov
add
add
add
mov
push
inc
mov
std
adc
lea
pusha
or
sub
sti
loopne
daa
xchg
hlt
add
fcomps
rorl
inc
lcall
clc
bound
cmp
mov
in
popa
mov
andl
adc
rol
ret
inc
ret
lea
pop
pushl
fmull
push
jnp
push
jne
test
cld
in
add
insb
pop
and
mov
xor
jne
add
cmpsb
fs
or
add
jle
fmuls
push
call
data16
loopne
test
in
jo
pusha
cmp
test
jg
bound
push
adc
add
loopne
or
xor
mov
shr
ret
das
mov
or
jae
push
dec
add
push
xchg
adc
push
mov
fidivl
xchg
cld
movsb
stc
push
call
pusha
pop
or
push
mov
push
push
pop
or
and
enter
cwtl
sbb
out
test
std
dec
call
dec
adcl
xchg
mov
fcoml
pusha
inc
cs
push
sub
adc
aaa
ret
mov
addb
dec
add
cmp
push
lahf
cmp
fucomi
or
in
cmp
push
mov
loopne
in
adc
mov
hlt
mov
pop
push
pop
lea
call
mov
pusha
pop
addr16
push
inc
addb
ljmp
das
xor
and
loopne
jb
xchg
testb
lods
add
in
in
pop
add
sbb
mov
push
hlt
mov
arpl
cld
sub
aaa
adc
aaa
imul
call
inc
sub
mov
fidivl
mov
pop
int3
xlat
mov
out
push
scas
add
cltd
call
mov
fdivs
push
add
decl
cmp
or
mov
bound
jmp
sbb
loope
xor
cmp
add
ds
dec
loop
adc
call
add
and
js
lcall
fs
mov
pop
divl
arpl
stc
ss
mov
xor
je
vmwrite
jo
and
add
pop
inc
nop
jmp
in
pop
xchg
data16
inc
inc
outsl
push
ja
sbb
push
xor
inc
adc
fdivrs
test
sub
in
cmp
mov
pushl
or
lock
xor
scas
adc
push
jo
pop
gs
call
gs
jo
add
mov
inc
add
and
cmc
mov
add
cmpsl
push
xor
je
jae
jmp
pop
cmp
or
mov
xor
scas
xchg
ljmp
adc
in
aaa
mov
jo
sti
and
xor
into
sbb
sub
mov
adc
jne
sub
add
jno
out
push
fcomps
xchg
mov
mov
dec
scas
clc
incl
mov
aaa
stos
add
aaa
push
push
jp
xor
push
mov
sub
orb
jae
pusha
mov
or
mov
push
and
or
jb
icebp
and
or
and
jmp
xor
fs
and
idiv
sbb
test
je
jnp
fsubl
adc
xor
mov
and
mov
mov
ljmp
ds
jmp
cmc
pop
lock
mov
xchg
test
pop
lret
push
aam
inc
mov
jae
das
dec
jle
pop
adc
adc
jo
mov
or
fdivr
inc
clc
mov
call
test
mov
cmp
push
push
sbb
ss
xor
mov
mov
mov
jb
ds
test
jo
dec
mov
inc
lods
call
inc
fildll
add
pop
xchg
mov
decl
dec
push
clc
cmpxchg
sbb
pushf
add
psubw
cli
jp
jne
mov
xchg
sbb
push
push
adc
or
int3
adc
ret
push
fsub
mov
adc
push
sbb
lock
jle
mov
mov
add
addl
mov
cli
in
adc
xor
dec
pop
push
jl
add
add
faddp
cld
fisttpl
mov
into
lock
mov
cld
faddp
or
orb
repnz
aaa
pop
inc
add
mov
add
xor
jg
call
jo
push
pop
mov
and
add
and
mov
adc
cmp
cmp
or
ljmp
mov
push
inc
xchg
mov
sbb
add
lock
ja
cmp
aad
sub
dec
jno
call
jb
lret
clc
aaa
pushl
icebp
or
pop
and
adc
jae
xor
test
addb
add
sbb
pusha
pop
cmp
pop
mov
mov
aam
inc
idivb
and
push
or
call
int3
enter
add
jmp
int3
adc
sub
inc
add
int3
pop
je
into
add
subl
push
int3
nop
or
dec
int3
arpl
jl
rclb
addb
je
mov
sub
pop
lock
dec
push
pop
add
pusha
pusha
add
cmp
lock
jecxz
jo
cmpsb
scas
and
std
subb
or
repz
adc
aas
incl
jb
jno
xor
push
call
cmp
jae
adcl
add
add
and
popa
mov
push
call
inc
adcl
jnp
mov
mov
shll
inc
imul
mov
outsl
out
shl
pop
xor
stc
pop
add
mov
mov
scas
icebp
outsl
push
lock
push
int3
or
mov
or
cld
inc
fmull
pop
jno
sub
loope
pop
testb
mov
sbb
xor
xor
icebp
dec
jle
sub
xchg
inc
add
cmp
lock
loop
out
adc
fsts
movsb
mov
mov
mov
mov
lea
or
lahf
orl
cli
mov
push
je
adc
cmpsl
sbb
fildl
jne
push
inc
pop
js
xor
xor
add
mov
jg
in
add
jne
and
bound
loopne
cld
inc
add
icebp
jp
jg
mov
lea
lock
xor
xorl
das
adc
xor
push
xor
js
xor
je
lea
pop
adc
pop
jmp
addb
inc
mov
push
lea
or
test
pop
jne
cmp
ds
lea
ljmp
jecxz
mov
jno
and
xor
push
lea
test
mov
aas
es
jmp
lea
jle
pusha
inc
subb
jo
or
aaa
mov
push
je
mov
lcall
sub
jae
add
inc
or
stos
es
xor
call
and
cmp
sbb
xorl
aas
pushf
mov
xor
xor
call
xchg
popa
mov
hlt
mov
push
jb
lock
mov
adc
sub
sbb
call
sbb
pop
int3
rolb
or
xor
pop
lock
lret
dec
pushl
sub
adc
or
xor
stc
sub
stos
mov
or
lods
or
mov
inc
fdivrl
pop
divl
hlt
fwait
lcall
mov
jmp
js
or
call
mov
incl
inc
hlt
xor
cmp
js
imul
jmp
sbbb
loopne
mov
or
or
push
andb
jmp
xor
add
enter
xor
inc
in
add
mov
xor
call
fcomps
push
jne
in
add
mov
dec
mov
jne
js
repz
add
call
inc
push
loop
sti
call
add
dec
call
dec
je
test
xchg
xor
jbe
mov
push
bnd
test
cwtl
adc
loop
dec
data16
cli
dec
push
mov
sbb
inc
push
and
call
test
test
repnz
sbb
mov
repnz
dec
fsubr
cwtl
jl
les
push
rcrb
ja
mov
jne
cmp
das
add
mov
in
jp
mov
sub
js
loop
push
add
xorb
xor
fistl
mov
stos
rolb
jnp
stos
cld
mov
outsl
or
sti
clc
dec
push
mov
mov
mov
jmp
add
dec
call
lods
rorb
sti
stos
xor
push
dec
jbe
addl
cld
add
jp
mov
shl
in
jmp
sbb
jmp
pop
mov
sub
mov
inc
adc
test
shlb
out
adc
scas
cmp
cmpsb
mov
push
jo
jne
scas
adc
jp
jne
les
inc
ret
xchg
push
add
repnz
stc
inc
daa
add
xchg
andb
add
mov
sbb
add
jle
mov
fstpt
sbb
fcoms
add
xor
sti
xchg
dec
mov
repnz
rol
call
cmp
scas
fs
inc
and
fdivs
je
jmp
push
xor
scas
cli
or
mov
jne
xchg
adc
pop
cli
in
call
dec
or
jbe
or
imul
lock
jle
xchg
jge
out
jmp
mov
add
sarl
xchg
shlb
or
mov
dec
clc
xchg
stos
fidivrl
pop
rcrl
test
jne
fcompl
cmp
or
and
pusha
lea
or
adc
pop
mov
das
in
add
sbb
add
jecxz
mov
inc
mov
dec
ud0
int
ret
inc
and
call
enter
jbe
jo
je
sbb
push
adc
test
incb
add
mov
jmp
jg
decb
scas
inc
call
rorl
add
cmp
negb
cmp
mov
push
decb
les
add
adc
stc
mov
ret
sbb
aas
pushl
mov
add
add
sbb
fstpt
ja
test
and
add
jmp
push
popa
lds
ja
add
and
inc
add
lods
mov
sbb
push
test
adc
cmpb
mov
jp
mov
mov
dec
call
add
test
cmp
mov
pushl
push
ret
adc
imulb
loopne
push
movb
mov
lret
or
adcb
dec
popa
cmp
or
pop
test
mov
dec
lods
push
mov
es
movsb
ror
lea
inc
lea
sub
lea
scas
rcl
ret
sbb
and
push
outsb
rcrb
mov
loop
fiaddl
bound
cli
call
add
pop
arpl
jle
cmp
and
dec
ss
cmp
dec
into
pusha
jbe
repz
push
bound
pop
ljmp
sub
jl
loopne
loopne
fmull
loope
mov
mov
dec
push
push
and
subb
loopne
push
loop
add
or
push
add
adc
test
xor
jle
inc
in
jae
je
xor
decl
loopne
mov
mov
movl
mov
popa
orb
and
and
loope
inc
pusha
psubsw
and
push
or
cltd
rcll
jl
jl
fnsave
mov
fsubs
cmp
mov
call
subb
pop
lock
inc
mov
or
cli
and
xor
int3
js
mov
clc
jo
mov
xchg
nop
out
mov
in
pop
scas
or
or
sbb
outsl
shll
les
mov
adc
adcl
sub
add
add
add
pop
jp
int
xor
and
cmp
popa
call
rcrl
addr16
lods
dec
push
lret
pop
cli
call
inc
and
pop
bound
adc
dec
pop
test
pop
or
mov
push
sub
stos
out
mov
or
cmp
sub
pop
cld
jmp
loopne
push
pusha
ret
lcall
sub
pop
jbe
imul
jnp
inc
xor
dec
aaa
bound
incl
adc
loopne
call
loop
pusha
ljmp
pushf
push
fcoml
xor
popf
and
or
mov
jbe
push
cmp
mov
daa
add
or
in
pushf
adc
clc
pusha
pushf
xor
or
sub
pop
aam
loope
mov
rorl
pop
or
inc
sahf
les
jg
cmp
je
push
pop
subb
jbe
push
mov
mov
call
inc
dec
in
jbe
mov
loope
jno
add
loopne
ficomps
sub
cmc
adc
mov
das
pop
sbb
sbb
in
xor
sbb
sub
mov
adc
mov
pop
mov
push
push
or
imul
cmp
decl
adc
xor
loopne
je
jg
adc
pop
call
rcrb
xchg
fs
loopne
loopne
and
lea
sbb
adc
adc
bnd
hlt
jecxz
fnsave
xor
and
pop
add
and
adc
xor
pop
or
mov
call
inc
sbb
pushf
sar
push
aam
or
sbb
xor
xor
mov
or
push
je
out
icebp
lcall
dec
sbb
add
lods
add
or
xchg
rep
cmp
cmp
neg
cs
int3
lods
xor
mov
dec
adc
push
adc
dec
and
add
ss
cmp
je
pusha
hlt
lock
shrb
icebp
sbb
lock
hlt
enter
sbb
scas
ds
roll
js
mov
pop
and
sub
mov
add
sub
imul
in
jle
dec
xor
xor
xor
jo
mov
scas
add
mov
aaa
stos
jo
das
xchg
outsb
and
fistl
lock
clc
jno
sar
decl
js
add
int3
mov
lock
repz
add
xor
sbb
push
xor
pop
push
add
mov
loopne
fiadds
data16
notl
or
cltd
es
cmpsb
std
ljmp
inc
sbb
mov
add
inc
xchg
sbb
inc
stos
or
clc
idivb
pop
movb
dec
inc
xor
ds
jl
pop
push
adc
shll
lea
std
push
push
jbe
adc
repz
insb
add
icebp
mov
or
xor
scas
movzwl
int3
rolb
add
insb
pop
inc
adc
mov
shl
dec
insl
push
clc
and
adcb
addb
movsl
aaa
sbb
cld
lods
jle
jo
leave
cld
mov
jl
or
shr
mov
cmp
xchg
je
decl
inc
xchg
dec
push
xchg
je
call
push
lea
pop
push
lock
mov
inc
icebp
mov
sbb
lock
cmpb
push
add
scas
pop
shrb
push
mov
xor
pop
jecxz
sub
mov
dec
adc
jbe
jo
mov
pop
mov
hlt
fwait
test
test
call
out
mov
adc
lock
jae
sbb
mov
cmp
mov
movb
push
sub
or
out
shlb
cmp
aad
movzbl
add
enter
test
inc
and
adc
sbb
jmp
jbe
xchg
mov
idiv
cmp
mov
inc
adc
or
je
push
cmpb
stos
addl
gs
nop
adcl
jecxz
adc
outsb
test
push
ljmp
push
add
fucomip
ljmp
out
aam
lea
xchg
outsb
jecxz
ret
outsb
jne
dec
mov
pop
and
and
sbb
pop
mov
dec
push
xor
movl
sub
hlt
pushl
and
xor
daa
jmp
repnz
sbb
shrb
lock
stos
push
dec
lcall
fidivs
ljmp
int3
int3
add
xor
adc
ljmp
cld
cmp
outsl
in
push
xor
adc
and
jo
ss
hlt
outsb
loope
jne
cmp
mov
sbb
int3
inc
movl
inc
lock
call
sbb
cld
outsb
cld
jb
inc
in
movsl
pop
movsl
push
adcb
pop
fiaddl
or
sub
dec
push
or
mov
adc
mov
in
fbstp
cmp
lods
push
dec
xor
cld
pop
std
outsl
in
sub
pop
data16
push
jo
mov
cmp
xor
addb
or
mov
add
push
movsl
jle
in
shlb
jo
pop
xorw
add
fucomip
js
rcrb
mov
outsb
add
add
push
pusha
ljmp
dec
ret
je
mov
mov
push
les
sbb
stos
lods
sbbb
and
mull
dec
push
mov
inc
ret
fdivs
mov
sbb
add
and
sbb
loopne
push
jo
pop
call
adc
sub
pop
xchg
or
push
add
je
or
mov
decl
pop
jo
sub
dec
mov
adc
test
je
int3
shr
mov
push
mov
or
xor
push
or
ret
idiv
mov
rclb
push
and
jo
push
cmpsb
les
mov
into
pop
jg
enter
mov
adc
loop
xor
mov
jno
jge
lock
mov
xor
push
je
fdivrs
push
jnp
cmp
clc
inc
or
lock
aad
push
insl
in
dec
dec
cwtl
adc
mov
lret
call
push
shr
insb
clc
sbb
push
sub
dec
jle
inc
sub
cld
nop
repnz
or
or
pushf
and
or
push
sbb
add
stos
push
inc
sti
push
and
xchg
xor
call
jo
dec
mov
cmp
dec
add
inc
call
fwait
mov
cmp
jne
cli
inc
inc
xchg
mov
adc
sbb
lcall
call
or
movsb
mov
lock
adc
ret
movsb
lahf
jbe
cmp
mov
dec
push
mov
add
out
or
pop
jno
push
and
call
aaa
xorl
decl
xor
jb
push
lock
and
mov
mov
iret
jnp
sub
cli
test
xchg
xchg
xor
cs
mov
xor
xchg
les
sub
mov
mov
dec
add
popf
lock
test
sbb
hlt
mov
popa
pop
cmp
test
or
mov
je
jo
mov
mov
jmp
pop
lock
inc
mov
and
and
pusha
aaa
jle
sti
push
call
stc
mov
std
fwait
je
pop
inc
push
push
pop
inc
loop
mov
and
mov
add
je
push
dec
clc
repnz
dec
hlt
jge
jo
testl
and
xchg
xchg
movsb
sbb
xchg
ljmp
push
pushl
or
xor
mov
push
cli
jo
icebp
mov
and
call
dec
xor
call
fdiv
in
sbb
pop
daa
call
or
lret
testb
pop
dec
testl
or
mov
in
nop
stos
sbb
icebp
mov
xorl
mov
xchg
mov
ss
scas
push
fistl
push
cmpsl
call
pop
push
or
push
add
adc
xor
jo
call
jl
or
pop
pusha
adc
ret
add
les
je
inc
lock
jle
sbb
push
push
adc
mov
lock
lea
inc
test
pop
inc
inc
loopne
jmp
mov
xor
in
add
ret
pop
pop
je
pop
add
lret
jle
lcall
cli
inc
sti
call
clc
adc
pop
mov
pop
hlt
push
mov
sbb
shll
push
sbb
fcoml
and
xchg
call
ljmp
mov
pop
mul
in
scas
sbb
inc
pop
or
mov
je
call
push
in
adc
movsb
jb
int3
xchg
lret
add
sub
jo
notl
test
test
mov
jo
test
fiadds
push
mov
jg
cmp
pushl
mulb
sahf
cld
jle
add
out
push
adc
mov
sbb
inc
push
data16
out
mov
clc
jae
dec
jno
add
in
jno
pop
pop
adc
add
mov
mov
outsb
add
adc
sbb
cs
outsb
lcall
pop
loop
ret
push
clc
xor
adc
cmp
add
cs
add
js
add
sub
scas
ret
cmp
or
ljmp
pusha
arpl
sub
jl
mov
test
xchg
sub
cld
fldenv
testl
push
add
xor
repnz
jge
repz
add
mov
push
sti
cmp
or
pop
mov
out
test
into
sbb
push
sbb
sti
call
push
lods
or
sub
sbb
addb
cmp
adc
pop
cwtl
rorb
dec
lods
incl
sub
mov
add
mov
jo
loopne
cmp
jg
cmp
add
adc
andl
mov
cld
push
pop
and
jb
mov
xor
jmp
mov
es
or
push
mov
aaa
adc
inc
push
jl
scas
add
xchg
inc
push
lahf
les
push
adcb
cmp
mov
movsb
sub
dec
mov
cmp
and
push
inc
pop
js
loopne
and
or
shrb
xor
les
xor
je
es
push
push
and
jb
pop
sbb
push
and
outsl
adc
push
ret
or
or
jl
or
jmp
jb
mov
inc
lock
loop
daa
ret
test
decl
insb
sbb
add
shlb
mov
js
lcall
loop
mov
pop
cld
idiv
daa
xor
data16
adcb
cmpl
fildll
xor
add
xchg
push
in
push
add
daa
jns
jp
xor
and
fisubrl
lret
pop
je
or
dec
in
fidivl
je
nop
mov
cs
sbb
mov
add
jmp
or
xchg
pop
fisttps
lcall
add
aaa
test
test
mov
mov
add
je
mov
add
push
in
mov
mov
inc
inc
jb
add
mov
rorl
jb
jle
rclb
jp
test
or
rorl
sbb
jne
or
adc
dec
pop
int
jg
rclb
faddp
and
les
sbb
xchg
insl
cs
adc
and
or
sti
lock
stos
mov
lock
mov
lods
les
adc
push
cmp
lcall
xor
ljmp
test
sub
lcall
mov
xorl
adc
lcall
or
or
inc
jmp
cmp
andb
inc
nop
mov
and
jbe
and
cs
inc
jg
je
rorb
test
subb
or
xchg
mov
jmp
mov
or
add
ljmp
pop
and
loopne
mov
cmp
adc
push
mov
add
inc
pushf
loopne
mov
add
or
cs
test
adc
add
adc
enter
fistps
push
adc
mov
mov
pusha
mov
inc
hlt
add
pop
inc
lds
inc
fdivrl
or
or
dec
push
mov
push
push
icebp
xor
sbb
adc
mov
cmpl
sub
std
mov
push
sbbb
pop
and
jne
add
cld
rcrb
mov
push
pusha
and
sub
inc
mov
pusha
or
popa
or
call
cs
xchg
add
adc
cmp
add
sbb
in
add
sbb
sub
add
cmp
mov
fsubs
inc
imulb
leave
add
loope
dec
xlat
push
xchg
or
and
and
pusha
pop
scas
sbb
inc
inc
push
jle
or
mov
mov
adc
mov
movsl
loopne
out
popa
or
cld
test
sub
loopne
and
je
sbb
dec
pop
dec
notl
add
pusha
mov
mov
sub
fidivl
sbb
or
rorb
mov
push
push
data16
xchg
pop
ss
decl
or
push
push
add
shlb
call
xchg
xor
or
stos
lea
mov
clc
enter
scas
cmp
add
pusha
sub
adc
stos
mov
test
jl
mov
mov
pop
fisttpll
loopne
add
loopne
call
sub
test
inc
push
gs
cli
adc
mov
loop
aaa
xorl
jne
pushl
adc
inc
loopne
jle
push
popa
add
or
mov
int
xchg
pusha
pop
cmc
popa
add
das
add
loopne
mov
sub
sbb
and
in
sub
test
lea
pop
bound
add
add
leave
add
cli
filds
loope
out
inc
adc
notb
out
cmp
mov
orb
arpl
gs
ss
les
hlt
push
orl
test
add
or
in
testb
mov
push
imul
idivb
in
add
inc
jmp
shlb
sub
add
cli
pop
xorb
sbb
push
ljmp
cmpsl
pop
add
stos
rclb
push
add
adc
scas
arpl
pusha
enter
fbld
inc
dec
jbe
pop
jecxz
fdiv
andb
jne
dec
pusha
xor
pop
xchg
or
cmp
xchg
stos
xor
cmpsb
orb
lret
push
aam
das
adc
or
cltd
mov
inc
cld
mov
or
push
add
push
repz
pusha
mov
js
mov
xor
cmp
pusha
xchg
test
fbld
mov
pop
mov
add
out
cmp
ss
add
scas
xor
adc
test
loopne
add
push
jb
insb
add
push
mov
jg
call
xchg
inc
je
loopne
inc
popa
and
xchg
pusha
add
and
add
jg
cmc
cmp
add
pop
push
sub
cmp
lea
or
add
dec
mov
push
pop
and
mov
xor
pop
cmc
decl
jo
xor
cwtl
push
jo
ss
add
push
push
clc
push
jmp
sbb
inc
xor
je
ljmp
jno
adc
les
call
jo
xchg
les
xor
pop
sarb
insb
mov
cmovno
ret
lea
dec
lock
sub
xor
adc
xor
push
add
sub
xor
mov
push
ret
dec
mov
mov
push
inc
out
mov
mov
push
jbe
and
and
ja
std
ljmp
lock
inc
push
call
sbb
mov
loopne
inc
lea
scas
call
xchg
jo
arpl
add
cmp
push
jle
aaa
fwait
cmp
cmp
xchg
jnp
sub
add
push
push
xor
sub
push
cld
aaa
fisttpl
imul
xchg
out
add
sub
mov
xor
add
lock
mov
jmp
xchg
mov
in
add
push
mov
sbb
pop
sbb
jo
cwtl
inc
push
fsubs
dec
jo
add
mov
lods
or
jle
pusha
mov
jno
inc
sub
add
add
in
lea
scas
xor
pusha
lea
pop
out
lock
aaa
test
movsb
ljmp
lock
inc
mov
add
xor
push
jecxz
ljmp
es
jge
jecxz
sti
dec
test
sub
and
add
dec
adcb
bound
out
fs
mov
jl
adc
sbb
cld
mov
adcl
push
mov
adc
push
sub
add
pop
dec
gs
pop
pop
ljmp
xor
cmp
and
lea
mov
call
je
icebp
mov
call
je
xor
mov
jb
rolb
add
xor
or
adc
sub
cmp
mov
mov
inc
adc
adc
fdivl
outsl
mov
outsb
or
je
test
adc
or
outsb
pop
adc
sbb
jbe
es
add
jl
and
pop
je
inc
jle
or
add
lock
or
notb
sub
data16
insb
fdiv
testb
je
or
repnz
fwait
inc
ljmp
mov
xor
add
out
icebp
sbb
pop
lods
inc
mov
xor
dec
fwait
mov
adc
das
fdivs
pop
mov
je
lret
je
test
cmpsb
push
lcall
jno
or
cmc
sub
insl
xchg
pusha
mov
divb
push
cld
xor
pop
adc
adc
xor
jmp
pop
adc
push
jno
loopne
jo
addl
paddusw
das
movsb
adc
lea
pop
xor
push
xor
or
push
push
mov
int3
dec
sbb
push
icebp
inc
lods
push
push
test
lret
subb
push
and
fisubrl
adc
stos
cmp
int3
or
aad
ret
and
hlt
push
or
and
sahf
xchg
add
xlat
addl
les
adc
inc
ret
jmp
cmp
adcb
ljmp
pop
jno
mov
andl
jle
sarb
or
xor
lea
movsb
jo
push
push
push
xchg
and
sbb
and
inc
mov
xor
jae
cld
pop
inc
and
adc
xor
les
inc
test
adc
daa
mul
jb
cltd
pop
sbb
jp
add
xor
xor
ds
sub
sub
fidivrs
xlat
shrb
test
lock
push
add
sbb
jl
clc
nop
mov
shlb
orb
push
outsl
mov
movsl
lcall
add
ss
cmp
sbb
xor
xchg
jo
testl
xchg
aad
pop
mov
hlt
shrl
xor
mov
ss
push
cli
or
push
repnz
inc
out
add
jle
out
dec
addb
or
jl
mov
mov
lock
and
int3
pop
cmp
jnp
enter
mov
ljmp
adc
jp
je
dec
mov
mov
push
push
pop
mov
pop
mov
repz
ljmp
sub
sub
xor
loop
lea
test
xor
adcl
push
scas
ss
out
adc
mov
jns
push
xchg
add
mov
adc
push
jo
xchg
cmp
add
cmp
pusha
inc
test
cmp
or
push
xchg
pop
cli
test
cmp
pop
pop
jp
mov
and
mov
lcall
add
add
jg
fiadds
xchg
adc
push
or
push
sub
sti
or
test
cmp
sub
mov
xor
gs
dec
arpl
outsb
fs
mov
pop
call
stc
pop
ds
cld
hlt
pop
push
clc
mov
mov
push
inc
sub
or
push
xor
filds
xor
xor
jne
mov
sbb
push
test
push
jb
aas
mov
xchg
xchg
jo
repnz
ljmp
add
jmp
lock
dec
xchg
incb
js
or
icebp
xor
pop
sarb
cld
push
add
add
stos
push
nop
pop
pop
xchg
add
ficomps
pusha
xchg
jmp
int3
sub
fisubrl
xor
mov
and
xchg
inc
mov
cmpsb
mov
hlt
shll
pop
xor
inc
xor
clc
add
inc
in
repz
mov
mov
mov
sub
add
jo
div
xchg
aaa
push
mov
pop
inc
mov
mov
je
fbstp
out
jo
dec
clc
and
inc
push
push
out
hlt
mov
push
or
cmp
pop
stos
sub
add
mov
xor
call
jo
or
mov
ljmp
xchg
add
sub
loopne
cld
gs
or
push
cmp
jne
sete
xchg
adc
jbe
popa
scas
push
jmp
icebp
outsl
les
sbb
mov
decl
shrb
push
jo
test
inc
add
shl
xor
or
jo
adc
pop
cmc
inc
in
push
stos
and
xchg
mov
ljmp
add
pushl
push
push
push
add
out
enter
inc
data16
add
jno
add
and
hlt
or
push
push
scas
hlt
jle
sbbb
xor
add
into
stos
mov
fwait
ret
scas
fldl
out
ds
dec
fdiv
call
push
test
jo
testl
mov
mov
ss
and
andb
rolb
mov
hlt
fwait
dec
sub
jbe
call
lea
mov
inc
pop
pop
jne
cli
cs
call
jbe
cmp
clc
jecxz
divl
clc
pop
aam
aam
fldenv
push
adc
lcall
clc
mov
shlb
and
xor
or
test
xor
call
xchg
mov
clc
call
mov
add
push
pop
les
sbb
mov
xchg
push
pop
inc
adc
test
mov
jae
mov
xor
data16
xchg
shlb
loopne
sbb
inc
je
sbb
or
bound
sbb
dec
jo
or
add
inc
ret
inc
mov
addb
out
sub
pop
or
push
lea
add
lcall
addb
jne
mov
orb
cmpb
data16
jnp
add
add
or
and
mov
mov
mov
xchg
push
push
lret
jp
fs
jmp
shl
sbbb
push
jl
push
in
or
and
mulb
cmp
mov
andb
inc
or
jb
insb
orl
popa
outsb
adc
jg
push
jg
or
jle
xchg
popf
cmpl
mov
jb
adc
cmpl
popf
add
fdiv
sbbl
cmp
push
xchg
lock
mov
jae
and
mov
cmp
repz
push
or
mov
add
adc
inc
scas
sub
jb
mov
push
adc
add
rolb
add
push
dec
shlb
cmp
stos
in
dec
loopne
sbb
and
movsl
or
mov
rorl
adc
pop
adc
mov
add
add
fcoms
add
xor
lea
pop
sub
ds
mov
cwtl
and
jmp
mov
sub
lea
les
aas
push
sti
inc
cli
or
rolb
jmp
dec
nop
clc
outsl
test
cmp
adcb
andb
das
mov
ror
add
js
rcrb
mov
sub
jo
and
push
push
push
cs
add
add
in
cmp
scas
outsl
add
xchg
aam
int
adc
sarb
mov
int
mov
subl
adc
mov
adc
ja
adc
jb
pop
call
adc
or
jg
mov
xor
imul
xor
fsubl
push
add
rol
or
incl
fwait
or
scas
call
rolb
push
dec
call
inc
mov
mov
cmp
shlb
rcrb
rolb
rorl
push
xchg
dec
sbb
daa
adc
mov
xchg
cmc
das
or
inc
add
and
shrb
pop
out
jg
jb
dec
mov
sarb
loopne
mov
add
cld
incb
je
int3
call
push
push
fildll
movups
jb
pusha
sub
sbb
ret
pop
push
mov
lock
sbb
mov
sub
add
out
add
inc
dec
push
or
inc
mov
popa
add
cmp
inc
or
fucomip
int3
or
mov
sarb
jle
aaa
fmulp
add
inc
mov
and
fwait
call
jge
pop
dec
in
mov
call
pop
adc
adc
pop
fsub
add
or
dec
ljmp
scas
pusha
outsl
push
fsubr
rorb
sbb
add
inc
pop
sub
frstor
sbb
ljmp
jg
lods
dec
fadds
sub
int3
lods
in
loopne
mov
arpl
faddp
es
testl
sbb
aam
inc
and
push
stc
adc
xchg
loopne
add
dec
push
push
or
jmp
jb
add
test
sub
nop
sbb
add
push
adc
pop
fwait
aaa
add
inc
and
pusha
fadds
gs
je
scas
push
or
outsl
shrb
lret
sub
cmp
pusha
xchg
je
lea
push
adc
in
sbb
sbb
inc
add
es
loope
jecxz
pop
pusha
add
cli
adc
cli
mov
adc
xor
ss
popa
push
mov
notl
fndisi(8087
or
lea
adc
ss
je
ljmp
cld
leave
ret
test
or
cmp
inc
out
mov
adc
or
pop
test
sub
data16
dec
loopne
mov
sbb
and
mov
push
push
adc
dec
test
test
dec
xor
or
mov
cmp
pusha
pusha
mov
adc
mov
add
adc
and
adc
mov
scas
nop
and
and
bound
loop
push
shlb
mov
adc
cmp
sub
adc
sbb
pusha
xchg
js
fistpl
nop
pusha
scas
jp
in
rcrb
fbld
adc
out
pusha
movsl
lock
into
daa
pusha
cwtl
loope
jne
xor
or
push
call
pusha
sbb
xorb
or
fsub
es
nopl
shrb
push
push
or
pop
push
scas
push
fcmovu
mov
loopne
add
imul
mov
mov
push
adc
lods
xor
cmpsl
loope
pop
lock
jp
pusha
inc
xor
inc
add
dec
jbe
mov
mov
xor
add
popa
lods
mov
cmp
push
dec
dec
cmp
mov
lock
dec
lahf
loopne
stc
loope
jg
mov
pusha
pop
jne
push
sti
jmp
cmp
add
adc
cmp
jbe
mov
push
pushl
or
jp
add
cld
and
pop
pop
loopne
push
mov
jle
jne
pop
jecxz
outsb
xchg
add
mov
pop
pop
pusha
push
lds
xchg
pop
mov
or
xor
or
ds
test
loopne
scas
movl
rcrl
loopne
pusha
dec
mov
aam
adc
call
sets
mov
mov
ja
pushf
sub
lock
pop
add
sbb
ja
add
add
aam
int3
push
sbb
or
and
jg
push
cltd
orb
add
lds
mov
aas
dec
dec
adc
adc
xchg
lods
jno
mov
lock
sbb
dec
adc
popa
ss
pop
pop
cli
jmp
cmp
aas
lods
or
jne
jl
scas
mov
cmp
hlt
jno
mov
je
mov
pop
xor
loopne
repz
mov
push
inc
test
adc
dec
lea
enter
es
inc
push
pop
cmpsl
incb
std
pushf
push
mov
mov
icebp
sub
xor
jg
lock
test
pminub
jg
xor
je
mov
loope
ret
sarl
add
call
je
fisttpl
push
fildl
sub
mov
inc
cmp
push
loopne
clc
jbe
sarl
shl
mov
jne
xor
leave
pop
rclb
ljmp
pop
dec
mov
mov
dec
pop
push
addb
mov
lea
mov
mov
call
and
rcrb
push
jmp
sub
sbbb
and
pop
push
mov
cmp
push
clc
outsl
sbb
insb
les
sbb
inc
cwtl
inc
add
fdivs
cmp
pushf
add
mov
into
cmp
sarb
add
xor
ljmp
push
push
inc
xchg
jb
xor
add
mov
daa
call
add
ficoml
and
jl
das
push
add
mov
lock
ja
xor
pop
hlt
lea
mov
int3
sahf
add
lock
mov
adc
aam
rclb
lcall
inc
mov
movsb
jle
andb
jo
jo
clc
jb
jne
push
mov
mov
das
scas
add
faddp
add
jecxz
cld
or
data16
inc
xchg
jb
sbb
or
mov
dec
clc
ja
push
jmp
movb
xor
mov
pop
pop
sbb
sub
cmp
jo
mov
xor
call
add
xchg
push
mov
aam
or
or
inc
add
jne
add
je
xchg
mov
mov
ja
aas
cmpb
cmp
jg
scas
popf
jo
sub
mov
add
js
imul
xchg
jmp
jg
add
sbb
bound
xor
and
mov
pop
and
lahf
aaa
lds
cmp
incb
les
inc
and
das
push
pop
and
mov
add
push
pop
movsl
decl
push
ds
adc
fbstp
testb
imulb
or
and
pop
lcall
add
pusha
enter
movsb
lock
in
adc
push
pusha
shlb
lods
jl
mov
test
clc
dec
or
jns
rcrb
push
int3
add
cmp
push
add
cmpb
dec
in
push
or
push
cmp
lock
lods
and
xor
rorb
or
pop
cmp
or
pop
ja
je
addl
xchg
adc
rclb
push
call
push
mov
lock
sub
inc
add
mov
decl
sbb
sarb
or
sub
jne
out
loope
ljmp
and
jmp
icebp
cmp
aaa
adc
lods
cli
add
in
insl
cmp
jbe
adc
loop
fwait
sbb
lock
repnz
call
mov
or
mov
cs
mov
adc
lock
dec
lcall
sbb
dec
cmp
mov
orb
mov
mov
sahf
sub
addl
add
mov
inc
ljmp
sub
add
adc
addl
inc
cli
fdivrl
out
and
movsb
stc
jo
mov
cwtl
mov
jbe
jo
inc
cmp
or
inc
or
xchg
cld
inc
or
ss
test
rcl
inc
jp
xchg
xor
fdivs
idiv
fists
cwtl
pop
aam
push
xor
addb
jne,pn
jg
inc
jae
add
outsl
mov
and
mov
lea
adc
add
add
add
cmp
mov
sti
and
jg
or
jg
addb
xor
fidivl
ret
jg
and
les
pop
cmp
add
ja
xchg
mov
cmp
rclb
mov
mov
adc
jb
jbe
sbb
pop
dec
stc
add
cmp
jle
lock
inc
sbb
int3
mov
sub
stos
jmp
adc
adc
repnz
push
inc
in
cmp
pop
and
mov
jbe
movb
xorl
sti
push
xorl
outsb
pop
add
test
sbb
sub
push
add
jae
jo
mov
dec
clc
pop
jle
mov
shll
xchg
cli
mov
cmp
adc
outsl
js
inc
push
out
pop
addl
add
sbbb
jbe
mov
jo
mov
push
je
cli
xchg
lock
jg
add
cmp
jge
cmp
and
lcall
out
add
outsb
icebp
je
js
add
jbe
jmp
xorb
add
cmp
fdivs
clc
mov
int3
mov
and
lock
sahf
or
mov
xchg
hlt
inc
mov
pop
and
jmp
jo
lea
rolb
jo
xor
and
fisubrs
or
mov
jg
pop
hlt
jmp
add
mov
jmp
repz
pop
cld
add
fcmovnb
and
ret
or
mov
dec
adc
scas
rcrb
cs
push
data16
mov
xor
mov
sub
lods
cli
jg
clc
cmc
adc
jo
xor
mov
add
dec
jbe
cld
jmp
bound
jbe
cmp
mov
push
xor
add
xor
fdivr
add
push
cmpsb
cmp
jne
pop
mov
aam
cld
fs
dec
mov
or
push
lcall
enter
cld
sub
mov
dec
nop
fsubs
jb
add
mov
cmp
fstpt
icebp
and
cltd
xor
mov
or
in
sbb
mov
fsubs
cmp
mov
push
jno
or
call
xor
mov
jbe
push
push
jo
xor
xor
insb
fidivrs
cmp
lret
add
les
je
stos
stos
push
push
cmp
call
cmp
mov
jb
cmp
or
cmc
push
push
add
out
adc
movsb
add
mov
jne
cmp
or
or
sub
sbb
cs
add
add
aaa
xchg
repz
add
push
je
hlt
sbbb
jp
cmp
pop
xor
scas
jo
mov
sbb
push
jns
xchg
js
sbb
dec
je
loop
andl
add
pop
xor
aas
and
lret
add
xor
mov
pop
cmp
mov
cmp
jmp
add
stos
xor
mov
hlt
cli
adc
call
bound
fcomps
aas
and
inc
mov
pop
aas
ss
inc
int3
iret
jnp
ret
jmp
mov
mov
addb
fadds
push
xchg
cmp
cmp
push
mov
push
push
add
or
push
into
mov
subl
les
push
mov
cmp
je
xchg
sbb
sarb
add
inc
pop
les
mov
push
inc
popf
lock
pop
les
xchg
inc
mov
add
and
cmp
dec
xchg
loopne
sbb
lods
jp
sub
pop
fwait
mov
movsb
push
jns
inc
add
mov
push
call
pxor
add
pop
xor
add
xor
sti
arpl
iret
and
cmpb
mov
cs
mov
push
test
cltd
push
ljmp
stc
mov
xchg
pop
pop
das
add
jmp
lret
inc
xchg
repz
push
movsb
call
decl
movsl
call
mov
and
clc
cmp
push
add
add
addb
mov
enter
dec
jl
add
sbbb
pop
add
int
sbbb
data16
das
in
inc
pushl
xchg
subb
xor
xor
fildll
push
inc
lret
inc
ja
adc
in
add
pushf
mov
testb
into
push
jmp
mov
pusha
cmpsb
jle
jne
cmp
or
or
mov
addb
push
ss
stos
scas
insb
add
movzbl
into
test
jb
inc
clc
jg
sub
add
push
orl
shlb
cmp
xor
mov
cld
adcl
ficomps
adc
push
int3
shrb
add
outsl
lea
dec
jmp
jge
push
jbe
insb
lcall
adc
outsl
insl
subb
dec
cli
test
mov
inc
ret
dec
scas
add
xor
ficoml
lods
add
inc
adc
popf
or
in
das
rolb
add
roll
add
mov
arpl
mov
push
sbb
or
ret
pop
push
or
mov
test
add
cmpb
call
adc
mov
mov
nop
push
stos
push
gs
pop
pop
incb
sbb
int3
dec
rclb
incb
pop
cmpsb
sbb
lret
inc
cmpl
jg
jb
xor
adc
decl
movsb
inc
shll
in
nop
rclb
push
pop
inc
adc
in
add
loope
mov
adc
sarb
xor
inc
mov
test
pop
push
pusha
jle
addb
sbb
sbb
mov
jge
cmp
out
movl
cli
roll
stos
mov
sarb
mov
and
incl
jb
add
mov
or
and
ja
or
and
push
pop
xor
add
jmp
shlb
test
or
rcrl
dec
fcompl
outsb
mov
mov
push
xchg
rolb
inc
push
ljmp
rcr
mov
cld
subb
push
jb
movsb
push
mov
ror
scas
test
push
pop
sti
ja
addl
cmp
push
adc
xchg
fildl
clc
imul
add
mov
or
mov
pop
jbe
repnz
hlt
rclb
dec
add
push
andb
jl
push
inc
or
push
pop
int
or
add
dec
jbe
add
inc
icebp
inc
ret
push
add
adc
mov
pop
lods
or
ljmp
and
xchg
push
jl
sbb
jo
jle
cmp
test
or
mov
sub
inc
add
jmp
adc
jae
incl
or
or
inc
sbb
movsl
mov
pusha
outsb
cltd
jo
xor
cmpsl
mov
push
popl
cmpsb
adc
xor
orl
pusha
das
mov
push
pusha
push
in
ret
data16
jne
mov
popa
inc
cld
pusha
pusha
es
add
mov
adc
mov
aaa
sbb
int3
jmp
es
xor
outsl
xor
add
xchg
je
loopne
int3
add
mov
pop
ret
and
or
or
and
push
adc
and
adc
lock
add
push
subl
inc
popa
cmp
add
addl
les
cmp
lea
mov
loopne
jle
mov
add
or
loope
les
sbb
mov
dec
add
shll
lock
rcll
shll
enter
xchg
push
jo
xor
inc
add
push
push
mov
popf
pusha
pop
pusha
fs
xor
imul
sub
xchg
add
loope
pop
add
inc
inc
add
sbb
lods
and
fisubrl
clc
ljmp
in
loopne
ljmp
adc
jne
mov
mov
mov
push
dec
fsubr
add
push
arpl
subb
call
dec
jne
notb
xor
cwtl
xor
adc
sbb
ret
pop
push
pop
inc
sub
adc
add
xor
cmpb
push
hlt
aas
lea
dec
clc
das
sbb
lea
mov
pop
std
fcomip
mov
adc
push
inc
jle
nop
lret
popa
or
push
loope
faddl
xor
dec
push
xor
movsb
sbb
fwait
lods
push
call
fsub
pusha
jbe
push
mov
and
andb
push
xchg
jle
mov
xchg
xorb
cmpsb
lds
lods
pusha
mov
or
outsl
mov
sbb
push
mov
rorb
hlt
add
popl
sti
jbe
inc
clc
ss
xor
test
xchg
pusha
lods
fadds
mov
adc
jecxz
or
adc
dec
in
pusha
ss
fdivrp
pop
adc
fbstp
jbe
adc
out
pop
aaa
inc
hlt
mov
cmp
pop
sub
and
and
loopne
add
or
inc
rclb
shr
loopne
xor
and
push
dec
mov
jmp
loopne
cs
test
sub
shl
loopne
dec
push
loopne
pop
subl
test
add
add
jmp
cmp
mov
mov
and
pop
pop
xchg
cld
loop
out
push
add
inc
jmp
push
pop
xchg
add
push
or
imul
outsb
jmp
loopne
call
inc
pop
push
pop
sub
cli
clc
das
adc
in
adc
jp
movsb
pop
ret
popa
cmpsl
add
rcrl
rorb
icebp
je
jmp
cmp
push
out
stos
shrb
xor
sbb
and
sub
adc
sbb
aaa
test
xor
bswap
shlb
int3
mov
mov
ror
aam
je
loope
lock
fmuls
mov
add
jge
hlt
inc
pop
push
fdiv
adc
ljmp
ret
xor
pop
or
inc
xor
aad
mov
fwait
sbb
xor
pop
sbb
xor
je
jl
mov
cli
cmp
sbb
mov
repz
or
sub
adc
hlt
je
fisttpl
sbbb
push
mov
je
or
xor
xorb
int3
leave
jl
sbb
lods
add
adcl
xchg
pop
clc
das
add
add
mov
or
add
add
lock
xor
je
shlb
mov
adc
iret
jne
and
pusha
or
xor
out
pop
or
pop
out
add
inc
pop
jne
stos
stos
cld
cmp
adc
hlt
jo
sbb
adc
movsl
loop
adc
jno
inc
xor
mov
push
mov
push
or
outsl
push
adc
cld
or
push
push
mov
fimuls
lods
adc
mov
mov
lods
jb
pushl
xor
add
push
lea
popa
sub
es
sbb
push
out
jo
mov
xor
pushl
xor
mov
jg
scas
mov
dec
les
xor
inc
cli
pop
jo
push
push
dec
dec
add
je
jo
shlb
enter
je
icebp
push
push
stos
xor
fistl
mov
push
test
xor
mov
data16
mov
out
mov
mov
add
rolb
je
in
pop
xor
pop
adc
xchg
cli
mov
lock
mov
mov
rclb
push
cmp
mov
das
mov
add
fisttpl
stos
sub
pop
and
mov
ljmp
jmp
dec
test
jne
add
repz
in
jg
add
rorl
jg
push
inc
add
add
sbb
add
push
lock
and
mov
jo
jae
stos
leave
ficomps
inc
sbb
hlt
pusha
sbb
int3
push
or
pop
ror
adc
inc
dec
dec
jl
push
pop
lcall
add
xor
add
bnd
pop
add
or
mov
xor
or
sub
add
mov
insb
sbb
outsb
rorb
xor
jb
adc
shl
sbb
mov
mov
inc
shl
fwait
xchg
push
adc
push
xor
adc
inc
sti
jb
push
xchg
aam
pop
dec
dec
push
dec
adc
add
mov
sbb
ret
push
rcrb
mov
sbb
lret
lods
popf
inc
add
push
pop
and
addl
jne
fs
call
or
push
sbb
cmp
jle
push
addr16
push
and
adc
add
adc
cmp
mov
jmp
ljmp
call
mov
dec
out
rcl
shll
or
pop
cmc
out
lock
jb
call
jo
sbb
inc
movb
push
pusha
sub
or
and
aaa
jno
test
xor
and
mov
test
mov
cmpsb
aas
lods
call
pushf
xor
jl
call
call
bound
xchg
add
adc
add
sub
cmp
outsl
outsb
lock
repz
cmpl
mov
repnz
jno
lea
cli
cmp
pop
or
add
adc
scas
and
mov
pop
cmp
push
nop
xchg
add
inc
add
enter
add
mov
pop
mov
adcb
sub
call
jmp
push
fmull
iret
mov
cmp
push
sbb
mov
push
push
imulb
sub
scas
call
hlt
test
or
pop
call
cmc
xor
clc
out
cli
mov
daa
or
or
push
add
jmp
adc
jns
enter
jo
outsl
jp
pushl
add
xchg
xchg
fidivl
inc
imul
pop
cmc
aas
addl
pop
push
js
shlb
push
or
or
inc
add
add
and
aam
or
les
push
mov
dec
scas
adc
push
xor
and
loopne
ret
jo
ret
lods
mov
das
adc
sub
cmp
lock
das
xor
cmp
and
dec
xchg
jg
pop
and
loope
or
sub
cmp
jo
mov
cwtl
imul
add
mov
inc
sub
jg
sub
call
xorb
cmp
add
notl
add
into
sub
rorl
ss
ljmp
add
orl
andb
pop
or
pop
add
mov
insl
push
out
pop
and
and
cmp
pop
pop
movsb
lock
mov
cld
jno
xor
or
dec
sbb
int
je
or
ds
outsl
xor
adc
fildl
sbb
mov
andb
pop
mov
mov
inc
mov
xor
dec
icebp
or
xchg
leave
add
clc
pop
rolb
dec
mov
lcall
clc
push
dec
push
call
cmp
pcmpeqb
test
adc
mov
cld
ret
xchg
pop
pop
jno
stos
ljmp
fisubrl
das
lock
add
pop
jo
sarl
add
js
pusha
je
adc
ret
xor
clc
inc
je
mulb
or
aam
into
cs
hlt
pop
fwait
ret
fists
sub
call
dec
loopne
add
pop
and
lds
call
xor
lock
dec
call
in
xor
add
imul
cmp
pop
aaa
jecxz
and
loopne
xor
ret
lret
lock
pushl
pop
jnp
pop
je
adcl
adc
shlb
mov
mov
add
pop
ss
mov
add
les
xor
cmp
jne
mov
mov
push
mov
shl
scas
roll
incl
sbb
xchg
and
test
jno
mov
lds
popa
xor
xor
or
and
inc
int
loop
fnstsw
cmp
test
inc
xchg
xorb
pusha
sti
mov
in
movsb
xchg
inc
sub
push
test
or
cmp
ret
decl
mov
and
mov
xor
pop
js
ds
mov
or
mov
jmp
pop
ljmp
je
cmp
xchg
les
test
jle
call
add
sbb
pushf
inc
add
ret
add
push
mov
mov
xchg
fisttpl
add
adc
push
insb
add
aad
push
lret
call
pop
rclb
test
sub
pop
xchg
push
xchg
lock
mov
pop
pop
cmpsb
adc
sbb
add
or
xor
ss
push
daa
pop
add
xchg
rorb
movsb
lret
mov
adc
dec
or
lcall
imul
stos
insl
mov
adcl
push
push
adc
xchg
or
bound
mov
inc
pop
jmp
mov
hlt
pop
add
lea
outsl
inc
pop
mov
je
in
int3
inc
hlt
addl
daa
mov
rolb
fsubrl
push
mov
push
add
add
les
vmwrite
and
data16
add
add
push
inc
cmpsl
call
hlt
push
cmp
xor
addr16
scas
push
sbbb
or
add
mov
sub
cmp
or
xor
fwait
cmpsb
mov
test
sbbl
popa
aam
push
jbe
push
cmpsb
fiaddl
sub
je
divb
lods
and
les
mov
pop
sbb
je
ret
jb
inc
mov
mov
sti
push
push
cmp
dec
mov
inc
fwait
test
mov
xor
inc
int3
dec
testb
inc
je
xor
or
pop
inc
std
push
lock
mov
or
and
or
call
leave
jo
cwtl
enter
fsubrs
aam
or
mov
push
dec
sbb
push
xchg
scas
inc
mov
sub
pop
or
mov
pushf
xor
sarb
inc
lcall
xor
testb
mov
fstl
add
or
xchg
mov
inc
mov
mov
xchg
cli
shrb
pop
ret
mov
pop
lea
or
aad
or
test
add
test
xchg
xor
ret
or
jle
shrb
and
or
addr16
and
mov
mov
dec
jne
lret
mov
jne
mov
movups
add
js
jg
pusha
and
ds
sub
jbe
cld
andl
inc
cld
mov
shrb
add
pop
call
out
xchg
pop
lcall
rclb
orb
push
xor
icebp
test
lock
sbb
jb
in
fsts
pop
inc
dec
push
lea
xor
cld
cmp
mov
idiv
mov
loop
mov
mov
mov
add
ds
scas
shll
add
cmpb
xchg
adc
mov
add
sbb
clc
testb
nop
fstpt
mov
cmpb
add
inc
adc
push
mov
call
xor
and
push
push
inc
cmp
lea
mov
outsl
loope
pop
pop
add
push
lea
sbb
decl
call
loopne
mov
out
ss
xchg
out
push
mov
test
aam
mull
movq
jmp
jp
nop
sub
push
fistpll
inc
insb
mov
addl
sub
cmp
sub
inc
pop
jb
repz
inc
add
xor
push
push
push
add
xor
push
stos
hlt
add
cld
pusha
insl
data16
push
add
or
fisttpl
std
push
jb
sub
push
sub
cld
xchg
cmp
pop
add
movsb
bound
fwait
push
mov
pop
add
popa
faddl
mov
dec
negl
pusha
rcr
dec
repnz
push
lret
adc
jp
add
je
je
push
add
push
pusha
aaa
xchg
lret
mov
cli
and
mov
push
jo
fbstp
pop
imul
sbb
sub
clc
ja
sahf
lock
das
mov
lret
add
loopne
push
push
push
cld
lds
pop
mov
adc
inc
and
and
jp
mov
cmp
push
fcmovu
dec
cwtl
and
jl
add
push
adc
add
pop
push
jb,pt
inc
xlat
ss
push
xor
push
dec
fists
pop
pusha
std
incl
push
xchg
add
jnp
push
and
loop
pop
mov
mov
rorb
push
pusha
or
fstpt
and
push
dec
enter
push
and
add
sbb
je
mov
imul
inc
sti
subb
rclb
out
mov
and
push
cld
ret
pop
adc
mov
hlt
test
call
fstpt
pop
add
test
mov
mov
hlt
shlb
ret
inc
xor
dec
jl
pop
sub
and
push
incl
iret
bound
call
inc
cmp
xor
outsl
pusha
xor
rcl
push
adc
pushw
push
mov
dec
adc
jp
cmpsl
cmc
cmpsb
push
xor
mov
adc
scas
and
push
bound
in
int3
xor
or
int3
sbb
dec
jne
addr16
int3
fs
add
dec
add
add
cwtl
inc
add
xchg
add
lea
push
sub
pop
xchg
inc
int3
push
lods
mov
or
lea
mov
jbe
in
icebp
subb
mov
mov
pusha
mov
add
mov
repz
andl
scas
pop
in
pop
xor
cmpsb
hlt
or
nop
add
loopne
test
outsb
cwtl
outsl
inc
push
push
and
xchg
nop
sti
jne
pusha
sbb
and
adc
loopne
mov
jo
mov
rorb
loope
cmp
cmpsb
jg
add
dec
fstpt
je
sbb
xchg
xor
jge
jmp
mov
mov
or
clc
loopne
loopne
add
or
std
call
cmp
push
loopne
jl
adc
adc
out
cmp
ret
mov
jmp
and
cmp
je
mov
lods
sbbl
sbb
data16
xchg
push
movb
sub
dec
sbb
fldl
push
xor
out
inc
lret
dec
scas
add
pop
mov
and
mov
add
ret
inc
sar
call
test
jl
pusha
adc
in
subb
das
icebp
jo
xchg
pusha
clc
dec
xor
jo
fildl
subb
pop
add
push
lock
jp
add
sub
cmp
pop
sub
sbb
and
push
xor
add
cmp
scas
outsb
add
and
mov
mov
andb
and
add
add
in
sbb
sbbb
push
and
adc
mov
ljmp
insl
rorl
je
jg
add
je
mov
mov
mov
mov
sbb
call
test
mov
adc
push
mov
xchg
cmp
and
in
jge
inc
xor
cmp
std
push
mov
mov
cmc
or
je
or
das
clc
add
fcomip
insb
rolb
xchg
jo
cli
aaa
cld
mov
mov
mov
inc
jecxz
sbb
sbb
sub
leave
mov
bnd
and
lods
aas
cli
adc
mov
jle
and
dec
and
fwait
pusha
jge
bsr
or
loop
pop
insb
jg
mov
sbb
pusha
push
jno
pop
and
movb
cli
sbb
xor
or
and
out
push
pusha
xorl
test
mov
mov
xor
jo
mov
je
mov
add
mov
inc
push
mov
mov
push
stc
outsl
decl
mov
pusha
push
adc
jmp
xor
xlat
data16
adc
cmp
sub
lret
lock
inc
inc
pop
movl
sbb
add
test
push
loope
pop
pop
addl
sbb
jle
cli
cmp
inc
fistpll
jmp
lea
jp
call
xorb
call
jb
mov
xchg
sbb
xor
cmp
jo
jb
adcb
and
mov
and
aaa
adc
mov
pop
or
imul
dec
mov
add
jo
jp
ljmp
xchg
pop
sub
jbe
lret
jnp
mov
push
adc
jne
mov
jb
clc
cmp
fistpll
push
xchg
lock
jle
add
sbb
adc
call
or
lock
stc
mov
jbe
inc
cmp
ljmp
push
icebp
push
divl
add
sub
mov
or
push
repnz
push
xor
cmp
mov
add
mov
test
add
add
add
mov
cmp
sarb
orps
or
push
mov
jo
xor
ret
rcrl
mov
pop
hlt
push
mov
call
add
aaa
xchg
adc
icebp
data16
inc
add
adc
mov
xorb
inc
pop
cmp
add
sub
or
in
orb
xchg
mov
daa
dec
cmc
add
add
andb
cmpxchg
jmp
rolb
adc
sbb
sbb
cmp
mov
mov
and
mov
mov
mov
add
insb
jl
dec
je
lock
imul
das
cs
xchg
and
and
repnz
xor
data16
ja
or
xlat
call
sub
mov
dec
repz
jo
jle
adc
sbbb
push
fdivrs
xor
add
push
lods
sbb
sub
in
clc
push
outsb
xor
xor
adc
fiaddl
movl
add
or
in
mov
or
jg
push
mov
and
lods
push
add
or
dec
inc
mov
jno
and
hlt
dec
lock
jno
subb
lock
mov
or
and
push
call
pushw
imul
imul
xlat
pushl
mov
mov
sub
sarb
pop
lcall
out
and
mov
pop
add
jecxz
add
out
adc
stc
adc
add
mov
mov
in
dec
inc
mov
add
jbe
push
adc
incl
fildl
pop
mov
xchg
lret
adc
inc
out
mov
xor
scas
or
jmp
adc
iret
jo
mov
sti
je
nop
lock
and
add
mov
adc
test
mov
add
lock
pop
inc
adc
inc
test
pushf
sahf
mov
and
lock
imul
decl
mov
inc
fwait
xor
mov
clc
xor
jno
pop
pop
mov
add
pop
js
inc
add
js
or
dec
repnz
mov
in
push
test
mov
insb
icebp
int
loopne
mov
xchg
mov
push
xor
and
js
fs
loopne
jmp
jmp
adc
loop
imul
mov
mov
inc
push
sub
or
cmp
push
xchg
xor
mov
xchg
mov
push
jbe
rcrb
push
mov
jmp
mov
inc
jg
xor
pop
xor
and
jo
and
ret
xor
pop
inc
dec
std
orb
arpl
mov
mov
into
mov
imull
xor
aaa
mov
jmp
pushf
push
call
aam
jle
in
out
leave
call
push
jae
mov
dec
mov
cmp
push
xchg
mov
push
dec
mov
or
lock
or
imul
xor
sbb
data16
sub
or
inc
xor
and
test
sub
mov
clc
xchg
dec
shl
sub
negb
add
sbb
clc
add
jmp
cwtl
jne
adc
cmp
inc
dec
fisttpl
sub
das
les
push
add
and
cmp
sub
jmp
cmp
mov
lock
sub
mov
mov
je
adc
add
xor
mov
jo
call
or
push
or
jl
jmp
xchg
jns
jns
xchg
sbb
xor
pop
fdivl
mov
cmp
insb
push
insl
mov
or
xor
and
mov
sbb
call
hlt
add
outsb
inc
out
xchg
fistps
or
push
mov
aas
cmp
ljmp
jbe
sbb
scas
ja
and
lock
call
pushf
mov
pop
push
test
test
je
rolb
sub
push
sub
adc
add
or
push
lea
and
adc
scas
ss
or
push
push
cwtl
call
add
mov
mov
xor
aaa
ret
lock
add
push
out
adc
popa
data16
push
les
fadd
sub
int3
push
js
cli
fisttps
ficompl
add
add
mov
add
scas
pop
in
mov
mov
adc
add
xchg
shrb
pop
jg
add
add
add
cmpl
sbbb
inc
and
or
ret
and
sbb
inc
pop
jge
call
or
mov
sub
outsl
cs
xchg
or
inc
add
or
aaa
popa
adcb
jne
sbb
out
call
in
cs
mov
dec
add
sbb
adc
in
sub
mov
push
sbb
adc
push
cmp
iret
inc
ret
jle
cmp
xchg
data16
add
shrb
in
mov
arpl
adc
add
and
lea
inc
orl
xchg
push
negb
push
enter
inc
sbb
sub
data16
adc
mov
dec
sbb
and
and
lods
orb
js
and
jno
loope
stos
jo
push
and
mov
jns
push
cmp
stos
pop
sti
or
fadds
incb
add
dec
mov
push
xor
insb
xchg
mov
sbb
xor
mov
add
mov
push
nop
sbb
sbb
dec
sub
jne
add
movsb
adc
leave
rorb
inc
je
jge
push
roll
out
dec
inc
push
mov
add
inc
and
sub
lea
dec
ret
js
pop
inc
or
lock
repnz
inc
sub
add
jg
mov
dec
mov
mov
lea
lods
mov
rclb
push
rclb
inc
test
push
js
clc
mov
or
pop
pop
lock
push
mov
call
rolb
add
sbb
loopne
push
repz
sbbb
push
je
dec
cltd
pop
popa
es
mov
mov
cmpsl
add
pop
mov
sbb
xchg
push
jg
cld
sub
pop
inc
stos
inc
ss
es
int
inc
leave
sbb
mov
cmp
nop
div
sub
jne
add
js
add
sub
dec
or
and
adc
call
jnp
sbb
xor
insb
je
inc
xor
jo
and
or
rclb
ljmp
rclb
cmp
xchg
sbb
add
mov
loopne
hlt
mov
dec
push
into
xor
mov
jbe
adc
or
lret
andw
cmp
pop
mov
je
scas
dec
dec
pushw
dec
add
adc
mov
jl
or
sbb
mov
inc
das
push
add
sub
cmpb
adc
aaa
mov
out
add
add
rorb
mov
jo
lock
mov
add
push
call
add
call
mov
pop
sbb
and
add
push
or
sbb
pop
push
ljmp
sbb
pop
pop
leave
pop
loope
out
loopne
lcall
adc
sub
movsb
jo
push
fxch
add
pop
add
xor
push
das
lds
pusha
inc
mov
cmp
mov
clc
pop
sub
push
je
call
jb
mov
dec
syscall
cmp
add
pusha
sub
or
jb
adc
cmpsb
call
and
xchg
jecxz
jnp
popl
subb
shl
pop
inc
lods
jle
mov
jnp
pop
inc
push
ret
sub
inc
inc
mov
sbb
pop
loopne
xlat
aam
jg
xor
lock
push
jb
and
cld
inc
adc
daa
mov
jo
push
add
mov
fcmovb
mov
xchg
ljmpw
fstpt
mov
mov
pop
cmp
xlat
mov
enter
or
jle
push
filds
fimuls
and
push
mov
mov
and
jmp
outsl
gs
popa
or
pop
push
sub
mov
or
addb
adc
push
lret
sub
mov
push
aad
push
sub
mov
pop
loop
and
pop
out
mov
sar
decl
sub
or
call
pusha
add
ljmp
movb
adc
into
nop
into
test
adc
xor
idiv
scas
cmp
addb
mov
pusha
cmp
jb
bound
and
pusha
sbb
incl
jo
pusha
adc
loope
sbb
loopne
cmp
sbb
loopne
xchg
mov
data16
push
jecxz
inc
push
push
dec
ja
dec
mov
push
loope
mov
call
push
loopne,pt
call
pop
sub
cli
not
out
call
mov
fistl
push
addb
pop
mov
dec
scas
add
xchg
dec
fcomip
loopne
popa
pop
sub
push
add
xchg
and
push
sbbb
pusha
xor
lea
jb
pop
addb
mov
call
pop
leave
loopne
clc
and
adc
outsl
fcomi
and
add
add
mov
mov
inc
jmp
mov
mov
cmp
pusha
call
sub
push
pop
jecxz
test
push
mov
clc
cmp
bound
add
nop
fdivl
push
adc
je
addb
cld
push
or
add
adc
or
pop
inc
call
mov
adc
jb
pusha
sub
adc
pop
push
pop
loopne
adc
call
jmp
adc
pusha
sub
mov
mov
js
lret
adc
test
je
push
xchg
inc
test
sub
add
test
cmpsb
outsb
movl
cwtl
inc
lock
add
mov
push
push
lea
out
mov
loope
or
adc
js
loopne
subb
insb
bound
jne
cmp
decl
addl
sti
and
dec
popa
or
ljmp
xchg
or
ss
pop
dec
icebp
pop
cmp
loopne
lock
lods
sub
hlt
push
mov
inc
adc
jnp
jl
push
add
fistps
jb
mov
add
add
jne
push
add
call
mov
push
ret
inc
daa
icebp
cmp
add
jo
loopne
idiv
sbb
add
pop
pop
jo
pop
pop
fiadds
pushl
loope
jo
gs
push
call
call
mov
xor
lret
xchg
add
icebp
jle
in
je
rorl
loope
ret
int3
in
imul
adc
mov
je
add
es
in
inc
sti
add
ret
mov
ja
inc
jle
xchg
test
cmp
hlt
push
push
addl
lock
push
lea
inc
or
imul
push
xchg
mov
sbb
jae
js
push
pop
mov
out
or
sub
adc
idivb
and
add
add
sti
or
lock
jp
and
rcrb
pop
jl
lock
jne
mov
je
scas
idiv
inc
or
mov
xchg
pop
mov
pop
mov
hlt
or
imul
je
xor
loop
rorb
or
test
push
mov
add
and
add
cwtl
dec
mov
xchg
fs
insl
andb
or
pop
movsl
adc
add
je
add
mov
sub
lock
lock
gs
clc
mov
scas
xchg
add
add
cmp
call
ljmp
inc
mov
xor
mov
push
icebp
cli
dec
call
mov
dec
and
daa
xor
add
cs
push
push
lods
mov
or
cmc
orb
movsb
xor
mov
subb
or
mov
call
js
sbb
pop
push
add
pop
and
add
jp
aaa
jae
mov
sbb
insl
mov
lea
xor
mov
adc
mov
ja
mov
ret
lea
sbb
add
cmc
lea
cmpsb
sub
push
lahf
mov
test
aaa
sbb
incb
add
shl
mov
scas
adc
add
inc
jmp
int3
sub
mov
sbb
or
rolb
or
cmc
cmpb
clc
add
mov
andb
sbb
pop
cwtl
pop
mov
adc
and
push
push
push
ret
sub
or
xor
shl
and
add
add
insb
or
jo
mov
cld
or
clc
pop
mov
push
mov
lds
push
lock
or
inc
icebp
mov
or
lock
scas
call
mov
jne
lods
call
lock
add
xor
cmp
pop
inc
das
xorb
call
lret
andl
fdivl
test
push
adc
xchg
lea
and
fdiv
call
add
movsb
lcall
pop
add
test
rol
inc
and
mov
stos
inc
dec
add
mov
jg
or
or
lcall
xor
stos
inc
xor
cld
push
push
cltd
scas
repnz
pushaw
add
lret
std
mov
mov
cmp
lea
cmp
jne
cli
pop
std
cmp
cmp
pop
lea
call
pop
cld
pop
sarb
pop
or
mov
div
icebp
nop
cmp
push
jmp
loopne
push
movsl
call
mov
jo
adc
mov
and
pushf
jo
test
lods
test
xchg
sbb
jmp
cmpsb
leave
pop
pop
adc
dec
out
adc
adc
mov
add
cwtl
fimull
push
dec
lea
add
mov
cltd
jmp
jb
into
jmp
adc
add
pop
cld
pushl
and
lahf
jno
jmp
add
dec
leave
ljmp
jmp
jno
mov
xor
push
mov
cmpsl
fcomps
test
cmc
test
mov
add
outsb
jb
push
sub
loopne
fbstp
add
mov
inc
push
in
xchg
cmp
clc
add
movsbl
loop
inc
xchg
ds
xor
xorb
add
jo
enter
into
push
and
add
stos
mov
sarb
and
jo
mov
inc
shrl
dec
call
push
jne
push
call
fdivs
cs
rcrl
push
xchg
mov
ss
push
mov
xor
mov
je
cmc
mov
mov
xorb
fistpl
jle
stc
push
adc
pop
and
aad
xor
mov
mov
sti
mov
es
mov
jo
or
mov
stos
pop
insb
cld
pushl
call
jle
xchg
cmp
mov
inc
push
mov
cli
out
xor
add
mov
je
and
int
aam
std
jne
jno
or
mov
jne
aam
test
mov
gs
scas
inc
sub
enter
sarl
mov
push
call
add
mov
sub
lods
mov
test
inc
outsb
insl
or
jb
push
enter
mov
and
sbb
mov
stos
or
fsubl
cld
repnz
cmp
push
lret
mov
int
mov
inc
rol
ja
pop
push
push
inc
scas
adc
sub
ret
mov
je
add
mov
add
pop
add
ret
mov
adc
cmp
push
aam
pop
inc
out
jb
adc
push
clc
lods
add
mov
mov
push
incl
mov
mov
add
cmp
jb
jmp
add
mov
xor
ja
mov
les
idivb
lcall
add
mov
adc
stc
or
mov
inc
fisubs
xor
add
dec
repz
orb
lcall
pop
aaa
xor
mov
add
jbe
lock
cmp
jmp
mov
das
mov
je
je
push
mov
cmpsl
add
push
lcall
add
adc
out
lock
ljmp
pop
jo
sub
add
push
or
in
pushf
sbb
negb
jge
pop
cmp
mov
cmp
xor
cmp
jge
mov
push
repnz
cmp
push
pop
call
fisubs
lock
sbb
loopne
jle
dec
sub
add
pop
cli
loopne
ret
xorb
jge
inc
jb
jl
sbb
push
pop
sub
jl
clc
aam
inc
inc
jp
and
xor
pop
jo
in
jle
es
adc
push
repnz
mov
mov
xorb
orb
fmull
mov
or
inc
push
jmp
pshufw
mov
jg
sbb
stc
sahf
mov
jecxz
mov
jne
test
push
add
enter
jmp
aas
push
lret
mov
dec
enter
popf
inc
std
js
sub
sarb
addb
lock
test
mov
data16
rol
in
stos
bound
inc
sbb
adc
pop
xor
js
mov
add
mov
xor
outsb
aaa
lock
jl
loop
cmp
dec
subb
aad
cli
dec
sarb
rorb
sahf
jl
push
pop
adc
cmp
and
mov
adcl
mov
movsl
aam
xchg
push
jecxz
push
cmc
fnstenv
in
sbb
dec
sbb
test
adc
out
add
fmul
add
push
or
nop
movb
sub
inc
movsb
scas
adc
rorb
jne
mov
inc
sub
push
sub
stos
xor
xchg
mov
sub
shlb
jae
enter
ss
mov
mov
mov
and
push
cmpsb
dec
cmp
fdivl
add
push
xor
shll
inc
fdivrl
fcompl
call
fwait
jbe
orb
rorl
cmp
xchg
mov
movsl
repz
and
push
inc
cmp
sbb
adc
pop
daa
test
adcb
insl
xor
push
cld
add
insl
jnp
es
jl
pop
mov
movsb
xor
ret
adc
mov
push
sbb
xor
xchg
jle
push
decl
test
loopne
enter
inc
cmp
jo
dec
or
jg
scas
rorl
sub
sub
clc
mov
sbb
mov
ret
cmp
add
inc
les
ja
sbb
insb
ja
cmpsb
std
add
inc
jg
add
test
cli
xor
addb
je
sbb
push
inc
dec
loopne
mov
pop
mov
lcall
xchg
adcb
dec
aam
hlt
sub
aad
cmp
orb
push
pop
rorb
fdivr
lock
cwtl
lret
mov
pushf
adc
bound
add
sarb
fs
or
das
xchg
pop
or
dec
call
and
ss
inc
adc
clc
inc
pusha
add
jl
in
adc
adcl
adc
and
subb
call
int3
inc
and
or
or
nop
adc
add
ljmp
inc
xor
jo
movsb
and
call
push
cmpsl
or
xchg
imull
add
jno
mov
xchg
dec
cld
fiadds
ss
fsubr
add
push
es
cltd
cmp
mov
mov
or
jbe
lea
dec
rol
addb
or
dec
popa
adc
rclb
and
inc
dec
sahf
enter
jp
ret
fs
iret
cmp
data16
sbb
jns
add
stc
inc
xor
jl
icebp
dec
lock
or
xlat
jge
mov
js
mov
xlat
mov
sbb
inc
xor
push
mov
notb
enter
sahf
inc
ret
pop
mov
lcall
scas
push
pop
in
cwtl
pop
call
mov
add
cmp
mov
mov
adc
mov
xchg
sbb
push
add
add
in
mov
incl
sarb
adc
lock
shlb
lods
add
pop
xor
cmpsb
mov
movsb
pop
pop
ja
es
pop
mov
shl
fidivrl
repz
mov
push
orb
adc
incb
mov
sub
ret
jge
cs
loop
add
cs
fadd
xor
shlb
pop
ss
push
mov
push
and
scas
or
mov
inc
cmp
sbb
jl
hlt
pop
inc
mov
sub
and
in
and
sub
lods
cld
xorb
ficomps
cmp
add
fs
add
sub
shlb
sub
sub
mov
cmpsb
push
sub
test
inc
and
jno
adc
mov
mov
push
into
ficoms
jo
into
cli
je
test
cli
xor
cmp
mov
mov
mov
fidivrl
sub
lods
sub
push
sub
dec
pop
stos
stos
mov
xlat
cmp
pop
mov
nop
int3
loopne
cs
pop
and
pop
test
test
pusha
adc
push
add
rcrb
mov
jbe
inc
fsubs
xchg
mov
or
lock
cs
add
pop
loopne
pop
ljmp
pushf
dec
cmpsb
mov
lcall
xlat
pop
cmpsb
pop
add
ret
add
dec
movsl
ljmp
jbe
sbb
sar
pop
add
lods
push
push
loopne
and
mov
mov
add
pop
mov
or
das
stos
lret
cltd
or
ja
pop
loopne
mov
scas
push
aas
add
sub
jmp
rolb
mov
inc
stos
shr
xchg
mov
jbe
pushf
imul
jmp
ss
out
adc
fcoml
pop
push
mov
out
mov
or
mov
jecxz
fs
push
sbb
outsl
lret
icebp
add
add
or
insb
pop
pusha
jle
gs
sub
into
ret
ss
fimuls
data16
les
movsb
mov
push
and
mov
or
data16
idiv
mov
or
add
and
lea
cmp
xor
sarb
andb
ja
addr16
mov
cmp
ret
or
mov
sub
cld
mov
cmp
add
movsl
mov
mov
popw
xchg
not
pop
cld
jmp
ds
fistl
cmpsl
loope
or
xor
lock
arpl
push
mov
add
loop
fs
js
push
xor
sbbb
mov
stos
loope
push
in
out
push
pop
cmc
stos
jg
pop
loopne
push
add
mov
or
and
mov
loopne
push
jb
mov
jge
je
loopne
jge
push
fdivs
ret
ja
test
or
dec
adc
clc
mov
ljmp
mov
adcb
repnz
stc
mov
mov
insl
loopne
or
loope
jg
lret
adc
sti
andl
jge
ds
iret
mov
cld
fbld
in
aam
and
loopne
stos
hlt
mov
ret
testb
jne
pop
sub
negb
adc
call
add
sub
pop
dec
outsb
jmp
loop
lret
adc
inc
pop
pop
push
inc
pusha
inc
ljmp
ss
xchg
bound
stos
push
mov
std
mov
outsb
add
mov
scas
mov
push
or
jb
in
cmpw
adc
sbb
and
sub
mov
xchg
jne
push
or
aad
pop
hlt
xor
inc
out
jl
mov
push
add
lock
adc
add
cmp
jg
movb
xor
cmp
into
sub
jo
dec
pushl
sub
loope
xchg
sbb
cmp
push
sub
mov
std
and
je
jp
ret
orb
fadd
daa
or
xor
lret
cmp
enter
fidivl
lock
inc
sub
mov
adc
sub
cld
inc
adc
mov
xchg
pushf
add
pop
enter
mov
or
mov
xor
aad
and
int3
jo
ss
pop
mov
lock
repz
mov
jg
add
mov
xor
jo
icebp
mov
call
add
and
sub
ret
sub
loopne
pop
loopne
push
hlt
sub
cmp
mov
mov
mov
add
cmp
push
scas
cli
dec
notb
mov
std
cmp
xor
pop
gs
xor
pushl
xchg
adc
outsl
cmp
icebp
aas
cmp
enter
add
or
xor
mov
ds
pop
pop
inc
mov
xchg
and
sub
je
jmp
add
add
mov
lock
loope
adc
add
adc
pop
cmp
push
std
loop
cld
add
push
mov
add
adc
inc
enter
call
add
xor
mov
ds
icebp
add
add
out
out
mov
ds
push
mov
mov
mov
add
repnz
sti
push
or
cmc
sbbb
jmp
mov
call
mov
add
std
xor
insl
add
lods
scas
test
dec
mov
lock
and
inc
or
test
add
adc
mov
mov
clc
clc
ja
push
pop
jg
adc
xchg
sub
sub
cmp
mov
or
adc
lcall
insb
andb
or
clc
jnp
sub
add
cmp
loopne
inc
rclb
jecxz
sub
inc
add
clc
decl
sti
jle
or
mov
add
cmp
repz
fnsave
call
bnd
pop
jne
or
out
inc
mov
jmp
jg
insb
ret
fcomi
cmp
cmc
mov
inc
and
add
add
pop
mov
mov
adc
jns
cmp
sub
dec
loopne
mov
ret
push
or
sub
add
mov
mov
clc
cltd
cmp
push
std
mov
and
and
lock
add
mov
mov
mov
adc
stos
cli
mov
andb
push
les
int3
and
add
ror
aaa
sub
sbb
and
mov
xor
out
push
aas
pusha
lock
adc
mov
push
enter
data16
inc
addl
push
push
rcrl
pushf
iret
push
ret
mov
pop
shrl
add
aam
pop
sbb
fidivrl
jp
xchg
sar
jmp
data16
shlb
mov
jmp
imul
jne
sub
es
jo
int3
in
insl
shrl
sahf
jo
inc
or
mov
lea
mov
push
fdivs
ja
cld
inc
cmp
or
push
or
lock
fsubp
cmpb
or
jbe
mov
daa
fimull
add
mov
cmp
loopne
push
mov
inc
aam
sub
push
cs
sbb
or
mov
add
adc
test
loopne
push
inc
shlb
ja
inc
cmp
shr
jp
lcall
cmpb
jbe
jle
add
xchg
scas
jle
add
cmp
jae
jo
mov
push
mov
or
push
ror
jne
sti
ljmp
in
add
repz
jbe
jmp
mov
sti
jne
mov
js
mov
push
fbld
ds
cmp
jae
mov
push
xchg
cld
icebp
sarb
popa
jmp
push
jo
adc
ja
outsl
xor
das
jmp
mov
lock
jg
add
add
xchg
add
xor
mov
andb
sbb
sar
add
std
xchg
incl
or
jne
call
aad
inc
loopne
jo
mov
pop
adc
fcoml
loopne
sarl
push
sbb
pop
xchg
fstl
ret
sbb
mov
mov
or
or
xchg
inc
add
mov
cmp
sbb
aam
js
cld
lea
jne
pop
jne
push
pop
out
incl
rcrb
push
jo
inc
dec
mov
sbb
sahf
or
push
nop
stc
ret
jnp
xlat
add
loopne
mov
push
fld1
xchg
add
mov
sahf
loopne
repnz
push
jp
outsb
stos
addl
daa
pop
aam
dec
stos
dec
mov
pop
xchg
sbb
mov
int3
lea
dec
decb
mov
or
hlt
in
push
inc
mov
jmp
ret
ret
rclb
push
sbb
pop
dec
cli
mov
adc
cmpsl
xorl
xchg
add
jge
andb
mov
pop
icebp
call
inc
jb
xchg
adc
stos
lds
ja
jp
int3
testb
orb
pushf
cmp
add
add
sub
js
jle
inc
int
aam
call
adc
add
mov
call
pusha
mov
inc
loopne
lods
aam
or
mov
pushl
mov
mov
mov
adc
adc
mov
dec
jg
mov
testb
inc
jo
inc
add
jmp
or
inc
xor
call
cmp
push
push
nop
aam
ja
add
mov
pop
add
cmp
adc
push
push
add
push
and
mov
mov
adc
jno
rcrl
mov
dec
dec
adc
out
sbb
ja
adc
pushf
jno
inc
or
inc
add
loopne
fiaddl
ret
mov
cmp
mov
out
push
mov
and
jg
or
jg
xor
mov
push
mov
or
or
fistpl
or
pushf
loopne
inc
or
mov
and
pusha
jl
adc
inc
fsubl
lret
hlt
add
cs
sub
std
pop
pop
add
push
mov
sbb
clc
call
mov
hlt
call
ficoml
and
add
inc
fisttps
inc
call
or
inc
lret
cmp
rolb
xor
idivl
rcrb
in
cmp
mov
add
and
test
stos
dec
or
mov
es
incb
sub
call
mov
arpl
sbb
push
inc
mov
mov
inc
push
cmp
push
out
ret
mov
or
and
add
and
and
test
jmp
dec
in
rcrl
ds
or
fisubrs
mov
pop
add
mov
mov
addb
xchg
out
icebp
pop
repz
inc
test
sub
mov
push
mov
jo
pusha
int3
call
outsl
addr16
pop
push
lea
cld
push
push
adc
jp
ret
clc
dec
xor
iret
ja
rorl
mov
dec
jge
cltd
insb
xlat
insl
pop
mov
push
cmpsb
shlb
xor
data16
adc
or
cmpsb
or
std
in
xchg
push
xchg
add
xor
inc
stos
in
loope
inc
sub
shrb
push
pop
mov
and
inc
and
shrb
and
lcall
shr
loop,pt
mov
fcom
fs
hlt
lods
inc
add
xor
push
fwait
push
test
pop
mov
pop
dec
fadds
lock
cmc
or
scas
push
lock
ret
arpl
hlt
push
das
loopne
inc
mov
sbb
insl
push
loopne
or
enter
push
mov
mov
jne
xchg
pusha
in
and
fidivl
fucom
mov
inc
pusha
dec
fwait
push
mov
loopne
in
sub
push
dec
sub
insb
dec
dec
or
and
mov
mov
ficompl
push
adc
or
out
mov
and
int3
adc
loope
inc
mov
adc
and
ret
cmp
rolw
or
cld
ds
test
xchg
sbb
add
lods
xchg
sub
jmp
sbb
cmp
shl
adc
cmp
dec
mov
nop
mov
dec
popa
xor
or
cmp
mov
pop
adc
xlat
pop
lea
push
add
call
adc
push
mov
inc
sbb
xor
push
sub
sbb
in
out
call
jecxz
and
test
test
push
cmp
jbe
cmpsl
lock
ret
test
outsb
xor
mov
or
jno
xchg
ljmp
fwait
mov
mov
add
dec
pop
or
inc
je
ret
pop
popf
sub
mov
scas
xor
scas
adc
lret
xor
and
cld
testb
clc
pushf
dec
clc
adcl
iret
jb
in
call
or
call
and
mov
call
fst
imul
adc
insb
lcall
sar
inc
fisubs
sbb
push
inc
fadds
lcall
dec
mov
xchg
or
rolb
mov
inc
roll
dec
mov
or
nop
in
jbe
imul
sahf
stos
das
data16
add
into
dec
rol
xchg
les
push
stos
sar
cs
hlt
ret
mov
or
or
daa
loop
or
dec
les
sub
sub
cmp
in
mov
push
sub
in
fidivs
stos
out
pop
add
pop
mov
rcl
xchg
scas
sbb
mov
mov
xor
test
es
inc
icebp
jno
addl
jbe
es
nop
push
inc
xchg
fcmove
les
jo
jne
decl
mov
cwtl
add
inc
fmuls
jg
loop
sbb
add
pop
es
mov
inc
ret
adc
packssdw
dec
sbbl
fisubrs
std
jmp
xor
cmp
lock
jl
or
scas
or
test
nop
dec
push
add
xor
je
inc
cli
or
leave
and
mov
mov
loope
push
or
mov
sub
and
cmp
out
shlb
decl
mov
loopne
jl
inc
or
or
je
push
or
adc
mov
sbb
cli
lea
scas
lock
fcoml
jae
decb
mov
pop
adc
das
mov
add
jmp
shrl
pop
pop
aas
loopne
adc
std
in
xchg
jo
pop
mov
push
push
add
push
adc
mov
and
mov
add
cmp
mov
sub
jp
adc
mov
jb
ror
jl
mov
jle
jb
xor
rorl
jg
int3
add
es
mov
dec
pop
jbe
dec
add
inc
icebp
xchg
testb
add
push
jp
sbb
pushf
jb
cmp
mov
cmp
xchg
mov
sub
mov
roll
mov
nop
ret
out
push
pop
je
push
xor
imul
cltd
cwtl
call
pop
shlb
sarl
inc
push
pusha
dec
ds
jl
dec
add
outsl
mov
rcrl
jmp
sbb
inc
dec
data16
jno
clc
rcrl
jae
or
mov
adc
jae
lock
mov
pop
ret
mov
mov
jae
mov
cmovs
jle
inc
fbld
mov
aam
sbb
clc
fdivr
or
push
jns
ds
es
fadd
or
mov
inc
into
jne
xchg
add
jne
push
in
je
jmp
inc
mov
cmp
imull
scas
mov
mov
or
sahf
xlat
outsl
mov
adc
adc
xor
lret
push
sahf
test
adc
jne
adc
or
jb
or
sub
dec
mov
insb
adc
mov
aad
stos
cmc
sbb
adc
fsqrt
out
fmull
sub
mov
ss
lahf
adc
pop
xor
xchg
mov
rcl
cld
jle
jge
out
je
push
or
mov
push
xor
js
mov
lods
scas
jecxz
push
dec
pop
push
push
mov
and
push
loopne
inc
into
pop
add
scas
ret
incl
mov
call
push
pop
mov
stos
mov
adc
add
repz
shl
ss
adc
pop
dec
cmpsb
jmp
sbb
jge
push
call
js
pop
test
call
je
jne
jl
mov
ret
sub
sti
cmp
jne
inc
mov
int
cmp
pushl
lock
jl
push
cwtl
out
mov
notb
shrl
xchg
jmp
clc
pop
out
add
lock
fdivrl
add
inc
mov
mov
pop
cmp
inc
adc
pop
out
push
add
or
ret
call
test
jbe
dec
outsb
sub
mov
iret
jl
lcall
sahf
cmovns
ja
xor
push
add
ss
ja
push
mov
sbb
push
sub
decl
inc
or
sub
add
repz
decl
mov
mov
cmp
mov
mov
cmp
inc
xor
pushl
subb
aam
adc
mov
xor
mov
adc
mov
adc
std
cmp
mov
out
pop
dec
dec
or
stos
push
int3
inc
push
or
push
int3
sub
divl
lods
lea
test
add
pop
clc
adc
sub
or
mov
jmp
pop
addl
clc
xchg
ljmp
fwait
adc
sbb
push
mov
je
cmp
sti
out
dec
sti
shr
hlt
icebp
mov
mov
mov
add
cmc
jbe
es
cli
out
push
insl
clc
jl
xadd
mov
jmp
mov
sti
mov
std
jbe
push
cmp
push
aas
mov
xor
cmp
mov
mov
mov
mov
jbe
cmc
push
rolb
sbb
sti
idivb
mov
shl
adc
ja
scas
add
pop
mov
xchg
out
sub
rorb
push
pusha
add
fldcw
cmp
bound
enter
sbb
xchg
fbstp
int
mov
mov
sbbb
or
sbb
inc
aad
mov
cvtpi2ps
ja
out
rcll
leave
je
fucomi
out
es
mov
dec
and
cmp
jb
je
clc
inc
sbb
nop
clc
add
cmp
subl
dec
inc
cmp
jne
stc
sar
inc
test
mov
mov
mov
mov
or
shl
aas
call
mov
stos
pushl
xchg
xor
jp
jle
je
hlt
mov
aad
loop
mov
je
int3
jl
aam
outsb
push
in
cmpb
testl
mov
lea
cli
push
mov
adc
mov
pop
ret
int3
mov
jmp
mov
or
pop
cmp
inc
hlt
dec
add
repz
mov
mov
mov
jl
mov
add
xchg
mov
or
inc
or
push
xchg
shll
in
xchg
push
lock
clc
icebp
inc
inc
cmpsb
lret
push
mov
mov
pop
pusha
cmp
fdivp
sbb
dec
sbb
loopew
adc
aas
les
push
dec
jne
sub
push
mov
jo
ljmp
cld
je
xor
ret
mov
decb
sahf
mov
je
mov
mov
or
push
mov
call
nop
ret
push
je
call
and
inc
adcb
mov
je
mov
dec
je
mov
je
pop
xor
mov
je
add
push
push
sbb
add
lret
call
imul
scas
into
mov
push
popa
divl
cmp
das
xor
add
or
mov
mov
fbstp
shrb
div
rcrl
pop
xchg
sbb
jb
push
push
lret
dec
lahf
sub
mov
testb
or
xchg
stos
les
lcall
stc
outsb
ret
fwait
cmp
addr16
pop
xor
adc
add
mov
pushf
pop
dec
mov
push
decl
xor
jo
cmp
mov
ds
pop
cwtl
sti
cmp
pop
inc
add
aam
int3
andb
pushfw
lock
mov
mov
add
xchg
dec
mov
push
data16
sbb
adc
data16
lock
movsl
cmp
cmp
xor
into
cmp
sti
out
lods
pop
out
inc
sti
aaa
or
pop
test
push
jne
cs
add
jmp
clc
negb
mov
pop
addl
je
add
je
addl
push
sbb
mov
sub
mov
pop
mov
ds
push
xor
out
lods
inc
inc
adc
pop
inc
pushl
and
add
inc
sub
incb
rcll
cld
ss
or
push
push
pop
pop
mov
fildl
push
out
jge
ss
dec
cmc
inc
sahf
ret
mov
or
pop
sub
jne
call
outsl
mov
mov
cmp
outsb
xchg
inc
movsl
test
lret
inc
lea
xor
mov
jbe,pn
or
fs
push
mov
add
push
les
mov
lock
out
dec
adc
sbb
jmp
or
add
je
leave
lret
sub
bound
and
push
lea
ja
xor
xor
add
adc
add
sub
cmp
ja
mov
pop
cld
inc
ljmp
pushw
pop
cld
lea
cmp
cli
test
cmovno
jbe
add
dec
jbe
jg
xchg
push
imul
or
xchg
mov
mov
cmp
cmpsb
fisttps
mov
aam
clc
mov
cmp
std
mov
int3
je
sub
cmp
jbe
and
cmp
orps
add
pop
push
cmp
ljmp
ja
inc
jo
icebp
push
je
jg
pop
jne
mov
rorl
dec
testb
jo
sub
cmp
pop
je
mov
aaa
mov
lods
adc
mov
cmp
add
mov
stc
adc
cmp
jb
cmp
ja
cli
inc
inc
lea
test
jbe
push
rolb
push
stos
sub
and
repnz
add
shll
push
dec
and
add
pop
push
ret
add
in
ret
out
mov
adc
xlat
push
pop
jo
add
push
arpl
inc
enter
cmp
psrad
or
lcall
or
addb
cli
jge
jbe
fcomp
or
xor
sub
ret
xor
mov
push
cmp
jno
mov
sbb
repz
loope
mov
push
push
aas
dec
add
jo
stos
rclb
jecxz
aad
stc
fcompl
push
jnp
not
fdivrl
and
je
cmp
iret
cmp
jmp
cld
push
inc
push
push
push
lods
push
das
or
nop
test
loopne
cmpsb
push
jb
inc
dec
call
jg
fwait
sub
fiadds
jo
mov
or
sub
add
cmp
inc
dec
incl
xchg
incb
xlat
xor
lcall
test
jp
adc
int3
adc
add
ret
testl
daa
mov
pop
jbe
cli
inc
or
inc
or
jg
mov
stos
test
test
fs
or
orb
add
mov
enter
xchg
orl
test
adc
fbstp
call
pusha
mov
sub
ljmp
inc
and
add
add
sub
jo
sbb
sar
inc
rolb
cmpb
cwtl
pop
sbb
fucomip
cmpsl
ret
cmp
push
outsb
fdivr
jbe
dec
cld
sbb
pop
loope
sub
add
or
push
mov
fs
add
cmp
mov
loop
cmp
mov
add
fisttps
lock
call
jg
jo
incb
adc
dec
adc
outsl
mov
call
sbb
orb
cld
cmp
or
inc
js
inc
ljmp
ljmp
sbb
and
cmc
shlb
ficomps
add
test
in
or
sub
adc
jbe
insl
xchg
push
fisubs
shlb
inc
test
push
adc
enter
push
cmp
jmp
es
xchg
rolb
xor
pop
adc
aas
subl
dec
sti
mov
pop
out
lea
sbb
inc
stos
sbb
push
jbe
mov
mov
test
call
jb
mov
pop
cmp
inc
in
sub
cli
ret
and
jg
jmp
push
mov
insb
outsb
push
testl
pop
shrb
pop
push
pushl
push
pop
cmp
jne
push
adc
push
test
movsb
cld
sub
adc
pop
pop
pop
pop
jae
push
cmp
sub
in
insb
dec
pop
insb
ret
mov
int3
and
adc
loop
test
lods
sbb
xor
js
arpl
inc
push
call
mov
and
ds
jge
fisttpll
add
pop
mov
enter
push
push
add
sub
gs
mov
push
jne
rorb
adc
fdivs
mov
cmp
mov
jle
rorl
shlb
push
aam
cld
xchg
outsb
dec
in
jbe
fsubrl
lea
test
adc
sub
pop
dec
cwtl
and
divb
cld
in
dec
jo
jb
jl
push
jg
push
loopne
cmp
add
sarb
dec
subb
test
add
sub
je
push
adc
mov
jo
loopne
mov
push
fwait
je
testb
movsb
mov
inc
add
add
mulb
or
jle
adc
adc
mov
adc
das
push
enter
add
or
and
mov
int
inc
mov
add
xchg
shl
pusha
hlt
mov
fsub
add
push
pusha
push
bound
dec
inc
add
enter
nop
push
insb
loopne
movsb
fimuls
xchg
add
jb
inc
pushf
push
and
push
out
xchg
add
dec
sub
lock
ja
mov
in
inc
push
pop
leave
call
inc
outsl
insb
mov
add
ffree
add
cmp
push
jg
mov
mov
and
test
jo
call
mov
sarb
rorb
and
data16
enter
loopne
dec
lea
jo
clc
call
mov
or
call
popa
pushl
loope
jge
lods
repnz
sbb
out
cmpsb
pop
mov
out
mov
loopne
jns
dec
js
inc
orl
mov
cli
int3
test
xchg
and
pop
mov
call
jae
mov
loop
add
jl
pop
add
rorb
in
dec
ret
fists
call
out
add
fsub
adc
mov
add
inc
das
cmp
adc
mov
add
xchg
pusha
orl
int3
stos
jb
fwait
inc
inc
cmp
loopne
mov
stos
sbb
xchg
mov
mov
pop
add
loopne
xchg
loope
je
and
mov
sbb
insb
xor
mov
mov
fs
mov
js
adc
and
sti
das
cmp
call
xor
adc
xchg
xorb
dec
sbb
add
mov
punpcklbw
push
or
rclb
mov
jb
xchg
les
pusha
mov
sti
mov
loop
mov
cmp
xor
divl
subb
sti
outsb
mov
adc
inc
call
mov
add
das
jp
push
jg
push
xchg
lock
or
pusha
pop
lcall
mov
addr16
pop
add
fcmovnb
mov
dec
cmp
aas
sbb
dec
sahf
add
cmpb
and
inc
jo
rcrl
shrb
mov
cmp
mov
mov
orl
cld
pop
pusha
loope
adc
or
inc
loopne
stos
inc
pop
add
sahf
add
dec
and
bound
mov
add
push
lock
sub
sbb
pusha
test
pop
and
mov
adc
pop
dec
icebp
aad
call
lods
je
incb
in
add
call
mov
xor
and
andl
push
mov
loopne
adc
pusha
ret
decl
or
mov
out
and
add
add
adc
int3
scas
cmp
inc
cli
mov
jae
add
loopne
pop
add
xchg
call
popa
scas
add
push
mov
sarb
scas
je
ss
push
and
mov
fldl
jg
jge
adcl
jge
jecxz
sub
xor
dec
loope
movsb
jl
push
push
dec
pop
adc
or
mov
adc
sub
push
enter
sti
ljmp
call
adc
sbb
call
shrl
test
sbb
ss
jg
test
adc
pop
pop
and
add
adc
clc
decl
mov
xor
jb
inc
clc
jo
pop
mov
mov
jp
add
sbb
sbb
sbb
clc
pusha
mov
add
mov
jmp
in
add
add
mov
mov
mov
or
inc
dec
mov
mov
stos
dec
push
or
cwtl
jb
inc
adc
sub
jo
xor
mov
decb
mov
inc
push
sub
push
sub
mov
add
adc
xchg
mov
icebp
xor
pop
xchg
insb
mov
loope
cmp
or
mov
push
rclb
add
jno
enter
test
and
dec
sub
and
add
insl
add
jno
subb
cmp
adc
pop
adc
sub
adc
adc
jo
sub
rcll
sbb
mov
lock
in
sahf
xor
jge
xchg
add
jge
rcl
push
clc
jl
adc
sbb
cld
xchg
rolb
adcl
je
mov
jg
sub
mov
jmp
add
jmp
sub
ret
in
dec
je
add
nop
sbb
dec
nop
inc
jmp
rclb
jmp
jo
push
jbe
sub
lea
lock
add
sbb
or
outsb
stos
mov
das
jo
mov
push
sbb
push
jo
mov
lods
in
push
push
jae
fmuls
xchg
xchg
add
fisubrl
push
in
ltr
call
in
pop
pop
adc
adc
and
cmp
js
push
sub
sbb
dec
outsl
dec
xor
or
rorl
cmp
push
mov
je
sub
ror
xor
add
mov
hlt
sub
push
mov
xchg
je
jo
add
and
js
pop
inc
jge
xchg
jmp
cmp
cmpsb
mov
jmp
test
push
sarl
fdivrs
sbb
movb
loop
inc
xor
pusha
repz
jmp
mov
addl
pushl
test
cmovg
lock
cwtl
xchg
and
xor
push
xchg
in
xchg
cld
jmp
insl
inc
xchg
jo
dec
ds
xchg
sbb
mov
add
test
and
div
pop
push
push
mov
filds
xchg
jge
sub
mov
or
xchg
hlt
fdivl
test
sti
outsb
cs
les
push
push
loop
shl
imul
add
aas
rcr
pop
cmpb
test
inc
push
lods
push
xchg
je
sbb
xchg
and
push
pop
inc
add
sbb
or
add
fcmovbe
jle
test
xor
sahf
jl
bound
sbb
push
ljmp
push
nop
push
arpl
movsl
mov
add
jb
aas
sar
inc
add
add
jge
and
cld
inc
fimull
adc
gs
sub
xorb
sbb
pop
call
push
mov
sti
imull
adc
into
nop
sbb
sti
lock
mov
push
sub
clc
lcall
ja
add
je
jb
add
addl
ja
ret
call
and
ss
cmp
cmp
or
ret
add
jmp
mov
add
aas
test
call
inc
jg
mov
cld
push
jne
dec
cmp
jne
xchg
scas
jb
xchg
jbe
or
fidivl
loop
incb
mov
mov
jne
mov
fists
cmpl
xchg
in
or
xlat
in
or
clc
mov
jecxz
cmp
out
inc
jo
add
fwait
jmp
add
cmp
test
lock
xor
add
inc
out
loopne
sub
cmp
add
rclb
add
push
xchg
stos
dec
push
sahf
inc
mov
mov
mov
jl
or
add
jo
in
adc
jl
sti
adc
loope
adc
pusha
pop
and
add
mov
andb
push
push
ret
pop
adc
movsb
test
dec
jmp
ds
jo
filds
in
jne
xor
add
test
add
lods
mov
xor
adc
cwtl
inc
fs
je
jmp
mov
xchg
lea
and
data16
test
and
outsb
bound
mov
out
enter
rorb
add
push
jmp
rolb
push
sbb
jo
mov
sbb
mov
ljmp
push
add
jle
loop
clc
call
mov
ljmp
or
mov
fucomi
inc
xor
mov
cmp
jle
mov
test
rolb
push
jnp
mov
and
pushl
mov
mov
pop
testl
sub
add
and
clts
add
mov
setb
in
push
or
mov
jg
fsubs
cmp
and
adc
repnz
mov
mov
mov
pop
or
adc
and
push
jo
add
in
pushl
and
decl
xor
add
stc
sbb
js
test
clc
inc
mov
pop
cld
mov
ja
push
adc
jo
mov
adc
mov
push
inc
rcr
and
cmp
mov
sbb
addb
jp
add
jae
add
fisubrs
aad
rcl
mov
ds
repnz
nop
roll
pusha
je
sub
or
push
cli
add
fists
sahf
stc
mov
clc
jo
inc
mov
loopne
mov
or
jo
das
jae
sbb
shll
add
fbstp
jo
cs
orl
fisubl
arpl
jmp
or
mov
clc
or
and
push
xor
test
stos
sbb
add
inc
jecxz
dec
mov
js
or
stos
ljmp
xor
mov
xor
jecxz,pt
mov
lock
int3
daa
push
pop
adc
cld
test
aam
pusha
imul
aam
dec
inc
cld
popf
xchg
dec
xor
mov
push
ret
and
clc
pop
add
call
and
push
icebp
push
add
mulb
lock
cmc
fldt
push
lock
icebp
pop
mov
mov
xor
pop
mov
mov
cmpsl
popa
in
sti
pushl
cmpb
lock
pop
jno
pop
or
aaa
xor
aas
test
pop
cld
xor
repz
mov
sub
push
push
pop
xchg
xchg
add
mov
je
loop
pop
mov
mov
or
push
bound
mov
outsb
and
or
add
ret
jbe
inc
imul
decb
adc
add
orb
sub
push
xor
inc
cmp
popa
ret
mov
data16
mov
enter
dec
jmp
lods
roll
adc
enter
add
ljmp
pop
add
test
xor
je
adc
pop
in
jle
jg
aaa
or
rolb
dec
sbb
jbe
or
add
mov
dec
add
call
lret
ret
fcoms
and
shr
or
mov
jbe
adc
inc
je
pop
sub
mov
dec
mov
inc
pop
pop
jmp
fimull
xchg
fsubrs
mov
dec
pusha
cmpsl
loop
hlt
pop
or
xor
or
scas
inc
jbe
cmp
test
jbe
addl
xchg
lds
sbbl
fsts
in
mov
cmp
jne
push
add
fisttpll
mov
mov
andb
or
adc
pop
imul
push
and
or
jmp
xlat
orb
ljmp
lcall
adc
xchg
addb
cmp
cmp
sbb
int3
rclb
scas
xor
stos
or
test
xor
push
ljmp
mov
ret
subb
daa
push
mov
dec
call
push
inc
xor
fbld
hlt
cmp
shlb
or
jmp
fistps
cli
jbe
and
xor
mov
cmp
and
pushf
dec
rorb
jl
test
cmp
aam
xor
lds
mov
outsb
jb
nop
data16
les
xchg
fbld
mov
jb
mov
sbb
jg
rcrb
or
arpl
das
cmp
lds
fisttpl
cmp
inc
loope
mov
rorb
pop
shlb
pop
xorl
subl
aaa
out
cmc
adc
inc
js
push
call
add
movsl
js
fcompl
out
insl
inc
notl
inc
outsb
das
push
jle
push
sub
adc
inc
rclb
add
bound
add
dec
dec
push
movzbl
and
jne
add
inc
fcoms
add
cltd
sub
stos
and
mov
aad
dec
add
add
sub
test
push
sub
outsl
mov
xor
lret
jl
jle
cmp
push
sbb
je
addl
movsl
push
sbb
pop
int3
push
scas
aam
ljmp
je
jp
insb
inc
sub
dec
rorb
dec
repnz
sbb
lea
sti
mov
jle
mov
dec
jmp
lea
rclb
and
psubb
clc
jnp
adc
mov
xor
rcrb
out
add
xor
jl
and
mov
fldt
mov
push
jb
addl
pop
pusha
aam
add
sub
outsb
fdiv
dec
inc
ret
xchg
pop
fnstenv
or
lea
cmpb
pop
out
add
mov
adc
xorl
nop
cmp
dec
sub
or
ss
jmp
add
mov
add
push
jne
push
and
nop
mov
es
stc
jmp
data16
jb
add
cld
cld
fwait
mov
adc
adc
inc
mov
inc
push
adc
lcall
push
out
adc
incl
cmp
push
or
mov
pop
mov
outsl
out
popa
add
xor
rcrb
adc
sbb
loopne
cli
or
jle
cmp
add
adc
mov
xchg
push
testl
add
fs
pop
popa
add
test
loope
js
jmp
jne
imul
decb
popa
add
pusha
add
out
iret
cmp
ja
data16
data16
mov
inc
sub
loope
or
bound
cs
push
mov
push
repnz
or
popa
or
and
pop
shlb
inc
ds
adc
xchg
lcall
shl
les
ret
rcrb
inc
rcrb
xchg
jb
jmp
shr
mov
adc
adc
punpcklwd
and
or
adc
and
pusha
and
test
jmp
orb
sbb
adc
inc
add
adc
sub
add
jnp
jmp
sub
adc
lock
pusha
jmp
mov
lret
or
das
shlb
or
inc
lret
add
add
iret
data16
dec
add
cmc
mov
add
dec
push
and
jg
ret
fisttps
loopne
loope
loopne
or
adc
jne
loope
pusha
xchg
sub
sbb
loop
or
or
sbb
jle
or
popa
pop
adc
jbe
inc
cmpb
popa
cmp
inc
push
loope
and
adc
fsin
dec
dec
push
sti
cmpsb
mov
mov
add
add
jg
jp
adc
and
nopl
bound
push
mov
pop
add
or
aas
pop
sub
add
bound
xchg
in
add
jl
lea
or
mov
mov
xchg
out
clc
and
xor
jmp
imulb
loopne
pop
add
rolb
imul
mov
lret
adc
sbb
lcall
inc
ds
bound
push
jmp
jmp
push
aaa
jecxz
lock
push
fldcw
jmp
jecxz
push
or
pop
add
ljmp
cmovns
mov
jb
ja
rcrb
push
insl
test
or
and
dec
xor
add
mov
jno
and
cmp
cs
pop
mov
mov
incb
xchg
sbbb
pusha
sbb
adc
loope
inc
jl
pop
jp
loopne
xorl
mov
cli
push
jo
mov
loopne
or
jmp
or
xor
or
and
add
jmp
adc
mov
in
jmp
int
cs
js
jo
lock
jmp
push
lahf
lock
mov
add
inc
cwtl
mov
push
out
or
sbb
add
xchg
push
jne
fucomip
add
pushf
and
add
cld
popa
pop
push
fildl
out
cld
xchg
repnz
jmp
mov
jne
jb
je
push
mov
popa
imul
ret
aas
push
dec
lret
fidivl
or
jmp
addl
sub
inc
jo
xor
and
add
and
mov
adc
mov
cs
push
or
icebp
dec
repz
mov
push
imul
xor
dec
cmp
sub
jne
das
cs
xor
lret
filds
loop
jo
fcomip
add
mov
and
aaa
mov
repz
cmp
orl
jp
clc
cli
lock
mov
int3
lds
cs
repnz
xor
adc
xorb
jmp
sub
lock
fisttps
sub
in
push
sub
je
push
jae
push
insl
xor
jb
invd
test
add
xor
xchg
or
ljmp
jl
and
repz
xor
jle
cs
rclb
and
xor
sub
in
shl
add
mov
movsb
rorb
mov
pop
cmp
out
sbb
add
loopne
push
jno
cmpsb
or
mov
or
andb
jg
fldt
pop
bound
jp
jp
mov
pop
sbb
clts
pushl
add
pop
inc
or
add
ret
pusha
fidivs
mov
push
inc
mov
jg
in
xor
in
xor
aas
or
or
xor
push
mov
cmp
adc
xor
jmp
mov
lock
inc
clc
pushf
outsl
test
pop
add
mov
in
add
test
movb
pop
in
inc
add
loop
imul
je
or
cmc
xor
fmuls
mov
jno
in
sbb
out
bound
add
mov
je
mov
add
jno
push
or
jo
test
dec
lock
adc
xchg
or
mov
and
add
and
lock
jmp
stc
push
bound
leave
mov
dec
jo
add
ljmp
and
jmp
fistpll
or
sbb
inc
sub
add
sub
call
sahf
jmp
mov
or
icebp
push
pop
mov
push
cs
mov
or
push
outsl
mov
adc
jo
pop
stc
mov
fstpl
jmp
sub
jo
rcrb
add
aad
xorl
mov
pop
cmc
xor
callw
push
mov
and
mov
mov
add
paddq
icebp
add
je
pusha
pop
ja
outsl
push
cmp
icebp
sbb
push
inc
ja
pop
or
add
and
or
cmp
adc
icebp
add
add
xor
sub
jg
push
call
clc
sbb
xor
insl
xchg
inc
nop
adc
push
pushf
mov
sub
fcomi
sub
mov
je
add
mov
je
cwtl
ljmp
pop
dec
xor
add
jg
mov
repz
negb
or
shrl
and
jb
cmp
jnp
or
mov
sub
hlt
leave
aam
out
pop
and
dec
dec
pop
xor
and
mov
xlat
es
xchg
dec
jl
inc
mov
add
pop
mov
hlt
add
adc
jo
mov
or
jg
cmp
cmp
ss
and
inc
outsb
xor
pop
cmpsb
and
jmp
ja
pop
inc
adc
dec
stc
testb
mov
inc
xor
xor
mov
xor
xor
add
roll
xchg
and
jb
fs
fmuls
cld
jg
push
and
add
xchg
xor
mov
decb
sub
divb
push
scas
push
mov
ret
sub
sbb
ret
add
fwait
jl
call
mov
call
inc
xor
repz
cld
outsl
push
das
mov
adc
or
pop
inc
pop
jbe
push
cmp
pushl
sub
outsl
push
sub
lods
jns
mov
outsb
and
sub
mov
ret
sbb
adc
lods
xchg
xor
add
add
out
pop
and
add
mov
push
add
test
bound
push
in
cli
mov
stc
mov
jae
sub
jae
cwtl
pop
mov
add
pop
dec
jo
jo
or
cmpsb
add
pushf
rclb
pop
xor
inc
or
cwtl
mov
and
sub
sbb
xor
push
jbe
subb
test
and
lock
or
mov
sub
sub
ss
call
mov
or
lret
dec
shl
in
popf
clc
pop
icebp
test
mov
push
adc
mov
jo
mov
or
push
inc
adc
push
push
push
cmc
push
dec
jmp
xchg
jnp
ljmp
jg
leave
mov
mov
sub
push
cmp
lcall
and
xchg
jne
das
pop
shlb
shll
mov
cmc
pop
and
ret
cwtl
ret
sub
sub
decl
adc
and
add
and
pop
ss
data16
or
add
je
dec
aaa
loop
icebp
or
cmovb
push
push
inc
add
fwait
cmp
cmp
jne
insb
repz
or
add
lea
cmp
or
mov
or
hlt
pop
add
fs
jbe
mov
sbb
add
jne
pop
lock
xchg
fildl
cmp
test
adc
add
dec
lret
jg
and
add
push
inc
shlb
shlb
sbb
xor
jo
pusha
rclb
add
jbe
inc
cwtl
cwtl
das
hlt
enter
add
add
data16
sub
outsb
mov
adc
insb
outsb
adc
aam
xor
push
mov
imul
mov
adc
leave
xchg
jbe
sub
or
push
test
outsb
pop
sbb
or
ljmp
je
mov
mov
pop
mov
add
pop
add
cwtl
cld
data16
jne
mov
addb
or
mov
add
or
xchg
add
dec
enter
xor
add
dec
adc
cld
cmp
enter
lea
xor
add
mov
scas
sbb
es
pusha
aam
subl
cli
push
xchg
xorb
cmp
vmovsd
or
xchg
adcl
clc
icebp
je
js
cli
xorb
je
orl
mov
dec
subb
adcb
test
sbb
in
sbb
sub
inc
inc
orl
dec
inc
jl
mov
jne
js
xor
adc
push
mov
jbe
subl
or
mov
cli
lds
add
sub
add
sbb
das
push
cli
data16
adc
les
add
add
dec
jp
pop
repz
rolb
jmp
jle
dec
add
push
mov
cmc
adc
or
sahf
adc
sbb
sbb
aas
fcomp
or
push
mov
shr
into
inc
enter
add
rolb
loopne
call
or
stc
and
mov
add
mov
add
adc
or
and
add
push
negl
shlb
cmpsb
imul
inc
xchg
sub
jle
shlb
call
xchg
and
add
lcall
test
mov
cli
xchg
mov
je
or
add
fs
test
adc
mulb
adc
shll
rcrb
ret
inc
xchg
fidivrs
pop
rolb
jl
mov
in
fidivrs
pop
addb
pop
mov
pop
push
rcll
sub
push
filds
pop
or
ljmp
jae
mov
mov
jmp
std
mov
or
mov
add
inc
loop
jg
add
add
mov
cmp
mov
push
imul
add
cmp
enter
lods
lea
mov
adc
jp
incl
jp
rorb
int3
or
inc
inc
pop
and
jg
sub
push
xlat
jmp
scas
mov
call
rorb
jae
rorb
sbb
shlb
push
xor
das
je
adc
stos
push
push
subb
and
fnsave
shrl
push
push
sbb
hlt
cmovno
push
repz
es
push
dec
clc
repnz
add
lock
xchg
sub
inc
mov
cmp
jmp
das
loope
adc
jle
lcall
movsb
xor
imul
lock
cltd
add
loopne
pusha
lods
push
shl
xor
inc
or
cmpsb
lock
cmp
inc
imull
xlat
push
or
and
mov
and
icebp
aam
dec
int
xor
pusha
adc
jecxz
pusha
sbb
push
pop
out
cltd
rorb
mov
mov
scas
xor
divb
and
pusha
cmp
enter
xchg
add
loopne
out
push
push
rorb
mov
sub
sub
pusha
or
fdivs
push
stc
mov
or
or
sbb
popa
mov
jmp
or
jecxz
add
por
and
lock
ljmp
rcrb
adc
icebp
mov
add
xor
adc
insb
cmp
lods
push
add
pusha
in
into
loopne
lds
lds
loopne
or
mov
loopne
mov
pop
pusha
jl
jecxz
clc
pop
imul
data16
loope
push
or
jp
mov
adc
ret
ds
je
inc
decb
outsb
or
pusha
jg
or
add
pusha
dec
mov
fwait
and
add
jno
pop
and
push
jo
dec
sbb
pop
roll
loopne
repnz
add
fstpl
xchg
fisubrl
nop
push
repz
jb
orb
pop
jae
outsb
dec
dec
pop
pop
push
or
or
neg
mov
add
or
push
push
jbe
sub
stos
or
outsl
roll
and
inc
inc
aad
add
stos
test
enter
xor
stc
push
popa
or
js
insb
dec
add
jl
inc
pop
imul
ss
decl
mov
add
add
dec
xorl
push
loop
rolb
or
lods
dec
insl
cmp
sbb
adc
arpl
mov
cwtl
js
scas
in
es
jbe
cltd
push
adc
mov
pusha
shr
pop
out
cmc
add
jmp
sbb
cld
push
add
or
sbb
test
xor
mov
int3
inc
adc
pusha
xchg
pop
adc
xor
mov
add
push
adc
ja
add
sub
adc
add
loop
mov
add
fdivr
pop
inc
stc
add
stos
call
xor
cli
adc
xchg
jbe
xor
cmp
inc
imul
or
loopne
push
cli
xchg
dec
jno
ljmp
inc
subb
jle
cld
stos
popl
pop
inc
inc
lods
inc
sahf
je
lock
or
aam
std
pop
pop
sbb
jne
cmp
fnstsw
cmpb
pusha
orb
xchg
nop
lcall
movzbl
sub
enter
enter
fstl
lock
testb
dec
ljmp
push
sbb
add
pushf
data16
idivb
enter
pusha
sbb
mov
add
add
xchg
push
test
adc
push
outsl
jp
in
push
inc
jo
adc
push
add
pop
mov
adc
xchg
mov
cs
pop
mov
loop
cmpsb
stos
and
xlat
cld
add
lcall
or
sbb
je
pop
adc
ret
je
stc
pop
push
sub
mov
sub
outsb
fs
inc
jmp
and
push
jmp
adc
or
jbe
inc
in
sbb
adc
pop
dec
add
repnz
cld
mov
jbe
jl
push
push
and
xchg
push
shll
push
lock
and
and
dec
mov
push
or
sub
lds
push
mov
outsl
jg
push
pusha
sbb
adc
pop
adc
cmp
lock
ret
mov
xor
inc
fwait
imul
push
sub
or
add
pushl
xor
or
test
hlt
ljmp
sbb
and
aam
pop
xor
add
xor
xor
call
shrb
pushl
pop
movsb
jno
lock
bound
in
filds
cmc
or
addb
enter
pop
xor
jle
sub
call
adc
or
pop
fiaddl
or
je
xorb
fucomip
aas
mov
push
and
divb
into
add
pushf
jo
jmp
or
jle
and
mov
sbb
jg
aaa
and
scas
push
test
bound
jl
icebp
repz
outsb
sti
cmp
js
aad
xorl
push
mov
add
mov
fiaddl
movsl
add
xor
ss
pop
sub
inc
sub
jbe
add
out
sub
adc
js
out
dec
pushl
mov
pop
dec
sar
push
int3
into
shll
repz
adc
and
arpl
push
inc
mov
aaa
adc
mov
clc
sbb
repnz
lea
add
mov
or
and
or
pop
pop
movsl
cli
pop
insb
in
add
cmpl
or
push
cmp
and
push
sbb
pop
insb
mov
aam
add
push
mov
and
cltd
cmp
sbb
xor
mov
clc
aad
mov
push
pop
cltd
pusha
rcrb
sub
ret
std
pop
roll
push
into
add
push
std
pop
ret
icebp
and
mov
add
roll
add
cwtl
lret
push
adc
mov
into
loopne
push
iret
xor
or
push
je
add
inc
cld
push
adc
test
dec
test
and
sti
shlb
bound
shr
mov
sbb
add
add
add
nop
call
cmc
cmp
or
je
adc
pop
adc
loop
repnz
jo
xor
mov
and
mov
in
xchg
push
xor
or
push
call
data16
loop
or
xor
jo
push
je
test
pushl
sbb
mov
pop
pop
ss
add
add
push
xchg
sub
push
pop
pop
adc
push
je
add
adc
mov
jo
rorb
dec
xorb
xor
in
and
lcall
mov
je
mov
jo
or
add
cwtl
xor
push
or
call
or
add
or
add
call
cld
sub
or
les
mov
mov
test
adc
inc
or
pop
filds
cmpsb
pop
or
sub
mov
shll
fildl
incl
dec
cmp
cmp
cmp
add
lock
sub
lock
hlt
lea
xor
cmpsb
xor
jb
inc
ret
loopne
inc
lds
jb
mov
jmp
pushf
ja
sbb
adc
xor
cli
cli
ja
push
incl
add
addb
adc
add
fildll
pop
testl
pop
mov
add
add
jmp
movsw
add
jle
test
jp
add
rcrb
cmp
pusha
xchg
sahf
adc
and
sarb
and
push
jl
or
add
jo
add
adc
adc
sbb
loop
and
mov
push
jae
mov
cmp
dec
inc
movsb
xchg
push
push
and
data16
incb
jmp
pop
xchg
pop
or
call
xchg
rsm
lock
or
xor
sbb
pop
xor
sbb
push
rorl
lods
incb
fisttpll
loope
xor
js
xor
inc
mov
xchg
jo
or
lea
loopne
pop
testb
je
mov
add
scas
cmp
xchg
lea
xor
push
loop
push
adc
mov
jle
test
bound
pop
fadds
jle
mov
xchg
fisttps
mov
jg
or
jo
mov
sub
jb
ljmpw
test
push
mov
or
cmp
or
jmp
das
cli
sbb
in
cmp
loopne
jo
or
inc
jno
mov
sbb
jo
pop
incl
lock
jge
lahf
push
cld
mov
adc
lock
push
pop
mov
bound
push
adc
jp
in
or
dec
cld
dec
pop
mov
repnz
ljmp
and
xchg
ljmp
and
shl
ret
xchg
mov
xor
or
stc
or
or
mov
lock
out
adc
lock
cmpsb
sbb
daa
mov
sti
out
aad
and
cld
push
xor
movq
jbe
addl
cli
jb
add
xchg
and
sub
adc
cmp
jo
cmp
jb
jmp
add
add
je
dec
outsl
sbb
cmp
dec
in
mov
decl
inc
adc
pop
mov
xor
pop
pop
push
add
lds
push
inc
icebp
inc
addb
mov
data16
mov
push
jo
roll
add
mov
clc
clc
mov
inc
jbe
mov
jmp
mov
adc
mov
pop
test
jo
jo
mov
and
xor
repnz
push
mov
mov
pop
mov
in
lock
xor
or
add
scas
jl
or
decb
call
adc
in
add
add
pop
mov
clc
sbb
sub
mov
mov
and
stc
fcomip
push
jb
jg
and
adc
sti
jb
add
adc
sub
aas
adc
cmp
jne
lea
adc
inc
adcl
xchg
cmpsb
add
testb
push
fiadds
mov
insl
cld
add
add
pop
sub
call
add
xchg
cmp
or
ret
xchg
test
inc
ret
call
psubq
push
add
ror
push
pushf
sbb
sub
jo
push
push
and
clc
xor
or
ds
xchg
nop
sbb
stos
sbb
popa
xchg
adc
fistl
cwtl
mov
rorb
cmp
inc
xor
push
ds
lret
or
ja
adc
push
mov
adc
mov
je
cltd
cmp
lea
push
enter
push
data16
cld
adc
cwtl
rclb
cmp
adc
js
adc
pop
clc
and
jbe
push
pop
pop
jnp
rorb
jle
je
push
lcall
aad
add
sub
stc
xor
or
add
or
inc
movsb
pushf
loopne
and
jne
cmp
cmp
lea
call
dec
bound
jmp
jg
adcl
call
jb
or
xchg
ljmp
mov
sub
or
lcall
in
or
jbe
jge
xchg
sbb
xchg
mov
lock
mov
or
sub
mov
iret
adcb
push
xor
daa
clc
cmp
jmp
scas
call
call
test
jae
or
rorb
shrb
cmpsb
cmp
clc
sbb
mov
shl
pop
sub
mov
stos
xchg
mov
inc
inc
mov
or
dec
repnz
shll
loopne
rorb
xchg
and
push
or
outsl
mov
pop
or
test
test
add
jmp
push
or
xchg
loop
test
push
push
jmp
xorb
dec
call
push
and
xchg
mov
lock
dec
add
out
daa
mov
rcrl
pcmpeqb
jmp
push
js
pop
and
or
js
ret
mov
mov
or
add
lods
and
out
fisttpll
in
movzwl
jbe
or
cmpl
data16
shlb
sub
bnd
xchg
ss
int
mov
sbb
fadd
ja
das
aam
ds
mov
xor
testl
stos
or
mov
adc
lock
out
je
dec
bound
outsb
call
add
xor
add
push
add
or
push
loop
jo
jle
in
inc
cmovl
pop
pop
fsub
jns
es
outsb
pop
adc
jbe
sbb
push
adc
fisttpl
push
adc
add
insb
int
add
test
pop
xchg
adc
inc
ds
push
out
or
cmp
sbb
pop
inc
dec
arpl
adc
push
and
mov
ret
cmp
sbb
testl
add
pop
xor
and
sbb
call
popa
cli
es
idiv
push
and
mov
or
mov
jno
mov
movsb
cld
pop
aam
dec
push
add
jmp
cs
add
add
adc
movb
loopne
rol
cmc
push
push
mov
sub
fiadds
cmc
ret
enter
cmp
pop
xchg
push
push
add
pop
jae
ret
popa
or
pushf
aam
inc
test
jle
jle
pop
je
push
push
cmp
test
cld
add
push
mov
mov
mov
jmp
jne
mov
and
clc
fdivs
aaa
push
loopne
cwtl
cli
data16
push
xor
add
jl
shlb
adc
mov
inc
int3
scas
ss
sti
jecxz
aaa
sbb
cmp
je
cmp
outsb
inc
cmp
mov
rcl
into
test
std
mov
jb
add
sub
add
pop
jg
or
hlt
inc
jbe
fidivrs
icebp
idivb
push
inc
push
push
test
lea
loope
mov
xor
lods
pop
out
jbe
mov
inc
inc
dec
sahf
mov
jb
shlb
adc
fistps
jle
jb
mov
jbe
sbb
mov
add
mov
mov
fdivs
loopne
mov
add
cmp
std
lahf
ss
jg
hlt
inc
mov
nop
je
add
jecxz
cmp
mov
cmp
sbb
sbb
cmp
pop
hlt
in
lods
mov
call
mov
jg
dec
or
or
mov
lea
jg
sbb
ja
add
jb
mov
jg
and
fimull
or
add
insl
imul
fcoms
mov
dec
and
xor
fs
cmp
mov
inc
jecxz
je
mov
or
clc
mov
dec
jbe
and
and
pop
cmp
fildl
inc
jmp
inc
mov
pop
ss
movsb
mov
mov
pusha
scas
addl
cmp
add
xor
mov
insb
je
mov
cmp
imul
ds
je
fldl
cmp
xlat
pop
testl
das
cli
mov
push
inc
adc
mov
unpckhps
out
push
out
pop
dec
push
add
lret
clc
lock
inc
fmuls
sub
add
int3
lods
clc
mov
inc
sub
into
inc
movsb
subb
jo
jae
pop
sub
out
loope
pop
xchg
mov
jmp
cs
inc
push
lahf
sahf
out
fmull
pop
adc
push
stc
push
adc
xor
ss
jle
lock
nop
ss
cld
arpl
mov
sub
mov
jbe
or
add
push
xor
sbbl
xchg
dec
imul
subb
out
push
push
sbb
arpl
or
xor
xchg
nop
push
push
sbb
and
xchg
push
xchg
incb
push
pop
pop
lea
jp
jge
cs
push
adc
out
push
movups
mov
jmp
dec
stc
call
dec
add
aam
js
xchg
cs
add
xor
add
adc
aas
lea
inc
xor
imul
mov
sub
mov
pop
inc
adc
test
cmp
add
lcall
test
ror
dec
sbb
pop
addb
adc
stos
stos
xchg
andb
add
jle
stos
popf
pop
ja
xchg
jge
stos
xchg
xorl
push
fcoms
jne
jb
or
or
pop
jns
or
and
cmp
pushl
lock
push
les
cld
add
jg
mov
pop
mov
scas
jmp
xor
inc
in
xlat
xor
xchg
inc
les
divb
sbb
addb
or
dec
cmp
notb
fildl
ret
xor
inc
decl
and
cld
mov
adc
cmp
out
mov
loope
mov
and
cmp
sbb
sub
push
test
fistpl
shl
add
xchg
adc
or
pop
fnclex
mov
add
repz
mov
cmp
sub
jmp
xlat
push
fucomi
je
mov
push
ss
js
js
scas
push
mov
call
add
adc
or
scas
jne
lea
into
inc
pop
add
test
sbb
cli
shll
mulb
xchg
idivb
mov
push
inc
das
fimuls
cld
imull
popa
lahf
test
sub
sub
cmp
cld
subb
cmp
mov
jp
push
cltd
cmp
adc
push
test
shrb
sub
out
pop
push
cmp
and
mov
icebp
lea
add
ficoml
js
sub
mov
pop
sub
push
lea
adc
sub
insl
xor
and
scas
adc
nop
mov
aam
push
adc
mov
cmp
in
add
loopne
add
pop
iret
and
adc
add
out
orb
push
loopne
lss
sbb
and
jl
push
and
jecxz
and
add
cld
scas
sub
aaa
mov
mov
pop
or
je
cli
and
lar
test
lahf
in
xor
lea
rclb
and
pop
mov
jl
aaa
add
cli
std
push
push
out
mov
mov
dec
or
xchg
sbb
adc
decb
ljmp
test
push
in
je
gs
loopne
xor
adc
iret
sti
negb
push
sub
push
or
cli
mov
pop
in
clc
test
add
test
out
cltd
sub
cltd
push
ret
push
cmp
push
lea
nop
adc
popf
adc
jmp
pop
cmp
inc
or
sub
jns
pop
sub
mov
les
lods
or
sub
mov
xchg
sarl
aas
inc
cli
push
call
call
jo
inc
xor
rcr
add
or
xor
test
cmp
xorl
dec
and
sbb
test
scas
add
push
in
and
hlt
pop
out
or
lcall
sbb
push
pop
and
pusha
mulb
fisubl
push
orb
pop
xchg
push
push
add
push
mov
rcr
pop
sbb
pop
daa
mov
or
mov
ljmp
test
js
mov
addr16
jmp
mov
xchg
pop
adc
je
nop
push
clc
push
inc
pop
jge
sbb
in
push
dec
add
jmp
pop
mov
ret
push
out
cmp
arpl
dec
cwtl
pop
add
or
add
lea
ret
mov
mov
mov
popf
or
ds
push
jle
push
sbb
out
mov
jg
jbe
mov
cltd
cmpl
pop
push
mov
sbb
push
jae
hlt
sub
test
sub
sbb
fdivp
sbb
pushf
and
sahf
mov
call
pop
sbb
add
cld
push
or
sahf
sahf
pop
ret
jl
roll
sbb
fistps
lret
pop
cmp
popa
es
sahf
insl
and
pop
sbb
inc
fwait
push
mov
lea
call
loopne
pop
mul
ret
sti
rcr
jo
call
call
in
outsl
hlt
push
mov
pop
pop
lods
jecxz
pop
ret
test
je
call
test
inc
xchg
xor
rorl
in
push
xchg
bound
push
cltd
shr
sbbl
push
xchg
scas
out
shll
mov
jnp
je
or
add
pop
jmp
cmp
clc
lea
mov
ja
jae
push
mov
mov
sub
scas
add
inc
lods
shlb
sub
add
decb
mov
sahf
jne
mov
es
jl
clc
or
mov
cmp
lea
lock
adc
sti
pop
dec
fwait
inc
push
cmpsl
mov
mov
out
jo
cmpsb
push
pop
jge
lock
push
mov
or
xchg
stc
sub
add
adc
mov
or
adc
push
dec
std
mov
mov
mov
pop
inc
cld
inc
push
or
outsl
popl
or
xor
mov
mov
shl
adc
push
cmp
inc
inc
idiv
dec
in
call
push
imul
and
pop
push
adc
dec
push
mov
jne
xorb
popa
pop
or
cmp
xor
push
mov
and
sahf
or
inc
sub
test
hlt
dec
pop
decb
sub
push
out
and
jl
cmp
xchg
lock
inc
das
push
test
push
lret
cld
add
cmp
jp
cmp
daa
adc
jl
into
push
pop
xor
jp
push
push
aad
mov
pop
xor
lods
add
jae
add
repnz
cli
push
mov
add
add
adc
pop
or
test
shlb
jbe
jo
ds
cmp
mov
or
jle
sub
int
fmulp
jbe
jge
jae
out
sub
add
push
pop
cltd
idiv
mov
pop
dec
mov
and
jp
pop
sub
jne
jle
dec
inc
addl
add
cmp
jb
and
loope
rclb
pop
pop
fsubl
ret
cmc
xchg
outsl
sar
fsubrs
inc
mov
adc
add
aam
cmp
inc
mov
lret
xor
lods
dec
ret
les
loop
lods
push
push
fnsave
cmc
adc
movsb
std
decb
incl
xchg
orb
or
iret
xor
andb
or
inc
cli
and
push
icebp
insb
ret
add
pop
rolb
movsl
mov
pop
push
inc
jp
out
out
shlb
jp
add
dec
addr16
mov
sub
pop
pop
jbe
negb
enter
rorb
dec
xchg
cli
pusha
jbe
inc
xor
hlt
add
test
ret
pop
push
add
add
or
mov
lea
jp
cld
subb
mov
mov
js
rorl
fstpt
inc
or
and
sub
shrb
rorb
test
add
loopne
jecxz
int3
push
cmpsl
push
dec
sub
loopne
clc
outsb
andl
cmp
fiaddl
int
xor
xor
test
cld
cltd
ljmp
sub
add
cmp
or
adc
mov
iret
cmp
aad
push
aad
cs
push
mov
jo
adc
add
xchg
and
sbb
sub
hlt
dec
lock
xorl
push
mov
les
or
add
dec
jl
ret
lea
icebp
jg
clc
clc
aam
cld
shrl
lea
lret
fcompl
stos
or
or
imul
decl
mov
add
push
cmp
call
mov
lock
orl
jg
add
dec
hlt
mov
mov
or
mov
mov
add
test
movb
cmp
insb
rol
aam
xchg
sbb
rclb
js
jp
mov
or
cmp
mov
cli
and
cmp
add
pop
sahf
cmp
adc
cmpsl
pushf
mov
xchg
cmp
fwait
jne
insb
xorb
add
mov
mov
je
push
lea
in
repnz
bound
adcl
rolb
popa
sti
cmp
mov
xchg
std
les
lock
add
mov
mov
or
jae
mov
mov
push
jb
js
mov
loop
sub
jmp
std
cmp
push
fbld
rclb
shrb
and
xchg
hlt
mov
adcl
add
inc
mov
adc
sbb
data16
lock
inc
and
js
mov
add
leave
movsb
push
sub
hlt
testb
cmp
loope
jge
push
icebp
test
xchg
or
flds
jnp
jl
call
cltd
push
jb
push
cltd
mov
repnz
loopne
pop
decl
inc
fistpl
aam
inc
jmp
and
jnp
or
clc
call
add
sbb
jnp
outsl
jo
push
and
add
orb
out
add
push
mov
pop
jge
mov
sbb
fcmove
push
or
call
push
and
and
sub
mov
adc
jb
call
ljmp
inc
loop
push
xor
lea
pop
push
mov
ss
cmp
loopne
add
sub
jb
and
pusha
jb
add
test
add
sub
add
push
or
fs
adc
xchg
jbe
mov
add
stos
lods
lret
add
add
sbb
sbb
scas
hlt
mov
mov
mov
fwait
sbb
cmp
push
mov
add
xor
fcoml
out
mov
pop
pop
data16
add
mov
jecxz
xor
insl
rcl
repnz
adc
push
xchg
jmp
cmpsb
and
call
ja
clc
xlat
scas
mov
push
loopne
or
jle
and
loopne
popl
adcb
adc
pop
mov
pop
or
cltd
adc
xchg
dec
push
adc
pop
lcall
jmp
cmp
push
in
call
loop
or
inc
mov
add
or
mov
loopne
outsl
xchg
lock
jne
sbbb
dec
add
mov
les
sbb
fistpl
pop
bound
loopne
adc
adc
sbb
add
push
push
pop
dec
loopne
movsb
lea
or
in
pusha
xor
in
loopne
pushf
loopne
jle
outsl
into
test
push
jmp
incl
lcall
insl
cmpb
loop
cmpsb
xchg
loope
dec
add
push
mov
adc
xchg
lcall
lods
pop
mov
sbb
arpl
jne
pushl
cld
call
pop
popf
es
mov
subb
test
jo
cmc
popa
cmp
mov
or
scas
sub
fcomip
pop
nop
dec
pusha
or
pop
or
inc
in
pop
mov
and
jb
es
add
clc
pop
mov
pusha
mov
or
adc
nop
add
cmp
adc
loopne
lock
dec
fildll
ss
and
sub
add
or
jno
fisubrl
push
dec
scas
in
pop
jb
jbe
jmp
xor
mov
loopne
lea
sti
loope
sahf
jb
stc
push
mov
leave
xor
inc
je
sbb
and
push
clc
xor
jg
out
pusha
mov
and
pop
repz
in
mov
or
add
dec
and
and
test
push
movsl
sahf
loop
loopne
sub
pusha
in
loop
gs
pop
hlt
inc
mov
xchg
in
sldt
stos
fsubs
out
adc
xchg
xlat
ja
xchg
xor
addr16
inc
outsb
pop
xchg
add
std
cmp
je
mov
inc
push
inc
lret
and
push
jo
lock
shll
mov
ja
clc
decl
mov
cmp
test
dec
test
aaa
lock
mov
frstor
scas
dec
stos
jo
sub
sbb
push
fidivl
call
dec
jne
out
push
inc
shll
xchg
lcall
push
shll
in
push
push
cli
pushl
jb
adc
inc
jmp
push
push
rorl
push
pop
pop
in
jo
cmpsb
inc
jp
xor
adcb
mov
pop
lock
adc
add
or
hlt
aaa
inc
pop
faddl
add
movsb
adc
pop
adc
dec
or
pop
push
lcall
or
and
lock
pop
pop
lods
lods
mov
push
or
das
sar
clc
lock
mov
ljmp
pop
inc
pop
sbb
imulb
inc
das
ds
mov
pop
dec
add
pop
les
mov
mov
outsb
push
xor
mov
in
mov
push
mov
add
jnp
adc
xor
testb
mov
jge
fiadds
cmp
pop
movsb
loopne
adc
les
test
pop
push
dec
fiaddl
jno
aas
push
nop
hlt
cmpsl
call
push
fstps
add
inc
xlat
pop
orb
ret
jbe
pushf
ret
dec
pushf
push
test
rclb
jmp
insb
lods
xchg
orb
jo
sub
or
scas
mov
je
xchg
mov
js
and
push
xor
mov
push
negl
mov
adc
out
mov
xchg
add
ja
push
xchg
push
add
scas
mov
pop
xor
add
fdivl
dec
pop
hlt
aaa
into
cmp
jo
in
push
and
jo
inc
push
test
les
ds
movsb
loopne
sbb
shrb
mov
adc
adcb
pop
xchg
ret
inc
jbe
sti
insl
pop
add
add
adc
jl
pop
lock
or
lods
loopne
add
jg
push
mov
das
adc
adc
dec
dec
add
or
push
clc
mov
push
or
pop
addb
repnz
cmp
add
icebp
cmp
mov
inc
dec
sub
mov
dec
pop
adc
in
and
push
clc
cmp
call
lock
jne
ror
and
mov
add
loopne
adc
incl
mov
or
shlb
inc
clc
cmp
imul
push
cmc
push
add
pusha
push
jle
sub
add
pop
or
push
xorl
xchg
pop
push
stos
repnz
push
data16
sti
add
test
push
jl
or
lods
call
jmp
rol
enter
mov
add
sub
addb
jno
es
stos
or
in
int
xchg
mov
call
ljmp
mov
and
pushl
shlb
mov
mov
daa
andb
call
call
add
and
push
pop
and
and
xchg
shlb
sbb
mov
div
or
mov
lea
enter
cmp
jl
out
daa
pusha
shll
call
mov
sbb
add
mov
mov
and
sbb
push
push
adc
push
mov
bound
xchg
adc
jo
pop
mov
mov
sbb
je
lock
cmc
adc
mov
dec
inc
test
jg
jmp
sbb
inc
fdivs
decb
xor
scas
andb
mov
push
loopne
jbe
mov
mov
or
push
xor
testl
mov
daa
imul
push
jmp
adc
sarb
inc
xchg
sbb
jae
xchg
sar
jl
test
inc
push
xor
lea
clc
pop
hlt
icebp
popa
add
les
mov
cmp
daa
lock
or
pop
cmp
or
and
xor
push
lock
lcall
icebp
or
repnz
add
rcrb
and
jno
xchg
add
or
dec
dec
add
push
imul
add
jecxz
adc
in
adc
shl
or
push
sbb
or
loope
in
inc
xor
add
lea
stos
mov
add
jo
push
push
add
sbb
popa
inc
and
pushf
adc
pop
cwtl
push
xor
dec
mov
jo
fistl
lret
push
mov
add
dec
test
xchg
jnp
call
add
xlat
jbe
mov
mov
es
jg
pop
xchg
add
xor
je
in
or
je
movsb
or
call
add
aaa
add
loope
shr
cmpb
mov
mov
sbb
call
pop
aad
daa
push
mov
popf
sub
rolb
or
add
sub
jg
push
sar
scas
sub
xchg
jnp
push
call
dec
xor
std
add
push
stos
sbb
shl
dec
and
mov
push
jae
push
ret
pop
jp
rclb
into
mov
inc
xorb
jne
test
push
mov
dec
cmp
jno
push
shlb
jle
adc
movsb
icebp
sbb
jb
xchg
jo
orl
flds
add
aas
mov
push
adc
mov
out
mov
jbe
sbb
or
aad
xchg
mov
mov
leave
inc
or
push
and
xor
xor
add
xchg
mov
mov
push
dec
add
cs
call
ss
mov
add
out
add
hlt
mov
jnp
fsts
shr
mov
mov
push
mov
add
adc
adc
mov
fmuls
insl
mov
xchg
add
lods
push
jmp
filds
or
mov
rorb
mov
mov
call
rolb
movsb
pop
stos
adc
jbe
stos
in
ja
cmc
push
sub
or
cs
fisttpl
adc
or
call
cmpb
adcb
call
pushl
loop
addr16
in
cmc
mov
test
mov
add
dec
sbb
movsl
add
nop
jle
aam
adc
test
mov
cmpb
add
dec
cs
shll
sbb
adc
and
rcrb
hlt
add
xchg
mov
xchg
jmp
fisubrl
xor
dec
lcall
aas
mov
mov
xlat
sbb
shll
test
js
inc
pushl
mov
or
stos
daa
test
dec
inc
add
pop
sar
rclb
ret
movzbl
shlb
sar
pop
dec
adc
jg
or
and
xchg
mov
out
or
pop
jmp
xor
jmp
add
imul
xchg
cld
sahf
imul
jle
or
fucomi
mov
pop
repz
mov
pop
data16
or
mov
lret
push
test
jne
push
xchg
sub
dec
sub
aad
jmp
das
and
fcoml
hlt
pop
add
sbb
dec
cwtl
lea
test
fwait
cwtl
adcb
lret
mov
lods
mov
xchg
pop
lcall
and
dec
pop
inc
push
aaa
in
mov
cmpsb
push
mov
and
push
daa
push
stos
mov
sbb
orl
add
hlt
or
adc
adcb
adc
jp
xorb
inc
call
pop
sbb
addb
push
jb
orl
cwtl
push
std
add
mov
cmc
cmp
scas
insb
adc
sar
scas
add
jbe
mov
pop
inc
adc
jno
pop
cs
adcb
jb
adc
add
shl
ret
ficomps
fldenv
cmpsb
fisubs
mov
mov
clc
or
jb
jl
inc
rclb
adc
mov
sbbb
fstpl
std
ret
jmp
lock
sbb
add
xor
dec
cld
ret
add
mov
rolb
adc
aaa
add
shlb
cmp
gs
mov
insb
inc
add
push
xchg
or
out
inc
daa
sbbl
pop
orb
cmp
jmp
ja
insb
xor
je
aam
stos
dec
cwtl
enter
jo
cmc
pop
stos
mov
push
add
mov
call
push
xchg
and
daa
mov
fisttps
das
cmp
mov
mov
int3
shrb
mov
push
movsl
mov
inc
sbbl
sub
fisttpl
dec
leave
mov
push
jmp
xor
dec
sbb
or
test
mov
test
mov
or
inc
hlt
std
inc
shlb
or
mov
push
inc
or
loop
sbb
xchg
subb
add
inc
jnp
add
mov
pop
pop
bound
loope
sbb
add
dec
scas
clc
push
not
jnp
cld
test
sub
das
xor
add
movsb
rorb
loop
mov
fs
pop
mov
inc
ret
test
sub
inc
in
push
or
enter
mov
stos
dec
decb
testb
mov
push
sbb
inc
loope
adcl
rorb
cmc
add
sbb
mov
stos
test
xchg
fadds
or
mov
hlt
inc
popf
xchg
sub
fiadds
testl
and
jne
fs
psrld
xor
inc
jecxz
adc
mov
jo
out
adc
lock
adcb
pop
jbe
out
das
push
adc
inc
les
test
cld
adc
sub
jmp
push
pusha
jo
ss
add
push
or
mov
clc
incl
pop
lock
add
outsb
daa
xchg
sbb
addb
adc
bnd
add
push
inc
adc
inc
hlt
pusha
nop
or
push
imul
adc
or
outsl
pop
inc
jo
call
add
cmp
dec
add
loopne
push
add
pusha
add
test
xor
mov
loope
fadds
or
mov
orb
dec
mov
xor
adc
orb
adc
mov
sub
xchg
rcl
or
push
push
and
enter
or
mov
notl
test
push
mov
or
dec
xor
call
aaa
insl
and
orb
jge
loop
rorl
adc
test
push
fcoml
mov
pusha
jbe
or
jle
pushf
clc
pop
out
adc
dec
andb
pop
push
lcall
jns
adc
inc
add
adc
pusha
or
push
arpl
loopne
andl
fs
jo
pop
rorb
outsb
scas
loopne
stc
andb
push
mov
push
pop
inc
adc
push
call
shlb
insl
in
in
push
push
rorb
mov
jle
sbb
or
shl
mov
mov
lea
call
stos
mov
mov
push
test
mov
popa
js
in
loopne
push
rol
adc
ret
sti
push
ss
ret
adc
xor
pop
mov
and
xchg
or
cmp
bound
cs
add
cmp
aaa
cltd
push
adc
pusha
sub
or
decb
mov
add
lret
loop
adc
cmp
sbb
jo
mov
fmuls
inc
push
sarb
ljmp
insb
push
loope
push
jae
push
mov
lea
and
lods
loopne
andb
push
add
mov
scas
mov
enter
or
cld
adc
fistpll
vmovsd
and
clc
add
pop
or
adc
filds
or
sub
sti
lea
fdivl
push
lret
cmp
add
jge
push
jl
push
push
cmp
mov
lods
push
mov
fcomps
add
ret
jae
jnp
sub
sarb
insl
adc
jge
je
sti
mov
je
addb
push
push
pusha
data16
popa
xor
adc
mov
add
pop
add
sbb
mov
jo
and
pop
jne
and
cwtl
push
pop
push
sub
out
movsl
push
adc
sbb
adc
call
adc
xorb
jg
fisubs
aad
add
pusha
orl
pusha
adcb
add
in
orl
or
arpl
mov
outsb
mov
int
dec
ret
mov
les
xchg
inc
dec
test
sti
add
push
inc
push
sbb
cmp
mov
adc
daa
pusha
rclb
mov
test
jg
inc
jo
and
xor
and
or
xchg
dec
lcall
mov
and
std
adcb
mov
adc
xor
call
add
mov
xor
add
cltd
mov
jne
dec
movsl
and
adc
dec
decb
adc
ds
push
sub
dec
and
xor
sub
sbb
adc
adc
pop
loope
test
inc
or
adc
inc
push
xchg
cmp
dec
adc
cmp
or
stos
and
loopne
shrb
or
mov
test
jp
fstp
sub
add
mov
pop
testb
fwait
or
int3
call
xchg
fs
xor
inc
lock
test
xor
test
adc
out
xor
decb
push
jne
mov
jge
adc
sbb
jbe
mov
add
mov
out
xor
pop
mov
push
lea
add
cmpsb
repz
push
lcall
cwtl
xor
adc
ss
mov
mov
enter
jg
divb
mov
add
xor
jno
aas
sar
push
nop
gs
ret
jge
xchg
xor
mov
or
es
push
int3
adc
adc
in
push
jl
shlb
xchg
xor
es
call
xor
lods
push
push
lock
push
scas
push
adc
addb
jne
sub
jo
pusha
into
mov
or
mov
jg
cld
mov
cld
push
push
jno
xlat
xor
push
sarb
and
add
cmp
cli
sub
mov
sub
xor
gs
add
xchg
push
cmp
or
mov
or
push
imul
push
sbb
add
jae
mov
pop
jbe
mov
sub
push
add
adc
adc
xor
je
push
test
sub
xchg
repnz
je
xchg
add
mov
xor
sti
orb
test
xchg
shl
push
pop
scas
nop
mov
outsb
dec
add
rorl
in
mov
in
les
push
mov
push
aaa
adc
aaa
push
adc
das
adc
push
adc
or
mov
xchg
call
cwtl
jge
add
cmp
mov
out
xor
push
int3
ficoml
adc
stos
jne
js
lret
fidivs
cmp
add
clc
mov
add
jne
inc
mov
or
decb
mov
scas
add
xchg
icebp
or
into
fcomps
cltd
jo
ja
ljmp
lock
lock
fadds
addr16
out
cmp
fstpt
cmp
popa
lock
call
push
daa
movsl
mov
je
orl
mov
mov
shl
aaa
test
outsb
mov
jle
cmp
loopne
mov
sub
sbb
gs
mov
push
mov
push
mov
and
fidivrl
rol
push
test
and
inc
jge
mov
es
xor
push
add
push
incl
stos
addr16
inc
jo
or
mov
mov
cwtl
aam
cmp
or
add
cwtl
push
test
push
scas
pop
and
scas
add
add
push
sahf
add
ljmp
mov
jb
lcall
add
stc
icebp
and
in
test
add
sub
rcr
popa
xor
pop
xor
js
sub
push
mov
rolb
mov
add
mov
mov
push
xchg
jo
jg
addl
mov
pop
ret
jno
and
add
scas
push
mov
sbb
inc
ja
mov
scas
push
jo
push
enter
dec
nop
and
xor
push
leave
js
sbb
and
jle
xor
shrb
rclb
mov
imul
loope
adc
jle
insb
xor
push
cmp
adc
push
push
push
dec
push
mov
push
or
loop
scas
sbb
shlb
cmp
hlt
add
xor
adc
bound
xchg
dec
scas
jle
xor
stos
xchg
sbb
enter
test
mov
testb
or
and
mov
lock
jge
lock
mov
xor
jg
icebp
pop
cmpsb
cmp
pop
pushw
inc
jne
dec
jo
jmp
stos
int
lock
ss
cmp
push
xor
mov
lds
lock
mov
and
inc
push
or
popa
faddl
mov
mov
jno
cmp
test
sbb
add
fadds
cs
or
lds
fs
cmpsb
add
repz
adc
movsb
fisubrs
jp
sbb
cmp
test
lock
fldt
clc
add
movb
add
lock
mov
sub
mov
add
mov
in
adc
push
clc
xor
and
ror
mov
push
cmpl
mov
jne
jg
mov
add
add
in
cwtl
lock
shlb
mov
add
add
mov
in
push
pop
fwait
loope
pop
test
scas
nop
mov
lea
or
insb
inc
fwait
mov
je
push
lods
mov
xchg
adc
pop
push
dec
jl
and
add
js
sbb
add
jg
xor
mov
sub
js
xor
mov
enter
inc
mov
dec
test
xorl
je
bound
inc
mov
pop
dec
mov
jb
mov
lods
call
mov
ja
cld
pop
jo
andb
lock
xlat
lcall
clc
je
inc
push
mov
rcr
mov
xchg
jb
xor
mov
xchg
add
ja
cmp
sti
jne
mov
add
cmp
push
ja
movzwl
in
or
jbe
adc
mov
ret
xchg
xor
je
add
in
ret
cwtl
xorb
lock
data16
or
cmp
mov
cli
aaa
mov
jle
lea
add
or
lock
add
sarl
adc
jg
or
pop
cmp
ljmp
add
add
inc
call
inc
add
cmp
mov
xor
mov
sbbb
push
cwtl
push
or
push
aam
sbb
jg
xchg
lahf
jle
cmp
jb
jb
or
in
adc
pusha
ja
inc
insb
cmp
shlb
inc
jmp
push
je
rorb
mov
xchg
lock
add
jb
loope
jle
rolb
xor
xor
jle
inc
rcrb
jb
subl
jo
loopne
add
mov
ds
js
enter
add
insl
sub
les
mov
sahf
jb
dec
mov
push
mov
lret
mov
das
push
sub
subb
sbbb
int3
xchg
xchg
xchg
les
leave
xchg
cmp
loopne
push
push
inc
or
push
fwait
ljmp
xchg
loope
outsb
add
or
and
test
aaa
call
lret
push
orl
xor
adc
shl
cs
pop
gs
push
sub
gs
push
push
push
pusha
mov
negl
sarl
fimull
jle
adc
inc
lahf
scas
adcb
rolb
ret
add
and
cwtl
mov
or
insb
fcomps
mov
ret
pop
mov
xchg
fs
ljmp
mov
add
jl
inc
mov
jbe
jg
cmp
repnz
imull
add
dec
pop
push
les
mov
loopne
push
xchg
cmp
mov
pop
loopne
adc
mov
les
jbe
jmp
xchg
add
pop
cmp
iret
test
dec
add
push
mov
cmp
pop
mov
sarb
mov
shlb
inc
sti
jo
idivb
xchg
repz
jl
cli
loop,pn
rcrl
idiv
out
and
adc
or
rclb
mov
adc
sbb
dec
scas
pushf
jmp
mov
xchg
mov
mov
testl
or
call
or
mov
ret
sbbl
or
scas
and
dec
mov
je
cmp
aaa
and
jg
stos
jmp
or
push
ret
or
push
push
lea
mov
mov
shl
adc
add
pop
push
incb
cmpsl
sarl
push
sbb
push
and
test
add
comiss
rcrb
sarb
push
sub
cmc
rolb
push
and
mov
or
jno
or
push
cwtl
or
mov
jbe
xor
iret
pop
mov
xor
jg
nop
lea
popf
popa
or
mov
mov
jecxz
add
push
inc
clc
inc
jle
or
movsl
xchg
pusha
or
push
jne
adc
aaa
pusha
cmp
int
decl
pop
loope
loopne
popa
xor
pusha
sbb
repnz
hlt
pop
nop
add
push
jg
out
out
mov
js
les
fwait
or
lock
bound
xor
sbb
call
pusha
xor
test
adc
dec
jne
inc
xor
lock
mov
clc
sbb
popa
xchg
cmc
loopne
push
cltd
outsb
mov
inc
inc
adc
mov
data16
or
addl
and
nop
mov
push
lcall
fdivrl
push
pop
notl
adc
les
loopne
add
cld
adc
or
mov
pushf
test
shl
into
imul
jbe
lds
inc
bound
and
adc
sbb
xchg
js
add
inc
sub
andl
inc
test
hlt
jg
add
jns
loopne
cmp
mov
pop
in
out
adc
cmp
cmp
and
adc
xor
cmp
xor
lea
mov
and
push
scas
add
roll
jp
ret
add
xchg
int3
and
add
dec
in
loopne
mov
inc
add
mov
rorb
insb
add
dec
pushf
in
rclb
or
sbb
inc
es
std
inc
cmp
js
lock
loopne
adc
inc
scas
ljmp
and
jmp
data16
lods
add
and
ss
lods
push
push
push
add
test
push
push
clc
sbb
xchg
nop
or
xchg
ret
arpl
cltd
mov
push
adc
test
int3
fs
lock
pop
mov
je
sbb
mov
mov
push
pop
test
rolb
mov
mov
pop
or
lahf
incb
call
push
pusha
dec
ds
add
adc
mov
jl
add
inc
inc
lcall
sub
bound
in
out
mov
bound
xor
dec
call
aaa
add
adc
ret
pop
hlt
mov
sar
push
push
or
push
sbb
jo
and
pop
sar
mov
pusha
mov
jne
inc
testl
incl
aaa
call
dec
and
negb
jo
cli
orb
ss
js
jbe
mov
ds
or
test
out
push
cld
push
loopne
test
pusha
or
add
imul
push
mov
lods
jo
pusha
add
mov
loop
mov
add
pop
adc
loopne
pusha
fdivs
push
mov
or
std
pusha
lahf
je
push
xchg
push
ss
inc
call
adc
loop
inc
loopne
movsl
push
xor
mov
xchg
popa
and
dec
adc
push
mov
jo
rorb
push
jg
push
mov
jle
sbb
pop
xorl
stos
in
movsl
cmp
dec
lock
adc
jmp
xchg
ljmp
sbb
add
ds
or
repz
mov
jbe
mov
jmp
decl
lcall
pop
jae
or
pusha
jb
add
mov
adc
inc
sbb
lret
sbb
push
je
and
test
aam
cli
dec
or
negb
sub
mov
cmpsb
inc
inc
mov
push
mov
ds
sub
xor
mov
mov
mov
and
sbb
mov
adc
jbe
xor
pop
lock
sub
jnp
cmpxchg
jmp
mov
lock
adc
daa
cmp
lahf
xorb
cmp
aas
mov
or
mov
xor
jmp
add
loopne
adc
nop
dec
xchg
std
fbld
and
cwtl
adc
adc
sub
je
lock
adc
xlat
loop
hlt
test
cmpsb
decl
jno
icebp
inc
les
push
cmp
push
add
xor
push
pop
dec
jl
add
pop
fimuls
shrl
sub
test
add
ss
mov
js
add
add
cmp
jge
loop
xchg
jbe
int3
or
ljmp
adc
repnz
jge
or
jbe
add
lock
adc
dec
pop
test
cmpsl
xor
dec
js
mov
or
or
call
add
mov
dec
jne
push
ret
sub
lea
inc
xor
dec
mov
call
sbb
int3
mov
mov
lock
adc
mov
mov
cmc
dec
add
add
jo
movsb
pop
rolb
push
xchg
mov
cmpb
mov
jbe
lock
les
jp
inc
and
and
push
or
pop
lcall
cltd
clc
aaa
mov
ret
push
jo
push
mov
in
clc
mov
sub
adc
sbb
or
mov
push
push
ss
push
clc
mov
push
push
push
mov
dec
aam
dec
shlb
xchg
push
hlt
test
cmp
movb
mov
iret
mov
mov
fdivrp
lds
movsb
dec
inc
jmp
mov
add
push
rcrb
mov
aam
aaa
inc
sti
mov
lods
cmp
add
jno
fiaddl
adc
pop
pop
js,pn
loope
mov
leave
xor
inc
xor
and
sarb
ss
dec
inc
cs
divl
add
mov
loope
sbb
dec
mov
scas
sarb
dec
decl
je
inc
andl
pop
and
mov
or
or
add
xor
mov
push
ljmp
pop
jo
dec
xor
inc
xchg
push
enter
adc
or
push
mov
lahf
inc
xlat
mov
push
add
mov
or
je
pop
adc
loopne
mov
push
jg
and
dec
pushf
mov
cmp
mov
or
xchg
fwait
add
jo
xor
es
jo
nop
mov
or
or
jle
dec
xor
movsb
adc
aas
cld
das
shrb
aas
subb
jo
adc
add
pusha
and
inc
push
decb
add
xchg
lahf
sub
or
lret
jo
mov
add
movl
icebp
cmpsb
and
cmp
mov
or
test
insb
add
cmp
sbb
inc
enter
call
lcall
lea
mov
jl
mov
sarb
or
loope
clc
negb
in
mov
xor
adc
cmp
sub
ret
lcall
adc
cmpb
xor
xor
push
and
insb
dec
inc
add
shll
sbb
dec
dec
push
cmp
sbb
je
mov
ss
imul
pop
mov
mov
movl
pop
jp
or
jge
push
xchg
mov
outsl
das
orb
push
iret
lock
out
ss
dec
push
and
xor
mov
pop
xor
pop
add
mov
inc
mov
clc
pop
add
mov
inc
adc
data16
add
cmp
lea
xor
ljmp
gs
icebp
mov
or
or
outsl
add
adc
pmulhuw
sarb
or
jo
dec
mov
mov
lea
stos
or
xchg
mov
rolb
stos
mov
nop
faddl
jmp
pop
mov
inc
jbe
into
push
add
jmp
fstpt
mov
loopne
xor
add
pop
cld
test
mov
mov
push
jb
dec
fcoms
adc
jno
cmp
sub
xchg
and
in
push
xor
add
sub
push
push
icebp
push
jne
xchg
push
xchg
incl
push
lock
add
test
testb
xchg
addb
mov
nop
and
andb
jmp
jae
mov
add
or
rcl
enter
inc
aam
mov
cmp
sub
ds
add
or
adc
push
adc
cmp
cmpl
or
push
add
adc
stos
or
inc
xor
or
js
decl
inc
xor
pop
push
cmp
xor
dec
filds
incb
pop
jbe
sbbl
dec
enter
mov
add
mov
mov
adc
aad
dec
push
add
jne
addb
jne
mov
push
pop
pushf
mov
fs
outsb
xor
mov
call
jne
push
add
inc
mov
mov
pop
cmpsl
xor
movsl
and
shrb
xchg
add
test
push
sar
mov
push
int3
notb
mov
mov
inc
xor
shr
cli
stos
add
or
cmp
lock
push
jae
push
pop
dec
add
push
dec
add
sbb
lods
sub
jb
lock
mov
add
push
jbe
xor
test
add
jb
or
rcll
cli
loopne
nop
sub
mov
lds
cmp
pop
loopne
test
mov
lea
dec
dec
loope
jmp
add
push
mov
int3
and
test
push
mov
mov
scas
lock
dec
jno
xchg
pop
push
push
adc
add
jmp
add
daa
sbb
mov
mov
mov
pop
lock
je
enter
sbb
adcl
inc
mov
xchg
jmp
or
xor
push
or
or
mov
idivl
aam
fsubp
jo
pushl
test
jo
add
popa
mov
jl
cmp
fbstp
orl
je
cmp
lcall
xchg
sbb
mov
cli
std
sbb
sbb
out
xor
add
add
push
adc
inc
or
jbe
aad
mov
sub
nop
sahf
push
mov
inc
mov
push
lods
lahf
enter
repnz
jbe
sbb
sub
adc
aam
clc
les
movsl
adc
lock
int3
fs
dec
pop
add
and
jne
adc
push
push
insb
bound
adcb
dec
xor
mov
mov
inc
sbb
enter
mov
cmp
push
jl
mov
aas
cmp
push
les
xchg
mov
pusha
xor
loope
xor
inc
mov
into
in
jne
sub
decl
jle
xorb
rcrl
jae
or
sbb
jb
inc
push
and
push
lea
out
jl
in
cmpsl
and
iret
add
or
pop
or
mov
add
cld
je
or
jg
fimuls
inc
adc
jo
xor
clc
call
mov
cmp
data16
xor
xorb
and
pop
pop
sbb
popl
movsl
lock
jbe
cmp
ljmp
add
xor
test
lret
clc
jl
mov
cmp
push
andb
in
jle
add
int3
jbe
dec
or
push
jbe
lret
push
add
dec
fmull
sbb
ljmp
or
stos
add
pop
shll
xchg
sbb
push
imul
call
cmp
js
adc
mov
out
lds
push
jns
and
pop
popf
dec
dec
fadd
pusha
call
out
es
push
cmp
adc
ljmp
pop
cmp
cmp
pop
mov
adc
rclb
push
mov
incl
sub
aaa
push
mov
xor
pop
lea
jmp
sub
decl
lcall
stc
call
fcoms
xchg
xchg
adcb
leave
sub
pop
mov
stos
pop
mov
cmp
rcrl
xchg
sbb
jp
adc
inc
test
pop
pop
push
shrb
cmp
dec
lock
add
sbb
cmp
and
adc
call
push
cmpsb
loop
xor
call
fwait
sub
dec
lea
xchg
and
cmpsb
ja
ret
scas
inc
pop
push
ds
rclb
pop
roll
jle
sub
mov
lock
sbb
and
sbb
dec
pop
pop
sub
sub
or
addb
mov
inc
sbb
add
xor
dec
stos
mov
or
imul
lret
add
or
adc
je
lea
rclb
push
out
push
cwtl
or
jbe
cmp
inc
stos
push
sarl
test
jne
adc
mov
push
dec
std
mov
inc
mov
hlt
dec
ljmp
js
jl
push
mull
add
jmp
pop
xchg
outsb
dec
sub
ret
rorb
xchg
adc
mov
bound
repnz
or
push
sbb
mov
and
adc
imul
mulb
sub
jne
inc
loope
jge
sbb
add
mov
pop
jb
test
adc
test
lcall
out
mov
inc
cmp
je
dec
push
bts
andb
push
add
add
arpl
mov
leave
loopne
and
pop
inc
add
jmp
orb
mov
arpl
sbb
or
shr
cmp
test
ret
mov
and
or
movsb
xor
test
ss
imul
dec
inc
push
rorl
inc
mov
add
push
adc
sbb
fiaddl
push
adc
and
sarl
cmpsb
popa
mov
loopne
nop
push
dec
ljmp
test
popf
adc
sbb
and
hlt
add
xchg
clc
ljmp
and
loopne
clc
xor
shr
pusha
test
dec
les
nop
xchg
push
lret
jp
push
add
out
pusha
imul
nop
es
daa
cmp
ja
rol
add
cwtl
cmp
inc
sbb
sahf
gs
cmp
in
sub
pop
inc
add
add
pop
test
xchg
push
cli
pop
out
inc
jne
sbbl
pop
xchg
pop
fmulp
fmull
je
fdivrs
cmp
js
fsubrs
movl
addb
xchg
adcb
xchg
jb
pop
or
cmp
push
push
aad
daa
or
js
sbb
or
inc
test
sbb
push
stc
negb
pop
andl
jp
add
jge
and
mov
push
adc
je
add
or
add
adc
aam
xchg
inc
inc
outsb
push
punpckldq
mov
or
inc
cmpl
test
rol
call
add
bound
mov
jmp
sub
adcb
push
pusha
sub
loopne
loopne
sbbl
push
pop
mov
ret
insb
sbb
js
mov
imul
add
inc
cmp
xchg
outsb
fdivr
or
scas
push
loopne
loopne
mov
dec
mov
ret
xor
call
loopne
shl
add
jle
pusha
hlt
inc
cli
fstpt
jl
divb
inc
xor
loop
orl
nop
loopne
loop
pop
loopne
add
aaa
dec
push
jb
movsb
fs
ret
aam
pop
cli
fwait
lock
sub
incl
ret
cmp
loopne
pusha
pop
inc
pop
add
or
or
dec
ret
and
test
mov
dec
icebp
inc
pop
pusha
dec
adc
int
lea
jecxz
cmc
lods
add
fldenv
loopne
or
mov
cmp
pusha
pop
jb
pop
call
xchg
das
insb
loopne
subl
stos
ret
loopne
jnp
ja
inc
enter
or
add
xchg
add
cmp
loope
pusha
mov
or
xchg
cmc
jg
pop
popa
arpl
scas
popa
adc
dec
xchg
push
pusha
xor
dec
rorb
sub
xor
outsl
sub
add
xor
push
outsb
cmpsb
jmp
add
jnp
or
sti
jae
mov
mov
loopne
notb
cltd
cli
cs
jmp
das
xor
pop
shll
cmp
xsha256
cmpsb
pop
sbb
mov
pusha
out
jecxz
bound
rclb
mov
add
xor
loop
jl
add
ljmp
and
inc
adc
add
pop
loopne
cmp
call
mov
push
sbb
inc
dec
int
sub
jg
sub
sbb
jecxz
cmc
push
popa
xor
stos
adc
cmpl
pop
insb
cld
cmp
repz
inc
adc
jg
aam
xor
or
push
add
add
and
daa
mov
xchg
inc
fwait
ljmp
and
mov
movsb
fwait
ret
and
adc
ljmp
sub
inc
cmp
dec
rcrb
add
je
pop
push
cmp
cmp
sbb
jmp
adc
call
adc
sbb
sbb
push
dec
jge
add
inc
xor
lahf
ljmp
push
jno
orb
sbb
mov
xchg
inc
mov
dec
lret
cmp
cmp
push
call
std
and
sbb
sbb
adc
sbb
decl
inc
mov
lock
and
jo
pop
push
push
stos
mov
arpl
enter
inc
shrl
lock
inc
ret
fdivr
out
orb
add
mov
jo
shlb
mov
lods
xchg
testb
inc
mov
test
inc
push
mov
test
xchg
jp
ss
push
adc
fwait
or
aam
div
inc
jb
lcall
jo
data16
mov
mov
pusha
jl
test
jb
fs
and
mov
je
loopne
loop
aaa
inc
lcall
lret
imul
rol
jle
inc
xor
xor
xor
push
fisttps
jle
call
sahf
mov
mov
or
adc
push
jne
mov
lds
lcall
ss
loop
and
test
cmpb
jmp
and
push
adc
pop
inc
icebp
xor
popf
fidivl
push
cld
mov
mov
adc
mov
lea
mov
jnp
push
scas
call
insb
mov
mov
or
test
pop
pusha
push
negb
dec
inc
call
inc
and
adc
test
add
and
pop
movsb
mov
jle
push
push
or
les
aaa
xor
xor
jno
and
in
sub
lods
push
and
sbb
icebp
mov
xor
cltd
add
push
xchg
add
arpl
add
adc
lret
and
mov
mov
nop
dec
xchg
testb
add
ffree
sbb
rolb
pop
add
pop
push
clc
pop
push
movsb
add
jmp
shr
lea
data16
into
jmp
mov
lods
add
xor
je
loop
mov
es
dec
adc
or
dec
xor
jo
outsl
mov
inc
sti
adc
pop
jne
inc
fcoml
fdivrl
xchg
enter
mov
lock
cld
dec
pusha
xlat
cmp
test
in
test
mov
xor
add
test
lcall
sub
cltd
aam
sbb
add
clc
add
push
add
fsub
add
shrb
addb
outsl
cmp
or
scas
lock
sub
push
mov
call
cmp
dec
jo
add
or
cmpsl
aam
mov
add
cld
lods
push
clc
xchg
add
add
mov
dec
aaa
mov
mov
je
sbb
add
xchg
xchg
lock
cmp
jge
pop
icebp
insb
adc
adc
add
pushf
add
add
loopne
popf
add
xor
mov
inc
mov
jl
push
mov
mov
in
xor
shrl
mov
push
fimull
adc
ret
hlt
mov
sub
sbb
movsl
cmpsb
and
movsb
in
sub
mov
add
mov
or
xor
mov
adc
xchg
add
test
and
je
mov
jno
ss
fdivrs
add
mov
xor
cld
dec
rolb
pop
mov
divl
pop
std
es
sub
shr
mov
pusha
mov
xchg
mov
adc
push
je
inc
sti
xchg
ds
test
dec
rcl
adcb
fbstp
inc
sahf
es
pushw
lock
test
xchg
rclb
notl
aaa
mov
add
mov
mov
test
out
xchg
push
or
add
mov
and
test
ljmp
add
repnz
push
inc
sbb
mov
cli
sub
sti
lods
add
fcomps
js
call
jo
testb
popf
jle
icebp
out
mov
mov
jo
lods
or
pop
arpl
sti
mov
push
or
add
add
adc
cmp
inc
xor
sub
or
jmp
jecxz
test
repnz
or
fdivr
lods
loopne
mov
or
xchg
flds
adc
lret
sub
push
shl
nop
pop
rclb
roll
jo
adc
dec
xor
xor
mov
mov
mov
clc
jg
mov
push
jbe
jl
pop
jb
dec
test
test
sarb
shr
push
lcall
push
push
sub
pop
and
mov
adc
jb
xor
std
adc
or
shll
xor
sub
js
nop
xor
mov
jmp
lea
xchg
test
push
call
insl
add
adc
and
loopne
mov
and
xor
aas
stos
insl
sub
sbb
add
ret
xor
call
mov
popa
dec
xor
call
fiadds
rcrl
adc
aad
jae
xor
add
and
std
mov
xchg
cmp
or
cmp
lahf
repz
lock
mov
mov
mov
ret
ds
std
test
movsb
addb
add
jne
jl
mov
rcr
movsb
movb
movsb
pop
sub
dec
adc
jl
or
cld
push
jle
mov
jg
cli
and
add
add
xchg
sbb
or
push
insb
cld
dec
push
aam
or
adc
out
jo
lods
inc
cli
sbb
push
xchg
les
jo
add
adc
movsb
mov
dec
lea
push
rolb
scas
mov
mov
jmp
and
aam
add
cli
and
add
dec
and
jo
push
cli
xor
jle
mov
pop
pop
jl
xchg
test
stos
xorb
call
mov
push
mov
faddl
adc
push
ja
xor
mov
es
test
int
cmp
jnp
or
cli
popa
or
sbb
adc
push
jb
inc
and
xchg
clc
ret
pop
lea
data16
clc
mov
das
mov
dec
lods
lea
in
movsl
call
and
nop
sub
xchg
pop
push
mov
sub
ret
adc
fmull
movsb
mov
adcl
es
push
adc
push
ljmp
xchg
incb
pop
mov
add
add
es
add
cmpsb
add
fldl
add
inc
movsl
pop
sbb
sbb
add
or
add
add
pop
clc
add
mov
jne
push
mov
lods
pushf
adcl
pop
dec
icebp
divl
cmp
cltd
leave
add
leave
je
movsl
mov
orb
jo
lret
xchg
bound
or
loop
jp
mov
mov
dec
imull
add
push
clc
xor
nop
and
pop
es
mov
inc
insb
shll
enter
sub
or
dec
addb
push
lea
les
leave
sub
mov
fwait
movsl
fisttpl
jmp
push
addb
dec
mov
add
add
mov
dec
movsb
sub
mov
inc
imul
outsb
cltd
add
or
mov
or
das
dec
sub
add
add
and
leave
add
andl
push
enter
mov
call
aaa
add
popf
xor
adc
fisubl
sbb
mov
mov
sub
lock
leave
mov
pcmpgtd
mov
nop
add
test
mov
ret
push
cmp
lds
stc
dec
in
mov
jecxz
xchg
jmp
stc
cmp
or
shrb
push
xorb
jg
jge
or
shl
dec
inc
or
dec
jp
rcrb
push
loopne
bound
shlb
out
loopne
neg
in
and
ljmp
cmp
rorb
cmp
add
mov
mov
push
scas
lea
shlb
add
mov
std
dec
je
adc
out
lret
lods
xchg
test
popa
xchg
sub
mov
pop
push
jo
out
push
insb
lock
add
pusha
mov
sbbb
add
ret
adc
test
test
push
or
push
pop
cld
ljmp
sub
cmp
sar
mov
movl
call
call
inc
aaa
mov
xchg
sub
rorb
add
or
mov
inc
jl
test
lds
xchg
mov
mov
xlat
aad
mov
call
leave
and
mov
mov
sub
rolb
cmp
test
stos
jecxz
mov
daa
repz
adc
rorb
mov
test
dec
inc
and
push
and
ret
mov
lods
cli
ja
pop
xor
ss
call
adc
shlb
adc
push
jl
stos
add
add
add
inc
insl
subl
shll
stos
add
test
clc
push
jne
arpl
sahf
orb
or
add
shll
test
pushf
out
mov
adcb
jno
mov
fadd
popa
outsb
jle
pop
lcall
adc
pop
and
pusha
and
push
pusha
add
stos
and
clc
push
clc
adc
sub
scas
inc
in
movsb
jno
rcrl
mov
jle
cmp
mov
hlt
jmp
js
dec
std
add
ds
outsl
add
sub
pusha
pop
mov
xchg
push
je
loopne
je
clc
mov
push
cmp
pusha
sbb
jp
adc
pop
in
and
cmp
pusha
xchg
loopne
jbe
push
push
pop
push
push
jmp
jle
dec
mov
fucomip
push
hlt
add
sbb
or
or
outsl
nop
or
sbb
or
sbb
das
add
hlt
add
and
lock
call
sub
loopne
push
jno
ljmp
popa
push
pop
and
pop
xor
mov
mov
dec
mov
dec
in
jne
pop
outsl
sub
das
and
inc
pusha
push
fucomi
pop
jb
cli
jno
add
and
xchg
andb
lret
push
inc
add
jo
adc
inc
dec
fsubrs
cld
lock
ret
call
ret
aam
gs
add
outsl
test
pop
xchg
mov
inc
push
inc
mov
push
cmp
push
aaa
fmul
ret
add
mov
add
push
or
sub
mov
push
fiadds
mov
push
jmp
std
push
add
push
movsl
xchg
cltd
lods
add
pop
mov
subl
ljmp
mov
fnstenv
arpl
xchg
decl
jl
stos
push
xchg
pusha
push
loop
in
aam
add
pusha
inc
repnz
add
adc
dec
test
mov
ret
or
or
sub
inc
or
stos
adc
test
test
test
test
push
idivl
loop
mov
add
es
pop
in
xchg
jp
gs
loopne
inc
mov
inc
adc
icebp
pop
shll
loopne
adc
mov
outsb
fidivrl
je
test
sbb
ret
dec
and
pusha
cltd
loopne
push
mov
aaa
inc
jnp
repnz
jo
or
and
mov
ret
add
push
in
testb
jge
inc
add
dec
mov
sar
sbb
or
or
add
jbe
cld
add
test
sti
das
sbb
inc
lds
stos
cwtl
js
insb
loopne
mov
mov
push
push
mov
add
xlat
sbb
mov
call
je
sub
call
pop
in
sbb
xor
test
imul
testl
push
sub
ljmp
add
push
sbb
mov
or
enter
sbb
pavgb
or
inc
add
sar
js
push
cmp
mov
xor
add
adc
lock
xor
mov
test
dec
jle
cmc
sub
adcl
add
call
adc
std
mov
scas
call
and
adc
inc
dec
or
jb
adcl
mov
push
cmp
mov
dec
push
pusha
scas
push
call
gs
adc
arpl
decl
pusha
mov
addb
das
or
pusha
pop
add
and
divl
push
shrl
jl
shlb
jp
nop
inc
push
sub
adc
stc
addl
jo
mov
out
dec
icebp
and
lcall
shlb
sti
xor
mov
dec
jbe
or
cmpsl
test
inc
add
imul
movb
mov
add
push
incb
je
lock
xchg
mov
or
pop
cld
push
jo
inc
movsl
je
das
xchg
and
pop
pop
hlt
add
add
mov
xor
or
adc
mov
jo
fistps
add
aam
stos
inc
xor
pop
inc
push
ja
fdiv
or
cmc
add
test
jo
add
lock
adc
adc
cmp
imul
adc
sub
loopne
das
mov
jle
jl
xchg
call
mov
push
fbstp
inc
xorb
mov
pop
mov
call
push
xor
mov
fstp
cmp
lcall
xchg
pop
jb
add
jbe
cmp
jbe
cmpb
dec
test
and
and
push
movsl
jno
xor
push
xchg
cmp
adc
test
add
xor
ja
inc
fdecstp
out
adc
out
mov
or
mov
arpl
push
ret
adc
jnp
fimull
inc
test
je
data16
add
sti
clc
mov
fildl
adc
xchg
sbb
or
mov
lock
pop
push
mov
adc
jo
cli
addl
mov
ret
xor
lods
gs
add
xchg
fs
rorb
inc
outsl
das
push
jb
dec
xor
add
fistl
mov
inc
fisubrl
inc
cld
mov
sub
std
xchg
in
xchg
dec
inc
inc
mov
push
add
add
and
and
add
mov
orl
nop
or
rcr
or
sub
jmp
jmp
repnz
test
lock
add
insb
jp
ss
aam
mov
mov
xor
testb
adc
inc
xchg
sub
mov
and
push
and
divb
xchg
dec
cli
in
scas
and
sbb
push
inc
mov
jo
std
mov
ja
jb
insb
sbb
sbb
jnp
cmp
xor
xchg
cwtl
cmp
orb
icebp
pop
cmpl
xor
dec
add
call
fs
xor
inc
cmpsb
call
mov
push
push
sub
fcoms
jb
pop
sub
xor
xor
adc
dec
inc
and
ret
add
or
mov
push
fs
dec
test
dec
and
jbe
lods
js
lock
mov
sub
mov
push
adc
xor
out
int3
nop
inc
sub
mov
out
nop
sar
and
or
dec
mov
stos
shlb
scas
lock
jno
mov
js
fsubl
stos
add
aad
decl
add
xor
add
xor
fdivrs
shrb
jo
push
push
mov
sub
icebp
add
xor
push
pop
test
pop
push
xor
push
mov
sub
cmp
push
and
ja
mov
test
rorb
in
push
mov
sbbb
sbb
test
inc
mov
mov
decb
xor
jne
lock
ss
add
pop
movsb
sahf
xor
cwtl
jmp
push
or
outsb
negl
fisubrl
add
insb
push
add
push
adcb
sar
mov
push
xchg
adc
js
add
cmp
mov
adc
cmp
pusha
aaa
sbb
jl
shr
push
lcall
mov
js
in
push
incb
cwtl
xorl
jl
inc
dec
lods
mov
xor
jb
je
cs
decl
xor
and
arpl
jne
aad
movsl
or
pushf
xor
add
mov
fdivs
movsb
adc
inc
scas
jg
pop
lock
xchg
jl
ja
push
jb
and
mov
cmp
cli
xorb
inc
and
call
mov
lret
xor
adc
std
call
inc
std
pop
lret
push
or
adc
je
pop
pop
add
rclb
sbb
shlb
lock
adc
mov
xor
rorb
and
ss
scas
add
jg
adcb
pop
mov
fnsave
sub
mov
mov
or
lods
or
jecxz
mov
add
add
adc
or
jno
popf
jo
jmp
test
mov
sbb
int
and
and
add
push
out
adc
test
repnz
les
and
inc
imul
mov
imul
push
add
dec
cmp
xor
jg
or
push
lret
or
lea
adc
add
push
push
push
adc
xor
hlt
mov
and
sahf
jo
or
outsl
lods
sub
mov
xchg
adc
mov
add
add
inc
inc
pusha
pushf
ret
mov
je
outsl
clc
inc
nop
mov
and
mov
pop
or
orb
call
sti
inc
int3
jp
pop
adc
test
jnp
and
jmp
add
inc
mov
push
inc
add
les
out
mov
jne
inc
insb
jmp
mov
add
mov
mov
in
arpl
shl
ficoml
jmp
jl
sub
xorl
call
mov
dec
sti
call
pusha
sahf
insl
push
aad
xchg
cmp
call
test
daa
and
jmp
loope
pusha
enter
pop
int
sbb
dec
push
pop
sbb
lcall
jae
or
xor
test
loopne
add
xchg
fists
fnstenv
push
add
call
mov
add
hlt
push
aam
cmp
sbb
xor
cmp
jl
xor
dec
mov
inc
push
mov
xor
fidivs
push
das
adc
mov
ljmp
subb
or
fadds
rclb
pusha
dec
jo
inc
cmp
ljmp
sti
add
or
adc
xorb
ds
inc
fs
jb
add
pop
rclb
das
cmp
pop
adcl
call
jmp
push
addl
cmp
data16
xchg
hlt
movsl
mov
mov
shlb
cli
lcall
addl
pop
sbb
les
incb
add
sub
addb
aaa
ficoml
movsb
add
addl
sahf
xchg
call
adc
pop
add
pop
pop
loope
incb
int
pushf
mov
nop
jecxz
sbb
adc
fsubr
in
jle
jne
ret
adc
or
xor
inc
push
sar
add
push
inc
int3
push
xor
jmp
or
push
adc
hlt
and
adc
bound
imul
call
jo
jecxz
inc
idivb
pop
add
and
push
mov
aaa
cs
test
xchg
mov
mov
dec
addb
xchg
loop
or
push
notb
idivl
ret
roll
test
jb
dec
incl
xchg
hlt
cmpsb
add
or
mov
mov
lea
add
mov
insb
add
pusha
jo
push
push
test
mov
adc
mov
ljmp
inc
add
addr16
mov
push
rolb
jle
xchg
ret
jo
and
jmp
das
pop
sarl
inc
jbe
push
inc
xchg
sbb
jp
mov
subb
push
loopne
into
or
bound
ficoms
mov
xchg
fldl
push
lods
test
xor
call
outsb
pop
xchg
shrb
sub
test
shrb
shrb
in
cmp
jle
or
and
or
cmp
shll
in
fdivrs
in
dec
shlb
fs
or
push
push
shll
push
ret
add
add
test
lcall
adc
push
push
or
push
out
dec
or
sub
clc
push
js
inc
jbe
add
jp
jno
push
inc
add
dec
add
adc
out
push
call
aam
and
xchg
xor
mov
cwtl
push
cltd
add
add
xor
bnd
fs
adc
inc
dec
addb
jmp
push
sti
sahf
jmp
bound
enter
sarb
je
into
loopne
and
bound
incb
pop
call
push
loop
clc
outsl
adc
and
pusha
push
mov
js
push
sub
push
int3
push
mov
sub
mov
lea
and
pop
push
int3
scas
sub
inc
push
cmpsb
ror
ss
mov
inc
mov
add
loope
or
pop
and
in
jmp
pop
push
pusha
sbb
pusha
and
cmp
sbb
decl
jo
adc
aam
add
push
pop
cmp
sarl
add
push
movb
sahf
add
and
mov
push
xchg
hlt
sti
add
lcall
das
ret
adc
nop
push
loope
sub
add
cmpsb
loopne
push
cwtl
mov
adc
incb
test
mov
push
inc
loopne
ret
mov
push
mov
and
popa
mov
testb
incb
loopne
xchg
les
mov
ds
lods
sbb
push
sbb
mov
and
pusha
adc
jecxz
adc
add
jp
sub
push
xchg
movsb
cwtl
push
push
leave
mov
call
xor
jb
nop
adc
loopne
mov
cs
stos
iret
mov
cmp
test
sub
out
insl
or
mov
rorb
cmp
das
clc
decl
cmp
fwait
mov
mov
xchg
add
jo
jmp
pusha
jp
push
cmpsl
sti
nop
add
push
jl
fs
xchg
jb
push
or
jl
test
push
test
push
andb
cli
mov
loopne
stc
andl
jmp
mov
dec
arpl
fcmovu
sub
or
inc
push
push
jnp
lcall
sbb
loope
add
jmp
loopne
loopne
push
add
and
push
add
xchg
xchg
insb
in
aaa
xchg
js
faddl
lods
push
test
ljmp
xchg
mov
loopne
sub
jecxz
imul
stos
sub
mov
sbb
testb
mov
mov
push
push
xor
cltd
cli
lods
add
push
ret
js
mov
pop
pusha
push
outsl
lahf
xchg
adc
pop
pop
pop
dec
mov
and
inc
test
jae
mov
push
in
loopne
shrb
clc
xor
je
mov
xchg
inc
mov
scas
jne
lods
pusha
sbb
mov
cli
and
or
inc
sahf
daa
inc
jg
ret
pushf
orb
sub
test
lahf
inc
lret
testb
ds
loopne
mov
inc
ret
mov
enter
push
mov
pop
mov
mov
or
and
or
fsubp
aas
or
scas
add
add
outsb
adc
jbe
loopne
adc
or
pop
adc
mov
push
arpl
cmp
mov
push
mov
pusha
or
test
add
dec
pop
jle
cmpb
fwait
add
inc
add
hlt
pusha
das
sarb
lods
jbe
lret
push
adc
and
punpcklwd
addb
push
adc
test
push
sbb
xchg
andb
stos
js
mov
outsb
inc
push
pop
addb
adc
push
std
out
xchg
loope
adc
push
loope
sbb
xchg
sbb
mov
test
pop
and
ljmp
add
xor
and
mov
lret
jp
fistpll
add
add
cs
pop
cli
push
scas
push
lea
les
push
xor
cltd
sbb
inc
mov
cmp
enter
bound
sub
popf
xor
push
rol
jne
hlt
fisttps
adc
hlt
inc
int3
push
lea
cmpl
xchg
xchg
testb
in
xor
cld
sahf
adc
mov
adcb
popf
adc
push
fnstsw
push
adc
mov
xor
push
push
lods
insl
mov
aam
in
clc
scas
pop
jb
mov
je
or
incl
adc
add
in
jo
cmp
mov
scas
xor
test
or
push
mov
push
and
call
inc
les
cld
sub
xor
sub
cmc
add
jmp
push
je
adc
adc
jp
adc
roll
nop
jne
xor
lock
loopne
cmp
mov
and
lods
ljmp
adc
pusha
xor
and
push
icebp
push
xor
or
cld
mov
ss
clc
push
pop
mov
lret
clc
or
incl
mulb
lock
ja
les
sahf
pop
mov
or
ret
movb
xlat
push
pushf
das
inc
sldt
rcrl
or
mov
xlat
push
xor
xchg
xchg
jo
lock
sub
push
add
fistpl
add
jb
mov
and
movsl
mov
adc
mov
fadds
jb
push
push
push
in
lret
fistpl
cs
push
sbb
xchg
mov
imul
outsl
lods
pushf
push
and
push
test
rcrb
cmp
xchg
loope
or
jb
lock
outsb
dec
gs
in
push
mov
call
pusha
call
mov
enter
repnz
int
orb
xchg
clc
add
sub
xchg
js
sub
loopne
call
add
pusha
out
test
jl
test
xlat
pop
push
push
adc
adc
jb
pusha
insb
mov
add
loope
jns
les
pop
xor
mov
shll
shlb
in
add
push
mov
inc
mov
mov
jo
call
mov
xor
or
inc
js
fimull
push
lods
js
xor
cmpb
and
call
adc
push
cmp
jo
sbb
jb
mov
lea
sbb
dec
adc
xchg
push
adcb
mov
sub
das
add
jl
mov
clc
pop
mov
mov
lea
in
lock
mov
daa
fdivrp
inc
faddl
test
hlt
call
lds
insl
mov
popa
dec
mov
adc
into
mov
push
or
fs
mov
or
cld
sub
add
adcl
push
or
fiaddl
jne
popa
movsb
xor
fs
dec
mov
fs
and
addb
outsb
xor
outsb
test
xorb
nop
mov
mov
dec
lods
cmc
inc
jb
sub
sub
inc
jno
add
jo
stos
andb
andb
mov
push
mov
push
sbb
xchg
mov
hlt
push
adc
sbb
mov
ds
sbbb
mov
push
int3
and
clc
in
push
add
and
jmp
lea
clc
das
and
jo
outsb
xchg
inc
push
xorl
es
dec
punpckhdq
fbstp
mov
xor
lods
mov
mov
push
lcall
std
add
or
mov
push
add
lock
hlt
jmp
jbe
inc
hlt
mov
jg
push
loop
lock
pop
sbbb
into
push
lock
fstl
mov
cmp
mov
pop
lock
add
xor
cld
xchg
xchg
cli
mov
loopne,pn
push
sbb
add
loope
subb
orl
sub
test
push
xorb
fcmovnbe
jge
cmp
jmp
pop
push
pop
push
mov
xor
adc
mov
push
cld
pushf
mov
mov
push
loopne
mov
add
inc
inc
fcomip
decl
std
inc
icebp
inc
loopne
push
rcrl
inc
push
je
add
lock
add
lods
je
push
icebp
jnp
or
cmpsb
mov
or
scas
add
push
pop
mov
mov
sub
and
push
mov
fidivs
testl
rol
cs
shlb
rorb
pushf
cmpsb
jecxz
shll
mov
outsl
jo
push
sbb
fwait
xor
add
and
shrl
out
xor
inc
push
es
popa
jo
jo
mov
and
out
adc
push
mov
push
shrl
xchg
add
in
inc
pop
out
xchg
fcmovbe
sbb
js
cmp
or
inc
jp
hlt
add
push
ret
outsl
xchg
mov
adc
icebp
add
inc
inc
dec
pusha
lock
faddl
inc
add
subl
mov
sbb
and
mov
cmp
mov
cmp
pop
not
or
xchg
insb
push
and
aam
pop
ljmp
je
ret
xor
fcomip
sarb
repz
jae
sub
enter
push
jne
lock
add
nop
sbb
outsb
add
sarb
dec
js
and
mov
xor
cmpxchg
cmp
loopne
sub
cld
mov
movsb
xor
xor
repz
les
in
push
add
mov
mov
out
incl
lock
and
lret
lock
jno
icebp
xor
jp
sbb
insb
jo
xor
push
xor
push
push
mov
movsb
jns
add
es
push
inc
inc
popf
xor
lods
pop
fldt
jo
cmp
mov
lock
rclb
cmp
add
xor
push
push
dec
xor
es
mov
push
mov
push
xchg
mov
xorb
icebp
std
das
add
add
push
pop
enter
add
sbb
pop
add
sbb
xchg
lock
pop
mov
ret
mul
lea
pop
or
inc
mov
lock
mov
xor
cld
adcb
xor
push
add
jg
dec
add
je
dec
mov
add
push
pop
inc
lock
lock
push
mov
mov
jmp
testb
xor
add
repz
aam
icebp
sub
lcall
add
xor
adc
sub
sbb
adc
push
mov
push
ja
inc
add
insb
test
and
cmp
addl
cmp
subb
or
push
pop
add
hlt
and
add
lock
mov
test
ss
adc
add
sub
scas
out
add
je
scas
jo
xchg
add
sbb
add
jno
fwait
int3
or
jge
cmp
cs
pop
xor
loopne
test
jmp
jp
or
push
pop
int3
cmovo
cmp
sahf
and
lock
mov
and
push
cs
cmp
push
dec
in
lret
pop
stos
xlat
xchg
mov
mov
scas
add
sub
sbb
pop
add
inc
and
stos
sbb
xor
jbe
decl
inc
pop
mov
and
push
dec
orb
pop
and
sub
pop
adc
adc
pop
stos
add
mov
shlb
bound
std
xor
aas
xchg
aad
inc
add
pop
lea
fwait
test
xchg
push
pop
pop
hlt
sub
testb
lock
pop
cmp
adc
cmpb
adc
push
orb
pop
cltd
cmpl
ret
les
cmp
je
lea
add
adc
test
add
fsubrp
mov
cmp
sbb
mov
xchg
rorb
pop
push
mov
ljmp
in
pop
rcr
or
inc
roll
sbb
faddl
je
or
pop
cmc
fnsave
jo
les
je
icebp
sbb
adc
imul
mov
sbb
les
rorb
loopne
dec
or
mov
lods
cmc
adc
js
adc
hlt
daa
jge
sbb
scas
cmpl
push
mov
fwait
hlt
loopne
sarb
decb
or
jne
mov
fnstenv
insl
or
call
sarl
inc
and
dec
rolb
es
push
stos
sub
cwtl
in
mov
or
xlat
mov
pop
push
mov
loop
push
out
mov
inc
push
cmpsl
mov
add
sbb
sub
jl
sbb
clc
add
ds
add
add
stos
jb
mov
mov
push
cmpb
inc
mov
leave
mov
lret
aam
push
mov
je
cs
mov
add
xor
or
inc
lcall
enter
test
dec
inc
mov
das
aad
xor
add
lret
mov
xor
dec
push
xchg
je
lcall
ljmp
outsl
jns
push
shlb
adc
or
pusha
cltd
dec
cwtl
loopne
push
or
mov
rclb
sbb
dec
add
xchg
scas
or
pop
or
call
pop
fidivl
push
add
popa
std
add
mov
std
repnz
jb
and
push
push
mov
call
je
xor
or
sarb
call
push
in
add
and
jmp
sbb
mov
pop
cwtl
js
push
inc
sub
bound
test
loopne
rcll
mov
scas
add
push
xchg
and
mov
add
inc
xchg
cmc
scas
mov
mov
sub
xor
lea
and
adc
test
mov
xor
leave
pop
or
add
inc
dec
loopne
add
scas
adc
loopne
pushf
sbb
add
loopne
add
decl
loope
ja
add
add
fwait
push
out
cmp
push
pusha
and
stc
notb
sub
popa
add
dec
cmpsl
adc
inc
jp
add
adc
or
fucom
sbb
pop
mov
bound
jb
sub
adc
jl
mov
add
test
add
jp
pop
mov
push
aam
scas
push
or
stos
insl
dec
jnp
sbb
mov
cmpb
gs
adc
bound
movsl
or
or
or
loopne
stos
call
mov
or
mov
cs
and
xor
out
mov
push
outsl
lods
add
push
fwait
out
rolb
cmpsb
scas
jb
arpl
push
sub
mov
adc
cmpsl
lock
pop
mov
push
and
pop
or
mov
mov
daa
loope
or
and
inc
clc
lock
loopne
fistpll
outsb
xorb
nop
pop
call
pusha
subb
pop
mov
mov
movsb
adc
mov
mov
push
xor
push
or
pusha
nop
pop
shrb
adc
add
clc
scas
pusha
push
cmp
movsl
push
mul
in
xchg
add
add
xor
xchg
les
mov
push
lret
pop
push
xorb
xchg
aam
mov
cmp
add
ret
jbe
push
push
jg
adc
cmp
cmp
sub
add
add
push
adc
jne
sbb
pop
or
mov
cmp
and
xor
or
push
or
mov
dec
fdivrl
push
testb
adc
mov
cmc
or
mov
je
hlt
mov
int3
xchg
mov
loopne
xor
rolb
popf
push
add
adc
mov
cld
push
mov
sti
push
pop
out
clc
pop
cmp
jp
add
sbb
mov
fsubs
inc
loope
int3
das
sbb
incb
xchg
mov
jmp
hlt
jp
bound
inc
adcl
mov
mov
add
test
adc
add
sub
jbe
xor
adcl
out
xchg
adc
out
sbb
outsb
stos
xchg
dec
add
mov
pop
xchg
add
imul
mov
mov
movsb
mov
push
dec
mov
setne
ret
shll
fsubrs
das
divb
leave
add
push
or
pushf
or
loop
or
jnp
rolb
push
pop
cmpsb
dec
jmp
mov
mov
fwait
out
lock
sbb
adc
dec
js
imul
adc
and
sub
jl
int
jbe
loope
lods
js
sbbb
cld
jmp
test
push
xor
push
out
out
sar
dec
nop
jl
inc
mov
or
cmp
mov
test
fdiv
test
dec
cli
je
push
ret
jp
inc
xorl
sbb
and
and
mov
outsl
mov
sub
push
add
mov
xor
leave
push
or
fiadds
jb
pusha
jmp
dec
dec
mov
or
test
add
data16
xchg
fadds
or
stc
aaa
jp
push
mov
and
hlt
lods
push
push
pushl
push
divb
lock
jge
push
pushf
push
push
pushf
stc
cmp
push
add
test
dec
ljmp
xor
xchg
sbb
push
push
cmp
adc
cmp
cmp
cmp
fidivl
add
jge
out
loopne
lds
cmpsb
mov
loopne
test
xor
sub
incl
push
or
jae
insl
xchg
aam
pop
sub
mov
lock
dec
mov
rclb
cmpl
cmp
jp
insb
outsb
aaa
loopne
or
push
call
call
loopne
mov
cmp
inc
pushl
lea
xor
mov
insb
call
cwtl
mov
cmp
add
push
push
fwait
mov
and
into
mov
fwait
pop
imul
cmp
rcll
cli
aas
cmp
jne
hlt
pop
rcrb
xchg
sbb
push
add
shrb
and
call
mov
mov
dec
insb
and
sub
inc
jno
lods
pushf
icebp
add
sub
dec
adc
mov
xchg
sub
xor
ljmp
mov
cmp
xor
lock
mov
mov
pop
and
mov
or
push
cli
outsb
xor
cmp
addl
jne
sbb
test
xor
mov
outsl
sbb
cli
or
lea
xor
insb
xchg
push
fidivrs
xor
out
lcall
jb
pop
sar
idivb
scas
dec
lock
mov
jmp
mov
mov
xchg
push
shl
push
jb
push
xor
gs
pushl
inc
lock
pop
iret
sbbb
daa
mov
jecxz
adc
and
mov
mov
xor
mov
les
es
ljmp
pop
ja
jge
sub
xor
push
inc
mov
scas
fwait
sub
mov
cli
in
mov
outsb
inc
xchg
xchg
ljmp
es
fisttpl
sub
add
adc
dec
xor
xchg
mov
pop
inc
jno
negb
call
lcall
je
push
jae
push
adc
in
lds
or
je
xorb
jl
jo
addr16
f2xm1
or
add
jo
adc
mov
mov
adc
inc
add
jno
sti
call
dec
mov
je
and
inc
mov
inc
dec
xor
and
inc
mov
enter
cmp
mov
call
mov
je
add
or
repz
dec
frstor
xor
and
push
call
sbb
jl
mov
mov
mov
adc
jmp
mov
fisttpl
test
outsb
lock
dec
inc
cmp
sub
mov
lea
push
ljmp
fimull
dec
je
add
out
jns
test
xchg
cmpb
mov
adc
dec
dec
xchg
jo
pcmpeqb
push
hlt
push
dec
mov
adc
and
lret
or
cli
pop
lock
test
dec
sti
outsl
pushl
je
pop
lea
lock
cmp
lret
cmp
sub
jo
mov
xor
sti
out
clc
faddl
icebp
pop
fadds
psubsb
ja
fdivs
pusha
sar
jg
inc
adcb
xor
int3
jnp
xchg
test
call
outsb
mov
lea
sbb
inc
loopne
push
mov
movsb
in
fxtract
adc
das
and
xor
clc
adc
lods
outsl
das
add
pop
push
jo
push
rcrb
mov
test
and
aas
dec
test
add
call
stos
stos
cs
inc
pop
ss
pop
cld
jbe
jl
clc
jmp
mov
imul
andb
push
lea
test
push
or
mov
jnp
add
mov
mov
scas
adc
scas
mov
mov
pusha
shlb
cmp
pop
mov
xor
gs
lock
and
hlt
fsubrl
push
xor
and
jmp
iret
and
lock
pop
inc
pop
fdivrl
mov
xor
sub
push
or
std
push
dec
lods
sbb
mov
or
outsb
pop
inc
das
inc
cmpsl
jp
push
xor
mov
bound
lods
lock
fildl
call
mov
insb
rcll
or
sbb
add
adc
mov
push
ficompl
mov
mov
jmp
jno
fs
xchg
ds
add
jge
inc
cltd
push
roll
js
lea
jle
sub
xor
add
adc
push
lret
mov
mov
adc
fcmovbe
dec
add
sub
mov
xlat
pop
xchg
test
jne
push
and
je
inc
imul
pop
or
clc
test
and
or
or
enter
ss
mov
pusha
mov
mov
subb
push
or
dec
jb
rclb
pop
mov
daa
add
or
xchg
addl
lret
leave
outsb
fisubl
cmp
push
lcall
int3
je
sub
data16
inc
popa
mov
or
xor
dec
loopne
or
sbb
push
adc
mov
or
dec
adc
push
add
outsb
push
pop
or
fildl
pop
pop
rolb
and
mov
es
sbb
call
adc
jbe
test
jb
bound
enter
jbe
add
std
or
data16
sub
inc
loopne
and
mov
or
add
aas
movsb
jae
adcb
subb
fwait
aam
test
sarb
xor
mov
dec
xchg
lret
into
orb
cld
or
cmc
aam
lods
sub
test
xchg
mov
bound
sbbb
insl
add
push
scas
jo
sub
cmp
and
xchg
subb
sub
loopne
adc
ljmp
push
xchg
enter
les
call
adc
inc
loope
push
add
xchg
movsb
ja
xchg
push
or
sub
cltd
lods
js
mov
dec
fwait
push
add
cmp
jp
cmp
fwait
mov
pop
push
mov
shll
call
and
call
mov
pusha
add
aaa
or
inc
push
sbb
out
imul
hlt
shrb
pusha
outsl
subb
or
xchg
add
cmp
push
cmp
inc
or
fmull
jb
add
shll
jbe
inc
mov
push
pusha
sub
pop
adc
sbb
xor
add
push
dec
dec
mov
mov
add
inc
mov
test
addb
lock
adc
cs
sbbb
stos
inc
fyl2xp1
inc
dec
scas
pop
rcrb
lahf
roll
or
roll
inc
add
mov
dec
rorb
and
mov
mov
addb
xor
mov
jne
mov
call
mov
test
mov
lods
push
sub
add
add
mov
hlt
xor
push
jecxz
inc
push
sarb
push
arpl
ljmp
rcrl
jp
addb
add
loopne
int3
jle
ret
jg
pop
in
push
push
sbb
add
in
mov
xchg
push
lds
je
call
inc
ret
stos
xchg
aaa
or
sbb
xchg
fidivrs
add
pop
rol
jb
jb
dec
andb
notb
dec
add
and
cmp
sub
inc
jmp
push
adc
fbstp
loopne
cmp
cmp
add
add
dec
andb
ljmp
loope
repnz
add
sub
loope
adc
hlt
mov
jnp
and
sub
shlb
call
addl
fs
sarb
add
insb
adc
stos
and
sbb
pusha
xor
dec
add
sbb
mov
aam
mov
fistps
subb
add
inc
loopne
fneni(8087
and
pop
and
stc
int
out
jne
cmp
add
sub
dec
ja
clc
push
scas
add
pusha
rolb
std
mov
lock
dec
shlw
subl
inc
sbb
mov
jmp
sbb
pop
loopne
pop
push
fsubl
mov
call
out
jg
adc
fs
xchg
xor
pop
inc
jo
lret
add
roll
andl
loopne
lea
ja
sbb
inc
xor
and
jg
sub
aaa
pop
cs
pop
andb
mov
mov
cltd
dec
push
jne
loope
push
rorb
sbb
push
and
push
push
xchg
rcr
mov
mov
lea
mov
jg
xor
ja
scas
dec
rolb
mov
add
sub
mov
sub
stos
in
cmc
mov
cmpb
clc
loopne
inc
inc
dec
mov
shl
jl
outsl
sbb
pop
jb
or
lea
pop
xchg
and
pop
mov
in
loopne
add
push
loopne
decb
nop
fcompl
adcb
stos
jmp
pop
enter
ss
inc
sbb
mov
jne
and
pop
loope
xchg
inc
pusha
gs
sub
mov
add
mov
xchg
push
in
push
call
or
test
and
hlt
sbb
jp
lock
push
test
out
inc
loope
out
mov
push
or
ljmp
dec
mov
add
bound
push
aam
loop
xor
adc
cmp
push
sub
out
mov
jns
and
rorb
movsb
fsubp
pop
add
fcoms
mov
lods
mov
lock
dec
jecxz
dec
push
test
sbbb
add
mov
das
inc
add
outsb
js
mov
shlb
push
mov
aaa
jmp
data16
jb
mov
and
mov
sbb
pop
push
into
rcrb
pusha
cmp
lock
add
and
ret
leave
cli
fistpll
mov
xchg
nop
jnp
adcb
sub
pusha
sub
loopne
aam
xchg
or
inc
xchg
frstor
xchg
out
push
adc
sub
dec
rolb
clc
mov
push
pusha
arpl
in
inc
mov
jne
or
popf
xchg
pop
scas
test
add
sub
jbe
push
jg
pop
cmp
in
adc
adc
dec
xor
stos
xor
dec
fldenv
sbb
sbb
cmp
mov
call
or
mov
shll
cmp
in
mov
addb
sbbb
test
mov
xor
sti
pop
loopne
fwait
jo
testb
out
je
mov
mov
pop
push
adc
add
push
xor
push
add
icebp
or
xor
push
mov
add
add
aaa
jne
scas
ficoml
pop
pusha
bound
ret
fs
pushf
jo
push
add
add
call
aas
push
mov
mov
ljmp
dec
mov
push
call
mov
repnz
jmp
add
hlt
push
push
mov
std
jg
movsb
mov
cmp
mov
lods
mov
xchg
ret
nop
inc
idiv
adc
push
mov
mov
add
mov
movsl
xor
add
rorb
adc
aad
jecxz
mov
negb
jo
mov
push
mov
pusha
insl
and
add
pop
push
ljmp
cld
push
loope
es
adc
cmp
pushl
pushw
outsb
inc
movsb
loop
imul
jo
and
fs
callw
cmp
test
xor
and
jo
into
lock
fisttps
push
or
sbb
ljmp
adc
jl
or
jp
sbb
popf
ret
call
fldl
add
les
aaa
test
dec
add
push
cmp
mov
lahf
or
ret
xor
les
push
sbb
add
es
mov
or
clc
lds
rclb
xchg
aaa
mov
inc
jmp
js
cmp
xor
xchg
clc
adc
or
xchg
xor
xchg
push
push
fisubrl
imul
xchg
or
jne
mov
data16
mov
xor
cmpb
pop
es
pop
in
add
add
inc
add
adc
decl
adc
lock
sbb
and
in
jl
lcall
inc
mov
add
testb
xor
adc
cld
ja
ret
mov
pop
jno
cwtl
inc
ret
lods
leave
push
les
and
subb
pop
mov
push
test
sbb
arpl
lcall
sbb
call
out
add
test
mov
and
push
xor
test
es
inc
ss
mov
cmp
sbb
push
add
sbb
cmp
data16
lock
push
pop
inc
es
xchg
dec
in
and
sub
and
call
lods
aas
lock
scas
push
push
pushl
xchg
mov
lcall
and
jnp
in
scas
xor
inc
adc
cwtl
add
sbb
rolb
lods
cmp
push
scas
mov
mov
imul
icebp
daa
mov
outsl
push
clc
call
push
jno
and
cmp
xchg
inc
push
push
push
call
movl
push
dec
inc
cmpb
or
test
add
add
inc
fists
add
add
lea
dec
push
mov
sbb
or
call
lea
cmp
mov
xor
mov
movsl
cmp
pop
sub
mov
add
add
mov
mov
push
push
fistps
test
jo
inc
jo
push
xor
or
jmp
addl
movb
mov
mov
jmp
cmp
sarb
arpl
pop
jno
adc
jo
xchg
sub
xchg
add
incb
std
hlt
pop
scas
mov
cltd
xor
xor
xchg
cmp
and
fildll
sub
mov
or
pop
cmpl
adc
xchg
push
xchg
jo
jo
arpl
popa
pop
xor
stc
add
push
mov
xchg
mov
mov
scas
clc
outsb
clc
adc
mov
repnz
mov
lock
xor
pop
in
pop
test
jne
pop
pop
pop
outsb
repnz
sti
orl
pop
mov
addb
jg
ljmp
icebp
and
repz
xor
fwait
rorl
call
cli
xor
in
mov
orb
ljmp
jnp
das
jecxz
or
mov
in
mov
fstl
cltd
cmp
xor
jae
dec
mov
jnp
in
mov
mov
inc
xchg
testb
mov
add
mov
mov
lcall
cld
fistps
mov
mov
fsubs
outsl
mov
inc
mov
jb
and
cmpsb
mov
outsl
fidivrs
or
adc
stos
insb
stos
inc
in
mov
mov
shll
mov
sarb
loopne
inc
adc
dec
sbb
add
jo
mov
adc
imul
mov
inc
mov
movsb
mov
pusha
mov
inc
rol
fadd
inc
fisubs
cmp
mov
enter
stc
rcr
int3
cmpsb
lret
out
mov
mov
out
fcmovnb
mov
xor
insl
mov
insl
fcmovu
inc
aam
mov
es
fiaddl
fwait
out
xchg
push
fiadds
sub
int
outsl
or
loop
cmp
or
mov
push
dec
cld
jns
imul
lret
mov
aam
out
and
enter
jo
int
mov
mov
mov
xor
ds
add
inc
mov
push
inc
mov
and
push
sbb
and
sbb
pop
push
push
push
push
mov
aaa
fcmovnu
incl
inc
popl
mov
mov
in
xchg
insb
or
in
and
sar
add
inc
mov
repz
push
or
mov
outsl
mov
imul
sahf
mov
mov
mov
mov
sbb
test
jecxz
add
mov
in
inc
outsl
or
mov
testb
add
call
sti
idiv
and
aaa
dec
and
add
es
fsubrs
xlat
mov
mov
mov
or
or
cmp
or
add
iret
xor
sub
fisubl
mov
adcb
loopne
sarl
pop
mov
mov
fdivrs
aaa
sub
mov
mov
dec
pop
xor
adcl
xor
pop
dec
cmp
fwait
incl
dec
mov
pop
dec
pop
xorl
push
andb
mov
outsl
test
mov
cmpsl
push
inc
inc
cltd
mov
stos
mov
inc
and
mov
pop
cli
fisubrs
pop
inc
pop
rcrl
mov
sbb
sbbl
hlt
or
inc
shrb
or
adc
pushw
push
repnz
push
les
mov
cltd
dec
push
ret
or
or
pop
add
pop
push
or
mov
inc
xchg
lret
push
sarb
ljmp
loop
dec
jmp
roll
cmp
jae
aad
pop
sbb
jecxz
push
push
jo
test
or
pusha
push
jmp
adc
add
mov
cltd
shl
aaa
pop
sti
cmp
or
data16
push
inc
test
ror
adc
add
push
sub
nop
adc
cmp
mov
cmp
adc
aaa
or
lahf
push
xor
mov
add
inc
xor
cmp
fldt
filds
push
mov
inc
push
fldt
push
ret
pop
int3
movsb
add
pop
rclb
mov
js
push
fisttpl
or
add
and
mov
into
aam
nop
or
shrb
push
push
adc
clc
or
inc
andb
add
adc
push
pop
push
ja
mov
les
aaa
daa
xor
push
push
cmp
jo
loope
push
jbe
cmp
lods
incl
mov
jo
nop
orb
into
xchg
movsb
mov
adc
add
push
push
sbb
pop
cmp
cmp
mov
cmpb
xor
rorl
call
loope
call
rorl
cmp
add
ss
shlb
aaa
aam
pop
jns
xchg
add
js
fadds
add
adc
stos
mov
enter
mov
or
into
or
fsubr
jbe
lcall
fisttpl
sbb
jb
jne
inc
adc
xor
push
add
or
ret
out
les
sbb
stos
pusha
push
je
in
push
add
xor
mov
and
fcoml
and
loopne
roll
sbb
nop
mov
add
jmp
add
clc
ljmp
mov
lock
jo
mov
fisubrs
js
inc
je
inc
movsl
add
or
xchg
stc
loope
jle
addr16
ss
cmp
std
loopne
xor
add
popa
lds
sbb
push
jmp
pop
in
push
adc
mov
call
into
xor
inc
or
loopne
out
jmp
sbb
adc
and
or
jecxz
and
inc
fldenv
subb
outsb
add
inc
mov
adc
mov
inc
call
fcoms
xor
push
pop
jb
mov
call
call
bound
sub
add
lahf
xchg
mov
bound
add
or
add
inc
lds
xorb
sub
xor
or
inc
push
dec
add
aas
loope
xchg
fwait
dec
incl
mov
xor
out
mov
shll
js
or
mov
loopne
inc
adc
push
or
dec
pusha
sbb
dec
inc
push
sbb
lret
rorb
pusha
xor
inc
add
dec
mov
add
dec
add
in
in
ret
es
sar
pushf
je
sbb
sbb
jl
and
dec
mov
rclb
sbb
add
and
lret
ss
jp
push
xor
enter
xorb
inc
jne
xchg
add
mov
scas
sub
hlt
inc
jp
fwait
loopne
jo
ret
imul
loop
fs
ret
insb
xchg
call
dec
push
add
jmp
inc
ljmp
xchg
out
inc
sub
mov
add
out
or
inc
shr
cmc
add
jmp
push
add
mov
roll
lcall
pop
xchg
rolb
shrb
add
sti
rcl
movsl
rolb
rorb
ja
jle
add
adc
pop
sbb
mov
xor
add
sbb
movsb
repnz
cmp
adc
jecxz
nopl
loope
ret
imul
sub
out
fidivl
jg
imul
data16
adc
jne
lods
pop
std
pop
jbe
push
mov
push
add
mov
mov
out
jmp
inc
adc
andb
clc
inc
arpl
cmp
xchg
dec
cli
pop
dec
adc
inc
xor
add
std
fcompl
push
pop
incl
and
mov
int3
js
outsl
push
in
add
push
ret
or
adc
pop
andb
ret
sbb
cmpsl
adc
insl
fwait
sub
or
push
xchg
push
push
dec
push
xor
mov
dec
push
js
add
and
rolb
pop
sub
not
pop
adc
jge
add
testl
xor
lea
cltd
cltd
insl
cwtl
imul
stos
and
add
adc
and
or
std
dec
clc
sti
cli
ja
add
movsb
icebp
push
inc
loope
add
add
cs
fcompl
mov
pop
xor
mov
add
cmp
or
je
or
dec
inc
xorb
in
sub
pop
and
add
dec
lock
sub
imulb
cmp
push
fdivs
in
push
cmpl
cmc
push
add
mov
lock
add
and
add
adc
loopne
mov
aaa
pop
notb
mov
lea
cmp
mov
mov
mov
or
loopne
jno
mov
push
scas
lock
mov
or
push
addb
pop
lock
jmp
and
cmpsb
mov
inc
sar
sub
mov
adc
mov
cld
decl
test
add
add
mov
lcall
outsb
add
loopne
xchg
loop
mov
sbb
cmp
pop
push
pop
adc
outsl
sbb
jl
add
jmp
push
cmp
mov
xor
mov
incl
jmp
std
je
add
and
or
daa
repnz
cmp
and
mov
cmp
pusha
sbb
pop
jne
mov
add
mov
mov
popa
add
les
push
push
stos
dec
test
ss
push
xchg
outsb
cli
movsb
call
add
add
test
fsubrs
push
push
mov
cld
pop
dec
push
pop
add
cmc
adc
xorl
push
fdivs
les
xchg
stc
pop
push
addb
xchg
js
fcompl
shr
shlb
add
push
mov
cs
or
add
outsl
mov
mov
add
hlt
fbld
mov
cmc
repz
les
std
jmp
test
std
xor
lock
push
or
jmp
inc
cmpb
je
cmp
jp
mov
lret
jecxz
sub
or
or
add
xor
in
movsb
xchg
jmp
inc
call
jo
dec
jl
push
jno
adc
mov
push
clc
or
xor
pop
xor
subl
sbb
out
jns
sbbb
movb
int
xchg
add
and
add
adc
cwtl
mov
jbe
jg
lock
test
add
jb
aam
add
jmp
mov
mov
sbb
loope
es
dec
insb
nop
ss
adc
data16
jo
inc
mul
xchg
push
push
inc
add
fisttpll
push
test
inc
or
or
add
lret
jbe
adc
adc
loopne
or
ret
test
cli
sub
or
cli
fiaddl
jecxz
ss
iret
pop
nop
add
xor
pop
add
call
cmpsb
mov
and
adc
xchg
lock
sahf
mov
sub
add
insb
add
das
ficomps
data16
or
mov
in
sbbb
add
sub
jb
adc
ja
sbbl
cld
mov
sub
mov
push
dec
std
xchg
push
xor
out
mov
mov
andb
mov
rclb
push
je
jne
sbb
adc
mov
fnstcw
xor
xchg
xor
push
cmp
xchg
mov
jg
add
imulb
pop
dec
cld
or
xor
ljmp
subb
adcb
or
ds
dec
call
lock
into
xor
sub
jg
inc
loopne
ret
push
sbb
adc
mov
mov
jge
push
lock
or
pop
les
dec
pop
stos
push
repnz
adc
inc
loop
xor
ja
mov
push
mov
movsl
lods
fidivrs
fwait
push
push
push
cli
dec
mov
push
inc
inc
lock
xor
scas
sti
or
shlb
push
mov
sbb
add
add
jb
insb
loope
lret
add
clc
jne
es
jo
jmp
mov
mov
xor
mov
lock
std
push
add
or
out
add
loop,pn
fimuls
lahf
imul
add
jno
mov
pop
in
out
dec
xor
mov
shl
test
xchg
mov
popa
mov
stos
cmpsb
inc
or
sbb
adc
sbb
and
add
xchg
mov
jle
sub
jo
push
mov
inc
xchg
xchg
cs
mov
mov
xchg
cmp
add
cmp
stos
add
sbb
jne
jmp
xorl
pop
mov
call
fsubs
add
inc
jo
daa
xor
movb
jo
jb
sub
mov
test
mov
mov
add
pop
mov
jo
ret
xor
sbb
or
mov
sbb
cs
lock
aaa
jbe
movsb
mov
add
icebp
xor
push
or
mov
push
ljmp
sbbb
sbb
sahf
xchg
xchg
imul
or
xor
incl
pushf
mov
or
xor
add
jbe
add
mov
add
lds
decb
mov
test
dec
repz
rorb
add
clc
push
mov
or
aam
add
sbb
push
es
mov
jo
mov
out
clc
cs
push
out
jecxz
mov
fs
mov
scas
cmp
cmp
xor
clc
cmp
dec
fimull
and
xchg
mov
lea
jl
jb
add
and
inc
enter
jae
test
add
cli
jo
fistpl
xor
mov
xor
pop
xor
or
dec
add
pop
ds
cmc
in
fdivs
cltd
and
pop
add
add
lock
push
add
jg
outsb
call
cmp
je
pop
cwtl
mov
cmpsb
pop
and
pop
addb
jne
inc
lea
push
clc
sbb
lods
cmp
cmp
mov
mov
fbld
mov
inc
mov
xorb
adc
add
lods
jp
sahf
sub
dec
nop
lea
clc
lea
inc
adc
mov
xor
and
or
inc
lcall
or
inc
adc
lea
jo
mov
inc
jne
fisttps
outsb
adc
xorb
adc
mov
test
jo
jmp
out
cli
xchg
inc
adc
addw
aas
add
adc
inc
add
mov
dec
or
and
call
add
jb
pop
jo
fisttps
inc
xor
mov
push
xor
pop
jne
and
adc
xchg
cmp
fidivrs
dec
js
imul
lret
inc
add
sub
dec
ret
cmp
mov
je
and
sbb
sbb
pusha
lmsw
push
sbb
stos
push
or
mov
cld
add
stos
mov
or
push
xorl
cmp
jle
push
cs
jmp
sbb
mov
mov
adc
test
ds
xchg
orb
daa
in
dec
cmp
insb
jne
popa
mov
xchg
cmc
sti
push
mov
popa
ja
call
inc
mov
mov
pushf
inc
pop
cmp
or
stos
dec
push
into
pop
add
or
inc
into
push
jmp
jmp
mov
pushf
add
inc
ret
dec
cmpsb
jp
sub
jp
add
ret
aas
in
jmp
inc
es
adc
incb
cmp
push
jmp
std
push
jnp
add
add
add
adc
out
int
andb
jmp
inc
jp
cli
or
loopne
jo
movl
bound
jmp
addb
pop
lods
test
or
cwtl
add
sahf
adc
mov
je
mov
add
adc
or
inc
and
and
aas
or
cmp
arpl
cmc
out
jbe
push
pop
data16
pop
shlb
adc
cli
inc
xchg
or
mov
andl
andb
pop
or
pop
xchg
loop
ss
or
addb
aam
ret
push
add
ret
daa
testb
sub
push
add
roll
or
pop
adc
arpl
push
cltd
jle
rclb
add
cmp
adc
xor
hlt
mov
mov
sub
ret
or
out
ss
ljmp
adc
jo
call
daa
rolb
testb
movb
jmp
mov
insl
add
mov
jbe
int3
ret
and
pop
push
inc
adc
adc
inc
mov
int3
or
testl
sbb
sbb
dec
xchg
mov
lcall
or
push
shlb
pop
testb
shrl
dec
ljmp
push
rcrb
cs
or
push
sarl
and
mov
and
mov
fcoms
mov
cwtl
push
mov
jnp
cs
in
adc
or
rcrb
jmp
dec
clc
add
pop
mov
lods
sahf
icebp
adc
enter
shr
add
aaa
scas
sub
orl
adc
movsl
mov
inc
mov
js
ljmp
sti
adc
sbb
jbe
jbe
imulb
and
popf
inc
add
movsl
incl
call
jb
mov
push
call
or
test
sarl
mov
call
push
clc
sub
popa
add
pusha
jbe
loopne
sbb
xor
jo
sub
add
adc
xorb
rolb
dec
outsl
jg
orl
and
jbe
ror
lcall
sbb
rolb
cmpsl
mov
incb
test
aam
sbb
jmp
loopne
pusha
add
xor
call
mov
pop
jae
push
popf
add
call
lock
add
push
push
lock
ja
incl
xor
loopne
loope
xchg
out
adc
pop
mov
loopne
xorb
addb
push
lcall
loopne
cltd
test
data16
mov
loopne
mov
adc
out
jl
les
sbb
mov
sbb
xor
or
insb
adc
add
jno
aas
mov
pusha
adc
adc
add
loopne
push
int
push
inc
push
xor
sub
xchg
mov
xchg
std
or
pop
inc
sahf
loop
adc
repz
lods
data16
das
mov
push
incb
or
mov
xchg
inc
or
subb
or
outsb
cmpsb
xorb
push
loope
and
pushl
pop
pusha
cmp
or
adc
test
lds
icebp
adc
pusha
and
popa
and
lahf
xchg
push
jmp
icebp
pop
mov
popa
mov
mov
dec
std
fcmovnu
cmp
jo
add
pop
dec
add
loope
insb
fwait
mov
cmp
test
inc
pop
add
je
dec
int3
scas
push
push
mov
int3
fs
push
incl
jmp
pusha
pop
xor
push
adc
fldl
popa
jb
data16
push
add
and
call
stos
jo
in
call
data16
loopne
mov
loopne
mov
dec
xor
pop
jb
aam
sbb
aaa
jmp
jl
and
pusha
and
addl
push
bound
pusha
outsl
jb
jg
dec
dec
dec
add
rorb
push
ljmp
pop
testb
cmp
add
mov
pushf
movsb
jp
inc
test
in
cmp
or
push
arpl
pop
loopne
bound
pusha
add
das
cmp
clc
daa
inc
pushl
or
fcoml
es
inc
test
jl
fdivs
push
jecxz
loopne
mov
mov
pop
xchg
lcall
lcall
aam
fs
pop
lock
add
cmp
ret
fwait
lods
push
lods
ss
pop
or
fs
inc
inc
daa
mov
add
xor
xor
arpl
shrb
mov
rorb
add
sub
mov
add
xor
jne
arpl
cmpb
jb
pop
cmp
mov
mov
push
adc
xor
dec
push
shll
ja
or
dec
add
and
jmp
pusha
sbb
jne
fsubrs
cmp
jge
jb
sub
jp
inc
mov
push
dec
mov
sub
insb
ljmp
or
lahf
test
sbb
fwait
sub
jg
xchg
loopne
push
lods
add
pusha
mov
imul
loope
ficoml
jnp
pusha
or
adc
pop
xchg
outsb
or
loopne
pop
inc
push
sbb
jb
scas
call
ret
decb
sub
lods
arpl
jecxz
aaa
movsl
mov
in
dec
add
lock
icebp
push
mov
ljmp
add
jmp
xorb
push
pop
in
lock
cmc
xor
mov
jmp
dec
or
cltd
and
mov
mov
pushf
and
mov
inc
pop
or
mov
cwtl
out
cmp
dec
add
es
jp
add
test
mov
add
out
bound
push
imul
fwait
and
aam
insl
fldl
ds
pop
pusha
loope
push
mov
add
push
push
xor
xchg
dec
xchg
sbb
pop
or
push
jno
adc
lock
or
decb
or
lock
mov
cld
pop
je
sti
add
mov
call
add
test
push
push
mov
cld
xor
xchg
pop
mov
add
cmpsb
hlt
lock
popa
adc
enter
es
out
mov
sti
call
add
call
jecxz
decl
push
mov
rorb
loopne
imull
pop
mov
sbb
jbe
sub
pop
jo
add
xchg
xor
pop
and
or
cmp
js
jge
xor
push
and
outsb
movsb
ss
pop
cld
out
mov
test
push
dec
jo
or
pop
cmc
es
les
jmp
call
sbb
out
das
or
inc
test
pop
cli
xorl
out
jo
adc
hlt
in
sarb
and
decl
adc
add
push
add
notl
push
pop
lret
fidivl
push
sub
or
push
mov
in
call
pop
jne
ljmp
aad
mov
and
xchg
call
call
pusha
xor
mov
and
sti
cmpsl
notb
or
cmp
xor
notb
hlt
rol
mov
shr
shl
hlt
ret
pop
inc
cmp
es
addb
test
adc
pop
outsb
les
je
mov
sti
ja
xor
and
neg
pop
mov
jle
incw
adc
lock
inc
inc
cmpb
or
insb
sar
mov
movsb
mov
xor
or
add
inc
adc
xchg
rorb
dec
adc
outsl
rorb
scas
xor
lock
mov
orb
or
jle
test
icebp
pop
rclb
xor
pop
mov
or
sbb
lock
in
ret
aam
test
sub
lock
pop
jmp
push
lods
cmp
enter
jns
sbb
push
push
add
or
xchg
push
xchg
stos
mov
add
xor
cmp
jo
mov
decb
and
mov
inc
mov
adc
ficomps
call
sub
push
push
ljmp
add
js
xchg
jo
popa
add
jnp
icebp
push
jo
sbb
testb
in
xchg
pushl
sub
and
adc
push
mov
cwtl
out
or
or
sub
and
push
inc
fdivs
fidivs
jne
adc
xor
jo
push
xchg
or
sbb
push
or
wrmsr
inc
jne
adc
cltd
pop
adc
push
dec
jbe
adc
stos
add
fcomps
pusha
arpl
mull
sbbb
inc
decl
into
xor
jne
shr
cwtl
add
push
call
and
dec
add
bound
lock
call
arpl
scas
cmpsb
mov
mov
movb
cmp
je
int
mov
outsb
inc
xor
je
mov
cmpsb
sub
mov
lret
push
push
inc
sti
outsl
add
ret
stos
fistpl
or
cld
stos
ret
inc
pop
add
shlb
push
fiaddl
pushf
xor
push
add
push
les
mov
jg
push
add
dec
xor
add
js
cld
inc
cmp
inc
push
fldenv
je
mov
pop
jo
or
mov
xor
xchg
aaa
repnz
insl
adc
outsl
inc
mov
sbb
insb
or
mov
pusha
scas
rolb
mov
sub
add
dec
add
or
mov
imul
fdivs
icebp
xor
leave
ja
xor
jbe
aas
pop
mov
mov
nop
mov
add
repz
pop
adc
xor
xchg
ja
es
test
pop
add
data16
inc
mov
inc
push
mov
lods
sbb
sbb
hlt
sbb
pop
dec
add
adc
cmp
out
popf
cmpb
leave
and
decb
mov
idiv
add
fildll
sarl
imul
add
jl
movsl
or
jne
inc
push
call
nop
dec
mov
sbb
xor
adc
xchg
ss
stos
cmp
rorl
add
mov
int3
adc
xabort
gs
push
fiaddl
pop
or
sbb
jns
sti
mov
je
cmp
sti
jne
add
add
xchg
lret
cmp
mov
cld
shr
mov
adc
mov
popf
adcb
sbb
jno
push
ret
jmp
mov
icebp
fbld
lcall
or
call
es
call
call
data16
addb
unpcklps
loopne
add
push
fwait
mov
clc
imul
mov
adc
add
mov
outsl
inc
cld
sub
pop
addr16
add
pop
pop
scas
add
nop
adc
lds
cld
jbe
je
or
call
cmp
popa
cli
add
jb
decl
pop
jno
test
jg
outsb
mov
adc
enter
mov
js
mov
call
clc
dec
aam
dec
push
or
pop
jne
push
call
mov
xor
stos
imul
icebp
add
insb
push
ret
je
cmpb
fimuls
push
push
push
jb
mov
xor
loope
test
adcb
jb
fs
push
icebp
push
cli
sub
push
adc
stos
es
ja
add
shlb
mov
pop
rcrb
popa
and
outsl
clc
scas
sahf
xor
pop
push
lea
xor
xor
dec
loopne
mov
mov
mov
inc
sub
mov
jg
xchg
mov
jno
test
push
cmp
sub
shrb
mov
call
mov
pop
pop
rclb
inc
sar
enter
int3
add
and
add
scas
or
stos
xchg
outsb
mov
subl
jle
mov
add
dec
push
aad
and
mov
icebp
cwtl
mov
pop
dec
mov
aas
push
add
or
sub
std
add
imulb
cmp
add
icebp
loope
dec
mov
pop
aam
popa
jge
cltd
cmp
adc
cld
mov
push
pop
xor
pop
xor
xchg
xor
adc
and
and
testl
bound
xchg
rclb
mov
mov
lea
sbb
adc
or
je
inc
ljmp
or
fsqrt
add
jge
cmp
out
arpl
pop
adc
adcl
movsl
add
leave
mulb
outsl
xor
outsb
sbb
adc
or
adc
cmc
jle
xchg
pushf
add
in
sub
add
inc
add
add
outsb
or
in
sbb
cmp
adc
sub
addb
adc
in
cmpsb
ljmp
dec
mov
ficoms
cmpb
jge
adc
aaa
call
je
movsb
xor
pusha
or
push
test
inc
dec
dec
add
inc
cmp
sbb
or
sbb
dec
add
dec
pop
fs
stos
orl
mov
or
pop
fs
test
repz
xchg
add
or
xor
xchg
inc
adc
pop
pop
jp
add
pushf
xchg
int
lods
mov
mov
sub
lds
adc
sbb
call
loope
es
rclb
push
or
ret
push
addb
sbb
inc
mov
lods
lcall
mov
call
dec
data16
loopne
jbe
add
push
into
jge
xchg
pop
fs
adc
jp
lret
xorb
push
adc
lahf
cmp
inc
and
insb
fisttpl
inc
or
movsl
or
pop
inc
shll
shrb
adc
shl
insb
gs
add
xchg
shrb
sbb
cmpb
sbb
or
cmp
ljmp
call
adc
mov
mov
mov
mov
add
pop
rorb
pop
and
xor
xchg
cwtl
cld
adc
shlb
xchg
sarb
sub
das
mov
and
jge
jl
ret
push
lcall
adc
lea
sub
adc
inc
lret
sti
xchg
nop
add
mov
rcll
mov
repz
or
nop
je
cld
sahf
mov
jmp
enter
bnd
adc
insb
mov
pop
jecxz
roll
or
cli
repz
cmp
fmuls
shlb
mov
add
incb
add
hlt
xchg
sbb
call
push
inc
ret
js
enter
pop
clc
push
jb
adc
inc
shll
and
xor
xchg
adc
or
data16
popa
rclb
xchg
addb
mov
xor
xchg
xor
pop
mov
fldl
pop
add
adc
js
mov
test
or
or
or
and
leave
mov
and
rcll
test
cmpsb
add
push
push
add
nop
xchg
or
push
cmp
mov
xchg
or
jo
bound
loope
fildl
mov
loopne
adc
or
enter
loopne
hlt
loopne
xor
pusha
es
pop
or
test
scas
popa
das
jl
pop
inc
aaa
push
jmp
enter
je
or
sbb
aaa
or
pushf
or
js
pusha
dec
test
pop
rcr
push
add
push
stos
cli
out
inc
sbb
lock
pusha
test
jne
sub
jb
in
add
or
or
movsl
pop
sbb
mov
xchg
imul
or
pusha
pop
pop
lcall
sbb
jo
pop
pop
add
and
push
movsb
test
push
adc
movsl
clc
add
and
or
sbb
push
push
sbb
shl
push
sub
push
jle
jo
lock
lea
push
and
call
or
sbb
fs
cmpsb
loopne
push
and
rclb
loopne
decb
inc
lock
mov
add
push
mov
jae
call
inc
repz
das
aaa
cld
scas
es
or
or
sti
inc
adc
mov
in
pusha
xor
mov
add
push
call
cmp
pusha
add
cmc
inc
or
das
adc
dec
fisttps
aam
loope
jne
loope
scas
loop
ljmp
push
pusha
add
inc
nop
add
and
cltd
mov
outsb
test
in
add
add
or
cmp
js
or
lret
mov
jge
lret
xchg
movsb
adc
adc
popa
xchg
je
adc
bound
rolb
adc
mov
outsl
add
popa
mov
sbb
jae
fdivrl
or
in
dec
add
insb
ja
dec
enter
mov
cmc
add
pop
mov
clc
add
mov
std
or
pavgb
xlat
loope
jbe
jo
lea
sub
es
pusha
lods
in
loopne
ljmp
test
xchg
call
mov
dec
loop
or
xor
jb
fmull
popf
js
loope
mov
pusha
or
popa
test
call
repnz
and
and
call
dec
scas
ljmp
dec
sbbb
lret
or
ljmp
ret
or
subb
inc
xchg
repz
adc
std
mov
sub
push
or
lcall
adc
add
jb
xor
pop
push
dec
pusha
inc
icebp
sub
sbb
clc
cld
sub
jle
enter
test
loope
push
jnp
cltd
dec
repnz
push
insb
lock
les
decb
or
adc
pushf
loope
inc
add
dec
insb
jge
push
mov
pop
cld
inc
adc
pushf
adc
sbb
jl
adc
cld
ja
pop
cwtl
test
sbb
nop
pusha
xchg
pusha
dec
push
mov
inc
mov
xorb
popa
adc
or
xchg
mov
cmpsb
shlb
cmpb
and
add
loopne
aas
inc
add
inc
inc
insb
pusha
pop
sbb
pop
mov
mov
add
inc
mov
pop
push
ret
push
mov
fmuls
mov
mov
pop
incl
or
mov
loop
and
inc
loope
push
jecxz
cld
outsb
loopne
loopne
hlt
loopne
sbb
mov
test
pusha
pop
sub
je
loop
ret
pop
ret
test
insb
ja
ljmp
lods
mov
dec
jo
sub
add
test
push
add
mov
sub
je
fidivs
xchg
dec
je
addb
mov
pusha
testb
lock
jmp
and
and
loopne
je
call
call
adc
add
lea
loopne
xchg
pop
data16
andb
adc
insb
or
jbe
adc
out
test
flds
push
pop
xchg
add
or
cli
decl
dec
adc
mov
in
ljmp
pusha
cld
fildll
push
scas
mov
inc
and
mov
mov
dec
mov
mov
mov
lock
push
mov
push
jbe
and
or
jo
jb
sbb
xor
pop
sub
and
mov
sbb
xchg
les
pop
orb
fbstp
je
sbb
mov
mov
xor
add
int
scas
add
xor
js
cmp
add
mov
mov
push
jb
or
outsl
fs
cmpsl
call
lock
xor
call
jg
scas
push
inc
je
mov
pop
xor
inc
or
outsl
pushl
fs
jo
xor
mov
lock
pop
lock
xor
mov
adc
mov
jb
add
nop
pusha
mov
pop
sub
add
hlt
call
je
aad
lret
mov
mov
mov
inc
repnz
cmp
adc
cld
call
adc
decb
loope
xchg
jl
or
or
adc
push
inc
icebp
add
data16
cmp
test
jle
lcall
mov
jbe
pop
sahf
dec
popa
adc
inc
rcr
stos
cld
mov
sarb
sti
call
faddp
sarb
add
add
rol
pusha
sub
and
mov
orb
or
cs
add
add
dec
cmp
add
pushl
call
jo
sub
sub
mov
pop
test
xchg
adc
xchg
decl
jo
inc
add
in
repz
adcl
mov
je
movsb
sub
addb
gs
repz
mov
inc
xor
push
outsb
icebp
jb
or
mov
add
fmuls
je
add
jo
add
inc
lods
in
mov
mov
jp
xchg
sub
inc
jb
push
loop
sub
lea
rclb
or
mov
lock
cmp
iret
push
push
xchg
mov
cmp
push
incl
mov
or
or
pop
test
add
add
mov
pop
inc
insb
mov
pop
lods
call
xor
sub
insb
mov
movsb
push
mov
push
pop
bound
nop
push
mov
xor
or
add
icebp
and
mov
xor
cmpsb
dec
add
xor
or
lock
adc
cmp
add
xorb
clc
push
aas
lock
and
out
push
mov
adc
add
mov
jo
inc
stc
add
test
push
dec
inc
fs
jl
xchg
mov
and
pop
xorl
mov
mov
test
dec
pusha
push
mov
dec
or
jmp
cmpsb
mov
data16
push
pop
call
push
push
mov
stos
mov
or
and
je
lock
lea
mov
stos
repz
into
cld
inc
incl
cwtl
pop
or
add
or
pop
outsb
jl
and
add
or
mov
pusha
js
mov
push
dec
pop
jo
mov
jo
jg
or
sbb
test
adc
xchg
pop
inc
mov
pop
add
or
push
pop
jo
mov
lret
push
hlt
dec
push
lcall
push
jbe
int3
inc
inc
add
leave
fs
loope
xor
xchg
xor
cs
cmc
icebp
pop
gs
mov
adc
dec
inc
lcall
mov
call
test
or
mov
fmuls
arpl
add
xor
add
loopne
or
jo
jmp
xchg
add
cmpsb
sbb
sbb
or
adc
sbb
rcll
push
jmp
mov
adc
sbb
ss
sbb
mov
jecxz
cmp
clc
lcall
and
xor
xor
push
inc
jno
cmpsb
add
ljmp
add
dec
aam
jne
push
jb
inc
roll
add
inc
adc
add
mov
cli
adc
shr
xor
mov
je
push
mov
xor
in
insl
inc
add
inc
adcb
jmp
addl
mov
mov
sbb
pop
icebp
scas
cmp
call
pop
pop
pop
add
popa
push
add
out
mov
mov
add
cli
insb
mov
push
inc
add
repnz
fildll
test
lea
shr
clc
pop
insl
jmp
mov
sbb
shrl
inc
loopne
push
and
repz
xchg
lcall
lock
add
in
push
clc
and
jno
push
mov
daa
ret
inc
add
fisttps
call
andl
add
mov
inc
ja
lock
add
js
jle
js
cli
fistps
jb
ret
xor
inc
lock
pop
sahf
test
insl
hlt
verw
add
mov
mov
loope
ret
jo
and
je
test
dec
add
ret
incl
sub
stos
xor
mov
ret
cwtl
jnp
sbb
rclb
ret
mov
call
clc
and
or
adc
cwtl
out
adc
add
xor
pop
push
inc
jo
mov
mov
mov
jg
lock
lock
inc
xor
mov
decb
push
jae
add
cwtl
cmp
test
fdiv
cmp
stos
rolb
je
xchg
in
jmp
clc
test
push
inc
rorb
idiv
out
sbb
jo
add
into
pop
mov
jo
xchg
mov
xor
xor
mov
adc
or
and
test
les
stos
or
mov
shlb
fwait
push
xor
add
dec
sub
aam
add
mov
test
jb
ja
push
psubsb
mov
jle
adc
sbb
ljmp
xor
lea
out
mov
pop
xchg
inc
jno
xor
pop
and
mov
push
push
push
je
mov
add
roll
outsl
aam
pop
cmp
xor
pusha
adc
or
fs
push
adc
outsb
loop
addb
and
jge
jbe
rol
push
cmp
aaa
or
adc
cmp
sub
pushf
mov
adc
fdivrs
mov
sub
push
lret
xchg
mov
adc
in
add
fistps
mov
add
inc
jge
inc
xor
or
pushf
push
arpl
loop
mov
jo
pop
test
int3
push
pop
sub
inc
sahf
push
lock
xor
inc
loop
int
nop
push
mov
jns
xchg
pop
lods
adc
in
lds
pusha
je
cwtl
jle
xchg
adc
inc
adcb
scas
insl
mov
pop
xorl
les
inc
movb
jbe
sub
jbe
jo
lcall
in
sbb
xchg
cmp
aam
add
push
cmp
pop
xchg
jo
xlat
dec
inc
push
idiv
pop
in
add
insb
std
add
inc
pop
call
insb
inc
jp
lahf
adc
mov
jmp
push
push
adc
andb
out
mov
arpl
adc
jne
cmc
mov
xchg
adcb
and
mov
add
lahf
adc
pop
xor
inc
js
mov
lock
sub
sbbl
test
inc
xchg
add
or
inc
leave
mov
out
lock
imul
jne
mul
call
je
dec
pop
subb
or
push
movsl
jno
xor
pop
fwait
add
es
std
pop
nop
out
push
call
testb
pusha
push
xor
subb
addr16
xchg
pop
mov
dec
jb
push
jle
push
fscale
frstor
ret
sub
mov
mov
andl
inc
enter
push
inc
insb
rcrb
jecxz
cmpsb
push
sbb
pushf
inc
inc
repz
and
das
out
int
cmp
das
jbe
das
movups
das
sub
or
push
push
arpl
scas
push
inc
dec
jae
dec
jl
push
sbb
lea
lock
call
mov
sti
or
shrb
out
cmp
rolb
add
mov
roll
add
popa
sbb
add
pop
mov
pop
jmp
rclb
sbb
sub
jecxz
add
xor
cmp
jbe
xchg
subb
outsb
test
ss
aad
sub
ret
or
mov
test
mov
mov
sbb
inc
into
loopne
and
js
adc
sbb
jmp
daa
ret
call
xchg
rorl
loope
loop
jmp
or
push
sub
in
sahf
inc
sarb
cmp
add
add
aad
call
pop
ficoms
shrb
leave
mov
lret
sahf
jmp
or
xchg
sbb
rclb
sbb
adc
pop
movsl
pop
int3
and
add
jmp
adcl
or
sbbb
je
mov
test
push
insl
jmp
and
lea
pusha
mov
cld
xlat
call
push
js
mov
rolb
call
xchg
mov
add
dec
pop
pop
lret
inc
es
or
pusha
daa
jmp
into
mov
pop
sub
aaa
pop
ljmp
iret
test
bound
mov
add
push
pop
add
notb
mov
pusha
or
push
jbe
test
adc
jge
dec
xchg
mov
jmp
pusha
hlt
loopne
pop
add
adc
cs
and
jmp
data16
sub
std
mov
add
add
inc
push
int
insb
andl
or
and
xchg
pop
pop
call
push
jbe
xlat
add
fmull
jb
and
cmc
push
bound
fsubl
lock
dec
fs
sub
mov
or
sbb
pop
mov
push
repnz
cs
push
or
dec
fmuls
xchg
inc
data16
dec
push
or
and
les
jb
jbe
push
adc
add
loopne
dec
inc
pop
mov
popf
push
out
or
and
sbb
add
xchg
loop
loopne
push
imul
jmp
push
pusha
push
fs
and
sub
mov
mov
popl
bound
jle
dec
cld
pop
sub
outsb
pop
or
mov
and
fldt
js
or
and
and
push
loopne
loopne
test
sub
call
and
add
pushaw
jp
shlb
adc
mov
lcall
inc
mov
adc
loop
mov
loop
pusha
or
sub
inc
popa
cli
cmp
cmp
imul
popa
push
loopne
arpl
das
adc
pop
stos
sbb
mov
or
imul
xlat
je
or
imul
add
bound
mov
sarb
lock
cmp
jle
idivb
cli
or
insb
lret
sti
call
lret
lcall
sub
add
js
fimuls
call
enter
inc
js
lret
add
mov
es
xchg
or
mov
sub
xor
adc
sbb
sbb
add
cltd
mov
inc
and
sbb
adcb
lods
lds
mov
sub
fisubl
out
stc
call
adc
xor
jne
xor
add
xor
inc
ja
ds
decb
jb
pop
sub
mov
push
mov
push
rorb
aam
sub
dec
add
jae
push
test
sti
add
mov
push
sbb
dec
lret
inc
cmp
data16
sti
data16
call
mov
and
js
dec
pop
scas
add
xchg
lock
loope
xchg
or
mov
xorl
inc
das
add
pusha
push
push
sahf
pusha
mov
inc
push
ljmp
loopne
imul
xchg
mov
and
adc
out
push
clc
rol
push
push
lcall
cmp
decl
jne
xor
push
loopne
adc
add
push
push
fisubs
and
or
or
mov
pop
inc
jecxz
add
and
pop
lcall
lock
mov
push
idivb
xchg
sbb
mov
cmp
ret
sbb
loopne
or
in
add
clc
fnsave
bound
loopne
push
test
add
add
jae
daa
dec
test
test
je
xorl
test
les
push
fists
pusha
adc
xor
add
mov
mov
cmp
add
test
cmp
lock
cli
push
incl
jo
or
add
push
decl
scas
push
push
cmp
pop
rorb
dec
call
cmp
push
pop
cmp
mov
pop
add
test
xchg
movl
add
jne
movsb
jle
out
sub
repnz
ja
jge
test
push
push
mov
test
or
add
mov
adc
mov
sbb
pusha
push
aas
push
inc
and
and
push
cltd
sub
loopne
push
mov
dec
dec
loope
or
andl
cmp
test
jl
pop
or
jmp
add
adc
cmp
push
mov
dec
mov
add
adc
lock
mov
lock
jg
mov
mov
jno
jbe
xlat
or
pop
adc
push
xchg
sub
jo
inc
sub
jo
sbb
sbb
fsubs
jmp
add
adc
add
movsl
add
je
jo
xor
pop
sub
push
pop
inc
stos
xchg
xor
and
dec
lret
mov
jbe
divl
or
push
stos
adc
and
or
or
dec
scas
outsl
sub
fadd
inc
and
mov
mov
push
lock
or
cmp
bound
add
push
es
popa
addps
push
jo
ja
fwait
int3
adc
jo
cmp
add
cwtl
out
aaa
jmp
bound
enter
dec
adc
pop
cltd
adcb
les
and
pop
push
loopne
mov
scas
xor
sbb
bound
push
adc
movsb
mov
cmpsb
pushf
xchg
gs
push
je
mov
or
sub
bound
push
inc
jp
and
mov
xor
test
push
add
hlt
cwtl
inc
xor
rolb
add
sbb
or
dec
scas
push
out
push
or
or
cmp
mov
js
call
sar
xchg
push
jne
cmp
roll
xor
adc
cmp
insl
mov
outsl
call
pusha
push
cld
jo
sub
jl
sub
xchg
push
or
sub
push
sahf
sub
dec
jo
hlt
push
push
out
cmpsb
pop
cmp
mov
mov
insb
sub
or
and
xchg
mov
inc
loop
push
repnz
jge
add
pop
cmp
mov
jne
call
adc
mov
or
clc
das
push
dec
push
or
lea
mov
add
add
cli
or
mov
ja
mov
dec
cmp
loopne
test
mov
mov
push
and
inc
sti
or
mov
push
xor
adc
inc
add
push
mov
cld
push
mov
add
pushl
or
sbb
mov
adc
push
mov
cwtl
andb
jb
sbb
insl
jmp
and
and
jno
cmpsl
ljmp
cmp
cmpsb
addb
ret
push
push
xchg
push
jo
pop
push
clc
jo
push
test
mov
je
inc
xchg
add
adc
add
mov
cltd
jo
aam
xor
push
mov
and
pusha
or
jo
push
mov
cmp
lock
mov
pop
add
dec
fidivl
pop
in
xchg
lods
mov
mov
sbb
outsl
and
mov
add
sub
push
xor
and
ret
or
jno
mov
mov
add
xchg
shlb
call
dec
rorb
or
and
aad
dec
sub
fidivs
xchg
repz
cli
mov
ret
jb
loopne
sahf
cmp
int3
and
xor
push
or
xor
jmp
xorb
sub
sbb
das
add
mov
addl
je
mov
popa
nop
mov
cmpsl
xchg
addl
lock
icebp
pop
xchg
decl
jecxz
pop
icebp
cmp
repnz
clc
cmp
adc
xor
dec
cld
mov
xor
test
jo
push
out
pop
aad
xor
add
clc
cmc
dec
xor
adc
pop
mov
subb
cld
popf
mov
mov
mov
pop
pop
in
adc
test
jns
out
repnz
negl
adc
or
cli
pop
mov
pop
mov
xor
mov
shlb
cli
outsl
bound
pop
icebp
sbb
push
outsl
mov
push
cld
mov
push
sbb
push
dec
push
sbb
hlt
push
push
ljmp
sbb
dec
jl
mov
lods
lock
jge
stos
fmuls
lahf
mov
sbb
mov
adc
dec
push
rol
xchg
scas
sbbb
or
pop
xor
stos
in
or
pop
jmp
fwait
lock
cmovbe
je
xor
xor
mov
dec
incl
push
mov
xchg
stos
push
xor
and
cmpb
add
cld
dec
push
stos
add
mov
in
pusha
push
fcoms
sbb
outsb
loopne
inc
jecxz
sbb
test
xor
dec
pop
ficomps
xchg
je
push
and
fsubrl
test
das
xor
test
xor
call
xchg
mov
inc
jno
jmp
je
jmp
data16
es
push
fsubrl
lock
push
jo
jg
frstor
jb
adc
adc
adc
cmc
push
add
das
push
jnp
lea
dec
shlb
sub
or
adc
sub
lock
mov
jb
add
push
push
leave
sbb
and
inc
xor
inc
call
mov
or
mov
leave
pop
mov
mov
decl
sahf
jno
test
mov
dec
add
pop
test
loop
push
pop
inc
push
mov
xor
xor
divl
icebp
orb
xor
push
pop
adc
test
mov
xchg
adc
adc
jns
and
or
scas
call
cld
mov
mov
ds
cmp
add
pop
xor
call
and
add
mov
jg
xor
sbb
fwait
clc
push
gs
mov
or
lock
pop
add
xchg
scas
push
ss
pop
test
jne
cmp
mov
and
xor
push
pop
outsl
pop
add
fs
hlt
decl
push
jne
data16
sbb
adc
mov
inc
adc
fidivrs
test
pusha
pop
or
loope
cwtl
hlt
push
aad
enter
push
push
fnstcw
cmp
or
lods
pop
cwtl
pusha
push
mov
inc
and
out
mov
int3
adc
es
test
inc
sti
popa
jl
clc
cli
jb
xor
ret
add
insl
shll
and
mov
dec
sarb
xorl
call
out
sub
enter
cli
dec
add
pushf
add
pushf
push
pop
movsb
inc
adc
sbb
hlt
subl
inc
fistps
lock
inc
movsb
adcb
and
fisttpll
lods
test
xor
inc
outsb
es
jg
mov
cmp
sub
lea
dec
pushl
push
and
ficompl
adcb
cld
adc
sarb
sbb
mov
sbb
fcomp
jmp
inc
sbb
or
add
mov
mov
sti
aas
push
xchg
add
pop
pop
test
insl
push
push
adc
sbb
push
jmp
add
adc
sahf
cmpsb
adc
mov
lods
or
lock
push
pop
rcrb
mov
cld
xorl
sbb
je
add
adc
adc
loop
movsb
pop
fcmove
daa
dec
push
mov
and
dec
testb
mov
je
dec
add
or
or
pop
adc
outsb
and
shll
sbb
push
add
add
jl
mov
mov
push
cld
rcll
add
dec
or
add
data16
add
inc
push
and
ljmp
inc
add
lcall
out
and
pop
cmp
call
outsl
sbb
or
inc
dec
jmp
mov
pop
adc
sbb
adc
push
ja
lods
enterw
or
test
push
push
inc
add
shlb
ja
sub
xchg
mov
or
push
pop
cld
push
mov
jb
stos
fiaddl
jb
shlb
jmp
dec
jne
cmpl
in
adc
adcb
shlb
push
in
or
push
sbb
mov
inc
cwtl
test
sbb
ljmp
out
pusha
ret
sub
addl
xor
push
adcb
js
cmp
lea
xchg
jl
out
stos
and
or
imul
inc
pop
adc
jp
push
add
add
fmul
enter
aas
add
hlt
push
push
rcll
jbe
jmp
sbbb
add
add
int
ss
mov
inc
xor
adc
ja
mov
mov
sub
std
pushl
xchg
stos
aam
jne
mov
pop
push
and
add
ja
and
stos
or
or
test
add
or
sub
leave
shlb
xchg
xor
pop
cmp
rolb
mov
into
rcrb
push
lret
and
pusha
jb
push
mov
cmp
inc
mov
pop
dec
bound
adc
inc
mov
and
push
in
push
pop
cmp
loopne
or
or
in
arpl
xchg
addl
mov
lock
pop
xchg
mov
addl
add
movsb
mov
push
cmp
dec
decb
pusha
scas
pop
pop
imull
xchg
adc
jp
cltd
pop
data16
pop
jne
fcmovbe
cli
jg
inc
mov
sti
pop
add
sub
or
push
add
or
lock
lea
mov
mov
ficomps
sub
andl
adc
insl
je
inc
scas
mov
sbb
adc
loopne
test
add
add
loopne
pop
clc
pop
pusha
or
sbb
nop
push
mov
jle
clc
adc
je
pusha
push
sbb
in
push
sbb
rolb
and
push
loop
jne
cmp
jo
push
mov
add
pop
add
or
add
test
mov
xchg
iret
mov
scas
mov
xchg
or
adc
imul
pop
loopne
jecxz
pop
outsb
mov
jo
sub
mov
jmp
movsl
lea
sahf
insb
test
jg
or
mov
and
movsl
mov
lret
loope
hlt
mov
mov
sti
jle
mov
cli
sub
lods
js
scas
sbb
jl
sbb
lock
add
test
xchg
add
cmp
cmp
jg
or
pusha
frstor
testb
popa
loope
pop
mov
or
bound
or
cld
pop
es
sbb
xchg
pusha
mov
in
subl
mov
xlat
xchg
dec
sarb
sbb
jge
pop
sub
outsb
add
loopne
xchg
cmp
mov
and
add
jne,pt
add
jbe
sub
cmp
int3
mov
add
cmp
cmp
sbb
cmp
loope
test
in
xlat
stos
dec
mov
inc
lea
xchg
fsubs
mov
rcrb
loop
or
test
dec
in
addb
out
and
clc
mov
add
add
leave
popa
sahf
adc
std
imulb
jl
pslld
cld
dec
xor
cmp
stos
shll
xchg
pusha
push
mov
xchg
adc
sarl
mov
push
fisttpl
jo
andb
sub
fbld
rclb
add
adc
inc
sub
inc
hlt
loope
pop
jecxz
jl
add
lock
das
jl
mov
je
in
lock
rol
push
push
inc
add
push
add
xor
adc
pushf
shlb
adc
in
lds
sub
dec
jp
pop
adc
or
test
xor
pop
fsubrs
push
add
push
icebp
jg
add
addb
xchg
lret
loop
mov
dec
stos
adc
jle
call
dec
push
movb
mov
mov
inc
popa
sbb
rolb
je
fwait
outsb
push
sub
rcl
stc
add
inc
test
pop
fsts
shlb
or
pop
lret
jecxz
push
add
dec
jbe
les
movsb
aad
test
inc
ss
push
or
sbb
jl
roll
je
fdiv
dec
pop
or
adc
shrl
mov
push
mov
in
jmp
or
pop
jno
mov
pop
sbb
add
fdivr
mov
add
jecxz
inc
sbb
cmp
test
dec
adc
ljmp
push
punpckldq
xchg
dec
je
jg
out
jne
push
xor
scas
or
add
and
mov
sbb
jg
add
or
aam
add
xor
mov
ret
push
inc
fistl
and
adc
lret
rolb
xor
clc
cld
je
adc
push
sub
mov
lock
inc
fistl
std
mov
jae
and
dec
inc
mov
data16
addb
pushl
inc
and
scas
dec
mov
rol
or
push
mov
push
jb
pushf
and
push
sarl
jecxz
call
lea
sub
add
mov
mov
xor
pusha
and
xchg
jb
test
lock
add
mov
xorl
scas
inc
adc
xor
push
in
pop
cwtl
js
hlt
fisttps
lock
subl
add
adc
and
xor
xor
push
jmp
push
or
stos
and
clc
or
xorl
pop
sub
sarb
je
add
test
jne
stc
data16
je
pop
and
in
push
cmp
jae
dec
icebp
inc
or
inc
hlt
push
icebp
xchg
lods
lock
mov
fwait
cs
inc
or
sub
pop
jne
inc
and
adc
mov
mov
or
ds
jecxz
dec
pop
mov
jg
mov
push
inc
jb
insl
sbbb
test
sub
push
add
mov
pop
pop
xorb
call
sbb
sbb
loope
out
lea
test
mov
aad
test
xor
outsl
pusha
add
fistpll
mov
pop
push
je
mov
add
lret
or
or
movsb
out
jo
jo
test
dec
pop
dec
adc
jae
inc
sbb
add
xor
push
call
lock
test
pop
mov
mov
ss
add
xor
pop
mov
and
xor
call
xor
xchg
mov
into
call
add
repz
int3
in
sbb
scas
dec
nop
add
outsb
or
inc
add
ljmp
outsb
cmp
pop
fs
fldt
and
or
adc
push
stos
pop
shr
or
sbb
push
jo
sub
mov
inc
sbb
inc
sub
in
xor
or
cmp
or
and
outsl
aam
adc
scas
lea
scas
call
and
incl
sub
jmp
mov
inc
fstpt
push
or
inc
pushl
mov
inc
or
ret
push
stos
mov
fisttpl
and
push
ds
sar
sbb
inc
jl
xor
or
movsl
and
cs
pusha
sbb
add
push
dec
int3
and
pushf
or
push
adcb
pop
and
add
push
mov
mov
orb
adc
test
in
rcll
or
mov
xor
pop
jo
sub
push
inc
imul
and
pusha
popa
xchg
dec
jp
jno
lret
out
outsl
adcl
sbb
jae
rcll
pop
mov
mov
xchg
sbb
add
fdiv
mov
stc
inc
mov
inc
dec
test
scas
add
adc
jno
mov
loop
dec
sub
std
jb
adc
mov
hlt
pop
add
pushf
inc
xor
and
js
fisubs
and
icebp
adc
add
and
mov
push
add
sahf
or
mov
insb
adc
jae
ljmp
xor
mov
andl
inc
push
daa
es
fsubs
lret
clc
daa
add
mov
push
outsl
sbb
nop
add
ret
enter
mov
jno
push
pushf
lock
je
leave
or
mov
mov
xorb
lret
lcall
orb
dec
push
mov
mov
out
mov
test
or
jp
cltd
push
faddl
mov
push
mov
lea
jbe
and
imul
aam
jo
fwait
add
aam
divb
call
and
lock
call
outsl
in
pop
mov
cmp
add
inc
stos
adc
js
inc
and
mov
mov
xor
adc
add
jp
shll
mov
mov
icebp
mov
push
inc
icebp
add
xor
hlt
bound
cmp
or
cmp
or
outsl
jo
jo
mov
test
cld
loopne
lock
int3
enter
imul
test
inc
lret
pop
test
ss
andl
inc
xchg
enter
mov
jnp
or
sbb
jg
pop
xlat
xor
je
cmp
mov
mov
cmp
jle
cmp
mov
lods
sub
rclb
aas
ret
jp
aad
adc
push
xor
fsubr
stos
mov
dec
mov
xor
push
lock
mov
jl
lret
xchg
add
pop
mov
xor
add
adc
inc
add
push
dec
fs
push
es
lret
jne
incb
pop
mov
sbb
push
add
das
push
insb
mov
repz
or
mov
jo
rorb
inc
add
dec
jmp
arpl
cmp
xor
stos
cmp
jmp
jo
push
or
inc
pop
hlt
jo
jne
mov
es
mov
mov
mov
cmp
xor
das
shlb
inc
mov
test
insb
add
clc
inc
sub
aas
in
push
hlt
out
ret
pushl
outsb
scas
and
adc
enter
inc
xchg
icebp
call
add
cmp
out
add
in
dec
insb
shl
ljmp
cmp
add
add
and
add
test
mov
xchg
aad
mov
push
mov
fadd
mov
out
aaa
stos
outsl
stos
xchg
ret
adc
sbb
mov
cmpsl
bound
lcall
pop
sub
xchg
inc
ljmp
sbb
and
pushl
cmpsb
mov
cmpsl
mov
test
add
sti
fldt
loopne
lock
ljmp
adc
jg
pushw
mov
xor
loopne
mov
cwtl
pushf
and
mov
in
jnp
adc
addr16
dec
fdivrl
fsubrs
or
insb
fldt
outsb
cld
rorb
mov
outsl
mov
test
jecxz
adc
pop
cmp
scas
sub
ja
mov
inc
push
or
add
push
push
cwtl
sahf
sub
jecxz
in
jmp
mov
sti
je
test
dec
outsb
and
sbb
sbb
adc
or
pop
xchg
pop
popl
and
xor
inc
add
aam
mov
pop
add
push
test
test
movsb
lea
lds
frstor
push
or
ss
les
pop
xchg
push
in
insb
mov
mov
cmp
stos
es
stos
xor
cmpsb
loopne
in
shlb
loope
mov
dec
xlat
and
add
inc
call
insl
add
sbb
adc
dec
adc
push
js
mov
in
lret
cltd
sti
repz
and
mov
adc
push
xor
inc
scas
call
inc
add
adc
xchg
mov
lret
or
es
imul
push
cmpsl
les
cmp
sub
mov
jbe
mov
sub
jb
jne
adc
xchg
jbe
jo
and
pop
call
add
jne
jmp
sub
jecxz
push
add
pop
xchg
incb
orl
and
je
mov
fs
mov
push
lock
aaa
push
pop
lret
mov
inc
dec
push
sti
daa
add
inc
imul
ss
mov
and
sbb
inc
xchg
adc
add
mov
jb
sbb
xchg
adc
insb
loopne
shl
pusha
sub
in
cmp
orb
or
and
mov
or
xchg
adc
lea
or
add
sti
jbe
ret
push
cld
lods
insb
adc
out
inc
xchg
cmp
jg
outsb
push
test
ds
mov
push
mov
mov
push
pop
inc
or
and
cpuid
dec
jmp
xchg
dec
sbb
jns
rorb
outsl
ret
adc
addb
push
decb
loopne
jb
xchg
outsl
lea
inc
roll
jb
aad
add
std
adcl
out
add
js
sub
mov
outsl
push
rcrb
lret
sbb
push
adc
dec
test
mov
cmp
xchg
rorb
push
adc
cs
test
pop
std
rclb
push
mov
add
mov
add
lret
push
daa
jp
add
jp
ljmp
rclb
cs
sarb
pop
cli
mov
add
dec
mov
ret
std
push
std
pop
xchg
out
mov
inc
push
jecxz
xchg
push
push
xchg
test
mov
outsl
inc
leave
dec
iret
or
jb
and
pop
lods
mov
idivl
gs
add
lock
cmp
sti
cmp
adc
pop
and
in
outsl
and
dec
mov
or
dec
pop
cmp
adc
stos
test
inc
aam
inc
sahf
in
push
push
out
xchg
pushf
sub
pop
repz
sub
push
push
dec
push
mov
and
sbb
adc
bound
rcrb
movsb
cmp
int
pusha
ds
icebp
mov
cld
and
loopne
lods
popa
in
das
and
push
jmp
jb
inc
sbb
sub
jle
add
popa
pop
sub
ds
or
stos
mov
lock
mov
adc
jmp
mov
pop
sub
call
lock
test
adc
aas
jne
inc
or
xor
pop
add
inc
and
outsl
add
fwait
push
addb
aam
or
ljmp
inc
pusha
jns
clc
pop
sar
inc
aas
cmp
pop
or
loopne
sub
adc
pop
jge
loopne
mov
jecxz
lock
mov
mov
stos
dec
xchg
loopne
test
pop
xor
push
lcall
mov
lahf
loopne
popa
pop
lret
sahf
push
jb
dec
push
or
pop
clc
loopne
push
push
orb
movsb
mov
push
adc
xor
add
addr16
jg
out
pusha
fwait
adc
data16
outsb
inc
mov
fmull
pusha
jl
bound
mov
xor
cmp
nop
push
bound
lods
mov
push
add
or
lods
mov
pop
add
push
loopne
aam
mov
pop
pop
loopne
call
clc
aaa
mov
out
call
jle
jmp
xchg
pop
pusha
adc
push
sub
adc
popa
stos
mov
lea
iret
loopne
mov
cmp
jmp
push
ret
dec
xor
mov
ja
inc
jp
call
inc
popa
nop
loope
call
ficomps
call
add
cwtl
or
fdivs
jae
add
add
jp
add
dec
jb
mov
pop
das
or
ret
xchg
call
inc
or
add
es
inc
add
cmp
mov
push
mov
loopne
push
mov
cmp
movsl
add
pusha
mov
pop
ret
loope
cmpsb
pusha
jecxz
or
mov
in
shrb
push
push
mov
pushf
lods
sbb
call
inc
push
or
nop
mov
cmp
add
mov
adc
push
loop
xchg
negb
lea
push
nop
call
clc
pop
es
mov
setne
jle
in
cwtl
pop
jno
gs
push
push
test
jo
loopne
and
loopne
dec
cwtl
add
mov
js
add
dec
inc
add
sbb
lcall
popa
nop
mov
mov
mov
call
push
arpl
sub
ret
add
adc
scas
fcoml
jmp
push
mov
fidivrl
push
adc
mov
rcll
inc
inc
mov
push
mov
arpl
daa
mov
hlt
mov
sbb
inc
cli
fsubs
jmp
mul
push
jb
mov
or
in
loopne
leave
rclb
sub
pusha
arpl
dec
add
cmp
cmp
jle
arpl
inc
sub
shrb
leave
cmc
pop
add
fcmovbe
test
pop
and
adc
repnz
or
pop
cwtl
test
add
mov
dec
lock
sub
sbb
call
inc
adc
mov
xor
sub
data16
dec
negb
in
fwait
sub
popa
aas
into
lock
cmc
data16
xchg
add
jp
dec
pop
sub
adc
verw
lock
xor
clc
dec
or
cld
push
push
xchg
ret
add
and
ljmp
ljmp
das
je
test
sub
mov
movsb
icebp
fisttpll
stc
clc
adc
add
adc
icebp
cmpb
jo
test
push
add
call
add
lea
test
xor
mov
aaa
add
or
cmc
mov
lock
jp
mov
shr
ljmp
add
jp
aaa
test
mov
mov
add
mov
and
mov
adc
faddl
pop
mov
jo
jecxz
push
ret
outsl
mov
pop
lock
xor
add
jl
add
pushl
adc
sbb
lock
pop
pop
bnd
clc
cld
jmp
mov
daa
lods
je
and
mov
or
push
mov
and
scas
adcb
mov
sbb
movb
mov
rcrb
ja
xchg
dec
mov
fnstsw
enter
adc
xor
inc
add
lock
adc
lcall
cmp
pop
sbb
mov
mov
xchg
inc
xor
cld
jg
and
adc
inc
ljmp
lcall
stos
or
loop
xor
lock
test
lock
xor
aas
sub
mov
or
das
jl
jne
add
mov
mov
cmp
decl
call
add
lods
add
cmp
push
decb
mov
outsb
push
and
sub
xor
loop
jg
in
xor
mov
jo
inc
add
xchg
xchg
jnp
push
addb
push
mov
hlt
push
jl
adc
add
or
and
cmpsl
xchg
pushf
call
and
push
xchg
add
movsb
adc
sar
rcl
stos
jb
mov
jle
icebp
mov
mov
mov
mov
scas
add
adc
rclb
add
dec
xchg
xor
xorb
dec
clc
or
out
cmpsl
movsl
inc
adcb
push
pop
mov
inc
mov
add
imulb
mov
cli
xchg
or
pop
sbb
pop
lods
ja
icebp
jbe
jno
jle
xchg
add
hlt
lea
mov
in
mov
and
and
push
call
xor
pusha
pop
js
mov
pop
mov
push
push
lea
jno
call
aaa
aad
or
add
mov
test
adc
lock
cmp
flds
data16
add
mov
leave
xor
jo
push
push
je
mov
sub
add
pop
loop
incb
add
jo
add
cmp
push
lds
xorb
loop
jmp
push
aam
or
add
mov
mov
add
fstpt
sub
add
sub
lcall
jnp
mov
sbb
mov
push
fistps
inc
jl
lock
sub
xor
add
mov
repnz
and
jno
inc
mov
icebp
sub
call
jne
cld
jecxz
rolb
mov
sub
pop
or
js
div
imul
icebp
shl
and
loopne
sub
jne
mov
jmp
test
pop
icebp
push
xor
dec
pop
pop
xchg
and
lock
fs
mov
inc
sarl
xchg
fs
jb
inc
call
adc
test
mov
push
hlt
out
cli
inc
mov
and
push
mov
int3
pop
fld
daa
push
xchg
push
inc
xor
lea
adcb
lret
push
aad
mov
adc
pop
mov
mov
pushl
sub
mov
jo
mov
call
test
mov
mov
ret
sub
jae
add
sbb
rcrb
negb
test
or
inc
mov
cmp
jg
jne
mov
xchg
push
out
xor
adc
xor
push
jo
cmp
xor
pushf
inc
lock
rclb
or
ss
pushf
pop
mov
test
pop
dec
sbb
push
jb
jbe
pusha
lea
test
addb
hlt
fld1
sub
xor
pushf
xor
adc
and
jnp
pop
scas
js
andb
and
dec
xor
daa
push
xor
lock
je
jl
xchg
cmp
test
movsl
clc
aam
out
add
inc
fwait
pop
les
jge
mov
shrb
mov
push
add
inc
push
xchg
clc
and
xor
mov
enter
pop
add
xchg
jo
loopne
iret
sub
jge
test
jo
scas
inc
xor
mov
ljmp
and
dec
call
dec
cli
jno
mov
cld
mov
sub
xor
jns
mov
jl
adc
cwtl
call
add
pop
call
adc
mov
ret
orb
dec
mov
or
cs
stos
fiadds
push
add
add
xchg
or
jle
divb
cmp
shll
loopne
mov
lock
add
rclb
add
adc
hlt
pop
jnp
mov
pushl
pusha
rclb
cmp
in
cmp
dec
hlt
xchg
sbb
or
push
shrb
adc
cmc
push
rol
inc
loopne
push
in
cs
out
pop
sahf
or
jae
push
add
lods
add
push
sub
sbb
mov
xor
mov
jae
mov
jb
cmpsb
jbe
mul
add
jno
mov
rcll
fcoml
jmp
adc
jnp
ja
sub
pop
sti
scas
dec
mov
test
call
xor
nop
mov
push
nop
hlt
fiadds
call
pop
fsubrl
or
popf
and
sbb
push
add
lock
and
jb
xor
push
push
jp
hlt
lcall
jno
je
dec
mov
andb
lds
push
and
or
cli
repz
aam
nop
shrb
add
push
mov
std
fisttpl
outsl
pop
pop
pop
scas
mov
and
adc
adc
out
xor
pop
adc
pop
mov
cltd
inc
xor
dec
jp
xchg
test
pop
pop
or
loopne
adc
cmpsb
outsl
decl
mov
sub
dec
add
movl
jae
enter
mov
aas
bound
xor
lret
xchg
jmp
xor
mov
mov
push
or
or
rorb
adc
and
shlb
cld
lods
add
popa
das
enter
push
pop
in
push
xchg
add
clc
lods
adc
ds
inc
inc
test
popf
fs
or
mov
inc
fistpl
dec
je
cld
jge
outsb
adcb
scas
xor
test
xor
adc
adcb
sub
push
lods
lret
inc
loopne
loope
sub
sub
add
roll
jmp
movb
or
cmp
test
cmpsl
insl
loopne
in
xchg
mov
xchg
icebp
fdivl
insb
shrl
and
push
test
push
mov
test
add
adc
add
jl
popa
inc
js
cli
aas
hlt
mov
xorb
add
cmp
and
lds
push
and
orb
adc
subb
push
xchg
mov
dec
cld
dec
rcrl
inc
imul
dec
pop
subb
push
sub
mov
aam
adc
push
inc
lret
or
and
mov
jbe
push
or
sub
outsl
xchg
aam
ficoml
call
or
pop
das
call
inc
mov
test
adc
dec
jle
and
adc
add
shlb
xchg
call
sbb
cld
pop
lds
sbb
daa
je
push
and
gs
js
es
movsl
rcrb
jo
jae
mov
or
push
xor
xor
pop
hlt
dec
sbb
jo
add
mov
div
push
mov
push
stos
fwait
or
or
add
call
rorb
xor
je
adc
loopne
ret
jl
ficoml
dec
repz
dec
push
insl
stos
jl
inc
xor
mov
add
lods
scas
dec
call
mov
push
fdivrp
or
fidivl
clc
popa
push
add
rorl
or
rorb
add
jb
sub
mov
sub
pop
pop
push
or
push
or
or
mov
mov
pop
mov
fiadds
push
movb
adc
xor
mov
popa
and
push
sti
jge
in
bnd
aas
inc
push
je
sbb
sar
aam
sub
call
test
inc
dec
pushf
fwait
add
aas
cld
jg
je
push
push
cmp
popa
notl
add
pop
cmp
nop
addl
dec
stos
mov
xor
mov
add
add
push
je
adc
fs
fistl
cmp
dec
icebp
mov
push
push
add
decl
jb
mov
loop
stos
push
loope
movsl
cmp
mov
rcl
or
dec
jl
inc
mul
dec
inc
out
popa
add
in
add
add
add
jecxz
je
loope
adc
test
in
icebp
mov
pop
aas
push
inc
aad
mov
jo
test
adc
pop
adc
mov
inc
mov
push
ficomps
and
sbb
popf
fcmovnbe
pusha
and
nop
jl
add
jmp
call
xor
fstpt
fidivrs
xor
call
sub
adc
loopne
hlt
mov
rolb
rolb
jmp
mov
cmp
mov
push
sub
push
push
xor
lods
add
add
call
sbb
or
push
popa
sbb
pusha
out
push
push
shll
ret
loopne
xor
popa
pop
mov
arpl
pop
push
or
testb
ret
movsb
sub
decl
lock
mov
xor
sarb
jae
rcr
mov
push
push
jae
or
sbb
jns
inc
jb
add
mov
inc
lcall
call
loopne
loopne
jb
mov
loope
push
loopne
push
mov
jecxz
or
shlb
pop
fldl
lcall
inc
push
add
pushaw
sub
push
xchg
pusha
arpl
pusha
mov
loope
add
adcl
jae
push
fld
adc
fs
movsb
inc
or
jo
cli
outsl
jmp
push
mov
and
lcall
xchg
xchg
out
mov
shrb
add
xchg
loopne
aaa
andb
popa
pop
ror
loopne
pop
test
test
sbb
mov
in
inc
add
push
cld
loop
lea
shrb
add
fbstp
or
or
loopne
repnz
scas
push
push
call
mov
pusha
dec
test
add
icebp
push
pop
testl
sti
insb
inc
fmuls
push
xor
push
xor
sub
sbb
xor
mov
loope
mov
loopne
add
pusha
pop
adc
fistpl
adc
ljmp
push
je
sbb
jne
dec
adc
cld
adc
sbb
mov
dec
ja
push
outsb
dec
push
popa
dec
lcall
add
into
clc
mov
dec
add
pusha
jb
call
cmp
outsb
or
xchg
out
dec
adc
mov
mov
lods
call
or
cmpsb
mov
mov
mov
int
fucomi
call
fidivl
fbld
push
xchg
pop
mov
loope
movsb
outsb
or
dec
cli
inc
and
add
clc
les
fcomip
je
cmp
jle
mov
loopne
inc
add
pop
sbb
add
mov
ss
sub
je
sbbl
add
pop
ficoml
outsl
or
adc
add
adc
outsb
pusha
aaa
pop
push
mov
pop
jbe
pop
add
xchg
jmp
pop
lret
adc
ljmp
add
jmp
loopne
pop
imulb
popa
pop
push
test
les
sbb
push
add
imul
jno
je
cmp
mov
gs
push
push
imul
aam
push
or
ret
add
xchg
jo
mov
push
sbbb
xchg
loopne
or
mov
push
je
jecxz
add
lods
movsb
sbb
push
outsb
ret
mov
fucomi
jo
dec
lock
xor
jl
jo
xchg
sub
dec
pusha
addb
pop
dec
je
dec
mov
adc
add
xchg
lds
and
cwtl
jbe
inc
mov
fidivrl
push
add
jecxz
push
sub
sbb
lret
mov
mov
mov
jp
outsl
add
add
xchg
test
mov
jo
loop
pop
sbb
adc
enter
push
or
add
mov
push
add
mov
adc
add
and
ffreep
add
mov
push
inc
dec
push
and
outsl
push
pop
add
add
clc
int3
xlat
mov
mov
jmp
adc
push
jbe
mul
push
mov
and
xor
add
jo
sti
cmp
jne
push
push
add
int3
cli
sbb
or
mov
pop
rolb
les
sbb
inc
mov
dec
lds
mov
sbbb
xchg
push
or
xor
cmp
or
mov
or
test
enter
pop
sbb
jae
js
lahf
adc
cmpsb
enter
adc
clc
incl
mov
sub
sub
subb
pushl
sub
sub
push
xorps
rolb
fdiv
rcll
dec
mov
int3
add
lods
mov
in
mov
sbb
mov
xor
add
cmp
push
repnz
sub
fs
jo
and
scas
push
or
pop
pop
xorl
xor
lock
sbb
sub
divl
lock
test
add
ljmp
push
jo
ret
popl
sbb
xor
test
pop
les
lds
sbb
sub
push
jl
and
pop
dec
fcoms
jne
es
push
jmp
pop
xorl
xchg
xor
popf
pop
xchg
clc
cs
mov
and
in
xchg
and
sbb
jmp
push
jmp
or
mov
inc
adc
outsb
call
inc
adc
or
sahf
movsb
xor
mov
jmp
mov
fbld
bound
jmp
add
das
cli
dec
testb
inc
push
lock
adc
push
sti
fcomip
dec
jmp
dec
inc
sbb
int3
mov
jecxz
sub
xchg
ficoml
push
and
jmp
jo
repz
shr
and
or
in
or
cli
js
or
aas
adc
pop
cwtl
cmpsl
leave
ret
nop
stos
lahf
or
mov
ss
jnp
inc
nop
add
push
pop
dec
mov
loopne
push
inc
add
add
hlt
xor
adc
add
add
push
push
int
repnz
or
les
lea
shll
out
mov
sub
outsl
pop
mov
hlt
cmc
inc
out
movsb
cmp
dec
inc
loop
jg
add
hlt
jg
pop
adc
mov
inc
and
xchg
std
fdivl
push
add
add
pop
sub
stc
xor
cmp
jne
push
ficoml
sbb
mov
cs
jmp
mov
sub
push
xchg
xchg
out
add
add
mov
outsb
and
sub
test
pop
sti
pop
jne
fsts
fisubl
mov
jbe
add
xchg
outsl
or
cmp
add
inc
jmp
cmp
jle
or
mov
pop
out
loope
lea
mov
jp
lock
ja
add
jg
push
jo
pop
pop
ret
xchg
or
dec
fldenv
mov
adc
outsl
fcmovnb
popf
xor
jo
or
cmp
cmp
inc
ds
xor
clc
stos
movhps
cld
call
in
adc
cmpsb
dec
inc
sar
or
adc
pop
outsb
inc
or
push
test
ja
mov
add
pop
and
adc
or
mov
lods
xchg
popf
push
push
sbb
dec
dec
cmp
xchg
xchg
push
ret
sti
push
fists
mov
inc
sbb
lock
xor
ds
scas
push
fisubs
add
cmp
fdivrp
pop
adc
mov
add
lea
sub
mov
cli
cmc
jg
pop
cwtl
or
shl
lcall
clc
xor
stos
mov
loopne
cmp
jb
ljmp
lods
mov
inc
xor
leave
cmp
push
jg
test
rolb
insl
mov
mov
inc
loopne
cli
xchg
cmp
jb
sbb
and
push
push
push
jno
push
xor
inc
sbb
pop
mov
pop
inc
mov
out
js
ficomps
xchg
hlt
mov
in
jbe
call
and
mov
outsb
adc
cld
clc
add
push
sbbb
jp
loopne
cmp
sub
imul
call
mov
cmp
cld
nop
inc
lock
mov
mov
icebp
subb
fldt
lock
imul
add
insl
pop
nop
adc
mov
mov
adc
fcmovu
mov
adc
lahf
add
rolb
fs
sbb
loopne
cli
push
push
xchg
add
movsb
mov
cmpsb
xor
and
push
shrl
dec
sbb
mov
imul
mov
push
sbb
out
data16
push
mov
push
pop
je
jnp
jle
call
or
aam
movsl
push
clc
mov
mov
fstl
xchg
fsubs
jno
out
sbb
cld
sbb
iret
pop
repz
sti
sub
or
or
lods
mov
nop
jb
and
push
and
mov
cs
xor
sub
sti
jno
dec
and
shrl
push
adc
or
stos
daa
lods
mov
loopne
fdivl
lods
mov
push
and
out
jnp,pt
aam
rorb
and
pop
push
into
int3
cmp
stos
fwait
hlt
fnstenv
lock
adc
add
ja
sub
fists
ret
add
je
sbb
cs
cmp
jl
outsl
sti
es
xchg
push
add
adc
add
mov
mov
fs
xor
xchg
jne
fiaddl
push
mov
scas
xor
or
pop
mov
pop
mov
lds
ret
in
dec
pop
cmp
push
dec
add
xor
lret
push
test
lret
aas
mov
mov
add
push
inc
add
cmc
pop
dec
mov
add
lcall
dec
xchg
xor
pop
adc
dec
adc
push
pop
inc
js
or
faddl
lods
xchg
xor
scas
adc
fisttps
and
add
sub
add
outsl
outsb
push
je
lcall
and
add
jo
out
xlat
sbb
mov
ja
jne
push
pop
das
mov
push
push
jmp
push
sub
dec
jmp
pop
orb
and
xor
cmp
inc
pop
push
push
mov
dec
andb
xor
data16
dec
push
sub
or
mov
or
fs
xchg
jmp
orb
lret
or
add
scas
mov
xorb
add
hlt
mov
and
sub
fbld
push
jbe
lret
lock
idiv
cmpl
sub
add
sub
decb
addb
orl
mov
mov
outsl
xchg
sbbb
jb
mov
loope
jl
mov
cli
movb
add
push
or
inc
pop
add
inc
shlb
loope
aas
add
mov
mov
mov
lds
movsb
subb
pmaxub
mov
pop
movsb
inc
add
mov
dec
adc
push
mov
pop
push
inc
pop
inc
pop
or
addl
add
sbbl
dec
push
adc
jmp
mov
xlat
arpl
pushf
inc
cmp
xlat
xchg
mov
push
ret
rcrb
and
sub
adc
xor
call
sbb
adc
shll
jle
pusha
mov
cs
inc
mov
jo
shrb
cmp
je
je
pusha
xor
adc
push
stc
pop
mov
ds
dec
js
cmpsb
cmp
rolb
fbstp
jne
adc
or
les
out
adc
shl
mov
jle
shrb
mov
dec
rol
lcall
and
inc
add
xchg
xor
and
sbb
cmp
popa
std
imul
inc
xchg
inc
sub
or
mov
daa
inc
push
sbb
shrb
xchg
rcrb
or
inc
test
pop
jp
add
lods
sti
inc
loop
xor
jo
jle
and
rorl
adc
and
daa
sub
or
pop
pop
add
out
fs
cmp
cs
leave
inc
adc
or
xchg
dec
fdivr
xor
jl
jbe
push
pushf
push
clc
dec
jp
adc
mov
or
addr16
aas
loop
mov
cmp
cmp
lock
and
push
lahf
orl
or
subl
mov
sbb
jnp
adc
sbb
cli
xor
or
rolb
and
popa
push
pop
add
sbb
and
pop
mov
in
sbb
loop
or
mov
and
bound
xor
or
les
and
xchg
addr16
pop
jne
loope
push
daa
sbb
push
xor
jle
ds
arpl
call
jmp
movsb
loopne
mov
sub
jp
pusha
push
testl
xchg
mov
adc
adc
mov
push
and
push
mov
fdivrs
aas
aaa
cmp
fsubl
in
jmp
jp
iret
loopne
push
mov
or
add
dec
pusha
inc
inc
sbb
sub
push
test
adc
ret
mov
mov
orb
push
js
xchg
js
lock
sub
xchg
lock
add
rol
push
insb
push
push
and
movsb
xchg
icebp
xchg
jle
push
add
shr
ret
rol
and
lds
ret
add
bound
xorb
call
sub
sbb
sub
popa
sub
mov
cwtl
adc
or
and
push
nop
fiadds
call
dec
notl
test
pusha
insl
adc
pushl
pop
and
loope
adc
rorb
fistps
sbb
mov
adc
xchg
push
loope
test
inc
jne
mov
xchg
popa
pop
es
lock
nop
ret
repnz
mov
pop
dec
mov
scas
ljmp
xchg
mov
pop
fsubs
sbb
mov
jo
orb
or
mov
cwtl
repz
mov
ja
mov
dec
adc
ss
mov
in
filds
inc
cmpsb
xchg
add
cmp
add
or
pop
push
add
pop
push
loop
mov
mov
shlb
jl
out
push
call
pusha
mov
je
popf
add
clc
insl
add
pop
loope
pop
adc
ja
cmp
repnz
push
jmp
or
dec
pusha
adc
push
adc
popa
xchg
xchg
or
sbb
cmp
add
mov
paddb
call
pop
sbb
leave
push
pop
loopne
or
add
fs
daa
mov
mov
cltd
pop
pop
sub
ljmp
out
orl
sarb
and
adc
and
jb
loopne
ret
dec
adc
and
loopne
mov
or
out
and
inc
faddp
pop
add
xor
cmp
mov
je
aam
rcll
add
adc
in
in
loopne
push
add
in
jge
arpl
ret
jg
movsb
sbb
sbb
pusha
ja
mov
xor
xchg
sub
mov
add
pop
sub
and
movsl
out
test
jne
lods
fucomip
or
mov
mov
xchg
inc
push
and
sub
in
lahf
mov
ja
outsb
movsb
lret
add
movaps
fwait
sbb
add
mov
xchg
in
adc
lods
sbb
and
push
mov
xchg
out
out
and
hlt
add
shrb
ret
adc
test
cmp
pop
aaa
and
faddl
roll
add
dec
movsb
jbe
jl
ljmp
xor
std
push
pushf
sbb
jbe
adc
sub
inc
inc
and
test
and
jp
stos
roll
ret
push
ds
inc
test
lock
xor
jo
loop
mov
adc
sahf
push
orl
mov
test
cwtl
jo
mov
push
dec
jmp
push
jecxz
nop
push
jbe
ljmp
jg
and
lret
enter
adc
aaa
addl
mov
xor
and
loop
mov
inc
out
icebp
outsl
je
adc
pop
cmp
test
out
je
xor
fmuls
dec
and
enter
xchg
push
cld
enter
aaa
jmp
xchg
xor
jbe
adc
cmc
mov
adc
jg
rep
jecxz
or
adc
shll
bnd
xchg
xchg
push
xchg
ret
jo
call
add
test
shr
add
lods
in
jb
add
cmc
daa
or
xor
test
xor
push
jo
mov
jns
adc
mov
dec
jl
mov
lret
inc
mov
sub
lock
ret
loope
sbb
and
int
ret
repz
or
adc
pusha
mov
lods
inc
xor
bound
pop
sub
lock
sbbb
movsb
clc
popa
add
jmp
push
mov
movsb
push
xor
push
lock
gs
pop
rclb
dec
and
mov
ljmp
inc
adc
js
push
out
xor
push
xlat
xchg
mov
movsb
sar
or
or
push
stos
inc
xchg
fisubs
jle
push
xchg
das
push
in
loope
add
push
mov
lock
dec
cmp
mov
cmp
lock
pop
cmp
enter
ret
jo
cmp
mov
or
xchg
or
dec
hlt
add
cmp
test
and
dec
fwait
inc
stos
adc
xchg
das
add
xor
add
xor
mov
push
in
or
clc
push
push
call
mov
jbe
adc
and
push
adc
cmpxchg
xchg
addl
dec
loope
lock
mov
jb
jmp
das
adc
repz
jecxz
call
inc
pop
imul
mov
ljmp
pushf
clc
push
xor
inc
push
push
push
pop
inc
mov
jbe
movsb
jno
jo
xor
jbe
sbb
push
jl
inc
inc
lock
icebp
or
jecxz
inc
add
mov
rcrb
int3
mov
stos
out
cmpsb
xchg
in
jbe
and
sub
or
fcoml
jp
loop
add
dec
imul
aaa
dec
add
outsb
push
aam
loopne
rcl
push
ret
xchg
test
dec
pop
cmp
xor
mov
mov
cmp
or
sarl
mov
inc
loop
cli
adcl
test
sub
pop
shrb
push
mov
fcoms
std
sbb
dec
inc
cmp
test
clc
jg
fisubrs
add
lock
adc
xor
ret
cmpsb
sub
ja
icebp
adc
xor
jb
outsl
push
add
pop
outsb
sbb
add
cmp
jo
mov
xchg
testb
test
mov
loope
jno
xchg
inc
add
inc
inc
pop
xchg
leave
nop
xchg
int3
adc
mov
shrb
lcall
adc
test
dec
add
lods
sub
outsl
cmp
ret
dec
sub
add
and
in
ret
dec
push
in
fiaddl
lcall
addb
aaa
sbb
pop
adc
test
mov
insl
cmp
jo
push
in
mov
cmp
pop
movsb
decb
mov
enter
shlb
xchg
add
mov
and
enter
dec
mov
lcall
cli
aas
xor
clc
xor
and
add
adc
lcall
sbb
adc
xchg
inc
lea
js
jecxz
addr16
mov
pop
xchg
icebp
pop
lock
fmull
dec
movb
test
stos
cmc
sub
add
jp
stc
data16
xor
int
inc
push
inc
adc
xchg
ljmp
jne
jmp
pop
pop
dec
std
jb
inc
xlat
rcrl
mov
jle
push
imul
push
jno
out
xor
jo
icebp
mov
nop
incb
test
lret
push
jl
loope
mov
mov
je
shr
xchg
xchg
test
or
into
add
cmp
mov
cmc
repz
jge
add
lock
std
lock
sbbb
add
lock
int
int
push
in
jle
and
dec
push
add
mov
test
adc
dec
add
and
inc
add
fistpll
lcall
mov
jmp
out
sub
inc
and
cmp
add
or
add
add
mov
adc
movsb
push
adc
add
testb
testb
ret
cmpb
addl
cmp
and
mov
ss
mov
jge
push
repz
in
or
xor
sub
scas
pop
mov
push
clc
aad
sbb
aaa
pop
add
xor
inc
sarl
inc
sbb
cld
lcall
cmovle
jno
mov
lock
jmp
and
jg
xlat
or
push
xor
add
and
movsl
jo
addb
arpl
jp
sbb
jne
sbb
mov
mov
icebp
pop
adc
repz
pop
cmc
mov
jmp
das
xchg
imul
lods
test
mov
pop
sbb
adc
inc
and
jg
pop
jo
cmp
sbb
and
das
cmp
lock
pop
sarl
push
sbb
addl
push
insb
pusha
xchg
lret
push
adc
push
inc
mov
test
sub
xchg
mov
call
xlat
sub
push
jbe
mov
sub
dec
inc
cli
int
push
mov
xor
ljmp
repz
adc
inc
cmp
loop
and
push
ret
add
inc
add
inc
mov
or
jno
mov
lret
inc
je
sub
add
sbb
sub
xchg
inc
sbb
sbb
and
andl
insl
sbbb
rcl
inc
repnz
or
jno
daa
push
aas
sub
inc
add
mov
sub
mov
xchg
ficompl
clc
jl
jmp
jo
and
outsb
mov
rcr
sub
shr
roll
lea
mov
ljmp
jmp
or
mov
dec
rorb
jmp
cs
xchg
mov
push
adc
das
and
push
add
inc
aaa
xor
sub
ss
add
hlt
sbb
shlb
popl
es
bound
ds
mov
insl
jle
xchg
fwait
xchg
stc
xchg
adc
nop
dec
xchg
insb
inc
add
ficomps
scas
cli
orb
out
out
fbstp
movsb
mov
es
ljmp
jg
xchg
hlt
adc
or
or
sti
shl
mov
add
and
imul
add
inc
test
cmc
inc
sbb
ljmp
sbb
ret
pushf
add
ret
xchg
mov
test
cmpsl
add
js
mov
sbbb
mov
rolb
rorb
xor
jo
jecxz
sub
adc
and
pusha
jp
sbbb
jp
test
inc
jg
push
jo
addb
pusha
inc
out
jmp
popf
or
adc
sbb
jne
bound
lahf
sub
xor
push
addl
add
out
inc
test
jp
sbb
dec
int3
cmp
ljmp
jo
sbb
xchg
add
adc
inc
fsubs
cmp
out
imul
or
leave
ljmp
add
jmp
lcall
enter
inc
cmp
lock
pop
rcrb
xor
gs
mov
jl
add
test
jg
add
lcall
insb
adc
insb
inc
xor
or
hlt
inc
xrelease
sub
rcrb
jbe
js
add
idiv
mov
jp
mov
jl
xor
movsb
or
sub
xor
push
dec
jg
xchg
add
call
daa
mov
push
mov
ret
xchg
out
cltd
sub
cs
inc
adc
push
test
ss
xor
adc
rorb
dec
movl
call
inc
sbb
decl
or
add
xor
push
jmp
cs
mov
pop
fcoml
mov
jge
rorb
inc
mov
add
popa
clc
call
loop
pop
enter
lret
or
sarb
jl
pop
ret
pop
sbbl
sbb
rcll
aas
push
mov
push
dec
mov
fisubrl
aad
enter
iret
cmp
xor
lds
out
add
xor
mov
test
xchg
mov
push
inc
xchg
or
addb
fsubrl
push
ss
add
pop
sub
lods
enter
sub
adc
pop
je
bound
sub
pop
shrb
in
jmp
inc
hlt
xor
inc
inc
scas
loope
sbb
or
int3
xor
dec
inc
add
jl
call
mov
xor
lret
adc
dec
fcoms
out
push
test
inc
or
loopne
je
dec
and
scas
loop
lea
inc
ja
sbb
lret
popa
push
adc
and
xchg
mov
jno
push
pusha
mov
ds
dec
add
inc
lds
push
cld
and
stos
mov
je
push
push
bound
aaa
sub
jge
andb
jb
orb
push
cmp
loope
call
adc
xorb
push
pop
ss
mov
pop
inc
mov
test
stc
pop
cmp
in
pop
sbb
adc
pop
sbb
add
pop
je
sub
fwait
pusha
xchg
mov
sar
mov
jbe
mov
jmp
and
mov
dec
cmp
cmp
pusha
xchg
jb
xchg
mov
test
sub
aaa
pop
mov
jmp
loope
ret
sub
mov
adc
sbb
lea
scas
inc
jg
loopne
or
mov
test
movb
dec
mov
mov
adc
test
pusha
push
or
test
jbe
pop
lock
mov
cmp
js
js
sbb
sub
mov
adc
lock
pusha
and
push
adc
mov
data16
add
or
adc
inc
arpl
mov
or
push
or
adc
dec
dec
add
cmp
add
frstor
cmp
call
aam
or
out
xchg
sbb
je
mov
rorl
push
les
ret
adc
push
jbe
loopne
sub
xchg
xchg
adc
rclb
sbb
push
adc
insl
mov
es
fistl
cmp
aaa
cmp
outsb
jge
pop
pusha
push
lret
sub
mov
or
test
pop
and
repz
add
inc
sub
sahf
add
inc
jmp
mov
je
mov
add
add
shl
fsubr
sbb
notb
xor
cmp
imul
xor
imul
jle
divb
add
aam
enter
mov
loopne
orb
dec
fidivrs
loopne
dec
mov
mov
xchg
addl
insl
and
aam
and
fs
addb
icebp
es
adc
pop
mov
jmp
jle
jecxz
mov
outsl
out
fidivrl
adc
jecxz
pop
pusha
add
and
cmp
pop
sbb
incb
stos
mov
xchg
mov
mov
jbe
shlb
insb
sub
jecxz
cmp
xchg
jo
xchg
push
lods
adc
mov
loope
and
adc
mov
popa
xor
enter
sbb
adc
test
jmp
sbb
shlb
fldt
int3
shll
popa
rcl
jne
mov
push
inc
lods
mov
int3
jp
leave
jmp
int3
add
sbb
add
ja
clc
jbe
inc
fdivl
push
dec
push
jb
pop
lds
ds
mov
or
jb
mov
jo
adc
push
pop
ljmp
jbe
pop
cmp
call
dec
ret
sbb
push
lret
lods
add
cli
push
add
jl
mov
inc
cmp
jne
stos
add
adcb
rclb
mov
jge
sbb
cmp
push
mov
scas
inc
lock
mov
pop
add
push
jb,pn
cmp
and
sbb
mov
andb
jmp
cmc
or
repz
adc
lock
xor
ret
inc
cmp
jb
adc
sub
in
or
outsl
dec
and
lock
or
int
push
push
cmpsl
jmp
es
pusha
push
jae
mov
dec
lret
inc
inc
testb
jmp
out
cli
adc
mov
inc
negb
sti
pop
lock
mov
add
mov
imulb
ds
adc
xor
insb
lock
shll
mov
dec
xor
test
out
jl
test
sbbl
jmp
inc
fdivr
lahf
jae
addl
mov
mov
add
and
jp
jbe
ljmp
or
xor
nop
push
cmp
xchg
sub
lock
cli
jo
push
push
push
xor
std
pushl
dec
push
fdivl
aam
aas
cmp
test
jmp
jo
push
pop
pop
mov
cld
shll
fisubrs
dec
cmp
scas
mov
orl
cmpsb
sar
jp
mov
xor
cmp
lock
jg
xorb
cmp
jp
add
and
out
adcb
push
ret
mov
test
jne
push
cmp
mov
inc
fnsave
bound
or
sarb
ja
lods
movsb
outsb
sarb
xor
in
add
fcomip
push
jo
cmp
adc
adc
xor
adcb
add
or
add
xor
repz
jmp
ds
jnp
sti
and
push
lock
xor
pop
cmp
setl
adc
incl
inc
inc
test
cmp
jb
clc
pushl
add
popf
cmp
lock
jmp
mov
mov
or
inc
enter
fprem
inc
xchg
or
jb
fs
popa
sti
lods
or
add
cwtl
icebp
add
sub
xchg
sub
jg
pop
add
fwait
pavgw
and
subb
mov
ja
pop
hlt
sub
jmp
sahf
cmp
sbb
sub
inc
mov
xor
decl
dec
loop
fidivl
cmp
jbe
and
ja
aaa
inc
decl
and
ss
jle
and
mov
nop
inc
push
push
jo
adc
enter
xor
push
dec
ss
mov
add
sbb
adc
aaa
or
cli
jmp
or
dec
cmc
dec
add
inc
mov
dec
mov
ss
dec
stos
inc
mov
dec
mov
aaa
outsb
test
jo
addb
xchg
sbb
lock
outsl
sbb
stos
adc
lret
mov
or
pop
enter
cmp
dec
mov
cld
pop
adc
aaa
xchg
mov
sbb
les
xchg
test
mov
mov
es
xor
xchg
adc
shlb
add
push
pop
lret
je
or
pop
adc
dec
bound
mov
mov
and
fdivp
lds
stos
and
cmp
lea
dec
mov
cmp
cld
addl
leave
ret
dec
xor
mov
fucomip
lock
aaa
jo
cld
xor
ret
or
mov
sbb
jg
xor
aaa
or
adc
adc
andl
jmp
je
inc
mov
add
cld
incl
jl
test
mov
ss
or
mov
lock
enter
push
or
loope
inc
sub
jo
rorl
stos
nop
jne
inc
jnp
push
movsb
push
push
orb
inc
or
dec
jmp
jecxz
fnstcw
adc
jg
pop
enter
out
prefetchnta
jl
or
jmp
fcomps
sub
sub
jl
add
lock
and
adc
fdiv
ds
pop
ja
xchg
mov
lock
fbstp
jl
add
add
sar
es
jb
scas
mov
outsl
add
jno
cmp
push
addb
sete
adcb
adc
dec
psllw
inc
jmp
adc
inc
and
data16
cli
cwtl
push
repnz
xor
jp
xor
test
loope
mov
fistpll
mov
orb
push
inc
xor
test
insl
mov
ret
jl
inc
jo
add
mov
mov
rclb
jl
mov
jo
xor
test
test
cmp
or
fs
ljmp
cmp
stc
jns
aad
and
dec
scas
shrb
adc
jp
lock
sbbb
cmp
and
push
ret
or
test
inc
sbb
cmp
jecxz
inc
push
ret
adc
adc
insb
inc
or
push
into
mov
mov
jo
sbb
cli
cmpsb
jmp
in
mov
pop
add
pop
add
scas
outsl
and
cmp
repnz
out
xor
das
js
sub
test
cld
mov
aam
cmp
loop
jno
push
sbb
stc
xchg
mov
fcomip
andb
popa
jo
push
or
or
mov
mov
insb
lock
or
adc
push
mov
sub
idivb
sbb
mov
or
out
and
mov
cmpb
mov
adc
divl
lock
sbbb
sub
mov
jbe
inc
inc
add
cmp
cld
dec
sub
dec
sbb
ljmp
add
mov
in
push
dec
add
test
mov
test
rolb
pusha
dec
push
inc
clc
dec
fst
jl
clc
mov
inc
arpl
test
jo
xchg
xor
and
or
add
inc
jp
xchg
ds
adc
mov
cvtps2pi
imul
and
xor
sbb
test
mov
cmp
std
orl
add
popa
inc
daa
lcall
ljmp
sub
mov
sbb
jmp
pushw
push
xchg
add
call
xchg
add
add
ffreep
adc
ds
lea
xor
sub
mov
mov
cmp
inc
cld
add
and
adc
pop
pusha
arpl
pusha
xor
add
ljmp
fisubrl
dec
iret
and
out
adc
aad
jle
hlt
pop
fdivl
add
js,pn
shrb
imul
rol
add
adc
fistpl
jmp
jl
rolb
adcb
adc
push
test
ror
scas
ljmp
add
bound
xor
cmpb
and
xchg
insb
int
pop
adc
and
dec
add
lcall
inc
jl
leave
inc
jbe
pop
shlb
dec
adc
mov
test
add
cld
mov
add
shll
and
mov
testb
adc
and
push
sbb
dec
adc
push
lock
mov
jae
sub
shl
sbbb
movl
ljmp
outsl
js
xchg
lret
add
andl
aad
addr16
xor
int
dec
aam
xor
ret
xor
push
adc
movl
inc
jo
push
cltd
push
cltd
inc
push
push
sbb
pushf
inc
lods
push
mov
adc
es
call
rclb
add
and
fcoml
dec
and
mov
jp
add
jmp
xchg
hlt
lea
push
push
or
mov
hlt
daa
pop
cmp
je
adc
jne
nop
adc
adc
push
shll
aaa
loopne
push
or
ret
push
add
nop
mov
pop
or
xchg
sub
mov
mov
imul
mov
sub
mov
orb
hlt
outsl
negb
rcrl
mov
push
push
dec
ds
outsb
insl
xor
or
jmp
dec
call
in
loopne
loop
fwait
andl
mov
jmp
lods
nop
leave
scas
mov
and
lcall
jg
lcall
cli
addb
and
inc
and
mov
inc
add
cltd
ret
mov
mov
into
popf
pop
xchg
cmp
cs
dec
orb
xchg
jle
pushl
jbe
jb
adc
jne
add
mov
in
add
add
sbb
lret
mov
mov
mov
mov
inc
push
addb
add
or
xor
xchg
clc
push
xor
lahf
push
fidivs
push
insb
decl
icebp
aam
cmp
push
xchg
sbb
fcoms
push
lret
gs
loopne
sub
pushf
mov
inc
mov
add
in
cmpsb
cmp
je
and
fistpl
adc
addl
iret
push
dec
cltd
loopne
xchg
add
jle
aas
push
ljmp
jmp
es
out
add
jne
mov
adc
adc
aam
jl
push
pop
and
rcrl
push
mov
inc
jl
lcall
and
or
cli
pop
popa
cmp
mov
cmpsb
mov
int
and
push
adc
or
lock
or
or
mov
mov
aam
pusha
int
jl
aad
loopne
filds
mov
pop
shlb
out
or
inc
or
in
jmp
jp
adc
rcll
insb
or
lock
in
dec
jae
repnz
and
bound
pop
pusha
push
pusha
aas
loope
ret
push
rcr
dec
loopne
bound
loopne
inc
or
or
sub
push
dec
adc
test
jmp
add
push
outsb
pop
neg
jg
test
icebp
out
and
frstor
out
shl
addr16
repz
cmp
notb
dec
xchg
push
sahf
dec
push
push
mov
xor
xchg
jo
imul
xchg
mov
jbe
xor
movb
sbb
out
xor
push
bound
mov
push
adc
cmp
rolb
or
mov
sti
loope
or
and
pop
push
fidivl
adc
loopne
bound
pop
pusha
test
test
pusha
push
sub
xchg
orb
pop
mov
cwtl
inc
mov
loopne
pusha
les
rol
out
shl
push
and
jae
jl
xor
jb
les
idiv
inc
or
loop
lea
add
push
loope
sbb
sbb
sahf
fdivs
mov
and
or
cmp
add
cli
add
mov
test
xorb
inc
popa
dec
mov
les
aam
movsb
xchg
mov
mov
cmp
jbe
shlb
pushf
clc
or
mov
mov
inc
mov
inc
adc
cld
and
rorb
loopne
xchg
inc
and
ffreep
and
lods
and
insb
sbb
sbb
movsl
adc
mov
jg
xor
adcb
popa
out
out
jle
aaa
cmp
cld
fldpi
mov
mov
jge
mov
mov
dec
push
shl
jbe
pop
adc
daa
jae
aaa
sbb
jmp
dec
and
and
js
andl
and
loop
js
in
pushl
in
outsb
jo
jb
mov
jl
mov
xor
incl
pop
sub
push
jecxz
xor
jo
inc
mov
aam
mov
mov
jno
mov
jmp
sarb
jo
jg
addb
jle
stos
lcall
and
mov
shr
adc
rdtsc
inc
add
mov
inc
push
push
scas
jle
xchg
jp
jo,pn
icebp
xor
xlat
incb
pop
add
into
lock
inc
xor
inc
jmp
pop
xchg
inc
icebp
sub
or
sbb
fistpl
or
or
pop
lock
rolb
les
push
into
push
xor
mov
mov
lea
push
fs
mov
pop
xchg
add
pop
xor
fidivrs
dec
push
outsl
notb
sub
pop
and
pushl
inc
xor
sbb
add
out
or
fidivl
pushl
adc
jp
cld
aaa
add
ljmp
jae
mov
in
fdivs
cmp
mov
fwait
incb
jbe
insb
jp
lods
lods
je
xchg
pushf
pop
sub
push
out
ja
cmp
push
repnz
sti
mov
xchg
fbld
jmp
lock
inc
push
aas
add
add
push
je
in
push
xchg
lock
mov
mov
push
pop
jae
lret
add
cmp
pop
mov
xorl
mov
pop
inc
dec
andl
add
or
xor
loopne
or
add
adc
sbb
xlat
jno
mov
lret
hlt
lea
mov
pusha
inc
loope
lock
clc
and
pop
lock
cmp
roll
jno
hlt
cmpsl
andb
in
cmp
cld
movsb
jl
nop
xchg
mov
add
clc
data16
xchg
add
clc
jmp
enter
pop
and
mov
pushf
sub
xchg
insb
jecxz
clc
loopne
mov
or
outsl
jmp
or
push
dec
push
hlt
xchg
ss
lret
pop
icebp
add
sbb
lret
cmc
inc
add
add
mov
mov
dec
jmp
pushl
in
push
test
xor
add
mov
mov
inc
popa
adc
pusha
cmp
add
mov
out
adc
pop
push
mov
jecxz
fnsave
pop
dec
mov
movl
mov
ljmp
xor
test
or
push
sub
or
lds
mov
pusha
or
call
dec
mov
cmpl
add
push
adc
bound
xor
or
mov
ret
cmpsb
movsb
mov
push
jb
nop
sub
aaa
jl
lock
add
je
xchg
xor
loopne
call
fadds
stos
nop
hlt
pop
jp
lock
pusha
jmp
lahf
insl
adc
test
mov
pop
mov
call
cmp
adc
sub
adc
filds
xor
or
sbb
adcb
cmpsl
jne
mov
push
push
add
sbb
das
adc
jno
add
jo
xor
mov
repz
orl
pop
lock
or
testb
and
mov
scas
and
sbb
div
mov
jo
sbb
or
mov
or
or
sbb
or
dec
add
jbe
jo
mov
in
push
cld
mov
sbb
cwtl
sbb
nop
repz
add
pop
xchg
xor
icebp
add
stos
dec
fdivp
push
js
jmp
cld
jo
adc
lock
inc
stc
sbb
sbb
decl
shlb
pop
jno
or
outsl
and
mov
mov
inc
or
loope
and
xchg
mov
sub
dec
adc
mov
adc
push
mov
lea
je
or
cmpsl
mov
es
xor
mov
mov
jne
inc
js
or
add
dec
loopne
into
and
xor
and
sbb
and
lock
sbb
fstl
and
ret
cmc
pushl
xchg
mov
mov
jnp
xchg
stc
sbb
stc
icebp
aas
stos
je
push
fs
int
in
or
in
mov
add
dec
out
sub
xor
sbbb
cmp
daa
hlt
push
or
shll
xchg
or
jg
pop
jg
jg
sub
push
and
push
mov
dec
pop
or
cmp
push
mov
or
and
inc
push
and
js
xchg
mov
js
add
pop
cmp
pusha
insb
sub
rcr
lock
pushf
jmp
ffree
jo
cld
push
jne
jp
adcl
ljmp
dec
jne
sbbl
jg
jg
dec
lock
inc
repnz
enter
mov
and
lods
inc
xchg
jp
inc
rclb
and
ljmp
pop
je
fistpl
or
lock
and
dec
aaa
pop
add
inc
fiadds
adc
mov
or
lock
jp
icebp
pavgb
decb
inc
or
xchg
and
sbb
and
cli
mov
mov
popa
sbb
mov
mov
add
xor
adc
push
lock
add
dec
cld
icebp
push
cmp
fmull
mov
xchg
jo
cmp
pop
leave
clc
decl
mov
jne
idivb
sub
movsb
stos
loopne
mov
repnz
sbb
daa
sbb
in
inc
mov
jle
jle
push
add
lret
pop
clc
and
fisttps
mov
or
jl
incl
shrb
fdivl
pop
addl
aam
test
pop
sarl
jmp
mov
add
lcall
add
jg
inc
movd
add
add
pushf
adc
gs
stos
mov
sub
clc
call
push
mov
adc
subb
mov
jbe
and
mov
xchg
sbb
adc
sub
pop
add
sbb
pop
ret
icebp
adc
cmpb
cmpsl
add
pop
or
mov
or
incl
leave
in
adcb
inc
arpl
dec
insb
cmp
jge
ficoml
loopne
mov
test
pop
sub
outsb
mov
inc
hlt
imul
nop
pop
out
add
push
cmp
xchg
mov
inc
add
mov
pop
inc
push
mov
jo
gs
cmpb
ljmp
mov
add
icebp
add
addb
cltd
fiaddl
cltd
test
fsts
cwtl
insb
rolb
outsl
adc
add
leave
in
inc
push
pop
cmp
xorb
or
and
jo
mov
jmp
mov
xor
sbb
xor
andb
fdivl
rolb
ljmp
xchg
mov
or
je
jecxz
das
mov
mov
sbb
push
sbb
lock
push
xor
and
fld
and
test
shrl
data16
xchg
or
xor
xlat
lock
add
shll
shrb
dec
es
push
cli
push
push
inc
pop
jl
jmp
mov
mov
ljmp
mov
shrb
aaa
jb
mov
aam
push
mov
lret
sbb
jmp
fabs
jp
add
push
sub
push
push
sbb
add
cmpl
loopne
sarb
xor
add
push
repnz
xor
add
vmwrite
mov
ret
sarb
loopne
jg
pop
int3
adcb
das
lds
call
mov
ss
xor
pop
push
pop
ljmp
fimull
or
fadd
lcall
mov
data16
cmp
jb
inc
in
adc
mov
imul
sub
js
adc
jg
stos
ficompl
fadd
pop
mov
add
in
jbe
dec
mov
or
js
shrb
js
cwtl
pusha
dec
fldt
mov
test
or
ret
movsb
rclb
loope
sub
push
stc
xlat
inc
popa
sub
cmc
fbstp
add
fldt
loop
sub
and
loopne
pusha
pop
xchg
movsb
mov
loopne
inc
shrb
push
push
call
loopne
test
pushw
jp
sub
push
mov
jmp
jmp
lcall
gs
jmp
ja
xchg
cld
lock
add
or
jne
fiadds
push
add
es
inc
mov
jg
cmpsb
add
add
enter
rclb
fsubrp
cli
in
call
aad
loop
push
inc
cmp
lock
leave
pusha
pushf
push
pusha
push
jl
cli
sbb
insl
sub
jl
cmpsb
jae
add
int
mov
subb
lods
pop
jnp
mov
pop
jo
rolb
push
mov
test
test
mov
bound
out
loopne
jmp
push
loop
mov
lcall
sub
imul
pop
loop
sbb
add
push
and
imul
fcom
fsts
add
push
xor
jbe
adc
pop
pop
lods
loop
mov
fs
jp
sub
mov
add
add
sbb
adc
add
cmp
into
and
lret
cmpsb
sti
nop
add
add
dec
xor
pop
sbb
push
and
and
sub
and
add
add
jmp
mov
jl
add
loop
lcall
add
aas
mov
and
nop
lds
mov
xor
out
adc
movsb
mov
fdivr
push
push
movsl
sub
cmp
mov
mulb
mov
or
jle
or
inc
lret
mov
cmpsl
test
fs
int
and
mov
push
pop
mov
dec
push
data16
xchg
add
and
in
adc
push
mov
sbb
cmpsb
insl
fidivrl
mov
pop
les
pusha
adc
in
pusha
pop
add
test
sub
mov
imul
mov
mov
dec
inc
adc
adc
cwtl
fdivs
mov
mov
fisubl
sub
pushf
add
mov
pop
rcl
stos
pusha
sbb
and
mov
ret
std
fiadds
cli
push
pop
or
mov
repz
dec
or
adc
fdivp
adc
adc
sbb
sbb
sbb
mov
jl
in
sbb
fiadds
fldl
mov
fisubl
daa
sub
insl
lcall
add
sub
sub
subb
test
das
dec
xor
xor
jg
xor
xor
ss
cmp
cmp
cmp
cmp
adc
and
inc
cmpsb
and
cmp
nop
sub
mov
or
mov
ja
pop
lods
shlb
add
or
sub
dec
pushf
das
repnz
mov
pop
push
mov
and
mov
fistps
divb
add
mov
push
es
add
fstl
outsb
xor
xchg
mov
shl
push
mov
mov
sub
fdivrl
push
cld
jo
lcall
js
lea
hlt
push
xchg
cmp
inc
stos
dec
add
aaa
add
es
aaa
out
mov
pushf
daa
jp
icebp
dec
in
bound
cmp
test
mov
lcall
lret
test
loop
addb
and
jbe
add
ljmp
cli
in
jo
cmp
or
dec
jecxz
mov
or
call
sbb
jge
xchg
icebp
jmp
inc
sbb
mov
dec
inc
xor
mov
pop
sub
inc
inc
in
inc
mov
and
inc
jbe
jmp
stos
mov
push
fs
and
add
ja
cmp
jne
rclb
dec
hlt
jle
inc
push
mov
sbb
sub
movb
sbb
add
out
inc
or
push
cmp
and
and
inc
cwtl
mov
rcrb
lods
fisttps
fadd
aam
inc
in
lret
sub
mov
or
or
xor
add
cmp
rcrb
dec
jp
pop
or
clc
cmpsb
sbb
iret
jp
je
push
mov
cmp
insb
mov
push
data16
and
adc
or
add
add
and
xchg
inc
test
add
or
add
xor
lods
sub
dec
jp
mov
mov
ds
cmp
add
xor
mov
test
in
or
pop
add
rcll
xor
je
push
dec
sbb
add
idivl
cmp
add
push
lock
pushf
cli
or
cs
in
aas
and
stos
xor
mov
push
mov
mov
pop
addb
sbb
mov
add
push
inc
rolb
in
out
or
fists
jmp
or
or
adcb
dec
mov
xor
mov
mov
add
push
fistpl
mov
inc
cwtl
cmp
ret
insl
test
push
push
sbb
add
test
test
or
jmp
or
mov
cmp
jl
faddl
or
stc
lock
push
add
mov
sub
jp
pop
sbb
clc
das
mov
xchg
and
xor
or
or
add
mov
pop
hlt
test
pushf
je
testb
and
loopne
jmp
mov
ret
and
jl
lods
and
out
mov
sub
push
jo
in
sub
incl
outsb
push
aas
je
sbb
sti
cmp
enter
cld
subl
jns
imul
pop
and
cmc
fwait
jbe
sub
pop
test
jmp
pop
adc
mov
cmpsb
sub
or
pop
mov
sbb
pop
notb
andl
mov
jbe
bound
mov
ss
bound
pop
shlb
popa
push
leave
mov
sbb
loopne
addl
hlt
add
inc
mov
lcall
fucomip
sbb
inc
mov
data16
ret
sar
inc
aam
lea
jmp
mov
xor
or
pop
adc
jne
idivb
fdiv
or
inc
xchg
pop
and
add
and
incl
adc
insb
inc
daa
je
mov
jp
or
decl
sbb
cmovs
dec
repz
and
jo
inc
adc
add
xchg
mov
lods
lods
sbbl
icebp
jb
stos
mov
push
xor
ss
stc
jae
adc
pop
xchg
aam
dec
rcll
inc
mov
inc
cmp
lock
jl
rclb
xchg
stc
cmpb
mov
jl
sbb
add
mov
dec
cmp
cmp
add
pop
inc
nop
dec
fcoms
jmp
mov
mov
sub
clc
ja
or
cmp
mov
or
mov
mov
jg
add
add
push
rep
stos
or
cmp
xor
jo
jl
fmuls
xor
dec
inc
xor
or
jno
aam
sbb
aaa
mov
mov
jb
jmp
sub
test
adc
push
sub
outsl
scas
in
jmp
sbb
pop
call
sub
mov
test
mov
adc
dec
mov
into
push
xor
mov
add
retw
fiaddl
fs
pop
and
jne
push
aaa
sar
icebp
sub
mov
sub
call
test
inc
jne
jge
add
cmpb
jb
mov
inc
or
sub
cmp
fidivs
je
jne
inc
xor
loop
add
orb
or
jb
jg
and
pop
or
xor
in
xor
fisttps
lret
mov
add
xorb
cmpb
adc
cmc
or
pop
testb
xor
jne
cmp
loope
lock
push
lock
dec
ds
sarb
push
mov
push
or
popf
sarb
and
jle
cmp
jbe
dec
sahf
sbb
adc
xchg
mov
das
jp
stos
lret
lock
dec
lret
mov
cmc
out
jmp
sahf
mov
jl
outsl
test
dec
add
and
sahf
adc
gs
mov
sahf
les
out
jb
xorb
inc
push
or
push
push
push
mov
dec
cwtl
mov
and
fs
cmp
cmp
inc
je
cmp
call
mov
mov
ret
mov
lock
or
daa
mov
fwait
lods
mov
loopne
aad
daa
cmpb
ljmp
pop
adc
cmp
outsb
dec
or
add
int3
scas
test
mov
jmp
cmpsb
pushf
adc
movsb
jae
sub
jae
jo
cld
mov
aas
and
mov
cmp
push
jmp
aam
call
and
cmp
mov
mov
movl
mov
loop
or
cmp
bound
xor
mov
pop
pusha
clc
add
add
cmpb
add
mulb
inc
repz
repz
inc
adc
pop
repz
jne
add
dec
pusha
pop
loopne
lcall
jmp
or
add
test
je
cmp
push
hlt
mov
leave
das
add
add
mov
hlt
or
xor
jecxz
mov
jo
jmp
mov
fisttps
scas
fistps
decb
add
icebp
test
or
out
or
fildl
adc
sbb
or
in
sbbb
ljmp
pop
cmp
je
addl
mov
test
ss
ret
or
sbb
xor
xacquire
cwtl
jl
jne
jle
movl
shlb
dec
sub
and
cmp
rolb
call
dec
ret
and
incb
cmpb
mov
jo
out
mov
xchg
aam
popf
mov
push
xchg
pop
or
incl
daa
push
pusha
mov
je
and
ljmp
ret
sbb
add
adc
or
sbb
or
mov
inc
mov
out
iret
add
mov
and
add
pop
adc
cmp
or
pop
mov
mov
dec
add
lods
add
xor
mov
add
add
mov
pop
adc
or
pop
mov
or
das
and
or
daa
push
mov
call
mov
fdivl
rcll
orb
mov
push
or
adc
push
push
inc
insl
rcrl
sbb
or
mov
mov
xchg
add
shll
test
add
or
push
addb
movsl
xorb
pop
adc
dec
jae
pop
sub
sub
push
movl
pop
and
aam
pop
mov
sahf
shlb
push
jp
pop
mov
dec
dec
cmp
loopne
hlt
faddl
jg
or
fadd
add
shr
and
outsb
push
mov
jae
clc
mov
pop
inc
incl
test
rolb
popf
aaa
add
mov
movsl
rorb
mov
xor
or
inc
incl
and
testb
xor
rorb
mov
inc
cld
push
adc
rolb
clc
adc
xor
xor
or
jb
jmp
les
mov
add
loopne
adc
or
gs
inc
movsl
mov
mov
js
dec
mov
inc
inc
test
decb
ret
int3
int3
xor
int3
into
andl
hlt
sarb
jbe
dec
sti
or
stos
mov
jmp
dec
cwtl
jne
movsb
pop
sar
and
lea
movsb
and
xchg
inc
adc
adc
insl
inc
loop
adc
je
add
inc
jbe
inc
dec
popa
dec
ljmp
cmp
cwtl
cli
inc
ret
jle
sub
nop
jne
cmp
mov
add
data16
sub
in
ja
call
and
loopne
and
rolb
push
add
cmp
dec
mov
push
pusha
sub
or
and
hlt
les
call
push
push
lock
rorb
call
jmp
pop
clc
adc
sub
push
clc
cmpl
add
mov
rcr
outsb
add
adc
call
add
les
pop
mov
outsl
xchg
std
jb
dec
jne
movsl
pop
fs
and
add
sarl
in
xor
loop
lea
mov
mov
fisttpll
or
push
push
push
loope
add
pushf
inc
cmpl
jmp
or
lock
loopne
ja
out
xor
jmp
and
adc
in
fwait
or
or
push
push
xchg
fistps
loop
add
sbb
popa
add
loope
jmp
mov
repz
cmp
jne
and
add
adc
jne
inc
cmc
jle
shlb
add
jnp
insl
xor
mov
add
aaa
aam
sub
mov
add
int3
mov
push
scas
sbb
cmpsb
push
outsb
pop
and
mov
stos
enter
add
dec
mov
or
push
notb
or
orb
push
lock
mov
jp
popa
xor
and
sahf
cld
pusha
or
jae
and
xorps
je
or
in
inc
or
clc
mov
or
push
sub
and
push
mov
inc
mov
in
aaa
loope
test
aam
sub
mov
jae
adcb
jnp
js
cmpsl
pop
test
add
mov
fidivl
push
ret
in
pusha
cmp
mov
loopne
cmp
push
adcb
push
inc
int
adc
call
mov
outsb
and
cmp
aam
pusha
inc
xchg
sbb
sbb
jl
cli
pop
ljmp
clc
popa
sub
mov
stos
mov
imul
inc
repnz
je
test
paddd
arpl
and
sub
xchg
mov
and
clc
inc
jmp
popa
inc
cmpb
pop
js
xor
icebp
adc
outsl
or
fs
scas
and
mov
cs
xor
mov
push
push
push
mov
inc
xor
add
lock
bnd
add
jbe
mov
sbbb
or
mov
int3
push
inc
call
aad
mov
inc
fstpt
adc
fs
cli
pusha
insl
incl
scas
xor
push
inc
and
or
push
pusha
or
cld
mov
or
xor
call
xchg
push
cmp
fmuls
mov
iret
nop
movsl
cmp
mov
fmull
loopne
loopne
sahf
pop
sub
sbb
sbb
mov
loopne
arpl
cwtl
pusha
xor
lret
mov
xchg
lret
divb
pop
pop
lods
int3
scas
shll
ds
loopne
shrl
xchg
mov
leave
adc
mov
mov
sbb
orb
push
sbb
inc
lods
movsl
fists
and
push
adcb
mov
sub
data16
cmp
lea
loopne
inc
je
add
sub
or
iret
mov
sahf
cmp
pusha
sbb
test
outsb
decl
sub
mov
add
int3
or
ljmp
mov
enter
xor
rclb
enter
jp
clc
gs
pusha
xlat
out
jbe
ljmp
xchg
inc
sbb
icebp
sub
inc
add
adc
jecxz
mov
pop
dec
add
scas
sub
mov
pusha
xchg
push
and
call
mov
push
es
sub
mov
mov
subb
pop
hlt
lock
icebp
inc
or
inc
bound
pushf
jae
loopne
rorb
iret
xchg
inc
cld
and
sbb
jno
fcomi
fs
or
and
adc
stos
add
or
mov
scas
and
mov
repz
adc
inc
inc
adcb
pop
push
add
xchg
lret
pop
popf
inc
mov
jl
and
or
hlt
dec
xor
pushf
xchg
add
push
and
or
adc
add
sbb
adc
jo
je
add
call
push
xor
cmpl
lret
pop
arpl
add
es
dec
inc
mov
and
daa
cmpb
mov
xor
nop
decl
insl
sub
mov
or
add
xlat
aaa
mov
les
and
aas
or
nop
ljmp
mov
push
cltd
mov
dec
jae
xchg
push
or
add
test
add
add
mov
lock
and
fadds
aam
mov
or
mov
adc
mov
mov
nop
and
mov
add
int3
rol
aam
loopne
xchg
bnd
and
or
loopne
xor
push
mov
movsb
pmaxub
out
mov
adc
adc
or
ljmp
cmp
adc
decb
test
test
shlb
cmp
inc
dec
add
xor
shl
inc
lahf
or
add
sub
mull
enter
add
adc
mov
inc
mov
xchg
add
rcll
jne
idivl
sub
negl
nop
add
add
jb
cmp
ja
divl
cmp
add
mul
push
push
xchg
sbb
or
testb
push
add
imul
jno
adc
cmpsb
cmp
divb
inc
push
mov
push
and
cmp
aas
or
jno
and
out
imul
jecxz
jg
pusha
cmpsl
pop
pop
pop
movsb
ret
inc
sar
jb
push
or
pop
and
mov
movsb
mov
push
inc
ret
add
orl
out
xor
xor
xadd
push
aaa
jle
push
xor
adc
pusha
movsl
pop
nop
inc
aaa
into
add
or
sbb
add
inc
fdivp
movsb
negl
test
mov
hlt
and
stc
jb
clc
add
add
cmp
lcall
mov
xlat
cmp
jb
pop
xor
sub
add
test
popf
xchg
inc
or
push
orl
lock
pop
xor
cmp
incb
push
call
pop
inc
pop
sub
pop
xchg
rolb
loopne
push
xor
xor
pop
dec
rclb
mov
les
int3
or
cli
dec
add
jl
movsb
jo
enter
mov
push
sarb
inc
mov
and
inc
icebp
push
dec
mul
je
xor
pop
mov
add
mov
movsl
lods
fldt
sbb
and
jbe
or
test
jb
clc
pop
xor
mov
test
xor
push
shlb
leave
icebp
aaa
inc
or
xor
inc
mov
clc
pop
xorb
push
dec
lock
mov
stos
roll
jne
and
or
push
sub
stos
or
fimull
aas
adc
push
mov
fnsave
push
sbbb
pusha
mov
inc
xor
cmc
pop
test
pusha
inc
or
cmp
jbe
call
std
test
mov
push
push
push
pop
dec
xor
mov
stos
push
cmp
xchg
jmp
jecxz
xchg
sub
loop
sub
sahf
jbe
xor
mov
adc
and
sbb
lock
xorl
clc
add
jo
pusha
add
into
mov
push
add
sbb
aad
sub
inc
je
jl
pop
fucomp
cs
and
cwtl
je
or
push
dec
push
jle
lcall
dec
aaa
adc
cmp
lock
jo
test
push
push
xlat
imul
mov
cltd
dec
and
ss
sub
pop
insb
mov
add
jecxz
inc
lock
or
cs
pushw
pusha
xor
imull
sbb
inc
cmp
xchg
mov
out
xor
cmp
jae
cs
add
adcl
imul
icebp
adc
add
mov
push
pushl
jb
in
add
push
stos
mov
or
pop
sbbb
mov
pop
nop
mov
mov
sbb
movups
rclb
add
push
push
push
add
pop
mov
adc
push
dec
pop
incb
or
dec
dec
pop
ss
xor
and
hlt
lods
push
push
push
dec
push
pop
jmp
xchg
in
jle
int3
add
xor
clc
inc
lods
mov
repnz
ja
mov
inc
adc
rorl
aam
fcom
mov
ret
inc
push
lea
pop
add
push
dec
dec
addb
add
jo
inc
mov
test
mov
xor
std
jmp
add
ret
rorb
jbe
popa
clc
or
push
inc
pop
lock
jl
cmp
cmp
test
insl
inc
mov
mov
add
or
lock
or
mov
mov
cld
pop
sub
cld
push
push
xor
push
inc
cmp
call
mov
dec
inc
ss
jp
fidivrl
lea
cmp
out
ja
sub
mov
shl
adc
xor
and
jbe
mov
or
inc
dec
addl
inc
leave
je
dec
jl
mov
jo,pn
in
push
clc
dec
cmp
inc
xor
addr16
ja
add
jb
cmc
rolb
sti
add
sbb
lods
or
inc
loop
into
push
call
stos
test
mov
add
push
adc
sbb
ret
aam
add
adc
shl
dec
icebp
sbb
push
icebp
dec
adc
push
scas
call
mov
sub
inc
jg
fcmovnb
icebp
sub
inc
or
shll
rclb
inc
std
sti
cmpb
jae
data16
lds
xor
xor
push
or
dec
pop
push
inc
incb
push
sub
call
shlb
sti
cmp
jb
sub
rorb
add
cli
push
cmp
roll
xor
rol
push
push
inc
mov
cmp
cltd
cmp
pop
ljmp
call
pfcmpeq
adc
mov
sub
cs
in
mov
add
sbb
sbb
mov
add
cmp
add
mov
xchg
mov
mov
aaa
jno
test
and
lcall
outsb
add
repz
add
popf
nop
mov
sar
adc
add
push
inc
test
sub
lods
add
call
insb
cmp
mov
add
dec
jl
clc
sti
mov
jmp
icebp
andl
or
and
adc
std
mov
or
cs
lcall
xor
and
cli
mov
jge
mov
ljmp
adc
and
push
push
les
cmp
out
cmp
int
jae
movsl
mov
pusha
imul
out
mov
jb
mov
dec
bound
adc
lcall
xchg
btc
mov
add
mov
inc
and
or
repnz
dec
bound
inc
pushf
jb
mov
and
push
pop
popa
mov
inc
dec
es
mov
inc
inc
mov
dec
jno
jl
call
push
sub
jo
fisubs
ljmp
in
cmp
pop
data16
or
flds
and
sbb
jo
dec
jo
push
aam
mov
mov
push
jge
ss
sub
xchg
cwtl
jle
dec
mov
or
xor
jle
push
push
sub
nop
adc
xchg
arpl
adc
pushf
sub
xchg
mov
jnp
mov
add
adc
push
xor
inc
adc
sbb
xor
adcb
enter
sub
pop
mov
sub
sarb
mov
je
les
push
aad
adc
adc
sbbb
sbb
sbb
cmp
clc
js
and
inc
add
es
mov
pop
inc
xor
push
push
xor
rolb
and
inc
in
pop
addb
fs
or
repnz
inc
cltd
mov
ljmp
rorb
mov
fistl
push
push
adc
add
pusha
stos
notb
clc
sbb
std
mov
sub
adc
call
dec
jmp
rcrl
pop
mov
decl
mov
movsb
enter
xor
dec
ret
dec
cwtl
cli
aaa
insb
and
dec
inc
adc
inc
data16
pushf
xchg
mov
pop
mov
imul
inc
int3
shrb
lret
movb
xchg
cmp
inc
test
mov
add
dec
or
add
das
and
icebp
ljmp
cmp
lret
cmpsb
lahf
stc
shll
imul
or
add
stos
lock
hlt
jmp
jo
sub
add
das
dec
fs
mov
add
ret
jbe
addb
stc
idivb
inc
jl
sti
bswap
push
mov
or
add
cmp
push
sarb
jmp
addl
movsb
cli
shlb
movb
mov
inc
adc
sbb
leave
mov
in
addl
sbb
xchg
push
pop
xchg
fbld
rolb
jb
out
add
pop
outsl
jg
or
pusha
inc
rcrb
mov
sbb
shlb
add
mov
push
push
mov
mov
pop
or
mov
adc
rclb
fbld
lock
add
mov
lret
pop
inc
or
pusha
daa
insb
lock
js
sub
cmp
ja
push
lods
adc
ljmp
inc
ja
or
lahf
mov
add
mov
pusha
adc
movsb
jle
push
dec
test
lcall
ja
js
cld
loope
test
or
adc
negb
xchg
cltd
dec
fs
test
je
sub
popa
mov
testb
pop
jo
fcom
xorb
decl
sbb
addr16
sub
mov
pusha
bound
adc
xor
add
push
inc
pop
or
outsb
and
cld
add
jle
loopne
mov
test
cmpsb
pushf
push
test
adc
shll
xchg
rcll
sbb
push
js
pusha
cmp
jmp
scas
cmp
or
push
sub
adc
je
push
and
sbb
and
or
push
push
mov
incl
jmp
lods
dec
pop
je
xor
rol
test
push
dec
adc
add
push
sub
and
push
mov
add
inc
xchg
lock
pop
andl
int3
jne
loopne
jge
sub
loope
cli
push
jecxz
and
loopne
pop
in
popf
test
aad
mov
dec
or
lret
fmuls
sbb
add
scas
push
mov
add
loop
mov
call
and
push
jp
sbb
lods
mov
add
test
cwtl
jg
sbb
insl
pusha
cmp
sub
loope
push
idiv
and
mov
xchg
push
ja
sub
push
je
loope
inc
loope
ja
or
loop
ret
aaa
cld
sub
cltd
jle
popa
insl
jb
and
js
outsl
lock
ja
jecxz
sbb
mov
cmp
and
push
loopne
mov
movsb
cmc
cmp
mov
sub
cli
cmc
mov
add
mov
fsts
xchg
mov
jbe
pop
inc
adc
cmpb
outsl
add
je
jg
add
pop
shlb
lock
pop
jmp
pop
popa
lcall
popa
adc
mov
mov
dec
or
inc
movsb
loopne
jbe
lea
mov
js
daa
imulb
cmp
bound
cmp
cs
dec
shlb
out
ja
xor
adc
sub
cmc
lcall
ja
enter
pop
or
je
je
je
mov
fidivrl
or
inc
adc
mov
dec
mov
sbb
xor
sbb
add
jb
call
mov
and
mov
mov
movl
inc
mov
adc
add
pop
rcrb
in
incb
adc
jecxz
pop
es
out
pushf
je
xchg
add
insl
push
push
pusha
sbb
add
fidivrs
push
xor
ficomps
aam
dec
clc
fildll
sbb
jge
jl
sysenter
je
addl
jl
inc
mov
jle
jle
add
mov
xor
pop
aam
in
sbb
ja
ja
ja
push
inc
xlat
mov
sbb
pusha
or
cmp
add
pop
dec
adc
cmp
mov
lods
rcrb
lock
and
xchg
mov
add
fwait
jo
cmp
lock
xchg
sahf
inc
jge
cmp
ja
daa
xlat
xchg
sbb
sbb
or
hlt
incb
pop
pop
sbb
jne
jg
mov
das
sbb
pop
sub
mov
mov
mov
lock
bound
jl
jge
fists
int3
mov
je
loopne
push
push
push
repz
push
or
movsb
xor
add
xchg
jle
test
loopne
lock
fstpt
pusha
out
or
inc
sbb
clc
cmpsb
popa
adc
mov
xor
decl
push
pop
mov
add
xchg
inc
dec
and
mov
aad
or
push
jo
jo
scas
and
rclb
pop
cli
jo
xor
pop
xchg
shll
jae
jl
cmp
jne
mov
mov
mov
push
lcall
dec
shr
nop
push
dec
cwtl
inc
lret
into
jne
pop
popa
or
ret
out
adc
cltd
pop
inc
add
jne
add
insl
pop
bound
sbb
dec
lock
xchg
clc
ljmp
in
and
dec
add
push
sub
push
nop
push
call
mov
mov
and
pop
xor
xor
jno
imul
mov
andl
and
into
push
mov
push
xor
call
add
aam
je
inc
or
sub
sub
push
push
call
push
xor
push
push
mov
jecxz
hlt
add
add
xor
mov
je
jo
lock
int
cwtl
sarl
cli
add
cmp
xor
sbb
push
ret
add
int3
lock
je
sbb
iret
push
mov
add
push
js
pop
add
hlt
jmp
or
dec
filds
in
lock
mov
out
jg
mov
aas
inc
hlt
jne
xbegin
dec
cli
push
mov
or
push
pop
adc
je
push
dec
mov
cmp
mov
lea
push
push
ja
nop
mov
cmp
cmp
mov
adcb
xchg
adc
and
add
inc
add
or
movl
std
adc
add
cld
adc
adc
mov
mov
mov
mov
cli
pop
and
sub
loopne
cmpl
mov
add
add
ja
add
jb
or
mov
cmp
adc
push
push
mov
sbb
inc
call
push
dec
adc
or
scas
testb
lock
stos
decl
in
pop
push
xor
loopne
jmp
jo
and
mov
adc
adc
mov
add
add
xchg
lock
sbb
sbb
sahf
outsb
inc
push
pop
les
and
push
jne
push
cld
stos
mov
roll
negl
adc
sbb
test
js
xor
mov
and
pop
sub
movsl
ss
add
loope
inc
outsb
icebp
or
mov
or
mov
mov
call
add
loopne
push
mov
sub
jl
or
mov
add
mov
mov
lcall
lahf
add
test
lds
cs
mov
sbb
dec
cwtl
push
jmp
test
inc
imul
jae
ret
sbb
xor
and
pusha
or
push
lods
sub
hlt
push
push
xor
int3
pop
adc
es
enter
fcoms
xchg
cltd
add
pop
mov
cmc
pop
mov
mov
mov
inc
and
shll
jl
addb
div
mov
cmpsb
mov
mov
mov
xchg
push
pop
adc
je
rcrb
cwtl
test
jo
fsubl
idivb
pop
or
and
addl
dec
icebp
adc
add
cmp
push
fmul
shl
mov
testl
fisttps
lock
add
inc
cs
add
mov
in
or
push
stos
ficoms
hlt
mov
loop
je
sbb
mov
lcall
insb
cmp
add
and
pop
adc
pop
xor
out
adc
orb
mov
dec
and
into
inc
inc
or
insl
sub
pop
xor
mov
std
and
orb
mov
push
pop
or
add
cli
add
shll
lock
jno
pop
dec
lods
test
lfs
add
repnz
pop
inc
ret
mov
inc
ret
cmpsl
adc
out
enter
sbb
adc
in
rcr
cld
or
pop
adc
addb
jb
pop
aas
push
push
es
and
out
loopne
cltd
mov
mov
test
subl
mov
test
shrl
pusha
jbe
mov
inc
rorb
mov
mov
mov
jbe
add
lock
lock
mov
dec
inc
je
sbb
add
bound
add
and
push
in
dec
popa
xor
sub
mov
pushf
ljmp
movsl
or
mov
add
sbb
dec
out
adc
notl
xor
test
sub
mov
cmp
xchg
icebp
add
push
push
stc
jo
gs
adc
xchg
push
xorb
or
xorb
and
aad
adc
and
lret
inc
xchg
dec
adc
aam
movsb
mov
in
add
incl
mov
and
cmp
add
fldl
push
orb
sahf
mov
add
lock
ljmp
add
or
inc
cmp
das
push
sahf
ljmp
loop
inc
lock
lock
add
mov
aas
jecxz
mov
test
mov
mov
xchg
or
add
mov
decl
or
or
rorb
sti
or
outsb
adc
or
xchg
repnz
lock
sub
in
xchg
ret
push
test
lea
adc
fisubrl
xor
incb
jbe
add
sbb
mov
mov
mov
cmp
fstps
sti
sti
repz
testb
nop
jmp
cwtl
adc
test
push
sub
sbb
scas
shrl
xor
add
jp
mov
adc
mov
add
mov
push
dec
or
push
js
xchg
push
and
or
mov
or
add
ret
and
loopne,pt
or
out
mov
test
sub
sbb
add
xchg
push
sbb
cld
ret
fistps
mov
and
or
jle
repz
or
mov
subb
daa
push
mov
mov
cli
mov
push
add
or
adc
xchg
jg
add
or
je
jo
pop
subb
sahf
sbb
jmp
loop
and
jae
pop
fwait
or
push
lock
test
or
nop
rorl
test
add
test
add
sbbl
sti
xorl
jmp
mov
or
aaa
xchg
cwtl
mov
out
cld
jmp
push
cmp
cmp
addb
pop
cmp
adc
adc
add
adcb
add
adc
cltd
push
push
and
xor
subb
push
sbb
call
add
loopne
mov
rcll
cltd
scas
or
and
insl
push
js
push
test
add
sub
fisttpl
jbe
adc
in
and
test
notb
rclb
pop
pop
push
rorb
and
push
test
and
add
and
or
les
ret
pop
ret
data16
orb
hlt
js
out
das
mov
clc
mov
adc
rolb
mov
add
jae
lea
les
or
push
push
mov
inc
pop
das
shl
mov
add
inc
ret
cmp
add
dec
aam
pushf
mov
push
sub
push
cmp
lahf
lret
fs
pop
adc
js
stc
fiaddl
into
xor
es
ljmp
mov
mov
mov
das
fmuls
jae
addb
clc
add
test
cmp
push
aam
psubw
add
lods
cmp
clc
and
fsubrp
push
sti
inc
add
pop
data16
inc
shrl
stos
shll
in
cli
jb
mov
cld
cmpsb
sar
jae
jmp
clc
lea
cmovs
inc
or
mov
aaa
out
xchg
add
insb
mov
incb
push
lea
push
and
cmp
rclb
adc
inc
and
pop
subb
xchg
cmp
sbb
add
xchg
mov
lcall
pusha
cmp
daa
or
dec
push
mov
add
sbb
mov
and
or
jmp
mov
mov
ret
loop
or
loop
fs
or
sarl
fadd
push
pusha
pop
mov
and
mov
push
enter
or
or
lods
pusha
into
adc
push
cld
scas
clc
push
mov
push
in
cmp
out
or
gs
repnz
test
jb
push
dec
or
shll
xor
dec
ds
xchg
outsl
mov
jge
jmp
mov
cmpsb
push
adc
aas
or
pusha
add
lock
adc
sub
or
or
cmpsb
jl
sub
jb
setl
xor
dec
pop
icebp
mov
pop
adc
in
in
test
jbe
jg
sub
out
add
jno
and
or
jb
add
clc
outsl
sub
loope
or
jg
or
sbb
mov
pop
imul
or
mov
fmull
pusha
pop
sub
sbb
fsub
dec
pushf
clc
jmp
mov
pusha
add
add
add
sbb
jg
dec
adc
or
enter
mov
push
clc
or
in
inc
xchg
push
push
pop
loopne
or
dec
enter
xchg
inc
outsb
test
and
push
sbb
in
pop
je
cmp
hlt
push
mov
xchg
xor
in
jecxz
loopne
sbb
adc
inc
dec
sub
mov
pop
jg
gs
mov
repnz
mov
in
incl
push
or
jmp
inc
call
cmpb
das
pusha
xchg
pop
fsts
dec
xchg
ret
xor
sbb
decl
push
out
pop
andb
mov
pusha
push
scas
lea
push
and
cmc
mov
imul
outsl
xor
mov
push
mov
bound
jne
or
insb
adc
pusha
es
mov
cmp
gs
xor
mov
sbb
pop
xchg
loopne
cld
sbb
push
add
push
sti
push
or
ja
pop
dec
add
inc
cmp
xor
push
mov
sub
call
sarb
push
js
sar
pminsw
dec
mov
jp
add
in
or
incl
loopne
je
movl
pop
mov
loope
aaa
outsb
adc
imul
mov
jmp
push
mov
stos
dec
movsl
inc
xchg
push
cmp
cmp
push
mov
leave
imul
xor
call
hlt
cmp
test
and
add
or
aam
insl
outsb
dec
or
in
adc
mov
xchg
lods
mov
pop
push
rcll
pusha
lods
and
pusha
jno
sti
mov
scas
dec
mov
sub
dec
call
push
lock
movsb
pop
jmp
and
adc
lcall
inc
inc
push
mov
cmp
loopne
sbb
aaa
sbb
adc
arpl
jo
sub
or
mov
adc
sub
inc
icebp
sub
inc
sub
insl
outsl
xchg
movb
stos
sahf
mov
xor
icebp
aam
sar
cmp
adc
jo
jp
jb
je
mov
out
cwtl
pop
stos
jg
and
lock
cmp
xchg
fbstp
js
add
xor
xchg
fiadds
mov
or
add
faddl
mov
xor
hlt
or
fisubrl
mov
adc
mov
stos
cmc
decl
sbb
inc
inc
add
pop
idivb
ja
and
lcall
add
sub
add
pop
mov
or
push
mov
mov
je
jg
sti
push
jno
or
scas
or
inc
nop
repz
roll
sti
push
pop
fnsave
je
cld
push
push
lcall
sbb
mov
push
lods
jle
mov
fldt
jo
push
repz
outsl
lcall
sbb
adc
or
sbb
aaa
rolb
mov
rorb
cmp
mov
pushf
fidivs
mov
nop
cld
incl
fdivs
or
sbb
icebp
dec
faddl
dec
cli
mov
add
sbb
adc
jnp
add
out
jl
cmp
dec
pop
outsl
cli
cmp
mov
out
xor
inc
sub
mov
lock
xor
ljmp
dec
dec
xor
mov
dec
lret
add
xor
push
adc
mov
cld
in
xchg
mov
test
lret
sub
inc
and
add
call
loope
mov
mov
jo
add
insb
mov
add
lock
xor
pop
and
add
mov
sub
dec
adc
add
icebp
aam
repz
inc
sub
push
and
mov
jg
jmp
out
xor
jae
push
xor
inc
lock
xor
scas
xor
mov
push
lret
lock
adc
add
push
std
mov
mov
xchg
push
mov
test
test
test
stos
pop
sub
lret
mov
or
movsb
loopne
sub
loopne
add
sbb
sbbl
push
push
je
inc
xor
or
je
add
adc
repz
mov
sbbb
cmp
and
mov
lret
roll
and
cld
test
loope
push
nop
repz
cmp
cmp
je
push
xor
mov
adcb
pop
xbeginw
dec
xor
mov
sbb
cmp
push
clc
stos
je
pop
inc
mov
les
sbb
stos
pusha
dec
inc
add
cmp
mov
movsb
pop
push
xchg
in
dec
sub
push
shlb
push
xor
not
dec
call
pop
push
push
adc
mov
mov
mov
cmp
inc
aaa
xchg
aad
and
xchg
sbb
or
or
cmc
add
fdivs
stos
enter
push
or
repz
lock
jl
jl
aaa
movsb
pop
ljmp
and
xlat
add
in
mov
lock
mov
into
and
add
add
or
mulb
push
mov
shlb
add
push
adc
or
mov
add
mov
add
dec
cld
xchg
mov
mov
sbb
jg
add
out
mov
je
sbb
sub
push
call
cld
mov
push
sbb
and
lock
jae
or
add
inc
xchg
xchg
mov
adc
jge
lock
pusha
sbb
mov
mov
test
pop
pop
cmpb
loope
sub
push
cld
push
mov
ret
or
sbb
xchg
test
push
int3
movsb
add
addb
xchg
loop
add
or
push
jg
mov
add
inc
xor
pop
outsb
fbstp
ss
pushl
subl
scas
sbb
inc
add
out
mov
aaa
outsb
xor
mov
outsb
sbb
adc
or
push
scas
in
inc
push
mov
sub
push
add
sub
out
push
hlt
ret
sbb
mov
rorb
cld
jns
and
push
popa
adc
fwait
int
imul
outsl
mov
clc
adc
or
stc
mov
add
jo
mov
jle
jb
mov
push
cmp
push
sbb
ss
xchg
mov
incb
pop
test
das
or
add
mov
shlb
lods
inc
call
lock
xchg
lcall
cld
pop
push
repz
addb
dec
stos
dec
jb
sbb
xor
pop
jl
pop
or
jg
shr
jle
add
andl
inc
xor
mov
lret
inc
icebp
adc
loopne
jb
adcl
scas
pop
inc
shlb
mov
or
subb
cmp
std
inc
mov
mov
lea
pop
push
lds
push
test
loopne
mov
sbb
in
repz
frstor
add
inc
add
or
jno
clc
add
outsl
push
jl
ret
add
dec
mov
or
pop
pop
add
mov
imul
scas
test
rcll
repnz
movsb
mov
icebp
in
incl
xor
sub
jb
std
je
cld
add
sti
idiv
in
mov
stos
cli
add
stc
add
clc
add
add
stos
testb
mov
pop
cmc
add
repz
sub
push
icebp
add
jo
aaa
pop
push
push
enter
ret
sbb
inc
das
sub
loope
ret
inc
pop
imul
inc
das
push
or
shr
imul
and
cmp
loope
mov
and
out
ss
loop
mov
nop
lcall
scas
incb
outsl
push
sbb
pop
cld
add
pop
iret
sub
cld
stc
mov
lods
out
loopne
sbbb
lock
inc
xor
add
pushl
andl
xchg
cmpl
jns
dec
mov
and
enter
add
fsubrl
inc
mov
fimull
cwtl
rclb
mov
add
adc
rolb
pop
out
xor
mov
mov
dec
std
popf
loop
loop
push
jl
and
adc
xchg
aam
inc
rclb
je
sub
or
sbb
pop
clc
and
jo
jmp
enter
adc
jg
ds
addl
dec
pop
in
sub
push
sti
mov
rcll
adc
cmc
lods
enter
and
or
or
les
and
popf
aaa
sub
jnp
fcoms
fisubrl
loop
sbb
jbe
xor
rol
fistl
lods
in
out
mov
adc
push
movsb
sub
pop
mov
and
cs
and
rolb
ret
cvtpi2ps
add
adc
adcb
xor
out
and
sbb
fucomip
push
sbbl
scas
pop
add
ret
ss
add
incl
ss
adc
ds
sbb
add
ds
int3
inc
clc
or
adc
je
sarb
and
loope
rorb
test
cmpsb
jb
adc
mov
roll
jg
push
cmp
xorl
roll
push
fisttps
xor
jb
insb
sbb
cmp
lea
in
popa
cmp
dec
shlb
cld
sub
sbb
das
and
or
or
divb
testl
push
jp
fsubl
push
adc
xor
xchg
push
mov
cmpsb
cmpsb
push
int3
stos
push
push
push
or
cmp
scas
clc
aas
add
mov
mov
inc
lret
and
jl
xchg
mov
xchg
test
loop
mov
mov
adc
adc
je
jl
mov
jb
cmp
pop
xchg
pop
add
push
lea
inc
inc
pop
mov
fsubs
enter
mov
cli
and
mov
sub
add
in
je
cld
fld
inc
js
sbb
jns
in
mov
jbe
and
mov
mov
hlt
loopne
or
shlb
jmp
ds
cmp
dec
and
int
xor
sub
aam
loope
and
into
adcb
nop
pop
andl
or
adc
add
jl
cld
add
mov
push
mov
mov
ret
jge
jno
xor
stos
or
xor
inc
xor
xor
sti
add
lea
outsb
cmp
adc
adcl
sbb
addb
insl
sub
rol
sbb
loop
sti
cmp
mov
sub
es
add
dec
loop
and
pop
add
cli
add
push
mov
push
pop
fs
sub
dec
xorb
mov
sub
sbb
sbb
mov
rorb
loopne
addb
add
enter
push
aam
mov
and
adc
sub
loopne
je
fsubl
scas
pop
or
incb
fmuls
mov
cmp
pop
add
popa
jae
inc
insb
call
les
and
fildll
xchg
sub
dec
jl
fmuls
inc
mov
jg
and
jae
insl
bound
and
scas
and
adc
outsl
insl
and
xchg
and
fisubrs
popa
xchg
je
shll
ja
adc
outsb
dec
clc
jmp
xor
cmp
xor
loopne
incb
or
inc
push
loope
int3
notb
push
jp
pop
outsb
rolb
lea
scas
mov
call
xor
ja
or
jne
lea
mov
add
aad
andb
pop
and
adc
jg
jmp
inc
cmpsb
push
mov
add
and
loopne
push
add
sarb
sub
jne
shll
pop
dec
mov
push
cmp
sahf
and
jg
aas
add
or
xor
or
pushf
pop
mov
jo
jno
or
lahf
enter
or
imul
dec
push
adc
mov
push
cmpsl
fimull
add
dec
or
push
mov
inc
punpcklbw
xchg
inc
jne
or
pop
xor
push
cmp
rorb
pop
pop
push
loope
and
loopne
push
icebp
sbb
cmp
addl
pusha
inc
mov
outsl
das
cltd
loopne
and
mov
movsb
mov
xchg
mov
jl
mov
stos
add
push
mov
lods
add
adc
fmull
or
neg
jns
cmpsb
adc
loop
mov
jg
xchg
adc
jbe
cmp
and
sbb
stos
xor
sahf
scas
push
inc
and
not
movsl
imulb
mov
xchg
ja
or
xchg
push
add
inc
mov
mov
cmp
push
pop
xor
mov
fs
ja
push
imul
les
int3
lock
sarb
fst
hlt
out
add
or
jle
mov
mov
lock
mov
je
and
test
hlt
jo
jo
and
xlat
stos
mov
sub
out
mov
jge
je
test
push
sub
jle
add
imul
cmp
fisubl
add
mov
incl
outsb
add
lock
xlat
add
lods
xor
int
mov
call
jne
loopne
call
stos
icebp
xor
inc
jl
repnz
push
incl
jne
out
hlt
jbe
ljmp
mov
movsb
fadds
xor
add
or
dec
ret
mov
data16
out
add
inc
add
jle
mov
dec
hlt
shlb
push
and
or
jae
lea
daa
add
add
loopne
dec
lods
add
inc
jl
fwait
lret
je
or
cli
add
fildll
fiaddl
aam
mov
je
movsb
mov
cld
dec
repnz
stc
add
push
xor
push
push
stos
inc
add
adc
pop
add
add
push
jne
and
pop
aaa
cs
cld
dec
cmpsb
mov
addb
rcrb
shrl
dec
pop
test
cld
insl
bound
js
jne
es
add
add
clc
mov
nop
lock
mov
or
sub
xchg
sbb
sbb
adc
pop
hlt
mov
inc
push
addb
pop
jo
sbb
orb
imul
lods
cwtl
jmp
pop
push
icebp
xor
xor
test
or
xchg
in
xor
or
xchg
mov
add
cltd
sub
jo
scas
clc
mov
or
mov
lea
adc
push
lock
pop
pop
mov
lea
pop
inc
cmc
inc
xor
jno
jl
cld
xchg
aad
mov
mov
cmp
mov
repnz
and
aam
push
test
shlb
and
in
repnz
test
jp
icebp
clc
add
add
or
push
add
push
icebp
dec
mov
mov
inc
pusha
and
and
and
pop
mov
ss
fmul
aas
pushf
or
rcr
or
aam
in
cmp
rorl
xchg
push
lock
negl
into
les
movsl
xor
inc
repz
mov
das
mov
lock
sub
jle
or
decl
loop
mov
or
outsl
mov
mov
xor
js
jecxz
adc
sbb
fcmovu
outsl
and
mov
lcall
out
repnz
sbb
subb
dec
pop
movsb
mov
fmuls
add
imul
push
inc
rcrw
cld
inc
iret
sub
mov
pop
and
addr16
adc
add
lock
adc
stos
mov
sahf
push
jle
jo
ja
dec
clc
mov
push
pop
xor
cmp
stos
mov
or
mov
push
mov
jmp
dec
inc
cs
add
mov
or
mov
ret
push
inc
push
adc
js
xor
in
das
xor
xorl
and
or
pmullw
xor
cld
pop
inc
inc
out
mov
and
mov
mov
fdivr
setns
inc
mov
clc
dec
or
adc
mov
inc
jo
inc
adc
mov
sub
sub
jmp
mov
xchg
inc
pop
push
or
xor
xor
jmp
data16
sub
sbb
mov
mov
jb
add
adc
icebp
jle
or
in
pop
jg
add
adc
or
call
xor
shlb
xor
adc
pop
jmp
ret
loop
and
cmp
add
adc
cmp
mov
mov
cs
movsl
test
jbe
aam
or
dec
addb
adcb
add
je
add
sbb
nop
xor
mov
scas
adc
mov
ja
adc
sbb
shl
lock
in
push
insl
inc
dec
fildll
je
adc
jo
dec
adc
inc
push
je
lret
loopne
push
pop
orb
xor
jg
add
mov
sbb
je
xor
scas
mov
mov
sub
sbbl
loop
push
mov
das
add
jne
push
stos
mov
in
and
mov
jmp
cmp
clc
xor
les
cmpsl
push
aad
je
jg
data16
xchg
jbe
or
and
sub
into
ja
jl
loop
and
out
add
xor
xabort
sahf
dec
std
sbb
jae
movsb
andl
mov
xor
mov
push
sbb
hlt
xor
cmp
adc
shl
push
sahf
xor
mov
mov
mov
xchg
lock
pop
add
adc
lret
xchg
sub
lea
mov
sub
and
fisttps
cmp
pop
cmp
out
sbb
and
sbb
lock
idivb
sbb
add
ss
popf
clc
pop
ss
and
adc
xor
hlt
cmp
es
hlt
stos
cmp
mov
les
stc
shl
cmp
loop
adc
stos
icebp
and
aaa
mov
aad
jmp
mov
push
icebp
push
inc
mov
call
and
and
adc
nop
loopne
ja
dec
push
push
push
and
mov
push
clc
std
adc
inc
inc
push
stc
or
shlb
mov
xor
imul
or
dec
push
add
push
bound
xchg
mov
xchg
xchg
test
add
cmp
andb
jmp
mov
jbe
outsb
movsb
call
add
fwait
enter
cli
mov
testb
mov
mov
ljmp
add
cmpl
sar
add
movsb
jmpw
shr
push
jmp
ja
mov
sbbb
movsl
inc
xor
test
cli
dec
mov
xchg
inc
addb
inc
cs
nop
addb
cmp
sub
jecxz
jl
dec
hlt
mov
cmpsl
mov
sbb
push
pop
es
push
jl
roll
cmp
xchg
mov
dec
jle
or
lods
pop
ss
adc
cmp
mov
and
pop
cmpb
inc
notb
test
ja
sbb
dec
or
mov
sbb
and
sbb
xor
outsb
call
sub
data16
jle
sub
xchg
inc
mov
mov
pop
dec
js
les
add
ret
arpl
call
xor
add
pop
pop
dec
lea
testb
xor
inc
or
dec
add
sbb
push
sbb
clc
rclb
sub
inc
xchg
lods
push
or
test
pop
rorb
jb
movb
sbb
hlt
mov
sbb
or
scas
mov
add
ss
mov
push
roll
sub
jne
cltd
ret
mov
lods
pop
test
jle
sub
les
popa
add
mov
xor
dec
bound
mov
testb
rorb
nop
roll
cwtl
shrl
shll
and
jmp
push
call
aas
rcrb
adc
arpl
inc
adc
inc
cmpb
ljmp
sbb
jmp
stos
add
or
out
add
adc
add
pop
loop
push
mov
xchg
mov
js
inc
fisubrl
fidivrl
sub
push
lret
jle
cwtl
int
int3
xor
add
cmp
sbb
push
lock
and
pop
jb
loopne
pop
adc
je
push
loop
rolb
mov
inc
jmp
sub
ret
mov
pop
ss
fscale
nop
stos
ret
push
xchg
adc
push
add
stos
add
pop
call
mov
ljmp
xor
sbb
or
inc
inc
rorb
aas
dec
jp
xor
adc
aam
ljmp
push
aam
sti
sbb
add
and
mov
lock
jg
js
ja
cmp
mov
bound
push
hlt
fbstp
loopne
and
cwtl
popa
and
inc
loope
lret
xchg
add
mov
sub
lea
insb
sbb
unpcklps
or
xor
xor
lret
mov
mov
jle
cmp
es
mull
bound
imul
lret
push
add
pop
mov
dec
add
dec
or
jl
std
test
mov
fdivp
es
pusha
sub
lahf
dec
pusha
add
mov
mov
mul
sbb
loop
sbb
adc
and
loope
dec
dec
lock
bound
push
imull
sbb
je
popa
imul
daa
and
lock
mov
push
jno
jmp
jle
jle
sbb
cmp
cmpsb
pop
xchg
outsb
out
cli
iret
add
mov
cmp
push
inc
call
pop
decl
jg
loope
adc
mov
mov
jg
cld
into
popa
xor
mov
popa
adc
push
adc
cld
idivb
loope
adc
pusha
add
push
je
adc
in
incl
hlt
adc
arpl
adc
pusha
pop
add
gs
jecxz
pop
cmp
mov
out
clc
decl
int3
test
xchg
add
mov
inc
bound
repnz
cmp
add
adc
mov
dec
mov
pusha
dec
mov
cmp
mov
loop
pusha
pop
insl
push
sub
loopne
repnz
adc
pop
push
sarb
adc
jl
dec
loop
mov
std
loopne
push
inc
add
fmull
insl
outsl
push
mov
pusha
in
pop
add
loop
add
in
inc
outsl
mov
pop
add
inc
mov
icebp
jg
decl
lea
pusha
bound
lea
xchg
cmpw
mov
inc
pusha
mov
sub
push
jne
cltd
cmpl
mov
stos
enter
adc
add
xchg
arpl
mov
cltd
nop
cltd
jb
mov
inc
mov
cmp
ljmp
loope
in
cmc
push
xchg
push
lcall
dec
sar
cmp
rolb
pop
pop
arpl
loope
je
ds
adcl
jle
in
scas
adcl
inc
loope
mov
mov
jg
sub
adcl
push
cmc
decl
inc
sbb
ja
and
push
pop
cmp
call
arpl
push
mov
gs
pusha
cmpsl
sub
addb
ret
ja
dec
jmp
je
popa
mov
loope
push
mov
lret
and
call
orb
js
orb
test
adc
or
in
add
pop
loopne
pop
loop
incb
loopne
dec
dec
or
mov
loopne
inc
cli
out
pop
pop
in
call
add
and
loop
leave
loop
sub
test
enter
data16
icebp
dec
adc
into
in
and
adc
loope
jle
testb
mov
dec
sub
mov
mov
adc
jo
sbb
mov
mov
ss
pop
xor
dec
add
add
notl
stos
mov
nop
push
or
xchg
leave
sbbb
xor
push
adc
sbb
adc
xchg
imulb
xor
xchg
je
jns
clc
es
add
xchg
nop
in
jnp
xchg
pop
or
pop
fidivrl
adc
test
cmpsl
mov
mov
xor
push
xchg
add
aam
scas
jo
std
jge
subl
mov
push
ss
sbb
lock
jl
xor
xchg
xchg
jnp
pop
icebp
pop
add
xor
push
hlt
cs
mov
sub
and
movsl
mov
pop
mov
add
les
sti
mov
adc
add
les
dec
imul
addb
inc
cmp
mov
xorb
mov
ret
sahf
pusha
push
dec
jbe
and
pusha
adc
mov
ret
sahf
or
xor
mov
add
js
mov
inc
mov
push
push
test
mov
andps
test
fs
add
lock
and
mov
jno
mov
dec
pop
pop
popa
vdivpd
test
mov
imul
add
cli
push
add
les
addb
fcoms
movsb
pop
call
adc
xchg
ret
add
push
lods
lea
lock
mov
sbb
or
xchg
jno
xchg
test
stos
jg
or
xchg
cli
sbb
cmp
sbb
mov
or
pop
xor
cs
jg
aas
mov
jns
jo
dec
xchg
lock
pop
dec
out
mov
sub
or
aaa
call
call
fwait
and
xorb
push
call
mov
mov
lock
lock
fs
mov
aas
imul
outsl
les
mov
mov
jne
insb
cmpsb
xor
xor
aas
xchg
xorb
addl
jge
jb
inc
adc
decb
cld
pop
ret
mov
lea
out
add
xor
inc
rcrb
fimull
es
aas
and
mov
adc
jb
clc
inc
adc
xor
xchg
incl
sahf
adc
mov
mov
xacquire
push
adc
push
inc
dec
lcall
fisttps
add
xor
mov
mov
repnz
enter
mov
ret
and
adc
mov
roll
imul
loopne
mov
mov
clc
cmp
adc
inc
loop
add
add
filds
cmp
push
pop
je
jne
sub
push
jbe
inc
loopne
rorl
adc
cwtl
addb
int3
push
add
mulb
mov
pop
cmp
nop
mov
xor
xor
mov
out
js
cmc
shr
ds
xchg
mov
mov
dec
dec
adc
push
dec
add
push
ja
mov
or
mov
adc
push
scas
xchg
shl
sbb
cld
inc
mov
dec
jo
dec
frstor
dec
xor
ljmp
movsb
lea
and
or
lods
cmpsb
ret
mov
test
js
mov
test
incl
lods
clc
or
repnz
inc
mov
sbb
cld
add
xchg
xchg
enter
adc
jg
xchg
jbe
repnz
xorl
jb
dec
xor
push
pop
jbe
and
inc
push
call
outsb
add
dec
push
mov
dec
add
cs
cmc
mov
adc
push
mov
pop
lea
mov
xchg
and
push
mov
decl
mov
rorb
jg
jbe
je
push
inc
mov
mov
adc
sub
hlt
and
mov
add
jb
or
or
cmp
wrmsr
push
mov
aas
xor
repnz
subb
mov
or
je
mov
sbb
mov
add
add
xchg
push
adc
inc
dec
cmp
mov
sbb
pop
inc
adcb
aad
loopne
rcrb
cli
ja
mov
add
pop
jno
and
loopne,pt
cmpl
add
mov
jo
movsb
sub
jmp
add
push
arpl
incb
cmpsl
mov
inc
xchg
cmp
cwtl
stc
add
sbbl
je
ss
push
insb
fistpl
in
decl
neg
cld
xor
sub
test
cmp
jge
cltd
or
adc
notb
and
or
rclb
ljmp
push
sub
dec
mov
or
add
sahf
roll
loope
adc
sti
push
subb
mov
test
lock
xor
pusha
pop
cmp
cmp
decl
jle
into
ja
jl
rorl
xor
enter
or
or
adcb
enter
jp
inc
decl
xor
testl
outsb
jne
fadds
add
out
cs
sbb
adc
lods
std
incl
dec
push
mov
push
push
push
subb
mov
xor
pop
xor
inc
push
std
mov
cpuid
addl
mov
gs
call
imul
mov
xchg
xchg
cs
loopne
in
push
jne
cmpsb
clc
xchg
aam
add
cli
pushf
enter
loopne
xor
add
pop
pop
cmpsl
jmp
fildll
jg
emms
out
add
mov
push
mov
pop
cmp
shl
hlt
cs
pop
loopne
pusha
shl
aas
cmp
mov
aad
shr
xor
ds
adc
xchg
mov
inc
les
push
push
sbb
out
adc
incb
icebp
push
or
cmp
mov
cmp
jae
mov
insl
lock
xor
lods
mov
ret
adc
divl
pop
sub
jo
pop
dec
sub
add
push
adc
fadd
mov
xor
lock
or
je
clc
or
pusha
faddl
outsb
add
xorl
mov
mov
and
clc
cmp
adc
ret
push
sbbl
mov
int
loopne
pop
sbb
jb
aad
fldenv
lds
cwtl
add
jg
inc
and
mov
sbbb
sub
and
mov
or
std
sub
pop
and
pop
inc
add
add
jle
xchg
sub
cli
add
adc
cmpsb
push
fs
nop
dec
sbbl
adc
push
dec
inc
add
sub
push
into
jmp
xchg
movsl
push
cs
and
lcall
mov
je
add
jmp
add
cmovnp
test
push
enter
clc
scas
xor
flds
adcb
jge
xor
mov
popf
ss
jo
pop
mov
jle
or
cmp
jbe
sub
inc
adcb
jmp
orb
outsb
outsl
push
lods
jbe
add
sub
dec
in
sbb
adcb
lods
push
les
addb
fsqrt
lcall
xchg
jmp
adcl
adc
mov
adc
add
dec
ja
outsb
stos
xor
cli
cmp
shl
sbb
adc
pxor
add
imul
add
add
ja
adc
push
ds
sbb
or
repz
jl
and
mov
unpcklps
jl
fistpl
movd
xor
fmull
icebp
inc
ret
leave
ljmp
out
stos
cmp
inc
pushl
sarb
add
mov
int
push
mov
shll
sbb
lock
inc
inc
je
les
enter
add
jge
push
fmull
add
int
inc
dec
std
lock
cmp
xor
lahf
add
xor
mulb
bound
cli
pop
movq
je
lcall
fdivr
dec
int3
xchg
sub
rcrb
adc
or
mov
scas
clc
adc
hlt
sub
outsl
js
test
rcrb
lea
lock
js
test
jle
call
push
mov
push
cmpsb
mov
adc
mov
cs
dec
icebp
incl
mov
mov
rclb
fildl
add
jl
movl
subb
and
and
sub
xor
cs
jle
and
cld
pop
movsb
test
je
int3
or
pop
rcll
pop
sbb
lret
ljmp
lcall
push
pop
rorb
lret
ret
mov
rorl
sub
ret
pushl
adc
sub
push
repz
insl
les
add
loop
gs
cs
cld
das
jp
sbb
add
mul
or
sbb
push
mov
and
mov
sub
and
xor
push
push
loope
dec
sbb
sbb
add
loopne
mov
pop
xchg
xor
add
add
fists
push
lock
inc
mov
pusha
pop
pop
cmp
dec
mov
dec
clc
push
shrl
or
loope
aam
and
mov
lret
lea
pop
jge
sbb
fistpl
jp
aam
mov
scas
push
adc
jmp
or
adc
jbe
mov
dec
lcall
add
sub
mov
push
outsl
add
fdivp
or
fdivp
hlt
test
add
or
repz
inc
sbb
pusha
dec
push
dec
mov
aam
add
lds
sti
mull
add
adc
adc
mov
rol
aaa
jl
push
inc
stos
call
clc
rcrl
into
mov
movsb
jbe
test
mov
mov
scas
mov
data16
push
adc
add
fwait
loopne
ljmp
add
dec
dec
mov
in
out
mov
mov
mov
scas
xchg
nop
cltd
xor
dec
mov
rclb
inc
loopne
jge
mov
mov
jmp
add
aaa
add
inc
pusha
sbb
pop
xchg
add
add
mov
movl
inc
sbb
adc
and
shlb
andb
clc
les
xchg
mov
sub
movsl
lods
mov
icebp
dec
adc
add
stos
bound
pop
add
add
inc
add
jbe
inc
sbbb
bnd
jle
pusha
es
and
ret
test
aaa
mov
bound
pusha
mov
jns
addb
sub
mov
and
add
cli
movsb
xchg
add
mov
mov
jne
push
outsb
sub
cmp
pop
dec
jp
sbb
or
ret
push
add
adc
inc
mov
ss
push
push
push
pushf
rorl
xchg
push
lock
pusha
insb
cmp
pop
or
test
dec
or
mov
adc
adc
mov
add
std
lock
fdivrl
push
adc
xchg
movb
les
lods
pop
jbe
pusha
fdivrl
adc
add
push
push
loope
sbb
aad
dec
out
add
mov
pusha
mov
in
add
adc
cmp
xor
ret
stos
aaa
add
cmp
hlt
push
int3
cmc
sbb
mov
push
loope
das
adc
aaa
je
mov
jno
stos
clc
rcrb
rcrl
adc
mov
add
data16
rolb
fsubr
jb
sbbl
lcall
pop
xchg
jp
sbb
push
adc
adc
push
in
outsb
enter
mov
lahf
xlat
aam
and
adc
clc
or
je
ss
loop
sarb
mov
lea
pusha
push
or
into
and
mov
adc
jl
inc
ret
test
je
clc
inc
insl
sbb
dec
or
movsb
and
mov
callw
sub
sub
aam
les
int3
pusha
out
inc
outsl
xchg
orb
mov
and
or
int3
mov
push
mov
les
test
jo
xchg
and
adcb
push
roll
cs
pop
lock
sub
or
xor
push
jge
movsb
cmp
push
movsb
adc
xchg
outsb
lods
sub
stos
jle
inc
inc
sbb
filds
add
shl
jb
mov
inc
fidivrs
sbb
xlat
and
mov
sub
cli
stos
add
or
or
addl
jmp
outsb
adc
push
mov
insb
cli
adc
mov
push
jle
mov
mov
sub
add
stc
hlt
fcomp
popa
inc
and
add
aas
pop
dec
mov
sub
insb
jp
into
lock
mov
test
scas
inc
mov
orb
jecxz
int3
fsubl
sahf
adc
cli
gs
dec
mov
imul
and
das
cli
mov
pop
repnz
call
jns
dec
orb
cmp
lock
inc
sub
hlt
adc
repnz
or
fwait
ret
loop
xchg
mov
pushl
movsb
mov
mov
mov
pop
mov
mov
shrb
adc
mov
xchg
mov
mov
pop
adc
jbe
rcr
inc
bound
mov
orb
or
sbb
jp
xor
add
cmpb
sbb
mov
fs
bnd
pop
fiadds
push
test
dec
sub
jno
sbb
sbb
sbb
mov
mov
decb
gs
jp
dec
rorb
sbb
mov
mov
jo
lcall
movsb
adc
sub
enter
mov
xor
cs
ljmp
push
ret
lock
and
cli
sub
pop
mov
scas
sub
les
or
pop
les
inc
test
push
fcomps
ret
icebp
push
dec
call
inc
lock
inc
add
add
insl
dec
scas
cmc
sub
and
sbb
push
or
lods
adc
sbb
fnsave
inc
or
adc
push
dec
adc
mov
add
clc
add
dec
cld
sbb
fldpi
xor
xchg
pusha
sub
scas
cmp
mov
jbe
cld
test
inc
mov
inc
pop
add
and
sbb
mov
inc
cmp
sub
add
cmp
bound
jo
inc
mov
ficompl
and
sbb
outsb
add
add
and
movsb
push
clc
sub
fisubs
mov
lock
xor
stos
fsubl
fadds
in
fcomps
cltd
hlt
rolb
push
fsubr
sbb
mov
lea
out
sub
xor
movsb
sub
push
jl
out
sub
js
je
sub
imul
push
std
or
add
or
rorb
add
test
int3
sub
loopne
sbb
inc
pop
rclb
push
xor
push
ret
rolb
cmp
subb
xor
push
mov
dec
and
ret
mov
sub
push
add
push
movsb
rorl
mov
shlb
adc
mov
fiadds
movsb
jp
xor
loope
sbb
sbb
lods
push
out
add
fimuls
mov
mov
adc
sub
cwtl
shlb
lea
pop
mov
mov
add
jo
sarl
xchg
inc
scas
cmp
ret
addr16
push
add
or
cmp
enter
add
mov
and
pop
std
add
push
push
xlat
mov
fs
xchg
sbb
les
insb
dec
adc
xor
call
push
push
sub
daa
add
mov
sbb
push
cmp
in
mov
sub
xor
call
in
loopne
roll
mov
cmp
push
jae
xchg
inc
mov
repz
xor
mov
xor
pop
rclb
cmc
repz
hlt
mov
lds
dec
cmp
add
jo
stos
jo
xchg
mov
and
lcall
cli
ret
stos
xchg
mov
stos
ja
loope
jne
jbe
sbbl
sar
or
push
jns
jns
loopne
mov
lock
adc
push
dec
ret
imul
jl
push
jmp
insb
add
pop
stos
bnd
ljmp
inc
pop
fiadds
fimuls
enter
mov
stos
insl
adc
pusha
or
and
pop
push
push
rcr
andb
dec
push
inc
add
xchg
ss
xor
or
int
pop
imul
and
and
sbb
fisubl
sub
push
add
add
xor
push
or
in
sub
xor
les
loopne
imul
cmpsb
imul
imul
mov
mov
push
stos
pushf
mov
mov
or
addb
or
fsub
push
mov
push
xor
sbb
add
mov
pop
shrb
pop
mov
test
cltd
adcl
sbb
add
adc
xchg
push
add
add
sahf
aaa
cld
or
in
call
lods
push
in
mov
pop
mov
testb
addb
adcb
rclb
sbb
dec
pop
sarb
add
jne
push
mov
jnp
cwtl
add
nop
mov
push
mov
push
sub
stos
test
or
push
insb
add
fs
shll
push
add
dec
inc
cmp
pop
dec
push
fld
or
add
lcall
cmp
sbb
repz
sbb
or
shrb
mov
pop
adc
or
aas
or
add
jns
cmpsb
jns
in
call
jns
cmpsb
fcom
ror
imul
mov
rcrb
add
mov
aad
lods
xor
cmpsb
imul
ds
imul
nop
mov
lcall
xor
rol
sbb
xor
inc
xor
loopne
dec
roll
sahf
pop
shlb
xchg
add
cmp
mov
xchg
inc
jnp
or
sbb
add
pushf
bound
push
dec
stc
ss
mov
cmp
jmp
push
xor
pop
jnp
xorl
mov
and
adc
int
cmpsb
jns
movsl
test
popf
cltd
xchg
es
test
xor
add
xor
jne
loopne
ret
add
mov
shll
cmpsb
mov
shll
xchg
mov
roll
int
xor
outsb
push
bound
xor
shll
push
dec
dec
inc
shll
ss
shll
push
sbb
push
or
sahf
cmpsb
stc
roll
pusha
cs
div
out
cmpsb
jns
push
ljmp
lods
jns
ror
lret
sub
lahf
cmp
test
mov
xor
jo
inc
mov
mov
inc
stos
inc
inc
mov
mov
stos
inc
inc
stos
inc
adc
and
addr16
arpl
pop
push
sbb
sbb
or
pop
add
sbb
shll
aaa
sbb
das
outsb
push
xor
in
stos
in
xor
cmpsl
popw
add
loopne
jecxz
sbb
out
in
stos
in
out
and
stos
in
or
incb
sbb
out
dec
out
inc
lock
movsb
popf
mov
jb
xlat
ret
lcall
xor
sbb
cmpsb
jns
xchg
xchg
mov
cmpsb
jns
jp
jb
lods
jns
cmpsb
push
bound
add
mov
fidivs
push
xor
or
pop
add
add
mov
lock
outsl
stos
xor
sbb
cmp
sarl
push
sbb
adc
cmp
rorl
or
add
jo
cli
pop
imul
testb
pop
pop
js
mov
lcall
andl
sbb
mov
pusha
jo
mov
add
or
mov
pop
xor
stos
mov
in
shll
inc
inc
xor
stos
xor
sub
and
push
mov
adc
sub
pop
add
stc
lcall
in
jmp
sbb
loope
mov
int
add
rcll
mov
aam
pop
daa
movsl
pop
nop
das
dec
das
sub
popl
movb
add
mov
cmp
and
jbe
mov
jne
sub
add
cmovb
or
ret
outsl
scas
call
push
mov
push
xchg
es
das
pop
movsl
pop
shlb
pop
mov
pop
movb
std
mov
inc
add
xor
imul
das
adc
push
mov
stos
add
addl
and
jp
add
in
pop
add
add
xchg
pusha
pop
sar
sub
add
mov
movzbl
das
xor
inc
pop
loopne
jo
mov
jl
leave
pop
and
cmp
add
xor
aam
in
fcoms
add
cmp
aaa
mov
sbb
jae
mov
ret
sub
adc
push
pusha
ret
call
add
add
ret
imul
and
adc
and
inc
dec
sub
mov
test
add
dec
or
xchg
jg
xor
and
pop
das
add
outsl
mov
and
and
xchg
add
cmp
add
cld
ret
cmp
adc
push
add
mov
cld
lock
cmp
call
cmpsb
add
stos
inc
fiaddl
mov
or
dec
inc
add
add
insb
dec
mov
sbbl
cli
or
mov
fisttpll
mov
cmpsl
sbb
or
ret
sub
loopne
testb
jg
add
push
ljmp
pop
dec
out
out
pop
adc
cmp
or
lock
mov
add
sub
mov
mov
repnz
or
js
push
mov
mov
inc
and
mov
jnp
or
jl
pop
or
stc
adc
adc
in
adc
adc
push
cmp
push
adc
pushf
push
xor
fcomp
cmc
or
call
outsb
jbe
outsl
jp
add
lret
sub
xchg
repnz
pop
lock
pop
stos
lock
or
sub
pop
mov
and
pop
scas
adc
nop
std
subl
incl
or
xor
jb
push
inc
jo
lock
and
push
sbb
jle
pop
and
mov
add
decb
push
xchg
cmp
insb
call
add
mov
std
xchg
rolb
and
out
sbb
cltd
std
movsl
add
outsb
ret
inc
pop
mov
ret
fiadds
out
jo
and
jo
mov
mov
inc
add
orl
call
movsb
popa
pushf
adc
jbe
shr
mov
adc
mov
pop
cmp
fs
in
and
and
sbbb
lock
pop
jo
jbe
add
outsl
sub
mov
lock
add
sbb
push
sbb
mov
test
cld
mov
jge
or
dec
sbb
or
or
jae
sbb
scas
test
cmp
xor
outsb
or
xor
cltd
xor
addl
adc
lock
jbe
add
mov
mov
xor
push
lock
sti
cmp
es
je
cli
mov
xor
fidivrs
xlat
pop
sete
and
call
mov
aam
div
push
fsubp
or
pop
xchg
shrl
insl
hlt
mov
jno
adc
mov
add
add
ret
adcb
add
add
push
add
mov
xchg
decl
xchg
add
movsl
call
jne
add
fbld
dec
add
pop
adc
ret
add
ja
stc
add
aad
sub
or
jne
add
sbb
jo
cmp
add
call
mov
lock
jae
mov
add
mov
add
and
add
dec
adc
push
cmp
int
and
add
adcb
sub
jp
fiadds
incl
adcl
test
fisttpl
push
mov
sti
pop
or
clc
xchg
mov
ja
add
fisttpl
fs
xchg
xchg
test
fcompl
lahf
inc
std
jne
or
mov
inc
add
push
sub
mov
cli
orl
sarl
mov
andb
and
stos
jmp
call
loope
pop
lods
cwtl
sbb
push
rolb
pop
cli
push
jo
or
cmc
add
or
add
jmp
sbb
loope
jae
mov
stos
orl
les
sbb
pop
cmc
out
ret
les
push
mov
mov
add
movsl
mov
outsl
or
stc
les
das
pop
fwait
cld
push
sbb
sti
push
add
dec
rcr
cmp
xchg
xor
fs
mov
fbstp
rclb
dec
inc
mov
mov
andb
add
les
xorb
mov
add
sub
push
lds
mov
repz
in
lcall
shll
or
sarb
popf
stc
rcrb
roll
jmp
call
pop
mov
nop
in
sub
std
clc
sub
rol
leave
sub
lds
icebp
ljmp
xchg
clc
ret
inc
andps
rorb
sub
stos
adc
sbb
mov
pop
std
push
call
test
pop
lock
xchg
push
les
xor
push
rol
lods
call
lcall
ss
or
sbb
div
ja
pop
or
sbb
pop
or
jne
call
jg
cld
stos
sub
in
jmp
call
addl
pop
ljmp
ret
cmp
mov
jo
inc
arpl
or
pop
xchg
mov
push
loope
add
int
loopne
movsb
mul
and
repnz
pusha
dec
arpl
loop
inc
jg
loopne
loope
decb
sbb
dec
andl
mov
adc
shlb
and
jge
setb
push
jb
mov
sbb
add
mov
js
jnp
mov
jbe
push
jg
and
xor
sbb
push
rcll
mov
sub
adc
shlb
xor
mov
cmp
jb
mov
push
fcompl
into
push
mov
imulb
cmp
je
cmp
je
adc
je
pcmpeqb
ret
fidivrl
outsl
jmp
testl
sub
ret
add
adc
loopne
pusha
mov
mov
nop
je
ret
movsb
fldt
sbb
ss
cmpsb
adc
ret
xchg
cs
stos
adc
ret
inc
jge
stc
stos
je
ret
lods
sub
clc
popf
push
cwtl
ret
mov
ret
insl
je
ret
mov
ret
outsl
je
ret
xchg
lock
add
sbb
rcr
insb
incl
loopne
mov
loopne
xor
lock
lea
dec
push
imul
lods
cmp
or
and
mov
jmp
cli
jbe
dec
xor
lock
and
mov
sbb
imul
cli
decl
and
mov
xor
sub
loope
jmp
ret
xchg
pusha
dec
xchg
mov
push
addr16
jg
pusha
pop
jmp
adc
add
pusha
xor
and
bound
pop
pop
jle
das
push
cmc
mov
pop
cmp
mov
shll
xor
adc
leave
inc
add
mov
xorl
adc
add
aaa
sbb
movsl
loopne
push
loop
add
inc
inc
insb
sub
loopne
push
adc
adc
stc
pop
pusha
inc
xor
ret
inc
gs
cmp
xlat
push
mov
mov
insl
and
int3
loop
push
sbb
ja
cmpsb
jg
cmp
push
push
call
mov
clc
test
sti
fildll
dec
clc
cli
icebp
addl
or
std
outsl
pop
iret
pusha
pop
ret
orl
popa
xor
cmpsb
mov
shr
push
enter
xbegin
inc
clc
add
sub
cs
push
fldl2e
xchg
inc
icebp
loopne
in
jg
mov
or
pusha
jbe
jg
inc
adc
jg
or
xchg
add
jge
xor
in
data16
push
call
enter
ss
or
call
hlt
pushl
out
repz
movsb
and
add
arpl
ljmp
nop
pusha
repz
cmp
jle
push
dec
adc
hlt
mov
add
sub
mov
popa
mov
mov
cmp
lock
pop
sti
and
inc
imul
push
mov
inc
mov
mov
or
incl
js
mov
pop
push
icebp
or
and
jmp
mov
sub
repz
pop
or
pop
xchg
push
add
mov
push
cs
jl
inc
in
test
pop
lret
and
fildl
cli
or
lock
inc
push
mov
dec
pop
lock
sbb
or
repz
xor
pushf
and
decb
and
xchg
cmp
int3
int3
xor
fwait
inc
jp
mov
add
movl
outsl
fucomi
cmp
dec
aaa
add
adc
popl
jge
adc
add
push
dec
adc
popa
add
push
cmp
mov
add
fisubrl
adc
xchg
or
dec
or
adc
scas
and
sbb
or
outsl
mov
ja
xchg
arpl
jae
adc
mov
adc
mov
insl
outsl
add
iret
push
jnp
test
outsb
jmp
xor
fistl
and
addr16
ret
js
mov
insb
imul
mov
xor
sbb
inc
lsl
cs
jnp
inc
sub
jno
or
pop
test
jb
dec
repz
sbb
mov
dec
sbb
out
jo
ffreep
es
sbb
mov
cmp
incl
or
mov
or
xor
add
push
loopne
sub
stos
mov
jns
sub
cmp
shrl
jl
jecxz
sbb
inc
cltd
sbb
pop
xchg
or
sbb
ja
add
add
sbb
mov
xchg
or
lea
sbb
cmp
add
inc
scas
pop
push
imul
in
pushf
nop
rorl
push
fcomp
xor
add
popa
cwtl
ret
mov
inc
mov
imul
dec
or
xor
xlat
mov
pop
fwait
mov
inc
lock
push
fwait
cmc
mov
push
loopne
and
jmp
mov
xor
cmp
add
push
in
loopne
push
sub
pop
xchg
rcrl
mov
mov
addr16
out
icebp
add
inc
or
enter
or
push
cmpsl
mov
push
movsl
jmp
add
xor
sti
lea
cmp
lds
dec
iret
fucomp
stc
or
notl
aaa
movb
or
xor
jnp
lahf
imul
mov
xor
or
and
xor
mov
push
inc
aam
testl
lahf
push
leave
lock
ss
or
or
cmp
mov
cs
repz
addr16
mov
ret
filds
adc
and
mov
ret
cmpsl
je
lods
arpl
inc
jno
jge
lock
shll
jbe
ffreep
rcrl
sbb
and
xor
mov
adc
ret
daa
cmp
stos
aad
mov
xor
icebp
xor
dec
nop
mov
or
push
jmp
fiadds
dec
push
leave
mov
maxps
lods
xor
push
loopne
rorl
xor
movsb
dec
nop
shll
jmp
icebp
cmp
mov
inc
stos
xchg
mov
stos
loopne
or
mov
aad
sbb
sub
mov
mov
jne
mov
sub
mov
dec
mov
adc
test
sub
inc
mov
mov
mov
pop
in
push
testl
add
stos
sti
add
cli
add
add
out
add
stc
adc
ljmp
add
mov
lods
adc
dec
or
and
imul
out
push
cld
push
in
add
inc
or
inc
xor
fisubrl
or
dec
inc
inc
push
cmp
rcrl
adc
insl
mov
mov
push
fldt
fcmovnu
push
add
aas
popa
and
push
adc
ja
xor
sub
dec
outsb
xchg
je
imul
mov
arpl
lods
dec
arpl
js
jg
outsl
outsb
add
dec
dec
gs
jbe
inc
lea
je
pushf
xor
arpl
std
mov
xchg
xlat
aam
inc
outsb
mov
mov
cs
nop
les
gs
and
push
pop
jo
adc
out
insb
jne
push
add
popa
movsb
mov
outsb
cwtl
adc
lcall
cmpsb
add
subb
add
add
in
or
jne
lea
sbb
divb
andl
add
cmp
jp
je
push
adc
test
outsl
pushf
gs
fcompl
push
inc
aaa
inc
addb
sub
or
push
addb
test
mov
ret
mov
or
cld
decl
push
imul
cmpl
outsb
dec
jne
aaa
mov
cwtl
add
mov
je
ret
fstpt
xchg
insb
and
mov
mov
pusha
adc
shrb
out
js
hlt
push
pop
popa
adc
bound
mov
ffreep
and
adc
add
sbb
add
dec
clc
sahf
xchg
mov
stos
dec
imul
add
insb
sbbb
fisubs
and
jae
nop
xor
and
push
xchg
subb
fdiv
xchg
rorb
mov
inc
fs
ret
hlt
mov
add
sbbl
mov
dec
mov
jae
mov
bound
loopne
xchg
jb
insl
jo
dec
test
ret
add
rcrb
add
add
outsb
inc
cmp
inc
les
push
push
rolb
jb
sarl
mov
bound
xor
outsb
clc
pop
jo
outsl
add
lds
addb
jo
and
and
sbb
clc
adc
imul
into
lcall
xor
inc
mov
jb
and
sbb
xor
push
dec
pop
mov
xor
xchg
push
xor
insb
xchg
mov
fdivrp
outsb
add
outsb
sahf
jo
push
add
push
push
mov
outsw
lea
outsb
sahf
inc
outsl
mov
lea
sub
mov
inc
lods
push
add
shll
movsb
ljmp
inc
xchg
adc
dec
scas
add
mov
inc
loop
sub
add
adc
idivb
outsl
mov
popa
inc
sbb
mov
inc
add
insl
jl
pop
cmp
push
lcall
loopne,pt
lret
mov
sbb
insb
insb
xor
mov
test
and
popa
cmp
into
notb
or
mov
testb
sub
push
dec
inc
shl
popa
fs
icebp
decl
or
je
pusha
or
and
adc
pop
int3
pusha
jo
push
push
xchg
adc
data16
jl
push
cwtl
mov
adc
jp
pop
insb
jne
sub
add
push
inc
mov
outsl
sbb
or
pushl
and
push
nop
imul
mov
subb
or
and
mov
jmp
xor
data16
popa
dec
adc
mov
mov
test
mov
call
loope
jecxz
bound
mov
jo
loopne
add
adc
popa
or
test
and
popa
arpl
fmull
divb
jle
jbe
fs
mov
test
cld
pusha
push
jae
js
out
mov
inc
leave
clc
fbstp
adc
loopne
pusha
pop
cmc
fildl
xchg
arpl
adc
add
out
out
into
push
imul
push
outsl
aam
pusha
inc
inc
jns
add
mov
ret
push
xchg
cmp
repnz
xor
inc
das
sarb
bound
in
dec
lcall
dec
pusha
xchg
clc
incl
loopne
adc
push
popa
loope
sbb
jo
xor
adcb
push
je
jb
popf
jae
cmp
cmp
pusha
cmp
mov
pop
test
and
mov
and
mov
inc
mov
mov
mov
nop
sbb
jmp
das
dec
outsl
mov
or
fs
loope
push
mov
lcall
mov
addr16
and
ja
addr16
js
call
xlat
add
fsubl
mov
mov
insl
in
pusha
cli
das
js
das
sbb
nop
fs
in
pusha
add
inc
add
mov
add
and
int3
in
out
mov
das
mov
out
xchg
out
in
and
cwtl
pop
sub
popa
mov
outsl
push
mov
outsb
adc
clc
addl
loop
push
gs
sub
jp
test
gs
mov
loopne
in
push
loopne
jbe
gs
fistpll
loop
add
sahf
in
push
into
clc
sbb
in
in
mov
push
pusha
jns
mov
sub
shrb
mov
popa
sub
or
clc
mov
mov
sbb
nop
gs
dec
cltd
jno
cld
stos
in
cmpsb
stos
cmp
outsb
mov
jno
xchg
std
scas
das
lcall
xor
mov
lds
push
inc
std
jmp
xchg
mov
jno,pt
xor
mov
mov
xorw
cld
push
cwtl
lock
insl
sbb
insl
push
dec
sahf
cld
mov
add
sbb
clc
mov
sub
arpl
lock
xor
clc
mov
xor
in
mov
xchg
mov
outsb
mov
bound
mov
imul
inc
bound
insb
loop
adc
or
js
adc
add
mov
outsb
fs
outsb
gs
pop
cwtl
ss
jne
jo
mov
cmc
insl
in
xor
mov
ret
pushl
push
hlt
js
xor
inc
inc
mov
orb
mov
lea
inc
mov
outsl
clc
decl
sbb
add
adc
ja
xchg
ds
inc
xor
xor
dec
fs
jl
outsl
nop
xor
and
push
push
gs
mov
xchg
sbb
jns
sbb
jge
nop
xor
aad
bound
push
decl
push
cmp
mov
push
repnz
insb
mov
push
dec
mov
or
adcl
adc
icebp
sub
cmp
je
in
cltd
adc
incl
outsb
sbb
mov
jl
lods
outsb
clc
pop
lock
js
mov
sahf
addr16
sub
add
or
add
out
cli
das
and
push
mov
movb
push
cld
je
jno
jg
add
hlt
addl
xor
or
jo
inc
add
xchg
jae
data16
xor
inc
inc
loop
push
jo
jo
jb
add
fsts
gs
adc
push
mov
push
std
fbld
popa
ja
fs
cmp
xchg
xor
dec
mov
xor
fisubrs
shl
cs
ja
notb
ljmp
xchg
mov
push
mov
jo
lcall
mov
mov
push
add
xchg
fcompl
fucomi
add
mov
mov
arpl
add
mov
mov
imul
add
stos
shrb
insb
add
push
adc
adc
add
sahf
imul
dec
pop
and
mov
mov
movsb
push
cld
add
dec
gs
aaa
cld
or
jb
jne
jle
jno
add
add
test
fst
nop
test
jl
outsl
jno
xor
mov
jae
mov
pop
jne
inc
dec
movsb
xor
add
imul
das
clc
shll
add
xor
decl
jo
xchg
icebp
add
movsb
mov
push
add
push
scas
out
cli
mov
or
jae
jae
push
fimull
add
pop
push
icebp
or
xor
ja
fcomip
add
scas
mov
push
divb
int3
mov
xor
mov
lock
or
jo
jle
sbb
clc
xchg
xchg
dec
gs
arpl
aaa
mov
or
or
adc
sbb
sub
lock
pop
fs
xor
jo
hlt
mov
add
pop
and
fwait
add
mov
inc
outsl
mov
jb
jnp
das
icebp
out
js
cmc
pop
shrb
cmp
or
pop
mov
imul
pop
scas
lcall
dec
inc
subb
mov
rcl
lea
jne
mov
mov
icebp
add
inc
xchg
mov
mov
sub
push
hlt
jb
fs
pop
je
test
sahf
inc
fidivs
arpl
jno
jae
jb
cmpsb
cmp
daa
mov
sub
es
ja
xor
lods
or
clc
or
adcb
xchg
insb
mov
dec
mov
xor
pusha
jb
insb
mov
mov
addb
inc
inc
mov
push
decl
mov
cmc
add
dec
lcall
adc
loop
add
add
insb
fdivr
imul
addr16
dec
shrl
mov
xchg
insb
fs
jo
xchg
push
icebp
push
les
jg
xor
xor
mov
pop
add
push
xchg
lock
movsl
imul
insb
in
or
dec
push
imul
pushl
rcrl
jnp
lods
jo
push
jno
mov
jmp
jo
adc
mov
jo
in
andl
push
popa
push
lea
add
outsb
outsw
or
mov
arpl
mov
xchg
jne
pop
push
mov
dec
lock
and
add
inc
out
fdiv
jb
insb
sahf
test
add
je
and
leave
cmc
mov
jbe
mov
outsb
sub
ds
jo
mov
fisubrl
aam
mov
inc
push
adc
adc
sbb
ficoms
jne
cmc
pop
icebp
mov
and
jns
bound
fs
push
jns
lock
mov
divb
sbb
cmp
push
mov
or
push
or
push
outsl
stos
push
imul
imul
or
inc
jnp
sub
gs
sub
jl
test
adc
pop
lds
fmull
cs
sbb
pop
add
adc
add
ja
push
nop
add
sar
or
dec
adc
bound
jp
test
mov
mov
and
loopne,pn
dec
cmpsb
adc
push
xor
xchg
test
out
sub
adc
push
xchg
adc
or
arpl
std
cwtl
je
add
lcall
push
insb
adc
fiaddl
enter
gs
jge
mov
and
fsubl
imul
add
in
dec
mov
lret
xchg
fwait
jmp
add
gs
gs
push
adc
push
jo
adc
xorb
jo
add
push
out
stos
adc
loop
jns
arpl
jo
clc
sbb
cmp
arpl
clc
lds
int3
or
jns
fsubs
addl
lcall
push
inc
arpl
out
fisubl
pushf
repnz
fcoms
vfrczpd
incl
xor
mov
insb
xchg
xchg
and
ljmp
je
xchg
adc
imul
mov
push
jns
xorb
jne
sbb
mov
mov
in
inc
jae
orb
test
xchg
fisubrs
or
rclb
add
outsl
subl
loopne
fildll
push
xchg
adc
add
mov
jl
jle
rcrb
adc
adc
ss
add
outsl
imul
insb
cmc
pop
cld
inc
sbb
sahf
insb
jne
mov
add
sbb
inc
mov
addb
or
add
outsb
adc
push
jo
aad
add
popa
dec
add
ret
add
arpl
imul
or
push
dec
add
add
push
jecxz
mov
xchg
ds
pusha
sub
pop
pop
mov
lret
jns
and
test
fiaddl
inc
cmp
mov
cmpb
insb
push
jne
rclb
roll
mov
les
nop
push
popa
xchg
push
inc
xchg
mov
rcrl
rcll
push
push
lcall
fwait
xchg
xchg
jne
fidivrs
adc
adc
xchg
adc
xor
cli
roll
mov
sub
scas
add
mov
inc
insb
cwtl
outsb
cmp
inc
test
fucomi
dec
jo
push
push
pop
ret
pop
lods
mov
mov
rcl
dec
and
xorb
xorb
or
loopne
mov
add
scas
sub
cli
ret
dec
lock
mov
imul
xor
lds
sbb
and
aam
mov
sbb
jl
xor
inc
test
mov
es
jb
push
das
xor
xchg
xchg
int3
inc
ficompl
out
mov
mov
adc
jae
loopne
mov
nop
add
xchg
sub
fidivrs
cmp
or
sub
daa
movsb
bound
dec
push
jae
pusha
cmp
pop
push
push
lock
push
outsl
nop
adc
outsl
insl
lds
loop
push
outsb
mov
jne
or
call
jnp
fisttpl
rorl
je
arpl
dec
mov
frstor
gs
lds
inc
mov
popa
and
inc
mov
mov
jb
loopne
inc
gs
bound
mov
jecxz
or
loope
loope
loopne
cmp
add
popa
jle
push
imul
loopne
nop
mov
mov
jmp
nop
push
ret
loopne
pusha
mov
xor
test
add
pop
push
loopne
les
aad
loopne
push
mov
dec
xchg
xchg
or
inc
jb
ljmp
inc
dec
mov
xor
mov
inc
adc
cmp
cld
or
dec
or
xor
bound
or
jp
out
inc
xchg
xchg
push
and
clc
add
add
push
insb
outsb
add
pop
or
mov
cmp
shlb
flds
leave
rcrb
and
rcrb
out
or
sbb
gs
cmp
xlat
xorb
ficoms
and
cld
and
mov
lcall
mov
jp
bound
inc
cmpl
jp
mov
fdivrs
add
arpl
xor
pusha
xchg
sub
es
cbtw
sub
cld
or
add
in
test
mov
cwtl
hlt
xor
jecxz
add
ljmp
jg
nop
jb
dec
lea
loope
das
out
or
outsb
push
loopne
loope
mov
xchg
dec
adc
mov
mov
jae
andb
inc
mov
fistpl
lods
bswap
andl
mov
outsl
push
arpl
add
loopne
mov
cmp
je
outsb
sub
sbb
push
cwtl
fwait
add
add
push
inc
push
hlt
mov
push
data16
fwait
loopne
cltd
outsl
push
jbe
inc
loopne
mov
fs
xor
xchg
add
loope
pop
icebp
test
fdivs
gs
mov
pusha
jg
mov
sub
daa
bound
ss
lcall
or
add
dec
add
loope
dec
nop
std
lea
sbb
inc
loope
mov
jbe
stos
push
push
int
cwtl
shll
test
inc
jg
add
loopne
loopne
sbb
jo
pusha
sub
sgdtl
or
add
cmpsl
xchg
dec
insl
loope
sub
into
inc
loopne
movsb
mov
sbb
inc
sub
mov
leave
jecxz
hlt
loopne
cmpsb
add
loope
in
loope
pusha
push
in
loop
and
push
loopne
push
and
scas
and
or
insl
popa
or
loopne
idivb
and
jecxz
push
repnz
insb
adc
mov
mov
jle
ljmp
add
dec
inc
push
ret
mov
sub
sbb
adc
push
push
hlt
sub
lahf
dec
pushf
scas
jne
xchg
pop
dec
popf
dec
movsl
nop
scas
xchg
adc
outsb
lcall
mov
add
insb
insl
pop
gs
mov
or
mov
jae
int
outsl
adc
lods
xor
cs
push
inc
je
arpl
shlb
mov
pop
push
mov
adc
cmp
inc
adcb
je
add
imulb
sub
push
stos
mov
xchg
fs
jno
jg
add
popa
dec
jbe
lock
sbbb
xchg
add
decl
mov
inc
jbe
mov
sbb
jg
pop
jmp
and
inc
xor
push
lods
mov
jno
mov
ljmp
mov
add
das
enter
mov
mov
xor
mov
js
push
loop
jno
jl
jg
jne
jo
push
dec
mov
or
mov
jbe
add
bound
adc
dec
pushl
add
outsl
xchg
imul
or
jo
add
dec
mov
dec
inc
add
loopne
stos
repnz
dec
dec
mov
xor
push
xor
add
shlb
jo
imul
mov
test
std
xor
xchg
xor
mov
shlb
jb
xchg
jo
adc
arpl
outsl
or
sub
lcall
cli
inc
xor
add
lret
jo
mov
sub
aam
pop
arpl
add
hlt
add
outsl
imul
sub
aam
mov
xchg
and
push
shll
xchg
imulb
xor
movsl
aam
pop
and
and
dec
add
testb
popf
jne
xor
out
push
je
mov
push
fiaddl
stos
sbb
pop
inc
mov
jle
mov
xchg
popa
xchg
gs
andb
imul
and
and
lcall
js
gs
xchg
adc
xchg
vmread
or
xor
cmpsb
mov
mov
dec
push
and
mov
cmc
add
filds
dec
jl,pt
dec
shlb
hlt
add
jmp
jg
or
idivb
out
mov
fsub
insl
shrl
xchg
inc
ss
or
mov
sub
or
hlt
adc
imul
cwtl
push
and
inc
mov
adc
in
xor
add
xchg
sbb
lock
test
cmp
push
sbb
addl
pushl
push
add
inc
push
mov
add
jle
out
cli
cmpb
xor
dec
pop
xchg
inc
nop
loopne
push
out
leave
inc
inc
xchg
test
inc
sti
add
fdivrs
testl
mov
pop
cmpb
subl
sub
jnp
es
xlat
ljmp
adc
stos
pop
scas
shl
cmp
cli
inc
adc
add
repz
loope
test
inc
rcr
cmc
int3
xchg
icebp
dec
scas
mov
repnz
test
xchg
leave
cmpsl
inc
in
inc
das
mov
insb
push
inc
mov
mov
fmull
shrb
pop
cmp
stos
cmp
xchg
pop
add
lock
rclb
ljmp
add
jbe
add
addr16
xchg
clc
repz
fildll
xchg
fisttps
add
jne
adc
int3
int
xor
aas
mov
push
call
mov
cmp
mov
outsl
decl
xor
cmp
xchg
gs
pop
pop
dec
shl
xor
mov
fisttps
inc
repnz
mov
scas
add
lock
mov
add
std
adc
sahf
test
ja
in
xor
pop
loope
les
insl
les
aaa
test
mov
inc
lcall
mov
push
dec
iret
xchg
aas
loop
mov
push
fisttpl
pop
roll
pop
aas
sub
das
add
ljmp
xor
inc
jmp
ljmp
mov
jl
jg
icebp
ljmp
fstl
ds
jnp
int3
fcoml
xchg
cmpl
sbb
shrb
jge
scas
mov
and
test
cmpsb
pop
add
out
xchg
cmp
push
cs
aaa
cld
or
out
mov
mov
loopne
mov
add
push
rorb
insb
fimull
sub
push
pop
lock
cli
push
into
imul
faddp
jge
call
mov
adc
pop
mov
mov
cwtl
bound
orl
hlt
fistpll
ficomps
add
cmpsb
fmuls
icebp
adc
inc
imul
push
or
jle
sub
scas
inc
inc
jb
pop
stos
xor
das
andb
xor
in
xor
cwtl
add
inc
mov
or
mov
inc
and
add
int
fisttpll
push
fisttpll
icebp
add
scas
xchg
jg
fistl
imul
cli
push
add
cmc
in
sti
add
push
jae
testl
pusha
mov
sub
mov
jmp
sub
js
or
jb
push
sbb
in
sub
jg
mov
loopne
fdivrp
xchg
or
mov
add
call
jmp
and
push
xchg
add
movsl
mov
pop
shr
daa
js
int
rep
push
das
adc
jmp
pop
mov
mov
jge
xor
in
adc
cltd
mov
mov
int
lcall
xor
fwait
lret
jnp
pop
int
std
push
adc
jnp
sub
lcall
inc
dec
lret
pop
lret
add
outsl
pushl
push
lret
pop
dec
dec
or
arpl
add
cmp
xchg
mov
xor
pop
pop
stos
pop
pop
xchg
rcr
push
rolb
add
lcall
rcrl
xchg
mov
xor
add
jmp
repz
ret
insl
imul
add
jbe
and
sbb
sub
cld
lret
arpl
repnz
decb
cld
lret
aaa
cmp
push
aaa
mov
mov
aaa
int3
aaa
daa
aaa
in
getsec
cld
aaa
idivl
adc
and
inc
add
jl
pop
add
push
out
ljmp
outsl
adc
out
sbb
adc
jnp
jl
jnp
add
inc
ds
adc
cmp
sub
fdivrl
sbb
add
ss
loopne,pt
stos
jbe
jle
or
jmp
sbb
loop
lret
and
mov
adc
aas
pop
aas
fwait
insb
aas
mov
jl
jnp
out
scas
mov
pushf
aas
pop
adc
cmp
aas
sub
fdivrl
sbb
mov
aas
or
cld
loopne
ss
adc
clc
shr
jecxz
xor
xor
clc
add
dec
xor
mov
mov
jl
jnp
imul
movb
xchg
dec
es
out
jecxz
lcall
sbb
or
cld
xor
xor
xor
add
out
adc
lret
xor
mov
in
mov
mov
mov
shl
adc
pop
js
aaa
jg
xor
mov
sub
fdivl
sbb
xor
xor
mov
shl
xchg
add
outsb
jmp
out
decb
xor
insb
xor
mov
imul
xor
push
shrb
add
mov
add
add
add
cld
mov
xor
mov
sub
lret
xor
mov
xor
adc
add
jle
add
mov
dec
xor
sub
fcompl
std
int
sbb
xor
xor
xor
mov
or
or
jnp
sbb
add
aaa
jg
xor
xor
xor
mov
xor
xor
lods
xor
xor
popa
outsb
mov
add
adc
repz
mov
fistl
sub
lret
xor
xor
fwait
mov
xchg
insb
xor
add
or
and
out
sub
mov
sbb
xor
fldt
jmp
sbb
fistl
sub
jecxz
sarb
sub
add
ss
mov
imul
ss
inc
hlt
aaa
jg
ss
ss
ss
fdivl
pop
ss
jmp
add
fwait
dec
lods
cmp
xorl
aaa
jae
adcb
aaa
movsb
aaa
push
cmp
aaa
les
xor
aam
add
loopne
pop
jp
sbb
cwtl
sbb
cmp
cld
sbb
test
and
adc
lock
cmp
inc
or
pop
es
inc
and
out
add
inc
lods
xor
ds
mov
std
xor
xor
shll
xor
and
loopne
inc
jno
pusha
inc
pusha
xor
outsb
ljmp
add
pop
xor
xor
xor
mov
repz
mov
inc
ss
ss
push
xlat
add
push
add
ljmp
fdivrl
stc
fcmovnu
dec
fisubl
cmp
cmp
cmp
add
cmpb
cmp
push
add
std
add
cmp
cmp
cmp
cmp
add
arpl
xorb
add
mov
addr16
cmp
cmp
jmp
push
in
mov
mov
mov
cmp
adc
add
sbb
jno
call
cmp
movsl
ds
outsb
ds
sub
xlat
loopne
rcrb
loopne
push
inc
jne,pt
clc
sub
and
pusha
frstor
test
cwtl
xor
cli
or
mov
add
insl
xor
scas
xor
xor
pop
mov
add
or
repnz
mov
adc
xor
xor
xor
dec
xor
and
xor
xor
decb
xchg
cmpsb
ss
loopne
sti
cmp
cmp
cmp
in
int
cmp
cmp
cwtl
fdivrs
sbb
es
call
or
out
cmp
cmp
andb
sub
adc
aam
xor
xor
sbb
fisttpl
fdivl
in
jo
xor
xor
decl
adc
xor
xor
mov
js
xor
cmp
add
or
cld
cmp
mov
adc
out
cmp
cmp
cmp
dec
mov
pop
add
cmp
cmp
cmp
mov
xor
jb
sub
fstpt
into
adc
sarb
xor
rorb
inc
adc
cli
rolb
movsb
xor
ret
or
sub
xor
nop
pop
adc
les
and
movsb
std
sbb
pushl
lock
lds
push
xor
push
les
xor
xor
xor
xor
outsl
pop
inc
clc
movsb
xor
cli
xor
xor
or
cmpb
test
cmp
cmp
cmp
fidivl
stos
jbe
clc
outsl
cmp
cmp
xchg
cmp
cmp
cmp
outsl
cmp
cmp
mov
cmp
adc
cmp
dec
outsl
mov
cmp
cmp
cmp
adc
scas
clc
decl
js
cltd
nop
or
cmp
call
push
cmp
decb
cmp
ds
or
aas
mov
aas
mov
add
and
cwtl
aas
outsl
lock
sub
nop
aas
pop
aas
enter
add
cs
icebp
aas
inc
loop
push
jmp
push
or
xor
jg
mov
icebp
xor
xor
sbb
xor
cld
jg
and
xor
adc
xchg
mov
fcoml
pop
clc
pushl
fiaddl
xor
roll
xor
pop
aaa
xchg
aaa
mov
pop
jecxz
leave
cmp
push
cmp
mov
adc
jl
mov
mov
cwtl
test
daa
aas
cmp
push
push
pop
test
jno
loopne
sbb
ss
xor
xor
jo
test
fcomp
jb
mov
pushl
xor
adc
xchg
xor
dec
and
cmpsl
out
xorl
ljmp
inc
xor
xlat
mov
aaa
dec
aaa
outsl
add
mov
aaa
popa
jg
mov
cld
inc
cmp
les
popa
cmp
push
cmpsl
cmp
add
ds
mov
ja
adc
pop
jne
xchg
aas
mov
outsb
pushf
mov
jg
sahf
mov
imul
xor
xchg
add
out
ret
ja
or
xor
xor
jle
xor
cmp
xlat
sarb
jge
xor
sub
xor
adc
add
sbb
inc
repnz
dec
adc
icebp
das
cli
push
sbb
xlat
xor
cmp
pop
adc
decb
fimuls
fbstp
xor
mov
test
xor
adc
or
or
int
sub
out
mov
mov
pop
aaa
jle
cmpsb
loopne
sub
cmp
cmp
lods
cmp
mov
pusha
cmp
cmp
mov
loope
adc
add
clc
cmp
int3
lds
dec
cmp
jg
and
push
cmp
adc
sbb
ds
pop
fs
loop
cmp
cmp
push
or
cmp
fadds
ds
sbb
add
mov
aas
xor
and
add
push
aas
aas
js
or
inc
les
xchg
lock
jo
xor
xor
xor
divl
xchg
jg
loop
mov
adc
sub
sub
push
shrb
sub
popf
xor
xor
xor
mov
xor
pop
cld
aaa
mov
aaa
nop
xor
aaa
push
aaa
setb
cmp
inc
mov
cmp
add
cmp
cmp
sti
mov
ds
fnstcw
and
call
ds
sar
pop
cs
adc
sbb
pop
aas
xchg
add
jge
and
sub
add
sbb
xor
cmc
pop
cld
ja
or
lcall
xor
nop
ja
xor
xchg
pop
cmp
xor
shrb
xor
xor
mov
ljmp
xor
add
insl
and
add
xor
pop
or
adc
ss
cmp
push
mov
inc
inc
ss
ss
pop
push
jae
addr16
inc
lds
xor
sub
fwait
or
ss
adc
in
aaa
cmp
jg
stos
cld
aaa
dec
aaa
fbstp
adc
push
cmp
cmp
dec
decb
orl
cmp
cmp
pop
add
lods
cmp
pop
cmp
add
incl
adc
cmp
mov
xchg
cmp
loope
add
cmp
add
lcall
cmp
cmp
mov
ja
jl
lcall
cmp
cmp
lock
mov
lcall
adc
dec
test
xchg
shrl
shl
push
and
sbb
xor
incl
popf
xor
cld
adc
divl
movsl
xor
adc
xor
xor
test
ja
das
add
jp
push
cmpsl
xor
jo
in
decb
push
mov
pusha
cmp
aad
adc
cmp
pop
adc
add
outsl
cmp
add
adc
and
cmp
fcoml
cmp
cmp
xchg
out
pop
lock
cmp
jo
cmp
pop
cmp
cmp
pop
arpl
inc
cmp
in
cmp
cmp
cmp
push
cmp
sub
xor
jg
adc
xor
ret
xchg
sti
xor
push
mov
rorb
fwait
cmpsb
mov
push
mov
jns
iret
xor
xor
pusha
or
lock
std
or
dec
mov
inc
xor
std
ss
aaa
pop
pop
adcb
cli
jno
out
mov
cmp
sub
in
mov
pop
cmp
add
mov
fnstsw
sarb
inc
push
cmpb
push
push
iret
jb
cli
lods
cld
pushl
ss
xchg
aaa
push
add
adc
jle
mov
pop
scas
add
mov
adc
lret
pusha
pusha
cmpsb
outsb
ljmp
xor
test
popa
xor
push
xor
xor
xor
dec
push
adc
dec
sbb
sub
cmp
adc
jo
lret
pop
mov
aaa
rcll
lods
sti
cmp
mov
inc
xor
sarl
imul
cmp
cmp
cmp
cmp
cmp
mov
decl
lock
cmp
mov
cmpb
cmp
sub
jmp
das
sub
ds
mov
dec
adc
jmp
cmp
or
testb
xor
adc
pop
xor
or
cmp
lods
jb
cmp
jae
xchg
cmpsb
ss
jle
std
jns
pop
pop
cmp
ds
aas
pop
test
adc
sub
and
lock
xor
nop
dec
or
or
out
les
out
sbb
xor
fidivs
and
into
xor
xor
xor
aaa
jg
xor
push
xor
xor
clc
mov
xorb
xor
jle
xor
xor
xchg
push
hlt
pushl
sbbb
xor
xor
mov
stc
mov
ljmp
mov
outsl
in
push
in
xor
aas
push
xor
push
xor
xor
xor
xor
push
or
int3
scas
nop
pop
xor
inc
cmc
inc
xor
mov
push
xor
jno
fisttps
xchg
jl
or
dec
cmp
clc
add
cmp
cmp
cmp
pushf
test
or
aas
push
push
pop
ret
sahf
gs
xor
xor
sub
je
xor
stos
das
xchg
adc
mov
stos
cmpb
adc
sbb
push
cmp
cmp
cmp
mov
cmp
cmp
incl
lcall
cmp
adc
imul
aas
sub
mov
loopne
mov
test
pop
je
add
fnstenv
pop
shlb
jo
fnstenv
xlat
xor
xor
xor
xor
jg
dec
xor
xor
test
pop
ss
aaa
std
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jg
jg
pop
mov
cmp
ja,pt
mov
inc
mov
and
hlt
jbe,pt
mov
movsb
pop
lea
xchg
push
xor
adc
ret
cli
xor
shlb
mov
xchg
xor
aad
sub
adc
fdivs
pop
ss
int
sbb
pushf
stos
incl
mov
shll
and
aaa
ret
aaa
push
lcall
mov
rol
pop
mov
adc
adc
out
ret
fbstp
movsb
mov
cmp
mov
cmp
pop
mov
icebp
cmp
cmp
inc
es
test
cmp
cmp
cmp
lods
cmp
mov
cld
ds
inc
push
mov
mov
xor
out
add
aas
fnstsw
xor
mov
insl
adc
test
call
push
inc
sub
xor
pop
xor
cld
pop
mov
lcall
xor
xor
repnz
or
xor
dec
clc
push
outsb
sub
or
inc
xor
lock
inc
aaa
outsb
ret
lcall
loopne
out
leave
ss
imul
add
dec
ret
clc
loopne
cmp
cmp
cmp
call
xor
cmp
jp
inc
ds
or
or
adc
sahf
inc
cmp
rorb
call
stc
xor
in
xor
xor
xor
xchg
inc
and
test
jbe
xor
xor
and
xor
neg
jb
cmp
andl
jle
cmp
ljmp
cmp
cmp
cmp
cmp
cmp
cmp
out
push
cmp
pop
cld
cmp
cmp
cmp
mov
loopne
or
pop
ret
cwtl
xor
adc
cli
call
xor
sarb
inc
push
loop
inc
push
mov
xor
xor
add
in
mov
xor
adc
mov
adc
add
fistl
ss
ss
add
stos
cs
dec
aaa
fwait
lock
lcall
aaa
xor
repnz
repz
cmp
xchg
cmp
cmp
sarb
cmp
cmc
cmp
cmp
cmp
pushf
add
mov
loop
int
adc
in
cmp
cmp
mov
jmp
sbb
xchg
pop
jecxz
cmp
ja
arpl
je
cmp
mov
push
in
mov
sarb
cmp
xchg
or
fcoms
cld
cmp
push
push
sarl
push
push
hlt
aas
add
lret
xor
out
push
cld
aas
std
scas
test
pop
cmpsb
in
xor
xor
xor
xor
xor
arpl
mov
divb
cmp
jmp
in
add
fnstcw
fdivrl
cld
ffreep
mov
ds
sahf
add
cld
xor
stos
xor
xor
xor
xor
xor
movsb
and
aam
xor
xor
pop
pushl
fs
xor
xor
xor
xor
pusha
pop
mov
aaa
or
lret
incb
cmp
sbb
fnstsw
dec
cmp
cmp
int3
aam
fwait
or
lock
clc
aas
dec
pop
stos
aas
test
adc
shll
xor
xor
xor
ljmp
xor
xor
xor
lock
cli
or
xor
xor
aaa
shlb
sbb
pop
std
aam
adc
jmp
add
aam
fcmove
xor
out
rcl
xor
push
mov
cmp
mov
cmp
cmp
out
sarb
cmpl
cmp
insl
cmp
push
lock
add
jle
cli
lods
aas
dec
outsl
out
dec
lcall
xor
xor
cmp
inc
xor
xor
xor
add
cmp
inc
jl
cmp
loop
adc
pop
lret
mov
or
cmp
xchg
cmp
cmp
cmp
push
inc
mov
shll
mov
add
add
mov
loop
test
ds
inc
ds
jne
jecxz
ds
aas
pop
aas
loop
and
or
push
loope
aas
sbb
ret
xor
mov
xorl
push
loop
push
xor
add
sar
xor
xor
inc
cmp
ja
inc
xor
xor
mov
das
stos
and
stc
cmp
cmp
jecxz
adc
cmp
cmp
xchg
sub
pop
sbb
jae
popf
cmp
push
enter
fidivrl
sub
idiv
bound
ds
ds
mov
aas
pop
aas
dec
adc
xor
inc
daa
push
add
xor
cmpsb
pop
xor
mov
lcall
xor
xor
lods
and
addb
xor
movl
xor
xor
mov
sub
adc
divl
xor
mov
jb
fidivl
jg
cmp
ss
aaa
sbb
adc
test
mov
aaa
loop
jmp
jge
aaa
lret
out
cmp
cmp
cmp
cmp
xchg
mov
out
ljmp
cmp
cmp
cmp
mov
ror
pop
cmp
cmp
cmp
cmp
cmp
sarl
inc
add
and
push
or
pop
push
ljmp
bnd
dec
push
cmp
scas
cmp
sarb
data16
out
clc
add
mov
ds
ds
std
aas
sub
sarl
push
aas
sbb
out
aas
or
pusha
loope
cmc
rcll
xor
mov
xor
xor
std
push
test
xor
xor
add
xor
out
test
xorb
ss
pop
mov
pop
aaa
fnstenv
cs
lret
aaa
inc
aaa
cmpsb
aaa
sbb
aaa
add
jmp
shlb
cmp
cmp
into
leave
cmp
cmp
jmp
cmpb
cmp
mov
call
pop
movsb
mov
cmp
inc
clc
sarb
enter
push
js
cmp
cmp
jge
adc
repnz
ds
es
aas
cmpsl
aas
orl
jo
cld
dec
test
sbb
mov
ds
xor
pop
cmp
push
pop
xor
xor
xor
xor
cld
xor
xor
pop
lcall
mov
xor
xor
mov
mov
xor
xchg
xor
cmpsb
xor
xor
xor
xor
xor
xor
xor
lods
das
inc
adc
xor
xchg
adc
jle
mov
xor
xor
add
inc
scas
jmp
jbe
xor
popa
cmp
js
xor
xor
outsl
jmp
cs
clc
scas
ret
jo
les
push
fwait
jne
stos
out
int3
dec
xor
scas
ret
addr16
mov
ret
xor
ss
cli
ss
fnsave
daa
ss
lods
stos
mov
pop
ss
dec
or
loopne
aaa
mov
ja
jns
cwtl
push
fmull
lock
pop
push
idivb
ret
or
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
push
cmp
call
xchg
mov
dec
cmp
in
stos
stos
adc
push
ds
es
add
aas
sbb
addb
fsubrs
add
xor
sub
insl
xchg
xor
rolb
imul
daa
mov
fnsave
or
adc
shll
es
sub
mov
add
cmp
mov
push
push
xor
push
pushl
cmc
insb
into
push
call
mov
outsl
xor
xor
cli
mov
sbb
movsl
xor
pop
sub
jecxz
cld
cmpsb
add
negl
aaa
ljmp
cli
and
xlat
aaa
sub
iret
aaa
xor
push
aaa
sub
mov
mov
cmp
cmpsb
pop
std
aaa
jmp
jle
cmp
sub
fdivrl
pop
cmp
cmp
lcall
idivl
or
xchg
lcall
cmp
data16
dec
cli
lds
aas
cmp
cmp
and
mov
jnp
jg
les
cmp
popa
cmp
outsl
rclb
xchg
pop
sarl
cmp
cs
and
fistpll
sbb
jmp
pop
cmp
add
pop
cmp
jg
push
lods
adc
sbb
cmp
cmp
cmp
push
loope
cmp
xor
mov
dec
cmp
scas
mov
sbb
cmp
stos
pushl
xchg
cmp
popf
cmp
push
cmp
pop
mov
cmp
cmp
cmp
cmp
cmp
lock
jle
cmp
stc
cmp
cmp
cmp
cmp
jo
ljmp
mov
adc
cmp
stos
out
sarl
jle
jbe
cmp
cmp
mov
xchg
adc
stc
ds
aas
push
aas
pop
aas
mov
add
add
hlt
add
xor
push
xor
mov
scas
push
push
pop
jge
or
xchg
xor
xor
aas
cli
outsl
xor
xor
xor
xor
mov
push
loopne
divb
dec
jp
xor
xchg
xor
hlt
xor
daa
add
mov
aaa
sub
mov
cmp
cmp
cmp
or
orl
mov
mulb
repnz
inc
cmp
cmp
cmp
in
pop
clc
cmp
cmp
jae,pt
pushl
lea
sbb
xchg
and
cmp
push
cmp
jo
lea
xchg
cmp
mov
out
imul
adc
jmp
call
fnstenv
sub
add
xor
xor
xor
es
ja
dec
xor
xor
bound
cltd
pop
test
ja
xchg
xor
mov
xorl
lock
xor
mov
push
xor
es
lret
call
xor
xor
xor
inc
ljmp
cs
cli
xor
xor
dec
or
icebp
xor
push
sbb
loope
and
xchg
rorl
leave
xor
xor
mov
cmp
xchg
xor
cltd
xor
adc
pushl
mov
xor
xor
xor
xor
xor
xor
lret
aam
das
push
xor
xor
xor
mov
or
shll
mov
adc
inc
test
sbb
and
scas
out
xor
enter
adc
cmpb
or
adc
push
out
xor
lret
lret
popa
cld
xor
xor
xor
ss
xor
orl
in
and
jg
aas
xor
popa
xor
add
mov
outsb
pop
mov
cmc
aaa
fidivl
sbbb
sarb
xor
jb
fs
stos
cmp
dec
xor
stos
jo
ljmp
hlt
xor
xor
xchg
mov
cmpsl
aaa
ret
cmp
insb
cmp
mov
arpl
sbb
xchg
cmp
sub
loopne
mov
inc
inc
dec
cmp
cmp
pop
adc
fwait
cmp
stos
adc
jo
mov
js
sbbb
or
push
nop
push
cwtl
dec
mov
push
push
jecxz
mov
loop
adc
ja
sarl
cmp
js
jae
push
ds
adc
pushl
ds
in
ss
filds
aas
jno
mov
push
and
out
cmp
into
xor
pop
in
lock
shrl
adc
xchg
xor
ljmp
mov
movsl
cmp
inc
mov
mov
add
scas
mov
mov
xchg
or
scas
ljmp
inc
xor
ss
mov
ficoml
ss
rorb
adc
arpl
mov
adc
inc
add
add
movsl
ljmp
cmpl
xor
jo
xor
mov
je
jl
je
aaa
and
cmp
in
add
and
popf
inc
aaa
or
pop
fisttpll
je
test
xor
xchg
push
fmull
jmp
and
inc
add
fs
test
add
data16
mov
sub
mov
inc
test
mov
jmp
or
add
jmp
lret
inc
stos
aaa
pusha
es
fidivl
inc
aaa
sub
mov
sub
mov
cmpsb
test
push
repnz
scas
add
dec
aaa
mov
shlb
aaa
add
decl
cli
or
xchg
xorb
cli
mov
pop
inc
scas
pop
add
mov
incl
js
push
jnp
sbb
dec
add
jo
lods
sub
and
mov
mov
scas
and
pop
aam
nop
out
test
lcall
cwtl
insl
jg
and
jge
push
sbb
or
add
aad
sub
imul
ljmp
test
pop
dec
sahf
pop
fwait
sbb
push
add
outsl
xor
add
dec
mov
cmp
inc
les
jmp
inc
and
push
popa
xchg
sub
divb
lock
xchg
gs
and
inc
mov
sub
imul
push
and
mov
lea
sub
xor
sub
stc
sbb
jecxz
dec
notb
lret
testb
popa
subl
dec
cli
int3
add
into
mov
hlt
and
mov
loop
inc
cli
inc
jnp
mov
sti
ret
das
adc
incl
pushf
out
xchg
xor
jne
sub
mov
cld
add
enter
icebp
cmp
aad
sti
int
fimull
iret
sub
pop
add
lcall
sub
rorb
jnp
out
xlat
jecxz
add
shl
add
test
ja
add
push
mov
push
ljmp
sub
nop
xor
add
data16
insl
out
sub
pop
cld
add
push
or
addr16
popa
ret
dec
rorb
decl
inc
fstl
fcmovb
add
add
jle
movsb
xchg
jecxz
clc
call
mov
and
pop
add
mov
pop
jmp
mov
sub
mov
inc
cmp
outsl
cli
jae
test
jnp
nop
and
jmp
fcmovnbe
jnp
fs
or
inc
add
xlat
movsl
add
xor
xchg
add
lcall
jae
add
shll
add
lret
and
add
jg
mov
cs
pop
add
and
add
sub
sbb
dec
out
fdivrs
repz
sbb
dec
dec
jb
pop
jae
pushl
mov
mov
pop
add
ljmp
cld
mov
lcall
jne
fbld
sbb
scas
mov
dec
cmp
movsl
int3
cmc
out
push
int
push
jmp
inc
fidivl
aad
lea
push
inc
push
xor
add
stc
inc
dec
test
sub
incl
push
insb
test
dec
mov
fs
mov
sub
adc
jp
clc
clc
or
cmp
jb
xchg
aad
fdivl
ljmp
xor
cld
pop
cmp
cld
xchg
mov
imul
and
xor
incl
shrl
adc
bound
xor
jmp
outsl
push
std
stc
push
out
mov
rcll
mov
aad
pop
andl
bound
mov
push
inc
push
jle
ljmp
arpl
mov
test
jbe
xor
pop
dec
popa
lret
push
aaa
hlt
dec
loopne
imul
daa
int3
push
push
add
fsts
and
dec
push
inc
adc
incl
adc
xor
push
fwait
pop
aam
pop
inc
sub
push
sub
jmp
or
sub
pop
inc
sar
dec
add
lea
ja
mov
incl
push
jno
lret
mov
pop
outsb
jl
mov
xchg
adc
mov
mov
dec
xor
sti
pushf
daa
cmp
pushf
and
fcomps
test
dec
pop
dec
addr16
cmp
in
inc
jge
jecxz
mov
dec
mov
or
adc
stos
ret
mov
lock
call
pop
imul
inc
cwtl
ret
add
testl
decl
push
mov
rcl
or
cmpsl
push
mov
fistpll
hlt
int
pop
jl
orb
mov
sbb
xchg
daa
push
inc
mov
inc
cld
and
andl
lcall
imul
jp
fs
mov
scas
push
je
arpl
xor
xchg
decl
cmpsb
dec
xor
xor
lcall
aam
inc
stos
lcall
xor
clc
push
xchg
xchg
add
xor
and
adc
mov
push
mov
xor
incl
cmp
aam
out
call
stos
mov
movsb
mov
ret
imul
fcomip
cmp
mov
dec
ds
cmpsb
mov
mov
dec
mov
sarb
imul
enter
into
pusha
mov
and
fildll
loope
insl
test
inc
frstor
sarb
incl
cs
dec
sbb
leave
cmc
push
and
dec
dec
dec
andl
mov
pushf
xchg
adc
adc
xor
push
arpl
cmp
cli
loop
ljmp
arpl
into
pop
and
daa
adc
dec
dec
out
and
pushl
cli
sbb
mov
cmp
add
mov
mov
sbb
push
pop
call
mov
push
push
popf
adcl
mov
loope
mov
and
jg
mov
out
cmp
ljmp
xchg
dec
add
lret
arpl
movsl
mov
fldt
rcrl
mov
pop
fldl
popa
mov
mov
mov
popa
sbbb
xchg
imulb
sub
sbb
incl
ret
test
test
scas
dec
outsl
xor
js
shlb
icebp
call
jbe
fs
pusha
in
stos
push
mov
add
scas
xor
mov
add
int3
xor
fwait
jmp
push
insl
dec
std
lret
pop
add
jp
dec
out
pop
popa
pop
sub
mov
mov
add
cs
in
or
or
scas
in
das
idivl
mov
pushl
cmc
and
stos
mov
into
repnz
xor
hlt
pop
negl
sub
lock
ljmp
repnz
outsl
stc
lock
movsl
cld
cmp
pop
cltd
iret
cmp
decl
ret
shll
ret
mov
push
sub
sbb
add
sar
inc
jmp
mov
loope
decb
pop
lret
mov
and
aaa
pusha
stos
jg
adc
loope
inc
out
mov
test
jmp
rorb
pop
jb
ficompl
dec
insb
aad
jo
mov
out
push
inc
ret
jecxz
ret
cmpsb
xchg
xchg
in
sub
adc
in
add
scas
mov
ja
inc
mov
call
repnz
pop
rorb
in
inc
std
gs
push
inc
push
or
insl
scas
jbe
xor
ret
fchs
test
cltd
insl
jnp
shrb
ja
into
rol
decl
mov
and
pop
test
lretw
hlt
inc
jno
push
jl
sub
leave
pushl
adc
mov
jne
es
mov
pop
fs
pop
pop
xchg
sahf
test
lds
xchg
decl
and
dec
add
dec
cmpsl
dec
icebp
cmpsl
loope
dec
xor
mov
fbstp
call
adc
imul
mov
inc
inc
cmp
sub
cmp
aaa
cld
call
lahf
jmp
repnz
call
ljmp
ljmp
mov
xchg
es
push
or
sbbb
pop
in
nop
popf
jo
neg
pop
std
leave
xor
mov
pop
fsubs
leave
in
add
lds
and
ljmp
push
jno
inc
lods
pop
push
fcmovnbe
mov
push
mov
pop
mov
fldcw
mov
test
fcomps
mov
ljmp
cmc
xchg
out
pop
test
cmp
test
adc
xchg
stc
outsb
jae,pt
push
cmp
ljmp
lret
and
sbb
jns
pop
and
xor
les
sbb
insb
cmp
and
clc
js
loop
clc
es
arpl
lcall
cmc
into
cmp
sbb
or
mov
add
xor
jmp
out
cmp
mov
dec
and
sbbb
in
pushl
stos
adc
fs
adc
sbb
clc
and
dec
movl
int3
inc
push
cmp
or
push
mov
adc
das
inc
fstpt
fs
pop
lods
cltd
leave
jg
stos
movsl
rolb
mov
test
ds
pushl
sub
cmp
lcall
jl
dec
mov
inc
adc
xchg
lea
outsl
lcall
push
icebp
daa
roll
dec
push
dec
bound
psubd
xchg
push
pop
sub
lcall
decl
xor
add
jnp
iret
je
jnp
or
and
out
ret
xchg
cmp
and
mov
cmp
adc
cmc
ljmp
mov
mov
adc
insl
add
mov
cwtl
outsb
fstpl
std
mov
lcall
mov
iret
inc
addl
imul
pop
xor
push
out
clc
adc
shr
pop
or
mov
mov
cs
repnz
xor
sar
jns
push
jecxz
stos
repnz
add
pushw
mov
rol
rcrl
mov
pushl
insl
mov
fiaddl
cmp
mov
lret
insb
cmp
cmp
ja
dec
stc
ret
icebp
xchg
out
jle
mov
data16
sbb
loope
mov
sahf
lret
adc
int
incl
jg
int
arpl
cmpsl
xchg
push
xchg
sub
jmp
rcrb
and
test
add
ret
enter
js
int
ljmp
call
mov
push
xchg
or
ds
das
mov
pop
loop
pop
push
jle
cli
jae
cltd
scas
mov
incl
cltd
daa
pop
jnp
adc
mov
call
and
shrb
push
adc
decl
mov
dec
xchg
sarb
enterw
dec
push
inc
jecxz
addl
loopne
decl
lods
mov
ret
xor
add
jno
or
push
cmc
mov
in
icebp
repnz
in
out
xchg
pusha
mov
test
bnd
mulb
mov
data16
dec
jnp
mov
jg
pop
cmc
call
out
add
test
sbb
pcmpgtb
jbe
sbb
in
test
push
sbb
xor
pushl
jno
jle
in
divb
mov
xchg
push
insb
dec
fwait
icebp
adc
pop
sbbl
push
lods
into
mov
sub
push
adc
mov
and
ror
into
lahf
ja
loope
add
pop
mov
testb
loopne
pushl
push
xrelease
insb
push
aas
push
dec
mov
or
sub
xchg
cmp
lcall
or
or
insb
inc
les
jle
jb
shlb
mov
call
jl
leave
inc
gs
add
sbb
push
faddp
push
into
movsb
stc
mov
cld
lds
ret
sbb
pop
mov
ss
mov
lock
or
sub
test
shr
sbb
incl
lahf
xor
in
xchg
cwtl
mov
dec
xchg
sbb
cmp
aaa
rcr
in
decl
imul
jne
add
movsb
dec
aas
mov
xchg
in
and
adc
mov
inc
push
pop
cmpsb
call
hlt
bound
aam
dec
push
mov
mov
lods
frstor
dec
lock
cld
incl
jbe
popf
ss
pop
mov
jne
in
addr16
or
mov
sbb
mov
lods
mov
js
mov
cmp
and
adc
fbld
dec
outsb
cmp
sub
and
mov
cmpsb
adc
xchg
rcll
pop
test
push
inc
std
inc
or
sub
dec
xchg
stos
jp
les
iret
xchg
test
call
cmpsl
sbb
adc
shl
shll
push
lock
call
int3
or
into
out
jne
fcomps
mov
jae
mov
and
mov
fistpll
outsb
mov
push
enter
xor
add
jmp
outsl
int3
push
pop
shrl
xor
cmp
stos
push
push
sbb
popf
jg
mov
cmp
inc
sti
icebp
imul
arpl
xchg
out
pop
pop
imulb
in
mov
in
jb
and
push
sahf
jo
decl
xchg
mov
inc
int3
inc
enter
out
mov
repz
pop
hlt
pop
mov
in
cmp
cmc
out
insl
aam
cmpsl
imul
insb
cmp
pop
insb
pop
jg
lds
and
inc
leave
arpl
fnstenv
cmpsl
clc
cmpl
ljmp
mov
pop
fimuls
cmp
xchg
test
out
push
mov
cmp
mov
es
fdivrl
push
mov
clc
cmp
jbe
inc
mov
sti
inc
loopne
cltd
test
xor
lret
sub
jle
ret
bnd
dec
into
mov
fbstp
push
loop,pt
push
fwait
dec
aad
ret
or
sbb
decl
lock
ret
push
es
mov
in
pop
fwait
hlt
jg
xor
fcmovnb
test
sbb
mov
inc
movsl
mov
jnp
jle
subb
leave
adc
jmp
jmp
lcall
xor
push
dec
xchg
mov
dec
incb
pop
fcomip
pushl
pop
dec
orb
nop
inc
or
sub
out
ret
push
add
pushl
pop
adc
inc
dec
inc
push
mov
pushf
or
outsl
cmp
add
test
pop
andl
cmp
or
pushf
sbb
call
mov
jnp
lods
push
push
mov
fnstsw
std
jbe
pusha
cmp
sbb
lods
jne
mov
pop
ljmp
pop
adc
fsts
pop
ds
dec
or
fcmovbe
rorb
aaa
add
and
sub
out
pop
push
arpl
and
mov
test
call
pop
rcrl
stos
cmovge
or
jmp
jp
pop
gs
adc
mov
pushl
cmpb
or
push
inc
cld
jl
adc
mov
test
inc
imul
shlb
mov
frstor
xor
push
mov
iret
push
mov
jne
mov
bound
or
decl
lret
loop
xor
fs
and
mov
inc
dec
push
sbb
sub
popf
pop
cmc
jmp
das
cmp
dec
test
jne
or
lea
add
das
lcall
movsb
out
popa
dec
cli
ficompl
push
cmpsl
cmp
xchg
fldenv
loope
das
add
jle
aaa
ljmp
cmp
mov
inc
pop
mov
bound
and
xchg
inc
xchg
lret
popa
sbb
dec
ret
icebp
mov
xabort
mov
fcompl
imul
jo
aad
out
xor
js
cmove
incl
adc
pop
fwait
adc
enter
ret
lret
dec
out
ljmp
and
push
stos
fs
mov
sahf
dec
mov
sbb
dec
sti
loopne
decl
sub
ss
fldt
outsl
cmp
mov
mov
dec
aas
add
jmp
aaa
data16
cltd
int3
push
push
into
cmp
cmc
test
xchg
test
and
incl
rol
ljmp
movaps
ret
cmp
dec
out
cli
arpl
pushl
mov
mov
repz
or
jge
pop
addr16
sub
or
ss
jo
mov
cld
adc
ficoms
cs
sbb
sahf
sub
push
sub
sar
std
outsb
mov
and
adc
adc
add
cmp
xchg
je
repz
test
loop
and
les
jmp
jle
les
cli
xor
aas
adc
xor
adc
sub
or
in
fwait
incb
xor
push
mov
mov
pop
dec
clc
add
push
es
das
test
jno
mov
or
orps
fildl
and
or
ljmp
call
inc
out
fnstenv
in
or
lret
fisttpll
xchg
and
sbb
mov
add
ss
xor
inc
mov
lods
das
mov
and
pop
fnstcw
pusha
lock
jp
add
mov
adc
aaa
enter
test
ljmp
jbe
xchg
repnz
mov
adc
outsb
adc
jns
push
mov
leave
clc
data16
xor
jg
add
repnz
outsl
bound
outsl
ficoml
mov
iret
adc
bound
roll
sub
dec
incl
inc
push
or
loop
pop
mov
jbe
addr16
add
ljmp
and
pop
mov
cltd
or
fcmovb
pop
push
lds
add
test
stos
hlt
call
add
sub
test
pop
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
add
xor
popf
sub
mov
test
push
add
sbb
cwtl
push
lods
test
add
mov
adc
jae
push
popa
sti
int
mov
sbb
je
arpl
push
adc
push
shrb
stos
mov
push
dec
outsb
pop
jb
lods
sub
and
js
push
andb
ret
push
imul
insb
jb
jo
push
push
dec
imul
mov
mov
mov
cmpsl
outsl
pop
mov
dec
lock
jb
jb
je
inc
mov
jne
gs
or
push
push
jb
jg
lods
or
mov
popa
fs
lcall
jb
pop
inc
mov
ss
arpl
insb
cmp
repnz
dec
insl
sub
inc
pop
adc
sbb
and
add
pop
jae
sbb
add
push
jg
outsb
jae
jo
push
xor
mov
inc
pop
jns
cwtl
addr16
jb
push
out
fs
xor
imul
inc
pop
and
inc
arpl
cmpsb
jp
jbe
xor
mov
movsl
inc
jae
bound
inc
and
jl
je
adc
sarl
or
and
test
and
pop
and
orb
xor
fwait
xchg
test
pushl
inc
cmp
pop
test
stos
rorl
or
mov
add
or
shl
push
xor
push
and
push
xchg
mov
push
dec
roll
inc
push
sub
rcll
add
adc
aas
outsl
and
nop
dec
dec
inc
mov
xchg
or
test
out
add
push
rorl
xchg
sub
jle
inc
or
push
and
dec
gs
mov
inc
mov
adc
inc
inc
mov
inc
jecxz
sub
dec
or
add
xlat
pusha
xchg
sub
lds
sbb
addl
xor
icebp
pop
andb
adc
mov
test
inc
addl
add
jnp
test
inc
inc
lea
inc
or
dec
adc
pop
inc
mov
adcb
movups
dec
dec
xor
scas
adc
or
mov
dec
pop
repnz
and
push
or
ret
wrmsr
and
mov
adc
adc
inc
or
push
sub
das
push
mov
subb
inc
je
add
xorb
dec
adc
and
or
adc
leave
mov
mov
adcb
adc
lock
inc
lea
popa
jae
dec
outsb
push
mov
insb
xor
xor
mov
arpl
add
mov
sbb
outsb
test
test
shl
call
movl
and
cmp
add
and
stos
inc
and
add
or
pop
sti
sbb
adc
add
inc
fstpl
mov
lret
jecxz
test
adc
imul
mov
mov
and
push
int3
or
pop
mov
add
or
mov
rcl
add
or
inc
cmp
adc
pcmpeqw
dec
adc
inc
sub
mov
jno
adc
lds
jmp
dec
jnp
push
lods
push
jmp
rcl
xorb
filds
push
xor
mov
stos
sub
inc
sub
adc
cwtl
add
inc
sub
ret
repz
test
xchg
mov
adc
add
and
add
xor
pop
pop
xor
filds
in
cmpsl
push
push
mov
sub
add
ret
test
sub
dec
add
mov
dec
add
xchg
movsl
sbbb
add
add
cmp
stos
sbb
adc
add
in
pop
test
pusha
out
push
je
mov
dec
test
shl
adc
popa
mov
outsl
sub
loop
add
cmp
jg
mov
mov
push
loope
pusha
add
mov
cmc
inc
mov
inc
bound
inc
dec
jnp
add
test
adcl
sbb
or
gs
adc
or
sbb
add
test
inc
push
mov
popa
shrl
inc
test
adcb
add
push
je
xchg
adc
mov
iret
push
sub
sbb
popa
and
roll
lds
stos
lret
addps
xchg
mov
int
movsl
pusha
es
xchg
rorl
cmp
test
loop
pop
xchg
and
pop
push
sbb
mov
mov
add
mov
sbb
mov
dec
add
mov
push
or
shrb
aaa
test
adc
mov
nop
mov
pop
or
cmp
inc
cmc
inc
inc
adcb
push
push
add
and
push
inc
shlb
test
andl
xchg
stos
push
adc
inc
jns
daa
mov
xlat
inc
sub
shll
xchg
test
xchg
adc
mov
inc
dec
lahf
mov
adc
adc
sub
or
and
int
sub
xor
mov
out
adc
add
push
lea
nop
mov
testl
dec
add
xor
adc
adc
or
add
daa
test
xlat
jnp
push
push
rorb
or
test
and
arpl
mov
push
stc
inc
inc
dec
and
test
test
adc
shrb
mov
mov
stos
mov
inc
push
push
sbb
cltd
aam
and
and
xchg
xchg
sbb
movsl
mov
push
sbb
jg
pop
add
lea
or
adc
inc
push
add
jg
sub
push
and
insl
push
add
and
inc
sbb
adc
dec
xchg
icebp
imul
sbb
aaa
and
shll
inc
and
cltd
addr16
push
adc
test
add
mov
mov
and
test
mov
xor
add
pop
push
mov
movsl
inc
cmpb
xlat
and
mov
out
or
fists
push
rorb
mov
or
inc
sub
sub
pop
test
adc
pushl
mov
sub
inc
inc
or
push
stos
scas
add
pushl
push
dec
add
add
add
add
or
or
add
push
or
incb
inc
mov
xchg
xchg
pop
and
prefetchnta
outsl
cmp
lea
mov
jne
nop
enter
cld
push
orb
in
dec
lock
add
add
mov
add
xchg
pop
rorb
rolb
push
scas
dec
leave
mov
mov
popa
cmpsb
mov
add
mov
dec
push
xor
decb
cmp
nop
rolb
mov
dec
xor
or
sahf
loope
cld
dec
jb
jb
notb
cmpsb
xor
add
adc
xchg
fldl
add
test
incl
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
and
add
loopne
add
add
add
add
add
add
or
add
add
js
add
mov
add
add
add
addb
add
add
addb
add
inc
add
addb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
inc
add
add
add
add
add
add
add
add
add
add
mov
add
add
in
add
add
add
add
add
add
add
loopne
add
in
pop
inc
add
add
add
add
add
add
add
add
add
add
or
add
rorb
inc
add
add
add
add
add
add
add
add
add
add
xor
add
mov
inc
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
test
add
pusha
push
inc
add
add
add
add
add
add
add
add
add
add
rolb
add
inc
sbb
loopne
add
in
add
add
add
add
add
arpl
add
clc
add
addb
add
add
add
add
add
add
add
add
add
adc
add
add
add
or
in
add
add
add
and
cmp
mov
or
inc
sbb
test
jge
aaa
arpl
lret
aas
rcr
mov
add
hlt
push
movsl
arpl
jmp
scas
xchg
sub
push
mov
mov
pop
mov
xchg
add
loopne
jae
pop
sbb
enter
scas
sub
mov
insl
cmp
iret
add
add
ds
lret
js
daa
push
out
mov
lcall
rcrb
and
cmp
and
dec
sbb
arpl
stc
push
fiaddl
pop
fcoms
imul
push
out
fs
adc
cmp
div
clc
dec
ss
sbb
push
je
cmpsl
push
dec
adcb
dec
mov
jg
shll
in
add
and
sahf
pop
cld
aas
jmp
adc
add
sbb
imul
ja
jp
mov
sarb
pop
mov
ds
push
push
lock
jns
insl
clc
stos
stos
pop
scas
mov
into
into
mov
imul
stos
sbb
dec
fistpll
pusha
lret
ljmp
int
jge
ja
add
loope
mov
pop
sbb
mov
push
lcall
xor
sbb
sbb
insb
int3
bound
cli
aas
rcr
stos
xchg
enter
adc
dec
fadds
iret
mov
int
je
xchg
dec
sahf
lock
sbb
sub
mov
jno
jae
pop
notl
in
pop
push
xchg
jecxz
xchg
sbb
mov
pop
mov
gs
ljmp
lea
enter
inc
mov
ret
loop
cltd
fsts
je
fs
cmp
fiaddl
adcb
push
movsl
pop
mov
pop
pusha
adc
lcall
mov
mov
shl
pop
mov
cmp
in
test
push
divb
loopne
cmpb
or
jbe
mov
mov
out
stos
loop
sbb
cld
sub
xchg
sub
jmp
mov
mov
adc
xchg
cmpsb
add
leave
sahf
fs
xchg
add
rclb
hlt
clc
or
xchg
data16
jo
mov
fldcw
hlt
cmc
jno
or
sbb
pop
mov
mov
inc
out
loope
dec
xlat
imul
inc
icebp
arpl
scas
fdivl
dec
jnp
shl
cmp
int
aaa
daa
jno
xor
sbb
and
push
cmc
mov
shrb
cmpsb
pop
jno
xlat
lret
sbb
mov
add
addr16
test
xorb
mov
scas
movsb
fnstsw
aas
adc
push
jnp
sbb
mov
pop
orb
aas
mov
xchg
jo
scas
fisubs
nop
out
jnp
lcall
insl
jg
mov
sbb
add
sub
imul
ljmp
test
fwait
sbb
stc
jb
outsl
jo
xor
inc
scas
cwtl
mov
int3
cmp
push
mov
and
lods
popa
xchg
sub
lock
inc
dec
push
mov
shrl
xchg
push
and
sti
sbb
je
cmp
lock
sub
push
mov
mul
adc
xor
iret
jnp
lea
push
jb
subl
jmp
and
bound
mov
xchg
mov
movb
jmp
push
pushf
out
push
mov
mov
xor
lea
enter
aad
sti
xor
ficompl
repz
add
repz
dec
mov
out
xlat
shl
popa
cmpsb
xchg
int
ja
cmc
push
mov
xor
nop
lret
imul
data16
xchg
out
sub
push
mov
test
ret
mov
mov
xor
inc
shrb
andb
loope
xchg
mov
enter
testl
cmp
inc
push
xchg
bound
inc
jae
test
jnp
outsl
and
stos
lret
rolb
mov
sahf
jp
xlat
pop
and
xor
insl
pushf
adc
ds
jno
or
shll
gs
pushf
lods
and
fldenv
jg
add
and
add
sub
out
xchg
es
sbb
dec
mov
sbbb
ja
mov
shl
pop
mov
cmp
in
test
push
divb
loopne
cmpb
or
jbe
mov
mov
out
stos
loop
sbb
cld
sub
xchg
sub
jmp
mov
mov
adc
xchg
cmpsb
add
leave
sahf
fs
xchg
add
rclb
hlt
clc
or
xchg
data16
jo
mov
fldcw
hlt
cmc
jno
or
sbb
pop
mov
mov
inc
out
loope
dec
xlat
imul
inc
icebp
arpl
scas
fdivl
dec
jnp
shl
cmp
int
aaa
daa
jno
xor
sbb
and
push
cmc
mov
shrb
cmpsb
pop
jno
xlat
lret
sbb
mov
add
addr16
test
xorb
mov
scas
movsb
fnstsw
aas
adc
push
jnp
sbb
mov
pop
orb
aas
mov
xchg
jo
scas
fisubs
nop
out
jnp
lcall
insl
jg
mov
sbb
add
sub
imul
ljmp
test
fwait
sbb
stc
jb
outsl
jo
xor
inc
scas
cwtl
mov
int3
cmp
push
mov
and
lods
popa
xchg
sub
lock
inc
dec
push
mov
shrl
xchg
push
and
sti
sbb
je
cmp
lock
sub
push
mov
mul
adc
xor
iret
jnp
lea
push
jb
subl
jmp
and
bound
mov
xchg
mov
movb
jmp
push
pushf
out
push
mov
mov
xor
lea
enter
aad
sti
xor
ficompl
repz
add
repz
dec
mov
out
xlat
shl
popa
cmpsb
xchg
int
ja
cmc
push
mov
xor
nop
lret
imul
data16
xchg
out
sub
push
mov
test
ret
mov
mov
xor
inc
shrb
andb
loope
xchg
mov
enter
testl
cmp
inc
push
xchg
bound
inc
jae
test
jnp
outsl
and
stos
lret
rolb
mov
sahf
jp
xlat
pop
and
xor
insl
pushf
adc
ds
jno
or
shll
gs
pushf
lods
and
fldenv
jg
add
and
add
sub
out
xchg
es
sbb
dec
mov
sbbb
ja
mov
shl
pop
mov
cmp
in
test
push
divb
loopne
cmpb
or
jbe
mov
mov
out
stos
loop
sbb
cld
sub
xchg
sub
jmp
mov
mov
adc
xchg
cmpsb
add
leave
sahf
fs
xchg
add
rclb
hlt
clc
or
xchg
data16
jo
mov
fldcw
hlt
cmc
jno
or
sbb
pop
mov
mov
inc
out
loope
dec
xlat
imul
inc
icebp
arpl
scas
fdivl
dec
jnp
shl
cmp
int
aaa
daa
jno
xor
sbb
and
push
cmc
mov
shrb
cmpsb
pop
jno
xlat
lret
sbb
mov
add
addr16
test
xorb
mov
scas
movsb
fnstsw
aas
adc
push
jnp
sbb
mov
pop
orb
aas
mov
xchg
jo
scas
fisubs
nop
out
jnp
lcall
insl
jg
mov
sbb
add
sub
imul
ljmp
test
fwait
sbb
stc
jb
outsl
jo
xor
inc
scas
cwtl
mov
int3
cmp
push
mov
and
lods
popa
xchg
sub
lock
inc
dec
push
mov
shrl
xchg
push
and
sti
sbb
je
cmp
lock
sub
push
mov
mul
adc
xor
iret
jnp
lea
push
jb
subl
jmp
and
bound
mov
xchg
mov
movb
jmp
push
pushf
out
push
mov
mov
xor
lea
enter
aad
sti
xor
ficompl
repz
add
repz
dec
mov
out
xlat
shl
popa
cmpsb
xchg
int
ja
cmc
push
mov
xor
nop
lret
imul
data16
xchg
out
sub
push
mov
test
ret
mov
mov
xor
inc
shrb
andb
loope
xchg
mov
enter
testl
cmp
inc
push
xchg
bound
inc
jae
test
jnp
outsl
and
stos
lret
rolb
mov
sahf
jp
xlat
pop
and
xor
insl
pushf
adc
ds
jno
or
shll
gs
pushf
lods
and
fldenv
jg
add
and
add
sub
out
xchg
es
sbb
dec
mov
sbbb
ja
mov
shl
pop
mov
cmp
in
test
push
divb
loopne
cmpb
or
jbe
mov
mov
out
stos
loop
sbb
cld
sub
xchg
sub
jmp
mov
mov
adc
xchg
cmpsb
add
leave
sahf
fs
xchg
add
rclb
hlt
clc
or
xchg
data16
jo
mov
fldcw
hlt
cmc
jno
or
sbb
pop
mov
mov
inc
out
loope
dec
xlat
imul
inc
icebp
arpl
scas
fdivl
dec
jnp
shl
cmp
int
aaa
daa
jno
xor
sbb
and
push
cmc
mov
shrb
cmpsb
pop
jno
xlat
lret
sbb
mov
add
addr16
test
xorb
mov
scas
movsb
fnstsw
aas
adc
push
jnp
sbb
mov
pop
orb
aas
mov
xchg
jo
scas
fisubs
nop
out
jnp
lcall
insl
jg
mov
sbb
add
sub
imul
ljmp
test
fwait
sbb
stc
jb
outsl
jo
xor
inc
scas
cwtl
mov
int3
cmp
push
mov
and
lods
popa
xchg
sub
lock
inc
dec
push
mov
shrl
xchg
push
and
sti
sbb
je
cmp
lock
sub
push
mov
mul
adc
xor
iret
jnp
lea
push
jb
subl
jmp
and
bound
mov
xchg
mov
movb
jmp
push
pushf
out
push
mov
mov
xor
lea
enter
aad
sti
xor
ficompl
repz
add
repz
dec
mov
out
xlat
shl
popa
cmpsb
xchg
int
ja
cmc
push
mov
xor
nop
lret
imul
data16
xchg
out
sub
push
mov
test
ret
mov
mov
xor
inc
shrb
andb
loope
xchg
mov
enter
testl
cmp
inc
push
xchg
bound
inc
jae
test
jnp
outsl
and
stos
lret
rolb
mov
sahf
jp
xlat
pop
and
xor
insl
pushf
adc
ds
jno
or
shll
gs
pushf
lods
and
fldenv
jg
add
and
add
sub
out
xchg
es
sbb
dec
mov
sbbb
ja
mov
shl
pop
mov
cmp
in
test
push
divb
loopne
cmpb
or
jbe
mov
mov
out
stos
loop
sbb
cld
sub
xchg
sub
jmp
mov
mov
adc
xchg
cmpsb
add
leave
sahf
fs
xchg
add
rclb
hlt
clc
or
xchg
data16
jo
mov
fldcw
hlt
cmc
jno
or
sbb
pop
mov
mov
inc
out
loope
dec
xlat
imul
inc
icebp
arpl
scas
fdivl
dec
jnp
shl
cmp
int
aaa
daa
jno
xor
sbb
and
push
cmc
mov
shrb
cmpsb
pop
jno
xlat
lret
sbb
mov
add
addr16
test
xorb
mov
scas
movsb
fnstsw
aas
adc
push
jnp
sbb
mov
pop
orb
aas
mov
xchg
jo
scas
fisubs
nop
out
jnp
lcall
insl
jg
mov
sbb
add
sub
imul
ljmp
test
fwait
sbb
stc
jb
outsl
jo
xor
inc
scas
cwtl
mov
int3
cmp
push
mov
and
lods
popa
xchg
sub
lock
inc
dec
push
mov
shrl
xchg
push
and
sti
sbb
je
cmp
lock
sub
push
mov
mul
adc
xor
iret
jnp
lea
push
jb
subl
jmp
and
bound
mov
xchg
mov
movb
jmp
push
pushf
out
push
mov
mov
xor
lea
enter
aad
sti
xor
ficompl
repz
add
repz
dec
mov
out
xlat
shl
popa
cmpsb
xchg
int
ja
cmc
push
mov
xor
nop
lret
imul
data16
xchg
out
sub
push
mov
test
ret
mov
mov
xor
inc
shrb
andb
loope
xchg
mov
enter
testl
cmp
inc
push
xchg
bound
inc
jae
test
jnp
outsl
and
stos
lret
rolb
mov
sahf
jp
xlat
pop
and
xor
insl
pushf
adc
ds
jno
or
shll
gs
pushf
lods
and
fldenv
jg
add
and
add
sub
out
xchg
es
sbb
dec
mov
sbbb
ja
mov
shl
pop
mov
cmp
in
test
push
divb
loopne
cmpb
or
jbe
mov
mov
out
stos
loop
sbb
cld
sub
xchg
sub
jmp
mov
mov
adc
xchg
cmpsb
add
leave
sahf
fs
xchg
add
rclb
hlt
clc
or
xchg
data16
jo
mov
fldcw
hlt
cmc
jno
or
sbb
pop
mov
mov
inc
out
loope
dec
xlat
imul
inc
icebp
arpl
scas
fdivl
dec
jnp
shl
cmp
int
aaa
daa
jno
xor
sbb
and
push
cmc
mov
shrb
cmpsb
pop
jno
xlat
lret
sbb
mov
add
addr16
test
xorb
mov
scas
movsb
fnstsw
aas
adc
push
jnp
sbb
mov
pop
orb
aas
mov
xchg
jo
scas
fisubs
nop
out
jnp
lcall
insl
jg
mov
sbb
add
sub
imul
ljmp
test
fwait
sbb
stc
jb
outsl
jo
xor
inc
scas
cwtl
mov
int3
cmp
push
mov
and
lods
popa
xchg
sub
lock
inc
dec
push
mov
shrl
xchg
push
and
sti
sbb
je
cmp
lock
sub
push
mov
mul
adc
xor
iret
jnp
lea
push
jb
subl
jmp
and
bound
mov
xchg
mov
movb
jmp
push
pushf
out
push
mov
mov
xor
lea
enter
aad
sti
xor
ficompl
repz
add
repz
dec
mov
out
xlat
shl
popa
cmpsb
xchg
int
ja
cmc
push
mov
xor
nop
lret
imul
data16
xchg
out
sub
push
mov
test
ret
mov
mov
xor
inc
shrb
andb
loope
xchg
mov
enter
testl
cmp
inc
push
xchg
bound
inc
jae
test
jnp
outsl
and
stos
lret
rolb
mov
sahf
jp
xlat
pop
and
xor
insl
pushf
adc
ds
jno
or
shll
gs
pushf
lods
and
fldenv
jg
add
and
add
sub
out
xchg
es
sbb
dec
mov
sbbb
ja
mov
shl
pop
mov
cmp
in
test
push
divb
loopne
cmpb
or
jbe
mov
mov
out
stos
loop
sbb
cld
sub
xchg
sub
jmp
mov
mov
adc
xchg
cmpsb
add
leave
sahf
fs
xchg
add
rclb
hlt
clc
or
xchg
data16
jo
mov
fldcw
hlt
cmc
jno
or
sbb
pop
mov
mov
inc
out
loope
dec
xlat
imul
inc
icebp
arpl
scas
fdivl
dec
jnp
shl
cmp
int
aaa
daa
jno
xor
sbb
and
push
cmc
mov
shrb
cmpsb
pop
jno
xlat
lret
sbb
mov
add
addr16
test
xorb
mov
scas
movsb
fnstsw
aas
adc
push
jnp
sbb
mov
pop
orb
aas
mov
xchg
jo
scas
fisubs
nop
out
jnp
lcall
insl
jg
mov
sbb
add
sub
imul
ljmp
test
fwait
sbb
stc
jb
outsl
jo
xor
inc
scas
cwtl
mov
int3
cmp
push
mov
and
lods
popa
xchg
sub
lock
inc
dec
push
mov
shrl
xchg
push
and
sti
sbb
je
cmp
lock
sub
push
mov
mul
adc
xor
iret
jnp
lea
push
jb
subl
jmp
and
bound
mov
xchg
mov
movb
jmp
push
pushf
out
push
mov
mov
xor
lea
enter
aad
sti
xor
ficompl
repz
add
repz
dec
mov
out
xlat
shl
popa
cmpsb
xchg
int
ja
cmc
push
mov
xor
nop
lret
imul
data16
xchg
out
sub
push
mov
test
ret
mov
mov
xor
inc
shrb
andb
loope
xchg
mov
enter
testl
cmp
inc
push
xchg
bound
inc
jae
test
jnp
outsl
and
stos
lret
rolb
mov
sahf
jp
xlat
pop
and
xor
insl
pushf
adc
ds
jno
or
shll
gs
pushf
lods
and
fldenv
jg
add
and
add
sub
out
xchg
es
sbb
dec
mov
sbbb
ja
mov
shl
pop
mov
cmp
in
test
push
divb
loopne
cmpb
or
jbe
mov
mov
out
stos
loop
sbb
cld
sub
xchg
sub
jmp
mov
mov
adc
xchg
cmpsb
add
leave
sahf
fs
xchg
add
rclb
hlt
clc
or
xchg
data16
jo
mov
fldcw
hlt
cmc
jno
or
sbb
pop
mov
mov
inc
out
loope
dec
xlat
imul
inc
icebp
arpl
scas
fdivl
dec
jnp
shl
cmp
int
aaa
daa
jno
xor
sbb
and
push
cmc
mov
shrb
cmpsb
pop
jno
xlat
lret
sbb
mov
add
addr16
test
xorb
mov
scas
movsb
fnstsw
aas
adc
push
jnp
sbb
mov
pop
orb
aas
mov
xchg
jo
scas
fisubs
nop
out
jnp
lcall
insl
jg
mov
sbb
add
sub
imul
ljmp
test
fwait
sbb
stc
jb
outsl
jo
xor
inc
scas
cwtl
mov
int3
cmp
push
mov
and
lods
popa
xchg
sub
lock
inc
dec
push
mov
shrl
xchg
push
and
sti
sbb
je
cmp
lock
sub
push
mov
mul
adc
xor
iret
jnp
lea
push
jb
subl
jmp
and
bound
mov
xchg
mov
movb
jmp
push
pushf
out
push
mov
mov
xor
lea
enter
aad
sti
xor
ficompl
repz
add
repz
dec
mov
out
xlat
shl
popa
cmpsb
xchg
int
ja
cmc
push
mov
xor
nop
lret
imul
data16
xchg
out
sub
push
mov
test
ret
mov
mov
xor
inc
shrb
andb
loope
xchg
mov
enter
testl
cmp
inc
push
xchg
bound
inc
jae
test
jnp
outsl
and
stos
lret
rolb
mov
sahf
jp
xlat
pop
and
xor
insl
pushf
adc
ds
jno
or
shll
gs
pushf
lods
and
fldenv
jg
add
and
add
sub
out
xchg
es
sbb
dec
mov
sbbb
ja
mov
shl
pop
mov
cmp
in
test
push
divb
loopne
cmpb
or
jbe
mov
mov
out
stos
loop
sbb
cld
sub
xchg
sub
jmp
mov
mov
adc
xchg
cmpsb
add
leave
sahf
fs
xchg
add
rclb
hlt
clc
or
xchg
data16
jo
mov
fldcw
hlt
cmc
jno
or
sbb
pop
mov
mov
inc
out
loope
dec
xlat
imul
inc
icebp
arpl
scas
fdivl
dec
jnp
shl
cmp
int
aaa
daa
jno
xor
sbb
and
push
cmc
mov
shrb
cmpsb
pop
jno
xlat
lret
sbb
mov
add
inc
add
sbb
add
add
rcrb
add
add
ficompl
add
add
out
inc
add
sbb
add
inc
add
sbb
inc
add
add
add
sbb
add
dec
sbb
add
pop
sbb
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
outsl
ja
gs
add
arpl
xor
add
outsb
jae
popa
jb
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
insb
insb
inc
gs
gs
imul
jb
outsb
jae
popa
je
dec
popa
insl
gs
add
addr16
jb
push
inc
popa
jb
push
xor
imul
