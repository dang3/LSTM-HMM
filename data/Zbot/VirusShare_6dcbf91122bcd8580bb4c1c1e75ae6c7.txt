sbb
add
inc
add
pop
jnp
mov
in
ret
fs
dec
pop
shll
mov
inc
pop
adc
fisubl
out
add
lods
mov
adc
jnp
sahf
jge
inc
mov
xor
sbbl
cs
mov
inc
fdivl
fistpll
aaa
out
and
inc
push
cld
and
imul
popf
hlt
rcll
cmp
popf
out
mov
adc
cmpsl
push
hlt
aas
xchg
inc
inc
push
shrb
jl
int
mov
imul
sahf
hlt
and
call
fiaddl
dec
or
mov
add
clc
adc
add
aaa
arpl
adc
dec
sub
loopne
jge
mov
fs
mov
mov
bound
loop
ret
cli
dec
ds
inc
arpl
imul
push
lret
call
inc
mov
mov
jb
xchg
push
in
pop
shlb
stc
push
fwait
jg
mov
call
mov
pop
sub
push
scas
test
and
add
dec
lcall
incl
xor
jl
stos
mov
jge
cli
subl
imul
imul
outsb
insb
pop
cmpsb
cmp
fprem
imul
pushf
retw
jae
shlb
aad
xchg
movsl
sti
xor
insl
sbb
test
fldcw
add
addr16
call
imul
pusha
stos
sub
leave
nop
inc
sbb
test
fists
pop
pop
mov
mov
xchg
popf
mov
add
adc
mov
cltd
jo
cs
cmp
fistl
adc
inc
shrb
push
xchg
testl
dec
cwtl
fwait
lods
sub
adc
ret
movsb
and
imul
push
mov
or
loope
in
fwait
add
mov
ja
mov
mov
in
rcl
popa
and
sbb
xchg
fnstenv
call
sub
cmp
mov
mov
inc
repnz
mov
loop
or
push
in
or
mov
pop
mov
in
mov
loop
inc
emms
mov
or
xor
pushf
add
sub
lods
cmp
aad
adcb
scas
adcb
adc
leave
dec
dec
shrl
add
jge
mov
inc
xor
jp
int
paddb
insb
mov
jns
into
mov
or
adc
xchg
mov
sbb
ja
fidivrl
shrl
push
hlt
mov
cwtl
and
andl
fmul
xchg
ljmp
shlb
pushl
pop
dec
les
rorl
dec
mov
cwtl
xchg
cli
movsl
sub
inc
sbb
fmul
sbb
jb
mov
push
loopne
ret
and
push
add
mov
icebp
cmpsl
inc
mov
push
ds
sbb
xchg
imul
fdiv
pop
mov
leave
int3
cmp
dec
jmp
inc
es
xchg
push
adc
std
xor
xlat
inc
and
adc
inc
icebp
pushl
xchg
mov
es
cli
and
mov
ret
pusha
push
adc
xor
xchg
in
stos
ja
outsl
pop
jns
pop
cmpsb
mov
nop
xchg
js
or
dec
jbe
fcoml
inc
dec
jo
das
sbb
fstpl
adc
cld
xlat
aaa
mov
sub
dec
stos
adc
push
insl
iret
add
adc
ss
lcall
stos
cmpsb
das
adc
sub
and
dec
insl
leave
cmpsb
fidivl
ret
rcrb
imul
gs
cmp
jb
mov
pusha
inc
insl
sub
mov
add
lods
adc
lods
testl
icebp
pop
int3
pop
dec
fwait
les
popf
xchg
mov
mov
pop
inc
or
sbb
jmp
outsl
clc
sub
loopne
cs
sbb
enter
add
add
and
adc
repz
dec
fsubrl
mov
push
inc
dec
mov
arpl
es
ret
inc
rcll
outsb
xor
sahf
sub
sar
mov
mov
imulb
lahf
and
call
sub
in
push
dec
sbb
pop
or
inc
stos
jae
jp
pop
mov
push
sub
mov
loope
dec
sub
and
cmpsb
pop
lret
mov
and
cmpsl
rcrb
dec
fcmovnbe
sbb
fstp
fidivl
mov
stos
std
sahf
fxam
or
mov
call
test
jns
cmp
dec
outsb
jnp
pop
push
pusha
dec
cmp
fcoml
int
nop
lds
incl
and
jns
sub
push
pop
pop
sub
test
stc
push
jb
adc
inc
pop
inc
mov
idivb
out
test
je
jae
fnstsw
pop
lods
out
mov
push
adc
mov
add
in
xchg
mov
push
insl
popf
ret
and
push
shlb
ja
fdivrl
dec
js
push
sahf
fisubl
cli
movsl
sub
and
dec
xor
mov
sbb
js
xchg
mov
incl
out
pop
scas
leave
std
and
loop
inc
fiaddl
mov
std
sbb
mov
pop
sub
xchg
push
inc
in
mull
jg
out
or
ret
jecxz
or
scas
pop
std
scas
or
and
inc
xchg
xor
and
loope
outsb
mov
or
inc
dec
scas
in
xorl
lods
sbb
mov
imul
popf
clc
popf
inc
add
pop
fmull
repz
mov
movsb
mov
mov
sub
xchg
fidivs
sbb
pop
xchg
xchg
outsb
out
cld
mov
fsub
loopne
leave
jl
pop
dec
mov
pop
popa
mov
xchg
shrl
test
fsubr
aas
push
jo
ss
inc
inc
push
adc
and
jg
jp
cmpsl
fstpt
push
cld
mov
xchg
dec
test
cmp
xchg
sahf
pop
das
sub
out
clc
in
out
xchg
xchg
jge
mov
test
loopne
jecxz
pushf
dec
shl
in
inc
stos
arpl
fimull
lret
rolb
cmp
in
scas
enter
mov
push
movl
movsb
pop
mov
and
lcall
insl
xor
add
dec
gs
scas
fistps
pushf
mov
ss
insb
imulb
ds
in
jecxz
and
cmp
fbld
sub
bound
sbb
movsl
push
cmpsl
push
lret
jns
testb
jne
mov
js
scas
cmp
mov
movsb
call
addl
hlt
sbb
sahf
in
jg
jo
insb
mov
mov
pop
mov
popa
jg
leave
rclb
xchg
shrb
loopne
lret
in
out
sbb
insl
add
sahf
hlt
shld
fabs
sbb
or
pop
dec
bound
int
bound
ret
push
ficoml
dec
jmp
dec
mov
rcrb
fcomip
jae
pop
cs
cli
jg
mov
cmp
loope
or
fbld
push
fisttps
adc
movsb
outsl
sub
push
movb
adc
mov
test
mov
xor
dec
cld
and
repz
and
int
shl
pop
xchg
dec
push
sub
cmpsl
push
add
push
jbe
xor
mov
data16
inc
push
push
push
sbb
jbe
dec
push
fmuls
hlt
push
jmp
in
or
fdivrp
mov
lcall
in
rcl
mull
dec
mov
xor
ja
lock
ljmp
jbe
or
dec
and
inc
fs
ljmp
fistps
test
mov
adc
adc
and
insl
dec
push
sub
and
shrb
clc
rclb
pop
mov
inc
ret
mov
daa
pop
mov
and
cmpsl
pop
movsl
push
enter
cmc
ficoms
mul
es
sti
out
jg
mov
dec
shlb
lcall
test
push
jbe
xchg
orl
inc
testl
push
xor
inc
test
rcrb
insb
add
cmp
sbb
dec
das
mov
xchg
ret
mov
jns
inc
ljmp
clc
les
push
inc
mov
ja
cmpsb
sbbl
and
cmpsb
test
push
cltd
loope
pop
jp
or
sub
fsubr
xchg
cltd
mov
mov
xchg
sti
pop
sbb
inc
enter
das
mov
fimuls
lcall
xchg
mov
iret
aad
data16
sarl
mov
pushf
sahf
xor
inc
and
arpl
repz
jbe
jno
inc
sub
aas
aad
xchg
por
pop
int3
inc
or
test
sub
pop
out
cmp
xchg
scas
dec
jns
aam
jl
aam
imul
sbb
dec
add
popa
ret
pusha
push
outsl
enter
addr16
insl
int
int3
cmp
addr16
sub
lret
dec
mov
pop
sbb
mov
sarl
cmpb
loop
mov
push
mov
icebp
mov
adc
or
call
scas
mov
add
fst
dec
andl
data16
adc
mov
movsl
mov
push
in
cmp
addb
fdivl
rolb
ret
dec
xor
hlt
fbstp
sub
pushf
or
imul
cmp
cmp
push
or
ds
dec
mov
sub
pop
pop
shrb
outsb
cmpl
add
sti
loopne
test
sub
lods
imul
sub
jne
lahf
jno
xor
mov
stos
cwtl
pop
loop
mov
or
and
adc
fidivs
hlt
jb
ret
and
cmp
int
ficompl
es
inc
out
adc
jle
lahf
push
mov
push
xchg
mov
and
push
push
xchg
cmp
mov
mov
mov
push
lret
outsb
xor
andps
adc
mov
cmp
aas
hlt
push
movsl
shll
mov
fcmovbe
dec
dec
pop
fsubl
xor
mov
xor
sbb
fsubl
in
pop
fstpl
cmp
inc
cmpsb
mov
jbe
ja
and
ret
mov
stos
fwait
add
sub
xchg
out
jnp
and
aas
fdivr
mov
mov
fdivp
or
sub
mov
popa
and
mov
imul
sti
es
lret
jne
fcompl
jp
fwait
in
xchg
sbb
fisubl
stc
push
push
adc
xchg
popa
jb
dec
dec
dec
pop
xor
loope
dec
das
das
jmp
cli
stos
xor
xchg
xchg
movsl
out
add
arpl
cwtl
shlb
mov
jbe
jge
sbbb
pop
dec
xor
pop
sar
and
lods
or
sub
icebp
dec
pop
push
lea
mov
dec
out
sbb
sbb
lods
xchg
ss
jbe
cld
in
mov
repnz
mov
inc
push
mov
out
hlt
or
mov
push
mov
popa
pusha
xchg
mov
and
es
and
out
cmp
insb
aad
adc
rorl
sub
insl
or
bswap
imul
add
lods
call
repz
jo
lret
jmp
test
add
movsb
fsub
loopne
je
jb
leave
aaa
sub
dec
lahf
sbb
es
mov
cld
subb
jmp
pop
inc
jle
insb
mov
pop
rolb
cmpsb
dec
dec
in
push
pop
jp
jns
inc
lods
mov
and
jno
cmp
out
xlat
xchg
or
cmp
push
jge
mov
mov
enter
movsl
fucomp
cwtl
mov
push
mov
jae
push
cmp
lea
push
fildl
jecxz
pop
lea
inc
or
mov
push
sti
mov
add
push
xor
ret
pop
in
in
xor
inc
pusha
in
add
popf
or
lods
orb
mov
sub
push
inc
push
and
sub
imul
loope
lcall
jae
gs
pop
xchg
lret
cmp
insl
scas
xor
dec
stos
dec
rorb
test
imul
fidivrl
in
test
testb
xor
jae
loopne
mov
adc
pop
rcll
add
loop
dec
sub
push
test
sub
into
out
mov
adc
fmull
test
aam
push
mov
sarl
lret
bound
inc
jg
mov
rcl
push
cmpsl
sub
mov
call
jg
push
daa
sbb
mov
repz
mov
mov
mov
inc
test
dec
dec
cmpsb
call
mov
pop
lods
loope
fnstcw
xchg
xchg
js
mov
pusha
dec
mov
push
rcl
outsl
ja
inc
fildll
push
mov
jecxz
cmp
je
push
push
cld
sbb
ljmp
insb
cli
adc
shr
shr
loope
ret
movsb
mov
push
push
mov
xchg
fldenv
fmuls
sar
push
dec
push
xor
xchg
push
sub
mov
repnz
add
sbb
inc
addl
ret
ficomps
jo
or
and
sahf
fnstcw
sub
push
dec
push
or
lods
lahf
aad
in
in
mov
pop
iret
jbe
cltd
pushf
sub
inc
leave
imull
mov
mov
jle
mov
testb
scas
in
int
lods
in
fdivs
xchg
cltd
rcr
xlat
xchg
icebp
lcall
insb
mov
jle
mov
push
push
ss
or
sub
outsb
mov
lea
cltd
lea
xorl
mov
into
cwtl
ss
jge
jge
mov
repz
in
xchg
incb
push
aas
stos
mov
addb
insl
xor
cli
jbe
into
sub
add
imul
bound
ret
push
inc
scas
push
jmp
xlat
dec
sbb
add
dec
push
sub
out
dec
shlw
push
loope
das
mov
push
mov
fidivrl
scas
mov
lret
das
xchg
and
mov
shll
sub
mov
cmpsb
or
dec
mov
inc
ficomps
frstor
into
jg
pop
lcall
je
icebp
inc
mov
mov
inc
cmp
and
fisubs
scas
outsb
adc
stc
cmp
dec
aaa
aaa
xchg
nop
mov
pop
sahf
subb
and
sbb
arpl
jno
push
pop
bound
ljmp
sbb
jmp
movsb
in
xor
mov
int
adc
pop
push
stos
gs
push
nop
cld
mov
sbb
jbe
xor
jo
hlt
sub
hlt
mov
mov
xlat
es
out
jae
js
or
insb
loopne
mov
sbb
gs
jb
fimuls
fisubrl
imulb
jbe
push
xchg
xchg
xor
add
jbe
sbb
dec
xor
aam
je
rcrb
push
out
mov
xchg
or
lret
jnp
jecxz
aaa
out
imull
mov
jae
inc
leave
jnp
jne
inc
pop
xchg
jge
pushf
sbb
loopne
popl
sbb
adc
ret
cmp
xchg
in
lods
push
and
lods
jbe
lcall
xor
fs
hlt
into
lret
ss
push
repz
cmc
mov
sub
sbb
cmpsb
xchg
xor
and
fldenv
into
adc
sub
and
sbb
insb
aad
mov
jecxz
js
sub
mov
shrl
loopne
and
lret
or
lods
and
jo
pop
dec
inc
or
aaa
ret
cltd
lret
adc
jmp
or
sub
mov
mov
jg
or
mov
fwait
sbb
test
push
leave
insb
cmp
sbb
sbb
cmpsb
jo
daa
xchg
mov
mov
fisttpl
movsl
mov
loope
mov
test
pop
arpl
xlat
mov
leave
add
jl
jle
jmp
cwtl
push
xchg
test
add
push
inc
dec
jno
in
pusha
mov
repnz
pop
xchg
ret
js
mov
loope
outsl
or
mov
scas
inc
sub
pop
inc
push
or
clc
or
js
xor
add
sub
jmp
lock
push
int
mov
out
stos
and
je
mov
dec
jno
pushf
pop
into
jns
scas
cli
jg
lock
and
into
push
xor
mov
lods
and
lahf
movsl
jge
mov
or
iret
test
mov
inc
xchg
or
inc
add
and
lcall
sbb
cmp
es
sbb
or
sub
aaa
or
pop
loop
sbbl
lret
xlat
das
pop
sub
add
inc
shrb
xchg
test
mov
rcrb
inc
jecxz
cmp
cmp
lds
loop
in
ret
jecxz
cs
and
inc
int3
xchg
cmp
aam
stos
stos
mov
shll
xor
inc
xchg
iret
jns
push
stc
pop
popf
inc
or
leave
ja
loopne
lods
sub
ss
in
or
fmulp
cltd
enter
lcall
xchg
sub
testb
push
rorb
cmpsb
cmp
inc
jg
stos
hlt
pop
push
jnp
jnp
popa
sbb
pushf
inc
mov
cmp
and
std
or
mov
fidivrs
push
sbb
mov
or
ljmp
inc
jno
jns
xchg
jne
js
and
adc
out
mov
inc
cmc
js
sbb
lods
pop
aas
jl
pop
lret
je
jg
sbb
insb
jmp
cmp
adc
mov
aas
shr
test
repz
test
push
nop
push
stos
data16
mov
jp
lds
pop
xor
dec
dec
aaa
sbb
in
cmp
jae
mov
inc
xor
mov
sub
inc
shlb
aas
dec
lcall
jnp
pop
adc
pop
icebp
in
jo
loop
xlat
dec
lods
lea
into
sub
jo
repnz
pop
push
into
dec
adc
daa
push
push
pop
jne
scas
imull
pop
push
daa
repnz
insl
ja
or
rcr
and
push
nop
cmp
mov
jecxz
mov
cmp
xor
sbb
repnz
xor
push
cmpsl
inc
pop
adcb
inc
je
insb
iret
test
lret
aad
test
inc
aaa
dec
jae
or
push
sub
cmp
imul
pop
sbb
frstor
arpl
leave
dec
mov
dec
test
lods
jecxz
fnstcw
push
sbb
loopne
scas
or
arpl
jmp
mov
push
jnp
repz
es
adc
jns
aam
out
push
inc
pusha
cwtl
aas
fildl
sub
out
mov
scas
add
mov
cltd
cmp
jecxz
mov
sub
inc
pop
idivl
xchg
gs
popf
and
int3
xor
dec
in
in
shl
jns
sub
push
xchg
imul
xchg
add
lahf
mov
lahf
push
shll
icebp
scas
mov
sar
adc
sbb
out
shll
sbb
jge
lods
push
in
ret
cmp
adc
js
xchg
leave
test
out
cmpsb
cltd
adc
ja
mov
push
or
fisubrs
jae
xor
lret
stc
iret
fimuls
jo
xchg
data16
nop
daa
pop
aad
push
xchg
jmp
outsl
mov
lods
rol
sub
mov
lods
push
push
pop
imul
cltd
rolb
lds
in
call
add
xor
or
mov
imul
and
dec
fcmovb
pop
mov
aas
shll
jmp
out
fstps
popf
clc
ljmp
call
sub
jmp
jle
mov
push
test
fcoms
nop
ds
sub
jno
rclb
cltd
cli
lcall
in
cmc
push
push
imul
int3
loopne
ret
xor
sub
jns
xor
pop
aad
push
das
jle
add
and
aam
xor
scas
ficompl
and
mov
cmp
imul
sub
xlat
push
paddusw
mov
jmp
rclb
pop
xchg
lcall
sbb
inc
repz
insb
rorl
in
fwait
xchg
sti
cmp
jbe
xor
jae
xchg
pop
push
ret
jo
fwait
and
or
pop
dec
jno
jbe
out
mov
jne
orb
cltd
push
xchg
and
into
stos
mov
xchg
jmp
test
fcmovb
ss
es
cmpsl
repnz
sbb
pop
lcall
and
hlt
push
xchg
insb
push
jae
cmpl
imul
in
mov
xchg
adc
stos
sub
int
sti
and
xor
xchg
lcall
xor
inc
dec
aam
mov
fwait
imul
jg
sbb
cmp
gs
mov
jp
pop
push
sbb
jbe
xchg
testl
movb
push
jb,pt
xorl
mov
and
ja
fs
and
data16
push
mov
push
into
mov
in
inc
ds
cmp
shll
mov
testl
je
out
mov
fstpt
push
ljmp
into
fstp
addb
cmp
fdivs
or
jge
ficoml
sbb
and
mov
shl
dec
pop
ret
and
shlb
dec
mov
push
mov
push
jae
dec
aas
sub
ljmp
shlb
fldenv
xor
pop
mov
push
call
xchg
mov
les
xchg
inc
mov
jp
mov
xchg
std
push
sbb
addr16
sti
test
hlt
push
xor
gs
icebp
mov
std
fnstsw
mov
mov
or
scas
daa
outsl
push
ret
imul
adc
inc
scas
inc
js
pop
mov
push
jge
adc
mov
orl
xor
imul
ja
repnz
in
lcall
jmp
sub
in
nop
faddp
inc
push
mov
iret
movsl
bound
shrl
jae
jne
inc
xchg
dec
cmc
sbb
adc
lock
sbb
dec
outsl
push
dec
cli
xchg
lcall
enter
xor
mov
adc
leave
sub
push
nop
test
xor
xchg
cmp
or
sub
gs
jns
push
adc
scas
push
xlat
sahf
inc
aad
test
loop
pusha
mov
out
daa
jg
scas
jae
mov
imul
xor
push
mov
sub
inc
xchg
and
mov
xchg
jle
cmp
cmp
cmp
inc
xor
add
mov
icebp
js
and
movsl
in
out
jb
jo
icebp
in
inc
dec
les
inc
fs
mov
idiv
cmpsl
mov
out
in
rcrb
inc
and
mov
mov
addb
add
cli
es
rorb
inc
pop
mov
xchg
mov
ja
loop,pn
cmpsb
push
push
stos
sahf
or
int3
xchg
fmuls
or
lods
mov
clc
sbb
fisttpl
jle
pop
gs
mov
sbb
jb
lret
mov
add
inc
lahf
pop
xor
or
data16
aam
int
lock
pushl
cmp
pop
shll
fidivrl
mov
cmp
bnd
jmp
or
mov
in
or
xchg
add
push
cmp
cmc
jle
xchg
push
shrl
aas
into
rorl
sbb
cmp
xor
mov
mov
addr16
imul
paddb
cmpsb
and
popl
scas
mov
mov
and
mov
xor
mov
scas
cmp
xchg
push
ret
in
mov
push
ret
pop
adc
mov
push
jg
fwait
or
mov
fwait
and
cmpsl
iret
mov
xchg
vpsubusw
mov
or
arpl
lods
cmp
push
nop
sub
xlat
add
cs
dec
or
dec
xor
jg
mov
popf
mov
mov
ljmp
jmp
sub
mov
fwait
push
sbbl
into
jnp
cmp
scas
mov
stos
push
adc
movl
lods
scas
clc
xor
mov
mov
push
inc
call
repz
lock
test
nop
xor
add
or
into
or
imul
or
adc
xor
add
and
repz
push
sbbl
add
outsl
mov
sahf
mov
mov
sahf
stos
mov
outsl
and
cmp
shlb
dec
out
xchg
in
dec
jne
shl
pop
shll
lds
mov
mov
dec
lcall
stos
push
scas
jg
xchg
pop
inc
dec
xor
test
pop
or
xchg
sub
test
dec
mov
ljmp
pop
dec
mov
xor
loopne
rcrb
mov
int3
jno
stc
mov
sbb
jmp
mov
inc
inc
adc
mov
jb
jg
and
push
lds
ja
adc
mov
mov
mov
jae
jbe
mov
dec
cmpsl
mov
and
jb
mov
cmp
sti
out
mov
xchg
cmp
std
std
pop
rorl
sub
mov
cmp
adc
dec
daa
jns
dec
clc
jns
sub
ds
loop
or
pop
inc
int3
in
leave
cmp
test
xor
in
add
sub
xor
push
cs
shll
scas
psrld
aaa
sahf
dec
out
into
lea
sahf
jl
add
mov
sbb
jl
mov
xlat
sub
mov
fwait
jp
cmp
add
ret
or
adc
daa
jecxz
into
sbb
mov
pop
pop
insl
push
inc
popf
sub
push
cltd
sub
repnz
movsl
dec
sahf
inc
mov
fldl
add
sbb
mov
sbb
sbb
clc
push
xchg
sbb
je
notb
xchg
call
out
loopne
inc
mov
iret
jg
data16
xchg
dec
inc
fucomi
jmp
dec
rolw
push
and
xchg
in
push
cwtl
or
lods
mov
dec
fstpt
lods
pop
rorb
js
add
cmp
sbb
inc
into
xor
es
push
add
into
xor
xchg
sub
lds
roll
flds
mov
jle
out
hlt
cmc
jo
movsl
jge
outsl
pop
push
loop
je
popf
testb
xor
jae
in
lods
cmpsb
loop
xor
cmp
jecxz
sub
pop
cmp
xor
jnp
push
dec
adc
iret
mov
mov
out
jbe
lret
test
inc
dec
fwait
push
inc
fs
mov
mov
xchg
test
sub
sub
repz
lret
out
aas
jno
and
dec
pop
std
and
mov
or
cmpsb
adcl
sbb
sub
inc
je
jb
ficompl
test
not
ds
jno
pop
inc
and
icebp
adc
jbe
xor
call
lret
pop
imul
rorl
inc
add
xchg
lea
imulb
inc
imul
xor
test
sbb
orb
mov
out
arpl
xchg
add
insl
hlt
mov
lods
imul
imul
cmp
jbe
inc
push
sbb
jmp
mov
mov
rcll
inc
xor
mov
xchg
rclb
ja
sbb
mov
sub
mov
loopne
lret
inc
dec
jle
inc
dec
jmp
fnstcw
inc
dec
or
inc
adc
or
lret
lds
dec
pop
add
out
ds
cmpsb
outsl
inc
inc
jg
xor
sbbb
scas
push
sbb
jmp
repz
cmp
sbb
mov
dec
in
fsubl
test
dec
call
inc
nop
lahf
imul
jno
inc
jl
add
repz
lods
xchg
push
fbld
xor
xor
iret
aad
push
and
pushf
lret
mov
push
out
loopne
add
add
push
insl
jne
jae
push
sbb
jne
jns
cmp
loopne,pt
lock
imul
fistpl
mov
arpl
mov
jo
jae
push
jns
jo
out
adc
sbb
jns
or
inc
notb
rclb
mov
aas
push
pop
pop
or
lret
cld
inc
scas
leave
mov
in
test
jl
aas
mov
stc
ljmp
cmc
sar
into
mov
scas
out
inc
jo
subb
jo
sub
pop
inc
push
test
fidivrs
lods
loop
mov
adc
testl
push
dec
pop
sbb
sub
inc
es
lods
addr16
fstps
subl
dec
mov
pop
cmp
cmc
xchg
icebp
or
jae
js
mov
push
or
jecxz
fistpl
jns
sbb
into
popf
jp
lcall
sbb
cmp
sub
push
fcmovnu
push
mulb
lret
push
cmc
push
or
aaa
stos
mov
mov
dec
inc
repz
cmp
push
mov
mov
xchg
fwait
and
mov
mov
adc
fiadds
int3
mov
repnz
mov
fwait
mov
jns
push
fldenv
mov
pop
or
add
cmp
lcall
adc
mov
cwtl
xchg
mov
inc
inc
sarl
sahf
insb
cmpsb
inc
enter
aaa
push
jbe
fisttps
lahf
ret
jae
call
sub
push
outsl
pushf
sub
jle
inc
cmp
iret
or
sbb
sbb
neg
sub
jbe
add
push
int3
push
mov
xchg
dec
fsubrp
mov
push
push
rcrb
ss
shll
xchg
fldt
stos
xchg
mov
add
mov
mov
out
jb
and
cmpsb
push
jo
and
xor
add
mov
mov
insb
inc
cmp
std
repnz
sbb
testl
sti
aam
bound
inc
lret
cld
repz
xchg
cmp
test
mov
sbb
lock
gs
mov
movsb
mov
and
adc
aaa
sub
addr16
inc
jbe
or
lods
fdivr
popa
shrl
sbb
movsw
jp
insb
stos
sbb
xor
and
cmpsb
movsb
dec
lahf
adc
pop
mov
stos
jle
lock
inc
mov
inc
insl
dec
pop
pop
int3
pusha
and
mov
add
inc
loope
add
and
repz
bound
popf
loope
js
imul
lock
enter
mov
push
sbb
jb
cmp
push
mov
pop
sbb
xlat
hlt
sti
fidivl
pop
sbb
cmp
cltd
and
adc
and
je
sub
jecxz
out
leave
adc
in
ljmp
ljmp
jns
and
into
and
dec
loopne
push
mov
push
cmp
mov
adc
mov
push
pop
and
test
xor
inc
cmp
into
sbb
dec
shll
pop
roll
inc
out
cmpb
leave
out
inc
cs
xor
add
fcmovbe
fs
adc
or
xchg
aam
xchg
pop
jmp
jge
xchg
dec
xor
int
out
shlb
mov
iret
push
lods
js
mov
or
rorl
insl
cli
mov
fs
lcall
aas
in
and
mov
inc
xchg
hlt
cmp
repnz
and
ljmp
dec
in
jne
jl
cltd
cmp
test
add
lcall
xchg
mov
sub
mov
push
fmulp
pop
mov
fisubl
fwait
mov
stos
mov
sahf
pop
lods
fiaddl
dec
pop
mov
mov
pusha
adc
inc
cmpsb
adc
pop
lret
repz
jbe
aad
mov
or
dec
fwait
pop
lds
mov
jg
xchg
lcall
pushf
mov
add
inc
dec
nop
mov
lock
mov
lea
loope
jbe
xchg
test
ret
mov
mov
faddp
hlt
subb
scas
push
icebp
shrl
or
pop
mov
les
dec
mov
add
pop
enter
lret
pop
movsl
pop
stos
or
fisubrl
pop
mov
sbb
inc
cwtl
inc
sub
add
into
testb
ret
cli
das
xchg
inc
lods
lods
iret
rclb
rcl
dec
adc
mov
pop
inc
dec
push
mov
stc
sbb
or
ljmp
xchg
jo
jne
inc
sbb
xor
adc
enter
jno
vsubsd
and
pop
sub
stos
inc
outsl
lods
jle
outsb
fwait
inc
fwait
xchg
test
fmull
cld
and
or
rcll
iret
popa
or
out
sbb
rcrl
push
push
loop
cmp
int
js
mov
aad
inc
inc
fnstsw
add
roll
out
mov
adc
pop
movsl
push
test
mov
push
mov
gs
leave
mov
rorb
into
push
dec
and
mov
push
popa
aas
xor
popa
or
jbe
dec
cld
dec
mov
sarb
xchg
and
addr16
fwait
mov
add
push
inc
shrb
test
xchg
faddl
ja
xchg
into
movsb
push
push
insb
mov
getsec
mov
test
add
lock
outsl
stc
sbb
mov
lret
inc
pop
iret
xchg
hlt
push
lods
mov
repnz
add
add
xor
jp
out
addr16
subl
dec
xor
inc
cs
add
in
mov
ljmp
mov
sub
cmp
xchg
js
add
pmulhw
aad
sbb
ficoml
movsl
testb
mov
add
insl
dec
test
lods
or
icebp
mov
jg
cmp
jo
cmpxchg
add
pop
mov
add
mov
out
test
insb
pop
movsl
and
ds
mov
cmp
mov
push
rorb
push
adc
and
cld
push
loop
dec
repnz
cmp
out
je
xor
filds
or
push
push
sub
dec
jg
icebp
adc
mov
jo
loopne
stos
adcb
cmp
into
test
aaa
mov
sbb
leave
mov
push
fwait
scas
mov
movsl
les
icebp
hlt
sbb
ret
or
lret
pop
fists
rcll
lock
adc
aas
lcall
or
add
jno
push
insl
mov
aas
inc
jae
pop
sub
aam
mov
and
mov
xchg
lods
enter
push
fdivrl
and
lcall
in
jb
jmp
mov
mov
aas
and
pop
mov
shlb
mov
sub
mov
sub
insl
or
movsb
loop
out
fs
pop
lds
movsb
push
mov
ret
cmp
stc
pusha
jb
call
pop
lret
and
in
cmp
loopne
test
xchg
roll
mov
push
nop
mov
pop
mov
adcb
popa
jle
cmc
imul
sub
fisubl
into
cltd
add
mov
out
js
jno
add
xlat
incl
jecxz
repz
nop
pushf
or
rcr
cmp
les
cmp
mov
xor
sub
and
js
fcmovbe
std
xchg
cmp
fsqrt
and
xchg
mov
fsubrs
dec
int
adc
movb
xchg
test
jle
cmp
xchg
fsubp
cmc
push
or
mov
jns
scas
icebp
stc
sbb
ret
push
leave
inc
jecxz
cwtl
sbb
adc
lds
push
fildll
fsubrl
jl
jecxz
jo
outsb
fst
dec
xor
pop
test
dec
add
xchg
mov
dec
pop
mov
movsl
jae
cs
xor
ljmp
lods
je
mov
sbb
adc
or
fmuls
aas
mov
sti
mov
stos
jmp
xor
in
xchg
lock
adc
in
sti
jnp
mov
movsl
add
test
out
mov
je
dec
aam
inc
sub
inc
out
pop
sub
jge
inc
stc
enter
scas
inc
sbb
lds
push
call
and
popa
test
mov
mov
dec
pop
call
mov
inc
orl
push
pop
push
lock
outsl
sahf
xchg
and
push
add
add
imul
out
mov
jnp
shll
scas
ljmp
dec
mov
pusha
dec
and
scas
es
mov
mov
repnz
inc
mov
and
mov
jmp
in
sub
push
adc
add
sbb
inc
mov
adc
add
add
pushf
aam
lcall
stos
mov
test
and
inc
xrelease
insl
fsubrl
mov
stos
pop
ljmp
add
xchg
loope
xchg
loopne
xor
in
das
fidivs
pop
mov
dec
scas
enter
int3
or
or
sub
orl
addl
movsb
int
and
jno
xor
mov
jns
mov
imul
cltd
push
mov
scas
in
mov
mov
cmp
cltd
icebp
dec
pop
xorl
inc
jge
jl
imul
arpl
out
dec
add
shl
fimull
mov
divb
int
test
or
or
sahf
dec
mov
out
jb
adc
pushf
and
je
xor
push
aad
call
ljmp
jl
and
cmc
inc
fidivrl
push
ret
mov
leave
mov
jbe
in
xchg
push
fnstenv
dec
mov
cld
inc
out
out
jge
xchg
push
add
push
mov
mul
xor
arpl
out
cmpsb
mov
xchg
push
int3
outsl
daa
cmpsl
cli
jne
adc
mov
xacquire
sahf
mov
pop
adc
mov
inc
das
or
mov
xorl
xchg
imul
and
mov
mov
cmp
cs
enter
movsl
adc
cmp
jb
xchg
and
pop
cmp
xchg
jne
lahf
mov
inc
fmulp
xor
in
ficomps
mov
push
dec
sbb
and
xor
leave
mov
mov
cwtl
movsl
cmpsb
adc
and
jl
xor
in
adc
inc
out
push
lahf
dec
test
cmp
pop
push
js
sbb
ja
ret
negl
out
les
iret
mov
std
mov
loop
cwtl
insl
negl
adc
xor
xor
dec
inc
mov
sub
incl
imul
repnz
gs
loop
out
cmpl
or
scas
push
sbb
ljmp
dec
cmc
jle
pushl
imul
ja
jno
cmpsb
xor
pushl
add
jns
inc
add
repnz
call
adc
ljmp
in
dec
lret
in
and
mov
mov
adc
or
xchg
xchg
mov
shrb
insb
fldt
xor
lea
popl
sbb
aam
push
repz
popa
sub
cwtl
lahf
repz
testb
stos
sbb
fprem
ret
mov
idivl
jb
push
mov
ljmp
xor
mov
rorb
xchg
fs
nop
add
scas
push
mov
out
cld
imul
sbb
pop
pop
and
add
popa
rorl
pop
jp
jnp
shrl
stos
outsl
fisubl
lock
dec
cld
jo
mov
or
jne
mov
fldenv
xchg
fiadds
subb
mov
xchg
push
lret
push
push
jp
inc
and
xchg
push
idiv
xor
cmp
pop
loop
outsb
fsubrp
fsubrs
ljmp
sbbb
adc
std
in
cltd
rcrb
pop
fsts
lret
cmp
gs
mov
arpl
aas
and
xchg
es
iret
imul
or
lods
test
inc
pusha
jl
xchg
mov
popf
jmp
xchg
pop
in
xchg
jne
push
icebp
lahf
add
or
and
stc
call
dec
pop
mov
frstor
push
lahf
sbb
inc
mov
adc
rolb
ss
pusha
les
adc
cli
mov
test
es
in
loopne
lods
jg
mov
cmp
jno
shrb
jle
xchg
sbb
sub
xchg
cli
out
fcoml
cmp
outsl
and
add
inc
mov
repnz
cmp
or
loop
inc
sarb
in
pop
mov
cmp
sbb
into
imul
and
in
fistps
ret
rcrb
adc
cwtl
aaa
mov
in
cmp
add
sbb
jmp
popf
es
stc
fistl
std
and
mov
pop
cwtl
mov
sub
clc
add
add
dec
enter
push
sub
inc
nop
leave
sub
fsts
jle
xchg
scas
jecxz
cwtl
cmpsl
mov
mov
test
sbb
into
dec
cmpsb
cmp
lds
sub
cmp
int3
adc
test
je
test
stos
cli
xchg
mov
cli
sbb
and
in
es
lods
rcl
icebp
push
fwait
nop
add
mov
es
jge
jp
pop
mov
lret
jg
repz
sub
jbe
mov
loop
push
mov
dec
cmp
mov
test
leave
push
pop
mov
es
add
mov
mov
std
loop
add
popf
out
pop
pusha
xor
lret
ret
loop
ret
inc
rcrl
loope
mov
popa
cmp
pop
popa
xor
insl
add
cmpsl
mov
mov
mov
inc
sub
cmp
shll
adc
mov
jno
adc
xor
scas
test
mull
mov
out
cmpsl
insl
sbb
rclb
inc
pop
mov
cmp
jmp
dec
daa
push
fldl
lret
xor
std
aam
stos
outsb
inc
stc
adc
dec
mov
add
aaa
std
rol
dec
popf
jne
or
push
insl
or
hlt
jecxz
out
scas
or
mov
mov
mov
mov
mov
aaa
fucomi
std
and
rolb
cmc
jp
ljmp
jb
cmpsl
jns
jb
push
push
js
jb
mov
dec
and
clc
xchg
rorb
pop
iret
test
inc
rcll
decb
or
sti
mov
dec
push
es
push
lahf
add
arpl
push
lcall
jne
js
push
mov
fdivrp
in
sub
sbb
sub
sub
mov
mov
stc
xchg
or
pop
xchg
ljmpw
ljmp
xchg
cs
jl
das
mov
aas
lds
insb
xor
sbb
push
cmc
ss
xor
mov
test
inc
ss
mov
cmpsb
jae
addr16
scas
fistpll
movsl
mov
mov
fwait
std
jmp
dec
or
stc
cltd
pusha
xchg
repz
jns
inc
adc
pop
push
xorl
int
insl
xchg
sub
cmp
std
dec
pop
aam
push
aaa
xchg
add
or
pushf
add
add
pop
pop
or
loop
shlb
pop
stos
add
sub
lcall
test
sbb
pop
push
inc
push
push
hlt
and
and
sub
push
push
cltd
and
mov
pop
jmp
idiv
jo
jecxz
addr16
js
mov
add
pop
push
xchg
sub
scas
ljmp
xchg
push
pop
mov
cmp
inc
add
xor
mov
xchg
push
fistps
cld
fadds
cmp
test
add
insb
fdivrs
cs
sahf
sbb
ljmp
sub
pop
in
daa
or
in
and
pop
mov
imul
movsl
push
add
cmpsb
outsb
dec
test
lods
sub
rorb
push
fcoms
push
insb
lods
out
sbb
loop
cmpsl
xchg
test
icebp
xor
jne
addr16
aaa
mov
aas
stos
jmp
je
ss
lret
ret
aam
jns
push
mov
or
inc
cmp
ds
cmp
loop
and
shl
mov
xchg
adc
sbb
inc
cmp
cmc
sub
mov
daa
inc
insl
inc
mov
insl
push
lea
data16
pop
scas
outsl
dec
ljmp
stos
out
add
adc
loopne
mov
or
ror
mov
inc
push
cmp
jno
sub
pop
popf
xor
pop
mov
lods
or
inc
sarl
jae
fs
ss
ret
in
das
mov
and
cmp
adc
pop
loop
jge
push
mov
in
inc
cld
xlat
mov
adc
aas
jecxz
pop
jl
and
negb
mov
pop
sub
xchg
push
inc
dec
mov
mov
pop
mov
pop
ret
sub
sbb
sti
and
aad
add
inc
sbb
xchg
push
int3
add
inc
je
and
dec
mov
rcll
dec
lea
pushf
sbb
sub
fwait
sarl
push
mov
cmp
fdivr
test
test
or
mov
pop
loope
dec
imul
dec
inc
cmc
pop
les
push
jbe
addr16
xor
lret
and
pop
and
mov
sar
sbbb
sub
or
lahf
daa
pop
xor
gs
popf
dec
es
push
xlat
mov
add
or
xchg
mov
ret
mov
or
enter
decb
lock
ds
test
dec
inc
sbb
pop
fdivrl
int
testb
cmpsl
mov
roll
push
jmp
mov
lret
fxch
mov
xor
cs
shll
pop
stos
pop
fisubs
jno
shrl
xchg
mov
pop
mov
nop
push
inc
xchg
inc
lock
sar
clc
shll
lret
std
andps
leave
and
test
std
mov
cmp
cli
lahf
adc
cmp
out
movsl
jg
xchg
adc
mov
push
pop
test
sbb
sub
inc
repnz
call
xor
lret
hlt
adc
mov
sub
mov
sar
sub
gs
fs
pop
mov
mov
dec
xchg
cld
jmp
dec
cmpsl
add
pusha
out
add
outsb
add
aas
add
adc
sub
cs
push
imulb
test
leave
test
mov
sbb
cmp
add
ljmp
jae
aaa
cmpsb
jnp
cmp
cli
insl
and
pop
cmp
js
mov
xor
sub
mov
mov
jmp
jns
out
out
sti
clc
xchg
mov
stc
movsb
loop
add
mov
pushf
jbe
push
push
testl
stos
mov
dec
hlt
add
stos
dec
stc
lret
and
jno
or
add
dec
scas
shl
mov
fdivrs
data16
mov
js
and
push
mov
int3
mov
adc
mov
cmp
in
inc
inc
ljmp
inc
lock
je
sub
or
in
pop
dec
stos
rolb
xor
or
jmp
pop
mov
push
sbb
sub
in
add
adc
mov
es
mov
adc
jle
and
popa
jmp
and
lcall
sub
ds
fcomps
fbstp
ret
stc
or
ret
inc
repz
mov
adc
lds
orb
cmc
sub
push
jp
out
insl
pop
mov
loopne
mov
push
xchg
loop
adcl
imul
fdivrs
jp
mov
ss
adc
das
push
mov
nop
mov
pop
ret
mov
ja
xor
shl
jmp
jns
and
lods
mov
imul
adcb
mov
add
mov
aad
scas
lds
and
lods
test
inc
pop
enter
push
sbb
mov
mov
es
add
adc
fnstcw
call
cli
push
fadds
rorl
lock
popf
fs
sbb
clc
insl
decb
push
push
addr16
jo
push
pop
les
jo
test
lds
lret
shlb
outsb
add
push
imul
xchg
mov
test
fistpl
dec
xor
push
xchg
dec
xor
inc
mov
push
lret
out
lcall
mov
cli
mov
adc
inc
dec
fstps
inc
nop
sahf
fidivs
data16
out
sub
mov
mov
call
into
outsb
mov
test
jp
sbb
sbb
lock
xchg
xchg
xor
out
xchg
mov
cmp
mov
in
push
mov
mov
aaa
popf
clc
hlt
ret
in
cmp
push
mov
adc
push
mov
xchg
divl
inc
push
test
mov
xorl
stos
pop
mov
jecxz
push
xchg
addl
ljmp
pushf
xorb
dec
icebp
adc
nop
mov
jnp
adc
jg
push
cmp
adc
test
lods
sub
xor
lea
mov
mov
pushf
jp
lret
nop
ja
push
imull
and
mov
nop
out
mov
adc
sub
cmp
sbb
xchg
sbb
popa
loope
jmp
mov
dec
xor
lcall
jle
int
cli
popf
xchg
mov
mov
cmp
fwait
cltd
cmp
rcrb
cli
cltd
std
jmp
xchg
stos
or
mov
push
dec
mov
repz
fisttpl
jp
xchg
dec
sbbl
sub
jns
into
out
cld
je
test
or
adc
push
sahf
or
inc
cs
jne
andb
lods
out
pcmpeqd
xchg
gs
jb
lds
dec
xchg
pop
inc
pushf
gs
lret
inc
mov
fsts
push
fwait
in
pop
fmuls
popf
lods
pop
je
mov
clc
pushf
cmp
imul
clc
repz
mov
inc
mov
mov
dec
enter
or
or
lods
add
push
cmp
mov
outsl
xchg
mov
mov
jmp
add
fistpl
push
mov
pusha
insl
mov
imulb
mov
je
scas
testb
sub
scas
sub
mov
ficoml
dec
inc
sahf
cmp
xor
mov
sbb
dec
push
fs
xor
lahf
movsl
xchg
or
ss
lock
jo
sahf
rclb
or
pop
dec
inc
hlt
sub
into
xchg
xchg
jae
inc
xchg
dec
push
push
mov
bound
lret
mov
xlat
dec
arpl
mov
jmp
lcall
or
data16
mulb
dec
lock
sbb
mov
rcl
js
push
xchg
cli
push
pusha
sbb
sbb
xchg
mov
mov
xor
mov
or
jae
xor
js
test
cld
or
pop
inc
sub
jl
dec
and
mov
push
sub
xor
hlt
add
fnstsw
push
ljmp
adc
lcall
std
mov
aam
hlt
and
pop
sub
mov
jge
ljmp
fsubs
sbb
dec
cmp
comiss
xchg
mov
popa
lahf
sub
imulb
sub
add
sub
pcmpgtd
jae
stos
push
movsl
faddp
xor
xor
icebp
fwait
sti
push
cmp
aam
sub
vpsubq
push
movsl
out
jo
lcall
push
inc
sbb
popa
dec
mov
inc
and
mov
sub
xchg
xchg
inc
pusha
mov
clc
idiv
mov
push
mov
mov
or
push
jno
repnz
mov
ss
and
sbb
or
xor
sub
dec
dec
data16
or
in
mov
add
bound
adc
shrl
or
push
dec
lods
add
cvttps2pi
lahf
std
cmp
cmp
cmp
cmp
and
stos
xor
hlt
sub
fs
in
iret
cwtl
pusha
pop
in
inc
imul
je
or
inc
add
les
pop
ss
jb
test
fdivrs
in
adc
push
loopne
xchg
gs
cmp
in
mov
sbb
aas
jae
dec
loope
push
mov
adc
cmp
xchg
mov
or
lock
ret
push
lahf
cmp
pop
xchg
popa
jg
lods
inc
xor
fsub
daa
cmpsl
jl
xchg
notb
inc
add
mov
adc
adc
popa
inc
push
pop
or
aaa
cmpsb
sub
xchg
xchg
add
popf
lret
cmp
pop
lret
mov
sbb
lods
mov
jae
pop
fnsave
sbb
ljmp
xchg
in
cltd
lea
push
and
mov
bound
mov
jp
std
test
push
cmc
or
add
mov
aaa
sub
and
outsb
dec
sahf
in
sbb
jp
ret
scas
pop
push
pop
add
mov
xchg
fbld
mov
sbb
data16
mov
and
xor
ret
addb
adc
jg
xor
jne
mul
sahf
dec
sti
ljmp
xchg
test
fstpl
dec
es
or
dec
test
and
sbb
mov
in
jo
outsb
std
scas
pop
fidivl
mov
jle
ja
ret
sub
add
pushf
jno
popf
xchg
repnz
push
adc
in
stc
mov
mov
sub
pop
pop
mov
cmp
pop
mov
and
popf
bound
in
lret
add
in
call
enter
push
out
sbb
call
lret
in
push
xchg
addr16
pusha
iret
pop
bound
xlat
icebp
fidivrl
jnp
dec
repz
jmp
aaa
lahf
imul
or
mov
pusha
call
jp
clc
iret
into
cmpsb
fwait
xchg
mov
cmp
and
xchg
or
xor
ret
fdivl
dec
mov
rorl
movsb
inc
les
out
std
xchg
test
mov
lods
ds
decl
mov
sti
popa
inc
and
pusha
and
add
push
mov
pop
sub
in
aad
dec
imul
pop
mov
cmp
dec
icebp
dec
and
jo
mov
aas
outsl
fs
pop
mov
push
inc
lods
xchg
and
pusha
mov
insb
iret
adc
jecxz
jle
adc
mov
sub
insl
cmp
inc
jb
stos
hlt
insb
inc
lea
mov
fwait
mov
add
inc
pop
sub
and
clc
jnp
fwait
jge
push
add
or
loop
sbb
xchg
es
inc
mov
loop
repz
dec
int
mov
mov
jo
dec
imulb
inc
ja
lcall
cwtl
lret
sub
out
ja
cmp
shlb
fildl
cmp
push
lret
xchg
jmp
cmpsb
dec
outsb
push
mov
outsb
xchg
add
pop
cmp
fcomi
cmp
cmp
dec
inc
fmulp
fsubrl
push
push
jb
xchg
je
stc
adc
sar
out
pop
in
push
jns
jo
jae
in
jp
jo
and
pop
mov
inc
pop
push
ds
loopne
sub
insl
cmpsb
and
adc
scas
jns
rcl
mov
call
ss
ret
mov
add
pop
cltd
xchg
pusha
add
bound
jo
shr
idivl
enter
dec
ja
mov
int
jg
gs
mov
or
cmp
mov
frstor
test
incl
xor
inc
inc
lods
and
and
xchg
mov
jne
sbb
dec
sub
insb
insl
and
clc
ds
lret
push
mov
xchg
fstpt
dec
sbbb
jb
mov
mov
mov
push
jmp
xor
aad
scas
and
pusha
das
mov
sub
pusha
ljmp
mov
push
arpl
mov
cmp
jns
xlat
dec
mov
and
loopne
test
icebp
ret
cmp
scas
scas
adc
push
add
iret
xchg
lret
test
jno
pop
insb
sti
in
sbb
push
fidivs
sub
pop
sub
mov
push
insl
out
adc
std
insl
push
lock
cmp
mov
jmp
inc
cli
adc
inc
ffreep
and
sbb
mov
je
das
xchg
clc
adc
fwait
call
adc
out
aad
jmp
sti
pusha
ds
in
mov
push
mov
in
sub
sarb
int
std
mov
stos
inc
pop
push
stos
pushf
int3
or
enter
pop
jmp
aaa
xor
arpl
rcrb
xor
mov
jmp
arpl
dec
pop
dec
shlb
mov
mov
nop
pop
sbb
sbb
call
sbbl
push
xor
add
loope
test
and
cmp
sbb
popa
pop
jns
pop
add
mov
xchg
arpl
sub
aaa
cmp
mov
jnp
ret
and
insb
hlt
xor
cmp
rol
dec
mov
fnstenv
loop
and
sbb
mov
and
push
lods
rcrb
out
xchg
and
sub
push
xor
mov
or
ds
pop
xor
icebp
into
add
push
cs
mov
sub
cltd
outsl
mov
mov
stos
or
daa
mov
mov
inc
and
mov
jbe
mov
xchg
mov
inc
outsl
mov
jbe
std
setnp
push
lods
sub
and
std
call
xor
dec
jne
or
pop
rcll
adc
cs
add
ss
sbb
sbb
cwtl
cmp
lods
stos
sbb
loop
pop
das
pop
ret
stos
mov
repnz
outsb
lahf
das
clc
pop
fsubrl
push
fsubl
jmp
dec
push
lahf
stos
cltd
pop
or
int
or
mov
pushf
mov
sbb
sahf
in
cmp
mov
sbb
push
dec
adc
movl
pop
mov
loopne
sbbb
test
fdivr
ja
cmp
cli
fs
push
sub
lock
addr16
js
in
jle
fimuls
mov
mov
xchg
pop
out
sti
out
xchg
sbb
fcmove
jecxz
cmp
imul
lea
push
enter
inc
nop
ret
lds
test
jo
and
push
dec
ret
push
aam
sub
dec
xchg
xor
adc
mov
fsubrs
cmpsl
ja
cmpb
das
mov
mov
sahf
lret
test
arpl
or
scas
lods
roll
xchg
icebp
cs
ss
push
pop
add
loope
push
sbb
dec
cmp
jns
aad
lock
mov
push
aas
mov
aaa
call
lcall
sbb
fidivs
outsb
ficoml
pop
add
lahf
adc
call
mov
rcl
push
adc
loopne
adc
cli
pushf
sti
imul
stos
pop
push
popf
push
leave
or
jp
mov
push
jnp
sbb
in
lret
push
loopne
jg
aas
inc
sub
adc
or
sub
cmp
mov
sbb
add
shll
inc
enter
mov
movsb
mov
aad
inc
xor
popf
call
cmp
icebp
pushf
scas
jg
add
push
cmp
jmp
ret
mov
or
jb
ret
mov
je
ss
mov
mov
test
arpl
mov
xor
aas
sbb
push
aas
inc
clc
jmp
mov
and
daa
out
sub
insb
dec
jecxz
jecxz
orl
jge
outsb
inc
mov
subb
pop
xchg
xor
movsl
pop
in
icebp
sbb
push
mov
xchg
cmpsb
lds
leave
std
movsl
pop
and
scas
pop
mov
out
pusha
aas
sbb
adcl
jmp
pop
test
and
mov
call
mov
sbb
popa
mov
loop
sub
adc
sbb
mov
xchg
adc
push
xchg
and
xchg
adc
push
and
icebp
jnp
or
fiaddl
lret
dec
lret
mov
jb
std
loopne
xor
rcll
xchg
movsb
insb
push
cmp
jnp
xor
dec
add
icebp
sub
dec
mov
mov
bsr
pop
mov
dec
pop
enter
inc
sub
lahf
out
mov
test
cltd
outsl
dec
inc
cmpsl
add
movb
jb
bound
sar
xor
adc
pop
push
cmp
outsb
test
test
jg
push
ret
xchg
cmc
lea
sub
fs
testl
faddl
sbb
clc
cmc
stos
shr
enter
pop
mov
cmpsb
sub
xchg
or
test
fucomi
mov
cmpsb
das
mov
inc
sti
and
aam
mov
sbb
fnstsw
sbb
lds
fldpi
or
cmc
lret
xchg
lret
add
sti
lods
mov
pop
xchg
or
imul
cmp
sarl
dec
outsl
repnz
dec
mov
xor
test
in
jecxz
xor
xchg
sti
repnz
sbb
fnstcw
js
jae
xchg
imul
popa
pushf
xor
push
add
push
xor
loopne
fmulp
int
mov
mov
sub
mov
inc
mov
enter
pop
pop
les
adc
testl
stos
shll
xchg
xchg
or
stos
fnstenv
or
mov
shrl
mov
pop
aad
mov
sti
ss
ss
xchg
cmp
daa
mov
insb
dec
or
fldt
and
rolb
fsts
fldl
and
adc
mov
pop
add
cmc
pop
cmc
adc
fbld
sbb
jecxz
adc
jl
popf
xchg
stos
jp
mov
cmp
inc
mov
mov
pop
mov
push
in
insb
das
mull
int3
adc
stos
push
rorb
push
int
adcl
insb
in
and
adc
and
ret
std
imul
jb
sbb
leave
inc
mov
loopne
or
lods
nop
xlat
inc
into
pop
jbe
aas
pop
cmpsb
out
push
popf
das
lock
stos
arpl
aad
jbe
cmpsl
mov
fcoml
push
dec
or
fwait
push
imul
sbb
mov
push
jnp
or
pop
dec
jnp
ret
bound
push
pop
fcmove
aas
mov
dec
push
stos
adc
dec
aad
ret
push
cld
cli
sbb
mov
mov
jmp
in
jl
out
divl
imul
mov
insb
cld
jmp
idivb
cmc
push
loope
repz
push
cmpsb
outsl
cltd
adc
mov
repz
push
add
aad
jl
and
subl
lods
mov
and
imul
test
stos
mov
ljmp
push
movsb
ja
insl
push
xchg
inc
rcrb
cmp
pop
or
aaa
lods
js
aam
pop
dec
jecxz
inc
fwait
iret
mov
jno
jne
das
jmp
push
repnz
inc
dec
jne
imul
fs
mov
jmp
movsl
repz
fwait
or
pop
leave
int
aam
xchg
arpl
inc
hlt
push
mov
daa
jle
inc
mov
loope
cmpsl
negb
adc
shll
sahf
loope
in
sbb
es
in
sub
outsl
pop
mov
sbb
js
shlb
mov
pop
inc
xchg
dec
pop
or
mov
cwtl
mov
adc
add
outsb
insl
cli
xchg
jle
iret
scas
xor
mov
jp
les
xchg
cwtl
scas
bound
xchg
popa
cmovle
ror
rol
add
sbb
adc
mov
push
cli
enter
xor
hlt
adc
inc
lcall
adc
stos
or
cli
pop
mov
fs
rorl
inc
lcall
cmp
xor
jbe
sub
dec
fcmovu
js
push
jb
rolb
outsl
jmp
add
aad
cmpsb
rclb
sub
ja
mov
sahf
dec
push
or
mov
adc
mov
movsb
or
lcall
movb
fdivr
inc
push
sbb
or
clc
pop
ja
jecxz
mov
fwait
mov
sti
fdiv
pop
cwtl
in
les
subl
lods
sbb
cmpsl
mov
sbb
mov
mov
sahf
outsl
cmp
mov
popf
enter
int3
push
outsb
cmp
jne
test
push
addl
adc
sub
outsb
stos
add
adc
cmp
adc
add
out
mov
sub
mov
aad
sti
pop
sbb
mov
dec
mov
cmp
push
clc
imul
imul
addr16
pop
fnstcw
fcomp
and
inc
cltd
das
cmpsl
cltd
sbb
sub
sbb
test
fadds
or
xchg
lahf
mov
jnp
cltd
pushf
bound
rclb
cmp
pop
cmp
cwtl
scas
push
repnz
test
rolb
addr16
fs
push
cwtl
add
int
jb
mov
subb
jle
aam
jns
mov
sub
outsb
popf
mov
outsl
stos
lds
mov
aas
inc
and
loop
cmpsl
loopne
jns
push
mov
das
js
ret
sub
inc
push
test
lret
call
sbb
popf
dec
orb
push
xor
xchg
and
cmp
scas
mov
stos
pop
daa
fwait
rcrb
mov
int3
pop
dec
or
push
rcr
dec
cwtl
je
pop
mov
jae
lahf
outsl
hlt
jae
or
sarl
je
hlt
jno
mov
iret
or
cmp
push
cmp
push
pop
cltd
pop
inc
inc
inc
lock
and
sbb
movsl
mov
add
mov
icebp
or
mov
xchg
or
pop
in
test
or
and
add
testl
mov
cmp
cli
gs
loope
and
lock
mov
iret
pop
xchg
and
xchg
out
daa
push
sbb
stos
out
pop
mov
ficoms
and
and
push
or
rcl
sub
std
pop
inc
movsl
sbb
test
repz
mov
fwait
adc
popf
jne
pop
cs
mov
cltd
jne
pop
sarb
inc
arpl
aam
jne
jecxz
add
pop
push
ja
fwait
movl
push
cmp
mov
sub
in
dec
int3
stc
int3
and
add
dec
fimull
cld
out
adc
adc
es
mov
insb
icebp
push
push
idivl
es
cmp
push
iret
inc
idiv
pop
sbb
jno
jp
arpl
gs
pop
jns
decb
insl
test
mov
push
cmc
sbb
out
mov
fstl
sbb
add
pop
popf
sub
lods
add
pushl
jl
leave
mov
mov
jmp
stos
push
inc
icebp
mov
dec
mov
sub
outsb
xchg
call
push
movsb
mov
dec
push
cmp
xchg
sbb
mov
mov
xchg
out
out
insb
repnz
out
push
shll
cld
aaa
inc
jp
mov
sub
mov
iret
fadds
xchg
pop
mov
jne
lret
in
pusha
xchg
mov
push
add
in
sub
pop
into
repz
ljmp
bound
mov
push
pop
mov
inc
lahf
push
or
cltd
jecxz
push
adc
adc
pop
outsb
adc
xchg
out
fcoml
jmp
pop
mov
push
mov
sbbl
imul
push
cld
adc
dec
push
ljmp
xchg
fucom
xchg
mov
mov
xchg
xchg
or
stc
xchg
mov
jbe
push
sub
dec
and
dec
inc
xor
in
adc
ds
int
and
in
cmp
inc
or
xor
push
aam
shrl
add
sub
andl
fstps
test
ds
xchg
data16
sub
mov
mov
cmp
xchg
sbb
iret
push
jb
jno
cmp
mov
loopne
les
mov
adc
fsubp
add
sbb
out
add
jle
aas
mov
add
pop
push
imul
dec
sbb
adc
idivl
inc
sbb
mov
mov
pusha
loope
cmc
loopne
fiaddl
popf
insl
pop
push
dec
data16
dec
gs
clc
add
movb
shl
lock
in
rorb
dec
lods
push
mov
mov
stos
stos
shrl
push
hlt
adc
gs
repz
call
mov
sub
ss
push
test
xor
data16
mov
push
cmc
in
mov
dec
inc
lcall
jne
repnz
mov
jl
gs
insl
jae
adc
inc
dec
push
lds
mov
jns
shlb
dec
adc
scas
sbb
mov
dec
sbb
sbb
stos
sub
lret
jb
nop
fdivl
les
adc
jno
lods
lret
adc
loop
aas
arpl
test
leave
mov
sbb
insb
mov
push
add
pop
mov
pop
push
jns
jl
or
fdivrl
xchg
add
mov
loopne
ficompl
in
js
mov
mov
inc
loope
jo
push
add
movsb
mov
inc
shlb
cmpsb
cmpsb
cmp
cltd
subl
jns
xor
stc
jge
loope
adc
in
sarb
pop
jae
mov
jge
dec
movsl
push
das
inc
mov
insb
scas
inc
mov
sub
jbe
cmp
test
and
imul
loop
jl
jge
movl
sbb
leave
add
insl
outsb
test
mov
and
mov
sbb
mov
or
ja
pop
jmp
ss
sub
std
mov
movsb
movsb
xchg
mov
pop
push
lods
sub
movsb
imul
in
leave
dec
sbb
cmpsb
mov
adcl
cmp
cli
mov
sahf
aaa
sub
cs
jmp
ror
mov
push
dec
jg
or
jmp
cmpsl
cli
and
mov
je
call
jle
lods
repnz
in
mov
cmp
pop
ret
test
mov
sbb
fbld
jb
ss
inc
sub
stos
imul
cmp
adc
xchg
jo
cmp
sahf
dec
mov
imul
mov
orl
nop
aas
ljmp
push
cmpsl
mov
test
and
xorb
lds
fsubrl
add
inc
ret
ret
jl
addl
xchg
mov
test
mov
icebp
and
push
and
loop
lds
push
cli
xchg
aas
bnd
rolb
jns
mov
lret
mov
jae
icebp
inc
mov
mov
data16
scas
pop
mov
pop
addr16
test
push
lea
hlt
dec
add
jge
add
mov
cmp
enter
sbb
cmp
add
les
cmp
mov
inc
jne
lret
jge
jbe
std
outsl
mov
cmp
and
add
nop
nop
add
xor
inc
fcomps
fisubs
cmp
daa
icebp
mov
inc
jns
pop
std
addl
xor
repnz
fstpl
jl
inc
jns
lods
lock
or
test
adc
inc
lds
and
repz
mov
sbb
in
out
add
stc
sub
fistpll
shrb
add
jl
inc
test
adc
lcall
adc
pop
out
adc
imul
or
idivl
sub
add
mov
inc
jb
sbb
idiv
xorb
mov
scas
filds
mov
sub
outsl
sbb
inc
js
int
ds
pusha
cs
popf
test
xor
sub
mov
hlt
call
pop
sub
aam
imul
insl
mov
dec
jbe
cld
mov
movsl
pop
sbb
enter
and
inc
stos
out
inc
fadds
or
mov
sbb
mov
jnp
pushf
sarb
fldcw
adc
mov
pop
sub
je
mov
dec
push
jmp
testb
cmp
imul
rorl
lret
mov
mov
gs
paddb
aaa
and
sbb
pop
adc
sbb
iret
out
cmp
xchg
insl
imul
mov
dec
mov
mov
pop
mov
xor
repz
inc
xor
mov
mov
mov
ds
popa
bound
pop
xor
xlat
cli
mov
xchg
ret
dec
pop
and
xchg
cmp
scas
cmpsl
dec
jo
imul
mov
das
scas
popa
sbb
pop
aad
cltd
in
lahf
lret
lea
cmpl
sbb
aaa
or
test
mov
xor
push
stos
inc
add
mov
inc
jmp
jl
or
jl
jp
and
gs
sub
mov
cwtl
aad
pop
in
cmpsb
mov
cmp
jle
mov
in
cmp
dec
sbb
mov
pop
pop
cmp
enter
movsl
dec
ret
ret
sub
jno
add
es
mov
cmp
stc
inc
out
lret
dec
out
lret
mov
int3
sub
mov
cmp
cmpsb
fwait
xchg
or
push
sub
repz
mov
fisttps
sbb
dec
inc
pop
mov
push
pop
hlt
ret
push
sbb
jmp
xchg
ss
shll
popa
push
sbb
ret
lods
in
int
xlat
and
dec
inc
xchg
out
movsb
push
cmp
sbb
rol
dec
outsl
push
cmp
clc
jl
repz
data16
cs
mov
jge
in
add
test
cmc
jbe
aam
fwait
pop
fs
mov
dec
enter
into
add
xor
cmp
lea
add
push
ss
shr
mov
mov
stos
filds
xchg
dec
sbb
xor
test
dec
pop
dec
stos
xchg
pusha
clc
add
sub
mov
jle
xchg
dec
std
xor
push
cmpb
mov
lea
mov
adc
daa
push
pop
stc
cmpsl
jnp
cli
push
mov
cmp
pop
cmp
icebp
mov
mov
mov
cmp
inc
ret
mov
lea
mov
rcll
dec
test
push
xlat
xlat
in
test
je
mov
div
mov
jle
lods
sbb
gs
sub
insl
adc
insl
icebp
dec
or
fisttps
push
test
sub
mov
xchg
in
cs
call
fwait
enter
test
xchg
gs
or
sub
outsb
subl
aaa
push
idiv
and
sbb
cmp
out
stos
mov
enter
lahf
add
inc
push
cmp
adcl
fwait
cmp
adc
pop
mov
lea
aad
imul
inc
cmpsl
cmp
cmp
jb
pop
xor
rcr
mov
cmp
sub
jne
scas
mov
inc
sti
lea
jle
inc
cmpsl
out
xor
out
pop
xor
push
test
rolb
scas
repz
mov
add
adc
xorl
jbe
fnstenv
repnz
inc
sbb
in
lods
xlat
repz
rol
xchg
dec
add
jecxz
mov
sub
inc
mov
iret
mov
cmpsb
sbb
xchg
stos
sub
out
mov
out
js
cmp
enter
movsl
cwtl
sub
ret
dec
ret
xchg
lods
outsb
xor
sti
cltd
jns
sub
test
loopne
xor
pop
pop
out
mov
and
in
sbb
cmp
xor
or
call
mov
ss
adc
lock
cmpb
push
xor
pop
cld
or
stos
push
jg
jge
push
aas
test
cmp
jp
push
insb
js
dec
inc
pop
jle
xor
sub
cmp
mov
test
jl
loop
fnsave
cmp
dec
cs
scas
std
cmp
fdivl
dec
insb
mov
int3
mov
inc
outsb
mov
mov
push
pop
ficoms
or
mov
lret
adc
outsb
movsb
aas
ljmp
shrl
shrl
adc
adc
pop
jmp
jbe
push
stos
aaa
imul
and
sub
jae
sub
fdivl
movsb
mov
xchg
les
mov
test
or
popa
xchg
hlt
pusha
sub
int
mov
test
add
es
cmpsl
and
test
fbstp
bt
sub
mov
aad
pushl
mov
mov
sahf
cli
xchg
vcvtss2sd
shlb
fcom
mov
dec
outsl
sub
nop
icebp
pushf
mov
jp
inc
popf
sub
push
jge
push
daa
pop
stc
in
gs
dec
test
int
mov
movsb
mov
push
test
fwait
mov
jecxz
imul
in
in
lret
sub
lret
jecxz
inc
inc
push
call
lock
and
inc
jg
push
and
test
clc
xchg
mov
dec
inc
aas
repz
lahf
dec
pop
jle
movsb
xchg
xor
pop
ret
mov
roll
dec
fsubl
mov
sub
push
inc
dec
jnp
cmp
cmc
add
jne
cld
mov
out
nop
cmp
lods
pop
fs
or
mov
jo
jecxz
cmp
insl
jbe
jp
mov
ja
movsb
aam
mov
inc
sub
xchg
arpl
out
xlat
sub
pop
and
mov
cmp
cmp
and
adc
pusha
cmp
pop
jo
arpl
pop
xchg
stos
push
dec
insl
iret
pop
mov
inc
jp
cmp
or
cmp
adc
movsl
std
jmp
sarl
imul
hlt
fisubrl
xchg
adc
cs
inc
das
out
sbb
loope
sub
data16
iret
cld
xchg
call
in
std
cmpsb
lds
mov
xchg
rcrl
push
jge
push
add
fistpl
data16
stos
push
mov
rcrb
outsl
popa
fwait
or
mov
xchg
xor
and
sti
dec
pop
xchg
jp
jo
insl
inc
mov
movsl
lret
ja
sbb
in
mov
subb
inc
dec
push
xor
pop
js
outsb
stc
cmc
mov
pushf
mov
jg
scas
push
mov
fsubr
lods
pop
jae
fisubs
or
inc
scas
sbb
es
jae
loop
jo
sahf
lds
or
add
pop
dec
xchg
pop
mov
mov
push
mov
andb
cmp
movsb
mov
lods
pop
jge
push
out
lahf
inc
push
scas
jns
sahf
xchg
lret
jo
clc
push
sbb
das
xchg
mov
repnz
and
cmpb
dec
pop
fcomps
int3
xchg
stos
insl
mov
jnp
jl
icebp
xchg
push
out
sbb
std
int
or
add
arpl
pushf
negb
roll
jecxz
jg
dec
cmp
lock
jmp
insb
mov
jbe
int3
pop
stc
stos
clc
cld
fs
pushf
movsl
arpl
push
out
int
inc
shll
pushf
xlat
add
and
dec
or
cmc
das
mov
pusha
pop
mov
jle
sahf
movsl
or
pop
mov
pushw
inc
mov
cmp
mov
xor
push
mov
popa
push
sbb
gs
sub
push
lcall
xor
push
insb
ss
mov
mov
test
test
mov
inc
addb
xor
xor
push
ss
repnz
adc
jae
int3
inc
clc
je
test
dec
mov
pop
pop
cmpsl
pusha
jg
jne
leave
adc
sub
inc
cmp
cmp
push
in
fdiv
mov
sub
aam
or
dec
test
arpl
jl
xchg
int
cmp
add
cmp
fdivl
ret
push
push
jb
xchg
into
xchg
cmp
bnd
fistl
int3
stc
jl
jg
sbb
cmp
jmp
ret
imul
xchg
aaa
std
repnz
dec
inc
pop
push
idivl
jno
mov
fs
repz
xchg
mov
mov
mov
mov
xor
fidivrl
fldcw
mov
and
je
lods
xchg
cmp
fs
lods
inc
sub
mov
jp
xchg
call
adc
movsb
mov
gs
cmpsl
inc
shl
popa
inc
pop
inc
lods
int3
xchg
cltd
std
and
mov
cld
dec
lcall
iret
pop
clc
xchg
enter
push
push
repnz
mov
push
jae
push
add
cmp
mov
aas
dec
inc
dec
sbb
mov
cmpsb
lcall
add
pop
popa
jbe
stos
mov
cli
dec
add
sub
imul
and
cmpsl
ds
jns
push
insl
imul
mov
popa
jnp
pop
sbb
loop
sub
stos
ljmp
pop
enter
mov
nop
xchg
xor
jbe
orb
nop
pop
dec
pop
pop
jecxz
sub
iret
adc
arpl
push
mov
push
xor
jge
je
dec
fstl
mov
into
mov
mov
pop
jp
push
mov
ss
pop
mov
pop
inc
aaa
pop
scas
mov
test
xchg
popf
mov
clc
mov
mov
fs
movl
in
mov
dec
cmpsb
xchg
add
jge
sub
sub
sbb
or
or
inc
push
mov
xchg
sub
insl
pop
dec
mov
sbbl
loop
push
popa
xor
insl
jge
sub
aam
out
adc
dec
lea
push
aas
in
repz
cmp
lods
xchg
xor
sub
add
loope
lret
rcl
mov
mov
inc
jg
lds
hlt
sbb
xlat
add
cwtl
and
xchg
ret
das
loopne
addr16
push
call
sahf
out
sbb
jl
in
add
insl
pop
mov
scas
mov
les
ja
hlt
or
popa
adc
push
fistl
and
int3
je
pop
xchg
enter
test
jb
jnp
push
lea
je
pop
push
pop
ret
adc
pop
pop
into
sub
xchg
dec
fists
push
cltd
cld
pop
aad
push
cld
repnz
call
out
out
dec
pop
mov
cmpsb
stos
mov
mov
dec
push
inc
sbb
stos
mov
pusha
xchg
adc
dec
lahf
mov
filds
loopne
bound
mov
out
mov
cld
std
dec
shlb
sub
vmovlpd
dec
iret
pop
aaa
lds
sbb
adc
push
inc
push
or
repz
sbb
les
les
cmpsl
push
sub
lods
std
dec
or
and
adc
xchg
sub
xchg
cmpsl
xchg
xor
ret
mov
and
clc
jl
mov
sbb
mov
stos
dec
or
fstpl
leave
dec
inc
mov
sbb
push
dec
mov
sub
add
add
into
jecxz
sbb
out
mov
mov
dec
fisttps
int3
andb
and
mov
leave
in
in
ret
lret
ret
lods
ffreep
mov
dec
push
fs
adc
lahf
stc
popf
mov
adc
sbb
jnp
push
adc
je
int3
dec
mov
repnz
pextrw
sbb
add
pop
cli
sarl
cmp
push
inc
adc
adc
repz
scas
jne
ret
sbb
int
or
cld
adc
or
decl
jnp
sbb
movsb
dec
push
enter
fcmovu
cmp
icebp
pop
jno
jmp
pusha
mov
repnz
jp
insb
cld
inc
and
xlat
adc
ret
into
loope
push
sbb
mov
bound
dec
and
cltd
gs
popf
xchg
cld
fcoml
pop
rorl
scas
jo
push
mov
loope
mov
fsubrl
fisubs
mov
inc
push
orl
rcrl
xchg
loop
xor
and
movsb
or
inc
xchg
stc
ss
sub
mov
outsb
cmc
push
adc
sbb
ds
scas
popa
pusha
push
mov
hlt
push
xor
movnti
sub
jnp
and
dec
add
xlat
das
push
push
pop
push
mov
lret
or
jno
rcr
pop
stc
pop
push
cs
xor
orb
or
adc
ret
in
data16
xchg
mov
xlat
das
inc
std
adc
call
cmp
in
jbe
in
add
mov
xchg
mov
lock
aam
add
inc
std
cmpsl
fistps
adc
jbe
inc
sbb
outsb
mov
dec
sub
dec
push
sarl
mov
scas
push
sub
lret
push
pop
sbb
cmpb
dec
pop
icebp
add
pop
cltd
or
fdiv
add
mulb
add
xor
mov
aas
push
cmp
ret
mov
cld
dec
jns
stc
outsb
xchg
enter
jae
and
dec
xor
insl
decb
inc
imul
je
and
xor
jle
adc
daa
push
adc
push
sub
mov
andb
shl
jne
into
adc
inc
or
insl
fwait
jae
push
fbstp
or
mov
xchg
movsb
mov
lods
test
shlb
adc
or
dec
jmp
add
push
enter
adc
imul
cli
jb
jno
cmp
mov
xchg
adc
popl
stos
lock
subb
fistpl
xor
mov
push
xchg
orl
fsubl
sbb
movsb
adc
pop
dec
outsb
dec
hlt
inc
call
xor
adc
mov
jge
in
aas
ret
daa
pop
pop
xor
roll
and
jns
jns
test
push
cs
or
int3
aad
jmp
mov
push
sub
jns
push
mov
jne
and
push
push
push
or
push
or
adc
push
adc
imulb
cltd
adc
cwtl
loopne
mov
imul
jle
arpl
adc
bound
jno
pop
jne
loop
sbb
aas
sbb
ret
dec
int
mov
mov
mov
add
jb
cmp
jp
push
loop
mov
mov
pusha
mov
cs
or
xchg
jae
add
int
jmp
and
jmp
adc
push
and
outsl
and
lods
repz
push
xchg
xchg
mov
jge
xor
cmpsl
pop
mov
imul
xchg
inc
push
lock
xor
test
stc
jle
out
sti
push
and
lods
das
and
pop
outsl
fstpl
inc
movsb
jmp
xchg
fs
mov
enter
adc
push
rcrb
ds
jmp
adc
inc
nop
mov
xchg
sbb
mov
jno
negl
or
jmp
insl
imulb
xchg
cmp
jno
imul
push
mov
sar
out
cwtl
stos
push
in
loopne
popl
adc
pop
aad
pusha
subl
and
xchg
flds
cwtl
mov
add
imul
xchg
push
xchg
mov
outsb
in
add
fwait
mov
sub
cmp
push
jle
lret
mov
add
mov
fistl
add
mov
or
in
sahf
pop
sub
mov
xchg
ljmp
lret
stc
ja
orl
and
push
add
mov
push
xchg
rorb
int3
movl
test
fmuls
movb
in
adc
mov
push
dec
lahf
std
lds
mov
xchg
push
jmp
mov
shll
xchg
pop
aad
push
mov
sub
jg
mov
movsl
das
pop
dec
xchg
stos
adc
inc
and
sub
dec
loop
mov
movsb
lret
lock
hlt
notl
rorl
jbe
fcmovu
push
lret
push
scas
sub
or
dec
jb
add
xchg
inc
sbb
and
mov
or
mov
stos
cwtl
lds
rol
ret
cmpsb
xchg
aad
aaa
ret
xlat
hlt
aam
sbb
dec
inc
out
adc
sbb
fistl
mov
push
mov
cmpl
adc
pop
inc
or
fs
loop
mov
loope
xor
cmp
sbb
jle
jmp
jno
jnp
dec
ffreep
inc
lahf
or
mov
mov
pop
test
pop
aad
bound
movsl
stos
ret
pop
jae
jmp
xchg
push
cmp
jno
neg
xchg
sbb
cmp
mov
lret
xor
and
sbb
xchg
fimuls
sbb
aad
xor
adc
cmp
dec
movsl
and
xor
mov
rcrb
push
fldcw
add
out
ret
jne
dec
test
or
scas
es
dec
cmpsb
aad
cmp
das
inc
test
cmp
mov
pop
sub
lea
or
xor
in
lods
adc
repz
pushf
pop
lret
dec
enter
and
push
insl
pop
dec
arpl
mov
xchg
xchg
test
xchg
cs
dec
pop
pop
js
push
fdivs
mov
pop
frstor
dec
lahf
push
pop
xchg
mov
mov
cmp
sub
faddl
jle
adc
ficomps
ret
sti
aam
std
mov
iret
insb
mov
lret
pushf
mov
mov
fiaddl
xchg
mov
ljmp
and
int
mov
movsb
ja
and
cmpsl
stos
push
insb
aas
pusha
inc
xchg
mov
ss
sub
jo
in
dec
lcall
pushf
adc
pop
bound
pop
adc
mov
lds
adc
add
mov
js
test
loop
fiadds
pop
rcrb
push
call
dec
inc
outsl
ss
imul
in
stos
cmc
adc
shl
inc
fists
cld
sub
or
sbb
outsb
bnd
dec
fstl
pop
fldl
repnz
push
pop
adc
mov
pop
jne
xor
mov
neg
sub
inc
in
jae
and
or
lret
xchg
sti
cmp
mov
sub
sbb
in
jb
sub
and
pushfw
xchg
lcall
fs
adc
pop
nop
mov
movsl
add
stos
mov
hlt
add
pop
dec
mov
iret
jle
loop
adc
icebp
dec
popf
ljmp
mov
jbe
push
sub
push
lds
mov
out
jnp
adc
clc
mov
sub
and
fiaddl
addb
rolb
mov
xchg
push
add
mov
je
aam
add
jl
sbb
scas
call
fwait
pusha
sbb
scas
and
jg
cs
cmpsl
pop
sub
aas
lcall
inc
push
push
into
int
mov
mov
mov
enter
mov
cli
mov
and
fwait
adcl
dec
rorb
rol
xlat
ja
stos
dec
mov
inc
dec
mov
sbb
mov
jb
icebp
mov
shlb
int3
mov
mov
and
sub
push
pop
les
testb
popa
icebp
push
ret
and
xorb
rclb
mov
xor
cmp
or
cmpsb
inc
push
clc
mul
sub
mov
xchg
rorl
sbb
outsl
lahf
sbb
or
inc
mov
stc
dec
scas
jle
push
and
insl
pop
mov
in
xchg
in
sub
adc
inc
pop
outsl
repz
pushf
sahf
dec
dec
xchg
stc
into
mov
pusha
int
aam
inc
cmp
mulps
ja
cmp
mov
in
stc
pop
das
xor
clc
outsb
in
inc
mov
shrb
je
xor
pop
add
sub
cwtl
icebp
sub
pop
sti
and
mov
lock
ret
add
int3
xrelease
push
out
adc
xchg
dec
ljmp
push
ret
or
push
outsb
shl
dec
divb
shll
pop
and
add
mov
push
lock
lahf
push
jns
and
imul
arpl
jl
jns
push
xchg
sarb
sbb
xchg
xchg
test
insl
jb
insl
sub
mov
add
ret
push
mov
out
fs
in
fiadds
je
xchg
imul
xchg
sarb
hlt
mov
sub
out
js
adcl
sbb
dec
test
mov
push
stos
imul
negb
cmpsl
fnstcw
sbb
sub
das
sbb
add
mov
push
push
rorb
sbb
dec
mov
sub
cmp
pop
rolb
lahf
stos
dec
push
xchg
push
mov
aaa
xlat
sbb
pop
out
rorl
jnp
js
cs
loopne
push
cmp
icebp
outsb
jb
lods
push
push
movsb
mov
xchg
mov
sbb
test
shr
mov
movl
mov
in
subb
mov
scas
sbb
push
jmp
hlt
cmp
or
mov
loopne
in
movsl
pop
mov
cld
es
cltd
xor
jmp
arpl
or
adc
in
mov
out
test
cmp
int3
call
xchg
addr16
mov
mov
adc
scas
leave
in
cmp
mov
jecxz
and
aas
repnz
rclb
inc
pop
adc
rcrl
mov
testb
ret
fcoms
xor
enter
lcall
add
and
es
sbb
fsubrs
scas
sub
idiv
cwtl
in
jmp
dec
sbb
loope
addb
filds
xor
add
andb
push
in
jmp
add
push
imul
aas
ss
dec
mov
bndstx
push
xlat
fsubr
daa
int3
push
test
mov
jp
jne
jnp
repnz
pop
adc
dec
adc
cmp
test
mov
out
jg
lods
sub
dec
adc
add
and
pop
adc
mov
push
xor
xchg
cmp
icebp
cmpsl
loop
leave
insl
adc
scas
add
out
lret
push
mov
push
xchg
dec
call
xchg
scas
dec
sbb
jp
xchg
std
jbe
js
or
or
movsl
adc
push
mov
stos
out
push
cs
hlt
push
jmp
sub
clc
mov
hlt
xlat
out
pop
lcall
test
ja
lahf
add
jp
addl
int
and
sbb
xchg
push
jecxz
mov
cmp
fidivs
cwtl
loopne
iret
hlt
mov
jg
cmpsl
sbb
sbb
insl
mov
int
adc
filds
pop
lret
sub
push
jno
lcall
jns
stos
cli
out
and
ds
sub
pop
adc
scas
mov
push
jbe
add
jge
sub
jnp
inc
xor
mov
dec
push
clc
jle
push
lods
fs
mov
jnp
cli
das
or
pop
dec
sarb
lahf
lods
daa
adc
xchg
push
nop
inc
sbb
xchg
cwtl
jp
stos
cld
dec
roll
stos
mulb
xlat
push
inc
aam
or
jb
aas
inc
scas
jo
orb
ret
mov
lea
xlat
shrb
push
adc
lret
xor
out
out
inc
test
arpl
lea
or
sbb
imul
mov
cwtl
stos
pusha
push
cmp
lret
fiadds
ret
pop
imul
jl
mov
jno
imul
and
nop
ret
cmp
cmp
mov
jge
push
dec
cmp
shrb
mov
jge
out
scas
adc
aas
movsl
dec
clc
push
jbe
pop
xchg
mov
lods
dec
inc
sti
jo
in
lea
mov
adc
jg
push
add
jno
loop
lret
or
fsubrs
push
ds
mov
and
cs
sub
lock
not
push
mov
cmp
cmp
xchg
dec
inc
stc
dec
cmp
mov
pop
in
lds
mov
jge
sub
cmp
sarw
cmp
and
cmp
and
cmp
jns
push
jge
fidivrl
xchg
loop
das
mov
in
mov
addr16
fists
add
out
mov
xlat
insb
lea
pop
adc
insb
shll
sbb
fs
cwtl
adc
ja
inc
xor
or
hlt
push
into
xchg
xchg
ficompl
arpl
pop
sarb
aam
mov
flds
mov
or
jne
cwtl
test
sbb
test
fptan
sub
adc
lret
lds
cmp
jns
sbb
lret
ret
ret
jnp
push
xchg
in
mov
pop
stos
dec
into
jno
push
lcall
test
pop
add
mov
leave
sub
sbb
push
loopne
out
lods
inc
sahf
fisubl
push
mov
dec
stc
pusha
jo
add
and
push
pop
dec
cmpsb
lcall
cmp
push
sbb
push
mov
je
pop
xchg
cmpsb
adc
lods
add
pop
mov
add
mov
inc
mov
jge
addl
in
mov
aaa
push
enter
repnz
lcall
shrl
cmpsb
das
mov
ss
pop
jb
pushf
jl
cmp
sbb
ds
icebp
outsl
push
mov
or
scas
xchg
push
pop
mov
inc
pusha
mov
mov
insb
mov
rcrl
je
mov
jo
popf
xchg
fcmovne
imul
cli
pop
sahf
mov
push
fstpl
inc
add
xchg
out
push
inc
jnp
cmc
sub
cs
inc
out
xchg
int
and
xchg
mov
jg
and
mov
decl
adc
nop
pop
and
stc
inc
and
int3
daa
fbstp
in
imul
ret
fs
sbb
push
mov
cld
aam
out
sahf
shll
inc
mov
mov
ljmp
push
mov
popa
sub
es
xchg
xor
daa
loop
lahf
xchg
dec
mov
jns
pop
popf
fldl2t
insb
icebp
add
mov
dec
adcb
mov
insb
mov
jmp
mov
xor
xlat
ret
push
mov
mov
ficomps
in
xchg
xchg
pop
push
jle
fisttpll
enter
ja
leave
ffree
dec
adcl
movsl
xor
push
push
stos
sbb
lahf
xor
and
sbb
pop
mov
sbb
sub
shlb
sbb
clc
sbb
cltd
inc
xor
inc
mov
imul
mov
out
sbb
push
or
insb
out
lcall
xchg
push
or
and
push
mov
out
cld
loopne
mov
xor
ds
lods
mov
sub
cmp
jns
push
enter
xor
adcb
leave
scas
in
fisttps
ror
ret
or
je
es
sbb
mov
jnp
mov
mov
jmp
mov
iret
lods
mov
pop
ss
adc
pop
ja
fwait
addb
jae
push
bnd
bound
sbb
xchg
xor
sub
fstl
xor
movsb
pop
sub
fucom
mov
sahf
test
imul
test
inc
dec
jae
and
xchg
pop
pop
mov
stos
and
sbb
push
pusha
cmp
cmp
push
scas
mov
and
lret
cltd
into
andl
and
xchg
test
or
ja
aaa
nop
fisubs
mov
xor
xlat
dec
ljmp
sub
cmp
xchg
push
adcl
imul
cmpb
lea
inc
mov
mull
enter
jle
jnp
dec
outsb
notl
inc
in
sub
and
outsb
and
jle
cmp
out
or
aas
iret
sbb
push
inc
call
dec
rol
pop
pop
pop
pop
test
add
cmp
insb
stc
hlt
jmp
cmpsb
sbbb
cs
mov
mov
pop
and
lcall
pushf
daa
dec
sbb
shl
sahf
mov
mov
inc
mov
loope
xor
pusha
imul
cmpsb
pop
out
out
and
jne
sahf
pop
dec
pop
fisubrl
aam
mov
js
sub
in
shll
dec
inc
inc
movsl
inc
sub
test
inc
imul
jmp
bound
push
jg
ret
mov
add
dec
sbb
pushf
aas
stos
cs
cld
out
sub
push
pop
je
inc
inc
fstpt
push
rorb
mov
dec
es
pop
and
shrl
jno
out
jp
pop
push
mov
stos
sbb
pop
divb
dec
xor
mov
add
shr
lahf
xchg
in
pop
xchg
repnz
and
test
imul
push
pop
das
or
inc
test
std
inc
adc
jnp
out
test
into
test
mov
mov
mov
adc
jb
pop
scas
insl
mov
rorl
jne
mov
sbb
nop
sbb
jae
ljmp
xchg
repnz
xchg
js
or
push
test
int3
mov
insl
mov
aaa
pushf
gs
mov
sbb
cmpb
xor
out
leave
in
dec
dec
add
mov
and
vunpcklps
mov
test
jno
sbb
dec
in
int3
les
push
dec
clc
xor
sahf
jle
adc
jae
int3
repz
popf
jno
out
call
mov
loopne
insl
jno
shr
mov
inc
addr16
stos
jno
sub
sbb
add
cs
lock
adc
in
aaa
cld
dec
dec
stos
fs
dec
bound
and
xchg
ja
icebp
std
jmp
mov
lock
sbb
push
cld
data16
fwait
loop
cli
negb
xchg
cmpb
hlt
aam
jae
xor
lcall
subl
sub
adc
les
mov
or
push
sub
movsl
xor
mov
lcall
add
loopne
clc
mov
rolb
add
mov
arpl
test
int3
test
pop
popf
cmp
orb
mov
lret
or
cwtl
mov
outsl
jmp
xchg
dec
mov
popf
adc
sbb
fmull
fpatan
or
mov
sbb
and
pop
shll
into
xor
pop
push
inc
sahf
inc
inc
and
imul
mov
cmp
scas
xchg
ljmp
repz
xchg
mov
push
fcmovne
sbb
inc
jb
sbb
mov
mov
jbe
ret
dec
pop
add
icebp
inc
insb
cli
inc
std
xchg
out
loope
dec
push
or
pop
cld
push
or
je
dec
cs
mov
pop
imul
inc
mov
in
ret
pop
jle
dec
jle
adc
and
inc
lret
loopne
cli
mov
mov
jb
jno
js
call
push
mov
add
adc
pop
ss
rorb
mov
xchg
je
pop
jb
ret
lock
insb
push
inc
sbb
mov
lea
ds
clc
fstpt
ljmp
push
adc
cmp
xorb
xchg
push
xlat
out
xor
jl
push
sub
ror
ss
ss
sbb
push
mov
push
lea
dec
lods
pushf
fisttps
sub
push
outsb
out
lods
andb
loope
in
cli
sub
add
dec
ret
cmp
out
ss
mov
mov
fs
fs
shlb
jns
inc
daa
push
jmp
rcr
mov
jbe
hlt
mov
pusha
rolb
out
mov
and
test
out
rcrl
lock
add
mov
push
pusha
rcl
mov
std
xchg
push
insl
mov
pop
roll
jno
icebp
bound
insl
stos
sub
jne
mov
dec
lea
adc
inc
jecxz
mov
xor
in
stc
dec
or
ja
stos
jbe
pop
mov
in
push
nop
pop
stos
mov
ret
xor
scas
dec
mov
scas
inc
sbb
dec
stc
cmp
dec
mov
push
pop
imul
dec
adc
inc
jne
inc
lods
xor
out
pop
fists
test
mov
or
xchg
lock
add
mov
mov
les
jbe,pn
jae
push
push
or
aad
cmpsl
fcomi
sub
rolb
sbb
xor
aad
loop
enter
aaa
dec
add
xchg
aas
push
insb
jle
jle
mov
sbb
and
pop
shl
jle
imul
xchg
sub
outsb
pop
mov
add
aam
fwait
insb
mov
test
pushf
push
data16
sbb
inc
inc
sub
push
icebp
mov
mov
mov
testl
adc
stc
cmpsl
and
sub
cmp
mov
nop
cwtl
repz
push
out
and
pop
xchg
stos
add
jo
mov
pusha
mov
jmp
aas
sub
and
dec
mov
je
pop
jle
xor
mov
mov
mov
lock
pop
lock
dec
in
pop
jns
std
popa
enter
movsb
shl
mov
mov
cld
cmpsl
addb
popf
lds
test
sahf
fcmovne
inc
in
addr16
movsb
sub
mov
jae
sub
mov
xor
outsl
lods
rcr
lcall
push
lea
scas
pop
scas
sub
jle
inc
out
cmp
xor
stos
cld
rcrb
mov
aam
mov
das
scas
xchg
and
mov
adc
lds
aas
xchg
adc
fdivl
mov
or
bswap
imul
dec
ja
sbb
mov
add
fwait
cmp
push
lock
adc
push
test
jl
clc
add
aaa
and
lods
xlat
test
add
or
or
int3
and
dec
jmp
pushf
pushf
jae
jle
lahf
xchg
add
je
aas
cmp
stos
rcll
roll
sub
movsl
test
and
outsl
into
xor
arpl
cli
xchg
adc
pop
jns
pop
add
mov
jne
mov
push
ss
loope
pushf
cli
sub
xor
iret
pop
ret
xchg
or
lret
add
add
dec
push
adc
popa
call
add
mov
pop
fisubrl
dec
fstps
push
push
and
mov
lahf
jb
sbb
sub
shll
ret
adc
ja
mov
xchg
push
or
lret
nop
inc
add
cmpsb
jmp
jne
popa
test
adcb
sub
movsl
lahf
fnstenv
rcrb
je
jle
inc
frstor
jle
rcr
in
sbb
jns
cmp
xor
jns
int
ljmp
fimull
sub
outsb
enter
sti
jge
test
test
mov
lret
mov
out
push
jl
mov
int3
mov
fisttps
push
or
or
divb
pop
pop
adc
mov
sub
daa
loop
xchg
adc
sbb
jmp
dec
fdivrl
scas
mov
int3
pop
cmp
out
sub
adc
sbb
dec
add
mov
fcomi
and
scas
test
dec
push
add
ret
ss
or
les
bound
or
mov
push
add
or
cs
pop
sub
inc
std
mov
jg
push
into
push
rcrl
loope
jle
jnp
inc
dec
or
popa
xlat
cmp
popf
cmp
out
repz
das
mov
xchg
or
or
push
lret
pushf
inc
mov
xlat
ljmp
divl
mov
popf
adc
lods
mov
adc
mov
out
outsb
inc
loopne
push
pop
cmc
repz
xor
add
cld
mov
divb
out
test
sub
pusha
mov
sahf
in
and
or
mov
xchg
xchg
pushf
mov
fs
adc
dec
inc
pop
loop
mov
push
rcr
mov
dec
xchg
add
fidivrs
inc
ss
mov
bound
mov
mov
push
aad
in
lods
and
imul
lods
jp
add
jb
inc
jmp
imul
rorl
repz
iret
cli
stos
cmove
mov
sbb
push
ljmp
xchg
jp
fdivrs
rolb
xchg
addb
sub
outsb
sbb
scas
cmp
mulb
inc
in
inc
ret
scas
push
cmp
fistpl
sbb
cltd
pusha
in
adc
in
aam
flds
cld
xchg
gs
cltd
enter
adc
enter
in
lock
pop
fadds
iret
jbe
pop
aad
cmpsb
fimuls
int
dec
xchg
lock
mov
aaa
or
insb
dec
mov
lds
cmp
das
jne
out
jp
lea
lock
mov
mov
mov
sbb
test
dec
data16
sub
mov
lcall
data16
xor
sbb
push
loop
outsl
sti
lds
repnz
cmp
cmp
ret
shlb
fildll
mov
pop
fsubl
xor
pop
and
ljmp
lahf
dec
pop
fstl
xor
cltd
push
pop
or
imul
mov
ret
outsl
mov
jo
scas
xchg
pop
xchg
add
jmp
pop
aas
inc
gs
xor
aas
add
mov
imul
dec
pop
int3
mov
inc
addr16
mov
sub
mov
lods
xor
lcall
outsb
xchg
jecxz
sub
pop
jbe
mov
xlat
ss
or
lods
shl
arpl
pop
sahf
xchg
push
ret
pop
mov
pop
lods
push
clc
mov
call
mov
pushf
add
mov
add
test
ss
mov
mov
xlat
es
jae
scas
jne
lods
test
mov
jp
aaa
lcall
push
xor
ja
push
mov
fldt
or
pop
fwait
stos
cmp
inc
dec
das
add
adc
add
dec
mov
mov
shr
out
push
ss
es
xchg
insb
jmp
out
popf
inc
mov
mov
add
cld
inc
lock
insb
xchg
mov
insl
cmp
or
cmp
sbb
and
xor
adc
js
adc
dec
lcall
mov
mov
aas
pop
mov
push
mov
cld
add
jo
call
ljmp
loop
mov
addb
js
sbb
out
outsl
testb
sbb
pop
cmp
adc
adc
push
jns
mov
dec
ds
jl
call
sar
push
dec
lahf
mov
fstl
mov
pop
imul
iret
add
add
push
divl
shr
jb
test
and
movsl
fucom
sbb
jp
and
mov
mov
mov
ja
push
and
pop
arpl
pop
mov
pop
aam
je
inc
neg
inc
in
cmp
fwait
add
scas
rol
push
xor
in
mov
xchg
aad
addr16
sbb
popf
aad
dec
call
das
outsl
push
insl
aam
mov
test
loope
gs
or
dec
dec
movsb
xchg
stos
push
loop
test
sbb
add
pop
js
adc
std
push
ret
sub
ds
jecxz
shlb
in
xor
push
leave
and
les
mov
pop
nop
pop
data16
xchg
ret
and
mov
mov
stc
inc
inc
std
in
roll
shll
movsl
cmc
in
rcrb
movsl
fwait
mov
inc
xchg
push
sub
ret
pop
imul
push
shl
jne
dec
inc
test
and
popf
mov
push
loopne
add
outsl
in
jle
or
mov
inc
mov
mov
push
jb
xchg
int
in
int3
sar
ret
pop
pop
mov
repnz
xorb
dec
adc
mov
mov
dec
jb
sub
movsl
push
add
sbb
mov
out
stos
adc
ret
call
repnz
mov
add
jg
xor
inc
and
test
aas
cmpsb
xor
addr16
test
or
clc
jns
mov
aam
cld
or
mov
pop
cmp
push
jp
and
push
fucom
shll
jbe
jge
jge
inc
rcl
test
hlt
mov
repnz
popw
orl
fcmovb
pmaxsw
dec
outsb
mov
roll
xchg
or
fwait
push
iret
je
mov
sbb
jp
xchg
xchg
aad
punpckhwd
jmp
jb
push
sar
xchg
xchg
fld
jae
shrl
push
pushf
or
sub
stos
cs
les
ret
or
test
jmp
ja
ret
dec
clc
push
bound
push
divb
and
xor
fdivl
and
hlt
addr16
inc
out
jmp
iret
rolb
into
gs
mov
shrl
jns
lret
fucomi
push
sub
inc
add
stos
inc
add
mov
cltd
lret
sbb
out
xchg
cmp
mov
jo
mov
fwait
jmp
and
push
aad
jmp
jbe
inc
sub
lds
and
fwait
mov
push
fdivrs
or
add
pop
push
push
cmova
arpl
jne
repz
mov
or
inc
sti
xchg
jge
in
push
jno
leave
jae
xchg
aas
xchg
stc
push
jnp
lret
shll
enter
dec
dec
push
pop
cmp
push
inc
jecxz
or
sbb
mov
inc
test
les
dec
jae
adc
es
fdivrp
mov
in
push
das
add
mov
pop
leave
fcoml
xchg
push
sbb
jp
scas
and
mov
sahf
insl
mov
xchg
xor
sub
or
cs
jecxz
cwtl
leave
les
xlat
lahf
in
test
dec
les
jne
arpl
mov
sub
insb
leave
xchg
insb
xor
push
std
movsl
ds
movsb
or
jb
mov
daa
sub
push
mov
imul
cld
dec
das
and
lea
pop
hlt
aaa
fiadds
mov
loope
jge
push
inc
arpl
cmp
jno
dec
mov
lods
mov
push
cmc
push
push
inc
and
int
jbe
sti
movsl
outsl
sub
sahf
mov
loope
decb
repnz
push
notl
push
movsb
sub
cld
pop
add
xchg
clc
repz
inc
lods
icebp
std
movsb
insb
popf
sbb
popf
sarl
fldt
fcoms
fsub
lods
pop
sbb
dec
mov
insb
fists
xchg
addr16
dec
mov
mov
lret
push
out
inc
lret
fs
shll
cmpsb
enter
or
aaa
push
or
jbe
pop
push
fsubl
pop
insl
cld
adc
jbe
ret
fidivs
pop
mov
es
pushf
dec
push
push
cmp
mov
xchg
hlt
mov
scas
and
fidivrs
dec
ret
int3
mov
push
popa
ja
fdivrp
cmp
and
pop
in
fcompl
in
xor
pop
loope
or
fucomi
cltd
add
pop
jns
adc
lea
pop
je
icebp
and
lods
daa
adc
fcoml
add
cs
mov
mov
hlt
push
lock
cmc
rcrb
loope
push
lret
xchg
scas
lret
test
push
mov
cwtl
ljmp
mov
movb
lods
cmp
dec
mov
stos
or
mov
pop
push
bound
push
dec
dec
xchg
xchg
dec
cltd
add
adc
rclb
mov
aaa
or
mov
xchg
jb
adc
std
xchg
cmp
mov
and
dec
and
mov
push
add
dec
shll
popa
add
loopne
sahf
movsl
dec
cmp
jl
cmp
lret
mov
popa
shll
cmp
dec
dec
inc
dec
pop
jae
mov
cmpsb
fisubrs
mov
push
jo
jo
movsb
int
cmc
in
push
scas
sahf
fldl
mov
push
add
inc
call
push
inc
je
fwait
jno
mov
jle
imul
out
mov
fsts
inc
loope
ret
in
aad
std
mov
fwait
sub
pop
mov
das
je
sbb
and
xchg
cmp
out
lea
mov
mov
xorb
cmpsb
fstpl
out
outsb
pop
push
out
faddl
subb
ret
stos
pop
in
sub
or
add
mov
je
sbb
jmp
jno
dec
sbb
ret
pop
fdivrl
js
and
lods
ret
xchg
fnsave
rep
lea
mov
jne
xchg
pop
cmp
pop
push
cmp
push
lahf
pop
pop
dec
jg
mov
aas
push
xchg
mov
stc
mov
mov
into
mov
add
mov
jnp
shlb
inc
lea
pop
int3
movsb
fisubrl
sbb
jb
mov
fisubrl
inc
jl
mov
int3
sbb
jno
pop
adc
or
cmp
cmp
repnz
sarl
ja
add
subb
rcl
push
pop
enter
pop
jecxz
stc
cmp
xlat
push
jnp
push
testl
addr16
push
cmp
sub
xor
pop
jl
movsl
xchg
fisttpll
jge
stos
mov
xchg
sahf
aam
je
mov
sarl
jge
mov
cltd
cmp
ret
push
repnz
cmovge
push
sbb
cmp
sahf
or
jne
mov
mov
xchg
leave
std
mov
mov
aas
push
in
xor
fidivrl
jmp
fldenv
scas
xor
mov
lock
xor
aas
outsl
mov
aas
leave
mov
out
nop
arpl
mov
sub
add
ret
into
sbb
mov
push
aaa
fidivrs
mov
and
xor
fsts
cmp
push
cmp
xchg
test
pop
xor
push
inc
cmpsb
in
fidivrl
frstor
jbe
pusha
ss
test
sbb
adc
adcb
shll
sbb
ja
mov
sbb
fcmovu
inc
adc
mov
lahf
aam
cmp
scas
sbb
test
xchg
push
adc
out
es
int
xor
or
jecxz
cmp
adc
cs
sub
popa
mov
sub
jmp
add
or
or
or
xor
pop
or
test
ret
mov
push
xorb
mov
enter
sti
cld
and
clc
lret
movsl
inc
in
incl
orb
imul
rclb
mov
mov
cmp
cld
mov
and
push
je
fnstenv
lods
inc
pop
sub
lods
jmp
adcl
adc
xor
movsb
cmp
cmpsb
aam
add
data16
outsb
sbb
push
and
stos
dec
or
push
sbb
xchg
xchg
pop
testb
pop
push
xor
pop
mov
jno
dec
loope
sbb
mov
xor
lret
push
inc
push
rorb
mov
arpl
dec
js
movsl
mov
pop
fdivrs
push
cmpsb
lods
in
xor
pop
push
mov
andl
inc
sub
pusha
push
pop
out
in
sub
fnsave
ja
add
shlb
sub
push
mov
add
cltd
daa
mov
adc
js
pop
xor
arpl
and
sub
sbb
jmp
mov
imul
fmull
xchg
dec
dec
push
scas
pop
or
jno
int3
shll
push
add
and
xor
xor
aam
int
cmc
out
test
arpl
pushf
push
jge
das
je
les
outsb
mov
jp
push
jo
jle
das
add
outsb
cltd
mov
daa
out
in
dec
cmpsl
call
pop
mov
imul
mov
xor
lahf
test
cmpsb
hlt
pop
fidivrs
push
int3
and
pushf
push
loop
adc
xlat
test
push
mov
and
push
pop
inc
jmp
jb
lcall
pop
sub
or
fs
inc
notl
add
dec
pop
popa
aam
imul
js
insb
sbb
nop
stos
adc
enter
jae
sbb
enter
jmp
sub
in
inc
sbbl
bound
enter
pop
jmp
pop
xchg
push
xchg
shlb
ljmp
jp
ret
cmpsb
popf
imul
mov
mov
dec
int3
orl
loope
fimull
and
sbb
pop
cmpsb
cmp
inc
inc
push
mov
cmp
ret
stos
dec
inc
add
jg
lds
fldcw
mov
outsl
std
movsb
sahf
sbb
xchg
sub
cmc
daa
fs
mov
adc
stc
inc
and
outsl
test
adc
jb
inc
outsl
iret
movzbl
lahf
mov
cli
push
mov
mov
js
fcoml
aaa
cmp
jl
mov
mov
sbb
mov
mov
inc
push
loope
cmc
movsb
nop
sub
push
mov
dec
adc
shrl
xor
aam
repnz
mov
out
mov
mov
jbe
inc
dec
jns
fimull
pop
mov
sbb
ret
fsubs
loopne
je
rolb
orb
out
sbb
mov
ja
shrl
daa
jmp
icebp
imul
mov
cmp
push
dec
sarb
dec
arpl
mov
dec
imul
cmp
mov
dec
addr16
sub
leave
jmp
enter
mov
mov
inc
jb
mov
sub
sub
clc
outsl
fldenv
cmp
sub
xor
cmp
sub
sbb
pop
roll
jne
push
mull
add
lahf
xchg
jo
adc
push
fidivrs
dec
xchg
test
mov
ss
popl
loop
fists
repnz
or
sub
js
sbb
ja
fs
repz
iret
sub
repz
mov
inc
lods
mov
cmp
adc
movsl
frstor
add
xchg
push
sar
push
cmc
mov
cmp
inc
or
clc
aad
xchg
inc
ljmp
add
mov
outsl
stos
lods
jmp
loopne
xor
mov
or
mov
movsb
or
test
sbb
mov
inc
fs
addl
andb
testl
dec
sub
sub
push
addb
clc
cmp
add
inc
xchg
sub
xchg
cmp
add
and
test
clc
into
jge
loop
mov
stos
pop
mov
ja
adc
adc
stos
xor
imul
faddl
iret
andl
inc
xlat
fwait
daa
add
addr16
mov
add
mov
repnz
mov
jp
lock
shlb
jb
xor
push
xlat
add
notb
cmc
andl
mov
push
mov
sub
imul
test
mov
cli
mul
add
mov
pop
dec
sub
add
sbb
popf
or
loopne
jbe
xchg
nop
out
out
pop
mov
jns
mov
out
vpunpcklbw
sbb
ret
fwait
fs
xchg
mov
pusha
pop
or
imul
fildll
push
inc
insl
mov
sarl
test
daa
add
adc
adc
dec
adc
jb
lods
lea
adc
ljmp
inc
sar
and
push
add
data16
sub
lock
jle
xchg
sahf
push
or
mov
xor
movsl
lods
dec
mov
mov
in
mov
dec
or
addr16
sub
cmp
movsb
adc
and
jg
mov
push
imulb
lea
mov
out
sbb
sub
jbe
push
xchg
dec
mov
adc
sbb
pop
lret
es
shll
cmp
mov
cmp
lods
sub
mov
sub
addr16
push
cmpb
orb
mov
mov
push
cmpsl
push
mov
jmp
mov
mov
jnp
mov
mov
inc
aam
mov
in
out
sub
jno
out
cld
mov
insb
sahf
js
rolb
lock
in
mov
orl
mov
lcall
test
pop
iret
pop
mov
les
repz
out
pop
inc
imul
sub
mov
xchg
pop
cmp
loop
cmp
das
sbb
orb
mov
push
bound
es
dec
lea
into
hlt
in
adc
sti
xor
mov
cwtl
sub
pop
inc
jb
pop
and
subl
and
imul
dec
fwait
jae
sub
aad
mov
movl
inc
or
fnstsw
jo
adc
add
nop
hlt
adc
mov
dec
out
or
fiaddl
mov
dec
xlat
aam
xor
pusha
xchg
enter
les
sbb
aas
add
mov
pop
xchg
add
movsb
out
mov
pop
jnp
ss
xchg
out
mov
cmp
mov
sbbb
sti
dec
iret
in
sbb
ss
mov
cmc
add
push
jecxz
jmp
dec
cs
fiadds
mov
sub
pop
ss
adc
movsl
and
mov
adc
pusha
or
out
mov
sbb
xlat
int
jle
mov
lret
scas
sti
inc
xchg
and
cmp
lea
jne
cmpsl
scas
cmc
nop
jecxz
inc
jg
daa
mov
xor
adc
inc
xlat
leave
sub
jp
scas
cld
push
mov
xchg
xor
push
cmpsl
fcoml
outsl
cwtl
popf
js
movsb
stc
je
insl
pop
add
adc
pop
cli
rorb
mov
out
xchg
mov
sbb
pop
xlat
aaa
mov
mov
aam
aad
out
icebp
push
loopne
or
add
cli
xor
or
rclb
inc
or
sti
sub
push
add
sbb
shlb
gs
add
pushl
pop
pop
cli
pop
mov
imul
testb
jmp
or
sub
stos
je
bound
pop
dec
and
sub
ret
or
adc
mov
mov
jge
xchg
loope
mov
aad
mov
sbb
sbb
repz
dec
inc
cmp
dec
mov
push
and
mov
lret
mov
add
shl
dec
ja
mov
adc
dec
jl
xor
add
pop
adcl
adc
adc
cmp
and
xor
js
and
lods
xorl
dec
sub
addr16
lret
scas
cli
int3
js
das
rcrb
xlat
aam
push
inc
ret
dec
push
mov
repnz
stos
pop
scas
sub
test
imul
sbbl
testl
and
mov
inc
xchg
and
mov
mov
faddl
mov
int3
into
xor
fbld
bound
inc
adc
sbb
jecxz
xor
xlat
aad
nop
jo
scas
je
pop
jae
out
or
mov
pop
inc
dec
shlb
cmp
in
ret
mov
push
jne
sub
jge
sub
rorl
cltd
testb
test
lret
xor
jns
mov
sbb
cmpsl
iret
adc
cmp
sbb
xchg
dec
xchg
fisubrs
adc
loopne
xchg
adc
das
adcb
cmpl
dec
fwait
push
jae
rclb
hlt
push
push
cmp
addr16
call
pushf
ja
les
jmp
rclb
or
mov
aad
arpl
dec
adc
mov
in
in
push
hlt
cmp
insb
adc
mov
mov
xor
arpl
call
or
lret
push
mov
in
lock
int3
add
add
add
inc
mov
cs
nop
inc
mov
push
mov
lret
fwait
fsubrl
mov
fucomip
lret
add
cmp
pop
xchg
js
sub
or
ds
jg
sbb
mov
subl
inc
adc
mov
lcall
sbb
mov
sbb
je
movsl
insb
notl
clc
mov
cmp
inc
stos
sar
gs
mov
data16
xor
mov
push
cmp
push
js
push
dec
orb
pop
clc
fsubl
dec
rcrl
cmpsb
xchg
mov
xor
in
dec
adc
sbb
dec
cmp
cmp
pop
lock
mov
fdivrs
aas
dec
leave
xchg
jg
mov
movsl
push
aas
leave
mov
lret
pop
in
sbb
add
adc
out
lahf
pop
fimuls
jne
xchg
push
es
inc
jle
imul
test
mov
sub
push
or
aam
je
or
mov
mov
pop
out
mov
leave
sbb
sahf
and
mulb
jecxz
outsb
or
and
shl
popl
xchg
pop
std
xchg
iret
adc
push
xor
lock
stc
add
xchg
scas
ja
cmp
or
mov
imul
fdivs
sbb
cmp
and
inc
inc
testl
xchg
ficoms
lods
mov
adc
add
repnz
nop
or
ret
ljmp
mov
xor
fsubrl
jmp
or
lods
loopne
dec
aas
sti
xchg
dec
xor
insb
cmpsl
stos
adc
mov
push
idivl
push
sbb
scas
cmp
add
and
adc
push
xchg
rcl
cmp
mov
mov
cmp
arpl
push
xchg
loope
adc
cmp
dec
mov
push
or
mov
jecxz
or
sub
mov
insl
cmp
pop
adc
sub
aas
push
shll
out
fs
mov
repnz
in
lea
repz
cmp
imul
mov
adc
fdivrs
lods
es
and
jnp
in
push
dec
or
dec
xor
or
and
pop
adc
pusha
fisttps
js
movsl
pop
adc
and
stc
insb
rcl
sar
stos
jbe
ret
pop
xor
fucomp
ljmp
mov
xchg
mov
sub
xchg
out
int
out
xchg
test
int3
and
bound
into
mov
pop
pop
mov
pop
sub
dec
mov
shrd
jecxz
jecxz
cmc
push
pop
jnp
inc
shlb
push
lods
cmp
xor
and
stc
loope
stos
jne
xchg
push
push
jecxz
mov
lea
pop
inc
adcb
sbbb
mov
insb
adc
scas
xchg
inc
filds
aad
lret
push
js
lret
fs
lret
arpl
or
jmp
push
dec
cmpb
mov
and
jmp
sub
mov
cmp
std
lahf
cmpsl
dec
ja
mov
jp
dec
mov
mov
xchg
push
sbb
add
lret
cmp
mov
jmp
sbb
jno
test
jg
xchg
or
adc
or
popa
lahf
mov
pop
cwtl
aas
testb
imul
movsl
xchg
pop
mov
lret
dec
sub
or
ss
push
sbb
outsl
adc
xchg
adc
fwait
xor
rclb
loop
jp
scas
mov
mov
mov
mov
aam
ljmp
dec
adc
out
fisttps
sub
in
in
adc
push
mov
lods
std
xchg
push
data16
rorl
push
dec
add
insl
add
mov
or
test
scas
xchg
leave
sbb
repnz
ss
pop
sub
cmp
pop
and
adc
and
cld
adc
dec
arpl
test
in
fs
js
sbb
leave
jbe
and
adc
push
repz
fdivl
mov
xchg
pusha
xchg
cmp
mov
push
cmp
sbb
mov
iret
sbbb
mull
xor
dec
insb
int3
xchg
mov
shll
push
lods
sbb
push
gs
mov
or
mov
or
aad
adcb
mov
mov
and
lock
clc
test
sbb
repz
jl
iret
mov
add
jp
mov
lods
loop
stos
inc
jmp
stc
outsb
insb
sbb
inc
push
inc
cld
xchg
aam
test
ret
pusha
dec
inc
xchg
je
out
insl
cwtl
sub
loope
sub
arpl
pop
pop
fistpll
leave
mov
sahf
push
subb
ror
adc
mov
clc
pop
testb
jle
mov
inc
aas
faddl
mov
es
or
xor
popf
pop
cs
sub
xor
pop
test
cmp
pop
insb
adc
xor
jmp
mov
or
mov
add
xor
pop
cmp
scas
shll
lret
call
adc
mov
lcall
adc
je
sub
or
icebp
clc
stos
addl
cli
mov
cmp
or
push
jecxz
adcb
push
cwtl
pop
pop
adc
xor
lea
xchg
out
xchg
pop
sub
push
scas
in
testb
icebp
xchg
faddl
fsubl
xchg
mov
stos
pop
lea
cmpsb
fstp
imul
leave
loop
pop
mov
js
xor
or
xor
fstpt
dec
rol
out
mov
sub
adcb
adc
js
lea
push
stc
ljmp
push
movsb
or
int3
xor
push
push
xchg
add
or
mov
jle
lock
cmp
jae
leave
icebp
mov
repnz
pop
stc
jb
outsl
std
fisubrs
push
pcmpeqw
push
fistl
sub
sub
jo
enter
fildl
shlb
dec
sahf
mov
mov
sbb
xchg
fs
scas
mov
clc
sahf
std
fs
movsb
cmp
mov
in
imul
cmp
xor
addr16
rcrl
and
jp
addr16
jecxz
lret
add
fsubr
pop
stos
sbb
je
scas
aas
data16
inc
aad
sub
sub
cmp
lds
stos
sub
fs
xor
sbb
mov
push
pop
popa
sub
sbb
adc
jo
enter
dec
fsts
mov
fnstsw
and
fcomps
stos
scas
add
dec
push
cmp
in
pop
cmp
xorb
rclb
jl
jb
mov
mov
jl
into
and
add
push
cltd
pusha
push
mov
fisubl
mov
lret
jp
ss
xor
loop
ljmp
xchg
jae
mov
sbb
rcl
es
test
xor
and
cmp
inc
mov
idiv
sbb
adc
fwait
cmp
ret
into
sahf
add
adc
pop
fmul
lock
sbbl
sbb
iret
push
and
mov
gs
movsl
push
movsl
sub
shrb
xchg
pusha
lods
inc
dec
dec
adc
imul
hlt
sub
mov
fimull
push
mov
ja
repz
shlb
inc
cwtl
jge
pop
sahf
jne
jns
mov
testb
shll
test
lods
stos
inc
and
mov
cli
mov
stc
push
subl
pop
inc
push
or
pop
mov
loop
pop
lds
arpl
cmp
adc
repnz
lret
jo
cmp
pop
pushf
in
cmp
xor
pop
movsl
or
aaa
js
xchg
adc
cmpsb
jle
test
inc
mov
push
subl
push
in
jno
fdivs
je
cli
adc
inc
and
xorl
gs
fnstenv
inc
xor
rcl
test
jns
xor
arpl
aam
fwait
add
xor
mov
jle
arpl
dec
and
xchg
cmp
scas
stos
push
sbb
cwtl
xor
dec
jnp
out
or
jb
pop
cmpsb
scas
mov
push
lods
cmpsb
inc
je
fs
adc
test
mov
fistps
push
test
jne
push
inc
test
arpl
mov
sarl
push
jo
jnp
sbb
sbb
outsl
jmp
fldl2e
xchg
xchg
dec
mov
fiadds
push
mov
push
out
push
aaa
pushf
dec
into
pop
insl
dec
mov
ja
or
cmpsl
sbbb
jne
jbe
and
cmpsl
adc
cmp
stos
cmpsl
push
jp
adc
gs
shl
cmpsl
mov
movsl
inc
xchg
sub
push
inc
and
jns
add
loopne
cmpsb
pop
push
ret
jno
std
sti
and
jno
js
clc
movsl
add
test
je
shrl
and
inc
cltd
jl
pop
in
stc
pop
and
inc
and
sub
dec
lahf
cmpsb
sbb
rorb
out
subb
add
ud0
push
outsl
nop
fdivl
movsl
lcall
xor
sbb
jbe
aam
sbb
cld
bound
lods
jbe
aam
mov
sbb
dec
in
cmpsl
jbe
or
into
aaa
xchg
add
or
insb
mov
call
psraw
adc
sbbb
nop
xor
shll
scas
out
in
xchg
movsl
sub
xchg
sub
inc
rorl
xchg
inc
xchg
pusha
jmp
mov
out
push
shrb
mov
cmp
into
in
fidivl
int3
inc
ss
inc
pop
imul
push
movsl
insb
push
sbb
scas
ja
sub
cmp
mov
jb
mov
ja
daa
loope
or
push
xor
mov
xchg
dec
push
ret
mov
out
or
hlt
sub
xlat
or
inc
insl
shrb
and
mov
dec
test
scas
sub
pop
xlat
xor
clc
or
pop
xchg
dec
cwtl
movsl
sbb
into
scas
mov
push
movsl
ret
ret
and
mov
lock
pop
pop
xchg
mov
insb
mov
mov
pop
sub
push
sbb
sub
fneni(8087
jp
dec
enter
jb
fcompl
push
add
aaa
pop
ds
mov
out
test
movsb
cmp
mov
aad
push
inc
sub
xor
cmp
pop
rcll
inc
hlt
mov
xor
sub
cld
enter
nop
and
test
sub
jae
push
push
fidivrs
sarl
cmpsb
mov
aas
sbb
dec
lret
negb
jbe
clc
lock
add
les
imul
push
lock
dec
adcl
add
enter
pop
into
sbb
rol
add
cmp
outsl
jo
test
pop
imul
dec
mov
add
popa
dec
loopne
and
bound
mov
adc
add
adc
lcall
mov
std
inc
mov
add
test
out
jae
mov
test
ret
adc
lods
insb
and
sarb
fisubrs
sub
mov
xor
pop
lret
inc
inc
inc
push
dec
jno
pushf
adc
sub
aas
xor
lods
hlt
clc
movsl
or
test
inc
add
test
out
pop
xor
push
lcall
jecxz
add
sbb
mov
scas
fwait
pop
out
jb
mov
pop
inc
stos
mov
mov
add
xchg
jns
rolb
fdivrs
lcall
enter
fwait
sbb
adc
scas
adc
mov
mov
aad
or
xor
arpl
repz
in
sub
adc
mov
push
xchg
jb
xchg
rorb
fcmovne
mov
xor
mov
jmp
dec
and
xchg
fists
addl
jo
nop
nop
loope
pop
lods
movsl
je
mov
pop
mov
mov
cmp
xor
outsl
stc
fwait
xor
xlat
cmpsl
ficomps
xchg
jb
sarl
mov
imul
adc
mov
push
jo
xchg
dec
add
aas
loope
dec
out
lret
iret
xor
jo
jl
pop
mov
push
aad
shrl
or
cmp
xchg
jecxz
insb
orl
lret
cs
cwtl
push
and
jbe
xchg
inc
sub
push
push
imul
sbb
mov
jo
loope
leave
cltd
loopne
pop
in
jg
sahf
in
ficompl
jle
mov
dec
xchg
loope
addr16
lret
push
sbb
jge
add
loope
das
cmp
jp
adc
xchg
cltd
mov
jle
test
mov
mov
inc
fmull
shlb
addr16
mov
insb
cmp
jp
fdivrl
insl
movsb
and
cli
cmpsb
cmp
and
jl
xchg
ds
pop
ljmp
das
mov
and
addr16
pop
xchg
mov
inc
rcrl
sbb
cltd
inc
add
push
dec
inc
pop
mov
data16
dec
movb
mov
hlt
pop
insl
jno
dec
add
adc
push
mov
stos
mov
xor
fcomi
xor
cld
insl
dec
jle
daa
push
outsl
mov
cmpsl
cmc
ljmp
out
cmpsl
and
out
aam
mov
sbb
in
lods
pop
sbb
lret
push
inc
mov
pop
jecxz
pop
in
aaa
roll
ja
cmp
out
bound
bound
mov
fsts
push
imul
dec
js
out
push
sarb
filds
xor
xor
adc
sub
sub
sbb
inc
sahf
lea
push
fst
jl
pop
cmp
rcll
sahf
jae
aad
bound
addr16
cld
repnz
jbe
loope
mov
mov
stos
hlt
xor
cmpl
xchg
lea
je
cltd
sahf
cli
jb
jle
js
lds
jl
stc
push
aam
mov
xor
mov
shlb
lret
pop
push
and
shrl
cmc
popf
pop
leave
scas
or
outsl
inc
cmp
jp
mov
sub
out
or
pop
adc
pushf
ret
mov
ss
xor
in
mov
lods
push
push
sti
or
xchg
jmp
test
das
sbb
in
xor
mov
lret
sub
mov
cli
mov
jmp
sbb
loopne
lods
bound
add
and
pop
and
cmc
inc
imul
enter
mov
xchg
push
and
or
xchg
adc
imul
fdivrs
mov
lea
mov
aas
ljmp
ret
addr16
adc
repnz
sahf
add
repz
test
jge
addr16
or
aas
jbe
push
cmpsb
ljmp
dec
gs
fnstsw
push
sbb
xchg
inc
add
pop
rcrb
hlt
xor
cmp
gs
jle
mov
sbb
mov
mov
xor
inc
xchg
xchg
ret
call
inc
das
mov
inc
add
dec
inc
add
lret
inc
lahf
pop
cwtl
xor
fdivr
das
pop
pop
hlt
stos
sbb
pop
fs
mov
in
push
add
jb
outsl
xor
mov
lcall
andb
dec
mov
cmp
and
out
cltd
cmpsl
push
loope
cmp
xor
dec
sbb
lea
add
xchg
push
sub
cmp
cmp
leave
pusha
aad
xchg
and
jae
cmc
mov
mov
inc
out
aas
addr16
cs
mov
jns
mov
mov
jns
hlt
clc
lret
cld
addr16
dec
lret
cmp
and
and
cmp
dec
xchg
or
jg
push
add
insb
js
jns
mov
mov
push
sbb
shlb
mov
nop
dec
call
loop
imul
rcll
fistpll
pop
jg
int
loop
stos
incb
shll
movsl
xlat
or
inc
fisttpll
xchg
xchg
js
sbb
inc
mov
adc
sti
arpl
mov
mov
push
popf
ljmp
mov
push
xor
popa
dec
sbb
orl
push
jb
shll
lds
ja
lret
es
call
xchg
mov
xlat
mov
fistpl
add
xchg
xlat
sbb
xchg
pusha
push
push
cmpsb
in
dec
dec
xor
sbb
xor
xor
rcll
dec
sbb
pop
adc
cmpsb
movsl
lahf
and
adc
stos
adc
push
mov
movsb
dec
sbb
aam
mov
mov
adc
bound
rol
jle
mov
mov
pop
jmp
sbb
mov
out
in
xchg
push
and
xchg
cmp
into
pop
jg
mov
das
pop
adc
dec
ds
sbb
out
lods
sub
pop
sbb
sahf
push
call
lcall
es
pop
xchg
push
in
insl
lea
sbb
cmc
pop
ret
js
cwtl
jl
aad
pop
sbb
cs
push
inc
pop
repnz
lret
int
push
imul
rorb
add
and
or
mov
cmp
xchg
xchg
adcl
mov
lds
cmp
xchg
std
test
jle
lea
cs
cmp
pop
aaa
mov
in
clc
out
sub
adc
ja
jmp
adc
sbb
mov
inc
ss
pop
jnp
xchg
push
mov
imul
in
or
pop
xorl
mov
push
sub
sub
mov
loope
jb
cmp
or
je
jmp
xchg
mov
divb
mov
push
mov
cwtl
cmpsb
mov
xor
add
xchg
xor
icebp
xor
call
rcll
xchg
cmpsb
jecxz
lods
push
icebp
and
sbb
out
stos
into
sbb
jl
push
or
in
push
mov
test
inc
push
pop
inc
add
in
repnz
cmp
lods
pop
lock
dec
add
jmp
insb
popa
ret
popf
aad
or
dec
js
xorb
jp
sti
adc
int3
jae
pop
mov
pop
xchg
xor
lret
hlt
aaa
cmp
or
out
pop
cltd
mov
stos
es
cmp
xor
sbb
pop
dec
scas
mov
and
fsubs
add
mov
pop
movsb
or
and
add
mull
iret
fistpl
adc
insb
into
sar
loop
js
or
es
adc
xchg
cmpsb
sarb
in
jns
adc
aas
roll
bnd
lcall
adc
inc
and
fstpl
xor
outsl
or
xchg
pop
and
movsl
jl
pop
sub
add
mov
orb
pop
sbbl
decb
jg
xchg
pop
data16
inc
lcall
fld
cli
inc
pop
lods
xchg
int
mov
sbb
or
inc
mov
aas
sub
popf
loope
mov
push
jle
sub
in
aad
mov
jl
inc
mov
dec
and
inc
dec
push
push
cs
stc
and
xchg
xchg
pop
add
ror
js
cmp
lret
mov
jns
push
xlat
push
or
mov
test
ljmp
sbb
or
xchg
aaa
push
fwait
xor
mov
iret
rcrl
das
add
xchg
int3
xchg
addl
pop
sti
add
ljmp
push
jno
aas
or
into
adcb
testb
pop
push
fnstsw
sub
jne
stos
push
das
pusha
dec
jnp
xchg
adc
cmpsb
cli
jne
and
jne
push
outsl
add
dec
sbb
push
sub
inc
push
or
shlb
cmp
push
call
dec
icebp
lahf
or
jne
arpl
inc
mov
jl
push
cmp
sbb
lret
sbb
lret
in
inc
loopne
pop
jg
mov
cmp
in
cmp
int3
in
mov
sbb
xchg
xchg
jmp
inc
dec
jmp
inc
jl
sarb
push
ja
ja
in
stos
pop
and
xchg
sbb
pop
ds
iret
scas
add
scas
testb
cmp
gs
movsb
push
xor
vmovq
push
test
sbbl
dec
sbb
outsb
cmp
mov
pop
and
pop
loop
std
negl
adc
xlat
jl
cmp
sub
push
lahf
xor
enter
notl
nop
add
pop
jo
pop
add
fistps
gs
dec
mov
pushf
xor
ss
fld
loopne
sbb
cmp
loope
jmp
dec
dec
js
insb
pop
ljmp
adc
xorb
jg
fisubs
sub
dec
dec
fcmovbe
addr16
loop
outsb
mov
das
mov
sti
or
insb
inc
das
ficoml
imull
mov
inc
dec
iret
loope
mov
mov
jge
divb
int
mov
xchg
inc
cmp
xor
loop
cmp
mov
adc
scas
sbb
push
dec
xlat
leave
lret
push
mov
jecxz
scas
push
jmp
lods
sbb
mov
push
pushf
inc
aad
mov
loope
fsubrp
cmc
push
repnz
movsb
lret
lahf
out
nop
jge
ret
into
fwait
idivl
mov
aaa
or
out
pop
push
loop
in
mov
xlat
rolb
cmp
or
inc
std
rcrb
cltd
sahf
call
or
mov
ds
mov
repnz
mov
mov
out
mov
shlb
push
sarb
faddl
movsl
je
adc
sarb
xchg
int3
add
adc
jmp
mov
pop
rclb
into
pop
jb
sbbl
iret
add
mov
push
xchg
imul
cli
sub
xor
xchg
negl
mov
push
cmp
add
ficompl
dec
outsl
mov
xor
sbb
and
inc
dec
frstor
mov
dec
andl
sbb
sub
hlt
sarl
and
test
add
cmp
in
imul
lahf
xchg
pop
lea
push
shlb
xchg
and
sub
dec
les
sarb
pop
jbe
dec
jmp
rclb
xchg
jns
push
das
dec
das
sbb
xchg
movsl
adc
sti
popf
sub
inc
shlb
add
pop
xchg
mov
jmp
test
jmp
pop
cmp
jg
or
popa
push
mov
mov
insb
mov
lods
jmp
mov
dec
mov
add
clc
jno
xchg
icebp
dec
sub
adc
notb
push
mov
cmp
or
movsb
imul
ljmp
std
xchg
cmp
jno
sub
test
xchg
fcmovne
xchg
jmp
mov
ja
mov
stos
sahf
pushf
ja
pop
mov
xor
pop
mov
inc
pop
ljmp
xor
out
cld
cltd
dec
push
pop
push
or
inc
or
int
mull
jl
jp
jnp
mov
add
lahf
movsl
out
mov
adcb
pop
loopne
lea
mov
push
pop
jo
mov
lds
mov
xlat
inc
dec
sub
sub
fldl
and
pop
std
xchg
xchg
xor
jns
dec
nop
imulb
mov
dec
loope
dec
jb
cmp
pop
push
xchg
out
push
jmp
loop
repnz
and
inc
hlt
fsubrl
mov
adc
adc
cmp
hlt
xor
jae
test
lret
cmp
ljmp
dec
sbb
fadds
and
pop
add
inc
add
ljmp
ljmp
xchg
mov
jmp
adc
loop
aas
ror
jl
and
add
mov
cltd
shrl
or
incb
inc
dec
ret
push
js
and
mov
inc
mov
test
fistl
dec
lock
inc
or
adc
pop
test
leave
mov
scas
ja
mov
scas
stc
mov
jp
outsl
xlat
inc
outsl
imul
pusha
push
or
xor
test
mov
push
mov
cmp
lods
cltd
stc
popa
lret
int3
push
leave
sub
jbe
fdiv
insl
leave
out
lods
scas
xor
test
outsl
lret
dec
push
loopne
or
jg
cmp
fs
les
mov
les
xchg
dec
xchg
mov
rcll
inc
adc
icebp
cs
dec
inc
sub
or
jmp
hlt
in
out
push
add
ss
test
jle
repz
out
daa
mov
mov
popa
dec
push
push
jae
jns
cli
insl
in
mov
int3
mov
add
sbb
imulb
pop
test
aam
xchg
and
mov
popa
lock
pop
sbb
sbb
mov
addr16
std
sarb
fisubrs
adc
inc
stos
mov
inc
add
push
insb
push
sbb
in
cmp
daa
xchg
pushf
ret
xchg
push
pop
cmpsl
mov
mov
out
and
jae
ss
dec
jmp
or
loope
jmp
repnz
or
push
lcall
iret
cmp
int
addr16
sub
and
ja
mov
fcmovb
adc
loop
fcmovbe
movl
lea
in
dec
inc
adc
or
in
mov
outsb
sub
inc
sub
jmp
pop
mov
aas
jmp
inc
insl
mov
add
shl
ljmp
cmp
xor
aaa
sub
test
iret
pop
inc
mov
push
mov
push
pop
loopne
rcll
jg
into
push
adc
and
mov
jbe
insl
je
or
add
es
xchg
xchg
aam
inc
scas
pcmpgtd
les
lahf
mov
push
mov
and
xchg
adc
cmp
testl
fidivrl
sub
push
fbld
push
jmp
mov
gs
jne
push
movb
jne
mov
sub
loop
ja
dec
std
and
adc
cmc
sub
push
into
inc
fnsave
jg,pn
or
sub
out
sub
mov
hlt
mov
xchg
loopne
fcmovb
imul
hlt
and
push
or
or
mov
lock
mov
popa
cmp
mov
pop
scas
push
divl
mov
or
inc
loop
sbb
cmp
enter
out
jb
jge
mov
test
cli
js
push
and
inc
inc
cmp
mov
push
daa
outsl
mov
jge
fnstcw
adc
div
popa
scas
adc
cmp
insl
pop
ficompl
xor
mov
and
mov
lock
mov
inc
enter
jo
aaa
aas
or
xchg
pop
movsb
out
pop
dec
ret
xor
jae
pushl
xor
shr
jbe
jb
or
xor
rcll
dec
mov
aam
sub
pop
or
push
aas
gs
je
inc
fstpt
jl
add
in
leave
pop
popa
mov
jg
xlat
push
fisttpl
sbb
pop
roll
inc
out
and
movsb
js
mov
pop
es
js
test
shl
pop
dec
push
push
out
sub
inc
push
push
xor
fstl
add
mov
lret
push
jns
dec
pop
cmp
adc
imull
cmpsl
jae
cmp
cmp
adc
inc
dec
dec
repnz
jmp
jl
mov
sahf
mov
sub
mov
mov
mov
xor
push
mov
jp
xlat
or
in
dec
sahf
stc
mov
or
mov
xchg
pop
xor
dec
xor
in
cmovp
iret
ds
call
mov
pop
adc
mov
cmp
xchg
repz
fldt
pop
push
jbe
dec
mov
outsl
xchg
add
nop
lea
xor
and
inc
rcl
arpl
push
push
jno
jecxz
shlb
mov
jo
jo
sub
and
movsl
xchg
inc
sub
adc
push
cli
wrmsr
jp
xor
mov
xlat
cmp
out
sar
xor
aam
cli
and
imul
push
fdivp
hlt
je
or
scas
les
hlt
xchg
test
pop
fnstsw
cmp
fcmovb
add
in
mov
mov
ljmp
test
cmp
mov
adc
pusha
shl
divb
and
xchg
pop
imul
inc
pop
out
and
in
jno
fcmove
ret
mov
ljmp
imul
leave
add
mov
xchg
push
mov
mov
dec
mov
test
push
ss
loop
cmp
testl
loope
jnp
lea
lea
sub
xor
or
gs
mov
imul
test
inc
pop
xor
jl
jle
ds
sub
push
inc
sub
test
jmp
aad
mov
push
arpl
ja
dec
jbe
jmp
dec
aas
adc
adc
mov
xchg
sahf
sub
cmovs
inc
cmpsl
sbb
cmp
or
jle
push
mov
scas
aaa
add
je
xchg
lret
js
test
xor
mov
pop
xor
out
push
adcl
mov
sti
rclb
sbb
aaa
adc
sti
xchg
xchg
je
or
mov
and
sub
repz
dec
fld
jo
and
test
mov
xchg
call
aas
xlat
insb
and
cli
movsl
pop
sub
cwtl
imul
mov
ja
fcmovbe
in
mov
call
dec
scas
sbb
pop
inc
lods
add
in
gs
mov
pop
push
lods
outsl
scas
xchg
pop
aaa
pop
pusha
xor
adc
pop
rclb
add
shld
roll
mov
js
or
pop
lea
mov
push
in
sbb
fdivl
add
test
xor
dec
xchg
sti
xchg
add
out
orb
sbb
iret
push
loopne
cli
push
and
daa
fwait
lods
push
cmpsb
in
xor
xor
pop
pushf
imul
cli
jecxz
out
pop
loop
mov
leave
dec
xchg
push
test
pop
pop
ficomps
das
scas
push
loop
mov
test
daa
outsl
mov
fisttpll
cmpsb
push
adc
mov
push
adc
jge
ljmp
mov
nop
test
lods
dec
stos
imull
shll
adc
test
push
add
xor
push
jnp
idivb
xchg
or
enter
mov
lahf
xlat
lds
xorb
data16
cmp
stc
xchg
aad
jl
leavew
mov
mull
xor
rorb
fnstcw
jle
pop
xchg
dec
les
jecxz
lret
add
cmp
jp
std
push
lret
jmp
xor
mov
mov
je
outsb
cmpsb
and
sbb
xchg
in
jb
inc
mov
mov
sti
dec
mov
aam
jns
test
lods
cs
insl
pop
inc
pusha
scas
ljmp
loopne
fistl
mov
inc
in
cmpsb
dec
mov
xchg
pop
stc
popa
mov
stos
test
out
jecxz
stc
and
aas
inc
or
dec
dec
or
xchg
mov
fs
in
pop
incb
add
repz
scas
imul
lods
cmc
imul
ret
in
into
push
inc
test
pop
inc
mov
sub
outsl
cmc
push
mov
pop
mov
aas
mov
inc
cmp
cmp
fdivs
xchg
popf
mov
in
mov
lods
cmp
in
push
sub
xorb
push
lret
cld
mov
lret
pop
add
cmp
sub
pop
mov
stos
rcll
fsub
dec
shl
sbbl
push
push
cmp
cmp
inc
lods
cmp
push
clc
icebp
mov
repz
inc
jle
mov
push
add
cmpsl
push
mov
jge
jns
add
inc
add
out
and
sbb
dec
xchg
xor
roll
xchg
jns
test
lahf
push
adcl
adc
in
scas
ljmp
hlt
xchg
push
sub
lock
bound
das
or
pop
push
scas
cmc
adc
xor
iret
cmp
push
scas
sbb
out
iret
int3
push
xor
lcall
bound
jp
jns
xchg
xchg
outsb
test
stos
in
adc
ret
pop
out
cmp
inc
loop
and
jmp
lret
cmc
rcrb
fmull
sub
cmpb
loopne
cmp
std
adc
lods
mov
pop
and
mov
fstp
ljmp
testb
mov
jp
add
adc
mov
neg
inc
mov
jecxz
mov
cmp
cmp
lahf
xor
gs
push
dec
nop
mov
popa
shrb
stos
fmuls
xorl
test
xor
mov
push
bound
test
pop
in
insl
enter
mov
outsl
out
cwtl
in
jg
mov
cwtl
incb
push
xchg
in
inc
frstor
js
cltd
lods
mov
rcr
aas
jbe
mov
ret
sub
xchg
pop
jg
int
in
stos
inc
aam
cmpsl
xchg
jns
pop
push
inc
call
or
pushf
pop
sub
sub
add
jecxz
mov
sahf
xchg
mov
pop
hlt
les
inc
xchg
xchg
push
imul
dec
lret
fisttpl
shl
cli
cmp
mov
ret
jae
fwait
or
jle
push
xchg
enter
clc
push
jbe
cmc
lcall
pop
inc
sbb
xlat
xchg
and
cmp
push
pop
add
ljmp
add
mov
test
sub
scas
stos
cld
repz
inc
jp
mov
mov
dec
shll
xor
imul
imul
ljmp
stc
ljmp
push
sbb
and
adc
jecxz
jbe
stos
jb
xchg
out
pop
jns
dec
push
inc
fdivr
je
cltd
sbb
and
push
mov
adc
sub
adc
es
push
nop
inc
lock
insb
das
repnz
addb
mov
cmp
push
adc
cmp
test
mov
inc
loop
xchg
ds
dec
nop
mov
pushf
adc
ss
fidivl
mov
xor
jbe
imul
mov
into
or
ficomps
in
or
lods
or
mov
frstor
incl
fcoml
sub
jno
int3
in
sub
loopne
dec
and
fcmovbe
mov
dec
pop
outsl
or
inc
xchg
push
or
sub
xor
xchg
inc
pop
inc
jne
dec
push
out
fwait
inc
ja
iret
jg
xchg
mov
mov
int
dec
pusha
in
lcall
xchg
dec
pushf
in
fistl
pop
jecxz
out
cmp
dec
movsl
cwtl
dec
aad
add
jbe
shl
mov
aas
sahf
call
fs
test
test
fs
inc
mov
xor
xor
cmp
popf
arpl
or
out
shrb
inc
int
out
pop
stc
xlat
sbb
ds
sub
or
dec
push
mov
test
ret
lret
add
dec
sarl
jg
mov
pop
sahf
insl
insl
sub
aas
out
inc
pop
roll
jge
inc
popf
push
inc
into
lods
data16
push
bound
loop
pop
jo
xor
mov
xchg
jge
xchg
test
clc
arpl
jb
inc
jp
int
adc
push
fsubrl
out
mov
mov
insb
xor
lods
add
inc
addb
inc
mov
in
mov
mov
cmp
fs
scas
jo
cmp
dec
sbb
mulb
inc
dec
adc
push
adc
lret
outsb
aad
push
pushf
outsb
xor
out
ret
cmp
or
fidivrl
cmpsb
in
or
and
popa
mov
and
dec
scas
mov
addr16
stos
xchg
mov
es
dec
xor
sub
pop
popl
or
jns
jno
shlb
fwait
mov
sub
jnp
insb
sbb
adc
fsubs
mov
lock
popa
jne
mov
jecxz
xor
loope
int3
xchg
and
or
mov
dec
mov
jne
mov
lock
xor
mov
das
test
cmpsb
sbb
sbb
lret
mov
ret
mov
loop
push
clc
insl
xchg
repz
push
lcall
push
add
rorb
pusha
jbe
scas
fiaddl
jecxz
mov
adc
ret
sbb
hlt
pop
scas
jl
sbb
aad
out
and
les
fnsave
fcmovbe
sub
xorl
out
pop
popf
pop
out
cmp
cs
sub
jge
in
iret
fwait
scas
push
fistl
add
mov
push
push
fisubrs
insl
mov
inc
xlat
aam
in
aas
mov
add
pop
add
dec
add
sbb
xor
inc
push
scas
leave
daa
lcall
push
mov
mov
and
add
out
mov
push
out
jb
xor
rcr
cld
mov
das
leave
fisubrl
sub
scas
push
xlat
sbb
inc
pop
pop
in
adc
aaa
inc
aaa
jne
push
adc
mov
xor
mov
aas
sbb
out
add
in
jecxz
and
pop
outsb
hlt
cltd
inc
xor
test
gs
jns
cmp
in
repz
push
mov
test
repnz
outsb
adc
popa
gs
inc
test
push
jle
mov
inc
arpl
mov
cmp
sbb
pop
jnp
xor
popa
sub
cmp
xlat
cmp
out
push
js
mov
xor
lods
jecxz
ret
negb
pop
sarl
jne
outsl
mov
inc
jb
movsl
test
mov
scas
xchg
mov
sbb
ficoml
je
push
or
push
mov
sub
push
movsb
or
pop
stos
int
adc
add
out
xor
lods
add
lods
and
stos
push
mov
out
sti
inc
add
pop
mov
mov
out
xorl
cmp
xor
sbb
mov
cmp
into
xchg
dec
pop
cmp
sub
jecxz
cmp
mov
push
mov
rorb
adcb
sub
push
repnz
jb
data16
push
sbb
hlt
test
inc
ret
sub
lcall
dec
push
xchg
adc
inc
fs
inc
rclb
push
push
xchg
pop
aam
out
je
into
cmp
cs
push
arpl
js
lock
fildl
outsl
mov
mov
inc
stos
daa
cmp
test
mov
sbb
ja
leave
pusha
rcrl
cmpsb
push
sbb
shll
xchg
mov
mov
fsubrs
adc
adc
iret
add
and
les
cmc
push
xchg
push
push
rolb
jle
mov
mov
testb
jmp
ficomps
pop
xorl
mov
inc
pop
in
iret
ljmp
cmc
sar
dec
scas
inc
mov
loope
push
adc
pop
xchg
mov
lds
mov
and
mov
add
add
push
sub
lock
loopne
jo
and
ss
inc
sarl
ljmp
shlb
aas
rorl
cmpsb
rorl
cwtl
sbb
push
cmp
adc
mov
fcompp
negb
add
mov
icebp
dec
xorl
sbb
add
xchg
xlat
adc
sub
js
into
loope
jmp
lea
mov
jne
pop
jae
leave
decb
xor
jp
ret
push
mov
jne
inc
test
imul
inc
shl
test
cli
and
xchg
pop
jecxz
mov
jge
ret
orl
into
mov
cmpsb
sbb
xor
mov
jae
fmuls
and
xor
gs
or
xorl
adcb
shll
push
sti
and
ds
sub
mov
sub
imul
nop
cmp
lea
sbb
xor
sub
jno
aad
das
sahf
loop
or
push
sbb
xlat
stc
lcall
jp
mov
mov
sub
lods
fists
or
psadbw
add
mov
fsubl
jge
pop
in
xlat
fs
or
scas
push
into
jnp
mov
mov
or
aaa
out
xchg
mov
repz
sahf
icebp
adcb
jo
cmp
dec
or
sbb
push
int3
xchg
add
xor
leave
and
rolb
lea
or
mov
test
lods
int
xor
sbb
jae
xchg
cmp
cmpsb
hlt
loop
fisttps
ljmp
daa
int3
shrl
aam
mov
shlb
and
jo
insl
stos
ret
add
test
insl
andl
add
pop
out
in
andl
iret
mov
add
addr16
repnz
pop
addr16
into
pop
shll
mov
cmpsl
aaa
es
mov
xor
mov
or
imul
adc
mov
inc
mov
int3
test
pop
cs
sub
shlb
orl
jbe
lea
mov
hlt
in
sbb
push
mov
lcall
pop
dec
mov
add
xchg
leave
push
stos
inc
imul
xchg
push
inc
cld
insb
sub
push
jmp
cs
inc
sub
dec
jg
sarl
int3
jnp
push
icebp
inc
icebp
and
mov
jno
pushf
dec
sbb
jns
add
scas
fsubrs
test
filds
push
roll
dec
ret
or
fdivl
dec
add
cwtl
jo
xor
pop
add
loopne
data16
mov
in
cmp
adc
cmc
mov
and
mov
add
mov
push
jns
lds
repz
jmp
xchg
jae
test
cmp
cmp
cmp
jno
xchg
xchg
add
adc
stos
xor
dec
popa
lods
in
push
sbbl
jmp
jns
cs
shl
mov
pop
pop
add
jae
dec
imul
adc
arpl
mov
xchg
rorb
mov
dec
mov
and
outsb
push
xor
gs
push
mov
dec
sar
xor
add
add
cli
negl
adc
push
inc
or
shrb
insb
push
pushf
jl
xchg
mov
cld
out
dec
loop
std
lret
mov
adc
lods
jg
xchg
cwtl
addr16
popf
in
pop
and
cmp
orb
mov
inc
sbb
pop
icebp
or
pop
cs
pusha
das
push
lahf
sahf
and
add
in
xor
and
cmpsl
xchg
jge
push
push
mov
cmp
lahf
popa
cmpb
jg
fwait
jg
divl
jo
mov
inc
sub
loope
push
push
sub
enter
aad
cmpsl
add
icebp
mov
xchg
jl
ja
insb
mov
cld
aam
dec
mov
pop
repz
sbb
push
jns
aaa
fdivrl
sub
cwtl
lret
test
jo
sbb
icebp
push
sti
je
dec
test
sub
ss
dec
sti
lcall
fadds
pop
bound
repz
mov
mov
int
popl
in
hlt
xchg
jae
call
add
sahf
mov
jmp
mov
add
fdivrs
clc
outsb
xchg
inc
mov
lods
lods
and
jae
xor
popa
xor
orb
sub
fisubs
and
ds
daa
sub
pop
je
stc
test
dec
add
pop
pop
mov
sahf
pop
js
jnp
movl
es
mov
sub
xor
shlb
popa
sub
sub
popf
out
cld
pop
bound
andl
sbb
cwtl
and
outsl
jmp
sahf
or
cmc
in
data16
push
mov
loop
ficoms
sbb
or
pop
pushf
xlat
jns
jg
cmp
call
inc
and
lcall
mov
adc
cli
scas
out
sub
aam
mov
in
xor
aam
mov
inc
in
and
loopne
jmp
jg
pop
rorb
cld
bnd
in
in
pop
movsb
jmp
push
scas
or
sub
outsb
imul
cli
cli
mov
jno
in
mov
call
sbb
sub
cmp
jg
sub
push
outsb
jo
jmp
cltd
inc
test
fsubs
adc
cmp
nop
or
cs
js
insw
jb
cwtl
mov
ljmp
fcomps
imul
ljmp
stos
bound
mov
mov
or
test
add
push
xchg
or
cmpsl
add
sbb
push
addl
pop
or
xchg
adc
dec
pop
add
pop
ror
xor
xor
cli
ret
mov
add
repz
or
outsl
sbb
out
cmc
fldenv
fs
sbb
lcall
push
fcmovb
jmp
imul
leave
inc
jne
out
arpl
arpl
dec
out
pop
stos
jp
xchg
or
and
xchg
sub
jo
movl
imulb
shr
std
cmp
sbb
push
jle
push
and
ljmp
fnstcw
mov
jge
cmp
xchg
fadds
loop
adc
out
mov
mov
testl
jns
cwtl
jp
flds
rclb
daa
fwait
xor
dec
mov
push
mov
das
dec
scas
and
mov
xor
add
les
movsl
inc
leave
fldcw
rcr
call
mov
ficoml
ds
xor
dec
mov
add
mov
push
xchg
in
push
xchg
dec
shll
addr16
fwait
stos
or
repz
inc
fstpt
or
int3
adc
je
hlt
loopne
xchg
test
pop
cld
cwtl
cmp
adc
sbb
mov
fwait
cmp
xchg
jno
lock
or
cmp
ljmp
fnstsw
cmpsl
sbb
fs
stos
cmpsl
push
and
subl
mov
pop
sub
mov
fistpl
mov
bound
pusha
pop
pop
outsl
int
call
popf
addr16
mov
xor
and
and
dec
sub
je
sti
xchg
jo
and
rolb
sbb
jbe
test
divb
orl
jno
inc
xorl
leave
addr16
xchg
push
fimull
pop
push
nop
ret
or
sub
xchg
es
and
jmp
fs
inc
pop
or
addr16
push
pop
movsl
sub
inc
lahf
shrb
mov
mov
lcall
fmuls
cld
and
mov
jne
push
enter
cmp
movsb
mov
repz
lock
xor
push
jbe
pushf
jno
pop
or
shrb
mov
sub
mov
sahf
xchg
ja
jne
mul
jns
std
xor
xor
cmc
xchg
and
sahf
punpckhdq
aas
movsl
dec
addr16
or
std
xchg
push
les
ret
mov
mov
xor
mov
mov
addb
rorl
test
ja
inc
in
sub
lods
mov
mov
push
cmpsl
imul
fstpl
rcll
out
push
popa
insb
cltd
cltd
out
rclb
icebp
push
fs
mov
ljmp
push
insb
stos
lods
rorb
mov
adc
cmp
or
and
sub
push
shll
data16
lea
into
idivb
leave
aas
test
xchg
iret
insl
jae
int
and
mov
jl
sub
mov
jae
in
es
adc
stc
mov
push
push
aaa
xchg
or
lret
andl
jbe
xchg
pop
loop
xlat
addr16
test
pusha
push
je
dec
out
and
shll
ljmp
pop
out
dec
mov
ljmp
sbbb
mov
int
xor
jno
pop
inc
inc
dec
daa
push
dec
je
adc
mov
sti
scas
mov
dec
shr
push
pop
aaa
aas
sub
push
dec
shr
ret
mov
push
jno
stos
sub
inc
in
rol
outsb
sub
mov
insl
lahf
mov
fucomip
sti
fs
lahf
insl
mov
mov
addr16
xchg
lret
and
lahf
imul
push
mov
adc
rcl
dec
cmp
sahf
sti
popf
jno
jb
push
je
xor
mov
mov
call
mov
inc
mov
mov
push
and
int
pop
leave
fildll
lea
aam
popf
out
arpl
repz
aad
loopne
xor
cli
push
scas
fucomi
cltd
fwait
outsl
push
in
push
sub
and
cmpsl
and
inc
and
sbb
movsl
xchg
stos
dec
pop
js
aam
fcoms
arpl
xchg
cli
jmp
sbb
push
xor
fs
mov
imul
das
js
inc
cmp
or
inc
xchg
test
cmp
xor
das
xlat
loop
dec
dec
jge
fwait
cmc
or
xorl
dec
xor
jnp
jmp
mov
inc
jb
add
add
push
push
jp
jle
dec
push
sub
gs
pop
sti
test
mov
inc
or
stc
bound
cld
and
dec
loopne
mov
mov
jnp
jmp
push
jp
jg
iret
movsb
xchg
sbb
out
pop
sub
mov
into
cmp
dec
push
mov
and
xorl
aaa
orb
xor
jle
dec
das
adc
js
movsl
or
xor
cmp
jbe
add
xchg
int3
aas
movsl
dec
scas
outsl
cmp
popa
xor
lret
loop
das
repnz
mov
mov
ds
or
out
insb
lds
cmp
dec
lock
mov
leave
sbb
mov
lock
outsb
mov
shlb
mov
ret
mov
daa
insb
push
mov
jns
je
xor
adc
cmpsb
aam
jo
inc
es
vaddpd
adc
sbb
sub
cmc
mov
loopne
adc
inc
hlt
movsb
sbb
mov
inc
dec
mov
imul
shl
pop
adc
sbb
or
cwtl
pushf
jae
push
pusha
or
mov
stos
gs
movsl
jbe
imul
sbb
nop
sbb
mov
xor
out
push
ja
imul
cmc
in
xchg
cwtl
xchg
xchg
lret
xchg
lahf
mov
cs
cli
jbe
out
add
jae
jnp
cs
sbb
bound
adc
cmp
push
cld
sub
mov
dec
gs
pop
scas
jbe
emms
les
mov
mov
cmc
mov
out
dec
fldenv
fcmovnbe
rcrb
inc
fwait
addr16
aad
inc
lock
dec
mov
daa
pop
fnstsw
xchg
adc
or
xchg
je
add
leave
out
pusha
add
arpl
je
inc
cs
jg
mov
or
lcall
jbe
loope
and
fstpt
xchg
cld
shl
xchg
xchg
stos
roll
lahf
mov
loop
int
test
movsl
aaa
in
roll
call
xor
fmull
shr
in
and
test
mov
dec
pusha
mov
mov
lds
ret
push
out
jnp
out
sub
adc
xchg
test
and
es
sbb
rcrb
inc
shlb
xchg
adc
xchg
out
jge
xchg
mov
add
dec
push
mov
mov
adc
clc
or
dec
cmpsl
sbb
movsl
loopne
das
and
bound
pushf
mov
test
fcoms
dec
sahf
fidivrs
or
jno
dec
mov
jae
repnz
rcl
dec
jg
lds
stos
js
rcrb
aam
cmp
inc
mov
jb
pop
mov
mov
dec
popa
imul
jb
rcl
dec
cli
repnz
mov
imul
cmp
and
mov
jg
mov
imul
in
xor
push
or
mov
sbb
ror
mov
sbb
in
lds
mov
gs
testl
sarb
popa
adc
nop
pop
ss
mov
xchg
outsl
push
outsb
push
xchg
cmpsl
movsb
jp
iret
and
sbb
leave
cmc
out
jae
shll
enter
mov
pop
mov
mov
mov
fldenv
rcrb
arpl
pop
sub
push
ret
fisttps
fsubr
test
inc
xchg
ficompl
fbld
cmp
mov
or
test
sub
pop
faddl
jns
cmpsl
and
xlat
cld
imul
out
lahf
jno
jno
aaa
mov
xor
jo
fdivrs
jae
int
sub
aaa
test
orb
in
pop
leave
jae
imul
or
outsb
jno
xor
or
inc
test
push
sub
pop
xchg
jl
inc
adc
jmp
imul
cmc
mov
adc
adc
adc
call
and
stos
mov
dec
adc
insb
inc
incl
push
or
nop
pop
inc
inc
icebp
fcmovu
adc
ds
imull
inc
sti
out
aaa
jo
sbb
and
xor
jg
xor
xor
mov
jnp
in
clc
jno
test
stos
cli
pushf
es
daa
aad
aas
xchg
pop
pop
insb
sbb
rclb
or
add
or
jnp
pusha
cltd
cmpsb
in
mov
cmpsb
mov
outsl
into
add
outsl
sbb
aaa
fs
fwait
test
mov
cmp
cmpb
push
cli
add
ljmp
dec
in
adc
lock
xchg
xchg
fwait
and
je
push
mov
mov
and
ss
pop
and
int
push
out
shrb
lcall
js
pop
filds
repnz
nop
cmp
mov
push
cmpsb
pop
fidivrl
push
lret
mov
push
daa
out
ja
inc
mov
ficompl
push
movb
lods
sahf
imul
aaa
jo
cmp
xlat
mov
in
fiaddl
lods
je
xchg
lock
push
arpl
stc
aam
dec
test
in
xchg
sbbl
mov
sub
dec
imul
mov
int
frstor
and
adc
cmp
jno
mov
hlt
inc
mov
jnp
jl
xor
lods
cwtl
dec
or
lret
repz
loop
orb
fcmovnb
call
cmpsb
jmp
lret
lret
pop
repz
outsl
stos
and
std
fbstp
out
pushf
stos
jbe
jbe
pop
cmp
jmp
adc
xlat
push
jecxz
out
fcoml
push
nop
and
ret
leave
rolb
xor
lret
push
das
fwait
add
fildll
add
jne
fildll
cmpps
dec
into
jnp
pop
ljmp
push
mov
or
repnz
fmull
cs
icebp
imul
in
push
jl
inc
imull
insl
cmp
pusha
pop
xor
cmpsl
push
cmp
stos
xchg
mov
pop
fdivs
gs
xchg
mov
fdivrl
mov
ljmp
xor
mov
sbbl
inc
int
stc
mov
push
or
nop
das
push
push
imul
pop
subb
mov
mov
dec
add
xor
adc
stc
mov
andl
pop
push
sub
dec
sub
iret
push
sbb
popa
out
xor
repnz
jle
xor
push
sahf
mov
lds
scas
cmp
mov
sub
jbe
ret
dec
xor
ret
dec
mov
icebp
cli
clc
cld
cmc
mov
xchg
add
mov
mov
cli
xchg
and
dec
or
jmp
hlt
test
mov
cmp
fisubs
lahf
adcl
ret
pop
push
imul
mov
inc
into
push
cmpsb
scas
das
jae
pop
jg
dec
push
icebp
loopne
testl
sub
xchg
stos
jge
fcoms
sarl
and
dec
insb
insl
and
jg
xlat
xchg
cmp
push
ss
or
inc
push
in
cmc
or
int
lock
pop
dec
in
or
push
js
mov
lret
sub
jmp
xchg
cwtl
negb
fwait
ds
aas
insb
push
roll
inc
sbb
sub
pop
adc
mull
pusha
jo
mov
repz
sbb
popf
inc
repz
movsl
arpl
sbbb
add
int3
in
icebp
xchg
and
push
lret
dec
cs
cmc
push
jle
inc
das
loope
mov
pushf
fnstsw
jbe
int
inc
inc
pop
jp
daa
pop
aas
subb
iret
fdivl
push
cmpsl
jmp
sub
movsl
pushl
jecxz
in
push
inc
sub
imul
cmc
dec
aad
cli
xor
mov
out
stos
int3
imul
outsl
fisttpl
addl
cmpsl
jo
mov
cmpsl
push
addr16
ret
fiadds
scas
test
loop
sbb
mov
pushf
pop
aaa
and
fmull
jge
mov
mov
dec
test
arpl
sbb
adc
fsubl
fbld
jp
push
push
mov
jmp
cmpsb
xchg
loope
cmp
push
clc
pop
adc
lcall
add
mov
adc
jo
hlt
xorb
adc
rcll
jl
push
dec
shrb
mov
adc
inc
test
or
inc
pop
test
stos
mov
gs
cmpsl
pusha
xor
dec
xchg
fwait
aaa
imul
and
pushf
mov
xor
icebp
nop
gs
inc
jne
xchg
lahf
idivb
fwait
insb
cli
in
jbe
ljmp
popa
cli
jle
pop
xchg
inc
cmc
inc
mov
aas
imul
scas
inc
add
xor
rolb
cmp
adc
xchg
jge
test
out
xchg
push
ds
sahf
cmp
sub
or
xor
rorl
cmp
add
xchg
jo
jle
pop
adc
outsl
cmp
fistps
push
cltd
mov
xor
cmp
jle
loop
cli
inc
add
outsb
loop
add
and
cltd
sbb
les
call
insl
add
mov
adc
std
push
pop
adc
roll
xor
idiv
in
dec
das
sub
push
sub
pop
push
xchg
stos
addb
adc
push
cmp
inc
ja
aam
shrl
or
sub
xchg
fldl
loopne
cmp
xor
lcall
dec
pop
mov
sbb
dec
cmc
xchg
cld
out
jno
scas
addr16
dec
rcr
xchg
adc
sub
mov
mov
jb
mov
and
xchg
loop
cmp
push
or
das
or
jle
mov
mov
inc
cmp
jnp
daa
iret
mov
cld
pop
xchg
ljmp
jbe
jb
sub
fadds
int
mov
into
cs
arpl
add
mov
mov
flds
movb
in
adc
xchg
xor
xor
mov
rorl
rolb
in
lret
push
inc
inc
cli
loop
jnp
hlt
test
ret
cmp
popf
nop
dec
fistl
sbb
fnstenv
syscall
cs
mov
test
and
out
ss
lock
sub
add
adc
sti
adc
mov
js
mov
pushw
pop
loop
xchg
lods
jle
insl
insl
decb
in
mov
mov
aam
out
push
adc
sbb
dec
movsb
mov
jb
push
mov
rcrl
dec
jecxz
addr16
jmp
inc
dec
mov
lret
jle
scas
cli
mov
rclb
shrb
pushf
dec
add
push
sub
mov
idivb
mov
ret
sar
mov
dec
mov
cld
popf
inc
push
pop
dec
cmpl
test
cmp
loop
aam
popw
cmpsl
sbb
mov
scas
cmp
mov
jp
add
and
push
ret
jg
dec
sub
lcall
les
pop
mov
fsubl
jg
sbb
sub
xchg
ja
mov
mov
leave
fistl
push
push
out
jmp
dec
push
xchg
out
sbb
test
mov
call
ljmp
push
mov
arpl
dec
adc
in
icebp
dec
mov
push
add
pop
fidivl
dec
lds
popa
dec
mov
add
fs
jnp
mov
mov
pusha
sub
xchg
dec
imulb
xchg
dec
adc
mov
mov
daa
mov
addr16
fwait
imul
adc
imulb
les
inc
test
rcrb
subb
mov
cmp
pop
popf
mov
out
daa
out
outsl
sub
mov
dec
das
in
fstpt
movsl
icebp
jne
pop
lret
dec
fwait
or
ljmp
and
or
adc
mov
in
movsb
es
rcll
xchg
mov
or
add
ss
mov
in
inc
lcall
mov
cwtl
xchg
sub
in
mov
ss
add
dec
xchg
push
leave
mov
adc
popa
xchg
icebp
out
enter
jnp
dec
or
fldl
arpl
stos
jmp
cli
inc
add
scas
sti
inc
mov
test
sub
test
dec
imul
inc
clc
cmp
pop
cli
xchg
jecxz
je
lret
cmp
jmp
sbb
mov
or
in
in
fptan
cmovnp
mov
pop
stc
sub
jae
xorb
test
enter
inc
mov
imul
shlb
dec
jo
jecxz
jg
mov
loop
adc
sub
xchg
jmp
je
lret
cmp
sub
jmp
daa
fst
dec
mov
xor
xchg
aad
andb
inc
inc
or
outsl
mov
inc
and
cmp
xchg
mov
les
out
xor
jne
inc
mov
insl
in
pop
push
inc
out
push
xor
mov
push
xor
test
outsl
fstpt
aam
xchg
mov
jmp
push
mov
xlat
push
mov
adc
sbb
mov
push
repz
aam
rol
shlb
mov
insb
mov
pop
aad
decb
and
xchg
movsl
jmp
sahf
test
fsts
mov
or
into
and
fisubrs
mov
pop
sbb
sahf
cwtl
mov
jb
emms
xor
popa
outsb
mov
js
fwait
roll
lea
sub
sbb
aas
js
dec
jp
fidivl
mov
push
push
dec
mov
dec
mov
movsb
jae
xor
nop
out
push
outsb
nop
test
jo
adc
imul
rcll
lock
lods
scas
pop
aaa
inc
mov
push
xchg
adc
pop
out
mov
xchg
out
shrb
cmc
in
and
xchg
lods
movb
and
xor
xchg
sub
xchg
lds
fucomp
pop
cld
mov
stc
sub
mov
adc
ss
mov
dec
push
rorl
imul
jo
in
jmp
add
sbb
pop
adc
or
xor
fistpll
xor
add
bound
and
mov
pusha
push
xor
adc
add
ret
notb
mov
jns
mov
lret
mov
call
fistpll
add
fiaddl
fidivl
enter
cmp
enter
dec
mov
cmp
push
jmp
pop
in
lds
xor
stos
aam
push
push
pop
pushf
test
lret
and
sbb
add
xchg
stc
dec
add
pop
mov
ljmp
and
fmulp
inc
cmp
idivl
jl
and
int
pop
out
mov
dec
add
mov
mov
and
sub
xor
les
sbb
add
mov
jno
cli
sub
roll
mov
sbb
clc
xor
mov
jnp
sahf
in
sbb
mov
in
jg
mov
jp
and
jne
mov
push
dec
lds
fcom
ss
ljmp
pop
mull
in
stc
jmp
lds
add
pop
cmp
jo
insb
inc
ja
sbb
dec
lcall
repnz
data16
push
push
adc
sub
mov
dec
xchg
mov
es
clc
cld
push
or
jmp
mov
aad
mov
in
pusha
leave
sqrtps
test
jo
ja
adc
xchg
xor
cs
mov
fs
pop
mov
xchg
ja
jns
cmc
push
shll
aam
cltd
xchg
and
les
xor
sub
mov
jl
sbb
mov
js
sar
psrlq
loop
aad
jmp
pop
xchg
dec
aam
cmp
out
adc
xchg
sub
mov
mov
pop
test
test
mov
sbb
pop
and
mov
outsb
push
and
iret
add
push
cvtpi2ps
fadds
push
mov
cmp
ficompl
inc
xchg
sub
cwtl
push
add
sti
jae
pop
mov
jmp
mov
mov
jmp
enter
repnz
mov
addl
dec
dec
jne
adc
repnz
dec
push
sbb
leave
dec
loopne
sub
sti
lret
push
jo
mov
inc
dec
faddl
pusha
jno
aaa
pop
lods
loop
pushf
std
loope
push
pop
and
cld
sbb
adc
negb
mov
inc
rolb
add
test
push
jno
aam
lds
jbe
dec
xor
repnz
daa
jp
or
dec
or
jbe
les
mov
popa
jp
imul
ret
pop
xchg
mov
bnd
inc
stos
js
mov
mov
jbe
test
inc
adc
int
dec
outsb
mov
push
lock
adc
fildll
xor
inc
jo
ret
stos
adc
mov
lea
mov
int
adc
stc
insb
cs
mov
das
cmpsl
inc
push
xchg
push
stc
jae
push
cmp
or
into
scas
pop
pop
pop
pop
push
xor
cmp
es
xchg
jmp
mov
pop
xorb
mov
xchg
test
repz
jmp
push
pushf
ficomps
jne
popl
adc
fmuls
jnp
ret
movsl
sbb
shlb
cmp
adc
dec
and
sbb
bound
adc
flds
adc
scas
orb
add
mov
lret
stos
jge
in
pop
ret
stos
ljmp
bound
dec
or
xor
pop
dec
stos
insb
dec
dec
aad
popa
aad
cs
in
jg
xchg
call
pop
cmc
add
test
and
push
dec
inc
add
roll
int3
icebp
out
jle
mov
xor
dec
push
rcr
cmpsl
mov
outsl
and
xchg
cmpsl
pop
rorb
daa
lret
jmp
pop
or
fisubl
mov
ljmp
xchg
xor
xor
outsl
flds
jns
subl
adc
sub
cmp
mov
in
adc
jg
aad
dec
inc
addb
sub
xor
icebp
movsb
shl
movsl
call
aad
adc
sbb
loopne
pop
push
das
xchg
lcall
adc
rorl
inc
and
pusha
inc
pop
fcoms
mov
or
mov
rcll
xchg
ret
mov
loopne
pop
ljmp
mov
jns
jbe
pushw
sub
lock
inc
aaa
mov
push
and
mov
mov
mov
and
lret
into
xor
xchg
sub
dec
and
jmp
cld
adc
inc
or
pop
cld
push
mov
jbe
adc
divl
orl
jae
or
add
orl
pop
sub
xor
jno
add
hlt
or
mov
mov
xchg
mov
or
or
sbb
into
loopne
push
nop
repnz
cmc
rorl
dec
add
mov
repnz
pop
mov
cmc
shlb
fsubp
cmp
icebp
imul
test
xchg
lahf
add
add
jo
addb
push
mov
jp
cltd
and
lret
cltd
rclb
push
out
mov
lahf
dec
leave
dec
ljmp
add
shrb
pop
xchg
push
lret
shlb
inc
aad
push
cmp
inc
sbbb
adc
mov
inc
jg
jno
rcr
push
stos
mov
mov
scas
cmc
shrb
push
sbb
cmpsb
in
dec
jle
pop
scas
dec
xor
jle
xor
sarb
mov
in
adc
pop
popf
jae
and
pop
arpl
dec
jae
inc
sub
inc
pop
push
and
in
mov
mov
mov
pop
aad
cmc
xchg
imul
xor
pop
jno
jp
jb
cmp
in
sbb
lods
pop
out
into
sbbb
test
inc
or
ret
scas
xchg
push
dec
sbb
push
mov
les
out
pop
push
jg
cmp
fadds
xor
push
es
xchg
popf
addr16
jle
jecxz
adc
xchg
mov
push
out
dec
xchg
sbb
arpl
mov
pop
in
aaa
das
sub
aaa
or
mov
mov
or
movsb
sarl
xor
je
ljmp
or
stos
ret
mov
daa
mov
arpl
in
xchg
pop
jge
adcl
cltd
and
lock
xor
add
sub
icebp
adc
loopne
pushf
testl
inc
xor
push
pusha
and
stos
jge
imulb
xchg
pushaw
aaa
repz
clc
pop
popf
int
inc
jno
ror
mov
mov
add
rclb
ret
xor
push
int3
test
cld
aaa
or
xchg
xor
dec
pushf
jl
rcl
ret
adc
repz
out
inc
push
lods
je
mov
imul
mov
es
cli
call
loop
sahf
test
mov
sbb
adc
pop
push
mov
or
adc
jl
mov
jmp
add
pop
ret
pop
es
out
shrl
out
pop
pusha
adc
popf
mov
jnp
fstpt
pop
loop
fisubs
gs
pop
xlat
push
rcrb
xor
cmpsb
mov
cmp
cwtl
repnz
pop
xchg
dec
stos
xchg
xchg
inc
rclb
jecxz
stos
mov
test
jp
adc
test
loopne
xor
fninit
cmpsb
pop
into
and
mov
jle
sub
fisubrs
icebp
fcomip
mov
inc
in
bound
es
outsb
push
loope
xor
into
mov
mov
xchg
hlt
xor
aad
cltd
idivl
inc
jne
mov
jae
mov
xchg
lret
or
fstl
or
cmp
stc
test
repz
inc
aas
outsl
sarb
adc
or
or
in
imul
xchg
sbb
das
movsl
xchg
push
loopne
inc
pop
jne
sub
int3
fcomps
jge
adc
mov
pop
out
icebp
and
arpl
lcall
xchg
stos
std
les
mov
xchg
popf
and
fs
xchg
movsl
outsb
and
push
lcall
cmp
xchg
out
jb
jbe
out
mov
fisubrl
int3
lcall
lcall
and
in
shlb
lods
call
sbb
jbe
jg
in
and
add
jmp
pop
aam
shl
movsl
sub
pusha
inc
data16
push
sti
fldl2t
cmp
lret
out
jns
pop
cmp
add
add
lea
xchg
push
add
push
das
sar
lcall
mov
mov
mov
mov
jno
or
andl
jne
hlt
cmp
out
sub
stos
das
int3
call
lret
jne
pushf
and
arpl
cld
out
into
mov
cmp
inc
xor
dec
mov
jo
adc
or
sbb
pop
cltd
fldz
ljmp
mov
push
mov
out
mov
mov
jg
jmp
cmc
in
outsb
add
fists
sbb
insb
adc
stos
ss
scas
jmp
shll
std
mov
rcrb
negl
dec
dec
xor
sub
mov
fld
shl
mov
lods
mov
outsb
xor
mov
jbe
repnz
jge
cmc
aam
pop
jg
adc
pushf
mov
dec
ljmp
inc
mov
ficomps
mov
clc
jb
cmp
mov
inc
jns
xor
aad
ret
or
dec
xchg
lcall
loopne
xchg
jg
mov
in
dec
pop
mov
lahf
push
fbstp
fcoms
jmp
mov
and
negb
dec
xchg
fwait
sbb
nop
pop
xchg
ja
mov
or
xchg
or
pop
mov
adc
adc
add
mov
scas
psubq
mov
mov
leave
add
sbb
into
outsb
rcl
sub
add
xchg
jmp
movsb
sbb
push
lock
aaa
lea
pop
sahf
call
out
xlat
xor
hlt
sti
pop
xor
push
mov
mov
jno
sub
xor
lret
subb
cmp
call
xlat
fcmovnb
mov
pop
rcrl
pop
movb
or
mov
inc
idiv
cmp
clc
mov
insl
xchg
and
cmc
jae
arpl
mov
and
push
and
ret
xchg
jl
iret
mov
lret
mov
xlat
sub
cmp
sub
sub
add
sub
sbb
shlb
cli
pop
movsl
adc
daa
imul
pusha
fisubs
push
push
pop
adc
rol
jecxz,pt
push
loopne
insb
mov
rcrl
dec
shl
out
push
cmp
fcomip
fs
xorb
es
dec
mov
cs
sbb
pop
subl
popa
pop
add
dec
test
lea
ja
mov
inc
in
mov
pop
xor
mov
pushf
inc
cs
repz
mov
mov
sbb
pop
sbb
mov
aaa
adc
ljmp
faddp
mov
inc
out
shlb
xchg
int3
fdivl
movsl
daa
and
aam
pop
aaa
adc
mov
mov
out
xchg
out
daa
xor
daa
xor
cmp
push
cmp
xchg
ret
fimull
push
mov
pop
mov
or
and
cmp
push
add
dec
lahf
or
gs
xor
xchg
sbb
push
rcll
and
into
cmp
jge
push
jmp
and
out
mov
pop
xchg
or
cmp
mov
out
adc
enter
insl
test
stc
orb
aad
decb
nop
insl
push
mov
xchg
mov
mov
lods
cmc
leave
xor
fs
add
xchg
ss
sub
je
fxch
ret
cmc
cmp
ss
mov
add
icebp
jp
sub
movsb
cli
mov
loope
sub
push
dec
sub
cld
xchg
aam
fwait
jne
inc
or
cli
add
aas
movsl
sub
fwait
pop
movsb
movsb
pop
cmp
push
clc
push
cmp
jne
mov
clc
add
adc
mov
into
imul
mov
push
int
stos
cs
pushf
push
mov
in
jbe
jle
lcall
jbe
dec
sti
mov
or
mov
mov
ja
stc
mov
stc
pop
loope
jle
lock
cmp
mov
pusha
roll
add
adc
push
mov
mov
push
and
pop
push
hlt
orl
outsb
dec
vfrczps
fwait
lock
xchg
hlt
add
mov
mov
mov
cmp
cmc
je
jo
add
mov
jg
mov
adc
std
nop
imul
ja
inc
stos
fwait
jns
or
stc
bound
mov
mov
in
jo
lock
subb
cmp
lds
cmp
into
push
mov
mov
push
out
sub
popf
pop
inc
inc
das
fwait
insb
call
lods
sbb
sahf
dec
dec
lods
loop
clc
cmp
shl
mov
fildl
pop
and
pop
imul
fcoms
lock
out
push
shrb
imul
xchg
frstor
xor
xchg
out
sti
imul
into
jle
push
sub
pop
push
lock
jp
loop
dec
sbb
or
int
jbe
aam
jge
aam
lret
mov
pop
push
dec
jmp
push
xorl
in
jo
push
aad
cmc
push
lcall
adc
sbb
shl
pop
mov
sub
roll
and
pop
cli
and
js
cmp
pop
loopne
cmp
and
mov
scas
mov
add
xor
clc
cld
lods
rcr
push
sbb
fisubl
inc
or
and
hlt
add
push
mov
out
cltd
mov
in
or
mov
mov
leave
aaa
xchg
xor
rol
push
mov
test
jnp
es
sub
xchg
or
pusha
jp
or
popa
outsl
xchg
pop
int
in
movsl
inc
pop
inc
int
fstl
xchg
dec
stos
pop
in
sbb
xchg
insl
jb
ffree
or
gs
xchg
mov
and
and
testl
loop
add
insb
sti
in
out
pop
arpl
jg
mov
addr16
fmuls
stos
lcall
testl
std
clc
push
mov
dec
daa
mov
adc
mov
mov
outsl
jecxz
adc
clc
int
pop
cld
mov
cmp
xor
adc
jge
test
sub
insb
fmull
xor
repz
ljmp
loope
mov
dec
aam
mov
jnp
dec
add
clc
mov
js
jg
mov
pop
sub
inc
shrl
sahf
fwait
lea
mov
xor
mull
xchg
jo
pop
xor
fmuls
xchg
outsb
cli
cmp
push
push
stos
nop
inc
aas
cld
into
shll
faddl
arpl
mov
jns
lods
jne
call
mov
mov
pop
xor
jmp
xchg
and
jae
leave
jg
mov
cmp
xchg
cmpsl
push
icebp
shrl
shll
icebp
movsb
sti
sbb
movsl
hlt
std
fwait
je
inc
mov
mov
lahf
aas
mov
mov
arpl
jb
loope
mov
int3
pop
push
push
mov
push
push
in
or
jp
test
push
rcll
pop
jle
mov
push
loope
out
xchg
jne
int3
dec
xor
sub
push
jp
pop
nop
test
popa
clc
ja
pop
xchg
in
testb
ja
pushf
mov
mov
ja
popa
imul
inc
addb
push
or
lahf
jle
fistps
andl
or
mov
mov
dec
pop
and
xchg
stos
jnp
push
dec
test
arpl
adc
sti
mov
xchg
ds
fdivs
into
call
dec
stos
inc
dec
fdivrs
mov
xchg
pop
test
mov
xchg
mov
in
sbb
lock
out
mov
cmc
in
pop
xchg
fldl
cmp
call
loopne
sub
pop
shlb
std
cld
push
iret
aas
mov
psubusb
cmp
idivb
iretw
xlat
cltd
icebp
lock
add
loopne
dec
mov
stos
call
sub
jns
les
sub
mov
pop
loope
subl
mov
jge
adc
decl
pop
jb
fwait
xchg
stc
mov
shll
scas
out
stc
pop
insl
push
iret
jne
sbb
mov
xor
mov
stos
xlat
ds
adc
negb
ss
pop
mull
xchg
sub
mov
pop
inc
cmp
mov
sub
dec
lods
sub
loope
xor
shr
je
mov
and
stc
jl
stc
cmpsb
sub
subl
sbb
fiadds
inc
lods
xchg
pushf
sbb
jmp
pop
push
dec
popw
sub
std
rcll
and
inc
mov
xchg
imul
mov
jno
js
int3
jge
add
bnd
lret
pop
repnz
aam
clc
fistps
lret
ss
or
jae
or
or
fxch
stos
push
dec
popa
arpl
adc
xor
or
mov
jle
sbb
lock
add
mov
scas
xor
cmp
leave
negb
outsb
jmp
outsb
mov
mov
lods
ror
sbb
pop
xorl
and
or
or
xchg
cltd
es
mov
sahf
xchg
aaa
pusha
rorl
out
inc
jecxz
and
jb
ja
repnz
icebp
cmp
dec
shr
mov
and
stc
aas
jae
mov
xchg
adc
in
xlat
insb
lret
push
in
sbb
pop
loop
cld
mov
sbb
sti
mov
je
pop
jo
pop
cmc
push
fistps
jnp
test
sbb
mov
fimuls
les
fcmovnbe
xchg
lds
andl
jae
sbbb
imul
jo
mov
aas
shl
add
fisubl
push
data16
dec
push
inc
mov
xlat
jp
fs
hlt
push
iret
adc
lret
and
sub
jle
inc
mov
cmpsl
movsb
push
jecxz
mov
mov
je
rorl
test
test
cli
jge
fsts
mov
sub
fwait
and
add
adc
add
xorb
xchg
frstor
iret
jl
lods
pop
adc
sub
pop
ljmp
data16
sti
imul
push
out
lcall
inc
xchg
out
cli
sbb
jo
repnz
inc
push
mov
mov
mov
les
pop
mov
fsub
lcall
xor
push
cmpsb
jo
shll
pop
fwait
xor
pop
cmp
mov
jnp
inc
daa
icebp
push
repz
dec
push
arpl
cmp
bound
inc
jno
mov
inc
test
mov
jecxz
add
cltd
adc
popa
push
jb
mov
filds
xor
cmp
rorb
add
imul
adc
sar
adc
push
adcl
test
sub
xchg
sbb
xor
inc
inc
jae
pop
lods
inc
sub
push
dec
gs
push
out
push
xlat
shlb
cmp
iret
pop
call
mov
insl
fnop
mov
jne
inc
out
stos
jp
pop
push
int
sbb
iret
iret
fistl
mov
and
insb
add
jbe
xor
idivb
mov
sbb
add
orl
mov
jae
mov
jo
mov
jbe
or
out
pushf
lcall
and
inc
cld
popf
pop
cmc
dec
lock
adc
xor
sub
in
or
push
pushf
fsubs
adc
adc
lock
fildll
js
push
jl
xor
loop
xor
cmp
imul
jge
and
fs
in
push
shrl
mov
and
pop
push
popa
mov
mov
rcrl
or
rclb
and
dec
jns
mov
push
int
out
pop
call
rorl
and
sti
pusha
shll
imul
sub
push
and
addb
pop
mov
xchg
js
jl
sbb
repz
or
outsl
adc
cmp
popa
jmp
push
test
xchg
mov
jbe
dec
inc
lock
xchg
sbb
xlat
test
xor
sarb
cmpsl
test
shll
outsl
out
flds
push
insb
lock
pop
push
sbb
mov
scas
daa
int
push
pop
dec
cwtl
addb
push
mov
repnz
in
cwtl
stos
test
mov
cli
xor
lahf
outsb
in
popa
mov
popf
add
mov
mov
daa
xlat
ja
decl
stos
mov
loopne
pop
aam
insl
push
mov
sub
pop
rcrb
sbb
nop
inc
or
adc
xor
cltd
loope
pminub
popa
or
sub
imul
inc
pop
xchg
in
cmp
and
loop
mov
xor
aad
inc
mov
iret
dec
aad
repnz
add
adc
fstpl
gs
sbb
mov
xor
ficomps
jns
lret
push
popf
or
xchg
xor
rolb
xchg
xchg
clc
out
mov
or
insl
das
frstor
xchg
mov
ret
mov
fdivs
push
stos
jl
int3
sbb
push
mov
add
xchg
mov
nop
mov
xchg
cmp
or
mov
dec
dec
scas
sahf
bound
jno
sub
mov
jmp
pop
nop
dec
lret
fisttpl
inc
add
or
and
dec
and
mov
cmpsb
jl
pushf
mov
mov
xor
push
push
push
push
xchg
les
sti
in
cmp
mov
lret
ret
xchg
imul
pop
add
mov
ja
fistpll
cmp
cmpsb
bound
cmpsl
mov
aam
or
adc
aam
movsl
dec
xor
js
adc
cmp
cwtl
push
adc
push
rcl
add
into
xchg
daa
and
mov
lret
push
dec
inc
pop
lds
add
sub
test
imul
stos
dec
push
jns
xchg
pusha
adc
imul
mov
out
out
or
push
fs
cld
inc
scas
jno
pusha
cmp
out
cmpsb
inc
sub
cmp
imul
dec
int3
and
nop
insl
push
leave
sub
loope
pop
cmp
mov
mov
sbb
les
jecxz
and
xchg
test
or
fs
lods
push
shrb
ja
testl
std
xor
cmp
and
and
adc
pop
inc
mov
cmp
xlat
in
insb
imul
scas
inc
lods
cwtl
in
into
out
aad
pop
pop
jle
jmp
stc
jp
es
ret
scas
aad
push
dec
out
xchg
mov
and
mov
in
add
stos
mov
rclb
ja
dec
jmp
lahf
jae
clc
scas
xchg
adc
decl
mov
andb
rol
jle
in
cli
in
dec
xor
cmp
stos
shlb
xor
inc
movsb
mov
push
jbe
es
rcll
xor
repz
int
push
andl
push
jae
mov
addr16
mov
sahf
push
pop
push
jmp
adc
push
scas
and
and
sbb
adcl
add
out
xor
sub
jecxz,pt
mov
push
ljmp
insl
sbb
xchg
ret
test
pop
push
dec
inc
push
push
sahf
dec
adc
xchg
movsb
jg
cli
inc
xchg
testl
mov
mov
push
push
insl
fnsave
pop
jge
lahf
push
and
add
imull
sbb
ret
jmp
sub
inc
sbb
xchg
insb
cwtl
stos
jl
dec
and
cmp
pop
xlat
fmuls
lcall
enter
in
dec
in
sub
dec
inc
mov
xchg
jno
adc
sbb
mov
mov
es
fnstcw
jb
and
adc
mov
repz
mov
mov
xchg
into
mov
leave
mov
and
ret
outsb
adc
js
test
sub
jp
lahf
sub
mov
ja
adc
add
aas
xchg
pop
and
pusha
out
pop
mov
enter
jno
dec
aas
push
lret
out
inc
inc
xchg
dec
push
clc
mov
mov
mov
jp
hlt
mov
ret
lcall
aad
fcoml
sbb
mov
paddw
and
push
mov
push
jp
mov
outsl
mov
es
movsb
das
call
mov
jb
movsl
inc
lcall
pop
add
jbe
inc
popf
rolb
or
push
movsl
mov
sbb
arpl
xor
jae
hlt
sbb
sbb
xchg
cmp
or
pop
loopne
repnz
movsl
pop
adc
int
adc
into
mov
mov
push
cmp
aad
mov
shll
aas
dec
pusha
outsl
adc
sbb
push
setno
stc
xor
xchg
mov
push
ret
pop
and
dec
cwtl
ret
int
jecxz
mulb
adc
stos
push
arpl
pop
subb
add
adc
xchg
adc
cs
pop
cmp
pop
mov
and
push
xchg
test
dec
add
imul
nop
jge
xchg
xor
push
icebp
mov
leave
cs
or
js
out
scas
sarb
fcmovnbe
cmp
push
rorl
mov
inc
fdivl
mov
movsb
lahf
xlat
pop
cmpsb
or
je
outsb
leave
pop
cwtl
xchg
clc
jmp
push
jo
mov
add
daa
jne
out
popf
jg
sbb
test
cs
fsubrl
insl
hlt
xchg
leave
cld
out
lret
xor
sbb
int
test
pop
stos
jo
sbb
lea
mov
insl
pop
sub
push
in
sbb
in
pop
dec
pop
mov
scas
pop
and
stos
jmp
rcll
les
dec
ret
and
gs
or
jne
pop
cmc
fwait
push
or
popf
lcall
inc
repnz
push
xor
mov
pop
jnp
and
pop
out
inc
xchg
lods
jle
cmp
mov
xchg
adc
sahf
addr16
fwait
adc
sar
mov
adcl
adc
push
mov
inc
inc
pop
dec
sub
xor
mov
or
jp
mov
inc
fidivl
lds
mov
cmpsl
out
shll
xacquire
ljmp
sub
cmpsb
jns
lock
cmp
cmpsb
icebp
inc
ret
xor
mov
add
xchg
cmpsl
dec
xchg
dec
jae
push
push
cs
mov
pop
inc
vmovdqa
mov
data16
insb
inc
sbb
sbb
jb
inc
or
sub
shlb
adc
sbb
add
pop
adc
scas
xor
sbb
xchg
jb
jo
sbb
stos
in
or
adc
cmp
enter
jmp
mov
add
cli
jo
mov
mov
pop
test
call
cmpsb
mov
xor
stos
orb
cmc
sub
lret
cmp
or
xor
and
lods
push
adc
xor
out
xlat
or
in
mov
inc
subl
mov
stc
out
push
and
push
test
js
push
call
jno
ss
div
bndstx
xor
cld
inc
popa
into
jl
dec
test
iret
loope
loop
arpl
jmp
jecxz
jp
js
leave
out
mov
xchg
mov
shrl
mov
cmp
ret
jl
cli
orb
sbb
ds
xchg
push
testb
add
cld
or
or
filds
fcompl
pop
addr16
sub
sarb
jnp
sbb
ja
into
and
call
sbb
testl
stos
cli
sbb
cmp
or
inc
shll
mov
jne
arpl
xchg
loop
test
jp
and
inc
addr16
adc
push
push
add
xchg
fistl
xchg
fisubs
jns
fstpl
popf
mov
mov
or
dec
jmp
icebp
cld
adc
outsb
pushf
mov
clc
cltd
popa
pop
ja
shl
or
mov
std
outsb
jo
xchg
int3
out
jno
add
cmp
in
iret
arpl
push
sbb
xchg
pop
cltd
xor
add
jg
les
mov
leave
test
mov
jne
sbb
xchg
test
mov
push
ja
inc
test
mov
icebp
jp
fldt
inc
mul
adc
mov
xchg
fcoms
jns
push
add
mov
sub
int3
and
ror
enter
popa
iret
ljmp
mov
out
fwait
idivl
or
mov
scas
push
or
pop
test
mov
pushl
hlt
sbb
fwait
sbb
add
and
into
pusha
push
mov
call
popa
xchg
pop
inc
sub
int
out
sbb
repnz
inc
lcall
sbb
lds
enter
cli
sbbl
shlb
fimull
cmpsb
out
fidivs
call
js
pop
sub
sbb
mov
cmp
cs
popf
mov
mov
xchg
mov
and
adc
repz
imul
out
sbb
mov
int3
pop
jbe
push
ret
adc
test
sbb
lods
fcompl
loopne
push
loope
dec
push
xor
ljmp
icebp
xchg
insl
icebp
inc
loop
fstps
inc
add
and
fucomi
pusha
sub
mov
lds
sbb
add
xchg
clc
xchg
push
daa
jg
push
dec
lea
int
into
loopne
adc
cltd
int
scas
mov
fwait
sbb
xor
sbb
and
enter
push
mov
push
sub
movb
lds
fidivl
rorb
sbb
mov
or
add
cmp
push
ret
fidivrs
inc
lds
adc
or
loopne
mov
lods
clc
jp
andl
mov
lahf
push
cli
loope
jg
int3
loope
xchg
dec
mov
stos
fcmovnu
dec
jecxz
dec
in
cmpsl
pushf
xor
jge
shlb
lea
cmp
cmp
gs
stc
push
rol
mov
push
aad
sbb
jno
mov
sbb
and
adcb
mov
bound
sub
ret
cmpsb
jo
dec
add
mov
xor
dec
xlat
push
mov
rcrl
ret
gs
fimull
gs
out
add
cli
mov
sub
and
cmp
ljmp
adc
mov
ficomps
cmpsl
bound
mov
adc
fs
movb
mov
dec
icebp
insb
in
ljmp
jbe
push
dec
mov
stos
lods
add
add
inc
mul
cmp
popa
push
lret
push
or
jl
xchg
sahf
push
xor
and
push
mov
mull
cmp
push
sub
xor
addr16
push
jae
push
adc
sbb
ss
jo
rorl
outsb
adc
lock
jp
pop
pop
out
and
inc
aad
test
sbb
sahf
xchg
xor
xlat
push
insb
test
pop
fdivl
shll
mov
xchg
pop
jle
mov
bound
rcrl
or
sahf
addb
sub
cmp
scas
std
mov
daa
cmp
add
andb
in
outsl
lcall
dec
mov
push
pop
xor
dec
jge
cmpsb
push
jge
xor
add
pop
sub
test
bound
mov
sar
out
xchg
push
popf
pop
hlt
in
scas
outsl
push
aaa
sub
push
test
cmpsb
sub
mov
push
cmc
dec
ret
mov
outsb
jle
ret
dec
xchg
inc
cmp
hlt
push
xchg
or
lret
jp
pushf
pop
mov
inc
dec
not
mov
inc
mov
ds
rorb
push
aas
inc
pop
xchg
adc
iret
sbb
inc
cltd
mov
shrb
inc
ret
xor
movsb
les
stos
sbb
jae
mov
lahf
scas
xchg
in
mov
push
aam
ds
cmpsl
adc
adc
add
jb
clc
pushf
push
mov
dec
adcb
stc
pop
or
aad
aaa
mov
sbb
pop
pop
loope
fs
outsl
sbb
cli
in
out
test
pop
mov
ljmp
xchg
daa
xchg
and
clc
jbe
orl
dec
sbb
lcall
movsb
xor
nop
repz
xor
push
int
lea
cmpsl
mov
rorb
pop
or
adc
sbb
or
rol
jle
mov
xchg
or
mov
ljmp
cmp
stc
mov
fadd
xchg
popf
lods
cmpsb
adc
cmpb
xor
inc
push
loope
mov
fcompl
imul
and
xor
aas
fisubrs
gs
mov
jecxz
cmp
mov
je
jne
in
xchg
aam
jae
mov
test
ret
xor
or
jb
ds
insl
ja
hlt
inc
imul
sub
push
mov
insb
mov
sub
or
pusha
xchg
pop
push
xchg
inc
shlb
lcall
movsb
dec
out
xor
iret
xchg
push
mov
dec
fsubl
sbb
enter
pusha
pop
pop
nop
pop
outsb
les
lock
or
sar
in
mov
cmpsb
stos
negb
cli
push
dec
add
mov
call
lods
rcll
fsubl
push
pop
xor
sub
and
popf
pop
test
jle
sub
mov
pop
sub
imul
sub
dec
mov
or
sbb
jo
mov
mov
inc
je
jno
loope
mov
lahf
shll
ljmp
adc
mov
adc
jae
sbb
loopne
and
xor
cmp
in
fmul
into
popf
test
test
or
lock
push
in
sub
pop
jmp
cs
cmpsl
sbb
jecxz
push
cli
paddb
popf
pop
cmc
sub
dec
decl
cli
cs
mov
lock
fmulp
leave
addr16
xchg
push
xor
out
or
fcmovbe
xorl
mov
dec
adc
xor
pusha
loopne
loop
outsb
sbb
popf
popf
call
sbbl
rcl
pop
or
movsl
xchg
pop
insb
adc
xchg
fsubrl
mov
pop
hlt
push
xchg
repz
mov
add
scas
test
jl
pop
pop
mov
mov
shrb
or
fstpt
pop
stos
lds
test
xchg
popa
pop
mov
sub
shll
jae
jle
jae
rolb
notl
movsb
outsb
insl
cmpsb
mov
ret
out
fisubrs
xchg
add
add
inc
lret
aam
fdivs
adc
sub
cmp
mov
pop
cmp
repz
adc
std
sub
hlt
mov
xor
and
mov
or
adc
jg
xchg
loope
push
fldt
pop
pop
mov
out
les
push
jmp
int
pop
mov
test
lret
xor
lahf
fwait
and
sbb
or
ja
jo
jmp
test
cwtl
jecxz
or
ja
add
mov
push
cwtl
stc
push
pushf
sar
add
jo
mov
xor
sbb
xor
in
jg
addl
cmpl
mov
dec
test
loop
movsb
mov
das
ret
shlb
jnp
test
cltd
test
sahf
imul
sub
pop
cmp
out
ljmp
ljmp
shl
add
ja
inc
jmp
lods
pop
push
call
add
fwait
test
mov
sar
jb
add
cmpsb
push
cld
jae
fwait
mov
adc
xor
nop
stos
aaa
sbb
cld
jmp
inc
mov
jb
jo
sub
and
dec
and
jo
shlb
fsubl
or
or
and
lret
mov
adc
pop
pop
fdivrs
lahf
fisttpll
cmp
stos
mov
fsubl
fisubs
subl
subl
test
push
push
xor
jmp
int
int
push
pushf
fwait
in
mov
mov
and
repnz
dec
cld
arpl
mul
fstl
fcoms
data16
mov
test
or
pop
add
aas
xchg
mov
push
fcmovu
out
adc
pop
push
sysexit
push
jle
push
mov
dec
mov
sbb
adc
fcom
hlt
sub
test
jmp
push
and
mov
or
lret
mov
mov
xchg
cmpsl
cmpb
sti
ljmp
je
jnp
divb
jne
mov
jmp
sbb
fcmove
pop
mov
cmp
add
sbb
les
xchg
dec
cmp
cmp
repz
sbb
mov
das
out
xchg
ficomps
pop
sub
sahf
pop
xor
push
lods
pop
gs
lcall
rorb
push
jmp
sbb
nop
mov
lret
fucomp
adc
sbb
dec
jbe
in
cmc
sti
fnstsw
pop
sbb
rclb
sub
fdiv
mov
addl
mov
leave
int3
xchg
jle
xchg
je
adc
add
mov
push
out
scas
repz
xchg
and
imull
mov
jo
dec
cltd
rcrl
push
inc
data16
test
adc
jg
mov
mov
dec
mov
fisttps
mov
jb
daa
jo
aaa
scas
cmp
sub
cmpsb
or
adc
cmp
leave
mov
mov
add
xor
inc
and
mov
in
subb
insb
push
sbb
das
cmp
lahf
jne
andl
in
inc
cwtl
shrb
lds
addr16
jecxz
xor
cmp
sahf
je
mov
lcall
iret
mov
jb
push
mov
push
sub
adc
adc
pushf
cmpsb
cmp
out
dec
ja
jecxz
outsb
aam
mov
aaa
imul
fcoml
rorl
lock
cmpsl
dec
cmp
pop
dec
mov
enter
or
and
xor
adc
shlb
or
xchg
movsb
shrl
mov
es
rolb
outsb
xor
dec
cmp
icebp
or
addb
xchg
xchg
and
mov
outsl
inc
aam
and
mov
and
xor
and
cmp
loopne
into
mov
mov
add
lock
je
inc
or
outsl
add
fs
addr16
mov
push
mov
scas
fdivp
arpl
sbb
cmc
push
cs
or
jo
sbb
les
cmpl
jg
cwtl
gs
ret
cmc
sti
pop
inc
sub
test
push
fs
cs
push
out
add
mov
cmp
and
push
lahf
jmp
mov
repnz
js
xchg
scas
addb
mov
sbb
mov
push
cmpsl
sbb
mov
addr16
sbb
into
mov
lret
scas
imul
insl
jle
in
sbb
nop
or
ret
jecxz
cld
test
movsb
dec
andb
jmp
cmp
dec
cli
int
mov
or
jge
fiadds
cmp
jns
jge
faddl
xchg
add
push
js
lret
insl
fbld
jg
xor
bound
jl
shl
dec
add
mov
daa
xlat
push
mov
inc
into
mov
add
cmpsb
outsb
lret
lods
out
cli
test
je
sub
add
sbb
mov
cli
sub
lahf
jmp
or
push
cmpsl
es
pop
shll
mov
hlt
mov
xor
push
adc
dec
add
loope
pop
and
pop
xchg
pop
stos
xchg
pushf
lret
dec
dec
pop
stc
sbb
pop
insb
or
xchg
xor
lret
daa
mov
push
xor
loop
xchg
mov
push
sub
repz
out
inc
andl
into
and
cmc
mov
mov
sbb
aas
adc
mov
in
adc
addr16
inc
sahf
aam
loop
and
out
hlt
arpl
jns
jge
dec
cltd
xchg
sbb
mov
push
pop
and
insl
jbe
push
scas
std
pusha
or
push
dec
sub
cmp
pop
mov
inc
adc
cli
lahf
inc
xchg
jg
adc
jbe
scas
dec
jge
scas
sbb
movsb
cld
adc
divl
xchg
mov
mov
and
aad
add
and
test
rcrl
mov
inc
or
cmp
adc
mov
mov
jmp
arpl
xchg
pushf
rclb
push
out
sbb
jne
shl
mov
sub
js
js
scas
push
jae
xchg
sbb
js
inc
sub
push
or
adc
adc
mov
and
stos
mov
jecxz
push
add
add
and
jmp
and
jp
jae
popf
lea
inc
outsl
out
mulb
fdivrl
repnz
leave
rcl
push
pop
and
xchg
out
push
out
sbbl
mov
cmp
test
push
stos
iret
fnstsw
sti
jg
mov
adc
fildl
sub
pop
and
mov
inc
daa
push
pop
adc
jno
in
push
pop
jno
pop
sbb
lods
mov
dec
sbb
pop
mov
insb
outsb
add
adc
sub
inc
stos
and
cs
stos
xor
push
push
fnclex
outsb
aaa
mov
lds
pop
loopne
pop
xchg
stos
sti
loopne
aas
popf
push
sbb
cli
and
push
push
or
jo
sub
mov
nop
sbb
pop
inc
subl
shr
mov
repnz
or
pop
or
icebp
xchg
mov
and
cmpl
mov
pop
in
mov
mov
movsl
fwait
xor
cmp
mov
dec
popa
jne
bnd
pop
imul
mov
test
or
fs
dec
movsl
sbb
stc
lahf
or
icebp
mov
scas
mov
mov
push
lock
or
cmp
js
ret
into
add
push
cmp
add
and
xorl
insb
dec
mov
insb
and
movsb
leave
loope
mov
jecxz
fsubl
ds
jbe
jb
test
imul
in
cmp
arpl
pop
aam
xor
lods
add
mov
mov
fxch
mov
sahf
outsl
sub
out
mov
pop
dec
lea
loopne
cmp
aam
sbb
mov
addb
push
or
shr
inc
xchg
cmc
ret
sub
testl
movsb
adc
jnp
mov
add
fs
dec
fs
sbb
cwtl
js
gs
cmpsb
testb
out
das
mov
sub
cli
sub
cld
sub
call
mov
and
mov
adc
and
push
xorl
or
ret
add
pop
loopne
test
push
cmpsl
jl
dec
cmp
stc
sahf
mov
sub
push
mov
andb
add
in
push
cmpl
mov
cmpsl
mov
jg
lcall
aam
pop
ret
incl
push
mov
pop
cs
mov
rorb
daa
dec
aaa
cmc
fimuls
imul
call
outsb
inc
lahf
addr16
fwait
adc
fs
inc
lods
mov
xor
mov
push
push
push
rcl
out
mov
orl
gs
jb
pushf
repz
pop
call
dec
xlat
in
dec
jl
adc
insl
test
adc
daa
cwtl
xchg
lcall
enter
push
sbb
bound
insl
push
inc
jno
pop
neg
sar
mov
std
cld
dec
mov
dec
popl
xor
cmp
dec
rorl
scas
in
movl
push
xchg
les
test
jnp
scas
stos
pop
mov
fisttpl
addb
xchg
or
repz
xor
pop
push
out
or
sbb
aam
mov
aam
imul
cmpsb
lret
sub
cwtl
adc
test
fsubrs
mov
xchg
sbb
xchg
mov
les
mov
mov
ror
and
enter
bnd
mov
push
and
jo
cmp
sbb
sub
mov
addb
sub
adc
mov
je
xor
add
cmpb
mov
loopne
idivb
mov
cmp
push
fwait
jbe
pop
inc
pop
in
add
inc
or
xchg
les
pop
adc
jecxz
sbbl
jne
jnp
mov
jno
mov
pusha
std
fisubs
jmp
dec
fldcw
and
jge
inc
xchg
mov
stos
clc
gs
pop
mov
sbb
cmp
out
or
mov
jg
testl
cwtl
ficoml
adcl
or
rol
jecxz
sub
jnp
shl
mov
test
inc
inc
mov
xlat
jg
add
sub
dec
xor
pop
sbbl
rolb
mov
add
jnp
cmp
jne
lods
jo
or
add
roll
ja
pop
inc
or
cli
arpl
ja
imul
insb
cwtl
nop
jns
pop
or
push
xchg
jmp
jne
dec
cli
aam
add
movsb
mov
das
pop
xlat
repz
int3
lret
jmp
push
xor
nop
or
mov
jb
jbe
imul
xchg
shr
and
mov
and
aaa
pop
lods
jo
mov
hlt
pop
rcrb
outsl
sahf
sahf
push
int3
repz
dec
adc
and
out
adc
scas
out
rclb
pop
mov
inc
push
mov
out
adc
sbb
add
jecxz
xchg
bnd
push
mov
xor
std
sub
xchg
pop
xorb
mov
xchg
ja
add
pop
ja
outsb
mov
and
out
in
xor
push
cmpsb
lret
les
cld
push
inc
addb
ds
aad
ljmp
stos
pop
out
testl
and
pop
inc
push
xchg
sub
and
jno
je
sahf
sub
call
iret
jne
nop
and
rclb
negb
and
xchg
sub
jnp
pop
aas
shrl
push
inc
cmp
mov
pop
nop
andl
sub
xchg
stos
push
daa
mov
imul
mov
insb
and
pop
cmp
ret
xchg
jg
sbb
mov
sti
daa
fldcw
cmc
aam
jl
sbb
icebp
inc
inc
mov
cli
sahf
jb
and
inc
push
adc
aaa
pop
sbb
mov
pop
ljmp
pop
push
pop
rorl
test
loopne
sub
or
mov
or
xchg
sti
jg
addl
inc
pop
and
sub
into
lds
leave
and
cltd
cmp
mov
sti
xchg
in
mov
adc
lret
in
inc
test
aaa
loope
test
xchg
mov
pop
xor
aas
push
clc
ds
aaa
adc
mov
roll
or
fcmovbe
push
mov
jns
add
pop
aad
sbb
jecxz
inc
lea
rolb
cmp
lods
xchg
cld
xchg
xchg
dec
shlb
push
lods
sub
xlat
loop
xchg
and
call
dec
les
push
fnsave
mov
insb
push
fisttpll
mov
sub
dec
mov
adc
rclb
shlb
scas
cmpsl
lds
pop
enter
test
popa
les
scas
adc
add
dec
les
std
mov
inc
mov
jmp
mov
xor
jno
sahf
xchg
inc
push
mov
in
and
call
pop
fdivrs
sbbl
outsl
mov
subb
movsl
inc
inc
insb
sbb
mov
jmp
out
cmc
enter
push
cmp
fiaddl
push
das
aaa
adc
lret
mov
cmp
addr16
testb
cltd
pop
push
jbe
mov
lahf
pushf
xchg
add
out
stos
push
hlt
ss
in
aaa
lret
pop
mov
cmp
dec
sub
stos
fs
inc
popf
and
daa
iret
addr16
lret
jbe
jmp
sub
jo
or
mov
xchg
lods
shll
js
jecxz
mov
pop
mov
jb
push
jo
push
sbb
dec
cmp
loope
inc
mov
push
cmp
push
sahf
repz
push
fdivl
popf
sub
sub
aam
into
push
gs
mov
mov
addr16
les
sbb
push
pusha
sub
xchg
pop
fimuls
add
les
out
and
xor
push
add
mov
mov
push
out
testb
xor
mov
loop
dec
adc
clc
pop
dec
inc
jae
sub
xchg
sub
mov
cwtl
xchg
fiadds
xchg
lock
jb
in
lods
xchg
push
cmp
popa
in
xor
mov
mov
paddq
shll
shlb
cmp
xchg
int
xlat
push
adc
dec
jns
xchg
mov
daa
xchg
sub
cmp
out
push
decb
add
jge
or
add
mov
sbb
pop
test
add
es
icebp
mov
sub
jp
cmp
push
movsb
rorl
loope
movsl
pusha
mov
mov
pop
adc
pop
sti
loope
dec
sahf
fwait
call
mov
add
into
xchg
rcll
sub
popa
cmp
fcmovne
mov
mov
or
jne,pn
imul
pop
and
dec
test
je
bound
pop
shl
and
inc
cli
lods
nop
push
jl
in
pop
fisubs
in
pop
adc
xchg
popf
hlt
std
push
jo
mov
or
mov
mov
and
cmp
xor
push
cmp
or
inc
aaa
sub
dec
dec
pop
and
inc
scas
mov
xchg
movsb
sbb
lds
or
inc
test
xor
sbb
xor
push
add
popf
add
adc
add
mov
cld
adc
or
mov
imul
incb
js
dec
test
lcall
or
jmp
cmc
or
mov
jp
sbb
rclb
push
cmc
lahf
mov
push
inc
cmc
shlb
mov
inc
fs
cmpsb
jmp
jo
add
lods
sub
xor
cld
ret
push
add
xor
lods
add
je
daa
dec
aaa
stos
sbb
lahf
dec
sub
or
mov
add
lahf
adc
das
and
lcall
dec
jne
popf
loope
into
dec
push
mov
fadd
inc
iret
jae
adc
jo
insb
stc
sub
sub
push
cmpsb
add
cmp
loopne
je
xchg
fwait
xchg
orl
fidivrs
mov
lock
je
sahf
cwtl
movaps
ds
stc
lds
inc
cli
lock
jge
lahf
mov
aam
imul
pop
and
jae
out
xchg
pop
jp
pop
pop
jecxz
nop
sub
mov
in
lcall
test
mov
dec
adc
pop
insl
rol
movsl
mov
movsl
cmp
aaa
mov
lods
sub
mov
ljmp
jp
ret
fiaddl
scas
mov
dec
add
cmpb
inc
jne
mov
lret
cmp
mov
gs
bound
push
lret
push
jo
dec
mov
test
outsl
cmpsl
cmpsb
cmp
into
xchg
cmp
push
xchg
xchg
pushf
or
jp
jl
cwtl
xchg
jecxz
add
lds
hlt
xchg
xchg
mov
adc
lods
movsb
pop
xchg
dec
dec
data16
sbb
lea
out
data16
rcl
adc
push
sahf
and
mov
ds
sbb
imul
sub
mov
sti
mov
mov
les
sbb
xchg
xchg
push
aad
mov
das
outsb
js
xchg
sub
bound
ljmp
imul
dec
inc
ficomps
loope
xor
leave
fisubrl
in
xchg
js
mov
loopne
shlb
sahf
les
lret
xchg
adc
cwtl
xor
add
iret
in
sbb
out
pop
mov
cmpsb
jecxz
sbbl
mov
loop
fcmovb
pusha
gs
sub
cmpsb
dec
add
or
mov
push
dec
aad
fs
jmp
push
add
mov
push
sub
hlt
repnz
adc
insb
jns
sbb
cmp
mov
push
jl
push
and
push
xor
jno
aad
clc
sbb
shlb
and
rorl
dec
pusha
mov
mov
fwait
jge
imul
test
popa
loopne
lods
and
movsb
test
xchg
cmpsl
or
es
cmp
ja
mov
adc
rcr
stos
das
js
sub
mov
mov
insl
inc
mov
fcmovnbe
shlb
cmc
out
jmp
stos
out
test
and
jl
sub
jle
or
or
sub
push
cmpsl
rcrl
dec
lret
pop
fwait
imul
ficomps
or
sbb
fisubrl
dec
rcrl
ja
scas
fxch
jge
cli
int
mov
int
jo
iret
out
sub
icebp
int3
aaa
es
jae
fld
out
mov
mov
push
fstpl
pop
jle
pop
aam
or
dec
jmp
movsb
fisubrs
mov
sbb
and
out
inc
ja
hlt
popl
sub
pop
xor
push
mov
ja
jb
xchg
fldenv
adc
dec
push
adc
outsb
test
inc
sub
or
push
mov
in
pusha
out
inc
shll
into
xchg
into
das
shlb
in
xchg
pop
mov
jp
xlat
cmpb
fimull
ret
jb
inc
outsl
sbb
or
insb
push
push
iret
pusha
in
add
adc
cmc
out
iret
push
in
push
not
mov
mov
jnp
sub
jns
mov
mov
mov
data16
pop
inc
and
dec
push
xor
pop
add
popf
jbe
sbb
cmp
das
dec
notl
adc
xchg
mov
movsl
adc
movsb
sub
jo
and
hlt
mov
or
mov
push
cmp
cs
xor
pop
inc
dec
push
iret
fisubrs
inc
popf
gs
jnp
pop
mov
mov
push
mov
daa
or
fists
sarl
pop
mov
int3
adc
push
sbb
in
and
es
adc
pop
sbb
in
dec
cltd
jp
jae
imul
mov
xchg
mov
loope
inc
lods
push
or
mov
fstp
sub
sbb
push
pop
xchg
jecxz
int
in
fistl
outsl
aas
add
cmp
shll
nop
lock
inc
aaa
mull
xchg
jae
fucomp
icebp
and
push
rclb
push
mov
invd
pop
rcrb
sahf
or
jbe
loope
aas
pop
pop
insl
mov
out
pop
es
xor
mov
cmp
jns
mov
dec
js
push
lret
add
fcompl
mov
jl
sub
test
test
mov
mull
movl
sbb
pop
int3
ret
add
fisubl
sahf
es
push
fbstp
fsubp
lea
pop
adc
dec
lcall
xchg
and
in
sub
jbe
sub
inc
ret
cmp
cwtl
or
fucom
adc
mov
in
add
xor
push
inc
push
xor
mov
or
jp
popa
dec
sbb
and
pop
pop
int
ret
das
push
jmp
mov
sub
pop
mov
or
arpl
or
arpl
or
xor
les
or
icebp
jge
inc
push
out
leave
pop
xchg
jne
dec
rolb
and
orb
imul
sbb
fcoml
lcall
ja
sub
div
inc
dec
fsubs
mov
dec
mov
push
jae
mov
jno
popf
and
xchg
xor
das
stos
mov
jp
in
fstpt
das
add
nop
mov
or
pop
adc
inc
negl
xor
cmp
push
jge
andl
imul
mov
dec
dec
ja
test
out
mov
push
pop
scas
mov
aas
inc
xor
imul
add
filds
outsb
cs
mov
dec
cmp
dec
mov
push
pop
jge
insl
jne
jae
and
xor
xor
pusha
dec
leave
pusha
pop
aas
idivl
imul
cmp
inc
push
movsl
sub
test
movsl
jle
or
add
pop
dec
push
jno
loop
arpl
jb
xor
aad
xlat
mov
call
js
inc
jle,pt
insl
inc
frstor
or
fildl
mov
sahf
mov
cltd
cwtl
mov
ss
scas
dec
cld
gs
jae
mov
sahf
roll
imul
lock
cld
mov
xor
mov
fistpl
xchg
sarl
mov
adc
in
addb
out
nop
pop
icebp
jb
and
sub
jl
jmp
lock
lcall
xchg
std
lcall
adc
ret
out
fwait
xchg
jb
bound
jl
inc
xchg
mov
and
das
iret
mov
sbbb
out
xchg
lea
xchg
jo
pop
insl
pop
imul
in
pop
jg
mov
mov
loop
test
pop
imul
lods
call
repz
sub
les
cwtl
out
mov
pop
pop
andb
insb
xorb
lahf
outsb
scas
or
mov
mov
aaa
push
rorl
or
into
gs
rclb
scas
xorl
xchg
or
jg
wbinvd
int3
adc
sbb
xor
lock
add
or
mov
rcl
bound
dec
fsubs
mov
dec
test
xchg
mov
adc
push
lods
in
daa
lea
test
out
imul
jg
xchg
flds
cli
dec
adc
inc
das
cmp
leave
and
adc
add
ret
mov
lahf
lods
loop
ljmp
or
cmpsl
cmp
repnz
sub
addr16
and
out
les
inc
cld
rclb
mov
andl
cmp
dec
push
leave
ret
and
sub
push
fldl
jno
divl
xchg
sub
outsl
adcl
imul
out
xchg
cmp
cmpsl
sub
stos
pop
or
stc
dec
pop
cwtl
inc
dec
fwait
sbb
jb
loopne
cld
and
mov
add
cmpsl
push
dec
stos
jbe
pushl
fdivrs
int3
or
mov
hlt
xchg
ds
ret
test
xor
mov
pop
inc
pop
loop
adc
xchg
pop
push
std
pushf
je
sti
mov
mov
pop
lods
push
mov
push
js
outsb
push
dec
dec
xchg
outsb
xchg
bound
jno
push
pop
push
repz
and
out
incb
in
add
rolb
enter
cmp
inc
or
popf
movsb
mull
lret
pushf
ds
out
shll
cmp
or
cwtl
mov
mov
dec
inc
test
out
add
adc
cwtd
in
imul
adc
jecxz
adc
xlat
mov
cmp
xchg
pop
scas
jo
daa
cli
adc
dec
pusha
daa
dec
stos
and
lds
ds
cli
mov
scas
mov
mov
out
leave
inc
add
push
xor
int3
scas
and
mov
xchg
test
sbb
dec
adc
pop
sti
mov
mov
das
std
sub
or
dec
push
and
lcall
mov
adc
xor
ret
mov
mov
mov
adc
dec
mov
cmp
loop
mov
inc
shrl
jmp
xor
cmpb
pop
xor
insl
in
mov
or
dec
sbbl
jge
or
mov
pop
pop
aad
sub
add
or
in
cmpsl
or
popa
and
jle
or
icebp
xchg
rcr
sti
jns
jg
inc
push
lret
rcr
fwait
adc
fiaddl
mov
sub
aam
in
loopne
cmpl
add
add
stos
inc
inc
xor
cltd
lret
popf
mov
lds
aaa
sub
xchg
dec
or
jge
add
fstpl
in
dec
imul
push
sbb
lea
popf
sbb
je
mov
stc
js
or
shll
fisubl
dec
mov
shl
gs
push
mov
fcoml
adc
fsub
fwait
sub
sbb
shlb
mov
mov
sub
repz
icebp
stos
jo
imul
mov
jns
shll
loopne
in
mov
test
cmc
jg
inc
outsl
flds
and
or
mov
movsb
cmp
insl
outsl
mov
mov
loope
push
or
hlt
repnz
mov
cmp
mov
out
dec
int
in
fcompl
mov
insb
aam
jnp
leave
jg
imul
dec
xorl
or
xor
incb
xchg
mov
jmp
fnstenv
js
shll
xchg
out
or
fstps
push
mov
popa
es
mov
or
push
add
or
aam
retw
orl
add
dec
dec
adcl
das
jae
nop
jl
and
mov
xchg
pusha
adc
cs
cs
cwtl
aad
mov
std
jne
call
pop
adc
sbb
mov
test
sbb
mov
movsl
push
loopne
or
bound
loopne
iret
jl
shl
stos
cmp
sub
dec
xor
pop
pop
push
popa
or
cmp
dec
pop
or
and
addb
cmp
and
pop
push
mov
xor
test
and
cli
cltd
xchg
ret
mov
mov
int
mov
cmp
and
loopne
imul
pop
and
mov
cmpsl
cwtl
mov
inc
out
in
pop
out
enter
fistpll
xlat
xor
jle
loope
cmp
jl
pmaxub
test
cmc
ds
cmpsl
xchg
jno
ds
pop
es
push
jp
loop
les
mov
jnp
xchg
ficompl
pop
jae
in
cmc
adc
filds
cmp
test
and
or
jbe
jne
mov
sub
inc
push
xor
jl
lock
xchg
inc
mov
mov
scas
push
mov
sbb
sbb
ret
pop
fs
dec
push
xor
mov
add
leave
jns
xchg
xor
lret
repnz
movsl
jne
push
test
xor
das
lahf
push
sub
sub
pop
je
stos
add
jge
inc
sbbb
inc
xchg
mov
mov
sub
icebp
sti
adc
sbb
sbb
sbb
test
test
into
pop
imul
sub
mov
movsl
addr16
or
in
mov
in
leave
outsb
adc
mov
test
adc
mov
adc
dec
idivl
mov
clc
add
push
cwtl
lea
daa
mov
jge
ss
leave
inc
das
pop
push
fs
into
in
cmpsb
cmp
icebp
and
mov
pop
sub
into
shld
aas
leave
aam
scas
and
movsl
pop
pop
fstps
and
or
sti
repz
mov
sub
mov
es
in
inc
flds
lods
adc
loopne
lds
xor
cmp
divb
stc
dec
and
sub
jnp
sub
testb
ret
shlb
or
mov
shrl
ljmp
fidivs
jae
daa
and
sub
jle
aaa
mov
mov
xchg
lret
shr
int
and
inc
xchg
jp
stos
push
push
fst
jb
or
sbbl
lock
insb
in
inc
ret
into
out
enter
add
icebp
out
pop
mov
xchg
popa
or
jae
incl
push
std
test
loope
add
jne
xchg
sub
sbb
pushf
inc
in
adc
mov
sbb
in
fists
xchg
xchg
addps
enter
sub
jae
add
aaa
add
lahf
mov
mov
ja
sahf
fcomp
rclb
hlt
test
imul
xchg
xor
ja
loopne
imul
sahf
sbb
dec
divb
movl
fsubrs
jae
rolb
dec
sbb
sub
jecxz
test
add
jge
pop
pusha
xor
ds
insl
out
mov
shl
in
imul
xchg
inc
xor
add
ret
in
aas
push
mov
push
cmp
jle
test
cltd
or
push
mov
out
cmp
stc
orl
fiadds
push
insb
lret
jp
popf
lret
xor
inc
xchg
xor
test
push
data16
adc
jne
sbbl
clc
clc
das
push
and
imul
aam
sbb
outsl
imul
or
add
jmp
sbb
lret
ret
movsb
icebp
adc
xchg
add
adc
mov
or
je
je
shrb
mov
sti
xor
jle
outsl
pop
push
int3
pop
xchg
dec
mov
jg
mov
dec
pushf
in
andb
test
add
dec
xor
jnp
out
int
daa
sub
outsl
inc
popf
lahf
add
push
jle
lods
mov
nop
fisubrs
std
sahf
push
imul
mov
add
dec
or
and
xorps
enter
add
fisubs
dec
sub
fwait
inc
ret
cmpsb
sbb
andb
pop
in
clc
stos
cmp
scas
pminsw
inc
clc
dec
repz
xchg
cltd
outsl
pop
popf
jnp
pop
hlt
mov
push
in
push
xchg
repnz
lds
sbb
daa
iret
dec
adc
faddl
pop
and
mov
cmc
or
addr16
ror
jne
aad
dec
xor
sahf
sub
dec
sbb
loopne
adc
mov
out
jo
inc
adc
out
sbbb
adc
test
out
jp
mov
leave
jp
mov
mov
int3
roll
in
das
adc
int3
push
and
inc
int
stos
aam
std
add
inc
add
js
adc
jg
xchg
ljmp
test
incb
enter
mov
pop
sbb
add
inc
mov
insb
push
xorl
ja
fisubl
insb
ss
xchg
or
int
sbb
mov
mov
ss
mov
lret
ja
inc
aad
mov
mov
add
addl
out
dec
mov
mov
push
aad
cwtl
mov
testb
pop
cmp
push
push
fdivr
jno
mov
and
jo
sbbb
repz
jle
sti
inc
jne
andl
gs
jo
iret
enter
mov
ret
sub
sub
mov
sub
adc
sbb
dec
pusha
push
in
lods
fisubrs
xor
cmp
xchg
push
enter
mov
test
imul
pop
cwtl
cmp
sbb
mov
mov
mov
push
lcall
sbb
aaa
push
leave
mov
xor
jbe
xor
lcall
pop
push
sti
inc
das
xor
add
fsubl
lret
movsl
xchg
dec
jmp
add
sar
movsb
xchg
sub
je
fistl
rolb
inc
push
and
std
jmp
das
fisubrs
rcll
xchg
imul
movsl
fwait
imul
pop
sarb
dec
cltd
inc
xchg
mov
mov
sbb
jmp
cmp
pop
mov
das
jne
dec
cmp
and
jo
fists
test
nop
or
mov
sub
mov
ds
fildll
jo
mov
ljmp
xchg
ret
mov
jo
push
jb
fcoms
cmp
dec
cli
lock
adc
inc
fidivrl
sub
push
jmp
into
mov
mov
adc
dec
and
test
mov
inc
pop
or
fstps
mov
in
subl
roll
push
sbb
sbb
les
dec
iret
divl
pop
pop
lahf
dec
sbb
jge
add
cmpb
clc
mov
mov
in
cmp
mov
mov
int
mov
call
push
push
push
pop
rcll
or
das
loop
cmp
sub
jmp
mov
sbb
popa
addb
loop
xor
push
call
add
adc
aas
lcall
in
pushf
jge
aad
sub
into
xor
add
add
pop
in
push
push
ljmp
les
test
jnp
lret
stos
ret
adc
test
repnz
in
lahf
jbe
lret
jbe
mov
lods
adc
sub
pop
add
cwtl
add
repz
in
mov
loop
jg
jo
nop
jns
pop
ds
or
push
cltd
xor
push
xchg
js
shrb
imul
inc
lcall
je
rcl
push
pop
repz
insl
push
mov
divb
lahf
pop
jae
mov
in
repnz
daa
and
andb
repnz
pand
and
ljmp
xlat
jl
lcall
inc
pop
pop
vpandn
fdivs
jns
push
sub
test
jl
bound
in
mov
fidivrs
push
sarl
inc
dec
pop
lock
and
lcall
subl
stos
lock
jl
loop
fmull
das
pop
cmp
adc
pushf
sbbb
xchg
xchg
nop
dec
mov
push
and
cmpsb
rol
jecxz
scas
decb
ret
jbe
nop
addr16
repz
int3
out
add
sub
inc
push
lea
xor
iret
xchg
aad
cmp
repz
fistpl
inc
imul
jbe
jo
cmp
sahf
scas
popf
or
pop
loopne
aaa
push
dec
repnz
outsl
ret
add
popf
ljmp
icebp
sub
mov
xor
fistpll
mov
jecxz
arpl
cmp
imul
cmpsl
mov
scas
pop
add
dec
push
cmp
out
mov
fnsave
or
push
or
ljmp
dec
pop
mov
mov
push
lcall
popf
sub
dec
jmp
pop
push
mov
cmc
lods
sarl
andb
fmul
sbb
add
loope
imul
jmp
mov
in
cmp
jmp
enter
out
jge
adc
ret
out
mov
xchg
mov
lods
jg
mov
rcrl
loope
mov
xchg
pop
bound
movsb
push
mov
mov
rorb
add
push
inc
ljmp
mov
adc
loope
sbb
add
adc
mov
add
aad
lret
cwtl
push
lds
adc
pop
cmp
mov
gs
dec
cld
xor
dec
dec
or
dec
int
dec
mov
pop
das
pop
mov
outsl
cli
push
pop
and
add
sbb
cmpsb
adc
jb
xchg
and
mul
leave
dec
cmp
test
sti
aaa
inc
mov
and
stos
pop
adc
int
insl
push
mov
sbb
fdivl
pop
or
xchg
icebp
xchg
jns
dec
cmp
sbb
enter
sub
testb
outsl
pop
and
and
popf
out
test
test
xchg
je
jae
cmpsb
mov
xchg
push
sub
add
scas
pop
or
sub
or
shlb
stos
sub
xchg
mov
dec
sahf
dec
jbe
xor
inc
push
mov
push
dec
dec
je
add
mov
idivb
adc
in
push
mov
cmp
sbb
daa
fstpt
mov
xchg
jge
cmpb
ret
arpl
out
push
or
nop
fs
js
inc
add
sub
inc
cld
call
sub
stc
lcall
dec
inc
sahf
mov
jmp
jne
insb
iret
aam
xor
cmc
out
incb
call
push
xchg
inc
sub
jns
gs
scas
xor
stos
adc
imul
fdivs
ret
daa
in
movsb
mov
add
cmp
xor
pop
stos
cli
dec
std
mov
inc
fwait
sub
inc
mov
pop
push
andl
sbb
test
jmp
nop
push
jmp
inc
lock
es
cmp
dec
popa
mov
stos
sbb
and
stc
loopnew
push
aam
inc
cmpl
pusha
push
scas
repnz
movb
sbb
lcall
lock
and
mull
dec
dec
and
xchg
jno
cmp
mov
imul
int3
sbb
je
data16
stos
dec
dec
lret
adc
xchg
and
cmp
or
bswap
test
jmp
add
sahf
daa
or
dec
jb
cmp
jmp
push
in
bts
pop
iret
clc
jo
imul
stos
sbb
pop
lods
inc
xor
jne
stos
push
mov
dec
leave
jl
ret
dec
pop
inc
push
jecxz
ljmp
lret
mov
mov
cmp
inc
and
shll
cmpsl
push
negb
mov
lahf
clc
stos
pop
aam
mov
aad
scas
in
mov
push
gs
push
and
xchg
jae,pt
sbb
push
testb
or
cmpsb
inc
xor
loopne
xor
add
pop
inc
mov
xor
and
jns
or
nop
mov
ret
inc
mov
cmpsl
cmp
lret
cmp
out
test
sti
mov
test
or
mov
xchg
aad
nop
stos
mov
in
fisttps
stc
rcrl
lea
mov
fcomps
jp
test
rolb
dec
cltd
cmp
xchg
repz
mov
or
int3
loopne
and
cmc
je
fwait
shlb
and
pop
cwtl
pop
mov
and
fwait
mov
mov
mov
fucomip
mov
inc
push
movsb
jmp
inc
xor
int
repz
cmp
add
sub
add
jno
xchg
mov
data16
xchg
mov
push
xor
add
arpl
xchg
scas
ficomps
lret
pushl
loope
nop
cmpsl
dec
fcoms
out
pop
cmp
pop
mov
rsm
adcl
xlat
imul
pusha
orb
pop
or
movsb
popf
or
cltd
mov
scas
adc
stos
or
and
mov
xchg
add
icebp
inc
dec
jmp
punpckhdq
loop
xchg
mov
xchg
jge
mov
loop
xchg
insb
push
leave
pop
xor
outsl
xchg
adc
mov
in
sahf
push
lret
iret
ret
cmp
jnp
pop
data16
dec
negl
enterw
mov
aam
mov
int3
jne
sbb
adc
push
mov
ret
dec
iret
sub
je
pop
jno
and
mov
or
cmp
mov
arpl
outsl
sti
add
scas
xchg
ffree
pop
pop
pop
clc
subl
enter
pusha
lods
addb
cli
pop
iret
pusha
ret
out
enter
jl
in
je
cltd
test
adc
lret
jns
jg
lcall
fdivrl
test
imul
dec
lods
mov
aam
cwtl
ret
js
iret
sbbl
stos
pop
lods
out
inc
mov
mov
andl
clc
mov
cs
int
push
movsl
sub
stos
cmp
pop
es
or
inc
adc
fdivs
pop
out
lock
negl
inc
mov
enter
mov
xchg
or
das
or
mov
fstl
xchg
add
in
jle
adc
inc
ljmp
dec
dec
inc
push
pop
sahf
mov
adc
icebp
sbb
jno
mov
jmp
dec
adc
xchg
test
sbb
cwtl
lock
in
ss
push
mov
stos
and
sub
repz
cwtl
mov
cmpsl
ljmp
dec
popf
cmp
mov
inc
jns
inc
cmp
mov
aam
xchg
jmp
mov
sbb
sti
xchg
es
out
int
loope
lods
and
cli
and
addr16
into
push
in
inc
stc
pop
mull
daa
jo
jae
or
cltd
and
ret
movb
xchg
in
mov
mov
push
dec
adc
mov
insb
das
cltd
out
sub
fildll
inc
push
les
mov
xor
ret
pop
or
leave
mov
imul
jge
imul
jne
out
lods
paddb
fnsave
add
imul
add
mov
fnstcw
call
sbb
dec
cli
ds
aam
cld
mov
xor
jl
pop
sub
mov
insb
loop
popf
lahf
test
into
mov
insb
xchg
mov
xor
jno
fiaddl
lret
sahf
mov
mov
ret
in
pop
enter
push
sarl
jg
push
andl
or
xlat
and
fcmove
mov
push
sbb
jle
movsl
in
pop
ret
cld
jae
and
pop
scas
arpl
ja
sbb
int3
aam
xchg
push
push
sbb
mov
push
jae
and
jl
cmp
stos
inc
leave
imul
jecxz
das
ret
movsl
outsl
rcll
jno
push
mov
sub
stc
rorb
cmp
lock
add
outsl
rorl
ficoms
call
xlat
xchg
mov
pop
scas
jnp
leave
jnp
sbb
fsubs
aaa
jge
andb
fimull
mov
xchg
adc
loopne
enter
cmp
mov
ljmp
lcall
dec
pop
int
pop
icebp
pop
jae
mov
dec
ret
inc
shr
push
push
pop
stos
es
mov
cs
in
push
pop
loopne
xor
xchg
adc
stos
jno
add
adc
out
aam
aam
xor
add
cs
jg
push
push
fstpl
jg
hlt
gs
jae
lea
divb
lods
inc
movsb
mov
std
dec
jno
cltd
xchg
adc
jmp
inc
mov
arpl
repz
daa
divl
add
into
push
test
push
and
lea
cmp
js
aam
sub
dec
in
test
in
fcomps
push
jnp
dec
lds
stc
sbbl
mov
sahf
xor
mov
xor
pushf
daa
decb
sub
hlt
lds
test
sti
ret
pop
and
decl
gs
xlat
dec
jae
cmp
cli
lock
shrb
jnp
lret
addb
test
dec
or
and
mov
xor
aas
int3
call
mov
mul
mov
pop
sub
mov
and
jmp
in
pop
mov
add
lret
mov
popf
pop
push
xchg
xchg
lds
pushf
fisubs
cmp
push
xchg
ret
xchg
fists
lcall
int3
push
xchg
mov
adc
sbb
dec
pop
dec
lcall
cmp
dec
inc
test
insl
dec
and
dec
cmp
rorl
xor
xchg
lds
ja
and
fwait
adc
jp
sbb
or
clc
leave
jle
mov
jnp
enter
jbe
repz
push
lcall
leave
aaa
mov
fwait
dec
pop
repnz
pop
test
inc
mov
insl
sar
aaa
js
int3
mov
sub
mov
push
jbe
cltd
xchg
fsts
jmp
pop
aas
mov
or
sub
scas
and
dec
fldl
sub
test
int
ja
adc
xchg
adc
inc
xchg
mov
mov
jb
xor
mov
push
sbb
push
xor
push
xchg
mov
jp
sbb
sub
mov
lods
outsb
movsb
push
stc
mov
mov
fisubrl
int3
ret
add
mov
cmp
sbb
aaa
es
aas
int
sbb
les
ds
call
testl
lret
inc
xorl
mov
and
cmp
jle
ds
dec
jo
inc
dec
lods
rolb
cmp
cwtl
rcr
stc
loopne
imul
aas
popa
shll
ret
xchg
sub
mov
add
xchg
out
xor
cmp
enter
test
mov
ja
js
pop
inc
lea
xor
jge
push
inc
repz
cmp
mov
mulb
addr16
pop
fcoml
mov
mov
pop
and
xlat
push
popf
loope
lcall
push
xlat
push
add
into
sti
in
cmp
push
sub
out
mov
xor
scas
aam
fnsave
das
add
pushf
adc
orb
stos
insl
movsb
addr16
jae
mov
add
imul
jmp
and
jo
sub
aas
sarb
jmp
adc
clc
sbbb
push
hlt
jnp
push
adc
pop
mov
xor
dec
dec
push
push
mov
and
fldl
or
jb
and
push
sbb
imul
stos
jg
mov
lods
test
ret
sub
clc
scas
imul
sarb
lods
mov
int3
push
aas
lock
ret
dec
jg
inc
mov
and
scas
jp
popa
adc
mov
cmp
mov
push
movq
shll
add
xor
xor
insl
or
sbb
ficompl
push
loop
aaa
jl
pop
mov
popa
push
icebp
test
je
insb
pop
push
sbb
and
lret
jae
mov
jg
fcoms
dec
push
mov
std
stos
xchg
xlat
ja
js
mov
cmp
mov
negb
in
inc
fwait
movsl
xchg
outsb
push
adc
xorb
sbbl
cltd
adc
sub
iret
aad
les
leave
dec
ret
inc
cld
lret
xchg
negl
xor
jb
lods
jge
dec
pop
xchg
pop
test
adc
outsl
inc
cli
pop
add
test
enter
jmp
push
cmp
repz
shrb
dec
inc
push
or
je
xor
xchg
pusha
es
aas
mov
lret
pop
push
inc
cli
aas
inc
fisttpl
out
insl
je
adc
jmp
dec
jp
bound
mov
inc
xor
sub
inc
les
sti
pop
aas
ljmp
fwait
adc
test
cli
sahf
sub
stos
cld
mov
loopne
push
enter
mov
mov
cmp
in
outsb
mov
pop
push
lahf
cld
and
xor
mov
inc
fistpl
inc
loopne
repz
lcall
sbbb
mov
xor
scas
int3
mov
sub
movsl
cs
pop
scas
xchg
leave
jnp
jmp
or
das
imul
jnp
mov
mov
lret
fwait
insl
lahf
xchg
ja
call
adc
aam
jbe
adc
mov
sub
out
std
cli
pop
fwait
mov
fstl
mov
inc
cmp
jle
aaa
ret
jb
jne
inc
push
cmp
cmp
mov
sub
mov
jne
pop
pop
ds
outsb
sub
outsl
jb
push
mov
push
shlb
cmp
jl
fildll
xor
jp
mov
sub
shlb
push
lret
cs
lcall
sti
gs
dec
push
imul
cltd
imul
add
les
fsubrl
inc
jecxz
lret
sarl
aad
xor
js
xchg
mov
mov
sub
mov
inc
outsl
inc
xchg
aam
scas
cld
test
jb
fs
xorb
push
inc
xor
jae
add
mov
jns
scas
jp
xchg
sub
inc
jno
fisubrl
cs
notl
adc
adc
popa
imul
adc
shlb
fwait
les
jmp
arpl
dec
adc
adc
into
loope
es
push
push
data16
mov
jmp
sti
mov
aaa
test
add
push
ret
cmp
jp
xor
leave
mov
imul
xlat
movsl
test
xor
sbb
xchg
xchg
addr16
dec
jo
jg
sbb
cmpsl
jmp
ret
nop
lret
inc
adc
pop
movsb
ds
dec
fildl
into
insb
and
mov
fisttpll
dec
sar
das
xchg
ljmp
call
shrl
or
mov
mov
ret
insb
orl
insl
push
cmp
mov
sahf
je
test
jne
and
lds
mov
add
jb
repz
jb
push
rcrl
xor
insb
cs
push
hlt
jo
dec
insb
popf
xchg
jg
idivl
lods
mov
mov
mov
dec
test
sti
pop
jnp
mov
jg
jno
pop
jge
jmp
jns
push
pushf
lcall
in
fcmovb
aas
imul
aaa
push
enter
les
sub
rolb
bound
pop
lods
lahf
and
gs
icebp
mov
push
mov
test
add
xorb
fstpl
ud2
dec
xchg
dec
pop
fcomps
in
out
lods
lahf
sbb
or
jo
adc
adcb
and
push
inc
testb
cs
inc
rcrb
push
mov
mov
adc
jecxz
lds
lea
stos
mov
cmp
cmp
inc
mov
enter
ds
xor
insb
sub
jle
pop
enter
lods
or
pop
das
test
mov
lock
sub
rcll
scas
daa
ret
clc
mov
xor
lods
mov
push
test
adc
iret
mov
imul
cli
add
in
in
out
push
cltd
hlt
pop
cmp
lea
outsl
and
cmp
repz
mov
push
xchg
scas
inc
pop
jb
nop
addb
mov
jmp
mov
mov
mov
push
outsl
mov
mov
cli
orl
push
xor
add
pop
cli
cwtl
mov
fists
mov
mov
xorb
xchg
and
cmp
cmc
ret
add
mov
mov
jle
imul
sti
inc
sub
scas
aad
mov
mov
pop
mov
jo
cmc
sbb
imulb
jl,pt
jl
dec
pop
mov
push
sbb
pop
push
cmp
cs
push
and
pop
adc
jno
add
and
shlb
sbb
fs
loopne
mov
cmp
out
out
xor
jno
xlat
call
ljmpw
mov
imul
mov
movsl
jno
stc
pop
xor
jle
aam
lcall
gs
stos
cld
pop
clc
jo
push
outsl
arpl
adc
popf
ljmp
cs
inc
aas
xchg
inc
loopne
xor
scas
roll
scas
out
cs
call
adc
mov
lock
and
in
dec
mov
cwtl
outsl
push
xor
push
gs
arpl
dec
ja
dec
adc
loope
jl
cmpb
adc
test
bound
fcoml
shrl
aaa
rcrl
mov
sbb
andl
xor
cmp
adc
adc
scas
mov
xor
outsb
mov
sub
pop
daa
lret
jge
icebp
daa
pop
cmp
les
scas
pop
adc
mov
sbb
enter
stos
or
sub
pop
call
aas
mov
rcl
test
popa
jbe
add
and
adc
jbe
add
cmpsb
xor
cmp
lret
dec
data16
mov
addr16
add
test
out
imul
sahf
dec
or
jae
inc
sbb
sub
xchg
xor
jle
push
into
test
lret
in
leave
adc
test
stos
xchg
and
dec
into
lahf
xor
or
mov
xchg
dec
mov
push
das
jge
jns
sbb
addl
fxam
test
mov
pop
cltd
jl
hlt
ret
loope
mov
sub
pop
xchg
pop
push
out
cmc
cmp
in
imul
inc
in
outsb
jmp
fucomi
xor
aaa
xor
movsb
sub
mov
outsl
lret
jo
jns
shl
dec
leave
gs
jecxz
loopne
cmp
mov
mov
cmpsb
out
mov
mov
std
addr16
inc
cmpsb
popf
sbb
sahf
es
inc
mov
jno
lahf
adcb
test
repz
ret
ret
ljmp
enter
aas
xchg
aas
das
shl
pop
je
test
movsb
movsl
lea
rcr
pop
hlt
test
sbb
lock
leave
fucomip
ficompl
mov
push
aaa
mov
lods
imulb
push
mov
cld
jo
pcmpgtb
shrb
cld
mov
or
outsb
and
pop
pop
mov
test
hlt
sbb
jns
test
addr16
pop
imulb
sqrtps
shll
arpl
push
dec
iret
hlt
rcll
add
fwait
lret
and
mov
stos
xchg
enter
push
pop
outsl
and
mov
or
xor
dec
or
popa
inc
push
mov
mov
push
pop
cmc
add
mov
arpl
es
out
jl
mov
cli
mov
add
push
ret
popf
inc
xchg
ss
mov
ljmp
in
push
add
sbb
mov
push
test
mov
mov
or
movb
fs
and
adc
jl
std
in
mov
xor
dec
sbb
adc
insl
adc
clc
cltd
outsl
push
cltd
xor
inc
inc
jl
ja
lods
mov
cmp
and
lds
addb
popa
mov
push
sub
mov
adc
jno
push
or
cmpsl
mov
add
pop
test
shr
sbb
pop
pop
dec
push
sarb
mov
jbe
and
sub
inc
orl
sbb
push
add
xor
mov
adc
clc
adc
adc
push
lea
ds
dec
lock
rcrb
xor
fcoms
inc
comiss
out
dec
add
cmc
ret
sarb
push
add
std
stos
adc
bound
adc
dec
lret
cwtl
cmp
jecxz
fidivl
mov
inc
xorl
jmp
xor
pop
add
popa
adc
or
cmp
jmp
push
cmp
scas
jb
stos
push
mov
push
adc
inc
adc
lcall
mov
mov
push
push
lds
jb
mov
fcoms
into
scas
jp
push
lods
lret
daa
add
mov
pop
or
test
fistps
test
inc
imull
aad
iret
out
sbb
mov
in
dec
sahf
sbb
and
push
daa
test
popa
add
jge
stos
or
push
or
in
mov
xchg
ja
adc
lret
cmp
jnp
sub
jl
push
dec
cmp
mov
movb
add
inc
xchg
cmpsl
cmp
or
jge
push
addr16
jbe
divb
lret
xchg
lock
push
and
fnstsw
mov
xor
cmp
cltd
orb
ret
mov
jle
pop
xor
push
or
jne
popa
aaa
fnstenv
scas
fucom
dec
lea
jo
insl
insb
xchg
out
call
jmp
cltd
leave
movsl
sbb
xlat
repnz
xchg
int
idivl
sub
outsl
loopne
cmc
xor
je
out
into
xchg
or
mov
pop
mov
loope
dec
ja
jp
sub
xchg
clc
or
loopne
adc
push
fstps
fxam
add
enter
sbbb
mov
cmp
stos
mov
inc
mov
ss
or
ds
cmpsl
iret
lock
adc
or
mov
movsl
int3
ja
test
mov
pop
sub
lret
ja,pt
gs
mov
ret
cmp
pop
xchg
punpcklbw
and
pop
xor
jbe
fimuls
inc
push
hlt
adcl
xchg
hlt
cltd
push
sub
pop
rcrb
pop
ficoms
ret
nop
test
lods
das
aad
into
testb
outsl
xlat
fistl
popf
scas
jmp
out
adc
aam
test
sub
jl
sar
cmpsl
js
rcrl
cltd
insb
jbe
and
jge
in
push
sub
rol
xor
stos
cltd
xchg
int3
ss
sbb
daa
data16
mov
movsl
dec
xor
cmp
cmp
inc
loopne
insb
shll
xlat
ss
push
jbe
jmp
mov
inc
sub
int
dec
mov
and
stos
pop
inc
sbb
and
lock
jnp
push
decb
sub
js
aam
sbb
jbe
inc
mov
mov
push
xlat
mov
lahf
pop
push
cmp
fidivrs
movsl
pop
mov
inc
adc
fcomps
es
jo
fidivrs
shll
mov
lahf
je
and
scas
xchg
mov
mov
cmp
mov
pop
push
out
cmpsl
jb
mov
push
rcrb
mov
dec
das
cmpsb
movsl
notl
out
jle
mov
sub
add
ds
scas
ja
sbb
cmp
bound
vpcmpeqb
sbb
sub
movsb
xor
inc
inc
aad
test
push
jns,pn
das
mov
xchg
fidivl
push
cltd
jp
push
xchg
mov
add
sbb
add
mov
mov
cld
insb
insb
stc
xchg
fnstenv
jno
fstpt
jbe
sbb
movsl
mov
add
adc
and
adc
rcrl
mov
pushf
hlt
cmc
rorb
jno
add
outsl
push
pusha
inc
test
leave
imul
cli
sti
add
mov
lds
lods
outsl
pop
inc
movsb
pusha
rcl
daa
xchg
or
inc
pop
push
xchg
push
repz
cld
leave
dec
jnp
sbb
cmpsl
jp
or
or
stc
aas
add
add
int
sub
cmp
and
pop
push
add
iret
loopne
js
push
dec
add
add
and
mov
sar
fwait
or
cmpsl
imul
aam
pop
subl
jg
fidivs
add
mov
xchg
jnp
repz
movsl
je
repnz
imul
pop
or
les
pop
mov
jecxz
and
push
stc
aaa
dec
out
es
shl
jne
pop
push
pop
pushf
loop
lret
xchg
mov
xchg
adc
add
std
xor
test
hlt
mov
dec
daa
mov
aas
icebp
xchg
call
sbbl
ljmp
bound
lods
push
adc
pop
repnz
pusha
jmp
in
or
test
insb
repz
push
xchg
lods
out
sub
add
jnp
mov
insb
fst
pop
pop
fisubrl
sub
test
imul
jecxz
cmp
inc
lods
adc
stos
pop
xor
adcl
mov
adcl
pop
lods
mov
fnstenv
push
daa
pop
mov
cmpsb
sarl
sub
arpl
insb
aad
dec
xor
or
lret
adc
scas
cmp
or
and
daa
mov
and
dec
addr16
xor
adc
cmp
ret
dec
mov
sti
xchg
loop
sarb
cmp
pusha
and
push
push
pop
leave
or
xchg
sbb
pop
sbb
sub
ret
add
cmp
in
pop
xor
pushl
sub
mov
inc
flds
shll
dec
fdivrp
inc
push
pop
nop
jg
sbb
or
sbb
daa
push
dec
daa
adc
adc
int3
shrl
mov
out
ret
jae
push
adc
adc
fiadds
nop
sub
fsubrl
fmulp
sarb
in
test
push
mov
iret
sbb
pop
pop
ja
mov
fidivrs
jmp
add
cmp
inc
push
jle
push
loope
jo
jnp
mov
xchg
mov
or
cmp
adc
mov
mov
clc
or
push
sbb
and
jg
loopne
hlt
and
insb
addr16
cltd
loopne
lret
or
push
add
scas
or
dec
call
je
ret
fwait
out
mov
ja
movsb
mov
gs
test
or
jmp
insl
faddl
push
icebp
ss
sahf
jno
lret
in
les
out
push
xchg
aad
jmp
pop
hlt
lods
addr16
aad
jns
and
test
sub
xlat
push
mov
mov
in
and
push
xor
sbb
mov
push
add
dec
ret
push
adc
cli
testb
gs
xchg
mov
repz
inc
pop
xchg
sbb
ja,pt
cltd
inc
rclb
lock
lahf
loopne
mov
mov
insb
pop
lods
fsubrp
imul
mov
sub
or
dec
mov
testl
ret
sub
inc
xchg
cmp
call
fs
call
fwait
xchg
in
cltd
mov
addb
mov
push
dec
mov
pop
popf
mov
pop
mov
lds
mov
xchg
cwtl
xchg
mov
add
mov
mov
mov
sub
jns
test
divl
movsl
ss
pop
fistpll
pop
enter
fmul
mov
outsb
xchg
shlb
sti
cmp
fdivl
lea
mov
stc
inc
inc
mov
push
push
dec
push
fcompl
mov
test
jno
pop
nop
insl
cs
outsb
lret
adc
dec
or
pop
or
sub
out
sbb
hlt
mov
lds
adc
lods
arpl
dec
fdivs
sbb
pop
sbb
lret
in
jle
add
xor
cmpb
pop
and
sbb
sbb
pop
insb
push
and
addr16
dec
or
mov
bound
inc
jo
cmp
push
push
test
adc
bswap
mov
or
es
cmpsb
fstpl
push
cli
mov
fisubs
loopne
shrl
jne
int
es
mov
lret
push
pop
out
mov
orl
jl
je
icebp
cmpsl
sar
sub
rcl
sub
dec
add
jns
es
inc
data16
test
rcll
rclb
or
nop
pop
daa
mov
inc
loopne
testb
xchg
lcall
movsl
roll
sub
cmp
add
test
fwait
les
enter
mov
cmp
in
mov
cwtl
into
aas
xor
movsl
mov
out
and
push
sub
notl
enter
sbb
in
pop
and
and
mov
cmc
or
leave
push
cld
andl
and
jb
and
pusha
adc
negb
cmp
shlb
enter
mov
insb
mov
mulb
repz
mov
jge
imul
int3
ljmp
adc
adc
jp
fiaddl
leave
bound
dec
insb
mov
push
push
testl
xor
pop
inc
sub
xor
cmpsl
xor
dec
push
mov
pop
psraw
scas
mov
mov
xchg
dec
aaa
out
arpl
movsl
imulb
mov
sbb
iret
push
xchg
je
pushf
mov
inc
or
iret
mov
fwait
subl
cwtl
dec
rorl
scas
jb
jp
mov
popf
jno
and
cmp
inc
pop
mov
je
and
pop
sti
pop
adc
or
lahf
xchg
cmpsb
add
in
push
addr16
adc
adc
sbb
xchg
push
dec
pushf
test
test
aad
jae
fisttpll
sub
adc
das
in
in
inc
pushf
aad
pop
mov
jb
mov
mov
addr16
push
stos
test
and
pop
call
adc
adcl
mov
daa
or
sub
push
pushl
pop
pop
loope
ret
sahf
push
sbb
jo
pop
cs
sbb
jo
dec
imul
add
mov
mov
mov
repnz
pop
fldl
cmc
dec
out
lcall
fcmovnbe
into
adc
xchg
pusha
in
rclb
push
repnz
mov
iret
jg
or
iret
push
aam
push
iret
jge
dec
ss
in
aam
push
adc
xor
mov
outsb
or
xor
push
lods
sbb
cli
push
pushl
lret
call
sbb
cmp
pop
mov
lret
adc
iret
fucomi
repnz
or
popf
cmp
in
mov
xchg
add
inc
test
mov
es
icebp
test
push
aam
mov
lea
jbe
push
push
imul
enter
adc
xlat
cmpsb
lds
js
add
into
mov
dec
add
pop
add
dec
sub
jecxz
out
mov
xlat
stos
add
out
cltd
pushf
test
push
enter
inc
jb
jg
cmp
dec
dec
outsl
test
and
mov
adcl
sbb
fsub
sbb
cli
pop
jecxz
sbb
test
push
pop
xor
jmp
frstor
adcl
cmpl
jbe
mov
pop
jg
xchg
out
pusha
add
mov
adc
enter
sub
xchg
dec
gs
mov
and
int3
mov
shlb
cmpsl
rcl
pop
das
pusha
jno
lret
and
dec
test
adc
adc
imul
mov
sub
xor
je
aas
movsb
sbb
push
ja
pop
mov
aam
pop
icebp
push
cmc
test
sahf
pop
outsb
and
ja
popa
mov
rdpmc
aaa
repz
inc
hlt
sbb
cltd
mov
inc
cli
mov
mov
mull
xor
stos
xor
or
insb
fimuls
out
cmpsl
test
and
adc
jo
stos
dec
outsl
lods
dec
adc
fisubl
int3
add
ljmp
out
pop
dec
and
add
inc
pop
mov
popa
imul
data16
or
out
sbb
loop
sub
adc
test
adc
movl
sub
push
aad
in
add
dec
dec
xchg
out
mov
sbb
sbb
sub
jmp
pop
or
sti
std
cmp
dec
pop
inc
mov
mov
or
pop
xchg
jle
pop
sbb
sub
dec
lret
xchg
aam
or
pop
mov
hlt
and
loop
dec
push
cs
nop
dec
rep
mov
idivl
fstpt
negl
test
inc
inc
mov
and
stos
rclb
movsb
sub
mov
add
mov
imul
dec
dec
in
adc
ja
rclb
int3
cmpsb
inc
xchg
sbb
cmp
lods
cmp
sbb
and
mov
add
pop
mov
scas
xchg
sti
clc
jge
push
mov
fcmovbe
hlt
or
mov
ds
push
das
test
and
pop
adc
jl
push
out
mov
dec
out
inc
push
fbld
cltd
std
repnz
test
adc
push
out
jecxz
imul
add
mov
dec
pop
adc
mov
js
fsubl
or
in
sbb
leave
or
popf
mov
xorl
push
in
cmp
mov
clc
adc
adcb
test
adc
jae
gs
mov
insl
xchg
inc
pop
add
jl,pt
push
or
cli
stc
mov
and
mov
jle
daa
adc
push
mov
imul
sbb
mov
dec
loop
fcmovnbe
and
setp
cs
hlt
aad
shlb
inc
dec
daa
test
daa
shlb
fsub
sti
pop
xchg
jne
out
and
inc
inc
repnz
popa
mov
pop
adc
jno
xor
fnstcw
mov
pop
pusha
cmpsb
fistpll
push
jmp
cmp
pop
scas
int
lea
push
mov
popa
jbe
jae
repnz
inc
sbb
leave
sub
inc
push
fstpt
cmpl
out
pop
iret
cli
lcall
outsb
and
dec
xor
and
mov
jno
mov
clc
push
shrb
sbb
lretw
cmc
or
jecxz
cltd
or
in
fiadds
ss
mov
inc
outsb
in
lret
pop
in
mov
cmp
jl
std
mov
loopne
in
pop
ds
testl
shrl
cwtl
int
lret
or
in
inc
in
addl
aaa
jmp
cmc
sbb
jmp
out
xlat
jecxz
imul
fsubl
std
test
leave
adc
xor
dec
mov
popf
mov
mov
inc
bound
imul
or
push
fdivrl
fcoml
sbb
pushf
cmp
inc
xor
stc
push
lods
lods
out
pop
lock
aas
jp
cmpsl
repz
lock
xchg
cltd
jmp
sbb
jge
add
mov
imul
lods
add
jmp
dec
jmp
sti
sahf
xchg
xchg
sti
mov
or
push
cli
data16
mov
xlat
mov
pop
lret
xchg
cmp
les
out
inc
sti
xchg
mov
loope
out
mov
pop
and
adc
push
nop
ret
push
hlt
test
push
les
dec
or
ret
push
cmp
aas
and
mull
sub
es
cmp
inc
popa
movsl
push
lcall
cmp
pop
mov
fadds
out
xchg
fwait
push
ds
pop
lea
pop
xor
sahf
stos
xor
mov
outsb
rcr
loop
pop
fs
xchg
in
cwtl
mov
rcrl
sbb
out
adc
sub
jns
nop
xchg
push
cmp
shll
out
pop
repnz
mov
dec
or
jmp
ficompl
sbb
dec
add
mov
mov
addr16
imul
cmpsl
push
repz
aad
in
cmp
insl
sbb
rcl
sub
sahf
xchg
cmc
dec
mov
fisubl
ja
jnp
lea
mov
mov
sahf
insb
in
clc
sub
jb
jns
cld
insl
add
mov
mov
pop
in
pop
or
fmul
cmp
sub
movsb
mov
int3
sub
enter
clc
cltd
arpl
mov
cmp
xchg
lods
or
pop
xchg
out
inc
stos
fbstp
in
or
jns
mov
and
je
mov
ljmp
ljmp
cmp
xor
mov
cmp
cwtl
xchg
pop
inc
dec
dec
xchg
xor
lea
andb
test
xchg
cmpsb
add
mov
out
xchg
int
sub
ljmp
inc
xchg
int
xor
pop
adc
inc
dec
mov
push
test
sub
xor
jle
shrl
push
cmp
fnstcw
js
mov
addr16
roll
jp
or
adc
mov
fistl
cmpsb
daa
lods
sub
hlt
sbb
add
xchg
inc
fwait
push
or
mov
int
add
sbb
je
pop
cmpsb
add
enter
test
or
out
fnstsw
test
adc
jnp
movsl
jge
aam
fdivl
and
inc
cwtl
mov
jmp
fcmovnbe
nop
ss
cmp
mov
jg
into
imul
lret
sub
ljmp
jae
push
fnsave
cmc
add
aam
mov
aam
cltd
xchg
shl
xor
cli
stos
push
testl
arpl
mov
mov
xlat
stc
imul
out
lods
repnz
punpckhdq
cwtl
lahf
daa
push
dec
ss
mov
mov
sbb
or
popf
fisubrs
jbe
scas
or
xchg
mov
jecxz
stos
jecxz
fsubrs
pop
stos
pop
in
push
mov
cmpsb
or
mov
pushf
xor
loop
shll
mov
cmpsb
xor
pusha
in
cwtl
or
sub
fisttpl
xor
test
or
or
adc
mov
movsb
fistl
test
imul
or
push
xchg
fwait
dec
and
cltd
in
aas
test
push
rolb
xchg
cmp
lods
test
or
inc
addl
push
xchg
std
aas
ds
enter
pop
out
sub
lods
pop
pop
fsubs
bound
cs
adc
jb
pop
and
jg
and
pop
movsb
mov
movsb
shll
loop
add
daa
sbb
inc
mov
sti
fistl
xor
add
and
ja
mov
xchg
mov
aad
mov
out
xor
jl
mov
idivl
cmp
jno
in
sub
xchg
mov
sub
jmp
sbb
pop
mov
sbb
mov
dec
ja
or
dec
sbb
imul
jne
shll
fcmovnu
ja
push
sub
loop
xchg
cli
aas
lods
std
adc
jg
das
mov
sbb
lea
jbe
stos
lret
cwtl
or
jmp
int
cmp
out
inc
inc
dec
fnsave
rorb
pop
adc
and
lock
push
and
pop
ret
aaa
ja
mov
popf
xor
mov
or
aaa
stc
add
jecxz
push
push
inc
mov
or
rcll
pusha
xchg
fwait
outsl
pushf
aas
push
out
aam
xchg
sbb
loopne
inc
scas
adc
push
mov
popa
negb
xchg
in
fstps
mov
mov
js
xchg
bound
mov
xor
sahf
enter
pop
loop
outsb
add
pushf
mov
faddl
lcall
in
insl
inc
fstl
aad
dec
or
cltd
push
ret
std
mov
sub
sbb
cmp
test
lret
mov
push
out
sbb
jo
fwait
cmp
pop
out
xchg
int3
leave
sbb
jecxz
lds
notb
sti
sbb
sub
call
scas
xchg
nop
test
lods
pop
rorb
dec
jbe
mov
pop
cmc
jnp
repnz
inc
mov
lcall
in
inc
mov
pop
ret
adc
test
ret
sbb
incb
mov
fprem
jno
inc
adc
jmp
dec
add
arpl
push
shl
sbb
jbe
sub
movsl
mov
dec
jmp
in
or
xor
mov
sbb
ret
jmp
or
dec
jge
rorl
xor
mov
fistl
fisubrs
inc
and
mov
in
outsb
pop
jo
ret
rorb
hlt
dec
pop
jae
xchg
enter
int
pop
in
jp
mov
dec
xchg
rolb
in
cmp
mov
outsl
pushf
jns
ljmp
stos
adc
push
ret
icebp
rcll
fisubrl
cmp
cli
sbb
test
pop
lds
jnp
adc
xchg
popa
movsb
lret
daa
lahf
ror
shrl
ret
adc
stos
pusha
push
or
push
mov
xchg
jge
in
lods
adc
insb
test
pop
jmp
sub
popa
out
pop
sahf
mov
pushf
xchg
cmp
fwait
and
cmpsb
dec
lcall
icebp
fidivl
or
adc
jecxz
lret
jp
mov
mov
fsubrs
mov
cmp
lock
popa
inc
dec
pop
lds
fdivrp
cwtl
lods
add
gs
insb
mov
sbb
or
pop
cli
out
aaa
imul
and
andl
cmpsb
insl
dec
cmp
add
cmp
dec
adc
or
stos
adc
adc
test
insl
sub
gs
sub
xchg
data16
push
fst
shlb
push
loopne
out
dec
push
filds
lods
clc
cmp
jo
repnz
fildl
aaa
add
inc
lods
xor
in
xlat
mov
sub
xchg
adc
adc
test
js
loope
and
dec
scas
fsts
or
popa
dec
sti
xorb
ss
leave
cli
pop
scas
jmp
mov
cld
inc
or
rclb
cmpsl
les
mov
out
xchg
lds
mov
dec
lds
mov
push
mov
jg
xlat
pop
push
sub
setle
daa
cs
fildl
mov
dec
and
in
std
fcmovnu
ljmp
jle
or
fsubrp
movsb
test
push
mov
push
lcall
sub
fwait
iret
rclb
pusha
testl
popa
in
icebp
inc
xchg
and
mov
fs
aaa
sbb
aaa
fcoml
aam
inc
cmpsb
mov
dec
inc
movsl
adc
test
push
fistl
add
pop
lock
scas
sub
push
int
sbb
sbb
add
ljmp
test
jns
cmp
in
int3
sbb
test
aas
mov
das
pusha
nop
dec
xor
add
std
gs
push
lret
cmp
into
pop
add
xor
mov
and
movsl
sbb
mov
mov
das
lods
loopne
hlt
es
cmp
or
into
push
jmp
lret
mov
xchg
idivl
sbb
mov
cmp
movsb
enter
inc
notb
inc
lret
lret
jns
sub
cmpsb
or
aaa
jo
shll
xchg
lea
cwtl
lret
stc
fwait
popa
jnp
sub
mov
loope
sbb
mov
add
pop
cs
out
mov
mov
jp
in
cmp
cwtl
test
sub
out
bound
mov
xor
cltd
out
pop
in
add
mov
jb
sti
les
flds
pop
dec
jns
xor
jae
out
scas
int3
inc
mov
sub
fcoms
inc
test
pop
jecxz
xchg
xor
lret
xchg
sub
cmp
lcall
dec
roll
push
subl
push
bnd
insl
das
push
int
mov
cmp
fcmovnu
dec
out
mov
out
stos
dec
arpl
pusha
mov
mov
cld
rcr
mov
mov
dec
sub
sbb
cmp
jns
ds
addr16
push
lcall
ss
loopne
enter
or
js
daa
pop
and
pop
mov
inc
cwtl
xchg
inc
stos
jns
stos
stos
xchg
and
adc
push
push
pushw
dec
sub
pop
xchg
insb
mov
pop
iret
cmc
mov
inc
aad
mov
dec
mov
out
nop
xchg
pushf
subb
aas
cs
fsubs
sub
xchg
jecxz
mov
push
add
dec
inc
sub
repz
popa
ficomps
lds
nop
in
decl
or
mov
lods
aas
scas
test
pop
es
in
rclb
pop
inc
xchg
inc
into
pop
test
and
test
imul
sarl
push
aaa
scas
aaa
cwtl
mov
inc
xchg
cwtl
mov
mov
inc
addr16
repz
mov
pop
pop
xor
ret
jg
gs
addr16
xchg
js
push
or
mov
add
fxch
aad
test
testl
sub
lcall
jb
sub
lods
mov
lods
jne
mov
rcll
in
insl
or
pop
stos
insl
btc
cli
sti
lods
pop
stos
adc
add
ja
or
in
xchg
adc
call
add
loop
cmpsl
dec
out
or
loope,pt
insl
cmpsb
stos
pop
lahf
xor
xchg
pop
inc
sbb
in
ret
jae
call
lds
and
in
sub
ss
sbb
dec
imul
fbstp
inc
push
pop
test
mov
hlt
stos
std
jae
mov
test
fdiv
or
popa
cltd
sti
into
or
pushf
push
pop
mov
and
ret
push
or
sahf
addr16
mov
leave
dec
rcrb
xor
enter
out
jge
sub
ficoml
xchg
mov
mov
mov
daa
xchg
test
mov
cmp
fmuls
arpl
push
ja
mov
and
pop
adc
clc
in
or
pop
bound
aas
imul
push
lahf
pusha
xchg
xchg
cwtl
mov
orl
push
sbb
popa
pop
pop
scas
cli
ljmp
sbb
pop
fstl
std
int
lcall
dec
mov
fists
dec
adc
pop
xor
insl
call
dec
push
aaa
fnstcw
mov
pop
jge
jo
ds
cmpsl
cmp
jle
mov
xchg
cs
or
xor
addr16
arpl
pusha
repz
jle
mov
xor
adc
push
sbbb
fcoml
dec
inc
loope
push
adc
ret
popf
rolb
inc
popf
mov
mov
and
insb
addr16
inc
stos
push
push
rcrl
aas
mov
daa
imul
inc
stos
sub
jb
outsl
xor
xlat
push
les
fcoml
mov
imul
cltd
dec
rcrl
mov
jl
rorl
cmpsl
divb
nop
inc
pop
inc
lahf
lock
enter
arpl
jae
out
cmp
jnp
cli
arpl
push
popa
dec
pushf
ret
mov
sbb
inc
cmp
cmpsl
in
push
pop
dec
inc
mov
into
imul
fwait
imul
or
or
clc
cmpsb
xor
or
sbbl
sbb
test
std
push
ret
inc
xor
xchg
out
dec
push
sbb
ja
inc
mov
cli
xor
movb
fs
pusha
insl
das
jecxz
cwtl
call
mov
or
push
fstps
xchg
jo
lock
cld
lds
stos
pop
cmc
xchg
test
pop
aas
and
and
in
lret
in
push
sbbb
mov
jmp
inc
das
pop
pop
fnstcw
push
out
ret
adc
mov
cmpb
sbb
inc
push
nop
out
mov
dec
sbb
pop
fs
cmpsb
cmp
adc
sti
mov
bnd
cli
jmp
jns
adc
xchg
into
stos
cmp
adc
arpl
push
nop
xor
xor
cmp
je
les
cmp
les
jb
lret
mov
movsb
inc
jnp
xchg
xor
aad
out
fdivrl
lock
scas
filds
sbb
cwtl
test
in
mov
mov
int
jne
or
popa
dec
add
cli
enter
mov
mov
push
js
ret
and
push
push
jne
dec
jg
data16
jns
fstl
and
adc
dec
in
fistps
not
xchg
sbb
das
dec
push
stos
imull
aaa
repz
adc
jp
jb
cmovnp
test
inc
ficoms
lods
gs
cwtl
sti
adc
mov
out
mov
add
ja
push
xchg
cmp
sub
insb
call
dec
cmp
lods
inc
jo
jb
std
dec
test
xchg
xchg
push
popa
ret
out
cmpsb
mov
pusha
cmpsl
fiadds
lahf
xor
add
or
xor
push
pop
inc
incl
scas
aad
push
enter
ss
out
or
pop
ljmp
jp
rol
jb
pop
aam
mov
hlt
push
add
int
mov
les
iret
in
adc
pop
mov
inc
pop
shll
imul
fildll
push
push
scas
sar
fwait
mov
insb
dec
push
push
and
pop
xchg
leave
xor
push
or
int3
inc
jle
cmp
fstp
movsl
iret
sbb
test
shrb
icebp
cmp
mov
sub
cs
sbb
push
xor
mov
fs
jle
mov
ljmp
fwait
jmp
xlat
ds
xor
sub
xchg
sub
xor
out
add
loopne
xchg
push
mov
rol
repz
or
push
out
imul
pop
mov
and
stc
jp
xlat
lea
loope
call
push
fmul
lds
js
loopne
xchg
cmp
stc
std
pop
sbb
mov
nop
dec
lods
dec
dec
leave
jl
adc
mov
lea
aaa
sub
inc
icebp
popa
push
pop
or
je
add
mov
xor
pushf
and
cli
xor
jle
jo
jle
mov
das
test
dec
mov
fprem1
les
mov
imul
je
out
xor
mov
outsl
add
dec
and
fstpt
mov
add
imul
int3
std
daa
fs
in
not
pop
andb
mov
test
mov
cwtl
mov
xchg
mov
mov
cltd
pop
pushf
jae
das
dec
jbe
cwtl
cmpsl
or
jne
and
pop
pushf
fs
jns
in
inc
jge
inc
and
enter
out
scas
cmp
sbb
cmp
xor
xor
cmpsb
push
push
mov
lahf
int
mov
std
cmp
sarl
xor
mov
adc
xor
and
out
stos
cmp
ja
call
aas
cli
or
sbb
pop
xchg
xor
cmp
sub
mov
ret
inc
scas
in
mov
decl
lods
jnp
mov
jne
ret
mov
pop
pop
cmpsl
cli
shlb
jle
jmp
dec
and
cmp
pop
mov
adc
sub
pop
in
xchg
mov
xchg
sar
jg
sub
sbb
cmpsl
aam
mov
orl
scas
pushf
adc
or
mov
outsb
imul
or
push
cmpsl
rcrb
xchg
xchg
and
pushf
mov
shll
daa
jmp
mov
addr16
repz
mov
fcmovbe
outsl
test
sub
push
or
jnp
in
dec
cmp
fadd
sbb
pop
xor
int3
dec
sub
nop
imul
cmp
insb
fs
ljmp
insb
scas
mov
fwait
jge
cmp
hlt
out
test
bound
loop
pop
mov
xchg
inc
mov
sahf
pop
inc
or
cmp
fimuls
test
icebp
push
push
scas
mov
xchg
mov
push
inc
ja
and
jae
mov
push
in
jne
mov
popa
outsl
dec
jmp
xlat
loope
adc
fwait
iret
sbbb
pop
xchg
inc
adc
scas
xor
xor
hlt
jge
aam
xor
jb
xchg
ds
fistps
test
or
lock
xor
mov
mov
push
mov
gs
adc
jecxz
stc
cmp
sbb
cmpsl
pop
mov
lret
test
lret
xor
sbb
aam
jns
flds
out
js
mov
cld
sbb
pop
clc
call
test
inc
mov
pop
ficompl
adc
popa
pop
dec
adc
jne
adc
pand
cmc
xor
leave
jle
push
jecxz
cmp
lods
int
mov
sbb
cmpsb
sbb
out
scas
sub
in
into
test
sbb
and
popf
jg
sti
add
dec
ljmp
adc
pop
xchg
test
repnz
mov
dec
testb
xor
aas
pop
loopne
dec
and
inc
leave
aas
imul
and
cli
out
pop
shl
fimuls
test
int
mov
movsl
cmpb
xchg
inc
stos
jo
pop
mov
shll
pusha
shrl
icebp
mov
jge
insb
call
inc
push
cltd
adc
dec
jnp
aam
push
ds
sbb
jb
cmp
cwtl
fwait
cmp
scas
mov
xchg
scas
bound
and
mov
int
pusha
movsl
in
cmp
cltd
scas
pop
cwtd
mov
movsb
into
adc
repz
insl
popf
adc
dec
in
dec
mov
sahf
mov
xchg
pop
and
add
lret
mov
sbb
int
or
add
jmp
xchg
pop
nop
lds
out
dec
or
cltd
in
adc
cli
out
xchg
push
push
loope
and
add
and
mov
cli
xchg
jge
cmp
int
dec
addb
lret
aad
push
incl
aas
mov
imul
int3
loopew
mov
adc
pusha
add
fistl
pop
lods
add
mov
push
stc
cmp
mov
imul
mov
lahf
cmc
hlt
xor
arpl
mov
jmp
pop
xchg
js
sti
in
pop
lds
or
add
mov
js
rorb
and
mov
and
popa
xor
fists
push
daa
popf
pop
mov
pop
loopne
aas
pop
les
scas
out
push
int3
in
mov
adc
lret
cmpsl
idivb
vcvtsd2si
in
inc
lcall
mov
mov
mov
arpl
mov
adc
mov
dec
mov
cmpb
bound
pop
aad
pop
jmp
lods
cmp
das
addb
adc
lret
dec
mov
lods
lods
mov
pop
jmp
cltd
and
sbb
out
cmp
loope
cmp
aam
push
xor
ja
mov
es
xor
hlt
cmp
cmc
pop
cmpsb
loopne
ds
cmp
idivl
adc
inc
jg
test
movsl
int
lret
cmp
mov
gs
call
divl
xor
enter
lds
mov
mov
add
cmp
mov
jle
mov
push
rcrb
dec
sub
scas
stos
insl
xchg
aaa
dec
mov
xchg
mov
mov
push
adc
cmpsb
jno
lretw
movsb
xchg
fisubl
push
stos
mov
filds
xor
or
lods
or
cmp
mov
mov
cmp
cmp
movsl
movsb
cs
rcrb
sbb
push
push
dec
enter
mov
pop
inc
dec
jne
cmp
add
mov
repz
cmp
iret
enter
push
push
cld
ljmp
cli
jo
out
sahf
jge
test
jge
push
cmp
jno
pop
mov
pusha
loope
outsl
divb
cmp
ljmp
push
data16
pop
inc
mov
add
jno
psubb
int3
int3
fnstsw
daa
xor
add
aam
xlat
jne
jge
fistpl
stos
push
add
cmp
enter
xor
test
push
or
in
push
mov
xchg
jb
adc
daa
jle
jl
push
out
rolb
pop
scas
xchg
adc
push
lds
adc
test
lea
mov
daa
dec
or
adc
jg
rclb
subb
or
jmp
pop
push
ss
push
insb
xchg
pusha
in
dec
mov
fcoms
sbb
jmp
scas
cmp
sub
jp
xor
jbe
dec
mov
ja
push
daa
rolb
aad
cmpl
sbb
fs
or
lds
cld
bound
sub
mov
das
je
stos
cmp
cld
ljmp
add
adc
in
cmp
inc
jns
cmp
mov
jle
jl
in
mov
es
sbb
mov
xor
flds
jmp
mov
pop
jae
or
in
sub
cld
sti
mov
mov
iret
out
in
mov
cli
int3
xor
push
mov
popf
add
popa
push
daa
hlt
mov
and
xchg
call
movsl
push
imul
xchg
mov
inc
das
mov
mov
xor
add
je
loop
and
jp
or
jno
adc
mov
pop
stc
jp
push
dec
scas
rcrb
repz
xchg
inc
arpl
fnstenv
or
bound
xor
adc
mov
jle
cld
andl
clc
outsb
jp
mov
sahf
in
call
cmpsl
and
out
inc
mov
out
mov
or
inc
or
and
outsl
out
fidivl
mov
or
bound
mov
pop
sub
mov
out
shrl
loope
movsl
pushf
inc
xorl
stos
aas
iret
pop
mov
clc
mov
hlt
xchg
push
adc
cmpsl
jg
cmc
jle
jns
nop
les
aad
inc
jno
mov
xchg
sahf
scas
xor
test
pop
aad
pop
fisttps
mov
add
mov
in
push
and
sub
aad
adc
add
fists
jns
movsb
sti
mov
inc
cmp
sub
dec
xor
mov
outsl
push
jno
movsl
loop
add
les
movsl
decb
andb
les
cmpsl
fs
dec
dec
int3
pop
and
sbb
add
cmp
pop
sub
mov
mov
je
inc
imul
pop
out
pushf
cmp
adc
sbb
add
mov
js
dec
lret
test
cmp
sub
jl
mov
xchg
test
and
cmpl
ss
cli
sub
jl
add
mov
inc
lret
or
cmp
push
push
gs
sbb
mov
push
imull
sbb
neg
int
test
arpl
sbb
jb
push
or
pop
inc
xchg
push
xchg
and
xchg
fs
dec
cmp
push
lea
jp
adc
addb
es
out
sbb
xchg
hlt
fsubrl
loope
out
test
jle
or
mov
test
push
jbe
test
jp
mull
fistpll
cmp
in
jg
add
roll
pop
dec
sub
xlat
mov
fstl
arpl
enter
cli
int3
jl
mov
das
fiadds
adc
dec
insl
clc
leave
pushf
test
pop
popa
mov
cld
adc
add
pop
jle
adc
in
lcall
adc
xor
add
repz
lcall
sub
cli
rorb
inc
aam
inc
mov
inc
mov
ja
outsb
int3
movlps
loopne
adc
xor
cmpsb
or
add
adc
xchg
pop
test
ficomps
insl
hlt
mov
dec
push
and
into
fdivr
test
adc
ljmp
enter
pop
es
pop
and
data16
inc
lret
push
add
divb
enter
int
mov
jmp
or
ret
cmc
xchg
pavgw
lock
fldl
in
jecxz
daa
cmpsb
movsl
push
sbb
jbe
mov
mov
fs
icebp
push
xor
dec
push
imul
sub
aam
mov
mov
shr
mov
xor
xchg
and
dec
mov
cmp
inc
fists
mov
fimull
dec
lret
lcall
rcr
fwait
stos
test
jg
imul
mov
adc
repz
in
dec
dec
add
aad
inc
xor
dec
lods
orl
ljmp
mov
imul
movsb
lods
ret
lcall
and
push
das
xchg
das
mov
fidivrl
scas
xor
or
outsl
add
daa
sbb
inc
pop
xchg
sub
test
push
outsb
sub
out
sub
test
fcompl
lods
inc
sti
and
xor
pop
xor
arpl
sub
xchg
jle
sbb
js
gs
pop
test
pushf
ret
shlb
sahf
js
jae
and
sub
test
add
je
in
mov
cwtl
stos
adc
outsl
inc
dec
push
sub
xor
jecxz
mov
addr16
pop
push
mov
lahf
mov
dec
or
dec
scas
movsb
das
movsl
pcmpeqw
insb
cmpsl
pushf
rcll
imul
mov
into
stc
xchg
lods
jp
in
rcrb
xor
or
dec
aas
ja
bound
imul
in
pop
in
in
sbb
or
sub
push
clc
or
mov
int3
mov
lock
xchg
out
pop
testl
out
fmuls
dec
fsts
orl
push
lcall
xlat
push
ds
sbb
rorb
jmp
mov
stos
or
mov
lcall
ret
aam
insl
inc
lret
rcll
dec
es
lret
flds
push
clc
or
xor
mov
js
dec
and
lds
rclb
push
hlt
stos
or
push
aam
xlat
scas
mov
cltd
movsb
mov
icebp
cmpsl
pop
sbb
xchg
mov
dec
aad
iret
sbb
push
in
jno
add
and
imul
dec
ret
lds
pop
xor
cmpl
push
mov
inc
ficoms
sti
pop
pop
ficompl
in
in
popf
and
pop
xchg
push
cld
aaa
sub
cmp
movsb
inc
push
test
adc
adc
testl
cmpsl
sahf
xchg
scas
sarb
in
lahf
mov
stos
xchg
push
sbb
data16
add
dec
sbb
ret
lahf
lds
xchg
pop
mov
add
cmp
push
xchg
imul
and
cmp
xor
das
test
or
cmpsl
jmp
and
xchg
ret
roll
xor
jb
and
sbb
lret
xchg
jle
pop
lods
dec
enter
dec
stc
in
adc
add
js
adc
dec
rcll
xor
mov
push
test
push
ljmp
xchg
cli
mov
arpl
loope
incl
mov
xor
leave
xchg
ja
or
jp
jl
sub
jp
mov
mov
icebp
push
rclb
inc
sbb
int
call
cmp
data16
pop
leave
inc
rep
cmp
add
mov
pushf
adc
insb
in
or
fs
iret
mov
or
faddl
push
clc
lods
sub
lret
rcrl
mull
dec
mov
pop
sti
sub
jb
mov
popa
sbb
test
hlt
push
xor
lds
or
push
add
mov
push
push
push
pop
fsts
or
push
ffree
lahf
add
sahf
lea
mov
sbb
xchg
xor
movsl
dec
ss
in
movsl
subb
js
out
sbb
js
fisubrs
cmpsl
outsb
xor
mov
stos
int3
minps
or
in
push
push
xchg
into
mov
mov
add
mov
ret
adc
jnp
inc
dec
scas
jle
adc
gs
ret
enter
das
in
stc
cmp
int
inc
enter
jle
push
mov
insl
cwtl
out
dec
aaa
jnp
cli
xor
jbe
lods
popf
fiadds
pop
jge
lods
out
fldl
daa
mov
sbbb
ljmp
and
xlat
jne
pop
in
imul
jnp
gs
push
mov
jo
dec
xchg
jg
sbb
int
out
fisubrl
mov
bswap
insb
ss
or
outsb
shrl
inc
out
aam
pop
push
jnp
loop
mov
sbb
xchg
sbb
loope
mov
test
sahf
xlat
dec
cs
lock
outsb
or
jno
inc
sub
fildll
dec
incl
mov
js
pop
and
inc
adc
enter
shlb
icebp
mov
inc
ds
cmp
repnz
lret
pushf
or
lods
pop
or
mov
push
mov
push
in
push
loopne
push
sbb
inc
mov
mov
addr16
pop
in
push
mov
jae
sbb
mov
jecxz
push
sbb
push
scas
fwait
mov
jb
pop
push
dec
cmp
dec
push
push
push
fwait
mov
aas
in
mov
xchg
shr
sahf
mov
gs
fdivrl
je
js
shrl
push
jnp
arpl
or
lret
pop
pop
jb
stos
push
rcrb
test
rcll
adc
jl
aas
mov
inc
dec
adc
and
or
pop
out
cltd
jl
add
adc
xchg
fmuls
fsubr
add
jae
jl
and
and
fsubr
mov
sub
int
lret
or
cmp
pop
xchg
imul
loopne
enter
cmp
jecxz
incb
mov
in
cmp
repnz
jecxz
add
test
jnp
sti
pop
and
ret
push
ret
or
push
pop
and
fs
mov
pop
mov
incb
inc
sbb
rclb
sub
mov
jno
leave
loopne
test
cmpsl
lret
xorl
mov
fnstenv
cmp
clc
mov
iret
inc
inc
jbe
lock
and
gs
sbb
jle
jne
fwait
je
push
and
pop
sub
int3
inc
lods
cmpsl
aaa
mov
push
js
add
test
inc
mov
fsubrl
jl
loop
pop
outsl
dec
scas
push
xchg
sbb
dec
loope
stc
sbb
jne
xor
ljmp
sbb
andb
pop
cwtl
cld
mov
adc
lods
and
xchg
sub
outsb
stos
rorb
xchg
xor
cmp
outsl
mov
xchg
inc
add
sub
cmpsb
mov
out
daa
mov
sbb
lods
or
data16
inc
add
adc
shl
bound
jle
xor
out
pop
pusha
jmp
push
xor
adc
sahf
dec
jae
or
xchg
das
out
loopne
sbb
out
adc
test
outsl
js
dec
inc
pop
cld
jg
repnz
scas
je
mov
test
xor
add
jge
sti
mov
sbb
inc
push
and
cmpsl
push
or
ss
int3
mov
ja
pushf
ds
cmp
pop
sbb
fidivrl
add
fildl
pusha
loopne
shll
imul
scas
sub
stos
ret
loopne
cmp
stos
stc
test
mov
jl
sbb
mov
lods
outsb
and
cmc
dec
daa
sbb
fcmovu
jbe
movsb
add
inc
ja
lds
and
and
cmp
mov
js
lods
scas
in
lods
cmpsb
out
lret
cs
pushf
xor
jnp
adc
mov
js
fcmovne
pop
inc
add
aaa
int3
sub
push
adc
adc
test
sti
loope
shlb
jg
cmp
or
arpl
sub
adc
fsts
sbb
push
mov
lret
cmp
ret
cld
push
add
lahf
jg
xlat
jnp
cmc
inc
dec
push
das
loop
pop
mov
loopne
idiv
lock
call
sbb
jnp
es
mov
fdivrl
dec
rcll
sbb
jmp
jo,pt
incl
sub
xchg
mov
xchg
pop
sbbl
rcr
ficompl
cmp
.byte
sbb
add
inc
add
pop
jnp
mov
in
ret
fs
dec
pop
shll
mov
inc
pop
adc
fisubl
out
add
lods
mov
adc
jnp
sahf
jge
inc
mov
xor
sbbl
cs
mov
inc
fdivl
fistpll
aaa
out
and
inc
push
cld
and
imul
popf
hlt
rcll
cmp
popf
out
mov
adc
cmpsl
push
hlt
aas
xchg
inc
inc
push
shrb
jl
int
mov
imul
sahf
hlt
and
call
fiaddl
dec
or
mov
add
clc
adc
add
aaa
arpl
adc
dec
sub
loopne
jge
mov
fs
mov
mov
bound
loop
ret
cli
dec
ds
inc
arpl
imul
push
lret
call
inc
mov
mov
jb
xchg
push
in
pop
shlb
stc
push
fwait
jg
mov
call
mov
pop
sub
push
scas
test
and
add
dec
lcall
incl
xor
jl
stos
mov
jge
cli
subl
imul
imul
outsb
insb
pop
cmpsb
cmp
fprem
imul
pushf
retw
jae
shlb
aad
xchg
movsl
sti
xor
insl
sbb
test
fldcw
add
addr16
call
imul
pusha
stos
sub
leave
nop
inc
sbb
test
fists
pop
pop
mov
mov
xchg
popf
mov
add
adc
mov
cltd
jo
cs
cmp
fistl
adc
inc
shrb
push
xchg
testl
dec
cwtl
fwait
lods
sub
adc
ret
movsb
and
imul
push
mov
or
loope
in
fwait
add
mov
ja
mov
mov
in
rcl
popa
and
sbb
xchg
fnstenv
call
sub
cmp
mov
mov
inc
repnz
mov
loop
or
push
in
or
mov
pop
mov
in
mov
loop
inc
emms
mov
or
xor
pushf
add
sub
lods
cmp
aad
adcb
scas
adcb
adc
leave
dec
dec
shrl
add
jge
mov
inc
xor
jp
int
paddb
insb
mov
jns
into
mov
or
adc
xchg
mov
sbb
ja
fidivrl
shrl
push
hlt
mov
cwtl
and
andl
fmul
xchg
ljmp
shlb
pushl
pop
dec
les
rorl
dec
mov
cwtl
xchg
cli
movsl
sub
inc
sbb
fmul
sbb
jb
mov
push
loopne
ret
and
push
add
mov
icebp
cmpsl
inc
mov
push
ds
sbb
xchg
imul
fdiv
pop
mov
leave
int3
cmp
dec
jmp
inc
es
xchg
push
adc
std
xor
xlat
inc
and
adc
inc
icebp
pushl
xchg
mov
es
cli
and
mov
ret
pusha
push
adc
xor
xchg
in
stos
ja
outsl
pop
jns
pop
cmpsb
mov
nop
xchg
js
or
dec
jbe
fcoml
inc
dec
jo
das
sbb
fstpl
adc
cld
xlat
aaa
mov
sub
dec
stos
adc
push
insl
iret
add
adc
ss
lcall
stos
cmpsb
das
adc
sub
and
dec
insl
leave
cmpsb
fidivl
ret
rcrb
imul
gs
cmp
jb
mov
pusha
inc
insl
sub
mov
add
lods
adc
lods
testl
icebp
pop
int3
pop
dec
fwait
les
popf
xchg
mov
mov
pop
inc
or
sbb
jmp
outsl
clc
sub
loopne
cs
sbb
enter
add
add
and
adc
repz
dec
fsubrl
mov
push
inc
dec
mov
arpl
es
ret
inc
rcll
outsb
xor
sahf
sub
sar
mov
mov
imulb
lahf
and
call
sub
in
push
dec
sbb
pop
or
inc
stos
jae
jp
pop
mov
push
sub
mov
loope
dec
sub
and
cmpsb
pop
lret
mov
and
cmpsl
rcrb
dec
fcmovnbe
sbb
fstp
fidivl
mov
stos
std
sahf
fxam
or
mov
call
test
jns
cmp
dec
outsb
jnp
pop
push
pusha
dec
cmp
fcoml
int
nop
lds
incl
and
jns
sub
push
pop
pop
sub
test
stc
push
jb
adc
inc
pop
inc
mov
idivb
out
test
je
jae
fnstsw
pop
lods
out
mov
push
adc
mov
add
in
xchg
mov
push
insl
popf
ret
and
push
shlb
ja
fdivrl
dec
js
push
sahf
fisubl
cli
movsl
sub
and
dec
xor
mov
sbb
js
xchg
mov
incl
out
pop
scas
leave
std
and
loop
inc
fiaddl
mov
std
sbb
mov
pop
sub
xchg
push
inc
in
mull
jg
out
or
ret
jecxz
or
scas
pop
std
scas
or
and
inc
xchg
xor
and
loope
outsb
mov
or
inc
dec
scas
in
xorl
lods
sbb
mov
imul
popf
clc
popf
inc
add
pop
fmull
repz
mov
movsb
mov
mov
sub
xchg
fidivs
sbb
pop
xchg
xchg
outsb
out
cld
mov
fsub
loopne
leave
jl
pop
dec
mov
pop
popa
mov
xchg
shrl
test
fsubr
aas
push
jo
ss
inc
inc
push
adc
and
jg
jp
cmpsl
fstpt
push
cld
mov
xchg
dec
test
cmp
xchg
sahf
pop
das
sub
out
clc
in
out
xchg
xchg
jge
mov
test
loopne
jecxz
pushf
dec
shl
in
inc
stos
arpl
fimull
lret
rolb
cmp
in
scas
enter
mov
push
movl
movsb
pop
mov
and
lcall
insl
xor
add
dec
gs
scas
fistps
pushf
mov
ss
insb
imulb
ds
in
jecxz
and
cmp
fbld
sub
bound
sbb
movsl
push
cmpsl
push
lret
jns
testb
jne
mov
js
scas
cmp
mov
movsb
call
addl
hlt
sbb
sahf
in
jg
jo
insb
mov
mov
pop
mov
popa
jg
leave
rclb
xchg
shrb
loopne
lret
in
out
sbb
insl
add
sahf
hlt
shld
fabs
sbb
or
pop
dec
bound
int
bound
ret
push
ficoml
dec
jmp
dec
mov
rcrb
fcomip
jae
pop
cs
cli
jg
mov
cmp
loope
or
fbld
push
fisttps
adc
movsb
outsl
sub
push
movb
adc
mov
test
mov
xor
dec
cld
and
repz
and
int
shl
pop
xchg
dec
push
sub
cmpsl
push
add
push
jbe
xor
mov
data16
inc
push
push
push
sbb
jbe
dec
push
fmuls
hlt
push
jmp
in
or
fdivrp
mov
lcall
in
rcl
mull
dec
mov
xor
ja
lock
ljmp
jbe
or
dec
and
inc
fs
ljmp
fistps
test
mov
adc
adc
and
insl
dec
push
sub
and
shrb
clc
rclb
pop
mov
inc
ret
mov
daa
pop
mov
and
cmpsl
pop
movsl
push
enter
cmc
ficoms
mul
es
sti
out
jg
mov
dec
shlb
lcall
test
push
jbe
xchg
orl
inc
testl
push
xor
inc
test
rcrb
insb
add
cmp
sbb
dec
das
mov
xchg
ret
mov
jns
inc
ljmp
clc
les
push
inc
mov
ja
cmpsb
sbbl
and
cmpsb
test
push
cltd
loope
pop
jp
or
sub
fsubr
xchg
cltd
mov
mov
xchg
sti
pop
sbb
inc
enter
das
mov
fimuls
lcall
xchg
mov
iret
aad
data16
sarl
mov
pushf
sahf
xor
inc
and
arpl
repz
jbe
jno
inc
sub
aas
aad
xchg
por
pop
int3
inc
or
test
sub
pop
out
cmp
xchg
scas
dec
jns
aam
jl
aam
imul
sbb
dec
add
popa
ret
pusha
push
outsl
enter
addr16
insl
int
int3
cmp
addr16
sub
lret
dec
mov
pop
sbb
mov
sarl
cmpb
loop
mov
push
mov
icebp
mov
adc
or
call
scas
mov
add
fst
dec
andl
data16
adc
mov
movsl
mov
push
in
cmp
addb
fdivl
rolb
ret
dec
xor
hlt
fbstp
sub
pushf
or
imul
cmp
cmp
push
or
ds
dec
mov
sub
pop
pop
shrb
outsb
cmpl
add
sti
loopne
test
sub
lods
imul
sub
jne
lahf
jno
xor
mov
stos
cwtl
pop
loop
mov
or
and
adc
fidivs
hlt
jb
ret
and
cmp
int
ficompl
es
inc
out
adc
jle
lahf
push
mov
push
xchg
mov
and
push
push
xchg
cmp
mov
mov
mov
push
lret
outsb
xor
andps
adc
mov
cmp
aas
hlt
push
movsl
shll
mov
fcmovbe
dec
dec
pop
fsubl
xor
mov
xor
sbb
fsubl
in
pop
fstpl
cmp
inc
cmpsb
mov
jbe
ja
and
ret
mov
stos
fwait
add
sub
xchg
out
jnp
and
aas
fdivr
mov
mov
fdivp
or
sub
mov
popa
and
mov
imul
sti
es
lret
jne
fcompl
jp
fwait
in
xchg
sbb
fisubl
stc
push
push
adc
xchg
popa
jb
dec
dec
dec
pop
xor
loope
dec
das
das
jmp
cli
stos
xor
xchg
xchg
movsl
out
add
arpl
cwtl
shlb
mov
jbe
jge
sbbb
pop
dec
xor
pop
sar
and
lods
or
sub
icebp
dec
pop
push
lea
mov
dec
out
sbb
sbb
lods
xchg
ss
jbe
cld
in
mov
repnz
mov
inc
push
mov
out
hlt
or
mov
push
mov
popa
pusha
xchg
mov
and
es
and
out
cmp
insb
aad
adc
rorl
sub
insl
or
bswap
imul
add
lods
call
repz
jo
lret
jmp
test
add
movsb
fsub
loopne
je
jb
leave
aaa
sub
dec
lahf
sbb
es
mov
cld
subb
jmp
pop
inc
jle
insb
mov
pop
rolb
cmpsb
dec
dec
in
push
pop
jp
jns
inc
lods
mov
and
jno
cmp
out
xlat
xchg
or
cmp
push
jge
mov
mov
enter
movsl
fucomp
cwtl
mov
push
mov
jae
push
cmp
lea
push
fildl
jecxz
pop
lea
inc
or
mov
push
sti
mov
add
push
xor
ret
pop
in
in
xor
inc
pusha
in
add
popf
or
lods
orb
mov
sub
push
inc
push
and
sub
imul
loope
lcall
jae
gs
pop
xchg
lret
cmp
insl
scas
xor
dec
stos
dec
rorb
test
imul
fidivrl
in
test
testb
xor
jae
loopne
mov
adc
pop
rcll
add
loop
dec
sub
push
test
sub
into
out
mov
adc
fmull
test
aam
push
mov
sarl
lret
bound
inc
jg
mov
rcl
push
cmpsl
sub
mov
call
jg
push
daa
sbb
mov
repz
mov
mov
mov
inc
test
dec
dec
cmpsb
call
mov
pop
lods
loope
fnstcw
xchg
xchg
js
mov
pusha
dec
mov
push
rcl
outsl
ja
inc
fildll
push
mov
jecxz
cmp
je
push
push
cld
sbb
ljmp
insb
cli
adc
shr
shr
loope
ret
movsb
mov
push
push
mov
xchg
fldenv
fmuls
sar
push
dec
push
xor
xchg
push
sub
mov
repnz
add
sbb
inc
addl
ret
ficomps
jo
or
and
sahf
fnstcw
sub
push
dec
push
or
lods
lahf
aad
in
in
mov
pop
iret
jbe
cltd
pushf
sub
inc
leave
imull
mov
mov
jle
mov
testb
scas
in
int
lods
in
fdivs
xchg
cltd
rcr
xlat
xchg
icebp
lcall
insb
mov
jle
mov
push
push
ss
or
sub
outsb
mov
lea
cltd
lea
xorl
mov
into
cwtl
ss
jge
jge
mov
repz
in
xchg
incb
push
aas
stos
mov
addb
insl
xor
cli
jbe
into
sub
add
imul
bound
ret
push
inc
scas
push
jmp
xlat
dec
sbb
add
dec
push
sub
out
dec
shlw
push
loope
das
mov
push
mov
fidivrl
scas
mov
lret
das
xchg
and
mov
shll
sub
mov
cmpsb
or
dec
mov
inc
ficomps
frstor
into
jg
pop
lcall
je
icebp
inc
mov
mov
inc
cmp
and
fisubs
scas
outsb
adc
stc
cmp
dec
aaa
aaa
xchg
nop
mov
pop
sahf
subb
and
sbb
arpl
jno
push
pop
bound
ljmp
sbb
jmp
movsb
in
xor
mov
int
adc
pop
push
stos
gs
push
nop
cld
mov
sbb
jbe
xor
jo
hlt
sub
hlt
mov
mov
xlat
es
out
jae
js
or
insb
loopne
mov
sbb
gs
jb
fimuls
fisubrl
imulb
jbe
push
xchg
xchg
xor
add
jbe
sbb
dec
xor
aam
je
rcrb
push
out
mov
xchg
or
lret
jnp
jecxz
aaa
out
imull
mov
jae
inc
leave
jnp
jne
inc
pop
xchg
jge
pushf
sbb
loopne
popl
sbb
adc
ret
cmp
xchg
in
lods
push
and
lods
jbe
lcall
xor
fs
hlt
into
lret
ss
push
repz
cmc
mov
sub
sbb
cmpsb
xchg
xor
and
fldenv
into
adc
sub
and
sbb
insb
aad
mov
jecxz
js
sub
mov
shrl
loopne
and
lret
or
lods
and
jo
pop
dec
inc
or
aaa
ret
cltd
lret
adc
jmp
or
sub
mov
mov
jg
or
mov
fwait
sbb
test
push
leave
insb
cmp
sbb
sbb
cmpsb
jo
daa
xchg
mov
mov
fisttpl
movsl
mov
loope
mov
test
pop
arpl
xlat
mov
leave
add
jl
jle
jmp
cwtl
push
xchg
test
add
push
inc
dec
jno
in
pusha
mov
repnz
pop
xchg
ret
js
mov
loope
outsl
or
mov
scas
inc
sub
pop
inc
push
or
clc
or
js
xor
add
sub
jmp
lock
push
int
mov
out
stos
and
je
mov
dec
jno
pushf
pop
into
jns
scas
cli
jg
lock
and
into
push
xor
mov
lods
and
lahf
movsl
jge
mov
or
iret
test
mov
inc
xchg
or
inc
add
and
lcall
sbb
cmp
es
sbb
or
sub
aaa
or
pop
loop
sbbl
lret
xlat
das
pop
sub
add
inc
shrb
xchg
test
mov
rcrb
inc
jecxz
cmp
cmp
lds
loop
in
ret
jecxz
cs
and
inc
int3
xchg
cmp
aam
stos
stos
mov
shll
xor
inc
xchg
iret
jns
push
stc
pop
popf
inc
or
leave
ja
loopne
lods
sub
ss
in
or
fmulp
cltd
enter
lcall
xchg
sub
testb
push
rorb
cmpsb
cmp
inc
jg
stos
hlt
pop
push
jnp
jnp
popa
sbb
pushf
inc
mov
cmp
and
std
or
mov
fidivrs
push
sbb
mov
or
ljmp
inc
jno
jns
xchg
jne
js
and
adc
out
mov
inc
cmc
js
sbb
lods
pop
aas
jl
pop
lret
je
jg
sbb
insb
jmp
cmp
adc
mov
aas
shr
test
repz
test
push
nop
push
stos
data16
mov
jp
lds
pop
xor
dec
dec
aaa
sbb
in
cmp
jae
mov
inc
xor
mov
sub
inc
shlb
aas
dec
lcall
jnp
pop
adc
pop
icebp
in
jo
loop
xlat
dec
lods
lea
into
sub
jo
repnz
pop
push
into
dec
adc
daa
push
push
pop
jne
scas
imull
pop
push
daa
repnz
insl
ja
or
rcr
and
push
nop
cmp
mov
jecxz
mov
cmp
xor
sbb
repnz
xor
push
cmpsl
inc
pop
adcb
inc
je
insb
iret
test
lret
aad
test
inc
aaa
dec
jae
or
push
sub
cmp
imul
pop
sbb
frstor
arpl
leave
dec
mov
dec
test
lods
jecxz
fnstcw
push
sbb
loopne
scas
or
arpl
jmp
mov
push
jnp
repz
es
adc
jns
aam
out
push
inc
pusha
cwtl
aas
fildl
sub
out
mov
scas
add
mov
cltd
cmp
jecxz
mov
sub
inc
pop
idivl
xchg
gs
popf
and
int3
xor
dec
in
in
shl
jns
sub
push
xchg
imul
xchg
add
lahf
mov
lahf
push
shll
icebp
scas
mov
sar
adc
sbb
out
shll
sbb
jge
lods
push
in
ret
cmp
adc
js
xchg
leave
test
out
cmpsb
cltd
adc
ja
mov
push
or
fisubrs
jae
xor
lret
stc
iret
fimuls
jo
xchg
data16
nop
daa
pop
aad
push
xchg
jmp
outsl
mov
lods
rol
sub
mov
lods
push
push
pop
imul
cltd
rolb
lds
in
call
add
xor
or
mov
imul
and
dec
fcmovb
pop
mov
aas
shll
jmp
out
fstps
popf
clc
ljmp
call
sub
jmp
jle
mov
push
test
fcoms
nop
ds
sub
jno
rclb
cltd
cli
lcall
in
cmc
push
push
imul
int3
loopne
ret
xor
sub
jns
xor
pop
aad
push
das
jle
add
and
aam
xor
scas
ficompl
and
mov
cmp
imul
sub
xlat
push
paddusw
mov
jmp
rclb
pop
xchg
lcall
sbb
inc
repz
insb
rorl
in
fwait
xchg
sti
cmp
jbe
xor
jae
xchg
pop
push
ret
jo
fwait
and
or
pop
dec
jno
jbe
out
mov
jne
orb
cltd
push
xchg
and
into
stos
mov
xchg
jmp
test
fcmovb
ss
es
cmpsl
repnz
sbb
pop
lcall
and
hlt
push
xchg
insb
push
jae
cmpl
imul
in
mov
xchg
adc
stos
sub
int
sti
and
xor
xchg
lcall
xor
inc
dec
aam
mov
fwait
imul
jg
sbb
cmp
gs
mov
jp
pop
push
sbb
jbe
xchg
testl
movb
push
jb,pt
xorl
mov
and
ja
fs
and
data16
push
mov
push
into
mov
in
inc
ds
cmp
shll
mov
testl
je
out
mov
fstpt
push
ljmp
into
fstp
addb
cmp
fdivs
or
jge
ficoml
sbb
and
mov
shl
dec
pop
ret
and
shlb
dec
mov
push
mov
push
jae
dec
aas
sub
ljmp
shlb
fldenv
xor
pop
mov
push
call
xchg
mov
les
xchg
inc
mov
jp
mov
xchg
std
push
sbb
addr16
sti
test
hlt
push
xor
gs
icebp
mov
std
fnstsw
mov
mov
or
scas
daa
outsl
push
ret
imul
adc
inc
scas
inc
js
pop
mov
push
jge
adc
mov
orl
xor
imul
ja
repnz
in
lcall
jmp
sub
in
nop
faddp
inc
push
mov
iret
movsl
bound
shrl
jae
jne
inc
xchg
dec
cmc
sbb
adc
lock
sbb
dec
outsl
push
dec
cli
xchg
lcall
enter
xor
mov
adc
leave
sub
push
nop
test
xor
xchg
cmp
or
sub
gs
jns
push
adc
scas
push
xlat
sahf
inc
aad
test
loop
pusha
mov
out
daa
jg
scas
jae
mov
imul
xor
push
mov
sub
inc
xchg
and
mov
xchg
jle
cmp
cmp
cmp
inc
xor
add
mov
icebp
js
and
movsl
in
out
jb
jo
icebp
in
inc
dec
les
inc
fs
mov
idiv
cmpsl
mov
out
in
rcrb
inc
and
mov
mov
addb
add
cli
es
rorb
inc
pop
mov
xchg
mov
ja
loop,pn
cmpsb
push
push
stos
sahf
or
int3
xchg
fmuls
or
lods
mov
clc
sbb
fisttpl
jle
pop
gs
mov
sbb
jb
lret
mov
add
inc
lahf
pop
xor
or
data16
aam
int
lock
pushl
cmp
pop
shll
fidivrl
mov
cmp
bnd
jmp
or
mov
in
or
xchg
add
push
cmp
cmc
jle
xchg
push
shrl
aas
into
rorl
sbb
cmp
xor
mov
mov
addr16
imul
paddb
cmpsb
and
popl
scas
mov
mov
and
mov
xor
mov
scas
cmp
xchg
push
ret
in
mov
push
ret
pop
adc
mov
push
jg
fwait
or
mov
fwait
and
cmpsl
iret
mov
xchg
vpsubusw
mov
or
arpl
lods
cmp
push
nop
sub
xlat
add
cs
dec
or
dec
xor
jg
mov
popf
mov
mov
ljmp
jmp
sub
mov
fwait
push
sbbl
into
jnp
cmp
scas
mov
stos
push
adc
movl
lods
scas
clc
xor
mov
mov
push
inc
call
repz
lock
test
nop
xor
add
or
into
or
imul
or
adc
xor
add
and
repz
push
sbbl
add
outsl
mov
sahf
mov
mov
sahf
stos
mov
outsl
and
cmp
shlb
dec
out
xchg
in
dec
jne
shl
pop
shll
lds
mov
mov
dec
lcall
stos
push
scas
jg
xchg
pop
inc
dec
xor
test
pop
or
xchg
sub
test
dec
mov
ljmp
pop
dec
mov
xor
loopne
rcrb
mov
int3
jno
stc
mov
sbb
jmp
mov
inc
inc
adc
mov
jb
jg
and
push
lds
ja
adc
mov
mov
mov
jae
jbe
mov
dec
cmpsl
mov
and
jb
mov
cmp
sti
out
mov
xchg
cmp
std
std
pop
rorl
sub
mov
cmp
adc
dec
daa
jns
dec
clc
jns
sub
ds
loop
or
pop
inc
int3
in
leave
cmp
test
xor
in
add
sub
xor
push
cs
shll
scas
psrld
aaa
sahf
dec
out
into
lea
sahf
jl
add
mov
sbb
jl
mov
xlat
sub
mov
fwait
jp
cmp
add
ret
or
adc
daa
jecxz
into
sbb
mov
pop
pop
insl
push
inc
popf
sub
push
cltd
sub
repnz
movsl
dec
sahf
inc
mov
fldl
add
sbb
mov
sbb
sbb
clc
push
xchg
sbb
je
notb
xchg
call
out
loopne
inc
mov
iret
jg
data16
xchg
dec
inc
fucomi
jmp
dec
rolw
push
and
xchg
in
push
cwtl
or
lods
mov
dec
fstpt
lods
pop
rorb
js
add
cmp
sbb
inc
into
xor
es
push
add
into
xor
xchg
sub
lds
roll
flds
mov
jle
out
hlt
cmc
jo
movsl
jge
outsl
pop
push
loop
je
popf
testb
xor
jae
in
lods
cmpsb
loop
xor
cmp
jecxz
sub
pop
cmp
xor
jnp
push
dec
adc
iret
mov
mov
out
jbe
lret
test
inc
dec
fwait
push
inc
fs
mov
mov
xchg
test
sub
sub
repz
lret
out
aas
jno
and
dec
pop
std
and
mov
or
cmpsb
adcl
sbb
sub
inc
je
jb
ficompl
test
not
ds
jno
pop
inc
and
icebp
adc
jbe
xor
call
lret
pop
imul
rorl
inc
add
xchg
lea
imulb
inc
imul
xor
test
sbb
orb
mov
out
arpl
xchg
add
insl
hlt
mov
lods
imul
imul
cmp
jbe
inc
push
sbb
jmp
mov
mov
rcll
inc
xor
mov
xchg
rclb
ja
sbb
mov
sub
mov
loopne
lret
inc
dec
jle
inc
dec
jmp
fnstcw
inc
dec
or
inc
adc
or
lret
lds
dec
pop
add
out
ds
cmpsb
outsl
inc
inc
jg
xor
sbbb
scas
push
sbb
jmp
repz
cmp
sbb
mov
dec
in
fsubl
test
dec
call
inc
nop
lahf
imul
jno
inc
jl
add
repz
lods
xchg
push
fbld
xor
xor
iret
aad
push
and
pushf
lret
mov
push
out
loopne
add
add
push
insl
jne
jae
push
sbb
jne
jns
cmp
loopne,pt
lock
imul
fistpl
mov
arpl
mov
jo
jae
push
jns
jo
out
adc
sbb
jns
or
inc
notb
rclb
mov
aas
push
pop
pop
or
lret
cld
inc
scas
leave
mov
in
test
jl
aas
mov
stc
ljmp
cmc
sar
into
mov
scas
out
inc
jo
subb
jo
sub
pop
inc
push
test
fidivrs
lods
loop
mov
adc
testl
push
dec
pop
sbb
sub
inc
es
lods
addr16
fstps
subl
dec
mov
pop
cmp
cmc
xchg
icebp
or
jae
js
mov
push
or
jecxz
fistpl
jns
sbb
into
popf
jp
lcall
sbb
cmp
sub
push
fcmovnu
push
mulb
lret
push
cmc
push
or
aaa
stos
mov
mov
dec
inc
repz
cmp
push
mov
mov
xchg
fwait
and
mov
mov
adc
fiadds
int3
mov
repnz
mov
fwait
mov
jns
push
fldenv
mov
pop
or
add
cmp
lcall
adc
mov
cwtl
xchg
mov
inc
inc
sarl
sahf
insb
cmpsb
inc
enter
aaa
push
jbe
fisttps
lahf
ret
jae
call
sub
push
outsl
pushf
sub
jle
inc
cmp
iret
or
sbb
sbb
neg
sub
jbe
add
push
int3
push
mov
xchg
dec
fsubrp
mov
push
push
rcrb
ss
shll
xchg
fldt
stos
xchg
mov
add
mov
mov
out
jb
and
cmpsb
push
jo
and
xor
add
mov
mov
insb
inc
cmp
std
repnz
sbb
testl
sti
aam
bound
inc
lret
cld
repz
xchg
cmp
test
mov
sbb
lock
gs
mov
movsb
mov
and
adc
aaa
sub
addr16
inc
jbe
or
lods
fdivr
popa
shrl
sbb
movsw
jp
insb
stos
sbb
xor
and
cmpsb
movsb
dec
lahf
adc
pop
mov
stos
jle
lock
inc
mov
inc
insl
dec
pop
pop
int3
pusha
and
mov
add
inc
loope
add
and
repz
bound
popf
loope
js
imul
lock
enter
mov
push
sbb
jb
cmp
push
mov
pop
sbb
xlat
hlt
sti
fidivl
pop
sbb
cmp
cltd
and
adc
and
je
sub
jecxz
out
leave
adc
in
ljmp
ljmp
jns
and
into
and
dec
loopne
push
mov
push
cmp
mov
adc
mov
push
pop
and
test
xor
inc
cmp
into
sbb
dec
shll
pop
roll
inc
out
cmpb
leave
out
inc
cs
xor
add
fcmovbe
fs
adc
or
xchg
aam
xchg
pop
jmp
jge
xchg
dec
xor
int
out
shlb
mov
iret
push
lods
js
mov
or
rorl
insl
cli
mov
fs
lcall
aas
in
and
mov
inc
xchg
hlt
cmp
repnz
and
ljmp
dec
in
jne
jl
cltd
cmp
test
add
lcall
xchg
mov
sub
mov
push
fmulp
pop
mov
fisubl
fwait
mov
stos
mov
sahf
pop
lods
fiaddl
dec
pop
mov
mov
pusha
adc
inc
cmpsb
adc
pop
lret
repz
jbe
aad
mov
or
dec
fwait
pop
lds
mov
jg
xchg
lcall
pushf
mov
add
inc
dec
nop
mov
lock
mov
lea
loope
jbe
xchg
test
ret
mov
mov
faddp
hlt
subb
scas
push
icebp
shrl
or
pop
mov
les
dec
mov
add
pop
enter
lret
pop
movsl
pop
stos
or
fisubrl
pop
mov
sbb
inc
cwtl
inc
sub
add
into
testb
ret
cli
das
xchg
inc
lods
lods
iret
rclb
rcl
dec
adc
mov
pop
inc
dec
push
mov
stc
sbb
or
ljmp
xchg
jo
jne
inc
sbb
xor
adc
enter
jno
vsubsd
and
pop
sub
stos
inc
outsl
lods
jle
outsb
fwait
inc
fwait
xchg
test
fmull
cld
and
or
rcll
iret
popa
or
out
sbb
rcrl
push
push
loop
cmp
int
js
mov
aad
inc
inc
fnstsw
add
roll
out
mov
adc
pop
movsl
push
test
mov
push
mov
gs
leave
mov
rorb
into
push
dec
and
mov
push
popa
aas
xor
popa
or
jbe
dec
cld
dec
mov
sarb
xchg
and
addr16
fwait
mov
add
push
inc
shrb
test
xchg
faddl
ja
xchg
into
movsb
push
push
insb
mov
getsec
mov
test
add
lock
outsl
stc
sbb
mov
lret
inc
pop
iret
xchg
hlt
push
lods
mov
repnz
add
add
xor
jp
out
addr16
subl
dec
xor
inc
cs
add
in
mov
ljmp
mov
sub
cmp
xchg
js
add
pmulhw
aad
sbb
ficoml
movsl
testb
mov
add
insl
dec
test
lods
or
icebp
mov
jg
cmp
jo
cmpxchg
add
pop
mov
add
mov
out
test
insb
pop
movsl
and
ds
mov
cmp
mov
push
rorb
push
adc
and
cld
push
loop
dec
repnz
cmp
out
je
xor
filds
or
push
push
sub
dec
jg
icebp
adc
mov
jo
loopne
stos
adcb
cmp
into
test
aaa
mov
sbb
leave
mov
push
fwait
scas
mov
movsl
les
icebp
hlt
sbb
ret
or
lret
pop
fists
rcll
lock
adc
aas
lcall
or
add
jno
push
insl
mov
aas
inc
jae
pop
sub
aam
mov
and
mov
xchg
lods
enter
push
fdivrl
and
lcall
in
jb
jmp
mov
mov
aas
and
pop
mov
shlb
mov
sub
mov
sub
insl
or
movsb
loop
out
fs
pop
lds
movsb
push
mov
ret
cmp
stc
pusha
jb
call
pop
lret
and
in
cmp
loopne
test
xchg
roll
mov
push
nop
mov
pop
mov
adcb
popa
jle
cmc
imul
sub
fisubl
into
cltd
add
mov
out
js
jno
add
xlat
incl
jecxz
repz
nop
pushf
or
rcr
cmp
les
cmp
mov
xor
sub
and
js
fcmovbe
std
xchg
cmp
fsqrt
and
xchg
mov
fsubrs
dec
int
adc
movb
xchg
test
jle
cmp
xchg
fsubp
cmc
push
or
mov
jns
scas
icebp
stc
sbb
ret
push
leave
inc
jecxz
cwtl
sbb
adc
lds
push
fildll
fsubrl
jl
jecxz
jo
outsb
fst
dec
xor
pop
test
dec
add
xchg
mov
dec
pop
mov
movsl
jae
cs
xor
ljmp
lods
je
mov
sbb
adc
or
fmuls
aas
mov
sti
mov
stos
jmp
xor
in
xchg
lock
adc
in
sti
jnp
mov
movsl
add
test
out
mov
je
dec
aam
inc
sub
inc
out
pop
sub
jge
inc
stc
enter
scas
inc
sbb
lds
push
call
and
popa
test
mov
mov
dec
pop
call
mov
inc
orl
push
pop
push
lock
outsl
sahf
xchg
and
push
add
add
imul
out
mov
jnp
shll
scas
ljmp
dec
mov
pusha
dec
and
scas
es
mov
mov
repnz
inc
mov
and
mov
jmp
in
sub
push
adc
add
sbb
inc
mov
adc
add
add
pushf
aam
lcall
stos
mov
test
and
inc
xrelease
insl
fsubrl
mov
stos
pop
ljmp
add
xchg
loope
xchg
loopne
xor
in
das
fidivs
pop
mov
dec
scas
enter
int3
or
or
sub
orl
addl
movsb
int
and
jno
xor
mov
jns
mov
imul
cltd
push
mov
scas
in
mov
mov
cmp
cltd
icebp
dec
pop
xorl
inc
jge
jl
imul
arpl
out
dec
add
shl
fimull
mov
divb
int
test
or
or
sahf
dec
mov
out
jb
adc
pushf
and
je
xor
push
aad
call
ljmp
jl
and
cmc
inc
fidivrl
push
ret
mov
leave
mov
jbe
in
xchg
push
fnstenv
dec
mov
cld
inc
out
out
jge
xchg
push
add
push
mov
mul
xor
arpl
out
cmpsb
mov
xchg
push
int3
outsl
daa
cmpsl
cli
jne
adc
mov
xacquire
sahf
mov
pop
adc
mov
inc
das
or
mov
xorl
xchg
imul
and
mov
mov
cmp
cs
enter
movsl
adc
cmp
jb
xchg
and
pop
cmp
xchg
jne
lahf
mov
inc
fmulp
xor
in
ficomps
mov
push
dec
sbb
and
xor
leave
mov
mov
cwtl
movsl
cmpsb
adc
and
jl
xor
in
adc
inc
out
push
lahf
dec
test
cmp
pop
push
js
sbb
ja
ret
negl
out
les
iret
mov
std
mov
loop
cwtl
insl
negl
adc
xor
xor
dec
inc
mov
sub
incl
imul
repnz
gs
loop
out
cmpl
or
scas
push
sbb
ljmp
dec
cmc
jle
pushl
imul
ja
jno
cmpsb
xor
pushl
add
jns
inc
add
repnz
call
adc
ljmp
in
dec
lret
in
and
mov
mov
adc
or
xchg
xchg
mov
shrb
insb
fldt
xor
lea
popl
sbb
aam
push
repz
popa
sub
cwtl
lahf
repz
testb
stos
sbb
fprem
ret
mov
idivl
jb
push
mov
ljmp
xor
mov
rorb
xchg
fs
nop
add
scas
push
mov
out
cld
imul
sbb
pop
pop
and
add
popa
rorl
pop
jp
jnp
shrl
stos
outsl
fisubl
lock
dec
cld
jo
mov
or
jne
mov
fldenv
xchg
fiadds
subb
mov
xchg
push
lret
push
push
jp
inc
and
xchg
push
idiv
xor
cmp
pop
loop
outsb
fsubrp
fsubrs
ljmp
sbbb
adc
std
in
cltd
rcrb
pop
fsts
lret
cmp
gs
mov
arpl
aas
and
xchg
es
iret
imul
or
lods
test
inc
pusha
jl
xchg
mov
popf
jmp
xchg
pop
in
xchg
jne
push
icebp
lahf
add
or
and
stc
call
dec
pop
mov
frstor
push
lahf
sbb
inc
mov
adc
rolb
ss
pusha
les
adc
cli
mov
test
es
in
loopne
lods
jg
mov
cmp
jno
shrb
jle
xchg
sbb
sub
xchg
cli
out
fcoml
cmp
outsl
and
add
inc
mov
repnz
cmp
or
loop
inc
sarb
in
pop
mov
cmp
sbb
into
imul
and
in
fistps
ret
rcrb
adc
cwtl
aaa
mov
in
cmp
add
sbb
jmp
popf
es
stc
fistl
std
and
mov
pop
cwtl
mov
sub
clc
add
add
dec
enter
push
sub
inc
nop
leave
sub
fsts
jle
xchg
scas
jecxz
cwtl
cmpsl
mov
mov
test
sbb
into
dec
cmpsb
cmp
lds
sub
cmp
int3
adc
test
je
test
stos
cli
xchg
mov
cli
sbb
and
in
es
lods
rcl
icebp
push
fwait
nop
add
mov
es
jge
jp
pop
mov
lret
jg
repz
sub
jbe
mov
loop
push
mov
dec
cmp
mov
test
leave
push
pop
mov
es
add
mov
mov
std
loop
add
popf
out
pop
pusha
xor
lret
ret
loop
ret
inc
rcrl
loope
mov
popa
cmp
pop
popa
xor
insl
add
cmpsl
mov
mov
mov
inc
sub
cmp
shll
adc
mov
jno
adc
xor
scas
test
mull
mov
out
cmpsl
insl
sbb
rclb
inc
pop
mov
cmp
jmp
dec
daa
push
fldl
lret
xor
std
aam
stos
outsb
inc
stc
adc
dec
mov
add
aaa
std
rol
dec
popf
jne
or
push
insl
or
hlt
jecxz
out
scas
or
mov
mov
mov
mov
mov
aaa
fucomi
std
and
rolb
cmc
jp
ljmp
jb
cmpsl
jns
jb
push
push
js
jb
mov
dec
and
clc
xchg
rorb
pop
iret
test
inc
rcll
decb
or
sti
mov
dec
push
es
push
lahf
add
arpl
push
lcall
jne
js
push
mov
fdivrp
in
sub
sbb
sub
sub
mov
mov
stc
xchg
or
pop
xchg
ljmpw
ljmp
xchg
cs
jl
das
mov
aas
lds
insb
xor
sbb
push
cmc
ss
xor
mov
test
inc
ss
mov
cmpsb
jae
addr16
scas
fistpll
movsl
mov
mov
fwait
std
jmp
dec
or
stc
cltd
pusha
xchg
repz
jns
inc
adc
pop
push
xorl
int
insl
xchg
sub
cmp
std
dec
pop
aam
push
aaa
xchg
add
or
pushf
add
add
pop
pop
or
loop
shlb
pop
stos
add
sub
lcall
test
sbb
pop
push
inc
push
push
hlt
and
and
sub
push
push
cltd
and
mov
pop
jmp
idiv
jo
jecxz
addr16
js
mov
add
pop
push
xchg
sub
scas
ljmp
xchg
push
pop
mov
cmp
inc
add
xor
mov
xchg
push
fistps
cld
fadds
cmp
test
add
insb
fdivrs
cs
sahf
sbb
ljmp
sub
pop
in
daa
or
in
and
pop
mov
imul
movsl
push
add
cmpsb
outsb
dec
test
lods
sub
rorb
push
fcoms
push
insb
lods
out
sbb
loop
cmpsl
xchg
test
icebp
xor
jne
addr16
aaa
mov
aas
stos
jmp
je
ss
lret
ret
aam
jns
push
mov
or
inc
cmp
ds
cmp
loop
and
shl
mov
xchg
adc
sbb
inc
cmp
cmc
sub
mov
daa
inc
insl
inc
mov
insl
push
lea
data16
pop
scas
outsl
dec
ljmp
stos
out
add
adc
loopne
mov
or
ror
mov
inc
push
cmp
jno
sub
pop
popf
xor
pop
mov
lods
or
inc
sarl
jae
fs
ss
ret
in
das
mov
and
cmp
adc
pop
loop
jge
push
mov
in
inc
cld
xlat
mov
adc
aas
jecxz
pop
jl
and
negb
mov
pop
sub
xchg
push
inc
dec
mov
mov
pop
mov
pop
ret
sub
sbb
sti
and
aad
add
inc
sbb
xchg
push
int3
add
inc
je
and
dec
mov
rcll
dec
lea
pushf
sbb
sub
fwait
sarl
push
mov
cmp
fdivr
test
test
or
mov
pop
loope
dec
imul
dec
inc
cmc
pop
les
push
jbe
addr16
xor
lret
and
pop
and
mov
sar
sbbb
sub
or
lahf
daa
pop
xor
gs
popf
dec
es
push
xlat
mov
add
or
xchg
mov
ret
mov
or
enter
decb
lock
ds
test
dec
inc
sbb
pop
fdivrl
int
testb
cmpsl
mov
roll
push
jmp
mov
lret
fxch
mov
xor
cs
shll
pop
stos
pop
fisubs
jno
shrl
xchg
mov
pop
mov
nop
push
inc
xchg
inc
lock
sar
clc
shll
lret
std
andps
leave
and
test
std
mov
cmp
cli
lahf
adc
cmp
out
movsl
jg
xchg
adc
mov
push
pop
test
sbb
sub
inc
repnz
call
xor
lret
hlt
adc
mov
sub
mov
sar
sub
gs
fs
pop
mov
mov
dec
xchg
cld
jmp
dec
cmpsl
add
pusha
out
add
outsb
add
aas
add
adc
sub
cs
push
imulb
test
leave
test
mov
sbb
cmp
add
ljmp
jae
aaa
cmpsb
jnp
cmp
cli
insl
and
pop
cmp
js
mov
xor
sub
mov
mov
jmp
jns
out
out
sti
clc
xchg
mov
stc
movsb
loop
add
mov
pushf
jbe
push
push
testl
stos
mov
dec
hlt
add
stos
dec
stc
lret
and
jno
or
add
dec
scas
shl
mov
fdivrs
data16
mov
js
and
push
mov
int3
mov
adc
mov
cmp
in
inc
inc
ljmp
inc
lock
je
sub
or
in
pop
dec
stos
rolb
xor
or
jmp
pop
mov
push
sbb
sub
in
add
adc
mov
es
mov
adc
jle
and
popa
jmp
and
lcall
sub
ds
fcomps
fbstp
ret
stc
or
ret
inc
repz
mov
adc
lds
orb
cmc
sub
push
jp
out
insl
pop
mov
loopne
mov
push
xchg
loop
adcl
imul
fdivrs
jp
mov
ss
adc
das
push
mov
nop
mov
pop
ret
mov
ja
xor
shl
jmp
jns
and
lods
mov
imul
adcb
mov
add
mov
aad
scas
lds
and
lods
test
inc
pop
enter
push
sbb
mov
mov
es
add
adc
fnstcw
call
cli
push
fadds
rorl
lock
popf
fs
sbb
clc
insl
decb
push
push
addr16
jo
push
pop
les
jo
test
lds
lret
shlb
outsb
add
push
imul
xchg
mov
test
fistpl
dec
xor
push
xchg
dec
xor
inc
mov
push
lret
out
lcall
mov
cli
mov
adc
inc
dec
fstps
inc
nop
sahf
fidivs
data16
out
sub
mov
mov
call
into
outsb
mov
test
jp
sbb
sbb
lock
xchg
xchg
xor
out
xchg
mov
cmp
mov
in
push
mov
mov
aaa
popf
clc
hlt
ret
in
cmp
push
mov
adc
push
mov
xchg
divl
inc
push
test
mov
xorl
stos
pop
mov
jecxz
push
xchg
addl
ljmp
pushf
xorb
dec
icebp
adc
nop
mov
jnp
adc
jg
push
cmp
adc
test
lods
sub
xor
lea
mov
mov
pushf
jp
lret
nop
ja
push
imull
and
mov
nop
out
mov
adc
sub
cmp
sbb
xchg
sbb
popa
loope
jmp
mov
dec
xor
lcall
jle
int
cli
popf
xchg
mov
mov
cmp
fwait
cltd
cmp
rcrb
cli
cltd
std
jmp
xchg
stos
or
mov
push
dec
mov
repz
fisttpl
jp
xchg
dec
sbbl
sub
jns
into
out
cld
je
test
or
adc
push
sahf
or
inc
cs
jne
andb
lods
out
pcmpeqd
xchg
gs
jb
lds
dec
xchg
pop
inc
pushf
gs
lret
inc
mov
fsts
push
fwait
in
pop
fmuls
popf
lods
pop
je
mov
clc
pushf
cmp
imul
clc
repz
mov
inc
mov
mov
dec
enter
or
or
lods
add
push
cmp
mov
outsl
xchg
mov
mov
jmp
add
fistpl
push
mov
pusha
insl
mov
imulb
mov
je
scas
testb
sub
scas
sub
mov
ficoml
dec
inc
sahf
cmp
xor
mov
sbb
dec
push
fs
xor
lahf
movsl
xchg
or
ss
lock
jo
sahf
rclb
or
pop
dec
inc
hlt
sub
into
xchg
xchg
jae
inc
xchg
dec
push
push
mov
bound
lret
mov
xlat
dec
arpl
mov
jmp
lcall
or
data16
mulb
dec
lock
sbb
mov
rcl
js
push
xchg
cli
push
pusha
sbb
sbb
xchg
mov
mov
xor
mov
or
jae
xor
js
test
cld
or
pop
inc
sub
jl
dec
and
mov
push
sub
xor
hlt
add
fnstsw
push
ljmp
adc
lcall
std
mov
aam
hlt
and
pop
sub
mov
jge
ljmp
fsubs
sbb
dec
cmp
comiss
xchg
mov
popa
lahf
sub
imulb
sub
add
sub
pcmpgtd
jae
stos
push
movsl
faddp
xor
xor
icebp
fwait
sti
push
cmp
aam
sub
vpsubq
push
movsl
out
jo
lcall
push
inc
sbb
popa
dec
mov
inc
and
mov
sub
xchg
xchg
inc
pusha
mov
clc
idiv
mov
push
mov
mov
or
push
jno
repnz
mov
ss
and
sbb
or
xor
sub
dec
dec
data16
or
in
mov
add
bound
adc
shrl
or
push
dec
lods
add
cvttps2pi
lahf
std
cmp
cmp
cmp
cmp
and
stos
xor
hlt
sub
fs
in
iret
cwtl
pusha
pop
in
inc
imul
je
or
inc
add
les
pop
ss
jb
test
fdivrs
in
adc
push
loopne
xchg
gs
cmp
in
mov
sbb
aas
jae
dec
loope
push
mov
adc
cmp
xchg
mov
or
lock
ret
push
lahf
cmp
pop
xchg
popa
jg
lods
inc
xor
fsub
daa
cmpsl
jl
xchg
notb
inc
add
mov
adc
adc
popa
inc
push
pop
or
aaa
cmpsb
sub
xchg
xchg
add
popf
lret
cmp
pop
lret
mov
sbb
lods
mov
jae
pop
fnsave
sbb
ljmp
xchg
in
cltd
lea
push
and
mov
bound
mov
jp
std
test
push
cmc
or
add
mov
aaa
sub
and
outsb
dec
sahf
in
sbb
jp
ret
scas
pop
push
pop
add
mov
xchg
fbld
mov
sbb
data16
mov
and
xor
ret
addb
adc
jg
xor
jne
mul
sahf
dec
sti
ljmp
xchg
test
fstpl
dec
es
or
dec
test
and
sbb
mov
in
jo
outsb
std
scas
pop
fidivl
mov
jle
ja
ret
sub
add
pushf
jno
popf
xchg
repnz
push
adc
in
stc
mov
mov
sub
pop
pop
mov
cmp
pop
mov
and
popf
bound
in
lret
add
in
call
enter
push
out
sbb
call
lret
in
push
xchg
addr16
pusha
iret
pop
bound
xlat
icebp
fidivrl
jnp
dec
repz
jmp
aaa
lahf
imul
or
mov
pusha
call
jp
clc
iret
into
cmpsb
fwait
xchg
mov
cmp
and
xchg
or
xor
ret
fdivl
dec
mov
rorl
movsb
inc
les
out
std
xchg
test
mov
lods
ds
decl
mov
sti
popa
inc
and
pusha
and
add
push
mov
pop
sub
in
aad
dec
imul
pop
mov
cmp
dec
icebp
dec
and
jo
mov
aas
outsl
fs
pop
mov
push
inc
lods
xchg
and
pusha
mov
insb
iret
adc
jecxz
jle
adc
mov
sub
insl
cmp
inc
jb
stos
hlt
insb
inc
lea
mov
fwait
mov
add
inc
pop
sub
and
clc
jnp
fwait
jge
push
add
or
loop
sbb
xchg
es
inc
mov
loop
repz
dec
int
mov
mov
jo
dec
imulb
inc
ja
lcall
cwtl
lret
sub
out
ja
cmp
shlb
fildl
cmp
push
lret
xchg
jmp
cmpsb
dec
outsb
push
mov
outsb
xchg
add
pop
cmp
fcomi
cmp
cmp
dec
inc
fmulp
fsubrl
push
push
jb
xchg
je
stc
adc
sar
out
pop
in
push
jns
jo
jae
in
jp
jo
and
pop
mov
inc
pop
push
ds
loopne
sub
insl
cmpsb
and
adc
scas
jns
rcl
mov
call
ss
ret
mov
add
pop
cltd
xchg
pusha
add
bound
jo
shr
idivl
enter
dec
ja
mov
int
jg
gs
mov
or
cmp
mov
frstor
test
incl
xor
inc
inc
lods
and
and
xchg
mov
jne
sbb
dec
sub
insb
insl
and
clc
ds
lret
push
mov
xchg
fstpt
dec
sbbb
jb
mov
mov
mov
push
jmp
xor
aad
scas
and
pusha
das
mov
sub
pusha
ljmp
mov
push
arpl
mov
cmp
jns
xlat
dec
mov
and
loopne
test
icebp
ret
cmp
scas
scas
adc
push
add
iret
xchg
lret
test
jno
pop
insb
sti
in
sbb
push
fidivs
sub
pop
sub
mov
push
insl
out
adc
std
insl
push
lock
cmp
mov
jmp
inc
cli
adc
inc
ffreep
and
sbb
mov
je
das
xchg
clc
adc
fwait
call
adc
out
aad
jmp
sti
pusha
ds
in
mov
push
mov
in
sub
sarb
int
std
mov
stos
inc
pop
push
stos
pushf
int3
or
enter
pop
jmp
aaa
xor
arpl
rcrb
xor
mov
jmp
arpl
dec
pop
dec
shlb
mov
mov
nop
pop
sbb
sbb
call
sbbl
push
xor
add
loope
test
and
cmp
sbb
popa
pop
jns
pop
add
mov
xchg
arpl
sub
aaa
cmp
mov
jnp
ret
and
insb
hlt
xor
cmp
rol
dec
mov
fnstenv
loop
and
sbb
mov
and
push
lods
rcrb
out
xchg
and
sub
push
xor
mov
or
ds
pop
xor
icebp
into
add
push
cs
mov
sub
cltd
outsl
mov
mov
stos
or
daa
mov
mov
inc
and
mov
jbe
mov
xchg
mov
inc
outsl
mov
jbe
std
setnp
push
lods
sub
and
std
call
xor
dec
jne
or
pop
rcll
adc
cs
add
ss
sbb
sbb
cwtl
cmp
lods
stos
sbb
loop
pop
das
pop
ret
stos
mov
repnz
outsb
lahf
das
clc
pop
fsubrl
push
fsubl
jmp
dec
push
lahf
stos
cltd
pop
or
int
or
mov
pushf
mov
sbb
sahf
in
cmp
mov
sbb
push
dec
adc
movl
pop
mov
loopne
sbbb
test
fdivr
ja
cmp
cli
fs
push
sub
lock
addr16
js
in
jle
fimuls
mov
mov
xchg
pop
out
sti
out
xchg
sbb
fcmove
jecxz
cmp
imul
lea
push
enter
inc
nop
ret
lds
test
jo
and
push
dec
ret
push
aam
sub
dec
xchg
xor
adc
mov
fsubrs
cmpsl
ja
cmpb
das
mov
mov
sahf
lret
test
arpl
or
scas
lods
roll
xchg
icebp
cs
ss
push
pop
add
loope
push
sbb
dec
cmp
jns
aad
lock
mov
push
aas
mov
aaa
call
lcall
sbb
fidivs
outsb
ficoml
pop
add
lahf
adc
call
mov
rcl
push
adc
loopne
adc
cli
pushf
sti
imul
stos
pop
push
popf
push
leave
or
jp
mov
push
jnp
sbb
in
lret
push
loopne
jg
aas
inc
sub
adc
or
sub
cmp
mov
sbb
add
shll
inc
enter
mov
movsb
mov
aad
inc
xor
popf
call
cmp
icebp
pushf
scas
jg
add
push
cmp
jmp
ret
mov
or
jb
ret
mov
je
ss
mov
mov
test
arpl
mov
xor
aas
sbb
push
aas
inc
clc
jmp
mov
and
daa
out
sub
insb
dec
jecxz
jecxz
orl
jge
outsb
inc
mov
subb
pop
xchg
xor
movsl
pop
in
icebp
sbb
push
mov
xchg
cmpsb
lds
leave
std
movsl
pop
and
scas
pop
mov
out
pusha
aas
sbb
adcl
jmp
pop
test
and
mov
call
mov
sbb
popa
mov
loop
sub
adc
sbb
mov
xchg
adc
push
xchg
and
xchg
adc
push
and
icebp
jnp
or
fiaddl
lret
dec
lret
mov
jb
std
loopne
xor
rcll
xchg
movsb
insb
push
cmp
jnp
xor
dec
add
icebp
sub
dec
mov
mov
bsr
pop
mov
dec
pop
enter
inc
sub
lahf
out
mov
test
cltd
outsl
dec
inc
cmpsl
add
movb
jb
bound
sar
xor
adc
pop
push
cmp
outsb
test
test
jg
push
ret
xchg
cmc
lea
sub
fs
testl
faddl
sbb
clc
cmc
stos
shr
enter
pop
mov
cmpsb
sub
xchg
or
test
fucomi
mov
cmpsb
das
mov
inc
sti
and
aam
mov
sbb
fnstsw
sbb
lds
fldpi
or
cmc
lret
xchg
lret
add
sti
lods
mov
pop
xchg
or
imul
cmp
sarl
dec
outsl
repnz
dec
mov
xor
test
in
jecxz
xor
xchg
sti
repnz
sbb
fnstcw
js
jae
xchg
imul
popa
pushf
xor
push
add
push
xor
loopne
fmulp
int
mov
mov
sub
mov
inc
mov
enter
pop
pop
les
adc
testl
stos
shll
xchg
xchg
or
stos
fnstenv
or
mov
shrl
mov
pop
aad
mov
sti
ss
ss
xchg
cmp
daa
mov
insb
dec
or
fldt
and
rolb
fsts
fldl
and
adc
mov
pop
add
cmc
pop
cmc
adc
fbld
sbb
jecxz
adc
jl
popf
xchg
stos
jp
mov
cmp
inc
mov
mov
pop
mov
push
in
insb
das
mull
int3
adc
stos
push
rorb
push
int
adcl
insb
in
and
adc
and
ret
std
imul
jb
sbb
leave
inc
mov
loopne
or
lods
nop
xlat
inc
into
pop
jbe
aas
pop
cmpsb
out
push
popf
das
lock
stos
arpl
aad
jbe
cmpsl
mov
fcoml
push
dec
or
fwait
push
imul
sbb
mov
push
jnp
or
pop
dec
jnp
ret
bound
push
pop
fcmove
aas
mov
dec
push
stos
adc
dec
aad
ret
push
cld
cli
sbb
mov
mov
jmp
in
jl
out
divl
imul
mov
insb
cld
jmp
idivb
cmc
push
loope
repz
push
cmpsb
outsl
cltd
adc
mov
repz
push
add
aad
jl
and
subl
lods
mov
and
imul
test
stos
mov
ljmp
push
movsb
ja
insl
push
xchg
inc
rcrb
cmp
pop
or
aaa
lods
js
aam
pop
dec
jecxz
inc
fwait
iret
mov
jno
jne
das
jmp
push
repnz
inc
dec
jne
imul
fs
mov
jmp
movsl
repz
fwait
or
pop
leave
int
aam
xchg
arpl
inc
hlt
push
mov
daa
jle
inc
mov
loope
cmpsl
negb
adc
shll
sahf
loope
in
sbb
es
in
sub
outsl
pop
mov
sbb
js
shlb
mov
pop
inc
xchg
dec
pop
or
mov
cwtl
mov
adc
add
outsb
insl
cli
xchg
jle
iret
scas
xor
mov
jp
les
xchg
cwtl
scas
bound
xchg
popa
cmovle
ror
rol
add
sbb
adc
mov
push
cli
enter
xor
hlt
adc
inc
lcall
adc
stos
or
cli
pop
mov
fs
rorl
inc
lcall
cmp
xor
jbe
sub
dec
fcmovu
js
push
jb
rolb
outsl
jmp
add
aad
cmpsb
rclb
sub
ja
mov
sahf
dec
push
or
mov
adc
mov
movsb
or
lcall
movb
fdivr
inc
push
sbb
or
clc
pop
ja
jecxz
mov
fwait
mov
sti
fdiv
pop
cwtl
in
les
subl
lods
sbb
cmpsl
mov
sbb
mov
mov
sahf
outsl
cmp
mov
popf
enter
int3
push
outsb
cmp
jne
test
push
addl
adc
sub
outsb
stos
add
adc
cmp
adc
add
out
mov
sub
mov
aad
sti
pop
sbb
mov
dec
mov
cmp
push
clc
imul
imul
addr16
pop
fnstcw
fcomp
and
inc
cltd
das
cmpsl
cltd
sbb
sub
sbb
test
fadds
or
xchg
lahf
mov
jnp
cltd
pushf
bound
rclb
cmp
pop
cmp
cwtl
scas
push
repnz
test
rolb
addr16
fs
push
cwtl
add
int
jb
mov
subb
jle
aam
jns
mov
sub
outsb
popf
mov
outsl
stos
lds
mov
aas
inc
and
loop
cmpsl
loopne
jns
push
mov
das
js
ret
sub
inc
push
test
lret
call
sbb
popf
dec
orb
push
xor
xchg
and
cmp
scas
mov
stos
pop
daa
fwait
rcrb
mov
int3
pop
dec
or
push
rcr
dec
cwtl
je
pop
mov
jae
lahf
outsl
hlt
jae
or
sarl
je
hlt
jno
mov
iret
or
cmp
push
cmp
push
pop
cltd
pop
inc
inc
inc
lock
and
sbb
movsl
mov
add
mov
icebp
or
mov
xchg
or
pop
in
test
or
and
add
testl
mov
cmp
cli
gs
loope
and
lock
mov
iret
pop
xchg
and
xchg
out
daa
push
sbb
stos
out
pop
mov
ficoms
and
and
push
or
rcl
sub
std
pop
inc
movsl
sbb
test
repz
mov
fwait
adc
popf
jne
pop
cs
mov
cltd
jne
pop
sarb
inc
arpl
aam
jne
jecxz
add
pop
push
ja
fwait
movl
push
cmp
mov
sub
in
dec
int3
stc
int3
and
add
dec
fimull
cld
out
adc
adc
es
mov
insb
icebp
push
push
idivl
es
cmp
push
iret
inc
idiv
pop
sbb
jno
jp
arpl
gs
pop
jns
decb
insl
test
mov
push
cmc
sbb
out
mov
fstl
sbb
add
pop
popf
sub
lods
add
pushl
jl
leave
mov
mov
jmp
stos
push
inc
icebp
mov
dec
mov
sub
outsb
xchg
call
push
movsb
mov
dec
push
cmp
xchg
sbb
mov
mov
xchg
out
out
insb
repnz
out
push
shll
cld
aaa
inc
jp
mov
sub
mov
iret
fadds
xchg
pop
mov
jne
lret
in
pusha
xchg
mov
push
add
in
sub
pop
into
repz
ljmp
bound
mov
push
pop
mov
inc
lahf
push
or
cltd
jecxz
push
adc
adc
pop
outsb
adc
xchg
out
fcoml
jmp
pop
mov
push
mov
sbbl
imul
push
cld
adc
dec
push
ljmp
xchg
fucom
xchg
mov
mov
xchg
xchg
or
stc
xchg
mov
jbe
push
sub
dec
and
dec
inc
xor
in
adc
ds
int
and
in
cmp
inc
or
xor
push
aam
shrl
add
sub
andl
fstps
test
ds
xchg
data16
sub
mov
mov
cmp
xchg
sbb
iret
push
jb
jno
cmp
mov
loopne
les
mov
adc
fsubp
add
sbb
out
add
jle
aas
mov
add
pop
push
imul
dec
sbb
adc
idivl
inc
sbb
mov
mov
pusha
loope
cmc
loopne
fiaddl
popf
insl
pop
push
dec
data16
dec
gs
clc
add
movb
shl
lock
in
rorb
dec
lods
push
mov
mov
stos
stos
shrl
push
hlt
adc
gs
repz
call
mov
sub
ss
push
test
xor
data16
mov
push
cmc
in
mov
dec
inc
lcall
jne
repnz
mov
jl
gs
insl
jae
adc
inc
dec
push
lds
mov
jns
shlb
dec
adc
scas
sbb
mov
dec
sbb
sbb
stos
sub
lret
jb
nop
fdivl
les
adc
jno
lods
lret
adc
loop
aas
arpl
test
leave
mov
sbb
insb
mov
push
add
pop
mov
pop
push
jns
jl
or
fdivrl
xchg
add
mov
loopne
ficompl
in
js
mov
mov
inc
loope
jo
push
add
movsb
mov
inc
shlb
cmpsb
cmpsb
cmp
cltd
subl
jns
xor
stc
jge
loope
adc
in
sarb
pop
jae
mov
jge
dec
movsl
push
das
inc
mov
insb
scas
inc
mov
sub
jbe
cmp
test
and
imul
loop
jl
jge
movl
sbb
leave
add
insl
outsb
test
mov
and
mov
sbb
mov
or
ja
pop
jmp
ss
sub
std
mov
movsb
movsb
xchg
mov
pop
push
lods
sub
movsb
imul
in
leave
dec
sbb
cmpsb
mov
adcl
cmp
cli
mov
sahf
aaa
sub
cs
jmp
ror
mov
push
dec
jg
or
jmp
cmpsl
cli
and
mov
je
call
jle
lods
repnz
in
mov
cmp
pop
ret
test
mov
sbb
fbld
jb
ss
inc
sub
stos
imul
cmp
adc
xchg
jo
cmp
sahf
dec
mov
imul
mov
orl
nop
aas
ljmp
push
cmpsl
mov
test
and
xorb
lds
fsubrl
add
inc
ret
ret
jl
addl
xchg
mov
test
mov
icebp
and
push
and
loop
lds
push
cli
xchg
aas
bnd
rolb
jns
mov
lret
mov
jae
icebp
inc
mov
mov
data16
scas
pop
mov
pop
addr16
test
push
lea
hlt
dec
add
jge
add
mov
cmp
enter
sbb
cmp
add
les
cmp
mov
inc
jne
lret
jge
jbe
std
outsl
mov
cmp
and
add
nop
nop
add
xor
inc
fcomps
fisubs
cmp
daa
icebp
mov
inc
jns
pop
std
addl
xor
repnz
fstpl
jl
inc
jns
lods
lock
or
test
adc
inc
lds
and
repz
mov
sbb
in
out
add
stc
sub
fistpll
shrb
add
jl
inc
test
adc
lcall
adc
pop
out
adc
imul
or
idivl
sub
add
mov
inc
jb
sbb
idiv
xorb
mov
scas
filds
mov
sub
outsl
sbb
inc
js
int
ds
pusha
cs
popf
test
xor
sub
mov
hlt
call
pop
sub
aam
imul
insl
mov
dec
jbe
cld
mov
movsl
pop
sbb
enter
and
inc
stos
out
inc
fadds
or
mov
sbb
mov
jnp
pushf
sarb
fldcw
adc
mov
pop
sub
je
mov
dec
push
jmp
testb
cmp
imul
rorl
lret
mov
mov
gs
paddb
aaa
and
sbb
pop
adc
sbb
iret
out
cmp
xchg
insl
imul
mov
dec
mov
mov
pop
mov
xor
repz
inc
xor
mov
mov
mov
ds
popa
bound
pop
xor
xlat
cli
mov
xchg
ret
dec
pop
and
xchg
cmp
scas
cmpsl
dec
jo
imul
mov
das
scas
popa
sbb
pop
aad
cltd
in
lahf
lret
lea
cmpl
sbb
aaa
or
test
mov
xor
push
stos
inc
add
mov
inc
jmp
jl
or
jl
jp
and
gs
sub
mov
cwtl
aad
pop
in
cmpsb
mov
cmp
jle
mov
in
cmp
dec
sbb
mov
pop
pop
cmp
enter
movsl
dec
ret
ret
sub
jno
add
es
mov
cmp
stc
inc
out
lret
dec
out
lret
mov
int3
sub
mov
cmp
cmpsb
fwait
xchg
or
push
sub
repz
mov
fisttps
sbb
dec
inc
pop
mov
push
pop
hlt
ret
push
sbb
jmp
xchg
ss
shll
popa
push
sbb
ret
lods
in
int
xlat
and
dec
inc
xchg
out
movsb
push
cmp
sbb
rol
dec
outsl
push
cmp
clc
jl
repz
data16
cs
mov
jge
in
add
test
cmc
jbe
aam
fwait
pop
fs
mov
dec
enter
into
add
xor
cmp
lea
add
push
ss
shr
mov
mov
stos
filds
xchg
dec
sbb
xor
test
dec
pop
dec
stos
xchg
pusha
clc
add
sub
mov
jle
xchg
dec
std
xor
push
cmpb
mov
lea
mov
adc
daa
push
pop
stc
cmpsl
jnp
cli
push
mov
cmp
pop
cmp
icebp
mov
mov
mov
cmp
inc
ret
mov
lea
mov
rcll
dec
test
push
xlat
xlat
in
test
je
mov
div
mov
jle
lods
sbb
gs
sub
insl
adc
insl
icebp
dec
or
fisttps
push
test
sub
mov
xchg
in
cs
call
fwait
enter
test
xchg
gs
or
sub
outsb
subl
aaa
push
idiv
and
sbb
cmp
out
stos
mov
enter
lahf
add
inc
push
cmp
adcl
fwait
cmp
adc
pop
mov
lea
aad
imul
inc
cmpsl
cmp
cmp
jb
pop
xor
rcr
mov
cmp
sub
jne
scas
mov
inc
sti
lea
jle
inc
cmpsl
out
xor
out
pop
xor
push
test
rolb
scas
repz
mov
add
adc
xorl
jbe
fnstenv
repnz
inc
sbb
in
lods
xlat
repz
rol
xchg
dec
add
jecxz
mov
sub
inc
mov
iret
mov
cmpsb
sbb
xchg
stos
sub
out
mov
out
js
cmp
enter
movsl
cwtl
sub
ret
dec
ret
xchg
lods
outsb
xor
sti
cltd
jns
sub
test
loopne
xor
pop
pop
out
mov
and
in
sbb
cmp
xor
or
call
mov
ss
adc
lock
cmpb
push
xor
pop
cld
or
stos
push
jg
jge
push
aas
test
cmp
jp
push
insb
js
dec
inc
pop
jle
xor
sub
cmp
mov
test
jl
loop
fnsave
cmp
dec
cs
scas
std
cmp
fdivl
dec
insb
mov
int3
mov
inc
outsb
mov
mov
push
pop
ficoms
or
mov
lret
adc
outsb
movsb
aas
ljmp
shrl
shrl
adc
adc
pop
jmp
jbe
push
stos
aaa
imul
and
sub
jae
sub
fdivl
movsb
mov
xchg
les
mov
test
or
popa
xchg
hlt
pusha
sub
int
mov
test
add
es
cmpsl
and
test
fbstp
bt
sub
mov
aad
pushl
mov
mov
sahf
cli
xchg
vcvtss2sd
shlb
fcom
mov
dec
outsl
sub
nop
icebp
pushf
mov
jp
inc
popf
sub
push
jge
push
daa
pop
stc
in
gs
dec
test
int
mov
movsb
mov
push
test
fwait
mov
jecxz
imul
in
in
lret
sub
lret
jecxz
inc
inc
push
call
lock
and
inc
jg
push
and
test
clc
xchg
mov
dec
inc
aas
repz
lahf
dec
pop
jle
movsb
xchg
xor
pop
ret
mov
roll
dec
fsubl
mov
sub
push
inc
dec
jnp
cmp
cmc
add
jne
cld
mov
out
nop
cmp
lods
pop
fs
or
mov
jo
jecxz
cmp
insl
jbe
jp
mov
ja
movsb
aam
mov
inc
sub
xchg
arpl
out
xlat
sub
pop
and
mov
cmp
cmp
and
adc
pusha
cmp
pop
jo
arpl
pop
xchg
stos
push
dec
insl
iret
pop
mov
inc
jp
cmp
or
cmp
adc
movsl
std
jmp
sarl
imul
hlt
fisubrl
xchg
adc
cs
inc
das
out
sbb
loope
sub
data16
iret
cld
xchg
call
in
std
cmpsb
lds
mov
xchg
rcrl
push
jge
push
add
fistpl
data16
stos
push
mov
rcrb
outsl
popa
fwait
or
mov
xchg
xor
and
sti
dec
pop
xchg
jp
jo
insl
inc
mov
movsl
lret
ja
sbb
in
mov
subb
inc
dec
push
xor
pop
js
outsb
stc
cmc
mov
pushf
mov
jg
scas
push
mov
fsubr
lods
pop
jae
fisubs
or
inc
scas
sbb
es
jae
loop
jo
sahf
lds
or
add
pop
dec
xchg
pop
mov
mov
push
mov
andb
cmp
movsb
mov
lods
pop
jge
push
out
lahf
inc
push
scas
jns
sahf
xchg
lret
jo
clc
push
sbb
das
xchg
mov
repnz
and
cmpb
dec
pop
fcomps
int3
xchg
stos
insl
mov
jnp
jl
icebp
xchg
push
out
sbb
std
int
or
add
arpl
pushf
negb
roll
jecxz
jg
dec
cmp
lock
jmp
insb
mov
jbe
int3
pop
stc
stos
clc
cld
fs
pushf
movsl
arpl
push
out
int
inc
shll
pushf
xlat
add
and
dec
or
cmc
das
mov
pusha
pop
mov
jle
sahf
movsl
or
pop
mov
pushw
inc
mov
cmp
mov
xor
push
mov
popa
push
sbb
gs
sub
push
lcall
xor
push
insb
ss
mov
mov
test
test
mov
inc
addb
xor
xor
push
ss
repnz
adc
jae
int3
inc
clc
je
test
dec
mov
pop
pop
cmpsl
pusha
jg
jne
leave
adc
sub
inc
cmp
cmp
push
in
fdiv
mov
sub
aam
or
dec
test
arpl
jl
xchg
int
cmp
add
cmp
fdivl
ret
push
push
jb
xchg
into
xchg
cmp
bnd
fistl
int3
stc
jl
jg
sbb
cmp
jmp
ret
imul
xchg
aaa
std
repnz
dec
inc
pop
push
idivl
jno
mov
fs
repz
xchg
mov
mov
mov
mov
xor
fidivrl
fldcw
mov
and
je
lods
xchg
cmp
fs
lods
inc
sub
mov
jp
xchg
call
adc
movsb
mov
gs
cmpsl
inc
shl
popa
inc
pop
inc
lods
int3
xchg
cltd
std
and
mov
cld
dec
lcall
iret
pop
clc
xchg
enter
push
push
repnz
mov
push
jae
push
add
cmp
mov
aas
dec
inc
dec
sbb
mov
cmpsb
lcall
add
pop
popa
jbe
stos
mov
cli
dec
add
sub
imul
and
cmpsl
ds
jns
push
insl
imul
mov
popa
jnp
pop
sbb
loop
sub
stos
ljmp
pop
enter
mov
nop
xchg
xor
jbe
orb
nop
pop
dec
pop
pop
jecxz
sub
iret
adc
arpl
push
mov
push
xor
jge
je
dec
fstl
mov
into
mov
mov
pop
jp
push
mov
ss
pop
mov
pop
inc
aaa
pop
scas
mov
test
xchg
popf
mov
clc
mov
mov
fs
movl
in
mov
dec
cmpsb
xchg
add
jge
sub
sub
sbb
or
or
inc
push
mov
xchg
sub
insl
pop
dec
mov
sbbl
loop
push
popa
xor
insl
jge
sub
aam
out
adc
dec
lea
push
aas
in
repz
cmp
lods
xchg
xor
sub
add
loope
lret
rcl
mov
mov
inc
jg
lds
hlt
sbb
xlat
add
cwtl
and
xchg
ret
das
loopne
addr16
push
call
sahf
out
sbb
jl
in
add
insl
pop
mov
scas
mov
les
ja
hlt
or
popa
adc
push
fistl
and
int3
je
pop
xchg
enter
test
jb
jnp
push
lea
je
pop
push
pop
ret
adc
pop
pop
into
sub
xchg
dec
fists
push
cltd
cld
pop
aad
push
cld
repnz
call
out
out
dec
pop
mov
cmpsb
stos
mov
mov
dec
push
inc
sbb
stos
mov
pusha
xchg
adc
dec
lahf
mov
filds
loopne
bound
mov
out
mov
cld
std
dec
shlb
sub
vmovlpd
dec
iret
pop
aaa
lds
sbb
adc
push
inc
push
or
repz
sbb
les
les
cmpsl
push
sub
lods
std
dec
or
and
adc
xchg
sub
xchg
cmpsl
xchg
xor
ret
mov
and
clc
jl
mov
sbb
mov
stos
dec
or
fstpl
leave
dec
inc
mov
sbb
push
dec
mov
sub
add
add
into
jecxz
sbb
out
mov
mov
dec
fisttps
int3
andb
and
mov
leave
in
in
ret
lret
ret
lods
ffreep
mov
dec
push
fs
adc
lahf
stc
popf
mov
adc
sbb
jnp
push
adc
je
int3
dec
mov
repnz
pextrw
sbb
add
pop
cli
sarl
cmp
push
inc
adc
adc
repz
scas
jne
ret
sbb
int
or
cld
adc
or
decl
jnp
sbb
movsb
dec
push
enter
fcmovu
cmp
icebp
pop
jno
jmp
pusha
mov
repnz
jp
insb
cld
inc
and
xlat
adc
ret
into
loope
push
sbb
mov
bound
dec
and
cltd
gs
popf
xchg
cld
fcoml
pop
rorl
scas
jo
push
mov
loope
mov
fsubrl
fisubs
mov
inc
push
orl
rcrl
xchg
loop
xor
and
movsb
or
inc
xchg
stc
ss
sub
mov
outsb
cmc
push
adc
sbb
ds
scas
popa
pusha
push
mov
hlt
push
xor
movnti
sub
jnp
and
dec
add
xlat
das
push
push
pop
push
mov
lret
or
jno
rcr
pop
stc
pop
push
cs
xor
orb
or
adc
ret
in
data16
xchg
mov
xlat
das
inc
std
adc
call
cmp
in
jbe
in
add
mov
xchg
mov
lock
aam
add
inc
std
cmpsl
fistps
adc
jbe
inc
sbb
outsb
mov
dec
sub
dec
push
sarl
mov
scas
push
sub
lret
push
pop
sbb
cmpb
dec
pop
icebp
add
pop
cltd
or
fdiv
add
mulb
add
xor
mov
aas
push
cmp
ret
mov
cld
dec
jns
stc
outsb
xchg
enter
jae
and
dec
xor
insl
decb
inc
imul
je
and
xor
jle
adc
daa
push
adc
push
sub
mov
andb
shl
jne
into
adc
inc
or
insl
fwait
jae
push
fbstp
or
mov
xchg
movsb
mov
lods
test
shlb
adc
or
dec
jmp
add
push
enter
adc
imul
cli
jb
jno
cmp
mov
xchg
adc
popl
stos
lock
subb
fistpl
xor
mov
push
xchg
orl
fsubl
sbb
movsb
adc
pop
dec
outsb
dec
hlt
inc
call
xor
adc
mov
jge
in
aas
ret
daa
pop
pop
xor
roll
and
jns
jns
test
push
cs
or
int3
aad
jmp
mov
push
sub
jns
push
mov
jne
and
push
push
push
or
push
or
adc
push
adc
imulb
cltd
adc
cwtl
loopne
mov
imul
jle
arpl
adc
bound
jno
pop
jne
loop
sbb
aas
sbb
ret
dec
int
mov
mov
mov
add
jb
cmp
jp
push
loop
mov
mov
pusha
mov
cs
or
xchg
jae
add
int
jmp
and
jmp
adc
push
and
outsl
and
lods
repz
push
xchg
xchg
mov
jge
xor
cmpsl
pop
mov
imul
xchg
inc
push
lock
xor
test
stc
jle
out
sti
push
and
lods
das
and
pop
outsl
fstpl
inc
movsb
jmp
xchg
fs
mov
enter
adc
push
rcrb
ds
jmp
adc
inc
nop
mov
xchg
sbb
mov
jno
negl
or
jmp
insl
imulb
xchg
cmp
jno
imul
push
mov
sar
out
cwtl
stos
push
in
loopne
popl
adc
pop
aad
pusha
subl
and
xchg
flds
cwtl
mov
add
imul
xchg
push
xchg
mov
outsb
in
add
fwait
mov
sub
cmp
push
jle
lret
mov
add
mov
fistl
add
mov
or
in
sahf
pop
sub
mov
xchg
ljmp
lret
stc
ja
orl
and
push
add
mov
push
xchg
rorb
int3
movl
test
fmuls
movb
in
adc
mov
push
dec
lahf
std
lds
mov
xchg
push
jmp
mov
shll
xchg
pop
aad
push
mov
sub
jg
mov
movsl
das
pop
dec
xchg
stos
adc
inc
and
sub
dec
loop
mov
movsb
lret
lock
hlt
notl
rorl
jbe
fcmovu
push
lret
push
scas
sub
or
dec
jb
add
xchg
inc
sbb
and
mov
or
mov
stos
cwtl
lds
rol
ret
cmpsb
xchg
aad
aaa
ret
xlat
hlt
aam
sbb
dec
inc
out
adc
sbb
fistl
mov
push
mov
cmpl
adc
pop
inc
or
fs
loop
mov
loope
xor
cmp
sbb
jle
jmp
jno
jnp
dec
ffreep
inc
lahf
or
mov
mov
pop
test
pop
aad
bound
movsl
stos
ret
pop
jae
jmp
xchg
push
cmp
jno
neg
xchg
sbb
cmp
mov
lret
xor
and
sbb
xchg
fimuls
sbb
aad
xor
adc
cmp
dec
movsl
and
xor
mov
rcrb
push
fldcw
add
out
ret
jne
dec
test
or
scas
es
dec
cmpsb
aad
cmp
das
inc
test
cmp
mov
pop
sub
lea
or
xor
in
lods
adc
repz
pushf
pop
lret
dec
enter
and
push
insl
pop
dec
arpl
mov
xchg
xchg
test
xchg
cs
dec
pop
pop
js
push
fdivs
mov
pop
frstor
dec
lahf
push
pop
xchg
mov
mov
cmp
sub
faddl
jle
adc
ficomps
ret
sti
aam
std
mov
iret
insb
mov
lret
pushf
mov
mov
fiaddl
xchg
mov
ljmp
and
int
mov
movsb
ja
and
cmpsl
stos
push
insb
aas
pusha
inc
xchg
mov
ss
sub
jo
in
dec
lcall
pushf
adc
pop
bound
pop
adc
mov
lds
adc
add
mov
js
test
loop
fiadds
pop
rcrb
push
call
dec
inc
outsl
ss
imul
in
stos
cmc
adc
shl
inc
fists
cld
sub
or
sbb
outsb
bnd
dec
fstl
pop
fldl
repnz
push
pop
adc
mov
pop
jne
xor
mov
neg
sub
inc
in
jae
and
or
lret
xchg
sti
cmp
mov
sub
sbb
in
jb
sub
and
pushfw
xchg
lcall
fs
adc
pop
nop
mov
movsl
add
stos
mov
hlt
add
pop
dec
mov
iret
jle
loop
adc
icebp
dec
popf
ljmp
mov
jbe
push
sub
push
lds
mov
out
jnp
adc
clc
mov
sub
and
fiaddl
addb
rolb
mov
xchg
push
add
mov
je
aam
add
jl
sbb
scas
call
fwait
pusha
sbb
scas
and
jg
cs
cmpsl
pop
sub
aas
lcall
inc
push
push
into
int
mov
mov
mov
enter
mov
cli
mov
and
fwait
adcl
dec
rorb
rol
xlat
ja
stos
dec
mov
inc
dec
mov
sbb
mov
jb
icebp
mov
shlb
int3
mov
mov
and
sub
push
pop
les
testb
popa
icebp
push
ret
and
xorb
rclb
mov
xor
cmp
or
cmpsb
inc
push
clc
mul
sub
mov
xchg
rorl
sbb
outsl
lahf
sbb
or
inc
mov
stc
dec
scas
jle
push
and
insl
pop
mov
in
xchg
in
sub
adc
inc
pop
outsl
repz
pushf
sahf
dec
dec
xchg
stc
into
mov
pusha
int
aam
inc
cmp
mulps
ja
cmp
mov
in
stc
pop
das
xor
clc
outsb
in
inc
mov
shrb
je
xor
pop
add
sub
cwtl
icebp
sub
pop
sti
and
mov
lock
ret
add
int3
xrelease
push
out
adc
xchg
dec
ljmp
push
ret
or
push
outsb
shl
dec
divb
shll
pop
and
add
mov
push
lock
lahf
push
jns
and
imul
arpl
jl
jns
push
xchg
sarb
sbb
xchg
xchg
test
insl
jb
insl
sub
mov
add
ret
push
mov
out
fs
in
fiadds
je
xchg
imul
xchg
sarb
hlt
mov
sub
out
js
adcl
sbb
dec
test
mov
push
stos
imul
negb
cmpsl
fnstcw
sbb
sub
das
sbb
add
mov
push
push
rorb
sbb
dec
mov
sub
cmp
pop
rolb
lahf
stos
dec
push
xchg
push
mov
aaa
xlat
sbb
pop
out
rorl
jnp
js
cs
loopne
push
cmp
icebp
outsb
jb
lods
push
push
movsb
mov
xchg
mov
sbb
test
shr
mov
movl
mov
in
subb
mov
scas
sbb
push
jmp
hlt
cmp
or
mov
loopne
in
movsl
pop
mov
cld
es
cltd
xor
jmp
arpl
or
adc
in
mov
out
test
cmp
int3
call
xchg
addr16
mov
mov
adc
scas
leave
in
cmp
mov
jecxz
and
aas
repnz
rclb
inc
pop
adc
rcrl
mov
testb
ret
fcoms
xor
enter
lcall
add
and
es
sbb
fsubrs
scas
sub
idiv
cwtl
in
jmp
dec
sbb
loope
addb
filds
xor
add
andb
push
in
jmp
add
push
imul
aas
ss
dec
mov
bndstx
push
xlat
fsubr
daa
int3
push
test
mov
jp
jne
jnp
repnz
pop
adc
dec
adc
cmp
test
mov
out
jg
lods
sub
dec
adc
add
and
pop
adc
mov
push
xor
xchg
cmp
icebp
cmpsl
loop
leave
insl
adc
scas
add
out
lret
push
mov
push
xchg
dec
call
xchg
scas
dec
sbb
jp
xchg
std
jbe
js
or
or
movsl
adc
push
mov
stos
out
push
cs
hlt
push
jmp
sub
clc
mov
hlt
xlat
out
pop
lcall
test
ja
lahf
add
jp
addl
int
and
sbb
xchg
push
jecxz
mov
cmp
fidivs
cwtl
loopne
iret
hlt
mov
jg
cmpsl
sbb
sbb
insl
mov
int
adc
filds
pop
lret
sub
push
jno
lcall
jns
stos
cli
out
and
ds
sub
pop
adc
scas
mov
push
jbe
add
jge
sub
jnp
inc
xor
mov
dec
push
clc
jle
push
lods
fs
mov
jnp
cli
das
or
pop
dec
sarb
lahf
lods
daa
adc
xchg
push
nop
inc
sbb
xchg
cwtl
jp
stos
cld
dec
roll
stos
mulb
xlat
push
inc
aam
or
jb
aas
inc
scas
jo
orb
ret
mov
lea
xlat
shrb
push
adc
lret
xor
out
out
inc
test
arpl
lea
or
sbb
imul
mov
cwtl
stos
pusha
push
cmp
lret
fiadds
ret
pop
imul
jl
mov
jno
imul
and
nop
ret
cmp
cmp
mov
jge
push
dec
cmp
shrb
mov
jge
out
scas
adc
aas
movsl
dec
clc
push
jbe
pop
xchg
mov
lods
dec
inc
sti
jo
in
lea
mov
adc
jg
push
add
jno
loop
lret
or
fsubrs
push
ds
mov
and
cs
sub
lock
not
push
mov
cmp
cmp
xchg
dec
inc
stc
dec
cmp
mov
pop
in
lds
mov
jge
sub
cmp
sarw
cmp
and
cmp
and
cmp
jns
push
jge
fidivrl
xchg
loop
das
mov
in
mov
addr16
fists
add
out
mov
xlat
insb
lea
pop
adc
insb
shll
sbb
fs
cwtl
adc
ja
inc
xor
or
hlt
push
into
xchg
xchg
ficompl
arpl
pop
sarb
aam
mov
flds
mov
or
jne
cwtl
test
sbb
test
fptan
sub
adc
lret
lds
cmp
jns
sbb
lret
ret
ret
jnp
push
xchg
in
mov
pop
stos
dec
into
jno
push
lcall
test
pop
add
mov
leave
sub
sbb
push
loopne
out
lods
inc
sahf
fisubl
push
mov
dec
stc
pusha
jo
add
and
push
pop
dec
cmpsb
lcall
cmp
push
sbb
push
mov
je
pop
xchg
cmpsb
adc
lods
add
pop
mov
add
mov
inc
mov
jge
addl
in
mov
aaa
push
enter
repnz
lcall
shrl
cmpsb
das
mov
ss
pop
jb
pushf
jl
cmp
sbb
ds
icebp
outsl
push
mov
or
scas
xchg
push
pop
mov
inc
pusha
mov
mov
insb
mov
rcrl
je
mov
jo
popf
xchg
fcmovne
imul
cli
pop
sahf
mov
push
fstpl
inc
add
xchg
out
push
inc
jnp
cmc
sub
cs
inc
out
xchg
int
and
xchg
mov
jg
and
mov
decl
adc
nop
pop
and
stc
inc
and
int3
daa
fbstp
in
imul
ret
fs
sbb
push
mov
cld
aam
out
sahf
shll
inc
mov
mov
ljmp
push
mov
popa
sub
es
xchg
xor
daa
loop
lahf
xchg
dec
mov
jns
pop
popf
fldl2t
insb
icebp
add
mov
dec
adcb
mov
insb
mov
jmp
mov
xor
xlat
ret
push
mov
mov
ficomps
in
xchg
xchg
pop
push
jle
fisttpll
enter
ja
leave
ffree
dec
adcl
movsl
xor
push
push
stos
sbb
lahf
xor
and
sbb
pop
mov
sbb
sub
shlb
sbb
clc
sbb
cltd
inc
xor
inc
mov
imul
mov
out
sbb
push
or
insb
out
lcall
xchg
push
or
and
push
mov
out
cld
loopne
mov
xor
ds
lods
mov
sub
cmp
jns
push
enter
xor
adcb
leave
scas
in
fisttps
ror
ret
or
je
es
sbb
mov
jnp
mov
mov
jmp
mov
iret
lods
mov
pop
ss
adc
pop
ja
fwait
addb
jae
push
bnd
bound
sbb
xchg
xor
sub
fstl
xor
movsb
pop
sub
fucom
mov
sahf
test
imul
test
inc
dec
jae
and
xchg
pop
pop
mov
stos
and
sbb
push
pusha
cmp
cmp
push
scas
mov
and
lret
cltd
into
andl
and
xchg
test
or
ja
aaa
nop
fisubs
mov
xor
xlat
dec
ljmp
sub
cmp
xchg
push
adcl
imul
cmpb
lea
inc
mov
mull
enter
jle
jnp
dec
outsb
notl
inc
in
sub
and
outsb
and
jle
cmp
out
or
aas
iret
sbb
push
inc
call
dec
rol
pop
pop
pop
pop
test
add
cmp
insb
stc
hlt
jmp
cmpsb
sbbb
cs
mov
mov
pop
and
lcall
pushf
daa
dec
sbb
shl
sahf
mov
mov
inc
mov
loope
xor
pusha
imul
cmpsb
pop
out
out
and
jne
sahf
pop
dec
pop
fisubrl
aam
mov
js
sub
in
shll
dec
inc
inc
movsl
inc
sub
test
inc
imul
jmp
bound
push
jg
ret
mov
add
dec
sbb
pushf
aas
stos
cs
cld
out
sub
push
pop
je
inc
inc
fstpt
push
rorb
mov
dec
es
pop
and
shrl
jno
out
jp
pop
push
mov
stos
sbb
pop
divb
dec
xor
mov
add
shr
lahf
xchg
in
pop
xchg
repnz
and
test
imul
push
pop
das
or
inc
test
std
inc
adc
jnp
out
test
into
test
mov
mov
mov
adc
jb
pop
scas
insl
mov
rorl
jne
mov
sbb
nop
sbb
jae
ljmp
xchg
repnz
xchg
js
or
push
test
int3
mov
insl
mov
aaa
pushf
gs
mov
sbb
cmpb
xor
out
leave
in
dec
dec
add
mov
and
vunpcklps
mov
test
jno
sbb
dec
in
int3
les
push
dec
clc
xor
sahf
jle
adc
jae
int3
repz
popf
jno
out
call
mov
loopne
insl
jno
shr
mov
inc
addr16
stos
jno
sub
sbb
add
cs
lock
adc
in
aaa
cld
dec
dec
stos
fs
dec
bound
and
xchg
ja
icebp
std
jmp
mov
lock
sbb
push
cld
data16
fwait
loop
cli
negb
xchg
cmpb
hlt
aam
jae
xor
lcall
subl
sub
adc
les
mov
or
push
sub
movsl
xor
mov
lcall
add
loopne
clc
mov
rolb
add
mov
arpl
test
int3
test
pop
popf
cmp
orb
mov
lret
or
cwtl
mov
outsl
jmp
xchg
dec
mov
popf
adc
sbb
fmull
fpatan
or
mov
sbb
and
pop
shll
into
xor
pop
push
inc
sahf
inc
inc
and
imul
mov
cmp
scas
xchg
ljmp
repz
xchg
mov
push
fcmovne
sbb
inc
jb
sbb
mov
mov
jbe
ret
dec
pop
add
icebp
inc
insb
cli
inc
std
xchg
out
loope
dec
push
or
pop
cld
push
or
je
dec
cs
mov
pop
imul
inc
mov
in
ret
pop
jle
dec
jle
adc
and
inc
lret
loopne
cli
mov
mov
jb
jno
js
call
push
mov
add
adc
pop
ss
rorb
mov
xchg
je
pop
jb
ret
lock
insb
push
inc
sbb
mov
lea
ds
clc
fstpt
ljmp
push
adc
cmp
xorb
xchg
push
xlat
out
xor
jl
push
sub
ror
ss
ss
sbb
push
mov
push
lea
dec
lods
pushf
fisttps
sub
push
outsb
out
lods
andb
loope
in
cli
sub
add
dec
ret
cmp
out
ss
mov
mov
fs
fs
shlb
jns
inc
daa
push
jmp
rcr
mov
jbe
hlt
mov
pusha
rolb
out
mov
and
test
out
rcrl
lock
add
mov
push
pusha
rcl
mov
std
xchg
push
insl
mov
pop
roll
jno
icebp
bound
insl
stos
sub
jne
mov
dec
lea
adc
inc
jecxz
mov
xor
in
stc
dec
or
ja
stos
jbe
pop
mov
in
push
nop
pop
stos
mov
ret
xor
scas
dec
mov
scas
inc
sbb
dec
stc
cmp
dec
mov
push
pop
imul
dec
adc
inc
jne
inc
lods
xor
out
pop
fists
test
mov
or
xchg
lock
add
mov
mov
les
jbe,pn
jae
push
push
or
aad
cmpsl
fcomi
sub
rolb
sbb
xor
aad
loop
enter
aaa
dec
add
xchg
aas
push
insb
jle
jle
mov
sbb
and
pop
shl
jle
imul
xchg
sub
outsb
pop
mov
add
aam
fwait
insb
mov
test
pushf
push
data16
sbb
inc
inc
sub
push
icebp
mov
mov
mov
testl
adc
stc
cmpsl
and
sub
cmp
mov
nop
cwtl
repz
push
out
and
pop
xchg
stos
add
jo
mov
pusha
mov
jmp
aas
sub
and
dec
mov
je
pop
jle
xor
mov
mov
mov
lock
pop
lock
dec
in
pop
jns
std
popa
enter
movsb
shl
mov
mov
cld
cmpsl
addb
popf
lds
test
sahf
fcmovne
inc
in
addr16
movsb
sub
mov
jae
sub
mov
xor
outsl
lods
rcr
lcall
push
lea
scas
pop
scas
sub
jle
inc
out
cmp
xor
stos
cld
rcrb
mov
aam
mov
das
scas
xchg
and
mov
adc
lds
aas
xchg
adc
fdivl
mov
or
bswap
imul
dec
ja
sbb
mov
add
fwait
cmp
push
lock
adc
push
test
jl
clc
add
aaa
and
lods
xlat
test
add
or
or
int3
and
dec
jmp
pushf
pushf
jae
jle
lahf
xchg
add
je
aas
cmp
stos
rcll
roll
sub
movsl
test
and
outsl
into
xor
arpl
cli
xchg
adc
pop
jns
pop
add
mov
jne
mov
push
ss
loope
pushf
cli
sub
xor
iret
pop
ret
xchg
or
lret
add
add
dec
push
adc
popa
call
add
mov
pop
fisubrl
dec
fstps
push
push
and
mov
lahf
jb
sbb
sub
shll
ret
adc
ja
mov
xchg
push
or
lret
nop
inc
add
cmpsb
jmp
jne
popa
test
adcb
sub
movsl
lahf
fnstenv
rcrb
je
jle
inc
frstor
jle
rcr
in
sbb
jns
cmp
xor
jns
int
ljmp
fimull
sub
outsb
enter
sti
jge
test
test
mov
lret
mov
out
push
jl
mov
int3
mov
fisttps
push
or
or
divb
pop
pop
adc
mov
sub
daa
loop
xchg
adc
sbb
jmp
dec
fdivrl
scas
mov
int3
pop
cmp
out
sub
adc
sbb
dec
add
mov
fcomi
and
scas
test
dec
push
add
ret
ss
or
les
bound
or
mov
push
add
or
cs
pop
sub
inc
std
mov
jg
push
into
push
rcrl
loope
jle
jnp
inc
dec
or
popa
xlat
cmp
popf
cmp
out
repz
das
mov
xchg
or
or
push
lret
pushf
inc
mov
xlat
ljmp
divl
mov
popf
adc
lods
mov
adc
mov
out
outsb
inc
loopne
push
pop
cmc
repz
xor
add
cld
mov
divb
out
test
sub
pusha
mov
sahf
in
and
or
mov
xchg
xchg
pushf
mov
fs
adc
dec
inc
pop
loop
mov
push
rcr
mov
dec
xchg
add
fidivrs
inc
ss
mov
bound
mov
mov
push
aad
in
lods
and
imul
lods
jp
add
jb
inc
jmp
imul
rorl
repz
iret
cli
stos
cmove
mov
sbb
push
ljmp
xchg
jp
fdivrs
rolb
xchg
addb
sub
outsb
sbb
scas
cmp
mulb
inc
in
inc
ret
scas
push
cmp
fistpl
sbb
cltd
pusha
in
adc
in
aam
flds
cld
xchg
gs
cltd
enter
adc
enter
in
lock
pop
fadds
iret
jbe
pop
aad
cmpsb
fimuls
int
dec
xchg
lock
mov
aaa
or
insb
dec
mov
lds
cmp
das
jne
out
jp
lea
lock
mov
mov
mov
sbb
test
dec
data16
sub
mov
lcall
data16
xor
sbb
push
loop
outsl
sti
lds
repnz
cmp
cmp
ret
shlb
fildll
mov
pop
fsubl
xor
pop
and
ljmp
lahf
dec
pop
fstl
xor
cltd
push
pop
or
imul
mov
ret
outsl
mov
jo
scas
xchg
pop
xchg
add
jmp
pop
aas
inc
gs
xor
aas
add
mov
imul
dec
pop
int3
mov
inc
addr16
mov
sub
mov
lods
xor
lcall
outsb
xchg
jecxz
sub
pop
jbe
mov
xlat
ss
or
lods
shl
arpl
pop
sahf
xchg
push
ret
pop
mov
pop
lods
push
clc
mov
call
mov
pushf
add
mov
add
test
ss
mov
mov
xlat
es
jae
scas
jne
lods
test
mov
jp
aaa
lcall
push
xor
ja
push
mov
fldt
or
pop
fwait
stos
cmp
inc
dec
das
add
adc
add
dec
mov
mov
shr
out
push
ss
es
xchg
insb
jmp
out
popf
inc
mov
mov
add
cld
inc
lock
insb
xchg
mov
insl
cmp
or
cmp
sbb
and
xor
adc
js
adc
dec
lcall
mov
mov
aas
pop
mov
push
mov
cld
add
jo
call
ljmp
loop
mov
addb
js
sbb
out
outsl
testb
sbb
pop
cmp
adc
adc
push
jns
mov
dec
ds
jl
call
sar
push
dec
lahf
mov
fstl
mov
pop
imul
iret
add
add
push
divl
shr
jb
test
and
movsl
fucom
sbb
jp
and
mov
mov
mov
ja
push
and
pop
arpl
pop
mov
pop
aam
je
inc
neg
inc
in
cmp
fwait
add
scas
rol
push
xor
in
mov
xchg
aad
addr16
sbb
popf
aad
dec
call
das
outsl
push
insl
aam
mov
test
loope
gs
or
dec
dec
movsb
xchg
stos
push
loop
test
sbb
add
pop
js
adc
std
push
ret
sub
ds
jecxz
shlb
in
xor
push
leave
and
les
mov
pop
nop
pop
data16
xchg
ret
and
mov
mov
stc
inc
inc
std
in
roll
shll
movsl
cmc
in
rcrb
movsl
fwait
mov
inc
xchg
push
sub
ret
pop
imul
push
shl
jne
dec
inc
test
and
popf
mov
push
loopne
add
outsl
in
jle
or
mov
inc
mov
mov
push
jb
xchg
int
in
int3
sar
ret
pop
pop
mov
repnz
xorb
dec
adc
mov
mov
dec
jb
sub
movsl
push
add
sbb
mov
out
stos
adc
ret
call
repnz
mov
add
jg
xor
inc
and
test
aas
cmpsb
xor
addr16
test
or
clc
jns
mov
aam
cld
or
mov
pop
cmp
push
jp
and
push
fucom
shll
jbe
jge
jge
inc
rcl
test
hlt
mov
repnz
popw
orl
fcmovb
pmaxsw
dec
outsb
mov
roll
xchg
or
fwait
push
iret
je
mov
sbb
jp
xchg
xchg
aad
punpckhwd
jmp
jb
push
sar
xchg
xchg
fld
jae
shrl
push
pushf
or
sub
stos
cs
les
ret
or
test
jmp
ja
ret
dec
clc
push
bound
push
divb
and
xor
fdivl
and
hlt
addr16
inc
out
jmp
iret
rolb
into
gs
mov
shrl
jns
lret
fucomi
push
sub
inc
add
stos
inc
add
mov
cltd
lret
sbb
out
xchg
cmp
mov
jo
mov
fwait
jmp
and
push
aad
jmp
jbe
inc
sub
lds
and
fwait
mov
push
fdivrs
or
add
pop
push
push
cmova
arpl
jne
repz
mov
or
inc
sti
xchg
jge
in
push
jno
leave
jae
xchg
aas
xchg
stc
push
jnp
lret
shll
enter
dec
dec
push
pop
cmp
push
inc
jecxz
or
sbb
mov
inc
test
les
dec
jae
adc
es
fdivrp
mov
in
push
das
add
mov
pop
leave
fcoml
xchg
push
sbb
jp
scas
and
mov
sahf
insl
mov
xchg
xor
sub
or
cs
jecxz
cwtl
leave
les
xlat
lahf
in
test
dec
les
jne
arpl
mov
sub
insb
leave
xchg
insb
xor
push
std
movsl
ds
movsb
or
jb
mov
daa
sub
push
mov
imul
cld
dec
das
and
lea
pop
hlt
aaa
fiadds
mov
loope
jge
push
inc
arpl
cmp
jno
dec
mov
lods
mov
push
cmc
push
push
inc
and
int
jbe
sti
movsl
outsl
sub
sahf
mov
loope
decb
repnz
push
notl
push
movsb
sub
cld
pop
add
xchg
clc
repz
inc
lods
icebp
std
movsb
insb
popf
sbb
popf
sarl
fldt
fcoms
fsub
lods
pop
sbb
dec
mov
insb
fists
xchg
addr16
dec
mov
mov
lret
push
out
inc
lret
fs
shll
cmpsb
enter
or
aaa
push
or
jbe
pop
push
fsubl
pop
insl
cld
adc
jbe
ret
fidivs
pop
mov
es
pushf
dec
push
push
cmp
mov
xchg
hlt
mov
scas
and
fidivrs
dec
ret
int3
mov
push
popa
ja
fdivrp
cmp
and
pop
in
fcompl
in
xor
pop
loope
or
fucomi
cltd
add
pop
jns
adc
lea
pop
je
icebp
and
lods
daa
adc
fcoml
add
cs
mov
mov
hlt
push
lock
cmc
rcrb
loope
push
lret
xchg
scas
lret
test
push
mov
cwtl
ljmp
mov
movb
lods
cmp
dec
mov
stos
or
mov
pop
push
bound
push
dec
dec
xchg
xchg
dec
cltd
add
adc
rclb
mov
aaa
or
mov
xchg
jb
adc
std
xchg
cmp
mov
and
dec
and
mov
push
add
dec
shll
popa
add
loopne
sahf
movsl
dec
cmp
jl
cmp
lret
mov
popa
shll
cmp
dec
dec
inc
dec
pop
jae
mov
cmpsb
fisubrs
mov
push
jo
jo
movsb
int
cmc
in
push
scas
sahf
fldl
mov
push
add
inc
call
push
inc
je
fwait
jno
mov
jle
imul
out
mov
fsts
inc
loope
ret
in
aad
std
mov
fwait
sub
pop
mov
das
je
sbb
and
xchg
cmp
out
lea
mov
mov
xorb
cmpsb
fstpl
out
outsb
pop
push
out
faddl
subb
ret
stos
pop
in
sub
or
add
mov
je
sbb
jmp
jno
dec
sbb
ret
pop
fdivrl
js
and
lods
ret
xchg
fnsave
rep
lea
mov
jne
xchg
pop
cmp
pop
push
cmp
push
lahf
pop
pop
dec
jg
mov
aas
push
xchg
mov
stc
mov
mov
into
mov
add
mov
jnp
shlb
inc
lea
pop
int3
movsb
fisubrl
sbb
jb
mov
fisubrl
inc
jl
mov
int3
sbb
jno
pop
adc
or
cmp
cmp
repnz
sarl
ja
add
subb
rcl
push
pop
enter
pop
jecxz
stc
cmp
xlat
push
jnp
push
testl
addr16
push
cmp
sub
xor
pop
jl
movsl
xchg
fisttpll
jge
stos
mov
xchg
sahf
aam
je
mov
sarl
jge
mov
cltd
cmp
ret
push
repnz
cmovge
push
sbb
cmp
sahf
or
jne
mov
mov
xchg
leave
std
mov
mov
aas
push
in
xor
fidivrl
jmp
fldenv
scas
xor
mov
lock
xor
aas
outsl
mov
aas
leave
mov
out
nop
arpl
mov
sub
add
ret
into
sbb
mov
push
aaa
fidivrs
mov
and
xor
fsts
cmp
push
cmp
xchg
test
pop
xor
push
inc
cmpsb
in
fidivrl
frstor
jbe
pusha
ss
test
sbb
adc
adcb
shll
sbb
ja
mov
sbb
fcmovu
inc
adc
mov
lahf
aam
cmp
scas
sbb
test
xchg
push
adc
out
es
int
xor
or
jecxz
cmp
adc
cs
sub
popa
mov
sub
jmp
add
or
or
or
xor
pop
or
test
ret
mov
push
xorb
mov
enter
sti
cld
and
clc
lret
movsl
inc
in
incl
orb
imul
rclb
mov
mov
cmp
cld
mov
and
push
je
fnstenv
lods
inc
pop
sub
lods
jmp
adcl
adc
xor
movsb
cmp
cmpsb
aam
add
data16
outsb
sbb
push
and
stos
dec
or
push
sbb
xchg
xchg
pop
testb
pop
push
xor
pop
mov
jno
dec
loope
sbb
mov
xor
lret
push
inc
push
rorb
mov
arpl
dec
js
movsl
mov
pop
fdivrs
push
cmpsb
lods
in
xor
pop
push
mov
andl
inc
sub
pusha
push
pop
out
in
sub
fnsave
ja
add
shlb
sub
push
mov
add
cltd
daa
mov
adc
js
pop
xor
arpl
and
sub
sbb
jmp
mov
imul
fmull
xchg
dec
dec
push
scas
pop
or
jno
int3
shll
push
add
and
xor
xor
aam
int
cmc
out
test
arpl
pushf
push
jge
das
je
les
outsb
mov
jp
push
jo
jle
das
add
outsb
cltd
mov
daa
out
in
dec
cmpsl
call
pop
mov
imul
mov
xor
lahf
test
cmpsb
hlt
pop
fidivrs
push
int3
and
pushf
push
loop
adc
xlat
test
push
mov
and
push
pop
inc
jmp
jb
lcall
pop
sub
or
fs
inc
notl
add
dec
pop
popa
aam
imul
js
insb
sbb
nop
stos
adc
enter
jae
sbb
enter
jmp
sub
in
inc
sbbl
bound
enter
pop
jmp
pop
xchg
push
xchg
shlb
ljmp
jp
ret
cmpsb
popf
imul
mov
mov
dec
int3
orl
loope
fimull
and
sbb
pop
cmpsb
cmp
inc
inc
push
mov
cmp
ret
stos
dec
inc
add
jg
lds
fldcw
mov
outsl
std
movsb
sahf
sbb
xchg
sub
cmc
daa
fs
mov
adc
stc
inc
and
outsl
test
adc
jb
inc
outsl
iret
movzbl
lahf
mov
cli
push
mov
mov
js
fcoml
aaa
cmp
jl
mov
mov
sbb
mov
mov
inc
push
loope
cmc
movsb
nop
sub
push
mov
dec
adc
shrl
xor
aam
repnz
mov
out
mov
mov
jbe
inc
dec
jns
fimull
pop
mov
sbb
ret
fsubs
loopne
je
rolb
orb
out
sbb
mov
ja
shrl
daa
jmp
icebp
imul
mov
cmp
push
dec
sarb
dec
arpl
mov
dec
imul
cmp
mov
dec
addr16
sub
leave
jmp
enter
mov
mov
inc
jb
mov
sub
sub
clc
outsl
fldenv
cmp
sub
xor
cmp
sub
sbb
pop
roll
jne
push
mull
add
lahf
xchg
jo
adc
push
fidivrs
dec
xchg
test
mov
ss
popl
loop
fists
repnz
or
sub
js
sbb
ja
fs
repz
iret
sub
repz
mov
inc
lods
mov
cmp
adc
movsl
frstor
add
xchg
push
sar
push
cmc
mov
cmp
inc
or
clc
aad
xchg
inc
ljmp
add
mov
outsl
stos
lods
jmp
loopne
xor
mov
or
mov
movsb
or
test
sbb
mov
inc
fs
addl
andb
testl
dec
sub
sub
push
addb
clc
cmp
add
inc
xchg
sub
xchg
cmp
add
and
test
clc
into
jge
loop
mov
stos
pop
mov
ja
adc
adc
stos
xor
imul
faddl
iret
andl
inc
xlat
fwait
daa
add
addr16
mov
add
mov
repnz
mov
jp
lock
shlb
jb
xor
push
xlat
add
notb
cmc
andl
mov
push
mov
sub
imul
test
mov
cli
mul
add
mov
pop
dec
sub
add
sbb
popf
or
loopne
jbe
xchg
nop
out
out
pop
mov
jns
mov
out
vpunpcklbw
sbb
ret
fwait
fs
xchg
mov
pusha
pop
or
imul
fildll
push
inc
insl
mov
sarl
test
daa
add
adc
adc
dec
adc
jb
lods
lea
adc
ljmp
inc
sar
and
push
add
data16
sub
lock
jle
xchg
sahf
push
or
mov
xor
movsl
lods
dec
mov
mov
in
mov
dec
or
addr16
sub
cmp
movsb
adc
and
jg
mov
push
imulb
lea
mov
out
sbb
sub
jbe
push
xchg
dec
mov
adc
sbb
pop
lret
es
shll
cmp
mov
cmp
lods
sub
mov
sub
addr16
push
cmpb
orb
mov
mov
push
cmpsl
push
mov
jmp
mov
mov
jnp
mov
mov
inc
aam
mov
in
out
sub
jno
out
cld
mov
insb
sahf
js
rolb
lock
in
mov
orl
mov
lcall
test
pop
iret
pop
mov
les
repz
out
pop
inc
imul
sub
mov
xchg
pop
cmp
loop
cmp
das
sbb
orb
mov
push
bound
es
dec
lea
into
hlt
in
adc
sti
xor
mov
cwtl
sub
pop
inc
jb
pop
and
subl
and
imul
dec
fwait
jae
sub
aad
mov
movl
inc
or
fnstsw
jo
adc
add
nop
hlt
adc
mov
dec
out
or
fiaddl
mov
dec
xlat
aam
xor
pusha
xchg
enter
les
sbb
aas
add
mov
pop
xchg
add
movsb
out
mov
pop
jnp
ss
xchg
out
mov
cmp
mov
sbbb
sti
dec
iret
in
sbb
ss
mov
cmc
add
push
jecxz
jmp
dec
cs
fiadds
mov
sub
pop
ss
adc
movsl
and
mov
adc
pusha
or
out
mov
sbb
xlat
int
jle
mov
lret
scas
sti
inc
xchg
and
cmp
lea
jne
cmpsl
scas
cmc
nop
jecxz
inc
jg
daa
mov
xor
adc
inc
xlat
leave
sub
jp
scas
cld
push
mov
xchg
xor
push
cmpsl
fcoml
outsl
cwtl
popf
js
movsb
stc
je
insl
pop
add
adc
pop
cli
rorb
mov
out
xchg
mov
sbb
pop
xlat
aaa
mov
mov
aam
aad
out
icebp
push
loopne
or
add
cli
xor
or
rclb
inc
or
sti
sub
push
add
sbb
shlb
gs
add
pushl
pop
pop
cli
pop
mov
imul
testb
jmp
or
sub
stos
je
bound
pop
dec
and
sub
ret
or
adc
mov
mov
jge
xchg
loope
mov
aad
mov
sbb
sbb
repz
dec
inc
cmp
dec
mov
push
and
mov
lret
mov
add
shl
dec
ja
mov
adc
dec
jl
xor
add
pop
adcl
adc
adc
cmp
and
xor
js
and
lods
xorl
dec
sub
addr16
lret
scas
cli
int3
js
das
rcrb
xlat
aam
push
inc
ret
dec
push
mov
repnz
stos
pop
scas
sub
test
imul
sbbl
testl
and
mov
inc
xchg
and
mov
mov
faddl
mov
int3
into
xor
fbld
bound
inc
adc
sbb
jecxz
xor
xlat
aad
nop
jo
scas
je
pop
jae
out
or
mov
pop
inc
dec
shlb
cmp
in
ret
mov
push
jne
sub
jge
sub
rorl
cltd
testb
test
lret
xor
jns
mov
sbb
cmpsl
iret
adc
cmp
sbb
xchg
dec
xchg
fisubrs
adc
loopne
xchg
adc
das
adcb
cmpl
dec
fwait
push
jae
rclb
hlt
push
push
cmp
addr16
call
pushf
ja
les
jmp
rclb
or
mov
aad
arpl
dec
adc
mov
in
in
push
hlt
cmp
insb
adc
mov
mov
xor
arpl
call
or
lret
push
mov
in
lock
int3
add
add
add
inc
mov
cs
nop
inc
mov
push
mov
lret
fwait
fsubrl
mov
fucomip
lret
add
cmp
pop
xchg
js
sub
or
ds
jg
sbb
mov
subl
inc
adc
mov
lcall
sbb
mov
sbb
je
movsl
insb
notl
clc
mov
cmp
inc
stos
sar
gs
mov
data16
xor
mov
push
cmp
push
js
push
dec
orb
pop
clc
fsubl
dec
rcrl
cmpsb
xchg
mov
xor
in
dec
adc
sbb
dec
cmp
cmp
pop
lock
mov
fdivrs
aas
dec
leave
xchg
jg
mov
movsl
push
aas
leave
mov
lret
pop
in
sbb
add
adc
out
lahf
pop
fimuls
jne
xchg
push
es
inc
jle
imul
test
mov
sub
push
or
aam
je
or
mov
mov
pop
out
mov
leave
sbb
sahf
and
mulb
jecxz
outsb
or
and
shl
popl
xchg
pop
std
xchg
iret
adc
push
xor
lock
stc
add
xchg
scas
ja
cmp
or
mov
imul
fdivs
sbb
cmp
and
inc
inc
testl
xchg
ficoms
lods
mov
adc
add
repnz
nop
or
ret
ljmp
mov
xor
fsubrl
jmp
or
lods
loopne
dec
aas
sti
xchg
dec
xor
insb
cmpsl
stos
adc
mov
push
idivl
push
sbb
scas
cmp
add
and
adc
push
xchg
rcl
cmp
mov
mov
cmp
arpl
push
xchg
loope
adc
cmp
dec
mov
push
or
mov
jecxz
or
sub
mov
insl
cmp
pop
adc
sub
aas
push
shll
out
fs
mov
repnz
in
lea
repz
cmp
imul
mov
adc
fdivrs
lods
es
and
jnp
in
push
dec
or
dec
xor
or
and
pop
adc
pusha
fisttps
js
movsl
pop
adc
and
stc
insb
rcl
sar
stos
jbe
ret
pop
xor
fucomp
ljmp
mov
xchg
mov
sub
xchg
out
int
out
xchg
test
int3
and
bound
into
mov
pop
pop
mov
pop
sub
dec
mov
shrd
jecxz
jecxz
cmc
push
pop
jnp
inc
shlb
push
lods
cmp
xor
and
stc
loope
stos
jne
xchg
push
push
jecxz
mov
lea
pop
inc
adcb
sbbb
mov
insb
adc
scas
xchg
inc
filds
aad
lret
push
js
lret
fs
lret
arpl
or
jmp
push
dec
cmpb
mov
and
jmp
sub
mov
cmp
std
lahf
cmpsl
dec
ja
mov
jp
dec
mov
mov
xchg
push
sbb
add
lret
cmp
mov
jmp
sbb
jno
test
jg
xchg
or
adc
or
popa
lahf
mov
pop
cwtl
aas
testb
imul
movsl
xchg
pop
mov
lret
dec
sub
or
ss
push
sbb
outsl
adc
xchg
adc
fwait
xor
rclb
loop
jp
scas
mov
mov
mov
mov
aam
ljmp
dec
adc
out
fisttps
sub
in
in
adc
push
mov
lods
std
xchg
push
data16
rorl
push
dec
add
insl
add
mov
or
test
scas
xchg
leave
sbb
repnz
ss
pop
sub
cmp
pop
and
adc
and
cld
adc
dec
arpl
test
in
fs
js
sbb
leave
jbe
and
adc
push
repz
fdivl
mov
xchg
pusha
xchg
cmp
mov
push
cmp
sbb
mov
iret
sbbb
mull
xor
dec
insb
int3
xchg
mov
shll
push
lods
sbb
push
gs
mov
or
mov
or
aad
adcb
mov
mov
and
lock
clc
test
sbb
repz
jl
iret
mov
add
jp
mov
lods
loop
stos
inc
jmp
stc
outsb
insb
sbb
inc
push
inc
cld
xchg
aam
test
ret
pusha
dec
inc
xchg
je
out
insl
cwtl
sub
loope
sub
arpl
pop
pop
fistpll
leave
mov
sahf
push
subb
ror
adc
mov
clc
pop
testb
jle
mov
inc
aas
faddl
mov
es
or
xor
popf
pop
cs
sub
xor
pop
test
cmp
pop
insb
adc
xor
jmp
mov
or
mov
add
xor
pop
cmp
scas
shll
lret
call
adc
mov
lcall
adc
je
sub
or
icebp
clc
stos
addl
cli
mov
cmp
or
push
jecxz
adcb
push
cwtl
pop
pop
adc
xor
lea
xchg
out
xchg
pop
sub
push
scas
in
testb
icebp
xchg
faddl
fsubl
xchg
mov
stos
pop
lea
cmpsb
fstp
imul
leave
loop
pop
mov
js
xor
or
xor
fstpt
dec
rol
out
mov
sub
adcb
adc
js
lea
push
stc
ljmp
push
movsb
or
int3
xor
push
push
xchg
add
or
mov
jle
lock
cmp
jae
leave
icebp
mov
repnz
pop
stc
jb
outsl
std
fisubrs
push
pcmpeqw
push
fistl
sub
sub
jo
enter
fildl
shlb
dec
sahf
mov
mov
sbb
xchg
fs
scas
mov
clc
sahf
std
fs
movsb
cmp
mov
in
imul
cmp
xor
addr16
rcrl
and
jp
addr16
jecxz
lret
add
fsubr
pop
stos
sbb
je
scas
aas
data16
inc
aad
sub
sub
cmp
lds
stos
sub
fs
xor
sbb
mov
push
pop
popa
sub
sbb
adc
jo
enter
dec
fsts
mov
fnstsw
and
fcomps
stos
scas
add
dec
push
cmp
in
pop
cmp
xorb
rclb
jl
jb
mov
mov
jl
into
and
add
push
cltd
pusha
push
mov
fisubl
mov
lret
jp
ss
xor
loop
ljmp
xchg
jae
mov
sbb
rcl
es
test
xor
and
cmp
inc
mov
idiv
sbb
adc
fwait
cmp
ret
into
sahf
add
adc
pop
fmul
lock
sbbl
sbb
iret
push
and
mov
gs
movsl
push
movsl
sub
shrb
xchg
pusha
lods
inc
dec
dec
adc
imul
hlt
sub
mov
fimull
push
mov
ja
repz
shlb
inc
cwtl
jge
pop
sahf
jne
jns
mov
testb
shll
test
lods
stos
inc
and
mov
cli
mov
stc
push
subl
pop
inc
push
or
pop
mov
loop
pop
lds
arpl
cmp
adc
repnz
lret
jo
cmp
pop
pushf
in
cmp
xor
pop
movsl
or
aaa
js
xchg
adc
cmpsb
jle
test
inc
mov
push
subl
push
in
jno
fdivs
je
cli
adc
inc
and
xorl
gs
fnstenv
inc
xor
rcl
test
jns
xor
arpl
aam
fwait
add
xor
mov
jle
arpl
dec
and
xchg
cmp
scas
stos
push
sbb
cwtl
xor
dec
jnp
out
or
jb
pop
cmpsb
scas
mov
push
lods
cmpsb
inc
je
fs
adc
test
mov
fistps
push
test
jne
push
inc
test
arpl
mov
sarl
push
jo
jnp
sbb
sbb
outsl
jmp
fldl2e
xchg
xchg
dec
mov
fiadds
push
mov
push
out
push
aaa
pushf
dec
into
pop
insl
dec
mov
ja
or
cmpsl
sbbb
jne
jbe
and
cmpsl
adc
cmp
stos
cmpsl
push
jp
adc
gs
shl
cmpsl
mov
movsl
inc
xchg
sub
push
inc
and
jns
add
loopne
cmpsb
pop
push
ret
jno
std
sti
and
jno
js
clc
movsl
add
test
je
shrl
and
inc
cltd
jl
pop
in
stc
pop
and
inc
and
sub
dec
lahf
cmpsb
sbb
rorb
out
subb
add
ud0
push
outsl
nop
fdivl
movsl
lcall
xor
sbb
jbe
aam
sbb
cld
bound
lods
jbe
aam
mov
sbb
dec
in
cmpsl
jbe
or
into
aaa
xchg
add
or
insb
mov
call
psraw
adc
sbbb
nop
xor
shll
scas
out
in
xchg
movsl
sub
xchg
sub
inc
rorl
xchg
inc
xchg
pusha
jmp
mov
out
push
shrb
mov
cmp
into
in
fidivl
int3
inc
ss
inc
pop
imul
push
movsl
insb
push
sbb
scas
ja
sub
cmp
mov
jb
mov
ja
daa
loope
or
push
xor
mov
xchg
dec
push
ret
mov
out
or
hlt
sub
xlat
or
inc
insl
shrb
and
mov
dec
test
scas
sub
pop
xlat
xor
clc
or
pop
xchg
dec
cwtl
movsl
sbb
into
scas
mov
push
movsl
ret
ret
and
mov
lock
pop
pop
xchg
mov
insb
mov
mov
pop
sub
push
sbb
sub
fneni(8087
jp
dec
enter
jb
fcompl
push
add
aaa
pop
ds
mov
out
test
movsb
cmp
mov
aad
push
inc
sub
xor
cmp
pop
rcll
inc
hlt
mov
xor
sub
cld
enter
nop
and
test
sub
jae
push
push
fidivrs
sarl
cmpsb
mov
aas
sbb
dec
lret
negb
jbe
clc
lock
add
les
imul
push
lock
dec
adcl
add
enter
pop
into
sbb
rol
add
cmp
outsl
jo
test
pop
imul
dec
mov
add
popa
dec
loopne
and
bound
mov
adc
add
adc
lcall
mov
std
inc
mov
add
test
out
jae
mov
test
ret
adc
lods
insb
and
sarb
fisubrs
sub
mov
xor
pop
lret
inc
inc
inc
push
dec
jno
pushf
adc
sub
aas
xor
lods
hlt
clc
movsl
or
test
inc
add
test
out
pop
xor
push
lcall
jecxz
add
sbb
mov
scas
fwait
pop
out
jb
mov
pop
inc
stos
mov
mov
add
xchg
jns
rolb
fdivrs
lcall
enter
fwait
sbb
adc
scas
adc
mov
mov
aad
or
xor
arpl
repz
in
sub
adc
mov
push
xchg
jb
xchg
rorb
fcmovne
mov
xor
mov
jmp
dec
and
xchg
fists
addl
jo
nop
nop
loope
pop
lods
movsl
je
mov
pop
mov
mov
cmp
xor
outsl
stc
fwait
xor
xlat
cmpsl
ficomps
xchg
jb
sarl
mov
imul
adc
mov
push
jo
xchg
dec
add
aas
loope
dec
out
lret
iret
xor
jo
jl
pop
mov
push
aad
shrl
or
cmp
xchg
jecxz
insb
orl
lret
cs
cwtl
push
and
jbe
xchg
inc
sub
push
push
imul
sbb
mov
jo
loope
leave
cltd
loopne
pop
in
jg
sahf
in
ficompl
jle
mov
dec
xchg
loope
addr16
lret
push
sbb
jge
add
loope
das
cmp
jp
adc
xchg
cltd
mov
jle
test
mov
mov
inc
fmull
shlb
addr16
mov
insb
cmp
jp
fdivrl
insl
movsb
and
cli
cmpsb
cmp
and
jl
xchg
ds
pop
ljmp
das
mov
and
addr16
pop
xchg
mov
inc
rcrl
sbb
cltd
inc
add
push
dec
inc
pop
mov
data16
dec
movb
mov
hlt
pop
insl
jno
dec
add
adc
push
mov
stos
mov
xor
fcomi
xor
cld
insl
dec
jle
daa
push
outsl
mov
cmpsl
cmc
ljmp
out
cmpsl
and
out
aam
mov
sbb
in
lods
pop
sbb
lret
push
inc
mov
pop
jecxz
pop
in
aaa
roll
ja
cmp
out
bound
bound
mov
fsts
push
imul
dec
js
out
push
sarb
filds
xor
xor
adc
sub
sub
sbb
inc
sahf
lea
push
fst
jl
pop
cmp
rcll
sahf
jae
aad
bound
addr16
cld
repnz
jbe
loope
mov
mov
stos
hlt
xor
cmpl
xchg
lea
je
cltd
sahf
cli
jb
jle
js
lds
jl
stc
push
aam
mov
xor
mov
shlb
lret
pop
push
and
shrl
cmc
popf
pop
leave
scas
or
outsl
inc
cmp
jp
mov
sub
out
or
pop
adc
pushf
ret
mov
ss
xor
in
mov
lods
push
push
sti
or
xchg
jmp
test
das
sbb
in
xor
mov
lret
sub
mov
cli
mov
jmp
sbb
loopne
lods
bound
add
and
pop
and
cmc
inc
imul
enter
mov
xchg
push
and
or
xchg
adc
imul
fdivrs
mov
lea
mov
aas
ljmp
ret
addr16
adc
repnz
sahf
add
repz
test
jge
addr16
or
aas
jbe
push
cmpsb
ljmp
dec
gs
fnstsw
push
sbb
xchg
inc
add
pop
rcrb
hlt
xor
cmp
gs
jle
mov
sbb
mov
mov
xor
inc
xchg
xchg
ret
call
inc
das
mov
inc
add
dec
inc
add
lret
inc
lahf
pop
cwtl
xor
fdivr
das
pop
pop
hlt
stos
sbb
pop
fs
mov
in
push
add
jb
outsl
xor
mov
lcall
andb
dec
mov
cmp
and
out
cltd
cmpsl
push
loope
cmp
xor
dec
sbb
lea
add
xchg
push
sub
cmp
cmp
leave
pusha
aad
xchg
and
jae
cmc
mov
mov
inc
out
aas
addr16
cs
mov
jns
mov
mov
jns
hlt
clc
lret
cld
addr16
dec
lret
cmp
and
and
cmp
dec
xchg
or
jg
push
add
insb
js
jns
mov
mov
push
sbb
shlb
mov
nop
dec
call
loop
imul
rcll
fistpll
pop
jg
int
loop
stos
incb
shll
movsl
xlat
or
inc
fisttpll
xchg
xchg
js
sbb
inc
mov
adc
sti
arpl
mov
mov
push
popf
ljmp
mov
push
xor
popa
dec
sbb
orl
push
jb
shll
lds
ja
lret
es
call
xchg
mov
xlat
mov
fistpl
add
xchg
xlat
sbb
xchg
pusha
push
push
cmpsb
in
dec
dec
xor
sbb
xor
xor
rcll
dec
sbb
pop
adc
cmpsb
movsl
lahf
and
adc
stos
adc
push
mov
movsb
dec
sbb
aam
mov
mov
adc
bound
rol
jle
mov
mov
pop
jmp
sbb
mov
out
in
xchg
push
and
xchg
cmp
into
pop
jg
mov
das
pop
adc
dec
ds
sbb
out
lods
sub
pop
sbb
sahf
push
call
lcall
es
pop
xchg
push
in
insl
lea
sbb
cmc
pop
ret
js
cwtl
jl
aad
pop
sbb
cs
push
inc
pop
repnz
lret
int
push
imul
rorb
add
and
or
mov
cmp
xchg
xchg
adcl
mov
lds
cmp
xchg
std
test
jle
lea
cs
cmp
pop
aaa
mov
in
clc
out
sub
adc
ja
jmp
adc
sbb
mov
inc
ss
pop
jnp
xchg
push
mov
imul
in
or
pop
xorl
mov
push
sub
sub
mov
loope
jb
cmp
or
je
jmp
xchg
mov
divb
mov
push
mov
cwtl
cmpsb
mov
xor
add
xchg
xor
icebp
xor
call
rcll
xchg
cmpsb
jecxz
lods
push
icebp
and
sbb
out
stos
into
sbb
jl
push
or
in
push
mov
test
inc
push
pop
inc
add
in
repnz
cmp
lods
pop
lock
dec
add
jmp
insb
popa
ret
popf
aad
or
dec
js
xorb
jp
sti
adc
int3
jae
pop
mov
pop
xchg
xor
lret
hlt
aaa
cmp
or
out
pop
cltd
mov
stos
es
cmp
xor
sbb
pop
dec
scas
mov
and
fsubs
add
mov
pop
movsb
or
and
add
mull
iret
fistpl
adc
insb
into
sar
loop
js
or
es
adc
xchg
cmpsb
sarb
in
jns
adc
aas
roll
bnd
lcall
adc
inc
and
fstpl
xor
outsl
or
xchg
pop
and
movsl
jl
pop
sub
add
mov
orb
pop
sbbl
decb
jg
xchg
pop
data16
inc
lcall
fld
cli
inc
pop
lods
xchg
int
mov
sbb
or
inc
mov
aas
sub
popf
loope
mov
push
jle
sub
in
aad
mov
jl
inc
mov
dec
and
inc
dec
push
push
cs
stc
and
xchg
xchg
pop
add
ror
js
cmp
lret
mov
jns
push
xlat
push
or
mov
test
ljmp
sbb
or
xchg
aaa
push
fwait
xor
mov
iret
rcrl
das
add
xchg
int3
xchg
addl
pop
sti
add
ljmp
push
jno
aas
or
into
adcb
testb
pop
push
fnstsw
sub
jne
stos
push
das
pusha
dec
jnp
xchg
adc
cmpsb
cli
jne
and
jne
push
outsl
add
dec
sbb
push
sub
inc
push
or
shlb
cmp
push
call
dec
icebp
lahf
or
jne
arpl
inc
mov
jl
push
cmp
sbb
lret
sbb
lret
in
inc
loopne
pop
jg
mov
cmp
in
cmp
int3
in
mov
sbb
xchg
xchg
jmp
inc
dec
jmp
inc
jl
sarb
push
ja
ja
in
stos
pop
and
xchg
sbb
pop
ds
iret
scas
add
scas
testb
cmp
gs
movsb
push
xor
vmovq
push
test
sbbl
dec
sbb
outsb
cmp
mov
pop
and
pop
loop
std
negl
adc
xlat
jl
cmp
sub
push
lahf
xor
enter
notl
nop
add
pop
jo
pop
add
fistps
gs
dec
mov
pushf
xor
ss
fld
loopne
sbb
cmp
loope
jmp
dec
dec
js
insb
pop
ljmp
adc
xorb
jg
fisubs
sub
dec
dec
fcmovbe
addr16
loop
outsb
mov
das
mov
sti
or
insb
inc
das
ficoml
imull
mov
inc
dec
iret
loope
mov
mov
jge
divb
int
mov
xchg
inc
cmp
xor
loop
cmp
mov
adc
scas
sbb
push
dec
xlat
leave
lret
push
mov
jecxz
scas
push
jmp
lods
sbb
mov
push
pushf
inc
aad
mov
loope
fsubrp
cmc
push
repnz
movsb
lret
lahf
out
nop
jge
ret
into
fwait
idivl
mov
aaa
or
out
pop
push
loop
in
mov
xlat
rolb
cmp
or
inc
std
rcrb
cltd
sahf
call
or
mov
ds
mov
repnz
mov
mov
out
mov
shlb
push
sarb
faddl
movsl
je
adc
sarb
xchg
int3
add
adc
jmp
mov
pop
rclb
into
pop
jb
sbbl
iret
add
mov
push
xchg
imul
cli
sub
xor
xchg
negl
mov
push
cmp
add
ficompl
dec
outsl
mov
xor
sbb
and
inc
dec
frstor
mov
dec
andl
sbb
sub
hlt
sarl
and
test
add
cmp
in
imul
lahf
xchg
pop
lea
push
shlb
xchg
and
sub
dec
les
sarb
pop
jbe
dec
jmp
rclb
xchg
jns
push
das
dec
das
sbb
xchg
movsl
adc
sti
popf
sub
inc
shlb
add
pop
xchg
mov
jmp
test
jmp
pop
cmp
jg
or
popa
push
mov
mov
insb
mov
lods
jmp
mov
dec
mov
add
clc
jno
xchg
icebp
dec
sub
adc
notb
push
mov
cmp
or
movsb
imul
ljmp
std
xchg
cmp
jno
sub
test
xchg
fcmovne
xchg
jmp
mov
ja
mov
stos
sahf
pushf
ja
pop
mov
xor
pop
mov
inc
pop
ljmp
xor
out
cld
cltd
dec
push
pop
push
or
inc
or
int
mull
jl
jp
jnp
mov
add
lahf
movsl
out
mov
adcb
pop
loopne
lea
mov
push
pop
jo
mov
lds
mov
xlat
inc
dec
sub
sub
fldl
and
pop
std
xchg
xchg
xor
jns
dec
nop
imulb
mov
dec
loope
dec
jb
cmp
pop
push
xchg
out
push
jmp
loop
repnz
and
inc
hlt
fsubrl
mov
adc
adc
cmp
hlt
xor
jae
test
lret
cmp
ljmp
dec
sbb
fadds
and
pop
add
inc
add
ljmp
ljmp
xchg
mov
jmp
adc
loop
aas
ror
jl
and
add
mov
cltd
shrl
or
incb
inc
dec
ret
push
js
and
mov
inc
mov
test
fistl
dec
lock
inc
or
adc
pop
test
leave
mov
scas
ja
mov
scas
stc
mov
jp
outsl
xlat
inc
outsl
imul
pusha
push
or
xor
test
mov
push
mov
cmp
lods
cltd
stc
popa
lret
int3
push
leave
sub
jbe
fdiv
insl
leave
out
lods
scas
xor
test
outsl
lret
dec
push
loopne
or
jg
cmp
fs
les
mov
les
xchg
dec
xchg
mov
rcll
inc
adc
icebp
cs
dec
inc
sub
or
jmp
hlt
in
out
push
add
ss
test
jle
repz
out
daa
mov
mov
popa
dec
push
push
jae
jns
cli
insl
in
mov
int3
mov
add
sbb
imulb
pop
test
aam
xchg
and
mov
popa
lock
pop
sbb
sbb
mov
addr16
std
sarb
fisubrs
adc
inc
stos
mov
inc
add
push
insb
push
sbb
in
cmp
daa
xchg
pushf
ret
xchg
push
pop
cmpsl
mov
mov
out
and
jae
ss
dec
jmp
or
loope
jmp
repnz
or
push
lcall
iret
cmp
int
addr16
sub
and
ja
mov
fcmovb
adc
loop
fcmovbe
movl
lea
in
dec
inc
adc
or
in
mov
outsb
sub
inc
sub
jmp
pop
mov
aas
jmp
inc
insl
mov
add
shl
ljmp
cmp
xor
aaa
sub
test
iret
pop
inc
mov
push
mov
push
pop
loopne
rcll
jg
into
push
adc
and
mov
jbe
insl
je
or
add
es
xchg
xchg
aam
inc
scas
pcmpgtd
les
lahf
mov
push
mov
and
xchg
adc
cmp
testl
fidivrl
sub
push
fbld
push
jmp
mov
gs
jne
push
movb
jne
mov
sub
loop
ja
dec
std
and
adc
cmc
sub
push
into
inc
fnsave
jg,pn
or
sub
out
sub
mov
hlt
mov
xchg
loopne
fcmovb
imul
hlt
and
push
or
or
mov
lock
mov
popa
cmp
mov
pop
scas
push
divl
mov
or
inc
loop
sbb
cmp
enter
out
jb
jge
mov
test
cli
js
push
and
inc
inc
cmp
mov
push
daa
outsl
mov
jge
fnstcw
adc
div
popa
scas
adc
cmp
insl
pop
ficompl
xor
mov
and
mov
lock
mov
inc
enter
jo
aaa
aas
or
xchg
pop
movsb
out
pop
dec
ret
xor
jae
pushl
xor
shr
jbe
jb
or
xor
rcll
dec
mov
aam
sub
pop
or
push
aas
gs
je
inc
fstpt
jl
add
in
leave
pop
popa
mov
jg
xlat
push
fisttpl
sbb
pop
roll
inc
out
and
movsb
js
mov
pop
es
js
test
shl
pop
dec
push
push
out
sub
inc
push
push
xor
fstl
add
mov
lret
push
jns
dec
pop
cmp
adc
imull
cmpsl
jae
cmp
cmp
adc
inc
dec
dec
repnz
jmp
jl
mov
sahf
mov
sub
mov
mov
mov
xor
push
mov
jp
xlat
or
in
dec
sahf
stc
mov
or
mov
xchg
pop
xor
dec
xor
in
cmovp
iret
ds
call
mov
pop
adc
mov
cmp
xchg
repz
fldt
pop
push
jbe
dec
mov
outsl
xchg
add
nop
lea
xor
and
inc
rcl
arpl
push
push
jno
jecxz
shlb
mov
jo
jo
sub
and
movsl
xchg
inc
sub
adc
push
cli
wrmsr
jp
xor
mov
xlat
cmp
out
sar
xor
aam
cli
and
imul
push
fdivp
hlt
je
or
scas
les
hlt
xchg
test
pop
fnstsw
cmp
fcmovb
add
in
mov
mov
ljmp
test
cmp
mov
adc
pusha
shl
divb
and
xchg
pop
imul
inc
pop
out
and
in
jno
fcmove
ret
mov
ljmp
imul
leave
add
mov
xchg
push
mov
mov
dec
mov
test
push
ss
loop
cmp
testl
loope
jnp
lea
lea
sub
xor
or
gs
mov
imul
test
inc
pop
xor
jl
jle
ds
sub
push
inc
sub
test
jmp
aad
mov
push
arpl
ja
dec
jbe
jmp
dec
aas
adc
adc
mov
xchg
sahf
sub
cmovs
inc
cmpsl
sbb
cmp
or
jle
push
mov
scas
aaa
add
je
xchg
lret
js
test
xor
mov
pop
xor
out
push
adcl
mov
sti
rclb
sbb
aaa
adc
sti
xchg
xchg
je
or
mov
and
sub
repz
dec
fld
jo
and
test
mov
xchg
call
aas
xlat
insb
and
cli
movsl
pop
sub
cwtl
imul
mov
ja
fcmovbe
in
mov
call
dec
scas
sbb
pop
inc
lods
add
in
gs
mov
pop
push
lods
outsl
scas
xchg
pop
aaa
pop
pusha
xor
adc
pop
rclb
add
shld
roll
mov
js
or
pop
lea
mov
push
in
sbb
fdivl
add
test
xor
dec
xchg
sti
xchg
add
out
orb
sbb
iret
push
loopne
cli
push
and
daa
fwait
lods
push
cmpsb
in
xor
xor
pop
pushf
imul
cli
jecxz
out
pop
loop
mov
leave
dec
xchg
push
test
pop
pop
ficomps
das
scas
push
loop
mov
test
daa
outsl
mov
fisttpll
cmpsb
push
adc
mov
push
adc
jge
ljmp
mov
nop
test
lods
dec
stos
imull
shll
adc
test
push
add
xor
push
jnp
idivb
xchg
or
enter
mov
lahf
xlat
lds
xorb
data16
cmp
stc
xchg
aad
jl
leavew
mov
mull
xor
rorb
fnstcw
jle
pop
xchg
dec
les
jecxz
lret
add
cmp
jp
std
push
lret
jmp
xor
mov
mov
je
outsb
cmpsb
and
sbb
xchg
in
jb
inc
mov
mov
sti
dec
mov
aam
jns
test
lods
cs
insl
pop
inc
pusha
scas
ljmp
loopne
fistl
mov
inc
in
cmpsb
dec
mov
xchg
pop
stc
popa
mov
stos
test
out
jecxz
stc
and
aas
inc
or
dec
dec
or
xchg
mov
fs
in
pop
incb
add
repz
scas
imul
lods
cmc
imul
ret
in
into
push
inc
test
pop
inc
mov
sub
outsl
cmc
push
mov
pop
mov
aas
mov
inc
cmp
cmp
fdivs
xchg
popf
mov
in
mov
lods
cmp
in
push
sub
xorb
push
lret
cld
mov
lret
pop
add
cmp
sub
pop
mov
stos
rcll
fsub
dec
shl
sbbl
push
push
cmp
cmp
inc
lods
cmp
push
clc
icebp
mov
repz
inc
jle
mov
push
add
cmpsl
push
mov
jge
jns
add
inc
add
out
and
sbb
dec
xchg
xor
roll
xchg
jns
test
lahf
push
adcl
adc
in
scas
ljmp
hlt
xchg
push
sub
lock
bound
das
or
pop
push
scas
cmc
adc
xor
iret
cmp
push
scas
sbb
out
iret
int3
push
xor
lcall
bound
jp
jns
xchg
xchg
outsb
test
stos
in
adc
ret
pop
out
cmp
inc
loop
and
jmp
lret
cmc
rcrb
fmull
sub
cmpb
loopne
cmp
std
adc
lods
mov
pop
and
mov
fstp
ljmp
testb
mov
jp
add
adc
mov
neg
inc
mov
jecxz
mov
cmp
cmp
lahf
xor
gs
push
dec
nop
mov
popa
shrb
stos
fmuls
xorl
test
xor
mov
push
bound
test
pop
in
insl
enter
mov
outsl
out
cwtl
in
jg
mov
cwtl
incb
push
xchg
in
inc
frstor
js
cltd
lods
mov
rcr
aas
jbe
mov
ret
sub
xchg
pop
jg
int
in
stos
inc
aam
cmpsl
xchg
jns
pop
push
inc
call
or
pushf
pop
sub
sub
add
jecxz
mov
sahf
xchg
mov
pop
hlt
les
inc
xchg
xchg
push
imul
dec
lret
fisttpl
shl
cli
cmp
mov
ret
jae
fwait
or
jle
push
xchg
enter
clc
push
jbe
cmc
lcall
pop
inc
sbb
xlat
xchg
and
cmp
push
pop
add
ljmp
add
mov
test
sub
scas
stos
cld
repz
inc
jp
mov
mov
dec
shll
xor
imul
imul
ljmp
stc
ljmp
push
sbb
and
adc
jecxz
jbe
stos
jb
xchg
out
pop
jns
dec
push
inc
fdivr
je
cltd
sbb
and
push
mov
adc
sub
adc
es
push
nop
inc
lock
insb
das
repnz
addb
mov
cmp
push
adc
cmp
test
mov
inc
loop
xchg
ds
dec
nop
mov
pushf
adc
ss
fidivl
mov
xor
jbe
imul
mov
into
or
ficomps
in
or
lods
or
mov
frstor
incl
fcoml
sub
jno
int3
in
sub
loopne
dec
and
fcmovbe
mov
dec
pop
outsl
or
inc
xchg
push
or
sub
xor
xchg
inc
pop
inc
jne
dec
push
out
fwait
inc
ja
iret
jg
xchg
mov
mov
int
dec
pusha
in
lcall
xchg
dec
pushf
in
fistl
pop
jecxz
out
cmp
dec
movsl
cwtl
dec
aad
add
jbe
shl
mov
aas
sahf
call
fs
test
test
fs
inc
mov
xor
xor
cmp
popf
arpl
or
out
shrb
inc
int
out
pop
stc
xlat
sbb
ds
sub
or
dec
push
mov
test
ret
lret
add
dec
sarl
jg
mov
pop
sahf
insl
insl
sub
aas
out
inc
pop
roll
jge
inc
popf
push
inc
into
lods
data16
push
bound
loop
pop
jo
xor
mov
xchg
jge
xchg
test
clc
arpl
jb
inc
jp
int
adc
push
fsubrl
out
mov
mov
insb
xor
lods
add
inc
addb
inc
mov
in
mov
mov
cmp
fs
scas
jo
cmp
dec
sbb
mulb
inc
dec
adc
push
adc
lret
outsb
aad
push
pushf
outsb
xor
out
ret
cmp
or
fidivrl
cmpsb
in
or
and
popa
mov
and
dec
scas
mov
addr16
stos
xchg
mov
es
dec
xor
sub
pop
popl
or
jns
jno
shlb
fwait
mov
sub
jnp
insb
sbb
adc
fsubs
mov
lock
popa
jne
mov
jecxz
xor
loope
int3
xchg
and
or
mov
dec
mov
jne
mov
lock
xor
mov
das
test
cmpsb
sbb
sbb
lret
mov
ret
mov
loop
push
clc
insl
xchg
repz
push
lcall
push
add
rorb
pusha
jbe
scas
fiaddl
jecxz
mov
adc
ret
sbb
hlt
pop
scas
jl
sbb
aad
out
and
les
fnsave
fcmovbe
sub
xorl
out
pop
popf
pop
out
cmp
cs
sub
jge
in
iret
fwait
scas
push
fistl
add
mov
push
push
fisubrs
insl
mov
inc
xlat
aam
in
aas
mov
add
pop
add
dec
add
sbb
xor
inc
push
scas
leave
daa
lcall
push
mov
mov
and
add
out
mov
push
out
jb
xor
rcr
cld
mov
das
leave
fisubrl
sub
scas
push
xlat
sbb
inc
pop
pop
in
adc
aaa
inc
aaa
jne
push
adc
mov
xor
mov
aas
sbb
out
add
in
jecxz
and
pop
outsb
hlt
cltd
inc
xor
test
gs
jns
cmp
in
repz
push
mov
test
repnz
outsb
adc
popa
gs
inc
test
push
jle
mov
inc
arpl
mov
cmp
sbb
pop
jnp
xor
popa
sub
cmp
xlat
cmp
out
push
js
mov
xor
lods
jecxz
ret
negb
pop
sarl
jne
outsl
mov
inc
jb
movsl
test
mov
scas
xchg
mov
sbb
ficoml
je
push
or
push
mov
sub
push
movsb
or
pop
stos
int
adc
add
out
xor
lods
add
lods
and
stos
push
mov
out
sti
inc
add
pop
mov
mov
out
xorl
cmp
xor
sbb
mov
cmp
into
xchg
dec
pop
cmp
sub
jecxz
cmp
mov
push
mov
rorb
adcb
sub
push
repnz
jb
data16
push
sbb
hlt
test
inc
ret
sub
lcall
dec
push
xchg
adc
inc
fs
inc
rclb
push
push
xchg
pop
aam
out
je
into
cmp
cs
push
arpl
js
lock
fildl
outsl
mov
mov
inc
stos
daa
cmp
test
mov
sbb
ja
leave
pusha
rcrl
cmpsb
push
sbb
shll
xchg
mov
mov
fsubrs
adc
adc
iret
add
and
les
cmc
push
xchg
push
push
rolb
jle
mov
mov
testb
jmp
ficomps
pop
xorl
mov
inc
pop
in
iret
ljmp
cmc
sar
dec
scas
inc
mov
loope
push
adc
pop
xchg
mov
lds
mov
and
mov
add
add
push
sub
lock
loopne
jo
and
ss
inc
sarl
ljmp
shlb
aas
rorl
cmpsb
rorl
cwtl
sbb
push
cmp
adc
mov
fcompp
negb
add
mov
icebp
dec
xorl
sbb
add
xchg
xlat
adc
sub
js
into
loope
jmp
lea
mov
jne
pop
jae
leave
decb
xor
jp
ret
push
mov
jne
inc
test
imul
inc
shl
test
cli
and
xchg
pop
jecxz
mov
jge
ret
orl
into
mov
cmpsb
sbb
xor
mov
jae
fmuls
and
xor
gs
or
xorl
adcb
shll
push
sti
and
ds
sub
mov
sub
imul
nop
cmp
lea
sbb
xor
sub
jno
aad
das
sahf
loop
or
push
sbb
xlat
stc
lcall
jp
mov
mov
sub
lods
fists
or
psadbw
add
mov
fsubl
jge
pop
in
xlat
fs
or
scas
push
into
jnp
mov
mov
or
aaa
out
xchg
mov
repz
sahf
icebp
adcb
jo
cmp
dec
or
sbb
push
int3
xchg
add
xor
leave
and
rolb
lea
or
mov
test
lods
int
xor
sbb
jae
xchg
cmp
cmpsb
hlt
loop
fisttps
ljmp
daa
int3
shrl
aam
mov
shlb
and
jo
insl
stos
ret
add
test
insl
andl
add
pop
out
in
andl
iret
mov
add
addr16
repnz
pop
addr16
into
pop
shll
mov
cmpsl
aaa
es
mov
xor
mov
or
imul
adc
mov
inc
mov
int3
test
pop
cs
sub
shlb
orl
jbe
lea
mov
hlt
in
sbb
push
mov
lcall
pop
dec
mov
add
xchg
leave
push
stos
inc
imul
xchg
push
inc
cld
insb
sub
push
jmp
cs
inc
sub
dec
jg
sarl
int3
jnp
push
icebp
inc
icebp
and
mov
jno
pushf
dec
sbb
jns
add
scas
fsubrs
test
filds
push
roll
dec
ret
or
fdivl
dec
add
cwtl
jo
xor
pop
add
loopne
data16
mov
in
cmp
adc
cmc
mov
and
mov
add
mov
push
jns
lds
repz
jmp
xchg
jae
test
cmp
cmp
cmp
jno
xchg
xchg
add
adc
stos
xor
dec
popa
lods
in
push
sbbl
jmp
jns
cs
shl
mov
pop
pop
add
jae
dec
imul
adc
arpl
mov
xchg
rorb
mov
dec
mov
and
outsb
push
xor
gs
push
mov
dec
sar
xor
add
add
cli
negl
adc
push
inc
or
shrb
insb
push
pushf
jl
xchg
mov
cld
out
dec
loop
std
lret
mov
adc
lods
jg
xchg
cwtl
addr16
popf
in
pop
and
cmp
orb
mov
inc
sbb
pop
icebp
or
pop
cs
pusha
das
push
lahf
sahf
and
add
in
xor
and
cmpsl
xchg
jge
push
push
mov
cmp
lahf
popa
cmpb
jg
fwait
jg
divl
jo
mov
inc
sub
loope
push
push
sub
enter
aad
cmpsl
add
icebp
mov
xchg
jl
ja
insb
mov
cld
aam
dec
mov
pop
repz
sbb
push
jns
aaa
fdivrl
sub
cwtl
lret
test
jo
sbb
icebp
push
sti
je
dec
test
sub
ss
dec
sti
lcall
fadds
pop
bound
repz
mov
mov
int
popl
in
hlt
xchg
jae
call
add
sahf
mov
jmp
mov
add
fdivrs
clc
outsb
xchg
inc
mov
lods
lods
and
jae
xor
popa
xor
orb
sub
fisubs
and
ds
daa
sub
pop
je
stc
test
dec
add
pop
pop
mov
sahf
pop
js
jnp
movl
es
mov
sub
xor
shlb
popa
sub
sub
popf
out
cld
pop
bound
andl
sbb
cwtl
and
outsl
jmp
sahf
or
cmc
in
data16
push
mov
loop
ficoms
sbb
or
pop
pushf
xlat
jns
jg
cmp
call
inc
and
lcall
mov
adc
cli
scas
out
sub
aam
mov
in
xor
aam
mov
inc
in
and
loopne
jmp
jg
pop
rorb
cld
bnd
in
in
pop
movsb
jmp
push
scas
or
sub
outsb
imul
cli
cli
mov
jno
in
mov
call
sbb
sub
cmp
jg
sub
push
outsb
jo
jmp
cltd
inc
test
fsubs
adc
cmp
nop
or
cs
js
insw
jb
cwtl
mov
ljmp
fcomps
imul
ljmp
stos
bound
mov
mov
or
test
add
push
xchg
or
cmpsl
add
sbb
push
addl
pop
or
xchg
adc
dec
pop
add
pop
ror
xor
xor
cli
ret
mov
add
repz
or
outsl
sbb
out
cmc
fldenv
fs
sbb
lcall
push
fcmovb
jmp
imul
leave
inc
jne
out
arpl
arpl
dec
out
pop
stos
jp
xchg
or
and
xchg
sub
jo
movl
imulb
shr
std
cmp
sbb
push
jle
push
and
ljmp
fnstcw
mov
jge
cmp
xchg
fadds
loop
adc
out
mov
mov
testl
jns
cwtl
jp
flds
rclb
daa
fwait
xor
dec
mov
push
mov
das
dec
scas
and
mov
xor
add
les
movsl
inc
leave
fldcw
rcr
call
mov
ficoml
ds
xor
dec
mov
add
mov
push
xchg
in
push
xchg
dec
shll
addr16
fwait
stos
or
repz
inc
fstpt
or
int3
adc
je
hlt
loopne
xchg
test
pop
cld
cwtl
cmp
adc
sbb
mov
fwait
cmp
xchg
jno
lock
or
cmp
ljmp
fnstsw
cmpsl
sbb
fs
stos
cmpsl
push
and
subl
mov
pop
sub
mov
fistpl
mov
bound
pusha
pop
pop
outsl
int
call
popf
addr16
mov
xor
and
and
dec
sub
je
sti
xchg
jo
and
rolb
sbb
jbe
test
divb
orl
jno
inc
xorl
leave
addr16
xchg
push
fimull
pop
push
nop
ret
or
sub
xchg
es
and
jmp
fs
inc
pop
or
addr16
push
pop
movsl
sub
inc
lahf
shrb
mov
mov
lcall
fmuls
cld
and
mov
jne
push
enter
cmp
movsb
mov
repz
lock
xor
push
jbe
pushf
jno
pop
or
shrb
mov
sub
mov
sahf
xchg
ja
jne
mul
jns
std
xor
xor
cmc
xchg
and
sahf
punpckhdq
aas
movsl
dec
addr16
or
std
xchg
push
les
ret
mov
mov
xor
mov
mov
addb
rorl
test
ja
inc
in
sub
lods
mov
mov
push
cmpsl
imul
fstpl
rcll
out
push
popa
insb
cltd
cltd
out
rclb
icebp
push
fs
mov
ljmp
push
insb
stos
lods
rorb
mov
adc
cmp
or
and
sub
push
shll
data16
lea
into
idivb
leave
aas
test
xchg
iret
insl
jae
int
and
mov
jl
sub
mov
jae
in
es
adc
stc
mov
push
push
aaa
xchg
or
lret
andl
jbe
xchg
pop
loop
xlat
addr16
test
pusha
push
je
dec
out
and
shll
ljmp
pop
out
dec
mov
ljmp
sbbb
mov
int
xor
jno
pop
inc
inc
dec
daa
push
dec
je
adc
mov
sti
scas
mov
dec
shr
push
pop
aaa
aas
sub
push
dec
shr
ret
mov
push
jno
stos
sub
inc
in
rol
outsb
sub
mov
insl
lahf
mov
fucomip
sti
fs
lahf
insl
mov
mov
addr16
xchg
lret
and
lahf
imul
push
mov
adc
rcl
dec
cmp
sahf
sti
popf
jno
jb
push
je
xor
mov
mov
call
mov
inc
mov
mov
push
and
int
pop
leave
fildll
lea
aam
popf
out
arpl
repz
aad
loopne
xor
cli
push
scas
fucomi
cltd
fwait
outsl
push
in
push
sub
and
cmpsl
and
inc
and
sbb
movsl
xchg
stos
dec
pop
js
aam
fcoms
arpl
xchg
cli
jmp
sbb
push
xor
fs
mov
imul
das
js
inc
cmp
or
inc
xchg
test
cmp
xor
das
xlat
loop
dec
dec
jge
fwait
cmc
or
xorl
dec
xor
jnp
jmp
mov
inc
jb
add
add
push
push
jp
jle
dec
push
sub
gs
pop
sti
test
mov
inc
or
stc
bound
cld
and
dec
loopne
mov
mov
jnp
jmp
push
jp
jg
iret
movsb
xchg
sbb
out
pop
sub
mov
into
cmp
dec
push
mov
and
xorl
aaa
orb
xor
jle
dec
das
adc
js
movsl
or
xor
cmp
jbe
add
xchg
int3
aas
movsl
dec
scas
outsl
cmp
popa
xor
lret
loop
das
repnz
mov
mov
ds
or
out
insb
lds
cmp
dec
lock
mov
leave
sbb
mov
lock
outsb
mov
shlb
mov
ret
mov
daa
insb
push
mov
jns
je
xor
adc
cmpsb
aam
jo
inc
es
vaddpd
adc
sbb
sub
cmc
mov
loopne
adc
inc
hlt
movsb
sbb
mov
inc
dec
mov
imul
shl
pop
adc
sbb
or
cwtl
pushf
jae
push
pusha
or
mov
stos
gs
movsl
jbe
imul
sbb
nop
sbb
mov
xor
out
push
ja
imul
cmc
in
xchg
cwtl
xchg
xchg
lret
xchg
lahf
mov
cs
cli
jbe
out
add
jae
jnp
cs
sbb
bound
adc
cmp
push
cld
sub
mov
dec
gs
pop
scas
jbe
emms
les
mov
mov
cmc
mov
out
dec
fldenv
fcmovnbe
rcrb
inc
fwait
addr16
aad
inc
lock
dec
mov
daa
pop
fnstsw
xchg
adc
or
xchg
je
add
leave
out
pusha
add
arpl
je
inc
cs
jg
mov
or
lcall
jbe
loope
and
fstpt
xchg
cld
shl
xchg
xchg
stos
roll
lahf
mov
loop
int
test
movsl
aaa
in
roll
call
xor
fmull
shr
in
and
test
mov
dec
pusha
mov
mov
lds
ret
push
out
jnp
out
sub
adc
xchg
test
and
es
sbb
rcrb
inc
shlb
xchg
adc
xchg
out
jge
xchg
mov
add
dec
push
mov
mov
adc
clc
or
dec
cmpsl
sbb
movsl
loopne
das
and
bound
pushf
mov
test
fcoms
dec
sahf
fidivrs
or
jno
dec
mov
jae
repnz
rcl
dec
jg
lds
stos
js
rcrb
aam
cmp
inc
mov
jb
pop
mov
mov
dec
popa
imul
jb
rcl
dec
cli
repnz
mov
imul
cmp
and
mov
jg
mov
imul
in
xor
push
or
mov
sbb
ror
mov
sbb
in
lds
mov
gs
testl
sarb
popa
adc
nop
pop
ss
mov
xchg
outsl
push
outsb
push
xchg
cmpsl
movsb
jp
iret
and
sbb
leave
cmc
out
jae
shll
enter
mov
pop
mov
mov
mov
fldenv
rcrb
arpl
pop
sub
push
ret
fisttps
fsubr
test
inc
xchg
ficompl
fbld
cmp
mov
or
test
sub
pop
faddl
jns
cmpsl
and
xlat
cld
imul
out
lahf
jno
jno
aaa
mov
xor
jo
fdivrs
jae
int
sub
aaa
test
orb
in
pop
leave
jae
imul
or
outsb
jno
xor
or
inc
test
push
sub
pop
xchg
jl
inc
adc
jmp
imul
cmc
mov
adc
adc
adc
call
and
stos
mov
dec
adc
insb
inc
incl
push
or
nop
pop
inc
inc
icebp
fcmovu
adc
ds
imull
inc
sti
out
aaa
jo
sbb
and
xor
jg
xor
xor
mov
jnp
in
clc
jno
test
stos
cli
pushf
es
daa
aad
aas
xchg
pop
pop
insb
sbb
rclb
or
add
or
jnp
pusha
cltd
cmpsb
in
mov
cmpsb
mov
outsl
into
add
outsl
sbb
aaa
fs
fwait
test
mov
cmp
cmpb
push
cli
add
ljmp
dec
in
adc
lock
xchg
xchg
fwait
and
je
push
mov
mov
and
ss
pop
and
int
push
out
shrb
lcall
js
pop
filds
repnz
nop
cmp
mov
push
cmpsb
pop
fidivrl
push
lret
mov
push
daa
out
ja
inc
mov
ficompl
push
movb
lods
sahf
imul
aaa
jo
cmp
xlat
mov
in
fiaddl
lods
je
xchg
lock
push
arpl
stc
aam
dec
test
in
xchg
sbbl
mov
sub
dec
imul
mov
int
frstor
and
adc
cmp
jno
mov
hlt
inc
mov
jnp
jl
xor
lods
cwtl
dec
or
lret
repz
loop
orb
fcmovnb
call
cmpsb
jmp
lret
lret
pop
repz
outsl
stos
and
std
fbstp
out
pushf
stos
jbe
jbe
pop
cmp
jmp
adc
xlat
push
jecxz
out
fcoml
push
nop
and
ret
leave
rolb
xor
lret
push
das
fwait
add
fildll
add
jne
fildll
cmpps
dec
into
jnp
pop
ljmp
push
mov
or
repnz
fmull
cs
icebp
imul
in
push
jl
inc
imull
insl
cmp
pusha
pop
xor
cmpsl
push
cmp
stos
xchg
mov
pop
fdivs
gs
xchg
mov
fdivrl
mov
ljmp
xor
mov
sbbl
inc
int
stc
mov
push
or
nop
das
push
push
imul
pop
subb
mov
mov
dec
add
xor
adc
stc
mov
andl
pop
push
sub
dec
sub
iret
push
sbb
popa
out
xor
repnz
jle
xor
push
sahf
mov
lds
scas
cmp
mov
sub
jbe
ret
dec
xor
ret
dec
mov
icebp
cli
clc
cld
cmc
mov
xchg
add
mov
mov
cli
xchg
and
dec
or
jmp
hlt
test
mov
cmp
fisubs
lahf
adcl
ret
pop
push
imul
mov
inc
into
push
cmpsb
scas
das
jae
pop
jg
dec
push
icebp
loopne
testl
sub
xchg
stos
jge
fcoms
sarl
and
dec
insb
insl
and
jg
xlat
xchg
cmp
push
ss
or
inc
push
in
cmc
or
int
lock
pop
dec
in
or
push
js
mov
lret
sub
jmp
xchg
cwtl
negb
fwait
ds
aas
insb
push
roll
inc
sbb
sub
pop
adc
mull
pusha
jo
mov
repz
sbb
popf
inc
repz
movsl
arpl
sbbb
add
int3
in
icebp
xchg
and
push
lret
dec
cs
cmc
push
jle
inc
das
loope
mov
pushf
fnstsw
jbe
int
inc
inc
pop
jp
daa
pop
aas
subb
iret
fdivl
push
cmpsl
jmp
sub
movsl
pushl
jecxz
in
push
inc
sub
imul
cmc
dec
aad
cli
xor
mov
out
stos
int3
imul
outsl
fisttpl
addl
cmpsl
jo
mov
cmpsl
push
addr16
ret
fiadds
scas
test
loop
sbb
mov
pushf
pop
aaa
and
fmull
jge
mov
mov
dec
test
arpl
sbb
adc
fsubl
fbld
jp
push
push
mov
jmp
cmpsb
xchg
loope
cmp
push
clc
pop
adc
lcall
add
mov
adc
jo
hlt
xorb
adc
rcll
jl
push
dec
shrb
mov
adc
inc
test
or
inc
pop
test
stos
mov
gs
cmpsl
pusha
xor
dec
xchg
fwait
aaa
imul
and
pushf
mov
xor
icebp
nop
gs
inc
jne
xchg
lahf
idivb
fwait
insb
cli
in
jbe
ljmp
popa
cli
jle
pop
xchg
inc
cmc
inc
mov
aas
imul
scas
inc
add
xor
rolb
cmp
adc
xchg
jge
test
out
xchg
push
ds
sahf
cmp
sub
or
xor
rorl
cmp
add
xchg
jo
jle
pop
adc
outsl
cmp
fistps
push
cltd
mov
xor
cmp
jle
loop
cli
inc
add
outsb
loop
add
and
cltd
sbb
les
call
insl
add
mov
adc
std
push
pop
adc
roll
xor
idiv
in
dec
das
sub
push
sub
pop
push
xchg
stos
addb
adc
push
cmp
inc
ja
aam
shrl
or
sub
xchg
fldl
loopne
cmp
xor
lcall
dec
pop
mov
sbb
dec
cmc
xchg
cld
out
jno
scas
addr16
dec
rcr
xchg
adc
sub
mov
mov
jb
mov
and
xchg
loop
cmp
push
or
das
or
jle
mov
mov
inc
cmp
jnp
daa
iret
mov
cld
pop
xchg
ljmp
jbe
jb
sub
fadds
int
mov
into
cs
arpl
add
mov
mov
flds
movb
in
adc
xchg
xor
xor
mov
rorl
rolb
in
lret
push
inc
inc
cli
loop
jnp
hlt
test
ret
cmp
popf
nop
dec
fistl
sbb
fnstenv
syscall
cs
mov
test
and
out
ss
lock
sub
add
adc
sti
adc
mov
js
mov
pushw
pop
loop
xchg
lods
jle
insl
insl
decb
in
mov
mov
aam
out
push
adc
sbb
dec
movsb
mov
jb
push
mov
rcrl
dec
jecxz
addr16
jmp
inc
dec
mov
lret
jle
scas
cli
mov
rclb
shrb
pushf
dec
add
push
sub
mov
idivb
mov
ret
sar
mov
dec
mov
cld
popf
inc
push
pop
dec
cmpl
test
cmp
loop
aam
popw
cmpsl
sbb
mov
scas
cmp
mov
jp
add
and
push
ret
jg
dec
sub
lcall
les
pop
mov
fsubl
jg
sbb
sub
xchg
ja
mov
mov
leave
fistl
push
push
out
jmp
dec
push
xchg
out
sbb
test
mov
call
ljmp
push
mov
arpl
dec
adc
in
icebp
dec
mov
push
add
pop
fidivl
dec
lds
popa
dec
mov
add
fs
jnp
mov
mov
pusha
sub
xchg
dec
imulb
xchg
dec
adc
mov
mov
daa
mov
addr16
fwait
imul
adc
imulb
les
inc
test
rcrb
subb
mov
cmp
pop
popf
mov
out
daa
out
outsl
sub
mov
dec
das
in
fstpt
movsl
icebp
jne
pop
lret
dec
fwait
or
ljmp
and
or
adc
mov
in
movsb
es
rcll
xchg
mov
or
add
ss
mov
in
inc
lcall
mov
cwtl
xchg
sub
in
mov
ss
add
dec
xchg
push
leave
mov
adc
popa
xchg
icebp
out
enter
jnp
dec
or
fldl
arpl
stos
jmp
cli
inc
add
scas
sti
inc
mov
test
sub
test
dec
imul
inc
clc
cmp
pop
cli
xchg
jecxz
je
lret
cmp
jmp
sbb
mov
or
in
in
fptan
cmovnp
mov
pop
stc
sub
jae
xorb
test
enter
inc
mov
imul
shlb
dec
jo
jecxz
jg
mov
loop
adc
sub
xchg
jmp
je
lret
cmp
sub
jmp
daa
fst
dec
mov
xor
xchg
aad
andb
inc
inc
or
outsl
mov
inc
and
cmp
xchg
mov
les
out
xor
jne
inc
mov
insl
in
pop
push
inc
out
push
xor
mov
push
xor
test
outsl
fstpt
aam
xchg
mov
jmp
push
mov
xlat
push
mov
adc
sbb
mov
push
repz
aam
rol
shlb
mov
insb
mov
pop
aad
decb
and
xchg
movsl
jmp
sahf
test
fsts
mov
or
into
and
fisubrs
mov
pop
sbb
sahf
cwtl
mov
jb
emms
xor
popa
outsb
mov
js
fwait
roll
lea
sub
sbb
aas
js
dec
jp
fidivl
mov
push
push
dec
mov
dec
mov
movsb
jae
xor
nop
out
push
outsb
nop
test
jo
adc
imul
rcll
lock
lods
scas
pop
aaa
inc
mov
push
xchg
adc
pop
out
mov
xchg
out
shrb
cmc
in
and
xchg
lods
movb
and
xor
xchg
sub
xchg
lds
fucomp
pop
cld
mov
stc
sub
mov
adc
ss
mov
dec
push
rorl
imul
jo
in
jmp
add
sbb
pop
adc
or
xor
fistpll
xor
add
bound
and
mov
pusha
push
xor
adc
add
ret
notb
mov
jns
mov
lret
mov
call
fistpll
add
fiaddl
fidivl
enter
cmp
enter
dec
mov
cmp
push
jmp
pop
in
lds
xor
stos
aam
push
push
pop
pushf
test
lret
and
sbb
add
xchg
stc
dec
add
pop
mov
ljmp
and
fmulp
inc
cmp
idivl
jl
and
int
pop
out
mov
dec
add
mov
mov
and
sub
xor
les
sbb
add
mov
jno
cli
sub
roll
mov
sbb
clc
xor
mov
jnp
sahf
in
sbb
mov
in
jg
mov
jp
and
jne
mov
push
dec
lds
fcom
ss
ljmp
pop
mull
in
stc
jmp
lds
add
pop
cmp
jo
insb
inc
ja
sbb
dec
lcall
repnz
data16
push
push
adc
sub
mov
dec
xchg
mov
es
clc
cld
push
or
jmp
mov
aad
mov
in
pusha
leave
sqrtps
test
jo
ja
adc
xchg
xor
cs
mov
fs
pop
mov
xchg
ja
jns
cmc
push
shll
aam
cltd
xchg
and
les
xor
sub
mov
jl
sbb
mov
js
sar
psrlq
loop
aad
jmp
pop
xchg
dec
aam
cmp
out
adc
xchg
sub
mov
mov
pop
test
test
mov
sbb
pop
and
mov
outsb
push
and
iret
add
push
cvtpi2ps
fadds
push
mov
cmp
ficompl
inc
xchg
sub
cwtl
push
add
sti
jae
pop
mov
jmp
mov
mov
jmp
enter
repnz
mov
addl
dec
dec
jne
adc
repnz
dec
push
sbb
leave
dec
loopne
sub
sti
lret
push
jo
mov
inc
dec
faddl
pusha
jno
aaa
pop
lods
loop
pushf
std
loope
push
pop
and
cld
sbb
adc
negb
mov
inc
rolb
add
test
push
jno
aam
lds
jbe
dec
xor
repnz
daa
jp
or
dec
or
jbe
les
mov
popa
jp
imul
ret
pop
xchg
mov
bnd
inc
stos
js
mov
mov
jbe
test
inc
adc
int
dec
outsb
mov
push
lock
adc
fildll
xor
inc
jo
ret
stos
adc
mov
lea
mov
int
adc
stc
insb
cs
mov
das
cmpsl
inc
push
xchg
push
stc
jae
push
cmp
or
into
scas
pop
pop
pop
pop
push
xor
cmp
es
xchg
jmp
mov
pop
xorb
mov
xchg
test
repz
jmp
push
pushf
ficomps
jne
popl
adc
fmuls
jnp
ret
movsl
sbb
shlb
cmp
adc
dec
and
sbb
bound
adc
flds
adc
scas
orb
add
mov
lret
stos
jge
in
pop
ret
stos
ljmp
bound
dec
or
xor
pop
dec
stos
insb
dec
dec
aad
popa
aad
cs
in
jg
xchg
call
pop
cmc
add
test
and
push
dec
inc
add
roll
int3
icebp
out
jle
mov
xor
dec
push
rcr
cmpsl
mov
outsl
and
xchg
cmpsl
pop
rorb
daa
lret
jmp
pop
or
fisubl
mov
ljmp
xchg
xor
xor
outsl
flds
jns
subl
adc
sub
cmp
mov
in
adc
jg
aad
dec
inc
addb
sub
xor
icebp
movsb
shl
movsl
call
aad
adc
sbb
loopne
pop
push
das
xchg
lcall
adc
rorl
inc
and
pusha
inc
pop
fcoms
mov
or
mov
rcll
xchg
ret
mov
loopne
pop
ljmp
mov
jns
jbe
pushw
sub
lock
inc
aaa
mov
push
and
mov
mov
mov
and
lret
into
xor
xchg
sub
dec
and
jmp
cld
adc
inc
or
pop
cld
push
mov
jbe
adc
divl
orl
jae
or
add
orl
pop
sub
xor
jno
add
hlt
or
mov
mov
xchg
mov
or
or
sbb
into
loopne
push
nop
repnz
cmc
rorl
dec
add
mov
repnz
pop
mov
cmc
shlb
fsubp
cmp
icebp
imul
test
xchg
lahf
add
add
jo
addb
push
mov
jp
cltd
and
lret
cltd
rclb
push
out
mov
lahf
dec
leave
dec
ljmp
add
shrb
pop
xchg
push
lret
shlb
inc
aad
push
cmp
inc
sbbb
adc
mov
inc
jg
jno
rcr
push
stos
mov
mov
scas
cmc
shrb
push
sbb
cmpsb
in
dec
jle
pop
scas
dec
xor
jle
xor
sarb
mov
in
adc
pop
popf
jae
and
pop
arpl
dec
jae
inc
sub
inc
pop
push
and
in
mov
mov
mov
pop
aad
cmc
xchg
imul
xor
pop
jno
jp
jb
cmp
in
sbb
lods
pop
out
into
sbbb
test
inc
or
ret
scas
xchg
push
dec
sbb
push
mov
les
out
pop
push
jg
cmp
fadds
xor
push
es
xchg
popf
addr16
jle
jecxz
adc
xchg
mov
push
out
dec
xchg
sbb
arpl
mov
pop
in
aaa
das
sub
aaa
or
mov
mov
or
movsb
sarl
xor
je
ljmp
or
stos
ret
mov
daa
mov
arpl
in
xchg
pop
jge
adcl
cltd
and
lock
xor
add
sub
icebp
adc
loopne
pushf
testl
inc
xor
push
pusha
and
stos
jge
imulb
xchg
pushaw
aaa
repz
clc
pop
popf
int
inc
jno
ror
mov
mov
add
rclb
ret
xor
push
int3
test
cld
aaa
or
xchg
xor
dec
pushf
jl
rcl
ret
adc
repz
out
inc
push
lods
je
mov
imul
mov
es
cli
call
loop
sahf
test
mov
sbb
adc
pop
push
mov
or
adc
jl
mov
jmp
add
pop
ret
pop
es
out
shrl
out
pop
pusha
adc
popf
mov
jnp
fstpt
pop
loop
fisubs
gs
pop
xlat
push
rcrb
xor
cmpsb
mov
cmp
cwtl
repnz
pop
xchg
dec
stos
xchg
xchg
inc
rclb
jecxz
stos
mov
test
jp
adc
test
loopne
xor
fninit
cmpsb
pop
into
and
mov
jle
sub
fisubrs
icebp
fcomip
mov
inc
in
bound
es
outsb
push
loope
xor
into
mov
mov
xchg
hlt
xor
aad
cltd
idivl
inc
jne
mov
jae
mov
xchg
lret
or
fstl
or
cmp
stc
test
repz
inc
aas
outsl
sarb
adc
or
or
in
imul
xchg
sbb
das
movsl
xchg
push
loopne
inc
pop
jne
sub
int3
fcomps
jge
adc
mov
pop
out
icebp
and
arpl
lcall
xchg
stos
std
les
mov
xchg
popf
and
fs
xchg
movsl
outsb
and
push
lcall
cmp
xchg
out
jb
jbe
out
mov
fisubrl
int3
lcall
lcall
and
in
shlb
lods
call
sbb
jbe
jg
in
and
add
jmp
pop
aam
shl
movsl
sub
pusha
inc
data16
push
sti
fldl2t
cmp
lret
out
jns
pop
cmp
add
add
lea
xchg
push
add
push
das
sar
lcall
mov
mov
mov
mov
jno
or
andl
jne
hlt
cmp
out
sub
stos
das
int3
call
lret
jne
pushf
and
arpl
cld
out
into
mov
cmp
inc
xor
dec
mov
jo
adc
or
sbb
pop
cltd
fldz
ljmp
mov
push
mov
out
mov
mov
jg
jmp
cmc
in
outsb
add
fists
sbb
insb
adc
stos
ss
scas
jmp
shll
std
mov
rcrb
negl
dec
dec
xor
sub
mov
fld
shl
mov
lods
mov
outsb
xor
mov
jbe
repnz
jge
cmc
aam
pop
jg
adc
pushf
mov
dec
ljmp
inc
mov
ficomps
mov
clc
jb
cmp
mov
inc
jns
xor
aad
ret
or
dec
xchg
lcall
loopne
xchg
jg
mov
in
dec
pop
mov
lahf
push
fbstp
fcoms
jmp
mov
and
negb
dec
xchg
fwait
sbb
nop
pop
xchg
ja
mov
or
xchg
or
pop
mov
adc
adc
add
mov
scas
psubq
mov
mov
leave
add
sbb
into
outsb
rcl
sub
add
xchg
jmp
movsb
sbb
push
lock
aaa
lea
pop
sahf
call
out
xlat
xor
hlt
sti
pop
xor
push
mov
mov
jno
sub
xor
lret
subb
cmp
call
xlat
fcmovnb
mov
pop
rcrl
pop
movb
or
mov
inc
idiv
cmp
clc
mov
insl
xchg
and
cmc
jae
arpl
mov
and
push
and
ret
xchg
jl
iret
mov
lret
mov
xlat
sub
cmp
sub
sub
add
sub
sbb
shlb
cli
pop
movsl
adc
daa
imul
pusha
fisubs
push
push
pop
adc
rol
jecxz,pt
push
loopne
insb
mov
rcrl
dec
shl
out
push
cmp
fcomip
fs
xorb
es
dec
mov
cs
sbb
pop
subl
popa
pop
add
dec
test
lea
ja
mov
inc
in
mov
pop
xor
mov
pushf
inc
cs
repz
mov
mov
sbb
pop
sbb
mov
aaa
adc
ljmp
faddp
mov
inc
out
shlb
xchg
int3
fdivl
movsl
daa
and
aam
pop
aaa
adc
mov
mov
out
xchg
out
daa
xor
daa
xor
cmp
push
cmp
xchg
ret
fimull
push
mov
pop
mov
or
and
cmp
push
add
dec
lahf
or
gs
xor
xchg
sbb
push
rcll
and
into
cmp
jge
push
jmp
and
out
mov
pop
xchg
or
cmp
mov
out
adc
enter
insl
test
stc
orb
aad
decb
nop
insl
push
mov
xchg
mov
mov
lods
cmc
leave
xor
fs
add
xchg
ss
sub
je
fxch
ret
cmc
cmp
ss
mov
add
icebp
jp
sub
movsb
cli
mov
loope
sub
push
dec
sub
cld
xchg
aam
fwait
jne
inc
or
cli
add
aas
movsl
sub
fwait
pop
movsb
movsb
pop
cmp
push
clc
push
cmp
jne
mov
clc
add
adc
mov
into
imul
mov
push
int
stos
cs
pushf
push
mov
in
jbe
jle
lcall
jbe
dec
sti
mov
or
mov
mov
ja
stc
mov
stc
pop
loope
jle
lock
cmp
mov
pusha
roll
add
adc
push
mov
mov
push
and
pop
push
hlt
orl
outsb
dec
vfrczps
fwait
lock
xchg
hlt
add
mov
mov
mov
cmp
cmc
je
jo
add
mov
jg
mov
adc
std
nop
imul
ja
inc
stos
fwait
jns
or
stc
bound
mov
mov
in
jo
lock
subb
cmp
lds
cmp
into
push
mov
mov
push
out
sub
popf
pop
inc
inc
das
fwait
insb
call
lods
sbb
sahf
dec
dec
lods
loop
clc
cmp
shl
mov
fildl
pop
and
pop
imul
fcoms
lock
out
push
shrb
imul
xchg
frstor
xor
xchg
out
sti
imul
into
jle
push
sub
pop
push
lock
jp
loop
dec
sbb
or
int
jbe
aam
jge
aam
lret
mov
pop
push
dec
jmp
push
xorl
in
jo
push
aad
cmc
push
lcall
adc
sbb
shl
pop
mov
sub
roll
and
pop
cli
and
js
cmp
pop
loopne
cmp
and
mov
scas
mov
add
xor
clc
cld
lods
rcr
push
sbb
fisubl
inc
or
and
hlt
add
push
mov
out
cltd
mov
in
or
mov
mov
leave
aaa
xchg
xor
rol
push
mov
test
jnp
es
sub
xchg
or
pusha
jp
or
popa
outsl
xchg
pop
int
in
movsl
inc
pop
inc
int
fstl
xchg
dec
stos
pop
in
sbb
xchg
insl
jb
ffree
or
gs
xchg
mov
and
and
testl
loop
add
insb
sti
in
out
pop
arpl
jg
mov
addr16
fmuls
stos
lcall
testl
std
clc
push
mov
dec
daa
mov
adc
mov
mov
outsl
jecxz
adc
clc
int
pop
cld
mov
cmp
xor
adc
jge
test
sub
insb
fmull
xor
repz
ljmp
loope
mov
dec
aam
mov
jnp
dec
add
clc
mov
js
jg
mov
pop
sub
inc
shrl
sahf
fwait
lea
mov
xor
mull
xchg
jo
pop
xor
fmuls
xchg
outsb
cli
cmp
push
push
stos
nop
inc
aas
cld
into
shll
faddl
arpl
mov
jns
lods
jne
call
mov
mov
pop
xor
jmp
xchg
and
jae
leave
jg
mov
cmp
xchg
cmpsl
push
icebp
shrl
shll
icebp
movsb
sti
sbb
movsl
hlt
std
fwait
je
inc
mov
mov
lahf
aas
mov
mov
arpl
jb
loope
mov
int3
pop
push
push
mov
push
push
in
or
jp
test
push
rcll
pop
jle
mov
push
loope
out
xchg
jne
int3
dec
xor
sub
push
jp
pop
nop
test
popa
clc
ja
pop
xchg
in
testb
ja
pushf
mov
mov
ja
popa
imul
inc
addb
push
or
lahf
jle
fistps
andl
or
mov
mov
dec
pop
and
xchg
stos
jnp
push
dec
test
arpl
adc
sti
mov
xchg
ds
fdivs
into
call
dec
stos
inc
dec
fdivrs
mov
xchg
pop
test
mov
xchg
mov
in
sbb
lock
out
mov
cmc
in
pop
xchg
fldl
cmp
call
loopne
sub
pop
shlb
std
cld
push
iret
aas
mov
psubusb
cmp
idivb
iretw
xlat
cltd
icebp
lock
add
loopne
dec
mov
stos
call
sub
jns
les
sub
mov
pop
loope
subl
mov
jge
adc
decl
pop
jb
fwait
xchg
stc
mov
shll
scas
out
stc
pop
insl
push
iret
jne
sbb
mov
xor
mov
stos
xlat
ds
adc
negb
ss
pop
mull
xchg
sub
mov
pop
inc
cmp
mov
sub
dec
lods
sub
loope
xor
shr
je
mov
and
stc
jl
stc
cmpsb
sub
subl
sbb
fiadds
inc
lods
xchg
pushf
sbb
jmp
pop
push
dec
popw
sub
std
rcll
and
inc
mov
xchg
imul
mov
jno
js
int3
jge
add
bnd
lret
pop
repnz
aam
clc
fistps
lret
ss
or
jae
or
or
fxch
stos
push
dec
popa
arpl
adc
xor
or
mov
jle
sbb
lock
add
mov
scas
xor
cmp
leave
negb
outsb
jmp
outsb
mov
mov
lods
ror
sbb
pop
xorl
and
or
or
xchg
cltd
es
mov
sahf
xchg
aaa
pusha
rorl
out
inc
jecxz
and
jb
ja
repnz
icebp
cmp
dec
shr
mov
and
stc
aas
jae
mov
xchg
adc
in
xlat
insb
lret
push
in
sbb
pop
loop
cld
mov
sbb
sti
mov
je
pop
jo
pop
cmc
push
fistps
jnp
test
sbb
mov
fimuls
les
fcmovnbe
xchg
lds
andl
jae
sbbb
imul
jo
mov
aas
shl
add
fisubl
push
data16
dec
push
inc
mov
xlat
jp
fs
hlt
push
iret
adc
lret
and
sub
jle
inc
mov
cmpsl
movsb
push
jecxz
mov
mov
je
rorl
test
test
cli
jge
fsts
mov
sub
fwait
and
add
adc
add
xorb
xchg
frstor
iret
jl
lods
pop
adc
sub
pop
ljmp
data16
sti
imul
push
out
lcall
inc
xchg
out
cli
sbb
jo
repnz
inc
push
mov
mov
mov
les
pop
mov
fsub
lcall
xor
push
cmpsb
jo
shll
pop
fwait
xor
pop
cmp
mov
jnp
inc
daa
icebp
push
repz
dec
push
arpl
cmp
bound
inc
jno
mov
inc
test
mov
jecxz
add
cltd
adc
popa
push
jb
mov
filds
xor
cmp
rorb
add
imul
adc
sar
adc
push
adcl
test
sub
xchg
sbb
xor
inc
inc
jae
pop
lods
inc
sub
push
dec
gs
push
out
push
xlat
shlb
cmp
iret
pop
call
mov
insl
fnop
mov
jne
inc
out
stos
jp
pop
push
int
sbb
iret
iret
fistl
mov
and
insb
add
jbe
xor
idivb
mov
sbb
add
orl
mov
jae
mov
jo
mov
jbe
or
out
pushf
lcall
and
inc
cld
popf
pop
cmc
dec
lock
adc
xor
sub
in
or
push
pushf
fsubs
adc
adc
lock
fildll
js
push
jl
xor
loop
xor
cmp
imul
jge
and
fs
in
push
shrl
mov
and
pop
push
popa
mov
mov
rcrl
or
rclb
and
dec
jns
mov
push
int
out
pop
call
rorl
and
sti
pusha
shll
imul
sub
push
and
addb
pop
mov
xchg
js
jl
sbb
repz
or
outsl
adc
cmp
popa
jmp
push
test
xchg
mov
jbe
dec
inc
lock
xchg
sbb
xlat
test
xor
sarb
cmpsl
test
shll
outsl
out
flds
push
insb
lock
pop
push
sbb
mov
scas
daa
int
push
pop
dec
cwtl
addb
push
mov
repnz
in
cwtl
stos
test
mov
cli
xor
lahf
outsb
in
popa
mov
popf
add
mov
mov
daa
xlat
ja
decl
stos
mov
loopne
pop
aam
insl
push
mov
sub
pop
rcrb
sbb
nop
inc
or
adc
xor
cltd
loope
pminub
popa
or
sub
imul
inc
pop
xchg
in
cmp
and
loop
mov
xor
aad
inc
mov
iret
dec
aad
repnz
add
adc
fstpl
gs
sbb
mov
xor
ficomps
jns
lret
push
popf
or
xchg
xor
rolb
xchg
xchg
clc
out
mov
or
insl
das
frstor
xchg
mov
ret
mov
fdivs
push
stos
jl
int3
sbb
push
mov
add
xchg
mov
nop
mov
xchg
cmp
or
mov
dec
dec
scas
sahf
bound
jno
sub
mov
jmp
pop
nop
dec
lret
fisttpl
inc
add
or
and
dec
and
mov
cmpsb
jl
pushf
mov
mov
xor
push
push
push
push
xchg
les
sti
in
cmp
mov
lret
ret
xchg
imul
pop
add
mov
ja
fistpll
cmp
cmpsb
bound
cmpsl
mov
aam
or
adc
aam
movsl
dec
xor
js
adc
cmp
cwtl
push
adc
push
rcl
add
into
xchg
daa
and
mov
lret
push
dec
inc
pop
lds
add
sub
test
imul
stos
dec
push
jns
xchg
pusha
adc
imul
mov
out
out
or
push
fs
cld
inc
scas
jno
pusha
cmp
out
cmpsb
inc
sub
cmp
imul
dec
int3
and
nop
insl
push
leave
sub
loope
pop
cmp
mov
mov
sbb
les
jecxz
and
xchg
test
or
fs
lods
push
shrb
ja
testl
std
xor
cmp
and
and
adc
pop
inc
mov
cmp
xlat
in
insb
imul
scas
inc
lods
cwtl
in
into
out
aad
pop
pop
jle
jmp
stc
jp
es
ret
scas
aad
push
dec
out
xchg
mov
and
mov
in
add
stos
mov
rclb
ja
dec
jmp
lahf
jae
clc
scas
xchg
adc
decl
mov
andb
rol
jle
in
cli
in
dec
xor
cmp
stos
shlb
xor
inc
movsb
mov
push
jbe
es
rcll
xor
repz
int
push
andl
push
jae
mov
addr16
mov
sahf
push
pop
push
jmp
adc
push
scas
and
and
sbb
adcl
add
out
xor
sub
jecxz,pt
mov
push
ljmp
insl
sbb
xchg
ret
test
pop
push
dec
inc
push
push
sahf
dec
adc
xchg
movsb
jg
cli
inc
xchg
testl
mov
mov
push
push
insl
fnsave
pop
jge
lahf
push
and
add
imull
sbb
ret
jmp
sub
inc
sbb
xchg
insb
cwtl
stos
jl
dec
and
cmp
pop
xlat
fmuls
lcall
enter
in
dec
in
sub
dec
inc
mov
xchg
jno
adc
sbb
mov
mov
es
fnstcw
jb
and
adc
mov
repz
mov
mov
xchg
into
mov
leave
mov
and
ret
outsb
adc
js
test
sub
jp
lahf
sub
mov
ja
adc
add
aas
xchg
pop
and
pusha
out
pop
mov
enter
jno
dec
aas
push
lret
out
inc
inc
xchg
dec
push
clc
mov
mov
mov
jp
hlt
mov
ret
lcall
aad
fcoml
sbb
mov
paddw
and
push
mov
push
jp
mov
outsl
mov
es
movsb
das
call
mov
jb
movsl
inc
lcall
pop
add
jbe
inc
popf
rolb
or
push
movsl
mov
sbb
arpl
xor
jae
hlt
sbb
sbb
xchg
cmp
or
pop
loopne
repnz
movsl
pop
adc
int
adc
into
mov
mov
push
cmp
aad
mov
shll
aas
dec
pusha
outsl
adc
sbb
push
setno
stc
xor
xchg
mov
push
ret
pop
and
dec
cwtl
ret
int
jecxz
mulb
adc
stos
push
arpl
pop
subb
add
adc
xchg
adc
cs
pop
cmp
pop
mov
and
push
xchg
test
dec
add
imul
nop
jge
xchg
xor
push
icebp
mov
leave
cs
or
js
out
scas
sarb
fcmovnbe
cmp
push
rorl
mov
inc
fdivl
mov
movsb
lahf
xlat
pop
cmpsb
or
je
outsb
leave
pop
cwtl
xchg
clc
jmp
push
jo
mov
add
daa
jne
out
popf
jg
sbb
test
cs
fsubrl
insl
hlt
xchg
leave
cld
out
lret
xor
sbb
int
test
pop
stos
jo
sbb
lea
mov
insl
pop
sub
push
in
sbb
in
pop
dec
pop
mov
scas
pop
and
stos
jmp
rcll
les
dec
ret
and
gs
or
jne
pop
cmc
fwait
push
or
popf
lcall
inc
repnz
push
xor
mov
pop
jnp
and
pop
out
inc
xchg
lods
jle
cmp
mov
xchg
adc
sahf
addr16
fwait
adc
sar
mov
adcl
adc
push
mov
inc
inc
pop
dec
sub
xor
mov
or
jp
mov
inc
fidivl
lds
mov
cmpsl
out
shll
xacquire
ljmp
sub
cmpsb
jns
lock
cmp
cmpsb
icebp
inc
ret
xor
mov
add
xchg
cmpsl
dec
xchg
dec
jae
push
push
cs
mov
pop
inc
vmovdqa
mov
data16
insb
inc
sbb
sbb
jb
inc
or
sub
shlb
adc
sbb
add
pop
adc
scas
xor
sbb
xchg
jb
jo
sbb
stos
in
or
adc
cmp
enter
jmp
mov
add
cli
jo
mov
mov
pop
test
call
cmpsb
mov
xor
stos
orb
cmc
sub
lret
cmp
or
xor
and
lods
push
adc
xor
out
xlat
or
in
mov
inc
subl
mov
stc
out
push
and
push
test
js
push
call
jno
ss
div
bndstx
xor
cld
inc
popa
into
jl
dec
test
iret
loope
loop
arpl
jmp
jecxz
jp
js
leave
out
mov
xchg
mov
shrl
mov
cmp
ret
jl
cli
orb
sbb
ds
xchg
push
testb
add
cld
or
or
filds
fcompl
pop
addr16
sub
sarb
jnp
sbb
ja
into
and
call
sbb
testl
stos
cli
sbb
cmp
or
inc
shll
mov
jne
arpl
xchg
loop
test
jp
and
inc
addr16
adc
push
push
add
xchg
fistl
xchg
fisubs
jns
fstpl
popf
mov
mov
or
dec
jmp
icebp
cld
adc
outsb
pushf
mov
clc
cltd
popa
pop
ja
shl
or
mov
std
outsb
jo
xchg
int3
out
jno
add
cmp
in
iret
arpl
push
sbb
xchg
pop
cltd
xor
add
jg
les
mov
leave
test
mov
jne
sbb
xchg
test
mov
push
ja
inc
test
mov
icebp
jp
fldt
inc
mul
adc
mov
xchg
fcoms
jns
push
add
mov
sub
int3
and
ror
enter
popa
iret
ljmp
mov
out
fwait
idivl
or
mov
scas
push
or
pop
test
mov
pushl
hlt
sbb
fwait
sbb
add
and
into
pusha
push
mov
call
popa
xchg
pop
inc
sub
int
out
sbb
repnz
inc
lcall
sbb
lds
enter
cli
sbbl
shlb
fimull
cmpsb
out
fidivs
call
js
pop
sub
sbb
mov
cmp
cs
popf
mov
mov
xchg
mov
and
adc
repz
imul
out
sbb
mov
int3
pop
jbe
push
ret
adc
test
sbb
lods
fcompl
loopne
push
loope
dec
push
xor
ljmp
icebp
xchg
insl
icebp
inc
loop
fstps
inc
add
and
fucomi
pusha
sub
mov
lds
sbb
add
xchg
clc
xchg
push
daa
jg
push
dec
lea
int
into
loopne
adc
cltd
int
scas
mov
fwait
sbb
xor
sbb
and
enter
push
mov
push
sub
movb
lds
fidivl
rorb
sbb
mov
or
add
cmp
push
ret
fidivrs
inc
lds
adc
or
loopne
mov
lods
clc
jp
andl
mov
lahf
push
cli
loope
jg
int3
loope
xchg
dec
mov
stos
fcmovnu
dec
jecxz
dec
in
cmpsl
pushf
xor
jge
shlb
lea
cmp
cmp
gs
stc
push
rol
mov
push
aad
sbb
jno
mov
sbb
and
adcb
mov
bound
sub
ret
cmpsb
jo
dec
add
mov
xor
dec
xlat
push
mov
rcrl
ret
gs
fimull
gs
out
add
cli
mov
sub
and
cmp
ljmp
adc
mov
ficomps
cmpsl
bound
mov
adc
fs
movb
mov
dec
icebp
insb
in
ljmp
jbe
push
dec
mov
stos
lods
add
add
inc
mul
cmp
popa
push
lret
push
or
jl
xchg
sahf
push
xor
and
push
mov
mull
cmp
push
sub
xor
addr16
push
jae
push
adc
sbb
ss
jo
rorl
outsb
adc
lock
jp
pop
pop
out
and
inc
aad
test
sbb
sahf
xchg
xor
xlat
push
insb
test
pop
fdivl
shll
mov
xchg
pop
jle
mov
bound
rcrl
or
sahf
addb
sub
cmp
scas
std
mov
daa
cmp
add
andb
in
outsl
lcall
dec
mov
push
pop
xor
dec
jge
cmpsb
push
jge
xor
add
pop
sub
test
bound
mov
sar
out
xchg
push
popf
pop
hlt
in
scas
outsl
push
aaa
sub
push
test
cmpsb
sub
mov
push
cmc
dec
ret
mov
outsb
jle
ret
dec
xchg
inc
cmp
hlt
push
xchg
or
lret
jp
pushf
pop
mov
inc
dec
not
mov
inc
mov
ds
rorb
push
aas
inc
pop
xchg
adc
iret
sbb
inc
cltd
mov
shrb
inc
ret
xor
movsb
les
stos
sbb
jae
mov
lahf
scas
xchg
in
mov
push
aam
ds
cmpsl
adc
adc
add
jb
clc
pushf
push
mov
dec
adcb
stc
pop
or
aad
aaa
mov
sbb
pop
pop
loope
fs
outsl
sbb
cli
in
out
test
pop
mov
ljmp
xchg
daa
xchg
and
clc
jbe
orl
dec
sbb
lcall
movsb
xor
nop
repz
xor
push
int
lea
cmpsl
mov
rorb
pop
or
adc
sbb
or
rol
jle
mov
xchg
or
mov
ljmp
cmp
stc
mov
fadd
xchg
popf
lods
cmpsb
adc
cmpb
xor
inc
push
loope
mov
fcompl
imul
and
xor
aas
fisubrs
gs
mov
jecxz
cmp
mov
je
jne
in
xchg
aam
jae
mov
test
ret
xor
or
jb
ds
insl
ja
hlt
inc
imul
sub
push
mov
insb
mov
sub
or
pusha
xchg
pop
push
xchg
inc
shlb
lcall
movsb
dec
out
xor
iret
xchg
push
mov
dec
fsubl
sbb
enter
pusha
pop
pop
nop
pop
outsb
les
lock
or
sar
in
mov
cmpsb
stos
negb
cli
push
dec
add
mov
call
lods
rcll
fsubl
push
pop
xor
sub
and
popf
pop
test
jle
sub
mov
pop
sub
imul
sub
dec
mov
or
sbb
jo
mov
mov
inc
je
jno
loope
mov
lahf
shll
ljmp
adc
mov
adc
jae
sbb
loopne
and
xor
cmp
in
fmul
into
popf
test
test
or
lock
push
in
sub
pop
jmp
cs
cmpsl
sbb
jecxz
push
cli
paddb
popf
pop
cmc
sub
dec
decl
cli
cs
mov
lock
fmulp
leave
addr16
xchg
push
xor
out
or
fcmovbe
xorl
mov
dec
adc
xor
pusha
loopne
loop
outsb
sbb
popf
popf
call
sbbl
rcl
pop
or
movsl
xchg
pop
insb
adc
xchg
fsubrl
mov
pop
hlt
push
xchg
repz
mov
add
scas
test
jl
pop
pop
mov
mov
shrb
or
fstpt
pop
stos
lds
test
xchg
popa
pop
mov
sub
shll
jae
jle
jae
rolb
notl
movsb
outsb
insl
cmpsb
mov
ret
out
fisubrs
xchg
add
add
inc
lret
aam
fdivs
adc
sub
cmp
mov
pop
cmp
repz
adc
std
sub
hlt
mov
xor
and
mov
or
adc
jg
xchg
loope
push
fldt
pop
pop
mov
out
les
push
jmp
int
pop
mov
test
lret
xor
lahf
fwait
and
sbb
or
ja
jo
jmp
test
cwtl
jecxz
or
ja
add
mov
push
cwtl
stc
push
pushf
sar
add
jo
mov
xor
sbb
xor
in
jg
addl
cmpl
mov
dec
test
loop
movsb
mov
das
ret
shlb
jnp
test
cltd
test
sahf
imul
sub
pop
cmp
out
ljmp
ljmp
shl
add
ja
inc
jmp
lods
pop
push
call
add
fwait
test
mov
sar
jb
add
cmpsb
push
cld
jae
fwait
mov
adc
xor
nop
stos
aaa
sbb
cld
jmp
inc
mov
jb
jo
sub
and
dec
and
jo
shlb
fsubl
or
or
and
lret
mov
adc
pop
pop
fdivrs
lahf
fisttpll
cmp
stos
mov
fsubl
fisubs
subl
subl
test
push
push
xor
jmp
int
int
push
pushf
fwait
in
mov
mov
and
repnz
dec
cld
arpl
mul
fstl
fcoms
data16
mov
test
or
pop
add
aas
xchg
mov
push
fcmovu
out
adc
pop
push
sysexit
push
jle
push
mov
dec
mov
sbb
adc
fcom
hlt
sub
test
jmp
push
and
mov
or
lret
mov
mov
xchg
cmpsl
cmpb
sti
ljmp
je
jnp
divb
jne
mov
jmp
sbb
fcmove
pop
mov
cmp
add
sbb
les
xchg
dec
cmp
cmp
repz
sbb
mov
das
out
xchg
ficomps
pop
sub
sahf
pop
xor
push
lods
pop
gs
lcall
rorb
push
jmp
sbb
nop
mov
lret
fucomp
adc
sbb
dec
jbe
in
cmc
sti
fnstsw
pop
sbb
rclb
sub
fdiv
mov
addl
mov
leave
int3
xchg
jle
xchg
je
adc
add
mov
push
out
scas
repz
xchg
and
imull
mov
jo
dec
cltd
rcrl
push
inc
data16
test
adc
jg
mov
mov
dec
mov
fisttps
mov
jb
daa
jo
aaa
scas
cmp
sub
cmpsb
or
adc
cmp
leave
mov
mov
add
xor
inc
and
mov
in
subb
insb
push
sbb
das
cmp
lahf
jne
andl
in
inc
cwtl
shrb
lds
addr16
jecxz
xor
cmp
sahf
je
mov
lcall
iret
mov
jb
push
mov
push
sub
adc
adc
pushf
cmpsb
cmp
out
dec
ja
jecxz
outsb
aam
mov
aaa
imul
fcoml
rorl
lock
cmpsl
dec
cmp
pop
dec
mov
enter
or
and
xor
adc
shlb
or
xchg
movsb
shrl
mov
es
rolb
outsb
xor
dec
cmp
icebp
or
addb
xchg
xchg
and
mov
outsl
inc
aam
and
mov
and
xor
and
cmp
loopne
into
mov
mov
add
lock
je
inc
or
outsl
add
fs
addr16
mov
push
mov
scas
fdivp
arpl
sbb
cmc
push
cs
or
jo
sbb
les
cmpl
jg
cwtl
gs
ret
cmc
sti
pop
inc
sub
test
push
fs
cs
push
out
add
mov
cmp
and
push
lahf
jmp
mov
repnz
js
xchg
scas
addb
mov
sbb
mov
push
cmpsl
sbb
mov
addr16
sbb
into
mov
lret
scas
imul
insl
jle
in
sbb
nop
or
ret
jecxz
cld
test
movsb
dec
andb
jmp
cmp
dec
cli
int
mov
or
jge
fiadds
cmp
jns
jge
faddl
xchg
add
push
js
lret
insl
fbld
jg
xor
bound
jl
shl
dec
add
mov
daa
xlat
push
mov
inc
into
mov
add
cmpsb
outsb
lret
lods
out
cli
test
je
sub
add
sbb
mov
cli
sub
lahf
jmp
or
push
cmpsl
es
pop
shll
mov
hlt
mov
xor
push
adc
dec
add
loope
pop
and
pop
xchg
pop
stos
xchg
pushf
lret
dec
dec
pop
stc
sbb
pop
insb
or
xchg
xor
lret
daa
mov
push
xor
loop
xchg
mov
push
sub
repz
out
inc
andl
into
and
cmc
mov
mov
sbb
aas
adc
mov
in
adc
addr16
inc
sahf
aam
loop
and
out
hlt
arpl
jns
jge
dec
cltd
xchg
sbb
mov
push
pop
and
insl
jbe
push
scas
std
pusha
or
push
dec
sub
cmp
pop
mov
inc
adc
cli
lahf
inc
xchg
jg
adc
jbe
scas
dec
jge
scas
sbb
movsb
cld
adc
divl
xchg
mov
mov
and
aad
add
and
test
rcrl
mov
inc
or
cmp
adc
mov
mov
jmp
arpl
xchg
pushf
rclb
push
out
sbb
jne
shl
mov
sub
js
js
scas
push
jae
xchg
sbb
js
inc
sub
push
or
adc
adc
mov
and
stos
mov
jecxz
push
add
add
and
jmp
and
jp
jae
popf
lea
inc
outsl
out
mulb
fdivrl
repnz
leave
rcl
push
pop
and
xchg
out
push
out
sbbl
mov
cmp
test
push
stos
iret
fnstsw
sti
jg
mov
adc
fildl
sub
pop
and
mov
inc
daa
push
pop
adc
jno
in
push
pop
jno
pop
sbb
lods
mov
dec
sbb
pop
mov
insb
outsb
add
adc
sub
inc
stos
and
cs
stos
xor
push
push
fnclex
outsb
aaa
mov
lds
pop
loopne
pop
xchg
stos
sti
loopne
aas
popf
push
sbb
cli
and
push
push
or
jo
sub
mov
nop
sbb
pop
inc
subl
shr
mov
repnz
or
pop
or
icebp
xchg
mov
and
cmpl
mov
pop
in
mov
mov
movsl
fwait
xor
cmp
mov
dec
popa
jne
bnd
pop
imul
mov
test
or
fs
dec
movsl
sbb
stc
lahf
or
icebp
mov
scas
mov
mov
push
lock
or
cmp
js
ret
into
add
push
cmp
add
and
xorl
insb
dec
mov
insb
and
movsb
leave
loope
mov
jecxz
fsubl
ds
jbe
jb
test
imul
in
cmp
arpl
pop
aam
xor
lods
add
mov
mov
fxch
mov
sahf
outsl
sub
out
mov
pop
dec
lea
loopne
cmp
aam
sbb
mov
addb
push
or
shr
inc
xchg
cmc
ret
sub
testl
movsb
adc
jnp
mov
add
fs
dec
fs
sbb
cwtl
js
gs
cmpsb
testb
out
das
mov
sub
cli
sub
cld
sub
call
mov
and
mov
adc
and
push
xorl
or
ret
add
pop
loopne
test
push
cmpsl
jl
dec
cmp
stc
sahf
mov
sub
push
mov
andb
add
in
push
cmpl
mov
cmpsl
mov
jg
lcall
aam
pop
ret
incl
push
mov
pop
cs
mov
rorb
daa
dec
aaa
cmc
fimuls
imul
call
outsb
inc
lahf
addr16
fwait
adc
fs
inc
lods
mov
xor
mov
push
push
push
rcl
out
mov
orl
gs
jb
pushf
repz
pop
call
dec
xlat
in
dec
jl
adc
insl
test
adc
daa
cwtl
xchg
lcall
enter
push
sbb
bound
insl
push
inc
jno
pop
neg
sar
mov
std
cld
dec
mov
dec
popl
xor
cmp
dec
rorl
scas
in
movl
push
xchg
les
test
jnp
scas
stos
pop
mov
fisttpl
addb
xchg
or
repz
xor
pop
push
out
or
sbb
aam
mov
aam
imul
cmpsb
lret
sub
cwtl
adc
test
fsubrs
mov
xchg
sbb
xchg
mov
les
mov
mov
ror
and
enter
bnd
mov
push
and
jo
cmp
sbb
sub
mov
addb
sub
adc
mov
je
xor
add
cmpb
mov
loopne
idivb
mov
cmp
push
fwait
jbe
pop
inc
pop
in
add
inc
or
xchg
les
pop
adc
jecxz
sbbl
jne
jnp
mov
jno
mov
pusha
std
fisubs
jmp
dec
fldcw
and
jge
inc
xchg
mov
stos
clc
gs
pop
mov
sbb
cmp
out
or
mov
jg
testl
cwtl
ficoml
adcl
or
rol
jecxz
sub
jnp
shl
mov
test
inc
inc
mov
xlat
jg
add
sub
dec
xor
pop
sbbl
rolb
mov
add
jnp
cmp
jne
lods
jo
or
add
roll
ja
pop
inc
or
cli
arpl
ja
imul
insb
cwtl
nop
jns
pop
or
push
xchg
jmp
jne
dec
cli
aam
add
movsb
mov
das
pop
xlat
repz
int3
lret
jmp
push
xor
nop
or
mov
jb
jbe
imul
xchg
shr
and
mov
and
aaa
pop
lods
jo
mov
hlt
pop
rcrb
outsl
sahf
sahf
push
int3
repz
dec
adc
and
out
adc
scas
out
rclb
pop
mov
inc
push
mov
out
adc
sbb
add
jecxz
xchg
bnd
push
mov
xor
std
sub
xchg
pop
xorb
mov
xchg
ja
add
pop
ja
outsb
mov
and
out
in
xor
push
cmpsb
lret
les
cld
push
inc
addb
ds
aad
ljmp
stos
pop
out
testl
and
pop
inc
push
xchg
sub
and
jno
je
sahf
sub
call
iret
jne
nop
and
rclb
negb
and
xchg
sub
jnp
pop
aas
shrl
push
inc
cmp
mov
pop
nop
andl
sub
xchg
stos
push
daa
mov
imul
mov
insb
and
pop
cmp
ret
xchg
jg
sbb
mov
sti
daa
fldcw
cmc
aam
jl
sbb
icebp
inc
inc
mov
cli
sahf
jb
and
inc
push
adc
aaa
pop
sbb
mov
pop
ljmp
pop
push
pop
rorl
test
loopne
sub
or
mov
or
xchg
sti
jg
addl
inc
pop
and
sub
into
lds
leave
and
cltd
cmp
mov
sti
xchg
in
mov
adc
lret
in
inc
test
aaa
loope
test
xchg
mov
pop
xor
aas
push
clc
ds
aaa
adc
mov
roll
or
fcmovbe
push
mov
jns
add
pop
aad
sbb
jecxz
inc
lea
rolb
cmp
lods
xchg
cld
xchg
xchg
dec
shlb
push
lods
sub
xlat
loop
xchg
and
call
dec
les
push
fnsave
mov
insb
push
fisttpll
mov
sub
dec
mov
adc
rclb
shlb
scas
cmpsl
lds
pop
enter
test
popa
les
scas
adc
add
dec
les
std
mov
inc
mov
jmp
mov
xor
jno
sahf
xchg
inc
push
mov
in
and
call
pop
fdivrs
sbbl
outsl
mov
subb
movsl
inc
inc
insb
sbb
mov
jmp
out
cmc
enter
push
cmp
fiaddl
push
das
aaa
adc
lret
mov
cmp
addr16
testb
cltd
pop
push
jbe
mov
lahf
pushf
xchg
add
out
stos
push
hlt
ss
in
aaa
lret
pop
mov
cmp
dec
sub
stos
fs
inc
popf
and
daa
iret
addr16
lret
jbe
jmp
sub
jo
or
mov
xchg
lods
shll
js
jecxz
mov
pop
mov
jb
push
jo
push
sbb
dec
cmp
loope
inc
mov
push
cmp
push
sahf
repz
push
fdivl
popf
sub
sub
aam
into
push
gs
mov
mov
addr16
les
sbb
push
pusha
sub
xchg
pop
fimuls
add
les
out
and
xor
push
add
mov
mov
push
out
testb
xor
mov
loop
dec
adc
clc
pop
dec
inc
jae
sub
xchg
sub
mov
cwtl
xchg
fiadds
xchg
lock
jb
in
lods
xchg
push
cmp
popa
in
xor
mov
mov
paddq
shll
shlb
cmp
xchg
int
xlat
push
adc
dec
jns
xchg
mov
daa
xchg
sub
cmp
out
push
decb
add
jge
or
add
mov
sbb
pop
test
add
es
icebp
mov
sub
jp
cmp
push
movsb
rorl
loope
movsl
pusha
mov
mov
pop
adc
pop
sti
loope
dec
sahf
fwait
call
mov
add
into
xchg
rcll
sub
popa
cmp
fcmovne
mov
mov
or
jne,pn
imul
pop
and
dec
test
je
bound
pop
shl
and
inc
cli
lods
nop
push
jl
in
pop
fisubs
in
pop
adc
xchg
popf
hlt
std
push
jo
mov
or
mov
mov
and
cmp
xor
push
cmp
or
inc
aaa
sub
dec
dec
pop
and
inc
scas
mov
xchg
movsb
sbb
lds
or
inc
test
xor
sbb
xor
push
add
popf
add
adc
add
mov
cld
adc
or
mov
imul
incb
js
dec
test
lcall
or
jmp
cmc
or
mov
jp
sbb
rclb
push
cmc
lahf
mov
push
inc
cmc
shlb
mov
inc
fs
cmpsb
jmp
jo
add
lods
sub
xor
cld
ret
push
add
xor
lods
add
je
daa
dec
aaa
stos
sbb
lahf
dec
sub
or
mov
add
lahf
adc
das
and
lcall
dec
jne
popf
loope
into
dec
push
mov
fadd
inc
iret
jae
adc
jo
insb
stc
sub
sub
push
cmpsb
add
cmp
loopne
je
xchg
fwait
xchg
orl
fidivrs
mov
lock
je
sahf
cwtl
movaps
ds
stc
lds
inc
cli
lock
jge
lahf
mov
aam
imul
pop
and
jae
out
xchg
pop
jp
pop
pop
jecxz
nop
sub
mov
in
lcall
test
mov
dec
adc
pop
insl
rol
movsl
mov
movsl
cmp
aaa
mov
lods
sub
mov
ljmp
jp
ret
fiaddl
scas
mov
dec
add
cmpb
inc
jne
mov
lret
cmp
mov
gs
bound
push
lret
push
jo
dec
mov
test
outsl
cmpsl
cmpsb
cmp
into
xchg
cmp
push
xchg
xchg
pushf
or
jp
jl
cwtl
xchg
jecxz
add
lds
hlt
xchg
xchg
mov
adc
lods
movsb
pop
xchg
dec
dec
data16
sbb
lea
out
data16
rcl
adc
push
sahf
and
mov
ds
sbb
imul
sub
mov
sti
mov
mov
les
sbb
xchg
xchg
push
aad
mov
das
outsb
js
xchg
sub
bound
ljmp
imul
dec
inc
ficomps
loope
xor
leave
fisubrl
in
xchg
js
mov
loopne
shlb
sahf
les
lret
xchg
adc
cwtl
xor
add
iret
in
sbb
out
pop
mov
cmpsb
jecxz
sbbl
mov
loop
fcmovb
pusha
gs
sub
cmpsb
dec
add
or
mov
push
dec
aad
fs
jmp
push
add
mov
push
sub
hlt
repnz
adc
insb
jns
sbb
cmp
mov
push
jl
push
and
push
xor
jno
aad
clc
sbb
shlb
and
rorl
dec
pusha
mov
mov
fwait
jge
imul
test
popa
loopne
lods
and
movsb
test
xchg
cmpsl
or
es
cmp
ja
mov
adc
rcr
stos
das
js
sub
mov
mov
insl
inc
mov
fcmovnbe
shlb
cmc
out
jmp
stos
out
test
and
jl
sub
jle
or
or
sub
push
cmpsl
rcrl
dec
lret
pop
fwait
imul
ficomps
or
sbb
fisubrl
dec
rcrl
ja
scas
fxch
jge
cli
int
mov
int
jo
iret
out
sub
icebp
int3
aaa
es
jae
fld
out
mov
mov
push
fstpl
pop
jle
pop
aam
or
dec
jmp
movsb
fisubrs
mov
sbb
and
out
inc
ja
hlt
popl
sub
pop
xor
push
mov
ja
jb
xchg
fldenv
adc
dec
push
adc
outsb
test
inc
sub
or
push
mov
in
pusha
out
inc
shll
into
xchg
into
das
shlb
in
xchg
pop
mov
jp
xlat
cmpb
fimull
ret
jb
inc
outsl
sbb
or
insb
push
push
iret
pusha
in
add
adc
cmc
out
iret
push
in
push
not
mov
mov
jnp
sub
jns
mov
mov
mov
data16
pop
inc
and
dec
push
xor
pop
add
popf
jbe
sbb
cmp
das
dec
notl
adc
xchg
mov
movsl
adc
movsb
sub
jo
and
hlt
mov
or
mov
push
cmp
cs
xor
pop
inc
dec
push
iret
fisubrs
inc
popf
gs
jnp
pop
mov
mov
push
mov
daa
or
fists
sarl
pop
mov
int3
adc
push
sbb
in
and
es
adc
pop
sbb
in
dec
cltd
jp
jae
imul
mov
xchg
mov
loope
inc
lods
push
or
mov
fstp
sub
sbb
push
pop
xchg
jecxz
int
in
fistl
outsl
aas
add
cmp
shll
nop
lock
inc
aaa
mull
xchg
jae
fucomp
icebp
and
push
rclb
push
mov
invd
pop
rcrb
sahf
or
jbe
loope
aas
pop
pop
insl
mov
out
pop
es
xor
mov
cmp
jns
mov
dec
js
push
lret
add
fcompl
mov
jl
sub
test
test
mov
mull
movl
sbb
pop
int3
ret
add
fisubl
sahf
es
push
fbstp
fsubp
lea
pop
adc
dec
lcall
xchg
and
in
sub
jbe
sub
inc
ret
cmp
cwtl
or
fucom
adc
mov
in
add
xor
push
inc
push
xor
mov
or
jp
popa
dec
sbb
and
pop
pop
int
ret
das
push
jmp
mov
sub
pop
mov
or
arpl
or
arpl
or
xor
les
or
icebp
jge
inc
push
out
leave
pop
xchg
jne
dec
rolb
and
orb
imul
sbb
fcoml
lcall
ja
sub
div
inc
dec
fsubs
mov
dec
mov
push
jae
mov
jno
popf
and
xchg
xor
das
stos
mov
jp
in
fstpt
das
add
nop
mov
or
pop
adc
inc
negl
xor
cmp
push
jge
andl
imul
mov
dec
dec
ja
test
out
mov
push
pop
scas
mov
aas
inc
xor
imul
add
filds
outsb
cs
mov
dec
cmp
dec
mov
push
pop
jge
insl
jne
jae
and
xor
xor
pusha
dec
leave
pusha
pop
aas
idivl
imul
cmp
inc
push
movsl
sub
test
movsl
jle
or
add
pop
dec
push
jno
loop
arpl
jb
xor
aad
xlat
mov
call
js
inc
jle,pt
insl
inc
frstor
or
fildl
mov
sahf
mov
cltd
cwtl
mov
ss
scas
dec
cld
gs
jae
mov
sahf
roll
imul
lock
cld
mov
xor
mov
fistpl
xchg
sarl
mov
adc
in
addb
out
nop
pop
icebp
jb
and
sub
jl
jmp
lock
lcall
xchg
std
lcall
adc
ret
out
fwait
xchg
jb
bound
jl
inc
xchg
mov
and
das
iret
mov
sbbb
out
xchg
lea
xchg
jo
pop
insl
pop
imul
in
pop
jg
mov
mov
loop
test
pop
imul
lods
call
repz
sub
les
cwtl
out
mov
pop
pop
andb
insb
xorb
lahf
outsb
scas
or
mov
mov
aaa
push
rorl
or
into
gs
rclb
scas
xorl
xchg
or
jg
wbinvd
int3
adc
sbb
xor
lock
add
or
mov
rcl
bound
dec
fsubs
mov
dec
test
xchg
mov
adc
push
lods
in
daa
lea
test
out
imul
jg
xchg
flds
cli
dec
adc
inc
das
cmp
leave
and
adc
add
ret
mov
lahf
lods
loop
ljmp
or
cmpsl
cmp
repnz
sub
addr16
and
out
les
inc
cld
rclb
mov
andl
cmp
dec
push
leave
ret
and
sub
push
fldl
jno
divl
xchg
sub
outsl
adcl
imul
out
xchg
cmp
cmpsl
sub
stos
pop
or
stc
dec
pop
cwtl
inc
dec
fwait
sbb
jb
loopne
cld
and
mov
add
cmpsl
push
dec
stos
jbe
pushl
fdivrs
int3
or
mov
hlt
xchg
ds
ret
test
xor
mov
pop
inc
pop
loop
adc
xchg
pop
push
std
pushf
je
sti
mov
mov
pop
lods
push
mov
push
js
outsb
push
dec
dec
xchg
outsb
xchg
bound
jno
push
pop
push
repz
and
out
incb
in
add
rolb
enter
cmp
inc
or
popf
movsb
mull
lret
pushf
ds
out
shll
cmp
or
cwtl
mov
mov
dec
inc
test
out
add
adc
cwtd
in
imul
adc
jecxz
adc
xlat
mov
cmp
xchg
pop
scas
jo
daa
cli
adc
dec
pusha
daa
dec
stos
and
lds
ds
cli
mov
scas
mov
mov
out
leave
inc
add
push
xor
int3
scas
and
mov
xchg
test
sbb
dec
adc
pop
sti
mov
mov
das
std
sub
or
dec
push
and
lcall
mov
adc
xor
ret
mov
mov
mov
adc
dec
mov
cmp
loop
mov
inc
shrl
jmp
xor
cmpb
pop
xor
insl
in
mov
or
dec
sbbl
jge
or
mov
pop
pop
aad
sub
add
or
in
cmpsl
or
popa
and
jle
or
icebp
xchg
rcr
sti
jns
jg
inc
push
lret
rcr
fwait
adc
fiaddl
mov
sub
aam
in
loopne
cmpl
add
add
stos
inc
inc
xor
cltd
lret
popf
mov
lds
aaa
sub
xchg
dec
or
jge
add
fstpl
in
dec
imul
push
sbb
lea
popf
sbb
je
mov
stc
js
or
shll
fisubl
dec
mov
shl
gs
push
mov
fcoml
adc
fsub
fwait
sub
sbb
shlb
mov
mov
sub
repz
icebp
stos
jo
imul
mov
jns
shll
loopne
in
mov
test
cmc
jg
inc
outsl
flds
and
or
mov
movsb
cmp
insl
outsl
mov
mov
loope
push
or
hlt
repnz
mov
cmp
mov
out
dec
int
in
fcompl
mov
insb
aam
jnp
leave
jg
imul
dec
xorl
or
xor
incb
xchg
mov
jmp
fnstenv
js
shll
xchg
out
or
fstps
push
mov
popa
es
mov
or
push
add
or
aam
retw
orl
add
dec
dec
adcl
das
jae
nop
jl
and
mov
xchg
pusha
adc
cs
cs
cwtl
aad
mov
std
jne
call
pop
adc
sbb
mov
test
sbb
mov
movsl
push
loopne
or
bound
loopne
iret
jl
shl
stos
cmp
sub
dec
xor
pop
pop
push
popa
or
cmp
dec
pop
or
and
addb
cmp
and
pop
push
mov
xor
test
and
cli
cltd
xchg
ret
mov
mov
int
mov
cmp
and
loopne
imul
pop
and
mov
cmpsl
cwtl
mov
inc
out
in
pop
out
enter
fistpll
xlat
xor
jle
loope
cmp
jl
pmaxub
test
cmc
ds
cmpsl
xchg
jno
ds
pop
es
push
jp
loop
les
mov
jnp
xchg
ficompl
pop
jae
in
cmc
adc
filds
cmp
test
and
or
jbe
jne
mov
sub
inc
push
xor
jl
lock
xchg
inc
mov
mov
scas
push
mov
sbb
sbb
ret
pop
fs
dec
push
xor
mov
add
leave
jns
xchg
xor
lret
repnz
movsl
jne
push
test
xor
das
lahf
push
sub
sub
pop
je
stos
add
jge
inc
sbbb
inc
xchg
mov
mov
sub
icebp
sti
adc
sbb
sbb
sbb
test
test
into
pop
imul
sub
mov
movsl
addr16
or
in
mov
in
leave
outsb
adc
mov
test
adc
mov
adc
dec
idivl
mov
clc
add
push
cwtl
lea
daa
mov
jge
ss
leave
inc
das
pop
push
fs
into
in
cmpsb
cmp
icebp
and
mov
pop
sub
into
shld
aas
leave
aam
scas
and
movsl
pop
pop
fstps
and
or
sti
repz
mov
sub
mov
es
in
inc
flds
lods
adc
loopne
lds
xor
cmp
divb
stc
dec
and
sub
jnp
sub
testb
ret
shlb
or
mov
shrl
ljmp
fidivs
jae
daa
and
sub
jle
aaa
mov
mov
xchg
lret
shr
int
and
inc
xchg
jp
stos
push
push
fst
jb
or
sbbl
lock
insb
in
inc
ret
into
out
enter
add
icebp
out
pop
mov
xchg
popa
or
jae
incl
push
std
test
loope
add
jne
xchg
sub
sbb
pushf
inc
in
adc
mov
sbb
in
fists
xchg
xchg
addps
enter
sub
jae
add
aaa
add
lahf
mov
mov
ja
sahf
fcomp
rclb
hlt
test
imul
xchg
xor
ja
loopne
imul
sahf
sbb
dec
divb
movl
fsubrs
jae
rolb
dec
sbb
sub
jecxz
test
add
jge
pop
pusha
xor
ds
insl
out
mov
shl
in
imul
xchg
inc
xor
add
ret
in
aas
push
mov
push
cmp
jle
test
cltd
or
push
mov
out
cmp
stc
orl
fiadds
push
insb
lret
jp
popf
lret
xor
inc
xchg
xor
test
push
data16
adc
jne
sbbl
clc
clc
das
push
and
imul
aam
sbb
outsl
imul
or
add
jmp
sbb
lret
ret
movsb
icebp
adc
xchg
add
adc
mov
or
je
je
shrb
mov
sti
xor
jle
outsl
pop
push
int3
pop
xchg
dec
mov
jg
mov
dec
pushf
in
andb
test
add
dec
xor
jnp
out
int
daa
sub
outsl
inc
popf
lahf
add
push
jle
lods
mov
nop
fisubrs
std
sahf
push
imul
mov
add
dec
or
and
xorps
enter
add
fisubs
dec
sub
fwait
inc
ret
cmpsb
sbb
andb
pop
in
clc
stos
cmp
scas
pminsw
inc
clc
dec
repz
xchg
cltd
outsl
pop
popf
jnp
pop
hlt
mov
push
in
push
xchg
repnz
lds
sbb
daa
iret
dec
adc
faddl
pop
and
mov
cmc
or
addr16
ror
jne
aad
dec
xor
sahf
sub
dec
sbb
loopne
adc
mov
out
jo
inc
adc
out
sbbb
adc
test
out
jp
mov
leave
jp
mov
mov
int3
roll
in
das
adc
int3
push
and
inc
int
stos
aam
std
add
inc
add
js
adc
jg
xchg
ljmp
test
incb
enter
mov
pop
sbb
add
inc
mov
insb
push
xorl
ja
fisubl
insb
ss
xchg
or
int
sbb
mov
mov
ss
mov
lret
ja
inc
aad
mov
mov
add
addl
out
dec
mov
mov
push
aad
cwtl
mov
testb
pop
cmp
push
push
fdivr
jno
mov
and
jo
sbbb
repz
jle
sti
inc
jne
andl
gs
jo
iret
enter
mov
ret
sub
sub
mov
sub
adc
sbb
dec
pusha
push
in
lods
fisubrs
xor
cmp
xchg
push
enter
mov
test
imul
pop
cwtl
cmp
sbb
mov
mov
mov
push
lcall
sbb
aaa
push
leave
mov
xor
jbe
xor
lcall
pop
push
sti
inc
das
xor
add
fsubl
lret
movsl
xchg
dec
jmp
add
sar
movsb
xchg
sub
je
fistl
rolb
inc
push
and
std
jmp
das
fisubrs
rcll
xchg
imul
movsl
fwait
imul
pop
sarb
dec
cltd
inc
xchg
mov
mov
sbb
jmp
cmp
pop
mov
das
jne
dec
cmp
and
jo
fists
test
nop
or
mov
sub
mov
ds
fildll
jo
mov
ljmp
xchg
ret
mov
jo
push
jb
fcoms
cmp
dec
cli
lock
adc
inc
fidivrl
sub
push
jmp
into
mov
mov
adc
dec
and
test
mov
inc
pop
or
fstps
mov
in
subl
roll
push
sbb
sbb
les
dec
iret
divl
pop
pop
lahf
dec
sbb
jge
add
cmpb
clc
mov
mov
in
cmp
mov
mov
int
mov
call
push
push
push
pop
rcll
or
das
loop
cmp
sub
jmp
mov
sbb
popa
addb
loop
xor
push
call
add
adc
aas
lcall
in
pushf
jge
aad
sub
into
xor
add
add
pop
in
push
push
ljmp
les
test
jnp
lret
stos
ret
adc
test
repnz
in
lahf
jbe
lret
jbe
mov
lods
adc
sub
pop
add
cwtl
add
repz
in
mov
loop
jg
jo
nop
jns
pop
ds
or
push
cltd
xor
push
xchg
js
shrb
imul
inc
lcall
je
rcl
push
pop
repz
insl
push
mov
divb
lahf
pop
jae
mov
in
repnz
daa
and
andb
repnz
pand
and
ljmp
xlat
jl
lcall
inc
pop
pop
vpandn
fdivs
jns
push
sub
test
jl
bound
in
mov
fidivrs
push
sarl
inc
dec
pop
lock
and
lcall
subl
stos
lock
jl
loop
fmull
das
pop
cmp
adc
pushf
sbbb
xchg
xchg
nop
dec
mov
push
and
cmpsb
rol
jecxz
scas
decb
ret
jbe
nop
addr16
repz
int3
out
add
sub
inc
push
lea
xor
iret
xchg
aad
cmp
repz
fistpl
inc
imul
jbe
jo
cmp
sahf
scas
popf
or
pop
loopne
aaa
push
dec
repnz
outsl
ret
add
popf
ljmp
icebp
sub
mov
xor
fistpll
mov
jecxz
arpl
cmp
imul
cmpsl
mov
scas
pop
add
dec
push
cmp
out
mov
fnsave
or
push
or
ljmp
dec
pop
mov
mov
push
lcall
popf
sub
dec
jmp
pop
push
mov
cmc
lods
sarl
andb
fmul
sbb
add
loope
imul
jmp
mov
in
cmp
jmp
enter
out
jge
adc
ret
out
mov
xchg
mov
lods
jg
mov
rcrl
loope
mov
xchg
pop
bound
movsb
push
mov
mov
rorb
add
push
inc
ljmp
mov
adc
loope
sbb
add
adc
mov
add
aad
lret
cwtl
push
lds
adc
pop
cmp
mov
gs
dec
cld
xor
dec
dec
or
dec
int
dec
mov
pop
das
pop
mov
outsl
cli
push
pop
and
add
sbb
cmpsb
adc
jb
xchg
and
mul
leave
dec
cmp
test
sti
aaa
inc
mov
and
stos
pop
adc
int
insl
push
mov
sbb
fdivl
pop
or
xchg
icebp
xchg
jns
dec
cmp
sbb
enter
sub
testb
outsl
pop
and
and
popf
out
test
test
xchg
je
jae
cmpsb
mov
xchg
push
sub
add
scas
pop
or
sub
or
shlb
stos
sub
xchg
mov
dec
sahf
dec
jbe
xor
inc
push
mov
push
dec
dec
je
add
mov
idivb
adc
in
push
mov
cmp
sbb
daa
fstpt
mov
xchg
jge
cmpb
ret
arpl
out
push
or
nop
fs
js
inc
add
sub
inc
cld
call
sub
stc
lcall
dec
inc
sahf
mov
jmp
jne
insb
iret
aam
xor
cmc
out
incb
call
push
xchg
inc
sub
jns
gs
scas
xor
stos
adc
imul
fdivs
ret
daa
in
movsb
mov
add
cmp
xor
pop
stos
cli
dec
std
mov
inc
fwait
sub
inc
mov
pop
push
andl
sbb
test
jmp
nop
push
jmp
inc
lock
es
cmp
dec
popa
mov
stos
sbb
and
stc
loopnew
push
aam
inc
cmpl
pusha
push
scas
repnz
movb
sbb
lcall
lock
and
mull
dec
dec
and
xchg
jno
cmp
mov
imul
int3
sbb
je
data16
stos
dec
dec
lret
adc
xchg
and
cmp
or
bswap
test
jmp
add
sahf
daa
or
dec
jb
cmp
jmp
push
in
bts
pop
iret
clc
jo
imul
stos
sbb
pop
lods
inc
xor
jne
stos
push
mov
dec
leave
jl
ret
dec
pop
inc
push
jecxz
ljmp
lret
mov
mov
cmp
inc
and
shll
cmpsl
push
negb
mov
lahf
clc
stos
pop
aam
mov
aad
scas
in
mov
push
gs
push
and
xchg
jae,pt
sbb
push
testb
or
cmpsb
inc
xor
loopne
xor
add
pop
inc
mov
xor
and
jns
or
nop
mov
ret
inc
mov
cmpsl
cmp
lret
cmp
out
test
sti
mov
test
or
mov
xchg
aad
nop
stos
mov
in
fisttps
stc
rcrl
lea
mov
fcomps
jp
test
rolb
dec
cltd
cmp
xchg
repz
mov
or
int3
loopne
and
cmc
je
fwait
shlb
and
pop
cwtl
pop
mov
and
fwait
mov
mov
mov
fucomip
mov
inc
push
movsb
jmp
inc
xor
int
repz
cmp
add
sub
add
jno
xchg
mov
data16
xchg
mov
push
xor
add
arpl
xchg
scas
ficomps
lret
pushl
loope
nop
cmpsl
dec
fcoms
out
pop
cmp
pop
mov
rsm
adcl
xlat
imul
pusha
orb
pop
or
movsb
popf
or
cltd
mov
scas
adc
stos
or
and
mov
xchg
add
icebp
inc
dec
jmp
punpckhdq
loop
xchg
mov
xchg
jge
mov
loop
xchg
insb
push
leave
pop
xor
outsl
xchg
adc
mov
in
sahf
push
lret
iret
ret
cmp
jnp
pop
data16
dec
negl
enterw
mov
aam
mov
int3
jne
sbb
adc
push
mov
ret
dec
iret
sub
je
pop
jno
and
mov
or
cmp
mov
arpl
outsl
sti
add
scas
xchg
ffree
pop
pop
pop
clc
subl
enter
pusha
lods
addb
cli
pop
iret
pusha
ret
out
enter
jl
in
je
cltd
test
adc
lret
jns
jg
lcall
fdivrl
test
imul
dec
lods
mov
aam
cwtl
ret
js
iret
sbbl
stos
pop
lods
out
inc
mov
mov
andl
clc
mov
cs
int
push
movsl
sub
stos
cmp
pop
es
or
inc
adc
fdivs
pop
out
lock
negl
inc
mov
enter
mov
xchg
or
das
or
mov
fstl
xchg
add
in
jle
adc
inc
ljmp
dec
dec
inc
push
pop
sahf
mov
adc
icebp
sbb
jno
mov
jmp
dec
adc
xchg
test
sbb
cwtl
lock
in
ss
push
mov
stos
and
sub
repz
cwtl
mov
cmpsl
ljmp
dec
popf
cmp
mov
inc
jns
inc
cmp
mov
aam
xchg
jmp
mov
sbb
sti
xchg
es
out
int
loope
lods
and
cli
and
addr16
into
push
in
inc
stc
pop
mull
daa
jo
jae
or
cltd
and
ret
movb
xchg
in
mov
mov
push
dec
adc
mov
insb
das
cltd
out
sub
fildll
inc
push
les
mov
xor
ret
pop
or
leave
mov
imul
jge
imul
jne
out
lods
paddb
fnsave
add
imul
add
mov
fnstcw
call
sbb
dec
cli
ds
aam
cld
mov
xor
jl
pop
sub
mov
insb
loop
popf
lahf
test
into
mov
insb
xchg
mov
xor
jno
fiaddl
lret
sahf
mov
mov
ret
in
pop
enter
push
sarl
jg
push
andl
or
xlat
and
fcmove
mov
push
sbb
jle
movsl
in
pop
ret
cld
jae
and
pop
scas
arpl
ja
sbb
int3
aam
xchg
push
push
sbb
mov
push
jae
and
jl
cmp
stos
inc
leave
imul
jecxz
das
ret
movsl
outsl
rcll
jno
push
mov
sub
stc
rorb
cmp
lock
add
outsl
rorl
ficoms
call
xlat
xchg
mov
pop
scas
jnp
leave
jnp
sbb
fsubs
aaa
jge
andb
fimull
mov
xchg
adc
loopne
enter
cmp
mov
ljmp
lcall
dec
pop
int
pop
icebp
pop
jae
mov
dec
ret
inc
shr
push
push
pop
stos
es
mov
cs
in
push
pop
loopne
xor
xchg
adc
stos
jno
add
adc
out
aam
aam
xor
add
cs
jg
push
push
fstpl
jg
hlt
gs
jae
lea
divb
lods
inc
movsb
mov
std
dec
jno
cltd
xchg
adc
jmp
inc
mov
arpl
repz
daa
divl
add
into
push
test
push
and
lea
cmp
js
aam
sub
dec
in
test
in
fcomps
push
jnp
dec
lds
stc
sbbl
mov
sahf
xor
mov
xor
pushf
daa
decb
sub
hlt
lds
test
sti
ret
pop
and
decl
gs
xlat
dec
jae
cmp
cli
lock
shrb
jnp
lret
addb
test
dec
or
and
mov
xor
aas
int3
call
mov
mul
mov
pop
sub
mov
and
jmp
in
pop
mov
add
lret
mov
popf
pop
push
xchg
xchg
lds
pushf
fisubs
cmp
push
xchg
ret
xchg
fists
lcall
int3
push
xchg
mov
adc
sbb
dec
pop
dec
lcall
cmp
dec
inc
test
insl
dec
and
dec
cmp
rorl
xor
xchg
lds
ja
and
fwait
adc
jp
sbb
or
clc
leave
jle
mov
jnp
enter
jbe
repz
push
lcall
leave
aaa
mov
fwait
dec
pop
repnz
pop
test
inc
mov
insl
sar
aaa
js
int3
mov
sub
mov
push
jbe
cltd
xchg
fsts
jmp
pop
aas
mov
or
sub
scas
and
dec
fldl
sub
test
int
ja
adc
xchg
adc
inc
xchg
mov
mov
jb
xor
mov
push
sbb
push
xor
push
xchg
mov
jp
sbb
sub
mov
lods
outsb
movsb
push
stc
mov
mov
fisubrl
int3
ret
add
mov
cmp
sbb
aaa
es
aas
int
sbb
les
ds
call
testl
lret
inc
xorl
mov
and
cmp
jle
ds
dec
jo
inc
dec
lods
rolb
cmp
cwtl
rcr
stc
loopne
imul
aas
popa
shll
ret
xchg
sub
mov
add
xchg
out
xor
cmp
enter
test
mov
ja
js
pop
inc
lea
xor
jge
push
inc
repz
cmp
mov
mulb
addr16
pop
fcoml
mov
mov
pop
and
xlat
push
popf
loope
lcall
push
xlat
push
add
into
sti
in
cmp
push
sub
out
mov
xor
scas
aam
fnsave
das
add
pushf
adc
orb
stos
insl
movsb
addr16
jae
mov
add
imul
jmp
and
jo
sub
aas
sarb
jmp
adc
clc
sbbb
push
hlt
jnp
push
adc
pop
mov
xor
dec
dec
push
push
mov
and
fldl
or
jb
and
push
sbb
imul
stos
jg
mov
lods
test
ret
sub
clc
scas
imul
sarb
lods
mov
int3
push
aas
lock
ret
dec
jg
inc
mov
and
scas
jp
popa
adc
mov
cmp
mov
push
movq
shll
add
xor
xor
insl
or
sbb
ficompl
push
loop
aaa
jl
pop
mov
popa
push
icebp
test
je
insb
pop
push
sbb
and
lret
jae
mov
jg
fcoms
dec
push
mov
std
stos
xchg
xlat
ja
js
mov
cmp
mov
negb
in
inc
fwait
movsl
xchg
outsb
push
adc
xorb
sbbl
cltd
adc
sub
iret
aad
les
leave
dec
ret
inc
cld
lret
xchg
negl
xor
jb
lods
jge
dec
pop
xchg
pop
test
adc
outsl
inc
cli
pop
add
test
enter
jmp
push
cmp
repz
shrb
dec
inc
push
or
je
xor
xchg
pusha
es
aas
mov
lret
pop
push
inc
cli
aas
inc
fisttpl
out
insl
je
adc
jmp
dec
jp
bound
mov
inc
xor
sub
inc
les
sti
pop
aas
ljmp
fwait
adc
test
cli
sahf
sub
stos
cld
mov
loopne
push
enter
mov
mov
cmp
in
outsb
mov
pop
push
lahf
cld
and
xor
mov
inc
fistpl
inc
loopne
repz
lcall
sbbb
mov
xor
scas
int3
mov
sub
movsl
cs
pop
scas
xchg
leave
jnp
jmp
or
das
imul
jnp
mov
mov
lret
fwait
insl
lahf
xchg
ja
call
adc
aam
jbe
adc
mov
sub
out
std
cli
pop
fwait
mov
fstl
mov
inc
cmp
jle
aaa
ret
jb
jne
inc
push
cmp
cmp
mov
sub
mov
jne
pop
pop
ds
outsb
sub
outsl
jb
push
mov
push
shlb
cmp
jl
fildll
xor
jp
mov
sub
shlb
push
lret
cs
lcall
sti
gs
dec
push
imul
cltd
imul
add
les
fsubrl
inc
jecxz
lret
sarl
aad
xor
js
xchg
mov
mov
sub
mov
inc
outsl
inc
xchg
aam
scas
cld
test
jb
fs
xorb
push
inc
xor
jae
add
mov
jns
scas
jp
xchg
sub
inc
jno
fisubrl
cs
notl
adc
adc
popa
imul
adc
shlb
fwait
les
jmp
arpl
dec
adc
adc
into
loope
es
push
push
data16
mov
jmp
sti
mov
aaa
test
add
push
ret
cmp
jp
xor
leave
mov
imul
xlat
movsl
test
xor
sbb
xchg
xchg
addr16
dec
jo
jg
sbb
cmpsl
jmp
ret
nop
lret
inc
adc
pop
movsb
ds
dec
fildl
into
insb
and
mov
fisttpll
dec
sar
das
xchg
ljmp
call
shrl
or
mov
mov
ret
insb
orl
insl
push
cmp
mov
sahf
je
test
jne
and
lds
mov
add
jb
repz
jb
push
rcrl
xor
insb
cs
push
hlt
jo
dec
insb
popf
xchg
jg
idivl
lods
mov
mov
mov
dec
test
sti
pop
jnp
mov
jg
jno
pop
jge
jmp
jns
push
pushf
lcall
in
fcmovb
aas
imul
aaa
push
enter
les
sub
rolb
bound
pop
lods
lahf
and
gs
icebp
mov
push
mov
test
add
xorb
fstpl
ud2
dec
xchg
dec
pop
fcomps
in
out
lods
lahf
sbb
or
jo
adc
adcb
and
push
inc
testb
cs
inc
rcrb
push
mov
mov
adc
jecxz
lds
lea
stos
mov
cmp
cmp
inc
mov
enter
ds
xor
insb
sub
jle
pop
enter
lods
or
pop
das
test
mov
lock
sub
rcll
scas
daa
ret
clc
mov
xor
lods
mov
push
test
adc
iret
mov
imul
cli
add
in
in
out
push
cltd
hlt
pop
cmp
lea
outsl
and
cmp
repz
mov
push
xchg
scas
inc
pop
jb
nop
addb
mov
jmp
mov
mov
mov
push
outsl
mov
mov
cli
orl
push
xor
add
pop
cli
cwtl
mov
fists
mov
mov
xorb
xchg
and
cmp
cmc
ret
add
mov
mov
jle
imul
sti
inc
sub
scas
aad
mov
mov
pop
mov
jo
cmc
sbb
imulb
jl,pt
jl
dec
pop
mov
push
sbb
pop
push
cmp
cs
push
and
pop
adc
jno
add
and
shlb
sbb
fs
loopne
mov
cmp
out
out
xor
jno
xlat
call
ljmpw
mov
imul
mov
movsl
jno
stc
pop
xor
jle
aam
lcall
gs
stos
cld
pop
clc
jo
push
outsl
arpl
adc
popf
ljmp
cs
inc
aas
xchg
inc
loopne
xor
scas
roll
scas
out
cs
call
adc
mov
lock
and
in
dec
mov
cwtl
outsl
push
xor
push
gs
arpl
dec
ja
dec
adc
loope
jl
cmpb
adc
test
bound
fcoml
shrl
aaa
rcrl
mov
sbb
andl
xor
cmp
adc
adc
scas
mov
xor
outsb
mov
sub
pop
daa
lret
jge
icebp
daa
pop
cmp
les
scas
pop
adc
mov
sbb
enter
stos
or
sub
pop
call
aas
mov
rcl
test
popa
jbe
add
and
adc
jbe
add
cmpsb
xor
cmp
lret
dec
data16
mov
addr16
add
test
out
imul
sahf
dec
or
jae
inc
sbb
sub
xchg
xor
jle
push
into
test
lret
in
leave
adc
test
stos
xchg
and
dec
into
lahf
xor
or
mov
xchg
dec
mov
push
das
jge
jns
sbb
addl
fxam
test
mov
pop
cltd
jl
hlt
ret
loope
mov
sub
pop
xchg
pop
push
out
cmc
cmp
in
imul
inc
in
outsb
jmp
fucomi
xor
aaa
xor
movsb
sub
mov
outsl
lret
jo
jns
shl
dec
leave
gs
jecxz
loopne
cmp
mov
mov
cmpsb
out
mov
mov
std
addr16
inc
cmpsb
popf
sbb
sahf
es
inc
mov
jno
lahf
adcb
test
repz
ret
ret
ljmp
enter
aas
xchg
aas
das
shl
pop
je
test
movsb
movsl
lea
rcr
pop
hlt
test
sbb
lock
leave
fucomip
ficompl
mov
push
aaa
mov
lods
imulb
push
mov
cld
jo
pcmpgtb
shrb
cld
mov
or
outsb
and
pop
pop
mov
test
hlt
sbb
jns
test
addr16
pop
imulb
sqrtps
shll
arpl
push
dec
iret
hlt
rcll
add
fwait
lret
and
mov
stos
xchg
enter
push
pop
outsl
and
mov
or
xor
dec
or
popa
inc
push
mov
mov
push
pop
cmc
add
mov
arpl
es
out
jl
mov
cli
mov
add
push
ret
popf
inc
xchg
ss
mov
ljmp
in
push
add
sbb
mov
push
test
mov
mov
or
movb
fs
and
adc
jl
std
in
mov
xor
dec
sbb
adc
insl
adc
clc
cltd
outsl
push
cltd
xor
inc
inc
jl
ja
lods
mov
cmp
and
lds
addb
popa
mov
push
sub
mov
adc
jno
push
or
cmpsl
mov
add
pop
test
shr
sbb
pop
pop
dec
push
sarb
mov
jbe
and
sub
inc
orl
sbb
push
add
xor
mov
adc
clc
adc
adc
push
lea
ds
dec
lock
rcrb
xor
fcoms
inc
comiss
out
dec
add
cmc
ret
sarb
push
add
std
stos
adc
bound
adc
dec
lret
cwtl
cmp
jecxz
fidivl
mov
inc
xorl
jmp
xor
pop
add
popa
adc
or
cmp
jmp
push
cmp
scas
jb
stos
push
mov
push
adc
inc
adc
lcall
mov
mov
push
push
lds
jb
mov
fcoms
into
scas
jp
push
lods
lret
daa
add
mov
pop
or
test
fistps
test
inc
imull
aad
iret
out
sbb
mov
in
dec
sahf
sbb
and
push
daa
test
popa
add
jge
stos
or
push
or
in
mov
xchg
ja
adc
lret
cmp
jnp
sub
jl
push
dec
cmp
mov
movb
add
inc
xchg
cmpsl
cmp
or
jge
push
addr16
jbe
divb
lret
xchg
lock
push
and
fnstsw
mov
xor
cmp
cltd
orb
ret
mov
jle
pop
xor
push
or
jne
popa
aaa
fnstenv
scas
fucom
dec
lea
jo
insl
insb
xchg
out
call
jmp
cltd
leave
movsl
sbb
xlat
repnz
xchg
int
idivl
sub
outsl
loopne
cmc
xor
je
out
into
xchg
or
mov
pop
mov
loope
dec
ja
jp
sub
xchg
clc
or
loopne
adc
push
fstps
fxam
add
enter
sbbb
mov
cmp
stos
mov
inc
mov
ss
or
ds
cmpsl
iret
lock
adc
or
mov
movsl
int3
ja
test
mov
pop
sub
lret
ja,pt
gs
mov
ret
cmp
pop
xchg
punpcklbw
and
pop
xor
jbe
fimuls
inc
push
hlt
adcl
xchg
hlt
cltd
push
sub
pop
rcrb
pop
ficoms
ret
nop
test
lods
das
aad
into
testb
outsl
xlat
fistl
popf
scas
jmp
out
adc
aam
test
sub
jl
sar
cmpsl
js
rcrl
cltd
insb
jbe
and
jge
in
push
sub
rol
xor
stos
cltd
xchg
int3
ss
sbb
daa
data16
mov
movsl
dec
xor
cmp
cmp
inc
loopne
insb
shll
xlat
ss
push
jbe
jmp
mov
inc
sub
int
dec
mov
and
stos
pop
inc
sbb
and
lock
jnp
push
decb
sub
js
aam
sbb
jbe
inc
mov
mov
push
xlat
mov
lahf
pop
push
cmp
fidivrs
movsl
pop
mov
inc
adc
fcomps
es
jo
fidivrs
shll
mov
lahf
je
and
scas
xchg
mov
mov
cmp
mov
pop
push
out
cmpsl
jb
mov
push
rcrb
mov
dec
das
cmpsb
movsl
notl
out
jle
mov
sub
add
ds
scas
ja
sbb
cmp
bound
vpcmpeqb
sbb
sub
movsb
xor
inc
inc
aad
test
push
jns,pn
das
mov
xchg
fidivl
push
cltd
jp
push
xchg
mov
add
sbb
add
mov
mov
cld
insb
insb
stc
xchg
fnstenv
jno
fstpt
jbe
sbb
movsl
mov
add
adc
and
adc
rcrl
mov
pushf
hlt
cmc
rorb
jno
add
outsl
push
pusha
inc
test
leave
imul
cli
sti
add
mov
lds
lods
outsl
pop
inc
movsb
pusha
rcl
daa
xchg
or
inc
pop
push
xchg
push
repz
cld
leave
dec
jnp
sbb
cmpsl
jp
or
or
stc
aas
add
add
int
sub
cmp
and
pop
push
add
iret
loopne
js
push
dec
add
add
and
mov
sar
fwait
or
cmpsl
imul
aam
pop
subl
jg
fidivs
add
mov
xchg
jnp
repz
movsl
je
repnz
imul
pop
or
les
pop
mov
jecxz
and
push
stc
aaa
dec
out
es
shl
jne
pop
push
pop
pushf
loop
lret
xchg
mov
xchg
adc
add
std
xor
test
hlt
mov
dec
daa
mov
aas
icebp
xchg
call
sbbl
ljmp
bound
lods
push
adc
pop
repnz
pusha
jmp
in
or
test
insb
repz
push
xchg
lods
out
sub
add
jnp
mov
insb
fst
pop
pop
fisubrl
sub
test
imul
jecxz
cmp
inc
lods
adc
stos
pop
xor
adcl
mov
adcl
pop
lods
mov
fnstenv
push
daa
pop
mov
cmpsb
sarl
sub
arpl
insb
aad
dec
xor
or
lret
adc
scas
cmp
or
and
daa
mov
and
dec
addr16
xor
adc
cmp
ret
dec
mov
sti
xchg
loop
sarb
cmp
pusha
and
push
push
pop
leave
or
xchg
sbb
pop
sbb
sub
ret
add
cmp
in
pop
xor
pushl
sub
mov
inc
flds
shll
dec
fdivrp
inc
push
pop
nop
jg
sbb
or
sbb
daa
push
dec
daa
adc
adc
int3
shrl
mov
out
ret
jae
push
adc
adc
fiadds
nop
sub
fsubrl
fmulp
sarb
in
test
push
mov
iret
sbb
pop
pop
ja
mov
fidivrs
jmp
add
cmp
inc
push
jle
push
loope
jo
jnp
mov
xchg
mov
or
cmp
adc
mov
mov
clc
or
push
sbb
and
jg
loopne
hlt
and
insb
addr16
cltd
loopne
lret
or
push
add
scas
or
dec
call
je
ret
fwait
out
mov
ja
movsb
mov
gs
test
or
jmp
insl
faddl
push
icebp
ss
sahf
jno
lret
in
les
out
push
xchg
aad
jmp
pop
hlt
lods
addr16
aad
jns
and
test
sub
xlat
push
mov
mov
in
and
push
xor
sbb
mov
push
add
dec
ret
push
adc
cli
testb
gs
xchg
mov
repz
inc
pop
xchg
sbb
ja,pt
cltd
inc
rclb
lock
lahf
loopne
mov
mov
insb
pop
lods
fsubrp
imul
mov
sub
or
dec
mov
testl
ret
sub
inc
xchg
cmp
call
fs
call
fwait
xchg
in
cltd
mov
addb
mov
push
dec
mov
pop
popf
mov
pop
mov
lds
mov
xchg
cwtl
xchg
mov
add
mov
mov
mov
sub
jns
test
divl
movsl
ss
pop
fistpll
pop
enter
fmul
mov
outsb
xchg
shlb
sti
cmp
fdivl
lea
mov
stc
inc
inc
mov
push
push
dec
push
fcompl
mov
test
jno
pop
nop
insl
cs
outsb
lret
adc
dec
or
pop
or
sub
out
sbb
hlt
mov
lds
adc
lods
arpl
dec
fdivs
sbb
pop
sbb
lret
in
jle
add
xor
cmpb
pop
and
sbb
sbb
pop
insb
push
and
addr16
dec
or
mov
bound
inc
jo
cmp
push
push
test
adc
bswap
mov
or
es
cmpsb
fstpl
push
cli
mov
fisubs
loopne
shrl
jne
int
es
mov
lret
push
pop
out
mov
orl
jl
je
icebp
cmpsl
sar
sub
rcl
sub
dec
add
jns
es
inc
data16
test
rcll
rclb
or
nop
pop
daa
mov
inc
loopne
testb
xchg
lcall
movsl
roll
sub
cmp
add
test
fwait
les
enter
mov
cmp
in
mov
cwtl
into
aas
xor
movsl
mov
out
and
push
sub
notl
enter
sbb
in
pop
and
and
mov
cmc
or
leave
push
cld
andl
and
jb
and
pusha
adc
negb
cmp
shlb
enter
mov
insb
mov
mulb
repz
mov
jge
imul
int3
ljmp
adc
adc
jp
fiaddl
leave
bound
dec
insb
mov
push
push
testl
xor
pop
inc
sub
xor
cmpsl
xor
dec
push
mov
pop
psraw
scas
mov
mov
xchg
dec
aaa
out
arpl
movsl
imulb
mov
sbb
iret
push
xchg
je
pushf
mov
inc
or
iret
mov
fwait
subl
cwtl
dec
rorl
scas
jb
jp
mov
popf
jno
and
cmp
inc
pop
mov
je
and
pop
sti
pop
adc
or
lahf
xchg
cmpsb
add
in
push
addr16
adc
adc
sbb
xchg
push
dec
pushf
test
test
aad
jae
fisttpll
sub
adc
das
in
in
inc
pushf
aad
pop
mov
jb
mov
mov
addr16
push
stos
test
and
pop
call
adc
adcl
mov
daa
or
sub
push
pushl
pop
pop
loope
ret
sahf
push
sbb
jo
pop
cs
sbb
jo
dec
imul
add
mov
mov
mov
repnz
pop
fldl
cmc
dec
out
lcall
fcmovnbe
into
adc
xchg
pusha
in
rclb
push
repnz
mov
iret
jg
or
iret
push
aam
push
iret
jge
dec
ss
in
aam
push
adc
xor
mov
outsb
or
xor
push
lods
sbb
cli
push
pushl
lret
call
sbb
cmp
pop
mov
lret
adc
iret
fucomi
repnz
or
popf
cmp
in
mov
xchg
add
inc
test
mov
es
icebp
test
push
aam
mov
lea
jbe
push
push
imul
enter
adc
xlat
cmpsb
lds
js
add
into
mov
dec
add
pop
add
dec
sub
jecxz
out
mov
xlat
stos
add
out
cltd
pushf
test
push
enter
inc
jb
jg
cmp
dec
dec
outsl
test
and
mov
adcl
sbb
fsub
sbb
cli
pop
jecxz
sbb
test
push
pop
xor
jmp
frstor
adcl
cmpl
jbe
mov
pop
jg
xchg
out
pusha
add
mov
adc
enter
sub
xchg
dec
gs
mov
and
int3
mov
shlb
cmpsl
rcl
pop
das
pusha
jno
lret
and
dec
test
adc
adc
imul
mov
sub
xor
je
aas
movsb
sbb
push
ja
pop
mov
aam
pop
icebp
push
cmc
test
sahf
pop
outsb
and
ja
popa
mov
rdpmc
aaa
repz
inc
hlt
sbb
cltd
mov
inc
cli
mov
mov
mull
xor
stos
xor
or
insb
fimuls
out
cmpsl
test
and
adc
jo
stos
dec
outsl
lods
dec
adc
fisubl
int3
add
ljmp
out
pop
dec
and
add
inc
pop
mov
popa
imul
data16
or
out
sbb
loop
sub
adc
test
adc
movl
sub
push
aad
in
add
dec
dec
xchg
out
mov
sbb
sbb
sub
jmp
pop
or
sti
std
cmp
dec
pop
inc
mov
mov
or
pop
xchg
jle
pop
sbb
sub
dec
lret
xchg
aam
or
pop
mov
hlt
and
loop
dec
push
cs
nop
dec
rep
mov
idivl
fstpt
negl
test
inc
inc
mov
and
stos
rclb
movsb
sub
mov
add
mov
imul
dec
dec
in
adc
ja
rclb
int3
cmpsb
inc
xchg
sbb
cmp
lods
cmp
sbb
and
mov
add
pop
mov
scas
xchg
sti
clc
jge
push
mov
fcmovbe
hlt
or
mov
ds
push
das
test
and
pop
adc
jl
push
out
mov
dec
out
inc
push
fbld
cltd
std
repnz
test
adc
push
out
jecxz
imul
add
mov
dec
pop
adc
mov
js
fsubl
or
in
sbb
leave
or
popf
mov
xorl
push
in
cmp
mov
clc
adc
adcb
test
adc
jae
gs
mov
insl
xchg
inc
pop
add
jl,pt
push
or
cli
stc
mov
and
mov
jle
daa
adc
push
mov
imul
sbb
mov
dec
loop
fcmovnbe
and
setp
cs
hlt
aad
shlb
inc
dec
daa
test
daa
shlb
fsub
sti
pop
xchg
jne
out
and
inc
inc
repnz
popa
mov
pop
adc
jno
xor
fnstcw
mov
pop
pusha
cmpsb
fistpll
push
jmp
cmp
pop
scas
int
lea
push
mov
popa
jbe
jae
repnz
inc
sbb
leave
sub
inc
push
fstpt
cmpl
out
pop
iret
cli
lcall
outsb
and
dec
xor
and
mov
jno
mov
clc
push
shrb
sbb
lretw
cmc
or
jecxz
cltd
or
in
fiadds
ss
mov
inc
outsb
in
lret
pop
in
mov
cmp
jl
std
mov
loopne
in
pop
ds
testl
shrl
cwtl
int
lret
or
in
inc
in
addl
aaa
jmp
cmc
sbb
jmp
out
xlat
jecxz
imul
fsubl
std
test
leave
adc
xor
dec
mov
popf
mov
mov
inc
bound
imul
or
push
fdivrl
fcoml
sbb
pushf
cmp
inc
xor
stc
push
lods
lods
out
pop
lock
aas
jp
cmpsl
repz
lock
xchg
cltd
jmp
sbb
jge
add
mov
imul
lods
add
jmp
dec
jmp
sti
sahf
xchg
xchg
sti
mov
or
push
cli
data16
mov
xlat
mov
pop
lret
xchg
cmp
les
out
inc
sti
xchg
mov
loope
out
mov
pop
and
adc
push
nop
ret
push
hlt
test
push
les
dec
or
ret
push
cmp
aas
and
mull
sub
es
cmp
inc
popa
movsl
push
lcall
cmp
pop
mov
fadds
out
xchg
fwait
push
ds
pop
lea
pop
xor
sahf
stos
xor
mov
outsb
rcr
loop
pop
fs
xchg
in
cwtl
mov
rcrl
sbb
out
adc
sub
jns
nop
xchg
push
cmp
shll
out
pop
repnz
mov
dec
or
jmp
ficompl
sbb
dec
add
mov
mov
addr16
imul
cmpsl
push
repz
aad
in
cmp
insl
sbb
rcl
sub
sahf
xchg
cmc
dec
mov
fisubl
ja
jnp
lea
mov
mov
sahf
insb
in
clc
sub
jb
jns
cld
insl
add
mov
mov
pop
in
pop
or
fmul
cmp
sub
movsb
mov
int3
sub
enter
clc
cltd
arpl
mov
cmp
xchg
lods
or
pop
xchg
out
inc
stos
fbstp
in
or
jns
mov
and
je
mov
ljmp
ljmp
cmp
xor
mov
cmp
cwtl
xchg
pop
inc
dec
dec
xchg
xor
lea
andb
test
xchg
cmpsb
add
mov
out
xchg
int
sub
ljmp
inc
xchg
int
xor
pop
adc
inc
dec
mov
push
test
sub
xor
jle
shrl
push
cmp
fnstcw
js
mov
addr16
roll
jp
or
adc
mov
fistl
cmpsb
daa
lods
sub
hlt
sbb
add
xchg
inc
fwait
push
or
mov
int
add
sbb
je
pop
cmpsb
add
enter
test
or
out
fnstsw
test
adc
jnp
movsl
jge
aam
fdivl
and
inc
cwtl
mov
jmp
fcmovnbe
nop
ss
cmp
mov
jg
into
imul
lret
sub
ljmp
jae
push
fnsave
cmc
add
aam
mov
aam
cltd
xchg
shl
xor
cli
stos
push
testl
arpl
mov
mov
xlat
stc
imul
out
lods
repnz
punpckhdq
cwtl
lahf
daa
push
dec
ss
mov
mov
sbb
or
popf
fisubrs
jbe
scas
or
xchg
mov
jecxz
stos
jecxz
fsubrs
pop
stos
pop
in
push
mov
cmpsb
or
mov
pushf
xor
loop
shll
mov
cmpsb
xor
pusha
in
cwtl
or
sub
fisttpl
xor
test
or
or
adc
mov
movsb
fistl
test
imul
or
push
xchg
fwait
dec
and
cltd
in
aas
test
push
rolb
xchg
cmp
lods
test
or
inc
addl
push
xchg
std
aas
ds
enter
pop
out
sub
lods
pop
pop
fsubs
bound
cs
adc
jb
pop
and
jg
and
pop
movsb
mov
movsb
shll
loop
add
daa
sbb
inc
mov
sti
fistl
xor
add
and
ja
mov
xchg
mov
aad
mov
out
xor
jl
mov
idivl
cmp
jno
in
sub
xchg
mov
sub
jmp
sbb
pop
mov
sbb
mov
dec
ja
or
dec
sbb
imul
jne
shll
fcmovnu
ja
push
sub
loop
xchg
cli
aas
lods
std
adc
jg
das
mov
sbb
lea
jbe
stos
lret
cwtl
or
jmp
int
cmp
out
inc
inc
dec
fnsave
rorb
pop
adc
and
lock
push
and
pop
ret
aaa
ja
mov
popf
xor
mov
or
aaa
stc
add
jecxz
push
push
inc
mov
or
rcll
pusha
xchg
fwait
outsl
pushf
aas
push
out
aam
xchg
sbb
loopne
inc
scas
adc
push
mov
popa
negb
xchg
in
fstps
mov
mov
js
xchg
bound
mov
xor
sahf
enter
pop
loop
outsb
add
pushf
mov
faddl
lcall
in
insl
inc
fstl
aad
dec
or
cltd
push
ret
std
mov
sub
sbb
cmp
test
lret
mov
push
out
sbb
jo
fwait
cmp
pop
out
xchg
int3
leave
sbb
jecxz
lds
notb
sti
sbb
sub
call
scas
xchg
nop
test
lods
pop
rorb
dec
jbe
mov
pop
cmc
jnp
repnz
inc
mov
lcall
in
inc
mov
pop
ret
adc
test
ret
sbb
incb
mov
fprem
jno
inc
adc
jmp
dec
add
arpl
push
shl
sbb
jbe
sub
movsl
mov
dec
jmp
in
or
xor
mov
sbb
ret
jmp
or
dec
jge
rorl
xor
mov
fistl
fisubrs
inc
and
mov
in
outsb
pop
jo
ret
rorb
hlt
dec
pop
jae
xchg
enter
int
pop
in
jp
mov
dec
xchg
rolb
in
cmp
mov
outsl
pushf
jns
ljmp
stos
adc
push
ret
icebp
rcll
fisubrl
cmp
cli
sbb
test
pop
lds
jnp
adc
xchg
popa
movsb
lret
daa
lahf
ror
shrl
ret
adc
stos
pusha
push
or
push
mov
xchg
jge
in
lods
adc
insb
test
pop
jmp
sub
popa
out
pop
sahf
mov
pushf
xchg
cmp
fwait
and
cmpsb
dec
lcall
icebp
fidivl
or
adc
jecxz
lret
jp
mov
mov
fsubrs
mov
cmp
lock
popa
inc
dec
pop
lds
fdivrp
cwtl
lods
add
gs
insb
mov
sbb
or
pop
cli
out
aaa
imul
and
andl
cmpsb
insl
dec
cmp
add
cmp
dec
adc
or
stos
adc
adc
test
insl
sub
gs
sub
xchg
data16
push
fst
shlb
push
loopne
out
dec
push
filds
lods
clc
cmp
jo
repnz
fildl
aaa
add
inc
lods
xor
in
xlat
mov
sub
xchg
adc
adc
test
js
loope
and
dec
scas
fsts
or
popa
dec
sti
xorb
ss
leave
cli
pop
scas
jmp
mov
cld
inc
or
rclb
cmpsl
les
mov
out
xchg
lds
mov
dec
lds
mov
push
mov
jg
xlat
pop
push
sub
setle
daa
cs
fildl
mov
dec
and
in
std
fcmovnu
ljmp
jle
or
fsubrp
movsb
test
push
mov
push
lcall
sub
fwait
iret
rclb
pusha
testl
popa
in
icebp
inc
xchg
and
mov
fs
aaa
sbb
aaa
fcoml
aam
inc
cmpsb
mov
dec
inc
movsl
adc
test
push
fistl
add
pop
lock
scas
sub
push
int
sbb
sbb
add
ljmp
test
jns
cmp
in
int3
sbb
test
aas
mov
das
pusha
nop
dec
xor
add
std
gs
push
lret
cmp
into
pop
add
xor
mov
and
movsl
sbb
mov
mov
das
lods
loopne
hlt
es
cmp
or
into
push
jmp
lret
mov
xchg
idivl
sbb
mov
cmp
movsb
enter
inc
notb
inc
lret
lret
jns
sub
cmpsb
or
aaa
jo
shll
xchg
lea
cwtl
lret
stc
fwait
popa
jnp
sub
mov
loope
sbb
mov
add
pop
cs
out
mov
mov
jp
in
cmp
cwtl
test
sub
out
bound
mov
xor
cltd
out
pop
in
add
mov
jb
sti
les
flds
pop
dec
jns
xor
jae
out
scas
int3
inc
mov
sub
fcoms
inc
test
pop
jecxz
xchg
xor
lret
xchg
sub
cmp
lcall
dec
roll
push
subl
push
bnd
insl
das
push
int
mov
cmp
fcmovnu
dec
out
mov
out
stos
dec
arpl
pusha
mov
mov
cld
rcr
mov
mov
dec
sub
sbb
cmp
jns
ds
addr16
push
lcall
ss
loopne
enter
or
js
daa
pop
and
pop
mov
inc
cwtl
xchg
inc
stos
jns
stos
stos
xchg
and
adc
push
push
pushw
dec
sub
pop
xchg
insb
mov
pop
iret
cmc
mov
inc
aad
mov
dec
mov
out
nop
xchg
pushf
subb
aas
cs
fsubs
sub
xchg
jecxz
mov
push
add
dec
inc
sub
repz
popa
ficomps
lds
nop
in
decl
or
mov
lods
aas
scas
test
pop
es
in
rclb
pop
inc
xchg
inc
into
pop
test
and
test
imul
sarl
push
aaa
scas
aaa
cwtl
mov
inc
xchg
cwtl
mov
mov
inc
addr16
repz
mov
pop
pop
xor
ret
jg
gs
addr16
xchg
js
push
or
mov
add
fxch
aad
test
testl
sub
lcall
jb
sub
lods
mov
lods
jne
mov
rcll
in
insl
or
pop
stos
insl
btc
cli
sti
lods
pop
stos
adc
add
ja
or
in
xchg
adc
call
add
loop
cmpsl
dec
out
or
loope,pt
insl
cmpsb
stos
pop
lahf
xor
xchg
pop
inc
sbb
in
ret
jae
call
lds
and
in
sub
ss
sbb
dec
imul
fbstp
inc
push
pop
test
mov
hlt
stos
std
jae
mov
test
fdiv
or
popa
cltd
sti
into
or
pushf
push
pop
mov
and
ret
push
or
sahf
addr16
mov
leave
dec
rcrb
xor
enter
out
jge
sub
ficoml
xchg
mov
mov
mov
daa
xchg
test
mov
cmp
fmuls
arpl
push
ja
mov
and
pop
adc
clc
in
or
pop
bound
aas
imul
push
lahf
pusha
xchg
xchg
cwtl
mov
orl
push
sbb
popa
pop
pop
scas
cli
ljmp
sbb
pop
fstl
std
int
lcall
dec
mov
fists
dec
adc
pop
xor
insl
call
dec
push
aaa
fnstcw
mov
pop
jge
jo
ds
cmpsl
cmp
jle
mov
xchg
cs
or
xor
addr16
arpl
pusha
repz
jle
mov
xor
adc
push
sbbb
fcoml
dec
inc
loope
push
adc
ret
popf
rolb
inc
popf
mov
mov
and
insb
addr16
inc
stos
push
push
rcrl
aas
mov
daa
imul
inc
stos
sub
jb
outsl
xor
xlat
push
les
fcoml
mov
imul
cltd
dec
rcrl
mov
jl
rorl
cmpsl
divb
nop
inc
pop
inc
lahf
lock
enter
arpl
jae
out
cmp
jnp
cli
arpl
push
popa
dec
pushf
ret
mov
sbb
inc
cmp
cmpsl
in
push
pop
dec
inc
mov
into
imul
fwait
imul
or
or
clc
cmpsb
xor
or
sbbl
sbb
test
std
push
ret
inc
xor
xchg
out
dec
push
sbb
ja
inc
mov
cli
xor
movb
fs
pusha
insl
das
jecxz
cwtl
call
mov
or
push
fstps
xchg
jo
lock
cld
lds
stos
pop
cmc
xchg
test
pop
aas
and
and
in
lret
in
push
sbbb
mov
jmp
inc
das
pop
pop
fnstcw
push
out
ret
adc
mov
cmpb
sbb
inc
push
nop
out
mov
dec
sbb
pop
fs
cmpsb
cmp
adc
sti
mov
bnd
cli
jmp
jns
adc
xchg
into
stos
cmp
adc
arpl
push
nop
xor
xor
cmp
je
les
cmp
les
jb
lret
mov
movsb
inc
jnp
xchg
xor
aad
out
fdivrl
lock
scas
filds
sbb
cwtl
test
in
mov
mov
int
jne
or
popa
dec
add
cli
enter
mov
mov
push
js
ret
and
push
push
jne
dec
jg
data16
jns
fstl
and
adc
dec
in
fistps
not
xchg
sbb
das
dec
push
stos
imull
aaa
repz
adc
jp
jb
cmovnp
test
inc
ficoms
lods
gs
cwtl
sti
adc
mov
out
mov
add
ja
push
xchg
cmp
sub
insb
call
dec
cmp
lods
inc
jo
jb
std
dec
test
xchg
xchg
push
popa
ret
out
cmpsb
mov
pusha
cmpsl
fiadds
lahf
xor
add
or
xor
push
pop
inc
incl
scas
aad
push
enter
ss
out
or
pop
ljmp
jp
rol
jb
pop
aam
mov
hlt
push
add
int
mov
les
iret
in
adc
pop
mov
inc
pop
shll
imul
fildll
push
push
scas
sar
fwait
mov
insb
dec
push
push
and
pop
xchg
leave
xor
push
or
int3
inc
jle
cmp
fstp
movsl
iret
sbb
test
shrb
icebp
cmp
mov
sub
cs
sbb
push
xor
mov
fs
jle
mov
ljmp
fwait
jmp
xlat
ds
xor
sub
xchg
sub
xor
out
add
loopne
xchg
push
mov
rol
repz
or
push
out
imul
pop
mov
and
stc
jp
xlat
lea
loope
call
push
fmul
lds
js
loopne
xchg
cmp
stc
std
pop
sbb
mov
nop
dec
lods
dec
dec
leave
jl
adc
mov
lea
aaa
sub
inc
icebp
popa
push
pop
or
je
add
mov
xor
pushf
and
cli
xor
jle
jo
jle
mov
das
test
dec
mov
fprem1
les
mov
imul
je
out
xor
mov
outsl
add
dec
and
fstpt
mov
add
imul
int3
std
daa
fs
in
not
pop
andb
mov
test
mov
cwtl
mov
xchg
mov
mov
cltd
pop
pushf
jae
das
dec
jbe
cwtl
cmpsl
or
jne
and
pop
pushf
fs
jns
in
inc
jge
inc
and
enter
out
scas
cmp
sbb
cmp
xor
xor
cmpsb
push
push
mov
lahf
int
mov
std
cmp
sarl
xor
mov
adc
xor
and
out
stos
cmp
ja
call
aas
cli
or
sbb
pop
xchg
xor
cmp
sub
mov
ret
inc
scas
in
mov
decl
lods
jnp
mov
jne
ret
mov
pop
pop
cmpsl
cli
shlb
jle
jmp
dec
and
cmp
pop
mov
adc
sub
pop
in
xchg
mov
xchg
sar
jg
sub
sbb
cmpsl
aam
mov
orl
scas
pushf
adc
or
mov
outsb
imul
or
push
cmpsl
rcrb
xchg
xchg
and
pushf
mov
shll
daa
jmp
mov
addr16
repz
mov
fcmovbe
outsl
test
sub
push
or
jnp
in
dec
cmp
fadd
sbb
pop
xor
int3
dec
sub
nop
imul
cmp
insb
fs
ljmp
insb
scas
mov
fwait
jge
cmp
hlt
out
test
bound
loop
pop
mov
xchg
inc
mov
sahf
pop
inc
or
cmp
fimuls
test
icebp
push
push
scas
mov
xchg
mov
push
inc
ja
and
jae
mov
push
in
jne
mov
popa
outsl
dec
jmp
xlat
loope
adc
fwait
iret
sbbb
pop
xchg
inc
adc
scas
xor
xor
hlt
jge
aam
xor
jb
xchg
ds
fistps
test
or
lock
xor
mov
mov
push
mov
gs
adc
jecxz
stc
cmp
sbb
cmpsl
pop
mov
lret
test
lret
xor
sbb
aam
jns
flds
out
js
mov
cld
sbb
pop
clc
call
test
inc
mov
pop
ficompl
adc
popa
pop
dec
adc
jne
adc
pand
cmc
xor
leave
jle
push
jecxz
cmp
lods
int
mov
sbb
cmpsb
sbb
out
scas
sub
in
into
test
sbb
and
popf
jg
sti
add
dec
ljmp
adc
pop
xchg
test
repnz
mov
dec
testb
xor
aas
pop
loopne
dec
and
inc
leave
aas
imul
and
cli
out
pop
shl
fimuls
test
int
mov
movsl
cmpb
xchg
inc
stos
jo
pop
mov
shll
pusha
shrl
icebp
mov
jge
insb
call
inc
push
cltd
adc
dec
jnp
aam
push
ds
sbb
jb
cmp
cwtl
fwait
cmp
scas
mov
xchg
scas
bound
and
mov
int
pusha
movsl
in
cmp
cltd
scas
pop
cwtd
mov
movsb
into
adc
repz
insl
popf
adc
dec
in
dec
mov
sahf
mov
xchg
pop
and
add
lret
mov
sbb
int
or
add
jmp
xchg
pop
nop
lds
out
dec
or
cltd
in
adc
cli
out
xchg
push
push
loope
and
add
and
mov
cli
xchg
jge
cmp
int
dec
addb
lret
aad
push
incl
aas
mov
imul
int3
loopew
mov
adc
pusha
add
fistl
pop
lods
add
mov
push
stc
cmp
mov
imul
mov
lahf
cmc
hlt
xor
arpl
mov
jmp
pop
xchg
js
sti
in
pop
lds
or
add
mov
js
rorb
and
mov
and
popa
xor
fists
push
daa
popf
pop
mov
pop
loopne
aas
pop
les
scas
out
push
int3
in
mov
adc
lret
cmpsl
idivb
vcvtsd2si
in
inc
lcall
mov
mov
mov
arpl
mov
adc
mov
dec
mov
cmpb
bound
pop
aad
pop
jmp
lods
cmp
das
addb
adc
lret
dec
mov
lods
lods
mov
pop
jmp
cltd
and
sbb
out
cmp
loope
cmp
aam
push
xor
ja
mov
es
xor
hlt
cmp
cmc
pop
cmpsb
loopne
ds
cmp
idivl
adc
inc
jg
test
movsl
int
lret
cmp
mov
gs
call
divl
xor
enter
lds
mov
mov
add
cmp
mov
jle
mov
push
rcrb
dec
sub
scas
stos
insl
xchg
aaa
dec
mov
xchg
mov
mov
push
adc
cmpsb
jno
lretw
movsb
xchg
fisubl
push
stos
mov
filds
xor
or
lods
or
cmp
mov
mov
cmp
cmp
movsl
movsb
cs
rcrb
sbb
push
push
dec
enter
mov
pop
inc
dec
jne
cmp
add
mov
repz
cmp
iret
enter
push
push
cld
ljmp
cli
jo
out
sahf
jge
test
jge
push
cmp
jno
pop
mov
pusha
loope
outsl
divb
cmp
ljmp
push
data16
pop
inc
mov
add
jno
psubb
int3
int3
fnstsw
daa
xor
add
aam
xlat
jne
jge
fistpl
stos
push
add
cmp
enter
xor
test
push
or
in
push
mov
xchg
jb
adc
daa
jle
jl
push
out
rolb
pop
scas
xchg
adc
push
lds
adc
test
lea
mov
daa
dec
or
adc
jg
rclb
subb
or
jmp
pop
push
ss
push
insb
xchg
pusha
in
dec
mov
fcoms
sbb
jmp
scas
cmp
sub
jp
xor
jbe
dec
mov
ja
push
daa
rolb
aad
cmpl
sbb
fs
or
lds
cld
bound
sub
mov
das
je
stos
cmp
cld
ljmp
add
adc
in
cmp
inc
jns
cmp
mov
jle
jl
in
mov
es
sbb
mov
xor
flds
jmp
mov
pop
jae
or
in
sub
cld
sti
mov
mov
iret
out
in
mov
cli
int3
xor
push
mov
popf
add
popa
push
daa
hlt
mov
and
xchg
call
movsl
push
imul
xchg
mov
inc
das
mov
mov
xor
add
je
loop
and
jp
or
jno
adc
mov
pop
stc
jp
push
dec
scas
rcrb
repz
xchg
inc
arpl
fnstenv
or
bound
xor
adc
mov
jle
cld
andl
clc
outsb
jp
mov
sahf
in
call
cmpsl
and
out
inc
mov
out
mov
or
inc
or
and
outsl
out
fidivl
mov
or
bound
mov
pop
sub
mov
out
shrl
loope
movsl
pushf
inc
xorl
stos
aas
iret
pop
mov
clc
mov
hlt
xchg
push
adc
cmpsl
jg
cmc
jle
jns
nop
les
aad
inc
jno
mov
xchg
sahf
scas
xor
test
pop
aad
pop
fisttps
mov
add
mov
in
push
and
sub
aad
adc
add
fists
jns
movsb
sti
mov
inc
cmp
sub
dec
xor
mov
outsl
push
jno
movsl
loop
add
les
movsl
decb
andb
les
cmpsl
fs
dec
dec
int3
pop
and
sbb
add
cmp
pop
sub
mov
mov
je
inc
imul
pop
out
pushf
cmp
adc
sbb
add
mov
js
dec
lret
test
cmp
sub
jl
mov
xchg
test
and
cmpl
ss
cli
sub
jl
add
mov
inc
lret
or
cmp
push
push
gs
sbb
mov
push
imull
sbb
neg
int
test
arpl
sbb
jb
push
or
pop
inc
xchg
push
xchg
and
xchg
fs
dec
cmp
push
lea
jp
adc
addb
es
out
sbb
xchg
hlt
fsubrl
loope
out
test
jle
or
mov
test
push
jbe
test
jp
mull
fistpll
cmp
in
jg
add
roll
pop
dec
sub
xlat
mov
fstl
arpl
enter
cli
int3
jl
mov
das
fiadds
adc
dec
insl
clc
leave
pushf
test
pop
popa
mov
cld
adc
add
pop
jle
adc
in
lcall
adc
xor
add
repz
lcall
sub
cli
rorb
inc
aam
inc
mov
inc
mov
ja
outsb
int3
movlps
loopne
adc
xor
cmpsb
or
add
adc
xchg
pop
test
ficomps
insl
hlt
mov
dec
push
and
into
fdivr
test
adc
ljmp
enter
pop
es
pop
and
data16
inc
lret
push
add
divb
enter
int
mov
jmp
or
ret
cmc
xchg
pavgw
lock
fldl
in
jecxz
daa
cmpsb
movsl
push
sbb
jbe
mov
mov
fs
icebp
push
xor
dec
push
imul
sub
aam
mov
mov
shr
mov
xor
xchg
and
dec
mov
cmp
inc
fists
mov
fimull
dec
lret
lcall
rcr
fwait
stos
test
jg
imul
mov
adc
repz
in
dec
dec
add
aad
inc
xor
dec
lods
orl
ljmp
mov
imul
movsb
lods
ret
lcall
and
push
das
xchg
das
mov
fidivrl
scas
xor
or
outsl
add
daa
sbb
inc
pop
xchg
sub
test
push
outsb
sub
out
sub
test
fcompl
lods
inc
sti
and
xor
pop
xor
arpl
sub
xchg
jle
sbb
js
gs
pop
test
pushf
ret
shlb
sahf
js
jae
and
sub
test
add
je
in
mov
cwtl
stos
adc
outsl
inc
dec
push
sub
xor
jecxz
mov
addr16
pop
push
mov
lahf
mov
dec
or
dec
scas
movsb
das
movsl
pcmpeqw
insb
cmpsl
pushf
rcll
imul
mov
into
stc
xchg
lods
jp
in
rcrb
xor
or
dec
aas
ja
bound
imul
in
pop
in
in
sbb
or
sub
push
clc
or
mov
int3
mov
lock
xchg
out
pop
testl
out
fmuls
dec
fsts
orl
push
lcall
xlat
push
ds
sbb
rorb
jmp
mov
stos
or
mov
lcall
ret
aam
insl
inc
lret
rcll
dec
es
lret
flds
push
clc
or
xor
mov
js
dec
and
lds
rclb
push
hlt
stos
or
push
aam
xlat
scas
mov
cltd
movsb
mov
icebp
cmpsl
pop
sbb
xchg
mov
dec
aad
iret
sbb
push
in
jno
add
and
imul
dec
ret
lds
pop
xor
cmpl
push
mov
inc
ficoms
sti
pop
pop
ficompl
in
in
popf
and
pop
xchg
push
cld
aaa
sub
cmp
movsb
inc
push
test
adc
adc
testl
cmpsl
sahf
xchg
scas
sarb
in
lahf
mov
stos
xchg
push
sbb
data16
add
dec
sbb
ret
lahf
lds
xchg
pop
mov
add
cmp
push
xchg
imul
and
cmp
xor
das
test
or
cmpsl
jmp
and
xchg
ret
roll
xor
jb
and
sbb
lret
xchg
jle
pop
lods
dec
enter
dec
stc
in
adc
add
js
adc
dec
rcll
xor
mov
push
test
push
ljmp
xchg
cli
mov
arpl
loope
incl
mov
xor
leave
xchg
ja
or
jp
jl
sub
jp
mov
mov
icebp
push
rclb
inc
sbb
int
call
cmp
data16
pop
leave
inc
rep
cmp
add
mov
pushf
adc
insb
in
or
fs
iret
mov
or
faddl
push
clc
lods
sub
lret
rcrl
mull
dec
mov
pop
sti
sub
jb
mov
popa
sbb
test
hlt
push
xor
lds
or
push
add
mov
push
push
push
pop
fsts
or
push
ffree
lahf
add
sahf
lea
mov
sbb
xchg
xor
movsl
dec
ss
in
movsl
subb
js
out
sbb
js
fisubrs
cmpsl
outsb
xor
mov
stos
int3
minps
or
in
push
push
xchg
into
mov
mov
add
mov
ret
adc
jnp
inc
dec
scas
jle
adc
gs
ret
enter
das
in
stc
cmp
int
inc
enter
jle
push
mov
insl
cwtl
out
dec
aaa
jnp
cli
xor
jbe
lods
popf
fiadds
pop
jge
lods
out
fldl
daa
mov
sbbb
ljmp
and
xlat
jne
pop
in
imul
jnp
gs
push
mov
jo
dec
xchg
jg
sbb
int
out
fisubrl
mov
bswap
insb
ss
or
outsb
shrl
inc
out
aam
pop
push
jnp
loop
mov
sbb
xchg
sbb
loope
mov
test
sahf
xlat
dec
cs
lock
outsb
or
jno
inc
sub
fildll
dec
incl
mov
js
pop
and
inc
adc
enter
shlb
icebp
mov
inc
ds
cmp
repnz
lret
pushf
or
lods
pop
or
mov
push
mov
push
in
push
loopne
push
sbb
inc
mov
mov
addr16
pop
in
push
mov
jae
sbb
mov
jecxz
push
sbb
push
scas
fwait
mov
jb
pop
push
dec
cmp
dec
push
push
push
fwait
mov
aas
in
mov
xchg
shr
sahf
mov
gs
fdivrl
je
js
shrl
push
jnp
arpl
or
lret
pop
pop
jb
stos
push
rcrb
test
rcll
adc
jl
aas
mov
inc
dec
adc
and
or
pop
out
cltd
jl
add
adc
xchg
fmuls
fsubr
add
jae
jl
and
and
fsubr
mov
sub
int
lret
or
cmp
pop
xchg
imul
loopne
enter
cmp
jecxz
incb
mov
in
cmp
repnz
jecxz
add
test
jnp
sti
pop
and
ret
push
ret
or
push
pop
and
fs
mov
pop
mov
incb
inc
sbb
rclb
sub
mov
jno
leave
loopne
test
cmpsl
lret
xorl
mov
fnstenv
cmp
clc
mov
iret
inc
inc
jbe
lock
and
gs
sbb
jle
jne
fwait
je
push
and
pop
sub
int3
inc
lods
cmpsl
aaa
mov
push
js
add
test
inc
mov
fsubrl
jl
loop
pop
outsl
dec
scas
push
xchg
sbb
dec
loope
stc
sbb
jne
xor
ljmp
sbb
andb
pop
cwtl
cld
mov
adc
lods
and
xchg
sub
outsb
stos
rorb
xchg
xor
cmp
outsl
mov
xchg
inc
add
sub
cmpsb
mov
out
daa
mov
sbb
lods
or
data16
inc
add
adc
shl
bound
jle
xor
out
pop
pusha
jmp
push
xor
adc
sahf
dec
jae
or
xchg
das
out
loopne
sbb
out
adc
test
outsl
js
dec
inc
pop
cld
jg
repnz
scas
je
mov
test
xor
add
jge
sti
mov
sbb
inc
push
and
cmpsl
push
or
ss
int3
mov
ja
pushf
ds
cmp
pop
sbb
fidivrl
add
fildl
pusha
loopne
shll
imul
scas
sub
stos
ret
loopne
cmp
stos
stc
test
mov
jl
sbb
mov
lods
outsb
and
cmc
dec
daa
sbb
fcmovu
jbe
movsb
add
inc
ja
lds
and
and
cmp
mov
js
lods
scas
in
lods
cmpsb
out
lret
cs
pushf
xor
jnp
adc
mov
js
fcmovne
pop
inc
add
aaa
int3
sub
push
adc
adc
test
sti
loope
shlb
jg
cmp
or
arpl
sub
adc
fsts
sbb
push
mov
lret
cmp
ret
cld
push
add
lahf
jg
xlat
jnp
cmc
inc
dec
push
das
loop
pop
mov
loopne
idiv
lock
call
sbb
jnp
es
mov
fdivrl
dec
rcll
sbb
jmp
jo,pt
incl
sub
xchg
mov
xchg
pop
sbbl
rcr
ficompl
cmp
and
push
sbb
lock
int3
push
jle
inc
cld
jnp
adc
clc
mov
jmp
or
insl
inc
push
lea
or
xchg
jge
popa
xchg
dec
jmp
mov
call
lock
add
dec
es
je
xchg
cmp
dec
pushf
mov
aam
imul
movsl
lods
jmp
sbb
push
and
sub
icebp
mov
push
xchg
pop
fists
in
aas
pop
jle
int
js
push
and
push
push
jae
inc
jbe
xchg
cltd
dec
popa
scas
icebp
mov
std
repnz
adc
sub
dec
hlt
dec
test
in
sub
dec
mov
shll
insb
dec
out
shll
btr
in
fbstp
sahf
pop
push
in
or
nop
sbb
pop
cwtl
jbe
adc
xor
mov
and
mov
in
imul
xchg
push
inc
out
mov
sbb
testb
xchg
and
clc
mov
jnp
jbe
or
mov
mov
mov
jo
inc
call
adc
cmpsb
ficoms
push
ja
les
rorl
inc
jmp
mov
inc
iret
loope
out
lods
imul
mov
inc
push
push
test
sbb
push
xor
sub
das
int3
jnp
cs
adc
testb
lods
lret
mov
dec
int3
adc
je
fisubl
ja
mov
or
push
addr16
mov
js
pusha
mov
pop
push
xor
aad
loope
jb
push
mov
in
cwtl
repnz
mov
sub
sub
mov
or
pusha
inc
cli
add
icebp
xchg
xchg
fnstenv
mov
mov
call
std
stc
ljmp
adc
dec
xchg
jmp
mov
fs
add
lret
and
push
mov
cmp
cmp
mov
add
pop
in
sub
aam
jge
popf
jno
and
ss
shll
ss
aaa
add
push
jbe
aas
cwtl
sbb
mov
fidivrs
jnp
lds
cmp
mov
push
loope
ja
inc
xor
adc
xlat
fiadds
add
or
pop
imul
pop
daa
fisubs
mov
inc
mov
dec
pop
mov
mov
cli
daa
das
scas
mov
movsl
shl
add
or
ja
push
mov
pop
out
sbb
pop
cmp
scas
push
pop
ss
lds
and
movsl
pushf
es
push
int
sbb
mov
mov
mov
aaa
mov
popa
inc
iret
adc
add
inc
pop
push
mov
mov
movsb
xchg
mov
pop
daa
add
popf
dec
jo
out
fstl
popa
and
popf
gs
mov
and
add
jo
js
inc
scas
mov
pop
pop
outsb
cmpsb
ret
sbb
mov
mov
jmp
call
ret
mov
xchg
ss
and
dec
mov
jns
lret
gs
popa
pusha
in
fsubr
jge
shll
hlt
sub
test
pop
lds
jp
adc
mov
cmpsl
gs
and
adc
pop
mov
inc
es
push
jno
lret
cltd
mov
sbb
dec
inc
ret
dec
push
xor
mov
mov
sbb
push
sahf
dec
jne
add
and
jne
nop
or
pop
aas
sub
cli
neg
add
xlat
cli
nop
cld
fs
mov
call
push
in
cmp
lock
inc
sub
jecxz
ds
ret
lock
mov
loope
or
call
jne
push
sub
or
je
cmp
lahf
push
xor
adc
mov
lret
mov
mov
shrb
mov
jge
mov
xchg
cmpsb
push
inc
scas
int
mov
inc
pusha
sub
dec
test
mov
inc
sbbl
cwtl
stos
shrb
shll
lock
lds
std
push
mov
mov
arpl
ljmp
orl
inc
ljmp
out
scas
sbb
pusha
dec
fs
in
push
and
shlb
add
add
into
data16
xor
or
mov
cmc
das
xor
cmp
xchg
sub
aad
mov
mov
cmp
int
mov
aam
pusha
add
xor
pop
sarl
mov
ja
mov
mov
imul
add
movsl
sub
xor
ja
dec
enter
enter
dec
or
ljmp
fadd
jg
imul
mov
addr16
movsb
je
and
sti
frstor
cltd
orl
cltd
stc
lahf
dec
jo
push
cmp
iret
andb
mov
addr16
std
sbb
scas
ds
jae
in
mov
imul
ss
mov
jne
pop
mov
jg
cli
sub
and
mov
mov
jl
jge
das
movsl
int
aad
xchg
es
popf
icebp
sub
test
add
mov
push
movsb
testb
or
dec
mov
inc
ljmp
movsb
and
mov
lahf
xchg
jnp
int3
sub
shr
pop
jb
dec
loopne
pop
or
les
jge
js
ja
inc
roll
jecxz
fldl
mov
mov
fisubrl
movsb
inc
aad
or
orb
inc
jl
jo
mov
mov
fstl
mov
gs
lret
stos
fimull
sahf
cwtl
test
test
jmp
sbb
add
dec
rcll
je
cmp
pop
loope
pop
sub
clc
mov
add
xor
dec
adc
and
mov
call
fistpll
bound
jge
mov
arpl
push
cwtl
xchg
dec
inc
aaa
lret
adc
repz
pop
mov
mov
addr16
adc
jne
shl
push
pop
outsb
or
insb
fsubrs
mov
sbbl
jmp
or
mov
or
test
ss
xor
out
cltd
cmp
ret
ds
inc
sbb
jg
push
aad
in
sbb
lahf
mov
or
rolb
mov
and
lret
cmp
js
sahf
or
fwait
add
aaa
subl
mov
dec
xchg
clc
mov
cmp
les
fwait
sbb
ret
fldenv
xchg
ss
inc
mov
jo
jle
mov
pop
inc
or
dec
push
xchg
adcl
fs
mov
scas
shll
outsb
xchg
mov
sarl
dec
or
mov
rorb
lahf
xchg
pop
or
pop
xor
jne
addl
push
push
jae
mov
inc
mov
mov
je
lcall
mov
jmp
dec
mov
out
jge
shrb
pop
or
mov
jmp
imul
cli
aaa
pop
cltd
sahf
lret
xor
sub
mov
cwtl
imul
adc
mov
dec
rolb
ja
sub
xor
or
and
dec
fsubrl
or
mov
andb
xor
cld
fwait
popa
lods
xchg
cmp
iret
pop
cmp
or
repz
jecxz
dec
in
addr16
fsts
cmp
scas
sub
and
push
jge
inc
insb
push
push
jl
popf
imul
pop
ja
imul
push
mov
into
push
movsl
dec
push
lods
dec
lods
fcmove
xchg
cmp
xchg
into
fisubl
arpl
dec
insl
fs
mov
test
xor
xchg
imul
lret
xchg
test
jnp
inc
mov
fsubr
jp
in
jae
cli
inc
lret
mov
xor
lcall
les
or
lods
mov
pop
mov
xor
cmp
and
lds
mov
outsb
je
cmpl
mov
or
cmp
dec
mov
xor
dec
ret
and
fdivrl
and
add
faddl
fsubs
je
mov
roll
icebp
rcrb
iret
subl
mov
imul
inc
mov
pop
testb
dec
loopne
xchg
mov
xchg
imulb
gs
sbb
rcrl
jmp
jg
ret
mov
fldt
aad
outsl
or
inc
pop
fdivp
insl
data16
aad
jge
rcrl
aad
iret
outsb
std
sbb
xor
test
int3
fs
push
and
mov
jnp
cli
fcomip
add
aaa
cld
sub
jmp
xchg
flds
imul
pop
fisttpl
test
inc
sub
xchg
xlat
pop
cli
mov
inc
jo
mov
shll
push
dec
add
pop
and
mov
daa
mov
jnp
aad
sbb
dec
push
cmp
cld
imul
mov
push
pop
push
xorl
out
add
mov
mov
cmp
cmp
int
enter
test
test
aad
testl
cmp
lahf
inc
pop
lret
addr16
push
mov
xchg
int3
jmp
scas
mov
or
inc
inc
stos
xor
inc
imul
clc
mov
icebp
add
jbe
pop
sti
and
cmp
sti
pop
das
andb
cmp
mov
jno
inc
ds
into
repnz
lock
lret
xchg
jl
cmp
pop
cmp
dec
aaa
jno
mov
xor
or
xchg
dec
lods
mov
out
mov
dec
addb
ret
pop
aam
or
stos
ja
xchg
out
pop
adc
movsb
jmp
mul
jmp
lods
sbb
jnp
mov
xchg
adc
jb
add
shlb
aaa
jp
push
dec
daa
mov
mov
fs
shll
inc
aaa
dec
stos
call
lret
pop
icebp
jnp
inc
or
jne
andb
or
int
aad
ja
sub
jle
lea
cmp
mov
mov
push
xor
ds
fwait
and
movsb
ss
mov
cltd
imul
xor
nop
cwtl
test
mov
jns
xor
fsts
or
imul
xchg
cwtl
insl
or
les
push
pop
ret
sbb
outsl
ret
insb
pop
testl
cmpsb
orl
sarb
orb
stos
ret
xchg
in
mov
fldenv
mov
adc
gs
inc
jo
dec
es
push
sbb
imul
movsl
xor
stc
fs
push
sub
mull
fwait
outsl
mov
ds
out
nop
and
insl
jp
in
mov
cmp
push
stos
pop
imul
push
mov
ss
ja
adc
xchg
and
in
repz
sbb
inc
in
movsl
add
sbbb
push
lods
test
push
pop
repnz
fsubrp
in
icebp
in
cmp
add
rcrb
cmp
adc
in
jne
jno
add
push
jp
cli
jne
dec
jecxz
pop
out
popf
call
and
in
push
mov
xchg
aam
pop
ds
sbb
js
xchg
push
jno
sbb
pop
in
inc
mov
lods
in
sti
mov
mov
outsb
int
jae
lea
mov
push
mov
push
and
repz
xor
dec
mov
dec
mov
inc
push
and
mov
cld
mov
ficomps
ja
cmp
mov
cmpsb
sbb
sahf
test
call
cmpl
sub
push
shlb
pop
in
mov
cmc
in
or
cmp
ja
movl
dec
inc
ss
or
fwait
stc
ds
stos
cmpsl
roll
out
push
cs
and
jecxz
mov
sbb
fucom
ficomps
dec
pop
and
mov
out
pop
arpl
pop
scas
stc
dec
inc
xchg
imul
cmp
leave
mov
cmpsb
jo
sub
lds
pop
sub
push
adc
and
psubq
mov
out
xchg
shll
jae
xchg
outsb
insb
lds
mov
and
adc
inc
add
xor
pop
adc
lods
out
outsl
rolb
cmp
mov
xchg
xchg
std
leave
add
in
test
addr16
or
lock
lods
clc
mov
jae
shll
mov
jae
push
cmp
test
xchg
std
xlat
sbb
clc
cmp
fs
inc
xchg
fnstcw
roll
mov
add
add
and
push
jno
lahf
out
mov
sbb
ss
inc
and
pop
ret
cld
push
jne
std
xchg
xor
push
cwtl
loope
leave
sbb
jecxz
pop
add
sbb
mov
xlat
mov
scas
imul
jb
in
out
pop
or
jnp
std
lods
push
in
xor
mov
mov
mov
rclb
pop
mov
cmp
int
and
fwait
movsl
push
fsubrl
movups
lcall
lock
sub
daa
xchg
adc
outsb
out
loope
sub
test
pop
hlt
add
outsb
pushf
les
xor
mov
icebp
xchg
test
jo
imul
push
and
cmpsb
stos
rorb
mov
xor
pop
in
push
pop
push
insb
leave
cmp
scas
jg
icebp
nop
aam
or
sub
pop
arpl
rorb
jp
in
push
mov
insb
jmp
movsb
outsl
cs
push
lret
loop
enter
sbb
das
push
sbb
mov
mov
loop
cmpsl
daa
xor
pop
mov
dec
jge
xor
mov
ja
or
jae
dec
pop
ret
fsts
and
push
loop
je
pop
out
lock
pushf
mov
daa
fmulp
les
dec
adc
ret
cmp
into
shll
test
stos
inc
add
xchg
cmpsb
jmp
and
cmpsl
sbb
clc
idivl
les
imul
shrl
stc
pop
scas
leave
mov
lock
xlat
or
mov
cltd
cmp
jne
and
sbb
jb
repnz
incl
inc
inc
jbe
mov
xchg
xor
or
daa
pop
aas
jae
lcall
mov
rcll
push
frstor
xor
aas
jl
call
and
adc
xlat
pop
cwtl
outsl
scas
leave
xchg
mov
push
dec
push
or
mov
dec
mov
cmpsb
xchg
xchg
mov
stc
mov
mov
mov
mov
cli
inc
pop
xchg
repnz
inc
andl
and
mov
cs
push
in
mov
jmp
in
push
push
scas
add
js
or
test
pusha
adc
mov
addl
sbb
sahf
insl
cmpsl
aad
cmp
lahf
jo
inc
pop
cmp
add
addr16
push
or
bound
int3
les
addr16
arpl
inc
xlat
jle
mov
sub
lcall
jle
rcr
shlb
push
mov
outsb
mov
sbb
int
xlat
std
cmpsb
push
popa
cmpl
loope
inc
cwtl
jl
inc
ret
inc
xchg
jno
int3
loopne
pop
xchg
cmpsl
push
insb
pop
movsb
xchg
or
mov
mov
sarl
adc
add
dec
mov
repz
ljmp
aas
cli
cwtl
addr16
pop
jb
inc
xor
dec
test
inc
push
mov
adc
stc
lret
inc
cmpsl
rorl
fistpll
cmp
mov
mov
push
xchg
push
inc
jge
sbb
fstl
mov
fadds
pop
mov
iret
fcomps
ret
jae
adc
imul
int3
fsubrs
mov
inc
scas
nop
loop
rcr
add
pop
rcrb
fisttpll
movsb
icebp
or
sub
cmpsb
xorl
ss
mov
mov
xchg
mov
lds
sbb
mov
sbb
fldl
leave
push
mov
pop
sub
push
xor
push
div
push
lea
fdivl
call
mov
mov
sbbb
mov
nop
push
push
push
cmp
dec
cmpsl
lea
lahf
ljmp
lret
or
sbb
mov
ret
xor
ret
stos
cltd
xor
pop
cmc
dec
pop
movsb
push
push
or
hlt
mov
xor
jae
in
jae
push
cmp
pop
sbb
cli
mov
pushf
rol
shlb
inc
les
cltd
and
sahf
pxor
add
call
jg
test
xor
mov
cmp
cmp
test
out
test
jp
clc
sbb
pop
gs
lods
mov
and
mov
cmc
sbb
push
movsb
insb
ret
repz
sub
adc
cmp
sub
sub
cld
push
icebp
loope
cmp
out
jl
mov
scas
cmp
pop
push
lcall
xor
push
xchg
aaa
xchg
rcrb
sub
and
and
mov
out
fistl
jge
xchg
stos
xor
pop
and
xlat
cli
lea
or
pop
xchg
hlt
es
xchg
pusha
pop
leave
add
xchg
ljmp
adc
leave
arpl
jecxz
push
jo
fwait
pop
inc
add
mov
mov
xor
push
pushf
je
fiadds
cltd
mov
fldenv
and
je
pusha
mov
xchg
insl
push
cmp
sbb
pusha
or
dec
int3
adc
jns
das
call
push
cmpsl
jmp
jae
fucompp
in
fmull
mov
adc
dec
inc
or
sbb
in
jnp
ret
mov
inc
sbb
jae
xor
inc
arpl
int3
scas
divl
rolb
mov
shll
adc
add
lds
fldenv
push
je
mov
push
outsl
in
imul
test
pop
imulb
dec
adc
mov
mov
test
rclb
xor
cmp
dec
shll
sahf
jno
test
into
jecxz
jnp
xor
push
pushf
mov
pop
jne
cmp
dec
enter
mov
sub
sbb
aam
rol
fcomps
push
loopne
stc
xor
movsb
mov
enter
inc
call
push
mov
in
repnz
movb
push
xor
scas
jg
pusha
mov
mov
pcmpgtb
aam
or
rcrb
loopne
mov
lods
cmp
inc
or
xor
sbbl
mov
dec
js
aad
insb
jmp
cmp
enter
mov
fstps
mov
stos
cmpsb
aaa
iret
in
jne
filds
push
dec
stos
sub
imul
fists
adcl
jae
cmpb
cmp
loop
cld
xor
mov
add
out
xchg
jle
jae
jmp
fs
ja
clc
or
pshufw
sbb
into
jne
adc
cmp
jns
mov
inc
push
out
lcall
cmp
repnz
pop
pop
mov
cmpsb
aas
or
divb
inc
pop
jns
imul
femms
call
cmp
dec
cmp
testb
inc
fwait
jg
aam
imul
sahf
mov
aaa
test
ljmp
cmp
add
sbb
call
inc
mov
add
xchg
push
cwtl
iret
popf
cmpsb
xchg
arpl
sbb
cmp
movb
mov
sbb
icebp
pop
shrl
dec
sub
mov
adc
cli
jge
sti
mov
pop
sbb
inc
fwait
inc
and
dec
inc
mull
mov
movsb
jg
xchg
iret
into
repz
pusha
push
mov
jne
fistl
xor
and
jmp
out
push
cmc
sbb
cmpsb
mov
stos
pushf
fmuls
pop
jae
or
insl
in
pop
fs
push
frstor
es
outsb
pop
lods
push
mov
cld
inc
cmpl
jg
aas
jle
into
mov
sub
xchg
lcall
clc
insl
cli
dec
ret
fistpll
push
sub
or
pop
push
pushf
cltd
mov
mov
in
mov
fwait
push
add
scas
push
or
mov
mov
cwtl
cmp
mov
pop
enter
pop
mov
int
pop
pop
repnz
add
and
lock
xchg
pop
insl
cltd
imul
jnp
in
sbb
pop
xlat
jp
cli
aaa
cwtl
inc
negl
jmp
pop
js
xor
add
lds
mov
in
xor
imul
xchg
pop
lret
mov
push
leave
hlt
mov
or
sbb
stc
xchg
lods
lods
ds
repnz
arpl
movsb
sahf
jo
lds
or
cmp
lret
xchg
shll
dec
lret
and
pop
ja
mov
sub
inc
cmp
adc
xor
or
xor
scas
aaa
dec
or
clc
pushf
xchg
iret
fs
jns
pushf
push
add
iret
imul
test
stos
sub
push
es
push
aam
leave
push
icebp
daa
fsub
paddw
data16
pushl
outsb
cmp
add
cli
fsubs
sub
stos
int
imul
pop
sbb
push
mov
sub
aam
dec
xor
lea
shlb
pop
or
mov
cmpsl
and
sbb
out
inc
inc
add
cmpsl
hlt
cmpsl
xchg
or
js
ds
xor
adcb
push
push
sbb
cwtl
push
dec
mov
fistpll
cmpsb
sbb
aaa
inc
inc
pop
int
inc
push
leave
scas
cmp
aaa
ret
xor
pop
jne
int3
aam
inc
add
xchg
cmp
and
sub
clc
insb
clc
jge
js
aaa
mov
pop
std
jae
xchg
icebp
movsb
in
and
push
aaa
pop
or
out
xchg
shl
adc
stc
clc
pop
push
jl
and
insl
call
xchg
xchg
mov
lods
inc
mov
dec
aas
push
sub
mov
or
xor
mov
add
mov
sub
sbb
shll
xchg
outsb
aad
aaa
xchg
fst
int3
imul
popa
jmp
mov
cli
push
outsl
lret
rclb
mov
outsl
push
out
test
inc
and
jnp
jae
mov
leave
pop
mov
dec
sbb
pop
add
add
pop
int3
call
and
imul
bound
icebp
sarl
push
into
mov
xchg
leave
fists
or
ja
jecxz
std
out
mov
jl
mov
or
mov
adc
gs
loopne
jg
mov
mov
cmp
imul
aas
cmp
popf
mov
popa
call
loop
jg
dec
shrb
push
lods
call
adc
into
fs
xor
xchg
xor
pop
div
ss
sub
cmp
divl
and
jmp
push
mov
and
imul
je
inc
mov
out
add
std
insl
in
push
jnp
adc
mov
scas
js
outsb
push
cmovb
add
mov
stc
or
push
cmpsl
mov
int3
or
sub
sahf
or
in
lock
inc
hlt
xor
mov
sbb
fists
inc
cltd
je
mov
stc
sbb
sbb
push
jbe
jmp
arpl
aas
jae,pn
pop
push
pop
xlat
repz
aam
pop
scas
jge
clc
mov
mov
jae
cmp
addr16
or
dec
stos
xchg
das
fisttps
iret
shll
mov
jb
pop
adc
push
cmp
std
mov
mov
inc
stos
jb
or
cmp
add
or
xchg
idiv
decb
xchg
mov
push
jg
mov
push
cmp
jg
insb
push
fs
or
mov
adc
mov
push
dec
sub
mov
out
xchg
sub
xor
jne
xchg
mov
cli
dec
cmp
fidivl
inc
movsb
xor
sbb
pop
dec
aaa
xchg
mov
push
and
dec
mov
outsl
pop
ret
leave
clc
sbb
jp
inc
dec
mov
aad
pushf
dec
cmpsl
jg
mov
add
mov
stos
imul
adc
ds
sbb
pop
inc
sub
inc
cld
mov
mov
hlt
cmpsl
xchg
xchg
sti
jnp
das
pop
push
mov
sub
jb
sahf
xchg
inc
imul
stc
notl
pop
test
pusha
nop
mov
jns
mov
pushf
cs
jb
or
daa
jge
xor
jg
push
cmpsl
cmp
sub
and
jno
rcrb
stc
mov
add
adc
ffreep
popa
xchg
dec
fiadds
cli
mov
mov
push
push
sarb
xor
int3
fnstcw
or
mov
jo
shll
sub
cmp
in
js
rcrl
out
and
dec
shll
push
pop
jo
mov
mov
in
mov
inc
push
inc
or
mov
inc
insb
mov
jmp
jecxz
dec
xor
and
imul
push
scas
add
push
mov
cs
adc
or
fstp
ficompl
or
push
stc
push
xor
fcmovu
pop
leave
pusha
ja
sbb
cmc
fcoml
jg
stos
loopne
add
sub
push
sahf
mov
adc
in
mov
addr16
push
push
lods
js
or
ret
xchg
mov
shll
adc
dec
or
test
sbb
mov
xchg
bound
fdivl
popa
pop
jle
mov
in
sub
mov
enter
jl
sub
test
fs
jge
push
cmp
fldcw
in
xor
mov
outsl
mov
iret
inc
mov
pop
xor
test
je
mov
loop
push
mov
pop
negb
mov
flds
aad
fdivrs
pop
sbb
push
cmp
and
cld
loope
add
xor
jl
add
mov
push
lock
test
jb
and
mov
outsb
and
xlat
test
mov
add
inc
nop
xor
lret
bound
imul
outsl
mov
call
jae
mov
subb
ss
pop
lret
xchg
mov
xor
cmpsb
ret
adcl
mov
xchg
out
loop
xchg
pusha
sbb
or
and
or
and
inc
cmc
daa
outsb
sbb
or
lods
or
sahf
dec
mov
sahf
loopne
and
cwtl
and
adc
insb
and
jnp
mov
mov
push
jecxz
cwtl
shlb
pushw
imul
jmp
xchg
stos
xchg
dec
enter
aad
pop
dec
test
cld
lea
fildll
in
mov
in
outsl
xorb
notb
pop
fwait
dec
leave
or
and
inc
stos
pop
xchg
ret
adc
cmpsl
mov
pop
fldcw
mov
lret
dec
xorl
push
repnz
out
inc
loop
jo
push
or
enter
xor
outsb
scas
mov
or
in
cmc
aam
imul
daa
out
out
sbb
or
sarb
popf
or
xchg
pop
inc
in
outsl
jg
cmp
and
lods
jle
fcomp
lfs
into
xor
pop
int3
decb
sub
sub
not
xchg
jle
adc
sub
mov
in
pop
aad
test
jmp
daa
out
aas
stos
popf
stos
lock
aas
icebp
cmp
and
ret
mov
insl
pop
and
push
xlat
xchg
cli
in
jmp
adc
sub
imul
pop
je
adc
cmp
arpl
test
dec
jne
and
movsl
add
int3
fstps
shl
push
adc
ret
aad
out
jmp
fldenv
stos
hlt
adc
xchg
lods
xchg
ljmp
cmp
cmpsl
test
out
sbb
sahf
push
ret
push
out
jb
add
jle
xchg
dec
jno
into
sbb
fiadds
sub
xchg
xchg
insl
mov
rcr
cltd
mov
daa
mov
popa
fxch
fcmovbe
addr16
push
cs
je
cwtl
nop
xchg
hlt
dec
int
insl
int3
jp
ss
ljmp
pop
mov
imul
test
test
aaa
mov
dec
ljmp
push
sub
sbbl
jl
imul
xor
inc
pop
cltd
iret
sbb
pop
test
xchg
lcall
xchg
sub
lds
inc
mov
sbb
cmp
inc
lock
pop
test
xorl
arpl
adc
dec
shl
rcl
jbe
or
xor
vsubpd
test
in
adc
daa
jne
das
mov
sub
jo
lahf
ljmp
jge
lahf
sbb
nop
mov
or
dec
push
jp
adc
cmp
jae
out
out
jp
dec
push
sbb
popf
pop
or
jns
inc
stos
fwait
sbb
out
mov
jno
cli
repz
inc
inc
and
or
or
jge
mov
push
fdiv
fdivrl
sub
and
xchg
mov
cmpsb
ljmp
sarb
jecxz
xchg
negb
mov
out
bound
mov
pop
jg
in
mov
mov
and
iret
out
or
mov
lahf
and
pop
jecxz
adc
sub
and
adc
sti
pop
xchg
sub
ljmp
sbb
sbb
sbb
in
shlb
xor
mov
sub
ljmp
lahf
mov
decb
pop
xchg
push
sbb
xchg
addr16
and
out
adc
jge
inc
pop
and
push
mov
mov
xchg
enter
ret
ret
testb
add
out
filds
insb
adc
cmp
adc
dec
or
xchg
movsl
jae
jne
or
insl
orb
mov
inc
in
add
imul
jle
mov
add
sbb
pop
shrl
movsb
pop
dec
push
mov
mov
cmpsl
aam
insl
test
sahf
clc
test
gs
fs
js
dec
cmp
out
mov
fcoml
and
stos
stos
mov
jg
dec
movsb
les
dec
adc
xor
xlat
push
mov
inc
sbb
mov
aam
int
cmp
or
mov
jae
mov
stos
pop
xor
scas
pop
xchg
movsb
lods
int
inc
ret
rcl
xor
test
test
shll
and
pop
cmp
mov
lods
lods
addr16
enter
repz
dec
cmp
or
mov
cmp
push
stos
pushfw
cwtl
lcall
adc
arpl
mov
leave
mov
loop
sbbb
jmp
mov
push
dec
sub
hlt
push
scas
aad
mov
loop
push
sub
pop
cmp
leave
ret
and
cmpsb
and
mov
out
cmpsl
ret
daa
jo
and
fsubr
cli
lods
out
mov
leave
add
loopne
dec
stos
leave
repz
insl
sbb
idivb
add
sub
ljmp
std
cmp
jmp
movsb
rep
clc
das
mov
and
xor
lea
in
rcll
popa
es
out
dec
xor
pop
out
mov
loopne
jmp
lods
inc
je
out
cwtl
das
mov
mov
inc
aaa
ja
inc
sahf
push
mov
push
fnstcw
scas
or
push
repnz
mov
add
cmp
out
inc
pusha
ss
jmp
testb
push
cmpsb
js
inc
xor
cwtl
lds
pop
sbb
push
inc
or
add
filds
lcall
mov
pop
push
sub
xor
sub
aam
mov
xchg
ljmp
push
adc
iret
test
fdivrs
inc
outsl
xchg
jge
inc
mov
and
fstpl
lods
std
add
and
lcall
mov
inc
xor
sbbb
and
xlat
and
cmp
xorb
int3
lcall
fs
ret
out
lds
sub
pop
adc
cmp
sub
or
push
mov
mov
rcll
call
push
push
inc
or
sbb
adc
aas
rcrb
jl
jo
pushf
in
fisubs
sbb
push
fld
mov
ret
imul
fiaddl
mov
outsl
mov
aaa
pop
jmp
sub
dec
ss
int3
rcrb
outsb
and
fldenv
aas
push
movb
icebp
mov
mov
mov
loop
ss
sub
or
arpl
dec
jg
lret
or
inc
stos
mov
sarb
and
add
mov
dec
jle
ficoms
adc
aad
lock
dec
adc
arpl
repnz
ficomps
mov
je
cmp
or
cmp
mov
popf
ljmp
and
rcrb
sub
add
clc
fwait
inc
ret
mov
rorl
out
std
cmp
push
mov
jo
ret
cmpsb
scas
push
in
dec
xchg
push
or
jbe
add
jnp
dec
adc
jno
imul
push
jnp
mov
pop
aad
sti
pop
std
dec
inc
push
inc
adc
push
mov
shr
scas
subl
xor
cli
shrb
and
mov
push
cwtl
stos
ret
fwait
lret
arpl
fidivrs
fidivrs
int
nop
cmp
out
pusha
xchg
cmp
adc
inc
cmp
inc
arpl
lret
jbe
test
sub
xchg
adc
es
aad
pop
int3
data16
sahf
nop
add
sbb
cwtl
pushf
or
imulb
imul
jo
sbb
mov
pushw
mov
mov
pop
imul
xchg
push
pop
mov
pop
leave
ret
or
and
cmp
incb
cld
push
cmpsl
jge
cmc
inc
and
loop,pt
insl
and
es
dec
cmp
fsubp
push
push
cli
sbbl
add
hlt
aas
aad
sbb
arpl
jo
je
fwait
out
xchg
push
ffreep
arpl
or
adcb
iret
clc
cmp
sbb
pop
mov
clc
pop
test
mov
and
lret
inc
xchg
inc
adc
faddl
shlb
adc
or
jae
mov
cmp
and
fsubl
insb
movsl
jle
xor
insl
fldcw
mov
sub
ss
dec
out
pop
dec
les
scas
iret
sub
loopne
dec
fnsave
data16
aas
pop
movsl
mov
sbb
lahf
push
and
test
inc
inc
test
fmul
ret
mov
into
imul
jns
cmc
lock
data16
icebp
scas
ret
imul
jp
imul
lahf
aam
dec
inc
ret
jb
inc
stc
cld
out
roll
or
addr16
cmp
mov
xor
and
out
fsubrs
das
cmp
xor
loope
xor
adc
xorb
loop
adc
ljmp
push
shll
mov
aad
and
sbb
sbb
jmp
andb
jb
ret
push
test
shll
push
inc
jl
push
dec
movzbl
jl
mov
dec
push
dec
xchg
adc
xchg
js
les
mov
xorb
mov
call
xor
pop
add
in
xchg
or
insb
pop
iret
enter
cmp
mov
rcrl
inc
pop
push
ret
xor
popa
fs
mov
push
mov
add
call
dec
enter
jle
scas
popa
sti
testl
es
lea
sbb
xor
ds
dec
add
xlat
add
mov
mov
insb
push
mov
ficoms
or
addl
pop
imul
clc
mov
nop
test
pop
mov
test
cmp
aad
test
insb
sub
mov
divb
fwait
movsl
push
jbe
stc
stc
fwait
jb
and
jo
mov
dec
push
shl
push
rorb
fabs
ret
int3
insl
flds
adc
fs
fists
out
mov
cmp
sub
push
mov
pop
jo
movsb
ret
lea
xchg
insl
adc
mov
sbb
int
jno
aam
push
jnp
pop
int3
lahf
xor
lds
cmp
lcall
jae
lods
cmpsb
xchg
adc
mov
into
xchg
push
xchg
add
sub
faddl
mov
jmp
pop
add
mov
xchg
xchg
lods
popa
scas
inc
add
mov
scas
mov
pop
lcall
dec
adcl
or
int3
fcmove
loop
mov
pop
cmp
cmp
loop
ljmp
fnstsw
insb
push
leave
imul
jle
and
bound
pop
mov
loope
and
xchg
pop
sbb
scas
out
lods
mov
mov
popa
lock
push
dec
fcoms
enter
ljmp
jnp
adc
cld
and
shl
or
jns
stos
mov
neg
inc
hlt
aam
lret
or
adc
aaa
jecxz
lcall
xor
test
ljmp
mov
pusha
shll
xchg
popf
int
cmp
jge
data16
pop
and
in
mul
push
cmp
iret
xchg
shlb
xchg
imul
sub
dec
add
leave
mov
dec
addr16
mov
call
sub
shrb
xchg
test
pop
jg
and
add
sbb
add
sbb
dec
pop
aas
and
testb
mov
cmc
fldl
ud0
pop
xchg
mov
xchg
add
add
adc
adc
rolb
push
enter
testb
adc
movsl
insl
dec
mov
rcll
out
in
jge
cmpsb
jp
dec
bound
ret
cli
in
fldt
mov
int
jbe
sbb
outsb
lock
int
jne
in
std
adc
hlt
cltd
pop
stos
les
mov
in
mov
mov
stos
adc
xor
setl
test
push
in
mov
out
ud2
mov
jp
gs
mov
jecxz
push
cmp
mov
inc
sti
mov
lahf
cmp
loopne
pop
inc
das
andb
mov
sbb
dec
lds
push
mov
movsl
popa
pop
lea
in
jecxz
jno
jns
mov
adcb
repnz
cmp
lock
xor
fstp
in
jecxz
imul
sbb
jp
testb
testl
mov
cmp
jl
pop
andb
repz
mov
aad
mov
xchg
sub
cli
adc
das
mov
ret
push
sbb
mov
ret
xor
nop
cmpsl
sbb
test
gs
lods
add
int3
lahf
andl
fiadds
in
adc
in
add
loop
push
and
lods
jmp
push
mov
in
les
test
stc
cmp
cmc
mov
fdivrs
loop
mov
dec
xorb
aad
clc
sbb
and
fld
test
cmc
js
and
push
jno
and
dec
in
leave
iret
and
outsl
gs
enter
and
inc
or
repnz
inc
in
out
xchg
cmp
pop
rep
push
inc
out
jge
mov
scas
sti
xchg
sarb
sbb
sbbb
xorb
xchg
mov
cmp
xor
xchg
fwait
inc
sub
aaa
xchg
sbb
gs
cs
fnsave
dec
dec
adc
mov
lcall
mov
jbe
mov
and
fcompl
data16
sbb
fbstp
dec
ljmp
cmp
fldt
and
int
jg
mov
sbb
out
sbb
sbb
xchg
lods
daa
arpl
iret
cmp
inc
inc
push
xchg
fstpt
clc
nop
mov
sub
pop
inc
ret
fistl
xchg
hlt
cmc
lock
popa
loop
orb
sub
idivl
mov
loope
sti
fwait
dec
loopne
adc
dec
lret
aas
push
aad
lret
sub
add
pop
sub
sub
sti
orb
push
jnp
daa
adc
das
jmp
leave
and
jmp
int
rclb
fnstenv
lret
pmulhw
jl
mov
xchg
lret
std
push
shll
mov
js
dec
fistps
jb
pop
cmp
and
outsb
insl
adc
cmp
fldz
or
sbbb
bound
ret
push
lahf
or
into
mov
cmpsl
lret
iret
mov
in
jecxz
mov
sub
insb
xchg
cmp
lods
rolb
das
pop
sti
adc
add
sti
iret
roll
flds
insl
imul
cmp
mov
cmp
test
mov
xchg
dec
mov
rcll
sub
call
push
inc
insb
cmp
testb
loope
imul
mov
inc
and
mov
testb
inc
inc
or
inc
xchg
jo
test
loope
aas
fmull
mov
push
lds
xchg
cs
dec
daa
aaa
les
cmc
in
dec
cmp
sub
loopne
push
loop
dec
faddl
mov
hlt
int3
dec
es
gs
sbb
mov
out
fidivs
push
add
loope
jle
pop
imul
shrl
lahf
cmc
addl
or
jge
ss
or
jecxz
or
in
aad
fs
sarl
inc
cmp
and
lods
mov
mov
loopne
inc
dec
mov
xchg
sbb
add
inc
push
adc
sbb
pusha
rcll
jb
and
sahf
imul
shl
ret
in
mov
jmp
dec
test
adc
lds
push
outsl
cmp
lcall
sbb
movsl
and
fwait
ret
sbb
ret
in
lcall
push
lret
sbb
addr16
mov
scas
jecxz
sub
push
iret
dec
pop
fcomp
repz
int
mov
mov
push
outsb
out
fdivs
ja
adc
xor
repz
mov
adc
pop
adc
pop
xchg
push
jno
jge
dec
sub
dec
add
testl
sbb
inc
ljmp
push
lods
shlb
mov
dec
imul
push
stc
rcll
das
lods
insl
jo
xchg
stos
sub
fisttps
push
bound
sti
into
ljmp
inc
mull
pop
sbbl
pushf
pop
xchg
fs
xchg
movb
pop
xchg
aas
add
mov
sbb
jp
push
aam
pop
arpl
mov
shll
inc
inc
imul
dec
jbe
imul
std
ficomps
pop
mov
and
adc
jno
mov
cmp
dec
shr
out
inc
out
cmp
push
mov
push
je
dec
mov
cld
arpl
dec
add
loope
pop
or
mov
lret
mov
icebp
rcrl
lods
movsl
lea
xor
jae
inc
add
fmull
bnd
push
adc
loopne
pop
iret
adc
rcl
ljmp
sbb
ljmp
cwtl
xor
sahf
idivb
test
xchg
xchg
inc
pop
sbb
scas
fstpl
mov
jae
lret
ljmp
rcll
pop
and
pop
mov
mov
jns
test
or
and
jecxz
xor
or
cmpsl
jl
mov
dec
jl
scas
cmp
mov
lret
add
mov
hlt
loope
dec
push
scas
jmp
int
test
fstl
scas
mov
in
notl
lret
sbb
jno
adc
arpl
imul
fnop
lods
jae
add
push
test
mov
jno
in
add
jno
fmuls
adc
pop
arpl
dec
mov
in
inc
pop
jno
xchg
push
sbb
and
xchg
mov
adc
mov
aaa
das
aad
add
sub
lods
enter
sbb
inc
cmp
sub
sbb
nop
xor
mov
icebp
add
cltd
jns
std
mov
loope
sbb
sbb
fistpl
lds
insl
mov
fs
sbb
push
addr16
sti
js
mov
insb
dec
adc
nop
push
jl
cld
stos
ja
adc
pinsrw
pop
dec
jae
push
lret
sbb
mov
dec
and
mov
orb
ljmp
xchg
imulb
dec
xor
dec
sub
nop
xor
dec
fadd
mov
dec
outsl
jmp
fnstcw
sarb
xchg
cs
push
ret
pop
test
notl
hlt
adc
jl
or
fmull
and
out
or
out
fisubrl
out
mov
addr16
xchg
push
xor
lods
or
inc
xlat
jae
mov
int
shl
cld
add
push
dec
adc
mov
add
outsl
sahf
les
enter
jmp
jae
and
ja
stc
das
pop
cmp
jb
push
adc
mov
and
inc
and
adc
ret
icebp
cmp
test
pop
ret
xor
mov
mov
rclb
push
enter
inc
or
push
cmp
sarl
push
xchg
jl
lcall
rcl
and
je
sub
and
ret
scas
xchg
xor
shl
popa
lea
stos
out
jno
add
mov
popf
leave
das
adc
push
enter
jno
jo
mov
or
sbb
jae
inc
jge
sarl
stos
add
imul
iret
jge
int
inc
inc
xor
stc
cmc
mov
pusha
mov
lds
jno
lock
mov
push
sbb
repz
push
loope
push
add
mov
or
cmp
sbb
push
cli
cmpl
mov
movsb
popa
sub
mov
inc
mov
jbe
mov
jmp
add
dec
iret
lock
ret
insl
lret
movsb
sub
jg
movsb
imul
add
push
mov
outsb
xor
mov
mov
fcompl
shl
cmc
pop
movsl
adc
jle
sub
loopne
push
xor
das
xchg
daa
jge
hlt
mov
cvtdq2ps
push
lret
mov
xor
mov
out
jb
aad
push
xchg
xor
push
subb
dec
loop
movsl
ret
lret
out
and
xchg
adc
mov
xor
inc
push
push
mov
xor
inc
int3
sbb
call
and
pop
rcr
jnp
ljmp
pop
cld
xchg
pop
scas
pop
and
jmp
mov
cmp
sbb
mov
fisttpl
mov
aas
call
adc
stc
mul
xor
pop
out
push
adc
into
lahf
pop
outsb
and
push
or
aas
aas
mov
decb
jle
aas
loope
or
xchg
lret
jno
mov
mov
iret
adc
repnz
shrb
dec
gs
in
movsl
and
inc
ret
and
scas
jp
adc
pop
inc
pop
xchg
data16
and
xor
dec
rclb
sub
lods
mov
and
mov
inc
pop
iret
and
pushf
dec
cld
dec
push
aaa
pop
mov
dec
int
pop
movsb
jne
adc
negb
in
add
jge
pop
out
mov
sti
cmovl
sub
in
mov
out
aaa
rolb
or
jle
lret
xchg
shll
adc
test
fildl
mov
sbb
enter
mov
add
stos
cmp
push
sti
cld
dec
xchg
or
push
and
xor
hlt
cli
repz
ljmp
sahf
jnp
rorb
or
xorl
ds
jo
push
add
mov
jp
xchg
xor
add
fninit
or
loope
push
dec
fcomi
add
xchg
hlt
ljmp
je
push
jae
dec
test
or
in
rcrb
adc
dec
jb
inc
stos
dec
in
gs
lahf
hlt
sub
loopne
daa
jle
dec
dec
in
enter
xor
popa
add
dec
push
clc
ficomps
sbb
ss
bound
roll
stos
out
into
fstpt
lahf
imul
out
rorb
push
dec
mov
mov
mov
out
jo
push
xlat
repnz
pop
adc
cmp
arpl
cwtl
leave
and
insl
sahf
call
lret
rolb
out
imul
jl
nop
dec
inc
je
call
add
cli
push
out
mov
adc
cmp
pop
jae
xor
scas
dec
fiaddl
dec
outsb
mov
mov
xlat
js
fcmovnb
jb
xor
ds
adcb
dec
jg
jp
ret
cmp
lods
push
cmp
jge
addr16
mov
push
jns
and
lcall
cmpsb
pop
mov
push
outsb
push
sub
jbe
fs
icebp
sub
cmp
nop
mov
adc
cld
dec
jb
lods
loop
xchg
test
and
sbb
mov
cmp
jecxz
xlat
mov
adc
loop
jno
push
bound
jg
cmp
bswap
cmp
mov
sbb
lret
aam
jne
adc
inc
mov
sbb
les
nop
jmp
sub
adc
pop
pop
mov
push
sbb
pop
lea
test
hlt
stc
pop
fwait
loopne
aaa
test
sub
jo
add
icebp
sbb
xchg
loopne
and
sbb
insb
push
out
mov
push
xchg
xchg
sbb
mov
sub
dec
imul
int3
mov
dec
inc
pop
call
inc
jb
aas
inc
xor
fmull
mov
adc
jae
jne
in
cmp
in
mov
call
sbb
sub
and
lea
adc
cmp
ljmp
inc
mov
aas
hlt
xchg
or
daa
lahf
adc
xor
ficoms
mov
inc
adc
cwtl
and
jae
in
cmp
add
sub
cld
frstor
sti
and
sub
cmp
hlt
xlat
loopne
pop
dec
mov
push
add
push
dec
sub
mov
in
add
loop
repz
cmpb
xchg
dec
ret
sti
lds
jno
jl
inc
bound
pop
xchg
mov
dec
int3
xlat
mov
aam
pushf
lahf
test
adc
push
mov
jne
xor
testl
shlb
fbld
std
popf
fcomps
cmc
pop
inc
xor
sub
add
sbb
fnsave
gs
outsb
push
cltd
xchg
cmp
icebp
mov
imul
insl
push
add
fistpl
and
sub
imul
inc
xchg
ja
dec
jb
push
scas
call
and
out
adcb
insl
imul
xor
xchg
test
pop
push
imul
cld
mov
sub
or
xchg
and
or
jecxz
ds
into
sub
lret
xchg
adc
adc
inc
push
mov
enter
jo
clc
outsb
scas
pop
jmp
insl
xchg
jo
aad
dec
push
inc
cmpb
inc
xchg
outsl
pop
popa
dec
test
adc
sbb
push
repz
rorl
movsw
add
or
push
mov
lock
test
sub
jns,pn
or
lahf
add
cmc
pusha
dec
dec
inc
fs
lret
xchg
xchg
sbb
ret
jg
sbb
sub
lret
mov
mov
mov
mov
mov
xchg
xchg
repnz
add
addr16
addr16
xchg
sbb
jo
int
addb
pop
jae
lret
into
lea
movsl
inc
daa
imul
insb
xor
outsb
sub
int
enter
mov
rcl
push
push
js
or
dec
inc
xchg
pop
fimull
pop
lret
push
lcall
xor
scas
ljmp
inc
adc
rol
int3
fdivr
cmpsl
fs
lret
shll
add
sub
ret
clc
fs
sub
pop
mov
pop
loopne
movb
sar
xchg
addr16
dec
int3
dec
addb
mov
xor
out
push
flds
jno
rorl
mov
in
and
cmc
popf
jbe
mov
out
test
negl
popa
mov
mov
push
pop
pop
add
and
xchg
inc
lods
mov
fldt
loopne
rcr
cltd
mov
mov
in
mov
mov
fisttpll
xor
mov
inc
pop
les
cmpsb
push
jmp
mov
cmpsb
outsl
cmp
fists
and
add
jo
cld
neg
or
jnp
push
push
outsb
xchg
lea
inc
je
and
aas
in
fistps
lods
outsl
cmp
pop
cli
lahf
jmp
mov
in
fs
push
rcrl
call
ss
xchg
adc
dec
adc
jne
mov
dec
and
mov
add
in
hlt
sub
cmpsl
sub
nop
mov
sarl
jge
dec
shrl
add
or
xor
jmp
sbb
bnd
int
aam
mov
cmp
sub
push
inc
aad
icebp
jl
ret
je
imul
popf
mov
sub
dec
pop
jbe
sbb
orl
insl
adc
cmp
xchg
push
fsubrl
jmp
sub
insl
shrl
ljmp
in
sub
imul
movb
fldl
ja
cld
inc
je
ret
jnp
pop
imul
or
dec
sbb
cmp
pop
out
div
sahf
xor
or
jle
xorb
mov
xchg
xor
mov
sub
pushf
mov
addl
pop
out
xchg
pop
mov
into
add
jp
cmp
sbb
mov
jg
cmpsb
sub
xor
pop
add
loopne
lock
rcl
add
cmp
jmp
stos
jo
cmp
or
mov
sbb
cmp
bound
pusha
mov
aaa
add
jae
pusha
inc
inc
insb
fidivl
es
lods
push
jecxz
sbb
pop
ja
cmpsb
xor
js
push
shll
xor
jae
mov
dec
push
sub
mov
imul
sbb
xchg
mov
dec
dec
xchg
mov
dec
pop
lock
xor
loope
sbb
fwait
scas
lods
out
cmpsb
jl
test
ret
mov
add
add
pushf
stos
mov
rorb
das
stos
add
cmpsb
les
mov
jg
push
pop
aas
pop
mov
lea
add
xchg
fldcw
rolb
sub
push
cmp
data16
push
loope
imul
dec
jle
andl
push
xor
xor
push
push
xor
shll
cmc
xchg
jg
xor
lock
dec
jne
shrl
ljmp
mov
sbbb
push
cmp
jp
or
notb
xchg
fsubl
xor
cld
js
js
jmp
push
mov
sub
stos
ret
lods
sub
scas
out
negl
mov
push
mov
adc
mov
jecxz
es
xchg
mov
pushf
pop
cld
insb
xchg
mov
stos
faddl
add
into
mov
lret
jl
lods
pop
jg
adc
push
push
int
stos
jg
lret
in
inc
enter
hlt
pop
push
lods
cltd
scas
jno
xchg
inc
and
outsb
xor
and
roll
mov
loope
fs
add
and
insb
repz
push
popa
sahf
sub
outsb
fwait
mov
push
inc
lret
fabs
jmp
and
push
pop
push
loope
jns
dec
lahf
jmp
scas
sbb
aaa
dec
out
enter
push
jge
xor
xor
add
arpl
jno
lret
xchg
movsl
xchg
xlat
mov
decl
sub
test
sbb
sub
push
int
shll
aas
lret
fcoms
adc
mov
stos
bound
js
arpl
stos
and
daa
in
mov
xchg
inc
mov
add
sti
loopne
jno
fisttps
inc
cmp
adcl
ss
cmp
xchg
mov
scas
fnsave
mov
and
nop
cmpxchg
movb
out
adc
mov
int3
pop
inc
inc
dec
xchg
ret
popa
jb
les
ljmp
rcrl
xchg
popa
mov
into
or
jg
cs
aad
in
cmp
mov
enter
je
or
leave
das
outsb
jnp
lods
add
cli
fsubrl
aas
mov
jp
push
sub
dec
jb
mov
notl
xchg
adc
mov
xor
jnp
jle
or
rep
xor
insl
cmp
fisubs
dec
inc
repnz
inc
lea
fsts
xchg
jb
lcall
pusha
and
mov
fnstenv
sub
cli
cmp
add
inc
push
xor
es
orb
ret
mov
and
xchg
repz
pop
mov
jno
sti
mov
lret
jb
xchg
lods
fisttpll
cmp
xchg
adc
adc
mov
fisttpl
pop
loope
in
je
jle
mov
mov
xor
xlat
sub
lahf
xchg
mov
out
ret
es
jo
jne
out
jecxz
es
sbb
lds
jns
inc
int
adc
mov
andl
out
lret
js
adc
insb
ja
jne
inc
sarb
imul
mov
frstor
mov
mov
cld
sub
das
nop
ret
jecxz
adc
mov
jne
or
lahf
mov
mov
pop
not
add
mov
xor
dec
filds
shl
jmp
data16
pushl
adc
in
xchg
push
xchg
jno
push
xchg
mov
sahf
xor
aas
test
add
int3
xchg
aad
pop
mov
sti
mov
xor
and
dec
jae
push
insb
mov
dec
imul
mov
lock
test
mov
fmull
jg
jne
push
push
or
add
cmpsb
mov
mov
notb
mov
cmp
or
mov
mov
outsb
lea
xchg
addr16
mov
js
jmp
mov
scas
push
imul
and
xchg
rcll
xor
xchg
jl
jle
xchg
bound
adc
add
add
fisttps
or
data16
jno
in
jb
sarb
data16
cmp
add
lods
sub
xor
pop
xor
pop
in
sbb
add
fmull
cmp
xchg
cltd
inc
pop
aaa
stc
in
dec
push
sub
push
cs
ss
es
push
outsl
aas
out
mov
out
cmp
mov
jmp
jns
inc
test
add
sub
pop
fwait
push
les
gs
sti
aad
adc
dec
subb
jecxz
push
movsb
lcall
sahf
xchg
mov
into
rcl
jl
mov
xchg
adc
leave
jp
push
mov
mov
iret
pusha
cmp
jo
imul
mov
and
fistl
sbb
jmp
stos
loop
jmp
ljmp
loop
sahf
shrl
data16
out
std
xchg
pop
jge
rorl
pushf
jb
test
push
fstpt
mov
ds
cmp
je
popf
or
adc
inc
inc
cmc
test
inc
xchg
xor
imul
lods
sub
sub
adc
cmp
xor
jo
adc
cmc
into
ret
sub
pop
or
flds
dec
shll
out
test
xor
pushf
lea
cli
mov
pushf
jo
sub
lahf
in
jno
mov
insb
loope
cmpl
aas
outsl
push
adc
mov
and
and
out
scas
mov
sahf
mov
icebp
push
jl
ds
mov
ljmp
out
movsb
sub
mov
dec
cmp
dec
jnp
xor
repz
adc
cmp
loope
outsb
xchg
iret
mov
add
stc
cmovo
notb
cmp
or
or
inc
adc
and
aas
dec
mov
cwtl
push
cmp
cs
inc
pop
bound
pop
les
mov
adc
je
loopne
je
loopne
mov
mov
aam
shll
pop
fdivp
mov
mov
sbb
jp
dec
cmp
inc
pop
mov
xor
mov
push
int
pop
xchg
imul
mov
std
sub
std
lods
lods
int
cmp
mov
sbb
jns
mov
clc
xchg
sbb
add
or
es
push
push
push
mov
jmp
mov
xor
rcll
inc
int3
sbb
mov
int
pop
push
adc
in
ja
xor
sbb
dec
lahf
les
adc
ljmp
inc
lods
movsb
push
mov
pop
jns
jl
mov
pop
cmp
jg
sub
hlt
into
fdiv
sbb
aam
mov
sub
loop
push
cmp
ljmp
sub
mov
mulb
push
xchg
xchg
cs
inc
dec
xchg
mov
xchg
leave
inc
inc
jg
sbb
mov
ret
xchg
cmp
ret
rorl
bound
adc
ljmp
jbe
gs
lcall
push
addr16
mov
inc
lret
stc
xchg
insb
clc
cmc
nop
addl
fcomp
mov
fcoml
incl
pushf
pop
je
pop
das
sub
ds
xlat
fwait
adc
sarl
rorl
jnp
rcl
bound
mov
mov
out
dec
int3
cmp
shl
mov
pop
add
xor
jb
xchg
xchg
out
jl
je
push
mov
int
xor
mov
dec
inc
mov
push
loop
or
stos
stos
pop
mov
outsl
xchg
cld
sbb
jnp
xor
test
add
fcoms
test
add
daa
int
cli
mov
add
xchg
pop
push
or
push
xor
xor
cmc
rorl
imul
stc
push
mov
rorb
xor
scas
xor
bound
ja
hlt
or
dec
jle
fsubrp
lods
cmpsl
sbb
cmp
gs
jmp
adc
inc
cmp
dec
sbb
xor
xlat
mov
dec
ljmp
adc
in
scas
cwtl
add
mov
sub
jb
jmp
loop
adc
out
pop
mov
lock
bound
stos
cli
cmp
das
add
push
ja
andl
mov
push
sub
adc
inc
fidivl
pop
mov
fnclex
scas
inc
out
mov
mov
cld
sbb
fimuls
dec
mov
jnp,pt
pop
imul
xor
pop
push
int
pop
sbb
ljmp
adc
xchg
lds
orb
leave
popa
and
push
ss
add
push
fisttps
fadds
popl
fs
jle
out
out
xor
inc
inc
push
faddl
sub
daa
repz
clc
mov
fldt
push
mov
pop
pop
ror
test
xor
adc
sbb
js
stos
cmp
xchg
dec
or
or
icebp
mov
aaa
lock
or
repnz
ljmp
mov
shrb
fcomps
insl
cmpsl
cwtl
pusha
pop
dec
ss
cltd
push
xor
ja
xchg
out
xor
sbb
cmp
jge
scas
dec
int
adc
push
stc
rcll
mov
or
xchg
inc
mov
sbb
sarl
inc
js
popa
xlat
xor
iret
push
out
insl
inc
out
sbb
fsubp
dec
daa
ja
xor
jg
sti
stos
fldt
rclb
mov
int3
les
xor
jl
pop
fs
daa
cmpsl
addr16
xchg
out
notb
adc
xchg
mov
add
push
cmp
int
mov
push
cwtl
dec
and
minps
xor
jmp
sbb
mov
mov
cmpsb
mov
or
sub
sahf
mov
inc
push
xor
test
movsb
mov
insl
mov
cltd
jno
push
out
jb
das
inc
rcr
mov
es
out
mov
pusha
rcr
loopne
pop
inc
mov
and
fistpll
outsl
xor
repnz
ja
xor
and
xchg
fs
aaa
jae
cwtl
mov
mov
fldcw
jecxz
cltd
ja
out
lahf
in
cwtl
jne
lea
add
mov
mov
mov
and
push
clc
sub
or
add
dec
cmpsb
cmp
call
jle
gs
xchg
mov
lcall
sbb
mov
pushf
push
add
jmp
insl
mov
test
add
stc
mov
test
xchg
loop
sbb
push
ficoml
in
ret
jp
andb
cld
adc
fs
repnz
sti
test
pop
pop
inc
fldl
jp
sub
cmpsl
ja
mov
ds
js
jo
mov
mov
cmp
dec
or
mov
adc
loop
jno
js
inc
pop
or
fistl
or
mov
jg
push
or
or
add
mov
pmuludq
pop
sti
lahf
call
dec
push
movsb
mov
cwtl
sub
std
or
ja
enter
ret
sbb
mov
bound
mov
mov
xchg
les
int
std
outsl
rorb
inc
out
addr16
in
mov
cmpb
xor
push
adc
pop
lock
adc
outsl
xchg
ss
jne
popf
add
dec
out
sbb
incb
and
mov
push
movsb
mov
cmp
pop
mov
les
test
mov
cld
cmp
mov
in
loop
dec
fsubrl
or
jne
or
cmp
sbb
hlt
jno
jp
push
test
pop
pushl
scas
xchg
add
add
sub
adc
pop
xchg
ss
inc
jo
lock
add
dec
es
cmc
js
hlt
push
xchg
sub
adc
cmc
push
mov
psllw
ja
mov
lcall
cs
push
jae
daa
inc
mov
jp
cmp
test
std
xchg
xchg
lahf
push
adc
movb
fiadds
fcoms
arpl
lret
dec
aaa
jl
popl
cmp
mov
imul
add
test
inc
sub
sahf
ret
ret
fmulp
popf
dec
testb
or
mov
adc
and
xchg
loope
push
cltd
sti
mov
test
push
sbbl
mov
jae
sahf
push
sbb
outsb
pop
in
js
mov
cwtl
xor
add
adc
mov
and
inc
and
int3
orb
add
fsubr
dec
gs
faddl
push
sbb
aad
int3
jnp
in
aas
out
rcr
imul
out
mov
js
xor
dec
pushf
ret
repnz
cmp
ret
or
call
shrb
and
mov
sub
xchg
ret
in
mov
xchg
sub
jnp
or
jl
movsl
mov
mulb
sti
or
aaa
inc
pop
outsl
mov
mov
xchg
adc
js
pop
sub
pop
inc
add
int3
lea
xor
mov
cltd
addl
xlat
sub
fwait
mov
ret
clc
stos
jnp
jecxz
mov
addl
jae
hlt
pop
andb
je
and
pop
cmp
insb
jmp
loop
popa
or
jp
or
or
push
fbld
mov
daa
pop
call
scas
mov
jae
and
jl
xchg
aad
jbe
and
fdiv
hlt
mov
pop
mov
push
cmp
adc
dec
fsubl
imul
add
jnp
sub
aas
insb
lock
mov
xchg
test
addr16
mov
push
adc
add
adcl
insl
iret
test
cmp
repz
jne
push
sahf
sub
and
cmp
in
add
imull
rclb
jno
jle
and
add
subl
pop
lock
inc
push
sarl
into
mov
mov
scas
lock
adc
data16
stc
cmp
rorl
pop
xor
and
mov
cmpsb
je
sbb
stos
inc
loop
add
andl
insb
ret
push
fildl
in
inc
ss
sbb
rorl
adcl
xor
in
les
inc
dec
mov
xor
adc
ljmp
sbb
lds
inc
pop
jns
imul
insl
daa
inc
inc
cmpsb
and
push
mov
mov
sti
xor
js
mov
shlb
pop
mov
jns
arpl
ret
jno
xchg
mov
sbb
iret
add
scas
jmp
or
loop
add
les
daa
int
sbbl
dec
fidivrl
rcl
jns
push
repnz
inc
cmp
mov
shlb
xor
das
xlat
push
out
fildll
fidivs
dec
xor
int3
inc
inc
mov
sub
ret
add
lahf
out
mov
inc
loope
pop
divps
incb
mov
loop
ret
push
in
movsb
xor
adc
add
stos
aam
pop
push
mov
ds
fldcw
jns
mov
mov
add
in
imul
dec
push
lods
loopne
sbb
lea
cmp
sub
xchg
jnp
das
sbb
fs
loope
inc
jg
rorb
std
jno
adc
cld
mov
loopne
xlat
cld
shl
xchg
out
out
movsl
outsb
in
insl
test
xlat
adc
cbtw
pop
out
psrld
xchg
jmp
repz
icebp
jle
sbb
test
in
sbb
movd
pusha
imul
push
movsb
cmpl
lods
cltd
in
jb
outsb
movsl
mov
dec
test
or
loop
lret
jae
std
push
leave
pop
mov
das
pop
or
mov
and
shr
out
cmp
lods
dec
xchg
mov
push
fwait
dec
movsl
js
sbb
call
das
jae
jb
push
cmpsl
fwait
cwtl
aas
sub
push
and
lea
loop
stc
jl
stos
cmp
ret
add
shlb
lock
push
loopne
push
inc
sbb
ljmp
nop
cld
dec
icebp
call
inc
adc
jne
cltd
mov
lods
inc
push
pusha
stc
mov
pop
dec
mov
mov
mov
add
dec
mul
idivb
inc
lret
pop
push
pop
insl
add
jle
dec
or
jno
sub
inc
mov
data16
add
decb
int
movsl
pusha
mov
lods
imul
mov
pop
je
sub
fadds
sarl
sub
jmp
sub
scas
sbb
sahf
daa
mov
mov
adc
push
xor
mov
xor
dec
arpl
fs
imull
pop
cld
ret
cmpsb
nop
pop
outsl
jmp
add
mov
inc
mov
mov
testb
dec
sbb
fwait
sbb
cmp
adc
xchg
push
fcoml
xor
dec
mov
push
jnp
cmp
into
test
imul
insb
test
mov
adc
push
xchg
sahf
pop
mov
jmp
mov
dec
xor
add
loopne
cmc
lods
pop
lods
arpl
clc
je
fidivl
data16
mov
push
pop
aam
outsb
int
mov
cmp
inc
fwait
jb
jl
in
adc
jae
insb
mov
pop
sub
adc
sti
sbb
inc
mov
mov
and
xor
js
pop
lret
cmpps
jmp
add
clc
inc
and
sbb
mov
mov
pop
lret
jne
and
jp
cmp
loop
je
stos
push
jp
or
xchg
pop
pop
leave
adc
and
call
push
dec
jno
jmp
mov
arpl
es
fisttpl
fmull
sbb
sub
iret
dec
ja
mov
out
stos
inc
xor
test
lods
push
imul
mov
xor
cmp
cli
xor
push
rclb
cmp
mov
pop
dec
shll
lock
mov
sbbb
xchg
push
cmp
lret
cmpb
push
dec
cmc
shr
jle
sbb
into
bound
mov
sbb
xor
fs
xor
insb
aas
mov
sbb
inc
jns
push
bound
sbb
fs
lock
insl
nop
pop
pop
mov
dec
aaa
lock
in
lds
mov
or
fbld
inc
cmpsl
sbb
nop
in
sarb
fcomip
xchg
pop
aas
pushf
int
shrb
add
sbb
fstp
sub
add
test
inc
imul
xchg
std
pop
or
rol
pusha
push
hlt
sbb
pop
xor
lds
mov
jae
and
or
cmp
cmp
pop
mov
push
in
adcb
mov
cli
icebp
scas
jae
mov
push
mov
faddl
loop
push
es
leave
mov
repz
lret
test
xor
movsl
rorl
xor
pop
dec
push
loop
pop
jns
lea
add
or
data16
test
jno
sbb
cld
mov
push
in
mov
mov
mov
pop
std
pop
or
pop
mov
call
and
hlt
aam
mov
daa
push
or
lea
ja
movsb
insb
out
add
fnstcw
mov
out
mov
dec
adc
push
sub
stos
ljmp
xor
insb
mov
jg
int
fcmovu
xor
jge
sub
or
mov
jae
mov
sub
push
arpl
mov
lret
xchg
lcall
shl
mov
jle
sbb
adc
dec
aad
addr16
movsb
jns
ficompl
dec
in
cmp
jbe
dec
cmc
mov
mov
testl
lret
add
stos
in
xor
mov
sub
fsubrl
xchg
jmp
mov
sbb
mov
mov
pop
cmp
icebp
pop
test
pop
add
fs
ret
sub
pop
xor
lahf
adc
addr16
cmp
es
add
jp
cmp
test
mov
fstpl
rcll
xlat
mov
repz
adc
inc
out
cmp
mov
fildl
addr16
jae
push
sbb
shrb
xor
mov
imull
or
cmc
jnp
jno
jg
pusha
fs
das
pop
xchg
mov
mov
dec
push
dec
pop
cltd
dec
cmp
jle
gs
nop
push
pop
xor
or
notl
mov
roll
adcb
push
scas
xchg
mov
mov
and
lods
xchg
aad
push
into
jecxz
xchg
enter
jl
mov
adcb
xor
or
popf
std
in
outsb
jb
pop
out
cmpsb
xor
outsb
adc
jg
in
inc
mov
popa
inc
cli
dec
adc
push
or
jecxz
gs
outsl
aaa
idivl
and
jg
and
inc
or
std
stos
and
data16
icebp
lret
sbb
dec
outsl
sbb
mov
jns
sahf
inc
bnd
cs
scas
les
xchg
inc
inc
cli
xchg
pop
fmull
ret
cmp
popa
sub
cmpsl
lock
mov
lret
adc
xchg
cmp
mov
test
jbe
movsl
mov
repz
aas
and
push
sbb
mov
push
sbb
dec
loop
jp
pop
call
push
test
sti
xor
xlat
gs
popa
cmp
out
and
add
in
xor
cli
movsl
mov
jle
mov
stc
cltd
or
sub
in
mov
test
or
pop
sbb
out
sbb
mov
pop
int3
in
push
inc
xchg
mov
sbb
push
and
adc
mov
push
jecxz
dec
cs
inc
xor
pop
lahf
sbb
lcall
aaa
mov
or
les
adc
lods
movsl
push
sub
sub
pusha
or
push
insl
mov
fistps
cmpsl
test
add
ljmp
push
ret
add
lahf
mov
adc
int3
add
add
sbb
cld
or
aas
dec
inc
cmpsb
test
xor
les
pop
adc
fcompl
mov
pop
ljmp
mov
xchg
xchg
inc
out
jecxz
rorb
outsl
rol
sub
leave
test
jno
and
into
inc
jp
lods
dec
in
aad
jne
xor
xor
lea
rcrl
jnp
push
test
push
cmp
sbb
shrl
test
dec
and
mov
adc
arpl
sub
jns
sti
pop
pop
fdivr
inc
push
pop
je
or
test
sub
or
adc
loopne
test
shll
mov
jbe
pusha
push
pop
inc
inc
pop
mov
xchg
dec
jle
lahf
outsl
shlb
dec
mov
mov
adc
xchg
pop
jo
sub
pop
jge
addl
aaa
mov
sub
mov
test
inc
fimull
cmpsb
stc
sbb
and
sub
repnz
fmul
dec
sbb
adc
ds
ret
stos
dec
jp
imul
jle
ret
in
mov
adc
in
sub
dec
insl
ss
jnp
cmp
sahf
faddl
mov
arpl
jmp
int
mov
fdivrl
imul
push
fstps
jp
leave
roll
mov
xor
xchg
or
mov
hlt
dec
and
adc
push
scas
inc
or
inc
inc
ds
lret
sbb
repnz
lods
lods
jge
loop
adc
push
pop
testb
shl
shlb
lods
mov
cwtl
inc
pushf
jle
iret
sub
loope
repz
add
or
leave
jnp
xor
std
or
test
push
in
clc
jo
rol
pop
and
aad
push
loope
movsl
leave
aas
imul
inc
pop
inc
dec
andl
jns
stc
push
jge
in
cmp
repz
out
pusha
cwtl
aas
inc
xchg
jecxz
js
pop
mov
lahf
sub
stos
mov
out
push
adc
mov
add
cltd
inc
jge
pop
and
mov
fs
and
add
lcall
bound
mov
pop
xor
jae
xchg
std
nop
adc
jo
sbb
xchg
push
outsb
sub
mov
enter
fwait
stc
jmp
out
fnstcw
shll
daa
adc
pop
mov
fsubrl
mov
in
lret
cmc
aad
addr16
or
lcall
sub
add
fimull
inc
vpmaxub
xchg
icebp
sbb
pop
loop
jbe
cmc
dec
mov
out
cmp
and
cmp
sub
cmc
cmp
mov
sahf
stc
lahf
addr16
mov
mov
mov
cwtl
mov
xchg
ret
cmp
xor
cwtl
test
xchg
pop
add
sbb
dec
sbb
movsl
adc
rorb
mov
jge
pop
push
es
fcompl
mov
mov
leave
xchg
lods
mov
dec
aas
gs
mov
adc
in
push
leave
inc
jle
lret
vpmaddwd
stc
mov
test
aad
mov
sbb
mov
popa
rcl
pop
cwtl
mov
stos
outsb
cmp
or
and
jb
sub
dec
enter
mov
imul
push
test
xor
outsb
mov
in
jns
enter
sarl
jecxz
insl
lea
rorl
nop
push
mov
sbb
push
pop
fistpl
push
mov
pusha
xchg
je
adc
jae
jle
ja
sub
jnp
test
insb
push
jl
dec
sub
pop
aas
jmp
cwtl
aaa
xor
mov
shll
fisttpl
inc
dec
scas
and
mov
jge
adc
mov
mov
jmp
sub
inc
ds
sub
or
shl
xlat
in
ficoml
pop
xchg
mov
or
sbb
inc
xchg
xor
test
cld
int
cltd
arpl
call
jnp
mov
push
mov
jnp
pop
out
push
mov
leave
or
mov
push
adc
xchg
xchg
add
cltd
pop
add
or
imul
sub
pop
jl
lret
test
sub
or
xlat
dec
mov
xchg
or
cld
jge
mov
inc
sub
pushf
mov
pop
loop
enter
fs
xor
sbb
jl
sti
jnp
mov
fwait
adc
fcmovnbe
movsb
movsb
scas
cli
or
outsl
inc
out
insl
aam
mov
aaa
and
out
movsb
push
jp
or
ror
push
push
enter
cbtw
mov
push
aad
in
insl
mov
adc
cmp
hlt
xchg
jne
repz
or
adcb
xor
pop
push
cmp
push
xor
cmp
cmp
mov
xor
push
cmpsb
mov
jne
jo
test
jae
stos
mov
mov
out
adc
push
push
aam
add
loope
shrl
xchg
mov
insl
enter
imul
xchg
scas
pop
inc
pusha
fistps
dec
sbb
pop
vandnpd
lret
dec
mov
das
inc
testb
scas
push
cmp
mov
cmp
mov
mov
inc
inc
dec
xor
fcompp
and
movsb
cli
popf
ror
cmpl
popa
lods
pop
dec
es
js
add
adc
das
inc
sub
sbb
mov
stos
mov
xor
mov
stos
xchg
add
stos
jno
sbb
jg
rorb
add
mov
jmp
jne
jne
inc
or
adc
xor
inc
popa
fisubl
mov
push
iret
imul
dec
mov
or
inc
imul
xchg
mov
fsubl
movsl
cmpsb
test
inc
inc
mov
xchg
cmp
dec
xorl
push
iret
xor
pop
das
scas
loope
jle
aam
mov
mov
pushf
jns
roll
iret
out
orl
cmp
in
jl
fisubs
shr
mov
movsb
popf
mov
cmp
out
sarl
or
xchg
int
test
aad
popf
iret
inc
mov
push
ljmp
je
mov
inc
push
or
lea
mov
sbb
pop
ljmp
dec
jae
adcl
mov
iret
jl
shl
mov
or
push
xchg
add
fs
pushf
stos
lds
mov
jg
or
stc
ss
movsb
fcoms
inc
lret
adc
mulb
add
mov
inc
mov
dec
call
push
xchg
push
dec
jecxz
inc
cwtl
test
sahf
int
push
mov
test
and
sbb
lock
dec
adc
push
or
dec
rcll
fdiv
daa
jne
mov
int3
movsb
or
rolb
lret
daa
pop
or
jno
aaa
xchg
dec
sbbb
fcompl
inc
dec
and
cs
shrl
xchg
push
and
push
push
aas
lds
inc
mov
outsl
out
outsl
lea
lcall
out
sbb
popa
sub
inc
push
adc
and
mov
fidivrl
xor
bound
mov
mov
sarb
lds
outsl
push
mov
xchg
cwtl
out
cmpsl
shlb
mov
mov
jg
scas
sub
lcall
out
outsl
lods
and
xor
push
sbb
rcr
add
and
xchg
dec
shlb
cmp
jno
or
xchg
frstpm(287
ss
stos
div
push
mov
nop
mov
mov
ljmp
inc
jmp
jae
test
dec
shl
outsl
in
ret
fnclex
push
mov
or
add
mov
push
sbb
call
xchg
test
ja
scas
xor
outsl
popf
adc
stos
out
jmp
push
push
pop
icebp
lock
fisttpl
cmp
mov
adc
mov
call
or
push
movsb
scas
dec
lcall
js
jp
sti
mov
push
cwtl
add
jnp
mov
jmp
out
mov
mov
sbb
sbb
enter
or
push
js
jge
inc
ret
mov
loope
insl
cmp
hlt
and
jge
in
fisttpll
cmpsb
push
icebp
out
jg
or
jo
stos
popf
rorb
and
jnp
scas
mov
jnp
add
lods
jmp
dec
decb
sub
push
test
inc
cmp
sub
insl
pop
imul
mov
fldt
mov
mov
dec
loop
jne
pop
int3
stos
hlt
in
push
mov
adc
and
movsl
jp
inc
enter
in
out
std
rolb
loopne
test
pop
push
jns
lock
bound
cmp
xor
dec
push
jmp
xchg
cwtl
in
rolb
sti
sbb
inc
inc
dec
add
mov
aaa
loop
repnz
loope
xchg
in
sarl
rcl
mov
jg
icebp
sbb
loope
popa
mov
and
call
dec
jl
pop
pslld
cmpsl
mov
jnp
or
mov
adc
movb
cmp
xchg
inc
sbb
mov
scas
ja
xorb
or
sti
clc
mov
daa
fmuls
mov
cmp
mov
pop
orl
mov
or
jae
pushf
mov
sub
gs
test
and
fnstenv
popa
rcrb
cld
push
in
addr16
xor
sti
das
sarl
cmp
test
sub
stos
dec
mov
jecxz
or
xchg
repnz
in
sub
mov
push
mov
stc
outsb
jmp
subb
mov
push
push
ss
sub
ljmp
sub
dec
test
jge
je
int
insl
addr16
sbb
maskmovq
divl
inc
jge
pop
push
fcompl
adc
add
mov
ds
xor
mov
pop
add
rclb
stos
mov
fldt
aam
mov
mov
dec
nop
in
loopne
xchg
sti
cmpl
push
push
js
xor
lea
jmp
push
mov
das
push
pop
lods
mov
inc
out
push
int
clc
cmpsb
lret
xor
jbe
test
mull
bound
ljmp
je
pop
push
xorb
rcrl
fwait
clc
outsl
popf
sbb
jns
adc
inc
xor
cmp
sub
push
pop
or
pop
or
icebp
jb
cltd
movsl
mov
aaa
subl
xor
rol
fistps
fcoml
push
insb
in
and
cmpsb
and
jo
out
lods
jl
scas
sbb
or
pop
sbbb
es
jge
repnz
jnp
mov
aas
or
jecxz
xchg
adc
pushf
pop
cmp
test
fiaddl
mov
cmc
and
dec
gs
adc
idivb
pop
add
add
loopne
pop
jmp
outsb
ljmp
adc
mov
and
ja
mov
push
mov
insl
push
test
rorl
sub
int3
adc
xchg
outsl
mov
adc
jne
mov
mov
lret
icebp
sub
jae
test
push
aaa
lea
ret
sbb
dec
test
mov
mov
xor
dec
fcmovb
pop
inc
inc
pusha
stos
mov
jg
test
fs
sbb
jno
fsub
mov
repnz
jmp
fistpl
rcll
mov
rcr
push
out
inc
lcall
push
dec
mov
xor
or
xchg
adc
movsb
loopne
cltd
add
out
push
dec
cmc
aam
es
imul
inc
scas
insl
leave
test
fwait
mov
pop
stos
leave
adc
inc
push
mov
xchg
pop
dec
dec
data16
dec
repz
dec
test
int3
mov
adc
adc
inc
popf
inc
or
mov
scas
adc
fidivrl
cmp
dec
fwait
pop
loopne
add
cmpsb
jno
mov
movsb
xchg
in
imul
aam
adc
mov
sti
dec
shll
mov
mov
pop
mov
dec
inc
sbb
std
xor
xchg
loope
gs
pop
outsb
mov
pop
push
fcmovne
sbb
pushf
inc
cmp
addr16
stc
movsl
mov
test
cwtl
test
sub
pop
ljmp
jb
into
fistps
lds
dec
mov
int3
out
inc
jecxz
cmp
dec
cs
fnsave
mov
scas
stos
lea
in
pop
jg,pn
sub
fists
cmpsb
cli
mov
mov
cmpsb
pop
test
dec
inc
push
jmp
xor
shll
mov
mov
cmc
rcl
xchg
sub
mov
addr16
les
mov
ret
in
cltd
sti
xchg
es
mov
jge
test
in
es
mov
adc
dec
cmp
push
aas
nop
cli
ss
movsb
cmp
ficoml
insl
idivb
mov
stos
addl
jg
fwait
xlat
cmc
pop
fmul
in
scas
fistps
mov
jl
ret
pushf
lea
mov
shrl
push
and
pusha
xchg
mov
cmp
ja
cmp
sub
pop
mov
add
test
cmc
pushf
test
add
mov
push
mov
ret
xor
call
int3
mov
xor
addr16
and
cmpsl
imul
and
inc
dec
loop
sub
pop
and
cmp
xor
push
std
es
int
xchg
pop
stos
ss
sub
outsb
adc
in
jns
lods
sub
cld
jno
push
fs
push
clc
into
xchg
rclb
iret
mov
mov
icebp
jae
iret
sbb
push
mov
mov
push
jp
rolb
lea
fwait
mov
mov
in
xor
cmp
cld
out
xchg
pop
add
mov
xor
mov
je
in
sbb
mov
addl
imul
aad
xchg
jb
mov
movsl
insl
data16
loopne
stos
pop
fidivrs
cld
add
xor
mov
rorl
rcrb
movsb
add
xchg
sub
dec
ja
mov
mov
mov
push
insb
insb
xlat
sub
mov
jl
movsb
lahf
sub
ret
or
push
fs
inc
jg
inc
aad
fwait
js
inc
ret
mov
push
jnp
fxch
outsl
jmp
shlb
mov
adc
cmpsl
std
jmp
xor
xchg
xlat
push
or
xchg
sarl
test
sub
jg
pop
mov
ljmp
add
jae
gs
out
push
nop
jns
test
movsb
fists
lods
dec
andb
push
das
inc
ss
push
icebp
push
pop
mov
push
pop
mov
adc
int
jnp
cld
cmpsb
bound
pop
push
dec
adc
adc
push
mov
mov
subl
in
jo
pop
clc
sub
stc
pxor
arpl
arpl
cmp
cld
cltd
push
mov
add
mov
andb
inc
jg
sbb
lock
adc
xor
xorb
fcmovnb
movsl
lret
stc
mov
es
data16
and
dec
aaa
mov
adc
cwtl
lret
arpl
jns
cmpsl
rcrl
xchg
xlat
or
xchg
sub
inc
xlat
lret
cmp
adc
push
rclb
add
sti
pop
mov
push
pushf
and
out
rol
andl
inc
dec
orl
int3
cmp
ss
and
ja
mov
rcrl
dec
imul
sbb
dec
mov
loope
push
daa
dec
out
jne
jne
adc
fiadds
dec
xchg
push
in
inc
repz
jne
aam
movsl
leave
test
stos
into
or
test
pop
imul
mov
push
jle
mov
clc
je
mov
push
dec
test
arpl
repz
pop
add
lods
mov
inc
out
loop
test
dec
mov
inc
pusha
add
mov
xlat
sub
fs
sbbb
jp
popa
xchg
dec
jnp
fcoml
xchg
sbb
lock
scas
inc
lea
insl
pop
std
rclb
and
jno
pop
outsl
insb
xchg
cmpsl
adc
test
mov
mov
cmp
xchg
xchg
fidivrs
int
movsl
dec
mov
and
pop
andl
add
div
sub
lods
xor
pusha
push
dec
ret
adc
aas
or
inc
pop
xchg
xchg
in
sbb
gs
repnz
lahf
lock
jno
sbb
movsl
jecxz
roll
jmp
rorl
lods
adc
jbe
xor
push
xchg
and
mov
in
sub
ret
cmp
out
jae
in
inc
pop
jo
lea
clc
in
sbb
or
add
jnp
pop
outsl
sub
jg
or
cmpsl
xor
ljmp
rolb
movsb
pop
ficomps
lcall
add
clc
fmull
xchg
add
lea
bound
aad
movsb
or
stos
adc
jnp
or
sbb
inc
add
pop
mov
inc
and
adc
jne
cltd
cli
dec
inc
das
xchg
or
xor
or
inc
shlb
stos
shrl
aad
jo
mov
xchg
xchg
orb
sbb
imull
add
sar
and
ret
mov
fcoms
icebp
es
jmp
sub
ret
inc
adcl
fmul
and
movsb
ror
cmp
inc
clc
jg
and
adc
push
jle
pop
stos
pop
call
mov
lock
lcall
mov
pop
add
cld
imul
movsl
or
in
mov
int
outsb
and
fiaddl
push
sbb
icebp
mov
into
rol
cltd
push
lahf
mov
push
inc
int3
fwait
pop
cmpsb
cmp
lock
inc
cmc
push
push
mov
mov
jge
flds
xor
js
aas
adc
loope
nop
fwait
mov
xchg
xchg
adc
xchg
mov
dec
adcb
imul
mov
or
inc
mov
or
mov
sub
scas
add
sub
mov
add
mov
stc
fldl
push
push
int3
jge
add
sub
fadds
rcrl
sub
xchg
arpl
rcrl
sub
jmp
cmp
inc
popf
fwait
jb
sti
dec
jmp
hlt
or
lds
rorl
jno
push
jle
fisubrs
mov
adc
or
sbb
insb
loopne
dec
adc
mov
and
jmp
arpl
xchg
mov
pop
popa
dec
imul
mov
fistps
sbb
cmpb
and
add
lods
mov
in
mov
test
mov
dec
mov
leave
pop
leave
mov
lods
adc
and
out
mov
popa
rcrl
fwait
mov
les
mov
enter
hlt
subb
adc
jge
cs
inc
test
inc
inc
call
sbb
subl
jl
xor
dec
mov
shl
imul
shr
int
aaa
cmp
adc
fistpll
adc
mov
push
or
jmp
mov
andb
loope
js
fildl
xor
fcomps
sub
cwtl
dec
imul
insb
xchg
stos
leave
cmp
fidivrs
xchg
ret
jmp
mov
in
pushf
xor
pop
rcll
and
in
arpl
or
pop
test
fstps
arpl
sub
out
rclb
lahf
loope
and
mov
fstl
sub
loop
inc
xchg
imul
loope
sahf
or
push
push
jbe
fisubrl
pop
fstpt
adc
adc
repnz
scas
ds
test
fcomps
dec
sti
mov
dec
pusha
popf
pop
dec
push
mov
lret
iret
clc
push
add
jae
leave
in
mov
mov
cmp
ret
js
clc
mov
sub
pushf
jecxz
dec
xor
repz
jl
inc
lcall
sbb
add
ret
je
pop
xchg
pop
in
mov
fcompl
cli
sub
icebp
dec
lahf
js
out
aad
adc
mov
fcoml
inc
scas
sub
divl
rorl
daa
fnstenv
dec
inc
jne
dec
lahf
or
popa
jmp
data16
in
bound
sub
mov
push
sub
jae
clc
shll
nop
cld
hlt
dec
dec
mov
push
and
mov
mov
adc
repz
lcall
scas
sbb
mov
pop
pop
in
lods
push
hlt
test
daa
jno
in
xor
ss
push
xchg
or
repnz
pop
mov
jge
inc
pusha
lret
mov
cvttps2pi
scas
lods
fdivs
mov
push
ficoms
pusha
mov
loopne
in
ss
lds
mov
adc
jae
add
adc
imul
movsb
lock
ficomps
push
movsl
xor
iret
aam
pop
sbb
mov
push
je
jbe
jnp
mov
lahf
inc
cs
cwtl
pusha
or
jne
jo
movsl
cmp
inc
dec
add
dec
nop
xor
mov
inc
pop
movsl
addl
mov
std
jbe
jne
sub
xchg
aas
je
or
mov
outsb
push
push
push
cmp
add
mov
mov
cmp
lret
and
out
sub
sbb
mov
pop
mulb
aad
mov
movb
mov
dec
fstl
fbld
ret
inc
xor
push
cmpsb
cmp
inc
jge
ret
ror
xchg
sbb
popa
xchg
inc
sub
push
inc
jmp
adc
xor
fmull
inc
fs
outsb
movsl
jbe
lret
int
cmp
fisttps
mov
mov
sub
aaa
and
mov
dec
ljmp
adc
add
js
int
inc
cli
rcl
cli
mov
icebp
add
dec
mov
inc
arpl
cmp
iret
cwtl
adc
jl
mov
xchg
cmpsl
xchg
dec
xchg
cmp
mov
iret
shrl
sub
add
ret
sub
mov
je
shll
bound
jb
add
or
xchg
sbb
mov
loope
inc
or
jp
sub
int
into
xor
std
stos
stos
adc
sub
inc
mov
jecxz
dec
jmp
jl
inc
xorb
ds
ja
cmp
hlt
mov
add
les
mov
inc
and
adc
and
jl
sbb
fwait
cwtl
mov
into
loopne
out
cmp
arpl
jge
fs
sbb
aaa
pop
aam
inc
jmp
dec
inc
pop
bound
cmpsb
adc
push
sub
jno
mov
test
out
scas
cs
imul
popf
or
outsl
adc
insl
mov
mov
repnz
mov
pop
push
lret
sub
add
loop
inc
dec
lods
lret
add
mov
mov
xchg
sub
ja
adc
mov
mov
cmp
cli
aad
inc
ja
jo
cmp
int
dec
mov
outsl
sbb
pop
xchg
clc
and
adc
ficomps
add
mov
aad
push
pop
mov
sbb
shlb
iret
stos
sbb
jns
out
ret
aaa
and
sahf
and
cli
dec
or
inc
out
ds
leave
out
sbb
dec
mov
mov
cltd
popf
jnp
and
mov
sub
lcall
fdivrl
jae
or
and
jle
pop
or
cmc
jecxz
int3
push
or
movsb
jo
dec
inc
add
push
pop
xlat
test
inc
xor
add
jmp
faddl
loop
sbbb
cmpsb
scas
es
mov
scas
insl
jne
outsb
pop
shrl
rorl
jmp
jb
lock
shrl
roll
dec
flds
mov
dec
ljmp
pop
add
mov
cmp
pop
inc
in
and
in
jo
pop
xor
enter
ss
cmp
out
sbb
inc
or
push
in
fldcw
sti
mov
mov
and
shl
jl
inc
jo
out
mov
or
test
dec
test
jae
mov
push
xchg
ficompl
rcrl
mull
cmp
dec
add
loopne
rclb
stc
mov
scas
daa
iret
lret
jnp
xchg
fcmovu
std
mov
add
ret
add
cmc
jmp
jo
mov
sbb
ljmp
jge
and
bswap
test
adc
ss
add
hlt
sti
lock
inc
sahf
enter
mov
sub
push
movsl
jb
dec
fdiv
add
loop
jae
mov
scas
jb
ds
xlat
xchg
sub
test
call
movsl
mov
mov
fbld
xor
mov
shll
xchg
cmp
mov
cmp
and
lret
pop
xchg
ret
rorl
mov
lahf
xor
addl
pop
mov
inc
or
push
inc
add
scas
or
test
data16
sub
push
imul
add
push
xor
push
daa
leave
adc
lds
or
cmp
ror
cmc
add
mov
int3
inc
inc
dec
add
addr16
mov
cltd
inc
sbb
out
inc
push
lahf
pop
nop
into
add
sbb
xor
lret
scas
push
xchg
and
fmull
and
fs
push
repz
sarl
fmuls
lock
jns
inc
mov
sbbb
and
mov
adc
inc
adc
jge
inc
pop
xchg
sbb
mov
push
dec
cmp
lods
cmp
mov
aam
hlt
out
pop
outsb
push
mov
sub
xchg
je
or
daa
outsb
sub
dec
lcall
repnz
data16
inc
lcall
dec
fsubl
pop
pusha
add
aas
sub
les
push
add
roll
fildll
fnstcw
dec
test
and
in
push
xchg
call
outsb
gs
sbb
xchg
sub
fdivrl
test
repz
out
cmpsl
inc
ljmp
adc
rcrb
out
mov
fs
and
cs
pop
out
pop
xchg
sbb
hlt
dec
es
cmp
or
faddp
out
xor
adc
popf
les
sbb
test
add
mov
cmp
adc
mov
or
or
popf
pop
mov
aam
lcall
pop
and
sub
xchg
data16
pop
and
popa
dec
int3
bound
cmpsb
mov
arpl
xor
and
pushl
repz
push
jo
addr16
push
adcl
mov
sub
push
fwait
sti
lret
and
cmp
neg
push
and
add
push
leave
sbb
mov
mov
ss
pop
jno
orl
mov
or
xor
mov
or
sub
les
push
es
lods
into
pop
call
jecxz
jmp
insb
sbb
in
xchg
in
ljmp
adc
mov
mov
jb
imul
dec
cmc
dec
and
stc
jb
jae
and
mov
push
mov
test
fldenv
sbb
cli
or
jbe
and
push
lods
mov
daa
dec
jmp
std
out
inc
xor
jmp
pop
mov
xor
pop
ret
xchg
push
pusha
mov
xchg
cmc
mov
dec
cmp
cmc
mov
push
adc
xchg
mov
int
mov
dec
out
aam
lods
xchg
pop
imull
jle
lcall
popa
adc
ret
adc
cmc
xor
jns
mulb
sbb
int
shr
test
push
add
jnp
inc
lods
or
outsl
xor
jle
xlat
add
testb
enter
cmp
shll
int3
mov
jns
cs
fcos
or
sti
cli
popa
mov
adc
rcll
cmp
push
shl
std
aas
push
push
mov
xchg
testb
push
dec
mov
sub
dec
push
add
daa
in
addl
repz
call
test
sub
in
test
inc
mov
out
leave
js
popa
lea
pop
fwait
lock
push
movsb
repz
dec
lods
int3
jmp
xor
in
inc
pushf
jo
lret
gs
pop
cmp
ret
das
daa
lret
dec
dec
hlt
imul
add
xor
inc
daa
adc
xchg
xchg
iret
int3
inc
test
push
mov
mov
push
js
rorb
mov
mov
ds
out
mov
xchg
push
int3
sbbb
jle
adc
or
pop
pop
ret
lods
jecxz
es
cmpsl
add
stos
pop
stos
adc
add
cmc
paddw
aas
jno
dec
sbb
mov
pushf
cmpb
add
lods
sbb
inc
jge
push
and
add
pop
sbb
mov
or
cmp
or
cmpsb
pop
jle
stos
test
sub
int
xor
jns
loop
and
adc
test
cs
and
xor
repz
inc
sub
rorl
push
pop
sub
add
fnstsw
movsl
fldz
xchg
les
push
push
push
xchg
xchg
adcl
fs
incb
add
in
nop
es
cltd
addr16
inc
enter
mov
add
clc
outsb
stos
sub
jbe
fisttps
arpl
adc
and
mov
aad
lock
add
mov
jne
sbb
xchg
xchg
inc
or
mov
scas
add
xor
inc
push
jg
cli
push
out
fnstenv
ljmp
mov
jnp
sbb
pop
stos
lcall
das
ds
loop
mov
inc
and
vpunpcklqdq
into
jne
daa
in
outsl
adc
nop
sbb
pop
or
leave
fdivs
mov
sbb
mov
mov
popf
mov
dec
pop
add
aam
test
fistpl
ljmp
push
ja
pop
nop
push
jmp
xchg
rclb
adc
mov
pop
scas
stos
ja
or
jg
sahf
mov
shrb
mov
scas
jo
mov
push
in
xchg
jb
fcmovbe
ja
scas
xchg
sub
subb
push
xchg
inc
mov
pushf
mov
aas
mov
popf
mov
fildll
lods
or
jns
test
inc
xchg
leave
mov
int3
mov
rcrb
adc
js
jns
xor
jns
mov
mov
push
dec
xchg
jp
scas
rcrl
fwait
pop
jl
std
jns
fdiv
cli
lahf
mov
mov
loopne
loope
cmp
xchg
jle
pop
testl
rcrl
or
or
loop
insb
mov
int3
aad
in
daa
add
sbb
ljmp
ja
movsl
jmp
shll
add
and
je
mov
outsb
mov
and
dec
adc
cltd
lea
or
cmpsb
aam
push
scas
in
sti
call
xchg
pop
bound
stc
out
adc
sbb
or
xor
dec
in
dec
out
mov
sub
mov
sub
jne
sub
mov
int3
dec
ja
or
outsl
fldcw
mov
bound
mov
dec
xor
inc
dec
aaa
xchg
or
les
pushf
lods
cs
pop
shlb
aaa
lahf
out
cmp
or
ja
movsb
mov
cmpsb
cmp
add
sarb
sti
mov
cld
adc
mov
in
cmp
je,pn
arpl
iret
fadds
cmpsl
push
mul
popf
aaa
jb
psllq
sbb
jl
fdivr
in
sbb
cmpl
jmp
mov
push
int3
std
nop
add
xor
fsub
je
insb
aam
mov
mov
pop
aaa
hlt
not
cs
dec
fcmovne
push
mov
mov
notl
int3
stos
or
ret
sub
xor
mov
stc
mov
sahf
nop
push
loop
push
pop
push
mov
dec
testl
jae
xor
fistl
in
mulps
int
les
xchg
xlat
test
mov
outsl
lcall
cmp
repnz
std
adc
mov
sub
mov
outsb
mov
jmp
xor
xchg
lds
popa
loop
cmp
insl
xor
bound
adc
jbe
negl
inc
cmp
inc
jnp
xchg
or
xor
ja
jecxz
imul
pop
inc
mov
xchg
xchg
test
add
std
sub
clc
xchg
inc
xchg
int3
jno
test
or
sbb
xchg
ret
repnz
xor
xlat
dec
repz
sub
aam
pop
push
movsb
aam
xchg
movsb
in
imul
outsb
rolb
mov
add
rcll
leave
jp
lods
icebp
adc
test
inc
pop
pusha
mov
out
cld
fistps
in
int3
mov
jl
orb
fs
and
mov
jl
sub
cli
cmp
cmp
jo
fstp
mov
dec
rcl
inc
lahf
in
inc
push
xchg
pop
pop
lcall
push
pop
adcl
push
sbb
xchg
push
and
in
iret
pop
adc
fs
in
mov
or
mov
fbld
mov
cwtl
and
test
sbb
xchg
cmp
flds
imul
or
rcrb
cmp
dec
dec
lods
sub
dec
insl
enter
xlat
into
fcompl
inc
js
dec
aaa
xchg
mov
xor
pop
inc
jno
pop
sub
dec
pushf
push
mov
adc
sub
mov
icebp
and
sbb
dec
push
popa
cld
sbb
inc
clc
insb
cwtl
lret
rorb
rclb
cltd
dec
clc
mov
add
out
lods
mov
sbb
jnp
xchg
xor
or
adc
loope
cwtl
cs
lret
sub
cli
insl
dec
cli
add
pop
fidivrl
in
rorl
popa
jb
sub
mov
jb
mov
pop
adc
scas
in
movsb
inc
rolb
push
xchg
pop
scas
adc
fnstenv
jmp
enter
pushf
in
lcall
jp
push
nop
add
ljmp
negl
movb
jno
jge
cwtl
into
jns
mov
or
adc
xchg
push
test
cltd
xchg
push
movsb
stos
ret
adc
cmp
imul
adc
outsl
popa
cmc
and
jb
sub
and
mov
pop
idivb
push
les
cmp
icebp
push
lds
pop
ror
leave
and
movsl
in
dec
mov
push
dec
and
or
inc
enter
xor
lcall
in
cs
rorl
aam
loop
fidivl
xchg
popa
pop
sbb
adc
adc
fcoml
outsl
dec
and
int3
jno
sarl
push
mov
jl
and
and
push
add
inc
adc
jno
push
fucom
pushf
jno
mov
fcompl
xchg
pop
cmp
out
pop
mov
sbb
loope
in
push
fsubrp
push
or
cmp
sti
mov
clc
call
test
test
sbb
outsl
sbb
cmp
out
rclb
scas
cltd
push
mov
or
addb
add
push
scas
cmp
mov
rorb
cmp
xchg
jp
xchg
aaa
ja
insb
xlat
dec
cmp
xchg
int3
dec
popf
out
xchg
pop
fsts
std
push
ret
push
arpl
jae
fs
xor
jnp
fnstcw
mov
jnp
mov
hlt
stc
loop
add
xor
push
xor
pop
xor
mov
gs
out
xchg
mov
aas
mov
das
xchg
pop
andl
xchg
xchg
icebp
fs
pop
outsl
icebp
ds
cmpl
jne
cltd
fistpl
xchg
out
repz
lcall
jo
xchg
loope
daa
add
cmpsl
xor
adc
pop
and
dec
pop
cltd
sbbl
adc
test
sbb
cmc
jno
fists
xlat
pop
xor
push
jg
add
hlt
std
movsl
mov
sub
dec
out
fdiv
pop
sub
arpl
jbe
pop
aam
or
xor
pop
mov
mov
xchg
mov
mov
jbe
test
push
roll
push
js
cmp
xchg
stos
popa
mov
mov
aad
sbb
lcall
les
xlat
leave
xchg
sub
sub
imul
mov
jl
push
int3
cmp
mov
pop
inc
adc
jae
adc
cli
mov
ret
mov
cmp
mov
push
dec
in
pop
sbb
fnstenv
and
xor
aaa
clc
mov
lods
inc
cmp
sbb
into
push
pop
jge
dec
mov
imul
pusha
push
lock
cs
mov
fisubrs
clc
sub
jecxz
inc
fs
sub
cld
add
rcrb
pop
lods
jmp
pop
test
das
cmpsb
arpl
mov
loope
push
mov
xchg
lcall
dec
test
push
dec
jge
rcll
in
loopne
call
scas
int3
xchg
sub
mov
fiadds
and
cli
loopne
sti
loop
ljmp
int
pop
add
pop
add
jecxz
push
or
js
push
jnp
lret
les
int3
dec
outsl
movsb
lea
test
clc
sub
pusha
add
mov
cbtw
and
neg
cmc
jne
popa
ljmp
jmp
pop
add
and
xchg
cmp
and
call
xchg
and
pop
test
sar
push
fsubrl
fldcw
xchg
sub
mov
adc
push
mulb
sub
es
jo
mov
clc
pop
mov
rorb
jl
jge
addr16
sub
lods
stos
icebp
mov
mov
add
sbb
popf
cmp
inc
sbb
pusha
and
or
sahf
insb
push
xor
mov
push
mov
mov
lret
dec
mov
push
nop
insl
pop
pop
loope
dec
daa
stos
sbb
flds
std
inc
mov
shr
fistl
sbb
ret
pusha
ret
je
not
cli
test
std
das
data16
and
into
cwtl
jle
mov
xchg
sahf
xchg
jmp
xor
inc
or
lret
jnp
mov
mov
movsb
inc
mov
leave
sub
mov
ret
pusha
adc
das
popa
push
sti
test
loop
mov
xor
fsubp
xchg
inc
xor
out
ds
jb
or
out
pushf
je
xchg
xor
in
cmp
inc
fisttps
mov
into
xchg
dec
cmpsl
push
xchg
dec
mov
mov
lea
addr16
pop
movsb
sub
push
js
add
je
shrl
adc
jb
movb
dec
movsl
imul
pop
sub
mov
mov
xchg
cmp
mov
xor
cmpsb
jnp
nop
mov
mov
stos
xor
cwtl
lret
in
xlat
in
testl
lea
shrb
pushf
fsubl
stc
pusha
mov
flds
loop
lds
iret
sub
hlt
mov
sti
pop
fists
ret
jnp
cmp
mov
adc
daa
int
repnz
aas
hlt
sub
fwait
decl
cmp
mov
add
stos
xor
jb
sub
or
ficoms
xchg
sbbl
inc
icebp
jns
sbb
add
pop
push
push
sar
jne
xor
add
xor
xchg
cmp
leave
xchg
mov
sti
cmp
stos
adc
xchg
inc
enter
and
jge
aaa
sub
ljmp
lea
adc
or
arpl
inc
dec
sbb
pop
loope
nop
adc
dec
loope
in
rorl
push
iret
and
xchg
ja
lret
scas
sbb
xchg
mov
mov
fbstp
stc
stos
xchg
jae
xchg
movsl
addr16
and
popa
mov
ret
cltd
pop
out
sti
pop
fwait
xchg
cwtl
mov
scas
imul
mov
push
xchg
dec
cmpb
lods
divb
xor
test
dec
pinsrw
xchg
imul
jb
dec
mov
jge
mov
cmpsl
sbb
mov
pop
imul
xchg
lds
adcb
lret
mov
xchg
out
daa
sbb
movsb
pushf
out
in
jmp
jg
fnstcw
jbe
pop
add
fdivrl
and
mov
cmp
stos
xchg
mov
sbb
push
repz
test
mov
add
leave
add
xchg
fidivrs
loop
mov
pusha
std
push
sar
lahf
outsb
xchg
adc
lret
jmp
mov
lahf
lret
add
adc
inc
mov
loope
data16
repz
xor
icebp
call
fiaddl
ret
mov
les
sub
cmc
push
mov
out
stc
call
add
cltd
insl
divb
jbe
incb
imul
push
pop
enter
aaa
arpl
nop
je
jmp
jae
pushf
nop
mov
jns
sub
insb
add
xchg
xchg
popl
pop
cmp
sbb
or
in
mov
loop
aas
pop
cmp
fst
add
lcall
inc
mov
movsb
fimull
imul
xchg
dec
mov
pop
bound
lahf
mov
cmpsb
in
sub
shrl
loopne
repnz
xchg
inc
cmp
call
jle
int
pop
scas
cmp
xor
fiaddl
mov
push
pop
nop
fisubrs
mov
add
mov
jmp
mov
mov
xchg
dec
stc
dec
mov
mov
jne
negb
lret
dec
out
arpl
sub
xchg
scas
addr16
push
dec
jno
dec
rorb
jg
testl
or
pop
les
into
ss
icebp
outsl
inc
and
jae
sbb
rolb
inc
stos
pop
enter
popf
jge
jge
cli
add
xchg
pop
push
pop
mov
jnp
lret
xchg
push
sbb
int
stc
jnp
cmp
mov
hlt
aas
cmpsl
add
lods
filds
loope
fiaddl
ds
cmp
dec
xor
pop
dec
and
lock
pop
and
mov
clc
xchg
xchg
cmp
data16
lcall
cli
lds
repz
fildll
inc
sbb
mov
push
out
xor
outsl
jb
mov
or
mov
inc
mov
nop
mov
xchg
xrelease
into
mov
in
xor
stos
lods
mov
arpl
stos
or
cmp
xlat
pop
int
mov
mov
das
dec
push
jno
lcall
gs
lods
iret
jo
sbb
mov
add
sub
mov
mov
sbb
mov
sub
mull
xor
jle
jae
push
in
xor
inc
push
lahf
insb
pop
cmp
cmp
mov
xorb
push
push
mov
or
add
inc
imul
negl
jbe
ret
inc
sbb
mov
fldenv
aam
xor
jecxz
mov
cmc
pop
inc
int3
in
xor
pop
xchg
shlb
adc
adc
pop
cmp
lods
sub
test
into
add
xor
sbb
rorb
sbb
jb
shl
dec
shrb
roll
mov
arpl
mov
dec
stos
out
adc
stos
pop
push
inc
inc
divb
data16
lods
ljmp
lock
jge
inc
xchg
mov
stos
bound
shll
jae
adc
pop
out
mov
divl
mov
sti
sbb
movsl
fiadds
xchg
cmp
fbld
ja
loop
sar
mov
sub
push
fwait
add
ror
out
jg
pop
sub
add
mov
insl
push
fiadds
lret
sbb
icebp
and
xchg
xorl
xorb
aas
mov
or
jo
mov
sbb
rolb
and
push
fmuls
test
jle
jle
leave
aam
push
icebp
clc
aaa
je
fcompl
add
lret
adc
xchg
lahf
fwait
popa
mov
es
mov
mov
repz
pushf
fcomps
aas
adc
dec
sbb
push
into
cmp
stc
inc
es
pop
dec
sbb
xchg
and
mov
inc
pop
in
popf
adc
test
pop
std
lock
in
mov
xor
jns
mov
add
aaa
addr16
pop
and
mov
loop
inc
xchg
cwtl
cs
inc
dec
popf
xor
pusha
and
push
mov
cmp
push
jae
xchg
xor
out
or
jno
fildll
jnp
pop
pop
jo
mov
pop
repnz
sub
test
repnz
pop
insb
out
repz
repz
sub
rcrl
pop
push
sub
mov
lea
ret
and
callw
loope
je
adc
pop
out
stos
outsb
cmp
es
adc
les
sub
movsb
mov
decl
and
mov
inc
xchg
leave
mov
cmp
jl
inc
xor
imul
ja
mov
pop
sbb
and
jno
in
push
loope
scas
cli
cwtl
mov
pop
mov
adc
in
in
xchg
das
insl
rclb
into
out
mov
push
sbb
xchg
mov
enter
ret
inc
add
add
xchg
inc
sbb
xchg
push
cmp
xchg
or
add
icebp
arpl
dec
xor
mov
sub
xor
cmp
mov
and
cld
mov
lcall
push
fcoml
push
outsb
call
call
lods
or
and
cmpsb
mov
jge
push
cmp
mov
push
pop
add
jle
add
mov
xchg
or
push
ret
mov
add
mov
sar
xchg
pop
xchg
mov
movsb
or
cli
ret
lds
xor
dec
add
jmp
dec
enter
iret
fs
xlat
mov
into
js
fwait
jne
out
push
fwait
iret
sahf
fucomip
aad
pop
adc
mov
mov
mov
mov
fidivrs
popf
rclb
sbb
adc
mov
xchg
mov
xlat
sub
cwtl
adc
insb
aas
pop
adc
cld
incb
sub
stos
shll
pop
nop
xlat
ret
imul
fcmove
mov
cmp
mov
push
xchg
mov
or
push
lods
fstps
movsb
hlt
scas
repnz
sbb
sbb
mov
out
add
insl
cmpsb
bound
ror
pxor
loope
mov
cmc
pusha
pop
jl
clc
and
lods
jnp
fdivs
shl
jno
sbb
mov
andl
xchg
jmp
cmp
jae
sbb
ds
xchg
mov
in
xchg
out
xchg
cltd
scas
inc
and
pusha
imul
mov
jo
inc
jns
dec
mov
fdivrs
es
movb
inc
mov
scas
aad
xor
aam
push
stc
xchg
sbb
and
arpl
lds
aaa
jl
shll
cmp
ss
mov
insl
ret
imul
mov
xchg
fnsave
scas
std
push
dec
pop
orb
push
mov
mulb
adc
sbb
xor
pop
mov
and
es
mov
mov
pop
or
xchg
add
xlat
mov
pop
add
mov
add
lcall
xchg
or
xor
or
mov
pusha
push
sbb
lods
fisttps
vpsraw
jp
loop
dec
pop
lcall
out
imul
std
mov
mov
push
in
and
ja
jle
arpl
inc
aad
cmpsl
push
out
fnsave
repnz
xchg
sbb
mov
jp
addr16
subb
fildl
fcomps
inc
mov
loope
fnstsw
iret
sub
add
imul
scas
sbb
lods
ret
dec
ds
dec
test
mov
jle
sub
aaa
lret
mov
or
mov
cli
int
fcmovnu
icebp
ficomps
push
movl
push
mov
mov
imul
loop
fdivrl
test
mov
push
xchg
fsub
inc
push
mov
shll
jo
cltd
mov
sub
js
xchg
in
mov
jno
nop
rorl
movl
inc
filds
sub
xchg
imul
push
stos
or
out
lods
or
sub
enter
adc
lock
rolb
or
jo
or
mov
mov
cs
out
enter
sti
jle
xchg
outsl
cmp
jmp
ret
leave
ljmp
mov
mov
xlat
and
sub
xor
jp
je
jno
fcompl
loope
jnp
aam
xor
xlat
inc
push
sbb
mov
hlt
pop
jl
cmp
and
imulb
pop
xchg
and
sar
mov
pushf
test
loop
aam
inc
mov
mov
sub
pop
inc
andl
loopne
repz
dec
lret
out
and
add
sbb
mov
mov
sub
stc
inc
jmp
jg
inc
jb
xor
pop
xchg
mov
dec
cltd
xchg
push
adc
jno
popa
pop
sub
push
nop
inc
mov
xchg
test
mov
push
movsl
fcoms
movsb
sbb
pop
das
pop
pop
jno
jle
dec
stos
dec
inc
lods
pushf
jmp
mov
int
in
outsl
or
mov
dec
or
scas
xor
lahf
lods
fistl
sahf
dec
jns
jno
push
xlat
mov
or
pop
adc
out
mov
inc
cwtl
dec
mov
push
mov
mov
test
or
mov
pop
inc
jne
daa
xchg
push
mov
into
or
movsb
shlb
mov
mov
in
cmpsb
sahf
call
or
mov
xchg
push
inc
dec
hlt
icebp
jo
add
mov
jno
jns
leave
bound
aam
std
aas
or
int
mov
pop
cmp
sbb
dec
push
cld
xor
dec
loopne
push
inc
test
jb
loop
add
push
aaa
push
adc
lock
mov
test
dec
sub
mov
and
sarb
mov
jg
mov
jno
mov
cmp
mov
outsl
push
cwtl
mov
out
das
lods
adcb
cld
add
rclb
call
sub
fwait
insl
lret
pop
dec
sahf
aaa
aaa
jcxz
xor
pop
xor
repnz
lcall
sbb
push
push
mov
push
arpl
cmp
ljmp
idiv
xchg
cmp
cmp
imul
push
subl
xorb
mov
roll
std
sbb
jge
cwtl
in
add
pop
aaa
push
mov
int3
test
push
cmp
fmulp
rclb
inc
shlb
stos
ja
scas
pop
scas
in
mov
mov
or
inc
arpl
dec
cmp
pop
jmp
mov
imul
sbb
repnz
fldt
jge
inc
jg
jb
mov
xchg
out
jg
xchg
in
mov
xchg
repnz
inc
sbb
and
push
stc
les
mov
cmpb
fnstsw
cmpsb
mov
sub
mov
popa
xchg
ds
ljmp
dec
sub
faddp
push
iret
pop
stos
aad
inc
subl
add
cld
pop
ret
and
loope
xor
lahf
mov
add
mov
pop
pop
lahf
mov
adc
enter
inc
cs
sbb
gs
ret
stc
fstp
dec
push
cmpsl
cli
out
mov
in
xchg
and
push
daa
mov
test
dec
add
int
pop
fstpt
sub
mov
mov
daa
mov
rcl
sbb
aam
int
cmpsl
imul
pusha
pop
adc
hlt
xor
jne
fldt
pop
ficompl
mov
and
loope
cmp
rolb
cmpsl
rclb
cld
push
in
and
loope
ljmp
or
add
pop
pop
dec
jmp
jmp
shrb
xor
shlb
jno
push
sti
bound
add
mov
fisttps
fcmovne
cmp
cmp
pop
mov
imul
fwait
xchg
lcall
insl
pop
test
add
fcompl
lods
xor
test
push
mov
fidivrs
lods
mov
inc
push
call
mov
adc
sahf
clc
pop
inc
outsl
ss
in
repnz
pop
xlat
pop
pop
push
rol
sbb
mov
fdivp
loopne
fildll
stc
push
dec
pushl
std
jl
or
cmpsl
sar
in
into
bnd
cltd
push
pusha
mov
push
fxch
es
inc
jmp
fsubl
lret
in
enter
mov
push
pushf
xchg
mov
ficompl
mov
cmp
inc
js
ficoml
dec
xchg
push
das
or
mull
pop
mov
dec
jge
outsl
xchg
adc
mov
shrl
pusha
pop
call
cmp
xor
es
push
out
adc
and
adc
mov
push
pop
data16
jecxz
jge
rolb
lea
sub
and
add
push
add
inc
xchg
cbtw
outsb
xchg
insl
xor
dec
lcall
fdivs
mov
adc
addr16
cmp
shll
sbb
cmc
andb
int3
jp
dec
mov
cld
daa
dec
scas
mov
loope
das
or
pop
cld
cmp
popf
movsb
inc
xchg
inc
jle
lahf
andl
adc
dec
pop
mov
push
shlb
push
test
call
fchs
or
inc
ss
je
or
add
popa
pop
mulb
push
imul
cmp
adc
lods
inc
in
add
popa
and
leave
jno
js
sbb
dec
in
je
pop
cmp
call
sbb
xchg
dec
mov
enter
movl
adc
cmpsl
jns
cmp
sub
data16
jge
push
jne
int
mov
rcrb
ja
stos
mov
arpl
adc
lahf
dec
shll
inc
mov
call
jno
gs
icebp
or
mov
cmp
add
lahf
cmp
mov
sbbb
ss
xlat
cmp
jno
mov
adc
insb
nop
adc
xor
in
hlt
mov
xlat
mov
inc
in
js
fwait
sbb
out
push
aaa
lods
mov
lcall
jbe
js
mov
jl
jnp
xchg
jge
add
sahf
xor
test
shll
and
jo
cmpsb
or
mov
test
cltd
mov
jns
sub
into
outsl
cmp
sbb
push
das
inc
cmp
lods
test
cld
mov
jge
sti
and
mov
xor
adcl
xor
xchg
cli
adc
rcr
out
mov
pusha
imul
mov
mov
test
mov
lods
push
fisttps
cmc
xor
mov
add
ret
adc
pop
sub
scas
lods
daa
shll
push
adc
insb
or
repz
aam
xchg
mov
lret
xchg
in
mov
and
dec
cmpsb
rol
rcrb
and
ret
xchg
iret
lcall
cld
sbb
sti
cmp
xchg
cmp
insb
inc
out
divb
and
mov
add
movsl
clc
dec
mov
sbb
fisubrs
jmp
movsb
popa
sbb
shlb
adc
pop
pop
xchg
add
aaa
or
imul
gs
adc
mov
std
stos
mov
lcall
enter
push
add
lcall
ljmp
pop
sti
fdiv
sbb
in
sub
pop
loop
test
cwtl
and
out
test
test
pop
mov
lcall
inc
sbb
mov
add
repz
and
in
push
xchg
mov
jb
jb
cmc
xor
sbb
jbe
jb
leave
lcall
mov
movl
stos
scas
push
mov
fadds
jae
stc
xor
movsl
imul
jmp
cli
xor
subl
adc
lea
pop
mov
jg
mov
sti
loop
push
out
jle
pushl
jne
dec
or
leave
sbb
mov
xchg
daa
es
leave
inc
push
push
mov
subps
int3
imul
push
cmc
outsb
add
test
xlat
jns
and
push
hlt
js
jl
scas
dec
inc
das
jge
xor
add
push
leave
adc
popa
jl
xlat
inc
mov
add
xchg
into
jmp
subb
xchg
imul
lods
loope
xchg
lea
aad
inc
loopne
push
cmp
cmp
lret
push
pop
fsubrl
bound
cmovne
mov
jmp
popa
insl
mov
push
imul
out
and
dec
movsb
stos
dec
sub
add
push
mov
push
rcll
mov
sti
ret
lcall
and
xor
ret
orl
loopne
add
sbb
xchg
sar
ss
loope
test
cmp
addl
mov
in
ja
push
pop
xchg
iret
adc
cmc
out
les
pop
inc
or
mov
lahf
pop
sbb
int3
mov
js
add
imul
xchg
mov
jecxz
lret
daa
mov
rolb
push
gs
cli
outsb
add
sub
cli
dec
addr16
inc
sub
ljmp
pusha
jne
hlt
mov
fsts
arpl
dec
inc
rcrl
and
or
jp
dec
and
push
arpl
les
pop
xor
mov
pop
arpl
add
xchg
pop
sub
push
and
cmpsb
jnp
sti
xor
fnsave
push
jb
out
ret
sub
jns
sti
in
sub
jnp
xchg
sbb
cmp
mov
andb
loope
cmp
aaa
mull
lods
dec
ljmp
cs
jp
pop
daa
into
shrb
mov
test
movsl
sub
fstpl
mov
sub
xchg
ret
clc
push
mov
sti
cmpsb
add
in
stos
xor
xor
adc
push
cld
mov
lods
sbb
mov
into
mov
jl
mov
cltd
out
mov
imul
lret
repnz
pushf
or
adc
lds
insb
scas
lds
mov
rol
push
into
loop
cli
sahf
jno
or
jno
xchg
stos
test
xchg
push
lret
sub
dec
das
rcr
xor
xchg
lret
pop
cmc
loope
inc
shrl
cmpsb
fsubs
xchg
or
dec
stc
loopne
dec
inc
jno
out
test
xchg
fwait
movsl
xor
js
push
adcb
test
or
adc
or
mov
fsubrl
cmp
fwait
popa
jp
pusha
aaa
mov
rcrl
lods
fisttps
clc
loope
mov
pop
dec
ss
mov
ret
jmp
pop
sub
inc
fisubl
dec
jae
cwtl
mov
sbb
pop
mov
or
push
bound
cmp
dec
cwtl
jbe
mov
jge
lock
daa
jecxz
pop
daa
cmpb
or
mov
inc
or
mov
push
cs
imul
cs
outsl
cmpsb
pusha
sbb
das
int
xchg
adc
loop,pn
push
pop
aaa
mov
push
movsb
mov
dec
loope
in
push
xor
fsubl
stos
or
jp
sbb
out
inc
or
jle
stc
sbb
pop
nop
mov
push
stos
push
and
stc
cmpsl
mov
adc
xchg
inc
pushl
js
test
jae
xor
xor
dec
mov
call
in
ficompl
pop
mov
in
and
xor
dec
add
shll
mov
dec
push
bound
fcomip
mov
cmp
xchg
loop
xor
mov
push
cmp
dec
adc
pop
sub
loope
lcall
dec
sbb
mov
cltd
pop
sbb
push
dec
cmp
mov
mov
mov
fcomps
mov
xlat
cwtl
shll
inc
push
pop
shrb
inc
notb
std
lcall
loop
xlat
pop
cli
add
adc
cltd
xchg
xor
mov
mov
xchg
xchg
add
mov
aas
mov
ret
add
lods
sub
inc
push
pop
lret
and
jmp
mov
push
and
insb
imul
push
xchg
mov
pusha
lcall
push
stos
inc
push
jge
mov
push
push
xchg
test
mov
lahf
dec
jmp
xor
pop
inc
ficoms
sbb
cld
push
push
sbb
mov
pop
inc
cmpsl
xor
mov
out
or
sbb
cmc
adc
xchg
mov
pop
pusha
fdivs
mov
xor
xor
mov
push
or
lahf
enter
lock
call
sub
xlat
enter
mov
fisubrs
jl
inc
mov
mov
xor
sbb
push
cmp
fsubl
scas
xchg
outsb
push
xchg
lods
xchg
jl
mov
loop
imul
dec
fisubrs
jmp
pop
movsb
inc
es
add
stos
xor
mov
pop
pop
dec
pop
dec
fildll
xor
faddp
test
and
fcoms
mov
aas
inc
in
lcall
xor
cmp
mov
iret
mov
enter
add
push
loope
xorb
jne
shll
je
add
push
push
loopne
negl
push
popa
dec
adc
xchg
shrd
out
loope
sub
movsl
hlt
mov
cmp
es
fidivl
and
jl
fsubrs
xor
push
mov
inc
bound
push
rcll
test
push
sub
adc
xchg
inc
sub
in
xchg
push
fildl
cld
jge
lods
or
pop
repz
cmp
pop
mov
adc
sbb
daa
lcall
loop
xchg
mov
mov
mov
lds
cmp
push
push
bound
mov
insb
call
cs
adc
cmp
xchg
jmp
xchg
mov
inc
cmp
subb
dec
mov
adc
cltd
ret
xor
rcrb
fcmovbe
sahf
sub
dec
xchg
jne
mov
xchg
shll
enter
cwtl
pop
outsb
fcom
popa
scas
inc
arpl
mov
inc
pop
movsl
ja
loopne
stos
mov
in
sub
hlt
adc
lret
sbb
cmp
inc
cmp
pop
dec
sub
es
out
test
imul
ss
xorb
push
insb
call
xor
leave
jg
sub
imul
mov
jecxz
jg
mov
mov
adc
stc
cmp
xchg
and
ljmp
or
adc
fildl
iret
jmp
adc
test
pop
cmp
das
jl
push
mov
stos
xlat
in
xchg
pop
pop
fs
fisubrs
inc
push
mov
xchg
add
andl
or
and
jo
sub
mov
nop
into
mov
inc
xchg
testb
and
cmpb
xor
int3
pop
add
and
cmp
push
imul
and
fmul
mov
add
adc
sub
subl
stos
aas
xchg
std
icebp
insl
xchg
ss
ja
push
lds
pop
scas
mov
and
dec
dec
imul
js
mov
pop
bswap
xchg
add
push
js
pop
xchg
mov
adc
sbbl
push
call
xchg
jne
xchg
dec
rcl
stos
sahf
pop
and
xlat
ss
adc
je
sbb
mov
sbb
mov
insb
xor
inc
or
push
inc
adc
in
pop
inc
std
in
xlat
mov
mov
xor
call
inc
pop
pop
pop
testl
mov
sub
ds
mov
lret
scas
dec
mov
push
xchg
dec
add
dec
and
mov
xchg
push
add
shrl
ffree
idivb
push
mov
sahf
lahf
add
mov
adc
lcall
mov
and
or
ficoms
mov
subl
dec
stos
dec
enter
inc
es
cli
or
outsl
pop
sbb
std
pusha
mov
pop
inc
cmpsl
sbb
and
dec
insb
push
sub
mov
movsb
aaa
mov
loop
div
mov
dec
je
push
fisubrs
int3
insl
inc
lods
popf
xor
adc
xchg
jnp
jp
out
aaa
mull
sbb
sarb
mov
and
or
cmc
addr16
push
inc
mov
scas
das
scas
out
mov
mov
movsb
loopne
je
xor
aam
sub
lret
pushf
fsubr
or
in
push
ja
pop
enter
push
or
lret
cmp
cmp
outsl
adc
mov
or
add
dec
decl
std
and
mov
jmp
mov
icebp
add
xchg
cmpsb
loopne
xor
or
xchg
mov
scas
xchg
pop
xchg
push
inc
sub
aas
cwtl
out
add
mov
inc
pop
dec
pop
lods
or
mov
mov
push
fistpl
lahf
into
inc
jp
arpl
imul
aam
or
stos
xor
cmp
in
inc
lock
rcrl
xchg
pop
in
xor
pop
das
cmpsl
andl
shl
hlt
mov
pop
lods
mov
ret
movb
enter
iret
not
mov
mov
insb
aam
loopne
add
pop
cmpl
testb
xchg
sbb
std
gs
imul
xchg
and
cmp
xor
aam
add
mov
add
lcall
je
fstp
dec
mov
insl
in
dec
bound
insb
sbb
xchg
pop
push
scas
jge
notl
movsl
aam
loope
lods
xchg
pop
inc
daa
inc
mov
sub
test
adc
mov
mov
sbb
data16
scas
and
push
out
and
sbb
repnz
icebp
fsts
jb
inc
adc
fsubr
cmp
lock
popf
aad
insl
mov
sbb
and
mov
mov
rolb
xchg
sbb
sbb
cmp
or
add
mov
mov
adc
sub
push
jmp
xor
push
inc
and
jp
mov
lret
outsl
filds
insb
call
cwtl
std
pop
insb
hlt
inc
add
cmc
es
xchg
aaa
fcmovbe
jmp
mov
out
cwtl
fcmovnbe
andb
pop
and
test
sub
and
push
arpl
enter
jl
sub
pop
aas
out
sub
ss
pop
or
jp
inc
inc
jp
pop
in
sub
xor
lret
mov
jbe
imulb
mov
xor
adc
mov
jnp
ds
inc
je
mov
mov
jne
jns
push
add
sbb
call
and
ljmp
pop
outsb
cmp
and
aam
cmp
mov
xlat
ret
fstpt
addr16
jecxz
xchg
mov
push
imull
add
sub
jae
je
mov
fnstenv
sbb
js
cmp
and
lods
or
outsl
mov
adc
out
ret
inc
sbb
pop
xor
or
dec
mov
jb
jb
or
xchg
and
stos
push
cmc
outsl
std
adc
dec
fsubr
add
cmc
out
inc
push
incl
lock
xor
dec
rcl
cmp
out
dec
sub
sarb
add
fimull
test
out
pop
mov
or
imul
sub
inc
fimull
mov
clc
adc
pop
out
into
mov
iret
out
mov
xchg
notb
bnd
mov
inc
mov
push
jae
mov
jbe
jl
dec
arpl
mov
mov
imul
icebp
xchg
xchg
mov
sbb
jecxz
stos
outsb
ret
std
push
loopne
shlb
jle
lea
lahf
xchg
push
imul
xchg
push
adc
imul
jle
icebp
and
push
add
pushf
adc
popf
xlat
lock
fadds
loop
rorl
or
cmp
dec
aad
xchg
hlt
iret
mov
outsb
xor
ljmp
lcall
adc
adc
xchg
cltd
add
jno
fcomi
cmp
pop
add
mov
ret
ret
jnp
into
add
pop
xchg
movsl
pop
lea
adc
daa
cmp
xchg
fdiv
sub
jecxz
loopne
jne
mov
roll
cmpsl
loope
lcall
mov
sysenter
fsubl
inc
das
aad
mov
jmp
mov
lcall
mov
adcl
mov
mov
jmp
mov
mov
xchg
icebp
orb
lock
cwtl
jle
mov
lds
aas
sbb
ficomps
es
mov
push
adc
jecxz
jno
xchg
mov
xor
popa
fs
dec
jmp
repz
in
in
pop
mov
jmp
pusha
pop
push
and
sub
jno
mov
jno
imul
stos
pusha
cmp
jnp
shll
rcrb
inc
loop
icebp
hlt
mov
push
lret
cs
icebp
movlps
loopne
test
sbb
clc
or
adc
add
sbb
jge
loope
stos
out
push
jo
sub
mov
inc
jo
xor
pop
xor
inc
in
aaa
popf
push
xor
sub
mov
loopne
fs
cltd
and
cltd
dec
mov
leave
mov
add
cmpl
incl
mov
in
push
gs
inc
sbb
cmpsb
ljmp
jp
sbb
cmp
je
sbb
inc
jo
add
mov
mov
stos
in
sbb
imul
mov
sbb
cmp
cwtl
fnstcw
outsb
and
loopne
jge
push
insb
and
mov
jns
mov
lds
mov
movsl
cltd
mov
setnp
enter
shrl
mull
jbe
jns
cmp
inc
lods
idiv
xor
out
xchg
mov
das
mov
push
inc
push
test
ficoms
pop
cmp
ret
popf
and
ja
pop
or
add
mov
mull
cmp
cmp
lds
dec
jle
loop
push
lret
testb
jl
sub
xchg
sub
outsl
aad
pop
lret
data16
cld
in
push
mov
lcall
jbe
jbe
sbb
int3
mov
fwait
jg
cmc
xchg
xor
hlt
daa
addl
pop
add
fsubrs
out
frstor
imull
lods
and
inc
negb
js
fistps
sarl
cli
test
dec
bound
add
sub
push
cmp
jne
mov
in
subl
jo
mov
jo
leave
in
fs
movsb
in
xchg
sub
aam
mov
ja
jge
loop
sarl
xor
iret
adc
adc
xchg
push
sti
xchg
cs
dec
loop
les
or
xchg
loope
inc
ret
test
insl
arpl
jle
repnz
je
stos
jns
mov
fisubrs
or
add
insl
aaa
jp
pop
into
loop
pop
addr16
cmp
aam
popa
jecxz
addr16
insb
call
sub
jmp
xor
fisubrs
fstpt
decl
dec
pop
std
cmp
imul
hlt
fcoms
jmp
inc
cmp
das
cld
jg
pop
pop
mov
inc
fsts
sti
cs
jns
push
add
dec
rcrb
xor
lds
gs
xor
scas
jge
in
fwait
mov
clc
mov
imul
scas
and
mov
lds
out
push
add
addb
inc
test
pop
test
hlt
pop
push
and
fildl
or
and
add
push
clc
pop
inc
adc
divl
ja
aad
scas
fcomp
stos
stos
fcompl
pop
ja
jb
mov
test
shll
pop
jns
mov
sarl
imull
dec
dec
push
movsl
dec
stos
cli
mull
inc
out
pop
mov
mov
mov
sarl
mov
sub
cmp
rorl
add
mov
or
aas
insb
adc
inc
add
pop
fadds
mov
in
sahf
mov
xor
fidivs
mov
aam
popa
mov
jge
insl
mov
push
lcall
push
jge
lret
jg
mov
jp
push
adc
cmp
imulb
inc
mov
or
jl
dec
fucom
lock
mov
les
fbld
mov
sub
or
xor
gs
mov
jnp
loopne
test
rcrl
dec
lods
out
cmp
icebp
sub
fwait
roll
sbb
push
in
js
jg
dec
and
insl
sbb
int3
pop
sub
idivb
xor
jo
dec
xchg
movsb
dec
or
std
hlt
mov
adc
vcmpsd
cmp
cld
xchg
add
xchg
sahf
adc
and
test
and
enter
cmp
clc
ret
repnz
sub
icebp
cmpsl
cli
xchg
out
addl
test
shrb
call
push
xor
mov
adcl
inc
xor
pop
in
jle
dec
or
insb
dec
adc
xor
xlat
mov
in
mov
sti
fadds
cltd
pusha
movsl
pop
subl
lahf
push
inc
sbb
out
es
pop
xchg
hlt
ss
imul
fidivrs
pop
mov
icebp
cmpsl
enter
es
mov
int
lods
ja
push
negb
mov
aas
add
pop
dec
lds
fisttpll
mov
or
fcos
sbb
rclb
insl
stos
outsb
pop
push
pop
add
sahf
xchg
cmp
cmp
iret
jne
pop
push
mov
dec
sti
fwait
ljmp
mov
xlat
es
cltd
insb
mov
icebp
out
xchg
xchg
stos
xchg
lret
xchg
jno
jl
cmp
popa
imul
xchg
test
or
mov
push
push
adc
cmp
pushf
aad
pop
lock
inc
in
nop
out
sbbl
mov
mov
pop
in
jnp
cs
dec
in
mov
and
mov
es
push
ret
fs
mov
cltd
imul
push
or
aam
jnp
lock
gs
inc
imul
add
adc
jge
arpl
mov
in
rolb
lcall
xchg
mov
insb
jg
adc
popf
je
fdivl
jns
xchg
mov
movb
loop
mov
ja
adc
enter
jle
and
or
sahf
lahf
push
mov
gs
lods
es
das
mov
mov
fmul
dec
push
jmp
xor
dec
jns
data16
mov
scas
insl
mov
inc
fbstp
cld
test
mov
ja
rcll
xchg
or
loope
mov
leave
mov
ret
bound
stos
or
iret
dec
adc
out
je
mov
push
pop
int
push
dec
cmp
mov
aas
outsw
and
shll
mov
pop
add
jp
sbb
xchg
sbb
sarb
xchg
dec
rcrb
and
mov
cs
bound
jge
pop
shll
push
scas
imul
xor
push
inc
jno
cmp
mov
ss
sub
add
out
mov
in
cmp
pop
loop
cmp
fs
add
mov
cmp
xchg
lcall
dec
push
bound
xchg
cltd
stos
mov
adc
rcr
xor
cmp
insl
out
or
scas
ds
imul
jb
sub
jbe
lcall
push
mov
cmp
scas
mov
pusha
mov
lds
sahf
sbb
ffreep
sub
mull
xor
xchg
outsb
add
push
cmpsb
aaa
shlb
adc
stos
clc
shl
dec
xor
outsb
cmp
jb
addb
pusha
mov
jns
shrl
adc
nop
les
inc
jl
imul
and
sub
aaa
mov
mov
lea
call
mov
adc
lds
and
cmp
mov
jp
and
add
mov
fnsave
mov
jg
pushf
lret
xorl
fwait
xchg
outsl
ret
test
imulb
add
push
mov
ffree
fiaddl
std
das
cld
lds
int
icebp
ds
aaa
test
mov
in
push
xchg
lret
in
sahf
mulb
test
fistpll
ljmp
adc
mov
jp
or
clc
mov
push
push
cmp
hlt
lds
inc
lret
cmpsb
and
jno
into
or
sbb
add
jno
popf
addl
sti
xor
les
pushf
adc
data16
push
std
inc
rolb
mov
mov
into
xor
in
jg
pop
push
jnp
sbb
and
sub
or
cmp
adc
cmc
inc
pusha
xor
jb
ss
imul
push
dec
cld
xchg
cli
lcall
push
leave
aas
jo
stos
es
mov
mov
loop
shrb
fs
mov
inc
push
and
cwtl
fistl
xchg
test
out
mov
hlt
dec
roll
mov
adcl
addb
cmp
outsb
xchg
adc
rolb
into
xchg
inc
mov
cmp
aaa
xlat
push
cltd
aaa
faddl
xchg
repz
outsb
daa
cmp
hlt
xchg
sub
push
shr
mov
loope
orb
lods
jb
cmpsl
mov
in
aas
add
outsb
lods
cmpsb
jle
mov
test
xchg
jp
imul
pop
jecxz
mov
lods
jne
xchg
in
pfnacc
fldt
fstps
push
jae
xchg
gs
lea
cmp
mov
jge
mov
xchg
cld
cmp
mov
xchg
daa
movsl
mov
sub
insl
mov
xrelease
gs
repnz
popf
iret
mov
xor
lods
leave
daa
repnz
insb
lahf
out
mov
outsl
jne
mov
leave
ljmp
ss
jb
sub
test
add
mov
or
cmp
or
ljmp
adc
in
cmpb
in
fimuls
into
inc
movsb
inc
adc
hlt
add
jp
popa
sbb
push
push
jp
inc
adc
out
sahf
push
inc
aas
xor
push
and
cli
mov
int3
das
cmp
lods
sbb
pop
leave
adc
lcall
outsl
hlt
cmp
pop
daa
fwait
inc
dec
sahf
sbb
jg
fistpl
push
sbb
cmc
addr16
xor
in
dec
or
fnstcw
add
leave
fcomps
xchg
lods
fdivr
sbb
jmp
sub
sub
in
sub
sar
sub
inc
dec
daa
jmp
and
jl
push
push
jge
ret
int3
stos
ret
inc
mov
jp
mov
lahf
xchg
aas
mov
stc
cmp
imul
pushf
mov
frstor
push
cld
adc
cmp
sbb
xor
aas
jecxz
lea
loope
test
lock
loope
dec
fsub
dec
jae
sub
xchg
aad
iret
shrb
adc
sub
pushf
xor
add
push
leave
jb
mov
sbb
and
stc
ret
xlat
adc
aas
je
sbb
dec
lods
in
xchg
xchg
jmp
addb
and
gs
aad
sub
dec
xor
xchg
xchg
xor
mov
push
or
pop
outsb
jp
inc
pop
cmpsb
and
mov
in
dec
adc
imul
sub
ficoms
dec
es
adc
mov
jb
push
les
inc
xor
cmp
arpl
loop
icebp
testb
cs
or
and
fisubl
adc
pop
out
lock
add
jns
mov
sarb
ret
insb
sbb
jae
daa
jmp
cli
mul
adc
aad
dec
ret
and
adc
ret
aam
xor
test
lahf
pop
fistpll
jbe
aaa
mov
dec
stos
sbb
sub
xchg
subb
test
xor
stos
les
jbe
mov
ljmp
xchg
test
shr
mov
pop
in
sub
mov
divl
sub
sub
cmp
pushf
dec
pop
sbb
mov
or
sbb
push
sti
cmp
sub
sarb
mov
xor
and
leave
xchg
cmp
scas
ja
fwait
shr
pop
imul
jno
aas
sbb
jp
xlat
into
and
mov
lahf
xchg
xchg
in
pop
andb
fldl
xchg
inc
add
shl
divb
xchg
stos
iret
push
lret
xchg
add
int
mov
loopne
inc
adc
shr
das
cmp
iret
jge
pop
ret
cmp
push
repz
xor
and
push
sbb
loop
dec
sbb
cmp
rcl
lds
jb
jne
rcr
pop
pop
out
dec
cmp
fcoms
stos
sbb
cmp
outsb
lahf
out
jnp
lcall
dec
mov
jg
clc
out
sbb
dec
insl
rdmsr
and
cli
jne
cmp
imul
push
ds
add
mov
xor
movsl
dec
lret
test
inc
pop
adc
pushf
ror
jp
rorb
lcall
cmp
pop
cmpsl
sub
mov
xchg
stos
and
mov
jg
mov
push
roll
cmp
xor
out
mov
ljmp
stc
loop
icebp
pop
loop
icebp
lcall
lcall
mov
shrl
loop
sbb
movsl
clc
fldt
dec
data16
add
pop
fcompl
imul
xor
insl
mov
lds
stc
call
or
sarl
xchg
js
mov
mov
and
fidivs
hlt
ror
repz
fdivr
popf
lods
test
test
or
mov
loope
popa
lods
in
scas
sub
das
adc
shll
mov
es
test
mov
lcall
shlb
sbbb
shl
push
xchg
lcall
push
sti
fimull
jae
jnp
aad
jns
pop
xlat
mov
inc
jbe
dec
addr16
aam
rorl
mov
dec
pop
xchg
push
push
mov
pop
lds
cmp
fidivl
sub
sbb
xlat
or
aad
pop
sbb
in
jl
dec
pop
xor
into
popa
push
mov
push
fwait
sub
dec
xchg
adc
ss
add
rorl
ljmp
sbb
je
sti
mov
jmp
or
fsubs
dec
popa
add
gs
sbb
rorb
jae
xor
ret
push
fsubr
imulb
add
push
or
scas
mov
sbb
out
loopne
push
mov
push
imul
ljmp
js
scas
and
je
jge
fisttps
stos
or
pop
jle
idivl
sub
dec
movsl
fdivrs
sbb
pop
pop
cmp
andb
and
aad
cli
loope
fimull
fnstenv
dec
in
cmp
mov
leave
pop
into
dec
jnp
out
icebp
jb
mov
adc
jg
dec
mov
mov
push
insl
adc
add
cli
js
mov
mulb
roll
push
mov
stos
pop
mov
mov
sbb
dec
mov
push
or
xor
sahf
iret
jecxz
sub
mov
push
mov
es
fs
in
enter
and
xchg
rcll
xchg
repz
dec
test
jg
xor
sub
bnd
cmpsl
shrb
out
shll
mov
push
xor
in
xchg
adc
popf
jl
pop
in
enter
rsqrtps
mov
cwtl
or
jle
adc
sti
dec
push
in
pop
inc
push
sbb
mov
divl
push
inc
sub
in
movl
aaa
js
push
cld
xor
arpl
adc
xchg
faddl
les
mov
test
xchg
mov
xor
sbb
adc
cmc
pop
div
xor
cmp
out
push
add
lcall
in
movsb
mov
lahf
xchg
mov
sbb
inc
mov
icebp
bound
cli
mov
xor
shrb
ljmp
push
or
xchg
fucomp
clc
out
push
outsl
adc
add
adc
lock
mov
inc
jmp
add
cmp
mov
loope
call
inc
arpl
and
clc
jb
xchg
sbb
mov
rol
ja
push
out
sub
mov
lods
fnstenv
stos
pusha
adc
lret
ret
pop
stos
inc
or
call
xor
into
xor
jg
int
add
fcos
inc
sbb
cmp
and
adc
mov
mov
cmp
push
or
cld
sete
xchg
test
push
sbb
adc
inc
mov
pop
xchg
stos
ss
add
enter
das
ja
add
cmp
jne
sbb
adc
xlat
imul
push
mov
stc
cmp
pusha
xchg
and
inc
pop
sbb
cld
mov
mov
jecxz
imul
or
push
add
xchg
jns
dec
push
push
pop
imul
lods
fchs
shlb
imul
push
pop
fists
movl
fcompl
jo
jb
mov
sbb
xchg
push
aad
mov
push
pop
adc
sahf
lret
cmp
or
sbb
out
out
adc
aad
xchg
fnstsw
rclb
dec
dec
xchg
jp
pushf
psubd
pop
mov
aad
sahf
mov
or
scas
test
incb
dec
aas
ljmp
push
mov
arpl
cmpsl
jo
fadds
loope
addb
mov
mov
jns
sbb
mov
outsb
jno
pop
xor
subl
ljmp
mov
xor
xor
aas
pushf
cmpsl
inc
insl
roll
mov
jo
sub
aad
insb
xchg
fsubl
and
rclb
mov
out
and
add
push
stos
mov
dec
sti
cmpsl
iret
jne
cmp
mov
ret
push
aad
ds
bound
cmc
push
cwtl
sbb
in
test
add
add
mov
aaa
xchg
push
movb
xor
out
dec
mov
sbb
je
mov
cmp
or
fcoml
arpl
xchg
outsb
shrb
sub
or
popf
pop
adc
sub
js
iret
daa
call
add
cmpsb
jmp
hlt
and
test
push
pop
sarb
mov
mov
xor
rclb
repz
add
in
test
fisttps
dec
cltd
add
lret
mov
jmp
jbe
jns
pop
jno
out
outsb
push
out
dec
ja
cli
sbb
mov
mov
xchg
mov
arpl
sub
sbb
or
popf
je
jl
fs
cld
dec
je
mov
adc
xchg
inc
pop
clc
adc
cld
jmp
sbb
fwait
out
xor
lods
push
pop
in
in
arpl
mov
call
mov
and
jne
lret
push
xchg
jno
scas
push
xchg
sub
scas
in
or
inc
iret
out
sub
cmp
inc
lahf
cld
nop
or
push
aam
pop
mov
adc
insb
push
mov
test
divl
sub
test
mov
arpl
lods
cmp
mulb
outsb
adc
cmp
ljmp
std
lahf
adc
inc
movsb
enter
inc
xchg
ret
lahf
sub
out
repz
cmc
lea
jge
mov
pusha
cmp
mov
divb
lea
lds
sbb
xor
push
nop
inc
in
in
andb
sbb
cmp
xlat
pop
stos
sbb
xor
mov
adc
push
aad
divl
data16
lcall
add
ror
insl
popa
push
nop
or
lea
dec
mov
xor
jo
fwait
push
sbb
cmp
xchg
xchg
lock
insb
incb
stos
es
mov
iret
mov
add
adc
adc
stos
push
cmp
dec
aaa
and
clc
jb
es
adc
push
aam
popf
jle
test
xchg
cmp
jp
and
jns
sub
fwait
jg
xor
mov
loop
inc
in
cmpsb
dec
jbe
fists
jb
mov
popf
mov
push
pusha
sbb
jae
cmp
iret
and
stos
jl
push
mov
pop
or
lods
clc
add
xor
push
push
sti
sub
pop
test
aad
xor
push
test
xor
in
ret
dec
in
mov
xor
fwait
scas
shll
clc
sub
pushf
mov
inc
inc
cltd
sbb
xchg
fistpll
insb
dec
sub
or
fists
jg
ficoml
push
inc
sub
int
in
xchg
and
outsb
cmp
insb
mov
jecxz
pop
out
push
mov
sbb
int3
gs
scas
adc
mov
mul
push
adc
out
mov
in
jg
inc
adc
mov
fstpl
dec
ret
sahf
push
lods
add
jnp
xlat
inc
dec
mov
aam
fiadds
int
repnz
test
mov
sbb
repz
repnz
add
xlat
mov
in
hlt
stos
cmp
daa
fadd
imul
cmp
dec
insl
dec
inc
pop
loope
dec
insl
jo
add
mov
add
loope
inc
inc
add
addr16
rcrl
pop
pop
add
call
inc
cmp
xchg
add
jl
fidivrl
hlt
xchg
loope
sti
int3
aad
xchg
stos
xchg
xchg
push
call
add
scas
sub
sub
pusha
ja
sub
mov
add
sarl
add
icebp
mov
xor
cwtl
fidivl
test
int3
fmuls
pop
ficomps
jmp
sub
sbb
in
cltd
xchg
push
mov
insb
adc
hlt
ljmp
ds
addl
jb
mov
insb
xor
outsl
jmp
xchg
cltd
sbb
jl
and
push
add
cwtl
das
inc
push
xchg
xchg
clc
sbb
add
jns
mov
pavgb
inc
xlat
shll
loope
push
push
ljmp
movsb
xchg
xor
daa
pop
push
mov
outsl
test
mov
pop
dec
popf
dec
push
out
push
mov
lret
dec
push
out
mov
and
xor
iret
or
lds
pop
fs
jmp
add
mov
outsb
dec
mov
mov
adc
jp
mov
push
stos
test
test
mov
rorb
imul
out
cmpsl
xor
subb
cmp
cld
inc
int3
cmpb
adc
mov
xchg
jns
enter
hlt
xchg
jne
imul
add
or
sbb
push
or
fucomip
je
ret
mov
rorb
rcll
or
push
add
sbbl
add
rcrl
mov
sbb
rolb
mov
sub
adc
sbb
inc
cmc
fdivrl
xorb
mov
push
pop
jno
push
mov
daa
mov
orl
mov
scas
std
aas
xchg
xor
xchg
out
sub
ds
inc
jl
fnstcw
enter
mov
cld
repnz
mov
xorb
fwait
sbb
jge
sbb
arpl
inc
mov
pop
or
icebp
ljmp
adc
inc
adc
orb
enter
inc
jmp
xchg
ret
ret
dec
lods
mov
mov
push
pushf
pusha
mov
push
or
arpl
pcmpeqd
and
jb
inc
aam
dec
and
and
pop
out
cltd
pushf
sub
dec
inc
popf
sub
pop
sbb
sbb
outsl
mov
jno
loope
lock
adc
ficompl
cmp
ficoml
dec
clc
jo
repz
lods
or
pushf
sbb
insb
jno
xchg
insl
scas
aad
mov
ss
add
dec
mov
daa
or
inc
pop
sbb
ret
mov
fldt
loop
fs
insb
push
sub
in
xchg
mov
inc
mov
ret
jo
and
xchg
jb
xlat
xor
jbe
out
in
push
inc
mov
sarb
orl
testb
out
xchg
push
add
or
mov
arpl
je
mov
lods
pushf
jb
rcr
xor
mov
inc
fisubs
xlat
jle
mov
mov
push
add
adc
pop
data16
scas
pop
es
or
movsb
and
inc
sti
leave
popa
cmp
fists
clc
lods
out
push
nop
aad
cld
in
outsl
int3
mov
mov
loope
push
xor
test
add
sub
sub
stos
mov
lahf
mov
jae
sub
sub
test
mov
add
rcr
pop
out
shlb
inc
adc
in
and
or
cs
je
scas
add
pop
in
mov
enter
test
add
out
push
movsl
adc
es
mov
push
ret
jns
andb
xor
inc
jb
fmull
mov
push
xor
push
cld
daa
mov
mov
jns
fwait
xchg
out
je
ja
cmp
in
mull
xor
mov
lcall
cli
int
inc
sbb
mov
mov
ret
repnz
adc
ja
fiaddl
pushf
es
js
out
dec
xorb
pop
outsb
dec
sbb
add
subl
stos
push
test
pop
or
test
shlb
not
push
gs
add
fists
pop
pop
subl
adc
ss
pop
movsb
sbb
jmp
jmp
mov
pop
lret
push
xchg
pop
imul
jl
xchg
es
stc
stos
out
jmp
jmp
sbb
ret
sbb
popf
push
xlat
pop
and
mov
pushf
sub
cmp
cli
and
xlat
cmp
jl
sbb
mov
xchg
cmp
mov
cmp
jmp
loop
movsb
in
dec
add
leave
xor
xorb
xchg
pop
xorl
js
pop
push
mov
xor
dec
out
xchg
test
in
mov
not
std
xchg
in
jbe
loopne
lds
fists
int3
xlat
mov
cmp
fcompl
sub
lea
or
repz
inc
sbb
push
sahf
push
mov
push
cmp
jns
sbb
enter
mov
jecxz
cmp
addl
in
add
in
add
out
in
sub
jo
push
mov
mov
fidivl
pop
out
cmp
lahf
dec
into
inc
in
dec
or
or
fs
jecxz
leave
sbbl
sar
stos
push
mov
loopne
sub
fwait
sbb
addr16
lds
sbb
xor
dec
cmpl
mov
pop
sbb
lock
pusha
ss
das
pop
pop
jecxz
popf
cmpsb
dec
sahf
and
leave
mov
cmpsl
jecxz
scas
popf
ds
push
or
ficoml
out
xor
pop
mov
fimull
xchg
outsl
rol
jecxz
lock
sub
sbb
popf
out
push
sbb
fstps
outsl
cs
xchg
add
sbb
push
fildl
test
pop
push
and
out
cmp
mov
out
fcoms
ss
lods
lds
out
clc
ror
add
mov
in
movsl
call
mov
push
mov
leave
push
sbb
addb
add
fcomps
mov
rcrl
xor
test
outsb
adc
repnz
out
out
in
test
inc
daa
mov
sti
and
repnz
ret
add
push
adc
mov
cmc
dec
jecxz
in
jbe
es
pop
sbb
lods
push
mov
loopne
adc
push
or
icebp
add
push
mov
std
push
dec
cmp
out
jns
mov
mov
push
pop
mov
shll
cmp
jae
xchg
jb
notb
adc
loopne
js
xchg
or
js
andb
xchg
mov
pop
test
lods
xlat
rolb
das
or
jecxz
call
adc
lock
jo
mov
movsb
lods
xor
insb
popa
push
xchg
jbe
adc
mov
in
push
clc
add
in
ds
sub
push
lret
test
cwtl
and
mov
xor
scas
push
imul
and
repnz
add
or
sbb
mov
mov
fnstsw
rorl
pop
push
jge
in
cmp
jb
clc
xchg
int3
out
jmp
les
jbe
mov
cs
test
mov
popf
shlb
arpl
or
mov
lock
jns
int3
sbb
test
iret
cwtl
ss
aaa
jb
loopne
pop
add
repz
popf
push
or
in
push
mov
aaa
out
sbb
in
movsb
push
into
mov
jno
jle
push
mov
xor
shlb
mov
pop
inc
mov
repz
scas
or
pop
test
dec
push
into
fucomp
stc
and
xor
arpl
mov
repnz
sub
outsb
jns
cmp
mov
fnstcw
xor
mov
cltd
daa
xor
test
jmp
stos
lea
mov
inc
stos
loope
rcr
push
cmc
imul
cmovno
adc
mov
scas
fcmovnbe
and
jb
inc
push
xor
jbe
add
fldt
test
cmpsl
add
in
loope
in
jle
mov
ret
movsb
shlb
sub
xchg
add
js
in
movsl
ja
or
mov
jns
pop
push
mov
insb
mov
icebp
lods
mov
subl
loop
xchg
adc
fsubl
xor
xchg
xor
pop
and
push
add
xor
loop
fwait
scas
or
or
cmp
in
mov
dec
fs
out
mov
hlt
rolb
test
jecxz
mov
out
fs
dec
jmp
test
loop
jle
nop
sti
push
push
jmp
roll
cmp
pop
xor
repz
pop
je
dec
popa
adc
cld
lds
imul
subb
hlt
shrl
and
mov
ja
xor
cmp
lret
arpl
xor
in
pop
addr16
mov
divb
pop
push
xchg
adc
dec
and
jnp
fbstp
lds
nop
mov
lods
leave
pop
dec
mov
mov
jp
jmp
mov
jbe
cld
dec
or
js
sub
inc
test
in
xor
sub
das
loopne
test
negl
mov
push
mov
or
xor
inc
add
jno
inc
fcompl
rcrl
mov
cmp
xchg
outsb
orl
sahf
adc
and
sub
mov
cmp
push
push
bound
retw
imul
or
or
out
jbe
pop
cmp
je
enter
mov
or
in
pop
inc
push
xchg
dec
int
push
out
mov
lea
push
xor
pop
shll
in
mov
mov
mov
in
lcall
icebp
adc
jge
into
xchg
ficompl
mov
sbb
js
push
loop
outsl
push
push
into
and
xor
mov
aaa
jl
clc
lods
jbe
inc
add
mov
mov
sbb
rclb
in
pop
cmpsl
and
push
cli
add
pop
or
out
inc
ficompl
dec
xchg
cmp
imul
xchg
push
pop
pop
fidivs
jmp
lods
je
popf
mov
add
xor
and
js
inc
orb
icebp
scas
inc
cld
sub
stos
push
js
int
cld
lea
jo
xchg
dec
mov
push
out
inc
lods
scas
push
pop
mov
sub
lret
mov
test
push
jae
lds
mov
mov
jg
jnp
pop
xor
xor
xchg
cmp
shl
adc
inc
cmp
xchg
push
cmp
cs
jo
cltd
push
loopne
insb
ljmp
push
shrl
sbb
loop
inc
in
rcll
cmp
pop
mov
mov
movsb
ljmp
in
push
xor
mov
lods
jmp
imul
push
sub
aad
frstor
jne
aam
cmp
mov
stos
rcr
xchg
test
jecxz
xor
push
xchg
mov
test
fisubs
pop
ss
adc
add
jbe
pop
mov
insl
sub
addr16
cmp
imul
fnstsw
mov
and
xor
or
lds
sub
movsb
insl
bt
out
adc
mov
stos
mov
out
or
in
mov
fisubs
and
fs
test
test
divl
scas
mov
jne
or
dec
adc
add
cltd
mov
in
loopne
sub
xchg
dec
dec
enter
add
loopne
jmp
mov
jle
adc
ret
add
fisubrl
add
jle
aas
clc
jle
test
cld
mov
xchg
insb
imul
icebp
push
sbb
pop
pop
mov
clc
mov
divl
popa
sub
ds
jnp
pop
movb
fistps
int
pop
xor
mov
mov
jns
and
xchg
pop
iret
fcmovbe
mov
cmp
and
add
fst
pop
aad
pop
lods
push
xchg
dec
cs
push
imul
jle
dec
lcall
mov
mov
or
fcmovu
jmpw
lret
ret
mov
mov
jno
xchg
test
xor
jbe,pt
fidivrl
cmp
inc
pop
loop
shl
sbb
xchg
bound
cld
icebp
cli
xor
fisubl
loope
in
mov
arpl
or
movb
stc
mov
fwait
inc
add
in
fsubp
int3
gs
inc
es
cli
lea
mov
js
xlat
imul
idivb
or
fwait
sbb
xor
bound
cli
mov
cli
push
pop
dec
push
or
leave
imul
add
sbb
dec
inc
mov
xchg
or
cld
sbb
cmp
xchg
ret
mov
pop
shl
int
cltd
or
inc
add
jmp
jp
xor
insl
add
call
mov
das
mov
hlt
movsl
xlat
addr16
sub
pop
pop
xchg
mov
icebp
inc
adc
mov
pop
sbb
xchg
in
int
ret
mov
in
test
pushf
cld
cmpsb
sbb
mov
xchg
cwtl
inc
jmp
int3
stos
sbb
std
iret
adc
mov
cmp
dec
pop
ret
shll
int3
pusha
scas
push
mov
pop
scas
sbb
movl
jp
in
adc
pusha
sub
add
pop
loopne
jl
dec
fwait
cli
mov
ds
inc
repnz
dec
dec
imul
in
jbe
in
rclb
mov
mov
dec
into
popa
aas
ja
pop
push
push
pop
or
cmpsb
and
clc
outsb
dec
xchg
divb
paddsw
mov
mov
jbe
jne
shrl
das
gs
jne
adc
dec
xor
pop
and
cmpsl
push
out
pop
jo
adc
test
call
testl
mov
aas
mov
roll
enter
dec
mov
out
pop
jl
cmpsb
pop
clc
test
dec
mov
mov
and
aaa
jge
push
inc
movl
adc
fiadds
mov
in
push
push
mov
adc
jmp
jae
pop
fbld
push
inc
ficoms
sub
xor
movsl
stc
cs
lods
mov
adc
lock
outsb
jg
dec
xor
int
repz
jp
cmpsb
inc
imul
inc
lret
mov
aaa
call
aas
mov
add
pop
pop
andb
in
scas
cmp
mov
fstp
push
in
mov
cmc
and
inc
in
inc
or
lcall
push
loopne
scas
xchg
xor
push
outsb
jge,pt
gs
jne
mov
icebp
sub
ljmp
scas
gs
xor
daa
jbe
inc
sbb
push
push
sbb
in
dec
jge
imull
xor
mov
xor
hlt
aaa
xchg
ja
mov
mov
push
inc
cwtl
lods
and
movsl
adc
jno
mov
icebp
pop
es
push
dec
inc
sbb
dec
pop
mov
mov
mov
lods
inc
push
push
cmp
test
inc
and
push
adc
inc
repnz
dec
dec
mov
mov
cmp
sub
test
dec
jle
icebp
fistps
add
in
cli
and
push
loop
movsl
pop
cmp
mov
jg
add
repnz
cmp
push
and
inc
cmp
pop
nop
push
inc
dec
push
pusha
xor
inc
dec
sbb
out
stos
jnp
mulb
push
or
dec
cmp
in
pop
mov
pop
std
sub
xor
ret
or
xchg
push
movsb
lahf
pop
in
or
mov
daa
jns
sbb
imul
push
and
insl
loopne
xchg
adcl
jl
lods
push
imul
fisubs
jmp
sub
jns
in
jle
andl
or
xor
incl
adc
mov
rorb
sbb
int3
mov
sbb
xor
push
lahf
jg
lock
out
insb
mov
push
insl
xchg
mov
sarl
pop
mull
iret
cmp
and
out
jg
push
jl
movsb
mov
mov
and
pushl
or
xlat
fildll
mov
adc
adc
mov
push
cmp
mov
mov
cmp
pop
xor
pop
mulb
ret
jo
and
dec
add
lods
xchg
jo
lods
push
push
ss
cmpsl
dec
in
mov
and
filds
test
xor
shll
jp
aas
shll
jle
in
cmc
gs
roll
jns
cltd
iret
lds
lahf
cmp
movsl
mov
pop
xchg
cmp
popa
cli
in
xor
sub
jecxz
push
cld
push
xchg
aam
push
mov
jg
jb
out
mov
outsb
xor
cltd
inc
or
and
mov
lods
pop
or
push
mov
in
popf
hlt
ds
mov
fists
test
pop
mov
xchg
adc
aaa
je
fwait
mov
movsb
out
lret
push
inc
mov
fisttps
fs
rclb
outsb
out
mov
mov
jg
jns
pop
shlb
push
mov
inc
push
jb
ss
cmp
mov
push
and
mov
lret
pop
lcall
or
mov
push
ds
imul
sahf
lcall
adc
ret
ret
jns
subl
ja
mov
adc
imul
iret
mov
dec
cld
cld
or
bound
mov
jl
dec
divb
test
add
push
fmull
cmovo
and
jp
fisubrl
inc
fcoml
pop
mov
mov
dec
xor
imul
fstpl
sub
mov
xchg
mov
pop
inc
in
das
gs
inc
aam
add
call
fs
popf
cwtl
xchg
xorl
xor
test
std
lahf
ljmp
scas
push
roll
xor
call
pop
inc
push
shl
mov
fsts
mov
sub
cmc
out
jmp
and
mov
jns
in
scas
jno
mov
sub
jge
fmull
dec
addr16
stc
or
xchg
stos
aas
mov
je
add
adc
mov
arpl
sarl
cmp
adc
nop
test
loopne
xchg
jne
mov
pop
pusha
dec
lret
notl
scas
xchg
in
loope
jnp
xchg
xchg
call
jl
or
cs
shl
jecxz
push
and
and
adc
or
ret
dec
inc
int3
or
popfw
div
pushf
jg
imul
ret
cmp
sarl
out
inc
call
push
out
xchg
lods
add
in
int
in
pop
arpl
lahf
pop
xor
lret
cmc
out
pop
jecxz
sub
sub
mov
mov
cmp
jno
sbb
and
xlat
push
push
fcomps
out
dec
push
xchg
cmp
loopne
mov
icebp
adc
xchg
jbe
adc
push
gs
sbb
cltd
imul
mov
int3
scas
jg
hlt
inc
jge
das
xchg
enter
xchg
jno
mov
jl
lahf
or
xor
cmp
lock
cmc
push
scas
clc
xchg
sti
cltd
inc
popa
and
aas
scas
fisttpl
scas
push
push
xor
xorl
lret
mov
shrl
cs
je
inc
xor
pusha
pop
les
pop
out
push
add
imul
int
and
fildl
rclb
and
adc
xchg
or
jge
add
lea
loop
pushf
in
scas
pop
loopne
xor
aas
cwtl
sub
aas
adc
or
pop
das
or
cmp
mov
lea
xchg
mov
dec
xchg
cld
jge
jns
insb
mov
aas
adc
xchg
inc
cmpl
mov
adcb
push
xor
sahf
jnp
rolb
mov
cmp
lret
sub
xchg
or
out
mov
xchg
mov
sub
inc
iret
into
mov
push
testb
add
in
adc
jmp
sbbl
add
xchg
pushf
pop
inc
dec
and
jg
adc
out
xchg
sub
mov
nop
inc
and
and
imul
mov
lret
mov
or
add
xchg
lds
pop
movlps
andnps
mov
and
fs
call
push
imul
loopne
and
sub
scas
xor
jo
jo
add
mov
pop
ret
fdiv
adcb
pop
xchg
xor
pop
inc
push
divl
sbb
push
imul
lcall
cmp
push
imul
sub
xchg
add
mov
ja
cmp
and
outsb
fcompl
sbb
roll
stos
lret
mov
pop
mov
adc
jge
in
mov
sub
pop
sub
dec
lods
xchg
out
mov
pop
inc
xor
jnp
fidivrl
js
sbb
cli
ret
cmp
aad
jl
mov
pop
addr16
jmp
cmpsl
imul
lcall
aaa
scas
jns
jnp
stos
sbbb
loopne
add
xchg
mov
mov
jmp
add
das
cmp
lods
stos
xchg
sub
nop
js
lods
into
cmp
gs
call
stc
decb
bound
movaps
lock
inc
sahf
outsb
jno
test
sbb
shll
mov
scas
or
xor
ret
dec
jns
sbb
fildl
jge
inc
jp
int
mov
jns
hlt
push
push
xor
pop
clc
rcll
out
jge
stos
or
int3
mov
push
cmpsb
fidivl
sub
scas
test
push
lret
and
bound
pop
test
clc
pusha
jecxz
test
cwtl
fidivl
and
adc
sub
scas
add
add
les
xor
adc
loopne
mov
push
adc
test
dec
les
gs
repnz
ss
pop
aad
ss
clc
xchg
aaa
and
ljmp
cld
aad
rolb
lods
imul
dec
mov
popf
cmp
movsb
rcl
test
dec
push
sub
stos
lock
iret
push
push
cmpsl
push
lods
push
loopne
shrb
sbb
loop
lcall
adc
shll
mov
daa
sub
sti
push
pop
jmp
inc
xchg
lea
insl
fwait
call
fcompl
push
out
inc
adc
popf
subl
jae
dec
pop
ss
xchg
pop
mov
pushf
in
or
inc
push
scas
mov
insl
das
mov
fstl
enter
sbbb
shlb
out
pop
scas
jg
lahf
push
test
jbe
sbb
dec
xchg
mov
lahf
cmpsl
lock
adc
or
xchg
inc
je
mov
loope
in
dec
ds
mov
cltd
push
sub
mov
loop
xlat
rcl
pop
jo
jo
lods
pusha
mov
adc
cli
sbbb
sbb
sarl
stos
add
in
push
dec
int
stos
add
push
sub
cmpsl
cwtl
dec
sbb
fdivrp
and
out
repz
pop
vsubpd
jno
push
cltd
inc
addb
lock
repz
add
lods
xchg
pop
into
out
jae
movd
dec
lret
and
add
insb
adc
inc
outsl
cmp
or
mov
sub
add
aas
xor
mov
fsub
lcall
xor
and
cli
cs
cmpsl
jp
or
xchg
popf
dec
jp
inc
dec
fdivs
imul
call
lret
jnp
lods
test
mov
lcall
call
test
out
jnp
pop
ret
lahf
lods
xchg
scas
adc
mov
inc
push
movsb
cwtl
cmp
pop
imul
outsb
adc
xchg
repz
dec
stc
out
xchg
and
sub
jp
inc
adc
and
bound
sub
or
pusha
inc
xchg
or
mov
sub
rcr
xor
out
icebp
and
lret
lods
clc
sbb
xchg
and
test
add
and
inc
push
xor
imul
test
aad
cld
cmp
repnz
ret
mov
lods
mov
xor
aas
cmp
out
adc
xchg
in
leave
xchg
mov
movsb
sbb
adc
mov
xchg
cmp
aaa
jo
lcall
aam
inc
xorl
mov
adc
repnz
aam
cmp
mov
inc
mov
test
xor
ljmp
pop
inc
and
ljmp
jbe
imulb
cmp
add
pop
xor
std
repz
inc
ds
dec
cmpsb
jecxz
xor
sbb
insb
jl
and
push
jge
je
push
jmp
adc
fdiv
into
add
outsl
jb
cwtl
ret
fst
push
je
clc
mov
mull
outsl
lret
and
ja
jbe
adc
iret
rcrl
into
mov
cmc
push
mov
imul
movhps
stos
and
ret
rolb
jp
out
test
xchg
pop
cbtw
das
ret
xor
dec
add
outsl
cmpsb
adc
sbb
pop
popf
addr16
inc
out
jns
push
mov
lret
cmc
and
filds
flds
sub
jns
jne
mov
inc
repz
addr16
pop
dec
push
pusha
jno
lahf
cmp
adc
add
adc
inc
pop
push
test
insb
xchg
add
imull
xor
jl
mov
popa
push
iret
or
cli
mov
pop
cmp
fistps
mov
out
stos
and
adc
loope
dec
fwait
data16
xor
xor
jp
or
inc
aaa
test
cld
mov
push
sub
or
pop
jb
mov
jno
mov
and
jae
aaa
jns
nop
and
les
lea
jg
leave
sbb
int3
mov
dec
push
inc
dec
add
adc
pushf
mov
outsb
mov
ljmp
or
mov
ss
pop
ss
rorl
cmp
in
repz
gs
push
add
outsb
cmp
jl
js
and
sbb
aas
test
nop
push
lret
push
sbbl
and
cltd
sbb
adc
aaa
lcall
js
mov
push
sbb
dec
js
adc
mov
push
cmp
or
jbe
sub
sahf
mov
adc
xor
push
scas
out
pop
pop
rolb
push
add
sub
jmp
push
pop
rclb
pop
or
cmp
das
jg
lret
movl
insb
adc
and
sbb
push
adc
loopne
cmp
rcl
lea
xor
test
fisttpll
and
xlat
pop
mov
fildl
sbb
ror
xchg
mov
adc
fwait
pop
shrb
decl
pop
pop
pop
add
push
leave
sti
xor
das
fnstenv
xor
dec
mov
lret
cmp
add
cmp
hlt
mov
movsb
shlb
jae
cmp
or
loope
cli
mov
loop
mov
sbb
jns
es
xchg
pop
or
aaa
mov
cmp
negl
push
xor
pop
cmp
cmp
jl
mov
push
mov
mov
dec
push
lds
push
push
and
pop
dec
push
mov
gs
inc
pushf
jbe
push
js
mov
es
loope
test
jp
cvtpi2ps
mov
fidivrs
xor
dec
dec
mov
stos
xchg
pop
mov
jnp
xor
stos
cli
int
mov
pop
lds
mov
sarl
ret
rcrb
lods
adc
pop
add
pop
or
test
pop
ss
add
jns
ljmp
in
bnd
mov
lret
iret
ret
inc
fst
push
fsubl
xlat
js
jp
bound
sub
sbb
aas
cmpsl
or
xchg
inc
andl
in
push
add
ror
rcrl
mov
dec
sahf
mov
inc
sub
enter
fs
gs
ljmp
aam
and
aaa
enter
mov
mov
rcpps
shr
add
mov
push
add
sbb
pop
lahf
push
stos
mov
cld
xchg
outsl
ret
adc
xor
jp
ret
je
adc
sub
imulb
mov
loope
pop
or
mov
jb
rorb
mov
shrb
cmp
ja
lods
cmp
xchg
out
stc
mov
jge
xchg
xor
lock
in
adc
test
jbe
aad
sbb
sbb
jbe
jo
repnz
mov
xor
mov
pop
sbbb
out
into
ret
sub
ja
imul
and
arpl
push
andb
out
scas
insl
cmp
cmp
push
icebp
inc
lock
xchg
cmp
sti
dec
inc
movzbl
cmc
pop
int3
stc
mov
lds
mov
jne
imulb
mov
test
dec
xchg
mov
and
adc
pop
data16
fadd
pop
fnsave
test
pop
int
pushf
xor
fildl
pop
call
test
movb
pop
pop
xchg
in
jno
add
xchg
add
imul
insl
insb
jle
xchg
mov
mov
push
xor
xchg
data16
sub
add
dec
int3
std
push
std
push
scas
inc
dec
pushf
or
popf
mov
xlat
loop
and
mov
scas
enter
icebp
clc
jp
xorb
outsb
ljmp
jp
mov
jge
pop
lret
ror
es
jbe
jle
fcoml
rcl
cmp
das
mov
loop
cld
pop
mov
push
adc
fildll
ficoml
out
mov
xchg
jns
bound
jl
sbb
sbbb
gs
mov
pop
jmp
mov
les
dec
insl
dec
sbb
call
js
pusha
cmp
mov
push
mov
xchg
or
xchg
cmpsb
mov
adc
pop
nop
addr16
mov
not
cmpb
int3
mov
pop
cwtl
sbb
mov
inc
in
sub
jle
add
adc
test
jl
jmp
sahf
pop
fistpll
les
pushw
leave
xchg
sti
push
inc
xor
rcrb
add
jmp
mov
pop
push
sub
add
ss
and
out
les
outsb
xor
jg
cmp
repz
bound
dec
rorb
loope
sti
xor
inc
xor
in
and
icebp
push
jge
scas
mov
roll
ss
sbb
xor
ljmp
popa
push
cld
popf
jns
or
xor
fildll
inc
jne
adc
fidivs
and
sbb
xor
mov
jb
imul
sub
mov
jl
subl
sbb
add
js
loopne
xor
lcall
cld
push
xchg
loop
ss
pop
cmpl
cltd
xor
adc
je
je
movsl
sahf
out
dec
dec
dec
push
push
xor
dec
jl
adc
add
lcall
pop
mov
ret
dec
daa
shlb
movb
hlt
push
fcoml
enter
es
fadds
pop
lahf
adc
ror
mov
push
xor
xchg
not
jne
mov
adc
popl
movl
out
push
test
test
out
pop
cli
iret
sbb
jne
test
icebp
mov
and
movsb
inc
push
shll
lods
push
cs
sub
add
fwait
cld
popf
inc
push
das
sub
movsl
cmp
dec
xchg
push
mov
scas
mov
aam
in
in
jns
mov
mov
mov
test
jae
sbb
ja
inc
aad
xor
xorb
push
imul
cmpsl
ss
mov
inc
sbb
dec
sar
sahf
test
push
sbb
add
jg
outsb
das
out
add
push
and
and
mov
push
cli
fmuls
pop
fisttps
sahf
andb
daa
mov
push
pushf
push
outsb
jecxz
xchg
dec
xchg
imul
inc
sbb
and
dec
out
and
sbb
rcrl
add
mov
jno
scas
clc
test
in
xchg
sti
lretw
aam
stos
pushf
cmpsb
movsl
mov
xchg
dec
insb
xor
inc
in
or
cli
cmp
dec
push
pusha
fbstp
and
pop
daa
cmovb
mov
shrb
bound
icebp
jecxz
sbb
icebp
stos
push
mov
in
dec
lahf
imul
mov
xlat
ret
das
adc
out
mov
sub
repnz
push
sahf
cmp
push
and
outsl
add
add
aam
push
mov
mov
push
hlt
pop
ds
cmp
imul
or
lds
sbb
sub
lret
aas
mov
out
and
les
fbstp
sbb
popf
scas
push
pop
xor
dec
and
icebp
mov
mov
mov
xor
cmp
sub
imul
mov
jl
in
nop
lds
mov
push
adc
xchg
xor
enter
rcr
gs
cmpsb
pop
or
push
sub
jbe
cs
pushf
xor
call
adc
jns
aam
gs
ja
andb
dec
mov
imul
andl
leave
movsb
das
lock
popa
xor
int
cmp
add
jns
xchg
mov
aad
loopne
xor
push
or
xor
ja
bound
lret
sub
adc
cmp
fadds
mov
xor
dec
sti
aaa
sbb
dec
or
call
movsb
fnstenv
push
dec
and
push
scas
loopne
imulb
mov
push
sbb
cwtl
sbb
mov
mov
aaa
lret
daa
clc
xchg
push
ja
push
fsubp
cmp
sahf
push
ds
loopne
adc
mov
inc
push
outsl
fldenv
ja
sahf
inc
sbb
mov
jnp
inc
cmp
hlt
dec
xor
call
lods
mov
xchg
pop
lahf
sti
movsl
mov
sub
jne
sbb
aas
xchg
scas
fsubs
imul
and
inc
lea
or
call
mov
sbb
aaa
or
cmc
dec
xor
push
adc
fbld
int3
fdivl
add
adc
cltd
xor
inc
xchg
lcall
push
fcoms
out
and
movsb
xor
aas
cmpsl
iret
fidivs
xchg
xor
xor
cmp
lock
cmpsb
lods
imul
movsl
pop
cmp
enter
popf
jg
mov
xchg
jmp
pusha
shlb
xlat
iret
adc
jge
pop
jns
xchg
pop
out
push
adc
mov
jbe
cmp
jnp
sub
sub
sti
pushf
pop
cld
mov
sbb
in
jmp
or
lea
loop
mov
insb
mov
jns
sbb
dec
xor
in
push
jo
sub
sbbb
dec
jp
testl
xchg
cmpb
loop
test
cmpsb
int
mov
lahf
sbb
push
frstor
in
pushf
mov
mov
sbb
cmp
ja
outsl
mov
push
mov
mov
inc
in
pop
pop
push
popf
xchg
lcall
rolb
mov
int
dec
cmp
pushf
out
test
jb
insl
in
inc
cmc
mov
pop
icebp
lcall
fldt
daa
outsb
xchg
mov
arpl
mov
mov
subb
sbb
dec
xchg
mov
fbld
jno
push
orb
mov
dec
insl
fwait
xorb
mov
ret
jae
cld
xchg
pop
cmp
test
xor
out
pop
pop
popa
pop
xlat
loopne
lods
xchg
cs
aam
jno
adc
cmp
mov
ror
jp
push
mov
rcl
out
mov
ja
daa
scas
cmpb
fwait
aam
and
mov
sbb
jge
adc
xchg
jmp
dec
mov
cmc
inc
jns
jno
sarb
mov
and
sbb
imul
mov
lods
fisubl
push
mov
xorl
mov
jle
mov
movsb
fdivrl
xor
sbbb
mov
sbb
pop
movsb
mov
loopne
nop
pop
ret
clc
fsub
sub
mov
ljmp
add
push
shl
loop
imul
jmp
mov
pushf
ret
arpl
sub
push
dec
insl
sub
pop
cmpsb
jae
cmpsl
pop
push
or
aam
out
shll
je
cmc
mov
fsts
or
jbe
loope
cmpl
and
mov
jnp
jp
fldcw
insl
shl
arpl
sti
push
lret
lahf
out
arpl
scas
dec
out
call
jecxz
dec
das
pop
adc
cmpsl
fwait
xchg
clc
push
adc
add
push
outsb
data16
ror
push
inc
inc
loop
jno
andnps
out
mov
divl
fcomps
aad
jbe
mov
int
pop
scas
xchg
int3
xor
pop
or
mov
add
insb
xor
cmpsl
popa
pop
dec
mov
fdivr
mov
cmp
stos
popf
movsl
jl
in
push
push
std
in
movsl
jae
push
push
movl
mov
pop
sti
mov
add
mov
jle
pop
sbb
lods
leave
into
ret
add
dec
xor
jecxz,pn
movsl
cmp
lock
aas
fisttps
push
test
jbe
mov
add
add
dec
sbbl
shlb
push
rcr
mov
mov
xchg
adc
xchg
add
or
dec
add
loope
and
lret
popa
pushf
cmp
mov
add
out
fs
scas
xchg
mov
adc
cltd
push
sti
mov
nop
incl
inc
enter
jl
lock
add
inc
adc
negb
adc
dec
cs
pop
xchg
cltd
out
test
sahf
mov
mov
adc
jg
mov
inc
fwait
dec
iret
mov
leave
push
out
idivb
stos
insb
or
mov
cwtl
in
repnz
mov
aam
rcrb
mov
out
and
dec
lcall
and
je
mov
xor
and
or
jo
or
rolb
mov
jecxz
or
aad
sbb
xor
add
and
xchg
xchg
or
sub
sub
shll
xor
sbb
lret
mov
mov
lock
scas
ret
inc
mov
fnstenv
decb
imul
xlat
cmovg
imul
mov
fs
xchg
in
call
xorl
mov
sub
aas
dec
nop
fimuls
jmp
loop
aam
les
jo
push
ret
jno
add
adc
sbb
inc
mov
xor
push
push
out
push
insl
fidivs
fidivrs
cs
mov
push
cmp
and
js
xchg
out
mov
sbb
imul
shll
addl
cmp
pop
js
lcall
insl
add
and
xor
lcall
movsl
pop
add
ret
push
popa
scas
adc
call
xor
mov
mov
mov
sarl
adc
jne
and
fsubp
push
not
xchg
or
inc
fs
js
popf
sbb
mov
mov
or
mov
lock
adc
jne
loope
into
dec
sbb
push
mov
inc
lret
inc
add
mov
ret
sub
test
cli
mov
dec
outsb
cmp
or
cmp
mov
mov
fwait
and
adc
xchg
mov
jg
js
xchg
cmp
push
lret
mov
lahf
cmp
fisttpll
lea
ret
cmc
mov
pop
insl
lret
adc
std
push
adc
mov
cmp
cmp
mov
pop
xchg
mov
stos
xrelease
test
sbb
ret
mov
mov
mov
int
mov
lret
add
jne
jmp
adc
sti
aas
shll
outsb
ds
test
or
inc
dec
cmpsl
jp
test
cmpsb
jo
enter
daa
xor
bound
jp
adcl
jbe
mov
push
push
popa
cmp
pop
add
adc
stos
shl
test
cmp
aad
lcall
push
pop
push
hlt
cmpsb
mov
out
xor
jns
pop
sbbb
push
jae
lea
jl
pop
popa
repnz
xchg
repnz
lods
and
in
push
jne
sti
les
lret
addr16
mov
xor
lret
shll
scas
mov
inc
out
push
mov
popf
mov
jb
loopne
mov
or
push
adc
add
mov
jge
jo
addr16
push
cmc
cmc
fsubl
mov
jp
lds
push
leave
xor
lds
je
adc
xchg
cli
fs
mov
data16
nop
add
pop
jge
push
jl
sub
cmp
add
outsl
sub
sahf
xchg
fmull
mov
push
mov
clc
imul
lea
push
daa
int
repnz
clc
shlb
push
dec
ljmp
mov
dec
cmpsb
sbb
popl
vmwrite
imul
test
lods
outsl
into
ret
inc
dec
repz
aaa
jbe
mov
pop
adc
cmp
je
pop
mov
sahf
jmp
gs
push
or
leave
jnp
sub
mov
xor
push
test
cmpsl
xchg
dec
icebp
jno
imull
outsb
pop
mov
add
imul
rcrb
jae
and
int3
std
aas
xor
xor
inc
xorb
sbb
pop
cltd
out
dec
lcall
mov
jne
mov
cmp
mov
and
or
dec
inc
dec
cmp
mov
lahf
xor
or
sub
adc
pop
cltd
shlb
push
xchg
lea
xor
lods
xchg
cmp
ret
pop
xorb
dec
cmpsb
jp
push
or
inc
pop
notb
xor
loopne
sbb
dec
cli
mov
lahf
inc
xor
sbb
sub
sub
pop
stos
jle
rclb
scas
into
and
cmp
outsb
cltd
add
aam
bound
fnstenv
xchg
enter
mov
mov
imul
add
mov
push
jae
repnz
test
addr16
loop
add
call
je
mov
cltd
push
or
cmpsb
pop
ret
fisubrl
insl
loopne
test
mov
rclb
mov
mov
sbb
imul
jnp
outsl
add
or
hlt
fbstp
pop
jle
sti
add
shll
outsb
in
call
sahf
aaa
ljmp
popw
xchg
jbe
ljmp
xor
push
mov
lret
lea
adc
inc
push
daa
stc
dec
cli
les
inc
adc
or
mov
mov
test
pop
jmp
or
push
jl
jb
sar
pop
add
xor
push
icebp
sub
and
testl
pop
inc
mov
push
push
popa
in
loop
xchg
dec
add
mov
shlb
mov
aas
jmp
sbb
addr16
test
dec
dec
cld
sahf
daa
test
es
faddp
and
repnz
xchg
daa
std
lds
nop
cmp
mov
and
loopne
jb
xlat
dec
dec
fwait
dec
fs
in
fsubrl
xchg
or
outsl
stos
sbb
pop
inc
int
outsl
sbb
cmp
jge
pop
in
rorb
pop
jnp
andl
icebp
adc
sub
add
xchg
arpl
or
xchg
jl
sub
xchg
xor
mov
pop
jmp
pusha
mov
xor
lds
push
jbe
xchg
aas
jns
sbb
mov
mov
cli
lea
mov
lods
lahf
jmp
or
je
fldl
lcall
adc
push
mov
imul
xor
push
mov
and
or
je
mov
or
jo
test
arpl
push
ror
into
xor
test
sti
mov
shll
in
xchg
ss
test
push
mov
xorb
jp
sti
add
dec
leave
sbb
sbb
fstpt
clc
add
test
out
pmulhw
pusha
and
add
push
sub
sahf
sarl
dec
mov
shrl
insb
mov
mov
mov
and
notb
pop
or
lret
pop
addb
sub
negl
jbe
jp
test
sbb
or
in
cmp
jae
jecxz
test
cmpsb
vminsd
sub
test
lcall
fists
xor
mov
test
hlt
int
subl
stc
sbb
aam
cmpl
aas
inc
out
outsl
cli
mov
loopne
aam
lret
pop
je
dec
cs
test
and
ret
roll
arpl
ds
pop
popa
jne
xor
xor
jmp
mul
and
or
and
test
push
mov
push
imul
push
mov
mov
in
adc
ja
mov
cli
hlt
adc
js
xor
lods
xchg
push
jo
mov
jns
jae
sub
add
cmp
add
es
push
cmp
int
or
jl
add
jp
jge
add
push
dec
movsl
sbb
mov
int
or
aaa
xchg
fwait
jo
or
fistps
mov
jnp
ja
cs
out
in
leave
pop
mov
pushf
jg
mov
lock
call
aam
sub
or
lahf
std
mov
jmp
push
mov
push
in
loope
xor
aam
scas
fs
subl
adc
mov
adc
adc
call
xchg
xchg
adc
ficoms
repnz
test
push
lahf
fcmove
dec
cmp
sbb
jmp
push
loop
adc
pop
ret
jne
fs
negl
push
shrl
fstps
cmp
fdivl
xor
add
fcomi
add
inc
rclb
xor
sbb
in
and
sub
test
test
flds
movsl
iret
out
and
or
dec
jge
add
jno
jl
lret
leave
push
xor
fs
jge
mov
imul
push
jle
dec
sbb
test
mov
inc
mov
sbb
arpl
mov
mov
sbb
fdivrl
push
in
shll
xchg
in
mov
inc
jle
incb
cwtl
push
sbb
pop
fucomi
out
stos
stos
test
sbb
mov
inc
scas
es
int
dec
pop
sub
xor
jg
mov
insl
cmp
lcall
xchg
pusha
popa
fdivr
mov
insl
add
test
es
negb
xor
xor
push
mov
push
aam
popa
rcll
jecxz
ljmp
jae
pop
les
mov
dec
mov
les
jge
pop
jno
lea
sub
pop
mov
jbe
es
sub
andl
cs
inc
xor
test
adc
push
sahf
shll
adc
jne
in
imul
ficomps
xchg
pop
aam
decl
mov
pop
xlat
lods
shlb
add
fiaddl
sub
negb
iret
pop
cwtl
inc
xchg
cmp
mov
add
stos
mov
xchg
and
jnp
add
or
insb
mov
fcompl
cmp
jo
cld
add
ret
iret
inc
jae
mul
mov
bound
into
or
lods
les
movsb
inc
sub
loope
call
xor
inc
loopne
add
inc
xchg
push
jb
dec
jns
cmp
stos
das
pop
dec
outsb
fwait
lds
fdivr
cmp
dec
and
inc
ret
shr
cmc
or
lcall
pop
mov
cs
mov
popa
fiaddl
sbb
ljmp
clc
fisubrl
js
mov
xor
fnstenv
iret
mov
mov
cltd
xor
loop
cltd
ds
push
addb
les
and
call
jnp
stos
jg
mov
lods
fyl2x
dec
fs
test
or
mov
sbbl
stos
lea
or
sub
dec
sbb
aad
sti
loopne
mov
es
and
insb
and
pop
pop
mul
inc
aas
cmp
aam
adc
fisttps
fdivl
mov
cld
subb
xor
cmp
add
loope
ds
adc
test
and
mov
xor
scas
mov
cmp
add
mov
and
in
jne
orb
pop
repz
icebp
cmc
add
int3
and
lds
ret
mov
cwtl
pop
mov
pop
jge
dec
cmp
lahf
sbb
jmp
mov
ffree
xchg
push
mov
push
jp
movsb
mov
or
mov
xchg
gs
cmpsl
nop
shlb
jae
lea
dec
jecxz
ss
idiv
push
insb
xlat
adc
lock
imul
loop
data16
xchg
sub
lcall
stc
cli
fisubl
leave
dec
lods
mov
mov
xchg
jge
pop
push
divb
je
movsl
clc
gs
or
pop
sbb
iret
imul
roll
dec
scas
xchg
jmp
push
and
sbb
xchg
pop
clc
pop
in
pop
and
test
dec
stos
sub
and
ficompl
add
mov
mov
ljmp
sbb
xchg
mov
popf
jl
mov
lds
scas
pushl
xchg
inc
into
out
fxam
std
addr16
repnz
cmp
mov
mov
call
mov
cltd
xor
lret
adc
mulb
sub
in
cld
push
xchg
jbe
and
dec
cmp
xor
lcall
xchg
mov
adc
les
xlat
test
hlt
jno
or
sub
insb
pop
out
ficompl
hlt
or
jne
fmull
aam
icebp
adc
push
inc
adc
stos
addl
int3
cltd
mov
mov
sbb
mov
xor
lea
mov
je
lcall
jl
loope
sarl
push
dec
adc
jmp
call
mov
fs
mov
repz
lret
xor
out
mov
adc
cmp
out
mov
testl
mov
sub
push
cmpsl
sbb
sbb
gs
mov
nop
cmpsb
data16
testb
pop
mov
sbb
push
pop
cmp
dec
repnz
stos
add
pop
fwait
cmc
inc
xor
daa
and
push
inc
or
outsl
cli
jnp
xchg
stos
dec
test
mov
jbe
jbe
xor
dec
cmp
mov
xor
xor
sar
je
push
pop
and
nop
cmpsb
add
mov
rolb
cmp
xor
movq
cmpb
adc
xchg
clc
cld
addl
loope
mov
dec
lahf
fs
push
cmp
mov
fstp
sub
add
and
jb
xor
jo
pop
jmp
lea
js
pop
mov
mov
fs
mov
xlat
dec
cmpsl
addl
jecxz
or
pusha
add
int3
mov
mov
push
sbb
call
leave
in
jne
inc
mov
sbb
inc
mov
pop
into
pop
pop
int3
xor
fnstenv
jle
fadds
xor
lret
adc
mov
sub
mov
fs
inc
add
xor
and
xchg
or
in
xor
jnp
or
sbbl
mov
icebp
movsb
xchg
xor
fnstsw
andl
xchg
pop
jno
mov
mov
enter
adc
sub
in
rorl
pop
rcrl
pusha
fs
lret
sbb
inc
in
adc
insl
mov
xor
pop
xchg
or
pop
sbb
mov
pushf
ds
sbb
and
int
and
or
cli
data16
std
or
pop
add
ret
pop
jge
push
popf
cmp
jae
repnz
pop
jecxz
jmp
push
add
rcrl
xorl
push
mov
in
lea
pop
dec
stos
cld
cli
icebp
jge
mov
jle
xor
ljmp
and
push
or
cs
sbb
mov
test
push
cmpsb
adc
mov
mov
in
pop
pop
out
sbb
out
mov
sbb
xchg
ret
fcomps
ds
rorl
ds
push
in
sbb
nop
cmc
icebp
lret
inc
pop
js
movsb
stos
fneni(8087
add
movsb
imul
xor
xchg
negl
lret
pop
sbbl
and
scas
inc
test
sub
pop
lods
sbb
rcrl
icebp
adc
inc
ret
fistpll
pusha
xchg
inc
in
jne
testl
fisubs
insb
jb
sahf
repnz
inc
int3
adcb
pop
mov
scas
adc
leave
cmp
stos
je
push
push
mov
into
cmp
shll
mov
sub
cld
xchg
jae
imul
imul
add
pop
jno
mov
pop
shll
loopne
shlb
mov
fiadds
mov
xor
jmp
lods
and
cmp
sub
rcr
stos
xchg
inc
subl
push
sbb
fildl
rol
and
lods
jl
cmp
and
ljmp
mov
or
add
sahf
fsubs
lock
push
popf
call
xor
fstpl
rcl
pushf
dec
imul
aad
xchg
and
push
icebp
arpl
cmp
pop
stos
mov
jne
add
sub
fldenv
test
mov
push
ds
push
mov
inc
cmp
add
out
xor
sbb
lds
hlt
dec
pop
stos
addl
scas
test
dec
out
sbb
xor
add
jnp
dec
cld
and
cmp
pop
fs
data16
or
bound
popa
jle
insl
inc
xchg
inc
sbbb
les
jne
aam
cli
lods
pop
jo
mov
mov
movsb
sbb
ljmp
sbb
mov
lds
mov
sbb
mov
cs
jecxz
jbe
push
and
adc
xor
test
sub
cs
cmpsl
aaa
sbb
mov
sbb
push
pop
je
aad
mov
test
mov
scas
pop
push
mov
loope
xchg
jno
into
out
ds
xchg
insb
xchg
xor
mov
push
cmpsl
test
mov
test
cmp
loopne
addr16
add
dec
mov
dec
and
sub
lods
push
cmp
lcall
xchg
out
push
pop
cmpsb
and
mov
js
or
data16
idivb
inc
cwtl
push
std
mov
pop
aam
sbb
or
push
fildl
imul
movsb
sub
lods
mov
loopne
dec
push
adc
sti
xor
movsl
dec
stos
mov
inc
lret
int3
adc
sahf
xchg
cli
jl
xor
xor
pop
inc
pop
dec
xor
ds
lock
out
add
jp
test
mov
mov
inc
adcb
notl
sub
jb
sbb
mov
decb
notl
cltd
and
cwtl
jns
fsubl
mov
dec
cmpsl
in
push
dec
or
flds
repz
loope
inc
sbb
js
or
int3
ds
ss
sti
sbb
lds
mov
sub
mov
addb
inc
repnz
divl
mov
sub
xor
xchg
adc
push
fcoms
dec
xor
jne
inc
xor
call
mov
add
and
pop
es
jmp
mov
and
mov
jle
dec
ficoml
fs
push
mov
iret
sti
and
fisubrs
jbe
jp
or
and
repz
outsb
or
sar
fidivrs
or
pop
or
xor
fldl
xor
sbb
or
cmp
cwtl
or
ret
pop
out
adc
and
jg
fsub
inc
les
mov
pop
xchg
or
sbb
fstpt
pop
je
xchg
mov
mov
scas
sub
int
pop
leave
lods
jae
jae
test
in
dec
mov
push
int3
dec
aas
repz
arpl
dec
stos
aam
iret
or
cmp
ficoml
jge,pn
pop
in
aam
aaa
test
jb
sub
sub
cmpsb
xor
push
call
xchg
sbb
or
das
loope
cmp
dec
jl
mov
and
stos
jmp
xchg
xor
ret
mov
mov
and
jae
inc
test
dec
aas
xchg
mov
nop
or
adc
adc
cmc
xor
jl
mov
inc
shlb
mov
push
mov
pushf
in
jne
in
sub
insb
icebp
insl
and
mov
enter
jg
dec
add
jle
loopne
sub
pop
gs
popf
inc
inc
scas
mov
add
mov
scas
mov
pop
and
std
jmp
int
dec
adc
fwait
inc
sahf
jae
mov
xchg
sbb
pop
cmp
out
sbb
adc
sbb
push
mov
xchg
inc
lds
test
rcrl
lea
movsl
cwtl
adc
push
shll
sarb
aad
inc
pop
out
lods
pushf
loopne
leave
mov
frstor
mov
mov
mov
fsubrl
xchg
test
add
sub
pop
shld
test
pop
inc
mov
mov
inc
inc
dec
pop
push
mov
int
adc
mov
mov
jle
js
popa
dec
imul
pop
mov
cltd
bound
inc
int3
jle
lock
std
xchg
mov
xor
xchg
iret
adc
pop
out
add
push
stc
jg
fidivrs
xor
and
mov
out
sahf
lahf
ds
dec
dec
xchg
int
mov
mov
sub
cmp
fsubs
inc
or
stos
push
mov
inc
cwtl
sub
into
add
and
sbb
div
pop
movsl
mov
sub
int3
insb
fidivl
jbe
mov
dec
dec
test
adc
sti
gs
sbb
out
mov
cmpl
dec
xor
leave
cmp
xchg
xchg
mov
cmpsb
or
fcompl
test
loope
add
pop
test
pusha
sbb
lods
xchg
mov
add
jbe
xchg
jb
cld
fwait
dec
scas
jp
outsl
lret
sub
xor
repnz
pop
mov
adc
cmp
cwtl
xchg
push
cld
sti
mov
xor
cmp
dec
loope
int3
sub
adcl
or
xchg
push
nop
xchg
dec
fstps
das
mov
in
stc
jns
pop
js
inc
lds
shl
xor
shr
mov
jp
sbb
jbe
out
push
sahf
sarb
pop
push
pop
sbbl
dec
ret
arpl
bound
cli
insl
lahf
dec
mov
and
int
or
and
add
mov
fildl
pop
imul
cld
sbbb
push
push
loop
push
les
dec
jle
arpl
push
jmp
pusha
stos
dec
xor
lea
into
es
aad
pop
clc
push
jp
outsl
popf
adc
or
outsl
push
dec
cmp
shlb
and
mov
out
pop
push
jle
test
and
lcall
pop
adc
dec
mov
push
pusha
or
rcrb
dec
popf
mov
pop
scas
sbb
shlb
ds
xchg
xchg
mov
ss
cmpsb
ds
lock
mov
xor
pop
xlat
jmp
xlat
jge
int
mov
rcrl
jb
scas
clc
push
and
xlat
cli
int
mov
jmp
sub
lods
mov
push
push
mov
and
mov
int
sub
sub
add
sub
or
xchg
sub
bsr
inc
addr16
cli
mov
jge
push
add
sbb
mov
int
sti
pop
lock
stos
popa
xchg
add
pushf
pop
test
pop
lret
xchg
iret
mov
data16
mov
mov
dec
daa
mov
xchg
or
sarb
pusha
in
mov
xor
push
mov
mov
aad
cmp
pushf
jns
out
daa
enter
fdiv
xor
in
fs
add
mov
jne
aam
data16
jae
dec
push
dec
rclb
jle
incl
push
stos
cmp
xchg
or
insb
sarb
popf
outsb
rcrb
xor
outsl
and
inc
mov
pop
fnstsw
scas
push
shrl
daa
push
pop
adc
adc
aas
stos
movsl
testl
fs
lods
inc
cmp
fnstenv
repnz
arpl
cwtl
test
outsl
inc
cmp
test
pop
leave
adc
sbb
xor
insl
jge
mov
stos
sbbb
dec
xor
push
cli
out
scas
and
mov
pop
pusha
or
sbb
imul
xor
les
int
jmp
clc
mov
movsb
add
dec
imul
pushf
sahf
jo
pop
loop
daa
fsubrp
add
mov
lret
dec
push
inc
push
popa
outsl
cwtl
mov
fadds
inc
mov
int
push
jb
shlb
das
add
add
ja
loopne
outsl
inc
lcall
add
add
mov
jg
shrb
jge
pop
or
add
dec
iret
sbb
dec
add
cmp
lods
or
xor
jge,pn
test
dec
imull
and
lods
adc
add
jns
xor
jo
iret
jle
icebp
jecxz
mov
outsb
xor
ja
inc
lock
pop
fidivs
insl
inc
lods
or
jg
fnsave
iret
scas
jno
sbb
scas
adc
pop
jg
dec
sbb
das
popaw
fists
adc
imul
lret
add
inc
test
sbb
outsb
sub
xchg
stc
test
lds
sahf
ja
nop
xlat
out
and
and
pop
enter
cmpsb
mov
sub
add
push
dec
push
xchg
sti
and
sbb
mov
xor
mov
sub
jae
and
mov
out
mov
shr
fistl
xor
push
sub
dec
lods
inc
mov
fistpll
xchg
inc
sbb
push
and
xor
int3
orl
movsb
movsl
in
sbb
mov
bound
sti
cld
andb
mov
push
jno
lret
xchg
mov
ss
lahf
mov
repz
repz
test
je
sub
mov
mov
inc
lret
cmp
loopne
and
lret
mov
lods
lock
mov
or
shrl
mov
ret
or
sub
and
pop
xlat
out
lret
lahf
aas
fs
sub
insl
sub
sbb
insl
xlat
aaa
int3
add
clc
mov
push
add
add
push
xor
push
cs
cwtl
movsl
sub
mov
pop
test
dec
xchg
xor
out
sbbb
lea
mull
scas
scas
pushl
push
ds
imul
out
mov
and
or
or
xchg
cmpsl
adc
subl
nop
lods
cs
mov
sub
jle
jnp
mov
inc
xlat
in
inc
push
mov
nop
cmp
mov
push
stos
leave
cmp
out
js
fnstsw
movsb
sub
cmp
insl
aaa
add
lcall
inc
xchg
jle
xchg
movsl
sub
movsl
repnz
pop
sub
mov
movsl
outsb
ja
mov
xor
sbb
cli
sub
lods
inc
xchg
mov
mov
lods
xor
clc
stc
pushf
dec
xor
dec
js
xor
xchg
fsubs
jo
xor
sub
in
xchg
mov
mov
out
outsl
sarl
loop
pop
hlt
dec
xchg
mov
xchg
addb
repz
cmc
xchg
sub
dec
jge
faddp
iret
xchg
movsb
xlat
int
pop
mov
arpl
mov
into
mov
mov
jnp
push
loope
sbb
insb
test
pop
xchg
ret
push
xor
repz
in
dec
popa
ljmp
ror
loope
lods
mov
sbb
out
clc
insl
cmp
out
imul
push
ss
test
push
or
jbe
xchg
insl
cltd
xchg
fmuls
jo
push
fwait
idivl
mov
pop
out
xor
dec
popf
xchg
sub
sarl
repnz
les
std
repnz
ficoms
in
mov
lock
int3
into
test
pop
shr
inc
or
lods
mov
add
roll
divl
stos
daa
pop
inc
into
mov
and
ds
add
stos
xchg
in
fists
std
mov
stos
pop
and
dec
int3
dec
out
and
ffree
out
xor
daa
popf
test
mov
jmp
add
pop
mov
test
repnz
test
sub
jo
addl
add
dec
cmpsb
sub
dec
imul
push
mov
xchg
and
lds
pop
xchg
push
hlt
shl
push
sahf
push
andl
cmp
out
mov
mov
bound
aaa
or
push
std
inc
push
add
fidivl
iret
pop
insl
xor
xchg
loop
pusha
imul
jne
mov
jmp
add
inc
test
or
mov
aas
ss
gs
or
pop
fdivrs
repnz
mov
mov
in
int3
adc
out
add
icebp
push
inc
xor
cmp
sbb
cli
test
rcr
mov
push
fadds
aam
push
xchg
outsb
pop
icebp
fdivl
hlt
sbb
stc
lock
pop
xchg
inc
clc
rolb
or
cmp
mov
jae
scas
dec
or
mov
andb
iret
cmp
scas
rolb
sub
mov
sbb
outsl
jb
adc
mov
pushf
dec
pop
hlt
stos
cs
mov
jne
inc
mov
cli
test
cmp
icebp
scas
icebp
imul
ds
sub
xor
push
mov
add
xchg
sbb
je
xchg
push
xorb
lahf
jp
xchg
imul
adc
or
into
pop
adc
xorb
fldcw
loope
aam
aam
addb
sarb
sbb
fldenv
ja
push
shlb
out
xchg
pop
add
test
xchg
dec
cwtl
lret
repz
jmp
pop
cmpsb
sub
subl
cmp
shll
jno
in
ja
cmp
jmp
imul
pop
sbb
xor
inc
je
push
sub
xchg
sbb
in
xor
dec
mov
enter
icebp
stos
or
mov
loopne
sub
push
cmpsl
mov
add
mov
xchg
sub
test
imul
pop
scas
and
xorb
stos
push
ret
sbb
daa
pop
pop
mov
daa
lods
mov
mov
jge
push
out
and
xor
das
movsl
and
les
sbb
sbb
fwait
scas
inc
out
push
scas
stos
outsb
idivl
sti
mov
mov
add
out
lods
add
cld
adc
adc
inc
scas
dec
xchg
jmp
pushf
fcoms
push
mov
mov
pop
cmp
lahf
xorb
mov
inc
mov
mov
push
mov
enter
mov
mov
pop
xchg
and
dec
pop
push
push
xchg
shlb
lret
xchg
adc
mov
jmp
incl
cmp
and
fcomip
sbb
test
add
cmp
adc
xchg
lahf
aam
adcb
mov
adc
mov
stc
dec
add
xchg
xchg
sahf
sub
fs
and
jns
jae
nop
xor
ret
or
jg
pop
add
mov
adc
mov
mov
jnp
jb
jp
fisttps
popf
sbb
out
outsl
dec
out
dec
dec
jns
sub
mov
or
sahf
fmuls
jnp
enter
call
aaa
fdivrs
shrl
sbb
insb
lods
inc
mov
ror
or
mov
push
push
orb
imul
mov
xchg
sbb
std
xchg
mov
loop
dec
imul
cmp
xor
lahf
es
mov
sub
lods
gs
movsl
in
and
push
popf
adc
dec
inc
divb
out
adc
cmpsb
or
outsl
jmp
lahf
insb
cmc
fistl
jne
push
adc
cwtl
insb
mov
cwtl
or
mov
leave
jnp
dec
test
dec
adc
add
cld
push
ffreep
mov
into
test
mov
push
in
stc
call
rcrb
ljmp
mov
jmp
mov
mov
sbb
mov
fcoml
fsubl
sti
daa
xor
or
xorl
repz
inc
mov
mov
ljmp
daa
fsub
aas
fldenv
movsb
ljmp
icebp
loope
or
data16
mov
bound
jbe
xchg
imul
jge
xor
mov
mov
jo
jo
pop
xor
mov
imul
add
daa
loope
xor
push
lret
icebp
dec
push
int3
nop
call
out
adc
in
repnz
sbb
dec
ret
stc
inc
push
xchg
sub
les
ret
dec
cmp
lods
pusha
in
jmp
rorb
fstl
xchg
subl
aad
js
loop
or
xchg
push
xor
stos
inc
add
jno
or
arpl
mov
ret
sub
mov
ret
fstps
mov
sti
stc
loope
in
pop
and
out
and
daa
mov
xchg
in
pop
dec
jbe
fwait
lahf
mov
add
scas
cs
aas
or
mov
rorl
jo
les
repz
mov
ret
cmp
pop
inc
xor
xchg
fildl
subb
in
xchg
fists
test
pop
push
int
mov
inc
sub
lret
test
adc
es
dec
pop
push
mov
cmp
or
ja
lret
scas
dec
call
xor
add
add
add
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
sub
add
mov
sbbb
add
enter
add
pop
add
add
add
add
cmp
add
sbb
add
inc
add
cmp
add
push
add
add
add
add
add
add
add
cmp
add
or
add
xor
add
pop
add
xor
add
addb
xor
add
test
add
rolb
add
clc
add
xor
add
and
add
dec
add
sub
add
jo
add
cwtl
add
sub
add
rolb
sub
add
call
add
add
add
sub
add
cmp
sub
add
pusha
add
addb
add
or
add
add
add
jne
add
or
add
add
add
add
add
add
add
jg
add
add
add
add
add
add
js
add
mov
add
or
add
addl
mov
add
or
add
test
add
or
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
rolb
add
or
add
add
adc
add
or
add
add
cwtl
cmpsl
add
mov
add
or
add
test
add
or
add
add
add
mov
add
or
add
add
add
add
add
add
add
mov
add
or
add
add
add
add
mov
add
or
add
add
add
ret
mov
add
or
add
add
mov
add
call
add
add
add
add
into
add
call
add
add
add
add
flds
add
add
add
add
add
add
add
add
mov
add
or
add
add
add
fildl
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
push
add
add
add
add
add
mov
or
add
add
add
add
add
add
add
add
add
xor
add
add
add
loopne
add
add
add
or
add
add
add
add
mov
add
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
inc
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
adc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
outsb
add
add
dec
add
add
add
add
inc
add
jb
add
add
jb
add
add
addb
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
je
add
popa
add
add
add
add
add
add
and
data16
add
and
sub
inc
add
push
add
add
add
outsl
add
jb
arpl
add
add
outsl
add
add
add
add
je
outsl
add
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jo
jo
add
js
add
add
sbb
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
insb
add
data16
add
add
add
add
add
add
add
add
add
jns
and
inc
add
outsb
add
add
dec
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
je
add
popa
add
add
add
add
js
add
add
or
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
je
add
popa
add
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
cmp
mov
add
nop
cmp
sarb
add
add
add
cmp
mov
add
add
cmp
out
add
idivb
add
push
cmp
adc
add
and
add
add
add
xor
add
add
add
inc
cmp
add
add
pop
cmp
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
jb
imul
add
jae
jo
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
imul
js
popa
jb
insl
inc
add
add
je
imul
outsl
outsb
dec
outsb
outsw
push
imul
push
push
push
push
gs
gs
imul
jb
popa
je
outsl
outsb
inc
