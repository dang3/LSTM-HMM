in
dec
jle
push
mov
or
dec
mov
std
or
ret
pop
pop
ret
pop
push
insl
fbstp
ret
adc
xor
leave
ret
ret
add
pop
ret
inc
adc
mov
add
mov
pop
add
pushl
nop
nop
and
mov
adc
inc
and
fsin
mov
addb
sbb
add
adc
sbb
add
pop
jnp
sti
testl
and
dec
add
inc
push
pop
mov
push
sbb
in
scas
imul
add
add
xorb
sub
or
add
push
cmp
and
inc
pop
sbbb
inc
cmp
and
mov
inc
cmp
and
mov
add
jge
and
popa
and
inc
or
das
add
and
jne
imul
int
mov
int3
lea
xor
mov
fildl
lahf
pushf
data16
pop
cmp
imul
xor
cmp
insb
scas
inc
cmpsl
daa
jne
sbb
mov
sub
outsb
outsb
popf
clc
and
push
push
adcl
leave
stos
xor
add
sub
cmpsb
add
out
jmp
dec
ja
inc
add
add
add
cmp
add
adc
adc
mov
add
jo
add
add
nop
add
adc
inc
daa
cmp
xor
push
stos
pop
add
jb
stc
sbb
daa
adc
add
add
roll
or
dec
mov
fistpll
sub
lahf
pop
add
add
add
mov
addr16
add
mov
add
or
lcall
push
mov
call
inc
ret
popl
lcall
lea
or
into
mov
icebp
add
shrb
and
sub
ret
cmp
aaa
fistpll
jg
cwtl
jbe
mov
push
inc
addl
cmc
xchg
add
push
add
jecxz
sti
fucomip
mov
sbb
push
add
in
imulb
add
push
add
call
jp
sti
sbb
adc
and
insl
xchg
adc
pop
mov
stc
add
mov
test
in
idivb
push
or
add
add
sub
jle
loope
add
or
mov
mov
sahf
cmp
jno
xchg
push
lahf
in
jmp
roll
xor
xorl
repnz
mov
xchg
aaa
insb
lds
push
xor
mov
mov
mov
inc
adcl
xchg
mov
sub
mov
test
movsb
push
add
and
and
add
mov
ret
mov
sbb
fcomps
call
add
mov
cmp
or
test
push
jg
outsb
fists
adc
or
mov
mov
outsl
cld
lcall
int3
outsb
ret
ljmp
pop
jnp
sub
xlat
inc
js
in
fisttpl
ror
cmp
adc
add
mov
lock
mov
sbbb
popa
imul
cmp
iret
adc
push
inc
int3
cld
mov
pop
pop
sti
inc
ss
cmp
mov
add
inc
out
or
das
cld
adc
lock
daa
or
shl
outsl
test
inc
push
and
push
movsl
and
add
add
je
testb
loopne
loop
in
sti
pusha
adc
push
into
cwtl
or
xacquire
fdivr
jg
je
int3
add
enter
push
jl
fildll
pop
enter
sbb
enter
or
lock
iret
cmp
push
jg
cld
jb
xor
jae
adc
or
or
push
cmp
out
clc
outsl
aaa
mov
jne
adcl
rcr
add
add
dec
mov
add
push
mov
sbb
and
test
and
out
dec
or
pop
jle
cmp
add
es
jno
test
test
xor
pop
pop
imul
pop
inc
inc
inc
imul
push
ss
call
jno
jmp
add
inc
add
ret
push
jbe
daa
adc
rolb
in
sti
test
and
dec
or
ljmp
dec
sar
adc
cmpsl
bnd
adc
add
sub
in
or
imul
pop
outsb
pushl
mov
test
add
addr16
and
mov
dec
jno
outsb
add
aas
mov
inc
adc
incl
add
sub
neg
sub
pop
mov
movsb
or
pop
fs
push
into
cmp
mov
lahf
stos
add
or
dec
push
sbb
or
dec
xchg
push
and
jae
pop
push
add
rorl
cmp
repz
adc
mov
add
add
pop
mov
xor
jmp
outsb
mov
adc
popf
mov
mov
mov
test
pop
sub
mov
in
sub
scas
arpl
pop
rorl
int3
lret
sub
push
mov
add
pop
xor
mov
filds
rolb
das
push
sub
xor
fdivrs
lret
xchg
int
xlat
test
fdivrs
in
imul
imul
lock
push
xchg
cmpsb
es
cmp
pop
or
push
mov
pop
ret
jbe
shlb
pop
cmp
neg
popa
dec
pop
loope
lea
popf
sub
push
jo
in
mov
cmp
xchg
int
ficomps
call
mov
add
loopne
mov
add
fsubrs
xor
xchg
bound
ret
test
insb
inc
mov
cli
inc
adc
xor
fs
in
js
cld
xchg
ret
enter
mov
jne
pop
inc
je
inc
or
outsl
cld
sbb
xor
push
add
stos
add
mov
lds
cmp
push
xor
mov
sti
inc
mov
lock
xchg
idivl
pop
and
push
sti
push
pop
dec
or
xchg
or
mov
jo
call
cmp
ret
add
jecxz
mov
sub
call
inc
sub
sbb
fmuls
xor
sub
rorb
and
add
dec
movsl
and
outsl
cld
dec
mov
xchg
fcmovnu
or
mov
test
add
or
jns
xchg
lret
imul
jmp
xchg
mov
jge
push
iret
adc
push
imul
push
push
mov
adc
orl
lods
aaa
fildl
mov
xorb
pop
adc
sbb
shrl
insl
hlt
popf
js
push
loopne
inc
je
push
sti
dec
sbb
sbb
out
data16
sar
mov
movsb
and
aam
loope
mov
push
ja
outsl
add
mov
cmpsb
mov
or
and
mov
cld
or
mov
icebp
hlt
pop
mov
add
nop
and
lods
mov
or
test
and
jecxz
int3
pop
aaa
add
add
mov
jl
cmp
leave
in
add
jno
mov
mov
dec
xlat
sbb
jmp
lret
push
call
jns
push
jmp
add
sarb
lahf
or
test
ss
jp
in
mov
xchg
clc
imul
cmp
popa
jecxz
pop
cwtl
into
mov
mov
inc
into
les
ret
push
pop
fdivr
lahf
add
mov
inc
add
push
hlt
decl
xchg
jmp
jle
lds
mov
shl
mov
mov
lock
stos
into
sbb
dec
test
sbb
jb
push
adc
sahf
mov
xchg
dec
sub
ds
cmp
test
adcl
decl
push
rcrl
xor
adc
and
scas
shlb
dec
xor
or
mov
jl
out
aaa
pop
inc
lcall
orb
popa
dec
in
add
xchg
imul
add
lods
sbb
xor
sbb
lret
ret
cld
clc
stc
push
lcall
jle
iret
mov
fisubl
mov
mov
out
cld
cltd
cltd
ja
pop
addr16
xor
or
add
and
stos
pop
clc
xlat
outsb
pop
jb
insb
je
inc
iret
mov
lcall
xchg
insb
pop
sbb
or
dec
insb
mov
or
cwtl
cwtl
push
ret
sub
shl
jp
add
mov
and
add
dec
test
inc
adc
pop
or
rcrb
push
out
jl
add
call
mov
xchg
mov
ret
outsb
outsb
xlat
push
sub
leave
aaa
lock
or
loope
ss
jno
ljmp
jle
mov
loopne
mov
test
notb
push
add
jecxz
sub
sub
in
shlb
ss
aam
pop
fwait
cmpsb
dec
push
sbb
pcmpeqw
stc
or
jns
mov
int3
popa
rorb
int3
cmp
mov
jbe
popa
mov
mov
mov
sbb
addl
and
outsl
or
aas
mov
mov
inc
cmpsb
movzbl
outsb
imul
sbb
mov
in
out
test
test
flds
scas
std
inc
jnp
and
sbb
and
mov
sbb
add
sub
jno
xchg
addr16
push
adc
inc
loope
lods
mov
dec
lea
daa
lock
mov
addb
mov
pop
xor
add
xor
popf
pop
mov
add
and
cld
push
cltd
adc
call
stc
adc
in
gs
push
sbb
out
lods
inc
in
cld
push
mov
mov
idiv
das
fstl
clc
jbe
sub
data16
and
orl
inc
neg
and
movsl
pusha
push
dec
rcrl
jg
in
out
popf
leave
xchg
jo
inc
push
xor
imul
add
clc
lcall
sahf
cltd
sbb
xorl
jge
push
adc
stc
out
cmpsb
mov
dec
in
clc
inc
cmp
dec
dec
std
outsl
jge
fsubs
dec
push
inc
inc
sbb
fwait
push
adc
inc
push
sbb
mov
sbb
ds
adc
in
mov
ror
bound
xchg
mov
mov
mov
and
subl
mov
int
lock
cmp
add
movsl
mov
outsl
push
inc
adc
jp
and
popf
enter
pop
stos
repz
dec
mov
mov
lret
inc
xchg
sub
fbld
pop
fldl
call
cwtl
orl
lret
decl
fxch
aam
or
inc
nop
adcb
cld
cmp
hlt
inc
out
cli
in
mov
jae
mov
notl
les
cli
add
js
jae
xchg
cs
test
sub
cltd
adc
sbb
cmp
pop
lea
mov
lock
mov
and
dec
jl
insl
ret
pop
mov
pop
pop
ljmp
sbb
std
and
lds
repnz
shrl
and
cmp
das
std
pop
decl
movsb
imul
and
xor
pop
popf
call
lock
xor
cld
jne
test
inc
es
decl
adcb
loope
jecxz
cs
enter
test
rcll
sar
in
add
mov
roll
std
mov
add
roll
jo
cmp
push
imul
inc
sbb
mov
adc
bound
call
cmp
imul
test
shrb
pushf
jmp
enter
push
out
or
mov
cmp
push
insl
sti
adc
fs
and
inc
shlb
icebp
or
pop
sbb
push
test
mov
hlt
mov
out
std
xchg
pusha
dec
arpl
pop
pop
cld
fucomp
cli
aaa
cli
imul
jns
push
adc
popf
aad
ret
or
addr16
dec
jp
adc
insb
jmp
ljmp
mov
cmpl
sbb
mov
fstpt
add
cmp
and
cmp
dec
cmp
sbb
or
aam
out
jmp
test
mov
pusha
loopne
mov
add
cwtl
shlb
test
hlt
jl
push
jne
mov
inc
dec
add
pop
push
push
or
jns
loopne
aaa
je
dec
loop
dec
insb
aas
imul
imul
or
gs
dec
add
lods
push
and
lret
in
insb
sub
jle
movsb
addb
sbb
outsl
sbb
cmp
test
cltd
fnstenv
add
addr16
test
or
dec
loopne
inc
xchg
loopne
push
or
cld
jmp
cmp
push
outsl
ret
dec
dec
xchg
fadds
shlb
les
jle
pop
inc
bound
jo
pop
das
mov
out
mov
rolb
sub
js
jne
jo
mov
push
push
mov
sbbl
sti
push
clc
movsl
lea
cmp
add
out
inc
fldlg2
push
lret
xor
mov
or
cmc
cmc
imul
loope
inc
clc
jmp
sub
mov
out
outsl
add
inc
jns
cmp
cmp
xchg
fidivrs
inc
adc
push
sbb
jg
rorl
and
add
push
call
jg
cltd
dec
pop
add
mov
inc
neg
loope
in
in
arpl
jo
sub
testl
add
or
push
aad
pop
add
sahf
insl
and
adc
insl
sbb
adc
dec
shlb
mov
in
mov
addr16
push
movhps
mov
dec
cmp
in
aaa
fidivs
sub
push
add
or
add
scas
sbb
cmp
xchg
mov
push
or
fcmovbe
inc
sub
mov
dec
mov
decb
rep
repnz
sbb
std
fcompl
insb
add
pop
sub
repz
sbb
sbb
cmp
fwait
xorl
inc
js
je
pop
inc
ret
or
rcrb
jae
mov
dec
orb
fldt
add
ret
lods
mov
int3
aam
inc
fsub
adc
dec
outsl
jbe
scas
std
loope
imul
push
mov
adc
fdivl
xlat
not
mov
mov
and
inc
mul
pop
xchg
fldenv
std
clc
dec
jbe
stc
loope
jns
mov
inc
mov
add
sub
pop
popf
inc
ss
movb
lods
pushf
mov
aaa
sbb
mov
ss
out
add
push
adc
cld
mov
push
add
lret
xchg
jbe
jge
out
sbb
add
in
fnstcw
adc
inc
add
sbb
cwtl
pop
aaa
repnz
mov
adc
pop
mov
adc
xor
cli
pop
or
push
clc
pop
lea
stos
dec
leave
push
ds
imul
xor
cmp
ret
jae
mov
pop
push
rclb
dec
sbb
fcomip
dec
jo
in
lea
inc
cld
sub
xor
mull
dec
sub
aad
jge
iret
jo
in
aam
ret
je
mov
sahf
lods
lock
repz
xor
dec
push
outsb
out
mov
sub
sbb
pop
inc
or
or
lods
fs
and
cmp
addr16
ret
lea
pop
icebp
jge
test
out
divl
inc
int
pop
loopne
sahf
push
mov
or
aam
outsl
aaa
mov
shll
movsb
lods
jo
sbb
in
add
add
ja
movsl
imul
imul
lea
push
pushl
in
cli
mov
push
fcoms
dec
in
push
sub
js
add
xchg
icebp
fisubrs
mov
xor
dec
push
lahf
dec
lret
sub
jp
and
and
sti
fsubp
test
add
enter
push
ds
sbb
jmp
test
test
orb
jo
and
cld
xchg
icebp
jmp
neg
adc
std
fmul
es
fidivs
pop
pop
jnp
push
movsb
fadds
out
cmp
adc
mov
int3
out
jecxz
loope
xor
repnz
pop
xor
inc
hlt
sbb
dec
cmpsb
out
mul
es
xor
mov
inc
adc
inc
xchg
push
cmp
sub
das
inc
or
mov
sar
filds
fbstp
mov
push
stos
jmp
inc
sbb
loop
cmpsb
cwtl
mov
mov
mov
mov
cmp
mov
xchg
jle
cmp
xor
lock
fistpl
int
sub
adc
in
cmp
jb
dec
mov
sub
std
jg
pop
clc
sub
fidivl
jl
and
mov
gs
adc
mov
scas
sbb
call
cmpsl
adc
pop
fs
mov
jg
push
dec
mov
pop
hlt
cmpsl
or
out
pop
sbbb
push
mov
test
xchg
outsl
add
or
add
das
es
out
stos
and
or
test
xchg
repz
addl
pop
or
sbb
mov
and
push
mov
ljmp
cmp
xchg
mov
add
or
rorl
xor
xchg
aas
lret
jl
xchg
sub
and
pop
test
ljmp
fiaddl
mov
aam
inc
loope
jg
fsubp
or
mov
push
cmp
jg
outsl
ljmp
add
push
nop
aas
push
add
lods
fnsave
push
push
or
add
in
filds
adc
mov
and
dec
adc
in
fcoms
je
dec
dec
std
popf
xchg
lea
lods
out
mov
push
xchg
sub
ds
push
jnp
cmp
in
mov
std
adc
mov
xgetbv
dec
and
mov
or
or
test
fidivl
mov
fs
das
xor
jnp
xor
lret
ljmp
lahf
add
xor
fxch
push
pop
push
pop
sub
push
popl
mov
sbb
ss
and
cmp
dec
jge
or
mov
push
and
mov
popf
push
fisttpl
inc
xchg
test
mov
test
aaa
inc
jne
lret
or
sub
mov
inc
sbb
inc
dec
loope
adc
cmp
call
lahf
lock
je
and
out
movsl
ss
mov
and
icebp
dec
cmpsb
lods
insl
sub
out
rolb
sbb
xchg
addr16
add
sbb
aaa
and
icebp
or
mov
jb
outsl
shll
sbb
xchg
test
loop
dec
sub
dec
xor
clc
pushf
mov
jb
lds
cmpsb
push
std
or
mov
push
jo
xchg
inc
lcall
adc
xchg
pop
add
jg
mov
aaa
cmp
xor
add
in
inc
insb
sub
pop
mov
jle
mov
mov
jg
mov
add
addb
bound
mov
dec
mov
cwtl
test
xor
xor
jg
addb
pop
pop
cltd
or
loope
xchg
js
insl
push
adc
mov
pop
mov
les
mov
sbb
pop
sub
jle
or
lock
bound
fiaddl
dec
sbb
push
add
adc
fisubs
les
pop
clc
jae
adc
push
mov
xchg
jne
or
call
push
int
adcb
aam
insb
aaa
test
cmp
push
das
push
mov
pop
sbb
fwait
ret
clc
cmp
imul
rolb
dec
add
or
movsb
fldt
dec
mov
push
lock
or
repz
inc
into
shll
push
sub
and
xor
adc
jb
xor
sub
jl
add
cmp
movsb
aam
sti
jne
cwtl
rorb
and
or
popf
mov
sbb
or
sub
hlt
fwait
rcrb
mov
insl
cli
aas
lret
cli
sbb
mov
pop
mov
int3
mov
ret
xor
jp
mov
push
in
cmp
mov
loopne
imul
mov
jnp
sub
cs
lcall
loope
dec
aas
mov
rcrb
aaa
sbb
lcall
push
ljmp
cld
in
sbb
fistpll
dec
mov
mov
mov
les
outsl
lods
jmp
sbb
in
sub
test
jb
xchg
pop
xor
pop
pop
xchg
sbbb
std
cmpsl
ja
add
int
call
filds
in
cmpsb
sarb
fwait
jnp
sub
xor
inc
jge
outsl
ljmp
test
stos
add
loopne
icebp
inc
push
shrl
inc
cmp
outsb
shl
sbb
jno
clc
decb
mov
jg
roll
and
stos
xchg
outsl
cmpb
mov
int
add
fs
scas
cmc
test
daa
mov
dec
pop
push
add
lret
int
das
mov
xor
lahf
test
int3
aad
dec
incl
jg
inc
add
mov
repz
mov
orb
call
out
insl
cmc
push
jnp
jne
dec
outsl
jb
mov
lods
inc
jl
or
adc
mov
scas
les
std
mov
or
pushf
push
dec
and
push
movsl
cmp
test
pop
mov
imul
jg
fcompl
mov
push
add
jp
sbb
dec
add
jmp
mov
out
sbb
or
add
mov
cmp
insb
ljmp
std
gs
mov
pop
lret
sti
pushf
scas
inc
sti
mov
push
add
sbb
das
rol
inc
inc
leave
in
aas
das
les
mov
aaa
in
out
mov
jo
lcall
sub
nop
repnz
mov
add
and
movsb
jecxz
push
cmp
fiaddl
outsl
and
popa
or
ljmp
push
mov
cli
xor
orl
push
not
xor
mov
hlt
xor
addb
pop
cld
ja
push
mov
push
pop
test
mov
sub
and
mov
movsb
jnp
mov
sub
and
addr16
das
imul
popf
add
pop
int3
xchg
ds
mov
dec
daa
and
or
loope
push
hlt
stos
shll
add
fimuls
mov
cmp
leave
push
or
aas
cli
bnd
sbb
xor
inc
out
les
fdivr
hlt
sbb
daa
jb
lock
or
and
mov
sbb
add
adc
add
and
std
repz
ret
daa
cmpsb
dec
sti
lods
fdivrl
or
das
mov
in
roll
mov
sub
push
adc
inc
in
pop
lods
inc
dec
pop
negb
xor
divb
js
jl
add
add
lods
and
in
shlb
adc
lds
notl
fstpt
or
sarb
and
addr16
push
lret
push
fldt
cld
hlt
mov
mov
dec
xchg
add
or
pop
incl
sbb
or
adc
adcb
popf
insl
lret
jne
and
inc
out
popa
pop
push
cmp
cmp
mov
insl
push
mov
and
icebp
xor
inc
xor
adc
aaa
ret
pop
mov
push
notb
repnz
or
rol
xorl
or
stos
ss
loope
sti
cwtl
addb
pop
lcall
mov
ja
fwait
sub
ret
adc
mov
outsl
mov
rolb
push
or
call
stos
cwtl
out
and
jb
test
ds
push
dec
xor
push
xchg
xor
pusha
push
iret
aam
lret
ljmp
cs
aaa
fistpl
fwait
loopne
div
mov
cs
dec
mov
fcom
mov
dec
or
int
repnz
add
or
hlt
mov
pop
jb
xor
jae
fs
test
in
test
test
loopne
mov
in
cmp
sbb
pop
adc
sysexit
stos
arpl
fsubp
and
iret
dec
cld
push
mov
imull
add
lret
adc
stos
call
or
mov
test
or
pop
call
pop
shlb
xor
sbb
cli
scas
add
int3
lods
dec
out
das
adc
stos
arpl
repz
xchg
sti
cs
popa
rclb
loope
push
fmull
add
add
clc
dec
fidivs
call
daa
push
sub
daa
mov
enter
and
loopne
inc
sub
sub
lcall
nop
loopne
stc
add
sub
ud0
ss
das
or
adc
shrb
clc
loop
lods
jge
sub
ret
cmpsb
clc
adc
clc
sahf
jecxz
add
jne
dec
in
stos
dec
pop
push
mov
std
or
jnp
cs
test
rcl
aam
out
int
or
add
push
jg
jbe
arpl
dec
add
xorl
xlat
xor
pop
sub
jnp
mov
test
inc
xor
fdivl
shl
push
shll
adc
cli
pop
cmp
faddp
fcmovb
add
cmp
in
hlt
stos
push
sbb
cmp
and
sbb
xor
mov
or
sub
sub
scas
ret
and
or
orl
rcrb
rorb
inc
add
push
popf
push
out
andl
push
mov
repz
add
insb
dec
inc
adc
mov
clc
js
ret
or
cmp
ret
out
lea
inc
dec
imul
fildll
jb
daa
add
cmp
lcall
lret
or
pop
inc
mov
inc
leave
rcll
xor
pop
cli
aaa
xchg
xorl
add
xor
adc
sub
and
pop
cmp
inc
fsubr
fcmovnb
and
pop
pop
rorb
das
cmp
jno
shrb
push
adc
mov
cwtl
or
aam
push
imul
cltd
insb
dec
outsl
rcl
push
adc
lret
popf
in
ret
fsubrl
shr
pop
mov
mov
rolb
xchg
loop
dec
mov
repnz
and
add
rorb
enter
aas
bound
clc
inc
cmp
mov
fnstsw
sbb
imul
loope
mov
rolb
imul
dec
dec
sub
inc
cwtl
pushf
jnp
fscale
inc
std
jg
add
mov
aaa
in
jle
pop
arpl
stos
fistps
inc
add
rclb
mov
rcrb
in
pop
clc
jg
decl
aaa
out
xchg
stc
xchg
in
loop
in
add
cmp
nop
xorb
sarl
pop
add
mov
test
or
iret
mov
sbb
push
pop
mov
push
mov
and
cmc
mov
pop
jmp
add
and
add
xor
jecxz
cli
inc
fildll
adc
push
pop
and
and
ss
pop
xor
xchg
ret
test
cli
inc
mov
cltd
sbb
adc
stos
mov
sbb
add
dec
sarl
data16
adc
add
lcall
test
pop
fmuls
mov
shr
inc
addb
daa
add
lcall
add
jo
nop
add
rolb
cld
sbb
fcmovu
adc
cmp
js
jecxz
push
pop
add
jle
lods
shlb
pushl
hlt
and
scas
add
les
movsb
enter
clc
mov
sbb
icebp
in
stos
daa
mov
add
inc
add
mov
add
hlt
or
inc
and
inc
popa
xchg
jl
adc
jg
mov
xchg
mov
bound
mov
das
in
add
push
jb
xor
hlt
add
adc
je
jmp
movsb
and
push
mov
mov
sub
jo
stos
mov
xchg
cli
idivb
inc
insl
cmpsl
mov
jo
div
add
mov
addl
push
sub
inc
push
sbb
js
pop
pop
or
es
outsb
adc
bound
arpl
call
lock
add
jge
pop
and
js
sub
fwait
cmp
cld
or
pop
inc
mov
fcoml
pop
adc
or
movsl
call
cmp
mov
fistl
jo
ficomps
and
adc
push
add
sub
xchg
repnz
pop
test
fsubrs
add
push
in
xchg
adc
sbb
and
xchg
dec
jg
in
stc
push
insl
xchg
imulb
sbb
outsl
mov
stc
add
lcall
mov
adc
push
cmp
psrad
sub
mov
inc
cltd
add
test
and
in
jb
dec
adc
mov
rclb
shl
loopne
adc
jno
cmp
jno
imul
test
mov
ds
aad
movsl
iret
faddl
xlat
dec
fldenv
bt
mov
dec
in
push
stos
cmp
and
cmpsl
pusha
jbe
mov
dec
pop
dec
in
push
popf
mov
or
pop
mov
les
ror
cmpsl
repz
sahf
fildl
repnz
inc
add
push
daa
lcall
jnp
fdivl
cs
sub
loop
push
xchg
xor
outsb
adc
stos
dec
inc
add
push
dec
pusha
ret
and
mov
mov
or
pop
jmp
adc
inc
jle
and
jns
inc
push
daa
dec
cmp
in
sbb
inc
adc
daa
mov
and
adc
loopne
xchg
rorb
cmp
shlb
ret
aaa
jo
or
lock
pop
mulb
cltd
jp
pop
aaa
dec
jge
adc
fwait
rcll
data16
pop
fsubl
scas
adc
shrb
xchg
lret
fsubrs
xor
xor
and
in
mov
jg
push
movsb
es
shr
add
sbb
and
enter
pop
mov
decb
daa
test
pop
dec
dec
xor
cmp
loope
mul
fisubl
push
loope
add
jbe
dec
fadds
mov
divl
js
mov
shl
xorl
or
or
push
mov
data16
shll
mov
jmp
dec
mov
lods
add
jmp
xor
xchg
js
and
aam
filds
and
outsl
pop
cli
xchg
rcr
imul
sub
lods
icebp
jge
cmp
mov
std
mov
push
jno
test
mov
pop
mov
test
inc
enter
lock
cmp
add
pop
and
fildll
jne
outsl
lcall
pop
push
and
pop
in
ljmp
loop
push
cmpsl
pop
fwait
hlt
add
test
movsl
loopne
xchg
or
add
pop
mov
mov
lea
pop
add
adc
std
andb
aad
lods
sub
popf
decl
andb
cmp
add
sub
icebp
jg
pusha
cmc
or
loop
push
mov
fsubl
add
xchg
and
xor
cld
scas
jmp
mov
add
mov
lds
add
ss
sub
dec
add
imul
xor
jge
mov
pop
adc
stos
addl
cmpsb
cwtl
jl
lcall
decl
mov
inc
xor
sub
push
xchg
mov
dec
mov
das
rolb
shll
jo
lcall
add
andb
add
or
and
roll
xor
dec
test
int3
adc
cmpb
out
rol
adc
adc
pusha
xor
cld
push
fists
add
loop
fbstp
mov
stc
ret
fwait
icebp
inc
sbb
push
scas
jmp
fadd
mov
add
mov
dec
cld
mov
sub
ja
mov
or
sbb
adc
inc
mov
add
fdivs
ds
push
mov
pushl
pop
loopne
sarb
inc
mov
and
imul
imul
inc
repz
adc
fisubrs
add
test
shrb
cmc
cmpsb
add
aad
dec
pusha
into
test
movl
and
test
shlb
rolb
pop
ss
mov
xor
ljmp
outsl
pop
mov
jnp
jno
test
cmp
insl
hlt
sbb
into
push
imul
and
push
jmp
mov
xor
add
pushw
les
push
mov
fidivrs
xchg
mov
mov
scas
mov
xor
adc
stc
xchg
adc
ljmp
lock
cmp
pop
push
aam
loopne
add
mov
ret
lock
out
or
adc
fwait
xchg
into
es
inc
push
mov
mov
mov
adc
lret
push
xchg
mov
xchg
push
enter
adc
fisttps
clc
enter
mov
lock
xchg
xor
jbe
pop
enter
and
les
sub
adc
les
pop
jae
or
add
pop
aam
mov
mov
cld
cltd
clc
jp
loope
mov
add
sbb
add
cmp
mov
jle
adc
repz
dec
cmp
fimull
add
xor
or
popf
loopne
bound
hlt
push
lahf
fimuls
jns
jle
mov
xlat
test
test
cs
cmp
pop
sub
mov
add
push
push
push
mov
push
pop
fidivrl
or
loope
dec
mov
ret
xor
jb
cmc
add
and
nop
xor
sub
add
inc
sub
mov
lahf
add
dec
or
lret
scas
push
in
ss
mov
enter
mov
mov
mov
roll
pop
add
xor
xor
popf
shrb
fwait
js
adc
enter
xchg
decb
xor
outsl
bound
int
fsub
push
mov
ret
movsb
js
adc
jno
fcos
mov
xor
jo
call
xchg
jmp
je
imul
sub
push
xchg
or
and
int3
adc
cs
push
or
bound
add
or
add
sbb
pop
insl
out
in
mov
or
les
jle
jae
icebp
add
sbb
sbb
orb
gs
pushf
sti
lret
repnz
or
aad
mov
xlat
jle
shl
push
mov
mov
sub
cmp
adc
cmpsb
outsb
mov
xor
inc
sbb
insl
cld
add
dec
call
xchg
test
fisttpll
push
pop
adc
lea
push
lea
ret
fdivs
mov
mov
adc
xchg
sub
jg
nop
mov
xchg
aas
or
cmpsl
divb
sbbl
sbb
mov
add
les
dec
add
sbb
push
push
mov
aam
sub
cmp
loope
das
iret
add
mov
idiv
imul
adc
cmc
jmp
xchg
rcll
shll
mov
mov
fwait
ljmp
xor
jp
add
outsl
hlt
xchg
iret
sub
pop
add
jmp
jle
fdivs
dec
add
push
out
push
cmp
arpl
pmullw
mov
add
das
xorb
push
xchg
popa
shll
hlt
add
hlt
or
into
add
in
lret
cmp
movsl
pop
loop
stos
sbb
clc
inc
mov
xor
mov
out
inc
idivl
add
mov
xchg
cwtl
inc
out
or
fists
cmp
gs
lcall
rorl
inc
add
movsb
andl
mov
sahf
add
cmpsb
mov
mov
mov
incb
cmp
add
mov
out
mov
sti
stos
mov
mov
test
lcall
jg
add
rorb
adc
fisubl
pop
sub
fstp
add
gs
add
orb
xorb
sbb
cmpsl
js
mov
enter
loop
daa
xor
dec
icebp
jp
insb
or
test
and
xor
mov
mov
push
fcompl
inc
jl
xor
icebp
push
add
scas
test
lcall
cmp
outsb
jle
xor
test
or
mov
or
iret
cs
les
sub
lcall
xor
jnp
jb
rorl
add
decl
pop
movsb
adc
add
push
and
gs
pop
test
loope
or
pop
inc
lock
sbb
loope
sti
fnsave
adc
add
loop
repz
xor
jge
mov
xorb
in
jmp
mov
pop
in
push
and
and
test
ljmp
jb
xor
incl
push
sub
shrb
cld
jg
negb
mov
movups
in
lahf
jecxz
inc
mov
repnz
and
mov
mul
lret
stc
sti
add
and
add
mov
pop
pop
mov
pop
clc
test
xor
stc
push
clc
adc
lcall
sahf
push
pushf
pop
aas
in
pusha
inc
repnz
scas
xlat
cmpsl
sbb
call
and
mov
mov
test
push
sbb
mov
mov
xor
cmp
adc
fdivrs
pop
js
adc
inc
or
jle
add
pop
int
add
cmp
scas
and
sti
mov
pop
push
sahf
push
sbb
js
xchg
pushl
incb
mov
add
mov
dec
lahf
fcomp
mov
pop
add
arpl
lods
decl
loop
adcb
out
js
inc
xchg
jp
or
outsl
in
rcll
ja
hlt
idiv
decl
xor
dec
sbb
sub
frstor
std
lods
std
cmpsb
enter
cmpb
jg
push
lret
push
pop
or
sub
jp
arpl
xchg
in
inc
aaa
jp
fbld
sbb
mov
sbb
clc
xchg
push
push
iret
shll
bnd
mov
jne
cltd
in
push
outsl
das
xchg
adc
add
cmpb
stc
inc
aad
aas
and
and
pop
loopne
scas
out
loopne
into
adc
mov
or
loope
rclb
jecxz
mov
xor
bound
les
mov
lahf
mov
aas
inc
cmp
adc
jle
xlat
loopne
mov
fisttpll
shrd
inc
dec
mov
jmp
and
pop
or
cmp
clc
stos
fwait
add
pop
sub
or
fistpll
mov
loop
orb
fidivl
push
dec
addb
or
ss
mov
push
mov
dec
lret
aam
add
fs
pop
mov
sar
or
ljmp
dec
ljmp
pop
xchg
adc
pop
fs
add
xchg
faddl
dec
mov
lret
insl
push
mov
jno
push
push
int
dec
gs
repnz
mov
mov
and
sbb
outsb
cld
loopne
jnp
jecxz
pop
jno
clc
adc
cmp
jo
loopne
ljmp
lcall
xchg
jnp
push
pop
add
mov
aas
fldl
clc
es
jae
adc
mov
lods
sbb
sub
fidivl
jne
bnd
fmull
sub
sub
les
dec
jnp
popa
adc
push
mov
adc
cmp
in
inc
mov
jecxz
fcoml
push
ret
or
rep
pop
mov
fcomps
into
push
pop
nop
ficompl
sbbl
xchg
xlat
push
stos
and
test
adc
xchg
jnp
cmpsl
pop
lods
cli
xor
and
stc
add
xor
test
mov
sub
das
xor
add
fwait
push
cmp
cld
adc
xchg
mov
mov
into
xchg
adc
lea
jno
rorb
js
mov
lock
inc
ja
or
fsub
cmp
sbb
add
pop
jno
pop
sbb
add
mov
sub
out
call
or
add
inc
mov
mov
int
and
fmull
sbb
mov
pusha
xchg
iret
pop
mov
in
sbb
outsb
adc
adc
test
mov
ret
sbb
stos
jae
dec
lahf
mov
xchg
cmc
popf
sbb
cmovne
es
daa
cli
pusha
adc
pop
jae
xchg
push
add
mov
rcrl
adc
lods
or
in
xchg
xchg
push
int3
sbb
mov
pop
loopew
loopne
in
int3
mov
dec
adc
enter
pop
lret
fwait
add
cmpsl
sub
xor
dec
cmp
and
bound
inc
hlt
loope
out
sbb
mov
and
ds
out
add
pop
fwait
test
pop
ljmp
outsb
jl
pop
sbb
outsb
cmp
sub
ja
lods
shlb
push
mov
mov
cmpsb
jnp
jbe
dec
rorb
adc
adc
mov
and
push
rol
call
pop
cli
jge
sbb
adc
sbb
inc
push
stc
mov
xlat
dec
sbb
pushl
aaa
lahf
mov
sbb
adc
mov
dec
and
mov
adc
in
sub
mov
shld
mov
ds
sbb
sub
cmp
sbb
xchg
pop
mov
test
iret
ja
cmp
out
cmp
hlt
movsl
ljmp
call
je
pop
sti
and
bound
std
mov
inc
inc
leave
jl
push
sbb
mov
rolb
sbb
or
and
or
push
decl
push
jle
in
xchg
jmp
mov
mov
outsl
shlb
call
clc
sub
sbb
stos
jp
sti
mov
xchg
add
outsb
sbb
or
pusha
insb
sarb
outsl
jbe
xor
sbb
in
mov
test
jecxz
dec
mov
out
paddw
ret
push
jle
and
dec
add
add
sbb
hlt
ret
shll
popa
dec
inc
cmovbe
call
mov
add
ret
xchg
int
inc
dec
mov
cld
sub
lods
xorl
sti
ljmp
adc
cmp
jne
xor
inc
jmp
add
ret
imul
pop
icebp
mov
sarb
int
pusha
loop
data16
inc
inc
cli
pop
sbb
mov
das
add
sub
jge
xchg
xchg
mov
cltd
adc
rcrb
sbb
das
adc
or
sbb
jnp
xchg
sub
jp
arpl
xor
daa
dec
pop
shlb
pusha
sbb
sub
stc
and
fnstsw
inc
inc
test
adc
cli
out
data16
cmp
inc
mov
dec
adc
push
outsb
hlt
add
or
or
mov
and
fildll
add
in
mov
cwtl
in
mov
int3
arpl
inc
cmc
stc
hlt
push
and
call
stc
rorb
add
sub
push
cli
inc
mov
push
clc
sub
arpl
ret
dec
std
and
adc
mov
mov
sub
pop
dec
enter
add
jo
or
push
add
js
adc
cmpl
repnz
mov
or
jecxz
inc
pop
mov
pop
adc
jae
flds
sbb
aaa
std
pop
daa
push
lcall
push
ljmp
cld
jmp
nop
mov
outsl
mov
and
mov
mov
dec
sbb
xchg
inc
loopne
inc
mov
out
pusha
bound
sbb
ljmp
dec
loope
cld
add
cmpsb
loop
movsl
inc
lods
fmuls
loop
push
or
stc
inc
loop
pop
int
xor
add
sbb
xchg
mov
inc
scas
mulb
mov
ljmp
mov
xchg
xchg
cli
sub
out
rol
inc
mov
or
jl
das
lcall
or
adc
add
pop
popf
pop
inc
dec
mov
inc
and
mov
add
and
sbb
pop
add
rol
outsl
ja
lret
push
not
or
cwtl
add
fsub
std
dec
aas
adc
loopne
dec
inc
or
cli
xor
sbb
push
popa
cmpsl
mov
pop
mov
mov
pop
test
mov
jle
rcll
fstpl
shrl
dec
or
std
push
aas
jecxz
add
repz
mov
xchg
fsubrs
out
pop
mov
bound
inc
jge
xchg
or
loopne
frstor
add
push
fbstp
mov
push
mov
daa
adc
sbb
pop
mov
adc
fstps
sub
mov
mov
mov
loope
adc
adc
mov
mov
jmp
orb
sbb
add
lds
sub
adc
aam
xchg
push
mov
stos
push
mov
mov
es
fldcw
into
xchg
clc
loopne
push
mov
pop
lds
adc
mov
sub
sarl
cmp
pop
jne
aam
cmp
scas
shrb
jns
jg
sbb
sbb
inc
stc
iret
and
add
scas
hlt
sub
xor
ja
mov
and
cwtl
cmp
cs
orb
loope
test
pop
fadds
or
cmp
push
scas
and
adc
insl
fdivs
int3
call
lret
mov
cmp
icebp
aas
mov
cmp
add
and
sbb
and
lods
dec
clc
add
pop
cmp
adc
xchg
das
insl
leave
shll
aas
push
sbb
xchg
pop
push
loop
or
test
push
fwait
aam
inc
pop
jl
sub
add
cld
xchg
sbb
push
loopne
xlat
pop
pop
inc
xchg
aas
add
mov
bound
outsb
mov
cld
cld
in
sbb
shlb
mov
stos
addl
les
push
faddl
mov
cmp
pop
cmp
aaa
adcb
out
xlat
adc
or
cwtl
mov
daa
aad
out
dec
xlat
mov
add
dec
sub
push
mov
push
loopne
or
aam
sub
xor
lahf
inc
mov
shlb
test
inc
pop
pop
fildll
jne
xor
jnp
or
push
jge
xor
or
jg
out
mov
pusha
cwtl
lds
mov
pop
sbb
ret
rorl
adc
mov
add
push
lea
push
push
push
xorb
xchg
mov
std
rclb
jmp
xlat
xlat
sbb
sbb
std
sub
adc
out
insb
fisubrs
sbb
lods
and
sbb
mov
jg
mov
aas
fldenv
adc
mov
pushl
popf
add
out
fldl
jg
cmc
dec
jae
rcrl
adcb
mov
pop
icebp
sbb
or
fsubl
sub
or
mov
jnp
cmpb
clc
inc
adc
inc
inc
daa
push
push
jmp
add
loope
xchg
jge
in
filds
dec
es
and
mov
dec
push
aaa
pusha
or
das
insl
sub
enter
cmpl
call
nop
adc
xor
dec
inc
sbbl
outsb
add
enter
cli
test
cmp
or
and
mov
xor
out
jl
xor
loop
loop
inc
sbb
mov
insl
mov
inc
cmp
scas
icebp
mov
xchg
mov
das
push
xorl
inc
or
ja
mov
push
or
rcrl
or
imul
ljmp
aaa
jg
jnp
in
and
xor
xchg
and
ja
or
decl
mov
repz
ret
out
sbb
jl
pop
add
and
adc
sub
hlt
inc
cli
mov
std
add
mov
icebp
in
pop
add
ret
mov
mov
shrb
inc
mov
subl
cld
outsl
sub
push
shlb
sahf
mov
scas
inc
cmp
xchg
les
idivl
lret
xlat
lock
gs
adc
outsb
das
hlt
mov
cwtl
jl
enter
scas
and
push
cmp
dec
push
pop
add
popl
insl
outsl
sahf
ret
and
test
mov
dec
xor
push
js
clc
fucom
fucomp
repnz
and
fstl
mov
or
out
and
ret
push
mov
int3
mov
loope
and
or
mov
jnp
mov
add
pusha
shl
aam
xchg
cmp
movsl
arpl
fs
mov
add
sbb
mov
mov
int3
sbb
les
mov
sti
dec
xor
or
adc
test
pop
pop
add
rorl
inc
scas
test
push
or
mov
mov
pop
and
or
insl
ficompl
sub
xor
lock
push
mov
insb
outsl
add
enter
imul
inc
test
mov
nop
xchg
int3
ss
mov
inc
outsb
dec
bound
insl
sub
imul
daa
fldt
ss
sbb
add
cmp
pop
push
fimull
xlat
jns
xchg
xor
mov
push
mov
in
xchg
lret
add
adc
xchg
in
push
xabort
lds
outsl
and
rclb
and
mov
or
inc
imul
jecxz
popf
sbb
push
lcall
pop
sub
and
push
movsl
pop
jmp
aas
mov
adc
aam
add
mov
fcomps
pop
push
cmp
data16
push
test
pop
fsubrs
in
or
nop
cwtl
mov
je
divb
xchg
stc
psubsw
xchg
pushf
loop
dec
aaa
or
scas
outsb
or
idivl
jle
sbb
ss
jmp
scas
bound
jbe
push
cld
das
fildl
inc
push
aam
pop
mov
jnp
adc
mov
pop
sbb
cmc
orl
or
ret
xchg
adc
mov
add
dec
inc
dec
sar
mov
cmp
add
test
decb
cltd
push
add
repz
cmpb
sub
in
fldcw
fcoml
sub
stc
loopne
jno
and
aam
jo
out
cmpsb
cmp
mov
xlat
sbb
pop
xor
adc
mov
mov
pop
push
and
add
clc
push
into
mov
xchg
jl
mov
mov
push
loope
mov
mov
mov
lock
inc
sub
jno
add
cmp
call
inc
jo
lods
sahf
cmp
fisttpl
lret
lock
outsl
push
pop
hlt
pop
push
mov
subb
je
loopne
roll
cs
pop
mov
adc
lcall
lea
add
sbb
int
mov
lods
and
sbb
sbb
shlb
adc
cld
push
push
stos
int
mov
mov
insb
sbb
cld
xor
cmp
shrl
bound
or
out
fsubl
das
jle
mov
xchg
mov
mov
adc
mov
xchg
xorb
jnp
lods
jg
mov
test
pushf
lea
ss
pop
rorl
jmp
sbb
stos
dec
jp
arpl
stos
sbb
pop
add
and
pop
jnp
xchg
push
stos
stos
insl
sub
mov
jecxz
lret
imul
cmp
and
out
je
ss
and
add
adc
fildl
sbb
pop
dec
stos
add
jbe
adc
lcall
aad
bound
dec
cwtl
sbb
inc
pop
and
aas
push
mov
daa
push
pop
add
bound
xchg
wrmsr
or
lret
xchg
ds
cli
insl
inc
pushf
js
push
push
push
inc
popf
js
je
cmp
fucomp
lahf
insl
adc
cmp
adc
add
pop
leave
shlb
fsubrp
push
popf
xor
push
inc
adc
mov
adc
and
jp
xor
or
mov
rcrl
or
adc
fisttps
jae
push
js,pn
pop
xchg
sub
sbb
icebp
mov
mov
icebp
and
in
and
dec
clc
and
cmc
pop
xor
shrl
js
and
add
fcmovbe
add
lds
sbbl
push
sbb
add
dec
shl
cmpl
aam
repnz
in
xchg
sbb
add
repz
lds
lea
lahf
mov
enter
adc
xorl
aad
shrl
push
pop
pop
call
add
mov
popf
outsl
push
clc
sbb
mov
les
clc
and
lea
sub
dec
hlt
lods
mov
dec
adc
dec
incl
mov
add
jle
pop
cmp
or
lods
insb
mov
adc
or
out
ficoms
sbb
repnz
cmp
inc
sbb
dec
sub
mov
cld
mov
cs
jno
push
fcomip
movsb
clc
out
cld
aaa
sbb
mov
notb
or
push
push
inc
shll
pop
add
orl
jle
xor
mov
lds
push
sub
in
aad
jl
mov
and
data16
sbb
mov
hlt
inc
xor
pop
clc
mov
jmp
int
sbb
lods
xchg
add
out
das
jne
cmp
xor
aam
rol
fildl
mov
push
adc
in
and
into
push
xor
sub
sbb
roll
repz
mov
inc
mov
rolb
jl
xor
cmp
clc
rorl
add
push
xchg
adc
outsb
jl
clc
adc
sbb
ret
or
or
je
hlt
push
mov
push
repnz
int3
and
mov
ss
outsb
loop
add
add
in
icebp
mov
and
les
decl
stc
outsl
scas
loop
mov
daa
cmp
sbb
loopne
fmuls
push
adc
test
test
add
test
ja
cli
jb
ds
dec
inc
pop
scas
push
push
fisubrl
dec
cmp
xor
and
jnp
jns
inc
icebp
add
mov
cmp
cmp
cli
add
push
into
enter
cmc
pop
decl
out
mov
mov
cmp
adc
xchg
addr16
adc
inc
pop
loopne
add
inc
movsb
lods
xchg
bound
adcl
cltd
out
repnz
addr16
fldt
hlt
out
loop
sbb
sub
fsts
imul
addl
loop
lea
jl
ret
cld
inc
and
push
or
mov
xor
jo
dec
leave
sbb
mov
dec
or
cltd
adc
aad
push
repz
mov
imul
inc
call
cmp
mov
push
pop
jne
call
scas
push
lods
aad
rcrl
pop
or
and
loop
sub
xchg
outsl
lock
call
imul
pop
jg
or
xor
icebp
pop
cld
call
mov
push
scas
test
fisubl
stos
cmp
movsb
and
jns
cmp
sbb
shr
hlt
hlt
xacquire
cmpsb
cmc
xor
dec
adc
mov
sbb
mov
mov
daa
sbb
les
movsl
push
mov
adc
push
pop
pop
mov
jno
clc
loopne
nop
sub
repz
mov
pop
fstpt
or
aaa
push
mov
xchg
inc
or
test
inc
dec
xor
pusha
lds
jle,pn
js
test
mov
mov
arpl
cmp
pop
push
loope
out
int
inc
bound
xchg
mov
xor
mov
imul
push
pop
mov
push
lret
cld
mov
jle
inc
or
daa
pop
jmp
dec
push
je,pn
xchg
mov
jae
or
lea
into
and
inc
test
lcall
cltd
fisubrl
outsb
sahf
jae
ret
mov
sub
mov
syscall
fcomip
jmp
pop
or
jo
xchg
xor
in
aas
popa
and
in
push
sub
pop
mov
push
fildl
sub
fimull
mov
jecxz
das
out
jo
mov
and
and
lods
popf
outsb
mov
push
pop
ljmp
fwait
sti
push
pop
or
test
ficoml
shll
popf
insl
dec
aas
shrl
fcompl
movsl
stos
mov
push
fiadds
test
fcmovne
outsl
push
xchg
mov
fdivrp
insl
sti
pop
jnp
xchg
and
sahf
or
cwtl
xchg
insl
shll
movsb
add
dec
lea
sbb
xor
mov
mov
jge
decb
mov
addl
int3
adc
push
adc
movsb
inc
mov
add
and
or
adc
int
sub
orl
adc
call
pop
gs
cmpsl
or
sub
movsl
xchg
adc
add
mov
rcll
fwait
and
call
fldt
adc
pusha
mov
notb
mov
cmpsl
add
outsb
dec
xchg
test
jmp
jb
rcrb
jg
bound
imul
pop
add
mov
adc
xchg
jmp
push
xor
outsl
orb
shll
push
xchg
test
les
int
sbb
or
cld
cmp
cmc
adc
aam
add
imul
sub
sbb
pop
adc
xchg
inc
cwtl
cmp
sahf
add
inc
or
lods
adc
cli
sub
inc
inc
icebp
hlt
fisubl
adc
sbb
out
and
inc
mov
adc
cwtl
shrb
pop
adc
int3
push
xor
jno
adc
dec
and
mov
inc
add
sub
out
jp
mov
push
add
imulb
sub
push
int3
pop
ja
sub
xchg
fiaddl
and
xor
int3
inc
in
sbb
sbb
leave
cld
imul
loopne
sarl
push
fsubrs
int3
adc
pop
aam
cmp
stc
lds
call
jp
enter
loop
xchg
sub
iret
or
cltd
test
addr16
shrl
mull
fstl
outsb
sub
xor
out
or
inc
mov
jle
shll
cmc
roll
inc
nop
mov
mov
cmc
inc
lret
sub
or
xor
pop
ljmp
adc
sub
rcrl
daa
xchg
mov
xor
fldcw
or
out
clc
and
push
roll
rclb
int3
sti
or
lock
xchg
int3
sub
xor
int3
jns
mov
cwtl
cmp
mov
enter
push
cltd
rorb
mov
push
movb
cmp
add
add
movsb
xor
jecxz
out
inc
mov
dec
imul
adc
and
mov
lea
cmp
call
call
fiaddl
out
std
mov
dec
lahf
dec
inc
iret
add
xchg
push
stos
xchg
or
and
push
aam
lret
adc
outsb
loop
aam
addl
adc
mov
jns
add
fadds
xchg
aam
push
cmp
daa
jg
fisttpl
stos
testl
add
sbb
or
ret
lds
ljmp
insb
push
imul
dec
lea
inc
pop
jbe
add
fs
popa
ret
push
pop
fstps
hlt
aas
hlt
mov
jp
or
outsl
orb
sub
add
rorb
sbb
jmp
dec
inc
enter
sarl
add
or
cmc
mov
inc
push
andl
jl
lcall
pop
lods
test
mov
cltd
sub
jle
xchg
lahf
dec
cmp
dec
add
lock
gs
pop
mov
pop
pop
cs
add
ret
jmp
pop
sbb
addb
pop
add
call
out
aaa
stos
mov
test
mov
xchg
mov
or
pop
and
adc
dec
stos
and
cmpsl
aam
cmp
jne
push
add
dec
fisubrs
enter
xor
mov
or
jae
sti
dec
pop
shll
jae,pt
xor
test
dec
loopne
je
mov
add
das
sbb
cmp
mov
push
mov
insb
dec
dec
dec
fmul
cmp
mov
inc
enter
sub
or
sub
data16
pop
add
xlat
sbb
jo
fadds
inc
add
pop
aad
push
cmp
jo
jne
cmpsl
add
pop
xor
push
adc
pushf
pushf
xchg
mov
aaa
lods
and
add
add
inc
imul
fldl
cmc
inc
enter
push
in
inc
push
sbb
inc
sbb
nop
lahf
sbb
popa
mov
pop
into
push
test
dec
mov
rorl
xchg
adc
mov
fdivp
scas
sti
ret
mov
sbbl
sahf
fisubrs
or
roll
mov
cmp
fdivr
lcall
pushf
or
xor
cld
cltd
add
mov
lahf
adc
mov
dec
ret
and
ret
cld
pop
inc
mov
lods
and
add
cmp
cld
sbb
or
xor
or
jbe
mov
bound
xchg
mov
cmc
and
mov
sar
sub
lahf
sub
es
or
and
test
add
push
jp
jmp
add
jmp
orl
shlb
add
orb
inc
insl
scas
mov
out
insb
mov
rorb
adc
sub
lds
or
and
jo
mov
add
add
orl
xor
and
es
mov
xor
ss
dec
les
mov
pop
add
test
add
pusha
cwtl
jne
push
js
xchg
addl
mov
loopne
aad
bswap
repz
enter
in
push
leave
push
popw
enter
add
pop
test
pop
jbe
into
test
adc
sub
add
imul
ret
add
and
adc
add
and
add
sahf
ljmp
jle
test
dec
loope
or
inc
xor
lods
add
dec
sbb
test
int
pop
iret
test
inc
hlt
and
mov
cmp
fwait
sub
jo
sbb
cmp
out
addb
and
mov
and
test
inc
daa
push
push
fadds
fcoms
sub
es
mov
mov
sub
aad
xchg
and
data16
push
daa
push
test
adc
lds
cmpsb
sarb
scas
fimuls
ljmp
cmp
popa
rclb
or
jmp
sub
mov
or
mov
xor
or
imul
into
loopne
mov
mov
add
add
call
jg
test
jns
or
pop
xor
sbb
sahf
cli
fdivr
or
push
and
rolb
subb
xor
mov
imul
sub
inc
jmp
xchg
call
andl
sub
orl
clc
push
bnd
adc
sbb
out
cmpsl
inc
sub
iret
lds
sahf
movsl
or
incl
std
or
push
mov
add
fistpll
lret
jg
sbbl
xor
mov
lock
mov
mov
adc
cmpsl
adc
imulb
add
jle
xchg
and
jae
xchg
outsl
sar
jmp
sbb
mov
movsl
cmp
adc
jne
lea
mov
mov
cwtl
add
aam
mov
out
inc
es
cmp
movsl
movb
mov
pushf
push
jbe
nop
data16
jg
sti
loope
loopne
pusha
je
sub
xchg
add
mov
mov
mov
pop
push
push
cmp
sar
mov
das
je
sub
enter
inc
insb
jo
shrb
add
sbb
shrb
std
in
test
scas
pushf
les
push
les
scas
adc
loopne
push
std
mov
in
inc
sti
add
or
and
pop
add
inc
call
jb
out
incl
sub
inc
add
sub
loopne
mov
movb
or
xchg
cmp
xor
push
cli
mov
ss
or
xlat
add
outsb
jmp
add
and
xor
and
incl
or
and
into
and
dec
cmp
mull
mov
les
repz
test
lret
xchg
xor
ja
and
stos
push
pop
sbb
lods
push
dec
add
test
movsl
int3
push
pushf
icebp
adc
adc
add
arpl
mov
outsb
lret
push
xchg
out
lcall
icebp
daa
popa
cmp
pop
push
mov
mov
sub
cmp
sbb
and
xor
mov
sub
mov
push
jnp
push
std
add
pop
int3
in
dec
pop
fmull
dec
lret
fcmovne
addr16
stos
or
into
int
or
jl
fistps
cmp
hlt
cmp
cs
int
or
xor
cmp
mov
cli
out
lret
or
test
fsubrs
mov
xor
out
mov
loop
mov
shrl
jae
inc
icebp
test
stos
lods
push
add
xlat
jae
mov
adc
sub
adcb
sub
mov
sbb
iret
lcall
in
in
or
pop
push
jmp
and
add
jnp
inc
out
js
adc
cmp
gs
lds
xor
lods
sahf
cmp
imul
push
inc
loopne
jbe
inc
lods
test
dec
insb
adc
sub
cmp
stc
xor
into
movsl
or
inc
or
jns
xor
inc
sbb
xchg
fstps
jne
adc
pop
mov
fldenv
aam
inc
lods
fldenv
call
cmp
bound
or
scas
sarb
mov
mov
or
adc
jnp
insb
dec
mov
fistl
xchg
cmp
cmp
pop
movsb
push
sub
mov
cmp
ror
out
and
jmp
jae
stos
push
repnz
jbe
out
je
push
or
sub
fsubr
sbb
dec
sbb
push
push
push
xor
sub
add
sarb
pop
pop
js
loopne
pop
xchg
inc
aam
sbb
mov
xor
cwtl
movsl
loop
add
or
xchg
push
in
lret
mov
call
cwtl
loopne
or
movsb
mov
lcall
imul
xor
or
push
jae
push
pop
insb
enter
mov
aam
fists
call
lock
sar
mov
inc
cwtl
xor
inc
scas
add
pop
mov
jmp
and
ret
inc
orl
and
dec
inc
inc
mov
lock
loop
jle
loop
pop
push
pop
insb
cmp
push
pop
rcr
shrb
push
push
mov
mov
das
pop
call
rcrl
orl
stos
std
pop
outsl
adc
mov
repz
pusha
nop
lcall
jo
inc
jnp
sbb
cld
outsl
xor
and
adc
pop
loopne
je
int3
and
and
sub
dec
jl
sub
mov
mov
adc
sarb
jb
xlat
adc
mov
test
lods
push
movsb
mov
outsl
add
push
sahf
dec
add
out
mov
pop
je
in
or
enter
and
add
in
push
cli
push
push
fcomps
xlat
jle
jp
js
lds
fcompl
add
xchg
or
ret
xchg
inc
adc
subb
add
les
ljmp
cld
or
ret
mov
sbb
jle
adc
jg
mov
nop
imul
jnp
gs
mov
repnz
aam
push
dec
sbbb
hlt
pop
mov
or
mov
add
add
push
add
add
add
inc
fwait
nop
or
adcl
xor
insl
outsb
outsb
sbb
addb
adc
shlb
pop
mov
mov
inc
push
inc
idivl
and
popa
sbb
mov
outsl
dec
cli
push
aam
xchg
movsb
sbb
ds
and
cs
mov
add
lds
int
sub
mov
and
mov
fstp
pop
jmp
xchg
cmpb
and
add
fldenv
dec
or
pop
mov
aas
adc
lock
fnstcw
dec
ljmp
add
xchg
inc
jo
loop
loopne
rclb
mov
sub
or
out
jg
lret
inc
pop
lret
ror
adc
negl
push
mov
mov
dec
gs
mov
adc
addb
inc
xor
scas
inc
pusha
push
and
mov
pop
int3
jae
jae
pextrw
sbb
bound
addr16
outsl
leave
inc
pop
push
insb
xor
mov
pop
pusha
push
icebp
add
and
inc
imul
dec
sbb
into
push
mov
and
jne
inc
adc
mov
push
call
call
sbb
repz
cmp
add
andl
sub
pop
mov
jnp
or
sbb
push
les
test
out
sub
adc
xlat
mov
dec
aad
pusha
hlt
les
aaa
lret
aam
ffreep
xchg
inc
add
adc
xlat
fidivrl
hlt
dec
or
add
out
pop
fxam
lret
cmc
or
add
fucomi
or
mov
pop
iret
sti
fcomp
fisubrl
orb
lods
jle
shlb
xor
ficoml
enter
adc
xchg
sbb
ss
into
mov
addr16
push
sbb
iret
jo
mov
movsb
mov
clc
nop
push
fiadds
add
xchg
pop
mov
or
xor
mov
das
dec
test
add
pop
adc
xchg
mov
jmp
and
out
mov
mov
xchg
icebp
xchg
add
push
dec
add
mov
mov
xchg
cwtl
lret
and
adc
cmp
and
xor
xchg
xlat
cmp
aaa
inc
push
mov
lahf
in
cmpsl
orb
clc
aas
or
pop
fcoms
jnp
dec
xor
add
mov
fcomi
add
xor
cltd
mov
mov
shl
cmp
addr16
cld
adc
sbb
dec
sub
xor
outsl
cli
clc
bnd
cmpsb
mov
imul
rcrl
incl
xor
movsl
pusha
adc
push
cmp
notb
push
mov
sub
inc
scas
loopne
sub
test
dec
mov
mov
jg
sbb
in
cmp
mov
or
outsl
cwtl
xor
jne
mov
cmc
inc
pop
loopne
jge
and
push
mov
insl
mov
xor
pop
pop
mov
mov
xlat
push
hlt
fcmovb
or
jge
push
rcll
mov
xor
aam
pushl
lea
add
fstpl
loopne
jecxz
lret
mov
jo
mov
push
add
daa
dec
test
add
idivl
insl
add
xorb
xor
or
push
fsub
std
popa
ret
pop
leave
inc
or
in
xor
test
xor
mov
dec
mov
int3
loope
adc
dec
std
xchg
shlb
sbb
pop
std
incl
cltd
inc
jb
push
jl
and
mov
fwait
mov
andl
xorl
mov
incl
decl
xlat
aas
add
nop
inc
jmp
jl
in
lods
leave
mov
xor
adc
cmp
xor
ret
sbb
dec
add
sti
sbb
adc
bound
sub
fistps
dec
pop
adc
mov
add
or
je
xchg
mov
mov
dec
js
addr16
jo
es
jmp
dec
pop
sti
fisttpl
test
sub
add
add
pop
shl
lods
outsb
inc
jg
mov
pop
push
xrelease
mov
mov
ljmp
xchg
inc
cmp
and
xchg
adc
lods
push
sahf
enter
clc
in
ljmp
mov
lds
and
jnp
mov
lods
int3
pop
xor
arpl
push
fwait
xor
lahf
and
sub
mov
pop
or
cld
sbb
test
or
or
inc
add
dec
ret
add
jo
add
jb
sbb
scas
and
fsubrs
test
add
sub
sbb
outsl
pop
mov
mov
sub
enter
test
inc
loope
adc
mov
outsb
icebp
test
add
sar
cmp
das
mov
mov
or
outsl
dec
add
sti
xchg
push
inc
outsb
mov
mov
mov
aaa
sub
ret
int
mov
sbb
ss
pop
or
jno
mov
inc
adc
push
cs
jecxz
inc
je
and
pop
les
mov
cmp
pop
outsb
or
inc
movsl
cmpl
push
rorb
into
mov
mov
sbb
pushf
lods
xor
push
lcall
jne
lret
push
or
fdivl
jmp
mov
lcall
ja
test
imul
mov
aam
xchg
xorl
cmpsl
jle
push
add
dec
lods
push
out
mov
adc
ret
iret
sbb
sub
xor
inc
loope
int3
push
push
fs
adc
adc
fists
nop
cmp
in
and
imul
test
bound
sbbl
pop
xchg
les
inc
add
add
test
push
stos
sti
and
test
or
mov
int3
mov
pop
lcall
rol
jno
mov
mov
jp
mov
insb
mov
mov
xchg
in
add
bound
pop
pop
loop
aad
call
add
or
mov
adc
pusha
jne
pop
int3
inc
sub
stc
mov
sbb
cwtl
shr
pop
adcl
sbb
fs
inc
sbb
and
add
dec
add
adc
int3
in
jle
scas
jp
fisubs
mov
xchg
in
movsb
lods
mov
adc
mov
jno
mov
ss
sub
mov
push
mov
add
scas
mov
mov
orb
cwtl
subl
xorb
dec
xor
xchg
or
add
clc
dec
inc
adc
or
mov
dec
adc
int3
xor
inc
mov
dec
mov
inc
mov
sbb
stos
mov
test
clc
adc
sub
jae
jl
add
mov
inc
mov
out
xor
inc
mov
shlb
dec
adc
test
pusha
or
fdiv
pop
and
outsl
pusha
and
ja
sbb
push
dec
mov
cwtd
mov
mov
xor
fadd
and
lea
idiv
mov
mov
mov
xorb
add
int3
or
xchg
inc
filds
into
inc
popa
cld
mov
mov
add
add
sbb
fadds
push
cld
push
test
jbe
jnp
call
fcompl
add
mov
cmp
mov
aad
push
xor
lahf
je
adc
jne
pushf
and
cmp
jge
rcr
ds
add
mov
inc
mov
sbb
and
xor
mov
rcrb
xor
add
out
inc
mov
aaa
cmp
dec
daa
popa
mov
jecxz
insb
cwtl
aam
shlb
push
pop
nop
ss
push
adc
dec
in
mov
cmp
jge
rorb
clc
push
mov
cmp
adc
xor
cld
sbb
cmp
push
sbb
aam
and
xor
ss
cmp
and
imul
and
cli
and
test
xor
push
cmp
push
rcrb
pushf
xor
je
add
xchg
sub
lret
mulps
insb
xor
roll
inc
fnstcw
lock
push
or
cmp
lahf
js
test
pop
push
or
lahf
test
stos
mov
jo
adc
out
sub
dec
or
das
mov
sbb
inc
jae
add
sar
divb
ds
mov
loopne
xchg
jp
scas
jmp
ljmp
mov
loop
pop
add
sbb
sbbb
int
pop
fcoms
xchg
add
sub
adc
mov
negb
inc
jnp
push
mov
mov
repz
add
cs
in
dec
adc
cltd
add
mov
or
test
jle
adc
ja
sub
mov
jns
aaa
clc
inc
sbb
sbb
das
inc
ffree
mov
out
imul
mov
xor
loopne
jo
pop
clc
test
sar
into
orb
push
dec
es
lcall
rcrb
adc
cmp
inc
xor
fwait
add
insb
fistl
mov
adc
add
subl
xor
mov
dec
lds
adc
sbb
dec
inc
roll
pop
cmp
aas
insl
in
mov
movsb
lcall
cwtl
xchg
add
mov
or
pop
mov
push
cmp
cmp
inc
sti
inc
add
dec
stos
stos
mov
mov
adc
and
loopne
inc
inc
sar
dec
jl
or
int
mov
movsl
data16
or
ret
or
push
mov
push
xor
es
testb
cld
scas
mov
xchg
sahf
pop
movsl
dec
push
jno
cs
iret
dec
leave
hlt
lods
idivb
ds
aam
inc
dec
inc
int
add
xor
inc
test
xchg
xchg
ret
add
pop
fisttpl
pop
mov
int3
adc
jmp
fiadds
mov
decb
aam
roll
xor
jno
push
push
cld
js
mov
pushf
mov
xor
sbb
test
hlt
push
mov
sub
jnp
jp
or
je
imul
xor
jge
rorl
roll
stc
rcrb
or
add
arpl
mov
andb
adc
pushf
mov
xor
mov
cmp
or
fcomps
or
pop
insb
aas
mov
mov
nop
mov
vmread
add
lea
mov
push
inc
push
pop
add
sarb
cmpsl
sub
mov
jmp
adc
mov
jnp
push
mov
pop
add
stos
out
aaa
and
fstps
adc
xor
enter
and
or
cli
xchg
int
dec
js
scas
addb
adc
xchg
mov
pop
pop
dec
es
push
fisttps
and
rorb
xor
or
xor
je
sub
cmp
aam
fiadds
outsb
rcrb
ds
inc
adc
add
outsb
insb
data16
fidivl
add
inc
mov
mull
sbb
push
jle
cwtl
sbb
xor
and
popa
test
jmp
cltd
mov
leave
push
dec
idivb
lea
lret
sub
add
xor
adc
pop
ds
cmp
orb
out
repnz
dec
sub
add
sub
rol
test
ds
pop
popl
outsb
call
aaa
pusha
lret
push
and
jno
sub
das
adc
and
mov
ss
hlt
jg
aaa
cld
insb
adc
popa
rorl
cmp
rcrl
fists
xchg
or
les
cmpsb
pop
pop
push
or
adc
sti
dec
mov
push
inc
adc
or
dec
loop
dec
add
dec
and
outsl
xor
popa
push
sti
adc
addr16
ret
stos
mov
repz
push
add
hlt
cmpsb
mov
adc
sub
inc
ds
pop
mov
movb
dec
int3
push
add
lds
imul
xchg
and
jne
mov
bound
std
sti
fmulp
jbe
ljmp
xorb
cmpsb
lea
shlb
js
aam
aad
pushf
add
pop
outsl
inc
sub
or
mov
sub
xchg
mov
testb
mov
pusha
or
rcr
or
adc
xchg
test
pop
add
sbbl
adc
aaa
lock
mov
add
xorl
jne
repnz
shlb
movsb
pop
add
mov
mov
es
jl
inc
and
cmp
push
pop
ljmp
test
mov
inc
aam
outsl
shlb
push
andb
cld
xor
sbb
out
stos
dec
and
outsl
or
jmp
xor
add
filds
mov
mov
aad
jl
mov
inc
lcall
filds
push
sub
mov
rolb
in
push
mov
or
mov
xor
mov
mov
sbb
add
clc
and
loopne
outsl
outsl
cmp
mov
cmp
movsb
and
subb
daa
mov
or
scas
stc
outsl
inc
hlt
fstpt
and
ret
cmc
fwait
imul
test
and
mov
ror
push
arpl
and
sub
in
pop
mov
mov
sub
and
jge
sbb
cs
inc
add
cmp
jge
mov
call
xchg
cmc
pop
loop
fiaddl
mov
pop
loopne
mov
adc
jg
dec
imul
hlt
xchg
mov
fsubrs
sub
mov
jnp
lea
js
or
xor
mov
lods
cmp
cs
add
js
nop
push
add
frstor
push
in
pop
push
sub
rcll
cmp
lea
inc
mov
in
jbe
mov
jno
loopne
aaa
pusha
mov
adc
sub
shl
movsb
push
lods
add
clc
xchg
push
or
mov
std
or
icebp
arpl
or
sub
pusha
aas
and
stc
or
scas
add
bound
divb
jb
dec
inc
xor
mov
popa
add
xchg
or
fcmovnu
ss
push
fiaddl
pop
pop
outsl
mov
addr16
sbbb
xorl
sub
out
mov
push
in
in
add
popa
hlt
ja
inc
push
pop
adc
fmul
jo
mov
and
scas
iret
xchg
sub
pop
cmc
lea
or
cmp
cmpsb
xor
sub
loope
or
jbe
mov
les
in
ret
sub
outsl
dec
cmp
or
jle
ljmp
mov
or
lahf
hlt
pop
mov
dec
fistpl
ljmp
xchg
pminsw
stos
sti
xor
and
stos
mov
inc
xchg
cld
sarl
mov
je
fcoms
in
or
mov
xchg
xor
cli
cmpb
idiv
or
fcmovnbe
dec
movsb
jmp
jmp
jle
inc
sbb
lods
xchg
dec
in
ret
dec
inc
pushf
sbb
mov
xchg
sbb
adc
lcall
std
pop
push
std
and
call
call
jle
push
fnstsw
push
lds
sub
mov
fdivs
cmp
fwait
jb
adc
inc
std
mov
pop
cmp
and
adc
push
and
sbb
pop
ljmp
es
sbb
cmc
push
add
mov
mov
movsl
in
nop
decl
adc
ret
daa
xchg
shlb
push
cmp
movsl
sbb
adcl
pop
clc
sub
jns
xchg
push
push
pop
adc
adc
mov
adc
repz
adc
pop
adcl
push
jnp
mov
xchg
cli
idivb
sbb
stos
in
das
add
cmp
sbb
cmp
movsl
xchg
and
sahf
mov
cmp
jns
add
xchg
iret
xchg
or
jae
xor
repz
filds
popf
sub
or
xchg
dec
dec
movsl
incl
pushf
push
inc
or
inc
jl
xchg
test
jge
cmp
jge
sbb
lcall
mov
or
jp
aad
sub
dec
and
push
rol
dec
lods
lea
jo
call
mov
inc
cmp
adc
outsb
jle
inc
rol
inc
pushl
in
mov
mov
cmp
and
dec
and
jp
and
hlt
dec
je
hlt
addb
mov
in
add
subb
aad
mov
nop
addr16
push
pop
xchg
enter
repz
ja
adc
bound
pop
or
and
jo
in
fcomip
jnp
mov
adc
sbb
lcall
jg
adc
push
sbb
es
jl
add
lock
aas
inc
push
test
inc
movsl
in
pop
push
xor
inc
adc
aam
mov
push
inc
rcrb
stos
jmp
add
or
arpl
iretw
fsubrp
or
clc
pop
mov
and
pusha
and
mov
adc
das
push
lock
sbb
dec
test
pop
dec
and
and
enter
hlt
mov
push
cmp
test
dec
fbstp
dec
cmpsb
ret
mov
jle
xchg
out
sahf
lea
push
pop
mov
hlt
dec
cmp
xchg
jge
mov
add
adc
xor
popf
add
push
or
adc
fsubrs
repnz
int3
lret
adc
mov
sbb
push
xor
adc
jno
dec
add
mov
fidivs
mov
adc
int
xorl
dec
out
test
mov
pop
push
out
aam
xor
push
inc
in
std
or
iret
sub
pop
iret
sbb
pusha
adc
adc
and
enter
mov
add
mov
sub
insb
stc
add
enter
sub
adc
test
inc
ds
jmp
push
cmp
and
loop
xchg
sub
adcl
andl
insb
enter
cwtl
add
data16
lock
jle
in
or
mov
das
add
shl
xchg
jecxz
and
outsb
sbb
out
xor
xchg
xchg
or
xor
jb
lock
pusha
mov
mov
adc
push
cmp
cltd
inc
push
ret
inc
aam
xor
ljmp
pushf
push
in
push
or
sbb
push
mov
push
scas
inc
test
pop
sbb
adc
xchg
icebp
dec
sbb
jo
test
rol
jbe
inc
arpl
repnz
sub
sbb
fiadds
mov
les
movsb
jb
mov
jb
mov
sbb
jno
in
lahf
cmp
cmpb
inc
sub
ljmp
xor
rolb
jno
sbb
in
sbb
sbb
call
jg
mov
pop
add
inc
cwtl
test
xorb
loopne
stc
adc
inc
popa
jae
and
push
sarl
dec
data16
push
xor
sbb
push
es
sarb
sbb
fs
sbb
les
js
cmp
push
imul
and
and
pop
imul
mov
test
std
shlb
pop
ljmp
add
cs
rclb
mov
mov
lret
mov
inc
push
mov
inc
lahf
or
push
dec
sub
movsb
and
pop
pusha
and
adcb
movsb
jp
lret
mov
adc
inc
push
sbb
aas
rclb
and
hlt
xchg
sub
mov
testl
imul
mov
js
ss
xor
inc
adc
add
ja
lret
xor
fdivl
mov
add
enter
sbb
bound
popa
add
lea
outsb
je
cmp
xor
shlb
int
cmc
sahf
xchg
fwait
inc
lods
inc
mov
or
inc
xor
sbb
dec
hlt
fadd
pop
lods
pusha
dec
xor
icebp
cmp
mov
stc
int
inc
lret
add
movsb
sbb
jo
push
or
int3
lock
xchg
int
rcrl
mov
testb
les
lock
sbb
daa
jecxz
pop
repnz
movl
fildl
iret
test
cmp
dec
or
or
push
mov
xchg
cmpsl
sbb
orl
jle
ds
in
inc
out
jp
adc
jecxz
jo
dec
cmp
dec
fldl
test
in
xchg
add
enter
pop
dec
shlb
pop
and
jle
xchg
pmullw
mov
mov
and
dec
shll
enter
mov
dec
test
nop
in
loop
enter
jbe
rcr
aam
int3
lock
jo
cmp
xor
addb
les
jl
mov
add
jns
rcr
and
lds
push
jo
mov
js
cli
pop
mov
clc
addl
or
addl
mov
loope
outsl
fsts
cmp
roll
add
push
stos
add
cli
bound
pop
shlb
aam
adc
lods
xchg
in
int3
add
jbe
jnp
xlat
inc
inc
add
xchg
outsl
loopne
lcall
push
ret
mov
int
push
push
add
loop
or
mov
sbb
repz
or
test
loope
fwait
movsb
jae
adc
stos
nop
and
mov
push
mov
fcompl
cmpsl
add
subl
movsb
push
lock
xor
repz
ret
mov
dec
add
mov
add
mov
aaa
loop
add
cmp
inc
inc
js
and
loopne
or
cmc
repz
mov
add
rclb
loop
ficoml
mov
loopne
scas
loopne
inc
ds
and
xchg
push
push
faddl
inc
mov
mov
pop
outsl
inc
fiadds
in
add
sbb
ficoms
xchg
inc
int
and
and
add
or
xchg
jae
js
outsl
or
mov
cmp
repz
or
addr16
lret
fwait
rolb
sub
mov
or
add
jbe
mov
mov
xorb
push
pop
ljmp
dec
add
xchg
fsubrl
jmp
jo
xchg
mov
mov
fldt
dec
mov
bound
lret
xor
inc
outsl
cmp
jmp
add
sarb
push
inc
jbe
out
adc
mov
pusha
inc
data16
sbb
add
cmp
roll
push
and
repnz
add
idivb
mov
xchg
ljmp
bound
inc
adc
negb
or
push
rcr
xchg
orb
and
rcll
lcall
cmp
mov
cld
pushl
repnz
cmp
imul
ja
xchg
xor
scas
mov
scas
inc
add
mov
sar
xchg
mov
add
dec
or
xchg
or
aas
roll
int
pop
push
xor
pusha
test
pop
inc
push
sbb
jno
add
adc
in
mov
push
movsl
and
xchg
pop
cmp
fucomip
decl
add
and
sti
add
push
push
add
test
or
xorb
add
or
daa
adc
jmp
adc
cmp
fs
add
or
xchg
imul
incl
pop
out
lds
or
cs
dec
mull
shr
cwtl
pop
lcall
xlat
pop
jg
and
mov
sub
adc
cmp
add
pop
add
mov
sub
lea
push
sbb
aaa
xchg
add
xchg
pop
movhps
syscall
jns
and
xchg
mov
mov
jbe
test
imul
add
mul
decl
outsb
or
pop
and
inc
xchg
cmc
xor
and
daa
push
dec
mov
movsl
fists
push
cli
pop
roll
insb
test
leave
push
stos
fildll
les
lcall
adc
cwtl
mov
add
push
mov
imulb
add
shll
add
nop
adc
jb
jg
push
and
xchg
cmovg
pusha
pop
daa
test
enter
or
das
mov
pop
bound
xor
pop
push
jmp
mov
int
fwait
jbe
fstp
movsb
xchg
xor
adc
fadds
adc
xor
lcall
loopne
add
sub
arpl
test
xor
dec
or
sub
js
lods
adcb
sarb
mulps
mov
adc
jge
rcll
rolb
add
out
xchg
or
add
test
mov
xor
test
addl
popa
add
loopne
ret
lds
out
sbb
mov
shlb
int3
lret
sub
or
push
icebp
data16
dec
stc
dec
les
repz
pop
enter
sbb
push
icebp
mov
push
out
insb
jne
lahf
or
push
rolb
add
shrl
rcr
sub
add
adc
mov
adc
fs
rcrl
jmp
daa
mov
out
cmp
jp
repz
mov
add
sahf
xchg
nop
popa
stos
les
mov
push
fiadds
adc
xchg
and
sbb
addl
bound
sub
dec
sahf
inc
pop
push
jnp
les
lock
mov
add
les
push
xor
shrb
and
mov
pushf
inc
xchg
sub
xchg
cmp
cli
push
sbb
stos
jg
mov
ret
pushf
ret
xchg
dec
je
pop
adc
push
adc
loope
fcomps
jo
les
xor
outsb
shrl
rclb
sbb
daa
dec
cmp
and
testl
adc
sbb
loopne
mov
adc
imul
inc
rcrl
das
cltd
imul
mov
insb
repz
mov
add
cmp
pop
adc
xchg
adc
inc
aam
aaa
xchg
add
hlt
add
shl
dec
sbb
dec
into
push
test
and
sti
cwtl
in
jne
push
aam
clc
cmpb
lcall
loopne
or
loopne
xchg
les
push
call
insl
cmp
cmpsb
ficoml
dec
icebp
fwait
rorb
outsb
pusha
dec
sbb
shlb
mov
test
dec
mov
and
adcl
cmp
cmpsb
int3
cmp
and
and
mov
xchg
lcall
pop
fidivs
hlt
rorb
rclb
fsubl
jle
and
pusha
in
xchg
pop
or
icebp
inc
sbb
call
dec
daa
movsb
dec
das
scas
mov
xchg
mov
call
jle
push
int3
nop
and
fs
das
daa
das
inc
mov
cmp
and
adc
rolb
xor
jp
out
fwait
shll
pushf
mov
inc
or
add
xchg
cli
jg
aaa
ss
testl
sub
test
push
pushf
scas
inc
jg
daa
adc
jmp
js
mov
and
call
pop
pusha
lret
movsl
add
add
movsb
cmp
pop
std
xor
jno
pop
stos
push
sbb
lcall
mov
fs
add
or
jg
ret
jg
hlt
fistl
mov
lods
subb
sbb
dec
icebp
adc
test
dec
inc
shrb
lock
mov
pusha
int3
push
cmc
sahf
jb
popf
xor
dec
repnz
sbb
in
mov
jg
jmp
rolb
mov
jno
mov
mov
bound
loopne
mov
mov
and
dec
lcall
loopne
into
imul
gs
push
in
mov
jmp
inc
add
ret
daa
push
pop
fcomp
xchg
insb
sbb
or
cmp
or
pop
loop
aam
add
popa
out
mov
das
shlb
xchg
outsb
lods
lcall
clc
popf
js
mov
push
mov
mov
leave
mov
stos
incb
pop
inc
xor
jle
call
hlt
cmp
cwtl
incb
incb
mov
ret
out
push
std
and
outsl
es
mov
test
mov
imul
sub
repnz
sbb
jbe
push
loop
adc
mov
xchg
orl
std
dec
test
in
shll
inc
push
bswap
xor
mov
fcoml
add
rdmsr
movsb
in
pop
cmp
mov
sahf
jecxz
pop
add
shl
mov
pop
leave
dec
push
hlt
pusha
pop
mov
movsl
sub
adc
ret
sbb
cmp
in
xor
and
xchg
add
lods
inc
inc
repnz
pop
cli
push
mov
dec
out
push
sbb
mov
les
dec
pop
push
loope
insb
pop
hlt
inc
repz
jle
stos
leave
loopne
nop
or
mov
cmpsl
xchg
jne
jmp
ficoms
cltd
in
movaps
pusha
cs
inc
sub
in
rclb
jp
cs
xchg
into
mov
dec
jl
je
in
in
mov
repz
hlt
sbb
pop
or
stc
dec
cmp
subl
jnp
add
add
dec
or
pop
ret
jae
clc
je
cmp
adc
pop
sbb
add
cmp
add
test
xchg
into
hlt
adc
and
shr
cmp
loopne
xor
adc
dec
rcrb
dec
jp
mov
push
scas
and
bnd
xor
aas
decb
mov
std
fadds
sub
adc
pusha
and
data16
add
stos
adc
push
dec
pusha
pop
push
cmpsl
jmp
ret
inc
sub
fstps
in
in
inc
inc
popf
add
clc
aaa
out
mov
adc
xor
or
pusha
lock
cmp
cmpsb
xchg
ret
clc
add
scas
enter
push
sub
push
push
stos
pop
insl
roll
fbld
adc
stos
push
nop
stc
ja
sbb
out
jno
call
loopne
addb
or
inc
inc
sub
dec
and
mov
or
mov
jmp
nop
add
sbb
mov
and
xor
xor
inc
push
inc
push
pop
cwtl
test
jno
dec
xchg
sbb
xor
js
jns
or
enter
and
mov
push
inc
outsl
inc
mov
adc
mov
adc
sbb
sarl
stc
sub
sub
fcompl
shll
push
iret
fiadds
cmc
xor
jo
cwtl
xchg
ret
inc
sti
movb
in
pop
pop
ljmp
push
push
mov
es
call
pusha
subb
mov
in
or
ljmp
inc
outsl
std
pop
pop
and
and
lea
pop
ljmp
and
push
mov
add
push
pop
nop
test
sub
lock
jle
mov
inc
mov
mov
enter
filds
xor
in
push
lahf
cmpxchg
cmp
xor
xor
cld
mov
fbstp
and
add
mov
sti
scas
dec
in
fstpl
pop
clc
test
test
add
cmp
dec
push
cli
mov
outsl
xor
and
test
nop
dec
jg
push
sub
push
push
or
je
movsl
mov
sti
add
loop
mov
pop
pop
xchg
push
xchg
nop
cltd
subb
xchg
add
or
and
jnp
loop
cmp
loope
dec
add
xchg
test
movl
lahf
dec
inc
cwtl
and
cld
ret
mov
loopne
pop
xlat
or
loop
inc
cmp
jg
sarb
mov
lret
push
add
pop
push
lock
push
stos
insb
mov
inc
mov
dec
mov
test
outsb
and
sar
leave
jle
repz
fimuls
das
pushf
lahf
in
xchg
sub
cmpsb
scas
lock
outsl
sub
fcoms
pop
mov
fs
lcall
icebp
inc
fnstsw
loop
jb
sub
icebp
cld
aad
and
roll
mov
xchg
leave
xchg
repnz
pop
add
mov
jmp
ret
data16
cld
in
and
mov
daa
or
pushf
sbb
add
mov
push
sub
mov
mov
stos
cli
mov
add
mov
inc
jge
sbb
clc
pop
sub
fstpt
adc
lcall
cmp
shll
push
test
dec
mov
sbb
pop
jg
stos
xchg
lcall
clc
in
adcl
add
inc
add
add
pop
shlb
roll
out
roll
xchg
mov
movsl
adc
test
rcrl
call
push
and
test
mov
add
push
movsb
xor
das
inc
mov
imul
xor
mov
add
dec
aas
inc
das
sub
cmp
cmp
int3
sub
insl
inc
add
cli
xor
filds
ret
out
dec
cltd
xchg
xor
shrl
push
hlt
loop
or
lahf
out
add
mov
insb
ret
xor
decl
std
inc
inc
mov
rorb
adc
ret
call
lock
cmc
or
mov
insb
fstpl
in
mov
mov
mov
lds
add
add
xchg
ss
xchg
outsl
push
sbb
test
mov
ja
add
push
inc
lock
push
js
sar
das
cld
push
sarb
pop
ret
ret
notb
sub
nop
or
aam
aam
icebp
xor
add
xchg
jmp
jg
sbb
addl
loop
push
add
mov
add
lock
test
out
ret
insl
pop
push
imul
inc
jne
pop
jle
pop
movsl
or
jbe
aas
out
sbb
sbb
cs
cwtl
mov
das
mov
decl
sub
loope
cmp
push
xchg
clc
insl
rcr
push
sbb
les
iret
lret
add
mov
call
or
mov
out
loope
orb
mov
aas
adc
push
or
gs
ss
call
mov
pop
mov
pop
push
inc
or
mov
ret
sub
add
adc
fbld
ljmp
mov
or
je
mov
jae
in
pusha
pop
add
std
xchg
ss
cli
cmp
jo
cmpsb
fstps
push
inc
mov
or
or
or
mov
cmp
xor
add
dec
sbb
jp
xchg
out
in
aad
clc
add
pop
pusha
xor
lcall
clc
adc
xchg
fwait
pop
out
add
inc
ja
sti
lea
adc
in
pop
cs
popa
test
or
pop
dec
push
and
xor
push
mov
mov
nop
mov
jmp
movsl
mov
xor
in
bound
js
push
in
pop
scas
and
cmp
ja
jne
xchg
xchg
shrl
or
incb
jmp
sub
out
inc
sbb
arpl
cs
push
js
dec
loopne
inc
jge
mov
cld
pop
push
add
mov
outsl
mov
mov
popa
shlb
xchg
lea
cmpsb
sbb
add
fistps
xchg
add
add
xor
mov
call
cmp
imul
fsts
xchg
jno
push
aam
jecxz
repz
jae
lea
popa
and
lods
rorb
fiaddl
push
push
and
ret
lods
cmp
movsl
inc
fistl
cmpsb
cltd
sub
shl
xchg
cmc
nop
mov
jl
sbb
push
in
push
test
add
xchg
push
jg
cmp
lods
sub
stos
ds
insl
sahf
inc
scas
mov
in
inc
inc
ljmp
push
mov
std
jo
cmp
repz
mov
call
les
cmp
dec
pop
movsl
xchg
jb
mov
jg
cmpsb
jge
jns
lret
pop
mov
jp
test
ljmp
jmp
sub
daa
mov
and
push
lds
xchg
pop
mov
jo
and
sbb
test
lods
pop
sbb
aaa
jmp
test
lods
std
jg
add
sub
push
out
and
pop
xchg
push
add
daa
insb
loope
imul
mov
ljmp
mov
pusha
push
cmpsb
dec
mov
mov
dec
adc
enter
pop
add
decl
dec
mov
lea
fwait
lret
js
insl
out
shlb
iret
mov
cltd
roll
push
adc
aas
pop
sahf
and
pop
sub
inc
mov
lea
popa
jmp
and
lods
call
test
and
ljmp
lret
push
mov
cld
inc
aad
cmp
inc
jbe
adc
push
sbb
cmp
pop
sbb
and
insl
lahf
mov
push
push
subb
cmpsl
test
imul
cli
inc
rcrl
pusha
adc
jno
jp
sub
jg
push
and
scas
ret
inc
mov
fcomip
aam
shlb
mov
test
gs
mov
cmpb
jg
test
pop
stos
push
xorl
or
aad
stc
add
into
jecxz
sub
pop
decb
jbe
in
mov
add
stc
push
rcrl
push
xchg
pop
inc
push
push
push
jb
sub
incl
leave
test
and
enter
push
outsl
inc
lea
lret
popf
and
loop
das
inc
pop
loope
inc
mov
cltd
mov
popf
ret
add
pop
cmpsb
sub
cmp
cmp
aad
xchg
cmp
mov
stos
repz
sub
arpl
dec
cs
push
outsb
lock
or
add
xchg
lahf
data16
xchg
push
and
arpl
add
es
inc
pop
adc
fsubrl
hlt
icebp
std
or
and
pop
inc
mov
xorl
cld
ds
jecxz
or
insl
pop
sbb
mov
sub
sbb
sti
mov
insl
stos
adcl
cmp
daa
loopne
mov
mov
add
jle,pn
push
mov
je
cmpb
adc
lret
mov
fistpl
jns
mov
sbb
mov
pusha
sub
out
cmpsb
test
addl
adc
lods
sub
push
nop
js
jg
sub
mov
xchg
add
xchg
popa
mov
and
xchg
push
mov
sub
data16
or
sub
sbb
jmp
mov
push
hlt
inc
mov
cwtl
and
inc
mov
jle
sbb
jle
sti
shlb
test
push
jle
test
mov
inc
cld
jb
pop
jns
pop
mov
mov
aad
push
adc
shll
outsb
mov
sbb
dec
lods
sti
pop
adc
sar
and
xor
insl
jp
hlt
fsts
mov
mov
jmp
jns
push
jmp
pop
push
ficoml
pop
cmp
nop
cmp
jecxz
mov
sbbl
andl
push
rcrb
jno
cmp
push
push
mov
shrl
add
sub
mov
inc
cmp
add
pop
xchg
lcall
or
add
xchg
inc
ja
cmp
call
dec
sub
test
add
add
cmp
sbb
lret
cmp
fisubrl
filds
add
jbe
std
cmpsl
and
rcr
test
add
push
pcmpeqd
dec
push
shlb
add
incb
push
or
add
stos
or
outsl
sbb
xchg
push
mov
adc
cmpb
dec
mull
jne
mov
loope
sub
push
mov
iret
fsubrl
stos
adc
sub
adc
mov
xlat
xchg
xor
cmp
adc
pusha
ss
mov
adc
mov
sub
jecxz
mov
xor
and
mov
mov
add
xor
xchg
xchg
sub
push
and
jecxz
dec
rclb
inc
int3
js
push
or
xor
popf
pusha
add
icebp
add
out
push
stos
xor
push
sub
je
adc
negl
mov
sub
mov
jl
adc
add
push
xor
cmp
and
xchg
rcrl
js
xor
adcb
sarl
hlt
and
ret
je
adcb
outsl
inc
nop
and
sub
sbb
dec
cwtl
push
lahf
fistpl
and
incl
dec
adc
push
xor
fld
xor
rcrl
push
andl
pop
jmp
cmp
pop
pop
psrlw
adc
cmc
xchg
lcall
mov
or
outsl
aam
rclb
out
jl
pop
in
loope
sub
sbb
jl
lods
mov
fdivl
clc
mov
addr16
jmp
jg
cmc
call
std
xchg
test
movsb
call
jecxz
in
shrl
fisubl
and
test
std
and
out
jg
xchg
call
mov
pushf
nop
add
mov
and
jae
pop
ljmp
inc
psubsb
xchg
jmp
push
decl
lock
jmp
add
xor
lods
pop
cmp
or
or
push
inc
ljmp
push
jb
cmp
pop
adc
js
jns
incl
addb
leave
rorl
mov
jl
inc
adc
cmpl
push
fisubrs
fnsave
clc
and
aam
cli
mov
or
jecxz
or
out
mov
roll
push
pop
pop
or
cmp
cmc
push
adc
test
int3
cmp
sub
icebp
mov
test
lret
stc
nop
fidivs
adc
mov
imul
or
outsl
and
mov
inc
fwait
mov
movsl
mov
mov
mov
pop
push
scas
or
cli
mov
repnz
adc
adc
adcb
in
test
shlb
push
repz
push
mov
jmp
roll
mov
roll
pop
js
or
mov
incl
xor
inc
aad
outsb
nop
xor
mov
jg
cvtps2pd
xor
pop
cli
add
lcall
mov
adc
push
jl
fmull
repnz
add
fwait
aaa
add
jmp
xchg
stos
bound
mov
mov
lahf
shll
int
pop
clc
add
inc
loop
and
pushl
adc
loope
repnz
jp
insl
mov
mov
fidivl
insb
loop
repz
mov
dec
add
lahf
sbb
fldt
or
inc
sbb
inc
fldcw
sbb
jl
lret
aam
lea
leave
pop
pop
or
mov
int
out
jle
call
or
and
enter
sbb
push
mov
ret
in
pop
iret
or
sub
dec
arpl
popa
imul
push
or
enter
or
xor
aam
pop
popf
push
pop
push
sub
out
xchg
mov
mov
inc
repz
ss
or
and
dec
decb
popa
test
scas
xchg
clc
sub
rol
in
inc
gs
fdivs
test
shlb
push
aam
decl
or
fwait
inc
movsb
test
push
pop
test
jp
rcrb
sub
fisubrl
fwait
test
loop
add
js
or
loop
mov
or
inc
fidivrl
xchg
ficompl
mov
lcall
lods
aaa
push
jo
add
mov
xchg
xor
mov
mov
adcb
inc
xor
out
sbb
bound
or
scas
lret
dec
xor
in
outsb
jno
arpl
jns
xchg
addr16
push
push
mov
movl
aas
out
push
pop
sbb
sub
mov
fnsave
scas
test
mov
mov
mov
inc
stos
jmp
rcll
mov
jo
add
mov
loopne
xchg
sbb
popa
sbb
mov
push
push
shrb
sub
push
xchg
loopne
inc
mov
lock
add
loopne
lods
push
cmp
fiadds
add
xchg
inc
movsb
cwtl
pusha
inc
and
sbb
fidivrs
insb
xor
inc
cmp
sbb
mov
fwait
adc
movl
cmpsb
cmp
fdivl
clc
dec
fdivs
push
jo
flds
fld
mov
or
sarl
add
xor
and
and
mov
adc
icebp
and
xor
aam
xor
xor
addr16
int3
call
shrb
add
or
cmp
icebp
pusha
adc
pop
and
popa
inc
xor
xor
pop
sub
adc
and
fwait
mov
add
pop
outsl
xor
push
leave
inc
add
pop
shr
mov
push
add
mov
adc
push
xchg
jbe
xchg
daa
or
adc
insl
aam
jmp
inc
jno
das
cs
xchg
xor
pop
inc
ljmp
ljmp
cmp
xor
shlb
mov
adc
pop
adc
lret
mov
jle
ret
in
imull
xor
sub
ljmp
inc
pop
adc
and
mov
mov
xchg
or
int3
dec
outsb
pushf
inc
cmc
insb
stc
sbb
mov
arpl
sub
sub
fsubs
sub
sbb
repnz
mov
daa
bound
repnz
das
insl
jge
sub
sub
pop
and
push
mov
xor
inc
not
movsl
daa
shrb
cld
jb
lods
lods
mov
push
incl
fildl
cmp
fidivs
lret
cmp
lcall
pop
sub
mov
repz
add
jb
std
sbb
and
xlat
std
pushl
lcall
addr16
xchg
mov
cmpsb
cmp
outsb
mov
cmp
inc
int
sub
xchg
sub
decl
sub
cld
jle
ja
pop
es
push
jg
mov
mov
imul
adc
pusha
jp
es
je
xchg
push
test
outsl
or
and
fadd
aad
std
in
out
ljmp
inc
mov
mov
and
or
xor
xor
shrl
loopne
jmp
rclb
sbb
shlb
push
shrb
testb
push
jne
mov
xor
xchg
mov
hlt
aas
sbb
add
mov
mov
mov
cmc
out
daa
insl
iret
mov
adc
cmp
sub
add
lods
outsb
int3
lods
mov
test
mov
lea
dec
test
mov
adc
lods
pusha
or
cwtl
ljmp
mov
stos
or
jne
pop
dec
adc
leave
mov
add
insl
sub
or
xor
adc
or
fidivl
xchg
adc
inc
jno
or
pop
into
outsl
pop
fstps
sbb
push
pop
adc
call
pop
loopne
ss
icebp
or
pop
rolb
cltd
into
xor
xorl
lods
ljmp
js
sbb
push
ljmp
xor
cmc
adc
nop
and
ljmp
stos
sub
dec
push
les
rol
mov
mov
mov
call
outsb
inc
jb
jno
inc
in
pop
cmp
pop
sub
inc
dec
shlb
std
and
inc
repz
lods
mov
shlb
pop
cltd
inc
or
or
aam
fsubs
loop
pusha
movsb
inc
lock
push
test
js
add
repz
and
or
adc
push
sub
cmp
add
adc
jne
mov
addb
push
inc
cmp
jle
xor
sub
add
mov
test
cmc
stos
mov
sbb
cs
dec
imul
adc
jbe
xor
cmpsb
jb
xor
mov
inc
dec
rcrb
and
add
or
jecxz
or
push
rol
push
or
adc
into
add
outsb
iret
jo
add
test
xor
adc
or
pusha
call
pop
dec
fisttpl
jge
nop
fnstenv
jl
test
push
xor
add
add
cmp
inc
inc
mov
cli
push
push
push
xchg
rcr
je
mov
cmc
lea
mov
push
notb
in
jno
mov
push
outsl
sub
pushf
pop
push
fcomps
sbb
and
std
xor
arpl
sub
mov
clc
lret
jp
cmp
pushl
int3
jmp
inc
and
shlb
in
rep
std
in
inc
adc
or
in
fs
xlat
inc
mov
xor
pop
push
decl
pop
les
leave
js
das
lds
pop
and
lock
inc
sar
adc
nop
or
fistpl
js
inc
cli
push
adc
aam
mov
add
mov
dec
aad
test
pop
daa
or
inc
cs
mov
cmp
test
imul
dec
cmp
inc
add
xchg
or
mov
pop
xchg
int3
ljmp
xor
rolb
inc
outsl
add
mov
sbb
std
mov
and
adc
pop
out
sarl
pusha
cmp
es
mov
cmpsb
inc
mov
pop
lret
push
cmc
push
inc
mov
mov
inc
jno
mov
insl
dec
jo
fidivs
jp
mov
push
or
subb
subb
or
adc
mov
xchg
or
xchg
sbb
inc
aaa
jo
mov
or
icebp
jns
push
inc
mov
sbb
cmpsl
adc
notb
ds
sub
pop
pop
sbb
jbe
sahf
jo
push
xchg
adc
xorb
add
xor
mov
xchg
cmp
mov
sbb
cli
stos
in
enter
les
push
mov
and
pop
fs
cmp
hlt
jg
mov
add
and
mov
mov
lcall
insl
sbb
inc
test
jae
pushf
jecxz
testb
mov
or
mov
mov
js
sub
pop
stos
out
sub
jl
push
mov
stc
mov
movsl
lea
pusha
scas
sbb
cs
fistpl
xchg
lahf
cmp
adc
xchg
ds
decb
jne
js
and
push
xchg
and
sbb
and
popl
test
jg
les
test
jnp
sbb
jmp
cmp
mov
jne
cmc
adc
jno
shrl
cld
inc
adc
and
outsb
fxtract
repnz
mov
into
ret
mov
jns
lret
call
mov
fcoms
pop
sub
mov
movsb
inc
in
lods
mov
je
inc
pop
rclb
mov
pop
sub
pop
test
xchg
shll
or
pushl
mov
push
ds
xchg
mov
inc
mov
jle
mov
push
lahf
mov
or
mov
movsb
test
aas
mov
mov
jle
cmp
out
and
sub
movsl
dec
nop
inc
xchg
sbb
clc
mov
sarl
xchg
jmp
xor
and
pusha
popa
or
mov
push
mov
jne
dec
xor
xchg
mov
aaa
decb
sbb
cmc
in
adc
outsb
push
cmp
aad
lods
mov
mov
repnz
mov
mov
mov
and
xor
mov
xor
cmp
inc
inc
test
add
sub
addr16
or
sub
outsl
jno
adc
ret
cmpsb
mov
push
inc
icebp
xchg
or
insb
stos
mov
call
lea
pushf
mov
jnp
aam
jo
push
add
inc
cmc
add
add
iret
mov
mov
andl
loop
sbb
or
push
xor
les
and
dec
cmp
lock
ficompl
mov
notb
xor
pop
aam
jmp
cmp
loop
adc
add
or
and
imul
push
adc
jne
or
push
lds
inc
popf
xchg
or
adcl
add
ds
sub
adc
adc
add
pop
pop
rolb
jae
das
rcrl
sbb
mov
push
pmaxub
stos
xchg
inc
dec
adc
add
add
in
mov
mov
and
sub
roll
sbb
mov
xchg
pop
roll
xor
adc
or
adc
or
dec
adc
pop
fmuls
mov
cli
mov
adc
or
adc
inc
popa
or
dec
aam
loop
cmpb
fiaddl
faddl
add
ljmp
jnp
aam
xchg
clc
or
lcall
and
dec
sbb
movl
fidivrs
xchg
std
hlt
xor
test
inc
jge
shrb
push
cld
add
dec
mov
out
in
or
sbb
cmp
push
shrb
stos
in
pop
sbb
push
test
xor
adc
andl
sbb
sbb
adcb
test
cmpsb
or
call
adc
out
xchg
loope
xor
cmp
decl
in
mov
xor
or
add
and
mov
push
adc
int
mov
jp
pop
loope
mov
mov
lds
adc
call
xor
adc
cli
adc
test
adc
mov
or
inc
add
xor
leave
ret
xor
jge
mov
dec
ret
ljmp
cmp
adc
mov
fistpll
sbb
sub
and
mov
pop
clc
add
mov
cmovl
clc
lcall
mov
stc
stos
divl
jb
and
push
pushl
test
pushf
push
push
rorl
jno
xchg
rcll
data16
mov
outsl
push
and
or
jae
cmp
mov
jb
add
sub
and
fsubp
loop
add
movsb
or
sahf
mov
or
jg
sbb
cmp
push
paddsb
push
push
add
nop
cmp
adc
xlat
cmp
cltd
inc
sbb
mov
iret
fsubrs
in
lods
push
dec
dec
out
cmc
sub
outsl
adc
daa
outsl
aas
cltd
push
popa
lcall
stos
xchg
test
mov
hlt
mov
movsb
add
adc
test
ds
push
sarb
cli
gs
dec
stos
nop
or
push
mov
ret
les
mov
cld
pusha
mov
int3
ljmp
aad
jae
pop
inc
decl
adc
pushl
mov
mov
cmp
cwtl
jo
sbb
test
inc
cld
inc
inc
imul
jns
mov
incl
push
inc
push
add
cmpsl
cs
ds
cmpsl
push
dec
pusha
jb
stos
jecxz
out
inc
incb
outsl
stc
add
enter
dec
push
pop
adc
call
mov
or
enter
push
fiadds
pop
xchg
cmp
pop
cli
mov
fistps
jge
icebp
aaa
push
imul
out
add
pop
mov
ret
or
movsl
or
inc
xor
and
and
push
adc
xorb
sbb
cwtl
fs
stc
xor
aad
add
xlat
pop
inc
aam
hlt
mov
decl
insl
rcll
mov
lcall
cmpsl
push
decl
enter
lret
out
loopne
clc
das
sub
movsl
sub
inc
jl
pop
inc
add
sbb
fildll
cmp
pop
sbb
xor
inc
cld
cltd
ret
fisttpl
add
dec
shrb
mull
add
dec
fdivp
mov
mov
xor
push
dec
push
and
iret
scas
lock
icebp
mov
lea
inc
loop
fnsave
push
pop
xchg
popf
add
shrb
add
fildll
imul
cmpsl
out
lret
cli
sub
jle
xor
and
loop
decl
mov
pusha
inc
mov
cmp
sub
jl
ret
fmuls
loopne
imul
lcall
daa
js
xchg
sub
int3
jmp
pop
or
xchg
sub
and
mov
lods
pop
fcomps
or
fistpll
or
pop
pop
cwtl
inc
scas
fwait
shlb
cmpb
mov
xor
mov
ss
js
cmpsl
mov
push
sbb
push
inc
cli
mov
xchg
cs
cmp
jg
popf
pushl
fsubl
and
or
jge
das
vcvtsd2ss
and
cmp
mov
adc
mov
ljmp
adc
pop
arpl
daa
shll
sbb
pop
inc
sbb
mov
adc
out
pop
rcl
jo
movsl
mov
outsb
mov
iret
mov
xor
sbb
cwtl
mov
dec
stos
sahf
add
mov
push
orl
jecxz
fucomip
dec
mov
push
andl
mov
lods
loop
out
in
push
or
loopne
cwtl
push
sub
ljmp
push
mov
sub
and
int
jle
and
fldt
ljmp
mov
adc
jae
nop
cmp
jb
add
in
mov
cwtl
push
xchg
in
fmul
add
aaa
pop
cld
adc
cmp
pop
jb
iret
or
inc
cmp
xchg
fisubrl
fldt
adc
jo
adc
test
decl
pop
pop
adc
out
cs
mov
mov
add
inc
xor
fmull
fistpll
xor
add
sbb
into
stos
xor
fdivr
mov
popa
and
add
add
mov
xor
int3
add
mov
or
or
into
lret
add
shlb
outsb
pushf
push
sbb
xchg
lret
lock
jns
lock
into
fsubrl
xor
int3
mov
add
roll
lock
ficoml
mov
and
mov
lret
add
push
pop
data16
push
adc
cmp
les
mov
les
dec
xor
fwait
in
mov
or
cmp
add
add
mov
rcrl
inc
mov
pop
xor
or
mov
test
xchg
xor
mov
jp
sarb
pop
call
test
je
out
fsubrl
fsubrs
push
sub
xor
and
jg
fwait
add
fistpl
jl
sar
hlt
aam
shl
pop
negl
jg
or
iret
les
xor
lea
fs
clc
and
cwtl
les
inc
in
incb
and
adc
aas
mov
inc
mov
xchg
cmpsl
sbb
insl
add
adc
xchg
xchg
dec
stos
fcmovbe
mov
loopne
scas
cs
and
rclb
mov
jle
lods
cs
jp
dec
shr
xlat
pusha
cltd
adc
sarl
in
mov
dec
enter
subb
and
dec
cmpsb
mov
cmp
sti
pop
mov
adc
mov
daa
mov
adc
in
dec
iret
stos
rcrl
test
xor
les
imul
xchg
cs
lock
push
sbb
cmpsb
push
fwait
pop
push
in
cmpsb
loopne
mov
adc
xor
adc
pop
add
dec
adc
sbb
fcmovnbe
cmp
or
cli
insl
mov
adc
xor
mov
mov
icebp
adc
mov
xor
into
push
mov
icebp
jno
jb
or
mov
insl
popa
lcall
fwait
dec
push
or
jp
or
sbb
fildl
mov
hlt
mov
pop
mov
xor
jecxz
sub
mov
mov
cld
in
mov
pop
dec
push
pop
add
aas
test
mov
adc
std
pop
pusha
ret
in
sub
and
pop
mov
fwait
out
filds
lds
push
popf
jl
mov
mov
jbe
push
inc
je
mov
xlat
push
add
pop
sbb
pushf
xor
mov
data16
pop
sub
add
mov
adc
jbe
decl
or
jl
icebp
add
fnstsw
cmp
jge
add
mov
adc
pop
or
je
or
imul
stos
push
xchg
dec
and
rcll
add
pop
ljmp
xor
dec
imul
mov
mov
aad
mov
add
lret
imul
hlt
add
jmp
or
lret
push
or
arpl
mov
jns
add
dec
mov
add
pop
mov
dec
imul
fucomp
int3
test
jmp
repz
sbb
add
add
in
mov
std
xchg
push
dec
sbb
call
push
iret
push
das
push
ljmp
lret
inc
movsb
mov
xchg
inc
and
shrb
pop
lods
fidivl
outsb
xchg
cli
outsl
dec
loopne
or
add
outsl
sar
jg
mov
and
testb
cs
add
jnp
push
add
mov
adc
in
out
adc
in
pushl
hlt
add
js
mov
push
xor
icebp
dec
mov
mov
dec
frstor
mov
jns
jecxz
mov
pop
out
pop
mov
or
fistpll
xor
inc
bound
fcmovnu
push
adc
cltd
out
inc
cs
mov
lcall
adc
mov
inc
ljmp
jecxz
pop
aas
idivb
pop
lret
push
adc
pop
mov
inc
and
js
mov
mov
mov
test
sarb
dec
repz
sub
test
mov
cmp
add
lock
aad
mov
scas
sbb
dec
lcall
stos
nop
xchg
sti
ljmp
xchg
aam
mov
scas
call
leave
xchg
xor
or
loop
aaa
and
dec
lods
add
stos
nop
sarl
aam
inc
movsb
pop
inc
jl
pop
inc
inc
cmp
test
pop
or
mov
add
aad
mov
jo
pop
xchg
lahf
xlat
nop
rolb
das
xor
frndint
xchg
push
test
ss
adc
add
dec
dec
dec
mov
andl
xchg
pop
popa
and
add
dec
push
dec
inc
pop
rcrl
das
insl
dec
push
cmp
pop
pop
xor
xchg
push
jl
or
sbb
inc
mov
out
mov
stos
sub
inc
jnp
subb
push
pop
add
dec
outsl
mov
jle
mov
push
imul
cmp
adc
lret
insl
add
fcoml
xchg
pop
push
sub
mov
enter
decl
or
int3
adcl
mov
jp
insl
push
inc
adc
pushl
inc
and
sbb
mov
mov
outsl
adc
adc
aam
cmp
cmc
outsl
mov
xchg
pop
nop
sub
int3
ror
add
push
cmpb
sbb
test
or
shlb
inc
lods
pushf
push
mov
arpl
aam
and
lret
push
jmp
mov
popa
je
sub
push
mov
mov
xor
subl
jle
xchg
ss
cmpsb
lods
xchg
rclb
imul
in
ficoml
stos
loop
push
cvttps2pi
dec
xor
dec
push
cld
mov
dec
adc
mov
and
ret
scas
sbb
insl
mov
fst
push
sub
push
jbe
decl
gs
in
jp
pop
sahf
pop
sub
xor
fnstsw
movsl
inc
stos
cmp
in
or
lcall
pusha
aam
mov
stos
xchg
sbb
movsb
arpl
sbb
inc
xchg
jae
push
mov
sbb
test
in
pop
icebp
pusha
mov
mov
xchg
enter
pop
jbe
daa
jae
js
or
jmp
sti
and
in
adc
sbb
in
jg
cld
push
iret
sbb
jbe
pop
test
push
xor
test
arpl
or
lock
jp
pusha
mov
add
adc
stc
mov
adc
fbld
ss
gs
lock
pop
cmp
adc
andl
jge
xchg
jg
or
movsl
push
and
dec
out
pop
aaa
insb
decl
inc
cld
decl
mov
inc
pop
pop
add
fadd
pop
adc
pop
outsb
test
and
test
add
mov
in
movsl
out
outsl
pop
adc
out
cmp
or
scas
inc
mov
xor
mov
scas
fs
jmp
outsl
outsb
push
or
addr16
rcrl
enter
mov
pop
push
fisttpll
pop
fldl
iret
sub
add
dec
sbb
pop
sub
pop
sti
mov
xor
push
inc
sub
pop
push
movzbl
jns
push
clc
adc
jne
insl
aaa
cmp
push
mov
incl
lea
insl
dec
or
sbb
pop
jae
adc
or
xchg
pop
dec
fcmovb
imul
enter
pop
or
xor
cmp
test
add
out
ljmp
aaa
add
jb
lahf
pop
shlb
insl
lock
dec
sahf
pop
popf
aaa
push
mov
popa
clc
jnp
dec
in
mov
mov
dec
rcrb
jle
dec
fdiv
jmp
adc
and
mov
cs
and
xchg
or
xor
dec
xchg
rcrb
mov
jno
and
cmp
adc
dec
jo
or
fbstp
mov
out
mov
mov
xlat
fcomp
gs
mov
mov
jecxz
pcmpgtd
fistpl
in
test
jb
cmpsl
mov
mov
add
sub
call
inc
mov
mov
inc
lock
dec
pusha
popa
xchg
sbbl
cmpsb
mov
sub
dec
test
xchg
mov
test
cmc
dec
js
in
adc
insl
sub
das
and
cltd
inc
mov
or
pushf
mov
movb
aaa
fidivrs
xor
nop
js
mov
arpl
not
and
call
add
fmul
push
xchg
cmpl
mov
push
ds
lea
out
pushf
add
loop
mov
sbb
and
adc
clc
stc
cltd
fldt
subb
sub
ja
jae
int3
fstl
adc
pop
lcall
xchg
push
sbb
sbb
pop
mov
inc
xor
sahf
fsts
sub
sbb
ja
mov
hlt
mov
add
in
xchg
lcall
loop
mov
leave
sbbb
inc
and
mov
shll
push
jg
jge
xor
and
lahf
rorl
sbb
lods
push
insl
jmp
test
arpl
push
mov
jae
clc
or
sub
aad
push
loope
hlt
sbb
pusha
dec
testl
mov
add
mov
or
adc
push
je
jns
push
call
mov
js
add
cmp
popa
inc
and
pop
mov
outsb
test
add
jle
popf
ds
inc
call
sub
and
adc
mov
clc
mov
xor
jbe
popf
mov
pop
sub
sbb
mov
jge
jl
ret
aam
rcr
mov
mov
cwtl
pop
repz
mov
fidivrs
and
sub
add
pop
inc
sarb
test
jle
stc
cmp
mov
je
push
enter
loopne
xor
push
test
fnstenv
and
clc
cwtl
xor
mov
in
in
neg
xchg
stc
enter
add
push
and
lcall
sbb
and
add
movsb
sub
pop
xchg
jp
cmp
inc
jl
and
loope
sbb
movsl
popf
and
push
jl
test
test
lcall
mov
es
aaa
mov
mov
sub
int3
cmp
int
mov
push
lock
icebp
in
fwait
mov
dec
ds
js
cld
jno
sbb
icebp
sbb
in
stos
mov
pop
mov
loope
and
cmp
dec
or
jp
std
lock
dec
mov
add
mov
push
aam
jle
jmp
insb
adc
clc
push
idivl
and
ds
fildl
ss
fcomip
nop
outsl
icebp
or
jl
ja
bound
mov
ljmp
insl
push
stc
out
cmpsb
aam
push
andl
inc
sub
icebp
or
adc
push
sbb
sub
adc
test
pop
mov
addb
cmp
and
mov
nop
sti
adc
fucomp
lea
cmp
jo
dec
pop
dec
mov
int
or
aas
fcmovbe
imul
cwtl
test
xor
add
pop
cwtl
add
adc
xchg
mov
mov
in
adcb
loopne
bound
adc
scas
outsl
mov
ret
orb
pop
js
xchg
shrl
arpl
jnp
fs
movlps
mov
add
or
and
pushf
push
aas
sar
add
inc
imul
test
push
scas
int3
sarl
xchg
sbbl
mov
addl
icebp
arpl
fwait
test
test
aaa
and
rep
clc
test
or
xorb
adc
or
xor
clc
push
lock
sbb
inc
hlt
adc
jp
or
in
push
mov
out
fsubl
inc
lock
ljmp
xchg
dec
aas
stos
dec
xchg
push
fstpt
or
xchg
scas
xor
pop
fnstcw
mov
mov
lock
jne
in
int3
inc
test
stos
bound
lock
pop
insb
push
push
clc
jae
cmp
jg
mov
das
into
fcompl
xchg
lock
out
fdiv
pop
in
sbb
jecxz
jmp
add
rclb
push
cld
or
dec
cmp
ja
rcrl
clc
sub
mov
into
jmp
add
add
pop
and
or
fldl
sar
mov
imul
adc
setb
sub
push
je
sub
add
or
mov
add
or
xchg
not
and
jbe
scas
cmp
sub
dec
data16
lcall
and
cwtl
mov
sti
push
dec
repnz
jl
and
sbb
iret
inc
xor
aaa
mov
adc
adc
inc
xor
cwtl
in
cmp
pusha
shlb
add
add
rclb
sbb
push
roll
rcr
fimull
cmpsb
push
adc
imul
inc
rcrb
shlb
ret
push
lea
xor
or
enter
and
push
iret
cmp
and
jae
xor
add
mov
jb
lds
jmp
testb
or
into
or
mov
lock
push
loop
ss
inc
add
orb
iret
push
sbb
mov
push
add
cwtl
xor
mov
repz
inc
sub
lahf
add
adc
repnz
outsl
mov
dec
loopne
mov
inc
dec
insb
adc
sbb
mov
stc
xchg
and
test
or
mov
xchg
pop
xchg
test
xor
push
cld
or
loop
jns
imul
lcall
inc
xor
hlt
add
jnp
add
cs
pusha
and
dec
das
add
mov
xor
and
loopne
mov
dec
xor
push
insb
fldt
cmc
loope
or
insl
sub
fbld
rolb
and
pop
test
int
mov
dec
add
cld
fwait
and
cwtl
ret
cmp
out
xchg
pop
xchg
adc
mov
fsubr
xchg
xor
or
jecxz
cmp
jno
aad
shrb
call
mov
sbb
icebp
adc
aam
dec
inc
leave
rolb
fisubrl
or
out
add
dec
push
out
inc
sbbb
jnp
rol
pop
lods
mov
mov
push
js
sbb
mov
jle
cmc
or
jns
fiadds
test
jl
jae
popa
rclb
mov
cmpsl
int
inc
popf
jmp
fadds
push
mov
fbstp
rcrl
sub
inc
mov
mov
mov
mov
std
xchg
les
add
sbb
mov
jbe
jne
push
xchg
stos
rcll
or
push
or
add
mov
rorl
mov
push
jp
aas
push
mov
push
pop
or
data16
jne
int3
jmp
test
and
shl
pop
push
stc
push
mov
jecxz
push
pusha
add
out
mov
mov
cmp
inc
pop
inc
cmp
bound
nop
cmp
pop
insl
mov
lea
add
das
in
insl
je
lahf
inc
aaa
pop
cmpsl
movsl
xor
std
test
cmpl
dec
cld
inc
aaa
je
jae
addl
lods
jge
add
out
jbe
adc
arpl
sub
imul
adc
pop
out
add
lcall
icebp
and
ljmp
nop
adc
stc
pop
mov
push
mov
cli
insb
push
fadds
testb
mov
testl
push
ja
int3
lahf
xlat
rolb
jp
test
test
xor
xor
mov
jbe
movsb
sbb
xchg
dec
popf
mov
repnz
mov
sbb
mov
adc
gs
dec
fadds
lods
shlb
sbb
jnp
popa
xchg
xchg
in
or
stc
mov
test
rcr
adc
mov
lock
jp
inc
mov
pop
scas
xor
fwait
mov
fimull
pop
sub
sub
fdivr
rorl
pusha
adc
sub
push
sub
pop
inc
pop
out
jge
in
push
or
in
push
mov
lods
push
outsl
sub
inc
cli
xchg
insb
test
bound
sbb
leave
xor
inc
popa
add
jg
pusha
test
ss
inc
sub
xor
loope
or
adc
sbb
incb
pop
pop
fsubrl
out
andl
data16
ss
cmp
add
pusha
and
out
dec
cmp
adc
pop
bound
push
cmp
icebp
outsb
testl
and
mov
in
mov
bound
sub
adcl
xchg
xor
add
cmp
sbb
or
sub
int
in
fndisi(8087
add
inc
and
fisubrs
mov
pop
mov
sbb
adc
mov
add
jbe
loop
out
pop
icebp
pop
stc
ljmp
addr16
mov
movsl
loop
pop
add
pop
add
ss
sbb
cmp
data16
outsl
dec
cmpb
xor
mov
adc
add
dec
mov
clc
mov
fisubrs
loop
pop
and
addr16
aam
cmp
cwtl
adc
add
lcall
add
fiaddl
push
push
and
call
ret
jns
sbb
adc
mov
repz
pushf
mov
insb
pusha
insb
push
push
lret
add
mov
adc
fdivrp
add
pop
adc
test
cmp
inc
add
jg
mov
or
fists
mov
lods
xor
test
jecxz
lock
bound
cmc
stos
test
icebp
jg
sub
jne
pusha
sub
push
push
dec
mov
mov
mov
lds
jecxz
push
pop
repnz
in
sub
jnp
pop
push
cmp
sarl
mov
or
sbb
xchg
fildll
or
mov
movsb
push
sub
out
xor
shll
movsl
fldenv
jo
arpl
fldenv
or
push
sbb
hlt
mov
ret
jnp
cmp
mov
cmp
pop
in
inc
jo
mulb
stos
mov
mov
lods
push
int3
xor
or
orl
movsl
pusha
pop
xor
add
cmp
inc
or
cwtl
adc
add
mov
data16
mov
aam
or
or
loop
pop
sbb
cmpsb
and
add
sbb
mov
mov
fcoml
or
cmpsb
push
addr16
out
jl
xor
adc
inc
pop
adc
or
sub
icebp
jl
or
cltd
shrb
xor
mov
aam
scas
pop
scas
fisubrs
adc
sbb
jecxz
adc
fsubs
mov
xor
dec
hlt
fists
ds
in
ja
pop
add
lock
sub
sub
repz
dec
add
cld
les
inc
insb
pop
dec
roll
dec
jge
cwtl
lock
inc
and
in
cmpsb
dec
aas
push
mov
push
sbb
sub
sar
inc
add
cmp
xor
lds
add
in
and
xor
shl
je
cwtl
aam
add
xor
jecxz
push
adc
div
jb
sub
test
jo
mov
mov
mov
in
push
xchg
inc
mov
jo
adc
sti
into
mov
testl
scas
sbb
push
or
dec
clc
mov
inc
daa
xor
into
fcompl
imul
call
in
ret
dec
les
rcll
adc
icebp
mov
pusha
dec
fildl
ficoms
or
fstpl
lret
adc
shlb
into
push
fcmovnbe
adc
or
sub
cwtl
or
in
jge
lock
fimuls
les
mov
push
pop
hlt
decl
adc
push
jle
xor
push
sbb
scas
jle
mov
xor
cltd
mov
sbb
jns
add
xor
fs
dec
push
clc
jge
insb
mov
adc
cmp
jne
pop
mull
xlat
sub
mov
insl
inc
fsts
int
push
fcompl
enter
push
pmulhw
add
dec
xorl
or
in
add
daa
call
out
xor
dec
and
pop
loope
aas
test
jae
mov
adc
and
idivb
sub
fsubrs
ja
xlat
cmp
dec
push
add
mov
push
and
dec
mov
fdivl
sahf
imul
pop
sub
fists
add
into
push
inc
sbb
pop
clc
add
ss
aas
xchg
push
movsl
mov
insb
adc
lods
aaa
add
mov
add
or
add
inc
add
ret
lahf
jno
xor
pushf
adc
int3
push
icebp
jne
ret
aaa
imul
mov
fidivs
loope
push
in
stos
out
stos
stc
adc
test
inc
or
sahf
push
jb
or
fildll
add
faddl
push
mov
xchg
dec
shlb
lahf
add
adc
int3
push
jmp
nop
lock
push
ds
rolb
or
arpl
ss
mov
dec
mov
lods
push
sbb
int
pusha
lds
fcmovnbe
clc
sbb
insl
inc
je
les
lahf
dec
mov
pusha
test
xlat
push
mov
xchg
add
sbb
enter
pop
ffreep
inc
xor
push
orb
hlt
xorb
pop
push
add
dec
popa
sbb
out
jne
mov
xlat
fidivl
add
mov
orb
decl
mov
mov
shl
adc
test
rclb
push
sbbl
test
or
in
mov
stos
lcall
and
faddp
out
xorl
ja
js
mov
out
lds
inc
and
sub
dec
sti
jnp
inc
popa
add
pop
mov
lahf
test
sbb
std
repnz
lock
test
pushf
cmp
or
and
sbb
insb
or
subb
popf
loopne
aam
repnz
mov
adc
sub
int3
test
pushf
cmp
push
je
test
xlat
clc
or
out
or
adc
enter
punpcklbw
into
lods
pusha
stos
push
xor
adc
jae
inc
aam
out
repz
out
sbb
jl
xchg
das
jl
mov
push
dec
or
and
int3
sub
and
fsubs
push
popf
push
xchg
jne
pop
adc
and
mov
lock
sbb
sub
icebp
hlt
pusha
push
adc
fwait
sbb
xchg
lock
adc
pop
sub
xor
inc
fs
inc
add
sub
scas
pusha
add
psllq
aaa
loope
mov
in
pop
mov
push
or
add
xchg
xchg
xor
adc
imul
add
mov
add
dec
or
imul
add
lods
add
stc
stos
add
adc
sti
adc
adcl
mov
fisubrl
inc
or
out
mov
mov
and
aad
cs
popl
loopne
inc
mov
xor
mov
sub
sbbl
fadds
xor
fucomip
or
jae
mov
data16
add
call
insb
or
add
mov
sarb
pop
add
nop
test
mov
ffreep
add
xor
mov
ljmp
fisttpll
xor
repz
jg
cmpsb
bound
add
adc
adc
aaa
dec
pop
popf
mov
out
or
int
iret
dec
sti
mov
mov
mov
xchg
jg
or
add
adc
sbb
addr16
ljmp
inc
adc
js
into
pop
sbb
clc
jo
add
ljmp
mov
mov
xor
imul
sti
add
mov
std
jg
int
clc
incl
mov
dec
inc
sahf
or
sub
decl
and
cmpsl
shrb
add
das
add
dec
adc
call
jo
rclb
xor
aaa
test
sub
dec
mov
jecxz
dec
testb
and
cmp
and
mov
sub
imul
pop
sar
add
xorl
notb
mov
mov
outsl
cs
jno
lods
test
inc
pushl
add
add
cltd
gs
rorl
add
pop
aam
hlt
popf
addr16
mov
sub
ljmp
xchg
scas
mov
cwtl
dec
mov
sub
lcall
or
or
repnz
outsl
test
xor
gs
jae
test
sbb
ret
mov
mov
jo
loop
add
pop
fildl
lods
add
scas
add
incl
fcmovnbe
pushf
loope
adc
std
and
add
jg
xchg
outsb
shll
inc
inc
sti
mov
add
lahf
pusha
test
mov
adc
jg
xchg
test
jno
inc
fisubrl
jge
aam
and
mov
ss
cmc
push
xor
test
mov
loop
outsb
pop
add
les
das
rcrb
ret
mov
fists
pop
sub
xchg
inc
mov
ss
or
push
pusha
faddl
test
sbb
out
rcr
ds
js
cmp
iret
fs
mov
pop
push
xor
jbe
jnp
dec
ja
mov
dec
pop
and
jg
call
sbb
cmp
bound
les
lret
add
into
jb
shll
xor
into
cmpsb
mov
sarb
and
notb
popl
mov
test
je
loopne
pop
or
jge
pop
xchg
sti
dec
jg
aad
aad
enter
pop
pop
loope
push
pop
sub
loop
js
add
mov
pusha
add
ret
into
bound
divl
setg
push
icebp
lds
in
hlt
jmp
dec
lahf
pop
mov
in
inc
lcall
mov
cmpsb
add
pop
mov
loopne
add
xor
outsl
popf
dec
in
ss
stos
dec
loopne
add
cld
and
add
mov
ljmp
mov
and
cmp
jne
mov
ljmp
call
mov
mov
call
and
lock
push
add
xchg
pop
in
sti
pop
fildll
mov
pop
jle
stos
pop
fildll
mov
aaa
js
mov
or
adc
std
inc
loop
mov
loopne
sub
mov
loope
cwtl
inc
pop
jnp
sbb
sbb
jno
stos
out
outsl
mov
adc
fcomps
shr
les
stc
testb
pop
jge
inc
mov
jae
push
or
lret
adcb
clc
ljmp
das
dec
jp
arpl
mov
xor
jecxz
dec
jg
mov
jg
leave
test
sub
test
pusha
loop
inc
das
icebp
mov
iret
cmp
pop
clc
pop
sub
mov
insl
add
notl
add
out
pop
mov
pop
outsl
shlb
sbb
pop
adc
pop
movsb
in
pop
int3
sbb
clc
pushf
clc
jg
mov
fcompl
pop
mov
add
or
insl
fucom
dec
and
repz
arpl
push
and
inc
push
and
jmp
gs
testb
cli
out
pop
jge
js
loopne
jmp
xchg
shrl
xchg
or
add
xor
data16
lret
cltd
sub
mov
dec
and
push
pushf
call
ja
mov
pop
jo
xchg
mov
or
jbe
adc
or
insl
push
jo
daa
out
adcl
jmp
jg
sbbb
movsl
loopne
adc
dec
mov
mov
jg
ds
or
cmp
xchg
iret
rorb
xchg
mov
in
adc
ret
test
andb
xor
xor
fmull
shll
mov
add
xor
adc
and
pop
mov
push
out
mov
iret
lret
lods
aad
test
cmp
adc
cli
sub
daa
mov
imul
push
add
jae
mov
jno
jns
mov
push
out
add
test
lods
mov
jmp
sub
mov
push
inc
mov
ficompl
jp
lret
imul
or
scas
gs
jnp
fnstenv
call
nop
inc
pop
stos
mov
test
mov
jo
add
pop
js
pop
jg
mov
and
imul
lret
inc
dec
push
stos
into
mov
jo
in
adc
jl
or
jmp
push
fidivrs
movsb
enter
lret
movsl
out
lods
cmp
fstl
sub
ret
xchg
push
sbb
pusha
add
or
cmp
icebp
lods
push
dec
fs
add
sbb
inc
jb
and
shlb
stc
sbb
mov
add
push
dec
ja
ss
mov
call
scas
lds
lret
js
clflush
inc
mov
fsubp
xchg
movsl
jmp
bound
and
jmp
jg
aaa
cld
mov
adc
push
iret
xor
ss
mov
jmp
mov
roll
mov
adc
cmp
inc
jp
loope
sub
mov
and
fiaddl
dec
js
fstp
lcall
imul
imul
out
lods
dec
mov
and
es
test
dec
out
gs
stos
jnp
clc
mov
fcomip
fisttpl
or
jnp
add
inc
cmp
lahf
scas
cwtl
insl
and
jg
and
dec
ret
push
hlt
and
sahf
mov
sti
decl
push
mov
test
push
xor
test
adcl
cmpsb
enter
or
inc
push
mov
pop
loope
in
aaa
sbb
jb
rcrl
cltd
add
lock
jecxz
push
xor
xchg
call
jp
pop
fstpt
repnz
inc
das
xor
jmp
and
lock
fdivrl
lods
repz
mov
ljmp
xchg
out
lock
arpl
adc
fnsave
data16
test
test
adc
ljmp
mov
jo
inc
xorb
mov
test
push
and
pusha
and
jl
cmp
loopne
addr16
and
or
ret
jg
lret
and
push
sbb
push
loop
call
sbb
pop
mov
pusha
hlt
and
push
cmp
xchg
add
or
push
or
add
mov
mov
xor
and
daa
enter
push
clc
ja
sub
outsb
inc
inc
fisubrs
push
scas
shrl
sub
mov
sbb
test
shl
pop
addl
out
push
dec
les
xchg
js
rolb
xchg
ret
dec
push
out
dec
enter
repnz
add
out
or
stos
ljmp
push
adc
sub
int
add
dec
inc
and
mov
cmpb
popf
and
jge
into
adc
ficomps
adc
add
or
cmp
test
mov
sbb
lods
adc
adc
pop
xor
shrl
iret
adc
or
sub
xor
sbb
mov
add
dec
add
add
cli
adc
cmpsl
pop
inc
mov
sbb
pusha
loope
sbb
lahf
inc
cmp
adc
in
mov
cmp
je
xor
sbb
out
mov
arpl
mov
mov
mov
imul
xor
fsts
sbb
mov
jmp
insb
test
movsb
mov
cmp
push
clc
test
inc
scas
movsl
sarl
or
fnstsw
and
bound
inc
lods
xchg
flds
adc
movsl
mov
aam
sbb
and
push
sahf
jp
or
sub
test
icebp
pusha
xor
inc
int3
dec
aas
inc
push
clc
cmpsl
pop
jl
cmpb
sbb
addb
jecxz
ret
mov
xchg
mov
mov
xor
jne
add
stos
aaa
stos
and
push
cmp
rcrl
cwtl
add
pop
adc
xor
ret
pop
mov
dec
jg
dec
inc
add
adc
xchg
test
cmp
or
int
mov
rorb
pop
sbb
loopne
shrb
add
add
popf
repnz
repnz
dec
mov
aad
fldt
mov
stc
adc
mov
add
clc
dec
aaa
sub
mov
push
les
insb
push
add
push
push
add
mov
dec
shl
clc
ret
stos
mov
aad
inc
cmp
addl
mov
mov
sbb
add
sbb
add
ret
xchg
sub
inc
out
pusha
push
dec
test
push
adc
pusha
ss
mov
xchg
or
xchg
inc
rolb
andl
adc
cld
sbb
jecxz
lret
sub
jmp
insl
jmp
sarl
pusha
and
mov
sbbb
je
and
testb
ja
xchg
adc
jg
insb
mov
mov
arpl
sbb
push
add
xchg
sti
mov
movsl
ss
movsl
outsl
sbb
std
in
dec
andb
and
mov
pusha
dec
xor
inc
mov
add
jecxz
push
mov
cmp
and
in
ficoms
mov
shl
sub
push
popa
dec
repnz
loopne
mov
add
mov
or
lcall
mov
mov
lret
or
cmc
push
outsb
xor
lea
mov
jmp
push
adc
lds
adc
shrl
cmpl
push
in
xchg
push
lahf
js
push
push
sub
push
sbb
push
add
fldt
jnp
test
out
mov
std
pop
pop
pop
inc
sbb
ds
add
add
pop
loop
pop
movsl
test
rorl
xor
ss
rep
nop
and
pop
or
insb
dec
mov
mov
adc
cmc
sbb
lea
leave
add
test
dec
inc
fildll
or
dec
fs
sbb
setnp
sub
xchg
cmpsb
sub
mov
lcall
push
leave
mov
insb
shl
sbbb
sub
ja
mov
mov
loop
fbstp
rclb
test
sbb
cmp
cmp
mov
or
lret
mov
pop
lcall
adc
jbe
mov
fwait
pop
mov
jbe
xchg
cmp
xor
pop
addr16
out
das
mov
mov
inc
jge
stc
or
adc
mov
mov
sbb
sti
cli
inc
adc
stos
sub
es
and
sub
inc
lock
lea
sbb
das
push
or
mov
sbb
call
jg
pop
lods
insb
add
aaa
jb
cmp
sub
icebp
addr16
lea
int3
xchg
inc
out
filds
mov
lods
add
and
push
dec
sbb
outsl
xchg
jp
cmc
imul
or
mov
jp
jp
push
outsb
and
ljmp
loop
leave
sub
inc
adc
adc
cltd
and
and
lods
mov
call
inc
cmp
clc
pop
sbb
pop
sahf
sarl
out
cmp
dec
mov
and
push
inc
or
faddp
test
fmull
enter
xor
testl
shlb
sub
pop
ret
sub
sarl
inc
hlt
add
les
cli
fnstsw
cmp
mov
ja
lcall
stos
sub
cmp
push
jecxz
outsb
cmp
pop
add
mov
rcll
push
xchg
lahf
sbb
or
xchg
loop
sbb
mov
shlb
sbb
rol
xchg
sahf
shrl
xor
mov
mov
cmpsb
lock
sub
movsl
inc
inc
scas
pop
cmpsb
pcmpeqw
dec
mov
or
sbb
das
add
dec
shr
jo
les
or
push
mov
fs
lret
lock
sbb
sbb
es
adc
aam
scas
aad
ds
fucomip
std
out
stos
jle
xor
or
lock
out
pop
adc
sbb
loop
dec
mov
sub
cli
pop
aam
add
mov
xchg
push
cs
mov
or
xor
inc
call
inc
add
xchg
or
lods
push
mov
sub
roll
mov
shrb
and
mov
adc
and
or
xchg
popf
jecxz
or
dec
insb
add
pop
mov
and
dec
cmc
int3
or
sub
shlb
xor
xor
mov
stos
cmp
and
add
or
leave
mov
cmp
loope
mov
and
daa
pop
push
aaa
pop
jo
mov
lcall
cmpb
push
dec
mov
dec
adc
mov
adc
test
and
lock
dec
push
dec
pop
daa
add
mov
leave
loopne
stos
cli
incl
sbbb
test
push
jb
arpl
aas
cmp
shrb
push
and
xor
incl
or
and
mov
data16
pop
nop
ret
clc
mov
xchg
fldl
jb
mov
adc
and
sub
push
stos
pop
or
inc
andl
sub
pop
and
add
push
out
mov
or
cld
cmp
aas
xchg
push
mov
testl
dec
shll
stc
cli
decl
pop
aas
insl
or
dec
xor
into
mov
or
aam
adc
das
fldl
cmc
mov
mov
fwait
add
pop
dec
pop
out
pop
imul
sbb
adc
jae
dec
sub
sub
mov
jg
pop
pop
cmpsl
aam
bound
add
dec
cmp
cmpsb
movsb
sti
mov
dec
or
mov
jb
rcrl
fisubl
loope
and
xor
adc
in
add
mov
mov
push
pop
pusha
sbbl
adc
std
test
sbb
mov
sbb
pop
repz
lea
or
push
ffreep
xor
sti
movsb
inc
cmp
incl
jg
jnp
adc
jns
cmp
jmp
leave
mov
ss
insb
and
pushf
xor
adc
cmp
js
xchg
xchg
push
push
into
add
inc
loope
ljmp
shlb
inc
xchg
push
jmp
xlat
shrb
popf
push
shrb
cmp
jl
lods
push
lds
inc
inc
mov
mov
scas
repz
daa
testb
inc
mov
daa
push
cwtl
sbb
xor
push
clc
ss
les
inc
lock
dec
or
cwtl
insl
add
jg
inc
and
pop
outsl
mov
ficompl
outsl
mov
and
push
pushf
insb
ljmp
pop
add
dec
dec
jae
inc
clc
sbb
push
jle
dec
pop
add
cwtl
mov
cli
fistpll
gs
inc
scas
jmp
xor
jg
ja
cltd
push
fstl
add
inc
mov
fildll
cmpsb
fistpll
mov
mov
andb
and
imul
jecxz
lret
pop
inc
mov
sbb
adc
fisttps
dec
xor
jbe
aaa
mov
xor
ret
loop
and
loop
add
jo
divb
push
pop
inc
insl
lods
outsl
sbb
pop
inc
adc
push
dec
cmp
movsl
and
test
nop
xchg
pop
push
insb
nop
jo
and
push
sub
mov
jmp
jl
imulb
push
imul
jle
gs
jg
iret
std
mov
bound
and
sub
ljmp
cmpsl
fwait
add
adc
cld
push
xor
xchg
fcomp
fwait
inc
outsl
std
incl
mov
mov
jle
mov
repz
dec
push
lods
js
xchg
pop
xchg
jg
es
enter
mov
jb
outsb
cld
mov
dec
xchg
pusha
enter
lods
enter
jne
insl
push
popa
leave
mov
sub
mov
jne
or
lret
fs
pop
pop
mov
jl
push
dec
outsl
jmp
or
aas
xchg
loopne
push
mov
arpl
sub
cli
push
inc
loopne
sbb
xor
mov
insb
push
orb
scas
es
movb
test
das
rol
inc
dec
in
adc
mov
push
fcmovb
add
clc
pushl
lock
fcmovne
pop
mov
mov
jne
fiaddl
sbb
inc
dec
imul
jge
movsl
push
lods
filds
sbb
jge
inc
adcl
jle
mov
outsl
js
test
sbb
enter
testb
adc
cmpsl
mov
mov
adc
push
ljmp
jne
cmp
xor
js
mov
mov
adc
rcrb
mov
push
xchg
inc
cli
fisubrs
jecxz
pop
mov
pop
call
sub
xor
adc
cmpsb
and
inc
or
push
xchg
pop
mov
je
mov
jmp
out
test
mov
sbb
rolb
pop
rol
xor
adc
or
cmc
stos
xor
aam
push
dec
mov
cmp
sahf
loope
jg
push
lea
mov
xor
or
inc
inc
stc
or
xor
pop
pop
pusha
lods
les
pop
xor
or
out
mov
repnz
scas
or
jno
rclb
adc
or
add
adc
in
call
imul
xchg
mov
and
mov
cwtl
imul
add
push
fstps
adc
insb
mov
scas
mov
shlb
mov
notb
test
push
cmpsb
pop
xor
push
mov
outsb
std
je
pop
mov
jg
daa
add
stos
push
or
dec
sahf
fbld
pushl
popa
adc
in
mov
loopne
outsl
push
hlt
enter
sbb
es
xchg
leave
xchg
aaa
sbb
mov
std
jge
lds
andb
nop
cmp
ds
mov
jl
icebp
movsb
bound
or
dec
enter
scas
fistpll
jecxz
test
loopne
sub
mov
pop
dec
aaa
cmp
clc
sub
mov
jecxz
incl
or
xchg
lock
sub
and
pop
stos
js
push
bound
jle
xchg
push
or
pop
in
pop
dec
dec
lret
jns
pop
mov
xor
push
nopl
lea
loope
or
adc
pop
mov
fsubrp
dec
popa
mov
mov
jg
xadd
cwtl
inc
in
add
jno
test
andl
aas
sub
sbbb
aad
and
mov
xchg
ja
sub
sbb
mov
sbb
out
jbe
rorb
lahf
cli
xchg
inc
or
dec
gs
sbb
cld
jl
xchg
adc
push
sbb
ja
pop
mov
cmp
xchg
or
and
or
ret
adcb
cmp
cmpb
jmp
daa
jmp
popl
js
mov
pusha
inc
mov
cmp
xchg
jg
sub
cmpsl
test
test
pop
shr
or
cltd
decl
pushw
jge
add
jl
jo
mov
inc
repnz
out
shrl
sarb
into
pop
push
push
or
lock
pushl
fstpt
xchg
jo
out
pusha
and
test
add
mov
clc
outsl
clc
cmp
bound
xchg
sbb
mov
fistps
rcll
pop
pop
leave
xor
push
popf
cs
dec
lahf
xchg
call
and
ret
cld
inc
mov
mov
out
push
or
test
ret
mov
add
js
fisubrl
xor
jbe
std
xchg
jmp
push
aas
pop
push
xchg
pop
lds
es
pop
push
lret
lea
dec
rolb
mov
mov
lock
scas
inc
push
xor
icebp
movsl
mov
or
clc
outsl
add
push
popa
shl
inc
je
cs
mov
stos
sbb
xlat
fs
jle
mov
and
shll
shl
mov
mov
xchg
mov
pop
std
pop
faddl
inc
lahf
cli
ret
ret
cli
mov
pop
mov
or
add
mov
fwait
jp
pop
cmp
mov
stos
xor
imul
loop
aad
or
jmp
fdivrs
inc
add
popl
in
push
add
cli
lods
stc
pushl
shrl
std
dec
test
pop
es
lahf
sahf
sbb
fildll
mov
push
pop
lea
or
std
in
outsl
in
pushf
add
pushl
xor
das
icebp
mov
inc
jge
xor
dec
sahf
inc
lcall
inc
out
sbb
add
outsl
adc
mov
adc
aas
inc
lea
insb
pop
lret
leave
push
adc
xchg
fstpt
mov
hlt
fildll
jge
rclb
jae
icebp
xor
dec
test
mov
push
mov
lods
xchg
andb
xchg
and
int
std
filds
and
outsb
push
inc
xchg
xchg
mov
fwait
xchg
mov
push
in
add
mov
inc
and
mov
xor
outsb
sbb
mov
dec
dec
in
js
subb
ds
push
pop
test
cmp
lock
sub
xorl
pop
mov
and
or
in
jl
or
fcmovbe
cmc
mov
cmp
in
sbbb
xchg
mov
pop
push
aam
fisttps
nop
sbb
mov
in
mov
push
mov
stos
arpl
pop
jg
jecxz
add
iret
je
movsl
adc
mov
sbb
imul
lcall
cmc
movsb
mov
enter
and
xor
ljmp
adc
sub
push
mov
rol
mov
jnp
dec
xor
or
or
push
mov
clc
dec
out
insb
insl
adcl
icebp
mov
das
mov
adc
adc
outsb
or
pop
lret
sub
lds
outsl
fldt
fsubl
and
js
shrl
cltd
popf
add
push
mov
das
stos
pop
xor
lahf
andb
mov
inc
cmp
push
mov
sub
add
adc
std
dec
rcll
mov
test
mov
popf
push
jae
inc
jecxz
mov
lock
fs
jl
das
mov
inc
or
ficompl
add
push
ficompl
or
or
movsb
pop
adc
inc
movsl
popa
and
xchg
pop
test
jo
ljmp
sbb
xchg
loop
sbb
dec
xor
lds
aas
inc
lcall
add
push
sbb
sbb
es
sub
add
xor
dec
push
push
dec
push
sbb
cmp
int
or
add
or
push
sub
or
aas
add
sarl
pop
lods
stos
cwtl
sbb
lock
aad
or
sbbb
js
minps
sub
out
pusha
sub
mov
pop
pop
aaa
pop
adc
xlat
cmp
cmpb
mov
xor
push
and
stos
push
repnz
in
insl
mov
and
lahf
or
mov
dec
sub
jae
faddl
add
adc
in
inc
xor
add
push
adc
sub
push
mov
insl
push
in
xchg
pusha
inc
push
std
aas
aam
js
pop
mov
or
xorl
push
jecxz
ljmp
sub
stos
xchg
add
mov
int
rclb
mov
mov
push
movsb
daa
xchg
les
daa
loope
adc
mov
pop
test
push
ds
loope
mov
jo
and
adc
add
adc
fwait
mov
cli
subb
iret
inc
loopne
cmp
push
daa
or
in
lret
loope
jge
and
repz
sarb
adc
flds
testl
or
int
and
mov
adc
adc
lds
adc
mov
pop
push
out
and
sub
das
aad
sub
fwait
test
mov
in
jne
scas
inc
sub
add
test
or
je
jbe
rol
push
fs
and
dec
and
mov
pop
mov
lods
aam
pop
and
lcall
dec
mov
adc
mov
inc
mov
or
xor
into
jne
sbb
xchg
mov
xchg
push
mov
loopne
shll
or
loop
dec
add
clc
lret
push
inc
inc
sub
adc
insl
mov
popa
or
ffreep
cld
pop
adc
push
inc
cmp
ja
loopne
xorl
pop
xor
mov
sbb
mov
sahf
mov
clc
sub
mov
dec
call
ljmp
push
fs
fcmovu
clc
fmuls
icebp
jae
xor
fldenv
adc
add
test
and
cmp
icebp
xchg
ss
or
jp
push
cmp
add
popf
adc
adc
std
adc
out
std
pop
test
clc
or
mov
lods
mov
in
jne
adc
imul
xor
or
push
mov
add
push
in
gs
push
lea
loopne
and
or
mov
ljmp
add
data16
iret
inc
pop
jo
fisubl
sub
jae
push
dec
lock
aad
or
cmp
aad
mov
push
in
les
and
fnsetpm(287
sbbb
stc
adcl
fcoml
ds
jl
dec
repz
or
and
mov
inc
adc
push
fbld
inc
aam
jmp
nop
loope
iret
mov
loopne
mov
adc
pop
loope
inc
pop
outsl
push
jge
and
mov
jg
mov
js
push
clc
inc
cld
negb
mov
call
xchg
out
call
pop
push
xchg
dec
add
dec
out
test
fists
call
add
fsub
fisubrs
and
and
inc
sti
push
out
mov
push
jne
mov
sub
mov
fisttps
pop
xor
stos
pop
loop
xchg
mov
arpl
daa
aas
adc
in
inc
fmul
js
adc
pop
adc
pop
clc
sub
cmpsl
das
sub
loope
loopne
sbb
or
dec
jo
pusha
mov
out
stos
pop
ffreep
cmp
lea
xchg
ret
outsl
dec
repz
popa
orb
test
idivb
andl
ds
xor
mov
movsl
jbe
aaa
cmp
pop
cmpsb
and
subb
add
sub
cmp
or
insb
push
in
fildl
das
mov
in
inc
into
push
or
in
pushl
pop
jmp
ss
jle
jae
inc
shr
pop
jecxz
xchg
adc
sbb
loope
add
in
lods
into
push
add
add
pop
in
js
cli
insl
imul
jb
ret
das
rolb
xchg
sbb
sub
fsubl
lret
icebp
in
push
mov
add
rclb
xchg
xlat
and
push
clc
out
andb
lahf
sti
or
or
mov
mov
jg
mov
push
movsb
mov
call
inc
pusha
cmp
bound
jg
xor
mov
push
iret
adc
scas
sahf
hlt
imul
testl
stc
inc
adc
mov
cmp
lcall
ror
decb
xor
jo
fidivrl
push
jecxz
incl
test
xchg
mov
adc
ds
int3
enter
sbb
push
cmc
pop
or
popf
sub
pop
mov
pop
and
icebp
repz
dec
scas
cmc
and
bound
mov
pop
fistpll
in
das
mov
sar
cmp
mov
ret
push
cmc
fwait
cmp
in
fs
and
jmp
mov
in
nop
fdecstp
movsb
pushf
mov
jg
cs
dec
lock
in
mov
inc
repz
push
test
adcl
and
decl
jle
mov
or
andl
mov
pop
fdivs
inc
pop
addr16
or
je
xor
fisttps
cmpsl
mov
into
jno
or
ja
mov
shl
push
call
aaa
adc
cmpsb
mov
lret
xchg
sbb
filds
mov
stos
and
or
sub
pusha
inc
out
or
ret
rolb
cwtl
aad
pop
or
fildll
mov
mov
xor
lcall
cli
popa
add
lret
out
mov
and
mov
sbb
pop
lds
ja
insb
inc
mov
dec
data16
pop
clc
jmp
add
enter
fsubrl
ds
or
pop
loopne
push
pop
jl
idivl
fldl
sub
dec
frstor
mov
imul
xor
mov
out
add
xor
jbe
lds
mov
bound
fildll
sub
jl
jmp
push
fstpt
dec
mov
aam
clc
mov
fisttpll
scas
dec
jg
mov
lods
mov
xchg
fstl
mov
and
daa
xchg
je
or
cs
sbb
push
cmp
inc
jno
pop
sub
in
mov
add
pop
push
xor
add
jb
int
leave
outsl
add
hlt
xor
pop
jg
adc
xor
leave
and
loope
std
outsl
je
test
aam
das
aas
dec
int
jno
dec
cmc
insl
lahf
pop
imul
leave
inc
and
jae
fwait
mov
push
fcomps
sub
xchg
and
and
repz
cmp
test
sti
push
dec
call
pop
cmc
aaa
loope
inc
jbe,pn
aad
mov
dec
jg
mov
inc
xchg
mov
mov
fcmovnbe
jns
xor
lods
adc
pop
jmp
add
xchg
loop
dec
mov
fists
or
out
xchg
push
xchg
dec
and
mov
and
push
mov
sbb
arpl
outsl
out
or
cltd
or
jno
mov
jl
pop
mov
mov
cltd
loope
xor
push
int
rcll
xchg
sbb
in
insl
add
bound
aad
lret
mov
push
adc
inc
inc
mov
ret
xchg
addr16
inc
add
sub
scas
mov
ljmp
pushf
es
je
in
dec
push
pop
test
pop
rcrl
push
testb
jnp
lods
add
das
mov
mov
add
outsl
test
add
je
int
push
std
push
cld
mov
ja
daa
sbb
outsl
mov
fwait
loope
mov
adc
push
test
mov
xchg
test
popa
mov
adc
mov
outsb
jp
adc
lock
cmp
jnp
mov
repz
pop
lds
insb
shrb
pop
and
xchg
or
imul
daa
and
rolb
sbbb
movl
cmc
xor
inc
and
mov
mov
adc
das
mov
jns
sbb
inc
es
inc
aaa
aam
rorl
xor
add
and
jo
adc
cmpb
adc
pop
cmp
into
mov
sub
dec
dec
jns
cmp
or
call
xchg
add
insl
pop
inc
or
lock
mov
sub
cmpsb
cli
and
and
xchg
sub
adc
adc
pop
sub
mov
jmp
and
adc
mov
push
call
out
add
jge
dec
insl
adc
xor
add
inc
and
mov
xor
pop
and
or
add
sub
call
xor
in
adc
add
and
aam
mov
imul
inc
xchg
xchg
je
add
test
xchg
push
add
sub
inc
ds
pop
addr16
xchg
pusha
lock
push
xor
push
sbb
test
mov
ficomps
and
cmpsl
es
lock
lcall
mov
cmp
xor
ret
jg
adc
cli
loop
sbb
roll
popa
push
adc
sbb
cs
pop
lret
mov
cltd
sub
mov
sti
outsl
fnstenv
out
jecxz
cli
dec
mov
aaa
push
shl
fcoml
std
mov
mov
imul
pop
rcrl
subl
push
ret
or
in
mov
shr
mov
add
add
and
movsb
adc
dec
mov
inc
jno
imul
add
cmp
sub
mov
sub
inc
cwtl
push
mov
mov
addr16
xchg
out
sbb
dec
movsl
pop
jo
movsl
cli
sbb
std
dec
ja
add
enter
push
push
test
inc
call
call
cs
call
pushf
cli
or
or
bound
push
gs
ja
shrb
mov
call
sub
pop
or
int3
in
inc
roll
sub
cmpb
adc
sbb
jp
sbb
fdivr
imul
inc
lcall
bnd
aaa
add
jne
mov
movb
repz
dec
insb
or
ret
aam
xor
subl
mov
dec
jo
add
movsb
xchg
jbe
das
hlt
sub
cmp
xchg
mov
mov
add
insl
dec
mov
data16
js
lock
or
mov
es
jb
fsubrl
pushf
loopne
mov
sub
mov
fcomp
pop
sbb
pop
jns
mov
mov
pop
cmp
xor
rsm
ds
or
and
inc
jl
inc
or
jmp
fwait
mov
cs
js
mov
aad
mov
enter
jo
shlb
loop
xchg
pop
add
icebp
pop
sbb
fists
inc
stc
or
or
repnz
pop
clc
pop
out
fildll
add
adc
sub
push
add
inc
sub
dec
scas
mov
dec
sbb
shl
adc
rol
dec
xchg
or
sub
sub
clc
dec
inc
mov
outsb
mov
inc
add
test
sub
shlb
sbb
inc
mov
inc
mov
inc
sbb
popa
mov
xchg
cmp
add
dec
lret
rclb
scas
fucom
cmp
xor
mov
test
cmpl
add
and
ret
call
fs
mov
addb
dec
push
stc
mulb
mov
sub
inc
dec
out
bound
add
dec
mov
and
popa
add
push
orl
inc
in
add
xorb
rclb
int
cmpsl
addb
xor
gs
in
cmp
dec
push
mov
mov
clc
push
mov
dec
icebp
cmp
pop
int
fwait
cltd
and
scas
dec
sbb
adc
push
in
out
sub
enter
fcompl
adc
or
mov
out
jae
xchg
out
mov
cli
loope
outsb
mov
and
pop
push
sbb
mov
adc
in
jo
mov
sub
add
stos
scas
popl
and
jb
ja
fsub
xchg
es
mov
loop
ljmp
push
mov
loopne
leave
ljmp
push
sti
push
pop
cwtl
adc
popa
rolb
xchg
jg
jl
cs
movsb
push
lahf
test
cltd
and
imul
in
pop
cli
call
ja
cmp
leave
cmp
aad
shrb
fmull
ret
and
nop
pop
ljmp
push
incb
fistl
inc
push
or
stos
fists
nop
push
or
adc
es
and
and
mov
pop
sub
int
js
mov
or
mov
lds
pop
jg
jl
jb
aas
enter
mov
mov
pop
xchg
cmp
mov
and
hlt
sbb
lret
les
push
icebp
jp
inc
mov
xchg
test
mov
cltd
or
in
sbb
sub
cwtl
or
sbb
lcall
in
mov
jle
xlat
adc
jecxz
pusha
lcall
lret
ljmp
add
pop
xlat
fists
add
std
lock
dec
loope
inc
adc
stc
addb
cmc
mov
or
jg
or
inc
jmp
jns
xor
mov
aad
mov
test
loope
decl
mov
orl
cmp
pop
mov
repnz
mov
stos
xlat
jnp
mov
dec
push
lock
loope
nop
ret
jbe
stc
dec
das
rclb
icebp
jmp
pop
pushf
sub
incb
push
xor
xor
xchg
jb
lock
movsl
cmp
test
xor
ljmp
jb
neg
mov
in
adc
dec
adcb
push
gs
cmp
movsl
cmc
push
pop
incb
xchg
loop
psrlq
fsub
pushf
dec
cmpxchg
mov
jecxz
push
xchg
add
add
mov
dec
shl
sub
lds
jl
lret
mov
or
push
bound
jl
testb
sub
loope
sub
mov
push
push
out
dec
mov
test
inc
rcll
insb
add
push
mov
or
fbld
sbb
mov
push
push
xchg
subl
add
lods
stos
fwait
mov
clc
fwait
and
fsubrs
xor
out
cmp
fldenv
sub
icebp
movsb
lret
in
aam
fldl
cmp
add
pop
xor
push
outsb
push
fsubs
xor
in
das
fdivl
shrl
shl
sbb
inc
les
icebp
pop
push
add
push
fstps
add
sbb
enter
and
push
or
jo
pushf
pop
push
xchg
mov
inc
jns
pop
js
rcrb
mov
and
outsb
xchg
adc
cmp
ret
add
loop
insl
mov
push
inc
cltd
in
mov
mov
mov
js
dec
cld
push
pop
pop
popa
push
xchg
add
gs
das
lahf
shlb
test
adc
cmp
call
add
add
test
shl
fs
sbbl
push
adc
mov
lds
push
cs
clc
mov
xchg
das
adc
sub
push
js
hlt
cmp
pop
cmp
test
dec
rolb
inc
in
sahf
sub
testb
in
cmp
mov
inc
std
pop
and
pop
pop
les
inc
roll
jns
mov
js
iret
jo
xorl
or
stos
jb
loope
fcmovbe
sahf
gs
push
mov
jbe
mov
pusha
ret
in
in
enter
cltd
adc
mulb
push
dec
and
xor
mov
fnsave
jmp
mov
pop
sub
and
enter
xchg
jmp
ja
xchg
cli
jle
adc
mov
mov
cwtl
int3
in
jg
fists
push
xchg
rolb
push
adc
fxch
cmp
les
icebp
mov
add
cmp
and
push
repnz
dec
or
add
or
mov
stc
jae
jb
cmpsb
mov
pop
pop
in
ss
mov
repnz
fildl
fbld
mov
sbb
mov
cmpsl
sbb
ret
jbe
bound
aaa
mov
insb
pop
adc
aas
inc
das
xchg
xchg
mov
pop
mov
jge
adc
outsl
pop
adc
int3
push
dec
pop
and
push
sub
aas
sub
loop
sarb
movsl
sub
sub
addl
test
fs
.byte
.byte
dec
inc
.byte
in
dec
jle
push
mov
or
dec
mov
std
or
ret
pop
pop
ret
pop
push
insl
fbstp
ret
adc
xor
leave
ret
ret
add
pop
ret
inc
adc
mov
add
mov
pop
add
pushl
nop
nop
and
mov
adc
inc
and
fsin
mov
addb
sbb
add
adc
sbb
add
pop
jnp
sti
testl
and
dec
add
inc
push
pop
mov
push
sbb
in
scas
imul
add
add
xorb
sub
or
add
push
cmp
and
inc
pop
sbbb
inc
cmp
and
mov
inc
cmp
and
mov
add
jge
and
popa
and
inc
or
das
add
and
jne
imul
int
mov
int3
lea
xor
mov
fildl
lahf
pushf
data16
pop
cmp
imul
xor
cmp
insb
scas
inc
cmpsl
daa
jne
sbb
mov
sub
outsb
outsb
popf
clc
and
push
push
adcl
leave
stos
xor
add
sub
cmpsb
add
out
jmp
dec
ja
inc
add
add
add
cmp
add
adc
adc
mov
add
jo
add
add
nop
add
adc
inc
daa
cmp
xor
push
stos
pop
add
jb
stc
sbb
daa
adc
add
add
roll
or
dec
mov
fistpll
sub
lahf
pop
add
add
add
mov
addr16
add
mov
add
or
lcall
push
mov
call
inc
ret
popl
lcall
lea
or
into
mov
icebp
add
shrb
and
sub
ret
cmp
aaa
fistpll
jg
cwtl
jbe
mov
push
inc
addl
cmc
xchg
add
push
add
jecxz
sti
fucomip
mov
sbb
push
add
in
imulb
add
push
add
call
jp
sti
sbb
adc
and
insl
xchg
adc
pop
mov
stc
add
mov
test
in
idivb
push
or
add
add
sub
jle
loope
add
or
mov
mov
sahf
cmp
jno
xchg
push
lahf
in
jmp
roll
xor
xorl
repnz
mov
xchg
aaa
insb
lds
push
xor
mov
mov
mov
inc
adcl
xchg
mov
sub
mov
test
movsb
push
add
and
and
add
mov
ret
mov
sbb
fcomps
call
add
mov
cmp
or
test
push
jg
outsb
fists
adc
or
mov
mov
outsl
cld
lcall
int3
outsb
ret
ljmp
pop
jnp
sub
xlat
inc
js
in
fisttpl
ror
cmp
adc
add
mov
lock
mov
sbbb
popa
imul
cmp
iret
adc
push
inc
int3
cld
mov
pop
pop
sti
inc
ss
cmp
mov
add
inc
out
or
das
cld
adc
lock
daa
or
shl
outsl
test
inc
push
and
push
movsl
and
add
add
je
testb
loopne
loop
in
sti
pusha
adc
push
into
cwtl
or
xacquire
fdivr
jg
je
int3
add
enter
push
jl
fildll
pop
enter
sbb
enter
or
lock
iret
cmp
push
jg
cld
jb
xor
jae
adc
or
or
push
cmp
out
clc
outsl
aaa
mov
jne
adcl
rcr
add
add
dec
mov
add
push
mov
sbb
and
test
and
out
dec
or
pop
jle
cmp
add
es
jno
test
test
xor
pop
pop
imul
pop
inc
inc
inc
imul
push
ss
call
jno
jmp
add
inc
add
ret
push
jbe
daa
adc
rolb
in
sti
test
and
dec
or
ljmp
dec
sar
adc
cmpsl
bnd
adc
add
sub
in
or
imul
pop
outsb
pushl
mov
test
add
addr16
and
mov
dec
jno
outsb
add
aas
mov
inc
adc
incl
add
sub
neg
sub
pop
mov
movsb
or
pop
fs
push
into
cmp
mov
lahf
stos
add
or
dec
push
sbb
or
dec
xchg
push
and
jae
pop
push
add
rorl
cmp
repz
adc
mov
add
add
pop
mov
xor
jmp
outsb
mov
adc
popf
mov
mov
mov
test
pop
sub
mov
in
sub
scas
arpl
pop
rorl
int3
lret
sub
push
mov
add
pop
xor
mov
filds
rolb
das
push
sub
xor
fdivrs
lret
xchg
int
xlat
test
fdivrs
in
imul
imul
lock
push
xchg
cmpsb
es
cmp
pop
or
push
mov
pop
ret
jbe
shlb
pop
cmp
neg
popa
dec
pop
loope
lea
popf
sub
push
jo
in
mov
cmp
xchg
int
ficomps
call
mov
add
loopne
mov
add
fsubrs
xor
xchg
bound
ret
test
insb
inc
mov
cli
inc
adc
xor
fs
in
js
cld
xchg
ret
enter
mov
jne
pop
inc
je
inc
or
outsl
cld
sbb
xor
push
add
stos
add
mov
lds
cmp
push
xor
mov
sti
inc
mov
lock
xchg
idivl
pop
and
push
sti
push
pop
dec
or
xchg
or
mov
jo
call
cmp
ret
add
jecxz
mov
sub
call
inc
sub
sbb
fmuls
xor
sub
rorb
and
add
dec
movsl
and
outsl
cld
dec
mov
xchg
fcmovnu
or
mov
test
add
or
jns
xchg
lret
imul
jmp
xchg
mov
jge
push
iret
adc
push
imul
push
push
mov
adc
orl
lods
aaa
fildl
mov
xorb
pop
adc
sbb
shrl
insl
hlt
popf
js
push
loopne
inc
je
push
sti
dec
sbb
sbb
out
data16
sar
mov
movsb
and
aam
loope
mov
push
ja
outsl
add
mov
cmpsb
mov
or
and
mov
cld
or
mov
icebp
hlt
pop
mov
add
nop
and
lods
mov
or
test
and
jecxz
int3
pop
aaa
add
add
mov
jl
cmp
leave
in
add
jno
mov
mov
dec
xlat
sbb
jmp
lret
push
call
jns
push
jmp
add
sarb
lahf
or
test
ss
jp
in
mov
xchg
clc
imul
cmp
popa
jecxz
pop
cwtl
into
mov
mov
inc
into
les
ret
push
pop
fdivr
lahf
add
mov
inc
add
push
hlt
decl
xchg
jmp
jle
lds
mov
shl
mov
mov
lock
stos
into
sbb
dec
test
sbb
jb
push
adc
sahf
mov
xchg
dec
sub
ds
cmp
test
adcl
decl
push
rcrl
xor
adc
and
scas
shlb
dec
xor
or
mov
jl
out
aaa
pop
inc
lcall
orb
popa
dec
in
add
xchg
imul
add
lods
sbb
xor
sbb
lret
ret
cld
clc
stc
push
lcall
jle
iret
mov
fisubl
mov
mov
out
cld
cltd
cltd
ja
pop
addr16
xor
or
add
and
stos
pop
clc
xlat
outsb
pop
jb
insb
je
inc
iret
mov
lcall
xchg
insb
pop
sbb
or
dec
insb
mov
or
cwtl
cwtl
push
ret
sub
shl
jp
add
mov
and
add
dec
test
inc
adc
pop
or
rcrb
push
out
jl
add
call
mov
xchg
mov
ret
outsb
outsb
xlat
push
sub
leave
aaa
lock
or
loope
ss
jno
ljmp
jle
mov
loopne
mov
test
notb
push
add
jecxz
sub
sub
in
shlb
ss
aam
pop
fwait
cmpsb
dec
push
sbb
pcmpeqw
stc
or
jns
mov
int3
popa
rorb
int3
cmp
mov
jbe
popa
mov
mov
mov
sbb
addl
and
outsl
or
aas
mov
mov
inc
cmpsb
movzbl
outsb
imul
sbb
mov
in
out
test
test
flds
scas
std
inc
jnp
and
sbb
and
mov
sbb
add
sub
jno
xchg
addr16
push
adc
inc
loope
lods
mov
dec
lea
daa
lock
mov
addb
mov
pop
xor
add
xor
popf
pop
mov
add
and
cld
push
cltd
adc
call
stc
adc
in
gs
push
sbb
out
lods
inc
in
cld
push
mov
mov
idiv
das
fstl
clc
jbe
sub
data16
and
orl
inc
neg
and
movsl
pusha
push
dec
rcrl
jg
in
out
popf
leave
xchg
jo
inc
push
xor
imul
add
clc
lcall
sahf
cltd
sbb
xorl
jge
push
adc
stc
out
cmpsb
mov
dec
in
clc
inc
cmp
dec
dec
std
outsl
jge
fsubs
dec
push
inc
inc
sbb
fwait
push
adc
inc
push
sbb
mov
sbb
ds
adc
in
mov
ror
bound
xchg
mov
mov
mov
and
subl
mov
int
lock
cmp
add
movsl
mov
outsl
push
inc
adc
jp
and
popf
enter
pop
stos
repz
dec
mov
mov
lret
inc
xchg
sub
fbld
pop
fldl
call
cwtl
orl
lret
decl
fxch
aam
or
inc
nop
adcb
cld
cmp
hlt
inc
out
cli
in
mov
jae
mov
notl
les
cli
add
js
jae
xchg
cs
test
sub
cltd
adc
sbb
cmp
pop
lea
mov
lock
mov
and
dec
jl
insl
ret
pop
mov
pop
pop
ljmp
sbb
std
and
lds
repnz
shrl
and
cmp
das
std
pop
decl
movsb
imul
and
xor
pop
popf
call
lock
xor
cld
jne
test
inc
es
decl
adcb
loope
jecxz
cs
enter
test
rcll
sar
in
add
mov
roll
std
mov
add
roll
jo
cmp
push
imul
inc
sbb
mov
adc
bound
call
cmp
imul
test
shrb
pushf
jmp
enter
push
out
or
mov
cmp
push
insl
sti
adc
fs
and
inc
shlb
icebp
or
pop
sbb
push
test
mov
hlt
mov
out
std
xchg
pusha
dec
arpl
pop
pop
cld
fucomp
cli
aaa
cli
imul
jns
push
adc
popf
aad
ret
or
addr16
dec
jp
adc
insb
jmp
ljmp
mov
cmpl
sbb
mov
fstpt
add
cmp
and
cmp
dec
cmp
sbb
or
aam
out
jmp
test
mov
pusha
loopne
mov
add
cwtl
shlb
test
hlt
jl
push
jne
mov
inc
dec
add
pop
push
push
or
jns
loopne
aaa
je
dec
loop
dec
insb
aas
imul
imul
or
gs
dec
add
lods
push
and
lret
in
insb
sub
jle
movsb
addb
sbb
outsl
sbb
cmp
test
cltd
fnstenv
add
addr16
test
or
dec
loopne
inc
xchg
loopne
push
or
cld
jmp
cmp
push
outsl
ret
dec
dec
xchg
fadds
shlb
les
jle
pop
inc
bound
jo
pop
das
mov
out
mov
rolb
sub
js
jne
jo
mov
push
push
mov
sbbl
sti
push
clc
movsl
lea
cmp
add
out
inc
fldlg2
push
lret
xor
mov
or
cmc
cmc
imul
loope
inc
clc
jmp
sub
mov
out
outsl
add
inc
jns
cmp
cmp
xchg
fidivrs
inc
adc
push
sbb
jg
rorl
and
add
push
call
jg
cltd
dec
pop
add
mov
inc
neg
loope
in
in
arpl
jo
sub
testl
add
or
push
aad
pop
add
sahf
insl
and
adc
insl
sbb
adc
dec
shlb
mov
in
mov
addr16
push
movhps
mov
dec
cmp
in
aaa
fidivs
sub
push
add
or
add
scas
sbb
cmp
xchg
mov
push
or
fcmovbe
inc
sub
mov
dec
mov
decb
rep
repnz
sbb
std
fcompl
insb
add
pop
sub
repz
sbb
sbb
cmp
fwait
xorl
inc
js
je
pop
inc
ret
or
rcrb
jae
mov
dec
orb
fldt
add
ret
lods
mov
int3
aam
inc
fsub
adc
dec
outsl
jbe
scas
std
loope
imul
push
mov
adc
fdivl
xlat
not
mov
mov
and
inc
mul
pop
xchg
fldenv
std
clc
dec
jbe
stc
loope
jns
mov
inc
mov
add
sub
pop
popf
inc
ss
movb
lods
pushf
mov
aaa
sbb
mov
ss
out
add
push
adc
cld
mov
push
add
lret
xchg
jbe
jge
out
sbb
add
in
fnstcw
adc
inc
add
sbb
cwtl
pop
aaa
repnz
mov
adc
pop
mov
adc
xor
cli
pop
or
push
clc
pop
lea
stos
dec
leave
push
ds
imul
xor
cmp
ret
jae
mov
pop
push
rclb
dec
sbb
fcomip
dec
jo
in
lea
inc
cld
sub
xor
mull
dec
sub
aad
jge
iret
jo
in
aam
ret
je
mov
sahf
lods
lock
repz
xor
dec
push
outsb
out
mov
sub
sbb
pop
inc
or
or
lods
fs
and
cmp
addr16
ret
lea
pop
icebp
jge
test
out
divl
inc
int
pop
loopne
sahf
push
mov
or
aam
outsl
aaa
mov
shll
movsb
lods
jo
sbb
in
add
add
ja
movsl
imul
imul
lea
push
pushl
in
cli
mov
push
fcoms
dec
in
push
sub
js
add
xchg
icebp
fisubrs
mov
xor
dec
push
lahf
dec
lret
sub
jp
and
and
sti
fsubp
test
add
enter
push
ds
sbb
jmp
test
test
orb
jo
and
cld
xchg
icebp
jmp
neg
adc
std
fmul
es
fidivs
pop
pop
jnp
push
movsb
fadds
out
cmp
adc
mov
int3
out
jecxz
loope
xor
repnz
pop
xor
inc
hlt
sbb
dec
cmpsb
out
mul
es
xor
mov
inc
adc
inc
xchg
push
cmp
sub
das
inc
or
mov
sar
filds
fbstp
mov
push
stos
jmp
inc
sbb
loop
cmpsb
cwtl
mov
mov
mov
mov
cmp
mov
xchg
jle
cmp
xor
lock
fistpl
int
sub
adc
in
cmp
jb
dec
mov
sub
std
jg
pop
clc
sub
fidivl
jl
and
mov
gs
adc
mov
scas
sbb
call
cmpsl
adc
pop
fs
mov
jg
push
dec
mov
pop
hlt
cmpsl
or
out
pop
sbbb
push
mov
test
xchg
outsl
add
or
add
das
es
out
stos
and
or
test
xchg
repz
addl
pop
or
sbb
mov
and
push
mov
ljmp
cmp
xchg
mov
add
or
rorl
xor
xchg
aas
lret
jl
xchg
sub
and
pop
test
ljmp
fiaddl
mov
aam
inc
loope
jg
fsubp
or
mov
push
cmp
jg
outsl
ljmp
add
push
nop
aas
push
add
lods
fnsave
push
push
or
add
in
filds
adc
mov
and
dec
adc
in
fcoms
je
dec
dec
std
popf
xchg
lea
lods
out
mov
push
xchg
sub
ds
push
jnp
cmp
in
mov
std
adc
mov
xgetbv
dec
and
mov
or
or
test
fidivl
mov
fs
das
xor
jnp
xor
lret
ljmp
lahf
add
xor
fxch
push
pop
push
pop
sub
push
popl
mov
sbb
ss
and
cmp
dec
jge
or
mov
push
and
mov
popf
push
fisttpl
inc
xchg
test
mov
test
aaa
inc
jne
lret
or
sub
mov
inc
sbb
inc
dec
loope
adc
cmp
call
lahf
lock
je
and
out
movsl
ss
mov
and
icebp
dec
cmpsb
lods
insl
sub
out
rolb
sbb
xchg
addr16
add
sbb
aaa
and
icebp
or
mov
jb
outsl
shll
sbb
xchg
test
loop
dec
sub
dec
xor
clc
pushf
mov
jb
lds
cmpsb
push
std
or
mov
push
jo
xchg
inc
lcall
adc
xchg
pop
add
jg
mov
aaa
cmp
xor
add
in
inc
insb
sub
pop
mov
jle
mov
mov
jg
mov
add
addb
bound
mov
dec
mov
cwtl
test
xor
xor
jg
addb
pop
pop
cltd
or
loope
xchg
js
insl
push
adc
mov
pop
mov
les
mov
sbb
pop
sub
jle
or
lock
bound
fiaddl
dec
sbb
push
add
adc
fisubs
les
pop
clc
jae
adc
push
mov
xchg
jne
or
call
push
int
adcb
aam
insb
aaa
test
cmp
push
das
push
mov
pop
sbb
fwait
ret
clc
cmp
imul
rolb
dec
add
or
movsb
fldt
dec
mov
push
lock
or
repz
inc
into
shll
push
sub
and
xor
adc
jb
xor
sub
jl
add
cmp
movsb
aam
sti
jne
cwtl
rorb
and
or
popf
mov
sbb
or
sub
hlt
fwait
rcrb
mov
insl
cli
aas
lret
cli
sbb
mov
pop
mov
int3
mov
ret
xor
jp
mov
push
in
cmp
mov
loopne
imul
mov
jnp
sub
cs
lcall
loope
dec
aas
mov
rcrb
aaa
sbb
lcall
push
ljmp
cld
in
sbb
fistpll
dec
mov
mov
mov
les
outsl
lods
jmp
sbb
in
sub
test
jb
xchg
pop
xor
pop
pop
xchg
sbbb
std
cmpsl
ja
add
int
call
filds
in
cmpsb
sarb
fwait
jnp
sub
xor
inc
jge
outsl
ljmp
test
stos
add
loopne
icebp
inc
push
shrl
inc
cmp
outsb
shl
sbb
jno
clc
decb
mov
jg
roll
and
stos
xchg
outsl
cmpb
mov
int
add
fs
scas
cmc
test
daa
mov
dec
pop
push
add
lret
int
das
mov
xor
lahf
test
int3
aad
dec
incl
jg
inc
add
mov
repz
mov
orb
call
out
insl
cmc
push
jnp
jne
dec
outsl
jb
mov
lods
inc
jl
or
adc
mov
scas
les
std
mov
or
pushf
push
dec
and
push
movsl
cmp
test
pop
mov
imul
jg
fcompl
mov
push
add
jp
sbb
dec
add
jmp
mov
out
sbb
or
add
mov
cmp
insb
ljmp
std
gs
mov
pop
lret
sti
pushf
scas
inc
sti
mov
push
add
sbb
das
rol
inc
inc
leave
in
aas
das
les
mov
aaa
in
out
mov
jo
lcall
sub
nop
repnz
mov
add
and
movsb
jecxz
push
cmp
fiaddl
outsl
and
popa
or
ljmp
push
mov
cli
xor
orl
push
not
xor
mov
hlt
xor
addb
pop
cld
ja
push
mov
push
pop
test
mov
sub
and
mov
movsb
jnp
mov
sub
and
addr16
das
imul
popf
add
pop
int3
xchg
ds
mov
dec
daa
and
or
loope
push
hlt
stos
shll
add
fimuls
mov
cmp
leave
push
or
aas
cli
bnd
sbb
xor
inc
out
les
fdivr
hlt
sbb
daa
jb
lock
or
and
mov
sbb
add
adc
add
and
std
repz
ret
daa
cmpsb
dec
sti
lods
fdivrl
or
das
mov
in
roll
mov
sub
push
adc
inc
in
pop
lods
inc
dec
pop
negb
xor
divb
js
jl
add
add
lods
and
in
shlb
adc
lds
notl
fstpt
or
sarb
and
addr16
push
lret
push
fldt
cld
hlt
mov
mov
dec
xchg
add
or
pop
incl
sbb
or
adc
adcb
popf
insl
lret
jne
and
inc
out
popa
pop
push
cmp
cmp
mov
insl
push
mov
and
icebp
xor
inc
xor
adc
aaa
ret
pop
mov
push
notb
repnz
or
rol
xorl
or
stos
ss
loope
sti
cwtl
addb
pop
lcall
mov
ja
fwait
sub
ret
adc
mov
outsl
mov
rolb
push
or
call
stos
cwtl
out
and
jb
test
ds
push
dec
xor
push
xchg
xor
pusha
push
iret
aam
lret
ljmp
cs
aaa
fistpl
fwait
loopne
div
mov
cs
dec
mov
fcom
mov
dec
or
int
repnz
add
or
hlt
mov
pop
jb
xor
jae
fs
test
in
test
test
loopne
mov
in
cmp
sbb
pop
adc
sysexit
stos
arpl
fsubp
and
iret
dec
cld
push
mov
imull
add
lret
adc
stos
call
or
mov
test
or
pop
call
pop
shlb
xor
sbb
cli
scas
add
int3
lods
dec
out
das
adc
stos
arpl
repz
xchg
sti
cs
popa
rclb
loope
push
fmull
add
add
clc
dec
fidivs
call
daa
push
sub
daa
mov
enter
and
loopne
inc
sub
sub
lcall
nop
loopne
stc
add
sub
ud0
ss
das
or
adc
shrb
clc
loop
lods
jge
sub
ret
cmpsb
clc
adc
clc
sahf
jecxz
add
jne
dec
in
stos
dec
pop
push
mov
std
or
jnp
cs
test
rcl
aam
out
int
or
add
push
jg
jbe
arpl
dec
add
xorl
xlat
xor
pop
sub
jnp
mov
test
inc
xor
fdivl
shl
push
shll
adc
cli
pop
cmp
faddp
fcmovb
add
cmp
in
hlt
stos
push
sbb
cmp
and
sbb
xor
mov
or
sub
sub
scas
ret
and
or
orl
rcrb
rorb
inc
add
push
popf
push
out
andl
push
mov
repz
add
insb
dec
inc
adc
mov
clc
js
ret
or
cmp
ret
out
lea
inc
dec
imul
fildll
jb
daa
add
cmp
lcall
lret
or
pop
inc
mov
inc
leave
rcll
xor
pop
cli
aaa
xchg
xorl
add
xor
adc
sub
and
pop
cmp
inc
fsubr
fcmovnb
and
pop
pop
rorb
das
cmp
jno
shrb
push
adc
mov
cwtl
or
aam
push
imul
cltd
insb
dec
outsl
rcl
push
adc
lret
popf
in
ret
fsubrl
shr
pop
mov
mov
rolb
xchg
loop
dec
mov
repnz
and
add
rorb
enter
aas
bound
clc
inc
cmp
mov
fnstsw
sbb
imul
loope
mov
rolb
imul
dec
dec
sub
inc
cwtl
pushf
jnp
fscale
inc
std
jg
add
mov
aaa
in
jle
pop
arpl
stos
fistps
inc
add
rclb
mov
rcrb
in
pop
clc
jg
decl
aaa
out
xchg
stc
xchg
in
loop
in
add
cmp
nop
xorb
sarl
pop
add
mov
test
or
iret
mov
sbb
push
pop
mov
push
mov
and
cmc
mov
pop
jmp
add
and
add
xor
jecxz
cli
inc
fildll
adc
push
pop
and
and
ss
pop
xor
xchg
ret
test
cli
inc
mov
cltd
sbb
adc
stos
mov
sbb
add
dec
sarl
data16
adc
add
lcall
test
pop
fmuls
mov
shr
inc
addb
daa
add
lcall
add
jo
nop
add
rolb
cld
sbb
fcmovu
adc
cmp
js
jecxz
push
pop
add
jle
lods
shlb
pushl
hlt
and
scas
add
les
movsb
enter
clc
mov
sbb
icebp
in
stos
daa
mov
add
inc
add
mov
add
hlt
or
inc
and
inc
popa
xchg
jl
adc
jg
mov
xchg
mov
bound
mov
das
in
add
push
jb
xor
hlt
add
adc
je
jmp
movsb
and
push
mov
mov
sub
jo
stos
mov
xchg
cli
idivb
inc
insl
cmpsl
mov
jo
div
add
mov
addl
push
sub
inc
push
sbb
js
pop
pop
or
es
outsb
adc
bound
arpl
call
lock
add
jge
pop
and
js
sub
fwait
cmp
cld
or
pop
inc
mov
fcoml
pop
adc
or
movsl
call
cmp
mov
fistl
jo
ficomps
and
adc
push
add
sub
xchg
repnz
pop
test
fsubrs
add
push
in
xchg
adc
sbb
and
xchg
dec
jg
in
stc
push
insl
xchg
imulb
sbb
outsl
mov
stc
add
lcall
mov
adc
push
cmp
psrad
sub
mov
inc
cltd
add
test
and
in
jb
dec
adc
mov
rclb
shl
loopne
adc
jno
cmp
jno
imul
test
mov
ds
aad
movsl
iret
faddl
xlat
dec
fldenv
bt
mov
dec
in
push
stos
cmp
and
cmpsl
pusha
jbe
mov
dec
pop
dec
in
push
popf
mov
or
pop
mov
les
ror
cmpsl
repz
sahf
fildl
repnz
inc
add
push
daa
lcall
jnp
fdivl
cs
sub
loop
push
xchg
xor
outsb
adc
stos
dec
inc
add
push
dec
pusha
ret
and
mov
mov
or
pop
jmp
adc
inc
jle
and
jns
inc
push
daa
dec
cmp
in
sbb
inc
adc
daa
mov
and
adc
loopne
xchg
rorb
cmp
shlb
ret
aaa
jo
or
lock
pop
mulb
cltd
jp
pop
aaa
dec
jge
adc
fwait
rcll
data16
pop
fsubl
scas
adc
shrb
xchg
lret
fsubrs
xor
xor
and
in
mov
jg
push
movsb
es
shr
add
sbb
and
enter
pop
mov
decb
daa
test
pop
dec
dec
xor
cmp
loope
mul
fisubl
push
loope
add
jbe
dec
fadds
mov
divl
js
mov
shl
xorl
or
or
push
mov
data16
shll
mov
jmp
dec
mov
lods
add
jmp
xor
xchg
js
and
aam
filds
and
outsl
pop
cli
xchg
rcr
imul
sub
lods
icebp
jge
cmp
mov
std
mov
push
jno
test
mov
pop
mov
test
inc
enter
lock
cmp
add
pop
and
fildll
jne
outsl
lcall
pop
push
and
pop
in
ljmp
loop
push
cmpsl
pop
fwait
hlt
add
test
movsl
loopne
xchg
or
add
pop
mov
mov
lea
pop
add
adc
std
andb
aad
lods
sub
popf
decl
andb
cmp
add
sub
icebp
jg
pusha
cmc
or
loop
push
mov
fsubl
add
xchg
and
xor
cld
scas
jmp
mov
add
mov
lds
add
ss
sub
dec
add
imul
xor
jge
mov
pop
adc
stos
addl
cmpsb
cwtl
jl
lcall
decl
mov
inc
xor
sub
push
xchg
mov
dec
mov
das
rolb
shll
jo
lcall
add
andb
add
or
and
roll
xor
dec
test
int3
adc
cmpb
out
rol
adc
adc
pusha
xor
cld
push
fists
add
loop
fbstp
mov
stc
ret
fwait
icebp
inc
sbb
push
scas
jmp
fadd
mov
add
mov
dec
cld
mov
sub
ja
mov
or
sbb
adc
inc
mov
add
fdivs
ds
push
mov
pushl
pop
loopne
sarb
inc
mov
and
imul
imul
inc
repz
adc
fisubrs
add
test
shrb
cmc
cmpsb
add
aad
dec
pusha
into
test
movl
and
test
shlb
rolb
pop
ss
mov
xor
ljmp
outsl
pop
mov
jnp
jno
test
cmp
insl
hlt
sbb
into
push
imul
and
push
jmp
mov
xor
add
pushw
les
push
mov
fidivrs
xchg
mov
mov
scas
mov
xor
adc
stc
xchg
adc
ljmp
lock
cmp
pop
push
aam
loopne
add
mov
ret
lock
out
or
adc
fwait
xchg
into
es
inc
push
mov
mov
mov
adc
lret
push
xchg
mov
xchg
push
enter
adc
fisttps
clc
enter
mov
lock
xchg
xor
jbe
pop
enter
and
les
sub
adc
les
pop
jae
or
add
pop
aam
mov
mov
cld
cltd
clc
jp
loope
mov
add
sbb
add
cmp
mov
jle
adc
repz
dec
cmp
fimull
add
xor
or
popf
loopne
bound
hlt
push
lahf
fimuls
jns
jle
mov
xlat
test
test
cs
cmp
pop
sub
mov
add
push
push
push
mov
push
pop
fidivrl
or
loope
dec
mov
ret
xor
jb
cmc
add
and
nop
xor
sub
add
inc
sub
mov
lahf
add
dec
or
lret
scas
push
in
ss
mov
enter
mov
mov
mov
roll
pop
add
xor
xor
popf
shrb
fwait
js
adc
enter
xchg
decb
xor
outsl
bound
int
fsub
push
mov
ret
movsb
js
adc
jno
fcos
mov
xor
jo
call
xchg
jmp
je
imul
sub
push
xchg
or
and
int3
adc
cs
push
or
bound
add
or
add
sbb
pop
insl
out
in
mov
or
les
jle
jae
icebp
add
sbb
sbb
orb
gs
pushf
sti
lret
repnz
or
aad
mov
xlat
jle
shl
push
mov
mov
sub
cmp
adc
cmpsb
outsb
mov
xor
inc
sbb
insl
cld
add
dec
call
xchg
test
fisttpll
push
pop
adc
lea
push
lea
ret
fdivs
mov
mov
adc
xchg
sub
jg
nop
mov
xchg
aas
or
cmpsl
divb
sbbl
sbb
mov
add
les
dec
add
sbb
push
push
mov
aam
sub
cmp
loope
das
iret
add
mov
idiv
imul
adc
cmc
jmp
xchg
rcll
shll
mov
mov
fwait
ljmp
xor
jp
add
outsl
hlt
xchg
iret
sub
pop
add
jmp
jle
fdivs
dec
add
push
out
push
cmp
arpl
pmullw
mov
add
das
xorb
push
xchg
popa
shll
hlt
add
hlt
or
into
add
in
lret
cmp
movsl
pop
loop
stos
sbb
clc
inc
mov
xor
mov
out
inc
idivl
add
mov
xchg
cwtl
inc
out
or
fists
cmp
gs
lcall
rorl
inc
add
movsb
andl
mov
sahf
add
cmpsb
mov
mov
mov
incb
cmp
add
mov
out
mov
sti
stos
mov
mov
test
lcall
jg
add
rorb
adc
fisubl
pop
sub
fstp
add
gs
add
orb
xorb
sbb
cmpsl
js
mov
enter
loop
daa
xor
dec
icebp
jp
insb
or
test
and
xor
mov
mov
push
fcompl
inc
jl
xor
icebp
push
add
scas
test
lcall
cmp
outsb
jle
xor
test
or
mov
or
iret
cs
les
sub
lcall
xor
jnp
jb
rorl
add
decl
pop
movsb
adc
add
push
and
gs
pop
test
loope
or
pop
inc
lock
sbb
loope
sti
fnsave
adc
add
loop
repz
xor
jge
mov
xorb
in
jmp
mov
pop
in
push
and
and
test
ljmp
jb
xor
incl
push
sub
shrb
cld
jg
negb
mov
movups
in
lahf
jecxz
inc
mov
repnz
and
mov
mul
lret
stc
sti
add
and
add
mov
pop
pop
mov
pop
clc
test
xor
stc
push
clc
adc
lcall
sahf
push
pushf
pop
aas
in
pusha
inc
repnz
scas
xlat
cmpsl
sbb
call
and
mov
mov
test
push
sbb
mov
mov
xor
cmp
adc
fdivrs
pop
js
adc
inc
or
jle
add
pop
int
add
cmp
scas
and
sti
mov
pop
push
sahf
push
sbb
js
xchg
pushl
incb
mov
add
mov
dec
lahf
fcomp
mov
pop
add
arpl
lods
decl
loop
adcb
out
js
inc
xchg
jp
or
outsl
in
rcll
ja
hlt
idiv
decl
xor
dec
sbb
sub
frstor
std
lods
std
cmpsb
enter
cmpb
jg
push
lret
push
pop
or
sub
jp
arpl
xchg
in
inc
aaa
jp
fbld
sbb
mov
sbb
clc
xchg
push
push
iret
shll
bnd
mov
jne
cltd
in
push
outsl
das
xchg
adc
add
cmpb
stc
inc
aad
aas
and
and
pop
loopne
scas
out
loopne
into
adc
mov
or
loope
rclb
jecxz
mov
xor
bound
les
mov
lahf
mov
aas
inc
cmp
adc
jle
xlat
loopne
mov
fisttpll
shrd
inc
dec
mov
jmp
and
pop
or
cmp
clc
stos
fwait
add
pop
sub
or
fistpll
mov
loop
orb
fidivl
push
dec
addb
or
ss
mov
push
mov
dec
lret
aam
add
fs
pop
mov
sar
or
ljmp
dec
ljmp
pop
xchg
adc
pop
fs
add
xchg
faddl
dec
mov
lret
insl
push
mov
jno
push
push
int
dec
gs
repnz
mov
mov
and
sbb
outsb
cld
loopne
jnp
jecxz
pop
jno
clc
adc
cmp
jo
loopne
ljmp
lcall
xchg
jnp
push
pop
add
mov
aas
fldl
clc
es
jae
adc
mov
lods
sbb
sub
fidivl
jne
bnd
fmull
sub
sub
les
dec
jnp
popa
adc
push
mov
adc
cmp
in
inc
mov
jecxz
fcoml
push
ret
or
rep
pop
mov
fcomps
into
push
pop
nop
ficompl
sbbl
xchg
xlat
push
stos
and
test
adc
xchg
jnp
cmpsl
pop
lods
cli
xor
and
stc
add
xor
test
mov
sub
das
xor
add
fwait
push
cmp
cld
adc
xchg
mov
mov
into
xchg
adc
lea
jno
rorb
js
mov
lock
inc
ja
or
fsub
cmp
sbb
add
pop
jno
pop
sbb
add
mov
sub
out
call
or
add
inc
mov
mov
int
and
fmull
sbb
mov
pusha
xchg
iret
pop
mov
in
sbb
outsb
adc
adc
test
mov
ret
sbb
stos
jae
dec
lahf
mov
xchg
cmc
popf
sbb
cmovne
es
daa
cli
pusha
adc
pop
jae
xchg
push
add
mov
rcrl
adc
lods
or
in
xchg
xchg
push
int3
sbb
mov
pop
loopew
loopne
in
int3
mov
dec
adc
enter
pop
lret
fwait
add
cmpsl
sub
xor
dec
cmp
and
bound
inc
hlt
loope
out
sbb
mov
and
ds
out
add
pop
fwait
test
pop
ljmp
outsb
jl
pop
sbb
outsb
cmp
sub
ja
lods
shlb
push
mov
mov
cmpsb
jnp
jbe
dec
rorb
adc
adc
mov
and
push
rol
call
pop
cli
jge
sbb
adc
sbb
inc
push
stc
mov
xlat
dec
sbb
pushl
aaa
lahf
mov
sbb
adc
mov
dec
and
mov
adc
in
sub
mov
shld
mov
ds
sbb
sub
cmp
sbb
xchg
pop
mov
test
iret
ja
cmp
out
cmp
hlt
movsl
ljmp
call
je
pop
sti
and
bound
std
mov
inc
inc
leave
jl
push
sbb
mov
rolb
sbb
or
and
or
push
decl
push
jle
in
xchg
jmp
mov
mov
outsl
shlb
call
clc
sub
sbb
stos
jp
sti
mov
xchg
add
outsb
sbb
or
pusha
insb
sarb
outsl
jbe
xor
sbb
in
mov
test
jecxz
dec
mov
out
paddw
ret
push
jle
and
dec
add
add
sbb
hlt
ret
shll
popa
dec
inc
cmovbe
call
mov
add
ret
xchg
int
inc
dec
mov
cld
sub
lods
xorl
sti
ljmp
adc
cmp
jne
xor
inc
jmp
add
ret
imul
pop
icebp
mov
sarb
int
pusha
loop
data16
inc
inc
cli
pop
sbb
mov
das
add
sub
jge
xchg
xchg
mov
cltd
adc
rcrb
sbb
das
adc
or
sbb
jnp
xchg
sub
jp
arpl
xor
daa
dec
pop
shlb
pusha
sbb
sub
stc
and
fnstsw
inc
inc
test
adc
cli
out
data16
cmp
inc
mov
dec
adc
push
outsb
hlt
add
or
or
mov
and
fildll
add
in
mov
cwtl
in
mov
int3
arpl
inc
cmc
stc
hlt
push
and
call
stc
rorb
add
sub
push
cli
inc
mov
push
clc
sub
arpl
ret
dec
std
and
adc
mov
mov
sub
pop
dec
enter
add
jo
or
push
add
js
adc
cmpl
repnz
mov
or
jecxz
inc
pop
mov
pop
adc
jae
flds
sbb
aaa
std
pop
daa
push
lcall
push
ljmp
cld
jmp
nop
mov
outsl
mov
and
mov
mov
dec
sbb
xchg
inc
loopne
inc
mov
out
pusha
bound
sbb
ljmp
dec
loope
cld
add
cmpsb
loop
movsl
inc
lods
fmuls
loop
push
or
stc
inc
loop
pop
int
xor
add
sbb
xchg
mov
inc
scas
mulb
mov
ljmp
mov
xchg
xchg
cli
sub
out
rol
inc
mov
or
jl
das
lcall
or
adc
add
pop
popf
pop
inc
dec
mov
inc
and
mov
add
and
sbb
pop
add
rol
outsl
ja
lret
push
not
or
cwtl
add
fsub
std
dec
aas
adc
loopne
dec
inc
or
cli
xor
sbb
push
popa
cmpsl
mov
pop
mov
mov
pop
test
mov
jle
rcll
fstpl
shrl
dec
or
std
push
aas
jecxz
add
repz
mov
xchg
fsubrs
out
pop
mov
bound
inc
jge
xchg
or
loopne
frstor
add
push
fbstp
mov
push
mov
daa
adc
sbb
pop
mov
adc
fstps
sub
mov
mov
mov
loope
adc
adc
mov
mov
jmp
orb
sbb
add
lds
sub
adc
aam
xchg
push
mov
stos
push
mov
mov
es
fldcw
into
xchg
clc
loopne
push
mov
pop
lds
adc
mov
sub
sarl
cmp
pop
jne
aam
cmp
scas
shrb
jns
jg
sbb
sbb
inc
stc
iret
and
add
scas
hlt
sub
xor
ja
mov
and
cwtl
cmp
cs
orb
loope
test
pop
fadds
or
cmp
push
scas
and
adc
insl
fdivs
int3
call
lret
mov
cmp
icebp
aas
mov
cmp
add
and
sbb
and
lods
dec
clc
add
pop
cmp
adc
xchg
das
insl
leave
shll
aas
push
sbb
xchg
pop
push
loop
or
test
push
fwait
aam
inc
pop
jl
sub
add
cld
xchg
sbb
push
loopne
xlat
pop
pop
inc
xchg
aas
add
mov
bound
outsb
mov
cld
cld
in
sbb
shlb
mov
stos
addl
les
push
faddl
mov
cmp
pop
cmp
aaa
adcb
out
xlat
adc
or
cwtl
mov
daa
aad
out
dec
xlat
mov
add
dec
sub
push
mov
push
loopne
or
aam
sub
xor
lahf
inc
mov
shlb
test
inc
pop
pop
fildll
jne
xor
jnp
or
push
jge
xor
or
jg
out
mov
pusha
cwtl
lds
mov
pop
sbb
ret
rorl
adc
mov
add
push
lea
push
push
push
xorb
xchg
mov
std
rclb
jmp
xlat
xlat
sbb
sbb
std
sub
adc
out
insb
fisubrs
sbb
lods
and
sbb
mov
jg
mov
aas
fldenv
adc
mov
pushl
popf
add
out
fldl
jg
cmc
dec
jae
rcrl
adcb
mov
pop
icebp
sbb
or
fsubl
sub
or
mov
jnp
cmpb
clc
inc
adc
inc
inc
daa
push
push
jmp
add
loope
xchg
jge
in
filds
dec
es
and
mov
dec
push
aaa
pusha
or
das
insl
sub
enter
cmpl
call
nop
adc
xor
dec
inc
sbbl
outsb
add
enter
cli
test
cmp
or
and
mov
xor
out
jl
xor
loop
loop
inc
sbb
mov
insl
mov
inc
cmp
scas
icebp
mov
xchg
mov
das
push
xorl
inc
or
ja
mov
push
or
rcrl
or
imul
ljmp
aaa
jg
jnp
in
and
xor
xchg
and
ja
or
decl
mov
repz
ret
out
sbb
jl
pop
add
and
adc
sub
hlt
inc
cli
mov
std
add
mov
icebp
in
pop
add
ret
mov
mov
shrb
inc
mov
subl
cld
outsl
sub
push
shlb
sahf
mov
scas
inc
cmp
xchg
les
idivl
lret
xlat
lock
gs
adc
outsb
das
hlt
mov
cwtl
jl
enter
scas
and
push
cmp
dec
push
pop
add
popl
insl
outsl
sahf
ret
and
test
mov
dec
xor
push
js
clc
fucom
fucomp
repnz
and
fstl
mov
or
out
and
ret
push
mov
int3
mov
loope
and
or
mov
jnp
mov
add
pusha
shl
aam
xchg
cmp
movsl
arpl
fs
mov
add
sbb
mov
mov
int3
sbb
les
mov
sti
dec
xor
or
adc
test
pop
pop
add
rorl
inc
scas
test
push
or
mov
mov
pop
and
or
insl
ficompl
sub
xor
lock
push
mov
insb
outsl
add
enter
imul
inc
test
mov
nop
xchg
int3
ss
mov
inc
outsb
dec
bound
insl
sub
imul
daa
fldt
ss
sbb
add
cmp
pop
push
fimull
xlat
jns
xchg
xor
mov
push
mov
in
xchg
lret
add
adc
xchg
in
push
xabort
lds
outsl
and
rclb
and
mov
or
inc
imul
jecxz
popf
sbb
push
lcall
pop
sub
and
push
movsl
pop
jmp
aas
mov
adc
aam
add
mov
fcomps
pop
push
cmp
data16
push
test
pop
fsubrs
in
or
nop
cwtl
mov
je
divb
xchg
stc
psubsw
xchg
pushf
loop
dec
aaa
or
scas
outsb
or
idivl
jle
sbb
ss
jmp
scas
bound
jbe
push
cld
das
fildl
inc
push
aam
pop
mov
jnp
adc
mov
pop
sbb
cmc
orl
or
ret
xchg
adc
mov
add
dec
inc
dec
sar
mov
cmp
add
test
decb
cltd
push
add
repz
cmpb
sub
in
fldcw
fcoml
sub
stc
loopne
jno
and
aam
jo
out
cmpsb
cmp
mov
xlat
sbb
pop
xor
adc
mov
mov
pop
push
and
add
clc
push
into
mov
xchg
jl
mov
mov
push
loope
mov
mov
mov
lock
inc
sub
jno
add
cmp
call
inc
jo
lods
sahf
cmp
fisttpl
lret
lock
outsl
push
pop
hlt
pop
push
mov
subb
je
loopne
roll
cs
pop
mov
adc
lcall
lea
add
sbb
int
mov
lods
and
sbb
sbb
shlb
adc
cld
push
push
stos
int
mov
mov
insb
sbb
cld
xor
cmp
shrl
bound
or
out
fsubl
das
jle
mov
xchg
mov
mov
adc
mov
xchg
xorb
jnp
lods
jg
mov
test
pushf
lea
ss
pop
rorl
jmp
sbb
stos
dec
jp
arpl
stos
sbb
pop
add
and
pop
jnp
xchg
push
stos
stos
insl
sub
mov
jecxz
lret
imul
cmp
and
out
je
ss
and
add
adc
fildl
sbb
pop
dec
stos
add
jbe
adc
lcall
aad
bound
dec
cwtl
sbb
inc
pop
and
aas
push
mov
daa
push
pop
add
bound
xchg
wrmsr
or
lret
xchg
ds
cli
insl
inc
pushf
js
push
push
push
inc
popf
js
je
cmp
fucomp
lahf
insl
adc
cmp
adc
add
pop
leave
shlb
fsubrp
push
popf
xor
push
inc
adc
mov
adc
and
jp
xor
or
mov
rcrl
or
adc
fisttps
jae
push
js,pn
pop
xchg
sub
sbb
icebp
mov
mov
icebp
and
in
and
dec
clc
and
cmc
pop
xor
shrl
js
and
add
fcmovbe
add
lds
sbbl
push
sbb
add
dec
shl
cmpl
aam
repnz
in
xchg
sbb
add
repz
lds
lea
lahf
mov
enter
adc
xorl
aad
shrl
push
pop
pop
call
add
mov
popf
outsl
push
clc
sbb
mov
les
clc
and
lea
sub
dec
hlt
lods
mov
dec
adc
dec
incl
mov
add
jle
pop
cmp
or
lods
insb
mov
adc
or
out
ficoms
sbb
repnz
cmp
inc
sbb
dec
sub
mov
cld
mov
cs
jno
push
fcomip
movsb
clc
out
cld
aaa
sbb
mov
notb
or
push
push
inc
shll
pop
add
orl
jle
xor
mov
lds
push
sub
in
aad
jl
mov
and
data16
sbb
mov
hlt
inc
xor
pop
clc
mov
jmp
int
sbb
lods
xchg
add
out
das
jne
cmp
xor
aam
rol
fildl
mov
push
adc
in
and
into
push
xor
sub
sbb
roll
repz
mov
inc
mov
rolb
jl
xor
cmp
clc
rorl
add
push
xchg
adc
outsb
jl
clc
adc
sbb
ret
or
or
je
hlt
push
mov
push
repnz
int3
and
mov
ss
outsb
loop
add
add
in
icebp
mov
and
les
decl
stc
outsl
scas
loop
mov
daa
cmp
sbb
loopne
fmuls
push
adc
test
test
add
test
ja
cli
jb
ds
dec
inc
pop
scas
push
push
fisubrl
dec
cmp
xor
and
jnp
jns
inc
icebp
add
mov
cmp
cmp
cli
add
push
into
enter
cmc
pop
decl
out
mov
mov
cmp
adc
xchg
addr16
adc
inc
pop
loopne
add
inc
movsb
lods
xchg
bound
adcl
cltd
out
repnz
addr16
fldt
hlt
out
loop
sbb
sub
fsts
imul
addl
loop
lea
jl
ret
cld
inc
and
push
or
mov
xor
jo
dec
leave
sbb
mov
dec
or
cltd
adc
aad
push
repz
mov
imul
inc
call
cmp
mov
push
pop
jne
call
scas
push
lods
aad
rcrl
pop
or
and
loop
sub
xchg
outsl
lock
call
imul
pop
jg
or
xor
icebp
pop
cld
call
mov
push
scas
test
fisubl
stos
cmp
movsb
and
jns
cmp
sbb
shr
hlt
hlt
xacquire
cmpsb
cmc
xor
dec
adc
mov
sbb
mov
mov
daa
sbb
les
movsl
push
mov
adc
push
pop
pop
mov
jno
clc
loopne
nop
sub
repz
mov
pop
fstpt
or
aaa
push
mov
xchg
inc
or
test
inc
dec
xor
pusha
lds
jle,pn
js
test
mov
mov
arpl
cmp
pop
push
loope
out
int
inc
bound
xchg
mov
xor
mov
imul
push
pop
mov
push
lret
cld
mov
jle
inc
or
daa
pop
jmp
dec
push
je,pn
xchg
mov
jae
or
lea
into
and
inc
test
lcall
cltd
fisubrl
outsb
sahf
jae
ret
mov
sub
mov
syscall
fcomip
jmp
pop
or
jo
xchg
xor
in
aas
popa
and
in
push
sub
pop
mov
push
fildl
sub
fimull
mov
jecxz
das
out
jo
mov
and
and
lods
popf
outsb
mov
push
pop
ljmp
fwait
sti
push
pop
or
test
ficoml
shll
popf
insl
dec
aas
shrl
fcompl
movsl
stos
mov
push
fiadds
test
fcmovne
outsl
push
xchg
mov
fdivrp
insl
sti
pop
jnp
xchg
and
sahf
or
cwtl
xchg
insl
shll
movsb
add
dec
lea
sbb
xor
mov
mov
jge
decb
mov
addl
int3
adc
push
adc
movsb
inc
mov
add
and
or
adc
int
sub
orl
adc
call
pop
gs
cmpsl
or
sub
movsl
xchg
adc
add
mov
rcll
fwait
and
call
fldt
adc
pusha
mov
notb
mov
cmpsl
add
outsb
dec
xchg
test
jmp
jb
rcrb
jg
bound
imul
pop
add
mov
adc
xchg
jmp
push
xor
outsl
orb
shll
push
xchg
test
les
int
sbb
or
cld
cmp
cmc
adc
aam
add
imul
sub
sbb
pop
adc
xchg
inc
cwtl
cmp
sahf
add
inc
or
lods
adc
cli
sub
inc
inc
icebp
hlt
fisubl
adc
sbb
out
and
inc
mov
adc
cwtl
shrb
pop
adc
int3
push
xor
jno
adc
dec
and
mov
inc
add
sub
out
jp
mov
push
add
imulb
sub
push
int3
pop
ja
sub
xchg
fiaddl
and
xor
int3
inc
in
sbb
sbb
leave
cld
imul
loopne
sarl
push
fsubrs
int3
adc
pop
aam
cmp
stc
lds
call
jp
enter
loop
xchg
sub
iret
or
cltd
test
addr16
shrl
mull
fstl
outsb
sub
xor
out
or
inc
mov
jle
shll
cmc
roll
inc
nop
mov
mov
cmc
inc
lret
sub
or
xor
pop
ljmp
adc
sub
rcrl
daa
xchg
mov
xor
fldcw
or
out
clc
and
push
roll
rclb
int3
sti
or
lock
xchg
int3
sub
xor
int3
jns
mov
cwtl
cmp
mov
enter
push
cltd
rorb
mov
push
movb
cmp
add
add
movsb
xor
jecxz
out
inc
mov
dec
imul
adc
and
mov
lea
cmp
call
call
fiaddl
out
std
mov
dec
lahf
dec
inc
iret
add
xchg
push
stos
xchg
or
and
push
aam
lret
adc
outsb
loop
aam
addl
adc
mov
jns
add
fadds
xchg
aam
push
cmp
daa
jg
fisttpl
stos
testl
add
sbb
or
ret
lds
ljmp
insb
push
imul
dec
lea
inc
pop
jbe
add
fs
popa
ret
push
pop
fstps
hlt
aas
hlt
mov
jp
or
outsl
orb
sub
add
rorb
sbb
jmp
dec
inc
enter
sarl
add
or
cmc
mov
inc
push
andl
jl
lcall
pop
lods
test
mov
cltd
sub
jle
xchg
lahf
dec
cmp
dec
add
lock
gs
pop
mov
pop
pop
cs
add
ret
jmp
pop
sbb
addb
pop
add
call
out
aaa
stos
mov
test
mov
xchg
mov
or
pop
and
adc
dec
stos
and
cmpsl
aam
cmp
jne
push
add
dec
fisubrs
enter
xor
mov
or
jae
sti
dec
pop
shll
jae,pt
xor
test
dec
loopne
je
mov
add
das
sbb
cmp
mov
push
mov
insb
dec
dec
dec
fmul
cmp
mov
inc
enter
sub
or
sub
data16
pop
add
xlat
sbb
jo
fadds
inc
add
pop
aad
push
cmp
jo
jne
cmpsl
add
pop
xor
push
adc
pushf
pushf
xchg
mov
aaa
lods
and
add
add
inc
imul
fldl
cmc
inc
enter
push
in
inc
push
sbb
inc
sbb
nop
lahf
sbb
popa
mov
pop
into
push
test
dec
mov
rorl
xchg
adc
mov
fdivp
scas
sti
ret
mov
sbbl
sahf
fisubrs
or
roll
mov
cmp
fdivr
lcall
pushf
or
xor
cld
cltd
add
mov
lahf
adc
mov
dec
ret
and
ret
cld
pop
inc
mov
lods
and
add
cmp
cld
sbb
or
xor
or
jbe
mov
bound
xchg
mov
cmc
and
mov
sar
sub
lahf
sub
es
or
and
test
add
push
jp
jmp
add
jmp
orl
shlb
add
orb
inc
insl
scas
mov
out
insb
mov
rorb
adc
sub
lds
or
and
jo
mov
add
add
orl
xor
and
es
mov
xor
ss
dec
les
mov
pop
add
test
add
pusha
cwtl
jne
push
js
xchg
addl
mov
loopne
aad
bswap
repz
enter
in
push
leave
push
popw
enter
add
pop
test
pop
jbe
into
test
adc
sub
add
imul
ret
add
and
adc
add
and
add
sahf
ljmp
jle
test
dec
loope
or
inc
xor
lods
add
dec
sbb
test
int
pop
iret
test
inc
hlt
and
mov
cmp
fwait
sub
jo
sbb
cmp
out
addb
and
mov
and
test
inc
daa
push
push
fadds
fcoms
sub
es
mov
mov
sub
aad
xchg
and
data16
push
daa
push
test
adc
lds
cmpsb
sarb
scas
fimuls
ljmp
cmp
popa
rclb
or
jmp
sub
mov
or
mov
xor
or
imul
into
loopne
mov
mov
add
add
call
jg
test
jns
or
pop
xor
sbb
sahf
cli
fdivr
or
push
and
rolb
subb
xor
mov
imul
sub
inc
jmp
xchg
call
andl
sub
orl
clc
push
bnd
adc
sbb
out
cmpsl
inc
sub
iret
lds
sahf
movsl
or
incl
std
or
push
mov
add
fistpll
lret
jg
sbbl
xor
mov
lock
mov
mov
adc
cmpsl
adc
imulb
add
jle
xchg
and
jae
xchg
outsl
sar
jmp
sbb
mov
movsl
cmp
adc
jne
lea
mov
mov
cwtl
add
aam
mov
out
inc
es
cmp
movsl
movb
mov
pushf
push
jbe
nop
data16
jg
sti
loope
loopne
pusha
je
sub
xchg
add
mov
mov
mov
pop
push
push
cmp
sar
mov
das
je
sub
enter
inc
insb
jo
shrb
add
sbb
shrb
std
in
test
scas
pushf
les
push
les
scas
adc
loopne
push
std
mov
in
inc
sti
add
or
and
pop
add
inc
call
jb
out
incl
sub
inc
add
sub
loopne
mov
movb
or
xchg
cmp
xor
push
cli
mov
ss
or
xlat
add
outsb
jmp
add
and
xor
and
incl
or
and
into
and
dec
cmp
mull
mov
les
repz
test
lret
xchg
xor
ja
and
stos
push
pop
sbb
lods
push
dec
add
test
movsl
int3
push
pushf
icebp
adc
adc
add
arpl
mov
outsb
lret
push
xchg
out
lcall
icebp
daa
popa
cmp
pop
push
mov
mov
sub
cmp
sbb
and
xor
mov
sub
mov
push
jnp
push
std
add
pop
int3
in
dec
pop
fmull
dec
lret
fcmovne
addr16
stos
or
into
int
or
jl
fistps
cmp
hlt
cmp
cs
int
or
xor
cmp
mov
cli
out
lret
or
test
fsubrs
mov
xor
out
mov
loop
mov
shrl
jae
inc
icebp
test
stos
lods
push
add
xlat
jae
mov
adc
sub
adcb
sub
mov
sbb
iret
lcall
in
in
or
pop
push
jmp
and
add
jnp
inc
out
js
adc
cmp
gs
lds
xor
lods
sahf
cmp
imul
push
inc
loopne
jbe
inc
lods
test
dec
insb
adc
sub
cmp
stc
xor
into
movsl
or
inc
or
jns
xor
inc
sbb
xchg
fstps
jne
adc
pop
mov
fldenv
aam
inc
lods
fldenv
call
cmp
bound
or
scas
sarb
mov
mov
or
adc
jnp
insb
dec
mov
fistl
xchg
cmp
cmp
pop
movsb
push
sub
mov
cmp
ror
out
and
jmp
jae
stos
push
repnz
jbe
out
je
push
or
sub
fsubr
sbb
dec
sbb
push
push
push
xor
sub
add
sarb
pop
pop
js
loopne
pop
xchg
inc
aam
sbb
mov
xor
cwtl
movsl
loop
add
or
xchg
push
in
lret
mov
call
cwtl
loopne
or
movsb
mov
lcall
imul
xor
or
push
jae
push
pop
insb
enter
mov
aam
fists
call
lock
sar
mov
inc
cwtl
xor
inc
scas
add
pop
mov
jmp
and
ret
inc
orl
and
dec
inc
inc
mov
lock
loop
jle
loop
pop
push
pop
insb
cmp
push
pop
rcr
shrb
push
push
mov
mov
das
pop
call
rcrl
orl
stos
std
pop
outsl
adc
mov
repz
pusha
nop
lcall
jo
inc
jnp
sbb
cld
outsl
xor
and
adc
pop
loopne
je
int3
and
and
sub
dec
jl
sub
mov
mov
adc
sarb
jb
xlat
adc
mov
test
lods
push
movsb
mov
outsl
add
push
sahf
dec
add
out
mov
pop
je
in
or
enter
and
add
in
push
cli
push
push
fcomps
xlat
jle
jp
js
lds
fcompl
add
xchg
or
ret
xchg
inc
adc
subb
add
les
ljmp
cld
or
ret
mov
sbb
jle
adc
jg
mov
nop
imul
jnp
gs
mov
repnz
aam
push
dec
sbbb
hlt
pop
mov
or
mov
add
add
push
add
add
add
inc
fwait
nop
or
adcl
xor
insl
outsb
outsb
sbb
addb
adc
shlb
pop
mov
mov
inc
push
inc
idivl
and
popa
sbb
mov
outsl
dec
cli
push
aam
xchg
movsb
sbb
ds
and
cs
mov
add
lds
int
sub
mov
and
mov
fstp
pop
jmp
xchg
cmpb
and
add
fldenv
dec
or
pop
mov
aas
adc
lock
fnstcw
dec
ljmp
add
xchg
inc
jo
loop
loopne
rclb
mov
sub
or
out
jg
lret
inc
pop
lret
ror
adc
negl
push
mov
mov
dec
gs
mov
adc
addb
inc
xor
scas
inc
pusha
push
and
mov
pop
int3
jae
jae
pextrw
sbb
bound
addr16
outsl
leave
inc
pop
push
insb
xor
mov
pop
pusha
push
icebp
add
and
inc
imul
dec
sbb
into
push
mov
and
jne
inc
adc
mov
push
call
call
sbb
repz
cmp
add
andl
sub
pop
mov
jnp
or
sbb
push
les
test
out
sub
adc
xlat
mov
dec
aad
pusha
hlt
les
aaa
lret
aam
ffreep
xchg
inc
add
adc
xlat
fidivrl
hlt
dec
or
add
out
pop
fxam
lret
cmc
or
add
fucomi
or
mov
pop
iret
sti
fcomp
fisubrl
orb
lods
jle
shlb
xor
ficoml
enter
adc
xchg
sbb
ss
into
mov
addr16
push
sbb
iret
jo
mov
movsb
mov
clc
nop
push
fiadds
add
xchg
pop
mov
or
xor
mov
das
dec
test
add
pop
adc
xchg
mov
jmp
and
out
mov
mov
xchg
icebp
xchg
add
push
dec
add
mov
mov
xchg
cwtl
lret
and
adc
cmp
and
xor
xchg
xlat
cmp
aaa
inc
push
mov
lahf
in
cmpsl
orb
clc
aas
or
pop
fcoms
jnp
dec
xor
add
mov
fcomi
add
xor
cltd
mov
mov
shl
cmp
addr16
cld
adc
sbb
dec
sub
xor
outsl
cli
clc
bnd
cmpsb
mov
imul
rcrl
incl
xor
movsl
pusha
adc
push
cmp
notb
push
mov
sub
inc
scas
loopne
sub
test
dec
mov
mov
jg
sbb
in
cmp
mov
or
outsl
cwtl
xor
jne
mov
cmc
inc
pop
loopne
jge
and
push
mov
insl
mov
xor
pop
pop
mov
mov
xlat
push
hlt
fcmovb
or
jge
push
rcll
mov
xor
aam
pushl
lea
add
fstpl
loopne
jecxz
lret
mov
jo
mov
push
add
daa
dec
test
add
idivl
insl
add
xorb
xor
or
push
fsub
std
popa
ret
pop
leave
inc
or
in
xor
test
xor
mov
dec
mov
int3
loope
adc
dec
std
xchg
shlb
sbb
pop
std
incl
cltd
inc
jb
push
jl
and
mov
fwait
mov
andl
xorl
mov
incl
decl
xlat
aas
add
nop
inc
jmp
jl
in
lods
leave
mov
xor
adc
cmp
xor
ret
sbb
dec
add
sti
sbb
adc
bound
sub
fistps
dec
pop
adc
mov
add
or
je
xchg
mov
mov
dec
js
addr16
jo
es
jmp
dec
pop
sti
fisttpl
test
sub
add
add
pop
shl
lods
outsb
inc
jg
mov
pop
push
xrelease
mov
mov
ljmp
xchg
inc
cmp
and
xchg
adc
lods
push
sahf
enter
clc
in
ljmp
mov
lds
and
jnp
mov
lods
int3
pop
xor
arpl
push
fwait
xor
lahf
and
sub
mov
pop
or
cld
sbb
test
or
or
inc
add
dec
ret
add
jo
add
jb
sbb
scas
and
fsubrs
test
add
sub
sbb
outsl
pop
mov
mov
sub
enter
test
inc
loope
adc
mov
outsb
icebp
test
add
sar
cmp
das
mov
mov
or
outsl
dec
add
sti
xchg
push
inc
outsb
mov
mov
mov
aaa
sub
ret
int
mov
sbb
ss
pop
or
jno
mov
inc
adc
push
cs
jecxz
inc
je
and
pop
les
mov
cmp
pop
outsb
or
inc
movsl
cmpl
push
rorb
into
mov
mov
sbb
pushf
lods
xor
push
lcall
jne
lret
push
or
fdivl
jmp
mov
lcall
ja
test
imul
mov
aam
xchg
xorl
cmpsl
jle
push
add
dec
lods
push
out
mov
adc
ret
iret
sbb
sub
xor
inc
loope
int3
push
push
fs
adc
adc
fists
nop
cmp
in
and
imul
test
bound
sbbl
pop
xchg
les
inc
add
add
test
push
stos
sti
and
test
or
mov
int3
mov
pop
lcall
rol
jno
mov
mov
jp
mov
insb
mov
mov
xchg
in
add
bound
pop
pop
loop
aad
call
add
or
mov
adc
pusha
jne
pop
int3
inc
sub
stc
mov
sbb
cwtl
shr
pop
adcl
sbb
fs
inc
sbb
and
add
dec
add
adc
int3
in
jle
scas
jp
fisubs
mov
xchg
in
movsb
lods
mov
adc
mov
jno
mov
ss
sub
mov
push
mov
add
scas
mov
mov
orb
cwtl
subl
xorb
dec
xor
xchg
or
add
clc
dec
inc
adc
or
mov
dec
adc
int3
xor
inc
mov
dec
mov
inc
mov
sbb
stos
mov
test
clc
adc
sub
jae
jl
add
mov
inc
mov
out
xor
inc
mov
shlb
dec
adc
test
pusha
or
fdiv
pop
and
outsl
pusha
and
ja
sbb
push
dec
mov
cwtd
mov
mov
xor
fadd
and
lea
idiv
mov
mov
mov
xorb
add
int3
or
xchg
inc
filds
into
inc
popa
cld
mov
mov
add
add
sbb
fadds
push
cld
push
test
jbe
jnp
call
fcompl
add
mov
cmp
mov
aad
push
xor
lahf
je
adc
jne
pushf
and
cmp
jge
rcr
ds
add
mov
inc
mov
sbb
and
xor
mov
rcrb
xor
add
out
inc
mov
aaa
cmp
dec
daa
popa
mov
jecxz
insb
cwtl
aam
shlb
push
pop
nop
ss
push
adc
dec
in
mov
cmp
jge
rorb
clc
push
mov
cmp
adc
xor
cld
sbb
cmp
push
sbb
aam
and
xor
ss
cmp
and
imul
and
cli
and
test
xor
push
cmp
push
rcrb
pushf
xor
je
add
xchg
sub
lret
mulps
insb
xor
roll
inc
fnstcw
lock
push
or
cmp
lahf
js
test
pop
push
or
lahf
test
stos
mov
jo
adc
out
sub
dec
or
das
mov
sbb
inc
jae
add
sar
divb
ds
mov
loopne
xchg
jp
scas
jmp
ljmp
mov
loop
pop
add
sbb
sbbb
int
pop
fcoms
xchg
add
sub
adc
mov
negb
inc
jnp
push
mov
mov
repz
add
cs
in
dec
adc
cltd
add
mov
or
test
jle
adc
ja
sub
mov
jns
aaa
clc
inc
sbb
sbb
das
inc
ffree
mov
out
imul
mov
xor
loopne
jo
pop
clc
test
sar
into
orb
push
dec
es
lcall
rcrb
adc
cmp
inc
xor
fwait
add
insb
fistl
mov
adc
add
subl
xor
mov
dec
lds
adc
sbb
dec
inc
roll
pop
cmp
aas
insl
in
mov
movsb
lcall
cwtl
xchg
add
mov
or
pop
mov
push
cmp
cmp
inc
sti
inc
add
dec
stos
stos
mov
mov
adc
and
loopne
inc
inc
sar
dec
jl
or
int
mov
movsl
data16
or
ret
or
push
mov
push
xor
es
testb
cld
scas
mov
xchg
sahf
pop
movsl
dec
push
jno
cs
iret
dec
leave
hlt
lods
idivb
ds
aam
inc
dec
inc
int
add
xor
inc
test
xchg
xchg
ret
add
pop
fisttpl
pop
mov
int3
adc
jmp
fiadds
mov
decb
aam
roll
xor
jno
push
push
cld
js
mov
pushf
mov
xor
sbb
test
hlt
push
mov
sub
jnp
jp
or
je
imul
xor
jge
rorl
roll
stc
rcrb
or
add
arpl
mov
andb
adc
pushf
mov
xor
mov
cmp
or
fcomps
or
pop
insb
aas
mov
mov
nop
mov
vmread
add
lea
mov
push
inc
push
pop
add
sarb
cmpsl
sub
mov
jmp
adc
mov
jnp
push
mov
pop
add
stos
out
aaa
and
fstps
adc
xor
enter
and
or
cli
xchg
int
dec
js
scas
addb
adc
xchg
mov
pop
pop
dec
es
push
fisttps
and
rorb
xor
or
xor
je
sub
cmp
aam
fiadds
outsb
rcrb
ds
inc
adc
add
outsb
insb
data16
fidivl
add
inc
mov
mull
sbb
push
jle
cwtl
sbb
xor
and
popa
test
jmp
cltd
mov
leave
push
dec
idivb
lea
lret
sub
add
xor
adc
pop
ds
cmp
orb
out
repnz
dec
sub
add
sub
rol
test
ds
pop
popl
outsb
call
aaa
pusha
lret
push
and
jno
sub
das
adc
and
mov
ss
hlt
jg
aaa
cld
insb
adc
popa
rorl
cmp
rcrl
fists
xchg
or
les
cmpsb
pop
pop
push
or
adc
sti
dec
mov
push
inc
adc
or
dec
loop
dec
add
dec
and
outsl
xor
popa
push
sti
adc
addr16
ret
stos
mov
repz
push
add
hlt
cmpsb
mov
adc
sub
inc
ds
pop
mov
movb
dec
int3
push
add
lds
imul
xchg
and
jne
mov
bound
std
sti
fmulp
jbe
ljmp
xorb
cmpsb
lea
shlb
js
aam
aad
pushf
add
pop
outsl
inc
sub
or
mov
sub
xchg
mov
testb
mov
pusha
or
rcr
or
adc
xchg
test
pop
add
sbbl
adc
aaa
lock
mov
add
xorl
jne
repnz
shlb
movsb
pop
add
mov
mov
es
jl
inc
and
cmp
push
pop
ljmp
test
mov
inc
aam
outsl
shlb
push
andb
cld
xor
sbb
out
stos
dec
and
outsl
or
jmp
xor
add
filds
mov
mov
aad
jl
mov
inc
lcall
filds
push
sub
mov
rolb
in
push
mov
or
mov
xor
mov
mov
sbb
add
clc
and
loopne
outsl
outsl
cmp
mov
cmp
movsb
and
subb
daa
mov
or
scas
stc
outsl
inc
hlt
fstpt
and
ret
cmc
fwait
imul
test
and
mov
ror
push
arpl
and
sub
in
pop
mov
mov
sub
and
jge
sbb
cs
inc
add
cmp
jge
mov
call
xchg
cmc
pop
loop
fiaddl
mov
pop
loopne
mov
adc
jg
dec
imul
hlt
xchg
mov
fsubrs
sub
mov
jnp
lea
js
or
xor
mov
lods
cmp
cs
add
js
nop
push
add
frstor
push
in
pop
push
sub
rcll
cmp
lea
inc
mov
in
jbe
mov
jno
loopne
aaa
pusha
mov
adc
sub
shl
movsb
push
lods
add
clc
xchg
push
or
mov
std
or
icebp
arpl
or
sub
pusha
aas
and
stc
or
scas
add
bound
divb
jb
dec
inc
xor
mov
popa
add
xchg
or
fcmovnu
ss
push
fiaddl
pop
pop
outsl
mov
addr16
sbbb
xorl
sub
out
mov
push
in
in
add
popa
hlt
ja
inc
push
pop
adc
fmul
jo
mov
and
scas
iret
xchg
sub
pop
cmc
lea
or
cmp
cmpsb
xor
sub
loope
or
jbe
mov
les
in
ret
sub
outsl
dec
cmp
or
jle
ljmp
mov
or
lahf
hlt
pop
mov
dec
fistpl
ljmp
xchg
pminsw
stos
sti
xor
and
stos
mov
inc
xchg
cld
sarl
mov
je
fcoms
in
or
mov
xchg
xor
cli
cmpb
idiv
or
fcmovnbe
dec
movsb
jmp
jmp
jle
inc
sbb
lods
xchg
dec
in
ret
dec
inc
pushf
sbb
mov
xchg
sbb
adc
lcall
std
pop
push
std
and
call
call
jle
push
fnstsw
push
lds
sub
mov
fdivs
cmp
fwait
jb
adc
inc
std
mov
pop
cmp
and
adc
push
and
sbb
pop
ljmp
es
sbb
cmc
push
add
mov
mov
movsl
in
nop
decl
adc
ret
daa
xchg
shlb
push
cmp
movsl
sbb
adcl
pop
clc
sub
jns
xchg
push
push
pop
adc
adc
mov
adc
repz
adc
pop
adcl
push
jnp
mov
xchg
cli
idivb
sbb
stos
in
das
add
cmp
sbb
cmp
movsl
xchg
and
sahf
mov
cmp
jns
add
xchg
iret
xchg
or
jae
xor
repz
filds
popf
sub
or
xchg
dec
dec
movsl
incl
pushf
push
inc
or
inc
jl
xchg
test
jge
cmp
jge
sbb
lcall
mov
or
jp
aad
sub
dec
and
push
rol
dec
lods
lea
jo
call
mov
inc
cmp
adc
outsb
jle
inc
rol
inc
pushl
in
mov
mov
cmp
and
dec
and
jp
and
hlt
dec
je
hlt
addb
mov
in
add
subb
aad
mov
nop
addr16
push
pop
xchg
enter
repz
ja
adc
bound
pop
or
and
jo
in
fcomip
jnp
mov
adc
sbb
lcall
jg
adc
push
sbb
es
jl
add
lock
aas
inc
push
test
inc
movsl
in
pop
push
xor
inc
adc
aam
mov
push
inc
rcrb
stos
jmp
add
or
arpl
iretw
fsubrp
or
clc
pop
mov
and
pusha
and
mov
adc
das
push
lock
sbb
dec
test
pop
dec
and
and
enter
hlt
mov
push
cmp
test
dec
fbstp
dec
cmpsb
ret
mov
jle
xchg
out
sahf
lea
push
pop
mov
hlt
dec
cmp
xchg
jge
mov
add
adc
xor
popf
add
push
or
adc
fsubrs
repnz
int3
lret
adc
mov
sbb
push
xor
adc
jno
dec
add
mov
fidivs
mov
adc
int
xorl
dec
out
test
mov
pop
push
out
aam
xor
push
inc
in
std
or
iret
sub
pop
iret
sbb
pusha
adc
adc
and
enter
mov
add
mov
sub
insb
stc
add
enter
sub
adc
test
inc
ds
jmp
push
cmp
and
loop
xchg
sub
adcl
andl
insb
enter
cwtl
add
data16
lock
jle
in
or
mov
das
add
shl
xchg
jecxz
and
outsb
sbb
out
xor
xchg
xchg
or
xor
jb
lock
pusha
mov
mov
adc
push
cmp
cltd
inc
push
ret
inc
aam
xor
ljmp
pushf
push
in
push
or
sbb
push
mov
push
scas
inc
test
pop
sbb
adc
xchg
icebp
dec
sbb
jo
test
rol
jbe
inc
arpl
repnz
sub
sbb
fiadds
mov
les
movsb
jb
mov
jb
mov
sbb
jno
in
lahf
cmp
cmpb
inc
sub
ljmp
xor
rolb
jno
sbb
in
sbb
sbb
call
jg
mov
pop
add
inc
cwtl
test
xorb
loopne
stc
adc
inc
popa
jae
and
push
sarl
dec
data16
push
xor
sbb
push
es
sarb
sbb
fs
sbb
les
js
cmp
push
imul
and
and
pop
imul
mov
test
std
shlb
pop
ljmp
add
cs
rclb
mov
mov
lret
mov
inc
push
mov
inc
lahf
or
push
dec
sub
movsb
and
pop
pusha
and
adcb
movsb
jp
lret
mov
adc
inc
push
sbb
aas
rclb
and
hlt
xchg
sub
mov
testl
imul
mov
js
ss
xor
inc
adc
add
ja
lret
xor
fdivl
mov
add
enter
sbb
bound
popa
add
lea
outsb
je
cmp
xor
shlb
int
cmc
sahf
xchg
fwait
inc
lods
inc
mov
or
inc
xor
sbb
dec
hlt
fadd
pop
lods
pusha
dec
xor
icebp
cmp
mov
stc
int
inc
lret
add
movsb
sbb
jo
push
or
int3
lock
xchg
int
rcrl
mov
testb
les
lock
sbb
daa
jecxz
pop
repnz
movl
fildl
iret
test
cmp
dec
or
or
push
mov
xchg
cmpsl
sbb
orl
jle
ds
in
inc
out
jp
adc
jecxz
jo
dec
cmp
dec
fldl
test
in
xchg
add
enter
pop
dec
shlb
pop
and
jle
xchg
pmullw
mov
mov
and
dec
shll
enter
mov
dec
test
nop
in
loop
enter
jbe
rcr
aam
int3
lock
jo
cmp
xor
addb
les
jl
mov
add
jns
rcr
and
lds
push
jo
mov
js
cli
pop
mov
clc
addl
or
addl
mov
loope
outsl
fsts
cmp
roll
add
push
stos
add
cli
bound
pop
shlb
aam
adc
lods
xchg
in
int3
add
jbe
jnp
xlat
inc
inc
add
xchg
outsl
loopne
lcall
push
ret
mov
int
push
push
add
loop
or
mov
sbb
repz
or
test
loope
fwait
movsb
jae
adc
stos
nop
and
mov
push
mov
fcompl
cmpsl
add
subl
movsb
push
lock
xor
repz
ret
mov
dec
add
mov
add
mov
aaa
loop
add
cmp
inc
inc
js
and
loopne
or
cmc
repz
mov
add
rclb
loop
ficoml
mov
loopne
scas
loopne
inc
ds
and
xchg
push
push
faddl
inc
mov
mov
pop
outsl
inc
fiadds
in
add
sbb
ficoms
xchg
inc
int
and
and
add
or
xchg
jae
js
outsl
or
mov
cmp
repz
or
addr16
lret
fwait
rolb
sub
mov
or
add
jbe
mov
mov
xorb
push
pop
ljmp
dec
add
xchg
fsubrl
jmp
jo
xchg
mov
mov
fldt
dec
mov
bound
lret
xor
inc
outsl
cmp
jmp
add
sarb
push
inc
jbe
out
adc
mov
pusha
inc
data16
sbb
add
cmp
roll
push
and
repnz
add
idivb
mov
xchg
ljmp
bound
inc
adc
negb
or
push
rcr
xchg
orb
and
rcll
lcall
cmp
mov
cld
pushl
repnz
cmp
imul
ja
xchg
xor
scas
mov
scas
inc
add
mov
sar
xchg
mov
add
dec
or
xchg
or
aas
roll
int
pop
push
xor
pusha
test
pop
inc
push
sbb
jno
add
adc
in
mov
push
movsl
and
xchg
pop
cmp
fucomip
decl
add
and
sti
add
push
push
add
test
or
xorb
add
or
daa
adc
jmp
adc
cmp
fs
add
or
xchg
imul
incl
pop
out
lds
or
cs
dec
mull
shr
cwtl
pop
lcall
xlat
pop
jg
and
mov
sub
adc
cmp
add
pop
add
mov
sub
lea
push
sbb
aaa
xchg
add
xchg
pop
movhps
syscall
jns
and
xchg
mov
mov
jbe
test
imul
add
mul
decl
outsb
or
pop
and
inc
xchg
cmc
xor
and
daa
push
dec
mov
movsl
fists
push
cli
pop
roll
insb
test
leave
push
stos
fildll
les
lcall
adc
cwtl
mov
add
push
mov
imulb
add
shll
add
nop
adc
jb
jg
push
and
xchg
cmovg
pusha
pop
daa
test
enter
or
das
mov
pop
bound
xor
pop
push
jmp
mov
int
fwait
jbe
fstp
movsb
xchg
xor
adc
fadds
adc
xor
lcall
loopne
add
sub
arpl
test
xor
dec
or
sub
js
lods
adcb
sarb
mulps
mov
adc
jge
rcll
rolb
add
out
xchg
or
add
test
mov
xor
test
addl
popa
add
loopne
ret
lds
out
sbb
mov
shlb
int3
lret
sub
or
push
icebp
data16
dec
stc
dec
les
repz
pop
enter
sbb
push
icebp
mov
push
out
insb
jne
lahf
or
push
rolb
add
shrl
rcr
sub
add
adc
mov
adc
fs
rcrl
jmp
daa
mov
out
cmp
jp
repz
mov
add
sahf
xchg
nop
popa
stos
les
mov
push
fiadds
adc
xchg
and
sbb
addl
bound
sub
dec
sahf
inc
pop
push
jnp
les
lock
mov
add
les
push
xor
shrb
and
mov
pushf
inc
xchg
sub
xchg
cmp
cli
push
sbb
stos
jg
mov
ret
pushf
ret
xchg
dec
je
pop
adc
push
adc
loope
fcomps
jo
les
xor
outsb
shrl
rclb
sbb
daa
dec
cmp
and
testl
adc
sbb
loopne
mov
adc
imul
inc
rcrl
das
cltd
imul
mov
insb
repz
mov
add
cmp
pop
adc
xchg
adc
inc
aam
aaa
xchg
add
hlt
add
shl
dec
sbb
dec
into
push
test
and
sti
cwtl
in
jne
push
aam
clc
cmpb
lcall
loopne
or
loopne
xchg
les
push
call
insl
cmp
cmpsb
ficoml
dec
icebp
fwait
rorb
outsb
pusha
dec
sbb
shlb
mov
test
dec
mov
and
adcl
cmp
cmpsb
int3
cmp
and
and
mov
xchg
lcall
pop
fidivs
hlt
rorb
rclb
fsubl
jle
and
pusha
in
xchg
pop
or
icebp
inc
sbb
call
dec
daa
movsb
dec
das
scas
mov
xchg
mov
call
jle
push
int3
nop
and
fs
das
daa
das
inc
mov
cmp
and
adc
rolb
xor
jp
out
fwait
shll
pushf
mov
inc
or
add
xchg
cli
jg
aaa
ss
testl
sub
test
push
pushf
scas
inc
jg
daa
adc
jmp
js
mov
and
call
pop
pusha
lret
movsl
add
add
movsb
cmp
pop
std
xor
jno
pop
stos
push
sbb
lcall
mov
fs
add
or
jg
ret
jg
hlt
fistl
mov
lods
subb
sbb
dec
icebp
adc
test
dec
inc
shrb
lock
mov
pusha
int3
push
cmc
sahf
jb
popf
xor
dec
repnz
sbb
in
mov
jg
jmp
rolb
mov
jno
mov
mov
bound
loopne
mov
mov
and
dec
lcall
loopne
into
imul
gs
push
in
mov
jmp
inc
add
ret
daa
push
pop
fcomp
xchg
insb
sbb
or
cmp
or
pop
loop
aam
add
popa
out
mov
das
shlb
xchg
outsb
lods
lcall
clc
popf
js
mov
push
mov
mov
leave
mov
stos
incb
pop
inc
xor
jle
call
hlt
cmp
cwtl
incb
incb
mov
ret
out
push
std
and
outsl
es
mov
test
mov
imul
sub
repnz
sbb
jbe
push
loop
adc
mov
xchg
orl
std
dec
test
in
shll
inc
push
bswap
xor
mov
fcoml
add
rdmsr
movsb
in
pop
cmp
mov
sahf
jecxz
pop
add
shl
mov
pop
leave
dec
push
hlt
pusha
pop
mov
movsl
sub
adc
ret
sbb
cmp
in
xor
and
xchg
add
lods
inc
inc
repnz
pop
cli
push
mov
dec
out
push
sbb
mov
les
dec
pop
push
loope
insb
pop
hlt
inc
repz
jle
stos
leave
loopne
nop
or
mov
cmpsl
xchg
jne
jmp
ficoms
cltd
in
movaps
pusha
cs
inc
sub
in
rclb
jp
cs
xchg
into
mov
dec
jl
je
in
in
mov
repz
hlt
sbb
pop
or
stc
dec
cmp
subl
jnp
add
add
dec
or
pop
ret
jae
clc
je
cmp
adc
pop
sbb
add
cmp
add
test
xchg
into
hlt
adc
and
shr
cmp
loopne
xor
adc
dec
rcrb
dec
jp
mov
push
scas
and
bnd
xor
aas
decb
mov
std
fadds
sub
adc
pusha
and
data16
add
stos
adc
push
dec
pusha
pop
push
cmpsl
jmp
ret
inc
sub
fstps
in
in
inc
inc
popf
add
clc
aaa
out
mov
adc
xor
or
pusha
lock
cmp
cmpsb
xchg
ret
clc
add
scas
enter
push
sub
push
push
stos
pop
insl
roll
fbld
adc
stos
push
nop
stc
ja
sbb
out
jno
call
loopne
addb
or
inc
inc
sub
dec
and
mov
or
mov
jmp
nop
add
sbb
mov
and
xor
xor
inc
push
inc
push
pop
cwtl
test
jno
dec
xchg
sbb
xor
js
jns
or
enter
and
mov
push
inc
outsl
inc
mov
adc
mov
adc
sbb
sarl
stc
sub
sub
fcompl
shll
push
iret
fiadds
cmc
xor
jo
cwtl
xchg
ret
inc
sti
movb
in
pop
pop
ljmp
push
push
mov
es
call
pusha
subb
mov
in
or
ljmp
inc
outsl
std
pop
pop
and
and
lea
pop
ljmp
and
push
mov
add
push
pop
nop
test
sub
lock
jle
mov
inc
mov
mov
enter
filds
xor
in
push
lahf
cmpxchg
cmp
xor
xor
cld
mov
fbstp
and
add
mov
sti
scas
dec
in
fstpl
pop
clc
test
test
add
cmp
dec
push
cli
mov
outsl
xor
and
test
nop
dec
jg
push
sub
push
push
or
je
movsl
mov
sti
add
loop
mov
pop
pop
xchg
push
xchg
nop
cltd
subb
xchg
add
or
and
jnp
loop
cmp
loope
dec
add
xchg
test
movl
lahf
dec
inc
cwtl
and
cld
ret
mov
loopne
pop
xlat
or
loop
inc
cmp
jg
sarb
mov
lret
push
add
pop
push
lock
push
stos
insb
mov
inc
mov
dec
mov
test
outsb
and
sar
leave
jle
repz
fimuls
das
pushf
lahf
in
xchg
sub
cmpsb
scas
lock
outsl
sub
fcoms
pop
mov
fs
lcall
icebp
inc
fnstsw
loop
jb
sub
icebp
cld
aad
and
roll
mov
xchg
leave
xchg
repnz
pop
add
mov
jmp
ret
data16
cld
in
and
mov
daa
or
pushf
sbb
add
mov
push
sub
mov
mov
stos
cli
mov
add
mov
inc
jge
sbb
clc
pop
sub
fstpt
adc
lcall
cmp
shll
push
test
dec
mov
sbb
pop
jg
stos
xchg
lcall
clc
in
adcl
add
inc
add
add
pop
shlb
roll
out
roll
xchg
mov
movsl
adc
test
rcrl
call
push
and
test
mov
add
push
movsb
xor
das
inc
mov
imul
xor
mov
add
dec
aas
inc
das
sub
cmp
cmp
int3
sub
insl
inc
add
cli
xor
filds
ret
out
dec
cltd
xchg
xor
shrl
push
hlt
loop
or
lahf
out
add
mov
insb
ret
xor
decl
std
inc
inc
mov
rorb
adc
ret
call
lock
cmc
or
mov
insb
fstpl
in
mov
mov
mov
lds
add
add
xchg
ss
xchg
outsl
push
sbb
test
mov
ja
add
push
inc
lock
push
js
sar
das
cld
push
sarb
pop
ret
ret
notb
sub
nop
or
aam
aam
icebp
xor
add
xchg
jmp
jg
sbb
addl
loop
push
add
mov
add
lock
test
out
ret
insl
pop
push
imul
inc
jne
pop
jle
pop
movsl
or
jbe
aas
out
sbb
sbb
cs
cwtl
mov
das
mov
decl
sub
loope
cmp
push
xchg
clc
insl
rcr
push
sbb
les
iret
lret
add
mov
call
or
mov
out
loope
orb
mov
aas
adc
push
or
gs
ss
call
mov
pop
mov
pop
push
inc
or
mov
ret
sub
add
adc
fbld
ljmp
mov
or
je
mov
jae
in
pusha
pop
add
std
xchg
ss
cli
cmp
jo
cmpsb
fstps
push
inc
mov
or
or
or
mov
cmp
xor
add
dec
sbb
jp
xchg
out
in
aad
clc
add
pop
pusha
xor
lcall
clc
adc
xchg
fwait
pop
out
add
inc
ja
sti
lea
adc
in
pop
cs
popa
test
or
pop
dec
push
and
xor
push
mov
mov
nop
mov
jmp
movsl
mov
xor
in
bound
js
push
in
pop
scas
and
cmp
ja
jne
xchg
xchg
shrl
or
incb
jmp
sub
out
inc
sbb
arpl
cs
push
js
dec
loopne
inc
jge
mov
cld
pop
push
add
mov
outsl
mov
mov
popa
shlb
xchg
lea
cmpsb
sbb
add
fistps
xchg
add
add
xor
mov
call
cmp
imul
fsts
xchg
jno
push
aam
jecxz
repz
jae
lea
popa
and
lods
rorb
fiaddl
push
push
and
ret
lods
cmp
movsl
inc
fistl
cmpsb
cltd
sub
shl
xchg
cmc
nop
mov
jl
sbb
push
in
push
test
add
xchg
push
jg
cmp
lods
sub
stos
ds
insl
sahf
inc
scas
mov
in
inc
inc
ljmp
push
mov
std
jo
cmp
repz
mov
call
les
cmp
dec
pop
movsl
xchg
jb
mov
jg
cmpsb
jge
jns
lret
pop
mov
jp
test
ljmp
jmp
sub
daa
mov
and
push
lds
xchg
pop
mov
jo
and
sbb
test
lods
pop
sbb
aaa
jmp
test
lods
std
jg
add
sub
push
out
and
pop
xchg
push
add
daa
insb
loope
imul
mov
ljmp
mov
pusha
push
cmpsb
dec
mov
mov
dec
adc
enter
pop
add
decl
dec
mov
lea
fwait
lret
js
insl
out
shlb
iret
mov
cltd
roll
push
adc
aas
pop
sahf
and
pop
sub
inc
mov
lea
popa
jmp
and
lods
call
test
and
ljmp
lret
push
mov
cld
inc
aad
cmp
inc
jbe
adc
push
sbb
cmp
pop
sbb
and
insl
lahf
mov
push
push
subb
cmpsl
test
imul
cli
inc
rcrl
pusha
adc
jno
jp
sub
jg
push
and
scas
ret
inc
mov
fcomip
aam
shlb
mov
test
gs
mov
cmpb
jg
test
pop
stos
push
xorl
or
aad
stc
add
into
jecxz
sub
pop
decb
jbe
in
mov
add
stc
push
rcrl
push
xchg
pop
inc
push
push
push
jb
sub
incl
leave
test
and
enter
push
outsl
inc
lea
lret
popf
and
loop
das
inc
pop
loope
inc
mov
cltd
mov
popf
ret
add
pop
cmpsb
sub
cmp
cmp
aad
xchg
cmp
mov
stos
repz
sub
arpl
dec
cs
push
outsb
lock
or
add
xchg
lahf
data16
xchg
push
and
arpl
add
es
inc
pop
adc
fsubrl
hlt
icebp
std
or
and
pop
inc
mov
xorl
cld
ds
jecxz
or
insl
pop
sbb
mov
sub
sbb
sti
mov
insl
stos
adcl
cmp
daa
loopne
mov
mov
add
jle,pn
push
mov
je
cmpb
adc
lret
mov
fistpl
jns
mov
sbb
mov
pusha
sub
out
cmpsb
test
addl
adc
lods
sub
push
nop
js
jg
sub
mov
xchg
add
xchg
popa
mov
and
xchg
push
mov
sub
data16
or
sub
sbb
jmp
mov
push
hlt
inc
mov
cwtl
and
inc
mov
jle
sbb
jle
sti
shlb
test
push
jle
test
mov
inc
cld
jb
pop
jns
pop
mov
mov
aad
push
adc
shll
outsb
mov
sbb
dec
lods
sti
pop
adc
sar
and
xor
insl
jp
hlt
fsts
mov
mov
jmp
jns
push
jmp
pop
push
ficoml
pop
cmp
nop
cmp
jecxz
mov
sbbl
andl
push
rcrb
jno
cmp
push
push
mov
shrl
add
sub
mov
inc
cmp
add
pop
xchg
lcall
or
add
xchg
inc
ja
cmp
call
dec
sub
test
add
add
cmp
sbb
lret
cmp
fisubrl
filds
add
jbe
std
cmpsl
and
rcr
test
add
push
pcmpeqd
dec
push
shlb
add
incb
push
or
add
stos
or
outsl
sbb
xchg
push
mov
adc
cmpb
dec
mull
jne
mov
loope
sub
push
mov
iret
fsubrl
stos
adc
sub
adc
mov
xlat
xchg
xor
cmp
adc
pusha
ss
mov
adc
mov
sub
jecxz
mov
xor
and
mov
mov
add
xor
xchg
xchg
sub
push
and
jecxz
dec
rclb
inc
int3
js
push
or
xor
popf
pusha
add
icebp
add
out
push
stos
xor
push
sub
je
adc
negl
mov
sub
mov
jl
adc
add
push
xor
cmp
and
xchg
rcrl
js
xor
adcb
sarl
hlt
and
ret
je
adcb
outsl
inc
nop
and
sub
sbb
dec
cwtl
push
lahf
fistpl
and
incl
dec
adc
push
xor
fld
xor
rcrl
push
andl
pop
jmp
cmp
pop
pop
psrlw
adc
cmc
xchg
lcall
mov
or
outsl
aam
rclb
out
jl
pop
in
loope
sub
sbb
jl
lods
mov
fdivl
clc
mov
addr16
jmp
jg
cmc
call
std
xchg
test
movsb
call
jecxz
in
shrl
fisubl
and
test
std
and
out
jg
xchg
call
mov
pushf
nop
add
mov
and
jae
pop
ljmp
inc
psubsb
xchg
jmp
push
decl
lock
jmp
add
xor
lods
pop
cmp
or
or
push
inc
ljmp
push
jb
cmp
pop
adc
js
jns
incl
addb
leave
rorl
mov
jl
inc
adc
cmpl
push
fisubrs
fnsave
clc
and
aam
cli
mov
or
jecxz
or
out
mov
roll
push
pop
pop
or
cmp
cmc
push
adc
test
int3
cmp
sub
icebp
mov
test
lret
stc
nop
fidivs
adc
mov
imul
or
outsl
and
mov
inc
fwait
mov
movsl
mov
mov
mov
pop
push
scas
or
cli
mov
repnz
adc
adc
adcb
in
test
shlb
push
repz
push
mov
jmp
roll
mov
roll
pop
js
or
mov
incl
xor
inc
aad
outsb
nop
xor
mov
jg
cvtps2pd
xor
pop
cli
add
lcall
mov
adc
push
jl
fmull
repnz
add
fwait
aaa
add
jmp
xchg
stos
bound
mov
mov
lahf
shll
int
pop
clc
add
inc
loop
and
pushl
adc
loope
repnz
jp
insl
mov
mov
fidivl
insb
loop
repz
mov
dec
add
lahf
sbb
fldt
or
inc
sbb
inc
fldcw
sbb
jl
lret
aam
lea
leave
pop
pop
or
mov
int
out
jle
call
or
and
enter
sbb
push
mov
ret
in
pop
iret
or
sub
dec
arpl
popa
imul
push
or
enter
or
xor
aam
pop
popf
push
pop
push
sub
out
xchg
mov
mov
inc
repz
ss
or
and
dec
decb
popa
test
scas
xchg
clc
sub
rol
in
inc
gs
fdivs
test
shlb
push
aam
decl
or
fwait
inc
movsb
test
push
pop
test
jp
rcrb
sub
fisubrl
fwait
test
loop
add
js
or
loop
mov
or
inc
fidivrl
xchg
ficompl
mov
lcall
lods
aaa
push
jo
add
mov
xchg
xor
mov
mov
adcb
inc
xor
out
sbb
bound
or
scas
lret
dec
xor
in
outsb
jno
arpl
jns
xchg
addr16
push
push
mov
movl
aas
out
push
pop
sbb
sub
mov
fnsave
scas
test
mov
mov
mov
inc
stos
jmp
rcll
mov
jo
add
mov
loopne
xchg
sbb
popa
sbb
mov
push
push
shrb
sub
push
xchg
loopne
inc
mov
lock
add
loopne
lods
push
cmp
fiadds
add
xchg
inc
movsb
cwtl
pusha
inc
and
sbb
fidivrs
insb
xor
inc
cmp
sbb
mov
fwait
adc
movl
cmpsb
cmp
fdivl
clc
dec
fdivs
push
jo
flds
fld
mov
or
sarl
add
xor
and
and
mov
adc
icebp
and
xor
aam
xor
xor
addr16
int3
call
shrb
add
or
cmp
icebp
pusha
adc
pop
and
popa
inc
xor
xor
pop
sub
adc
and
fwait
mov
add
pop
outsl
xor
push
leave
inc
add
pop
shr
mov
push
add
mov
adc
push
xchg
jbe
xchg
daa
or
adc
insl
aam
jmp
inc
jno
das
cs
xchg
xor
pop
inc
ljmp
ljmp
cmp
xor
shlb
mov
adc
pop
adc
lret
mov
jle
ret
in
imull
xor
sub
ljmp
inc
pop
adc
and
mov
mov
xchg
or
int3
dec
outsb
pushf
inc
cmc
insb
stc
sbb
mov
arpl
sub
sub
fsubs
sub
sbb
repnz
mov
daa
bound
repnz
das
insl
jge
sub
sub
pop
and
push
mov
xor
inc
not
movsl
daa
shrb
cld
jb
lods
lods
mov
push
incl
fildl
cmp
fidivs
lret
cmp
lcall
pop
sub
mov
repz
add
jb
std
sbb
and
xlat
std
pushl
lcall
addr16
xchg
mov
cmpsb
cmp
outsb
mov
cmp
inc
int
sub
xchg
sub
decl
sub
cld
jle
ja
pop
es
push
jg
mov
mov
imul
adc
pusha
jp
es
je
xchg
push
test
outsl
or
and
fadd
aad
std
in
out
ljmp
inc
mov
mov
and
or
xor
xor
shrl
loopne
jmp
rclb
sbb
shlb
push
shrb
testb
push
jne
mov
xor
xchg
mov
hlt
aas
sbb
add
mov
mov
mov
cmc
out
daa
insl
iret
mov
adc
cmp
sub
add
lods
outsb
int3
lods
mov
test
mov
lea
dec
test
mov
adc
lods
pusha
or
cwtl
ljmp
mov
stos
or
jne
pop
dec
adc
leave
mov
add
insl
sub
or
xor
adc
or
fidivl
xchg
adc
inc
jno
or
pop
into
outsl
pop
fstps
sbb
push
pop
adc
call
pop
loopne
ss
icebp
or
pop
rolb
cltd
into
xor
xorl
lods
ljmp
js
sbb
push
ljmp
xor
cmc
adc
nop
and
ljmp
stos
sub
dec
push
les
rol
mov
mov
mov
call
outsb
inc
jb
jno
inc
in
pop
cmp
pop
sub
inc
dec
shlb
std
and
inc
repz
lods
mov
shlb
pop
cltd
inc
or
or
aam
fsubs
loop
pusha
movsb
inc
lock
push
test
js
add
repz
and
or
adc
push
sub
cmp
add
adc
jne
mov
addb
push
inc
cmp
jle
xor
sub
add
mov
test
cmc
stos
mov
sbb
cs
dec
imul
adc
jbe
xor
cmpsb
jb
xor
mov
inc
dec
rcrb
and
add
or
jecxz
or
push
rol
push
or
adc
into
add
outsb
iret
jo
add
test
xor
adc
or
pusha
call
pop
dec
fisttpl
jge
nop
fnstenv
jl
test
push
xor
add
add
cmp
inc
inc
mov
cli
push
push
push
xchg
rcr
je
mov
cmc
lea
mov
push
notb
in
jno
mov
push
outsl
sub
pushf
pop
push
fcomps
sbb
and
std
xor
arpl
sub
mov
clc
lret
jp
cmp
pushl
int3
jmp
inc
and
shlb
in
rep
std
in
inc
adc
or
in
fs
xlat
inc
mov
xor
pop
push
decl
pop
les
leave
js
das
lds
pop
and
lock
inc
sar
adc
nop
or
fistpl
js
inc
cli
push
adc
aam
mov
add
mov
dec
aad
test
pop
daa
or
inc
cs
mov
cmp
test
imul
dec
cmp
inc
add
xchg
or
mov
pop
xchg
int3
ljmp
xor
rolb
inc
outsl
add
mov
sbb
std
mov
and
adc
pop
out
sarl
pusha
cmp
es
mov
cmpsb
inc
mov
pop
lret
push
cmc
push
inc
mov
mov
inc
jno
mov
insl
dec
jo
fidivs
jp
mov
push
or
subb
subb
or
adc
mov
xchg
or
xchg
sbb
inc
aaa
jo
mov
or
icebp
jns
push
inc
mov
sbb
cmpsl
adc
notb
ds
sub
pop
pop
sbb
jbe
sahf
jo
push
xchg
adc
xorb
add
xor
mov
xchg
cmp
mov
sbb
cli
stos
in
enter
les
push
mov
and
pop
fs
cmp
hlt
jg
mov
add
and
mov
mov
lcall
insl
sbb
inc
test
jae
pushf
jecxz
testb
mov
or
mov
mov
js
sub
pop
stos
out
sub
jl
push
mov
stc
mov
movsl
lea
pusha
scas
sbb
cs
fistpl
xchg
lahf
cmp
adc
xchg
ds
decb
jne
js
and
push
xchg
and
sbb
and
popl
test
jg
les
test
jnp
sbb
jmp
cmp
mov
jne
cmc
adc
jno
shrl
cld
inc
adc
and
outsb
fxtract
repnz
mov
into
ret
mov
jns
lret
call
mov
fcoms
pop
sub
mov
movsb
inc
in
lods
mov
je
inc
pop
rclb
mov
pop
sub
pop
test
xchg
shll
or
pushl
mov
push
ds
xchg
mov
inc
mov
jle
mov
push
lahf
mov
or
mov
movsb
test
aas
mov
mov
jle
cmp
out
and
sub
movsl
dec
nop
inc
xchg
sbb
clc
mov
sarl
xchg
jmp
xor
and
pusha
popa
or
mov
push
mov
jne
dec
xor
xchg
mov
aaa
decb
sbb
cmc
in
adc
outsb
push
cmp
aad
lods
mov
mov
repnz
mov
mov
mov
and
xor
mov
xor
cmp
inc
inc
test
add
sub
addr16
or
sub
outsl
jno
adc
ret
cmpsb
mov
push
inc
icebp
xchg
or
insb
stos
mov
call
lea
pushf
mov
jnp
aam
jo
push
add
inc
cmc
add
add
iret
mov
mov
andl
loop
sbb
or
push
xor
les
and
dec
cmp
lock
ficompl
mov
notb
xor
pop
aam
jmp
cmp
loop
adc
add
or
and
imul
push
adc
jne
or
push
lds
inc
popf
xchg
or
adcl
add
ds
sub
adc
adc
add
pop
pop
rolb
jae
das
rcrl
sbb
mov
push
pmaxub
stos
xchg
inc
dec
adc
add
add
in
mov
mov
and
sub
roll
sbb
mov
xchg
pop
roll
xor
adc
or
adc
or
dec
adc
pop
fmuls
mov
cli
mov
adc
or
adc
inc
popa
or
dec
aam
loop
cmpb
fiaddl
faddl
add
ljmp
jnp
aam
xchg
clc
or
lcall
and
dec
sbb
movl
fidivrs
xchg
std
hlt
xor
test
inc
jge
shrb
push
cld
add
dec
mov
out
in
or
sbb
cmp
push
shrb
stos
in
pop
sbb
push
test
xor
adc
andl
sbb
sbb
adcb
test
cmpsb
or
call
adc
out
xchg
loope
xor
cmp
decl
in
mov
xor
or
add
and
mov
push
adc
int
mov
jp
pop
loope
mov
mov
lds
adc
call
xor
adc
cli
adc
test
adc
mov
or
inc
add
xor
leave
ret
xor
jge
mov
dec
ret
ljmp
cmp
adc
mov
fistpll
sbb
sub
and
mov
pop
clc
add
mov
cmovl
clc
lcall
mov
stc
stos
divl
jb
and
push
pushl
test
pushf
push
push
rorl
jno
xchg
rcll
data16
mov
outsl
push
and
or
jae
cmp
mov
jb
add
sub
and
fsubp
loop
add
movsb
or
sahf
mov
or
jg
sbb
cmp
push
paddsb
push
push
add
nop
cmp
adc
xlat
cmp
cltd
inc
sbb
mov
iret
fsubrs
in
lods
push
dec
dec
out
cmc
sub
outsl
adc
daa
outsl
aas
cltd
push
popa
lcall
stos
xchg
test
mov
hlt
mov
movsb
add
adc
test
ds
push
sarb
cli
gs
dec
stos
nop
or
push
mov
ret
les
mov
cld
pusha
mov
int3
ljmp
aad
jae
pop
inc
decl
adc
pushl
mov
mov
cmp
cwtl
jo
sbb
test
inc
cld
inc
inc
imul
jns
mov
incl
push
inc
push
add
cmpsl
cs
ds
cmpsl
push
dec
pusha
jb
stos
jecxz
out
inc
incb
outsl
stc
add
enter
dec
push
pop
adc
call
mov
or
enter
push
fiadds
pop
xchg
cmp
pop
cli
mov
fistps
jge
icebp
aaa
push
imul
out
add
pop
mov
ret
or
movsl
or
inc
xor
and
and
push
adc
xorb
sbb
cwtl
fs
stc
xor
aad
add
xlat
pop
inc
aam
hlt
mov
decl
insl
rcll
mov
lcall
cmpsl
push
decl
enter
lret
out
loopne
clc
das
sub
movsl
sub
inc
jl
pop
inc
add
sbb
fildll
cmp
pop
sbb
xor
inc
cld
cltd
ret
fisttpl
add
dec
shrb
mull
add
dec
fdivp
mov
mov
xor
push
dec
push
and
iret
scas
lock
icebp
mov
lea
inc
loop
fnsave
push
pop
xchg
popf
add
shrb
add
fildll
imul
cmpsl
out
lret
cli
sub
jle
xor
and
loop
decl
mov
pusha
inc
mov
cmp
sub
jl
ret
fmuls
loopne
imul
lcall
daa
js
xchg
sub
int3
jmp
pop
or
xchg
sub
and
mov
lods
pop
fcomps
or
fistpll
or
pop
pop
cwtl
inc
scas
fwait
shlb
cmpb
mov
xor
mov
ss
js
cmpsl
mov
push
sbb
push
inc
cli
mov
xchg
cs
cmp
jg
popf
pushl
fsubl
and
or
jge
das
vcvtsd2ss
and
cmp
mov
adc
mov
ljmp
adc
pop
arpl
daa
shll
sbb
pop
inc
sbb
mov
adc
out
pop
rcl
jo
movsl
mov
outsb
mov
iret
mov
xor
sbb
cwtl
mov
dec
stos
sahf
add
mov
push
orl
jecxz
fucomip
dec
mov
push
andl
mov
lods
loop
out
in
push
or
loopne
cwtl
push
sub
ljmp
push
mov
sub
and
int
jle
and
fldt
ljmp
mov
adc
jae
nop
cmp
jb
add
in
mov
cwtl
push
xchg
in
fmul
add
aaa
pop
cld
adc
cmp
pop
jb
iret
or
inc
cmp
xchg
fisubrl
fldt
adc
jo
adc
test
decl
pop
pop
adc
out
cs
mov
mov
add
inc
xor
fmull
fistpll
xor
add
sbb
into
stos
xor
fdivr
mov
popa
and
add
add
mov
xor
int3
add
mov
or
or
into
lret
add
shlb
outsb
pushf
push
sbb
xchg
lret
lock
jns
lock
into
fsubrl
xor
int3
mov
add
roll
lock
ficoml
mov
and
mov
lret
add
push
pop
data16
push
adc
cmp
les
mov
les
dec
xor
fwait
in
mov
or
cmp
add
add
mov
rcrl
inc
mov
pop
xor
or
mov
test
xchg
xor
mov
jp
sarb
pop
call
test
je
out
fsubrl
fsubrs
push
sub
xor
and
jg
fwait
add
fistpl
jl
sar
hlt
aam
shl
pop
negl
jg
or
iret
les
xor
lea
fs
clc
and
cwtl
les
inc
in
incb
and
adc
aas
mov
inc
mov
xchg
cmpsl
sbb
insl
add
adc
xchg
xchg
dec
stos
fcmovbe
mov
loopne
scas
cs
and
rclb
mov
jle
lods
cs
jp
dec
shr
xlat
pusha
cltd
adc
sarl
in
mov
dec
enter
subb
and
dec
cmpsb
mov
cmp
sti
pop
mov
adc
mov
daa
mov
adc
in
dec
iret
stos
rcrl
test
xor
les
imul
xchg
cs
lock
push
sbb
cmpsb
push
fwait
pop
push
in
cmpsb
loopne
mov
adc
xor
adc
pop
add
dec
adc
sbb
fcmovnbe
cmp
or
cli
insl
mov
adc
xor
mov
mov
icebp
adc
mov
xor
into
push
mov
icebp
jno
jb
or
mov
insl
popa
lcall
fwait
dec
push
or
jp
or
sbb
fildl
mov
hlt
mov
pop
mov
xor
jecxz
sub
mov
mov
cld
in
mov
pop
dec
push
pop
add
aas
test
mov
adc
std
pop
pusha
ret
in
sub
and
pop
mov
fwait
out
filds
lds
push
popf
jl
mov
mov
jbe
push
inc
je
mov
xlat
push
add
pop
sbb
pushf
xor
mov
data16
pop
sub
add
mov
adc
jbe
decl
or
jl
icebp
add
fnstsw
cmp
jge
add
mov
adc
pop
or
je
or
imul
stos
push
xchg
dec
and
rcll
add
pop
ljmp
xor
dec
imul
mov
mov
aad
mov
add
lret
imul
hlt
add
jmp
or
lret
push
or
arpl
mov
jns
add
dec
mov
add
pop
mov
dec
imul
fucomp
int3
test
jmp
repz
sbb
add
add
in
mov
std
xchg
push
dec
sbb
call
push
iret
push
das
push
ljmp
lret
inc
movsb
mov
xchg
inc
and
shrb
pop
lods
fidivl
outsb
xchg
cli
outsl
dec
loopne
or
add
outsl
sar
jg
mov
and
testb
cs
add
jnp
push
add
mov
adc
in
out
adc
in
pushl
hlt
add
js
mov
push
xor
icebp
dec
mov
mov
dec
frstor
mov
jns
jecxz
mov
pop
out
pop
mov
or
fistpll
xor
inc
bound
fcmovnu
push
adc
cltd
out
inc
cs
mov
lcall
adc
mov
inc
ljmp
jecxz
pop
aas
idivb
pop
lret
push
adc
pop
mov
inc
and
js
mov
mov
mov
test
sarb
dec
repz
sub
test
mov
cmp
add
lock
aad
mov
scas
sbb
dec
lcall
stos
nop
xchg
sti
ljmp
xchg
aam
mov
scas
call
leave
xchg
xor
or
loop
aaa
and
dec
lods
add
stos
nop
sarl
aam
inc
movsb
pop
inc
jl
pop
inc
inc
cmp
test
pop
or
mov
add
aad
mov
jo
pop
xchg
lahf
xlat
nop
rolb
das
xor
frndint
xchg
push
test
ss
adc
add
dec
dec
dec
mov
andl
xchg
pop
popa
and
add
dec
push
dec
inc
pop
rcrl
das
insl
dec
push
cmp
pop
pop
xor
xchg
push
jl
or
sbb
inc
mov
out
mov
stos
sub
inc
jnp
subb
push
pop
add
dec
outsl
mov
jle
mov
push
imul
cmp
adc
lret
insl
add
fcoml
xchg
pop
push
sub
mov
enter
decl
or
int3
adcl
mov
jp
insl
push
inc
adc
pushl
inc
and
sbb
mov
mov
outsl
adc
adc
aam
cmp
cmc
outsl
mov
xchg
pop
nop
sub
int3
ror
add
push
cmpb
sbb
test
or
shlb
inc
lods
pushf
push
mov
arpl
aam
and
lret
push
jmp
mov
popa
je
sub
push
mov
mov
xor
subl
jle
xchg
ss
cmpsb
lods
xchg
rclb
imul
in
ficoml
stos
loop
push
cvttps2pi
dec
xor
dec
push
cld
mov
dec
adc
mov
and
ret
scas
sbb
insl
mov
fst
push
sub
push
jbe
decl
gs
in
jp
pop
sahf
pop
sub
xor
fnstsw
movsl
inc
stos
cmp
in
or
lcall
pusha
aam
mov
stos
xchg
sbb
movsb
arpl
sbb
inc
xchg
jae
push
mov
sbb
test
in
pop
icebp
pusha
mov
mov
xchg
enter
pop
jbe
daa
jae
js
or
jmp
sti
and
in
adc
sbb
in
jg
cld
push
iret
sbb
jbe
pop
test
push
xor
test
arpl
or
lock
jp
pusha
mov
add
adc
stc
mov
adc
fbld
ss
gs
lock
pop
cmp
adc
andl
jge
xchg
jg
or
movsl
push
and
dec
out
pop
aaa
insb
decl
inc
cld
decl
mov
inc
pop
pop
add
fadd
pop
adc
pop
outsb
test
and
test
add
mov
in
movsl
out
outsl
pop
adc
out
cmp
or
scas
inc
mov
xor
mov
scas
fs
jmp
outsl
outsb
push
or
addr16
rcrl
enter
mov
pop
push
fisttpll
pop
fldl
iret
sub
add
dec
sbb
pop
sub
pop
sti
mov
xor
push
inc
sub
pop
push
movzbl
jns
push
clc
adc
jne
insl
aaa
cmp
push
mov
incl
lea
insl
dec
or
sbb
pop
jae
adc
or
xchg
pop
dec
fcmovb
imul
enter
pop
or
xor
cmp
test
add
out
ljmp
aaa
add
jb
lahf
pop
shlb
insl
lock
dec
sahf
pop
popf
aaa
push
mov
popa
clc
jnp
dec
in
mov
mov
dec
rcrb
jle
dec
fdiv
jmp
adc
and
mov
cs
and
xchg
or
xor
dec
xchg
rcrb
mov
jno
and
cmp
adc
dec
jo
or
fbstp
mov
out
mov
mov
xlat
fcomp
gs
mov
mov
jecxz
pcmpgtd
fistpl
in
test
jb
cmpsl
mov
mov
add
sub
call
inc
mov
mov
inc
lock
dec
pusha
popa
xchg
sbbl
cmpsb
mov
sub
dec
test
xchg
mov
test
cmc
dec
js
in
adc
insl
sub
das
and
cltd
inc
mov
or
pushf
mov
movb
aaa
fidivrs
xor
nop
js
mov
arpl
not
and
call
add
fmul
push
xchg
cmpl
mov
push
ds
lea
out
pushf
add
loop
mov
sbb
and
adc
clc
stc
cltd
fldt
subb
sub
ja
jae
int3
fstl
adc
pop
lcall
xchg
push
sbb
sbb
pop
mov
inc
xor
sahf
fsts
sub
sbb
ja
mov
hlt
mov
add
in
xchg
lcall
loop
mov
leave
sbbb
inc
and
mov
shll
push
jg
jge
xor
and
lahf
rorl
sbb
lods
push
insl
jmp
test
arpl
push
mov
jae
clc
or
sub
aad
push
loope
hlt
sbb
pusha
dec
testl
mov
add
mov
or
adc
push
je
jns
push
call
mov
js
add
cmp
popa
inc
and
pop
mov
outsb
test
add
jle
popf
ds
inc
call
sub
and
adc
mov
clc
mov
xor
jbe
popf
mov
pop
sub
sbb
mov
jge
jl
ret
aam
rcr
mov
mov
cwtl
pop
repz
mov
fidivrs
and
sub
add
pop
inc
sarb
test
jle
stc
cmp
mov
je
push
enter
loopne
xor
push
test
fnstenv
and
clc
cwtl
xor
mov
in
in
neg
xchg
stc
enter
add
push
and
lcall
sbb
and
add
movsb
sub
pop
xchg
jp
cmp
inc
jl
and
loope
sbb
movsl
popf
and
push
jl
test
test
lcall
mov
es
aaa
mov
mov
sub
int3
cmp
int
mov
push
lock
icebp
in
fwait
mov
dec
ds
js
cld
jno
sbb
icebp
sbb
in
stos
mov
pop
mov
loope
and
cmp
dec
or
jp
std
lock
dec
mov
add
mov
push
aam
jle
jmp
insb
adc
clc
push
idivl
and
ds
fildl
ss
fcomip
nop
outsl
icebp
or
jl
ja
bound
mov
ljmp
insl
push
stc
out
cmpsb
aam
push
andl
inc
sub
icebp
or
adc
push
sbb
sub
adc
test
pop
mov
addb
cmp
and
mov
nop
sti
adc
fucomp
lea
cmp
jo
dec
pop
dec
mov
int
or
aas
fcmovbe
imul
cwtl
test
xor
add
pop
cwtl
add
adc
xchg
mov
mov
in
adcb
loopne
bound
adc
scas
outsl
mov
ret
orb
pop
js
xchg
shrl
arpl
jnp
fs
movlps
mov
add
or
and
pushf
push
aas
sar
add
inc
imul
test
push
scas
int3
sarl
xchg
sbbl
mov
addl
icebp
arpl
fwait
test
test
aaa
and
rep
clc
test
or
xorb
adc
or
xor
clc
push
lock
sbb
inc
hlt
adc
jp
or
in
push
mov
out
fsubl
inc
lock
ljmp
xchg
dec
aas
stos
dec
xchg
push
fstpt
or
xchg
scas
xor
pop
fnstcw
mov
mov
lock
jne
in
int3
inc
test
stos
bound
lock
pop
insb
push
push
clc
jae
cmp
jg
mov
das
into
fcompl
xchg
lock
out
fdiv
pop
in
sbb
jecxz
jmp
add
rclb
push
cld
or
dec
cmp
ja
rcrl
clc
sub
mov
into
jmp
add
add
pop
and
or
fldl
sar
mov
imul
adc
setb
sub
push
je
sub
add
or
mov
add
or
xchg
not
and
jbe
scas
cmp
sub
dec
data16
lcall
and
cwtl
mov
sti
push
dec
repnz
jl
and
sbb
iret
inc
xor
aaa
mov
adc
adc
inc
xor
cwtl
in
cmp
pusha
shlb
add
add
rclb
sbb
push
roll
rcr
fimull
cmpsb
push
adc
imul
inc
rcrb
shlb
ret
push
lea
xor
or
enter
and
push
iret
cmp
and
jae
xor
add
mov
jb
lds
jmp
testb
or
into
or
mov
lock
push
loop
ss
inc
add
orb
iret
push
sbb
mov
push
add
cwtl
xor
mov
repz
inc
sub
lahf
add
adc
repnz
outsl
mov
dec
loopne
mov
inc
dec
insb
adc
sbb
mov
stc
xchg
and
test
or
mov
xchg
pop
xchg
test
xor
push
cld
or
loop
jns
imul
lcall
inc
xor
hlt
add
jnp
add
cs
pusha
and
dec
das
add
mov
xor
and
loopne
mov
dec
xor
push
insb
fldt
cmc
loope
or
insl
sub
fbld
rolb
and
pop
test
int
mov
dec
add
cld
fwait
and
cwtl
ret
cmp
out
xchg
pop
xchg
adc
mov
fsubr
xchg
xor
or
jecxz
cmp
jno
aad
shrb
call
mov
sbb
icebp
adc
aam
dec
inc
leave
rolb
fisubrl
or
out
add
dec
push
out
inc
sbbb
jnp
rol
pop
lods
mov
mov
push
js
sbb
mov
jle
cmc
or
jns
fiadds
test
jl
jae
popa
rclb
mov
cmpsl
int
inc
popf
jmp
fadds
push
mov
fbstp
rcrl
sub
inc
mov
mov
mov
mov
std
xchg
les
add
sbb
mov
jbe
jne
push
xchg
stos
rcll
or
push
or
add
mov
rorl
mov
push
jp
aas
push
mov
push
pop
or
data16
jne
int3
jmp
test
and
shl
pop
push
stc
push
mov
jecxz
push
pusha
add
out
mov
mov
cmp
inc
pop
inc
cmp
bound
nop
cmp
pop
insl
mov
lea
add
das
in
insl
je
lahf
inc
aaa
pop
cmpsl
movsl
xor
std
test
cmpl
dec
cld
inc
aaa
je
jae
addl
lods
jge
add
out
jbe
adc
arpl
sub
imul
adc
pop
out
add
lcall
icebp
and
ljmp
nop
adc
stc
pop
mov
push
mov
cli
insb
push
fadds
testb
mov
testl
push
ja
int3
lahf
xlat
rolb
jp
test
test
xor
xor
mov
jbe
movsb
sbb
xchg
dec
popf
mov
repnz
mov
sbb
mov
adc
gs
dec
fadds
lods
shlb
sbb
jnp
popa
xchg
xchg
in
or
stc
mov
test
rcr
adc
mov
lock
jp
inc
mov
pop
scas
xor
fwait
mov
fimull
pop
sub
sub
fdivr
rorl
pusha
adc
sub
push
sub
pop
inc
pop
out
jge
in
push
or
in
push
mov
lods
push
outsl
sub
inc
cli
xchg
insb
test
bound
sbb
leave
xor
inc
popa
add
jg
pusha
test
ss
inc
sub
xor
loope
or
adc
sbb
incb
pop
pop
fsubrl
out
andl
data16
ss
cmp
add
pusha
and
out
dec
cmp
adc
pop
bound
push
cmp
icebp
outsb
testl
and
mov
in
mov
bound
sub
adcl
xchg
xor
add
cmp
sbb
or
sub
int
in
fndisi(8087
add
inc
and
fisubrs
mov
pop
mov
sbb
adc
mov
add
jbe
loop
out
pop
icebp
pop
stc
ljmp
addr16
mov
movsl
loop
pop
add
pop
add
ss
sbb
cmp
data16
outsl
dec
cmpb
xor
mov
adc
add
dec
mov
clc
mov
fisubrs
loop
pop
and
addr16
aam
cmp
cwtl
adc
add
lcall
add
fiaddl
push
push
and
call
ret
jns
sbb
adc
mov
repz
pushf
mov
insb
pusha
insb
push
push
lret
add
mov
adc
fdivrp
add
pop
adc
test
cmp
inc
add
jg
mov
or
fists
mov
lods
xor
test
jecxz
lock
bound
cmc
stos
test
icebp
jg
sub
jne
pusha
sub
push
push
dec
mov
mov
mov
lds
jecxz
push
pop
repnz
in
sub
jnp
pop
push
cmp
sarl
mov
or
sbb
xchg
fildll
or
mov
movsb
push
sub
out
xor
shll
movsl
fldenv
jo
arpl
fldenv
or
push
sbb
hlt
mov
ret
jnp
cmp
mov
cmp
pop
in
inc
jo
mulb
stos
mov
mov
lods
push
int3
xor
or
orl
movsl
pusha
pop
xor
add
cmp
inc
or
cwtl
adc
add
mov
data16
mov
aam
or
or
loop
pop
sbb
cmpsb
and
add
sbb
mov
mov
fcoml
or
cmpsb
push
addr16
out
jl
xor
adc
inc
pop
adc
or
sub
icebp
jl
or
cltd
shrb
xor
mov
aam
scas
pop
scas
fisubrs
adc
sbb
jecxz
adc
fsubs
mov
xor
dec
hlt
fists
ds
in
ja
pop
add
lock
sub
sub
repz
dec
add
cld
les
inc
insb
pop
dec
roll
dec
jge
cwtl
lock
inc
and
in
cmpsb
dec
aas
push
mov
push
sbb
sub
sar
inc
add
cmp
xor
lds
add
in
and
xor
shl
je
cwtl
aam
add
xor
jecxz
push
adc
div
jb
sub
test
jo
mov
mov
mov
in
push
xchg
inc
mov
jo
adc
sti
into
mov
testl
scas
sbb
push
or
dec
clc
mov
inc
daa
xor
into
fcompl
imul
call
in
ret
dec
les
rcll
adc
icebp
mov
pusha
dec
fildl
ficoms
or
fstpl
lret
adc
shlb
into
push
fcmovnbe
adc
or
sub
cwtl
or
in
jge
lock
fimuls
les
mov
push
pop
hlt
decl
adc
push
jle
xor
push
sbb
scas
jle
mov
xor
cltd
mov
sbb
jns
add
xor
fs
dec
push
clc
jge
insb
mov
adc
cmp
jne
pop
mull
xlat
sub
mov
insl
inc
fsts
int
push
fcompl
enter
push
pmulhw
add
dec
xorl
or
in
add
daa
call
out
xor
dec
and
pop
loope
aas
test
jae
mov
adc
and
idivb
sub
fsubrs
ja
xlat
cmp
dec
push
add
mov
push
and
dec
mov
fdivl
sahf
imul
pop
sub
fists
add
into
push
inc
sbb
pop
clc
add
ss
aas
xchg
push
movsl
mov
insb
adc
lods
aaa
add
mov
add
or
add
inc
add
ret
lahf
jno
xor
pushf
adc
int3
push
icebp
jne
ret
aaa
imul
mov
fidivs
loope
push
in
stos
out
stos
stc
adc
test
inc
or
sahf
push
jb
or
fildll
add
faddl
push
mov
xchg
dec
shlb
lahf
add
adc
int3
push
jmp
nop
lock
push
ds
rolb
or
arpl
ss
mov
dec
mov
lods
push
sbb
int
pusha
lds
fcmovnbe
clc
sbb
insl
inc
je
les
lahf
dec
mov
pusha
test
xlat
push
mov
xchg
add
sbb
enter
pop
ffreep
inc
xor
push
orb
hlt
xorb
pop
push
add
dec
popa
sbb
out
jne
mov
xlat
fidivl
add
mov
orb
decl
mov
mov
shl
adc
test
rclb
push
sbbl
test
or
in
mov
stos
lcall
and
faddp
out
xorl
ja
js
mov
out
lds
inc
and
sub
dec
sti
jnp
inc
popa
add
pop
mov
lahf
test
sbb
std
repnz
lock
test
pushf
cmp
or
and
sbb
insb
or
subb
popf
loopne
aam
repnz
mov
adc
sub
int3
test
pushf
cmp
push
je
test
xlat
clc
or
out
or
adc
enter
punpcklbw
into
lods
pusha
stos
push
xor
adc
jae
inc
aam
out
repz
out
sbb
jl
xchg
das
jl
mov
push
dec
or
and
int3
sub
and
fsubs
push
popf
push
xchg
jne
pop
adc
and
mov
lock
sbb
sub
icebp
hlt
pusha
push
adc
fwait
sbb
xchg
lock
adc
pop
sub
xor
inc
fs
inc
add
sub
scas
pusha
add
psllq
aaa
loope
mov
in
pop
mov
push
or
add
xchg
xchg
xor
adc
imul
add
mov
add
dec
or
imul
add
lods
add
stc
stos
add
adc
sti
adc
adcl
mov
fisubrl
inc
or
out
mov
mov
and
aad
cs
popl
loopne
inc
mov
xor
mov
sub
sbbl
fadds
xor
fucomip
or
jae
mov
data16
add
call
insb
or
add
mov
sarb
pop
add
nop
test
mov
ffreep
add
xor
mov
ljmp
fisttpll
xor
repz
jg
cmpsb
bound
add
adc
adc
aaa
dec
pop
popf
mov
out
or
int
iret
dec
sti
mov
mov
mov
xchg
jg
or
add
adc
sbb
addr16
ljmp
inc
adc
js
into
pop
sbb
clc
jo
add
ljmp
mov
mov
xor
imul
sti
add
mov
std
jg
int
clc
incl
mov
dec
inc
sahf
or
sub
decl
and
cmpsl
shrb
add
das
add
dec
adc
call
jo
rclb
xor
aaa
test
sub
dec
mov
jecxz
dec
testb
and
cmp
and
mov
sub
imul
pop
sar
add
xorl
notb
mov
mov
outsl
cs
jno
lods
test
inc
pushl
add
add
cltd
gs
rorl
add
pop
aam
hlt
popf
addr16
mov
sub
ljmp
xchg
scas
mov
cwtl
dec
mov
sub
lcall
or
or
repnz
outsl
test
xor
gs
jae
test
sbb
ret
mov
mov
jo
loop
add
pop
fildl
lods
add
scas
add
incl
fcmovnbe
pushf
loope
adc
std
and
add
jg
xchg
outsb
shll
inc
inc
sti
mov
add
lahf
pusha
test
mov
adc
jg
xchg
test
jno
inc
fisubrl
jge
aam
and
mov
ss
cmc
push
xor
test
mov
loop
outsb
pop
add
les
das
rcrb
ret
mov
fists
pop
sub
xchg
inc
mov
ss
or
push
pusha
faddl
test
sbb
out
rcr
ds
js
cmp
iret
fs
mov
pop
push
xor
jbe
jnp
dec
ja
mov
dec
pop
and
jg
call
sbb
cmp
bound
les
lret
add
into
jb
shll
xor
into
cmpsb
mov
sarb
and
notb
popl
mov
test
je
loopne
pop
or
jge
pop
xchg
sti
dec
jg
aad
aad
enter
pop
pop
loope
push
pop
sub
loop
js
add
mov
pusha
add
ret
into
bound
divl
setg
push
icebp
lds
in
hlt
jmp
dec
lahf
pop
mov
in
inc
lcall
mov
cmpsb
add
pop
mov
loopne
add
xor
outsl
popf
dec
in
ss
stos
dec
loopne
add
cld
and
add
mov
ljmp
mov
and
cmp
jne
mov
ljmp
call
mov
mov
call
and
lock
push
add
xchg
pop
in
sti
pop
fildll
mov
pop
jle
stos
pop
fildll
mov
aaa
js
mov
or
adc
std
inc
loop
mov
loopne
sub
mov
loope
cwtl
inc
pop
jnp
sbb
sbb
jno
stos
out
outsl
mov
adc
fcomps
shr
les
stc
testb
pop
jge
inc
mov
jae
push
or
lret
adcb
clc
ljmp
das
dec
jp
arpl
mov
xor
jecxz
dec
jg
mov
jg
leave
test
sub
test
pusha
loop
inc
das
icebp
mov
iret
cmp
pop
clc
pop
sub
mov
insl
add
notl
add
out
pop
mov
pop
outsl
shlb
sbb
pop
adc
pop
movsb
in
pop
int3
sbb
clc
pushf
clc
jg
mov
fcompl
pop
mov
add
or
insl
fucom
dec
and
repz
arpl
push
and
inc
push
and
jmp
gs
testb
cli
out
pop
jge
js
loopne
jmp
xchg
shrl
xchg
or
add
xor
data16
lret
cltd
sub
mov
dec
and
push
pushf
call
ja
mov
pop
jo
xchg
mov
or
jbe
adc
or
insl
push
jo
daa
out
adcl
jmp
jg
sbbb
movsl
loopne
adc
dec
mov
mov
jg
ds
or
cmp
xchg
iret
rorb
xchg
mov
in
adc
ret
test
andb
xor
xor
fmull
shll
mov
add
xor
adc
and
pop
mov
push
out
mov
iret
lret
lods
aad
test
cmp
adc
cli
sub
daa
mov
imul
push
add
jae
mov
jno
jns
mov
push
out
add
test
lods
mov
jmp
sub
mov
push
inc
mov
ficompl
jp
lret
imul
or
scas
gs
jnp
fnstenv
call
nop
inc
pop
stos
mov
test
mov
jo
add
pop
js
pop
jg
mov
and
imul
lret
inc
dec
push
stos
into
mov
jo
in
adc
jl
or
jmp
push
fidivrs
movsb
enter
lret
movsl
out
lods
cmp
fstl
sub
ret
xchg
push
sbb
pusha
add
or
cmp
icebp
lods
push
dec
fs
add
sbb
inc
jb
and
shlb
stc
sbb
mov
add
push
dec
ja
ss
mov
call
scas
lds
lret
js
clflush
inc
mov
fsubp
xchg
movsl
jmp
bound
and
jmp
jg
aaa
cld
mov
adc
push
iret
xor
ss
mov
jmp
mov
roll
mov
adc
cmp
inc
jp
loope
sub
mov
and
fiaddl
dec
js
fstp
lcall
imul
imul
out
lods
dec
mov
and
es
test
dec
out
gs
stos
jnp
clc
mov
fcomip
fisttpl
or
jnp
add
inc
cmp
lahf
scas
cwtl
insl
and
jg
and
dec
ret
push
hlt
and
sahf
mov
sti
decl
push
mov
test
push
xor
test
adcl
cmpsb
enter
or
inc
push
mov
pop
loope
in
aaa
sbb
jb
rcrl
cltd
add
lock
jecxz
push
xor
xchg
call
jp
pop
fstpt
repnz
inc
das
xor
jmp
and
lock
fdivrl
lods
repz
mov
ljmp
xchg
out
lock
arpl
adc
fnsave
data16
test
test
adc
ljmp
mov
jo
inc
xorb
mov
test
push
and
pusha
and
jl
cmp
loopne
addr16
and
or
ret
jg
lret
and
push
sbb
push
loop
call
sbb
pop
mov
pusha
hlt
and
push
cmp
xchg
add
or
push
or
add
mov
mov
xor
and
daa
enter
push
clc
ja
sub
outsb
inc
inc
fisubrs
push
scas
shrl
sub
mov
sbb
test
shl
pop
addl
out
push
dec
les
xchg
js
rolb
xchg
ret
dec
push
out
dec
enter
repnz
add
out
or
stos
ljmp
push
adc
sub
int
add
dec
inc
and
mov
cmpb
popf
and
jge
into
adc
ficomps
adc
add
or
cmp
test
mov
sbb
lods
adc
adc
pop
xor
shrl
iret
adc
or
sub
xor
sbb
mov
add
dec
add
add
cli
adc
cmpsl
pop
inc
mov
sbb
pusha
loope
sbb
lahf
inc
cmp
adc
in
mov
cmp
je
xor
sbb
out
mov
arpl
mov
mov
mov
imul
xor
fsts
sbb
mov
jmp
insb
test
movsb
mov
cmp
push
clc
test
inc
scas
movsl
sarl
or
fnstsw
and
bound
inc
lods
xchg
flds
adc
movsl
mov
aam
sbb
and
push
sahf
jp
or
sub
test
icebp
pusha
xor
inc
int3
dec
aas
inc
push
clc
cmpsl
pop
jl
cmpb
sbb
addb
jecxz
ret
mov
xchg
mov
mov
xor
jne
add
stos
aaa
stos
and
push
cmp
rcrl
cwtl
add
pop
adc
xor
ret
pop
mov
dec
jg
dec
inc
add
adc
xchg
test
cmp
or
int
mov
rorb
pop
sbb
loopne
shrb
add
add
popf
repnz
repnz
dec
mov
aad
fldt
mov
stc
adc
mov
add
clc
dec
aaa
sub
mov
push
les
insb
push
add
push
push
add
mov
dec
shl
clc
ret
stos
mov
aad
inc
cmp
addl
mov
mov
sbb
add
sbb
add
ret
xchg
sub
inc
out
pusha
push
dec
test
push
adc
pusha
ss
mov
xchg
or
xchg
inc
rolb
andl
adc
cld
sbb
jecxz
lret
sub
jmp
insl
jmp
sarl
pusha
and
mov
sbbb
je
and
testb
ja
xchg
adc
jg
insb
mov
mov
arpl
sbb
push
add
xchg
sti
mov
movsl
ss
movsl
outsl
sbb
std
in
dec
andb
and
mov
pusha
dec
xor
inc
mov
add
jecxz
push
mov
cmp
and
in
ficoms
mov
shl
sub
push
popa
dec
repnz
loopne
mov
add
mov
or
lcall
mov
mov
lret
or
cmc
push
outsb
xor
lea
mov
jmp
push
adc
lds
adc
shrl
cmpl
push
in
xchg
push
lahf
js
push
push
sub
push
sbb
push
add
fldt
jnp
test
out
mov
std
pop
pop
pop
inc
sbb
ds
add
add
pop
loop
pop
movsl
test
rorl
xor
ss
rep
nop
and
pop
or
insb
dec
mov
mov
adc
cmc
sbb
lea
leave
add
test
dec
inc
fildll
or
dec
fs
sbb
setnp
sub
xchg
cmpsb
sub
mov
lcall
push
leave
mov
insb
shl
sbbb
sub
ja
mov
mov
loop
fbstp
rclb
test
sbb
cmp
cmp
mov
or
lret
mov
pop
lcall
adc
jbe
mov
fwait
pop
mov
jbe
xchg
cmp
xor
pop
addr16
out
das
mov
mov
inc
jge
stc
or
adc
mov
mov
sbb
sti
cli
inc
adc
stos
sub
es
and
sub
inc
lock
lea
sbb
das
push
or
mov
sbb
call
jg
pop
lods
insb
add
aaa
jb
cmp
sub
icebp
addr16
lea
int3
xchg
inc
out
filds
mov
lods
add
and
push
dec
sbb
outsl
xchg
jp
cmc
imul
or
mov
jp
jp
push
outsb
and
ljmp
loop
leave
sub
inc
adc
adc
cltd
and
and
lods
mov
call
inc
cmp
clc
pop
sbb
pop
sahf
sarl
out
cmp
dec
mov
and
push
inc
or
faddp
test
fmull
enter
xor
testl
shlb
sub
pop
ret
sub
sarl
inc
hlt
add
les
cli
fnstsw
cmp
mov
ja
lcall
stos
sub
cmp
push
jecxz
outsb
cmp
pop
add
mov
rcll
push
xchg
lahf
sbb
or
xchg
loop
sbb
mov
shlb
sbb
rol
xchg
sahf
shrl
xor
mov
mov
cmpsb
lock
sub
movsl
inc
inc
scas
pop
cmpsb
pcmpeqw
dec
mov
or
sbb
das
add
dec
shr
jo
les
or
push
mov
fs
lret
lock
sbb
sbb
es
adc
aam
scas
aad
ds
fucomip
std
out
stos
jle
xor
or
lock
out
pop
adc
sbb
loop
dec
mov
sub
cli
pop
aam
add
mov
xchg
push
cs
mov
or
xor
inc
call
inc
add
xchg
or
lods
push
mov
sub
roll
mov
shrb
and
mov
adc
and
or
xchg
popf
jecxz
or
dec
insb
add
pop
mov
and
dec
cmc
int3
or
sub
shlb
xor
xor
mov
stos
cmp
and
add
or
leave
mov
cmp
loope
mov
and
daa
pop
push
aaa
pop
jo
mov
lcall
cmpb
push
dec
mov
dec
adc
mov
adc
test
and
lock
dec
push
dec
pop
daa
add
mov
leave
loopne
stos
cli
incl
sbbb
test
push
jb
arpl
aas
cmp
shrb
push
and
xor
incl
or
and
mov
data16
pop
nop
ret
clc
mov
xchg
fldl
jb
mov
adc
and
sub
push
stos
pop
or
inc
andl
sub
pop
and
add
push
out
mov
or
cld
cmp
aas
xchg
push
mov
testl
dec
shll
stc
cli
decl
pop
aas
insl
or
dec
xor
into
mov
or
aam
adc
das
fldl
cmc
mov
mov
fwait
add
pop
dec
pop
out
pop
imul
sbb
adc
jae
dec
sub
sub
mov
jg
pop
pop
cmpsl
aam
bound
add
dec
cmp
cmpsb
movsb
sti
mov
dec
or
mov
jb
rcrl
fisubl
loope
and
xor
adc
in
add
mov
mov
push
pop
pusha
sbbl
adc
std
test
sbb
mov
sbb
pop
repz
lea
or
push
ffreep
xor
sti
movsb
inc
cmp
incl
jg
jnp
adc
jns
cmp
jmp
leave
mov
ss
insb
and
pushf
xor
adc
cmp
js
xchg
xchg
push
push
into
add
inc
loope
ljmp
shlb
inc
xchg
push
jmp
xlat
shrb
popf
push
shrb
cmp
jl
lods
push
lds
inc
inc
mov
mov
scas
repz
daa
testb
inc
mov
daa
push
cwtl
sbb
xor
push
clc
ss
les
inc
lock
dec
or
cwtl
insl
add
jg
inc
and
pop
outsl
mov
ficompl
outsl
mov
and
push
pushf
insb
ljmp
pop
add
dec
dec
jae
inc
clc
sbb
push
jle
dec
pop
add
cwtl
mov
cli
fistpll
gs
inc
scas
jmp
xor
jg
ja
cltd
push
fstl
add
inc
mov
fildll
cmpsb
fistpll
mov
mov
andb
and
imul
jecxz
lret
pop
inc
mov
sbb
adc
fisttps
dec
xor
jbe
aaa
mov
xor
ret
loop
and
loop
add
jo
divb
push
pop
inc
insl
lods
outsl
sbb
pop
inc
adc
push
dec
cmp
movsl
and
test
nop
xchg
pop
push
insb
nop
jo
and
push
sub
mov
jmp
jl
imulb
push
imul
jle
gs
jg
iret
std
mov
bound
and
sub
ljmp
cmpsl
fwait
add
adc
cld
push
xor
xchg
fcomp
fwait
inc
outsl
std
incl
mov
mov
jle
mov
repz
dec
push
lods
js
xchg
pop
xchg
jg
es
enter
mov
jb
outsb
cld
mov
dec
xchg
pusha
enter
lods
enter
jne
insl
push
popa
leave
mov
sub
mov
jne
or
lret
fs
pop
pop
mov
jl
push
dec
outsl
jmp
or
aas
xchg
loopne
push
mov
arpl
sub
cli
push
inc
loopne
sbb
xor
mov
insb
push
orb
scas
es
movb
test
das
rol
inc
dec
in
adc
mov
push
fcmovb
add
clc
pushl
lock
fcmovne
pop
mov
mov
jne
fiaddl
sbb
inc
dec
imul
jge
movsl
push
lods
filds
sbb
jge
inc
adcl
jle
mov
outsl
js
test
sbb
enter
testb
adc
cmpsl
mov
mov
adc
push
ljmp
jne
cmp
xor
js
mov
mov
adc
rcrb
mov
push
xchg
inc
cli
fisubrs
jecxz
pop
mov
pop
call
sub
xor
adc
cmpsb
and
inc
or
push
xchg
pop
mov
je
mov
jmp
out
test
mov
sbb
rolb
pop
rol
xor
adc
or
cmc
stos
xor
aam
push
dec
mov
cmp
sahf
loope
jg
push
lea
mov
xor
or
inc
inc
stc
or
xor
pop
pop
pusha
lods
les
pop
xor
or
out
mov
repnz
scas
or
jno
rclb
adc
or
add
adc
in
call
imul
xchg
mov
and
mov
cwtl
imul
add
push
fstps
adc
insb
mov
scas
mov
shlb
mov
notb
test
push
cmpsb
pop
xor
push
mov
outsb
std
je
pop
mov
jg
daa
add
stos
push
or
dec
sahf
fbld
pushl
popa
adc
in
mov
loopne
outsl
push
hlt
enter
sbb
es
xchg
leave
xchg
aaa
sbb
mov
std
jge
lds
andb
nop
cmp
ds
mov
jl
icebp
movsb
bound
or
dec
enter
scas
fistpll
jecxz
test
loopne
sub
mov
pop
dec
aaa
cmp
clc
sub
mov
jecxz
incl
or
xchg
lock
sub
and
pop
stos
js
push
bound
jle
xchg
push
or
pop
in
pop
dec
dec
lret
jns
pop
mov
xor
push
nopl
lea
loope
or
adc
pop
mov
fsubrp
dec
popa
mov
mov
jg
xadd
cwtl
inc
in
add
jno
test
andl
aas
sub
sbbb
aad
and
mov
xchg
ja
sub
sbb
mov
sbb
out
jbe
rorb
lahf
cli
xchg
inc
or
dec
gs
sbb
cld
jl
xchg
adc
push
sbb
ja
pop
mov
cmp
xchg
or
and
or
ret
adcb
cmp
cmpb
jmp
daa
jmp
popl
js
mov
pusha
inc
mov
cmp
xchg
jg
sub
cmpsl
test
test
pop
shr
or
cltd
decl
pushw
jge
add
jl
jo
mov
inc
repnz
out
shrl
sarb
into
pop
push
push
or
lock
pushl
fstpt
xchg
jo
out
pusha
and
test
add
mov
clc
outsl
clc
cmp
bound
xchg
sbb
mov
fistps
rcll
pop
pop
leave
xor
push
popf
cs
dec
lahf
xchg
call
and
ret
cld
inc
mov
mov
out
push
or
test
ret
mov
add
js
fisubrl
xor
jbe
std
xchg
jmp
push
aas
pop
push
xchg
pop
lds
es
pop
push
lret
lea
dec
rolb
mov
mov
lock
scas
inc
push
xor
icebp
movsl
mov
or
clc
outsl
add
push
popa
shl
inc
je
cs
mov
stos
sbb
xlat
fs
jle
mov
and
shll
shl
mov
mov
xchg
mov
pop
std
pop
faddl
inc
lahf
cli
ret
ret
cli
mov
pop
mov
or
add
mov
fwait
jp
pop
cmp
mov
stos
xor
imul
loop
aad
or
jmp
fdivrs
inc
add
popl
in
push
add
cli
lods
stc
pushl
shrl
std
dec
test
pop
es
lahf
sahf
sbb
fildll
mov
push
pop
lea
or
std
in
outsl
in
pushf
add
pushl
xor
das
icebp
mov
inc
jge
xor
dec
sahf
inc
lcall
inc
out
sbb
add
outsl
adc
mov
adc
aas
inc
lea
insb
pop
lret
leave
push
adc
xchg
fstpt
mov
hlt
fildll
jge
rclb
jae
icebp
xor
dec
test
mov
push
mov
lods
xchg
andb
xchg
and
int
std
filds
and
outsb
push
inc
xchg
xchg
mov
fwait
xchg
mov
push
in
add
mov
inc
and
mov
xor
outsb
sbb
mov
dec
dec
in
js
subb
ds
push
pop
test
cmp
lock
sub
xorl
pop
mov
and
or
in
jl
or
fcmovbe
cmc
mov
cmp
in
sbbb
xchg
mov
pop
push
aam
fisttps
nop
sbb
mov
in
mov
push
mov
stos
arpl
pop
jg
jecxz
add
iret
je
movsl
adc
mov
sbb
imul
lcall
cmc
movsb
mov
enter
and
xor
ljmp
adc
sub
push
mov
rol
mov
jnp
dec
xor
or
or
push
mov
clc
dec
out
insb
insl
adcl
icebp
mov
das
mov
adc
adc
outsb
or
pop
lret
sub
lds
outsl
fldt
fsubl
and
js
shrl
cltd
popf
add
push
mov
das
stos
pop
xor
lahf
andb
mov
inc
cmp
push
mov
sub
add
adc
std
dec
rcll
mov
test
mov
popf
push
jae
inc
jecxz
mov
lock
fs
jl
das
mov
inc
or
ficompl
add
push
ficompl
or
or
movsb
pop
adc
inc
movsl
popa
and
xchg
pop
test
jo
ljmp
sbb
xchg
loop
sbb
dec
xor
lds
aas
inc
lcall
add
push
sbb
sbb
es
sub
add
xor
dec
push
push
dec
push
sbb
cmp
int
or
add
or
push
sub
or
aas
add
sarl
pop
lods
stos
cwtl
sbb
lock
aad
or
sbbb
js
minps
sub
out
pusha
sub
mov
pop
pop
aaa
pop
adc
xlat
cmp
cmpb
mov
xor
push
and
stos
push
repnz
in
insl
mov
and
lahf
or
mov
dec
sub
jae
faddl
add
adc
in
inc
xor
add
push
adc
sub
push
mov
insl
push
in
xchg
pusha
inc
push
std
aas
aam
js
pop
mov
or
xorl
push
jecxz
ljmp
sub
stos
xchg
add
mov
int
rclb
mov
mov
push
movsb
daa
xchg
les
daa
loope
adc
mov
pop
test
push
ds
loope
mov
jo
and
adc
add
adc
fwait
mov
cli
subb
iret
inc
loopne
cmp
push
daa
or
in
lret
loope
jge
and
repz
sarb
adc
flds
testl
or
int
and
mov
adc
adc
lds
adc
mov
pop
push
out
and
sub
das
aad
sub
fwait
test
mov
in
jne
scas
inc
sub
add
test
or
je
jbe
rol
push
fs
and
dec
and
mov
pop
mov
lods
aam
pop
and
lcall
dec
mov
adc
mov
inc
mov
or
xor
into
jne
sbb
xchg
mov
xchg
push
mov
loopne
shll
or
loop
dec
add
clc
lret
push
inc
inc
sub
adc
insl
mov
popa
or
ffreep
cld
pop
adc
push
inc
cmp
ja
loopne
xorl
pop
xor
mov
sbb
mov
sahf
mov
clc
sub
mov
dec
call
ljmp
push
fs
fcmovu
clc
fmuls
icebp
jae
xor
fldenv
adc
add
test
and
cmp
icebp
xchg
ss
or
jp
push
cmp
add
popf
adc
adc
std
adc
out
std
pop
test
clc
or
mov
lods
mov
in
jne
adc
imul
xor
or
push
mov
add
push
in
gs
push
lea
loopne
and
or
mov
ljmp
add
data16
iret
inc
pop
jo
fisubl
sub
jae
push
dec
lock
aad
or
cmp
aad
mov
push
in
les
and
fnsetpm(287
sbbb
stc
adcl
fcoml
ds
jl
dec
repz
or
and
mov
inc
adc
push
fbld
inc
aam
jmp
nop
loope
iret
mov
loopne
mov
adc
pop
loope
inc
pop
outsl
push
jge
and
mov
jg
mov
js
push
clc
inc
cld
negb
mov
call
xchg
out
call
pop
push
xchg
dec
add
dec
out
test
fists
call
add
fsub
fisubrs
and
and
inc
sti
push
out
mov
push
jne
mov
sub
mov
fisttps
pop
xor
stos
pop
loop
xchg
mov
arpl
daa
aas
adc
in
inc
fmul
js
adc
pop
adc
pop
clc
sub
cmpsl
das
sub
loope
loopne
sbb
or
dec
jo
pusha
mov
out
stos
pop
ffreep
cmp
lea
xchg
ret
outsl
dec
repz
popa
orb
test
idivb
andl
ds
xor
mov
movsl
jbe
aaa
cmp
pop
cmpsb
and
subb
add
sub
cmp
or
insb
push
in
fildl
das
mov
in
inc
into
push
or
in
pushl
pop
jmp
ss
jle
jae
inc
shr
pop
jecxz
xchg
adc
sbb
loope
add
in
lods
into
push
add
add
pop
in
js
cli
insl
imul
jb
ret
das
rolb
xchg
sbb
sub
fsubl
lret
icebp
in
push
mov
add
rclb
xchg
xlat
and
push
clc
out
andb
lahf
sti
or
or
mov
mov
jg
mov
push
movsb
mov
call
inc
pusha
cmp
bound
jg
xor
mov
push
iret
adc
scas
sahf
hlt
imul
testl
stc
inc
adc
mov
cmp
lcall
ror
decb
xor
jo
fidivrl
push
jecxz
incl
test
xchg
mov
adc
ds
int3
enter
sbb
push
cmc
pop
or
popf
sub
pop
mov
pop
and
icebp
repz
dec
scas
cmc
and
bound
mov
pop
fistpll
in
das
mov
sar
cmp
mov
ret
push
cmc
fwait
cmp
in
fs
and
jmp
mov
in
nop
fdecstp
movsb
pushf
mov
jg
cs
dec
lock
in
mov
inc
repz
push
test
adcl
and
decl
jle
mov
or
andl
mov
pop
fdivs
inc
pop
addr16
or
je
xor
fisttps
cmpsl
mov
into
jno
or
ja
mov
shl
push
call
aaa
adc
cmpsb
mov
lret
xchg
sbb
filds
mov
stos
and
or
sub
pusha
inc
out
or
ret
rolb
cwtl
aad
pop
or
fildll
mov
mov
xor
lcall
cli
popa
add
lret
out
mov
and
mov
sbb
pop
lds
ja
insb
inc
mov
dec
data16
pop
clc
jmp
add
enter
fsubrl
ds
or
pop
loopne
push
pop
jl
idivl
fldl
sub
dec
frstor
mov
imul
xor
mov
out
add
xor
jbe
lds
mov
bound
fildll
sub
jl
jmp
push
fstpt
dec
mov
aam
clc
mov
fisttpll
scas
dec
jg
mov
lods
mov
xchg
fstl
mov
and
daa
xchg
je
or
cs
sbb
push
cmp
inc
jno
pop
sub
in
mov
add
pop
push
xor
add
jb
int
leave
outsl
add
hlt
xor
pop
jg
adc
xor
leave
and
loope
std
outsl
je
test
aam
das
aas
dec
int
jno
dec
cmc
insl
lahf
pop
imul
leave
inc
and
jae
fwait
mov
push
fcomps
sub
xchg
and
and
repz
cmp
test
sti
push
dec
call
pop
cmc
aaa
loope
inc
jbe,pn
aad
mov
dec
jg
mov
inc
xchg
mov
mov
fcmovnbe
jns
xor
lods
adc
pop
jmp
add
xchg
loop
dec
mov
fists
or
out
xchg
push
xchg
dec
and
mov
and
push
mov
sbb
arpl
outsl
out
or
cltd
or
jno
mov
jl
pop
mov
mov
cltd
loope
xor
push
int
rcll
xchg
sbb
in
insl
add
bound
aad
lret
mov
push
adc
inc
inc
mov
ret
xchg
addr16
inc
add
sub
scas
mov
ljmp
pushf
es
je
in
dec
push
pop
test
pop
rcrl
push
testb
jnp
lods
add
das
mov
mov
add
outsl
test
add
je
int
push
std
push
cld
mov
ja
daa
sbb
outsl
mov
fwait
loope
mov
adc
push
test
mov
xchg
test
popa
mov
adc
mov
outsb
jp
adc
lock
cmp
jnp
mov
repz
pop
lds
insb
shrb
pop
and
xchg
or
imul
daa
and
rolb
sbbb
movl
cmc
xor
inc
and
mov
mov
adc
das
mov
jns
sbb
inc
es
inc
aaa
aam
rorl
xor
add
and
jo
adc
cmpb
adc
pop
cmp
into
mov
sub
dec
dec
jns
cmp
or
call
xchg
add
insl
pop
inc
or
lock
mov
sub
cmpsb
cli
and
and
xchg
sub
adc
adc
pop
sub
mov
jmp
and
adc
mov
push
call
out
add
jge
dec
insl
adc
xor
add
inc
and
mov
xor
pop
and
or
add
sub
call
xor
in
adc
add
and
aam
mov
imul
inc
xchg
xchg
je
add
test
xchg
push
add
sub
inc
ds
pop
addr16
xchg
pusha
lock
push
xor
push
sbb
test
mov
ficomps
and
cmpsl
es
lock
lcall
mov
cmp
xor
ret
jg
adc
cli
loop
sbb
roll
popa
push
adc
sbb
cs
pop
lret
mov
cltd
sub
mov
sti
outsl
fnstenv
out
jecxz
cli
dec
mov
aaa
push
shl
fcoml
std
mov
mov
imul
pop
rcrl
subl
push
ret
or
in
mov
shr
mov
add
add
and
movsb
adc
dec
mov
inc
jno
imul
add
cmp
sub
mov
sub
inc
cwtl
push
mov
mov
addr16
xchg
out
sbb
dec
movsl
pop
jo
movsl
cli
sbb
std
dec
ja
add
enter
push
push
test
inc
call
call
cs
call
pushf
cli
or
or
bound
push
gs
ja
shrb
mov
call
sub
pop
or
int3
in
inc
roll
sub
cmpb
adc
sbb
jp
sbb
fdivr
imul
inc
lcall
bnd
aaa
add
jne
mov
movb
repz
dec
insb
or
ret
aam
xor
subl
mov
dec
jo
add
movsb
xchg
jbe
das
hlt
sub
cmp
xchg
mov
mov
add
insl
dec
mov
data16
js
lock
or
mov
es
jb
fsubrl
pushf
loopne
mov
sub
mov
fcomp
pop
sbb
pop
jns
mov
mov
pop
cmp
xor
rsm
ds
or
and
inc
jl
inc
or
jmp
fwait
mov
cs
js
mov
aad
mov
enter
jo
shlb
loop
xchg
pop
add
icebp
pop
sbb
fists
inc
stc
or
or
repnz
pop
clc
pop
out
fildll
add
adc
sub
push
add
inc
sub
dec
scas
mov
dec
sbb
shl
adc
rol
dec
xchg
or
sub
sub
clc
dec
inc
mov
outsb
mov
inc
add
test
sub
shlb
sbb
inc
mov
inc
mov
inc
sbb
popa
mov
xchg
cmp
add
dec
lret
rclb
scas
fucom
cmp
xor
mov
test
cmpl
add
and
ret
call
fs
mov
addb
dec
push
stc
mulb
mov
sub
inc
dec
out
bound
add
dec
mov
and
popa
add
push
orl
inc
in
add
xorb
rclb
int
cmpsl
addb
xor
gs
in
cmp
dec
push
mov
mov
clc
push
mov
dec
icebp
cmp
pop
int
fwait
cltd
and
scas
dec
sbb
adc
push
in
out
sub
enter
fcompl
adc
or
mov
out
jae
xchg
out
mov
cli
loope
outsb
mov
and
pop
push
sbb
mov
adc
in
jo
mov
sub
add
stos
scas
popl
and
jb
ja
fsub
xchg
es
mov
loop
ljmp
push
mov
loopne
leave
ljmp
push
sti
push
pop
cwtl
adc
popa
rolb
xchg
jg
jl
cs
movsb
push
lahf
test
cltd
and
imul
in
pop
cli
call
ja
cmp
leave
cmp
aad
shrb
fmull
ret
and
nop
pop
ljmp
push
incb
fistl
inc
push
or
stos
fists
nop
push
or
adc
es
and
and
mov
pop
sub
int
js
mov
or
mov
lds
pop
jg
jl
jb
aas
enter
mov
mov
pop
xchg
cmp
mov
and
hlt
sbb
lret
les
push
icebp
jp
inc
mov
xchg
test
mov
cltd
or
in
sbb
sub
cwtl
or
sbb
lcall
in
mov
jle
xlat
adc
jecxz
pusha
lcall
lret
ljmp
add
pop
xlat
fists
add
std
lock
dec
loope
inc
adc
stc
addb
cmc
mov
or
jg
or
inc
jmp
jns
xor
mov
aad
mov
test
loope
decl
mov
orl
cmp
pop
mov
repnz
mov
stos
xlat
jnp
mov
dec
push
lock
loope
nop
ret
jbe
stc
dec
das
rclb
icebp
jmp
pop
pushf
sub
incb
push
xor
xor
xchg
jb
lock
movsl
cmp
test
xor
ljmp
jb
neg
mov
in
adc
dec
adcb
push
gs
cmp
movsl
cmc
push
pop
incb
xchg
loop
psrlq
fsub
pushf
dec
cmpxchg
mov
jecxz
push
xchg
add
add
mov
dec
shl
sub
lds
jl
lret
mov
or
push
bound
jl
testb
sub
loope
sub
mov
push
push
out
dec
mov
test
inc
rcll
insb
add
push
mov
or
fbld
sbb
mov
push
push
xchg
subl
add
lods
stos
fwait
mov
clc
fwait
and
fsubrs
xor
out
cmp
fldenv
sub
icebp
movsb
lret
in
aam
fldl
cmp
add
pop
xor
push
outsb
push
fsubs
xor
in
das
fdivl
shrl
shl
sbb
inc
les
icebp
pop
push
add
push
fstps
add
sbb
enter
and
push
or
jo
pushf
pop
push
xchg
mov
inc
jns
pop
js
rcrb
mov
and
outsb
xchg
adc
cmp
ret
add
loop
insl
mov
push
inc
cltd
in
mov
mov
mov
js
dec
cld
push
pop
pop
popa
push
xchg
add
gs
das
lahf
shlb
test
adc
cmp
call
add
add
test
shl
fs
sbbl
push
adc
mov
lds
push
cs
clc
mov
xchg
das
adc
sub
push
js
hlt
cmp
pop
cmp
test
dec
rolb
inc
in
sahf
sub
testb
in
cmp
mov
inc
std
pop
and
pop
pop
les
inc
roll
jns
mov
js
iret
jo
xorl
or
stos
jb
loope
fcmovbe
sahf
gs
push
mov
jbe
mov
pusha
ret
in
in
enter
cltd
adc
mulb
push
dec
and
xor
mov
fnsave
jmp
mov
pop
sub
and
enter
xchg
jmp
ja
xchg
cli
jle
adc
mov
mov
cwtl
int3
in
jg
fists
push
xchg
rolb
push
adc
fxch
cmp
les
icebp
mov
add
cmp
and
push
repnz
dec
or
add
or
mov
stc
jae
jb
cmpsb
mov
pop
pop
in
ss
mov
repnz
fildl
fbld
mov
sbb
mov
cmpsl
sbb
ret
jbe
bound
aaa
mov
insb
pop
adc
aas
inc
das
xchg
xchg
mov
pop
mov
jge
adc
outsl
pop
adc
int3
push
dec
pop
and
push
sub
aas
sub
loop
sarb
movsl
sub
sub
addl
test
fs
rorl
fcoms
out
filds
popl
push
inc
xor
adc
test
cltd
je
mov
call
js
push
mov
push
clc
inc
arpl
lods
xchg
push
nop
jge
jbe
inc
nop
popf
pusha
pop
je
xchg
test
mov
or
adc
or
aam
xchg
mov
pusha
out
pop
loopne
in
or
adc
push
nop
sahf
in
adc
sbb
or
ljmp
cld
call
jle
lock
inc
xchg
mov
xor
js,pn
xor
jg
cld
inc
add
fdiv
inc
sbbb
enter
outsb
orb
fdivrp
mov
cli
dec
inc
mov
fbstp
mov
fsubs
test
mov
int3
jo
sub
mov
cwtl
roll
loope
outsb
mov
sub
es
mov
fbstp
add
sarb
push
add
ret
testb
inc
psubd
mov
or
add
or
and
and
sub
adc
pop
mov
rorb
decb
jno
lahf
fcoms
mov
jno
int3
inc
or
add
fdivs
cmpsl
sbb
add
and
lock
and
jnp
jecxz
sub
icebp
fs
sbb
add
sub
std
adc
inc
rorb
cmp
inc
pop
sti
pop
test
lock
aaa
adc
subb
adc
push
nop
add
dec
adc
pop
mov
inc
cmp
sarb
adc
repz
push
std
pop
xor
jmp
add
ss
scas
push
adc
icebp
add
stc
xor
call
push
sti
inc
mov
lret
push
or
and
out
jecxz
pop
or
or
xchg
sub
and
xchg
or
inc
dec
dec
fadds
data16
or
mov
mov
sbb
and
test
xchg
add
push
push
mov
pusha
sbb
or
cld
cld
repnz
push
call
push
aam
sarb
add
loope
or
and
adc
andb
int
inc
popf
and
or
fwait
sbb
rorl
out
xchg
test
rolb
mov
mov
js
adc
jns
sub
mov
add
mov
bound
popa
call
mov
mov
rol
repnz
push
xlat
inc
rcr
mov
add
shll
pop
shll
push
clc
test
les
push
and
add
flds
popa
mov
clc
sbb
adc
loop
sbb
push
mov
or
mov
pop
cmp
mov
sbb
fisubl
lahf
hlt
mov
add
test
xchg
jle
add
adc
push
or
lahf
in
iret
cmp
xor
pusha
add
xchg
inc
dec
ljmp
pop
pusha
and
push
cld
invd
xor
je
pop
je
shr
bound
and
cmp
mov
sbb
lcall
dec
sub
mov
push
adc
test
xchg
mov
and
push
jl
sti
aaa
inc
insb
mov
ja
or
addb
push
or
popa
mov
and
inc
add
shlb
pop
fcoml
push
cli
xchg
mov
push
adc
add
dec
vmwrite
es
scas
pop
loop
mov
xor
mov
hlt
mov
mov
cld
and
push
outsl
ret
outsb
movsb
xchg
cwtl
inc
cmc
or
outsb
push
mov
int
sub
stos
rolb
cmc
dec
sbb
mov
sti
test
decb
dec
sbb
popf
xchg
popa
push
filds
cmp
stos
inc
iret
dec
sub
push
mov
cs
in
cmp
cld
and
add
jae
arpl
sbb
test
addl
mov
das
icebp
dec
addb
mov
notl
or
ja
loop
pop
mov
cli
mov
add
pop
sub
mov
pop
pop
dec
pop
adc
or
outsl
mov
fbld
mov
mov
or
stc
jbe
repz
aad
das
mov
xchg
daa
or
mov
and
call
aaa
inc
pop
call
xor
jmp
outsl
les
xor
ret
sbb
imul
adc
aad
pop
xchg
mov
lret
xor
insl
inc
repz
popa
sti
fisttps
and
and
adc
mov
stos
cli
movsl
dec
into
sbb
nop
mov
sub
ret
inc
pushl
fmul
xor
mov
xchg
in
jo
adc
pop
repz
cltd
addb
out
mov
inc
mov
lcall
adc
or
popa
divb
clc
ja
push
js
pop
adc
sti
pushl
js
enter
mov
add
pop
dec
cmc
fldcw
mov
lock
sub
cmp
mov
fabs
cwtl
popa
cmp
pop
popf
je
mov
sub
dec
xor
mov
test
mov
push
cmpsl
adc
xchg
adc
pop
sbb
mov
bound
mov
fnstsw
cmpsl
mov
mov
push
inc
rol
decl
addr16
imul
xchg
mov
push
ljmp
mov
scas
dec
push
sbb
jl
inc
loopne
xchg
fidivs
aaa
or
or
add
push
pop
mov
pop
adc
fnsave
fwait
inc
rcrl
lcall
inc
das
sbb
push
push
fidivs
xor
test
out
xor
dec
inc
incl
push
rorl
push
ss
lea
je
adc
jbe
inc
jp
aaa
fdivrp
dec
jb
fmull
mov
sahf
xchg
mov
push
cli
and
push
jg
aas
aaa
fidivrl
lret
mov
jmp
sarb
popf
sub
test
and
mov
les
mov
lret
add
pop
popa
std
mov
pop
imul
ror
bsf
sub
mov
jmp
movsl
and
test
cmp
aas
push
push
cwtl
imul
adc
sbb
mov
sahf
cli
repz
sarl
insb
sub
or
sar
xchg
cs
lret
into
mov
xchg
push
mov
test
xor
insb
jl
js
jg
dec
xchg
inc
ljmp
xchg
xor
jne
imul
cmp
jl
loop
in
xor
adc
xchg
aas
pop
scas
inc
js
addl
test
mov
jp
inc
push
loope
and
push
pop
clc
lcall
scas
ja
hlt
imul
and
xchg
pop
push
jns
push
fdiv
sar
push
test
jns
xchg
lea
bound
sti
xchg
notb
mov
mov
add
js
and
decl
ljmp
push
cmpsl
inc
pop
inc
sub
and
cmpsl
mov
daa
mov
outsl
mov
insb
imul
std
dec
mov
mov
jmp
sarb
test
adc
cmp
jp
xor
rcr
aam
pusha
mov
add
push
dec
rorl
xor
cmpl
xchg
or
mov
dec
push
test
addb
mov
fsubrl
or
loope
fcmovnu
or
fcomip
xor
icebp
jbe
cmp
add
and
ret
inc
fldz
mov
pop
sub
lret
aas
daa
in
adc
xlat
pop
out
out
out
add
fidivrl
jo
jge
roll
xor
or
xor
gs
jecxz
add
xchg
icebp
push
sti
push
and
cmp
add
jno
mov
out
out
xchg
and
sub
pop
mov
mov
or
or
add
and
jne
or
in
mov
pop
fcoms
xor
cli
or
pop
clc
scas
xor
xchg
rorl
popf
xchg
loopne
xlat
and
enter
shrl
enter
inc
rclb
test
inc
dec
sub
mov
or
mov
rcrb
and
push
outsl
dec
sub
outsl
dec
sbb
mov
loopne
sub
sub
sub
pop
add
cmpsb
xchg
popf
jmp
daa
scas
cmp
and
push
inc
std
addr16
cmpsl
pop
push
mov
cmp
inc
cwtl
adc
jmp
aas
xchg
adc
pop
in
push
sub
aad
jp
xchg
test
in
push
insb
out
or
xor
fnstcw
push
add
mov
pop
ss
lock
pop
cmp
jbe
xorl
dec
out
add
enter
cmp
xchg
mov
adc
adc
inc
mov
xchg
xchg
push
push
out
test
cltd
repnz
repnz
jg
push
les
sbb
lcall
scas
fidivs
jb
loopne
cmpsl
push
rcrb
in
testb
pop
jae
fiaddl
fcom
lds
andb
mov
popa
stos
jl
das
incb
cpuid
pop
js
sbb
inc
jg
scas
gs
call
les
push
addr16
inc
dec
xor
adc
push
in
add
and
add
nop
loop
lea
es
fistpl
xchg
or
jle
mov
int3
sub
test
xor
push
rorb
clc
add
mov
push
outsl
out
push
sub
inc
adc
add
add
out
add
xor
and
clc
aas
jb
mov
push
adc
push
add
mov
xchg
jmp
cli
pop
dec
and
fucom
lcall
cmp
cmc
repz
push
sub
popa
sub
mov
jge
in
in
adc
jge
add
or
stc
jb
mov
jno
push
inc
sbb
jo
dec
inc
cmp
sub
stos
icebp
xor
cmpsb
cmp
or
jo
mov
inc
scas
push
loop
push
cmp
pop
loop
adc
mov
push
sbb
pusha
xchg
js
jp
adc
dec
inc
pusha
leave
pop
orl
add
mov
xchg
inc
mov
cld
pop
adc
or
xorb
enter
jmp
jg
in
pusha
sub
fisttps
fistpll
lcall
xchg
or
incb
leave
lahf
shlb
or
add
das
jae
cmpsb
rep
or
xor
lcall
xchg
enter
add
jecxz
mov
mov
mov
pop
push
pusha
dec
or
insb
mov
push
movsb
add
jecxz
xchg
mov
jg
aam
or
mov
adc
repnz
or
push
and
cmp
clc
mov
adc
gs
push
dec
mov
push
idivl
mov
adc
mov
outsl
cmp
je
pop
inc
inc
shlb
fstps
stc
sub
shlb
aam
cmp
idivb
shll
xor
mov
adc
repnz
ljmp
jg
fsubrl
mov
pushl
je
xchg
add
and
pop
xchg
mov
ljmp
mov
push
lock
dec
shll
addr16
dec
push
test
rcl
lea
test
adc
out
inc
push
and
sub
nop
xchg
ds
pushl
pop
xlat
sbb
mov
mov
xor
outsl
mov
pop
push
dec
int3
clc
or
mov
outsl
call
sub
mov
xor
leave
add
icebp
in
dec
inc
in
xor
cmpl
cmp
pop
push
add
sar
jg
jg
int3
repnz
or
sbb
in
loop
cli
or
inc
mov
jg
cmp
mov
lods
mov
cmpsl
inc
pop
js
xchg
and
ds
aam
jecxz
cmp
xchg
add
leave
fwait
in
xchg
pop
mov
inc
ja
clc
inc
or
push
pop
mov
jg
das
adc
dec
sti
lods
push
fwait
out
sti
add
andb
sub
lock
sbb
mov
clc
lea
push
cmp
adc
xor
outsb
mov
iret
in
aam
out
fbld
ret
in
idivl
loop
mov
cmc
pop
mov
and
jge
lcall
xchg
xchg
lcall
sar
mov
add
mov
mov
cmp
xorl
dec
in
xchg
mov
aam
pop
pop
pop
in
pop
loopne
test
mov
sti
movsl
outsb
xchg
pushf
icebp
test
dec
andb
pmovmskb
fistpll
sbbl
cmpsb
xor
call
loopne
inc
cmp
lock
nop
ficoml
inc
clc
lods
lock
jl
pop
out
mov
adc
pop
jnp
or
dec
mov
jno
movsl
sub
or
xor
lock
fstpl
mov
cmp
mov
loop
push
aaa
clc
inc
inc
xchg
out
xor
add
pop
jne
or
rcrb
imul
test
test
jns
or
or
lock
shlb
test
fs
adc
popf
ja
sbb
bound
inc
pop
fnstsw
xchg
mov
aad
not
sub
ret
dec
push
mov
js
inc
adc
ret
icebp
movsb
outsl
outsl
pop
sbbl
std
testb
addr16
adc
inc
mov
mov
jecxz
sub
jg
out
out
pop
push
push
int
dec
mov
mov
daa
mov
loopne
scas
fildll
pop
int3
lock
or
adc
aas
je
cmp
out
adcb
xorl
dec
pusha
aaa
mov
icebp
and
cmp
adc
mov
movsb
mov
xchg
jge
mov
rcl
inc
aam
popf
dec
xchg
mov
ljmp
insb
sub
out
incl
mov
mov
mov
cmp
mov
mov
or
sub
mov
nop
or
sub
inc
push
jge
jl
mov
inc
imul
cwtl
jg
lods
or
stos
orb
adc
jno
add
hlt
inc
test
inc
enter
loopne
rcrl
ljmp
adc
sbb
popa
movsb
ret
std
jmp
mov
rcll
lods
push
inc
jge
inc
scas
inc
aad
std
ljmp
inc
mov
pop
cmp
xchg
enter
ret
imul
or
andb
push
dec
mov
mov
jnp
decl
push
mov
mov
daa
sub
out
push
jecxz
and
rcll
xchg
mov
js
push
test
adc
cltd
out
xchg
jge
lcall
jmp
loopne
loop
pop
inc
and
pop
pop
sbb
jp
xchg
lds
js
xor
add
push
insb
pop
in
jl
mov
sub
xlat
aaa
sub
sbb
jb
test
lret
testb
add
mov
xchg
pop
mov
sub
xchg
les
shl
mov
cmp
xor
frstor
hlt
bound
mov
fisubs
cmp
xchg
call
rclb
add
sub
cmp
xor
pop
lock
flds
xchg
jge
inc
dec
shlb
insl
in
cmp
test
les
ljmp
adc
sub
add
adc
sub
pusha
mov
and
enter
lock
ja
loope
cmp
das
fisttps
aas
cltd
sahf
lret
lret
inc
push
adc
xlat
cmp
mov
or
cs
in
loopne
loopne
mov
sub
add
cmpsb
or
add
jmp
sbb
rolb
rcll
in
dec
mov
clc
xlat
repz
lds
lock
divl
neg
out
cmp
mov
stos
cmp
andb
mov
gs
xor
pop
add
call
and
or
sbbb
adc
sbb
sub
mov
test
into
adc
stos
pop
pavgb
pop
jle
shlb
lock
and
and
cmp
mov
sahf
sbb
sub
push
jl
dec
sub
push
fstps
push
in
pop
outsl
call
push
pminub
add
add
sub
shrl
or
test
xchg
mov
sti
sub
bound
lods
mov
or
sub
lock
mov
and
and
push
mov
or
push
cld
bound
movb
mov
fwait
popa
xchg
mov
inc
xchg
adc
mov
add
or
and
and
pop
adc
xchg
lods
jne
ja
push
push
cs
push
cmpsb
ja
popa
les
or
or
in
out
xor
push
mov
xchg
nop
sbb
je
imul
or
mov
mov
fistpll
icebp
jp
xchg
decb
loope
aaa
adc
aad
and
jmp
add
dec
sarl
or
add
cmp
add
orb
xchg
add
loop
xor
add
movsb
movsl
rolb
pusha
push
push
push
insb
mov
shrb
pop
inc
jge
and
or
or
lock
add
fs
rorb
jne
aas
and
out
out
xorl
xor
push
pop
lock
cmpsb
shlb
adc
adc
push
inc
push
push
dec
and
xchg
sub
add
push
mov
sbb
hlt
cmpsb
js
xor
aam
imul
lret
inc
cmp
mov
cmc
push
mov
dec
lret
jg
mov
add
rcrb
sbbl
adc
aam
clc
addb
ret
fwait
test
add
ds
pop
cmp
add
sub
fimull
xor
sub
mov
scas
add
scas
divps
add
bnd
stc
pop
in
popa
daa
popa
or
or
das
or
mov
jg
aad
inc
test
repnz
and
mov
add
or
sbbl
hlt
rcll
dec
jmp
or
bswap
in
mov
bound
loopne
test
pop
sarl
xchg
mov
in
fildl
sub
xor
in
jp
inc
je
xor
and
rorl
shlb
std
fstpl
out
and
cmp
or
dec
out
sub
psrlw
outsb
and
js
int
lret
add
and
pop
lds
mov
xor
out
inc
dec
jb
cmp
ja
daa
nop
jae
inc
call
lret
push
xor
xchg
fdivs
ret
popf
xorb
push
inc
cmpsl
pop
stos
mov
sbb
or
int3
mov
and
sbb
and
movsb
inc
jge
popf
xorl
push
add
jmp
inc
xorb
and
adc
lcall
ret
mov
lds
inc
sbb
add
ja
mov
or
xor
inc
std
xchg
mov
cwtl
movsb
out
mov
shrl
fistpll
in
sti
aaa
add
roll
adc
add
cmp
and
jg
jae
popa
in
push
pop
sub
rcrb
add
rolb
inc
add
adc
pushf
cltd
loopne
enter
inc
jecxz
sbb
mov
ret
dec
imul
movsb
sub
inc
adc
jno
inc
div
imul
pop
or
xor
jo
test
data16
mov
xchg
idivb
add
es
loopne
inc
adc
incb
add
pusha
dec
sub
pop
ljmp
stc
or
jg
repz
fs
fstps
loopne
hlt
popa
shrb
push
mov
jg
and
sub
lret
and
icebp
jb
push
mov
movsl
jecxz
movsb
mov
test
and
mov
xchg
sub
mov
and
pop
push
and
int3
xor
add
aaa
adc
adc
cwtl
lcall
mov
movsl
or
or
aaa
cli
pushl
rolb
sbb
jno
and
fldl
sub
push
ret
std
std
push
mov
subb
sbb
cwtl
out
andb
xchg
add
jo
push
in
in
fwait
mov
ret
cltd
xchg
scas
mov
mov
int
daa
cmpsb
adc
inc
js
test
push
xor
add
clc
push
notl
add
lds
sbb
and
sahf
repnz
sbb
adc
jb
sbb
inc
test
pop
popf
jbe
sub
pop
call
fists
dec
in
ret
push
adc
add
rcrb
push
adc
dec
and
adc
in
roll
mov
fs
xchg
jno
cmpsb
clc
idivb
call
jg
adc
in
aas
data16
test
fdivrl
mov
rclb
testl
push
mov
cli
mov
xchg
xchg
add
mov
popa
push
or
inc
cld
or
fimull
mov
clc
xor
mov
cmpsb
dec
enter
pop
test
xlat
cmpsb
cs
sbb
das
lds
inc
and
bound
loopne
and
and
fildll
push
icebp
fwait
enter
jo
sbb
mov
cmpsb
ss
pop
cltd
add
or
orb
rsqrtps
sub
xchg
pop
les
inc
xor
in
add
aas
test
out
push
ret
fcoms
addl
sub
pop
cwtl
pushf
rorl
cld
fs
sub
mov
sbb
lock
add
cs
subb
push
dec
std
in
adc
add
call
popa
jg
sahf
push
pusha
lods
lahf
stos
cmp
push
orl
scas
cld
cmpsb
out
push
cwtl
xchg
jae
insl
iret
inc
and
or
in
mov
cmp
push
les
pop
mov
addr16
mov
sbb
xor
add
and
dec
adc
adc
xor
arpl
inc
cmp
ret
call
sbb
loop
add
cmp
mov
mov
inc
stos
aas
loopne
mov
ljmp
movsb
repnz
add
in
ret
cmp
xor
jno
xor
pop
sbb
xor
dec
jbe
add
es
ljmp
rcl
into
fidivrs
sbb
adc
aam
xchg
adcb
lret
push
test
in
mov
dec
pop
imul
repz
inc
pop
inc
xchg
adc
enter
ficomps
fistl
cltd
push
or
popf
and
and
cmp
rorl
mov
test
xor
aad
mov
mov
test
dec
inc
ficompl
cmp
adc
adc
push
jg
data16
push
mov
cltd
add
jmp
mov
pop
pop
imul
iret
into
shrb
xor
in
add
pop
insl
incl
add
data16
lret
icebp
mov
and
add
jg
ljmp
xor
rolb
sub
loope
add
cmp
sbb
jmp
repz
cmp
dec
adc
std
outsl
mov
pop
addl
insb
mulb
mov
push
test
and
add
pop
or
leave
add
mov
call
push
jle
aas
inc
jge
adc
push
fsub
cmp
jle
xchg
cmp
pop
mov
adc
dec
add
sar
lods
pop
mov
dec
mov
insb
add
or
dec
inc
add
push
les
out
sbb
mov
idivb
pop
ret
insb
mov
dec
jb
sub
dec
je
add
jne
je
add
in
mov
jbe
mov
rcr
and
xor
adc
or
mov
fnsave
cmp
rclb
adc
cmp
adc
jle
out
js
sbb
outsl
sub
inc
lahf
sbb
mov
lcall
mov
add
mov
sti
fldcw
mov
sub
jle
xor
insl
sub
sbb
ljmp
data16
cld
lods
inc
std
es
sub
add
xor
das
xor
xchg
mov
aas
push
adc
pop
test
mov
xorb
call
pop
aas
xlat
mov
sbb
call
and
ret
cld
xchg
push
mov
push
mov
jmp
push
xchg
xchg
cmp
sub
inc
lods
mov
std
inc
push
push
add
cmc
push
addb
mov
sub
mov
xor
mov
scas
int
fs
frstor
sub
or
ds
clc
mov
pusha
push
add
lds
test
lds
push
cltd
mov
ret
test
inc
xchg
test
push
jge
mov
add
and
cmp
das
dec
inc
in
clc
mov
repz
inc
filds
adc
fistl
les
cmpsb
jmp
push
and
loop
sub
adc
pop
aad
push
jnp
inc
imul
inc
pushf
or
test
clc
add
adc
scas
xor
cmp
or
movsb
mov
idivl
fcoms
jbe
adc
push
test
fwait
mov
xlat
pop
orl
push
shl
clc
sub
and
sbb
adc
in
shll
jg
stos
fdiv
or
mov
and
add
adc
test
mov
sbb
or
dec
adc
sahf
test
or
push
jl
jmp
xor
cmp
sub
add
adc
sbb
push
cmp
add
mov
out
negl
fsts
mov
sub
cli
inc
sbb
cld
sti
addr16
jb
push
rolb
int3
pop
push
dec
js
or
fcom
jbe
mov
xchg
dec
loopne
dec
fs
sub
cmp
add
sbb
lods
pop
call
or
mov
fdiv
adc
mov
adc
clc
mov
and
filds
arpl
pushf
int
and
add
dec
and
mul
cmp
test
mov
clc
daa
repnz
es
adc
adc
lret
and
sahf
lahf
push
mov
incb
mov
pop
mov
push
rolb
out
sahf
sub
fidivs
mov
sub
mov
mov
pop
pop
dec
cmp
aad
aaa
jmp
push
xor
jmp
fidivs
cmp
dec
sub
popf
inc
pop
sarb
add
sub
adc
dec
dec
jne
sub
mov
and
adc
mov
inc
dec
mov
or
clc
push
cmp
shrb
bound
dec
pushf
adc
fcomps
and
jne
test
fcompl
and
add
cmpsl
repnz
push
push
push
and
andb
jbe
or
inc
add
and
xor
iret
mov
in
mov
call
sub
inc
and
hlt
lahf
inc
xor
sahf
push
daa
ret
add
das
ret
sbb
out
or
and
dec
std
adc
out
lcall
mov
mov
xor
scas
sub
jge
xlat
testl
or
sub
retw
sub
push
bound
pop
sbb
ss
pusha
xorl
pop
add
or
inc
test
movsb
cwtl
lock
adc
cmp
adc
dec
loope
ja
subl
inc
inc
or
sub
or
cmp
ljmp
ret
repnz
stc
sub
lcall
hlt
fisubrs
mov
aas
mov
cmp
inc
cmovne
add
sti
or
insb
sbb
shl
push
addl
mov
je
mov
in
inc
or
test
icebp
stos
xor
xchg
push
cmpsl
adc
add
les
pop
icebp
mulb
fwait
add
dec
rol
je
jg
push
fadds
push
test
sub
clc
adc
in
out
mov
ret
adc
sbb
dec
push
movl
or
xchg
mov
mov
sub
sub
clc
pop
inc
rcrb
add
aam
jp
mov
popa
and
xor
lds
sub
push
pop
fidivrs
insl
dec
icebp
inc
pop
mov
loope
or
mov
jl
and
add
dec
clc
mov
shlb
cltd
push
inc
fbstp
popf
lea
fsubr
stc
push
mov
stos
nop
cmp
das
arpl
or
ficoml
mov
adc
popf
loop
adc
ljmp
add
jb
pop
dec
fldln2
mov
mov
pop
bound
xchg
adc
je
xchg
xchg
push
out
das
shl
add
les
bound
push
dec
fistpll
jns
aas
adc
hlt
loopne
or
or
add
xor
mov
fmull
enter
icebp
dec
aaa
out
sub
adc
sub
adc
or
jecxz,pn
popf
sti
inc
enter
sub
cmp
js
push
adc
mov
fisubrl
or
jge
cmp
sub
mov
and
push
dec
jb
popa
in
sbb
mov
iret
xorb
push
mov
lds
test
dec
adcl
cwtl
push
pop
call
leave
dec
hlt
sub
dec
add
sub
mov
add
mov
stos
clc
jb
clc
pop
data16
sub
xlat
in
jb
and
add
dec
xorb
pushf
mov
sub
inc
lock
je
int3
daa
addr16
inc
xor
cs
push
add
jne
dec
in
stos
mov
dec
scas
es
out
xchg
es
dec
inc
sub
movsb
addr16
adc
inc
arpl
push
sbb
mov
cmp
jne
xor
and
sbb
dec
mov
ja
push
sbb
lret
inc
aad
push
mov
jmp
push
cwtl
adc
popa
inc
je
es
call
or
inc
push
int
shll
popa
mov
fildll
inc
mov
mov
or
inc
lods
jecxz
xor
push
rep
mov
cli
add
add
dec
nop
outsl
sbb
cmp
aad
aam
lock
shll
std
mov
add
gs
or
mov
enter
andl
inc
mov
loopne
insb
inc
mov
lock
xchg
xor
pop
icebp
in
add
xorb
xchg
adc
fistpl
loope
out
loope
fsts
jge
jp
push
lret
cmp
sarl
ret
push
arpl
sub
pop
hlt
stos
ljmp
xchg
js
popf
cwtl
push
imul
movsb
fsubrs
xlat
push
cmp
mov
or
push
adc
test
sbb
mov
loop
add
cmp
add
add
inc
adc
dec
dec
test
ss
ret
cmc
push
fwait
mov
rcrl
or
push
inc
pop
loop
rorl
mov
das
adc
jl
test
loop
bound
add
push
outsb
inc
xchg
std
mov
hlt
faddl
xchg
repz
mov
sbb
lahf
pop
out
add
clc
jg
out
add
addl
mov
std
xchg
mov
sub
inc
xlat
cmp
adc
mov
jl
dec
xchg
and
sarl
push
sbb
shrl
sbb
xchg
push
xor
and
cld
out
cmp
inc
and
add
push
push
add
cmp
decl
stos
mov
out
decl
cmp
out
and
push
jg
push
cmp
lock
call
faddl
mov
mov
in
and
lea
in
adc
out
std
jg
stos
jbe
sahf
jl
xchg
lret
loop
add
adc
fistl
pop
add
push
dec
shlb
push
sti
pop
or
daa
ret
mov
nop
nop
ljmp
js
test
mov
mov
imul
mov
mov
pushf
imul
pop
ss
rcrl
sbbb
xor
pop
clc
cmp
or
addr16
je
out
xor
pushl
dec
pushf
pusha
arpl
pushf
add
mov
fwait
sbbb
and
mov
call
lods
mov
loope
lret
mov
stos
add
or
ja
mov
rorl
adc
sub
inc
add
sub
decl
rcl
add
dec
dec
add
mov
jle
loopne
mov
inc
xor
pushf
cmp
loope
or
test
lods
rorl
loopne
sbbb
inc
pushf
inc
add
mov
sub
push
int3
inc
mov
add
or
or
aam
out
shr
out
dec
outsl
add
aaa
adc
insl
and
in
fcompl
insb
insl
sub
ret
aad
cmp
loopne
mov
jge
jbe
add
and
outsl
cli
sbb
add
test
sbb
shl
push
jo
decl
stos
outsb
xchg
mov
mov
cmp
loope
inc
adc
fcomip
sbb
ret
pushl
imul
into
push
icebp
push
push
aam
sub
mov
ja
decb
cltd
add
adc
ja
outsl
push
mov
or
ret
push
push
stos
sub
cmp
add
jg
jo
decl
fiadds
add
sbb
pop
cmp
inc
cmc
daa
add
adc
cmpb
inc
cmp
lods
stos
fists
aaa
sbb
mov
sbb
fists
push
cwtl
sub
xor
dec
or
loop
add
mov
jl,pn
mul
mov
imul
pop
dec
fwait
and
push
cmp
cmp
aaa
adc
mov
mov
mov
fadds
push
lcall
cld
and
sbb
sub
loopne
in
xor
adc
test
iret
loopne
or
outsl
fadds
lea
out
arpl
dec
and
cmpl
outsb
cld
fbstp
in
add
roll
push
test
test
test
popf
jns
insl
fwait
add
clc
rcrl
jge
fmull
fld
sub
jge
mov
test
or
inc
icebp
jg
movsl
cmp
adc
jo
mov
fdivrs
sbb
iret
add
addr16
rol
out
jl
das
lock
pusha
fldenv
outsb
lea
into
cli
out
inc
mov
sar
mov
subl
popa
icebp
sarb
push
in
cmp
sbb
rcl
mov
jns
aam
les
pop
mov
add
mov
insb
gs
push
mov
add
inc
or
mov
das
cld
insb
into
ret
lcall
in
mov
add
dec
and
push
and
adc
cld
in
jle
jp
in
push
js
es
mov
ret
cltd
pop
sahf
popf
fsubr
add
mov
dec
shr
ljmp
test
in
fs
xlat
pop
add
fdivr
outsl
addb
cli
add
pop
repnz
xchg
sbbb
mov
stos
les
nop
sahf
test
dec
push
pop
or
mov
and
cltd
cld
xchg
into
aas
sub
nop
into
or
push
fistl
out
fs
movsb
out
jbe
in
mov
pop
ds
fildl
sbb
mov
push
pop
add
xchg
lea
and
add
out
insl
ret
ret
and
jp
cmp
ljmp
ficoml
mov
dec
push
mov
pop
sbb
stc
or
push
in
icebp
or
das
xchg
add
lcall
lds
inc
lret
push
xor
pusha
hlt
sahf
pop
cmp
cmpsb
mov
or
inc
clc
test
subb
les
out
pop
popa
sub
mov
xor
mov
inc
xlat
mov
rcr
sbb
xchg
xchg
cmpl
fists
xchg
add
outsb
add
loope
adc
lods
test
xlat
mov
stc
outsb
mov
lea
jecxz
mov
call
lcall
test
int
add
dec
fs
mov
inc
add
inc
add
dec
sub
mov
ret
jbe
or
mov
push
sti
mov
pushl
fildl
mov
mov
inc
xchg
sbb
lock
aam
pop
pusha
dec
cwtl
xor
dec
das
push
insl
frstor
pushf
imul
fwait
cs
hlt
fldenv
jbe
add
and
mov
or
or
inc
xor
and
fmul
mov
sar
sahf
nopl
je
enter
add
push
outsb
stos
dec
add
pop
cmp
mov
xor
call
cltd
in
outsl
cmp
int
imul
or
and
mov
adc
fwait
mov
bound
icebp
pusha
inc
jge
sub
mov
std
fldt
repnz
pop
sub
inc
ret
xchg
mov
mov
or
and
cltd
xor
les
loope
xor
push
xchg
mov
loopne
mov
mov
popf
dec
add
lock
add
es
cmp
and
add
push
mov
xchg
mov
aas
fsubrs
loopne
pusha
and
sbb
lds
pop
hlt
inc
in
outsl
sbb
pop
lahf
and
xlat
aaa
add
pop
add
pusha
or
fwait
add
std
int
inc
push
lock
xlat
or
nop
add
and
aaa
sbb
adc
xchg
not
pop
and
insl
test
mov
xchg
js
add
filds
pop
imul
add
ljmp
or
add
push
sar
ror
xor
inc
sbb
rcrl
test
adc
and
adc
mov
dec
or
add
arpl
fsts
dec
or
aad
iret
dec
and
test
xor
rorb
lcall
inc
add
inc
sub
sbb
out
pop
movsb
adc
mov
lea
inc
fidivs
aam
addb
xchg
ret
mov
mov
sub
notb
sbb
popa
adc
adc
push
popa
push
pop
mov
dec
aam
in
push
add
mov
aam
pop
inc
js
test
hlt
mov
adc
clc
mov
mov
outsl
shrb
xchg
imul
mov
cmpl
and
inc
adc
xor
lahf
mov
mov
jb
adc
mov
sbb
mov
les
pop
fwait
or
adc
xlat
enter
and
adcb
lds
fwait
orl
cmp
and
mov
int3
sub
mov
stos
int3
insl
or
mov
push
xor
adc
stos
cmp
js
out
ljmp
jb
aaa
clc
add
push
push
xchg
clc
dec
popa
and
out
scas
or
mov
pop
xchg
out
jl
stc
ret
inc
cmpsl
data16
mov
add
jbe
xchg
and
mov
test
pop
fcmovu
jmp
dec
cld
mov
jmp
aam
mov
or
fdiv
into
mov
mov
mov
scas
jle
dec
aas
ja
or
xchg
sbbb
or
data16
shrb
push
xor
dec
push
rol
cmp
or
hlt
mov
mov
mov
jns
adc
fsubl
rcl
fmuls
adc
and
xor
jl
mov
ret
icebp
cmp
pop
aad
push
lds
and
pop
in
icebp
mov
xorb
adc
mov
or
shl
xor
add
adc
fistpll
mov
lock
mov
mov
add
push
cmp
mov
mov
lea
cwtl
mov
out
in
or
js
mov
xchg
int3
mov
xchg
lock
mov
and
adc
aad
mov
adc
mov
jl
fnstenv
dec
les
and
push
and
add
lods
dec
nop
mov
xor
jo
lcall
cmp
jae
fisttps
add
xchg
sub
inc
aad
ss
mov
and
add
sub
fldl
shll
mov
in
iret
sbb
mov
mov
mov
adc
and
stos
fidivrs
adc
or
mov
das
jno
pop
shlb
jns
cmpsl
dec
mov
scas
lea
test
pushf
daa
mov
outsl
icebp
inc
shll
jp
cld
mov
jg
jle
pop
insb
rclb
and
outsl
mov
adc
sbb
fstl
inc
or
sbb
lods
rcll
ffreep
nop
cmp
mov
push
cwtl
inc
aad
jl
pusha
mov
sbb
push
lock
and
das
popa
push
xchg
movsb
dec
rcll
mov
sahf
jne
push
add
jg
loopne
xor
sti
push
xor
inc
test
push
xchg
loopne
pop
dec
or
cltd
jge
ret
cmp
in
out
pop
insl
pop
push
loop
out
xchg
and
dec
dec
push
loop
push
jmp
push
lret
mov
mov
jle
sbb
cmp
fnstsw
mov
sub
add
jp
frstor
enter
in
xchg
add
js
lret
imul
out
dec
and
loop
enter
cwtl
mov
in
pusha
jno
out
and
pop
xor
fsubl
add
test
xor
push
pop
cwtl
imul
test
sbb
fidivrs
mov
jmp
addl
in
push
push
cli
into
into
popl
test
aam
pop
push
sbb
add
pop
dec
xchg
mov
jo
fildll
imul
loop
sbb
cmp
lcall
xor
inc
jb
adc
cs
inc
adc
test
push
fists
add
mov
cmp
pop
std
in
mov
xor
and
cmp
shll
inc
lea
ljmp
push
push
pop
call
jmp
adc
mov
call
or
lahf
xchg
mov
sub
movsl
mov
cmp
inc
inc
push
and
fdivl
add
and
mov
mov
stos
xor
rcl
sub
bound
shlb
test
mov
mov
movsb
jns
jecxz
mov
adc
stos
pop
popf
mov
adc
add
fidivs
and
add
jbe
sub
clc
dec
fnsave
test
or
dec
pop
pop
js
test
pop
inc
outsl
mov
rcll
pop
daa
filds
mov
ret
jno
in
dec
cmpsb
push
add
xchg
push
inc
lock
ljmp
mov
xchg
fmuls
pushl
mov
pop
mov
lahf
jecxz
ds
fldl
hlt
add
inc
add
jle
rcrb
inc
and
mov
hlt
lds
aaa
je
mov
pop
incb
mov
or
jle
mov
sub
sbb
or
in
pop
xchg
jg
mov
add
xor
dec
mov
mov
jbe
outsl
inc
jg
mov
push
pop
inc
insb
jne
push
lret
ja
sub
inc
addl
lret
loopne
inc
push
iret
daa
fucom
and
filds
add
pop
jbe
push
test
cwtl
out
push
fidivrs
les
les
stos
repnz
testl
xchg
adc
icebp
test
sub
test
and
dec
adc
jp
scas
add
add
mov
dec
std
push
pop
push
xchg
fistl
nop
mov
and
adc
inc
sbb
and
lahf
inc
packuswb
outsl
lcall
cs
and
push
push
pop
xlat
andb
cmp
je
mov
mov
adc
outsl
fistpll
add
out
push
sbb
sub
jae
push
testl
mov
push
cmp
shlb
add
dec
ret
jge
scas
out
push
pusha
fisubrl
add
add
sub
jno
lock
mov
test
movsl
mov
adc
shll
pop
mov
sub
insb
jl
sbb
inc
loopne
add
push
mov
fadd
pop
pop
clc
mov
jmp
frndint
sbb
and
mov
ljmp
pop
push
xor
dec
or
aam
adc
cwtl
add
test
add
lods
es
popa
jne
mov
pusha
aaa
scas
adc
pop
xchg
ljmp
dec
std
cmp
out
cmp
les
std
or
testb
mov
enter
adc
test
adc
sub
orl
mov
push
outsl
lcall
ret
outsl
scas
push
subb
mov
inc
or
lock
fwait
sbb
repnz
ficoms
ret
cmp
sahf
push
in
loop
fisubrs
or
movsb
out
dec
mov
outsl
mov
adc
sbb
xchg
pop
xchg
scas
cs
imul
je
push
add
and
push
cwtl
fisubs
cmpb
scas
cli
shrb
and
stos
test
push
aam
inc
sub
mov
cmp
sub
or
mov
sbb
dec
mov
add
adc
push
mov
sbb
ljmp
add
add
js
mov
push
pop
daa
cmp
lods
aas
jo
sahf
sbbb
sahf
push
sub
lods
inc
inc
test
icebp
pop
inc
insb
mov
or
mov
or
out
add
fidivs
xlat
mov
cmc
push
test
and
dec
jnp
inc
fs
rol
in
aas
xchg
mov
popa
fcoml
dec
add
mov
inc
test
ret
aas
decl
incl
mov
scas
movsb
pop
sub
shlb
dec
xchg
insb
push
les
cmp
pop
into
adc
movsb
push
jnp
mov
or
inc
sbb
scas
mov
adc
mov
fadd
xchg
data16
dec
lahf
mov
jns
fxch
setb
mov
and
jecxz
push
or
add
loope
aaa
cld
call
jbe
cwtl
scas
sub
dec
dec
insl
mov
inc
cmp
mov
inc
or
lods
mov
mov
notl
lea
mov
xorl
js
lcall
clc
in
sbb
jmp
mov
mov
jmp
xchg
dec
jae
sahf
jo
pop
loopne
ljmp
inc
enter
adc
mov
add
rcl
fnstenv
insl
cmc
aaa
dec
mov
pop
dec
in
pop
movsl
pop
mov
icebp
push
arpl
cltd
ret
cmc
push
rorb
adc
mov
jg
xchg
xchg
inc
pop
dec
inc
sbb
and
jmp
xor
xchg
adc
lods
rol
add
inc
cmp
pop
pop
or
shlb
sbb
mov
dec
jl
mov
sbb
dec
cmp
movsb
xchg
repz
fs
insl
jmp
stos
into
cs
dec
clc
cmpb
testl
mov
xor
decb
mov
repz
cs
inc
jne
outsl
ret
call
lcall
popa
pop
js
sti
xor
cltd
sti
sti
fstpt
mov
bound
push
movl
jl
dec
es
sahf
pushf
push
adc
movsl
mov
gs
push
mov
add
mov
int3
push
pop
cwtl
add
jo
ss
orb
push
or
sub
jg
push
les
jp
inc
jbe
add
repz
and
adc
jecxz
add
push
fisubl
fcmovnb
or
addr16
xor
dec
fiaddl
mov
or
mov
mov
mov
jmp
sub
inc
jo
jo
cmc
dec
int3
insb
leave
test
ret
and
out
sbb
add
cmp
imul
push
adc
scas
adc
inc
or
mov
inc
add
call
test
lret
mov
push
ja
and
scas
dec
int3
shlb
out
sbb
cmp
bound
pop
test
jns
push
xor
jne
add
daa
add
call
push
sbb
mov
ss
add
or
dec
jmp
fimuls
fs
mov
pushf
push
add
cli
inc
add
xadd
pop
inc
or
xor
jae
andb
or
aam
lods
std
and
shl
mov
or
push
mov
jp
mov
aaa
cmp
arpl
bound
push
lock
inc
orb
pusha
mov
out
inc
push
int3
add
add
jnp
scas
mov
rol
mov
or
loop
xchg
dec
gs
sbb
pop
ljmp
pop
adc
ficoms
sub
negb
or
mov
mov
mov
cmpl
or
lock
push
pop
js
xor
popa
mov
hlt
and
and
xor
sahf
sub
add
inc
or
mov
inc
inc
arpl
mov
and
ja
push
sub
sbb
mov
cmp
cmp
adc
push
mov
in
push
ja
pusha
dec
sub
call
xchg
ret
dec
lock
cmp
loopne
or
add
shlb
xor
fiadds
aam
xor
outsl
orb
mov
fwait
test
pop
adc
clc
sub
dec
push
inc
mov
mov
sbb
popf
pop
jno
test
dec
push
inc
add
push
loopne
insl
jecxz
loopne
adc
aad
fbld
adc
test
adc
les
jnp
mov
call
mov
outsb
mov
push
cmp
aaa
stos
das
cmc
mov
add
leave
inc
das
inc
shl
xchg
sub
shrl
xchg
add
mov
mov
int3
aaa
cli
push
push
jbe
cmp
addb
out
and
adc
enter
pop
mov
ret
loopne
orb
dec
xchg
jge
xchg
adc
sahf
lds
cmp
sahf
mov
pusha
pop
test
jg
inc
inc
hlt
roll
insb
or
inc
leave
xor
mov
cmc
mov
lcall
adc
cli
call
mov
mov
int3
mov
arpl
mov
and
ja
cld
lods
cs
scas
les
es
jne
mov
fwait
push
or
adcl
and
mov
mov
and
daa
hlt
std
mov
pop
pushf
push
or
xor
sbb
sahf
jo
andb
or
ds
lods
inc
push
fisttpl
jo
push
inc
mov
jnp
inc
arpl
cmp
mov
and
xchg
inc
and
fcomi
xlat
sub
addr16
ror
pop
ds
cli
out
cmp
cli
sahf
out
dec
xchg
jge
and
addl
mov
bound
shrb
sbb
in
lods
sub
xchg
mov
fwait
lock
adc
cmp
and
mov
cli
decl
hlt
dec
shr
jb
mov
cmpsl
push
jecxz
fcomp
lock
inc
jmp
test
adc
add
and
in
xchg
rolb
in
cwtl
cmp
jno
fdiv
jbe
jbe
pop
push
cmp
loope
das
sbb
mov
hlt
scas
inc
mov
xchg
rorl
mov
cmpsl
mov
addr16
inc
fnstcw
jo
loop
imul
adc
mov
mov
lods
loop
std
inc
int3
and
push
push
sub
and
insl
push
ret
fstpt
movsb
and
sbbb
or
jo
fldt
enter
mov
inc
push
movl
xlat
test
sub
das
jmp
xlat
lods
jb
js
push
pop
sub
loope
fsub
jo
push
mov
test
adc
jo
je
push
add
mov
aam
int3
lods
shl
adc
sbb
btr
and
xchg
mov
or
xchg
out
mov
jne
fimuls
nop
and
pop
out
mov
mov
aam
dec
xchg
test
cs
mov
dec
push
ljmp
inc
inc
popa
addb
imul
fcmove
stos
dec
sub
test
call
mov
push
fisttpl
outsb
scas
push
adc
fldl
mov
aaa
dec
mov
aad
lds
mov
adc
je
add
add
fcmovnu
fmul
imul
lock
push
xchg
inc
std
push
mov
bound
rcll
aad
cld
ja
loopne
out
push
cli
into
mov
pusha
aam
adcb
sahf
lret
mov
inc
inc
movsb
xchg
cmpb
bound
clc
push
outsl
test
mov
subb
mov
mov
sbb
je
mov
cmp
jecxz
push
lahf
lock
mov
stc
and
mov
lea
es
cs
sahf
xor
xchg
lret
cli
scas
mov
dec
lock
adcb
jmp
push
inc
or
mov
cmp
aam
orb
fwait
pusha
mov
jnp
stc
pop
out
outsl
lods
rol
push
orl
mov
pop
sbb
in
xor
or
push
aad
fs
shll
cli
insl
jnp
add
ret
adc
adc
cmpsl
or
xchg
push
pop
jp
add
sub
rcll
outsl
sub
icebp
ds
cmp
mov
testb
mov
pop
mov
mov
pop
and
or
hlt
dec
aam
pop
add
adc
xlat
rorb
inc
inc
in
xchg
aaa
mov
les
adc
std
ret
dec
push
dec
xchg
loopne
fisubrs
mov
shlb
stos
push
in
iret
shlb
mov
xchg
call
pop
insl
or
mov
mov
fldl
je
leave
out
sub
cld
and
push
and
inc
cmc
fsubrs
pop
mov
add
es
shrl
adc
imul
test
pushf
xchg
xor
ljmp
shll
pop
or
inc
adc
mov
sub
mov
add
or
decl
inc
mov
xchg
and
mov
loopne,pn
adc
mov
aaa
js
inc
pop
std
pop
xchg
arpl
mov
sbb
clc
rol
sub
aaa
sub
jb
pop
sub
add
scas
and
out
inc
sub
jbe
lods
mov
shlb
push
mov
cmc
loop
sahf
push
ds
mov
or
fbstp
jnp
insb
bound
nop
add
call
lret
add
push
int3
dec
sbb
clc
sbb
movsb
mov
jg
shll
sub
xchg
ja
cmp
lcall
scas
pop
jnp
cli
cmpsb
mov
inc
or
push
mov
cwtl
inc
mov
push
ret
push
lods
into
bound
sbb
or
mov
xchg
mov
mov
pusha
push
dec
xchg
or
adc
sbb
scas
js
movsl
and
jecxz
call
push
incl
jle
sbb
cltd
mov
cmp
mov
cwtl
outsl
inc
stos
hlt
sub
movl
stc
mov
and
jg
mov
iret
mov
cld
shlb
jmp
xor
loop
icebp
add
inc
popf
sti
and
mov
sarb
cmp
or
dec
or
scas
or
push
aas
add
jmp
call
lds
mov
push
inc
or
int
or
pushf
bound
aam
pop
pop
xor
mov
les
sbb
bound
fcmovnu
clc
mov
ja
insb
xor
jmp
pop
or
jns
orl
cs
movsl
out
dec
pop
add
jle
mov
or
ja
xor
push
cmp
jg
call
pop
push
mov
aam
and
inc
inc
dec
mov
mov
es
sub
shl
ljmp
adc
and
and
insl
sub
jmp
pusha
test
stos
pop
cs
adc
or
das
inc
xchg
dec
mov
mov
int3
add
popf
push
rorb
push
adc
sbb
xor
daa
inc
xor
sub
push
cltd
jo
mov
sub
push
push
lea
add
into
or
add
mov
inc
xchg
and
lcall
dec
inc
mov
adc
sub
adc
push
sarb
pop
pop
dec
std
xchg
add
and
mov
mov
jns
movsb
andl
fildll
inc
sar
int
inc
adc
push
adc
xchg
sbb
pusha
andb
jne
aam
lea
jno
call
pop
aad
jp
jle
adc
mov
mov
stos
rorb
xchg
or
mov
pop
push
mov
cmp
or
add
or
dec
adc
mov
inc
xor
ret
push
add
mov
iret
clc
adc
lahf
rcr
cltd
dec
std
filds
in
inc
inc
or
test
cmp
lcall
rorb
adc
rorl
fwait
or
fistl
mov
lods
jge
call
into
push
pop
push
arpl
addr16
xchg
pop
arpl
mov
jne
stos
fwait
lds
push
sbb
dec
aam
stos
cmp
bound
adc
adc
xchg
add
mov
in
push
cmp
movsl
mov
lods
in
arpl
loope
cwtl
pop
aam
sti
push
outsl
adc
xchg
hlt
leave
or
mov
xor
in
mov
or
int
mov
repnz
sub
and
sub
sub
add
mov
cs
pushl
xlat
outsb
add
and
sbb
in
or
ds
fsqrt
mov
loope
xor
subb
adc
enter
fwait
sub
out
mov
pop
test
iret
pop
inc
rcrb
xor
loopne
push
and
out
xchg
test
or
jp
or
mov
and
push
fbld
and
mov
mov
fldcw
add
shlb
sti
das
mov
fisttps
pop
test
stos
clc
scas
enter
inc
or
inc
mov
sbb
in
pop
adc
in
iret
test
outsb
xlat
push
jnp
test
mov
int
stos
jo
or
and
imul
add
mov
push
push
out
scas
xchg
xchg
call
es
ss
push
test
call
clc
loop
push
or
xchg
fwait
mov
insb
faddl
idivb
test
push
push
inc
mov
mov
add
fcomip
add
sbb
stc
lret
mov
push
fldl
fistl
sti
push
pop
std
stos
bound
out
mov
mov
std
pop
add
cmp
mov
inc
dec
leave
jno
data16
jo
ja
push
je
add
minps
cmp
outsl
lock
cltd
pop
js
rcrb
pop
xchg
mov
add
scas
rcrl
mov
jle
inc
mov
imulb
xor
in
xor
jb
push
push
xor
icebp
xor
lods
xor
add
add
xor
aad
gs
jnp
jae
xor
push
seto
insb
iret
inc
mov
insl
fists
sbb
inc
mov
push
inc
adc
xchg
sub
sub
std
pop
imul
fcompl
fildll
je
push
lret
push
mov
jecxz
inc
lds
cmp
xchg
test
mov
sub
test
or
repz
dec
lods
movsb
in
inc
pop
pop
popa
pop
dec
scas
fiadds
adc
js
push
sbb
stc
fwait
sbb
repz
xor
and
add
popf
cltd
pop
je
push
decl
jg
dec
daa
jge
pop
lahf
cs
je
sbb
or
push
adc
and
add
inc
mov
mov
push
adc
sub
jne
unpcklps
in
mov
sub
leave
jge
and
pop
or
addb
sub
sbb
dec
mov
or
ficoms
or
divl
xor
sub
and
cmp
add
pop
adc
lcall
mov
pop
pop
pop
pop
aad
movsl
loop
mov
xchg
or
fdiv
push
ret
mov
les
or
jo
mov
add
fisubrs
mov
push
cmpsl
mov
and
or
sbb
movsb
mov
sub
daa
inc
ficoml
dec
adcb
push
mov
or
push
fucom
xor
mov
sbb
stos
pop
cmpsb
xchg
mov
mov
fwait
insl
xor
mov
cli
push
inc
inc
pop
fdiv
adc
pushf
stos
xchg
pslld
jnp
jno
sub
rcrl
lock
ljmp
orl
jne
outsb
xchg
adc
out
xor
pusha
or
mov
jo
lea
cmp
lahf
mov
test
and
movb
rolb
clc
mov
cmp
clc
test
cltd
lods
mov
gs
dec
jne
rorb
pop
cld
scas
push
test
lock
aam
clc
pushf
sarl
dec
add
cmp
xor
jbe
rorb
mov
sbb
push
or
inc
adc
mov
add
or
sub
xchg
in
pop
movsl
clc
sub
in
scas
and
out
outsl
adc
jecxz
int
out
shll
xchg
rcl
jle
mov
sbb
ljmp
jbe
sub
dec
int3
add
xlat
push
aas
xor
push
jae
out
sti
das
rcl
fwait
inc
mov
cld
xor
jb
add
xor
xlat
dec
test
inc
adc
inc
jg
xor
sti
adc
mov
add
jmp
adc
mov
push
mov
inc
daa
dec
xor
in
icebp
xor
ficomps
stos
sbb
rcrl
push
cmp
les
outsl
mov
add
mov
loopne
fbld
dec
push
in
cmp
add
inc
push
call
shrl
aas
stos
test
subb
cmp
push
aam
sbb
int3
mov
or
inc
sub
mov
xor
push
xchg
call
mov
and
adc
mov
inc
and
push
out
adc
bound
daa
loopne
insb
push
mov
xor
hlt
fucomip
or
pop
jg
in
adc
and
sub
cltd
aam
and
mov
stos
adc
outsl
cld
sbb
jle
or
add
hlt
add
add
add
push
inc
jo
xor
and
or
sub
mov
xchg
clc
scas
movsl
or
add
or
ljmp
enter
mov
scas
adc
fwait
jo
xchg
lea
shr
pop
add
cmp
inc
inc
sbbw
mov
dec
pop
fcoml
mov
loopne
mov
test
xor
inc
nop
es
into
mov
inc
incl
repnz
push
pop
lret
or
enter
push
xor
ljmp
push
roll
pop
push
add
cwtl
into
scas
add
cmpsb
fsubl
add
adc
sbbl
xlat
scas
out
mov
andb
aam
adc
fisubrl
add
or
and
cmpsb
loop
int3
adc
add
test
cli
sub
or
mov
loopne
pop
or
jmp
pop
lret
adc
jbe
leave
inc
jno
add
lret
and
dec
adc
orb
push
dec
imul
sub
jmp
lods
cli
push
jl
loope
sti
mov
adc
mov
lods
push
fs
js
outsb
repnz
sti
mov
sbb
and
imul
jp
xor
cmp
lret
and
pop
das
hlt
or
in
es
mov
rol
fdivr
mov
inc
add
mov
orb
jbe
add
in
xchg
xchg
xor
aaa
add
mov
cli
sbb
dec
add
mov
or
dec
icebp
pop
mov
out
movsb
stos
add
ja
lods
jne
pushf
shrb
mov
fistpl
sbb
push
adc
ret
jle
sub
imul
jle
aad
pop
jnp
insl
out
out
sbbb
int3
cmp
pop
adc
outsb
incl
mov
sbb
pop
add
out
push
cmp
adc
add
mov
fstpt
fcompl
call
fisttpll
into
mov
sbbl
mov
int3
mov
mov
lcall
nop
nop
stc
clc
icebp
push
scas
or
dec
out
push
sbb
cli
fstpl
adc
pop
push
cmpsl
inc
mov
sbb
outsl
lds
test
fs
scas
dec
and
pop
xchg
pop
scas
sbb
or
je
jg
aam
out
pop
call
xchg
fcoms
insb
cmp
rorb
xorb
push
dec
xchg
outsb
addr16
shll
pop
in
push
dec
loop
mov
cmp
add
cmp
repnz
out
jl
aam
shll
push
xor
mov
mov
movsb
scas
stos
cmp
bound
roll
xchg
or
stos
push
sub
inc
popf
and
lds
adc
mov
test
in
es
jg
int
or
pop
out
pop
adc
loope
push
push
fwait
cmp
enter
es
sbb
ret
inc
pushf
adc
push
adc
lcall
adc
xchg
dec
lods
ret
sub
fdivp
divb
xor
adc
push
mov
push
mov
inc
jmp
adcl
rcrb
jno
cmpsl
xchg
and
les
push
sub
or
faddp
rcrb
out
pop
xor
movsl
nop
and
lock
add
aad
jle
push
add
add
dec
and
adc
adc
ss
adc
and
lea
pop
push
call
icebp
clc
testb
lcall
jmp
out
xchg
in
mov
cld
lret
fiaddl
loopne
in
sub
push
and
test
xor
mov
add
cmpsb
outsl
std
and
loop
fildll
sbb
add
adc
stos
pop
call
lock
push
fucomp
mov
bound
push
rclb
adc
shlb
hlt
scas
adc
rol
add
dec
pop
xchg
mov
sbb
adc
and
inc
enter
fidivs
pop
test
call
or
push
pop
aad
loop
adc
adc
sub
inc
rcrb
cmp
mov
cmp
movsl
stos
movsl
and
pop
pop
pop
push
add
in
xchg
clc
push
sub
xorb
and
es
sarb
inc
lock
jmp
popf
addr16
mov
fwait
sub
push
inc
popa
add
xchg
movsb
lds
pop
mov
jg
jmp
inc
jmp
mov
scas
xchg
xchg
push
fcoml
sub
out
xor
shrb
call
stos
enter
pop
push
or
lods
xor
fdivrl
jle
shrl
rorl
add
mov
mov
insl
inc
mov
shll
outsb
shrb
xchg
ljmp
add
xchg
pusha
ja
imul
adc
rolb
sahf
dec
dec
sub
movsl
jb
dec
iret
sub
mov
adc
mov
arpl
jp
jle
inc
cmp
mov
mov
xor
aam
shll
jb
and
cmpsb
add
insl
add
pop
dec
inc
stos
push
lods
mov
pop
or
clc
mov
sbb
inc
pusha
das
inc
dec
xchg
andb
imul
sub
data16
pusha
lea
or
cmp
and
out
popf
sbb
cwtl
je
addb
fsubs
push
inc
int
nop
or
fistps
aam
insb
cmp
add
jg
and
in
sbb
popf
jge
xchg
sub
hlt
cmc
cmp
ds
clc
xchg
nop
xchg
js
clc
movsl
orl
ljmp
cwtl
mov
insb
or
cli
inc
into
add
fwait
push
adc
stos
pop
pop
rcll
mov
outsl
aad
es
mov
or
int
adc
add
roll
nop
adc
insb
mov
adc
cmp
imul
fst
jmp
rcrl
roll
clc
loope
xchg
cwtl
loopne
movsl
pushf
and
push
inc
add
sbb
jg
ja
mov
xor
mov
sti
fwait
stc
sub
cmp
mov
icebp
jb
movsl
out
sub
aaa
clc
shrl
out
pop
inc
in
jg
outsl
mov
add
mov
add
sbb
mov
pushl
pop
outsl
mov
pop
mov
xor
subl
inc
inc
sbb
adc
pop
gs
sahf
cmc
pop
popa
aad
pop
sbb
enter
loope
es
or
loope
mov
insl
mov
and
xchg
mov
pop
xchg
outsl
sbb
mov
and
push
mov
sti
xchg
cmp
int3
inc
mov
loop
imul
rolb
mov
xor
jne
cmp
push
outsl
jnp
xlat
xor
and
mov
dec
inc
bound
punpcklbw
add
or
and
xor
shll
xchg
or
and
fsubrs
in
leave
outsb
inc
cs
and
test
daa
in
push
mov
fadd
aaa
pushf
pop
xchg
and
bound
xchg
cld
xchg
in
sar
das
fisubs
mov
cmp
testl
loop
aam
xor
je
sqrtps
sub
jae
and
inc
cwtl
scas
add
push
mov
test
jp
cpuid
sbb
mov
lods
lea
sub
and
inc
inc
cld
mov
lods
stc
xlat
sbb
add
idivb
inc
imul
adc
imul
sbb
push
pop
pop
stos
xor
punpckldq
imul
push
andl
mov
inc
enter
mov
cmp
mov
jg
pop
fbstp
mov
rorb
pop
cli
and
loopne
inc
insb
in
push
pop
arpl
ret
ljmp
stc
scas
mov
mov
and
std
rolb
aaa
hlt
push
and
mov
pop
cld
in
xor
or
jno
enter
cld
jge
sbb
mov
nop
xor
test
add
loop
daa
insb
jg
out
push
nop
pop
aas
neg
clc
mov
test
lahf
lods
mov
push
pop
adc
lret
sbb
ret
adc
mov
jne
dec
stos
cli
inc
mov
mov
mov
add
test
mov
cli
xchg
pushf
jge
or
add
pusha
push
push
mov
jg
shlb
in
xchg
fisubrl
inc
stos
sbb
pop
lret
xor
sbb
lahf
mov
inc
dec
scas
and
xchg
push
test
notb
dec
mov
and
push
add
test
std
ss
or
cli
and
in
movsb
test
pop
and
lahf
fbld
mov
les
aas
enter
pop
dec
mov
xchg
add
ret
outsb
adc
lahf
inc
arpl
mov
pop
pushf
cwtl
dec
push
sbb
adc
sub
outsl
rclb
and
cmp
outsl
mov
into
jecxz
dec
xor
adc
xchg
lock
mov
ss
popl
inc
enter
test
mov
mov
cmp
bound
inc
dec
xor
int
ret
mov
icebp
fistpl
ror
and
jbe
mov
add
pop
inc
and
decl
inc
sub
and
and
fsub
int3
mov
mov
ret
add
sbb
test
repnz
inc
push
inc
add
and
sub
push
rcll
jecxz
sbb
mov
std
adc
adc
jo
fadds
inc
pushf
adc
repnz
fists
hlt
mov
mov
push
mov
adc
jecxz
test
fdivl
inc
dec
add
in
sub
push
mov
inc
daa
sub
mov
add
mov
push
mov
dec
or
inc
fnstsw
add
or
out
adc
mov
mov
outsb
sub
xchg
in
push
mov
out
mov
add
in
rorl
xchg
dec
add
inc
inc
lds
fdivrs
repnz
or
outsl
out
shll
jge
scas
pop
stos
push
enter
push
lret
test
sub
dec
or
out
mov
lods
push
sarl
adc
faddp
mov
xor
or
inc
rorl
das
inc
dec
rcr
divl
add
negl
ljmp
mov
cli
sub
sub
fildll
roll
mov
inc
cmp
mov
push
cld
sub
add
dec
jnp
add
xchg
or
mov
fadd
nop
or
push
xor
lods
test
mov
adc
aam
or
xchg
loop
adc
std
jbe
adc
jne
adc
fcoml
or
dec
repnz
cmp
xchg
adc
rorl
out
mov
xor
add
mov
push
movsb
jl
test
clc
lret
popa
pop
dec
ss
mov
pop
ljmp
sbb
lods
nop
in
fisubl
jge,pn
add
or
mov
and
sbb
ret
in
addb
jmp
aam
lret
mov
daa
das
adc
hlt
xchg
in
pop
loope
mov
dec
push
movsl
add
push
movsl
xchg
or
xchg
adc
ret
push
xchg
add
inc
aaa
cwtl
rcrb
icebp
pop
std
jmp
pmullw
fdivrl
dec
jae
mov
or
and
pop
pop
push
out
mov
in
ret
nop
cli
inc
dec
add
sbb
orps
stos
inc
loop
or
cmp
aas
pop
lock
aam
cmp
mov
push
ret
pop
or
push
adc
mov
popf
rep
adc
adc
adc
cmc
inc
sub
rolb
adc
mov
push
mov
dec
xchg
mov
sbb
or
div
or
mov
sbb
ret
jno
adc
inc
jo
sarb
pushf
push
mov
lock
aam
adc
mov
add
or
outsb
ffreep
loop
pop
cmp
add
insb
add
addr16
add
clc
popf
lods
xor
sbb
adc
lods
mov
or
xchg
in
push
ds
andb
popf
mov
movsb
sub
sub
test
add
sub
push
and
sbb
adc
out
popf
outsl
in
cs
pop
adc
es
mov
movsl
out
ret
test
or
and
jmp
sbb
sbb
pop
ss
mov
push
rol
fdivl
mov
or
fs
das
inc
shrb
push
lahf
inc
inc
fisubs
inc
mov
adc
rol
xor
jmp
adc
mov
arpl
fcomps
sahf
std
push
mov
inc
jge
loope
adc
test
movsb
xchg
sbb
ds
cmp
xor
lret
sub
loopne
lock
pop
push
inc
test
mov
cmp
inc
add
xchg
mov
or
scas
jl
js
cmp
add
icebp
inc
das
jb
xchg
inc
pop
ficoms
pop
loope
cmp
lock
xorb
fld
sti
imul
or
xor
and
xchg
push
push
pop
push
jbe
sub
adc
out
push
test
adc
mov
into
or
test
into
or
insl
or
jecxz
sub
add
loop
adc
xor
lret
jge
sbb
jne
pop
out
and
dec
mov
dec
inc
xchg
pop
add
push
aad
lea
andb
fwait
jle
or
inc
or
test
jge
sbb
mov
cmp
pop
push
jo
sub
cmpsb
es
ja
add
push
xchg
xchg
jmp
jg
sbb
push
ret
add
inc
lcall
push
mov
out
stos
jne
lea
lods
push
sub
jge
clc
xchg
adc
orl
inc
icebp
sub
jge
leave
push
stos
push
fwait
cli
mov
imul
or
push
add
arpl
call
or
clc
in
outsb
push
test
insl
sbb
jnp
adc
mov
sar
add
icebp
jp
and
sub
insl
fisttpl
jecxz
lods
pop
adcb
inc
mov
lahf
and
ja
jg
jae
add
movsb
add
mov
bound
push
mov
jg
insb
push
rorl
sbb
test
dec
sub
test
sub
mov
rol
mov
repz
flds
shlb
test
les
mov
ret
cmp
cmp
pop
xchg
movsl
pop
int3
daa
hlt
and
outsl
push
aad
sbbb
mov
std
or
sbb
or
and
ret
adc
test
jo
fcoml
pop
outsl
push
jmp
add
lods
sub
mov
jne
fwait
dec
pushf
fiadds
or
jne
mov
cld
testb
pop
pop
lods
add
cmp
sub
adc
add
repz
mov
push
adc
clc
rolb
and
inc
fwait
test
test
add
mov
or
mov
or
or
in
add
arpl
call
adc
ret
and
and
xor
push
add
sbb
or
pop
jp
xor
mov
add
vaddsubpd
push
or
gs
xchg
clc
outsb
cmp
adc
popf
mov
mov
add
jg
call
adc
and
stos
dec
imul
push
add
mov
pop
shlb
and
dec
mov
jne
scas
mov
rcll
rcrl
fisubl
jle
orb
pop
and
bswap
dec
or
pop
adc
adc
stos
or
hlt
dec
xor
cmp
sub
jge
mov
push
and
decb
ljmp
mov
aam
adcl
or
std
push
mov
loop
and
lahf
mov
push
mov
lcall
loop
rolb
loop
xlat
inc
adc
jmp
mov
push
fsubs
add
mov
ret
add
and
sub
xchg
aam
insb
push
les
mov
or
int
pushf
mov
mov
ret
mov
les
bound
or
add
pop
sub
jge
or
mov
sahf
xor
imul
ds
dec
aam
adc
inc
sbb
stc
xchg
xor
push
xchg
div
addb
orb
andb
rclb
inc
mov
lret
mov
xor
add
pop
sti
adc
clc
pop
aam
xor
jnp
adc
sbb
adc
fwait
lea
jl
or
call
push
sub
dec
sbb
test
mov
out
sbb
movsl
aas
scas
push
xor
add
fisttpll
filds
xchg
faddp
mov
pushf
icebp
or
adc
add
ja
push
lea
pushf
bound
push
lods
mov
mov
stos
outsl
das
or
push
dec
push
in
pusha
add
sub
or
lds
lods
loopne
clc
add
bound
jge
lock
mov
jbe
add
scas
or
or
insb
loope
scas
outsb
pop
inc
sub
or
adc
inc
sbb
bound
mov
int
cmp
push
mov
xchg
sub
sub
daa
adc
loop
orl
mov
dec
mov
inc
outsl
or
add
inc
sbb
hlt
out
fwait
or
sbb
or
adc
fwait
fs
mov
xorl
sbb
scas
pusha
cli
xor
js
sbb
mov
fmulp
mov
adc
add
leave
daa
add
sbb
push
push
psubusw
xchg
outsl
test
hlt
adc
push
in
test
push
push
fs
in
sub
fsubrs
or
movhps
insb
mov
movsl
lahf
out
in
js
xor
cld
mulb
ja
mov
adc
ds
rcrb
testb
subl
pushf
scas
push
push
xor
repnz
shl
cmp
mov
sbb
or
pop
fs
sub
adc
outsl
cwtl
mov
jbe
ja
lahf
lods
adc
mov
or
add
and
inc
sarb
loope
xchg
dec
sub
push
sub
dec
mov
call
adc
adc
pusha
push
mov
jl
xor
gs
cmc
sbb
outsl
jle
push
imul
inc
sbb
adc
or
outsl
lret
aad
pop
mov
pop
sbb
mov
cmp
test
pop
stc
ret
inc
add
inc
xchg
movsl
dec
incl
sbb
ljmp
cmp
pop
add
outsl
cwtl
sub
push
lock
mov
loop
dec
sub
das
xorl
mov
dec
icebp
fildll
cmp
dec
jg
in
sub
adc
int
jl
jp
inc
cmp
mov
sti
cs
in
dec
xor
push
push
inc
jmp
inc
xor
mov
pop
add
aam
sub
scas
pop
addr16
test
iret
sub
insb
out
xor
pop
loop
mov
out
outsl
mov
call
mov
cmc
add
add
mov
jbe
pop
inc
jg
push
dec
cltd
mov
outsb
xchg
pop
je
incl
cmp
sub
or
pop
jl
int
je
adc
fstl
or
dec
pop
pop
sub
or
test
push
sbb
mov
push
or
add
pop
aas
mov
lea
add
out
mov
mov
ffreep
call
sbb
xchg
adc
ret
test
dec
add
push
pop
or
xor
mov
xchg
jl
insl
cmp
mov
fs
or
push
arpl
sub
add
notl
hlt
push
mov
insl
push
out
push
mov
mov
add
lods
loope
mov
adc
pop
test
cli
outsl
push
jns
jo
int3
push
push
and
jp
mov
mov
add
inc
push
cmp
test
fsts
jg
sarb
mov
andb
mov
pop
mov
cli
testb
add
movsb
out
fisttps
test
sbb
jmp
lcall
mul
outsb
xorl
sbb
inc
mov
mov
and
cli
arpl
idiv
repz
mov
test
jecxz
inc
mov
outsl
mov
jae
sbb
mov
ss
xchg
xor
xchg
xor
xor
inc
push
lea
bound
push
inc
lcall
ds
dec
mov
in
cmp
push
cld
mov
enter
add
cmp
xchg
dec
cmp
xor
incb
add
jg
xchg
negl
xchg
addb
xchg
std
jbe
jg
inc
dec
lahf
popa
fsts
int3
subb
adcl
mov
xchg
mov
fmul
js
rclb
imul
jle
cmp
sbb
sub
cwtl
testl
xchg
pop
sub
mov
shlb
stos
sbb
xor
inc
imul
dec
loop
jge
xchg
popa
pop
jp
jg
pop
pop
clc
jecxz
fs
mov
loopne
subl
loope
or
cmp
xchg
lock
test
pop
fucomp
das
insb
cli
xchg
shlb
stc
xor
mov
js
mov
sarb
mov
loop
cmp
std
ret
and
push
sar
stos
sub
push
add
lret
pop
ljmp
cli
lret
and
cld
test
cld
mov
add
pop
call
in
popa
push
mov
lods
adc
inc
and
cmp
add
push
xor
icebp
rorb
xor
or
fs
xchg
ret
ss
add
jo
mov
adc
and
outsb
push
or
out
or
test
dec
rclb
test
cwtl
adc
test
mov
jp
cmp
or
jne
movsb
cmc
je
jle
inc
ljmp
sub
std
inc
aam
xor
test
add
int3
adc
mov
cmp
mov
mov
cmp
notb
xor
shl
add
cmovg
test
jle
arpl
test
push
test
bound
movsl
incb
int3
adc
adc
add
in
std
cmp
add
das
fisubrl
inc
je
mov
or
call
mov
mull
push
ljmp
ret
ljmp
push
in
sub
sub
mov
repz
fstpl
pop
add
adcb
jecxz
jnp
adc
pop
fsubrs
or
inc
rorb
add
ja
testb
add
orb
imul
cld
pusha
add
aam
lea
lcall
xchg
pop
roll
push
add
mov
pushf
jg
sbb
fsubrp
jns
xor
rorb
adc
jecxz
xor
push
pop
xor
cmp
xchg
inc
rcrb
mov
js
and
les
sub
add
int
rolb
push
aad
pop
cltd
cwtl
dec
stos
jns
fisttps
mov
fs
push
loopne
std
aas
inc
sbb
xor
xchg
jo
add
es
jl
mov
sbb
pusha
add
mov
dec
sub
stos
push
data16
cmpsl
push
mov
aaa
xor
movsl
ljmp
xor
int3
enter
and
xor
sbb
or
adc
scas
add
or
lcall
idivb
cld
add
sbb
filds
shlb
test
gs
or
incb
xor
subb
stos
test
add
or
stos
loopne
adc
inc
lea
push
or
sbb
stc
inc
rolb
clc
and
loop
mov
sti
inc
mov
push
divb
push
fnstenv
xor
and
xor
roll
add
rorb
or
pop
xor
jecxz
mov
je
pop
aaa
mov
sbb
ljmp
xchg
add
sbb
inc
push
movsb
push
add
cmpsb
jno
push
stos
push
cmc
or
jmp
test
shll
sub
mov
push
repnz
xchg
das
les
test
mov
iretw
push
mov
add
dec
push
les
roll
fisttpll
adc
add
push
pop
shl
xorb
cmp
push
cld
cltd
or
rolb
jae
inc
or
xor
and
push
or
add
xlat
pop
sub
decb
cs
sub
ljmp
das
dec
push
jle
mov
lock
negl
cmp
sbb
nop
leave
aaa
xchg
mov
xor
xchg
xor
imul
in
cmp
lock
lock
and
ljmp
adc
add
rorl
add
mov
imul
push
jo
pop
jno
lcall
adc
mov
jmp
mov
cmpsb
xor
fcmovnu
cmc
jmp
and
xchg
lods
inc
cmp
clc
mov
push
jo
leave
add
add
inc
mov
cmp
push
add
add
loop
loop
insb
inc
test
fs
or
test
in
icebp
fdecstp
into
add
xchg
mov
pop
or
and
mov
shlb
out
or
in
add
pop
xchg
les
pop
or
cmp
push
mov
push
mov
mov
push
mov
sahf
mov
or
add
adc
das
roll
popa
sbb
daa
push
adc
add
add
push
mov
mov
adc
push
scas
inc
mov
cmp
adcl
push
mov
pop
and
add
loop
leave
mov
inc
shl
add
nop
pop
ljmp
mov
clc
fisttps
lods
shl
inc
bound
and
mov
jge
std
push
fnsave
jno
pushl
and
dec
clc
and
cmc
int3
pop
xchg
jp
pop
pop
cld
and
xchg
lods
and
sub
xor
ret
add
pop
mov
imul
jge
xchg
inc
pop
clc
mov
stc
pusha
icebp
or
popf
test
mov
clc
fadds
test
aad
add
dec
sub
inc
adc
jmp
push
js
addr16
dec
fs
ljmp
bound
or
enter
js
incl
out
addb
dec
add
xor
outsb
icebp
inc
and
inc
adc
sbb
cwtl
mov
adc
push
std
out
test
popf
adc
lret
push
fs
imul
mov
leave
vhaddps
dec
loope
fists
hlt
sbb
dec
jle
xor
in
mov
push
inc
pusha
aam
mulb
dec
cmp
pop
sarl
dec
pop
pop
insl
stos
mov
mov
out
push
dec
push
cmp
jecxz
and
xchg
mov
insl
test
xchg
aad
add
inc
mov
mov
dec
xchg
or
push
adcb
sbb
std
out
loop
pop
jmp
mov
aas
xor
sub
pop
es
jecxz
push
mov
cld
sub
dec
xchg
outsb
xor
out
loopne
cmp
das
push
pop
mov
lret
fmuls
fidivrs
dec
lods
and
subl
orb
and
pop
sbb
scas
cmpsb
mov
dec
xor
dec
into
mov
push
push
adc
mov
mov
fsub
aas
fidivrs
pushf
adc
pop
inc
cmp
mov
jge
adc
or
fwait
hlt
aam
xchg
pop
pop
ljmp
shll
xchg
iret
fcos
out
ljmp
adc
daa
or
mov
jbe
push
les
inc
jno
jb
je
or
cmc
jo
aam
xchg
mov
xchg
inc
dec
icebp
hlt
call
push
push
incb
cmpsb
addl
xchg
adc
sbb
xor
sub
jne,pt
sbb
add
int
jg
inc
roll
jno
ljmp
aas
cmc
das
pop
and
es
rcrl
dec
inc
jmp
and
mov
pop
aaa
cli
mov
inc
lret
add
dec
shrb
or
call
ret
add
adc
jo
jo
pop
dec
jp
or
mov
jge
push
imul
adcl
cvtpi2ps
push
popa
jns
into
mov
pop
es
jns
cld
sub
push
pop
xchg
jle
mov
sub
adc
push
adc
xor
hlt
mov
js
cltd
mov
mov
std
pop
jp
jp
mov
jmp
mov
hlt
push
xchg
mov
dec
or
inc
add
dec
std
jg
sbb
mov
sub
push
jmp
adc
sbb
fs
lock
es
xchg
add
adc
out
mov
lea
mov
and
int
das
sub
mov
lods
adc
in
filds
or
decl
push
clc
call
push
test
mov
pop
cmp
lds
jnp
xor
out
xchg
xchg
imul
xor
cs
dec
packssdw
ljmp
enter
cwtl
add
push
mov
jb
xchg
dec
cmpsl
stos
add
ja
push
pusha
adc
mov
and
adc
mov
pop
and
sub
lahf
mov
in
rorl
sbb
jp
sub
mov
push
dec
inc
add
pop
shr
jg
test
jae
loop
xor
mov
adc
rorl
jnp
mov
stos
fldenv
lds
xchg
add
xchg
test
sub
sub
dec
sbb
rol
adc
lea
pushf
sbb
int
ficoml
xor
add
popf
xchg
adc
and
adc
adc
pushf
std
mov
adc
fmull
pop
sbb
scas
mov
nop
stos
mov
xor
jl
push
out
or
cmp
loope
push
aas
seta
testb
ss
aaa
pop
jp
or
and
adc
inc
pop
icebp
or
mov
jns
pusha
sbb
pop
stos
push
xor
idivb
xor
push
inc
inc
xchg
ret
push
call
test
xor
sbb
into
mov
ret
mov
and
xor
jl
cli
sbb
adc
pop
add
or
sarl
int3
jno
js
add
arpl
inc
test
inc
xor
adc
add
ljmp
inc
rclb
jmp
lods
xor
sbb
scas
pop
int3
jne
cmp
sbb
pop
xor
add
pop
popa
iret
pop
add
inc
or
add
jo
mov
jg
cmp
enter
push
sub
mov
addr16
filds
fisubrl
mov
xchg
js
mov
sbb
imul
or
adc
add
adc
inc
mov
or
jno
mov
mov
enter
clc
add
push
xchg
dec
movsb
hlt
in
cmp
mov
ljmp
fldt
aam
out
or
jge
cmp
pop
fisubrl
mov
pop
cmp
insl
xorl
jo
mov
push
add
sub
or
jl
pop
fwait
jl
jge
sub
inc
xchg
inc
xchg
lret
inc
inc
add
xorl
aaa
pop
mov
jge
adc
cs
rcrb
mov
mov
nop
outsl
adc
push
sahf
fdivs
lahf
lods
mov
fstl
lods
mov
int
mov
popa
mov
sahf
les
and
push
sbb
popa
push
ret
pop
mov
pop
call
push
ret
loopne
xor
mov
mov
sbb
jmp
xchg
jo
les
adc
ficompl
fadd
mov
cmpsb
loop
std
fwait
stos
xchg
push
pop
es
shll
add
pop
push
push
outsb
mov
and
xor
inc
out
lretw
push
jl
add
pop
mov
mov
adc
imul
mov
add
and
mov
pop
hlt
jnp
sahf
mov
bound
mov
nop
mov
rcll
or
cld
cwtl
fdivr
gs
push
cld
jmp
push
jp
repnz
loop
jne
inc
and
or
jns
insl
xchg
je
adc
lock
push
hlt
clc
std
cli
push
jl
aam
ret
pop
push
in
mov
xchg
std
or
xchg
out
into
pop
sti
pop
cmp
movsl
dec
mov
inc
jns
push
insb
imul
lock
mov
jmp
mov
pop
mov
sbb
fnsave
mov
xor
and
mov
lahf
out
int3
dec
xor
dec
in
jg
mov
add
xchg
jge
mov
inc
fistl
arpl
sahf
mov
test
stos
lret
cmp
push
cli
or
add
jmp
dec
mov
mov
in
fisttps
shrl
insb
andl
xor
mov
gs
ja
jmp
jnp
or
and
mov
and
and
sbb
fistps
cmpsw
sbb
fstps
mov
jbe
test
popa
outsl
icebp
adcb
jb
push
push
inc
rorl
sbb
repz
jecxz
std
montmul
out
loopne
outsl
inc
jecxz
fsubrl
pop
and
arpl
jb
mov
sub
mov
push
push
cld
ja
and
loopne
mov
lahf
mov
sub
xchg
jl
push
aam
pop
stos
test
jle
adc
xchg
push
test
pop
inc
ror
sub
push
jo
pushl
loope
mov
ljmp
jae
xlat
bound
je
and
ret
sub
shrb
add
cli
jmp
cmp
fisttpl
push
adc
je
je
movsl
outsl
mov
dec
cmp
push
out
inc
mov
sub
push
dec
mull
repz
sbb
cmpsb
dec
pop
adc
inc
push
add
pop
adc
mov
aas
add
adc
and
xchg
xlat
add
add
outsb
adc
xor
mov
cmp
stos
pop
loope
dec
inc
sbbl
add
cltd
mov
cmp
mov
jne
dec
cwtl
sbb
dec
push
das
sub
push
out
mov
sbb
jbe
decb
test
ds
test
push
in
mov
pop
dec
bound
sub
mov
lods
clc
xlat
push
inc
movsl
inc
jno
and
mov
fcmovnb
iret
test
push
je
sub
dec
inc
rol
lea
pop
fsubs
out
mov
cmp
jae
add
and
dec
push
shrb
push
cld
mov
lods
xchg
push
fisttpll
scas
lcall
fsubl
push
leave
mov
pop
xchg
inc
push
lods
clc
movsl
out
repnz
sbb
mov
xor
pushf
or
fidivrl
add
andl
adc
jp
dec
xor
dec
cmp
inc
data16
mov
scas
jmp
adc
or
pop
xchg
imull
dec
into
out
popf
jo,pt
movsb
negl
bound
popa
cltd
xchg
prefetch
mov
lea
aad
fdivr
sbb
jecxz
andb
add
movsb
sub
movsl
cmpsb
mov
inc
adc
mov
ret
in
pop
ficompl
cmp
das
cli
push
adc
jo
mov
or
mov
dec
hlt
cwtl
idivl
sbb
mov
push
rclb
push
shlb
lock
incl
xor
inc
and
repz
mov
call
je
sbb
jne
pop
add
sub
lods
xorb
xchg
dec
jmp
cwtl
icebp
cmc
mov
ret
stc
ret
or
cmpsb
in
cmp
outsl
add
movsl
lea
mov
sti
add
pushf
xchg
loope
add
in
inc
or
or
fildll
test
mov
mov
addr16
inc
xor
dec
loopne
dec
sub
jmp
cli
insb
cltd
sbb
fldcw
jl
sbb
and
cmpsb
mov
loopne
jecxz
icebp
push
jg
rolb
mov
lods
mov
pop
mov
add
mov
arpl
jo
cmp
lcall
inc
or
das
repnz
and
jne
add
loope
repz
divb
xchg
and
cmc
mov
jmp
repnz
dec
popf
add
daa
cmpsl
mov
iret
dec
push
daa
insb
push
enterw
xor
fwait
shrb
lock
xchg
push
fsts
xchg
inc
xlat
orb
jle
dec
and
test
sbb
cmp
lods
mov
pop
daa
dec
lods
divl
jno,pn
pop
sub
rclb
std
inc
imul
enter
push
call
aam
leave
xor
mov
stc
mov
sarb
pop
adc
hlt
out
nop
xchg
mov
or
push
mov
dec
push
shrl
adc
cld
rcrl
inc
enter
pop
jbe
dec
decl
mov
call
fnsave
mov
std
subb
aad
cld
mov
sbb
sbb
push
cmp
pushl
adcb
and
mov
xchg
cmp
jle
fildl
mov
push
mov
add
jmp
fstl
add
adc
or
dec
mov
cmpsb
sbb
ret
rolb
pop
call
and
test
mov
push
ss
lods
mull
or
xchg
inc
dec
cmp
mov
loope
mov
movsl
movsl
and
jecxz
pushf
sbb
addr16
xor
push
imul
js
xchg
cs
loop
xchg
jno
and
or
pop
mov
aaa
dec
or
inc
dec
mov
push
sub
mov
addr16
imul
arpl
sbb
mov
inc
or
sbb
aam
or
mov
mov
mov
sbb
cmovno
cld
mov
insl
cmp
stos
fnsave
xchg
add
mov
cwtl
xor
xor
insb
sub
adc
ljmp
out
cmp
icebp
das
insl
pop
mov
scas
adc
mov
or
int3
aam
cltd
je
imul
mov
jl
mov
pop
push
sbb
pop
cmp
out
in
add
ret
mov
pusha
sub
mov
or
jae
bound
imull
jo
or
push
imul
mov
das
mov
fisubl
add
fsts
pop
aaa
faddp
movsl
lea
and
stos
subl
subl
int
sub
insl
pop
or
cmpsl
mov
fwait
mov
push
push
mov
cmp
daa
jl
mov
fdivs
fwait
jmp
aad
fcmovnb
adc
jle
mov
dec
mov
mov
mov
loop
lret
rcrl
ss
ljmp
add
cmpl
lock
ss
cmpsl
adc
std
pop
fs
fstpt
enter
gs
cmp
mov
in
pop
in
movsb
mov
and
mov
shll
test
ja
loopne
ss
fcomip
pop
and
inc
and
or
jg
xor
subl
mov
and
nop
ss
loop
mov
movsl
ljmp
jp
mov
inc
mov
xchg
mov
clc
push
inc
bound
pop
pusha
push
pop
mov
cmp
and
data16
insl
mov
sbb
gs
aaa
jle
adc
shrl
xchg
jmp
push
aad
mov
adc
les
mov
jg
pop
cli
fs
or
shrb
loopne
cld
mov
adc
sbb
sbb
cs
mov
das
das
pusha
push
cmc
jo
fistpl
imul
dec
bound
test
clc
lods
js
ljmp
inc
sbb
pop
jmp
bound
icebp
enter
inc
sub
popf
mov
lret
and
ss
pusha
cmpsb
lds
and
adc
andb
inc
mov
sbb
dec
push
push
dec
repz
imul
mov
push
jle
cwtl
cmpsb
js
xor
and
push
add
rcr
jae
xchg
adc
mov
inc
das
jbe
outsb
sarl
leave
inc
pusha
clc
dec
sbb
sbb
movq
cli
idivl
push
stc
rcr
sbb
ss
ds
nop
xor
pop
lods
or
jnp
aaa
pop
pop
sbbl
and
outsl
adc
adc
mov
xchg
xor
dec
mov
icebp
jmp
add
lods
dec
nop
or
in
mov
aam
sahf
fldcw
mov
lods
sbb
xchg
jl
mov
test
incl
loopne
add
icebp
popf
shr
cwtl
push
xor
adc
cmc
ljmp
test
mov
and
or
jbe
and
fs
mov
vblendvpd
adc
add
xchg
pusha
jl
decl
fildll
push
add
jg
and
cmp
adc
sbb
pop
mov
sbb
mov
into
lock
and
js
lret
xor
and
or
punpckldq
addl
and
out
push
push
fildll
scas
movsb
dec
push
ja
clc
pop
decl
adc
xchg
jbe
jo
xchg
call
pop
or
sub
movsl
ffreep
ljmp
sarb
fcoms
out
inc
push
pop
sti
rol
mov
mov
jne
dec
mov
andl
bound
cmpsb
sbb
push
inc
gs
aaa
push
lea
pusha
cmpsb
aaa
addr16
pop
test
mov
fisubrl
jg
mov
push
xchg
arpl
mov
std
jne
aaa
add
sbb
mov
jg
mov
add
push
pop
inc
jae
mov
lds
mov
dec
std
pushl
in
sahf
xor
out
out
lods
adc
xchg
mov
mov
outsl
dec
pop
aaa
outsl
lret
inc
lret
push
shrb
sbbb
decl
sbb
mov
lret
sbb
inc
lret
int3
adc
jg
loop
xor
lock
or
mov
ficoms
adc
add
ret
add
ss
roll
pop
sub
mov
inc
inc
sub
xchg
mov
test
adc
leave
add
push
mov
inc
das
andb
push
adc
ret
jb
je
int3
sbb
sub
inc
inc
lds
push
dec
adc
lods
xor
mov
xchg
sarb
push
xor
mov
push
jno
sbb
hlt
daa
lahf
aaa
stos
add
pop
mov
adc
sbb
aaa
scas
and
cmp
imul
ret
mov
inc
out
sbb
fdivl
cld
sub
push
add
pop
cmp
adc
adc
les
sti
sbb
jge
cs
mov
je
mov
jb
add
sbbb
ret
repnz
mov
xchg
jne
jo
adc
fidivrl
mov
pop
adc
and
sub
pop
js
sbb
mov
and
iret
mov
jl
scas
push
inc
lock
fwait
bound
xchg
loopne
add
lods
cmp
xorb
push
xchg
das
popa
fs
inc
leave
mov
sahf
test
filds
mov
into
cmp
pop
or
add
lds
mov
dec
aad
dec
pushf
mov
mull
add
popa
mov
adcb
mov
out
inc
inc
mov
sbb
aas
adc
adc
inc
roll
add
jns
cmp
sbb
jmp
inc
loope
add
daa
or
dec
inc
lock
dec
push
les
data16
add
and
push
rolb
cs
pop
cwtl
adc
mov
and
jl
sbb
mov
daa
inc
stc
add
jp
into
xlat
pop
nop
or
dec
inc
jo
adc
inc
rcrl
add
fsubs
jle
add
jne
and
xor
imul
adc
test
in
mov
in
int3
dec
lcall
je
or
outsl
sub
or
xchg
add
jge
pop
push
pop
mov
cwtl
xchg
and
lock
pop
cld
sbb
or
jno
mov
hlt
add
pop
and
mov
add
enter
jne
fsubr
fs
loop
add
aam
and
outsl
lock
aaa
adc
int3
mov
aam
das
pop
daa
sbb
aam
andl
filds
xchg
adc
mov
sti
adc
loop
lahf
jmp
and
or
inc
xchg
mov
repz
push
aad
test
push
jg
fwait
add
aas
lock
in
test
das
add
adc
into
mov
lahf
xor
add
cld
lret
lock
pop
pop
dec
xor
rcll
cmpb
fcoms
int3
add
aad
popa
mov
incl
movsb
xor
or
lea
or
aas
mov
das
aam
cmp
out
movsb
adc
and
mov
push
mov
js
es
in
test
sbbb
cld
xchg
push
addb
data16
xorl
jbe
or
fs
daa
shll
add
outsb
and
inc
add
mov
sub
and
cli
js
mov
cmp
and
cltd
ja
sbb
jbe
into
or
notb
inc
rorb
stos
ficoms
push
dec
mov
xor
scas
inc
xchg
ret
cmpsb
push
xchg
mov
in
in
sti
mov
pop
mov
rol
int3
shll
inc
std
add
iret
mov
push
std
jg
test
sarb
jbe
ficoml
mov
add
ret
jge
pop
fsubr
fistl
fbld
test
cwtl
mov
add
dec
mov
push
add
inc
scas
sub
sbb
fidivl
cwtl
adc
movsl
or
js
pop
inc
das
xor
lcall
or
mov
test
in
dec
jnp
lcall
mov
cmp
mov
outsl
aaa
jg
movsb
je
jecxz
addr16
dec
lea
mov
jae
icebp
ss
sbb
inc
test
test
movsl
and
mov
js
nop
lret
cmp
add
sub
push
mov
add
fisubl
and
or
push
adc
mov
movsb
out
jbe
fldt
jo
push
clc
xor
mov
sti
sbb
loopne
mov
insl
jmp
jp
subl
jmp
dec
cwtl
xchg
sub
pop
insb
daa
and
mov
mov
push
out
jnp
call
outsb
or
cmp
adc
cmpsb
push
aas
mov
icebp
out
pop
fdivrs
add
mov
or
aam
push
hlt
mov
push
cmp
mov
sbb
imul
repz
mov
xchg
loope
mov
movsl
scas
cmc
test
inc
sbb
pop
ja
clc
and
mov
jno
push
ss
and
lods
pop
movb
jge
inc
leave
push
cs
jns
jp
fcom
das
push
jae
movsl
nop
pop
add
movsl
add
aaa
fisubl
cmp
das
inc
xlat
sub
mov
in
jg
mov
clc
inc
and
lahf
xchg
add
xchg
sbb
push
stos
hlt
and
gs
push
cltd
mov
rorb
nop
xchg
shll
adc
push
insb
push
mov
jnp
rcl
test
mov
mov
cmp
dec
add
xor
sbb
add
movhlps
aaa
imul
fisubs
sub
add
cmp
mov
out
pop
sub
js
push
shl
pop
pop
push
adc
sub
inc
lods
add
jo
add
mov
fwait
and
or
cmpsl
lret
faddl
inc
inc
add
data16
or
push
sub
mov
hlt
or
cmp
stos
mov
inc
inc
and
mov
mov
subl
or
or
pusha
adc
pop
adc
sbbl
sbb
cmp
popa
lods
stos
insl
or
inc
mov
rolb
jns
aam
add
add
adc
or
jecxz
jb
es
movsl
lock
test
imull
js
push
or
add
call
adc
xchg
lock
cs
add
fsubrl
adcb
dec
mov
sbb
cmp
mov
push
pop
hlt
dec
add
and
ffree
js
push
js
outsb
mov
mov
outsl
idivl
sub
pusha
add
xor
rcll
mov
add
mov
js
movsl
cmp
orb
xchg
pop
movsb
orb
mov
sub
cmp
mov
adc
or
int3
mov
dec
stos
push
pop
ljmp
test
in
adc
inc
sub
lods
mov
addl
add
hlt
ror
cmp
filds
add
mov
int3
adc
inc
and
cmp
push
je
or
in
popf
xchg
pushf
or
cmp
rcr
mov
mov
adc
out
fildl
adc
adc
in
xor
jge
xor
xorb
rorl
cmp
inc
xor
sub
jmp
test
xlat
sbb
sbb
or
adc
or
sub
pop
ret
stos
and
cwtl
and
and
or
add
push
jecxz,pt
jns
pop
sbb
inc
daa
adc
cmp
inc
inc
ja
dec
int3
loopne
stos
or
stos
xlat
adc
incl
popf
mov
das
andb
sbb
xchg
jle
lds
mov
cmp
mov
in
cmp
mov
test
mov
cmp
js
adcb
adc
adc
pop
inc
cmp
adc
ja
int
jne
pop
sub
cmc
push
iret
adc
sti
test
shl
mov
out
movsb
test
push
xorb
adc
cld
adc
inc
push
mov
loop
add
ljmp
sbb
cwtl
mov
jge
addr16
ljmp
mov
pop
ds
inc
or
dec
cmpsl
mov
sub
or
mov
inc
out
mov
cmp
arpl
or
mov
out
bound
sarl
jae
or
jl
sbb
xchg
jb
dec
gs
sub
test
leave
insl
in
popf
and
jb
in
mov
adc
push
push
scas
fisubs
das
pop
push
call
loope
shll
cmp
fsubl
insb
faddl
ljmp
push
test
neg
out
fisubrs
xor
xor
and
mov
pop
push
cmc
and
cli
and
scas
out
or
inc
adc
cmpb
lock
add
in
sub
pop
shrb
nop
stos
loopne
add
push
rol
mov
mov
in
sarb
or
das
push
cmp
popa
lret
sub
mov
mov
sbb
pop
add
mov
les
int
clc
andl
testb
inc
cmp
aam
and
push
add
push
inc
adc
pop
pop
or
outsl
add
icebp
pop
inc
cli
dec
inc
jge
fbstp
push
gs
aas
orb
aas
es
adc
or
daa
cmp
add
adc
lret
es
add
mov
adc
jg
test
in
sbb
dec
add
xor
fs
icebp
pop
xorb
test
push
xor
fninit
cld
xor
inc
sub
rolb
push
test
add
aaa
imul
add
shrl
pop
sub
sbb
dec
push
xor
in
adc
jl
mov
clc
sbb
lods
push
lock
xchg
adcb
insb
fsubl
xchg
call
iret
fsubrl
imul
sub
sarb
test
cwtl
jno
aad
push
and
sub
or
jne
push
pop
roll
movsb
das
pop
sub
aad
pusha
or
bound
and
stos
lods
das
lock
jae
dec
xchg
hlt
xor
pop
fsubr
mov
dec
mov
sbb
orl
or
cli
and
rolb
sub
je
dec
in
aas
inc
sahf
hlt
adc
push
test
jne
cmp
insb
ret
add
das
adc
aam
ret
int3
adc
into
mov
or
sub
cmp
push
cmc
cmpsb
jmp
adc
test
loopne
leave
add
sub
pop
jmp
xchg
je
loopne
add
push
xchg
imul
std
xlat
insb
add
dec
scas
outsl
pop
mov
es
inc
inc
loop
xor
test
dec
je
loopne
inc
jae
adc
jge
sbb
jbe
xchg
fwait
mov
jmp
adcl
bound
icebp
cld
fdivs
andl
and
xchg
shlb
cltd
outsb
out
outsl
ss
lods
jne
inc
add
cmp
or
andb
sbb
sub
int
sub
or
mov
fdivs
stos
jp
scas
pop
ss
xor
dec
adc
stos
push
add
fmuls
mov
subb
add
fmuls
mul
xchg
into
push
fldenv
xchg
insb
jne
js
sti
push
addr16
into
inc
nop
adc
mov
mov
sbb
or
pop
scas
jno
xor
inc
add
mov
ja
je
aam
gs
insl
push
cld
sub
lods
sbb
cli
cmp
mov
int
test
imul
adc
shl
xchg
push
adc
rol
add
xor
inc
test
stos
or
js
push
std
xchg
jl
inc
mov
lds
inc
imul
mov
pop
repnz
adc
aam
shlb
stos
cmp
or
cmp
outsb
and
adc
in
cmp
add
repz
ret
in
or
hlt
fisubrl
les
xchg
cmp
mov
cwtl
xor
test
dec
repnz
lcall
fstps
or
test
or
sbb
xor
fnsave
or
lret
cltd
clc
adc
xor
jo
icebp
inc
mov
das
scas
rorb
mov
pop
mov
adc
cmp
stos
and
and
mov
add
add
pusha
push
sbb
std
testb
xchg
xchg
inc
test
in
iret
xor
cmp
rcr
aam
add
cmp
icebp
pop
xor
lock
and
loopne
into
aaa
loope
lods
mov
loope
dec
inc
outsl
clc
push
lret
mov
push
fsubl
pop
add
and
iret
mov
cli
in
jbe
lods
xlat
xor
cmp
int
lock
in
add
out
xor
clc
fmul
add
call
insl
stc
xor
rolb
int
add
dec
or
fwait
dec
lcall
daa
shll
dec
cld
movsb
cmp
outsl
divb
arpl
in
xchg
and
lahf
sub
or
aaa
loopne
orb
cs
scas
scas
push
clc
mov
cmp
add
push
mov
lea
push
push
xor
sub
repz
jle
inc
loopne
mov
jmp
mov
shll
inc
sarb
sub
sub
jl
jmp
inc
shrl
cmp
shll
fnstcw
icebp
add
lods
jmp
lock
shl
stc
cmp
std
adc
les
insb
in
mov
inc
adc
cmp
loope
pop
sbb
pushf
in
cld
sti
lea
lret
xchg
push
pop
push
add
push
adc
and
or
lds
xor
or
cwtl
sbbb
loopne
pop
repnz
push
sahf
jle
insl
ss
cmp
repz
or
fmull
stos
xor
aas
inc
test
sbb
adc
sbb
add
push
sahf
and
jp
cld
mov
lods
sub
insb
loope
push
pop
adc
clc
faddl
insb
add
pusha
push
inc
iret
sbb
and
lcall
sbb
ret
or
and
jmp
fisttpll
push
aas
dec
ret
inc
inc
push
mov
icebp
aaa
cmp
test
xor
xor
sub
sub
loope
rolb
push
sub
hlt
push
mov
mov
push
mov
xchg
sub
icebp
mov
mov
or
bound
aad
out
cli
bound
xor
shr
sbb
add
insb
lahf
ja,pt
int
push
or
icebp
sbb
adc
push
outsl
add
shll
dec
adc
insl
xor
sbb
xlat
clc
and
iret
pop
sbb
test
sub
mov
fimuls
xor
push
out
daa
push
int3
lcall
divl
dec
imul
repnz
daa
or
je
dec
jae
sub
loopne
sbb
cs
enter
aas
jp
mov
pop
and
and
cli
fsubrl
inc
xchg
sti
test
pop
loopne
push
outsl
push
addb
jp
js
push
jne
rcrl
orl
pop
ja
cmc
aaa
add
cld
jb
inc
outsb
inc
in
add
in
lcall
lea
cld
adc
int3
push
fwait
aas
sbb
hlt
adc
push
adc
jmp
inc
jmp
rol
dec
dec
adcb
lret
sbb
int3
and
mov
out
cmpsl
divl
ret
sti
loope
and
les
push
xor
inc
pop
andb
dec
cld
push
sub
xchg
push
add
sbb
pop
rclb
push
jle
ret
jp
cmpsl
push
aad
outsl
jns
inc
mov
js
lret
mov
lahf
test
mov
fsubs
adc
lcall
dec
sub
xchg
jl
sub
sbb
les
dec
mov
mov
aas
jmp
test
jae
repnz
out
jne
adc
mov
dec
push
inc
inc
sub
xchg
sub
sub
clc
fists
call
adc
loopne
lock
je
add
dec
push
sbb
mov
lret
ja
ljmp
inc
or
test
iret
jle
xchg
les
andb
push
test
mov
stc
call
lds
xorl
testl
xor
cmp
or
adc
in
xchg
in
mov
xor
sbb
testl
or
call
inc
lret
adcb
ja
inc
xchg
cs
fdivrl
dec
inc
pop
jecxz
or
dec
or
inc
push
mov
pop
test
roll
iret
shl
popa
push
add
jb
inc
inc
test
or
fidivl
adc
or
popa
mov
inc
jbe
lds
cmp
adcb
xchg
js
inc
fistl
and
dec
jns
js
daa
adc
adc
ficomps
add
and
jb
notl
or
mov
push
cwtl
imul
cmp
push
cmpsb
mov
inc
or
mov
dec
daa
dec
dec
add
add
sar
pop
test
cmp
inc
or
mov
sub
iret
add
add
or
adc
push
add
pop
sub
xchg
jp
inc
jbe
cs
sub
inc
loopne
cld
xchg
dec
adc
test
ja
xchg
into
pop
add
sub
testl
call
xor
add
dec
add
pushf
lods
jnp
test
lds
jb
insb
inc
push
and
orb
inc
jmp
and
arpl
inc
mov
jbe
icebp
out
lods
push
mov
hlt
mov
jno
push
adc
mov
mov
add
fldpi
je
out
push
outsl
cmp
sbb
sbb
push
jmp
cmp
sub
in
and
pop
cltd
sbb
ret
xchg
jno
pop
mov
sub
in
cs
adc
dec
loopne
mov
sub
andb
adc
roll
test
and
aas
mov
adc
jne
rclb
aaa
mov
aas
incl
ds
push
ret
test
inc
mov
mov
add
maskmovq
negl
sbb
adc
fidivrs
dec
test
pop
loop
shrb
push
xlat
pop
inc
js
xchg
loopne
and
sbb
cmp
jb
popa
cmp
stc
push
rclb
push
xor
rclb
movsl
frstor
aas
xchg
xchg
mov
jmp
fistl
push
inc
mov
sbb
push
xor
lock
lahf
pop
xor
xor
and
sub
outsb
adc
mov
pushf
push
xchg
and
xor
adc
test
xchg
cltd
subb
mov
sbb
cmp
sub
lods
and
xchg
mov
mov
sbb
sub
push
jecxz
mov
inc
push
bound
pusha
sub
jge
inc
add
mov
test
fdivs
inc
loopne
pushf
ja
or
push
or
mov
pop
cwtl
pushf
nop
or
jg
xor
and
lret
xor
push
cld
sub
sub
sbb
into
scas
and
call
stc
shlb
js
fs
adc
xor
xlat
or
and
mov
in
pushf
xor
cmp
jne
fisubs
mov
loopne
aas
out
cld
mov
mov
into
bound
addl
and
mov
out
sub
mov
inc
aas
adc
out
loop
icebp
inc
jmp
shll
adc
fnsave
xlat
and
jbe
js
pop
mov
repz
negl
call
fnsave
mov
lods
mov
and
sbb
das
fsubl
jecxz
cmpsl
cmp
bswap
inc
mov
cmpsb
arpl
xor
mov
or
sbb
cmpb
mov
out
stc
inc
iret
jae
and
adc
dec
lds
mov
aas
sub
mov
add
fpatan
mov
mov
iretw
pop
lods
fcomi
dec
sbb
mov
pop
std
cmp
mov
inc
jle
or
fwait
cmp
mov
add
and
and
or
popf
or
aam
lret
cmpsb
in
dec
adc
dec
and
lods
jmp
mov
adc
andb
or
xchg
movsb
dec
or
cmp
mov
fcmovb
or
mov
mov
adc
jb
in
les
adc
push
lds
add
xlat
push
scas
addb
jo
xchg
out
enter
jns
mov
icebp
sbb
xor
pop
mov
int3
mov
mov
and
cld
mov
movsb
inc
xor
clc
pop
ljmp
out
mov
xor
faddl
gs
sbb
jbe
cmp
jmp
add
fsubs
add
sti
cmc
mov
mov
xor
and
lret
and
xor
pop
or
in
aaa
ret
out
add
jne
lock
inc
jae
out
fisubrs
sub
es
cmp
adcb
fwait
mov
dec
inc
js
cld
lret
lcall
jbe
jne
push
aas
sub
aad
cld
pop
stos
insl
ret
out
repnz
push
xchg
cmpsl
repz
cmp
dec
nop
add
and
movsb
and
out
scas
or
dec
inc
pop
pop
push
insl
jbe
sbbb
daa
cli
loopne
lea
or
ret
xchg
jp
pop
ret
jl
add
add
or
stos
cwtl
push
loop
sbb
cld
pop
je
cmp
jns
popa
pop
sub
test
in
xchg
shrl
xchg
fs
dec
icebp
adc
jo
shlb
mov
adc
jb
and
push
mov
in
lock
inc
mov
fbstp
js
ja
xor
or
icebp
icebp
or
adc
stos
inc
insb
push
dec
dec
fimuls
rclw
enter
mov
fildl
roll
rol
or
inc
xchg
adc
and
add
fiadds
dec
ljmp
test
push
loope
nop
push
aas
lahf
ljmp
xor
outsb
aaa
push
call
dec
lret
mull
push
jne
movb
pusha
jb
imul
mov
dec
orl
inc
mov
xchg
pushf
sbb
mov
mov
xor
inc
pop
lods
push
adcl
sbb
mov
jbe
cmp
add
and
adc
sub
ss
js
and
shrl
inc
lret
xor
clc
mov
fisubl
movsl
adc
paddb
jb
out
rclb
icebp
add
gs
test
les
mov
xchg
bound
dec
stos
jg
inc
out
pop
sbb
push
push
and
cmc
dec
xor
fsubs
outsl
pushf
test
jno
mov
loope
stos
orl
sbb
icebp
or
fiadds
lret
inc
adc
pop
jne
adc
and
fwait
inc
and
addb
mov
in
jge
and
test
sub
push
lret
popa
insl
inc
xchg
mov
sbb
loop
insb
test
shlb
mov
fwait
mov
cmp
mov
inc
loope
xor
xchg
dec
fsts
aad
add
mov
pop
ds
popf
ss
dec
stos
xchg
xor
andb
jp
pop
outsl
mov
push
iret
pop
imul
pop
push
loope
in
scas
or
and
mov
sbb
inc
jns
mov
mov
mov
neg
call
icebp
or
sahf
xor
cmp
xchg
jne
test
adc
adc
cli
dec
or
adc
sub
mov
out
cli
mov
imul
shrb
int
repz
sub
loope
loop,pt
inc
cmp
inc
ss
or
or
jg
push
mov
aaa
test
sbb
and
hlt
adc
mov
sbb
sub
fwait
or
test
test
int3
add
pop
daa
xor
js
loopne
hlt
cmc
add
lret
cmc
mov
or
pop
les
push
jae
or
testl
mov
dec
daa
clc
movl
and
addl
sahf
add
add
mov
mov
add
notb
shrb
arpl
push
orb
subl
icebp
out
add
pusha
lock
cmp
sbb
out
int3
add
test
negl
push
cmp
inc
xchg
stos
push
or
pop
out
mov
daa
inc
sbb
or
and
scas
pusha
cltd
fistps
hlt
test
adc
jae
cwtl
loopne
add
inc
xor
pushf
or
xchg
add
inc
sub
bound
inc
push
pop
jnp
mov
jo
sub
xor
jb
xor
sbb
xchg
test
cmp
cmp
jne
adc
add
mov
hlt
in
inc
lret
pop
adc
loope
repz
push
or
or
xchg
push
cmp
jnp
rcl
sub
sub
dec
and
pop
dec
mov
mov
repnz
xor
cwtl
ret
mov
push
aam
and
cltd
orl
aas
daa
les
xor
xor
push
sbb
outsl
cli
adc
cmp
mov
es
pop
cmp
addb
add
mov
mov
push
ror
loop
pop
jnp
sbb
or
bound
pop
and
imull
jl
mov
sub
jl
and
push
cwtl
test
jne
and
dec
cmc
mov
jle
arpl
jo
aam
negb
hlt
sbb
outsb
fldt
fisubrl
adc
test
repnz
inc
add
mov
add
loope
and
jne
gs
xor
jo
clc
outsb
sbb
jae
imul
repz
fs
je
hlt
jle
subl
adc
test
adc
pop
push
sbb
cmp
frstor
add
add
mov
add
bound
jo
sbb
mov
adc
inc
inc
and
shlb
lret
pop
adc
xchg
mov
pusha
stc
add
or
add
mov
shll
bound
mov
cmpb
add
mov
rol
pop
cld
lret
adc
lock
andb
hlt
iret
and
loop
int
in
mov
push
pop
in
push
mov
inc
outsl
in
jp
andb
addr16
add
cld
and
mov
jecxz
mov
cmp
dec
sbb
sub
cmc
xchg
and
int
inc
lea
mov
cmpsb
dec
pop
mov
sub
jmp
adc
push
adc
jb
xor
jecxz
aam
push
xchg
shl
rorl
jbe
or
inc
sub
push
sbb
mov
mov
jmp
or
sarl
or
inc
or
cmc
cmp
call
mov
out
shlb
mov
jp
push
lock
inc
insb
sbb
aad
adc
dec
lock
inc
adc
ja
pusha
cmp
cmp
cmp
mov
cmp
paddb
xor
add
add
sbb
loop
sub
pop
mov
jge
mov
imul
adc
add
mov
addb
sbbb
add
add
bound
scas
fiaddl
sbbl
gs
jbe
mov
fwait
push
fadds
mov
ret
jae
or
mov
jns
and
add
mov
or
int3
adc
add
add
sub
pop
in
sbb
adc
shrl
push
jmp
add
sub
adc
ret
cltd
push
push
inc
cmp
shll
and
jne
mov
pop
sar
push
pushf
pop
mov
xor
adc
mov
js
jnp
mov
pop
lea
sbb
int3
dec
push
cld
xchg
cmp
test
adc
sub
dec
add
adc
push
xor
loopne
pop
adc
mov
add
int3
mov
mov
xchg
inc
cld
sbb
jo
sbb
or
xchg
cwtl
push
cld
sub
daa
push
ss
inc
mov
or
or
clc
popa
add
cmp
pop
xorb
movsl
sub
std
rclb
and
push
out
add
sub
xor
cmp
add
int
outsl
or
sub
lods
pusha
sbb
and
or
aam
adc
adc
data16
loop
aam
cli
add
std
or
xor
adc
xor
clc
adc
rcrb
loop
rorb
inc
jne
ret
adc
aad
mov
and
movsl
mov
xor
xchg
mov
inc
pop
rcr
lods
add
dec
add
shlb
out
add
fcmovu
icebp
push
xor
mov
rcrb
inc
cmp
lock
movsl
and
popl
in
xor
in
cmpb
jl
add
mov
cmpsb
mov
add
sub
inc
pop
orl
das
es
and
jle
test
or
cmp
imul
or
je
or
dec
cmp
test
shll
stos
jmp
cmc
xchg
rcll
lock
add
mov
add
sbb
inc
mov
xor
call
inc
dec
adc
std
mov
sub
loopne
push
pop
add
lods
and
jge
push
sti
test
adc
or
cltd
mov
xor
jbe
loop
push
push
call
lods
adc
inc
ljmp
or
mov
in
hlt
call
or
cmpsl
inc
add
add
or
es
add
mov
pop
test
add
lahf
xor
xchg
out
sub
ljmp
roll
add
nop
fadds
add
mulb
add
jp
or
or
mov
pop
stc
test
add
dec
leave
xor
mov
je
hlt
in
in
out
jg
mov
lods
int3
popf
dec
and
in
mov
cmpsb
push
xor
inc
add
sti
lods
adc
mov
rorl
pusha
mov
arpl
mov
mov
jo
xchg
inc
into
add
test
sbb
aaa
sbb
xchg
push
inc
and
in
mulb
push
push
cmp
pop
mov
sub
jbe
jg
scas
loop
das
mov
and
icebp
pop
pusha
pop
es
cmp
or
cmp
cmp
mov
push
out
cmp
pop
cmc
add
fmull
jno
and
out
stos
mov
cmpsb
xchg
or
mov
idiv
mov
jae
imul
sub
and
loope
cmp
jle
pop
leave
inc
out
or
jmp
pop
and
mov
mov
and
jne
arpl
add
jmp
test
mov
adc
xchg
into
lods
lret
or
jne
or
call
mov
mov
dec
add
outsl
outsl
add
mov
mov
pop
call
sarl
aad
cmp
inc
fwait
pop
xchg
push
add
mov
mov
mov
ret
fstps
mov
lods
pop
xchg
shl
sbb
gs
add
rcll
inc
pop
push
cmp
mov
shrl
aam
and
divb
xchg
dec
les
rolb
data16
push
dec
inc
cmc
fldl
rorl
mov
cmpb
mov
fiadds
mov
sub
and
sub
fscale
fs
cmp
lcall
cli
xchg
mov
adc
and
push
push
xor
icebp
sbb
popa
ret
lret
dec
jmp
loope
cwtl
add
xchg
sbb
loope
loopne
lret
and
cmc
pop
mov
loope
mov
das
add
cld
xor
inc
sub
aad
mov
std
jg
iret
add
adc
addb
xchg
js
adc
adc
lcall
adcb
mov
and
sub
fs
dec
and
dec
ljmp
adc
mov
jb
bound
push
test
pushf
push
mov
or
mov
add
xor
ret
push
scas
insb
sbb
adc
push
jge
mov
pop
inc
push
fcoms
adc
add
sub
std
and
sub
stos
sub
xchg
jmp
adc
or
mov
cld
ret
adc
inc
lock
jo
add
sub
xlat
jbe
mov
call
aam
add
subb
push
dec
fadd
mov
xor
imul
inc
push
sub
test
insl
insl
mov
xchg
and
xlat
cmp
push
add
push
dec
add
out
mov
sub
sahf
inc
inc
adc
in
lcall
lea
sbb
inc
cmp
es
jp
inc
les
sbb
stos
and
jle
jg
mov
out
mov
dec
sub
sbb
xor
jg
imul
shrl
adc
xchg
adcb
pushf
das
add
dec
jmp
in
add
aad
orl
push
mov
jb
out
movsb
push
mov
push
cmc
lea
add
push
js
mov
fstpt
jae
inc
sbb
cli
jne
call
in
lret
mov
imul
jge
testl
push
pusha
xor
add
jecxz
jg
mov
push
or
popa
xor
ljmp
or
out
in
cmc
and
inc
ljmp
jns
enter
cmp
sbb
pop
pop
or
dec
cmp
ja
xlat
and
cmpsb
je
sahf
inc
mov
leave
adc
cmp
mov
and
xchg
je
cld
mov
inc
mov
inc
sub
notb
and
cmpsb
mov
sti
sbb
adc
pop
adc
pop
cmpsb
sarb
mov
jmp
dec
xor
aam
sti
sar
dec
adc
or
push
stc
mov
movsb
incl
lock
jl
mov
push
adc
insl
stc
adc
adc
cmc
push
rcrl
test
pop
dec
outsb
ror
lds
fnstsw
es
aam
dec
lods
xlat
sti
pusha
mov
rorl
push
cmp
orb
mov
jb
xchg
sub
and
cld
jne
rcll
nop
dec
andb
clc
int
call
std
sub
aas
pop
pop
add
sbb
jge
mov
popa
or
cltd
or
sub
les
in
xchg
pop
lret
jo
and
icebp
mov
xchg
and
lret
lea
and
mov
aam
pop
dec
cmp
fimuls
mov
jg
sub
loope
and
test
cwtl
pop
xor
jmp
in
mov
pop
decl
les
insl
jl
daa
stc
and
mov
mov
add
xor
inc
loop
xchg
cmp
je
inc
push
imul
pop
test
clc
lods
loope
adc
sbb
fnstcw
adc
mov
popf
aaa
pop
fildll
xor
insb
notl
ja
sbb
xor
add
js
sub
mov
imul
fistps
mov
fdivrl
es
jg
pop
cwtl
dec
cmp
lods
push
add
mov
in
fildll
adc
lock
fwait
movb
imul
add
cwtl
lods
adc
push
pop
push
mov
cwtl
add
mov
sub
adc
inc
cmpl
movb
adc
mov
mov
hlt
je
jnp
add
and
pop
es
mov
mov
pop
add
test
dec
fistpll
adc
ljmp
mov
into
sbb
jmp
inc
push
inc
jb
pusha
xchg
dec
cld
xor
mov
or
ss
and
std
and
insb
popa
mov
jo
sub
scas
mov
xor
mov
icebp
mull
pop
insb
xchg
pop
lcall
std
movsb
repnz
jecxz
mov
xchg
gs
dec
ret
mov
or
bound
int3
out
jge
in
dec
dec
sti
pushl
scas
xor
cltd
lea
mov
and
in
stos
fwait
cmpsl
jg
fmuls
sub
sbb
mov
ret
fndisi(8087
cmp
in
jg
movsl
mov
pop
sbb
sub
popf
loopne
cli
loop
cli
incl
xorb
scas
mov
test
xchg
sbb
movsl
pop
sub
cli
sub
and
pop
jl
sub
xor
out
aam
fcompl
fildl
pop
aad
add
pop
sbb
adc
daa
xchg
push
sub
sahf
ds
ss
mov
in
clc
pop
and
sub
nop
adc
scas
loope
out
or
sbb
pop
xchg
jp
les
les
jecxz
mov
cmp
adc
xchg
sbb
jns
sub
jb
ljmp
insl
cmp
jmp
in
adc
inc
clc
push
fdivr
mov
mov
mov
push
andl
or
jbe
lods
sti
jp
jmp
sti
jnp
outsl
je
mov
or
in
mov
fiaddl
mov
in
add
out
outsb
mov
adc
sar
popf
lds
sbb
push
sarl
pop
mov
mov
sbb
push
out
aaa
sub
cmc
std
and
push
incl
lods
incb
mov
icebp
or
mov
decb
add
push
push
mov
xor
dec
xlat
xchg
cmp
ss
push
shlb
fs
xchg
mov
bsf
outsl
ljmp
retw
pop
fucomi
repnz
dec
jb
or
mov
pop
and
pushl
or
xor
adc
repz
mov
mov
add
sub
adc
test
stos
dec
mov
ss
add
loopne
and
push
lods
and
stos
ljmp
push
testb
loope
fildl
jo
adc
mov
test
or
std
xchg
pop
or
in
dec
push
xor
push
clc
inc
aam
adc
es
test
mov
or
jg
xor
dec
sub
mov
and
fcomps
adc
je
nop
pop
and
aam
movsl
adcl
xor
dec
cwtl
mov
cmc
push
or
xchg
and
push
not
aas
pop
rorl
ret
xchg
out
adc
arpl
sbb
fstl
add
int3
loope
pop
movsb
insb
cmp
xchg
and
lcall
bound
inc
popa
xchg
fstpt
loop
les
jmp
cmp
aas
adc
js
cli
fists
inc
push
cli
or
jno
sbb
push
push
outsl
stos
mov
incl
mov
das
orb
mov
sub
lods
xchg
lret
jecxz
pop
popa
fsin
pop
push
adc
jo
nop
andl
clc
outsb
or
addr16
pop
int
orl
lods
outsl
std
add
shr
mov
jmp
outsl
lea
push
pop
and
mov
pop
sti
fildll
mov
sub
rcr
out
push
sbb
jp
icebp
icebp
jle
push
and
mov
mov
jg
sub
mov
xchg
mov
jnp
jle
fwait
or
adc
dec
lcall
or
inc
pop
pop
fs
xlat
lret
or
pusha
mov
test
or
add
mov
adc
ljmp
pop
sbb
shll
or
daa
or
es
insl
or
movsb
es
sub
push
inc
mov
inc
xor
jge
insl
dec
and
xchg
push
hlt
pop
data16
js
and
loop
mov
push
mov
movsb
add
mov
aam
nop
or
and
clc
pop
clc
sub
push
mov
fucom
testb
inc
sbb
pop
push
bound
fnsave
mov
push
mov
xor
fdivrl
in
add
test
stos
adc
and
hlt
push
add
dec
aaa
push
mov
inc
cmc
add
aad
pushf
pusha
jnp
clc
cmp
les
out
mov
xchg
fidivs
arpl
ret
xor
pushf
fcmovne
fwait
push
lock
inc
repz
leave
cmpl
add
sbb
mul
pop
test
test
testb
mov
notb
lahf
and
test
xchg
adc
xor
mov
es
dec
ljmp
sti
mov
jp
call
xor
int
popa
adc
mov
lods
jl
xor
mov
and
sub
in
dec
enter
stos
fisubs
int
jecxz
cld
push
push
dec
stos
and
scas
fstpl
lcall
or
popf
xor
sub
sahf
fcomps
lea
add
lcall
jg
sbb
imul
adc
bound
or
adc
insl
sti
rol
sub
and
sub
movsl
sti
pushl
testb
and
scas
test
cltd
fdivl
sbbb
inc
imulb
mov
and
sarl
push
shr
mov
mov
out
or
sub
aas
mov
lock
out
pushl
mov
gs
jecxz
mov
xor
add
mov
cmp
jnp
and
inc
adc
stos
and
inc
pop
inc
cli
in
orl
mov
pop
stos
popf
xor
fucomip
jg
iret
sub
mov
pop
aam
clc
or
rolb
das
mov
mov
imul
pop
lods
es
lods
cmp
pop
dec
pushf
dec
or
jmp
rclb
mov
orl
inc
xchg
test
fistl
lahf
sub
pusha
lahf
ret
shl
xchg
cli
decl
sub
nop
imul
xor
lods
iret
xor
push
xchg
mov
inc
ds
loop
je
inc
push
push
mov
mov
popf
xor
lahf
and
dec
jmp
test
enter
xchg
nop
push
mov
add
add
rclb
pop
stos
popa
jecxz
or
les
movsl
popa
adc
cmpsb
lret
sub
loope
imul
inc
mov
cld
daa
js
jnp
sub
pushf
addr16
outsl
scas
mov
dec
sub
jmp
xchg
xchg
or
std
adc
into
sarb
sbb
sbb
je
sbb
lcall
pop
sub
in
add
cmpsb
into
add
mov
jp
xrelease
jg
aaa
jle
cmp
xchg
or
arpl
sbb
lds
les
ffreep
mov
add
jns
push
or
adc
cli
inc
pop
andb
test
mov
dec
jo
ficompl
and
lcall
js
nop
cltd
rcrb
cltd
and
xor
cmp
popf
movsb
clc
adc
pop
fsubr
xlat
xchg
dec
inc
mov
cmp
cld
movsl
mov
xchg
jbe
jle
add
push
add
push
das
dec
subl
sbb
je
unpckhps
iret
ret
lds
loopne
adc
push
sbb
cs
push
add
hlt
or
fidivrl
xorb
enter
mov
dec
push
cmp
push
aam
sub
mov
dec
pop
and
ja
fwait
test
test
adc
sub
mov
leave
data16
xchg
bound
loope
cmp
pop
push
fimuls
push
add
ret
imul
adc
aad
shll
or
mov
das
adc
jne
sub
ds
popa
outsl
fnstsw
jmp
sub
and
ljmpw
add
out
loop
pop
lret
loop
aas
lods
in
cmp
ljmp
xchg
dec
ret
adc
dec
cmp
xor
sub
xlat
mov
lret
sahf
inc
jmp
mov
add
test
and
ss
add
andb
call
movsl
inc
daa
ret
dec
pop
mov
sub
xor
rcrb
cs
clc
int
js
aam
or
pop
jo
pop
call
and
or
scas
loop
pop
mov
sbbb
ljmp
add
loope
dec
dec
fs
sbb
enter
dec
adc
push
mov
call
mov
std
jb
cld
fidivrs
add
mov
scas
daa
es
insl
add
dec
dec
test
aam
clc
cli
incl
mov
lret
loopne
add
popa
mov
inc
imul
add
add
xor
ret
or
fcomps
or
bound
fdivr
ja
inc
psubd
out
lahf
imul
mov
dec
mov
fimuls
mov
stos
mov
mov
mov
pushf
pop
add
sbb
fildll
or
adc
inc
stos
jecxz
xchg
mov
sub
loop
add
sub
push
jg
lock
lret
add
mov
add
push
mov
daa
adc
push
enter
push
adc
push
sub
push
add
push
insb
push
xlat
outsl
stos
cmp
pop
or
jl
cmpsl
pop
sub
push
mov
fs
push
aam
repz
inc
or
jp
test
sub
and
int3
xchg
xor
push
and
jno
and
pusha
cltd
mov
out
enter
adc
jnp
nop
ret
cmp
mov
push
add
jno
xor
or
jmp
add
insl
into
inc
shll
sub
xchg
sbb
mov
cmp
add
mov
push
pop
cmp
and
and
in
or
dec
inc
cld
push
sub
roll
and
in
adc
inc
and
fiaddl
push
out
std
mov
rcl
xor
adc
andl
dec
push
roll
sub
xor
and
cmp
xor
popf
lcall
or
dec
test
cmpsb
push
rcl
jb
adc
rcll
adc
fnstsw
xlat
pop
cmpb
sub
adc
iret
adc
rolb
stos
pop
push
iret
popa
sub
inc
out
mov
xchg
push
shrb
or
fs
sbb
or
std
adc
xchg
adc
mov
mov
insl
mov
mov
inc
add
dec
pop
sbb
repz
shll
shr
sbb
and
mov
outsl
fwait
add
sub
jae
test
stos
push
nop
cmc
or
dec
aam
mov
push
adcl
push
outsl
ljmp
adc
add
adc
pop
xor
mov
mov
call
stos
call
add
dec
sbb
incl
fsts
popa
xchg
ljmp
mov
cmpsb
lcall
mov
and
dec
add
jmp
out
inc
inc
rolb
push
ficoml
int3
push
inc
pop
sbb
mov
sub
add
add
test
insl
sub
pop
add
aad
xchg
dec
dec
xor
sub
jmp
cvttps2pi
pop
jp
in
sarl
adc
hlt
push
mov
cwtl
xchg
push
hlt
add
outsl
inc
pop
add
add
in
aaa
sub
lock
push
cmp
sarb
rcrl
pop
pop
lea
lret
rol
push
int3
sub
mov
xchg
add
add
mov
nop
xchg
jle
dec
cld
push
les
sub
sahf
hlt
cld
int3
nop
daa
mov
in
adc
rcpps
sub
pushf
roll
fdivl
adc
jmp
in
or
jmp
sbb
les
leave
dec
pop
push
mov
lds
adc
xor
cld
or
addl
mov
dec
pop
fnsave
les
jne
and
push
fdiv
add
jmp
mov
lods
test
fstpt
mov
and
push
stos
icebp
push
mov
aam
jmp
pusha
or
mov
shrl
shll
mov
insb
int
and
jmp
into
rolb
mov
xor
and
in
rorb
mov
cwtl
test
add
jbe
movsb
jmp
mov
or
std
pusha
imul
jmp
mov
call
push
cmp
mov
xor
xor
mov
mov
adc
aad
enter
cmp
nop
push
and
jg
call
iret
lods
dec
and
imul
mov
dec
push
test
jo
outsl
mov
push
into
imul
loope
loope
clc
cs
push
test
jge
insb
mov
test
fbstp
fsubs
mov
cmp
sbb
jg
outsl
dec
jb
movsl
xchg
dec
ret
lret
add
mov
dec
aam
mov
inc
std
repnz
xchg
mulb
pop
ds
sbb
sbb
pusha
dec
les
fnstenv
inc
mov
xchg
xor
test
sbb
cmp
in
or
or
adc
sar
pop
push
sti
addr16
sbbb
and
adc
mov
mov
push
ljmp
sbb
std
cmpsb
jg
pop
les
inc
in
sub
push
inc
test
cmpsb
adc
aas
inc
add
push
add
in
stc
inc
sub
cmp
xor
pop
ljmp
jmp
movsb
stos
outsl
add
and
mov
or
pop
and
dec
xchg
dec
test
inc
hlt
lret
mov
xlat
jb
lods
cs
and
loopne
sub
sahf
inc
add
pop
insb
mov
stc
inc
movsb
out
clc
push
add
fildll
test
pop
jge
and
xchg
xor
daa
and
cmc
jns
mov
cs
jg
lret
push
jle
push
mov
xchg
pop
jbe
ja
jecxz
lds
mov
dec
dec
sub
sub
iret
adc
mov
insl
sbb
repz
sub
mov
and
stos
outsl
icebp
jg
push
push
out
xor
movsl
lods
lret
and
insb
in
pushl
sbb
inc
sahf
jle
sub
push
or
outsl
dec
out
xchg
mov
lods
les
pop
ret
pop
loope
or
arpl
nop
push
jl
std
mov
sbb
mov
add
mov
popa
mov
mov
adc
push
xchg
and
lods
std
sub
call
mov
test
movsl
testl
mull
test
lods
and
mov
shlb
les
aad
mov
into
out
mov
ljmp
cmpsl
add
xchg
inc
mov
cld
decl
enter
clc
jne
mov
add
jge
xlat
push
sar
ljmp
stos
lds
dec
xor
aas
fstpl
sbb
ret
mov
mov
stos
outsl
je
sbb
jae
mov
pop
fiaddl
add
adc
leave
adc
call
cltd
lods
mov
mov
mov
push
push
test
pop
add
mov
jae
mov
cmpb
cmp
hlt
aas
lea
test
rcll
and
loop
inc
inc
or
mov
sarb
ja
mov
std
sbb
sbb
and
jb
jmp
or
incl
outsl
sub
push
sub
inc
adc
and
mov
ds
mov
nop
inc
in
xor
push
mov
movsl
pushf
incl
push
movsb
add
sub
mov
mov
mov
rol
cs
mov
cmp
sub
shrb
add
out
in
cmp
cld
pushl
add
jno
and
out
inc
fmull
sbb
adc
dec
pusha
add
mulb
or
add
cmpb
test
pop
stos
push
xchg
in
mov
out
pop
jge
and
pop
fmul
adc
xor
pop
js
cmc
xor
pop
adc
lcall
xchg
pop
adc
xor
dec
sub
aas
add
popf
or
das
sbb
fildl
dec
adcl
xchg
dec
das
clc
or
ret
aas
enter
ss
lcall
cmp
in
adc
mov
inc
lret
pop
rcll
scas
filds
in
mov
pop
xchg
cmp
or
insl
jnp
insb
cmp
xchg
mov
popa
pop
pop
sahf
loop
jbe
inc
leave
jg
dec
in
add
in
addb
cwtl
fisubl
dec
xchg
call
jp
loope
pmullw
xchg
push
decl
cltd
mov
mov
in
loop
push
lds
push
and
mov
mov
pop
push
cmp
add
mulb
arpl
add
dec
cli
jno
pop
sbb
cltd
and
scas
jno
lods
incl
popf
jnp
add
or
nop
mov
sarl
daa
adc
sbb
cld
adc
call
pop
sahf
cs
inc
xchg
jo
aaa
push
hlt
xchg
lahf
inc
in
mov
cmpsb
movsl
xchg
and
or
push
adc
xchg
push
pushl
mov
cmpsl
lds
xchg
inc
addl
mov
loope
adcb
sbb
inc
cld
jg
icebp
dec
test
sbb
out
nop
dec
mov
mov
mov
lock
push
push
mov
rol
iret
cmp
sub
ret
lahf
xchg
je
inc
mov
lds
orl
cld
push
mov
dec
add
add
ror
aas
daa
pushl
add
bound
inc
fiaddl
xchg
jnp
test
mov
lock
cwtl
add
push
push
das
cld
shlb
sub
fxch
and
dec
mov
adc
in
and
cmp
mov
inc
and
movsl
ss
addr16
sti
test
arpl
cli
mov
arpl
adc
sbb
jp
stos
pop
sbb
adc
loop
sbb
shrb
lods
push
inc
jns
je
jb
dec
mov
add
or
mov
pop
ficompl
mov
push
fwait
cmp
add
les
lret
jae
jne
std
fistpl
or
jmp
add
stos
push
cld
mov
push
das
cld
lcall
fbstp
jg
dec
fsts
pop
mov
bound
mov
iret
adc
sub
std
adc
outsb
movsb
pop
and
add
or
cmp
cmc
iret
mov
push
and
movsl
push
stc
push
and
jnp
in
incl
push
mov
sub
mov
ljmp
push
fs
outsl
adc
sarb
lods
test
jo
jo
jecxz
cmp
pop
adc
aaa
sbb
xchg
jecxz
lret
mov
xchg
js
iret
shlb
add
mov
clc
xchg
dec
inc
test
dec
dec
inc
xchg
inc
mov
mov
or
mov
insb
pop
or
pop
cmp
cmp
mov
mov
mov
ret
or
lds
jno
sbb
test
pavgb
xor
outsl
cwtl
push
mov
idivl
je
xor
inc
and
mov
and
sub
int
pop
addb
and
loop
mov
std
sbb
jno
popf
sbb
mov
pop
dec
lods
sub
scas
nop
addr16
push
test
sbb
mov
pop
cmp
sar
inc
lock
scas
ljmp
or
mov
xor
push
or
repz
sti
popf
xchg
sbb
out
pop
gs
dec
xor
insb
dec
cmp
add
aam
aad
pop
adc
add
xlat
loopne
or
out
adcb
stc
mov
pop
fidivrl
xchg
push
out
jl
aad
loope
lds
fdivr
dec
mov
stos
adc
pop
or
cwtl
sbb
xlat
insl
sti
add
mov
cmp
sti
inc
xchg
iret
in
push
mov
adc
shrb
dec
jmp
arpl
lcall
daa
ds
adc
jbe
shlb
add
jbe
cvtps2pi
push
insb
adcl
outsl
dec
ja
aad
cld
test
and
outsb
adc
jmp
in
xchg
add
test
js
ja
sti
fldt
lret
aas
push
filds
or
test
lock
mov
cmpsb
fldenv
imul
fcompl
adc
nop
add
xchg
lods
pushf
add
test
dec
or
das
mov
add
and
and
inc
or
nop
nop
and
fildll
add
adc
inc
and
nop
and
and
pop
xlat
pop
movups
and
mov
andb
mov
nop
addb
adc
add
or
nop
adc
inc
or
inc
subb
or
push
inc
sti
mov
push
nop
and
add
and
cmp
and
adcb
mov
and
adc
adc
inc
pop
add
insl
fstpt
adc
and
adc
adc
mov
in
inc
orb
jo
adc
pop
imul
mov
sbb
outsb
pop
xlat
cmpsl
insb
add
and
mov
adc
inc
bound
dec
and
jge
mov
cmp
imul
subb
add
add
push
aad
add
mov
mov
pop
in
orl
inc
pop
imul
and
add
add
popa
jae
out
out
and
mov
lock
and
and
cmp
add
roll
mov
inc
xchg
and
pop
imul
nop
fwait
jae
lods
or
adc
and
adc
or
das
jge
mov
imul
loope
cmpsl
push
and
mov
add
mov
insl
lods
jle
filds
and
inc
adc
mov
or
add
adc
xor
test
adc
ret
pop
pop
aaa
pop
add
and
and
pusha
push
mov
ss
nop
inc
or
cmp
xlat
xchg
jo
and
sbb
call
push
push
sbb
adc
cld
int
mov
outsb
lods
mov
lahf
adc
push
or
neg
jle
add
dec
mov
insl
pop
imul
inc
mov
fcomps
and
sbb
loop
or
mov
sub
lods
mov
test
jg
inc
inc
inc
pop
and
and
lcall
mov
sbb
fisttpl
int
jmp
fnstcw
sub
push
and
test
sbb
stos
push
inc
cmp
pop
fbld
xor
adc
push
mov
mov
aad
push
add
call
or
ss
and
nop
fimuls
mov
nop
pop
and
arpl
pop
jae
sbb
repz
test
inc
sub
and
pop
xchg
jl
add
mov
insl
inc
jno
mov
pop
test
lods
inc
nop
adc
xor
arpl
dec
inc
insl
sub
lods
cmp
push
sbb
push
xor
pop
adc
jl
mov
xchg
daa
cmp
rcl
imul
mov
xchg
xchg
adc
push
jo
sahf
mov
pop
mov
jge
inc
xor
sbb
jns
dec
fstl
jle
roll
in
mov
mov
pop
sbb
movsl
fs
cmp
daa
push
das
lcall
push
inc
push
jb
andb
ja
cmpb
and
mov
rcrb
adc
adc
or
test
mov
cmp
xor
sub
bound
mov
pop
mov
dec
jne
fisttpl
and
mov
mov
fidivrs
pop
outsl
sub
xor
adc
pop
jae
scas
movsl
dec
or
and
arpl
push
and
dec
scas
insl
scas
pusha
out
xchg
and
mov
adc
cmp
mov
xor
mov
cmp
nop
mov
jae
ror
cltd
cmp
lock
or
cmp
mov
pop
mov
ret
mov
or
inc
andb
dec
or
pop
xor
out
adc
in
push
scas
mov
jg,pn
stos
mov
push
jnp
mov
pop
mov
and
sbb
popf
push
and
loope
nop
xchg
lcall
sti
xor
mov
xlat
dec
lods
shlb
shl
push
sti
push
jl
jae
jne
and
or
int
or
arpl
mov
int
pop
adc
push
fcomps
xlat
leave
push
jae
ret
jnp
ljmp
or
or
push
mov
lea
aaa
mov
mov
sub
cwtl
popf
inc
es
jp
cli
adc
mov
lcall
pop
imul
pusha
and
xor
adc
jecxz
or
or
inc
add
fcomps
frstor
aad
mov
imul
rcrb
lcall
cmpb
push
inc
mov
and
xchg
inc
dec
sbb
sbb
aad
adc
rorb
or
adc
pop
mov
pop
loopne
lods
cltd
dec
cmpsb
xchg
dec
sub
add
or
sahf
add
enter
add
add
mov
inc
lds
fisubrl
jl
lods
mov
addr16
sbb
sbb
or
cld
mov
push
jae
jecxz
jae
insl
mov
inc
mov
es
sbb
xor
adc
xlat
adcl
faddl
push
mov
inc
mov
push
aam
push
mov
xor
mov
pop
imul
dec
xor
xor
inc
imul
xchg
and
pop
jmp
push
int
and
inc
imul
mov
ja
push
icebp
nop
push
leave
inc
leave
sbb
cmp
or
addl
push
jns
lcall
and
mov
or
sbb
andl
fcoms
nop
jbe
andl
aad
add
jae
insb
dec
stos
rcrb
inc
scas
hlt
push
adc
test
jo
pop
dec
push
mov
adc
and
les
gs
sbb
clc
or
mov
jg
adc
mov
jb
dec
and
in
shl
mov
dec
mov
nop
dec
out
xor
push
cmpsb
add
addl
in
fsubp
or
sbb
addr16
xchg
sahf
mov
sbb
stos
nop
or
insb
int
lcall
ja
int
sbb
dec
popf
and
cwtl
xor
aas
and
inc
fcompl
mov
adc
pusha
sub
adc
cmp
and
and
pop
jae
xor
cmp
push
cmc
jae
and
fs
inc
jmp
mov
mov
sbb
pushf
xchg
ja
nop
fs
push
inc
cmp
mov
mov
enter
and
inc
push
int3
inc
inc
in
mov
ret
and
inc
mov
or
in
adc
scas
shll
jl
pop
fimull
aas
or
nop
xchg
dec
insb
int
inc
jne
inc
cmpsl
add
int
int3
fcoml
mov
adc
dec
addl
inc
jae
fisubl
add
adc
and
inc
test
scas
pop
ss
pop
subl
cwtl
jbe
int
mov
lret
pop
leave
loope
inc
push
into
test
mov
adc
lods
data16
jb
lret
movsl
push
add
xchg
test
jo
nop
jo
adc
pop
fwait
mov
cwtl
and
loop
call
and
cmc
inc
cmp
push
shlb
nop
pushf
add
lcall
subb
ja
xor
mov
pop
jae
popa
lock
push
gs
unpcklps
inc
int
int
fwait
jae
push
cmpsb
inc
adcb
push
mov
cwtl
jo
or
imul
dec
repnz
and
pop
mov
adc
stos
nop
adc
popa
jae
mov
inc
and
sbb
mov
inc
stos
pop
or
mov
jb
lcall
inc
in
xor
ret
data16
nop
filds
mov
out
cmp
xor
rorb
pop
xor
test
xchg
inc
pop
lcall
dec
mov
add
cmp
out
xor
stc
push
inc
push
scas
mov
cmpsl
iret
nop
push
push
fs
mov
incl
adc
outsb
repz
jge
push
push
adc
outsb
adc
stos
ljmp
and
mov
shll
inc
fimuls
push
js
hlt
lds
pop
push
push
add
icebp
pop
shlb
and
cmp
push
and
add
pop
inc
dec
inc
pop
call
add
mov
lea
popa
cltd
or
rcrl
jns
jp
mov
sbb
add
jo
jo
cmc
ljmp
mov
testb
push
repz
test
sbb
cld
ret
mov
push
sub
add
shll
push
lods
xchg
lret
loope
hlt
lret
repnz
lcall
mov
add
cwtl
push
push
and
push
mov
or
rcr
jg
or
and
jns
jl
add
and
pushl
adc
mov
js
and
inc
nop
testl
jl
clc
daa
xor
or
test
hlt
ja
cmc
ljmp
cmp
out
jno
mov
push
or
or
push
adc
divb
mov
inc
jb
into
sbb
fisttps
movsb
or
inc
sbb
hlt
jp
adc
cltd
outsb
popf
dec
shrb
adc
xchg
cmpsb
rclb
jmp
andl
mov
pop
sbb
add
shrl
adc
mov
ja
and
das
cld
mov
mov
xor
jecxz
stos
les
add
push
ja
das
push
cmc
mov
pop
out
ljmp
add
add
in
adc
iret
mov
test
jg
int
xorb
scas
pop
xchg
dec
cltd
aas
and
sbb
mov
enter
and
repnz
dec
in
add
push
mov
in
das
jne
add
fcoml
pop
jmp
sbb
fsubrl
scas
cmc
sub
inc
push
imul
pop
int
pop
clc
idiv
fldl
or
add
das
jmp
ds
in
inc
cmp
adc
enter
cmpsl
xchg
lcall
inc
sti
out
xchg
xchg
add
cmc
add
xor
test
or
enter
leave
cwtl
movsb
cmp
pop
add
push
dec
and
mov
adc
mov
adc
mov
inc
push
mov
mov
add
sbb
and
fwait
and
sub
decl
fs
xor
cmp
pop
mov
add
idivl
inc
cmp
stc
ss
adc
ds
nop
mov
jmp
inc
and
add
testb
and
pop
sub
cmpsb
into
ret
ljmp
xchg
pusha
and
xor
lods
adc
movsb
mov
cmpsl
adc
cmp
ss
adc
mov
test
or
or
daa
mov
pop
adc
movsl
cmp
pop
dec
fiaddl
fdivrl
fcomp
adc
lock
jle
and
outsl
mov
shl
pop
stos
lods
daa
xchg
jb
dec
ficoms
mov
daa
jl
adc
inc
fisttps
xchg
sbb
sub
ret
xchg
sub
add
pop
call
test
into
sub
sti
cld
add
inc
sbb
mov
clc
pushl
popa
inc
je
in
pop
xorl
sti
pushl
shl
cmp
mov
mov
mov
jl
cmp
enter
push
aaa
sarl
inc
inc
adc
mov
adc
and
mov
cld
mov
jae
insb
cmp
add
or
fcoml
mov
push
insl
repnz
mov
ret
mov
scas
nop
jecxz
scas
xor
insb
or
mov
into
addl
fmuls
inc
mov
cmp
dec
jl
adc
sbb
ss
push
addr16
dec
shlb
inc
ficompl
imul
mov
lret
xchg
xchg
outsb
hlt
mov
inc
push
pop
cmpsl
scas
inc
insl
jle
stos
out
ret
and
sbb
in
testb
push
jno
push
lret
mov
inc
mov
fsubl
pusha
mov
add
fcmovbe
and
mov
std
sub
and
sub
mov
lret
dec
and
push
mov
roll
cmp
lret
pop
fiaddl
or
and
stc
pop
xor
jns
sub
pop
cmp
repnz
pop
mov
popa
xchg
hlt
mov
popa
lahf
shlb
adc
repnz
and
sbb
pop
mov
cmp
scas
add
decl
cwtl
and
test
sahf
and
jge
pop
daa
fisttps
mov
sub
jo
pop
int
mov
lahf
shrb
jb
or
pop
cmp
hlt
inc
rcrl
lods
aam
adc
mov
das
mov
xchg
adc
mov
xor
mov
cld
movb
xlat
ja
dec
add
pop
fdivp
push
lret
jmp
nop
repnz
inc
popa
xchg
jns
jbe
adc
incb
icebp
push
ret
loope
or
stos
or
mov
ret
push
sbb
inc
inc
push
icebp
cmpsl
mov
pop
jg
jmp
xchg
clc
outsb
inc
pushw
push
mov
xchg
cld
inc
pop
push
mov
or
push
faddl
aam
ficoms
jbe
and
jmp
das
pop
jmp
icebp
push
mov
push
mov
lret
inc
shlb
loope
clc
ja
jne
cmp
cmp
push
pop
sarl
mov
jg
outsl
daa
rcrl
cmp
or
enter
insl
pop
or
bound
incl
xchg
repz
xchg
mov
mov
or
les
and
fisubs
jle
fiaddl
fnstcw
jp
dec
cmpsb
xor
adc
xor
add
ljmp
ret
add
mov
sti
and
dec
mov
call
mov
mov
cli
cmpsb
movsb
outsb
cld
add
push
lds
cmpsb
mov
xor
and
out
loop
test
mov
data16
movsb
pop
push
shlb
stos
add
jo
xor
adc
test
mov
jmp
jg
loop,pn
or
inc
lods
mov
movsl
mov
popf
add
mov
pop
jnp
hlt
xor
in
lahf
add
add
sbb
push
pop
mov
cmpsl
and
jae
outsl
mov
push
test
mov
clc
or
adc
ret
cs
inc
xchg
test
lds
out
pop
aad
call
sbb
mov
ljmp
addl
push
adc
aas
adc
inc
xchg
fidivrl
lcall
mov
add
add
fbstp
sub
mov
xor
insl
push
cld
ja
in
leave
bound
push
adc
pop
push
cmp
push
rcll
add
cmp
ljmp
inc
cmpsb
add
xor
mov
test
movsb
xor
sbbl
add
ret
pop
jmp
fildll
sbb
push
repz
scas
push
rcrb
cmp
adc
jle
ret
sbb
mov
int3
mov
jp
add
sbb
fs
jae
add
sbb
or
int
or
mov
ret
call
gs
imul
pop
jg
aaa
and
xchg
sbb
mov
sarl
pusha
sub
aaa
stos
xchg
mov
decl
add
adc
inc
push
sbb
and
repz
pusha
aam
mov
fnstenv
popa
icebp
sbb
pop
aaa
aad
addb
and
inc
stos
mov
aaa
sub
fisttps
xchg
or
add
in
daa
mov
push
jns
pop
inc
push
sbb
cmp
inc
add
out
movsb
sbb
aad
lret
lcall
das
jl
dec
jb
pusha
push
cld
and
icebp
cmp
sbb
mov
or
jns
out
xor
mov
inc
adc
inc
inc
fcmovu
jmp
xchg
outsl
std
and
ret
mov
fs
rorb
shrb
mov
dec
mov
sub
rcr
adc
push
cli
insl
push
sbb
inc
ljmp
mov
dec
jge
ret
in
pop
sub
mov
dec
or
inc
jb
and
loop
mov
jno
inc
cmc
mov
fisttpll
inc
cli
push
pop
sbb
cmpsb
add
push
xchg
and
icebp
test
test
std
adcl
adc
inc
xchg
call
int3
sbb
cmc
mov
fcmove
cs
adc
das
hlt
jl
shrb
je
push
sbb
xchg
jle
jmp
or
adc
mov
ja
pop
mov
dec
adc
xlat
mov
or
mov
sub
pop
and
inc
rclb
sub
ret
and
les
sbb
adc
sbb
cs
in
pusha
pop
sub
or
jne
ret
xor
mov
cld
add
add
sbb
xchg
nop
dec
push
incl
and
test
enter
popf
inc
push
inc
fldenv
inc
push
rcll
pop
cmp
lret
cs
inc
push
pop
cltd
or
xor
out
mov
aad
bound
mov
into
xchg
xchg
adc
aaa
es
jmp
sub
in
into
mov
dec
fbstp
adc
aas
inc
pop
or
push
test
xor
or
cmp
mov
pushf
mov
mov
movsb
and
sbb
imul
lret
imul
jb
lods
std
jbe
push
pop
in
rolb
les
push
push
mov
aas
or
xchg
fs
adc
xchg
dec
cltd
fstl
sub
cmp
xorb
iret
in
add
add
negl
adc
xchg
adc
dec
push
lods
out
andb
push
cltd
adcl
pop
pop
sub
cmp
mov
mov
sar
push
and
roll
jecxz
arpl
xchg
adc
sub
inc
pusha
sub
fisttps
push
mov
jmp
bound
test
dec
xchg
mov
adc
push
mov
and
jae
idivb
outsb
movsb
mov
push
xor
lahf
mov
mov
addr16
lcall
mov
xor
sbb
xchg
xchg
adc
cld
in
movsb
and
sbb
testl
pop
sbb
icebp
push
xor
jg
pusha
mov
pop
loope
inc
mov
mov
sbb
clc
fidivl
test
in
mov
push
andl
adc
sbb
scas
mov
jbe
and
pop
mov
push
ret
incb
add
jno
imul
cwtl
xchg
inc
arpl
mov
dec
mov
cmc
add
pop
mov
popa
iret
mov
pop
sbb
lea
mov
scas
push
cld
rcl
push
jge
outsl
sbb
mov
fmulp
jbe
add
adc
mov
rorl
adc
ss
out
cmc
std
mov
pusha
push
loopne
sbb
jg
lock
cmp
adc
shlb
dec
push
push
jl
mov
lcall
movsl
cld
insb
or
jno
test
inc
fwait
push
adc
and
filds
sub
jb
xor
fdivr
jns
sbb
mov
popf
and
jo
nop
push
push
fsubp
cmpsb
clc
jmp
inc
cli
fisttpll
add
test
std
in
outsl
jg
mov
mov
and
xchg
out
imul
inc
jb
outsl
add
popa
jb
shlb
push
jbe
cld
jg
jb
push
add
and
dec
mov
icebp
pushl
das
mov
inc
adc
adc
pop
xchg
jno
ja
mov
pop
test
dec
outsl
arpl
mov
dec
rorb
pop
gs
repz
es
mov
and
fsubrs
loop
push
pop
cli
sub
pop
pusha
insb
push
sbb
mov
jmp
shll
or
inc
sub
shll
push
cmp
mov
out
dec
nop
cs
inc
pusha
gs
ret
push
inc
jl
int
mov
xchg
repz
dec
movsl
xchg
dec
xchg
movsb
push
and
cmpsb
pusha
and
ljmp
jno
fs
hlt
rcrb
adc
xchg
xchg
aas
stos
sbbb
aaa
adc
std
lea
or
pop
in
sbb
pop
fdivl
and
lods
mov
test
stos
lds
xchg
sub
and
out
or
pop
js
movl
sar
sbb
daa
stos
sbb
adc
sub
icebp
movsb
loope
ret
cmp
jne
aaa
cmp
dec
cs
push
or
pop
popa
into
rcr
outsl
ja
lret
sbb
or
clc
in
flds
cmp
dec
inc
lea
sbb
stos
cmp
fisubrs
dec
mull
dec
fildll
xchg
pop
pusha
ds
test
dec
push
push
ret
or
push
int3
cmc
push
push
ljmp
in
pop
cmp
mov
add
cli
mov
xchg
push
sub
and
pop
mov
pop
jne
fwait
dec
cmp
call
sub
hlt
pop
jmp
pop
mov
mov
inc
xchg
stos
jg
cmp
and
aad
imul
incl
sub
aam
xorb
jb
mov
push
out
jecxz
push
push
xchg
and
inc
jg
xchg
imul
jle
loopne
inc
jmp
into
fnstenv
cmp
xchg
mov
sbb
inc
mov
test
pop
add
add
aaa
cli
xor
or
sbb
cmpb
notl
rcrb
xchg
inc
xorb
xchg
or
add
and
shrb
cmc
jecxz
fldt
adc
inc
lcall
in
leave
cli
loope
pop
adc
out
jp
hlt
mov
mov
inc
sbbl
push
shl
pop
or
icebp
idiv
jg
test
int
adc
movsl
or
add
inc
pop
ret
les
adc
or
push
xlat
hlt
add
movb
cmp
jo
imul
ja
aas
pop
mov
jg
mov
inc
mov
lea
xor
pop
and
mov
test
adc
jp
cmpsl
cmpsl
mov
push
mov
testb
pop
or
arpl
pop
mov
aam
adc
jp
sbb
cmp
sbb
ja
dec
pop
mov
loopne
fldcw
daa
pushf
movsb
push
test
mov
jg
pushf
iret
adc
lahf
mov
or
xor
xor
jne
mov
sub
push
dec
xchg
cmp
sti
in
insl
cmp
sub
pop
sbb
adc
lock
mov
ficoms
outsb
cmp
mov
dec
addl
pop
mov
sbb
push
ljmp
popf
mov
and
lahf
loope
mov
cmc
imul
enter
pop
ss
call
clc
jg
lock
pop
cmp
call
jns
fbstp
mov
or
sarl
push
hlt
gs
out
lcall
push
xchg
pop
cs
pushf
lds
pop
sub
movb
out
sbb
adc
xchg
loop
add
pop
incl
and
loop
sbb
xchg
xor
mov
aad
sub
popa
jecxz
fadds
lret
lock
loop
jg
call
hlt
jmp
jmp
xchg
shlb
push
dec
mov
push
test
jo
inc
mov
xor
push
xchg
or
mov
mov
lock
sub
je
jmp
jne
and
pusha
loope
cmp
or
pop
adc
mov
adc
push
jns
mov
inc
ljmp
mov
cmpsb
test
jp
fcoml
add
push
mov
ret
jg
pushl
or
loopne
insb
das
mov
cld
xor
ret
cltd
test
out
sub
xor
mov
fdivl
xchg
push
addl
hlt
test
mov
and
add
out
icebp
loopne
insb
push
cmp
pop
or
in
in
pop
je
push
into
push
insb
fwait
scas
popa
pop
loopne
lcall
outsb
push
fldt
mov
cmp
add
add
mov
pop
sbb
popl
dec
sarb
adc
pop
cmp
or
gs
xor
fadds
push
je
pop
mov
adc
jmp
fcoml
pop
sahf
or
jno
call
push
mov
xor
inc
push
popa
ret
dec
push
mov
push
jecxz
xchg
fmul
repz
leave
dec
mov
jbe
lods
mov
hlt
and
js
aaa
push
cmc
xor
and
sarb
aam
jp
repz
icebp
pop
mov
test
add
sub
pop
adcb
dec
sub
ret
add
in
push
mov
add
dec
fildll
jl
repnz
icebp
call
hlt
sbb
ja
lock
loope
orb
bound
mov
ja
and
pusha
sbb
and
test
sub
jecxz
fdivr
mov
shlb
into
cmp
leave
fistpll
inc
and
fnstsw
add
outsl
ljmp
adc
test
and
push
push
adc
xor
in
fistpll
jo
out
call
movb
mov
out
dec
push
xchg
lret
push
xor
push
popa
pop
pop
pop
test
pushl
sbb
movsl
add
into
movsl
and
sub
add
inc
loopne
nop
xchg
push
in
pop
mov
call
dec
leave
out
ljmp
lods
mov
mov
shr
popf
fs
insb
inc
ljmp
enter
sub
sbb
scas
sub
mov
pop
loop
or
mov
dec
je
insl
and
cmp
les
mov
or
mov
add
or
sub
dec
mov
clc
inc
pop
sarl
popa
mov
cld
dec
aaa
insb
aas
jge
popa
scas
shll
cmp
sub
add
sub
pop
mov
loopne
mov
jbe
cmpxchg
aaa
pop
add
pusha
jnp
in
nop
ss
loopne
pop
push
je
inc
push
and
adc
cs
test
mov
sbb
gs
pop
add
or
add
mov
and
inc
imul
lret
aas
fcmovbe
dec
movsb
pop
and
dec
sub
test
xchg
popa
test
cmpsl
mov
pop
adc
sub
outsb
cmp
lock
push
mov
and
cmp
cwtl
test
pop
mov
inc
aaa
cwtl
call
fcomi
test
loope
call
jp
fstps
mov
arpl
leave
lcall
rorb
jle
inc
jecxz
outsl
pop
push
out
testl
arpl
pushf
ret
ds
pop
or
jg
lods
xchg
jbe
add
inc
push
lods
insl
test
mov
xchg
shlb
outsl
shll
lahf
xchg
ss
sar
pushl
mov
movsb
mov
imul
xchg
pop
add
hlt
call
inc
jne
sbb
mov
xor
push
rorl
mov
call
jmp
pusha
mov
xchg
push
xor
pop
lock
in
sbb
mov
adc
adc
inc
sbb
ljmp
scas
rcrl
mov
pop
mov
clc
mov
sbb
push
rcll
call
xchg
push
pop
mov
xor
sub
mov
mov
call
jl
arpl
xorb
scas
sbb
or
xchg
loopne
scas
mov
dec
std
inc
imul
loope
je
insb
aaa
mov
xor
sub
sub
or
mov
sbb
mov
cld
lcall
lds
jb
mov
jle
fs
or
jo
cmpsl
sete
mull
fdivr
mov
adc
dec
loop
orb
js
mov
mov
sub
or
jg
jge
addr16
jmp
fsubp
and
mov
add
or
mov
mov
ret
mov
or
pop
ds
and
xchg
nop
imul
or
aaa
decb
lcall
enter
add
add
mov
les
sbb
adc
adcl
jmp
or
jnp
inc
cwtl
jo
sub
push
ss
sti
imul
xchg
ljmp
testl
mov
sbb
repz
stos
mov
adc
inc
bound
adc
sti
pusha
push
cs
xchg
out
mov
and
inc
sti
into
mov
mov
cmp
imul
scas
adcb
jo
loope
pop
mov
jmp
or
shlb
jg
cmp
filds
cmp
inc
js
test
push
ss
sbb
repnz
sbb
push
adc
loop
daa
lock
inc
adc
leave
lods
adcb
loope
std
pop
into
enter
cmc
lea
daa
inc
sarb
jno
mov
fldl
ret
or
mov
mov
dec
mov
xchg
jp
cmpsl
gs
ds
testb
xchg
cmpsl
insb
pop
push
and
gs
hlt
push
jecxz
mov
mov
add
outsl
and
fucomi
loop
push
cmp
mov
pop
pop
insb
popf
fcomps
loope
jbe
sub
fwait
jmp
int3
and
xor
pop
cli
loope
lret
lods
pop
jno
jl
imul
mov
or
pop
adc
xchg
jb
inc
testl
mov
sahf
push
mov
leave
lcall
sub
add
daa
int
sti
in
xor
roll
in
out
loop
icebp
or
or
cvtdq2ps
jl
cld
pop
adc
aaa
fisttps
jl
push
mov
cmp
std
xlat
xchg
xor
or
and
shlb
fnstenv
mov
push
scas
mov
sbbl
pop
mov
lret
mov
ds
test
insl
test
push
loope
push
jno
pop
sti
mov
dec
cli
out
fwait
shl
je
sbb
cmpsb
lahf
lds
cmc
pop
cld
fcomip
cmpsl
xor
int
pushf
pushf
and
add
or
pop
les
shr
decl
jl
add
imul
lods
push
sbb
imul
mov
cwtl
scas
daa
or
shrb
sbb
pop
jno
loopne
push
inc
cmp
cli
test
mov
es
and
dec
mov
mov
loopne
hlt
decb
pop
jb
lahf
dec
dec
mov
nop
or
cmp
or
dec
push
add
mov
cli
cmp
cmc
cltd
pusha
les
lcall
cwtl
sub
data16
lock
jb
sbb
cs
cmp
add
decl
bound
jp
pushf
std
je
fsubrp
sub
pushl
ds
neg
hlt
push
adc
sti
xchg
imul
inc
scas
adc
jae
sti
js
pop
pop
loopne
xor
pop
aam
pushl
mov
pop
xchg
pop
push
or
jmp
test
mov
add
push
cmp
movl
push
cmc
push
testl
scas
jo,pn
nop
dec
or
decl
cmp
jmp
mov
ret
rcll
pop
pop
push
jno
push
mov
lcall
cld
xchg
dec
dec
xor
ret
sbb
cmp
shll
adc
call
or
jb
pop
lock
sub
stc
dec
nop
mov
and
jecxz
pop
or
cli
pop
pusha
jecxz
call
pop
adc
cli
sbb
mov
out
rorb
pop
or
jns
call
loopne
js
test
dec
jecxz
add
test
add
das
fucom
cmpsb
inc
out
xor
cmc
scas
jne
sbb
adc
and
or
inc
mov
mov
cmp
cmpsb
push
inc
add
mov
cmp
dec
cmp
jo
lret
dec
xchg
sbb
xor
jecxz
adc
rolb
popa
add
cmpsl
lcall
rcr
mov
add
stos
sbb
cmp
fnstenv
mov
jg,pn
xchg
out
decl
jns
popa
adc
pusha
js
fisttpl
sbb
bound
loop
loope
jb
mov
clc
sbb
xor
mov
test
push
adc
dec
cltd
loopne
inc
rorb
mov
xlat
imul
pop
mov
daa
int
sbb
jnp
hlt
std
mov
sub
movsb
push
inc
cmp
repz
add
in
push
bound
aaa
in
push
int3
ret
add
scas
jno
sbb
mov
dec
jmp
and
rcr
mov
stos
ds
cmp
lret
das
dec
or
lea
lds
pop
jp
in
sub
fwait
jle
dec
fiaddl
in
loope
adc
lods
stos
adcb
mov
inc
push
cwtl
out
cltd
mov
cltd
xchg
add
cmp
shr
add
fs
or
fdiv
and
lahf
or
lods
shrl
pushf
push
mov
fcmovne
je
cmp
push
push
mov
inc
jns
jbe
aas
add
pop
mov
int
test
insl
out
or
stos
inc
int
xchg
stc
xchg
sub
add
insb
pop
xchg
sub
ljmp
or
push
jne
rclb
in
mov
packuswb
out
imul
fsubs
fsts
outsl
std
clc
and
leave
aas
or
jb
orb
mov
jmp
mov
pop
mov
adc
fdivr
in
outsl
adc
add
mov
sbb
xor
or
and
lcall
popa
add
inc
cld
or
cmp
push
xchg
xlat
mov
dec
pushw
mov
adc
and
lcall
icebp
mov
sub
mov
aam
fcoml
mov
cli
daa
mov
inc
mov
or
clc
lock
fisubrl
dec
xchg
jg
cmpsb
cwtl
sbb
sbb
lret
and
shr
loopne
pop
decl
fs
or
dec
pop
movb
lret
stc
adc
dec
fcmovnb
outsl
mov
jno
mov
ds
adc
or
sbb
jp
cwtl
je
lcall
jl
fists
lock
or
repz
push
and
cmovbe
fstl
mov
repnz
ret
pop
xor
mov
fisttpl
cld
out
add
mov
filds
pusha
cltd
pop
jl
test
mov
icebp
or
jno
sub
mov
jecxz
jg
mov
dec
in
aaa
leave
shl
xchg
inc
xchg
test
es
mov
fisttps
push
mov
scas
addl
nop
and
cs
xorb
xor
rcrb
inc
sub
push
jle
fs
les
push
fdivrl
in
sub
sbb
pop
scas
push
pop
aaa
mov
inc
inc
lds
mov
mov
push
les
jp
in
sar
inc
mov
pushf
dec
push
andb
inc
add
xor
ret
sub
cmp
push
xchg
mov
mov
imul
xchg
loope
add
mov
sub
in
sub
mov
mov
xchg
mov
cli
pop
mov
int3
das
std
imulb
sub
imul
addr16
mov
push
in
mov
shlb
lret
shlb
mov
movsb
js
inc
inc
test
rclb
push
mov
mov
jg
xchg
lret
jbe
sbb
lock
nop
shrb
test
pop
inc
sbb
fwait
or
cmp
dec
sti
ret
jp
mov
xchg
in
decl
mov
pop
inc
shlb
fisubrl
xchg
mov
mov
and
dec
cmp
das
mov
gs
hlt
add
xlat
sbb
mov
movsl
in
or
mov
aad
loopne
push
mov
imul
rclb
out
adc
loopne
mov
xchg
shll
lret
mov
mov
pmovmskb
push
mov
add
and
shll
cld
insl
push
jne
dec
arpl
mov
xor
cmp
ja
mov
xchg
xor
shll
inc
fisubs
sbb
push
loopne
gs
xchg
xchg
dec
mov
add
sbb
xor
inc
aam
xchg
arpl
and
jp
ss
ret
mov
mov
ret
jle
repnz
adc
pcmpeqd
mov
lds
add
cmp
out
outsl
mov
cmc
ror
sarb
aad
fldenv
xor
mov
roll
dec
popf
movb
inc
pop
popf
test
lods
mov
or
xchg
mov
outsl
nop
cmpsb
pop
in
push
jg
dec
mov
das
loope
mov
dec
xor
cmp
add
cmpsl
pop
clc
lods
shr
insl
rcl
imul
inc
dec
ljmp
stos
incb
or
stos
inc
mov
dec
loop
mov
lods
jnp
mov
pop
icebp
rorb
or
or
mov
in
mov
mov
repz
push
daa
mov
test
orb
add
mov
ret
jecxz
mov
dec
test
xor
jbe
or
add
mov
js
or
dec
lds
rcrb
mov
or
adc
push
inc
sbb
mov
je
outsl
cmp
call
je
sub
or
cmp
cmc
mov
loop
out
loop
shl
test
xchg
pop
ret
ret
clc
push
cli
or
pushf
xchg
sbb
mov
lahf
mov
aam
mov
faddl
addr16
mov
cmpl
dec
and
movsb
sti
mov
cwtl
pop
xor
xor
std
pop
mov
jb
popa
call
decb
push
and
lret
lods
mov
loop
inc
pusha
fcmovu
mov
mov
adcb
data16
imul
push
movsb
sahf
lahf
pop
je
cs
add
fnsave
in
jg
jo
cmpsl
mov
mov
mov
lods
xchg
or
insl
add
shrb
cmc
push
insl
mov
mul
and
aaa
mov
adc
cmc
lret
push
test
xchg
fnstcw
pop
xor
sahf
shll
cmpl
ljmp
call
jg
pop
loopne
out
xchg
inc
test
leave
inc
cmpsb
addb
icebp
xchg
inc
push
adc
imul
roll
mov
xor
push
jg
fisttps
ljmp
mov
out
das
inc
cld
lods
xchg
and
and
in
push
sarb
fdivr
jbe
rclb
xchg
mov
adcl
push
mov
dec
jo
and
clc
fwait
loopne
aad
jmp
mov
in
call
out
je
pop
and
nop
or
movsb
sbb
fistpll
sbb
mov
jo
cld
aaa
cltd
xor
inc
mov
pop
loopne
loope
cmp
xchg
and
xchg
cmpsb
add
adc
aas
push
jmp
cmpsb
mov
or
mov
addr16
scas
fbstp
cli
je
test
ds
jge
push
movsb
aas
testb
mov
inc
push
aaa
orb
ret
dec
into
mov
lods
or
mov
xchg
cmp
clc
dec
dec
scas
mov
adc
sub
pop
jg
cli
inc
xchg
xchg
lahf
and
leave
out
xacquire
insb
xchg
mov
addr16
decl
ljmp
fidivs
shrb
sub
aad
loope
fmul
pop
push
loop
roll
inc
push
pop
in
test
mov
mov
mov
inc
js
xchg
in
fcoms
leave
cld
jge
mov
xchg
inc
scas
insb
push
mov
jmp
test
cs
bound
dec
xlat
shlb
pop
pop
and
cmp
mov
push
rolb
sbb
icebp
fistpll
add
int3
mov
mov
mov
loope
in
add
fildll
jecxz
add
mov
std
jecxz
pop
inc
cwtl
rcr
mov
pop
dec
push
and
sti
and
insl
adc
xchg
ror
dec
dec
outsl
sbb
aaa
push
and
mov
xchg
cmpsl
sbb
sub
mov
pop
mov
sub
clc
mov
jae
mov
fsub
add
mov
clc
mov
mov
mov
pop
clc
icebp
jmp
cmpsb
inc
dec
inc
and
inc
mov
sbb
sti
std
das
cmpl
test
add
push
dec
test
push
scas
loop
out
jmp
jl
mov
fistl
adc
fistpl
aam
repnz
mov
sub
jb
xchg
sbb
or
fldcw
or
mov
inc
xor
push
fnstsw
push
mov
adc
scas
push
mov
push
mov
faddp
test
arpl
pop
cmpsb
outsb
pop
xchg
inc
push
or
std
dec
dec
jne
pop
adc
cs
jmp
or
jmp
add
je
jg
fdivp
mov
dec
das
lock
out
mov
aaa
rolb
mov
repz
jae
mov
jg
arpl
adc
lods
inc
filds
and
xor
loope
cmc
fwait
jp
and
stos
int3
imul
pop
stos
test
cltd
sub
filds
jo
dec
pop
outsl
cmc
adc
cmp
add
adc
fmull
dec
jb
ret
add
adc
outsl
call
call
inc
dec
in
cmp
or
push
addr16
sbb
adc
sarb
cltd
mov
cmc
es
imul
push
or
lds
jne
push
clc
jnp
cltd
push
cltd
out
dec
add
aad
mov
stos
nop
out
fbld
bound
int3
cs
daa
push
mov
push
adc
pusha
out
scas
adcl
sti
movsl
pop
call
cmp
sbb
fucom
sbb
aad
popa
pop
or
in
movsl
insl
arpl
push
sbb
aas
add
xchg
jl
loope
mov
arpl
pop
mov
or
mov
push
xchg
fidivrl
and
adc
lcall
shll
sub
in
push
outsl
pusha
pusha
mov
adc
cld
push
call
push
pop
xchg
les
int3
int3
cmpl
pop
call
aaa
push
cvttps2pi
push
rorl
movsb
fsubrp
clc
addl
mov
mov
and
out
ret
or
jg
jnp
xchg
fs
call
adc
adc
pop
xor
add
in
fdivl
lret
jmp
test
popf
dec
mov
aaa
test
and
adc
inc
adc
mov
cld
cmp
ds
movsb
loope
fcoms
dec
iret
mov
sub
clc
mov
loopne
cmp
test
push
and
add
pop
es
adc
mov
cs
jne
adc
push
gs
outsb
mov
mov
mov
mov
jnp
test
xchg
int3
std
push
adc
add
push
cli
dec
bound
and
jg
ret
or
adc
movsl
sbb
push
pop
mov
or
dec
push
inc
add
xchg
xor
js
push
pop
ja
xchg
ljmp
mov
adc
out
and
mov
aaa
dec
nop
xchg
repz
aaa
sbb
filds
pop
repz
push
lock
mov
pop
leave
in
sar
clc
aaa
push
add
xor
or
mov
inc
mov
out
ret
icebp
mov
push
rorb
sub
or
test
movsb
push
sub
xchg
mov
sub
loopne
out
push
mov
push
jl
xchg
sbb
and
add
popa
daa
outsl
mov
filds
cmpsl
lods
addr16
shrl
nop
fidivrs
fs
mov
push
xlat
jp
andl
fsubl
inc
movsl
xchg
xor
cld
ljmp
sub
push
xchg
or
cmp
jmp
jg
out
push
xchg
dec
and
sub
pop
ret
mov
incb
lea
sbb
xlat
or
pop
dec
add
lock
xchg
cld
lods
hlt
ret
jno
xchg
mov
jle
std
lea
ret
lcall
popa
dec
in
bound
dec
pop
out
loopne
cmp
adc
shlb
lret
adc
aad
and
mov
push
loopne
push
sbb
cmp
sub
sarb
sub
push
js
or
out
adc
fisubrs
fidivrl
icebp
inc
adc
push
mov
cld
fucomip
pop
add
jmp
les
lret
mov
leave
ficoml
adc
dec
icebp
pop
mov
add
fnstenv
clc
push
das
std
jnp
mov
movsl
and
ja
popa
mov
adc
xchg
insb
dec
inc
dec
push
filds
mov
fldt
movsb
lods
mov
cmp
xor
push
iret
ret
xchg
stos
bound
add
jl
enter
outsl
je
std
shlb
and
or
popa
mov
push
lea
mov
repz
mov
ret
movsl
mov
mov
imul
xchg
cmpl
fnstenv
and
add
jo
lret
movsl
xlat
lret
mov
imul
inc
call
icebp
stc
mov
pop
addr16
dec
aad
mov
outsb
jg
pop
call
stos
shll
lds
cmp
mov
fwait
js
lcall
lret
stc
lock
ret
sub
pop
dec
add
mov
xchg
test
xor
sub
xchg
jo
xorb
adc
pop
push
fildll
adc
or
dec
notb
into
and
jg
lcall
scas
test
cmp
aaa
sbb
add
jecxz
mov
mov
fdivr
mov
and
xchg
ss
cmp
dec
jns
add
inc
lahf
jnp
mov
mov
jge
es
cmp
adc
cmp
lods
mov
incl
sub
pop
pop
cmp
jae
inc
mov
popf
adc
lock
mov
hlt
dec
mov
jmp
push
les
outsl
cmp
shrl
lods
jecxz
outsl
in
inc
cld
mov
in
mov
pop
or
sbb
mov
cmp
lock
push
aad
je
sub
and
cmpsb
mov
xchg
sbb
pop
sub
or
push
sahf
push
sub
mov
jbe
inc
pop
push
pusha
jl
pop
xor
mov
mov
out
pop
mov
adc
adc
add
add
cmp
sti
add
xor
push
pop
clc
add
mov
mov
mov
adc
insb
outsl
push
mov
cmp
mov
decb
cmpsb
jg
push
lcall
sbb
out
mov
stos
rcll
fldz
ljmp
cmp
push
or
mov
lods
add
adc
cs
mov
add
ja
mov
out
inc
xor
rcrb
hlt
mov
xchg
mull
pop
adc
jle
add
lds
mov
cli
testb
in
xor
xlat
dec
push
mov
bound
loop
decl
cwtl
js
add
loopne
mov
lea
cli
call
mov
add
adc
jge
push
pop
dec
cmp
out
icebp
sub
adc
jmp
add
mov
inc
mov
js
adc
lcall
add
dec
push
cli
shrl
clc
fildll
fbstp
arpl
cmp
mov
inc
xchg
push
xchg
jbe
mov
call
cmp
das
pushf
and
subb
cmp
in
inc
sbb
bound
pushf
adcb
outsb
loope
mov
popl
int
push
xor
add
xor
sub
dec
pop
cmp
dec
ror
pop
inc
out
fadds
call
arpl
fs
ret
fucomp
movsb
mov
test
jg
mov
push
decl
cltd
or
or
lcall
sub
inc
ljmp
pop
jecxz
pop
push
sarb
pop
inc
inc
or
test
testb
add
cmp
jmp
nop
iret
mov
out
movsb
pushf
and
fld
fistpll
repz
and
fbstp
orb
mov
movsb
inc
pop
cmp
loop
lcall
aaa
jo
ret
dec
movsl
das
jle
mov
xchg
push
das
cld
mov
cmp
cli
fimull
enter
test
sub
cs
mov
mov
fiadds
ret
push
inc
lock
daa
xor
adc
sahf
aad
leave
lods
lods
decb
inc
nop
hlt
test
adc
xchg
loop
mov
lret
inc
mov
sahf
push
adcl
cld
outsl
icebp
pop
inc
mov
les
sbb
int3
jo
cmpsl
mov
cmc
push
out
int
xor
test
iret
pop
loopne
les
inc
cmp
cwtl
mov
mov
cmp
pop
jne
add
mov
sbb
in
fistpll
mov
xchg
xchg
xor
jle
inc
xchg
leave
inc
lods
xchg
xchg
scas
sub
fstps
jmp
xor
xchg
dec
adc
js
mov
das
enter
pop
jbe
sub
sbb
inc
pop
mov
sub
xchg
negb
pop
int
outsl
aad
jge
loop
es
pop
mov
cs
push
mov
inc
xchg
xchg
jb
aaa
sub
in
imul
or
adc
or
inc
pusha
jb
decb
dec
xchg
mov
das
push
es
fdivl
cmc
dec
adc
pushl
jns
loop
mov
outsl
dec
fistpll
popf
loopne
call
lds
test
mov
lds
mov
push
pop
mov
jecxz
jle
xchg
movsb
jge
enter
mov
je
push
mov
dec
inc
jge
int3
loope
push
ret
lock
data16
gs
and
cltd
test
std
dec
xorb
ja
mov
js
or
lea
je
mov
clc
or
jle
lea
push
jmp
incl
and
pop
lret
push
sub
mov
xor
ljmp
outsb
pushf
mov
mov
lock
fsubrl
insl
lods
in
mov
frstor
jmp
xchg
aaa
scas
mov
sub
or
mov
cmp
sub
dec
icebp
inc
mov
shlb
sbb
shr
and
icebp
aad
test
fs
std
aaa
jle
sub
pop
mov
clc
xchg
mov
pusha
in
aaa
les
add
cld
es
mov
or
mov
pop
sub
xchg
cld
addl
ljmp
ficoml
sbb
adc
jg
push
cmove
inc
insl
adc
push
jl
std
loopne
std
mov
add
cli
icebp
outsl
fnstsw
or
or
mov
loope
xor
sub
sbb
push
idivl
pop
push
cmp
mov
inc
arpl
inc
pushl
das
adc
popa
je
jae
push
out
pop
mov
pop
repnz
mov
lret
sub
xchg
ror
sahf
pop
push
lods
scas
mov
and
loope
mov
jg
out
inc
mov
rclb
mov
dec
fldt
and
push
xor
push
xchg
dec
sbb
adc
iret
add
test
fdivr
adc
out
or
ret
ljmp
jb
hlt
out
pusha
mov
pop
mov
movsl
push
dec
push
dec
rcrb
xchg
ret
mov
dec
cmp
outsb
movsb
xor
movsl
aas
pop
incl
inc
lcall
paddsw
stc
mov
lret
leave
cmp
add
sar
pop
fldcw
push
dec
loop
mov
mov
sti
test
hlt
push
and
mov
clc
xor
sbb
ret
inc
or
pop
inc
cltd
repz
sahf
sarb
sub
add
mov
inc
call
lea
in
mov
int
xchg
call
push
sbb
mov
decl
dec
stos
leave
mov
sub
lahf
xchg
jl
int
and
pushl
shrb
roll
repnz
xor
sti
mov
and
jecxz
mov
jp
daa
sub
arpl
mov
aas
jle
int
xchg
mov
scas
push
sahf
adc
pop
cli
jg
sbb
cmp
push
movb
sti
in
jle,pn
pop
outsb
jb
fs
out
sbb
clc
decl
sub
insl
out
les
push
or
scas
inc
out
mov
cmpl
test
stos
cmpb
fistpl
test
add
pop
or
add
gs
mov
pop
add
out
inc
add
loopne
adc
test
dec
xchg
dec
decl
das
lcall
or
xor
inc
mov
jp,pt
int3
pop
loop
clc
enter
and
out
pop
jp
leave
sub
pop
outsl
sarb
mov
lock
ljmp
sbb
mov
inc
pop
mov
shr
mov
or
pushf
imull
and
and
arpl
inc
mov
mov
mov
jmp
fstps
es
push
std
ret
add
xor
icebp
js
cld
inc
in
and
mov
and
jge
mov
ucomiss
sbb
cmpsl
movsl
lahf
jo
sub
pop
jp
stc
mov
insb
lods
dec
xor
popf
xor
add
xor
xor
sbb
lea
push
andl
pop
loope
lock
push
xchg
dec
add
cs
aas
jmp
pop
scas
add
sub
jg
push
inc
dec
testl
jmp
lock
or
in
ret
lret
lahf
push
jp
pop
push
or
jns
ljmp
in
sbb
addl
fistps
rolb
mov
fcmovnbe
pusha
iret
xor
adc
ret
ljmp
fwait
cmp
outsl
mov
sbb
mov
cmpsl
pop
and
call
ljmp
push
xor
pavgw
adc
lcall
add
addr16
pushl
or
dec
icebp
mov
movsb
leave
sub
cltd
mov
ja
test
and
call
cmpsb
outsb
lds
loopne,pt
push
cmp
pop
or
mov
dec
add
jno
and
scas
mov
cmpsl
loop
dec
pop
xchg
pusha
test
push
inc
jg
mov
ljmp
sbb
add
std
push
pcmpeqw
lock
pop
pop
mov
rclb
sub
xor
cld
ja
xchg
insl
add
inc
arpl
fwait
cmp
scas
inc
imul
cmp
adc
push
mov
xor
bound
pop
das
popf
repz
aad
xchg
fsub
push
mov
loop
mov
sub
lods
xchg
xor
outsb
add
aaa
push
sbb
into
cwtl
lret
add
fbstp
int
add
mov
push
add
movsb
and
fcmove
and
push
rorb
mov
ss
mov
inc
or
mov
clc
adc
addb
loop
or
cli
cmp
xchg
call
push
cmp
xorb
push
pop
test
in
testb
xor
dec
or
test
add
push
or
push
cwtl
push
fcmovnbe
popf
mov
push
or
dec
mov
fbld
rorl
xorb
stos
cmp
push
xor
xorl
add
add
iret
std
xor
lock
push
mov
sbb
out
add
ja
pop
jnp
dec
adc
jmp
pop
jle
xor
es
mov
mov
adc
add
rcll
mov
jge
push
mov
mov
in
pusha
mov
jge
scas
mov
cmp
in
xchg
nop
int
xchg
insl
imul
lea
imul
cs
and
test
lods
adc
mov
inc
push
std
fsubrs
xor
popa
xchg
sahf
jo
add
push
sbb
dec
xlat
adc
add
mov
jg
pop
inc
inc
pop
jle
pop
push
test
mov
push
dec
push
push
das
mov
jmp
bound
aad
lock
in
icebp
mov
cld
outsl
out
push
mov
mov
xor
or
mov
inc
sub
fsubs
pop
popa
inc
mov
xchg
int3
shlb
ret
mov
pop
mov
xchg
xchg
jl
pop
mov
lcall
mov
add
in
lcall
lods
mov
mov
sub
test
mov
clc
das
mov
dec
fstl
mov
in
push
sbb
sub
call
jle
mov
icebp
sarb
mov
leave
push
rcll
inc
sub
jae
lcall
sub
jb
fmuls
lds
cs
lods
pop
cltd
add
mov
cmp
les
imul
addr16
jp
jl
data16
xchg
movsb
shlb
cli
xchg
jnp
xor
sbb
outsl
call
mov
sahf
cmpsb
fisttpl
test
out
sub
jne
mov
xor
xchg
pushf
sub
jne
adc
adc
jne
adc
sbb
inc
inc
sbb
or
or
loopne
xchg
mov
ret
push
mov
xlat
je
sar
or
adc
test
ja
aad
jae
push
pop
insb
and
xor
fisubrl
mov
dec
popl
jge
add
sarb
data16
test
push
movl
cmc
incb
or
jne
mov
adc
xor
sbb
sub
add
ja
js
aam
push
add
dec
sbb
mov
mov
data16
insl
adc
adc
push
notl
ljmp
movsb
popf
jl
leave
gs
xchg
hlt
push
pop
rcr
sbb
ja
pop
and
mov
lods
stc
dec
rorl
jns
clc
sti
inc
jae
insb
mov
dec
rorl
in
loope
lock
pop
outsl
aaa
cwtl
test
inc
xchg
loope
test
cmpsl
pop
mov
adc
mov
xorb
dec
lea
xlat
add
jno
jge
hlt
jp
test
in
insl
push
jo
cmpsl
rolb
push
pop
pop
icebp
dec
popa
cli
imul
aas
fidivl
mov
idivl
ret
inc
imul
fldcw
imul
iret
cmp
sub
xchg
xor
sub
jp
xchg
or
sbb
out
pop
mov
or
xor
adc
cmc
push
insb
push
stos
dec
out
fiaddl
adc
mov
and
mov
insb
icebp
adc
xchg
lock
xchg
test
clc
adc
imul
imull
jp
punpckhwd
fnsave
and
sub
mov
inc
xchg
cmp
cmp
pop
leave
insb
adc
mov
std
mov
scas
outsb
das
jbe
into
repz
imul
outsb
int
mov
xchg
or
stc
adc
stos
nop
sar
add
push
xor
fdivs
xor
dec
insl
imul
mov
int3
mov
out
mov
aas
xlat
lods
outsl
or
pop
popf
lret
push
test
push
mov
mov
mov
xor
xchg
dec
mov
loope
pop
les
stc
xchg
mov
sbb
cwtl
xor
loopne
sub
lock
cmpsl
in
jmp
lods
pop
sub
fldl
add
shr
data16
aad
pop
sarb
test
push
mov
stos
and
mov
pop
subb
mov
push
jo
fldcw
xchg
dec
push
mov
jecxz
repnz
fcmovnbe
lods
xchg
vpaddsw
sub
pop
imul
test
cmp
sub
mov
testl
popf
add
in
add
mov
mov
popl
mov
vshufpd
cld
mov
or
in
call
in
sub
inc
in
mov
mov
ret
push
push
fcmovnu
ret
add
arpl
pop
jo
mulb
pop
test
sbb
mov
add
cmp
in
clc
ret
dec
xor
add
stos
lea
lahf
mov
mov
sub
add
or
push
sub
jbe
mov
insl
stos
insl
mov
sbbb
shlb
call
dec
movsb
outsb
insb
sbb
in
ss
inc
fimull
mov
and
out
jl
cmp
add
and
test
or
rorb
std
mov
mov
push
mov
je
fsubl
icebp
inc
mov
lret
cmpsb
ja
pop
inc
mov
sub
and
ret
decl
pusha
lea
sbb
icebp
ret
das
stos
add
mov
xchg
aaa
mov
sbb
fadds
pop
inc
mov
insl
mov
out
adc
out
cmp
mov
pushf
push
or
pop
rcrl
jbe
leave
int
push
movsb
adc
sbb
mov
inc
add
sub
call
mov
fistpl
push
jns
dec
in
pop
jp
inc
adc
icebp
and
xor
shlb
xor
sbb
scas
jae
sub
shlb
mov
cmp
cmp
in
sarl
dec
test
dec
mov
adc
push
pop
inc
mov
jo
in
mov
or
and
add
and
xchg
dec
orb
jge
outsb
xor
stos
sbb
push
js
popf
cmp
call
cmc
mov
call
es
mov
and
ja
mov
mov
icebp
stc
outsl
or
stos
test
sbb
adc
test
fstpt
gs
or
lahf
enter
adc
xor
xor
fwait
xor
loopne
mov
cmc
fnstsw
cmp
mov
jbe
or
addl
out
pusha
push
jl
mov
sub
iret
cmp
sub
pop
aad
mov
fidivrl
mov
and
sub
push
jle
stos
or
jle
adc
arpl
insb
aaa
cmp
dec
dec
popf
mov
adc
jnp
and
dec
ljmp
cmp
jmp
sbb
lea
sub
scas
sbb
aas
or
push
data16
push
mov
mov
negb
inc
dec
cltd
lcall
mov
mov
or
jne
movsl
mov
je
and
das
aam
jmp
rcrl
mov
dec
or
in
xorl
ror
fs
xor
dec
repnz
xor
mov
je
pop
shrb
pop
add
adc
hlt
dec
iret
in
outsl
lcall
mov
add
stc
fldenv
cmp
or
ss
mov
add
rcr
iret
out
mov
idivb
cmp
push
lcall
mov
sub
cmpsb
je
inc
cli
push
loopne
les
out
mov
adc
clc
jle
push
xchg
mov
stos
adc
loop
ss
dec
loopne
test
xlat
adc
insb
dec
outsl
push
stos
jno
sbb
aaa
addr16
or
stc
cmp
leave
dec
das
adc
ds
sub
or
sub
and
mov
jns
jbe
dec
push
mov
aaa
jle
mov
in
mov
inc
ret
mov
sub
xor
mov
jbe
xor
fidivrl
lret
sbb
jbe
shrb
sub
or
sti
ljmp
cli
xor
test
push
insb
push
jmp
clc
jnp
and
int
fistl
push
jo
insl
push
adc
add
jmp
jo
bound
pop
adc
cmpsb
repnz
xchg
shr
fildl
jns
dec
bnd
out
inc
lods
push
decl
mov
dec
ss
push
sub
aas
std
sarl
xchg
mov
popa
sbb
jecxz
fwait
xor
out
loope
mov
fcomps
jg
fdivrs
jo
pop
lds
mov
add
loopne
mov
jmp
or
jb
cmp
mov
xchg
adcl
sti
dec
sub
inc
mov
loope
jmp
out
in
adc
lea
aad
inc
mov
xor
add
xlat
mov
pusha
clc
cli
adc
adc
xor
ja
mov
and
xcrypt-ctr
cmpsl
cltd
mov
jecxz
sbb
jl
lret
lea
arpl
jno
les
aam
fcmovnb
aaa
popf
mov
lods
add
jg
lret
cmpb
adc
inc
insb
jg
xchg
jmp
lods
leave
pop
push
leave
lahf
icebp
and
cld
sub
xchg
aad
shlb
repnz
dec
sub
inc
cmc
pop
aam
into
es
jp
dec
jne
les
out
mov
or
sbb
decb
stos
pop
andl
inc
jg
test
gs
popa
inc
fidivrl
push
jl
hlt
aas
mov
xchg
popa
or
das
cld
shrb
sti
inc
testl
xchg
rolb
cmpsl
dec
pop
iret
cli
cwtl
push
cmc
mov
pop
out
enter
iret
mov
push
outsb
insl
mov
outsl
es
push
inc
aad
ljmp
icebp
and
and
cmp
sub
ret
lahf
inc
push
rol
test
pop
cmp
movsl
cmp
xor
xor
adc
je
sub
decl
lea
push
fstp
sbb
jg
jge
or
mov
negl
je
sti
lcall
ja
rcrl
ss
imul
repnz
mov
inc
aad
pop
sbb
push
add
in
addb
xchg
cs
or
pushf
out
ret
in
das
lock
lock
push
cmp
inc
stos
and
push
pop
mov
nop
repz
movsb
sbb
jl
dec
loop
adc
insl
in
cmc
dec
aaa
fimuls
push
pushf
lea
jg
mov
popa
addr16
sbb
orl
inc
idivb
lret
js
xchg
pop
or
ljmp
addb
insb
or
jg
mov
lcall
ljmp
fistpll
shl
mov
sub
push
xchg
adc
mov
sbb
mov
adc
movsl
mov
add
pop
sbb
dec
sbb
mov
cld
into
lds
negb
mov
push
mov
cs
jno
adc
mov
adc
jns
cmp
mov
xchg
fsubrs
push
or
into
xchg
inc
test
inc
dec
push
mov
je
jmp
add
mov
mov
or
lcall
push
mov
xor
movl
xchg
aam
shrl
es
sahf
inc
mov
les
into
mov
cmp
adc
mov
insl
mov
pop
and
jmp
lods
mov
add
adc
or
mov
and
sub
in
mov
and
xchg
or
inc
das
cmp
aad
nop
les
sar
push
rcrl
mov
filds
pushf
call
daa
sub
pusha
call
clc
sbb
cmp
sbb
iret
fcoml
push
shrb
or
inc
xchg
dec
pop
nop
jbe
mov
cmp
cli
lea
clc
out
rorl
test
mov
ljmp
mov
movsl
sub
xchg
and
std
or
std
movsl
out
arpl
and
pushl
jo
loopne
pop
repz
cmp
pop
push
add
jl
add
sbb
sbb
fidivs
push
imulb
add
jl
sub
fsub
push
ja
mov
in
clc
fwait
mov
mov
loopne
ss
pop
add
jo
in
and
add
add
lods
test
int3
loopne
js
ret
js
push
mov
rcrl
or
aaa
sar
in
incl
mov
hlt
mov
shr
aas
xchg
inc
xor
sub
jmp
mov
sahf
cmp
mov
mov
push
je
xchg
push
ficoml
out
cmpsb
enter
inc
adc
loop
push
imul
xchg
cli
push
sub
loopne
jmp
movsl
insl
nop
int3
add
fnstcw
sub
fldt
call
movsb
nop
cmpsb
test
push
and
and
pop
sub
push
pop
xor
popa
and
fisubs
mov
push
adc
aaa
aaa
ss
jmp
mov
test
test
lock
sarb
gs
incl
loope
inc
sub
cmp
lret
sbb
adc
jp
mov
orb
xchg
cli
pop
mov
cmp
xchg
xor
pop
loop
inc
jo
inc
das
clc
cmpsl
mov
outsb
mov
xchg
and
mov
decb
bound
les
add
mov
pop
xchg
mov
cmp
xchg
jg
inc
dec
rorl
or
pop
dec
sti
jne
ret
mov
incl
outsl
movsl
inc
clc
rorb
test
ss
or
adc
pop
sbb
mov
mov
ss
imul
out
adc
adc
push
int3
out
pusha
and
pop
mov
das
or
je
xchg
add
push
inc
mov
std
call
scas
call
dec
add
pop
xchg
sar
mov
lea
mov
push
adc
dec
cld
ljmp
add
aas
mov
dec
orl
push
jge
add
push
movsb
lea
lret
cli
push
es
inc
pop
xchg
pop
mov
lds
aam
push
pop
fcomi
insl
ljmp
sarb
rclb
dec
out
cmp
and
sbb
xor
nop
jmp
ds
stos
in
pop
je
ljmp
sub
pop
fdivs
xchg
jbe
adc
mov
cmp
sarb
and
adc
outsb
xchg
dec
push
pop
repz
cli
xor
cmp
push
xchg
or
push
dec
or
pop
push
push
mov
jge
loopne
ljmp
xchg
or
mov
mov
or
add
sbb
addr16
mov
xchg
and
fists
add
mov
pop
xor
add
xor
sub
mov
or
xor
cli
mov
les
inc
hlt
jbe
inc
push
scas
jle
lret
cld
adc
push
jecxz
and
mov
xlat
sub
daa
push
testb
shll
scas
nop
adc
push
dec
lods
dec
xor
sbb
ret
mull
pop
test
sbbb
lcall
fucomip
mov
je
cltd
outsb
jae
fadds
bound
movsl
pop
adc
pusha
xchg
test
sub
or
in
add
pop
sbb
adc
cltd
test
cs
pop
mov
jno
ret
xlat
inc
jns
dec
adc
pop
sub
roll
int3
jle
mov
jmp
rorb
daa
dec
fcmovnu
je
fnsave
ret
sbb
jecxz
jo
dec
ds
sub
sub
push
mov
in
loopne
pop
aas
sub
into
pop
test
shlb
notb
cmp
cmp
push
and
cltd
lahf
enter
int
mov
repz
adc
adc
gs
mov
add
or
loopne
xchg
sahf
loopne
iret
lock
popa
mov
mov
inc
lods
addb
cltd
xchg
xor
mov
mov
sbb
mov
and
inc
add
mov
shll
and
pop
push
add
cmp
insl
das
fs
inc
imul
idivb
in
and
push
aad
insb
scas
aaa
xchg
push
mov
add
inc
push
sahf
and
fidivrl
cmp
stc
inc
mov
cli
sub
pop
loopne
mov
sub
inc
es
movsl
add
test
imul
jp
call
std
add
ds
imul
aas
ljmp
mov
imull
shlb
sbb
sub
pop
scas
xchg
stc
sbb
out
repz
pop
les
fidivrs
jb
inc
imul
or
mov
and
ret
pop
lret
lahf
adc
mov
dec
insl
test
popa
xor
lods
or
outsl
inc
xor
rclb
jne
inc
pop
jne
push
push
bound
jbe
adc
inc
mov
inc
pusha
mov
adc
xchg
fwait
adc
out
rol
dec
aad
cmpsb
mov
mov
push
dec
mov
and
adc
fistps
sbb
divb
in
movsl
sbb
xchg
pop
popf
stos
fdivrs
or
fs
adc
push
inc
rorl
cmp
pop
in
dec
pop
mov
and
mov
pop
adcl
pop
push
sub
mov
and
push
jl
arpl
popa
push
xor
mov
pop
arpl
mov
cmp
stos
push
mov
jae
push
mov
ltr
imul
shrb
pop
inc
shll
mov
mov
cld
jg
jmp
add
mov
mov
hlt
push
aad
mov
inc
and
mov
lret
das
fidivs
sahf
mov
test
jae
and
enter
xor
fs
add
lods
pop
sub
sbb
cmp
mov
ror
cld
lods
sbbl
mov
mov
cmp
stos
sub
lock
clc
add
mov
popa
push
cmp
aam
imul
sbb
clc
faddl
fildl
neg
jle
mov
jnp
fwait
popa
xchg
mov
paddsb
mov
xchg
jg
push
jl
cld
and
adc
mov
orb
and
fs
adc
mov
fs
test
xchg
pop
cltd
sub
sub
pop
jmp
lea
fisubrl
sub
shl
movsl
lods
inc
mov
jno
mov
fistl
loopne
insl
lret
nop
dec
sbb
xlat
fimull
movsl
mov
repz
shrl
insl
fsubl
jp
jbe
fmul
lea
jg
jns
xchg
xchg
ljmp
or
cld
cmpsl
les
in
jmp
pop
xchg
pop
or
daa
jle
mov
enter
or
mov
push
and
mov
inc
sti
or
cmpsl
and
jmp
mov
jne
divl
adc
mov
fmuls
pop
xchg
bound
rol
les
sbb
mov
pop
pop
mov
sbb
jmp
adc
popa
jmp
popa
jecxz
scas
push
jg
shll
fstps
lds
jae
jne
aad
mov
mov
cmpsl
mov
push
iret
mov
in
arpl
int
cmp
lods
movsl
daa
ds
jno
insb
arpl
test
jecxz
lea
fisttps
mov
cmpsb
mov
push
xchg
xlat
lea
add
cld
outsl
cmpsb
inc
int3
push
pop
and
mov
incl
shll
xadd
cmp
mov
mov
xor
jmp
and
mov
in
test
jbe
and
add
add
cli
jp
lods
fdivp
add
lahf
pop
cmp
mov
sub
dec
insb
jne
add
dec
fwait
lods
icebp
inc
test
push
ret
aaa
cmp
jns
fadds
pusha
inc
mov
outsl
xor
ds
sub
call
repnz
sub
lock
aas
aas
gs
xor
mov
fcomi
mov
sub
push
push
lods
insl
push
cmc
cmp
movsb
xchg
sbb
push
mov
xchg
push
cli
int3
adc
mov
aam
fldenv
int3
loopne
incl
xor
push
lret
loop
fs
fdivl
insl
xchg
mov
add
cmp
dec
fs
aad
and
pop
push
inc
fisttps
jo
jecxz
and
push
cmp
fsub
or
inc
add
pop
outsl
repnz
fwait
jge
out
fcom
pop
xchg
push
fisubrs
pop
jne
fstp
dec
pop
scas
icebp
test
mov
lahf
popf
movsb
out
mov
inc
push
ret
bound
in
mov
jg
mov
imul
pop
mov
cmp
lock
inc
push
test
hlt
test
dec
pop
inc
jno
clc
jno
lock
push
stc
scas
and
sub
into
inc
sbb
fcompl
push
jnp
in
pop
test
rcr
sub
mov
loop
and
xlat
ja
jl
dec
pop
ret
jmp
inc
sar
call
sti
movsb
pop
aas
jg
push
and
shll
dec
negb
shrl
aad
mov
xor
scas
jg
jo
ret
cltd
rcr
mov
outsb
iret
mov
ror
insb
cmp
xchg
aas
jge
ss
mov
xor
mov
mov
push
out
mov
xor
in
hlt
test
adc
mov
inc
xor
fs
pop
shlb
mov
pop
js
in
mov
shlb
xor
jns
xlat
lods
pusha
mov
int3
shl
ffree
jge
jbe
and
fidivrl
ss
or
push
inc
mov
ss
imul
inc
movsb
popa
mov
inc
jo
loop
push
jnp
xchg
cs
lahf
into
sbb
dec
mov
icebp
sub
mov
lcall
insl
xor
sub
decb
jp
std
mov
dec
add
insl
jae
test
popa
insb
cmp
cmp
add
push
loopne
xor
jnp
xchg
xchg
clc
lcall
mov
push
enter
aad
aas
add
dec
lret
add
adc
aaa
dec
popf
and
fldl
cltd
fimuls
cmc
sbb
insl
loopne
ljmp
cmp
aaa
and
addl
js
or
sub
xor
js
jecxz
test
stos
cld
mov
adc
xchg
loop
push
out
popf
sbb
xchg
dec
stos
ljmp
lods
sbb
cltd
cmp
mov
sbb
loope
outsb
pop
bound
lock
fnstsw
pop
dec
jecxz
cmp
pop
lea
popa
arpl
cmp
out
mov
inc
adc
mov
insl
cmp
test
xor
add
dec
fildl
incb
mov
mov
push
aam
push
js
mov
fcmovnu
inc
clc
xor
mov
adc
pop
jge
fldl
popa
sub
shll
cmp
xadd
test
ja
repnz
fisubl
ss
fs
hlt
lods
insl
xchg
mov
push
rcrl
arpl
cmp
jnp
mov
or
sub
jg
imul
sub
enter
and
ror
pop
outsl
or
popf
enter
movsl
pop
mov
or
ds
jmp
mov
iret
jbe
and
roll
sub
mov
mov
leave
mov
sub
leave
or
mov
fcomp
ret
push
and
mov
mov
repz
inc
or
ja
insl
stos
lret
popl
outsb
ret
loopne
push
inc
lahf
setbe
pop
std
sbb
loopne
bound
stc
es
sbb
cltd
sbb
out
ljmp
pusha
push
inc
gs
mov
cli
movsl
add
mov
sbbl
inc
add
out
sbb
jmp
fisubl
scas
ret
out
arpl
xchg
sub
inc
mov
loop
lcall
jne
shlb
jmp
fldenv
cmp
test
mov
rcr
popf
sbb
divb
sub
cli
xchg
movntq
push
in
xor
push
ss
mov
fistl
pop
aam
push
sahf
pinsrw
sarl
inc
pop
inc
mov
mov
andb
sub
sahf
data16
loope
leave
into
or
jne
adc
pop
std
push
stos
lcall
mov
lea
mov
lcall
add
ss
nop
inc
mov
mov
sub
xor
mov
les
sbb
mov
xchg
pop
push
xor
xchg
rcrb
loope
push
or
jl
fisubrs
or
addl
xchg
mov
jg
sbb
adc
sbb
sbb
jmp
inc
cli
dec
mov
mov
aad
pop
or
lea
ljmp
pop
add
pop
jecxz
push
aaa
and
shlb
sbb
outsl
jne
test
outsb
ficoms
xor
aaa
mov
pop
cmpsb
and
mov
pop
test
or
jno
xchg
stos
ss
pusha
jmp
pop
sub
dec
cmp
pop
insb
add
out
pop
xlat
sbb
adc
ret
pop
mov
mov
mov
xor
dec
lahf
test
cltd
jne
mov
popf
pop
sbb
mulb
fildll
cmp
mov
imul
inc
mov
sub
aad
cmp
stos
mov
jne
dec
cmc
sub
and
sti
add
cmp
jnp
mov
push
imul
incb
adc
mov
mov
rcl
pushl
aad
in
pop
mov
loope
mov
call
nop
xchg
xlat
pop
pop
lods
gs
jnp
pop
or
decl
cli
cmp
imulb
loopne
push
in
sbb
or
aam
clc
ja
int3
push
mov
push
rolb
mov
sub
xor
jbe
jmp
push
xcrypt-cbc
cmpsl
shlb
popf
je
andl
cmp
ja
jg
inc
mov
cmp
push
adc
scas
and
dec
mov
stos
pop
or
sub
mov
ljmp
lods
inc
adc
movsb
mov
enter
mov
xchg
mov
jl
fcmovne
jmp
clc
mov
rolb
cmpsl
sbb
or
xlat
inc
fs
cltd
cmpsb
aaa
cld
inc
jl
adc
push
mov
je
inc
aaa
into
andl
push
das
mov
mov
xor
or
pop
in
adc
mov
enter
int3
mov
clc
imul
sub
lods
rcrl
pop
pop
sub
dec
ficompl
cmpb
faddl
mov
pop
sbbl
push
sbb
adc
push
mov
mov
aam
ss
mov
scas
nop
aaa
mov
movsb
fcoms
sub
in
pop
outsb
ljmp
mov
fwait
stos
adc
cmp
test
cli
out
jg
sbb
setae
gs
scas
push
cmp
movsb
cld
sbb
enter
xchg
fcompl
push
or
dec
mov
adc
dec
pusha
movsb
icebp
mov
aad
adc
dec
jp
mov
pop
mov
sbb
sub
inc
sbb
lock
clc
aam
jl
scas
lret
jns
push
scas
jmp
mov
outsl
fs
test
psubb
add
outsb
push
leave
popf
mov
pop
sar
das
mov
add
rcrb
mov
mov
mov
dec
cld
or
sahf
push
inc
or
dec
hlt
test
jl
mov
rcrb
mov
cmpsb
or
xor
dec
cmc
lods
rorb
push
lds
js
sbb
aam
and
mov
filds
lea
ret
clc
or
adc
shrb
sbb
test
js
mov
cld
adc
jmp
inc
push
mov
bound
icebp
push
ret
test
cld
mov
mov
xchg
nop
mov
dec
shr
and
or
dec
add
mov
xor
sbbl
dec
dec
mov
add
adc
adc
adc
xchg
mov
push
adc
or
cmpsl
ficoml
pop
jo
dec
cmp
ss
sbb
xor
mov
aad
aaa
js
lods
adc
push
movb
mov
fisubrs
inc
adc
or
js
inc
dec
add
cmpsb
clc
bound
das
or
cmove
bound
adc
jbe
inc
orb
clc
js
shll
lcall
pop
push
cmpl
or
sbb
jb
je
std
sub
sub
xor
nop
jecxz
xchg
or
iret
decb
adc
or
mov
subl
loop
outsl
mov
adc
fs
loopne
pushf
inc
pop
xchg
fisubrl
and
loopne
push
lahf
jmp
adc
aaa
dec
add
shl
push
push
dec
imul
iret
push
movsb
or
loopne
mov
loopne
cmpsb
in
test
outsb
into
xchg
into
sub
enter
jo
fbld
cli
push
jae
fdiv
out
and
dec
inc
jne
jle
push
push
scas
addb
faddl
xor
addr16
mov
pop
fnstsw
or
repnz
mov
lea
std
adc
or
and
sub
mov
push
sub
outsb
hlt
pop
insb
xor
imul
fldt
aam
fisttpll
enter
hlt
loop
in
push
jg
ret
insb
insb
int
cmpl
mov
xor
sahf
fs
and
or
mov
out
jg
ret
and
and
dec
xchg
pop
dec
jp
pop
mov
arpl
mov
fnstsw
cmpb
mulb
adc
outsl
insl
test
dec
push
inc
mov
ss
mov
es
add
mov
and
or
repnz
rep
cmpsb
push
frstor
sbb
jb
lock
inc
fwait
out
mov
xor
sub
call
add
and
dec
movsb
dec
pop
cmpsb
orl
sbb
add
mov
jno
sbb
mov
fcmovnbe
mov
mov
leave
stos
les
mov
loop
lods
or
mov
mov
sub
test
fildl
out
outsb
mov
out
push
fiaddl
ret
jbe
xchg
push
imul
mov
insl
and
shlb
lahf
nop
inc
adc
rol
and
pop
fists
adc
mov
ja
adc
mov
sub
pop
cs
cltd
xor
inc
dec
jno
push
pushf
push
je
mov
jle
adc
sub
pushl
mov
icebp
cwtl
or
out
xor
xchg
cmpsl
je
xor
inc
pushf
or
outsl
jl
rclb
in
cmp
inc
jg
push
popa
or
das
mov
add
das
cmp
je
pop
ljmp
aam
mov
pop
rolb
popf
insb
fisubrl
sub
jge
arpl
std
fucomip
in
shrb
cmp
pop
add
mov
xchg
int3
pop
or
pop
fisubrs
sbb
test
sti
dec
dec
out
fcoms
fisubl
inc
mov
and
test
pop
mov
mov
inc
lock
es
adc
rcll
dec
insb
cli
incl
pop
pop
clc
scas
imul
fcmovbe
sbb
inc
mov
stos
outsb
popa
and
fdivl
mov
out
jle
jp
das
and
les
hlt
sbb
sti
std
popf
ja
adc
cld
push
sbb
popa
mov
stos
sub
xlat
outsl
lock
xchg
arpl
insb
or
jg
cmpl
rcll
test
push
mov
mov
and
nop
jns
adc
sbb
cmpsl
imul
ljmp
scas
mov
or
xor
testl
cmp
pushf
push
push
test
pop
jo
stos
ret
add
sub
ja
pusha
lahf
loope
inc
dec
push
aam
shl
and
mov
and
test
adc
dec
mov
push
and
xchg
shr
inc
insb
adc
cmp
mov
cld
div
lea
or
pusha
add
and
jg
xchg
xchg
pop
and
push
add
xchg
adc
aas
mov
stos
in
andb
lods
xchg
push
in
rolb
das
ss
adc
sub
dec
mov
dec
cmpsb
je
sbb
ficomps
loope
decl
roll
je
xor
or
loopne
loopne
mov
leave
repz
fdivr
jbe
cmpl
push
or
lahf
cli
jg
or
out
ja
test
cmp
das
add
outsb
jb
int3
in
arpl
sar
xor
dec
hlt
sbb
into
push
mov
rorl
push
jp
mov
mov
sub
jle
lds
dec
dec
and
adc
jns
inc
and
lahf
lcall
add
and
pop
clc
cmp
or
cwtl
insb
and
pushl
lock
mov
push
shlb
into
jmp
sbb
jns
loop
push
mov
mov
dec
push
push
push
pop
sbb
lcall
inc
mov
xor
xchg
test
pop
pop
jg
shlb
sub
popa
cltd
mov
lcall
cmc
aad
sbb
std
mov
jge
push
and
mov
xchg
out
push
lcall
jp
in
es
jecxz
xor
mov
loope
xor
or
jecxz
negl
popa
add
or
jmp
adc
jg
nop
sti
movsl
lahf
xor
outsl
adc
test
into
mov
jl
mov
xor
sub
mov
icebp
test
cmc
mov
cli
ret
es
scas
xchg
stc
or
pop
add
inc
ret
dec
inc
daa
sbb
outsl
insl
cld
fldl
cli
pop
cmp
dec
data16
movsl
push
xchg
subb
pop
lea
xchg
mov
cmc
outsl
adc
outsb
loopne
mov
out
adcl
pop
sarl
adc
aaa
mov
push
xchg
sti
stos
pop
sbb
mov
adc
and
fsin
lock
jns
push
sar
cld
lret
adc
xchg
cmp
push
stc
out
jmp
cmc
cmp
cmpl
mov
mov
fadds
inc
adc
insb
insl
pop
cmp
stos
daa
pop
pop
sbb
mov
mov
call
push
ljmp
aad
jmp
cwtl
loop
fsubp
roll
loope
xchg
jns
in
and
mov
dec
insb
xor
jno
and
mov
cmpl
mov
mov
into
or
adc
subl
mov
imul
adc
adc
lcall
mov
push
insl
jg
test
gs
mov
nop
int3
repz
fnstsw
sbb
or
pop
add
mov
xlat
dec
dec
in
mov
sub
jo
jo
fadd
jb
and
inc
lahf
shlb
jnp
lret
test
cmc
jb
ljmp
pop
sub
fsubrs
sbb
add
sbb
xchg
iret
mov
std
pop
ds
and
mov
pop
mov
jns
lock
push
dec
inc
jnp
jns
mov
outsl
xor
jne
call
adc
cld
ret
xchg
mov
mov
cli
pushl
mov
xchg
or
aas
sub
stos
das
mov
add
cli
into
jb
add
dec
aam
mov
incl
in
xchg
div
je
test
movsl
lods
push
sbb
mov
cli
lcall
jge
push
or
jl
sub
adc
xchg
arpl
mov
imul
mov
push
mov
rolb
ret
or
mov
popa
jnp
lock
dec
dec
ret
mov
popa
jns
pop
pushf
and
xchg
call
movsl
ficoml
jnp
mov
dec
sub
fildl
shlb
pop
stc
and
push
mov
mov
sarl
adc
dec
mov
inc
insb
popf
mov
ja
loop
daa
sbbl
nop
xchg
add
into
lods
test
mov
sbb
sub
mov
in
pop
lods
js
ss
outsl
adc
mov
jbe
jmp
stos
std
out
add
lods
imul
add
mov
sbb
jno
pop
dec
sbb
in
lods
lods
ss
lds
sti
dec
insb
mov
sub
mov
fwait
cli
outsl
inc
xchg
mov
jo
stos
sub
mov
les
mov
subb
imul
mov
hlt
add
push
enter
xor
ret
dec
imul
daa
ret
or
mov
xchg
sub
daa
call
idiv
mov
adc
mov
lcall
add
sbb
sub
mov
mov
clc
mov
sub
fwait
or
test
jl
jo
cld
into
xchg
cmp
sub
push
mov
mov
int3
loopne
popa
mov
shlb
cmp
lods
dec
aaa
mov
and
or
add
cmp
insl
dec
xor
cmc
xchg
inc
iret
out
sarl
int
aas
in
jnp
mull
ror
xchg
and
aad
mov
jmp
mov
idivb
sub
push
sub
add
ja
push
ss
adc
cld
sub
push
mov
jecxz
aaa
xor
inc
push
push
adc
or
sbb
jmp
les
lods
fidivl
and
hlt
rclb
mov
cmp
fcomip
push
aas
popa
jmp
stc
add
adc
int
aam
jnp
mov
aad
cs
jb
test
nop
popa
rorb
pop
jl
adc
test
push
or
lds
bound
cmp
cmp
xchg
sbb
loopne
mov
jp
inc
in
or
bound
lahf
scas
repz
test
push
sarl
mov
das
adc
jmp
sbb
pop
mov
mov
dec
scas
cmc
pop
in
mov
mov
bound
lahf
jb
cli
push
cmp
jnp
ja
xor
adc
xor
add
shll
add
xor
cld
scas
cmp
fwait
mov
fidivs
insb
into
xor
or
shll
rcrb
pop
stos
push
ficomps
les
stos
xchg
cmpb
ljmp
xchg
pop
inc
inc
mov
or
cli
inc
pop
mov
in
xor
ret
push
std
pop
sbb
sub
sbbb
mov
and
xchg
mov
jb
ficomps
jg
decl
stos
add
adc
and
and
bound
jl
mov
jp
lock
cs
mov
xchg
adc
das
faddl
fisubrl
or
lods
pop
loopne
cmp
push
mov
adc
cmc
arpl
pushl
xor
lea
bound
push
mov
jne
inc
and
xor
aad
push
jecxz
pop
inc
fbstp
in
stos
inc
mov
adc
mov
ljmp
push
xchg
fildll
push
in
jnp
and
dec
add
push
fucomp
and
inc
sti
pop
cmp
jge
mov
pop
ljmp
aad
jge
arpl
xchg
push
int
jno
mov
loop
loop
rclb
inc
sbbl
pop
inc
sbbl
gs
xor
movsb
lds
and
in
xchg
paddusb
pop
sti
ja
mov
mov
jno
rcll
jne
mov
dec
outsl
ljmp
call
cs
sub
jmp
addl
xor
mov
or
jecxz
xor
ret
inc
sub
lret
xchg
and
call
mov
sub
xor
daa
cmp
mov
push
lea
push
cmp
jl
and
jb
rcl
mov
push
mov
pop
add
decl
and
push
push
sbb
mov
jecxz
mov
add
aaa
test
sbb
jbe
and
cmp
sub
outsb
roll
sub
mov
mov
or
inc
fucomi
stos
decl
jmp
mov
addr16
pushl
jmp
pop
outsb
das
rclb
dec
out
add
jno
cmp
add
pop
fildll
jg
or
push
sbb
cmc
mov
stc
and
hlt
add
or
pop
pop
mov
cmpsb
jmp
lods
cmp
rclb
jo
push
inc
sbb
cmp
mov
xchg
fisubrl
arpl
pop
mov
outsb
jmp
iret
adc
push
movsb
cli
sbb
pop
pop
jp
jno
or
push
xor
push
push
clc
aaa
add
inc
add
clc
mov
cmp
or
pop
arpl
jecxz
sbb
test
ret
push
jl
cmp
nop
push
inc
stos
mov
or
ret
adc
in
jno
cli
out
dec
xchg
and
insb
cmpsb
cmp
or
xorb
dec
fisubs
sbb
pushf
or
xchg
js
and
mull
fidivrs
adc
fs
cli
call
and
repz
fdivl
loope
sbb
inc
popa
stos
int3
jnp
push
fistps
inc
and
mov
cmp
jnp
test
inc
dec
lods
in
or
arpl
lods
xchg
mov
std
push
aad
int
jecxz
inc
inc
push
mov
cld
dec
xchg
jl
imul
stos
sbb
push
xor
mov
pop
std
pop
jne
dec
mov
and
pop
dec
sarb
mov
sbb
or
adc
sub
stos
xchg
mov
imul
stc
call
add
lods
push
in
push
rolb
sbb
pop
std
pop
call
loopne
pop
fnstenv
mov
into
outsl
inc
outsl
inc
or
icebp
int3
or
inc
push
mov
mov
inc
test
sbb
clc
cli
stos
cmp
xchg
out
sarb
pop
xor
mov
add
xchg
xchg
mov
cwtl
repnz
test
pop
ret
cli
ret
cli
les
mov
mov
xor
xor
outsl
jge
jg
or
dec
and
pop
test
rolb
xchg
jo
call
cwtl
loopne
add
or
leave
and
mov
jg
ffreep
xchg
or
imul
mov
clc
test
sub
sub
xchg
mov
stos
mov
push
xchg
and
pop
lods
sbb
push
clc
adc
arpl
sub
cmp
dec
xchg
int
cwtl
mov
ljmp
mov
data16
jp
sub
cmp
dec
lock
movsl
pushf
es
cmp
roll
cmp
scas
adc
or
sti
pushl
cmp
xor
cmp
adc
and
repz
jg
rolb
xchg
out
push
and
lods
inc
mov
ja
inc
sbb
mov
pushl
pushf
xor
nop
sub
and
xor
push
pop
adc
jecxz
push
je
sbb
dec
jl
repz
pop
push
cmp
xor
out
pop
in
push
in
push
mov
xchg
jb
dec
clc
inc
imul
outsl
xchg
jb
push
mov
roll
insl
push
loope
mov
test
mov
inc
sbb
lds
insl
rol
dec
call
inc
into
adc
fdivr
mov
inc
pop
fdivr
aas
push
pushf
xchg
xchg
scas
push
xor
sbb
jbe
loopne
add
xchg
and
stc
fmuls
sub
and
push
hlt
lretw
mov
jno
outsl
insb
mov
sub
fisttpll
addl
push
rcl
xchg
scas
sbb
and
jecxz
jmp
jmp
imul
call
inc
les
inc
stc
mov
sbb
jae
or
inc
sarb
lds
sub
ret
and
sahf
fistpll
mov
mov
loopne
in
mov
pop
and
or
sbb
arpl
call
jne
outsl
rclb
test
mov
mov
mov
scas
add
fimuls
fcmovnb
mov
sub
cmpsb
nop
fidivl
jne
outsl
mov
lds
jmp
and
je
sahf
stos
pop
lock
call
add
insl
mov
aaa
cmc
jg
pop
sti
pop
loopne
call
xor
cmp
sub
decl
mov
xchg
cli
cmp
or
outsl
ds
in
add
push
sbb
inc
jb
sub
ffreep
shl
pop
in
ss
or
pushf
push
jl
movl
or
jns
push
aad
xorl
inc
stos
mov
jne
std
ja
mov
scas
xchg
outsb
or
xor
rcrb
addb
push
mov
or
lcall
mov
cs
out
or
pop
mov
outsl
or
jb
movsl
movsl
mov
sub
adc
ret
das
les
xchg
out
mov
fwait
sbb
out
clc
test
fs
push
mov
movsl
jg
pop
insb
fdivrl
aam
xor
arpl
loop
outsl
icebp
rcrb
mov
pop
pop
adc
mov
call
sbb
or
sub
inc
or
repnz
sbbl
xor
imul
cmpsb
outsl
das
mov
into
in
and
cmpsl
pop
fst
jo
call
stos
add
xor
mov
mov
stos
fidivrl
mov
and
add
loop
sub
pusha
fcomi
int
cmp
cmpl
mov
sbb
loop
xorb
mov
mov
mov
adc
hlt
mov
lret
or
add
pop
mov
adc
jo
adc
sti
cmp
mov
lock
and
dec
dec
add
negl
movb
int
std
jg
mov
out
divb
dec
call
rcrl
in
and
push
jecxz
or
pop
mov
jle
sbb
jle
pop
push
mov
xor
mov
cli
pusha
sbb
add
fcmovbe
out
xchg
mov
cmp
push
pop
jne
daa
jns
dec
dec
pop
enter
cmpsb
loopne
dec
pushf
sub
pushf
adc
or
or
das
lret
sub
mov
loope
push
xor
les
push
pop
jbe
mov
jmp
and
int3
pushf
pushf
jno
xor
pop
in
xchg
mov
test
xchg
mov
pop
jb
in
or
test
mov
andb
adc
cmp
lcall
lahf
push
lahf
push
aam
mov
push
lcall
movsl
notb
testl
sbb
jl
add
cmp
jp
mov
cs
ss
idiv
dec
mov
add
arpl
and
inc
pop
inc
mov
lret
js
pop
mov
add
add
pop
lea
xor
call
pop
and
sub
cmpsb
adc
mov
test
fs
and
je
pop
repnz
mov
mov
jae
inc
bound
ss
imul
insl
xchg
outsb
fwait
inc
adc
sar
mov
or
fst
xchg
xchg
sub
popf
popa
sti
jmp
mov
insl
jns
mov
inc
xlat
cld
push
mov
xchg
scas
sub
or
fwait
xor
sbb
inc
data16
jecxz
xlat
xchg
xor
xor
imul
psubw
xchg
pushl
xor
jb
repnz
mov
push
sub
adc
pop
loope
jnp
jne
xor
sbb
pop
push
aaa
cmp
incl
aas
xor
into
out
ds
scas
mov
addr16
lcall
test
inc
and
jnp
shll
pusha
fldenv
mov
lcall
fwait
setge
rorb
cli
mov
bound
jo
leave
and
je
push
das
lock
cmpb
fldenv
enter
jns
dec
aaa
movsb
shrl
fsubl
adc
push
or
xchg
dec
xor
mov
push
push
mov
mov
push
xlat
xchg
xchg
int
test
dec
adc
mov
sub
dec
movsb
test
inc
insl
jne
jmp
bnd
inc
ret
inc
cwtl
mov
decl
movsb
lods
sbb
sbb
and
cwtl
sahf
xchg
mov
in
mov
call
lods
mov
pop
mov
jecxz
cmp
dec
pop
mov
inc
lcall
in
stos
aad
pushl
aad
pop
cli
test
pop
mov
test
test
push
xor
pop
incl
fdivs
jg
mov
cmp
jmp
sbb
pop
clc
lea
mov
stos
pop
incl
cld
and
sub
cld
pop
int
push
adc
jg
test
hlt
inc
sub
js
shl
xor
add
pop
sbb
fs
rcll
add
pop
or
idivl
cmp
jge
sbb
inc
or
mov
hlt
xchg
mov
shlb
jmp
sti
ficomps
data16
ljmp
test
cmp
inc
loop
dec
rep
xchg
push
aaa
mov
cmp
pop
push
xchg
sub
fistpl
decl
add
and
imul
je
aam
in
push
lret
jb
jne
cmp
arpl
loopne
ss
pop
mov
jnp
add
sbb
imul
iret
scas
dec
arpl
mov
xorl
ret
out
fwait
inc
or
and
inc
mov
jno
jge
addr16
ljmp
outsl
pop
xchg
mov
xor
divl
mov
into
arpl
popa
daa
fistl
pop
in
dec
faddp
pop
pop
loopne
loope
push
mov
outsl
mov
push
dec
shlb
dec
test
jno
or
mov
mov
inc
inc
es
and
jno
mov
test
das
sub
popa
test
sub
mov
mov
adc
cs
in
loop
jmp
cli
push
or
outsl
push
jle
xchg
adc
insl
push
mov
mov
ss
mov
xchg
push
incb
or
rol
jnp
cld
mov
stos
cmp
imul
xchg
cmpsb
outsl
pop
test
push
std
lcall
push
xor
enter
mov
pop
js
jo
xchg
mov
cmp
mov
sar
dec
xchg
je
test
into
mov
ljmp
call
test
push
mov
or
rolb
pop
icebp
inc
jmp
sub
bound
decl
lret
stc
adc
loopne,pt
mov
push
fidivrl
dec
popa
add
push
pushf
and
gs
jp
add
repz
jmp
daa
mov
push
fcomp
push
sbb
xchg
adcb
rcr
popl
nopl
jo
add
int3
dec
aam
int3
pop
and
lods
dec
int3
inc
jg
insl
inc
sub
mov
jnp
jne
rcr
imul
incl
in
popa
outsb
or
push
popf
lods
cltd
imul
js
fbstp
dec
incl
pop
bound
inc
sub
pop
ret
mov
cmp
xor
test
ljmp
enter
adc
scas
inc
jge
push
sub
sarb
cmp
incl
sbb
mov
fdivs
dec
push
es
popa
cmp
lcall
incl
mov
jae
repz
outsb
push
pop
int3
lahf
cs
cld
fwait
outsl
std
incl
fs
xor
sahf
xor
jmp
ljmp
ljmp
aaa
testl
hlt
jno
pop
outsl
das
enter
mov
push
std
or
sub
cs
sbb
or
repnz
sar
lcall
push
add
mov
mov
lcall
popa
mul
mov
shrb
inc
xchg
sub
daa
push
faddp
xchg
daa
adc
test
popl
mov
ljmp
mov
sbb
mov
mov
mov
popa
adc
decl
sarl
iret
mov
in
test
hlt
aam
in
je
std
aas
ret
outsb
pop
dec
insl
outsl
fists
repz
mov
push
insb
fsts
mov
clc
lcall
dec
daa
aad
add
push
sar
mov
or
dec
mov
int
jmp
mov
push
lds
pushl
inc
pop
xor
mov
push
shll
ss
or
xchg
jae
xchg
aas
xchg
aas
or
xor
fs
enter
cmp
into
imul
sbb
mov
pushl
clc
nop
fcoms
and
loopne
mov
sub
inc
mov
sti
in
scas
xor
jp
xchg
loopne
repnz
push
aas
jo
xor
mov
add
outsb
call
jno,pt
dec
or
cs
xor
or
int
or
lods
and
test
lock
das
std
lcall
sub
jae,pn
mov
cmp
decl
pop
call
sbb
mov
fdivrl
jo
sbb
push
dec
add
lds
in
mov
ds
sar
xchg
insb
or
cmp
fadd
add
arpl
repz
mov
std
fdivs
outsb
sub
cmp
add
addl
or
sbb
jge
shrb
js
mov
jle
mov
data16
mov
ljmp
xor
sub
push
outsb
fildll
out
jg
cltd
mov
decl
lcall
xchg
pop
call
out
fildl
push
push
jecxz
decl
pop
cmp
mov
xchg
shlb
popf
rcrl
std
mov
inc
test
sbb
outsb
or
mov
cmp
addb
lret
dec
sbb
lcall
aam
push
adc
insb
cwtl
rol
add
hlt
hlt
lahf
sub
sarl
inc
ljmp
jmp
fcomi
out
loopne
mov
jne
jg
mov
adc
xchg
fwait
imul
call
jae
in
jne
test
aam
andb
lock
inc
lock
mov
faddl
mov
fldt
int3
shr
test
jp
incl
imul
jecxz
popa
lods
mov
pop
testb
jg
and
dec
fimuls
cli
shrd
cld
call
mov
es
ja
das
sbb
test
dec
jo
orl
ss
lcall
xor
lock
negb
arpl
mov
sbb
jbe
int3
push
jmp
loop
jg
pusha
push
mov
lret
cmp
insb
cmp
ljmp
mov
push
scas
mov
and
dec
xchg
dec
inc
rclb
cmp
push
ljmp
push
cmpsl
movsl
mov
ja
sar
mov
mov
lcall
cmp
mull
mov
pop
nop
pop
leave
jmp
sbb
aas
adc
lcall
push
mov
push
ljmp
or
test
xor
fsubl
or
jg
and
cli
mov
lret
in
adc
jmp
stos
filds
popf
mov
or
cmc
jb
dec
sbb
mov
push
add
push
adc
fbld
sub
jmp
push
dec
int
dec
sbb
mov
cmp
iret
or
in
hlt
imul
and
gs
ljmp
lock
add
jae
cmp
sar
inc
inc
fcoml
mov
and
arpl
mov
inc
in
repz
jg
fildl
sub
std
shll
dec
pop
movsl
jmp
add
cmp
mov
mov
mov
mov
mov
push
ja
daa
scas
or
je
js
mov
popa
dec
cmp
jg
xchg
in
call
int3
inc
insb
int
xchg
mov
mov
sub
out
insb
in
dec
iret
sub
mov
clc
pop
pop
xchg
and
lods
cs
and
hlt
xor
sbb
fs
cmpsl
mov
push
push
sub
push
inc
fwait
repnz
push
xchg
mov
or
decl
mov
rclb
out
add
ja
lods
test
repnz
push
les
sar
lcall
je,pt
cmp
sub
das
xchg
mov
mov
jmp
pop
adc
sbb
jne
jp
into
loopne
rclb
cwtl
and
mov
add
xchg
decl
xlat
push
mov
mov
sbbl
ljmp
ljmp
sbb
loop
mov
lret
push
pop
mov
outsl
icebp
sbb
jecxz
xchg
pop
push
ja
xor
or
inc
mov
mov
das
outsl
in
and
pushl
clc
in
mov
mov
sub
add
push
mov
dec
aad
adc
push
jg
incl
sub
push
ret
add
and
fimuls
repz
adcl
cmp
dec
jno
or
push
push
jb
cmpsl
movsb
inc
addr16
xor
mov
fnstcw
mov
lods
mov
adc
stos
adc
addb
test
clc
ljmp
nop
mov
adc
jmp
pop
fs
mov
loop
mov
cmp
je
pop
mov
shrl
call
pushf
pop
adcl
out
mov
push
lret
and
movsb
mov
ljmp
fists
or
xor
jne
fldenv
inc
sbb
jg
outsl
sarl
aad
arpl
pop
das
outsb
aaa
mov
or
mov
cmp
mov
sub
pushl
negb
scas
in
or
sbb
pop
stc
outsl
les
sub
add
stos
enter
xor
ljmp
out
add
aas
xor
jmp
imul
fsubp
fdivl
lock
aad
or
into
fnstcw
xlat
adc
xor
mov
push
adc
popf
daa
mov
or
addr16
loope
jecxz
loopne
incl
shlb
pop
jbe
cmpsl
mov
in
clc
lcall
fcomp
jo
cmpsl
out
adc
inc
xchg
rep
xlat
cltd
jp
pop
pop
and
or
mov
ret
xchg
sbb
repnz
dec
test
jbe
push
sbbl
xchg
data16
jmp
cwtl
test
in
push
jnp
mov
inc
cli
push
pop
pop
loop
out
cmp
call
mov
adc
jmp
pop
std
pushf
ret
xchg
aam
xchg
pop
sub
mov
pop
call
pop
or
leave
pop
mov
push
rorl
jle
decl
outsl
test
mov
les
sub
pop
dec
mov
outsl
and
ljmp
inc
pop
ljmp
add
roll
lret
pop
adc
inc
idiv
pushl
dec
sti
push
jg
jecxz
or
aas
jle
inc
pop
add
popf
nopl
or
stos
sbb
adc
pushf
test
imul
clc
cwtl
lcall
fldenv
aaa
lods
addr16
dec
jae
mov
loopne
mov
cmp
decl
cmp
aam
sbbb
xor
fstl
data16
xor
lcall
xchg
sarl
push
push
add
stc
sub
adc
xor
sub
cli
cmc
jmp
js
or
cmp
or
gs
or
aam
dec
sbb
lods
jg
cmp
int3
mov
xlat
call
adc
addr16
pop
ljmp
push
arpl
sbb
xchg
mov
or
jnp
mov
push
xorb
xor
push
pusha
adc
cmp
mov
sahf
movsl
mov
xor
jg
ljmp
pop
call
scas
jl
and
sub
adc
mov
lock
imul
dec
rcl
test
adc
jmp
and
insb
jg
lea
mov
pushl
in
inc
dec
test
adc
dec
loope
in
inc
pushf
mov
call
mov
xor
xchg
shr
push
mov
mov
add
ret
fs
pusha
jmp
jae
in
scas
sti
decl
or
jecxz
int
int
in
adc
adc
xchg
mov
or
inc
pop
enter
cs
jg
stc
out
xchg
or
dec
int3
cmpsl
fdivr
cmc
out
cmc
and
adc
ret
xchg
xor
lock
jmp
stos
xchg
add
dec
mov
or
call
jmp
mov
xor
lods
xor
pop
xlat
xor
or
movsl
lea
cmpsb
xor
mov
pushl
lock
cmp
add
rcl
push
adc
data16
cmpsl
mov
out
add
and
sub
cmp
cmp
insb
sub
push
cli
inc
mov
ljmp
cmc
pushl
sub
cs
pop
in
xchg
xor
push
ljmp
pop
popf
lds
mov
lock
jns
and
mov
out
mov
pop
je
sbb
call
test
stos
adc
shlb
call
sbb
sub
xchg
rcrb
test
lcall
std
jne
shl
cs
fcmovnbe
mov
cmpsl
ret
scas
inc
ljmp
ret
xor
ret
pop
in
das
aad
jp
pop
or
mov
sub
incl
push
cld
jecxz
loop
sbb
and
gs
pop
lock
mov
push
xchg
jns
xor
pop
jg
add
adcb
in
push
fwait
pop
fnstenv
loopne
jne
push
mov
fsts
jmp
pop
loopne
andl
int3
in
flds
xor
or
xor
sar
sub
mov
popf
lods
mov
mov
dec
push
inc
mov
cli
push
jnp
sbb
xor
sub
jnp
mov
jmp
mov
xor
stos
incl
cli
pushl
repnz
or
fs
fdivp
dec
push
mov
fucomi
push
push
outsl
cmc
pop
cli
push
push
cltd
ficoml
cmpsl
mov
hlt
shlb
sub
lcall
fstps
mov
push
sbb
inc
push
jmp
ss
scas
push
xlat
nop
lahf
xchg
out
fdivrl
or
call
push
cs
cmpsl
repnz
adc
dec
test
call
adc
mov
inc
xchg
cmp
daa
fadds
jl
mov
lea
mov
pop
ja
mov
sub
add
aad
jg
aaa
pushf
lods
fs
std
pop
cli
mov
repnz
cltd
pop
xor
incl
or
dec
pop
lds
and
sbb
cmp
adc
ss
sbb
decl
add
leave
jecxz
or
sbb
fwait
mov
dec
adc
lods
fnstsw
out
shl
test
fidivrs
fcoml
dec
jg
jmp
das
cmp
mov
orl
repz
outsl
std
dec
pushl
xor
gs
test
stos
pop
cs
add
mov
das
cld
ljmp
dec
scas
or
mov
mulb
mov
stos
xchg
xlat
adcb
lea
sub
mov
add
add
in
dec
inc
push
sub
call
fidivrs
xchg
sub
movsb
inc
out
xchg
mov
sbb
jnp
dec
cli
fwait
popa
lret
incl
sub
mov
lea
dec
fcomi
cmpl
rcrl
lods
pop
ret
cmpsb
andl
push
loopne
loopne
shrw
ljmp
test
adc
add
xchg
outsl
sbb
sarb
or
push
jecxz
repnz
pop
ret
xchg
or
sub
decl
dec
bound
outsl
jno
mov
rolb
push
testb
popf
icebp
pop
xchg
dec
pop
lcall
pop
mov
sbb
insl
xchg
and
iret
scas
dec
int3
jg
cli
mov
les
push
jne
das
je
je
les
lcall
push
mov
daa
sarl
into
cmp
mov
cmp
movsl
imul
daa
inc
lcall
add
bswap
cmpsb
pop
mul
inc
sarl
add
mov
mov
sub
cmp
jmp
loop
cs
testb
or
xor
sub
decl
pop
shll
data16
cmp
or
and
mov
mov
fistpll
aaa
dec
push
push
jp
int
adc
aaa
adc
jecxz
mov
cld
xor
stos
shll
xchg
sub
arpl
pop
cmp
adc
mov
cli
cld
xchg
pop
gs
into
push
push
mov
hlt
pusha
jl
jne
xchg
sbb
push
push
fcmovnu
loopne
loopne
and
cmpsl
mov
sub
push
inc
pop
cwtl
in
mov
fs
push
inc
outsb
mov
lods
scas
inc
test
mov
ljmp
lea
mov
outsb
xchg
jb
scas
rolb
lock
xor
scas
jge
push
xor
push
xchg
into
fwait
mov
mov
rorl
sub
adc
aad
out
lods
ror
test
mov
inc
outsb
jae
movsl
roll
and
cli
arpl
fsubr
ret
sub
test
mov
sbb
and
arpl
fildll
iret
imul
jae
repnz
out
imul
push
or
mov
sbb
call
sub
adc
xor
dec
ficomps
lods
lcall
adc
inc
imul
xor
push
and
mov
stc
push
and
dec
push
xor
or
cmpsl
popf
add
cmc
inc
inc
jp
xor
insb
stc
pop
inc
or
repz
test
test
cmp
inc
pop
pushl
aad
mov
inc
scas
and
mov
push
in
mov
push
dec
das
lret
pop
push
loop
vunpcklps
jmp
ds
sbb
push
ljmp
popf
inc
dec
inc
imul
mov
sub
push
aad
or
and
jnp
scas
aam
clc
fisubrs
ds
fcomps
test
out
cmpsb
dec
cmpsl
mov
mov
xchg
mov
inc
mov
decl
std
inc
das
mov
sub
push
cmp
inc
mov
cmpsl
out
pop
call
aam
adc
sub
call
inc
pop
stos
insl
popf
push
xchg
stos
inc
xor
mov
cli
call
xchg
push
cmp
movsb
push
or
mov
aam
ficoml
inc
ja
pushf
aaa
icebp
inc
dec
dec
push
enter
xor
mov
cmp
push
popf
addl
inc
movsl
jg
ljmp
push
aad
enter
cwtl
xchg
int3
or
das
imul
xor
aad
loopne
in
jmp
es
push
popf
shrb
mov
cs
cmpsl
icebp
andl
pop
mov
add
aad
push
mov
mov
dec
fdivr
incl
mov
scas
dec
inc
sbb
cld
dec
sub
scas
dec
call
icebp
shlb
xchg
mov
mov
fs
inc
clc
mov
cmp
test
cwtl
mov
cli
icebp
dec
xor
cmp
test
cwtl
mov
adc
cltd
xchg
xchg
incl
test
xchg
data16
addr16
test
xchg
call
inc
pop
jl
rcll
jne
pushf
lret
dec
cld
pop
bound
pop
insb
pop
sbb
lret
fwait
sbb
push
sar
jle
gs
mov
mov
adcl
in
fs
dec
jg
mov
jmp
mov
add
into
mov
dec
int
out
sar
sub
jle
sahf
and
lcall
outsl
xchg
fcmovbe
and
dec
out
xchg
sub
sahf
rcrb
jmp
outsb
or
sti
dec
lcall
popf
pop
hlt
mov
push
mov
add
aad
imul
dec
add
lock
incl
inc
std
cmp
jle
mov
xacquire
jne
dec
mov
icebp
dec
jbe
imul
bound
decl
std
inc
sub
cltd
inc
add
xchg
push
xchg
es
mov
pop
in
mov
add
loop
jbe
subl
negb
dec
mov
inc
lods
inc
ljmp
icebp
das
push
pop
subl
pop
dec
mov
insl
lock
inc
lods
andl
jmp
call
pop
outsl
sbb
add
mov
fwait
cmpb
adc
std
pushl
sub
pop
leave
rcrl
cmpsl
add
sbb
hlt
mov
mov
loop
test
hlt
test
ja
push
daa
inc
add
or
push
jg
es
ljmp
push
adc
pushw
ret
lcall
call
bswap
push
sbb
mov
cmp
call
mov
mov
jecxz
pop
testb
in
test
xchg
jmp
mov
pop
lods
xor
out
incl
imul
movsb
pop
aaa
mov
lahf
aaa
aam
nop
sub
ret
push
push
adc
std
mov
inc
les
inc
dec
stos
imul
jl
add
into
lds
and
mov
clc
xor
in
imul
add
outsl
lock
jmp
ss
push
int3
pop
inc
addl
paddw
call
xlat
imul
mul
out
into
insl
mov
inc
pop
mov
and
xchg
leave
out
xor
or
and
lcall
lcall
dec
fwait
mov
lods
mov
outsl
subl
lds
xor
mov
push
mov
hlt
jmp
pop
sub
lods
cli
aaa
mov
xchg
cmpb
ja
xor
fists
lods
xchg
test
mov
lcall
mov
test
std
jae
scas
jmp
pop
adc
push
inc
test
ljmp
loopne
js
sub
mov
push
insb
mov
xor
dec
jg
jg
adc
dec
test
in
lods
addl
inc
adc
ret
fnstsw
and
push
push
cmpsl
cmp
popa
or
dec
sub
in
xchg
cmc
inc
stos
icebp
xchg
nop
mov
jbe
cmp
jbe
mov
test
pop
sbb
adc
aas
dec
lods
pop
lcall
add
stc
jnp
lret
and
movsl
or
cli
repnz
mov
repz
sub
loop
pop
leave
inc
sbb
dec
popf
xchg
dec
pop
jp
sbb
cmp
xor
rcrb
jmp
out
xchg
push
hlt
cld
in
dec
ja
inc
or
rorb
mov
std
jbe
lods
popf
xor
lods
sti
outsb
push
or
lcall
call
arpl
rorl
aam
stos
test
dec
mov
ret
outsl
std
mov
loop
mov
mov
dec
sbb
shll
mov
and
sub
notb
xchg
sbb
adc
xchg
aad
loopne
push
xchg
outsl
adc
mov
mov
outsl
std
test
fbld
lods
popf
mov
push
sub
jg
lods
clc
inc
or
negb
jns
nop
add
sarb
push
imul
sahf
cltd
pop
incl
rol
stc
xchg
ljmp
jb
call
in
movsb
cmp
imul
pushf
nop
in
sarl
imull
pop
inc
mov
cmp
xchg
or
and
rol
xchg
movsl
repz
sub
cmc
inc
ret
pop
jg
fimuls
and
aaa
xchg
or
push
cmp
decl
std
dec
push
shlb
ja
pop
ficoms
iret
sub
je
in
loopne
cmpsl
sub
std
pushl
test
sahf
nop
test
sbb
stos
dec
jae
loope
cmp
jbe
sbb
dec
mov
cwtl
pop
or
roll
in
ret
ds
cld
loope
xchg
stc
loop
repz
aas
jmp
inc
gs
dec
cwtl
pop
lock
mov
xor
mov
mov
mov
js
adc
das
dec
xchg
movsb
das
sbb
mov
aas
and
outsl
sub
incl
out
xor
inc
jle
dec
loopne
xor
cmp
lcall
hlt
cmp
or
insl
into
cmpsb
lea
xor
mov
aad
mov
pop
scas
push
xor
push
mov
push
mov
xor
call
pushl
inc
imul
jp
jmp
fiaddl
inc
insl
cmpb
lret
das
cld
add
insl
jmp
les
or
push
mov
lds
lcall
test
in
leave
aas
add
ljmp
call
pop
or
cmp
jb
lds
lcall
push
jl
adc
pop
jo
inc
push
nop
lahf
or
call
cli
mov
cs
sbb
add
mov
xchg
into
mov
call
xor
loop
sahf
xor
sub
arpl
mov
lods
aad
insl
lret
mov
incl
sahf
shl
mov
xor
dec
cs
call
sub
xchg
cli
jmp
out
dec
add
cli
cmp
jmp
cmp
scas
lcall
cld
jp
outsl
into
cmp
clts
xor
xor
outsl
addb
stc
adc
hlt
icebp
data16
xor
hlt
das
pop
test
sub
add
push
repnz
and
lcall
pop
mov
sahf
jnp
jl
push
adc
xor
roll
rolb
jmp
rorb
push
add
cs
out
addb
cmp
incl
in
stos
and
dec
push
pop
popa
mov
stos
outsl
int
push
jne
add
insl
stos
loope
lcall
movsb
sbb
mov
push
and
xor
outsl
jo
mov
xor
mov
fsts
lods
push
xchg
in
icebp
or
int
stos
mov
mov
push
mov
jg
cld
movsl
hlt
rcll
fs
push
mov
mov
jne
cmc
jg
gs
or
dec
xchg
inc
and
mov
scas
inc
pushl
arpl
jo
shlb
xchg
mov
dec
add
fstpt
pop
fisttpl
ljmp
cld
ret
mov
stos
and
cmpsb
inc
out
dec
shlb
dec
sbb
mov
jno
decl
push
sub
xor
or
push
jno
in
xorl
lcall
pop
mov
mov
lock
lahf
sbbb
add
decl
cld
push
inc
test
cmp
loop
or
aam
js
outsb
sahf
movsb
add
lods
lds
pop
cli
int3
adc
pop
inc
out
repz
jle
aas
loop
mov
outsl
icebp
adc
insl
jecxz
lock
daa
insl
dec
popf
or
nop
xlat
sbb
xchg
daa
push
add
push
cwtl
pop
ljmp
mov
jge
xor
cmp
std
cmp
lcall
test
stc
ss
arpl
cmp
ljmp
xchg
addr16
addb
sbb
mov
cs
xor
outsb
aas
or
das
je
call
jb
sbb
sti
mov
cld
cmpl
cmp
fdivr
add
jg
fs
xorb
dec
repz
xchg
inc
jnp
push
dec
int3
or
pushf
clc
xchg
ljmp
mov
mov
pop
lahf
cmpsl
pop
xchg
ja
js
xchg
pushl
mov
xchg
xchg
shlb
jae
cmp
in
mov
jge
outsl
push
sub
or
cmp
lahf
cmp
subb
in
movsl
xor
repnz
daa
les
and
lahf
rcll
pop
cli
xchg
push
ljmp
aad
shll
mov
clc
push
mov
lock
call
mov
jns,pn
and
fwait
ja,pt
and
mov
mov
inc
incl
mov
xor
lcall
outsl
mov
cmp
sar
cmp
sbb
incl
int3
clc
sti
mov
sarb
repnz
aas
or
mov
mov
clc
mov
out
cmp
mov
adc
dec
testl
pushl
sub
dec
mov
int3
inc
pop
out
lahf
mov
ja
pop
daa
decl
push
fsubrl
outsb
and
xchg
dec
es
pop
data16
fnstsw
mov
pcmpeqd
mov
inc
xchg
cmp
jo
mov
idiv
fbstp
shlb
dec
ret
mov
cwtl
lcall
add
fildll
add
insb
inc
push
push
nop
push
dec
cmp
jecxz
jmp
or
xchg
lcall
aad
mov
inc
add
lea
call
test
push
and
shll
insb
dec
jge
sbbl
ret
add
cmpsl
and
jmp
cmp
xor
mov
jp
sti
ja
jg
push
aam
cld
mov
inc
dec
mov
or
add
out
test
push
mov
icebp
pop
push
dec
ljmp
inc
inc
mov
in
int
mov
jmp
inc
mov
loope
ss
out
pop
cmc
pushl
std
mov
orb
xlat
repnz
sbbb
das
inc
iret
test
fsts
ret
push
test
mov
mov
fnstsw
dec
lea
addr16
incl
ret
test
lcall
xor
xchg
adc
mov
mov
add
xchg
movsb
jnp
mov
call
push
fldl
xchg
inc
sub
cmp
and
stos
pop
clc
sbb
push
subl
jg
lea
cmpsb
or
mov
jge
clc
pop
sub
nop
push
repz
aaa
ljmp
mov
jl
dec
xor
inc
inc
popf
std
shl
out
dec
pop
jno
adc
jmp
push
or
jl
inc
std
and
test
pop
sub
sahf
pushl
and
cmovp
daa
movsb
pop
jns
push
mov
or
add
xor
lret
mov
cmpsl
in
in
pop
std
mov
shrl
cmp
jne
test
sub
mov
sbb
cmpsl
adcl
or
mov
movsb
jecxz
lea
test
call
mov
jae
xchg
jne
sbb
add
pop
mov
inc
sahf
mov
fimuls
loop
orl
popf
pushf
fcomi
add
push
adc
cmc
pop
dec
cmp
cs
jg
clc
inc
test
shl
aam
jmp
sbb
jg
loope
jo
and
incl
std
out
push
pop
aam
xchg
push
lods
push
ds
jb
lret
int3
in
roll
std
cld
ret
xchg
jg
call
add
lds
xchg
aaa
mov
mov
dec
enter
gs
outsl
std
les
movzbl
imul
add
mov
jle
inc
cmp
and
sub
dec
mov
out
adc
out
mov
in
mov
pushl
sbb
repnz
fnstenv
ds
or
cwtl
imul
outsl
inc
sbb
and
cwtl
mov
push
fidivl
mov
dec
mov
mov
jg
lods
push
fcmovne
shll
lea
std
incl
cmpsb
adc
idivb
stc
mov
push
push
sub
mov
daa
jecxz
adc
outsl
push
out
xor
into
pop
ljmp
hlt
jno
mov
mov
mov
pop
shrl
cmp
mov
scas
not
pop
cs
stos
stc
stos
sub
arpl
aaa
or
jmp
xchg
pop
out
add
add
les
clc
loop
add
adc
mov
shll
xchg
lock
sbb
mov
pop
dec
arpl
cwtl
mov
cmovns
push
outsl
push
jae
loopne
jge
insl
adc
ret
icebp
lcall
adc
fsubrs
cli
shl
add
mov
jbe
popa
mov
incl
xor
push
negl
xchg
add
xor
mov
mov
sti
add
jns
cwtl
adc
pop
es
popa
mov
xchg
dec
or
and
fstpl
mov
js
mov
mov
ss
clc
mov
test
mov
inc
loopne
call
sub
mov
push
mov
dec
fnstenv
fidivl
inc
jbe
sbb
fistpll
cmp
js
inc
fisttpll
aaa
pusha
push
movsl
sbb
mov
fsubp
pop
pop
lcall
xor
data16
ds
sub
pusha
movsl
sahf
ret
stc
dec
hlt
pop
pop
inc
and
add
cld
incl
scas
sub
pop
cltd
push
and
push
push
push
call
pop
loopne
aas
inc
mov
xor
jecxz
test
cli
call
mov
ret
int3
add
mov
outsl
lock
pop
mov
enter
ret
daa
in
in
xor
rolb
pushl
sbbl
xor
outsl
inc
std
mov
shrl
sahf
les
aas
and
sub
stc
out
mov
repz
sbb
das
icebp
mov
cmc
and
or
jbe
mov
pushl
xchg
cmpsb
outsb
divl
inc
ret
push
sbb
add
dec
in
insb
mov
ljmp
ficomps
int3
iret
scas
clc
mov
clc
pop
cmp
ljmp
test
cmp
fnstenv
mov
std
std
ljmp
sbbb
adc
sub
pop
inc
xchg
aas
xchg
mov
sbb
gs
outsl
imul
pushf
out
sub
push
or
ret
icebp
incl
and
repnz
jne
xor
gs
incl
cmp
xor
mov
inc
shrb
fwait
mov
clc
mov
xchg
fisttpl
mov
call
or
fcomps
popa
sbbb
shrb
xchg
addr16
pop
dec
cmp
lcall
and
ss
shlb
shrl
leave
xchg
aad
xchg
in
jg
std
incl
dec
hlt
repnz
cmp
mov
sbbb
mov
lea
sub
pop
cmc
mov
and
lcall
sub
or
adc
xor
push
jge
dec
fs
pushl
sub
mov
dec
imul
rorb
cmpsb
call
jecxz
incl
xchg
pop
push
enter
jo
ss
aam
jae
ret
rcrl
or
xchg
jo
add
jae
xor
cltd
mov
sbb
mov
and
jns
leave
lods
sarl
jmp
dec
mov
out
mov
jmp
mov
mov
mov
mov
rol
or
imul
mov
sahf
jb
cwtl
mov
popa
push
ds
jno
pop
sbb
pop
dec
adc
in
cmp
cmp
sbb
arpl
push
jle
pop
cmp
scas
bound
fsub
jmp
clc
int3
pop
cmp
pop
arpl
imul
incl
and
int
lock
mov
mov
dec
adc
mov
jae
es
imul
mov
sub
lds
arpl
in
pushl
iret
mov
jae
aas
cltd
sbb
pop
std
xchg
xchg
ret
sub
es
cmp
clc
mov
call
clc
dec
test
mov
popf
sbb
sbb
and
adc
fcmovb
fbstp
mov
push
cld
xlat
leave
fsubrp
mov
iret
cli
in
cmp
jle
fucomip
pop
popa
cmc
jl
add
dec
push
jg
xor
jge
int3
insl
push
xchg
add
std
stos
ret
in
sub
pop
out
add
inc
sbb
xor
sahf
xchg
xor
cltd
daa
dec
fsubl
sar
sub
ljmp
icebp
mov
jl
ret
lret
mov
and
push
sbb
or
out
das
pop
inc
xor
dec
cli
cli
push
mov
mov
dec
mov
test
pop
cmp
push
mov
gs
jg
mov
push
jno
pop
push
mov
lcall
daa
out
xor
sti
or
jmp
push
jp
mov
push
push
adc
daa
push
outsb
xchg
leave
sbb
jbe
lea
lods
xchg
jle
imul
mov
movsl
xchg
jae
call
cmpsb
inc
iret
sbb
pop
mov
ret
push
xor
mov
mov
mov
lods
or
jg
das
out
loopne
jmp
lret
mov
insl
fbld
inc
fidivl
dec
mov
cmp
jg
data16
mov
jno
mov
arpl
int
lret
nop
inc
inc
mov
std
jmp
cmp
push
pop
jmp
sub
adc
frstor
and
pop
pushl
push
enter
jb
inc
std
movsb
pop
inc
out
pushf
in
rcr
in
mov
sarl
fucomip
out
cmc
push
dec
out
push
neg
imulb
cmpsl
xor
aas
and
decl
out
and
mov
rcrb
insl
sti
lea
jg
sub
push
mov
into
mov
lahf
jo
lea
leave
xor
push
push
jp
inc
jl
and
push
js
repz
nop
sub
mov
push
cmpl
insl
loopne
mov
loope
aam
xor
mov
jg
cmp
iret
loope
ret
dec
repz
pushf
insb
push
jne
fbld
xchg
sahf
xchg
nop
adc
inc
jg
outsb
sbb
incl
imul
imul
xchg
xchg
dec
in
cwtl
mov
mov
cmc
orl
mov
jl
mov
decl
jns
notb
mov
vzeroupper
push
inc
push
jg
je
fistpl
popa
jle
sub
mov
add
xor
sbb
cmc
decl
add
push
bswap
test
inc
mov
ljmp
pushf
cs
scas
mov
lret
test
push
sbb
sub
stc
mov
lods
cmp
add
rcl
and
cltd
push
push
lcall
cld
mov
lds
decl
add
xor
adc
mov
daa
stc
lods
cli
cltd
js
lock
jnp
mov
xor
das
mov
add
cmp
dec
dec
pop
rol
in
fmull
or
pop
xor
pop
into
xlat
rcl
push
repz
incl
movsl
dec
dec
inc
mov
push
sti
stos
cmpsb
cmp
hlt
mov
movsl
add
hlt
adc
decl
lea
test
jmp
xor
push
out
lock
repz
pop
adc
daa
decl
mov
fisubs
sbb
sbb
xchg
cld
adcb
dec
jne
pushl
add
mov
call
push
leave
orb
data16
fs
adc
jl
xchg
ljmp
xchg
xor
in
ljmp
arpl
cwtl
cltd
fs
adc
adc
leave
leave
lock
int
mov
sar
fwait
clc
dec
pusha
jge
sub
stos
mov
sub
mov
das
cld
lcall
ds
xchg
out
lahf
test
std
mov
call
call
ret
fnop
pusha
mov
fistpll
scas
or
inc
lods
mov
incl
adc
stc
lock
lock
push
xchg
sbb
aad
leave
movsb
test
enter
dec
adc
push
bound
inc
aad
add
aad
cmp
adc
xchg
sar
incl
fildll
scas
imul
xlat
call
mov
stos
xchg
pop
imul
decl
jmp
iret
push
push
cld
loope
leave
sahf
push
sub
cmp
aad
xchg
xor
mov
push
pop
loopne
stos
mov
hlt
incl
mov
xchg
push
lcall
jg
jmp
int3
aad
packsswb
mov
inc
pop
mov
adc
or
ljmp
mov
cmpsb
sbb
ja
jnp
or
daa
jne
pop
inc
ret
push
inc
movsl
fnstsw
decl
inc
pop
adc
fldl2e
sbb
pop
loopne
pushw
mov
add
xorb
ljmp
hlt
adc
enter
add
sete
xor
or
add
outsl
std
fcoml
mov
lods
sub
xor
insb
cmp
dec
mov
cmpsb
mov
lcall
cwtl
mov
scas
mov
negb
xor
insb
pop
mov
mov
mov
mov
ljmp
outsb
ror
aas
sbb
scas
sub
cmp
xchg
cmp
adc
hlt
dec
std
lcall
add
shrb
adc
aas
pop
lcall
enter
incl
lock
repnz
mov
push
mov
mov
jp
icebp
loope
jmp
cmp
sarl
jmp
mov
sbb
insb
add
loopne
iret
cmc
test
dec
mov
or
xchg
fyl2x
xchg
scas
lock
and
pop
in
sub
adc
jg
cmp
frstor
call
cld
lea
stc
push
std
dec
scas
dec
pop
mov
push
push
inc
pushl
cld
xor
push
jmp
and
xor
decl
cltd
outsl
pop
stos
cltd
ja
xor
inc
loop
out
jg
push
push
jbe
push
jg
cmp
or
pop
jns
and
push
loope
incl
insb
push
pop
push
push
jnp
push
pop
cmp
inc
mov
popa
dec
cmp
jmp
es
push
xor
sti
jmp
test
inc
mov
push
pop
mov
ljmp
push
scas
in
cli
movsl
mov
dec
jns
pop
insb
xor
enter
lcall
or
push
dec
ret
pop
mov
lret
cmp
mov
lds
call
adc
sarl
mov
shll
lcall
das
add
dec
icebp
in
pop
loop
stc
cmp
cmp
fmuls
into
decl
xchg
xlat
test
test
push
mov
mov
test
popf
push
xor
ljmp
jp
fisubl
add
mov
js
fcmovnb
je
push
inc
faddl
ljmp
std
les
xlat
fisubs
and
ljmp
or
ljmp
std
cmp
inc
xchg
mov
sbb
stos
and
iret
pusha
les
lcall
dec
insb
pushf
daa
andl
or
scas
out
gs
cli
mov
mov
shlb
in
mov
push
call
inc
fs
push
lods
int3
dec
flds
outsb
jecxz
xchg
cmp
jns
stos
push
fimuls
and
or
jb
pop
subl
push
jnp
imul
scas
bound
inc
incl
addr16
outsb
pop
test
push
xchg
outsl
push
dec
icebp
or
jmp
cmpsb
cmp
fwait
cli
inc
int3
lret
jo
fs
mov
push
das
jns
push
mov
xchg
and
sahf
mov
lcall
popf
and
and
add
incl
pop
rclb
cltd
and
cld
cld
adc
xor
loopne
les
cmp
jle
test
int
or
or
or
stos
pop
je
inc
adc
lcall
mov
push
inc
cld
repz
pop
mov
incl
add
mov
cwtl
cmc
pushf
cmpps
shrb
jno
xor
int
shr
dec
lret
sub
call
inc
dec
mov
adc
sbb
inc
jmp
jae
dec
aam
inc
mov
cmp
pop
cld
mov
dec
add
stos
mov
ret
mov
daa
or
inc
movsl
shrl
xchg
incl
mov
xor
repz
xchg
add
fcoml
jb
lea
icebp
decl
inc
mov
mov
dec
fs
jge
rcl
divb
mov
outsb
int3
loope
shrb
movsl
fmuls
flds
inc
std
mov
js
xchg
imul
lret
inc
dec
add
outsl
dec
dec
pop
test
ljmp
ja
in
test
pop
xchg
xor
pop
ljmp
ljmp
push
adc
mov
pop
test
int
xor
xor
incl
stc
xor
mov
mov
xor
mov
pop
stos
jno
inc
push
fnsave
and
push
sbb
ljmp
lock
fcmovnb
cltd
or
mov
cmp
in
scas
clc
incl
pop
dec
std
call
dec
jnp
cmp
push
or
mov
lcall
arpl
aam
sbb
lds
xor
jo
mov
loop
imul
leave
mov
incl
mov
xchg
xor
decl
cwtl
mov
mov
es
jbe
jmp
shll
cli
jg
ljmp
cmpsl
cmp
je
cltd
cmp
fists
sub
std
or
imul
stos
cld
fstps
loop
xchg
clc
addr16
js
movsl
xchg
insb
xor
sbb
fcomip
mov
cmpl
mov
sahf
stos
cli
pop
pop
jne
aad
cmc
and
pushl
loop
out
imul
push
jg
mull
mov
outsb
pop
stos
and
or
dec
cmpsl
sbb
xchg
lcall
mov
mov
decl
dec
xor
and
pop
push
mov
popf
xchg
jae
cmp
dec
hlt
dec
test
xlat
lcall
cmp
sahf
jmp
or
lret
inc
adc
jmp
shlb
mov
leave
je
jnp
push
lds
push
jg
imul
int3
int
cmpsb
push
shrl
pop
jmp
push
dec
pusha
adc
mov
in
in
std
xchg
jge
inc
into
cmp
out
std
in
in
testb
lret
aad
jle
js
mov
rcrl
shlb
fdivr
aam
pop
jg
decl
inc
ret
sbb
fxch
shlb
fsubl
mov
clc
ljmp
sub
cmp
xchg
cmc
mov
pop
int3
dec
test
cmp
jns
decl
mov
push
ss
stos
outsl
aam
add
xorl
pop
jb
aas
pop
xchg
xor
mov
or
jle
aas
inc
sub
pop
imul
or
in
movsl
decb
dec
cmp
add
inc
movsb
gs
cmp
std
pcmpgtw
xchg
andl
es
mov
jno
sub
lcall
cmp
adc
jns
or
testl
sbbl
jnp
xchg
test
mov
push
rcll
in
call
or
mov
test
add
and
test
lcall
std
fs
mov
mov
dec
fsubrs
add
jl
outsl
cld
incl
lret
mov
in
sbb
inc
out
roll
in
xor
filds
sarb
lret
rclb
jae
mov
ja
fldln2
int
mov
inc
adcb
xchg
shl
loope
imul
cmpsb
sub
fs
pop
outsb
pop
jp
in
incl
das
sub
mov
fldcw
outsb
dec
jno
mov
add
outsl
mov
gs
sub
pop
add
test
xor
ljmp
xor
mov
movsl
mov
cs
adc
sti
hlt
and
mov
lcall
cmp
cmpsl
pop
aaa
daa
sbb
adc
mov
jae
push
pop
jo
mov
std
dec
test
call
clc
and
pop
sbb
inc
mov
fwait
jne
xchg
mov
cmp
sar
lock
and
add
fs
sti
test
leave
je
imul
sti
test
clc
adc
dec
mov
xor
cmpsl
test
mov
je
jmp
je
and
push
roll
mov
pop
push
pop
test
aaa
add
jmp
inc
in
dec
mov
mov
add
dec
lods
pop
inc
jl
lcall
xchg
or
add
outsl
mov
ret
lahf
mov
mov
lea
xlat
sub
call
inc
std
pop
xchg
and
add
jecxz
lcall
incl
mov
pushf
jno
cmp
xchg
clc
rcll
inc
inc
or
pop
sti
aaa
add
add
test
jg
je
decl
inc
xor
pcmpeqd
add
or
add
std
scas
inc
cmpsb
pop
inc
stc
out
push
out
mov
iret
and
jp
push
lahf
mov
xor
rorl
in
jb
movsl
shlb
mov
lds
jg
ds
movsb
fdivrs
aam
mov
adc
pop
dec
pop
popf
inc
adc
inc
mov
mov
fisubl
mov
mov
ss
fisttpl
jmp
lret
dec
xchg
dec
push
ljmp
xchg
sbb
add
pop
cli
adc
hlt
in
sub
inc
adc
sti
jp
inc
jle
cs
mov
es
cli
testb
test
add
decl
jl
clc
cmc
mov
call
into
or
jmp
hlt
xchg
mov
lods
mov
adc
icebp
dec
out
jns
mov
adc
xor
es
ljmp
pop
xlat
sub
cmp
sub
and
cmp
dec
mov
stos
jo
cmp
ror
xchg
in
insb
hlt
pushl
les
mov
cs
mov
lds
fisttpl
mov
sub
add
imul
call
dec
sbb
xor
mov
adc
incl
clc
call
inc
mov
inc
adc
out
and
or
test
mov
inc
inc
mov
stos
xor
push
in
clc
movsl
lret
pusha
push
mov
adc
dec
or
lods
add
mov
add
sbb
or
and
sub
add
sub
fadds
jle
ret
cmp
iret
js
push
adc
mov
pushf
comiss
ret
ja
outsl
cmp
cmpb
fisubrs
mov
lock
adc
jmp
mov
out
dec
leave
push
outsl
popa
das
and
mov
out
add
pop
mov
mov
in
mov
sti
dec
cmc
mov
les
mov
cmp
loopne
rcrb
dec
inc
adc
cmp
ljmp
inc
cli
loopne
jl
ljmp
cmp
imul
repnz
inc
and
xor
add
and
add
mov
inc
pop
fisttpll
rol
pop
rclb
arpl
fidivl
and
adc
push
sbb
insl
insb
mov
mov
outsl
test
sahf
out
and
and
ficoms
faddl
sbbl
hlt
cmp
lcall
or
and
cmp
inc
rcll
mov
gs
stos
test
loope
int3
mov
add
and
jo
fcomip
outsl
in
cwtl
nop
mov
push
xor
inc
push
push
mov
or
jo
mov
movsb
js
jg
push
lahf
pop
jp
add
call
push
pop
add
and
ja
inc
sbb
mov
sub
fcoms
stos
jl
cmp
or
cld
lds
pushf
nop
inc
mov
xchg
jl
cltd
mov
mov
dec
mov
xor
add
in
enter
or
pxor
andl
inc
data16
test
stos
inc
push
js
sbb
inc
mov
xchg
add
push
jns
fcmovne
cltd
or
or
or
andl
add
fcomip
mov
test
aad
aas
fimull
in
mov
push
mov
xor
push
icebp
addl
add
inc
or
mov
xchg
jae
pop
sbb
cmp
mov
mov
add
mov
loop
push
dec
mov
call
xor
bswap
addb
push
addb
or
cs
xor
mov
dec
or
test
mov
pop
stos
xchg
lea
xchg
pop
inc
dec
inc
sarl
test
loope
shl
inc
push
push
in
jmp
mov
mov
cmpsb
dec
cmpsb
frstor
dec
xor
fisttps
mov
js
and
jp
fs
fistl
inc
mov
ucomiss
in
jns
dec
cmpl
loope
scas
je
ret
out
add
test
jl
mov
jae
mov
and
pop
push
sub
push
inc
pop
sarb
cmc
test
or
in
inc
push
cmp
and
aad
push
lods
mov
mov
mov
je
inc
decl
lods
xchg
adcb
adcl
dec
mov
inc
sub
scas
lock
ficomps
mov
lds
xor
mov
mov
lret
outsb
aaa
xorb
stc
pushf
jge
fadd
movsb
add
mov
xchg
fs
mov
adc
jg
pop
push
cmc
jg
es
leave
loopne
xchg
xchg
push
adc
sub
pop
jp
pop
in
es
inc
mov
jecxz
mov
and
cs
ficomps
lds
push
cmp
mov
mov
scas
pop
push
outsl
add
mov
cmc
sbb
dec
jl
iret
ret
mov
movsl
mov
mov
mov
inc
mov
cmp
push
inc
sti
out
fadds
out
cmp
inc
rolb
pop
ret
mov
repnz
cs
xchg
outsl
ja
arpl
shrl
adc
fldt
pop
inc
iret
add
push
xor
in
xor
ljmp
movsl
sub
outsl
fildl
xchg
pop
push
xchg
and
jle
push
aad
mov
call
loop
and
outsl
mov
out
add
add
push
dec
fiadds
aas
jmp
fwait
das
push
jle
nop
sbb
cmpsl
or
sub
in
cs
repz
shr
and
repnz
stos
in
inc
out
adc
hlt
mov
lock
mov
ljmp
jecxz
outsl
jne
cs
push
in
gs
imul
adc
into
jp
icebp
out
cmp
cmp
test
push
test
addr16
xchg
xchg
jno
js
bound
mov
mov
jmp
icebp
jg
add
jmp
dec
adc
jb
adc
mov
lock
pop
adc
movl
sub
xchg
pushf
or
sub
js
jg
add
ja
jbe
leave
jb
mov
mov
fdivp
mov
insb
inc
cmp
icebp
xchg
mov
shrb
sub
lcall
popa
jp
add
aam
mov
movsb
gs
pop
cmpsb
fistpll
aaa
pop
adc
into
xor
cmpsb
ret
jne
push
pop
sub
sub
das
inc
jmp
inc
test
xor
mov
lds
xor
in
cmc
out
adc
cwtl
in
mov
aaa
js
scas
mov
pusha
push
loop
call
add
mov
dec
imul
in
push
das
cmp
enter
test
fistpl
xchg
subb
and
xlat
cwtl
neg
jno
lods
jg
loop
push
inc
dec
jle
sub
pop
push
cld
rorb
push
sub
xchg
jp
push
movsl
or
cmc
imul
das
dec
adc
cmpb
mov
mov
test
add
jo
ret
aam
lahf
iret
arpl
imul
or
idivb
divb
enter
cmp
sub
inc
xor
std
push
xlat
cmc
mov
jbe
pop
pusha
pushf
ljmp
outsb
mov
sarb
mov
push
mov
mov
shrl
jecxz
aaa
cs
call
ds
les
cmpsl
cmpsl
xchg
in
decl
std
pushl
mov
popf
popa
add
pushf
les
jge
out
mov
enter
dec
or
ret
adc
or
xchg
xchg
js
xchg
adc
sti
testb
stos
xchg
mov
mov
sbb
nop
pop
jbe
ret
cmc
mov
ljmp
sbb
inc
inc
pop
push
fisubs
add
inc
jno
lcall
or
stc
inc
into
add
push
in
daa
jg
mov
lahf
pop
add
ja
adc
cmp
pop
push
sub
lahf
js
fistpl
jmp
movsb
dec
dec
leave
lea
in
adc
add
mov
sbb
stos
and
mov
xchg
pushl
push
sub
das
push
xor
js
add
mov
jmp
iret
add
and
mov
jo
addb
xor
inc
std
push
cmp
dec
insl
sub
xor
aam
test
js
popaw
jecxz
fcmovnb
dec
shrl
lret
jg
decl
inc
cmp
adc
push
pop
test
push
ljmp
std
orb
or
fsubr
bound
xchg
jp
shl
and
pop
nop
cs
or
push
incl
stos
shll
shll
pop
mov
cld
outsl
lods
cmc
js
inc
xor
sbb
cs
lea
pop
imul
push
jb
sbb
add
int
daa
ljmp
stos
cmp
fadds
mov
icebp
jnp
mov
repnz
jmp
mov
or
fnstcw
sub
pop
data16
cmp
cld
rcrb
sbb
clc
and
sbb
push
and
jge
lcall
sub
cmp
cmpsb
add
lret
jne,pn
nop
ret
notb
xchg
and
inc
xor
sub
ljmp
aas
sbb
in
dec
mov
mov
inc
mov
xor
and
fcoms
mov
cs
sarb
inc
dec
sbb
inc
inc
pushf
adc
mov
pop
push
and
sub
or
icebp
mov
sbb
xchg
pop
lahf
hlt
or
ss
aaa
mov
xchg
cmpsl
ja
push
mov
push
adc
add
lods
mov
mov
or
xor
fstpt
ds
inc
movsb
cmc
lods
movsl
mov
bound
add
or
and
mov
inc
pop
jae
and
add
push
mov
cmp
inc
mov
aad
daa
inc
lods
ret
out
movb
jmp
aam
test
pop
adc
popa
add
shrl
jnp
jns
cltd
or
fdivs
loope
lret
mov
int3
add
cld
push
gs
mov
jo
cmp
cmp
jp
pop
push
push
ss
push
bound
fdivs
fnsave
push
loopne
push
bound
js
std
inc
cld
xor
fcoml
pushl
sub
xchg
mov
idiv
inc
add
in
dec
add
addr16
jne
ficompl
clc
sub
dec
daa
xor
inc
cmpsl
jne
add
sub
sbb
ret
xor
call
gs
dec
notl
or
prefetch
add
call
sub
ficomps
ljmp
insl
add
in
adc
subl
into
mov
pop
xchg
and
mov
inc
clc
repnz
loope
sbb
push
scas
sub
mov
loope
fcmovu
ds
imul
mov
jb
and
mov
or
mov
mov
andl
fistpll
add
movl
cmp
insl
cmpsl
add
insb
fadd
and
mov
enter
lcall
dec
aaa
mov
cmp
rorb
sahf
jg
adc
mov
cmpsl
mov
adc
or
mov
jg
lock
sub
dec
movsl
dec
aaa
push
xor
adc
shll
jae
enter
sbb
push
mov
les
xor
push
inc
stos
mov
shrb
roll
cmp
adc
outsl
cmp
gs
cmp
addr16
lret
lahf
leave
arpl
adc
call
arpl
in
mov
inc
popf
mov
mov
sbbb
dec
mov
xchg
mov
and
xchg
inc
in
push
jb
test
jl,pn
push
adc
subb
out
cmp
out
mov
out
test
push
test
mov
int3
jmp
or
and
or
popf
test
cmp
outsl
xchg
mov
test
add
stos
into
loopne
pop
enter
mov
and
nop
stos
sti
stc
ret
fucomi
aad
rcrl
or
cld
es
imul
fiaddl
decl
and
lret
cli
stos
sbb
xchg
ret
mov
cmpb
fstpl
mov
daa
and
xor
lods
fcmovnbe
mov
jl
jo
push
ret
xchg
adc
call
xchg
fidivrl
cmpsl
push
pop
insb
js
or
inc
add
mov
mov
icebp
daa
mov
out
jmp
sarl
sbb
jp
inc
fistl
mov
std
jle
add
inc
dec
test
ds
adc
add
xor
push
inc
add
add
outsb
mov
into
test
mov
fistl
and
jp
dec
mov
xchg
xor
orb
add
adc
mov
pop
jno
mov
negb
scas
mov
jb
mov
jp
xor
sub
cld
jmp
cmpb
cli
cmp
fildl
sarb
add
cwtl
xor
add
dec
adc
or
fsubs
sub
mov
cmp
into
mov
filds
mov
cmp
lods
adc
mov
cmc
dec
push
mov
pop
cmp
sbb
fdiv
aad
mov
fdivrs
insl
mov
and
scas
push
mov
rolb
cmc
cmp
sbb
add
decb
call
sub
pushf
xchg
divb
or
cmp
lds
pop
sbb
adc
inc
cld
or
arpl
cmpsb
jg
shrl
or
data16
mov
out
jg
adcl
test
imul
scas
dec
pop
std
dec
mov
cmpsb
loop
int
dec
and
leave
add
test
lcall
mov
mov
and
jno
dec
adc
inc
aam
idivl
xchg
cmp
mov
mov
cmpsb
push
mov
ljmp
xchg
add
loope
out
fcmovnbe
push
mov
inc
lahf
scas
pop
push
xchg
ret
push
pop
pop
ret
dec
push
mov
lcall
repnz
adc
imul
sbb
or
outsl
ljmp
mov
neg
lret
jo
push
in
mov
mov
inc
add
and
cltd
outsl
fidivl
gs
divl
mov
mov
shrb
cld
or
dec
push
data16
les
xchg
unpcklps
cmpsl
ret
ret
dec
push
les
mov
mov
sub
roll
cmp
mov
outsl
rolb
adc
aam
jbe
jb
ret
pusha
sbb
scas
push
outsb
jmp
mov
pop
test
xchg
movsb
pop
cli
jg
jae
fs
sbb
repz
and
push
pop
sti
aas
xor
push
cmp
inc
jnp
and
test
adc
inc
loopw
popf
jnp
add
push
sbb
sti
outsl
pop
clc
stos
clc
pop
scas
and
cmpsl
push
mov
negl
add
cmp
adc
std
adc
movsb
ljmp
or
nop
rorl
imull
dec
pop
sbb
rorl
aam
pop
sbbb
push
mov
jg
xchg
pop
sbb
test
shlb
fiadds
mov
push
xchg
test
add
mov
negb
orb
sub
lock
adc
ss
fsubs
add
pop
jmp
xchg
cmpsb
loope
ds
mulps
or
inc
fwait
add
cli
and
push
in
jae
add
addr16
aad
insl
or
push
push
test
xchg
push
fwait
xorl
xor
testb
shrb
lret
rsqrtps
mov
ss
push
test
or
and
repz
push
sub
push
outsl
push
mov
adc
push
sub
push
lret
ret
and
mov
out
lcall
push
or
add
fcompl
jecxz
mov
push
test
icebp
pusha
or
mov
and
fisttpll
sbb
or
das
cld
add
cmp
inc
mov
xor
in
xor
xor
jecxz
lods
dec
jo
mov
fsubr
mov
lods
loope
popf
popa
jno
mov
push
mov
stos
push
push
push
pushf
fs
mov
aam
push
movsb
cmc
addr16
mov
sbb
fnstcw
fdiv
loop
pop
sbb
addb
xor
popa
jl
inc
les
movsb
push
and
clc
sbb
and
jb
or
decl
cmpsb
js
sbb
das
aas
ljmp
cmpsb
stos
in
inc
push
adc
out
outsb
mov
sbb
jecxz
fidivl
je
lret
jo
cmpsb
xchg
arpl
insl
das
shlb
fs
push
jne
outsl
cmp
cmp
mov
xchg
xlat
cltd
dec
ret
adc
stos
pop
jo
rclb
insl
and
add
push
arpl
out
in
dec
xchg
jbe
and
cmc
incl
dec
dec
insb
dec
mulb
lret
fiadds
jg
adc
movsb
inc
sub
mov
add
je
xchg
inc
dec
gs
ffreep
leave
icebp
ret
out
sub
xchg
outsl
inc
cs
pop
or
lea
inc
mov
and
andl
loopne
mov
mov
cld
or
adc
pop
out
cmpsb
ror
aam
lcall
xchg
mov
mov
data16
mov
sahf
and
ja
pop
testb
jl
movaps
dec
mov
fists
imul
jne
dec
gs
dec
decl
call
inc
sub
cmpsl
scas
cmp
mov
insb
mov
clc
and
cli
push
add
rcrb
jmp
push
push
mov
test
ss
or
mov
push
inc
and
pop
xchg
clc
mulb
push
sub
outsb
adc
xchg
xchg
mov
aas
push
mov
inc
les
jbe
cmp
inc
sbb
mov
mov
gs
and
fildl
mov
ret
into
gs
or
into
out
ss
jo
cmp
pop
ds
jb
jb
fwait
sub
or
lods
sbb
jmp
inc
push
scas
out
insb
and
aaa
outsb
call
cmp
mov
out
mov
lahf
fsubrp
pop
mov
jbe
cld
sti
xorl
popl
scas
cmp
pop
clc
arpl
push
jo
insl
and
sub
cmp
movsl
ljmp
fs
jmp
fimuls
cs
shufps
mov
mov
dec
stos
outsb
popf
add
andb
fbld
or
or
jo
and
les
pushl
jl
jbe
cmp
push
sbb
nop
lds
pop
fcomps
clc
pop
cmp
lods
push
ror
into
jne
fdivrs
jg
fprem
loopne
mov
sbbb
leave
add
outsl
pop
xor
lods
dec
mov
shr
cs
jbe
mov
and
pop
mov
xor
jle
add
aas
push
cld
out
cmp
fcomip
jecxz
dec
cld
push
sbb
inc
xor
inc
and
sbb
mov
incl
mov
adc
inc
ret
ss
lea
sub
or
shr
test
mov
sbb
pushl
inc
or
xchg
sbb
cmp
or
in
mov
jns
jmp
sar
pop
cli
and
push
mov
lret
dec
inc
shrl
decb
rolb
fisubl
and
cs
sbb
cli
das
dec
push
xlat
iret
es
ljmp
movsb
xor
pushl
icebp
sbb
dec
movsb
rcrb
andb
xchg
dec
add
imul
outsl
leave
repnz
jg
pop
cltd
pop
orl
lahf
jne
add
push
pop
xchg
mov
jle
stc
mov
dec
and
mov
xchg
pop
inc
inc
sbb
adc
test
shl
jp
xlat
daa
out
rcrl
mov
mov
mov
dec
or
jg
push
incb
add
pop
addl
lock
and
dec
mov
pop
pusha
repz
in
add
adc
pop
outsb
inc
pop
mov
mov
addl
or
adc
adc
lahf
pusha
or
cmp
clc
xchg
add
xchg
mov
movhps
bound
jmp
ret
mov
fildl
mov
popa
mov
or
iret
or
out
scas
xchg
fcomps
jo
repnz
in
xchg
or
sub
cli
negb
adc
call
pop
addr16
fwait
pop
shlb
stos
mov
inc
push
cli
and
inc
adc
ficoml
out
push
out
scas
jnp
ja
test
push
je
das
mov
mov
ss
je
aad
jle
test
loope
mov
cld
xchg
data16
rcll
push
mov
mov
shrb
mull
mov
xchg
jmp
shlb
outsb
std
inc
pop
mov
aas
adc
out
jo
or
sub
xlat
sub
pop
sbb
jle
add
push
cmp
outsl
lcall
pop
xor
mov
out
adc
aas
push
fidivl
mov
add
daa
sbb
pushl
stos
call
xlat
xchg
aas
pop
bound
push
xchg
xor
clc
movsl
jg
sbb
ficoml
push
or
add
push
daa
lea
pop
mov
pop
nop
fs
cmp
jne
cld
lods
lock
cmc
cmp
addl
push
cmp
jno
js
inc
mov
jl
stc
mov
lahf
insl
and
xor
cld
outsl
cwtl
sbb
push
mov
aaa
popa
clc
jbe
es
sbb
movb
pushf
int3
data16
inc
cmp
in
cmp
es
sarb
add
cli
stos
xchg
mov
dec
mov
push
pop
lock
jg
repnz
nop
mov
cli
inc
lods
sbb
in
ret
scas
xor
mov
sub
push
push
out
mov
inc
add
hlt
aas
inc
pusha
dec
jne
outsl
shll
mov
outsl
xor
cmpsb
jnp
sarl
es
call
cmp
mov
inc
push
imul
sbb
loop
iret
mov
sbb
insl
sti
mov
rolb
sub
sti
jecxz
bound
push
sti
push
mov
bound
and
daa
pop
dec
mov
into
into
imul
push
fcmovb
jg
imul
fcmovnu
sbb
inc
insl
pop
cmp
fidivrl
addb
mov
std
mov
pop
clc
fcmovnb
xor
addr16
imul
jne
cmp
inc
sub
mov
jecxz
aam
cmpsl
inc
arpl
mov
mov
jle
or
jo
push
jno
jae
sbb
jnp
or
push
push
push
mov
add
pop
push
xchg
mov
ficompl
test
imul
or
imul
add
mov
xor
lea
addr16
jae
adc
and
fimuls
outsl
inc
fldl
ds
ljmp
int3
aaa
sub
cmp
push
insb
pop
nop
clc
mov
ja
loope
jmp
push
cmp
aaa
sub
xchg
ss
testb
cmp
mov
push
fists
pushl
call
pusha
and
test
mov
and
add
pop
clc
cwtl
mov
or
mov
inc
cmp
and
mov
movsl
into
xlat
movsl
cmp
aam
mov
sub
cmc
mov
cld
push
in
aaa
hlt
fbld
or
pop
mov
mov
inc
jne
sbb
sbb
scas
bound
pop
or
and
hlt
insl
sti
mov
cmpsb
test
js
insl
mov
testb
push
les
fs
inc
cmp
jge
jnp
pushl
mov
ficoml
in
xchg
packssdw
cwtl
inc
mov
and
push
pop
push
and
pop
mov
lds
das
out
xchg
cmp
pop
lea
cmp
and
pusha
movsb
aaa
js
std
adc
or
stc
pop
adc
imul
add
rclb
rclb
pop
or
cld
jne
rclb
cli
jne
inc
mov
movsl
ret
mov
lock
push
sub
jnp
js
pop
mov
in
mov
push
cmp
std
aad
and
cmp
inc
jg
mov
sbb
nop
push
stos
mov
sbb
and
pusha
loope
sub
mov
xchg
fdivrp
mov
adc
pop
mov
pop
ds
sti
aaa
rol
daa
add
pushf
scas
jmp
cmpsb
xor
cmp
cltd
xchg
into
cli
insl
xorl
in
jp
mov
sub
orb
dec
sub
mov
mov
push
std
outsl
push
lods
je
aam
in
pop
mov
je
sub
dec
sbb
test
dec
or
adc
ret
es
js
out
ljmp
inc
adc
inc
insb
movsl
cli
xchg
mov
sub
add
sub
mov
push
ss
mov
lods
rolb
jecxz
fisttpll
push
xor
xor
mov
mov
rorl
push
mov
andb
shll
cmc
jne
or
jg
insb
mov
sbbl
cltd
jp
std
mov
inc
xchg
push
mov
aad
cld
das
lock
test
adc
and
mov
cmpsb
test
bound
fst
insb
mov
push
stos
outsl
das
insb
lds
or
bound
test
test
ret
xor
push
call
push
cmp
insl
mov
xchg
cmp
decb
and
decl
sti
jo
nop
jle
xchg
pop
aas
mov
and
mov
push
mov
jge
mov
xchg
in
jo
xorl
ret
jg
es
mov
es
insb
les
loope
lea
add
and
pop
test
mov
sti
das
mov
mov
dec
and
push
rol
jg
roll
lcall
daa
inc
cmpsb
bound
inc
les
jne
sub
mov
dec
mov
data16
popf
and
pmuludq
std
ljmp
push
sub
push
inc
ja
clc
movsl
test
test
dec
in
adc
or
pop
xchg
mov
xor
ss
xchg
sub
push
loope
scas
mov
cmp
and
shl
shrl
cltd
shlb
adc
or
push
push
fldt
xor
hlt
adc
mov
mov
push
or
push
jo
xor
testl
scas
push
movsl
decl
mov
les
pop
and
adc
mov
push
in
xchg
cmpsb
add
dec
cmc
cmc
fistpll
sub
mov
jae
negl
adc
bound
dec
mov
or
or
pop
call
or
or
adc
jle
inc
mov
jge
jge
rcll
push
outsb
mov
in
fisttps
iret
xchg
push
adc
test
inc
ret
sbb
mov
cmc
jbe
andb
cmpsl
leave
rorl
lea
mov
pop
mov
ja
in
pop
sahf
xchg
aam
arpl
loopne
aam
scas
mov
subb
mov
or
idivb
pop
rcrl
jl
xchg
mov
and
and
leave
and
nop
inc
clc
mov
push
into
mov
dec
sub
inc
push
std
push
sub
orl
loope
loopne
sbb
in
fdiv
pushf
pop
pop
pop
je
xor
mov
decl
cmp
dec
leave
out
repnz
lcall
clc
test
pop
xor
cmp
stos
push
xor
cli
mov
mov
das
mov
pop
mov
fcmovnbe
in
fbld
xchg
adc
mov
sub
shlb
inc
cmp
or
adc
jmp
jb
clc
dec
push
shl
daa
lahf
insb
push
sub
outsl
xchg
fucomip
movsl
clc
and
out
cs
imul
sbbb
cmp
pop
mov
filds
in
lock
repnz
mov
cltd
jle
or
std
scas
jmp
or
push
pop
xlat
adc
mov
das
fsubl
shrl
call
add
je
mov
and
mov
enter
decl
cmp
push
lock
mov
push
xchg
ret
aaa
cmp
sarl
call
lcall
mov
pushl
adc
jnp
movsb
pusha
repnz
mov
addb
push
imul
ret
fchs
out
xchg
inc
inc
mov
repnz
inc
mov
cmp
lahf
inc
in
fildll
push
push
adc
shl
das
mov
fdivrs
pushf
inc
xchg
xchg
loope
add
fdivrp
xor
xchg
ljmp
add
xor
push
push
cmp
nop
retw
ret
dec
sar
pop
movsb
add
xor
fdivr
call
push
mov
mov
cld
pop
sbb
fs
and
mov
xchg
call
test
pop
movsb
and
xor
rol
ret
mov
ja
imul
mov
and
sti
mov
call
add
xorb
mov
ja
push
mov
xor
push
aam
add
dec
aam
cmp
mov
sbb
mov
or
dec
rorb
inc
sbb
mov
out
push
cmc
jp
mov
call
pop
add
in
das
sub
outsl
test
scas
jo
sti
pop
dec
lret
in
adc
xor
mov
mov
into
in
loop
mov
pusha
push
mov
inc
adc
mov
lahf
inc
pop
dec
adc
sar
aad
icebp
pop
mov
fisttpll
pop
lock
ret
mov
pop
xchg
xchg
aam
xor
test
inc
lods
andl
pop
gs
scas
int3
cs
enter
sbb
and
xchg
bound
inc
ret
mov
stos
ror
iret
pushf
test
and
dec
mov
mov
out
mov
add
mov
xchg
or
lcall
js
adc
mov
lret
pop
out
jno
fistpl
fildll
leave
shrl
pop
jg
fistl
das
push
dec
in
pop
adc
push
sti
popa
mov
notb
mov
jb
ja
and
push
sub
or
lret
dec
jo
mov
scas
test
sahf
sbb
pop
or
jb
adc
adc
lcall
fs
xchg
rorb
xor
sub
cwtl
cli
xchg
jno
cli
std
push
ss
out
jo
xchg
lock
scas
push
pop
pop
sub
or
leave
mov
addl
pusha
add
shl
pop
push
xchg
fdivs
fildl
and
add
clc
add
lock
add
lcall
imul
insl
dec
scas
push
mov
push
xchg
in
rcl
rorl
insl
fcmovnu
pushf
push
shlb
inc
bound
or
mov
mov
mov
fidivrs
gs
or
ds
xchg
sahf
pop
ljmp
adc
lods
stos
out
push
mov
xchg
negb
mov
hlt
cltd
xchg
dec
jbe
mov
or
xor
inc
loopne
xor
fsubr
pop
jno
jmp
inc
jns
mov
inc
movsl
into
jg
test
xchg
jae
add
aad
and
fisttpl
sbbb
dec
inc
or
test
in
sub
mov
xchg
inc
enter
loopne
negb
pop
ja
std
add
popf
push
dec
fcomi
sbbb
mov
push
pop
push
sbb
xlat
mov
sbb
sbb
lahf
cmp
dec
mov
idivb
pop
scas
jno
aaa
jl
and
sbb
pop
fcomps
dec
push
mov
push
mov
movsl
or
divb
adc
xlat
gs
add
jge
cwtl
add
movsb
inc
int
fimuls
jmp
or
div
and
push
lds
dec
push
mov
jle
jns
out
mov
xchg
ljmp
std
pushl
aad
movsl
movl
repz
or
pop
xchg
shl
test
jbe
popf
icebp
xchg
out
fcomps
mov
xor
inc
lea
sahf
lahf
mov
push
xchg
shl
fldl
inc
sub
add
pop
leave
push
pop
inc
les
jp
jb
data16
data16
cmpsb
push
ret
enter
inc
test
jge
sbb
add
xor
add
mov
insb
mov
pop
push
mov
fwait
jmp
daa
cmp
add
dec
aaa
cmc
stos
push
syscall
mov
rol
mov
gs
mov
cmc
movsl
dec
push
loope
inc
mov
loop
cwtl
add
push
fstl
push
int3
xlat
std
pop
mov
arpl
sbb
mov
mov
dec
orl
pop
lcall
push
rol
inc
or
dec
dec
mov
les
scas
push
or
jbe
sub
daa
jecxz
xchg
jo
add
dec
mov
ficoml
outsl
jg
cmp
lods
push
mov
stos
jge
loope
inc
jb
add
add
clc
mov
hlt
cmp
xor
xchg
cltd
cmpl
jle
xor
jbe
cmp
jbe
push
cld
cmpl
dec
mov
push
ss
in
ret
add
in
mov
orl
mov
cmpsb
stos
push
xchg
dec
push
sahf
mov
mov
cmp
mov
xor
das
aad
fisttpl
push
mov
out
xor
mov
mov
jg
push
shll
lods
jl
mov
adc
lods
xor
jge
lods
decl
mov
scas
push
in
std
jle
adc
fimuls
in
test
xchg
scas
dec
daa
loop
xchg
fadds
fildll
enter
out
and
sti
das
xor
pop
or
call
fistps
stos
sub
shlb
or
pop
mov
adc
cltd
aam
mov
and
loopne
sub
sbb
or
mov
jnp
mov
movsb
movsb
mov
das
mov
add
lret
mov
dec
sbb
outsl
inc
shll
jle
enter
dec
cmp
pop
js
pushl
imul
movsl
and
adc
mov
call
inc
sub
icebp
scas
pop
in
xor
repz
call
ja
or
sti
add
mov
mov
loope
mov
push
xchg
andb
aam
and
cs
pop
lock
addr16
adc
sub
clc
ret
adc
xor
aaa
push
jl
mov
inc
icebp
call
movsl
call
aam
fldt
mov
or
mov
mov
subl
pop
cli
test
push
cmp
cld
std
loope
cli
mov
das
adcb
mov
mov
addb
mov
inc
or
std
mov
aas
cli
mov
pop
adc
xlat
mov
mov
nop
out
mov
lea
mov
jg
fdivl
aaa
and
jns
leave
and
add
rclb
test
jg
jmp
jns
dec
stc
shlb
sub
lds
shl
mov
mov
stos
adc
js
dec
xchg
sub
je
pop
jne
negb
ljmp
push
es
and
cmpsb
inc
ss
ds
jg
dec
xchg
ds
or
popf
add
scas
add
mov
pop
clc
out
cmp
pusha
flds
lods
cltd
scas
loop
ret
or
cli
scas
xor
mov
sahf
fucomip
mov
jg
or
cmp
ss
nop
adc
inc
cmpsl
mov
xor
std
jg
inc
push
ja
adc
cmp
pop
popa
or
or
mov
dec
xchg
test
ds
fmuls
insl
loopne
pop
sub
shl
rolb
sub
mov
into
sbbl
ret
shll
cmp
fsubl
cmp
les
fwait
call
and
cmp
insl
jp
add
push
movaps
xchg
out
mov
call
scas
cmp
arpl
lds
push
pop
scas
mov
inc
ja
mov
pop
lods
mov
fcmovnu
mov
jbe
xor
cltd
testl
xor
sbb
push
loopne
inc
pop
fisttpl
popa
popa
cwtl
js
rclb
call
ds
cmp
mov
push
cmpb
aad
and
test
mov
std
sbb
push
sbb
xchg
sar
mov
adcl
ja
cmp
sub
mov
xor
fsub
pop
cmp
push
lahf
lea
add
repz
sub
nop
mov
or
cmp
pop
push
pop
add
cli
test
cmc
adc
aad
push
ret
push
mov
push
pop
xor
insb
das
sahf
fcompl
jg
xor
call
clc
cmpsb
mov
fildl
pop
cwtl
mov
mov
mov
in
push
stos
call
mov
inc
dec
sbb
subl
sbb
mov
pop
popf
or
nop
ret
popf
mov
inc
cmpsb
mov
xor
sub
sbb
inc
ret
aaa
outsl
fstpt
and
add
es
and
sahf
or
jmp
cmp
or
test
dec
lds
push
fsubrl
lods
movsl
lret
in
cmp
mov
test
push
dec
pop
imul
xchg
jge
test
jl
loopne
icebp
imul
out
sbb
out
add
leave
cld
or
movsb
lods
imul
push
call
mov
dec
shrb
ret
push
sahf
add
xchg
and
push
cmpsl
dec
sarb
inc
outsl
mov
cmp
mull
lock
mov
pop
les
mov
mov
fldt
push
mov
jmp
dec
aad
xor
rol
sub
add
in
fistpl
sbb
or
loop
cmp
out
test
sub
push
or
stos
jbe
adc
or
sbb
cli
icebp
lds
or
jle
jmp
sub
iret
rcrb
adc
test
fs
bound
adc
stc
xchg
jae
cmpsl
outsl
and
hlt
sub
in
mov
sbb
decl
cmpsb
int3
inc
or
cmp
dec
mov
scas
cmpsl
sbb
ljmp
pop
rclb
in
hlt
outsl
fwait
je
mov
mov
psubq
cmp
das
push
icebp
test
mov
shl
add
inc
and
mov
or
in
inc
push
ret
outsl
fcomp
jmp
pop
xchg
adc
add
into
adcl
gs
jge
loopne
repz
enter
fistl
loop
pop
and
or
dec
fdivr
add
mov
incl
leave
scas
sbb
pop
sub
lahf
mov
dec
js
inc
call
outsl
movq
xchg
fisubl
cmpb
mov
sti
pop
push
fdivs
mul
out
adc
push
hlt
decl
lock
mov
add
push
jge
jl
call
clc
aaa
or
adc
pop
or
aaa
jne,pn
jecxz
and
jl
or
xchg
or
inc
mov
loop
jmp
idiv
testb
in
aam
enter
rclb
popl
dec
and
or
call
scas
ret
ljmp
nop
cmp
jae
mov
mov
rorb
jb
jg
adc
mov
xor
insw
je
inc
add
pusha
mov
clc
xchg
js
jp
xor
lods
mov
add
add
aad
dec
outsl
je
push
lret
or
jg
jecxz
fildll
insb
nop
or
movl
ret
std
pop
insb
filds
cmp
out
xor
pop
sbb
das
shlb
jge
lret
jg
pop
cli
or
lea
inc
shll
pushf
sbbb
sbbl
ja
add
aad
push
push
or
pop
jge
inc
inc
les
pop
inc
xlat
add
clc
push
pop
pop
imul
frndint
cli
jg
inc
or
xchg
pop
or
and
mov
lret
jle
mov
push
mov
xchg
leave
test
jb
ret
dec
stos
dec
imul
add
xchg
push
push
mov
lods
inc
pop
push
add
aam
or
clc
stos
add
ds
mov
rol
lods
add
push
push
jnp
mov
outsl
sbb
mov
mov
dec
ja
imul
rcll
sub
dec
mov
rcr
add
fsubrp
and
mov
pop
ret
add
sub
pop
sbb
movsb
cmpsl
int3
lret
pop
dec
sub
sbb
movsl
dec
lea
je
mov
push
xchg
leave
decb
lods
lea
mov
pop
cltd
mov
rclb
rolb
stos
cmp
filds
pop
roll
cmp
bswap
jbe
pop
or
aaa
and
fldenv
push
adc
pop
jle
pop
mov
std
out
inc
pop
enter
xor
xchg
pop
push
and
dec
adc
dec
or
in
mov
sti
aaa
push
jl
mov
adc
je
pop
lods
das
mov
test
pop
fwait
mov
or
fcom
test
push
dec
iret
fistpll
pop
je
sub
mov
add
jmp
add
insl
outsl
xchg
pop
and
sbb
mov
cmp
mov
into
push
cmp
cmp
fneni(8087
cmpsl
dec
mov
sbb
orb
imul
jnp
xchg
shlb
icebp
mov
or
cli
cld
push
xor
movsl
ret
add
arpl
std
sbb
das
sbb
or
mov
lods
add
fcmovnbe
in
xor
fistps
fistpl
test
lcall
cmpsl
and
xchg
in
push
xor
imull
fmuls
pop
cmp
lds
sbb
cmp
mov
adc
sbb
push
cwtl
outsl
sti
lods
ja
rol
or
cmpsb
push
jp
test
rorb
mov
and
and
mov
lcall
mov
popf
inc
xchg
jg
mov
inc
bound
jbe
call
jb
faddl
push
adc
mov
pusha
test
insl
ljmp
fwait
dec
ja
orb
stos
in
mov
loope
and
js
mov
xor
push
jl
xor
insl
mov
sbb
pushf
dec
xchg
outsb
aam
nop
mov
cld
mov
ljmp
scas
stos
sbb
mov
or
das
in
cli
lea
mov
rorb
movsb
pop
pop
insb
jno
pushf
sti
or
cmp
mov
orb
inc
push
lock
ret
cmpsl
and
sub
jge
inc
aaa
fidivl
or
jle
mov
lods
jge
cmp
pop
mov
in
lret
stos
popa
dec
ror
jo
test
or
cmp
mov
add
imull
in
aas
or
test
xchg
push
mov
pop
sbb
mov
sub
xor
fsubl
in
inc
sub
cwtl
mov
hlt
dec
mov
add
cli
les
ficoml
lcall
xor
push
mov
lock
push
xor
int3
jg
sub
in
ja
sub
test
cmp
add
cmp
add
fidivl
mov
popf
ret
sub
push
or
dec
dec
mov
sbb
ret
mov
fidivl
inc
shll
mov
int3
aas
push
jo
dec
stc
adc
daa
mov
mov
mov
xchg
xor
repz
mov
xor
sub
or
notl
lea
mov
clc
or
inc
xor
outsl
test
ret
int3
int
insb
cmp
loope
subb
scas
rorl
cmp
dec
dec
mov
js
lcall
cli
xchg
mov
insl
and
out
sarb
inc
mov
outsl
mov
xchg
test
mov
push
and
lea
inc
pop
cli
test
push
pop
xor
cmpsl
negb
xor
jle
mov
and
lock
cli
int3
cs
int3
sub
sub
scas
pop
mov
sub
inc
movsb
ret
jg
test
scas
xor
sub
stos
sub
aaa
mov
movsl
in
inc
fstps
jg
sbb
and
mov
xor
popa
nop
dec
adc
aaa
and
sbb
dec
sbb
mov
ljmp
popf
shlb
outsl
jge
cmp
rcrl
loope
sbb
fnsave
xchg
data16
sbb
push
test
sub
cmp
popf
dec
shlb
jg
loope
addl
test
adc
fimuls
lods
aaa
loop
xchg
adc
out
hlt
loopne
mov
das
sub
mov
pop
pop
mov
mov
lock
lahf
dec
jg
or
dec
add
sbb
test
hlt
icebp
or
mov
adc
dec
inc
mov
stos
inc
jae
mov
or
out
inc
pop
or
jmp
mov
inc
xchg
incb
mov
jg
incl
xchg
movups
fldl2t
jbe
fistpll
movsl
dec
jp
sub
test
cld
outsl
inc
mov
out
push
push
pop
push
inc
and
push
stc
or
iret
add
mov
jns
dec
subb
mov
or
sbb
adc
lods
cmp
or
aam
out
mov
xchg
jno
sub
and
test
lock
stos
mov
cld
decl
push
movsb
loop
add
lret
or
leave
cmp
outsl
cli
pop
andl
pop
inc
adcb
adc
mov
movsl
dec
enter
cli
and
pop
stos
ret
xor
loope
push
mov
call
aam
sahf
cmpsb
mov
adc
mov
cwtl
and
jg
cmpsl
inc
mov
sti
and
movsb
jns
cltd
cli
and
jg
lret
xor
or
shl
xchg
jg
adc
or
inc
into
jge
outsb
add
into
mov
in
jbe,pt
push
push
outsl
and
out
roll
or
notl
test
mov
sub
je
mov
push
dec
add
imul
jmp
es
rol
daa
ud0
jnp
sub
add
pop
adc
shrb
mov
jb
jns
xor
adc
xlat
jg
mov
cld
xlat
bound
pop
mov
lret
mov
jno
outsl
scas
add
data16
pop
jg
jmp
int3
sub
pop
mov
ds
adc
mov
sub
adc
cmc
and
inc
fildl
insb
lcall
push
xorb
dec
inc
pop
push
push
icebp
sub
adc
mov
pop
call
or
mov
hlt
add
sahf
push
pop
add
add
into
enter
push
test
aam
rol
xchg
je
shll
push
add
push
dec
sarb
mov
add
or
popf
sub
adc
call
test
test
out
das
lret
xchg
add
and
xchg
mov
int
test
incl
setl
dec
adc
jp
insb
mov
loop
xor
mov
outsb
testb
mov
xchg
popf
mov
mov
lods
xchg
mov
mov
push
mov
fistps
or
scas
add
loopne
pop
bound
adc
jmp
sub
mov
decl
inc
out
mov
stos
add
push
cmp
sbb
pop
jp
and
xchg
jmp
call
dec
fst
and
xchg
add
idivl
call
and
and
sbb
xor
and
add
mov
insl
shrb
daa
pop
jae
fcoms
cmc
ret
lods
xchg
pop
inc
sbb
and
std
lcall
mov
out
scas
aas
xlat
sbb
or
mov
push
sahf
insb
insb
pop
cs
jb
inc
test
adc
push
ss
add
jns
mov
push
push
jl
jge
pop
cld
mov
and
bound
rolb
sub
shl
iret
icebp
sbb
sub
sbb
sub
jo
jno
sti
pushf
push
pop
or
pop
or
pop
xchg
movsb
std
imul
push
add
xor
pop
shll
sbb
imul
leave
mov
jmp
jbe
pushl
mov
xlat
cmp
cmc
sbb
not
out
lock
push
cltd
adc
sbb
or
mov
cmpsb
sub
adc
daa
add
mov
xor
fisttpl
mov
ds
and
inc
addr16
or
jp
or
mov
mov
and
sbb
mov
popf
xchg
dec
nop
jle
in
push
sar
jecxz
mov
sbb
cmp
out
inc
aad
mov
dec
cmpsb
adc
inc
pop
fistl
cmpsl
fistpl
idivl
adc
inc
rolb
aad
add
in
push
xchg
dec
or
movsl
int3
cmp
test
mov
xor
es
mov
jecxz
jle
call
ret
mov
inc
fucomp
int
loopne
dec
lcall
gs
add
jecxz
pop
scas
push
insl
mov
cltd
xor
pextrw
adc
add
push
cs
inc
mov
jg,pn
cmpb
inc
fadd
ret
cmc
mov
es
inc
ss
fs
outsb
test
inc
scas
rcl
ret
outsl
mov
inc
mov
and
ljmp
movl
push
lret
sahf
lods
jns
int
xchg
pusha
es
fisttpll
mov
pop
rclb
dec
stos
push
adc
mov
push
cltd
and
xorb
and
lods
out
mov
sub
mov
pop
inc
or
adc
lods
lds
bound
lods
rep
das
xor
movsb
insb
int3
push
imul
out
adc
mov
add
or
push
xor
or
movsb
jo
xor
and
rcr
dec
popl
call
popa
mov
movsb
cmp
lret
adc
cmp
or
loope
std
lods
inc
cmpsl
sub
adc
sbb
test
jnp
sarl
stos
xor
pop
stos
sub
cmp
adc
lahf
repz
test
inc
jae
pop
cmp
insl
outsl
dec
ret
pop
mov
shlb
push
adc
outsl
sbb
adcl
and
in
mov
pushf
es
dec
decl
iret
adc
pop
or
jne
daa
icebp
test
loop
stos
mov
xchg
mov
xor
push
inc
pop
clc
dec
cmpb
mov
and
pop
arpl
mov
aas
bound
pushf
fidivs
mov
mov
lcall
stc
or
in
mov
loopne
cmpsb
in
out
cs
adc
mov
add
cmc
outsl
cli
or
dec
jae
lahf
in
lds
mov
or
or
aas
jne
jl
nop
and
dec
in
sbb
cwtl
pop
adc
mov
push
mov
outsl
pop
jo
imul
or
cmpsb
mov
mov
dec
jb
lret
call
ficoms
jns
mov
jo
xor
jmp
adc
cmp
cmc
scas
and
test
test
inc
xchg
dec
xor
xchg
xor
movsl
mov
icebp
je
shlb
pop
jl
or
push
clc
rcl
adc
jle,pn
es
je
dec
bound
iret
decl
out
pop
jne
xor
jb
cmpsl
repz
aaa
bound
sbb
imulb
pop
push
out
xchg
and
mov
andl
mov
mov
dec
or
push
xchg
push
ss
jl
popf
inc
lock
dec
adc
clc
in
mov
cltd
push
mov
pop
decb
mov
xchg
inc
aad
jbe
addr16
fidivrs
sbb
pushf
mov
les
aas
scas
inc
movsb
es
xchg
ror
xorl
shrl
rorl
fsubrl
add
outsl
stos
pop
les
cmp
sbb
arpl
adc
ds
nop
pop
sub
mov
push
cli
inc
add
inc
in
rclb
inc
in
jmp
inc
cmp
and
decl
or
cld
jne
jo
pop
xor
jp
cmc
rcr
inc
les
inc
xchg
aas
ja
call
insl
push
insl
jecxz
lret
cmp
adc
leave
iret
xlat
fimuls
fadd
and
push
arpl
dec
cmpl
rclb
bound
rcl
pop
or
jecxz
mov
loop
test
daa
inc
jo
sbb
add
dec
shll
je
jo
incl
jecxz
mov
lock
push
ljmp
fsts
mov
loop
cmp
outsl
jmp
xorl
and
sbb
xchg
or
sub
cmpb
jecxz
sti
or
add
fnstenv
push
mov
ljmp
mov
xchg
sbb
hlt
inc
add
jbe
mov
clc
outsl
ja
push
sbb
shlb
es
jns
rol
pop
and
int3
lock
jg
cmp
popa
dec
mov
or
push
fcoml
mov
adc
xor
xchg
inc
outsl
sbb
xorps
add
cmp
sbb
lods
mov
fwait
pop
push
int3
xor
and
das
mov
sbb
notl
ret
adc
stos
push
cltd
mov
shlb
aaa
add
inc
mov
jmp
leave
out
enter
pop
out
add
cmp
lods
loop
fisubrl
and
inc
add
lock
lock
dec
call
in
sub
das
mov
jg
lahf
daa
mov
nop
fs
out
outsl
aaa
inc
sub
arpl
dec
data16
outsl
or
push
rcrl
or
dec
pop
adc
sub
and
ret
mov
out
xchg
les
mov
mov
cli
das
pop
jnp
ret
cmp
lea
outsl
dec
sahf
cmp
cmp
add
std
push
dec
pop
cmp
in
xchg
mov
mov
and
orl
fildll
rol
sbb
fildl
jnp,pn
xlat
jb
into
cmp
and
lods
notb
std
das
or
mov
add
ret
loop
fldt
fsts
jl
fisttpll
inc
jmp
inc
test
es
xor
cli
xchg
fisttpll
push
fs
jmp
mov
cmc
cli
in
cmp
push
or
xchg
ficoml
fsubrl
inc
sub
pop
negb
push
cld
fnstsw
mov
cmp
sub
cmp
mov
lcall
xchg
xor
je
or
inc
sub
gs
fists
pop
inc
hlt
mov
adc
or
adc
and
lret
jmp
sar
incl
inc
add
cmp
pop
cmc
or
in
jne
insl
popa
je
jp
jmp
adc
sub
call
sub
divb
lods
mov
and
adc
clc
lea
push
in
dec
sub
jecxz
inc
jns
lret
cmp
rcrl
lcall
add
cmp
je
jno
inc
scas
test
xchg
hlt
cmp
decl
gs
mov
loopne
ja
aad
pusha
and
sbb
mov
and
ffreep
cwtl
adc
insb
or
and
movsb
push
jno
push
insl
xor
nop
call
jbe
scas
mov
add
bound
mov
mov
cmp
inc
sub
adc
decl
and
or
add
add
mov
sahf
pop
bound
and
adc
xor
outsb
ficoml
sbbb
mov
push
or
jb
or
decl
mov
nop
or
repnz
lret
scas
mov
clc
pop
clc
enter
fistpll
and
movsl
mov
pop
in
add
sahf
inc
loop
fsubrs
mov
pop
adc
shrl
sbb
clc
add
dec
lods
cs
mov
and
and
pushf
decl
pushl
scas
pop
subb
push
int
gs
and
push
cld
push
lahf
mov
sub
push
shrb
out
or
mov
jae
ljmp
sbb
pop
mov
mov
cmp
jno
insb
pop
mov
mov
sub
lret
data16
pop
sbb
pop
sbb
repz
push
loope
dec
loopne
ds
adc
mov
inc
arpl
in
add
inc
addr16
in
sahf
movsl
xor
inc
and
aad
ret
rorl
sysenter
cmp
dec
push
push
mov
mov
repz
and
or
sub
cwtl
mov
outsb
xchg
sub
shld
mov
decl
bound
rcrb
rorb
int3
arpl
das
lret
shll
rolb
jmp
test
lea
push
push
mov
lea
pop
sbb
call
or
js
jmp
cld
mov
ja
dec
insl
dec
add
lcall
andl
cmp
enter
sbb
or
cli
push
out
and
xchg
sbb
xor
xor
and
dec
sbb
inc
xchg
imul
sbb
test
pushf
arpl
clc
rcrl
mov
add
and
mov
mov
and
xchg
push
mov
fstpt
aad
and
loopne
or
movsl
fnstenv
loopne
in
dec
stos
fnsave
dec
in
add
lret
sbb
push
fsubs
mov
rorl
sub
arpl
mov
or
lock
push
add
mov
je
fcom
ret
push
cld
shr
pop
addr16
dec
add
int
mov
adc
sub
sbb
leave
and
in
xchg
sub
add
cmp
ss
mov
call
mov
ljmp
pop
ja
xor
jbe
sub
push
addr16
mov
push
mov
addl
xor
pop
cmp
jle
sbb
stos
fs
andb
pop
jge
int3
sub
call
fdivrp
pop
push
popf
mov
inc
xor
jle
push
and
pop
insl
mov
pusha
or
pop
imul
xchg
lods
push
adc
cmp
add
push
lahf
add
pushf
jbe
test
add
lock
daa
inc
mov
aam
and
mov
jo
mov
decl
mov
push
roll
in
add
adc
ja
cmp
or
sbb
mov
loope
jne
icebp
mov
decl
push
data16
lahf
mov
jmp
cmp
lahf
dec
lds
lock
cmp
xor
adc
les
shrb
leave
or
je
aam
insb
sbb
icebp
lods
inc
adc
sbb
lock
test
ja
and
mov
xor
add
or
movsl
ds
scas
lods
inc
cmpb
xor
pop
jns
pop
dec
pop
push
sbb
cmp
add
popl
loopne
and
mov
lcall
movsb
ljmp
pop
add
leave
hlt
xor
stos
roll
jns
fnstsw
ffreep
push
jae
mov
sbb
jecxz
aaa
test
rorb
dec
sub
pop
mov
xchg
out
adc
cmpsb
push
mov
push
push
mov
inc
add
inc
dec
das
push
incl
pop
add
mov
xlat
jns
aas
pop
add
out
imul
push
add
xchg
ret
cmp
add
lret
xchg
fnsave
lahf
jg
push
stos
repnz
stc
pop
insl
ja
call
addl
jb
and
pop
mov
test
lods
add
pop
and
aaa
sbb
les
jne
xor
outsl
mov
aad
inc
inc
xor
add
cli
sub
or
dec
cmp
ror
sbb
rcll
aam
adc
shlb
sbb
dec
xorl
repnz
negl
in
pop
lea
push
jecxz
addl
sbb
push
loopne
in
dec
cltd
sbb
sti
in
and
int
sub
pop
stos
add
bound
mov
incl
lock
mov
ljmp
ret
test
xchg
testb
adc
mov
out
xchg
sti
mov
dec
in
popa
decl
mov
jl
dec
and
movl
pushf
js
ljmp
sub
loop
mov
push
orb
lods
mov
aaa
adc
xor
subl
clc
push
ljmp
nop
inc
cmc
push
int
cld
dec
enter
into
rcr
pop
adc
inc
cmp
cmpsb
push
mov
ret
pushf
out
loopne
sub
xor
lods
adc
scas
insb
push
mov
int3
aas
mov
cmpsl
stos
jg
adc
aad
test
inc
fwait
mov
sbb
and
xchg
ja
or
loopne
xor
sub
lcall
mov
adc
test
cmp
lcall
adc
ljmp
cmp
iret
pop
sti
pop
or
call
mov
mov
int
dec
add
cmc
int
std
push
das
xor
inc
push
dec
sbb
cmpl
lock
push
inc
xchg
pop
in
push
add
sbb
xor
jecxz
cmp
cmp
decl
rolb
test
adc
imul
inc
std
cwtl
cmp
inc
adc
add
fildll
ja
lock
cs
ficomps
pop
push
das
pop
pusha
inc
pop
dec
push
mov
out
lahf
push
pushl
sbb
inc
mov
sbb
insl
cmp
out
dec
std
sub
mov
fildl
mov
push
mov
mov
mov
pop
mov
jge
popa
test
push
add
inc
decl
outsl
xor
push
js
dec
mov
add
xchg
les
jb
dec
xor
lcall
xor
pop
inc
jle
in
and
data16
stc
out
movsb
inc
adc
subl
dec
mov
sbb
pop
out
dec
or
and
push
ret
repz
dec
aaa
shrl
add
iret
mov
jns
movsl
adc
das
push
mov
push
mov
mov
inc
outsl
mov
test
popa
mov
cs
scas
push
enter
out
pop
cs
xor
adc
cltd
imul
cltd
sbb
aaa
sbb
ror
mov
js
ja
xchg
dec
mov
aaa
outsl
xchg
in
adc
or
mov
stos
sahf
lahf
or
sbbl
mov
hlt
das
and
or
push
mov
cmp
lar
fwait
dec
ret
scas
pop
inc
dec
and
imulb
xor
add
popf
lock
mov
hlt
mov
add
pushf
fwait
into
test
add
leave
fwait
pop
jp
mov
stos
mov
rorb
lret
cmp
adc
dec
lods
movsl
pushf
popf
jmp
imul
insb
or
stc
hlt
and
mov
loopne
mov
inc
cmc
pop
mov
mov
lret
scas
jbe
jae
adc
jl
and
jg
or
movsb
jbe
push
dec
pop
cmp
mov
add
js
fmull
std
inc
mov
std
sbb
data16
mov
mov
fidivrl
ret
mov
std
push
sbb
les
sbb
mov
mov
loopne
loop
add
jp
out
push
out
mov
aas
inc
std
ret
xchg
into
repz
mov
adc
jg
popa
push
push
adc
nop
inc
test
adc
pop
loopne
and
jnp
sub
cmp
sbb
call
testb
inc
movsb
jp
nop
sub
xchg
push
fists
pop
fsts
cltd
call
mov
inc
imul
cmpsl
loop
adc
sbb
mov
out
adc
ja
addl
sub
in
xchg
andb
jl
ljmp
add
movsb
or
lret
xor
mov
adc
push
ja
xchg
sub
jl
xchg
or
add
shll
xor
mov
pushf
rol
mov
aaa
mov
sub
mov
pop
and
repnz
fldenv
push
adc
adc
sti
adc
in
adc
movq
ret
adcb
mov
pop
nop
or
pop
inc
mov
xor
dec
dec
mov
add
ror
mov
outsl
neg
push
pop
xchg
adc
cmp
icebp
outsb
jmp
insl
jmp
push
cmp
mov
outsl
inc
nop
gs
mov
sub
cld
push
mov
mov
sar
ds
jne
mov
fcmovnu
test
loopne
and
mov
arpl
mov
pop
push
out
mov
inc
jge
jg
jle
mov
fimuls
xchg
mov
inc
ret
pushf
sahf
in
call
adc
icebp
mov
add
inc
push
fnclex
jbe
push
cmp
fwait
sbb
push
shrb
sub
ret
mov
dec
rorb
and
ss
mov
aas
inc
ret
mov
sub
rorl
stos
fbstp
jbe
into
rorb
fisubl
add
lock
xor
mov
jg
mov
inc
lock
jg
jecxz
lock
imul
push
cmp
pop
loop
daa
inc
cmp
movsl
xor
mov
cmpb
xor
and
icebp
dec
xchg
subb
fdivl
les
push
lods
dec
scas
cs
mov
imul
and
jne
pop
ljmp
or
inc
jg
inc
insb
icebp
ds
movb
inc
test
mov
popa
xchg
or
js
aaa
roll
add
dec
push
xor
mov
add
mov
inc
std
movsb
push
lahf
xor
or
or
aas
pop
arpl
or
cmpsl
sbb
mov
fbld
inc
scas
add
mov
mov
incl
inc
sbb
cli
fdivrp
ja,pn
mov
rclb
cmp
jmp
and
cmp
xor
add
jge
push
or
jnp
mov
movsb
push
lea
sbb
cltd
scas
xchg
mov
sbb
dec
shll
push
lcall
loop
pop
xor
push
out
pop
mov
xchg
pop
loop
outsl
scas
aam
ljmp
ja
pushf
lods
hlt
insl
dec
jg
mov
jecxz
fmull
jp
adc
cmp
sub
sbb
pushl
jo
add
movsb
lahf
adcb
mov
mov
mov
dec
mov
ret
clc
or
lcall
xchg
inc
lea
pop
jne
jecxz
lahf
and
repz
loope
xchg
daa
pop
je
xorb
sub
push
rcrb
imul
inc
icebp
inc
pop
push
and
insl
icebp
decl
testl
js
incl
inc
mov
add
les
jae
int
dec
inc
lods
leave
xor
mov
shrb
hlt
mov
insl
jl
out
and
pop
mov
pop
std
push
mov
lds
or
lea
popf
jmp
push
and
mov
push
enter
and
lds
pusha
ljmp
out
mov
push
insl
test
into
out
inc
sti
decl
hlt
scas
stos
dec
ds
repz
clc
loopne
ds
mov
sbb
decl
cld
mov
sbb
shlb
imul
mov
out
and
shlb
jp
pop
jmp
sbb
adc
arpl
hlt
fildl
inc
mov
out
sub
or
inc
or
addr16
inc
mov
rclb
cmp
pop
inc
sbb
sub
pop
call
je
not
dec
or
movsb
daa
sbb
jl
pusha
imul
push
push
dec
call
call
lods
dec
pop
nop
mov
mov
ds
jno
repnz
je
pop
sub
call
sti
jge
pop
scas
mov
dec
filds
lock
in
inc
cmpsb
sbb
call
dec
sbb
push
sub
xor
jmp
lods
test
push
aaa
stos
jo
jl
idiv
mov
sub
xchg
inc
orl
adc
mov
in
and
add
mov
pop
push
mov
sbb
or
mov
arpl
int3
inc
xchg
pop
mov
fstpt
jle
pop
mull
dec
cmp
test
gs
in
out
in
orl
daa
das
rorb
xchg
xor
mov
jo
jmp
int
or
mov
adc
push
push
test
icebp
mov
mov
cld
popa
jg
pop
jb
clc
xor
sub
pusha
mull
incl
nop
mov
sbb
ret
xchg
cmp
xor
mov
mov
jmp
filds
mov
mov
les
mov
movsl
insl
dec
lret
adc
cli
testb
movsl
mov
push
mov
mov
and
test
xchg
cmp
roll
mov
mull
xchg
jmp
imul
sar
xchg
add
pop
adc
push
insl
pusha
lret
repz
jns
inc
jg
out
xchg
ret
sarb
aam
xor
ret
mov
add
jg
xor
xlat
pop
movb
ds
mov
xchg
mov
add
sbb
push
and
inc
xlat
pop
push
fcmovnu
mov
push
push
add
mov
jne
sarb
xor
or
or
inc
rcrb
dec
mov
jle
movsb
and
mov
inc
test
mov
std
or
pusha
xor
divb
insb
stos
dec
in
pop
mov
inc
inc
xor
inc
fistps
jne
or
inc
add
push
addb
jle
xchg
xchg
mov
js
dec
sar
aaa
lds
lahf
push
mov
test
cld
ss
lea
jg
aad
cltd
and
mov
jmp
mov
pop
mov
push
and
orl
or
push
push
mov
cld
fwait
scas
add
cmp
xor
push
lret
sub
je
cmpb
pop
and
and
or
or
xchg
nop
dec
mov
push
movsb
sub
shll
pop
lret
mov
enter
pop
push
lods
fstpt
sbb
icebp
fcmovnu
jecxz
lods
push
iret
add
cld
mov
rorl
push
mov
out
mov
lods
push
sbb
cmp
cmp
sub
std
cmp
cli
adc
jbe
push
and
pusha
push
push
inc
push
sub
out
jno
out
test
fmul
adc
xor
add
xchg
or
pop
cltd
pop
pop
jge
push
mov
repnz
add
sbb
jae
fcomi
cmpsb
mov
mov
aaa
dec
inc
cmpsl
es
nop
pop
pop
shrb
push
inc
fnstsw
jbe
jmp
mov
or
in
or
out
out
data16
cmp
dec
xchg
lahf
test
push
mov
mov
jno
adc
int3
inc
fiaddl
div
pop
mov
ja
or
test
std
xchg
add
loope
mov
scas
dec
xor
pop
add
insb
leave
or
sub
int3
sub
insl
mov
addb
test
xchg
repz
jne
pop
sahf
sub
cs
aas
jecxz,pt
mov
mov
outsl
and
loope
lds
shrb
mov
jbe
pusha
mov
cwtl
popf
jae
push
sbb
hlt
cmpl
add
fistpl
imul
cmp
pop
add
fmul
cmovo
call
bound
or
jle
pop
xchg
int
test
and
jno
icebp
cmp
js
lods
and
in
or
sbb
imul
xor
fst
pop
outsb
das
xor
ffree
pusha
adc
jg
pop
lods
lods
lock
lods
in
cmp
xchg
add
push
shll
and
sub
push
sub
cmp
in
jl
sub
xor
jp
mov
push
mov
xchg
shld
popa
inc
mov
repz
decl
push
push
aad
sbb
mov
ret
out
xchg
push
mov
inc
push
adc
mov
adc
push
daa
cmp
cmp
add
jnp
repz
adc
sub
pop
movsl
xchg
movl
sbb
adc
mov
sub
push
push
jle
inc
dec
jl
test
inc
xchg
push
mov
inc
bound
add
imul
cli
pop
push
jle
xchg
test
jl
mov
fsubs
and
enter
cmpsl
jns,pt
inc
push
jb
aas
dec
add
loop
addl
mov
pop
xchg
jg
push
sub
outsb
cmpsb
or
popa
push
or
fildl
out
mov
mov
mov
and
sahf
lret
roll
xchg
clc
into
adc
pop
cmp
ret
pop
ss
inc
popa
sbb
adc
fcmovnu
or
dec
push
jmp
test
add
mov
stos
inc
cwtl
in
jnp
imul
push
call
das
jb
pop
adc
test
fists
insl
inc
jg
lret
mov
xor
cmp
push
inc
dec
sbb
xchg
out
lea
mov
mov
mov
mov
xchg
stc
and
sahf
into
ret
or
sbb
andb
xlat
scas
loopne
xchg
pusha
and
insb
add
repnz
cltd
sub
xor
insl
shlb
mov
mov
insl
or
pop
pop
stos
nop
or
mov
insb
movsb
stc
mov
mov
inc
pop
adc
popf
xchg
aad
pop
mov
in
call
adc
orb
mov
push
int3
shr
xchg
sub
rcrl
fildl
xlat
push
adc
mov
sbb
jmp
test
sub
or
push
lret
in
or
cs
std
rclb
cld
and
pop
les
incl
pop
push
and
adc
dec
pop
push
sti
push
or
movsb
jg
fildl
or
adc
int3
sbb
and
in
test
push
dec
push
in
lret
xor
mov
iret
xor
fnstsw
jo
mov
loopne
add
fsubrs
xchg
add
jg
and
add
inc
mov
sub
popa
loope
ss
mov
cmc
mov
mov
jg
mov
xor
push
scas
adc
aad
push
xchg
fdivp
call
test
enter
push
pop
adc
scas
loop
jmp
mov
or
mov
cmpsb
pop
inc
out
push
mov
ror
aam
rorl
in
cli
jne
jb
or
outsl
cmc
add
rclb
jmp
adc
xchg
movl
jg
jo
in
pop
or
subl
jp
mov
mov
int
mov
sbb
sub
mov
ror
rcrl
cs
filds
dec
or
inc
xchg
cmp
add
xor
mov
inc
dec
push
sbb
cmp
xchg
pop
pop
js
mov
idivl
test
outsl
es
ss
cmc
sti
push
mov
mov
pop
sub
xchg
ret
dec
jmp
and
dec
mov
cmc
insb
std
xchg
sub
mov
lea
and
inc
and
in
out
adc
push
pop
orl
dec
outsb
push
jecxz
jg
add
push
adc
push
lret
sbb
or
movsb
sarb
pusha
push
lcall
pop
addb
add
xchg
or
incl
mov
js
adc
or
icebp
das
std
jecxz
adcb
xor
mov
les
sti
cmp
hlt
lds
xchg
movsl
jae
mov
adc
div
add
addb
adc
ret
pop
jo
mov
sub
mov
in
add
cmp
mov
jb
mov
pop
inc
aas
out
lcall
or
repnz
pushf
aam
test
push
call
std
or
js
ret
outsl
insb
cld
cmp
sbb
push
je
into
cmpsb
insb
inc
decl
pop
std
insb
and
pop
xchg
lret
xor
rcr
mov
mov
jl
roll
jl
in
pop
pop
sub
ds
mov
pop
sub
pop
addl
nop
rolb
jb
inc
les
inc
mov
and
mov
mov
add
cwtl
fs
adc
pushl
js
aaa
add
or
clc
es
in
dec
or
pop
pop
cmpb
add
es
xor
pop
mov
push
xor
inc
js
ss
push
fidivrl
ds
in
xlat
add
push
cmp
and
jbe
shl
lods
adc
icebp
movsl
iret
mov
push
or
xchg
ljmp
jno
push
pushl
stos
add
cwtl
mov
lcall
add
xchg
popa
sti
js
clc
sti
movsb
cmp
pop
adc
sub
lcall
push
jg
dec
pop
sub
into
inc
sbb
jge
xchg
push
ja
inc
popa
mov
or
stos
add
sbbl
mov
outsl
sti
mov
out
roll
add
mov
das
inc
scas
xor
movsl
inc
daa
sbb
jnp
aam
lods
mov
or
loopne
push
sar
mov
mov
icebp
adc
jns
adc
fmull
decl
jae
push
je
xor
les
ljmp
int3
ljmp
mov
and
stc
jge
aad
jg
or
xor
xor
jmp
lcall
or
jne
xlat
jns
rcr
fiadds
pushl
sub
xchg
jp
pop
data16
xor
inc
inc
cld
repz
mov
lods
sub
or
data16
mov
dec
sub
outsb
inc
add
leave
test
outsl
clc
jbe
cs
mov
add
es
fbld
push
add
test
mov
push
mull
enter
decl
mov
push
es
or
mov
addb
dec
sub
shlb
and
xor
je
sbb
or
lcall
fidivl
xorb
sarl
stos
outsl
pusha
adc
jmp
fsubr
lods
loop
or
pushl
repz
jbe
in
adc
ss
xchg
movsb
mov
push
addl
sub
mov
lods
insl
jp
movsl
jno
jo
aam
notl
xchg
mov
sbb
out
pop
cmpsl
aad
sbb
cmp
add
hlt
aaa
or
jno
roll
and
aam
insl
add
and
lock
pop
xchg
xor
ror
dec
xchg
cmp
dec
nop
push
mov
sub
rcl
xor
loopne
push
adc
test
js
call
fildl
in
cmpsb
adc
mov
jb
xor
lods
sub
xchg
or
movsl
testl
insl
mov
andb
cmpsl
mov
cli
pop
cli
loopne
and
decb
mov
aaa
icebp
test
and
inc
cld
pop
mov
es
or
cmp
movsb
scas
cs
cmp
mov
inc
mov
pop
adc
inc
pop
push
cli
cmp
mov
dec
lahf
lahf
add
clc
or
dec
movsb
mov
jg
in
test
mov
pop
add
out
fbstp
rolb
popf
adc
outsl
pusha
xchg
and
pop
push
cmp
and
jb
dec
arpl
mov
inc
adc
movsl
inc
repz
sbb
jl
xlat
negl
test
cmpsl
out
pop
hlt
lea
push
scas
inc
push
lahf
mov
in
add
pop
loope
inc
in
mov
outsb
shlb
test
lods
adc
clc
inc
sbb
mov
bound
clc
shrl
arpl
sahf
push
cmc
shrb
or
inc
mov
aas
lods
fwait
mov
dec
jnp
aas
dec
lea
data16
xor
cmp
stos
sbb
mov
add
lods
mov
outsl
pop
cli
cmp
sahf
xor
and
arpl
pop
and
rorb
incb
mov
repz
xchg
call
call
pop
dec
mov
nop
loop
pop
iret
xchg
lret
in
pop
outsb
cli
jno
dec
inc
adc
mov
cld
icebp
and
sarb
out
xchg
sbbl
pop
inc
adc
mov
sub
imulb
mov
sub
mov
rorb
jge
lock
sbb
push
test
inc
pop
push
add
cmp
cltd
mov
lods
xchg
sbb
inc
loopne
das
sub
ljmp
popf
mov
add
mov
lcall
rolb
shrb
lret
mov
arpl
mov
push
mov
popf
xbegin
pop
or
sub
vmwrite
into
outsl
insl
jmp
lahf
inc
add
and
ja
nop
or
sub
arpl
aad
adc
cmp
ds
mov
bnd
popa
loopne
test
mov
xor
mov
and
dec
xor
adc
push
pop
xchg
mov
cmp
mov
clc
and
les
or
lcall
and
shr
mov
insb
cmp
adc
ss
xorb
sbb
lock
push
inc
test
cld
sbb
in
mov
xor
lock
mov
cwtl
loope
out
mov
mov
loope
cmp
dec
or
mov
call
add
jecxz
mov
or
imul
dec
add
dec
pop
add
mov
jbe
rcrb
add
adc
inc
inc
or
cwtl
dec
add
sti
mov
pop
mov
xchg
add
fildl
or
pop
sarb
mov
add
inc
adc
pop
ja
jno
push
insl
xor
sarl
adc
rolb
sar
shl
jbe
imul
pop
int
push
ljmp
test
sarb
icebp
fidivl
sub
sbb
ret
jne
sbbl
and
out
fsubl
aad
pushf
std
sarb
mov
int3
int3
adc
mov
sub
ljmp
mov
push
add
push
cwtl
call
testb
fildll
mov
adc
movsl
push
out
out
lea
idivb
mov
add
or
pop
pop
fsts
ss
inc
xor
xchg
outsb
leave
mov
cmp
pop
pand
rcrl
fidivl
and
clc
push
call
and
cmpsb
shll
popa
clc
mov
pop
jmp
cld
das
pop
pop
xchg
cmpsb
adc
es
mov
sbb
je
inc
rcll
stc
in
add
fdivrl
jg
js
adc
cs
insl
fcmovu
xchg
mov
pop
push
inc
ss
xchg
push
insl
loop
fcompl
fwait
or
mov
inc
push
dec
jne
ficomps
ret
adc
and
paddusb
cld
xchg
cmpsl
pushf
and
mov
or
mov
mov
imul
aam
mov
cmp
inc
adc
adc
mov
ret
popa
test
cwtl
lds
pusha
rcll
cmp
sub
loope
jp
ljmp
sub
push
jb
loope
push
mov
pop
cmp
out
sbb
mov
fisttpl
adc
mov
dec
dec
adc
xchg
pop
icebp
aam
xchg
popa
adc
cmpsl
gs
enter
mov
pop
sahf
fisttpll
cvtdq2ps
or
imul
jne
insl
mov
push
inc
and
mov
lods
decl
insb
adc
sub
push
lea
jle
test
popf
xchg
inc
sub
and
out
es
cmc
notl
inc
cmp
push
mov
mov
cmp
push
jl
add
inc
les
dec
cmpsl
xor
divl
testl
add
addr16
cwtl
mov
pop
test
mov
lret
jbe
mov
push
adc
cmp
mov
test
rcr
rcrb
mov
jecxz
sub
cli
jns
cltd
lds
inc
add
in
shrl
mov
adc
xor
aad
out
nop
shll
xchg
loopne
mov
ja
mov
sub
and
rcl
xchg
cmpsl
push
cs
sbb
cmpsl
pusha
loope
les
inc
pop
lods
sub
add
fistpll
adc
jno
gs
push
lds
loopne
cli
jp
mov
ds
mov
mov
mov
cwtl
mov
out
push
add
jno
andl
call
push
cmp
lret
cmp
xchg
stc
int3
adc
push
mov
xchg
sub
fdivl
mov
dec
push
mov
arpl
dec
fucomi
jmp
inc
mov
ljmp
sub
mov
add
cmpsb
popa
push
pop
or
mov
sub
pop
pop
mov
mov
insl
mov
mov
mov
ret
dec
mov
sbb
in
orb
mov
adc
sbb
fisubrl
sub
or
and
test
mov
cmp
mov
test
push
push
mov
lcall
mov
push
jmp
mov
test
inc
and
sub
lea
jmp
mov
mov
xchg
xchg
push
dec
hlt
push
ss
inc
hlt
sbb
dec
icebp
insl
sti
adc
or
dec
pop
xor
pushf
mov
or
shl
daa
adc
decb
das
les
xor
mov
cli
loopne
aad
gs
add
and
add
clc
int
cmp
mov
and
mov
jge
std
sbb
sbb
sub
icebp
fisubrs
push
push
outsb
pushl
push
or
xchg
mov
inc
imul
push
jne
inc
adc
and
inc
dec
imul
les
sbb
mov
test
mov
adc
fisubs
push
arpl
add
pop
jge
test
pop
test
jge
push
mov
adc
das
push
jl
xchg
push
fmul
sbb
out
and
push
cld
mov
sub
cmp
jmp
outsl
fdivs
pop
xchg
mov
xchg
cwtl
jbe
jmp
dec
cmp
sbb
add
test
xchg
clc
pop
pop
push
adc
add
frstor
test
and
dec
outsb
mov
enter
es
mov
xchg
push
and
dec
clc
hlt
adc
inc
insl
xor
stos
icebp
popf
stos
lcall
cmp
popf
cmp
mov
mov
jge
cmpsb
repz
dec
fwait
jmp
mov
fwait
cli
test
pop
imul
mov
or
ljmp
jp
jecxz
subl
cmp
adc
lcall
dec
sti
mov
adc
mov
xchg
ja
ds
or
or
inc
push
adc
or
pop
and
push
adc
mull
sbb
mov
daa
inc
mov
fcmovne
jge
push
les
mov
add
clc
shrl
xor
out
push
jbe
jp
mov
scas
fdivs
push
in
popf
and
inc
jae
test
in
fdecstp
jg
xor
mov
add
sub
icebp
inc
sub
adc
sub
mov
jbe
or
mov
stos
mov
or
fld
push
mov
loope
mov
insb
pop
scas
je
push
mov
inc
movsb
into
mov
stos
push
cwtl
inc
jmp
xchg
jp
jno
sbb
sub
jne
or
push
jmp
fisubl
pop
or
test
ds
push
jmp
mov
jl
in
mov
mov
jp
ja
jp
add
fs
std
sub
inc
fcmovnbe
sbb
js
sub
pop
rcl
push
sarb
mov
mov
popf
push
cli
or
ficompl
push
inc
push
mov
and
inc
push
mov
clc
pusha
jnp
int
addr16
popf
dec
mov
cmovs
mov
cld
imul
cs
adc
bound
mulb
jnp
pop
xchg
aas
sub
dec
jb
inc
xlat
aam
es
icebp
xor
ja
repnz
dec
mov
xchg
lea
xchg
push
insb
cmp
das
fwait
push
xor
lea
movsb
mov
out
mov
roll
loop
shrb
int
inc
in
pop
leave
lret
fcomip
xchg
divb
and
mov
or
sbb
or
jge
pop
ljmp
popa
ret
pop
pop
fildll
lea
test
lahf
or
adc
adc
fistl
dec
scas
cmp
aaa
add
in
xchg
push
lahf
add
add
lds
push
push
lods
std
insl
sbb
xor
mov
popf
rcrl
mov
xor
ss
mov
sub
jne
or
pop
imul
jno
and
hlt
adc
sbb
jle
jns
pop
jmp
add
in
jbe
mov
clc
sbb
fsubrs
pop
iret
and
sbb
mov
adc
jecxz
sbb
dec
ret
decb
decl
std
add
loope
loope
and
sub
mov
stos
mov
jg
fs
jae
jge
out
mov
mov
push
xchg
mov
mov
fmull
add
lea
addl
pusha
into
fldl
push
test
mov
inc
adc
mov
lret
push
push
xor
mov
lcall
ret
pop
sbb
decl
ret
lea
add
ljmp
imul
mov
mov
adc
mov
mov
jecxz
xchg
iret
insb
loop
fs
std
lods
inc
xor
ds
rol
daa
call
jle
loope
das
sub
pop
xlat
fmul
push
xchg
pop
push
popa
or
aas
scas
scas
push
jecxz
sub
loope
jg
cltd
hlt
sub
imull
aas
sub
outsb
pop
das
cld
test
divl
or
dec
jl
push
addr16
hlt
push
mov
fimuls
cmp
ret
ja
cmpsl
mov
and
mov
jo
ret
sbb
and
sbb
decb
mov
xor
leave
fwait
scas
jmp
and
cld
fisttps
mov
and
and
lock
dec
cmp
mov
dec
adc
lea
mov
imull
mov
cmp
xor
pop
fldl
push
mov
sub
aaa
jg
fs
inc
or
mov
and
insl
jmp
shl
jge
cmc
movsb
ret
in
pop
mov
out
shr
sar
push
rclb
pusha
ja
lret
pop
jbe
jmp
cli
mov
loopne
sbb
jmp
aaa
push
fnstsw
adc
fadds
and
cmp
movsb
inc
lret
mov
clc
lcall
sbb
repnz
dec
and
jbe
lds
fdivrp
aaa
stos
sbb
arpl
adc
push
clc
loop
pop
add
pop
lahf
lahf
lret
xchg
xchg
adc
test
mov
in
inc
push
lret
mov
pop
lret
xor
call
fwait
inc
icebp
outsl
incl
mov
jnp
push
insb
out
or
xor
fists
test
inc
and
inc
int3
or
idiv
adc
sub
aam
inc
cmp
sub
inc
mov
fwait
enter
or
and
or
pop
clc
xchg
shufps
pushf
and
in
xchg
aaa
push
cli
sub
incb
ss
add
sar
adc
lds
jmp
inc
xor
ret
inc
adc
mov
imull
dec
aas
jecxz
sahf
sub
mov
call
into
pop
pop
es
pop
imul
cmp
xchg
clc
lea
test
adc
les
repz
test
sbb
test
adc
ljmp
pushl
adc
cmpsb
addr16
mov
jnp
or
or
xlat
mov
pop
subb
data16
add
cmp
mov
jne
call
dec
or
inc
out
daa
sbb
js
fcomps
stc
cs
cmp
cs
fnstsw
sti
das
insl
jbe
jge
aad
lcall
in
sarb
push
aas
inc
sub
out
std
mov
fsub
lcall
add
sub
les
and
adc
jg
cmpsl
cmp
ljmp
cmp
dec
push
jp
sub
in
dec
aam
pop
dec
lock
push
movsb
and
cwtl
sub
cmp
mov
push
xchg
mov
fists
rol
sub
pop
out
aad
lds
fwait
inc
xor
stc
sbb
das
inc
iret
mov
add
sbb
jle
clc
ljmp
icebp
movsb
jp
push
mov
dec
jecxz
inc
and
out
scas
sub
lock
adc
stc
inc
jns
and
add
outsl
fistpll
add
mov
fsts
js
adc
negb
cmp
push
inc
in
fcmovne
ret
and
cmp
and
push
xchg
push
jge
cltd
mov
cld
dec
or
add
inc
pushl
add
dec
adc
push
icebp
lods
add
or
lea
call
mov
das
lds
outsb
iret
jge
cli
outsl
lcall
roll
mov
rcrl
and
pop
hlt
ljmp
lea
inc
add
or
cli
lea
mov
outsl
popf
pop
enter
or
pusha
add
add
mov
jle
and
pop
lahf
xor
mov
jge
inc
lods
pusha
fs
adc
dec
leave
mov
push
sub
push
test
insb
mov
add
lods
test
push
push
std
sub
jl
aas
cmp
ret
cld
push
test
fs
mov
dec
pop
cwtl
push
cli
das
mov
mov
xchg
xchg
push
clc
int3
movsl
xor
adc
xor
in
data16
fdivrs
pop
jne
lds
sar
mov
nop
idivl
push
sbb
fcomi
lods
imul
xrelease
jmp
mov
rorb
add
xor
inc
inc
in
orl
pop
mov
lret
sub
push
cltd
ret
stos
inc
std
cmp
aad
out
lock
xor
mov
hlt
pushf
mov
insb
call
mov
shrl
sbb
dec
test
jno
hlt
adcl
clc
mov
inc
adc
add
outsl
flds
rorl
inc
cs
pop
dec
xchg
pop
sti
stos
xor
test
lods
add
and
ret
mov
sbb
cltd
mov
mov
push
pop
dec
add
repnz
inc
rol
push
fistpll
push
aas
rcrb
popf
inc
sbb
mov
or
insb
pop
jmp
insb
scas
pop
ljmp
push
mov
jp
adc
ds
pop
psrlw
xchg
dec
xchg
clc
xor
add
ss
aad
into
fiaddl
add
repz
push
or
aaa
int
sbb
pusha
rcl
les
cli
shrl
cld
fmuls
mov
xor
roll
adcl
mov
loopne,pn
test
push
sub
sub
jle
inc
dec
cmp
mov
ds
add
push
std
push
mov
xor
out
and
repz
mov
ss
jmp
jne
pop
icebp
ret
cmp
jno
test
add
xor
push
lcall
jg
lahf
rol
dec
mov
or
mov
ja
xchg
mov
cmc
out
sub
outsl
pop
xor
and
je
sahf
pmaxsw
arpl
scas
jge
and
dec
test
pop
scas
cs
pop
lahf
popl
ljmp
adc
mov
xor
or
cli
or
adcl
xor
mov
xor
sbb
pop
loopne
cmp
adc
xchg
cmp
add
dec
add
movsb
mov
imul
nop
xor
mov
pop
jle
pop
or
xchg
and
aas
aaa
sbb
sbb
adc
cli
pop
cmp
rcll
mov
sarl
es
pop
subl
adc
push
jge
push
push
inc
add
movsb
int3
popa
cmp
addb
add
fs
and
popf
or
fdiv
adc
dec
pop
push
aad
push
adc
jbe
adc
idivb
add
inc
ljmp
repnz
pushf
pop
stos
test
add
inc
cmp
mov
je
xor
rcll
push
xlat
push
add
mov
jnp
pop
nop
adcb
aaa
or
pop
jbe
scas
jbe
shrb
sbb
pop
sti
mov
bound
push
test
lret
lahf
scas
fninit
movsl
test
pop
out
out
add
aaa
xlat
inc
jge
sbb
pop
sub
xor
repz
mov
or
pusha
mov
data16
adc
fdivl
xor
stos
fildll
aam
sbb
push
add
enter
add
pop
or
add
loop
cli
xchg
leave
test
push
mov
mov
add
or
adc
rolb
ret
inc
adc
in
test
adc
call
icebp
outsl
cmp
and
shrb
push
pop
stos
dec
mov
dec
push
cmovb
je
inc
insb
push
imul
mov
and
and
sti
das
push
and
call
sti
adc
dec
jae
mov
mov
lock
pushl
jo
dec
inc
int3
cmp
call
jno
rolb
int3
shl
aaa
fcomps
arpl
gs
icebp
mov
call
out
pusha
imul
jg
hlt
inc
push
sbb
dec
fdivl
lods
nop
xchg
cmp
mov
push
push
stos
dec
mov
sti
and
movsb
dec
sahf
cmp
je
jb
dec
cld
sbb
ja
xchg
inc
in
cmp
sahf
adc
shll
push
into
addl
and
aam
or
pop
lds
xchg
mov
mov
jp
call
pop
push
in
jp
fadds
mov
insb
lods
mov
bound
mov
inc
fs
js
jecxz
and
add
bound
subb
ret
cli
outsl
inc
adc
sub
and
inc
orl
adc
lret
icebp
ljmp
mov
jb
mov
xchg
cmp
aas
jbe
cmpsb
or
out
inc
inc
mov
mov
pop
mov
adc
call
push
out
rorl
jecxz
sbb
xor
mov
pop
fnstcw
cmp
test
out
xor
leave
ret
decl
insl
dec
mov
lods
inc
jg
xor
pushf
cmc
cld
mov
pop
lods
flds
icebp
fisttps
add
int3
inc
je
sarl
and
inc
rol
pop
pop
push
jle
clc
jg
sbb
sub
je
rclb
cmp
cwtl
cwtl
add
cmc
das
in
inc
sbb
inc
xor
cli
pop
add
ljmp
add
mov
mov
or
lea
call
icebp
pushl
sub
fiaddl
stos
or
mov
je
and
jb
fimuls
dec
cmp
jbe
aaa
cltd
movsl
imul
xorb
mov
jmp
les
das
push
outsb
shll
pop
jns
xchg
jecxz
hlt
mov
incb
xor
xor
push
adc
xlat
pop
and
adc
dec
push
pop
andb
scas
addb
inc
clc
jmp
sbb
out
mov
inc
jg
fdiv
adc
adc
sub
xor
in
decl
inc
imul
sub
xchg
add
pop
mov
bound
scas
push
push
push
aam
fistps
or
cli
mov
adc
push
sbb
leave
test
mov
rorb
nop
pusha
mov
decl
pop
xor
pop
arpl
lods
sbb
add
xchg
add
dec
xchg
fbstp
insl
pop
pop
sarb
out
push
loopne
push
out
sbb
dec
xchg
pusha
xor
mov
je
outsb
mov
mov
adc
les
ljmp
outsl
xchg
mov
and
movsl
or
cmp
clc
pop
xchg
pop
cld
pmullw
ss
movsl
enter
mov
sub
jo
adc
jne
jg
jbe
pop
mov
mov
xlat
dec
sub
pop
insb
or
xchg
and
inc
test
pop
clc
test
adc
dec
dec
pop
xor
sbbb
mov
or
push
mul
xchg
cmp
push
jle
mov
add
dec
test
sbb
mov
icebp
jmp
xchg
or
mov
xchg
push
dec
sbbl
or
cwtl
das
mov
imul
jnp
fisttps
cmc
fwait
addl
mov
and
xchg
and
jns
adc
pop
fs
dec
popf
mov
push
jge
dec
bound
dec
xchg
daa
jp
inc
aaa
ficoms
jmp
sbb
jl
nop
sub
mov
pushl
imull
lahf
test
cmpsl
adc
inc
mov
adc
mov
faddl
fldcw
idivb
pop
sub
xor
xchg
pop
lret
insl
lret
aas
icebp
inc
js
aad
or
mov
stc
and
cmp
sbb
call
test
outsb
pop
and
fisubrl
testb
stos
and
mov
rorb
fadds
adc
xchg
jg
pop
rcll
adc
pop
loopne
add
and
out
ljmp
mov
inc
mov
lahf
mov
nop
pushf
fldt
sbb
sarl
fwait
mov
inc
mov
sbb
xchg
stos
jg
rcl
jp
pop
scas
or
std
js,pn
dec
aas
add
jmp
sub
aas
xchg
outsl
jns
mov
and
xchg
sub
push
jge
subb
test
mov
test
orb
xchg
lds
in
mov
or
or
inc
sub
sbb
sbb
sahf
fwait
adc
jg
dec
pop
or
mov
jmp
jecxz
xchg
clc
loopne
jb
inc
cmpsb
sbb
cli
jl
add
loop
aaa
adc
stos
xor
dec
cmc
xor
and
pop
mov
dec
jmp
mov
mov
fldt
mov
pop
mov
cmpsb
cmpsl
in
jp
call
aaa
aaa
pop
mov
je
movsb
mov
jne
out
add
int3
loopne
shl
ds
xor
addr16
dec
xor
fistps
mov
push
stos
fadds
loop
inc
ja
out
add
xor
xlat
loop
cld
inc
clc
or
ss
mov
adc
test
dec
mov
sbb
or
and
bound
outsb
inc
pop
sub
cmpsb
loop
inc
mov
or
xchg
mov
dec
xchg
mov
fcoms
ret
ret
enter
mov
push
mov
es
dec
cmp
and
aaa
jecxz
add
pop
mov
es
cmpsb
jle
jns
repnz
nop
cmc
jmp
push
adc
mov
jbe
pop
add
ja
jae
fs
scas
orb
rorb
sbb
mov
jge
or
outsl
in
xchg
push
cli
jmp
test
or
in
mov
pop
ds
push
add
push
jle
fildll
jecxz
cld
clc
and
inc
and
push
mov
adc
mov
jns
adc
addl
hlt
jg
stos
popa
mov
ds
xchg
cli
dec
and
rcrl
enter
xlat
sbb
lret
push
stos
push
adc
insl
cld
movsl
mov
cmp
add
addr16
out
cmpl
das
in
shll
and
sbbl
xchg
incl
fwait
pop
xor
loop
rolb
sub
cmp
test
loope
lock
pop
call
xchg
pop
push
cld
fidivrl
pop
cld
test
out
aas
dec
mov
mov
sub
rep
add
call
ffreep
cld
stos
and
inc
inc
fwait
xchg
in
and
inc
shrb
xchg
mov
sub
outsl
pop
pop
loop
mov
push
cmp
data16
xchg
std
das
test
sub
dec
outsb
stos
mov
fcoml
mov
mov
sub
and
and
and
loop
lods
imul
jl
jo
dec
aas
lock
pop
js
jns
in
push
mov
fwait
popa
mov
shrb
add
icebp
js
int3
jp
xchg
cli
notb
push
mov
daa
call
iret
pop
fcmovnu
pop
addr16
push
cmp
int3
das
dec
mov
mov
inc
vmovss
es
jle
int
adcl
lea
aas
sbb
test
cmp
fstpl
mov
sbb
outsl
insb
repz
mov
ficoml
pop
pop
mov
loopne
dec
sbb
andl
sub
aam
mov
lods
sbb
insb
fdivs
aas
adcb
addr16
mov
shr
xchg
and
lcall
pop
negl
pop
pop
adc
fidivrl
mov
jo
push
and
push
pop
inc
and
push
pushf
sbb
jb
or
insl
sub
aaa
in
jne
jb
ljmp
pop
clc
add
lea
cld
mov
outsb
and
cld
movsb
pusha
adc
fcompl
mov
push
inc
fbld
outsl
cmp
ss
push
shll
push
add
testl
jo
pushf
push
adc
outsb
stos
pop
pop
popf
js
cli
push
cmp
mov
inc
insl
fstpt
lcall
xchg
push
inc
fistl
icebp
push
fsubs
scas
or
cmc
dec
insl
mov
in
incb
divb
mov
sahf
mov
in
in
mov
cmp
iret
cmpsb
nop
jg
mov
mov
push
int3
ljmp
ss
or
shrb
dec
sbb
fsubrl
push
cmc
sub
cld
cmp
xor
aaa
call
mov
xor
add
xlat
insl
test
sbb
pop
mov
into
jle
mov
add
icebp
add
lahf
test
push
stos
mov
cli
aam
inc
in
inc
dec
sub
cld
fld
jecxz
test
xor
pop
mov
add
stos
insl
jmp
jae
data16
leave
add
aam
psrld
pusha
pushf
sbb
fs
aad
push
sbb
mov
inc
xchg
mov
pop
clc
sbb
insl
lods
loopne
push
adc
push
lds
jecxz
les
mov
lea
xchg
sbb
addb
inc
add
lock
sbb
inc
cmpsb
push
ret
push
pop
in
sub
sbbb
insb
mov
call
mov
ret
sbb
jnp
inc
je
adc
lahf
add
fildl
cs
outsb
xchg
pop
shll
cli
cmpb
shlb
pushf
cmp
mov
adc
leave
fsts
sbb
push
pop
fcomps
fidivrl
xchg
imul
aad
enter
rolb
jge
movsl
scas
or
add
repz
ds
gs
adcb
cwtl
loop
data16
fadds
sub
ds
or
lods
mov
adc
mov
loopne
and
movsl
test
push
jnp
or
adc
into
adc
and
or
cwtl
pusha
insl
sub
mov
mov
sub
decl
xor
lcall
fdivrl
decl
shr
pop
mov
shlb
push
jl
mov
cmc
pushl
loopne
adc
adc
sbb
rolb
or
fildl
fistpl
fistpl
shrl
push
adcb
pop
mov
sti
ffreep
ret
mov
mov
pushf
scas
and
jg
sub
xchg
sub
insb
jno
aas
inc
stos
sbb
mov
jge
cs
xchg
jmp
cmc
repnz
mov
sub
push
jge
aam
mov
lret
leave
inc
sarb
pop
xlat
addl
stos
jl
lock
cmpsb
or
std
dec
sbb
xchg
dec
cmp
xchg
mov
lret
push
enter
leave
mov
inc
jl
fcoml
jns
stc
xor
out
mov
add
fimuls
shrl
test
jmp
or
adc
inc
and
add
xchg
clc
aaa
sbb
test
mov
fwait
cmpsb
cmp
sbb
sub
sti
inc
push
scas
das
fldl
clc
das
addr16
push
cmp
cmc
lea
psubusw
add
lods
cmc
push
pop
movsl
mov
test
jb
fdivrs
shll
sbb
lds
mov
mov
jg
dec
hlt
push
sbb
stc
pop
jl
imul
push
pop
call
xor
inc
dec
mov
out
push
aas
movsl
mov
and
mov
xchg
adc
repz
cmc
mov
fnsave
mov
ss
sub
sbb
push
or
test
je
imulb
addr16
inc
mov
ljmp
hlt
xchg
inc
cmp
mov
lods
or
test
sub
stos
inc
add
sub
and
inc
inc
pop
orb
pushl
cwtl
addb
add
insl
jo
jb
push
je
imul
incl
je
outsl
fs
gs
popa
outsb
fs
je
jb
arpl
sti
neg
jae
push
inc
jne
das
outsb
je
push
ljmp
outsb
push
jo
imul
mov
in
je
jb
push
imul
mov
jns
sbb
gs
popa
je
dec
dec
aaa
addr16
addr16
ss
sbb
outsl
ja
inc
imul
pusha
in
fdivrs
sbb
dec
xor
int
xor
lcall
jo
inc
outsb
jbe
xchg
insl
sbb
jae
jo
sbb
neg
inc
jae
or
push
imul
cltd
inc
insb
es
outsb
xor
stc
fisubrl
pusha
jne
dec
popa
insl
push
jne
mov
push
add
insl
imul
repnz
je
inc
jo
sti
jne
dec
outsb
xor
push
fstpt
mov
movsl
push
out
int3
in
notb
andb
or
and
push
lods
lods
mov
sbb
insl
inc
add
popf
imul
mov
iret
popa
out
rclb
jo
adc
sbb
or
repz
es
mov
xor
mov
rolb
pop
sti
es
aas
outsl
sbb
mov
insb
addr16
fs
inc
insl
and
xchg
inc
arpl
inc
push
push
test
cmp
scas
cmc
or
push
inc
dec
add
add
dec
loopne
psrld
add
sti
fsubl
mov
push
add
jmp
out
out
adc
inc
add
or
add
neg
ret
lcall
xor
ss
xor
pop
push
das
enter
pushf
nop
fs
add
fmull
push
pushf
push
je,pn
out
in
out
js
push
and
nop
and
add
pusha
iret
pop
and
popa
jb
push
mov
push
pop
add
inc
add
fs
popa
or
xor
pop
push
xor
xor
sahf
std
enter
jb,pn
mov
insl
cmp
daa
inc
jae
movsb
jmp
mov
cld
sti
lods
sbb
adc
add
add
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
adc
add
sub
add
push
add
add
add
add
add
add
add
add
add
or
add
add
in
rolb
add
add
add
add
add
add
addb
add
or
add
aam
add
add
add
add
add
add
addb
add
or
add
add
add
pop
add
call
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
dec
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
arpl
imul
add
add
add
add
add
add
push
add
add
sbb
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
outsb
add
jae
and
dec
add
je
je
outsl
add
add
popa
add
add
add
popa
add
and
dec
add
jne
insb
add
add
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
sbb
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
insb
add
add
and
inc
add
add
and
inc
add
ja
jb
jns
and
dec
add
outsb
add
jb
and
push
add
je
add
add
data16
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
push
add
outsb
add
and
inc
add
add
outsb
add
add
insb
add
arpl
add
add
js
arpl
add
add
add
add
add
add
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
add
outsb
add
add
js
add
add
adc
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
add
add
add
jns
outsl
add
and
inc
add
popa
add
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
mov
inc
inc
and
add
inc
push
dec
and
push
add
fs
add
or
or
and
bound
mov
mov
or
mov
sub
mov
adc
and
mov
and
adc
xor
and
and
adc
sub
sub
adc
push
inc
nop
adc
add
inc
add
adc
adc
inc
add
and
add
inc
xor
inc
or
nop
add
and
or
or
add
push
rolb
or
inc
push
add
and
mov
sub
adc
add
or
inc
adc
or
or
and
adc
inc
pusha
adc
nop
add
dec
nop
adc
add
dec
orb
inc
xor
adc
nop
add
add
add
and
and
and
adc
inc
and
inc
bound
adc
dec
and
dec
push
and
or
inc
inc
adc
and
dec
mov
pusha
inc
push
and
adc
add
xor
and
adc
adc
and
mov
adc
and
add
adc
bound
mov
or
inc
add
and
bound
add
add
add
orb
test
or
adc
or
add
inc
inc
rolb
mov
nop
add
or
bound
pusha
sub
test
and
add
adcb
or
or
add
inc
adc
nop
mov
nop
andb
inc
add
nop
push
mov
or
adc
bound
inc
sub
and
sub
pusha
nop
mov
and
inc
mov
test
adc
sub
mov
and
nop
add
adcb
adc
rorb
inc
dec
inc
add
inc
and
adc
adc
inc
inc
adcb
adc
or
dec
or
and
dec
sub
pusha
adc
adc
adc
xor
add
xorb
add
and
adc
adc
orb
and
add
and
test
or
or
pusha
add
rolb
adc
or
addb
inc
pusha
mov
adc
bound
or
rolb
adc
adc
mov
adc
or
mov
add
add
add
add
popf
add
add
add
add
add
add
add
add
jl
add
incb
repz
add
jnp
add
mov
fiadds
incb
ja
in
add
mov
filds
jg
incb
jge
fiadds
stc
mov
int
pop
clc
into
add
faddl
cmc
cli
int
idivl
fldl
push
jl
add
in
add
std
fiadds
stc
mov
int3
add
filds
fnstcw
add
into
add
mov
int3
add
int3
add
fldl
fistpll
incl
jns
in
add
sti
fiadds
pop
mov
std
add
clc
in
add
cld
iret
add
stc
iret
add
cld
iret
add
jg
add
cmp
cld
add
std
add
incl
jns
int
push
cmp
add
cmp
add
int
xlat
std
filds
fnstsw
into
add
mov
filds
pop
ds
add
jl
add
ds
add
faddl
push
mov
cld
add
mov
fiadds
cmc
mov
faddl
fstpt
add
in
add
stc
into
add
out
add
into
add
out
add
cmp
add
jnp
add
cmp
add
jle
add
sti
out
add
js
add
filds
fstpt
add
cmp
add
jle
add
into
add
dec
add
out
add
mov
into
add
jle
add
int3
add
out
add
cmp
add
ds
pop
cld
filds
pop
std
fldl
cmc
mov
into
add
int
cmc
std
into
add
int
jle
add
incb
jnp
filds
pop
cmp
incb
push
mov
cld
add
fldl
cld
iret
add
out
add
incl
jns
in
add
incl
idivl
add
iret
add
fiadds
idivl
add
cmp
add
out
add
cli
out
add
stc
faddl
push
cmp
int3
add
cli
faddl
push
stc
filds
repz
incb
jns
fldl
stc
jl
add
out
add
jg
add
clc
faddl
repz
add
incb
sarl
in
add
mov
int3
add
faddl
xlat
mov
out
add
cmp
add
aas
fldl
jge
fldl
push
mov
incl
in
add
std
add
out
add
cmp
add
fiadds
push
cmp
add
mov
incb
jae
int
cmc
mov
fiadds
fstpt
in
add
in
add
into
add
cmp
add
stc
out
add
std
add
out
add
out
add
incb
jge
std
add
mov
fldl
idivl
add
in
add
sti
std
add
cld
add
cmp
int
cmc
jl
add
iret
add
mov
filds
ja
int
sti
mov
out
add
cmp
add
cmp
add
cli
incl
sarl
int3
add
mov
out
add
filds
jnp
iret
add
clc
int3
add
mov
out
add
cld
add
faddl
xlat
cmp
add
incb
cmc
mov
into
add
out
add
out
add
mov
int
push
mov
int
fistpll
add
cmp
filds
fnstcw
faddl
jno
in
add
int
jne
fldl
push
mov
iret
add
fldl
jnp
incl
fstpt
fldl
fistpll
out
add
faddl
stc
cli
incl
push
aas
in
add
js
add
mov
std
add
faddl
icebp
cmp
add
out
add
fiadds
sarl
faddl
pop
dec
add
out
add
in
add
mov
in
add
cmp
add
in
add
jge
add
faddl
jne
int3
add
int
jg
incb
ja
faddl
sarl
out
add
fiadds
jnp
incl
repz
add
stc
cld
add
filds
fnstsw
in
add
fldl
push
cli
in
add
std
add
into
add
pop
sub
adc
jge
push
push
mov
sbb
xor
imul
leave
push
lret
and
sbb
test
loope
or
jle
adc
aaa
mov
jecxz
jne
pop
sub
pop
push
movsb
sub
cmp
jnp
aas
pop
flds
mov
sub
dec
sbb
xor
in
ss
es
fsubr
add
inc
lcall
xor
push
dec
jbe
rcll
sbb
inc
and
xor
push
push
roll
add
mov
mov
push
dec
insl
inc
aaa
shll
pushf
jnp
test
into
cmp
les
xor
popf
push
pop
or
ret
add
mov
outsl
mov
or
mov
push
in
fildl
add
clc
xchg
pop
cmp
xor
rcl
popa
pusha
mov
mov
fwait
inc
sbb
andl
mov
sub
or
and
xor
addr16
push
pop
loopne
rcr
add
lds
mov
cmpsl
stc
xchg
sbb
dec
jnp
xchg
out
push
mov
sub
bnd
into
sub
stc
shlb
mov
out
dec
dec
jne
lea
ret
cmpsb
into
outsb
mov
xchg
sbb
pop
push
mov
adc
mov
add
adc
rol
lock
push
or
pop
enter
inc
mov
or
or
loope
mov
scas
stos
daa
int3
fimull
lcall
fs
insb
loopne
popa
inc
jmp
leave
orl
lea
push
mov
and
mov
pop
adc
das
xchg
dec
mov
or
lods
inc
sub
arpl
test
xchg
jne
pop
sub
js
jg
test
dec
xchg
cmc
fs
adc
and
mov
stc
cmp
or
xor
mov
dec
js
call
lret
int
dec
aam
mov
ret
in
into
data16
dec
push
std
adc
in
fs
lahf
mov
jg
push
xor
pushf
or
add
adc
pop
hlt
sarl
add
mov
sbb
insl
mov
mov
add
stc
jle
xchg
adc
mov
pop
repz
or
iret
mov
mov
leave
icebp
sub
add
mov
push
xchg
repnz
pop
lods
imul
mov
and
daa
emms
pusha
in
add
gs
sahf
jg
sar
cmp
mov
pushf
or
pop
push
hlt
sub
cmp
sub
xchg
ror
xor
mov
cltd
xchg
adcl
fmull
aam
aad
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
add
add
filds
add
add
add
filds
add
add
add
filds
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
insl
arpl
xor
fs
insb
add
insb
ja
jo
cs
insb
add
gs
xor
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
jb
jo
jb
jns
push
add
push
popa
je
inc
jo
outsb
fs
add
add
je
inc
