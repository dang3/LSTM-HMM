push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
add
mov
jmp
push
call
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
add
mov
movl
movl
mov
imul
imul
mov
lea
mov
mov
mov
sub
imul
mov
jmp
call
movl
movl
lea
mov
movl
mov
mov
and
mov
add
cltd
idiv
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
add
mov
cltd
idiv
mov
push
call
lea
mov
mov
and
mov
add
cltd
idiv
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
and
imul
add
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
or
add
add
mov
push
call
call
jmp
push
call
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
call
push
call
movl
movl
lea
mov
lea
mov
mov
mov
mov
sub
mov
movl
mov
cmp
je
movl
mov
add
mov
cltd
idiv
add
mov
lea
mov
movl
mov
add
mov
mov
cltd
idiv
mov
sub
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
mov
add
push
push
push
mov
movl
movl
mov
cmp
jl
mov
add
mov
cltd
idiv
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
lea
mov
mov
mov
imul
mov
sub
mov
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
movl
mov
or
mov
or
imul
add
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
and
sub
mov
jmp
jmp
movb
movl
push
push
lea
push
push
call
movl
jmp
mov
ret
mov
movb
movl
movzbl
test
je
call
xor
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
cltd
idiv
imul
mov
call
movl
lea
mov
movl
mov
mov
and
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
and
sub
mov
mov
sub
mov
jmp
movl
mov
or
sub
mov
sub
mov
movl
mov
add
mov
cltd
idiv
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
lea
mov
mov
mov
or
mov
sub
mov
cmpl
jg
lea
mov
mov
mov
imul
imul
mov
lea
mov
lea
mov
mov
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
cltd
idiv
imul
mov
movl
mov
sub
mov
movl
mov
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
imul
imul
mov
push
call
movl
jmp
mov
add
mov
cmpl
jge
call
jmp
jmp
push
call
movl
mov
and
mov
and
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
jmp
mov
add
mov
cmpl
jge
call
lea
mov
mov
mov
imul
mov
sub
mov
push
push
call
jmp
movl
mov
add
add
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
or
imul
add
mov
jmp
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
cmp
jne
call
jmp
call
push
push
call
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
sub
imul
mov
movl
mov
imul
add
mov
jmp
movl
movl
mov
add
mov
cltd
idiv
mov
push
push
call
movl
movl
lea
mov
mov
mov
sub
add
mov
push
push
call
cmpl
jg
push
call
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
mov
imul
mov
jmp
call
jmp
movl
jmp
mov
add
mov
cmpl
jge
push
call
jmp
cmpl
jg
movl
movl
mov
cmp
jg
movl
lea
mov
mov
mov
add
mov
sub
mov
mov
add
imul
mov
movl
mov
sub
imul
mov
jmp
lea
push
push
call
lea
mov
lea
mov
mov
mov
mov
imul
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
lea
push
call
mov
and
mov
add
cltd
idiv
mov
sub
mov
lea
mov
lea
mov
mov
mov
and
mov
add
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
mov
or
imul
imul
mov
movl
cmpl
jne
mov
imul
mov
lea
mov
mov
mov
imul
mov
push
push
push
push
call
jmp
call
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
or
sub
imul
mov
movl
lea
mov
mov
add
mov
cltd
idiv
add
mov
movl
mov
imul
mov
movl
mov
or
imul
imul
mov
call
mov
imul
imul
mov
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
sub
mov
mov
pop
ret
int3
int3
push
mov
sub
movl
movl
lea
mov
mov
add
mov
cltd
idiv
mov
movl
movl
mov
add
mov
push
push
push
call
lea
push
push
call
cmpl
je
movl
lea
mov
lea
mov
mov
mov
and
mov
mov
and
add
imul
mov
push
push
call
jmp
lea
mov
mov
add
mov
mov
cltd
idiv
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
or
mov
and
imul
imul
mov
movl
mov
or
imul
mov
sub
mov
jmp
push
call
movl
lea
mov
lea
mov
mov
add
mov
mov
cltd
idiv
mov
sub
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
push
push
call
movl
movl
lea
mov
lea
mov
mov
mov
mov
add
mov
movl
lea
mov
mov
mov
imul
add
mov
mov
or
add
mov
sub
mov
lea
mov
mov
mov
sub
imul
mov
cmpl
jne
mov
add
mov
cltd
idiv
mov
cmpl
jl
lea
mov
mov
mov
or
sub
mov
jmp
movl
mov
and
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
call
jmp
movl
movl
mov
sub
mov
movl
mov
add
mov
movl
lea
mov
movl
mov
mov
and
mov
add
cltd
idiv
add
mov
mov
sub
mov
call
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
and
mov
add
mov
jmp
cmpl
je
movl
jmp
mov
add
mov
cmpl
jge
lea
mov
mov
mov
imul
imul
mov
jmp
movl
movl
lea
mov
mov
add
mov
cltd
idiv
add
mov
push
call
jmp
movl
movl
mov
add
imul
mov
mov
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
add
mov
cltd
idiv
add
mov
lea
mov
mov
mov
sub
add
mov
call
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
cmp
jg
call
jmp
movl
lea
mov
mov
mov
add
mov
movl
cmpl
jg
movl
mov
or
mov
sub
mov
lea
mov
movl
movl
mov
mov
and
mov
add
cltd
idiv
mov
mov
and
add
mov
sub
mov
jmp
movl
movl
lea
mov
mov
mov
imul
mov
movl
cmpl
je
mov
and
mov
or
add
mov
call
movl
movl
mov
or
mov
and
add
mov
jmp
lea
push
call
movl
jmp
mov
add
mov
cmpl
jge
lea
mov
mov
and
mov
imul
mov
call
movl
movl
mov
add
mov
cltd
idiv
mov
jmp
movl
movl
lea
mov
mov
mov
sub
mov
movl
mov
or
sub
mov
sub
mov
mov
imul
add
mov
mov
imul
add
mov
mov
or
mov
or
sub
imul
mov
lea
push
call
mov
pop
ret
int3
push
mov
sub
movl
movl
lea
mov
mov
add
mov
cltd
idiv
mov
sub
mov
lea
mov
mov
mov
mov
push
call
add
shl
push
push
push
push
call
mov
movl
movl
mov
or
add
add
mov
mov
mov
movl
jmp
mov
add
mov
cmpl
jae
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
push
call
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
add
mov
cltd
idiv
mov
jmp
mov
mov
mov
push
mov
push
push
push
push
call
push
call
add
movl
mov
add
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
cmpl
jg
movl
movl
lea
mov
mov
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
sub
mov
sub
mov
jmp
push
push
push
call
push
push
call
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
and
mov
and
sub
mov
sub
mov
mov
add
imul
mov
movl
cmpl
jne
movl
movl
lea
mov
mov
add
mov
cltd
idiv
mov
mov
sub
add
mov
call
jmp
call
push
call
push
lea
push
call
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
movl
mov
and
add
mov
jmp
movl
movl
mov
add
mov
cltd
idiv
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
cmp
jg
movl
movl
lea
mov
mov
mov
add
mov
sub
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
push
call
movl
lea
mov
mov
mov
imul
mov
jmp
movl
movl
movl
mov
or
mov
add
cltd
idiv
mov
movl
cmpl
je
movl
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
push
push
call
jmp
push
call
call
call
movl
movl
mov
or
add
mov
movl
mov
or
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
lea
mov
mov
mov
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
and
mov
add
cltd
idiv
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
call
jmp
push
push
push
push
call
jmp
call
movl
movl
mov
or
add
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
or
sub
add
mov
push
push
call
lea
mov
mov
mov
and
imul
imul
mov
jmp
cmpl
je
push
push
call
movl
mov
add
mov
cltd
idiv
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
mov
and
imul
mov
push
lea
push
call
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
movl
mov
mov
or
imul
imul
mov
push
push
push
push
call
call
push
call
movl
mov
add
mov
cltd
idiv
mov
sub
mov
movl
mov
imul
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
sub
mov
push
push
call
movl
cmpl
jne
movl
lea
mov
mov
mov
add
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
and
mov
and
imul
mov
lea
mov
mov
mov
sub
mov
sub
mov
jmp
lea
push
call
jmp
lea
push
call
movl
lea
mov
mov
and
mov
add
cltd
idiv
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
add
mov
cltd
idiv
add
mov
movl
movl
mov
add
mov
cltd
idiv
add
mov
call
jmp
push
push
call
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
imul
mov
jmp
movl
mov
add
mov
cltd
idiv
mov
movl
mov
imul
add
mov
mov
pop
ret
int3
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
push
lea
push
call
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
lea
mov
mov
mov
mov
jmp
movl
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
jmp
movl
movl
lea
mov
mov
or
mov
mov
sub
mov
lea
push
push
call
movl
lea
mov
mov
mov
add
mov
movl
movl
mov
or
mov
sub
add
mov
cmpl
jl
movl
jmp
mov
add
mov
cmpl
jge
call
jmp
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
sub
mov
push
call
push
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
cmpl
jne
movl
cmpl
jne
movl
movl
mov
imul
mov
movl
mov
add
mov
cltd
idiv
mov
movl
movl
movl
mov
or
add
imul
mov
movl
cmpl
jg
call
movl
lea
mov
mov
mov
or
mov
add
cltd
idiv
mov
movl
lea
mov
mov
mov
or
imul
mov
movl
movl
lea
mov
mov
and
mov
add
imul
mov
movl
movl
lea
mov
mov
mov
and
imul
mov
sub
mov
mov
and
mov
add
cltd
idiv
add
mov
push
call
movl
jmp
mov
add
mov
cmpl
jge
movl
jmp
mov
add
mov
cmpl
jge
call
jmp
jmp
mov
pop
ret
push
mov
sub
movl
movl
mov
imul
mov
sub
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
imul
imul
mov
xor
je
movl
lea
mov
lea
mov
mov
mov
mov
sub
mov
lea
mov
mov
mov
add
add
mov
push
call
push
push
call
movl
mov
or
sub
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
or
add
imul
mov
lea
mov
mov
mov
imul
mov
sub
mov
jmp
call
movl
movl
lea
mov
mov
mov
sub
mov
mov
sub
mov
sub
mov
mov
or
add
imul
mov
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
mov
and
mov
mov
sub
mov
movl
movl
mov
and
sub
add
mov
movl
mov
or
mov
add
cltd
idiv
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
lea
mov
mov
mov
imul
mov
jmp
cmpl
jg
mov
add
imul
mov
call
push
call
mov
pop
ret
int3
int3
push
mov
sub
call
call
movl
movl
lea
mov
movl
mov
mov
and
sub
mov
lea
mov
mov
mov
or
add
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
add
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
cmp
je
call
lea
mov
mov
mov
add
mov
sub
mov
jmp
movl
movl
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
add
mov
call
movl
lea
mov
mov
add
mov
cltd
idiv
mov
jmp
jmp
movl
movl
mov
or
add
mov
movl
lea
mov
mov
or
mov
mov
sub
mov
movl
mov
add
mov
sub
mov
movl
lea
mov
mov
mov
or
mov
sub
mov
push
push
call
cmpl
jl
movl
lea
mov
mov
add
mov
cltd
idiv
add
mov
jmp
mov
and
mov
add
cltd
idiv
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
imul
mov
movl
movl
lea
mov
lea
mov
mov
mov
mov
add
add
mov
mov
add
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
push
push
call
jmp
mov
or
add
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
call
movl
cmpl
je
movl
movl
mov
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
add
mov
sub
mov
jmp
jmp
movl
mov
cmp
jg
call
movl
lea
mov
movl
mov
mov
or
imul
imul
mov
push
call
movl
movl
mov
add
mov
cltd
idiv
mov
cmpl
jne
cmpl
jg
movl
mov
add
mov
sub
mov
movl
movl
mov
add
mov
cltd
idiv
add
mov
movl
lea
mov
mov
mov
add
imul
mov
jmp
push
push
call
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
mov
add
mov
cltd
idiv
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
lea
mov
mov
add
mov
mov
cltd
idiv
imul
mov
jmp
jmp
push
push
call
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
sub
mov
sub
mov
push
push
call
jmp
movl
jmp
mov
add
mov
cmpl
jge
mov
sub
mov
sub
mov
movl
lea
mov
mov
add
mov
mov
cltd
idiv
imul
mov
jmp
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
pop
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
push
push
call
add
mov
mov
cmp
jne
orl
mov
mov
pop
pop
pop
leave
ret
mov
cmpw
jne
add
mov
mov
cmp
je
cmp
jne
cmpw
jne
add
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpw
jbe
add
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
int3
jmp
jmp
jmp
jmp
jmp
push
push
call
pop
pop
ret
jmp
xor
ret
ret
jmp
jmp
cmpl
jne
pushl
call
pop
ret
push
push
pushl
call
add
ret
pushl
call
neg
sbb
pop
neg
dec
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
jmp
jmp
jmp
cli
inc
add
add
add
loopne
add
int3
inc
add
mov
inc
add
stos
inc
add
add
add
adc
add
sub
add
cmp
add
push
inc
add
add
add
jp
add
mov
add
dec
add
lock
add
fiadds
int3
inc
add
mov
inc
add
cwtl
inc
add
inc
add
test
cmp
add
add
add
add
push
dec
add
add
add
inc
add
loopne
add
rolb
add
inc
add
lods
inc
add
mov
inc
add
test
add
add
add
inc
add
cmp
add
sbb
add
add
add
sbb
add
add
add
inc
add
fadds
add
inc
add
testb
dec
inc
add
sbb
add
inc
add
cmp
add
jp
add
fs
add
pop
inc
add
or
add
mov
add
xchg
add
xor
xor
popa
bound
gs
add
add
gs
jo
bound
add
add
je
inc
jne
jb
outsb
je
push
and
jns
dec
outsl
outsb
imul
dec
imul
cmp
and
dec
popa
jae
push
popa
bound
dec
outsb
imul
imul
imul
arpl
outsb
and
imul
inc
outsb
jae
push
js
insl
popa
js
arpl
bound
gs
jae
cmp
add
imul
push
gs
and
push
inc
outsl
insl
jo
imul
dec
gs
pop
jnp
push
push
and
insb
gs
jnp
dec
dec
dec
push
push
inc
dec
dec
pop
push
inc
inc
jge
add
inc
imul
and
and
je
jae
jo
outsl
jb
gs
and
jb
outsb
je
push
jns
bound
and
je
and
xor
and
insb
outsl
ja
and
insl
bound
and
je
and
data16
and
inc
outsl
popa
jb
and
imul
and
gs
and
add
inc
push
pop
dec
dec
inc
inc
pop
dec
dec
inc
pop
dec
dec
push
inc
dec
pop
inc
inc
pop
pop
push
inc
dec
pop
inc
dec
inc
inc
dec
dec
push
push
dec
inc
pop
dec
dec
inc
inc
add
add
pop
add
add
add
inc
push
push
push
pop
inc
dec
dec
inc
push
pop
dec
push
dec
push
dec
push
dec
inc
pop
inc
inc
push
dec
push
push
add
add
xor
insb
insb
gs
insb
and
inc
and
jb
popa
je
ja
je
and
insb
outsl
jb
imul
add
add
inc
outsl
insl
jo
gs
and
push
arpl
outsl
arpl
outsl
jb
add
add
call
xor
add
xor
add
add
add
decl
adc
mov
add
movsb
inc
add
and
add
add
inc
add
cwtl
inc
add
lock
add
or
add
add
add
add
add
add
add
add
add
cs
add
lods
inc
add
clc
inc
add
pop
inc
add
push
add
add
inc
add
add
add
loopne
add
int3
inc
add
mov
inc
add
stos
inc
add
add
add
adc
add
sub
add
cmp
add
push
inc
add
add
add
jp
add
mov
add
dec
add
lock
add
fiadds
int3
inc
add
mov
inc
add
cwtl
inc
add
inc
add
test
cmp
add
add
add
add
push
dec
add
add
add
inc
add
loopne
add
rolb
add
inc
add
lods
inc
add
mov
inc
add
test
add
add
add
inc
add
cmp
add
sbb
add
add
add
sbb
add
add
add
inc
add
fadds
add
inc
add
testb
dec
inc
add
sbb
add
inc
add
cmp
add
jp
add
fs
add
pop
inc
add
or
add
mov
add
xchg
add
add
add
add
je
jne
jb
outsb
je
push
add
dec
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
mov
inc
gs
imul
je
add
gs
je
dec
popa
outsb
fs
add
fiadds
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
xchg
add
je
gs
imul
sbb
inc
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
jb
popa
je
dec
jne
gs
add
push
add
je
jne
jb
outsb
je
jb
arpl
jae
fs
add
inc
bound
addr16
jb
jae
outsb
je
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
repnz
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
dec
inc
push
dec
inc
dec
xor
cs
insb
add
stc
add
outsb
dec
arpl
add
insb
add
je
imul
add
fs
arpl
inc
add
push
imul
js
inc
add
inc
add
je
popa
jb
outsb
je
pop
add
je
outsl
jb
addr16
jne
fs
imul
add
outsl
jae
push
imul
add
je
gs
je
jo
imul
mov
fs
jne
jae
jb
add
arpl
imul
outsb
imul
outsb
outsl
ja
lods
add
push
imul
mov
fs
jne
jae
jb
jb
insl
inc
imul
outsb
jns
outsl
jo
jo
add
add
insb
gs
jae
inc
inc
add
inc
push
xor
cs
insb
add
add
inc
bound
je
outsl
arpl
add
add
je
gs
inc
outsl
insb
outsl
jb
add
inc
gs
gs
dec
gs
imul
inc
gs
popa
jae
gs
jp
jb
popa
jo
add
push
gs
inc
insb
imul
dec
xor
cs
insb
add
jo
dec
jae
push
jo
popa
je
add
inc
push
pop
push
push
xor
cs
insb
add
add
je
jo
gs
imul
je
add
push
inc
push
push
push
inc
push
dec
cs
insb
add
lret
gs
gs
pop
push
gs
add
mov
insb
outsb
add
dec
push
push
inc
push
push
cs
insb
add
roll
pop
gs
je
dec
add
arpl
inc
imul
gs
je
add
add
arpl
insb
outsb
add
addr16
popa
imul
add
add
outsb
imul
add
jae
je
jae
jb
popa
je
gs
add
popf
add
fs
jae
pop
imul
add
jo
pop
arpl
insl
outsl
fs
outsl
add
jo
pop
insw
outsl
fs
addl
je
popa
jo
pop
je
jo
add
mov
pop
arpl
je
outsl
insb
data16
add
pop
pop
fs
insb
outsl
outsb
gs
je
xchg
pop
outsl
outsb
gs
je
aas
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
imul
gs
je
jb
jne
dec
outsb
outsw
push
add
add
add
push
in
cli
mov
push
addr16
addl
pop
adcl
or
add
push
pushl
ud0
and
xlat
dec
add
shrb
add
rorl
adc
fistps
mov
cmp
add
lods
inc
jnp
pop
adc
push
mov
pushl
ud0
and
fisttps
call
mov
add
mov
lock
add
mov
sarl
pushl
out
jne
add
xchg
ret
rorb
dec
in
inc
cmp
sbb
js
lahf
push
push
fisubrl
jmp
jge
push
outsb
rorb
and
andps
mov
rol
mov
pushf
and
and
call
adcl
mov
xchg
data16
movsl
clc
add
in
inc
adc
in
mov
add
pusha
cld
push
add
add
push
call
sahf
ror
push
pushl
out
jne
add
xchg
ret
rorb
mov
sbb
lds
or
add
loope
or
adc
add
or
into
push
cwtl
xchg
push
pop
addr16
cmp
cmp
ret
leave
popf
stos
cwtl
call
cwtl
pop
cld
add
dec
adc
imul
stos
push
sti
das
xchg
imul
leave
xor
inc
cmp
or
jns
xor
ret
rorl
in
or
outsb
shlb
pop
and
xor
mov
xor
inc
bound
add
popa
xor
xchg
add
ja
mov
cltd
xor
test
into
add
jbe
shlb
add
mov
xchg
add
mov
inc
mov
mov
add
xlat
movsl
adc
add
inc
jno
cmp
ret
and
in
add
in
lea
cld
mov
mov
inc
sbb
lock
fwait
call
fucom
cmp
add
add
test
hlt
inc
add
or
and
mov
ftst
push
add
loopne
add
fwait
call
pop
cmpsl
je
sbb
je
push
lea
rolb
pushf
jne
push
addr16
stos
hlt
dec
les
dec
mov
ftst
jne
adc
lahf
call
out
pop
lock
addr16
add
push
push
shlb
add
mov
data16
dec
and
js
pop
cmpsl
pusha
push
add
mov
test
jne
movsb
shll
nop
mov
mul
addb
sbb
out
insl
sbb
ljmp
rcll
outsb
mov
adc
mov
jb
mov
add
add
orl
pop
ljmp
cmpsb
xchg
cmpsb
je
in
xor
pop
scas
mov
fstl
decb
push
out
popa
pop
and
add
sbb
add
cmpsb
inc
or
jl
adc
add
movsb
mov
inc
push
xor
notb
push
notb
jae
scas
call
add
push
shr
xlat
adc
data16
mov
testl
dec
add
mov
jmp
ja
inc
and
fwait
jl
shr
jl
roll
mov
addb
stos
or
pop
jae
push
in
jg
sbb
or
out
call
bnd
rep
jl
jp
xchg
add
mov
adc
xchg
stos
jbe
call
es
ret
sub
push
aam
inc
sbb
push
addr16
add
outsl
arpl
push
or
xor
add
pop
jb
push
bound
popa
add
push
xor
xor
or
jle
add
adc
inc
adc
or
addr16
imul
jb
dec
inc
pop
push
push
and
and
sbb
inc
push
or
xor
xor
pop
outsb
inc
pop
push
add
jp
insb
insb
push
add
push
add
push
add
push
add
push
stos
int
push
stos
int
mov
sub
add
lcall
test
in
sub
jnp
dec
pop
out
repnz
pusha
fiaddl
add
loopne
xor
cld
cmp
and
push
fcomps
jle
pop
dec
clc
pop
lods
imul
int
add
cmp
jno
sbb
push
cli
lods
push
jmp
shll
dec
inc
rcrl
out
repz
pop
clc
mov
fsts
pop
xor
in
rolb
aas
xor
popf
popa
inc
rorb
pop
jnp
popa
icebp
dec
enter
push
popf
enter
jnp
mov
or
loopne
jge
sbb
sub
out
add
pushl
fpatan
popa
cld
push
xor
sahf
xor
jl
pusha
add
cmp
ja
std
imul
and
add
insb
pop
lock
lea
adc
dec
sub
inc
lock
stc
cmc
cmp
or
add
push
mov
jnp
dec
jmp
xchg
mov
xchg
sahf
xchg
pop
jo
loope
fsubrs
pop
sub
xchg
add
pop
test
movsb
outsb
bound
or
mov
mov
leave
mov
mov
test
or
push
repz
mov
sbb
and
sub
xchg
add
cmpsb
and
pop
pop
in
xor
dec
les
cli
iret
push
or
add
xorb
mov
addr16
and
mov
mov
hlt
push
roll
push
mov
dec
adc
imul
aaa
mov
mov
push
mov
and
scas
pop
es
adc
test
shlb
xchg
pop
inc
push
test
ret
pop
pushf
and
jle
push
ss
add
cmp
inc
arpl
pushf
xor
adc
mov
add
add
add
mov
data16
sbb
xor
mov
ja
or
or
int
mov
push
rcll
test
dec
imul
pop
add
fwait
cli
sub
cmc
outsb
jle
stos
notb
push
aam
or
in
inc
and
cmc
dec
add
mov
jns
xchg
loop
lods
or
sub
arpl
aaa
cmpb
xor
repz
ret
pop
xchg
jae
arpl
arpl
adc
int
pop
push
xchg
jo
lret
mov
or
mov
and
cmp
in
xor
jo
lods
mov
int
test
roll
rclb
mov
lret
andb
inc
out
and
cmpsl
ja
test
scas
cmc
push
cs
sahf
sub
mov
jae
clc
and
adc
int3
dec
rclb
adc
jnp
sub
hlt
sbb
jb
jo
shrb
pop
sbb
jle
cmp
xor
add
pusha
and
popa
iret
mov
xor
mov
popa
inc
lods
inc
pop
inc
pop
std
pop
cwtl
into
xor
adc
and
sub
pop
sub
sub
xor
sti
mov
into
cmp
mov
insb
cmp
dec
cmp
pop
outsb
jg
fs
out
imul
lock
add
call
nop
and
lret
and
pop
and
frstor
adcl
push
nop
and
int
clc
add
push
lahf
sbb
rorl
stc
pop
xchg
mov
add
adc
das
and
add
inc
std
xor
pop
pusha
lods
and
dec
es
clc
add
lea
adc
mov
push
inc
mov
add
fmull
mov
mov
jmp
push
in
xor
test
add
mov
pop
stos
loop
ja
inc
xor
mov
and
loop
sub
mov
je
sub
push
push
data16
je
xchg
cmp
ret
sahf
pusha
and
jle
add
mov
testb
cmc
insl
pop
mov
dec
push
mov
imul
or
bnd
xor
je
jne
loop
popl
sub
js
pop
sub
mov
sub
xorl
or
xor
pop
loope
sbb
test
bound
stc
jb
addr16
dec
and
shrl
nop
ret
xor
lods
outsl
add
inc
stos
dec
and
cmpsl
sub
mov
in
shl
imul
rolb
or
int
mov
mov
mov
pop
pop
sub
popa
hlt
hlt
cmp
and
and
xor
fmuls
sbb
inc
rol
jmp
add
dec
je
push
pop
jmp
cmp
arpl
dec
or
adc
scas
mov
enter
mov
cmc
push
and
test
push
out
pop
out
mov
sbb
dec
stos
xor
sbb
jae
or
cmc
xor
enter
rcll
adc
movsb
shlb
sub
int
add
inc
rcll
pop
inc
mov
mov
lock
push
pushf
roll
xchg
or
and
ficoml
add
mov
cwtl
hlt
xor
leave
sub
sbb
fdivs
in
add
gs
xor
mov
push
daa
ffreep
inc
insl
imul
push
lret
outsb
cli
dec
stos
xchg
and
mov
sbb
add
mov
fstps
push
lahf
std
mov
xorb
push
idivl
xor
jecxz
jl
in
pop
adc
lods
sbb
mov
jecxz
sub
jb
fs
push
lea
js
popa
addr16
push
shll
jmp
cmp
jmp
sbb
imul
pop
mov
pop
push
cltd
sub
cmp
les
loopne
fistpll
add
or
mov
popa
add
arpl
pusha
cltd
movsb
es
fstpt
mov
inc
lock
jl
popf
sbb
adc
lods
xchg
or
std
inc
fs
xor
jge
and
mov
mov
stos
mov
hlt
or
cmp
cmp
out
push
lret
popa
sbb
or
lret
xchg
pusha
xor
xchg
or
cmp
fstps
mov
stos
cmp
fs
mov
mov
das
loopne
sub
enter
adc
call
subl
adc
call
xchg
in
fwait
mov
sbb
enter
dec
cmp
add
xor
movsl
or
rorl
push
in
xorl
jmp
test
xchg
add
pop
or
daa
ss
xor
push
push
inc
dec
jns
adc
pop
clc
cmp
pusha
cmp
mov
adc
dec
insb
pop
int
cmpsl
lret
scas
out
jecxz
pop
shrl
rolb
imul
mov
fnstcw
fnsave
fxch
stos
mov
lret
cs
stos
dec
or
stc
sbb
mov
add
mov
mov
push
xor
inc
pop
repz
fcmovnbe
adc
or
sub
and
sbb
xor
pusha
imul
icebp
sub
cmp
mov
imul
iret
adc
xor
or
mov
cmpsb
pop
sti
cmp
or
xchg
and
repnz
adc
sub
mov
jge
movsl
or
and
cmp
adc
inc
xor
rclb
sub
pop
xor
xchg
add
mov
xchg
push
sub
mov
lods
fsts
adc
lock
insl
lret
mov
mov
sbb
outsb
add
dec
pushf
sbb
inc
xor
push
in
hlt
adc
pop
sub
stc
pop
adc
jmp
jbe
and
mov
xor
out
mov
add
inc
mov
push
fcmovne
stc
int3
roll
rclb
mov
add
sahf
pop
sub
dec
popf
outsl
divb
dec
push
sbb
pop
in
or
sti
sbb
nop
xchg
push
imull
jbe
and
pop
bound
sub
ret
orb
pusha
daa
or
sub
inc
or
and
pop
cmp
push
add
sub
pop
push
mov
adc
mov
cmp
sbb
add
add
or
sub
push
xor
lahf
and
push
or
and
add
shll
add
xor
cmpb
dec
cmp
in
cmp
adc
adc
clc
in
rorb
rcr
adc
push
aas
xor
mov
push
xchg
jg
push
jge
xchg
xor
jl
xor
cli
push
jb
push
lods
stos
icebp
in
scas
push
ficomps
iret
pop
push
cs
rcl
sub
icebp
mov
and
xchg
add
mov
push
dec
fadds
dec
ffreep
clc
outsb
dec
jns
jle
or
jle
push
xchg
or
push
in
mov
pop
add
push
fnstsw
inc
jmp
cmp
nop
push
cmp
dec
cmp
enter
js
vdivps
fstpt
pusha
lcall
push
push
add
pop
mov
mov
mulb
dec
pop
aaa
daa
cmp
mov
scas
xor
xchg
enter
sarl
dec
std
rorb
lret
rol
fwait
adc
pop
div
xor
pop
push
jl
or
fldl
mov
outsl
arpl
and
sbb
in
xor
add
addr16
iret
loopne
adc
adc
idivb
scas
cmp
stos
leave
mov
scas
mov
or
and
sbb
add
rolb
add
xor
xorb
add
inc
jmp
mov
or
rorl
pop
sarl
ja
hlt
mov
add
xor
imul
out
and
sahf
arpl
mov
in
sbb
mov
and
sub
andb
insb
lea
cmp
adc
or
add
stos
mov
outsb
dec
fs
jnp
mov
jnp
mov
aaa
iret
mov
test
mov
jne
xor
pop
xor
pop
inc
aam
daa
test
ja
stos
sub
rol
ss
push
js
mov
fwait
inc
push
fstpl
or
fld
icebp
lret
or
loop
jnp
loop
mov
enter
push
cmc
movsl
das
stos
jno
jecxz
cltd
call
aaa
insb
adc
mov
dec
test
cs
ret
mov
sbb
add
add
mov
add
push
add
or
int3
xor
or
popa
ret
aas
insl
mov
data16
cmp
popa
out
test
push
je
shl
sbb
xor
sub
bound
or
adc
enter
inc
lods
xchg
pop
jge
pop
sti
jge
sbbb
lret
xchg
mov
adc
push
loope
das
stos
sbb
mov
sbb
pop
push
sbb
lret
push
dec
or
sbb
jbe
sahf
mov
push
xchg
cmpsb
imulb
dec
pop
sub
or
sub
lock
mov
into
add
jmp
add
dec
xor
cmpl
dec
pop
add
mov
enter
sbb
xorb
fmuls
dec
push
repnz
cli
dec
repnz
or
add
call
push
push
fldenv
pop
icebp
popa
imul
inc
mov
dec
aas
mov
mov
popa
lock
cmp
jle
sti
dec
mov
loop
push
dec
lahf
addl
jno
mov
mov
scas
mov
push
push
jo
mov
addl
mov
pop
sbbb
movsl
lods
pop
ja
call
je
lea
cltd
fidivrs
into
push
cmp
mov
mov
push
xor
les
xlat
andl
mov
jae
movsb
arpl
add
addr16
fidivl
and
cmc
mov
and
xor
test
ds
push
gs
xchg
and
mov
and
xchg
fs
cltd
xor
mov
inc
xchg
call
test
push
jmp
mov
or
les
jbe
in
mov
out
xchg
bound
enter
pusha
dec
jae
jns
bound
iret
test
pop
loopne
adc
sub
xor
mov
sbb
roll
mov
mov
dec
in
xchg
out
add
push
dec
add
imul
out
lds
nop
cmp
adc
das
cli
test
popa
inc
ds
sub
cli
add
jno
push
or
and
fcmovnbe
iret
add
lods
stos
add
dec
push
xorb
sbb
add
gs
mov
fnstsw
pop
test
movsb
cmp
pop
inc
mov
fs
cltd
pop
in
repnz
adc
out
inc
lea
dec
cld
loopne
and
insb
insl
es
jmp
lret
pop
mov
movsl
pop
mov
push
movsl
and
xchg
insb
int
test
jge
inc
adc
sbb
mov
sbb
popf
sbb
jg
fwait
movsb
jg
or
push
push
or
or
ss
mov
push
fisubrl
icebp
mov
out
lea
mov
mov
xchg
rcll
das
inc
xor
out
dec
xchg
mov
xor
xor
dec
lret
insb
rcrb
inc
mov
rorb
xlat
data16
lock
jne
into
clc
test
push
push
push
ljmp
xor
cmp
or
push
or
inc
or
add
push
mov
mov
popf
pop
ja
xor
and
fsts
mov
out
push
fsubl
lods
repnz
push
imul
and
mov
and
test
stc
lods
cmp
fimull
movsb
cs
or
pop
jge
adc
popa
cli
sbb
repnz
ja
add
out
jb
fsubrs
mov
jno,pn
stc
dec
mov
aam
in
out
sbb
clc
mov
sbb
adc
dec
popa
subl
adc
cmp
mov
lea
or
roll
cli
sbb
sahf
pop
cmc
push
je
fs
scas
push
jecxz
pop
sub
ljmp
out
mov
mov
fisubrl
cmpsl
fnstcw
push
add
shlb
mov
mov
in
dec
test
sub
mov
repnz
xchg
cmp
mov
xchg
push
fcos
loope
inc
dec
lods
inc
stc
in
mov
cltd
lret
repz
jns
cmpsb
rol
mov
mov
scas
mov
add
xor
and
inc
jg
cmp
lods
into
sub
add
sub
data16
mov
fcmovb
mov
test
enter
pop
aas
decb
dec
test
nop
pop
in
pop
aas
adc
or
dec
xor
lret
add
push
push
adc
or
scas
mov
in
repz
lock
aam
mov
mov
cmp
inc
add
adc
xor
jl
or
jno
mov
out
cmpsb
jle
jne
out
mov
lcall
xchg
add
push
pop
mov
ficoms
mov
xor
lods
push
dec
loop
fwait
cmp
cwtl
fwait
mov
or
loop
in
das
jne
or
out
aam
sub
dec
out
aas
mov
sbb
jl
in
ret
xor
loope
sbb
cs
fs
dec
fcmovnbe
push
out
fadd
inc
add
sbb
sbb
jns
cmc
sahf
jns
xor
push
in
pusha
daa
inc
mov
inc
insl
nop
xchg
lods
pop
add
or
inc
adc
dec
cmp
into
jo
fidivs
mov
ljmp
and
inc
adc
dec
pop
mov
add
aad
lods
mov
mov
rolb
in
push
lahf
mov
mov
insb
pop
mov
rcll
lret
out
xor
push
mov
sahf
push
js
push
push
mov
call
in
push
and
cmp
add
mov
xor
jp
imul
or
loop
addr16
adcl
ljmp
loop
popf
out
mov
cmp
je
or
cltd
sbb
call
xor
dec
and
popf
imul
out
jb,pn
jnp
jmp
lods
pop
pop
dec
lods
inc
xchg
mov
or
imul
mov
and
sbb
cmp
cmc
fstpl
jno
shll
dec
hlt
add
mov
test
stos
stos
cld
mov
and
fwait
das
shll
dec
repnz
mov
mov
lea
dec
xor
or
pop
and
mov
inc
and
sbb
js
rclb
mov
jmp
scas
xchg
xchg
jmp
jnp
xlat
movsb
loope
sbb
cmp
daa
mov
cmp
jb
cmpsl
add
hlt
add
ss
or
sbb
sub
cmp
mov
fbld
mov
sbb
cmp
lahf
add
cli
leave
add
xor
cmp
or
ljmp
jp
fisttpll
adc
out
dec
add
mov
xchg
add
in
fdiv
xor
push
xchg
sbb
stos
ret
pop
loop
xchg
sbb
dec
fwait
push
cld
or
sarb
mov
sub
sub
push
dec
in
lea
stos
mov
nop
add
push
daa
add
push
mov
sub
ljmp
mov
in
into
scas
loope
xchg
jecxz
mov
pop
add
inc
add
bound
movsb
pop
jo
xor
xlat
outsl
fs
sarl
xor
push
pusha
push
dec
sub
cs
pop
ret
add
mov
loope
add
push
addl
fcmovb
xchg
adc
pop
sbb
cmpsb
mov
test
mov
jmp
adc
fsubrl
or
inc
pushf
lret
outsl
mov
stc
and
pop
cmp
add
roll
add
std
clc
adc
pusha
frstor
mov
fwait
ret
pop
aaa
mov
lds
sub
icebp
jbe
stc
sub
inc
adc
cmp
and
lahf
insl
sub
jne
out
clc
iret
adc
xchg
mov
mov
lret
jne
aam
xchg
pop
add
aaa
lods
cmp
insl
mov
cmp
xchg
push
adc
mov
into
push
out
hlt
shl
rorl
mov
adc
adc
icebp
jmp
jb
loope
iret
add
sub
xor
adc
inc
push
push
mov
inc
pop
test
inc
adc
pop
sahf
mov
jbe
push
mov
lret
js
dec
lcall
ret
sub
incb
add
xchg
xchg
sbb
ret
iret
sbb
lock
jae
out
jg
cmp
add
push
scas
dec
divl
dec
in
and
pop
outsl
add
pop
push
call
cli
jb
push
iret
fucomi
aam
je
jne
cli
inc
mov
inc
cwtl
mov
jns
rcrb
mov
adc
insb
shll
cwtl
jne
data16
fiadds
jns
or
rol
push
sbb
add
test
mov
add
ret
popa
sub
xchg
gs
add
cmp
cmp
adc
sahf
or
fcom
push
sub
add
push
jg
mov
add
insl
add
and
clc
lcall
dec
pusha
xchg
sub
xchg
cld
rolb
stos
push
adc
sub
std
xor
xchg
popf
xor
dec
lret
fidivs
loop
push
popf
jbe
sbb
pushl
inc
dec
lret
xlat
pusha
push
and
mov
outsl
orl
jecxz
lret
adc
or
mov
js
js
ror
sub
jl
les
mov
push
dec
lcall
jg
lea
add
ljmp
mov
mov
fwait
pop
aaa
enter
ja
mov
or
aas
fisttpl
addr16
push
into
cmp
scas
jns
loope
ret
subb
jnp
fistpll
dec
mov
dec
inc
add
xor
sub
mov
daa
movsb
push
add
cmp
adc
addr16
loopne
and
int
xchg
inc
add
xchg
cs
xchg
jae
inc
mov
add
sbb
push
arpl
pop
pop
mov
clc
vmwrite
sbb
xchg
pop
fistl
mov
test
mov
xchg
lret
sub
mov
stos
mov
aas
and
mov
loope
cs
aas
movsl
movsb
mov
out
or
sbb
adc
mov
adc
jle
fsubs
jb
xchg
xchg
lods
je
roll
push
incb
enter
btr
sub
ja
sub
dec
xor
xchg
mov
pop
jne
mov
jmp
push
and
sub
adc
push
aad
push
and
iret
mov
and
inc
mov
stc
inc
test
sbb
sti
lods
stc
add
fistl
stos
pop
in
push
cmp
xchg
call
dec
xlat
mov
jle
add
pop
repnz
ret
gs
add
idivb
add
mov
aad
sahf
jmp
xchg
and
in
dec
mov
test
fwait
mov
aas
js
test
faddl
push
sar
ljmp
mov
loopne
clc
fldcw
clc
scas
jge
stos
pop
ja
int3
mov
leave
dec
mov
repnz
jns
aaa
sarl
push
jae
nop
jp
fdivs
and
push
jle
incb
dec
pop
mov
ret
imul
adc
adc
add
sbb
mov
and
movsb
sub
sub
mov
scas
scas
or
mov
mov
inc
into
and
rorb
pop
add
in
fsubrp
sbb
movb
jl
mov
jge
movsl
fs
or
mov
outsl
cmp
data16
sub
sahf
pop
xchg
nop
sahf
mov
sahf
dec
mov
mov
popa
sbb
aaa
jb
shlb
push
sub
inc
inc
sub
inc
cmp
sub
rcll
loopne
mov
je
stc
subl
fisubs
stos
and
pop
mov
imul
movsb
inc
faddl
add
enter
testl
mov
fldl
arpl
pop
enter
jb
jbe
ret
adc
and
jecxz
outsb
add
mov
sbb
mov
rolb
cwtl
inc
cmc
test
lods
dec
sub
mov
inc
mov
mov
loop
insl
xchg
lret
mov
shlb
pushf
ja
stc
inc
cmc
add
cwtl
popa
fwait
jg
fs
xchg
clc
stos
or
pop
pop
mov
and
gs
out
unpckhps
add
inc
in
mov
cli
loope
std
inc
jmp
jnp
and
xchg
sbb
dec
lea
cmc
push
bnd
mov
rol
pop
dec
xchg
pop
lahf
lds
pushf
cmp
and
xor
sbb
and
and
xor
mov
movsl
ficompl
add
pop
ficoml
add
cmp
std
rorb
and
xor
aam
jbe
ficoml
test
das
mov
lods
std
in
cmpsb
into
es
aas
push
xchg
cld
dec
dec
cmp
adc
sbb
out
jno
mov
jb
push
pop
xor
xchg
cli
aam
sub
ret
sub
and
test
fcompl
lcall
mov
jno
push
push
je
sbb
mov
sbb
add
jno
adc
andl
inc
mov
jmp
add
and
hlt
xor
not
add
pop
insb
jb
jbe
loopne
xlat
push
xchg
imul
dec
jb
inc
ss
loopne
scas
icebp
and
jo
push
gs
mov
xchg
sub
add
cltd
sub
sbb
inc
jne
ret
jg
cmp
jl
in
jae
in
add
xor
mov
add
inc
leave
mov
into
sub
daa
jb
xchg
pop
aas
mull
ljmp
jge
aam
xchg
and
sbb
mov
lcall
test
or
mov
push
jp
dec
nop
pop
push
jge
push
insl
pop
iret
jp
popa
test
and
and
out
into
jno
cmp
xor
ds
scas
xchg
add
ret
mov
lcall
in
jl
loopne
cmpsb
in
jle
in
cmp
ss
fcompl
insl
stos
inc
mov
or
pop
pop
add
sbb
cmp
shll
inc
dec
xchg
ljmp
ljmp
pop
and
xchg
pop
and
je
xchg
cmp
ds
mov
add
dec
sub
jo
sahf
loope
imul
fdivr
mov
add
jno
out
push
sub
shrb
mov
mov
outsl
pushf
and
mov
dec
dec
sub
in
clc
xchg
ds
push
inc
cltd
sub
dec
rol
or
or
outsl
inc
fimull
xor
push
shl
aad
and
addr16
and
out
mov
cmp
mov
xor
arpl
mov
pop
orb
xchg
xchg
push
movl
xlat
movsl
js
lock
imulb
aam
push
sarl
lods
faddl
lret
or
out
jo
ret
cmp
jb
push
xor
loope
ja
xchg
shlb
xchg
fstl
adc
xor
inc
push
negl
outsl
xor
dec
xor
cld
lret
inc
lock
sbb
loop
pop
rclb
xor
ror
movsb
cmp
adc
inc
jb
pop
rol
loop
pop
jecxz
jns
xchg
push
mov
push
pop
sbb
or
loop
in
testb
daa
ljmp
jne
xchg
xchg
mov
mov
je
push
ja
insb
jecxz
sub
arpl
pop
jno
mov
jbe
jp
shlb
popa
jge
hlt
sub
rorb
jnp
mov
adc
in
push
dec
pop
push
push
sbb
aam
mov
adc
shrl
popf
rolb
pusha
sub
nop
adc
sub
gs
push
rorl
scas
icebp
testl
mov
mov
lds
jae
gs
jno
mov
cmp
ds
mov
pusha
mov
cmp
sti
idiv
data16
mov
cld
xor
xchg
mov
hlt
rcrl
popf
pop
fisttps
les
inc
pop
cmp
loope
insb
pop
or
les
aaa
aad
rcrb
dec
jo
repnz
loope
pop
pop
test
and
xchg
push
mov
dec
icebp
adc
hlt
addl
adc
sti
inc
jne
dec
pop
mov
xor
xor
adc
xlat
dec
push
repz
scas
aaa
push
fsubl
pop
push
movsl
pop
jno
jmp
push
mov
mov
orl
cmpsb
cmp
pop
loop
xor
cld
shlb
test
mov
jl
out
sbb
push
push
jae
gs
mov
adc
addl
sbb
clc
sbb
aad
inc
push
sub
add
mov
hlt
xor
idivl
inc
mov
xor
sub
ja
inc
sar
jns
cmp
fisubs
je
incl
sbb
inc
sub
pop
scas
mov
aad
imul
test
ret
daa
sahf
jne
inc
jno
adc
mov
jg
dec
std
and
movsb
shll
pop
inc
mov
mov
dec
inc
cmp
push
enter
mov
xchg
out
add
sbb
fstl
nop
arpl
adc
hlt
out
add
push
sbb
ljmp
in
jp
stos
daa
pop
jne
adc
test
aad
add
jae
ds
lds
push
lods
in
push
xor
outsl
ret
mov
pop
ss
les
in
pmullw
push
je
insb
and
pop
or
push
pop
insl
sub
les
movsb
loopne
sub
jno
out
or
jno
cwtl
data16
jp
icebp
mov
hlt
adc
fistl
pop
stos
jne
cld
fcomps
aad
and
inc
pop
cmpsl
sahf
adc
orl
lret
xor
nop
cmp
xchg
and
ljmp
jno
test
mov
stc
pop
sub
mov
mov
cmpsb
sbb
fisubs
xchg
inc
dec
movsb
push
sbb
or
js
pop
aad
lret
and
dec
sub
aad
ss
mov
lret
fnstcw
push
pop
imul
adc
ljmp
bound
pop
aaa
popf
aaa
les
lock
in
xor
add
push
jmp
mov
sbb
cmp
push
mov
and
clc
push
cmpsb
adc
cmc
sub
mov
shll
cmp
inc
mov
jecxz
sbb
rcrl
stc
jnp
inc
jmp
mov
in
test
pop
iret
stos
mov
and
push
dec
hlt
jnp
xchg
jae
gs
pop
imul
fisubrs
xchg
xor
mov
jmp
in
add
xchg
push
inc
fisttpl
mov
add
dec
pop
shlb
jnp
hlt
sbbl
dec
cmc
sbb
pop
test
pop
adc
ljmp
aam
es
fiaddl
fistps
notb
push
frstor
and
and
add
push
cmc
xor
lods
dec
add
inc
lods
dec
xor
mov
les
adc
mov
mov
xchg
ja
cmp
adc
je
push
aam
sbb
push
add
push
divb
lods
and
shrl
and
mov
aad
inc
and
cmp
inc
sub
inc
aad
enter
sbb
dec
xchg
hlt
and
insb
mov
imul
mov
push
mov
stc
js
mov
dec
mov
arpl
movsb
jbe
mov
and
xchg
fildll
cmp
aad
jge
cmp
push
and
rcr
jns
loopne
and
nop
lret
and
in
jmp
inc
inc
aad
imul
pop
stc
adc
dec
fistl
test
mov
sbb
add
aad
mov
and
inc
jp
adc
test
add
out
pop
ja
mov
loope
xor
sbb
pop
mov
fs
pop
lret
xchg
mov
test
pop
xor
inc
stc
fists
cld
jnp
adcb
add
adc
inc
fiaddl
sbb
add
jb
sub
dec
imul
int3
test
mov
icebp
jmp
mov
subb
lret
ret
and
mov
test
and
and
add
push
les
or
adc
lods
stos
pop
mov
push
movsl
stc
jae
cmp
sub
adc
mov
jo
xchg
push
cmp
xor
hlt
ljmp
std
add
les
aad
mov
insb
pop
lods
adc
adc
push
aad
mov
jg
testb
jle
xchg
jae
scas
dec
xchg
sbb
pop
shl
aam
and
dec
int3
sbb
add
inc
es
lret
in
and
pop
pop
lods
ficoms
insl
aad
jne
cmpsl
dec
xor
sbb
mov
pop
das
cmc
or
stos
pop
imul
or
stc
sbb
cmp
loope
adc
mov
and
xchg
mov
cmp
out
sbb
add
dec
lea
sbb
xchg
int
and
or
fwait
xchg
js
xor
cmpsb
adc
mov
and
xchg
sbb
pushf
adc
and
and
mov
mulb
push
mov
inc
mov
aad
cmp
sahf
sbb
inc
adc
pop
aad
aas
add
dec
pop
ss
in
xchg
decb
sbb
pop
movsb
cmc
sub
mov
add
imul
mov
in
or
xchg
inc
inc
jl
stc
aad
inc
add
adc
add
hlt
les
testb
fstpl
cmc
mov
jmp
call
adc
aad
andl
lods
jnp
push
inc
rcr
aad
and
fistpl
gs
xor
hlt
repz
xchg
rorb
sbb
pop
xchg
cmc
xor
mov
mov
mov
cmp
mov
lret
jmp
mov
mov
sbb
adc
pop
aas
inc
je
xchg
sbb
sbb
pop
test
ret
fs
mov
in
data16
imul
cmp
xchg
jns
iret
aad
sbb
adc
andb
shl
addr16
pop
dec
push
sbb
pop
push
cmc
mov
fs
push
imul
mov
jmp
inc
fucomi
aad
jl
or
mov
pop
out
gs
inc
std
hlt
jnp
xchg
xchg
sbb
pop
mov
fs
cmp
xor
xchg
inc
jnp
mov
mov
mov
stos
int3
stc
cltd
xchg
adc
fbstp
adc
mov
and
cmp
jge
ret
adc
and
xchg
add
push
enter
mov
mov
adc
sub
jmp
mov
aam
jp
negb
or
jo
cmp
cmp
and
and
push
or
mov
sub
lods
popl
mov
add
xlat
and
lds
inc
mov
lods
add
pop
pop
sub
imul
mov
fwait
sbb
pop
adc
fs
in
push
outsb
imul
sbb
pusha
xchg
cltd
jmp
mov
pop
add
adc
sub
pop
mov
inc
mov
mov
jl
das
pop
xor
and
sbb
add
loope
inc
jecxz
add
mov
mov
lea
fsts
or
imul
orl
cmp
ret
fdecstp
fs
or
inc
cmpsl
cmc
movsb
pop
and
insb
jo
out
or
or
ficompl
jno
mov
mov
pop
and
inc
js
mov
mov
inc
cltd
push
sbb
test
pushf
add
adc
adc
cmp
es
iret
imul
lods
or
mov
test
lods
outsb
inc
cmp
or
mov
sbb
xor
shrb
fisttpll
js
add
mov
xor
xor
add
inc
push
jg
rclw
sti
test
js
out
mov
mov
cmc
mov
imul
cli
lret
iret
fwait
add
mov
jae
inc
push
add
mov
inc
xchg
mov
ret
stos
ja
nop
daa
sbb
xor
aas
iret
scas
addr16
xchg
and
out
fadd
dec
testb
and
out
dec
mov
in
lret
add
std
lds
xchg
bound
jmp
and
or
cwtl
pop
inc
das
lcall
jb
jne
mov
jne
mov
loopne
xchg
mov
add
sub
roll
mov
xor
jmp
cwtl
scas
leave
enter
mov
jl
sti
loop
and
negb
jg
outsb
add
js
lods
add
inc
fisttps
aas
adc
mov
jb
loop
inc
mov
pop
and
test
scas
lods
fmuls
sub
test
jmp
jno,pn
frstor
adc
cmp
xchg
fsts
push
sbb
mov
and
sub
adc
mov
add
mov
mov
mov
push
jecxz
push
loope
add
aaa
sbbb
mov
and
pushf
out
gs
inc
outsl
add
pushf
pop
fwait
inc
in
push
add
inc
pop
les
rcpps
adc
loope
xlat
push
fadd
sub
xor
imulb
mov
mov
push
pusha
fbstp
push
ds
scas
push
andl
fdivrl
cld
mov
call
xchg
push
nop
shlb
dec
data16
and
pop
fidivrs
int3
dec
mov
cld
data16
mov
sbb
cmp
pop
mov
mov
xchg
mov
sub
mov
imul
cmp
push
dec
std
fwait
jmp
std
mov
cmp
pop
ret
pop
xchg
sub
daa
aad
pop
cmpsb
repnz
cld
jg
lock
in
mov
xchg
xchg
inc
mov
push
sub
lds
push
lds
loop
push
stos
and
loop
dec
or
adc
pop
in
mov
and
jge
negl
rorl
mov
adc
sbb
mov
scas
add
rcrb
cld
add
inc
and
add
pop
inc
std
or
cmp
iret
adc
sarb
mov
vpacksswb
inc
sub
and
ss
movsl
adc
movsb
push
xor
mov
lahf
sbb
add
push
dec
faddl
scas
sarl
pop
popa
or
cmc
or
adc
pop
inc
and
mov
aas
sbb
mov
adc
fdivs
cmp
cltd
jg
lahf
adc
cwtl
aam
push
adc
inc
mov
stc
add
mov
adc
push
adc
mov
push
push
jl
int
and
idivb
mov
call
scas
xor
scas
cmc
xor
pop
stos
cmovs
xchg
nop
dec
lea
pushf
mov
and
sbb
or
adc
rol
jl
js
cmpsl
inc
ret
add
lcall
mov
xchg
scas
or
mov
movsb
leave
loopne
imul
push
mov
ss
push
aad
test
mov
cmp
enter
and
xchg
repz
lcall
testl
movsb
rolb
xchg
ja
cwtl
mov
jg
sti
xchg
xchg
pop
inc
and
jbe
das
cmp
pop
xchg
in
int3
adc
push
mov
fildll
push
int3
mov
inc
gs
and
pushf
pop
ss
jae
mov
inc
sbb
je
enter
enter
xor
add
sub
dec
pop
dec
sbb
mov
inc
leave
add
jmp
inc
mov
mov
push
repnz
inc
leave
and
call
int
jbe
jb
outsb
and
xor
jmp
scas
and
cmp
xchg
pop
push
ss
jae
or
fsubp
jle
fimuls
fdivl
imul
fs
inc
sarb
or
fs
sbb
jg
je
jno
add
jp
push
daa
add
inc
je
or
stc
je
testb
mov
dec
stos
mov
cmp
insl
clc
gs
js
call
mov
cmc
mov
mov
outsb
bound
xchg
mov
dec
mov
lea
cltd
stc
inc
xchg
mov
icebp
mov
shrl
add
dec
xchg
adc
xchg
adc
pusha
rorb
movsb
and
and
add
push
adc
repnz
xor
in
add
inc
pop
dec
xchg
aad
in
and
xor
mov
mov
fistps
gs
mov
push
xor
es
and
int3
call
fisttpl
sub
jmp
pushf
lods
sbb
mov
pop
cmp
adc
inc
sbb
sbb
mov
cmp
das
xor
imul
add
sub
xchg
movsb
inc
dec
fistpl
mov
pop
fsubrl
hlt
call
inc
sbb
pop
mov
and
stc
les
add
inc
das
dec
cmpsl
aad
jae
lods
mov
fstpt
ss
mov
in
hlt
mov
xchg
inc
dec
ret
pop
pop
cmc
aam
mov
xlat
add
xchg
jle
xchg
mov
sub
mov
inc
xchg
jle
inc
mov
push
or
adc
lret
adc
xchg
mov
inc
push
inc
xor
and
es
lods
cmc
jne
cmp
xchg
jg
jp
fs
adc
lods
push
xorb
push
test
out
mov
push
mov
rclb
fs
imul
mov
mov
lods
mov
fstpt
push
rolb
pop
shlb
je
hlt
loopne
xchg
inc
dec
movsb
sbb
pop
add
fs
mov
loop
push
mov
rcr
stc
gs
mov
mov
repnz
es
and
or
js
andl
stc
and
and
shlb
and
dec
jno
mov
dec
inc
es
out
mov
lods
rcll
jmp
add
mov
pop
cmp
adc
pop
push
push
or
push
cs
and
add
jnp
mov
inc
mov
in
popa
jge
stc
rclb
cs
adc
push
std
mov
adc
and
sti
add
push
das
xor
imul
lods
pop
add
inc
aam
push
aad
cmpsl
xchg
in
idivb
cmp
insb
fdivrs
mov
and
adc
and
and
nop
push
fwait
xor
and
sub
jbe
test
popa
dec
movsl
aad
cld
and
or
lods
addr16
sbb
cmp
mov
icebp
pop
mov
dec
cmp
adc
je
push
and
push
push
xor
and
add
add
mov
inc
lods
inc
xchg
mov
aad
sub
xchg
dec
mov
gs
aad
mov
sub
cmc
pop
arpl
add
mov
mov
test
adc
push
push
mov
xchg
dec
push
inc
adc
stc
and
inc
xor
and
jmp
mov
stc
lret
xchg
xor
lods
test
adc
mov
and
call
cs
and
add
push
sbb
outsl
and
add
lods
jne
xor
scas
dec
aad
push
lods
mov
lds
aad
in
add
loope
cmpsb
gs
stos
push
hlt
mov
pop
pop
lret
in
fs
movl
jnp
mov
push
mov
arpl
stc
scas
xchg
xchg
jmp
mov
push
je
sub
fwait
les
mov
dec
and
pop
shl
push
mov
push
fisubrl
xchg
mov
mov
decl
aas
stc
ds
push
jmp
mov
je
aaa
pop
push
inc
jae
mov
push
iret
dec
hlt
test
ficompl
pop
xchg
mov
mov
mov
sub
mov
jno
mov
test
adc
mov
and
xchg
in
push
in
dec
sbb
xchg
icebp
cmc
arpl
lcall
aad
and
stc
subl
add
mov
inc
and
and
stos
xor
and
xchg
sub
and
inc
aad
and
mov
inc
and
add
fadds
xchg
stc
scas
mov
xchg
and
shll
and
repnz
lods
inc
add
test
adc
nop
mov
inc
lods
xlat
out
add
push
pop
mov
pop
add
add
lods
sbb
pop
jns
xor
and
sub
incb
xchg
inc
cmpsl
dec
pmullw
jp
jp
test
sbb
incl
and
gs
int
hlt
dec
out
xchg
into
dec
stos
sbb
pop
out
dec
sub
fisttpll
pop
cmp
jnp
mov
xor
xchg
stc
fnstcw
in
add
es
movsl
gs
divl
xor
scas
sbb
pop
xchg
cmc
sbbb
mov
jnp
fwait
mov
pop
lods
fs
and
je
dec
push
insl
adc
sbb
sbb
or
ja
inc
jne
cmc
leave
stc
cmpsb
xchg
xchg
popf
and
push
sbb
adc
xchg
stos
dec
js
and
cmc
lods
nop
mov
or
das
sbb
and
cmpsl
inc
mov
cmp
and
stos
push
dec
daa
mov
and
adc
and
push
push
xor
pop
xchg
hlt
or
pop
fsubr
shll
sub
out
mov
jae
movsb
mov
imul
mov
mov
jmp
sub
inc
xchg
mov
iret
shrl
dec
sub
xor
test
cmc
and
pusha
mov
mov
xor
xor
xor
es
and
enter
pop
je
mov
adc
add
mov
mov
pop
loopne
xor
and
adc
xorb
dec
adc
cltd
xor
aaa
and
sbb
movsl
push
sbb
rcrl
aad
adc
les
push
push
ds
xchg
adc
or
and
mov
sbb
xchg
adc
adc
dec
inc
nop
pop
or
popf
mov
push
lret
test
mov
adc
mov
or
addb
xor
push
leave
nop
fs
testb
add
mov
mov
popf
std
add
adc
cltd
test
xor
cmpsb
orl
enter
pushf
xchg
add
xchg
shll
adc
iret
sbb
push
pop
std
jmp
cmp
mov
pop
sarl
stc
dec
nop
xchg
jns
subb
xchg
int3
push
jmp
jecxz
je
xor
test
jp
xor
inc
xor
rcl
jmp
xor
sbb
jl
xlat
and
dec
loope
adc
adc
cwtl
xchg
aad
jo
jns
push
xchg
mov
cwtl
jb
and
pavgb
xchg
dec
and
leave
xor
jmp
pop
mov
rcll
adc
in
cwtl
test
mov
xchg
cmp
jno
and
aad
sbb
flds
adc
mov
xor
insl
mov
xor
mov
fwait
in
lahf
aam
inc
add
xchg
adc
mov
loope
cmp
dec
and
idiv
mov
mov
sub
cmp
sub
cmp
and
sub
pop
adc
enter
insb
cltd
fadd
add
jo
mov
mov
sub
mov
add
inc
push
xor
fldl2e
adc
in
cwtl
pushf
ret
dec
cmp
and
adc
fidivrs
js
push
jns
xor
mov
in
sub
xor
cmp
adc
xor
clc
add
add
cmp
call
xor
mov
into
push
mov
pusha
xchg
es
cmpsb
aaa
mov
inc
jo
enter
xor
xchg
jle
inc
inc
inc
bnd
jbe
cmp
cltd
pop
add
push
arpl
add
les
sahf
xchg
mov
aam
pop
test
sub
out
je
mov
cltd
repz
mov
push
jbe
shlb
test
dec
call
ljmp
loop
outsl
push
xchg
mov
or
ljmp
mov
adc
and
jg
scas
cltd
mul
jno
add
inc
push
adc
fwait
dec
out
sbb
jmp
adc
push
xor
je
andb
adc
fs
add
cmp
mov
jle
jge
pop
push
cmpsb
push
in
cmpsb
adc
pop
mov
in
nop
rol
incl
push
ror
adc
add
or
lock
in
mov
mov
test
add
lds
pop
fwait
and
stos
femms
loop
jl
mov
mov
mov
and
negl
inc
mov
dec
jg
divb
push
jb
push
dec
xor
pusha
sub
mov
dec
jae
mov
and
sbb
dec
out
add
mov
insb
ret
push
sbb
push
cmp
inc
xchg
or
xchg
cmp
cltd
or
push
sbb
nop
inc
cmp
inc
sub
ds
push
sbb
js
test
in
push
popf
push
je
push
imul
pushf
cmp
cli
mov
mov
cmpl
mov
mov
inc
test
push
fnstsw
and
adc
ss
mov
sahf
adc
mov
add
sub
xor
jae
scas
pop
mov
cmp
xchg
in
push
mov
add
or
add
xchg
jo
scas
sub
stc
pop
mov
daa
or
add
popa
sub
loop
push
in
xor
or
xchg
aas
test
aam
xlat
push
fisubs
xor
shr
push
cs
mov
movsl
lea
stos
mov
lock
cmc
adc
mov
lahf
xchg
mov
cmp
or
lea
mov
sbb
adc
fdivp
shl
jecxz
lock
lock
pushf
test
aad
lret
jno
daa
pop
pop
push
scas
sub
shrl
jge
out
aas
cld
and
jecxz
ds
and
sahf
cs
stc
fistpl
mov
pop
push
decb
adc
scas
pop
xorb
and
mov
push
out
mov
ds
add
mov
addr16
std
cmp
mov
ret
cli
cmp
sbb
pop
sub
pop
inc
test
adc
lcall
scas
pop
adc
pop
push
mov
aas
aad
push
cltd
mov
flds
aam
mov
clc
mov
adc
lock
sti
sbb
mov
pop
inc
mov
repz
gs
dec
inc
jb
mov
pop
dec
aas
add
lods
xchg
dec
push
fmull
push
icebp
loope
flds
sub
sbb
aas
mov
jg
mov
inc
pop
popa
call
pop
popl
adc
mov
or
cmp
enter
in
dec
xchg
sub
cmp
icebp
fdivrs
dec
inc
xor
jecxz
bound
mov
add
lcall
test
pop
push
andl
jnp
push
add
out
ret
adc
inc
sarl
rsqrtps
ficoms
loopne
sbb
mov
in
insl
cmp
movsb
add
push
add
repz
mov
xor
xor
inc
out
in
push
es
dec
dec
inc
sbb
cli
sub
inc
xor
out
xchg
in
es
pop
mov
lret
or
jp
test
and
and
outsb
add
std
bound
jb
and
mov
inc
mov
jecxz
cwtl
inc
mov
fs
int3
test
xor
jno
or
shl
sbbb
dec
sub
icebp
ret
addl
jno
push
mov
cmp
pop
inc
dec
mov
sub
cwtl
sub
and
sub
adc
je
scas
popa
jbe
sbb
cmpsb
das
cmova
stc
mov
loop
test
xor
iret
xchg
sbb
fcompl
data16
inc
xchg
filds
repz
cltd
nop
loope
adc
jae
jo
ret
in
mov
pusha
rclb
mov
je
dec
pop
sub
movsb
into
outsl
mov
push
xor
mov
sbb
shlb
add
test
inc
insb
cmpsl
shrb
mov
jno
aam
mov
movsl
add
jle
jnp
movsl
sbb
incl
stos
lods
in
cs
aad
ficoms
test
popf
sub
xchg
lock
in
fsub
mov
and
ja
mov
mov
dec
mov
add
cs
mov
add
mov
sub
fsubl
xchg
loope
out
aam
imul
jle
pop
std
sub
pop
arpl
loop
and
mov
push
or
sarl
lret
or
jo
mov
cmp
loop
cmp
mov
pop
adc
mov
nop
adc
js
mov
or
mov
push
push
sahf
xchg
dec
popa
jno
inc
pop
xor
cmp
mov
arpl
sbb
int
inc
inc
xchg
pop
cwtl
int3
mov
push
popaw
mov
ud2
subl
cmp
xlat
mov
add
push
mov
inc
and
fildll
mull
in
imulb
cld
and
popa
int3
adc
dec
xor
fistl
or
popa
shr
mov
xor
inc
mov
xchg
stos
push
lods
fldenv
adc
sub
pop
insb
or
push
mov
outsb
popa
data16
jno
cmpsl
jo
test
or
mov
xor
mov
mov
jg
pop
test
push
add
sbb
add
sbb
xor
ja
mov
jno
mov
xor
scas
je
mov
push
popa
sbb
mov
cltd
repnz
call
add
and
in
loop
insl
ja
in
dec
iret
seta
fisubs
repz
pop
mov
mov
fdivrl
push
mov
pop
jns
flds
cltd
sbb
xor
push
lahf
cwtl
outsl
mov
js
loope
xor
into
jge
dec
jns
insb
in
imul
adcb
imul
mov
sub
xor
sub
repnz
cmp
jle
xor
dec
lea
loopne
or
aas
sub
aas
cmp
outsb
adc
pusha
mov
lock
push
movsl
inc
sbb
scas
and
push
push
and
inc
adc
pop
push
je
aad
fstp
push
and
sbb
add
inc
clc
and
sub
and
insb
xor
aaa
nop
pop
jne
xor
fcompl
pop
fwait
cmp
js
lcall
ljmp
push
decl
lahf
in
and
out
push
lahf
adc
mov
sbb
cld
sbb
pop
subb
cmpl
aam
push
sbb
cmp
das
test
sbb
jl
push
sub
inc
push
gs
cmp
call
mov
xor
dec
shrb
aad
xchg
shl
loopne
mov
cmpsb
mov
sar
sbb
mov
dec
push
fdivrl
enter
inc
cli
cmp
push
pusha
or
inc
pop
mov
addr16
dec
add
push
rep
push
xchg
enter
mov
push
and
push
mov
add
shlb
neg
or
pop
or
xor
aad
inc
jne
popa
aaa
loope
dec
insb
and
push
push
divb
push
ret
inc
pop
fldcw
adc
sub
ss
sub
xor
and
out
mov
push
mov
inc
repnz
call
pop
loopne
dec
xchg
sbbl
jge
jne
pop
lea
loop
mov
std
xlat
push
mov
push
icebp
hlt
not
arpl
sub
data16
cmp
pop
xchg
rclb
outsb
adc
sbb
int3
into
mov
fsub
push
roll
loop
and
es
in
out
push
and
ss
ret
mov
jecxz
inc
cmp
mov
jp
mov
loop
andl
jno
sub
adc
fidivs
js
mov
sub
out
mov
stc
xorb
cmp
sti
mov
lsl
test
mov
sahf
push
jle
in
xchg
fsubl
shlb
mov
adc
call
lods
loope
or
sbb
ss
cmpsl
and
lfs
push
lods
dec
add
lds
cmp
sub
sub
int
call
pushf
mov
sbb
lcall
adc
lahf
sbb
sub
sbb
lods
mov
aaa
or
push
sarb
and
jo
cmp
adc
xor
and
lods
and
cmp
mov
and
xor
adc
and
add
repnz
cmp
inc
sbb
leave
jo
clc
pop
call
out
loop
xchg
mov
divl
sub
push
sti
and
mov
add
pop
mov
gs
lds
jo
cmp
push
test
popf
enter
loop
xlat
loop
pop
rorl
scas
pusha
dec
repz
sbb
aaa
add
xchg
aaa
lcall
out
or
sub
mov
jae
lock
pop
pop
out
pop
call
inc
push
mov
adc
sub
or
mov
int3
das
xlat
fnstcw
xchg
pop
cmpsb
inc
rol
or
test
and
das
icebp
adc
inc
or
mov
sub
sub
adc
sub
add
add
sub
inc
imul
xchg
bound
mov
xor
xchg
lahf
lahf
imulb
add
mov
adc
jp
mov
mov
or
movsb
xor
and
lods
orb
and
adc
cwtl
and
adc
movsl
add
cmpsb
push
or
mov
sub
xor
cmp
repnz
out
xchg
cmp
add
pop
in
push
xchg
call
jno
adc
outsl
push
mov
cmp
mov
add
sub
cmp
sub
sub
inc
loop
pop
inc
and
outsb
pushl
sub
push
pop
arpl
test
xchg
xchg
mov
nopl
push
or
jg
mov
imul
imul
ljmp
xor
xchg
dec
mov
fistps
or
xor
xor
out
jne
popa
ljmp
or
push
pop
add
lods
mov
adc
jno
dec
mov
push
sub
and
sbb
mov
sub
lock
add
cmpl
or
mov
sbb
cmp
lcall
mov
outsb
sbb
sahf
pop
clc
and
loope
lahf
jge
push
aas
div
lcall
cmc
enter
dec
pop
sbb
test
pop
jno
cwtl
sub
cmp
enter
test
mov
sub
adc
lret
lret
fsubs
loope
jecxz
jecxz
push
cmpsl
sbb
push
test
cmp
pop
mov
vpunpcklbw
cwtl
cltd
add
enter
mov
pop
sbb
jae
mov
cmp
shll
lods
or
test
lea
xchg
mov
mov
sbb
aas
clc
push
mov
jge
fndisi(8087
int3
mov
loope
inc
fsub
mov
pop
fucomp
aad
push
lret
or
dec
xor
ljmp
lock
std
nop
sub
fstpt
sbb
mov
push
xchg
add
and
add
and
cmp
mov
arpl
sbb
or
cmp
or
adc
ret
mov
and
mov
xor
cmpsl
pop
jle
aas
push
jl
xor
ljmp
mov
lahf
jae
pusha
xor
lcall
ret
and
adc
out
inc
std
popf
test
push
and
repnz
xchg
into
pop
pop
fists
jno
add
ja
and
stc
clc
mov
and
arpl
mov
mov
ds
jmp
cs
mov
mov
push
mov
dec
hlt
ret
addr16
sbb
dec
and
nop
fdivr
mov
gs
rcll
test
mov
jne
and
es
inc
stc
inc
sbb
loope
cmp
mov
loopne
dec
lret
xchg
inc
add
stos
jp
int3
cvtdq2ps
mov
aad
sub
jle
mov
cmp
insl
inc
rcl
mov
test
cmpsl
jge
rorb
imul
jno
push
pusha
shr
and
adc
mov
mov
or
push
xchg
cmp
mov
mov
adc
add
in
icebp
popf
cld
and
fmul
xchg
aas
cmp
jp
and
mov
decl
icebp
add
shrb
dec
in
mov
pushf
dec
loope
popa
mov
rol
mov
pop
or
in
addb
mov
or
mov
bound
adc
mov
cmpsb
pop
adc
cmp
daa
push
and
push
xorl
mov
xchg
repnz
insl
jmp
sar
jge
cmp
shl
loope
bound
nop
adc
pop
cmp
lcall
mov
push
out
adc
and
pop
xchg
popa
push
sbb
std
enter
sub
sub
testl
mov
sub
inc
sub
and
cmp
pop
push
dec
or
add
iret
adc
mov
lahf
movsl
mov
scas
arpl
andb
fisubrl
repz
out
jg
mov
mov
push
movb
pusha
push
sbb
xor
pop
sub
inc
lods
add
scas
inc
sub
mov
fisttpl
cmp
xor
pop
lcall
jae
mov
addr16
sbb
jae
add
inc
mov
xchg
push
and
std
and
inc
mov
pop
push
pop
mov
sbb
les
adcb
scas
sarb
dec
cmpsb
push
incb
mov
lock
jo
into
adc
repz
icebp
add
andl
fisttpl
sbbl
jecxz
negl
jno
and
mov
repnz
push
sub
mov
cmpsb
daa
out
aad
nop
scas
nop
aad
lcall
aad
ret
lea
jo
es
jg
lret
in
pop
mov
out
lock
cmp
inc
cli
sbb
mov
mov
sbb
jbe
pop
ja
cwtl
sar
jecxz
lock
inc
je
decb
and
outsb
movhlps
or
mov
sbb
enter
pop
in
insl
add
dec
jp
mov
jle
xadd
movsb
pusha
int3
ds
imul
mov
inc
pop
mov
xchg
popl
jge
rolb
inc
jmp
dec
push
jnp
push
add
pusha
sbb
pop
xor
push
fs
popa
add
ret
iret
mov
sbb
and
jl
loopne
imul
cld
sbb
fnstcw
sub
lcall
xor
xchg
jmp
xor
dec
lock
lahf
in
or
and
adcb
mov
add
xchg
and
scas
mov
out
push
outsl
ds
shl
push
mov
and
aad
cmp
pushf
repz
xchg
xorb
ret
cmpsl
out
push
pop
mov
jns
in
adc
push
notb
pop
add
mov
popa
pop
adc
xchg
not
fwait
xor
push
adc
aad
jne
mov
xchg
inc
mov
mov
jge
cmp
dec
xor
xchg
test
cltd
mov
xor
mov
sub
mov
leave
dec
fisubrs
or
cmp
aad
or
adc
leave
or
fwait
stc
push
bound
mov
pop
dec
push
cmc
sti
pop
inc
ficompl
mov
inc
jg
int3
js
or
mov
and
ret
dec
repnz
in
push
mov
dec
push
cld
adc
outsb
repz
sub
cmp
push
lret
popa
rorw
xchg
push
sti
jnp
lcall
cmpsb
sub
repnz
pop
inc
ds
stos
lds
popf
push
pop
lock
aam
aaa
js
int
test
push
popa
push
xchg
push
xchg
in
xchg
pop
out
pusha
jae
cmpsl
pusha
aad
pop
aaa
addr16
das
ret
inc
or
and
lea
js
rcrl
in
push
inc
into
aaa
cltd
mov
push
scas
enter
cmp
lock
aas
mov
xchg
push
xchg
scas
mull
lods
int
pop
test
aad
mov
dec
inc
mov
ja
addr16
sub
pop
mov
jb
adc
lds
jo
int
jnp
xchg
pop
insl
push
sub
push
push
ds
xlat
das
dec
or
pusha
dec
test
pop
adc
sbb
pop
mov
bound
movsb
adc
cmc
xchg
pop
jb
mov
or
adc
dec
xlat
dec
cmp
jns
ds
cmp
fildl
rcll
mov
xchg
ds
mov
or
jg
push
jp
in
lcall
cmp
lods
test
sub
dec
jb
aad
ret
add
pusha
mov
push
or
mov
pop
sahf
xchg
popf
xor
sbb
inc
adc
add
sti
mov
filds
xchg
mov
dec
add
stc
jb
add
xchg
xor
push
xchg
pop
scas
pop
and
adc
popa
pop
mov
jae
faddl
adc
mov
lock
addb
push
outsl
dec
add
aam
out
push
imul
push
lret
jb
rorl
sbb
ljmp
push
push
xchg
shr
lret
sub
fs
xor
je
inc
adc
cld
sbb
or
cmp
adc
jl
dec
scas
mov
ja
loope
imul
adc
sbb
mov
adc
sbb
lret
ret
nop
add
cmpsl
mov
stos
mov
ret
das
adc
jno
andb
cmc
adc
mov
sbbl
or
pop
sbb
js
inc
ret
mov
inc
jnp
sub
add
sbb
movsb
dec
inc
insb
sbb
stc
in
pop
ss
bound
dec
inc
jp
dec
pusha
test
std
mov
adc
adcl
sbb
enter
pusha
jnp
pushf
fidivs
push
xor
push
sub
mov
mov
jno
xor
or
inc
jno
cmp
lea
jp
int
cmp
cmp
dec
pop
xchg
mov
out
jp
dec
mov
xchg
inc
clc
sub
icebp
mov
push
icebp
mov
outsl
push
jno
in
das
pop
adc
in
std
mov
into
aad
xor
sbb
cld
data16
mov
outsl
jo
rol
add
add
mov
shlb
mov
call
rorb
jnp
pop
lea
mov
dec
cmp
cld
notb
daa
and
outsb
jg
inc
ja
adc
mov
sbb
sub
dec
push
or
push
jnp
cld
cmp
push
test
add
orb
dec
or
pop
inc
mov
das
adc
popa
xchg
in
push
mov
ffree
jns
daa
mov
jmp
mov
pop
fstl
mov
js
cmp
repnz
mov
adc
push
add
aad
insl
jecxz
fsts
imul
es
pushf
inc
jmp
roll
sbbb
push
lds
adc
mov
fwait
push
loop
push
jbe
mov
loope
js
mov
xor
add
push
stos
and
test
lret
ljmp
in
xchg
xor
or
xchg
jae
mov
imul
adc
fimuls
rcrl
hlt
je
mov
add
xor
test
jae
iret
push
dec
pop
jg
pop
leave
push
add
jnp
mov
or
insl
add
adc
push
sbb
sti
daa
inc
or
addb
cmp
and
sbbl
cmp
jns
xchg
cwtl
in
stc
popf
nop
outsb
shll
jbe
mov
mov
xor
sub
fidivrl
aas
nop
call
fcomp
data16
xchg
add
mov
lods
enter
daa
aad
and
int3
adc
aam
push
cs
gs
sti
testl
js
cmp
mov
and
cli
mov
fistps
or
push
shll
jp
popf
in
adc
push
pop
xor
dec
xor
and
pop
pop
sbb
js
push
jp
mov
dec
push
mov
ret
push
aaa
xor
add
js
insl
sub
fdiv
pusha
inc
testl
shrl
dec
inc
or
xor
jbe
jge
jecxz
cmp
add
xor
inc
es
or
jmp
incl
push
add
add
jae
sbb
push
jge
loope
arpl
inc
mov
dec
adc
mov
mov
mov
xchg
sub
xchg
pop
cmpsl
movsb
stos
ret
or
iret
mov
arpl
add
xor
mov
nop
mov
push
xchg
in
mulb
scas
mov
negl
jno
sbb
insl
push
adc
push
jg
roll
push
jns
mov
popa
lcall
dec
cmp
shll
pop
js
adc
adc
push
jbe
push
loope
sub
mov
push
loope
icebp
aas
push
cmc
rcrb
pop
sbb
sub
or
icebp
dec
ds
cmp
lock
jns
aam
adc
push
movsl
push
sub
pop
sbb
push
sub
pop
cmpsb
add
movsb
mov
mov
mov
push
pop
test
mov
pop
mov
mov
js
push
push
icebp
jno
mov
test
mov
lret
fmul
add
shlb
mov
push
mov
aas
cmp
lock
and
sahf
add
stos
mov
add
aas
sbb
popa
xchg
pop
addb
xor
jg
sbb
cmp
mov
mov
leave
xchg
dec
sahf
mov
and
xchg
mov
aam
iret
scas
std
sub
cmp
or
mov
xchg
mov
popf
popa
int
push
mov
lock
or
stos
scas
leave
fwait
lock
adc
jge
cltd
lods
iret
lahf
sub
jns
mov
das
cli
adc
mov
xlat
adcb
add
jo
inc
cld
pop
xchg
pop
jne
pop
sub
cltd
rcll
add
movsl
xor
mov
js
in
iret
in
popa
call
insb
lea
ficomps
dec
testl
push
push
cmpsl
inc
insl
push
leave
in
cmp
xchg
testb
into
push
mov
das
mov
xor
mov
cs
pop
sub
or
sti
les
out
cld
dec
mov
das
in
addr16
mov
es
jle
jp
mov
xor
mov
jge
xor
repz
mov
push
cmpsl
fcmovne
xchg
or
inc
js
and
pop
aaa
leave
or
dec
test
pop
in
cmp
inc
push
pop
loopne
idiv
repz
ret
incb
push
jecxz
add
cmp
mov
hlt
in
dec
adc
jns
lods
dec
and
insb
sub
lods
add
adcb
icebp
insl
ror
sbb
and
popf
pop
mov
popa
and
test
jae
in
iret
mov
movsl
inc
rorb
add
pop
hlt
andb
push
sub
and
jnp
enter
xor
mov
inc
int3
in
dec
gs
add
pushf
dec
add
dec
xchg
xchg
icebp
sub
push
xor
and
xchg
xor
xchg
xor
push
movsb
sub
mov
imul
dec
mov
repnz
test
xchg
adc
insl
cmp
jne
add
lret
jl
adc
or
ds
das
adc
ret
adc
jno
dec
cltd
inc
push
lahf
mov
pop
xchg
jp
or
jecxz
xor
sbb
mov
pushf
sbb
insl
fsubr
popf
add
shr
sub
cmp
cltd
in
fs
enter
inc
test
sub
or
lods
fxch
mov
jb
cltd
scas
jmp
sub
add
daa
cli
sbb
mov
add
jb
and
lea
jae
jg
sbb
mov
pop
or
xchg
cmp
mov
popw
add
js
fisubrl
xor
adc
and
in
daa
and
xchg
and
jb
jecxz
and
fisubs
mov
xchg
pop
sbb
or
insl
lea
insb
lds
cli
cmp
dec
add
jne
inc
out
dec
inc
cli
add
loop
sub
cmp
push
clc
outsb
subb
fsts
outsb
mov
sbb
aas
cltd
mov
push
dec
mov
addr16
pop
test
adc
add
or
rorb
sbb
ret
xchg
mov
inc
xchg
cmpsl
jge
mov
and
ds
fadds
repnz
mov
add
cmc
push
sarb
xor
mov
enter
push
xchg
cmc
xchg
clc
mov
lock
xchg
fsubrl
cli
mov
cltd
test
lods
dec
xchg
and
lea
sub
jg
and
inc
pop
fs
and
fadds
call
movsb
mov
and
ss
lods
loop
popf
pop
iret
ret
xchg
inc
xchg
add
pop
pushl
mov
movsl
add
adc
dec
loope
out
add
add
sahf
std
mov
fucomip
lcall
dec
xchg
das
ret
pop
repz
sub
inc
pop
push
mov
and
mov
dec
push
jmp
mov
xchg
cli
and
cs
imul
jp
aad
sub
sub
js
in
mov
or
nop
aaa
subb
mov
push
mov
push
jne
or
adc
imul
inc
inc
sbb
add
imul
sub
push
push
lods
jo
sbb
jns
pop
mov
pop
or
inc
data16
add
outsl
sbb
jne
mov
add
lret
pop
in
scas
mov
inc
jo
loopne
adc
adc
mov
or
push
shlb
nop
sbb
dec
add
mov
sub
rol
insl
sarb
jno
xor
fistpll
xor
fimuls
sub
ds
mov
dec
push
jmp
or
push
movsb
ficompl
jae
lea
es
adc
cmp
inc
out
inc
add
cmc
and
hlt
and
rcll
jo
lds
push
addr16
cli
jg
xchg
xchg
xor
xor
xor
or
fidivs
shll
mov
dec
cwtl
sbb
sub
mov
lods
test
dec
or
and
lret
fdivs
movsl
jns
inc
mov
enter
or
ret
mov
rcr
loopne
add
mov
ds
and
adc
in
dec
icebp
xchg
xchg
data16
sub
adc
push
pusha
mov
cwtl
sahf
pop
fmuls
and
pop
jnp
repnz
or
sbb
mov
leave
and
int3
pop
lods
out
loopne
dec
fsubl
mov
sub
adc
xchg
arpl
mov
mov
mov
sub
nop
clc
push
in
push
pop
scas
xchg
enter
xchg
stos
push
leave
dec
int
and
add
repz
int3
jo
notl
mov
inc
fs
and
push
and
sbb
icebp
adc
repz
xchg
add
xchg
fwait
and
in
and
lret
sbb
pop
push
dec
adc
pop
jo
and
cmc
adc
adc
or
xor
xchg
popa
sub
int
push
cs
jno
aam
seta
lcall
lahf
mov
push
pop
icebp
inc
push
cmc
push
adc
popa
mov
pop
lret
cmp
adc
aaa
or
int3
mov
jp
loop
cmp
add
les
mov
mov
dec
sub
arpl
mov
das
sub
lods
sbb
jp
iret
pop
rol
cmp
ret
or
andl
out
push
push
js
xor
lea
push
xor
mov
push
cmpsl
lahf
add
and
sarl
or
add
rcrb
shl
sti
add
adc
jno
ret
fs
jmp
ret
sub
adc
xor
les
sti
inc
fdivl
add
jno
mull
nop
test
loopne
sbb
sbb
mov
fcomp
cltd
pop
aam
cli
xor
in
cmp
popa
into
pop
out
adc
inc
sbb
je
mov
add
pop
and
les
testl
or
adc
push
adc
sbb
and
popf
mov
mov
aaa
aad
adc
loope
icebp
mov
inc
ja
sbb
loope
jmp
inc
shll
mov
loop
leave
aas
sbb
and
mov
pop
cmp
imul
push
adc
pop
enter
mov
sbb
movsb
jl
mov
inc
es
scas
mov
addb
lods
sub
pop
mov
mov
push
and
fdivr
cwtl
sbb
xchg
xor
sbbl
add
ja
leave
arpl
mov
mov
je
lods
enter
movsl
sbb
jg
out
sbb
mov
jno
testb
fists
xchg
lahf
outsl
jo
fildll
or
pop
into
adc
push
enter
adc
lea
in
add
out
mov
loopne
xorl
ds
sub
dec
movsb
in
aad
jo
ret
push
push
xor
jbe
xor
cmp
jae
nop
lods
or
pop
push
subb
icebp
or
push
and
lret
call
sub
xor
leave
jae
lods
fmuls
sbb
push
fldenv
xor
xor
imul
hlt
out
leave
sbb
gs
xchg
rcll
rcrb
jno
lds
xchg
add
jmp
je
add
ds
jbe
enter
push
dec
loop
das
mov
jne
or
cmp
dec
call
jnp
ss
aaa
sub
fucomi
andl
mov
in
cmp
cmp
fsubrs
add
mov
sub
adc
jno
push
cmc
sar
imul
inc
adc
and
sub
sub
xchg
scas
and
stos
xlat
inc
imul
add
in
loope
and
inc
mov
shrb
mov
mov
inc
mov
call
or
jp
push
push
xor
cmp
jp
ror
mov
dec
push
mov
xchg
cmp
pop
cmpsb
and
rolb
ret
inc
cmp
inc
adc
dec
jg
add
push
fnstenv
fyl2x
stos
adc
xor
add
mov
addb
int3
dec
jne
repz
data16
push
sahf
and
inc
lea
or
push
jl
nop
mov
pusha
cmp
scas
xchg
lea
pop
xor
mov
sti
and
xchg
xchg
xor
cmp
mov
movb
pop
push
mov
mov
pop
stos
leave
mov
mov
xchg
inc
scas
jle
or
test
and
xor
pop
add
cmp
cmp
adc
fistl
rcll
fs
icebp
push
arpl
sbb
sub
xchg
sbb
mov
add
adc
jae
neg
filds
movsl
pop
xchg
mov
or
loope
jno
push
cmpsl
lock
shl
mov
jno
ds
mov
test
addl
xor
imul
test
sbb
push
pop
ret
cli
fnstenv
push
js
mov
outsb
jne
lahf
or
fwait
mov
mov
pop
jb
mov
sbb
push
das
xchg
lret
dec
mov
fmull
mov
xchg
in
test
test
adc
pop
sub
adc
loopne
inc
and
fmuls
mov
cltd
mov
or
dec
jne
popa
pop
pop
add
dec
mov
cmp
adcl
out
repnz
adc
pop
sahf
pushf
xor
and
inc
and
fnstcw
into
imul
stc
dec
jns
les
adc
xor
cmp
inc
jmp
dec
dec
scas
and
inc
outsl
rorl
fmuls
inc
fisubrs
jmp
mov
inc
iret
sub
adc
and
xor
outsl
and
nop
add
adc
adc
in
stos
push
inc
xor
adc
mov
add
aas
adc
pop
test
sub
lock
jne
enter
jmp
mov
dec
jle
dec
sub
in
add
out
pusha
inc
mov
pop
or
xor
dec
aas
ja
in
add
adc
jne
jecxz
hlt
sub
pop
xchg
loopne
clc
push
into
mov
roll
add
inc
and
dec
imul
and
pop
ss
idivl
and
inc
shll
sbb
add
cmp
test
fstps
mov
xor
xor
sub
ljmp
call
pop
sbb
and
clc
push
rcrb
adc
pusha
loopne
insl
fdivs
lea
jmp
mov
cmp
subb
xchg
outsb
adc
out
mov
inc
push
mov
mov
loope
sub
mov
cmc
sub
aad
sub
int
add
dec
add
or
cmp
rorb
add
add
mov
sub
ret
pop
or
push
nop
ss
push
aas
push
arpl
mov
push
adc
scas
in
inc
xchg
popa
dec
mov
add
jne
inc
pop
pop
imul
or
sarl
out
das
cmp
daa
jl
mov
sti
popa
mov
jo
add
and
and
jno
call
xchg
cmc
out
daa
sub
and
in
nop
lret
push
cmp
pop
cmc
cmp
addr16
or
xchg
or
jge
ljmp
mov
mov
out
dec
xchg
push
dec
or
sbb
mov
data16
test
or
cmp
aad
and
adc
int3
pop
lea
aam
sahf
stos
push
and
pop
xchg
jns
cmc
mov
add
lea
pushf
sub
jbe
xchg
jnp
cltd
pushf
icebp
rcll
scas
jne
sbbl
add
xchg
push
aad
loop
mov
cmp
jbe
bound
push
and
or
push
adc
fs
leave
add
loop
pop
imul
subb
adc
sbb
scas
fistps
lahf
adc
flds
lahf
or
dec
jns
insl
or
dec
pop
xor
mull
push
jge
xor
dec
and
cs
loopne,pn
outsb
hlt
dec
js
dec
imul
aam
push
add
fadd
inc
int3
lds
adc
xor
popa
movsb
test
and
inc
jmp
loop
jbe
mov
xchg
mov
mov
pop
xchg
dec
aaa
push
mov
fldcw
out
movups
lock
mov
mov
shlb
enter
mov
add
movsl
xor
hlt
pop
mov
mov
out
push
push
out
dec
into
out
add
repnz
or
insb
outsb
loopne
arpl
jns
mov
mov
adc
int3
and
fsubrl
wbinvd
adc
insb
jae
dec
add
sub
std
outsb
test
pushf
sub
sbb
sbb
dec
cmp
in
and
fstpl
sti
cmpb
loope
and
cmp
inc
pop
xchg
cmp
xchg
adc
mov
push
push
fidivrs
shl
movsl
xchg
loopne
dec
adc
add
in
xor
outsl
daa
bound
inc
mov
and
out
or
cmp
jo
inc
mov
fadds
lds
cmp
pop
push
mov
inc
scas
subl
pop
jmp
lods
mov
sub
add
ja
fwait
jle
adc
lds
sub
mov
popa
push
lods
cmp
je
out
cmpsb
push
call
inc
cmpl
fwait
pop
adc
pop
bound
hlt
rcl
cmpl
mov
call
xor
xlat
xchg
cmp
add
nop
cmp
pop
push
clc
dec
out
loopne
or
xor
jmp
in
mov
jo
jl
dec
mov
idivb
rorl
loope
and
jg
insl
and
xchg
leave
push
sub
jg
stos
xor
call
inc
hlt
sbb
pop
scas
dec
adc
mov
and
mov
adc
and
test
or
dec
mov
pop
and
push
shrb
add
and
sub
dec
or
cltd
in
movsb
cmp
cs
sbb
adc
cwtl
mov
lds
push
add
push
pushl
and
add
ds
push
adc
test
jge
push
cmpsl
imul
inc
cmp
std
sub
push
cmc
in
gs
or
inc
sub
sbb
jmp
inc
pop
outsl
test
add
xor
test
xchg
fiaddl
sbb
ror
das
js
jmp
fldcw
std
ret
lcall
aad
mov
mov
imul
lods
pop
push
imul
je
mov
push
shrl
and
shll
sub
inc
xchg
sub
sbbb
jle
adc
out
out
xor
push
sub
in
dec
push
dec
popf
fwait
mov
adc
mov
pop
lods
in
pop
or
bnd
xchg
xor
nop
mov
and
sbb
mulps
hlt
sbb
jmp
roll
lret
jmp
add
rclb
push
rolb
pop
dec
jne
cmp
out
ror
mov
pop
dec
clc
and
stc
lea
ljmp
sbb
xor
and
inc
movsl
sub
inc
and
dec
sbb
fwait
pop
insb
bound
lret
xchg
in
cmpsb
xchg
xchg
jb
in
ds
and
ret
xor
adc
mov
cmpsb
ret
push
pop
mov
enter
fcmovbe
stos
adc
push
lods
mov
inc
call
jae
and
jle
fnstcw
push
inc
fsubrs
movsb
enter
add
lods
sarb
pop
and
je
sbb
fs
mov
sbb
or
dec
sub
int
push
mov
cltd
icebp
pop
pushl
jmp
test
pop
stos
mov
leave
dec
pop
aad
lcall
and
xchg
mov
or
in
pop
sub
inc
add
vmovapd
add
shlb
adc
out
nop
bound
jne
cmp
add
inc
aam
lods
inc
std
sbb
lret
call
test
mov
add
cmpsl
lds
shll
repz
pavgw
cwtl
rclb
inc
xchg
insb
adc
push
sbb
xor
stos
xor
xor
enter
shll
and
bound
outsb
movzwl
into
xchg
test
mov
cmpl
mov
fisubrl
push
mov
cmp
cmpb
mov
lret
push
dec
clc
inc
push
cmp
pop
push
mov
push
jbe
mov
sub
cmp
ds
adc
movsl
adc
cwtl
mov
mov
xlat
sbb
and
jle
mov
jo
ret
xor
jo
sbb
jns
insl
jae
mov
cmp
xchg
add
and
inc
movsb
dec
add
sub
mov
sbb
addl
and
pop
sbb
push
fsts
aaa
and
dec
or
inc
in
test
dec
push
jb
pop
jg
sub
pop
pop
sti
push
je
in
fs
adc
add
sub
cmc
repnz
dec
insl
stos
cmp
jns
in
call
jno,pn
or
jge
sbb
lds
mov
ret
in
mov
mov
xchg
mov
ds
cmp
mov
mov
ja
fneni(8087
je
outsb
cmp
xchg
iret
push
lods
push
pop
pop
mov
arpl
inc
sarb
shr
push
lret
mov
pop
sub
scas
out
cs
sub
imul
cmpsl
ja
add
imul
cmpsb
push
data16
mov
pushf
addr16
cmp
add
add
dec
jo
and
cmp
and
std
aaa
sti
xor
mov
cmp
and
xchg
mov
pusha
mov
sbb
pop
adc
sbb
pop
and
push
pop
mov
enter
xchg
insl
mov
and
jle
sub
xor
cmp
jne
sbb
cltd
sbb
and
popa
xor
and
addr16
mov
pushf
jecxz
adc
sub
xor
push
fldcw
pop
cmp
xor
cmp
dec
push
sub
jne
pop
clc
xor
xchg
out
bound
imul
push
xchg
xor
cmp
mov
dec
lods
jmp
mov
lea
sub
lcall
sbb
subb
inc
xchg
bound
mov
lods
fdivrp
je
push
jbe
mov
repz
push
in
pushf
xor
test
mov
mov
mov
cmpl
mov
xchg
out
stos
ret
out
lock
xor
arpl
inc
xchg
jb
pop
jae
add
dec
pop
scas
inc
das
inc
fnstsw
jno
inc
lea
aam
or
jp
push
repz
incl
add
adc
sbb
in
es
shl
mov
jo
sub
mov
cmc
test
dec
cld
inc
jno
cmp
cmp
sti
dec
out
xchg
sbb
pusha
sub
fidivrs
jae
inc
into
mov
mov
xor
insl
nop
int
adc
pop
cmp
movsl
sub
jae
jbe
popa
pop
push
lock
ficomps
xchg
shrl
rcl
popf
dec
aas
mov
add
push
dec
inc
dec
mov
mov
mov
out
xor
in
jns
lcall
add
outsl
jl
test
test
jge
mov
dec
xlat
rcll
jns
test
sbb
pop
sbb
add
or
aaa
inc
mov
lods
and
nop
scas
and
jo
push
sub
dec
les
and
insb
sub
lds
dec
jns
sbb
mov
mov
test
xor
dec
enter
add
stos
sarb
pop
and
sub
xchg
lock
pop
inc
scas
sahf
mov
fcoml
out
in
add
mov
loop
and
adc
xchg
dec
adc
fcoml
jo
dec
xchg
sbb
push
subl
repnz
cmp
loope
adc
gs
mov
sub
add
sub
inc
dec
popa
icebp
sar
call
cmp
pop
cwtl
cli
xor
jno
aas
in
push
out
fdivr
jmp
bound
iret
scas
mov
mov
es
sarb
movsl
and
loope
jl
loopne
xor
xchg
lock
or
jle
repnz
in
push
test
inc
sti
sbb
frstor
xor
aaa
in
dec
dec
cmpl
sbb
jae
add
pop
pusha
push
sub
int3
cmpsl
sub
jecxz
add
jns
lds
mov
sbb
addr16
push
add
inc
imul
cmp
mov
jnp
mov
in
adc
mov
sub
cmp
mov
pop
hlt
push
inc
push
mov
jl
add
lds
xchg
xor
aam
nop
push
movb
cmp
ljmp
iret
aaa
les
add
or
xor
std
xchg
pop
ret
in
jnp
iret
push
call
std
stos
fldt
sub
cmc
jo
mov
mov
xor
shll
std
mov
daa
popf
insl
test
xchg
popf
and
les
outsl
mov
ja
in
adc
divb
inc
push
movsl
js
and
ljmp
mov
aam
test
mov
mov
call
int
dec
push
xchg
daa
shrl
jnp
stos
pop
add
lods
push
sahf
mov
sbb
fs
je
inc
arpl
js
arpl
sbb
cs
notb
cwtl
mov
cmp
xchg
jge
pop
xchg
cs
dec
add
fnstsw
test
push
sahf
pslld
insl
cmp
je
daa
dec
popa
fs
adc
icebp
mov
inc
stc
push
add
jmp
stos
rcrl
ljmp
xor
push
jp
cmp
sbbl
jecxz
xchg
sbb
fldt
jp
std
or
add
lds
stos
ret
sub
mov
loope
pop
incb
cmp
dec
mull
sbb
pop
iret
roll
xchg
das
lcall
movsl
pop
stos
pop
shll
pop
cmp
ror
jmp
cltd
cmp
lahf
add
loopne
pop
sbb
xor
pusha
das
xor
xor
jle
or
xchg
lret
mov
mov
outsb
and
aas
inc
sub
rol
push
in
mov
iret
jmp
mov
fistpl
movsl
xor
call
in
xor
loop
dec
inc
loop
mov
jbe
mov
sti
mov
fcoms
scas
or
fisubl
pushf
outsl
movsl
stos
fnsave
bound
in
adc
icebp
mov
inc
leave
int3
sbb
sub
adc
popl
inc
repz
roll
lcall
pop
imull
call
jno
mov
xchg
repnz
pushf
mov
inc
xor
jbe
stos
cld
and
scas
or
sbb
xor
jmp
cs
xor
xchg
cmpsl
and
pop
cmp
xor
out
dec
lds
sahf
adc
out
inc
icebp
xchg
stos
sub
into
lock
cmp
fidivrl
sbb
decl
xchg
mov
push
jb
stos
loop
sbb
pop
test
adc
shll
push
ret
mov
pusha
lret
lds
pop
mov
xor
push
insl
rol
or
data16
mov
std
mov
std
ret
sbb
push
push
mov
xlat
xchg
sbb
or
xchg
mov
and
in
and
inc
pop
or
add
sbb
adcl
fsubrl
mov
adc
mov
fs
loopne
lret
sbb
in
aas
push
in
cmp
sbb
jg
or
in
filds
jne
es
nop
ss
notb
aad
jge
pop
sbb
les
lcall
cmc
cli
or
fwait
iret
movsl
sub
sbb
shl
rorb
test
and
xchg
mov
xor
mov
jge
inc
dec
xor
lods
sbb
adc
cmpsl
idiv
push
pop
test
sarb
lock
add
mov
clc
test
mov
push
sub
push
jne
out
pushf
test
mov
stos
fstp
push
jbe
xor
mov
dec
les
data16
cmp
loopne
push
loop
xor
fcoms
xchg
pop
sub
fwait
mov
arpl
out
jo
push
clc
les
sbb
xor
mov
dec
and
out
movsl
cltd
icebp
test
cs
jb
xor
sar
imulb
ja
loope
js
leave
ljmp
mov
mov
jns
sub
xchg
insb
fistps
or
pop
sub
in
push
xor
xor
repnz
mov
push
je
pop
rcll
cwtl
jecxz
mov
repz
cmc
mov
fisubs
push
mull
adc
pop
pop
xchg
mov
cs
push
fisttpll
mov
push
mov
xlat
adc
pop
lds
and
loop
cs
ror
inc
sbbb
cwtl
add
outsb
push
insl
adc
sbb
imul
data16
sbb
push
sub
push
adc
add
push
std
movsl
mov
sbb
push
in
sbb
xchg
cmp
stos
test
das
or
data16
addr16
mov
push
les
inc
icebp
sub
inc
mov
pop
jb
cmpsl
sbb
testl
xchg
inc
add
adc
xor
mov
inc
andb
push
mov
sub
les
roll
mov
mov
add
or
mov
or
inc
sbb
pushf
lret
mov
and
cld
xor
jb
inc
xchg
mov
loopne
call
xlat
dec
faddp
loope
jge
rclb
push
in
push
sti
and
pop
frstor
sub
lods
or
lock
and
add
xchg
repz
clc
data16
add
out
inc
ficoms
sbb
mov
call
lret
jg
ret
notl
adc
daa
adc
test
mov
out
mov
imul
mov
push
addl
std
test
mov
mov
mov
pop
stos
xchg
pop
adc
jp
leave
out
or
idivl
fiaddl
pop
mov
das
in
adc
mov
inc
test
mov
or
call
lcall
lds
jns
inc
inc
into
out
stos
pop
nop
leave
adc
loope
sbb
inc
xor
adc
and
xor
inc
sbb
mov
pop
sbb
gs
cmp
leavew
xchg
dec
fidivrs
pop
jle
je
int3
lea
mov
orb
insl
jle
jo
test
xor
es
sub
adc
adc
es
xchg
mov
imul
lea
aaa
push
xchg
push
sbb
xchg
cmp
mov
loop
xchg
mov
xrelease
xchg
add
mov
leave
ficoms
ja
dec
adc
hlt
dec
add
arpl
push
xchg
mov
xchg
push
fwait
sbb
fidivrl
stos
int
mov
mov
xor
mul
fidivrs
out
xor
enter
mov
and
cmpsl
incl
lea
jne
push
icebp
sub
mov
sub
bound
insl
ljmp
stos
push
mov
xor
adc
outsl
push
out
push
sub
add
mov
mov
inc
enter
add
sbb
insb
and
lahf
ja
jnp
adc
outsl
in
mov
movsl
testb
or
aas
inc
cmp
pushf
inc
xor
std
pushf
jl
xchg
daa
xlat
mov
xor
movsb
adc
aaa
sbb
js
rorb
sub
xor
mov
rorl
pushf
mov
fs
mov
cmp
nop
in
push
sbb
xchg
movsl
pop
inc
add
sar
mov
xlat
mov
lods
and
into
jle
cs
push
mov
mov
inc
mov
mov
xchg
rolb
bound
dec
test
mov
int
rcrb
mov
mov
mov
push
lods
in
scas
ret
ja
movsl
mov
call
hlt
xchg
and
pusha
sub
cld
movsb
lds
adc
add
inc
jns
and
and
adc
stos
aas
adc
mov
dec
xchg
pop
pop
add
jns
sub
cltd
bound
icebp
out
or
js
orl
leave
rol
cwtl
mov
xchg
sbb
inc
xchg
inc
cmpsb
leave
and
ljmp
loope
aad
daa
sbbb
lds
int
test
mov
add
add
je
jl
in
dec
xchg
cmp
cli
sbb
cmc
or
mov
xor
adc
inc
and
int3
inc
loope
sbb
mov
inc
cmpsl
inc
inc
je
shll
cld
inc
jnp
arpl
cmp
cmp
roll
enter
stc
call
sbb
lret
sti
jbe
cmp
mov
xchg
xor
cmp
lahf
ljmp
cmp
push
dec
out
dec
addr16
idivl
push
loope
out
repz
les
loopne
dec
mov
jle
mov
sub
dec
leave
pop
ss
imul
jne
int3
xchg
test
pop
xchg
jg
xor
add
pop
or
lea
nop
out
js
cld
mov
sub
cmp
popl
cmpl
inc
and
pop
decb
and
out
pushf
out
movsl
imull
xchg
jmp
or
leave
pop
xor
outsl
cmp
rcrb
jno
mov
pop
xchg
shr
mov
mov
fucomi
mov
dec
xor
fcmovu
insb
cmpsb
xor
movsb
or
pop
and
out
sub
xchg
arpl
dec
mov
inc
adcl
sub
js
stos
test
sub
sahf
pop
arpl
rorb
pop
or
pop
fstpl
movsl
dec
inc
mov
sbb
sbb
or
pusha
and
orl
add
das
cmp
aam
das
xlat
imul
adcl
jns
lea
popa
jnp
mov
push
lahf
and
cmp
fsubs
scas
adc
clc
push
push
aas
movsl
xchg
dec
jbe
lods
pop
fcmovnbe
andl
ljmp
cmp
jmp
cmp
sub
cwtl
and
add
aaa
mov
mov
ficoms
xlat
idiv
push
hlt
icebp
cwtl
add
mov
sub
jg
sbb
cli
call
xchg
out
ja
xchg
sub
sbb
mov
xorb
test
xor
xor
dec
pop
faddp
rcrb
push
cmc
mov
out
push
dec
loopne
enter
and
test
lahf
mov
or
cmp
aam
xchg
enter
jge
xor
lea
push
xor
lods
sbb
hlt
sbb
add
test
adc
inc
inc
loop
cmp
xor
cmp
or
addl
adc
ss
jnp
repnz
std
mov
gs
int3
cs
bnd
dec
cmpsb
xchg
and
mov
cli
sub
or
orl
pop
mov
sti
xor
shrl
fisubrl
repz
mov
push
sbb
xor
jo
xorb
xchg
cli
and
fdivrs
orl
add
lods
mov
sbb
or
mov
test
ljmp
adc
stos
push
lods
leave
incl
repz
or
pop
cmp
cmp
adc
call
mov
add
repnz
push
les
inc
repnz
imul
gs
dec
dec
pop
inc
jo
cmp
inc
repz
push
jns
ljmp
ret
icebp
ret
rolb
pop
inc
xchg
cmpl
daa
cld
jecxz
mov
sub
sub
pop
testb
dec
ljmp
aaa
xchg
mov
lods
cmp
adc
mov
cmp
lret
test
imul
in
xlat
and
mov
cmp
out
sub
mov
mov
ret
ret
cmp
cmp
xor
push
fcomps
push
xor
test
addl
jmp
adc
jns
sub
ret
mov
and
xchg
mov
daa
js
xchg
and
popa
push
mov
mov
cmp
xchg
mov
in
push
jl,pn
fbld
lahf
mov
aaa
movsl
mov
jb
jl
jae
movsl
lods
insb
add
inc
xorl
jecxz
and
push
push
inc
scas
test
out
add
sub
sub
subb
and
test
incb
mov
lock
mov
roll
les
orl
or
and
mov
icebp
adc
and
cmp
adc
mov
xor
push
adc
addps
dec
gs
loop
mov
or
shl
push
pop
aas
enter
shlb
xchg
dec
mov
mov
sub
push
add
xor
mov
xchg
jns
jl,pn
stos
test
mov
fcoml
aas
repnz
and
loop
xor
add
jge
jge
or
nop
pop
decl
aam
dec
inc
ret
or
movsb
scas
repz
xor
out
and
jne
pop
mov
enter
je
pop
cmpb
pushf
mov
pusha
cmc
sbb
gs
loopne
and
xchg
test
stc
push
mov
xchg
cmp
mov
imul
mov
mov
dec
mov
lea
shrb
cmp
fdivl
es
pop
into
add
mov
aam
sbb
or
shll
les
dec
movsl
sbb
push
mov
push
int3
loopne
sub
jns
mov
jnp
lret
inc
xchg
fdivl
add
dec
add
sbb
sub
pop
or
xchg
test
push
test
pop
lods
aad
inc
pop
daa
jle
xorb
and
inc
test
lret
add
and
mov
or
push
add
out
cs
mov
movb
int3
clc
mov
mov
loopne
cmp
mov
jae
jb
repnz
outsl
fmuls
dec
arpl
and
fidivrl
cmp
pop
jp
jecxz
loopne
pop
inc
push
mov
xchg
xchg
ss
lret
stos
push
jl
xor
inc
test
xchg
call
pop
cli
jb
fistps
shlb
pop
xor
add
icebp
ljmp
push
adc
das
sahf
clc
bound
add
push
shl
jns
out
push
aaa
jbe
add
push
shll
mov
push
cli
dec
add
dec
gs
inc
stos
or
add
pop
clc
stc
jnp
push
popf
or
xor
leave
adc
dec
lret
ret
or
fisubrs
jge
dec
push
and
pop
fnstcw
rol
cmpsl
mov
roll
xlat
inc
or
lods
int
jmp
cli
push
and
das
stc
mov
xchg
dec
cmp
mov
cmp
xor
leave
mov
cli
sub
adc
mov
hlt
stos
addl
push
mov
mov
data16
out
sti
out
mov
loope
movsl
in
or
test
jmp
mov
mov
cmp
je
lret
or
cmp
xor
jb
adc
sahf
fisttpll
into
test
xor
xor
test
jae
dec
xor
xchg
aas
pop
jge
call
cltd
jl
repz
repnz
mov
sarl
iret
xor
mov
shrl
fs
cmpsl
data16
push
push
push
fs
dec
push
push
popf
mov
mov
aam
movsl
addr16
jecxz
mov
and
arpl
aas
mov
pop
or
sti
cmpb
mov
pop
fadd
rcl
push
test
mov
push
push
mov
std
add
loop
sbb
sub
inc
xor
in
sbb
iret
sti
dec
movsb
out
mov
shlb
popf
ficoml
mov
xchg
lods
iret
mov
rorl
scas
into
cmpl
or
mov
or
jg
mov
jae
and
cli
rclb
mov
gs
jbe
push
insb
mov
mov
sbb
into
cmp
xor
mov
leave
xchg
lods
je
add
inc
adc
mov
mov
xchg
lock
sbb
pop
jo
jnp
lret
clc
jmp
pop
add
mov
cmp
cmp
mov
add
enter
adc
movsb
dec
les
lret
or
and
insb
movb
cmp
mov
mov
mov
sbb
sub
dec
fcomps
call
dec
cltd
mov
shll
imul
mov
xor
sub
lods
jg
cmp
ljmp
mov
adc
out
mov
stos
xchg
shrl
stos
jg
push
iret
inc
in
sbb
pop
inc
xchg
pop
sub
lods
mov
inc
adc
pop
incl
push
cmp
outsb
mov
insb
shlb
mov
popf
adc
adc
fidivrs
sub
out
jl
xchg
pop
cmp
arpl
mov
ljmp
sbbb
popa
loop
mov
lret
incb
and
popf
dec
inc
loopne
mov
inc
and
test
or
or
mov
mov
ret
in
ds
xchg
mov
sbb
cmp
add
les
pop
cld
js
pop
pop
shl
pop
pop
cmpsb
cmc
sbb
pop
loop
mov
add
enter
mov
mov
push
dec
mov
push
fldl
xor
test
and
filds
push
test
orb
sbb
rcrl
jb
cld
pop
cs
adc
jns
aaa
aad
outsb
xor
hlt
ja
lret
mov
sub
inc
xor
adc
loop
imul
add
icebp
fisttps
mov
ss
loop
xor
ss
or
sbb
rolb
inc
mov
rcll
push
pop
fisubs
hlt
dec
scas
inc
inc
and
fdiv
sbb
mov
ffree
push
sub
mov
pop
add
push
arpl
mov
les
jg
aad
mov
mov
data16
xchg
push
add
les
lahf
cmpsb
fs
call
in
xor
rolb
and
sub
lea
les
psraw
sbb
lret
insl
sbb
pop
adc
sti
add
cmp
lret
daa
fldl
dec
lret
or
mov
out
sbb
push
insl
cmp
xor
push
push
mov
push
jns
enter
test
xor
mov
pop
mov
out
inc
mov
jl
jge
pop
dec
mov
sbb
mov
pop
out
xor
jp
sub
jae
out
adc
and
xchg
inc
pop
ss
imul
add
movsl
fistpll
lods
dec
gs
es
cmp
xchg
pop
fwait
pushf
aad
lock
flds
pop
lock
mov
shlb
sub
iret
int3
jle
ss
cwtl
cs
imul
out
adc
arpl
out
aad
dec
add
jp
aam
xor
mov
les
or
movsl
aam
push
dec
sub
call
xchg
fs
clc
dec
mov
push
mov
cmpsb
loopne
gs
add
and
mov
loopne
mov
testb
data16
clts
push
sbb
jge
pop
push
xchg
jp
jmp
inc
mov
inc
fmull
dec
cs
ss
mov
pop
push
pusha
outsb
push
and
pop
lea
pop
push
cmc
in
aas
cmp
and
loope
xor
and
in
fwait
aas
mov
test
imul
sbb
cmp
sti
adc
clc
xchg
sbbb
xor
pop
dec
cli
aas
pop
imul
dec
scas
dec
xchg
xchg
or
daa
mov
fwait
or
stos
outsl
add
ljmp
jb
pop
insl
mov
mov
movsl
jge
mov
pop
cltd
outsb
jmp
inc
rcll
clc
push
cltd
inc
sbb
addl
bound
push
jecxz
xchg
jae
pop
stos
push
sbb
in
or
mov
sbb
ss
push
push
fldl
ficompl
sub
and
adc
push
fcmovne
xlat
sub
movsb
cs
jnp
mov
pop
dec
xor
or
inc
pop
shrb
or
ja
push
push
arpl
pop
or
fidivs
nop
sahf
xchg
cmp
mov
loopne
xor
stc
push
cs
mov
mov
out
andl
scas
addr16
jecxz
in
pusha
mov
and
lahf
push
sahf
or
mov
jo
push
adc
push
or
icebp
negb
mov
inc
jmp
xor
mov
jbe
in
sub
adc
or
pop
jg
lock
aas
filds
add
pop
fwait
in
fucomp
mov
bound
imul
dec
sti
cmp
out
pop
imul
and
sahf
pop
inc
adc
mov
jmp
cmp
ret
push
pusha
decb
movsl
cmp
push
adc
imul
or
sbb
subl
add
push
faddp
sub
jecxz
and
add
mov
sbb
pop
push
pop
pop
ljmp
pop
inc
cmp
sbb
xor
testl
rorb
fildl
xlat
adc
call
xchg
loope
out
adc
or
push
sbb
push
mov
sbb
push
adc
xorl
and
icebp
push
sahf
push
inc
adc
add
or
les
hlt
or
fmulp
push
sbb
imul
callw
sub
lods
fstp
in
cmp
clc
movsb
dec
push
movsl
lret
mov
push
stc
lret
dec
mov
lods
inc
movsb
mov
mov
push
jo
cltd
push
arpl
xor
add
sub
sbb
cli
nop
or
add
sbb
mov
mov
inc
insl
push
sbb
cmp
pusha
fs
jae
push
add
stc
dec
mov
add
and
call
or
das
loope
mov
mov
sbb
ljmp
fcomps
or
lahf
pop
insl
pop
stos
pop
aas
xor
notl
xchg
jae
stos
cltd
and
mov
jne
ss
mov
mov
inc
xor
and
jge
enter
faddl
push
rcrl
nop
xor
filds
or
stc
loop
jmp
cmp
push
int
xchg
mov
pop
arpl
push
popf
stc
movsl
adc
mov
jno
push
test
movsl
pop
je
test
test
aam
jp
push
xor
push
xchg
jmp
roll
mov
jo
scas
mov
dec
sub
add
or
sub
jp
addb
jne
mov
cli
pop
dec
mov
gs
mov
out
xchg
cmpsl
xlat
pop
sbb
or
rclb
je
es
pop
gs
ret
pop
dec
dec
leave
inc
out
pop
mov
mov
or
adc
ret
cmc
jne
roll
in
dec
push
pop
mov
pop
aaa
and
dec
pop
clc
add
pop
arpl
or
xchg
or
stc
inc
pop
out
call
es
in
int
sar
pop
shrb
mov
and
xor
adc
lahf
movsb
inc
aad
in
ror
push
in
xchg
imul
jle
sub
cmp
and
andb
scas
cmp
lret
mov
mov
sbb
shr
and
lods
pop
pushf
int
adcb
sahf
adc
nop
enter
shlb
test
xor
iret
add
orb
repz
xor
push
fildl
imull
jae
ret
sub
xor
shrb
xchg
sub
pop
dec
orb
adc
pop
jae
ret
sub
push
add
pusha
push
xor
enter
lret
lret
jbe
test
test
cmp
addl
gs
mov
inc
jmp
adc
mov
or
test
pop
nop
jl
ja
call
inc
das
roll
pop
scas
xor
cmpsb
mov
push
mov
mov
push
mov
xor
jnp
scas
xor
loopne
or
dec
push
mov
or
sti
push
cmp
fsubl
push
sub
scas
cmp
clc
scas
pop
jb
cmpsl
xor
inc
or
test
ss
pop
push
push
push
imul
push
xchg
loope
inc
hlt
adc
mov
fneni(8087
or
lcall
inc
push
jl
test
stos
xor
sbb
cli
dec
shl
sbb
push
popf
inc
jb
fwait
test
adc
or
or
xchg
es
nop
ffreep
mov
push
pop
aam
cmp
sahf
pop
pop
dec
stc
jno
sahf
jns
bound
aas
aad
dec
pop
cmc
sbbl
mov
or
cltd
and
push
dec
test
and
test
cs
add
sub
push
or
cmp
push
pop
enter
in
aaa
aad
ss
dec
push
and
enter
inc
loopne
movl
scas
jg
push
jge
stc
add
adc
popf
push
fs
and
ljmp
add
out
pop
addr16
push
es
jle
sbb
insb
pop
arpl
push
and
inc
nop
mov
pusha
inc
xchg
xor
cmp
push
enter
xchg
jmp
das
adc
movsl
in
xchg
dec
dec
mov
mov
jg
adc
sub
rcll
test
cmp
pop
push
pop
ss
sbb
pop
adc
pop
xor
cld
sbb
push
cmp
xor
xchg
iret
inc
daa
repz
inc
pushf
scas
adc
rcl
add
test
xchg
movsl
ljmp
xor
test
addr16
lds
xchg
sub
jmp
dec
mov
movsl
and
lcall
mov
xor
hlt
outsl
pop
or
mov
pushf
push
setno
pop
out
push
aam
cli
xchg
scas
arpl
scas
xor
add
mov
adc
aaa
adc
and
pusha
jo
sbb
jne
pop
jnp
xor
fadds
mov
aaa
mov
les
xor
mov
push
pop
pop
add
mov
fadds
jo
icebp
sub
mov
je
movsl
mov
inc
or
mov
sbb
mov
sbb
fmul
cmp
cmp
and
shld
xor
daa
imul
ss
adc
adc
les
lret
and
sub
cld
push
fisttpl
cmp
mov
push
repnz
sub
sbb
jmp
push
jle
cmp
mov
movl
loope
sahf
icebp
rclb
pop
adc
mov
ljmp
out
mov
sarb
adc
jb
stos
sub
addb
xchg
jge
fistps
out
stc
sbb
sbb
inc
lahf
es
fnstcw
in
pusha
stc
movsl
and
and
insl
fs
or
test
aaa
mov
fmuls
sub
loopne
mov
push
stc
push
sbb
dec
cmp
test
add
cmp
icebp
stc
js
aam
xor
push
add
dec
add
and
add
fstpt
cwtl
nop
lret
std
mov
xor
lods
into
and
sub
dec
jl
push
inc
sbb
ret
push
pop
xor
imul
or
cli
int3
js
dec
pushf
stos
push
dec
cld
cwtl
xchg
push
or
mov
xchg
loop
das
call
rorl
add
xor
push
add
fcomps
andb
mov
xlat
movsl
test
and
mov
push
mov
loope
push
fisubl
ss
hlt
mov
in
jbe
ja
lahf
loope
mov
mov
mov
lcall
lods
add
adc
ret
xor
stos
xorl
call
xchg
pop
inc
inc
aaa
aaa
mov
sbb
adc
mov
aaa
fucom
jecxz
jecxz
ds
xor
scas
mov
lds
or
jns
cld
lods
jno
imul
push
aam
mov
cld
add
jl
cmp
nop
mov
push
std
shll
and
xlat
or
aam
pop
sub
cltd
shl
stos
xor
jae
and
pop
aaa
fcompl
xchg
cmpsl
jno
pusha
xchg
add
shl
sbb
jecxz
xchg
mov
leave
xchg
mov
repz
fstpl
inc
xor
rclb
aad
shrl
outsb
out
jecxz
push
mov
mov
xchg
fadds
jnp
jns
lahf
xor
fstp
push
dec
inc
andl
add
adc
roll
aam
inc
cmp
adc
or
push
dec
mov
jo
cli
int
pop
call
lock
pushl
mov
rcll
xchg
xchg
pop
call
repnz
setp
xor
cmp
mov
pop
push
cmp
xchg
add
call
inc
idivb
in
and
and
cwtl
cmp
xchg
adc
in
lret
or
mov
cwtl
sbb
and
xor
add
roll
mov
dec
mov
enter
into
jp
inc
xchg
jns
ret
pop
or
lds
lods
sub
std
xchg
ss
mov
dec
arpl
inc
ja
mov
call
sti
stos
cmp
inc
mov
xlat
sub
push
shlb
les
std
ss
sbbl
loope
icebp
sub
push
mov
lret
mov
xorl
psubsb
lods
ss
negl
mov
mov
dec
mov
or
call
xor
sahf
inc
add
sarb
lds
lods
fs
push
cmp
sub
push
inc
or
inc
orl
xchg
cmp
jne
add
add
add
mov
lcall
pop
mov
mov
mov
imul
xchg
dec
push
aad
lret
jecxz
xchg
dec
push
dec
clc
sahf
leave
ja
mov
imul
xor
aaa
gs
loopne
jmp
ret
cmp
jmp
arpl
xor
jmp
mov
mov
scas
lret
jns
mov
dec
mov
call
add
adc
lcall
gs
gs
sbb
jno
lret
outsl
adc
sbb
roll
in
sub
int
mov
popf
pop
jle
test
push
push
mov
faddl
test
and
cltd
push
or
jb
fnstenv
pop
inc
cmp
mov
aaa
ja
cmp
mov
out
sbb
xchg
aas
mov
sti
xchg
scas
idiv
das
daa
lock
pop
movsl
pop
imul
aad
stc
mov
fisttpl
jge
lds
lods
imul
mov
dec
icebp
insb
sub
lock
shl
jle
jge
pop
cld
push
sub
adc
sahf
inc
add
ficompl
xorb
xchg
and
adc
int
aas
adc
iret
cmpsb
xchg
leave
push
or
in
jg
and
ja
xor
inc
ret
enter
aad
mov
lret
push
adc
cmp
rcl
dec
pop
mov
xor
inc
xorl
clc
sahf
mov
hlt
lods
add
adc
add
fcoms
scas
sub
fists
es
push
cmc
dec
push
or
sahf
bound
ljmp
xor
or
imul
in
dec
jns
jb
xchg
sub
push
pop
es
push
inc
adc
jo
andl
add
sub
and
xchg
xchg
dec
in
hlt
ficomps
cld
jmp
mov
jle
sbb
rorl
aam
repz
test
sub
xor
jo
jns
and
test
push
div
mov
mov
insl
push
sti
out
pop
pushf
cmc
xor
clc
mov
cmc
jmp
cld
cld
lea
ljmp
hlt
xor
push
in
lret
or
cmp
push
andl
jo
mov
jl
sub
jns
subl
rcrl
push
rolb
xor
adc
adc
adc
dec
mov
enter
inc
nop
popf
push
out
push
sahf
mov
arpl
push
mov
or
and
mov
jge
shlb
and
and
cmpsl
jmp
mov
je
push
fsts
gs
mov
stc
lcall
xchg
mov
jae
sti
in
and
outsb
sub
xlat
cmp
insb
imull
push
lea
push
mov
scas
lods
inc
daa
sub
call
js
pop
test
jge
test
in
call
les
fmull
inc
or
mov
or
sub
jne
mov
repz
imul
xchg
jmp
addr16
ret
call
xorl
test
xor
aad
pop
cmc
or
cmc
sbb
dec
sub
jb
jnp
fisubs
mov
jecxz
xor
ret
xchg
aaa
mov
adcl
xchg
fcoml
sub
sahf
pop
push
shlb
dec
cld
jecxz
in
test
or
pop
pop
mov
fst
mov
pushf
sub
xchg
push
push
cli
idivl
loope
inc
jp
enter
movsl
ja
xor
fwait
ds
loope
mov
and
stc
xchg
add
dec
and
and
dec
pusha
jp
push
sarb
repz
cmc
int3
xor
je
fcomip
mov
data16
jno
pop
and
movsb
shrb
push
stc
scas
jbe
xor
add
jne
or
out
pop
leave
xor
jge
mov
icebp
cmc
lock
es
mov
adc
lret
or
mov
jecxz
call
sub
jmp
adc
or
cltd
lcall
fwait
sub
sbb
enter
cmp
fistl
xchg
and
fdivp
jge
xchg
lock
je
mov
push
push
mov
mov
rcll
loop
dec
sbb
mov
push
imul
lcall
cmp
dec
insl
jp
adc
das
mov
mov
push
mov
xacquire
loope
pop
dec
movsl
rcll
test
sub
leave
scas
pop
rorb
testb
push
cmp
movsl
cmp
mov
sbb
adc
or
push
adc
inc
mov
xchg
dec
int3
xor
test
mov
leave
dec
xchg
aam
clc
stc
xorl
leave
lret
pop
outsl
push
xor
push
pop
and
cltd
mov
std
insb
add
iret
mov
outsl
push
fadds
cld
jne
outsl
mov
std
cmpl
out
add
daa
icebp
inc
mov
bound
sub
ret
stc
adc
icebp
jmp
shr
add
jnp
rolb
int3
cmpsl
add
out
and
dec
xchg
das
hlt
ror
push
fsts
or
lock
dec
dec
and
push
sub
or
dec
ljmp
dec
add
dec
mov
in
aad
rorb
in
mov
jl
mov
dec
stos
inc
cmp
inc
adc
sub
xorb
test
dec
mull
cmp
outsl
xor
lock
mov
mov
enter
push
out
mov
sub
imul
lods
inc
mov
sbb
jge
adc
sbb
dec
cmp
paddq
pop
push
pusha
adc
mov
mov
sbb
in
jae
std
in
push
mov
jae
mov
jmp
cmp
lods
leave
sbb
iret
xorb
inc
or
xchg
fdiv
daa
cmpsl
sub
push
dec
dec
pop
mov
imul
cmpsb
add
lods
cmp
daa
inc
jae
push
iret
pop
xchg
inc
mov
add
mov
icebp
loopne
sub
andl
lcall
xor
push
rcrl
xor
cld
xor
inc
pusha
and
dec
add
mov
xchg
sbb
ret
icebp
adc
mov
jne
leave
pop
and
out
lcall
xor
clc
pop
lds
ljmp
dec
fimull
mov
pop
je
imul
pop
xor
imul
popa
iret
pop
arpl
enter
lods
mov
outsl
js
sbb
cli
mov
mov
test
mov
cmpsb
sbb
pop
sub
adc
cmc
sub
pop
cmpsb
cmp
js
popf
and
rcr
pop
fcompl
cmp
adc
xor
and
mov
add
mov
iret
gs
inc
es
cmp
adc
imul
lock
mov
loopne
bound
insb
pop
mov
jecxz
imul
cmpsb
sbb
out
push
mov
addr16
in
fidivrs
pop
fwait
sub
shrl
outsb
jb
sub
sub
stos
mov
ja
dec
pop
orb
call
adc
lret
or
inc
and
adc
sti
inc
jle
rcrl
inc
push
mov
mov
dec
inc
or
into
add
sub
and
rcrb
mov
mov
mov
push
mov
xor
fucom
or
rorl
arpl
xchg
xor
pop
insl
xchg
mov
mov
dec
push
sub
mov
fsubl
js
movsl
movsl
jo
xor
popa
lea
push
ja
les
add
xor
mov
popa
or
jns
pop
sar
jo
adc
xor
inc
xor
xchg
sbb
add
xchg
mov
pop
jp
dec
jno
rorl
shll
inc
data16
push
xchg
movsl
mov
mov
lahf
mov
test
and
inc
pop
aad
push
sub
out
cs
icebp
outsl
push
lea
push
sbb
add
fildl
out
cmc
xlat
ljmp
dec
inc
enter
rolb
cli
sub
dec
cwtl
jnp
push
lcall
cmp
pop
mov
cmpsb
add
lret
cli
rorl
inc
es
or
mov
mov
xor
in
pop
xchg
orb
sbb
dec
pop
add
sub
outsl
neg
repz
hlt
add
sbb
pop
test
xchg
sub
adc
loopne,pt
inc
cs
ja
inc
lods
pusha
lret
jmp
out
dec
pop
push
mov
pop
dec
xchg
hlt
pop
cmp
mov
sub
xchg
in
stc
dec
hlt
push
mov
fldenv
in
int
cmp
push
inc
outsb
pop
arpl
xlat
ss
xor
or
mov
idivl
push
xchg
xchg
std
xchg
popa
jae
pop
mov
cmp
push
mov
push
fidivrl
pop
mov
push
pop
adc
push
cli
dec
xchg
fdivrl
jbe
mov
xor
pop
xor
dec
leave
mov
pop
scas
push
or
or
add
mov
dec
xchg
push
shrb
push
and
decl
pop
fisttpl
sbb
sub
fisubl
or
in
fmul
cmp
popf
jno
cmpb
gs
stc
aas
mov
loop
repz
adc
inc
cmp
cmp
sub
imulb
xor
push
or
out
dec
lds
stos
lods
add
in
mov
add
call
pop
je
in
lret
outsb
in
dec
ss
js
ja
sbb
ss
jns
dec
shll
call
adc
add
scas
int
lahf
cmc
sbb
xor
out
adc
mov
lret
dec
mov
cmpsl
xlat
inc
movsb
mov
ja
pop
outsb
or
or
mov
add
fidivl
or
pop
pop
call
and
jo
xchg
popf
sti
fldenv
dec
mov
loope
sbb
popf
xchg
and
sub
aaa
andb
xchg
stos
mov
mov
ficomps
dec
sbb
or
shll
dec
and
push
add
sbb
jmp
bnd
cmp
pop
mov
ljmp
cmp
mov
loope
sbb
frstor
mov
sub
out
xor
clc
dec
mov
cmc
xchg
and
or
ja
gs
pop
and
lahf
aaa
sub
or
stc
dec
push
mov
out
sbb
adc
out
jmp
adc
fldt
call
pop
add
jns
xor
inc
cmp
rcrl
flds
in
mov
sbb
xor
mov
sahf
vprotd
cld
xchg
jno
push
mov
add
fsubp
or
xchg
test
inc
jae
lock
pop
push
inc
aas
or
out
es
gs
shll
call
mov
sbb
stos
dec
repz
add
pop
inc
mov
test
pop
div
repnz
jno
nop
or
fsubl
mov
push
jae
dec
ss
mov
orb
je
lret
inc
push
or
adc
xor
sbb
add
cmp
stc
pop
adc
adc
idivb
loope
into
fwait
aad
imul
xor
je
fimuls
xor
or
lods
addr16
mov
fs
out
movsb
dec
cltd
cmp
ss
push
xor
sbb
jl
call
mov
js
xchg
jne
scas
outsb
aam
sub
outsb
ljmp
bound
mov
dec
std
mov
sti
mov
pusha
out
xor
xlat
ljmp
mov
lret
leave
xchg
xchg
test
adc
xor
mov
xchg
sar
dec
xor
or
scas
xor
out
or
setge
lock
das
enter
and
xchg
mov
xor
push
adc
push
xor
idivb
ljmp
insl
aas
mov
dec
xchg
scas
mov
repnz
jg
mov
add
xchg
fcmove
and
leave
mov
out
xlat
stos
cmp
jge
std
xor
jmp
test
shll
add
rclb
push
mov
ja
popa
jl
jmp
jl
jmp
je
add
jae
sub
outsb
in
cwtl
outsl
test
push
inc
sub
or
fs
cmp
xchg
add
addr16
pop
inc
dec
jp
mov
xchg
mov
and
jns
or
in
and
xlat
aaa
ljmp
mov
add
inc
arpl
push
dec
shlb
mov
mov
dec
xchg
cltd
ss
xorb
in
xor
pusha
inc
mov
lds
cmp
add
pop
mov
test
ret
xchg
xchg
and
mov
jnp
push
pop
lock
push
rorb
dec
imul
pop
cmp
add
lock
push
push
jnp
add
mov
pop
out
idivb
cmp
and
pop
cli
pop
xchg
sub
jmp
push
sub
imulb
cmp
pop
and
push
mov
outsl
xor
add
and
or
cmp
xor
cmp
lea
cmpsb
pop
xchg
cmp
cmpb
push
add
aaa
cmp
shlb
je
mov
sub
sub
and
mov
lds
pop
cmovg
xchg
aam
in
xchg
bound
xchg
outsb
adc
jno
jne
inc
mov
test
fsubrs
enter
movsb
fsts
xor
test
movsb
push
mov
add
pop
xor
push
cmc
dec
out
mov
mov
add
and
mov
stos
repz
adc
xchg
sti
push
leave
mov
add
aaa
int3
std
push
and
jae
cmp
fwait
scas
test
fwait
jl
das
mov
cli
push
movsb
ljmp
mov
mov
xor
sbbb
push
dec
mov
cmp
in
fistpl
mov
push
jbe
push
call
lea
leave
or
insb
js
sbb
add
xor
adc
xor
idivb
subl
inc
mov
dec
test
clc
jg
mov
cld
sub
pop
stos
ret
pop
scas
ds
in
arpl
cmp
push
stc
xor
pop
cmpb
popf
add
fsts
lea
nop
push
imul
lods
gs
push
xchg
icebp
shrl
aad
cld
jae
jmp
lods
mov
imul
xchg
xchg
iret
or
test
nop
int
or
scas
sub
test
dec
mov
cmp
cmp
sub
movsl
ljmp
dec
sub
mov
add
lds
add
mov
mov
roll
lock
inc
push
call
sub
cmp
fnstcw
adc
cmc
bnd
or
add
mov
lret
push
adc
push
jno
jmp
repz
sbb
pushf
dec
add
push
out
xchg
inc
into
mov
pushf
adc
xchg
adc
adc
fisttps
sbb
int3
mov
rol
push
data16
das
lret
xor
dec
add
and
push
push
cmp
mov
clc
mov
dec
jp
mov
adc
enter
int3
loopne
cmp
jno
imul
std
xchg
inc
dec
xchg
pushf
nop
mov
xchg
or
aam
adc
sub
dec
dec
dec
fwait
mov
int
xchg
push
aad
popf
jge
jbe
insl
imul
or
cli
add
movsb
mov
lahf
add
mov
out
add
mov
and
cmp
push
jbe
les
mov
sub
lahf
mov
ret
popf
shll
pushf
push
das
fildl
shlb
insb
sbb
cwtl
xor
and
mov
xlat
cwtl
pop
push
mov
leave
mov
into
sub
sbb
push
out
repnz
out
icebp
std
mov
sub
sbb
and
add
xor
add
push
lret
test
adc
and
imul
jne
mov
call
push
cmc
mov
jecxz
push
jmp
mov
xor
popa
or
movsl
fldenv
shrw
and
push
sub
sbb
rcrl
pop
pushf
xor
sahf
inc
or
xchg
and
leave
movsb
aaa
adc
dec
push
push
xchg
push
dec
dec
mov
fsts
cwtl
fldenv
shll
lret
jae
lret
add
movsl
out
dec
test
sbb
das
popa
jb
sub
cwtl
jle
sbb
cmp
push
jle
dec
or
or
mov
ja
ja
xsaveopt
adc
lock
adc
sbb
mov
repnz
and
pop
adc
jno
push
mov
cmpsl
test
ret
cmp
outsb
pop
enter
xor
lds
les
or
cwtl
sub
rcrb
idiv
or
faddl
shrb
mov
call
dec
inc
daa
fs
push
jae
jp
loop
xor
nop
and
fildll
andb
dec
jne
inc
pop
pop
mov
cmpsb
pop
out
jbe
and
lods
bound
inc
addb
das
test
sbb
mov
out
shll
jno
xchg
xchg
pop
pushf
dec
out
mov
out
fimull
pop
faddl
popa
dec
in
push
pop
inc
xor
push
test
xchg
sub
dec
sub
imul
aam
dec
jnp
fldt
js
hlt
sahf
mov
lret
and
push
dec
mov
test
cmp
jle
sbb
sub
fnstcw
lock
mov
xchg
jb
fiadds
sub
pop
dec
int3
adc
cmpsb
and
and
xor
cmp
pop
sbb
push
daa
pop
xchg
mov
dec
mov
push
cwtl
mov
jb
jbe
cwtl
mov
sbb
or
jge
dec
sbb
loope
mov
mov
push
div
pop
cmp
push
fistpl
lahf
pop
lods
pop
fcoml
adc
add
out
sbbb
nop
and
jae
stc
or
jl
push
lods
cmp
mov
pop
push
jne
popa
aad
enter
jmp
jecxz
pop
xor
in
cld
rcl
int
inc
xchg
fildl
mov
out
push
mov
test
arpl
cpuid
xor
sub
push
sti
ret
mov
jnp
inc
dec
gs
mov
inc
cmp
call
xchg
or
cld
repz
xor
fs
popa
js
lret
ss
call
iret
mov
leave
sti
mov
dec
subl
lahf
mov
dec
push
adc
sbb
xchg
jno
and
je
int
in
xor
in
mov
sbb
in
cmp
sub
fsubrs
stos
xchg
sub
push
sbb
lods
outsb
mov
movsl
lods
fdivl
test
mov
add
sub
xlat
push
adc
push
sbb
in
data16
cmp
inc
inc
xchg
cmove
xchg
and
sti
int
sub
jl
jbe
push
inc
andb
mov
add
jmp
outsb
fisubrs
movb
and
popf
and
dec
mov
mov
loopne
adc
pop
and
lock
jbe
xor
mov
inc
xlat
lahf
sub
cmp
mov
mov
mov
dec
push
sub
arpl
inc
ficoms
std
dec
lahf
xor
rdpmc
adc
mov
in
mov
dec
push
rcrl
stc
out
cmp
push
adc
or
outsl
mov
into
data16
jp
inc
addr16
jecxz
and
or
mov
pusha
cmpb
sarb
xor
pop
jp
leave
out
sbb
jg
shll
jno
mov
pop
inc
xchg
mov
inc
pop
shrl
stos
adc
sbb
in
or
jo,pt
leave
xchg
cmp
jmp
cmpsl
sti
ficompl
mov
cmp
inc
nop
mov
lcall
int
or
xor
push
movsl
mov
mov
in
cwtl
imul
and
test
hlt
lcall
sub
in
imul
or
idivl
test
pop
in
data16
jbe
lods
test
pop
inc
repz
hlt
push
idivl
adc
cmp
xchg
and
jb
decb
mov
jmp
es
popa
cwtl
sti
ss
xchg
stc
jb
mov
fdivs
in
fdivrs
rep
lret
inc
aaa
je
or
jl
inc
push
jmp
stos
xchg
push
test
push
jmp
scas
int3
mov
daa
flds
mov
cmp
ja
inc
and
jnp
xchg
adc
inc
arpl
flds
mov
aaa
or
and
testl
hlt
cmpsb
imul
fwait
xchg
add
adc
push
xor
push
sarl
ret
out
xor
lret
pop
sub
and
push
jae
outsl
aaa
jb
and
test
and
hlt
out
or
repz
fstl
pop
and
cld
mov
mov
jle
pop
popf
lret
mov
add
inc
push
mov
cmp
addl
and
pop
sahf
jl
dec
and
nop
push
cli
cs
sub
or
cs
popf
cmp
out
inc
jbe
imul
inc
mov
pop
xor
mov
and
sbb
je
sub
aaa
jmp
push
repnz
xor
jns
ret
xor
add
mov
lret
test
stos
pop
xchg
jns
rcrb
in
sub
outsb
lahf
das
push
jae
cmp
xor
iret
orl
out
xor
out
enter
icebp
xchg
aas
push
dec
sbb
pop
ljmp
mov
add
aas
imul
in
inc
mov
lods
sbb
xchg
out
adc
pop
bound
mov
mov
push
popf
fucomp
cmp
out
sbb
cmp
sbb
call
ret
call
push
repz
mov
popf
clc
inc
jbe
scas
loopne
add
fidivrs
dec
data16
xorb
sti
xchg
xor
add
les
jae
loopne
lods
mov
mov
and
notb
jecxz
inc
mov
xchg
insl
jae
in
sub
inc
cmp
ss
cwtl
fisubl
pop
push
test
add
pop
inc
cmp
inc
push
sti
scas
lods
scas
jae
sub
sbb
xchg
cmp
mov
aaa
mov
mov
mov
adc
pop
gs
add
aas
imul
dec
fbstp
lret
and
cltd
movsb
or
stc
out
aaa
mov
cltd
mov
mov
cltd
or
or
fwait
pop
push
push
pop
shl
inc
xor
ret
repnz
jo
pusha
push
arpl
jecxz,pt
sti
scas
leave
popf
jp
add
loope
pop
movsb
adc
pop
or
mov
jge
leave
sbb
cwtl
add
cs
stos
mov
faddl
xchg
fsts
lcall
in
js
mov
int3
movsb
cmp
inc
mov
fnstsw
and
pop
jnp
and
inc
mov
add
cmpsl
insb
ss
mov
pushf
fstpl
test
add
fiadds
lds
xor
or
ret
js
clc
clc
jge
pop
fsubrl
xor
push
hlt
arpl
sti
mov
and
scas
loope
push
mov
adc
movsl
jns
dec
pop
jno
or
xchg
sub
and
lret
jp
jg
pop
mov
sub
movsl
mov
ljmp
nop
enter
push
cltd
jb
dec
adc
adc
push
int
mov
cmpsl
cmp
nop
push
cmp
cmp
cmp
push
mov
repnz
cli
cmp
lahf
mov
clc
jns
je
cmp
inc
mov
and
or
mov
dec
sub
test
mov
mov
ret
and
ja
sbb
cmp
adc
fbstp
or
call
sbb
mov
clc
icebp
enter
mov
cmp
dec
bound
xor
add
sub
inc
sbb
inc
sbb
std
addr16
mov
jmp
adc
jae
sbb
jp
nop
imul
out
mov
mov
cmp
sub
mov
into
dec
jle
jbe
sub
in
hlt
sbb
push
dec
cmc
add
test
dec
adc
imul
add
jge
pop
xchg
push
icebp
jno
mov
mull
pop
jge
push
and
add
and
cmp
test
add
jne
dec
mov
or
cltd
lret
adc
add
sbb
cmp
ret
inc
add
pop
lcall
nop
leave
push
in
sbb
dec
jo
test
repnz
sub
push
and
out
xchg
aaa
xchg
ljmp
rep
push
dec
cmp
add
rcr
lods
mov
outsb
lret
call
mull
pop
shrb
adc
push
lret
out
in
jl
movsl
mov
in
stc
test
adc
or
hlt
xchg
stc
sbb
push
push
dec
push
pop
mov
cmc
or
shr
lret
clc
and
add
roll
adc
mov
push
jne
mov
outsb
add
sbb
fists
mov
pop
repz
pop
mov
gs
mov
jmp
dec
shrl
es
imull
das
push
in
push
adc
sbb
xchg
adc
imul
add
movsl
fmull
rolb
mov
add
cmp
xchg
sbb
and
or
xchg
and
rorl
adc
sbb
add
imul
lret
and
add
into
or
daa
int3
xchg
xchg
xor
dec
push
add
pop
popa
and
jecxz
in
mov
gs
or
mov
stc
xor
dec
scas
sahf
cwtl
cmp
xor
mov
shrl
jns
xor
sbb
pusha
mov
jmp
add
push
xchg
sub
out
cmp
lods
push
iret
jecxz
stos
cmp
mov
rcrb
lcall
fs
aas
sub
lcall
shrb
or
jnp
sub
xor
scas
mov
xor
sbb
sbb
aas
je
sub
mov
xchg
aam
lods
sarb
icebp
stos
dec
inc
sbb
dec
dec
ja
inc
lret
dec
and
int
jae
mov
pop
jne
xchg
and
and
jbe
add
mov
cltd
inc
inc
ret
or
iret
jb
orb
sub
sub
ja
lcall
iret
inc
loop
lods
push
mov
bnd
loope
mov
and
mov
ljmp
pushl
cmp
jbe
mov
test
mov
leave
adc
add
lea
dec
mov
sbb
sbb
cltd
leave
push
push
cmp
data16
pop
mov
enter
xor
hlt
fcmovnu
lcall
neg
adc
mov
dec
jmp
movsl
jle
mov
mov
insb
in
and
xor
movnti
fistps
cmp
and
enter
test
mov
pop
das
movsb
mov
cld
jecxz
xor
mov
aaa
aam
or
sbb
lea
jge
push
stos
push
call
push
pop
mov
adc
shl
inc
xor
push
mov
ljmp
lret
sub
mov
jns
sbb
jns
call
lock
xor
ja
push
movsl
and
mov
sbb
adc
xchg
bound
stc
gs
add
lcall
into
fidivl
shrb
push
repz
jge
fistpll
jmp
jae
jl
push
in
ds
rorb
jmp
mov
push
mov
sub
lret
jne
mov
sub
mov
mov
ja
jp
rcll
sahf
adc
adc
ss
aad
xor
stc
fdivl
sbb
dec
cmpsb
rcll
fstpl
dec
inc
orb
int3
inc
and
sbb
mov
mov
popl
xor
push
mov
xchg
mov
dec
and
cld
push
loope
inc
pop
mov
aad
jge
imul
mov
test
call
xchg
aaa
bnd
fwait
dec
jbe
lret
popf
dec
repz
mov
notrack
mov
in
movsl
mov
jl
inc
je
cli
test
mov
je
mov
lahf
cmp
addr16
daa
jo
inc
inc
out
xor
in
inc
sarb
or
xor
scas
lcall
repz
jge
fwait
aad
fbld
cltd
adc
rcl
jae
outsb
ja
pop
pop
mov
cltd
pop
arpl
mov
cmp
notb
icebp
das
mov
lods
dec
fisttpll
xchg
mov
push
mov
sbb
xor
imul
pop
cmp
pop
repz
fidivrs
cli
dec
jae
jne
aad
cmpb
loopne
sub
and
sub
aam
mov
pop
inc
dec
int
xchg
add
sbb
mov
or
push
or
fmuls
gs
in
gs
cld
cwtl
jae
ljmp
icebp
mov
mov
loopne
cmp
sub
add
adc
divb
lret
call
je
in
jmp
cmc
dec
jecxz
mov
or
cld
or
or
adc
pop
repnz
sbb
sub
add
cmp
push
jge
mov
xchg
cmpsl
mov
mov
xchg
pop
mov
cmp
add
push
mov
push
dec
push
push
xor
jbe
stos
push
popf
in
xchg
pop
jmp
jl
push
jbe
test
nop
xchg
sub
cwtl
inc
dec
loope
adc
xchg
and
in
bound
push
push
ficoml
in
aad
inc
testl
popa
mov
fmulp
test
push
loop
xchg
sbb
pop
xor
pop
adc
int3
push
out
inc
movsb
dec
lods
push
dec
aad
dec
inc
xor
and
inc
mov
outsl
dec
negl
add
int
sub
or
xchg
scas
xrstors
jmp
mov
subl
add
jne
inc
push
mov
dec
jno
lds
dec
pop
jnp
jb
and
popa
daa
pop
inc
or
adc
cld
lods
aad
or
mov
cmpsl
je
mov
mov
mov
mov
lds
mov
iret
call
inc
cmp
mov
pop
sbb
sub
xchg
test
inc
arpl
push
sbb
call
out
rolb
mov
pop
repz
cmp
adcb
scas
ljmp
icebp
aaa
pop
orl
or
push
in
push
dec
cwtl
lcall
mov
xor
push
dec
xor
fldenv
pushf
adc
in
idivl
test
loope,pn
push
xchg
clts
inc
mov
xor
xlat
sub
push
popf
cmp
repz
jb
aad
sub
sahf
dec
in
dec
pop
sub
mov
popl
pop
rcrb
mov
testl
inc
call
mov
sahf
xor
int3
push
and
leave
jge
mov
lds
jmp
cmpsb
push
mov
sub
push
outsb
push
push
push
in
xchg
push
adc
push
push
mov
clc
mov
or
xchg
fbstp
jmp
movsb
add
mov
ds
pop
fcoml
push
sbb
pop
dec
jecxz
pushf
pop
mov
mov
jmp
mov
sub
icebp
mov
push
and
adc
and
in
mov
ret
sub
into
loop,pn
insb
jle
dec
and
movsl
cmp
sbb
fisttpl
xchg
pop
aam
lods
or
shlb
js
out
xor
test
mov
mov
pop
add
and
mov
add
dec
push
cmpsb
outsb
and
jle
jmp
sbb
in
or
push
xor
inc
mov
push
dec
cwtl
lahf
mov
test
sub
jmp
mov
lcall
add
mov
cli
rcrl
movsb
mov
call
movsl
cmp
cld
push
cmc
daa
jl
gs
add
cmc
fiaddl
and
mov
shll
push
leave
adc
sub
stos
push
adc
add
fldcw
sar
push
je
mov
dec
mov
sbb
mov
sub
dec
or
cmp
imull
pop
in
or
dec
cmp
ja
nop
push
add
aas
mov
mov
lahf
mov
ljmp
mov
mov
fldt
in
pop
push
adc
cltd
inc
xchg
push
enter
lret
out
rcll
cmp
cli
movsl
js
lcall
and
jns
push
push
xchg
cmp
pushf
ljmp
aaa
lret
inc
jb
shrl
jecxz
rclb
into
jmp
jae
xor
daa
movsl
and
dec
pop
imul
mov
scas
push
les
mov
jmp
bnd
and
mov
inc
push
xor
insl
jno
jo
call
inc
stos
jmp
jmp
movsb
cmp
mov
ret
xor
nop
rol
lcall
in
icebp
repnz
ja
test
or
movsb
inc
push
leave
sub
std
xchg
sub
adc
cmp
mov
dec
or
adc
mov
call
and
test
mov
xchg
loopne
mov
outsb
or
push
lea
jb
pop
adc
mov
les
enter
add
inc
push
mov
incb
dec
test
sbb
es
push
loop
ja
push
ja
pushf
xchg
dec
andb
cmp
inc
aaa
jmp
lea
jne
and
pop
mov
dec
push
stc
test
stos
jp
sti
cs
jae
fbstp
xchg
lcall
jno
mov
jg
scas
xlat
scas
in
cmp
push
push
popf
jmp
and
mov
fwait
jge
xor
pop
push
and
je
push
cmp
jns
mov
mov
mov
pop
sti
adc
xchg
push
outsl
xor
push
cmp
lea
adc
psllq
sub
mov
adc
imul
cmpsl
xchg
rcrb
and
das
add
pop
xchg
test
cld
add
and
insl
mov
sbb
into
leave
push
les
jnp
or
mov
int3
fbstp
imull
iret
scas
cmc
xor
in
call
jl
mov
jno
pop
add
push
ljmp
das
fisubrl
insl
cmp
xchg
daa
imul
lcall
leave
and
imul
sub
outsl
xor
clc
dec
mov
cli
fnsave
ss
fs
in
inc
mov
movsb
pop
push
jmp
jp
out
add
stos
insb
pop
adc
jo
and
repnz
mov
cmc
cld
push
xchg
fistpll
leave
pop
lods
lahf
and
xchg
sahf
inc
rcrl
mov
mov
mov
out
adc
xor
leave
cmp
adcl
das
mov
addl
stos
popf
scas
inc
adc
mov
daa
jle
cmp
iret
inc
js
jle
popf
cmp
sbb
lcall
sub
phsubd
and
adc
jae
inc
mov
ja
sbb
adc
bound
push
frstor
int
pusha
jg
dec
mov
add
cltd
jo
or
popa
push
insb
shll
xchg
adc
add
insb
pop
cmpsb
ja
mov
addr16
mov
pusha
or
dec
outsl
mov
and
fadds
inc
mov
shr
add
inc
xor
cmp
fs
aam
jge
shlb
ljmp
mov
mov
pop
dec
mov
je
loop
loope
ds
movsl
in
in
movsl
insl
jmp
lods
xchg
inc
sbb
sbb
clc
test
mov
aad
mov
loope
movb
push
mov
icebp
cmovs
mov
jb
scas
mov
ds
xchg
pop
push
into
inc
aas
xchg
insb
loopne
insb
sahf
aad
xor
sbb
sar
insb
add
cmc
mov
push
and
out
in
push
inc
mov
lea
cmp
out
xor
xor
pop
dec
fildl
ror
hlt
mov
and
inc
je
mov
mov
mov
xor
mov
ret
dec
cmpl
and
fcomp
nop
dec
nop
in
mov
js
in
mov
xor
mov
jecxz
out
bound
loopne
jae
sub
sbb
mov
into
adc
ret
ljmp
iret
xchg
xchg
pop
mov
sbb
xlat
dec
movsl
xor
xchg
test
repz
add
movsb
xor
lcall
aam
and
js
xchg
lcall
ljmp
inc
add
mov
cmp
pop
int
xchg
ret
pop
push
leave
adc
mov
daa
gs
inc
xchg
aaa
or
mov
fsubrs
cmp
pop
inc
add
mov
sti
das
aam
jmp
sub
mov
push
jmp
sbb
mov
shl
adc
out
mov
mov
cmpsb
scas
mov
inc
pop
leave
fmulp
into
das
add
into
pop
imul
jg
adc
jns
and
and
adc
pushf
cmp
mov
test
or
lcall
xchg
pop
stc
pop
mov
xlat
mov
sbb
std
pop
or
add
ss
into
xor
inc
imul
adc
push
cmc
mov
leave
pop
imul
icebp
mov
adc
jo
lea
lahf
movb
outsb
inc
movl
push
inc
adc
push
inc
push
and
jecxz
movsl
movsb
mov
arpl
mov
fidivl
lahf
cmp
lret
in
test
movsl
insb
mov
xor
movsl
lea
or
pushw
mov
and
repz
add
cmp
cmp
shrl
sbb
adc
shr
jge
rcrl
arpl
in
pushf
addl
pop
leave
and
sub
ret
pop
and
xorb
inc
insl
pop
inc
cmp
push
mov
sar
and
push
mov
and
xchg
dec
stos
add
sbb
pop
hlt
and
jmp
mov
movsl
inc
xchg
scas
dec
mov
push
test
les
mov
and
add
enter
hlt
sbb
test
jne
ss
mov
push
cmpsb
rcrl
out
push
push
les
inc
mov
stos
hlt
sbb
jb
sub
xchg
mov
insl
test
daa
clc
jg
gs
push
sbb
jb
or
pop
or
cmp
jge
sbb
mov
pop
push
cwtl
xchg
dec
and
bound
cmp
jns
or
lods
and
pop
call
inc
out
dec
shlb
call
adc
xchg
ret
pop
jecxz
xchg
outsb
inc
outsb
and
fwait
leave
daa
cmp
sarl
adc
sub
jnp
popa
mov
push
adc
call
push
aad
dec
sub
out
inc
push
call
mov
stos
test
pushf
add
sub
in
mov
mov
fidivl
popf
inc
jb
pop
adc
jmp
sbb
add
ljmp
arpl
adc
inc
scas
lret
push
fs
insb
inc
inc
orb
adc
cmp
in
ljmp
mov
ljmp
mov
aas
icebp
cmp
push
jle
cmp
xor
ret
nop
xchg
cmpsl
ja
sbb
add
pop
inc
bound
xchg
cs
sub
stos
arpl
fists
xchg
aam
cltd
mov
xchg
in
xor
sbb
les
loop
push
clc
fistl
pop
call
rcll
in
stc
test
in
and
jg
inc
xor
xchg
loopne
mov
orl
cltd
mov
xchg
ds
jp
fcomip
xor
push
mov
lret
mov
iret
adc
imul
mov
out
sbb
xchg
or
ja
aas
mov
adc
stc
xchg
shrb
add
inc
jns
call
cs
mov
mov
addr16
arpl
pop
push
mov
iret
in
call
lret
int
insl
xchg
sub
or
push
add
pop
push
sbb
fistpl
add
je
fidivl
adc
enter
cmp
lods
mov
in
decb
mov
rcr
inc
and
xchg
jl
inc
icebp
nop
pop
and
pop
jp
insl
aas
cmp
jl
clc
xchg
int3
push
xchg
stos
pop
xor
push
adc
xchg
sub
js
cmp
jbe
fisubl
pop
jecxz
pop
fs
dec
adc
inc
mov
pop
jbe
stos
scas
mov
cld
in
outsl
adc
jo
inc
out
test
movsb
test
xchg
sub
jmp
push
maskmovq
dec
pushf
sbb
and
fmulp
rcr
mov
hlt
dec
cmc
rolb
sarb
nop
gs
mov
pop
outsb
lock
sbb
inc
test
adc
and
adc
sahf
push
sub
push
mov
fwait
or
lds
mov
std
lea
movsb
sbb
ja
lds
xchg
adc
mov
mov
aaa
out
outsl
inc
mov
xchg
js
sbb
sbb
and
je
lds
cmc
sahf
pop
gs
pop
mov
mov
mov
cmp
inc
ret
insl
jp
or
cmp
push
test
dec
test
adc
inc
mov
push
ja
sbb
xor
inc
xchg
lods
and
mov
sbb
xor
add
mov
cld
cltd
jne
inc
into
and
mov
cltd
fildll
clc
pop
rol
jnp
sbb
mov
pop
inc
es
ss
lret
icebp
js
aas
cmpsl
ret
xor
jb
clc
iret
stc
push
cmp
test
inc
repnz
push
cltd
dec
sbb
cmpb
dec
lret
out
mov
cmp
div
es
and
jmp
popa
ror
or
push
or
data16
fmull
das
js
mov
jne
mov
dec
add
jmp
xchg
xchg
pushf
subb
mov
shlb
or
xchg
xor
sbb
push
sbb
and
inc
xor
icebp
sub
movsl
mov
adc
adc
ja
in
dec
sub
scas
popf
bnd
adc
add
in
int3
enter
shlb
aad
pop
mov
std
mov
call
icebp
and
dec
mov
outsb
push
adc
push
cmpsb
and
sub
inc
jmp
mov
adc
lea
xor
push
repnz
jno
mov
scas
and
idivl
mov
leave
xchg
fldln2
int
xchg
or
fildl
cld
xorb
test
aam
out
hlt
inc
addl
test
rcl
sub
arpl
sub
rcrb
add
jne
clc
aas
ljmp
nop
add
mov
lods
imulb
ja
push
cmp
mov
mov
push
jl
stos
cmp
sub
sbbl
pop
cmp
add
pop
xchg
mov
push
and
test
and
or
aam
adcl
call
jl
mov
gs
lahf
add
ljmp
sbb
je
icebp
lret
cmp
jg
sahf
into
in
xor
fwait
mov
iret
fistpll
mov
jno
gs
popf
shlb
imul
mov
xchg
fwait
jbe
inc
mov
pop
lock
pop
test
adc
adc
loop
test
add
repnz
cli
and
mov
xor
jmp
and
sub
loope
mov
sub
xchg
xchg
cmpsl
mov
push
cltd
mov
out
cmpsl
outsb
stos
test
jp
mov
mov
je
lock
push
mov
inc
sahf
sahf
iret
sbbb
in
pop
mov
pop
cs
sub
pop
fsubs
sub
ss
sbb
cmc
xchg
mov
inc
hlt
inc
inc
sbb
pop
and
push
add
stos
ffreep
aad
into
lret
xchg
mov
mov
sub
adc
sub
push
cmp
xchg
xor
jl
push
jbe
dec
test
add
in
cmpsb
int3
dec
fcompl
xor
stos
in
add
mov
incl
xor
cmp
lcall
mov
add
aam
rolb
mov
fstpt
mov
sbb
je
mulb
cmp
add
stos
mov
aam
sub
cs
mov
cmpb
sbb
inc
mov
stc
scas
stos
xor
shl
scas
adc
jb
and
and
sbb
add
xor
mov
mov
xor
pusha
aam
push
jb
xor
dec
nop
adc
pop
sub
into
or
outsb
inc
lods
pop
ds
mov
mov
xlat
movsb
das
aas
shrb
sbb
or
loop
sub
add
loop
mov
cmp
iret
out
pop
je
push
mov
popf
rcl
xlat
sbb
mov
push
dec
ljmp
inc
sbb
movsb
push
jbe
pusha
push
adc
mov
xchg
imull
ja
sub
dec
mov
jl
and
scas
and
inc
ds
outsl
sbb
mov
lret
adc
stos
leave
xchg
or
push
enter
adc
push
mov
je
xor
inc
sub
sbb
add
aaa
pop
gs
xchg
sub
jae
mov
pop
and
and
in
push
push
add
nop
in
test
add
mov
adc
mov
dec
lret
mov
sbb
les
hlt
ss
mov
sub
lock
push
mov
xchg
ljmp
inc
cwtl
aam
mov
add
mov
xchg
iret
imul
fcmove
jecxz
sbb
dec
cmp
icebp
dec
stc
and
sarb
xchg
gs
incb
mov
mov
enter
inc
push
and
in
loope
lret
dec
bts
enter
cmpsl
and
sub
pop
insb
ljmp
pop
ja
test
and
cmpxchg
repnz
pop
pop
out
xor
mov
sub
sub
mov
int3
add
sahf
jl
movsl
fisttpll
and
sub
outsl
xchg
pushf
jp
daa
lock
fcmovnbe
fimuls
in
pushf
mov
inc
orl
outsb
lret
cs
inc
jne
push
shll
out
mov
jb
cs
das
lds
lea
cmp
lea
cld
leave
or
iret
stos
andl
adc
leave
out
xor
mov
and
test
fistpl
out
push
jle
ret
sub
in
jp
aas
loop
sub
jae
scas
inc
mov
sub
cmp
cs
pop
fldcw
jle
xchg
mov
int3
adc
mov
and
xor
or
js
test
cmp
lcall
loopne
pushf
scas
dec
subb
mov
inc
mov
xor
jne
fsubs
jne
xchg
std
or
lods
out
fdivr
movsb
sbb
cmp
mov
mulb
rorl
imul
inc
aaa
xor
jne
push
int
sub
das
mov
test
push
mov
pop
jo
fldt
add
cmp
dec
dec
add
pop
jne
or
adc
add
mull
mov
dec
pop
imul
xlat
cmpl
jmp
out
dec
and
out
inc
mov
push
adc
push
or
stos
mov
enter
and
xchg
xchg
rcll
ja
inc
sbb
test
pop
sbb
cmpl
xchg
jo
push
insl
lock
dec
movsl
ljmp
cltd
cltd
cwtl
sub
adc
addr16
jnp
addr16
push
mov
int
dec
cmp
pop
push
xchg
mov
sarb
push
data16
jbe
ss
enter
adc
sbb
mov
xchg
insb
mov
mov
pop
fwait
cld
pusha
cmp
dec
test
jg
mov
addr16
aad
or
loope
cmp
inc
outsl
xchg
orb
and
int
push
add
fstp
test
jmp
lock
lock
in
push
jle
lret
rcll
cmp
int
fildl
ror
push
add
and
test
pop
push
in
dec
pop
mov
push
test
mov
push
pop
lret
les
push
adcb
cld
jb
sbb
xchg
push
add
data16
jl
push
loopne
add
jae
add
mov
cmp
addr16
adcl
xchg
xlat
test
or
js
pop
xchg
fimuls
cmp
xchg
shrl
jbe
xchg
add
cmp
in
sarl
push
mov
dec
jle
cmpsl
rol
pop
add
mov
std
pop
lcall
cmp
shll
inc
insl
or
sub
mov
xor
js
push
lret
inc
xchg
nop
inc
loopne
inc
mov
enter
xchg
mov
mov
cmp
addb
push
cltd
cmp
mov
xchg
mov
into
xor
push
push
das
jle
and
xor
pop
ds
pusha
je
repz
sub
mov
sub
xor
inc
lds
sub
cs
aam
test
hlt
sub
push
xor
xchg
xchg
xchg
and
and
pop
xchg
add
pop
push
cmp
sbb
inc
mov
leave
push
add
xor
movsb
mov
test
xor
sub
roll
lret
mov
out
xchg
prefetch
fdivrs
fsubl
sti
shl
mul
sbb
jbe
pop
ds
repnz
fstps
and
mov
dec
push
add
mov
mov
mov
int3
push
inc
ret
jmp
int
push
push
pop
pop
fxam
loop
lret
pushf
add
mov
fcom
cmp
idivl
dec
sub
loop
icebp
sti
je
xor
add
je
xor
ja
icebp
dec
jo
fistpl
sub
bound
mov
mov
hlt
adc
dec
mov
test
idiv
push
jp
shr
lock
xor
push
push
add
sub
repz
xchg
in
outsl
fists
and
push
fbstp
mov
xchg
mov
and
bswap
dec
jecxz
dec
sbb
dec
mov
push
imul
std
shrl
mov
daa
jg
call
loop
jg
sub
dec
inc
dec
inc
jbe
adc
add
push
addr16
mov
cmpsl
cs
jp
cmpsb
mov
push
and
pop
es
mov
mov
ficompl
cmp
mov
mov
in
sti
jb
add
xlat
fldenv
xchg
ret
mov
stos
in
sysenter
push
xor
sbb
punpckhbw
aam
aaa
icebp
repnz
iret
dec
xor
mov
cmpl
push
shll
sub
call
out
mov
dec
and
mov
int3
fwait
fwait
shl
fdivr
xchg
leave
adc
dec
mov
adc
xor
xchg
jns
cmp
inc
add
addr16
sbb
push
subb
xchg
mov
or
in
inc
sub
add
adc
lret
repnz
pushf
sti
leave
pop
fisttpl
pop
das
mov
cmp
std
mov
scas
inc
ss
push
jmp
lahf
push
jmp
popa
test
in
push
xor
add
stos
pop
dec
and
scas
pop
fimuls
mov
gs
lahf
xchg
sub
inc
xchg
gs
pop
lahf
shll
js
sub
out
inc
jp
fcoms
sbb
adc
ficomps
hlt
mov
in
scas
cmp
mov
xchg
mov
int3
mov
fsubs
fucomi
inc
xchg
push
jl
inc
mov
sbb
add
mov
cld
jb
jnp
or
jg
loop
inc
lods
xor
cmc
fildll
jecxz
push
and
test
mov
adc
add
imul
sbb
pop
gs
out
or
loope
lds
popf
sub
inc
int3
push
shrd
aas
mov
wrmsr
inc
mov
xor
pop
stos
pop
cmp
stos
test
xchg
mov
and
rclb
pop
test
fildll
sub
out
push
mov
repz
sti
sbb
out
fcoms
xchg
fisttpll
in
in
clc
insl
or
push
out
or
dec
jno
cltd
and
data16
xchg
cmc
mov
sub
jecxz
mov
push
mov
inc
cld
cli
data16
sbb
pop
int3
inc
jmp
dec
fisttpll
sbb
sub
sub
movsl
mov
jb
leave
push
movl
fcmovbe
xchg
outsb
out
add
mov
outsb
xchg
push
push
mov
pop
dec
into
aas
inc
in
les
int
pop
or
push
inc
mov
lock
jg
pop
imull
push
clc
inc
fs
mov
mov
movsl
or
rorl
arpl
mov
sub
out
inc
movsb
imull
loopne
cwtl
mov
dec
add
loope
outsl
jl
sahf
pop
stos
cmp
stos
enter
cmp
xor
xchg
jbe
push
aaa
pop
test
cmp
push
mov
jl
pop
mov
and
push
pop
movb
fists
xchg
xchg
add
les
lea
insb
scas
or
ret
lea
ss
fisttpll
cwtl
mov
sbb
push
adc
inc
aam
and
std
test
adc
xchg
jo
sbb
xor
sbb
cmp
movsb
and
inc
pop
cmp
cmp
aam
xor
and
int3
in
mov
and
cmpsl
fimuls
pop
mov
out
mov
pop
cli
pop
cld
pop
sahf
mov
movsb
rcrl
mov
mov
inc
decb
scas
xchg
dec
mov
mov
mov
fstpl
sbb
cmp
cld
cmp
lea
xchg
adc
sub
dec
cmc
xchg
push
push
call
mov
adc
mov
lret
cmpsl
subb
decb
data16
arpl
and
xor
fs
inc
push
mov
fdivs
inc
dec
push
xor
out
aam
insb
sar
inc
lea
pop
imul
inc
cs
mov
repz
add
sub
push
lods
jno
imul
popa
cmp
shll
cld
xor
push
roll
stos
test
mov
push
lcall
mov
jg
rcrb
cmc
pop
js
aad
inc
leave
pop
pop
inc
adc
mov
stos
lahf
push
push
pop
sbb
sub
mov
inc
mov
add
push
jle
jne
pop
insl
sub
inc
mov
cltd
mov
mov
push
pop
pusha
es
shll
loope
xchg
mov
lds
push
in
jnp
fbstp
cld
arpl
sbb
jmp
fisttps
jne
test
sub
cmp
pushf
jmp
cld
adc
mov
inc
std
pop
nop
pop
and
outsb
fwait
adc
ljmp
jnp
movsl
in
pop
mov
fnsave
int
es
mov
mov
cmp
xchg
fildl
sbbl
xchg
xor
push
jecxz
inc
and
data16
sub
push
push
stc
ss
pop
lds
sbb
add
scas
js
inc
pop
sbb
inc
mov
push
dec
jns
jle
cs
lods
inc
inc
push
loopne
ret
jnp
cmc
inc
mov
out
xchg
notb
jno
mov
add
sti
imul
inc
and
int
push
ja
dec
sbb
rolb
mov
jb
sbb
addr16
int
and
jle
or
mov
mov
movsl
inc
or
add
fdiv
mov
or
test
imul
cmp
imul
jae
js
pushf
jo
sbb
xor
stc
jno
lds
inc
scas
jle
sub
ror
jecxz
dec
sbb
call
into
pop
data16
adc
dec
pop
ja
adcb
adc
xchg
dec
push
out
xchg
pop
jmp
movsb
sbb
lret
inc
mov
scas
or
filds
xor
xchg
mov
les
push
ljmp
out
jmp
push
sti
mov
mov
outsl
insl
or
mov
fdiv
jmp
pop
scas
mov
dec
jnp
xchg
fstl
pop
dec
mov
mov
pop
ret
lock
loop
popl
lret
pop
fsubl
mov
push
sub
aad
mov
push
pop
daa
ja
jmp
push
jb
add
enter
std
inc
adc
or
sti
mov
dec
inc
rcl
pop
adc
stc
js
xchg
lret
xchg
sbb
out
mov
ja
xor
push
mov
push
daa
jns
adcl
out
adc
ds
out
add
inc
jle
xchg
imull
fnstenv
or
fwait
inc
add
dec
mov
sub
mov
int3
push
out
into
dec
imull
adc
sbb
xchg
out
call
mov
out
sub
repnz
scas
cmp
adc
loop
jns
sub
lods
stc
dec
lods
andl
ret
cmp
dec
divb
pop
jne
inc
imul
sbbl
adc
sbb
push
adc
cmpsb
adc
div
gs
add
aam
mov
cmp
test
or
add
test
or
push
xchg
inc
fnstenv
sub
xorl
add
xchg
aad
jbe
cmpsb
jl
cmpl
inc
jns
push
push
cmp
fisttpll
xor
cmp
jae
mov
icebp
mov
roll
dec
jecxz
stc
and
jno
dec
ljmp
adc
adc
mov
cltd
jbe
lahf
cmp
cmpsl
scas
push
and
call
mov
sub
pop
pushl
cmp
xchg
pop
gs
xchg
jmp
adc
xchg
push
mov
adc
lcall
or
and
rolb
ss
addl
sbb
pushf
pop
xor
stos
icebp
jge
into
loop
mov
lods
test
cli
push
popa
mov
ja
jmp
pop
insb
xor
push
loopne
mov
cmp
fdivrs
stc
sub
pop
rep
data16
data16
jno
dec
inc
mov
or
aaa
add
and
jno
sub
fisubrl
std
xchg
xor
pop
into
cmp
jl
xor
inc
xchg
mov
imul
lahf
testl
rolb
inc
bound
inc
insl
xor
incl
test
pop
sti
or
sbb
inc
or
sub
push
fsubrl
inc
adc
jne
imul
pop
add
fs
xor
sub
popf
adc
enter
xorb
cmp
movsl
dec
mov
add
jg
dec
xorb
inc
mov
sbb
fisttpl
jb
divl
jne
stc
shll
popf
outsb
mov
xlat
nop
add
sbb
fistps
in
outsb
std
sbb
cmp
jns
cld
pop
in
mov
add
xchg
daa
sahf
and
jmp
test
xchg
fnsave
call
repnz
ja
nop
dec
adc
pmuludq
test
cmp
cmp
xchg
out
mov
sub
pop
lret
hlt
sub
mov
add
cwtl
jp
xor
lds
pop
push
sub
pushw
int
lahf
push
xchg
in
xor
lret
mov
push
mov
leave
pushf
sub
ret
adc
test
sbb
mov
or
inc
jae
add
outsl
add
cltd
loop
adc
jecxz
adc
dec
aad
or
insl
mov
sbb
mov
and
mov
and
xchg
ret
lahf
jbe,pn
xor
bound
into
pop
scas
adc
popf
cld
jnp
mov
test
dec
mov
inc
jo
testb
sub
clc
mov
jo
aaa
seta
pop
mov
stos
sbb
fcompl
cld
mov
scas
loope
cli
jnp
push
mov
into
in
lret
stc
movb
jmp
mov
inc
hlt
cs
dec
add
xchg
cmc
cmpb
and
push
jle
pop
pop
xor
rorb
sub
jae
adc
fcmovne
xchg
aas
xor
sub
mov
cs
and
mov
in
xorl
ds
sub
dec
sbb
cmp
neg
sbb
sbb
loop
xlat
mov
lahf
xchg
lods
push
movsl
mov
push
movsb
dec
add
adc
call
jge
lods
push
lcall
xor
push
xor
cmp
jo
cmpb
mov
mov
mov
in
arpl
pop
cmc
push
loop
cmp
jne
mov
jge
or
pop
and
sub
cmc
dec
mov
sbb
loope
leave
mov
cmp
lahf
mov
cli
sub
xchg
mov
ret
xor
dec
stos
sub
jnp
adc
mov
cmpsb
cmpsb
xchg
adc
jnp
or
adc
bound
mov
js
int3
push
pop
in
xchg
inc
inc
sbb
dec
mov
add
loopne
adc
arpl
roll
mov
and
mov
pop
stc
movsl
xchg
pavgb
sbb
popa
pop
xor
outsl
push
movsb
jecxz
push
mov
sub
inc
clc
sbb
lock
dec
call
cli
dec
inc
or
lahf
aam
push
cmp
mov
xchg
push
shll
mov
push
inc
inc
cmp
push
and
rorb
cmc
or
or
sbb
cmp
jg
fsubs
add
pop
inc
clc
xchg
lods
jecxz
xchg
inc
and
dec
loop
fmuls
aas
pop
leave
leave
movsb
out
andb
xchg
mov
xchg
das
sub
add
xchg
lds
sbb
dec
inc
leave
stc
leave
mov
pop
pop
out
mov
lcall
pop
loop
push
push
cmp
pop
dec
push
stos
pop
out
cmpsb
test
cmpsb
inc
jb
nop
shlb
dec
or
pop
stos
out
icebp
outsl
jmp
std
xchg
out
lds
aam
sahf
adc
inc
add
repz
je
jne
jl
jno
repz
jg
mov
push
adc
push
fisubl
imul
imul
cmp
xor
notl
fcoms
lods
dec
js
lods
mov
lea
jo
lods
icebp
adc
pop
cmpsb
adc
aad
and
popa
mov
hlt
lods
sub
mov
mov
pop
push
xchg
mov
jo
xlat
inc
inc
and
sbb
mov
or
fisubs
out
std
mov
movl
bound
push
jno
sbb
inc
adc
or
jl
fildl
jp
es
sub
mov
xor
xor
inc
jns
cmp
rolb
cmp
push
dec
mov
lret
test
mov
gs
and
fistpl
mull
lock
fs
or
sarl
add
bnd
test
pushf
sti
add
push
in
pop
out
lods
push
fcos
xchg
icebp
cmp
sub
and
faddl
xor
cmp
mov
add
mov
adc
in
xchg
insl
mov
cmovo
mov
mov
or
daa
fsub
add
into
cli
xchg
mov
jbe
fs
mov
ret
push
mov
daa
in
outsb
nop
in
ds
pop
mov
mov
repnz
xchg
jae
cmc
adc
repz
dec
xor
pop
fcomi
mov
mov
sub
mov
xchg
out
stc
xor
int3
iret
push
sbb
mov
hlt
dec
mov
inc
insl
sbb
jnp
outsb
fsubr
mov
cmp
out
sub
negl
aam
mov
lahf
add
xchg
and
imul
adc
das
in
or
mov
stc
cmp
test
sub
and
ret
sahf
inc
cwtl
mov
adc
inc
dec
sbb
sbb
xlat
cmp
jae
cld
mov
lahf
arpl
loop
aam
sbb
imul
test
fs
cmc
in
or
cmp
loop
ret
add
push
adc
add
faddl
and
add
shll
out
popf
xlat
imul
cmpsl
mov
add
test
xor
push
dec
sub
prefetch
push
pop
leave
or
mov
stos
xor
jnp
stos
je
push
shrb
fldcw
adc
xor
and
stc
repnz
mov
hlt
ret
mov
sub
mulb
pop
in
in
jmp
and
mov
lods
dec
cmp
mov
mov
jbe
sub
cmpsb
fldenv
sub
xor
sbb
jecxz
cwtl
popf
mov
scas
movsb
iret
js
sbb
loope
adc
int
xor
jmp
cwtl
aaa
push
neg
push
test
sub
fists
push
outsb
rcrl
fsubs
mov
jne
inc
ljmp
lods
sub
ss
fsub
pcmpgtd
ljmp
test
aam
rcrl
cwtl
cld
cs
sub
dec
cmp
je
cltd
test
pop
mov
xor
or
jmp
inc
out
int
and
test
adc
or
push
insb
leave
jge
ljmp
pop
popf
sahf
and
mov
ret
fidivrl
mov
sbb
loopne
xor
cmp
into
or
pop
mov
and
add
adc
push
add
jge
sub
or
pop
mov
in
xor
mov
fsubrl
cvtpi2ps
sti
stos
sbb
rcrl
jnp
in
jne
xor
mov
mov
ficompl
jne
adc
sbb
lock
lock
push
dec
dec
mov
inc
ds
aad
dec
mov
cmp
mov
and
sbb
pusha
adc
sub
repz
sbb
add
popa
pop
pushf
mov
adc
ret
into
pop
and
pop
int3
orl
xchg
stos
or
arpl
imul
sti
cld
mov
ret
addr16
mulb
sbb
sbb
outsb
pop
sub
fwait
jne
or
adc
outsl
nop
lahf
pop
mov
push
in
stos
aaa
stos
pop
cli
pusha
lret
popf
xchg
pusha
repnz
cmpsb
icebp
inc
pop
mov
insb
mov
push
mov
or
shl
fnstenv
xchg
cld
and
mov
pop
or
imul
push
sub
lcall
lret
dec
pop
insb
push
or
sub
pushl
add
xor
mov
mov
ret
cmp
mov
out
call
aad
sbb
pop
dec
ret
int
mov
cmp
jg
popa
cmp
xor
movsl
and
cmp
mov
sub
leave
push
push
fildll
xchg
xchg
loopne
shl
lds
or
inc
add
sub
and
push
inc
lock
inc
jge
das
push
or
test
sub
pusha
mov
inc
insb
sub
pop
mov
add
sub
mov
adc
jg
xchg
stc
xor
nop
das
push
lds
adc
jbe
int3
pop
ljmp
cmpsl
mov
push
cmc
test
pushf
cmp
sbb
in
cmpsl
fcoms
shl
mov
dec
pop
outsb
or
insb
jmp
mov
movaps
popa
jmp
mov
pop
pop
js
jbe
add
xchg
das
in
sahf
movsb
js
adc
adc
pushf
push
test
xor
std
les
inc
notl
sbb
pop
pop
es
dec
leave
push
sbb
mov
rcrl
arpl
test
jns
xchg
iret
sti
cmpsl
sub
iret
mov
lds
push
aad
dec
inc
lea
movsl
mov
dec
ja
cmp
sub
dec
sbb
gs
sbb
fs
repz
frstor
dec
out
jne
and
sahf
rcll
mov
pop
dec
push
mov
inc
cs
dec
xor
sub
jne
movsb
inc
inc
and
pop
fstl
fimuls
daa
and
shrl
test
bound
mov
and
or
sbb
lods
xor
loopne
pop
sbb
or
push
sbbl
xchg
inc
pop
inc
sahf
dec
mov
orb
mov
xor
and
rcrb
lock
insb
inc
movl
out
jl
in
mov
rcll
dec
or
mov
iret
mov
sub
adc
jp
pop
xor
mov
mov
push
icebp
repz
jecxz
imul
xor
jo
pop
and
jl
in
mov
dec
sbb
mov
adc
mov
cmpsb
sbb
inc
and
cmpsb
xchg
hlt
add
xor
sub
imul
test
mov
into
cwtl
je
fs
pop
and
int
or
movb
jmp
push
push
add
mov
xor
inc
rorb
dec
aas
push
jno
leave
sub
xchg
xor
xchg
movsb
data16
mov
enter
xlat
xor
out
nop
int3
push
xchg
xchg
mov
hlt
cli
outsl
mov
inc
cmp
std
pop
dec
fwait
dec
and
nop
test
loope
insb
inc
or
mov
das
jae
dec
pop
gs
test
test
test
adc
xor
aas
lahf
xchg
insl
cmp
pop
pop
add
stc
int
lcall
dec
lret
pop
inc
repz
ficompl
pop
dec
inc
data16
xor
pop
inc
jns
lahf
dec
loopne
aas
pop
add
cmp
mov
adc
outsb
xchg
cmpsl
mov
jmp
mov
jae
fsubl
shr
cmp
dec
add
repz
sti
mov
add
mov
ss
pop
test
mov
pop
mov
cs
lret
mov
repnz
xchg
mov
or
adc
xchg
push
or
int
or
mov
movsl
clc
jmp
lods
push
cs
fs
mul
js
inc
je
rorl
idiv
stos
push
jo
adc
js
cli
ret
test
mov
inc
loope
dec
lock
mov
popa
push
ss
dec
xchg
jnp
add
sbb
mov
jecxz
mov
insl
insb
pop
cmp
xor
fcmovu
jp
xchg
popa
cmp
gs
scas
das
test
pop
mov
lcall
inc
roll
sbb
aad
pop
sbb
sub
out
and
dec
or
mov
inc
or
adc
es
int
xchg
sbbl
jle
sarl
f2xm1
xor
ret
jmp
ljmp
xchg
mov
mov
pushf
mov
jnp
in
cmp
inc
aam
push
lds
mov
mov
push
aaa
enter
cld
jecxz
nop
mov
pop
mov
repz
gs
pop
insb
std
lahf
hlt
fbstp
lock
pop
add
mov
pushf
fcomip
fisubl
enter
jns
dec
icebp
jle
dec
mov
fistps
mov
mov
shrl
movsl
lcall
out
cmpl
test
mov
or
mov
psadbw
lret
sbb
pop
mov
aas
or
mov
out
push
lock
jle
pop
clc
xchg
dec
push
test
dec
adc
dec
pop
jns
int3
popf
lret
and
out
xchg
mov
pop
adc
in
mov
pop
test
ljmpw
dec
insl
lret
dec
mov
nop
int
int
mov
pop
popf
and
ret
dec
stos
jge
inc
cltd
ss
fmul
cmpsb
xchg
sub
and
mov
stos
int
cmp
jmp
stc
sub
popa
adc
icebp
mov
push
je
in
mov
push
or
les
inc
sub
mov
sbb
aas
jmp
lahf
inc
sbb
faddl
adc
inc
fldt
cmp
dec
push
lds
in
mov
rolb
dec
xchg
add
inc
mov
adc
mov
popa
mov
or
mov
add
pop
cmp
mov
shrb
inc
mov
inc
cmc
push
xchg
dec
cmpb
pop
outsb
push
je
clc
dec
std
stos
lret
lahf
mov
das
movsl
outsb
test
and
cli
das
jp,pn
sub
and
jb
nop
push
sub
add
outsl
adc
jge
adc
sub
pop
incl
adc
int3
xor
push
daa
jg
lods
daa
xchg
mov
push
call
fwait
in
cmpl
pop
test
aas
push
in
jmp
sub
notl
stc
bound
into
mov
inc
sbb
out
loope
lahf
icebp
sbb
sub
test
sbb
dec
and
ljmp
mov
cltd
cmp
test
xchg
sub
fnsave
leave
sbb
inc
subb
pop
push
inc
pop
lcall
sub
pop
pop
xor
sahf
stos
add
sbb
enter
dec
decb
pop
test
loope
lock
jae
repz
and
mov
in
sbb
daa
add
dec
sub
push
and
push
xchg
leave
mov
xor
test
mov
and
rdmsr
sarl
adc
jne
iret
or
xor
cmp
fs
pop
int3
test
ja
outsl
dec
and
popa
inc
aad
arpl
out
mov
loop
sub
inc
pop
fldenv
mov
pop
js
mov
and
xor
jge
dec
fsubs
dec
push
mov
nop
int3
sbb
adc
fistps
out
cmpb
subb
xchg
adc
adc
push
mov
sbb
add
sbb
pop
push
filds
dec
adc
push
pusha
aad
into
clc
leave
inc
in
clc
sbb
in
movsb
fidivrs
popf
loope
adc
fldenv
test
mov
popa
mov
out
ret
scas
loopne
in
test
cmp
xchg
add
mov
jge
lea
aaa
mov
xorl
jmp
shll
dec
mov
ret
push
mov
js
mov
push
push
push
push
inc
xchg
xchg
mov
add
jo
sbb
push
mov
or
adc
faddl
sub
and
in
jp
and
adc
push
mov
mulb
out
pop
outsb
insb
push
ljmp
scas
call
fcmove
mov
dec
pop
shr
testb
add
loopne
push
aaa
or
call
or
lret
xor
xchg
popa
movsb
mov
cmpsb
arpl
popa
sti
and
das
cmp
cmpb
fadds
aaa
mov
inc
jns
adc
sub
ret
dec
mov
shrl
adc
movb
clc
adcl
push
sbb
add
pop
mov
pusha
sbb
bound
push
inc
pop
sbb
sub
fs
sarb
roll
xor
add
adc
mov
and
aaa
or
jnp
roll
outsl
std
out
mov
lret
lahf
std
aam
or
push
cmp
jmp
adc
test
mov
rcll
inc
and
lret
hlt
adc
dec
add
push
push
jle
data16
iret
int
stc
adc
pop
fnstcw
sbb
sar
mov
bound
pop
imul
not
jbe
xor
inc
jno
jg
xchg
adc
or
clc
das
pushf
leave
fadds
ret
fldcw
arpl
in
les
inc
mov
dec
mov
test
lock
std
add
cwtl
roll
push
outsb
fwait
mov
shlb
pop
ret
and
push
stc
dec
sub
jns
jb
addr16
sub
push
xchg
les
adc
aam
mov
dec
inc
mov
add
adc
lcall
sti
push
pop
push
pop
jnp
fnstsw
movsl
xorl
scas
sub
jp
inc
stc
push
leave
stos
mov
movsb
xchg
adc
lret
jp
xchg
test
mov
adc
in
js
lods
or
test
add
sub
sbb
mov
or
std
insl
out
repz
adc
ret
mov
push
clc
xor
pop
mov
bound
je
inc
gs
cld
add
xchg
fucomip
mov
ja
ss
and
add
adc
out
dec
loopne
mov
add
adc
ficompl
push
and
cli
inc
jb
jae
add
aad
mov
repnz
add
jbe
fcmovnbe
push
xchg
subb
mov
pop
lcall
in
push
inc
fstpt
js
outsb
mov
aam
xchg
xchg
push
or
push
addl
loop
and
inc
scas
adc
xor
add
sbb
add
add
pop
imul
lret
ret
jle
cli
rcrb
adc
hlt
sub
ret
mov
imul
and
jb
rorl
mov
fs
lock
mov
enter
jp
test
fnstsw
inc
fsubr
pop
loope
jnp
je
pop
jl
mov
pop
ss
pop
mov
icebp
test
in
rcpps
andb
ret
divl
daa
inc
jge
cmp
stos
lret
jle
xor
sbb
hlt
inc
scas
neg
mov
out
dec
nop
sbbl
jg
jnp
hlt
stc
jmp
ja
repz
xchg
inc
xor
cld
stos
pop
jae
jecxz
pop
dec
daa
aas
std
pusha
or
adc
ja
mov
dec
lret
add
scas
inc
adc
add
mov
or
in
repnz
jg
pop
mull
test
das
cmp
adc
loope
add
aad
xor
push
adc
cmp
or
loop
aaa
scas
mov
int
mov
shl
sub
add
jge
jo
sarl
mov
or
push
cltd
sbb
ds
gs
mov
mov
cmp
aaa
std
mov
sarb
pushf
push
push
cmpsl
cmp
push
mov
fwait
movsb
ja
push
mov
xor
popa
movb
xabort
dec
add
mov
and
aad
sahf
inc
addl
xor
jne
divb
jae
add
jns
or
iret
in
cwtl
ljmp
mov
into
inc
inc
push
mov
lock
xchg
punpckhwd
adc
mov
mov
xchg
cmp
jns
sbb
fnsave
pop
xchg
pop
out
outsb
inc
sbb
out
cwtl
nop
cmp
dec
jecxz
push
daa
bound
aam
adc
inc
jmp
pop
dec
data16
js
mov
pop
call
into
or
push
repnz
cmpsb
add
cmc
rorl
faddl
push
clc
xchg
add
sti
mov
loopne
stc
jne
cmp
mov
or
pop
inc
icebp
mov
mov
cmpsl
adcb
jge
mov
dec
icebp
xor
js
fcomps
or
add
out
pop
pop
sti
scas
in
dec
mov
jo
and
sbb
jne
out
and
aas
inc
push
sub
sub
cs
xor
xchg
mov
popa
add
and
mov
sbb
mov
icebp
mov
insb
adc
movsb
add
add
sbb
mov
aas
inc
pop
sbb
push
add
sub
fs
cld
adc
pop
mov
jns
movsl
cmc
pop
jae
test
cmp
addb
lcall
cmp
negb
imul
je
sahf
inc
or
fmull
cmp
xchg
es
test
testb
out
jo
sbb
je
das
jle
lods
imul
pop
insl
and
sub
mov
push
adc
pop
pop
sbb
push
adc
adc
cwtl
les
push
out
jg
or
pushf
adc
ja
int
pop
test
cmp
daa
jmp
dec
fbstp
fldt
jp
dec
dec
movsl
adc
fs
pushl
pop
test
xchg
inc
popl
icebp
scas
clc
dec
push
repz
jae
dec
pusha
inc
fs
push
dec
rcr
popa
sub
loope
data16
mov
sbb
jbe
in
les
push
or
push
test
pop
push
js
or
jae
jo
xcrypt-ctr
cmpsl
pop
cmc
nop
dec
sub
dec
mov
int
fidivrl
mov
and
or
sub
int
add
cmp
and
or
jge
jne
jg
add
andb
adc
adc
pop
mov
lcall
jecxz
hlt
mov
add
or
pop
movsl
out
sub
repz
scas
xor
cmpsl
xor
cmp
inc
adc
es
mov
fsubl
pop
cwtl
pop
divb
pop
mov
je
arpl
inc
ret
and
mov
fs
lcall
sub
inc
xchg
push
cmpsb
inc
xor
sub
mov
gs
movsb
sub
mov
sub
dec
mov
jo
push
sub
sbb
test
popf
mov
mov
sub
cmpsb
adc
fidivrs
lea
or
jae
in
mov
test
dec
or
pop
jo
xchg
dec
inc
jno
stos
jne
ja
adc
jns
mov
movsl
or
pop
lock
push
frstor
cwtl
bound
xchg
cmp
and
movl
jae
xchg
lret
ficomps
mov
mov
and
pusha
inc
xor
xchg
add
loope
popa
mov
test
fwait
xor
mov
notl
xchg
dec
je
push
enter
xor
out
mov
adc
jnp
adc
rolb
or
dec
adc
test
dec
jp
jnp
notl
push
sbb
adc
insl
mov
jnp
les
mov
fisubrl
popa
mov
stos
xchg
idivl
pop
xor
je
imul
xor
test
add
jmp
fmull
jae
fildl
ljmp
iret
nop
inc
call
movsl
or
addr16
ret
inc
or
lds
mov
fisttps
xchg
mov
mov
inc
movsb
ficoms
sbb
cmp
or
stc
mov
xchg
mov
pop
ljmp
push
inc
and
idiv
mov
sbb
clc
fisttpl
mov
lahf
sbb
call
inc
outsl
insb
add
sub
xor
rcrb
inc
xor
cmp
lds
jmp
fidivrs
pop
mov
and
xor
xchg
mov
int
mov
repnz
mov
cmpsb
cmpsb
xor
inc
leave
movsl
fnstcw
subb
ret
cmpl
adc
sbb
data16
jmp
loopne
add
mov
pushf
pop
in
and
push
mov
jl
inc
xrelease
sub
sub
and
push
mov
push
outsb
mov
sbb
jbe
repz
jbe
stos
mov
mov
xor
stos
fdivl
cmp
lock
adc
andl
lret
je
test
cmpb
clc
xchg
out
in
mov
jns
neg
xchg
dec
icebp
mov
orl
mov
lret
sbb
and
out
pop
adc
push
pop
xchg
sar
jle
in
jge
xchg
sbb
test
bndstx
lds
push
bound
mov
pop
jae
push
push
nop
outsb
sub
mov
sub
pusha
mov
adc
adc
sahf
mov
cltd
aad
test
mov
imul
jne
fcomps
add
jne
daa
enter
data16
add
ret
cmp
ret
jg
adc
xchg
in
cmp
sbb
es
xor
mov
or
pop
push
in
scas
out
mov
imulb
aaa
insl
add
pop
adcl
or
lea
pop
mov
outsl
shrl
fimuls
sbb
dec
cmp
rorb
mov
push
out
into
daa
sub
loopne
imul
mov
sahf
dec
mov
add
cmp
jmp
cwtl
repnz
loopne
into
rcl
andl
adcl
inc
dec
push
jns
cmpsl
je
js
imul
sub
subb
sbb
inc
inc
jp
aad
xchg
push
jb
lahf
jg
adc
jp
in
not
ljmp
or
inc
mov
add
outsl
mov
in
xor
add
in
lds
push
data16
fxtract
mov
shll
jl
test
das
arpl
shll
lret
mov
clc
addr16
mov
mov
int
inc
lret
fs
idivl
in
jb
ja
int3
mov
fldenv
jge
xor
add
dec
adc
xchg
int3
mov
test
jg
mov
test
call
movsl
mov
sbb
adc
aas
popa
inc
mov
rcrl
iret
inc
mov
lock
mov
sub
xchg
aam
add
mov
push
pop
stc
push
dec
jno
sbb
mov
xchg
adc
sub
lods
dec
adc
movsb
aaa
addr16
idiv
dec
sbb
popf
test
pop
les
push
push
sbb
lods
movsb
cmp
and
jbe
fxch
push
pop
xchg
or
and
push
dec
jmp
or
imul
dec
into
or
inc
adc
aas
out
inc
lret
mov
in
in
stos
and
add
xchg
outsb
and
shlb
adc
arpl
out
in
add
mov
xor
adc
imul
add
lods
inc
lret
mov
sub
dec
inc
cmp
jg
cmp
lret
pop
mull
and
or
cmp
cld
int3
daa
xorl
add
jg
pop
mov
enter
mov
mov
insb
xor
xchg
mov
xor
pop
aad
test
xlat
or
ret
adc
loop
push
sub
and
or
pushf
je
jno
imul
fcomps
mov
mov
std
test
imul
push
and
xchg
dec
mov
idivl
add
pop
mov
sahf
jbe
cli
ret
mov
mov
xchg
movups
in
bound
xor
sbb
arpl
scas
pop
call
repnz
imul
push
lret
inc
wbinvd
rcll
repz
push
add
mov
adc
scas
mov
push
jge
rcrl
loope
jle
std
add
xchg
movsl
jns
outsb
sahf
aaa
verr
push
ja
hlt
add
cmpsb
dec
lret
movsb
icebp
sub
push
jns
cmp
xor
mov
add
jne
inc
scas
ja
cmp
jecxz
adc
jne
fwait
cmp
push
push
jb
cmpsl
jmp
push
fsubl
push
ds
test
cmp
cmp
mov
js
orl
inc
ljmp
or
sbbb
ret
fsts
rorl
and
push
push
push
stos
cmc
push
gs
stc
mov
sahf
inc
subb
test
scas
push
icebp
xchg
stos
fwait
ror
mov
push
lea
xor
leave
mov
pop
imul
test
pop
sbb
sbb
add
enter
xchg
inc
mov
pop
ret
in
loope
int3
ret
and
mov
or
jns
lcall
mov
fidivrl
sub
fiadds
test
cmp
push
shlb
lods
iret
inc
movsl
lods
daa
shrl
test
test
push
je
shlb
cmp
dec
cmpsl
pop
adc
sub
inc
out
das
mov
mov
add
push
jo
pushf
push
add
xor
ja
daa
cwtl
dec
add
or
mov
js
push
lock
daa
addr16
sub
mov
hlt
fwait
mov
or
cld
bound
icebp
pusha
inc
movsb
mov
sub
pop
jle
xchg
xchg
and
mov
call
xchg
mov
xchg
mov
xchg
enter
flds
cs
sbb
lds
cmp
inc
hlt
data16
sub
dec
sub
or
loop
js
pop
popf
pop
add
xchg
sub
jnp
bnd
adc
cmpsb
iret
cmp
sarl
and
stc
dec
jne
dec
inc
mov
es
cmp
dec
adc
mov
nop
icebp
inc
sbb
or
aaa
inc
aaa
mov
popa
mov
xor
and
dec
mov
and
and
jb
out
xor
xor
add
jmp
mov
push
loope
movsb
xor
cmpsb
pop
outsb
pop
cmp
jnp
jae
std
stos
dec
sbb
or
sub
lcall
inc
shll
inc
mov
jne
cmp
lret
jp,pn
jb
ret
adc
in
roll
hlt
adc
ficomps
xor
es
mov
pushf
ljmp
cs
mov
js
adc
cmpsb
sti
jbe
adc
mov
lods
les
mov
fldl
push
stc
add
and
jno
push
xlat
add
sahf
pop
sub
or
insl
and
mov
and
cmp
xchg
cmp
mov
mov
cmp
fmull
outsl
adc
mov
sti
sub
aaa
adc
xchg
push
outsl
loopne
inc
lods
stos
test
mov
mov
movsb
sarl
cmp
test
mov
pop
add
mov
inc
js
sub
adc
lds
dec
or
in
repz
push
out
add
lret
push
jo
hlt
nop
or
movsb
jb
das
cmpb
sub
or
lods
inc
inc
cmc
bound
das
xchg
pop
sub
cmp
sti
dec
cltd
sbb
or
and
xlat
fstl
lahf
sub
fidivl
sbb
xchg
int
xchg
sahf
add
cmpsl
mov
push
lcall
xchg
sbb
mov
inc
sub
jo
and
orb
daa
add
adc
dec
sub
push
cli
sub
lret
mov
mov
inc
push
andb
xchg
sub
and
sub
bound
orb
test
add
je
stos
into
jle
and
into
add
mov
sbb
lea
push
xor
out
mov
mov
xor
lret
sbb
sub
mov
add
push
jns
jno
mov
dec
dec
mov
repz
pop
pop
or
sub
sbb
push
push
push
push
test
in
jle
sub
fmull
roll
dec
mov
push
lret
push
call
lret
jl
xchg
cmp
je
pop
pop
add
pop
jno
sub
daa
out
inc
and
push
jle
jb
aaa
pop
hlt
and
stos
out
stc
mov
jl
test
out
stos
enter
push
jp
or
ret
testl
or
mov
xchg
pop
repnz
scas
ficoml
or
adc
lods
inc
seto
test
in
lcall
sahf
ss
mov
aaa
xchg
ffreep
jg
lea
sbb
test
mov
cmp
pop
xor
mov
test
cmp
enter
cmp
mov
xchg
mov
cmp
ret
cmpsl
jns
popf
jmp
aam
pand
xchg
dec
adc
sahf
or
lock
add
test
jg
jno
mov
sub
xor
iret
ds
sbb
jns
cmp
ljmp
js
insb
and
or
orl
or
iret
pop
xor
adc
fs
sub
or
pop
xchg
push
hlt
inc
hlt
clc
stos
shlb
insb
mov
sub
or
fstpt
jecxz
or
fsubs
adc
shlb
and
fwait
adc
adc
mov
sub
cltd
outsb
jne
and
out
mov
sbb
setno
lret
inc
shll
mov
push
mov
lods
xor
push
mov
jbe
icebp
mov
push
ljmp
outsl
pusha
add
inc
int3
adc
ret
xchg
adc
xchg
sbb
cmp
outsl
xlat
and
pop
cs
jmp
pop
sbb
sbb
sbb
pop
stc
aad
cwtl
adc
mov
push
push
sub
andl
lods
or
iret
fs
int
pop
test
push
jae
jecxz
in
test
mov
ret
ljmp
aad
xor
out
jbe
adc
push
sub
shlb
pop
dec
or
sub
push
hlt
enter
add
inc
or
mov
lret
aam
aad
xchg
adc
pop
gs
mov
adc
jno
or
xchg
out
in
adc
push
sub
outsb
rcrb
clc
jmp
mov
pop
stos
and
jnp
push
sub
sub
adc
in
or
repnz
hlt
and
scas
out
pop
jle
dec
fdivrs
xchg
cmp
jg
xchg
movsb
jne
lcall
nop
out
jnp
xor
leave
ljmp
nop
je
cmpsl
test
xor
xchg
cltd
pop
dec
pop
dec
or
cmp
cmpsb
inc
pop
pop
xor
cwtl
jmp
imul
mov
sub
xchg
mov
loopne
ja
in
mov
das
js
inc
jecxz
mov
lock
jmp
aaa
inc
std
cmp
idivl
pop
pop
stc
loopne
fdivp
test
lock
or
and
popf
ret
scas
out
xchg
mov
out
mov
sahf
cmp
dec
xor
icebp
cmp
call
mov
call
push
popa
mov
add
inc
cmpsl
sub
imul
cltd
scas
sub
xchg
and
xchg
add
scas
bound
jbe
mov
mov
xor
rcrl
aaa
cmpl
or
and
push
mov
mov
pop
mov
gs
xor
shrl
push
mov
cli
mov
lods
fdivl
push
xchg
xor
popa
cmpsb
ljmp
cmp
mov
arpl
cmp
adc
in
add
shrl
inc
les
cwtl
cmp
mov
ficoms
insb
xor
fabs
leave
aas
aaa
pop
int
movsl
xchg
ret
dec
dec
add
mov
into
filds
jg
aam
ljmp
xchg
jne
mov
mov
mov
pusha
adc
xor
push
jecxz
jmp
dec
xor
push
push
adc
and
fwait
dec
jb
or
xor
fbstp
jne
dec
outsb
push
mov
pop
push
or
shll
pop
xor
insb
cmc
stos
adc
into
addr16
leave
cmp
notb
sub
iret
loop
push
or
push
bound
and
leave
imul
fldl
in
sbbb
inc
pop
cmp
daa
pop
ss
les
adc
adc
sub
adc
rcrl
mov
mov
push
aaa
adc
inc
jns
pop
fistl
jbe
fs
jp
xor
les
aad
push
pop
pop
or
in
inc
into
addb
sub
jl
or
aaa
in
mov
adc
pushf
cmpsl
dec
mov
sub
popf
ror
dec
mov
cmp
inc
sub
or
icebp
movsl
inc
pop
xchg
and
fsubrl
and
mov
or
mov
dec
push
mov
inc
sbb
pop
movsl
or
movhps
sub
add
dec
mov
cmp
movsl
fsts
xlat
sub
cmp
mov
movl
push
mov
leave
bnd
xor
add
lods
add
test
mov
ds
pop
and
ljmp
scas
dec
sbb
addr16
sbb
ret
loopne
popf
and
jnp
xchg
xchg
jp
add
popa
in
outsb
sub
sbb
lar
lahf
and
push
pop
repz
or
and
adc
jb
sbb
arpl
adc
inc
ret
lcall
out
adcb
aas
movsl
inc
decb
arpl
mov
add
cmp
shr
arpl
imull
mov
dec
cld
cmp
test
fwait
arpl
lahf
jae
pop
test
imul
out
and
or
mov
adcb
call
or
and
stos
mov
adc
add
movsl
xor
dec
adcb
pop
mov
xchg
lock
es
cmp
test
testl
mov
xor
pushl
fstpt
mov
mov
and
jb
loopne
adcb
fcompl
push
test
add
stos
out
xchg
push
rolb
or
insb
dec
lds
jmp
adc
retw
and
xor
sbbb
mov
mov
push
and
mov
add
xor
adc
sbb
cmp
xor
sti
stos
jge
repz
jno
cmp
cs
test
es
into
mov
repz
stos
mov
das
push
push
mov
mov
lea
or
popf
add
enter
dec
sub
fidivl
cmp
inc
pop
int
adc
adc
add
lret
add
xchg
repz
iret
adc
arpl
sub
pop
adc
into
pop
les
sbb
inc
mov
sbb
xor
lods
jns
mov
dec
push
mov
nop
lds
add
adc
popa
push
cld
in
xorl
sub
xor
push
mov
test
xor
push
inc
stos
lahf
xor
xor
jnp
inc
sub
movsl
data16
movsl
pop
mov
and
add
xor
xor
lcall
icebp
cwtl
dec
cwtl
popa
inc
push
shll
and
rcll
insl
mov
lock
jbe
push
lahf
lock
mov
jge
je
rcr
out
inc
pop
movsl
pop
ret
test
popa
ja
xor
or
popa
popf
xchg
sbb
test
push
loop
or
lret
sub
pop
pop
push
push
lea
int
scas
sub
inc
subl
lret
call
xchg
cmp
push
movsl
movsb
inc
push
icebp
sub
in
ds
push
imul
mov
jns
mov
aam
adc
and
mov
shll
mov
dec
jg
sbb
mov
ljmp
adc
pop
mov
int
in
push
or
in
xchg
int3
add
cmp
sub
mov
enter
scas
inc
add
mov
xchg
int3
inc
adc
cmpsl
mov
xchg
jle
fldcw
jnp
scas
mov
jae
lock
loope
shr
mov
push
mov
pop
sub
out
jo
orl
jmp
cmp
das
subl
aas
aaa
dec
add
nop
inc
data16
mov
arpl
dec
xor
js
jns
call
int3
xor
push
hlt
add
repnz
test
ljmp
cli
ljmp
cmp
dec
adc
movsl
pusha
je
cwtl
shll
or
das
sbb
xchg
out
pop
sti
jl
inc
mov
mov
jb
ja
push
out
test
lods
and
xor
sub
pop
fs
xchg
xor
mov
push
mov
cmpsl
mov
inc
fisttps
sub
jno
sbbb
push
rorl
dec
and
cld
ja
jp
fbstp
cmp
and
add
fimuls
popa
aaa
jne
and
mov
mov
and
or
popf
lret
popf
mov
or
add
out
xchg
cmp
ja
pusha
flds
dec
test
fldl
ds
pop
and
sub
pop
lods
dec
test
bound
jb
adc
sub
and
fs
mov
enter
dec
lcall
enter
cmpsb
add
ret
jnp
xor
lock
ret
sbb
push
add
xchg
cmp
icebp
sbb
jo
xor
sub
xor
add
scas
sub
xchg
loopw
push
test
sub
jae
add
mov
or
or
dec
movsl
sbb
pop
data16
mov
mov
push
jmp
sub
mov
sub
xor
or
push
dec
push
xor
xchg
fcoml
mov
ret
ljmp
jp
and
push
cmp
push
sarb
dec
mov
xchg
pop
mov
add
adcb
loope
pop
in
push
dec
push
cld
or
pop
add
rorl
inc
les
pop
shrb
clc
int
cmp
adc
dec
out
fsubs
test
xor
xchg
sub
rcll
les
lods
lahf
xor
shll
cvtps2pi
out
shlb
das
push
mov
jp
loopne
vpcmpgtw
test
cmp
xor
sub
or
push
pop
xor
std
mov
popf
sub
adc
ret
mov
or
mov
pop
xor
fs
int3
xchg
jl
adc
iret
scas
aaa
into
jno
insb
sub
and
jae
add
or
sub
and
pop
xor
sub
adc
stos
jnp
adc
insb
imul
jnp
scas
mov
sub
dec
pop
bnd
inc
mov
scas
ljmp
loope
mov
or
sti
xor
mov
fcoml
xchg
jb
negb
call
sti
xadd
mov
push
sub
xor
fnstcw
sub
std
ret
jo
inc
inc
and
adc
clc
inc
push
add
dec
sub
pusha
shll
jo
bound
test
je
sub
int
lcall
sbb
cltd
out
clc
mov
pop
sub
fmull
sbb
pop
icebp
aaa
push
sbbl
ljmp
out
mov
xchg
call
addr16
mov
loop
lock
in
adc
or
pop
jne
enter
daa
mov
pop
mov
fwait
in
mov
stos
inc
inc
push
jg
mov
jne
mul
ficoml
inc
add
stos
sahf
sub
in
or
sub
pop
push
mov
popf
stc
inc
lahf
movsl
push
ficompl
ljmp
or
not
outsl
inc
clc
aas
in
xorb
add
enter
fdivs
out
jns
cmc
jnp
sbb
pushl
add
push
pop
mov
jmp
sbbl
add
je
inc
xor
and
cltd
cmp
push
mov
test
xor
fmul
lret
js
lods
subl
pop
dec
dec
xchg
fbstp
outsl
mov
jl
and
sub
sub
addr16
sub
add
aam
ds
add
rcrl
dec
add
pop
or
add
in
xchg
dec
mov
enter
mov
inc
fiadds
sub
mov
cmpsb
jmp
loope
mov
pop
jae
add
mov
sti
ror
lods
nop
shl
push
mov
cwtl
cmp
popf
mov
jmp
das
pusha
or
test
loope
inc
mov
sbb
mov
cmp
inc
int
clc
xor
in
ret
ret
out
jmp
dec
pop
cmp
dec
pop
jge
xchg
lret
cld
or
fstps
mov
mov
outsl
lcall
aaa
int
clc
or
inc
imul
xchg
ds
push
sbb
pop
cmc
pop
dec
mov
mov
sub
lods
setae
push
shll
add
repz
cld
pop
movsl
add
inc
mov
dec
pop
or
mov
daa
call
push
lret
dec
mov
es
sub
data16
mov
xchg
and
cli
cltd
xor
adc
sub
loope
inc
lret
call
jb
or
andb
push
fdivs
inc
js
mov
leave
mov
sub
aas
mov
jae
pop
lahf
cmp
test
leave
imul
das
popa
fcomip
aam
push
add
stc
scas
cmp
mov
cmp
mov
push
add
jecxz
dec
int3
mov
mov
cmp
lea
mov
stc
inc
adc
pop
idivl
mov
xchg
in
bound
hlt
stos
xchg
inc
inc
xor
fisubs
repnz
test
mov
fsubl
or
sbb
push
loop,pt
sbb
sbb
std
adc
push
je
adc
sbb
mov
push
arpl
inc
mov
ret
out
orb
ret
jg
bound
mov
adc
mov
fdivs
xchg
gs
lods
jmp
xlat
fnstsw
sub
mov
icebp
mov
xchg
jb
cmc
or
mov
in
pop
call
imul
sub
movsl
mov
jp
mov
out
jp
mov
fnsave
adc
jmp
xchg
add
cmp
jo
jmp
movsl
mov
ret
lret
out
sbb
test
cli
xlat
mov
jae
mov
pop
mov
or
je
daa
add
dec
or
xchg
jp
std
cmpsb
pushf
pop
xchg
dec
sbb
jge
lret
bound
loope
mov
cmc
hlt
push
cli
sti
pop
mov
push
cmp
push
call
mov
or
imul
bound
js
push
sbb
mov
or
push
imul
cwtl
sub
cmc
fdivrs
sbb
mov
loope
mov
jge
ss
push
insb
imul
xchg
xlat
jns
inc
test
pop
sbb
stc
and
ljmp
sbb
mov
inc
int
clc
nop
in
jg
inc
mov
outsl
outsl
bound
mov
clc
xor
lcall
mov
cwtl
xchg
dec
popa
cwtl
subl
xor
pmaddwd
data16
out
sbb
repnz
jp
push
xor
xorl
sub
lret
mov
mov
fldt
sbb
test
sbb
and
shll
or
adc
inc
or
add
rorl
pusha
test
shll
mov
imul
fsubrl
and
add
shl
out
pop
loope
sub
addr16
jmp
dec
cmpsl
loop
dec
cmp
and
add
xlat
xchg
add
ljmp
les
int3
mov
mov
add
and
into
lcall
and
cmc
leave
inc
mov
sub
sbb
jnp
jp
outsl
aas
push
cs
or
mov
test
ret
leave
ret
lahf
mov
aas
data16
mov
test
xor
jmp
mov
lods
or
cld
fs
or
and
sub
mov
imul
jns
lods
jns
arpl
pop
shl
mov
xor
and
cltd
mull
pop
mov
or
inc
adc
mov
mov
push
push
lea
add
fsts
loopne
or
dec
push
mov
insl
add
cmc
mov
jmp
or
inc
dec
pop
add
xchg
xor
inc
movl
or
cli
mov
cmp
push
xchg
push
push
xchg
enter
movsl
test
adc
jno
mov
out
dec
and
ljmp
mov
and
inc
scas
fwait
add
inc
movb
adc
in
jnp
mov
popf
mov
das
pop
aam
jbe
pushf
sti
mov
jp
xchg
dec
cmp
push
pop
fmulp
nop
or
add
push
fwait
add
sbb
int3
adc
in
cmp
xor
dec
dec
adc
or
popf
orb
mov
mov
and
push
imul
pushf
loope
outsb
movswl
pop
mov
adc
fwait
lods
addr16
lahf
adc
jns
pushf
dec
and
push
jle
pushf
cmp
push
es
mov
inc
test
out
jnp
add
cmp
cwtl
sbb
gs
std
cwtl
jmp
mov
lods
pcmpeqw
cmc
imul
addb
mov
or
lods
xchg
sti
sub
push
das
int
lret
mov
insb
outsb
aas
sub
shll
mov
clc
cmpsb
pop
in
xchg
ljmp
add
leave
es
out
insb
ljmp
add
call
fldenv
jl
scas
xor
fdivrs
jbe
test
mov
jg
xlat
pop
mulb
cltd
nop
in
jbe
mov
das
out
inc
pop
out
mov
pop
inc
adc
aas
pop
lods
cmp
repz
jge
xor
divb
inc
test
pop
bnd
pushf
scas
or
jns
popf
in
cmp
jo
mov
xor
push
sub
les
daa
xor
arpl
xchg
mov
cmp
jmp
inc
push
imul
jno
and
lret
inc
and
test
jecxz
rcl
out
imul
sti
stos
or
and
sbb
mov
cld
leave
out
lcall
test
add
je
loope
or
adc
jno
fisubrl
add
add
ret
mov
jg
test
cmp
pusha
sbb
les
xor
imul
add
adc
adc
loop
enter
ret
mov
popl
lcall
lds
xchg
xor
jo
jbe
xor
loopne
addr16
mov
mov
jge
inc
mov
test
sub
and
dec
push
aas
gs
bswap
call
js
scas
jg
sub
or
lods
jb
pop
rcr
or
test
cld
and
and
in
call
pop
in
shll
clc
lea
pop
lds
jmp
adc
pop
les
jmp
jp
xchg
cmp
and
movb
sbb
add
jne
sub
cld
cmp
sbb
xchg
imul
jmp
movsl
loopne
call
cmp
shrb
mov
aas
push
sti
adc
test
test
loopne
sub
sub
dec
adc
cmp
outsl
lret
fdivrs
popa
add
ja
das
xchg
in
pop
mov
popa
xor
push
push
or
fisttpl
push
xchg
cmp
mov
lret
sahf
mov
xchg
mov
ret
decb
movsl
mov
lcall
sub
inc
mov
or
cwtl
rcll
iret
rcl
mov
sbb
push
mov
pop
mov
cmpb
mov
xor
fildl
adc
ficompl
xorb
pop
jge
xlat
les
loope
out
loopne
stos
push
inc
dec
mov
aam
in
sahf
or
pop
gs
mov
negl
sbb
inc
dec
sub
inc
je
cltd
dec
jne
outsb
nop
les
push
icebp
call
aad
inc
mov
pop
and
jmp
xchg
jmp
dec
and
jl
xor
pop
mov
stc
popf
icebp
jge
mov
jne
repz
add
repnz
pop
mov
jecxz
sub
mov
and
dec
hlt
cwtl
lea
sbbb
inc
stos
mov
arpl
mov
fwait
mov
or
push
cmpsb
push
roll
mov
aad
mov
jg
dec
and
mov
mov
push
ficoml
loop
dec
fsubl
mov
mov
popa
loop
xchg
adc
push
inc
xor
dec
lods
int3
outsl
sub
cmpsb
test
pop
test
das
jno
aas
mov
ss
cmpsl
es
adc
and
add
aam
rcll
std
and
push
and
pop
outsl
jmp
push
sbb
push
sub
and
mov
movsl
stos
ja
loop
pop
pop
cmpsb
mov
adc
leave
shl
fldt
in
shll
pusha
outsb
mov
je
mov
dec
icebp
cmp
cmp
or
xchg
stos
std
rorb
fldl
lcall
inc
scas
lret
add
jbe
loope
inc
pop
mov
sarl
jnp
imul
pop
xchg
ret
into
push
lcall
shrl
data16
stc
push
iret
xor
adc
in
mov
das
loop
jmp
or
adcl
aam
sbb
sbb
orb
mov
inc
pop
jg
adc
pop
adc
sub
or
cmp
fcomps
inc
sbb
rcr
or
dec
lods
sbb
mov
loope
fwait
inc
push
adc
ljmp
lds
int3
fisttpll
sub
mov
dec
sub
addl
sub
cltd
and
and
mov
int3
xchg
sub
jbe
ljmp
cwtl
xchg
add
sub
in
mov
mov
cmp
stos
imulb
test
pusha
xchg
inc
adc
jge
xor
mov
mov
push
out
pushf
pop
aas
sbb
aad
gs
pop
and
pop
jnp
pop
mov
std
pop
pop
dec
mov
push
add
fwait
fwait
std
xchg
cmp
xor
mov
dec
iret
das
stos
mov
das
mov
gs
cmp
cmc
mov
aad
dec
int3
inc
mov
sahf
sub
or
sub
cmc
int
lods
push
cmp
pop
pop
orb
inc
xor
fistps
ds
lock
fwait
ja
adc
mov
xor
pop
lea
jne
addr16
and
cmp
dec
cltd
mov
cmp
pop
adc
cmp
add
cld
adc
mov
mov
jl
js
out
test
lcall
aam
shlb
dec
or
mov
sbb
int
adc
add
imul
lcall
add
fisttpll
or
in
fwait
xor
out
jp
add
adc
lahf
andb
pop
cli
out
jg
je
sbb
mov
xor
cmp
scas
sub
je,pn
cs
dec
in
cwtl
les
or
jae
call
arpl
mov
mov
test
push
sbbl
push
dec
fldt
sub
jle
lds
cmpsb
push
mov
icebp
movb
xlat
loope
pushf
cmpsb
or
push
pop
jbe
push
and
and
xorb
aad
mov
out
lock
lcall
jno
addr16
cli
out
mov
dec
jge
or
or
stos
jo
je
inc
push
inc
xchg
out
cmp
stos
adc
mov
and
mov
aad
push
les
aas
loopne
and
pop
jns
enter
leave
mov
cmp
push
and
jns
inc
push
or
aas
push
jmp
mul
mov
js
in
les
fidivrl
xor
lret
mov
pop
push
rcpps
add
sbb
or
addr16
inc
push
lahf
xchg
aaa
enter
arpl
mov
inc
mov
mov
sbb
fsub
and
push
and
inc
fnsave
dec
imul
cwtl
sub
xchg
ret
scas
adc
jno
outsb
ja
sub
lea
mov
adc
push
pop
cmp
inc
aam
push
ret
xchg
xchg
sbb
dec
pop
pop
or
sbb
repz
xor
xor
mov
adc
mov
sub
pop
in
jg
std
jg
stc
add
popf
es
mov
hlt
sub
jmp
add
shll
fldenv
mov
fiaddl
ss
cmp
stc
cld
xorb
enter
loope
jo
rcll
mov
and
pop
mov
or
add
in
divb
sbbb
rolb
loopne
cmp
jl
jmp
inc
leave
mov
fmul
xchg
add
mov
or
push
jle
fadd
and
jle
idiv
cmpsl
outsb
jne
push
sub
dec
cmp
inc
sub
loope
sbb
sub
jle
xchg
add
fdivs
add
leave
mov
fadds
arpl
js
popa
sar
sub
rcrl
dec
aaa
sub
mov
jmp
mov
ret
or
pop
test
sub
cltd
xor
jb
fisttps
add
mov
aad
jg
movsl
fsubr
xor
and
loop
xor
mov
sar
push
cmpsl
push
jp
fcompl
cmp
push
aad
cmpsl
xchg
stos
pop
xchg
in
mov
mov
mov
pop
lea
xchg
push
stos
ret
lret
aas
sbb
add
lock
sarb
dec
divl
scas
jmp
out
or
jmp
call
hlt
sub
jl
sub
or
inc
push
dec
fisttpl
xchg
loope
and
xor
jae
sub
in
repnz
mov
xchg
push
mov
inc
xchg
fdivrp
mov
pop
adc
xchg
jbe
lods
cmpb
or
fninit
xor
cmpl
lock
leave
test
aam
push
push
repnz
cwtl
cmc
lcall
cmpsl
sub
and
dec
inc
sbb
adc
loop
fdivs
and
push
inc
outsb
ret
addr16
mov
loop
mov
imul
ret
xor
pushf
jnp
push
arpl
jmp
aam
stos
cmp
sub
mov
cmp
add
and
pop
or
mov
xchg
aad
lock
xchg
int
add
mov
sbb
mov
add
addr16
push
adc
inc
jmp
sahf
add
xor
cs
jo
inc
mov
or
or
xchg
les
inc
mov
daa
test
jge
mov
mov
fiaddl
add
popa
adc
mov
sub
fs
lcall
jecxz
xor
push
adc
push
ss
add
test
scas
enter
incl
cmp
clc
rol
mov
pop
xchg
cwtl
push
jmp
add
jp
lods
out
sahf
shlb
and
push
dec
or
test
xor
vshufps
push
pusha
push
sbb
push
and
leave
and
aad
movsl
popf
clc
mov
ljmp
hlt
mov
and
mov
sbb
ds
adc
mov
or
inc
lods
xchg
mov
mov
scas
adcl
loopne
cmpsb
or
popf
inc
add
test
rcl
ret
sbb
xchg
test
sub
sub
push
jno
add
sbb
lret
mov
pop
leave
dec
adcl
cwtl
ljmp
jne
cmpl
es
xchg
jge
lea
clc
addr16
hlt
xchg
sbb
sub
xchg
shrb
stos
test
jb
cli
mov
mov
loopne
and
sub
dec
outsb
clc
jp
aam
ds
gs
add
and
sbb
aaa
cmpsb
pop
push
cld
sub
inc
push
test
aaa
es
ds
jecxz
cmp
pop
sub
js
aad
mov
addr16
aaa
ret
in
xor
fisubs
stc
clc
dec
scas
mov
arpl
push
mov
loop
stc
inc
cmp
jne
shlb
sub
add
add
rcrl
jecxz
add
mov
pop
in
lret
rcrl
loope
mov
pop
pop
jae
fwait
dec
outsl
mov
adc
int3
ja
sbb
jno
or
jmp
mov
popf
dec
lahf
stos
pop
jecxz
sub
sub
xchg
add
repz
loope
xlat
flds
mov
adc
jg
rclb
call
push
test
and
mov
jg
popf
loopne
jp
leave
push
inc
ja
ds
ds
lret
inc
scas
push
add
or
xchg
mov
cli
or
inc
add
sbb
xchg
jnp
das
ret
mov
or
cvttps2pi
cmpsl
add
adc
and
push
push
stos
xor
icebp
popf
and
push
xor
test
mov
mov
lods
fistpl
xchg
rcll
jecxz
cmpsb
gs
lahf
enter
or
mov
ret
mov
cmpsb
push
add
faddl
js
inc
bound
dec
jmp
and
cmp
adc
sbb
sub
add
ret
rcl
nop
mov
mov
lahf
xchg
or
cld
aaa
push
jg
imul
daa
shlb
subl
dec
ret
and
out
pop
out
mov
outsl
dec
lods
sub
incb
outsb
inc
jns
inc
cmpsl
outsl
sbb
mov
jo
lds
adc
mov
and
pop
mov
adc
in
cwtl
cs
out
mov
lahf
scas
in
jnp
xorb
push
sub
adc
mov
xorl
or
ror
lods
ret
mov
loope
or
or
aad
xchg
in
mov
xchg
mov
je
push
xor
lds
pop
es
fcomi
outsb
mov
mov
push
pop
jmp
push
outsl
neg
mov
insb
rolb
dec
jmp
popf
lret
iret
xor
iret
aas
xor
inc
or
inc
jp
ljmp
push
push
mov
hlt
data16
mov
xor
and
stos
out
xor
or
sbb
sbb
jg
repnz
mov
test
mov
push
pop
popf
mov
or
cmp
jmp
lret
mov
ret
jge
sub
or
ja
iret
sbb
out
adc
mov
sub
or
mov
rorl
fadd
sbb
lret
fwait
or
add
xor
pushf
xchg
dec
jne
push
jmp
test
das
dec
push
lea
push
xlat
inc
or
cltd
inc
add
inc
add
and
and
movsl
and
or
and
adc
stc
sub
cmp
adc
pop
or
ja
inc
clc
std
lods
mov
jns
xchg
into
ret
enter
fidivrl
call
hlt
sbb
sub
sub
ja
mov
movsb
fwait
stc
lret
mov
lods
inc
cs
lds
ret
movb
pushl
push
mov
out
popa
lea
fdivrl
mov
sbb
int3
mov
push
shl
int3
enter
xor
out
dec
dec
out
addb
cmpsl
movb
dec
mov
cmp
mov
cmp
push
pop
mov
addr16
stos
lods
dec
mov
in
adc
add
push
stos
or
or
jo
jp
dec
dec
test
test
pop
mov
shrl
sub
xor
rolb
das
andb
jecxz
mov
mov
out
mov
popa
arpl
sub
push
mov
sar
arpl
cmp
push
or
push
fistl
sub
in
popa
jmp
or
lods
mov
sti
insb
repz
int3
inc
aas
decl
add
mov
mov
push
lods
xchg
cmp
stos
sub
icebp
sub
pop
adc
or
jns
add
sub
add
lds
add
pop
push
ss
shll
xchg
fstp
xlat
or
leave
cmp
cmp
sbb
mov
mov
sub
imull
mov
jb
cmp
lret
lcall
rolb
cwtl
pop
pop
fcmovu
loopne
and
sti
lea
pop
cmp
dec
or
out
xor
add
aam
jle
fcoms
or
xchg
mov
push
or
and
shl
or
mov
out
mov
pusha
inc
push
push
gs
push
and
mov
jns
push
cwtl
mov
jb
mov
ds
xchg
mov
test
lock
sbb
mov
jl
push
mov
repnz
repz
icebp
fdivs
sub
adc
mov
outsl
fists
cli
sbbl
aas
mov
les
sub
lahf
dec
pop
cltd
loopew
mov
std
test
jb
cltd
inc
xor
dec
inc
leave
inc
mov
add
testb
inc
icebp
lret
mov
cmp
push
sub
cmp
add
loope
mov
mov
rcrl
jae
ret
loop
fildl
mov
addr16
gs
cmp
xor
sub
rcll
jae
sub
out
sub
pop
mov
cmp
mov
adc
jnp
sub
jecxz
pop
jg
pop
lea
dec
pop
mov
mov
mov
cwtl
add
push
xchg
push
dec
mov
xchg
sbb
push
std
xor
pop
lahf
mov
nop
push
cmp
cmp
sbb
cmp
fucomp
xchg
gs
loop
jmp
mov
je
push
add
inc
mov
mov
rclb
and
jecxz
add
aad
daa
sbbb
imul
loopne
xlat
pushf
push
mov
pop
movsl
mov
bswap
scas
xchg
loop
ljmp
mov
imul
shr
pop
imul
es
mov
in
fidivl
std
loop
and
pop
call
stos
cwtl
lds
adc
shll
adc
add
jne
mov
xchg
push
fwait
xor
rcrb
nop
dec
cmp
mov
mov
ret
inc
mov
jb
and
cmp
adc
inc
mov
adc
xor
add
push
pop
cmp
outsb
sbb
mov
bsf
in
adc
pop
daa
in
mov
adc
test
daa
js
in
push
pushf
in
jp
popf
or
mov
bound
imul
loope
dec
lret
jb
pop
or
daa
xchg
lea
enter
lret
cmp
or
out
push
inc
js
sbb
xchg
sbb
cmpsl
cld
inc
das
lcall
idivl
mov
mov
repz
push
pusha
adc
adc
mov
jge
je
push
movsl
flds
push
xchg
js
stc
je
sub
cmpsb
push
xor
mov
pusha
push
pop
dec
jae
shrb
xor
fsts
mov
test
xor
inc
jmp
shrl
dec
mov
je
les
and
dec
inc
cmp
pop
pop
addb
inc
in
or
jns
and
sti
sbb
out
mov
dec
inc
test
cmp
repnz
push
popf
test
push
js
jle
in
xchg
shl
sbb
das
mov
push
xchg
add
adc
call
sub
jnp
xor
iret
push
fcompl
loop
es
push
testb
je
push
push
fimuls
inc
add
ret
ret
dec
bsr
adc
cmp
xchg
scas
jecxz
dec
sbb
jae
popa
stos
mov
mov
leave
testb
out
mov
pop
inc
or
fldt
xchg
xor
mov
mov
sbb
andl
inc
push
push
addr16
subb
rcll
push
mov
popa
add
stc
mov
and
fprem
pop
mov
insb
pop
mov
es
jp
scas
aam
leave
lcall
xchg
popa
lea
inc
lcall
lret
lret
and
decb
in
ss
dec
mov
fxch
rolb
int
mov
aas
aas
repnz
push
jb
icebp
jb
mov
pop
jno
je
mov
frstor
mov
pushf
les
les
pop
mov
jge
add
loopne
and
sbb
sub
movsb
movsb
imul
mov
stos
mov
test
aad
cmp
sti
sub
loopne
jmp
add
push
xchg
adc
loopne
insl
pop
xlat
push
mov
cmp
mov
sbb
or
mov
pop
lret
clc
jmp
ss
aad
sarb
stos
aas
mov
push
and
xchg
and
push
inc
pop
or
sub
pusha
ja
mov
push
fwait
pop
pop
test
add
adc
scas
mov
xchg
negb
adc
repz
xchg
and
jae
mov
push
xchg
ret
vcvttpd2dqy
sub
push
mov
xchg
sahf
daa
je
movsl
shll
notl
int
jo
pop
sarl
push
clc
mov
std
jb
pop
fxch
adc
rcrl
das
cmpsb
jbe
or
pop
jae
adc
mov
test
mov
xor
jecxz
xor
dec
int
adc
xchg
mov
xchg
adc
mov
std
mov
jmp
push
pop
sbb
int3
sarl
or
fst
mov
pop
jae
test
push
adc
cmp
sub
movsb
pop
mov
mov
xor
mov
test
sbb
int
stc
mov
andl
scas
movsb
psubb
xchg
clc
inc
fdivl
or
mov
or
push
outsl
lcall
pop
jg
xchg
mov
xlat
leave
and
fildl
fsubrl
in
pop
pop
cld
das
arpl
hlt
add
mov
and
mov
filds
pop
test
hlt
ja
cmp
pop
pop
jns
mov
lock
cmp
aas
test
jecxz
adc
xchg
addr16
mov
fistps
fiadds
pop
sub
xchg
xor
mov
push
sbb
loopne
outsb
adc
insl
cmp
adc
stc
jmp
ficoms
mov
dec
or
and
or
fbld
jno
mov
or
ficompl
adcb
jno
xchg
das
inc
mov
hlt
add
cwtl
push
lahf
adc
daa
fwait
push
divl
adc
inc
rolb
push
scas
in
inc
rcl
adc
xlat
lahf
outsl
or
adc
xchg
out
and
sub
cmc
iret
out
inc
test
out
fisubrl
jp
add
push
dec
push
pop
mov
fldt
mov
xor
shll
dec
xchg
notb
xor
xlat
rclb
lods
mov
fsubrl
pop
and
xchg
mov
cmpsb
dec
adc
mov
nop
ret
movsl
and
lds
jb
mov
xchg
shlb
or
enter
xchg
aad
loop
xchg
icebp
fnstenv
lods
cmp
je
xor
sub
mov
dec
clc
in
sbb
inc
xor
dec
inc
sub
imul
add
cmp
push
and
push
mov
pop
mov
mov
cmp
push
push
lea
fstl
fsts
loope
add
sub
jae
xor
enter
inc
mov
or
mov
push
sbb
ret
inc
xchg
jge
in
scas
sbb
dec
dec
data16
leave
xchg
test
mov
push
jno
xor
ja
popa
bound
dec
or
hlt
push
ds
xor
jo
and
bound
mov
jno
loop
fldl
icebp
adc
test
aam
inc
js
xchg
xchg
aam
add
jae
fistl
or
pop
sti
fsubp
pop
dec
rcrb
or
jl
in
push
sbb
popa
pop
stc
cmp
xor
dec
scas
xabort
rol
inc
push
push
sub
jb
push
push
cs
sbb
push
scas
aaa
jne
mov
test
dec
inc
sub
mov
mov
lret
push
adc
sbb
gs
sbb
cmp
aad
push
test
or
jmp
and
push
mov
inc
loop
push
xor
dec
dec
enter
das
xchg
jne
pop
xchg
cmp
inc
cld
test
add
jge
push
notb
call
adc
add
ret
andb
test
mov
gs
mov
or
mov
adc
xchg
or
cmpsl
jge
aad
sub
repz
hlt
jbe
loope
jmp
add
mov
cmp
mov
orb
xchg
add
loop
mov
out
sub
movsb
add
popf
cltd
dec
movsl
loop
xor
in
push
mov
pop
cld
xchg
cmc
test
aad
in
xor
popf
stc
daa
or
popa
adc
icebp
xchg
es
idivl
dec
xchg
and
sbb
jb
or
dec
push
or
jb
data16
cmpsb
out
push
jae
imul
mov
test
lds
sub
loope
or
dec
xchg
add
out
outsb
mov
nop
rcll
addb
mov
rcll
std
lret
add
das
mov
fdivrl
int
into
inc
jle
pop
push
es
cmc
mov
push
idivl
mov
in
call
pop
jle
pop
fcoml
outsl
dec
push
adc
mov
scas
sahf
ljmp
fwait
xor
push
lea
inc
popa
mov
insb
or
subb
push
xchg
loopne
popa
sti
out
add
or
repz
movsl
roll
add
stos
sbb
outsl
nop
leave
xchg
aas
mov
call
jecxz
adcl
add
or
cmp
add
js
lds
push
shrl
cmp
sbbb
or
arpl
pop
xor
int
add
mov
pop
jl
fidivrl
lahf
jmp
and
mov
mov
or
std
out
fucomip
aas
mov
cld
mov
push
stos
push
push
out
cli
inc
xchg
in
jl
loop
nop
shll
xchg
pop
loop
adc
sbb
cmp
daa
xor
push
and
scas
and
clc
fcompl
jbe
cmp
in
cmp
xchg
orl
fcoml
jg
mov
mov
mov
mov
rolb
cmp
iret
adc
jecxz
or
dec
add
jmp
popa
push
or
ficoms
jae
fists
jae
inc
stos
jne
dec
and
jg
mov
pop
push
ror
mov
outsl
xchg
lcall
cmp
sub
je
xchg
lea
inc
adc
mov
dec
jl
rorb
out
jle
loope
dec
xor
xor
mov
loopne
cltd
jge
push
jno
scas
and
test
ret
fstl
jno
cmp
rorl
or
sub
test
and
dec
bound
sbb
inc
or
or
das
cmp
ret
adc
pop
out
sbb
pusha
lret
sub
add
cmp
cmp
add
xchg
fnsave
cltd
out
push
dec
add
mov
lea
jge
ret
popf
lea
aaa
or
inc
daa
mov
xchg
movb
inc
cmpsb
pop
pop
lds
xor
mov
lods
call
cmpsb
jmp
jg
imul
pop
cmp
out
xor
mov
or
js
push
inc
xor
push
add
inc
or
iret
or
adc
or
and
jno
in
inc
adc
inc
or
leave
ds
iret
adc
jg
sub
jno
adc
push
push
cmpsl
or
and
icebp
sbb
dec
jne
dec
add
and
xchg
das
lahf
xor
lds
stc
mov
mov
dec
jecxz
pop
inc
xchg
mov
popf
cmp
jp
sub
unpcklps
or
push
mov
insl
push
fs
sub
mov
pop
jl
inc
cmp
in
jg
loope
xchg
and
cmp
push
and
dec
dec
enter
mov
shlb
inc
jmp
inc
popa
cld
fmul
shr
and
mov
lods
popf
sbb
sbb
mov
fcoml
and
mov
roll
popa
sti
imul
adc
jl
or
fidivs
push
outsl
popa
dec
pop
pop
push
xchg
xchg
add
cltd
nop
xor
push
aaa
or
sub
jae
push
mov
mov
iret
cmp
aam
shl
and
iret
dec
pop
outsl
leave
pushl
xchg
insl
jo
cmp
and
rorb
daa
ja
call
sub
mov
sti
mov
fstpl
cmpsb
cmpsb
data16
jecxz
loope
clc
jno
mov
xchg
sbb
iret
cmp
mov
lahf
popl
fidivs
xor
ret
adc
inc
out
sub
xchg
nop
repz
inc
push
leave
sub
lea
ss
and
out
movb
or
and
cmp
add
sbb
jge
imul
loop
mov
lahf
addr16
inc
cmp
lcall
jmp
add
jle
into
ja
mov
test
repz
ljmp
cmp
in
cmp
shlb
or
cmc
loope
shl
dec
cmp
sarl
test
clc
sub
dec
inc
cmc
or
adc
lea
div
and
push
std
sarl
iret
dec
test
or
lcall
adc
push
push
mov
sub
mov
mov
mov
mov
mov
js
or
sub
push
and
lea
jo
enter
push
pop
les
lods
xchg
aad
stc
xchg
jns
jbe
jg
jl
jo
or
cld
sbb
imul
dec
lret
or
push
test
scas
inc
or
mov
pusha
jo
or
xchg
jmp
loopne
mov
jl
sbb
ret
and
bound
xor
pop
pop
ds
jbe
es
mov
lods
lds
pop
mov
mov
imul
out
pop
jne
repz
lods
pop
cmp
xlat
pop
or
lds
sub
subl
divl
icebp
push
int3
aaa
icebp
lea
cmp
jecxz
mov
in
pop
mulb
clc
mov
mov
inc
jb
lret
idiv
outsl
or
fildll
lret
jecxz
cmc
fdiv
out
imul
repnz
mov
lds
pop
or
scas
mov
insl
mov
and
inc
jo
dec
push
in
add
jle
lahf
movsb
ficoms
ret
cltd
xchg
jb
lahf
sbb
notb
mov
inc
mov
mov
mov
scas
xchg
adc
jmp
lods
lds
stos
adc
xchg
cmp
call
pop
lds
das
shlb
dec
lods
adc
and
orb
fadds
fs
dec
adc
jle
ljmp
shlb
add
out
add
loopne
or
daa
sbb
xorl
push
sbbl
mov
out
shlb
movsb
stos
or
push
orl
nop
ds
mov
rcr
pushf
loope
lea
xor
sub
pop
mov
loopne
loope
xor
mov
and
inc
or
ds
push
insl
dec
cs
enter
ftst
out
mov
cld
inc
aam
xor
mov
push
leave
pop
lret
mov
mov
mov
sbb
dec
jl
jns
dec
jns
or
push
sbb
mov
adc
xchg
mov
push
rcll
pop
clc
stc
add
inc
jae
cmpsb
fnstcw
jle
jmp
jb
sub
xlat
lahf
adc
mov
xor
pushf
sbb
mov
mov
sbb
dec
xor
imul
cmp
mov
inc
dec
call
jmp
fldl
jno
cmp
pop
mov
mov
pop
push
popf
sub
lds
dec
jge
ja
aaa
imul
mov
adc
adc
cld
fdivl
adc
push
xchg
mov
jbe
sub
rcll
addr16
mov
cmp
pop
inc
pcmpeqw
jo
gs
dec
pop
push
or
aam
std
add
dec
das
loopne
out
add
inc
jne
mov
leave
xor
push
push
andl
or
imul
push
jo
fisubl
pusha
push
fistl
lret
push
sbb
mov
movsb
mov
mov
pushl
adc
lods
les
movsl
aam
test
jbe
mov
inc
push
ret
mov
fs
jmp
pop
fwait
popa
sbb
xchg
int
inc
rclb
inc
enter
pop
jne
ret
cld
dec
pop
stc
pop
inc
mov
movsb
ss
push
sbb
fwait
aad
mov
adc
or
lcall
out
sub
imul
shrl
pop
pop
fildl
pop
jne
dec
clc
and
aam
dec
push
inc
inc
inc
pusha
add
cs
js
and
push
mov
loop
hlt
add
and
sub
inc
sarb
mov
jae
icebp
mov
lock
mov
loope
stc
sbb
clc
adc
or
pop
lea
in
xchg
jo
dec
push
icebp
jecxz
xor
push
das
jne
add
lock
jg
lods
insb
mov
js
test
xchg
sti
dec
cmp
or
out
sbb
mov
lahf
push
cmp
mov
add
mov
dec
add
push
outsl
mov
push
jne
xor
int3
test
xchg
adc
inc
dec
jl
in
sub
shrb
cli
fsts
and
mov
push
jb
outsl
repz
push
pop
dec
pop
pop
and
dec
outsb
fildl
incl
aam
and
and
or
insb
cmp
jge
sub
hlt
lea
push
cmp
jecxz
lea
mov
push
cltd
scas
lea
fstpl
push
push
mov
cmp
pop
call
ret
testb
call
fld1
cmp
xor
repz
sub
lods
jecxz
sub
lds
mov
adc
cli
xorl
lcall
cs
jae
mov
mov
pop
lods
jg
jne
dec
add
test
test
push
lahf
dec
and
push
jge
and
mov
fnstsw
xor
outsl
das
out
sbb
fsubr
and
sti
mov
mov
dec
cmp
fdivrl
jmp
mov
xchg
xor
xor
cld
or
jbe
pop
pop
loope
xor
adc
dec
adc
xchg
jo
push
fwait
mov
test
fcompl
xchg
lahf
rorl
dec
hlt
xchg
push
leave
das
jno
std
jnp
enter
add
fsin
jno
pop
push
and
shlb
add
cltd
sub
inc
mov
clc
sbb
mov
stos
dec
push
dec
in
cmp
outsb
das
add
sbb
popa
lret
addr16
adc
jl
in
add
fstpt
cmpsl
push
mov
mov
shrb
dec
subl
push
mov
adc
pop
pop
ja
or
and
push
xor
repnz
addr16
pop
rcr
cmc
jae
cmp
sub
jo,pt
test
mov
rolb
repnz
in
adc
fistpll
ja
scas
fisttpll
icebp
popf
leave
and
in
addr16
popf
fsubrl
test
sbb
ja
adc
push
out
sbb
push
in
xlat
pushf
lahf
aam
push
lds
fildll
lret
mov
push
cwtl
mov
jle
loop
mov
nop
xor
push
lea
in
cmp
and
mov
pop
addb
dec
fiaddl
jno
call
add
adc
aam
xchg
xchg
pop
lock
xorl
mov
aas
cmp
jle
mov
in
push
push
pop
arpl
lcall
test
dec
cmp
mov
jb
mov
std
in
stos
push
push
jl
adc
cld
jmp
lret
fdivrl
mov
stos
movsb
push
mov
out
mov
ror
adc
cmp
loop
imul
pop
leave
push
call
movsl
idivl
xorb
push
and
xor
mov
mov
shlb
fistl
sub
xlat
dec
in
clc
in
sub
ret
fs
inc
shrl
sub
mov
mov
sub
ret
data16
adcl
or
orl
int3
jae
stc
mov
in
dec
inc
shrl
add
sub
pop
cmp
mov
mov
xchg
notl
cmp
sub
ja
dec
jge
xor
pusha
enter
call
add
addl
xor
dec
inc
icebp
mov
jb
idiv
mov
mov
fcoms
mov
pop
lret
lds
fwait
insb
adc
sub
out
in
pop
mov
or
andl
shlb
push
cmp
popa
jae
xor
rcl
nop
pop
jo
cmp
mov
cwtl
pop
fwait
ret
loopne
movsb
aad
cld
je
mov
inc
fisttpll
push
sbb
fs
lds
imul
rol
mov
adc
or
xchg
in
ror
stc
js
cmc
hlt
scas
fwait
mov
das
add
cmc
cmpb
in
xchg
and
mov
daa
push
popa
imul
add
cwtl
mov
jne
xchg
jnp
adc
jb
push
xlat
out
fdivrs
ret
mov
hlt
stos
cwtl
stc
xor
push
dec
pop
icebp
push
call
not
lret
jnp
sub
gs
lcall
in
xchg
mov
adc
fldcw
ret
pop
mov
pop
popa
and
call
mov
adc
lea
jmp
pop
cs
jno
ljmp
dec
mov
mov
cmp
and
mov
cmpl
mov
popf
repz
xor
lods
sbb
and
or
sbb
mov
cmp
pop
testb
lods
ret
or
pop
scas
dec
test
shll
fwait
in
cmpb
aam
cmp
xchg
inc
iret
or
cli
daa
add
xchg
sti
pop
mov
pop
and
sub
jno
mull
pop
addr16
mov
daa
and
call
nop
dec
adc
adc
loopne
jge
adc
adc
ja
or
xchg
inc
pop
das
stos
popa
or
mov
sub
data16
daa
movsb
push
aaa
imul
sti
ficomps
xchg
adc
aam
sbb
dec
out
cmc
out
inc
in
shlb
add
push
call
std
flds
adc
out
or
pop
dec
or
ret
push
ja
jge
dec
loope
imul
mov
decb
pop
xchg
mov
call
stc
add
movsb
mov
jl
test
les
push
cld
inc
add
push
loopne
in
push
aas
mov
lds
xor
jnp
xchg
loopne
jmp
adcb
stos
jno
daa
pop
stc
mov
lcall
movsl
push
mov
cmp
stos
arpl
in
add
fnstenv
pop
movsb
je
bswap
movsl
subl
lock
std
and
and
xchg
and
enter
aam
adc
sub
es
xchg
jbe
pop
mov
mov
push
add
clc
fimuls
cld
lret
jae
mov
movsl
lods
jecxz
sub
movsl
cwtl
add
push
or
jae
out
scas
popf
push
icebp
inc
test
dec
insb
sbb
cmpsb
imul
dec
mov
cs
cmp
pop
test
xor
int
mov
aam
loope
rolb
out
rcll
mov
js
mov
fldcw
and
lods
push
sbb
dec
sarb
dec
push
call
and
das
mov
xchg
inc
test
stos
repz
or
daa
push
aad
movsb
dec
das
lret
inc
mov
cltd
xchg
push
mov
es
int
out
xorl
stos
jb
push
sub
mov
ja
inc
mov
outsl
sbb
jle
xor
mov
adc
cmp
shl
out
mov
mov
cmp
pop
sub
inc
mov
ret
jmp
and
ret
cli
cmc
adc
add
xchg
jo
cmpsl
arpl
jo
pop
std
cwtl
movsb
pop
leave
out
pop
push
fwait
pop
push
ss
push
push
adc
and
and
sahf
xor
push
movsb
fchs
jb
and
and
stos
jle
out
mov
loope
sbb
mov
xor
stos
push
loopne
pop
in
scas
fcmovu
cmc
push
call
adc
push
xor
xchg
cmc
xchg
sbb
jb
mov
int3
cwtl
push
cmp
jo
inc
add
push
xorb
outsl
and
out
and
aam
lock
xor
call
fcoms
push
xchg
dec
hlt
adc
mov
inc
lea
push
mov
aam
pop
sub
das
int
lret
cmp
sub
sbb
push
std
push
popa
sbb
aam
ss
fisubl
push
sub
jbe
or
pop
xor
or
push
xchg
jb
cmp
sti
fs
icebp
cmp
fildll
push
cs
shll
add
js
xchg
mov
stos
lret
iret
cmp
movsl
loope
sub
sub
or
arpl
aam
or
dec
adc
outsb
decb
xor
lea
loopne
mov
jecxz
cld
pop
arpl
adc
xor
mov
adc
das
movsb
aam
pop
lods
int
mov
inc
mov
xor
xor
pusha
dec
cltd
mov
dec
je
pop
adc
sbb
dec
ljmp
inc
pop
rorb
mov
jae
mov
test
pop
mov
push
dec
dec
fbld
shll
dec
repnz
leave
cmp
mov
test
in
loop
pshufw
inc
inc
sbb
cmp
inc
test
movsl
test
sub
mov
out
call
or
je
or
sbb
or
mov
sub
adc
in
jne
rorl
nop
sti
mov
cs
sub
inc
fnstcw
cmp
cwtl
push
scas
push
ficoms
in
lea
cmp
das
in
stos
add
push
push
popa
out
scas
fs
sbb
call
cmpsl
dec
std
test
repz
xor
rclb
sub
cmpsl
adc
aaa
ficoml
cmp
jae
jb
push
push
fwait
xor
adc
shlb
inc
int3
bound
repz
xchg
lea
out
or
jle
mov
cmpsl
dec
push
push
lods
mov
dec
mov
inc
arpl
outsb
dec
imull
mov
pop
out
les
or
repnz
mov
sahf
loopne
test
xchg
ds
sub
leave
xchg
call
ret
test
rorl
mov
movsl
lock
dec
popf
stos
lret
push
dec
outsl
dec
adc
call
out
dec
daa
sbb
xchg
jmp
out
or
push
and
andl
cmp
gs
cltd
fldl2t
stos
push
stos
dec
jb
call
decl
mov
jbe
jb
inc
adcb
mov
fstps
testb
xchg
mov
int3
cmp
outsb
push
movsb
lcall
xor
dec
outsl
daa
add
outsl
pop
lea
xchg
leave
xor
mov
testl
mov
stc
push
pop
or
adc
mov
xchg
sub
jbe
push
mov
daa
call
and
add
cwtl
sub
lds
lret
mov
outsl
xorb
push
mov
subb
cmc
pop
imul
adc
lea
push
pop
inc
sti
ss
push
mov
mov
shlb
sbb
mov
ja
mov
das
dec
dec
cwtl
adc
repnz
inc
sub
lret
dec
dec
into
aas
dec
push
or
sbbl
and
push
dec
inc
sbb
shll
jp
jno
jle
fsubl
pushf
and
mov
push
fmulp
subb
mov
aad
or
adc
push
dec
testb
shrb
push
daa
adc
xchg
sahf
ja
xor
scas
mov
sub
mov
fs
divl
mov
fnstenv
xorb
sub
lret
adc
lahf
daa
out
std
lods
lods
and
jmp
popa
and
add
cmp
xchg
push
pop
mov
and
daa
adc
cmc
icebp
sti
aas
dec
lods
cmp
mov
push
dec
fs
sbbl
testb
lret
add
mov
mov
add
mov
stos
pop
jg
pop
push
mov
xchg
sub
sti
inc
nop
sub
stc
gs
ja
negb
sti
aad
xchg
std
faddp
cltd
mov
mov
jne
mov
push
hlt
jo
pusha
or
sbb
mov
gs
nop
arpl
mov
shr
call
in
in
cmp
add
or
pop
add
push
mov
push
pop
push
or
jp
inc
mov
add
dec
aad
iret
int3
aaa
rclb
dec
jbe
and
push
pop
pop
jbe
aaa
xor
fstp
mov
cmpsl
jne
mov
jnp
and
icebp
iret
aad
stc
inc
sub
test
and
jmp
xchg
mov
pop
mov
cmp
sub
roll
mov
pop
dec
clc
mov
xchg
idivl
stc
hlt
xlat
mov
jp
jecxz
int
addr16
mov
and
dec
mov
pop
mov
mov
xchg
or
mov
jle
inc
mov
sahf
inc
inc
xchg
inc
outsl
pushl
repnz
out
cmpb
or
jmp
stc
push
pop
int3
mov
lods
sbb
or
mov
lret
pop
mov
data16
imul
xchg
jno
mov
mov
sarl
in
sub
or
dec
and
add
adc
and
je
nop
popf
add
dec
shll
aas
das
fwait
jne
ds
mov
cs
pop
leave
fisttpll
push
and
and
fsubrs
xor
pop
sti
xchg
ficomps
stos
cmc
stc
jae
inc
scas
dec
jmp
test
pop
or
in
scas
bound
repz
es
rcl
cld
mov
aaa
jns
clc
stos
mov
in
fdivs
push
aas
push
cmpsl
fld1
movsb
scas
inc
sbb
inc
jp
repz
jb
scas
popf
cmp
jp
js
jb
int3
stc
fmul
mov
imul
dec
lods
jge
std
mov
inc
pop
adc
shl
xlat
or
and
and
mov
or
sbb
es
dec
inc
sti
dec
dec
int
xor
cs
pop
sub
nop
lods
jle
push
inc
xor
or
sbb
pop
push
mov
daa
in
in
sub
lret
lret
into
xchg
pop
mov
jl
and
fs
out
fsubl
fnstsw
mov
jg
dec
mov
es
inc
xor
jle
cmp
and
int
mov
and
jb
fldl
jmp
sbb
call
and
inc
add
nop
cmpsb
lods
test
jg
icebp
mov
dec
mov
jecxz
scas
pop
fcmovnb
fldenv
lcall
pop
xchg
dec
cltd
insb
iret
loope
clc
rorl
pusha
and
pop
pusha
mov
xchg
and
stc
mov
js
mov
jnp
pop
pop
push
dec
or
dec
mov
sti
iret
xorb
mov
into
sahf
and
fimuls
int
xchg
add
or
loop
das
test
add
cltd
mov
adc
shl
dec
cmp
cmp
cli
stos
mov
jae
popf
shlb
mov
inc
adc
push
mov
inc
in
xchg
aad
js
in
mov
cmp
call
dec
adc
imul
push
xchg
dec
add
test
and
mov
xchg
daa
hlt
rol
cli
mov
cld
push
pop
push
mov
imul
rol
adc
lock
add
cmpsb
loope
repz
fcmove
in
call
cwtl
jo
mov
leave
stc
mov
les
xchg
shrb
stc
xchg
test
adc
repz
push
lea
add
push
inc
dec
aaa
pop
cmp
mov
divb
dec
dec
test
js
icebp
int
add
inc
xor
mov
push
mov
nop
jnp
cld
scas
push
jo
jmp
xchg
hlt
or
outsl
mov
outsl
push
mov
jp
fidivrs
or
movb
fucomi
and
xchg
pop
test
sbb
lea
and
mov
xor
mov
jne
lods
mov
and
outsb
int
and
xchg
cmp
push
out
mov
jne
xor
bound
test
mov
cmp
test
fldz
sbb
test
cltd
dec
shrl
mov
pop
add
mov
cld
jmp
xor
test
es
mov
lret
scas
or
icebp
mov
in
and
push
xor
ret
fnstsw
inc
dec
popf
arpl
mov
xchg
sub
ds
and
inc
je
call
mov
js
sub
dec
xor
mov
pop
push
sbb
pop
pop
mov
xor
dec
das
adcb
gs
pop
adc
sub
push
jno
push
cmp
sub
pushf
sub
sbbb
icebp
test
pop
mov
es
push
sar
negb
lods
mov
idivb
cmp
divb
fs
sub
filds
int3
in
push
hlt
cmp
gs
enter
shrl
dec
lds
test
push
cmp
call
stos
pushf
fisubs
jno
xor
jge
loopne
xor
int
into
xchg
adc
dec
add
in
add
add
lahf
push
sub
clc
jge
mov
test
push
and
mov
je
pop
sub
bound
mov
test
mov
test
cmp
std
out
inc
adc
jl
cmp
dec
dec
add
pop
mov
and
in
push
xchg
inc
call
cmp
xor
into
nop
popf
in
xchg
orl
sti
nop
push
insl
mov
mov
pop
hlt
jns
in
sbbl
fisubl
je
mov
jg
push
cmp
dec
cld
data16
sub
cld
adc
push
push
lds
add
orb
sbb
and
and
push
mov
loope
push
dec
jns
dec
ret
in
sahf
sub
or
sbb
lods
mov
inc
sbb
and
ret
rcrl
test
out
add
dec
add
out
std
out
and
outsl
imul
ret
ja
cmpsl
mov
sub
mov
mov
cmpsl
mov
add
xor
push
enter
rcrl
xchg
aad
xchg
cltd
cmp
pop
movsw
cmp
mov
pop
sti
out
cs
ja
aas
inc
cmp
aam
sbb
lods
push
sbb
cmc
popa
cld
mov
loope
inc
cld
xchg
mov
or
and
push
call
mov
xchg
push
scas
in
aas
lock
sub
std
push
repz
jmp
sub
movsl
test
enter
ds
loop
ds
mov
gs
leave
mov
mov
into
jecxz
pop
sbb
pusha
pop
or
rorl
or
jbe
and
fldenv
shll
inc
mov
sbb
or
mov
into
add
add
xchg
mov
or
fs
adc
ds
test
out
lods
mov
fdivl
and
daa
ret
mov
cltd
cmp
mov
dec
cmp
sbb
imul
sbb
mov
cwtl
in
pop
jns
mov
xchg
clc
push
scas
sbb
xchg
loope
in
mov
pop
cmp
inc
lea
mov
jne
adc
xor
push
sub
test
inc
arpl
lret
enter
and
aaa
call
cld
cmc
jbe
rcrb
pop
push
mov
fmull
sbb
les
dec
push
test
in
call
adc
add
int
or
repz
nop
cmp
mov
or
mov
and
mov
xchg
int3
jno
test
pop
cltd
lock
jae
add
subb
pop
aaa
xor
adc
in
pop
nop
loope
rol
lds
mov
sbb
aad
xor
cltd
adc
rcll
lahf
adc
fimuls
je
dec
cmp
xor
adc
je
or
mov
and
fwait
pushf
inc
xor
js
das
pushf
xchg
lret
in
inc
test
jnp
jle
lock
out
xor
fdivrs
stos
push
jnp
cli
negb
ljmp
adcl
iret
mov
ficoms
xlat
scas
sbb
fst
popa
push
jge
cmc
out
out
or
push
mov
xchg
or
es
xor
jp
cmp
dec
sbb
js
xor
scas
fwait
sar
sti
xchg
push
les
add
jge
dec
repz
or
push
out
jg
xchg
inc
xchg
icebp
gs
jae
int
testb
in
mov
pop
lods
rolb
shld
clc
mov
div
es
out
xchg
mov
xchg
dec
inc
rcrl
inc
aaa
daa
mov
ret
adc
mov
leave
cmp
inc
fs
stos
movsl
stos
xor
sbb
shlb
xchg
sub
cli
push
aad
psubusb
pop
sti
dec
adc
mov
cmp
sub
mov
dec
mov
stc
push
sub
adc
aaa
incl
cmovg
cmc
aad
stos
ss
and
add
pop
push
stos
dec
lea
push
add
sub
leave
frstor
sub
jns
outsb
push
adc
es
cmp
in
test
pop
and
pop
jge
imul
xor
or
cmpsb
fsubs
clc
sbb
fimull
inc
clc
repnz
xor
sub
push
push
mov
xor
mov
dec
dec
push
push
mov
testb
imul
pop
fdivrs
arpl
and
mov
stc
inc
movl
xor
jno
xchg
dec
sub
js
or
or
xchg
jbe
and
inc
xor
mov
aaa
test
sub
fsubrl
xlat
or
pop
mov
test
jmp
rorl
jbe
cltd
nop
cld
mov
or
jns
mov
fs
call
movsl
xchg
test
xchg
cmp
adc
dec
sar
aaa
test
sub
cmp
push
adc
sbb
sbb
xor
cwtl
and
jle
inc
test
mov
je
xor
adc
movsl
cmp
mov
call
and
sbb
das
loop
pop
mov
pop
call
jp
stos
or
inc
adcb
cmp
mov
or
sub
fmull
call
lahf
inc
sbb
ret
nop
dec
xchg
jl
sbb
cmpsb
mov
pusha
jp
pop
jp
mov
push
movsb
mov
adc
out
ds
push
inc
xchg
pop
aam
pop
or
cmp
movsl
out
icebp
in
or
mov
ret
cmp
pop
adc
sar
adc
jbe
ror
out
pushf
ljmp
pop
inc
add
fildl
adc
sbb
dec
inc
mov
inc
xor
dec
push
arpl
pop
scas
movsl
icebp
out
je
popl
ja
xchg
or
movb
mov
stos
sub
jl
mov
jp
shll
iret
ljmp
jo
cmp
add
adc
scas
adc
xlat
ret
test
jb
mov
shlb
sub
in
dec
mov
xchg
insb
ja
inc
addr16
add
es
dec
fsubp
sbb
push
ret
adc
cwtl
jle
xor
xchg
xchg
pop
cltd
push
mov
sahf
mov
mov
add
and
lahf
fbld
out
cmp
mov
inc
rcrb
int3
test
inc
jle
pop
vphaddwq
loopne
popf
stc
cmp
xor
jno
jg
repnz
je
push
sbb
xor
push
mov
pop
mov
dec
fildl
imul
add
daa
es
lds
or
movsl
les
push
ja
push
mov
pop
push
jmp
dec
aam
xchg
outsl
mov
xchg
mov
push
popa
dec
mov
icebp
in
out
cmp
arpl
and
pushf
inc
dec
jg
fs
cmpsl
sub
mov
inc
sbb
add
jb
push
ret
or
jl
dec
int3
mov
push
xchg
outsl
lcall
xchg
lods
mov
mov
es
outsl
push
jmp
or
pop
in
jp
popa
cmp
add
fwait
icebp
jo
pop
or
cmpb
lahf
jp
insl
lds
int3
test
testb
outsb
jmp
loop
mov
shl
popa
cmpsb
stc
lret
dec
iret
push
mov
mov
sbb
jmp
mov
push
icebp
or
inc
jo
push
enter
jg
xorl
in
adc
fnstcw
push
and
add
mov
inc
es
loop
xchg
std
mov
jo
mov
repz
int3
xchg
roll
pop
mov
adc
xchg
jmp
ret
jmp
mov
mov
xchg
xchg
shll
or
mov
pop
mov
mov
test
aad
add
sbb
jg
inc
scas
xchg
outsb
and
pusha
push
outsl
ret
push
testl
xor
das
cmp
les
test
xchg
mov
call
call
cmp
in
std
mov
imul
loope
shlb
push
mov
sarl
mov
loop
push
pusha
push
outsl
ss
aaa
xor
mov
cwtl
mov
sbb
jne
repnz
push
push
push
test
jno
arpl
push
sbb
inc
seta
in
scas
xor
fdivrs
bound
ss
push
or
mov
jl
sub
xor
dec
lcall
xchg
cmpsl
lock
std
lahf
clc
adcl
jnp
jnp
out
xorl
xor
adc
xor
fcmovu
add
pushf
es
dec
and
aaa
daa
mov
lds
pop
cld
cmp
lds
lods
pop
and
adc
movsl
movsb
push
or
jg
push
push
call
es
xlat
cltd
mov
imul
fisubs
and
jmp
push
xchg
xor
add
adc
enter
mov
sub
in
pop
sub
pusha
sbb
or
cmpl
lret
decb
mov
movsb
outsb
adc
lea
enter
es
xsave
scas
nop
scas
test
sub
out
test
mov
sbb
and
repnz
into
push
dec
nop
and
mov
movsl
pop
int
addr16
inc
and
pop
inc
add
movsl
addr16
adc
mov
je
enter
xor
mov
dec
jae
sahf
and
hlt
scas
into
aas
orl
imul
pop
cli
fsub
popa
jmp
loopne
inc
or
aam
xchg
stc
iret
popf
addr16
mov
adc
outsb
addr16
insl
stos
call
aad
std
mov
or
push
iret
mov
xor
mov
pop
test
int
jno
stos
loopne
aaa
lret
and
jecxz
cmpsb
or
es
je
insl
mov
mov
jecxz
xor
jne
jb
cmp
imul
sbb
call
mov
inc
fwait
mov
adc
dec
fnstcw
mov
insl
push
dec
std
adc
test
push
pop
jl
sub
xchg
flds
iret
mov
pop
shrl
xchg
lcall
lods
cmp
xor
call
and
mov
pop
adc
hlt
stos
jmp
in
stos
mov
sub
clc
mov
jb
or
inc
mov
inc
adc
adc
push
push
cli
xor
and
xor
movsb
mov
pop
mov
ror
xchg
repnz
and
mov
dec
push
pop
mov
pop
adc
push
dec
fs
adc
fsubrl
jge
mov
jmp
aas
push
out
mov
jno
xor
ds
pop
pop
sbb
int
lock
fs
cmp
les
shll
xchg
xor
out
iret
mov
jl
loop
xor
not
loopne
mov
pusha
lret
test
pop
cmpsb
les
xchg
pop
pop
add
xchg
stos
ja
or
jp
xchg
or
popf
test
jg
cli
jmp
roll
clc
lock
mov
cli
mov
sbb
repz
push
sbb
xor
fdivs
cmp
aaa
push
stos
aam
mov
scas
pop
jnp
call
aam
mov
mov
sub
arpl
outsb
lcall
sbb
cmpsl
jmp
les
or
rolw
add
loope
dec
push
rcrb
add
mov
les
push
jmp
mov
aas
xor
mov
ja
inc
and
sub
call
mov
stc
push
pushf
shll
pop
int
sub
mov
mov
stc
push
xor
xchg
or
inc
jb
sahf
jecxz
add
mov
or
pop
xlat
inc
ds
cli
xor
mov
icebp
mov
aad
adcb
or
test
mov
mov
das
pushf
add
sbb
js
mov
lods
pop
shlb
inc
hlt
dec
sbb
rcl
xchg
loop
in
test
pop
jmp
pop
cwtl
insl
cmp
add
daa
stc
mov
and
inc
setno
movl
test
dec
ficoml
mov
add
leave
inc
xor
xchg
lods
aaa
fcom
add
divl
movsb
lods
test
jl
decb
out
mov
mov
lods
pop
nop
or
cmpsl
fsubp
sbb
pop
out
lds
repz
mov
bound
mov
loope
lret
test
add
fsubrl
push
add
push
outsb
adc
mov
ror
bound
and
outsl
sbb
dec
xchg
mov
sbb
rcl
sbb
mov
ret
int
rolb
idivb
jmp
in
mov
push
rcll
pop
inc
sbb
lcall
sbb
push
add
cmpsl
dec
or
xor
rclb
sub
cmp
xor
dec
and
jmp
mov
insb
push
out
arpl
and
dec
dec
adc
ficoms
daa
xchg
test
xchg
fisttpl
std
int
push
mov
push
loopne
jns
mov
pop
pop
aad
imul
leave
aaa
mov
cmc
sbb
or
fs
sub
and
sub
ficomps
loopne
cmp
add
cmc
in
sub
in
push
popf
adc
and
xchg
les
and
es
movsb
cmpsb
cld
sub
xor
sbb
and
imul
fists
lcall
mov
int
mov
test
or
in
popf
sub
insb
sbb
xchg
cmp
sbb
pop
or
testl
or
movsl
push
mov
ret
sbb
mov
je
daa
movsb
cmp
push
lods
cmp
adc
xchg
adc
andl
cmp
xor
xor
jl
mov
inc
or
lcall
cmp
lea
xchg
leave
jnp
mov
or
or
test
or
xchg
or
cltd
adc
loopne
jecxz
imul
popf
mov
sub
fnstcw
test
or
xor
or
imul
test
pop
push
rolb
cli
xlat
mov
xchg
andl
out
gs
dec
addr16
push
cwtl
xor
adc
sbb
imul
daa
andb
cmpsb
cmp
mov
adc
hlt
clc
pop
fidivl
push
or
aad
stc
adc
scas
int3
ja
enterw
rorl
xor
xor
adc
adc
pushf
movsb
add
mov
stc
sub
add
pushf
sub
stc
ret
xchg
lcall
aad
subl
shll
sub
add
mov
and
cmp
and
add
sub
mov
test
lea
hlt
inc
inc
clc
push
mov
sub
mov
sbb
mov
xchg
and
ljmp
pop
shrb
xor
out
aam
xor
mov
mov
jb
inc
call
scas
imul
sbb
sbb
popf
imul
mov
cmp
push
xchg
sub
cmpl
dec
hlt
ja
mov
cmc
leave
in
fs
imul
mov
in
shrb
xchg
leave
jmp
mov
adc
insl
in
loop
sbb
cmp
xchg
inc
sbb
loop
cmp
push
mov
jnp
or
sbb
enter
inc
dec
mov
js
jg
lcall
dec
cmp
mov
cmp
hlt
out
fmuls
xchg
leave
dec
in
cmp
cli
add
ljmp
xchg
sub
jl
add
and
inc
sub
dec
and
gs
nop
mov
movsl
dec
sbbb
or
aaa
movsb
jle
inc
and
sub
push
or
sub
or
pop
adc
adc
xchg
sbb
inc
js
cmp
cmp
test
sub
or
in
adc
test
push
mov
and
in
adc
test
or
xor
in
addr16
adc
cmp
popf
sub
adc
and
xchg
shll
push
imul
insl
mov
dec
fisttpll
sbb
mov
fdivrs
outsl
fisubl
or
sbb
and
and
dec
adc
xchg
ja
add
or
xchg
sub
mov
stc
cmpsl
pop
leave
jo
jmp
dec
sbb
testb
mov
jmp
mov
cmpsb
sti
mov
and
xchg
orl
jns
fwait
xchg
sub
frstor
sub
fldt
idivl
outsb
pop
xor
mov
or
test
adc
or
mov
mov
and
push
adc
adc
inc
and
sub
out
push
and
insl
or
mov
adc
popf
sub
push
fldt
aad
mov
mov
dec
cmp
or
inc
imul
mov
decl
sahf
stc
out
xchg
lret
mov
push
mov
rcrb
mov
and
mov
mov
and
push
lret
xor
mov
lods
fildl
inc
test
ja
push
shrl
or
sub
or
mov
pop
xchg
and
mov
xor
sbb
pop
sbb
and
inc
fs
inc
mov
sub
sub
cmp
into
dec
mov
gs
cwtl
xchg
cmp
cmc
mov
mov
xchg
test
pop
mov
jns
xor
dec
xchg
data16
mov
jmp
push
adc
lret
sti
mov
and
pop
adc
jp
sub
and
and
add
push
cmpsl
xor
and
sub
sbb
shlb
sbb
testb
out
fs
imul
mov
mov
out
ret
inc
xchg
xchg
xchg
mov
sub
pop
push
data16
jb
and
sub
and
xchg
mov
sub
dec
jg
cwtl
dec
or
ret
stc
jnp
push
jmp
mov
clc
fmuls
add
mov
pushf
push
add
test
cmp
test
lods
or
cmp
or
push
mov
cmc
lret
out
fs
imul
mov
mov
cmpsb
inc
addl
xchg
push
test
stc
mov
or
test
adc
or
mov
mov
and
push
adc
adc
inc
and
sub
out
push
mov
and
mov
sub
mov
or
cmp
aaa
pop
fwait
xor
and
add
lods
stos
add
inc
mov
aad
fsts
or
div
pop
fwait
repz
sub
cmc
not
mov
push
ja
ret
jnp
mov
xchg
mov
stc
adcl
and
lret
mov
and
dec
adc
or
jg
pop
add
push
pushl
dec
and
sbb
leave
dec
js
mov
cmp
push
fistpl
aad
mov
mov
pop
mov
push
fdiv
pop
xor
and
rorl
imul
inc
mov
aad
out
ret
lods
or
sub
or
add
or
gs
mov
mov
pop
clc
cmc
push
outsb
mov
call
imul
jecxz
mov
dec
fisttps
stc
pop
xchg
cmp
pop
mov
lahf
test
adc
mov
and
sub
push
outsl
add
mov
cli
xchg
xchg
sub
out
jmp
xchg
jmp
mov
mov
sbb
cmp
add
dec
jecxz
stc
fucom
jnp
xchg
int3
inc
jmp
insb
add
cmp
gs
lds
cwtl
dec
mov
pop
pop
or
mov
daa
ds
pop
or
in
add
mov
and
adc
jae
stos
lock
movsl
lods
add
loope
mov
dec
jnp
sar
and
fstpl
mov
arpl
sub
inc
add
adc
cmp
fldcw
cmp
mov
fdiv
jmp
or
sbb
loopne
add
lods
and
cmp
pusha
aas
lahf
add
addr16
ret
cmpsl
and
jnp
sub
and
cmp
stos
in
mov
inc
insl
push
dec
xchg
lods
sbb
ror
adc
pop
fildl
movsb
mov
insl
mov
pop
dec
int3
ret
jne
aam
add
xor
add
ret
ror
clc
and
adc
push
fs
scas
jge
movsb
les
xor
pop
das
not
jo
fsubs
sub
and
dec
sarl
fisttps
mov
mov
sbb
cmp
scas
fisubrs
dec
add
loope
sbb
lock
cmp
or
inc
loopne
sahf
mov
adc
push
jmp
adc
sti
adc
push
cs
mov
mov
push
sub
mov
sub
sahf
adc
in
bound
dec
data16
cltd
cmp
push
add
js
or
int
mov
ja
jbe
popa
sub
add
jb
jle
mov
es
xchg
mov
jp
dec
cmpsl
sbb
cmpsl
movsl
test
imul
push
push
jl
sub
mov
mov
dec
dec
cmpsb
iret
pop
sub
cmp
mov
sarb
mov
xor
ss
movsl
inc
pushw
mov
into
test
mov
sub
or
mov
pop
iret
xchg
loopne
jbe
push
mov
xlat
and
and
add
and
or
mov
push
call
adc
test
lods
aas
xchg
pop
push
ds
daa
adc
sbb
add
cmp
cmp
push
call
sub
in
inc
push
pop
jmp
adc
mov
iret
cmp
pusha
sub
push
dec
leave
shr
cmc
adc
xor
adc
les
in
mov
dec
inc
xor
cmp
pop
mov
mov
add
pop
xchg
push
adc
outsl
insl
adc
xor
mov
scas
loope
mov
sub
pop
adc
xchg
sbb
addr16
orb
jnp
dec
movsl
bswap
push
cs
rorb
jo
repnz
push
ds
pop
testl
push
pop
stc
or
and
sti
movsb
lahf
adc
xor
insl
cmpsb
xor
add
lods
mov
push
das
mov
xorl
jae
or
les
pop
xorl
ss
lods
and
outsl
mov
pop
mov
leave
mov
shr
push
movsb
lret
push
mov
jnp
ss
push
je
adc
ficompl
cmp
sbb
pop
dec
mov
pop
mov
pop
xchg
mov
cmp
cs
and
pushf
fst
push
push
add
inc
adc
add
adc
test
test
add
and
cmp
push
pop
arpl
dec
xor
adc
dec
push
push
xor
pop
pop
fcomp
push
test
xor
mov
in
das
cmp
bnd
stc
ds
fxrstor
orl
xor
add
repz
inc
push
mov
pmaxub
dec
xor
lods
xor
fldcw
add
and
add
aaa
sbb
fidivs
dec
cmp
jb
sub
movsb
mov
jl
mov
jne
cmp
icebp
xchg
adc
cli
jge
in
pushf
pop
and
fs
movsl
clc
add
sub
mov
stc
cmc
inc
dec
inc
out
ss
pop
movsb
dec
cmp
jb
cwtl
es
cmp
jo
lret
add
jae
lea
aaa
or
xor
jp
mov
dec
pusha
pop
mov
lcall
in
cmp
mov
and
mov
mov
and
mov
je
ret
shl
testl
scas
xor
fistpl
jae
ja
sub
in
test
add
pop
xor
cmp
popa
adc
cmp
push
sbb
mov
cmp
in
and
hlt
cmp
or
xor
push
loope
mov
push
out
jle
cli
in
push
rclb
xor
push
jbe
cmp
ja
mov
jg
inc
inc
sbb
shrl
mov
fsub
jb
mov
sbb
ss
lcall
jl
hlt
cwtl
out
or
xor
adc
outsl
cmc
cmp
add
movsb
jo
jge
add
inc
lock
mov
or
mov
cmp
lods
es
xor
cmp
stc
sbb
in
dec
add
or
fsts
aam
pop
arpl
adc
jmp
in
inc
xchg
sub
jo
daa
movsl
xorl
or
xor
jo
aas
add
data16
addb
fcoml
inc
test
stc
and
sbb
sbb
dec
push
gs
mov
popf
dec
fcomps
pop
jp
xor
idivb
pop
out
sbb
cmpsl
xchg
push
adc
jno
loopne
inc
jns
or
test
adc
and
fists
mov
out
out
mov
or
cmp
pop
movsl
adc
fmull
add
mov
dec
add
pop
lahf
nop
hlt
jp
xor
sbb
xchg
inc
push
dec
ljmp
jne
push
lods
gs
hlt
je
push
xchg
dec
dec
xchg
pop
xchg
mov
sub
cmp
or
mov
or
sarl
mov
mov
stos
pop
xchg
sti
out
stc
rcll
and
imul
pop
dec
xchg
sbb
pop
clc
cmc
jecxz
mov
cmp
push
outsl
incb
repz
mov
add
xchg
mov
jo
pop
pusha
ss
adcb
xlat
cmp
mov
vpsubb
rorb
mov
icebp
je
int3
adc
mov
sub
xor
cmp
addb
fsubl
xchg
and
add
push
mov
mov
dec
push
sbb
pop
and
cmp
int3
fs
add
pop
leave
or
popl
and
sub
inc
add
mov
or
jo
sub
adc
scas
fiaddl
mov
mov
out
push
mov
push
lods
sbb
leave
enter
mov
push
test
arpl
push
enter
lods
dec
loope
mov
popa
hlt
and
sbb
pop
shl
xor
inc
fs
pop
mov
add
pop
loopne
mov
mov
xchg
scas
lds
iret
pop
rclb
cmp
xchg
push
leave
adc
outsl
xchg
aad
jp
sub
or
cmp
je
and
adc
cmp
rol
mov
jne
in
bound
mov
inc
fucomp
adc
pop
icebp
pop
fs
insl
dec
add
add
out
cmc
test
or
xchg
push
sahf
xchg
test
adc
movsb
add
dec
popf
aam
jns
lcall
pop
shlb
fxch
jns
mov
in
xor
lock
daa
inc
push
jae
insb
cmp
adc
repz
and
jne
add
fldcw
sbb
inc
int3
js
push
stos
adc
sub
adc
clc
jmp
inc
push
jns
push
fisubrs
mov
stos
pop
repnz
ljmp
les
insl
mov
lahf
jae
ds
add
lock
test
push
mov
adc
mov
jecxz
in
jb
testl
mov
movsb
pop
clc
je
jmp
insl
repnz
pop
sub
or
insl
mov
push
into
arpl
data16
mov
std
dec
icebp
push
cmp
cmp
cld
dec
jo
cmp
jae
idiv
insb
xorl
or
shl
jno
xlat
popf
hlt
dec
movsb
scas
push
icebp
dec
adc
add
shll
insl
xor
or
in
test
inc
add
test
mov
and
lds
mov
stc
sti
mov
dec
push
lea
outsb
mov
loope
cmc
pushf
movsb
sbb
push
addb
sbb
mov
sub
xor
jns
inc
mov
xor
xchg
std
fwait
push
pop
jns
scas
jmp
movsl
dec
xchg
push
int
repnz
xchg
sahf
aad
je
aad
ret
outsl
push
js
xor
dec
popa
pop
ror
dec
xor
dec
pop
inc
lcall
sbbb
movsb
and
pop
mov
dec
mov
or
cli
cmp
mov
outsb
pop
dec
nop
inc
inc
cmp
ljmp
ds
sbbl
mov
imul
xchg
dec
and
mov
sbb
sti
sub
bound
imul
addb
mov
bound
gs
sti
ret
and
lret
scas
mov
pop
outsb
dec
push
fsub
call
mov
popf
push
imul
fisubrl
cmpsb
insl
ds
je
jle
lods
sbb
jb
add
mov
mov
adc
sti
pop
jb
inc
sub
repnz
adc
enter
jo
inc
test
in
mov
insl
xor
and
jb
inc
sub
mov
push
or
out
push
lret
dec
dec
jo
add
inc
mov
clc
push
cmc
jbe
lock
mov
flds
inc
into
cld
mov
nop
and
ret
lods
push
mov
js
outsl
jb
pop
loopne
jecxz
mov
test
in
jb
sub
sub
or
cwtl
mov
pusha
and
mov
mov
in
pop
aaa
xor
call
rcll
es
subb
adc
xor
jp
or
inc
jne
loope
mov
cmp
pushf
stos
inc
dec
cmp
inc
sub
pop
lea
lds
mov
pop
or
insl
sbb
loopne
add
arpl
movsw
push
test
cwtl
ss
push
push
stos
sbb
aaa
les
add
sub
lret
mov
xor
push
movsb
lock
and
shll
or
sub
loop
adc
ret
inc
sbb
sub
pop
pop
jb
outsl
push
cmp
dec
or
int
mov
fwait
int3
popa
xlat
fisubl
and
push
imul
and
sbb
cmpsl
ja
xlat
sti
sub
adc
inc
data16
dec
mul
call
jae
sbb
push
sub
jmp
cltd
push
cmpsl
js
adc
jge
sub
shlb
sbb
std
mov
push
add
int
fldenv
pop
inc
cmc
cmp
and
sub
stos
mov
decb
daa
cmp
test
rcl
push
leave
movsb
notb
sbb
loop
xchg
nop
mov
gs
incb
test
mov
imul
call
mov
jo
dec
hlt
push
lret
xchg
dec
pop
leave
sub
js
and
adc
inc
add
cmpsb
fcoms
out
leave
sub
xor
insb
sti
mov
in
lods
xchg
jl
push
les
inc
xor
fiaddl
pop
dec
das
test
pop
gs
and
xlat
cmp
pop
lods
mov
pmuludq
pop
mov
out
lock
adc
mov
imul
inc
lcall
sti
inc
push
adc
dec
into
xchg
sbb
mov
mov
mov
mov
add
cmp
push
jb
rcrb
scas
stc
mov
dec
cli
fs
dec
test
xchg
pushf
sbb
fisubrl
mov
loopne
rclb
lods
mov
dec
jo
xchg
inc
bound
jns
aad
push
lods
mov
insl
insb
add
cmp
xchg
jnp
mov
sub
xchg
xor
ss
pop
mov
jb
push
imul
sub
rolb
push
leave
push
adc
out
gs
je
adc
andl
push
out
inc
lods
xchg
push
lock
mov
sti
es
addr16
xchg
adc
mov
enter
roll
outsl
sbb
inc
add
dec
jns
jge
dec
and
or
clc
add
and
push
push
push
mov
xor
sub
cli
dec
fmull
repz
dec
pop
loope
cmc
xor
mov
cmc
sub
sbb
jae
sub
movsl
add
push
loopne
imul
ret
shrb
mov
jne
popf
das
push
cltd
orb
jecxz
neg
pop
sub
std
or
cmp
xor
sub
jo
xchg
ret
xchg
out
sub
sbb
xchg
cmc
subl
and
insb
dec
mov
push
xchg
bound
lret
add
pop
fnsave
adc
or
aaa
cmc
gs
rep
adcb
xor
sub
lcall
push
addr16
sub
pop
ja
icebp
or
mov
dec
pop
imul
in
mov
and
jne
jno
cmp
pop
out
mov
xchg
sub
mov
sbb
popf
push
dec
cmp
sbb
aaa
jl
jbe
xchg
aaa
in
jle
mov
push
and
test
jo
push
mov
aaa
jnp
pop
add
aam
sbb
cltd
test
scas
subb
and
mov
xchg
js
lret
lods
push
cmpsl
fnstenv
dec
sub
inc
popa
incl
inc
lock
shr
dec
and
std
xor
es
xchg
pop
adc
gs
mov
lods
adc
push
imul
movsb
sbb
ficoml
or
or
push
repnz
push
adc
mull
shlb
arpl
cmp
pop
adc
movsl
into
pop
std
jmp
pop
adc
cmp
scas
add
xor
inc
sub
sub
call
jmp
andl
dec
imul
mov
or
imul
pop
cmc
mov
jle
shll
xchg
test
push
cmp
movb
outsb
ja
loop
jmp
repnz
into
add
notb
int
aad
leave
add
loop
imul
clc
pop
sbb
mov
cmp
inc
add
inc
inc
cmp
jae
cmp
pop
fisttpl
filds
scas
jb
rcll
sub
loopne
outsb
pusha
outsl
lahf
icebp
mov
ret
dec
out
pusha
jb
or
mov
jmp
jbe
jno
xchg
outsb
repz
frstor
push
cmp
jno
cmp
cmp
lcall
pushf
xchg
pop
call
jp
negb
mov
mov
add
and
sub
sub
xor
lret
arpl
dec
call
push
mov
jo
lea
xor
jnp,pn
push
dec
sbb
inc
jg
fildll
pop
insb
inc
inc
jb
cmc
xor
xchg
push
pop
push
pop
lds
adc
sbb
movsb
mov
and
adcl
jecxz
or
jg
adcl
movl
es
xchg
jns
les
mov
and
add
shll
jge
cmp
push
fcom
pop
fwait
push
xchg
sub
mov
loope
iret
push
in
push
decb
mov
dec
in
shlb
and
xchg
rol
mov
andb
js
pusha
xlat
es
jo
inc
mov
push
push
mov
adc
cmpsb
or
mov
sbb
insb
fisttpl
push
pop
aam
ret
sub
pop
jp
xor
xchg
insb
loopne
mov
push
lods
xchg
daa
mov
pop
jge
daa
jl
push
dec
adc
pop
sti
nop
je
aaa
or
adc
sub
xchg
xchg
stos
cmp
cwtl
pushf
xchg
fistpll
dec
mov
outsb
dec
bnd
sub
ljmp
jns
mov
ror
or
imul
jecxz
es
subl
jb
pusha
xchg
xchg
mov
and
push
sbb
sub
xor
test
subl
adc
mov
or
cmp
sbb
int
sbb
jmp
mov
and
jmp
popf
mov
jle
fcoml
mov
cmp
aas
loopne
ret
dec
xlat
push
sub
xor
or
lret
mov
mov
outsb
loopne
adc
xchg
xchg
scas
enter
in
mov
cmp
dec
mov
and
fabs
mov
add
div
mov
mov
lahf
and
xor
sub
fcomps
pusha
test
add
sbb
in
rcrb
mov
mov
gs
pop
test
mov
pop
inc
cld
icebp
or
dec
dec
clc
rep
xor
or
cmp
pop
aam
sbbl
inc
ss
adc
push
popa
test
dec
popf
inc
mov
mov
cli
leave
test
inc
fwait
cltd
push
or
adc
or
or
in
imul
mov
loope
ret
cmp
lods
inc
xchg
aas
pop
sub
mov
cwtl
sbb
cs
xchg
sti
aas
test
dec
pop
sbb
lcall
mov
mov
and
movsl
cmp
jae
sub
je
pop
add
or
lahf
fstl
nop
or
push
push
orl
xor
loop
enter
dec
push
or
adc
pop
sti
jmp
imul
xor
pop
pop
and
je
push
stos
movsl
js
rorl
cmpl
stos
fcoms
call
insb
gs
xor
loope
pop
outsb
lcall
fsub
adc
xchg
lock
pop
or
xlat
cwtl
clc
jno
test
es
sbb
fsts
pop
cmp
cs
into
jmp
nop
inc
pop
xchg
mov
pop
insb
mov
adc
jecxz
xor
or
sub
dec
pop
xchg
pop
sbb
sbb
or
and
insl
mov
test
push
dec
xor
mull
push
lods
jge
inc
dec
pusha
jge
pushf
in
fnstenv
cmpsb
xchg
adc
cmp
pop
cmp
dec
pop
push
lds
call
insb
fwait
call
pop
pop
pop
ja
or
fldl
xchg
xor
or
jae
mov
test
push
paddusw
sub
dec
mov
push
cld
add
mov
loop
fistl
cwtl
into
into
jge
dec
fs
int3
out
sbb
insl
shr
je
roll
iret
scas
push
xor
ucomiss
mov
insb
ret
dec
mov
bound
clc
mov
pop
mov
lret
int
jg
xor
daa
mov
push
call
outsl
aam
test
jge
js
jmp
inc
movsl
insl
push
mov
jmp
add
push
cmp
xchg
sbb
push
push
test
pop
and
fstpl
mov
es
jns
hlt
inc
jns
movsl
pmulhw
cld
mov
push
cltd
test
pusha
sub
insl
arpl
pop
test
leave
xchg
mov
xor
cltd
and
push
sub
lret
lds
aad
xchg
add
outsl
jbe
lahf
and
popa
push
std
shlb
hlt
mov
inc
lock
xchg
jl
dec
fs
in
jp
inc
xor
in
pop
jp
xchg
pusha
mov
adc
rcrl
dec
add
dec
mov
mov
push
or
inc
adc
xor
stc
or
mov
xor
mov
out
and
or
sub
xor
scas
or
push
popf
inc
pop
xchg
mov
add
mov
dec
repnz
in
inc
add
scas
movsl
mov
xor
jnp
jnp
mov
add
loop
push
pushf
data16
ds
jp
fwait
mov
cwtl
sbb
mov
cld
cmp
xor
pop
leave
jne
pop
ja
aaa
daa
adc
push
call
and
int
sub
gs
xor
ljmp
and
mov
imul
rcrb
std
dec
mov
lsl
jge
sbb
sub
inc
xchg
outsb
cltd
data16
jmp
inc
imul
cmp
repnz
push
arpl
nop
adc
adc
push
fdivs
je
sub
lea
in
cmp
inc
adc
inc
xchg
pop
imul
xchg
mov
mov
loopne
lahf
pop
dec
insb
test
mov
jno
dec
adc
pop
sbb
adc
out
and
xchg
xor
inc
loop
divb
movsl
cmp
call
inc
imul
shlb
es
call
mov
sub
lea
add
and
push
nop
fcom
adc
std
call
sub
dec
mov
das
adc
inc
mov
dec
aas
or
das
mov
lods
popf
jb
mov
rorb
lea
xlat
rcrb
mov
add
cmp
xor
push
roll
into
and
shrd
xor
mov
fldl
add
xor
lock
inc
xor
out
icebp
xor
push
jge
fs
add
push
pop
out
mov
add
push
mov
add
push
popf
out
mov
add
std
out
mov
add
push
fucom
add
xor
lock
cmp
adc
inc
sbb
adc
jge
fs
add
dec
pop
stc
test
mov
add
dec
popf
stc
les
std
stc
in
xor
xor
clc
add
xor
lock
push
sbb
xchg
and
cmp
mov
pop
pop
jle
and
add
pop
jl
mov
pop
pushf
jle
and
add
and
add
fdivrl
and
add
cld
sbb
and
bound
or
add
add
testl
add
inc
pop
repz
mov
add
inc
popf
repz
std
repz
xor
xor
lock
xor
lock
cmp
or
push
sbb
push
mov
mov
add
inc
pop
repz
mov
add
inc
popf
repz
std
repz
xor
xor
lock
xor
lock
cmp
or
dec
sbb
or
jge
fs
add
dec
pop
cld
test
mov
add
dec
popf
cld
les
std
cld
in
xor
xor
cld
add
xor
lock
sbb
pushf
sub
cmp
mov
popf
or
bound
mov
and
mov
and
mov
push
daa
push
movl
xor
and
push
adc
inc
push
sbb
inc
cld
insl
mov
add
dec
pop
cld
test
mov
popf
mov
add
sub
cld
iret
mov
add
jbe
cmp
mov
xchg
shlb
out
icebp
adc
out
mov
add
push
fucom
adc
jle
jae
pop
adc
stc
mov
notb
push
dec
or
add
cltd
push
inc
js
and
je
mov
pop
xchg
jle
and
adc
jle
and
mov
arpl
lahf
mov
mov
aam
movsl
push
push
inc
inc
adcl
int3
mov
jp
popa
dec
cmp
sub
pushf
mov
add
dec
jecxz
mov
add
pop
or
cmp
mov
popa
inc
cld
mov
fstl
add
popf
sarl
lds
mov
mov
add
dec
cmp
fwait
lock
rolb
sub
stos
stc
mov
adc
push
jmp
hlt
xor
adc
lods
or
test
aaa
popa
dec
push
xor
repnz
cld
outsb
lret
ss
jle
jns
dec
rolb
add
out
xchg
clc
xor
nop
xor
xor
fcomps
stos
sbb
sbb
mov
cmp
ds
es
or
jo
sub
outsl
addr16
inc
pop
jbe
loope
icebp
jle
jmp
xchg
and
ror
xchg
xchg
daa
add
pusha
gs
lock
mov
or
call
jle
test
iret
rclb
call
inc
sub
repnz
loop
test
xchg
inc
dec
push
sti
and
mov
leave
lea
rcrl
mov
addl
xor
inc
jecxz
xlat
lea
jno
jno
cmp
adc
fstl
gs
mov
mov
xor
and
aas
nop
inc
xor
loop
mov
push
jge
lret
mov
xor
test
pop
push
dec
add
pop
mov
xchg
shrb
mov
movsl
fnstsw
pusha
or
cs
cmp
xchg
inc
mov
push
xor
bound
pop
in
out
sbb
mov
inc
cmp
stos
add
sbb
andb
add
setp
das
adc
out
dec
or
mov
xchg
clc
cltd
js
das
xchg
inc
inc
jnp
in
jb
push
test
es
inc
xchg
int
lock
add
or
mov
stc
or
xchg
repnz
aam
lret
push
shl
notl
cmp
movsl
cmp
sub
test
pop
cld
test
mov
dec
mov
lea
mov
add
clc
loope
aas
xchg
test
fsts
xor
sub
cmp
lret
popa
fisubl
daa
leave
or
or
fs
inc
lahf
mov
outsb
xor
icebp
pusha
icebp
jle
leave
lea
outsb
cmp
cmp
and
dec
xor
jmp
pop
test
fidivrl
fs
push
int
jle
pop
loop
push
in
and
ss
mov
jo
cmpsl
mov
jo
shrl
cmp
popf
lahf
dec
and
add
sbb
and
jb
sar
ret
xor
xor
cmp
addr16
sbb
mov
cmp
dec
xchg
pushf
les
orb
call
inc
mov
lea
cmp
shrb
fs
loopne
int3
and
mov
imul
les
mov
dec
or
in
popa
shl
arpl
mov
mov
cmpsl
es
mov
jle
lock
inc
cmp
and
scas
pop
iret
rcrl
movsl
iret
scas
mov
push
mov
leave
shl
push
stos
cmp
negb
imul
jge
push
in
cli
cltd
adc
mov
pop
or
ret
stc
cld
jae
packuswb
fdivr
lods
and
add
repz
and
mov
dec
loopne
xor
sub
cmp
pop
inc
jle
and
add
cmp
data16
jo
shl
cmp
bound
ret
ljmp
stc
sbb
insb
dec
push
sbb
repz
push
outsb
repz
and
cmp
rcll
outsl
mov
jno
and
mov
and
ret
mov
add
push
push
lcall
mov
mov
push
adc
inc
daa
push
xchg
insl
mov
mov
inc
mov
xor
inc
stos
lret
pop
jno
ljmp
jmp
and
sbb
mov
add
and
inc
popa
add
gs
and
lcall
jp
sub
cmc
push
xchg
and
push
int3
jo
push
push
add
int
lock
sub
sbb
out
jl
test
leave
mov
add
aad
jae,pn
cmp
lock
lret
push
jl
mov
or
xchg
or
add
cmp
cmp
xchg
ret
fsubs
sbb
call
jecxz
outsb
cmp
cmpsb
out
push
sbb
cld
fwait
jbe
inc
stos
jmp
pop
adc
stos
mov
xor
rcll
and
mov
movsb
into
cmpsb
push
sbb
cmp
rclb
pavgb
pop
repnz
add
and
fwait
push
stc
xchg
mov
sbb
xchg
xchg
ds
popf
xor
iret
rclb
or
in
iret
mov
or
xor
sub
sub
sub
jns,pt
sbb
stos
clc
ret
mov
dec
mov
fmull
dec
push
pop
cmpsl
cmp
sahf
loope
and
sub
stos
xchg
jbe
sub
f2xm1
push
cli
pop
movsb
in
sub
adc
mov
add
das
jecxz
fnstsw
loope
adc
pop
sbb
lret
push
roll
sti
movsl
pusha
rcrb
or
xchg
iret
lret
adc
test
js
jo
lret
mov
aas
in
mov
add
xchg
insl
push
fs
outsl
imul
cld
enter
js
aaa
daa
cmp
loopne
xor
cmp
mov
mov
push
cmp
int
mov
or
jecxz
enter
push
fsub
sti
cwtl
or
cmp
lret
and
mov
imul
outsb
sbb
push
inc
loope
jle
adc
mov
iret
repz
mov
add
jmp
push
dec
xchg
fbstp
std
jecxz
into
lahf
push
cmp
sub
ret
and
jnp
or
xor
add
js
xor
inc
mov
add
add
xchg
insl
add
in
test
sbb
popa
int
stc
cmp
mov
int3
inc
mov
adc
mov
sub
and
cmp
push
mov
stos
movsl
shl
xchg
xchg
sbbl
mov
das
jbe
mov
gs
cmp
sub
mov
jo
arpl
jecxz
les
push
cld
into
cmp
xchg
cmp
imul
scas
jns
mov
loope
add
xor
push
mov
repz
cld
imul
lock
push
xchg
aas
add
xor
mov
mov
xlat
sbb
mov
ds
or
push
xor
leave
call
nop
fiadds
pop
pusha
rcr
repz
jge
pop
cs
in
mov
jle
or
jb
xor
xchg
test
mov
andb
pop
inc
push
rcrb
push
loope
pop
xor
lock
shlb
mov
inc
notl
leave
lock
and
and
xor
nop
adc
daa
or
and
mov
mov
inc
sub
ret
xorb
call
xchg
add
popa
xchg
jns
daa
sbb
sarb
stos
into
ljmp
or
cmp
pop
loope
cwtl
lcall
ss
sbb
fsubrs
jp
fimull
stc
or
lea
sahf
iret
inc
std
sub
ja
pusha
mov
inc
xchg
andb
loopne
mov
mov
inc
sub
add
mov
mov
jbe
in
jo
cmp
daa
pop
jge
rcrb
pop
inc
enter
mov
sbbb
pusha
xor
xlat
jnp
dec
sbb
or
into
add
xor
daa
ss
xchg
inc
or
mov
cmp
mov
rcr
sbb
jmp
or
push
test
pop
jbe
sbb
mul
gs
mov
aas
movlps
xchg
test
sbb
adc
mov
push
pop
mov
and
in
push
je
roll
or
arpl
ljmp
lock
cmpsl
inc
jmp
clc
lock
dec
shl
scas
push
iret
test
pop
scas
sbb
ror
mov
jecxz
test
push
int
lock
es
push
fucomp
cld
xchg
ss
aas
cmp
addl
add
or
pushf
mov
scas
std
lahf
divb
ss
xor
leave
mov
jecxz
mov
sbb
shlb
push
cs
dec
and
jle
pop
dec
inc
mov
push
in
arpl
push
or
pop
push
inc
fisttpll
cmp
push
push
lods
mov
xchg
inc
repz
jge
inc
xlat
jno
pop
adc
hlt
cwtl
shll
clc
jae
testb
insl
dec
adc
cmpl
cld
push
inc
cmpl
add
cmc
mov
jmp
pop
cli
sbb
and
es
div
xchg
scas
call
xchg
xchg
fwait
adc
or
mov
push
repnz
sbb
cmp
adc
jl
xor
or
mov
test
fistpl
loopne
add
out
in
movsb
push
ljmp
in
cmp
mov
sub
mov
mov
push
mov
in
mov
adc
es
jmp
xchg
js
sti
jno
inc
in
pop
call
int3
aad
mov
mov
add
inc
dec
clc
lcall
test
nop
lahf
lcall
call
dec
xchg
test
cli
push
cs
mov
mov
rolb
fsts
push
pop
xchg
fnsave
mov
or
sarl
adc
pushf
lock
es
add
cmp
out
rol
je
rorl
ds
mov
pop
pushf
adc
cmp
mov
pop
add
inc
inc
hlt
insl
test
mov
mov
lret
pop
jl
mov
push
adc
push
dec
jg
cmpl
data16
in
lret
jo
loop
divb
movsl
and
inc
xor
lret
mov
jecxz
pop
adc
in
and
in
in
cli
jp
inc
pop
adc
rcrb
jp
mov
pop
xchg
pop
sub
stc
cmp
or
xor
and
fisttpll
sahf
pushf
dec
inc
outsl
add
mov
roll
ss
cs
and
ret
pop
xchg
mov
loope
dec
dec
jle
or
loope
loope
ljmp
or
popa
pop
clc
addr16
out
outsb
lret
mov
jb
lret
cmpsl
push
add
push
stc
inc
addr16
popa
jnp
roll
xchg
iret
mov
jle
leave
add
cmp
in
rcrl
or
dec
stos
stc
mov
ljmp
adc
aas
arpl
dec
sub
push
cld
orl
adc
push
into
bound
scas
push
xor
and
sbb
mov
repnz
clc
ret
and
insl
mov
jge
dec
add
out
dec
mov
cmpsb
or
lret
jle
out
ret
jae
outsl
jmp
subb
loop
and
std
stc
push
adc
bound
jl
jns
pop
fadds
dec
sar
lock
jecxz
outsb
dec
xlat
jecxz
test
push
push
or
mov
push
or
xchg
sub
daa
ret
mov
sbb
in
test
daa
push
jecxz
mov
push
mov
add
loope
mov
mov
stc
es
ss
xchg
jo
lret
mov
int
push
shll
jns
adcb
jl
dec
mov
dec
insl
fdivrl
mov
ds
hlt
and
data16
cs
inc
mov
push
inc
leave
repnz
stc
sub
or
sahf
mov
cmpsb
addb
adc
mov
out
jecxz
rolb
imul
mov
mov
out
loope
popa
xor
aam
push
jecxz
out
jne
lock
mov
aaa
mov
in
lock
es
mov
jl
add
andl
out
sbb
leave
insb
les
ret
es
dec
sbb
stos
xlat
push
repz
std
push
add
pop
jp
add
rolb
adc
clc
xchg
outsb
sbb
sbb
or
ret
dec
pushf
or
inc
or
inc
mov
push
push
add
mov
mov
push
in
push
jecxz
lcall
stos
and
ljmp
pop
xchg
push
sub
aas
jne
fildl
shll
repz
cmp
cwtl
js
subb
push
ljmp
out
cmp
mov
scas
arpl
or
pushf
or
sbb
mov
push
add
cli
mov
xchg
jno
ret
xchg
sbb
nop
ljmp
inc
js
xorl
orl
xchg
or
lock
pop
jne
add
cmpsl
fistpll
jae
pop
xchg
popf
push
call
jl
dec
mov
fists
fstpt
mov
jle
fimuls
ror
icebp
lret
cmp
mov
hlt
mov
pop
test
mov
mov
mov
sbb
push
dec
and
ret
xor
sbb
xor
and
sahf
shlb
cld
popa
test
mov
or
xchg
dec
cmpsl
and
push
arpl
enter
or
push
add
mov
push
fsubr
sub
clc
push
aad
rolb
xor
stos
sub
xchg
jbe
mov
rolb
dec
mov
sti
sub
mov
jbe
dec
pop
lcall
das
jge
stos
push
movsb
pop
or
stc
call
fcomps
movsl
and
add
adc
in
clc
push
mov
cld
repz
jg
pop
push
ja
imul
pop
mov
cld
mov
jne
sti
add
dec
clc
xchg
mov
rcrb
mov
inc
pusha
repz
xchg
sub
cmpsl
mov
cmp
addr16
ja
mov
mov
shlb
jmp
sub
sbb
aam
sbb
das
mov
jae
ja
jmp
xchg
sbb
leave
jo
adc
mov
cmpsb
jno
jecxz
add
mov
addb
icebp
push
mov
jns
lds
adc
mov
out
sahf
sub
dec
sub
xor
cmpsl
movsb
jno
sahf
test
sbb
testb
clc
jl
lret
setne
inc
in
cmp
movsl
jle
xor
pop
pop
sub
cmp
test
cmc
imul
jle
jns
xchg
cs
push
fdivrp
sub
sahf
jecxz
xor
xor
call
data16
cmp
mov
lds
repz
mov
mov
sub
sub
mov
and
xor
pop
ret
cmp
popa
sahf
adc
cmp
xchg
clc
inc
sbb
jle
popf
jno
iret
lret
xchg
mov
jo
push
stc
mov
fnstcw
pop
sbb
inc
or
and
shll
std
push
mov
jl
xor
in
and
add
dec
sub
xor
int3
cmp
mov
dec
movsb
arpl
stc
repnz
mov
loopne,pt
cmc
adc
pop
xor
mov
icebp
jle
inc
mov
mov
xor
cld
push
adc
or
push
lock
leave
jle
fadd
mov
push
sub
shrb
roll
sbb
xchg
scas
xchg
xchg
mov
xor
jl
adc
movsl
leave
and
test
sub
movsb
movsl
dec
push
mov
push
es
add
sbbl
pop
mov
iret
mov
ja
movsl
xchg
test
js
jbe
fstps
dec
or
mov
out
lcall
aam
clc
sbb
mull
mov
mov
cld
test
cmpb
sahf
inc
leave
cs
nop
test
cmc
xchg
in
imul
xor
gs
jp
push
insl
add
push
movsb
repz
ja
ja
call
mov
int
push
cmp
add
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pusha
inc
add
add
add
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
cmp
add
add
xor
xor
xor
cmp
xor
xor
bound
xor
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
push
add
jno
push
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
cmp
or
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
inc
add
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
add
add
add
add
js
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
.byte
add
add
jo
add
cmp
mov
xor
xor
xor
xor
data16
jl
jmp
xor
sti
xor
mov
mov
xchg
add
or
xor
cmp
dec
aaa
xorb
aaa
pop
cmp
cmp
cmp
cmp
cmp
dec
cmp
cmp
cmp
cmp
loopne
pop
aas
bound
add
add
add
addb
add
xor
mov
xor
xor
xor
pusha
xor
jae
adc
sbb
xor
xor
xor
xor
xor
xor
xor
xor
jno
jns
cmpsl
xor
push
ss
ss
ss
imul
adc
sbb
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
inc
aas
dec
aas
add
add
add
rolb
add
xor
xor
mov
xor
xor
xor
scas
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
and
xor
xor
cmp
xor
xor
push
xor
xor
outsb
xor
jge
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
cmp
push
xor
xchg
xor
movsb
xor
add
adc
add
in
xor
xor
xor
xor
