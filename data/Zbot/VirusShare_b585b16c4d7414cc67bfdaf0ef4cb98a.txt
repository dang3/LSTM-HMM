push
mov
sub
movl
lea
mov
mov
mov
sub
mov
movl
lea
mov
mov
and
mov
add
cltd
idiv
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
or
sub
imul
mov
cmpl
je
lea
mov
mov
mov
or
imul
imul
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
cltd
idiv
mov
sub
mov
lea
mov
mov
and
mov
add
imul
mov
push
push
push
push
push
call
cmp
jne
movl
movl
mov
and
mov
and
add
mov
mov
and
imul
add
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
and
add
mov
sub
mov
lea
mov
mov
or
mov
sub
add
mov
jmp
call
movl
mov
and
imul
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
cmp
je
movl
movl
mov
or
imul
add
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
mov
and
mov
sub
mov
lea
mov
mov
mov
sub
imul
mov
jmp
jmp
movl
mov
or
imul
imul
mov
cmpl
je
lea
mov
mov
add
mov
cltd
idiv
add
mov
mov
and
mov
sub
imul
mov
lea
mov
mov
add
mov
cltd
idiv
mov
sub
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
mov
imul
mov
sub
mov
lea
mov
mov
and
mov
add
mov
sub
mov
jmp
lea
mov
mov
mov
imul
imul
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
xor
je
movl
mov
cmp
je
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
lea
mov
mov
mov
or
add
mov
call
jmp
jmp
call
movl
cmpl
jne
movl
lea
mov
mov
add
mov
cltd
idiv
mov
mov
add
add
mov
movl
lea
mov
mov
and
mov
mov
or
sub
imul
mov
jmp
mov
add
mov
cmpl
je
movl
movl
lea
mov
mov
or
mov
mov
sub
mov
sub
mov
call
call
call
call
movl
lea
mov
mov
mov
and
mov
sub
mov
sub
mov
movl
lea
mov
lea
mov
mov
add
mov
mov
cltd
idiv
mov
sub
mov
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
mov
add
mov
mov
cltd
idiv
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
shr
cmp
jae
mov
mov
mov
mov
rorl
mov
xor
mov
mov
mov
mov
mov
jmp
mov
pop
ret
int3
int3
push
mov
sub
movl
mov
sub
imul
mov
mov
pop
ret
int3
int3
push
mov
sub
movl
movl
mov
add
mov
cltd
idiv
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
sub
imul
mov
cmpl
je
mov
and
mov
sub
mov
sub
mov
jmp
mov
add
add
mov
lea
mov
mov
and
mov
add
imul
mov
jmp
movl
movl
mov
add
mov
cmpl
jl
mov
add
mov
cltd
idiv
imul
mov
call
movl
mov
or
mov
or
sub
imul
mov
jmp
lea
mov
mov
and
mov
sub
mov
sub
mov
lea
mov
mov
add
mov
mov
cltd
idiv
mov
sub
mov
mov
push
call
add
push
call
add
shl
push
push
push
push
call
mov
movl
lea
mov
lea
mov
mov
mov
and
mov
sub
mov
movl
mov
add
mov
cltd
idiv
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jae
mov
add
mov
mov
mov
jmp
movl
movl
mov
or
imul
add
mov
lea
mov
lea
mov
mov
mov
mov
imul
mov
sub
mov
mov
push
push
mov
push
call
add
call
push
call
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
lea
mov
mov
add
mov
cltd
idiv
add
mov
movl
mov
cmp
jl
movl
mov
add
mov
sub
mov
movl
lea
mov
mov
mov
add
mov
jmp
mov
imul
mov
movl
mov
or
add
add
mov
jmp
movl
cmpl
jg
call
mov
mov
mov
push
mov
push
push
push
mov
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
push
push
call
add
mov
mov
mov
cmpb
jne
inc
mov
mov
cmp
je
cmp
jne
cmpb
jne
inc
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpb
jbe
inc
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
jmp
jmp
jmp
jmp
jmp
push
push
call
pop
pop
ret
jmp
xor
ret
ret
jmp
jmp
cmpl
jne
pushl
call
pop
ret
push
push
pushl
call
add
ret
pushl
call
neg
sbb
pop
neg
dec
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
jmp
jmp
jmp
mov
add
mov
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
cmp
add
dec
and
add
add
add
add
test
add
mov
and
add
and
add
and
add
and
add
and
add
add
dec
and
add
add
add
and
add
add
loop
add
cli
and
add
add
add
add
mov
add
je
add
bound
add
push
add
inc
add
xor
add
and
add
enter
fsubl
add
repnz
add
add
add
adc
add
add
add
add
addb
add
movsb
and
add
jle
add
outsb
and
add
inc
and
add
push
and
add
add
add
imul
push
imul
push
insb
pop
data16
xor
add
add
add
call
sbb
nop
and
add
and
add
push
add
add
add
add
and
add
add
shlb
add
add
shlb
add
mov
add
mov
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
cmp
add
dec
and
add
add
add
add
test
add
mov
and
add
and
add
and
add
and
add
and
add
add
dec
and
add
add
add
and
add
add
loop
add
cli
and
add
add
add
add
mov
add
je
add
bound
add
push
add
inc
add
xor
add
and
add
enter
fsubl
add
repnz
add
add
add
adc
add
add
add
add
addb
add
movsb
and
add
jle
add
outsb
and
add
inc
and
add
push
and
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
repnz
jb
jne
insb
inc
insb
insb
outsl
arpl
add
dec
popa
jae
inc
jb
outsl
jb
add
inc
imul
gs
add
add
popa
insb
inc
insb
insb
outsl
arpl
add
add
inc
popa
fs
gs
fs
je
add
xlat
add
inc
popa
fs
jb
je
push
je
add
add
imul
insb
gs
bound
arpl
add
je
jne
jb
outsb
je
jb
arpl
jae
fs
add
fs
imul
add
mov
jo
gs
jb
jns
lds
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
dec
inc
dec
popa
jo
je
imul
add
gs
sgdtl
je
jne
jb
outsb
je
push
add
iret
add
insl
imul
outsl
arpl
jae
add
inc
gs
jns
je
insl
push
imul
insb
gs
imul
gs
jo
jb
add
or
inc
jne
jb
outsb
je
jb
arpl
jae
mov
jo
insb
insb
outsl
arpl
push
add
insb
je
inc
jns
gs
outsl
push
imul
leave
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
pop
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
je
jb
outsl
arpl
fs
js
push
add
add
inc
inc
inc
push
dec
gs
fs
jns
add
roll
dec
jae
popa
fs
outsl
fs
je
add
cmp
dec
outsl
fs
gs
imul
add
iret
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
inc
gs
jns
je
insl
inc
gs
jne
je
inc
dec
inc
add
add
gs
push
dec
jne
je
inc
jns
add
push
dec
inc
dec
xor
cs
insb
add
adc
inc
outsl
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
push
dec
inc
inc
jb
insl
push
je
imul
jb
popa
je
push
je
gs
insl
dec
outsb
dec
inc
insb
outsl
bound
add
inc
outsl
push
outsb
imul
imul
inc
outsl
dec
outsb
imul
add
push
popa
jae
dec
gs
push
gs
insb
insb
outsl
arpl
add
add
jb
outsb
addr16
jb
insl
inc
dec
push
dec
inc
add
add
jb
outsb
addr16
jb
insl
inc
push
dec
inc
xor
outsl
insb
xor
cs
insb
add
imul
cmp
imul
inc
push
push
cs
insb
add
roll
pop
gs
je
dec
add
arpl
inc
imul
gs
je
add
insl
fs
outsb
add
pop
pop
addr16
popa
imul
lidtl
outsb
imul
add
jae
je
jae
jb
popa
je
gs
add
popf
add
fs
jae
pop
imul
add
jo
pop
arpl
insl
outsl
fs
outsl
add
jo
pop
insw
outsl
fs
addl
je
popa
jo
pop
je
jo
add
lret
gs
gs
pop
push
gs
add
mov
pop
arpl
je
outsl
insb
data16
add
pop
pop
fs
insb
outsl
outsb
gs
je
xchg
pop
outsl
outsb
gs
je
push
inc
gs
je
jb
jne
dec
outsb
outsw
inc
adc
add
add
add
aad
mov
add
in
push
jno
fiaddl
and
shll
xor
inc
adc
das
jae
popa
adc
push
adcb
add
push
or
jne
mov
and
pop
andl
push
add
inc
jne
mov
or
sti
lock
cmc
lods
popa
inc
mov
in
sbb
out
xorb
ja
jb
test
and
pop
or
ret
cmpsl
sbb
out
test
mov
ss
push
and
pop
push
dec
les
mov
adc
pop
or
repz
call
pusha
inc
sub
bound
cmpsl
push
mov
sbb
leave
movsb
inc
fs
inc
dec
pop
gs
adc
cld
les
dec
cs
mov
dec
out
add
and
jp
les
insb
lahf
sub
and
and
pop
sub
inc
inc
inc
push
mov
pushf
subb
or
inc
sbb
jno
xchg
shrb
dec
ret
sbb
call
test
int3
lcall
and
and
mov
pusha
popa
fucomp
das
add
movsb
dec
out
xchg
nop
subb
dec
lret
inc
jcxz
sbb
iret
incl
popa
lock
in
ret
and
ret
or
lahf
add
repnz
xchg
int
dec
sub
sbb
dec
test
jecxz
jecxz
daa
jl
shl
sbb
and
or
dec
inc
pop
dec
sub
repz
jecxz
popf
sbb
mov
cs
or
sbb
jge
add
or
or
loope
addb
test
shlb
inc
dec
mov
jo
cmpb
popa
stc
sub
fs
xchg
xorb
loopne
sbbb
jmp
test
or
pusha
dec
test
call
arpl
test
insb
add
imul
mov
add
pop
inc
mov
sub
cwtl
mov
xchg
fiadds
sbb
clc
movsb
sub
or
and
and
inc
xchg
lcall
int
and
push
inc
pop
dec
es
cmp
mov
push
dec
sub
or
inc
bound
rorb
loopne
mov
popf
mov
or
jmp
arpl
shl
xchg
push
or
sbb
insl
popf
jo
inc
fwait
or
lds
sbb
xor
cwtl
push
in
inc
mov
nop
or
dec
leave
enter
mov
insb
add
inc
and
dec
sbb
sub
inc
sub
cli
or
enter
lds
ret
sbb
rep
or
js
icebp
and
das
pop
insb
and
sub
std
sub
sub
add
and
pusha
rcr
test
sub
leave
arpl
or
cltd
imul
ret
dec
inc
imul
ficomps
jmp
outsl
dec
loop
shrl
insl
loop
shlb
sbb
mov
mov
sub
js
fs
rol
imul
test
sub
inc
inc
pusha
nop
pop
movsb
in
push
add
adc
add
nop
push
and
push
mov
mov
inc
add
cmp
lds
add
xchg
or
ret
or
jbe
sub
pop
jno
adc
pusha
add
cmp
sti
mov
in
dec
xchg
rorb
add
dec
addr16
aam
jge
les
imul
faddl
xor
push
or
mov
push
inc
add
sub
cmpsl
jb
pop
insb
xor
mov
test
xchg
icebp
insl
stc
cmp
pop
fmull
outsl
lods
xchg
incb
mov
dec
js
rolb
mov
cld
les
sbb
add
jae
xchg
mov
sbb
and
push
dec
or
movsb
pusha
pop
aad
and
mov
add
add
fidivs
outsl
jecxz
pop
es
or
add
enter
dec
jo
in
jae
mov
xchg
add
push
scas
push
inc
push
jge
push
xchg
lret
icebp
inc
rcll
test
and
mov
push
cmp
pusha
add
ljmp
adc
subb
mov
push
push
scas
mov
lods
dec
movq
and
jnp
push
mov
push
or
adc
insl
sbb
or
cli
insl
lret
in
std
xor
or
xchg
dec
push
inc
add
sub
inc
orb
pop
test
dec
jb
dec
or
inc
test
ret
enter
inc
add
sub
and
nop
cld
mov
lcall
fwait
pop
ljmp
sbb
jne
adc
jle
pop
pop
lods
xchg
insl
sbb
ja
out
push
les
mov
popa
aaa
repnz
sub
dec
jbe
int3
sub
fbstp
stos
ret
mov
mov
ds
ret
mov
rcl
jge
dec
add
pop
pusha
int
xchg
jne
stc
lea
mov
lahf
sahf
js
xchg
add
shr
mov
test
lock
xchg
xchg
les
test
lea
test
xchg
mov
mov
ret
mov
insb
xor
fmull
and
add
inc
inc
dec
jnp
xor
push
lea
roll
or
rolb
stc
fs
cmp
adc
outsb
mov
push
pop
popa
sbb
jb
dec
fwait
aaa
xchg
rcll
mov
inc
je
mov
add
mov
xor
mov
fucomi
add
rcl
dec
add
les
mov
and
in
cmc
dec
add
out
mov
push
pop
js
jl
in
rcrl
bound
pusha
push
xor
imul
enter
inc
cmp
test
scas
or
sti
mov
mov
or
mov
sbb
in
shl
fs
call
test
movsl
inc
inc
repnz
test
test
push
insl
dec
cs
push
pop
dec
fnstsw
pushf
jge
jp
xchg
mov
mov
loopne
add
les
movsl
aad
mov
out
js
lods
aad
fstpt
loopne
mov
fidivs
or
jb
arpl
insl
pushf
dec
insl
cmc
push
leave
aad
dec
jae
pop
xor
and
les
lock
add
sub
loopne
push
pusha
out
sbb
cli
xor
push
dec
divb
lds
xor
xor
loope
loopne
or
inc
xchg
sbb
mov
sbb
or
movsb
imul
ficoml
fcmovbe
test
jae
push
leave
and
icebp
or
add
insl
lea
add
jne
push
or
sti
mov
ss
adc
loopne
and
dec
xor
test
pop
jecxz
add
xor
and
faddl
and
jae
mov
es
rolb
addl
outsl
subb
aam
xchg
mov
in
and
popa
add
out
add
ljmp
clc
incb
mov
enter
fdiv
stc
mov
jmp
mov
repnz
dec
test
jb
cmp
mov
xchg
jg
mov
out
fstps
sub
mov
out
mov
repz
addb
pop
mov
xchg
pop
fdivrs
aas
rorb
outsl
rorb
outsl
fcomps
aas
fcomps
dec
shrb
xchg
paddusw
xchg
pop
lahf
dec
sarl
xchg
outsb
xor
jl
cmp
arpl
lods
lret
fnstcw
stos
mov
iret
pop
or
fists
cmp
pop
sbb
push
cmp
pop
imul
imul
cmp
push
dec
xor
pop
sub
scas
push
imul
pop
lret
cmp
mov
daa
popf
nop
jbe,pn
dec
mov
inc
shll
cltd
inc
xchg
mov
fwait
je
ja
cld
shrl
lret
inc
das
push
inc
sbb
xor
dec
pusha
mov
roll
xor
repz
in
mov
cmpsl
adc
dec
cmp
addl
lods
jno
test
sbb
inc
in
pop
bound
pop
in
pop
pop
scas
sbb
cmp
clc
cld
andl
enter
sub
jo
mov
pusha
sar
xchg
pop
in
les
pop
je
js
jle
mov
enter
xor
scas
clc
sahf
pushf
add
insl
jmp
sbb
stos
stc
orb
mov
mov
leave
scas
in
push
sub
dec
test
push
in
test
push
out
push
aas
out
mov
incb
out
iret
incb
pop
decb
lahf
into
cmpb
iret
jp
mov
fptan
cwtl
mov
fsqrt
clc
mov
testb
test
cli
test
mov
repnz
mov
cli
mov
mov
repnz
fdivs
cltd
imul
mov
bnd
scas
xchg
stos
cmp
dec
push
cli
repz
lcall
mov
xchg
pop
iret
dec
mov
ja
xor
jnp
aas
jg,pn
cmp
jae
aas
ja,pt
xor
jnp
aaa
jg,pt
cmp
pop
aas
dec
ja
cmp
out
aaa
dec
jg
xor
out
aas
pop
ja
aaa
pop
jnp
aas
pop
jg
aaa
outsb
jae
xor
iret
aas
outsb
jnp
cmp
fbstp
jle
fbstp
jle
fistpll
jle
scas
cmp
insl
pop
push
call
into
js
bswap
out
orb
out
mov
ret
out
mov
incb
iret
decb
into
test
lret
into
subb
into
mov
ret
into
mov
fiadds
iret
fimuls
scas
test
scas
orb
mov
scas
mov
mov
sbbb
mov
mov
test
mov
pop
outsb
test
iret
outsb
lea
jle
lahf
lret
jle
lahf
iret
jle
scas
ret
jle
scas
dec
test
iret
dec
lea
pop
test
iret
pop
iret
ret
pop
mov
cs
lret
orl
push
cmp
xor
aas
xor
push
cmp
and
sysexit
in
rdtsc
lock
pushf
mov
lcall
xor
pushf
int3
ss
jmp
lret
dec
loopne
jle
fdivr
fcomps
fcompl
insb
mov
das
adc
push
das
pop
mov
das
pop
sbbl
push
sahf
push
dec
push
inc
pop
aas
pop
sahf
push
aas
pop
add
aas
pop
outsb
pop
iret
push
ret
pop
iret
push
outsb
pop
pop
pop
ret
push
inc
sbb
push
jle
pop
push
add
iret
pop
jle
pop
push
ret
sbb
push
dec
adc
push
sbbl
xor
call
je
jno
dec
xor
js
or
insl
jne
xor
call
cmp
pop
aas
mov
jl
aaa
pop
jne
cmp
call
xor
jl
pop
jno
cmovge
add
mov
test
inc
pop
je,pn
or
push
dec
sbb
test
sbb
in
dec
fcoml
call
popa
rclb
pusha
insb
sub
inc
lock
jne
icebp
pop
jne
and
jne
adcl
hlt
popa
nop
test
xchg
xchg
test
xchg
test
xchg
lcall
mov
xchg
movsl
cld
mov
push
movsl
hlt
loope
mov
mov
movsl
cld
mov
xchg
sbb
jo
adc
jnp
push
into
jg
sbb
jae
lods
faddl
adc
jg
sbb
jae
sub
inc
cmp
sbb
jbe
sbb
test
jg
in
lea
push
jnp
sbb
jae
sbb
jnp
lods
pushf
dec
sbb
scas
jae
pop
scas
ja
adc
jg
push
dec
jbe
sbb
dec
push
dec
jle
adc
pop
push
pop
jbe
sbb
pop
push
pop
jle
adc
imul
jbe
sbb
imul
jle
adc
jnp
jg
jnp
jg
jnp
jg
jnp
mov
pcmpeqd
adc
jb
outsb
push
inc
sbb
dec
jnp
xor
jp
aaa
int
mov
int
mov
lods
jb
aas
lods
jle
repz
jbe
sti
sbb
xchg
repz
lahf
movsl
mull
xchg
movsl
cpuid
xchg
movsl
mov
insb
push
mov
mov
dec
int3
add
mov
sti
adc
mov
adc
mov
and
xor
pop
loope
cmp
fsubp
orl
adc
pop
cld
push
push
sbb
push
into
adc
pop
into
sbb
ficoms
jg
ficoms
push
ficomps
scas
push
ficomps
mov
push
sahf
push
inc
test
repz
xlat
movsb
repz
out
add
xchg
mov
add
aaa
test
and
mov
and
inc
lods
xor
adc
xor
add
push
jmp
cltd
incl
gs
lahf
jne
loope
jne
loope
jne
rcrl
mov
jp
cmovg
mov
add
testl
sub
shll
adc
cli
sub
fwait
test
scas
addl
movsl
xchg
jecxz
cltd
mov
push
rol
cmp
adc
testl
lods
xlat
add
cmpsb
iret
testl
mov
lock
lcall
mov
inc
or
enter
rcrb
cld
fcoms
std
hlt
fcomps
in
loopne
xchg
jecxz
inc
pushf
lock
test
clc
fwait
lcall
rorl
mov
fwait
pop
stc
mov
pop
icebp
cwtl
xchg
insb
cmc
cwtl
fwait
insb
fstps
arpl
test
mov
mov
movsl
lea
jno
adc
pop
push
js
pop
sbb
insb
push
mov
je
add
js
fdivr
jo
sub
js
mov
xor
push
push
or
jp
push
pop
jp
adc
jp
pop
ljmp
sub
or
cmp
jbe
pop
aas
jp
sbb
jle
sbb
jb
jle
jae
mov
fnsave
xor
jb
sti
or
xchg
out
out
mov
lret
sti
lods
ret
inc
mov
jmp
mov
xchg
repnz
jg
sbb
xlat
mov
mov
mov
cmp
ja
cmp
pop
mov
lea
arpl
xchg
mov
jo
inc
clc
js
sbb
add
repz
in
idivl
inc
adc
rorb
adc
js
push
sbb
insb
sbb
jl
pop
jb
sbb
lock
xchg
and
inc
lock
cli
xor
test
bound
out
inc
mov
popl
out
push
xor
push
xchg
ret
push
mov
iret
push
test
add
addr16
ret
addr16
iret
addr16
lret
ja
ja
ret
ja
iret
ja
lret
xchg
cmpsb
ret
xchg
cmpsb
lret
xchg
xorl
xchg
mov
lret
cmpsl
addl
cmpsl
mov
xor
jmp
jp
xor
jbe
xor
jb
cmp
jle
cmp
jp
xor
jbe
xor
jb
aas
int
and
test
shl
lock
lahf
cmp
mov
dec
clc
mov
dec
lock
xchg
pop
hlt
cwtl
xchg
pop
clc
cwtl
fwait
pop
cld
cwtl
lahf
pop
lock
insb
hlt
test
insb
clc
test
insb
cld
test
insb
lock
xchg
jl
mov
lahf
jl
dec
xchg
mov
dec
xchg
mov
dec
lcall
pop
xchg
cld
hlt
pop
xchg
pushf
clc
pop
lcall
push
xchg
lods
clc
push
sahf
lods
lock
mov
clc
js
mov
lock
int3
clc
or
int3
lock
fdivr
sbb
fdiv
sub
in
clc
sub
cld
cld
cmp
or
enter
enter
enter
fcoms
sbb
fcomps
sbb
call
xchg
sub
call
sahf
sub
clc
xchg
cmp
clc
xchg
cmp
mov
dec
stc
mov
dec
icebp
cwtl
xchg
pop
cmc
cwtl
xchg
pop
stc
cwtl
lcall
test
insb
cmc
test
insb
hlt
ret
clc
lret
cld
ret
lock
fdivr
fcomps
fdiv
call
xchg
in
clc
call
lahf
in
lock
xchg
cld
hlt
clc
xchg
cld
clc
clc
fwait
cld
cld
clc
lahf
cld
icebp
mov
or
mov
or
cwtl
xchg
sbb
cwtl
xchg
sbb
cwtl
fwait
sbb
cwtl
lahf
sbb
test
sub
test
sub
test
sub
test
sub
mov
xchg
cmp
mov
lahf
cmp
dec
xchg
dec
cmc
dec
xchg
dec
stc
dec
lcall
pop
xchg
pop
cmc
pop
xchg
pop
stc
pop
lcall
push
xchg
insb
stc
push
sahf
insb
icebp
js
jl
js
jl
js
jl
js
jl
or
mov
or
mov
inc
sub
sbb
push
outsb
daa
push
sub
mov
insb
jg
add
add
sbb
xor
out
mov
iret
mov
sub
aaa
cwtl
fistl
xchg
scas
out
sub
mov
lods
mov
jo
mov
mov
mov
in
std
mov
or
cwtl
xchg
sbb
cwtl
xchg
sbb
cwtl
lcall
movsb
inc
and
stos
push
mov
cmpb
mov
cmp
mov
add
into
out
xchg
lock
cltd
into
cmc
push
movsb
retw
inc
loope,pn
lods
lock
fstps
test
and
dec
jl
xchg
imul
int3
inc
icebp
imul
dec
rorb
adc
in
push
inc
in
push
mov
xor
dec
test
push
jmp
dec
fs
mov
push
js
or
leave
jge
xchg
shll
xor
ret
inc
leave
lds
cli
inc
xor
push
cwtl
cmpb
xor
enter
insb
add
and
lods
mov
xchg
jnp
js
das
cmpb
adc
sub
stc
lods
into
in
cmpsb
xchg
call
inc
mov
stc
in
dec
cmc
dec
mov
clc
in
into
inc
ret
sbb
in
dec
les
cwtl
sarl
leave
mov
xchg
insl
mov
and
daa
cmpsb
mov
xchg
fadds
pusha
dec
fxch
jne
aam
jae
and
in
test
sub
in
sub
fistps
xorl
or
xor
inc
inc
dec
inc
sbb
lahf
das
push
js
adc
push
adc
cmp
test
jecxz
adcb
lcall
test
push
and
je
rol
js
lock
sbb
add
jl
int3
and
cmp
xor
and
adc
cmp
inc
sub
add
test
mull
or
out
loopne
loope
inc
sbb
icebp
lds
jge
adcl
lods
and
ljmp
in
add
sub
sbb
push
or
sbb
je
call
or
aam
mov
sub
push
loopne
jmp
mov
push
jle
push
add
test
jne
aam
adc
cmp
inc
sbb
aam
add
sbb
mov
mov
inc
test
outsb
mul
sbbl
jae
jno
mov
adc
mov
pusha
sub
jno
enter
jno
pop
pop
add
push
jno
inc
jbe
int3
ss
stos
ja
inc
lock
andl
scas
xchg
pop
lock
pop
jb
sbb
cmp
xchg
in
loop
and
outsb
jae
push
push
xchg
adc
jecxz
movsl
add
adc
jmp
pop
adc
adc
push
aaa
inc
xchg
and
mov
jnp
inc
adc
or
mov
aas
insb
dec
push
jo
jae
jno
add
push
adc
repnz
js
fisubrs
icebp
or
sbb
lahf
xchg
pop
jle
ljmp
adc
push
stos
push
rorb
pop
ljmp
adc
jmp
pop
test
jo
orb
inc
repz
sbb
push
xchg
push
add
gs
rorl
pop
xor
xchg
imul
and
and
js
and
mov
jge
dec
bound
fnstsw
mov
mov
and
adc
jb
mov
rorl
xor
push
add
imul
loope
mov
cmp
aad
and
rep
adc
nop
pop
loopne
push
add
xorl
or
test
sbb
and
pop
adc
popa
popa
outsb
loop
cmp
sub
shl
and
aaa
repz
dec
and
cmc
pushf
inc
repnz
sbb
loope
jb
adc
imul
add
sbb
and
jo
xor
adc
dec
and
xchg
push
add
xor
icebp
int3
jno
xor
xor
rcrl
pusha
in
xchg
test
adc
jb
adc
int
movsb
sub
arpl
sub
leave
jge
add
jge
push
lock
adc
inc
pop
flds
and
sbb
cltd
push
push
ret
adc
add
or
adc
add
inc
sbb
js
call
push
js
xchg
add
outsb
addr16
xor
sbb
jb
xchg
or
and
push
or
xchg
add
push
or
or
sbb
inc
mov
cmpsb
inc
jecxz
test
mov
mov
mov
fs
and
adc
fadd
fs
das
push
push
addb
adc
loope
test
icebp
testb
push
pop
mov
aas
mov
push
xor
cmp
adc
aad
test
push
inc
iret
dec
pop
adc
jmp
lahf
mov
loopne
mov
adcl
push
leave
jge
xor
call
or
pop
and
adc
arpl
pop
pop
add
addr16
xorb
push
push
push
inc
xor
pop
sbb
jbe
xchg
js
rolb
jmp
sub
sbb
imul
dec
jbe
aas
shlb
mov
push
sbb
jne
lret
adc
inc
mov
ss
push
jno
or
fs
pushl
adc
pop
push
repnz
or
popa
xchg
fnstenv
movsl
js
in
mov
pop
xchg
mov
adcb
jb
inc
inc
push
andl
and
popf
cmp
mov
push
and
push
outsb
lock
loope
push
sbb
fs
addb
subl
bound
and
push
pop
lahf
add
xor
inc
in
push
mov
arpl
leave
jge
or
and
aam
push
and
out
push
jne
dec
inc
scas
subb
mov
shll
cmp
loop
sbbl
cltd
sahf
sub
jb
adc
add
adc
repnz
jb
pop
test
lds
ret
sahf
mov
push
popa
movsl
orb
lock
loopne
xor
cmp
sub
jnp
add
test
cmc
sbb
out
pop
pop
push
sub
les
push
xor
mov
mov
lea
push
sysenter
push
push
mov
mov
adc
lea
fwait
mov
pushf
jp
popf
std
dec
sahf
cld
dec
lahf
decl
sub
inc
popa
cmpsb
inc
inc
and
push
inc
aad
dec
dec
mov
icebp
dec
mov
repnz
mov
lods
cld
dec
mov
lods
jmp
lods
pop
add
out
hlt
mov
call
or
data16
add
xchg
inc
lret
cltd
push
in
inc
jnp
fisubs
add
cmc
pop
or
sbb
mov
sub
mov
imul
arpl
imul
jae
jl
or
and
dec
movsb
daa
nop
inc
add
dec
or
mov
and
push
push
pop
cmp
dec
sub
pop
adc
rcrl
pslld
jbe
push
sub
xlat
push
add
or
sahf
mov
mov
mov
xadd
cwtl
nop
popf
bnd
das
mov
xor
fistl
fs
xchg
out
mov
or
aam
cmpsl
add
mov
add
shll
inc
push
adc
pop
cmpsl
and
dec
or
insl
rcrb
adc
sub
mov
or
jecxz
pop
data16
scas
inc
leave
inc
in
cmp
outsl
fcmove
jae
mov
xor
leave
add
es
mov
imul
mov
inc
add
cwtl
out
cmp
rcl
aaa
add
sub
xchg
js
pop
les
imul
push
add
add
inc
or
imul
mov
shrl
arpl
insl
xchg
jo
or
inc
mov
cmp
shr
xchg
aas
iret
and
stc
lods
xlat
in
pop
lock
arpl
jb
and
inc
inc
icebp
in
jecxz
test
mov
lds
jbe
pop
insl
jns
shlb
add
xchg
lock
or
ds
dec
incb
ret
and
sub
shrl
push
iret
shrl
pop
and
cs
xchg
inc
jo
scas
inc
roll
orb
xchg
dec
hlt
mov
dec
testb
dec
clc
mov
dec
cli
mov
dec
cld
mov
dec
decb
lahf
dec
addb
xchg
mov
pop
iret
jae
mov
cmpsb
cltd
or
in
arpl
rcll
aad
lods
out
pop
and
lret
leave
ret
fbstp
dec
loope
stc
add
lret
xchg
jno
fwait
aad
in
xchg
dec
jle
loope
mov
imul
mov
and
sbb
cmc
push
pop
das
imul
insb
inc
and
hlt
shll
sbb
cmp
call
push
pusha
jmp
rolb
sub
cmc
add
scas
mov
push
adc
jo
dec
jno
mov
add
iret
cmpsb
inc
aaa
dec
lods
mov
js
push
mov
inc
xchg
push
lret
mov
add
cmp
add
pushf
sti
mov
lahf
ret
mov
or
popa
or
mov
dec
js
aad
add
sbb
sbb
pop
aam
aad
and
and
and
aam
jecxz
xchg
xor
mov
dec
loope
fs
pop
and
rorl
out
add
sti
add
ret
into
mov
data16
pushf
adc
xchg
movsb
aam
adc
pop
xchg
or
xchg
or
jl
mov
dec
inc
rorl
fldt
mov
adc
sub
sub
pop
mov
push
cltd
cmpl
xchg
xor
call
hlt
bound
aam
jne
jle
inc
sub
cmp
sub
or
jne
hlt
jmp
outsb
jmp
rcrb
add
ss
cld
inc
jp
xor
cmp
rcrb
xor
or
push
rolb
inc
fnstsw
adc
cltd
arpl
daa
mov
in
mov
dec
pop
out
xor
dec
std
icebp
pushf
ljmp
adc
xchg
or
xor
cmp
mov
fbstp
xchg
or
imul
pusha
sub
inc
xchg
ret
dec
sbb
mov
fmull
xor
jle
sub
rcl
es
addl
in
dec
je
out
and
out
mov
negb
outsb
pusha
inc
mov
jb
add
xchg
dec
and
adc
dec
xor
push
call
push
inc
jns
inc
pop
xchg
arpl
je,pn
int3
icebp
pop
pop
and
push
push
push
pop
sub
add
pop
or
mov
and
mov
add
neg
pop
rcrb
pop
data16
popf
ud2
ljmp
mov
je
jle
loop
addb
inc
aas
xchg
cltd
fcoms
test
add
lret
or
add
xchg
dec
popa
mov
pop
or
mov
pop
and
ret
mul
hlt
sub
insb
movsb
cmp
push
or
std
into
out
push
jo
sbb
pop
test
scas
add
and
lcall
xor
and
stc
push
repnz
fstl
popa
ss
loope
dec
xor
lods
mov
test
or
sub
push
stc
je
dec
sub
rorl
aaa
stc
push
push
push
jmp
ret
cli
dec
add
mov
mov
shrl
push
and
inc
mov
add
or
mov
xorb
push
movsb
movsl
add
sub
scas
push
push
mov
or
lcall
push
enter
dec
movl
loop
dec
pusha
test
dec
cmpsl
pop
loopne
loopne
cld
dec
or
jae
jl
loope
inc
pop
cwtl
dec
xor
mov
ljmp
dec
mov
andb
xchg
ror
fs
into
dec
mov
add
rclb
mov
pop
jecxz
push
xor
arpl
hlt
shll
icebp
mov
mov
imul
repnz
cmp
dec
and
in
add
cmp
shlb
lcall
inc
insl
inc
dec
lretw
jmp
pop
dec
adc
lret
popf
arpl
aam
add
pop
out
add
aaa
ficomps
mov
jno
test
out
cmp
sub
sub
addr16
bound
mov
and
inc
arpl
cmp
add
das
sub
lock
xchg
lahf
cmpsb
add
cli
push
or
xor
insl
adc
test
pop
push
rol
xor
cmp
lea
xchg
fistpl
mov
lods
or
iret
jnp
repnz
int
push
jae
lahf
addb
int3
adcl
dec
mov
or
adc
sahf
out
sbbl
jp
cli
mov
adc
mov
jno
insl
push
or
inc
inc
movsl
mov
fildll
adc
outsb
sbb
insb
xchg
mov
insl
adc
rol
lea
cmc
jns
pop
nop
adc
int
dec
cmp
and
push
sbb
inc
jb
mov
xchg
ret
mov
and
sbb
stc
mov
int3
mov
repz
mov
adc
cmp
int3
aad
and
xchg
xchg
in
ds
les
and
mov
pop
sub
cmc
push
push
adc
sbb
inc
jne
sub
lret
movsb
addb
adcl
jge
jl
push
sbb
popa
cmc
inc
inc
pushf
or
xchg
pop
sbb
cmp
cmp
pop
shl
xor
sbb
gs
pop
jo
lock
clc
sub
mov
pop
imul
ljmp
mov
mov
movsb
sub
lods
into
and
enter
mov
mov
sub
xchg
out
lods
sub
orl
loop
xor
outsb
sub
cmpsl
es
js
jmp
jns
pop
xor
sbb
bound
xchg
subb
push
cmpsb
cmp
out
lods
xchg
dec
lcall
imul
das
pop
xor
test
pop
add
in
inc
push
aaa
jb
jecxz
or
sub
inc
out
icebp
mov
jae
lods
ret
subl
jg
test
or
pop
notb
inc
loopne
mov
sub
ret
sub
mov
jg
out
lret
fldpi
mov
lea
mov
icebp
repz
cs
ret
dec
jnp
divl
cmpsl
flds
xor
gs
int3
cmp
cli
cmpb
pop
xchg
adc
pop
or
hlt
cmp
mov
cwtl
and
enter
repnz
scas
insb
mov
pop
loop
push
xchg
or
sub
sub
mov
insb
lahf
lea
or
lods
bound
sbb
sub
repz
stos
dec
out
mov
repnz
xor
aad
mov
xor
xor
bound
nop
clc
adc
pop
sti
lds
push
mov
push
sub
add
xchg
mov
jb,pn
fxam
jae
incl
or
jecxz
mov
dec
lcall
xor
xchg
mov
xchg
push
in
dec
daa
outsl
movsl
in
in
add
xchg
push
sub
adc
movsl
push
ljmp
jns
mov
ret
mov
xor
mov
mov
test
pop
cmpsb
mov
loope
pop
test
inc
sub
cmp
in
xchg
mov
cld
mov
mov
sbb
add
enter
mov
xchg
jl
int
push
cmc
cmpsb
out
xchg
sbb
sub
jae
ret
sarl
popa
das
xchg
mov
or
xchg
push
push
mov
push
dec
sbb
xchg
mov
cmp
dec
ljmp
enter
mov
xor
daa
push
pop
add
loopne
jae
or
out
jae
movsb
insb
ret
subl
dec
or
out
sub
int3
cmpsb
jg
sub
cli
add
cmp
sbb
mov
and
movsl
pop
das
in
ret
mov
movsl
and
out
addr16
mov
cmp
cmc
into
cmp
adc
mov
dec
inc
pop
push
add
loopne
popl
or
loop
loop
sub
pop
cwtl
sub
jecxz
and
pop
adc
push
sbb
push
and
jb
cmp
add
sub
sbbb
lcall
jne
dec
loopne
fistps
inc
cmpsb
mov
inc
dec
stc
cmc
sbb
outsb
ret
dec
sub
sub
sub
jno
or
sub
aam
adc
dec
add
sbb
in
lock
je
inc
test
adc
xor
sub
mov
outsb
mov
sub
test
jl
das
pusha
mov
mov
and
fsubrs
xchg
or
xor
dec
test
cwtl
mov
rcl
and
adc
in
mulb
push
js
pop
arpl
sbb
enter
cmc
push
pop
mov
push
inc
adc
push
sbb
xchg
ret
inc
jmp
outsl
jecxz
and
sub
xorps
jo
fstpt
and
or
inc
jb
push
sbb
in
dec
les
pop
jge
nop
add
dec
mov
insb
repz
and
testl
mov
dec
das
hlt
add
mov
or
push
clc
jnp
jo
adc
dec
jns
cmc
pop
mov
rorl
sar
lods
mov
and
sub
int
dec
sub
xchg
rcrl
test
and
xchg
or
dec
repnz
xor
repnz
inc
es
pusha
mov
adc
lock
ret
sbb
and
add
sub
movsb
or
adc
cwtl
or
dec
ret
adc
inc
data16
int
leave
into
and
dec
es
sub
jns
cmc
iret
and
loope
mov
push
pop
push
iret
inc
push
dec
in
dec
out
rolb
pop
imul
fxch
xchg
adc
sub
push
es
sub
out
sub
sub
inc
repnz
dec
and
dec
adc
rolb
push
js
fistpl
fxch
gs
inc
outsb
xchg
inc
sub
stc
fmull
jb
ffree
xlat
daa
nop
popa
shrl
adcb
js
lahf
or
or
inc
push
sbb
pusha
dec
push
dec
inc
test
jecxz
ret
dec
sub
mov
mov
arpl
and
int3
sub
js
jmp
fidivrs
das
test
ret
adcb
fsubrs
mov
and
mov
les
test
pop
cltd
adc
jmp
imul
inc
sub
jle
cmp
test
xor
or
movsl
push
or
orb
ss
addr16
imul
mov
daa
add
mov
ficomps
sub
test
or
jne
sub
rolb
push
mov
xchg
inc
rorb
push
in
rorl
adc
jl
xor
and
jle
sub
dec
and
test
push
xchg
inc
push
adc
fisttps
xor
inc
cmp
xor
inc
and
clc
faddl
mov
and
mov
stc
and
mov
ja
xchg
inc
jne
imul
fadds
lock
fxch
sbb
cmc
pop
mov
jge
xor
addb
es
ret
adcl
add
movsl
adc
in
jbe
jbe
xchg
repnz
push
inc
or
cmc
pop
add
ret
inc
and
idivl
sbb
loopne
shr
sub
or
test
xchg
or
sbb
add
dec
mov
push
sub
mov
dec
dec
int3
xchg
subl
adc
xchg
repnz
jo
shrl
mov
or
xor
inc
aam
enter
adc
inc
mov
jne
fs
arpl
adc
sbb
and
push
and
jns
lahf
int3
sub
add
inc
andb
and
xchg
dec
mov
sub
orb
test
stos
lcall
jne
or
adc
xchg
inc
sub
cld
lods
sub
mov
or
loop
enter
cmp
dec
adc
dec
inc
dec
idivb
nop
xchg
inc
rolb
in
inc
push
dec
and
imul
and
xchg
sub
fildll
and
or
and
xor
pop
loopne
dec
push
inc
xchg
cwtl
mov
nop
bound
mov
movsl
sbb
repnz
bound
push
lock
jno
sbb
cmovae
cwtl
or
adc
dec
inc
dec
inc
dec
mul
popf
xchg
arpl
inc
cltd
iret
test
das
popa
inc
xlat
xchg
and
sub
jbe
push
jmp
mov
andl
or
mov
cmp
nop
dec
xchg
inc
push
fsub
adc
sub
xchg
adc
popa
inc
dec
es
faddl
inc
jge
aad
sub
add
jae
jb
sbb
xchg
or
jecxz
and
pop
jmp
dec
push
sbb
pop
pushf
xor
inc
test
bound
dec
es
mov
sub
jp
gs
add
and
jae
mov
test
push
mov
xchg
add
or
nop
fsubl
lods
ds
jo
dec
sbb
lods
or
push
lds
mov
cmp
mov
ja
push
cltd
cmpsl
sbb
xchg
xchg
jle
loope
xchg
test
sub
push
xor
add
xor
mov
cmp
pop
out
stos
or
pop
je
cltd
push
push
pop
je
mov
sub
dec
xor
xor
outsb
and
out
xor
gs
flds
mov
test
pusha
hlt
jne
ret
jmp
mov
stos
daa
add
dec
xorl
mov
insl
pop
cs
les
testl
daa
rclb
and
cmp
test
push
xor
adc
in
scas
dec
or
into
ljmp
dec
ror
out
mov
dec
pop
xchg
xchg
popf
and
lret
lret
mov
stos
fistl
xor
out
xor
and
xor
iret
xchg
in
xor
push
pop
push
jns
orb
xor
cmp
dec
insl
jmp
lret
test
in
ror
cmpsb
pushf
and
inc
scas
lret
push
cmp
mov
mov
cmp
mov
or
push
mov
dec
adc
nop
push
add
add
lock
and
mov
ja
repnz
fs
xchg
loopne
mov
data16
mov
sub
scas
jb
and
into
dec
jae
shr
and
stc
add
lock
pop
sbb
adc
fmull
cmc
sub
lock
and
int
inc
pushf
popf
dec
and
jp
mov
push
push
add
pop
push
adcb
push
loop
add
cmp
insb
sub
sub
mov
rcll
imul
sbb
enter
add
lret
out
xor
and
lods
arpl
mov
outsl
lea
data16
fstps
jp
xchg
xchg
push
fisttpll
mov
outsl
test
divl
mov
fs
cmp
or
add
inc
adc
imul
repz
mov
mov
into
xorb
sbb
or
fcom
int3
into
cmpsl
mov
test
and
pop
int3
xchg
xor
xchg
pop
repz
loop
in
cmp
enter
cs
js
aaa
mov
ljmp
fistpll
loop
ljmp
loopne
pushl
movsb
test
pop
mov
nop
sbb
jecxz
and
out
shr
or
push
jae
inc
xchg
push
mov
and
push
adc
mov
out
shlb
inc
and
iret
ja
lock
cmp
xorb
mov
scas
mov
cmpsl
fwait
lock
xchg
cmpsl
rep
dec
sbbl
les
cmpsl
shlb
sbb
shlb
or
push
or
add
jmp
pushf
push
mov
rorb
add
std
add
xor
inc
mov
fwait
pop
jno
jb
mov
or
lock
dec
push
adc
cltd
out
or
inc
data16
adc
cmc
frstor
xor
lods
rolb
fidivs
test
or
mov
sahf
dec
aam
push
add
dec
mov
sbb
adc
and
mov
nop
in
adc
or
pushl
mov
aad
filds
cmp
mov
push
lods
repnz
xor
movsb
iret
xor
sbb
mov
fscale
ja
jg
in
jns
inc
rcrl
pop
add
psadbw
repz
adc
push
icebp
popa
popl
cmp
orb
lock
decb
and
je
add
in
add
jae
mov
or
push
pop
add
push
mov
imul
inc
dec
xor
or
inc
dec
push
dec
imul
inc
data16
jae
cmc
cld
and
jo
xchg
jge
and
or
adc
sub
loop
gs
stc
in
inc
in
push
test
mov
cltd
leave
xor
inc
and
mov
push
jae
popa
adc
pusha
rcr
jns
test
jecxz
mov
or
inc
and
sbb
dec
jbe
jecxz
sahf
xor
inc
jns
xor
dec
sub
repz
test
sbb
adc
fldcw
and
or
stc
dec
rolb
fnstsw
shr
add
adc
dec
sub
lds
cs
testb
and
xchg
sbb
sub
sub
pushf
or
jne
jns
orb
push
or
xchg
and
jmp
inc
inc
jno,pn
in
mov
sbb
sbb
inc
popl
or
mov
fs
mov
imul
sbb
in
arpl
dec
das
icebp
sbb
inc
imulb
xchg
jns
cwtl
loop
nop
xor
stc
daa
test
add
xchg
or
cmc
push
jmp
dec
xchg
sub
mov
cltd
and
xchg
pop
xchg
pop
out
sbb
mov
add
sub
dec
aad
jns
mov
jno
xchg
subb
jmp
pusha
xchg
dec
sub
hlt
sub
add
loop
sub
cs
rorl
dec
and
test
dec
data16
dec
mov
imul
sub
inc
and
and
jp
lds
and
xchg
add
clc
es
or
sbb
and
xor
outsl
push
inc
sbb
inc
sbb
dec
sub
std
cmp
inc
and
xorb
mov
mov
and
and
mov
lds
jns
mov
hlt
inc
out
insb
test
shrb
dec
mov
aad
movsb
popa
ret
dec
and
and
inc
jns
add
leave
and
add
jp
loop
add
dec
test
mov
nop
dec
mov
xor
dec
cs
jl
add
aas
adc
adcb
daa
xchg
or
jne
dec
call
mov
push
loopne
les
inc
das
cmp
push
daa
mov
sub
sub
mov
or
dec
mov
loop
dec
je
push
push
addr16
cltd
enter
insb
mov
and
clc
lods
adcl
xchg
sub
add
test
or
enter
test
sbb
loopne
fs
xchg
mov
imul
adc
inc
dec
sub
cli
cmp
mov
jbe
add
in
push
sub
fidivrs
xchg
fsubs
xchg
or
in
movsb
nop
and
xchg
psubb
popa
idivb
in
data16
jns
mov
es
xchg
xchg
sub
fwait
or
aad
sbb
rcr
jge
jb
inc
inc
test
popa
mov
and
hlt
jl
add
push
and
jo
push
and
stc
sub
push
repz
sbb
pushf
or
dec
jb
movsl
pop
stc
in
pusha
inc
test
or
lock
or
xor
dec
and
sbb
xchg
sub
adc
dec
and
jno
leave
sub
test
cwtl
or
dec
rolb
sbb
inc
out
in
lcall
into
and
dec
sub
clc
cld
adcl
loope
or
xor
and
or
inc
sbb
inc
inc
es
jo
ret
dec
jns
inc
sbb
negl
xchg
popf
push
pop
mov
pop
sub
or
lcall
lds
inc
enter
andb
int3
adc
pop
mov
and
jo
popa
mov
add
push
or
cltd
or
test
cmpsb
cmp
add
inc
dec
int3
aad
jge
lock
pop
int
dec
popa
fcompp
das
je
arpl
xchg
or
gs
imul
jbe
xchg
dec
cltd
leave
movsl
sbb
daa
sar
aam
and
push
imul
loope
dec
sub
ret
cs
or
inc
orb
sbb
mov
sub
addb
pop
aam
orl
imul
lea
cmp
inc
rcrl
and
fsubs
dec
adc
pusha
dec
and
ss
adc
inc
jns
aad
xchg
bound
pushf
mov
sub
and
dec
mov
das
adc
pop
and
enter
and
xchg
adc
call
es
rorb
push
outsl
xor
ret
in
mov
and
sub
dec
adc
mov
andb
cmc
test
inc
test
loope
fsub
adcl
shll
cltd
adc
sbb
inc
or
loope
sub
add
or
sub
fs
in
and
flds
and
insb
add
leave
std
adc
clc
add
xchg
mov
nop
gs
add
xor
add
xchg
addr16
adc
mov
sbb
dec
pusha
test
negl
inc
mov
mov
inc
nop
test
xchg
xor
cmc
mov
push
push
push
aam
cmc
inc
sub
jne
jno
js
sbb
mov
test
leave
dec
xchg
rcr
mov
in
and
add
inc
popa
sbb
push
js
cmp
jno
cmp
pop
sbb
arpl
and
lea
adc
test
in
nop
stc
or
dec
icebp
shlb
xchg
lods
in
in
mov
cmp
cmp
test
mov
mov
repz
adc
dec
xor
and
test
xchg
imul
shl
rcrb
adc
inc
add
stos
jecxz
pop
push
mov
xor
sbb
ffree
or
aad
sub
inc
mov
movsl
int
cld
rcrl
sub
ret
cmpsl
lods
sub
pushf
cmpsb
iret
mov
pusha
roll
mov
lcall
mov
loope
int
mov
mov
xlat
shlb
mov
xchg
sub
mov
xor
sub
pop
mov
xchg
xor
stc
xor
int
xchg
xchg
jns
movsl
shll
adc
cld
rcr
stc
cmpb
add
loopne
cmpsb
shl
jmp
jae
inc
loopne
add
sbb
in
std
lods
or
in
nop
movsl
mov
sub
faddl
loope
mov
int3
mov
cmp
cltd
in
jne
sub
repnz
test
popa
divps
xchg
jne
pop
dec
and
out
jne
jl
cs
int3
test
in
jno
sbb
dec
sahf
add
call
mov
mov
mov
add
xchg
loopne
add
movsl
inc
fnstsw
pop
scas
iret
loopne
cmpsb
je
nop
loope
cmp
cltd
add
icebp
sbb
sub
loop
mov
movsl
nop
and
or
xor
sub
xor
dec
mov
test
pop
cltd
mov
and
sub
sbb
rcrl
arpl
add
stos
hlt
icebp
dec
xor
sbb
xor
pop
aas
fwait
movsl
sub
jae
aad
xchg
xchg
inc
enter
es
into
ror
rcrl
dec
pop
cmpsb
stc
stos
inc
fadd
adcl
je
jecxz
xor
repnz
add
dec
daa
insl
es
lods
mov
lods
insl
pop
clc
lcall
fadd
dec
sub
and
stos
lret
xchg
xorb
stos
lret
jns
ss
es
or
lds
push
inc
lods
leave
sbb
inc
inc
add
shll
and
fadds
bound
push
lods
mov
aam
leave
jno
ret
jl
lcall
inc
inc
mov
adc
mov
test
mov
xlat
inc
inc
mov
rorl
adc
mov
lods
push
into
mov
sub
sub
pusha
and
cmp
out
out
jge
or
mov
aad
in
or
sub
cmp
lock
push
out
sbb
jno
ret
push
icebp
bswap
int
loope
pop
popf
movsl
jmp
repnz
js
mov
movsb
icebp
dec
popl
cmp
inc
mov
cmpsl
les
xor
popa
lahf
jmp
xchg
xlat
mov
sbb
movsb
fistpll
cmp
lods
xchg
mov
shl
jae
fwait
ret
insl
fists
hlt
lea
test
add
test
test
addr16
loopne
in
mov
sbb
jl
inc
push
mov
mov
inc
or
std
push
movsl
push
je
xchg
loope
test
cs
sbb
ret
cli
jge
loope
push
andb
add
cmp
cmpsb
adc
mov
add
mov
popa
dec
inc
inc
pop
enter
lea
inc
rclb
adcb
aam
lods
mov
pop
dec
xchg
dec
dec
js
pop
int3
fs
sub
aad
pop
push
mov
cmc
mov
fimull
pop
repnz
shlb
xchg
call
shlb
fs
adc
lret
in
les
xlat
jo
jb
mov
adc
vmovntps
cmp
mov
loopne
test
mov
cmp
and
inc
xor
cwtl
arpl
out
cmp
aam
call
cwtl
bound
adc
pop
inc
imul
and
dec
ret
jns
nop
pusha
xor
cmc
push
hlt
sahf
leave
in
pop
mov
test
pop
xchg
push
jmp
ffree
nop
icebp
andl
push
mov
mov
add
push
jne
push
movb
jecxz
insb
and
xchg
xor
aam
inc
add
jge
mov
imul
or
shll
dec
xor
mov
inc
sub
dec
inc
sbbl
pop
jmp
test
test
daa
fucom
movsl
in
lods
movsl
test
push
loopne
add
inc
add
lret
add
ss
and
lods
adc
mov
xchg
push
es
mov
pop
cmp
lock
pop
sbb
inc
inc
subb
inc
gs
inc
lods
sbb
mov
cmp
shlb
shlb
inc
and
cltd
inc
ret
xor
add
aam
pop
xor
pop
sub
mov
push
stos
fistl
ds
push
test
bound
mov
dec
imul
pop
cmpl
rol
dec
jecxz
fcompl
loop
push
sahf
add
add
pusha
xor
test
insb
lret
jp
cs
ljmp
iret
rorl
loopne
jg
or
inc
hlt
loopne
and
mov
rorl
inc
fucomp
add
mov
inc
adc
mov
jb
call
rcll
fadds
aam
jge
sbb
punpcklbw
adcb
rol
outsl
shrb
icebp
jb
adc
loopne
je
xor
add
cmpsl
dec
sbb
js
inc
sub
push
test
stos
add
dec
sub
leave
xor
add
je
inc
or
loopne
add
orl
stos
lods
in
mov
mov
insl
jmp
xchg
jno
aad
adc
into
xlat
int3
scas
xchg
sub
add
adc
aaa
mov
rcrb
xchg
rorl
pop
loop
add
ja
mov
rcr
mov
jbe
push
push
insl
inc
stc
outsb
enter
sbb
and
mov
sub
lcall
mov
mov
ret
inc
and
pusha
sub
enter
sbb
mov
or
daa
mov
jae
mov
je
dec
and
jno
xchg
or
or
ret
add
xchg
mov
xchg
pop
loope
inc
loope
and
outsl
sbb
shlb
lds
repnz
xchg
jno
and
xchg
in
xor
xchg
pop
dec
push
add
mov
xor
cltd
andb
hlt
stc
stos
lds
mov
push
dec
dec
mov
bound
leave
mov
xchg
mov
jecxz
aad
sbb
mov
and
mov
fsub
xor
or
mov
mov
shlb
lret
jne
inc
jmp
xchg
or
popa
aad
lds
gs
mov
lods
ret
xchg
les
stos
lock
ja
mov
lea
adc
cwtl
mov
rcl
mov
mov
or
les
imul
push
sub
mov
mov
in
icebp
stc
mov
in
shl
shll
lods
add
test
mov
xor
mov
lds
sbb
or
mov
ret
push
mov
dec
in
nop
xchg
mov
cwtl
inc
add
adc
adc
inc
test
mov
mov
ret
bound
push
pushf
shl
test
and
push
rcrb
jle
lods
in
push
adc
adc
shrl
into
or
test
inc
sbb
in
xor
mov
fmuls
push
adc
cmp
outsb
push
push
dec
sub
rcl
ret
xchg
jp
lret
or
adc
dec
sbb
xor
orl
mov
out
adc
push
sbb
pop
gs
cli
sub
test
stos
and
iret
jns
xchg
fs
pusha
sbb
pusha
xchg
mov
jne
aad
sbb
xchg
roll
shrl
hlt
loopne
gs
nop
xlat
scas
or
xchg
jecxz
dec
stc
in
xchg
jae
cmc
push
mov
sti
lret
ret
xchg
mov
stos
or
xchg
xor
ficomps
adc
and
xor
mov
outsb
aam
addb
xor
xor
hlt
mov
xchg
in
shlb
sbb
inc
in
pop
inc
cmp
or
js
outsb
and
mov
pushf
lea
xorl
andb
xchg
xchg
lcall
aaa
outsl
pop
and
shlb
jecxz
mov
mov
mov
imul
ss
add
cs
push
lret
add
loopne
dec
sbb
sbb
cwtl
mov
hlt
pushf
shrl
cmp
adc
or
imul
loope
std
popl
dec
pop
clc
xorl
mov
aad
mov
add
dec
lcall
inc
mov
cmp
jecxz
arpl
push
push
or
inc
test
cltd
insb
and
aad
test
aad
or
mov
mov
mov
mov
adc
sub
adc
inc
push
arpl
es
out
movsb
pop
sub
cmp
and
inc
inc
add
or
xor
push
sub
movsb
into
lahf
ljmp
int3
ss
and
adc
push
add
push
pop
cs
dec
aaa
cmovle
pop
pop
add
inc
inc
adc
add
jp
jecxz
lahf
jo
imul
inc
arpl
add
sbbb
ret
sbb
mov
fs
or
add
dec
dec
push
and
sub
nopl
mov
out
sbb
adc
insl
xchg
addr16
imul
adc
cltd
nop
push
ja
dec
leave
add
or
dec
adc
jg
aam
mov
aas
movsl
loop
add
jge
inc
fs
xor
imul
sbb
push
cld
mov
fsubrs
xchg
cltd
mov
pusha
mov
in
stos
fbld
mov
mov
jl
aad
in
pushf
mov
daa
inc
xchg
iret
call
enter
shlb
lret
ret
fistpll
adc
mov
test
or
push
and
push
push
pop
jecxz
cmp
inc
pop
add
cmp
inc
and
pop
cmpsb
and
inc
xor
dec
shll
add
sbb
pushf
es
data16
pop
leave
outsl
pop
test
cld
lahf
adc
jns
test
mov
push
or
push
or
cmp
int3
loope
push
shlb
xchg
lock
cmpb
and
xchg
repnz
lahf
push
pop
lock
jecxz
inc
subb
outsb
mov
dec
movb
jb
pop
sarb
addr16
addr16
into
inc
cmpsl
loop
pusha
xor
xor
faddl
mov
nop
lock
mov
call
xchg
int
insb
sub
movsl
pushf
aam
popf
test
int
jo
cltd
xor
xchg
jbe
jge
outsb
pop
rorb
or
cmp
daa
repnz
xlat
leave
or
shl
and
jl
cmp
imul
les
outsl
idivb
arpl
jne
bound
js
xor
add
mov
adc
hlt
aam
mov
shlb
sbb
lods
push
cmp
loopne
jge
jbe
insl
lods
xor
nop
dec
add
imul
sub
or
add
stos
push
addl
add
push
ljmp
cmpsb
inc
dec
pusha
push
sub
sub
sbb
popa
sbb
sub
lret
mov
cs
outsl
push
ficoms
lahf
add
es
loop
pusha
dec
outsl
std
jmp
int3
in
xchg
inc
push
cmpsb
shlb
inc
xchg
inc
push
call
in
out
dec
rorl
mov
repnz
or
sbb
jbe
mov
arpl
sub
iret
pop
es
dec
push
cs
dec
sub
testl
bound
or
ss
and
mov
xchg
add
mov
sub
mov
hlt
inc
addb
or
xchg
test
fisubrs
mov
rorl
out
call
push
inc
lds
imul
js
icebp
pop
jae
roll
sbbb
dec
outsl
jb
incb
push
inc
cmp
push
push
push
ss
cli
dec
mov
sarb
rorb
decb
or
jbe
fisubrl
shll
pushf
cli
lds
lret
adc
jb
inc
add
or
and
xor
arpl
xor
xlat
cmp
adc
jecxz
mov
mov
push
mov
cmp
aas
cli
shll
sbb
push
fwait
mov
xor
cli
jp
cmpsl
xchg
xor
ret
xchg
inc
cli
ljmp
and
push
sbb
adc
push
cmp
mov
out
mov
push
cli
mov
jb,pt
outsl
or
push
xchg
cmp
cli
insb
mov
and
out
std
adc
jne
xor
ss
mov
add
loope
je
mov
shr
std
cld
movsb
fsubrs
test
mov
subb
jmp
and
xchg
outsb
out
mov
cmp
sub
fdivrl
inc
and
jns
sub
adc
enter
insb
sub
cld
in
test
cmp
ret
idiv
stc
mov
cmp
subl
sub
push
orl
into
icebp
std
shll
lahf
hlt
bound
shll
mov
xchg
and
pop
xchg
stos
jmp
mov
loopne
sub
inc
push
add
or
dec
jg
jp
and
sbb
sub
test
call
stos
mov
rcrl
mov
pop
mov
push
push
sbb
push
inc
and
stos
arpl
mov
mov
mov
dec
enter
xor
lret
mov
mov
arpl
push
jae
aaa
stos
adc
jo
mov
mov
cmpsb
pusha
lock
adc
dec
add
sub
fs
inc
rcr
mov
ds
xchg
scas
add
jne
jle
or
dec
cmp
jae
cmpsb
popf
dec
push
dec
mov
xchg
fidivrl
and
push
lock
out
dec
imulb
inc
xchg
mov
movb
nop
stc
rcrl
fmuls
icebp
cld
adc
lret
mov
mov
mov
cmp
je
loop
and
out
pop
scas
lahf
mov
lock
push
fwait
mov
insb
xor
push
or
call
ljmp
xchg
iret
and
or
pop
cs
sahf
ret
jg
sub
dec
dec
sub
inc
pushf
mov
mov
mov
mov
or
jno
or
pop
cmovo
pop
jecxz
pop
pop
aaa
pop
dec
ds
arpl
pop
jmp
stos
cmp
out
cld
mov
pop
push
js
adc
dec
dec
jb
sbb
mov
push
rolb
mov
add
and
inc
and
lret
xchg
cmpsb
jecxz
dec
sbb
sub
in
xchg
adc
mov
xchg
xchg
in
inc
lods
and
les
push
xchg
xor
add
orb
mov
movsb
xchg
shll
in
jg
loop
sub
inc
dec
or
je
add
enter
xchg
in
int
int
mov
les
loop
mov
or
xor
and
bound
pusha
xorl
dec
in
inc
jl
sbb
cli
loope
jge
and
ds
push
dec
bnd
sub
addr16
push
inc
add
add
jb
inc
adc
xor
sub
xchg
addl
mov
mov
mov
leave
in
cld
out
xchg
mov
jge
xchg
into
sti
pop
fs
cmpsl
pop
sahf
mov
pusha
je
jmp
outsb
inc
ret
jb
stos
bound
subl
stos
ret
add
xchg
sub
repnz
dec
add
aad
jl
test
mov
push
out
ret
jmp
xor
out
lret
cmc
xor
nop
call
mov
stc
lock
cwtl
movsl
sbb
mov
faddl
mov
loopne
cmc
test
inc
in
mov
js
cmc
pop
mov
aam
jl
mov
leave
jno
fstps
call
jo
pop
mov
daa
scas
inc
hlt
inc
pop
dec
add
shll
mov
fsubrp
iret
inc
je
mov
or
mov
es
lcall
push
adc
mov
out
pop
push
es
ja
inc
lcall
pop
sub
in
call
dec
add
loopne
cmpsb
pop
iret
lret
adc
xlat
ljmp
push
xor
popa
outsl
inc
and
add
and
xchg
pop
and
mov
jne
jp
pop
lahf
add
orl
sub
push
aaa
dec
sarl
jae
push
pop
pop
lahf
into
movsb
clc
bound
jae
push
mov
jge
outsl
jnp
out
or
pop
add
jmp
jmp
addr16
adc
ret
in
pop
scas
lock
cmp
arpl
and
test
jno
xchg
push
add
aas
dec
dec
je
addr16
pop
loopne
mov
imul
and
cmc
mov
and
pop
xchg
dec
inc
sub
jl
or
test
jns
and
clc
dec
aam
in
adcl
in
jmp
fdivr
push
cld
mov
lods
lret
inc
dec
sub
add
dec
push
dec
sbb
test
add
cmp
cmpsb
bound
mov
out
fucomi
jo
decl
or
jle
add
sahf
add
and
pop
ds
xor
and
adc
pop
out
arpl
adc
sub
mov
popa
jno
cwtl
xor
dec
lods
cmc
popa
adc
in
loopne
sahf
enter
pop
mov
loope
add
fucomip
sarb
ljmp
fdivs
mov
lods
inc
and
cmp
xchg
ljmp
fisttpl
push
mov
jle
inc
sbb
outsl
dec
mov
inc
lret
sub
cmp
add
pop
push
das
add
adc
xchg
xchg
into
jecxz
addr16
das
or
fdivl
sub
pop
dec
or
adc
loopne
or
xor
jl
xor
jmp
push
cmp
mov
adc
lret
int
xor
sbb
out
mov
stos
sub
push
nop
xor
popa
cmp
push
and
cmp
jp
mov
or
lea
inc
aam
movsl
inc
icebp
movsl
mov
mov
je
clc
inc
in
cmp
xchg
or
jmp
jle
pop
dec
sub
adc
dec
xor
js
adc
jne
or
clc
or
in
in
clc
test
adc
dec
call
mov
rorb
sub
lea
sub
or
cmp
mov
test
pop
imul
mov
fmuls
push
test
shll
mov
int3
repz
mov
add
mov
adc
xor
sub
jnp
pop
dec
add
inc
pop
xor
lret
mov
outsl
mov
popf
jnp
adc
push
out
and
mov
adc
out
lret
dec
scas
or
lahf
xor
push
mov
push
pop
pop
lcall
out
cmp
dec
inc
jg
fcmovbe
popl
xchg
mov
ret
lcall
mov
cmpb
daa
out
lahf
cmpsl
fildll
shr
lcall
dec
scas
inc
jle
sbb
lret
or
jne
jb
fwait
mov
mov
sbb
dec
lahf
add
push
rcr
xor
fsubrs
mov
call
xchg
lods
icebp
lods
sar
xchg
rorb
popa
fisttpl
je
loope
push
add
pop
stos
xor
out
add
cmp
xor
loopne
dec
mov
mov
jmp
xchg
cmp
test
loopne
sbb
sub
push
adc
mov
pop
sbb
stos
out
xchg
inc
hlt
imulb
fs
das
sbb
in
push
xchg
cld
insb
mov
xchg
in
inc
fwait
jmp
sub
jge
int3
mov
dec
dec
sti
hlt
mov
jbe
sbbb
xlat
pop
inc
stc
xchg
xchg
inc
dec
out
add
jmp
arpl
add
lcall
outsb
jnp
or
mov
xchg
je
js
insl
sbb
dec
testl
out
inc
add
bound
repz
popl
iret
add
and
test
add
dec
outsb
imul
mov
sbb
xchg
je
jle
ret
dec
mov
cmpsl
cmpsb
in
jno
xor
sbb
push
fs
mov
gs
pop
sbb
or
insl
sub
adc
lock
dec
mov
test
addr16
in
cmpsb
test
roll
mov
popf
in
sub
cwtl
ljmp
inc
clc
mov
inc
inc
pop
and
rolb
js
mov
test
pop
xor
or
mov
push
and
fidivs
sahf
xor
add
push
push
and
gs
push
sub
push
xchg
pop
imul
popf
fidivl
dec
mov
sub
data16
mov
or
inc
mov
add
push
mov
cli
test
out
in
adc
push
scas
xor
dec
push
cmp
xchg
lds
add
mov
push
push
xchg
in
inc
mov
int3
adc
popa
dec
mov
dec
dec
mov
call
dec
jmp
and
outsl
ss
sbb
and
sbb
add
inc
dec
fyl2x
or
jo
or
clc
lods
fcoml
xchg
inc
mov
sbbl
push
leave
in
rcr
aad
xchg
adc
push
mov
les
lods
shlb
xchg
repz
out
adcl
sarb
add
or
or
and
inc
jne
pop
ja
push
outsl
or
inc
es
jb
pop
sub
inc
shrl
pop
aaa
mov
pop
push
pop
shll
insb
adc
cs
jp
outsl
cwtl
es
fists
inc
decl
jp
pop
or
dec
xor
sub
adc
and
inc
jno
popf
test
inc
dec
pop
sbb
outsb
lods
jo
mov
psubsw
sbb
pusha
inc
push
add
leave
movsl
inc
or
add
mov
sub
cltd
add
cmp
push
mov
or
call
movsl
xchg
movsb
and
xchg
sbb
fsubs
cmp
sbb
adc
and
lock
push
and
test
gs
push
popa
and
jns
xor
mov
xor
cmp
and
cld
cmc
mov
loopne
mov
rorb
adc
test
int
mov
fs
in
lods
icebp
popl
xchg
jmp
mov
cs
dec
lret
mov
dec
roll
xchg
aam
mov
ja
lret
add
jne
or
xchg
push
inc
ljmp
mov
pop
fiaddl
add
push
addb
loop
orl
testb
shlb
inc
mov
pop
stos
sbb
sub
or
orb
shlb
dec
popw
ficomps
or
shrl
stos
add
mov
fistl
mov
fimuls
pop
xlat
je
push
dec
pop
dec
add
arpl
add
shrl
adc
fcoml
cld
js
or
aas
test
aaa
inc
cmpb
ret
push
mov
pminsw
lock
inc
pop
das
xor
data16
outsl
push
mov
subb
loop
roll
iret
jle
push
stos
sub
jg
das
mov
outsb
push
dec
jl
push
xor
sub
icebp
add
xor
mov
inc
pop
dec
cwtl
js
and
mov
lcall
loopne
pop
pushf
mov
inc
adc
push
dec
popa
xor
or
lods
decl
shlb
inc
pop
aam
sbb
push
push
orl
and
fwait
daa
pop
lcall
xchg
out
scas
dec
xrelease
out
dec
scas
push
outsb
add
into
dec
nop
add
add
pop
dec
xor
jge
stos
pushf
stc
inc
or
and
add
jl
xor
sbb
dec
sbb
mov
cmp
je
shll
mov
in
lahf
and
sbb
pop
mov
xorl
fcmovb
pop
shll
fs
cmc
lret
push
sbb
inc
ret
pop
inc
mov
dec
shlb
xlat
in
test
or
push
dec
mov
lret
and
mov
cmp
inc
out
dec
shlb
inc
ret
dec
call
mov
gs
sub
rcrl
movsl
adc
into
inc
inc
push
cmp
push
lcall
roll
cmp
lods
arpl
and
jmp
or
mov
add
stc
jb
sub
mov
push
xchg
sub
roll
pop
imul
cmp
adc
xchg
ljmp
xchg
pushf
sbb
xchg
mov
mov
popa
push
out
xchg
loop
out
out
in
inc
scas
in
mov
jb
movsl
mov
icebp
add
xchg
push
push
mov
iret
stos
dec
adc
inc
mov
add
sbb
mov
rol
jno
je
lret
aam
or
mov
repz
inc
push
mov
adc
cmp
andb
arpl
imul
push
xchg
adc
imull
adc
repz
arpl
inc
and
push
sub
add
dec
and
inc
mov
dec
out
sub
sbb
rorl
mov
mov
inc
jno
adc
movsb
mov
je
movb
mov
mov
mov
sbb
pushf
movsb
arpl
sbb
add
and
push
lret
xchg
jecxz
xchg
test
addr16
sub
inc
and
lahf
test
test
in
lds
inc
pop
xchg
cmp
dec
lds
add
lds
jmp
xor
fldl
dec
test
inc
lret
jmp
inc
lds
sbb
mov
cmc
ret
loope
fstpl
inc
xor
and
leave
adc
lods
gs
adc
mov
mov
push
inc
lret
gs
push
mov
or
addr16
es
add
ss
mov
hlt
push
jno
jbe
nop
jp
imul
das
push
pop
cmc
xor
and
inc
js
xlat
ret
mov
jo
inc
nop
adc
jae
add
imul
ss
ficoms
mov
push
inc
jae
jecxz
mov
jp
or
mov
lods
jno
pop
insl
jae
push
mov
faddl
lret
dec
adc
nop
inc
enter
lahf
mov
sub
cmp
mov
jns,pn
in
shlb
jp
daa
das
or
cmpsb
adc
dec
into
mov
mov
cmp
sbb
aaa
pop
in
push
jns
xchg
iret
test
dec
jb
mov
jl
or
arpl
daa
jle
add
and
call
push
lods
mov
add
loop
rcll
out
add
push
adc
fmuls
cs
outsb
movsb
adc
clc
fsubr
lods
adc
imul
and
or
and
icebp
aam
in
mov
dec
cmp
loopne
sub
xor
in
add
stos
dec
mov
imul
lock
add
jbe
stos
sbb
imul
jmp
nop
adc
testl
lds
dec
out
shrl
inc
sub
add
sbb
add
pop
mov
adc
loope
enter
jno
int3
repnz
push
jecxz
adc
das
xchg
jo
lea
aad
push
sar
adc
leave
jl
and
lcall
clc
sub
lahf
fisttpll
jo
dec
popa
rcl
dec
aad
cmpsl
dec
repnz
loopne
mov
cmp
sub
push
orl
add
sub
shlb
jne
cs
xchg
cmpsb
pop
sub
popf
pop
push
icebp
fldenv
aaa
push
test
das
jno
cmc
fmull
or
loop
mov
inc
or
dec
inc
push
iret
inc
test
mov
rcrl
fadd
sub
push
pop
and
push
repz
add
add
movsl
or
dec
fsubrs
mov
imul
in
loop
ffreep
add
xor
xor
repz
sub
faddp
ret
fstl
stos
push
and
mov
bnd
mov
xchg
loop
dec
jne
add
dec
pop
stc
sbb
add
rolb
out
and
lret
cmpsb
fwait
adc
or
ss
mov
pushf
and
sub
pop
rcl
jno
xor
enter
dec
fdivs
cmpsb
out
arpl
jo
aad
push
add
rclb
and
loop
mov
mov
movsl
sub
or
jecxz
cld
xor
and
sbb
xchg
leave
or
adc
out
daa
or
push
imul
arpl
movsl
ja
push
ds
xchg
push
sarb
xor
movsb
and
dec
mov
adc
repnz
cmp
push
sbb
pop
push
movsl
jb
daa
test
inc
pop
test
bound
sub
ficoms
jae
add
add
or
test
mov
mov
pop
or
bt
in
dec
mov
sub
pop
pushf
lods
sub
cmc
push
test
std
jbe
lds
shlb
stos
insb
cmp
cmpsb
inc
xchg
dec
test
xor
lds
mov
nop
je
test
xchg
shll
mov
add
adc
jo
mov
mov
dec
add
arpl
je
push
dec
pop
aad
mov
out
inc
cld
and
outsb
jno
and
push
xchg
dec
clc
gs
sub
das
out
and
gs
leave
jecxz
rcrl
xchg
adc
into
mov
shr
int3
push
dec
out
es
push
mov
pop
stos
jnp
push
adc
jge
xor
or
int
push
adc
shrb
enter
dec
xchg
push
imul
dec
push
mov
mov
mov
sub
std
bound
jb
leave
push
popf
cmpsl
in
dec
mov
cmp
mov
and
enter
aad
leave
dec
fs
pushf
adc
dec
outsl
lret
mov
das
adc
lret
les
nop
jae
loope
sub
scas
mov
dec
repz
mov
movl
sub
test
pop
sbb
mov
xor
lods
arpl
adc
add
test
femms
int3
or
inc
sub
cmp
lea
push
popf
mov
lea
xor
xor
rcrb
push
xchg
cld
or
cmc
cmp
rclb
and
or
xor
je
dec
lock
pop
insb
data16
cmp
fldenv
mov
and
rcll
pop
dec
mov
out
int3
pop
push
cmp
xchg
icebp
pop
and
cltd
das
jle
mov
push
cmp
and
cld
pop
adc
inc
subl
or
pop
or
jno
add
and
mov
or
inc
clc
jae
dec
dec
pop
xor
sbb
and
test
add
jae
push
lea
enter
imul
inc
sub
test
in
and
out
push
mov
sbb
and
pop
pop
pop
inc
adc
orb
sub
pop
inc
sub
adc
pop
jno
mul
in
mov
icebp
aas
loopne
mov
mov
add
push
imul
and
jle
ret
icebp
xchg
mov
xchg
cmp
ds
aam
stos
sub
cs
cmpsl
sub
sub
sbb
jmp
outsb
jmp
cmp
and
mov
leave
pusha
inc
and
pop
rcr
lcall
dec
jecxz
pop
and
lret
fsubrl
in
mov
push
sub
faddp
inc
imul
dec
incb
or
and
das
and
in
xchg
sub
into
adc
addb
shr
sbb
inc
incl
mov
fdivl
lahf
mov
pop
out
adc
push
adcl
mov
xor
mov
push
int
adc
add
and
arpl
rolb
fdivs
adc
ror
jnp
pop
adc
stos
xlat
push
mov
add
fildl
andb
and
arpl
cmpsb
bound
jge
fadds
faddl
inc
and
pop
lea
mov
pop
push
pop
in
mov
dec
pop
cmc
push
add
testl
je
xor
dec
lahf
sbb
mov
mov
dec
ss
or
iret
cmpsl
xchg
je
sbb
lds
mov
sub
scas
sub
rcll
mov
mov
add
mov
outsb
cmp
es
gs
xor
add
xchg
pop
je
leave
sub
jmp
mov
sub
xor
inc
lods
daa
in
ret
push
pop
sbb
push
fisttpl
inc
repnz
mov
and
imul
decb
aad
and
mov
ret
jge
fwait
xor
out
fwait
lock
popl
xchg
and
inc
bound
ret
ss
adc
rcrl
jb
data16
cs
lea
ljmp
in
shlb
dec
roll
gs
mov
or
pop
and
push
mov
dec
or
lock
jnp
sub
or
xor
fs
push
sbb
scas
rcl
adc
pop
lock
loope
dec
fs
or
push
sub
aam
ret
jbe
xchg
in
and
pop
movsl
xor
push
or
mov
lea
mov
sbb
adc
das
mov
sti
into
mov
imul
inc
out
nop
pusha
repnz
add
mov
lock
nop
test
rcrb
fs
int
int3
outsl
sbb
push
sub
xor
stc
mov
sub
pushf
lret
je
in
mov
or
int3
ret
add
push
nop
mov
andb
mov
mov
pop
push
cmc
cmp
and
jo
sub
adc
mov
cmc
loopne
adc
dec
xchg
dec
sub
loope
lds
bound
test
stos
mov
push
jmp
loop
icebp
ret
movsl
or
psubusw
xor
xchg
cmpsl
mov
xchg
lods
je
rorl
push
int
loop
push
js
pop
sahf
jecxz
inc
ret
rclb
loope
pusha
pop
shlb
rclb
or
std
and
push
push
mov
mov
inc
add
inc
mov
rolb
mov
aaa
inc
mov
mov
aaa
sbb
pop
pop
add
adc
add
leave
fs
pop
int
jge
mov
add
pop
xchg
outsb
jp
test
lods
push
call
or
loope
outsb
sahf
cld
xor
icebp
mov
xchg
jle
inc
test
mov
cltd
add
out
push
test
and
arpl
lahf
or
mov
add
rcl
add
stos
pop
addr16
out
jecxz
adc
mov
or
aaa
imul
movsb
jno
test
dec
iret
pop
shlb
rcll
add
xor
xor
and
mov
pop
ja
pusha
js
xchg
test
and
jo
or
imul
and
sub
push
aaa
shr
pushf
sub
cmp
inc
add
push
mov
mov
enter
es
pop
icebp
popa
loop
lods
and
aad
push
jle
mov
cmp
repz
test
lods
jne
insb
push
and
xchg
shlb
inc
adc
jo
stc
movsb
push
daa
int3
xcrypt-ctr
cmpsl
sbb
cmpsl
add
lea
std
adc
sbb
daa
mov
cld
mov
pop
cs
mov
push
add
repz
cs
shll
xor
in
jae
mov
ret
mull
leave
push
sbb
ds
movsl
andl
xor
sarb
scas
or
push
jecxz
lds
gs
outsl
lds
add
clc
inc
aad
push
inc
dec
push
pop
mov
bound
sbb
jmp
in
test
push
out
inc
jb
xchg
je
xchg
unpckhps
dec
push
cmp
leave
pop
test
xchg
and
fcmovnbe
xlat
scas
jecxz
inc
test
xchg
adc
in
and
and
int3
mov
sub
ret
push
mov
movsl
add
test
ss
mov
jb
in
mov
pop
pop
inc
rcrl
jae
mov
loope
mov
xor
lods
mov
xchg
sub
xchg
in
jmp
lock
int
push
inc
jno
mov
mov
call
dec
or
inc
mov
xchg
push
xchg
fld1
gs
cmp
mov
jge
ret
rcrb
inc
mov
xchg
test
in
cmp
rclb
ror
xchg
ss
sub
ret
sti
ret
inc
xchg
hlt
jne
mov
push
jmp
mov
lods
and
rol
xor
or
ljmp
addr16
jmp
je
insb
pusha
popa
add
stos
xor
sarb
popf
jne
adc
insl
shr
addr16
push
inc
in
shll
push
mov
movsb
or
aad
pop
ja
ljmp
pop
or
pop
jmp
aam
jb
cmp
push
daa
int
mov
inc
es
shll
fldcw
xchg
mov
dec
cmp
xor
inc
inc
xor
cmp
ret
push
and
test
fldenv
mov
add
push
inc
out
or
jae
movsb
cmpsb
outsl
dec
orl
pop
roll
int3
add
mov
push
dec
lret
inc
fmuls
leave
in
dec
dec
lods
or
in
inc
dec
hlt
add
lret
arpl
repz
movsb
int
mov
shrb
jge
jne
mov
mov
movsb
ss
xor
pushf
in
and
fwait
mov
pop
mov
test
sbb
fildll
pusha
jns
lret
sub
out
xchg
aaa
test
xchg
aam
lret
cmp
inc
dec
icebp
xchg
test
xor
pop
js
cmp
dec
fadds
push
ja
xor
nop
sbb
xor
sub
push
sarl
pop
addr16
and
cld
xchg
lret
xor
dec
push
and
popa
bound
mov
arpl
add
mov
adc
aaa
rclb
pop
push
rol
in
mov
cmpl
inc
mov
aaa
vcomisd
mov
xor
inc
movsl
mov
push
dec
jne
in
inc
rcll
stos
jmp
cmpsb
rol
mov
rclb
roll
enter
push
mov
mov
jge
je
pop
addl
inc
popf
mov
jl
pop
das
ret
cmp
inc
dec
lret
mov
jns
push
pop
push
cld
jo
and
negb
adc
or
shlb
push
nop
and
xor
loopne
aas
cmp
inc
adc
inc
adcl
push
mov
sbb
rcl
add
loope
xor
cmc
addb
mov
mov
xor
pop
adc
loopne
xchg
adc
movsb
push
jg
adc
pop
adcb
int
jge
jmp
mov
int3
xor
add
subl
inc
push
jl
insb
rorl
add
adc
dec
and
inc
stc
or
jo
rorl
cmp
jns
and
add
cmp
pop
jb
inc
mov
or
sti
xchg
in
aaa
in
add
jb
xor
mov
jl
jo
prefetch
icebp
mov
dec
es
push
mov
xchg
lcall
mov
jno
loopne
inc
fistpll
and
sbb
xlat
sbb
andl
loopne
loopne
push
add
in
movsb
fstpl
inc
ds
add
inc
and
sbb
out
and
roll
xchg
mov
xchg
insb
and
imulb
push
mov
cmp
mov
lea
add
jg
mov
jle
test
pop
lock
cmp
inc
test
push
cli
arpl
fcoml
adcl
or
xor
add
lcall
dec
sbb
out
aas
movsl
or
and
pusha
inc
pop
repnz
inc
cs
inc
and
jnp
hlt
lcall
les
into
scas
inc
inc
inc
adc
loope
rcl
sub
sarl
add
adc
xchg
sub
xor
dec
xchg
sub
icebp
cmp
and
int3
out
arpl
dec
movsl
mov
push
outsb
lahf
lds
dec
rcr
xchg
add
jmp
movsb
stc
dec
loop
mov
dec
or
test
or
jne
nop
shlb
movsb
xchg
jg
inc
mov
clc
loope
dec
movl
mov
inc
cli
or
push
shll
jne
add
add
icebp
jle
sub
inc
js
xchg
or
pusha
mov
or
xchg
insl
xchg
push
shll
push
pop
shll
push
inc
sarl
adc
shrl
jg
decl
pusha
adc
scas
hlt
stos
jne
push
adc
push
xchg
cwtl
cmp
cmp
popf
sub
push
jnp
dec
addl
aaa
arpl
mov
leave
push
dec
jle
movsb
call
xchg
out
dec
je
bnd
xlat
les
sub
pop
dec
pusha
mov
cmp
sbb
test
cmp
dec
cmp
xchg
mov
insl
push
jl
inc
jecxz
mov
ret
and
sub
int3
fcoml
adc
pop
mov
or
add
loop
xchg
xor
mov
outsl
nop
add
lods
inc
aaa
inc
add
mov
inc
shrb
jecxz
mov
popa
dec
ss
jb
jb
sub
sbb
mov
cmp
dec
inc
and
orb
call
adc
push
adc
sbb
cmp
popa
jno
add
andb
jo
jae
mov
or
adc
movsb
add
and
mov
inc
mov
stos
dec
dec
subb
mov
mov
xor
dec
mov
adc
repnz
pop
inc
sahf
fld
and
popa
jo
repnz
mov
bound
inc
clc
pusha
dec
test
jbe
jo
pop
rorb
sub
sub
popf
or
xchg
adc
xor
addb
inc
fcmovu
mov
movsl
jno
aam
fs
std
inc
jne
sbb
dec
andb
jns
repz
and
add
and
or
cmp
call
dec
bound
rcl
jmp
xchg
in
into
jo
pop
inc
push
orb
adc
fs
and
filds
daa
andl
push
addr16
shlb
out
jae
orb
fstpt
jb
and
psrad
push
xlat
gs
or
xor
ret
xor
insl
pushf
fisubrs
mov
mov
lds
dec
mov
dec
inc
inc
or
pop
mov
mov
xchg
dec
and
andl
pop
test
dec
jle
pop
outsl
pushf
adc
clc
js
mov
inc
lock
rol
dec
stos
add
mov
cmp
mov
adc
js
in
fs
test
movsb
ss
cmp
test
cmpsb
enter
pop
ret
js
cwtl
xchg
ljmp
repnz
in
les
ss
lea
dec
je
xchg
sbb
cmp
add
mov
and
repnz
push
fcompl
sbb
pushf
fcoms
push
cwtl
sbb
mov
lock
cwtl
push
insb
pop
adc
jne
pop
in
lea
lcall
jbe
inc
lret
fidivl
loopne
mov
fisttpl
lret
shll
shl
adc
repnz
shrb
or
popa
movsl
dec
rclb
dec
cmp
scas
filds
enter
add
out
daa
ret
mov
pusha
lret
fwait
push
rorl
lds
loop
mov
jo
inc
add
inc
test
insl
dec
mov
ret
and
mov
test
mov
scas
inc
fs
xchg
decb
add
mov
out
pop
mov
lcall
mov
leave
int3
xlat
call
xor
movsl
push
adc
pop
dec
leave
dec
int3
push
add
rol
xchg
jp
pop
aas
pop
lea
in
dec
jno
aaa
and
mov
sbb
push
inc
xchg
push
mov
movsl
adc
xchg
inc
jmp
push
rcrb
dec
pop
loopne
cmp
stos
fcoms
je
into
mov
add
xchg
lods
adc
sub
lds
cmp
pop
mov
dec
mov
rcrb
leave
aam
lods
push
push
sub
out
pushf
dec
or
insl
mov
icebp
and
mov
mov
push
jmp
sub
dec
and
repz
sti
aas
xor
in
les
jbe
sahf
xor
fwait
add
xchg
out
sbb
lret
sti
xlat
inc
sbb
test
scas
out
push
sbb
mov
arpl
bound
out
mov
lods
fsubs
int3
and
add
push
ljmp
aam
je
sub
ret
add
cld
adc
sub
and
int3
cld
ret
test
testb
jle
inc
es
dec
or
pop
inc
int
sub
mov
pop
mov
test
decl
add
imul
call
add
es
lea
add
testb
shrl
add
cmp
icebp
popa
js
jge
test
data16
inc
test
aad
popa
or
pop
enter
imul
adc
rclb
addb
pop
dec
nop
lock
popa
imul
cs
icebp
pop
jg
inc
mov
add
nop
cltd
mov
jae
repnz
inc
fmulp
adc
sub
outsl
mov
test
or
call
dec
jbe
hlt
mov
outsl
les
lret
andb
and
shll
les
pop
cld
or
inc
xlat
mov
pop
pop
out
xchg
add
enter
or
mov
sbb
inc
xchg
push
jge
pop
dec
addl
xchg
xchg
inc
and
sub
and
into
cmp
pop
dec
jecxz
mov
enter
dec
fld
out
das
or
aam
test
fsubr
in
push
mov
adc
in
inc
or
nop
inc
loopne
das
stos
popa
mov
insl
push
outsb
xchg
sbb
cmpsl
pushf
jp
sbb
std
xlat
aad
jae
out
bound
je
adc
pop
ljmp
push
fldt
filds
or
add
mov
push
popf
or
mov
aaa
push
sub
imul
adc
loop
or
lret
push
mov
aas
test
jne
xchg
test
add
mov
aad
jg
rolb
into
mov
outsl
lahf
cmp
xchg
call
xor
mov
lret
mov
das
in
jg
inc
daa
lods
mov
test
insl
stc
sbb
andl
dec
inc
xchg
pop
ja
mov
rcr
into
push
lods
fsubrl
inc
sub
mov
jge
nopl
cmp
adc
sub
adc
xor
and
js
or
test
mov
rolb
mov
rclb
aam
sbb
add
mov
and
loopne
clc
loopne
or
xorps
shrl
insb
mov
sub
sub
sbb
out
mov
dec
mov
jp
mov
or
pop
xor
push
xor
loope
xchg
mov
cwtl
fmuls
popa
adc
bound
out
shrb
in
inc
daa
sub
or
loopne
nop
cs
add
mov
js
inc
xchg
das
or
icebp
mov
jle
pop
lea
xchg
add
sbb
ret
mov
xor
data16
pop
lock
arpl
add
push
call
mov
xor
and
insb
icebp
in
dec
pushf
mov
mov
mov
xorl
push
mov
ret
movsl
push
mov
fldcw
inc
jae
mov
push
push
adc
mov
gs
xchg
mov
and
mov
rcrb
shll
mov
in
test
movsl
test
repnz
mov
clc
je
mov
cmp
sub
dec
inc
movsl
dec
addl
andb
mov
pop
and
dec
mov
add
mov
cld
push
andl
clc
and
fcoml
adcl
les
data16
cs
shll
mov
and
aad
shlb
and
cmp
loope
add
dec
adc
dec
mov
mov
and
int3
fisubs
inc
pop
aaa
jae
pop
inc
fwait
sahf
pop
in
ficoms
sub
xchg
repnz
sahf
add
mov
test
xchg
sub
sub
stos
pop
dec
mov
pop
jb
and
sbb
mov
and
adc
ja
imul
cmc
loope
gs
and
push
mov
jnp
sub
inc
lret
out
lods
int3
inc
dec
aad
enter
inc
push
pushf
inc
cmp
mov
inc
or
xor
push
xchg
movsb
inc
adc
aaa
mov
cmp
ds
dec
outsb
insb
enter
sahf
mov
adc
and
scas
insl
jae
xor
ret
in
xorl
nop
ljmp
lret
lret
cmp
xlat
out
movsl
add
test
out
les
mov
push
shl
and
xorb
negl
cltd
dec
mov
int3
mov
push
out
shll
orl
mov
scas
popa
sahf
jb
xchg
in
mov
dec
loope
adc
mov
cli
inc
sub
add
cmpsb
inc
cmp
mov
pop
push
call
push
xchg
ds
popa
xor
stos
dec
loop
or
in
inc
mull
sub
test
je,pt
xchg
movsl
pop
mov
xchg
pop
cltd
mov
sub
jns
and
roll
xor
jge
divb
je
pusha
imul
dec
mov
xor
pop
dec
ret
or
push
mov
mov
inc
movsl
subb
insb
mov
jo
cmpsb
scas
dec
cmp
sub
add
pop
test
stos
jle
fisttpl
unpckhps
cmpsl
jno
enter
inc
cmc
xchg
ret
sbb
inc
mov
test
loopne
mov
aaa
arpl
in
add
dec
popa
xor
bound
in
adc
mov
imul
test
ror
mov
xchg
add
mov
shll
dec
pop
aas
movsl
and
adc
adc
inc
jb
incb
inc
repnz
push
dec
xchg
repz
enter
or
icebp
jbe
add
dec
test
add
mov
add
icebp
in
mov
mov
mov
dec
pusha
test
pop
mov
or
jl
inc
outsb
xor
inc
and
daa
jl
or
std
iret
stos
movsb
sub
push
xchg
movsb
push
das
cmc
es
jae
pushf
jo
call
stos
icebp
push
inc
enter
aad
adc
mov
test
inc
inc
push
push
ss
adc
addr16
pusha
add
and
bound
jmp
xchg
fdivp
pop
cmp
aam
popa
ror
shl
lods
insb
adc
ret
icebp
cmp
repnz
repnz
mov
inc
sbb
dec
aam
sub
mov
mov
fisubrs
mov
dec
and
dec
dec
sub
jno
lds
aam
inc
iret
notl
sbb
xchg
xor
jno
add
insb
pop
popf
pop
das
shl
in
popa
inc
cmpl
dec
andl
hlt
or
and
pop
ret
cmp
les
je
jno
sbb
jg
xor
push
shrl
xor
inc
data16
fsub
cmp
cmp
dec
mov
mov
add
push
sbb
xchg
mov
and
cmpsl
jg
jo
or
jnp
and
fnstsw
in
push
rorl
mov
adc
repnz
lcall
pusha
int3
fwait
stos
xor
lods
mov
ret
inc
push
and
mov
add
jns
adcl
rorl
arpl
add
cmp
pop
mov
fsub
sub
and
mov
pop
aad
mov
mov
scas
inc
sub
pop
and
mov
or
pop
dec
insb
test
push
jae
xchg
pop
popf
mov
dec
shll
adc
shll
pop
sbb
fisubl
hlt
xor
mov
fldenv
add
push
leave
leave
std
fbld
and
sub
dec
cmpsb
push
jnp
or
mov
gs
cs
mov
pop
dec
scas
outsb
les
sub
das
push
enter
out
test
mov
test
mov
insl
fwait
inc
jbe
sbb
movsl
push
sub
or
inc
mov
flds
popf
mov
xchg
popa
push
fadd
jo
test
inc
mov
mov
and
icebp
dec
inc
sub
mov
push
fists
jl
cmp
and
popf
or
rclb
jns
adc
mov
cmp
cmp
adc
test
insb
fsubl
nop
cs
mov
je
and
and
movsl
jo
fucomp
dec
lods
mov
rclb
or
push
icebp
test
movsl
jns
adc
mov
gs
push
test
jns
mov
sub
cmp
mov
dec
dec
lods
cmpsb
jbe
call
arpl
test
or
das
test
addb
xor
aaa
pcmpgtw
push
out
mov
cmp
imul
shlb
inc
mov
xchg
enter
jns
scas
mov
ficoms
push
ljmp
test
or
dec
mov
mov
xchg
xchg
xchg
dec
mov
mov
mov
fsubrl
fldl
sub
inc
cld
sbb
add
pop
cmp
sub
loope
enter
cli
lock
xchg
adc
dec
pop
scas
sub
test
pop
inc
cmp
insb
pushl
sub
push
jmp
add
in
in
jecxz
inc
jbe
loop
stc
xchg
push
xchg
outsb
push
loope
mov
inc
out
das
addb
in
dec
out
add
mov
push
test
sti
pop
inc
imul
or
mov
pop
loope
lds
mov
mov
fimull
xorb
ret
movsl
imul
stos
loope
test
arpl
mov
std
mov
shll
cmc
daa
mov
xor
iret
inc
xor
inc
outsb
and
inc
inc
add
repnz
inc
loopne
scas
jmp
inc
cmpsl
push
push
sbb
add
xor
hlt
sub
or
sub
xchg
add
sbb
adc
in
or
add
test
sub
adc
xor
inc
dec
jo
lods
xor
xlat
xchg
das
inc
sub
cmp
repnz
mov
int
adc
rolb
inc
fdivl
adc
addl
in
loope
loopne
arpl
cltd
and
xor
xor
mov
pop
shll
stos
pop
adc
add
adc
fistpl
into
rcll
push
js
scas
pop
arpl
sbb
mov
hlt
dec
inc
imul
push
lock
inc
cwtl
out
je
push
and
dec
fs
cmp
bound
test
ljmp
loope
inc
hlt
imul
jns
rcr
out
push
adc
mull
mov
repnz
push
sbb
shrb
je
add
out
jno
test
pop
out
pushf
bnd
out
lds
xlat
xchg
add
inc
and
inc
lds
out
test
andl
leave
push
out
loopne
lahf
shll
bound
inc
gs
popa
xlat
in
jne
mov
decb
xchg
push
mov
sarb
cmp
pop
mov
les
test
or
inc
lahf
pop
rcrb
das
addl
bound
push
adc
es
pop
cmp
sub
dec
sbb
xchg
out
andw
and
mov
inc
mov
add
push
push
lods
sbb
outsb
sbb
stos
rcll
or
sbb
movl
cmp
imul
rcr
outsb
xor
dec
and
loope
leave
push
or
inc
pop
fadd
jnp
and
push
fbld
insb
cmp
bound
out
ficompl
add
xor
xchg
js
in
hlt
dec
dec
xor
cmp
xor
mov
inc
add
lds
in
fldt
push
cmpsl
dec
adcb
fbstp
insb
sub
add
inc
cmpsb
mov
addb
and
rsm
sub
xor
ror
and
xchg
lods
pop
fcmove
or
dec
mov
add
loope
mov
push
jns
int3
arpl
adc
je
mov
sub
push
mov
or
push
mov
rclb
xchg
clc
add
je
loope
inc
loopne
push
sbb
or
add
cmp
ret
xor
movsl
push
adc
sub
out
int3
and
dec
stos
lds
arpl
mov
rcll
inc
push
scas
pusha
scas
pop
xor
mov
cmp
inc
xchg
adc
mov
xor
clc
vphaddbq
inc
data16
addl
std
lcall
jb
adc
out
and
scas
mov
lods
je
stos
fmull
inc
jo
fsubs
test
pop
adc
lret
js
leave
add
inc
inc
jno
pushf
add
push
dec
pushf
les
sub
loop
xor
add
adc
pop
test
sub
push
lds
incb
and
arpl
xor
xorl
cwtl
mov
rorb
inc
xor
inc
xchg
push
inc
or
outsb
stos
rcl
pop
ss
fisubrs
je
or
clc
andb
nop
mov
xor
mov
sbb
push
dec
leave
jp
loop
test
rcrb
cltd
mov
adc
daa
mov
jns
pop
frstor
xchg
out
mov
in
fisubl
xchg
into
and
test
inc
lock
adc
in
mov
add
and
cs
jg
push
mov
imul
sub
outsb
ret
adc
xor
idivl
push
cmovno
test
fcomps
stc
mov
mov
fsubp
jp
mov
pop
into
sbb
mov
pop
cs
cltd
add
subb
push
xchg
adc
cwtl
popa
mov
loope
bound
insb
inc
mov
mov
push
xchg
sbb
mov
rcll
mov
lcall
loopne
testb
mov
adc
lahf
loope
pushf
jb
push
mov
inc
negb
mov
jg
xchg
lods
push
vpaddw
adc
mov
inc
rcl
pushf
mov
movsl
xchg
inc
jmp
outsl
loopne
cmp
dec
jmp
cmpb
fcomip
scas
add
subb
add
pop
mov
push
ret
daa
inc
mov
adc
dec
repnz
and
mov
loope
or
notl
mov
add
mov
leave
mov
les
icebp
pop
js
mov
pop
and
push
push
push
or
and
shll
jae
push
mov
sbb
fdivrl
jno
cwtl
and
push
dec
out
xchg
cmp
push
xor
in
mov
repz
push
mov
add
add
addr16
mov
inc
loope
fwait
xor
repz
inc
andb
lahf
jb
dec
stc
cmp
jb
fs
xor
push
mov
pop
and
add
sar
xor
mov
std
sub
int
adcb
fwait
and
ret
rol
add
stos
arpl
popf
dec
ret
fs
jmp
cmp
jnp
lods
cmp
ss
mov
shl
adcb
xor
dec
cwtl
push
add
loopne
inc
mov
lods
mov
and
cs
orb
nop
mov
ret
cmpsb
lods
xchg
pop
inc
loope
xchg
cmpl
adc
ss
cmpsb
pop
lds
push
and
mov
cmpsb
sbb
inc
push
jmp
sahf
and
fmuls
sub
ljmp
ret
xor
adc
add
jmp
or
push
dec
fwait
mov
ja
cmc
pusha
push
enter
or
push
cmp
inc
inc
out
jl
mov
push
int
mull
mov
nop
mov
mov
test
pop
push
add
arpl
dec
push
xlat
mov
inc
push
aam
mov
movsl
xor
hlt
push
dec
push
inc
nop
cmp
jo
lcall
inc
mov
mov
push
jns
xor
dec
jne
pop
mov
std
push
imul
push
inc
ss
xor
fisttps
mov
jecxz
loope
lds
dec
push
push
sbb
push
xchg
push
push
and
mov
gs
into
sbb
mov
adc
add
xchg
int3
xchg
fidivrs
movb
cwtl
int
daa
adc
sub
or
mov
cli
xchg
out
in
push
insb
add
stc
mov
mov
in
adc
inc
add
cwtl
movsb
jno
push
sub
cmc
mov
jge
dec
xor
leave
shrb
insl
pop
icebp
inc
insb
push
xorb
adc
pop
daa
ds
mov
and
pop
aad
jl
mov
int
jl
addb
rolb
jne
ljmp
push
outsb
xchg
inc
push
hlt
jecxz
fucomip
jecxz
shlb
mov
add
inc
pop
testl
adc
mov
sti
shlb
aam
popa
inc
and
adc
push
xchg
and
cmovne
in
pop
cmpsb
loope
adcb
push
cmp
or
mov
or
xchg
mov
push
lods
ffreep
or
das
or
push
jl
sbb
sub
xor
jae
and
inc
add
fwait
adc
addr16
dec
sbb
dec
sar
xor
inc
icebp
adc
mov
adc
daa
jmp
adcl
lock
cmp
adc
sub
montmul
cmpsb
test
cmpl
sub
outsb
fcoml
inc
sub
adc
mov
inc
inc
fsubl
cmp
insl
fld
mov
call
dec
jo
mov
inc
idivb
sbb
cli
hlt
xchg
adc
pop
sbb
add
jae
loopne
and
inc
addr16
xchg
rcl
fmuls
shl
dec
hlt
nop
popa
dec
or
xor
dec
addr16
mov
mov
dec
add
mov
int
stos
pop
popf
sbb
imul
xor
pushf
add
dec
jo
mov
push
insb
and
cmp
or
push
imul
inc
popa
inc
xor
arpl
pop
popa
xor
inc
shr
ret
inc
and
aas
pusha
and
xor
lods
xchg
add
adc
mov
pop
add
pop
in
ja
add
cmpsb
mov
and
and
sub
push
jl
lock
add
jl
fsubs
cmpsl
lea
ficoml
ljmp
fs
and
in
sub
insl
and
ret
test
lret
inc
sbb
popf
pop
xchg
hlt
and
imul
jne
fldt
pop
xor
bound
push
movsl
jecxz
push
push
test
in
cmp
xor
push
and
call
outsb
dec
jno
push
sahf
and
dec
and
mov
jmp
daa
sbbl
adc
addr16
inc
xor
das
mov
loop
loope
cmp
test
push
sbb
mov
jae
push
pop
fdivrl
mov
add
out
jnp
and
or
pop
lret
xchg
mov
and
mov
jle
dec
addb
push
dec
add
hlt
add
call
cmpsl
add
inc
cmpsb
inc
cmp
jns
js
arpl
mov
jl
mov
jns
add
mov
inc
xor
mov
or
and
add
push
out
cld
lock
jnp
ljmp
inc
mov
insl
jecxz
shll
jbe
adc
dec
mov
js
stc
and
push
test
jg
int3
jecxz,pn
jecxz
test
dec
decb
adc
xchg
das
adc
add
fsubr
icebp
xor
jp
xchg
sub
inc
xor
push
or
inc
push
out
leave
mov
lcall
push
cmpsb
fisttpl
inc
adc
adc
loop
mov
pop
sub
int3
push
sub
rorl
xchg
fcoml
shlb
adc
arpl
mov
sbb
sbb
cli
and
cmp
lock
mov
cltd
xchg
jo
cmp
arpl
add
pusha
in
inc
outsb
sub
or
out
xor
and
inc
hlt
pop
out
add
sbb
mov
mov
dec
sti
pop
push
dec
pop
jge
xchg
mov
inc
xor
repnz
mov
adc
xchg
es
push
xor
inc
mov
dec
aad
arpl
iret
imul
test
subb
rcrb
inc
fdivs
repnz
inc
loop
inc
xor
cmp
dec
inc
xchg
popa
inc
stc
pop
fcoml
mov
xchg
jae
lds
mov
imull
add
pop
in
popa
leave
jnp
icebp
jmp
imul
mov
inc
fstps
dec
test
cmp
mov
inc
fsubrs
sbb
add
xchg
adc
in
scas
imul
jno
testb
push
outsb
mov
and
ss
cmp
orl
shlb
adc
aas
test
cmp
mov
cmc
daa
add
xchg
or
out
sub
jns
inc
xchg
xchg
adc
or
stc
andb
mov
pop
jmp
adc
loopne
jge
gs
mov
and
repnz
aas
aam
add
into
mov
dec
and
dec
sub
faddl
icebp
lret
pusha
push
push
pushf
adc
test
adc
xchg
fmull
xor
int
lods
add
jl
out
add
arpl
aad
lfs
test
jl
and
stc
jb
arpl
shrb
popa
daa
xchg
and
and
jns
mov
adc
enter
inc
and
jae
test
mov
add
xchg
mov
loope
adc
icebp
inc
andb
jg
pop
cmpsl
sbb
xor
test
ja
pushf
mov
hlt
add
cltd
inc
es
xchg
push
stos
shlb
xchg
lea
adc
ret
inc
testb
inc
inc
add
xchg
incl
inc
hlt
dec
icebp
inc
xchg
adc
scas
cmc
out
loop
addr16
test
adc
adc
adc
mov
push
arpl
in
movsb
loop
adc
daa
xchg
bound
pop
rcll
jns
out
nop
xchg
lcall
pop
sar
in
shr
imul
dec
pusha
aaa
or
popa
repz
and
and
sete
sbb
cs
mov
leave
repnz
dec
mov
arpl
loop
enter
sub
cs
shrl
popf
pop
popa
cmp
cmp
call
imul
mov
add
scas
bound
gs
leave
sub
push
and
sub
ja
jp
movsl
jecxz
out
inc
and
test
stos
das
shll
lock
dec
inc
inc
inc
inc
fs
and
fs
xchg
jae
sahf
rcl
xor
lret
insb
lahf
dec
add
int3
add
mov
xor
popf
mov
icebp
jmp
adc
inc
and
sbb
xchg
push
ret
dec
pop
ret
addb
add
cld
xor
loopne
gs
inc
xchg
jmp
sub
cmpl
scas
push
in
fadd
push
or
call
jbe
or
jb
leave
inc
sbb
adc
xor
mov
cmpl
dec
add
loope
push
mov
jmp
out
inc
jge
lods
and
mov
dec
insb
movsl
mov
and
cmpsb
cmp
scas
fs
rclb
arpl
popl
or
shll
fs
out
sbb
mov
mov
loope
ljmp
stos
adc
push
xchg
lods
loop
out
jmp
jmp
in
mov
lcall
mov
in
push
xor
out
repnz
dec
in
outsb
and
popa
inc
or
xchg
cmp
cltd
dec
sub
lock
and
push
daa
pop
mov
xchg
cli
test
push
arpl
xchg
jle
inc
frstor
fs
xchg
adc
xchg
lock
adc
cli
pop
xchg
add
push
rol
arpl
popa
and
hlt
add
xor
or
or
fidivrs
xchg
in
sub
mov
mov
inc
or
movl
xchg
inc
lahf
add
push
jnp
shll
inc
in
xchg
inc
test
repz
add
pusha
andl
les
sbb
in
int3
pop
cmp
pusha
test
mov
popa
xlat
xor
pop
outsb
inc
jg
das
negb
jb
rorb
movsl
add
and
mov
jp
xchg
fs
pop
sbb
das
repz
cmp
push
imul
fs
adc
wrmsr
push
or
shrb
std
andb
pusha
or
loop
add
sub
xor
jb
fisubl
aas
jae
sbb
movsl
adc
adc
rorl
in
sbbl
xlat
mov
mov
sbb
mov
sbb
adc
mov
and
imul
shlb
cmp
and
xchg
xor
rcrl
imul
shrb
sub
or
or
stc
dec
shlb
push
add
xchg
lret
sub
imull
int3
pop
inc
xchg
cmpsb
cmp
sub
jae
inc
hlt
jno
push
dec
jo
sub
enter
adc
xchg
or
adc
push
inc
or
and
roll
rcll
andb
jne
mov
aas
ljmp
push
xchg
push
int
dec
roll
dec
jl
imul
or
inc
sbb
test
pop
xor
leave
sbb
push
test
je
mov
movsb
imul
mov
add
mov
push
and
dec
inc
inc
add
dec
mov
jns
into
ror
xorl
mov
xor
xchg
ret
or
test
mull
enter
fdivrs
or
push
mov
pop
mov
movsl
aad
in
inc
xchg
in
xor
rcll
push
mov
in
outsl
and
stos
push
rsqrtps
xchg
xchg
pop
jo
sbb
xchg
lea
fcompl
aaa
add
dec
push
dec
dec
xor
aaa
roll
rclb
xor
lea
cli
mov
and
movsl
jp
xchg
xchg
mov
cmp
xchg
in
adc
xor
push
ret
lret
mov
add
sbb
pop
inc
in
addr16
xor
lret
adc
es
mov
arpl
xchg
sahf
xchg
push
stos
xor
dec
sbb
ljmp
cltd
into
gs
jo
or
movsb
hlt
xor
addr16
dec
mov
movsb
pop
outsl
mov
js
call
dec
jp
mov
ja
loope
mov
pop
inc
vsqrtpd
and
xor
or
cmp
push
int3
cmpsl
inc
jl
cmpsl
mov
add
inc
mov
imul
leave
loop
inc
shll
cmp
sub
data16
out
ret
test
and
int3
ja
jmp
jl
sub
and
inc
jne
inc
or
inc
addr16
adcl
lahf
rorb
push
int3
mov
cmpsb
jl
or
mov
mov
and
dec
jns
and
sub
jp
bound
imul
sbb
and
sbb
inc
push
adc
jl
xchg
in
dec
test
pop
xchg
scas
leave
insl
imul
es
insl
push
scas
imul
gs
nop
adc
add
mov
jno
pop
int3
or
xchg
adc
dec
lret
cmp
aam
out
mov
aaa
xchg
call
dec
mov
repz
fwait
das
scas
mov
lock
scas
and
inc
out
or
pop
add
aam
loop
inc
aas
mov
xor
clc
push
and
sbb
sbb
mov
jge
loopne
inc
push
cmp
and
inc
push
test
jnp
es
mov
fwait
sub
push
xchg
adc
inc
adc
stos
xor
dec
jle
xchg
ret
add
sub
cld
in
out
push
xchg
mov
or
in
mov
lcall
or
loope
pusha
leave
pop
test
addr16
xchg
jp
and
fsubs
sbb
lret
enter
daa
cli
xor
jge
mov
sub
loope
xchg
jae
or
insb
adc
jno
movsb
sbb
mov
and
dec
inc
ret
sub
jge
adc
pusha
inc
jmp
dec
or
and
out
jp
mov
pop
cld
das
and
mov
cmp
popa
arpl
push
test
loopne
dec
and
mov
dec
add
mov
mov
insl
jmp
sub
mov
dec
pop
or
or
pushf
pop
mov
js
inc
ret
push
cmp
test
lods
jg
in
sahf
repnz
lret
push
push
and
imul
mov
lcall
mov
push
jmp
pop
out
sti
and
call
cld
and
and
mov
inc
jbe
sbb
int3
push
bound
xchg
lcall
and
negb
mov
lods
mov
cmp
pusha
adc
xchg
stos
pusha
cmp
ficoml
ja
insl
xchg
dec
mov
test
insl
push
pushf
daa
mov
arpl
ja
lods
stos
mov
cmp
xor
leave
insl
push
or
mov
pop
add
sub
inc
inc
and
inc
leave
cli
test
test
cmp
inc
lods
pop
sbb
out
jns
daa
pop
shrl
in
sub
add
fld
dec
jmp
sbb
hlt
mov
pop
loopne
cmp
out
jne
movsb
ret
rcrl
push
sub
jbe
cwtl
out
inc
and
rcll
int
test
sub
inc
lret
outsb
daa
xor
in
frstor
and
or
inc
pop
repnz
pop
add
pop
cmp
mov
adc
rcll
xchg
arpl
push
les
lret
and
cmc
xor
cmp
inc
dec
imul
pop
ds
movsl
pop
in
cld
and
pop
mov
push
sub
jge
test
jmp
lds
dec
add
clc
dec
repz
icebp
jge
loopne
sub
or
cmp
dec
mov
adc
add
pop
inc
xlat
test
push
dec
jns
fstpl
inc
sbb
jb
inc
cmp
jae
into
out
mov
push
icebp
ja
scas
test
pop
cwtl
push
xor
inc
sbb
jnp
mov
sub
gs
dec
add
test
mov
pushf
outsl
mov
mov
inc
aam
hlt
jo
pop
test
mov
adc
cmp
add
xlat
inc
sub
popa
outsl
test
lret
xchg
push
xchg
push
arpl
imul
out
ret
sub
outsb
call
int3
stos
inc
or
xchg
enter
inc
leave
cmp
inc
push
add
arpl
out
loop
int3
and
subl
mov
add
add
inc
iret
and
sbb
data16
dec
jnp
dec
in
rclb
dec
sbb
pusha
ret
loopne
es
jb
mov
mov
xchg
ss
push
jmp
push
mov
inc
hlt
lds
ljmp
xor
inc
push
imull
xor
lahf
mov
mov
aas
push
inc
test
inc
rolb
les
faddp
leave
inc
xor
add
lock
push
and
ds
fdiv
dec
push
or
imul
dec
and
xor
mov
sub
dec
mov
xor
cmpsb
in
pop
xchg
and
repz
lds
nop
jecxz
std
dec
andb
aam
dec
dec
mov
mov
daa
xor
scas
inc
out
imull
or
scas
mov
call
add
les
push
or
jmp
bound
inc
punpckhbw
add
pusha
stos
pop
dec
stc
push
arpl
cmp
icebp
push
in
xlat
push
push
addr16
sub
popa
scas
iret
adc
movsb
or
or
pop
dec
jae
outsl
adc
in
xor
add
and
int3
and
dec
ret
in
adc
lds
loope
popf
fs
rcll
xlat
test
shrl
aaa
inc
cmpl
in
lret
xor
jo
fisubrl
mov
push
mov
push
mov
loopne
cmc
popf
hlt
and
xor
lret
notl
into
inc
pop
push
pop
sbb
mov
cs
call
loopne
jnp
ffreep
les
rclb
xor
bound
pop
lds
and
sub
sahf
add
dec
int
sub
icebp
mov
test
mov
sub
jo
inc
mov
mov
push
mov
or
dec
xor
pop
sub
mov
iret
cld
mov
int3
ficoms
mov
xor
cs
and
iret
mov
mov
xchg
mov
loop
add
mov
sub
mov
test
mov
mov
xor
xchg
pop
push
shr
lret
adc
imul
add
jl
and
mov
orb
inc
jo
xor
push
sbb
push
dec
es
adc
mov
and
push
push
jo
push
push
adc
add
cltd
inc
adc
loop
ret
int
and
sti
nop
inc
es
nop
xchg
and
push
dec
addb
xor
lods
in
data16
xor
adc
and
dec
add
js
lods
outsb
mov
movsl
add
das
test
hlt
sub
leave
mov
sub
adc
mov
dec
xlat
aam
xchg
loope
xor
pop
jl
in
jl
rorb
std
add
dec
push
xchg
enter
jbe
pop
sbb
or
add
or
cmp
or
test
sbb
mov
and
inc
mov
add
add
dec
sti
push
xchg
mov
xchg
ss
out
imul
xchg
rcrb
inc
dec
xchg
inc
jne
lods
shrb
mov
movsl
inc
sbb
xchg
lock
or
push
sbb
jge
jo
test
push
and
adc
inc
push
ss
adcb
bound
add
ret
aam
mov
pop
mov
xor
outsb
mov
and
mov
ret
xor
or
jns
sbb
xor
das
inc
cwtl
dec
scas
pop
fcomps
or
xchg
xor
fidivs
call
popa
cmp
aad
shlb
je
pop
adcl
gs
dec
pop
mov
lock
je
je
aad
pop
jl
in
rolb
pop
cli
add
loop
mov
inc
push
add
jle
jne
xchg
repz
push
cmp
xor
xlat
adc
repz
into
push
mov
test
ja
push
push
iret
cmpsb
je
sbb
mov
aam
lahf
wrmsr
fs
cmpsl
adc
imul
or
inc
movsl
and
add
lods
into
jmp
push
ljmp
xor
sub
mov
pop
push
sbb
mov
leave
add
push
in
lahf
and
or
imul
jno
cmp
sbb
cmp
lret
mov
outsb
fimull
mov
je
cltd
rorl
scas
dec
sub
vpextrw
lds
adc
aam
addl
pop
in
shlb
je
mov
inc
enter
add
mov
xor
mov
mov
stc
lds
out
mov
inc
push
loope
jns
rcrl
jge
inc
sub
add
out
push
je
enter
push
push
push
xchg
lcall
sub
adc
scas
dec
cmpsb
jbe
ljmp
push
inc
or
in
jae
addb
iret
dec
push
clc
xchg
jge
inc
push
and
in
push
jnp
mov
dec
in
icebp
fisubl
fists
add
je
dec
jnp
jo
je
sahf
push
test
addr16
cwtl
fucom
cmp
mov
cld
repnz
lds
out
jb
fiadds
add
push
je
sub
xchg
aad
xchg
rcrl
in
mov
sub
jne
xchg
out
cmpsl
mov
popf
push
popf
push
xor
lret
add
sbbl
or
divl
sbbl
je
outsl
adc
inc
xor
pop
jae
in
clc
ret
adc
rclb
fsub
aam
arpl
sub
outsb
sbb
divb
test
rorb
push
mov
pop
jge
call
aam
mov
push
push
push
leave
jae
adc
loop
fidivrs
jbe
jmp
cmp
ret
orb
rcll
and
or
gs
xchg
jecxz
mov
add
mov
add
movsb
push
xlat
and
clc
mov
jb
mov
arpl
lds
xchg
push
cld
and
arpl
push
jno
adc
in
add
adc
adc
adc
dec
jp
sti
cwtl
or
or
mov
xor
adc
mov
mov
paddq
jnp
inc
xor
mov
xor
in
bound
or
push
jmp
pop
push
sub
adc
adc
repnz
movsl
mov
xchg
mov
pop
mov
rcrb
cmp
adc
jl
jbe
add
cmpsl
leave
jno
movsl
sub
imul
mov
xor
pushf
iret
push
jb
mov
sbb
push
popa
rcll
mov
mov
push
add
inc
fmull
rolb
inc
push
int
cld
push
and
lds
in
sub
mov
and
popa
adc
pushf
and
adc
jg
add
sbb
iret
xor
and
cmp
orl
cmpsb
pop
cli
ja
inc
lods
loope
push
xchg
sbb
push
mov
data16
mov
inc
mov
jo
lcall
in
add
pop
and
and
xor
xor
cmp
mov
jne
int3
pop
mov
aam
movl
mov
pop
jmp
mov
ret
pop
push
mov
push
inc
and
or
shll
les
mov
shrl
loope
pusha
pop
or
pop
xchg
xor
jns
inc
insb
push
loop
fnsave
call
jge
pushf
dec
mov
out
je
push
jns
lret
mov
pop
in
das
mov
push
fimull
sub
xchg
mov
mov
pop
adc
fsubrs
jbe
mov
cmp
mov
fsubrs
inc
outsb
ds
adc
aas
popf
mov
outsb
pop
mov
jb
push
sbb
out
into
add
lock
xchg
mov
loop
mov
mov
mov
aas
mov
andb
and
cmp
inc
and
scas
sbb
mov
xchg
push
dec
test
and
in
out
dec
movsl
inc
loop
dec
jo
roll
popa
cltd
addr16
inc
pop
push
dec
mov
adc
jnp
mov
dec
out
xchg
mov
leave
popa
std
sahf
mov
hlt
dec
and
outsb
nop
sti
popf
jno
cmp
jle
loopne
ss
rcll
aad
cli
mov
mov
fmuls
xchg
sbb
mov
pop
jp
xchg
leave
push
shll
imulb
pop
dec
call
sub
inc
movl
push
xchg
or
xchg
mov
loop
xlat
icebp
rorb
lock
in
add
ret
add
out
test
movsb
pop
mov
ret
mov
inc
mov
mov
mov
in
shll
sbb
inc
dec
mov
inc
sub
shlb
xor
addr16
dec
and
jmp
xor
enter
jmp
or
aas
out
or
stc
mov
cmpsb
into
cmp
rorb
movsl
mov
adc
and
mov
sub
jns
movsl
sub
cmc
dec
loopne
repnz
lods
lret
or
adc
lock
int3
aaa
cltd
pop
mov
icebp
and
inc
pop
jg
dec
xchg
fistpll
mov
pop
pop
xor
in
mov
bound
mov
xchg
xlat
inc
data16
pop
rcrl
imul
es
pop
andb
push
jo
push
sahf
pop
mov
pop
insb
loop
pop
repz
stc
popa
rcll
fadd
inc
call
dec
sbb
pop
and
inc
pusha
sar
es
rolb
movsb
push
sbb
xor
scas
push
mov
jnp
pop
sbb
xor
gs
or
imul
cmp
inc
pop
addb
adc
pop
mov
adc
pop
sbb
xchg
sbb
out
movsl
je
xchg
adc
or
mov
cmp
out
popa
or
fsubs
push
in
xchg
loopne
inc
mov
ja
ror
dec
repz
xchg
lock
push
xchg
push
shll
gs
push
testl
pmaxub
add
js
je
jmp
dec
and
popf
mov
je
insb
mov
mov
push
sbb
sub
mov
pop
push
jae
jne
dec
dec
iret
test
xorl
popa
cmp
movnti
push
int3
mov
arpl
or
scas
imul
jnp
jge
inc
adc
xchg
sahf
inc
xchg
xlat
lock
in
sub
pop
adc
test
test
inc
sub
int3
cmp
ret
daa
ficompl
in
inc
mov
adc
shlb
adc
or
lea
hlt
lea
sbb
repnz
ljmp
pop
inc
and
repz
xchg
inc
mov
adc
mov
push
fiaddl
sbb
or
mov
lret
pop
pop
test
lods
fimuls
movsl
mov
pusha
add
push
pop
adc
shll
cs
xor
xchg
add
inc
push
cmp
push
mov
aam
popa
pop
sub
push
imul
test
xchg
loop
lea
xor
dec
addb
sub
fwait
mov
sub
jl
in
add
or
xorl
std
in
push
pusha
or
in
xchg
dec
call
xor
jne
dec
push
adc
mov
shrb
cwtl
pop
out
inc
jbe
sbb
mov
xor
inc
repz
push
scas
hlt
std
movsb
pusha
mov
scas
sbb
bound
jecxz
inc
inc
lods
jb
dec
test
push
mov
rcrb
pop
or
inc
fwait
xor
jecxz
dec
push
or
mov
jb
mov
and
bound
or
xor
mov
mov
xchg
fldenv
cmp
sbb
outsl
xchg
inc
aad
sub
aad
xchg
data16
xor
addl
clc
rol
push
ds
addr16
lretw
sbb
push
fs
sbb
das
xor
out
adc
xor
cltd
inc
clc
dec
xor
cs
mov
sti
xor
inc
xor
and
movsb
inc
outsb
xchg
push
in
repnz
mov
shlb
xchg
int
or
test
ror
inc
push
sbb
in
adc
or
jg
out
push
cld
mov
and
xchg
and
outsl
fimull
xchg
adc
aad
test
test
inc
adc
cmp
push
cs
push
aaa
ret
cwtl
pop
sub
cli
jg
subl
inc
pop
dec
and
cmpl
pop
xchg
push
sbb
enter
roll
xchg
or
jae
or
lea
xor
jo
jge
nop
lret
out
into
dec
sbb
xor
fadd
adc
push
leave
mov
adc
outsl
enter
cmp
orl
inc
cs
lods
arpl
test
adc
popa
test
and
jne
push
xor
adc
dec
stos
lret
xchg
xchg
call
imul
mov
xchg
and
jns,pn
mov
leave
test
xlat
xor
std
sti
or
mov
xor
imull
ja,pn
imulb
sbb
pusha
pushf
in
dec
stos
mov
or
dec
xor
sbb
xor
aaa
push
loop
pop
sbb
and
int3
and
cmpb
shrl
popa
imul
inc
push
mov
out
mov
mov
lock
lea
rclb
mov
adc
mov
sub
cmp
pop
jns
nop
arpl
cli
mov
mov
inc
ljmp
mov
dec
movsl
jae
imul
mov
add
lret
sarb
mov
test
leave
out
jnp
into
cmp
stc
popf
adc
jne
dec
das
xchg
adc
add
sub
in
mov
push
inc
push
popa
push
and
adc
cld
mov
inc
jmp
mov
cmp
fucom
jb
jecxz
aam
movnti
insl
stos
mov
and
fbstp
sbb
mov
neg
cmpsl
nop
dec
and
push
add
out
fwait
cmp
aam
inc
pusha
push
out
push
mov
xchg
bound
rorb
adc
mov
test
outsl
scas
ficoms
cmp
loopne
xchg
imul
mov
cmp
mov
fsubrs
addr16
repnz
mov
lds
ss
addr16
jns
pusha
push
mov
adc
popa
test
ret
add
jae
repz
inc
cld
add
into
and
movsl
and
xorb
push
jb
faddl
aaa
pop
jle
or
enter
loopne
and
adc
jo
jno
or
lods
cmp
cmp
mov
cmc
int
test
stc
push
cmpb
pop
xchg
imul
mov
mov
and
xor
adc
and
call
stos
cwtl
insl
sbb
and
cmp
xor
add
std
pop
dec
cmp
repz
outsl
adc
and
bound
mov
dec
aad
and
rcll
push
add
je
push
mov
push
hlt
jne
mov
sar
mov
std
ret
jmp
in
jecxz
xor
xchg
aaa
or
scas
cmp
mov
adc
in
sti
inc
cmp
andb
iret
aaa
sbb
pop
xchg
loop
cmc
das
mov
lcall
push
push
inc
add
xor
into
insb
xor
movsb
mov
enter
imul
and
fists
pusha
test
xchg
and
int3
test
ds
test
inc
push
in
pop
and
mov
mov
add
sub
and
hlt
roll
fsubs
inc
out
iret
push
adc
sub
xchg
add
movsl
cmp
fisttpl
int3
push
mov
add
lods
mov
mov
mov
loope
mov
ljmp
sub
mov
add
sti
outsb
enter
push
mov
int3
push
in
pop
jmp
pop
xchg
push
cld
inc
sbb
mov
mov
push
subb
mov
mov
fistpll
ds
dec
and
push
xor
mov
andb
js
int
sub
filds
dec
dec
jbe
cmpsb
xor
dec
cmc
sub
and
sub
pop
add
dec
pop
popa
out
push
mov
or
push
add
or
pop
mov
insb
pop
in
stos
pop
and
xchg
imul
cmc
sbb
mov
outsl
jae
jmp
lods
inc
sbb
sbb
xor
dec
aaa
dec
ret
push
aad
int
nop
adc
sbb
or
cmpsl
xchg
ss
or
imul
cwtl
cs
xor
sub
push
lret
xor
xchg
in
icebp
push
jmp
push
mov
call
xor
adc
bound
mov
add
subb
xchg
sub
test
mov
gs
inc
or
xchg
das
sub
jnp
jmp
push
lret
pop
xchg
jp
jno
das
hlt
fidivl
fists
subb
mov
pop
inc
jl
pop
xchg
and
scas
pushf
mov
pop
imul
jnp
xchg
fsubs
rcll
sbb
dec
aad
and
pop
inc
inc
jne
jecxz
pop
imul
loop
lcall
xchg
je
inc
or
inc
movsl
loop
shrb
jl
ret
sbb
popa
dec
jnp
xchg
cmpsl
sbb
fwait
ret
hlt
jle
pop
loopne
cs
push
out
pusha
call
adc
and
data16
xor
les
inc
iret
nop
fldenv
int
pop
test
pop
in
mov
mov
push
andl
divl
mov
adc
out
dec
dec
and
push
retw
sbb
popl
jo
mov
mov
sub
jno
pop
stos
popa
cmc
daa
fstps
rol
out
fs
pop
bound
and
adc
dec
call
mov
rclb
and
rolb
loope
mov
ja
addb
mov
das
icebp
adc
movsl
pusha
xor
loopne
sbb
icebp
icebp
pop
cwtl
cmp
lds
dec
int
jne
and
dec
pop
mov
jecxz
loopne
mov
popa
movsl
insb
add
rcll
xor
pop
movsb
bound
cmp
fistps
fdivs
fcmovbe
sti
inc
push
rorb
sub
xor
fs
and
mov
push
addl
outsl
subb
aad
lahf
mov
rcll
dec
iret
rcll
rcll
test
int3
xchg
aaa
scas
in
sbb
jle
cmp
scas
idivl
out
cmpsb
inc
cmpsb
fs
inc
movb
cld
fmul
cld
adc
mov
je
pop
lock
fnsave
cmp
inc
jecxz
push
adc
and
pop
or
push
jle
pop
dec
aam
fsubs
or
lock
inc
jle
inc
sbbl
inc
inc
sub
mov
dec
adc
or
mov
xchg
sub
and
adc
fs
loop
and
mov
test
cmpsb
and
jnp
imul
push
and
jno
loopne
sbbl
incl
inc
in
mov
jge
mov
sub
outsl
mov
fdivrl
push
js
ret
lcall
lcall
push
push
pop
rcrl
xor
dec
xchg
add
dec
ret
out
cli
add
xchg
dec
fstps
dec
mov
insb
jnp
xchg
mov
lcall
mov
fdivs
leave
xor
scas
in
popa
add
dec
insb
dec
or
xchg
loopne
ret
dec
mov
in
xchg
pop
sbb
fwait
int3
insb
bound
pop
test
pop
push
adc
add
push
insl
pushf
mov
pop
jmp
aad
cli
jecxz
mov
cmp
push
jg
mov
add
mov
add
cld
push
mov
mov
lds
sub
pop
mov
mov
pusha
add
mov
pusha
popf
push
inc
loope
cmp
jno
andl
pop
cmpsl
xchg
xchg
cmp
faddl
repnz
sarl
add
jecxz
cmp
cmc
inc
jl
ret
fisttpl
inc
loopne
push
loope
arpl
shl
daa
cli
jae
daa
pop
pop
lcall
lahf
pop
ds
loop
pop
les
xchg
nop
andb
mov
addb
dec
scas
push
imul
push
iret
gs
in
xlat
fstps
mov
mov
or
push
cmp
cmc
movsb
sub
adc
dec
inc
insl
add
or
inc
lods
add
jmp
dec
shll
out
jbe
iret
xchg
jmp
loop
xchg
lret
xor
add
movsb
adcl
shlb
mov
scas
daa
xor
aas
ret
push
movsb
xor
repz
mov
popf
xor
mov
pop
or
int
fldl
jbe
xorb
jecxz
xchg
imull
pushf
jmp
popa
out
popf
sbb
ret
and
xor
push
repnz
mov
inc
insb
jmp
enter
sub
faddp
add
push
dec
inc
cmp
adc
mov
out
pop
dec
cmp
xchg
inc
lcall
and
add
or
test
lcall
in
daa
add
sub
inc
jl
mov
loop
xchg
cmp
and
call
in
sbb
out
outsl
adcl
popf
subb
lret
and
dec
mov
arpl
orb
mov
in
pop
jecxz
dec
insb
push
aam
insb
xor
or
adc
xor
test
vcvtss2si
and
roll
movsb
mov
add
push
dec
stc
push
add
aas
sbb
cmp
fidivrl
sub
push
cmc
xlat
adc
mov
and
repnz
jge
cmp
test
mov
outsl
pushf
xchg
leave
testl
daa
les
jns
icebp
popf
inc
fs
inc
and
adc
add
add
adc
xchg
mov
addl
mov
xchg
cmp
jmp
adc
in
pop
push
dec
xor
add
add
xchg
mov
jnp
xor
adc
lds
push
mov
jmp
push
enter
mov
jnp
add
cld
in
loopne
xchg
popf
fisttpll
mov
testl
shlb
mov
jnp
bound
imul
pop
jbe
insb
push
mov
dec
movsl
aas
insb
xchg
in
clc
insl
xor
insl
ret
push
mov
addb
dec
push
jmp
or
or
mov
add
out
adc
xor
je
int
jl
outsb
and
push
mov
lret
cmp
pop
xchg
arpl
dec
sbb
imul
add
cmpb
int3
or
xchg
adc
mov
shll
jne
imul
inc
repz
movsl
daa
outsb
jecxz
int
xchg
push
pop
sub
jl
aas
pop
xor
jg
test
icebp
pop
mov
into
scas
xchg
push
push
push
in
xor
shll
xchg
enter
test
and
dec
dec
jge
and
out
aaa
xor
popa
pop
mov
and
cmc
sbb
inc
inc
lret
in
push
nop
jo
sbb
loopne
and
pop
xchg
cld
popa
cwtl
addl
push
mov
fcoms
adc
movsb
or
ret
add
xor
in
and
mov
fadd
push
test
stos
inc
pop
mov
repnz
dec
dec
xor
jb
movsb
rcrb
pusha
add
add
pushf
pop
loope
insb
data16
gs
mov
pop
and
shrl
pop
jg
jge
sbb
cmc
add
mov
mov
push
sahf
shll
sbb
add
mov
addl
adc
push
mov
lods
mov
fwait
sbb
ret
mov
cli
dec
mov
enter
sbb
movsl
shll
push
ret
ds
es
cwtl
cs
pop
sbb
xchg
lret
lods
in
jle
or
push
adc
loope
or
arpl
add
loop
loopne
jnp
rorl
jae
and
lods
inc
or
add
stos
nop
adc
push
xor
ss
mov
les
les
scas
adc
in
outsb
loopne
mov
in
cmp
andb
jno
scas
shrb
push
push
and
loopne
jle
daa
mov
gs
sbb
or
bound
sbb
add
arpl
jecxz
insl
lods
lock
mov
mov
dec
adc
inc
mov
push
adc
jno
xor
mov
cmp
xchg
xchg
push
mov
int3
mov
mov
lock
xchg
jae
jge
push
insb
shll
xchg
add
imul
dec
subb
cmpsl
clc
fwait
lret
dec
gs
xor
mov
ret
shll
dec
pop
xor
push
jl
popf
sysexit
jne
or
xlat
in
lods
pop
jae
sub
pusha
pop
bound
xor
xchg
in
test
mov
leave
xor
jno
out
stos
and
jnp
add
xchg
and
loopne
mov
insb
lcall
cli
loope
xchg
cwtl
add
test
movl
xchg
cmp
test
packuswb
push
test
inc
pop
outsl
lods
mov
test
push
ret
jg
sub
add
jnp
repnz
aaa
shlb
jae
mov
test
xor
rcll
sbb
jo
and
mov
movsb
pop
in
out
adc
lock
lock
sub
pop
sub
jp
add
stos
movsb
incb
pushf
mov
xchg
push
stos
dec
jp
movl
jo
div
cmpsb
sub
and
xor
lret
pop
or
shr
mov
in
lahf
xchg
sub
and
fisttpll
int3
dec
das
out
aam
stos
xchg
and
sub
inc
jnp
or
adc
je
mov
and
sub
ret
pop
ret
xchg
pushf
aad
jno
push
jp
xor
push
sub
das
loope
mov
cmp
repnz
repnz
mov
imul
jb
xchg
and
icebp
ret
mov
xchg
and
arpl
repnz
xor
pop
xor
xchg
pop
mov
ljmp
aad
add
mov
cld
push
dec
lea
mov
add
gs
xchg
push
inc
jp
ss
mov
xor
lcall
push
sarl
jo
stos
popl
xchg
jns
push
inc
and
dec
cld
cmpsb
jl
jbe
lds
addr16
imul
nop
popf
mov
and
push
in
jb
add
es
lds
mov
dec
and
std
mov
or
repz
mov
dec
mov
shrb
enter
cli
movsl
iret
out
cld
popa
out
sub
xchg
mov
sbb
and
aaa
into
xchg
fsubl
mov
mov
add
test
or
fs
lods
push
lcall
adc
adc
into
mov
inc
inc
cwtl
rdtsc
dec
stc
scas
and
inc
and
mov
and
mov
imul
adc
mov
jl
ja
setg
sarb
fcoml
mov
xor
xlat
adc
scas
testb
ljmp
fldenv
push
pop
rcrb
rclb
mov
push
jo
mov
nop
and
mov
jge
pop
adcl
and
jo
xchg
inc
clc
int3
mov
in
mov
out
push
push
arpl
xor
lods
xor
enter
mov
mov
mov
movsb
lcall
or
rcll
adc
jmp
cltd
mov
xchg
fdivs
stos
mov
daa
mov
add
inc
dec
fists
fdiv
insl
test
push
cmp
loope
loop
pop
shlb
and
pop
les
loop
jne
dec
adc
pusha
add
ret
outsl
add
arpl
pop
add
xor
ja
inc
cli
fnstenv
push
movsl
leave
mov
cltd
adc
mov
std
outsb
cmp
mov
and
inc
test
pusha
jnp
adc
test
dec
gs
jo
xor
lds
inc
add
scas
jmp
loopne
aam
out
bound
movsb
adc
pushf
cmp
aas
ret
dec
mov
adc
dec
inc
mov
dec
inc
jp
in
push
xor
jge
inc
mov
jo
int3
and
es
mov
xor
insb
clc
and
imul
xor
es
xor
int3
cmp
outsl
mov
lret
cmpsb
mov
shld
pop
lods
push
sbb
js
mov
inc
out
cmp
xchg
fbld
and
dec
adc
cmp
dec
fistl
lods
lods
cmpsl
sbb
insl
sbb
push
bound
lods
int3
aas
ja
arpl
adc
inc
add
inc
ret
adc
push
and
push
inc
push
xor
loope
push
push
and
xor
inc
inc
or
call
out
xchg
add
loope
sub
ss
test
cmp
xchg
je
test
xchg
out
and
push
inc
pop
jb
bnd
or
lret
shr
pop
test
push
push
dec
mov
add
add
xchg
in
jg
mov
push
sbb
and
repnz
out
out
push
mov
inc
adc
ret
mov
sbb
addl
fnsave
mov
inc
lcall
pop
ret
test
mov
les
pusha
test
xor
fdivrp
xchg
mov
lods
or
std
add
addb
jp
cmp
dec
int
pop
clc
filds
pop
cwtl
std
in
adc
lret
js
data16
mov
shl
lahf
sub
dec
mov
jmp
xor
les
cmpsb
cltd
loope
cmc
dec
cmpsb
loop
jg
push
divl
rclb
hlt
dec
push
call
les
mov
sub
ds
pusha
nop
js
inc
jmp
dec
in
push
icebp
dec
adc
sbb
push
das
bound
dec
in
mov
ret
sub
fsubr
jle
aas
xor
data16
in
sbbl
mov
out
cmp
xor
mov
xlat
jns
pop
fisttps
inc
and
mov
addl
mov
xchg
outsb
lods
jmp
mov
fsubs
adc
inc
pop
ret
sub
das
or
xchg
cmpsl
std
ret
cmpl
les
imulb
ret
repnz
pop
push
movsb
popf
fnstenv
sbb
dec
pusha
mov
les
and
lret
kmovw
mov
pop
in
inc
repnz
pusha
notb
test
adc
pop
ficompl
fildll
inc
lcall
sub
cmp
and
sbb
dec
fstps
push
mov
jns
mull
mov
test
bound
jg
cmp
mov
repnz
xor
pop
mov
adc
inc
adc
mov
inc
or
xchg
xor
stos
test
stc
rorl
sbb
cmpsb
orl
dec
scas
test
adc
fwait
js
out
js
dec
xchg
push
and
out
xor
mov
shll
les
pop
push
mov
lds
adc
jne
xchg
lock
xchg
mov
filds
inc
cmpsb
mov
push
scas
ds
push
jl
xor
clc
xor
or
in
inc
inc
and
adc
lcall
mov
inc
push
rcr
insb
push
add
test
jge
push
loopne
mov
pop
fisttps
aam
pop
or
cmp
std
xchg
popa
mov
xchg
loopne
xchg
nop
push
cmpsl
es
or
add
cld
aam
push
xor
add
sub
movsl
inc
mov
xchg
sub
push
popa
xor
fwait
adc
aaa
and
mov
mov
les
je
and
inc
mov
scas
int
xchg
dec
shl
dec
in
xchg
movsl
push
add
adc
push
lret
lcall
nop
dec
loopne
adc
les
test
push
and
add
lock
jo
outsl
popa
or
cmpl
mov
or
xlat
sub
pop
jecxz
jae
mov
int3
popa
and
xorb
ss
enter
mov
add
pop
sub
sbbl
daa
or
dec
es
or
test
aas
out
inc
sarl
in
in
and
lret
int3
pushf
dec
loopne
mov
add
je
sahf
add
rcrb
les
push
push
sub
icebp
push
jmp
push
flds
or
push
jae
add
jo
lock
dec
sbb
jge
pop
inc
inc
jne
mov
push
and
xchg
rorl
insl
inc
dec
fs
inc
lahf
shrb
and
fmulp
addr16
push
push
mov
or
gs
jae
adc
js
fisubrs
push
enter
sbb
test
and
cltd
pop
mov
outsl
and
test
or
sub
fsubs
bound
imul
mov
inc
inc
sub
ljmp
mov
js
xor
addr16
sub
mov
and
movsl
or
xor
add
dec
call
or
push
in
in
in
push
lock
or
aam
xor
fs
sarl
dec
push
adc
loopne
mov
adc
add
cmp
movsb
sbb
xchg
mov
repnz
enter
push
lahf
popa
mov
je
rorl
lret
sub
jae
xor
ret
xor
pusha
mov
add
push
cltd
and
and
outsl
int3
in
adc
sub
lds
push
sahf
xlat
sub
xor
fsub
sub
clc
call
lods
incl
iret
frstor
and
inc
fs
ljmp
push
jnp
adcb
jae
jg
es
push
cs
pop
jmp
movsl
pop
sbbb
mov
xor
xchg
inc
add
xorb
jno
pop
sahf
xchg
add
pusha
je
push
xor
xchg
loopne
lcall
xchg
inc
movsl
xor
bound
pop
ret
popa
cmp
mov
and
nop
adc
repz
rcrl
xchg
movsb
jl
adc
ds
xor
shll
call
pop
stos
pop
ret
or
pop
rclb
push
in
push
fisubs
xchg
xor
and
lock
rol
call
mov
daa
mov
out
es
xchg
push
popf
divl
int
push
jg
mov
mov
xchg
loop
push
dec
dec
lret
faddl
test
bound
adc
xor
push
lret
inc
mov
insl
add
gs
in
pop
mov
ja
test
cmp
cmp
cmpsl
data16
or
fxch
jo
rcrl
lret
flds
and
xor
inc
outsb
outsl
lock
cmp
loope
or
push
loope
fsubs
inc
xchg
xchg
add
scas
rcrl
test
in
aam
xor
dec
movl
insb
cmc
in
mov
push
scas
nop
jecxz
nop
inc
add
adc
jo
inc
mov
sarl
dec
inc
addr16
sbb
hlt
aad
shlb
movsb
imul
mov
into
xor
int3
sub
shr
data16
jne
imull
cmp
call
popa
arpl
insb
dec
aad
mov
ljmp
cmp
shlb
movsb
test
push
and
mov
aad
mov
aam
fbstp
in
je
ljmp
xor
push
inc
xchg
or
pop
mov
mov
lock
scas
loope
pop
inc
incb
add
pop
cmc
test
cmp
add
gs
xor
jmp
movsb
decb
xchg
xchg
dec
adc
cmp
popa
pusha
scas
rolw
pop
sub
addb
sarb
in
movsb
in
iret
xor
cmp
sub
mov
fisubrs
mov
adc
xchg
lock
push
mov
jne
popa
mov
test
fcomps
cmc
shlb
push
and
aad
addb
ss
xchg
jmp
xchg
and
cmc
test
insl
inc
mov
and
pop
shlb
adc
push
or
popa
in
cmp
pusha
daa
inc
sbb
adc
in
add
xor
mov
lds
xchg
mov
in
and
and
mov
fs
aas
in
into
test
in
test
and
jo
ret
xor
dec
mov
inc
add
icebp
movsl
clc
mov
mov
add
out
push
sub
inc
test
out
push
daa
mov
stos
lahf
bound
inc
data16
test
lods
xor
scas
and
shll
or
sub
test
push
jne
push
jno
add
mov
in
dec
popl
fadds
push
popa
shlb
aam
rorb
clc
mov
push
mov
repnz
out
adc
sbb
movsb
sub
lock
out
shrl
loope
pop
inc
ss
sub
mov
in
xor
dec
jmp
inc
or
sahf
mov
gs
pop
mov
out
push
push
mov
stos
xor
mov
sub
lahf
adcl
mov
mov
jmp
loopne
pop
xor
cmp
sbb
inc
pusha
or
add
daa
test
pusha
add
fldl2e
rcll
jno
and
rorb
icebp
sbb
xor
lcall
jb
push
ljmp
fadds
paddsb
add
and
add
sbb
ret
mov
and
dec
mov
es
lock
pop
mov
jo
rcll
jmp
nop
cmp
dec
xchg
movsb
mov
xor
cmp
cmc
mov
mov
call
mov
and
inc
xchg
fs
ja
and
adcl
adc
mov
adc
inc
push
or
orl
cltd
mov
aad
push
mov
adc
lret
add
sub
loop
inc
mov
add
rcr
sub
stos
in
push
inc
fwait
aad
fsts
gs
daa
mov
or
add
inc
dec
stos
lret
sub
mov
fstpl
or
cltd
gs
arpl
int
adcl
push
dec
xor
pop
inc
fildll
fwait
dec
push
push
dec
push
shll
xchg
mov
divb
loope
ret
jmp
sbb
xor
push
in
andb
out
add
add
fldl
and
mov
mov
pusha
das
add
dec
mov
repz
movsl
outsb
jmp
nop
dec
xor
mov
add
adc
das
add
push
sub
xor
shlb
push
imul
pop
inc
mov
xchg
mov
aas
push
lds
mov
and
xchg
cmp
cltd
mull
shll
mov
loope
outsl
das
mov
mov
outsl
mov
imul
shll
dec
cmc
add
out
subb
imul
les
shlb
sbb
pop
sub
adc
loope
dec
iret
push
and
dec
notl
pushf
mul
enter
pop
xor
popa
pusha
xchg
pop
mov
jnp
push
subb
hlt
push
xor
jecxz
jmp
lods
inc
and
cli
inc
inc
dec
xlat
lds
jne
adc
int3
pushl
cli
aaa
inc
cmp
clc
scas
mov
mov
call
push
mov
iret
pop
adc
xor
mov
leave
pushf
loopne
pop
dec
mov
cmp
fisubrl
into
lcall
dec
push
dec
cmpsl
mov
pusha
sub
data16
bound
xchg
jbe
in
jo
pushf
pop
int
mov
cmpsl
mov
int3
rclb
imul
mov
xchg
or
orl
test
mov
add
dec
adc
nop
xlat
cmp
sbb
scas
sub
jmp
cld
loop
fadds
sub
ljmp
ror
std
loop
addr16
test
xor
xchg
shll
xchg
and
dec
xor
pop
in
dec
lret
inc
sbb
lock
sbb
movsb
xchg
push
adc
sub
aas
or
dec
mov
xchg
scas
aad
loopne
sbb
sub
add
add
into
push
imul
pop
jo
push
addb
mov
nop
bound
es
add
scas
adc
xor
lds
mov
shrl
loop
or
mov
sbb
xchg
ret
mov
jge
xchg
lds
mov
sub
das
adc
lock
ds
pop
lret
cmpsl
int
xlat
xchg
dec
dec
iret
outsb
outsl
fisttps
pop
insb
cmp
push
dec
xlat
les
jo
insb
or
jle
mov
ja
and
adc
xor
in
mov
imul
ds
dec
dec
push
into
movsl
test
pushf
push
inc
imul
jnp
gs
push
pop
neg
mov
dec
mov
or
add
icebp
inc
dec
scas
bnd
jno
cmpsl
outsl
popa
enter
xor
mov
and
adc
and
jae
mov
xor
push
jmp
sbb
inc
inc
pop
xor
ret
mov
int
jle
xchg
inc
es
dec
push
mul
add
leave
mov
sti
adc
sbb
jnp
or
or
les
jmp
movsl
mov
ret
addr16
in
sti
add
cltd
mov
and
das
push
inc
cli
adc
mov
dec
mov
ja
loopne
jmp
sbb
mov
call
inc
imul
mov
or
inc
jmp
fistl
movsb
flds
iret
outsl
jno
insl
add
lret
aam
jbe
xlat
mov
movsl
imul
int
lock
mov
inc
push
jo
in
xor
inc
dec
cmp
sub
out
push
test
lcall
mov
loop
rolb
and
shr
push
add
cld
add
in
mov
xchg
xchg
daa
subl
inc
and
addb
and
rorb
xchg
add
or
and
and
and
add
add
xchg
mov
sub
mov
sub
adc
mov
andb
leave
mov
push
add
lods
movsb
ret
in
andl
dec
inc
add
mov
jne
adc
inc
mov
mov
in
inc
imul
and
push
repz
add
sbb
bound
pop
sub
mov
push
shll
xchg
push
xchg
inc
and
push
and
vxorpd
mov
cmp
xor
pusha
shrb
test
add
sub
lds
nop
add
mov
push
rolb
inc
lds
add
inc
inc
shll
lods
andb
shll
push
inc
or
loop
and
cmpsl
add
mov
nop
inc
addb
cwtl
lods
cmp
cmpsl
je
loopne
xor
out
add
lock
cmp
pop
mov
adcl
xor
lea
mov
nop
sub
pop
sbb
xlat
fcomps
fadd
mov
push
inc
push
push
and
popa
fs
cmp
insb
dec
sub
fistpll
xor
inc
outsl
inc
xor
add
xchg
cmpsl
in
cmpsl
and
jg
adc
ffreep
sub
in
sub
loop
mov
dec
shlb
sub
ljmp
add
inc
or
add
jl
je
imulb
add
cs
je
lds
xor
sbb
iret
add
out
and
pusha
cmp
rolb
inc
out
jo
add
dec
push
xor
push
outsl
dec
dec
nop
fwait
loop
cmp
lods
imul
mov
aam
into
lods
mov
push
xchg
pop
dec
mov
aas
adc
insb
and
ret
dec
xor
iret
test
push
std
mov
xchg
cs
dec
inc
scas
jl
mov
std
mov
mov
xchg
mov
loop
clc
sub
fadds
pop
xchg
jle
mov
dec
pop
inc
imul
mov
cmc
pusha
cmp
xlat
sub
mov
dec
mov
sbb
out
dec
xor
and
sbb
or
mov
mov
fcomi
scas
inc
jle
nop
or
daa
jnp
jb
cmovb
jne
cmp
scas
iret
aad
cld
stos
loopne
outsl
mov
ljmp
sbb
xor
sbb
sub
sbb
out
pop
or
lcall
sbb
test
sbb
fiaddl
inc
adc
push
add
pusha
in
outsl
push
or
shll
sbb
jno
testl
ss
and
arpl
sub
in
jae
in
jbe
fdivrl
test
shl
imul
clc
mov
cwtl
cmp
je
insb
mov
arpl
mov
and
gs
adc
sub
test
mov
dec
or
in
in
clc
les
mov
sub
cltd
fs
pop
sbb
je
enter
sub
fadds
and
lret
mov
js
and
mov
push
clc
pop
mov
adc
push
pop
or
ret
and
adc
nop
push
jo
ljmp
mov
dec
xchg
stos
jae
scas
sbb
and
and
out
xchg
fwait
mov
and
or
inc
subb
cwtl
subb
adc
pop
lods
add
mov
popa
adc
or
mov
or
iret
js
cmp
dec
adc
shll
loope
cmp
lds
adc
jge
out
push
jg
lea
jnp
cmpsb
mov
int
and
movsb
inc
sbb
mov
std
cmp
sbb
cltd
into
xchg
in
sbb
push
loopne
and
mov
aam
xor
in
shll
lcall
test
gs
and
movsl
inc
insb
cmp
sbb
xlat
inc
aas
sub
jbe
adcb
lods
clc
mov
gs
dec
repnz
push
pushf
xchg
lds
in
rorb
rsqrtps
out
test
mov
push
test
dec
scas
outsb
adc
pusha
insb
incl
or
push
or
add
loopne
mov
inc
sbb
cmp
add
and
dec
aaa
push
xchg
je
sub
addl
or
lds
testl
adc
test
inc
lods
mov
add
imul
cli
and
loop
and
lret
inc
aas
jg
dec
cmp
mov
sbb
xorl
add
add
test
add
sbb
rclb
icebp
mov
jne
mov
inc
fs
sub
dec
lock
inc
cmp
sub
jns
xchg
inc
pusha
push
fisubl
dec
imul
rclb
jp
pop
insb
es
cltd
into
push
out
pop
add
cwtl
stos
movsb
add
aam
mov
sahf
sub
xor
mov
and
sbb
in
andb
inc
flds
pusha
push
cmpl
and
movsb
mov
cmc
adc
testb
inc
push
push
dec
enter
loopne
xlat
xchg
loopne
imul
or
or
movsl
dec
insb
insb
cli
fbld
and
mov
sub
or
loope
xor
sub
jo
xor
mov
push
inc
mov
enter
inc
fistps
or
mov
pop
and
fdivl
hlt
mov
dec
push
sbb
pop
xor
nop
dec
aaa
rclb
sub
and
sbb
cmp
adc
out
push
inc
test
and
sbb
cmp
dec
mov
xchg
lcall
test
ret
inc
mov
push
sub
xchg
adc
jns
dec
pushf
fsubs
pop
mov
and
aam
dec
and
add
icebp
lds
hlt
jne
popf
lds
out
sbb
mov
int
lds
cmp
jecxz
add
out
push
imul
cmp
adc
sub
dec
pop
and
mov
xor
mov
cmp
nop
or
mov
mov
add
scas
cmp
add
cmp
jge
push
jl
movl
sarl
push
mov
dec
sbb
and
jo
popf
xchg
cmpb
loopne
stc
rol
and
enter
and
stc
nop
cltd
inc
mov
adc
dec
push
fadd
test
shll
and
lret
js
sbb
shrb
fs
inc
mov
popa
mov
xchg
and
sub
sub
leave
mov
xor
cwtl
add
cld
xor
test
sub
imul
nop
rorb
test
and
in
sub
daa
xor
mov
xorb
mov
adc
sbb
and
add
push
pop
out
xor
jge
movsb
outsl
inc
nop
aad
jno
mov
xor
bound
xor
cmp
dec
fimuls
test
sub
cmp
push
inc
or
push
std
and
mov
inc
add
shl
pop
xchg
xchg
lea
jmp
inc
push
std
mov
mov
inc
pop
mov
hlt
aas
outsb
pop
sub
ffree
repnz
mov
int
sbb
out
shlb
mov
mov
arpl
es
nop
jo
and
adc
sub
mov
movl
leave
mov
rcll
push
dec
xor
add
sti
adc
dec
pop
xchg
inc
adc
mov
lret
stos
testb
or
lret
mov
arpl
push
pop
or
cmp
push
aad
shl
call
repz
out
jecxz
mov
inc
jne
pop
xor
jmp
mov
jb
stc
xor
loope
or
rol
bound
xchg
clc
ret
lahf
xor
out
cmp
insb
or
sub
fs
enter
testl
loope
mov
add
ret
jge
mov
cmpsl
es
pop
faddl
sbb
repnz
sub
mov
nop
sahf
and
and
aas
and
or
shlb
ret
push
or
or
js
in
inc
push
mov
mov
push
inc
sub
out
mov
sub
aaa
adc
xchg
inc
or
rclb
cmp
sahf
std
iret
aas
sub
lret
call
shll
mov
xchg
and
mov
std
fildl
jne
mov
cld
xor
push
sbb
jg
push
jnp
cmpsb
je
and
out
insl
fldpi
fwait
and
pop
mov
in
cld
fldt
bound
int3
repz
int3
adc
aaa
xorb
call
nop
inc
js
lods
iret
ret
pop
flds
inc
mov
fs
dec
les
pop
pop
mov
mov
nop
pop
fldt
movsb
outsb
outsl
xchg
pop
jle
mov
outsb
jp
inc
and
cmp
jle
orl
xlat
scas
xchg
dec
fs
cmp
or
shrl
and
je
dec
mov
shl
scas
jp
repnz
inc
pop
ret
xor
jns
sbb
or
insl
xchg
xor
popf
xchg
iret
jge
add
or
jmp
cmp
enter
into
push
scas
push
loope
mov
imul
fbld
mov
dec
insl
push
cmpsb
sbb
push
mov
aam
sub
or
xchg
mov
shlb
mov
gs
xorb
xlat
adc
mov
sarb
push
fsts
adc
pop
ss
insl
sub
pop
bswap
movsl
cltd
inc
add
lods
nop
pop
in
or
cmc
and
in
insb
jo
shrb
jb
adc
and
inc
push
lea
push
mov
sbbl
mov
in
sub
dec
movsb
int3
or
jmp
test
jle
adc
xchg
pop
adc
divl
pop
xchg
jo
sub
or
icebp
xlat
in
dec
or
je
xchg
mov
clc
mov
dec
sbb
ret
std
out
sbb
shlb
pop
jge
lcall
xorl
mov
decb
hlt
das
into
sub
dec
les
cmp
ss
into
sub
pop
es
cmovo
xchg
dec
add
and
mov
lret
int
fistl
sub
stos
scas
fbld
pop
adc
jmp
cmc
insb
push
dec
or
inc
inc
inc
sar
sbb
mov
adc
pop
in
pop
push
loope
test
in
mov
rcrb
lret
sbb
xlat
and
sbb
adcl
and
inc
xchg
outsl
in
pop
add
mov
shlb
or
ffree
ret
push
ja
mov
les
in
inc
test
test
cmp
cmc
xchg
xchg
mov
lret
add
jnp
sbbl
xor
int
mov
outsb
inc
std
ret
fbstp
xor
dec
mov
ret
sub
icebp
add
out
dec
dec
fmull
mov
lock
loope
cld
movsl
lock
add
pop
or
adc
push
mov
pop
mov
loope
nop
jg
fstpt
and
mov
mov
inc
add
hlt
cmp
sahf
mov
scas
roll
xchg
idivb
sbb
addr16
cmpb
mov
hlt
xor
aaa
inc
seto
test
mov
jl
ljmp
adc
sbb
call
and
ljmp
mov
leave
push
imul
hlt
lods
test
dec
shll
clc
out
aas
fbld
push
adc
lock
mov
leave
inc
test
data16
test
pop
mov
inc
push
sub
xor
lds
sub
ret
pop
cmp
jb
push
rol
inc
jbe
ljmp
pop
lea
cmpsb
pop
inc
cmp
or
imul
ret
or
ds
rcrl
aas
or
dec
xlat
cltd
inc
jge
adc
jnp
jp
push
fistpl
cmpsl
ja
lock
inc
jecxz
pop
sahf
dec
loop
stos
std
adc
and
mov
subb
negb
out
enter
inc
cmp
sti
movsb
data16
shr
out
lds
mov
popa
add
xchg
adc
in
adc
push
pop
mov
dec
out
or
pop
lahf
inc
fisubl
add
mov
loop
jb
sub
jmp
inc
loopne
mov
fs
push
mov
mov
adc
and
aam
andb
insl
xor
idivl
mov
stos
aas
ret
fwait
adc
repz
xor
in
add
fs
pop
pop
stos
test
dec
jns
pop
pop
inc
cmpsb
xchg
add
inc
pop
or
inc
xor
add
add
lods
test
push
xchg
nop
fbld
nop
jecxz
lea
lock
xor
adc
adc
dec
cmc
sub
imul
int
ljmp
pushf
xchg
mov
pop
lret
add
popa
ljmp
inc
sub
loopne
clc
jecxz
lret
xchg
cmpsb
movsb
push
cmp
jb
int3
jns
push
int
sbb
in
and
mov
scas
insl
xchg
hlt
imul
setne
jno
mov
xchg
cmpsl
inc
incl
adc
push
cmpsl
stos
sub
cli
and
dec
push
mov
movsb
mov
jmp
sbb
ljmp
jbe
int
icebp
daa
adc
add
jl
in
add
outsl
xchg
out
test
or
cwtl
mov
into
jb
sti
dec
loop
cltd
popa
cmpsl
jle
cld
pop
daa
addl
adc
dec
inc
xchg
adcb
rcll
xor
sub
push
pop
sbb
les
addl
or
cltd
aad
dec
inc
in
jge
decl
mov
cltd
lahf
sbb
xor
adc
mov
fidivl
or
jl
fdivs
xor
sbb
or
mov
mov
test
xor
dec
loope
dec
xchg
mov
out
push
dec
out
cmp
lds
je
dec
lret
mov
sub
push
das
adc
and
fs
add
fbld
cmp
push
mov
xchg
xlat
rorb
and
sub
add
in
inc
icebp
cltd
shlb
and
mov
cmpsb
cs
sub
mov
sahf
pop
movsb
or
sub
jo
roll
push
mov
lds
mov
dec
ljmp
in
inc
in
pop
jne
add
rclb
mov
inc
in
adc
and
xchg
xor
sub
repnz
rorb
pop
push
pop
sarb
dec
jae
xchg
in
xchg
xchg
dec
and
das
mov
cmpsl
sbb
push
jno
hlt
mov
inc
test
es
and
sub
scas
notb
popa
pop
pop
adcl
mov
outsl
cmp
dec
pusha
jns
dec
push
call
int
sbb
add
and
fwait
call
or
clc
divl
fwait
push
out
xor
popa
push
test
xor
pop
testl
inc
jae
enter
mov
scas
and
mul
jnp
ss
mov
loop
daa
ja
pop
sahf
aas
jge
dec
dec
shlb
mov
popa
push
add
addr16
inc
or
into
pop
xor
or
and
jge
negb
loop
xor
cmpsb
xchg
sbb
dec
sti
mov
add
mov
iret
int
es
inc
sbb
mov
loop
fwait
add
iret
and
mov
cltd
loopne
js
jo
mov
mov
arpl
cwtl
inc
adc
int
in
push
movsb
or
loopne
mov
not
add
ret
add
jge
shrl
inc
sbb
cmpsb
loop
loopne
dec
pop
lret
and
lcall
imulb
es
pop
pop
sarb
dec
js
scas
jecxz
das
mov
sub
add
dec
jno
movl
aam
negb
insl
sbb
jo
lds
jl
push
push
xor
shll
cmp
xor
add
and
jne
push
fidivrl
dec
or
sbb
pop
add
jge
adc
jae
lods
sub
outsl
jns
add
icebp
les
arpl
add
test
xchg
daa
nop
clc
pusha
les
cs
cmp
fstl
lds
inc
sti
pop
push
rorb
and
inc
mov
fbld
arpl
mov
push
sub
inc
mov
mov
jno
add
and
loop
jno
add
ficoms
mov
mov
hlt
jge
push
pop
dec
jg
add
add
cmc
mov
rcrb
cmp
xor
inc
mov
das
pinsrw
out
jne
add
or
pop
adc
mov
jb
sbb
loop
mov
js
xchg
es
sub
and
pushf
push
jecxz
jmp
cwtl
lea
nop
popa
dec
lret
shrb
xor
adc
outsb
add
int
divl
jnp
or
mov
stos
push
loop
es
jo
push
cmp
and
lods
out
adc
inc
outsl
mov
scas
mov
pop
dec
jge
loopne
inc
and
lods
jnp
test
pop
adc
das
mov
jo
add
sub
push
xor
dec
push
add
fiaddl
adc
lahf
add
cltd
cld
xor
loopne
rol
jno
or
mov
hlt
mov
pop
popa
vmread
cmp
es
and
lods
jne
fbld
ja
mov
icebp
test
test
cmc
jae
xlat
and
out
divl
insb
shl
add
mov
cwtl
adc
sbb
xor
ljmp
mov
cmp
and
inc
scas
pushf
and
hlt
sub
test
add
jge
fdivrl
sbb
aad
cs
je
fldt
shll
lods
lds
and
pop
sarl
pop
and
xor
stc
push
loop
and
cmp
and
pushf
adc
ds
fldenv
jmp
jg
cmp
mov
push
mov
out
roll
mov
insl
pop
movsb
xchg
mov
sub
jp
adc
mov
mov
mov
mov
lods
mov
addr16
ja
or
push
pop
add
ret
in
pop
movl
in
inc
sub
cwtl
or
jae
or
mov
ja
loopne
mov
sbb
aad
in
addr16
cmp
das
in
popa
mov
add
and
imul
and
push
mov
push
call
jp
jmp
mov
add
sub
xchg
movsb
pop
es
push
aaa
adc
cs
xchg
cld
adc
push
call
pop
jbe
ret
lods
mov
in
push
dec
xchg
ljmp
lcall
ds
shl
enter
push
cwtl
pop
imul
imul
dec
pop
or
inc
shrl
xchg
bound
jb
xchg
mov
sub
loop
aad
mov
sbb
fildll
xchg
fs
pop
movsl
popf
ret
push
pop
inc
cmc
xchg
in
mov
inc
push
mov
jno
jmp
and
cmp
add
xchg
mov
push
gs
test
mov
cmp
adc
ret
jno
sbb
inc
test
adc
test
in
pop
dec
or
dec
lcall
fs
in
ds
and
cmp
adc
into
mov
jmp
call
cmc
pop
in
hlt
push
add
jp
daa
jae
or
xchg
push
dec
cli
fs
sbb
les
mov
cmp
cmp
mov
and
insl
xor
popa
and
pop
sub
pop
shrl
and
fbstp
es
sbb
mov
clc
and
and
mov
aaa
loopne
pop
xchg
and
push
adc
movsl
jns
pop
in
adc
mov
sub
jecxz
out
sub
dec
mov
jle
adc
cmpsl
lds
in
arpl
pop
leave
mov
hlt
aam
cmpb
jmp
sbb
xor
adc
pop
cltd
in
outsb
aam
pop
inc
in
and
push
enter
shlb
jb
test
imul
cmp
movsl
into
inc
adc
pmuludq
sub
mov
fs
js
loope
stos
js
push
les
push
iret
inc
xchg
ret
test
test
jne
inc
push
jecxz
push
mov
popf
mov
out
push
cmpsl
push
lret
add
and
pop
je
js
adc
movsb
repz
test
jl
shr
inc
loope
or
jmp
dec
leave
aas
jl
mov
inc
ret
inc
mov
andb
add
mov
jae
popf
cmp
addl
adc
es
stc
test
mov
ljmp
sub
adc
inc
push
pop
cmp
cmpb
adc
cltd
out
pop
mov
inc
int
jg
lods
and
adc
cmp
mov
dec
xor
out
dec
jbe
mov
fs
cld
jno
lcall
sub
test
and
fs
lods
inc
loopne
pushf
inc
add
andl
and
and
inc
mov
xchg
adc
xchg
dec
inc
hlt
lahf
or
add
lea
pop
rorl
dec
inc
cmpsl
push
cmp
es
enter
cmpsl
and
insl
sbb
cmpsl
sub
xor
out
cltd
mov
xchg
or
dec
cmpsl
inc
jge
push
in
nop
test
pop
push
push
stc
mov
inc
mov
adc
mov
fidivs
sub
mov
mov
xor
dec
lea
mov
rol
jb
sub
mov
aas
ds
jno
scas
ja
sbb
mov
and
push
sbb
push
xchg
pusha
shll
popa
pusha
scas
nop
loop
adc
addb
bound
mov
movsl
cmp
fs
daa
icebp
stos
addr16
popa
aad
adc
mov
decb
push
push
jecxz
fadds
mov
xor
dec
lods
fwait
out
rcrb
add
xchg
lcall
adc
xchg
adc
push
rcl
fidivl
out
push
mov
adc
out
out
add
arpl
cli
sti
lret
ficompl
insl
jns
cmp
popa
mov
out
mov
out
dec
jnp
enter
les
jns
or
in
add
sar
push
dec
and
jno
aaa
clc
or
nop
jle
rclb
popa
sub
xchg
xchg
movsl
sbb
es
or
jo
xchg
sub
aaa
cmp
push
inc
and
or
lock
mov
pop
leave
loopne
mov
cltd
scas
je
dec
cmp
movsl
test
cmpl
aam
das
and
int3
pushaw
ficoms
pop
rolb
jl
mov
lock
cmp
push
mov
add
leave
mov
cli
adc
inc
xchg
xor
mov
push
xor
xor
repz
insb
nop
faddl
aas
jl
pop
jno
pusha
mov
movsl
stos
shl
add
incb
add
aam
inc
movsb
mov
inc
std
inc
push
or
pop
cld
push
cwtl
es
int3
loopne
cmp
hlt
into
mov
out
xchg
sub
xor
out
jg
dec
hlt
pop
in
lock
hlt
xchg
in
jmp
pop
outsb
mov
arpl
pop
add
mov
xchg
insl
hlt
fs
rorb
insl
imul
sahf
test
movsb
fbstp
fimull
shl
mov
sub
sub
mov
lcall
shrb
jmp
mov
and
or
loopne
sub
aaa
inc
test
xor
and
inc
call
inc
mov
cltd
add
jecxz
loope
and
push
push
dec
loopne
dec
cmp
outsl
lcall
sub
leave
mov
jns
push
and
lea
aad
rcrb
pop
adc
pop
mov
pop
mov
loop
jo
addr16
in
pop
lds
fadds
repz
xor
movsb
mov
xchg
in
mov
loopne
jecxz
movsb
stos
arpl
inc
inc
pop
aad
inc
sahf
adc
pop
pop
int
dec
push
popa
xor
sbb
push
incb
dec
push
inc
bound
sub
sub
adc
adc
scas
jp
lcall
fsub
imulb
fs
aam
ljmp
xor
and
call
push
dec
dec
add
or
test
mov
sbb
add
outsl
rorb
lret
sub
jecxz
aad
pushf
cmpsl
push
sub
mov
shr
pusha
and
aaa
add
in
sub
pushaw
rclb
das
pop
ffree
shrl
jne
add
fistl
inc
and
cmp
mov
adc
shl
and
lods
dec
sbb
mov
ret
pcmpeqw
insb
pop
iret
xor
cmpsb
fmull
fnstenv
sub
jg
sub
je
std
scas
shll
in
sub
insl
mov
adc
mov
or
out
imul
shld
fcomi
mov
lret
sub
jmp
mov
adc
fildl
dec
mov
push
sub
test
mov
mov
sbb
cmp
jo
int3
arpl
inc
in
push
fcoml
push
repz
inc
mov
aas
aam
inc
pop
rorb
in
pop
aam
jmp
pop
sub
mov
pop
das
push
fcoms
dec
xchg
and
shrl
scas
dec
sbb
cmp
addl
xchg
jo
push
and
mov
punpckhbw
inc
sbb
sub
int
lret
mov
mov
jb
add
and
mov
xchg
movsb
dec
cltd
and
aad
pop
in
add
and
add
cmp
cltd
and
xor
fisubrs
shll
inc
sub
push
test
mov
cmp
lcall
out
hlt
das
into
pop
mov
aas
dec
negl
nop
jp
rclb
pop
aas
repz
mov
inc
cmc
adc
out
or
mov
mov
jae
enter
and
insl
loope
fdivl
dec
xchg
loopne
mov
aam
mov
int3
jle
pusha
fwait
loopne
xchg
rcr
xor
xor
mov
add
pushf
aas
cmp
inc
sub
inc
out
fidivrl
leave
jg
push
loope
in
enter
js
hlt
mov
int3
xlat
cwtl
mov
sahf
loopne
lcall
int3
xor
and
adc
scas
jns
sbb
in
inc
dec
arpl
imul
insl
outsl
daa
popa
fdivrs
jno
ja
pop
fs
jge
cmc
mov
or
mov
cli
aad
fdiv
inc
cwtl
push
lret
popf
insb
mov
mov
xor
add
mov
and
orl
outsb
rorl
adc
mov
ja
clc
and
mov
mov
cmp
cmp
addr16
ret
test
cli
gs
jnp
test
dec
or
je
cmp
rcrb
xlat
inc
ret
repnz
sbb
insl
mov
testb
sbb
clc
iret
fiadds
or
dec
sbb
inc
jb
je
sub
jo
in
stc
mov
dec
xor
add
movsl
xchg
flds
out
jle
mov
nop
sub
push
mov
mov
out
or
repnz
mov
mov
das
leave
scas
mov
loope
xor
add
lcall
xor
sub
rcl
movsl
daa
sti
stos
sbb
fcomp
xor
enter
push
push
nop
shl
cmp
push
mov
stc
xor
shll
out
ffree
mov
push
inc
loope
push
cmp
jge
pop
pusha
push
out
lds
stos
int3
or
orb
pushf
and
sub
xor
loopne
pusha
mov
jo
ss
push
mov
cld
jmp
sub
push
js
dec
adc
popl
push
cmp
aaa
cmp
mov
mov
xchg
pop
pushf
gs
pop
pop
or
push
and
imulb
jne
rcrl
inc
popa
fmuls
testl
and
enter
sbb
pop
xor
mov
inc
sbb
invd
sub
roll
aaa
hlt
imul
mov
pop
add
fbstp
arpl
dec
fisttpl
decl
push
adc
or
test
xor
jmp
fisubs
xor
adc
jnp
jmp
jo
add
jnp
fs
or
out
adc
xchg
ret
inc
stc
cmpsl
jae
pop
jmp
cmp
pop
ljmp
test
dec
add
xchg
jbe
jae
push
pop
add
cmp
add
lods
outsb
adc
shlb
adc
sbb
push
sub
hlt
mulb
xor
push
mov
push
in
mov
adc
jnp
add
jecxz
andb
xchg
add
xor
pop
hlt
lods
jo
ficoml
and
ret
cltd
test
aad
xor
lock
arpl
outsl
mov
sbb
in
xchg
sbb
jb,pt
data16
imul
arpl
ficoms
inc
cmp
push
and
jne
std
ja
rclb
andb
shll
loopne
mov
add
repz
sbb
sbb
xchg
inc
inc
adc
icebp
addr16
add
ja
inc
mov
fstpt
lods
hlt
repnz
xorb
pop
pop
jno
adcl
adcb
inc
fcoms
les
outsl
ljmp
push
pop
or
push
lcall
mov
xchg
pop
in
stos
sub
and
int
fildll
jae
mov
or
shr
inc
lret
ror
and
mov
sbb
cmpsl
dec
cwtl
jp
add
and
ljmp
lods
xor
les
pop
aad
fldenv
out
sbb
inc
cmp
jno
in
imul
mov
lcall
add
dec
adc
aam
xchg
or
mov
mov
scas
sbb
out
and
sbbl
in
push
and
inc
icebp
push
fldl
lds
dec
sbb
jo
insb
pusha
xchg
jns
inc
dec
push
pop
and
cmc
aad
mov
test
push
cmp
jmp
lock
loop
push
or
into
loope
loop
loopne
xchg
imul
dec
sub
shrl
mov
imul
pop
dec
mov
sbb
pusha
divl
mov
test
dec
stos
fbstp
in
xchg
imul
in
jmp
push
cmp
xlat
add
shlb
inc
and
divl
mov
push
push
in
scas
push
test
gs
fld
jmp
mov
jl
arpl
es
add
push
jns
xor
dec
and
adc
fisubs
push
xchg
loope
jp
add
testb
adcb
adc
adc
cmp
dec
or
jmp
outsb
sbb
dec
and
push
mov
mov
xchg
mov
andb
push
add
jl
je
push
cs
xor
xchg
add
fnstsw
inc
sbb
add
jbe
arpl
jp
in
sub
rolb
xor
push
pop
push
sbb
mov
aad
xchg
mov
cmp
add
pop
xor
add
sbb
rcl
outsb
or
scas
outsl
lods
and
mov
dec
rolb
cmpsb
aaa
xor
rol
inc
daa
lods
push
aad
jecxz
hlt
scas
ret
mov
jae
adc
push
or
inc
pop
dec
xchg
sbbb
add
inc
add
ss
ret
mov
out
cld
jmp
inc
xchg
mov
in
ret
push
xor
sub
xor
mov
leave
xchg
sbb
pop
and
inc
rcrl
add
outsb
pop
repz
lods
das
mov
push
test
cmp
sub
push
scas
int
inc
mov
cmpb
rorb
lcall
inc
movsb
lahf
in
push
xor
dec
add
dec
dec
cmpsb
lret
out
xchg
hlt
pinsrw
int
cmp
hlt
jecxz
lods
loope
fmuls
push
addr16
loopne
ss
inc
repz
fisubrl
push
ljmp
dec
or
iret
stos
faddl
movb
sbb
push
xor
movsb
xor
xchg
xor
lea
and
add
ror
mov
add
dec
jae
stos
lea
loopne
dec
jg
in
mov
fwait
add
add
jne
orl
sarb
add
inc
mov
sar
xchg
arpl
cmp
jecxz
dec
popa
addl
lock
repnz
shl
in
sub
sarl
mov
adc
subl
mov
xlat
cld
jge
cmp
xchg
arpl
scas
and
movsl
call
insb
mov
mov
js
add
mov
jp
insb
cmp
xchg
add
dec
adc
jne
xor
shll
adc
adcb
adc
jmp
cmpsl
ds
fwait
and
sub
or
in
sbb
and
lcall
dec
sub
pushf
gs
or
push
addr16
dec
enter
dec
and
into
in
dec
sub
loope
vmread
daa
pop
cmp
bound
push
lcall
push
push
mov
leave
add
movsb
adc
imul
bnd
xchg
dec
jb
imul
cmp
pop
loop
or
or
call
inc
lock
lcall
cmp
push
or
adc
in
dec
inc
sbb
inc
xor
mov
sbb
inc
lods
fwait
pop
mov
sub
mov
shrl
mov
out
and
mov
xor
les
fwait
sub
scas
in
dec
lock
out
icebp
test
out
nop
adc
les
sub
dec
shll
jb
jno
inc
shrb
pop
push
mov
fs
test
inc
jae
sahf
and
gs
das
add
pusha
aaa
cmp
mov
repnz
mov
cld
mov
shl
mov
mov
lcall
cwtl
xchg
ss
sbb
lret
test
out
and
dec
jno
xchg
cli
icebp
dec
outsl
mov
mov
mov
scas
mov
and
mov
in
adcb
sub
jmp
or
adc
sbb
jge
jle
dec
sub
xor
add
sbbb
outsl
and
das
dec
jp
ja
in
add
sub
add
cmp
mov
leave
call
sahf
mov
insb
adc
imul
dec
icebp
jl
js
xchg
pop
test
stos
jo
and
pop
lods
cmpl
movsl
movsb
and
and
and
jae
rep
idivl
xchg
cs
outsb
addb
loopne
aam
xor
and
and
or
jmp
or
std
sub
insl
lcall
mov
sbb
mov
add
enter
pop
push
loop
repz
jl
sbb
jbe
data16
add
mov
outsb
or
js
adc
xor
mov
lret
sbb
jmp
inc
test
push
xchg
test
movsb
pop
jae
js
xor
add
or
loope
leave
pop
sub
or
xor
out
cltd
lea
jmp
adc
out
repnz
movsb
pop
cmp
scas
inc
addb
cmp
js
loopne
dec
cs
sbb
push
sbb
xchg
dec
shlb
mov
cld
push
data16
stos
mov
jle
adcb
push
or
mov
sbb
neg
adc
aas
add
inc
insl
pushf
xor
mov
stos
ds
loop
rolb
xorb
pop
jmp
sub
hlt
pop
cmp
push
cmp
popa
sbb
cmpsl
and
out
sub
sti
inc
in
and
stc
inc
shlb
lret
je
ss
and
lods
mov
xorb
adc
loopne
dec
sbb
icebp
push
adc
add
insb
fisttps
fcmovu
mov
call
inc
arpl
sub
add
cmp
sbb
inc
sbb
leave
shll
xchg
mov
or
aam
jnp
dec
jnp
cmp
push
mov
or
inc
and
xor
xor
xor
aam
ficomps
gs
sub
dec
mov
and
loope
and
test
shl
pop
int
mov
imul
subl
fcomp
fistps
call
clc
cmp
jp
pop
and
and
imul
push
lret
mov
stc
inc
xchg
inc
sub
mov
and
mov
and
out
sub
cmpsb
popa
scas
sub
orb
mov
imul
ficomps
inc
dec
cmc
ljmp
mov
xor
and
and
xchg
repz
dec
fs
mov
and
lret
jp
pusha
add
bound
add
scas
xchg
lahf
rcll
or
aaa
mov
mov
gs
sahf
cwtl
jge
out
sub
xor
cltd
in
insl
adc
inc
xchg
cmp
in
pop
out
scas
outsl
out
jno
icebp
or
js
nop
mov
js
push
std
mov
aam
scas
inc
jbe
sub
cwtl
mov
cmp
dec
push
adc
jo
bound
scas
cmpsb
sbb
inc
lahf
sbb
subb
lret
pop
or
dec
or
imul
mov
fiaddl
mov
pop
mov
jecxz
and
inc
add
inc
dec
faddl
inc
push
jl
push
jns
fists
jecxz
in
loop
sbb
inc
push
test
hlt
movsb
cmpb
shll
mov
add
and
enter
mov
movsb
or
push
pop
jp
add
cmp
add
cmp
orl
scas
insl
fcom
mov
enter
add
mov
mov
cs
mov
push
ljmp
add
pop
stc
sub
sbb
icebp
cltd
xchg
dec
push
adc
ds
mov
xor
pop
or
xlat
fucompp
sbb
fdivs
xchg
sbb
inc
jl
inc
sbb
inc
sbb
pusha
pop
mov
jno
cmpsb
and
mov
outsl
pusha
dec
sub
xor
dec
adc
adc
dec
mov
xor
sub
or
add
push
and
movb
sbb
xchg
lea
xchg
pop
add
jecxz
jmp
xchg
test
add
movsb
movsb
pop
push
push
add
aad
jno
fldenv
ds
xor
pop
leave
sub
pop
scas
imul
pinsrw
ror
sub
pop
hlt
push
aad
xchg
fsubs
addl
dec
scas
xor
fstps
dec
pop
mov
inc
dec
push
fpatan
cmp
ret
sbb
mov
xor
aam
lods
loop
xchg
push
orl
adc
and
jecxz
jle
mov
inc
popa
sbb
cmpsl
adc
icebp
adc
and
or
into
add
dec
adc
mov
ss
mov
mov
pop
lcall
lea
mov
dec
aam
shlb
lret
mov
lret
pop
fadds
jne
add
pop
decl
add
inc
stc
sbb
stc
lods
addl
je
pop
loopne
ret
clc
add
orl
loope
push
inc
ja
push
in
ja
inc
mov
jl
inc
jg
add
aad
outsl
repnz
or
inc
lahf
jecxz
adc
push
lods
fidivs
push
mov
add
popa
mov
adc
and
sbb
pop
fs
movsl
adc
mov
sub
dec
and
mov
push
mov
jl
cmp
sbb
shlb
or
push
dec
ja
or
lahf
push
xor
dec
and
ret
sub
add
stos
adc
scas
dec
insl
and
jp
dec
push
xchg
inc
test
dec
insl
mov
fdivs
bound
pop
lock
or
cmp
nop
shl
dec
cwtl
dec
mov
adc
inc
cs
pop
jae
xchg
loope
sub
jmp
sti
mov
rolb
xlat
add
lods
aas
int3
add
or
pop
or
pop
sbb
xlat
push
movsl
shrl
mov
movsb
leave
jg
adc
inc
mov
mov
add
mov
and
mov
inc
push
lret
and
dec
outsb
iret
dec
insb
cld
movsl
jae
shr
ljmp
pushf
orb
daa
out
adc
bswap
cmp
enter
mov
inc
mov
jmp
faddp
mov
stos
ss
fstps
push
loop
xchg
es
je
mov
inc
lock
jge
aad
lcall
rol
shlb
js
fisttps
sbb
and
xor
cmc
loop
or
sbb
rol
daa
clc
outsb
les
rcrb
jmp
xchg
push
adc
push
sub
pop
cmp
popa
mov
mov
pop
jb
mov
dec
insl
imul
xor
cmp
cmp
ret
sbb
mov
leave
popf
ds
in
pushl
jno
push
push
out
cwtl
mov
sbb
loope
cwtl
xchg
loop
dec
sub
push
cmp
and
and
adc
push
mov
jp
and
aaa
xlat
mov
xchg
lret
fisttps
les
hlt
sbb
rcr
and
inc
pop
test
mov
sbb
pop
repnz
jg
xchg
mov
sub
mov
or
je
sub
and
and
int
inc
xchg
mov
outsl
sti
pop
and
xor
xorb
or
and
inc
loopne
mov
inc
sti
lds
cmpsl
hlt
pop
bound
in
sbb
xor
movsb
push
test
mov
andb
out
repz
leave
out
aaa
pushf
push
push
xor
xor
ja
cwtl
jno
adc
insb
mov
mov
pop
add
rcr
ja
mov
imul
ljmp
jnp
clc
mov
xor
push
pop
flds
pop
sbb
rorb
notb
outsl
stos
or
push
outsl
mov
dec
cwtl
jns
dec
or
adc
orl
inc
pusha
mov
fildll
in
jp
cmp
mov
stc
lea
adc
xchg
arpl
cwtl
add
out
js
push
or
jge
loope
cmp
cmp
stos
jae
fldenv
movb
loope
dec
xor
std
xchg
jl
test
mov
iret
lods
pop
sub
clc
add
aam
lea
or
aad
shlb
test
pop
sub
mov
insl
mov
cmp
in
push
or
scas
xor
shll
or
pop
mov
jecxz
and
mov
loope
pop
inc
cld
or
or
cmpsb
lock
addr16
insl
rclb
test
andb
or
xchg
in
int3
mov
mov
dec
xor
cwtl
jmp
mov
jae
push
iret
add
inc
lds
popf
enter
inc
xor
shrl
stos
jle
or
push
ds
lods
in
sarl
sbb
sbb
mov
scas
mov
in
and
movsl
xor
imul
sub
mov
js
popa
push
hlt
imul
mov
push
hlt
fsts
mov
jno
jp
fidivl
loop
mov
dec
pop
les
sub
jge
mov
jne
and
loopne
xchg
mov
cs
ja
pop
fwait
lret
dec
cmp
mul
inc
mov
xor
add
int3
dec
push
xor
fmull
imul
xchg
mov
das
inc
movsb
pop
add
jle
cmp
fs
push
loop
mov
bound
xlat
clc
jge
cmp
iret
xor
add
add
loop
mov
stc
lret
daa
bnd
js
js
lret
insb
jmp
or
dec
lret
pushf
push
nop
mov
pop
add
sub
ljmp
movsl
inc
sub
xchg
insl
rclb
inc
push
inc
mov
lret
bound
imul
inc
enter
sbb
sub
js
mov
loope
repnz
mov
test
pop
xchg
testb
icebp
jp
fcoml
aaa
mov
loope
lcall
or
aad
mov
lock
push
ret
jmp
or
aam
lods
dec
mov
imul
scas
jnp
jl
jb
cmp
jns
pusha
imulb
test
push
lods
mov
sbb
sbb
adc
clc
psrlw
mulb
lds
in
call
xor
add
pop
or
jb
push
orb
mov
in
and
or
mov
cmp
xorl
inc
insl
out
rorb
jne
cmpsb
jecxz
xor
in
mov
adc
fisttpl
ret
jo
xchg
ret
push
sub
lcall
sbb
cwtl
xor
add
cli
test
int3
aam
mov
cli
xchg
cmp
movsl
test
or
popf
add
jge
add
xorb
sbb
xor
ret
push
cmp
jne
pop
scas
add
mov
stos
dec
int
imul
shlb
push
aam
and
add
push
arpl
sbb
loope
test
add
enter
push
out
pop
ret
xchg
xor
lret
aas
cltd
push
xchg
adc
lcall
test
lahf
inc
push
in
into
dec
adc
testb
sbb
dec
push
cmpsl
int3
aas
xor
jne
lods
es
mov
cs
push
xchg
sbb
jl
ja
lods
cmp
xchg
sbb
data16
add
xor
iret
push
add
dec
cli
pop
jnp
ljmp
enter
mov
push
xor
mov
mov
dec
or
sub
xor
outsb
mov
pop
xchg
pop
in
inc
add
les
sbb
js
inc
stos
push
mov
inc
insb
mov
aas
dec
or
fbstp
jle
cmp
cld
roll
data16
sbb
or
push
mov
xor
mov
add
inc
add
mov
inc
cli
and
xor
test
xchg
jl
and
push
arpl
xor
push
loope
cmp
mov
stos
cs
lock
pusha
push
popa
int3
push
aas
xor
adc
mov
test
sub
int3
scas
jb
inc
adc
jns
xor
test
jl
jge
pop
outsb
dec
loopne
aad
scas
inc
inc
xchg
dec
aad
orl
aad
cmp
test
pop
aam
pop
add
mov
cmc
loope
rcrl
mov
inc
loopne
xchg
out
sub
hlt
testl
xchg
cmpsb
add
test
subb
xor
stos
xorb
pop
dec
sbb
xchg
adc
and
fdivrs
sbb
adc
dec
jno
cmp
ret
ljmp
dec
mov
ja
push
les
mov
xchg
mov
xchg
out
mov
pop
xor
enter
icebp
arpl
push
pop
and
faddp
push
fdivp
xchg
filds
aaa
in
inc
repz
in
loop
outsl
int3
add
pop
js
movsl
and
jne
ret
xor
mov
jbe
jno
stos
ljmp
cld
pusha
js
pop
fistps
inc
filds
cmc
mov
and
notb
push
push
leave
int3
rcrb
xchg
cmp
xor
popf
ljmp
sbbb
xor
push
jno
xchg
add
add
into
js
ret
cwtl
push
pop
pop
stc
es
and
pop
insb
aad
mov
mov
push
add
sbb
push
cmp
and
fisubs
les
aam
inc
add
xor
or
ds
inc
inc
cltd
jno
push
cs
int3
pop
test
out
sarb
pop
sbb
adc
aam
ret
addr16
push
add
rorb
xchg
std
push
cmpsb
xchg
jbe
rcll
mov
pop
xchg
jns
insl
add
nop
jl
add
mov
or
xchg
mov
fdivr
incl
aam
ror
sbb
ror
cmp
leave
adc
sbb
bnd
out
cmp
push
ds
jno
ret
mov
xchg
and
adc
int
fst
add
add
lcall
xor
daa
inc
loopne
add
loope
inc
loope
sub
and
sub
mov
push
inc
in
rcrl
shl
sub
jo
pop
loopne
inc
jo
stos
mov
mov
push
cmpl
lret
add
adc
test
mov
xchg
fnstenv
mov
filds
cld
push
pop
mov
out
add
aad
or
ret
aaa
push
movsb
negl
dec
and
iret
fdiv
icebp
mov
inc
fnsave
lds
iret
lcall
mov
mov
adc
mov
pop
sbb
inc
xchg
fsubs
or
rcl
mov
flds
sub
jecxz
arpl
lds
sub
add
cmc
scas
arpl
jb
lock
clc
inc
pop
outsl
or
movsl
ret
call
mov
push
xorl
xchg
shll
scas
lahf
sbb
inc
lret
je
addb
dec
je
push
insb
push
int3
sub
sbb
lret
lods
into
sbb
or
fmul
mov
pushf
adc
insb
enter
dec
mov
pop
xor
cmpsl
enter
ret
cmp
into
sar
pop
and
jb
mov
in
jo
pop
jp
pop
je
xor
imul
jno
mov
sbbb
xchg
nop
mov
xor
xchg
jmp
outsl
xchg
dec
jae
mov
pop
or
std
add
gs
xchg
push
sar
push
aad
fdivrs
or
popa
push
insl
fadds
push
aad
push
adc
bound
cs
test
push
scas
dec
mov
mov
pop
mov
adc
pop
xchg
or
cld
pop
pusha
and
pop
sarb
cmp
and
xor
bound
adc
outsl
in
mov
and
ret
jmp
or
inc
inc
shr
lods
data16
sub
push
jno
pop
bound
push
pop
xorl
sub
push
pop
add
int
cmpb
dec
inc
cmp
or
in
jecxz
aad
or
pusha
das
lock
or
loope
adc
mov
lods
xlat
aad
sbb
push
add
popa
pop
pushf
push
xchg
adc
cmp
mov
or
bnd
add
popf
inc
and
push
and
mov
lock
adc
icebp
mov
aam
lcall
sub
pop
mov
ss
mov
xchg
pop
lcall
in
mov
dec
jo
xor
dec
in
stc
lods
pop
leave
push
mov
push
xchg
pop
push
int
fwait
out
ja
push
ret
mov
mulb
jle
push
es
lods
add
push
stos
or
mov
mov
inc
inc
add
adc
ja
pop
push
insb
aam
mov
faddl
test
out
mov
add
in
xchg
std
popf
dec
cmp
jecxz
rclb
mov
stc
pop
lods
jae
lret
push
mov
push
xor
jmp
add
pushf
imul
les
call
nop
jbe
jae
pop
xorb
xchg
dec
test
xor
mov
inc
sarb
sbbl
mov
out
adc
cmpsb
in
mov
movsb
aaa
mov
fcmovnbe
add
push
push
and
std
mov
xor
xchg
js
ror
push
mov
scas
mov
jno
dec
and
xchg
and
push
add
cmpsl
and
andb
push
xchg
mov
mov
cmc
push
addr16
mov
mov
lock
sahf
push
or
add
lods
addl
xchg
mov
mov
aam
xor
push
sbb
aaa
fmull
xor
add
or
pop
sub
in
jne
in
insb
adc
pop
mov
sbb
adcb
popa
jns
add
dec
pushf
push
jne
pop
push
push
loopne
imul
movb
jp
pop
iret
sub
cmp
shll
ljmp
push
setl
rol
sub
mov
dec
pop
or
fwait
cmp
dec
and
jnp
shl
les
int3
clc
push
push
scas
adc
std
pop
push
xchg
stos
jmp
in
sub
sbb
scas
mov
dec
pop
roll
cmpsb
mov
sub
push
and
adc
adcb
xchg
xor
rorb
je
popa
lds
dec
in
xchg
shrl
push
mov
fdivp
pop
loope
rcrb
dec
stos
aam
test
lea
jecxz
enter
stos
jo
loop
pop
hlt
test
xor
outsb
scas
xor
popf
cmp
and
pop
fs
aad
cwtl
sbb
call
leave
aaa
fmul
sahf
sbb
xor
rcll
test
movsb
mov
mov
sub
and
imul
rcl
test
and
push
fisubrs
shl
test
mov
jae
or
mov
sub
and
dec
mov
cmpsl
dec
mov
movsb
dec
jp
dec
sbb
stc
inc
test
pop
fstps
das
icebp
loop
fwait
cmp
mov
push
inc
ljmp
call
jp
cmpsb
or
pop
adc
cmp
ss
sahf
mov
adc
mov
lahf
inc
jp
flds
ret
add
push
jge
sti
call
add
jno
push
into
mov
add
adc
inc
in
ja
pushl
loopne
xor
xor
and
icebp
fsubl
lea
jge
adc
je
fadd
mov
adc
test
mov
push
sbb
movsb
rol
loop
or
lock
lock
adc
int3
push
pop
repz
and
xchg
and
mov
add
dec
in
xorb
popf
js
fsubs
jg
clc
sbb
lret
add
nop
sub
inc
xchg
rolb
scas
dec
xor
pop
mov
in
xor
lods
sahf
pop
test
and
addl
jno
mov
inc
push
pop
lock
jne
inc
scas
fwait
dec
es
jecxz
jp
shr
adc
outsl
out
inc
sub
icebp
lods
incl
imulb
aad
out
add
push
dec
aad
and
pop
inc
divb
sub
ret
jae
movsl
xchg
ss
mov
xchg
in
sbb
cmp
push
pop
pushf
arpl
in
cmp
add
test
pop
in
repnz
icebp
repnz
and
and
push
nop
dec
mov
ss
xor
int
mov
xchg
mov
loop
test
pushf
sub
pop
fwait
sub
int3
dec
mov
call
loop
inc
pusha
or
int3
jp
ljmp
jb
xchg
leave
out
mov
sbb
scas
fldl
stos
pop
loopne
sbb
sub
sub
pop
push
insb
xchg
popa
jbe
jbe
scas
cmp
andl
stos
mov
pushf
shlb
test
xor
mov
dec
jo
imul
pop
inc
imul
loopne
out
out
lea
fs
sbb
dec
fisubrl
out
mov
push
rcrl
into
mov
jnp
and
subb
mov
scas
xor
lods
test
icebp
gs
daa
jo
jo
sti
aas
ret
mov
xchg
cmpsb
pop
popa
sub
gs
and
and
outsl
jge
mov
std
leave
aaa
hlt
shlb
xchg
jb
pop
cli
out
add
aas
cmc
pushf
xlat
lock
cmpsb
add
sub
scas
das
sbb
popa
clc
sbb
xor
rolb
and
fst
push
scas
mov
push
test
dec
lds
leave
outsl
mov
sbb
jo
push
mov
jb
inc
sub
test
out
adc
loopne
push
adc
fsubl
mov
enter
lock
ror
push
sbb
arpl
stos
or
sarl
push
mov
mov
popf
dec
test
jp
leave
dec
adc
push
popf
mov
icebp
ret
les
stos
cmp
jbe
stos
jo
add
leave
xchg
clc
adc
mov
inc
push
add
jg
jne
in
inc
test
and
sub
push
scas
nop
mov
dec
cltd
xchg
hlt
xor
loopne
lods
loopne
cld
or
int3
xchg
ret
pusha
inc
idivl
cld
hlt
sub
pushf
lock
loope
jge
lods
or
scas
int
or
push
fadd
ljmp
xchg
out
push
aam
xchg
addr16
arpl
scas
and
in
push
test
push
ret
nop
jl
aas
test
fdivr
mov
mov
leave
push
mov
sub
adc
push
das
cld
orb
inc
dec
or
push
sbb
sbb
add
movsl
mov
jae
or
orl
mov
inc
push
cmpsl
xor
mov
add
das
hlt
jo
dec
sub
push
clc
dec
sbb
repnz
mov
in
ror
or
imul
adc
insl
pop
sti
xchg
imul
mov
stos
aam
adc
test
pop
cmp
inc
mov
inc
sbb
enter
cld
mov
insb
mov
push
jb
add
cmp
enter
test
fs
ret
inc
inc
pushf
out
fs
mov
ss
fnstenv
fsin
jmp
and
sub
jns
jnp
or
mov
insl
lods
fsubs
cmp
loopne
jp
pushf
adc
int3
xor
call
lahf
shr
add
cmpsb
mov
sarb
xchg
inc
jge
pop
sbb
out
or
mov
aam
sbb
jmp
mov
cld
mov
adc
cltd
pop
add
push
ror
mov
pop
sbb
xlat
popa
cwtl
pop
fyl2x
js
fbstp
addr16
push
add
movsb
in
shll
mov
rcr
lahf
mov
popa
in
xor
test
movsb
test
xor
xchg
loop
les
pop
jae
add
sub
bound
cltd
push
dec
inc
sbb
and
fisubs
gs
adc
pop
pusha
repnz
xor
mov
mov
push
lock
sbb
jg
sub
dec
loop
push
dec
pop
loope
pushf
jne
sarb
inc
in
clc
jle
cmp
and
movsb
popa
out
nop
and
or
ds
les
daa
cltd
cli
lret
test
es
std
xlat
pop
pop
cmp
imul
ret
gs
sbb
and
add
pop
lret
sub
lahf
push
jno
adc
inc
lods
cld
xor
leave
add
lods
cmp
mov
inc
out
in
dec
sub
into
xchg
inc
pop
test
jg
sub
sub
mulb
data16
and
mov
mov
push
ds
movsl
jne
rcr
dec
xchg
sbb
pop
call
imul
ss
add
mov
and
lods
in
ja
inc
fildl
out
cmovne
inc
fnsave
jne
popa
and
push
push
movsb
sahf
inc
lcall
aas
cmpsl
inc
cmp
push
sub
into
movsb
push
fs
mov
fsub
shrb
sbb
sub
mov
jl
cmpsl
xchg
ljmp
jp
aad
sbbl
sub
lods
mov
pop
sub
cmc
repz
sub
mov
addr16
pop
loop
push
jns
mov
pop
jge
bound
popf
mov
lock
jb
adc
jnp
js
andl
add
mov
mov
inc
into
call
into
jecxz
ficompl
ret
ret
sbb
loop
std
sbb
sbb
int
pop
dec
pop
lods
mov
call
sub
out
call
xchg
loope
stos
jl
mov
and
push
or
cmp
fwait
shll
pop
cmp
and
jle
leave
inc
ret
push
icebp
inc
xor
pushf
sub
popa
push
outsl
and
scas
loopne
cmp
mov
xchg
fiadds
cmpsl
orl
sub
jp
clc
scas
mov
inc
dec
cwtl
push
push
push
push
int3
mov
sub
xor
pop
hlt
dec
fwait
arpl
or
orb
scas
out
or
int3
or
lods
mov
and
jmp
jbe
and
pop
mov
add
and
dec
inc
pusha
xchg
aam
mov
into
das
test
adc
and
push
inc
fsubl
mov
jo
aam
push
cmp
push
fcom
mov
mov
inc
and
mov
gs
push
ficoms
inc
loop
pop
es
xor
push
aam
sbb
sub
mov
ret
sub
xchg
movsl
aas
dec
movsb
mov
mov
xchg
dec
rolb
xor
dec
inc
pop
movsl
int
adc
mov
pop
outsb
add
aaa
mov
sbb
sub
loop
sbb
sbb
sbb
dec
cmp
dec
push
das
mov
pop
and
cwtl
cmp
fidivrs
mov
sbb
shrb
insl
mov
add
addr16
andb
pop
push
cmpsl
test
sub
xchg
mov
mov
xor
rorl
xor
xchg
repz
xor
lcall
icebp
test
pop
aad
xor
jno
add
xchg
into
shrb
pop
pop
xor
and
mov
test
cmc
mov
cmp
dec
inc
ret
cltd
bound
int3
test
testb
and
sbb
sub
jg
adcb
or
or
jle
sub
xor
mov
add
movsb
pop
push
fnstenv
dec
nop
xor
push
pusha
cmp
sub
add
inc
rclb
outsl
nop
jl
and
dec
jecxz
jae
push
pop
xor
dec
ljmp
pop
notb
push
inc
cli
push
mov
mov
mov
pusha
mov
inc
rcr
mov
out
add
fwait
test
mov
leave
js
shrb
aaa
or
mov
or
jl
out
mov
in
push
add
sahf
cmp
mov
xlat
mov
in
loope
out
and
dec
add
scas
sbb
cmpsb
mov
mov
sbb
cmpsb
ds
add
pop
icebp
repnz
out
mov
das
mov
shlb
or
mov
leave
mov
cli
test
mov
aam
jno
les
and
insl
lahf
inc
je
lds
sbb
jle
xor
fistps
and
or
xor
mov
shrl
rcr
test
push
lds
loop
xor
lcall
mov
mov
icebp
add
jno
bound
mov
mov
mov
inc
loopne
dec
into
lahf
dec
fldlg2
ja
and
mov
pop
in
loop
mov
push
popa
movsl
sbb
dec
movsl
fldenv
mov
call
cli
clc
enter
or
stc
mov
mov
xor
mov
loop
ja
add
outsb
inc
dec
lock
popa
inc
enter
jecxz
xchg
cld
mov
lods
mov
xchg
xchg
pop
push
sti
test
xchg
arpl
add
lahf
cmc
dec
mov
inc
aas
or
test
outsl
or
mov
jg
or
and
adc
out
rcrb
jmp
incb
nop
adc
pop
inc
rolb
jmp
or
xlat
cmc
repnz
out
push
inc
pop
mov
push
mov
inc
test
push
cmp
jno
and
push
push
mov
or
stos
mov
fldt
and
sbb
testb
mov
jns
and
sbbl
adc
cltd
sbb
aam
fdiv
sub
adc
test
mov
testb
mov
adcl
or
lds
inc
add
cld
sbb
ja
stc
lahf
je
lds
jbe
mov
imul
add
mov
pop
sub
mov
es
fnstenv
les
inc
inc
outsb
dec
scas
inc
jg
sbb
jecxz
outsb
inc
push
movsl
xor
mov
mov
ss
sahf
dec
sub
sub
pop
call
aam
sbb
mov
out
repz
sbb
pop
cmp
pop
xor
jg
movsb
push
popa
or
xchg
push
sub
daa
xor
notb
in
xchg
xor
pop
or
mov
cmp
mov
aaa
shl
pusha
adc
insl
fistpll
jmp
adc
fs
mov
sub
mov
add
and
add
stos
int3
push
loope
adc
js
mov
push
lea
adc
repz
outsl
sbb
rolb
inc
and
leave
fisttps
scas
es
xor
shl
dec
test
sahf
rcrb
cmp
imul
loopne
and
mov
pop
lods
divb
lods
adc
les
gs
and
lahf
sub
and
stos
mov
iret
addr16
inc
sar
addl
jmp
and
and
int3
adcl
adc
sbb
mov
subl
mov
addb
adc
inc
test
xor
add
xchg
add
pushf
or
lcall
push
mov
test
jp
shrb
pop
lahf
pop
enter
cwtl
push
ds
inc
mov
imul
pop
dec
push
push
test
out
dec
movsl
mov
data16
push
imul
sub
sarb
lods
into
push
push
dec
push
fstl
xchg
fdivrs
push
jmp
insb
jmp
out
jbe
scas
sti
rorl
sbb
xor
xchg
test
cltd
and
add
das
inc
mov
xorl
dec
ja
sub
push
lret
fistl
xor
mov
and
push
shll
leave
lods
sub
inc
xor
cmpsl
fs
dec
bound
sti
inc
arpl
lods
and
inc
mov
lods
push
bound
inc
mov
xchg
xor
and
pop
sbb
in
sbb
fs
sub
rclb
add
mov
mov
inc
stc
lahf
shll
and
push
mov
pop
stos
xchg
pop
outsb
and
orb
inc
jle
add
sbb
mov
outsl
pop
mov
cmpsl
outsb
jl
lds
dec
icebp
out
mov
adc
dec
lds
clc
repz
jnp
sti
inc
icebp
xor
dec
repz
data16
adc
mov
xor
push
and
js
aaa
xor
shrb
mov
loop
add
movsb
mov
jo
add
aad
jne
movsb
mov
inc
cwtl
popf
aas
xor
xor
dec
sbb
sbb
cmc
std
push
dec
int
popf
jo
ret
sub
xchg
ljmp
add
roll
sub
lods
dec
pop
lret
daa
mov
adc
xchg
filds
xchg
test
sbb
mov
stos
out
xchg
icebp
inc
sbb
jle
dec
sub
inc
cmc
push
sarb
xlat
pop
stos
or
cmp
roll
dec
pop
jno
rclb
int3
lock
inc
stos
inc
inc
or
ja
pop
inc
dec
movsl
stos
in
pop
fadds
scas
iret
push
fidivrs
push
insl
sbb
loopne
popa
aad
clc
add
in
mov
sbbl
push
insl
sarl
sub
lret
std
shrl
iret
push
bound
rolb
and
xchg
mov
pop
xchg
sahf
push
cmp
dec
dec
adc
or
jge
cmp
jno
add
adc
xchg
fstpl
dec
ljmp
daa
dec
cmp
inc
ljmp
lods
pop
sub
mov
enter
xchg
or
loop
xor
mov
iret
loopne
mov
aas
xor
sub
xorl
jno
sub
push
loopne
ret
lds
add
xor
jns
movsb
ds
lcall
ljmp
std
xor
jno
in
adc
mov
push
inc
scas
repnz
sti
xor
dec
jp
push
dec
out
inc
xor
scas
adc
and
inc
test
cmp
add
jae
mov
pop
incl
mov
imul
sub
mov
shl
jo
hlt
and
popa
xchg
sub
fs
in
insl
dec
aaa
sbb
arpl
pop
and
inc
std
call
dec
inc
adc
mov
or
sbb
mov
stc
aad
lods
rcrl
dec
repz
dec
cmc
jmp
xor
inc
adc
icebp
push
add
inc
mov
cmpsl
push
js
pop
in
sti
push
sub
mov
shll
xchg
add
xor
int
cmp
jle
sub
push
mov
ljmp
repnz
sub
mov
les
xchg
push
stos
pop
push
jecxz
mov
and
dec
xor
subb
inc
xor
adc
es
pop
outsb
xchg
stos
daa
mov
pusha
mov
ficoms
cld
and
mov
mov
xchg
inc
adcl
push
and
adc
sbb
fdiv
xchg
and
imul
sub
add
pop
movsb
dec
pop
or
mov
pop
insb
insl
pop
add
cmpl
xor
mov
es
inc
pushl
imul
sbb
inc
rcrb
mov
orb
or
xchg
inc
call
outsb
inc
add
dec
ret
adc
lock
lods
mov
jno
jns
pop
adc
cmp
lds
das
sbb
stos
aam
push
in
leave
stos
mov
addr16
enter
ret
jp
bound
subb
xchg
adc
cmp
lods
mov
les
leave
pop
lock
lahf
mov
fldl
sbb
mov
lods
fs
mov
loope
adc
bound
je
fisttps
nop
dec
fdivrs
mov
push
std
clc
or
ds
stos
mov
push
pop
xor
pushf
std
fdivl
mov
adc
add
jo
push
sub
cmp
sbb
mov
inc
jmp
jmp
pop
out
jp
in
push
add
dec
stos
std
test
lods
jno
pusha
pushf
push
xchg
add
mov
cmpsb
mov
bound
pop
mov
jb
out
xchg
dec
inc
loope
call
and
and
dec
fs
and
lret
fucomp
push
and
mov
aad
fwait
jae
hlt
xchg
xchg
jbe
cld
sbb
cltd
adc
xlat
outsb
pop
fcompl
out
jmp
into
stos
js
je
mov
sbb
inc
push
cmp
xor
xor
repnz
dec
dec
or
pop
inc
ret
rolb
popa
icebp
clc
sbb
lds
loopne
or
lea
sub
mov
jae
mov
push
cmpsl
push
bound
cmpsl
adc
scas
cmp
push
mov
sbb
test
movsl
mov
mov
pop
inc
mov
push
repz
jl
aad
xchg
fwait
pop
daa
sbb
add
xchg
fisubrs
sbb
mov
mov
mov
inc
andb
mov
pop
inc
or
sub
jnp
sbb
ffree
jnp
jnp
add
dec
pop
mov
repnz
fcomps
inc
enter
and
inc
fdivl
aam
sub
adcl
mov
or
scas
fwait
xor
lcall
ja
mov
jecxz
jae
loop
cmp
mov
sbb
jne
and
loopne
and
lcall
daa
loop
inc
clc
push
inc
out
adc
sub
jmp
and
push
lock
cmp
repnz
lcall
aam
sub
pop
in
orl
mov
fldcw
add
or
cld
mov
and
cmpsb
fmull
mov
pop
lret
aad
push
xchg
das
call
es
fstl
mov
ret
inc
lds
pop
lret
mov
xchg
stos
popf
sub
or
pusha
sbb
fistpll
mov
cmpl
xor
inc
mov
sbbl
inc
fs
repz
and
rcll
mov
loope
hlt
popa
add
push
mov
xor
jne
jno
inc
imul
arpl
test
jecxz
cmp
pop
leave
out
lcall
popf
out
sub
cmc
or
mov
pop
pushf
mov
jo
mov
or
cmpb
fcoml
jbe
fwait
dec
fbld
or
and
das
call
mov
inc
sub
idiv
dec
jl
ret
sbb
lahf
repnz
push
out
pop
adc
rclb
inc
shlb
out
sub
push
push
and
xchg
cmp
stos
repz
lods
adc
scas
call
out
es
pop
dec
pop
rcll
inc
cmp
add
mov
popa
mov
arpl
mov
add
mov
lds
xor
cmp
iret
fucom
pop
dec
inc
lock
lods
lods
push
pop
xchg
push
stos
mov
daa
std
test
outsb
or
cmp
xorb
xchg
in
xor
or
xchg
test
inc
xor
push
mov
dec
cmp
push
jo
inc
sahf
jg
jae
int3
xchg
lea
test
sahf
sub
xor
mov
hlt
cwtl
xor
push
lods
mov
mov
and
xchg
push
mov
and
fisubs
mov
xlat
js
rcr
xor
push
ret
popa
insl
mov
push
inc
pop
adc
inc
jecxz
mov
test
xchg
mov
sub
mov
rcll
xor
adc
aas
inc
add
pop
and
add
jmp
push
mov
out
cmp
popf
inc
jns
aaa
pop
adc
sbbl
orl
pop
fs
push
es
dec
inc
push
enter
mov
inc
sbbb
roll
inc
add
add
push
adc
into
inc
lahf
mov
orb
scas
mov
or
leave
dec
repnz
imul
imul
push
mov
in
cwtl
outsl
mov
add
dec
jecxz
fldcw
pop
mov
adc
test
mov
xor
inc
xor
nop
addr16
es
inc
and
out
out
imul
aad
popa
fsub
dec
pop
lret
or
adc
inc
cmp
pop
in
loop
ret
inc
and
adcb
loope
jge
add
sti
cmpsl
jmp
xchg
pop
js
scas
lret
add
cltd
call
icebp
in
aam
mov
cmp
and
popf
test
loop
jb
adc
inc
sub
movsb
mov
mov
push
lea
ds
pop
in
fs
and
pop
mov
shl
test
jg
dec
dec
sub
dec
dec
scas
ror
lds
and
jge
nop
sub
mov
xlat
lods
movsb
sub
adc
lods
sub
adc
sub
or
sahf
aam
repnz
mov
xor
sarb
and
mov
adc
mov
dec
push
adc
movb
push
sub
inc
in
mov
inc
loopne
xchg
aaa
enter
pop
jge
mov
add
pushf
cmp
xchg
cld
mov
aad
jbe
add
addb
push
inc
or
enter
mov
mov
lock
push
fs
adc
loopne
xor
imul
sti
sub
fs
xor
mov
packuswb
ret
push
daa
test
inc
xchg
dec
inc
cmc
inc
repz
and
xor
sbb
scas
inc
or
push
shlb
xchg
xchg
push
fcoml
lods
inc
and
sub
mov
jno
jns
lret
dec
std
and
aas
mov
sbb
rcll
xchg
xchg
cmc
push
dec
add
in
inc
enter
repnz
cli
xchg
out
inc
cli
jecxz
les
cmc
pop
int
pop
or
push
push
inc
add
push
xchg
fwait
int
sti
enter
mov
xchg
in
es
pop
cmp
push
cmp
jo
mov
inc
incb
jmp
notl
push
mov
adc
adc
das
ja
ret
jg
in
push
sub
pop
mov
clc
loopne
pop
xchg
and
xchg
lahf
imul
aad
repnz
or
nop
pop
mov
jno
push
pop
or
shrd
mov
cs
sbb
and
fwait
mov
push
push
or
out
mov
pusha
ja
dec
rcr
add
pop
cmc
das
dec
xor
faddl
aad
test
rcrl
and
xchg
push
sbb
gs
sahf
dec
fs
jl
or
negb
in
dec
mov
sbb
cli
push
cmp
push
push
cwtl
cmpsl
lods
enter
movsb
adc
int
cwtl
xor
xor
popf
sbb
icebp
mov
rclb
inc
mov
mov
jmp
or
out
mov
sarb
adc
cmpsl
cld
lret
jns
fcompl
pop
adc
pop
scas
in
out
int3
push
mov
mov
push
lret
push
loop
jno
add
js
imul
cmp
cmpsb
in
and
xchg
cmc
dec
dec
dec
mov
adc
adc
loop
ss
jb
cwtl
or
sbb
cmpl
and
mov
fmulp
es
dec
sbb
popa
rcrl
ljmp
mov
loope
addb
jp
adc
je
aad
push
xchg
jns
xchg
pusha
popa
int
call
enter
cld
mov
shrb
sbb
inc
out
mov
mov
dec
mov
lds
jnp
movsb
pop
xchg
dec
add
out
dec
test
xchg
push
sbb
mov
sti
or
mov
sarb
xorl
inc
rclb
xor
sbb
mov
mov
or
das
aaa
cmp
xor
xchg
shll
les
cld
repnz
fs
xchg
mov
dec
lods
decl
jecxz
je
stc
sub
mov
jp
ret
mov
lds
and
xor
pop
sbb
cmp
inc
mov
cld
mov
insb
imul
popa
movsb
cmp
or
adc
out
sub
mov
cmpsb
mov
mov
xchg
and
test
cltd
mov
mov
adc
fwait
mov
pop
pusha
test
pop
sbb
mov
adc
repz
pop
add
nop
cltd
mov
addb
or
fs
inc
stos
fnstsw
add
sub
push
or
mov
lds
and
sbb
clc
inc
mov
xor
push
icebp
test
in
in
mov
push
cmp
movsb
mov
xor
popl
cli
cmp
notb
ret
xchg
out
out
push
popf
in
aam
adcl
and
fs
insb
xchg
lret
ja
adc
xor
pop
pop
shlb
shll
inc
mov
dec
xchg
addr16
test
push
rcll
pop
and
and
cmp
cmp
test
dec
nop
scas
scas
xor
arpl
les
mov
out
pop
nop
fadds
shrl
cltd
aaa
sbb
mov
adc
and
mov
mov
outsb
je
popa
and
pop
pusha
push
shrl
inc
add
cmp
xchg
push
sti
loopne
adc
aam
add
xchg
push
xor
push
inc
inc
mov
push
aad
shl
adc
mov
fistpl
dec
adc
inc
mov
into
daa
or
mov
or
aad
out
movsb
rcll
inc
sub
jo
jb
popf
mov
add
jb
cmc
xor
push
rolb
mov
inc
xor
clc
xchg
data16
js
jecxz
repnz
imul
sub
shlb
les
icebp
cmp
lea
xor
lahf
popf
dec
adc
and
push
jo
loope
call
adc
insl
flds
adc
les
cmpsb
and
and
sbbb
cmp
jae
jo
scas
mov
mov
shll
jb
xor
test
repz
xchg
call
inc
push
lods
push
add
add
jecxz
or
shll
mov
aaa
fs
vpsubq
add
dec
mov
sub
sbb
mov
cmpsb
inc
cli
pop
js
mov
xchg
xchg
rol
mov
pusha
movsl
add
mov
push
inc
sub
xor
mov
repnz
jns
inc
adc
lret
into
and
popa
pop
test
and
adc
sbb
fsubrl
or
pushf
adc
xor
icebp
push
sub
stos
adc
dec
xchg
out
mull
sub
mov
pop
pop
mov
out
stc
jge
jg
add
xchg
and
mov
cmpsb
js
cwtl
add
inc
jg
dec
pop
cmp
or
shll
aam
loopne
xchg
filds
adc
into
popf
cld
xchg
jne
int
xchg
fsubs
add
es
mov
gs
std
xchg
dec
xor
pusha
sub
insl
lods
call
jle
xchg
fs
mov
mov
repz
sbb
inc
cmp
mov
jbe
sbb
cmp
cld
aad
sub
aad
fs
cld
pop
lods
out
xor
fwait
ss
jns
fs
jmp
aas
xchg
adc
addl
cs
cmpl
cltd
add
add
push
pop
cli
push
or
aas
lods
sub
push
lret
mov
pop
cltd
sub
pop
rcll
add
aad
sub
mov
mov
popa
xchg
or
sbb
in
push
push
mov
jbe
xchg
loop
mov
mov
xor
push
leave
push
cmpb
xor
nop
mov
mov
fcomp
jge
js
addb
cmp
lea
xchg
pop
movsl
or
mov
jg
xchg
push
fldcw
sub
gs
sub
popa
out
fsubrl
inc
loopne
mov
cmc
push
leave
xor
repnz
push
push
arpl
fcomi
adc
sti
ljmp
mov
ss
pop
jg
dec
cmpsl
add
hlt
into
repz
sbb
nop
insb
gs
push
xchg
movsb
add
xor
dec
lds
mov
dec
xor
nop
jo
jmp
or
sub
rcl
aas
inc
es
test
in
push
or
xor
xchg
mov
mov
scas
jnp
adc
repz
das
out
je
xor
jno
out
scas
andl
dec
fidivl
sbb
dec
jno
or
pop
or
out
rolb
add
cmp
stos
sti
and
inc
adc
popf
sub
pop
jg
pop
out
ret
aaa
ficoml
pop
lods
movhlps
shll
bound
jmp
mov
jge
fldl
jb
nop
sbb
push
pop
adc
fildl
mov
cmpsb
cld
push
imul
fwait
add
inc
out
inc
xchg
add
and
sbb
xor
pop
jbe
lret
push
popf
cmp
adc
push
mov
xor
mov
xchg
fisubrl
sub
inc
inc
jbe
and
xor
inc
test
cmp
andb
dec
leave
or
mov
fcompl
push
int
xor
or
lds
jb
shll
cltd
enter
mov
sbb
stc
sbb
adc
jne
push
cmp
inc
cmpsl
cmp
dec
push
clc
outsb
adc
imul
pushl
scas
adc
push
jmp
sub
aam
push
inc
ds
lock
xchg
push
cli
fidivrs
repnz
mov
sbb
dec
jge
data16
mov
jno
mov
mov
scas
ss
mov
gs
pusha
mov
pop
sbb
xchg
sub
push
inc
mov
push
xor
in
inc
mov
std
xor
push
rolb
pop
dec
decb
test
hlt
clc
xchg
push
out
lea
jno
std
pop
cmc
push
data16
mov
or
sbb
inc
mov
inc
jns
ret
pop
dec
add
les
xor
out
and
mov
or
imul
pop
loop
sub
mov
xor
mov
jp
setb
adc
add
std
in
push
rcll
adc
sub
cmpb
add
fs
dec
or
outsl
sbb
je
inc
in
movsb
sbb
add
pop
add
and
cmp
ljmp
or
adc
es
jmp
movl
arpl
orl
xor
int3
das
hlt
jmp
mov
pusha
es
sub
sub
mov
sbb
daa
inc
sbb
mov
ss
int
popf
lcall
xchg
insb
xlat
pop
in
add
lods
outsb
insl
int3
setne
sbb
lods
imul
lock
xchg
aaa
cli
xchg
dec
leave
jp
jbe
dec
push
cmpsb
jo
dec
jbe
and
push
leave
add
shlb
test
dec
ret
dec
aam
xchg
xor
sbbb
sbb
in
popa
xor
mov
outsl
pop
rolb
shll
popa
clc
pop
roll
push
and
xchg
mov
or
adc
or
dec
mov
sub
sbb
mov
xor
cld
sbb
call
dec
and
lods
addb
inc
hlt
dec
add
sub
shl
and
jne
outsb
adc
addr16
push
andb
insl
shl
jecxz
test
lahf
add
shrl
mov
roll
adc
fsubp
jnp
shll
test
xor
in
xchg
orl
imul
int
jecxz
int
mov
add
rclb
xor
cmc
lds
push
add
xchg
inc
inc
cwtl
cmp
nop
lcall
int3
xrelease
and
dec
add
inc
sbb
lods
les
pop
ret
shl
rclb
lret
sbb
sub
pusha
sbb
jnp
inc
fs
lock
icebp
sub
jb
inc
push
leave
push
sub
inc
in
adc
mov
mov
imul
mov
fwait
cmp
scas
jp
scas
pop
in
dec
scas
mov
int3
mov
idivl
lea
and
mov
jge
nop
adc
mov
arpl
fcoml
xorl
popf
out
mov
rcrl
xchg
lock
xor
pop
dec
adc
je
mov
mov
ja
sbb
fadds
cltd
adc
sarb
daa
dec
addr16
sub
xchg
test
sub
xchg
xor
push
je
sub
add
mov
jae
and
incl
fists
hlt
push
inc
xor
inc
addb
pusha
notb
ljmp
sub
aas
cli
inc
pusha
ljmp
jmp
adc
mov
dec
push
mov
bound
pusha
rol
aaa
sub
fists
mov
mov
jae
adc
sub
xor
or
lea
movsl
jne
sbb
push
add
sbb
scas
cmpsl
sbb
adc
insb
sbb
cmp
jae
shl
test
es
es
addb
sub
inc
jnp
call
adc
push
xlat
and
mov
mov
adc
pop
xor
pop
mov
test
mov
gs
cmp
mov
cmp
test
stos
stc
movsb
fdivrs
lods
gs
push
sub
sub
and
outsl
mov
loop
cwtl
test
mov
imul
inc
jmp
push
sar
xchg
xchg
xor
jo
add
fmull
inc
aad
in
mov
leave
jle
dec
int
mov
xor
xchg
and
mov
or
mov
mov
call
sub
mov
cltd
add
in
pop
sbb
insb
and
bound
inc
adcl
add
in
nop
aad
mov
scas
js
jp
inc
pop
push
sub
push
pop
dec
xchg
sub
push
add
push
std
sub
mov
insb
xchg
jno
mov
stos
jge
mov
inc
out
add
add
sbb
dec
mov
fcoms
pop
add
inc
sbb
add
add
sbb
xor
jge
pop
add
cmp
pusha
cmpsb
pop
je
aad
mov
xor
jns
es
ja
mov
push
pop
fs
mov
push
loop
or
fildll
xor
mov
scas
xor
pop
or
lods
inc
stc
je
dec
ljmp
insl
jb
dec
dec
inc
cmpb
inc
movsb
xor
jb
inc
lcall
lods
push
sahf
dec
cmp
mov
sbb
sub
rolb
cwtl
mov
lcall
push
inc
pop
cmpsb
mov
xor
adc
arpl
in
scas
sbb
jp
repnz
xor
mov
dec
jns
imul
push
dec
mov
add
cmp
mov
or
out
jl
stos
mov
loope
outsb
lahf
jns
push
push
cmpsl
lods
and
rcll
jae
xor
jp
lret
scas
sbb
sbb
inc
orl
rorl
add
inc
lods
lods
inc
ficoml
out
nop
aaa
daa
push
adc
nop
fwait
or
lds
and
outsl
or
sub
mov
xor
pushf
push
pop
sub
test
mov
jbe
hlt
push
insl
sub
cmp
jnp
inc
ljmp
lods
jo
cltd
push
das
dec
cmp
adc
shll
add
pusha
pushf
ja
xchg
cmp
lret
cmp
das
addr16
push
add
push
dec
dec
jae
loope
les
insb
push
lods
stos
ror
jp
sbb
xchg
mov
jno
bound
insl
outsb
push
jo
jg
add
pop
inc
ktestw
mov
cltd
fs
or
jo
dec
lock
lods
jecxz
insb
sarb
adc
cld
loop
jbe
roll
sbb
movsb
dec
dec
or
or
or
mov
jno
jo
sbb
push
adc
sub
fiadds
dec
mov
pop
pop
xchg
insb
xor
sbb
pop
sbb
das
cmc
xchg
xchg
test
and
xchg
push
pop
cmp
loop
imul
and
sub
out
pop
and
mov
add
lods
inc
push
jo
jmp
add
lods
mov
adc
roll
sub
pushl
inc
inc
inc
sbb
jb
dec
cmpsl
ret
add
push
cmp
xor
leave
clc
sbb
mov
mov
sub
dec
rcrb
sub
push
sub
mov
mov
push
mov
ret
pop
sbbb
xchg
dec
pushf
std
cmp
stos
ja
inc
fsub
lock
out
clc
cs
lahf
pop
fs
inc
repz
ficompl
adc
mov
fimull
jae
add
mov
push
push
jb
cltd
cld
pop
add
pop
addr16
int3
lods
jge
loop
cld
dec
cmp
addr16
adc
inc
and
jns
test
mov
pop
in
adc
or
push
mov
rcll
cmp
lods
and
jmp
jl
fists
pop
mov
xorb
hlt
dec
aam
divl
mov
mov
daa
xor
int
push
lret
xor
push
lea
mov
es
mov
and
xchg
pop
pop
das
in
mov
das
sub
xchg
dec
in
push
cmp
bound
or
test
stos
pop
mov
sub
adc
rolb
es
movsb
fbstp
push
pmullw
movsl
mov
jmp
sarl
dec
add
adc
shrb
test
xor
test
in
push
xor
cmp
push
sbbb
rclb
lahf
in
lods
fneni(8087
into
xor
icebp
dec
mov
jnp
jno
daa
ljmp
shrl
nop
jae
push
lods
inc
ja
adc
aam
push
sbb
mov
adc
lods
mov
mov
add
sbb
adc
pop
loop
mov
inc
or
leave
cmp
lea
lds
lea
lds
dec
stos
xor
push
and
lods
ret
mov
dec
xorb
cmp
add
testl
je
adc
dec
je
xor
and
scas
sub
or
push
inc
sbb
inc
sbb
and
mov
mov
lods
aas
and
inc
push
pop
sbb
in
insl
leave
dec
sahf
dec
xor
and
push
in
nop
sub
cmp
add
aaa
mov
mov
and
aaa
loop
and
movsb
and
stc
dec
out
movl
test
popa
jo
cli
mov
xchg
idiv
and
add
outsl
jle
jne
insb
and
add
mov
push
cmp
xchg
testb
push
inc
fldt
dec
adc
sahf
int
ja
inc
pusha
idivb
test
sbb
fwait
and
push
insb
sub
inc
jmp
nop
jns
adc
scas
dec
inc
in
test
push
jl
pusha
fs
sbb
cmp
roll
mov
mov
lods
sub
test
or
daa
push
sbb
stc
movsb
pop
add
aad
push
in
lret
or
ja
pop
sub
les
or
sahf
mov
mov
mov
loop
in
sub
jbe
xor
lods
add
dec
adc
mov
push
sti
inc
repz
inc
xchg
divl
lahf
std
js
int
shrb
enter
mov
dec
sbb
lahf
inc
and
lds
jb
loopne
dec
jge
pushf
insl
sarb
xchg
repz
imul
dec
add
mov
dec
xchg
sbb
ss
inc
mov
adc
shrb
ret
add
xor
cmp
sbb
cwtl
loope
adc
mov
movsl
movsb
xorb
ljmp
movsb
repnz
mov
ficomps
adc
les
daa
dec
inc
inc
imul
lea
push
dec
inc
sub
dec
dec
sti
sahf
push
jge
xchg
push
jg
fs
stc
dec
or
insl
adc
jecxz
and
ret
arpl
adc
jno
or
push
ss
and
lods
and
push
out
xchg
xor
test
mov
sub
jecxz
lock
mov
mov
mov
test
daa
pop
pushf
inc
mov
dec
pop
pop
mov
rcrl
mov
push
test
fbstp
inc
adc
sub
and
mov
mov
call
or
std
cmovp
jg
dec
aam
adc
clc
and
or
push
fs
jmp
add
mov
pop
cmp
xorl
fsubrs
mov
push
add
push
test
xor
loope
push
std
in
movsl
mov
mov
shrb
add
sub
push
into
lods
sbb
test
lock
sub
xchg
push
xchg
adc
inc
sbb
inc
sub
xchg
push
les
mov
cmpsl
call
rcl
clc
cmp
or
add
sub
imul
xor
aad
shlb
add
inc
mov
mov
shll
enter
inc
cmp
inc
cmp
mov
adc
and
ret
fldenv
loopne
sbb
cmpl
xor
pop
push
push
push
add
daa
int3
ja
mov
cmp
mov
mov
data16
repnz
mov
rorl
mov
in
mov
or
lods
stos
imul
adc
pop
jmp
inc
pop
and
mov
mov
inc
pop
pop
arpl
daa
sahf
stc
pop
jbe
or
mov
fsubl
mov
and
ret
jnp
add
insb
in
push
sbb
pop
cmp
and
mov
add
xchg
jge
adc
jle
ds
std
push
sbb
iret
mov
mov
sbb
cmp
filds
adc
pop
test
enter
adc
fildll
or
or
in
jne
lods
mov
lock
hlt
dec
std
xchg
popa
ret
inc
or
mov
jo
out
clc
xchg
out
adc
shrb
pop
push
or
xor
sbb
jmp
inc
jne
pmaxub
call
or
inc
sbb
dec
and
movsb
cmp
aam
pslld
cmp
sub
pop
or
fcomp
andb
add
mov
sarl
push
fsubrs
mov
das
xchg
arpl
mov
pop
pop
nop
stos
add
ss
cmp
ret
lahf
dec
outsl
sbb
cmp
ret
cwtl
call
daa
and
push
sub
sub
pusha
ss
sub
or
pop
cld
xor
sahf
ret
jo
into
inc
mov
and
out
or
andb
push
sbb
xchg
and
pop
jne
jo
scas
bound
dec
or
gs
lret
or
pop
mov
push
push
push
pop
and
adc
fbld
ret
cmpsb
cli
dec
es
adc
xchg
pop
sbb
fildl
das
cmpsb
push
sub
pop
cmp
cmp
mov
je
add
scas
sub
add
ret
pop
push
sbb
mov
hlt
pop
loope
ret
nop
mov
sbb
cltd
sbb
pop
hlt
mov
sub
jo
es
xor
and
mov
push
cld
std
sti
cmp
push
cmc
adc
lcall
xchg
cli
lock
mov
xor
dec
or
xchg
orl
jno
xchg
jge
xor
inc
fdivl
and
push
js
mov
jo
rclb
fnstcw
pop
popa
test
cmp
push
inc
sbb
xor
popa
or
sbb
dec
jne
sbb
xor
cmp
sti
out
cld
and
pushf
jecxz
pop
ljmp
pusha
loopne
es
dec
pop
jns
push
inc
nop
sbb
and
or
bound
mov
sar
sbbl
sbb
mov
cmp
jge
or
pushl
xchg
test
leave
std
insb
imul
shl
sub
mov
mov
roll
sbb
xor
pop
jge
test
add
dec
push
inc
and
mov
repnz
cmp
inc
cli
fld
repz
out
mov
mov
outsl
scas
faddl
jne
jb
pop
rorb
or
fwait
loope
pop
or
int
sbb
mov
jne
pop
mov
or
sbb
mov
push
xlat
push
sub
mov
mov
cmp
inc
ja
jmp
jo
test
sbb
cwtl
pusha
sbb
cwtl
in
xchg
shrb
jl
pop
mov
popa
movsl
lret
sarl
mov
sub
pop
outsl
push
outsb
in
and
int
in
jae
mov
leave
movsl
frstor
sbb
add
xor
mov
pop
out
call
clc
and
dec
rclb
lock
inc
dec
fldl
or
pop
and
mov
jns
shlb
out
lock
jecxz
and
jmp
pop
or
adc
push
ss
and
scas
inc
out
cmp
inc
inc
imull
xor
mov
xchg
mov
lret
cmp
ja
fs
in
rcll
lahf
ret
lock
dec
or
adc
mov
sub
lods
cmp
mov
out
pop
xchg
jp
cmp
fisubl
add
fs
push
adc
add
mov
dec
outsb
sub
jmp
xchg
imul
xchg
and
dec
test
pusha
pushf
or
pop
xchg
inc
clc
jecxz
mov
cmp
aad
dec
add
mov
ljmp
nop
sub
xchg
scas
inc
cmp
aam
jno
nop
mov
inc
xor
fstpt
gs
shrl
movsl
cmp
ffree
jmp
inc
aad
cmp
or
sub
shlb
and
jns
jb
gs
mov
mov
mov
fldcw
push
bound
xlat
aad
movsb
in
hlt
sbb
shrb
fwait
xchg
out
popa
insl
dec
loopne
mov
shrl
add
dec
inc
xlat
mov
mov
cwtl
mov
andl
pop
ret
loope
mov
pop
and
mov
rorb
jmp
inc
mov
jnp
mov
xchg
and
loop
dec
imul
pop
and
mov
lret
push
in
push
ds
iret
mov
push
mov
push
btr
mov
xlat
sahf
inc
cmp
pop
and
lds
xor
adc
cmpsl
cmc
cmp
lret
or
rol
lock
scas
push
sahf
push
pop
mov
scas
push
pop
add
lret
mov
sub
sti
xor
push
dec
jnp
stos
or
sti
nop
popa
xchg
or
sub
js
int3
insl
mov
in
sarb
mov
mov
cs
loopne
daa
outsl
pop
lds
and
sbbl
pop
sub
shll
shlb
test
cs
or
sub
adc
mov
or
testb
sub
sub
fmul
pop
cltd
bound
mov
notl
test
aad
push
cmpl
enter
ret
mov
ficoml
call
inc
xor
mov
addb
cmpsb
int
lret
inc
adc
rcr
xchg
ds
push
add
push
and
adc
sub
mov
xor
in
dec
pushf
xchg
shl
dec
loopne
pop
xchg
mov
hlt
cmpsl
pop
leave
xchg
es
or
mov
add
or
movsb
out
dec
mov
sbb
ds
fsubrs
adc
xor
sub
add
nop
jmp
add
xor
lret
movsb
xor
mov
push
push
loope
lock
sarb
push
ret
cs
cmp
test
or
popl
jecxz
cld
jns
jne
repnz
mov
and
adc
sbb
xor
enter
ror
mov
mov
addr16
lcall
push
fimull
lods
cltd
flds
and
push
sarb
inc
iret
add
sbb
mov
push
lods
sbb
jne
inc
nop
push
rolb
jno
pop
sub
pop
mov
fdiv
bound
cs
or
pop
int3
xchg
mov
adc
xchg
lret
outsl
and
orb
rcr
stos
repnz
aam
sub
inc
adc
in
inc
dec
fcom
or
nop
into
jno
lods
sbb
pusha
xor
sbb
pop
push
sub
add
sub
jl
test
je
jne
xor
pop
fildl
pop
cmpsb
mov
loope
jle
lock
fdivs
loopne
inc
adc
je
inc
addr16
idivb
inc
cltd
and
dec
cmc
rcll
add
lahf
jae
mov
push
dec
lock
sarb
jb
inc
cmpsl
leave
in
negb
dec
push
mov
add
pop
shll
and
repnz
fs
sbb
in
lcall
and
addl
push
cmp
inc
test
pushf
lcall
stos
in
mov
and
jecxz
mov
inc
ret
inc
fdiv
add
lods
loop
push
fildll
data16
lcall
dec
sbb
movsl
data16
dec
push
out
inc
dec
mov
push
inc
je
out
loopne
jae
mov
jbe
loope
jno
and
stos
mov
xor
mov
int
and
jp
cltd
inc
inc
xor
cwtl
cwtl
stc
rorl
mov
arpl
jle
in
mov
jp
inc
or
mov
inc
mov
adc
sub
loop
cmp
adcb
mov
xlat
cmpsb
loope
inc
inc
insl
add
sub
xchg
loop,pn
or
sbb
mov
inc
and
shr
lahf
ret
push
gs
in
cmp
push
jb
add
xchg
sub
mov
out
ja
and
into
mov
movsl
mov
cmp
insl
in
pop
fcoml
cli
mov
jno
push
xchg
or
pop
popf
aam
mov
addr16
cli
push
sti
push
inc
and
out
rcrb
inc
loope
cmp
das
xor
das
add
es
outsl
add
pop
out
nop
dec
dec
mov
std
push
push
addr16
rcll
sub
adc
sub
pop
pop
daa
dec
mov
pop
sbb
loop
outsb
jo
cmp
addr16
lods
leave
jg
js
xchg
scas
and
xchg
stos
es
call
xor
add
push
mov
inc
push
jb
mov
in
or
outsl
xchg
mov
xor
aas
push
sbb
cmp
jmp
add
addr16
jno
push
push
xlat
mov
pop
inc
pusha
lock
adcb
icebp
test
adc
mov
xchg
mov
in
xchg
das
xchg
jle
mov
jbe
lcall
aaa
pop
cmp
inc
cmp
push
pop
jge
add
fidivrl
add
pop
dec
cvtpi2ps
sbb
mov
in
adcb
push
sbb
jbe
stos
mov
sbb
and
leave
mov
icebp
outsl
adc
dec
hlt
mov
jp
sbb
jge
imul
add
pop
or
xchg
mov
movsb
cwtl
in
add
dec
loopne
pop
cmpb
scas
jmp
lret
int
xor
sar
mov
or
mov
xor
inc
or
scas
pusha
push
push
xchg
jo
add
jmp
dec
out
jl
sub
adc
push
in
or
xchg
ss
push
and
push
cmovae
aaa
jno
mov
addb
aas
sahf
test
mov
lea
mov
sbb
clc
pushf
cli
addr16
inc
sub
stos
icebp
movsl
stos
sbb
popa
jmp
rorb
cltd
inc
movsb
xchg
xchg
das
or
or
sbb
push
lods
dec
dec
mov
lock
push
fwait
outsb
mov
push
inc
xchg
sbb
dec
sub
inc
shlb
in
jbe
mov
pop
pushf
outsl
or
fs
mov
sub
mov
mov
pop
adc
pmulhuw
inc
and
lcall
insb
lods
dec
mov
sti
and
fisttpl
lahf
or
das
and
cmovb
adc
push
mov
jo
test
bound
es
push
es
mov
popa
ds
lock
rol
or
repnz
fs
inc
cld
pushf
inc
ja
pop
or
clc
sub
into
and
push
adc
inc
dec
js
movsb
frstor
and
add
jmp
inc
lods
mov
aad
aaa
push
movsl
cmp
lahf
cld
inc
test
sub
ret
aaa
xchg
add
push
push
cmp
jecxz
data16
popa
int
xchg
aad
arpl
push
fs
aad
mov
in
cld
movsb
sub
dec
out
or
or
clc
out
inc
js
jnp
inc
xchg
xor
jne
data16
fwait
cmpsl
pop
xor
and
xor
xor
popf
mov
jbe
and
enter
cltd
jmp
push
pusha
jg
add
icebp
jg
and
xor
adc
mov
fadds
or
mov
adc
sbb
pop
mov
cmp
or
pop
pop
mov
or
sub
loopne
outsl
sbb
or
sbb
dec
cmp
xchg
sub
cmc
mov
xor
add
mul
imull
mov
test
ss
jne
inc
lods
call
push
shlb
xor
fs
cmc
fs
adc
out
xor
pop
mov
and
push
add
loopne
scas
lods
xor
add
mov
aaa
jmp
add
jnp
call
test
pusha
incl
xchg
fmull
mov
lock
lret
pop
in
push
js
or
cmp
push
nop
push
in
repz
into
adc
jns
adc
sub
mov
insb
leave
cmc
add
add
inc
leave
push
into
mov
mov
cmp
fisubl
add
nop
inc
lahf
xor
inc
mov
inc
bound
xor
push
cltd
jp
cld
lcall
fcomps
xor
xor
xchg
sbb
repz
mov
mov
call
insl
pop
jle
push
inc
cmc
in
pusha
pop
pop
out
dec
push
outsb
ds
shl
sub
psubusw
dec
cmp
mov
loope
jg
mov
pop
fadds
ret
xchg
les
mov
or
notl
and
loopne
or
pusha
sub
pop
pop
inc
shrb
fwait
jg
das
hlt
mov
mov
add
and
data16
dec
dec
adc
lea
out
sahf
sahf
cld
push
mov
fbld
ss
cmp
call
pop
adcb
insl
lods
adc
adc
jo
jp
scas
or
movsb
fs
sbb
shrl
clc
push
xor
pop
mov
dec
xchg
hlt
xchg
cltd
out
sbb
push
and
ja
jl
add
stos
outsl
lret
shll
jb
mov
stos
les
push
movsb
popa
xchg
xchg
scas
inc
and
scas
lds
dec
mov
mov
inc
andb
inc
in
sbb
arpl
test
sub
sub
insl
div
in
mov
and
test
dec
leave
movsl
add
aaa
rcl
lds
loopne
leave
lea
xor
outsb
add
dec
imul
push
lods
into
inc
push
aaa
mov
rcrl
subb
lock
outsl
mov
dec
lahf
push
loopne
push
pushf
xor
push
mov
add
int3
mov
pop
daa
push
push
pop
popa
push
and
stos
sbb
jnp
pop
sbb
ss
mov
pop
cmp
lret
cmpsl
jae
pop
arpl
adc
adc
test
movsb
sbb
icebp
jmp
jle
cmpl
jle
bound
ja
cld
mov
mov
adc
pop
mov
xor
mov
push
mov
xorb
scas
sbb
sbb
hlt
fsubrl
sbb
inc
clc
fstl
cmp
mov
adc
push
sbb
pop
fidivrl
scas
push
je
jecxz
iret
jbe
test
xor
jecxz
jmp
add
dec
jl
adc
sub
jb
test
xor
movsb
xchg
cli
adc
cld
mov
mov
scas
xchg
adc
xchg
repz
jp
adc
pop
mov
loop
sbbl
pusha
xor
fsubs
andb
in
mov
repnz
movsl
adc
adc
stc
mov
cmp
test
inc
andb
nop
es
ljmp
aam
inc
mov
in
jno
add
nop
sarl
jp
mov
dec
cmpb
lock
cmp
leave
aad
sub
es
lret
mov
dec
sti
pop
xchg
jecxz
push
mov
dec
mov
pop
loope
dec
sub
push
xchg
mov
inc
in
pop
lock
cmpsl
jmp
hlt
int3
xor
cmp
push
fs
mov
xor
cltd
mov
ret
notl
add
inc
mov
add
xchg
xor
jno
lcall
or
push
xor
xchg
outsl
popa
nop
iret
pop
xchg
ljmp
jge
js
mov
stos
pushf
lcall
add
repnz
cmp
in
push
pop
and
push
adc
adc
sub
call
gs
pop
pop
or
int
push
pushf
push
gs
popa
mov
dec
mov
out
enter
int3
pusha
ret
push
mov
loopne
mov
imul
mov
add
dec
movsl
shlb
outsb
push
leave
lock
stos
out
inc
push
jnp
aas
push
push
loope
mov
sub
inc
lcall
movsb
xor
sub
push
jmp
ds
test
sub
add
or
outsl
push
stos
xchg
call
lret
mov
jnp
aad
sbb
xchg
xchg
andb
pop
xchg
ss
jo
xchg
stos
xchg
enter
inc
es
mov
ja
pop
scas
jecxz
rclb
jo
push
adc
lods
mov
cmpsl
outsl
mov
push
mov
loopne
cs
push
sbbl
xor
sti
xchg
add
mov
fstpt
repnz
ret
push
inc
mov
mov
sub
xor
adcb
or
insb
loop
insb
pop
ljmp
pop
ret
negb
aaa
ret
mov
fmul
je
shrb
loope
je
cmp
push
add
outsb
leave
addr16
xchg
fsubl
mov
dec
cmp
out
dec
rcrl
push
jecxz
xchg
xor
out
cs
push
ja
das
xor
mov
cmp
shl
xchg
popf
in
xchg
or
in
in
add
push
rcrb
and
clc
bound
das
inc
jne
inc
pop
xchg
incl
inc
cwtl
dec
xlat
cmp
ss
push
and
scas
inc
push
jl
sbb
dec
popa
lock
loop
nop
nop
inc
fst
cli
xor
outsb
jnp
pusha
lahf
push
ret
in
mov
inc
sahf
xchg
push
ret
mov
inc
rol
mov
add
scas
mov
jmp
loope
push
cwtl
loop
jl
jmpw
aaa
inc
jle
and
and
and
xorb
adc
loop
mov
xchg
add
and
in
pusha
in
push
sbb
adc
aad
sub
lock
pop
cwtl
mov
mov
lock
fwait
test
xchg
sbb
dec
out
jecxz
push
dec
sahf
call
lds
call
movsl
mov
shrl
add
mov
xor
stos
add
xchg
in
rol
insl
mov
jne
int3
mov
inc
and
rcll
fdivs
pop
adc
imul
add
add
push
adc
int
mov
fs
pop
aas
mov
inc
scas
fwait
rolb
daa
adc
aas
in
jecxz
dec
aaa
mov
fmull
mov
daa
inc
clc
xor
out
pop
shlb
subl
jg
and
adc
out
sbb
leave
mov
xor
xchg
addl
sbb
cltd
mov
dec
xor
cmpb
je
iret
stc
sub
xchg
dec
lea
or
lds
das
flds
fdivrl
aad
inc
or
mov
push
xchg
add
push
sbb
mov
xor
pop
call
sbb
push
xchg
add
inc
decb
push
sub
dec
cmp
and
fidivl
iret
aad
mov
add
rcll
call
stc
daa
cmc
fsub
shlb
dec
bound
dec
lahf
cld
loop
fsubr
loope
mov
imul
xchg
loop
pusha
outsl
push
push
sbb
mov
js
pop
or
pop
les
test
add
mov
jne
into
push
add
das
das
cmp
loop
xor
enter
and
mov
inc
movsl
das
rclb
lret
and
lods
mov
cld
jae
mov
test
and
shlb
add
jne
adc
pop
pop
fdivs
or
and
rorb
or
mov
pushf
je
testl
movsb
insl
in
shll
inc
popf
ljmp
test
in
sub
sbb
bound
mov
mov
fs
mov
lcall
movsb
sbb
mov
pop
lret
xchg
das
mov
mov
repz
inc
dec
sahf
cltd
push
mov
rcr
ds
mov
or
pop
xchg
sbbb
sti
sbb
jp
add
mov
add
xor
test
nop
dec
inc
lock
xchg
inc
push
movsb
adc
push
arpl
lret
sbbb
inc
sbb
movsb
hlt
pop
rorl
sti
in
and
xor
pop
jns
mov
rclb
sarb
cmp
or
mov
sbb
jp
loopne
ficompl
add
movsb
or
sbb
push
mov
loop
aam
adc
push
inc
cmpl
push
out
repnz
std
das
into
and
add
push
mov
into
iret
ret
les
xchg
xor
inc
loope
movsl
loopne
scas
sbb
add
or
ss
in
mov
xorb
and
and
bound
int3
orb
mulb
add
xchg
dec
pop
mov
cld
push
push
jo
or
mov
push
jl
rclb
push
mov
jmp
je
movsb
fcomip
in
fs
gs
sbbb
clc
popa
jmp
je
xchg
xor
sbb
orl
mov
es
loop
loop
leave
pop
xchg
test
ss
insl
stos
dec
pop
call
ficoms
movsl
cmpsl
xor
xor
pop
ja
cmpsb
add
scas
aaa
imul
gs
add
inc
mov
popa
mov
ds
jle
mov
add
cmp
movsl
pop
out
in
shrb
jmp
mov
mov
inc
movsl
icebp
lret
pop
jge
mov
lea
popf
test
out
xchg
ficompl
clc
jae
jae
xor
cmova
pop
gs
shll
imul
xchg
fistpll
mov
and
mov
and
pop
addr16
insb
mov
bound
fcmovbe
jb
lcall
shrb
or
cmp
aam
xor
sub
daa
movsl
fs
push
daa
mov
fdivl
push
xor
dec
lea
in
out
int3
inc
in
es
inc
dec
inc
jbe
mov
inc
sbb
negl
mov
push
imul
sbb
mov
loopne
scas
mov
pop
sub
hlt
sbb
out
in
cmpsl
outsl
xchg
xchg
lahf
add
call
push
test
std
push
lret
inc
call
pushl
pop
jnp
test
loopne
inc
adc
mov
pop
dec
in
aam
icebp
mov
js
sub
and
inc
cwtl
or
adc
adc
movsb
dec
mov
jle
inc
add
mov
scas
mov
push
cld
shl
faddl
ds
rclb
inc
dec
inc
sub
aaa
push
inc
movsl
adc
sub
psllw
inc
cmp
in
mulb
aas
push
or
inc
imul
dec
in
add
sbb
das
inc
jo
frstor
mov
bound
push
or
mov
jle
dec
pop
daa
xor
adc
inc
xor
push
lods
scas
inc
mov
push
lock
cmp
pop
movsb
sub
or
pop
fs
lds
mov
push
pop
and
or
sahf
les
mov
pushf
sbb
gs
fadds
jo
fucom
add
sub
pop
cli
ja
inc
cmp
dec
add
or
ret
adc
shrl
sbb
in
out
lods
sub
ds
popa
jnp
test
or
mov
es
sbb
test
or
sbb
data16
iret
xor
sub
jb
aas
or
lock
push
mov
jnp
movsl
mov
fiaddl
daa
mov
mov
ja
arpl
inc
inc
cltd
sub
movzwl
pop
mov
es
loope
inc
cli
pop
sti
inc
jne
or
jecxz
mov
pushf
or
testl
push
clc
fistps
adc
ret
xlat
xor
dec
dec
xor
lea
imul
stos
aas
rcrl
sub
repz
dec
push
xor
sbb
lea
sbb
movsl
mov
jmp
xchg
das
mov
adc
mov
lods
lea
xchg
inc
adc
mov
fmull
dec
stc
xor
enter
je
inc
dec
push
xchg
movsl
mov
add
sbb
jle
dec
in
jnp
movsb
pop
fdivrl
pop
mov
insb
sub
sbbl
push
test
pop
js
add
cwtl
aas
inc
mov
mov
xlat
sbb
int3
inc
add
sub
int3
clc
pop
mov
lret
adc
or
enter
and
cmc
and
pop
test
push
jmp
sub
sub
clc
inc
sub
pop
fmull
js
pusha
mov
in
div
pop
ret
in
clc
adc
inc
shll
inc
jne
mov
push
sub
mov
cmp
loop
adc
sub
or
stc
mov
fnsave
je
adc
test
mov
mov
mov
pop
jl
sbb
push
icebp
jge
inc
daa
popa
lods
jl
mov
rep
shl
lcall
add
fnsave
cltd
cmpsl
inc
bound
add
pop
push
pop
aam
fsubl
mov
sub
mov
xchg
cmpb
inc
mov
js
cmp
dec
push
and
jl
jae
pop
cld
int3
lret
popw
inc
jl
subb
xor
jecxz
sub
ficoms
and
ret
popf
mov
xchg
icebp
inc
les
ret
sbb
mov
cwtl
mov
xor
fdiv
cli
shl
adc
pusha
loope
nop
and
fxch
insb
sbb
and
dec
mov
mov
mov
inc
push
dec
inc
xor
test
hlt
and
sarl
dec
inc
pop
insb
add
mov
or
jmp
mov
and
pusha
mov
lret
jmp
pop
loope
out
into
in
idivb
fbld
mov
dec
test
icebp
insl
outsl
pushf
dec
loopne
lcall
push
xorl
dec
aad
mov
push
adcb
fxch
andl
add
pop
ja
in
lock
mov
cld
pop
adc
adc
xor
mov
vpsrlw
sbb
aas
into
clc
ljmp
mov
pop
cs
mov
xor
jo
and
push
xor
mov
dec
fstpt
jmp
sbb
push
inc
imul
test
pop
sbb
jno
jl
dec
adc
push
adc
cmp
mov
insl
ds
mov
repnz
out
fcoms
lea
popf
ss
nop
cmpsl
inc
test
rcrb
xchg
push
mov
jae
scas
cld
sbb
shrl
je
movsl
sahf
fmuls
fdivl
in
pop
push
or
mov
jae
lds
xchg
pop
mov
inc
subl
push
xchg
outsb
lret
sti
sti
and
shll
ret
and
dec
pop
rolb
sbb
dec
pop
cmp
lcall
orl
shll
adc
aam
pop
jo
jmp
fwait
addr16
lods
adc
ficoms
ds
popa
jo
xor
dec
jbe
gs
xor
sbb
xchg
rcll
adcb
mov
data16
mov
call
or
xchg
cmpsb
pop
xlat
stc
xchg
adcl
inc
stos
push
scas
push
jns
jmp
cwtl
in
ret
sbb
inc
sub
xchg
fnstenv
sub
inc
lea
inc
mov
cmp
inc
adc
pop
mov
les
sbb
ret
sub
push
xor
cmp
dec
mov
das
imull
jg
popa
sbb
dec
or
or
fdiv
in
ja
es
add
jae
sbb
xor
out
jnp
mov
icebp
inc
xchg
mov
jno
inc
std
or
ffreep
lods
fsubrl
ret
dec
inc
test
mov
fwait
insb
ljmp
pop
xchg
ret
xor
xchg
fs
lock
mov
bound
add
call
sbb
je
ret
and
andl
push
mov
or
int3
and
push
addr16
pop
test
cmc
mov
sub
fwait
scas
xchg
imul
xchg
loope
push
cltd
lcall
xor
mov
lods
add
cmp
popa
lea
popf
repz
lcall
push
loope
xlat
in
inc
in
scas
shll
shlb
adc
jl
dec
jne
gs
xchg
mov
xor
movsl
inc
dec
mov
jb
test
mov
dec
scas
pop
jb
mov
sub
jae
push
popa
jecxz
repnz
rclb
pop
dec
sub
push
movl
xchg
push
jnp
pop
xlat
mov
ljmp
lock
xchg
je
outsl
in
mov
adc
test
xor
outsb
nop
pop
test
out
xor
and
mov
xchg
mov
movd
aam
pushf
shrl
or
ret
mov
icebp
push
add
push
inc
add
push
sub
clc
jae
popa
cmp
data16
adc
std
and
movntq
ljmp
cmp
xor
pop
push
jb
xchg
and
add
daa
insb
or
aad
mov
cmpsb
xor
xlat
fsubrl
ret
or
sbb
and
mov
add
add
dec
fs
iret
sub
or
sbb
addb
adc
gs
push
andl
out
into
adc
not
js
pop
push
call
adc
mov
mov
scas
rol
sahf
cmp
push
dec
stos
iret
clc
cs
dec
inc
mov
arpl
scas
xor
and
idivb
ss
pop
in
out
fldenv
rcrb
jo
jl
push
xchg
syscall
es
mov
es
inc
test
pop
cmp
pop
pop
pop
or
and
aaa
sub
mov
fwait
add
out
cwtl
out
scas
stc
jnp
lahf
je
push
jnp,pn
cs
lds
sub
pop
aaa
dec
push
or
xchg
cmp
cmpsl
push
out
ss
loop
mov
arpl
push
shrl
aaa
inc
push
pop
rclb
adc
inc
in
cmpsl
push
shrb
cmp
mov
jge
std
cmovbe
push
imul
cmpsb
enter
addr16
adc
fdivs
and
mov
insl
pop
jo
push
pop
ret
fcoms
aam
pop
nop
and
sbb
int
jl
fsubrs
cmpsb
and
sub
test
insl
imul
push
push
icebp
pop
xchg
shll
lret
div
xchg
call
sbb
inc
es
movsl
das
clc
add
and
mov
or
dec
push
popf
int3
sbb
repz
shrb
dec
jnp
pop
cwtl
or
pop
shlb
xchg
int3
sbb
dec
xor
jmp
icebp
addr16
jb
mov
xchg
arpl
in
fstpt
idivb
jmp
leave
popf
mov
shlb
cmp
xlat
mov
mov
aaa
xor
nop
mov
mov
lock
mov
and
inc
mov
stos
xchg
repz
cltd
dec
ret
add
fbstp
mov
add
dec
xchg
dec
dec
xor
or
add
inc
popf
and
add
cmp
cmpsb
jns
int
mov
mov
inc
nop
xlat
mov
cmc
shrb
mov
cwtl
mov
inc
sbb
xor
and
xchg
cmp
dec
cltd
pusha
jb
xchg
rclb
pop
andl
add
movsl
sub
insl
lcall
stc
leave
enter
sub
lods
fldcw
xchg
sbb
add
sbb
mov
and
xchg
push
das
sub
clc
push
flds
sub
das
aam
lea
sbb
ss
sub
push
adcl
roll
cmp
cltd
pusha
adc
push
cmp
notl
test
ja
imul
shr
cwtl
out
sbb
popa
fidivl
push
or
es
cmp
inc
xor
inc
mov
addr16
shll
ret
cmp
add
and
dec
cmp
shl
lret
sahf
inc
jno
inc
add
ds
js
vpand
fs
xchg
stc
or
mov
nop
and
sub
shrb
inc
adc
xchg
mov
adc
popf
shlb
add
inc
push
imul
sbb
or
stos
add
push
cmp
jecxz
dec
cli
adc
add
pop
cld
cmpl
shll
mov
cwtl
and
int3
xchg
sbb
adc
and
mov
jmp
cmpsl
mov
xchg
and
xchg
insb
stc
lods
jnp
aam
test
imul
enter
scas
ja
jle
adc
add
dec
orl
mov
mov
mov
aaa
and
sbbb
mov
cs
inc
loopne
xor
adc
cmp
pop
mov
fcomp
xor
or
jmp
das
int
movsl
xor
jle
xor
jo
lea
push
shrb
add
notb
cmpsl
cmpsl
mov
xor
push
notl
pop
pop
push
add
pop
rolb
or
inc
mov
inc
inc
cmp
push
push
in
mov
cmp
pop
pusha
push
fnstcw
sub
dec
movsl
push
rolb
loopne
or
xchg
adc
popf
add
lret
and
jg
insl
pop
andl
or
push
movsb
add
imul
popf
lods
pushf
inc
adc
mov
jecxz
lods
push
stos
add
fiadds
xchg
sti
out
xchg
dec
test
enter
push
push
lock
pop
test
mov
insb
cmp
ljmp
jmp
jae
movsl
aas
test
es
stos
add
int
push
and
jns
inc
dec
pop
hlt
cmp
xor
stc
mov
jae
sbb
icebp
cmpsl
inc
sbb
xchg
xor
dec
int
jns
mov
mov
test
rcll
mov
mov
inc
inc
icebp
in
mov
faddl
in
mov
aaa
adc
jno
mov
dec
sbb
mov
paddd
out
xchg
push
outsb
shlb
scas
aaa
xchg
jb
push
mov
mov
addl
pop
idivb
mov
or
test
arpl
cmp
pop
push
loop
addl
insl
mov
mov
dec
aam
filds
sbb
movsl
popa
sbb
inc
sub
cmp
mov
jnp
cmpsb
repz
add
lcall
sbb
mov
in
insb
std
shl
js
xor
movsb
add
or
mov
lods
and
dec
ds
lea
in
scas
sub
testl
daa
dec
push
insb
jecxz
sbb
inc
cmp
inc
xor
push
dec
mov
shlb
ljmp
sub
xor
loopne
jecxz
jne
call
adc
xor
sub
jecxz
in
daa
xchg
and
aad
mov
je
add
sbb
jno
inc
mov
and
and
or
adc
xor
inc
arpl
test
clc
mov
insb
arpl
add
rolb
push
sub
jb
lods
sti
adc
inc
mov
and
cmp
enter
dec
dec
decl
shrl
sahf
pop
movl
test
fs
test
enter
jl
and
cmp
dec
cmc
mov
rcl
push
mov
scas
pop
mov
mov
dec
fistpll
mov
cmp
xchg
mov
sbb
mov
cmp
lret
cmp
lods
jb
dec
testl
jnp
push
orb
and
ss
add
shll
mov
rolb
cmc
xchg
push
xor
bound
push
inc
mov
in
add
sahf
push
ret
xchg
inc
adc
and
pushf
lcall
jmp
mov
rclb
divl
adc
movsl
cmp
xchg
loope
popa
or
ret
jge
sbb
cwtl
pop
sub
fwait
lods
sub
lds
xchg
aam
dec
xor
push
pop
divb
add
mov
xlat
push
mov
pop
fmulp
into
xlat
pop
sbb
inc
add
jmp
add
cld
jne
aad
outsb
and
inc
and
jno
jnp
inc
pop
movsl
adc
mov
jge
rorl
fldenv
push
pop
jae
rclb
or
inc
pop
mov
test
aaa
lock
repz
push
mov
es
adc
inc
popa
std
pop
jne
insb
stos
in
mov
mov
loopne
pop
jne
jb
sub
add
fbstp
stc
inc
dec
mov
push
outsl
mov
fildl
gs
sbb
out
xchg
lock
mov
popl
jecxz
push
mov
std
inc
xchg
js
mov
inc
and
pop
cmp
add
or
ja
dec
popaw
mov
adc
dec
jb
les
movaps
test
xor
mov
outsb
jae
sahf
or
sub
adc
mov
jno
mov
pushf
jp
push
imul
fs
push
stos
fistpll
jo
jne
or
mov
cmp
ficomps
std
push
repz
lret
cmp
sub
fists
rol
mov
pushf
dec
popf
shlb
rorl
jmp
xchg
fwait
mov
sbb
bound
test
mov
imul
cmpl
cwtl
test
enter
xchg
fwait
inc
lds
add
daa
int
orb
add
scas
mov
pop
stc
sbb
jnp
stos
loope
sub
inc
jecxz
jne
movsb
lds
sbb
jae
or
dec
jns
int
gs
movsb
jo
mov
mov
lahf
push
push
xor
fmull
sbb
mov
lock
imul
mov
sti
inc
or
js
ljmp
dec
jecxz
shr
ret
out
cmp
mov
mov
cltd
xchg
jmp
push
jle
lcall
mov
hlt
test
pop
les
insb
push
mov
sbb
jno
icebp
add
or
xchg
ret
nop
push
lods
push
cmp
mov
stos
inc
xor
cld
into
sbb
cmpsl
mov
push
mov
out
and
rclb
loope
cltd
loopne
imul
adc
int
inc
movsb
push
jnp
dec
adc
jns
out
ds
in
daa
orl
inc
push
rcpps
and
jns
inc
jnp
inc
adc
pop
sbb
jle
sbb
push
rorl
inc
inc
gs
push
sbb
push
clc
mov
or
into
rcll
cmc
and
mull
clc
shrl
push
into
add
bound
add
or
addr16
lcall
enter
xor
jp
je
mov
cli
jne
inc
notl
xchg
sub
sub
mov
jmp
cwtl
lds
dec
cmp
or
sarl
add
mov
and
lock
pusha
mov
stos
adc
xchg
xchg
aad
mov
aad
mov
mov
loopne
push
shrl
inc
and
mov
pop
xchg
ja
push
shr
sbb
or
clc
in
add
test
popa
cmp
and
and
add
addb
add
jns
dec
sub
out
cmp
and
outsb
mov
cmpb
cwtl
push
in
push
inc
cmp
inc
shlb
dec
add
cmp
mov
cmpsb
out
bnd
jae
jnp
ret
adc
inc
cmpsb
movsb
mov
jo
loop
and
xchg
push
ret
push
adc
movsb
loope
mov
inc
adc
in
lods
mov
push
xchg
bound
jo
cs
icebp
in
aas
push
and
icebp
sbb
push
xchg
mov
repz
gs
fwait
adc
movsl
in
andb
dec
add
pop
push
ficomps
jns
push
test
and
inc
loop
add
and
and
dec
sub
lods
push
or
movsl
adcl
movsb
lret
scas
in
sbb
cltd
adc
testb
sbb
adc
and
xchg
iret
popf
imul
inc
xor
lods
dec
mov
rorb
or
push
xchg
call
pop
sbb
push
rolb
divb
pop
in
jns
add
push
je
iret
scas
addr16
adc
mov
and
or
out
pop
movsb
fidivrl
sbb
dec
dec
out
scas
adcl
ljmp
rcll
lcall
bound
inc
push
add
faddl
jo
dec
fwait
jns
dec
or
cmp
mov
aas
and
fcomps
mov
or
repz
xchg
sub
add
adc
sub
and
ss
jecxz
dec
repz
adc
loopne
or
ret
pop
aaa
pop
aad
push
pop
aad
adc
subb
int3
inc
add
adc
push
psubd
xchg
sarb
cmp
sub
clc
and
sub
ds
pop
testl
pop
push
inc
sbb
xchg
repz
cmpsb
mov
xchg
pushf
push
add
push
dec
shr
clc
lret
xchg
pop
and
dec
stos
movsb
and
ds
xchg
fisttps
or
lds
add
jle
bound
or
clc
mov
cmpxchg
loopne
pop
test
adcb
rorl
test
mov
daa
vcmppd
fldt
and
in
nop
pop
xchg
inc
mov
push
pop
jmp
in
loop
js
lds
jb
push
xchg
mov
mov
gs
push
pop
lret
popf
je
pop
pop
add
cmp
lds
adc
fstpl
jb
pusha
test
movsl
ss
inc
jns
cmc
jne
cmp
orb
hlt
cli
subb
push
enter
test
and
cmp
inc
loop
mov
daa
push
roll
sbb
ret
in
fbld
lods
shll
xchg
sub
and
icebp
aaa
ljmp
out
fs
xchg
inc
mov
movsl
into
adc
in
mov
adc
push
sbb
dec
imul
xchg
inc
lds
pop
jge
pop
das
mov
aaa
inc
loop
fmull
push
movsb
sti
div
imulb
push
cmp
and
jo
push
xchg
inc
sbb
pop
cmp
mov
pop
clc
data16
decb
fs
pop
pop
mov
ret
lcall
shlb
loopne
stos
mov
jae
in
orb
pop
test
pop
sub
adc
add
push
shlb
xchg
dec
mov
xor
and
sub
jp
cmpsb
sbbl
mov
and
pushf
cli
subl
adc
fadds
inc
iret
adc
adcb
scas
repz
aaa
loop
sub
cwtl
sbb
ja
cmp
mov
mov
test
xchg
out
test
xchg
mov
popf
in
fcoms
fcomi
lea
fbstp
test
jns
rolb
ret
cmpsb
and
das
push
dec
popa
rcrl
or
mov
bound
add
add
jb
xchg
mov
enter
stc
inc
add
mov
je
dec
inc
into
call
mov
lret
inc
dec
out
pushf
insb
or
scas
fcmovbe
mov
mov
daa
scas
movsl
in
sbb
call
jmp
xor
ljmp
ret
pop
adcb
jo
mov
pop
in
push
repnz
add
popa
pop
jo
lret
shll
cmp
xor
sbb
mov
call
xchg
icebp
aas
popa
or
cltd
movsl
push
xorb
in
movsb
mov
ret
into
sub
fsubrs
aaa
shll
adcb
rcrb
adc
mov
fwait
xchg
mov
jecxz
out
stos
fcoms
cmpxchg
pop
sbb
xchg
inc
lock
mov
add
mov
push
add
inc
push
pop
ret
push
jo
popa
mov
ja
pop
mov
bound
imull
cmp
dec
ljmp
adc
jg
adc
pop
dec
cld
icebp
cmp
dec
push
add
cltd
movsl
mov
xor
out
jg
or
cld
dec
mov
shlb
cwtl
call
xchg
and
and
sbb
shll
pop
loopne
inc
clc
test
lahf
int
pop
rolb
fndisi(8087
out
add
aad
and
lods
dec
lods
push
sub
in
add
ret
push
insb
fdiv
in
scas
mov
sub
or
aam
sub
pusha
subb
mov
jge
insl
ds
sbb
xlat
inc
nop
aad
adc
lahf
outsl
pop
outsl
xchg
cld
add
push
inc
sub
sub
jns
inc
pop
out
mov
jns
adc
mov
xor
imull
dec
test
adc
movsb
arpl
test
lock
je
aad
cmc
cld
push
mov
xchg
dec
xor
sub
ds
jp
jmp
mov
mov
pushf
or
push
test
mov
enter
pop
iret
jb
pop
xor
lock
and
nop
addl
inc
xchg
xlat
popf
xor
inc
stos
inc
jp
jno
loop
adcl
mov
sub
sub
jno
idivl
outsl
dec
out
aad
sub
mov
adcl
les
jns
es
sub
pop
clc
scas
mov
cmp
out
enter
ja
daa
pop
mov
faddl
arpl
sbb
mov
or
push
cltd
push
sub
push
lahf
pop
rcrb
fdivrl
fcomp
stc
shll
inc
sahf
sti
and
aas
insb
jnp
xor
pop
xchg
lods
aaa
xor
add
pop
shlb
pop
popf
fcoml
lret
mov
sub
xchg
push
mov
int
pop
xor
stc
orl
in
stc
mov
stc
dec
xchg
dec
pop
cmpsl
mov
jno
push
insb
rcl
xchg
sub
mov
adc
arpl
and
ret
out
pop
mov
and
fwait
clc
cld
dec
xor
cmpsl
insb
imul
loop
jb
insl
scas
mov
dec
push
fcom
insl
out
inc
inc
daa
les
out
lock
add
cmp
lods
or
pop
jg
xor
mov
clc
mov
jbe
aaa
sbb
stc
push
imul
xor
aaa
push
andb
lret
repz
int
xchg
in
jo
lahf
and
push
xor
fisubrs
push
mov
pop
cmpsl
mov
lcall
das
ret
dec
enter
mov
repnz
fucom
mov
lahf
xchg
lods
loop
mov
xchg
and
inc
xchg
outsl
dec
jb
maxps
and
pop
pop
adc
mov
xor
inc
add
loop
sub
andb
int3
push
movsl
cmp
jne
enter
and
xlat
sti
inc
lcall
xchg
pop
fdivrp
push
popa
xor
or
sbb
pop
daa
jge
pop
mov
mov
dec
addr16
loope
ret
jmp
cmp
add
mov
clc
xor
add
dec
xchg
sub
jo
lret
cli
dec
push
test
adc
and
adc
in
lock
mov
mov
add
roll
jne
test
addr16
xor
in
adc
test
mov
aaa
lods
push
popf
push
inc
or
call
jbe
adc
push
inc
push
and
andl
sahf
adc
stc
arpl
adc
dec
push
cmp
ret
or
arpl
fdivl
push
inc
dec
push
sbb
xor
rorb
or
pop
mov
rorb
inc
adc
les
shrb
mov
xchg
ds
mov
gs
pusha
in
inc
out
bswap
dec
push
mov
dec
jne
jnp
lcall
sbb
pop
add
mov
loopne
std
in
sarl
push
pusha
sbb
push
dec
test
rcrl
jnp
stos
push
inc
xchg
stos
jns
mov
movsb
in
in
notl
loop
popa
and
sub
out
out
pop
incb
pop
jb
sahf
mov
xchg
inc
push
pop
shlb
xchg
ret
pop
sbb
sub
mov
and
ret
addr16
push
fcmovne
inc
int
push
cld
push
filds
jmp
sub
cmp
xor
out
push
add
xchg
jecxz
test
cmpsl
je
xchg
cmp
xchg
mov
adc
addr16
adc
pusha
cmc
jl
je
out
ds
lock
push
inc
icebp
cmpsl
stc
mov
loop
sub
adc
dec
ret
and
jp
jb
cmpsb
dec
push
mov
cmc
pop
icebp
push
jo
hlt
je
subl
adcb
icebp
cmpsb
dec
icebp
fisttps
inc
gs
in
test
jmp
sahf
cmp
test
jp
cmpsl
scas
and
lds
out
andb
cmc
mov
or
mov
mov
stc
adc
stos
js
sarb
ficompl
add
gs
push
jae
push
loop
lret
popf
mov
mull
rcl
and
xchg
push
jnp
or
fwait
or
out
mov
or
dec
inc
inc
in
loope
mov
jmp
bound
xchg
push
push
shll
out
fwait
hlt
inc
add
pop
cli
das
push
xchg
stos
cs
sbb
roll
icebp
notb
aad
xchg
pop
dec
add
addr16
jmp
int3
or
cld
test
push
lahf
cmc
sbb
aam
mov
pop
add
push
xor
adc
pop
lahf
loope
jne
mov
mov
add
mov
dec
mov
mov
jbe
xlat
add
je
aaa
adc
in
bound
inc
xlat
mov
sbb
bound
test
fbstp
or
mov
push
and
into
fiadds
mov
and
add
jo
shll
jb
and
jmp
lock
bound
pop
mov
rcll
push
xchg
dec
mov
xor
shll
add
nop
es
adc
rcl
daa
sbb
fnstenv
pop
mov
stos
sbbb
test
add
scas
xchg
jb
loope
sub
push
arpl
pop
add
out
arpl
cmp
addl
ss
dec
cmp
and
add
loopne
int
addl
addb
ret
ds
mov
push
test
xor
dec
push
adc
and
loopew
aam
sbb
shrl
dec
push
jg
mov
mov
inc
pusha
mov
dec
sub
pop
cmp
lds
inc
xor
mov
push
mov
movsb
or
and
or
movsb
mov
fs
sbbb
lods
add
mov
sub
js
xlat
push
roll
mov
adc
fwait
dec
aaa
mov
add
sbbb
adc
dec
fsts
out
adc
or
scas
outsl
xor
lret
out
out
jae
or
rcrl
and
pop
cmc
jnp
test
add
pop
lcall
cmc
dec
rorl
jno
pop
jb
bound
mov
or
and
push
adc
pop
sub
dec
cmp
shrb
sbb
roll
jp
xor
mov
push
mov
inc
sub
movsl
hlt
ficoms
inc
mov
xchg
test
std
push
push
sub
jne
add
jl
xchg
imul
loopne
sbbb
or
outsb
out
scas
dec
int
movsl
fnop
aam
cmp
jmp
mov
outsb
jb
es
out
jmp
jnp
push
jmp
xor
addr16
mov
mov
lods
fs
ret
in
inc
jl
movsl
loop
fwait
lea
pop
jle
adc
adc
mov
testb
clc
push
push
inc
cmpsb
inc
icebp
dec
popa
out
or
adc
rcrl
and
andl
mov
in
and
add
push
push
mov
enter
fcmovb
mov
push
inc
test
int
in
sub
add
mov
lret
inc
dec
and
dec
test
sti
scas
xchg
loopne
jns
mov
xor
mov
adc
mov
mul
popa
test
jmp
insl
xlat
les
mov
sbb
arpl
ja
cmpsb
adc
dec
or
cmp
repnz
ds
jmp
shll
rolb
xor
loop
sub
dec
sahf
inc
leave
lock
add
inc
mov
and
jno
and
hlt
add
rclb
and
or
fs
loope
inc
xor
add
inc
jne
int
std
shlb
jae
mov
mov
xchg
and
xchg
fidivl
add
mov
xchg
mov
bound
push
and
je
and
cwtl
fldenv
add
movsl
inc
loopne
xchg
xchg
adc
mov
adc
push
push
xchg
add
call
rolb
xchg
test
pusha
repz
and
icebp
insb
das
adc
and
repz
jge
mov
and
sbb
pop
pushf
mov
jb
lock
lds
cwtl
inc
and
aaa
adc
or
inc
les
rep
adc
xchg
xor
xor
and
rorb
hlt
add
bound
and
inc
rcll
and
xor
popa
and
loope
cltd
and
add
and
icebp
push
dec
inc
and
xchg
push
pusha
xor
push
in
inc
xchg
xor
lock
rcll
daa
inc
es
addb
xchg
lock
jb
or
adc
inc
pop
repz
add
rorb
es
add
xchg
call
out
arpl
das
xor
sahf
sbb
rcrb
shll
push
mov
outsb
push
inc
add
sbb
xchg
jno
push
xor
pusha
sbb
leave
fsubs
aam
push
lock
push
or
xchg
sbb
pusha
rclb
xchg
or
popf
cltd
fidivl
adc
push
loop
xchg
es
or
sbb
and
xchg
sub
cmova
jb
inc
and
or
mov
inc
test
sbb
movsl
cltd
inc
and
sbb
jbe
or
in
shlb
sahf
popa
rcrb
xor
fs
sub
push
xchg
adc
and
adc
aam
addl
pushf
loopne
add
cmp
nop
cltd
rorb
xchg
inc
repnz
or
mov
loope
nop
jb
and
cltd
fnstcw
hlt
sbb
pop
dec
es
xchg
adc
and
lock
roll
inc
and
lock
and
and
std
shlb
and
add
test
sbb
or
and
push
popa
andl
jge
adcl
jae
and
xor
and
xchg
or
inc
mov
out
inc
in
xchg
inc
rclb
sbb
lea
add
push
rolb
repnz
push
aas
pushf
shrl
inc
rolb
xchg
ret
and
js
bound
push
add
adc
add
test
cmp
or
sbbb
loope
inc
sbb
arpl
lods
inc
aam
nopl
inc
mov
jp
fldl
mov
push
and
aam
jmp
or
pop
ret
xor
and
popa
repz
inc
jecxz
and
fadd
test
mov
call
inc
jne
sub
push
inc
add
ss
inc
mov
cld
andb
inc
and
push
mov
addr16
adc
push
and
inc
xchg
inc
cwtl
repz
arpl
inc
pop
ret
add
inc
sbb
movsb
sbb
jae
mov
and
xchg
ror
es
jae
xchg
sarb
inc
adc
adc
and
inc
push
fdivs
mov
xchg
jno
out
push
add
test
push
sub
inc
inc
inc
cmc
nop
test
sti
bound
xor
and
xchg
xchg
je
adc
xor
popf
enter
and
mov
loop
inc
pop
test
inc
mov
in
xchg
enter
push
xlat
add
cwtl
jb
ja
sub
or
in
rcl
xchg
mov
or
inc
push
popa
test
cwtl
xor
and
inc
inc
cmc
xchg
test
jp
loop
xchg
cs
movsl
sbb
jmp
dec
xor
data16
sub
stc
leave
gs
aam
orl
clc
mov
sub
js
dec
sub
push
and
pop
sub
loop
cwtl
sub
or
movsl
sbb
jmp
data16
sub
imul
imul
xchg
or
jb
call
pop
dec
add
sbb
adc
dec
test
mov
dec
mov
cmc
push
fs
dec
sub
sti
dec
mov
sub
or
mov
test
lea
call
pop
dec
add
sbb
adc
dec
test
mov
dec
mov
cmc
sbb
push
stc
dec
mov
or
or
fwait
or
movsl
sbb
ljmp
sbb
lahf
adc
dec
stc
lret
aam
orl
sti
mov
sub
jnp
dec
sub
push
and
pop
cs
jae
loop
cwtl
sub
dec
repnz
movsl
sbb
call
data16
sub
stc
enter
push
stc
mov
sub
jns
dec
sub
push
sbb
fstps
cmp
pop
adc
fwait
pusha
repnz
xchg
sub
sub
jp
jnp
sub
xor
and
lcall
aad
test
mov
fs
adc
adc
dec
lcall
sahf
jmp
shlb
mov
lock
cmpsb
cltd
or
lea
dec
gs
pusha
std
loopne
or
or
pop
xchg
pushf
rcr
sub
or
mov
or
inc
sbb
and
mov
in
mov
lods
jnp
sub
and
and
pop
loope
sbb
pop
loopne
dec
xchg
lcall
movsl
sbb
jmp
dec
xor
data16
sub
stc
leave
gs
aam
orl
clc
mov
sub
js
dec
sub
push
sbb
dec
cwtl
cmp
std
add
mov
orl
sub
push
or
mov
pop
sub
adc
sbb
fxch
sbbl
sub
cli
pushf
mov
sub
and
sub
sub
add
jns
in
xchg
mov
pop
mov
scas
dec
rorb
sbb
jmp
dec
adc
inc
sbb
sahf
repnz
mov
mov
pushf
mov
sub
and
sub
sub
add
jns
in
xchg
mov
pop
mov
lods
dec
rorb
sbb
jmp
inc
sbb
pushf
repnz
push
and
sub
sub
push
or
xor
das
fwait
or
dec
inc
dec
cmc
sbb
dec
mov
ljmp
dec
lret
and
push
dec
sub
or
mov
out
xchg
js
cltd
stc
sub
push
or
lea
pop
sub
dec
inc
dec
cmc
sbb
dec
mov
call
adc
xor
dec
sbb
or
mov
mov
mov
or
dec
xor
mov
ljmp
add
add
fdiv
mov
push
pop
push
inc
aad
mov
mov
in
xchg
push
imul
sub
push
adc
jae
es
in
xchg
lods
stc
fbld
push
xchg
aam
mov
jge
push
sbb
loop
rcrl
push
imul
push
jns
lock
arpl
sysret
mov
mov
cmpsb
jmp
sub
adc
aaa
fs
lret
int3
xchg
mov
add
rorb
inc
dec
shlb
aad
sub
das
xchg
push
or
xor
lret
lea
xor
jecxz
mov
dec
aaa
fisttps
ss
inc
mov
and
push
call
inc
pop
in
das
gs
mov
inc
andb
inc
mov
int
test
loop
xor
das
hlt
test
jno
aam
pushf
cmpsl
and
dec
sbb
jne
mov
add
push
xor
les
push
dec
xor
and
pop
cld
mov
mov
shlb
test
jb
fs
jnp
cmp
out
je
fwait
add
je
mov
iret
jae
call
out
mov
pusha
call
dec
or
jns
mov
bound
in
div
xchg
pusha
push
adcl
or
lea
add
mov
dec
popa
mov
cwtl
sub
or
dec
shll
and
sbbb
shlb
xchg
push
popf
xor
push
sbb
xbegin
pushf
lock
mov
dec
xchg
xor
addr16
cmp
loop
xchg
cmp
ss
pop
push
sub
jmp
fwait
subb
shrl
jne
mov
div
in
and
nop
add
xlat
sub
int
cmc
pop
mov
sbb
inc
int
test
mov
and
sub
leave
pop
lds
mov
jecxz
jl
inc
add
xchg
leave
sub
pusha
lock
lds
mov
subb
ret
test
repnz
pop
gs
dec
js
push
pop
pusha
test
and
insb
xor
mov
rorb
insb
jmp
lods
add
sahf
adc
jecxz
lods
inc
sti
adcb
inc
rcll
ret
sub
xchg
mov
lods
jo
jo
inc
outsb
rolb
xchg
pop
loopne
jmp
cmp
aam
xchg
push
or
or
adc
jl
dec
add
out
adc
mov
inc
les
pop
add
or
or
in
push
int3
addb
aad
push
in
push
int3
xor
and
mov
loop
xchg
dec
inc
test
add
pop
fbld
xchg
and
mov
pop
mov
call
popa
sbb
cli
ja
and
jnp
mov
add
repz
imul
sti
dec
mov
ret
mov
and
cmp
mov
xorb
pop
je
and
aaa
int
adc
cmp
movsl
sub
jl
popf
mov
or
mov
in
fldenv
jecxz
js
xchg
arpl
jecxz
out
movsl
jp
fdivrl
adc
repz
sbb
into
jmp
jge
pop
adcb
jg
dec
loope
rorb
not
push
es
arpl
sarb
cmp
mov
in
sahf
jb
dec
cmp
or
mov
sbb
and
push
and
cltd
stc
dec
xchg
outsb
cmp
in
fcmovne
sub
cmp
and
sbbl
cwtl
mov
cmpsb
loope
insl
inc
fisttpl
and
inc
jl
cmpsb
pop
aad
cmpsb
xchg
push
lret
imul
push
add
inc
sahf
cmc
xor
ret
cmp
inc
arpl
inc
add
mov
xchg
inc
lahf
aam
sahf
and
mov
push
in
mov
inc
cld
xor
lods
mov
xor
ja
sub
js
sbb
js
pop
fdivrl
or
cmpsl
mov
int3
cmpsl
mov
int3
mov
test
xchg
int3
insb
or
jl
mov
int3
mov
fs
in
inc
or
fs
movsl
push
popf
inc
js
into
lods
mov
out
sbb
sub
mov
fdivrs
imul
fstpl
mull
pushf
imul
cmp
lods
adc
shrl
pop
adc
xor
aaa
dec
imul
xchg
inc
enter
add
aad
imul
mov
addr16
adc
cltd
test
fsubrl
pushf
dec
lds
mov
pop
cltd
xchg
scas
ss
bound
cmp
xlat
adc
mov
arpl
adc
pop
cwtl
mov
movsb
movsl
xchg
iret
add
inc
arpl
push
mov
xchg
sbb
ret
test
sbb
adc
filds
push
pop
movsb
in
popa
inc
push
mov
pop
call
jmp
stos
fisttpl
inc
cmc
es
or
or
xlat
adc
add
ficoml
jb
lods
adcb
sub
inc
sub
sub
inc
fs
outsl
in
cmpsl
mov
hlt
aas
rorl
mov
rclb
xchg
pop
dec
hlt
cltd
or
inc
cmp
imul
rcrb
dec
popa
dec
and
stos
and
imul
xor
loop
sbb
inc
push
std
jno
rorb
dec
call
and
test
and
jns
or
adc
inc
std
xchg
cmc
leave
inc
bound
mov
daa
dec
dec
stos
loopne
sbb
xchg
add
test
inc
fucomp
and
and
add
adc
jecxz
add
and
mov
iret
test
sub
xchg
ret
inc
and
inc
xlat
dec
and
or
mov
or
add
xchg
add
inc
leave
enter
mov
int3
lea
int
mov
test
bound
bound
dec
andb
dec
add
pop
jmp
adc
inc
add
popa
add
push
int
ret
sbb
in
adc
fsubs
addb
jecxz
mov
add
jmp
xchg
imul
test
dec
jle
cld
int3
loopne
mov
or
dec
ret
mov
jmp
orl
outsb
lds
pusha
jb
xchg
and
sub
sub
adc
inc
inc
in
out
xchg
dec
dec
int
sbb
popa
adc
shrl
rorb
cmc
and
dec
loop
add
inc
and
into
dec
xor
dec
es
add
mov
sub
std
int3
mov
dec
add
lcall
and
lods
jecxz
and
and
sbb
enter
jns
push
dec
fs
gs
xchg
bound
inc
mov
lds
subb
mov
sub
les
mov
sub
or
in
call
lea
test
clc
test
push
lcall
xchg
sub
enter
popa
iret
pop
lahf
sahf
pusha
jb
mov
sub
sub
popa
and
and
and
dec
es
scas
jae
xchg
push
add
inc
or
test
pop
or
or
mov
and
imul
xchg
or
cli
sahf
add
ret
enter
sahf
add
inc
addb
daa
test
inc
gs
js
inc
or
cwtl
sbbb
scas
or
or
adc
rcll
lock
pusha
and
and
jnp
leave
std
les
push
test
or
sub
movsl
adc
repnz
add
inc
in
jl
test
in
pushf
mov
push
and
adc
jecxz
pop
pusha
loop
xchg
das
adc
dec
dec
int3
add
dec
daa
and
dec
test
and
jb
rolb
loope
movsb
mov
sub
loop
dec
inc
imul
or
mov
pop
lcall
loopne
lret
shl
xchg
bound
xchg
sub
fldl2t
movsb
push
arpl
or
loopne
dec
fwait
inc
imul
sbbb
mov
adcl
push
xorb
sbb
xchg
repnz
or
les
aam
xchg
mov
add
test
popa
xchg
xor
arpl
xchg
push
push
and
inc
divb
sarl
fs
dec
sbb
cli
lods
inc
fbld
adc
lods
lahf
xchg
ss
es
push
lock
in
divb
push
xor
jb
rcrb
ss
sbb
testl
xor
mov
and
notl
negl
pop
shrb
jle
inc
inc
xchg
idivl
adc
jne
cmpsb
inc
pop
rcl
xor
push
dec
shlb
add
lcall
push
xor
jne,pn
hlt
sbb
cmp
arpl
scas
push
das
cmc
ljmp
ds
inc
mov
inc
lods
test
push
jecxz
xlat
jle
and
xchg
stos
or
xor
cmp
mov
in
int
cltd
add
js
hlt
and
mov
and
rorb
add
xchg
leave
xchg
rorl
orl
pop
push
inc
and
cmp
pop
mov
test
inc
sub
notl
push
adc
adc
loop
adc
jnp
push
mov
imul
cmpsb
mov
pushf
and
add
loope
and
daa
inc
sub
dec
pop
cli
addr16
sti
dec
inc
in
mov
push
or
adc
aaa
push
filds
inc
dec
sbb
sub
popa
cmp
stc
call
packuswb
inc
push
or
pop
aad
push
dec
addr16
and
pop
pusha
jbe
test
jmp
mov
test
pop
xlat
or
cmc
aam
mov
fldl
negl
lret
dec
xchg
adc
out
and
fsts
xchg
and
icebp
inc
loopne
cmpsl
cli
or
ja
out
xchg
push
out
or
add
mov
jne
add
inc
ja
and
cmpsl
in
adc
push
shlb
mov
adc
adc
out
cltd
addr16
push
inc
sbbl
inc
out
clc
xchg
out
push
push
dec
data16
dec
and
xor
add
push
sbb
outsl
movsb
inc
sub
pop
sbb
sahf
inc
ss
inc
pop
cmp
sub
xor
dec
cmp
icebp
cmp
mov
inc
mov
xor
daa
and
aam
lret
push
xchg
or
and
xchg
and
lds
mov
jb
xchg
sub
or
sub
mov
pop
aad
add
out
in
je
daa
pop
daa
mov
loope
xchg
jecxz
xchg
cmp
ror
pop
sbb
cltd
leave
or
cmp
pushf
cmpsl
sub
pop
and
xchg
out
mov
bound
dec
and
iret
daa
popf
mov
cs
inc
lea
inc
xor
xchg
daa
in
push
mov
mov
sub
pop
push
das
arpl
sub
aad
lret
mov
or
in
addr16
ret
movsl
addr16
push
xchg
inc
addr16
cmp
dec
jbe
push
mov
xchg
or
imul
in
inc
xor
push
cmc
out
mov
push
enter
mov
ret
je
mov
mov
mov
cmpsb
fldenv
ss
es
in
in
lock
addr16
ret
outsb
mov
xor
lea
push
sub
out
inc
xor
in
cmp
fs
popf
sbbl
fbld
es
inc
inc
mov
dec
mov
test
push
lret
in
outsb
cmp
pop
movsb
push
cwtl
pop
push
pop
in
and
sti
pop
cmc
fildl
jae
out
sub
test
les
andb
std
push
push
sbb
in
in
sub
and
or
shrb
xchg
inc
and
ljmp
popa
sbb
xchg
inc
add
add
inc
cmc
xchg
pop
jb
xchg
mov
lret
adc
mov
cmpsl
mov
push
cmc
add
ret
ljmp
mov
fcmovnb
repnz
dec
mov
in
mov
fimuls
int
adc
lock
and
movsl
fwait
inc
daa
and
and
add
mov
jnp
mov
xchg
clc
lea
inc
mov
and
es
cs
mov
lds
out
jne
imul
inc
syscall
sarb
xchg
repz
pop
inc
dec
push
or
pop
add
cmpsb
cmovbe
popf
lods
push
jb
mov
and
push
cmpsb
es
jl
les
xor
push
shl
mov
test
in
xor
test
rorb
cmc
popa
cmp
negl
fstps
ljmp
fcoml
subb
movb
cltd
addr16
sahf
xor
mov
test
and
lods
rorb
cmpsl
cmpsb
jbe
mov
xchg
dec
cmp
and
mov
xor
adc
jge
xchg
ficompl
movsl
push
push
or
test
inc
or
mov
data16
push
add
test
out
push
mov
mov
add
cmpsb
stos
xor
xchg
repz
adc
leave
in
or
and
loopne
jmp
scas
inc
jb
ss
icebp
xor
cmp
stc
lret
and
pusha
ss
xchg
and
rorb
add
push
jl
lret
push
push
in
cmp
xchg
ficomps
lods
mov
call
lock
add
cmpsb
movl
or
stc
jle
imul
sub
lret
push
out
ror
and
int
ja
dec
and
movsb
enter
shrb
dec
stos
xchg
or
leave
das
push
rol
aad
xor
loop
mov
inc
gs
lcall
push
pusha
inc
lret
int3
cmc
jmp
and
jnp
xchg
mov
xor
cmc
lds
aad
jnp
or
xor
rolb
mov
jecxz
pop
jecxz
les
pop
arpl
addl
and
jecxz
or
pop
stos
inc
repz
mov
xchg
aam
add
mov
sub
xor
test
inc
lret
push
inc
add
pushf
int
mov
in
add
pusha
addr16
lods
dec
push
das
jae
cmp
jl
subb
sub
mov
call
cmpsl
gs
jo
jo
arpl
jne
dec
insb
dec
inc
popa
push
and
mov
fldenv
dec
inc
inc
test
imul
xchg
or
stc
fnsave
stos
rcrl
aaa
mov
inc
data16
adc
or
jbe
adc
inc
arpl
movsb
mov
sahf
je
and
or
cld
mov
mov
stc
jp
adcb
jbe
test
ja
inc
sub
or
int3
cltd
pop
roll
and
pop
and
test
aam
push
mulb
icebp
out
out
sbb
jb
aad
jae
and
lods
test
jae
push
inc
clc
xchg
in
mov
cwtl
pop
push
daa
rorb
cmp
sbb
loope
adc
nop
cmpsb
daa
arpl
and
iret
or
adc
mov
outsb
insb
mov
imul
shlb
inc
movsl
dec
data16
loope
stc
or
or
das
cli
stos
addr16
orl
jg
and
and
jns
and
or
dec
lret
loope
test
or
jge
mov
inc
dec
in
push
and
lods
mov
mov
mov
cmp
cmp
dec
adc
jae
jmp
loop
xchg
adc
jb
and
ret
out
sub
sub
test
dec
arpl
push
outsb
adc
je
dec
pusha
ret
xor
mov
sub
lds
xor
mov
inc
es
xchg
popaw
or
or
out
pop
push
ret
jo
ds
mov
pop
out
stos
in
push
mov
jbe
lret
notl
sbbb
ja
das
cmp
popa
lds
push
in
lods
xor
out
xchg
mov
loop
sar
in
xchg
es
sarb
push
popf
inc
in
fmull
push
call
adc
push
aam
mov
adc
inc
out
dec
xchg
cmp
incb
xchg
inc
rolb
jae
xchg
inc
dec
jp
push
lods
imul
cltd
pop
inc
bound
adc
xchg
adc
mov
leave
add
shll
cs
xor
push
push
push
jecxz
testb
into
in
mov
mov
jnp
cmp
mov
les
dec
dec
xchg
or
mov
sbbl
shll
or
mov
mov
and
pop
adc
xchg
or
add
and
and
das
ljmp
mov
inc
adc
dec
push
inc
and
add
es
pop
adc
or
lds
imul
mov
pop
test
bound
push
xor
gs
and
jns
addr16
jnp
lea
mov
mov
lods
lods
cmc
add
cmp
cmp
add
out
cld
hlt
xor
adc
aad
xor
aad
xor
gs
sbb
ret
xchg
cmp
insb
add
dec
dec
or
cmc
xor
pop
out
sub
js
xor
add
mov
adc
pop
cmp
xchg
daa
jmp
push
fwait
cli
push
mov
pop
pop
adc
mov
aad
mov
aad
adc
cmp
lret
adc
es
ret
pop
ret
or
mov
pop
test
pop
or
rcrb
neg
sub
xor
xchg
sbb
adc
mov
sarb
and
andb
xchg
adc
dec
inc
add
inc
sub
xchg
sti
xchg
divb
xchg
add
dec
data16
test
add
je
inc
push
push
mov
mov
add
sbb
xchg
fsubp
add
add
shlb
fs
mov
daa
jg
push
push
sbb
mov
addr16
inc
pop
push
cld
inc
shll
kmovb
or
add
xchg
movsb
lods
push
mov
movsl
cmpsl
cmp
mov
add
xchg
fadds
aas
push
sbb
sub
cmpsl
push
adc
add
int
xchg
push
mov
es
fadd
movsl
push
leave
subl
stos
int
and
out
dec
pop
out
dec
pop
addr16
ss
insb
add
inc
jne
push
inc
fcomip
inc
cmp
or
gs
jmp
xchg
fs
jmp
pusha
cmp
cld
gs
mov
jno
adc
mov
shll
push
loop
loopne
cmpxchg
lds
inc
dec
and
xchg
movsb
dec
jl
inc
inc
push
mov
test
sbb
push
ret
mov
add
inc
xlat
lds
and
push
lea
mov
inc
inc
fxch
cmp
ret
outsb
xor
fs
xchg
insb
inc
add
mov
inc
pop
jbe
fdivl
mov
dec
test
push
test
leave
mov
xchg
sbb
icebp
mov
xor
cld
in
xchg
sbb
adc
inc
push
and
les
jne
inc
les
mov
popw
dec
mov
push
jmp
sub
cmpsb
rcl
ljmp
sub
dec
fs
sbb
out
fcomps
enter
insb
mov
popf
leave
les
scas
js
scas
pop
adc
inc
gs
imul
call
xchg
xor
mov
or
sub
sub
xchg
cmc
shr
cmpsl
pop
inc
loop
aam
inc
mov
xchg
jmp
stos
inc
inc
jno
or
fsubl
cmp
hlt
loopne
add
inc
inc
mov
xchg
lahf
mov
add
push
adc
mov
inc
notb
aam
push
xchg
mov
push
xor
subb
mov
and
and
pop
and
int3
pop
ljmp
pop
sbb
icebp
hlt
mov
mov
repnz
cmp
lcall
in
fiadds
or
sahf
add
add
movsb
jno
sahf
movsl
mov
adc
pop
push
or
xor
shll
or
rorl
out
and
aas
pop
roll
mov
adc
in
jmp
sbb
jmp
in
or
pusha
mov
adc
rolb
icebp
mov
mov
dec
xchg
les
add
inc
xchg
inc
xor
lea
push
aas
repz
xorl
add
lods
daa
mov
div
sub
adc
lret
mov
mov
lds
call
insb
cmp
sbb
mov
je
and
adc
repnz
mov
js
movsl
xchg
cmove
pop
jo
scas
adc
scas
push
js
jle
ret
or
shll
movsl
test
insb
fstps
or
les
repz
add
pop
fs
faddl
inc
in
add
push
sti
daa
loopne
mov
and
enter
stos
cmc
add
or
push
sub
andl
adc
xor
inc
pop
nop
push
push
mov
out
inc
shrl
fnsave
lcall
shll
inc
bound
mov
add
add
dec
icebp
or
lret
pusha
lock
sub
std
repz
nop
jne
and
jge
mov
rcll
xchg
add
inc
gs
cmp
mov
adc
add
add
pop
push
loopne
xor
cmc
pop
pop
dec
aam
xlat
mov
add
mov
mov
popa
addr16
sarb
inc
mov
dec
out
lock
int
inc
add
fs
jne
dec
insl
out
add
daa
bound
jmp
jns
mov
push
pop
add
mov
scas
in
cmpsl
mov
test
repnz
mov
inc
hlt
inc
inc
adc
xchg
xor
paddsb
adcl
mov
cmpsb
add
inc
and
adc
inc
imul
ds
cmp
xor
sub
push
cmp
lods
stos
push
xchg
cmp
mov
mov
sbb
jle
bound
push
cmp
cmp
cmpsl
dec
sub
cs
dec
int3
jne
dec
dec
aad
mov
dec
sbb
rorl
movsl
out
xrelease
sub
dec
fs
aam
jle
lcall
std
lds
inc
into
xor
inc
inc
add
push
mov
scas
jle
iret
jo
out
in
or
mov
mov
cmp
xor
xchg
mov
push
adc
ror
dec
add
out
adc
push
xor
mov
shll
shlb
or
dec
addb
push
rolb
mov
dec
pusha
mov
jo
inc
mov
cmp
insl
in
in
add
dec
mov
dec
mov
mov
mov
sbb
cmp
ret
movsb
inc
pop
pusha
rclb
loope
insb
pop
outsl
jo
push
ja
hlt
pushf
jne
adc
add
dec
es
dec
push
sbb
push
shl
icebp
add
sub
iret
mov
xchg
outsl
roll
jle
add
and
pop
mov
xchg
in
pop
pusha
bnd
dec
inc
jb
adc
shll
add
hlt
and
lock
inc
and
jne
add
dec
gs
mov
xchg
pop
gs
push
in
push
adc
pop
xor
ret
rcl
mov
xor
mov
lret
out
stc
outsl
movsl
xor
and
xchg
mov
in
icebp
xlat
xor
adc
pop
fs
dec
data16
inc
jnp
stos
shlb
and
sbb
sbb
int
xchg
jle
and
lock
sub
mov
fsub
cmp
mov
lock
jl
xchg
mov
test
aad
mov
cmp
mov
fs
jnp
shlb
xchg
mov
sahf
adc
and
adc
mov
inc
mov
jo
and
adc
lock
emms
cmp
sbb
lds
aad
sbb
sbb
sbb
ret
pop
sbbl
stc
and
aam
pop
ljmp
shr
push
pop
ret
pushw
and
pop
and
jle
fcomi
subl
jmp
mov
lcall
adcb
mov
push
sbb
subb
mov
sub
sub
insl
sbb
mov
pop
stos
repz
fistps
call
mov
mov
mov
jb
push
xor
fsubrp
xor
cli
xchg
mov
loopne
bnd
out
lahf
push
inc
sbb
dec
in
inc
imul
sub
addl
lods
cmpsl
dec
imul
inc
daa
arpl
lret
push
lea
add
fisttps
rcll
push
mov
mov
or
cmp
jbe
adc
inc
inc
test
js
scas
sub
repnz
jb
push
ljmp
test
and
jo
pusha
aas
add
sub
jb
sub
icebp
mov
jl,pt
daa
test
lods
loopne
push
shrl
push
ja
jmp
sahf
test
mov
hlt
pop
scas
jbe
ja
arpl
in
sbb
popf
and
push
cmpsb
adc
add
or
negb
sbb
add
adc
mov
data16
dec
cld
sub
push
xchg
repz
push
fimuls
adc
out
and
xlat
in
out
mov
iret
mov
mov
in
shlb
arpl
test
dec
lret
das
fistps
shll
std
lahf
adc
and
or
pop
in
in
mov
or
mov
imul
push
jno
adc
loop
lea
mov
adc
insl
mov
add
test
or
cmp
test
dec
push
mov
cmp
inc
sahf
and
pusha
pop
sbb
or
mov
adc
sub
sub
add
stos
lods
outsl
sbb
iret
add
ret
xorb
or
add
lds
add
les
add
push
insl
or
dec
pop
lods
mov
push
daa
xchg
mov
or
jecxz
ljmp
lcall
pop
jmp
and
daa
fmuls
stos
pop
add
je
mov
nop
add
pop
int
mov
jecxz
movsl
scas
xorb
jo
call
jno
pop
add
dec
sub
pop
repz
jge
adc
stos
test
in
stos
push
jns
or
mov
push
sub
cmp
lret
cltd
lods
pusha
adc
jb
sbbb
cltd
ljmp
fneni(8087
push
lahf
inc
pop
lret
leave
imul
and
js
imul
std
jo
inc
add
jno
pop
shr
jne
and
inc
mov
aam
aad
cmp
scas
mov
add
faddl
add
in
inc
and
sub
and
out
sti
push
mov
or
pop
fsubrs
insb
cmp
test
xchg
cmp
xor
inc
mov
icebp
jmp
aas
mov
add
xor
out
push
or
scas
call
lock
scas
and
fidivrs
jp
jp
movl
mov
in
insl
out
xor
popf
add
push
inc
sbb
jo
scas
into
inc
jecxz
add
enter
jmp
enter
lea
jge
or
push
sbb
outsl
or
bound
jg
hlt
jge
out
and
inc
or
std
shl
cmpsl
inc
je
jle
xchg
mov
pop
adc
sub
mov
insb
mov
shll
or
or
out
mov
jno
rolb
push
sub
dec
push
movsl
or
or
js
fs
bound
pop
loopne
jmp
jnp
lods
push
pusha
cltd
jg
jae
xor
je
dec
adc
in
mov
fsubr
js
js
push
cmp
or
pop
jmp
lahf
pop
sarl
mov
or
subb
pusha
or
xor
dec
adc
cmpsl
and
ret
lret
jle
rclb
lret
add
jmp
jg
out
pop
sub
xlat
shrb
cltd
ret
and
dec
rorb
push
adc
push
xchg
push
movsb
push
das
xchg
cmp
sbb
fisttpl
das
jge
dec
test
push
pop
push
lock
insl
decl
daa
pop
popf
inc
mov
sub
or
mov
and
out
jge
jge
inc
jno
loop
inc
pop
sub
dec
pop
ret
movsb
iret
loop
daa
add
inc
lods
push
cmovne
add
mov
mov
xchg
into
sbb
add
cli
cmpsl
scas
loope
push
add
push
jns
mov
lcall
push
out
or
dec
pusha
scas
sahf
xor
ja
mov
jp
or
xor
or
pusha
outsl
xchg
mov
jbe
mov
jmp
imul
sahf
mov
push
inc
lds
pop
inc
out
mov
jns
or
into
bound
lods
sbb
arpl
imulb
sub
pop
xor
imul
out
in
and
les
push
sets
into
out
rorl
daa
jae
lods
cld
adc
jl
fucomp
addb
mov
xor
jecxz
fisubrl
inc
xor
fwait
pop
and
xor
pop
push
mov
cmp
insl
push
call
mov
sub
push
in
nop
dec
shll
push
mov
movsl
movsb
xor
cmp
dec
mov
jp
adc
and
inc
sub
mov
fidivs
sbbl
jno
pop
cmove
daa
lock
addr16
dec
leave
xlat
sbbl
adc
mov
push
and
mov
sbb
das
cs
mov
and
dec
mov
mov
jle
jle
icebp
and
push
hlt
loopne
inc
sub
adc
inc
cwtl
je
popa
stc
hlt
sbb
inc
mov
and
inc
loop
sub
sahf
in
iret
xor
repz
clc
sub
scas
insl
jne
inc
mov
test
and
fldt
std
shrb
and
mov
popa
call
subb
dec
inc
mov
cli
sub
dec
ja
into
or
push
dec
add
lock
push
pop
mov
imul
popa
mov
int
add
pop
mov
ret
mov
xor
loop
push
dec
addr16
mov
jbe
and
into
adc
ds
daa
mov
pop
mov
adc
cmpb
loope
add
push
jo
sub
or
movsl
inc
pop
insl
adc
gs
testl
add
xor
pusha
pop
xchg
imul
push
insb
lock
cmp
outsb
ret
sbb
sub
sbb
stos
cmovo
inc
mov
jge
push
shll
pop
les
inc
pop
ss
sbb
es
inc
sbb
dec
and
pop
push
mov
pushf
out
jl
xor
imulb
jl
lock
out
mov
bound
div
sub
push
bound
pusha
rorb
imul
push
dec
push
popf
and
cmpsl
scas
arpl
jecxz
mov
nop
pusha
aam
shlb
pop
insl
push
pop
push
pop
dec
imul
sub
ss
aad
inc
shrl
sbb
imul
dec
mov
mov
test
lock
dec
push
mov
dec
xchg
fsubrs
inc
or
movsl
ja
pop
shl
jae
inc
push
mov
call
xorb
or
xchg
push
dec
arpl
inc
mov
loop
add
xor
xchg
push
rcll
test
ljmp
and
push
jmp
dec
xor
sub
cs
iret
jne
test
add
loope
push
movsl
lods
daa
mov
or
das
pop
ljmp
and
and
insl
insb
sub
adc
movsl
outsl
mov
mov
sub
stos
fisttpll
insl
sbb
add
aam
jnp
das
test
mov
popl
sub
leave
inc
push
or
jnp
cld
sub
xchg
outsb
adc
cltd
rcrl
lods
and
stos
sbb
pop
leave
test
inc
test
or
out
push
adc
shlb
in
decl
mov
xor
aad
inc
jecxz
test
cmp
hlt
cmpsl
and
pop
loopne
xchg
repnz
gs
or
xchg
leave
out
inc
addb
out
shrb
arpl
test
fdiv
xor
das
add
ficompl
cmpsl
xchg
scas
lret
js
lea
xor
or
adc
push
pop
sbb
bound
shr
pop
mov
jae
enter
ret
push
stos
adc
or
mov
out
sbb
cwtl
loopne
test
rcrl
xor
repnz
adc
inc
cltd
sbb
add
inc
cmp
or
cmp
cltd
insb
add
add
xchg
popa
xchg
sub
cmp
or
inc
test
adc
loope
mov
sbb
dec
and
mov
and
inc
adc
add
outsl
and
inc
jae
enter
cmp
icebp
sub
pop
jnp
and
sub
daa
dec
sub
shlb
in
xor
adc
aam
clc
jne
dec
add
inc
je
imul
into
out
lds
into
daa
lock
add
or
xor
pop
fisttpll
data16
xchg
movsl
fsubrl
pop
nop
inc
dec
inc
nop
jp
mov
iret
adc
mov
ja
fs
scas
mov
sub
pop
add
pop
out
mov
arpl
inc
bswap
xor
cld
dec
jno
sub
mov
push
adc
push
pop
jmp
mov
sbb
cmpsl
xor
cmp
ret
fisubrl
aad
add
xchg
fadds
sbb
or
hlt
arpl
fwait
iret
mov
movsb
adc
pop
xor
xor
imul
and
jg
shlb
pusha
or
xchg
insb
sbb
rclb
std
aad
loop
into
and
popa
jne
adc
mov
arpl
pop
loope
lods
and
loopne
cmpsb
inc
arpl
mov
add
push
loop
dec
add
int
mov
dec
mov
fimuls
in
call
clc
movsl
popa
push
pop
mov
cmp
arpl
pusha
cmpsl
pop
adc
push
insb
add
loopne
jecxz
ret
jecxz
jp
sahf
xchg
sbb
pop
roll
mov
insb
sti
mov
enter
xor
insb
pop
popa
jmp
sub
scas
repnz
repz
nop
sbb
cmc
data16
push
push
mov
rcll
cmp
and
add
outsl
push
cmpsl
shrb
scas
shrl
movsb
push
cmpsb
js
test
cmpsb
push
inc
out
add
or
adc
in
jae
andb
or
adc
add
aam
sub
and
adc
pop
and
or
jg
sarb
mov
mov
lret
mov
mov
or
mov
out
sub
ror
arpl
xchg
fwait
and
ret
mov
sub
dec
mov
xchg
mov
xor
push
int3
nop
xchg
orl
cmc
adc
ja
cmp
pusha
lock
jge
dec
mov
mov
ret
pop
add
arpl
in
push
bound
inc
push
xor
mov
gs
ret
aad
add
push
jmp
fcoml
daa
xor
data16
imul
idiv
inc
out
arpl
xlat
aad
fcmovu
cmp
dec
movl
adcl
test
cltd
xchg
sbb
out
fsubs
jno
hlt
mov
sar
in
add
sub
jae
push
jb
loopne
sbb
and
push
add
pop
icebp
outsb
shr
xor
andl
or
pusha
iret
push
negb
xchg
addb
xchg
cmp
sarb
sti
mov
cmp
dec
out
mov
loop
popa
mov
test
inc
cmp
mov
cmp
pop
out
jbe
and
in
adc
loop
lea
into
adc
jae
mov
mov
pusha
lods
sub
xchg
mov
mov
sbb
psubusb
mov
inc
sti
mov
sbb
pop
or
les
mov
pop
xor
imul
cld
mov
mov
sbb
mov
sub
mov
lods
cltd
xor
inc
inc
jmp
cmpb
adc
cmp
rolb
movsl
mov
dec
xchg
iret
pop
das
xchg
or
mov
xor
cmp
lods
sub
sbb
pop
sti
and
cmp
es
dec
rolb
inc
jbe
lret
mov
mov
imul
aas
hlt
mov
js
cli
popa
into
and
outsb
mov
es
push
repz
push
aam
hlt
push
lods
xchg
push
push
call
scas
cli
jbe
inc
test
subl
rclb
rclb
and
in
int3
outsl
pop
or
loopnew
mov
sbbl
sbb
test
add
dec
dec
stos
subl
xor
cli
and
mull
add
mov
icebp
xchg
lds
in
cltd
cmp
mov
jge
lret
or
fstps
adc
pushf
sub
xor
pop
sbb
push
bound
test
sub
dec
and
inc
rol
pop
adc
loope
dec
fwait
insb
mov
movsl
or
dec
mull
jbe
inc
cmpsl
neg
test
add
pop
add
mov
jecxz
push
push
jns
push
shrb
xchg
push
out
add
outsl
push
push
test
xchg
jg
ljmp
adc
out
fadd
fwait
inc
push
in
aad
sub
sub
cmp
mov
jno
mov
test
nop
int3
xchg
setle
push
call
mov
xor
xor
xor
data16
xor
nop
inc
xlat
jne
xchg
push
adc
and
aad
cmp
or
xor
push
adc
xor
xchg
lret
or
cmp
inc
cmc
sub
xor
or
fcomi
jg
sarl
ror
jno
mov
add
hlt
iret
imul
mov
sti
mov
cmp
into
pop
add
push
jle
pop
mov
pop
mov
test
loop
or
mov
mov
pop
pop
sub
pop
ret
int
jno
push
arpl
fwait
bound
addr16
outsl
add
jne
mov
add
adc
lret
push
aaa
sub
inc
ja
fisttps
mov
sub
nop
mov
sub
mov
shl
push
sbb
pop
xchg
dec
add
push
lock
pop
je
and
repz
mov
std
sbb
insb
sub
je
add
test
cmp
jae
xor
adcl
xchg
fadds
stos
cmpsb
xchg
push
pop
add
out
loop
add
out
push
lds
add
jae
lds
mov
push
andl
iret
sahf
les
mov
and
das
loop
outsb
mov
mov
dec
rclb
mov
arpl
cmp
jns
inc
dec
rcl
das
outsl
inc
or
push
andl
popa
lcall
inc
push
mov
leave
inc
aam
adc
popa
push
xchg
or
loopne
add
jmp
dec
add
dec
in
and
je
xor
push
insb
and
dec
fmuls
sbb
ret
mov
dec
mov
jo
ss
inc
and
in
js
fcmovb
fs
mov
sub
es
popa
stos
aaa
sbb
mov
add
fldt
scas
rclb
cmpsb
mov
lea
ss
jg
in
dec
sub
data16
dec
repnz
mov
sub
push
scas
xchg
sbb
lock
ret
inc
or
push
or
dec
jno
pop
shl
and
sbb
and
int3
inc
push
cltd
mov
inc
test
mov
and
daa
push
dec
mov
xchg
jo
adc
pop
jae
jecxz
hlt
sub
xor
ret
ljmp
xchg
bnd
adc
ror
or
cwtl
and
push
mov
popa
mov
xchg
out
adcb
xor
mov
dec
mov
mov
in
inc
test
jae
xchg
sub
imul
inc
je
xchg
mov
cmp
jno
push
lea
add
cmpsb
je
daa
jmp
adc
cmc
push
push
adc
mov
sti
inc
jae
aas
push
loopne
push
mov
pop
fldenv
mov
inc
xor
pop
pushf
jne
aad
filds
push
outsb
daa
je
sub
jecxz
cmpsl
repnz
in
pop
leave
adc
shlb
fcmovnb
data16
pop
lds
insb
push
mov
out
pushf
mov
icebp
mov
movsb
pop
inc
jecxz
dec
lret
push
and
or
jg
mov
pusha
mov
jp
notb
das
jne
imul
add
pop
push
inc
mov
mov
outsl
dec
mov
lods
mov
mov
xchg
adcb
daa
jno
jmp
xlat
adc
shrb
cmp
jbe
mov
pop
loopne
adc
in
and
bswap
or
comiss
inc
xchg
cmp
xor
mov
dec
adc
lahf
in
pop
cmpsb
je
rclb
inc
sbb
loope
mov
push
into
aam
push
ss
sub
hlt
dec
inc
sbb
in
jle
sbb
and
outsl
into
gs
rorl
inc
iret
dec
lods
in
pop
xor
int
inc
jmp
bound
es
lock
pop
inc
insl
sahf
ret
gs
xchg
inc
lds
fstl
stos
push
mov
into
pop
inc
xor
rcrl
pushl
jmp
jge
inc
push
push
icebp
lock
inc
pop
push
mov
xchg
dec
xchg
push
in
in
loopne
lock
aas
rcrb
push
xor
mov
xlat
mov
arpl
mov
js
outsb
gs
nop
stc
addr16
mov
scas
cmp
testl
xchg
and
movsl
push
clc
cld
movsb
mov
loopne
movsb
es
stc
cld
jb
xchg
push
jno
icebp
lock
outsb
pop
cmp
sub
jbe
frstor
dec
gs
pop
pop
daa
dec
push
testl
das
mov
fisttps
jecxz
mov
pop
cld
ret
movsl
int
stos
loopne
push
pop
je
or
push
orb
cs
pushf
lret
daa
inc
sbb
inc
popf
loop
cmp
inc
add
test
xlat
sbb
xchg
ficoml
ret
test
fdivl
cmpsl
adc
mov
sub
imul
xchg
adc
jne
repnz
mov
push
enter
pop
in
test
inc
cmp
xor
inc
add
pop
sbb
movsl
and
loopne
mov
and
mov
arpl
stos
and
pop
add
jno
inc
rorb
or
xor
andb
mov
or
rcl
dec
fisubrl
inc
mov
xchg
loope
push
add
sub
and
int3
stc
sub
jmp
fdivl
stos
sub
inc
nop
push
sahf
sub
dec
push
jno
inc
mov
stos
xchg
pop
push
movsl
jae
loopne
movsl
xchg
dec
dec
adc
pop
movsb
xor
test
and
cmp
sbb
aaa
mov
pop
arpl
push
jbe
add
into
adc
scas
xor
xchg
vpslld
bound
loope
xchg
mov
pop
das
dec
xor
dec
xor
repz
xor
lret
mov
ret
mov
jo
gs
mov
inc
inc
mov
jo
inc
insb
pop
les
inc
fldl
push
inc
fidivrl
es
imul
lods
add
dec
pop
dec
push
and
push
test
push
jo
add
mov
insb
or
xor
inc
push
jecxz
and
test
jg
inc
not
pushf
xchg
nop
lock
sub
pop
lock
in
int3
rcl
notb
lds
push
dec
inc
shl
xor
stos
push
aaa
imul
repnz
cld
aaa
lds
in
fwait
mov
stos
push
in
shl
mov
and
push
fcomp
lods
push
or
add
or
dec
push
add
and
push
shlb
xchg
jns
xchg
outsl
adc
call
xchg
mov
pop
leave
push
add
aas
xor
and
nop
xchg
cmp
jno
cmp
fcoms
mov
arpl
or
dec
cs
inc
mov
mov
les
pop
push
cld
in
and
call
lahf
xchg
mov
stc
inc
ss
gs
push
or
aas
test
mov
pop
push
stos
into
xchg
imul
adc
pop
jge
xor
div
lea
ss
fstps
daa
pop
sbbl
aaa
mov
ret
in
cmp
stos
and
sbb
push
out
jae
fisubrl
in
ret
les
or
lods
xlat
sbb
push
xchg
aam
push
aad
lahf
xor
sbb
mov
sbb
in
cmp
xor
pop
and
sahf
subb
sbb
sbb
pop
fwait
sbb
pop
ret
add
mov
lock
in
aaa
sbb
mov
adc
pop
adc
mov
sarl
ret
sar
inc
or
into
dec
sub
call
mov
sub
jns
mov
scas
addl
fisttpll
gs
mov
push
jae
shl
repnz
in
and
inc
inc
jno
cltd
push
hlt
or
lcall
mov
fimuls
and
mov
mov
add
or
mov
std
mov
jp
adc
mov
rorl
fisttpl
lahf
and
mov
fildll
add
push
dec
xor
push
mov
mov
sub
popa
insb
paddusb
add
push
lahf
loope
jge
loopne
and
dec
push
icebp
jo
mov
in
orl
push
mov
xor
dec
and
jmp
xchg
aas
push
sti
inc
rclb
push
lea
addr16
pop
fnstsw
cli
pop
gs
ret
add
sbb
sub
xchg
negl
adc
hlt
cltd
mov
dec
movsb
inc
sub
mov
insl
repz
and
sbb
cmpsl
cwtl
loopne
mov
loop
push
cld
push
cmpsl
jp
pop
pop
repnz
mov
push
shrb
xor
fidivrl
or
ret
adc
orb
aaa
test
cld
mov
pusha
cli
int
hlt
cmp
lods
rcrl
mov
and
adc
jecxz
sbb
xchg
out
add
nop
cmp
inc
or
mov
out
adc
sbb
or
mov
repnz
or
adc
mov
stc
inc
dec
push
xor
cltd
inc
movsb
imul
dec
xor
out
loopne
dec
into
mov
inc
mov
sarb
inc
mov
movsl
adc
lret
add
xchg
addl
out
ja
test
mov
clc
and
sbb
fidivrs
cmpsl
adc
daa
cld
push
push
inc
movsb
ret
das
test
nop
test
ret
pop
cmp
imul
jecxz
adc
pop
js
leave
mov
pusha
js
adc
mov
push
jno
jl
pop
sbb
lret
sbb
inc
and
lods
movsl
ucomiss
and
je
sbb
movsb
pop
pop
jno
mov
fs
fucompp
adc
mov
daa
imulb
cmp
push
movsb
ret
repz
jg
es
push
pop
push
cld
divb
xchg
mov
push
push
cli
dec
enter
jmp
ret
repnz
add
adc
sub
and
add
popf
popa
jecxz
add
das
cmp
imul
adc
popa
call
cmp
jnp
xchg
jae
sub
sub
lock
and
gs
xchg
jl
ret
imulb
jecxz
xchg
test
aad
pop
cmpsl
in
bnd
fidivrl
pushf
mov
xchg
inc
aas
pop
insl
test
push
mov
inc
in
insb
cmp
jae
adc
lods
inc
mov
xor
dec
inc
inc
out
pop
dec
mov
pusha
das
test
push
leave
sbb
rcrl
nop
inc
mov
xor
jmp
pop
orb
dec
dec
adc
xor
pusha
shll
test
push
mov
cmc
int3
loopne
cmpsl
jecxz
fldcw
sbb
inc
adc
rclb
push
out
push
filds
gs
and
enter
fidivrs
mov
test
xor
and
sahf
add
sub
loopne
aaa
subl
shll
hlt
add
sub
shlb
mov
imul
pusha
rolb
out
or
or
jne
mov
add
mov
and
imul
xchg
cmp
je
bound
orl
jno
cmpsb
lods
sbb
out
mov
repz
fs
stc
pop
or
sbb
and
pusha
out
cmp
inc
mov
lahf
xor
or
loopne
lea
imul
push
fsub
xor
cli
add
sub
movsb
add
fnsave
in
push
sbb
sub
and
sub
or
and
addr16
mov
and
adc
pop
push
push
imul
mov
icebp
movsb
dec
je
leave
test
xor
das
fnstsw
ja
add
cmp
mov
out
inc
xor
inc
popa
adc
sub
pop
lods
add
addr16
lahf
cmc
mov
sub
cmp
mov
jns
cwtl
rorb
and
addb
je
fisubrs
ret
xlat
mov
and
sbb
sbb
cmp
adc
jo
lock
add
pop
cmovs
inc
es
iret
sub
jbe
cltd
pop
pop
pop
cwtl
xor
xchg
movsl
adc
jecxz
cmp
or
lcall
mov
pushf
addr16
mov
movsl
daa
addl
or
push
faddl
jo
addl
arpl
ret
roll
stos
insb
adc
pop
sbb
push
jge
sti
lock
mov
inc
mov
sbb
jno
push
sbb
ds
mov
mov
dec
arpl
sub
mov
sub
add
cmc
rclb
inc
int3
outsl
rcrb
mov
sub
push
in
out
xor
push
mov
jne
jo
icebp
insl
pop
add
arpl
icebp
add
lock
stos
jo
cltd
mov
push
in
sub
push
scas
cmc
and
and
dec
or
cmc
or
cmp
mov
fidivl
jge
es
sbb
sub
scas
loopne
mov
leave
enter
cltd
in
ss
icebp
scas
or
inc
push
jns
jge
pop
xor
and
mov
cmc
inc
push
and
insb
in
loope
adc
push
pop
jae
in
mov
cmp
fst
jbe
inc
jbe
pop
jecxz
shrl
std
out
adc
jbe
push
loope
vmread
hlt
cmp
iret
divl
sub
jg
xchg
add
jne
xor
xchg
add
insb
mov
loope
add
mov
pop
addl
xchg
and
bound
and
aam
push
mov
ret
repnz
cmpsl
pop
mov
jmp
lock
add
imul
xchg
mov
pop
js
fimuls
out
xlat
fs
fdivr
adcl
scas
rorl
test
outsl
push
dec
mov
push
or
inc
dec
stos
lods
inc
out
shl
xor
sub
lret
cmc
and
dec
and
ljmp
int3
leave
add
or
and
sub
sub
push
and
daa
cmpsl
lods
shll
movsb
pushf
test
or
ljmp
test
jecxz
js
dec
inc
dec
add
inc
iret
sub
sub
lock
mov
data16
add
mov
insl
fbstp
push
outsl
or
popa
popa
mov
je
bound
dec
loopne
jno
xor
add
outsl
pusha
or
jle
loope
xorb
sbb
enter
pop
les
les
add
xchg
mov
add
movsb
jb
mov
insb
nop
shlb
or
mov
mov
add
xor
aaa
aaa
pop
jbe
add
xor
add
add
mov
pop
inc
xlat
sahf
lods
inc
cmc
dec
in
adc
inc
mov
ja
add
push
inc
shl
adc
ss
push
std
and
xor
fwait
cmp
dec
fistps
in
movsb
xchg
cmpsl
in
sub
shlb
push
icebp
sub
bound
add
and
imulb
dec
in
loopne
add
aaa
roll
movsl
lahf
inc
cwtl
sarb
cmp
or
mov
cmp
pop
js
mov
push
leave
push
and
shrl
mov
and
adc
mov
aam
rorb
pop
adc
outsl
and
in
repz
mov
or
fsubrl
add
imul
mov
sahf
dec
push
sbb
clc
add
inc
ficoms
pusha
int3
sbb
inc
cmp
imul
test
ret
outsb
xchg
sbb
popa
cmpl
stos
lock
es
lcall
aad
std
sub
xor
mov
pop
pop
add
dec
pop
push
jne
daa
mov
pushf
dec
add
out
in
repnz
pusha
jae
or
xor
pop
lock
pop
dec
add
lods
das
rolb
ds
clc
jb
or
subl
sub
dec
outsb
shlb
into
dec
or
insl
sub
pop
mov
aam
rolb
aad
in
rolb
hlt
ds
or
cwtl
push
sub
push
jmp
shrb
cmpb
out
jp
mov
testl
movsb
dec
ret
adc
push
sbb
push
int3
fsubs
mov
out
imul
mov
xchg
or
add
mov
pop
jne
or
fldt
mov
dec
xor
mov
fnstcw
jbe
push
or
lret
dec
add
lret
call
cld
jo
push
jecxz
or
jbe
ffreep
add
adc
dec
test
lds
inc
ret
lea
push
mov
add
jge
lods
inc
sbb
lahf
jge
inc
adc
adcb
fsubr
pop
pushf
jg
cmc
cmpsl
or
pop
je
movsb
jbe
or
clc
mov
dec
out
lret
inc
add
dec
lods
sub
cmp
xchg
xchg
cmp
xchg
sub
iret
cmpsb
outsl
insb
and
push
std
enter
ret
das
xchg
shll
push
cmc
test
xor
and
pop
add
inc
add
xor
sub
mov
add
pop
dec
ret
ss
push
sub
je
xor
sbb
aas
and
dec
shrb
shlb
data16
cpuid
testb
rcrb
mov
scas
pop
mov
xchg
andb
inc
dec
mov
test
imul
iret
dec
and
inc
ja
popf
jns
sarb
mov
xchg
js
test
int3
adc
or
aam
fisttps
mov
mov
hlt
pop
dec
xor
add
add
sub
pop
stos
adc
sbb
dec
jmp
push
mov
cmp
push
lret
adc
lods
mov
pop
mov
repz
pop
loopne
lods
les
jo
and
sahf
cmp
inc
dec
lret
sub
loop
repnz
pop
imul
fs
cmpsl
ret
out
and
mov
arpl
mov
or
dec
aad
mov
int
inc
push
mov
xchg
inc
sub
mov
pop
js
sahf
je
xchg
xchg
add
sub
jnp
out
cmp
in
pop
loope
in
cs
lods
mov
xchg
dec
xchg
loope
pop
sbb
es
int3
fists
push
test
cmp
dec
dec
aad
and
dec
mov
rclb
inc
frstor
dec
xor
test
push
inc
dec
add
dec
add
repnz
loope
scas
xor
or
arpl
and
scas
cmp
dec
insb
dec
add
leave
andb
xor
jg,pt
inc
ret
pop
sbb
adc
pop
xchg
adcb
imul
shll
lds
test
popa
mov
insl
pusha
adc
enter
sub
lret
movzwl
inc
cli
adc
test
mov
cltd
mov
dec
sbb
sarb
push
sub
popa
jge
jno
pop
dec
jne
outsl
sbb
leave
mov
es
sbb
push
roll
popa
bound
shrb
and
aam
add
lahf
fnstcw
mov
arpl
mov
inc
cmp
adc
ret
mov
push
andb
pusha
in
jbe
stc
or
xchg
mov
fcoms
subl
pop
mov
or
or
pop
sub
sub
or
dec
stos
mov
nop
imul
cmp
adc
mov
adc
jecxz
and
scas
pop
add
pop
jns
fldenv
push
xchg
inc
pop
outsl
scas
and
shll
bound
dec
aaa
adc
adcb
jo
sub
loopne
inc
sub
in
cpuid
notb
bnd
aad
into
jno
push
out
pop
sub
enter
add
popf
jae
inc
pop
mov
adc
bound
jbe
push
xchg
test
out
cmpsl
fnstenv
lods
dec
je
push
inc
xor
cmp
lods
fdivp
lds
cmp
dec
xchg
sbb
leave
imul
adc
mov
int
lods
adc
rclb
jnp
fcomip
loope
sbb
and
ret
add
shrl
sub
inc
sti
nop
out
inc
jl
hlt
push
sbb
aas
lock
sbbl
das
or
jmp
sub
cld
loop
dec
dec
ja
xchg
js
pushf
pop
iret
pop
call
lock
rorl
scas
mov
xchg
shlb
cmp
inc
shrb
xor
js
mov
mov
imul
pusha
sbb
mov
scas
or
lock
cmc
mov
cld
dec
maxps
popa
sub
pop
aad
dec
cmpsl
dec
test
je
lahf
jnp
fistl
inc
sbbl
subl
inc
jne
xor
xlat
fstl
cmp
adc
mov
sarl
or
pop
cmp
imul
and
push
and
into
add
xor
adcb
or
add
leave
lock
mov
add
pop
pusha
jge
xchg
push
push
xchg
mov
xor
mov
mov
jnp
insb
jnp
call
push
xor
out
mov
bound
cmp
push
jns
data16
lret
mov
push
dec
mov
sub
add
lods
push
nop
fiadds
inc
addr16
shll
ret
jge
or
cmp
aad
xchg
push
pop
xchg
es
xor
jo
push
or
mov
pop
cmpl
in
sbb
mov
adc
sarb
push
pusha
sbb
adc
sub
jl
ret
imul
sub
jle
jbe
push
sub
rep
sub
out
pop
pop
add
into
jnp
outsb
xchg
fwait
or
aaa
push
das
mov
xor
out
fnstcw
ror
jnp
lock
jns
xchg
push
push
xchg
aaa
sub
insl
xor
loop
and
loop
subb
movsb
xchg
push
add
lods
jecxz
add
and
mov
xor
pusha
rolb
inc
add
bnd
inc
movsl
lds
pop
and
mov
and
inc
in
rolb
xchg
outsl
or
call
cs
data16
dec
mov
pop
sbb
inc
jecxz
loope
je
dec
inc
sbbb
pop
push
pop
or
fisubrs
push
out
repnz
sbbl
lods
test
push
inc
adc
lret
mov
mov
lods
adc
push
pop
jp
sbb
push
sub
jnp
mov
push
enter
in
jle
addr16
in
into
xor
and
testb
dec
data16
dec
movsl
inc
sub
lret
dec
and
pop
jg
push
xor
rorb
das
test
loope
and
aad
in
loop
jg
jnp
push
outsl
push
add
push
push
js
inc
add
in
pop
cltd
xchg
jg
add
js
xor
idiv
shl
xchg
fldcw
sbb
lds
xor
add
aaa
popa
pusha
jns
lret
xor
or
pop
mov
xchg
jb
add
cmc
push
mov
movsb
addr16
sub
or
push
repnz
or
inc
mov
fsubrp
shr
mov
add
mov
mov
sbb
mov
dec
hlt
jnp
jns
out
add
and
adc
mov
sub
out
loope
out
fdivrp
mov
ja
sbb
cld
lods
lods
movsl
jnp
insl
jecxz
adc
mov
xchg
dec
aam
mov
cwtl
cmp
sub
shl
xor
push
push
jmp
cwtl
adc
jb
fdivl
adc
enter
cltd
imul
out
adc
movsl
test
mov
mov
jo
push
mov
cli
or
jle
std
dec
lret
push
dec
mov
push
icebp
jge
jns
js
sbb
push
leave
movsb
and
daa
inc
cli
test
shll
test
mov
mov
addb
loop
pusha
incl
arpl
jg
mov
sbb
push
add
jnp
inc
push
mov
rcrb
repz
es
sbb
movsb
popf
and
and
mov
xchg
test
pop
bnd
inc
sti
xor
sbb
fcompl
std
aad
lds
movsb
xor
mov
movsl
cld
or
call
jmp
lahf
sub
aad
sarl
or
rcrb
push
xlat
movsl
popf
pop
push
dec
out
or
int3
jge
cmpsb
pop
sub
inc
cmp
push
xchg
push
dec
nop
jne
pop
xchg
loopne
cmpl
iret
push
add
out
jns
and
sbb
pop
pop
push
lods
pop
pop
or
push
enter
push
lock
imul
test
pop
movsb
mov
movsb
inc
rcrl
cmpsl
inc
and
and
mov
lods
or
mov
addl
outsl
pop
lock
int
inc
add
aad
pop
sub
mul
push
push
jne
inc
xchg
cltd
cmp
cmc
iret
fidivrs
add
nop
pop
popa
rcrl
xor
mov
xlat
leave
and
out
dec
arpl
dec
in
jne
pop
cs
dec
out
mov
sbb
test
jecxz
lret
popa
test
dec
aad
sbb
clc
xor
iret
or
sub
pop
mov
mov
dec
or
push
imul
cmp
icebp
mov
loope
add
roll
test
mov
inc
in
arpl
decl
sub
mov
jg
popa
or
arpl
xchg
arpl
or
sbb
loop
rcrl
pop
and
sbb
mov
das
loop,pn
jge
jge
repnz
add
roll
xor
and
mov
repnz
aaa
push
aas
cmp
jecxz
loope
mov
jcxz
lret
adc
push
mov
movsb
inc
clc
sarb
in
mov
mov
cwtl
subl
std
mov
loop,pn
adcb
jbe
push
mov
insl
cld
mov
jae
push
in
outsb
repz
sub
push
inc
daa
adcb
inc
mov
leave
push
inc
test
pop
sti
call
hlt
xchg
pop
nop
or
inc
xor
dec
push
mov
sub
mov
ja
mov
into
mull
mov
rcrl
push
cmpsb
subb
cmc
dec
add
ret
mov
sub
out
adc
xor
add
loop
rcr
push
mov
ret
xor
mov
mov
aas
test
test
adc
into
test
in
fcomps
lock
mov
in
inc
cltd
sub
shr
cmp
repnz
cli
andl
cli
adc
jo
cmp
jecxz
inc
movsb
inc
pop
repnz
mov
pop
rcrb
icebp
mov
into
popa
int
sbb
mov
adc
mov
dec
adc
out
cs
movb
jns
rcrl
addr16
dec
fiadds
inc
sbb
repz
mov
sub
je
icebp
fisttpl
mov
arpl
adc
cmc
add
or
bnd
adc
je
shufps
lds
andl
xchg
dec
test
test
dec
cwtl
pop
nop
add
aad
sbb
sbb
xchg
mov
jp
enter
cmc
loope
imul
push
aaa
push
mov
loopne
dec
into
pop
pusha
inc
push
addb
inc
push
das
lret
das
push
add
add
cmp
cmp
outsb
push
mov
out
lret
inc
ljmp
add
push
add
jge
hlt
pusha
inc
fdivs
xor
popa
lahf
fs
pop
dec
xchg
push
add
loope
insb
lods
xor
lds
in
xchg
jo
mov
jecxz
adc
call
sub
jmp
in
insl
out
or
mov
out
int3
adc
push
je
sub
mov
shl
add
xchg
mov
sbb
jle
insl
aaa
sti
and
and
sbbb
and
popf
add
sub
gs
loopne
cld
jns
aas
push
insl
and
push
mov
pop
mov
mov
mov
inc
or
test
ret
mov
out
out
sub
pushf
cmpsb
mov
cmpb
inc
dec
mov
testl
cmpsl
test
outsb
push
mov
add
icebp
mov
je
aaa
fsubr
and
cmp
clc
xchg
addl
sarb
push
sbb
pop
roll
pop
cmp
call
mov
hlt
shrb
sahf
mov
inc
lods
filds
shll
lods
dec
jno
add
call
adcl
inc
rol
lods
push
xchg
divl
push
xor
rolb
jno
leave
mov
jne
jo
mov
in
in
push
mov
icebp
orl
mov
xor
sbb
roll
imul
jmp
or
insb
and
push
add
xor
or
pop
push
or
mov
nop
cmp
jmp
cmp
daa
sub
mov
dec
shlb
jl
fdivs
jb
xor
in
out
and
xchg
fldt
sub
mov
test
sahf
push
and
push
push
push
jge
cld
std
add
stos
adc
int3
int
dec
push
sahf
insb
clc
orb
dec
mov
push
fimuls
adc
jo
pop
out
cld
mov
ljmp
fildl
pop
or
in
shlb
or
adc
pop
aam
adc
jnp
int
adc
dec
sbb
je
jnp
cmp
and
dec
data16
push
nop
or
sbb
push
add
lahf
popa
sub
xor
daa
push
repnz
mov
dec
test
bnd
jb
pop
sbb
sbb
jmp
jns
mov
out
lcall
xchg
mov
fld
and
and
adc
mov
loope
and
xchg
xor
aad
jo
jno
cld
xchg
and
sub
rorb
loopne
push
inc
aas
pop
lock
cltd
mov
mov
rclb
aaa
call
add
je
xor
push
push
or
fs
push
adc
bound
inc
mov
outsl
rcr
cmp
xor
lods
sbb
aad
mov
push
loopne
pop
mov
shll
and
sar
push
in
lock
lock
loop
mov
lods
adc
jns
inc
sub
es
stc
xor
mov
push
or
jne
fcoml
sub
cmp
dec
sub
sbb
lret
cli
and
mov
or
push
push
popa
inc
adc
inc
aaa
sbb
pop
les
dec
hlt
sarl
fcomps
cld
rcrl
lret
rcl
mov
jne
adc
cmc
aam
mov
in
and
jmp
ss
sbb
mull
or
lods
rclb
insb
les
sub
in
sub
mov
adc
and
leave
lret
pop
add
push
dec
adc
lret
in
in
inc
imul
imul
lods
inc
loope
js
dec
outsl
mov
shll
or
dec
and
cltd
adc
dec
xchg
cmp
xchg
stos
ljmp
in
cmp
xor
dec
push
je
dec
fcoms
pop
cmc
inc
mov
cmp
inc
std
sbb
je
jnp
test
adc
loope
mov
xlat
out
dec
pop
or
mov
add
jg
jb
gs
aas
mov
sbb
xor
mov
mov
and
inc
in
sbb
insl
or
mov
out
xchg
jns
add
push
or
out
mov
stos
int
and
sub
pop
stc
mov
data16
jo
adc
je
sub
xchg
push
xchg
test
out
ds
jbe
scas
inc
jo
mov
and
sbb
mov
xchg
or
jns
imul
leave
mov
pop
sti
push
inc
pop
int3
bound
and
jmp
add
and
or
push
std
cli
in
mov
aas
ja
cmp
jno
aam
imul
add
adcb
lods
sbb
and
pushf
repnz
fidivs
ret
sbb
mov
add
and
addr16
pop
inc
dec
jp
add
outsb
js
int
bound
les
in
fsub
mov
imul
or
dec
nop
push
call
dec
add
inc
cmp
pop
ljmp
test
nop
fcmovnb
adc
movb
adc
pop
pop
movsb
stc
fimull
add
jne
mov
test
cmp
stos
inc
in
mov
push
adc
in
loope
fs
stc
ret
mov
pusha
jns
mov
push
scas
iret
repnz
push
mov
imul
and
hlt
mov
es
mov
sbb
leave
aam
mov
and
xchg
add
hlt
push
add
sbb
decl
push
jne
stc
mov
dec
mov
sub
clc
pop
push
or
jmp
inc
in
push
out
sbb
subl
push
imul
cmp
movsb
jmp
arpl
test
mov
in
or
arpl
and
pop
push
jge
ret
cmp
inc
cmpl
dec
sbb
lods
testl
sbb
mov
and
aas
sub
mov
sub
jecxz
lcall
cmp
movsl
out
mov
iret
mov
cmpsl
mov
mov
or
aas
insb
test
fsts
dec
add
push
sarb
xchg
fmul
and
adc
and
dec
jne
int
mov
mov
or
lods
sub
pop
out
jp
sbbl
std
jecxz
xchg
hlt
incb
jns
repnz
shlb
inc
add
inc
std
xor
cld
and
shrb
shr
inc
or
sbb
lcall
pushf
jmp
mov
lret
cmpsl
cwtl
hlt
roll
sub
push
adc
testb
jmp
and
pushf
pop
push
add
adc
imul
cli
aas
int3
lcall
pop
fldl
stc
je
jnp
lahf
mov
or
scas
test
mov
sbb
mov
testb
in
hlt
les
scas
inc
fs
fadds
out
js
enter
pop
shr
sbb
adc
in
das
lock
sbb
xorl
pushf
adc
jecxz
xchg
in
mov
inc
daa
addr16
aam
rcll
sbb
addr16
sbb
jns
jg
inc
arpl
aad
dec
push
inc
pushf
aad
out
data16
test
dec
inc
add
les
and
push
mov
nopl
shrb
fs
sti
inc
insl
cmc
inc
test
jne
sbb
dec
mov
sub
jge
xor
pop
sbb
inc
jge
sub
or
inc
test
add
inc
cmp
mov
mov
dec
xor
adc
inc
xchg
mov
xchg
mov
lret
cld
sahf
aam
dec
inc
mov
in
adc
pop
ja
push
stos
pop
mov
sub
mov
xchg
paddd
mov
push
cmc
mov
out
or
xchg
in
icebp
je
sub
lods
pop
int
adc
xor
jmp
bnd
into
push
sbb
movb
adc
cld
add
mov
daa
cmp
out
ljmp
pop
cld
xchg
jo
dec
icebp
out
scas
xchg
ret
das
mov
imul
sbbl
push
and
jns
nop
pop
mov
xor
pusha
sbbl
ror
add
jge
lods
pop
popa
mov
add
das
mov
bound
das
in
test
pushl
adc
inc
xor
dec
push
lahf
add
or
sahf
outsl
xor
sbb
push
push
xchg
cs
sub
add
loop
shll
frstor
push
mov
jle
mov
fs
andb
int3
insl
aad
test
std
ret
out
pushf
fldt
sbb
push
sub
adc
jecxz
push
mov
sbb
pop
sbb
in
out
mov
sbb
push
sbb
pop
add
scas
data16
pushf
pop
mov
test
sbb
inc
daa
dec
add
or
xor
iret
inc
movsl
daa
inc
in
mov
inc
jnp
loop
dec
or
rcl
out
xlat
jno
pusha
popa
out
dec
gs
iret
cmp
push
jb
xchg
and
leave
out
ja
xor
xor
jno
sbb
pop
xchg
and
lock
ret
and
inc
mov
lds
fldenv
inc
cli
mov
sub
adc
push
sbb
fs
mov
inc
dec
mov
scas
sbb
xchg
sub
dec
mov
sbb
xor
dec
pop
hlt
add
add
fistps
jo
fadds
push
sub
ror
lds
out
rcr
push
test
cmp
ret
lods
lret
clc
inc
flds
jb
xlat
cmpb
je
adc
mov
dec
repnz
or
xchg
xchg
rclb
loopne
inc
cmp
lods
xchg
pushf
dec
aad
pop
js
pop
add
add
outsb
sbb
mov
dec
insl
push
scas
dec
popf
jp
push
repnz
cmp
add
xchg
inc
sahf
jl
pushf
sahf
ret
mov
pop
mov
and
das
push
mov
mov
add
dec
and
inc
loope
xor
xor
pushl
mov
or
mov
lock
into
popa
rorb
loope
jno
add
push
sahf
xchg
lcall
push
or
mov
fwait
movsb
stos
sub
ret
add
mov
and
inc
pop
daa
or
mov
push
pop
mov
xor
into
jmp
jne
push
rcrb
test
lret
adc
mov
or
lahf
pushf
add
mov
outsb
jbe
jo
or
fimull
mov
jb
or
push
push
xor
bound
ja
xchg
mov
in
jge
sbb
loope
xchg
sbb
dec
inc
icebp
mov
mov
sub
sbb
mov
mov
lds
repz
pop
and
mov
jle
lret
and
jno
in
cmpsb
cli
dec
std
rcll
hlt
loopne
add
and
inc
mov
or
sub
in
cmp
cmpsl
jle
dec
push
test
int3
pop
loopne
adc
pushf
lret
jl
sbb
lock
push
dec
jmp
pop
pop
jmp
jp
push
and
dec
fwait
and
das
inc
aaa
test
xchg
rorl
mov
dec
and
je
add
popf
fs
in
cmp
mov
frndint
or
mov
stos
xchg
les
or
add
mov
out
dec
dec
mov
rcrl
and
or
add
adc
fcomi
ret
movsl
push
push
cltd
adc
cmp
out
xorl
into
mov
enter
mov
add
mov
adc
inc
pop
adc
jno
test
pop
cs
fwait
test
mov
cmpl
xchg
push
fwait
push
inc
fcompl
sub
add
xchg
sub
daa
ficoml
pusha
es
adc
into
insl
roll
mov
clc
push
pop
imul
andl
scas
and
test
push
aad
test
into
je
fdivl
sbb
or
and
xchg
divl
cmp
nop
test
add
jnp
std
jl
cmp
dec
add
adc
pop
daa
mov
lods
mov
cmpsb
inc
jge
inc
push
push
bound
inc
cmpsb
fcomi
jno
sub
jle
ja
aas
cmp
xchg
xlat
push
sbb
inc
icebp
cmpsb
push
notb
sbb
pop
insl
adcl
mov
aam
xchg
mov
sbb
adc
rclb
test
sar
mul
inc
repnz
xor
jbe
xchg
out
fmull
mov
jae
push
adc
mov
andl
add
pop
loope
int
jb
mov
sub
pop
fmuls
add
mov
xor
cltd
bound
xchg
mov
idiv
dec
xor
subl
sbb
jo
movsb
xor
xlat
bnd
push
aad
cld
xor
in
adc
pop
in
faddl
push
and
ja
dec
jno
add
lock
push
fsubrp
cmpsl
negb
xchg
or
clc
lock
test
movsb
inc
aas
icebp
int
js
push
mov
pusha
adc
bound
inc
and
int
mov
mov
mov
inc
loopne
out
sub
mov
and
and
push
mov
push
xor
pusha
insb
jb
xchg
les
mov
sbb
push
rcrb
add
pop
xchg
aam
and
jecxz
out
ja
xchg
outsl
frstor
push
fcomps
adc
insl
inc
xlat
aam
mov
shlb
lcall
push
jp
sub
dec
pop
cmp
cmp
adc
xchg
bound
xorl
mov
je
dec
es
or
nop
mov
rcr
jg
sub
jns,pn
and
jno
sub
add
cli
push
fadds
cwtl
test
inc
pop
in
xchg
call
xor
in
loopne
xchg
sbb
dec
lods
push
testl
daa
inc
scas
mov
adc
rcrl
cli
xchg
mov
enter
pop
adc
mov
jge
mov
loop
jmp
js
int3
jo
nop
mov
add
inc
adc
jbe
movsl
xchg
mov
xorb
adc
flds
lea
xchg
sbb
in
xchg
loope
jl
cltd
neg
iret
ror
adc
sarb
mov
insb
pop
es
filds
test
and
divb
pop
mov
sub
add
pop
mov
mov
les
inc
fld1
stos
sbb
dec
lods
ds
in
inc
jecxz
inc
in
push
scas
pop
ror
xor
jmp
mov
and
nop
scas
xor
xchg
fdivl
imul
cmp
cld
xchg
mov
inc
insb
add
xor
aaa
and
aas
daa
dec
mov
push
cmpsb
ljmp
rcr
adc
movsb
sahf
ficoml
daa
xchg
jne
push
in
push
in
sbb
sbb
pop
out
inc
sbb
js
push
pop
call
mov
push
hlt
mov
cmp
xorb
sbb
aam
std
push
push
cli
sub
jo
les
sbb
call
pusha
outsl
add
and
and
lret
arpl
inc
and
imul
push
test
push
jecxz
inc
lods
pusha
leave
sub
int
test
lcall
mov
negl
and
jo
jp
inc
repz
divb
mov
and
in
dec
andb
pop
dec
outsb
add
pop
mov
nop
mov
lret
out
lret
adc
jle
dec
cmp
mov
popa
cmp
cwtl
aaa
filds
pop
aad
cld
adc
ja
xor
subl
pop
push
mov
jmp
imul
das
lods
adc
mov
imul
fldcw
adc
adc
lock
insb
xlat
push
adc
bound
jnp
jecxz
mov
das
in
test
push
and
dec
cmp
fwait
xchg
mov
adc
in
pop
fs
sbb
inc
shlb
inc
inc
ret
add
push
inc
xor
lret
daa
cmc
in
fdivl
xor
mov
xorb
push
push
or
and
inc
js
movsb
cs
cmpsl
add
pop
mov
pop
adc
jmp
sbb
xor
jg
aaa
dec
lods
mov
mov
and
cli
dec
pextrw
scas
mov
daa
or
addr16
pop
fimull
pop
jne
insl
aas
mov
stc
jge
dec
or
int
je
subl
or
xchg
push
addr16
xchg
repnz
jp
cld
jne
in
mov
inc
out
dec
cld
faddp
xlat
mov
pop
push
add
mov
imulb
iret
adc
sbb
push
xor
mov
sub
mov
mov
daa
sarb
mov
dec
cwtl
fs
mov
xor
cmp
inc
pop
cmp
and
cltd
xor
arpl
cmp
mov
stos
int3
loop
jmp
mov
cmp
lret
call
fcos
dec
or
popf
or
les
stos
mov
xchg
out
mov
xor
outsl
pop
sbb
cltd
adc
jnp
inc
mov
dec
dec
dec
jle
xor
xor
xor
insl
dec
ja
lods
scas
sub
pop
push
adc
subl
add
mov
movsl
pop
sub
cli
push
scas
jnp
ss
and
and
sbb
lock
mov
shl
xchg
xchg
loopne
fdivs
rcrb
cmpsl
shr
and
sbb
jbe
and
push
ja
js
xchg
loopne
sub
sub
pop
cmp
jo
js
inc
ljmp
imul
orl
adc
mov
cmpsl
fmull
pop
xor
out
lahf
ja
dec
jecxz
push
fwait
dec
orl
cmpsb
jb
cli
and
test
jl
xor
cmpl
enter
inc
and
into
test
pusha
fwait
aas
shll
fs
bound
ljmp
jecxz
mov
mov
xor
lcall
stos
pop
outsb
lods
mov
test
mov
and
test
cmp
icebp
jbe
mov
dec
sbb
loope
inc
add
push
jne
int
movsb
mov
addr16
sbb
jecxz
pop
xchg
add
movsl
jmp
dec
push
pop
into
xchg
mov
sub
testl
leave
pop
clc
or
nop
adc
jo
cmp
shll
jae
dec
mov
insb
inc
and
sub
adc
mov
cwtl
lret
adcl
jl
pop
fcoms
shrl
lea
andnps
gs
xchg
or
insl
or
fbstp
dec
or
out
insb
mov
aas
dec
scas
fistpll
pop
xchg
mov
lret
push
push
lahf
js
and
inc
mov
and
sbb
insl
push
mov
stos
in
push
inc
add
dec
ret
cmp
adc
fwait
mov
call
inc
mov
jbe
mov
idivl
mov
dec
sub
add
jle
sub
dec
in
enter
fnsave
hlt
adc
dec
xlat
movsl
mov
flds
mov
jle
sbb
aaa
orl
movsb
ret
add
sub
cwtl
sub
das
pop
je
cmp
sarb
mov
enter
cmp
sarl
cld
adc
fiaddl
es
xchg
jmp
jecxz
sub
imul
lock
outsb
jnp
jl
cmp
stos
mov
pop
mov
inc
outsl
xlat
stc
aad
jecxz
jmp
xchg
mov
fisubs
mov
xorb
push
data16
mov
pop
add
cmp
pop
jmp
and
sub
mov
or
xor
xchg
fwait
mov
cli
ret
sub
out
inc
cmc
mov
push
rorb
jbe
in
adc
adc
inc
out
lods
pop
dec
inc
jb
aam
roll
mov
xchg
adc
cltd
test
rol
sbb
jecxz
mov
sub
std
pop
cmp
mov
insb
popw
loope
mov
and
loopne
sbb
or
cmp
cmpsb
add
orb
xchg
push
xchg
insl
adc
sub
subb
xchg
mov
rclb
movsl
xchg
sub
mov
loop
insb
jno
jg
clc
cmpsl
pusha
fisttpll
cmp
in
adc
and
data16
mov
or
pop
mov
xchg
jo
ja
fnop
mov
dec
pop
aam
and
add
jg
mov
pop
inc
mov
dec
dec
call
fidivs
fldcw
arpl
stos
jl
sahf
rolb
fwait
mov
int3
jl
mov
lahf
fcompl
shll
sub
imul
lock
iret
xchg
xchg
dec
iret
mov
pushf
cli
or
repz
add
test
arpl
pop
sqrtps
int
sarl
sub
push
mov
sub
xor
dec
mov
mov
outsb
leave
inc
mov
aam
pop
mov
fdivrs
inc
std
aam
jge
push
sahf
add
xchg
fistps
pop
aam
icebp
insb
cmp
pop
lock
lea
dec
jecxz
or
add
fs
push
inc
roll
jbe
or
xor
lret
ret
pop
iret
fidivs
fmull
in
lea
outsb
inc
int3
shl
cld
nop
xchg
push
mov
fxch
fs
add
ret
repz
pop
rcrb
outsl
inc
and
inc
jns
mov
popa
push
outsl
stos
ss
xchg
jge
sahf
out
cmp
movsl
mov
dec
aas
ss
shll
stos
divl
xchg
daa
sub
cwtl
ds
xor
stos
loop
loop
xchg
das
push
add
push
xchg
xor
daa
xor
mov
dec
rorl
mov
enter
lds
int
mov
ret
pop
adc
jbe
jne
shrb
sarb
addr16
xor
sbb
test
or
rorl
lods
cmp
pusha
jmp
sub
push
sbb
in
scas
inc
adc
push
add
mov
clc
mov
fstpt
arpl
and
add
and
pop
jge
mov
pushf
add
dec
mov
in
lea
movsl
fcoml
sahf
lods
cs
push
add
call
add
pop
test
mov
push
insb
loopne
sbbl
inc
jmp
pushl
and
mov
dec
sahf
push
movsb
insl
fs
je
aad
xor
jno
out
jbe
xor
mov
movsb
jnp
xlat
js
in
sbb
icebp
or
sub
pusha
repz
jmp
movsl
sbb
stos
ja
scas
push
lods
jo
push
push
gs
ja
mov
push
adc
jne
fcomi
test
adc
bnd
push
jmp
and
inc
xor
push
cmc
cmc
cltd
inc
std
jb
sub
dec
ja
mov
cmp
lock
lea
into
jae
adc
inc
sbb
shrb
or
inc
sbb
inc
outsb
xor
andb
es
loope
stos
lret
sahf
xchg
mov
mov
xchg
sub
roll
push
pushf
sbb
loope
aaa
sub
sbb
iret
dec
scas
adc
sbb
mov
add
jns
push
sub
movsl
xchg
lock
cmp
mov
popa
or
push
inc
pop
movsl
add
jp
mov
test
or
int3
adc
jb
bound
test
jb
scas
sub
hlt
inc
and
cmp
adc
adc
loop
or
scas
adc
fwait
mov
inc
shll
dec
js
push
std
cs
in
xor
aas
push
dec
in
xor
jns
dec
and
loopne
shrl
icebp
mov
lcall
fwait
icebp
dec
sarb
push
fstl
into
dec
iret
jecxz
mov
jl
rcll
mov
sub
sbb
cld
out
jae
popa
jmp
sub
inc
roll
add
arpl
rolb
insl
xchg
fcmovne
stc
loope
int
subb
jb
cwtl
add
or
nop
xor
mov
rcl
hlt
sbbl
loope
pop
lock
lret
mov
loop
mov
sub
out
sbb
fprem
xor
rcll
repnz
test
adc
mov
push
mov
inc
jp
loopne
jns
sbb
scas
pop
mov
out
dec
jp
or
addb
mov
pop
adc
and
sub
xorl
sub
jae
inc
pop
fisttpll
cltd
jl
jne
jns
xchg
aam
mov
and
add
cmp
add
mov
mov
idiv
mov
inc
imul
js
push
mov
cli
mov
mov
add
jmp
pushf
xor
outsl
loope
jmp
fdivrl
or
gs
cmp
and
xorb
dec
adc
mov
es
dec
aad
lods
gs
test
aaa
push
test
or
sbb
and
dec
lods
add
add
dec
jle
and
leave
je
movsl
push
pop
nop
push
cltd
adc
and
push
shrb
ljmp
clc
pushf
mov
jae
xor
scas
dec
push
dec
and
sub
out
and
jbe
sub
inc
mov
popf
andl
jb
bound
pop
lea
adc
add
loop
movb
or
pop
leave
xchg
mov
jb
in
cmpsb
in
lock
add
mov
out
inc
pop
popf
jo
repnz
dec
ja
shlb
insb
pop
mov
sbb
xchg
mov
jmp
and
out
xor
and
push
int3
and
add
sub
loopne
scas
push
jns
pusha
mov
test
jnp
loop
xchg
arpl
push
fwait
xor
jle
arpl
lcall
dec
testb
mov
movsl
push
repz
mov
jbe
stos
in
xchg
shll
adc
mov
pop
mov
sbb
mov
add
inc
lea
out
inc
mov
add
stc
std
fs
xlat
jge
clc
lret
call
nop
ss
mov
xchg
roll
out
gs
jnp
push
xor
push
lods
add
lods
adc
inc
notb
in
jecxz
pop
rcrl
insl
nop
inc
pop
sub
divl
test
and
cli
insb
dec
js
xchg
fildl
nop
ss
aam
fs
inc
xchg
pop
and
fs
fcompl
xlat
lds
jp
loop
insl
pop
cmp
inc
cs
shrl
sub
fistpl
xchg
push
out
mov
cltd
mov
push
das
leave
dec
mov
or
gs
out
andl
mov
insb
gs
fldenv
add
sbb
adc
loop
lea
push
or
push
pusha
into
aad
lea
adcl
rcl
sbb
test
dec
mov
js
push
and
dec
cmp
inc
lahf
add
divb
test
adc
and
ror
mov
jae
xchg
inc
mov
pusha
pushf
orl
jbe
adcl
cli
loope
mov
xchg
inc
jecxz
movsl
jmp
jno
ljmp
es
cmpsl
fpatan
jb
into
add
add
mov
dec
sub
faddl
and
and
loope
ss
mov
push
pop
sub
or
jno
enter
les
xor
add
xchg
sub
inc
jno
out
sbb
test
adc
test
mov
dec
jb
dec
sub
fadds
inc
cwtl
in
inc
mov
jae
adc
scas
cltd
and
pop
cmp
inc
stos
xor
repz
jmp
cmp
call
xchg
addr16
or
pusha
push
jb
push
mov
stos
sub
pusha
pop
adc
push
nop
je
jne
push
popfw
shll
enter
movsl
push
and
inc
in
je
mulb
loope
or
sbb
sbb
aas
dec
dec
lahf
stc
rorb
test
clc
std
pop
dec
cmp
jg
jl
jp
cs
adc
push
pop
leave
data16
dec
iret
and
add
in
dec
dec
ffree
dec
fstpt
sub
push
jle
lahf
loopne
sbb
pop
bound
add
mov
dec
rorl
sbb
push
lds
mov
or
jmp
xlat
xor
sub
or
cmp
ds
dec
orb
notl
adc
adc
or
xchg
js
mov
dec
sub
push
mov
out
cld
cmpsl
and
stos
xor
inc
jmp
jo
xchg
cmpsb
sbb
loope
movsb
sbb
sub
hlt
mov
xor
stos
cwtl
xor
data16
addr16
adc
add
and
in
push
iret
shrb
jge
insl
rcrl
sbb
push
loope
repnz
shll
xchg
push
jmp
jne
sub
mov
addr16
out
pop
iret
adc
push
add
sbb
mov
mov
cmp
mov
or
fsts
sbb
out
or
mov
daa
jp
dec
ret
adc
lock
out
jp
pop
cltd
pop
test
dec
lock
hlt
ret
xchg
jmp
jnp
mov
inc
mov
dec
push
and
arpl
xchg
push
popl
jge
jmp
mov
jl
xlat
test
mov
clc
stc
testl
shl
mov
and
in
mov
or
push
xor
jmp
sbb
mov
pop
mov
add
xchg
jb
adc
cmp
xchg
inc
repz
cmp
pushaw
call
adc
xchg
sub
repnz
stos
push
shl
cltd
mov
xor
dec
out
imull
ljmp
xchg
sbb
adc
sar
xchg
mov
mov
and
sub
pop
scas
cmp
popa
jo
xor
or
scas
or
mov
cmpsl
ljmp
fcomps
and
cltd
add
and
or
lahf
hlt
push
xlat
imul
add
push
xorb
xchg
pop
clc
pop
jl
sub
and
or
cltd
add
call
mov
sbbl
in
add
test
jbe
cmp
jge
cltd
cmp
mov
and
call
leave
popf
cmp
addl
add
loope
out
push
and
push
ret
mov
data16
xchg
testl
push
ret
dec
and
sub
jle
add
bound
mov
into
jae
fldt
fcompl
sub
dec
fnstenv
xchg
nop
inc
popa
mov
fsubrs
nop
cmpsl
push
arpl
gs
mov
sarb
push
insl
sbb
and
add
into
add
push
cli
cltd
fcomps
pop
in
adcl
dec
mov
je
mov
adc
push
and
sub
lods
sahf
inc
and
dec
js
rcr
mov
pop
xlat
rolb
sarb
mov
jecxz
or
leave
imul
rclb
lds
cmp
int3
test
jo
mov
xor
shlb
xor
ret
xchg
mov
sbb
dec
jb
xor
xlat
into
nop
stc
insb
clc
jp
andb
cmp
stos
repnz
popa
jbe
stc
mov
jns
hlt
movsl
fiaddl
nop
xchg
hlt
add
push
inc
add
push
lcall
jbe
hlt
inc
sub
and
es
sub
jne
jne
test
dec
pop
mov
pop
push
dec
cld
js
iret
pop
inc
pop
cmpsb
pop
scas
mov
daa
hlt
or
xor
lods
inc
inc
xchg
lds
enter
mov
sbb
mov
mov
inc
mov
into
pop
shl
leave
repz
and
pushf
hlt
repz
mov
xlat
mov
sbb
adc
adc
jmp
sarb
inc
lods
insb
mov
cmpl
and
push
push
push
inc
cmpsb
out
and
fsubs
inc
jne,pn
mov
das
nop
sti
jne
push
inc
ffree
daa
xorl
mov
mov
xchg
scas
or
mov
inc
xchg
and
clc
shlb
call
dec
push
push
fstps
loope
xlat
xlat
adc
sbb
add
adc
push
push
shlb
mov
or
lods
outsl
mov
pop
stos
out
push
inc
ret
insl
push
test
bound
and
sbb
fmull
pop
int3
outsl
out
fnstsw
mov
movsb
xchg
test
xor
insl
pextrw
or
or
icebp
aam
mov
mov
loopne
nop
xor
dec
push
jb
lret
jp
in
xchg
lods
sbbl
fwait
imul
pop
negb
add
jg
orb
xchg
inc
and
in
ror
insb
or
or
stos
cmp
xor
mov
and
and
lcall
dec
and
sub
sub
cmc
adc
leave
add
add
jb
xor
pushf
sub
loope
mov
aad
xor
inc
int
jo
notl
jge
push
adc
add
cltd
adc
subb
lds
mov
daa
stos
dec
mov
mov
cmpl
inc
rorb
call
mov
mov
and
rclb
stos
aaa
ret
daa
sub
or
push
pop
or
sbb
jns
xor
and
mov
mov
adc
clc
mov
pop
jno
sub
lods
ja
movsb
popf
mov
enter
pop
nop
and
mov
in
shll
jmp
mov
inc
jo
push
jle
dec
movsb
lea
jg
cltd
cwtl
mov
jo
xor
loopne
pop
ret
hlt
scas
xchg
insb
mov
ljmp
fs
or
jg
add
data16
sub
lea
mov
cltd
add
push
test
and
stos
and
xor
addb
inc
stc
addl
xchg
pop
inc
data16
in
jmp
repnz
push
add
and
pop
scas
adc
dec
pop
pusha
jge
fsub
add
int3
pop
mov
inc
cld
ret
mov
or
dec
std
repz
ret
dec
inc
sti
inc
sbb
out
xor
or
inc
or
pusha
inc
cmpsl
pop
das
jnp
pop
push
add
scas
gs
pushf
inc
sub
or
enter
push
push
js
push
cmpsl
jo
out
scas
push
ret
or
dec
out
inc
pop
sub
adc
in
lret
mov
pop
or
outsl
inc
add
pushf
dec
andl
int3
push
in
pusha
pop
dec
test
lret
xchg
dec
add
mov
add
rorl
sbb
fucomi
adc
bound
and
adc
add
and
shl
and
dec
stos
adcb
push
and
xchg
shl
add
mov
popf
int
jne
sbb
xchg
add
loopne
rolb
mov
loope
orl
repnz
or
hlt
mov
lea
in
cwtl
ret
test
ret
cli
and
ret
fwait
and
ret
mov
and
ret
mov
and
dec
jno
push
push
js
dec
inc
add
xlat
iret
adc
cs
ja
xor
js
cmp
jns
cmp
iret
jnp
aas
iret
jl
cmp
jge
cmp
jle
cmp
jg
sub
jo
int3
lret
xor
jo,pn
addr16
movsb
es
movsl
es
cmpsb
es
mov
jecxz
test
in
test
es
stos
es
lods
es
scas
es
and
rcll
out
mov
es
movsl
es
cmpsb
es
cmpsl
es
test
in
test
es
stos
es
lods
es
scas
es
and
rcll
out
mov
test
mov
icebp
leave
mov
repnz
mov
repz
mov
sub
leave
mov
sub
leave
mov
sub
leave
mov
sub
ret
xor
hlt
les
and
xor
jbe
xor
ja
xor
jo
xor
das
jb
aaa
das
jae
cmp
jl
cmp
jge
cmp
jle
cmp
jg
cmp
js
cmp
das
jp
aas
das
pop
jne
lahf
js
sbbl
inc
repnz
out
mov
testl
mov
repnz
mov
mov
std
inc
mov
mov
clc
inc
mov
mov
jmp
push
mov
cmc
inc
mov
testb
dec
mov
lock
mov
icebp
dec
mov
repnz
mov
lods
cld
dec
mov
lods
decb
decl
clc
dec
mov
lods
cli
dec
mov
cmp
mov
xor
dec
jle
pop
dec
das
mov
lret
mov
add
loop
mov
repz
cmc
add
testl
cltd
stc
add
sti
add
std
add
out
add
mov
add
test
cmpsl
mov
or
or
or
add
repz
or
xchg
insl
and
orb
mov
mov
dec
shl
or
xchg
sbb
xchg
jo
lea
outsb
adc
lock
pop
xchg
adcb
lret
shrl
sarl
push
pop
xor
mov
push
xorb
fstp
lods
lret
jl
xchg
jb
cmp
jge
cmp
pop
jp
aas
pop
jnp
push
pop
xchg
dec
fdivrs
int3
or
rorl
mov
and
xchg
std
add
mov
ret
stc
outsl
subb
ljmp
xor
fs
jmp
mov
clc
push
pusha
and
sub
xchg
xor
xchg
aas
xchg
jo
pop
mov
dec
fstpl
or
inc
arpl
loope
jecxz
cltd
rclb
in
mov
idivl
xchg
imul
push
iret
fldl
push
and
dec
repz
sbb
sti
cltd
shl
lea
cwtl
test
cli
mov
pop
in
dec
inc
dec
lahf
dec
inc
add
inc
push
mov
notb
mov
clc
mov
cltd
jge
mov
lcall
mov
fdivrl
push
xchg
jp
sbb
jnp
sbb
push
int
push
inc
andl
mov
lahf
sbb
shrb
roll
daa
ret
xlat
xchg
mov
xchg
in
pop
lea
popa
or
push
add
lds
int3
add
push
or
movsb
dec
mov
sub
iret
lods
imul
mov
dec
aas
insb
pop
jae
icebp
ja
or
xor
push
dec
pop
jle
cmp
into
jb
xchg
ret
lahf
xchg
mov
ret
out
adc
jmp
cmp
cld
std
mov
hlt
mov
pop
pushf
xor
push
popf
ss
push
jg
into
pop
or
outsl
pop
mov
aad
adc
xlat
cmp
pop
rorb
dec
shll
xchg
mov
xchg
shl
test
out
scas
iret
xor
pop
sub
loopne
add
lock
adc
lock
fcomip
or
daa
push
aam
dec
xchg
or
dec
gs
jae
add
mov
pusha
enter
jns
loopne
aas
mov
inc
xlat
xchg
fs
stos
faddp
bound
inc
jae
add
roll
lea
add
leave
rolb
xor
js
cmp
jnp
ds
jge
cmp
dec
sub
jge
enter
pop
push
push
dec
cwtl
jg
mov
sti
sbb
inc
and
mov
push
xlat
addr16
cmpsb
divl
jl
into
sbb
inc
adc
inc
mov
xor
dec
mov
test
mov
movsb
xchg
push
xchg
push
mov
jl
push
xor
inc
orl
lods
fnstcw
push
scas
sub
rorl
movsl
insb
inc
insl
push
pop
xor
add
mov
pop
fwait
sbb
cmp
sub
pushf
pushf
cmp
lret
aaa
pushf
push
dec
cmp
pop
mov
das
pop
sub
inc
xchg
sbb
fimuls
and
sahf
lds
and
lcall
mov
or
in
cmpb
out
mov
fsubl
xchg
mov
in
sbb
mov
mov
adc
sbb
js
nop
into
push
or
jg
adc
in
aad
adc
fistpl
lret
sbb
daa
mov
popa
fidivrl
je
dec
adc
ja
push
js
dec
sbb
sub
lret
jae
inc
faddp
pop
rcr
mov
int3
lahf
lea
iret
adc
xorb
cltd
idiv
xor
push
out
inc
sahf
call
mov
add
cmp
push
inc
jle
cmpsl
repz
xor
mov
movsb
mov
sbb
int
orl
mov
mov
dec
sbb
adc
lret
ret
mov
test
xchg
inc
inc
jecxz
lods
inc
push
xchg
or
mov
clc
adc
loope
sbb
std
repnz
and
rcrb
xchg
es
jae
insb
push
cmc
sub
xor
lods
push
aam
sahf
xor
sbb
lahf
or
or
inc
inc
push
xor
out
mov
into
popf
inc
mulb
dec
jb
and
pop
jp
sbb
mov
int
jne
inc
mov
dec
lea
add
xchg
mov
imul
subb
ret
push
pushf
setp
inc
push
loope
cmpsl
ljmp
xchg
xchg
mov
in
or
and
int3
xchg
push
enter
mul
aam
addr16
dec
test
cmp
cltd
bound
adc
fwait
or
call
jmp
push
or
inc
dec
rcrl
rcrl
nop
add
and
jbe
mov
sti
sbb
fdivs
enter
cmp
jge
mov
pop
sub
or
in
shll
inc
mov
xchg
cld
xchg
and
mov
jecxz
mov
pop
xchg
add
out
lds
adcl
sbb
in
mov
cmp
xchg
sbb
test
dec
imul
adc
jbe
cmp
inc
cltd
dec
outsl
and
mov
iret
mov
repnz
out
clc
test
cmc
and
jbe
idiv
out
xchg
jae
cmp
cmp
jge
cmp
push
cmp
jle
add
aas
sub
pop
dec
out
xlat
or
shr
addr16
jae
or
in
pusha
ror
movsb
jo
in
rcrb
ljmp
repz
push
movsl
data16
repz
pop
cmc
adc
ds
xorl
out
and
push
jle
pminub
popf
scas
fidivrl
sahf
inc
lret
jecxz
jnp
shl
jle
mov
sbb
lret
pop
push
pop
or
push
stos
xchg
mov
out
add
add
pop
subl
pop
test
sbb
and
out
xchg
jg
dec
xchg
test
sbbb
xchg
ftst
mov
lds
lret
or
jg
mov
lahf
stos
sub
fucomip
das
into
lods
sbb
fildll
insl
inc
ja
sub
rol
mov
cmp
les
repnz
cmp
scas
push
cmp
jg
cmp
imul
jmp
pop
fadd
mov
xorl
pusha
es
insl
mov
cmp
pop
cmp
sbb
lods
dec
shll
push
cmpsl
and
mov
mov
insl
mov
xchg
scas
je
xchg
das
imull
addb
pusha
daa
mov
dec
cmpsl
and
cmp
test
cmc
and
orl
jecxz
adcl
pop
inc
fbld
aas
in
pop
mov
cmc
iret
lcall
in
jns
add
pop
jo
in
repz
mov
test
or
cmp
aaa
jbe
fcomi
rcr
ret
hlt
rorb
mov
imul
out
ret
iret
enter
and
adc
jb
push
jae
test
aam
inc
mov
ret
fsub
jle
cmp
sub
repnz
in
pop
cld
nop
pop
pop
cwtl
and
fs
es
test
aad
mov
jmp
xor
mov
jbe
pop
lock
es
jo
fs
xchg
dec
cmpsl
lret
mov
call
pusha
jno
xchg
jne
push
mov
sub
bnd
shlb
shrb
cwtl
ret
leave
cvtps2pi
loopne
imul
xor
xor
mov
sub
pop
dec
lock
fdivrp
push
ret
sub
les
push
pop
test
push
ljmp
cmp
out
mov
xor
or
ret
add
orl
aam
xchg
shlb
adc
xor
lret
fnstsw
aas
or
push
pcmpeqd
fmul
lea
fisubs
push
cmc
daa
icebp
xchg
mov
test
fisttpll
js
pmaxub
mov
leave
xchg
andl
dec
into
inc
or
mov
lea
sub
adc
popa
push
add
cmp
jle
or
or
and
xor
lds
push
test
jmp
cmp
pop
test
xchg
jp
stos
or
sbb
jecxz
inc
pop
xor
cmpsb
cltd
dec
adc
test
cmc
cmpsl
pop
je
pop
and
xchg
imul
icebp
fcompl
xor
imul
jp
cmp
add
pushf
xchg
push
outsb
jb
imul
sub
bnd
mov
stc
push
adc
repz
cli
clc
andb
add
in
mov
add
addb
imul
test
mov
mov
cs
pop
dec
sti
inc
mov
pop
daa
daa
and
add
jns
repnz
test
cmpsl
stos
sub
std
sub
es
out
sub
lock
popf
test
ret
popf
std
cmp
cmp
aaa
xchg
out
or
lods
xchg
dec
adc
sub
pop
dec
dec
xchg
mov
stos
sahf
push
hlt
xor
es
mov
xchg
add
leave
sbb
xor
into
enter
mov
fldln2
ret
repz
mov
push
lea
dec
out
inc
xchg
mov
and
pop
inc
cli
add
or
inc
fisttps
dec
bound
xor
dec
loop
mov
js
inc
jo
add
dec
insl
add
std
push
push
ret
xor
mov
inc
push
xchg
push
shr
push
outsl
lretw
scas
arpl
and
push
mov
test
jns
and
test
push
xchg
rep
les
mov
xchg
movsl
js
xor
xchg
adc
fs
cld
add
cld
gs
stos
or
in
movsl
mov
jae
mov
cmp
cmpsb
outsl
fidivrl
sub
das
mov
data16
mov
jne
add
jecxz
adc
mov
sub
push
add
cli
test
mov
or
jbe
test
mov
scas
ja
xor
jnp
or
jno
lock
sub
in
jp
mov
mov
stos
jp
jge,pt
jge
scas
jo
or
loop
inc
or
lds
xchg
dec
outsb
orb
scas
mov
andb
xchg
inc
jecxz
mov
rorl
jle
adc
dec
test
xorl
test
mov
inc
add
xchg
in
orl
push
rorl
paddb
inc
fsts
icebp
mov
shrb
pop
scas
jecxz
cmpsl
xor
ret
and
mov
lods
cmp
outsl
or
and
xor
lret
mov
mov
dec
mov
out
mov
push
mov
xchg
add
push
rcl
jb
cld
repnz
xchg
sub
xlat
mov
cmp
xor
mov
mul
and
inc
inc
in
imul
loopne
test
shlb
dec
dec
adc
es
pop
cli
mov
popf
push
mov
push
out
cmp
outsb
cmp
ret
push
in
nop
scas
out
les
cmp
lret
cmp
dec
divl
scas
bswap
je
scas
cli
add
std
or
jmp
cli
inc
jle
mov
ljmp
mov
or
lcall
mov
jmp
mov
xchg
cmpsl
inc
inc
orb
dec
cmp
scas
jnp
push
movsb
sub
add
xchg
int3
xchg
inc
stos
xchg
arpl
je
daa
or
sub
stos
xor
inc
cmp
bound
repnz
xor
flds
push
mov
arpl
pushf
loopne
xor
xor
repnz
and
clc
mov
pop
mov
pop
inc
negl
repnz
sbb
sbb
pusha
xor
inc
or
call
jl
or
mov
outsl
push
rolb
dec
mov
xchg
movsb
xchg
mov
repnz
in
or
inc
and
and
cmp
cltd
and
adc
adc
int3
cld
xor
cli
inc
ds
jl
xchg
add
mov
xchg
cmp
and
arpl
xor
outsl
clc
xchg
pop
inc
or
or
mov
xchg
loopne
or
jecxz
add
cld
mov
sbb
aas
cld
fcmovnu
xor
xchg
mov
inc
cmp
cmp
int3
std
fcompl
pop
popa
mov
sbb
or
cmp
pop
iret
popf
add
xchg
lds
sahf
lea
jno
and
loop
or
xchg
iret
jo
mov
mov
pop
mov
int
orl
sbb
mov
sub
mov
stos
lds
lret
imul
xchg
sub
mov
fnstcw
paddsb
mov
repz
ljmp
repz
shll
out
push
roll
cli
cld
cltd
sbb
mov
cmpsb
xor
in
in
mov
stos
ror
xor
dec
xor
daa
insb
lret
sub
shlb
push
imul
inc
repnz
das
cmp
and
data16
mov
pop
xor
push
insl
popa
add
inc
ficoms
lds
dec
lea
mov
inc
lods
xchg
dec
or
out
jbe
aam
push
mov
inc
mull
or
movsb
fs
subb
or
or
cmpsb
shll
sbb
pop
pop
ret
and
outsb
int
mov
in
aam
xor
push
shr
inc
xchg
xchg
jp
pop
adc
test
jae
or
xchg
adc
mov
ds
clc
and
add
xor
pop
xor
sub
or
repz
in
mov
xchg
ljmp
mov
inc
pop
aas
ret
stos
shll
in
mov
xchg
add
out
mov
cmpsl
mov
add
mov
jg
fmull
das
mov
shl
out
cmc
mov
movsb
mov
leave
in
and
lret
rcrb
in
aaa
sub
dec
mov
or
mov
dec
insl
jl
cmpsl
sub
add
out
jl
inc
cmp
cmp
pop
pop
sub
icebp
out
imul
mov
dec
lods
xchg
imul
xor
nopl
mov
xor
int3
cmp
xlat
inc
sub
aas
inc
xchg
outsb
or
clc
and
int
mov
jnp
icebp
mov
call
or
sub
in
rorb
add
inc
or
mov
dec
gs
sbb
or
adc
imul
dec
jl
jecxz
and
fadd
mov
cmp
lods
test
xor
jecxz
add
inc
xchg
and
mov
icebp
adc
stc
arpl
xchg
pop
scas
in
xchg
shl
aaa
inc
adc
jecxz
mov
inc
mulb
cmpsl
int3
dec
sub
sbb
das
flds
int3
xor
jecxz
xchg
cmp
test
pop
in
loop
xchg
cltd
lea
fwait
outsb
jp
ret
cs
fldt
scas
adc
dec
aaa
movsl
push
cmp
iret
xor
ja
das
lret
dec
insb
sahf
sahf
popf
out
std
imul
outsl
sarl
add
in
call
stc
add
add
cmp
add
mov
ljmp
push
xchg
cmc
repnz
pop
in
icebp
pusha
dec
xchg
negb
in
mov
dec
inc
popa
jle
pop
or
xchg
out
retw
ljmp
jecxz
xchg
mov
and
mov
outsl
push
or
jg
sti
js
cmpsl
fwait
stos
push
pusha
pushf
mov
popa
inc
sub
subl
in
inc
xchg
int3
fstps
jg
incb
loop
out
dec
lds
movsl
test
lahf
jb
xchg
jo
or
mov
lods
pop
lods
outsl
jle
sub
cmovno
xor
je
cmp
addr16
movsb
imul
jbe
fsubrp
lcall
daa
add
jno
xlat
leave
outsl
pop
int
scas
jmp
bound
mov
stc
sub
pop
cld
int3
fwait
sbb
xor
out
pop
jle
inc
stc
xchg
sub
ljmp
enter
xchg
jmp
addl
sub
addl
inc
scas
fimuls
inc
adc
inc
push
add
icebp
movsl
dec
xor
dec
das
jb
dec
stos
fistl
or
idivl
mov
stc
stos
sbb
sub
pop
sub
cmp
gs
dec
outsb
jge
iret
mov
and
repz
adc
and
addr16
mov
xchg
mov
div
dec
inc
push
adc
jg
ljmp
sub
inc
inc
inc
in
inc
scas
jl
roll
es
orl
jmp
aam
in
lods
sbb
mull
inc
or
mov
ds
pop
sbb
cmp
dec
aam
movsl
dec
sbb
ss
sarl
mov
popl
sbb
pop
jg
sarb
loope
or
push
cltd
adc
jecxz
push
mov
movsb
lret
or
add
mov
inc
movsl
sbb
sbb
out
repnz
fildll
xlat
adc
jle
imul
fsts
scas
imul
repz
mov
enter
sti
pusha
addb
adc
imul
outsb
jae
push
nop
enter
add
leave
dec
or
dec
out
es
mov
sti
add
jecxz
lret
ret
cli
xchg
jge
push
imul
ret
out
and
jg
cmpsb
stos
adc
pop
inc
and
push
mov
dec
sahf
les
inc
pop
aaa
icebp
mov
je
lret
out
mov
mov
pop
ret
idiv
in
jge
add
pop
inc
adc
int3
lock
mov
pop
add
adc
js
out
inc
int3
insl
int
xor
jne
dec
call
shll
test
int3
dec
add
gs
mov
iret
das
or
ss
inc
aas
stc
mov
dec
std
push
push
jmp
mov
inc
out
filds
add
sub
incb
insb
orb
push
mov
xchg
pop
daa
roll
xchg
mov
ljmp
shr
mov
mov
sbb
int
sbb
lahf
xorb
jnp
inc
sbb
add
cmpsl
add
or
jl
mov
jns
cmc
ret
inc
int3
sub
ret
inc
and
add
pop
movsl
divb
add
dec
xor
sub
mov
xor
js
inc
mov
add
outsb
or
addr16
cltd
jecxz
repz
movsl
mov
and
in
mov
pop
std
dec
adc
testb
add
and
dec
mov
and
daa
es
mov
cmc
and
dec
add
dec
dec
xor
lret
add
in
sub
cmp
xchg
lret
mov
rolb
and
xchg
inc
ret
add
ret
popf
test
inc
out
mov
sbb
or
xchg
repnz
and
mov
sub
scas
sub
xchg
cmp
dec
jg
scas
dec
mov
push
sbbb
je
sub
into
adc
dec
pop
into
aaa
dec
vpcomb
outsb
call
push
sbb
or
nop
fmull
mov
mov
add
xchg
xchg
xchg
add
idiv
add
xchg
mov
dec
jle
pop
inc
sub
test
arpl
call
roll
or
lods
out
adc
add
jecxz
mov
push
shrl
pushf
mov
fcoms
lock
pop
clc
mov
jecxz
int
loop
push
dec
push
pop
pop
insl
data16
arpl
pop
adc
mov
pushf
aas
dec
dec
fwait
arpl
push
and
push
ds
or
cmp
out
sub
cwtl
adc
dec
jae
loop
jns
ror
rorb
fdivrp
xchg
mov
stos
inc
jle
xchg
push
rcrb
mov
add
lods
insb
in
test
popf
lock
pop
xor
into
dec
dec
ffreep
mov
fistpl
mov
stos
or
add
jae
pop
pop
cmc
dec
xor
aad
mov
dec
mov
sub
js
sbb
in
insb
xchg
jle
and
ds
stos
inc
inc
fwait
repnz
clc
lods
mov
dec
push
loopew
hlt
sbb
add
xchg
test
aaa
jbe
jnp
and
ret
push
shlb
fwait
inc
mov
ljmp
dec
mov
les
fstpl
call
hlt
dec
mov
aas
test
fldlg2
test
xchg
iret
cmp
mov
out
shrl
outsb
cmpsl
testb
pop
mov
cli
xchg
lret
and
mov
inc
push
addl
mov
mov
orl
js
out
jo
jb
jmp
in
rcl
lret
lret
inc
rorl
jns
insb
cli
mov
push
adc
fcoms
add
clc
sub
movaps
arpl
mov
adc
mov
dec
and
aas
mov
std
add
popa
inc
or
popa
leave
xor
scas
cmpsl
les
push
shlb
xchg
dec
dec
stos
xchg
into
lretw
fistl
lock
sarl
push
xchg
in
inc
adc
aas
jno
idivb
inc
and
cltd
or
idivb
push
xchg
into
bnd
mov
stos
adc
loopne
imulb
in
cmp
sarl
cmpsl
mov
lods
mov
rolb
iret
out
jp
pop
add
dec
add
xchg
adc
lds
insb
xchg
or
pusha
daa
adc
lret
lret
cmovne
dec
add
repnz
int3
xchg
popa
mov
test
mov
pop
lods
call
mov
sti
mov
cmp
xchg
lret
and
dec
pusha
leave
sbb
dec
cmp
loope
mov
inc
out
test
lcall
pop
cwtl
mov
mov
add
outsb
jecxz
adc
popa
cwtl
jmp
divb
add
jne
sbb
cmpsb
cld
inc
add
daa
sti
je
sub
lock
sbb
leave
inc
mov
add
sub
dec
test
or
mov
idiv
outsl
dec
jl
mov
jns
jp
jp
adc
mov
jge
out
les
mov
and
xchg
movsl
mov
pop
stc
bound
mov
popa
or
getsec
sub
or
mov
movsb
inc
fwait
xchg
in
cli
out
and
nop
mov
out
push
cmp
aam
xchg
mov
jns
gs
push
mov
jmp
mov
sbb
mov
insl
xlat
movsb
dec
negb
xor
aas
lock
into
loope
movsl
ds
mov
jns
dec
bound
or
test
mov
in
jb
in
push
rorl
ss
repnz
pop
mov
lods
lods
cli
push
bnd
out
pop
fcoms
fisubrs
les
dec
clc
xchg
loope
out
addr16
sbb
cmc
cmp
mov
cmc
and
add
add
add
or
xor
and
mov
in
icebp
adcb
jecxz
mov
adc
repnz
mov
inc
cld
push
popl
add
inc
adc
pop
pop
mov
inc
fdivrs
xchg
das
push
dec
loopne
lcall
sbb
xchg
pop
aas
stc
sbb
add
add
pop
incb
jo
add
iret
inc
push
pop
pop
sbb
sub
pop
andb
out
pop
inc
mov
pop
mov
push
mov
lahf
test
rorb
call
fcmovnu
push
aam
cmpsl
ljmp
cwtl
repnz
pop
add
pop
incb
xor
add
push
sbb
fildll
clc
or
or
pop
pop
add
sbb
pop
rcrb
mov
adc
mov
cmp
or
xor
aaa
inc
mov
sbb
jle
pop
xchg
pop
pop
add
add
mov
pop
out
pop
inc
mov
pop
mov
shrl
lahf
inc
pop
mov
or
pop
pop
xchg
cmc
pop
mov
scas
add
xorb
pop
mov
push
mov
and
in
pop
repnz
loope
cs
pop
jne
add
call
cwtl
mov
xchg
das
dec
sub
mov
test
mov
or
mov
adc
xchg
jo
xlat
mov
xor
dec
nop
push
lcall
xor
push
mov
cmp
pop
add
mov
xchg
call
pusha
iret
test
cwtl
mov
ret
add
adc
jne
mov
jno
test
push
pop
ljmp
pop
pop
mov
cmp
inc
xchg
push
xchg
ljmp
cs
pop
dec
xchg
subb
add
inc
movb
mov
enter
rcrb
pop
add
pusha
cmpsl
cmp
push
pop
test
sbb
add
pusha
xchg
inc
mov
cmp
gs
add
scas
inc
lds
pusha
inc
dec
push
popl
or
add
pusha
pop
inc
pop
push
pop
test
adc
add
xchg
inc
pop
push
iret
cmp
adc
inc
lds
pusha
inc
dec
push
popl
dec
in
cmp
sbb
add
pusha
pop
inc
pop
push
pop
test
adc
add
pop
jecxz
lahf
mov
xlat
inc
add
sbb
push
pop
mov
dec
sbb
add
or
or
les
aaa
outsb
push
xlat
fadds
inc
andb
lret
push
pop
xchg
rcrb
nop
xor
gs
mov
and
mov
push
fwait
xor
into
inc
cmp
adc
lds
cwtl
shll
push
test
xchg
pop
xchg
mov
test
xor
cmp
push
pop
xchg
rcrb
xchg
dec
dec
jo
or
pop
mov
call
mov
test
daa
fdivs
pusha
fldcw
xchg
jbe
add
push
inc
and
inc
sbb
push
cmp
rol
add
push
das
gs
rclb
mov
push
pop
add
fs
addl
pop
add
and
lods
mov
push
pop
push
nop
add
sahf
sub
push
pop
mov
xchg
add
xchg
adc
push
mov
nop
sbb
rolb
pop
das
movsl
addr16
inc
xor
xchg
std
push
jns
push
sbb
xchg
cmp
xor
dec
and
icebp
or
dec
mov
test
push
mov
mov
ret
mov
ss
adc
and
call
and
sub
pop
cmp
jo
adc
push
add
les
xchg
fxtract
es
jg
push
dec
adc
es
jg
push
dec
adc
pop
add
inc
inc
pop
fwait
xchg
push
push
lcall
push
cmp
jecxz
sub
push
adc
les
push
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
insb
add
add
add
add
add
add
and
add
pusha
add
addb
push
add
add
add
add
nop
add
addb
add
test
add
rolb
addb
add
lock
addb
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
icebp
add
add
add
nop
testl
add
or
add
adc
add
adc
add
add
nop
dec
add
pop
add
add
add
add
add
add
add
add
add
add
incl
pop
pop
pop
add
add
add
push
add
push
add
inc
add
add
bound
test
test
cwtl
xchg
cwtl
add
outsl
add
mov
add
jbe
jne
je
imul
add
mov
mov
add
stos
stos
add
pushf
pushf
add
mov
add
add
ja
outsl
outsb
insl
add
lcall
xchg
xchg
xchg
add
nop
add
push
add
pop
add
pop
add
push
add
lods
lods
add
stos
add
movsl
movsb
add
mov
add
xchg
xchg
add
aam
rcl
rolb
int
into
add
int
add
enter
mov
add
mov
scas
add
mov
lea
fldl
rcl
rolb
iret
rcl
add
fcmovu
add
aaa
cmp
cmpsl
cmpsl
test
add
dec
add
inc
add
jno
addb
add
std
std
add
cld
cld
add
sti
sti
add
cli
cli
add
stc
stc
add
clc
clc
add
div
add
div
add
cmc
cmc
add
hlt
hlt
add
repz
repnz
icebp
icebp
add
lock
out
out
add
out
out
add
in
in
add
in
in
add
jmp
add
ljmp
call
out
add
out
add
in
add
in
add
jecxz
add
loop
add
loope
add
loopne
add
add
add
fstp
add
add
fcmovnu
add
fcmovu
add
add
fcomp
add
xlat
xlat
add
add
aad
add
aam
add
rcl
add
rcl
add
rcl
add
rcl
add
iret
iret
add
into
into
add
int
add
int3
int3
add
lret
lret
add
leave
leave
add
enter
mov
les
ret
ret
ret
add
ret
rol
add
rol
mov
mov
mov
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
scas
scas
add
lods
lods
add
stos
stos
add
test
add
cmpsb
cmpsb
add
movsb
movsb
add
mov
mov
add
sahf
sahf
add
pushf
pushf
add
lcall
cwtl
cwtl
cwtl
add
xchg
xchg
add
xchg
xchg
add
popl
mov
lea
mov
add
mov
add
xchg
add
addl
addb
addb
add
add
jnp
jp
jp
jns
jns
js
js
jbe
jbe
je
je
jae
jae
jb
jb
jno
jno
jo
jo
outsb
outsb
outsb
add
insl
add
add
imul
addr16
data16
add
add
arpl
bound
add
popa
add
pop
add
pop
add
pop
add
add
pop
add
pop
add
pop
add
push
add
push
add
add
push
add
push
add
push
add
push
add
dec
add
dec
add
add
dec
add
inc
add
inc
add
add
inc
add
inc
add
cmp
cmp
cmp
cmp
cmp
xor
xor
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rcl
rolb
add
add
add
add
add
enter
in
into
into
add
add
add
rcl
mov
out
out
into
add
rol
mov
cli
cli
jmp
cmpsl
mov
cwtl
subb
rcr
push
cli
cli
rol
scas
lcall
jbe
test
jnp
insb
insb
insb
insb
insb
insb
insb
outsl
jae
je
mov
insb
insb
insb
insb
insb
insb
insb
mov
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
incl
add
incl
add
dec
lret
pop
add
clc
pop
add
loopne
add
addb
add
add
add
add
add
add
add
pop
jmp
dec
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
add
jno
jno
jno
jno
jno
jno
jno
jno
jno
jle
jle
pop
pop
pop
lcall
call
push
call
push
pushl
jbe
jbe
jbe
jno
jno
jno
jno
mov
mov
decl
dec
lcall
pop
lcall
pop
jmp
call
push
pushl
jbe
jbe
jbe
xchg
xchg
test
test
rol
decl
jg
ljmp
pushl
xor
pushl
xor
pushl
xor
pushl
xor
call
pushl
jno
pop
pop
pop
pushl
jbe
xchg
mov
call
xchg
xchg
pushl
int
pushl
mov
jb
jb
data16
inc
pushl
xor
pushl
xor
incl
jno
incl
fwait
fwait
pushl
mov
fdivr
loope
loope
loope
loope
loope
loope
fdivrp
xlat
xlat
xlat
dec
into
into
dec
enter
lods
lods
ljmp
outsb
jmp
decl
xchg
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
fdivrp
fcmovu
fcos
mov
mov
add
mov
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
mov
mov
mov
add
mov
mov
mov
mov
mov
incl
add
add
incl
add
incl
add
incl
add
incl
add
pop
add
clc
pop
add
loopne
add
addb
add
add
adc
pop
add
incl
inc
incl
push
mov
add
add
add
add
add
add
add
add
sbb
addb
add
mov
add
sbb
add
add
add
add
add
andb
pop
add
add
dec
add
hlt
adc
enter
mov
add
add
add
add
add
pop
push
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
or
add
lock
mov
repnz
loopne
jg
lock
xor
adc
pushf
lock
push
into
shll
add
add
add
ret
lock
add
add
add
add
adc
add
add
add
add
add
sub
add
and
add
inc
add
add
add
add
incl
pop
pop
pop
add
add
add
push
add
push
add
inc
add
add
bound
test
test
cwtl
xchg
cwtl
add
outsl
add
mov
add
jbe
jne
je
imul
add
mov
mov
add
stos
stos
add
pushf
pushf
add
mov
add
add
ja
outsl
outsb
insl
add
lcall
xchg
xchg
xchg
add
nop
add
push
add
pop
add
pop
add
push
add
lods
lods
add
stos
add
movsl
movsb
add
mov
add
xchg
xchg
add
aam
rcl
rolb
int
into
add
int
add
enter
mov
add
mov
scas
add
mov
lea
fldl
rcl
rolb
iret
rcl
add
fcmovu
add
aaa
cmp
cmpsl
cmpsl
test
add
dec
add
inc
add
jno
addb
add
std
std
add
cld
cld
add
sti
sti
add
cli
cli
add
stc
stc
add
clc
clc
add
div
add
div
add
cmc
cmc
add
hlt
hlt
add
repz
repnz
icebp
icebp
add
lock
out
out
add
out
out
add
in
in
add
in
in
add
jmp
add
ljmp
call
out
add
out
add
in
add
in
add
jecxz
add
loop
add
loope
add
loopne
add
add
add
fstp
add
add
fcmovnu
add
fcmovu
add
add
fcomp
add
xlat
xlat
add
add
aad
add
aam
add
rcl
add
rcl
add
rcl
add
rcl
add
iret
iret
add
into
into
add
int
add
int3
int3
add
lret
lret
add
leave
leave
add
enter
mov
les
ret
ret
ret
add
ret
rol
add
rol
mov
mov
mov
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
scas
scas
add
lods
lods
add
stos
stos
add
test
add
cmpsb
cmpsb
add
movsb
movsb
add
mov
mov
add
sahf
sahf
add
pushf
pushf
add
lcall
cwtl
cwtl
cwtl
add
xchg
xchg
add
xchg
xchg
add
popl
mov
lea
mov
add
mov
add
xchg
add
addl
addb
addb
add
add
jnp
jp
jp
jns
jns
js
js
jbe
jbe
je
je
jae
jae
jb
jb
jno
jno
jo
jo
outsb
outsb
outsb
add
insl
add
add
imul
addr16
data16
add
add
arpl
bound
add
popa
add
pop
add
pop
add
pop
add
add
pop
add
pop
add
pop
add
push
add
push
add
add
push
add
push
add
push
add
push
add
dec
add
dec
add
add
dec
add
inc
add
inc
add
add
inc
add
inc
add
cmp
cmp
cmp
cmp
cmp
xor
xor
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lret
lret
lret
lret
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
icebp
lock
push
jmp
aad
lret
add
add
add
add
add
add
add
add
add
add
out
mov
call
add
add
add
add
add
add
add
sub
xchg
jo
cli
cli
cli
mul
lret
ret
fmul
add
add
add
add
add
into
jecxz
xorb
mov
cli
cli
cli
clc
fdivrs
add
add
add
adc
ret
mov
cli
cli
cli
cli
cli
cli
cli
cli
fsubs
shl
lret
add
add
mov
iret
movsl
xchg
fwait
mov
shr
clc
cli
cli
cli
cli
cli
cli
clc
mov
lret
xchg
rorl
nop
xchg
sahf
mov
xchg
cltd
das
mov
cli
cli
cli
cli
cli
mov
stos
lret
xchg
cltd
lahf
lcall
jno
jae
test
out
cli
mov
lret
add
mov
xchg
pusha
fs
jno
jae
ja
addl
lret
add
xchg
popf
mov
pop
pop
pop
pop
popa
bound
push
jo
jae
ja
cmp
inc
lods
add
lret
pop
push
push
push
pop
pop
pop
pop
pop
popa
bound
push
jo
jae
ja
jns
add
add
push
push
push
push
pop
pop
pop
pop
pop
pusha
bound
push
jo
test
mov
add
add
add
nop
nop
nop
nop
push
push
push
push
pop
pop
pop
pop
pop
pusha
bound
jae
movsl
mov
add
add
add
add
add
add
push
pop
pop
pop
pop
movsb
movsb
movsb
movsb
add
add
add
add
add
add
add
add
add
add
add
fwait
popf
popf
popf
popf
popf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cld
aas
push
add
inc
add
add
pop
clc
add
pop
loopne
add
addb
add
add
add
add
add
add
add
add
add
add
pop
add
add
loopne
add
incb
pop
jmp
jg
incl
add
add
mov
add
add
add
add
add
add
add
sbb
addb
add
mov
add
sbb
add
add
add
add
add
andb
pop
add
add
dec
add
hlt
adc
enter
mov
add
add
add
add
add
pop
push
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
sub
add
sub
add
and
add
sbb
add
adc
add
pop
add
add
add
add
add
adc
add
add
add
add
add
addb
add
add
add
add
push
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
nop
es
xlat
inc
inc
dec
cli
pop
pop
pusha
sti
inc
inc
inc
out
sub
sub
and
push
push
lods
add
add
add
add
add
cmp
add
and
add
or
add
add
add
add
add
add
add
add
pop
pop
mov
inc
inc
out
popf
popf
decl
ljmp
jmp
incw
addb
pop
pop
pop
repz
adc
mov
add
nop
add
add
add
dec
add
add
add
add
add
add
add
adc
add
sub
add
dec
or
or
sub
ja
ja
mov
mov
fstp
xlat
xlat
xlat
incl
test
xor
xor
xor
xor
xor
xor
inc
inc
inc
lcall
pop
jp
jns
xchg
pop
ljmp
add
add
add
add
sbb
add
push
add
add
add
add
add
add
add
add
add
add
push
fwait
aas
aas
aas
fcoms
lret
fdivr
aad
aad
mov
addr16
jno
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
cmp
push
mov
out
pop
pop
pop
mov
add
add
add
sub
add
or
add
add
add
or
add
add
sub
mov
imul
cmpsb
cmpsb
fstp
fcmovu
ret
incl
popa
popa
incl
test
call
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xchg
xchg
lcall
pop
faddl
add
mov
add
add
add
add
sub
dec
dec
mov
ret
ret
ret
fstp
iret
iret
iret
jmp
insb
insb
pushl
jmp
mov
ljmp
test
xchg
lcall
cltd
cltd
decl
jae
call
push
cmp
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
cmp
mov
mov
add
add
add
add
test
aad
fdivr
mov
xchg
call
mov
ljmp
test
mov
mov
rcl
sar
jmp
into
int
mov
mov
mov
mov
test
test
pushl
cmpsl
cmpsl
jle
jle
pop
pop
pop
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
ljmp
inc
inc
mov
add
inc
add
add
lcall
jnp
decl
mov
mov
mov
ljmp
mov
inc
loope
loope
in
in
in
jmp
in
jmp
loopne
fdivrp
fdivr
fcmovnu
fcmovu
aam
aam
enter
mov
mov
mov
mov
decl
push
pushl
xor
pushl
xor
call
inc
mov
add
inc
add
add
stos
stos
mov
mov
pushl
scas
scas
inc
ret
ret
fcmovnu
out
out
out
in
in
in
jmp
out
jmp
in
jmp
jecxz
jmp
loope
jmp
loopne
fdivr
fcmovnu
fcmovu
xlat
xlat
xlat
call
call
rcl
dec
leave
leave
inc
mov
enter
mov
pop
pop
decl
dec
dec
mov
add
inc
add
add
pushl
lods
lods
inc
rol
aam
aam
in
in
in
push
icebp
icebp
push
icebp
icebp
push
lock
out
out
out
in
in
in
jmp
jmp
ljmp
jmp
in
jmp
in
jmp
loope
jmp
loopne
fstp
fcmovnu
fcmovu
fcomp
fdivr
call
aad
call
rcl
dec
rcl
call
rcl
call
rcl
lcall
cwtl
add
add
xchg
xchg
xchg
dec
lret
out
out
repz
cli
cli
cli
clc
clc
clc
push
div
push
cmc
cmc
push
hlt
hlt
push
icebp
icebp
push
lock
out
out
out
in
in
in
jmp
jmp
ljmp
jmp
in
jmp
in
jmp
loop
jmp
loopne
fstp
fcmovnu
fcmovu
fcomp
fdivr
call
aad
call
aam
pushl
cmp
cmp
add
push
add
add
addl
into
push
cmc
cmc
std
std
std
sti
sti
sti
cli
cli
cli
stc
stc
stc
push
div
push
cmc
cmc
push
hlt
hlt
push
icebp
icebp
push
lock
out
out
out
in
in
in
jmp
jmp
ljmp
jmp
in
jmp
in
jmp
loop
jmp
loopne
fstp
mov
cwtl
cwtl
out
push
scas
sub
sub
sbb
push
add
add
pop
pop
pop
adc
pop
fs
jecxz
sti
sti
sti
cli
cli
cli
stc
stc
stc
push
div
push
cmc
cmc
push
hlt
hlt
push
repnz
lock
out
out
out
in
in
in
jmp
jmp
ljmp
fcmovu
movsl
movsl
movsl
incl
push
push
andl
and
add
add
add
add
pop
pop
pop
xor
jbe
sahf
sahf
mov
mov
jmp
in
stc
stc
stc
push
div
push
cmc
cmc
push
hlt
hlt
push
repnz
lock
popf
popf
popf
out
imul
xor
arpl
add
or
push
push
push
inc
jbe
jbe
pushf
pushf
pushf
aam
mov
mov
mov
push
subl
das
xor
add
or
add
add
add
add
adc
add
add
add
add
add
add
push
add
inc
add
add
pop
clc
add
pop
loopne
add
add
add
add
add
rolb
pop
cld
add
inc
ud0
clc
incl
add
add
xchg
mov
add
add
add
add
add
add
add
sbb
addb
add
mov
add
sbb
add
add
add
add
add
andb
pop
add
add
dec
add
hlt
adc
enter
mov
add
add
add
add
add
pop
push
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
or
incl
pop
pop
pop
add
add
add
push
add
push
add
inc
add
add
bound
test
test
cwtl
xchg
cwtl
add
outsl
add
mov
add
jbe
jne
je
imul
add
mov
mov
add
stos
stos
add
pushf
pushf
add
mov
add
add
ja
outsl
outsb
insl
add
lcall
xchg
xchg
xchg
add
nop
add
push
add
pop
add
pop
add
push
add
lods
lods
add
stos
add
movsl
movsb
add
mov
add
xchg
xchg
add
aam
rcl
rolb
int
into
add
int
add
enter
mov
add
mov
scas
add
mov
lea
fldl
rcl
rolb
iret
rcl
add
fcmovu
add
aaa
cmp
cmpsl
cmpsl
test
add
dec
add
inc
add
jno
addb
add
std
std
add
cld
cld
add
sti
sti
add
cli
cli
add
stc
stc
add
clc
clc
add
div
add
div
add
cmc
cmc
add
hlt
hlt
add
repz
repnz
icebp
icebp
add
lock
out
out
add
out
out
add
in
in
add
in
in
add
jmp
add
ljmp
call
out
add
out
add
in
add
in
add
jecxz
add
loop
add
loope
add
loopne
add
add
add
fstp
add
add
fcmovnu
add
fcmovu
add
add
fcomp
add
xlat
xlat
add
add
aad
add
aam
add
rcl
add
rcl
add
rcl
add
rcl
add
iret
iret
add
into
into
add
int
add
int3
int3
add
lret
lret
add
leave
leave
add
enter
mov
les
ret
ret
ret
add
ret
rol
add
rol
mov
mov
mov
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
scas
scas
add
lods
lods
add
stos
stos
add
test
add
cmpsb
cmpsb
add
movsb
movsb
add
mov
mov
add
sahf
sahf
add
pushf
pushf
add
lcall
cwtl
cwtl
cwtl
add
xchg
xchg
add
xchg
xchg
add
popl
mov
lea
mov
add
mov
add
xchg
add
addl
addb
addb
add
add
jnp
jp
jp
jns
jns
js
js
jbe
jbe
je
je
jae
jae
jb
jb
jno
jno
jo
jo
outsb
outsb
outsb
add
insl
add
add
imul
addr16
data16
add
add
arpl
bound
add
popa
add
pop
add
pop
add
pop
add
add
pop
add
pop
add
pop
add
push
add
push
add
add
push
add
push
add
push
add
push
add
dec
add
dec
add
add
dec
add
inc
add
inc
add
add
inc
add
inc
add
cmp
cmp
cmp
cmp
cmp
xor
xor
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
ret
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
dec
out
dec
fcmovbe
lds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
loop
dec
add
or
push
out
jecxz
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
in
cmc
iret
xchg
add
lods
or
adc
in
daa
in
lds
add
add
add
add
add
add
add
add
add
add
add
add
add
icebp
out
stos
jp
or
lods
repnz
cli
cli
out
jecxz
mov
sbb
lret
add
add
add
add
add
add
add
add
add
add
add
fdivp
rcll
xor
cli
cli
cli
cli
cli
cli
neg
scas
or
in
add
add
add
add
add
add
add
add
add
out
mov
jo
ja
test
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cmc
fnstenv
lds
add
add
add
add
add
add
iret
jmp
movsl
jo
jae
jle
iret
out
push
mov
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
fistps
and
in
lds
add
add
add
add
xlat
in
les
test
xchg
sbb
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
fisubrs
add
add
xlat
loope
mov
jo
ja
movsb
shl
leave
lcall
popf
rcl
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
clc
leave
sbb
jecxz
add
add
int
jo
jb
mov
xchg
xchg
xchg
pushf
mov
sbb
iret
ljmp
cli
cli
cli
cli
cli
jmp
add
xchg
je
test
fbstp
cwtl
sahf
mov
push
adc
and
xor
pop
xchg
xchg
mov
lock
cli
cli
cli
cli
cli
cli
cli
call
lea
xchg
rcr
pushf
mov
mov
bound
jo
jb
js
adc
xchg
mov
cli
cli
cli
cli
xchg
mov
xlat
mov
mov
mov
pop
imul
outsb
outsl
jo
jb
je
jbe
xchg
pushf
shl
cli
cli
cli
stos
inc
xlat
shll
cwtl
sahf
mov
popa
fs
imul
jo
jno
je
jbe
jns
cmp
mov
xlat
mov
cltd
lahf
lahf
mov
pop
pop
popa
popa
bound
addr16
insl
outsb
outsl
jo
jno
je
jne
ja
cmp
inc
xlat
cmpsb
xchg
xchg
fwait
mov
pop
pop
pop
pop
pop
pop
popa
popa
bound
addr16
insl
outsb
outsb
jo
jno
je
jne
ja
cmp
cmp
dec
xlat
lods
pushf
xchg
subl
pop
pop
pop
pop
pop
pop
pop
popa
popa
bound
addr16
insl
outsb
outsb
jo
jno
je
jne
ja
aaa
inc
inc
inc
add
pushf
je
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
popa
popa
bound
gs
insl
outsb
outsb
outsl
jno
jb
je
ja
mov
add
add
rol
dec
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
popa
popa
bound
gs
insl
outsb
outsb
outsl
jno
cltd
leave
add
add
add
add
rol
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
fs
imul
lret
into
into
add
add
add
add
add
add
add
add
rol
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
fs
add
add
add
add
add
add
add
add
add
add
add
mov
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
jbe
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
push
push
push
pop
pop
pop
gs
lret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
ror
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
into
into
into
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
lcall
incl
add
cld
add
incl
add
jmp
add
add
incl
add
incb
add
incl
add
clc
add
add
add
rolb
add
add
incl
add
add
add
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
lock
add
jg
add
add
add
incl
add
lock
aas
incl
add
incb
add
incl
add
jmp
pop
incl
add
clc
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
sbb
addb
add
mov
add
sbb
add
add
add
add
add
andb
pop
add
add
dec
add
hlt
adc
enter
mov
add
add
add
add
add
pop
push
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
push
add
add
add
xor
add
add
add
add
adc
add
pop
add
add
add
add
add
add
add
add
add
add
add
push
adc
daa
sub
and
and
push
push
pop
ret
adc
add
add
add
add
add
push
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
or
or
sbb
mov
das
das
repz
aaa
cmp
pop
pop
pop
incl
jo
jmp
call
push
cmp
cmp
xor
xor
and
and
shrd
add
xchg
add
add
add
pop
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
push
push
andb
daa
iret
ds
je
je
mov
mov
push
dec
push
lcall
fwait
fwait
incl
pushf
pushf
lcall
xchg
cwtl
incl
je
jmp
incl
inc
repz
das
aad
adc
mov
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
sbb
sbb
dec
dec
dec
lcall
rcl
fstp
test
test
jb
jb
popf
popf
popf
incl
inc
pushl
xor
pushl
xor
pushl
xor
decl
dec
lcall
js
js
xchg
xchg
xchg
lcall
xchg
call
push
out
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
and
mov
cmp
repz
jo
mov
mov
fstp
fdivr
fcomp
fdivr
rcl
sar
xchg
xchg
xchg
decl
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
inc
inc
jmp
incl
pushf
pushf
incl
insl
sti
inc
inc
inc
fmull
or
lods
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
xorb
xor
dec
dec
dec
cli
nop
nop
nop
dec
leave
leave
fstp
fcmovnu
call
rcl
inc
mov
xchg
xchg
xchg
ljmp
push
decl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
incl
inc
jmp
lcall
call
jbe
sti
inc
inc
inc
xlat
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
push
push
sahf
cmp
cmp
fs
fstp
fstp
fcmovu
aam
aam
iret
iret
iret
pushl
je
dec
dec
dec
ljmp
jge
jl
cwtl
cwtl
cwtl
decl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
jmp
popa
lcall
lcall
sub
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
sub
sub
addl
fstp
fstp
fcomp
fdivr
rcl
sar
mov
call
push
push
lcall
pop
call
mov
pushl
pushf
pushf
call
mov
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
jmp
lcall
cwtl
xchg
ljmp
push
or
add
jg
add
inc
add
add
add
add
add
add
add
add
adc
cmp
popa
popa
popa
cli
xchg
xchg
xchg
call
aam
fstp
fdivr
call
rcl
jmp
jae
call
push
jl
jl
mov
mov
mov
mov
pushl
scas
jmp
mov
lods
lods
lods
incl
imul
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
cmp
jl
jl
stos
stos
stos
decl
daa
rolb
add
add
add
xor
xor
dec
dec
dec
fnstcw
js
stos
stos
stos
fstp
fstp
fcmovnu
aam
aam
rol
decl
pop
pop
pushl
jb
popf
popf
popf
mov
mov
mov
mov
mov
scas
scas
scas
ljmp
cmpsl
cmpsl
jmp
mov
ljmp
scas
scas
pushl
mov
jmp
mov
call
push
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
call
ljmp
test
mov
dec
dec
dec
dec
test
fstp
fstp
fcos
lret
lret
lret
jmp
je
jmp
popa
call
mov
mov
pushl
mov
lods
lods
lods
jmp
cmpsb
cmpsb
jmp
rol
fdivrp
clc
clc
clc
inc
ret
ret
pushl
mov
xchg
lcall
movsl
movsb
ljmp
scas
scas
pushl
mov
call
jbe
decl
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
call
push
pushl
addr16
add
jno
push
push
jge
mov
fdivr
fcomp
fdivr
mov
mov
xchg
push
ljmp
rol
mov
mov
pushl
mov
stos
stos
stos
jmp
movsl
movsl
mov
aad
push
icebp
icebp
jmp
jmp
jecxz
jecxz
fdivrp
fstp
fdivr
fcmovnu
fcmovu
aad
aad
mov
mov
lods
lods
jmp
stos
stos
ljmp
mov
mov
mov
decl
push
push
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xchg
in
add
add
push
push
mov
mov
jo
jns
jns
popf
popf
popf
inc
ret
mov
mov
mov
mov
mov
scas
scas
scas
ljmp
cmpsl
cmpsl
pushl
sar
jmp
out
out
call
loop
jmp
loop
jmp
loope
fdivrp
fstp
fdivr
fcmovnu
fcmovu
fcos
fcos
xlat
xlat
xlat
dec
int
inc
ret
ret
mov
mov
pushl
mov
mov
pushl
jno
cmp
cmp
xor
xor
xor
xor
xor
xor
mov
cwtl
cwtl
in
add
add
pop
pop
mov
jb
xchg
xchg
xchg
pushl
ret
mov
mov
mov
mov
mov
lods
lods
lods
ljmp
mov
inc
mov
out
out
out
out
out
in
in
in
jmp
out
jmp
out
jmp
in
jmp
in
jmp
loop
jmp
loop
jmp
loope
jmp
loopne
fdivrp
fstp
fdivr
fdivr
fcmovu
fcos
fcos
xlat
xlat
xlat
call
call
aam
dec
leave
leave
inc
ret
ret
mov
mov
ret
mov
mov
inc
inc
inc
pushl
xor
jmp
mov
add
pop
mov
rol
mov
mov
pushl
mov
stos
stos
stos
ljmp
rol
fdivrp
out
out
out
out
out
out
out
out
out
in
in
in
in
in
in
jmp
jmp
jmp
jmp
call
jmp
in
jmp
in
jmp
jecxz
jmp
loop
jmp
loope
jmp
loopne
fdivrp
fstp
fdivr
fdivr
fcmovu
fcos
fcos
fcomp
fdivr
call
call
rcl
dec
int
dec
enter
mov
dec
enter
jle
ljmp
cmpsl
cmpsl
ljmp
pop
mov
mov
mov
mov
scas
scas
scas
ljmp
mov
sar
ljmp
push
icebp
icebp
push
repnz
icebp
icebp
out
out
out
out
out
out
out
out
out
in
in
in
in
in
in
jmp
jmp
jmp
jmp
call
jmp
in
jmp
in
jmp
jecxz
jmp
loop
jmp
loope
jmp
loopne
fstp
fdivr
fdivr
fcmovnu
fcos
fcos
fcomp
fdivr
call
call
aad
call
rcl
call
rcl
dec
rcl
dec
into
into
dec
into
into
lcall
add
push
pop
pop
pop
mov
scas
scas
mov
int3
int3
jmp
loop
in
in
in
push
cmc
cmc
push
div
push
cmc
cmc
push
cmc
cmc
push
repz
repnz
repnz
icebp
icebp
out
out
out
out
out
out
out
out
out
in
in
in
in
in
in
jmp
jmp
jmp
jmp
call
jmp
in
jmp
in
jmp
jecxz
jmp
loop
jmp
loop
jmp
loopne
fstp
fdivr
fdivr
fcmovnu
fcos
fcos
fcomp
fdivr
call
call
aad
call
aam
fdivr
mov
add
bound
scas
scas
scas
fcos
jmp
jmp
div
idiv
cld
cld
cld
sti
sti
sti
cli
cli
cli
stc
stc
stc
stc
stc
stc
push
div
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
repnz
repnz
icebp
icebp
out
out
out
out
out
out
out
out
out
in
in
in
in
in
in
jmp
jmp
ljmp
call
out
jmp
in
jmp
in
jmp
jecxz
jmp
loop
jmp
loop
jmp
loopne
fdivrp
fdivr
fdivr
fcmovnu
fcos
fcos
fcomp
fdivr
inc
ret
xchg
xchg
xchg
incl
gs
add
add
arpl
and
js
test
into
into
push
cmc
cmc
std
std
std
cld
cld
cld
cld
cld
cld
cli
cli
cli
stc
stc
stc
stc
stc
stc
push
div
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
repnz
repnz
icebp
icebp
out
out
out
out
out
out
out
out
out
in
in
in
in
in
in
jmp
jmp
ljmp
call
out
jmp
in
jmp
in
jmp
jecxz
jmp
loop
jmp
loop
jmp
loopne
fdivrp
fdivr
fdivr
mov
mov
jl
jl
pop
pop
pop
mov
and
and
add
add
add
add
pusha
pusha
pusha
adc
pusha
push
pop
pop
pop
xchg
lea
mov
loope
loope
std
std
std
cld
cld
cld
cld
cld
cld
cli
cli
cli
stc
stc
stc
stc
stc
stc
push
div
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
repnz
repnz
icebp
icebp
out
out
out
out
out
out
out
out
out
in
in
in
in
in
in
jmp
jmp
ljmp
jmp
out
jmp
in
jmp
in
jmp
jecxz
jmp
loop
jmp
loop
dec
lret
lret
jmp
insb
insb
out
ds
add
add
pop
pop
pop
and
pop
fs
push
xchg
xchg
xchg
icebp
rol
call
cld
cld
sti
sti
sti
stc
stc
stc
stc
stc
stc
push
div
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
repnz
repnz
icebp
icebp
push
lock
out
out
out
out
out
out
in
in
in
in
in
in
jmp
jmp
ljmp
jmp
out
pushl
test
mov
and
and
add
add
add
add
pop
pop
pop
xor
push
test
jb
xchg
xchg
xchg
dec
leave
leave
push
lock
stc
stc
stc
stc
stc
stc
clc
clc
clc
push
div
push
cmc
cmc
push
hlt
hlt
push
repnz
repnz
icebp
icebp
push
lock
out
out
out
out
out
out
in
in
in
call
xlat
xlat
jmp
js
out
cmp
mov
xor
arpl
add
push
add
add
add
add
push
adc
push
push
push
push
push
movsl
js
js
test
test
rcl
sar
stc
stc
stc
clc
clc
clc
push
div
push
cmc
cmc
push
hlt
hlt
push
repz
call
mov
xchg
pop
pop
pop
int
cmp
test
xor
inc
add
add
add
add
push
push
push
and
push
je
pop
pop
mov
mov
dec
into
into
ljmp
jp
inc
inc
inc
mov
cmp
arpl
es
add
add
push
push
push
inc
dec
dec
dec
jbe
aas
aas
cmp
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
cld
pop
incl
add
jmp
add
incl
add
incl
add
incb
add
incl
add
lock
add
add
inc
add
add
add
incl
add
add
add
clc
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
cld
add
add
incl
add
rolb
ud0
add
clc
add
jg
add
incl
add
clc
aas
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
adc
add
add
add
push
add
add
adc
add
add
and
add
add
add
and
add
add
or
add
add
add
and
add
add
and
add
add
add
xor
add
add
or
add
add
add
add
add
add
add
push
add
add
add
