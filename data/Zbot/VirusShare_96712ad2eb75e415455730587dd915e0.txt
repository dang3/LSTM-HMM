jns
repnz
add
add
and
and
mov
xor
mov
bound
mov
xor
cmp
popf
sbb
push
adcl
pop
pop
dec
jge
cmp
or
in
inc
insb
cmp
shrl
or
jge
das
movsb
inc
cs
jne
xor
push
pmulhw
xor
movsb
jb
xor
xchg
add
sbb
cmpsl
pop
mov
xchg
or
mov
icebp
orb
adc
pop
push
sbb
pop
and
cs
lahf
xchg
and
xchg
pop
scas
fisubl
xchg
add
sbb
outsl
dec
push
popf
andb
pop
scas
fnsave
sbb
mov
out
out
inc
mov
gs
test
sub
enter
rcl
sub
test
pusha
xchg
mov
ret
roll
mov
add
out
cwtl
lret
adc
mov
cmpxchg
leave
inc
mov
fadds
push
push
nop
inc
jns
nop
or
adc
dec
mov
dec
aas
jns
or
inc
lea
add
adc
pop
adc
frstor
fisubrs
mov
adc
xchg
adc
or
xchg
push
fsubs
lea
or
sub
ljmp
les
loop
out
ljmp
stos
je
inc
mov
xchg
sbb
insb
dec
test
inc
jo
xor
test
jns
shr
jbe
or
push
ret
pusha
add
dec
pop
sub
stc
dec
pusha
sbbb
mov
add
xchg
mov
popa
in
cmp
sub
push
mov
pushf
xchg
add
dec
jno
stos
add
stc
repz
mov
push
mov
mov
lock
std
std
push
mov
fadds
adc
in
push
jne
push
dec
jmp
mov
mov
incl
inc
pushl
ret
mov
jb
or
xchg
outsb
or
addb
or
jl
sub
adc
es
sbb
and
cld
rorl
or
mov
nop
jmp
outsl
sub
inc
ds
mov
pop
adc
sbb
and
push
test
xchg
sbb
or
push
outsl
and
dec
movsl
or
push
sbb
cmp
dec
movsl
push
jns
icebp
jge
imul
call
push
movsb
push
add
dec
cmp
push
add
or
mov
sub
insb
push
or
sub
xor
cld
stc
cmpsb
mov
das
sbb
pop
ja
jnp
or
or
dec
movsl
push
dec
sbb
loope
loope
sub
xchg
ss
or
ffreep
call
push
cli
addr16
mov
push
sub
mov
sub
add
xor
push
imul
dec
cmp
lahf
sub
incb
and
je
jne
js
xor
add
rolb
enter
jle
inc
cmp
fstp
pushl
push
add
inc
push
jb
into
inc
add
dec
cmpb
popa
popa
mov
ret
mov
push
push
dec
xchg
aam
pop
cmp
shr
mov
addl
ret
cs
ljmp
out
inc
pusha
jge
and
lock
push
dec
or
xchg
dec
ja
das
jmp
test
outsl
testb
dec
mov
gs
fidivrl
lds
cwtl
prefetch
or
push
sub
push
xchg
mov
aad
dec
dec
dec
in
aad
pop
sbb
xchg
push
add
dec
std
fwait
xchg
sub
add
pop
int
int3
or
xchg
and
jnp
or
lods
pop
push
or
repnz
pop
cmp
filds
push
xchg
mov
sub
sbb
fdivs
jbe
hlt
mov
jbe
fwait
jl
pop
lods
daa
int
pop
adc
pop
aam
and
lock
inc
sbb
pop
adc
stc
xor
push
andb
test
dec
push
push
push
sub
movsb
gs
testl
je
mov
mov
mov
iret
iret
lret
pop
sub
push
jl
sub
nop
sub
prefetch
or
pushf
scas
and
lahf
add
and
xchg
and
push
sub
out
dec
ficompl
mov
pop
mov
dec
mov
lahf
int
movsb
mov
cli
push
inc
mov
jae
out
xchg
stos
inc
ja
lea
sbb
dec
aaa
cmpsl
out
pusha
ret
cld
cltd
xchg
fwait
cld
jo
nop
into
sub
aaa
out
or
test
or
jb
aaa
xchg
in
icebp
inc
mov
imul
es
test
mov
out
jp
dec
mov
cmc
sub
push
jmp
mov
test
xchg
xor
mov
push
sbbl
lock
mov
dec
movsl
push
jmp
loopne
enter
cwtl
adc
pop
dec
sbb
mov
scas
or
rcrl
push
xchg
loope
sbb
adcb
adc
or
push
sub
cmc
pop
adc
pop
pop
xor
test
xchg
out
or
mov
or
xor
adcb
cwtl
adc
xor
jmp
pop
xchg
in
das
push
inc
xor
test
sub
jmp
cmpb
scas
dec
sub
dec
movsl
cmp
mov
imul
add
mov
shrb
xor
jnp
jmp
add
mov
xchg
lret
ljmp
fisubl
add
inc
testb
addr16
in
cmp
mov
dec
or
scas
jne
lahf
loope
aad
cld
inc
xor
and
push
shll
lds
in
mov
mov
clc
pop
js
mov
cld
ds
addr16
cmpsb
lds
out
mov
sub
les
clc
xor
imul
inc
adc
wbinvd
icebp
push
cmpsb
sub
ret
add
test
sub
daa
ret
mov
scas
mov
ljmp
pop
jnp
popa
pushf
xor
and
shrl
add
das
fsubp
pop
mov
jmp
cmp
push
ds
pop
xor
xor
pusha
or
out
xor
fisttps
pop
jmp
pop
adc
fildll
in
shll
outsl
or
sub
add
fbstp
add
sbb
movsl
decb
data16
cs
mov
aaa
jno
sub
or
push
outsl
ret
dec
idivb
fwait
stos
int
sub
pop
xor
mov
inc
aaa
fisttpl
pop
lret
daa
mov
adc
sub
pusha
test
mov
dec
mov
push
xor
jnp
or
mov
add
mov
fists
sub
popf
push
pushf
bound
inc
lock
sarb
and
nop
iret
sarl
mov
pop
sub
xchg
andl
sub
dec
jnp
jno
mov
scas
jmp
gs
or
stos
dec
enter
leave
xor
rorb
dec
lock
sub
mov
test
or
sub
lock
dec
mov
push
push
popa
push
loop
fwait
mov
daa
imul
add
dec
dec
xchg
or
mov
sbb
cli
hlt
sbb
adc
and
and
or
push
xor
jno
mov
xor
and
mov
cmp
push
adcl
sub
push
or
and
rcrb
outsl
testl
or
test
sub
push
mov
pop
or
sub
sbb
jnp
shll
push
and
adc
or
das
and
fwait
stos
push
mov
xchg
pop
xchg
pop
pop
mov
mov
mov
sbb
loop
jge
movsl
cmp
ret
adc
and
adc
sub
stos
cmp
xorl
nop
out
lea
fbstp
test
xchg
push
icebp
lret
push
imul
xchg
lret
lahf
repz
mov
sub
popf
pop
add
out
inc
or
mov
push
jns
cmp
add
add
sti
xor
repnz
mov
inc
sbb
add
leave
les
les
dec
js
iret
xchg
or
frstor
xchg
jo
nop
outsb
lcall
mov
mov
add
push
insl
iret
lret
repnz
mov
adc
stc
mov
fisttpll
sbb
gs
and
xor
adc
push
movsb
cmp
insl
xchg
pop
in
or
cs
sti
cmp
ret
insb
xor
lea
or
xchg
xchg
mov
stos
xor
lcall
mov
mov
jecxz
repz
adc
xchg
sub
sbb
leave
insl
lret
dec
xor
ja
lahf
dec
push
sub
lahf
sub
lret
movsb
or
ja
dec
mov
cmp
mov
addr16
mov
or
in
je
lock
sbb
jns
lret
push
dec
cs
mov
xor
popa
outsb
inc
pop
jbe,pt
or
or
imul
jae
fs
ret
and
inc
test
nop
dec
mov
lahf
lahf
cvtps2pi
lds
mov
ja
iret
mov
sub
les
sub
repz
cli
jns
ret
xlat
and
sub
scas
xor
cmp
sbb
ret
dec
dec
or
sbb
scas
jno
dec
jg
stc
add
es
lcall
xor
repnz
sub
adc
push
xor
xchg
fstl
shll
jmp
ss
nop
adc
mov
mov
stos
outsl
inc
outsb
outsl
dec
into
dec
mulb
lret
es
mov
scas
rcrl
jnp
and
or
inc
iret
jo
lods
mov
cmpsb
or
outsl
nop
dec
shrl
add
add
pop
mov
fsubr
or
scas
fildl
push
push
mov
add
add
inc
adc
in
inc
xchg
mov
aaa
dec
pop
mov
rcll
pop
lock
jge
cmp
or
sub
pop
mov
je
mov
pop
jo
shlb
or
add
jge
in
mov
mul
addr16
stc
cmp
push
bound
mov
into
mov
cmpl
pop
shll
cmp
push
cltd
add
aaa
and
das
cmp
jne
and
sbb
stos
push
mov
sub
dec
outsb
add
xchg
outsl
js
test
repnz
sbb
add
mov
mov
jmp
testl
or
pop
sbb
dec
call
inc
and
data16
xchg
nop
dec
fcoml
pop
or
ja
mov
aaa
cmp
sbb
adc
cmp
mov
pop
dec
pop
call
fistl
sub
cmc
addl
add
ljmp
outsl
dec
rcr
repnz
add
xchg
movsl
jns
shrb
adc
adc
fdivrl
mov
mov
ret
jmp
pop
jmp
push
sbb
cwtl
mov
sbb
push
jbe
jl
and
stos
mov
xor
add
adc
ja
dec
pop
aas
loopne
dec
aaa
xor
fwait
cmpb
jmp
dec
cmpsl
daa
xchg
sbb
or
pop
sub
adc
dec
inc
outsl
filds
out
or
js
leave
cmp
rclb
test
cwtl
pop
cmp
ja
dec
movsb
cmp
lock
dec
push
dec
pop
push
inc
sub
ljmp
packsswb
test
outsl
scas
mov
push
jns
out
nop
out
inc
test
in
lahf
loopne
arpl
lahf
loopne
jp
or
xchg
pop
cwtl
nop
and
cmpsb
cmp
out
sub
mov
mov
int
jle
jne,pn
jp
int
sub
and
jge
dec
dec
xchg
enter
add
dec
aas
cmp
dec
ja
dec
out
ja
in
push
js
mov
or
mov
and
and
enter
adc
or
ds
fwait
adc
loopne
aad
leave
pop
pop
and
insl
jnp
sti
xchg
jb
repnz
sub
or
arpl
ficoms
std
lcall
icebp
out
lret
fwait
push
dec
decl
push
and
jo
fldl
and
lods
xor
lods
adc
or
mov
xor
cmpsb
pop
sub
or
jne
add
xchg
push
sbb
or
pop
push
movsb
in
stc
ja
add
xor
test
pop
push
xchg
rorb
ja
dec
xor
sbb
jmp
aam
in
rorl
mov
mov
insl
nop
pop
jmp
call
sub
lcall
or
jmp
shll
popf
adc
xchg
pop
mov
out
mov
stos
mov
or
mov
repnz
xor
cmpsl
pop
and
sahf
and
adc
pop
loopne
xor
cmp
cmpsl
pop
imul
or
ja
out
test
sub
aad
dec
pop
mov
mov
loope
loop
xor
push
mov
pop
scas
faddl
stc
add
leave
bound
repnz
inc
push
imul
cmp
je
or
mov
loopne
fsts
cmpsb
adc
sub
or
rolb
jmp
insl
repnz
and
popa
adc
subl
jne
imul
mov
push
mov
in
fnclex
sbb
xor
outsb
outsl
ds
ja
pusha
lods
mov
lds
faddl
or
ret
mov
rolb
sub
and
sbb
mov
popa
mov
dec
aam
mov
xor
dec
cli
push
mov
or
and
push
inc
mov
inc
and
jmp
mov
das
push
jns
sub
add
hlt
jge
add
adc
xchg
jmp
lds
repnz
je
jb
dec
dec
xchg
xlat
xchg
rorb
jne
addr16
out
fwait
add
pop
sbb
cmp
sti
or
xchg
andl
cmovnp
and
mov
dec
xchg
xchg
repnz
xor
adc
shl
daa
insl
loopne
cmpsl
cmp
pop
push
mov
shl
or
sbb
movhps
jns
inc
mov
inc
sub
or
dec
mov
sbb
outsl
pusha
fbstp
inc
sbb
dec
cld
xchg
test
jb
inc
xchg
jl
dec
dec
ja
stc
test
rcl
xor
fstl
or
lods
fiadds
sbb
cmp
sub
dec
sub
rolb
mov
push
jp
sub
pop
mov
fwait
nop
stos
push
popf
pop
sbb
xor
push
mull
inc
xor
lods
stc
inc
inc
ja
ret
jge
popa
sub
sbb
xchg
pop
dec
sbb
lret
rorl
les
loope
add
inc
pusha
inc
mov
xor
je
xor
sub
push
mov
xor
push
jnp
jae
jb
mov
pop
or
fildl
test
es
ljmp
or
pop
aad
mov
dec
enter
ret
inc
shlb
inc
mov
push
cmp
dec
shrl
dec
xor
dec
aaa
dec
outsl
cmp
or
rcrb
pop
sub
cmp
sbb
mov
sbb
fadd
add
xchg
jmp
pop
add
fsts
sahf
mov
push
jne
aad
and
xchg
icebp
and
shlb
fistps
jmp
ret
icebp
sbb
sbb
mov
sub
sub
es
cmp
cs
lods
aad
inc
in
jmp
jae
jno
xor
jge
ljmp
jnp
and
lahf
jle
push
xchg
lcall
cmp
in
mov
loopne
jo
outsl
cmp
sub
cmp
enter
dec
sub
push
mov
lret
push
mov
popa
or
sbb
inc
mov
mov
pop
scas
stos
cmp
dec
test
xchg
leave
arpl
xchg
inc
mov
std
mov
andb
jle
dec
shll
dec
sbb
xchg
lret
add
jno
movsl
cmp
mov
push
xor
push
sub
inc
or
outsl
mov
jge
mov
ja
jo
cltd
fwait
daa
mov
dec
fldcw
xchg
out
push
or
or
shll
outsl
sbb
rcrb
ret
mov
pop
and
pop
inc
push
aaa
push
ja
push
xchg
dec
xchg
xorl
test
sub
pop
sbb
out
daa
ds
jb
repz
xchg
fists
and
inc
aaa
inc
sar
mov
movsl
inc
push
insb
and
or
movsl
ficoms
mov
pop
cmp
cmpsl
sbb
andl
inc
ffree
je
pop
and
mov
mov
mov
aaa
xor
or
push
ljmp
popa
js
jne
push
sub
mov
dec
and
mov
movd
add
mov
ja
push
cltd
rorl
dec
ja
mov
or
jne
shlb
mov
xor
insb
xor
aaa
and
stc
outsb
adc
push
ljmp
stos
xor
pop
push
hlt
or
lock
test
outsl
dec
or
sbb
sahf
dec
jo
stc
pop
adc
inc
xchg
add
push
xchg
testl
test
or
and
push
adc
xchg
loopne
mov
imul
pop
cld
adc
xor
adc
jge
sbb
je
xchg
lock
repz
icebp
es
jno
inc
or
pop
pop
push
imul
ret
dec
pop
nop
fwait
jmp
ja
add
and
jmp
mov
xchg
cmp
inc
ja
dec
icebp
jmp
popa
leave
and
sub
cmpsl
push
jmp
ret
xchg
dec
jge
push
loope
add
adc
sub
adc
out
sahf
mov
scas
mov
rorl
loopne
push
pop
subl
sub
jb
dec
mov
jmp
mov
lea
push
mov
adc
lahf
loop
fmul
or
dec
ss
pushf
imul
jb
mov
add
dec
decl
jae
fwait
or
push
xorb
inc
inc
mov
add
jo
lock
push
mov
fwait
or
and
out
xchg
pop
push
in
and
adc
add
and
test
je
cmp
shlb
cmp
push
dec
scas
or
mov
inc
mov
dec
pushf
int
ret
imul
aaa
adc
inc
push
ljmp
and
mov
repz
leave
add
popf
pop
xor
sbb
aad
shr
test
outsl
ss
push
pop
jp
adc
adc
cld
adc
or
and
movsb
imul
outsl
decl
fmull
nop
out
inc
xchg
loop
xor
popa
popa
pusha
and
or
outsb
loop
xchg
outsl
xor
sbb
jmp
popf
or
dec
pop
stos
andb
inc
outsl
repnz
call
notb
insl
jno
incl
repnz
add
cld
cmp
xorb
adc
leave
call
push
arpl
or
sub
nop
pop
pop
add
inc
pop
push
es
popa
sbb
in
mov
jmp
jmp
in
add
jmp
xchg
push
clc
adc
test
daa
out
lcall
rclb
lea
sbb
fisttpll
leave
xchg
push
sbb
pop
ret
lahf
jecxz
lods
ret
cmc
add
fwait
sub
mov
mov
aad
or
jae
fcmovnbe
mov
scas
or
je
outsl
outsl
stos
aaa
ret
rcl
jo
push
cmp
or
sbbl
dec
fstl
testl
xor
add
push
out
lcall
xor
adc
cmc
xchg
add
fs
push
cmc
in
push
sub
cmp
cmp
shl
pop
and
xchg
aaa
ss
dec
xchg
pop
dec
mov
mov
or
mov
fidivrs
and
push
pop
fidivl
xchg
insb
ss
pop
add
or
movsl
das
es
scas
stos
loopne
aam
dec
inc
outsl
mov
push
dec
shlb
xchg
in
xchg
mov
pop
fldl
pop
mov
adc
jle
adc
js
cmp
or
rcrl
sbb
xchg
dec
push
lcall
scas
or
dec
popa
mov
gs
dec
dec
xchg
fildl
loope
nop
js
xchg
xor
push
pusha
dec
fwait
and
mov
rclb
bound
bound
mov
je
xchg
dec
pmaddwd
call
dec
in
jle
pop
lods
cmp
xor
fdiv
inc
pop
pop
and
rolb
jo
and
or
cmp
mov
aad
and
push
cltd
in
lret
pop
cmp
ja
leave
lcall
fnstcw
cmc
dec
ja
mov
outsl
shlb
cmp
ss
pop
sub
push
out
sub
ljmp
and
push
sbb
push
mov
xlat
test
nop
adc
jb
mov
test
dec
xchg
push
xchg
mov
lock
and
popa
movsb
adc
imul
outsl
push
adc
icebp
adcb
pop
xor
jns
nop
outsb
cli
push
filds
insl
dec
fwait
mov
sbb
out
je
cmpl
insl
xorl
xchg
pop
test
sbb
repz
lods
push
pop
add
adc
xlat
fwait
mov
xchg
icebp
aas
add
fbld
stc
rorl
cltd
cmp
sub
mov
fwait
sbb
sub
movsb
fwait
push
mov
push
rolb
add
popa
mov
pop
rcrl
push
int
dec
xchg
stos
out
iret
add
sub
xchg
adc
cmpsb
leave
inc
push
cmp
xorb
sbb
cmp
jnp
adc
sbb
leave
inc
dec
int3
fwait
sbb
pusha
daa
adc
or
add
popf
nop
mov
sub
out
sbb
sbb
imul
movsb
scas
jg
test
push
movsl
inc
push
decb
xorb
decl
rorb
xchg
add
sub
sti
or
push
lods
mov
out
sbb
pusha
sbb
lods
rorl
push
dec
dec
flds
and
sbb
in
shrb
sbb
sub
inc
jl
add
stos
mov
xchg
leave
leave
lds
inc
add
jno
push
test
bound
push
adc
into
dec
mov
ret
dec
sub
inc
mov
fwait
dec
pusha
testb
fcmovnu
inc
mov
outsl
xchg
adc
fxtract
mov
inc
xor
jnp
sub
das
or
sbb
out
fndisi(8087
jl
inc
xchg
aam
in
and
mov
xlat
dec
scas
in
adc
dec
fcom
sbb
xchg
mov
cmpsl
sbb
cmp
pop
sub
ja
inc
push
sbb
sbb
stc
xor
add
mov
stos
and
dec
faddl
dec
in
jo
adc
jne
adc
add
xchg
imul
jne
jns
mov
jg
adc
stos
aam
pop
add
sbb
insl
cmovge
push
sbb
add
dec
xchg
nop
cltd
stos
add
mov
or
and
scas
add
loope
in
add
push
add
sub
arpl
or
inc
or
movsb
fwait
cwtl
lahf
mov
in
andb
xchg
addr16
jae
outsl
mov
sbb
iret
sti
jl
mov
leave
or
outsl
rol
pop
inc
sub
hlt
mov
adc
sti
adc
xor
push
pop
cmpsb
add
add
dec
cmp
push
inc
jecxz
or
aad
sub
scas
fwait
sbb
adc
daa
arpl
inc
push
and
pop
xchg
insl
enter
int
call
aad
or
in
jbe
lcall
xor
lret
pop
xchg
inc
aaa
mov
mov
mov
dec
imul
rcr
js
and
sbb
out
add
cltd
lock
xchg
out
sbb
inc
aad
inc
mov
adc
adc
cs
pop
and
and
mov
std
les
add
dec
dec
mov
filds
movsb
dec
lret
xchg
shlb
cmp
adc
jecxz
push
lea
jl
mov
mov
xchg
xchg
add
jno,pn
jb
lcall
std
in
add
or
out
sbbl
xor
cld
movsl
adcl
out
jne
mov
imul
and
jo
scas
nop
sti
ds
imul
pop
in
ffree
inc
loope
decl
subl
push
test
and
mov
or
loop
in
inc
repz
aaa
mov
push
mov
imul
and
nop
je
shll
mov
test
testl
rclb
movsb
lods
les
loope
test
dec
movb
imul
and
popa
dec
cmp
inc
pop
cs
outsl
gs
ffree
cmp
jns
or
stos
push
imul
inc
jp
inc
call
xor
cltd
pop
lock
sbb
jg
ljmp
jno
adc
or
and
adcb
sbbl
xchg
and
cld
or
imul
or
jl
and
mov
out
inc
pop
scas
xor
aam
inc
pop
in
add
loopne
mov
add
dec
ret
dec
and
adc
xor
and
and
pop
adc
or
sbb
xchg
lret
shrb
outsb
xlat
xorl
xor
fstl
xchg
pop
pop
adc
ret
out
xor
scas
imul
ljmp
and
insl
and
push
adc
pop
xor
rolb
adc
xlat
sub
jns
or
movsb
out
inc
nop
dec
jbe
rcrb
sbb
dec
add
push
xchg
incl
or
jmp
dec
ret
clc
je
mov
sub
or
pop
repnz
mov
test
cmp
and
out
lds
or
pop
mov
and
add
xchg
addr16
lods
cli
push
sbb
mov
outsb
add
add
jbe
rolb
add
inc
sub
add
loop
incl
ret
or
mov
int3
cltd
or
cmp
aas
push
addl
sbb
call
mov
hlt
mov
xchg
cmp
xor
sti
imulb
scas
inc
divl
scas
imul
decl
cmp
lret
xor
in
ds
push
pop
add
clc
pop
xchg
mov
ljmp
call
dec
aam
cmc
cmp
loope
pop
and
insb
mulb
jbe
lods
shll
or
push
int
pop
mov
dec
mov
in
les
in
lods
adc
std
loop
pushl
dec
pusha
pop
pusha
xchg
inc
push
inc
push
cli
cs
sub
aas
rcrb
jl
mov
popa
lahf
decl
aas
sub
inc
jge
outsb
lahf
lds
push
mov
sbb
mov
or
ljmp
xchg
xor
push
shr
push
stos
fadds
mov
ss
pushf
pop
push
stos
in
add
jmp
aaa
test
divl
or
add
lea
test
and
adc
sub
inc
lcall
ja
xchg
ret
data16
add
push
fcomps
filds
stos
test
lahf
xchg
add
call
sbb
icebp
add
push
cmpsl
fmull
andb
xor
adc
mov
jmp
add
push
dec
jecxz
fwait
pop
inc
stos
popf
leave
jp
inc
push
sub
ret
cwtl
and
subl
jmp
shll
mov
push
mov
mov
jae
mov
adc
loopne
mov
jg
lcall
mov
in
cmp
pop
mov
cltd
popf
cltd
fcomi
pop
jae
gs
gs
decl
test
push
movsb
pop
pop
jbe
outsl
test
negb
lods
mov
rorb
mov
mov
mov
imul
add
sbb
lret
lods
sub
fisubl
jl
mov
inc
sub
add
add
test
sub
push
dec
pushl
add
call
int3
lds
clc
inc
les
mov
sbb
mov
mov
rcll
push
idiv
mov
cltd
addb
orb
sbb
push
addl
addl
outsl
or
add
lea
or
adc
adc
add
sbb
in
insl
std
xor
nop
add
cmp
sbb
xor
sbb
in
in
icebp
std
shlb
dec
xorl
xchg
jmp
outsl
std
call
add
sarl
rolb
rorb
test
inc
inc
dec
cmpsl
sti
in
in
pusha
mov
mov
xchg
inc
add
xchg
cmp
into
or
sbb
xor
dec
add
pop
adc
pusha
cmp
sbb
cmp
fbstp
dec
adc
lea
mov
pusha
add
mov
dec
stc
add
sub
out
jno
add
cmp
jecxz
int
xor
dec
popa
rep
stc
outsl
add
add
aam
xchg
pusha
add
mov
fistps
adc
add
xlat
pusha
add
imulb
inc
pop
add
pusha
dec
rorl
std
push
in
add
sbb
cmpsb
imul
arpl
jp
sar
mov
or
add
pop
fisttps
mov
cmpsb
jge
push
inc
cmc
das
scas
dec
inc
outsl
add
testl
or
or
aad
add
sti
jp
cmpsb
sub
sbb
push
shll
jge
test
mov
fucomp
pop
repz
sbb
dec
mov
fidivrs
orl
stos
cs
pop
sarl
pusha
or
loopne
stos
mov
dec
lods
cltd
mov
inc
sarb
test
add
jl
sti
stc
testb
ret
lock
cli
jnp
add
push
cmpsb
jns
cmpsb
inc
xor
cmpsb
stc
mov
fwait
ja
addr16
mov
dec
lock
aas
inc
sbb
or
cs
mov
mov
cmc
test
cmpsl
mov
mov
cmpsl
imul
dec
rcll
test
inc
xor
andl
inc
loope
test
fwait
mov
arpl
xchg
xchg
or
mov
mov
loopne
imul
mul
dec
stos
sub
mov
xor
jmp
mov
mov
stos
popf
dec
fsubp
push
push
sti
fbld
loope
loope
mov
in
out
ds
mov
movsl
sbb
test
pop
out
xor
xor
lahf
in
add
xor
addl
stos
int
mov
imul
fstps
pop
dec
dec
push
js
unpckhps
pusha
add
jne
mov
jg
push
mov
inc
jae
or
sbb
xor
add
cmpsb
mov
mov
push
push
test
add
jle
pop
jo
pop
mov
jo
push
push
cmp
sub
dec
jnp
dec
std
mov
in
flds
cmpsb
mov
xor
icebp
out
fbstp
int
mov
scas
xchg
adcl
lcall
pop
sbb
stc
scas
stc
imul
inc
sbb
adc
add
arpl
scas
jns
dec
test
add
lods
push
aas
xor
fsin
add
xor
xlat
sbb
cmpsb
stc
mov
add
mov
lods
insl
sbb
adc
popf
das
inc
sti
sbb
mov
or
out
gs
push
lock
inc
popf
jo
xor
fwait
xor
aaa
in
fildl
cwtl
or
jns
out
sbb
jbe
cli
aam
imul
outsl
pop
push
lahf
push
pusha
jle
cmp
add
mov
push
fiaddl
loopne
mov
sbb
mov
div
jecxz
shlw
iret
sub
mov
xor
or
mov
mov
cmp
jmp
mov
jl
dec
decl
pop
cwtl
mov
jno
imul
cmp
into
lock
loopne
sahf
jne
test
scas
push
fdivs
stos
mov
cmp
mov
add
add
xor
pcmpeqb
movsb
cmp
add
push
pushl
pop
xchg
add
xor
cmp
add
std
mov
adc
add
add
jp
sti
sbb
aaa
xchg
sahf
mov
add
in
mov
pushl
std
es
add
mov
adc
mov
add
mull
call
xchg
pop
dec
add
in
aam
xchg
jp
insb
std
dec
jo
std
adc
cmp
loope
jnp
scas
add
call
xor
and
popf
subl
push
std
pop
jno
fwait
mov
adc
divb
cwtl
mov
icebp
or
nop
add
data16
adc
rolb
fcmovnu
sub
gs
jg
mov
mov
and
mov
inc
jp
fstpl
mov
aaa
cld
jns
movsl
dec
xchg
cltd
idivl
pop
sub
loopne
mov
mov
mov
xchg
add
inc
lods
cmp
xor
int3
incl
adcb
rolb
mov
mov
mov
mov
out
lcall
add
outsb
mov
or
xchg
mov
ret
inc
add
mov
pushl
xchg
add
cwtl
add
pop
ret
jo
into
mov
sbb
jle
clc
lcall
cs
fs
xchg
mov
mov
push
xchg
dec
ljmp
cmc
mov
arpl
call
mov
scas
outsb
lret
cmp
ret
push
sti
pop
mov
jnp
push
leave
call
cmp
mov
xor
push
push
inc
mov
fistl
jecxz
mov
mov
inc
cld
adc
mov
sub
or
jg
mov
mov
and
hlt
push
cmpsb
push
icebp
xor
cmpsl
and
mulb
inc
repnz
in
mov
in
int3
mov
mov
mov
cmp
xor
mov
jmp
mov
add
movsb
punpckhdq
outsb
pop
push
xchg
ljmp
jmp
in
pushf
jp
push
add
xchg
pop
jg
cmp
pop
sub
xlat
ret
mov
loope
jl
aaa
pop
inc
pop
xlat
daa
incl
adc
stc
push
popl
bound
add
xor
pushl
cld
pop
xchg
movsl
jg
aad
cmp
into
dec
lea
add
mov
ret
dec
sbb
xchg
aam
push
mov
mov
and
aad
testb
idivb
es
mov
sbb
lcall
pusha
xchg
xchg
aam
pop
subl
sahf
dec
lds
push
icebp
lcall
adc
das
xchg
lds
in
add
mov
in
jnp
es
sbb
or
mov
lret
add
mov
pop
lock
clc
stc
add
dec
cmpsb
loop
pop
out
add
out
or
cld
in
jle
add
fdiv
loop
lcall
xor
rol
dec
rclb
cld
call
divl
add
add
inc
fdiv
sub
mov
jg
mov
xor
rcrb
add
mov
jb
mov
push
or
adc
inc
cmp
outsl
jg
mov
shlb
xchg
mov
inc
jl
xchg
mov
mov
push
icebp
mov
mov
xlat
les
test
xchg
mov
mov
pusha
out
scas
lods
or
pop
jmp
push
cmp
cmpsl
les
out
mov
stc
loope
and
and
repz
xchg
push
add
jb
arpl
cmp
ljmp
cmp
mov
cmp
clc
out
xchg
mov
xchg
push
mov
lock
push
iret
xor
enter
fcmovnu
hlt
jo
cmp
dec
mov
rcll
mov
hlt
mov
aaa
lods
cmp
jbe
or
and
push
cmp
roll
pop
add
mov
adc
mov
mov
das
jg
aaa
jg
mov
mov
mov
xlat
mov
mov
mov
hlt
mov
aaa
jg
aaa
repnz
mov
mov
mov
mov
repz
jg
mov
mov
dec
mov
mov
mov
mov
mov
mov
xrelease
push
mov
testl
mov
repz
mov
dec
mov
inc
mov
inc
repz
jg
mov
pop
mov
mov
mov
mov
repz
jg
mov
out
push
stc
mov
jmp
imul
mov
repz
mov
outsl
mov
arpl
mov
aaa
jg
mov
js
int
jnp
mov
mov
das
test
rorb
in
mov
ljmp
push
mov
mov
mov
push
mov
mov
sub
pushf
mov
pop
sub
mov
xor
push
or
adc
and
adc
insb
mov
jno
xchg
mov
mov
mov
repz
mov
add
adc
scas
mov
fwait
mov
mov
mov
xor
js
lcall
xor
out
js
ret
outsb
adc
ret
xchg
dec
push
cmpsl
dec
mov
xor
mov
lds
push
inc
adc
into
mov
adc
jecxz
or
fiaddl
mov
cmpsb
push
mov
rclb
mov
les
jo
dec
mov
cli
cmp
mov
lea
outsl
cmp
mov
sub
adc
das
out
out
mov
lea
mov
lea
mov
and
and
mov
es
mov
cmp
out
sub
cmp
mov
cmp
mov
out
mov
lea
mov
lea
mov
cmp
xor
xor
lea
mov
add
ss
stc
fwait
dec
dec
lea
dec
lea
lea
dec
lea
stc
fwait
mov
lea
lea
lea
lea
inc
lea
stc
fwait
mov
inc
lea
lea
inc
lea
lea
pop
lea
pop
lea
pop
lea
lea
pop
lea
stc
fwait
mov
lea
lea
push
lea
lea
push
lea
fwait
mov
push
lea
lea
mov
mov
cld
int
xchg
popl
mov
dec
mov
dec
mov
cld
int
lods
dec
mov
inc
mov
inc
cld
int
cld
mov
inc
mov
inc
mov
int
pop
mov
pop
mov
pop
mov
cld
int
mov
pop
mov
push
mov
cld
mov
push
mov
push
lret
mov
int
insb
mov
outsl
mov
outsb
mov
popa
mov
pusha
mov
arpl
int
ret
bound
fs
addr16
data16
int
cld
mov
jns
fnstcw
fmuls
fisttpl
sub
push
push
fnstsw
fmull
pop
mov
cs
fimuls
rorb
dec
rorb
sbb
lea
lahf
test
push
int
mov
sahf
lea
fwait
mov
lea
ds
mov
popl
mov
popl
xor
sbb
adc
lea
dec
mov
iret
repnz
aaa
jg
mov
adc
lea
int
mov
inc
mov
aaa
jg
lea
mov
mov
inc
mov
mov
inc
mov
repz
jg
mov
pop
mov
pop
lea
leave
pop
lret
fidivl
aaa
pop
mov
pop
outsl
out
ficoms
ret
mov
push
pop
push
pop
out
out
into
push
pop
lea
cmpsl
push
cwtl
fbstp
push
scas
lea
popf
pushf
jp
lods
adc
lcall
lods
pusha
xchg
lea
nop
bound
fwait
mov
xchg
lea
xchg
data16
xchg
lea
xchg
js
or
je
stos
jl
stos
lea
out
xor
jno
movsl
jo
mov
repz
insl
outsb
jb
mov
mov
fcomip
fwait
jg
mov
mov
mov
mov
and
mov
and
push
lds
mov
mov
cld
int
mov
mov
mov
inc
mov
mov
ds
aaa
jg
xor
inc
mov
mov
xor
sbb
aaa
jg
mov
mov
sbb
sbb
dec
mov
mov
push
aaa
jg
aaa
inc
mov
mov
adc
adc
mov
mov
inc
mov
mov
push
pop
mov
mov
sub
outsl
aaa
or
pop
mov
sub
mov
das
out
pop
mov
mov
and
and
mov
mov
cmp
out
insl
mov
outsl
mov
mov
ds
mov
mov
outsl
out
mov
arpl
xor
xor
out
mov
mov
ss
dec
mov
dec
jnp
dec
mov
dec
outsl
out
jge
dec
mov
jg
dec
mov
dec
jno
inc
mov
int
hlt
jo
inc
mov
cmpl
lods
addl
stos
jg
mov
subl
stos
and
stos
and
outsl
adc
adcl
and
pop
stos
daa
subl
aaa
jmp
cmp
stos
xor
jmp
in
stos
andl
dec
adcl
mov
inc
or
das
xor
pop
test
call
and
or
repz
adc
mov
push
subl
pop
push
stos
jg
sbb
jne
sbb
jge
ja
sbb
imul
lods
push
jnp
aaa
addb
addb
pop
mov
jg
subb
cltd
lods
gs
push
sbbb
xorb
stos
jns
xor
xorb
xorb
adcb
mov
lods
jno
sub
aaa
sbb
push
orl
push
out
imulb
sub
mov
addl
cmc
outsl
and
lcall
scas
test
cmp
fiaddl
fcoml
cmp
fidivrs
shrl
aas
adc
adc
xor
test
stos
sbb
andl
adc
dec
adc
sbb
aam
dec
adc
inc
subl
cmp
dec
lods
inc
cmpl
addl
andl
adcl
stc
divb
pop
adcl
cmpl
push
clc
fwait
mov
and
lods
cmpl
push
addl
fwait
iret
outsl
xchg
outsl
andl
and
cmpl
lods
stos
stc
lods
insl
xorl
mov
subl
cld
and
xor
bound
fiaddl
sub
addr16
scas
js
test
ljmp
scas
sbbl
and
outsl
imulb
jno
leave
scas
jo
xchg
pushf
stos
jb
subb
pushf
jne
mov
je
xchg
push
mov
jbe
push
subb
mov
and
dec
andb
cld
int
and
sub
dec
andb
adc
adcb
loopne
sbb
testb
pop
addb
fdiv
insb
push
orb
sub
fwait
mov
sahf
test
test
imul
fwait
mov
pop
mov
pop
mov
push
mov
push
mov
push
mov
push
mov
push
fwait
mov
push
mov
imul
stc
fwait
mov
insl
mov
outsl
mov
popa
mov
cmpsb
mov
test
mov
test
sub
test
das
test
and
incb
xchg
xchg
out
adc
test
cmp
cmp
out
test
aas
test
xor
xor
xor
xor
xchg
xchg
test
test
dec
test
dec
test
out
test
dec
test
inc
test
inc
test
inc
test
inc
test
out
inc
test
pop
test
pop
test
out
test
pop
test
push
test
push
test
push
test
imul
imul
test
xchg
outsl
test
xchg
outsl
out
test
popa
test
xchg
shlb
xchg
ret
outsl
gs
xchg
jns
flds
test
xchg
fisubrl
out
jge
fldl
test
xchg
fidivs
roll
jo
rolb
sub
mov
int
xchg
xchg
mov
xchg
int
mov
xchg
daa
xchg
mov
cmp
mov
xchg
mov
int
xchg
mov
xchg
mov
xchg
mov
cld
int
mov
xchg
mov
xchg
mov
cld
mov
xchg
mov
xchg
mov
int
xchg
mov
xchg
mov
xchg
mov
cld
int
mov
xchg
mov
xchg
mov
cld
mov
xchg
mov
xchg
mov
mov
xchg
cwtl
pop
adc
and
xchg
fwait
mov
xchg
push
xchg
cwtl
push
xchg
push
xchg
cwtl
push
stc
fwait
mov
xchg
cwtl
imul
cwtl
mov
ds
insl
xchg
cwtl
xchg
cwtl
outsl
xchg
cwtl
xchg
cwtl
popa
xchg
cwtl
xchg
arpl
cwtl
xchg
xchg
fwait
mov
dec
cwtl
xchg
mov
xchg
mov
mov
or
xchg
mov
xchg
mov
push
xchg
xchg
jae
push
jbe
clc
push
mov
fidivs
lcall
cld
div
mov
test
add
test
inc
test
outsl
push
das
test
and
test
add
and
jbe
mov
data16
xorb
jl
out
test
lcall
int
outsb
cmp
lods
fadds
dec
shll
fistpl
scas
fisubrl
shll
test
stos
or
shll
ficompl
jmp
movsl
jmp
mov
ljmp
add
mov
shll
or
or
stos
or
push
lods
stc
push
jo
sbb
or
clc
lods
imul
sbb
cmpsb
imul
or
adc
xchg
adc
stos
pop
adc
adc
icebp
sbb
pushf
add
add
shrl
and
daa
cmp
int
out
out
or
jmpw
gs
xchg
cmp
cmpsb
jns
in
aas
out
ds
add
loope
xor
loopne
insl
movsl
stos
mov
fisttpl
dec
stos
dec
push
lods
imul
sbb
cmp
sarl
icebp
dec
lock
sarl
inc
cmc
dec
sarl
inc
idivb
inc
or
cmp
rorl
pop
or
dec
sarl
pop
push
cmp
sarl
sub
push
loopne
sub
pusha
in
pop
rcrl
bound
mov
jnp
dec
aam
add
icebp
and
add
imul
add
cmc
adc
fistpll
cltd
mov
int
icebp
add
mov
mov
das
add
add
cld
mov
jle
scas
and
mov
cmpsb
mov
and
mov
call
out
out
loope
jecxz
in
out
clc
stc
clc
sti
cmp
cld
icebp
lock
adc
incl
testb
hlt
xchg
adc
fisttps
stos
cli
add
adc
push
jbe
push
sbb
add
mov
mov
loopne
test
add
or
pop
or
imul
ret
jb
add
cmp
fwait
lea
or
add
push
or
std
mov
add
adc
sub
stos
stos
sub
mov
and
xor
pop
sbb
in
dec
mov
push
cltd
mov
sbbb
mov
outsb
popl
jns
or
scas
popa
cmpsb
stos
mov
push
rol
add
and
inc
push
jmp
pop
dec
push
jne
mov
ret
xor
bound
xorb
sbb
or
push
or
push
subb
pop
mov
sub
stos
clc
aaa
mov
roll
pop
mov
cmp
in
adc
fwait
cld
pop
mov
sub
fdivrs
add
add
cmp
in
test
push
outsl
jg
cmpsb
xor
mov
push
xchg
add
inc
xorb
xor
lods
push
sub
sbb
xchg
addb
add
or
xorb
lods
sub
fstps
push
push
add
push
addb
lods
mov
or
push
dec
or
in
pop
cmp
dec
cmpb
and
orb
or
stos
sbb
jl
daa
das
or
sub
leave
stc
pop
ret
rcrb
xor
fsubr
ja
into
lds
xorl
jmp
cmp
ljmp
add
stos
test
sbbb
das
sbbb
repnz
lahf
popa
inc
cmpb
cld
adcb
sbb
orb
roll
or
stc
xchg
push
or
jae
fwait
addl
adc
outsl
sub
out
loopne
dec
rclb
sub
adc
in
lods
ret
sbb
and
push
rclb
or
rclb
test
dec
lea
adc
ficompl
inc
adcl
rolb
pop
sarl
rclb
push
adc
or
sarb
inc
or
jb
or
push
shlb
push
popa
outsl
ljmp
add
xchg
mov
lcall
or
movsb
mov
orb
adc
test
mov
push
mov
xchg
add
ss
and
add
shl
xlat
mov
das
dec
rcl
cmp
mov
subl
movsl
movsb
push
sarb
mov
mov
jbe
dec
jno
leave
mov
rolb
lcall
daa
cmp
or
rorb
outsb
jg
push
ffree
add
dec
shlb
std
jle
mov
test
rcrb
push
mov
xor
add
sahf
pop
imul
push
xor
cld
sbb
sbb
rorb
xor
lcall
in
sbb
loope
cmp
aad
jg
add
cmp
xchg
int
rclb
jnp
lock
jbe
lods
jle
loopne
xchg
or
add
adc
loop
fsubrl
lcall
or
or
add
xor
sbb
and
loopne
adc
fistps
or
std
loopne
in
call
in
ss
jmp
js
or
cmp
push
ljmp
sbb
loopne
xchg
loopne,pt
cltd
mov
loopne
add
push
into
leave
imul
sbb
add
mov
inc
mov
xor
inc
adc
adc
xchg
imul
sbb
icebp
and
cmpsb
jns
pop
jmp
test
negb
cs
test
or
adc
iret
rcr
je
cli
mov
or
mov
add
loope
or
ret
leave
loopne
and
jb
adc
call
dec
cmp
push
cmp
push
loopne
stc
sbb
ds
jns
sub
pop
loopne
in
push
loopne
lds
int
add
jecxz
mov
adc
xor
int3
leave
add
test
in
loope
cld
loopne
dec
sub
mov
loopne
pop
loopne
stos
add
mov
shll
dec
loopne
ror
loopne
shrl
stos
inc
loopne
stos
mov
push
and
popf
or
insb
pushf
mov
push
outsb
mov
mov
rcrl
add
push
loopne
pop
aam
movsl
loope
aam
emms
add
push
mov
test
shll
mov
jl
pushf
insb
stos
loope
rorb
arpl
sub
lret
out
add
fcmovnb
stos
popa
filds
outsb
loopne
ret
or
inc
jo
std
push
je
es
inc
add
or
jnp
cmc
addl
mov
dec
loopne
pop
jp
icebp
ss
nop
loopne
inc
and
dec
fscale
and
adc
sbb
sbb
add
insl
fs
in
add
mov
loop
movsb
fcoms
adc
aaa
cmp
jo
loopne
shlb
xchg
call
add
cmp
jmp
sub
sbb
leave
sahf
inc
mov
sub
stos
or
test
rolb
or
dec
movsb
jo
loop
js
pop
jnp
adc
stc
cmp
pop
cmp
pop
rorl
add
cli
imul
or
lock
jne
mov
and
add
sbb
and
inc
xor
jp
and
repz
pop
lcall
sub
ss
add
or
or
adc
cmc
and
mov
lret
jg
or
iret
push
inc
add
mov
test
mov
push
lock
add
fmuls
imul
dec
stos
adc
leave
inc
add
dec
sti
int
lret
imul
cmp
movsb
cmp
cmp
xchg
mov
lods
pop
hlt
ljmp
rol
and
xchg
and
add
scas
push
fldcw
inc
stos
xor
and
push
call
inc
add
push
cmp
push
lock
sbb
pusha
cltd
ss
out
pop
cld
push
decl
ljmp
fimull
jp
data16
mov
xlat
fcomip
ja
jne
and
mov
iret
cmp
fs
int3
inc
mov
rep
xlat
fcmovnu
adc
xchg
call
add
idiv
sbb
xchg
std
jbe
dec
adc
adc
aas
add
cmp
push
cli
lcall
cmp
pop
xchg
adc
je
sbb
mov
xor
scas
fwait
xorb
pop
es
mov
cld
or
aas
in
enter
cld
rclb
outsl
push
or
nop
pop
pop
sub
out
cltd
mov
popa
sbb
mov
repnz
jmp
mov
xchg
push
add
in
pop
jno
iret
out
lahf
iret
mov
lds
call
arpl
loop
shrl
add
push
add
jnp
test
shlb
fwait
sbb
mov
jp
mov
mov
xor
push
aam
jno
add
jg
and
adcl
cltd
cwtl
fwait
lcall
xchg
xchg
xchg
xchg
xchg
call
sahf
add
movsl
movsb
cmpsl
outsl
jle
add
mov
mov
add
pop
call
adc
scas
lods
add
call
mov
aam
or
cmc
add
cmc
hlt
testl
or
cmpsb
jo
add
sbb
sbb
ljmp
adc
sub
sub
sub
and
and
and
add
cmp
cmp
cmp
xor
xor
dec
dec
dec
dec
dec
jg
decl
dec
inc
inc
inc
inc
inc
inc
cld
inc
pop
pop
pop
pop
pop
pop
pop
add
push
push
push
push
call
lds
imul
aam
pusha
arpl
add
aaa
sbb
jns
jnp
jge
jg
push
jae
jne
ja
jbe
decl
incl
enter
int3
iret
into
roll
ret
ret
mov
incl
fcomp
fcmovu
cld
rcl
push
push
add
pshufw
pop
cli
mov
lds
lcall
sub
pushl
or
scas
mov
sbb
ja
jbe
sub
cmpsl
sbb
aas
add
fwait
in
or
add
or
repz
jp
adc
add
add
addb
and
mov
jno
jns
mov
sbb
out
mov
mov
add
or
xchg
sub
mov
add
add
loopne
or
cmpsb
jecxz
icebp
add
incl
add
push
inc
jno
dec
adc
gs
movb
aaa
lods
leave
stos
jg
lods
lock
fidivrs
rolb
add
ficomps
and
je
pop
mov
add
pop
jge
inc
in
sub
insb
jbe
in
push
dec
cs
add
iret
mov
xor
add
adc
xlat
lea
jp
push
insl
push
in
and
pop
add
mov
test
push
or
out
cli
lods
sbb
or
push
nop
fwait
out
add
or
add
or
nop
add
fsubp
loopne
xor
mov
mov
imul
mov
ret
or
cs
xor
mov
fidivl
mov
stos
jns
jbe
popa
insl
lcall
add
push
add
pop
push
add
sbb
add
push
sbbl
test
pop
and
add
ljmp
ljmp
lret
call
cmp
add
dec
shr
and
mov
jmp
sbb
fcmovnbe
add
stc
in
out
lret
xor
ljmp
ret
in
out
adc
neg
out
inc
in
pop
fsubrp
push
fucomi
call
sti
loopne
add
into
in
std
sti
sub
dec
cli
test
out
shr
sti
mov
incb
add
std
lret
std
mov
fucom
repnz
in
pop
mov
wrmsr
fcompl
xor
fnsave
cld
adc
shl
out
in
loopne
out
test
jnp
insl
inc
into
xchg
pop
adc
std
mov
fstpt
int
addb
call
subb
lock
adc
icebp
mov
lret
xchg
add
inc
add
add
jle
mov
lcall
roll
fcompl
or
fisubrs
ljmp
adcb
addb
cwtl
push
sub
sub
adc
fldt
push
and
daa
ds
test
xor
pop
jge
add
lods
icebp
push
or
or
jg
inc
jbe
shlb
int3
icebp
shlb
add
lret
stos
or
add
bt
cmc
lods
or
push
scas
outsl
icebp
sbb
inc
add
pop
stos
lahf
dec
addb
add
es
adc
pop
out
add
cmp
push
outsl
rcll
add
add
push
adcb
call
lods
add
inc
add
fisttpll
inc
call
loopne
cmp
jg
shll
add
add
adc
jo
call
arpl
iret
in
sbb
loope
ret
or
add
in
sub
lcall
adc
cld
stc
sbb
push
ret
ret
add
cld
stc
sub
mov
sub
add
cld
and
incb
out
add
sbb
out
jg
push
dec
jo
pop
in
lret
rclb
enter
int
cli
ret
std
idiv
subb
rclb
or
ljmp
loopne
repz
push
subb
in
add
decl
fimull
std
subb
add
jae
int3
adc
xor
das
decb
sbb
aaa
jle
repz
out
lods
in
in
loop
bound
pop
dec
add
push
mov
ret
push
cmp
cmp
cmp
add
adc
adc
sub
or
ud2
inc
and
sbb
sbb
add
cmp
inc
jo
or
push
fwait
push
and
sbb
cmp
cmp
aaa
and
add
or
out
cli
pushl
test
mov
push
push
sub
cmp
aas
fsubrs
ljmp
push
sub
and
loopne
add
pop
add
inc
inc
push
sbb
or
outsb
sub
and
adc
and
cmp
or
sbb
adc
ss
add
cld
lcall
or
rdtsc
add
push
or
xor
mov
sarb
pop
and
push
push
clc
mov
mov
or
jg
and
push
adc
or
int3
rcl
xlat
add
das
lcall
mov
int
rcrl
outsl
mov
into
jo
mov
movsl
adc
push
add
insb
inc
or
sbb
jbe
adc
jp
dec
inc
dec
push
inc
lock
rorb
inc
dec
pop
dec
pop
addr16
add
or
sub
xor
sub
add
sub
sub
add
sahf
popa
adc
or
and
pop
mov
sub
jle
xor
add
adc
daa
pop
push
or
sbb
dec
or
fsubl
shl
insl
cmp
push
jae
pushl
pop
or
pop
push
or
mov
fwait
add
lock
ljmp
std
stos
lods
call
mov
pusha
test
loopne
mov
jle
jl
add
mov
push
in
test
or
xor
mov
xor
lcall
hlt
data16
popa
jb
add
jl
jle
cmp
decl
idiv
cmc
pushl
loop
ljmp
out
lock
sub
decl
and
mov
xchg
xchg
xchg
xchg
mov
lahf
adcb
nop
lcall
mov
fwait
hlt
add
xchg
lcall
jmp
xchg
test
ret
int
mov
and
iret
cwtl
clc
cld
test
scas
hlt
sti
push
and
iret
scas
mov
mov
jg
mov
mov
mov
mov
scas
test
inc
je
out
cli
ret
loope
or
subb
mov
ja
and
popa
dec
lret
rcl
rcl
outsl
mov
xor
out
in
lret
idiv
pop
and
mov
enter
aad
pop
loopne
pop
ljmp
jle
fstp
incl
fld
movb
add
in
mov
scas
vunpckhps
into
or
pop
lock
in
pushl
call
add
aam
std
shrl
mov
lods
in
mov
add
add
mov
fwait
mov
jle
push
inc
add
push
daa
cmp
and
and
cs
cli
sub
addr16
jp
inc
pushl
xor
and
jl
inc
insw
imul
imul
mov
ja
jg
jno
jp
jge
cmp
jno
inc
pop
add
sbb
push
ja
js
jbe
add
outsb
jmp
jg
je
push
popa
outsb
jle
push
jns
jge
add
outsl
aad
pop
sbb
nop
data16
popa
arpl
out
test
fs
je
mov
lcall
pop
jns
imul
add
ret
aam
xchg
addb
das
rol
jo
aam
pusha
sbb
sbb
push
mov
inc
ss
push
push
adc
sbb
adc
adc
or
stos
test
scas
sbb
stos
mov
cwtl
mov
scas
mov
jmp
sbb
pop
add
or
add
call
lods
pop
and
loop
popa
or
fmul
fcomi
lret
int3
lret
iret
ret
int
ret
ja
outsl
enter
fmul
inc
dec
bound
pop
dec
dec
push
add
push
pushl
lcall
inc
imul
add
jns
inc
fidivl
jae
jne
ja
dec
arpl
outsl
clc
jp
add
mov
mov
mov
stos
xchg
mov
lods
lods
cli
cs
or
xchg
add
cmp
xor
fildll
push
lcall
mov
cmpsb
lcall
cltd
cwtl
orb
xchg
scas
stos
incl
mov
movsl
mov
and
aaa
cmp
xor
xor
sub
cmp
decl
mul
hlt
fiadds
jecxz
in
out
ljmp
std
pop
cld
mov
dec
dec
pop
dec
fs
inc
pop
push
inc
inc
push
add
mov
inc
mov
test
cmpsl
pop
mov
mov
adc
mov
cmpsb
mov
push
hlt
jp
pop
lock
jg
jbe
jl
jbe
xor
mov
mov
mov
cmpb
pop
add
push
xor
or
adc
mov
mov
lods
test
pusha
ss
mov
scas
xor
or
sbb
ljmp
loopne
sbb
or
mov
add
push
add
xor
incl
out
out
roll
in
cmc
loope
add
push
dec
addr16
pop
bound
add
dec
sub
mov
cmpsb
mov
scas
mov
cld
call
add
fcmovb
into
rolb
subl
and
sub
jb
pop
dec
or
das
ljmp
cmp
enter
mov
xchg
add
mov
add
sub
cmc
and
dec
cld
test
cld
cmpl
rolb
out
mov
les
icebp
loope
push
jns
adc
ss
in
jnp
gs
stos
decl
or
adc
sub
cmp
pop
push
lret
divb
pop
dec
dec
scas
mov
add
mov
fwait
xchg
xor
mov
xchg
lahf
xlat
enter
pop
cmp
mov
mov
mov
add
xchg
mov
mov
mov
xchg
cmp
sub
adc
or
fisttps
fcompl
adc
push
inc
shrb
add
add
adc
loop
and
es
adc
sub
xor
sub
cld
sub
push
xor
cmp
faddl
repnz
in
incl
icebp
add
jno
adc
sub
stos
mov
jg
cmpsl
mov
inc
lods
icebp
mov
jbe
sbbl
jns
dec
dec
mov
sti
mov
xchg
call
adc
xchg
mov
cmp
and
lcall
or
push
push
add
mov
adc
pop
adc
sbb
add
pushf
fwait
ljmp
cmpsl
cmpsl
ud0
sbb
out
mov
cli
add
std
std
in
mov
add
fistpll
bound
inc
and
pop
adc
add
add
out
stos
mov
add
cltd
rol
rcl
or
cwtl
jno
mov
cmp
cld
scas
stos
lock
test
sub
shrb
pusha
mov
lock
add
pop
dec
pop
inc
dec
inc
dec
mov
test
mov
mov
rcll
cmpsb
pop
pushf
rol
ficomps
add
and
test
adcb
pop
add
mov
scas
push
lods
popf
ret
test
mov
xchg
xchg
lea
rol
add
cld
call
jmp
or
inc
or
add
add
outsb
nop
hlt
loop
testl
cwtl
sahf
addl
push
add
sbb
ljmp
insb
add
or
aaa
and
das
xor
pop
and
cmp
call
nop
jns
into
or
cmp
push
and
js
cmp
and
xor
and
pop
xor
sub
lock
rolb
rcl
xor
push
pop
icebp
aad
jno
jnp
jne
jle
cmp
or
sarb
xchg
jb
adc
das
or
js
adc
std
incl
push
inc
add
bound
and
and
cmp
mov
push
or
sbb
out
add
pop
pop
push
dec
sub
inc
push
push
inc
push
add
cld
ljmp
cli
arpl
js
mov
jnp
data16
popa
add
cmp
jle
das
mov
cmpsb
mov
add
nop
adc
addr16
mov
imul
movl
xlat
cmp
aam
pop
fcomp
xlat
lcall
fcmovbe
xlat
ret
xchg
cld
or
mov
add
es
and
sub
mov
and
jno
add
adc
sbb
adc
push
arpl
inc
jge
arpl
or
mov
lock
sar
fbstp
push
push
mov
mov
addl
lods
movsb
pop
cld
lcall
mov
xchg
xchg
fwait
xchg
add
lcall
mov
nop
mov
idiv
lcall
xchg
xchg
jb
pusha
data16
add
add
add
pop
loopne
filds
ror
into
ret
int
cli
push
std
lods
dec
pop
push
pop
pop
dec
push
dec
add
pop
dec
push
js
in
add
push
sbb
sbb
pop
pop
cli
stos
ljmp
jp
jae
add
cmp
jne
jae
decl
pop
dec
push
pop
data16
fsubr
out
and
xor
cli
std
call
repnz
dec
push
add
hlt
xor
jb
jg
std
cs
mov
mov
out
stos
adc
mov
stos
mov
fwait
mov
pusha
sub
jp
out
scas
stos
pusha
pushl
mov
mov
popf
xchg
adc
flds
mov
mov
xor
jno
cmp
sub
sub
in
or
cmp
pop
js,pt
pop
jg
xor
arpl
add
rcrl
xlat
loop
call
mov
xchg
add
mov
stos
stos
mov
add
add
jmp
mov
and
sbb
popa
mov
and
sub
and
xor
outsl
pop
sub
jns
dec
push
or
push
insb
outsl
push
popa
add
and
push
inc
push
cli
mov
dec
inc
dec
inc
xchg
jmp
bnd
aad
shl
decl
pop
insl
imul
sbb
dec
dec
sbb
add
sti
add
js
mov
movups
adc
jp
dec
adc
xor
cmp
sub
fwait
adc
sub
outsl
cmp
add
cs
pushf
xchg
pushl
xchg
xchg
lahf
xchg
lcall
jecxz
ret
inc
test
fadd
lds
xchg
xchg
fwait
subb
test
mov
scas
mov
popl
enter
or
xchg
jmp
adc
xor
cli
jmp
aad
lret
cltd
cli
fiadds
rcr
ret
sub
cmp
xor
and
adc
rcrb
push
push
inc
nop
sbb
xchg
and
sbb
xor
mov
or
jl
mov
inc
dec
pop
sub
dec
inc
push
dec
push
add
dec
popa
imul
call
push
inc
inc
adc
and
inc
outsl
fs
xor
sbb
pop
cli
or
or
inc
out
jge
ja
jne
es
sub
insl
repnz
popa
in
pushl
dec
idivb
cmp
sub
and
xor
cmp
cmp
xor
sub
cmpsb
movsl
jle
outsb
repnz
or
adc
cmpps
pusha
loopne
add
cld
sti
mov
out
push
jg
call
adc
repnz
inc
inc
dec
inc
pop
pop
or
dec
inc
dec
dec
push
jne
rclb
push
nop
dec
mov
incl
repz
repnz
add
fcmove
stc
aam
cli
stos
inc
ror
push
mov
in
into
knotb
int3
fcomi
in
into
or
fisubrs
sub
int
clc
ror
cmp
mov
push
push
push
and
arpl
jge
inc
inc
outsl
sti
push
adc
popa
jne
add
add
sbb
xor
dec
out
repz
ljmp
jmp
aad
fistps
call
incl
imul
jmp
enter
cs
gs
cmp
push
add
cmp
aas
insl
adc
cmp
lds
add
dec
push
dec
push
pop
dec
dec
sbb
jbe
ljmp
pop
jae
add
jnp
jo
jnp
sbb
ficoml
mov
sti
mov
movsb
xchg
cmp
insb
cmpb
add
and
cmp
aas
xor
jne
divb
sub
ss
aas
ss
add
sub
ljmp
jl
and
adc
or
sub
inc
push
pop
mov
push
add
inc
sub
push
ret
addl
pop
add
add
ret
adc
mov
push
cmp
or
xor
pop
mov
pop
or
push
cmp
xor
out
clc
cmpb
popa
adc
add
sub
andb
sub
jg
inc
outsb
adc
sub
cmp
xor
addl
out
cli
dec
fsubrs
outsb
js
pop
bound
js
jp
jg
add
jnp
scas
cmpsb
imul
dec
sub
das
sar
outsl
cmpsb
inc
push
push
add
pop
jmp
or
std
loope
mulb
cs
mov
inc
add
or
adcb
incb
nop
sbbl
xchg
adcl
mov
aam
pushl
test
cmpsl
movsl
mov
movsl
mov
stc
clc
lods
std
mov
out
shl
cld
imul
cld
in
cli
int3
fsubrl
decl
out
in
out
std
ret
stc
jmp
out
in
push
std
imul
mov
lret
and
lock
faddp
sbb
cmc
add
neg
repnz
xchg
scas
mov
cmpb
mov
ljmp
mov
hlt
xchg
test
mov
test
fcmovnbe
les
ljmp
faddl
iret
ror
leave
fmul
jmp
mov
mov
loope
add
scas
call
or
rclb
xor
add
fcomip
imul
sub
je
add
ss
aas
xor
or
dec
sbb
lds
add
ss
imul
sub
and
mov
cmpsb
push
jbe
sbb
push
data16
outsl
sub
pop
cli
jge
outsl
push
imul
ja
js
std
mov
add
cmp
ja
pop
dec
es
and
pop
pop
inc
push
jge
push
inc
inc
bndldx
inc
lcall
dec
dec
pop
inc
cs
pop
imul
mov
mov
clc
or
mov
out
aad
mov
movsb
mov
movsb
mov
ror
mov
fwait
inc
xchg
fwait
int
xchg
test
xor
nop
cwtl
scas
pushf
fwait
cld
pushl
push
xchg
fadds
jecxz
in
ljmp
aad
aaa
jle
loop
mov
in
iret
loope
mov
mov
int
add
adc
shrl
rcr
vaddsubpd
mov
rol
rclb
rcrl
sub
inc
inc
xor
xor
js
aaa
cld
stos
dec
cmp
sub
or
cmp
sbb
mov
add
xor
movups
cld
lret
or
xchg
std
pushl
inc
or
adc
adc
pop
add
sbb
and
inc
or
inc
ja
jl
cmp
dec
outsb
pop
push
pop
or
mov
add
ljmp
xchg
lahf
fiadds
sub
and
add
and
and
pusha
mov
cmp
shrb
push
inc
push
inc
jl
dec
je
pusha
inc
add
pop
add
ljmp
xor
xchg
leave
rcl
andl
scas
lods
add
xchg
add
mov
decb
inc
inc
xor
jae
add
lods
add
sti
ljmp
jecxz
mov
push
addl
xchg
xchg
inc
push
jg
jg
add
faddp
loop
shl
in
add
outsb
arpl
pop
mov
push
dec
push
dec
push
jbe
pop
jno
cmp
sub
imul
jo
pusha
or
ret
jecxz
cmpsb
push
and
sbb
decl
lret
sbb
popa
add
sub
push
adc
mov
or
or
add
stos
mov
add
cmp
add
call
and
sub
cmp
loope
in
incl
jle
es
loope
loope
call
cmp
aaa
xor
push
push
inc
dec
push
inc
inc
push
add
dec
inc
inc
add
add
pop
hlt
jae
aaa
cmp
xor
cmp
cmp
sub
ss
inc
cli
dec
add
mov
sub
jmp
fildl
mov
adc
orl
loope
pop
add
sbb
enter
adc
clc
pop
sbb
add
cli
loop
and
xor
xor
cli
cmp
sub
int3
inc
inc
xchg
cmp
cmp
or
push
adcb
add
lds
mov
adc
push
jge
pop
add
dec
add
cmp
cmpb
and
xor
xor
push
jle
das
cmp
cmp
stos
xor
jo
dec
inc
dec
add
push
pop
push
adc
pop
inc
inc
push
pop
jno
insl
xor
out
test
adc
popf
mov
add
fsubrs
loop
fwait
jmp
outsl
add
add
stos
push
dec
inc
cmp
adc
pop
cmp
jp
add
push
jg
and
popa
outsb
add
bound
add
jge
jno
xor
and
jae
push
inc
add
pusha
rcr
adc
add
mov
or
pop
push
outsl
add
jle
dec
and
pop
push
enter
push
push
xchg
lcall
mov
xor
decb
jmp
ficompl
add
out
ljmp
adc
ljmp
int
mov
loope
insl
arpl
jno
or
ja
add
test
add
aaa
testb
enter
mov
inc
insb
and
sarl
dec
arpl
outsl
cmp
and
adc
outsl
mov
add
jo
outsb
imul
sbbb
inc
jg
arpl
jl
arpl
xchg
mov
mov
ljmp
add
repnz
ds
xlat
stos
es
stos
sahf
mov
cld
mov
xchg
pushf
mov
loop
mov
lcall
ja
repnz
clc
in
int3
pushf
jmp
out
iret
adc
fwait
addb
sbb
daa
hlt
and
cmp
or
jg
jmp
loopne
ds
xorb
add
sbb
or
pop
pop
pop
adc
negb
inc
jg
into
pop
or
pop
xchg
jg
xchg
add
xor
inc
pop
insb
gs
pusha
inc
lock
aam
push
test
ret
sub
sub
jecxz
loop
mov
mov
lock
cmc
out
outsb
in
rep
test
push
cli
aaa
cld
sbb
push
in
in
fmull
ret
fstpl
rcl
xchg
pushl
ret
ret
in
lret
xchg
add
add
push
sbbb
push
ljmp
inc
insb
sub
push
fldenv
out
mov
add
adc
dec
mov
mov
sub
in
adc
add
sar
out
mov
jecxz
into
add
cli
mov
pop
add
daa
movsl
cmpsb
mov
xor
cmpsb
in
out
insb
adc
outsb
in
stos
loop
call
loopne
out
in
std
lret
sub
dec
adc
mov
mov
call
test
test
out
test
cli
std
dec
test
out
lock
std
add
loope
out
out
out
dec
pop
arpl
cmpsb
push
iret
xchg
add
or
or
or
fidivl
add
mov
rol
lds
enter
add
nop
jmp
into
add
fcmovu
lret
fcmove
fcmovnb
or
int3
decb
loopne
pop
in
ffree
iret
addb
movsb
fisubrl
enter
mov
int3
testb
lret
mov
dec
mov
mov
fcmovne
fld
or
fadd
ret
fcmovnb
std
jg
lock
enter
add
rol
xor
add
fbld
mov
mov
dec
incb
roll
incb
and
stos
mov
add
fstp
fwait
mov
movb
and
mov
int
mov
loopne
mov
mulb
or
inc
inc
ret
add
js
hlt
adc
lock
jo
xchg
push
movsb
lock
sbb
mov
push
sbb
aaa
in
push
movsb
in
out
std
loope
mov
jo
cli
out
out
movsb
in
out
mov
out
xor
in
loop
cld
out
jmp
xchg
adc
in
stc
movsb
call
in
lock
out
or
ror
lret
test
pop
push
fstl
es
cs
lock
lds
adc
and
or
rclb
lcall
adc
out
sbb
ljmp
mov
fdiv
sbb
shl
sub
mov
xchg
push
adc
add
out
add
mov
add
nop
sub
jo
mov
call
inc
ljmp
dec
sub
mov
or
mov
xchg
mov
rol
add
mov
add
rcr
fldenv
mov
push
notb
mov
ljmp
fwait
pop
lock
in
out
loop
add
or
loopne
out
pushl
out
jo
push
sti
xor
adc
lock
loopne
sub
sbb
aaa
nop
ljmp
push
lcall
push
sarl
or
ret
loop
negb
push
mov
je
and
inc
or
decl
fcomi
add
or
dec
enter
and
test
cwtl
add
add
xor
jp
cld
pushf
sbb
adc
and
xor
add
mov
out
loopne
adc
faddl
gs
shll
fiaddl
flds
hlt
fstpt
test
aam
cmp
or
adc
cwtl
jbe
aam
popa
out
lcall
jns
cld
jno
jg
add
ja
popa
lret
aaa
or
mov
std
pushl
inc
cld
mov
mov
fsubp
mov
and
push
sbb
mov
jbe
mov
inc
add
imul
fcos
jo
dec
inc
int3
addb
int3
jne
ljmp
clc
outsl
add
int3
imul
hlt
xor
push
mov
outsl
mov
or
xchg
idivb
xchg
or
add
outsb
cmp
adc
or
inc
loope
jbe
fidivl
xor
sbb
add
add
adc
stos
mov
data16
nop
jbe
pushf
sbb
mov
cld
push
loop
hlt
jne
aaa
call
lret
add
add
jbe
pop
fildll
push
add
dec
std
xor
mov
add
andb
sbb
mov
dec
sbb
je
icebp
push
popa
inc
rcrb
popa
inc
cwtl
mov
call
nop
xlat
shrb
inc
dec
andl
fisubrl
xchg
adc
cli
call
cld
into
rclb
xchg
pop
jne
inc
add
es
adc
add
jle
cmpsb
loope
ds
cmc
add
pop
adcb
xchg
sti
or
adc
and
rolb
adc
adc
paddd
jg
mov
adc
adc
mov
in
inc
jle
push
and
and
imulb
es
or
inc
in
inc
int3
repnz
jmp
xor
xor
pop
add
mov
subb
adc
rcll
adc
cmp
or
pusha
and
dec
mov
push
lods
jb
mov
fistps
pop
cli
sti
faddl
sarb
loopne
iret
mov
xor
loopne
jno
cmp
xor
popa
inc
pop
jns
xor
adc
sbb
xchg
ret
cld
popa
xchg
mov
les
cmc
test
pop
mov
add
ljmp
fsts
sub
loopne
adc
add
lock
pop
dec
mov
add
mov
jge
int3
jb
mov
mov
pop
push
icebp
mov
stos
rcrb
or
adc
sbb
rcl
cmc
mov
push
adc
pop
jle
fists
rcll
jge
sbb
ljmp
jecxz
jle
cmp
add
or
outsl
mov
fsubp
sub
rclb
dec
ja
test
add
adc
pop
xor
in
jne
les
xchg
mov
push
dec
xor
add
add
or
mov
sbb
cltd
sub
and
cmp
fabs
cli
into
or
cmp
push
jno
sub
cmp
cli
sbbb
jb
and
xor
loope
jno
loope
pop
add
or
mov
inc
data16
mov
lcall
and
mov
add
inc
inc
ret
decl
lcall
sub
mov
roll
jo
cmp
imul
jb
add
mov
sbb
leave
add
sbb
mov
sti
call
add
cmp
flds
into
add
mulb
filds
adc
add
cwtl
popa
push
clc
pop
add
pop
cmp
fimuls
out
push
xchg
add
sbb
fiadds
testl
fsubs
scas
sub
mov
popa
cmp
movsl
pop
push
movsb
or
add
mov
sub
faddl
lods
mov
jbe
loope
sub
popa
mov
mov
dec
push
call
insl
add
jns
push
push
cld
jne
push
mov
fnstcw
and
js
les
js
sbb
add
pushf
add
in
lods
mov
movsb
mov
sbb
add
or
std
lea
aam
mov
dec
call
mov
push
adcb
sbbl
or
fiaddl
sbb
dec
cld
call
imul
add
or
je
xchg
loope
lahf
leave
adc
jg
push
in
inc
stc
add
rclb
add
popa
pop
out
or
decl
or
push
xchg
dec
jle
lods
lods
movsl
adcb
sub
mov
dec
lea
clc
test
popl
sub
xorb
data16
add
loop
fsubs
arpl
push
aam
mov
jnp
lock
jmp
or
insl
jno
inc
mov
jge
fiaddl
mov
mov
lods
aad
xor
inc
movsl
dec
int
sbb
xchg
xorl
xchg
aam
cmp
ja
add
into
lret
mov
sbbb
sbbb
sbbl
es
sub
push
fnstsw
or
mov
flds
mov
aaa
cwtl
mov
lods
popa
inc
shrb
or
sbb
outsl
jp
addb
xchg
inc
add
dec
popa
jb
inc
sbb
adc
or
inc
dec
or
push
or
test
cs
stos
data16
es
outsl
push
xor
aam
xchg
add
jbe
push
cli
fidivl
add
nop
sarb
test
inc
inc
dec
push
loopne
lock
or
xchg
xor
xor
cmp
add
mov
lcall
stos
push
std
negl
addb
ljmp
fisubl
inc
aaa
or
inc
push
aaa
mov
aas
std
es
scas
add
xor
icebp
mov
popf
nop
out
mov
pop
iret
scas
or
neg
sbb
mov
jecxz
cmpsb
add
aad
adc
xchg
jbe
test
xorb
outsb
jb
jo
mov
andb
mov
and
aaa
je
cmp
push
pop
test
insb
shrb
ret
cmpsb
mov
jne
or
add
lods
xor
out
sbb
and
xor
push
decl
dec
dec
add
std
xchg
sar
mov
or
fdivp
and
lods
xor
mov
push
inc
test
and
testb
mov
sbb
jg
inc
in
pushf
dec
orb
scas
add
fnstsw
push
nop
ret
inc
shrb
mov
add
or
push
les
test
bswap
cs
pushl
xchg
loope
cld
add
push
mov
rcr
mov
pusha
add
les
add
adc
sub
xchg
cli
sbb
sbbl
test
inc
nop
rolb
and
mov
push
cmp
add
pop
or
ljmp
push
add
sub
xchg
inc
bound
jno
inc
add
loope
ljmp
jns
add
shlb
stos
incb
popa
dec
divb
mov
mov
sub
cmpsb
sbb
dec
loopne
push
or
cld
pushl
mov
out
mov
aad
pusha
sub
decl
sbb
inc
and
jg
jge
inc
fwait
loopne
cmc
pop
mov
fchs
jbe
add
popa
test
mov
jbe
add
mov
or
add
mov
ljmp
jae
fistpll
cld
inc
popf
cmpsb
pop
cmp
sbb
and
out
mov
mov
cltd
jbe
cmp
inc
jbe
lock
jnp
rcrb
popl
mov
adc
pop
or
xor
mov
pop
push
lds
std
mov
adc
mov
add
das
std
push
sub
iret
mov
inc
sti
aaa
or
stos
push
incl
popa
sub
bound
pusha
add
or
inc
mov
sub
pop
mov
jecxz
icebp
loopne
cmp
mov
adc
sbb
mov
gs
andl
mov
mov
xchg
xchg
sar
aam
decl
loopne
add
nop
stos
test
fistpl
jp
push
pop
sbb
ret
idiv
jecxz
and
mov
jno
mov
std
nop
fbstp
xchg
jmp
cld
jno
mov
inc
sbb
cmp
movsb
mov
xorb
adcl
bound
loopne
add
daa
add
jae
sti
jg
pusha
sti
adcl
cs
push
and
insb
popa
jmp
add
fadds
mov
sbb
add
popa
mov
mov
sbb
adc
mov
fimuls
jo
fdivl
mov
jns
sbb
hlt
dec
lcall
fsubr
mov
xchg
xchg
outsb
sbb
sbbb
rcrb
adc
dec
incl
adc
sarb
or
or
and
jg
std
mov
bound
mov
cmp
or
jle
in
jg
roll
add
add
out
movsl
jo
adc
mov
pop
rorl
sbb
cmp
push
outsl
aad
ja
push
popa
cmp
add
inc
add
int3
jbe
lcall
jge
stc
mov
bound
mov
jbe
push
lea
icebp
adcb
push
incb
out
icebp
and
and
push
jbe
push
jno
lock
incl
xchg
or
dec
es
or
jbe
jp
mov
bound
sbb
rolb
pop
fcmovu
jl
inc
sbb
int3
loopne
cmpsb
mov
cld
lahf
fisubl
fcmovb
add
test
push
add
outsl
mov
push
sbb
rolb
xchg
in
fildl
decl
push
jecxz
xor
sti
in
lock
dec
and
lock
bound
loop
mov
jo
jecxz
test
mov
andb
xorl
add
jno
push
and
js
mov
inc
inc
add
call
or
cld
in
popa
or
and
mov
fsubs
loopne
test
cli
outsl
inc
icebp
test
push
loopne
ss
pop
mov
adc
movsb
rclb
sub
xor
popa
and
sbb
int
and
and
mov
add
push
add
sbb
sarl
mov
popa
xor
icebp
and
cltd
std
stos
test
fistps
xchg
les
mov
xor
jo
bound
mov
and
jb
and
adc
pop
addb
sub
pop
popa
or
mov
mov
xorb
cs
call
std
add
mov
popf
in
and
add
fcmovu
jmp
iret
xchg
jecxz
push
pop
andl
ret
je
cmp
test
loopne
mov
jne
mov
or
cld
mov
popa
mov
cli
stos
cld
test
adc
mov
aas
nop
adc
nop
sbb
cmp
cmp
lea
pop
fdivs
sub
cli
lcall
fimuls
orl
push
mov
pushl
lfs
dec
adc
add
jo
add
add
cs
sub
dec
fildll
pop
jae
popa
cli
push
ret
repz
mov
fs
rorb
clc
sbb
outsl
mov
mov
cltd
xchg
pop
add
int3
xchg
push
inc
cld
test
lock
in
movsb
insl
lock
push
dec
inc
add
adc
aam
adc
xchg
shrl
push
cwtl
xlat
add
dec
and
neg
mov
ss
jp
xchg
adc
mov
loop
jo
test
rclb
sti
call
add
ss
add
sbb
cmp
and
mov
inc
push
mov
incl
mov
mov
bound
pop
push
mov
pop
fisubs
pop
mov
jecxz
push
add
fcomi
or
push
imul
pop
xor
cltd
popa
cmp
mov
int
aas
outsb
inc
or
pushl
insb
pop
push
out
jo
push
movlps
testb
add
dec
add
dec
test
xchg
enter
mov
hlt
cs
xchg
xor
add
pop
orb
add
loop
shlb
stos
orl
pop
pop
aad
push
dec
mov
nop
mov
push
clc
jbe
inc
xchg
add
jo
xchg
outsl
xor
mov
dec
add
jne
and
sti
jg
and
add
cmpxchg
adc
lock
in
in
or
or
cmp
jge
fcoml
testb
push
adc
int3
xorb
lea
nop
add
inc
add
out
cmp
sbbb
loopne
mov
bound
or
adc
je
or
or
sub
mov
popa
inc
sbb
sub
xchg
push
rorb
loopne
mov
incl
sahf
popa
inc
add
adc
out
and
popa
adc
inc
xor
adc
add
fsubrl
or
xor
enter
data16
jmp
add
insl
add
mov
adcb
sub
mov
cmp
shrl
or
cmp
sbb
sub
adc
dec
incl
or
adc
xchg
add
inc
jbe
in
je
rolb
lock
hlt
outsl
cli
sbb
or
lock
mov
aaa
add
xor
outsb
mov
popf
test
add
add
xor
cld
xchg
mov
cmp
mov
add
mov
movd
adc
loope
adc
push
loopne
mov
jns
mov
adc
js
out
sub
inc
sub
or
mov
lods
xchg
repnz
lock
xchg
inc
adc
pusha
push
loopne
or
test
rcrl
sub
ljmp
incl
sub
or
add
pop
icebp
fwait
jns
jg
mov
lret
inc
cltd
fsubs
cmc
fcomip
call
dec
adc
inc
add
repnz
rorl
bound
and
fildll
adcb
add
scas
fwait
and
sbb
popa
mov
mov
pop
xor
mov
int
dec
mov
push
sbb
out
cli
leave
add
andb
adc
test
xor
lods
dec
int
clc
call
lods
mov
int
mov
add
popa
test
mov
dec
pop
lock
mov
mov
lock
and
sub
mov
pusha
adc
push
pop
andb
jo
jg
push
dec
add
hlt
dec
dec
fadds
push
icebp
adc
jo
dec
stc
and
bound
aaa
std
add
repnz
cld
jb
orb
mov
lea
add
add
sub
imul
pop
icebp
jg
fwait
adc
lea
gs
in
xor
std
or
addb
jbe
ds
pop
and
add
jp
dec
sbb
mov
gs
add
add
adc
xor
jp
rcl
xlat
dec
addb
mov
pop
jp
mov
add
jle
das
adc
popa
push
xchg
jo
inc
jge
or
xor
adc
mov
push
call
clc
and
add
mov
popa
fs
loopne
lcall
mov
movq
mov
cmpsb
mov
dec
push
fsubp
ss
lcall
test
pop
xorb
mov
inc
add
mov
jo
aas
add
push
dec
mov
xor
orb
popa
lock
push
shlb
ljmp
mov
addb
or
dec
jbe
xor
xchg
neg
add
enter
aaa
dec
das
push
cld
mov
pop
add
pop
out
cld
inc
popa
pop
dec
dec
sub
loop
pop
push
popa
jl
js
inc
fbstp
push
inc
jecxz
mov
enter
pop
popa
addr16
lock
pop
jecxz
loope
sub
mov
push
push
lea
add
sti
inc
std
scas
or
call
add
mov
faddl
cmpsb
fstps
push
sbb
add
mov
fcomp
inc
je
test
push
roll
adc
push
mov
add
hlt
sbb
dec
rorl
jge
dec
cmp
es
popa
bound
aad
call
aam
mov
dec
add
add
lea
daa
andb
jno
or
movsl
orb
sbb
andb
cltd
sub
adcb
testb
orb
dec
push
jg
pushl
xchg
movsb
xorl
xor
mov
mov
shrb
fwait
mov
ret
je
push
ljmp
sti
xchg
fisubl
data16
rorb
pusha
sbbl
imul
cmp
shlb
lahf
popa
mov
push
sbb
pop
stos
subb
int3
test
jg
ljmp
std
into
add
push
andb
popa
cmp
xor
xorb
or
pop
xor
adc
cmp
int3
dec
stos
popa
lds
mov
or
hlt
dec
ljmp
fwait
add
les
or
test
stos
subb
std
xchg
add
mov
lcall
add
mov
push
mov
dec
test
cwtl
std
cli
nop
mov
jo
push
outsb
popa
in
jmp
cs
push
jno
or
test
push
pop
ret
ret
ljmp
dec
or
inc
or
shrl
push
adc
rorb
cld
jns
pushl
add
xchg
mov
popa
xchg
or
or
mov
inc
adc
outsb
sbb
and
cltd
inc
test
inc
inc
clc
subb
loopne
jge
xchg
loope
shlb
xor
push
mov
pop
cltd
push
fs
add
fbld
fmuls
add
rcrb
popa
ffreep
sbb
or
orl
flds
mov
add
mov
mov
pop
inc
adc
inc
mov
or
xchg
inc
cmp
jbe
and
sahf
fistpll
popa
cmpsl
rolb
and
cld
adcl
sahf
test
bound
xchg
inc
pop
insb
mov
rorl
and
or
jno
add
rorb
push
jle
repnz
loop
ljmp
mov
pushf
andb
insl
aaa
mov
push
xchg
cmp
sub
mov
dec
ret
add
and
jge
shll
loopne
cld
mov
js
lahf
dec
jne
fs
adc
sarb
repz
fucomi
filds
mov
mov
xor
into
test
fwait
lock
add
stos
mov
adc
popf
loop
into
popa
add
add
and
rorb
adc
sub
jmp
xchg
popa
jge
ljmp
ds
mov
es
movsb
jle
pusha
add
cmp
and
inc
or
aam
lock
add
or
adc
aam
jge
in
pop
cld
aad
add
lret
xchg
or
xchg
xchg
add
add
xor
cmpsb
dec
incl
mov
popf
pusha
adc
sbb
pushf
adc
loopne
movsb
adc
push
mov
adc
and
into
jo
jo
push
mov
mov
dec
popf
enter
mov
fs
sbb
pop
outsl
sbb
hlt
cmpl
mov
mov
dec
adc
lods
lods
loopne
popf
mov
jp
inc
or
jbe
push
inc
aam
xchg
dec
pop
test
cmp
add
mov
add
mov
dec
mov
push
jno
fiaddl
dec
stc
or
hlt
int
sbb
push
fstpl
jle
inc
sub
mov
push
mov
push
cli
or
xchg
sar
and
mov
add
negb
call
add
add
add
inc
add
loopne
jmp
mov
cltd
mov
add
fimuls
pop
adc
jg
sbbl
ret
cmp
or
pop
add
inc
cmp
add
add
xchg
mov
das
mov
lret
sub
push
cli
sub
sbb
mov
inc
aaa
jbe
or
fildll
std
addl
xchg
xor
fiaddl
xor
push
xchg
and
mov
push
inc
or
xor
or
inc
jns
shrb
test
mov
pusha
scas
pop
test
dec
mov
test
jns
movsb
pop
pusha
push
xor
jge
lock
aad
or
cmp
push
test
adc
lret
fidivrs
lock
adc
pushf
addl
pusha
mov
inc
inc
adc
cmp
push
pusha
mov
sbb
popa
in
add
dec
fistpll
and
flds
aad
jecxz
out
xchg
mov
add
jl
dec
std
add
sbb
xor
mov
add
aaa
sub
pop
iret
pusha
inc
or
xorl
testb
jmp
and
adc
ja
add
push
mov
add
push
leave
popa
test
inc
jb
cld
xchg
xor
bound
bound
popf
loopne
mov
mov
jbe
mov
loopne
push
cmp
inc
mov
or
pop
pusha
mov
jbe
fcmovu
fbstp
mov
mov
pop
cwtl
add
dec
push
jg
loope
sbb
ret
dec
inc
add
adc
cld
decl
adc
add
aaa
mov
int3
dec
rcr
mov
insb
add
xor
ds
or
shrb
data16
push
cld
xor
inc
cmp
push
hlt
xlat
aam
shlb
add
fcmovu
mov
fldenv
cld
lcall
add
inc
out
jno
data16
xchg
adc
mov
jb
mov
cltd
fbstp
adcl
pusha
adc
add
pop
fildll
jbe
popf
jecxz
ljmp
bound
in
add
or
sub
push
xchg
mov
cld
mov
rcr
fcmovnu
fcompp
jbe
loopne
loopne
and
or
shll
sbb
inc
jge
and
inc
cmp
pop
mov
shlb
push
je
adc
add
mov
int3
inc
test
push
push
jbe
push
popa
outsb
jl
adc
or
data16
push
add
test
push
pop
rcr
push
pushf
leave
and
mov
fcomps
pop
hlt
mov
push
lods
xor
lock
inc
lods
pop
icebp
add
xchg
popa
inc
cwtl
add
out
or
iret
xchg
mov
mov
enter
xchg
sbb
aas
jo
incl
insb
out
nop
lcall
loope
sarb
dec
std
fcmovnu
outsl
cs
sbb
inc
inc
add
aam
rcrb
and
int
lods
inc
incl
cld
pushl
or
add
mov
or
add
enter
orb
insl
out
aam
mov
frstor
inc
pop
push
popf
mov
ret
stos
sbbl
pusha
xor
nop
mov
lcall
inc
enter
xchg
xchg
jmp
lret
sub
mov
lods
ja
cld
pop
push
bound
gs
mov
ja
fldt
or
loopne
pusha
add
push
xor
sub
cld
add
sub
inc
pop
ret
dec
mov
push
jb
ret
jo
jno
adc
jg
add
mov
or
popa
xor
and
mov
add
in
mov
xchg
popa
lods
push
cmp
mov
leave
pusha
nopl
mov
add
jbe
adc
push
xor
call
bound
inc
pop
test
and
mov
hlt
xchg
outsb
sub
cmc
fimuls
or
and
rcrb
xchg
xor
or
daa
rorl
clc
cmp
sarl
jno
stos
nop
add
inc
dec
xorl
out
pop
inc
and
jo
add
mov
stos
lock
les
push
pop
popa
mov
add
lock
test
sahf
jecxz
es
lock
inc
sbb
dec
sub
xchg
testb
cmp
lcall
adc
adc
je
loope
cmp
rclb
inc
push
mov
rcrb
push
or
mov
and
das
adc
adc
fildl
or
xchg
pop
and
adcl
xchg
xchg
popa
pusha
sbb
aam
push
add
sbb
or
popa
lcall
cltd
cmpsb
incl
je
popf
xor
add
add
add
mov
inc
and
push
cmp
inc
mov
aam
push
fcomip
xor
mov
jnp
sbb
outsl
mov
push
fildll
test
add
mov
jnp
adc
out
jo
add
xor
das
sub
mov
scas
mov
mov
xchg
mov
ds
aaa
inc
lock
push
pusha
mov
adc
ss
jne
inc
push
loope
add
xchg
lock
push
cld
jns
push
cltd
jo
add
popa
adc
mov
loopne
lods
add
lcall
mov
js
add
bound
xchg
fnstenv
adc
daa
jbe
pushf
xor
jl
cwtl
jecxz
adc
xchg
pop
adc
mov
ficoms
enter
sub
pop
rcl
out
jp
pop
out
push
cmp
jo
add
adc
call
jg
adc
rclb
and
or
fisubl
scas
addl
mov
mov
dec
mov
jge
or
dec
mov
popa
insl
cld
fcomip
add
aam
pusha
cli
and
shrl
sahf
xorl
add
loop
cli
in
sbb
xchg
cmp
push
sbb
add
xchg
add
popa
lock
lods
or
popf
addr16
and
shlb
out
xchg
push
and
roll
adc
and
test
mov
jno
xor
dec
mov
adc
incl
shll
inc
and
add
push
add
sbb
cmp
mov
addl
loopne
outsl
js
pop
or
fldcw
bound
test
sbb
andb
mov
add
divps
push
ljmp
dec
enter
and
pop
add
cvtps2pi
lods
add
push
scas
sub
ficomps
push
pminub
lock
or
mov
mov
jp
add
and
repnz
pop
fdivs
jecxz
dec
mov
out
jecxz
mov
add
adc
jo
sbb
sbb
cld
xchg
xor
mov
sarb
pushl
push
and
dec
int3
cli
ret
inc
cltd
lcall
mov
push
jns
xor
ret
xor
dec
std
inc
mov
xchg
adc
cmpsb
push
add
shrb
add
popa
bound
mov
mov
add
xchg
jno
data16
test
or
inc
mov
or
sti
arpl
nop
inc
sbb
loope
jnp
ljmp
xchg
and
add
cltd
mov
flds
add
incl
fidivs
xchg
int3
add
std
test
cld
or
cmp
mov
dec
push
fistl
loopne
pop
popa
add
xor
jl
cltd
rorb
jg
ljmp
push
outsb
mov
adc
mov
out
mov
xchg
lds
xor
addr16
mov
push
cli
test
inc
out
xor
bound
and
push
push
pushf
xor
lcall
push
xor
dec
ret
xchg
fidivrl
sbb
pushf
ljmp
mov
cmp
fsubrl
aam
mov
mov
lock
sbbl
cmpsb
rcr
test
mov
push
sub
mov
nop
add
mov
or
mov
jne
jno
into
mov
adc
jne
loope
dec
int3
sub
mov
add
js
hlt
int
mov
lcall
mov
mov
popa
mov
or
jns
jge
xchg
lock
sub
push
xchg
test
xchg
std
and
cmp
popa
std
scas
roll
cld
mov
shrl
add
add
shrb
cmpb
lcall
add
push
test
inc
pushf
ja
mov
push
jecxz
add
pop
and
inc
leave
push
std
xchg
ds
push
icebp
rorl
test
cmpsb
int3
add
int3
gs
ljmp
data16
decl
adc
adc
lcall
xor
test
les
rcl
dec
std
mov
dec
mov
std
test
insl
lcall
adc
test
add
xchg
inc
add
jp
mov
add
push
or
dec
bound
or
add
bound
mov
sub
testb
scas
xor
roll
mov
in
sub
rcll
push
test
loope
mov
test
mov
inc
mov
in
and
movsb
into
sbb
or
mov
sub
nop
nop
inc
clc
in
sbb
or
orl
xchg
outsl
mov
adc
adc
test
ror
mov
jg
inc
jg
add
jbe
inc
shrb
cltd
push
mov
add
pop
sub
adc
sbb
sbb
mov
sbb
push
cld
pop
stc
inc
and
mov
les
cltd
cs
xchg
ds
inc
dec
imul
dec
pop
rorl
mov
xchg
pop
add
xorb
mov
add
mov
movsb
add
dec
inc
xchg
dec
aam
jne
test
push
mov
xchg
or
out
call
mov
sub
or
testb
xchg
inc
sbb
jle
mulb
add
adc
xchg
push
loope
add
push
cwtl
sbbb
add
stos
fwait
xchg
sbb
pop
cmp
mov
adc
std
faddl
jmp
int
mov
je
test
sub
std
test
cmpsb
mov
inc
push
ret
add
lret
cld
in
pusha
nop
ret
scas
add
bound
inc
add
je
aaa
add
shlb
push
lcall
test
jbe
adc
addb
push
roll
das
jecxz
add
addr16
pop
rcrb
xor
jns
jl
cwtl
xor
fwait
inc
push
subb
dec
lcall
aad
add
enter
ret
or
adc
add
sbb
add
and
push
sub
dec
andb
mov
test
loopne
and
adc
inc
std
pop
xor
test
xchg
cmp
mov
pop
shlb
inc
cli
idivl
or
pushf
bound
lods
fs
test
xor
fisubl
mov
xchg
addr16
sub
loopne
xor
mov
mov
mov
loopne
mov
mov
sbb
mov
rorb
mov
bound
test
sbb
movsl
and
push
jmp
add
arpl
loopne
repnz
mov
adc
or
mov
push
jb
mov
inc
bound
mov
adc
or
shll
push
adc
in
xorl
andl
and
stos
add
rcll
stos
fmuls
cmpsb
fidivs
imul
cs
popa
fwait
add
or
rcll
mov
fs
pop
dec
push
cmpsb
jns
std
lea
mov
outsl
stos
mov
mov
push
push
adc
loopne
or
jmp
gs
popa
add
bound
popa
pop
popa
andl
mov
add
or
cmpb
or
fdivl
cmp
xadd
sub
shlb
add
xchg
shlb
mov
ret
dec
add
loopne
stos
cmc
stos
pop
mov
lcall
and
lcall
das
rolb
jno
movsb
push
xchg
stos
mov
std
pushf
jecxz
xchg
fdivp
add
push
and
push
popa
pop
inc
xchg
cmpsb
pop
fsubrs
orb
cmpb
shr
loopne
and
xchg
inc
or
pusha
mov
mov
xchg
mov
jb
lahf
or
das
push
adc
mov
das
xor
sub
movb
or
xchg
inc
and
jg
idivb
and
and
test
or
push
loopne
mov
scas
fidivs
subl
pushl
add
and
dec
outsb
add
mov
aam
sahf
out
inc
inc
fimull
loope
rcll
pusha
add
ja
out
js
sbb
outsb
loope
pusha
mov
add
incl
gs
push
cs
adc
mov
std
roll
mov
insb
int
jp
inc
test
mov
popa
fnstsw
sub
cmp
mov
mov
clc
lcall
mov
add
addl
fildll
stos
jle
faddl
lcall
popf
cs
pop
cld
and
push
loope
inc
or
ljmp
cmpb
jg
imul
dec
shr
sub
cmpb
cmp
and
mov
jmp
push
dec
jbe
inc
cmp
adc
adc
cmpsb
push
add
lods
lea
and
adc
jb
inc
loopne
adc
mov
or
bound
inc
push
mov
add
sub
pop
nop
xchg
xor
mov
jg
pop
sbb
movl
je
sahf
orb
add
lods
cltd
popf
clc
out
cld
pushf
and
aaa
sub
popa
xchg
jle
mov
push
mov
jo
fiaddl
loopne
add
mov
std
aaa
xchg
int3
mov
xor
and
xchg
stc
push
decl
ljmp
arpl
or
or
nop
jle
add
and
jl
pusha
mov
add
rorb
cmc
pushl
push
sbb
adc
sub
popa
fildl
add
push
push
jb
sbb
pop
in
test
cs
or
fcmovu
daa
push
into
and
add
xor
dec
cmpsb
dec
xlat
or
mov
mov
or
or
mov
mov
rolb
cmpsl
mov
lods
popa
insb
lahf
inc
adc
inc
sbb
aad
pusha
ror
popf
jle
sbb
or
es
lods
andl
lock
in
jl
add
mov
push
push
add
lea
mov
in
adc
outsl
and
add
je
cld
nop
add
add
pop
jne
decb
jno
scas
add
push
movsb
add
fbld
pop
add
sbb
mov
add
mov
adc
aaa
add
js
add
cli
fildl
push
add
dec
cld
iret
fistpll
or
add
mov
std
lret
add
mov
xor
or
jbe
std
adc
jg
out
shlb
pop
bound
std
mov
mov
scas
cld
sub
dec
cli
rclb
inc
jp
mov
clc
dec
adc
adc
push
mov
inc
mov
jg
jo
ljmp
leave
out
jo
xor
loopne
inc
add
fiaddl
mov
dec
jg
lock
mov
or
and
rcll
adc
hlt
pop
add
pusha
out
push
push
popa
mov
cmpb
and
mov
cmp
les
int3
jns
incb
mov
aam
xchg
add
mov
push
inc
xor
iret
lea
clc
and
sarb
leave
in
mov
call
add
inc
dec
ds
add
inc
int
cs
or
fsts
and
imulb
cmpsb
add
leave
jp
out
push
out
adc
xchg
mov
sar
xlat
lock
dec
iret
xchg
cmp
sbbl
fiaddl
lock
sbb
pop
jae
nop
inc
sti
das
clc
insw
push
jno
jge
add
or
inc
sti
jo
mov
dec
test
mov
xchg
add
or
add
mov
ret
dec
mov
sub
mov
cmc
fbld
add
movsb
je
insb
mov
shrl
in
fists
dec
sub
push
push
or
add
sub
mov
cld
call
test
mov
mov
popa
daa
lods
mov
adc
jmp
popf
mov
sahf
cltd
mov
sti
lea
in
mov
std
adc
das
sar
cmp
mov
mov
adc
les
mov
mov
addl
mov
shlb
mov
mov
fisttpl
pusha
test
push
mov
mov
or
and
sbb
test
decb
mov
add
stos
andl
push
int
sarb
or
add
add
shll
loope
leave
popa
mov
or
xor
dec
int3
pop
pusha
and
mov
jecxz
jle
sahf
push
add
xchg
adc
adc
rolb
jge
or
jbe
or
mov
mov
mov
shlb
xchg
call
out
sbbb
ja
lds
mov
pop
xchg
add
add
mov
ret
shrb
jg
loope
cld
call
mov
std
leave
or
and
sbb
cld
movsb
push
mov
ljmp
sar
mov
add
or
mov
add
test
push
jbe
mov
or
mov
adc
std
inc
rolb
add
addb
mov
adc
push
xchg
fdivrp
add
mov
fimuls
ljmp
lock
cltd
add
outsb
int
out
pushf
mov
cli
orl
movsb
jo
jo
fucomi
cmpsl
cld
xchg
ss
mov
fwait
addb
or
inc
outsb
fisubrs
arpl
cld
push
repz
or
dec
lret
orb
pop
hlt
or
mov
mov
sti
or
mov
add
add
inc
or
add
es
aam
pop
cmp
jmp
and
into
leave
xorb
pop
repnz
adc
nop
mov
ror
mov
mov
leave
popa
inc
dec
push
mov
inc
push
cwtl
in
push
push
cli
push
test
add
mov
nop
clc
mov
out
stos
test
shlb
xor
adc
inc
in
inc
rcll
or
addl
push
jbe
fimuls
shl
lcall
jno
popa
shll
jno
mov
jae
int3
mov
cmp
cltd
std
les
mov
or
into
cs
enter
jne
xchg
nop
cmp
lods
call
pushf
fs
mov
pop
mov
cmp
add
add
sti
cmp
add
cld
js
push
loopne
add
jns
mov
add
push
cli
push
add
rclb
add
cwtl
testb
mov
jge
iret
mov
sti
adc
lock
adc
test
mov
add
xchg
or
dec
lret
test
orb
jge
mov
add
xchg
ret
outsl
add
aad
mov
push
push
inc
xor
xor
mov
add
or
jne
ljmp
push
jbe,pt
cli
les
push
sbb
inc
ret
fistpl
mov
jne
pop
cli
fisubrs
jl
sbb
and
or
out
je
mov
mov
jo
mov
lods
add
adc
mov
sub
les
lock
adc
fcoms
add
push
out
ret
outsb
mov
and
adc
sub
or
add
mov
add
mov
push
cmp
add
add
push
inc
xor
add
jne
cmp
sbb
xor
or
mov
dec
xchg
push
lods
ret
mov
cmp
sub
or
mov
adc
dec
in
dec
out
addb
mov
mov
push
mov
add
adc
sbb
lea
rorl
popf
out
push
add
test
ret
jg
add
mov
popa
push
push
sbb
jbe
jbe
adc
jne
xchg
test
adc
or
orb
orb
jle
hlt
inc
call
insl
mov
mov
hlt
jge
mov
push
mov
subb
outsl
push
cltd
push
add
xchg
loop
mov
add
mulb
addb
cs
add
cmp
and
inc
ret
mov
push
lock
adcl
push
lods
nop
gs
xorb
cmpsb
mov
mov
jne
ret
aas
fs
int3
add
push
xchg
dec
pusha
js
lds
mov
fnsave
pop
mov
push
inc
sbb
bound
push
add
ror
adc
pop
fdivr
inc
scas
mov
sar
dec
mov
push
loope
mov
mov
aas
sbb
cld
loope
popl
mov
jbe
sbb
sahf
enter
fldenv
addb
mov
sar
sub
call
cmp
sbb
add
inc
cmp
and
rclb
shr
push
pusha
push
into
pop
mov
loopne
popa
rol
cltd
push
orb
ret
jbe
add
xchg
jle
int
jbe
inc
jg
add
mov
not
mov
push
addb
les
jno
aas
lea
in
shrl
clc
stos
mov
data16
xchg
sti
shlb
add
leave
jecxz
mov
sbb
pushf
sbb
mov
jb
movsb
loop
icebp
jns
add
lea
orl
adc
mov
rolb
jp
dec
add
jge
add
pusha
fisttps
inc
dec
sub
loopne
mov
enter
test
mov
pusha
push
testl
mov
add
push
pusha
cltd
xor
adc
mov
mov
in
test
push
popa
or
add
jg
pop
add
cld
fucomip
outsl
sahf
cld
or
xor
ja
sti
arpl
sbb
fcmovnb
in
incl
cmp
mov
call
pop
adc
add
in
shll
enter
sub
or
in
push
stos
clc
fidivrs
cmpl
sub
ss
mov
rorb
clc
inc
mov
dec
call
les
leave
jl
jmp
call
mov
std
and
add
ret
cmpsb
xor
push
inc
sti
pop
into
mov
insb
xchg
test
and
std
ja
je
adc
adc
sub
dec
mov
sub
jg
and
stc
and
bound
add
xor
sar
icebp
dec
and
sub
and
dec
fwait
pusha
add
push
lea
xor
xor
lods
add
imul
test
adc
cmp
cld
subl
xchg
push
push
mov
and
mov
roll
add
add
sahf
negb
or
and
xchg
sub
fisubrl
stos
adc
mov
mov
jno
subl
outsb
mov
shrl
mov
shlb
popa
add
fldcw
mov
lds
icebp
shr
add
sarl
shr
sbb
cmp
in
rclb
sub
dec
shr
stos
cmp
stos
movsb
jnp
mov
xor
int3
xchg
lret
out
in
shrl
outsb
stos
cmc
repnz
subb
add
fbld
je
xchg
dec
loopne
mov
mov
adcb
push
shrb
je
test
orb
mov
adc
sub
fwait
mov
rcll
cs
hlt
push
ret
push
std
lods
or
jb
adc
mov
mov
add
mov
or
call
into
mov
add
test
std
mov
mov
outsb
and
notrack
push
rcrb
ljmp
pop
popa
xor
xorb
push
lea
test
jp
mov
les
mov
fwait
push
add
roll
xchg
jo
data16
fists
nop
mov
imul
mov
test
xlat
stos
mov
stos
cltd
fscale
das
add
pusha
jnp
subb
mov
test
mov
loope
pusha
cltd
sbb
add
jecxz
scas
fiadds
jle
jg
mov
push
pop
add
mov
in
add
add
test
sti
or
cmpsb
add
and
movsl
test
sbb
imul
shlb
in
in
outsl
xor
cld
push
xlat
dec
ficoml
push
or
loop
loope
jp
jg
push
adc
dec
mov
or
les
dec
ljmp
fimuls
cwtl
dec
rorb
addl
rol
jbe
out
ds
jnp
inc
popa
fucomp
jl
add
xchg
addb
mov
push
popa
inc
jg
pop
scas
lods
cmp
xor
cmc
call
cmpsb
cli
sbb
mov
add
adc
xor
loop
in
add
jp
incb
stos
aaa
leave
inc
push
adcl
fistpll
pop
mov
and
bound
addb
xchg
mov
sbb
pop
and
lds
add
push
fdivr
push
jecxz
popa
clc
adc
mov
add
add
xor
test
and
cld
add
mov
dec
inc
clc
jbe
pushl
cld
jg
out
mov
cli
test
adc
popf
add
mov
orl
add
push
adc
push
jg
and
push
jecxz
outsl
mov
orb
pop
lock
and
xor
lea
or
imul
or
add
inc
les
hlt
jb
add
mov
or
adc
orps
neg
fldcw
jbe
shll
decl
lock
add
mov
popa
fisubl
mov
sbb
not
or
dec
nop
add
ret
adc
jbe
decl
add
sti
adc
arpl
loopne
orb
bound
mov
orl
sbb
mov
sbb
xlat
loopne
inc
dec
lea
ja
das
idivb
popf
adc
loope
jns
push
fsubp
mov
push
jecxz
call
jge
stc
ss
icebp
shrb
scas
sahf
adc
mov
fisttpl
add
add
mov
inc
clc
les
loop
fimull
jg
popa
call
dec
mov
jne
push
sbb
or
sbbb
icebp
fbld
std
scas
push
test
jne
jne,pn
add
fsubrp
xor
jl
and
nop
xor
cmpsb
fiadds
shll
mov
and
pop
andb
add
add
add
mov
push
and
adc
and
push
sbb
and
aas
lods
mov
jmp
and
lock
popa
add
push
mov
push
cs
pop
test
popa
fwait
mov
inc
decl
add
mov
mov
popf
and
lods
xchg
adc
or
jbe
push
inc
xchg
mov
xor
push
int
out
shlb
andb
and
sub
pushl
and
and
adc
cmp
rolb
loope
nop
mov
xchg
sbb
or
xor
xchg
sub
xchg
icebp
std
pop
roll
shlb
lock
out
mov
mov
std
jmp
or
shlb
stos
mov
test
and
add
cltd
mov
xor
lock
push
jp
mov
rorb
shll
mov
jmp
icebp
mov
popf
lock
jg
mov
add
xchg
or
fcomip
filds
sub
rorl
push
or
pop
pop
xchg
rorb
pop
imul
push
jbe
and
xchg
test
mov
cltd
push
cmp
lods
xor
test
add
and
popf
addb
xchg
inc
add
mov
test
add
popf
or
add
std
test
add
orb
push
daa
xor
mov
or
js
sbb
or
daa
mov
stos
cmp
and
push
cmp
jo
popaw
ret
decl
and
add
push
mov
inc
mov
mov
jno
push
ss
push
inc
jae
push
push
pop
loopne
popf
mov
stos
and
push
das
mov
push
and
xchg
pushl
sub
or
sub
jo
loope
adcb
jecxz
pop
sbbb
pop
xor
inc
adc
lds
xlat
fs
jo
js
hlt
mov
xchg
icebp
and
mov
and
push
ret
js
push
add
adc
adcl
fists
frstor
lcall
and
push
jg
inc
sarb
bound
cmpsb
nop
push
mov
dec
mov
add
jo
rorb
xchg
pop
call
inc
std
xor
add
ds
scas
dec
addb
pop
scas
inc
sbb
mov
pop
mov
aam
fs
sub
std
mov
add
mov
adc
add
ja
or
mov
inc
mov
mov
popf
into
rorb
pop
dec
jecxz
jecxz
push
loop
cmp
int3
jbe
out
mov
mov
sub
hlt
or
sub
jmp
add
mov
mov
cltd
popa
cmp
test
xor
dec
add
mov
imul
mov
push
pusha
push
loopne
pop
jbe
push
je
pop
mov
repnz
addb
adc
push
dec
popf
and
cltd
and
loope
sarb
adc
je
loopne
mov
or
pop
or
or
aam
arpl
pop
inc
adc
adc
inc
nop
pop
add
mov
sarb
shlb
mov
cmp
push
das
clc
pusha
xlat
push
pop
inc
test
cmp
adc
fdivl
push
lock
jmp
mov
fs
jae
fisubs
mov
jl
inc
es
sub
sbb
push
or
fcomp
pusha
add
inc
jg
or
test
js
int
mov
popf
add
xchg
add
xor
nop
mov
pusha
out
mov
jecxz
mov
push
jmp
cmp
in
fs
ds
adcl
or
xor
outsb
or
xor
and
xor
add
pop
xor
int3
add
inc
xor
or
add
inc
out
mov
sbb
cmp
iret
shlb
insb
sbb
test
loope
dec
fsubrl
add
in
xchg
cmp
fmulp
loope
push
gs
daa
mov
adc
and
jno
add
call
mov
mov
xor
mov
jl
movsb
std
ja
js
or
sub
test
sub
sbb
or
icebp
orl
addb
inc
int3
sbb
pushw
fldenv
sbbl
jne
xor
testl
dec
xor
inc
mov
push
dec
addb
ss
and
dec
push
push
xchg
mov
add
pop
xor
in
addl
in
mov
stc
lret
imul
insl
sar
data16
mov
xor
sbb
pusha
popa
cmc
dec
lret
push
sub
sahf
mov
lcall
inc
fdivl
ret
loop
add
add
sub
in
add
das
ret
xor
orb
jmp
fnstenv
adc
addl
cld
cmc
in
mov
add
inc
rcl
out
adc
loope,pn
and
xorl
cmp
pop
xlat
add
sbb
dec
sbb
data16
mov
add
fstpt
test
ficoml
adc
dec
jl
andb
push
dec
dec
out
add
or
lods
sbb
and
incl
hlt
subb
test
add
flds
or
lret
or
scas
clc
mov
or
sti
inc
xor
jp
cmp
pop
or
test
jecxz
mov
cmc
lods
fst
popa
int
adc
mov
inc
sbb
inc
pop
sub
pop
test
mov
aaa
insb
adc
add
dec
mov
lods
and
jo
incb
inc
add
popa
or
out
pop
fistpll
inc
xchg
fisubs
mov
inc
adc
mov
push
xchg
test
xor
and
daa
rolb
jno
cli
sub
mov
ja
add
and
rorb
or
cs
jmp
jne
push
mov
adc
push
test
add
jae
and
or
cmc
jg
jle
mov
test
xorb
fisttpl
add
mov
call
inc
jbe
or
addl
std
adc
pop
adc
and
and
pop
add
jbe
dec
popf
or
dec
divb
xchg
xor
sahf
subb
sub
pop
test
lds
jbe
or
and
pop
sahf
jecxz
shll
popa
jns
add
inc
sbb
adc
js
cmpb
inc
sub
or
push
push
sbb
xchg
push
inc
and
mov
cmpsl
pusha
mov
cmp
dec
nop
xorb
and
inc
fndisi(8087
icebp
lahf
jg
je
inc
inc
shlb
orl
inc
add
inc
push
jecxz
leave
out
sahf
inc
or
adc
jbe
jbe
dec
loope
adc
inc
mov
and
jne
imul
push
mov
sub
add
jbe
push
lret
inc
es
clc
incl
loopne
addl
inc
push
or
das
xor
mov
orl
mov
das
mov
add
mov
jb
add
inc
js
ficoml
andl
or
lods
roll
and
mov
add
cld
out
mov
roll
shrb
push
cmp
push
add
lret
and
or
xchg
imul
leave
pop
sub
mov
xchg
shlb
add
mov
mov
imul
cld
cld
in
pop
jl
sar
fsubp
test
dec
sub
adc
pop
push
icebp
rcl
push
sbb
adc
es
inc
adc
adc
bound
push
insl
pushf
ja
inc
adc
mov
filds
adc
repz
hlt
adcb
enter
add
das
sub
adc
scas
inc
cmpsb
movb
aam
popa
ficomps
rolb
lcall
sahf
adc
xor
adc
fisubrl
add
pusha
adc
and
add
add
jg,pn
rcr
cmpsl
sbb
lods
xor
sbb
jne
aaa
popl
or
and
jnp
push
jbe
lcall
popa
or
lea
xor
inc
data16
inc
movsb
aaa
add
sbbb
xchg
repnz
and
loope
inc
scas
das
shlb
fiaddl
enter
or
mov
xor
orl
pop
mov
push
xchg
inc
pop
xchg
into
sarl
jg
inc
shlb
or
gs
xor
inc
or
jg
add
clc
pusha
adc
stos
fcmovb
or
cld
cltd
xor
dec
andb
and
and
scas
leave
loope
cmp
and
pop
add
filds
mov
push
pushf
stc
pusha
nop
mov
jmp
mov
xchg
mov
lea
add
inc
pusha
loop
xor
pusha
dec
and
and
call
xchg
push
push
add
and
decl
xor
add
cmp
add
cs
pop
cwtl
lds
mov
mov
fildl
cmp
leave
cmpsb
add
shll
xor
in
mov
lcall
add
popa
cli
enter
add
push
jg
loop
or
jle
outsb
adc
mov
std
and
sarb
add
add
ja
mov
popa
push
cli
loopne
dec
xlat
push
inc
sub
gs
jg
leave
bound
icebp
xor
dec
nop
push
mov
push
and
ja
jbe
loopne
dec
xor
xor
xor
fidivrs
pop
nop
sbb
adc
xchg
xor
fistps
xchg
lcall
push
call
dec
adc
pop
mov
jae
andb
add
ret
add
dec
int3
sbb
mov
test
lea
cld
jne
jle
fiadds
pushl
pop
pushf
mov
mov
lea
add
mov
loope
rol
loop
sbb
rolb
loope
orb
fildll
insb
inc
xor
pop
dec
imul
sub
jecxz
popa
fistpll
ret
jbe
jo
sub
or
mov
or
xor
dec
hlt
pop
fnstenv
dec
xchg
cmp
push
add
add
jbe
push
popa
mov
xchg
inc
pusha
pusha
aam
popa
sti
jmp
sbb
bound
lds
mov
mov
mov
decb
mov
popa
push
jle,pn
or
push
mov
add
mov
cmpsl
or
or
std
adc
sahf
stos
je
adc
add
add
or
or
cmp
nop
jecxz
push
adc
dec
sarb
jmp
sbb
in
mov
jo
mov
loopne
mov
adc
testb
add
cmp
mov
ret
add
inc
test
add
or
call
cmp
mov
xlat
inc
pop
dec
popa
push
jge
push
rcrl
xor
shll
ja
or
or
xor
int3
test
lds
outsb
das
movsb
push
cmp
add
inc
pop
sarb
stos
jbe
jbe
pop
dec
mov
push
pusha
imul
negl
push
in
lods
lods
lret
or
rclb
adc
insb
inc
xchg
inc
lock
and
lea
lods
nop
adc
mov
fidivrs
add
add
cld
orb
jo
lods
add
pop
pusha
mov
jge
loopne
lods
adc
nop
add
add
cmp
popa
pop
in
push
xchg
call
pop
mov
pop
xchg
outsb
xor
or
jo
mov
or
cli
sbb
rcrb
adc
jo
mov
cwtl
sbb
sahf
and
test
xchg
mov
pushf
push
cltd
rcrb
ret
lcall
and
icebp
sub
add
stos
fnstcw
add
jno
mov
inc
push
stos
pop
or
inc
mov
ret
inc
mov
test
or
sbb
jp
xor
roll
dec
cmp
sbb
or
push
pop
push
dec
bound
ljmp
or
loope
rcrb
popf
sti
mov
test
lods
adc
and
ljmp
add
dec
xchg
sbb
inc
cltd
inc
std
test
std
call
cmp
adc
fildl
jp
adc
fildl
xchg
cmp
addl
rolb
mov
dec
loop
shrb
aad
pusha
lcall
or
or
imul
repnz
mov
and
popa
leave
nop
add
adc
loope
mov
xchg
sbb
jo
mov
fwait
test
push
mov
pop
loopne
mov
lods
fwait
outsb
add
mov
stos
jo
pop
add
icebp
pushl
adcl
inc
fcom
je
jmp
sub
mov
test
sub
or
xchg
aaa
sbb
push
addl
lea
ds
icebp
pop
cwtl
sbb
add
adc
cltd
sub
ljmp
mov
lcall
lock
add
lea
popf
in
adc
popa
sub
inc
nop
jno
and
push
clc
aaa
roll
mulb
pop
mov
adc
xor
fidivrl
fcoms
push
add
jg
or
jb
mov
bound
sbbb
pop
add
inc
popa
nop
adc
or
adc
popa
mov
or
push
clc
mov
roll
das
xchg
or
or
mov
loope
adc
sbb
js
sbb
dec
push
add
test
push
sbb
pop
call
or
adc
rcrl
shll
sub
repnz
mov
and
pop
movsl
clc
sbbb
add
enter
jecxz
popa
or
addb
sbb
cmp
inc
or
sub
push
push
inc
nop
lret
das
fmuls
push
bound
sub
addb
mov
cmp
jbe
loopne
push
push
push
js
adc
mov
xor
jle
add
add
mov
std
ret
mov
cli
sub
inc
std
mov
xchg
rcl
pop
clc
mov
add
insb
jo
ljmp
out
or
cld
fwait
or
bound
cmpl
roll
lret
mov
jne
mov
add
add
dec
mov
add
lret
je
enter
int
popa
xchg
add
in
lea
push
std
mov
xor
rcrl
bound
jg
pop
lods
lock
fdivrp
mov
rorb
dec
andb
iret
scas
and
lcall
test
mov
sub
in
push
sbb
dec
mov
or
sub
jg
jno
push
cmp
and
add
inc
and
or
mov
subb
insb
mov
jg
std
push
jg
xor
pop
or
jl
inc
fistps
adc
sub
push
icebp
jnp
push
push
inc
jbe
pop
mov
dec
bound
mov
add
mov
mov
gs
test
dec
into
pop
loope
pop
aaa
cld
add
push
xchg
and
pop
shll
jae
xor
jns
clc
sub
inc
aaa
pop
lock
mov
in
popa
les
mov
add
xor
xor
ret
inc
dec
mov
pop
std
inc
roll
stos
mov
clc
fisttps
cwtl
popa
lock
addl
add
call
sahf
fnstcw
lock
or
test
outsb
lret
andl
inc
pusha
cld
and
bound
inc
rolb
insb
xor
loop
rcrb
ficoms
jecxz
push
and
and
or
loope
add
fcom
faddl
cs
add
add
and
xchg
shrl
movsl
jl
scas
insb
add
mov
and
fisubs
data16
mov
adc
jecxz
add
xchg
dec
incl
xchg
cmpb
fisttpl
icebp
add
inc
xchg
pusha
pop
fcmovnbe
add
outsb
test
mov
clc
and
rorl
push
inc
andb
mov
mov
mov
jbe
test
dec
orb
jp
leave
movsb
ja
or
push
jl
mov
in
inc
cmp
sub
mov
add
lods
or
sub
pop
xchg
sub
rcl
and
sbbb
shlb
js
test
test
enter
ss
jg
jno
or
add
mov
popf
sbbl
sbbl
int3
movsl
test
add
cmpb
xor
jg
or
xor
pop
popa
rorl
hlt
and
and
push
or
push
xor
sbb
imul
jg
lock
xorb
andb
mov
xor
jp
test
decl
mov
or
in
push
ret
or
ret
add
in
incl
mov
add
mov
cld
mov
fdivrl
rorb
popa
push
ret
mov
add
loope
lock
jecxz
dec
shrb
add
cmp
inc
pop
loop
jl
ja
movsl
add
addl
add
sub
cltd
rcrb
sbbb
cltd
push
inc
andl
test
add
xorb
push
in
inc
push
rol
jl
add
fwait
lock
daa
lret
pusha
insl
rcrb
add
push
mov
in
cmp
mov
loope
mov
aaa
xor
add
jo
mov
ja
adc
in
and
les
or
add
mov
or
cltd
xorb
mov
icebp
fdivrp
fcoms
jg
pop
rcrb
ficoms
or
sarb
inc
jbe
scas
shll
movl
mov
insl
or
mov
cltd
std
sbb
popa
rcll
sar
adc
inc
cld
aaa
jl
aas
rclb
sub
lods
notb
add
test
cmp
mov
ja
or
add
popa
xchg
aad
add
pusha
fisubs
ja
mov
gs
arpl
bound
pop
cmc
sbb
xor
mov
mov
jge
mov
shl
leave
adc
rcr
int3
insl
inc
jns
add
hlt
xchg
cltd
ret
and
mov
sub
mov
sub
call
mov
leave
fisttps
andl
pop
mov
and
rolb
pusha
or
int3
push
fldenv
or
jno
das
jecxz
xorl
es
lods
data16
add
and
stos
ficomps
sbb
add
sbb
add
movsb
jg
hlt
push
add
and
call
or
bound
lea
sub
dec
ss
out
nop
mov
mov
jle
and
or
or
xchg
mov
jmp
repz
add
outsb
cld
xor
sarb
out
out
bound
arpl
sti
out
cmp
xchg
clc
in
adc
aas
dec
jle
lcall
or
mov
jbe
pop
mov
sub
adc
js
cmp
les
mov
loopne
cmp
fs
mov
add
mov
mov
jg
mov
mov
add
mov
mov
xor
call
and
leave
arpl
movsl
and
sub
int
add
lcall
cmp
mov
aad
les
test
test
and
je
xlat
mov
scas
dec
or
mov
mov
or
out
xor
xor
xchg
jmp
jne
lods
sub
or
nop
pusha
or
andb
cmc
fwait
or
mov
lar
adc
test
mov
mov
sbb
je
push
pop
inc
bound
push
adc
push
jno
inc
pushaw
sbb
andb
call
popa
add
add
bound
adcb
ss
mov
jo
jg
scas
loopne
test
std
pushf
out
pushf
and
mov
std
rclb
or
dec
add
mov
sti
js
repnz
addl
or
ss
add
jo
rcr
cmp
add
mov
or
push
ret
sub
jns
jg
add
mov
cld
mov
addl
and
fmul
out
sub
incl
xchg
mov
mov
push
add
mov
test
sbb
rorb
testb
mov
push
mov
rolb
enter
aam
ret
subb
ret
add
aaa
std
jg
test
pop
jg
mov
and
adc
push
loop
mov
testb
cld
stos
enter
add
or
xchg
add
mov
mov
loop
loop
cmp
mov
or
loope
sahf
lea
mov
inc
out
xor
loopne
xchg
lods
lock
mov
pop
mov
repz
cld
mov
or
test
or
dec
sti
addr16
sarl
les
and
ret
mov
xchg
iret
inc
mov
flds
rclb
mov
add
inc
adc
mov
andl
popf
popa
test
popa
or
add
mul
xor
pushl
or
or
fidivs
jbe
adc
fs
and
mov
adc
stc
popa
inc
xchg
rolb
mov
xor
add
jle
cltd
lcall
popa
in
jp
orb
sub
dec
mov
pusha
add
adc
call
pop
xchg
or
fcoms
pop
add
sbb
dec
push
inc
test
cld
scas
pusha
adc
sarb
das
clc
mov
std
inc
mov
mov
and
or
add
sbb
fcomip
sub
inc
sbb
and
xor
mov
xor
insb
mov
popa
fnstenv
lock
mov
flds
pushl
or
xchg
inc
push
pop
subb
outsl
or
mov
add
push
add
jae
inc
std
sbb
test
add
jo
mov
imul
enter
add
jo
icebp
mov
mov
jle
mov
negb
and
xor
adc
imul
ss
or
ljmp
pusha
lock
cmp
repnz
fsubrl
sub
shrb
cmp
sbb
add
shlb
push
cld
lcall
jbe
push
sbb
add
loope
jb
adc
or
int
shrb
add
imul
out
mov
mov
popf
in
mov
cld
adc
shr
mov
xor
cld
test
add
add
or
movsl
pop
shll
xchg
rcll
xchg
cmp
jb
stos
lds
fcompl
ret
or
xor
ja
repnz
jae
or
ret
dec
mov
adc
mov
dec
mov
fcomip
fwait
test
sub
mov
pusha
adc
xchg
mov
ljmp
add
push
mov
mov
add
leave
loopne
in
sbbb
pop
loopne
mov
nop
add
jecxz
add
adcb
clc
pop
mov
add
xor
iret
mov
popa
cld
sub
add
jbe
dec
movsb
mov
jno
mov
int3
and
cmp
icebp
mov
dec
pop
loope
pusha
in
call
loopne
xor
lea
xor
pushf
sbb
mov
test
mov
dec
lahf
add
mov
rcl
pop
loope
lods
xchg
jns
mov
sub
cli
mov
mov
sbb
add
xchg
or
sub
xchg
std
scas
sub
add
subb
adc
cmp
jge
jmp
and
aam
out
je
sbb
and
and
adc
push
adc
inc
popa
scas
rolb
add
int
mov
adc
pop
loopne
mov
lock
jns
and
or
mov
mov
pop
push
dec
popa
into
imul
mov
popa
arpl
push
mov
loopne
dec
je
add
outsb
cs
and
fs
ja
scas
call
loope
rclb
jl
adc
adc
jns
es
subl
test
cmc
jb
cltd
inc
sub
or
sub
sub
nop
ljmp
xchg
nop
mov
nop
sbb
pop
mov
call
push
hlt
loopne
add
and
and
lods
aas
push
incl
mov
popa
shll
and
std
lcall
int3
mov
or
add
lcall
es
sub
pop
mov
jp
xchg
jb
jl
popf
repz
cld
pop
sti
dec
sub
inc
dec
add
inc
shrl
popa
jle
jo
push
sbb
xor
cmp
add
push
sub
nop
les
ja
mov
mov
rcrb
pop
adc
inc
inc
popa
cmp
icebp
fwait
xchg
push
xchg
jecxz
mov
mov
dec
int3
pop
popa
mov
jo
ret
rorl
sub
insl
mov
out
dec
push
cld
cmpsb
popf
jmp
sbb
or
rolb
pop
fistl
push
in
push
sub
or
sbb
fcmovnbe
mov
jge
push
jecxz
inc
hlt
dec
pop
into
add
in
jns
rolb
adc
lcall
fimull
popa
ficoml
enter
pusha
push
into
outsl
clc
push
push
icebp
addl
and
pop
hlt
std
cli
mov
and
cld
mov
cmp
or
xor
int3
jge
mov
dec
mov
sbb
rcr
mov
scas
dec
jno
das
push
mov
leave
popf
inc
jecxz
dec
in
cmpsl
mov
gs
push
rcrb
mov
shlb
push
jbe
mov
and
pop
adc
call
push
jecxz
js
inc
cmp
adc
adcl
jo
movsb
into
add
mov
lods
dec
or
popa
ret
inc
cld
decl
cld
jo
jns
in
push
rol
popa
add
incl
nop
cmp
mov
xlat
test
rolb
mov
test
icebp
inc
mov
sub
std
addl
orl
or
fdivs
movl
push
rolb
dec
enter
out
pop
xchg
pop
jne
and
scas
arpl
adc
popa
stos
pop
icebp
mov
inc
xor
das
sbb
fldenv
or
push
les
mov
hlt
inc
shlb
pop
ljmp
dec
jg
xchg
mov
mov
mov
mov
mov
or
int
sub
js
mov
adc
jo
sti
push
push
dec
inc
add
xchg
test
shll
lock
xchg
add
mov
mov
mov
push
pushf
into
loop
rolb
std
mov
mov
iret
mov
and
jno
or
mov
hlt
mov
sub
call
adc
push
leave
jbe
adc
inc
int
sbb
pusha
push
adc
inc
in
or
jle
or
lods
in
inc
inc
nop
xchg
popf
mov
mov
cmp
cld
cmpsl
aad
pop
scas
add
or
dec
adc
std
mov
push
mov
add
add
test
lock
pop
nop
fcmove
add
aad
xor
cmpl
pop
adc
xor
inc
add
adc
gs
test
lret
and
add
push
mov
add
fstps
and
inc
mov
fs
loope
push
es
mov
sub
fnstenv
xor
popf
mov
out
jb
int3
cltd
add
dec
cltd
add
add
je
hlt
mov
daa
into
rcl
jp
sub
add
push
xorb
pop
int3
lods
inc
test
sub
sub
jl
movsb
or
add
pop
pop
or
inc
add
fsubl
js
xchg
push
in
sbb
gs
adc
add
mov
lods
test
jmp
cmc
cmp
mov
push
cld
mov
mov
decl
rolb
andl
jge
cli
mov
popa
xor
cmp
insl
xor
mov
dec
fdivp
xchg
xor
insl
mov
push
mov
les
adcb
sbb
and
mov
fdiv
int
xor
icebp
mov
std
xchg
or
pop
fidivs
subl
filds
sbb
add
pushf
push
test
xchg
add
mov
mov
stc
stc
adc
lcall
xchg
push
clc
aas
cli
add
dec
xor
ss
andl
add
push
test
or
push
xor
bound
inc
xchg
push
test
cmpsb
pop
add
mov
mov
xor
mov
adc
insb
test
or
push
pop
sahf
and
push
sbb
add
outsl
xchg
cmp
mov
mov
mov
and
adc
fstl
adc
leave
cltd
outsb
fbld
mov
mov
jmp
fcmove
or
jecxz
add
nop
mov
cli
and
pop
mov
popf
and
add
outsl
cmp
mov
adc
clc
stos
aam
movsl
es
popa
out
clc
subb
pop
add
aad
stos
add
or
xchg
cli
sarb
lds
inc
adc
push
push
pop
cmp
or
or
pop
sbb
xor
jecxz
inc
adc
mov
cmp
sub
sub
flds
xchg
insb
insl
mov
inc
or
cmp
ja
popa
les
add
inc
popf
nop
fnstenv
mov
xchg
das
clc
dec
jmp
jecxz
xchg
fs
add
lds
test
jae
add
scas
add
push
test
add
mov
incl
xchg
mov
scas
movsl
jbe
mov
clc
jmp
popa
mov
inc
mov
inc
incl
stos
cmp
popf
sarl
sbb
mov
lcall
fsubr
inc
lret
cmp
in
xorl
das
mov
sub
jmp
aad
cmp
jecxz
fistps
push
ffree
xlat
popa
add
jns
mov
jp
inc
call
jne
pop
pop
imul
adc
add
ficompl
and
push
mov
xor
dec
mov
and
nop
pop
shlb
push
insl
inc
sar
push
lock
fstps
cld
popa
pop
mov
and
cmpb
dec
stc
add
in
or
pusha
loopne
fs
fnstenv
insl
stos
push
call
movsb
sub
lds
mov
adc
inc
and
ret
mov
and
xor
dec
add
les
mov
int3
or
je
dec
add
or
jp
dec
clc
fisttps
test
test
sbb
sub
mov
test
cmp
test
push
stc
push
dec
mov
add
add
push
fcomip
add
mov
mov
sub
aad
fisubl
out
inc
jo
xchg
stos
and
and
xor
clc
adc
push
in
jnp
push
int3
add
lea
mov
loopne
and
popa
lret
cld
mov
xor
adc
test
std
mov
and
mov
mov
and
rorl
or
adc
pop
jo
sar
mov
cmc
cmp
mov
push
push
add
inc
sbb
pusha
cli
jg
scas
push
sbb
add
js,pt
pop
cmc
outsl
push
enter
or
push
or
jo
push
add
jecxz
loop
mov
mov
xor
cltd
fs
xchg
push
sub
inc
or
rolb
pop
out
sahf
add
adc
shr
les
add
popf
mov
orb
ja
pop
bound
cld
pushf
pop
loope
add
add
hlt
add
bound
push
shrb
rorl
xor
cwtl
into
pusha
sub
sub
push
popa
mov
add
xchg
pusha
mov
jge
cmpb
orb
faddp
sbb
jge
pushl
pop
mov
pop
and
mov
addl
push
fdivl
and
insb
pop
aad
sbb
sub
enter
push
inc
lea
fdivr
ficompl
add
add
cmp
mov
pusha
les
or
fbstp
inc
shlb
add
or
add
add
lret
out
or
rcrb
jmp
adc
and
inc
or
add
test
push
jbe
enter
adc
dec
sbb
mov
or
inc
add
push
jo
stos
ret
jo
aam
mov
int
xor
mov
pushl
popa
pop
addr16
mov
mov
dec
xor
mov
loopne
or
add
inc
inc
mov
inc
pusha
mov
decl
push
pusha
mov
cmp
loope
jns
or
mov
lret
testb
xchg
jg
test
mov
jb
popa
jno
ret
rdtsc
scas
cmc
testb
cmp
inc
push
adc
mov
pushl
lret
push
sbb
cmp
xchg
pop
adc
mov
add
xor
popa
cmp
or
and
push
push
cwtl
add
adcl
ret
add
std
test
imul
mov
popa
and
inc
roll
cmp
xchg
adc
popa
inc
fs
add
sbb
cmp
inc
xchg
adc
cli
outsl
jmp
xchg
add
inc
xchg
adc
inc
dec
and
xor
cmp
nop
dec
add
xor
dec
sbb
leave
or
mov
lcall
mov
incl
incb
jecxz
sbbb
fwait
xor
add
mov
mov
or
incl
push
fsubrs
add
or
popf
inc
push
stos
mov
int3
add
mov
inc
mov
push
gs
pushl
mov
adc
shrb
pop
rolb
mov
insl
xchg
adc
movsl
pusha
aaa
pop
inc
mov
jno
mov
or
cmovno
sbb
ret
fwait
add
jbe
cld
addb
push
fdivr
cmpsb
mov
mov
enter
push
movsl
adc
ja
rolb
mov
push
dec
add
add
enter
mov
rorb
add
notb
pop
insb
mov
xchg
inc
enter
push
jg
mov
adc
jbe
stc
xor
ret
stc
mov
push
cli
ja
jmp
adc
enter
pusha
inc
lock
pusha
add
xor
push
test
mov
in
add
fimuls
sbb
cmp
add
sbb
inc
shlb
jl
pop
lock
mov
xchg
pushl
aaa
inc
scas
jl
jle
add
loope
adc
cld
int
inc
add
add
dec
bound
repz
jbe
insb
es
es
sbb
jmp
call
mov
add
xor
aaa
fmull
xor
ficoms
sahf
xchg
adc
and
ljmp
add
bound
mov
lcall
inc
movzwl
std
bound
cs
nop
add
in
add
mov
js
sbb
push
and
shr
popa
aam
cmc
jbe
in
sbb
push
add
add
dec
rorl
jns
negl
stos
adc
push
decb
jp
dec
add
bound
loope
add
jecxz
cmpsb
and
and
std
jmp
mov
sub
or
mov
clc
arpl
pop
or
sbb
fdivp
mov
loope
mov
and
jg
ja
jmp
in
dec
sbb
nop
ljmp
add
popa
fcoms
stos
movsl
rcrb
mov
pusha
inc
daa
push
scas
mov
push
push
shl
push
cmpb
aad
incl
lea
ja
xchg
fisttps
repnz
and
pop
insb
xor
inc
add
fildll
int
popa
lods
push
jo
adc
adc
xchg
ljmp
cmp
adc
mov
jle
loopne
adc
inc
and
xchg
dec
push
insb
mov
jg
pop
adc
lea
or
and
scas
lods
and
lods
add
mov
push
and
jg
sub
xor
cltd
and
and
popa
inc
rorl
dec
ds
adc
lods
std
mov
lods
stc
cld
andb
mov
jo
add
mov
je
add
stc
add
icebp
popa
inc
adc
data16
out
dec
xchg
jbe
cmp
add
or
popa
mov
loopne
mov
push
das
mov
xor
jno
clc
sbb
mov
add
test
dec
into
test
into
orl
in
cltd
inc
add
nop
dec
mov
nop
pop
loopne
pusha
and
adc
adc
sti
incl
rorb
mov
stc
rolb
ret
sbbl
leave
shll
ljmp
int
lcall
xchg
aaa
add
lods
xchg
sbb
popa
bndldx
test
xchg
repz
mov
lock
mov
pop
xorb
mov
cmp
sub
popf
inc
cmpsl
sub
push
loope
sub
rolb
add
testb
in
std
xchg
cmp
std
or
shrb
mov
in
bound
adc
in
add
or
sub
js
adc
popa
add
adc
push
adc
mov
cwtl
test
fnstenv
sbb
add
aaa
add
pop
add
pop
xor
scas
cmpsb
hlt
sub
movsb
inc
setno
pop
mov
call
aad
int3
cltd
adc
jg
int
adc
pusha
enter
out
xor
inc
add
inc
push
nop
xor
pop
loopne
pushl
rclb
jo
add
xchg
aaa
std
popa
pushf
jb
mov
add
int
clc
call
mov
popa
and
mov
xorb
inc
mov
das
dec
and
mov
into
mov
cmc
aaa
clc
inc
jae
lea
add
loop
inc
je
pop
stos
int3
dec
loope
rolb
inc
jmp
mov
shlb
insl
add
inc
sbb
push
add
loope
sbb
pop
es
adc
and
add
xorl
add
mov
push
xchg
and
lahf
pop
dec
lahf
add
jl
xchg
push
add
push
mov
add
or
outsb
push
or
jle
mov
stos
dec
loopne
ret
addl
fdivs
fiadds
ds
jle
sar
das
inc
add
fimuls
imul
push
jb
arpl
lds
rorl
sub
cmp
fiadds
add
sbb
add
data16
cld
in
xchg
das
cmp
mov
rorb
or
ficomps
out
mov
pop
idivb
sbb
mov
pushf
andb
push
xchg
jo
mov
mov
js
lahf
jg
or
mov
negl
cmp
push
std
push
rolb
xchg
or
mov
inc
xchg
add
or
add
push
adc
jg
mov
push
and
sub
cmpsb
or
adc
pop
add
or
cltd
out
mov
mov
or
xchg
mov
adcb
sub
fs
jno
mov
inc
jbe
std
aaa
lods
rolb
dec
xchg
sbbl
addl
jno
rcrl
das
or
sbb
cmp
mov
lea
cmp
adc
xchg
pop
shr
mov
dec
jns
loope
adc
push
cmp
test
jecxz
inc
outsb
push
nop
inc
fldl
loope
pop
jmp
in
mov
jb
xor
pop
popa
lahf
loope
and
add
dec
and
adc
adc
or
mov
std
test
sbb
sub
mov
fwait
iret
dec
or
inc
sbb
adc
xlat
adc
cli
rcll
shrl
push
ret
pop
sub
out
add
test
shlb
sub
add
xchg
push
aam
shlb
dec
addb
xchg
adc
test
add
and
xchg
push
mov
add
xchg
shll
inc
push
pop
imul
icebp
inc
sahf
mov
ja
push
adc
dec
fiaddl
cmp
cmpsl
outsb
lods
add
mov
dec
or
dec
andb
cmpl
xchg
add
ret
fimuls
sub
or
inc
xchg
arpl
leave
push
popf
xchg
into
scas
add
sbb
mov
adc
es
movlps
push
or
stos
cmp
outsb
push
dec
jg
xchg
push
xchg
adc
pop
or
adc
cmpsl
dec
enter
adc
dec
sbb
mov
or
call
cmp
xor
test
or
cltd
popa
scas
aam
dec
ret
and
flds
xchg
mov
jbe
imul
dec
lcall
cli
rorb
jle
inc
and
add
jg
pushf
mov
adc
and
bound
sub
push
sub
cli
jg
adc
jp
ljmp
and
cmp
and
ficoml
push
fdivrl
adc
lods
mov
aad
ljmp
cmpsb
std
mov
rorb
add
mov
xchg
fldenv
inc
dec
test
adc
lock
ss
jecxz
fcomps
aad
jbe
inc
mov
dec
mov
pusha
jb
decl
mov
and
inc
int3
loopne
sbb
mov
xor
cmp
rcrb
cltd
pop
lock
pop
test
cmp
jbe
flds
mov
inc
mov
ret
dec
leave
ret
pop
xchg
jg
lods
push
push
mov
jle
incl
or
add
outsb
jbe
add
and
loopne
and
inc
insl
mov
add
popa
jns
outsl
out
mov
movsb
mov
shrb
loopne
add
in
add
rorb
mov
push
and
popa
cmpsl
and
sub
scas
xor
xchg
flds
pusha
or
or
inc
popa
js
je
xor
mov
add
inc
in
adc
int3
jbe
dec
sub
pusha
pop
xchg
pop
and
or
popa
insl
and
pop
or
jo
jmp
and
sbb
cmp
int
add
cmp
cltd
or
mov
popa
imul
cltd
add
inc
or
bound
incl
xchg
add
inc
jbe
cltd
pusha
sub
out
mov
adc
pop
jg
or
aaa
orb
rorl
xlat
orb
add
addb
dec
test
out
test
xchg
push
xor
pusha
sbb
pop
lcall
rol
cwtl
pop
ja
sub
fldenv
jne
pusha
inc
sub
lcall
and
jg
cmc
xchg
adc
stos
add
jno
pop
fwait
rolb
mov
js
clc
jle
push
cmp
cmp
outsb
inc
adc
mov
fsubs
mov
xor
mov
pop
stos
jg
hlt
out
rorb
jmp
cmp
sbb
or
aaa
rorb
dec
test
jecxz
mov
ja
push
lcall
mov
test
dec
mov
pop
xor
mov
loopne
sbb
push
mov
pop
pusha
pop
ss
jecxz
push
rclb
dec
mov
les
or
or
loopne
sub
mov
push
stos
aam
js
mov
or
and
mov
mov
addl
adc
push
std
pop
imul
push
pusha
gs
hlt
mov
nop
jg
adc
jl
aas
roll
jl
add
and
add
sbb
pusha
and
add
mov
jp
inc
add
jg
add
cld
outsl
fistpl
shll
loopne
push
add
les
fwait
mov
cltd
inc
inc
pushl
dec
aaa
push
adc
bound
add
xor
add
cld
mov
addl
cmpl
sub
lret
xor
test
push
add
mov
xlat
jb
pop
shll
sahf
cmp
jecxz
sub
cmp
lea
cmp
or
cmpsb
and
jecxz,pn
jecxz
push
js
popa
outsl
mov
or
lret
or
add
scas
cs
sbb
add
xchg
test
into
mov
test
push
mov
add
mov
pop
or
fcoml
mov
and
in
inc
and
and
add
adc
gs
pop
icebp
aaa
push
cmp
fisubs
add
sahf
xchg
decl
push
nop
xchg
jb
mov
mov
les
mov
cld
add
or
aam
add
je
fiaddl
add
mov
fdivs
mov
orl
movsb
adc
shll
sub
jnp
out
push
test
aaa
jp
pusha
rolb
int
fistpll
nop
adc
or
fcmove
hlt
add
cmp
fcoms
mov
cs
jle
clc
outsl
rclb
dec
xor
inc
add
push
in
add
inc
jle
sub
out
push
sbb
or
mov
hlt
inc
mov
int
inc
insb
sbb
nop
rclb
sahf
xlat
insb
mov
push
xor
aaa
xchg
aad
xor
inc
rorl
pop
add
rolb
and
shrl
ja
shll
add
enter
cmc
or
add
shll
add
and
lock
popa
add
mov
pusha
mov
mov
jg
icebp
adc
aaa
stos
shl
les
mov
cld
mov
jno
sbb
jg
addb
adc
adc
ret
or
add
decb
repnz
fisubl
icebp
adc
shl
adcb
lea
sbb
rolb
mov
pop
das
and
jl
int3
add
mov
and
add
leave
xchg
outsb
jge
dec
or
pop
mov
add
sub
jbe
cltd
add
es
rolb
imul
in
pop
bound
cld
push
mov
or
or
mov
int3
mov
sbb
inc
add
inc
daa
les
lock
icebp
lods
mov
jl
xchg
adc
cli
insl
sbb
test
aas
mov
jp
mov
cwtl
mov
pop
inc
xchg
mov
dec
dec
enter
mov
mov
outsb
loopne
lods
lea
rorl
mov
dec
mov
cmp
out
mov
dec
add
add
or
or
inc
sbb
aas
adc
nop
lods
jmp
or
aam
cs
sub
cmp
push
cmp
push
and
sbb
inc
lcall
gs
mov
adc
jo
dec
or
push
or
adc
imul
out
shr
popa
test
cmpb
cs
icebp
or
dec
faddp
add
push
jg
and
inc
xchg
popa
add
mov
push
lock
or
add
rcl
pusha
loopne
cld
jbe
add
test
add
call
push
push
dec
or
lock
ret
xchg
hlt
mov
fcoms
pop
mov
test
test
and
call
popa
pop
mov
rorb
pop
dec
xchg
add
imul
popa
xchg
add
stos
add
xor
adc
add
add
dec
mov
pop
add
ss
or
xchg
out
mov
outsb
inc
adc
or
sbb
pop
call
nop
xchg
or
adc
or
adc
xchg
xchg
dec
mov
loope
fs
cld
xchg
adc
xchg
dec
add
mov
push
cwtl
fisubrl
pusha
shll
mov
jo
mov
inc
je
jp
and
or
sbb
add
add
lods
pop
cmc
movsb
and
gs
cmpsb
into
pop
mov
and
das
inc
cmp
xor
lahf
fbld
pop
shl
sbb
sbb
or
pusha
dec
sub
or
lock
add
incb
sahf
add
sbb
pusha
mov
rorl
pop
fsubrs
sarb
mov
add
dec
leave
test
inc
and
dec
arpl
shll
sbb
test
outsb
pop
lods
adc
push
pop
and
push
addl
adc
ljmp
cmp
adc
stos
mov
rcrl
mov
les
aaa
aad
je
sub
cmpb
cmp
pop
enter
pushf
and
cmpsb
push
cmp
outsl
fmul
xor
pop
orb
add
push
cltd
shrb
mov
push
orb
rclb
push
add
mov
dec
mov
fsubs
adc
push
cmp
sarl
mov
mov
add
push
cwtl
roll
adc
das
mov
inc
popa
add
push
jl
xor
clc
jns
sahf
inc
pushf
xor
dec
cld
pop
mov
dec
testl
pop
cld
add
decl
jb
jecxz
mov
push
nop
xor
pushf
inc
mov
daa
rorl
xor
push
or
cld
popa
jecxz
sar
pop
test
push
dec
icebp
js
add
pop
test
add
mov
and
cmp
addl
lds
bound
add
push
add
out
cmp
xchg
mov
or
add
sbb
ja
or
push
push
inc
sub
ds
and
mov
and
clc
in
sbb
js
enter
mov
fsubs
pop
pop
jnp
pop
jno
cmpsl
inc
lds
mov
and
dec
insb
push
push
xchg
push
and
mov
fidivs
pop
mov
jg
xlat
mov
and
add
add
test
mov
sbb
push
mov
enter
adcb
lea
pop
int
inc
dec
push
mov
insb
push
popa
popa
data16
add
xchg
cmpsb
or
mov
xorb
add
add
cmp
jo
pusha
jb
add
fsubr
push
sahf
jne
xchg
adc
mov
push
mov
xchg
bound
insl
inc
cmpsb
addb
sahf
sub
sbb
ljmp
fbstp
jle
stos
movsl
movsb
scas
push
cld
movl
sahf
pop
ror
pop
cmc
lds
ljmp
lea
sbb
or
cmp
or
push
or
push
pop
cld
jns
pop
dec
lock
cld
jg
pop
addb
add
aad
push
movsl
pusha
addl
fildl
lods
mov
ret
hlt
insl
popa
sub
mov
inc
addl
xchg
faddl
pop
add
sub
cld
xorb
sub
subb
xchg
test
adc
jle
mov
mov
hlt
pusha
jle
cmp
pop
push
or
and
jle
jbe
sub
adc
les
inc
push
sbb
pop
lcall
pop
pop
rolb
adcb
jle
inc
addb
addb
add
mov
adc
mov
data16
add
outsl
sbb
push
adc
in
or
adc
jl
je
stos
sbb
orl
shlb
or
out
inc
sbb
nop
mov
xor
or
inc
cmp
test
pusha
xchg
scas
sub
mov
inc
add
adc
add
sarb
mov
or
dec
jg
rol
or
hlt
ds
pushf
orb
push
fldcw
or
ret
pop
out
bound
outsb
mov
or
pop
dec
arpl
or
add
dec
push
dec
imul
cli
decl
shlb
push
or
or
or
adc
sbb
push
adc
or
mov
adc
lcall
push
test
enter
mov
mov
inc
pop
mov
add
test
push
mov
dec
mov
add
xchg
mov
jp
rolb
mov
pop
mov
adcb
decb
push
add
mov
shrb
test
mov
inc
aam
inc
xchg
add
and
cmpb
insl
shll
shll
xor
pusha
inc
xor
rorb
popa
rcrl
lock
rorb
lock
and
fbstp
ljmp
push
ja
jnp,pn
andl
popa
sbb
hlt
decl
inc
test
mov
popa
decl
sbb
dec
mov
loopne
pop
pusha
jl
or
cmp
sti
in
in
loope
cld
pop
fldl
or
in
in
sbb
pop
lea
daa
xor
test
add
aad
mov
hlt
subb
pop
je
jno
movsb
pop
in
pusha
push
add
inc
or
loope
out
xor
cltd
and
xchg
xchg
push
jo
mov
mov
sarb
add
loope
mov
pop
add
loop
pop
mov
mov
mov
stos
mov
pop
int3
inc
adc
loopne
push
ficompl
add
xor
xchg
cld
scas
movsb
jge
push
mov
pop
sub
call
add
sub
movsl
adc
push
mov
push
inc
and
popf
sarb
push
jecxz
sbb
add
adc
mov
xor
fstpt
cmc
and
call
adc
out
mov
outsl
push
jnp
and
lods
andb
andb
lods
es
dec
and
sub
lock
adc
and
loopne
jle
repz
pusha
xor
add
dec
add
outsl
out
push
aad
xchg
loope
adc
and
jecxz
ficoml
xlat
jmp
or
test
push
dec
bnd
jbe
mov
aas
adc
mov
push
pusha
or
add
das
mov
ljmp
add
es
orl
jg
std
mov
insb
push
ret
sbb
test
fistpll
fisubrs
add
xor
add
push
inc
or
mov
xchg
push
or
and
mov
dec
adc
popa
dec
cmp
jbe
inc
dec
dec
sarb
js
dec
jmp
or
jnp
mov
mov
leave
inc
or
pop
addb
push
cld
cmpsb
enter
xorb
cmp
ret
push
xchg
outsb
xchg
push
and
pop
lcall
in
add
add
mov
and
icebp
pushl
fisubs
dec
adc
enter
ret
or
or
jno
mov
or
nop
add
add
cmp
inc
mov
inc
fimull
test
das
sub
loopne
outsb
es
loopne
pop
fiadds
mov
in
dec
add
add
add
sub
push
inc
pusha
test
bound
fsubrl
pop
or
pusha
add
pop
incl
adc
xor
pusha
xor
dec
incb
cmpb
push
cmp
fimull
sbb
jmp
add
xor
mov
mov
add
adcb
fstpt
lcall
mov
fdivrs
lock
adc
dec
outsl
push
popa
xor
je
push
mov
clc
cltd
cmp
xchg
xor
mov
and
mov
add
cld
adc
or
push
or
xchg
jmp
and
push
and
test
mov
lods
cmpsb
xchg
loop
lock
popa
add
seto
jb
xor
pop
pushl
sbbb
dec
fidivs
jno
dec
jb
outsb
jp
xor
addl
xor
add
mov
jb
pushf
mov
daa
and
enter
loop
lret
add
push
ficompl
test
or
push
and
in
pop
scas
add
pop
addr16
mov
icebp
adc
add
in
jo
stos
cli
push
add
push
adc
loopne
popf
mov
sbb
mov
add
sahf
xchg
push
xchg
addb
xchg
cmp
dec
xlat
xor
xchg
cmpsb
cld
popf
nop
cmp
adc
add
sar
xchg
pop
test
andb
or
lock
sub
rcrl
add
cmpsb
xchg
xchg
push
insb
mov
movsl
mov
push
inc
test
cld
test
push
inc
clc
cs
lea
cli
scas
fimull
push
cld
pop
inc
int3
je
adc
xchg
icebp
inc
cltd
clc
ja
add
icebp
lods
popa
push
aas
xchg
jg
aas
loop
cld
addl
adc
or
add
ja
clc
call
scas
or
hlt
xchg
add
data16
xor
xchg
or
aaa
fwait
or
test
jno
xchg
xchg
or
dec
and
cld
mov
adc
cld
sbb
pusha
andl
or
cmp
adc
mov
nop
sub
add
mov
pop
aaa
nop
sbb
inc
add
in
subb
stos
dec
cmp
cmp
mov
test
test
popf
xor
mov
push
push
jae
inc
add
dec
push
out
add
aaa
xchg
enter
mov
imul
xor
push
or
add
sub
scas
xor
cmc
pop
sbb
popa
add
xor
add
or
push
mov
fisttpl
add
xor
ret
mov
add
inc
dec
dec
popa
cmpb
mov
mov
sarl
mov
jbe
xchg
mov
xor
shll
xor
mov
fiaddl
loope
aam
ficompl
aaa
adc
loopne
fidivl
cmp
incb
test
outsb
iret
cmpb
movsb
adc
adcl
xchg
add
add
pusha
add
adc
xor
es
mov
insb
add
sub
jo
loopne
lods
pusha
add
jns
push
xchg
nop
insb
mov
ja
test
fwait
push
rorb
mov
and
adc
mov
negb
dec
addr16
mov
mov
in
js
adc
rorl
push
xlat
pusha
movsl
adc
inc
push
pop
inc
loopne
mov
push
xchg
popa
das
push
mov
out
and
inc
iret
jle
outsb
std
outsl
or
xchg
pop
add
mov
mov
arpl
mov
aam
sbb
roll
movsb
add
test
sub
in
bound
addr16
sbb
fiaddl
cmp
dec
sbb
push
mov
add
jg
int
pop
ljmp
aas
popf
cwtl
mov
pop
or
xchg
xor
add
adc
inc
push
cmp
mov
je
add
jbe
push
insl
pop
push
adc
xor
jbe
xchg
add
out
mov
sti
jle
fsubrl
inc
orb
in
outsl
fisttpl
inc
ja
xchg
mov
inc
jo
orb
bound
push
dec
cld
incl
mov
outsb
cwtl
lock
mov
add
push
inc
push
add
test
push
dec
or
hlt
test
mov
add
add
inc
dec
cld
jbe
add
mov
inc
add
add
or
mov
outsl
inc
or
in
popf
mov
pushf
pusha
sti
inc
xlat
sarb
enter
or
jb
inc
xor
push
xchg
das
js
cmp
jo
andb
dec
lea
or
andl
pop
lcall
xor
and
mov
cli
ret
bound
push
mov
adc
rcrb
roll
incb
je
sub
mov
add
test
lods
cmp
lock
stos
inc
in
scas
dec
adc
add
std
mov
sbb
movsb
push
sbb
lds
pushf
jge
pop
cmc
cmp
push
shrb
std
iret
add
jl
mov
imul
incb
dec
imul
les
pop
dec
arpl
and
add
dec
push
sbbl
je
pop
add
mov
negl
outsb
iret
or
aaa
in
xor
jns
lock
std
pop
and
pusha
push
mov
aaa
adc
shlb
nop
fists
xor
xchg
adc
decb
popf
jecxz
inc
nop
fidivs
jno
add
or
pop
lea
xlat
adc
push
add
pop
lret
shlb
jno
lcall
lods
cmc
jne
shll
jo
and
jl
adc
loopne
cmp
fiaddl
fbld
loopne
mov
mov
push
dec
nop
add
lret
fisubl
pop
popa
push
shlb
xchg
pop
sub
add
sarb
and
or
insl
div
mov
push
add
jne
pop
nop
bound
mov
jne
imul
dec
idiv
pop
pop
or
add
add
jns
jbe
xchg
xchg
push
add
dec
add
sti
adc
xchg
add
jge
ficoms
add
inc
pushf
push
fisttps
push
push
and
les
and
mov
rclb
xchg
cmc
push
and
fstps
popl
xchg
add
xor
rolb
dec
lcall
xchg
cmpsb
les
popa
mov
push
test
shlb
adc
mov
std
adc
int3
popa
cmc
mov
lds
adc
sbb
push
ds
add
lods
push
or
add
ljmp
pop
add
imul
inc
jne
cld
cmpsl
popa
pop
and
push
pop
mov
jg
fsubs
mov
lods
popa
roll
cmp
pop
xor
pop
stos
inc
mov
fwait
mov
or
lcall
add
mov
test
push
xor
mov
pop
or
std
lods
popa
fidivl
decl
out
cmp
jle
es
fninit
orb
popa
aad
outsl
xor
andl
sbb
popa
cmp
or
mov
test
dec
mov
cmp
xchg
pop
xchg
xor
popa
mov
mov
das
add
add
mov
lods
addb
mov
xchg
adcb
xor
adc
xchg
or
jg
xorl
adc
outsl
cli
popa
insl
push
aam
or
and
push
adc
pop
xchg
mov
cltd
rolb
nop
sub
add
enter
pop
mov
mov
test
or
rcrl
adc
cwtl
push
adc
bound
cwtl
jae,pn
sti
jae,pt
incb
xor
mov
pusha
push
pushf
ljmp
mov
dec
and
cmpsb
pop
inc
mov
test
in
or
out
testb
roll
xchg
shll
push
or
inc
ljmp
sarb
test
mov
or
test
aas
jb
dec
xor
dec
ljmp
or
pop
xchg
mov
sbbl
add
mov
mov
fistpl
adc
mov
rolb
or
addb
mov
cld
adc
add
mov
jecxz
or
inc
push
mov
out
add
and
pushf
and
aam
inc
jns
adc
mov
xchg
add
inc
push
inc
daa
push
cmp
scas
stos
ljmp
mov
or
or
inc
testl
fsubl
xor
adc
gs
inc
or
jg
shlb
add
mov
and
xchg
and
pop
popa
es
push
lcall
das
and
cmpsb
test
js
push
sub
or
add
movsb
fimull
shlb
pushf
add
mov
and
in
andb
add
dec
rorb
addb
mov
out
cmpsb
mov
rcl
add
or
nop
pusha
xor
jno
rorb
xchg
clc
data16
ret
cmpb
dec
pop
and
test
xchg
push
sub
inc
add
mov
or
dec
or
cltd
rcl
jp
cld
clc
inc
dec
addb
mov
or
adc
in
push
add
std
mov
xchg
inc
dec
loop
push
fdivr
lea
popa
cld
push
push
adc
or
mov
mov
xchg
in
clc
pushl
or
jbe
add
repz
cli
lods
pop
inc
jl
mov
pop
add
mov
orb
dec
mov
bound
push
aas
stos
dec
fldenv
or
fcmovnu
mov
pusha
pop
andl
and
hlt
jg
xlat
adcl
and
loopne
popa
and
scas
pusha
push
loopne
clc
jg
dec
and
movb
mov
sub
xor
stos
mov
rcrb
andb
adc
fiadds
test
mov
nop
inc
ret
stos
dec
and
sbb
movsb
mov
cmpb
lcall
dec
jp
repnz
mov
iret
or
fwait
or
xlat
mov
and
cmc
incl
pop
and
mov
mov
pusha
pop
xchg
and
push
add
sbb
and
xchg
clc
ljmp
loopne
xorb
loop
adc
xchg
int3
push
pusha
adc
loopne
xor
add
add
loopne
jns
mov
stc
in
xchg
mov
aaa
mov
test
push
lds
add
shlb
and
add
call
dec
fisubs
fadd
mov
push
adc
outsb
loope
and
xchg
inc
mov
sub
sbb
inc
mov
add
cwtl
aas
loope
xor
idiv
dec
add
dec
roll
and
and
add
add
add
and
outsl
push
fldt
add
sahf
and
std
mov
add
stos
aaa
or
xchg
ficompl
add
into
pusha
jp
orb
or
rcrb
fdivrl
adc
dec
jbe
call
sar
push
cmp
and
sub
add
inc
cltd
in
inc
or
cmc
sbb
sbb
inc
push
xor
addb
jns
add
nop
fisubrs
add
popa
jle
mov
mov
ljmp
add
stos
jp
scas
xor
and
push
enter
jb
mov
popf
add
stos
push
xorl
adc
std
mov
rolb
mov
popa
data16
jb
inc
add
mov
lret
repnz
inc
pop
jns
pop
or
dec
xor
movsl
push
test
push
sbb
sub
push
push
rcrb
loop
cmp
iret
loope
js
cmp
xchg
arpl
stos
mov
add
cmp
test
test
add
lcall
xchg
and
add
mov
mov
or
add
sub
movsl
and
sbb
push
add
mov
sbb
fsubrs
ljmp
dec
lcall
repz
add
cmpxchg
add
dec
and
aas
adc
mov
cld
popa
and
cmp
mov
add
mov
push
popa
pushf
xor
mov
f2xm1
or
inc
or
cli
out
cmpsb
mov
mov
les
rolb
call
int3
or
subb
push
push
pushl
pop
mov
pusha
push
shlb
add
push
fiaddl
or
movsl
mov
push
and
pusha
xor
out
push
sub
int3
sbb
cmp
aaa
sbb
push
orb
xchg
scas
push
push
or
adcb
loopne
mov
ljmp
sbb
add
mov
jge
xchg
mov
bound
or
test
into
ja
std
or
leave
pusha
in
push
and
fists
loope
in
xlat
adc
or
fdivl
xor
pop
and
test
push
push
fbstp
pusha
shrl
aaa
push
xor
add
mov
out
out
mov
sar
cld
xor
popa
int3
rolb
pop
fidivrl
lcall
push
mov
or
push
ja
push
mov
incl
cld
xchg
sti
bound
stc
add
js
xchg
into
and
mov
call
insl
std
loope
mov
popa
adc
call
cmpsl
lock
jo
addb
mov
or
int
jg
dec
push
push
add
sbbb
repnz
jmp
into
roll
jecxz
cmp
sub
lock
pusha
jno
xchg
lods
ljmp
or
mov
dec
rolb
andl
js
hlt
sbb
mov
cli
lea
jle
loopne
cmp
jno
push
mov
xor
adc
rolb
movb
push
rorl
jnp
cld
mov
int
fdivrp
mov
js
push
out
div
add
aam
jo
xor
and
mov
popf
fildl
and
mov
mov
lods
adc
pop
jmp
xchg
adc
and
or
ss
xchg
push
mov
or
xlat
xchg
dec
sub
popa
out
pushl
add
jp
fimuls
push
jp
es
ja
adc
adc
dec
popl
or
xchg
popa
adc
js
jp
je
std
xchg
inc
xchg
or
sbb
lods
add
push
jle
push
repz
push
or
inc
movb
sub
add
nop
data16
std
and
pop
sarb
fiadds
call
incb
aad
push
add
sbb
test
sub
inc
ret
fsubl
lea
add
pusha
ljmp
sbbb
push
or
xchg
jno
aam
jne
rolb
loop
push
or
jmp
mov
xchg
xorb
inc
sub
mov
pop
in
xor
jl
xor
dec
mov
andl
xchg
imul
js
out
test
in
out
add
pushf
test
data16
dec
or
xor
cs
ljmp
sti
outsb
adc
jbe
cld
jne
add
adcl
pop
jmp
xchg
cmp
pop
pop
mov
in
inc
mov
inc
pop
mov
pop
rorl
pop
push
and
dec
inc
mov
cwtl
xor
add
mov
or
lock
shll
cmc
inc
mov
or
and
popa
and
or
shll
adc
or
push
inc
cmp
jno
nop
mov
and
and
mov
shrl
or
xor
jo
push
add
or
mov
sub
jg
pusha
clc
pusha
pusha
pop
push
loope
push
cs
jns
into
faddl
lock
mov
mov
add
mov
lock
sar
jg
cmc
shlb
adc
iret
or
mov
add
popa
bound
aaa
sbb
mov
inc
push
fmulp
sti
shlb
adc
add
push
xor
push
or
jae
aaa
or
mov
pushf
and
cld
cwtl
mov
std
clc
mov
cltd
pop
jbe
imul
xor
or
xor
pop
sub
dec
sub
mov
ds
dec
add
inc
xchg
out
xor
add
hlt
add
data16
lret
mov
sbb
loopne
stos
decl
jo
xor
and
bound
xchg
mov
sar
bound
in
xchg
ficomps
ret
or
ja
push
in
fisubl
or
loopne
aad
insb
sbb
dec
mov
or
xor
dec
xchg
fs
lock
or
ss
sbb
shrb
incl
ret
or
xor
xor
mov
cld
lea
js
or
sbb
adc
call
shll
mov
add
ret
int
bound
fdiv
std
orb
mov
add
xor
add
mov
ljmp
lock
or
mov
and
leave
xor
mov
inc
lods
push
inc
jno
dec
test
inc
xlat
push
or
test
test
aas
jle
xor
incb
mov
push
imul
adc
iret
mov
xchg
lock
xchg
aam
mov
pusha
iret
mov
xlat
ret
in
sub
xchg
mov
xchg
fisttpll
lock
call
imul
adc
nop
cmp
adc
adc
daa
dec
test
outsl
xor
and
add
aad
popa
popa
jp
pusha
push
mov
push
xor
popa
push
addb
aaa
and
mov
es
fldcw
xor
push
or
mov
xor
lods
mov
nop
or
or
sub
add
jo
inc
jbe
mov
xchg
push
ja
inc
and
jmp
clc
mov
jecxz
jbe
loopne
outsb
add
jb
andl
aam
stos
add
outsb
sbbb
pop
mov
add
ficomps
loopne
pop
les
mov
inc
jecxz
call
mov
jbe
std
add
inc
sbb
sbb
subb
cmp
add
bound
ja
out
push
add
sbb
jb
bound
add
cmp
ret
das
jmp
add
jecxz
cmp
jb
rcrb
loop
inc
add
cmp
push
lds
xor
adc
adc
cs
and
cltd
add
cld
xchg
cwtl
xor
sahf
adc
das
add
outsb
sahf
pop
shlb
push
dec
and
aam
mov
in
cld
add
addl
ss
mov
cmp
lds
add
jbe
ficoml
fs
test
js
xchg
xchg
inc
xchg
idivb
mov
ds
push
adc
push
mov
xor
mov
mov
xchg
adc
cmp
adc
xor
popa
inc
xor
subb
test
pop
add
ds
pop
pop
jno
nop
fbstp
out
push
sbb
ret
dec
pop
add
andb
mov
add
and
mov
push
addl
add
or
mov
adc
and
addb
int3
int
aam
adc
addl
mov
addl
or
add
flds
add
sbb
mov
dec
adc
xchg
jmp
mov
rcll
ss
add
adc
call
sub
cmp
mov
add
inc
and
aam
jne
sbb
test
adc
mov
orl
xchg
mov
in
push
jb
movsl
inc
and
push
lock
insb
mov
cltd
xorb
or
cmp
and
jecxz
pop
movsl
orl
xor
ret
ja
push
jp
adcb
std
outsl
je
push
lock
add
sub
mov
sub
lcall
fadds
ret
add
cmp
xchg
pusha
dec
adc
mov
add
push
mov
xchg
ret
sar
jbe
fdivl
shll
aam
test
dec
pop
test
outsl
push
cmp
add
test
aam
insl
inc
test
movsb
mov
add
aad
les
cmp
or
iret
leave
fmuls
dec
sub
sti
jg
mov
dec
sti
insl
fnsave
dec
cld
mov
adcb
test
inc
jl
cwtl
cltd
pop
lahf
jle
icebp
jmp
mov
dec
sti
jns
or
mov
rorl
ret
jmp
add
inc
or
jnp
or
andl
arpl
xchg
mov
mov
ret
dec
dec
and
insb
push
add
in
rcrb
mov
and
pusha
lods
mov
jno
mov
jl
inc
pop
or
mov
jb
and
xchg
lods
pop
inc
inc
lods
xor
mov
insl
shll
mov
add
mov
fiadds
insl
dec
mov
pop
dec
lods
inc
mov
pusha
inc
movb
sarb
loope
jg
push
cmc
fcmovb
cmpsb
add
jae
sbbb
inc
cwtl
incb
pusha
lret
mov
push
dec
mov
add
rolb
fsubrs
and
sub
xor
int3
or
aam
bound
mov
pop
add
std
mov
das
mov
or
addb
push
test
cld
andb
jmp
adc
pop
fidivl
adc
push
inc
dec
mov
mov
pop
cmpb
enter
inc
add
and
jg
jge
test
pop
lock
loopne
test
mov
loopne
dec
sub
out
mov
xor
js
sbb
jecxz
or
mov
push
lcall
mov
dec
int3
shrl
add
adc
cmp
aad
and
pop
jae
add
xor
jmp
sub
hlt
add
cs
sbb
cmp
adc
sub
loopne
push
and
aaa
fadd
and
and
call
ds
cmp
inc
inc
mov
je
mov
notb
adc
jbe
adc
mov
inc
jp
hlt
mov
adc
adc
les
jne
sbb
dec
inc
push
imul
push
inc
rolb
popa
lods
das
lcall
stos
push
insl
fidivs
movsb
adc
das
add
insl
jbe
dec
std
decl
adc
adc
xchg
popa
and
leave
es
scas
fimuls
fcmovbe
pusha
test
adc
ja
stos
and
add
iret
jg
lea
rcl
and
repnz
adc
addb
jb
loope
test
and
scas
or
das
xchg
cmp
int3
adc
push
or
jl
push
std
push
adc
inc
shl
add
arpl
sub
adc
and
or
lcall
jb
loopne
dec
std
test
out
push
and
pusha
lret
xchg
add
pop
inc
cmpsl
fs
dec
xchg
push
cmp
add
jo
push
or
fidivs
mov
test
jo
adc
adc
ror
pop
hlt
outsl
dec
nop
mov
pushaw
push
call
mov
or
pusha
adc
xchg
leave
or
ljmp
les
andb
mov
pop
rcl
in
mov
std
mov
cmpsl
lcall
div
sahf
sti
or
cltd
sub
and
sarb
test
xor
adc
or
ljmp
or
leave
or
sbb
push
cmp
mov
out
add
sub
push
in
or
mov
pop
inc
push
adc
hlt
mov
pop
xchg
adc
xchg
fists
out
add
lods
jmp
adc
adc
push
lcall
sub
jge
insb
in
movsb
or
mov
fidivs
jmp
arpl
incl
cmp
popf
loopne
mov
shll
add
mov
rorb
popl
adc
or
sbb
or
test
jae
push
or
and
mov
andb
mov
inc
jge
sub
sbb
push
subl
or
xor
mov
cmp
in
cmp
or
jo
dec
incl
add
inc
adc
mov
loopne
mov
nop
data16
mov
aam
rolb
pushf
aam
push
std
or
loop
movsb
inc
xor
or
popa
mov
je
scas
sub
add
fabs
add
mov
or
inc
jecxz
add
fldt
sbbl
ljmp
orb
xor
cltd
icebp
mov
dec
push
push
cmp
loope
sub
mov
adc
out
and
dec
call
bound
in
jmp
adcl
and
xchg
cltd
fidivs
call
fcoms
or
inc
cmp
push
or
ljmp
jno
mov
loopne
xchg
lock
mov
cmp
adcb
push
pushf
in
int3
nop
add
icebp
call
or
cld
mov
popf
jne
cmpsl
sub
mov
add
mov
mov
cmp
test
push
ret
jbe
lods
push
add
add
or
test
outsb
jo
stos
adcb
add
clc
sub
insb
aam
or
add
pop
or
inc
andl
cmp
jge
iret
loop
std
fildl
int3
jo
push
es
or
std
lret
jo
jno
mov
add
or
ds
jb
sar
or
fwait
mov
or
mov
bound
test
push
js
adc
dec
cltd
cld
lret
fildl
push
pop
xchg
into
adc
add
ret
adc
flds
add
rcrb
icebp
std
adc
lcall
jecxz
insb
fs
xchg
enter
or
outsl
mov
xchg
adc
jmp
push
mov
lock
add
adc
cmp
mov
sbb
or
add
xor
adc
and
shll
shll
sbb
aaa
cld
incl
inc
adc
lods
jo
leave
fdivrs
rclb
lock
mov
mov
cmp
addb
dec
ret
scas
subb
cmp
dec
mov
mov
mov
and
iret
popf
fimuls
ret
add
sbb
inc
cmp
or
bound
shrl
mov
sar
cli
inc
bound
add
mov
add
and
aam
sar
jg
lock
dec
push
movsb
mov
mov
mov
fcomip
das
testb
xor
int3
mov
adc
inc
fnsave
jo
arpl
test
aam
push
sahf
mov
mov
adc
icebp
add
inc
dec
add
inc
add
inc
and
cltd
jb
sbb
arpl
jb
popa
sbb
rcr
adc
inc
xor
mov
jb
sbb
inc
insb
inc
jno
mov
test
adc
in
mov
movsl
mov
mov
rcrl
stos
mov
ficompl
rolb
or
mov
daa
mov
xor
xchg
cmc
fistl
out
push
or
mov
add
sahf
add
pop
lea
loopne
mov
inc
adc
xchg
jmp
mov
and
or
pop
mov
mov
mov
mov
mov
lock
shrl
aam
enter
or
push
mov
push
add
jo
or
std
xorl
add
dec
bound
mov
sub
xorb
lock
jge
es
sub
mov
cltd
dec
push
decl
push
add
or
add
insb
test
jo
lock
mov
testl
fildl
adc
dec
or
adc
std
pusha
dec
cld
aaa
inc
inc
out
ror
or
inc
mov
ljmp
mov
testb
test
mov
jnp
or
add
cltd
bound
mov
or
outsb
xor
or
xor
les
sub
adcb
or
adc
push
push
rorb
das
test
jno
aas
sbb
mov
syscall
jo
cli
filds
add
cmp
lcall
outsb
adc
adc
mov
xlat
loope
mov
dec
clc
jno
and
jmp
std
in
push
push
jl
in
jo
mov
in
enter
enter
and
mov
daa
lret
movb
test
cs
or
push
aam
cli
cwtl
sbb
icebp
add
leave
adc
cmp
fldl
int
add
cmpb
add
inc
add
outsl
or
andl
add
and
sub
add
jno
insb
or
adc
inc
loop
mov
push
scas
div
mov
rcrb
dec
outsb
mov
sbb
test
ljmp
add
and
and
adc
add
dec
add
push
int3
xchg
lret
adc
xchg
dec
mov
ss
add
inc
jbe
data16
dec
push
cmpsb
test
push
inc
mov
add
hlt
xor
xchg
add
add
hlt
jp
and
adc
std
add
subl
pusha
fdivl
lea
orl
icebp
mov
fdivrl
or
mov
dec
push
out
fildl
sub
enter
or
add
mov
int3
add
adc
mov
cltd
lcall
add
addb
fildl
arpl
add
data16
jmp
fimuls
or
mov
inc
aaa
jle
pextrw
inc
adcb
push
push
popf
lcall
adc
xlat
adc
fadds
scas
xor
cwtl
leave
add
pop
add
jcxz
adc
xor
inc
ss
mov
insl
rorl
clc
jo
insl
inc
push
sbb
jecxz
aaa
cltd
push
mov
sub
add
mov
add
loope
sub
icebp
or
mov
lock
bound
out
sti
cmpsb
or
inc
mov
int3
les
lods
adc
jo
aaa
push
jo
or
push
jae
push
adc
push
jge
lods
les
mov
fidivs
push
fisttps
ret
add
or
sub
insb
rclb
xchg
je
rclb
or
or
outsl
orb
ljmp
inc
insb
and
shrb
ja
orb
add
mov
add
in
std
int
mov
in
or
shlb
add
or
mov
fcoms
loopne
rcrl
out
cli
int
cmp
xor
mov
cmp
inc
sub
cld
mov
cmp
or
nop
dec
xor
push
jnp
xchg
mov
push
cmp
test
jg
mov
sbb
movsb
cwtl
xlat
inc
pop
or
cmc
mov
inc
cltd
add
sub
mov
int
xor
lds
jne
test
xchg
push
aad
insl
nop
mov
mov
shrl
mov
push
mov
orl
fiadds
shr
loopne
jno
icebp
ret
push
xchg
dec
popa
mov
insl
pop
repnz
test
cmp
and
pop
sub
shlb
sbb
clc
add
add
mov
cmp
les
fisubl
shlb
roll
push
fldl
test
aad
shrb
loopne
gs
inc
shll
nop
adc
jl
xchg
jno
lods
into
lds
fisttpl
jbe
stos
insl
pop
flds
add
or
rorb
inc
inc
add
and
jg
jmp
ss
add
aam
and
mov
pop
shll
adc
add
xchg
push
shr
cld
negb
cmp
inc
loopne
xchg
mov
dec
int3
data16
popa
add
add
sarl
sahf
je
pusha
adc
pusha
sub
push
sbb
sbbb
shll
es
lock
mov
and
cld
pusha
pop
lods
es
pop
jecxz
out
iret
xchg
add
push
leave
lods
inc
sub
xor
andb
lcall
adc
or
popf
adc
insl
and
shll
clc
xbegin
mov
pop
jbe
movsl
add
cld
mov
pusha
cmp
negl
sarl
fstpt
inc
push
int
adc
mov
mov
insl
aam
clc
mov
sub
mov
dec
mov
sti
adc
orb
mov
repz
roll
ss
add
frstor
ret
lds
fldenv
pop
adc
lds
add
roll
sar
mov
sar
mov
fsubs
fs
or
inc
and
xchg
in
fiaddl
cmp
and
test
je
push
rolb
popf
pop
notb
mov
add
add
mov
pop
insl
cld
lret
mov
dec
mov
push
add
mov
xchg
into
mov
std
add
jae
ja
pop
scas
push
lods
mov
pushf
mov
ljmp
and
icebp
outsl
fwait
push
mov
test
fnsave
nop
add
push
and
cmp
in
add
and
popf
xor
xchg
js
pop
push
mov
lret
aaa
pop
das
sub
inc
inc
add
mov
call
dec
add
roll
dec
pop
fs
jbe
inc
rcl
mov
mov
push
or
mov
fadds
fsubr
or
adc
andb
pop
aad
in
xchg
fimuls
roll
mov
clc
mov
dec
inc
push
fldenv
or
push
popa
sub
push
push
outsl
and
sub
je
rorl
outsl
filds
xlat
mov
mov
decl
add
cld
aaa
mov
mov
mov
inc
add
call
push
or
add
add
xchg
jbe
fldl
or
add
lea
fcmovnu
add
ds
lods
push
bound
and
loopne
rolb
mov
stos
dec
test
sti
and
xor
jns
popa
lock
incb
push
push
call
inc
add
pop
dec
fsubr
mov
mov
lcall
adc
int3
mov
push
sbb
pop
or
cmp
xchg
adc
pushf
mov
sub
call
xchg
fbstp
or
adc
mov
xchg
bound
int
mov
hlt
ret
jb
xchg
pop
sub
cmp
loopne
inc
loope
idiv
ja
popf
mov
jo
pop
cli
adc
add
sub
mov
fwait
mov
cmp
stc
movsl
adc
mov
adc
mov
fadds
xchg
cpuid
adc
inc
sbb
xor
das
inc
cwtl
add
xor
mov
mov
loope
push
adc
inc
push
sbb
mov
inc
mov
mov
pop
push
decl
inc
mov
adc
jbe
dec
mov
or
adc
mov
sbbl
cmc
lods
rcrb
xor
mov
jp
cwtl
sub
mov
lock
lea
leave
dec
into
test
test
je
mov
cli
int
hlt
add
add
adcb
into
xchg
hlt
imul
jle
add
jne
mov
lcall
sub
mov
xchg
cmpsb
lret
shl
add
mov
sar
or
lcall
jbe
int
jbe
cltd
or
shll
sub
data16
or
dec
push
fcmovu
xchg
jbe
ja
push
shlb
xchg
mov
ljmp
cmpb
fwait
rorb
jecxz
or
mov
and
cmp
sbb
jo
and
js
testb
or
sbb
xchg
add
into
adc
insb
fnstcw
mov
dec
lea
js
mov
and
inc
movsl
push
add
in
cmpsb
sbb
xchg
pop
add
mov
ret
call
fcmovb
mov
cltd
sbb
cmp
jp
inc
dec
lea
fldl
push
xlat
pusha
add
and
cli
test
cli
lods
lea
cwtl
rcrb
or
lahf
mov
cmpl
fs
adc
mov
jo
push
cltd
popa
add
iret
xchg
cli
push
test
jbe
lods
cld
push
nop
cltd
xlat
push
add
shl
jle
adc
fdiv
push
fimuls
jb
movsb
fildll
stos
lock
imul
push
cli
jae
addr16
add
mov
ret
stos
jb
and
or
loopne
scas
xchg
and
mov
push
out
and
data16
popa
xchg
cmp
mov
fcomip
scas
cli
rclb
fidivs
push
sbb
popa
fs
sbbb
mov
outsb
into
mov
lea
push
or
mov
adcl
and
push
cmp
dec
inc
inc
pusha
add
fwait
incb
andb
repnz
inc
push
pop
enter
mov
shlb
add
lock
dec
movsl
xchg
or
jno
loopne
or
add
mov
mov
aam
adc
movsb
lcall
pop
inc
mov
jno
std
cwtl
push
or
add
add
mull
cltd
rcl
loopne
enter
adc
in
and
mov
and
adcl
sbb
das
fcoms
ret
js
movsl
pushf
or
mov
shlb
dec
fdivs
pop
xor
aam
cmp
mov
cmp
cltd
fsubs
pusha
jnp
jecxz
fiadds
fbld
sarb
addb
mov
inc
mov
aad
sbb
ss
sub
adc
rolb
add
mov
enter
lods
int
jmp
in
mov
and
icebp
mov
sahf
xor
enter
and
movsb
add
mov
pop
dec
sbb
fidivs
add
popa
mov
scas
cli
das
mov
fnstenv
jle
lods
mov
add
stos
scas
pusha
and
fstpt
lods
add
aaa
repnz
jmp
jp
add
addb
cmc
jbe
insl
add
shlb
icebp
add
pop
mov
xorb
incl
cmc
mov
push
and
in
sbb
dec
test
dec
fistpll
push
lods
xor
cld
xorl
nop
cmpb
dec
push
add
roll
adc
pop
dec
push
repnz
lods
mov
popa
or
dec
mov
xchg
bound
or
int
scas
or
aam
lods
inc
xchg
loop
push
nop
std
pop
sar
or
xchg
mov
push
or
loope
mov
adc
loop
push
cmpsb
mov
cmp
adc
or
inc
out
bound
add
popa
add
adc
or
xor
jp
mov
or
and
lds
inc
sub
mov
ror
xor
lods
mov
imul
inc
pop
loope
std
jne
sti
pop
push
lds
popa
sbb
add
lret
cli
pop
add
add
inc
or
cmc
incl
jo
add
lock
rorl
fidivs
adc
add
lock
jae
bound
mov
bound
out
jo
mov
cltd
rclb
adc
inc
sbbb
xchg
sbb
mov
daa
mov
repnz
std
stos
pop
rclb
negl
insb
std
dec
add
lods
addb
loope
movsl
outsb
push
fsubs
rcrb
jl
movsb
jno
or
push
dec
or
scas
add
sbb
adc
jo
in
bound
cltd
inc
test
dec
std
jbe
aas
movsb
adc
mov
nop
cmpsl
jp
andb
pop
mov
pop
pop
mov
ljmp
es
fdivrl
int3
dec
jns
push
add
loop
movb
loope
add
lods
inc
lea
aam
mov
xchg
or
push
loop
mov
incl
cltd
and
ret
add
bound
jl
fildll
adc
add
rolb
push
push
add
loopne
lret
pop
ja
push
jns
xchg
push
push
dec
je
outsl
orl
jo
rclb
push
xchg
or
insl
bound
jmp
and
or
pop
pusha
xchg
fsubrl
incl
stc
push
add
push
pop
nop
add
pusha
cld
jbe
and
or
jne
orb
fstl
or
jne
pop
add
call
mov
fisubl
pop
mov
js
clc
mov
pop
popa
pop
es
push
nop
or
mov
decl
cld
jge
xchg
nop
adc
dec
cld
gs
pusha
adc
shlb
shr
mov
faddl
andl
push
dec
jno
pop
sub
addl
cli
push
jecxz
mov
cmp
popf
mov
in
in
pop
enter
cmp
lcall
leave
mov
mov
jge
jmp
out
jno
inc
addb
je
mov
leave
mov
xchg
xchg
mov
xor
popf
mov
add
out
mov
loop
jl
jbe
add
or
dec
in
push
shlb
mov
popf
cmp
stc
inc
add
push
mov
sbb
mov
notl
add
mov
inc
dec
mov
js
rcr
sbbl
xchg
enter
cld
js
mulb
cmp
bound
pushl
xor
mov
cld
adc
pop
js
outsl
add
dec
inc
cmp
jp
in
in
adc
cld
popf
add
scas
add
push
cmpsl
out
jg
push
inc
dec
subb
fmull
cmpsb
adc
aam
lretw
int3
fs
dec
ret
pop
pushw
xchg
loopne
xchg
inc
sub
add
sarl
clc
pop
push
adc
iret
enter
mov
add
mov
add
testb
das
loopne
add
mov
dec
lret
or
mov
push
test
in
adc
add
ss
and
hlt
sub
adc
add
stos
adc
sub
mov
movsb
addb
sub
test
loop
adc
adc
in
pop
lock
xor
adc
add
add
sbb
push
sub
inc
xor
pop
jo
fs
push
andl
mov
xchg
dec
stos
fimuls
ret
mov
or
or
out
push
add
in
std
rclb
in
std
fbld
loope
gs
push
sbb
mov
jno
or
ljmp
add
mov
scas
mov
mov
loopne
cmpb
mov
jne
push
call
inc
jbe
or
inc
sbb
pusha
pop
lldt
pop
loop
jp
shll
ret
int3
cltd
and
test
fsubrs
push
add
mov
sbbb
dec
inc
add
sbbb
cli
or
test
imull
mulb
fmuls
mov
or
adc
enter
pop
pop
or
cmc
inc
push
dec
rolb
xor
add
gs
cld
pop
test
mov
add
fsubl
fld
add
mov
adc
daa
ja
sar
fildl
repnz
cmp
inc
jo
sbb
filds
mov
sbb
popa
roll
ret
xor
outsl
aad
sbb
inc
aas
or
sbb
xor
pop
and
popa
lods
mov
mov
add
mov
jne
mov
rcrb
mov
aaa
dec
or
cmpsb
pop
data16
out
cli
xchg
add
jle
popa
js,pt
inc
mov
or
pop
or
stos
shrb
mov
js
jno
mov
sub
adc
popa
inc
out
xchg
stc
jbe
shr
shrb
xor
mov
mov
call
xor
es
rcrb
and
mov
mov
jmp
xor
and
imul
pop
ret
mov
sbb
add
mov
mov
jl
mov
sbb
jecxz
fsubrs
cmp
rcll
add
sub
mov
jmp
sahf
pop
xor
push
int3
and
and
mov
pusha
stc
repnz
add
loopne
mov
jno
filds
cmc
test
mov
add
scas
js
add
mov
popf
out
mov
lock
cld
sbb
pop
add
lds
and
in
push
testb
sub
mov
and
aaa
mov
xor
jo
insl
xchg
mov
push
clc
lds
jb
xchg
mov
mov
test
notb
or
incl
and
add
mul
test
int3
or
rorb
aas
es
adc
in
pusha
scas
push
ret
inc
add
dec
inc
test
loop
std
movsl
mov
add
std
lods
dec
jns
lods
rorb
popf
mov
push
fadd
and
std
cmp
iret
stc
mov
movsb
xor
push
jp
pusha
stos
lret
repnz
fistl
and
mov
mov
mov
sbb
rorb
add
adc
hlt
adc
cli
add
lcall
xchg
or
add
sar
call
and
add
inc
xor
adc
pusha
push
or
mov
xor
xlat
loope
or
cli
push
mov
bound
pop
pop
add
adc
or
movsb
gs
and
mov
jmp
mov
mov
add
adc
test
fcomip
arpl
inc
sub
pop
sbb
jg
mov
sbb
gs
rorb
dec
or
sar
mov
add
lea
add
loope
sbb
pushf
mov
cmp
jns
sub
scas
ds
mov
pop
jns
xor
add
or
ja
data16
push
insb
mov
gs
and
add
std
adc
int3
adc
xor
push
jo
cli
into
mov
mov
pop
mov
xchg
or
push
sub
jp
shrb
test
in
mov
xchg
sahf
loopne
fsubrl
hlt
dec
aam
nop
xor
and
cltd
sbb
jo
add
nop
add
or
gs
mulb
imul
xor
or
ret
dec
test
or
and
add
or
and
aas
shll
mov
jb
mov
mov
mov
jg
mov
add
mov
dec
incl
rcrb
push
idivb
add
push
mov
mov
inc
adcb
jbe
rolb
add
xor
push
sbb
bound
fidivl
dec
push
lret
pop
inc
adc
aam
andl
or
or
xor
std
lret
pop
mov
pushf
add
shll
add
add
call
pop
mov
icebp
dec
xor
bound
cmpsl
mov
faddl
push
sbb
hlt
dec
pushl
fmulp
add
les
nop
dec
testb
dec
sbb
inc
mov
cld
filds
sub
add
rorb
add
xor
icebp
and
popa
mov
rorb
push
cmp
fiaddl
sbb
call
push
ljmp
push
aam
and
pushf
push
sub
lods
and
adc
jl
mov
sbb
test
lock
stos
jo
or
adc
test
or
and
xchg
mov
jecxz
loope
mov
xlat
in
dec
push
adc
rorb
add
jo
setb
inc
cmc
loopne,pn
xchg
and
lret
int3
inc
mov
xchg
adc
jp
xor
mov
jno
cmpb
movsl
outsb
push
mov
mov
test
fidivs
xchg
stos
and
fs
inc
addb
xor
fmuls
add
pushf
iret
fdivp
das
mov
push
bound
andl
inc
aam
and
cld
inc
cli
mov
pop
xchg
mov
sti
add
push
test
push
add
xorb
lcall
sub
lret
sbbb
sbb
add
addl
idivl
and
or
add
cmpsb
dec
aad
sub
add
test
or
insb
mov
mov
nop
adcb
xchg
push
cmpb
mov
dec
push
adc
adc
sub
xchg
mov
push
or
pusha
push
adc
cwtl
add
cld
movsb
mov
xchg
mov
pop
adc
xchg
xchg
loopne
jo
or
incl
xor
imul
loopne
cld
pop
add
pusha
aas
inc
inc
jecxz
or
loope
inc
bound
cwtl
test
jb
jp
push
xor
mov
testb
push
or
sti
xchg
adc
ss
xchg
incl
dec
loopne
push
push
cmp
pusha
ret
mov
xor
or
push
adc
inc
mov
sahf
into
dec
ljmp
pop
ficoml
sbb
push
mov
dec
add
dec
lock
or
clc
ljmp
push
jo
xchg
nop
or
and
mov
jle
jg
mov
repz
lock
mov
mov
mov
and
lret
push
or
or
adc
or
adc
push
ja
dec
je
inc
rorb
inc
or
or
pusha
orb
add
pop
mov
mov
jg
data16
std
inc
add
adc
rolb
fistps
loope
sub
add
pusha
add
mov
adc
push
es
pusha
add
xor
push
jae
or
inc
sub
pop
std
test
enter
test
xor
test
push
cld
pushl
std
movsb
mov
sar
lahf
mov
scas
test
pushf
mov
mov
push
jae
add
iret
nop
jmp
inc
js
push
inc
aas
adc
pop
xor
mov
les
add
pusha
shl
or
nop
push
xor
push
dec
and
movsb
sarb
lods
adcb
fistpll
push
push
mov
lock
xchg
popa
sub
outsl
in
in
inc
pop
add
rolb
andl
icebp
add
and
fimull
pop
in
ret
outsl
jp
mov
adc
jmp
mov
mov
enter
adc
xchg
cmpsb
xchg
push
insl
fbstp
stc
test
lcall
ficoml
push
addl
nop
cwtl
es
popa
fistl
push
cmp
mov
data16
add
or
dec
loope
inc
adc
pop
mov
movzwl
mov
pop
imul
inc
add
dec
add
dec
lock
loope
add
jb
mov
sbb
and
mov
aam
mov
aad
shlb
xchg
bound
adc
sbb
mov
push
mov
mov
xchg
mov
lcall
orb
mov
dec
push
mov
xchg
adc
pop
add
add
ljmp
dec
mov
xchg
inc
add
inc
scas
ficoms
push
mov
jp
cwtl
or
sub
jmp
jge
inc
cld
add
fdivrs
orl
pop
cwtl
pop
adc
movsb
jbe
ja
sub
push
aaa
add
mov
int
aaa
or
add
into
add
out
enter
mov
cmpsb
add
jae
add
cld
faddl
popf
push
cmpsl
xchg
dec
in
push
dec
pusha
add
popa
stc
data16
rolb
pushf
adc
and
loope
jge
add
mov
sahf
and
push
push
clc
int3
mov
adc
adcb
mov
xor
pop
dec
adcb
leave
mov
pop
loopne
ljmp
or
sub
sub
push
add
add
inc
test
add
mov
sti
in
test
leave
clc
in
xor
sbbl
add
xorb
cmpb
out
mov
inc
aad
clc
es
sahf
push
pop
cmp
jge
mov
lret
pop
repnz
pop
fcmovb
inc
jne
pop
sar
les
push
mov
xchg
dec
add
sbb
add
mov
lahf
sub
add
inc
push
mov
pop
push
xor
decb
and
xorb
jg
popf
mov
popf
shlb
add
push
cli
loop
dec
mov
add
mov
mov
mov
sub
jo
xchg
aaa
std
fisttps
add
into
push
bound
add
bound
jnp
push
andl
bound
popl
pop
push
xchg
insb
fldl
push
inc
movsb
push
mov
pminub
mov
subb
cwtl
pusha
xchg
mov
call
push
adcb
xorl
xor
mov
leave
push
pop
adcl
xchg
or
inc
int3
hlt
mov
push
rclb
xchg
movups
or
lods
lret
mov
cmc
xchg
adc
call
std
std
mov
jne
mov
push
outsl
rclb
inc
sbb
mov
inc
xchg
sub
shrb
jno
pop
int3
add
gs
lods
add
fdivs
sub
jl
cmp
loope
xrelease
gs
add
or
inc
lahf
in
pop
pusha
and
push
lds
outsb
sbb
sub
decl
test
sbb
inc
or
mov
addb
jecxz
sbb
sbb
or
inc
or
lcall
lcall
push
adc
cmc
loopne
sbb
jle
sbb
mov
inc
lea
dec
ret
xor
pop
sarl
add
add
xchg
cmp
clc
mov
mov
movsb
bound
sbb
ret
stos
ljmp
enter
add
push
bound
repnz
in
jg
jne
push
xor
push
add
jge
mov
enter
jg
push
mov
neg
dec
pop
xor
or
fwait
lds
mov
lret
push
std
dec
fwait
push
fstl
sub
arpl
mov
mov
ficoms
and
lock
push
pop
jl
inc
rclb
push
adc
mov
dec
and
cmc
fisttps
int3
mov
iret
push
pop
sbb
push
nop
or
add
insb
in
fstpt
add
sbb
add
out
popa
push
subl
popa
popf
add
add
xchg
jecxz
clc
push
popa
insl
jecxz
cmpsb
ret
loopne
fiadds
clc
outsb
mov
out
shlb
push
cltd
jne
in
out
mov
ja
aas
mov
loopne
inc
mov
dec
xorl
add
or
jl
push
movsl
dec
inc
bound
ficoms
call
inc
popa
and
or
dec
mov
repnz
add
add
adc
testb
and
or
add
jne
add
xchg
jl
jg
dec
cli
xorb
icebp
fsub
dec
jo
add
jbe
les
add
in
or
xchg
neg
xchg
xor
test
sahf
inc
inc
fistl
jbe
sub
add
bound
or
mov
push
xchg
mov
adc
add
cld
jg
mov
inc
es
notl
sbb
mov
add
pop
mov
add
dec
and
push
addl
xor
movsl
dec
bound
xor
inc
sub
add
lret
jae
std
scas
out
rolb
pushl
negl
stos
or
cmp
je
jmp
add
mov
faddl
cli
or
pusha
lret
sbb
popa
inc
adc
roll
push
and
jmp
pop
and
addb
xor
xor
add
jo
pop
mov
add
in
jno
xchg
or
ljmp
hlt
add
inc
jnp
cmp
pop
pusha
imul
pop
sub
push
xor
add
and
and
or
mov
pusha
adc
add
std
push
jp
fisttps
jo
arpl
int3
cmp
xor
mov
mov
ret
rclb
mov
xor
sub
mov
call
or
push
xchg
sub
neg
add
mov
js
mov
and
push
push
loop
jnp
shrb
pop
adc
fdivrl
pop
cmc
call
dec
add
lock
add
mov
jo
adc
push
add
mov
xor
mov
inc
jle
adc
adc
loop
call
add
in
loopne
xor
adc
stos
dec
hlt
icebp
mov
es
call
loop
add
aaa
movsb
lcall
inc
xchg
mov
call
int3
dec
cmp
popf
add
cld
test
ss
mov
or
mov
mov
cmp
mov
lcall
pop
mov
fsubr
add
xchg
xchg
nop
push
ret
push
je
insl
les
jo
pop
pop
int3
xchg
std
idiv
call
add
jnp
xchg
xchg
mov
test
bound
rorl
add
shlb
push
lock
adc
lret
pop
xor
lods
and
test
cmp
or
faddl
xorl
arpl
push
or
pusha
fsubs
pop
inc
xchg
xor
ja
mov
xchg
add
lret
or
add
leave
ss
pop
shlb
add
fdivrl
les
push
pusha
ja
ja
cmovno
arpl
data16
addl
or
imul
test
test
ss
nop
cmp
jae
bound
ss
pop
sbb
lods
rorl
lahf
mov
daa
xor
add
bound
inc
pusha
or
call
add
cld
push
adc
ds
nop
aaa
jg
cltd
filds
aad
adc
push
adc
lret
data16
sbb
mov
fwait
sub
mov
and
jno
arpl
jbe
xor
pop
ss
loopne
dec
fldt
xor
push
pop
xor
das
repnz
out
out
mov
fst
add
lea
ret
dec
add
mov
test
jno
add
ret
lock
mov
fisubrl
lock
mov
jo
xor
jno
cmc
orb
out
inc
pop
xor
or
test
sub
mov
mov
leave
jo
cmp
shll
and
out
nop
mov
pop
fadds
adc
or
fisubrl
subb
pop
rolb
add
mov
out
and
es
push
fwait
mov
or
push
inc
jb
bound
cmp
lods
nop
add
fadds
out
popa
push
add
sub
cmp
mov
mov
inc
mov
lock
and
bound
add
lods
mov
fimuls
into
into
stos
xor
dec
or
ret
pop
nop
adcb
orl
sbb
orl
sbbb
xchg
jne
add
stc
cmp
mov
xchg
jg
inc
inc
mov
stc
cwtl
jbe
inc
ret
or
adc
aam
sbbb
add
add
dec
pusha
shrl
int3
lods
leave
flds
add
cld
mov
pop
xchg
fs
sub
fistps
addl
jbe
add
xchg
add
loop
je
bound
add
cmp
push
xchg
aaa
cld
outsl
in
push
dec
cmc
push
xchg
add
add
xorl
mov
incl
inc
sub
testb
mov
or
ljmp
cli
inc
lret
dec
test
dec
sbb
mov
xchg
addl
cmpsl
inc
jne
in
jg
ficompl
dec
idiv
xor
shlb
addb
xor
in
adc
orb
xchg
loopne
insl
and
sbb
xchg
add
and
sbb
popf
mov
fisttps
add
rorb
subb
bound
inc
test
andl
add
addb
loope
xchg
jg
jmp
addl
add
decb
push
inc
lods
mov
les
or
push
movsb
mov
xor
xor
pop
add
push
mov
test
add
cmpl
add
add
and
add
daa
hlt
jns
mov
mov
call
mov
cwtl
lea
ret
and
mov
fisttps
inc
stos
mov
add
and
pop
rclb
fsubrs
push
frstor
daa
or
std
xchg
add
mov
std
pop
adc
add
es
iret
stc
add
int3
jne
add
mov
scas
std
leave
pusha
mov
xchg
pusha
jae
adc
inc
ss
adc
shr
rolb
xor
cld
es
out
push
xor
bound
mov
or
rorb
cmpsb
adc
xchg
pop
movsb
push
mov
mov
and
cltd
add
pop
hlt
push
stos
fcmovnb
jg
xorb
addb
test
push
bound
add
cmp
in
xchg
dec
and
incl
jecxz
pusha
or
mov
shrb
lcall
rolb
or
push
ljmp
outsb
ja
arpl
dec
mov
dec
les
fsubrl
and
loope
add
movsl
push
lods
jg
sbb
popf
cmp
sub
in
adc
fsubrl
cld
jmp
pop
dec
fs
push
rclb
lds
test
and
add
popa
and
or
mov
mov
push
or
pop
pusha
test
mov
fildll
add
inc
inc
xchg
fidivrl
sbb
std
jbe
add
mov
cli
test
int3
out
pop
or
xor
xchg
cmc
stos
movsb
push
popf
ret
sbb
pop
adc
rcrb
cli
cmp
ljmp
loopne
mov
pop
push
outsl
loopne
shrb
rcl
sbb
xor
inc
jnp
or
or
into
jbe
dec
popf
cwtl
loopne
dec
out
xor
mov
pop
jl
bound
or
fdivrp
mov
hlt
imul
pop
or
addl
or
sbb
sub
movsb
xchg
push
add
jle
mov
and
lcall
aad
and
cli
pusha
dec
jbe
dec
mov
add
pop
pop
jecxz
and
or
out
adc
push
jmp
pusha
mov
and
lret
shll
push
or
add
punpckhwd
xor
daa
ret
and
inc
movhps
in
jmp
subb
push
loopne
cmp
push
push
popa
and
and
clc
pop
inc
loop
and
fs
mov
std
mov
xor
pop
dec
push
cmc
and
and
stos
inc
pop
test
cmp
rol
push
and
clc
adc
and
add
les
ret
pop
pusha
outsl
insl
xchg
filds
mov
cwtl
scas
xchg
pop
pop
decb
or
add
add
add
xchg
pusha
push
mov
or
bound
incl
pop
popa
add
popa
sbb
mov
or
cwtl
lock
and
push
push
adc
and
in
pop
mov
push
enter
push
add
addl
inc
out
push
add
pop
add
rclb
out
mov
or
sbb
xchg
mov
lock
inc
je
adc
ljmp
pop
xchg
pusha
sub
pusha
adc
add
adc
and
arpl
add
inc
aad
lock
pop
ljmp
lret
and
popa
mov
add
xchg
sar
dec
mov
mov
adc
cmp
dec
add
add
or
lret
mov
mov
adc
dec
add
or
lgs
cli
add
jno
inc
or
pop
and
mov
idiv
push
orb
std
xchg
mov
inc
out
pop
pop
out
gs
fucompp
enter
mov
xor
add
xchg
fcoml
add
jae
adc
and
orb
mov
cwtl
fnsave
movsb
cld
dec
cmpb
std
clc
add
sub
dec
in
mov
sti
xor
push
in
mov
mov
pop
shrb
or
les
dec
push
or
push
dec
mov
dec
add
dec
mov
inc
test
mov
bound
and
lcall
jo
outsl
dec
lock
add
xchg
pop
rcrl
ljmp
fwait
mov
jb
mov
jo
jbe
test
pop
or
scas
loop
sub
dec
hlt
add
mov
insl
insl
daa
mov
push
push
fimuls
sbb
or
subb
nop
mov
lds
mov
push
xor
push
and
sub
adc
push
cmpsl
or
loopne
pop
mov
mov
dec
sub
add
int
mov
mov
in
lods
cs
fcom
lcall
add
scas
jns
inc
mov
movsb
add
fwait
outsl
pop
mov
movsb
stos
dec
lods
push
or
loope
mov
push
push
and
xor
sub
add
frstor
sbb
sahf
mov
ljmp
iret
mov
cli
mov
mov
inc
iret
sub
out
lahf
sub
test
rclb
out
shrb
mov
test
push
sbb
add
push
mov
add
rclb
cmp
add
add
and
negl
and
ret
fsubs
scas
test
fs
add
roll
push
push
cmp
jl
insb
outsb
int
mov
enter
int3
lock
push
insb
sbb
and
jo
jle
testb
test
push
fisubl
push
ds
xor
movsl
popa
shll
dec
cmpsb
stos
mov
lds
lock
add
ja
pop
sbb
jle
cmpsb
mov
aam
sbb
add
fsubl
add
xchg
aas
faddl
test
sub
add
popf
pushl
testb
mov
dec
mov
int3
jne
push
xchg
mov
push
daa
or
adc
dec
or
add
lcall
scas
jle
dec
out
xchg
std
mov
je
pop
push
fwait
mov
or
add
dec
jno
dec
add
jo
cmp
mov
xchg
cld
sub
les
insl
mov
sahf
hlt
and
dec
sub
and
or
mov
xor
sbb
adc
xchg
add
xor
lret
xchg
lods
mov
cs
into
test
adc
adc
lahf
mov
adc
jle
mov
fcmovne
dec
push
xor
jecxz
out
test
cli
popa
repnz
nop
push
and
int
or
mov
scas
cmpsb
mov
inc
dec
pusha
and
test
and
iret
xchg
mov
test
add
mov
dec
ret
xchg
inc
hlt
xor
dec
mov
add
add
jg
inc
int3
or
mov
or
xor
out
mov
lcall
mov
jno
imul
in
add
add
aad
shll
fimull
dec
mov
shrb
stos
adc
jmp
jg
mov
and
dec
adc
orb
add
adc
nop
insb
mov
or
add
xor
jbe
add
shrb
adc
stos
dec
mov
cld
mov
xor
xchg
mov
js
add
mov
and
scas
mov
or
bound
outsb
inc
or
push
add
std
fildll
stc
add
cld
add
fwait
testb
out
mov
nop
test
push
add
cli
cld
xor
fisttps
pop
orb
pop
andb
add
pushl
mov
jbe
or
cmpsl
pusha
sbb
dec
inc
or
and
subl
adc
push
dec
add
in
ljmp
rorl
pop
jecxz
bound
sbb
and
bound
add
pop
or
mov
adc
ss
jp
stos
push
sbb
js
or
ret
mov
jo
push
jb
inc
sarb
dec
mov
add
cli
mov
inc
in
lcall
jle
add
lock
pop
mov
inc
mov
jbe
and
mov
es
sahf
insb
mov
pop
ret
out
add
add
mov
ret
dec
cmp
add
mov
add
les
sub
and
adc
push
mov
cmp
hlt
pop
inc
loop
or
mov
xchg
testl
adc
add
fs
sub
add
xor
aaa
fcomps
mov
or
sbb
lea
jg
hlt
mov
roll
cwtl
xchg
ret
push
popf
mov
mov
mov
push
xor
xor
mov
insb
inc
aas
lea
push
sub
std
scas
or
add
adc
mov
js
imul
fs
or
push
xchg
ss
or
fdivs
inc
faddl
ljmp
push
mov
cli
test
movsb
push
mov
jp
adc
lcall
loope
jo
les
cmp
push
mov
cmp
fildll
jbe
cmp
pop
add
mov
xor
jg
mov
call
andb
test
mov
push
or
jno
xchg
add
mov
popf
jl
or
movsb
add
mov
add
add
roll
add
test
mov
xchg
test
sub
int3
test
lret
ret
ja
bound
mov
xor
jns
inc
sbb
mov
or
nop
loop
lret
rclb
jg
push
xchg
adc
pop
push
gs
and
add
mov
xchg
inc
sbb
mov
mov
pop
int3
enter
adc
pushl
rolb
insb
loope
addb
and
or
add
inc
cmp
mov
lock
xor
fidivs
sub
mov
jbe
sub
mov
inc
ss
or
sub
ja
sti
adc
mov
add
rcrb
mov
add
xchg
dec
sbb
lods
mov
cld
sub
das
fadds
sub
scas
hlt
test
add
cld
add
or
mov
pop
and
push
mov
hlt
add
orb
mov
dec
sbb
inc
dec
inc
add
xchg
pop
mov
mov
hlt
or
add
in
ljmp
push
mov
xchg
roll
enter
addb
add
mov
and
fmull
add
jbe
cmp
cld
push
push
cmp
adc
adc
xor
jmp
push
in
in
sub
popf
mov
or
std
sbbb
shlb
or
adc
push
mov
xchg
xchg
rorb
xor
jg
mov
xchg
pop
and
negl
stos
sub
stos
sub
sbb
push
sub
mov
int3
pop
std
rorl
adcl
push
cli
ret
ficoms
push
data16
mov
adcl
cltd
dec
ret
lock
in
inc
dec
mov
lret
inc
imul
adc
mov
shlb
fisttpll
or
loopne
mov
mov
mov
fistps
cld
xchg
xorl
dec
fwait
add
xor
sbb
aaa
loopne
into
pusha
pop
or
xor
in
popf
bound
cwtl
adcb
jmp
je
sub
add
add
jle
stos
adc
cmp
aam
mov
sbb
adc
subl
add
mov
aad
cld
sbbl
mov
mov
add
jo
or
test
xchg
lods
mov
mov
pusha
test
cmp
xorl
dec
sbb
pop
push
popa
movsb
jp
cmp
jg
cld
sub
xchg
sarb
jmp
mov
adc
add
nop
or
sbb
sbb
idivb
sbb
in
fmuls
decb
fists
jb
lods
lcall
loopne
and
dec
mov
jg
mov
or
mov
bound
outsb
inc
cmpb
jb
push
xchg
lock
pushf
mov
ret
dec
dec
cwtl
test
or
mov
inc
inc
pop
or
inc
push
clc
stos
xchg
clc
int
ja
mov
add
lea
add
xchg
sahf
lods
adc
movsb
ja
lret
out
dec
out
inc
mov
mov
add
pop
jl
notb
or
mov
lcall
loopne
cmp
popa
mov
or
mov
popa
daa
push
pusha
add
popa
adc
popa
aaa
or
mov
and
inc
pop
add
jb
cltd
ds
adc
push
adc
and
fldenv
xchg
cmp
push
fisttps
scas
shlb
loopne
lcall
jl
inc
loopne
aad
sar
sbbb
xchg
adc
adc
add
pusha
or
pop
lcall
mov
xchg
inc
mov
inc
rolb
push
xor
cmp
dec
hlt
and
dec
xchg
sarb
or
fildl
pop
es
mov
popa
adc
out
lcall
cltd
leave
popa
pop
sbb
dec
movsb
mov
sub
out
mov
sbb
or
popa
and
jecxz
lods
outsb
pop
fwait
inc
sbb
push
repnz
ret
adc
outsb
enter
lret
jecxz
roll
test
fistpl
lcall
aaa
mov
and
leave
mov
movsl
add
and
mov
mov
mov
mov
add
scas
and
xchg
hlt
mov
mov
dec
pop
mov
xchg
xchg
jbe
dec
rclb
inc
adc
cmp
push
cmp
mov
jno
or
pop
ja
cld
jbe
loopne
pop
mov
push
std
mov
orb
loopne
test
movsl
mov
enter
add
les
add
or
fisubrl
mov
jecxz
leave
jns
int
add
les
add
out
add
rcrl
xor
sbb
es
cmp
push
pop
lahf
adc
push
xchg
mov
clc
sub
sbb
adcb
lea
daa
movsl
shl
hlt
popa
sbb
xor
ret
test
call
mov
or
or
sub
outsl
mov
jle
lcall
cmpsb
inc
add
dec
and
cmp
add
cld
ljmp
push
inc
rcll
jo
mov
movsb
ds
loopne
xchg
or
or
push
or
and
sbb
fs
push
or
sub
push
loopne
into
push
test
lds
les
inc
rcrb
jg
push
or
push
shlb
sbb
mov
adc
cmp
pushl
lock
or
xor
add
push
push
mov
jo
stos
mov
call
lods
int
add
push
es
rorb
loop
sbb
pop
mov
pop
cmp
inc
inc
insb
popa
shrl
add
cld
fwait
popa
lret
sub
mov
push
inc
negb
push
repnz
call
lret
mov
bound
dec
test
lods
and
or
loope
cld
inc
ds
mov
roll
rorb
es
add
ds
scas
popf
cmp
or
test
stos
adc
push
push
outsb
jg
fstpl
xor
add
sbb
or
lea
jmp
adc
add
ljmp
adc
jge
or
inc
sbb
hlt
sub
or
sti
push
dec
fwait
add
test
in
jbe
mov
les
lock
inc
and
jo
test
popf
and
test
jo
inc
mov
mov
mov
xchg
fisttps
fdivr
fists
pop
add
and
jg
shll
popl
mov
push
add
lock
or
dec
push
fadds
adc
add
sbbb
adc
pop
cmc
push
jo
cli
nop
push
xchg
roll
xchg
jb
xor
xor
jecxz
stos
ret
outsl
dec
ja
push
scas
jle
ljmp
jo
add
mov
lea
add
push
sbb
cmpsb
adc
sbb
mov
xchg
lock
mov
pop
mov
jo
fnstenv
pushf
pop
mov
inc
into
push
test
dec
mov
mov
sub
mov
xchg
idivb
pop
add
xchg
and
sub
xorb
pusha
add
dec
mov
pusha
inc
mov
add
or
push
xor
pop
scas
roll
pop
dec
or
pusha
jecxz
es
orl
add
jle
rorb
call
mov
mov
lock
popf
roll
inc
mov
sub
adc
cmpb
sbb
or
sbb
cmpsl
lcall
fldl
sbb
pop
sbb
scas
push
sbb
shrb
inc
hlt
fwait
adcb
cli
test
inc
xor
xchg
mov
pushf
sub
mov
mov
mov
dec
in
cmp
inc
mov
test
mov
popa
inc
xchg
lret
outsb
nop
and
pop
inc
cld
ljmp
leave
pusha
adc
xor
pop
popa
stos
and
inc
xchg
clc
mov
ret
gs
adc
add
pop
sbb
xchg
imul
and
adc
adc
xor
ds
fsubrs
popa
mov
xor
sub
inc
cld
repnz
mov
aad
mov
mov
js
pop
mov
ret
cmp
pop
bound
stc
or
add
sbbl
push
inc
or
sahf
lea
xchg
pop
insl
fadds
mov
dec
imul
dec
xor
ss
scas
or
xor
decl
clc
sbb
rorb
xor
adc
popa
inc
data16
push
shrl
inc
nop
cmp
mov
or
add
test
imul
xor
push
and
inc
add
popa
sub
mov
ffree
mov
popa
inc
jle
adc
iret
add
jecxz
and
push
or
mov
push
dec
mov
push
push
mov
repz
or
leave
movsb
popa
int
or
mov
add
shll
xor
loopne
pop
cltd
popa
fwait
inc
inc
jbe
jl
mov
or
or
sbb
sbb
pop
mov
mov
mov
nop
sbb
xchg
mov
adcb
add
dec
repnz
inc
mov
xchg
aaa
mov
fcoms
clc
mov
push
pusha
lea
xorb
push
lock
out
mov
or
jbe
cld
scas
int
les
nop
jnp
jno
jne
jge
cmc
fisttpl
inc
lods
outsl
pop
inc
adc
jl
incl
jg
jp
dec
test
outsb
fnstsw
jbe
add
push
shll
adc
lahf
mov
mov
dec
loopne
popa
stos
mov
int3
test
or
loopne
test
subl
js
nop
add
cmp
mov
out
add
dec
cltd
mov
lret
ret
ljmp
movsb
cltd
jbe
sbb
call
mov
pop
push
xchg
xor
xor
popa
adc
sub
mov
or
stc
into
in
dec
das
push
sbb
inc
lds
outsl
lea
jbe
jno
rolb
mov
rclb
dec
and
push
xchg
test
push
dec
test
xor
ljmp
jbe
pop
dec
mov
and
clc
add
and
lahf
lods
fsubrs
push
bound
inc
fisubrs
ret
adc
mov
xor
mov
outsl
stos
int
mov
shr
pusha
inc
bound
lcall
pusha
jbe
sbb
lock
mov
inc
mov
shlb
cli
fists
and
mov
lea
test
mov
xchg
addl
outsb
pop
push
mov
mov
pop
pop
int
xchg
add
add
jo
or
xchg
or
mov
jp
call
or
add
sbbb
xor
add
dec
jbe
pusha
xchg
scas
push
sub
add
subb
aam
push
mov
adc
les
push
pop
xchg
les
psubd
ror
push
dec
sbb
pop
adc
dec
dec
xor
sub
or
leave
add
movsb
and
adc
adc
js
or
xchg
add
mov
pusha
loope
ret
test
add
jo
les
or
mov
movl
pop
pop
adc
popa
push
ss
ds
or
lods
popa
jo
add
cmp
inc
add
xchg
or
mov
lods
out
gs
das
add
add
push
lock
xchg
es
mov
jg
cmp
lret
lcall
push
mov
or
jp
aam
mov
aam
jg
jb
add
dec
add
ljmp
ljmp
adc
add
sbb
dec
sbbl
add
or
jle
dec
lods
scas
rolb
or
pop
add
call
xchg
xchg
or
cli
outsb
insb
rol
inc
sbbb
sbbb
jecxz
fwait
inc
and
sbb
xchg
or
jmp
or
fistps
imul
adc
shlb
dec
jecxz
test
bound
jbe
fidivrs
xor
cwtl
inc
adc
fildll
jne
or
mov
in
stos
inc
or
fidivrs
cmpl
mov
xor
stos
pushw
push
mov
and
dec
add
jno
adc
dec
insb
mov
lock
or
and
add
dec
mov
jbe
inc
adc
adc
leave
shlb
adc
and
sbb
lock
pop
mov
xor
inc
ds
pop
mov
add
popaw
or
jo
or
imulb
jne
push
fs
js
mov
inc
and
outsb
fldt
pop
test
or
push
pushf
in
cltd
andb
ret
jmp
add
adc
xorl
inc
dec
test
cwtl
add
fbld
popa
ja
and
fs
popa
sbb
test
add
bound
mov
xor
sbb
add
pop
xor
pop
mov
inc
bound
mov
fistl
cmp
fwait
mov
xor
push
mov
sub
jne
divb
xchg
in
push
xor
addl
push
xchg
sub
jns
inc
xor
and
mov
std
mov
cld
jns
jo
mov
push
cli
loope
fcmove
pop
jne
pusha
or
outsl
xor
push
mov
cmp
add
push
jp
ja
and
xorb
jecxz
mov
outsl
mov
jbe
pusha
and
sub
jmp
test
sbb
or
xchg
lcall
inc
loopne
gs
movl
or
and
lock
add
sti
pop
inc
cmp
jns
clc
pop
push
fstpt
sub
rcl
xchg
sbb
dec
testl
dec
pop
or
pop
mov
std
mov
pop
repnz
sbb
loopne
mov
outsl
add
outsl
idiv
stos
push
cmpl
add
jns
out
mov
push
fsubs
outsl
outsb
pop
gs
pop
cmp
cmovg
add
popf
iret
mov
jge
mov
or
cmp
movsb
cld
sbb
iret
fnstcw
add
cld
outsl
das
and
sbb
or
and
add
sub
lods
icebp
call
jp
mov
popf
dec
adcl
mov
loopne
stos
xchg
pop
cmpsl
push
fs
cmpl
or
fiadds
and
adc
xchg
or
pop
or
mov
jle
sbb
lods
ret
gs
dec
jg
and
or
cld
add
lods
pusha
pop
fadds
in
aaa
mov
lahf
subl
or
orb
les
push
lock
xor
pop
jae
or
xor
jg
ljmp
mov
loopne
inc
ja
push
lcall
pop
lock
cld
loopne
lods
loopne
jne
mov
or
sub
scas
or
outsl
sub
cmp
fdivs
add
pop
mov
xchg
sbb
or
dec
sbb
in
decl
test
adc
addr16
push
flds
sub
pusha
add
add
pusha
adc
cwtl
xchg
mov
cmc
mov
push
mov
mov
sar
idiv
cld
pushf
iret
cmc
lock
dec
movsl
out
and
fsubr
push
out
jg
decl
shll
hlt
orb
std
xchg
leave
imul
decl
popa
add
adc
out
jp
or
inc
jne
out
loopne
incl
rcrb
add
out
pop
add
fidivrl
inc
fcompl
shrl
pusha
sub
pop
xchg
testb
or
adc
lcall
add
or
pushf
pop
push
pusha
das
andl
jno
jg
and
sbb
hlt
loope
cmc
sahf
add
xlat
out
fimull
loope
insl
sub
cmp
fistps
ja
pop
popa
loopne
dec
out
or
inc
imul
loopne
mov
stos
jno
jo
sbb
mov
decb
and
mov
add
mov
inc
ret
mov
leave
add
andl
or
push
fisubs
mov
gs
ret
fsubp
outsl
aad
es
jno
and
jbe
xor
scas
pop
sub
imul
rorl
mov
mov
mov
in
gs
xchg
subl
hlt
test
mov
popa
call
test
pop
push
add
add
cld
adcb
inc
clc
adc
add
outsl
cmp
scas
mov
aad
mov
or
add
arpl
int
push
inc
jp
cmpsb
jmp
nop
push
lea
arpl
inc
rclb
jge
inc
add
in
fcomip
cwtl
xor
repnz
stos
nop
pop
jns
inc
cmp
repz
das
sbb
sbb
jg
pop
mov
pop
ret
in
mov
xor
sbb
mov
fimull
adc
mov
inc
xor
or
jg
add
or
and
pop
imul
jo
jbe
mov
lock
clc
jg
and
mov
jno
lcall
icebp
inc
or
call
lcall
decl
jmp
or
cld
xchg
jp
pop
lock
inc
adc
fildl
adc
leave
sbb
or
inc
rorl
add
inc
inc
xor
pop
push
xorb
orl
out
cmp
pusha
testb
dec
or
out
jo
adc
jmp
and
xor
lock
pop
xor
std
mov
test
lds
incb
das
add
lcall
xchg
ja
sub
cmp
cmp
out
add
mov
adc
mov
mov
add
jp
imul
adc
and
pushf
cmp
decl
jl
adc
daa
mov
sarb
jg
daa
cmpsl
add
mov
call
loopne
sbb
cmp
xchg
dec
jno
add
mov
scas
outsl
js
mov
xor
xchg
xor
or
div
les
push
ljmp
sbb
in
out
mov
fmuls
and
sbb
incl
dec
jo
or
std
cmp
push
insb
std
pop
icebp
mov
jbe
jo
sub
add
sub
mov
and
lds
pop
pop
or
and
jl
mov
push
jae
out
lea
mov
or
inc
xor
orl
push
out
cmp
icebp
fs
or
inc
iret
fnstcw
mov
xorb
mov
jg
sahf
lea
shll
add
aaa
xchg
jo
cmpsb
adc
mov
push
test
sub
xor
pop
dec
fnstcw
pop
pop
popa
das
les
popa
jge
and
or
add
add
imul
mov
imul
jmp
jbe
push
andl
add
fidivl
add
dec
jns
jne
imul
xchg
pushf
add
out
cmp
ljmp
jp
and
mov
fimuls
or
dec
add
add
push
fdiv
and
loopne
mov
jno
icebp
add
pop
insb
jne
stc
adc
sarb
aaa
adc
dec
ret
jbe
adcl
adc
and
add
std
pushl
and
add
pusha
aas
add
dec
push
cmp
je
pop
imul
sbb
or
mov
xorb
lret
sub
mov
clc
mov
in
orl
aam
ss
lahf
leave
call
sbb
insl
xor
jns
and
cmp
cmp
pop
mov
hlt
rcrl
or
or
push
mov
fwait
add
and
and
jns
adc
add
clts
xor
jecxz
sub
sbbb
or
inc
jl
push
insb
xor
mov
sbb
sbb
pop
xchg
push
and
cmpsb
adc
mov
jb
sar
jg
popa
je
mov
lret
jecxz
rclb
or
jo
push
call
jb
push
mov
add
out
icebp
mov
adc
pop
cmp
adc
lock
xchg
xor
popa
mov
cmp
or
mov
add
hlt
cmp
push
or
ljmp
add
jno
loope
sbb
mov
sbb
fisubl
or
and
jp
jge
ret
mov
mov
sahf
and
lret
insl
popa
loopne
mov
decl
mov
push
sub
xor
inc
pop
mov
fs
mov
cs
jne
push
add
fidivl
mov
cmp
addb
jl
shll
iret
hlt
push
dec
adc
lret
ljmp
in
add
dec
addl
mov
or
pushf
lea
cmp
add
push
or
add
xchg
pop
fnstenv
loopne
rcl
push
loope
icebp
push
push
cmc
adc
sbb
cmp
imul
ret
decl
jmp
or
std
lea
cmp
mov
and
dec
sub
mov
mov
push
popa
add
mov
mov
mov
mov
nop
xchg
jae
jge
add
mov
mov
xor
addl
hlt
pop
aas
test
jno
or
sbb
sub
bound
mov
inc
mov
dec
or
bound
xor
jge
push
mov
fmulp
sbb
adc
pop
jl
mov
xlat
jno
mov
orb
add
ljmp
enter
js
roll
mov
mov
mov
mov
jne
mov
lock
popa
inc
testb
mov
adc
xor
xchg
jb
add
cltd
xor
int
cmpb
aaa
popa
lret
xorb
call
loope
fmuls
shlb
loope
inc
or
jg
jmp
sbb
add
mov
and
jae
pop
movsb
aam
adc
cmp
js
inc
push
mov
insb
mov
mov
lds
mov
lock
std
and
dec
add
lods
inc
cmp
popa
addb
incl
jbe
xor
push
out
pop
inc
rclb
push
imul
aas
mov
leave
inc
clc
andl
loopne
aam
int3
add
orb
mov
push
dec
xor
js
mov
xor
dec
and
xor
add
mull
idiv
add
std
inc
or
jo
add
std
xchg
or
add
xchg
add
outsb
push
negb
pop
lods
add
push
test
lcall
cwtl
addl
rorl
mov
or
sub
sub
in
add
aad
add
mov
adcb
movsl
or
stos
lods
add
xchg
add
or
or
test
or
inc
fs
add
jbe
or
add
aam
mov
add
shlb
mov
shlb
jmp
add
shrl
mov
pop
xor
add
push
jle
ret
mov
int
push
sbbl
faddl
adc
add
dec
or
jb
insb
es
ljmp
fldcw
dec
lods
std
nop
testl
dec
jbe
aam
adc
pop
fiaddl
rcl
or
add
jb
mov
mov
bound
sbb
add
cs
mov
outsb
cltd
mov
add
sub
pop
enter
aad
or
or
dec
test
mov
push
pop
arpl
rolb
jle
add
or
sbb
es
outsl
mov
xchg
pop
lock
cmp
mov
into
dec
cltd
movb
lret
dec
add
jle
pop
and
inc
sbb
mov
pusha
roll
pop
les
ret
into
sbb
jo
cli
sahf
nop
jle
aad
test
pop
arpl
jg
mov
xchg
add
bound
dec
xor
mov
push
fcomp
ss
mov
jg
mov
loope
rolb
pop
and
fisubl
lret
scas
sub
test
outsl
inc
rorb
pop
ss
sbb
popa
aam
sbb
psubb
mov
inc
test
addb
dec
add
das
sub
pop
and
orb
jns
mov
outsl
outsl
outsl
sar
mov
dec
or
flds
imul
add
pop
push
mov
adc
mov
pop
scas
les
filds
push
add
or
roll
fidivs
ds
xchg
orb
loope
das
mov
lahf
inc
push
and
jbe
xor
mov
lds
sarb
popa
inc
fimull
jg
subb
ret
inc
or
gs
and
popa
notb
scas
fstpt
and
add
add
adc
push
xorl
add
dec
inc
test
and
fadds
rolb
sbb
roll
add
mov
jl
jecxz
add
pop
add
out
adc
repz
ljmp
fisubs
cli
clc
stos
sub
and
fiadds
or
mov
push
es
or
addb
add
sbb
add
mov
jmp
roll
fsub
mov
ret
add
sahf
and
js
bound
jmp
data16
bound
lcall
stos
fmull
pushw
xlat
adcl
daa
xorb
loope
fisubl
leave
fwait
rorb
adc
or
pop
fwait
jo
mov
ret
inc
shlb
loopne
inc
daa
inc
mov
push
inc
push
loope
pop
rcr
jecxz
test
jbe
out
cmp
lds
jo
lock
inc
adc
insb
add
jb
mov
push
je
mov
ret
adc
mov
nop
icebp
aaa
sbb
and
filds
sbb
mov
orb
cltd
std
or
add
jo
push
bound
cmp
jbe
mov
inc
pop
xchg
ret
fwait
hlt
cmpsb
data16
out
leave
mov
jbe
add
adcb
test
cltd
notl
xor
test
int3
mov
mov
enter
jo
das
cld
add
xor
sub
add
aam
inc
jno
sub
pusha
push
dec
inc
loopne
push
pop
dec
and
add
loope
mov
add
enter
or
adc
aas
mov
jo
popa
adc
add
shlb
sub
out
jge
sub
mov
push
hlt
add
and
inc
inc
mov
and
ret
sbb
sbb
inc
sub
mov
cwtl
js
adc
in
or
fyl2x
pop
ret
loopne
add
aaa
cmp
mov
fldenv
fsub
or
or
inc
sub
push
add
adc
push
adc
cld
or
xchg
mov
and
add
mov
add
aaa
or
subl
dec
arpl
pop
mov
adc
push
loopne
mov
outsl
pop
xorb
imul
test
inc
les
cltd
shll
mov
mov
push
movsb
and
dec
mov
or
loope
shll
ss
or
test
sbb
popa
or
aam
dec
and
adc
popf
pop
jb
jb
add
xchg
call
push
adc
adc
or
sbb
pop
jg
loopne
popa
jo
xor
loopne
mov
sbb
sbb
loop
cmp
mov
mov
loope
adc
or
add
imul
sub
loopne
fiaddl
dec
shll
inc
add
jl
sar
fistpll
add
sbb
or
inc
xchg
xchg
sbb
or
pop
push
adc
inc
rcl
ss
into
std
mov
psraw
int
and
dec
loope
insb
sub
or
dec
mov
push
push
movsl
dec
fld
inc
gs
mov
or
pop
xor
pop
dec
loop
test
inc
outsl
bound
shr
out
inc
xchg
int3
adc
add
fcoms
push
addb
jb
push
call
mov
push
ret
xorb
shlb
xor
jg
inc
adc
xor
push
mov
popa
and
add
mov
add
mov
push
loop
test
jg
or
inc
cmpsl
and
and
decl
test
jecxz
shll
enter
xchg
and
and
pop
jmp
xor
test
xorb
xor
mov
std
xchg
adc
adc
or
popa
inc
cs
test
jb
ret
fisubs
jbe
lods
adc
inc
js
outsl
mov
repz
notl
sar
incl
out
fwait
bound
icebp
fwait
mov
roll
inc
es
rcl
dec
add
ja
add
sub
xchg
jg
test
add
add
bound
jb
std
jg
andb
xchg
mov
xchg
dec
orb
or
and
icebp
mov
int
or
jbe
xor
je
adc
jecxz
rcll
sbb
leave
mov
jnp
jno
outsb
pushf
or
popf
sub
xor
mov
imul
add
cmc
inc
nop
xor
rclb
inc
gs
mov
mov
addl
xchg
inc
dec
inc
and
jno
sbb
roll
pop
adc
fcmovu
and
cmp
push
push
imul
icebp
addl
ljmp
xor
and
adc
dec
jb
xor
cmp
dec
cmp
fldenv
push
xor
jo
mov
push
loope
dec
add
jo
push
mov
jg
lock
movsb
nop
mov
mov
pop
fbstp
dec
inc
sarb
inc
adc
add
add
inc
enter
jge
call
lahf
jecxz
and
push
push
and
andl
decl
jg
repnz
cmp
pop
daa
inc
push
xor
jne
pop
inc
add
add
jb
mov
in
stos
mov
and
xchg
jne
cs
add
imul
mov
mov
je
out
push
mov
imul
test
or
fs
adc
test
add
or
std
test
mov
mov
dec
loopne
dec
outsl
sbbb
cli
dec
arpl
or
shll
and
pusha
gs
std
rcl
cmp
repnz
icebp
mov
clc
shll
inc
xchg
add
mov
and
inc
push
jb
mov
jae
inc
or
sbb
add
sbb
jbe
fildll
sub
mov
fldenv
stos
mov
nop
pop
popa
jp
cmp
push
adc
xor
jmp
mov
cmp
add
rcrl
lock
or
push
sub
shrb
xchg
movsl
sarb
xor
push
lea
jmp
inc
mov
mov
enter
add
mov
jno
push
pop
xor
inc
fwait
jle
cltd
adc
jbe
jl
pop
mov
clc
dec
nop
bnd
pop
fidivs
push
std
mov
mov
cli
cmp
add
add
out
add
or
jg
int3
cmpsb
test
xchg
add
add
or
and
mov
inc
and
in
push
incl
stos
dec
out
adc
int3
gs
mov
add
rorb
bound
jecxz
fs
shlb
ds
nop
add
pop
xchg
cmpl
xor
dec
mov
fdivs
mov
int
add
orb
push
mov
stos
jge
stos
add
sbb
push
xor
addr16
xor
aaa
or
shl
and
push
jbe
fsubs
pusha
js
popa
cld
mov
add
rcr
mov
scas
and
test
sub
loope
shrl
add
add
xchg
roll
mov
jo
jg
mov
inc
xor
les
and
out
sbb
add
dec
mov
lea
mov
fildl
mov
adc
sub
std
fwait
fnop
adc
out
int3
movsb
xor
mov
dec
jns
pop
mov
add
loope
add
cld
idivb
and
test
xchg
or
inc
mov
jecxz
shll
mov
rorb
inc
jg
jg
and
std
test
add
flds
nop
push
popa
cmp
dec
sub
push
add
jp
call
adc
addb
xor
fcmovnu
sar
and
rorl
adc
in
jg
fwait
add
nop
and
pusha
adc
out
adc
test
mov
outsb
ret
jecxz
sbb
mov
inc
lods
xor
popa
ljmp
sub
incl
addb
jb
mov
inc
add
sti
bound
add
adc
cs
jl
lcall
sub
mov
nop
aaa
xchg
loopne
xchg
mov
fnstcw
stos
ss
lods
int
fnstenv
adc
aam
mov
jbe
rol
xchg
outsb
add
dec
test
jne
xor
cmc
mov
clc
mov
add
jecxz
lret
les
std
sub
repnz
orb
dec
std
fadd
sub
mov
add
fisttps
xchg
lret
lods
in
push
mov
enter
dec
rolb
and
lock
pop
bound
lahf
testb
sti
les
mov
cltd
and
cltd
in
xor
adc
pop
add
ret
push
mov
mov
xor
sbb
dec
stos
push
xchg
ret
xor
in
adc
pop
push
mov
or
fwait
adc
or
mov
cli
fiaddl
std
in
fimuls
cmpl
sbbb
aas
mov
pop
es
bound
mov
enter
or
orl
inc
ret
push
adc
adc
gs
nop
ficoml
inc
add
or
xchg
shlb
cmp
and
hlt
inc
inc
fdivs
aam
test
mov
jno
jo
shrl
int
xchg
and
pop
neg
add
add
ljmp
mov
data16
inc
xchg
dec
ret
inc
push
mov
and
mov
daa
adc
cmp
jp
cmp
les
sbb
mov
push
and
test
xor
adc
iret
popf
fisttps
mov
add
mov
and
mov
cmp
addb
jl
cld
sub
lea
popa
fadds
orl
shlb
xor
std
xchg
add
movsl
add
les
bound
xor
push
pop
clc
aam
inc
pop
fidivs
or
push
pop
dec
cltd
cld
andb
add
dec
and
ja
outsl
sub
add
adc
ss
popa
divl
xorb
xor
es
popf
push
addl
xor
jns
mov
cmc
mulb
test
ficoms
xchg
mov
andb
pop
jp
popf
subb
add
mov
mov
mov
jne
inc
sub
in
add
andl
adcb
cmp
stos
jbe
add
aam
incl
add
mov
orb
and
js
addb
arpl
adcl
xchg
rcr
pusha
popf
std
cmpl
mov
mov
addb
add
rorl
out
and
mov
sahf
mov
loopne
dec
cmp
insb
or
add
jle
xorb
jb
ret
aaa
and
push
pop
aam
aas
mov
adcb
outsb
js
add
push
push
popa
lret
fists
mov
pop
cs
jo
shrb
inc
xchg
mov
mov
or
nop
incl
loop
xchg
out
and
or
mov
dec
inc
frstor
sahf
inc
mov
jne
movsb
cmp
pop
xorl
aaa
in
enter
fdivl
adc
add
popa
decb
pop
inc
ljmp
push
or
flds
and
andb
sbb
int3
call
js
cltd
loop
or
adc
sbb
xchg
addb
inc
sti
mov
sbb
add
sbb
push
cltd
test
push
sbb
lods
add
adc
or
popa
dec
add
hlt
ror
push
test
dec
cltd
sbb
add
jns
test
cmp
roll
xchg
testb
and
ja
sub
mov
nop
mov
popl
sbb
sbb
orb
adc
push
xorl
sbb
cwtl
adc
cmpb
mov
popf
mov
xchg
dec
js
pusha
or
cld
lea
push
test
mov
fwait
or
sub
xchg
fadds
dec
sbb
es
jg
enter
loope
bound
jbe
cs
test
out
aam
xlat
cmp
mov
rolb
loopne
fisubl
fs
lods
hlt
mov
xor
jb
mov
mov
test
xchg
mov
cmpsb
icebp
pop
jecxz
cmp
and
rolb
icebp
rcrb
adc
mov
or
sbb
loope
and
dec
or
mov
movb
jbe
aas
mov
sysenter
push
call
loopne
push
dec
ret
jp
jns
lds
mov
xchg
sbb
adc
and
shlb
stc
sub
mov
popf
jbe
xchg
popa
or
shrb
cli
out
sub
add
rcrl
sbb
xor
xor
dec
lods
mov
adc
mov
cltd
sub
in
adc
xlat
in
bound
lea
popf
inc
sbb
adc
push
mov
adcb
imul
cmpsb
and
verw
decl
add
adc
xchg
inc
pop
and
and
shr
push
or
notb
std
mov
fisubrs
mov
sub
inc
cld
inc
dec
add
fcmovne
or
mov
incb
mov
lcall
push
mov
dec
lock
mov
stos
cmp
or
or
xor
xchg
mov
mov
lock
ljmp
or
cmp
or
fsubs
push
inc
mov
adc
add
movsl
mov
add
and
cltd
adc
lea
push
or
adc
mov
or
sbb
jbe
andl
jg
call
jae
mov
dec
shrb
cmpsb
sbb
and
std
and
mov
mov
push
xor
mov
mov
pusha
adc
push
hlt
cs
mov
dec
mov
mov
fcoml
add
ja
cld
push
mov
loop
add
add
lods
inc
mov
mov
jg
movsl
pop
lods
push
mov
jp
stos
dec
xchg
loop
add
lea
adc
jg
dec
bound
lahf
loopne
add
addb
out
loop
cwtl
outsb
xor
fsubl
or
mov
xchg
push
bound
adc
addl
xchg
inc
mov
sbb
movsb
paddb
pushf
fistl
fwait
sbb
mov
add
adc
mov
add
negb
adc
into
mov
outsb
loopne
dec
icebp
rolb
loopne
inc
add
decb
cld
cmp
or
ficoml
add
or
mov
and
das
adc
lock
xchg
mov
jno
adc
inc
inc
cld
push
add
rcrb
add
xor
loope
nop
ss
jecxz
mov
jg
incl
add
or
mov
cli
add
lds
or
mov
sti
jge
in
mov
jno
sbb
rorb
xor
jg
in
shlb
and
outsl
add
add
aam
or
jb
or
add
cmp
or
sbb
push
add
inc
add
pop
mov
jbe
mov
inc
mov
add
bound
in
mulb
test
inc
popa
dec
addl
jg
nop
incb
xchg
or
popf
stos
sub
xlat
es
ljmp
jp
std
out
add
adc
mov
mov
fiaddl
aad
cli
ljmp
sub
xor
stos
inc
push
adc
mov
jmp
cmp
adc
fcmovbe
mov
push
popa
lds
jo
jo
or
add
pusha
mov
lds
push
pop
pushl
jno
popa
push
adc
fsubp
or
sbb
mov
sub
cmp
inc
dec
decb
inc
inc
push
scas
pop
push
jae
and
cmp
and
sbb
test
stos
inc
mov
test
jbe
or
xchg
mov
fsubp
sbb
mov
cli
add
lods
add
sahf
mov
sub
in
or
mov
add
pusha
jo
push
xchg
adc
cltd
inc
pop
icebp
rolb
nop
jo
cld
loop
and
xor
xchg
fdivrl
xor
dec
or
jo
pop
sbb
out
dec
sti
mov
or
lock
push
mov
push
popa
and
mov
and
add
and
mov
aaa
movsb
xchg
icebp
dec
repnz
add
rcll
in
pop
xor
ret
lock
xorl
sbb
inc
mov
popa
enter
ret
push
adc
inc
popf
or
mov
adc
fwait
sbb
incl
cld
test
ret
push
or
hlt
mov
inc
test
pop
inc
dec
inc
syscall
nop
pop
add
sti
pushl
stos
dec
sub
and
jecxz
and
mov
push
iret
and
mov
add
movsb
pop
jno
push
push
mov
nop
cmp
jb
insb
aaa
pop
incl
aas
mov
loope
pop
adc
icebp
movsb
push
adc
cli
mov
outsb
pop
inc
and
decl
jno
add
test
addb
jo
icebp
popl
popa
scas
xchg
jmp
push
xor
pushf
rcll
call
fistps
add
nop
pop
nop
xor
mov
or
add
aaa
test
xchg
mov
lock
in
repnz
pop
xor
add
rorb
xor
jg
mov
cld
lea
lret
dec
xchg
std
cmp
pop
adc
add
int3
mov
inc
add
lods
xchg
add
mov
in
or
jmp
jo
xor
push
fxtract
and
push
or
adc
jbe
daa
insb
cld
movsl
addb
lcall
and
xchg
adc
adc
and
fcoml
fisubl
pop
idiv
cs
mov
push
pop
jecxz
inc
xor
push
jg
test
call
addb
sub
or
xchg
and
fldl
jg
icebp
pusha
sub
jbe
pminub
shlb
gs
adc
int
push
std
std
es
fidivrl
or
arpl
int
vmovups
dec
arpl
movsb
outsb
add
pop
xor
fbld
std
jg
push
sbb
orb
cs
add
or
test
add
xchg
iret
out
mov
std
mov
rolb
pop
and
fisubrs
ja
mov
jne
addb
mov
push
cld
mov
mov
bound
mull
jo
add
sbb
leave
rorl
cwtl
cmp
mov
mov
push
mov
or
pop
es
or
push
lock
sub
hlt
cli
aaa
jl
mov
sub
mov
popa
ret
outsb
bound
sbbb
sbb
fmull
xor
mov
cwtl
and
and
sub
cmc
scas
push
inc
and
mov
xor
inc
or
movsl
dec
mov
push
or
pusha
dec
sti
xchg
jle
insl
adc
add
mov
rolb
lods
mov
add
sub
inc
aaa
outsb
jp
enter
sub
inc
mov
aad
mov
addl
add
dec
scas
cmp
pusha
add
pusha
flds
push
add
sub
addl
fldt
je
mov
out
je
jo
sub
subb
ret
test
clc
add
ret
push
andb
pop
push
sub
aaa
xchg
hlt
popa
or
sarl
sar
jo
xor
jge
insl
fisubrs
push
sahf
push
add
mov
fdivl
sbb
frndint
repnz
addl
loopne
or
and
lret
mov
jge
cmp
aaa
dec
out
and
stos
cltd
icebp
add
add
adc
cmpsl
arpl
or
lods
sahf
xlat
push
dec
aaa
xchg
imulb
loop
sbbl
add
add
add
and
and
cltd
mov
loope
add
push
fwait
mov
and
idiv
push
add
adc
mov
test
inc
mov
mov
mov
ret
sub
xor
rcll
rcl
xchg
rolb
enter
sbb
mov
mov
pop
test
xchg
mov
xchg
mov
sub
test
test
add
mov
xchg
add
xchg
sbb
insl
push
mov
push
jo
bound
adcb
xchg
and
push
lock
scas
mov
cmp
incb
pop
add
roll
jo
push
sbb
sbb
ret
adc
mov
test
not
inc
rorl
popa
lret
imul
lods
rcll
inc
sub
sbb
sbb
or
mov
pop
pusha
lods
mov
in
adc
adc
or
movups
push
hlt
adc
pusha
std
mov
int
imul
mov
inc
add
add
mov
pusha
leave
xchg
or
pusha
lods
mov
lcall
sbbb
iret
add
call
add
mov
jge
cld
sahf
add
inc
lods
test
add
mov
outsb
add
mov
lea
enter
int
scas
push
call
cld
nop
or
add
jb
insl
pushf
dec
imul
ss
or
adc
fstps
inc
mov
adc
adc
fwait
lods
cld
jmp
and
ss
jbe
xchg
jge
addb
mov
or
fbstp
setp
loop
add
cmp
icebp
int
sbb
jle
pop
fildll
in
cltd
pusha
or
rcll
ret
pop
mov
addl
mov
cld
popl
test
or
addl
xor
mov
dec
xor
xchg
addl
jg
pop
orb
or
orl
bound
push
and
xor
mov
and
cmpb
aam
test
push
mov
test
adc
push
and
xor
pop
inc
mov
dec
call
stos
insl
ret
dec
inc
pop
call
ljmp
pop
aad
clc
pusha
xor
add
test
xorl
push
inc
btr
int
add
adc
add
add
mov
pop
xorb
bound
or
les
lahf
dec
rorl
inc
or
rol
or
sub
addb
cmpsb
in
push
mov
insb
inc
les
adc
pop
test
inc
loopne
lcall
idivb
mov
adcl
add
xchg
add
add
add
cwtl
clc
fbld
std
imul
nop
add
adc
and
push
popa
mov
cs
roll
out
inc
xchg
ret
cs
stos
hlt
mov
mov
movsb
pop
xchg
mov
add
add
in
adc
jecxz
in
shll
adcb
xchg
mov
inc
pop
xchg
xchg
xor
call
mov
popa
or
mov
fbstp
imul
and
stos
mov
lcall
or
mov
xchg
inc
or
and
or
scas
ret
std
sbb
or
sub
sbb
jae
xor
mov
push
inc
pop
mov
cs
fchs
add
call
cmp
mov
mov
rorl
mov
insb
test
popf
movsb
push
mov
ja
inc
test
mov
inc
je
popa
aam
jg
sub
bound
sub
stos
pop
or
lret
hlt
xor
stos
popa
std
loopne
out
popa
and
popa
lgs
sub
pop
cmpsl
lcall
adc
mov
pop
fwait
and
scas
cmp
pop
mov
mov
and
in
and
pusha
clc
ljmp
pop
sbb
loope
int3
adc
add
mov
dec
or
leave
pop
pop
xchg
jp
add
js
ficompl
mov
mov
in
cld
add
add
pop
std
xor
mov
and
mov
sub
xor
push
mov
mov
mov
and
or
lock
cmp
or
push
sub
push
dec
or
test
mov
aaa
pop
movsl
les
inc
shlb
cmpsb
test
stos
adc
pushf
sbb
sbb
adc
inc
cmpsl
test
jo
xchg
lock
loopne
shll
mov
pusha
mulb
adc
add
cmp
roll
mov
push
inc
punpcklwd
mov
push
xchg
lret
addb
lea
lds
and
cwtl
push
lods
mov
adc
shrb
push
xchg
and
sbb
mov
and
push
jl
push
mov
cmpb
add
jecxz
loopne
add
or
sub
outsl
neg
and
sti
andb
pop
adc
add
or
loopne
sarb
and
add
xor
jg
push
xchg
subl
push
inc
loop
jae
pop
cmpsb
test
mov
or
arpl
out
popa
adc
push
cmpsb
call
mov
xchg
xor
negb
xor
cltd
fsubrs
xor
aas
pusha
test
shll
pop
popa
pop
mov
xor
pop
movsl
fisttpl
pop
xor
pusha
orb
loopne
fistps
imul
xchg
cmp
scas
and
test
das
and
mov
int
pop
rolb
mov
clc
addr16
mov
inc
scas
mov
xor
mov
mov
and
daa
andl
adc
add
add
add
add
pop
mov
pop
dec
mov
push
push
and
sbb
jbe
sub
adc
xchg
pusha
lock
or
mov
aaa
cmpsb
sub
adc
cwtl
pop
or
jle
aad
push
mov
xchg
je
lds
pusha
and
std
dec
mov
aas
add
cs
push
insb
out
add
or
cmp
add
scas
add
ret
or
mov
adc
leave
pusha
ljmp
addb
dec
adc
jb
testb
in
xor
xchg
inc
dec
lock
sub
roll
loop
add
pushf
lock
xchg
jo
sub
ljmp
adc
aaa
mov
cli
andl
inc
or
aad
mov
decl
xchg
and
xchg
repnz
or
jge
sbb
sub
sbb
shrb
lock
xchg
adc
fisttpl
pop
push
inc
cmp
adc
push
xor
sub
std
nop
jo
pop
jo
sbbb
rolb
mov
ret
jecxz
xchg
xor
mov
adc
cwtl
shll
add
rorl
insb
pusha
in
nop
dec
outsl
aaa
sub
insb
out
sbb
inc
inc
push
loopne
jge
sub
mov
mov
mov
push
in
jle
push
shlb
xchg
xchg
add
pop
and
mov
adc
cmc
pop
mov
mov
push
push
sti
jo
test
roll
je
jbe
sbb
outsb
mov
pop
sub
sub
fstpt
push
inc
outsl
jne
or
push
ret
mov
aaa
insb
pop
movsl
movsb
cwtl
add
test
mov
loopne
xchg
cli
push
jbe
sbb
and
shl
mov
jne
pop
or
xchg
andl
mov
nop
rorl
jnp
lahf
add
ret
sub
push
rorb
push
push
les
jle
xor
cmp
sbb
dec
popa
jmp
adc
and
rolb
testb
jp
dec
cwtl
inc
cmp
insb
mov
es
incb
icebp
or
and
cltd
add
lods
xor
fdivrp
mov
mov
mov
lods
pusha
and
bound
fwait
inc
push
mov
xor
fadds
jo
lcall
xor
pop
icebp
mov
jg
mov
xor
or
xorps
and
add
sbb
dec
mov
mov
push
xlat
adcl
cmc
lea
fsubrs
push
add
jo
std
adc
insb
loopne
testb
into
or
aaa
inc
clc
data16
cltd
pminsw
adc
cltd
mov
push
push
pop
ljmp
sub
cs
mov
loope
dec
aaa
inc
stos
push
loope
rcrb
mov
dec
roll
pop
adc
adc
std
mov
xchg
push
clc
lods
stos
sub
xchg
push
pop
push
push
cmp
in
incb
and
cld
push
movsb
js
aaa
mov
xchg
inc
dec
fs
jno
cmpsl
add
push
loope
push
es
adc
popf
fwait
cmp
mov
std
mov
shl
pusha
jns
xchg
cld
aaa
insl
clc
cmpsb
jno
push
gs
push
or
sub
push
insb
aaa
inc
mov
mov
cwtl
mov
mov
lcall
ret
bound
add
das
and
xcrypt-ctr
cmpsl
sbb
orl
or
mov
or
or
pop
jmp
les
xchg
mov
add
add
push
and
test
push
push
xor
mov
inc
inc
xor
test
push
or
inc
cmp
push
movsb
lds
fidivs
test
dec
in
mov
jg
shlb
cwtl
dec
pusha
push
push
add
or
sbb
das
pusha
dec
pop
inc
sub
mov
and
shl
inc
add
cltd
js
pop
icebp
and
icebp
fistpll
push
cmp
mov
xor
add
xor
push
les
or
test
outsb
sub
push
mov
push
rclb
enter
push
push
enter
ljmp
aaa
fistps
adc
add
insl
inc
imul
push
add
push
sti
add
pop
inc
push
xchg
xorl
mov
outsl
mov
fidivrs
enter
push
cmpsl
push
int
add
movb
mov
pop
shrl
fcomps
push
sbb
lods
mov
fsubrs
inc
roll
hlt
or
push
ds
push
add
pop
push
pop
add
and
mov
rcrl
mov
lea
movsl
cmp
aam
fwait
jg
sbb
add
add
dec
cmpsl
adc
sub
int
loope
mov
cmp
mov
xchg
sbb
in
push
adc
cmpb
int3
sbb
adc
xorb
adc
lcall
mov
shlb
test
adc
into
clc
fnstsw
mov
mov
mov
or
mov
mov
sbb
mov
or
and
addl
lahf
dec
add
scas
adc
mov
mov
add
mov
xchg
sarl
inc
cli
mov
cmp
add
lahf
and
sbb
ja
add
inc
into
sbb
fists
cld
push
aaa
fnstenv
xchg
shrb
ljmp
aam
fists
neg
out
and
adc
jnp
inc
and
jp
add
inc
inc
mov
add
mov
js
dec
insb
cmp
pop
or
add
mov
popf
mov
mov
push
mov
rolb
scas
enter
inc
push
addl
or
add
enter
xorl
mov
sti
push
inc
mov
add
mov
add
aam
clc
lcall
popl
lcall
jg
push
and
icebp
movsl
mov
mov
pushf
mov
inc
or
ljmp
mov
movntq
daa
xchg
mov
push
adc
mov
mov
fdivl
hlt
insl
mov
popf
xchg
jne
data16
lods
push
pop
les
addb
pop
xor
jbe
les
movsl
mov
fabs
xchg
adcb
pop
out
hlt
repnz
xchg
mov
hlt
jge
push
hlt
jno
cmpb
push
add
push
cli
fistpl
xchg
addl
mov
cld
jecxz
lods
addl
jo
add
mov
cmp
scas
xor
testl
mov
andb
add
mov
push
sub
cs
push
shlb
xchg
sbb
mov
jl
mov
cld
pop
push
jnp
push
add
sub
imul
xor
mov
mov
jg
outsl
dec
fcoml
popf
xorb
out
jbe
push
add
notb
add
test
adc
jno
dec
or
mov
out
add
jbe
inc
dec
or
mov
push
lds
mov
mov
pop
mov
hlt
lret
inc
inc
pop
pop
rcrb
mov
bound
jne
sbb
jge
popf
mov
outsl
jmp
rcl
xchg
mov
xchg
mov
pop
cmc
outsl
rclb
jge
les
in
in
rorb
pop
sbb
pusha
sbb
add
inc
les
lds
cmp
leave
and
or
and
fwait
inc
in
notb
cmp
mov
adc
jl
cmp
mov
push
push
or
ja
popf
add
sbb
add
mov
lods
mov
push
cs
dec
int3
lock
dec
sub
add
dec
xor
inc
fisubrl
inc
bound
add
outsb
jmp
gs
xchg
lods
dec
aam
rorb
jecxz
shlb
pop
sbb
xorb
loope
nop
lret
and
push
xchg
push
sub
add
xor
loope
xor
xor
xor
pop
cmpb
dec
sbb
dec
aaa
add
xchg
dec
mov
xchg
push
mov
push
ds
jne
or
hlt
xchg
out
shl
fisttpl
inc
mov
sbb
mov
inc
sbb
insl
andl
pusha
xchg
int3
sahf
cld
pushf
sub
dec
je
jbe
leave
adc
jnp
dec
push
dec
dec
xchg
pop
int
ret
les
mov
imul
enter
fcompl
sub
add
orb
xlat
and
xchg
and
aas
xchg
lcall
jo
mov
xchg
std
xchg
adc
loopne
cmc
or
jb
nop
inc
test
adc
iret
xchg
in
add
cltd
popa
sub
lock
fistps
dec
add
adc
pop
daa
mov
or
dec
cld
mov
adc
add
fimuls
lret
loopne
xchg
ja
adc
push
xchg
mov
loopne
js
pusha
enter
mov
nop
jecxz
mov
or
xchg
add
mov
adc
lods
insl
sbb
popa
es
inc
or
and
or
rolb
fistpll
ja
movsl
leave
ja
fdivr
mov
mov
mov
ret
shlb
ja
ret
mov
in
inc
icebp
pop
sbb
adc
adcl
inc
js
clc
pop
push
push
rclb
jo
js
mov
add
fsubr
data16
js
xchg
xchg
xchg
adc
lds
stos
das
js
rcrb
cld
cmpl
jns
jle
mov
cmpl
mov
add
mov
inc
shlb
jo
cmp
ret
add
mov
cs
jns
es
and
sub
sbb
push
mov
pop
lock
adc
fmull
add
add
mov
add
jp
sarb
pop
in
ja
xor
je
int3
add
orb
outsb
adc
js
jl
push
scas
aaa
sbb
or
cmpsb
lods
mov
xor
mov
out
dec
mov
cmc
inc
xchg
cltd
sub
clc
adc
jno
jge
jbe
idiv
sbb
jnp
insb
or
jnp
rcrl
inc
jnp
xor
xchg
mov
push
scas
cmp
lods
push
lods
and
cmp
outsb
mov
jge
cmp
inc
in
movsb
cmp
xor
mov
mov
jno
pop
add
inc
xor
push
mov
aam
and
nop
sub
mov
arpl
dec
mov
jbe
add
jge
push
adc
movsb
in
test
inc
pop
and
ds
aam
dec
inc
pop
ss
add
push
outsb
out
or
shlb
xor
jmp
push
push
sarl
aas
in
mov
pop
fldenv
dec
push
xor
nop
add
cld
sahf
jo
dec
decl
or
rolb
or
scas
movsb
sbb
cli
insl
pusha
incl
nop
cwtl
adc
sbb
lcall
push
std
and
push
mov
jae
cmp
and
mov
mov
loopne
aam
out
test
sahf
xor
adc
or
or
in
dec
out
pop
or
xor
mov
out
inc
ss
jbe
xor
mov
inc
push
inc
push
xchg
inc
or
lcall
inc
jge
insw
loopne
inc
mov
sbb
add
and
dec
cmpsb
cmp
jbe
pop
jle
loop
outsl
cmp
pop
lods
dec
jae
out
xor
mov
push
loopne
mov
inc
jo
lock
data16
fwait
jmp
inc
gs
and
insl
shlb
ljmpw
or
jo
imul
andb
fiadds
inc
mov
popa
test
rolb
sahf
mov
cld
ret
imul
xchg
adc
xor
aas
jnp
jns
inc
jg
aas
popa
xchg
jl
push
popa
xchg
mov
aam
mov
mov
mov
inc
aas
add
ret
iret
or
pop
add
dec
test
push
or
rorl
inc
fstpt
xchg
subl
inc
and
pusha
add
in
fucomip
mov
mov
mov
pusha
dec
mov
xchg
and
push
push
ja
sub
les
and
cli
jo
xchg
loope
outsl
js
xchg
outsb
or
sbb
push
pop
inc
andb
mov
jle
inc
push
jle
push
jle
iret
adc
mov
fistps
cmp
sbb
xor
popf
or
xchg
cld
mov
add
loope
rol
icebp
add
inc
sub
jo
loop
in
mov
fistl
or
cmp
mov
lcall
xor
mov
jg
or
rcll
mov
add
pushl
cwtl
and
dec
lea
movsb
testb
insl
mov
jge
inc
jl
shlb
push
and
sub
jp
adc
mov
sarb
xchg
lock
lret
mov
xchg
mov
inc
mov
cld
mov
or
xchg
mov
mov
sub
mov
mov
xor
test
jo
xchg
aas
subb
and
jg
mov
call
lds
inc
xchg
repnz
fbstp
cs
in
nop
mov
push
adc
cld
xor
inc
and
cmp
xchg
add
nop
dec
mov
jbe
jg
incl
div
and
xorl
adc
ret
xchg
cli
rcr
sbbb
inc
mov
mov
call
aam
ljmp
ret
loopne
mov
add
mov
xor
xchg
into
pusha
fcompl
add
add
mov
test
inc
or
cltd
mov
lods
adc
mov
inc
xchg
mov
add
mov
adc
inc
push
jmp
out
mov
test
mov
int3
xchg
std
inc
sub
out
ds
mov
mov
addb
mov
mov
inc
jo
jl
sbb
scas
not
clc
orb
into
nop
ret
enter
adc
mov
xorb
fwait
loopne
mov
add
add
mov
nop
aam
aam
imul
decl
jecxz
xlat
jb
jns
mov
in
mov
or
mov
pop
nop
sub
ret
ljmp
pop
cltd
add
xchg
xorb
lods
sahf
cmpb
nop
addr16
insl
mov
shr
data16
divb
add
add
add
adc
dec
xchg
mov
mov
loop
inc
nop
loop
aad
cwtl
pusha
loop
mov
or
sbb
mov
mov
aam
xor
pop
fdivrs
sbb
or
or
mov
xor
mov
inc
dec
test
adc
inc
xor
mov
jle
xor
and
cli
push
push
dec
lods
add
inc
je
cltd
outsb
and
arpl
add
mov
sti
data16
push
adc
jp
pop
pusha
or
push
mov
imul
test
inc
cli
xchg
loop
nop
push
mulb
js
mov
dec
add
les
add
fs
call
xor
mov
inc
pusha
mov
add
mov
push
dec
movsl
cli
or
lea
dec
xchg
dec
dec
dec
fisttpll
mov
sub
or
fs
add
add
add
into
enter
aad
sbbb
popf
adc
sub
mov
bound
mov
adc
push
push
add
or
mov
stos
repnz
into
mov
xor
inc
push
pop
inc
call
out
dec
dec
sub
add
add
jns
add
popl
and
and
mov
repnz
cwtl
inc
test
popa
or
mov
fildl
inc
adc
dec
mov
test
popw
or
stos
add
cli
pop
fiadds
cmpsl
test
add
insb
fcomp
popa
jg
lcall
sbb
subb
es
jbe
test
into
addr16
jge
cld
adc
add
ret
pusha
or
cmp
shlb
or
lods
sub
push
mov
xor
mov
jge
pusha
xchg
cmp
xchg
mov
pop
bound
addb
push
dec
cli
popa
mov
bound
mov
pop
clc
outsl
mov
dec
xor
dec
inc
add
xchg
movsb
jo
push
into
mov
int3
add
ja
es
xchg
cmp
sbb
icebp
or
xchg
movsb
add
fbstp
roll
rolb
jns
insl
add
inc
jp
inc
jbe
orb
or
sbb
or
into
lea
push
mov
roll
push
pop
std
fwait
addb
mov
iret
popf
flds
in
lock
and
popa
jnp
adc
mov
in
scas
mov
bound
mov
xorb
mov
xor
scas
es
and
jl
orl
add
adc
add
ja
inc
sbb
add
faddl
iret
test
fucom
rorb
sbb
xor
rorb
xchg
jno
cld
sahf
add
std
add
nop
xor
mov
xchg
rorb
jg
pop
pushf
roll
add
sub
sub
push
xor
lods
mov
push
outsb
push
jle
sbb
jno
sub
add
insb
inc
jbe
lea
xor
cmp
inc
outsl
outsl
push
add
adc
adcl
mov
es
addb
pop
sub
aad
xor
insb
mov
cmpsb
dec
cld
push
js
int3
movsb
addl
inc
lods
xor
cli
sahf
mov
add
inc
push
push
push
add
xchg
popa
js
xor
shr
rorb
push
pop
mov
fsubs
rolb
adc
lret
inc
dec
pusha
or
or
lock
movsl
mov
sbb
andb
in
aas
adc
and
add
bound
dec
outsl
dec
xor
dec
pop
arpl
in
sbb
or
dec
or
gs
enter
cmc
sub
test
dec
mov
add
mov
clts
loope
inc
ljmp
sub
add
push
mov
in
pusha
add
roll
dec
xor
fiaddl
inc
mov
mov
add
add
inc
add
movsb
vpcomud
mov
inc
jp
push
cmp
add
jg
pop
lods
addb
je
je
add
add
mov
mov
loopne
gs
xor
in
aam
jb
jns
in
out
test
xor
add
pop
loopne
adcb
push
xor
push
or
loope
stos
pop
sahf
xchg
pop
sbbl
rorl
lock
and
inc
adc
inc
jp
popa
push
cmp
cmp
imul
jns
loopne
mov
ljmp
lea
xchg
outsb
jbe
sbb
mov
test
ret
mov
std
outsl
pop
pop
insb
sub
sbb
dec
faddl
add
mov
add
or
and
bound
and
sbb
add
xchg
add
sbb
and
fnclex
sub
ds
and
hlt
enter
movsb
into
shlb
in
xchg
cmc
leave
inc
mov
sbb
hlt
inc
add
sbb
std
or
mov
dec
stos
add
cmp
jbe
pop
dec
pop
into
test
xor
dec
int3
jl
das
ja
xor
fadds
xchg
mov
add
imulb
add
popf
rolb
cmp
and
pop
inc
lock
xor
add
ds
test
nop
push
sbb
pusha
push
flds
aam
dec
les
fdivs
test
js
mov
mov
adc
mov
mov
cvtdq2ps
mov
mov
and
call
sbb
add
out
jbe
lds
mov
or
es
sbb
and
or
mov
cltd
mov
popa
xchg
add
clc
push
sbb
mov
and
cld
add
and
lcall
mov
rorb
mov
xor
mov
or
icebp
xchg
cmp
xor
mov
inc
jecxz
cld
fwait
jbe
or
inc
jbe
pop
dec
push
popa
test
jecxz
add
enter
shlb
pop
lock
xor
xorb
loopne
mov
jg
aad
jbe
mov
adc
fisttpll
pusha
movsb
lcall
mov
mov
push
push
in
inc
dec
jge
push
shll
mov
scas
jg
mov
or
add
adc
loop
adc
push
loopne
fiaddl
mov
or
push
mov
dec
sbb
decl
test
add
add
and
sbbb
cli
decl
add
ds
aas
sbbb
imul
test
pop
leave
popa
add
aas
xor
jg
decb
mov
adc
cld
aam
push
inc
add
fidivl
pop
nop
data16
fisubl
and
and
and
jge
cli
ljmp
push
pushl
cmp
add
mov
jle
adc
jecxz
adc
mov
ret
sbb
adc
out
mov
sub
test
jle
mov
clc
std
or
and
jge
push
or
jg
movsb
push
inc
std
lods
or
insb
mov
dec
rorb
mov
mov
xchg
test
lea
mov
fisubrs
add
push
subl
mov
repz
inc
add
add
stos
xchg
pushf
imul
aaa
sbb
rorb
fs
aaa
or
movsb
fbld
jg
add
sbb
mov
jle
cmp
mov
outsl
or
mov
mov
xchg
mov
sbb
aam
adc
cmp
ja
shrb
sbb
add
pop
sub
xchg
inc
nop
jp
pop
clc
fists
mov
dec
addb
rcrb
lcall
les
pusha
dec
inc
adc
add
rcr
fisttps
pop
mov
lods
inc
mov
add
dec
or
loope
sub
ficoms
inc
and
cli
xchg
popa
dec
dec
push
ja
or
or
lret
add
jne
adc
sti
push
dec
inc
loopne
dec
loop
xor
cmp
adc
xorb
inc
jecxz
xorb
jnp
nop
xchg
mov
mov
or
jo
mov
jo
popa
hlt
rorl
cmpsl
push
insb
pushl
dec
movsb
insl
or
jl
add
dec
mov
mov
mov
lods
jmp
push
ss
inc
dec
lcall
nop
dec
jp
sbb
mov
gs
jbe
add
popa
push
cmpsb
and
and
scas
push
mov
xchg
ljmp
add
cmp
inc
xchg
ret
cmpsb
mov
push
mov
outsl
cltd
or
adc
xchg
aas
rorb
push
adc
add
mov
push
pop
or
cld
mov
mov
lds
mov
xor
mov
fbstp
lds
add
mov
or
addr16
in
in
subl
push
fcompp
rorl
lods
sahf
xchg
decl
adc
add
or
into
xchg
and
add
rolb
leave
sub
inc
lret
mov
push
push
add
adcl
or
hlt
and
sbb
or
je
add
cmp
add
or
inc
jmp
push
stos
mov
xor
pop
aas
ljmp
int3
cs
mov
or
cld
scas
mov
and
mov
into
enter
test
das
sub
fwait
jb
push
dec
orb
or
pop
xor
rorb
inc
clc
out
xchg
cltd
pop
sbb
les
popa
cmp
mov
mov
add
jle
es
loope
xor
pop
push
loopne
dec
xor
icebp
bound
lcall
inc
mull
pop
sub
rolb
mov
rolb
push
sub
ficoms
ja
push
mov
jbe
push
mov
cmp
movsb
bound
and
add
xchg
faddl
lret
xor
int3
add
xchg
adc
mov
or
jae
loope
add
adc
imul
add
push
push
outsb
push
hlt
rorb
test
push
push
in
fildl
fwait
repnz
add
fiaddl
push
ss
test
cmp
fisttpll
xchg
add
popa
outsl
aaa
ret
mov
and
popf
or
pop
icebp
ljmp
icebp
adc
and
loope
sbbb
add
fdivp
scas
add
mov
data16
inc
jo
fcmovbe
add
rorb
in
pop
inc
add
and
mov
sbb
mov
or
icebp
add
rorb
pop
jo
movsb
lret
push
pop
popa
adc
add
lods
push
je
ds
push
movsl
adc
fisubrs
movsl
add
les
xor
pushf
fsts
cld
in
or
and
jge
jno
adc
jno
and
xchg
and
xchg
mov
xchg
jg
lret
push
ds
and
dec
enter
dec
nop
and
mov
inc
mov
mov
add
lods
ja
orl
test
in
inc
rcll
adc
popa
cmp
mov
sbbl
inc
push
loope
int
outsb
aas
mov
popa
adc
cwtl
clc
divl
pop
bound
xor
pop
mov
rolb
adc
inc
add
push
lock
jmp
rcrl
mov
adcb
jmp
xchg
inc
stos
loopne
repz
adc
mov
or
cmpsl
mov
add
mov
xchg
and
roll
test
nop
arpl
mov
in
in
cli
adc
shl
or
push
in
add
mov
iret
xchg
fisubs
xor
sbbb
or
mov
pop
push
inc
daa
std
mov
loopne
std
nop
sbb
lret
cmc
fbld
mov
loope
add
push
cld
pusha
lcall
int
inc
jae
cmp
add
or
xor
or
mul
psrlq
mov
test
pop
addb
mov
adc
adc
mov
add
cmp
test
cmc
add
popa
cmpsl
aas
and
inc
dec
jecxz
incb
rcrb
pop
icebp
cld
add
enterw
outsl
aam
xchg
xchg
shlb
sub
mov
sub
call
or
or
addl
add
shlb
aam
orb
bound
fucomi
sub
xor
bound
sbb
or
cltd
inc
or
add
mov
or
outsl
lea
lea
pop
adc
xor
lea
mov
int
jg
add
push
add
call
inc
int
sar
jle
adc
in
add
mov
add
add
test
lea
add
inc
cld
int3
cmp
push
clc
add
jbe
add
mov
push
jecxz
lcall
pop
popa
sbb
push
out
fnstenv
sub
popa
sub
cs
add
ljmp
add
insb
add
or
hlt
lds
push
dec
mov
outsb
add
movsl
mov
jbe
cltd
adc
or
movsb
mov
cli
subb
dec
cmp
xor
and
nop
xor
insb
xor
outsl
sahf
popa
popa
push
and
aas
mov
into
adcl
jecxz
into
add
andl
adc
das
stos
aam
cmp
mov
jbe
xchg
sub
inc
inc
xchg
fcmovu
push
jae,pn
das
sbbb
or
test
xchg
nop
inc
cli
fsts
pop
cmpb
je
addl
push
mov
inc
and
test
xchg
movsl
pop
jne
jno
xchg
cli
adc
adc
jb
sub
adc
dec
inc
mov
add
andb
mov
rcl
roll
jbe
and
add
sysret
ss
push
rclb
lods
adc
add
sub
dec
add
loop
jno
lret
fnsave
cmp
push
inc
xor
xor
std
decl
jb
jno,pn
jne
adc
pop
mov
paddw
mov
loope
rcrb
add
call
ja
dec
test
jg
xor
rcll
rcll
ds
push
jns
push
mov
jo
adc
movsl
orb
mov
adcb
push
out
xchg
rclb
add
loopne
adc
pop
dec
std
push
push
push
shlb
mov
pop
mov
cltd
ljmp
addl
rolb
dec
mov
adcl
sub
call
leave
mov
inc
pushf
mov
shlb
and
xorb
cmp
mov
shr
mov
inc
adc
push
ja
movsl
lods
add
mov
push
mov
inc
movsb
stos
xchg
je
outsl
cs
sarb
inc
add
fisttpl
cld
icebp
inc
or
jbe
or
or
jl
inc
lods
push
sub
std
incl
inc
adc
test
stc
addl
mov
mov
or
dec
sub
push
popa
enter
loopne
cltd
and
cmp
and
lods
dec
cltd
mov
or
or
inc
adc
inc
jb
outsl
adc
mov
add
jne
pusha
lock
xor
sbb
mov
cltd
loopne
shrl
push
popf
mov
mov
jle
dec
inc
mov
xor
inc
and
incl
xor
or
int
or
dec
push
add
and
sub
std
idivb
xor
add
and
insb
popa
mulb
lods
and
xchg
sbb
lea
add
or
and
scas
dec
enter
sbb
add
mov
mov
xor
pop
lock
mov
push
ret
lods
lahf
dec
and
and
cmp
ljmp
pop
pop
andl
add
iret
lea
movsb
sub
int3
shrb
fsubs
hlt
xchg
int3
push
mov
fwait
gs
adc
lods
jg
xor
mov
or
or
jmp
or
and
and
scas
or
adc
ret
and
jmp
fistl
mov
add
sbb
cwtl
mov
hlt
xchg
pop
add
das
add
add
add
sub
arpl
add
pop
xor
push
adc
orl
push
add
loop
int3
add
mov
loope
mov
hlt
and
jp
add
and
and
mov
adc
jbe
es
ret
push
mov
popa
pop
hlt
add
xor
jp
pop
mov
xchg
push
fdiv
stos
push
pop
bound
adc
add
cmp
push
or
popf
sbb
int
xchg
or
add
xor
cmpsl
pop
xchg
or
std
cmpsb
push
jecxz
addb
adc
or
cs
test
pushl
mov
jb
mov
push
push
add
aam
pop
or
sti
mov
sub
idiv
addb
rsqrtps
mov
out
dec
fidivs
push
jbe
add
add
add
aaa
mov
pusha
je
mov
ds
cmp
cli
outsb
jg
orb
shll
hlt
push
mov
ljmp
xlat
or
add
and
pop
push
cmp
add
sub
add
push
jne
dec
in
stos
fldl
mov
mov
mov
sti
xlat
add
sbb
pop
inc
jmp
add
jl
clc
push
subl
pop
mov
shlb
cmpb
dec
push
and
orb
or
mov
jge
or
stos
add
mov
xchg
aas
test
add
adc
out
and
out
addb
cmc
mov
out
nop
mov
test
xchg
sahf
pop
movsb
add
pushl
sbb
test
test
jbe
fcompp
jb
push
std
lock
cmp
aam
dec
sub
shl
inc
sbb
int
push
jns
out
pusha
or
jb
enter
mov
les
or
mov
loopne
inc
loop
andb
adc
push
movsb
loope
pusha
mov
or
mov
pop
sub
jb
jmp
sub
andb
xchg
adc
add
or
mov
clc
mov
das
add
cwtl
mov
pop
mov
lock
popa
test
add
dec
aaa
pop
mov
mov
mov
xchg
or
and
hlt
xchg
lods
mov
pop
faddl
mov
xchg
xchg
add
push
aaa
xchg
add
fsubp
jl
cli
pop
ljmp
mov
or
adc
mov
jb
dec
xchg
xchg
or
orl
repnz
add
arpl
push
add
push
test
pop
pusha
fcomps
and
mov
test
shrl
add
add
push
sbb
test
jmp
cmp
add
loope
icebp
popf
xchg
adc
sbb
add
add
mov
call
adc
pop
mov
mov
adc
in
cmc
xchg
cltd
cltd
adc
popa
icebp
add
andb
sub
lods
or
and
test
cs
sub
dec
mov
or
push
pop
ss
or
dec
cmpsb
jle
int
add
mov
mov
sarb
lods
stos
loope
lret
lods
sub
mov
test
rcl
adc
adc
adc
adc
adc
mov
cmp
push
mov
add
inc
dec
lock
out
and
and
fwait
or
pushf
xchg
mov
les
and
lds
lods
test
mov
or
fbstp
addl
jnp
xchg
xchg
xorl
mov
mov
jg
mov
cmp
sub
add
roll
mov
jbe
push
scas
nop
pop
sub
icebp
les
call
mov
nop
or
xchg
jbe
dec
lods
sbb
cltd
rcrb
stos
outsl
add
mov
aam
fildl
fbstp
loop
ficoms
jg
inc
or
scas
xor
andl
and
push
push
mov
shl
lock
adc
addb
rorb
xchg
push
aaa
pop
jp
push
sub
or
add
clc
adc
cwtl
push
or
xor
or
or
or
adc
push
test
fmull
mov
add
or
cld
push
rorb
inc
fcomp
xor
and
int3
inc
shl
mov
and
or
ljmp
iret
std
mov
or
push
adc
mov
xchg
call
or
inc
fiaddl
popf
push
es
xlat
or
cld
adc
xchg
sub
outsb
or
jg
xchg
fsts
and
popa
mov
ljmp
or
orb
aad
std
and
dec
adcl
ja
rorb
push
add
inc
sbb
hlt
cltd
lock
adc
push
mov
push
pop
popf
jmp
pop
push
mov
and
movsl
add
sub
or
push
mov
dec
loope
mov
movsb
adc
movsb
int
cld
xchg
fmull
dec
push
nop
ss
add
xor
dec
daa
movsb
push
ljmp
adc
and
rcll
outsl
adc
or
and
aaa
push
pop
popa
bound
xor
or
push
icebp
ret
push
sub
dec
icebp
add
stc
jo
cld
stos
mov
add
mov
cs
dec
je
or
jecxz
fists
inc
jl
and
in
std
ficompl
dec
add
xor
mov
loope
iret
jecxz
ljmp
dec
xor
lods
inc
inc
stos
jmp
xchg
stos
subb
push
mov
or
add
jmp
aam
ss
and
pop
sub
lds
dec
pusha
arpl
fs
add
mov
rcl
dec
ror
clc
or
test
mov
dec
inc
outsl
jb
add
jnp
inc
test
sub
sbbb
and
push
dec
les
xchg
jge
andb
test
xchg
add
inc
pushf
push
and
icebp
push
xchg
sbb
in
bound
add
xor
inc
out
ja
and
pushf
gs
in
data16
mov
jl
loope
mov
adc
mov
mov
in
and
jecxz
fidivs
add
jbe
lahf
push
cmp
xchg
or
xchg
or
and
cmp
or
jecxz
adc
ja
repnz
call
cmp
stos
xchg
rorb
jns
pusha
and
test
mov
add
sub
dec
shll
push
enter
push
add
adc
pop
es
fsts
fistl
in
dec
inc
les
int3
std
jo
xor
repnz
xchg
dec
xchg
dec
popa
pop
cmpsb
add
adc
dec
pop
clc
fildl
xchg
call
or
jbe
push
or
jecxz
lods
je
in
int
pop
testb
inc
das
add
cmpsb
add
pop
xor
jmp
inc
mov
loopne
inc
testb
andb
fists
inc
xchg
mov
pop
mov
cmp
add
xchg
add
stc
popa
dec
sarl
sbb
aas
sbbl
or
add
jae
add
and
mov
int
inc
hlt
std
cmp
adc
loop
inc
ss
std
dec
sub
fnstcw
mov
nop
loope
cmp
pop
ret
dec
leave
dec
clc
aas
inc
ds
pop
leave
sbb
and
aas
nop
or
inc
shll
mov
mov
scas
and
aas
in
inc
loopne
jg
jbe
out
jbe
stc
cld
adc
jle
dec
icebp
inc
jg
or
pusha
loopne
add
add
loopne
add
hlt
popa
dec
les
adc
ja
outsb
pop
inc
imul
adc
mov
lods
mov
add
mov
shlb
xchg
ja
xchg
orl
add
xchg
icebp
insl
rcrl
add
insb
jbe
adc
roll
pop
mov
dec
les
orb
inc
imul
push
rorb
or
adc
lcall
add
adc
sbb
adc
add
andl
pop
or
popa
inc
and
jo
dec
sub
call
in
sbb
shrb
flds
cmp
jle
lahf
out
adcl
xlat
push
inc
pop
data16
cs
je
add
and
xor
cmp
dec
or
out
push
or
mull
test
clc
push
or
dec
dec
mov
ja
push
or
cli
fwait
or
xorb
inc
in
add
je
pop
pop
hlt
jge
adc
add
es
insl
lock
sbb
mov
xchg
adc
ss
int
inc
std
setbe
mov
jg
push
test
mov
aam
xchg
inc
push
jnp
int3
inc
cld
mov
movlhps
insb
decb
mov
adc
inc
or
vpcomd
inc
gs
pop
and
popa
stc
ljmp
sbb
test
or
and
xchg
push
dec
and
or
adc
fstl
xor
sahf
mov
or
mov
and
mov
rcll
fiadds
sbb
test
mov
inc
cmp
pop
sub
and
xchg
adc
stos
test
push
or
push
sub
adc
sbb
loopne
ret
cwtl
sub
jg
aad
lods
mov
mov
push
xchg
test
out
aaa
pop
or
add
inc
pop
pop
fisubs
xchg
sbbl
xchg
aam
and
or
gs
push
push
adc
test
add
mov
jecxz
ret
push
insl
incl
outsl
sbb
rorb
repz
or
add
push
mov
push
dec
pop
insb
jg
lret
add
add
das
and
dec
popf
fisubl
mov
pusha
xor
ret
clc
mov
add
scas
pushw
mov
mov
adc
cmp
mov
in
or
rcr
in
sbb
push
mov
jb
and
sub
cmp
popf
jl
xchg
and
xor
mov
xor
or
sbb
pop
dec
add
hlt
adc
sbb
ljmp
sbb
stos
outsb
test
clc
das
mov
repnz
add
insl
inc
sbb
adc
and
cmp
or
cmc
out
fisubl
andl
xchg
push
cmp
shlb
mov
and
test
mov
mov
dec
sbb
xor
into
pop
adc
rolb
clc
dec
inc
mov
test
and
movsb
sarb
mov
add
cld
ret
cmpsb
add
push
push
add
lods
mov
mov
loopne
popf
fs
xchg
mov
inc
xchg
push
adc
or
mov
and
subb
adc
outsl
test
xchg
addb
push
adc
mov
adc
sbbb
in
clc
pop
stos
jl
push
jns
mov
or
sub
adc
add
mov
push
inc
adc
pop
push
cmp
mov
mov
inc
cmp
add
push
int
xchg
inc
xorb
mov
jo
or
scas
es
enter
shll
shrb
dec
adc
data16
pop
xor
pop
jl
rorl
stos
mov
sar
nop
out
pusha
mov
cmp
es
iret
jno
popa
popf
xchg
mov
pusha
push
std
adcb
push
or
bound
decb
es
or
xor
inc
icebp
or
dec
pop
imul
popf
jo
lock
xchg
rcr
mov
sarb
sbb
mov
adc
stos
add
clc
decl
imul
push
cmp
add
pop
cltd
popa
fimuls
pop
mov
test
xor
cld
push
add
or
add
dec
push
mov
mov
mov
inc
pop
sar
or
loope
xor
cmp
jb
lcall
cli
hlt
cltd
xchg
lret
or
add
lcall
mov
daa
test
cmc
stos
mov
test
mov
fisttps
inc
test
pop
add
sbb
jo
loope
xchg
add
mov
xchg
rorb
popa
addl
std
test
lret
sub
and
dec
adc
lock
dec
xchg
subb
leave
pusha
sub
bound
nop
dec
inc
mov
xchg
pusha
addb
fidivl
mov
add
and
sbb
ret
iret
push
xchg
sbb
cltd
or
or
xor
dec
andl
add
insb
add
jo
or
nop
lock
xor
cmp
call
cmp
push
loope
xor
shlb
repnz
adc
inc
std
mov
add
aas
sbbb
jecxz
rolb
int3
sbb
cmpsb
push
nop
sbb
jecxz
xchg
push
lcall
adc
andl
nop
mov
loope
or
add
adc
ficompl
or
incb
fs
and
pop
cld
cltd
and
mov
xchg
jno
push
shr
subb
jecxz
lods
mov
push
mov
add
xor
mov
push
sbb
bound
and
add
dec
shrb
cli
xchg
lock
adc
xchg
mov
mov
xchg
mov
and
xor
pop
jno
int
pop
hlt
ja
clc
in
xchg
aas
cmc
jo
lds
stos
lret
push
sbb
ficoms
push
pop
lds
push
adc
xor
imul
inc
notl
es
dec
bound
out
lret
int3
or
nop
mov
sbb
mov
xor
and
mov
jo
sti
and
and
inc
push
inc
cmc
js
outsb
icebp
or
push
icebp
inc
pop
or
leave
nop
xor
adc
and
hlt
jno
adc
cmpsb
sbb
fstps
mov
jg
insb
xor
or
adc
movsl
add
adc
inc
arpl
cmp
xchg
lcall
fucom
xchg
inc
lock
inc
mov
jo
add
jecxz
add
dec
insl
stos
mov
loope
add
rorl
add
pushl
push
or
mov
add
and
mov
pop
ljmp
nop
add
pop
add
js
ficompl
fs
in
jne
test
sbb
and
lock
mov
nop
inc
add
pop
arpl
test
sub
jae
ss
pop
sbb
xchg
roll
cmp
adc
xor
lds
or
push
add
ss
mov
mov
push
xchg
ss
push
ret
mov
and
popa
dec
movsb
push
or
bound
add
out
push
in
xchg
jae
int
pop
push
mov
inc
movsl
lods
jns
or
test
or
das
mov
add
pusha
mov
xchg
ret
jg
pusha
sbb
mov
xorb
adc
and
mov
or
and
push
movsl
test
add
dec
stos
xorl
in
pop
test
xchg
sarb
push
sub
pop
adc
fisttpl
orb
jg
jbe
lea
cmp
subl
pop
outsl
add
pusha
add
sarb
add
pop
fs
loopne
dec
cs
inc
or
shl
or
pop
mov
fildl
fsts
adc
andl
clc
mov
adc
pop
mov
adc
mov
roll
sbb
movsb
or
pusha
adc
or
fstps
push
int3
jo
loope
and
rorl
jg
subl
mov
sbb
push
call
pop
cmp
fwait
out
or
or
lock
or
sbb
sub
pop
and
out
or
fwait
jmp
pop
jb
and
or
loop
ljmp
jge
xor
jl
cmp
adc
fidivs
adc
xor
mov
add
lcall
ljmp
shrb
push
test
cmc
arpl
mov
insb
loopne
inc
stos
ljmp
push
fsts
loopne
lcall
and
popa
mov
mov
and
pop
aam
repnz
adc
mov
shrb
fisttps
sbb
iret
add
mov
add
dec
jne
jecxz
fcomp
mov
jo
pop
adc
push
sbb
xchg
xlat
in
popa
xor
dec
bound
sar
test
adc
jecxz
ret
push
pop
pusha
mov
icebp
pop
xchg
popf
testl
pushl
add
lret
fisttps
dec
cwtl
adc
add
cmp
push
add
cltd
or
dec
cs
cmpsb
sbb
leave
lods
out
xchg
test
push
mov
test
add
adc
loopne
shl
out
lcall
fmuls
cs
lock
mov
ret
or
sahf
into
push
rolb
add
adc
in
outsl
cmp
stos
push
addl
aad
movsb
adc
add
out
fsubl
sbb
xchg
sti
imul
mov
jp
clc
add
insl
push
inc
jl
xchg
aam
add
mov
push
addb
shl
cmpsb
jecxz
filds
or
xor
es
clc
adc
or
adc
inc
add
cwtl
mov
addb
dec
push
xlat
cmc
mov
andl
imul
push
mov
int3
or
sbb
mov
hlt
test
orb
xor
add
mov
cs
add
adc
push
push
sub
sar
hlt
test
add
jle
pop
mov
or
fisubrs
or
xchg
inc
xor
add
adc
loope
rorb
aaa
enter
push
testb
test
add
inc
sbb
add
mov
inc
clc
inc
imulb
push
dec
mov
or
sahf
loope
sub
inc
dec
dec
push
filds
call
aam
adcl
lock
cmp
add
rcll
xchg
rorb
sbb
orb
filds
adc
xchg
jbe
addl
dec
adc
incb
lahf
and
dec
add
cld
addb
inc
sbb
dec
bound
ljmp
add
add
and
push
pop
xchg
jns
xor
xchg
ret
test
dec
shrl
addb
xor
xchg
ss
mov
mov
push
lret
inc
repnz
ljmp
fwait
jecxz
cmp
push
out
pop
mov
pop
cld
movb
fisubl
pop
hlt
xor
test
mov
mov
add
out
jge
test
insb
add
cs
dec
test
popf
rcll
mov
aam
mov
add
mov
and
dec
inc
or
mov
adc
scas
mov
sbbb
incl
bound
mov
and
nop
add
ret
add
lds
daa
mov
nop
aam
add
mov
adc
adc
xor
cld
sub
cli
mov
sub
test
inc
xor
add
push
enter
mov
or
mov
clc
cmp
mov
add
sub
dec
cmp
call
pop
adc
mov
dec
sub
rolb
and
mov
gs
and
addb
fadds
loopne
add
inc
sub
subb
ss
sub
inc
pop
test
or
popa
inc
js
shrl
or
inc
hlt
jnp
add
mov
fcomp
adc
jno
sub
fdiv
or
xchg
add
mov
fildll
and
orl
pushf
rorb
fldl
jg
or
dec
dec
subb
pushf
push
xchg
cmp
mov
jl
jge
pusha
and
xor
and
mov
inc
popa
and
inc
inc
adc
fsts
push
ja
add
or
loopne
lods
add
filds
outsl
xchg
sbb
or
push
push
and
dec
repnz
mov
and
jb
jbe
dec
push
push
sub
clc
incb
and
call
jg
lods
cmp
push
xchg
push
popa
adc
outsl
mov
add
jns
add
fidivrs
pop
les
mov
and
nop
mov
pop
xchg
je
subb
arpl
xchg
xor
rolb
push
sbb
and
add
loopne
and
inc
popa
test
mov
mov
subb
es
lds
mov
popa
pop
popa
push
cmc
jg
and
inc
xor
inc
addl
sub
jp
rcr
cltd
leave
in
das
mov
popa
xor
nop
xlat
loope
cmpsl
pushf
mov
mov
ja
clc
jmp
nop
add
pusha
or
and
fidivl
xchg
jle
loope
dec
and
fsubs
inc
arpl
push
es
add
loope
scas
aad
add
jp
mov
andl
pop
lods
cmp
pusha
je
stos
or
insb
add
test
lcall
dec
insb
jae
stos
test
or
lcall
mov
insb
inc
push
js
ja
mov
add
dec
pop
sti
add
add
testb
pusha
and
insb
add
mov
fs
es
sbb
pop
popa
xchg
mov
push
inc
ss
jne
xchg
sbb
add
mov
enter
lcall
adcb
add
mov
sub
add
add
addr16
jns
cld
test
inc
aam
and
lods
pop
stos
rolb
add
push
xchg
mov
mov
xor
stos
inc
xchg
loopne
pop
lcall
and
pusha
or
scas
xor
and
int3
popa
and
lds
fisttps
and
and
test
inc
pop
jl
rolb
cwtl
fcmovb
xor
push
and
mov
jbe
out
mov
jmp
or
in
xchg
loop
bound
in
sub
aad
or
cmp
inc
int
sub
pop
testb
mov
pop
icebp
or
bsr
xchg
pusha
add
pop
mov
or
shlb
dec
fcomp
adc
add
popa
ret
add
push
add
add
fdivs
sub
fiadds
xchg
sub
loopne
mov
fimuls
mov
ss
mov
pop
pop
rcrb
incl
and
add
jb
mov
add
leave
pusha
aam
add
push
inc
cld
fwait
ret
pop
inc
inc
push
mov
cmp
pop
fs
clc
adcb
dec
rcl
mov
ljmp
fs
std
mov
gs
push
xor
push
or
mov
cmp
jb
xor
mov
xor
dec
dec
add
cmpsl
in
push
pop
dec
and
dec
inc
and
ret
inc
jne
fsubrs
mov
sbb
pop
test
jmp
fs
shll
div
sub
jo
movsb
loope
xor
loope
jo
sub
adc
mov
outsl
adcb
pop
xchg
add
jecxz
pusha
aaa
rcrb
mov
xchg
add
xor
xor
and
cltd
mov
mov
dec
add
or
sbb
loop
pusha
sub
dec
jmp
push
addl
pop
sub
sub
loope
inc
cmp
sbb
leave
nop
sti
fcmovnu
sub
fadds
xor
dec
pusha
int3
jb
call
add
mov
xchg
outsb
call
mov
adc
add
inc
mov
jo
nop
inc
mov
adc
insl
ret
sbb
push
sbb
cli
or
or
cld
ja
xor
dec
addb
add
jns
mov
pop
inc
sub
pop
jg
mov
jo
fabs
mov
daa
stos
lea
xorl
lcall
add
lret
cmp
test
sti
jns
mov
arpl
add
adc
in
mov
add
popa
adc
jg
lds
loopne
pop
jno
push
arpl
enter
xchg
inc
lock
stos
lock
and
fisttps
add
dec
sbb
adc
xor
out
fucomi
jp
pusha
push
cmp
sbb
xor
fisubl
or
jo
dec
adc
add
jns
add
cmpsb
add
xchg
sub
fbld
jbe
popa
cld
adc
test
test
das
aam
in
negl
mov
loopne
dec
insb
mov
xor
mov
clc
fs
loope
jo
test
sbbl
aaa
mov
jo
xor
rcll
aam
sub
xor
and
mov
cwtl
loopne
pushf
cmp
xor
inc
mov
bound
decb
push
mov
xor
scas
add
insl
ljmp
xorb
ljmp
push
aad
jb
andl
ret
adcb
fsubrs
pop
and
out
dec
dec
mov
add
or
sbb
jne
stos
test
decl
arpl
andl
filds
mov
xor
les
and
xchg
popa
clc
pusha
pop
add
outsl
insl
jecxz
cld
xchg
inc
add
cld
inc
and
je
into
mov
push
out
xor
push
sbb
rolb
add
inc
ret
daa
add
pop
xor
sub
and
roll
nop
xchg
popa
sub
adc
sbb
ljmp
mov
add
lods
pusha
pop
sub
movzwl
es
add
call
cld
sub
add
loop
std
nop
addl
int
in
adc
icebp
lock
cli
ljmp
jno
xor
or
fwait
adc
mov
ret
xchg
lock
out
faddl
xchg
mov
xor
mov
movsb
sbb
loope
or
xor
push
lcall
enter
and
jns
roll
jg
inc
inc
adc
push
push
add
add
arpl
xchg
sub
in
and
mov
in
add
adc
lcall
add
sbb
xor
in
mov
in
fcmovu
imul
mov
inc
and
sub
subb
add
mov
jbe
and
adc
cld
mov
mov
sub
cwtl
sti
das
lcall
lea
mov
in
push
pusha
or
xor
sbb
shr
loopne
adc
loop
loopne
xchg
push
push
or
dec
inc
cmp
aaa
xor
ret
or
jo
xchg
rol
or
call
lock
es
mov
cmp
add
cmp
lea
lock
test
cmp
or
lock
pushf
and
sbb
or
mov
shll
gs
adc
shlb
jmp
xchg
dec
stos
dec
fnstenv
ftst
cmp
xor
repnz
lock
mov
sbb
adc
add
jnp
cmpsb
jbe
scas
mov
or
adc
pop
or
inc
pop
pop
mov
cmp
rcrb
mov
cli
mov
jno
lcall
mov
dec
int3
test
loopne
and
sarl
push
xor
mov
inc
hlt
fisubs
loope
cmp
mov
pop
ss
push
adc
or
adc
aam
push
sbb
and
adc
or
adc
add
lock
test
outsl
fwait
sbb
cmpsb
xor
pop
pusha
in
call
jno
in
add
cwtl
jecxz
adc
or
jo,pn
jo,pt
adc
shrl
lock
adc
mov
rcll
mov
aam
incl
xor
or
popf
fsubrs
xor
roll
ret
fcmovu
and
and
add
push
xchg
popa
push
sbb
or
dec
std
test
addb
sub
or
sbb
ficoms
jo
add
outsb
inc
adc
sub
hlt
push
fcomps
and
imul
call
add
mov
js
std
scas
fsts
mov
add
sub
pop
incl
out
add
ss
push
insb
add
inc
fcmovu
sbb
push
cmpsb
push
fdivs
bound
fdiv
jae
inc
adc
add
sarb
add
cmpsl
jmp
add
cmpsb
fldt
loope
testb
add
or
icebp
add
cld
mov
sub
mov
push
hlt
add
in
fs
into
lea
add
add
lods
xchg
test
lea
push
inc
xor
shlb
push
insb
sub
pop
mov
add
std
sub
jecxz
mov
bound
sub
popa
adc
or
sbbb
or
ljmp
xchg
jge
mov
fidivrl
or
add
lock
sbbl
bound
pop
sub
and
push
dec
mov
dec
inc
scas
jb
xor
negb
jb
lahf
mov
xchg
push
push
inc
add
xorb
add
decb
imul
cld
neg
popa
and
sbb
adc
pusha
out
and
push
loop
sbb
popa
jno
add
negb
arpl
adc
or
mov
adc
push
adc
add
test
add
xor
orb
push
push
cld
inc
ret
push
movsb
add
add
xor
push
adc
sub
es
mov
inc
xor
popa
sbb
or
add
sub
ret
add
cmpsl
pop
rclb
mov
mov
jb
dec
or
pusha
daa
sarb
mov
fwait
cmc
or
pop
add
inc
cs
idivb
pop
and
adc
xchg
sbb
lods
aas
add
aad
fisubrl
inc
push
out
pusha
mov
popa
pop
adc
test
lcall
mov
push
cld
xchg
dec
or
inc
or
std
inc
andb
sbb
xchg
fcmovb
dec
add
std
xchg
adcb
adc
cmc
ret
inc
add
push
mov
add
jp
push
and
sbbb
cmp
mov
insb
sbb
xchg
rolb
test
sbb
push
push
mov
jbe
push
out
aad
in
pusha
lods
xchg
call
imul
sub
fistpll
sbb
outsb
rorb
cmp
cwtl
or
inc
cld
pop
adc
mov
adc
fisttpl
xchg
rclb
cmpb
fiadds
int
adc
cli
and
es
sub
cmp
out
lea
filds
adc
lods
push
cmpsb
pop
jg
sub
mulb
jo
lock
popa
sub
inc
sbb
mov
inc
pusha
ljmp
mov
aas
cmp
fnop
daa
push
lret
push
test
add
dec
lods
dec
lock
push
cld
gs
ljmp
and
ja
clc
or
loope
test
gs
jle
xchg
add
xor
pusha
cmp
push
add
pop
mov
and
sahf
jle
mov
sub
movsb
dec
fisttps
dec
decl
dec
outsb
in
pop
loope
cltd
push
ljmp
cmpsb
fwait
imul
xchg
xchg
jnp
daa
ret
dec
xchg
cwtl
jecxz
ficompl
fwait
mov
scas
and
jecxz
add
sbb
leave
shl
or
mov
popa
add
add
adc
subb
pop
mov
pop
aam
and
xchg
push
rcll
add
lret
sti
enter
enter
mov
add
cli
cwtl
add
mov
shll
or
pop
jno
testl
pop
into
pop
mov
dec
adc
pusha
pop
pop
or
or
sbb
dec
cmpsb
push
adc
push
push
xor
sub
push
mov
push
adc
test
mov
dec
jecxz
sub
loope
shrb
test
lods
sub
imul
mov
incl
or
mov
cmp
jmp
mov
ss
pusha
sahf
inc
xchg
mov
xchg
dec
aam
mov
je
add
inc
shlb
jo
in
loopne
pop
fcomps
push
sbb
je
mov
sahf
cld
pop
inc
mov
in
and
fildll
xchg
pusha
dec
pop
and
inc
fwait
sbb
pop
cld
add
sahf
push
xorb
movsl
mov
adc
aas
arpl
outsl
and
jecxz
cmpsb
ret
push
loopne
ret
adc
and
fwait
push
add
dec
sub
sbb
add
push
and
scas
adcl
in
addl
ret
mov
mov
leave
mov
jp
inc
vhsubps
test
push
jbe
rorb
push
jbe
pop
lret
mov
lret
cmp
push
faddp
sbb
add
testb
sbb
add
add
pop
dec
mov
fninit
test
xchg
lcall
test
adc
inc
jmp
jecxz
pop
inc
jo
add
stos
sub
sarb
jo
mov
add
inc
mov
lods
and
incl
mov
das
cltd
mov
pusha
push
leave
popa
cs
fsubs
outsb
and
dec
movsb
pop
fwait
cmpl
or
mov
sub
or
mov
mov
movsl
rcrb
aam
add
popf
add
mov
mov
sub
pusha
and
ret
sbb
add
cmc
and
add
into
xor
and
fiadds
xchg
leave
push
inc
or
and
cltd
cmpsl
push
dec
push
push
inc
test
mov
or
fs
xchg
pusha
adc
lcall
mov
add
int
sbb
rolb
rcl
push
and
mov
pop
loope
stos
nop
push
fwait
pop
adc
loope
add
hlt
jg
cli
popl
adc
or
xchg
or
jp
cli
in
xchg
mov
lds
xchg
or
loope
loope
aad
stos
and
jno
adc
push
dec
aaa
std
incl
inc
add
pop
add
inc
and
int
add
hlt
mov
inc
and
mov
jbe
flds
or
sbb
mov
test
lret
test
or
loope
sbb
sbb
imul
cmc
lock
add
cmpsb
lcall
lock
and
loop
stos
inc
sbb
pushf
cmp
sbb
flds
pop
jg
mov
and
jo
adc
xor
and
or
fdivp
in
outsl
xor
bound
adc
sub
loop
jecxz
lock
inc
cld
push
adc
in
fwait
ja
add
push
add
cmp
hlt
or
dec
lock
cltd
lea
pop
sub
xor
push
in
sub
sbb
pop
xchg
or
test
popa
sti
mov
mov
loopne
or
sbb
add
call
add
std
jo
popa
std
mov
jmp
fbstp
sub
push
and
andl
fwait
imul
add
popa
mov
enter
rolb
or
data16
xchg
popa
gs
ljmp
push
and
mov
lock
lds
pop
loope
adc
jne
sub
push
xor
popa
mov
stos
xor
mov
push
cmp
sub
sbb
jp
cmp
xchg
or
push
push
sar
fbld
dec
xor
pusha
sub
adc
jge
lock
inc
add
lcall
aad
inc
aaa
rcrl
filds
or
jns
loopne
idiv
mov
sbb
push
mov
inc
ss
cld
jbe
outsb
push
add
sbb
adc
lea
test
es
add
mov
icebp
cmp
out
and
adc
pop
add
adc
add
pop
add
xchg
int
mov
cld
ja
test
xor
ds
rorb
call
cld
jo
mov
xor
lahf
popa
xor
lea
and
cli
ja
xchg
je
clc
add
jge
mov
mov
cld
out
dec
xor
lods
rcrb
mov
jg
mov
add
ss
loope
mov
fwait
shl
pusha
mov
add
popf
push
push
addb
iret
nop
or
sti
decl
xchg
testb
push
xchg
inc
or
es
pop
pop
dec
or
adc
insb
insl
imul
stos
nop
push
lods
iret
dec
mov
shl
cmpsl
adc
popf
test
pop
lock
lret
out
fmuls
and
sbb
sbb
sbb
sbb
rolb
repnz
int3
xor
jecxz
xor
into
cmp
inc
and
sahf
jbe
push
dec
stos
mov
dec
xorb
mov
xor
popa
jo
loopne
ret
xchg
push
dec
xchg
pop
movsl
add
negb
jle
popf
fs
popa
mov
mov
inc
xorb
mov
pusha
loope
lods
sbb
outsb
mov
mov
mov
sub
mov
pushf
push
xchg
mov
es
jb
ss
jl
fldt
es
data16
jns
or
adc
mov
loope
mov
insl
testb
sub
jecxz
add
jle
movsl
pop
push
jne
stos
add
adc
test
fstl
and
or
bound
adc
dec
bound
nop
xor
clc
mov
mul
push
add
add
mov
sbb
cld
shrb
xorb
inc
inc
jb
inc
inc
int3
push
lock
incl
popa
push
and
loopne
mov
cld
test
sbb
and
push
mov
cli
sub
adc
pop
mov
pop
gs
jge
lock
mov
scas
fidivl
inc
cmp
leave
lock
fsubl
add
xor
jo
mov
mov
add
xor
sub
into
mov
aam
mov
xor
scas
cmc
mov
pusha
mov
jae
xor
inc
push
sub
nop
sbb
mov
cmc
outsl
fiadds
push
and
gs
fwait
sub
or
mov
es
imul
sbb
inc
or
fs
or
roll
add
pop
js
rcl
rolb
rcr
mov
lods
popa
loopne
mov
mov
hlt
pop
add
mov
gs
sbb
cld
add
mov
push
adc
add
push
adc
test
lret
xor
pop
jbe
test
add
les
sbb
add
jns
xchg
inc
add
imul
rolb
mov
xchg
hlt
das
clc
call
popa
stos
popa
add
push
add
lock
pop
adc
add
arpl
out
jns
mov
jns
in
mov
std
mov
popa
js
addb
add
add
pop
adc
movb
inc
cmp
flds
cld
mov
stos
out
adc
xor
mov
loopne
xchg
lods
orb
adc
push
fwait
mov
fbld
mov
inc
jno
int
xchg
sbb
cld
inc
inc
push
rclb
push
in
push
jo
jg
mov
push
or
adc
imul
and
or
rolb
loopne
fcom
lock
mov
and
inc
es
add
loope
lret
test
fistl
mov
mov
add
jbe
mov
adc
xchg
jge
push
and
pop
test
hlt
lods
test
or
and
xorl
or
das
and
add
xlat
push
faddp
aas
mov
add
add
pop
les
mov
mov
sbb
push
adc
push
dec
aad
push
xchg
adc
xlat
lock
addb
iret
push
and
ja
jo
fnstenv
add
aad
js
fwait
or
dec
pushf
mov
add
add
jecxz
add
test
pop
lret
add
rolb
pop
dec
jbe
push
jge
std
nop
js
repnz
popf
dec
add
add
test
jbe
popa
xchg
sub
andb
push
and
icebp
test
pop
ret
push
imul
adc
push
jl
adc
sub
cmp
fabs
fdivl
ja
or
add
dec
mov
popa
minps
lods
push
jb
or
popa
lods
in
xchg
dec
mov
jecxz
cwtl
pop
loope
test
es
sbb
xchg
dec
jae
or
adc
or
or
pop
lock
add
sbb
cwtl
add
pop
sbb
jp
mov
push
pop
add
add
int
cmp
mov
sgdtl
push
imul
test
ljmp
mov
fcmovnu
rolb
in
roll
movl
xchg
les
jo
imul
lcall
or
icebp
pop
sub
xor
hlt
dec
mov
or
pop
rcll
fcmovnu
insb
add
xchg
inc
clc
ljmp
add
push
inc
fldt
fiaddl
lods
inc
push
jbe
inc
xchg
cmc
test
aam
incb
clc
dec
mov
outsl
add
push
ret
les
add
adcb
les
std
mov
mov
cld
gs
add
xorb
fisttps
call
mov
aam
sbb
cwtl
leave
rol
push
or
xchg
rcr
xor
lock
popa
test
je
push
bound
cmp
ret
and
fwait
or
mov
push
popa
inc
movsl
sbbb
movsl
cltd
jne
or
push
cmpsl
add
push
loop
mov
outsb
xchg
cwtl
pop
loope
and
sub
xchg
xor
xor
gs
sbb
shrb
sbb
into
inc
mov
and
daa
test
or
rcrb
aas
cmpb
jbe
dec
xor
push
add
xchg
add
inc
add
xchg
scas
push
rorb
adc
jbe
jge
mov
xchg
dec
add
dec
rcrb
popa
ljmp
andl
sarb
adc
and
jecxz
sbb
loopne
xchg
dec
or
pusha
stos
add
inc
mov
jl
inc
add
push
push
xchg
inc
pop
sub
inc
jne
and
std
mov
rolb
add
sub
xorb
addr16
pusha
jo
int3
cli
adc
adc
jmp
loope
xchg
cmpb
sbb
ss
loope
pop
sbb
jno
adc
cwtl
cmc
sbb
push
and
inc
xchg
fildll
xchg
rclb
flds
mov
cld
mov
inc
pop
mov
shl
adc
or
sub
std
adc
add
andl
fstpt
sub
push
lea
pop
cld
aad
subb
mov
and
dec
aam
cmp
out
pop
std
lcall
sub
test
and
and
mov
pop
andb
jge
push
mov
adc
adc
push
push
inc
xor
dec
or
idivb
arpl
in
call
add
inc
add
inc
sbb
jecxz
inc
and
and
mov
pop
mov
adc
xchg
jns
addl
call
sub
das
add
popa
stos
pusha
pop
mov
cld
inc
xchg
sbb
in
jnp
push
or
aaa
mov
mov
jecxz
push
jecxz
pushf
and
cmpsl
jno
mov
xchg
cmpsb
movsb
add
sbb
cli
xorl
cmpsl
dec
ss
rclb
xchg
dec
adc
jg
pusha
mov
xchg
cmpb
popa
andb
movsl
pushl
jbe
xorb
hlt
mov
dec
xchg
sar
or
xor
jbe
mov
aaa
cld
das
ljmp
mov
add
dec
cli
mov
lea
push
lcall
enter
cmc
pop
or
mov
icebp
incl
inc
inc
push
or
cld
adc
mov
inc
loopne
mov
bound
lret
loopne
or
inc
inc
lods
sbb
adcl
sarb
inc
fdivrl
dec
mov
shrl
xchg
inc
push
sub
jmp
cmp
movsb
jnp
inc
ret
test
out
add
movsl
xchg
fidivl
pop
hlt
into
xor
insl
cld
and
fwait
ret
outsb
sbb
in
loopne
pusha
sub
loopne
mov
add
out
pusha
mov
jl
adc
add
add
adc
inc
fnstcw
dec
xchg
stos
fbstp
dec
pushf
push
mov
cwtl
push
or
mov
cs
sbb
xchg
fisubs
incb
push
pop
adc
mov
ja
movsb
lock
and
inc
or
mov
inc
or
popa
sub
pop
rorb
or
sbb
add
aam
xor
sub
adc
mov
inc
adc
and
out
and
and
add
or
cmp
loop
jecxz
fsts
add
and
dec
add
into
jbe
sub
int
pop
xchg
add
movsl
push
or
add
lcall
fidivrl
mov
std
movb
mov
popa
div
imul
or
lods
ja
push
xchg
cmpsl
ss
fisubl
xor
std
call
and
mov
inc
mull
fwait
test
sub
mov
xchg
nop
and
add
mov
shrb
nop
add
cwtl
pusha
pop
add
add
popa
shr
and
sbb
cmpsb
fsts
adc
ret
pop
inc
rcl
push
sub
and
pusha
mov
jnp
mov
hlt
ret
jecxz
adc
cli
add
ds
add
cmp
inc
inc
sbb
xor
out
sbb
loop
lds
push
shrb
mov
jg
jo
flds
loope
icebp
daa
shlb
ds
mov
adc
outsl
repnz
jne
out
jecxz
rclb
clc
or
dec
and
and
jo
xchg
bound
jns
inc
aas
gs
push
push
and
fcom
ljmp
js
jae
push
xchg
or
mov
mov
jge
pusha
sub
pusha
sub
or
cmp
sti
dec
sub
lcall
rcll
enter
outsl
lock
clc
inc
mov
xchg
iret
in
ja
test
add
dec
mov
and
rclb
test
push
sbb
lods
jecxz
xchg
popa
xchg
loopne
adc
xor
shrl
sub
daa
mov
popa
xchg
pop
ja
xor
and
mov
push
mov
aaa
push
pop
mov
jno
sbb
mov
push
add
lods
adc
clc
jg
sub
nop
inc
xchg
push
add
cmp
in
cld
pushl
fiaddl
mov
lret
adc
add
ds
add
push
fbstp
fwait
pop
cmp
popa
lds
jno
add
test
mov
test
add
add
in
ja
daa
push
add
add
in
sub
dec
rclb
inc
add
xor
into
mov
fs
outsb
push
add
shrb
add
or
xchg
andb
lret
pusha
leave
mov
cmc
mov
clc
sbb
outsl
cmpsb
jno
pusha
inc
adc
adc
mov
incb
inc
loopne
mov
cltd
dec
or
scas
out
subb
jno
jl
lcall
sub
inc
fdivs
inc
inc
dec
test
pop
sarb
sub
or
inc
out
add
add
nop
lret
or
jg
add
inc
cmp
pop
fimuls
outsl
fiaddl
std
jbe
jo
cmp
icebp
inc
das
push
jmp
push
scas
movsb
sarb
ljmp
push
jae
rcrl
ljmp
or
or
inc
nop
adc
or
add
push
ret
cmpsb
stc
pop
or
mov
add
dec
xor
stos
rclb
sbb
sbb
mov
cmp
int3
pop
pop
add
orb
inc
or
mov
lcall
or
aas
and
add
stos
subb
aad
std
out
adcl
rclb
inc
ljmp
inc
adcl
shlb
mov
std
and
mov
push
addb
pusha
and
add
rcl
xchg
cmc
adc
push
mov
popa
xor
out
rclb
mull
cmpsl
lods
cmpsl
inc
int3
mov
loopne
lock
or
jo
or
xor
xor
fwait
jmp
sbb
outsb
andb
pop
arpl
insl
add
mov
scas
rorb
shlb
std
test
or
push
imul
mov
in
shlb
mov
rorl
mov
mov
addb
xor
rcl
cld
adc
jg
push
push
mov
jne
xor
fiaddl
enter
dec
loopne
pusha
dec
mov
xor
sbb
arpl
out
cmpsb
push
test
jno
jg
shlb
push
hlt
add
dec
mov
int
call
xchg
popa
and
test
xor
loope
mov
pop
shrb
roll
and
fcomp
call
int3
dec
fidivl
icebp
mov
push
add
push
mov
ljmp
dec
insl
jno
add
dec
loopne
add
xor
cmp
icebp
or
or
loopne
hlt
dec
mov
lods
cld
xchg
shlb
scas
xor
add
sbb
and
or
dec
jmp
mov
jb
inc
jno
push
xor
and
push
push
dec
xchg
lock
inc
stos
and
jle
out
loope
sbb
adc
adc
add
in
jg
outsl
sub
lcall
adc
push
mov
frstor
or
loope
push
xor
mov
pop
cmpb
icebp
outsl
aad
push
ja
push
xchg
push
mov
ljmp
adc
and
cltd
lock
les
test
andb
jb
sbb
lods
dec
mov
and
cvtps2pi
ds
rorl
and
shrb
lods
jno
pavgb
pusha
imul
rolb
or
push
jg
mov
icebp
inc
inc
adc
xor
inc
mov
inc
inc
movsl
jb
adc
sub
xor
cwtl
mov
add
jp
ss
outsb
jg
cltd
add
adc
xor
rclb
ja
mov
jg
enter
push
inc
add
add
push
adc
repz
pop
add
movsl
adc
sbb
bound
adc
dec
sbb
sub
and
fwait
orb
add
dec
jle
add
xorb
mov
daa
flds
daa
enter
das
test
or
and
cmpsb
mov
js
mov
sbb
or
sar
scas
inc
cmpsl
xchg
shll
sbb
sub
sub
mov
push
dec
std
sti
add
and
add
mov
sub
jae
add
orb
jecxz
add
roll
stos
and
xchg
mov
bound
add
fiadds
movsl
rcll
sbb
mov
and
popf
cmp
je
test
add
inc
imul
add
pop
mov
addr16
or
popf
popa
not
dec
add
cmp
xchg
enterw
xchg
add
enter
call
out
fcom
cli
pop
mov
xor
enter
xchg
inc
xchg
sbb
aaa
aam
mov
lea
add
nop
sub
les
add
dec
mov
or
add
dec
mov
add
mov
mov
add
or
push
std
scas
inc
and
loopne
inc
push
popl
cli
dec
xchg
in
dec
aam
inc
add
and
scas
addb
stos
addb
test
rcrl
fdivr
mov
inc
pop
xorb
fcmovu
ret
add
add
in
fdivl
and
push
or
pop
adc
push
add
sbb
loope
sbb
adc
adc
pop
sub
push
ret
imul
add
jo
inc
pop
sbb
add
add
ror
icebp
mov
cmp
mov
addb
mov
insl
aaa
push
pop
pushl
ret
test
shlb
and
xchg
jl
mov
ror
loope
adc
add
or
movsb
jg
mov
inc
add
js
add
push
push
cmp
lea
popf
add
rorl
test
aas
mov
lds
shrl
jne
inc
pop
cmpl
shrb
or
aad
adc
cmp
inc
pop
imul
test
and
decl
dec
cld
xchg
andl
sub
aaa
push
and
adc
repnz
push
mov
divb
inc
push
xchg
inc
inc
push
xor
xor
enter
or
xor
dec
add
cs
inc
and
popf
and
ret
jg
and
mov
pop
test
inc
pop
popa
and
je
xchg
adc
nop
shrb
rolb
adc
std
repz
inc
pushl
add
aam
movsb
xor
fmull
pop
subb
decl
jo
das
jo
outsl
cmp
nop
movsb
jbe
mov
and
movsb
loopne
xor
add
mov
pusha
cmpsl
dec
pop
xchg
loopne
pushf
add
add
data16
test
xchg
inc
outsl
xor
aad
mov
xlat
outsb
pusha
aam
popa
faddl
mov
push
fidivrl
push
inc
ss
fwait
mov
or
inc
add
add
push
std
into
push
sub
inc
cwtl
xchg
add
pop
lcall
addl
jecxz
adc
mov
loopne
add
ret
imul
and
and
popa
adcb
fistpll
imul
and
xchg
dec
fistps
rol
and
jne
imul
mov
shlb
add
add
lods
or
loopne
stos
and
xchg
mov
add
mov
sbb
adc
jle
cld
popa
pop
popa
jp
and
nop
pop
test
mov
pop
jb
out
mov
or
dec
andb
and
xchg
and
sub
jmp
rclb
lock
inc
call
mov
mov
call
inc
adc
addb
jns
subb
sub
add
add
adc
sarb
push
ficomps
jmp
dec
or
sub
xor
roll
fdivp
outsl
add
sub
add
fiadds
sub
call
xor
sub
hlt
jns
sbbl
loop
mov
pop
rcrb
loope
pop
or
lock
sub
pushf
jne
mov
xchg
fs
adc
cmpl
inc
add
popa
mov
sbb
mov
or
pusha
cmpsb
jg
popa
xchg
hlt
lods
stos
int3
or
jle
lea
inc
add
and
mov
or
add
mov
inc
leave
or
sbbb
or
mov
or
aad
inc
scas
and
sub
fsts
inc
sbb
adc
push
inc
clc
xchg
fisubl
fsts
fstps
fildl
outsb
mov
mov
clc
pop
pop
test
pop
and
sbb
cld
pop
xor
test
adc
stc
lock
add
loopne
xor
fists
mov
pop
pop
roll
pop
icebp
add
mov
mov
repz
xchg
negl
in
outsb
clc
jmp
sub
insl
push
push
shrb
adc
adc
or
adc
cmp
addl
subb
popa
aaa
inc
lcall
lods
xchg
sub
insl
adc
bound
adc
sbb
jno
push
popa
mov
fidivl
inc
iret
push
push
adc
mov
incb
add
jge
and
dec
jb
xchg
mov
clc
pushl
cmp
cmp
add
push
mov
sub
jb
xchg
shrl
stos
xchg
call
xchg
xchg
xor
mov
orl
adc
push
add
int3
and
cmc
movsb
or
into
mov
popa
mov
push
test
xor
incl
mov
cmc
mov
mov
xor
jg
and
push
outsl
pop
rcrb
lock
insl
add
or
lods
push
std
jmp
jge
loope
jp
and
dec
imul
xor
pusha
or
cmp
add
xor
test
popa
les
cs
enter
xor
insl
popa
mov
adc
and
adc
and
add
or
xor
push
sub
orl
pop
adc
inc
xor
mov
ret
xor
sbb
lret
xor
xor
and
nop
outsl
lds
push
add
fwait
sub
mov
or
cs
or
dec
sbb
movsb
xor
xor
xchg
loopne
stos
push
inc
fildl
adc
inc
xor
lock
jle
das
clc
mov
add
and
or
sbbb
popa
cld
cmp
in
mov
pop
push
jbe
cmp
rorb
nop
xchg
xchg
imul
fsubs
xor
lahf
adc
popa
add
xchg
in
cltd
fistpll
sub
adc
cld
notb
sbb
push
sbb
lcall
xor
jo
adc
push
sub
adc
fwait
xchg
and
popa
pop
bound
add
adc
mov
pop
mov
out
jne
ja
das
nop
inc
mov
push
dec
jne
sbb
jb
shl
pushl
scas
xor
loopne
sub
leave
xor
and
jno
or
cli
mov
inc
movsl
loope
sahf
movsl
jbe
cmp
xchg
xchg
loopne
sub
and
addb
add
mov
rolb
int
jl
js
je
popa
push
in
xchg
mov
push
and
and
inc
cld
pushl
and
adc
mov
int
subb
shll
int3
adc
rolb
mov
divb
or
push
roll
mov
adc
xchg
xor
lods
add
lock
test
or
add
add
mov
pop
xchg
or
in
mov
outsb
mov
jbe
add
dec
xchg
adc
add
test
mov
lods
pop
divl
int3
in
pop
add
rcrb
pop
mov
popf
push
fbstp
add
cmpsb
add
xchg
test
mov
add
gs
loopne
inc
push
mov
or
xor
clc
cmpsl
je
cmp
or
inc
add
pop
pop
rcrb
ss
movsl
xor
fldl
xchg
cwtd
or
cld
jno
fadds
in
nop
out
mov
xorb
lock
shr
cli
push
add
and
or
adc
cwtl
lock
lret
popa
loopne
cmp
lock
rcll
fcomip
icebp
int3
pusha
sbb
push
add
xchg
aad
fwait
int
lcall
es
sbb
pop
test
out
cmp
add
cmp
xchg
popa
lcall
lods
cmp
loopne
leave
popa
insl
cmp
mov
xor
adc
clc
xor
push
adc
xor
push
add
xchg
jno
leave
insl
into
fsub
push
in
cmp
dec
notb
sbb
sbb
sub
xor
inc
inc
mov
mov
inc
outsl
jmp
je
xor
inc
pop
mov
decl
inc
pop
sbb
and
and
fldenv
inc
xor
test
add
jo
jae
push
add
xor
cmp
mov
pop
xor
popa
adc
jp
and
ljmp
mov
push
mov
mov
mov
push
and
rorl
mov
jg
mov
push
jns
push
into
dec
push
cli
test
pop
movsb
xchg
push
push
imul
mov
or
mov
mov
faddl
inc
push
bound
je
xchg
sbb
jle
or
imul
out
sbb
icebp
insl
mov
xchg
or
rorb
popa
xlat
adc
and
pop
lock
repz
mov
jbe
out
sub
pop
popa
inc
pop
mov
xchg
jbe
xchg
rcrb
mov
or
sub
fcomps
mov
rolb
push
fdivs
inc
add
aam
and
xor
and
addl
shlb
int
popa
popa
xchg
cwtl
jg
mov
cmpsl
add
popa
inc
pop
lea
and
lock
dec
jo
push
out
out
iret
sub
incl
popa
loope
orb
icebp
jne
add
js
pop
aam
int
inc
fadd
mov
xor
adc
gs
testb
outsb
aam
mov
test
aas
or
jl
and
add
push
inc
xchg
filds
pop
or
pop
fmuls
xor
imul
cmp
add
sbb
xorb
xor
out
xorl
xor
andl
xor
fsubrl
jl
repz
xor
sub
xor
adc
xor
and
gs
mov
fistpll
cwtl
daa
xor
and
xor
add
in
cld
add
xor
cmp
ds
fs
js
jl
ja
xor
xor
add
xor
aaa
out
mov
inc
inc
adc
push
inc
dec
xor
add
mov
incl
or
dec
inc
mov
push
test
loope
inc
rcrb
inc
xor
test
stc
mov
mov
in
adc
pop
es
xor
hlt
inc
cmpsb
fnstcw
mov
sub
rcr
push
xor
jns
push
out
xor
or
xor
inc
cmp
imul
arpl
xor
cld
xor
push
push
loopne
fidivrs
xor
jg
adc
popa
scas
jae
cld
jns
mov
jne
mov
ja
push
add
data16
mov
add
lea
addr16
xor
sbb
scas
fcmovu
xorl
inc
pusha
inc
push
test
xchg
sub
sbb
xchg
cltd
dec
adcl
das
clc
adc
popf
xor
bound
lahf
xor
scas
add
xchg
shlb
out
xchg
cmp
lcall
dec
js
inc
add
hlt
in
fwait
jecxz
xor
mov
xor
xor
outsb
lcall
scas
push
sub
xor
les
inc
add
fistpl
jle
adc
cmpsl
xor
mov
add
int3
adc
add
mov
ss
lcall
xor
push
mov
add
and
mov
sub
enter
lret
or
decb
cmpsb
add
jecxz
shl
xchg
iret
xor
cmp
or
int3
inc
jo
int3
sahf
loop
aaa
insb
or
test
ret
cmp
xor
mov
fnstenv
sub
adc
orl
dec
sbb
lods
and
shll
loopne
mov
rcrb
aad
inc
arpl
adc
mov
jmp
jmp
inc
or
xor
mov
data16
test
jo
in
mov
nop
xor
ret
pop
repz
xor
pushf
out
and
stc
adc
sbb
outsb
sti
bound
push
std
rcrb
mov
xor
rorb
jle
jmp
test
or
pusha
dec
rorb
ja
cli
shll
mov
popf
jo
add
sub
scas
pop
orb
es
cs
dec
stos
lods
fsub
sub
push
aad
push
out
sbbb
mov
mov
out
or
mov
decb
adc
rclb
daa
clc
and
addb
jle
fcoml
and
pop
sbb
mov
stos
xchg
ficoms
ljmp
pop
pushf
andb
dec
push
aaa
sbb
cmpb
mov
inc
bound
in
and
add
orb
cmp
loopne
paddw
add
cmpb
add
adc
inc
mov
test
test
push
jp
pushf
push
mov
push
dec
jnp
enter
jg
shlb
loopne
loopne
push
pop
adc
adc
jmp
pusha
xor
add
xor
loopne
jmp
jle
or
xchg
or
or
pop
movsl
and
and
popa
mov
aaa
fnsave
imul
sbb
and
rcl
xchg
xchg
and
inc
ret
hlt
jge
test
xor
std
decl
push
mov
jbe
loop
mov
sbb
xor
pop
push
jno
cmpsb
outsl
incl
imul
js
insl
popa
es
pop
push
mov
jbe
ds
mov
jecxz
sub
push
push
scas
or
popa
hlt
mov
jno
aam
jp
or
mov
jb
daa
or
mov
cmc
repnz
sub
sub
or
popa
out
outsb
and
lret
std
ja
int3
lock
and
jno
push
add
lods
in
sbb
pusha
out
cmp
dec
jno
adc
fdivp
outsl
mov
into
mov
movsb
fiaddl
adc
or
ret
stos
loopne
and
outsl
sbb
push
xor
inc
jbe
cld
xchg
mov
and
jge
jo
and
fs
jbe
push
popa
cmp
add
cld
mov
aam
pop
push
jae
mov
push
add
inc
fadd
decl
inc
and
mov
mov
in
jge
ror
ja
lcall
mov
xor
push
push
sub
jle
aad
push
or
push
ljmp
xor
ffreep
add
dec
adc
add
add
jbe
add
push
lea
or
xor
inc
and
jbe
sub
and
testb
add
gs
pop
jne
add
adc
adc
shlb
popa
outsb
std
cmp
mov
std
stos
inc
adc
and
test
lock
jae
xchg
mov
inc
dec
test
push
add
dec
xchg
ss
pop
jle
push
add
incb
jmp
jge
adcl
and
inc
adc
jle
hlt
push
loopne
jne
popa
mov
push
add
push
cmp
gs
data16
pop
jge
add
jl
add
push
adc
add
xchg
add
cmp
or
bound
ss
dec
lret
dec
test
hlt
inc
cmp
or
add
pusha
sub
or
sti
mov
mov
mov
rorb
sub
mov
cltd
js
fiaddl
dec
loopnew
ret
dec
bound
xor
pop
and
scas
test
add
or
or
mov
push
adc
ficoms
cwtl
adc
push
cld
adc
loope
subl
or
inc
fsubs
repz
mov
jge
pusha
push
andl
push
push
push
aad
mov
push
sar
jl
add
ss
repnz
and
xor
imul
or
add
cld
push
dec
inc
clc
lcall
xor
add
stc
nop
sahf
mov
inc
sarl
fiaddl
mov
loope
lods
xchg
add
pop
xchg
shlb
mov
push
cli
cmp
cld
std
imul
mov
bound
leave
push
dec
lock
cli
push
mov
add
xchg
inc
mov
or
mov
test
or
push
shl
adc
rcrb
lcall
mov
insb
pushf
fnsave
adcb
js
mov
add
test
leave
js
and
sub
in
pop
mov
mov
and
jne
icebp
sbb
adc
jle
xor
cmp
pushf
bound
inc
dec
call
lods
pushf
ss
bound
mov
shrb
mov
and
mov
add
cmpsb
jo
lods
add
std
adc
or
jl
cld
insl
loop
inc
add
pop
popa
adcb
xor
insb
xor
sub
jg
loope
and
sbb
pusha
lods
sahf
fwait
test
or
add
adc
xor
mov
fld
mov
cs
add
adc
mov
mov
std
pop
mov
ljmp
mov
dec
mov
shrl
add
pushf
popf
mov
adc
sbb
inc
add
cwtl
cli
cmpsb
xchg
test
pop
or
sbb
inc
aam
xchg
lret
push
enter
sbb
pop
add
sub
mov
pusha
shll
xor
mov
shll
icebp
pusha
std
mov
lods
lods
mov
dec
push
xor
rolb
mov
adc
push
or
sub
adc
cmpsb
push
add
lock
dec
loop
es
test
movsb
mov
clc
push
add
dec
ljmp
mov
shr
ljmp
xchg
test
test
push
xchg
mov
ret
or
adc
jg
fisubl
enter
aaa
adc
sbb
rclb
fs
incl
push
ds
push
add
mov
jecxz
and
or
add
lcall
sbb
mov
inc
and
jg
insl
adc
add
scas
sub
ss
xchg
sub
in
loope
add
fcom
fidivrl
sbb
and
push
cwtl
xor
sub
push
mov
push
sub
pop
nop
add
sbb
dec
push
loopne
mov
lea
or
scas
cmpsb
out
sti
pop
xchg
jle
fcoml
cld
or
adc
and
adc
sub
cld
dec
adc
roll
xor
mov
into
adc
adc
inc
mov
adc
push
rcll
mov
mov
insb
ret
adc
adc
mov
mov
shrl
test
mov
lds
test
add
scas
js
mov
xor
sub
popa
ror
dec
pusha
cld
fisttps
orl
sbb
call
mov
sbbl
pusha
add
daa
cltd
arpl
or
push
pop
add
shlb
pop
adc
outsb
fidivl
arpl
fbld
loopne
inc
adc
or
cmp
fwait
add
mov
add
push
xchg
shlb
or
mov
shlb
add
popa
add
inc
push
push
adc
popa
sub
imull
mov
shlb
sbb
add
js
pop
lock
lock
fildl
or
or
dec
es
pusha
or
mov
sahf
mov
jecxz
ja
divl
orb
cmc
mov
sarl
mov
loopne
cli
cmp
push
fisubl
cld
jne
xor
add
ds
and
sbb
fisubrl
mov
add
xchg
cmp
dec
sbb
adc
cmp
cwtl
rcrb
insb
cld
cmp
mov
and
xor
mov
sbb
fldcw
or
jb
mov
adc
inc
jo
mov
pusha
mov
call
icebp
jns
mov
icebp
inc
add
jbe
hlt
dec
mov
xchg
cltd
xchg
adc
jnp
mov
mov
push
gs
lds
dec
ret
or
jo
cld
jbe
mov
or
movsb
jp
and
subl
das
add
add
inc
inc
push
push
pop
popa
frstor
dec
lea
pop
fwait
add
jmp
jecxz
xchg
xchg
xchg
popa
mov
sahf
dec
dec
adc
or
mov
sub
pop
xchg
pop
or
imul
pop
inc
cmpsl
lock
adc
dec
es
fadds
xchg
sarb
push
stos
and
imul
xchg
rolb
or
adc
mov
xchg
cmp
rcr
repz
mov
push
adcb
mov
iret
js
adcb
mov
mov
pop
test
or
adcb
sbb
test
fmul
addb
mov
cmpsb
in
andl
popa
jns
jecxz
loope
sbb
sbb
add
inc
adc
inc
lds
leave
adc
inc
or
pop
and
outsb
jno
sarb
mov
or
adcb
dec
loopne
ficoml
dec
inc
mov
je
bound
shlb
adc
mov
adcl
inc
adc
sbbb
adc
mov
fcoml
mov
dec
pop
sub
or
mov
or
fwait
add
sbb
mov
xchg
call
dec
jle
xchg
decb
aam
cmc
popa
mov
subb
lahf
or
lret
rol
arpl
adc
stos
add
xor
dec
ljmp
lret
ret
iret
dec
sbb
sub
add
jo
add
push
int3
and
loop
leave
jo
add
jno
xor
pop
mov
sbb
jp
inc
mov
adcl
mov
cld
loope
stc
mov
jg
lock
push
sar
adc
inc
push
add
pop
inc
repz
push
cmp
xchg
inc
inc
bound
rorb
andb
add
sbb
cli
sub
add
dec
imul
ret
pop
add
pusha
cld
fildll
sub
add
or
sbbl
cli
insb
xlat
sbb
add
popf
push
cs
faddl
sbbl
repnz
in
or
add
mov
xor
push
lock
mov
adc
mov
pop
sbb
mov
inc
bound
fadds
add
data16
bound
sbb
addl
jl
das
sub
jle
js
bound
adc
negb
shlb
xchg
or
pusha
xchg
pop
dec
sub
and
mov
or
je
mov
out
push
add
movsb
xchg
addb
cmc
out
inc
add
jecxz
jle
jbe
fisubs
int3
lret
mov
push
xchg
mov
pusha
push
movsb
mov
push
add
cld
dec
pusha
test
add
cmc
sbb
iret
mov
js
jnp
inc
dec
jle
insl
addb
add
inc
sub
pop
or
sbb
xchg
push
and
bound
jmp
mov
sub
enter
mov
bound
out
pop
and
lea
stos
add
cs
scas
into
add
add
or
decl
inc
mov
je
mov
or
lret
dec
call
shrb
hlt
mov
std
fildll
push
inc
xor
cltd
mov
popf
push
add
mov
data16
push
pop
test
lret
adc
lcall
js
xlat
or
test
negb
mov
sub
rolb
or
pop
mov
fimull
jne
subb
xchg
popa
das
cli
add
jg
cltd
sbb
pusha
adc
push
or
mov
cwtl
outsb
rolb
inc
loopne
jbe
xchg
dec
neg
mov
lahf
add
add
ja
cli
pop
mov
mov
cmc
arpl
mov
std
fcomi
roll
push
jg
popf
dec
mov
mov
rol
gs
call
movsl
xchg
lock
popa
cmp
ret
push
and
xchg
add
mov
mov
adc
stos
xchg
imulb
loopne
std
hlt
inc
test
mov
scas
bound
es
daa
stos
jnp
mov
xor
or
push
daa
mov
adcl
xlat
in
xor
or
ss
outsb
add
push
rorl
loopne
stos
cld
sahf
test
das
lret
test
and
xchg
in
notb
cld
mov
mov
sti
arpl
jb
jno
pushf
mov
dec
ret
and
jbe
ret
adc
xchg
arpl
mov
mov
adc
pushf
mov
in
sub
jae
or
je
sub
cmp
pop
gs
inc
sbb
pop
add
mov
pushl
and
inc
inc
and
sbb
sbb
rcr
fdivrl
inc
pusha
call
rolb
mov
shlb
add
inc
add
cmp
insl
popa
add
arpl
jb
fsubrs
xor
outsb
push
punpckldq
pop
cwtl
add
mov
mov
mov
in
push
and
pop
std
and
cmp
fistpll
push
mov
mov
push
xchg
mov
push
and
lret
movsl
cmp
push
pop
fcoml
lcall
inc
inc
pop
mov
pop
popf
daa
add
in
orl
fidivl
inc
fisubrs
cld
jno,pt
sbb
xchg
mov
xor
dec
inc
add
adc
or
lods
push
lcall
std
nop
clc
jg
push
sbb
adc
test
dec
xor
inc
aaa
push
jnp
pop
pop
outsb
dec
popa
and
sbb
adc
fildll
add
or
jl
ficompl
add
movsl
mov
ljmp
sub
xor
mull
or
mov
lret
xchg
sbbb
pop
adc
add
mov
adc
sub
test
xchg
call
cmc
aam
sub
test
movsb
pushl
outsl
popf
loopne
pusha
add
fisubs
or
and
es
xchg
sub
mov
loop
cmpsb
mov
push
inc
mov
jmp
shrb
iret
and
popf
mov
sub
bound
ss
push
pop
subl
in
shr
push
mov
cld
test
adc
inc
andb
mov
push
mov
dec
xchg
jb
fs
cmc
bound
aas
pushf
xchg
dec
add
dec
or
adc
es
jmp
xlat
nop
or
sbb
rorl
jg
or
adc
sbb
or
in
push
mov
xor
mov
std
fcmovnbe
dec
incl
mov
lret
add
test
add
jg
data16
add
adc
ds
xchg
mov
inc
or
pop
xchg
bound
lds
inc
std
test
addr16
add
cld
jl
mov
sbb
cmpsb
data16
nop
xor
mov
jecxz
pushf
jns
cltd
mov
add
lock
pop
out
aad
adcl
dec
push
fucomip
adc
rorl
mov
flds
fcmovnu
mov
adc
mov
ja
pop
xchg
inc
rol
inc
adc
cmpsb
jmp
bound
push
js
push
in
es
mov
and
cmc
insl
aad
xor
roll
nop
fildl
push
popf
dec
int
fistps
xchg
add
nop
add
lea
push
test
and
push
lock
das
fcoms
xchg
fidivs
or
xor
inc
sarb
inc
push
aad
cli
test
mov
roll
dec
lds
mov
xchg
pop
aam
adcl
fs
push
lods
pusha
ja
scas
adc
adc
les
add
incl
dec
push
add
mov
jb
jnp
add
loopne
fdiv
push
add
cld
pop
mov
mov
push
add
pop
add
or
stos
and
mov
sarb
and
rcrb
enter
jle
add
xor
or
popl
dec
cwtl
cmp
mov
test
call
dec
test
dec
jo
dec
addb
adc
mov
dec
lock
or
adcl
mov
nop
add
in
rcll
ljmp
leave
add
icebp
pusha
add
or
std
jnp
pop
lock
and
jo
ss
pop
pop
mov
xor
outsb
repnz
lock
stos
std
cwtl
cwtl
scas
scas
adc
std
std
mov
adcb
sarb
rolb
mov
and
roll
inc
inc
sub
add
dec
push
cmpsb
pushf
or
pop
and
mov
cld
sub
cli
lea
std
andb
mov
cli
test
test
loopne
push
or
inc
enter
or
imul
iret
xchg
cltd
fidivs
mov
sbb
inc
mov
gs
mov
xlat
cltd
ljmp
mov
int3
push
adc
adc
popa
aaa
lock
dec
or
ljmp
cltd
sti
push
jg
in
push
mov
add
sbb
xchg
pop
add
mov
mov
popf
les
mov
sbb
add
mov
mov
dec
inc
adc
xorb
daa
loopne
loop
sub
xlat
mov
add
pop
insl
mov
cmp
rcrb
xchg
mov
inc
mov
sbb
or
ret
jg
jle
decb
add
mov
or
rcrb
sub
inc
lcall
fwait
inc
int3
jo
push
jo
add
adc
std
mov
mov
stos
or
rcr
jg
adc
and
cltd
mov
mov
aad
inc
inc
mov
mov
inc
mov
inc
sbbl
cmpsb
stos
or
add
or
sahf
mov
mov
pop
mov
or
mov
mov
clc
rorb
add
test
scas
mov
xchg
push
orb
pop
xlat
addl
aam
add
lea
sub
scas
jg
nop
aaa
or
pusha
cmp
push
or
movsb
adc
push
int3
pop
mov
fiaddl
call
sbb
sbb
cli
sbb
add
pop
pusha
sub
mov
jb
mov
aad
test
mov
or
mov
inc
xor
or
push
ss
adc
fwait
mov
incl
xchg
nop
lods
add
jp
fisubs
jg
push
or
bound
mov
mov
movsl
and
lock
lods
dec
adc
test
mov
or
scas
add
mov
dec
mov
sub
idivb
sbbb
jecxz
add
mov
jecxz
jno
fcmovnb
add
push
loop
and
adc
sarb
mov
decl
ja
clc
scas
sahf
add
mov
mov
sti
lcall
std
iret
mov
sti
add
rorb
mov
cld
fldl
mov
mov
and
pusha
mov
mov
bound
lcall
int3
push
pop
and
adc
cli
dec
gs
cmp
sti
adc
je
add
cld
sbbb
xchg
pushf
add
mov
bound
add
lds
push
push
fwait
add
cltd
outsb
insb
ret
dec
mov
daa
dec
orl
xor
pop
sbb
cld
testb
push
cmp
insb
xchg
cmpsb
andb
xchg
rclb
jne
call
dec
sbb
mov
popa
fadd
xor
pop
fimull
stos
es
push
nop
int3
out
rcrb
cld
add
aad
and
xchg
js
jecxz
ds
outsb
push
call
nop
mov
adcb
push
mov
int3
int3
inc
mov
jne
xchg
idiv
push
inc
inc
or
fildl
inc
add
or
sbbb
orb
pop
and
and
mov
mov
int
jg
movsl
mov
sub
jo
add
movsb
cmpsl
sub
add
sub
mov
subl
inc
cmpsb
dec
add
pop
inc
les
and
inc
lret
and
mov
mov
xchg
add
popa
xor
loopne
xchg
mov
mov
fs
sub
test
jbe
outsl
inc
mov
jbe
ljmp
add
push
mov
mov
push
mov
in
add
fmuls
inc
jbe
xchg
mov
push
mov
inc
les
je
or
pop
sti
data16
mov
add
cmp
add
mov
inc
add
es
dec
movsl
movsl
bound
mov
or
mov
pop
hlt
data16
int3
mov
addb
mov
cmpb
lret
aam
js
adc
mov
mov
cmp
adcl
and
pop
add
dec
xor
cs
out
add
adc
bound
shll
add
or
jl
xor
fisubrs
inc
pop
pusha
cld
mov
inc
push
popa
adc
sbb
mov
mov
dec
sar
adc
dec
mov
add
xchg
rolb
xchg
xor
lock
cli
dec
test
sub
fildl
scas
sub
adc
or
dec
inc
outsb
inc
int
popa
mov
push
xor
jecxz
mov
sbb
mov
jle
push
mov
cmp
xchg
cmc
xor
inc
addb
scas
add
dec
popa
mov
clc
cmpb
xor
cld
test
sbb
or
mov
bound
iret
fbstp
push
inc
movsb
filds
xor
lret
push
adc
add
fwait
ret
push
jb
cli
inc
icebp
sbb
aaa
xchg
sub
sbb
jg
fidivl
adc
xchg
psrld
mov
add
adc
jo
inc
rcrb
push
nop
xchg
popa
or
gs
fs
cld
cwtl
inc
daa
dec
jb
xchg
and
add
pop
pop
test
dec
or
fisttpl
add
popf
dec
call
push
test
sbb
stos
inc
sbb
test
mov
aam
fisubl
or
xchg
fiaddl
mov
test
dec
xor
and
pop
mov
push
mov
or
add
and
pop
xchg
push
adc
jb
lea
add
fdivrs
push
pusha
dec
and
addr16
test
add
push
mov
add
lock
add
or
sar
sar
gs
adc
or
cmp
cmc
divb
rcrb
pusha
addl
out
xchg
lret
ret
mov
clc
or
add
xchg
ljmp
test
pusha
test
lret
add
and
addl
lock
mov
add
cltd
jmp
add
ret
add
jle
mov
push
mov
adc
and
jge
jns
cmpsb
hlt
ret
pop
sbb
and
cmp
mov
inc
ja
add
lds
inc
mov
cwtl
into
leave
and
dec
ret
dec
add
loope
cld
aaa
cmpb
aam
gs
pop
jl
mov
pop
push
std
push
mov
inc
test
enter
lcall
inc
repnz
mov
jae
mov
cmc
cmpsb
stc
xchg
enter
test
push
scas
or
add
sub
ret
inc
push
jl
and
lock
push
adc
scas
push
movsb
add
cmpsb
add
cs
movsb
adc
cmp
or
inc
add
pop
cli
or
or
leave
in
dec
clc
cli
add
test
in
jp
push
inc
imul
movsb
or
xchg
adc
cmp
xchg
add
mov
mov
mov
orb
xorl
inc
cld
aaa
add
jno
sub
into
or
popf
or
test
andl
out
mov
pop
push
mov
cld
nop
stos
mov
and
mov
int3
sub
sub
ret
cli
movsb
sbb
pop
and
xor
sub
inc
push
lret
int3
push
adc
or
adc
decb
inc
lods
imul
inc
sub
loopne
or
push
fisubs
lods
pushf
xor
pop
cld
fadds
push
xchg
dec
push
and
pop
or
mov
sub
add
bound
add
movb
or
fdivrl
and
dec
imull
inc
lahf
sbb
or
bound
inc
shlb
push
aam
xor
lcall
roll
leave
mov
mov
mov
test
push
cmpb
pop
add
pop
cmpsl
mov
shrb
sti
jmp
add
jo
push
xchg
mov
add
xchg
jg
adc
lea
sbb
test
and
fdiv
dec
loopne
rcr
lret
jae
cmpsb
enter
add
popa
repnz
push
jl
scas
adc
sbb
mov
push
xor
dec
inc
push
or
in
dec
mov
push
sbb
std
test
lcall
test
and
push
inc
push
cwtl
bound
mov
or
lcall
and
daa
or
cld
lcall
mov
test
mov
ss
popa
mov
pop
sub
outsb
jle
dec
int3
pusha
xor
sbb
mov
sbb
ret
jbe
pusha
push
cli
popa
jmp
xor
in
cs
into
mov
mov
cmp
test
pop
add
sub
add
movsb
out
pop
push
xor
rorb
fsubrp
push
push
sbb
mov
inc
inc
pusha
lea
ret
fwait
xorb
mov
pusha
sbb
push
xor
mov
lock
imul
les
and
adc
xor
movsl
xor
fwait
mov
ja
sahf
lcall
js
sub
mov
ret
and
add
dec
rclb
sahf
xchg
mov
pop
dec
popa
test
mov
mov
push
sbb
mov
dec
cmpsb
scas
sbb
mov
ficoms
push
data16
rcrb
lods
fsub
add
call
add
mov
and
test
mov
popa
pop
data16
adc
dec
xchg
dec
jle
leave
cmc
jmp
lods
and
loopne
and
in
mov
push
push
and
adc
mov
sarb
or
pop
imul
jo
cmpsb
jno
mov
and
fdivs
orb
filds
addb
loopne
lock
fmull
lods
and
mov
movsb
sbb
add
outsl
mov
sub
and
inc
push
inc
adc
xor
mov
cmp
jo
push
dec
sti
add
adc
and
mov
cmc
scas
iret
inc
or
or
push
inc
enter
std
push
or
and
and
mov
das
jbe
adc
mov
popa
lods
subl
ja
bound
xor
mov
jge
out
into
lods
or
hlt
aaa
addl
add
mov
popa
push
lods
jbe
sbb
pop
mov
and
lock
std
outsl
test
adc
pop
loope
stc
push
cltd
push
cmp
pusha
das
xor
ss
mov
sub
sti
mov
mov
dec
sti
mov
js
cmpsb
add
push
jbe
sbbl
sbb
test
call
lock
pop
outsb
ja
inc
mov
in
test
inc
mov
repnz
gs
sbb
mov
nop
pop
clc
mov
and
mov
mov
daa
jns
pop
dec
or
xchg
inc
icebp
out
sub
and
push
sbb
mov
mov
mov
mov
sub
lock
insb
leave
std
divb
mov
rcll
add
add
adcb
or
fisubl
jle
push
repnz
add
push
jbe
mov
popa
sti
push
insb
mov
rcrl
push
mov
subl
cli
cmp
dec
insl
fsts
inc
dec
nop
add
fs
les
lods
and
popf
es
add
cmpl
cmp
bound
loopne
adc
inc
adc
mov
ja
mov
or
xchg
sub
mov
xor
rorb
jo
dec
rcrb
push
loopne
sar
shll
rorl
or
lock
es
xchg
scas
ja
shrb
push
adc
popa
daa
stos
cli
push
jmp
xor
iret
repz
mov
nop
push
pusha
dec
test
jg
daa
std
lea
dec
pop
fbstp
xchg
bound
push
adc
mov
es
jg
and
mov
add
into
test
mov
xor
fiaddl
cltd
nop
movsl
int3
aam
gs
and
out
inc
shll
dec
iret
mov
mov
push
sub
or
inc
ljmp
pop
inc
and
mov
ret
gs
push
fs
rcrl
mov
das
add
inc
loopne
adc
push
ljmp
jecxz
loope
mov
sub
xor
fs
mov
or
jo
lock
xor
push
xor
adc
clc
cmp
adc
or
mov
xchg
hlt
invlpg
cmp
lcall
xor
popa
or
mov
or
mov
movsb
jne
icebp
popa
jge
adc
enter
test
xorb
test
sub
bound
and
pop
or
xchg
xchg
lcall
pusha
xlat
mov
in
stos
clc
pop
test
sbbb
nop
cs
inc
repnz
into
inc
rorb
xchg
sbb
mov
addr16
call
ljmp
pop
sahf
dec
enter
inc
pop
or
lods
popa
add
push
jno,pn
mov
adc
adc
push
pusha
mov
test
dec
sti
add
pusha
mov
stos
scas
cld
mov
adc
addl
test
and
pop
stos
mov
loop
xor
loopne
pushf
add
mov
lret
adc
cmp
add
mov
adc
xchg
movsb
dec
insl
ret
cmp
sub
add
dec
sub
fwait
jp
mov
inc
cmp
cmp
push
adc
add
xchg
inc
mov
cs
shrl
aad
mov
inc
or
rol
sbb
hlt
add
insl
ficoms
xor
mov
out
popa
xchg
or
or
aam
fisubrl
outsl
outsl
push
in
push
xor
out
adc
adc
sub
push
adc
icebp
jecxz
test
pop
push
movsb
cmp
jbe
lahf
cmpsb
push
adc
sbb
rclb
xor
call
sub
daa
in
dec
int
inc
cld
mov
xor
ljmp
loopne
and
neg
rcr
dec
aas
sub
bound
push
push
lock
inc
or
cld
lods
lret
pop
add
int
ss
loopne
fldl
jmp
mov
lcall
jo
incb
xor
pop
mov
jl
sahf
leave
adc
cld
mov
cmp
adc
push
mov
add
adc
mov
nop
rorl
add
divb
xchg
icebp
pop
inc
mov
inc
jge
js
mov
ret
push
add
inc
pop
dec
cmc
dec
mov
stos
mov
add
inc
xchg
add
add
push
fldt
mov
push
mov
pusha
aaa
call
jbe
mov
cld
cs
jg
lret
add
mov
sbb
imul
int3
add
jne
xor
or
jp
sbb
or
mov
sub
cltd
mov
je
push
push
rolb
push
loop
and
dec
xchg
add
push
inc
or
adc
inc
pop
jb
pop
testb
fwait
sbb
cmp
adc
or
xchg
ja
les
mov
inc
ja,pt
mov
lods
repnz
mov
call
xchg
inc
test
add
xor
add
fwait
sbb
jo
out
add
gs
incl
push
mov
mov
add
add
ret
or
mov
and
mov
iret
mov
cs
add
call
in
dec
jl
pop
adc
add
dec
jno
stos
inc
cltd
fs
inc
out
test
add
xchg
and
xor
add
jp
mov
mov
mov
popl
push
cld
fisttps
dec
popl
jae
data16
dec
or
cmp
inc
xor
imul
rcrb
subb
test
pusha
sbb
sbb
and
mov
push
ret
mov
jne
push
or
mov
das
push
enter
lcall
cli
push
jmp
or
gs
movsl
mov
cwtl
adc
add
cmp
inc
adc
cli
popf
mov
mov
dec
popa
sbb
pop
and
pop
inc
sub
mov
cli
xor
adc
add
xchg
leave
aam
xor
xorb
outsb
add
or
mov
xchg
mov
xorb
fcmovnu
dec
cmpsb
pop
in
sub
or
popa
std
rorl
das
adc
adc
cld
cld
jg
mov
dec
fdiv
jb
cltd
mov
adc
rorb
cmp
data16
adc
rolb
or
cmp
pop
xchg
je
mov
xchg
sbb
xchg
fiadds
xchg
inc
jnp
orb
movb
mov
inc
loopne
dec
orb
or
cld
inc
popa
or
add
jp
insb
xor
sbb
inc
mov
mov
mov
rclb
notl
sbb
jmp
add
jo
popa
idivl
fcmovb
aaa
mov
or
cltd
push
shrb
data16
add
test
nop
cmp
into
add
loopne,pn
dec
pop
add
mov
add
push
add
orb
jne
push
cmp
push
test
orb
mov
or
jle
xchg
inc
add
cmpsb
clc
or
or
mulb
lcall
lock
lret
dec
or
xchg
jecxz
xor
into
jl,pt
or
jl
je
mov
add
and
push
popa
or
add
or
xor
mov
std
mov
int3
lea
les
inc
cmp
add
jbe
pop
jbe
dec
dec
ret
ds
lret
jo
sub
push
and
lods
loop
hlt
and
bound
pop
cmp
or
add
jge
xchg
js
jge
and
xchg
or
cwtl
mov
jp
into
mov
and
inc
jne
sbb
outsl
xorl
loope
mov
loopne
inc
adcb
loopne
mov
add
sub
dec
scas
push
add
insl
fadds
fs
shlb
and
pop
push
test
mov
mov
roll
mov
sub
mov
movsb
and
xchg
aam
inc
jle
push
imul
adc
out
xchg
std
in
je
and
test
fnstenv
lcall
add
pop
jno
test
fsubl
pusha
or
xchg
sbb
push
cmp
adc
push
jb
cli
push
add
mov
xor
mov
das
ds
mov
or
les
dec
xlat
jle
jp
loop
es
sbbb
add
loop
and
imul
adc
and
popa
sub
insb
test
cmpsb
adc
popa
sbb
dec
js
pop
lea
add
adc
cltd
popa
cmc
fidivrs
inc
ja
es
jg
pushl
sub
popa
inc
shrb
cld
jl
or
mov
xchg
mov
xchg
enter
mov
hlt
sbb
popa
cli
and
cmp
fs
add
mov
add
insb
pop
movb
mov
fisubrs
mov
loopne
inc
imul
adc
std
xchg
push
or
popa
mov
orl
loopne
mov
lahf
or
rclb
mov
scas
dec
ret
push
mov
lret
add
and
stos
incl
adc
loope
filds
mov
mov
and
or
outsl
rorb
loopne
cmp
or
dec
shrb
jmp
inc
pusha
mov
mov
xchg
adcb
inc
mov
out
jecxz
cmp
xchg
add
or
ljmp
or
inc
dec
adc
dec
dec
test
loopne
lds
pushf
add
rorb
mov
dec
inc
sahf
inc
sbb
xor
rcrb
mov
or
inc
add
loopne
sbb
jle
repnz
xorb
xchg
pop
in
and
aaa
movsl
jge
inc
dec
fs
notb
cmp
cld
cmp
sub
sub
popa
pop
and
fadds
sub
mov
addb
enter
push
jno
mov
xor
jg
in
int3
jge
and
sub
push
sbb
negl
sub
pushf
popa
and
pop
sar
mov
cld
mov
ljmp
into
stc
mov
pop
xor
cmp
loopne
andl
sarb
fabs
lcall
shrb
cmpb
pop
rcrb
movsb
jno
lods
pusha
xor
movsl
or
and
xor
add
and
inc
mov
data16
xchg
inc
or
ljmp
outsb
jo
lret
das
jo
pop
fcoms
stos
mov
sbb
xchg
xchg
sub
movsl
call
sbb
add
mov
fisubl
cmp
orb
add
add
add
mov
clc
imul
mov
imul
push
mov
sub
test
dec
sub
sub
adc
adc
fiaddl
dec
jle
iret
lret
daa
xor
loope
fcoms
adc
fwait
std
push
sarb
mov
pop
test
into
rolb
inc
faddl
test
inc
clc
fidivs
mov
aas
mov
xchg
or
mov
sub
dec
cltd
leave
adc
push
push
jl
dec
popl
std
cmpsb
mov
sub
add
cs
call
adc
xchg
or
inc
nop
fs
movsb
mov
xchg
sbb
cmpsb
pushf
mov
loope
sbb
ljmp
lcall
lods
sub
bound
orb
es
sub
mov
dec
dec
or
dec
add
lcall
mov
pop
cld
and
lock
xorl
bound
push
lcall
out
mov
mov
xchg
aam
or
push
aam
cwtl
jp
xor
fiadds
jae
dec
pop
mov
and
xchg
and
loope
push
mov
add
and
dec
push
sub
add
mov
test
addb
jmp
subl
rorl
inc
test
ret
mov
mov
mov
es
push
pop
out
lret
popa
cmp
push
lods
mov
stos
adcl
push
das
ss
test
inc
add
cmpl
aam
dec
inc
jg
mov
pop
xor
dec
or
or
push
or
pushf
add
adc
mov
sub
test
rolb
aam
sbb
add
scas
and
insb
je
or
cwtl
add
lcall
sbb
or
xor
mov
add
cmc
mov
pop
push
mov
xor
cs
adc
in
cmpsb
add
icebp
add
and
jbe
jne
push
jno
cltd
repz
jge
lock
mov
add
insl
pop
pop
das
lock
dec
pop
daa
inc
scas
inc
xor
sub
mov
or
mov
dec
mov
stos
xor
cmc
nop
icebp
std
mov
clc
mov
jmp
iret
pop
cltd
cli
test
andl
in
aaa
shr
or
sbb
add
out
roll
mov
jbe
or
imul
mov
aaa
mov
jns,pn
mov
lock
pop
mov
daa
lock
ss
shll
cmp
fidivl
les
sahf
ds
aaa
xorl
sub
xchg
adc
sbb
loopne
or
icebp
xor
sbb
fld
into
rcll
rol
out
push
test
stc
mov
mov
mov
test
fucom
pop
mov
dec
mov
lea
jne
stos
cmp
test
decb
jbe
lds
push
icebp
add
and
dec
add
call
jns
addb
aad
adc
add
pop
rcrb
push
push
in
lcall
out
add
in
sarl
lds
jo
jp
loope
jo
in
push
addr16
xchg
aad
jo
scas
mov
add
sbb
fcoms
lock
or
popa
mov
add
push
ret
std
popa
push
jl
subl
dec
or
lock
nop
xchg
xor
movsl
inc
mov
loopne
pushf
jbe
lahf
jbe
inc
pop
xchg
sub
push
lock
mov
repz
lcall
movsb
stos
imul
js
call
aad
fnstenv
mov
mov
add
mov
aam
mov
and
repnz
adc
sub
jns
jns
loopne
pop
mov
jne
mov
mov
inc
xchg
bound
xor
popa
movsb
shlb
pop
std
in
add
mov
pop
jnp
jo
arpl
imul
xor
pop
inc
stos
imul
mov
aad
shll
push
ja
in
and
ja
movsl
push
add
in
xchg
adc
mov
add
xor
lea
popa
ficompl
jbe
jne
clc
jno
sbb
jns
lods
lods
adc
popa
push
insl
add
push
ficomps
lret
rcrb
pop
add
add
stos
jns
stos
mov
dec
add
xor
xor
cmp
and
push
sub
sarb
pushf
cwtl
adc
inc
je
add
push
cmc
add
xlat
imul
or
add
jl
or
add
in
add
cmp
inc
cmpsl
stos
or
or
adc
adc
aas
or
cmpsb
imul
pop
std
push
es
sarl
test
mov
add
addl
jns
and
pop
in
ss
stos
ficomps
test
push
mov
mov
fnstcw
orb
adc
sbb
push
sub
push
cmpsb
add
add
mov
rcrb
test
js
sbb
xor
stos
loope
add
jmp
mov
fld
pop
roll
orb
lcall
mov
test
adc
and
sub
pop
rcrb
xor
rol
rol
insl
imul
push
pop
pop
adc
loopne
cmpsb
mov
dec
sbb
aad
cmpsb
cltd
stos
rorb
adc
adc
sbb
push
add
or
or
icebp
std
stc
fisubrl
mov
pop
loope
rcrb
stos
test
xor
dec
shr
imul
leave
mov
xchg
add
pop
shlb
aaa
lods
or
rolb
outsb
pminub
adc
add
rclb
xchg
and
push
dec
inc
fildl
jecxz
out
pushf
jmp
insb
xor
mov
jo
jl
js
out
pop
repz
insb
sbb
rolb
sahf
cmpsb
stc
repz
rolb
xchg
rolb
fwait
xor
data16
sub
cs
jg
pop
adc
lret
dec
shll
or
lock
jns
xor
dec
rorb
aaa
xor
imul
sarb
and
mov
mov
pusha
mov
and
out
sahf
cmpsb
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
imul
add
imul
test
mulb
mov
dec
jae
xor
dec
pusha
sahf
pusha
pusha
pusha
xor
repz
pusha
pusha
pusha
pusha
repz
repz
pusha
pusha
pusha
pusha
inc
repnz
pusha
pusha
pusha
pusha
loop
test
mov
and
mov
dec
shll
push
inc
mov
stos
inc
inc
stos
inc
sbb
loop
inc
stos
inc
inc
sbbb
lcall
pop
roll
ficomps
fisubrl
cmpsb
jns
loop
mov
add
dec
jno
out
inc
inc
stos
js
mov
inc
andb
inc
loopne
lds
cmpsb
inc
stos
inc
inc
stos
inc
push
movsb
cwtl
and
inc
inc
or
ja
add
cmp
in
mov
sub
xchg
pop
ja
add
loopne
out
lcall
out
lcall
negb
jo
mov
es
notb
mov
mov
add
cmp
test
xchg
imul
push
add
lcall
jo
jae
xor
imul
imul
out
dec
dec
aaa
xor
out
lcall
lcall
sbb
add
je
imul
stos
shl
push
mov
dec
shll
sbb
mov
xchg
xorl
add
and
lock
aas
subb
xchg
cs
pushf
fwait
or
mov
iret
cmpsb
mov
add
add
mov
sbb
lods
jns
cmpsb
push
pop
pop
inc
inc
add
imul
bound
sub
lcall
int3
stos
dec
int3
stos
and
sbb
pop
es
test
enter
mov
out
shlb
int3
add
sub
mov
movups
and
std
jg
add
mov
rorb
mov
aam
pop
mov
xchg
adc
leave
mov
jo
roll
dec
mov
adcl
pop
add
outsb
adc
xor
jns
aam
ja
push
add
adc
test
inc
mov
notb
add
mov
mov
int3
push
and
mov
cld
orl
hlt
mov
inc
push
lea
adc
ds
popa
jmp
jbe
nop
pop
les
fwait
push
lret
and
dec
into
or
mov
in
push
outsb
rolb
outsl
das
pop
add
add
cwtl
andb
push
add
inc
add
mov
lods
pusha
stos
mov
add
fimuls
mov
aam
nop
adcb
icebp
add
in
popa
ja
push
or
jo
pop
jb
or
adc
mov
inc
jb
hlt
stos
xchg
or
outsl
clc
pushl
and
cmp
roll
mov
add
testb
add
or
subl
add
or
add
mov
shll
jb
fildl
push
lock
and
movsb
mov
push
subl
fdivr
pop
cld
add
cltd
je
xor
adc
add
mov
idivb
adc
out
xchg
inc
push
and
int3
mov
in
clc
in
add
mov
popa
sub
mov
mov
mov
add
push
and
mov
push
jo
lret
cmpsb
and
paddusb
das
call
sbb
mov
adc
lock
adc
sbb
mov
mov
pop
or
les
ret
rclb
sub
adc
test
data16
inc
repnz
mov
pusha
adc
ret
xor
or
xor
shlb
ret
jg
lea
pop
and
icebp
adc
jle
mov
in
mov
inc
mov
data16
pop
lock
ja
rolb
add
jl
je
frstor
fistps
add
sbb
adc
mov
push
popa
nop
or
add
decb
jns
sbb
pop
push
ss
push
orb
test
or
or
xor
sub
sbb
xor
add
into
hlt
xchg
push
push
inc
inc
sub
add
fbld
or
add
repnz
dec
lahf
mov
xchg
fs
add
and
aas
push
dec
ljmp
incl
test
shll
inc
add
lea
rorl
dec
jg
mov
push
popl
mov
and
xchg
adc
pop
aaa
lock
xchg
jp
push
popa
sub
into
mov
add
xchg
addr16
adc
pusha
jp
movsb
sbb
jl
push
and
scas
cmp
and
dec
adc
outsb
dec
fstpt
or
lea
or
cmpsl
sbb
or
div
add
xor
andb
mov
push
xchg
cli
sbbb
inc
test
cwtl
popa
les
adc
popa
jg
fs
adc
adc
dec
shrl
cmpl
inc
mov
lea
pusha
mov
mov
cmpsl
jmp
mov
push
or
pop
inc
or
add
xchg
out
xlat
jge
inc
cmp
push
xchg
pop
push
cmc
jg
xchg
and
inc
add
pop
sub
andb
shll
ret
sbb
add
pushf
popa
mov
or
jmp
ret
test
mov
xchg
cld
push
enter
add
inc
test
shll
hlt
in
outsl
pop
andl
popf
or
and
cmp
mov
dec
add
inc
ret
in
lock
leave
sub
pushf
loop
or
daa
push
mov
shl
enter
xchg
push
push
std
into
inc
xor
xor
or
fisubl
lret
sahf
inc
xor
out
jg
push
mov
xchg
xorb
popa
adc
pop
dec
jl
cmp
clc
sbb
push
xor
scas
cmp
stos
add
inc
rcr
popa
inc
orl
sti
ficomps
mov
mov
popa
sub
jl
fists
inc
add
add
add
dec
sbb
addl
fdivrp
add
push
ja
pop
add
push
xchg
pusha
arpl
test
int
shll
add
add
add
les
aam
sub
add
pop
push
fisubl
push
sahf
fistpll
mov
mov
call
mov
adc
add
pop
int3
add
sti
fists
or
pop
and
and
pop
sbb
mov
inc
or
mov
jg
scas
lcall
and
mov
mov
std
stos
push
mov
std
xchg
inc
or
cmpsb
fwait
out
add
push
mov
inc
push
in
out
inc
xor
xchg
les
roll
or
and
inc
and
sub
test
add
aam
jae
cmp
or
or
and
jg
adc
addb
cwtl
test
jg
arpl
pusha
popa
cmp
ja
adc
cmp
pop
nop
add
cs
dec
ljmp
pusha
movsb
adc
mov
arpl
xchg
push
orb
add
std
add
popa
jmp
jae
cld
mov
fnclex
add
out
clc
jo
into
inc
addb
mov
mov
mov
push
xchg
mov
nop
pop
adc
mov
adc
jg
pusha
push
dec
inc
adc
lods
dec
adc
xor
xchg
nop
and
testb
sbb
jge,pt
pop
xchg
and
mov
mov
std
xchg
std
orl
dec
in
das
shlb
add
or
lea
jae
or
mov
adc
jg
lahf
popa
faddl
and
movsb
cmc
dec
cmp
fdivl
int3
loope
mov
pcmpgtd
ret
or
pushl
xchg
pushf
or
test
adc
outsl
jp
add
sahf
add
or
pop
and
add
outsb
push
fadds
andb
dec
inc
daa
mov
cmc
aas
movsl
add
adc
cmpb
imull
mov
xchg
mov
push
std
incl
cli
mov
add
shlb
pop
mov
int3
imul
push
pop
sbb
roll
bound
outsb
aaa
sub
adc
jnp
clc
in
sub
mov
or
add
or
popf
rclb
lock
add
add
cmpsb
outsb
add
fcomps
roll
push
stos
mov
add
insl
pushf
sbbb
or
movl
sub
in
dec
mov
mov
add
repnz
adc
sbb
ficompl
mov
mov
sbb
xor
adc
imull
mov
mov
sub
pop
stos
xor
or
lods
mov
adc
rsm
sbb
popf
jo
lret
aam
push
test
lahf
mov
push
mov
push
adc
sub
or
push
pop
rclb
stc
mov
pop
loop
xchg
popa
std
mov
push
in
or
arpl
and
jne
je
add
imul
xchg
fwait
jne
loopne
pop
arpl
icebp
outsb
mov
dec
jo
fists
mov
addr16
dec
dec
sub
pop
gs
les
jle
xor
mov
sbb
jl
sbb
daa
jp
sbb
add
xchg
or
push
fstl
sti
inc
or
ja
cmp
mov
pmaxub
xor
stos
mov
sbb
stos
add
icebp
add
call
mov
jnp
jns
mov
leave
insb
add
bound
mov
pop
lret
jl
icebp
loope
fidivrs
add
xor
fsubp
loope
push
or
jo
int
mov
ja
hlt
mov
inc
test
sub
or
sarl
xchg
add
sbb
push
inc
in
imul
cmc
mov
pop
ffreep
arpl
jo
popa
aas
cld
mov
lods
xor
cmp
sbb
mov
jo
enter
cmpb
in
mov
xor
jnp
cmp
xor
lock
push
stos
inc
lock
fildll
cmp
sbb
fidivs
fiadds
cmp
add
inc
xor
mov
xchg
xchg
jae
mov
imul
out
cmp
sub
lock
repnz
push
mov
pop
cmc
mov
jge
add
adc
mov
notl
lods
out
dec
div
mov
cmove
mov
add
cmp
mov
ja
mov
dec
outsb
pop
out
addb
or
test
or
xor
pop
push
jo
and
imul
lock
push
inc
dec
dec
js
mov
adc
or
nop
jo
adc
ds
mov
add
arpl
dec
js
js
mov
stos
mov
ret
stos
mov
or
or
outsl
enter
stos
xchg
nop
lock
mov
js
outsl
ds
lock
sahf
mov
push
or
xor
lock
mov
sbb
dec
mov
xchg
xchg
nop
mov
cmp
or
push
mov
adc
ds
or
vpackuswb
xchg
mov
insl
mov
in
mov
loopne
in
push
cli
std
or
in
add
pop
xor
lods
mov
inc
fadds
dec
mov
dec
cs
mov
push
ret
sti
push
add
or
sbb
scas
call
add
loope
add
cld
adc
out
in
sti
sarb
mov
cli
mov
add
mov
int3
sti
sti
or
xor
add
or
pop
in
icebp
neg
pop
test
pop
roll
cmp
mov
mov
in
data16
out
and
jmp
lcall
add
mov
cli
movsb
sti
ljmp
int3
icebp
mov
add
out
loopne
test
adc
fidivrl
add
insb
pop
mov
cmp
add
outsl
pop
pop
or
fsubr
add
or
add
iret
and
je
js
mov
xor
sti
and
cli
cli
add
fadds
sbb
mov
fs
addb
pop
loope
bound
mov
out
in
add
sbb
cmp
loopne
fcomp
outsl
xchg
loop
out
out
mov
lcall
bound
push
and
sub
decl
dec
cld
std
mov
adc
in
cld
in
and
call
push
push
ficoms
orl
int3
add
out
call
add
xor
cld
call
mov
outsb
fcomps
cs
insb
pop
add
lods
sbb
out
std
out
or
fmull
in
mov
cld
mov
in
shr
call
inc
hlt
pop
sbb
inc
js
subl
lock
push
test
addl
arpl
nop
cmpb
sbb
cmp
in
add
cld
stos
scas
mov
ret
orl
stos
push
test
fsubrs
pop
xchg
pop
sti
les
sub
add
fnstsw
mov
andb
adc
and
and
loopne
mov
pop
or
arpl
fsubrl
xorb
push
cld
dec
loopne
stc
lds
stc
clc
add
sbb
loop
cld
mov
in
adc
jg
jb
xchg
dec
ret
ret
dec
test
incl
and
rcrl
lock
pusha
in
icebp
push
cmp
mov
aad
add
les
in
lock
cmovno
pop
icebp
pushl
mov
sbb
aaa
int3
add
mov
out
mov
call
xor
adc
and
fiaddl
and
fbld
and
mov
inc
subl
sti
cltd
lea
add
shll
xor
lret
ret
add
loopne
cmpb
add
movb
mov
push
pushl
inc
rcll
lods
shrl
roll
fwait
pop
and
pop
inc
pusha
int
outsb
ja
add
addb
jecxz
ret
mov
loope
pop
cld
inc
js
sub
inc
clc
mov
jg
test
jnp
xor
mov
and
cmp
jg
inc
gs
movsl
or
xchg
scas
xor
stos
push
int
push
bound
jmp
ljmp
dec
sub
xor
in
movsb
loopne
sbb
test
and
gs
mov
inc
out
or
xor
test
cmp
push
cmpl
push
and
add
std
stos
and
mov
repnz
or
jg
out
in
inc
outsl
pusha
and
mov
adc
mov
dec
xor
mov
ja
mov
and
jl
add
cmp
xor
xchg
in
adc
adc
and
lock
jge
repz
std
sbbb
lret
call
jecxz
repnz
fscale
pusha
mov
push
dec
popa
cmp
cmpsb
sbb
loopne
jl
subl
outsb
fisubrs
fisubl
adc
inc
xchg
push
push
cli
jo
pushl
adc
in
sub
add
jmp
ret
fildll
mov
inc
adc
pop
adc
movl
mov
out
popa
lock
or
loopne
in
dec
test
loope
stc
cmp
out
mov
inc
into
xchg
mov
lcall
fsub
mov
ja
test
out
rorl
test
fisttps
loopne
incb
pop
lea
incl
in
add
stc
mov
dec
mov
jmp
popa
add
and
fs
sbb
mov
sbb
lock
mov
add
leave
loopne
xor
mov
subb
popa
or
and
mov
mov
adc
dec
push
lock
fcomps
dec
mov
ret
test
inc
test
mov
xchg
in
sub
out
xchg
sub
mov
out
mov
add
add
add
lods
call
mov
sub
jl
icebp
loopne
fsubp
hlt
out
cli
inc
or
lds
xchg
pop
int3
adc
clc
or
loope
addl
pop
les
popa
inc
sbb
les
and
cs
cmp
orb
inc
aam
cld
das
clc
shl
clc
and
adc
add
mov
mov
push
rorb
flds
sarb
out
push
outsl
test
enter
add
add
or
das
mov
fldl2e
loop
push
sub
cmc
mov
icebp
add
out
xor
std
and
pop
dec
mov
decl
inc
lock
icebp
add
add
testb
rolb
in
cli
cli
jecxz
cs
push
repz
aas
in
or
push
and
mov
or
xchg
add
pop
inc
movb
test
roll
sbb
rcr
mov
jo
fs
jg
pushl
push
push
or
out
iret
clc
in
imul
inc
lock
adc
jo
xchg
add
xor
add
fs
jnp
push
cs
int
jg
rol
loopne
in
xchg
add
push
and
out
lock
fsubs
jp
loope
xchg
loop
std
out
fistpl
adc
aaa
cmp
pop
xor
nop
push
push
mov
lret
stos
mov
mov
mov
lahf
int3
lret
jmp
inc
add
inc
pop
call
jg
add
fstpl
nop
dec
adc
shrl
add
mov
fdivr
in
mov
xchg
adc
fimuls
arpl
xor
sbbb
stos
sub
xchg
mov
ljmp
jbe
hlt
or
mov
mov
lds
fisttpll
mov
adc
or
pop
adc
out
out
push
dec
call
hlt
push
pop
xlat
push
dec
dec
icebp
push
xchg
add
and
inc
xchg
iret
or
cld
pop
lock
data16
pusha
push
in
shl
xor
or
roll
sbb
jbe
stc
push
jp
loopne
fstpt
call
adc
mov
cli
out
les
mov
jg
mov
ret
jp
jbe
nop
xchg
push
adc
jns
add
mov
test
xchg
loopne
push
es
jmp
int3
in
adc
in
aam
or
sub
inc
sahf
stos
lret
cld
incl
insb
call
out
xor
mov
add
adc
jo
mov
out
push
adc
sbb
xor
dec
push
add
jp
mov
jg
test
jbe
sub
xchg
add
ret
mov
or
pop
aad
fimull
cmp
jne
pop
inc
pusha
gs
add
add
xor
add
push
adc
jbe
mov
testb
push
add
decl
fisttpl
dec
mov
int
or
adc
out
or
icebp
or
dec
mov
xlat
mov
dec
ja
idiv
inc
pusha
aam
ljmp
stos
lock
adc
ficoml
icebp
and
out
add
mov
inc
mov
push
inc
cmpsl
ret
icebp
fbstp
fcom
add
add
lcall
addb
mov
pop
pusha
dec
insl
lock
std
lock
add
nop
adcl
rol
loop
stc
cld
stc
and
xchg
cli
sbb
ret
sub
mov
jecxz
ja
fsubrp
xchg
add
mov
sbb
fcomi
loop
jo
int
ljmp
ret
adc
icebp
in
inc
add
sbb
pop
jne
xlat
mov
xor
sub
mov
les
adc
mov
xor
mov
push
inc
push
inc
add
mov
inc
rolb
in
cmpsb
ret
fidivrl
aaa
lcall
pushf
out
adc
loope
outsl
jp
push
pushf
sbb
pusha
and
shrl
mov
out
ljmp
xor
out
inc
jae
gs
and
cmp
push
or
add
aas
adc
mov
cmpsb
mov
mov
add
xor
in
bound
aaa
mov
xchg
les
cmpsb
lahf
pusha
add
sti
fiadds
insl
insb
xor
fs
xor
call
sub
in
add
xchg
and
ja
enter
mov
hlt
fucomip
xchg
xchg
aas
add
push
les
or
jb
inc
data16
stos
jo
add
sbb
int
lret
pusha
cmpsb
outsb
mov
sbb
fidivl
push
loopne
adc
loopne
call
out
mov
pop
xchg
out
mov
std
pusha
add
mov
cmpl
add
mov
add
in
and
mov
dec
jg
add
out
fcmovne
fadd
fiadds
pop
cld
in
adc
es
pop
adc
push
insb
cmp
cli
add
bswap
std
add
and
mov
sbb
ljmp
cmp
adc
add
sub
lds
in
fsubrs
jmp
and
and
into
mov
pop
mov
mov
rcll
daa
lret
cmc
andb
scas
mov
test
enter
add
orb
out
add
inc
inc
adc
adc
push
in
jmp
inc
xchg
sahf
enter
cli
std
add
pop
mov
sbb
sbbl
gs
inc
mov
scas
out
les
in
iret
add
fidivrl
sbb
icebp
stc
and
ljmp
lds
jo
cmpb
addb
add
lret
xchg
loop
in
and
mov
out
fsubrp
sbb
or
stos
and
sti
in
ret
and
or
xchg
mov
stc
mov
mov
ret
sbb
mov
add
adc
and
ret
loop
sbb
int
scas
popf
test
ret
insb
push
in
ss
xlat
fisubrl
sbbb
repnz
add
add
scas
aad
call
inc
cmp
inc
sbb
in
sbb
inc
fcmovb
int
std
test
cli
dec
mov
add
dec
rorb
sar
jb
jb
das
int3
sub
add
or
inc
push
fmul
jnp
pusha
rcrl
dec
pushl
cwtl
std
out
sub
mov
out
add
inc
sbb
fsubp
pop
sbbb
xor
adc
mov
dec
inc
pop
shl
mov
out
test
sti
mov
pop
popl
in
dec
pop
rcrl
in
test
enter
js
or
vpavgb
fistpll
xor
rclb
inc
repnz
mov
push
pop
inc
fcoms
mov
into
inc
fsubrl
mov
movsb
sbb
or
shlb
and
ljmp
lret
cmpb
or
test
mov
rol
and
pop
clc
mov
cmp
mov
out
mov
mov
jbe
pop
inc
shll
add
cli
jle
mov
int
inc
fdivr
stc
mov
lods
adc
push
and
loope
fbstp
sub
inc
aas
fucomi
mov
and
push
add
add
in
ret
add
pop
dec
mov
cld
cmp
push
mov
in
and
cmpsb
add
or
mov
sbb
pop
jecxz
fsubl
in
add
mov
add
mov
or
shrb
hlt
in
std
mov
add
enter
out
sub
xchg
inc
and
incl
and
push
mov
adc
incl
adc
pusha
xchg
sub
add
push
push
cld
stos
sbb
push
pusha
push
ljmp
lock
fildll
std
pusha
jae
add
inc
sub
sahf
mov
iret
sbb
and
push
push
xchg
enter
js
and
pusha
mov
shll
dec
push
mov
and
add
decl
dec
sarl
cmp
and
xchg
loopne
jle
aad
sbbb
add
outsl
clc
mov
movsl
and
roll
ret
add
loope
into
in
or
dec
add
lods
ja
cmp
loope,pn
mov
xor
adc
adc
add
push
mov
inc
std
and
mov
loopne
inc
pusha
nop
cmpsb
add
movsb
mov
aad
push
mov
inc
sub
es
mov
adc
andb
jnp
out
movb
mov
and
aam
mov
or
dec
inc
push
lds
mov
mov
cmpsb
add
or
call
pop
rorb
lods
sub
mov
mov
bound
scas
outsl
mov
data16
addl
sub
jmp
mov
mov
lret
loopne
test
and
cmp
xor
lock
fisubl
or
mov
inc
xchg
mov
cli
pusha
or
mov
adc
or
and
pop
clc
out
insl
and
clc
imulb
out
jo
add
fisubrs
or
push
add
cld
fistpll
push
or
movl
mov
faddl
nop
loopne
add
or
lcall
push
in
adc
ljmp
cld
out
lock
je
add
jle
add
insl
add
dec
mov
fcomps
adc
cld
adc
sub
leave
push
cmp
and
add
icebp
cmc
loope
jp
push
rcr
jno
mov
xlat
xchg
jno
hlt
sbb
scas
mov
jl
adc
jo
jg
adc
sahf
adc
or
add
and
leave
stos
add
lods
jmp
call
add
sbb
push
das
cld
add
dec
push
and
scas
cld
aaa
lods
stc
push
sti
add
xchg
ds
mov
sti
add
cld
add
dec
imul
cmp
or
stos
insb
pop
mov
and
imul
pop
orl
add
xor
imul
lahf
dec
sti
add
sub
sahf
mov
mov
dec
dec
mov
rcrl
es
lea
int
orl
ljmp
dec
jae
push
push
pusha
cmp
imul
sti
or
repnz
arpl
cmp
movsb
xor
std
inc
push
mov
or
sbb
push
cmp
iret
add
xchg
rorb
cmp
push
jmp
jb
mov
lcall
xor
dec
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ljmp
int
lds
in
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
xor
mov
mov
mov
mov
jg
jne
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
std
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sbb
pushl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
std
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jg
and
gs
inc
lea
xchg
pushl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xchg
pushl
cmp
mov
mov
mov
mov
mov
mov
mov
mov
push
add
mov
mov
mov
mov
mov
aad
in
mov
cmc
mov
sbb
mov
cmp
mov
push
mov
jge
jne
lea
xchg
mov
mov
mov
aad
in
mov
cmc
mov
sbb
mov
cmp
mov
push
mov
jge
jne
lea
xchg
mov
mov
mov
aad
in
mov
cmc
mov
sbb
mov
cmp
mov
push
mov
jge
jne
lea
xchg
mov
mov
mov
aad
in
mov
cmc
mov
sbb
mov
cmp
mov
push
mov
jge
jne
lea
xchg
in
decl
sti
mov
add
int
lds
in
mov
call
mov
gs
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ds
add
test
shlb
or
dec
clc
lcall
into
mov
mov
mov
mov
mov
mov
pop
add
jbe
jmp
xor
xchg
out
xchg
mov
mov
mov
mov
mov
mov
mov
mov
mov
outsl
jmp
scas
or
mov
test
push
xchg
jmp
addr16
jmp
mov
xchg
mov
aad
out
mov
idivl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
aaa
or
mov
cmpsb
lcall
loope
push
incl
adc
jno
mov
stc
mov
mov
sbb
push
mov
cmp
xchg
mov
inc
mov
sbb
jbe
mov
mov
mov
xchg
mov
mov
mov
fiaddl
mov
pop
mov
mov
mov
lret
loopne
pop
shlb
mov
mov
sti
ljmp
mov
mov
mov
mov
mov
repnz
add
inc
inc
je
add
cld
mov
push
data16
xchg
mov
iret
mov
mov
sub
mov
pop
mov
jne
xchg
iret
mov
aas
clc
sub
add
sub
mov
repnz
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
cmp
mov
pushf
mov
mov
mov
mov
mov
lcall
jg
mov
fdivrs
out
cs
mov
loop
repz
sbb
sub
incl
mov
dec
mov
inc
dec
push
mov
decl
cmpb
pop
mov
cltd
mov
xchg
decl
jmp
mov
mov
mov
lret
mov
fistpll
in
dec
push
mov
lock
add
push
mov
cmpsl
adc
and
mov
inc
mov
jmp
outsb
mov
jb
add
in
call
scas
nop
mov
mov
mov
hlt
mov
fnstcw
loopne
out
cli
mov
or
dec
rcrb
mov
sub
ss
mov
call
push
faddp
mov
test
ljmp
mov
mov
out
mov
pop
mov
jg
jg
mov
je
cltd
mov
loope
bsf
mov
push
mov
cmpl
mov
fnstsw
out
mov
inc
mov
mov
pushf
mov
in
mov
add
push
mov
xlat
mov
mov
mov
pushl
mov
adc
and
cmp
mov
mov
mov
mov
jmp
outsl
cmpsb
jg
cltd
mov
mov
mov
mov
mov
mov
rcl
mov
mov
mov
mov
mov
mov
lcall
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
stc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
aad
mov
mov
mov
mov
mov
mov
sbbl
jb
mov
dec
sahf
mov
mov
out
add
mov
mov
mov
xchg
mov
mov
sbb
aam
push
cmp
jo
mov
mov
loope
out
repz
jl
adc
dec
mov
fwait
adc
mov
mov
lret
mov
fdivrl
stos
incl
mov
mov
and
cmp
xchg
mov
mov
mov
mov
ret
mov
add
cld
mov
mov
mov
mov
test
aad
jp
mov
mov
jb
push
fs
mov
mov
inc
aad
lock
mov
ljmp
push
test
pop
mov
mov
push
movsl
test
and
mov
mov
mov
das
ret
pop
jnp
mov
lods
mov
mov
or
call
mov
fidivrl
cmp
hlt
pushl
mov
fistl
mov
mov
sub
add
mov
inc
mov
mov
icebp
mov
jl
sahf
mov
adc
imul
outsb
inc
mov
lea
enter
jl
je
mov
nop
mov
jg
ljmp
mov
mov
mov
mov
or
mov
mov
mov
mov
mov
ret
aas
sub
inc
mov
jle
js
ja
cltd
mov
cld
push
clc
scas
pop
mov
mov
mov
sub
mov
mov
mov
ljmp
mov
jle
decl
mov
or
push
stc
mov
and
decl
mov
inc
mov
cli
lcall
mov
mov
mov
cmp
mov
outsl
jmp
lea
add
mov
mov
mov
mov
mov
lret
pop
sbb
pushl
adc
dec
loopne
push
jl
mov
mov
push
out
cmp
mov
pop
xlat
mov
mov
mov
pop
decl
xorb
enter
das
mov
mov
mov
mov
mov
mov
outsl
sahf
add
inc
aad
mov
cmc
incl
mov
dec
mov
mov
mov
mov
or
mov
adc
mov
lahf
mov
lcall
mov
push
inc
mov
mov
mov
mov
sub
ss
inc
jmp
mov
push
mov
jmp
scas
mov
sbb
mov
or
movsb
jbe
mov
cs
aaa
mov
sarl
mov
jle
xorb
pop
mov
cmc
ljmp
nop
mov
mov
fnstcw
cmp
mov
pop
cli
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
outsl
lcall
mov
pop
mov
mov
mov
xchg
inc
js
enter
mov
sub
lcall
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
push
xchg
popa
push
mov
cld
mov
and
mov
cwtl
mov
or
mov
sarl
fistpll
lock
pop
mov
cmp
inc
push
sbb
mov
ljmp
mov
or
mov
decl
mov
ret
mov
clc
xchg
pushl
mov
xchg
mov
mov
mov
mov
mov
cli
out
mov
mov
or
pop
ret
cmp
imul
sub
mov
mov
mov
mov
mov
mov
mov
mov
orl
mov
mov
mov
mov
sub
mov
mov
and
mov
out
jmp
out
pop
mov
scas
shlb
mov
xor
mov
mov
out
mov
inc
mov
jne
aaa
cmpb
jle
adc
mov
es
inc
mov
test
test
sbb
mov
mov
mov
mov
je
xchg
sub
gs
xchg
incl
in
mov
pop
jmp
mov
mov
lock
xor
imul
sbb
mov
mov
mov
ret
add
cmpsb
popf
jnp
mov
fisttpl
scas
aas
in
add
dec
mov
aaa
mov
mov
aas
lods
pop
enter
push
mov
mov
jmp
xchg
mov
mov
mov
sbb
mov
mov
dec
push
mov
push
leave
adc
loope
inc
cmpb
sar
rcrl
push
push
mov
popa
bound
jge
jno
jne
add
cmpl
call
mov
mov
mov
sarl
jb
mov
in
sbb
and
pop
mov
icebp
mov
or
mov
mov
mov
mov
and
xor
pop
std
mov
inc
loop
mov
imul
std
mov
jne
push
into
add
adc
sbb
stos
and
cmp
xor
inc
xchg
inc
out
scas
pop
pop
mov
insl
mov
sarb
jge
jno
jne
lock
xorl
test
push
mov
mov
mov
xor
pop
outsb
in
mov
mov
pop
mov
mov
push
mov
mov
es
mov
testl
inc
not
mov
std
incl
scas
insl
mov
mov
mov
mov
mov
mov
mov
sbb
incl
inc
cmpsl
mov
mov
mov
mov
mov
addr16
fisttps
outsb
es
test
sti
mov
mov
outsb
into
jb
mov
das
rol
xchg
or
lcall
jg
lock
mov
push
cmp
lock
mov
mov
loope
add
mov
mov
mov
mov
jle
mov
icebp
mov
mov
sbb
mov
mov
jle
cld
add
or
mov
mov
mov
xor
sbb
clc
and
lahf
pop
adcb
mov
les
outsb
mov
ljmp
arpl
stos
lock
add
cmp
idiv
sub
cs
mov
mov
pop
decb
mov
add
mov
sub
add
pop
mov
sbb
sarb
xor
push
fisubs
mov
push
mov
push
mov
fnsave
loope
or
ja
inc
inc
sub
popa
clc
pop
sbb
mov
mov
mov
aad
clc
add
or
jp
decl
hlt
mov
mov
push
in
or
jns
mov
mov
aaa
or
and
mov
adc
cmpsb
mov
pop
mov
mov
push
jmp
push
push
or
jns
dec
loope
push
xchg
adc
or
cmpsb
push
mov
imul
push
jp
pop
inc
sbb
aaa
jecxz
or
mov
sbb
mov
or
dec
mov
mov
mov
inc
push
mov
shlb
and
ffreep
imul
mov
mov
ljmp
mov
mov
xchg
sahf
test
push
jge
mov
mov
mov
mov
mov
aas
push
mov
mov
mov
mov
xor
loop
fwait
lock
mov
dec
cli
mov
mov
mov
mov
mov
mov
outsb
call
pop
sbb
push
mov
mov
mov
cli
cmp
rolb
xor
dec
int3
inc
mov
mov
mov
push
mov
mov
mov
mov
sub
jle
xor
push
sub
arpl
mov
inc
pop
mov
mov
pusha
inc
cmp
sbb
int
push
xchg
insb
sbbb
and
lock
pop
mov
mov
mov
mov
mov
mov
hlt
outsl
pop
sub
sbb
pop
mov
mov
mov
outsl
inc
fcomps
adc
xchg
mov
mov
mov
aam
cli
pop
lock
repz
mov
pop
xor
mov
push
mov
mov
movsb
push
mov
mov
repnz
popa
add
call
daa
mov
loopne
mov
adc
push
divl
cmp
adc
mov
mov
or
add
add
mov
mov
adc
mov
enter
ds
mov
lcall
sarb
mov
adc
test
lea
fidivrl
and
mov
ja
mov
push
idivb
out
idivb
fcom
jl
add
mov
add
lock
inc
mov
into
mov
mov
rclb
or
sub
pop
lea
mov
add
mov
mov
adc
lahf
mov
outsl
jg
adc
rolb
mov
mov
mov
adc
mov
mov
xor
add
adc
mov
xchg
mov
jno
mov
ret
mov
mov
dec
push
icebp
mov
mov
mov
cmp
dec
stos
jecxz
jno
xchg
push
add
fcomp
adcl
sbb
fsts
adc
fistl
add
test
loop
adc
jp
cld
add
movsb
cs
and
dec
mov
stc
call
mov
mov
inc
mov
mov
mov
addb
xor
jb
dec
inc
fsubs
mov
test
mov
iret
mov
mov
shlb
pop
sahf
push
jo
mov
icebp
mov
adc
add
andb
mov
loopne
daa
cmp
ja
popf
cmp
decl
push
add
sbb
daa
inc
and
push
mov
mov
push
and
call
adc
jbe
inc
mov
lcall
xor
data16
pushl
mov
rcll
imulb
repnz
sbb
imulb
js
push
mov
sarb
jo
rclb
pop
test
mov
popf
mov
rcl
mov
mov
mov
idivb
mov
add
orl
xchg
cwtl
sbb
push
cld
mov
xor
mov
mov
inc
mov
dec
sar
inc
mov
inc
mov
inc
lahf
hlt
mov
mov
mov
jg
ja
mov
mov
mov
add
imul
sar
cmp
mov
add
xor
mov
enter
sub
mov
or
inc
jmp
notb
ds
scas
mov
and
lods
mov
push
xor
push
mov
mov
add
out
divb
and
mov
mov
mov
inc
inc
mov
inc
cmp
das
inc
fisttpl
dec
adc
xchg
sahf
mov
mov
mov
add
lahf
add
pop
mov
mov
inc
mov
add
mov
push
in
jg
roll
jbe
inc
pushf
mov
sub
mov
mov
std
fwait
loope
pop
inc
mov
mov
test
mov
les
test
sub
js
mov
pop
jl
test
inc
movsl
mov
sub
icebp
mov
loope
xor
cmpsl
pusha
inc
ret
inc
adc
mov
mov
fstpt
adc
sbb
ds
adc
inc
shll
scas
or
sub
mov
addb
dec
nop
inc
mov
jl
mov
mov
mov
bound
leave
cmp
loopne
aas
pop
pop
mov
outsb
cwtl
int3
insb
pop
fimuls
call
cltd
lock
mov
add
mov
mov
mov
mov
dec
loopne
xlat
das
jo
xchg
mov
bound
inc
popa
or
push
lods
sbb
imul
mov
test
sub
mov
rcrb
pop
test
jle
mov
mov
adc
or
loopne
sub
cltd
sbb
jne
popf
mov
lods
mov
jne
add
mov
leave
adc
mov
pop
push
fsts
fnstsw
push
lods
sbb
xor
cmc
or
and
ja
pop
mov
lds
or
mov
cmc
mov
xor
xor
adc
xchg
cli
and
loopne
mov
add
inc
mov
aad
fs
int3
jne
and
mov
in
jae
scas
push
add
xor
test
movsl
mov
mov
push
adc
add
or
and
add
mov
push
insb
sti
push
add
ret
adc
ljmp
sbb
cmpsb
ret
pop
test
pop
loopne
inc
out
add
push
fisubl
mov
cltd
test
and
dec
jne
dec
aam
xor
sbbb
push
fildl
loopne
pop
adc
pop
pop
add
sbb
testb
dec
dec
movsb
lret
dec
shll
xchg
mov
mov
mov
ret
fmuls
inc
cld
in
lcall
mov
pushf
inc
les
xor
outsl
cli
nop
addb
idiv
pop
push
ret
xchg
out
xchg
scas
or
jo
cmc
xchg
das
push
hlt
fcoml
push
add
hlt
lds
fcoml
fwait
jg
aad
js
roll
dec
sub
mov
jmp
pop
shl
or
sub
or
jg
mov
jb
andb
push
inc
inc
arpl
sbb
in
or
xor
pop
lock
cmpsb
rcrl
jns
sub
aas
in
dec
and
jecxz
sub
ljmp
sti
ja
jg
lods
fistps
test
pop
loop
and
push
mov
in
ljmp
cld
insb
sbbl
sbb
add
cli
jge
mov
lock
add
repnz
test
mov
mov
decl
divb
jmp
xchg
xor
out
rclb
mov
sti
sbb
or
lock
leave
nop
add
push
icebp
sarl
leave
cmp
add
mov
cmc
inc
bound
clc
mov
push
mov
add
ja
sbb
clc
shll
pop
mov
out
mov
pop
cld
jne
jp
shlb
and
sbb
out
fwait
or
fbstp
cmp
add
and
test
ds
dec
xor
mov
out
cmpsl
adc
add
or
cmp
push
and
jmp
sub
out
ljmp
inc
test
xor
pop
jb
add
std
push
dec
push
cmpl
iret
xchg
dec
ss
stos
sub
or
adc
mov
pop
aaa
std
mov
add
jge
out
lcall
and
xorb
mov
pop
add
adc
aaa
ret
not
add
std
dec
or
in
cmpsb
in
fbld
adc
shrb
mov
loopne
cld
outsl
mov
scas
cmp
dec
push
pop
cmp
push
fwait
loop
xlat
or
adc
fs
into
cmp
pop
mov
daa
adc
mov
daa
cli
andl
enter
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
mov
decl
mov
pop
jb
stos
decb
lods
stos
inc
push
lods
pop
in
lods
scas
jb,pt
jmp
jmp
mov
pop
jae
cmc
dec
lock
pop
sbb
mov
clc
and
repnz
stos
or
mov
mov
dec
ret
adc
fldt
imul
cmp
outsb
lods
in
stos
outsb
pop
leave
imul
ja
rolb
cli
ret
decl
cli
push
add
int3
flds
adc
ret
mov
int3
iret
test
es
testl
aas
in
ljmp
test
adc
ret
mov
fsincos
mov
jle
dec
insl
in
push
js
inc
cwtl
push
rol
sbb
lret
std
test
or
mov
adc
dec
cli
sti
outsb
sub
dec
jmp
lea
push
lock
ret
test
push
mov
cmpb
sarl
and
call
daa
pop
mov
das
pusha
jno
mov
fidivrs
adc
cli
mov
flds
es
and
mov
xchg
cli
sub
divb
mov
push
std
fbld
loop
xor
lcall
mov
fldcw
dec
mov
push
or
sbb
fbld
idiv
push
xchg
bound
div
test
test
cs
jg
xor
int
add
into
int3
sbb
enter
stc
leave
push
jmp
cmpsl
xor
sub
jg
jbe
mov
fnsave
ds
jo
mov
dec
sti
pushl
stos
dec
daa
and
repz
inc
shll
push
push
xlat
outsb
ss
push
stos
in
mov
ss
push
mov
scas
push
repnz
push
fimull
imul
stos
lcall
jb
test
xchg
in
inc
sahf
icebp
inc
stos
push
dec
lods
fists
jno
popf
adc
jg
mov
fistpl
xchg
pop
lcallw
and
lahf
mov
sar
xlat
push
test
dec
mov
xchg
lret
hlt
sbb
es
sti
loopne
aaa
dec
jmp
sbb
ret
lea
push
in
pop
test
insl
movsb
or
cmp
or
lea
movsl
or
icebp
push
add
xchg
mov
jp
insl
jle
jbe
hlt
mov
stos
mov
call
and
mov
insb
jge
imul
aaa
movsl
and
mov
sti
and
cmp
pop
aad
scas
fisttpll
outsl
fistpll
sub
jmp
jge
jmp
call
arpl
cmpsl
repnz
xlat
repnz
data16
data16
and
call
jp
jge
cmp
es
nop
jae
pop
sub
fidivrs
daa
push
fistpll
pop
icebp
in
mov
lock
stc
or
xchg
out
sahf
out
scas
fbstp
ljmp
mov
fbstp
fcomps
repz
push
pop
jno
stos
test
incl
filds
mov
pop
movsl
movsb
stc
dec
cltd
test
cmp
mov
pushl
test
pop
ret
daa
sbb
and
jle
icebp
rclb
cmpsb
std
incl
and
jp
jmp
stc
in
cmpsl
enter
pop
dec
clc
sbb
push
and
dec
insl
sbb
dec
gs
and
fwait
fisubs
sti
jg
jo
es
mov
dec
popf
fbstp
stc
lods
inc
cli
stc
xor
int3
ss
jg
ljmp
pop
movsb
xor
and
lods
pop
movsl
aas
imul
sub
jg
hlt
jmp
mov
call
aaa
negb
mov
mov
push
es
push
and
fldenv
or
inc
scas
sbb
out
jmp
jge
push
mov
stos
lcall
aaa
insl
scas
cld
mov
sahf
ja
stos
adc
cli
incl
cmc
cmpsl
fwait
das
cmp
mov
in
mov
stc
fs
push
pop
enter
sub
or
and
jno
xchg
or
stos
mov
sub
lods
jl
mov
sub
pop
push
frstor
je
scas
fcomps
stc
stos
sar
jg
addb
aaa
adc
mov
jo
leave
push
addb
and
jg
jmp
incl
and
scas
pop
fstl
jle
mov
and
cs
popf
cld
pop
jp
add
xor
scas
out
add
inc
pop
hlt
mov
outsb
mov
adc
fistl
pop
adc
daa
mov
jg
call
dec
lock
hlt
loopne
sbb
aam
loopne,pn
pop
and
aad
hlt
mov
mov
pop
fistps
xor
jle
lods
insb
cltd
dec
call
out
jbe
fnstenv
outsb
and
mov
jmp
lods
sbb
cmp
or
cli
xchg
and
cmp
in
and
hlt
jmp
and
incl
fdivrs
cmpsb
jo
fstps
xchg
imul
and
mov
ljmp
xor
inc
add
je
dec
dec
inc
cmp
add
dec
pop
out
xor
push
dec
add
dec
pop
inc
push
outsl
add
decl
push
pop
bound
inc
js
add
pop
xor
jbe
jne
add
push
bound
ljmp
incl
add
ja
push
push
aaa
dec
bound
push
dec
pop
inc
xor
dec
js
add
sti
jg
dec
push
sub
inc
pop
push
jns
jo
xor
into
jae
jns
incl
inc
push
dec
xor
push
outsb
out
jae
dec
add
outsl
popa
ret
mov
incl
ss
inc
js
add
gs
dec
push
ja
push
inc
add
gs
jbe
aaa
add
pop
insb
push
mov
jb
pop
jne
inc
fldt
ss
aaa
xor
push
gs
xor
inc
inc
insl
inc
inc
je
arpl
jbe
adc
add
dec
arpl
cmpsb
hlt
jns
mov
jg
lcall
push
add
push
xor
push
inc
jns
push
arpl
outsl
ja
pop
fadd
mov
jg
popa
dec
pop
push
outsl
pop
ja
xor
jp
inc
push
xor
rcrb
fsubrl
ss
cmp
mov
jo
push
jo
push
jp
jno
inc
dec
outsl
inc
add
adc
imul
or
push
pop
jae
add
ja
inc
xor
or
mov
jb
inc
pop
mov
jae
push
outsl
mov
mov
jae
pop
push
push
dec
js
inc
push
ss
inc
cmp
mov
dec
push
imul
add
jns
push
xor
pushl
push
outsl
outsb
inc
arpl
add
dec
jg
add
dec
insb
js
dec
aam
jp
jno
add
and
in
outsl
outsl
inc
jb
jno
data16
fistpll
fsubrl
js
ss
dec
bound
arpl
dec
dec
mov
incl
dec
xor
arpl
ja
push
inc
outsb
dec
xor
ja
jne
std
jp
jb
dec
push
rcrb
adc
in
jbe
dec
mov
mov
mov
dec
imul
xor
add
xor
jo
shll
insl
fs
xor
push
ss
add
mov
inc
dec
js
dec
aaa
dec
aam
cmpb
inc
insl
clc
js
pusha
pushl
insb
jno
dec
outsb
arpl
dec
imul
jno
ss
xor
je
cmp
fimuls
jno
dec
dec
or
xor
cli
imul
push
mov
repnz
cmp
inc
shlb
push
dec
imul
push
push
add
jne
jp
imul
inc
outsl
dec
jo
gs
or
jne
inc
inc
cs
retw
ss
push
push
push
inc
inc
dec
xor
dec
fs
imul
icebp
out
test
outsl
xor
add
jbe
dec
inc
xor
das
clc
mov
push
jb
push
insb
inc
aaa
push
dec
jne
push
mov
test
dec
push
xor
mov
adc
or
push
js
jp
inc
jo
jle
in
inc
dec
pushf
jno
ja
push
dec
push
dec
push
ja
inc
fcomi
aaa
xorb
jo
inc
inc
push
dec
dec
pop
int3
outsb
cmp
sbb
lock
dec
lcall
fs
xor
cmp
rcrl
or
insb
imul
insl
inc
jne
push
inc
push
dec
push
inc
insl
imul
xchg
inc
insb
popa
cmp
dec
push
dec
push
ret
rcll
outsb
outsb
data16
and
mov
outsl
push
movsb
inc
jb
jne
addr16
push
inc
cld
mov
inc
pop
inc
inc
xor
inc
jno
dec
ja
ret
xchg
addr16
pop
outsl
jne
push
push
push
or
and
je
mov
shlb
jb
adc
inc
adc
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
stos
add
sub
stc
lahf
add
dec
add
dec
add
mov
lcall
add
push
imul
jb
je
arpl
add
push
gs
mov
arpl
jae
gs
outsl
jb
and
insb
gs
inc
gs
pop
sti
divb
jae
insl
push
imul
imul
je
mov
dec
outsb
outsw
push
and
imul
push
imul
dec
aad
fs
fistpl
outsl
dec
imul
aaa
cltd
fnstsw
outsb
push
fsubs
push
jbe
pop
enter
outsl
outsb
jae
ret
sbb
out
mov
fs
je
insl
push
int
popa
jae
jb
jb
mov
pop
jnp
gs
ss
cmpsb
cmc
in
inc
jl
sbb
test
pop
popf
inc
pop
jnp
shll
mov
int3
fisubl
loopne
ja
lahf
out
push
imul
popa
or
xchg
push
and
inc
jb
jae
mov
lock
pop
insb
dec
push
in
dec
loopne
xor
gs
or
aas
daa
inc
gs
hlt
inc
jae
imul
ret
arpl
and
mov
sbb
iret
push
data16
inc
insb
bnd
orb
dec
jo
push
rcll
ret
dec
jne
add
jno
push
cmpl
inc
fisttpl
pop
insb
mov
push
sbb
xchg
push
outsl
jae
insb
popa
addr16
rclb
sub
popf
leave
and
test
inc
xchg
test
imul
mov
imul
cmp
push
xor
adc
lock
push
push
mov
mov
dec
pusha
cmp
pop
mov
mov
fldcw
dec
push
stos
ja
xchg
jns
jb
inc
pop
stos
popf
add
inc
inc
popl
or
pushl
popf
push
inc
add
dec
add
add
add
dec
fdivs
add
out
push
sbb
decb
mov
add
add
lods
fstp
cmpsb
lock
lods
lea
or
xor
push
sbb
je
adc
mov
mov
jge
xor
imul
add
mov
daa
pop
leave
xchg
rcrb
lcall
popa
jo
add
mov
pushf
dec
dec
dec
or
sti
cmp
push
enter
push
adc
push
out
jae
arpl
xor
ljmp
es
xor
add
xchg
and
incl
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
or
add
and
add
pusha
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
nop
add
add
add
in
add
add
add
add
dec
add
dec
add
add
lods
xor
add
jb
mov
inc
add
mov
xchg
xor
push
js
pop
push
mov
sbb
push
fstpt
in
dec
lds
pop
push
ja
ja
mov
das
pop
ljmp
call
sbb
push
jnp
out
jecxz
push
inc
add
adc
call
inc
add
sub
add
xchg
ret
sbb
pop
jg
adc
adc
ret
rcll
test
int
mov
les
adc
scas
inc
pop
xor
rorl
dec
cmp
xchg
out
add
loope
fcompl
add
or
jge
cli
aam
add
leave
daa
enterw
or
mov
xchg
push
fbstp
xor
xor
sub
iret
ss
pushf
jle
jecxz
mov
mov
js
xor
jmp
mov
test
cmp
je
or
xchg
xchg
outsb
add
in
pop
pop
fisubs
push
outsb
push
jns
mov
cmp
sub
stos
psubsw
inc
pop
outsb
pop
scas
adc
mov
pushf
push
adc
mov
inc
subl
je
inc
jb
dec
adc
cwtl
in
outsl
xor
sbb
out
jb
mov
and
mov
and
bound
jl
lds
ret
xchg
data16
fwait
mov
fadds
xchg
decb
mov
sbb
or
adc
imul
lahf
sub
subb
insb
and
mov
mov
jmp
push
pop
es
xchg
ss
sub
fucom
dec
jecxz
dec
aaa
fidivs
cs
mov
fsubrl
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
enter
add
xor
xor
xor
aaa
add
add
bound
xor
add
jo
sub
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
jne
push
add
add
add
outsl
add
add
je
and
pop
add
jne
jb
and
inc
add
je
popa
add
add
sub
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
jne
push
add
add
outsl
add
je
popa
add
insb
add
jo
sub
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
jne
push
add
add
add
outsl
add
add
je
and
pop
add
jne
jb
and
inc
add
je
popa
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
jne
push
add
add
outsl
add
je
popa
add
insb
add
and
inc
add
add
add
outsb
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
pop
add
add
add
add
push
add
add
add
pushw
add
add
shll
add
add
fisubs
add
pushw
add
pushw
add
push
add
addr16
add
addr16
add
add
add
addr16
add
add
add
addr16
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
imul
insb
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
imul
imul
