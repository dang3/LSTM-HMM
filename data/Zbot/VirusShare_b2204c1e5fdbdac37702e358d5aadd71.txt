inc
ss
lret
movb
jle
pushf
fwait
add
aas
add
sub
add
or
daa
push
outsl
adc
or
dec
imul
into
popa
lods
add
jg
xor
jbe
out
lea
add
in
jo
add
inc
cmp
ss
in
ljmp
sbb
imull
fs
into
es
leave
sub
pushl
inc
add
add
jne
bound
bound
sub
fiaddl
dec
sub
incl
mov
add
in
pop
lahf
out
int3
mov
roll
add
jo
cmp
rclb
sarl
dec
sbb
std
mov
add
lods
mov
test
sbb
or
sbb
cwtl
ret
mov
or
add
add
dec
rorl
and
mov
jmp
insl
mov
fadds
add
lcall
js
add
pushl
sti
lret
pushf
rorl
mov
jmp
add
inc
xchg
jo
icebp
add
in
fcomi
jmp
or
sbbb
sbb
ljmp
add
leave
imull
add
add
add
aam
ljmp
jmp
sbb
jae
pop
add
add
mov
jb
das
mov
adc
cmp
push
scas
push
inc
out
lahf
mov
movsl
mov
outsl
mov
decl
inc
lahf
repz
jge
inc
and
flds
outsl
push
je
scas
sbb
inc
xor
add
or
add
pop
push
shr
in
and
roll
and
jo
hlt
or
idivb
adc
out
jmp
aad
outsb
ret
addl
cmp
add
incl
add
lea
mov
mov
and
nop
inc
fs
pushl
cmpl
sahf
add
aas
std
jle
mul
mov
in
add
movl
jmp
mov
adc
neg
mov
dec
rolb
mov
push
sbb
or
or
call
jnp
push
cli
and
out
adc
imulb
jne
mov
adc
stos
mov
inc
mov
int
aas
jge
xor
mov
sub
and
cmpsb
lret
outsl
aas
sti
mov
mov
icebp
mov
int
in
aaa
ss
inc
lahf
rol
pop
stc
fstp
outsl
sub
and
mov
dec
push
idiv
mov
adc
pop
and
out
mov
mov
push
adcb
ficompl
faddl
mov
adc
jne
sbb
fdivs
not
xor
mov
adc
and
sbb
in
fwait
loope
not
sbb
inc
popa
loope
lret
jo
lock
and
xchg
lods
ret
pusha
stc
mov
cmpsb
dec
sbb
out
out
mov
or
or
fcmovbe
sbb
pushf
mov
mov
cmp
scas
adc
or
adc
jne
mov
sti
call
sti
dec
jbe
add
xorl
add
jnp
out
and
or
mov
pop
shll
in
ja
ret
xor
inc
dec
je
xlat
or
sub
xor
adc
xor
int3
push
fidivrl
fcoms
leave
repnz
not
push
enter
ret
iret
inc
clc
dec
jl
lock
dec
bound
fsubr
mov
xor
adc
sub
pusha
mov
cld
in
jo
je
mov
add
ja
les
rorb
pop
adc
xlat
lret
daa
fildll
mov
andl
cmpsb
jns
stc
out
mov
outsl
sub
mov
ja
aaa
fisubl
sbb
sti
aad
loope
jmp
push
loope
mov
inc
mov
divl
xchg
push
dec
add
insb
outsl
push
out
int
fdivl
sti
lods
fsubrl
in
pop
movsb
mov
mov
or
push
sub
fildl
cmp
sub
sbb
out
inc
ret
push
outsb
dec
fstpl
add
cmpsl
cld
dec
in
sbb
aas
jmp
mov
fildll
xchg
and
lods
dec
jmp
jne
aaa
ss
xchg
inc
and
inc
cmpsl
sub
icebp
fidivs
jecxz
inc
mov
sub
fwait
cld
neg
xor
imul
int
arpl
xor
dec
xchg
or
xchg
repz
lock
lea
jb
add
mov
rcrb
or
mov
int3
cmpsb
rol
and
cmp
sbb
mov
incl
push
loope
decb
adc
or
lea
push
call
pop
xchg
mov
add
add
pop
lahf
cld
pop
inc
push
mov
in
mov
mov
scas
mov
roll
pop
and
pop
shr
or
je,pt
fsubl
xor
adc
rcll
pop
mov
rol
in
pop
es
xchg
add
addb
cli
cmpsl
pusha
cmp
call
loope
xor
pop
cmp
mov
jp
mov
sbb
dec
adc
nop
pusha
gs
add
mov
ficomps
insb
lret
xor
sbb
sbb
sub
test
inc
sub
mulb
hlt
fsubrp
pop
aam
neg
pop
sub
nop
pusha
mov
pop
repnz
push
pop
inc
cmp
sub
inc
add
enter
icebp
fldt
mov
and
or
ja
xchg
loope
push
inc
out
andb
xor
add
adc
lahf
dec
les
add
jg
loopne
ss
or
test
inc
clc
pushl
call
xor
orl
icebp
incl
aam
lahf
out
fistps
daa
scas
pop
lahf
dec
xchg
std
add
inc
cmp
out
jno
xchg
or
jl
pop
mov
xchg
aaa
dec
pop
out
in
add
sti
je
mov
orb
push
fs
xor
cmp
testb
jl
mov
and
lods
call
ror
in
sub
pop
shl
out
in
pop
rcrl
mov
inc
xchg
inc
push
adc
stc
adc
add
sahf
add
mov
push
pushf
xchg
pop
movsl
out
out
cld
mov
cmp
push
cli
nop
cmp
add
push
dec
or
xchg
add
jmp
push
fs
test
inc
int3
mov
xorl
push
ds
nop
lds
decl
add
scas
test
jae
add
pop
jl
push
sbb
jns
je
repz
mov
loope
les
adc
mov
adc
cs
test
cmp
ja
inc
pusha
pop
add
clc
add
xchg
je
incl
scas
sub
add
add
add
lods
or
jl
aaa
arpl
xor
jnp
mov
and
xlat
add
rclb
mov
test
push
xchg
ljmp
orb
out
add
fldenv
loope
pusha
mov
ss
into
pop
pop
cmpsb
dec
xchg
pop
fidivs
sbb
ss
mov
imulb
mov
xor
push
pop
mov
inc
xor
int3
out
das
xor
aas
popa
xor
bound
fidivrs
jp
fsin
rol
push
add
fwait
out
inc
add
dec
sub
sti
out
pushl
fstpl
add
cmpsb
adc
scas
mov
ucomiss
incl
push
add
dec
mov
jecxz
data16
aam
frstor
pop
sbb
mov
cmp
cs
gs
or
mov
mov
addr16
mov
add
mov
fstpt
out
xchg
mov
add
jecxz
add
cli
lret
mov
sub
lahf
idiv
jg
rcrl
inc
cs
addb
or
dec
push
test
add
cwtl
shrb
out
xor
mov
xchg
and
sbbb
jo
adc
cmpsb
sahf
adc
and
push
adc
clc
decl
dec
ds
pop
add
xchg
cmp
dec
aam
or
in
out
mov
push
adc
sub
ljmp
bound
dec
arpl
mov
imulb
ret
and
sub
add
in
faddl
inc
mov
push
xchg
add
mov
add
mov
mov
pop
mov
hlt
rcrb
sbb
pop
add
mov
add
out
hlt
and
sbb
push
aad
in
and
addl
mov
insb
call
xor
mov
aad
cli
test
loope
test
sub
outsb
mov
jl
test
shll
mov
cwtl
dec
cli
scas
loopne
insl
hlt
sbb
or
out
dec
jle
or
sbb
aaa
mov
xchg
fistpl
mov
inc
push
xchg
jbe
sarb
adc
idiv
out
lods
mov
or
loope
inc
pop
cmp
mov
shrl
fstp
mov
icebp
and
mov
hlt
decl
cwtl
pushf
ljmp
xor
aad
sbb
mov
and
mov
and
fnstsw
data16
push
or
shr
ja
fcom
cmp
sub
inc
add
and
test
mov
ja
xchg
fadds
dec
push
push
mov
sub
pop
sbb
jno
cltd
or
mov
jmp
fdiv
pop
or
jmp
cmp
push
test
movb
xchg
or
jmp
mov
push
rcrl
in
dec
adc
add
push
inc
or
ret
pop
mov
leave
js
sbb
movsl
dec
cld
sub
adc
mov
xor
mov
jl
xor
pop
mov
mov
sub
push
mov
aaa
xor
imul
inc
push
imul
or
dec
pop
xor
sbb
in
mov
sbb
movsl
cs
imul
sbb
std
sub
xchg
lcall
fs
iret
call
jg
xchg
mov
mov
pushf
mov
imul
fdiv
or
and
aas
lret
mov
lcall
cld
je
sbb
aam
out
mov
filds
lods
pop
jb
lret
or
mov
mov
jge
pop
sbb
int3
test
rcrb
jnp
jmp
insl
dec
mov
push
push
xorb
cmc
insl
jecxz
cmovle
xor
pop
inc
leave
and
mov
inc
pop
jp
xchg
inc
sbb
in
mov
bound
and
dec
cmp
das
xor
fistpll
pop
mov
call
lea
lock
xor
scas
adc
icebp
dec
mov
loopne
or
jge
daa
mov
fistps
cwtl
sbb
mov
adc
mov
sbb
decl
ret
xchg
clc
cmp
idiv
ret
scas
lods
int
loopne
mov
inc
daa
cmp
jno
xor
push
lcall
mov
ja
and
out
loopne
movsb
lock
and
inc
push
pushl
cmpsb
sub
cmp
push
lods
mov
cmp
mov
popa
sub
sub
push
adc
movsl
inc
and
fdivs
int3
mov
movsb
pop
dec
sub
xchg
int3
mov
lods
shlb
jle
inc
mov
inc
cmp
int3
adc
jge
cld
pop
sbb
add
sub
or
add
cmpsl
pop
or
jle
push
jle,pn
enter
mov
sub
ja
lcall
xchg
sub
int3
out
movsb
fistl
jecxz
mov
insb
mov
ret
jno
mov
fwait
rclb
out
pop
jecxz
mov
xchg
cmpsb
sbb
jae
inc
nop
scas
mov
std
bound
dec
aam
inc
sbb
sahf
aad
or
dec
enter
out
jbe
cmp
cmp
shl
daa
push
jne
std
adc
ficoml
in
pop
xchg
jp
or
lcall
or
jg
lock
xchg
ficoms
adc
dec
fsubrs
cld
inc
push
add
pop
pop
ljmp
cmpsl
out
test
movq
or
lock
popa
imul
pop
mov
enter
popa
cmc
sub
pusha
in
int3
in
ja
int
cli
gs
xchg
cmpsl
stc
or
dec
or
push
ficoml
int
test
jl
xchg
cmp
sub
ljmp
pop
bnd
shl
mov
test
or
inc
out
mov
cmp
outsb
insb
push
inc
sbb
lock
and
dec
pop
fcom
scas
mov
sub
and
xchg
push
push
add
sarb
arpl
in
cmp
js
pop
fwait
test
inc
xor
inc
fwait
in
sub
push
sbb
or
and
test
inc
aam
pop
arpl
or
sbb
lcall
add
js
jp
xchg
cmp
cmpsl
inc
cld
mov
mov
andl
jmp
mov
sbb
dec
sbb
jmp
push
outsl
mov
xchg
pop
mov
insl
imul
mov
and
cmp
test
push
adc
rol
ret
cmp
mov
mov
push
idiv
jo
cmp
ds
sub
lret
movsl
and
mov
mov
sbbb
mov
ljmp
mov
inc
fbld
jge
push
mov
mov
mov
adc
jl,pn
push
add
ja
mov
cmp
add
pushl
mov
xor
cltd
jno
mov
aaa
add
jp
in
lcall
mov
push
das
faddl
loopne
pop
sti
and
cs
dec
fisubrs
push
loop
push
mov
xor
inc
daa
mov
mov
push
add
orl
scas
adc
push
outsl
scas
jo
dec
outsb
pushf
push
sbb
popf
cwtl
inc
and
add
pusha
push
sbb
mov
pop
das
cld
dec
xchg
jl
xchg
mov
xchg
xchg
cmpsb
pop
and
outsl
das
mov
data16
inc
mov
push
andb
cs
sub
xor
in
mov
sub
popa
mov
mov
incb
int
push
sub
push
add
jp
pop
xor
cld
adc
push
pop
dec
stos
fdivrs
mov
cmp
out
mov
sub
outsl
das
fmuls
sbb
add
mov
mov
call
mov
add
fdivs
jecxz
jle
in
daa
stos
lahf
xor
jl
pop
mov
outsb
ljmp
mov
cld
ljmp
test
mov
loopne
sahf
sbb
and
adc
aaa
loop
push
add
adc
pop
cwtl
mov
ss
and
and
cmp
inc
inc
xchg
xorb
loopne
std
ret
movsb
xchg
jge
sub
jmp
std
sbb
xchg
lret
stos
clc
ja
sti
sub
xchg
test
and
lret
sub
into
jne
dec
xchg
pop
xor
popf
shlb
push
test
in
sub
lcall
mov
cmp
adc
nop
cltd
movsl
pop
ss
push
insb
and
lds
mov
push
and
and
inc
movsl
mov
mov
inc
cwtl
cs
call
or
pop
lods
xorl
decl
dec
cmp
sub
orb
or
paddw
fsts
pop
adc
das
lret
sbb
or
loope
dec
cmp
loope
std
jg
pop
movl
aaa
inc
clc
cld
insl
stos
stc
les
ret
leave
std
xchg
cmp
pop
orl
je
push
test
loopne
adc
shl
mov
adc
nop
push
xchg
add
cmc
dec
mov
or
inc
push
faddl
jmp
jg
add
std
xchg
jp
push
clts
inc
out
pop
jl
ss
or
clc
jo
sbb
fbstp
jl
aas
inc
call
pop
and
cmp
mov
popf
add
xchg
and
call
clc
jno
test
jg
xor
loop
push
xchg
sbb
mov
pop
xor
int3
repz
into
insb
sbb
decl
das
jg
test
dec
iret
cmp
xchg
ljmp
movsl
pusha
cltd
pop
cs
mov
in
insb
ja
mov
lods
push
xchg
add
sbb
clc
shlb
adc
adc
sub
pop
mov
int3
lcall
jl
inc
ljmp
aam
jb
mov
sub
outsb
out
xlat
outsb
jne
add
shll
or
mov
call
iret
mov
and
faddp
clc
mov
les
je
nop
inc
das
sub
mov
std
in
mov
jne
jae
orb
in
fucomip
cs
xchg
mov
xchg
jge
bound
xchg
mov
cld
or
fdiv
int
in
js
or
lea
hlt
ljmp
jl
push
pop
testb
xor
loopne
push
fnstenv
stc
xchg
mov
cli
test
aas
add
shll
and
jp
outsl
icebp
xlat
xchg
jbe
repz
shrl
cmpsb
into
bound
imul
fwait
cmp
mov
outsb
aam
sub
in
outsl
fsubrs
lods
repnz
sub
adc
cs
jg
sarl
bound
adc
shll
pop
lea
mov
sub
outsl
mov
add
or
pop
jae
jmp
nop
aas
rorb
cmp
or
mov
jo
xlat
lret
std
ret
leave
dec
int
or
and
pushf
mov
pop
push
jg
rol
popa
cmp
xor
and
add
mov
dec
cmpsb
pop
jno
mov
loopne
pusha
and
pop
inc
dec
out
movq
addl
xchg
int3
fcomip
ss
pop
xchg
jmp
add
or
std
push
xorb
incb
lcall
loope
jmp
inc
dec
xchg
insb
movsl
ljmp
cld
ret
aam
aam
or
mov
clc
stos
nop
movsb
fwait
rcrl
mov
jns
adc
and
repz
push
bound
push
add
push
cli
aas
push
xlat
dec
adc
sbb
out
and
call
call
mov
pop
cltd
fidivrl
inc
ret
aas
jl
ss
cli
leave
mov
and
das
mov
mov
sbb
in
lret
pop
xor
lock
mov
ss
xchg
lret
cmpl
inc
cli
mov
adc
jl
mov
or
in
cld
sbb
adcb
push
sahf
aam
test
push
push
mov
sub
jns
lret
pusha
cmp
mov
mov
roll
xlat
ret
ret
inc
xchg
popf
inc
jmp
pop
rep
lahf
adc
jmp
cld
or
cmp
out
sbbl
aas
fwait
cmpsb
jo
mov
and
pop
pop
mov
push
xchg
jle
aaa
cmp
add
aad
movsl
push
iret
test
pop
add
push
in
dec
cld
or
xor
push
insb
cmpl
sbb
stos
mov
xchg
dec
idivb
sub
incl
rorb
pop
and
test
dec
dec
aad
pop
loopne
sbb
push
into
cmc
decl
xor
dec
dec
inc
pusha
orl
mov
outsl
ret
mov
out
aam
inc
ret
movsl
xor
adc
cmc
enter
fcom
pop
rcrb
jb
outsb
iret
cld
fsubrl
pop
lahf
sbb
pusha
rcrl
cmpl
decl
push
subb
sbb
popa
mov
and
movl
js
outsb
xor
test
add
jg
sub
outsl
insb
xchg
add
aad
xchg
jo
mov
adc
cmpsl
mov
ret
test
outsb
int3
loope
fsts
push
pushf
jg
outsl
push
push
jne
rorl
mov
mov
or
bnd
fbstp
push
call
and
mov
data16
arpl
and
call
push
iret
fisubs
sub
test
mov
setb
fs
xchg
les
lcall
pop
mov
popa
sti
ljmp
mov
into
xchg
aaa
add
inc
push
cld
xor
jl
jnp
mov
push
sbb
mov
mov
mov
or
das
bound
loope
or
call
xor
dec
push
jne
fprem
orl
addr16
into
lods
outsl
js
mov
ret
or
addb
les
pop
mov
xchg
cli
inc
push
mov
pop
sub
push
mov
xor
das
jge
cli
inc
mov
scas
jmp
inc
mov
mov
dec
call
mov
test
lret
xchg
pop
cmp
inc
divl
xor
push
fisubl
aad
ss
jbe
pop
and
xor
mov
sub
mov
in
aas
loope
mov
xor
std
arpl
and
out
or
mov
inc
inc
test
inc
mov
in
dec
add
fdivrl
loopne
jle
xchg
orl
mov
or
jecxz
push
aad
test
test
int3
ss
imul
xchg
jmp
int
popf
cwtl
lret
mov
call
inc
or
mov
insb
shrl
add
outsl
pop
imul
test
inc
aas
mov
or
cwtl
fprem1
add
adc
add
je
divb
popf
jg
fcmovne
ja
out
das
imul
ja
push
idivb
or
daa
dec
lcall
mov
jmp
fmuls
out
addr16
mov
scas
xor
movl
das
lock
ja
shrl
aas
aas
mov
clc
push
inc
aas
clc
incb
test
clc
pop
mov
sbb
cmc
call
call
mov
push
pop
clc
pop
fldt
int
dec
shl
pop
lahf
shlb
pop
lcall
fsubs
scas
push
decl
inc
mov
fldt
lret
jecxz
jns
insl
std
incl
aas
outsb
cwtl
clc
add
fs
sahf
push
lock
mov
or
jbe,pn
sti
jle
mov
jb
push
int3
imul
stc
ret
xor
cmp
sbb
cmpsl
jg
pop
push
in
xchg
je
imul
inc
pop
cli
scas
adc
mov
dec
dec
lods
call
lods
lret
inc
fidivs
sbb
test
addr16
aam
cld
incl
or
adc
cld
js
mov
in
xor
inc
mov
add
sub
lds
loope
mov
sbb
popf
and
inc
fildll
push
add
pop
mov
add
stc
dec
inc
jg
addl
aad
lea
sbb
mov
mov
stos
fidivl
dec
test
out
add
lds
pop
mov
in
stos
test
fsubrs
inc
mov
lods
cs
xor
xchg
mov
push
dec
xor
dec
mov
test
sub
es
pusha
add
outsb
in
clc
cmpb
leave
das
mov
xor
rclb
call
shlb
add
cltd
dec
add
fbstp
leave
xor
sbb
mov
std
cmp
mov
loope
icebp
pop
inc
mov
pop
cmp
subl
int3
mov
add
mov
scas
pop
orl
and
xchg
popa
jle
filds
adc
mov
xlat
or
add
lock
and
push
jmp
dec
out
xlat
mov
push
test
jne
jp
out
sub
cmpsb
lods
mov
push
sub
push
cmp
inc
je
fdiv
mov
jae
jmp
outsb
cwtl
bound
int
mov
sub
jg
nop
push
or
or
adc
ret
repz
sbb
cmc
lods
ret
sahf
ljmp
mov
mov
je
jle
add
ficomps
sub
xor
sahf
jo
pop
xchg
inc
mov
mov
data16
add
mull
stc
add
adc
mov
popa
cmp
subl
mov
mov
and
shr
pop
sbb
imul
sti
in
ljmp
rorb
loopne
filds
mov
xchg
lods
sbbb
fstpt
or
sub
mov
jecxz
adc
xchg
pop
adc
outsl
ret
dec
inc
cmp
test
cmpsb
scas
movsb
fldenv
jb
insl
inc
ds
call
stc
in
les
arpl
jp
and
gs
pushf
pop
mov
adc
mov
cmp
outsb
lds
jmp
lret
or
sub
aam
adc
and
and
dec
cmp
sbb
xor
in
mov
adcb
inc
inc
pop
push
or
jo
loope
inc
add
dec
fimull
or
or
and
int3
bound
add
movsl
dec
cli
inc
cmp
sbb
push
hlt
add
frstor
jb
inc
cmp
adc
adc
stos
fstl
push
in
add
sbb
aam
xor
mov
or
and
mov
stos
in
pop
xor
add
pop
aam
lcall
fsubp
inc
pop
push
xchg
dec
aas
and
add
or
sub
ret
sbb
inc
jnp
test
pop
mov
mov
lds
dec
in
mov
ss
mov
aam
fucomp
pop
clc
cmp
and
fisubrs
in
repnz
enter
xorb
sahf
jle
cmp
out
test
cmp
cmp
xor
mov
clc
and
adc
data16
hlt
fs
inc
jo
mov
ret
cmp
in
adc
stos
in
fisttpl
mov
jl
hlt
in
out
jnp
jne
add
push
insl
clc
adc
test
jb
push
popa
add
xchg
xlat
dec
jns
aad
jo
sub
cmp
or
or
push
inc
sbb
aam
sbb
stc
in
cmc
fcoms
fildll
mov
push
mov
mov
add
inc
xchg
jns
xchg
sub
insl
sbb
shll
cmp
cmp
in
sub
push
mov
mov
push
mov
mov
fcomps
sbb
or
ret
loopne
in
fcomi
mov
jp
fdivl
mov
icebp
es
aad
xchg
cmpl
fsubrs
pop
adc
test
out
test
fdivrl
shrl
push
add
sbb
xor
sbb
stos
adc
push
inc
adc
mov
imul
mov
fwait
or
add
jno
sbb
pop
xchg
lock
lock
add
ret
jge
cli
ret
pop
test
divl
sub
neg
cmpsb
add
std
lock
popa
ret
xchg
pop
lods
adc
mov
jg
and
movsb
cwtl
loopne
push
rorb
es
jns
jo
and
push
pushf
int
loopne
push
shr
push
xchg
and
inc
pusha
clc
pop
sub
adc
sahf
stc
push
arpl
ds
call
fadds
lds
fcmovb
repnz
push
xor
mov
or
fldt
int
mov
cld
je
xlat
mov
in
and
sbb
add
stos
add
icebp
cld
xor
and
fsubr
xor
add
into
popa
out
pop
loope
into
sbb
or
imul
je
fnstenv
fucomip
adc
jg
movsb
cwtl
dec
and
jle
jb
adc
iret
scas
call
inc
pop
jo
xlat
cmp
push
inc
lahf
imul
lea
stc
clc
inc
or
cwtl
inc
xchg
jns
or
loopne
push
or
fdivrl
insl
adc
imul
adc
sbbb
dec
add
das
loopne
push
push
fsubs
data16
dec
sarb
fmulp
and
jmp
xchg
or
fdivl
jno
lea
fsubl
ror
rorb
sub
dec
fucomi
hlt
xchg
add
pop
xlat
dec
push
adcb
jecxz
xor
fiadds
adc
out
sbb
lods
shl
dec
pop
lock
stc
or
push
jns
repz
ss
mov
in
out
jge
mov
add
xlat
and
pushf
mov
lcall
rorl
dec
inc
push
fnsetpm(287
fidivrl
mov
je
xor
adc
sub
repnz
pop
rclb
pop
mov
adc
jo
and
jp
or
pop
dec
or
and
mov
lcall
icebp
sbb
sbb
jne
inc
xor
pusha
ss
jns
scas
and
mov
push
rcrl
sbb
scas
and
xchg
out
xchg
je
push
mov
jge
cld
fmull
lods
test
outsl
xlat
js
popa
dec
sub
mov
add
sbb
pop
in
push
stos
or
out
cmp
xchg
popa
loope
inc
push
mov
cmp
mov
pop
hlt
add
aam
jbe
rclb
stos
sub
or
shlb
jnp
shll
jbe
mov
ss
sub
mov
add
or
icebp
jge
pop
cli
mov
inc
ja
and
add
push
outsb
aam
outsl
dec
adc
lret
pusha
lods
sbb
mov
push
mov
test
mov
dec
arpl
adc
pushf
mov
arpl
jnp
mov
xchg
inc
shr
add
cmp
div
jnp
xor
push
jnp
lahf
sub
in
imul
cmp
decl
loop
xor
jmp
add
cmp
jo
jb
lock
or
incl
mov
test
imul
mov
cmp
fildll
and
sbb
mov
xor
mov
mov
fucomp
push
das
bound
pop
adc
pop
mov
cmp
lea
insb
push
ljmp
inc
fs
scas
ffreep
sbb
xchg
adc
cmp
btc
arpl
dec
push
cli
mov
xor
and
adc
jmp
sbb
cmpsl
add
add
jns
cmp
in
test
adc
add
scas
nop
loope
pusha
aam
xchg
sbb
filds
das
sub
call
and
cli
push
push
in
mov
xchg
mov
aaa
mov
dec
mov
and
sahf
outsl
jg
mov
sbb
repz
loop
imul
inc
iret
pop
add
jmp
sub
and
pop
test
and
loope
push
push
inc
orb
jb
mov
xorl
popf
jnp
dec
inc
adc
fldt
xlat
cmp
fiaddl
inc
enter
lret
shl
cmp
arpl
test
add
mov
repnz
mov
xchg
or
mov
rolb
or
outsl
inc
xorl
mov
push
into
cs
das
out
pop
mov
xchg
jecxz
xchg
and
ljmp
xchg
fstp
pop
jecxz
cwtl
push
fmull
pop
cli
and
aam
test
shlb
or
notl
ljmp
cld
sub
cmp
or
sbb
sub
adc
mov
jg
lods
addr16
inc
cwtl
cwtl
loopne
stos
loop
mov
xchg
cmp
iret
or
outsl
ljmp
nop
xchg
insb
icebp
repnz
mov
cld
jmp
data16
mov
xor
add
mov
dec
fildl
jmp
mov
jb
cmp
mov
imul
xchg
test
out
push
and
cmp
clc
pushf
adc
xchg
adc
or
lods
jmp
in
das
lods
add
gs
into
test
pop
std
xchg
popa
inc
push
fnstenv
mov
add
push
js
aas
cmc
mov
rorb
mov
std
push
repnz
out
pop
mov
and
cmp
insb
and
and
push
mov
dec
push
sbb
icebp
inc
fcomip
xchg
pop
and
stc
pop
push
xor
pop
mov
cwtl
xchg
test
cmpb
enter
cwtl
es
and
or
pop
mov
lock
into
add
adc
jo
or
push
ljmp
pushl
shrl
stc
pop
xor
add
jo
jp
push
push
mov
stos
jp
mov
xchg
mov
adc
or
scas
pop
xchg
cld
add
mov
push
clc
std
mov
mov
movb
js
in
loope
ljmp
push
ret
addb
adc
mov
sahf
gs
cmc
jl
sbb
inc
insl
jns
lds
outsl
stos
shlb
push
lcall
in
mov
lds
add
mov
mov
dec
outsl
sti
inc
pop
adc
push
or
rolb
mov
cs
out
ljmp
pop
xor
jne
mov
add
fwait
repnz
fsubrs
xor
cwtl
imulb
adc
mov
inc
inc
les
pop
shlb
loope
add
sub
sub
inc
mov
dec
lret
jg
lret
in
jl
ds
push
pop
jb
imul
jmp
std
inc
arpl
in
adc
outsl
nop
call
or
addl
adc
add
mov
mov
mov
add
adcb
and
in
jmp
call
cwtl
cmp
xor
ljmp
push
add
mov
repz
xorb
flds
aad
sub
add
push
mulb
jge
sti
and
pop
mov
repz
outsl
je
xchg
mov
stos
jp
filds
sti
mov
pop
out
adc
push
jge
pop
xor
dec
cmp
hlt
inc
mov
mov
cs
stc
and
pop
lods
cli
mov
push
sahf
xchg
vmovq
push
clc
js
fidivl
and
push
xchg
xchg
loopne
mov
mov
adc
gs
movsl
pop
mov
mov
cli
les
scas
and
test
inc
lret
icebp
das
cld
test
add
in
mov
push
sub
or
in
inc
adc
das
insb
push
jo
mov
roll
mov
das
xchg
dec
mov
std
mov
dec
sub
gs
add
mov
xchg
mov
je
int
pop
ja
and
add
fs
jecxz
pop
hlt
lods
push
lods
iret
push
pop
mov
dec
pop
in
fimuls
push
mov
jns
or
xchg
add
push
outsl
push
mov
insl
frstor
sub
jl
outsb
sbb
rclb
out
pop
scas
fldenv
sbb
xchg
mov
ds
mov
or
sbb
and
jmp
cmp
incl
cltd
cmp
or
mov
mov
pop
pop
lahf
jg
sarl
cmp
or
test
push
jbe
jle
mov
ljmp
fcmovnu
sbb
sbb
add
pop
jno
sbb
add
add
xchg
xor
pop
jo
pop
push
repz
mov
stos
shl
mov
add
mov
mov
pop
js
lods
sbb
adc
jns
mov
adc
xor
xlat
test
push
sti
xchg
loopne
sub
adc
jecxz
fisubrs
and
mov
shl
pushl
mov
xchg
and
sub
out
cmp
fimuls
mov
mov
and
sti
outsl
jo
out
loope
inc
adc
aaa
shlb
xor
out
or
fiaddl
shl
ret
int
xchg
outsl
mov
divb
call
into
mov
push
jle
cmp
adc
jnp
test
pop
andps
mov
mov
rep
or
test
sar
jecxz
fwait
mov
push
clc
lea
and
call
and
lret
icebp
adc
call
or
adc
inc
aas
xor
mulb
lock
js
jbe
sbb
rolb
push
and
sti
xchg
stos
decl
es
ss
adcb
xchg
mov
out
mov
icebp
lcall
in
loopne
aaa
incb
jb
pop
mov
pop
test
adc
out
jns
adc
sub
outsb
insb
fstpl
cmc
dec
mov
or
outsl
cld
cmp
bound
add
jns
cld
outsl
mov
and
mov
ret
and
inc
jno
sub
fsubrl
or
fwait
mov
pusha
add
and
enter
mov
pop
loop
mov
mov
repnz
xchg
pop
lds
push
jg
sbb
sub
cmp
cmp
push
aam
dec
push
lods
add
adc
pop
jle
into
ljmp
sbb
add
gs
in
aam
mov
loope
jmp
ljmp
rolb
icebp
cmpsb
fidivs
add
add
sub
xor
push
push
or
out
jo
push
ret
adc
dec
ror
or
jne
dec
xor
adc
mov
sbb
rcrb
lea
sub
int3
pop
je
adc
stos
mov
sub
xor
cmp
inc
pop
imul
push
inc
adc
and
push
clc
add
iret
adc
and
aam
mov
adc
dec
fimuls
or
les
inc
push
adc
or
jno
fsub
push
shlb
inc
inc
xchg
push
xor
das
pop
fdivl
mov
aam
loope
stos
pop
shlb
ja
jo
cmp
sbb
adc
fists
lods
imul
hlt
pop
sub
cli
in
add
es
mov
adc
addl
push
cmc
repnz
imul
jno
or
cmp
stos
mov
scas
enter
insb
add
roll
out
xor
adc
inc
jae
xor
shl
mov
lea
enter
push
cmp
mov
add
push
or
jle
repz
adc
jle
sbb
int
sbb
in
and
add
dec
push
xor
loop
xchg
xor
and
mov
loope
mov
in
int3
jp
stos
pop
sub
data16
stc
xchg
or
pop
add
inc
dec
jo
inc
lods
pushf
pop
push
xlat
cmp
mov
ror
in
push
and
flds
lock
mov
in
adc
mov
aad
rolb
xchg
mov
ror
xor
out
add
andb
inc
pop
loop
push
enter
ficoml
call
and
mov
lock
lret
and
test
xorb
add
adc
push
cmpsl
mull
sub
xorl
mov
cmpsl
xchg
xchg
cmpb
xchg
scas
sbb
repz
jecxz
push
cmp
out
dec
cmp
movsb
and
cmp
mov
fimull
push
or
xor
inc
jae
in
fsubl
sbb
sub
mov
das
push
mov
xor
out
test
push
sarl
mov
pop
cmp
aam
in
and
les
dec
faddl
lds
out
or
push
popl
pop
sbb
sbb
jp
sbb
mov
pushf
cmp
jno
add
mov
fnstsw
roll
xor
cs
xchg
dec
int3
fsub
xor
sbb
cld
scas
adc
aam
lock
sahf
int3
insb
inc
sub
dec
jmp
cmp
inc
xchg
or
mov
inc
xor
and
clc
ret
jo
fcmovnu
lock
movsb
push
adc
inc
cld
push
jl
pop
sbb
pop
jmp
pop
add
pop
adc
subb
xor
mov
lock
in
xor
rcl
cld
call
cmc
or
pop
hlt
push
or
arpl
adcb
dec
mov
sbb
lret
fdivl
loop
imul
sti
call
mov
mov
sahf
loopne
and
aas
es
mov
loopne
xchg
pusha
cmc
jbe
pop
rcrl
rorb
pop
in
lock
mov
icebp
push
sbb
mull
or
lret
lock
adc
jae
lock
jl
fstpt
loop
leave
adc
adc
adc
popa
ja
shlb
pop
jmp
inc
or
fistps
idivb
adc
scas
mov
mov
cli
push
fsub
movsl
loopne
jge
out
jo
push
sbb
push
push
pop
cmp
enter
dec
xor
and
adc
ja
and
std
mov
sub
cld
lea
mov
dec
fwait
lods
call
xlat
clc
pop
insl
mov
rcll
dec
dec
xor
int
push
shll
adc
call
dec
jb
add
enter
add
pop
iret
popa
inc
call
fs
push
dec
jge
pop
push
icebp
sbb
out
or
and
nop
add
add
adc
push
xchg
add
jg
adc
fcmovnbe
push
fists
lret
xchg
dec
dec
subb
lock
push
push
test
repz
xor
xor
inc
imul
sub
cmp
jl
sti
jns
data16
loopne
fsubrs
test
mov
ret
adc
mov
mov
test
mov
dec
xor
jbe
or
ret
repz
mov
fucomp
data16
fdivrs
mov
or
pop
cmp
outsb
dec
cli
push
jp
std
montmul
cmpsb
inc
dec
dec
cmp
add
loopne
add
movsl
xor
mov
push
add
test
sbb
fldt
push
cmpsl
lock
scas
in
pusha
xlat
test
clc
cmp
data16
pop
jo
jb
dec
add
rorb
push
lcall
push
scas
outsb
pushl
sub
mov
mov
sbb
call
jnp
insl
xorl
ds
fildl
addl
clc
xchg
in
je
ret
add
ja
stc
fwait
mov
pushf
in
mov
ret
pushl
jp
push
cli
pop
int
hlt
push
icebp
out
iret
xor
xchg
out
movsl
mov
push
mov
jg
pop
ret
fildl
aam
dec
xor
adcb
xchg
cwtl
out
adc
xor
lahf
int3
incl
mov
jl
call
inc
mov
xor
cld
das
adc
pop
les
cs
cltd
jp
scas
decb
inc
mov
add
mov
mov
push
cmpb
sbb
fldenv
adc
mov
and
and
cmp
fildl
or
ficoml
mov
scas
insb
xchg
sub
incl
mov
in
sub
in
adc
fwait
cmp
sbb
jns
or
or
add
mull
push
mov
bound
adc
test
pop
fstl
fwait
mov
push
sbb
jae
std
aas
add
xchg
loop
ret
sub
std
das
cld
incl
adcl
push
lahf
mov
and
sar
decl
mov
lret
cmp
mov
bound
xchg
push
out
add
scas
mov
pop
orb
mov
adc
loop
mov
jl
in
cmc
les
loop
in
inc
imul
arpl
lret
cltd
sarb
lock
dec
adc
cmpsl
bound
mov
sub
mov
arpl
clc
je
or
dec
lock
xor
mov
ja
jne
std
add
jg
inc
or
lcall
pushl
je
inc
jnp
mov
dec
push
mov
imul
cwtl
into
and
add
dec
pop
sub
decb
and
jmp
sbb
aaa
icebp
scas
jl
sbbl
xor
add
cmpb
out
and
les
movsl
push
add
push
pop
mov
test
rolb
stc
xchg
notb
pop
lds
ljmp
and
push
jne
jns
xchg
and
mov
adc
dec
idiv
dec
icebp
pop
fsubrl
add
pop
out
xchg
cs
mov
std
js
or
xchg
dec
pop
fadds
insl
clc
cs
jecxz
lea
das
sarb
jp
sahf
inc
ficompl
call
lea
loop
mov
inc
rcl
test
je
push
insl
mov
pop
pop
jp
mov
xor
xchg
xchg
inc
and
lods
add
sbb
xor
inc
jl
bnd
sbb
pushf
mov
pusha
imul
or
pop
jge
jl
inc
add
jle
mov
call
jo
icebp
or
mov
inc
inc
shlb
xchg
das
xor
dec
scas
loopne
jl
add
fs
xchg
cli
mov
jmp
xchg
jp
xchg
outsb
and
movsb
inc
imul
jbe
push
sbb
cmp
insl
dec
mov
mov
mov
pop
insl
ss
sbb
sbb
mov
loopne
shl
xchg
dec
aas
clc
xor
sbbl
inc
mov
sbb
arpl
or
mov
popa
mov
mov
pop
sub
xchg
pusha
jnp
in
or
loope
mov
or
cmc
movsl
mov
add
jp
and
fstpt
or
add
jo
fstpt
in
dec
mov
in
adc
scas
sbb
shrl
inc
dec
jecxz
fisubrs
shrb
sbb
xchg
aad
jecxz
mov
inc
cs
lret
incl
pop
jge
cs
fisttps
mov
test
sbb
dec
sub
jp
fdiv
in
jne
sub
mov
scas
es
sub
mov
add
jecxz
shrl
roll
fistl
lock
sub
push
pop
outsb
inc
stc
cmpsb
adc
leave
in
jae
shrl
or
fs
jno
shlb
cli
idiv
jg
sbb
push
jecxz
mov
repz
mov
and
rcrl
dec
xchg
ret
jg
sbb
cwtl
mov
and
xchg
sbb
movsb
sub
push
mov
jg
cmp
testb
decl
clc
popa
cmp
movsb
ret
and
mov
movsb
in
ret
cs
sub
jae
fcmove
or
rolb
cld
xchg
push
dec
and
xchg
mov
add
mov
popf
mov
push
cs
movsb
cmp
fistps
jo
nop
jnp
cld
cmpsb
ljmp
pop
push
xchg
xor
mov
nop
xchg
mov
decb
sahf
cmc
add
adc
pop
mov
push
jbe
pop
jg
push
call
adc
lea
inc
mov
push
dec
sub
dec
movsl
decl
lahf
xor
push
add
push
or
jl
fistps
push
xchg
and
adc
aaa
clc
sbb
ss
xorl
dec
inc
leave
ja
xor
xor
loopne
shrl
mov
mov
inc
jecxz
call
sbb
mov
movsb
popa
add
mov
es
fldcw
mov
or
push
adc
cltd
push
or
mov
loop
stos
imul
inc
xlat
pop
rolb
add
clc
inc
and
icebp
pop
lret
xor
in
pop
ss
cld
xor
sub
fildll
xor
pop
je
aam
shll
add
loope
mov
lock
shlb
pop
or
cwtl
inc
cmp
std
lods
in
fwait
sub
fs
test
jle
iret
shll
mov
inc
and
dec
sub
pop
inc
mov
dec
aam
pushf
mov
icebp
fucomip
aad
sti
lods
fadd
lods
pop
jae
sub
jg
jle
iret
int3
inc
fsubrs
xchg
cs
jbe
ret
ret
cltd
add
and
ss
and
jp
mov
jg
ss
sbb
fmull
dec
push
sarl
cwtl
dec
call
mov
movsl
out
add
pop
shrl
push
test
in
movsl
jl
push
sbb
push
jecxz
cmp
cmc
inc
xchg
xchg
es
clc
fisttps
movb
rorb
adc
mov
mov
sarb
inc
pop
push
push
xor
adc
rcl
mov
sbb
mov
push
into
orl
add
sbb
out
lret
pop
jnp
arpl
outsl
mov
mov
xchg
cmpsl
das
insb
std
jg
add
xor
mov
xchg
int
insl
popa
imul
pop
xchg
adcl
push
pop
out
loopne
xor
mov
clc
mov
clc
dec
pop
lea
insl
mov
adc
mov
dec
pop
arpl
js
out
or
xor
movsb
fbld
cmp
mov
stos
mov
outsl
rorb
ds
fcomip
sbb
push
xchg
roll
jl
test
fistl
out
jbe
mov
mov
out
inc
sbb
orl
das
push
mov
shlb
imul
decl
jmp
jns
sbb
add
mov
xchg
mov
and
negl
xchg
push
pop
rcl
fmul
arpl
or
addl
enter
mov
cmpsb
ror
mov
lock
adc
add
jmp
outsl
shrb
insl
mov
push
sbb
adc
repnz
and
jg
jg
xlat
mov
in
leave
pop
insl
test
sbb
inc
je
cmpsb
ret
test
adc
pop
cmc
inc
jecxz
xlat
inc
cmpsb
out
shlb
mov
xchg
lcall
je
mov
pushl
mov
jle
or
mov
jg
inc
js
rcl
sbb
jl
imul
pop
sbb
cld
int
mov
jmp
adc
pop
andb
add
data16
cmp
test
push
nop
ljmp
dec
pushf
nop
ret
lret
push
inc
ljmp
in
dec
xchg
push
mov
pop
shl
cmc
es
or
mov
out
and
shr
push
mov
aam
adc
in
adc
add
pushl
mov
jecxz
adc
cli
cmp
lahf
dec
cmp
xor
aaa
nop
xor
clc
push
xrelease
iret
inc
les
mov
and
mov
sub
jg
dec
fistpl
in
stos
ja
inc
hlt
add
pusha
sbb
or
decb
mov
fcoms
repz
dec
pop
fisttpl
fcomip
sbb
ja
pop
and
sbb
je
push
mov
jle
jg
mov
xchg
sbb
xor
mov
dec
ret
hlt
xchg
pop
mov
pop
jecxz
fidivl
sub
inc
es
or
pop
mov
in
adc
mov
test
sahf
in
sub
ljmp
pop
ss
por
xchg
addr16
into
adc
ljmp
xchg
xchg
aam
push
popf
and
inc
pop
icebp
outsl
mov
and
push
popf
dec
ljmp
pop
ljmp
or
cmp
sub
dec
clc
and
or
xor
outsl
mov
inc
push
cld
repz
add
fbstp
push
lods
mov
adc
adc
cs
dec
inc
cmp
mov
add
sub
fwait
mov
mov
in
mov
add
icebp
fistps
mov
xor
push
stos
adc
xchg
mov
movsl
lock
sbb
pop
in
cmp
mov
adc
in
sub
gs
loopne
cld
inc
lods
and
sbb
add
lahf
ja
insb
add
push
mov
mov
test
andb
sbb
adc
and
sub
fdivs
fwait
neg
shll
pusha
and
mov
mov
js
ja
mov
fs
sub
mov
negb
cmp
call
les
dec
ljmp
fsubrs
leave
sub
int
push
mov
sub
test
xchg
ss
push
sbb
or
jne
dec
dec
cmpb
mov
cmpsb
or
les
andl
or
inc
mov
mov
adc
adc
adc
mov
or
aam
inc
hlt
mov
fs
jecxz
icebp
fidivs
pop
xchg
jle
inc
mov
fmulp
jle
inc
sbbb
movsb
pop
call
xor
and
inc
dec
pop
add
add
or
dec
cwtl
mov
mov
shll
cmpsb
test
aam
inc
test
aaa
mov
pop
cs
jp
and
out
add
sbb
cld
iret
push
mov
and
outsb
adc
dec
fists
push
push
push
push
fwait
popa
sub
ret
into
inc
lret
jnp
fxch
adc
hlt
push
pop
fsubr
or
jmp
fidivs
in
daa
adc
sbbl
addb
fnsave
or
or
inc
movsl
jne
lea
mov
sbb
and
pop
je
sbb
in
mov
mov
push
mov
jge
bound
adc
clc
jg
and
sbb
jo
inc
loop
pusha
add
ss
jnp
les
dec
pop
dec
repz
inc
mov
xlat
push
fstp
or
xor
and
les
and
pop
dec
out
or
adc
icebp
push
push
mov
push
xchg
js
mov
test
insl
insb
xor
in
in
imul
cld
testl
add
lds
jg
push
add
push
daa
jne
xchg
std
daa
sub
xchg
neg
adc
adc
add
jbe
dec
xchg
adc
shll
or
pop
jno
test
loopne
fisttpl
push
insl
sti
insl
loopne
loopne
fwait
sub
sub
mov
bound
mov
push
xchg
pop
lock
push
orl
xchg
ret
and
sub
andl
push
test
loop
pop
stos
ret
pop
add
mov
sub
jnp
loope
jne
fildl
xor
inc
pop
xchg
inc
adc
fnstenv
and
sbb
nop
popf
push
cmp
sub
add
pop
sbb
divl
pop
gs
push
and
mov
mov
cmc
mov
fcmove
xchg
jle
push
mov
mov
jmp
dec
shll
into
out
popf
jmp
pop
add
sub
scas
inc
das
pusha
shlb
jae
push
xor
dec
sbbl
jmp
ret
imul
dec
aas
cmp
fisttpl
adc
icebp
xlat
fisttps
hlt
iret
ja
adc
add
or
dec
movsb
sub
stos
xchg
inc
fistpl
dec
popf
test
dec
addr16
bound
xchg
or
addl
daa
cltd
and
lock
into
cmc
inc
test
xor
pushf
pop
mov
fiaddl
jge
fwait
cs
subb
aad
xchg
test
inc
lods
lock
mov
adc
add
pop
aad
les
stc
mov
mov
adc
push
lea
shr
push
push
push
lea
push
in
xorl
mov
jecxz
jbe
imul
cmp
push
fsubrl
scas
mov
sub
mov
and
push
pop
sbb
mov
cmp
mov
in
mov
dec
add
push
cmp
popa
xchg
jmp
rorb
imul
add
cmc
add
sub
mov
loopne
jl
adc
lcall
mov
ret
or
sub
out
jb
adc
jle
pop
imul
mov
mov
repnz
xor
cmc
repnz
pop
or
clc
dec
icebp
cmpsl
add
outsl
mov
int
xor
sub
test
cmc
popa
mov
and
sub
dec
xor
std
sbb
pop
call
lock
adc
jno
lods
inc
cs
movsb
cltd
dec
or
rcll
outsl
mov
dec
mov
callw
and
shll
hlt
rclb
lea
or
mov
xor
add
negb
cmp
and
cmpb
cmp
or
push
loop
mov
adc
pop
jle
aad
arpl
fsub
outsb
add
lods
mov
mov
add
pop
call
add
adc
jae
cwtl
lahf
push
mov
loop
inc
jae
dec
sar
add
push
sbb
mov
dec
dec
and
cmp
xchg
ja
out
cwtl
mov
cmp
cli
add
test
mov
jp
dec
pop
ja
repnz
and
inc
fisttpll
cs
add
inc
push
cwtl
fisubl
outsl
cli
bound
in
add
cld
idiv
negb
mov
repz
dec
add
xor
cmp
ret
xor
insl
and
lods
ljmp
ljmp
sti
xchg
loopne
sti
dec
dec
pop
mov
out
push
sbb
ds
mov
lret
dec
out
push
or
pop
enter
add
scas
xor
stos
push
negb
cmp
ret
push
inc
or
fisttps
mov
cmc
lods
lcall
push
cmc
mov
inc
scas
scas
add
pushf
xchg
lret
fnsave
rorb
inc
mov
sub
pop
shr
jne
add
je
push
mov
fs
lret
js
sbb
idiv
xor
jns
push
fldcw
rclb
pusha
shl
and
scas
jns
and
sar
decl
xchg
or
add
jmp
sbb
cmp
je
aam
sub
adc
mov
inc
ret
in
or
fstps
add
int
adc
aad
xchg
jnp
pop
cmpsb
sub
jmp
scas
std
and
inc
cmp
xor
mov
and
cmp
cmpl
add
int3
add
test
dec
pop
rcr
push
inc
shlb
add
sbb
cmp
mov
in
ljmp
call
test
jae
scas
xchg
inc
insb
pop
rol
xchg
jle
mov
push
fstpt
inc
jg
mov
scas
add
mov
imul
sbbb
cmpl
mov
or
clc
adc
or
addr16
mov
mulb
adc
xor
push
cmp
mov
movsl
push
or
mov
sub
xlat
sbb
hlt
jl
xlat
js
pop
add
sbb
dec
hlt
adc
sub
or
pop
xor
mov
xchg
and
pop
les
adc
cmp
jno
xor
rol
sbb
clc
xlat
sbb
arpl
dec
jbe
rcrl
jmp
movsb
xchg
jecxz
jp
out
sub
mov
sbb
push
hlt
mov
les
imul
mov
mov
inc
adcb
les
outsl
rcrb
fxtract
out
xor
pop
movsl
icebp
fwait
jo
and
sub
mov
loopne
pop
ss
fimull
and
inc
xor
test
les
pop
faddl
or
inc
push
lds
jl
test
adc
es
lea
outsb
in
out
or
icebp
sbb
stos
push
shrb
dec
shll
shlb
adc
sbb
xchg
rorb
enter
sbb
orps
rcll
inc
mov
push
mov
xorb
leave
lock
lret
add
inc
sbb
push
sbb
add
ja
push
xor
addb
hlt
outsb
fldenv
and
xchg
clc
xor
dec
aas
sbb
aam
scas
xor
mov
adc
or
fildl
dec
popf
and
pop
loopne
lods
inc
xchg
adc
sbb
outsb
lock
xlat
insb
filds
and
inc
ret
sub
lock
pusha
imul
int3
push
and
mov
adc
lret
and
repnz
fyl2x
sbb
jge
clc
mov
clc
cmp
xor
jns
sbb
pop
mov
test
push
xchg
mov
cmp
pop
inc
add
push
mov
clc
bound
repz
cli
mov
ja
add
jmp
sub
inc
popa
sub
bound
clc
cwtl
sbb
cmp
adc
lahf
call
add
xor
xlat
or
sbb
xor
mov
and
cwtl
or
mov
into
push
mov
cwtl
icebp
dec
mov
or
daa
ficomps
into
out
insb
cmp
aam
mov
xor
shr
cli
xchg
and
jbe
push
dec
push
sbbb
xor
daa
inc
inc
imul
jmp
fdivp
sub
addl
push
sub
pop
mov
mov
push
jmp
adc
pop
cs
das
std
call
push
fld
call
adc
dec
imul
cmpsl
std
xchg
jmp
pop
ret
loopne
dec
sub
rorl
test
push
push
mov
xor
repnz
fbld
arpl
mov
pusha
adc
jle
add
or
cmp
sahf
ret
enter
jnp
stos
aaa
call
mov
daa
sbb
loop
orb
jmp
test
sbb
sbb
in
gs
adc
xor
call
push
adc
insb
xor
pusha
leave
ljmp
mov
cmp
shl
sub
and
inc
sub
outsl
adc
scas
adc
mov
cmpb
notb
fsubrl
sub
mov
and
pop
adcb
fisttpll
pop
ljmp
cmpsb
movsb
incl
dec
orb
out
sub
fwait
cmc
dec
addr16
decl
enter
mov
enter
push
push
and
xchg
clc
aaa
jno
movsl
or
inc
sbb
gs
push
mov
iret
or
dec
nop
push
adc
cmp
je
jmp
mov
cmp
add
push
decb
adc
add
pop
lea
pop
and
inc
xchg
bound
call
ja
testl
jl
adc
sbbb
pop
je
bound
or
popa
mov
jge
in
jmp
mov
and
in
cli
add
in
jg
arpl
rolb
data16
syscall
or
repz
and
sbb
cmc
mov
lcall
push
loop
jp
addr16
or
bound
cmpb
and
mov
pop
sbb
fsubrp
push
cmp
fcom
enter
in
lock
sbb
adcb
and
lds
sbb
shr
sub
lock
mov
sub
das
inc
and
hlt
paddusw
jecxz
repnz
xor
fildll
cmp
mov
add
iret
cmp
movsb
xchg
mov
fsubrs
cld
rcr
mov
jmp
sub
pusha
push
mov
xor
mov
adc
bound
or
mov
mov
adc
add
sbb
lock
call
rcrl
clc
je
mov
incb
and
add
div
pop
dec
out
les
mov
and
or
pop
mov
shll
pop
dec
mov
push
mov
add
loop
mov
decb
rorl
loopne
jae
mov
adc
inc
push
lods
ret
add
mov
ljmp
nop
dec
stc
out
mov
fcomp
cli
or
stc
pusha
sbb
fdivs
and
es
movsb
fistpl
stc
push
pop
pop
js
mov
repnz
pcmpgtd
mov
es
addb
lock
xchg
and
rcl
mov
add
pusha
sub
cmp
addr16
and
and
add
inc
xchg
addb
mov
cmp
test
out
in
shrb
mov
adc
pop
bnd
mov
dec
cmp
sarb
xchg
out
das
test
add
xor
pop
mov
push
xchg
dec
rcll
fdivs
push
cwtl
cs
int3
or
xor
sbb
pop
adc
or
push
lahf
test
insl
and
pop
push
push
js
jns
mov
sub
adc
mov
and
mov
adc
loopne
sbb
inc
and
cmp
cmp
aas
pop
addr16
pop
pop
xor
in
in
js
leave
scas
scas
push
xor
hlt
ljmp
push
and
ds
fwait
add
jmp
repnz
dec
sub
mov
pop
mov
and
inc
mov
add
pop
jnp
mov
mov
cmp
mov
pop
mov
dec
mov
test
pop
dec
lods
stos
enter
insb
xor
aam
test
je
or
cld
fcmovnbe
cmc
inc
stos
sub
sbbb
daa
in
mov
jne
mov
mov
sub
jbe
out
mov
aad
push
cmp
fcom
jno
inc
fwait
das
mov
or
ljmp
mov
and
xchg
js
inc
out
pop
xchg
addl
or
inc
push
fdivrs
add
lea
pop
add
or
in
jecxz
mov
fsubl
adc
adc
inc
scas
fdivl
ljmp
outsw
jg
imul
cs
mov
jno
mov
or
iret
inc
jb
jecxz
les
idivl
enter
or
mov
lret
sub
xchg
int3
pop
fistl
dec
add
add
mov
sar
dec
sahf
and
inc
mov
push
jo
or
sbbb
fmuls
paddd
fs
arpl
adc
push
xor
in
testb
sub
mov
orb
pop
and
outsl
jmp
pop
dec
adc
add
inc
aas
xchg
jmp
stos
out
test
adc
inc
sub
aam
mov
inc
outsb
rorl
dec
jp
pop
push
mov
pusha
push
ja
push
jg
pop
leave
add
test
repnz
outsl
add
and
stc
dec
jp
jp
mov
or
xchg
xor
inc
cld
or
sbb
inc
dec
out
and
aaa
inc
mov
jbe
jle
test
dec
test
adcl
sub
dec
xor
xor
dec
pushf
sahf
xchg
sub
lods
adc
jecxz
imul
js
push
je
and
sbb
cmc
je
or
adc
nop
pop
sub
or
add
push
rcll
rorb
fwait
loop
lock
aas
sbb
add
or
test
lcall
push
cmp
add
add
test
adc
sub
fabs
and
test
lea
pop
push
xor
test
jbe
xor
jp,pn
sub
and
mov
sbb
in
jbe
push
add
popf
jo
clc
adc
loopne
sub
jo
xor
insl
adc
aas
dec
dec
pop
bound
inc
inc
outsl
sbb
mov
pushf
push
out
imul
jecxz
int
test
frstor
sbb
test
shlb
notl
xchg
jle
or
adc
fldt
aad
push
pop
jae
test
cmpsb
xchg
mov
movsb
jecxz
jge
lahf
outsl
mov
pop
cmp
or
mov
push
leave
int3
sahf
nop
imul
decl
imul
mov
jmp
bnd
dec
icebp
jl
sti
call
rcrl
push
lods
mov
or
and
pop
cmp
cli
mov
pop
mov
js
lods
and
iret
stos
xor
adc
iret
mov
in
mov
cmp
push
xor
lcall
dec
add
mov
mov
jns
fisttps
and
in
jle
lret
shrb
fcompl
dec
inc
clc
push
push
rcrb
jb
sahf
lds
jg
imul
lds
lds
imull
xlat
mov
mov
in
outsb
mov
jb
repnz
int3
xchg
int
mov
int
outsl
adc
sub
test
es
mov
fdivrl
mov
mov
mov
fildl
pop
insl
out
out
es
and
mov
hlt
sbb
nop
add
cwtl
cli
jae
cmp
test
rcl
inc
nop
sbbb
adc
cld
push
lds
out
mov
int3
pop
or
repnz
sbb
jne
and
aaa
sub
sub
pop
lahf
adc
xor
nop
leave
push
jae
jg
jmp
adcb
pusha
inc
xchg
inc
sub
daa
outsb
aam
push
je
ss
push
int
mov
loopne
pushw
das
into
push
roll
xor
ret
push
inc
or
dec
cld
push
es
aaa
pop
jnp
in
cmpsl
mov
lea
push
jnp
call
mov
adc
or
mov
or
sbb
subl
inc
dec
xor
cs
subb
notb
mov
mov
adc
and
push
mov
and
pop
push
adc
movsb
mov
xor
adc
push
cmp
sbb
adc
fprem1
jl
mov
mov
mov
ret
inc
int
add
adc
xor
shl
add
and
mov
push
mov
push
out
scas
jge
rorb
sbb
cmpsl
push
lds
movsb
sbb
mov
mov
cld
icebp
int3
mov
data16
mov
inc
int
aam
dec
pop
fs
shrb
jb
mov
pushf
jge
stos
xor
loope
mov
mov
adc
add
into
rorl
mov
cli
mov
mul
pop
and
addl
je
roll
adc
iret
mov
xor
sbb
cmp
lods
push
and
push
and
adc
cmpsl
jbe
xor
in
and
jne
jge
ror
shrl
scas
inc
ss
or
sbb
lret
mov
cmp
leave
test
or
test
xor
mov
jl
and
cmp
lret
jo
and
add
subl
rclb
daa
add
addl
push
and
sti
ret
lcall
adcb
repnz
dec
push
packsswb
dec
movsl
add
xor
add
fs
rcl
fwait
push
cmpsl
jmp
mov
sbb
cmp
xor
scas
xor
mov
mov
movl
or
cmovbe
fsubrl
pop
mov
fstl
cmp
dec
or
test
ss
push
std
mov
lret
sbb
cld
xchg
sub
lcall
clc
ret
sbb
push
sub
icebp
inc
push
and
push
add
adc
inc
xchg
shrb
ret
push
pop
inc
in
aad
inc
push
idiv
sbb
lret
dec
call
test
and
ret
rcl
push
ja
mov
pushf
push
xor
movsl
lcall
cmpsb
sub
mov
stos
or
mov
std
lcall
lret
dec
push
jle
cld
jnp
gs
jg
mov
cltd
lods
lcall
xlat
hlt
lahf
xchg
fucomip
ljmp
sahf
testb
cwtl
daa
js
mov
fwait
mov
pop
push
orb
dec
jb
jge
dec
icebp
mov
inc
mov
and
mov
push
imul
mov
shll
cmp
ret
cli
push
add
aas
jecxz
push
es
xor
adc
mulb
insl
incl
sbb
inc
or
aaa
inc
filds
outsb
add
add
cmp
jne
add
mov
add
pop
jge
pop
pop
mov
jmp
enter
push
adc
je
test
dec
mov
mov
in
enter
aaa
jne
aam
jo
xchg
lods
mov
dec
push
mov
or
dec
popa
in
add
cs
pop
leave
nop
add
adc
incl
add
pop
cld
fadds
fldenv
nop
add
call
pop
int3
sti
jne
dec
mov
lods
add
loop
dec
lret
pushf
ficoms
or
push
call
add
sbbb
adc
inc
loop
mov
mov
push
sub
push
hlt
dec
std
outsl
lea
loope
or
repnz
push
subl
lods
and
mov
stc
pop
xchg
cmp
incl
mov
or
cmp
adc
cld
decl
sbb
iret
mov
pusha
or
and
cmpsl
nop
push
sahf
sub
stos
or
mov
and
cli
mov
lcall
ss
xor
cli
adc
xor
or
jne
aas
xchg
loop
andb
add
mov
pop
sub
outsl
fistpll
lret
scas
xor
xchg
lock
sbb
stos
std
adc
cmpsl
iret
jle
shlb
rcll
int3
xchg
jge
in
push
inc
mov
rol
pop
aad
data16
mov
test
push
icebp
and
push
stos
das
mov
pop
dec
aam
adc
cmp
bound
dec
mov
inc
add
mov
ja
fsubr
push
testl
aad
imul
fdivrp
and
xchg
push
mov
xchg
stos
xchg
xor
mov
push
inc
stc
xchg
adc
or
xchg
mov
stos
or
add
or
outsl
hlt
add
and
cmp
fisubrl
out
sub
pushl
pop
test
mov
sub
pop
clc
pop
ljmp
inc
dec
aam
push
sbb
mov
loopne
jne
sbb
cltd
lret
mov
xlat
xor
xchg
rcr
dec
cmp
mov
xchg
jmp
jge
incb
or
sub
sub
jecxz
outsb
sarb
add
inc
leave
clc
cwtl
or
mov
or
loopne
pushf
lock
push
rorb
jge
sbb
ret
cmpb
and
pop
fcomps
sbb
pushf
adc
push
sahf
lods
jne
shrl
lds
mov
or
fcmovnb
push
pop
test
inc
int
jmp
push
sarl
xchg
add
in
stos
push
loopne
inc
cs
das
mov
cwtl
es
pop
imul
mov
pop
clc
and
nop
mov
arpl
sbb
inc
scas
adc
push
fcoms
cld
sub
mov
outsb
aaa
push
stos
mov
in
lods
pop
push
lock
cmpsb
xchg
lods
dec
adc
enter
mov
or
inc
in
and
xchg
fwait
mov
push
ljmp
clc
xchg
push
jmp
add
add
and
stos
add
jg
xor
dec
repz
inc
dec
push
inc
mov
xchg
and
inc
pop
test
xor
pop
rolb
mov
jnp
and
lock
or
dec
in
les
mov
xor
sbb
pop
push
ficoms
testb
push
fisubl
add
inc
xchg
andl
dec
mov
jno
adc
pop
lods
cmp
filds
enter
std
mov
add
daa
pop
dec
into
or
clc
add
pop
jnp
xor
push
xchg
xchg
aaa
out
xchg
inc
leave
mov
and
jp
push
mov
or
int3
loop
cmpsb
aam
inc
repz
xor
adc
pop
cli
fwait
xchg
orb
lds
fisubl
aaa
push
jg
jg
adc
lret
lahf
sub
push
nop
shlb
out
mov
inc
fs
je
add
ljmp
jl
mov
mov
bound
and
add
mov
jp
test
jne
xor
add
lock
cmp
xchg
das
imul
xchg
aad
adc
adc
mov
ss
mov
lcall
pusha
sahf
and
enter
pop
or
loopne
in
stc
pop
sub
dec
lock
hlt
in
cmpsb
dec
mov
jle
jo
subl
aas
sub
ffreep
mov
sahf
subb
jge
out
addr16
mov
and
sti
push
sub
add
imul
aam
std
out
mov
pop
and
shlb
fs
inc
pop
test
mov
pop
loopne
stos
sbb
jbe
iret
pop
insl
push
mov
les
or
jno
pop
int
imull
jge
cld
das
lock
mov
cld
test
in
stos
push
adc
mov
mov
aaa
mov
fldenv
push
inc
add
movsl
or
addw
jecxz
pop
clc
std
push
mov
lahf
loop
jl
movq
jg
dec
add
sbb
and
std
pop
incl
mov
cli
or
mov
outsl
cli
pop
mov
sbb
mov
addr16
jge
loope
jnp
outsl
orb
pushf
repnz
aam
dec
xchg
inc
clc
outsb
pop
aas
sub
or
incl
push
pop
movl
push
gs
pop
stos
sbb
shr
xorb
jne
and
in
out
inc
sbb
hlt
inc
stos
fimuls
or
add
or
pop
mov
sub
test
mov
push
jmp
add
push
push
pusha
xchg
int
js
imul
pop
sbb
ret
sub
pop
xor
lret
inc
mov
cmc
sub
jne
mov
fisttps
cs
mov
xor
or
cli
sbb
dec
xchg
es
mov
hlt
dec
bound
add
mov
xor
adc
ret
data16
xchg
sbb
jge
and
add
pusha
adc
dec
les
shlb
movsl
fnstenv
xor
shll
inc
mov
movsb
or
sub
in
pop
rcll
mov
pop
xor
nop
sub
inc
in
adc
cs
lods
sbb
mov
inc
int3
fisubs
mov
push
inc
ja
ja
leave
add
call
loopne
xor
orl
mov
iret
xchg
stos
test
out
adc
shlb
call
movsb
mov
add
mov
dec
mov
ja
push
test
pop
jne
out
push
or
adc
ja
pop
pop
adc
jecxz
jle
movsb
andb
dec
daa
loope
inc
pop
lcall
sti
shlb
dec
pop
lock
adc
loopne
inc
add
mov
add
int
js
jne
jnp
loopne
les
sub
into
sub
ss
inc
dec
daa
inc
les
push
dec
xchg
js
push
sub
mov
aam
add
daa
rorl
pushf
fcomps
jae
add
pop
mov
fidivs
cmp
jae
out
fisttps
scas
or
mov
outsl
xorl
mov
xor
in
push
imul
jae
sti
jae
cmpsb
push
mov
inc
arpl
mov
adc
push
and
mov
in
xchg
insb
out
aaa
jns
dec
xor
sub
sti
out
sbb
mov
adc
xor
sbb
mov
mov
inc
inc
dec
jmp
or
pop
xor
mov
or
add
xorb
and
es
divl
push
loop
pop
dec
dec
and
mov
jg
not
negb
lret
not
icebp
cmc
sarl
call
push
call
cmc
push
dec
shr
add
jno
adc
and
inc
fdivl
dec
sbb
dec
jo
xor
mov
arpl
adc
mov
fldt
data16
sub
mov
out
adc
push
push
mov
adc
rorb
movsb
adc
icebp
adc
cwtl
xor
mov
aaa
cwtl
xchg
pop
lock
cmc
push
adc
cmc
xchg
fdivr
ret
mov
mov
dec
je
or
and
enter
rcr
fs
sub
adcl
pushf
sub
sub
mov
fdivrs
cmp
stos
jle
or
cmp
sbb
pop
xor
sbb
pop
push
inc
jmp
adc
push
mov
pushf
adc
movsl
jno
adc
mov
inc
cli
icebp
clc
or
cmc
push
inc
mov
pop
jnp
mov
push
sbb
mov
jo
xchg
mov
and
add
lahf
cli
jbe
adc
sbb
or
sub
mov
fisttps
and
adc
or
inc
add
stos
or
and
push
aaa
jmp
movsb
mov
lea
sub
call
shlb
bound
mulb
das
sarb
inc
std
dec
mov
push
aad
add
scas
fidivs
inc
push
inc
and
imul
mov
pop
lcall
sub
je
je
mov
fucomip
ljmp
in
inc
sbb
xor
xchg
loope
or
jbe
dec
cld
inc
mov
jbe
ss
movsl
daa
mov
testb
sub
and
aam
push
das
je
stc
in
jo
mov
imull
or
inc
dec
imul
xchg
ljmp
inc
cmc
arpl
arpl
leave
mov
test
jo
loopne
xor
popl
leave
and
in
int
jg
pushl
inc
dec
sub
inc
mov
out
ret
mov
inc
lock
mov
xor
rclb
and
jo
dec
add
or
adc
shr
subb
xlat
and
cwtl
xchg
test
add
push
adc
push
bound
je
pop
push
or
and
cmove
and
roll
push
xchg
xchg
mov
add
inc
jl
push
ret
mov
lcall
add
hlt
pop
xlat
cmp
sbb
popf
aam
shrb
push
pop
aad
mov
push
xor
out
inc
int3
push
outsl
mov
pop
pop
cmp
sbb
int3
rcr
xlat
xor
lahf
mov
jge
pop
sub
mov
cmc
cmp
mov
add
icebp
daa
out
fldcw
or
les
sbb
loopne
adc
test
pop
mov
les
out
or
icebp
lock
outsl
adc
call
pop
add
js
lret
mov
lcall
orb
dec
bound
in
dec
call
cmp
or
adc
pushf
int3
inc
push
aad
mov
aaa
mov
sub
add
adc
orb
imul
or
mov
ss
int
add
pushf
jo
ljmp
sahf
pop
sub
rcrb
pusha
cwtl
out
jp
mov
xor
rol
bound
loop
xor
cmp
cmp
in
fidivrs
xor
lcall
call
adc
rclb
ret
rolb
fldt
pusha
fsubrs
push
outsb
push
cwtl
sbb
sbb
push
xor
dec
pop
scas
pop
push
fadds
xor
mov
dec
lret
add
int
lds
test
sbb
loopne
popa
jo
outsb
je
jmp
lret
add
mov
cmp
ret
stos
js
int
sub
lcall
jae
adc
jno
xchg
cmp
mov
movb
sbb
lock
xlat
mov
jnp
xor
pop
push
push
lea
or
xor
pop
sub
sub
dec
xor
lods
imul
mov
fcomps
fadd
mov
inc
jecxz
mov
fwait
mov
mov
sub
mov
sbb
data16
popa
pop
and
dec
jno
or
incb
adc
jns
and
xchg
clc
filds
call
inc
mov
add
push
popf
mov
jae
xchg
fdivrp
mov
icebp
pop
pushf
or
fdivrs
repnz
ret
daa
mov
or
fcoms
gs
shrl
out
cwtl
loope
push
mov
push
xchg
dec
xchg
fwait
pop
mov
sub
sti
pop
and
jbe
mov
adc
xor
pop
push
fimuls
ffreep
add
cmp
jae
sbb
dec
jmp
mov
add
mov
add
cmp
lahf
fldt
sub
pop
lahf
rcrb
cmp
js
push
clc
dec
push
pop
icebp
call
add
jns
xchg
jnp
add
pop
pop
jo
dec
cld
jb
or
data16
xor
scas
mov
rolb
std
mov
loope
mov
pushl
xchg
sub
push
dec
popf
sti
lcall
inc
xchg
in
ficoms
pushf
insb
loope
and
scas
xor
cli
jg
idivl
iret
or
lret
repnz
jle
aam
mov
outsl
fisubrs
and
aaa
aad
repnz
add
add
add
sbb
bound
or
outsb
data16
xchg
arpl
mov
icebp
in
int3
divb
jle
test
sub
adc
inc
add
mov
outsb
push
cmp
out
push
push
push
sbb
jns
and
mov
push
enter
sbb
xchg
out
shl
mov
test
aad
inc
shl
movsb
and
out
fistpll
notb
sete
jae
xchg
mov
jae
and
adc
decl
outsb
xchg
jecxz
dec
adc
in
push
dec
aad
pop
movsl
jae
fisubrs
test
rorb
ljmp
push
mov
cld
jns,pn
loop
rcl
adc
fwait
mov
adc
popf
push
repnz
cld
pop
into
mov
jle
cmp
jge
pop
and
push
fildl
out
mov
cmp
rclb
push
fcmovnbe
mov
mov
inc
enter
jmp
adc
es
mov
in
jecxz
mov
stos
in
das
loop
lea
ret
aaa
jb
mov
aam
stc
add
xor
cmp
icebp
inc
and
add
and
inc
dec
cmc
or
sbbb
inc
adc
popf
dec
adc
roll
adcb
data16
ffree
in
leave
dec
test
adc
xchg
xor
and
sub
cmp
and
lcall
pushw
mov
sbb
adc
jp
mov
stos
pop
mov
mov
outsb
pop
jmp
xchg
test
call
cli
add
inc
int
and
push
xor
pop
imul
pop
loope
ss
cmp
dec
adc
cmp
xlat
cmp
mov
sub
fstpt
into
outsb
add
loope
dec
push
popf
out
add
rorb
adc
imul
pushf
dec
and
push
sub
add
add
mov
test
cltd
sbb
shrl
outsl
cld
pusha
push
and
jp
sbb
adc
xor
adc
jae
ror
pop
andb
sub
out
lock
dec
ljmp
iret
sbb
add
sub
cltd
dec
enter
mov
roll
mov
pop
add
ljmp
push
test
neg
xor
mov
xor
push
imul
mov
mov
repz
adc
test
add
addb
movsb
mov
dec
les
inc
or
push
in
mov
gs
or
outsl
mov
mov
adc
punpckhwd
lock
inc
mov
or
orl
fsts
cmp
xorl
cld
inc
inc
shrb
pusha
int3
mov
aaa
and
cmp
cmp
push
ss
or
les
jb
push
imul
incl
ret
jno
outsb
daa
or
por
movsb
popa
rolb
add
add
or
mov
fistps
sub
je
dec
orl
sub
push
ret
mov
jne
inc
xor
enter
data16
mov
mov
ret
fcoml
call
mov
xor
lock
fs
ljmp
push
fldenv
subl
test
fldcw
lcall
xor
insb
mov
cmp
and
sarb
xor
mov
test
nop
test
addr16
testb
inc
mov
mov
loop
adc
rorb
sbb
pusha
mov
sub
cltd
add
dec
cld
jg
push
call
xchg
and
dec
push
test
add
jecxz
pop
pop
loopne
pop
and
cltd
dec
cmpsl
or
outsb
dec
dec
mov
or
iret
adc
jnp
idivb
jmp
test
test
arpl
mov
psrad
adc
dec
mov
ds
cltd
insb
xchg
das
in
jg
loopne
or
in
adc
push
lcall
or
lods
lret
sbb
jp
mov
mov
insl
loope
mov
lahf
pusha
adc
fimull
mov
jo
jo
add
sub
insb
das
cld
or
xor
xor
roll
mov
add
jle
dec
push
sub
das
inc
dec
andb
cmpl
lds
enter
xor
mov
icebp
lcall
push
adc
pop
adc
pop
je
outsl
fnstsw
cmc
and
adc
and
jp
lock
rol
cwtl
xorb
jl
ljmp
xor
scas
jg
pusha
push
xchg
adc
outsb
idiv
and
mov
out
arpl
insb
lock
push
or
ror
cmc
and
popa
inc
mov
xlat
add
test
loopne
add
jge
lret
mov
xor
dec
sbb
jp
int
divl
incb
sbb
mov
mov
cmpsb
lock
addr16
les
sub
clc
incl
mov
sbb
cmpb
sbb
mov
inc
cmc
mov
out
js
mov
lods
xchg
cmpsb
ret
or
sub
enter
fwait
loope
inc
icebp
and
fcomps
cmc
lods
dec
std
lds
pop
repz
or
add
lret
lcall
add
sbb
movb
lcall
imul
dec
fsub
stc
push
rolb
mov
fs
xchg
push
icebp
repnz
rorl
add
fwait
jge
push
mov
xchg
and
dec
inc
shrb
push
insl
jge
push
inc
popf
and
dec
fists
jne
push
pop
loop
pop
xor
subl
int
popa
loopne
xor
je
bound
xchg
fs
mov
addb
add
int
cmp
jne
lock
clc
lcall
sbb
fstl
cld
mov
mov
stos
inc
sahf
or
xlat
mov
pushf
aad
call
push
leave
fsubs
add
fdivrs
fdivl
and
in
test
jne
mov
mov
cmc
pop
push
xlat
ljmp
outsb
stos
sbb
mov
push
mov
sub
jb
push
jl
faddl
imul
add
adc
js
pop
punpckhbw
add
add
loope
push
rcrb
bound
mov
loope
dec
add
add
mov
loop
sub
or
adc
out
test
add
sbb
sub
mov
fiadds
pop
cwtl
xor
xor
add
lock
inc
add
and
push
xor
xchg
icebp
pushl
jmp
dec
fcmove
dec
jns
xchg
push
dec
call
dec
gs
mov
xor
out
push
aas
inc
in
imul
es
in
jbe
cmc
ja
inc
add
insl
mov
or
mov
dec
xor
sub
mov
mov
adcl
or
xor
jp
cmpsw
repnz
sub
popa
lds
test
or
test
cmpsl
lcall
ss
cli
push
shlb
icebp
std
dec
fucomip
ljmp
int3
int3
mov
ljmp
cmc
push
jecxz
ret
and
call
fstpt
les
fbstp
roll
sahf
xchg
lahf
sahf
hlt
roll
pop
loopne
xchg
out
sbbb
push
andb
sub
int
in
jp
mov
adc
icebp
mov
andb
stos
fs
mov
mov
lahf
mov
push
add
out
in
adc
inc
cmpsb
outsl
aad
ljmp
dec
push
and
cmp
cmp
call
mov
imul
sbb
bound
fwait
jbe
add
jp
mov
inc
mov
xchg
adc
test
lahf
sub
add
mov
hlt
add
xor
std
mov
dec
std
cmpsl
mov
outsb
cld
or
pop
jae
ljmp
out
and
insb
xor
push
jl
rcrb
jg
adcl
push
inc
adc
and
lea
std
sbb
loopne
and
cld
fldt
sbb
out
inc
push
aad
cmc
jbe
and
pop
xchg
data16
sti
inc
cmc
and
mov
or
test
incl
les
push
out
add
clc
jp
ljmp
adc
in
sub
sbb
gs
int
sti
addr16
fwait
add
jecxz
dec
push
pushf
cld
roll
or
cld
outsl
paddw
test
loop
mov
les
call
inc
aaa
addb
pop
sti
scas
cli
mov
out
jo
pop
sbb
repnz
cmp
in
sub
jbe
pop
mov
pop
stos
popa
pop
add
sbb
stos
pop
lahf
call
gs
test
mov
fstpl
addb
inc
or
jbe
pop
aam
adc
or
pop
add
jl
pushl
sub
ja
shll
roll
xchg
sub
aad
ja
aas
jo
movsb
xor
add
pusha
pop
or
sub
dec
inc
xchg
addb
add
jg
stos
mov
push
into
mov
mov
jge
test
loopne
inc
loop
js
xchg
add
sbb
jae
test
addr16
outsb
outsl
pop
push
add
xchg
outsb
out
nop
mov
outsl
push
sbb
push
push
xchg
cli
imul
pop
or
jge
push
jmp
push
mov
dec
mov
rorb
and
adc
inc
divl
push
xchg
xchg
xor
sub
pop
movl
test
std
sbb
xchg
pop
scas
dec
xchg
ffree
xor
pop
inc
mov
push
inc
adc
ljmp
sub
sbb
vsubps
push
outsb
aas
xchg
cwtl
lcall
push
std
dec
mov
dec
inc
jle
loop
adcl
lods
gs
decl
fsts
shrl
call
and
push
bound
daa
add
cmp
pop
sahf
sbb
jns
outsl
mov
sbb
daa
jbe
jbe
andl
adc
icebp
cmp
cld
add
or
lods
sbb
scas
jo
push
popa
enter
dec
pushf
mov
iret
mov
dec
mov
jge
push
lcall
addl
adc
push
sub
or
xor
add
push
mov
lea
sbb
cs
int
mov
mov
adc
and
add
ljmp
mov
pushf
or
mov
enter
dec
cmp
hlt
mov
mov
adc
jns
mov
push
pop
xor
rol
faddl
dec
gs
out
lea
mov
mov
fiaddl
adc
add
loop
aam
push
xor
pop
aaa
mov
fwait
mov
cmp
repnz
js
jnp
nop
adc
jnp
mov
adcb
mov
add
call
lahf
test
ret
xor
subb
iret
sbb
std
imul
hlt
adc
push
push
addr16
xchg
inc
icebp
dec
sub
sub
cs
xlat
inc
xor
dec
xor
adc
jmp
xor
mov
inc
out
hlt
xor
add
pop
xor
push
xor
push
push
dec
pop
pop
addr16
inc
sub
addb
int
rorl
sub
dec
xchg
ja
cltd
and
bound
add
mov
xor
clc
jo
test
bound
add
inc
cwtl
pop
push
les
push
repnz
push
push
jl
hlt
shrb
sub
jb
adc
loopne
imul
push
inc
jb
bound
pop
fldt
cmp
jmp
sbb
fisubrs
dec
out
sbb
xchg
sub
mov
es
sub
add
add
test
loopne
lea
scas
and
fwait
xor
rcr
push
add
or
in
test
test
jo
ret
mov
mov
inc
mov
int
add
add
add
push
outsl
sub
imul
out
clc
cwtl
decb
push
add
mov
xor
movsb
sbb
add
push
lret
sub
rclb
in
js
call
sub
jae
std
inc
mov
lcall
add
sub
push
and
inc
jae
push
adc
mov
test
xchg
and
fiadds
ljmp
test
scas
add
test
mov
call
pushf
ds
jne
push
test
fdivrs
jg
mov
add
mov
lahf
aas
add
mov
and
push
jg
adc
xlat
outsb
ret
inc
dec
rcl
jecxz
test
or
cmp
shl
add
or
jl
xorb
jo
push
outsl
jo
movsb
dec
push
adc
std
jmp
dec
subb
ljmp
adc
or
pop
jae
sub
or
adc
les
adc
mov
in
mov
mov
mov
mov
push
stos
sbb
fistl
aad
roll
or
or
mov
mov
add
and
stos
fmul
cmp
ljmp
mov
shl
das
cmpsl
jne
jae
cmp
mov
jge
clc
xor
int3
movsl
out
shlb
lahf
sbb
cli
mov
jno
popf
push
sbb
sbb
mov
loop
mov
repz
jg
mov
xorl
scas
pop
inc
xlat
jne
mov
cmp
mov
movsl
push
aam
mov
dec
inc
add
xchg
pop
jp
clc
inc
inc
das
inc
ret
cmp
clc
sub
negl
hlt
lods
push
mov
jmp
mov
or
push
sbb
xchg
out
xor
add
add
mov
sbb
push
sub
movsb
lcall
std
notl
les
jnp
std
sbb
popf
int
jl
fbld
incl
jp
scas
test
xchg
call
jae
xchg
popf
je
pushf
shll
xor
sbb
jo
movsb
xor
add
add
dec
add
jl
mov
sar
fildll
fnstsw
push
mov
add
sub
and
aas
push
add
xchg
sub
mov
jge
popa
pop
sbbl
and
mov
xor
popf
dec
into
stos
jmp
xchg
aaa
int3
push
cs
mov
leave
mov
mov
push
xchg
xchg
rorl
aam
jne
into
and
sub
stc
mov
cmc
sbb
cli
inc
sub
je
insl
testl
xor
cmp
lcall
sub
sub
lea
sub
pop
pop
cli
cmp
mov
add
push
sbb
xchg
lock
js
add
outsl
sarl
xchg
pop
or
xlat
mov
pop
cli
xchg
xor
or
inc
arpl
xchg
and
pop
fbld
ss
movsl
fistpl
adc
in
aaa
mov
pop
adc
out
adc
xor
dec
fstpt
fadds
je
mov
pop
cmc
or
xorb
inc
out
daa
dec
scas
cltd
cmpl
jbe
or
dec
andl
adc
cmpl
pop
xchg
js
fnstenv
pop
in
inc
mov
loop
pop
fisttpl
xor
dec
mov
rolb
inc
sbb
push
sub
scas
jg
jmp
aam
push
xchg
fadds
xchg
xchg
adc
adc
jnp
sub
jmp
cmp
insb
fisttpl
jnp
mov
mov
int3
rorb
sbb
call
sub
sti
mov
dec
xchg
inc
push
adc
mov
stos
mov
push
dec
mov
push
sub
pop
cmpsl
push
xchg
mov
test
push
mov
mov
mov
lcall
sub
xor
hlt
gs
sub
push
xchg
fldt
adc
lock
and
loopne
mov
or
xchg
jns
inc
mov
pop
loop
add
pop
push
scas
mov
or
pop
rorb
xchg
nop
movsb
test
ljmp
cmc
add
fdiv
fidivs
mulb
fdivrl
mov
mov
jg
loop
imul
jns
xchg
mov
sub
inc
sbb
inc
add
das
xor
and
pop
cltd
pop
adc
dec
inc
loopne
mov
inc
lea
adc
sti
add
call
and
mov
push
or
pop
jo
icebp
push
lea
sub
mov
rcr
push
mov
cmp
sub
rolb
iret
jge
in
mov
out
insl
inc
out
jg
or
xchg
xlat
decl
stos
dec
sub
mov
loop
cmp
stc
add
fcmovb
pop
add
inc
push
ret
call
rcrb
add
pop
mov
adc
pusha
and
shll
jno
jmp
mov
outsb
mov
cmp
enter
or
shrb
popf
add
in
iret
jb
xchg
or
xor
cwtl
lea
lds
sahf
xor
loopne
js
cs
out
push
das
pop
in
or
or
mov
cmp
dec
inc
mov
xor
repnz
push
mov
enter
and
shll
mov
je
or
jg
ja
jecxz
jno
xchg
jmp
loopne
or
and
inc
repnz
add
mov
hlt
sbbb
xor
hlt
add
or
adc
mov
add
add
or
and
fimuls
imul
mov
adc
push
xor
xor
dec
mov
push
loope
fucom
outsl
xchg
data16
and
sarl
stos
dec
push
flds
stc
mov
pop
and
cmpsb
adc
in
aam
xor
mov
cwtl
in
xor
add
mov
sbb
cmc
adc
dec
push
ror
mov
je
sbb
sub
mov
mov
xlat
cmp
adc
cmp
mov
repz
sub
fmuls
je
into
in
ja
sbb
adc
je
popf
push
lock
pushl
jge
jl
mov
inc
pop
shrb
mov
data16
out
jbe
inc
sub
and
sbb
sahf
pop
jno
inc
xchg
adc
xchg
fcomip
mov
sti
xlat
cmc
ret
and
sbb
push
add
jo
xor
outsb
rcll
pushf
mov
les
shll
test
pop
and
inc
insb
adc
inc
dec
lcall
in
lret
mov
shrb
cmp
push
test
ret
das
inc
or
or
pop
cmp
xchg
mov
lcall
sahf
xor
mov
mov
adc
lret
xchg
std
or
inc
jmp
scas
mov
push
sub
jl
push
pop
sub
stc
negl
cmp
scas
lret
loopne
adc
xchg
add
in
imul
dec
inc
or
pop
andl
aad
mov
rolb
int
push
mov
jns
insl
xor
sub
dec
add
ljmp
das
inc
cmp
test
push
mov
jne
adc
mov
jbe
sbb
fmull
pop
dec
mov
scas
inc
filds
xor
push
cs
or
adc
xor
xor
roll
xchg
jnp
inc
jl
and
lcall
ljmp
in
aad
sbb
and
add
mov
push
cwtl
mov
filds
test
pop
ret
jbe
lock
mov
jns
cwtl
or
adc
lea
add
jle
jno
rolb
xor
xchg
addl
std
or
shll
push
push
sub
das
cmp
inc
inc
hlt
iret
cs
adc
mov
add
xor
pop
mov
clc
add
pop
mov
adc
and
dec
mov
or
and
inc
mov
push
jae
and
loope
add
aam
xchg
mov
ret
mov
jo
mov
nop
inc
lds
push
inc
xchg
popa
dec
cwtl
and
in
aad
or
clc
xlat
cmp
xor
pusha
add
and
loop
and
push
ja
out
loope
dec
mov
mov
les
sbb
dec
adc
and
xor
ljmp
ret
icebp
dec
push
add
xchg
inc
cwtl
adc
popa
add
inc
dec
adc
add
pushf
shlb
nop
and
xchg
and
sbb
xor
mov
dec
aad
sbb
adc
xchg
or
pop
mov
mov
adc
sub
cwtl
fimuls
pop
test
ud0
leave
mov
sahf
mov
xchg
xorb
out
ja
inc
add
and
sbb
jmp
arpl
mov
add
mov
cmp
sub
jno
or
adc
inc
xor
jno
fcomp
add
or
push
add
lahf
adc
inc
cltd
sub
ja
int
xor
push
subb
sbb
xor
mov
popa
daa
sbb
popf
sahf
inc
sbb
jl
mov
mov
int
out
orb
xchg
ret
push
jo
out
push
add
sub
mov
mov
cmc
loop
sbb
add
sbb
or
stc
rorb
std
inc
int3
jb
add
nop
dec
fwait
adc
push
insl
xchg
pop
aas
jg
adc
pop
mov
mov
mov
pop
testl
js
clc
sbb
neg
mov
add
and
test
dec
lock
mov
mov
lock
int3
dec
bound
push
push
imul
loope
xchg
stos
test
enter
in
pop
lock
jne
xchg
or
and
adc
xchg
nop
inc
cmp
aam
add
mov
inc
dec
push
std
push
push
mov
test
aad
paddd
xlat
jne
ficomps
push
inc
mov
pop
and
mov
pop
sub
insb
ja
jne
add
sbb
sbb
mov
fwait
xor
dec
notl
add
push
ja
les
iret
adc
in
or
out
ret
sbb
adc
xchg
and
into
pop
lock
push
outsl
add
int3
and
jns
mov
xor
js
inc
js
pop
adc
sub
xor
xor
cwtl
pushaw
dec
and
sub
test
mov
int3
inc
iret
loope
sub
fs
rclb
mov
adc
inc
or
push
mov
dec
cwtl
mov
add
xor
sbb
dec
inc
adc
mov
imul
out
loop
js
inc
xor
stc
and
cmpsb
fdivrs
mov
cmpsb
adcl
imulb
ret
js
or
pop
adc
test
or
adc
jp
insl
jle
add
jle
cwtl
dec
rclb
add
mov
cmp
out
mov
xchg
incl
xor
sub
inc
out
sub
addb
call
loope
inc
push
pop
and
adc
mov
test
cmp
add
aaa
push
jmp
ljmp
test
mov
sbb
add
ror
add
loope
fdivl
ds
jge
mov
dec
popa
jae
ss
roll
push
fildll
push
push
shrb
lds
fldt
pusha
pop
lea
mov
mov
mov
es
rclb
inc
fistpl
fldt
test
jmp
sbb
pop
sbb
mov
ljmp
lret
add
test
xchg
pop
jp
das
add
mov
rorb
ds
addl
or
mov
hlt
cmp
jb
or
dec
fxch
or
push
jg
pop
nop
in
ja
mov
test
mov
jbe
sbb
fs
out
ret
fcoml
pop
cmp
hlt
movsl
cmp
sub
fdivrp
call
xchg
pop
add
out
adc
popa
in
nop
sbb
ljmp
loop
sarb
mov
and
jg
scas
sti
popl
ret
int
test
mov
sub
jo
push
outsb
int3
cwtl
adc
ret
cld
mov
add
insl
aaa
jb
jge
add
std
pop
and
movsl
add
push
mov
push
cmp
mov
jae
xchg
push
and
mov
lods
mov
call
out
jle
add
cmp
int3
fcoms
mov
pop
pop
ficoms
outsl
icebp
aaa
push
pop
jmp
mov
dec
mov
imul
arpl
std
decl
stos
dec
mov
mov
test
xchg
sahf
sbb
push
cmp
icebp
push
lds
sbb
fnstcw
lcall
int3
mov
sar
mov
sarb
cli
inc
dec
mov
cmpl
movsl
sbb
fisubl
xchg
rcl
push
mov
sbb
push
data16
test
shll
and
push
mov
dec
mov
push
into
cwtl
push
ret
sub
mov
shl
mov
into
mov
daa
push
add
lds
add
push
or
add
push
push
xchg
sub
xor
inc
fisttpll
cmpsb
pop
dec
push
xor
mov
or
push
push
inc
jp
mov
xor
pop
jl
out
dec
imul
ret
mov
jg
xor
aas
das
lock
xchg
bnd
imul
ja
les
dec
sbb
repnz
mov
les
icebp
adc
inc
popa
xchg
sti
sbb
sbb
push
mov
jmp
adc
test
testl
loop
pop
sbb
and
out
sbb
push
jl
je
rcr
lahf
fxch
mov
jp
jmp
mov
push
and
shrw
xor
jno
inc
push
or
sbb
and
add
push
stc
pop
hlt
push
std
sahf
stos
pop
mov
adc
add
dec
mov
fdivs
adc
pop
and
ja
sub
mov
lock
pop
loop
enter
or
mov
jb
jecxz
rolb
mov
cld
fstpl
add
xchg
sub
adc
dec
fdivrs
lahf
mov
int3
orb
adc
test
add
clc
fimull
pop
lret
adc
cmp
js
daa
pop
sub
or
mov
and
push
inc
pop
mov
dec
shr
shlb
push
pop
jno
in
fidivrl
ljmp
jbe
stc
mov
add
mov
out
xchg
mov
inc
es
mov
rol
ja
inc
cwtl
test
icebp
mov
mov
push
cmc
lds
and
add
ljmp
sub
add
lea
pushf
inc
insb
mov
mov
or
add
push
ret
pop
aas
push
clc
cmpsl
js
std
jg
in
jno,pn
bound
add
mov
add
movsl
movsl
test
das
lock
out
and
mov
xchg
adc
push
mov
lret
jmp
inc
xor
xor
mov
adc
enter
lcall
push
cwtl
test
add
pop
data16
push
std
pop
out
ja
scas
jns
xchg
jecxz
push
xlat
cmpsb
pop
inc
insl
das
xor
enter
ds
outsl
int
dec
insl
mov
jg
out
or
push
std
outsl
adc
sbb
andb
mov
mov
mov
cmp
or
jp
and
xor
jbe
dec
mov
cmp
push
push
xchg
sbb
jae
addr16
push
das
adc
xor
sub
stos
popa
sub
mov
repz
std
aaa
and
daa
or
mov
sbb
mov
les
mov
clc
pop
adc
dec
fadds
mov
fstps
pop
sbb
jge
xor
inc
out
fists
or
push
test
fmull
jns
sub
mov
rol
bnd
xchg
loop
lahf
add
test
jae
mov
cltd
add
xchg
jg
decl
dec
and
push
aam
sbbb
mov
insl
lock
mov
cltd
mov
xor
push
mov
add
ss
or
add
call
jbe
cmp
add
jle
add
int
lock
pop
outsl
cmp
fstpt
add
sbb
dec
icebp
jle
outsl
inc
inc
das
cld
mov
imull
mov
popa
or
mov
addb
sbb
rorl
lcall
lahf
pop
mov
fucomip
mov
aam
jno
jge
and
cmc
mov
aam
aam
push
rcll
add
cmp
cs
les
aaa
hlt
mov
lock
movsb
stos
das
pop
in
mov
rorb
xchg
test
adc
add
add
or
sti
jmp
scas
inc
cmp
test
sub
adc
or
jecxz
rolb
xor
xchg
incl
lds
call
jge
jp
sbb
jo
outsl
incl
adc
sub
dec
ret
iret
cmp
fbld
mov
xchg
pop
shl
jne
adc
cmc
mov
outsl
fistl
pop
mov
mov
push
xor
jecxz
pop
xchg
ja
adc
mov
out
mov
icebp
or
nop
mov
xor
insb
std
das
movsl
imul
inc
mov
xlat
sbb
sub
sbb
mov
adc
or
sarl
mov
add
inc
mov
push
popa
sti
rclw
jbe
andl
mov
xchg
cmp
mov
aaa
clc
mov
lock
sarl
inc
int
adc
mov
cmc
cli
cwtl
inc
stc
xchg
addr16
pop
fmul
sarl
adc
fstl
ret
lea
fstpt
pop
rorl
add
and
pop
addb
loopne
push
xchg
mov
push
cmp
or
mov
imul
adc
push
out
adc
adcb
push
hlt
and
fistpl
mov
xchg
jge
cli
or
test
data16
pop
lds
movsl
push
ja
ja
push
dec
sti
fs
insb
push
sub
or
xlat
jae
push
mov
xchg
push
call
sub
cwtl
adc
or
lcall
imul
jno
sbb
sub
xor
in
inc
jg
or
mov
fsubrl
cli
mov
lock
pop
pop
inc
call
cmc
lods
fdivl
inc
xchg
or
imul
push
mov
push
roll
test
jmp
add
sub
lret
inc
sar
rolb
lods
call
lods
shll
lods
and
push
mov
mov
pushf
push
test
int
sbb
daa
jle
stos
pusha
addr16
sub
inc
cmp
mov
mov
pop
mov
inc
fidivrl
add
into
adc
cmp
xchg
cmp
lcall
mov
pop
popa
test
mov
sbb
pop
shlb
iret
mov
sbb
lret
cli
pop
pusha
insb
aaa
stos
xor
or
test
mov
ret
out
dec
pushf
pop
add
mov
jne
add
jmp
inc
pop
mov
add
xor
arpl
jg
sarb
mov
mov
scas
and
sti
dec
push
pop
stos
xchg
fimuls
lods
and
sbb
xor
pop
in
inc
inc
adc
roll
jecxz
sbb
sbb
adc
cmp
adc
cmp
jae
xor
out
add
push
roll
filds
inc
or
dec
cmc
inc
add
inc
inc
sub
test
jbe
inc
cmp
repz
call
sub
in
jnp
movsb
sub
popa
or
sub
pop
xchg
daa
add
add
xor
sub
icebp
or
push
xor
xor
cmpsl
rcrl
sub
sub
sbb
or
dec
and
inc
insb
mov
xchg
adc
push
in
sbb
test
or
loop
add
addr16
sbb
insl
inc
mov
ja
add
fiadds
test
lret
ja
aas
rcll
imul
cmpb
and
int3
clc
cmpsl
add
cltd
dec
enter
cmp
lret
in
je
dec
inc
dec
push
inc
dec
inc
sti
scas
add
mov
mov
out
imul
xor
pop
es
push
mov
mov
fdivl
sub
mov
xchg
adc
cmp
fisttpll
pop
mov
lds
loopne
sarl
mov
dec
cmp
cmp
inc
cmp
sbb
fbld
fwait
or
repz
mov
mov
mov
xchg
adc
outsl
pushf
mov
dec
cmp
sarb
lahf
mov
adc
pop
mov
mov
outsb
icebp
jge
add
xor
pop
lods
icebp
cmpsl
outsl
inc
and
adc
pop
pop
rorb
and
pop
adc
gs
mov
jl,pn
sbb
inc
and
inc
mov
mov
icebp
jmp
arpl
stc
loopne
mov
pushl
jmp
and
lret
push
mov
cmp
sub
dec
std
hlt
idiv
add
push
jmp
jae
cwtl
dec
shl
push
sti
mov
inc
sbb
inc
sub
and
or
mov
xchg
mov
mov
jnp
xchg
jg
dec
and
jns
aad
mov
das
xchg
xchg
and
sub
cmp
jg
jmp
roll
in
xchg
int3
aam
out
cmp
push
lret
mov
fadd
add
xchg
xchg
xor
sbb
inc
icebp
out
mov
in
rorb
sub
dec
pusha
in
cmc
or
imulb
bound
test
mov
sub
xchg
cli
call
and
xchg
lds
or
push
lods
adc
mov
sbb
push
into
sub
mov
adc
adc
in
cmpsl
pop
popf
or
pop
sub
push
add
mov
in
push
outsb
mov
fwait
out
jg
pop
mov
pop
loop
mov
ljmp
xchg
fildll
pushl
clc
fcmovnb
add
dec
pop
mov
mov
ror
push
fmuls
pmulhuw
into
ljmp
aad
out
sub
adc
inc
out
cmp
aas
lock
scas
cmpsl
jecxz
inc
daa
std
pop
adc
and
inc
test
cld
ds
jge
mov
inc
aam
dec
jecxz
dec
ret
jg
in
pop
aad
out
cltd
cmp
pop
mov
xchg
popa
push
lcall
imul
in
mov
fimuls
cld
jl
cld
xor
cs
push
push
mov
test
mov
rolb
ret
mov
loop
aad
add
lods
call
loop
movsb
add
add
push
inc
test
mov
sub
add
insb
jmp
ud1
pop
or
xchg
push
pop
arpl
sbb
cmp
mov
pop
cwtl
adc
clc
mov
or
xchg
xchg
adc
pop
mov
std
stos
mov
nop
xchg
dec
addb
jge
xchg
xchg
push
add
test
ficoms
jp
jns
sbb
fstps
shll
cwtl
mov
push
xorb
insl
xor
xor
fisttps
or
and
fildl
ret
pop
add
loop
pop
inc
push
add
scas
subl
data16
inc
aam
adc
loop
das
mov
mov
mov
ja
push
mov
jmp
je
lea
stos
cli
mov
and
xchg
or
cmpl
pop
nop
push
jge
adc
jbe
fmul
add
daa
loopne
push
sub
ret
inc
add
enter
xorb
or
jg
or
add
sub
mov
shll
jno
stos
add
xchg
mov
cmp
ror
mov
mov
aaa
rorl
dec
nop
lret
icebp
add
cltd
ficoms
adc
cmp
cmp
cld
enter
pop
jne
mov
pop
clc
iret
adc
lldt
pop
sar
pop
fisttpll
sub
in
test
pop
dec
mov
popa
jp
cmp
mov
and
cmc
mov
cmpsl
mov
clc
xor
mov
out
cmpsb
push
jmp
lock
adc
test
mov
push
sarl
bound
add
mov
sahf
fxtract
test
mov
pop
xchg
andb
push
cltd
push
rcll
js
test
stos
jns
inc
add
outsb
das
icebp
cmc
push
loop
lds
stc
pop
jnp
cmp
cld
xchg
pop
sub
ljmp
mov
icebp
mov
pop
jecxz
in
dec
mov
stos
mov
js
sub
pop
mov
push
push
xorl
out
or
push
sub
sbb
cmp
lahf
lock
mov
movsl
test
fisttpll
bound
add
push
mulb
dec
adc
jae
pop
lcall
lock
out
aam
or
out
sub
scas
or
mov
call
out
inc
outsl
adc
scas
imul
lods
mov
aaa
aad
jg
outsl
add
dec
in
dec
fldl
lret
add
push
ja
rorb
pop
jl
cmp
add
in
cltd
lahf
jns
and
aas
jmp
out
add
add
imulb
pushl
and
rorl
sbb
jne
ror
xor
ret
aas
repz
andb
outsl
mov
inc
xchg
in
jg
int3
dec
jno
sahf
shl
push
int3
seta
pop
clc
pop
adcb
mov
mov
stos
pop
leave
sbb
pusha
xor
jecxz
incl
pop
jg
mov
xor
cwtl
inc
lock
jmp
fsubrs
insb
incl
aas
ljmp
and
or
sub
std
pusha
outsb
adc
movsl
dec
test
lods
mov
int
jmp
jle
out
mov
xchg
adc
aam
addb
clc
insl
mov
adc
and
dec
stos
pop
mov
imul
add
dec
les
dec
daa
dec
pop
sub
xchg
cwtl
mov
adc
sub
sub
mov
inc
cmp
sub
rcrb
fisubrs
xchg
sbb
mov
data16
pop
orl
xor
adc
scas
adc
testb
jbe
push
int3
sbb
cwtl
inc
daa
ja
fstl
xor
imul
push
movsb
add
aad
mov
mov
pusha
je
add
dec
shl
mov
imul
push
sbb
mov
xadd
inc
sbb
and
pop
and
roll
cs
fnstenv
inc
or
stos
xor
add
push
dec
xchg
movl
sub
or
imull
ficoms
mov
js
mov
loopne
mov
shrb
repz
aas
dec
clc
adc
mov
push
xchg
test
add
pop
andl
ljmp
icebp
sti
xchg
lds
jbe
out
roll
leave
ret
es
out
jl
pusha
out
jmp
pop
shlb
or
inc
add
dec
rcll
je
fisubrl
lret
xor
xchg
insb
lret
subb
popa
xchg
lods
pop
cmp
dec
shl
filds
ja
in
add
mov
add
or
ret
cmp
imul
cmpsb
jge
adc
mov
jb
push
loope
rorb
dec
rolb
aas
jmp
cmp
je
dec
aam
insb
ljmp
add
mov
mov
and
popa
icebp
and
aam
sbb
shlb
cmc
pop
adc
ja
push
push
loopne
popf
mov
and
orb
or
push
pop
mov
pop
movsb
adc
int3
push
incl
aam
push
xchg
adc
scas
push
rclb
push
jne
and
dec
dec
int
clc
les
pop
jge
loop
fistpl
mov
sbb
sbb
xchg
lahf
jae
mov
test
pop
inc
out
lds
push
les
scas
fdivs
push
push
dec
aaa
jo
and
out
pop
lahf
into
in
xchg
xchg
ss
jg
repz
mov
gs
pop
test
lock
je
loop
jg
hlt
add
cld
inc
jle
sbb
inc
pop
mov
shrl
cmp
lock
jb
mov
xchg
sub
or
xor
xor
or
loopne
loopne
cld
cmp
or
lcall
adc
jecxz
push
mov
call
and
dec
pushf
pop
sbb
inc
shll
call
test
mov
sti
dec
push
stc
dec
jb
mov
mov
lcall
mov
xchg
scas
sub
scas
mov
pop
or
and
loope
jo
sbb
push
pushl
add
fsubr
xchg
pop
pusha
dec
adc
push
lock
add
inc
xor
cmp
cmpsb
cld
lahf
iret
mov
pop
mov
dec
cmp
dec
pop
sub
sub
cmp
cmp
cwtl
add
mov
stos
jmp
mov
push
push
add
mov
push
es
xor
jl
inc
add
sbb
negb
inc
outsl
fdivr
ret
mov
xlat
imul
adc
in
insl
and
mov
cmp
and
test
fsub
mov
out
fildl
decb
and
shr
in
xorb
incb
jae
jecxz
push
mov
rorb
push
insb
sbb
fstpt
shll
adc
clc
add
cmpsl
shrb
js
push
into
or
cld
sbb
push
inc
aam
stos
xchg
push
cmc
ret
pop
daa
mov
or
jg
aad
dec
pop
push
repz
fucomip
mov
sub
or
fsubrl
pop
sbb
decb
sub
fstl
mov
inc
adc
or
mov
fisubrs
add
in
sbb
sbb
outsl
pop
cld
decl
js
fs
adc
add
loope
xor
insl
push
std
cmpsb
mov
adc
mov
push
xchg
lods
stc
ss
push
fwait
pushl
nop
ja
dec
dec
xchg
mov
jo
adc
pop
hlt
fsubrp
lock
outsl
xchg
popf
lds
add
and
in
push
pop
js
ret
add
pushf
jmp
jmp
cwtl
pop
jnp
mov
push
dec
sub
lods
adcl
push
cltd
sbb
ljmp
xlat
jecxz
cmovg
int3
and
cmpsb
call
pushl
ds
insb
jb
pop
pop
or
xchg
fnstcw
pop
clc
outsl
insl
mov
pusha
mov
add
mov
dec
inc
adc
mov
xchg
lea
adc
xor
dec
cmc
mov
and
xor
mov
call
xor
das
ret
addr16
loopne
adcl
out
int3
fs
ss
pushl
and
aad
jp
cmp
pop
loopne
jae
mov
incb
ret
push
inc
or
ret
filds
push
decl
sbb
iret
jo
cwtl
add
xor
mov
fwait
test
push
fst
das
iret
and
jmp
jbe
inc
mov
sahf
ljmp
cld
pop
xchg
ds
clc
mov
pop
xlat
mov
bound
mov
dec
icebp
std
popf
cmpsl
jecxz
mov
sub
xchg
push
les
cmp
imul
add
jb
push
ja
adcb
ljmp
sbb
fs
inc
cs
pop
lret
das
or
mov
mov
jno
nop
into
xchg
mov
inc
jmp
mov
sub
mov
arpl
mov
lods
fisubs
enter
push
inc
fcom
mov
or
ds
adc
jmp
sbb
sti
inc
rcl
add
test
mov
jle
sbb
inc
inc
in
mov
mov
push
inc
popf
outsl
cld
mov
sub
popa
aas
sub
and
mov
cmpl
cmp
call
mov
out
decl
fnstenv
and
test
test
inc
mov
mov
outsl
mov
adc
mov
xchg
sub
das
test
dec
hlt
push
sti
fs
cmpb
xlat
fdivs
clc
sar
sti
cmpsb
aam
xchg
adc
movsl
notl
movsl
jecxz
addl
sbb
xor
xor
pop
dec
cmp
cli
ja
loope
sub
leave
nop
idiv
in
aas
or
xchg
push
cmp
mov
popf
adc
sbb
push
jge
test
lods
int
xor
outsl
add
into
int
hlt
cld
inc
mov
les
mov
push
addb
cwtl
mov
pop
je
xor
xor
sahf
xchg
fisubrs
mov
pop
inc
repz
pand
push
cmpsb
popa
loopne
ret
jmp
adc
shl
adcl
pop
shrl
and
outsb
push
push
adc
loop
xor
push
push
mov
scas
int
fsts
sbb
fnstcw
xor
out
pop
or
icebp
xchg
mov
das
mov
addr16
adc
imull
add
movsb
mov
popa
test
jns
cmpsb
jnp
cmp
fistps
dec
leave
icebp
inc
dec
add
insb
das
outsl
cmp
test
fcmovbe
lods
cmp
dec
in
push
stos
pop
dec
ret
push
dec
fwait
xor
in
mov
jg
ror
dec
sti
call
inc
je
jmp
cmp
and
cmc
aam
mov
push
fstpt
clc
dec
mov
and
test
ss
stos
sbb
repnz
fneni(8087
push
sahf
inc
stos
mov
sbb
das
stos
pop
pop
add
rcrl
inc
jmp
std
xor
lret
xchg
movl
mov
sub
test
push
stos
pushf
mov
fcmovnb
stc
xchg
cs
xchg
pop
int3
sub
and
cld
mov
iret
mov
pop
jg
test
sub
sbb
adc
mov
push
xor
div
adc
gs
cs
loop
pop
xchg
les
mov
jo
call
pop
insb
jg
jae
xchg
xchg
test
loopne
jl
ret
test
mov
mov
dec
stos
cwtl
sub
push
sub
outsl
adc
in
xor
or
sbb
xlat
cwtl
imul
loopne
out
ret
xor
jp
and
jne
jnp
sarl
adcl
loope
loope
mov
pushl
shll
inc
sub
cltd
jae
sbb
filds
push
sub
inc
jg
cmp
fs
lahf
sbb
shlb
sbb
push
add
jg
ret
divb
add
sbb
sbb
mov
subb
mov
mov
test
jl
mov
hlt
fildll
pop
sbb
lret
pushf
inc
data16
or
das
jne
or
pop
daa
push
inc
xor
sbb
adc
xor
dec
data16
xchg
mov
adc
pop
lds
lds
mov
jmp
mov
dec
inc
mov
push
sub
das
pop
and
jge
xchg
leave
lods
stc
adc
sbb
leave
rclb
add
push
lock
sub
test
int3
jecxz
leave
xor
rcll
mov
icebp
mov
add
mov
cmc
test
mov
pop
pop
xorb
xchg
cld
pop
daa
add
pop
loope
push
fstpl
in
or
push
jle
outsl
aam
es
lds
push
bound
lahf
adc
sub
nop
mov
pop
mov
mov
adc
jo
sbb
sub
pop
insb
imul
sub
in
fisttpl
mov
push
mov
push
jmp
dec
adc
iret
xchg
push
and
sbb
cs
adc
pop
das
addb
ret
es
pop
aaa
data16
mov
cmp
push
mov
cmp
std
jl
xor
inc
mov
pop
negl
jp
jl
out
lock
mov
out
jg
pop
add
add
sbb
sbb
mov
fcomps
push
in
in
mov
cld
cmpsb
cmp
mov
cmp
adcb
enter
ss
push
jl
lcall
ret
pushl
jno
aam
jmp
mov
cmpb
lods
scas
jle
mov
repz
jno
lcall
insl
test
jg
sbb
sti
sbb
push
lret
aas
push
push
inc
sbb
and
jg
jp
push
ret
mov
dec
jl
movsb
push
xchg
scas
test
sub
pop
ffreep
testb
jle
jmp
sub
lret
push
pop
xchg
jbe
mov
mov
xor
xchg
cli
mov
fcomp
or
scas
xlat
inc
add
fstl
bound
cmpl
xchg
lock
and
dec
stc
or
push
stos
mov
jecxz
xor
adcl
loopne
xchg
sbb
dec
adc
lcall
ljmp
rclb
pop
push
lods
sbb
jp
xor
cmp
add
add
mov
add
sbb
mov
adc
incb
adc
cmp
push
xchg
xchg
xor
jg
mov
fidivs
clc
xchg
add
lret
inc
cwtl
inc
lock
cmp
mov
lea
xchg
mov
ret
dec
dec
cli
clts
mov
mov
or
das
cld
xor
mov
cmpsb
cmp
jno
cmp
xchg
push
and
lcallw
mov
sub
loope
repnz
stos
xchg
adc
pop
xorb
sub
add
test
stc
test
cltd
xchg
mov
lret
mov
iret
or
push
add
loop
ja
popa
push
mov
sbb
adc
sub
adc
sub
mov
mov
js
jne
mov
push
jmp
fistpl
or
enter
sub
xlat
jg
push
popa
stc
mov
in
jbe
leave
add
sahf
fs
ljmp
lcall
data16
pop
push
decl
sub
shr
sbb
push
bound
dec
lds
fucomp
lea
xchg
lods
test
pushl
aad
lea
sbb
xor
sub
xchg
add
xchg
or
or
mov
xor
cli
jg
push
dec
inc
jmp
fdivrs
mov
mov
xor
mov
dec
cmp
sbb
std
nop
or
sub
push
sub
jp
adc
sbb
fistpll
scas
mov
mov
inc
or
rcl
test
je
sbb
shll
clc
aaa
rcrl
insl
in
loop
outsl
gs
push
clc
dec
ljmp
fdivrl
cld
jmp
movsl
cmpsl
xchg
or
fistpl
decb
jle
fst
outsl
mov
pusha
fdivr
mov
adc
mov
mov
bound
pushl
popf
pop
or
push
push
sub
xchg
dec
gs
subl
mov
int3
scas
rcr
push
in
lret
clc
sub
adc
ret
decl
mov
lods
pop
lods
sub
and
lock
mov
testl
icebp
aaa
pop
fistps
icebp
aad
lret
ret
xorb
orl
cmc
jmp
dec
scas
dec
shrl
sub
and
jl,pn
jg
cmp
add
xchg
test
pop
es
pop
mov
jb
and
jbe
movsb
xchg
sub
sar
rcrl
inc
sbb
inc
test
mov
mov
test
and
xchg
pop
outsl
pusha
push
push
std
jns
int
insl
add
sub
lea
int3
push
mov
jle
frndint
or
inc
inc
jl
rolb
or
inc
add
mov
xchg
lcall
rorb
adc
mov
add
sbb
inc
add
pop
mov
adc
jge
sub
fcmovnbe
add
lds
xchg
popa
sbb
test
adc
and
inc
add
jg
mov
push
ret
or
mov
cmp
push
je
orl
mov
adc
cmp
xor
pop
les
mov
push
xchg
pushf
mov
sub
xor
xor
mov
mov
outsb
out
push
insl
inc
cld
outsl
jne
testb
test
cli
sub
repnz
add
cmp
inc
cwtl
lock
stc
xchg
ret
inc
subb
xchg
int3
inc
and
cmpb
aad
jnp
sbb
aaa
xor
int3
xor
rorl
cmp
subps
in
pushf
push
or
pop
scas
int3
or
inc
out
mov
xchg
mov
adc
or
push
stc
aam
push
lea
cmp
mov
lea
jae
mov
xlat
add
cmpsb
inc
loop
add
addr16
jle
subl
mov
out
mov
push
in
pop
and
imul
lds
or
sbbb
pop
pop
ret
push
and
mov
test
scas
pop
sbb
pop
icebp
addl
mov
xor
scas
mov
push
mov
mov
popf
cmp
fiaddl
sbb
in
lret
cmp
and
add
subl
pop
fs
add
aaa
inc
sub
cmc
adc
rolb
mov
int
add
inc
inc
call
inc
or
int3
inc
js
mov
jl
popa
pusha
adc
out
push
out
push
dec
mov
and
xor
movlhps
rclb
aas
in
jmp
add
sbb
xchg
push
mov
sub
out
mov
ss
add
push
adc
outsb
adc
or
cmpsb
in
sbb
dec
xor
push
pop
xchg
out
xchg
sbbb
mov
cmp
cmpsb
pop
mov
iret
mov
add
and
cmp
pushf
pop
jns
jns
pop
mov
outsl
test
loop
add
das
addr16
lock
outsb
push
inc
pushl
out
jge
mov
mov
and
add
call
imul
or
inc
pop
add
push
or
xchg
xor
adc
jmp
jp
jno
jae
rcl
cld
lock
rcrl
int3
add
push
data16
ljmp
sbb
pop
push
or
pop
in
inc
inc
sub
jae
mov
mov
sub
xor
push
fwait
dec
ds
jg
das
sub
int
ret
ja
imul
sub
das
hlt
adc
icebp
stos
into
or
test
mov
dec
add
js
pop
mov
mov
mov
xor
std
or
pop
add
inc
mov
inc
xchg
push
jg
out
add
data16
add
bound
sub
mov
fwait
rcl
pop
rorl
jp
add
das
repz
pop
flds
jb
es
push
flds
rol
fidivrs
dec
mov
jle
mov
lcall
mov
divb
add
out
fstps
and
dec
xchg
fsubrs
or
cmp
mov
clc
mov
adc
icebp
inc
mov
push
jbe
xchg
mov
jecxz
fldcw
jle
inc
mov
mov
and
add
loopne
mov
add
xchg
pop
adc
outsl
loopne
lcall
mov
popa
mov
movsb
lcall
std
or
pop
mov
aas
repz
dec
sar
mov
jno
cli
mov
je
addl
push
cmp
add
stc
enter
pushl
fistps
js
dec
aaa
push
dec
ljmp
mov
cwtl
loopne
mov
lret
inc
inc
jecxz
mov
push
adc
pop
adc
pop
inc
popa
leave
mov
mov
dec
addr16
pop
xorl
mov
adc
inc
cmp
adc
jge
dec
movsb
pop
inc
movsb
aam
inc
cld
lcall
lock
call
push
cli
xor
fs
test
jno
sarb
xchg
jmp
xchg
sbb
hlt
das
clc
imulb
xchg
or
fdivrl
ljmp
adcb
bnd
pop
sar
outsl
outsb
add
aam
pop
adc
push
xor
add
add
or
pusha
pop
addr16
mov
fwait
mov
jb
ss
test
sbb
pop
mov
adc
push
mov
push
out
xor
jmp
dec
sub
aam
outsl
data16
cmp
push
es
dec
sub
rcrb
aaa
push
xchg
fcoml
test
add
push
mov
pop
xor
les
mov
adc
xchg
pop
xchg
mov
cmpb
pop
jg
rorl
dec
call
jmp
push
jg
sub
mov
inc
dec
inc
cmp
repnz
mov
in
aad
sbb
sub
orl
divl
mov
andb
add
adc
sbb
xorb
movsb
sbbb
addl
das
fimull
test
in
ficoml
shl
scas
fiadds
clc
outsl
jno
fstpl
inc
jp
or
pop
rcrl
mov
aaa
mov
lcall
and
adc
ret
imul
sbb
leave
test
outsb
outsl
test
inc
or
nop
sti
out
and
mov
adc
jp
sbb
sub
cli
mov
outsl
loop
cmp
bound
aad
sbb
cwtl
fists
mov
sub
gs
mov
dec
shl
imulb
arpl
and
xorb
adcb
fistpll
nop
add
movsb
pop
inc
or
loopne
jg
push
jl
fcmovne
pop
sbb
mov
jb
fwait
imul
das
cmp
mov
lds
in
jp
adc
nop
inc
add
daa
mov
aas
push
push
lock
int3
nop
or
js
or
pop
daa
push
add
sti
movsl
sbb
mov
xchg
mov
dec
xchg
lcall
fdivrs
loopne
cmp
scas
adc
pop
les
dec
inc
dec
dec
leave
pop
pop
test
add
fstpt
pop
popf
cmpsl
mov
mov
mov
mov
testb
push
mov
outsl
popf
jns
and
add
mov
xchg
scas
pop
stos
inc
mov
lret
mov
push
cmpl
xchg
lret
cmovno
push
cld
dec
outsl
cld
rolb
mov
out
mov
or
outsl
idivb
xchg
and
adc
ds
jl
fistpll
hlt
push
cmpsb
adc
sbb
dec
les
push
je
add
add
inc
das
xchg
ja
jp
push
xchg
mov
cli
fs
sub
ljmp
jge
rclb
sbbl
inc
mov
incl
lds
loope
or
sbb
add
mov
mov
adc
lods
jl
sti
fs
and
pop
push
decl
outsb
cmpb
sub
rcr
pop
mov
data16
mov
test
jne
das
ljmp
adc
mov
aad
push
jae
or
stos
jne
jecxz
mov
pop
addr16
inc
ss
mov
call
hlt
je
cld
subb
mov
xor
addr16
dec
add
xor
int
adc
cli
les
xor
sahf
xchg
dec
loope
xor
xor
mov
repz
push
mov
movsl
jp
add
fwait
les
dec
sub
call
bound
jae
inc
adc
mov
scas
shrb
pop
dec
cmp
es
out
sub
xchg
add
fwait
subl
bound
and
fstpl
xor
ss
shr
jbe
enter
enter
lcall
addl
js
xor
les
pop
clc
int3
ret
je
xor
jg
ss
lret
cmovb
jge
xor
sub
mov
add
mov
scas
jmp
add
divl
sarb
mov
arpl
lret
mov
xchg
jbe
lea
sbb
push
jmp
xor
movsb
sub
and
push
test
in
pop
cmp
pop
outsl
push
sub
pusha
fdivl
inc
and
jmp
jecxz
cltd
adc
xchg
popa
mov
xor
mov
das
aad
cmp
ss
push
aam
add
loopne
std
pop
sti
jns
movsl
decb
jb
divl
int3
mov
add
cmp
cwtl
inc
cwtl
fs
insl
rclb
inc
jecxz
data16
mov
outsl
std
pop
loop
jnp
mov
mov
cmpsb
xor
or
jge
jb
fnstcw
and
add
xor
sub
mov
fs
nop
xchg
inc
adc
push
or
jmp
adc
hlt
cld
inc
sbb
adc
jo
enter
fwait
pushaw
loopne
scas
fistl
dec
push
ja
pop
and
jno
imul
ret
or
push
adc
xchg
push
xchg
pusha
test
mov
rolb
push
sbb
mov
add
stos
ja
add
or
push
xor
out
mov
jo
xor
sub
jge
ret
adc
cmpsl
mov
loope
jg
dec
aam
rorb
pop
ljmp
jo
fdivrs
aam
into
loop
add
roll
push
fildl
das
adc
pop
dec
insb
mov
roll
ja
pop
sub
sub
out
into
dec
mov
pusha
call
decl
mov
push
add
addr16
xchg
add
lods
add
in
cmp
push
pop
add
or
decl
inc
inc
push
in
pop
rclb
fiaddl
fcomi
add
aaa
jo
aaa
push
push
inc
cmp
mov
clc
push
sbb
or
sub
mov
add
push
push
out
or
inc
lds
or
scas
mov
push
xlat
jp
shl
inc
bound
fdivs
xor
sbb
sub
xor
push
popa
js
dec
call
ljmp
add
xlat
add
inc
test
or
loopne
push
xchg
xchg
dec
flds
mov
sbb
push
inc
mov
mov
push
fnstenv
dec
dec
dec
jle
sub
aas
mov
out
and
mov
mov
xor
fidivrs
xlat
pop
popa
rcrb
lahf
hlt
pop
mov
lock
dec
mov
loopne
call
outsb
sbb
test
push
dec
xchg
inc
out
jo
xorb
and
sbb
mov
mov
out
incb
push
icebp
push
mov
daa
mov
push
repnz
in
sti
outsb
or
and
out
out
or
dec
pushl
and
push
fmull
loop
pop
gs
sbb
add
or
mov
pop
das
pop
loopne
pop
jecxz
and
push
enter
test
stos
rolb
add
pop
push
fildl
cltd
cs
push
decb
incl
push
add
pushl
outsl
xchg
mov
icebp
add
xchg
xor
sub
add
mov
and
mov
and
mov
jle
js
ja
pop
js
inc
adc
fxch
rcll
lds
in
sbb
and
dec
in
and
aam
and
pop
stc
js
xchg
in
nop
clc
test
iret
aas
dec
scas
test
stos
pop
imul
mov
out
add
pop
jg
jnp
jne
push
sbb
mov
or
incb
jg
push
enter
mov
mov
pop
mov
mov
les
loopne
xchg
fs
xor
repz
fstpt
arpl
mov
mov
scas
mov
movsl
test
outsl
cld
das
std
xor
insl
xor
jle
arpl
push
data16
add
jecxz
dec
aad
cwtl
xchg
lods
inc
loopne
in
inc
mov
shl
mov
inc
push
shrl
dec
daa
push
ret
sub
or
les
loopne
jnp
mov
sbb
enter
lock
dec
dec
add
add
sbb
add
pop
add
lcall
push
jne
xor
inc
jmp
push
adcl
add
ret
movsl
hlt
and
jo
inc
roll
ds
jnp
addl
add
stos
mov
fstps
test
or
loopne
subl
stos
mov
data16
jmp
sti
and
data16
lock
fs
inc
mov
jp
imul
adc
xor
loope
push
mov
mov
or
inc
sub
sub
sbb
out
call
shlb
adc
ja
pop
sbb
mov
stos
and
test
sahf
and
adc
push
adc
xchg
add
and
imul
fsubl
ficoml
xchg
pop
adc
sbb
fcomi
loop,pn
lahf
inc
dec
js
sub
fsts
push
and
push
ret
cmp
cmp
fcoms
test
mov
fmull
orb
mov
cwtl
inc
add
or
cld
pop
adc
cmp
push
xchg
add
pop
cmp
inc
jns
add
sub
or
jno
faddl
in
inc
pop
add
add
push
ss
pop
mov
mov
aad
adc
std
loope
push
pop
loopne
sbb
test
adc
push
and
sbb
mov
add
fisubl
dec
test
cmp
lods
inc
stos
test
jbe
rol
xchg
sbb
cmpl
pushf
out
jns
es
out
or
cmp
cltd
test
jb
add
dec
jo
mov
leave
cmp
hlt
mov
xor
fcoml
rcrl
sahf
mov
js
imul
xchg
cli
cmp
adc
and
adc
into
jmp
fadds
and
add
fstps
and
push
mov
bnd
mov
mov
inc
mov
scas
adc
clc
cs
push
les
sbb
and
inc
mov
lea
add
mov
clc
das
pop
jnp
outsl
dec
add
pusha
or
push
pop
mull
loopne
sbb
jae
add
aam
add
adc
out
xor
mov
xor
cli
sbb
data16
gs
aaa
hlt
or
inc
add
imul
nop
pusha
js
xchg
inc
xchg
ljmp
add
jns
dec
lods
aaa
or
and
mov
push
rcrl
aad
dec
jl
decl
mov
adc
mov
adc
sarb
scas
nop
and
lea
cmp
mov
mov
insb
push
mov
add
inc
or
dec
leave
add
imul
inc
jmp
sbb
or
sbb
mov
stos
fldt
stos
push
js
incb
enter
push
adc
and
lock
ficoml
fwait
sbbb
pmullw
cmp
outsl
jmp
lods
lcall
into
xchg
mov
push
push
push
inc
lds
iret
insl
mov
or
push
aam
insl
mov
pop
lods
mov
sar
pop
fiadds
pop
and
push
inc
jo
add
add
pusha
sub
stos
shr
sub
clc
incl
dec
and
andl
imull
and
xchg
stos
imul
unpcklps
aam
clc
lock
push
cmpsb
loop
xchg
jmp
mov
addr16
je
lcall
inc
xor
or
stos
mov
sub
cmpsb
cmp
jle
cmpsl
mulb
xchg
clc
add
or
stos
or
in
adc
shlb
lock
mov
cmp
std
push
repnz
in
push
dec
das
sub
dec
and
lcall
gs
mov
jo
or
cmp
mov
mov
inc
sahf
and
test
or
push
sub
dec
icebp
or
mov
lea
daa
jle,pn
mov
jnp
clc
xorb
fwait
clc
xor
pop
ja
mov
and
stc
call
or
push
lock
pop
aaa
fsave
orb
mov
mov
lret
xchg
mov
das
sbb
cmc
mov
mulb
adc
push
dec
add
xorl
dec
insl
arpl
lods
push
xchg
js
push
lahf
scas
mov
cmp
push
fwait
iret
mov
add
inc
in
test
inc
jl
sti
dec
lea
fstpt
shll
jecxz
jl
mov
pop
cmp
xchg
pop
jmp
stc
dec
pushl
dec
inc
into
frstor
nop
call
decb
push
xor
push
cmp
xor
stc
ljmp
adc
std
stc
in
pop
clc
aas
sub
ljmp
push
sub
sbb
adc
daa
adc
pop
cli
aaa
dec
iret
add
scas
and
push
sbb
lret
addb
icebp
imul
sub
popf
or
js
je
sarb
xor
ss
sub
ficomps
mov
push
enter
mov
mov
adc
push
iret
xor
int3
mov
ret
lds
in
mov
pop
mov
dec
xchg
mov
call
outsb
mov
cmc
mov
mulb
push
loop
ret
inc
cmc
js
std
adc
adc
cld
inc
dec
jl
out
sbb
or
mov
fstp
insb
bound
sbb
jl
mov
jne
out
mov
inc
jne
xchg
sti
out
test
push
lcall
das
xchg
sub
cmp
mov
push
add
jb
daa
xchg
sbb
mov
mov
dec
and
adc
lcall
mov
mov
insl
push
jae
jb
xor
nop
clc
jg
rcrb
jmp
and
movsb
fidivs
pop
mov
decl
mov
mov
je
sub
ds
shll
add
adc
mov
dec
or
pop
xor
cli
sub
or
rol
lcall
add
nop
inc
out
loopne
inc
mov
inc
and
fstpt
or
das
pop
adc
jmp
push
dec
inc
int
inc
inc
dec
shrl
pop
xor
mov
mov
imul
jne
hlt
addr16
aas
jno
add
mov
in
cmp
mov
std
or
or
test
fs
or
pop
jo
cmp
jg
sbb
xor
jle
or
mov
imul
or
xchg
jns
and
mov
out
mov
jg
loopne
stos
push
jo
das
ret
jb
mov
xchg
mov
fisttpll
xchg
push
push
nop
sub
pop
sub
push
xchg
pop
adc
mov
jecxz
das
jecxz
movsl
scas
cmp
jle
in
push
jmp
test
xor
fstps
mov
lds
rorb
fstpt
leave
sbb
sbb
pop
das
xchg
mov
stc
mov
aaa
fwait
jmp
movsl
fcomps
test
jns
and
in
sbb
lds
pop
cmp
daa
js
push
adc
ss
icebp
aas
push
or
push
xor
nop
mov
mov
ret
cmp
xlat
mov
jo
cmp
pop
jge
addl
ds
push
sbb
mov
and
or
fisttpll
lcall
pop
xor
sub
pop
mov
mov
sbb
cmp
dec
jl
daa
adc
jmp
in
adc
inc
push
mov
sub
outsl
rcr
add
test
sub
mov
xor
aam
mov
lcall
add
or
xor
mov
mov
rcl
fwait
cmp
pop
push
shrl
sbb
jbe
jns
dec
jb
push
aaa
mov
and
pop
inc
out
cli
jae
movsl
jns
icebp
adc
cmp
sub
insl
test
mov
cwtl
sbb
fsubr
clc
test
into
inc
or
filds
pop
sbb
sbbl
mov
push
gs
mov
dec
add
testl
sbb
add
loopne
int
push
push
push
std
push
dec
ds
add
imul
in
sub
les
or
repz
adc
pusha
insl
jg
movb
ljmp
push
mov
mov
rol
std
cmpsb
out
pop
lret
xlat
js
movsl
mov
cmp
in
mov
inc
shll
add
stc
cmp
pop
mov
mov
sub
and
fadds
cmp
mov
sub
andl
jne
xchg
ds
scas
popf
dec
nop
jmp
dec
pop
pop
xchg
jb
es
jo
jb
push
dec
jecxz
iret
movsb
mov
fmul
jp
xchg
mov
xchg
push
pop
fsubr
or
pop
sbb
clc
jg
jns
inc
cs
out
test
push
cmc
mov
into
lock
orb
iret
jne
in
cltd
xchg
nop
mov
sbb
cmp
adc
push
rol
jmp
and
test
mov
mov
out
add
test
sub
mov
xchg
fdivrl
cwtl
sti
xchg
jbe
xchg
mov
mov
adc
inc
mov
jne
loopne
lret
and
outsb
mov
pop
int
jb
adc
xchg
sbb
dec
lcall
inc
mov
push
les
jo
insl
xchg
int3
sub
aaa
movsl
stos
negl
mov
and
push
aas
push
pop
sub
or
js
inc
andb
ret
sbb
dec
ja
stos
outsb
cld
test
scas
mov
dec
ret
inc
mov
pop
push
out
pop
sti
arpl
xor
mov
dec
lahf
push
xchg
mov
xchg
sbb
dec
mov
dec
pop
pop
sbb
nop
add
popf
pop
fwait
mov
adc
das
sbb
les
cli
sbb
in
scas
stc
xchg
xchg
jmp
pusha
int
test
pushf
inc
test
test
loop
xchg
cwtl
inc
mov
add
or
add
js
arpl
out
jbe
lcall
das
je
scas
fs
rclb
sahf
and
inc
mov
sub
fistpll
push
sub
mov
or
xchg
and
cmp
add
cld
dec
cmc
lret
in
or
xor
push
addl
xchg
jno
jg
inc
notb
xchg
mov
mov
xchg
outsb
rclb
push
jle
scas
mov
mov
mov
outsl
std
push
xchg
add
je
dec
scas
mov
leave
fisubl
sahf
push
push
xchg
xchg
mov
push
or
int3
mov
jno
clc
mov
push
mov
lds
adc
insl
aas
ficoml
mov
cwtl
dec
adc
cmp
cld
movsl
push
stos
ret
xor
daa
aas
cmp
je
xor
rcr
inc
inc
stos
and
adc
mov
mov
in
pop
jl
outsb
inc
adc
mov
pop
inc
icebp
or
cmpsl
fidivrl
stos
insb
xchg
or
ret
xchg
mov
mov
shr
sbbb
mov
dec
sbb
dec
sbb
xchg
and
mov
shlb
xchg
sub
scas
movhps
jl
dec
lcall
and
fcmovnbe
and
sahf
add
sbb
and
cmp
dec
mov
fistpl
fldcw
jae
js
clc
lret
push
loop
jb
ficompl
jg
outsl
es
fbld
nop
inc
lret
pop
outsb
xor
cli
adc
es
imulb
sbbb
pop
in
lds
pusha
add
in
cwtl
cmpsb
pop
fdivr
inc
inc
sub
jae
mov
add
mov
pop
es
pop
nop
popa
pop
gs
pop
jge
cmp
push
cmp
jb
mov
rcl
jp
cmp
mov
sahf
pop
dec
dec
sbb
mov
push
dec
mov
inc
mov
and
cmc
movsl
mov
les
pop
xor
xchg
sbbb
mov
jns
lcall
sub
ret
in
and
popl
mov
mov
adc
xchg
xchg
mov
inc
jmp
stos
ljmp
mov
sbb
jnp
shrb
stc
adc
faddp
pop
test
mov
clc
out
push
xor
mov
sbb
adc
mov
dec
mov
mov
pop
or
inc
xchg
fcoml
in
sub
outsl
pushl
jge
adc
and
push
jns
and
mov
clc
and
pop
insb
jg
lahf
jmp
aaa
inc
ret
add
jno
mov
pop
xor
sub
nop
test
xchg
ljmp
std
incl
jne
mov
mov
mov
add
movsb
stc
cs
or
jl
inc
push
push
xchg
xor
jp
mov
aam
jns
ficomps
movl
mov
mov
inc
dec
push
adcl
jno
aas
testl
mov
fs
or
jl
jno
daa
test
sbb
inc
cmp
sub
daa
aad
loope
stc
jge
in
clc
outsb
call
jmp
push
sbb
adc
mov
xor
jge
mov
jg
ss
pop
add
int3
and
dec
cbtw
cli
scas
inc
sbb
outsl
mov
inc
or
shrl
movsl
xor
repnz
stc
scas
lock
hlt
xchg
adc
mov
adc
jle
push
lahf
mov
outsb
mov
out
xor
rol
xor
mov
stos
or
cli
lods
sbb
or
or
push
aas
mov
dec
fistpll
jle
add
jge
inc
xor
cmc
repz
or
sbb
sub
xchg
js
sarl
mov
sahf
ljmp
jnp
nop
imul
xchg
js
das
or
xor
scas
jg
scas
adc
aas
jge
cld
popa
aas
lret
lcall
jecxz
xor
cwtl
arpl
pop
imul
decl
leave
add
lock
inc
xor
adcb
and
lods
mov
dec
neg
dec
xor
lea
xor
in
or
or
inc
push
fidivrl
mov
push
ja
fisubrl
pop
lock
ja
loope
add
xor
adc
adc
movsb
adcb
roll
adc
or
xlat
inc
sub
inc
cmp
adcb
inc
ja
pop
or
decl
push
ljmp
leave
mov
push
cs
into
or
or
orl
add
ja
and
xor
add
cmp
subl
lretw
lret
adc
xor
mov
add
cmp
leave
add
call
icebp
xlat
dec
aam
mov
push
outsb
bswap
mov
adc
and
or
orb
and
mov
in
inc
xor
adc
lahf
push
mov
sbb
add
shll
mov
cmpl
xchg
int3
dec
cs
adc
and
adc
mov
in
xchg
repnz
push
shl
scas
mov
icebp
inc
inc
push
adc
call
inc
sub
sbb
cmp
sub
std
sub
gs
sarb
je
mov
andl
sub
cli
xor
dec
fildl
sub
lcall
mov
adc
inc
pusha
stos
mov
mov
and
ror
add
ss
add
adc
mov
cmp
inc
lcall
jle
sbb
mov
adcb
in
clc
out
or
mov
loop
xor
xor
and
xorb
frstor
insb
outsl
xchg
or
add
inc
add
pop
xchg
lahf
imul
mov
repnz
add
push
xor
scas
iret
push
or
not
dec
add
add
pop
mov
loopne
gs
xor
push
mov
test
stos
mul
pop
cmc
clc
scas
cmp
jne
movl
ficoms
and
sub
dec
jl
lahf
dec
cmp
push
add
incb
cmp
inc
sbb
mov
aas
mov
call
push
cmpsb
fimull
xchg
and
adc
sti
inc
in
sbb
dec
loopne
subb
jg
popf
ficoms
scas
loopne
js
sub
mov
jmp
mov
add
push
pop
push
add
icebp
add
mov
mov
adc
xor
inc
mov
push
aad
test
mov
adc
mov
test
std
out
pushf
cmp
dec
imul
dec
test
or
add
inc
jne
aas
add
push
xchg
pop
jecxz
adc
aaa
call
inc
icebp
fs
xor
mov
mov
xor
int
lret
cmp
iret
inc
mov
push
cmpsb
pusha
daa
dec
push
and
pop
xor
mov
pusha
inc
idivb
inc
and
icebp
or
xor
xchg
mov
and
inc
cld
in
dec
cmp
dec
jo
and
mov
addr16
adc
and
into
jp
xor
fstpl
outsl
and
jmp
pusha
push
scas
fldl
inc
nop
daa
lds
lods
sahf
sub
add
cmpl
incl
lret
lret
das
and
fwait
icebp
testb
dec
lahf
and
mov
decl
stc
test
add
rclb
sub
incb
lea
dec
mov
stos
fmuls
dec
test
fs
mov
lret
or
push
xlat
aad
imul
add
test
or
cmc
movl
call
loopne
sti
lret
mov
or
cmp
xchg
mov
dec
movsl
push
pushf
dec
dec
out
insl
push
mov
push
mov
inc
sbb
xchg
repnz
scas
mov
fs
popf
xor
leave
and
xchg
adc
push
or
imul
push
add
out
jns
dec
xor
cltd
xor
cli
and
test
and
fildll
cmp
int3
add
jo
cmp
add
inc
sub
mov
rorl
sbb
lcall
ficompl
inc
sub
jge
cmpsb
repnz
or
jno
sarb
and
out
dec
bound
lret
mov
push
addr16
stos
inc
mov
aaa
sarb
mov
out
jle
lcall
aam
aad
je
jmp
lcall
pop
test
sti
xor
stos
push
ds
pop
imul
dec
inc
popa
dec
xchg
adc
nop
ljmp
inc
insb
lods
inc
clc
mov
xchg
cmp
sub
inc
push
mov
fstl
icebp
fistpl
ds
inc
mov
sar
mov
sub
pop
mov
xor
es
jb
loop
xchg
test
jae
idiv
dec
ds
add
sbb
and
push
dec
cmp
pop
mov
jns
lds
dec
rcrb
mov
mov
pop
mov
add
in
aas
lahf
add
in
das
cld
aaa
pop
jecxz
inc
mov
gs
mov
adc
out
cli
push
mov
xor
sbb
test
out
cmp
ret
push
mov
add
pop
adc
push
leave
ja
imul
out
scas
or
jle
pop
dec
fiadds
dec
sarb
and
pop
push
pop
insb
icebp
outsb
cmc
sbb
dec
popf
lret
ret
or
test
and
cmp
mov
test
add
into
dec
or
out
sub
jb
push
pop
or
or
into
push
jg
out
imul
adc
in
pop
std
jecxz
ljmp
mov
leave
repnz
loope
cmp
jle
test
inc
ficompl
bound
rclb
push
outsb
sbb
inc
es
repnz
and
lea
pop
int
pop
jle
adc
mov
and
push
popa
out
clc
das
call
mov
ja
clc
or
and
popf
add
pop
fldl
push
roll
nop
sbb
scas
rorb
push
ret
xor
mov
cmp
mov
aas
xor
push
dec
cmp
aaa
push
jmp
cmp
sahf
ljmp
mov
ljmp
pushf
pop
xor
push
fwait
mov
lcall
jo
add
ss
push
mov
test
or
stos
add
loope
nop
mov
pop
scas
adc
or
pop
in
rcll
rcl
mov
jp
fsubrl
aaa
imul
cs
jmp
sar
testb
sbb
pushl
loopne
cs
mov
sarl
and
dec
add
in
aaa
jp
call
xlat
jae
sbb
adc
js
pop
sub
xchg
ret
fiaddl
out
jmp
popa
and
mov
lods
xchg
or
jg
js
xlat
add
int
movsb
ljmp
je
movsb
cmp
das
cmp
aam
jg
jmp
sub
sbb
pusha
fsubl
sub
ret
adc
cld
dec
ds
push
push
jp
adc
or
pop
daa
arpl
outsb
cmpsb
popa
lcall
test
jno
push
and
dec
sbb
incl
adc
xchg
sbb
push
mov
rorb
rorl
mov
dec
test
test
call
adc
add
shlb
adc
or
adc
and
sub
lods
sub
stos
mov
sub
call
xchg
ljmp
sbb
or
fildll
insb
mov
push
sbb
sbb
lahf
fs
ja
lret
call
rcl
je
dec
add
sahf
and
out
dec
xchg
enter
inc
and
push
das
nop
sbb
aas
bound
pushf
sbb
xor
jbe
jecxz
and
push
clc
and
leave
das
mov
dec
pop
fsubrp
push
addr16
cmpsl
cs
das
adc
mov
in
sbb
push
icebp
sbb
imul
cmpsb
ret
inc
cmp
add
les
andb
sti
xchg
lds
loop
popf
cmp
jmp
cld
or
mov
test
push
jae
and
jnp
lret
repz
add
icebp
cmpsl
outsl
std
int
sub
ss
cmp
fs
cmp
loopne
test
fcmovnbe
outsl
sub
cmpsb
add
xchg
lds
imul
punpckhwd
add
xchg
pop
sub
and
inc
inc
add
sbb
hlt
shlb
out
sub
xchg
jno
and
sbb
dec
add
icebp
xchg
mov
mov
or
call
subb
jecxz
mov
jns
imulb
adc
mov
jmp
cld
and
push
mov
mov
sub
inc
mov
loope
cmp
jl
cmc
lcall
xchg
xchg
xor
shlb
xor
jns
ret
push
decb
push
bound
in
iret
add
imul
pop
dec
sbb
mov
dec
or
mov
mov
xor
or
insb
push
aaa
xlat
adc
sbb
sub
inc
cltd
xor
mov
adc
test
in
dec
sbb
pop
mov
jne
lahf
push
mov
test
add
test
and
cld
test
fists
call
cli
pushl
sub
xor
mov
outsb
sbb
xchg
dec
push
and
or
push
inc
sbb
add
pusha
adc
inc
inc
leave
sub
test
push
adc
subb
cmp
push
daa
or
dec
mov
mov
push
in
xor
cmc
rolb
cmpsb
sub
lcall
stos
out
hlt
insl
mov
xor
cmp
fwait
jge
mov
pop
or
xchg
scas
xchg
or
fidivrs
jg
clc
mov
mov
push
xchg
and
nop
inc
les
push
and
cltd
sbb
subl
subl
jno
lcall
pop
mov
cwtl
xchg
out
les
cmc
sar
pop
insb
bound
mov
dec
mov
sbb
rcrl
jns
cmp
adc
pop
pop
js
pop
sub
xchg
jmp
add
mov
and
aam
test
mov
or
lret
lret
test
mov
loopne
add
adc
out
mov
sub
call
jp
add
out
mov
scas
pusha
jbe
popf
add
cmc
mov
std
xlat
add
jmp
and
std
push
aaa
mov
adc
das
jne
mov
push
mov
or
and
sahf
and
repnz
sbb
inc
mov
inc
xchg
outsb
jae
aaa
mov
xor
mov
push
cmpb
pop
jle
rcrb
pop
add
cmp
lds
mov
sub
fs
push
ret
cmp
pop
loope
xor
add
inc
mov
lock
nop
xor
icebp
inc
mov
inc
decl
lods
enter
jo
cmpsb
and
add
fcmovu
outsb
lret
idivl
stos
sar
pop
mov
sub
sbb
sub
lret
fildll
ds
aaa
sti
lock
pop
mov
push
sbb
incb
jl
daa
dec
ret
cli
mov
add
push
in
clc
dec
sbb
addb
andb
push
push
mov
out
sub
sub
aaa
ret
jmp
dec
pushl
pop
icebp
pop
mov
mov
into
sub
sbb
ret
dec
ret
pop
xrelease
rcr
xchg
mov
mov
mov
test
jbe
xchg
cli
fldcw
cmp
or
inc
xor
or
shrb
and
mov
cs
es
lahf
test
add
sub
or
mov
fwait
adc
mov
cmp
gs
shl
pop
test
lock
incl
lock
dec
sub
imul
aaa
inc
and
push
xor
pusha
push
pop
es
insl
pop
int
cli
pop
jae
add
cltd
cli
sahf
add
lahf
adc
inc
xchg
adc
out
dec
and
call
adc
shlb
pop
loope
jbe
or
fwait
sarb
and
push
adc
dec
sub
push
lock
jg
jno
inc
adc
and
rolb
lret
mov
add
add
mov
cli
inc
ds
test
push
xchg
inc
pop
or
sbb
adc
and
call
add
adc
push
leave
add
lds
test
add
inc
inc
outsl
lock
xor
sarb
aad
and
sbb
add
stos
or
adc
loopne
cmc
repz
push
adc
add
and
pusha
add
mov
mov
push
and
fwait
and
fisttps
stc
push
sbb
add
shlb
rclb
cmc
or
loope
or
sbb
sub
mov
aaa
or
loopne
push
out
add
mov
or
mov
bound
sub
and
add
fmull
repz
in
shl
outsl
mov
je
lret
fcoms
insb
bound
push
repnz
sub
mov
test
sbb
test
add
add
loop
sti
movsb
test
scas
movsl
out
pop
pop
mov
arpl
cld
add
lods
mov
or
and
mov
mull
movsb
adc
mov
or
jp
dec
push
pushl
out
out
pop
add
orb
ljmp
cld
dec
jg
mov
pushf
pop
dec
ljmp
sub
cmpsl
push
filds
enter
shl
cmpsl
nop
ds
cmpsl
add
fstl
or
dec
inc
rclb
roll
sahf
xchg
sub
inc
pmaddwd
pop
stc
fisubs
inc
inc
pop
es
test
out
sbb
stos
cmp
test
test
or
or
pop
xchg
push
lcall
inc
movzbl
and
into
xor
add
mov
outsl
or
mov
or
pop
cli
scas
mov
pop
fidivs
cld
add
ljmp
loopne
mov
xor
clc
push
es
and
sti
jp
inc
dec
je
stos
or
mov
cwtl
sbb
outsl
adc
push
in
or
inc
fwait
repnz
call
and
mov
xchg
mov
jmp
mov
mov
das
jns
mov
ljmp
adc
mov
andb
inc
cmp
add
xchg
inc
add
in
and
xor
or
push
outsl
pop
push
push
pop
std
lret
sub
cmp
jg
mov
adc
or
iret
or
inc
in
lahf
loopne
std
xchg
in
add
ret
adc
icebp
repnz
call
xchg
xchg
shl
shrb
stos
cmp
ja
shrb
aam
mov
rcr
push
push
jbe
mov
sub
aaa
ljmp
loop
out
iret
cmp
jns
push
and
push
repz
addr16
mov
cmp
sub
add
outsb
xlat
push
es
fimull
inc
fldl
cmp
mov
fcom
sub
xchg
push
xor
dec
lea
pop
insb
add
lcall
movsl
fsubrs
sahf
fldenv
push
ret
inc
rolb
into
or
ja
sub
sub
daa
mov
mov
gs
adc
mov
pushf
jns
sar
loopne
add
xchg
imul
sbb
lret
pop
aas
dec
cld
sbb
nop
mov
jb
nop
incb
sbb
xor
mov
lods
mov
stc
sub
adcb
inc
jl
xchg
or
add
ljmp
daa
xor
cli
push
jl
dec
push
pusha
push
xchg
stos
pop
lcall
jl
jns
rcll
jns
mov
add
xchg
ss
push
add
jb
test
inc
fs
xlat
inc
xchg
enter
sar
sar
mov
push
pop
flds
rcl
dec
adc
pop
rcrb
fdivrl
pop
push
pushf
pop
add
jnp
xchg
fisubrs
adc
and
xor
jle
jo
mov
test
dec
sub
pop
inc
mov
call
or
icebp
nop
adc
adc
repz
push
sub
cmpsb
and
fucomi
add
pop
push
cmc
pop
popa
into
sub
shlb
test
jg
adc
inc
cmpsb
ffreep
adc
cld
xor
popa
mov
rclb
arpl
sbb
pop
push
mul
mov
dec
mov
push
pop
add
pop
jg
fsubr
test
add
mov
mov
clc
int3
stos
call
mov
xor
pop
xor
pop
mov
jmp
ljmp
sti
movsl
cltd
push
adc
push
ret
fdiv
scas
cmp
ret
xchg
cmp
or
and
xchg
addr16
out
data16
inc
or
jmp
cmp
repz
lock
lcall
pop
cmp
lret
subl
jmp
int3
ret
rcrl
push
addr16
push
rcl
ret
lea
in
mov
xchg
pop
sub
jae
jo
adc
test
loopne
arpl
dec
out
push
fldenv
ja
add
pop
mov
pop
dec
ljmp
add
fs
xchg
xor
cmp
pop
push
inc
scas
stos
adc
mov
push
xchg
inc
cmc
das
loopne
data16
ss
loope
mov
xor
mov
mov
jl
aas
mov
stos
pop
sub
xor
mov
lcall
stc
push
mov
inc
movsl
adc
popl
fidivrl
push
fcomi
inc
dec
mov
mov
int
dec
sahf
cmp
bound
movl
test
sti
out
ljmp
lret
ret
stos
inc
xchg
mov
mov
jge
mov
ds
xor
xor
inc
inc
mov
add
outsl
sub
test
dec
pop
call
iret
outsb
xor
mov
outsb
aam
inc
pop
inc
sarl
stos
xchg
outsl
inc
sbb
xor
push
lret
xor
icebp
ret
xor
pop
mov
mov
ret
push
mov
cs
pushf
fcmovnb
add
int
and
in
loopne
inc
mov
mov
je
inc
movsb
shlb
xchg
mov
outsb
cld
mov
sbb
sbb
lahf
imul
push
push
addr16
inc
icebp
lea
clc
ja
int3
push
jmp
sbb
mov
sub
dec
test
cmp
ret
mov
pusha
lea
mov
jbe
and
dec
adc
add
cmp
push
cmp
xor
inc
pop
xchg
std
repnz
ja
xchg
fbld
push
push
outsl
pop
add
lds
testb
add
dec
lea
xchg
add
jmp
pushf
and
clc
rorb
push
mov
sbb
data16
ret
insl
lods
jmp
mov
jne
xchg
insb
xchg
fcompl
nop
adcb
js
cmp
pop
or
outsb
push
mov
out
or
les
cwtl
iret
aas
adc
rorb
and
xor
jbe
cmp
dec
mov
pop
loop
jg
cmp
roll
jl
les
mov
mov
sub
loop
mov
test
cli
ljmp
arpl
std
sub
add
push
push
jnp
mov
mov
or
lds
les
push
mov
jo
add
adc
clc
jg
ret
lahf
inc
add
ret
sbb
and
mov
jae
sbb
xchg
mov
xchg
cmp
jecxz
dec
dec
mov
and
mov
ret
xchg
and
dec
push
and
jecxz
jo
call
gs
mov
inc
cmc
cmp
pop
mov
sbb
nop
pop
les
stc
xor
mul
xor
call
push
dec
dec
add
adc
fwait
daa
movsb
jmp
cld
das
mov
js
sub
add
call
aam
sbb
mov
arpl
loopne
inc
sub
adc
cmp
shrl
mov
rclb
jno
movsl
push
movsl
mov
enter
pop
loopne
decl
sbb
inc
dec
or
sbb
pop
in
les
jg
or
mov
cmp
in
cltd
sti
daa
in
inc
das
movsl
shlb
add
mov
inc
inc
dec
and
pusha
fsubrp
pushl
addl
push
addr16
xor
loope
push
mov
push
movsb
push
not
pop
pop
sub
into
sbbl
orb
xor
incl
add
push
cmp
push
push
push
mov
add
xchg
sub
repz
or
add
fsubrs
or
push
jmp
xor
ja
push
or
fdivrs
xor
push
hlt
cmp
in
out
sti
sub
lock
out
push
aaa
stos
add
and
dec
fisttpl
xchg
arpl
in
cmp
mov
push
int
hlt
jnp
jne
fs
sbb
fdivl
dec
jo
add
sbb
enter
or
mov
sbb
push
pop
pop
or
adc
mov
cli
rorb
cmpb
fsubs
test
testb
out
loop
cmc
ret
jg
sbb
pop
fsubp
sbb
sub
jge
subb
sahf
adc
in
or
bound
in
sub
push
sub
push
les
mov
xchg
add
andl
mov
pop
aad
cmp
and
add
inc
push
lcall
sbb
testb
dec
and
addl
adc
fadds
xchg
adc
adc
jmp
stos
insl
xchg
lock
aas
mov
dec
add
je
jle
bound
loopne
divl
call
dec
cmpsl
loopne
gs
inc
jecxz
pop
cld
decl
dec
pop
mov
mov
pop
or
xchg
js
lods
outsb
movsb
cmp
outsl
or
dec
sub
adc
or
cmp
mov
stos
jns
sub
outsl
stos
ficoms
jg
add
je,pt
pop
cmpb
pop
adcb
sahf
mov
mov
aaa
mov
cmp
jecxz
cmp
fbstp
shrl
lahf
and
jbe
imul
sub
test
ja
div
cltd
xchg
push
pop
lds
sbb
jmp
add
or
sbb
in
clc
or
inc
xor
repz
nop
jecxz
and
insl
sarb
pop
mov
mov
aad
js
test
lret
or
or
dec
xor
jl
fwait
mov
mov
ret
out
and
loopne
stc
add
mov
pop
jl
and
pop
sbb
dec
outsb
mov
dec
out
mov
xchg
jle
xchg
insl
cmp
cmc
sbb
ds
ljmp
cli
push
or
sub
movsl
lea
rcrb
add
aaa
idiv
cmp
inc
inc
cmpsl
push
jb
sbb
xchg
dec
jge
push
test
jno
cmc
sub
shlb
mov
lret
mov
sub
add
xchg
jnp
imul
mov
into
leave
xor
inc
clc
inc
rcrb
pushl
or
dec
jns
ret
rclb
fstl
cmc
pop
aam
insl
or
pop
lcall
test
jo
inc
rcrb
gs
mov
int3
icebp
sub
sar
cld
jne
nop
mov
add
in
sbb
push
shlb
pop
stos
fwait
jmp
ds
xchg
cmpsl
push
dec
out
sub
rcll
es
xchg
out
sbb
inc
imul
and
jb
scas
jcxz
es
pop
clc
cli
mov
xor
outsb
sbb
jg
inc
add
aas
stos
daa
ret
popf
rolb
test
cmp
mov
in
mov
sbb
push
fsubs
call
fidivrs
fildl
mov
cmpsb
or
lret
push
fldl
das
fmul
jg
and
fnsave
dec
jae
and
mov
dec
mov
jecxz
xchg
sbb
mov
jnp
pop
and
aaa
jle
cwtl
adc
aam
popa
and
jle
sbb
add
xchg
xorl
cli
fists
stos
repz
jnp
push
jne
mov
push
shll
push
push
adc
in
incl
daa
repz
xor
shll
jno
pop
rol
dec
outsl
jno
adc
adc
dec
jo
push
mov
movsl
mov
insl
ret
jge
jne
push
test
sub
fsubs
clc
add
arpl
jl
loop
pop
imul
inc
or
fistps
jl
mov
jbe
jb
adcb
dec
outsl
lods
dec
or
xlat
jo
jmp
mov
jmp
pop
inc
push
fcompl
xchg
mov
lret
repnz
lock
std
lods
cmc
xchg
cmp
aad
push
jg
mov
scas
in
test
inc
dec
and
enter
popa
loope
and
arpl
mov
mov
dec
lret
dec
daa
inc
dec
push
incb
lods
rclb
incl
fldcw
lea
test
ja
pop
mov
lahf
or
mov
push
ret
mov
inc
sbb
jmp
aaa
outsb
xchg
ljmp
xchg
mov
pop
pushf
cmp
inc
es
xchg
xor
movsl
fdivrp
push
cli
cwtl
daa
ljmp
leave
jg
xchg
push
movsb
pop
rcr
in
mov
and
lret
sub
sti
insl
jnp
ss
cmp
lds
aad
pop
mov
inc
or
dec
ffree
sub
adc
call
shll
xchg
hlt
inc
xor
decb
out
push
cld
push
in
fwait
clc
fisubrs
aad
inc
divb
lcall
call
ret
pop
aaa
je
inc
pop
push
iret
push
or
nop
adc
pop
fs
ss
dec
or
xchg
push
icebp
cmpsb
push
adc
ret
sub
jbe,pt
stos
sbb
jmp
icebp
sbb
loope
cmp
xchg
pop
fsubrs
aaa
mov
cmpsb
push
in
fdiv
pop
arpl
out
xchg
lcall
add
dec
ret
paddb
fucomip
test
or
mov
xor
pusha
icebp
mov
pop
ljmp
inc
cs
cmp
mov
incl
adc
lret
add
inc
notl
pop
pop
ljmp
outsl
jae
jecxz
xchg
ds
mov
add
push
jecxz
mov
jg
aad
nop
cmp
jo
push
xor
inc
decb
fidivl
sbb
mulb
adc
adc
dec
xlat
cmpsl
pop
push
movsb
popa
pop
daa
add
jo
sbb
mov
cmp
xchg
ret
or
mov
adc
sti
insl
xchg
inc
cmp
and
enter
jne
fistpll
ret
aad
push
pop
scas
adc
pusha
outsl
cmp
jmp
mov
in
mov
out
push
icebp
outsb
ja
nop
sbb
mov
mov
movsb
hlt
test
pop
xchg
movsb
pop
sub
inc
mov
test
or
clc
inc
loopne
lcall
jae
and
inc
mov
bound
sub
rolb
fisubrs
shrb
mov
icebp
in
fcmovb
jno
push
insl
xchg
pop
iret
incb
out
pop
enter
in
ret
sbb
mov
mov
into
inc
cmp
scas
gs
loope
cmc
add
es
fildll
shll
stc
mov
push
add
adc
hlt
outsl
mov
xchg
out
data16
stos
jle
or
sbb
add
or
or
mov
scas
mov
pop
sbb
xchg
xor
mov
pop
mov
dec
xchg
call
pop
aaa
out
movsb
xor
mov
stos
or
movb
.byte
inc
ss
lret
movb
jle
pushf
fwait
add
aas
add
sub
add
or
daa
push
outsl
adc
or
dec
imul
into
popa
lods
add
jg
xor
jbe
out
lea
add
in
jo
add
inc
cmp
ss
in
ljmp
sbb
imull
fs
into
es
leave
sub
pushl
inc
add
add
jne
bound
bound
sub
fiaddl
dec
sub
incl
mov
add
in
pop
lahf
out
int3
mov
roll
add
jo
cmp
rclb
sarl
dec
sbb
std
mov
add
lods
mov
test
sbb
or
sbb
cwtl
ret
mov
or
add
add
dec
rorl
and
mov
jmp
insl
mov
fadds
add
lcall
js
add
pushl
sti
lret
pushf
rorl
mov
jmp
add
inc
xchg
jo
icebp
add
in
fcomi
jmp
or
sbbb
sbb
ljmp
add
leave
imull
add
add
add
aam
ljmp
jmp
sbb
jae
pop
add
add
mov
jb
das
mov
adc
cmp
push
scas
push
inc
out
lahf
mov
movsl
mov
outsl
mov
decl
inc
lahf
repz
jge
inc
and
flds
outsl
push
je
scas
sbb
inc
xor
add
or
add
pop
push
shr
in
and
roll
and
jo
hlt
or
idivb
adc
out
jmp
aad
outsb
ret
addl
cmp
add
incl
add
lea
mov
mov
and
nop
inc
fs
pushl
cmpl
sahf
add
aas
std
jle
mul
mov
in
add
movl
jmp
mov
adc
neg
mov
dec
rolb
mov
push
sbb
or
or
call
jnp
push
cli
and
out
adc
imulb
jne
mov
adc
stos
mov
inc
mov
int
aas
jge
xor
mov
sub
and
cmpsb
lret
outsl
aas
sti
mov
mov
icebp
mov
int
in
aaa
ss
inc
lahf
rol
pop
stc
fstp
outsl
sub
and
mov
dec
push
idiv
mov
adc
pop
and
out
mov
mov
push
adcb
ficompl
faddl
mov
adc
jne
sbb
fdivs
not
xor
mov
adc
and
sbb
in
fwait
loope
not
sbb
inc
popa
loope
lret
jo
lock
and
xchg
lods
ret
pusha
stc
mov
cmpsb
dec
sbb
out
out
mov
or
or
fcmovbe
sbb
pushf
mov
mov
cmp
scas
adc
or
adc
jne
mov
sti
call
sti
dec
jbe
add
xorl
add
jnp
out
and
or
mov
pop
shll
in
ja
ret
xor
inc
dec
je
xlat
or
sub
xor
adc
xor
int3
push
fidivrl
fcoms
leave
repnz
not
push
enter
ret
iret
inc
clc
dec
jl
lock
dec
bound
fsubr
mov
xor
adc
sub
pusha
mov
cld
in
jo
je
mov
add
ja
les
rorb
pop
adc
xlat
lret
daa
fildll
mov
andl
cmpsb
jns
stc
out
mov
outsl
sub
mov
ja
aaa
fisubl
sbb
sti
aad
loope
jmp
push
loope
mov
inc
mov
divl
xchg
push
dec
add
insb
outsl
push
out
int
fdivl
sti
lods
fsubrl
in
pop
movsb
mov
mov
or
push
sub
fildl
cmp
sub
sbb
out
inc
ret
push
outsb
dec
fstpl
add
cmpsl
cld
dec
in
sbb
aas
jmp
mov
fildll
xchg
and
lods
dec
jmp
jne
aaa
ss
xchg
inc
and
inc
cmpsl
sub
icebp
fidivs
jecxz
inc
mov
sub
fwait
cld
neg
xor
imul
int
arpl
xor
dec
xchg
or
xchg
repz
lock
lea
jb
add
mov
rcrb
or
mov
int3
cmpsb
rol
and
cmp
sbb
mov
incl
push
loope
decb
adc
or
lea
push
call
pop
xchg
mov
add
add
pop
lahf
cld
pop
inc
push
mov
in
mov
mov
scas
mov
roll
pop
and
pop
shr
or
je,pt
fsubl
xor
adc
rcll
pop
mov
rol
in
pop
es
xchg
add
addb
cli
cmpsl
pusha
cmp
call
loope
xor
pop
cmp
mov
jp
mov
sbb
dec
adc
nop
pusha
gs
add
mov
ficomps
insb
lret
xor
sbb
sbb
sub
test
inc
sub
mulb
hlt
fsubrp
pop
aam
neg
pop
sub
nop
pusha
mov
pop
repnz
push
pop
inc
cmp
sub
inc
add
enter
icebp
fldt
mov
and
or
ja
xchg
loope
push
inc
out
andb
xor
add
adc
lahf
dec
les
add
jg
loopne
ss
or
test
inc
clc
pushl
call
xor
orl
icebp
incl
aam
lahf
out
fistps
daa
scas
pop
lahf
dec
xchg
std
add
inc
cmp
out
jno
xchg
or
jl
pop
mov
xchg
aaa
dec
pop
out
in
add
sti
je
mov
orb
push
fs
xor
cmp
testb
jl
mov
and
lods
call
ror
in
sub
pop
shl
out
in
pop
rcrl
mov
inc
xchg
inc
push
adc
stc
adc
add
sahf
add
mov
push
pushf
xchg
pop
movsl
out
out
cld
mov
cmp
push
cli
nop
cmp
add
push
dec
or
xchg
add
jmp
push
fs
test
inc
int3
mov
xorl
push
ds
nop
lds
decl
add
scas
test
jae
add
pop
jl
push
sbb
jns
je
repz
mov
loope
les
adc
mov
adc
cs
test
cmp
ja
inc
pusha
pop
add
clc
add
xchg
je
incl
scas
sub
add
add
add
lods
or
jl
aaa
arpl
xor
jnp
mov
and
xlat
add
rclb
mov
test
push
xchg
ljmp
orb
out
add
fldenv
loope
pusha
mov
ss
into
pop
pop
cmpsb
dec
xchg
pop
fidivs
sbb
ss
mov
imulb
mov
xor
push
pop
mov
inc
xor
int3
out
das
xor
aas
popa
xor
bound
fidivrs
jp
fsin
rol
push
add
fwait
out
inc
add
dec
sub
sti
out
pushl
fstpl
add
cmpsb
adc
scas
mov
ucomiss
incl
push
add
dec
mov
jecxz
data16
aam
frstor
pop
sbb
mov
cmp
cs
gs
or
mov
mov
addr16
mov
add
mov
fstpt
out
xchg
mov
add
jecxz
add
cli
lret
mov
sub
lahf
idiv
jg
rcrl
inc
cs
addb
or
dec
push
test
add
cwtl
shrb
out
xor
mov
xchg
and
sbbb
jo
adc
cmpsb
sahf
adc
and
push
adc
clc
decl
dec
ds
pop
add
xchg
cmp
dec
aam
or
in
out
mov
push
adc
sub
ljmp
bound
dec
arpl
mov
imulb
ret
and
sub
add
in
faddl
inc
mov
push
xchg
add
mov
add
mov
mov
pop
mov
hlt
rcrb
sbb
pop
add
mov
add
out
hlt
and
sbb
push
aad
in
and
addl
mov
insb
call
xor
mov
aad
cli
test
loope
test
sub
outsb
mov
jl
test
shll
mov
cwtl
dec
cli
scas
loopne
insl
hlt
sbb
or
out
dec
jle
or
sbb
aaa
mov
xchg
fistpl
mov
inc
push
xchg
jbe
sarb
adc
idiv
out
lods
mov
or
loope
inc
pop
cmp
mov
shrl
fstp
mov
icebp
and
mov
hlt
decl
cwtl
pushf
ljmp
xor
aad
sbb
mov
and
mov
and
fnstsw
data16
push
or
shr
ja
fcom
cmp
sub
inc
add
and
test
mov
ja
xchg
fadds
dec
push
push
mov
sub
pop
sbb
jno
cltd
or
mov
jmp
fdiv
pop
or
jmp
cmp
push
test
movb
xchg
or
jmp
mov
push
rcrl
in
dec
adc
add
push
inc
or
ret
pop
mov
leave
js
sbb
movsl
dec
cld
sub
adc
mov
xor
mov
jl
xor
pop
mov
mov
sub
push
mov
aaa
xor
imul
inc
push
imul
or
dec
pop
xor
sbb
in
mov
sbb
movsl
cs
imul
sbb
std
sub
xchg
lcall
fs
iret
call
jg
xchg
mov
mov
pushf
mov
imul
fdiv
or
and
aas
lret
mov
lcall
cld
je
sbb
aam
out
mov
filds
lods
pop
jb
lret
or
mov
mov
jge
pop
sbb
int3
test
rcrb
jnp
jmp
insl
dec
mov
push
push
xorb
cmc
insl
jecxz
cmovle
xor
pop
inc
leave
and
mov
inc
pop
jp
xchg
inc
sbb
in
mov
bound
and
dec
cmp
das
xor
fistpll
pop
mov
call
lea
lock
xor
scas
adc
icebp
dec
mov
loopne
or
jge
daa
mov
fistps
cwtl
sbb
mov
adc
mov
sbb
decl
ret
xchg
clc
cmp
idiv
ret
scas
lods
int
loopne
mov
inc
daa
cmp
jno
xor
push
lcall
mov
ja
and
out
loopne
movsb
lock
and
inc
push
pushl
cmpsb
sub
cmp
push
lods
mov
cmp
mov
popa
sub
sub
push
adc
movsl
inc
and
fdivs
int3
mov
movsb
pop
dec
sub
xchg
int3
mov
lods
shlb
jle
inc
mov
inc
cmp
int3
adc
jge
cld
pop
sbb
add
sub
or
add
cmpsl
pop
or
jle
push
jle,pn
enter
mov
sub
ja
lcall
xchg
sub
int3
out
movsb
fistl
jecxz
mov
insb
mov
ret
jno
mov
fwait
rclb
out
pop
jecxz
mov
xchg
cmpsb
sbb
jae
inc
nop
scas
mov
std
bound
dec
aam
inc
sbb
sahf
aad
or
dec
enter
out
jbe
cmp
cmp
shl
daa
push
jne
std
adc
ficoml
in
pop
xchg
jp
or
lcall
or
jg
lock
xchg
ficoms
adc
dec
fsubrs
cld
inc
push
add
pop
pop
ljmp
cmpsl
out
test
movq
or
lock
popa
imul
pop
mov
enter
popa
cmc
sub
pusha
in
int3
in
ja
int
cli
gs
xchg
cmpsl
stc
or
dec
or
push
ficoml
int
test
jl
xchg
cmp
sub
ljmp
pop
bnd
shl
mov
test
or
inc
out
mov
cmp
outsb
insb
push
inc
sbb
lock
and
dec
pop
fcom
scas
mov
sub
and
xchg
push
push
add
sarb
arpl
in
cmp
js
pop
fwait
test
inc
xor
inc
fwait
in
sub
push
sbb
or
and
test
inc
aam
pop
arpl
or
sbb
lcall
add
js
jp
xchg
cmp
cmpsl
inc
cld
mov
mov
andl
jmp
mov
sbb
dec
sbb
jmp
push
outsl
mov
xchg
pop
mov
insl
imul
mov
and
cmp
test
push
adc
rol
ret
cmp
mov
mov
push
idiv
jo
cmp
ds
sub
lret
movsl
and
mov
mov
sbbb
mov
ljmp
mov
inc
fbld
jge
push
mov
mov
mov
adc
jl,pn
push
add
ja
mov
cmp
add
pushl
mov
xor
cltd
jno
mov
aaa
add
jp
in
lcall
mov
push
das
faddl
loopne
pop
sti
and
cs
dec
fisubrs
push
loop
push
mov
xor
inc
daa
mov
mov
push
add
orl
scas
adc
push
outsl
scas
jo
dec
outsb
pushf
push
sbb
popf
cwtl
inc
and
add
pusha
push
sbb
mov
pop
das
cld
dec
xchg
jl
xchg
mov
xchg
xchg
cmpsb
pop
and
outsl
das
mov
data16
inc
mov
push
andb
cs
sub
xor
in
mov
sub
popa
mov
mov
incb
int
push
sub
push
add
jp
pop
xor
cld
adc
push
pop
dec
stos
fdivrs
mov
cmp
out
mov
sub
outsl
das
fmuls
sbb
add
mov
mov
call
mov
add
fdivs
jecxz
jle
in
daa
stos
lahf
xor
jl
pop
mov
outsb
ljmp
mov
cld
ljmp
test
mov
loopne
sahf
sbb
and
adc
aaa
loop
push
add
adc
pop
cwtl
mov
ss
and
and
cmp
inc
inc
xchg
xorb
loopne
std
ret
movsb
xchg
jge
sub
jmp
std
sbb
xchg
lret
stos
clc
ja
sti
sub
xchg
test
and
lret
sub
into
jne
dec
xchg
pop
xor
popf
shlb
push
test
in
sub
lcall
mov
cmp
adc
nop
cltd
movsl
pop
ss
push
insb
and
lds
mov
push
and
and
inc
movsl
mov
mov
inc
cwtl
cs
call
or
pop
lods
xorl
decl
dec
cmp
sub
orb
or
paddw
fsts
pop
adc
das
lret
sbb
or
loope
dec
cmp
loope
std
jg
pop
movl
aaa
inc
clc
cld
insl
stos
stc
les
ret
leave
std
xchg
cmp
pop
orl
je
push
test
loopne
adc
shl
mov
adc
nop
push
xchg
add
cmc
dec
mov
or
inc
push
faddl
jmp
jg
add
std
xchg
jp
push
clts
inc
out
pop
jl
ss
or
clc
jo
sbb
fbstp
jl
aas
inc
call
pop
and
cmp
mov
popf
add
xchg
and
call
clc
jno
test
jg
xor
loop
push
xchg
sbb
mov
pop
xor
int3
repz
into
insb
sbb
decl
das
jg
test
dec
iret
cmp
xchg
ljmp
movsl
pusha
cltd
pop
cs
mov
in
insb
ja
mov
lods
push
xchg
add
sbb
clc
shlb
adc
adc
sub
pop
mov
int3
lcall
jl
inc
ljmp
aam
jb
mov
sub
outsb
out
xlat
outsb
jne
add
shll
or
mov
call
iret
mov
and
faddp
clc
mov
les
je
nop
inc
das
sub
mov
std
in
mov
jne
jae
orb
in
fucomip
cs
xchg
mov
xchg
jge
bound
xchg
mov
cld
or
fdiv
int
in
js
or
lea
hlt
ljmp
jl
push
pop
testb
xor
loopne
push
fnstenv
stc
xchg
mov
cli
test
aas
add
shll
and
jp
outsl
icebp
xlat
xchg
jbe
repz
shrl
cmpsb
into
bound
imul
fwait
cmp
mov
outsb
aam
sub
in
outsl
fsubrs
lods
repnz
sub
adc
cs
jg
sarl
bound
adc
shll
pop
lea
mov
sub
outsl
mov
add
or
pop
jae
jmp
nop
aas
rorb
cmp
or
mov
jo
xlat
lret
std
ret
leave
dec
int
or
and
pushf
mov
pop
push
jg
rol
popa
cmp
xor
and
add
mov
dec
cmpsb
pop
jno
mov
loopne
pusha
and
pop
inc
dec
out
movq
addl
xchg
int3
fcomip
ss
pop
xchg
jmp
add
or
std
push
xorb
incb
lcall
loope
jmp
inc
dec
xchg
insb
movsl
ljmp
cld
ret
aam
aam
or
mov
clc
stos
nop
movsb
fwait
rcrl
mov
jns
adc
and
repz
push
bound
push
add
push
cli
aas
push
xlat
dec
adc
sbb
out
and
call
call
mov
pop
cltd
fidivrl
inc
ret
aas
jl
ss
cli
leave
mov
and
das
mov
mov
sbb
in
lret
pop
xor
lock
mov
ss
xchg
lret
cmpl
inc
cli
mov
adc
jl
mov
or
in
cld
sbb
adcb
push
sahf
aam
test
push
push
mov
sub
jns
lret
pusha
cmp
mov
mov
roll
xlat
ret
ret
inc
xchg
popf
inc
jmp
pop
rep
lahf
adc
jmp
cld
or
cmp
out
sbbl
aas
fwait
cmpsb
jo
mov
and
pop
pop
mov
push
xchg
jle
aaa
cmp
add
aad
movsl
push
iret
test
pop
add
push
in
dec
cld
or
xor
push
insb
cmpl
sbb
stos
mov
xchg
dec
idivb
sub
incl
rorb
pop
and
test
dec
dec
aad
pop
loopne
sbb
push
into
cmc
decl
xor
dec
dec
inc
pusha
orl
mov
outsl
ret
mov
out
aam
inc
ret
movsl
xor
adc
cmc
enter
fcom
pop
rcrb
jb
outsb
iret
cld
fsubrl
pop
lahf
sbb
pusha
rcrl
cmpl
decl
push
subb
sbb
popa
mov
and
movl
js
outsb
xor
test
add
jg
sub
outsl
insb
xchg
add
aad
xchg
jo
mov
adc
cmpsl
mov
ret
test
outsb
int3
loope
fsts
push
pushf
jg
outsl
push
push
jne
rorl
mov
mov
or
bnd
fbstp
push
call
and
mov
data16
arpl
and
call
push
iret
fisubs
sub
test
mov
setb
fs
xchg
les
lcall
pop
mov
popa
sti
ljmp
mov
into
xchg
aaa
add
inc
push
cld
xor
jl
jnp
mov
push
sbb
mov
mov
mov
or
das
bound
loope
or
call
xor
dec
push
jne
fprem
orl
addr16
into
lods
outsl
js
mov
ret
or
addb
les
pop
mov
xchg
cli
inc
push
mov
pop
sub
push
mov
xor
das
jge
cli
inc
mov
scas
jmp
inc
mov
mov
dec
call
mov
test
lret
xchg
pop
cmp
inc
divl
xor
push
fisubl
aad
ss
jbe
pop
and
xor
mov
sub
mov
in
aas
loope
mov
xor
std
arpl
and
out
or
mov
inc
inc
test
inc
mov
in
dec
add
fdivrl
loopne
jle
xchg
orl
mov
or
jecxz
push
aad
test
test
int3
ss
imul
xchg
jmp
int
popf
cwtl
lret
mov
call
inc
or
mov
insb
shrl
add
outsl
pop
imul
test
inc
aas
mov
or
cwtl
fprem1
add
adc
add
je
divb
popf
jg
fcmovne
ja
out
das
imul
ja
push
idivb
or
daa
dec
lcall
mov
jmp
fmuls
out
addr16
mov
scas
xor
movl
das
lock
ja
shrl
aas
aas
mov
clc
push
inc
aas
clc
incb
test
clc
pop
mov
sbb
cmc
call
call
mov
push
pop
clc
pop
fldt
int
dec
shl
pop
lahf
shlb
pop
lcall
fsubs
scas
push
decl
inc
mov
fldt
lret
jecxz
jns
insl
std
incl
aas
outsb
cwtl
clc
add
fs
sahf
push
lock
mov
or
jbe,pn
sti
jle
mov
jb
push
int3
imul
stc
ret
xor
cmp
sbb
cmpsl
jg
pop
push
in
xchg
je
imul
inc
pop
cli
scas
adc
mov
dec
dec
lods
call
lods
lret
inc
fidivs
sbb
test
addr16
aam
cld
incl
or
adc
cld
js
mov
in
xor
inc
mov
add
sub
lds
loope
mov
sbb
popf
and
inc
fildll
push
add
pop
mov
add
stc
dec
inc
jg
addl
aad
lea
sbb
mov
mov
stos
fidivl
dec
test
out
add
lds
pop
mov
in
stos
test
fsubrs
inc
mov
lods
cs
xor
xchg
mov
push
dec
xor
dec
mov
test
sub
es
pusha
add
outsb
in
clc
cmpb
leave
das
mov
xor
rclb
call
shlb
add
cltd
dec
add
fbstp
leave
xor
sbb
mov
std
cmp
mov
loope
icebp
pop
inc
mov
pop
cmp
subl
int3
mov
add
mov
scas
pop
orl
and
xchg
popa
jle
filds
adc
mov
xlat
or
add
lock
and
push
jmp
dec
out
xlat
mov
push
test
jne
jp
out
sub
cmpsb
lods
mov
push
sub
push
cmp
inc
je
fdiv
mov
jae
jmp
outsb
cwtl
bound
int
mov
sub
jg
nop
push
or
or
adc
ret
repz
sbb
cmc
lods
ret
sahf
ljmp
mov
mov
je
jle
add
ficomps
sub
xor
sahf
jo
pop
xchg
inc
mov
mov
data16
add
mull
stc
add
adc
mov
popa
cmp
subl
mov
mov
and
shr
pop
sbb
imul
sti
in
ljmp
rorb
loopne
filds
mov
xchg
lods
sbbb
fstpt
or
sub
mov
jecxz
adc
xchg
pop
adc
outsl
ret
dec
inc
cmp
test
cmpsb
scas
movsb
fldenv
jb
insl
inc
ds
call
stc
in
les
arpl
jp
and
gs
pushf
pop
mov
adc
mov
cmp
outsb
lds
jmp
lret
or
sub
aam
adc
and
and
dec
cmp
sbb
xor
in
mov
adcb
inc
inc
pop
push
or
jo
loope
inc
add
dec
fimull
or
or
and
int3
bound
add
movsl
dec
cli
inc
cmp
sbb
push
hlt
add
frstor
jb
inc
cmp
adc
adc
stos
fstl
push
in
add
sbb
aam
xor
mov
or
and
mov
stos
in
pop
xor
add
pop
aam
lcall
fsubp
inc
pop
push
xchg
dec
aas
and
add
or
sub
ret
sbb
inc
jnp
test
pop
mov
mov
lds
dec
in
mov
ss
mov
aam
fucomp
pop
clc
cmp
and
fisubrs
in
repnz
enter
xorb
sahf
jle
cmp
out
test
cmp
cmp
xor
mov
clc
and
adc
data16
hlt
fs
inc
jo
mov
ret
cmp
in
adc
stos
in
fisttpl
mov
jl
hlt
in
out
jnp
jne
add
push
insl
clc
adc
test
jb
push
popa
add
xchg
xlat
dec
jns
aad
jo
sub
cmp
or
or
push
inc
sbb
aam
sbb
stc
in
cmc
fcoms
fildll
mov
push
mov
mov
add
inc
xchg
jns
xchg
sub
insl
sbb
shll
cmp
cmp
in
sub
push
mov
mov
push
mov
mov
fcomps
sbb
or
ret
loopne
in
fcomi
mov
jp
fdivl
mov
icebp
es
aad
xchg
cmpl
fsubrs
pop
adc
test
out
test
fdivrl
shrl
push
add
sbb
xor
sbb
stos
adc
push
inc
adc
mov
imul
mov
fwait
or
add
jno
sbb
pop
xchg
lock
lock
add
ret
jge
cli
ret
pop
test
divl
sub
neg
cmpsb
add
std
lock
popa
ret
xchg
pop
lods
adc
mov
jg
and
movsb
cwtl
loopne
push
rorb
es
jns
jo
and
push
pushf
int
loopne
push
shr
push
xchg
and
inc
pusha
clc
pop
sub
adc
sahf
stc
push
arpl
ds
call
fadds
lds
fcmovb
repnz
push
xor
mov
or
fldt
int
mov
cld
je
xlat
mov
in
and
sbb
add
stos
add
icebp
cld
xor
and
fsubr
xor
add
into
popa
out
pop
loope
into
sbb
or
imul
je
fnstenv
fucomip
adc
jg
movsb
cwtl
dec
and
jle
jb
adc
iret
scas
call
inc
pop
jo
xlat
cmp
push
inc
lahf
imul
lea
stc
clc
inc
or
cwtl
inc
xchg
jns
or
loopne
push
or
fdivrl
insl
adc
imul
adc
sbbb
dec
add
das
loopne
push
push
fsubs
data16
dec
sarb
fmulp
and
jmp
xchg
or
fdivl
jno
lea
fsubl
ror
rorb
sub
dec
fucomi
hlt
xchg
add
pop
xlat
dec
push
adcb
jecxz
xor
fiadds
adc
out
sbb
lods
shl
dec
pop
lock
stc
or
push
jns
repz
ss
mov
in
out
jge
mov
add
xlat
and
pushf
mov
lcall
rorl
dec
inc
push
fnsetpm(287
fidivrl
mov
je
xor
adc
sub
repnz
pop
rclb
pop
mov
adc
jo
and
jp
or
pop
dec
or
and
mov
lcall
icebp
sbb
sbb
jne
inc
xor
pusha
ss
jns
scas
and
mov
push
rcrl
sbb
scas
and
xchg
out
xchg
je
push
mov
jge
cld
fmull
lods
test
outsl
xlat
js
popa
dec
sub
mov
add
sbb
pop
in
push
stos
or
out
cmp
xchg
popa
loope
inc
push
mov
cmp
mov
pop
hlt
add
aam
jbe
rclb
stos
sub
or
shlb
jnp
shll
jbe
mov
ss
sub
mov
add
or
icebp
jge
pop
cli
mov
inc
ja
and
add
push
outsb
aam
outsl
dec
adc
lret
pusha
lods
sbb
mov
push
mov
test
mov
dec
arpl
adc
pushf
mov
arpl
jnp
mov
xchg
inc
shr
add
cmp
div
jnp
xor
push
jnp
lahf
sub
in
imul
cmp
decl
loop
xor
jmp
add
cmp
jo
jb
lock
or
incl
mov
test
imul
mov
cmp
fildll
and
sbb
mov
xor
mov
mov
fucomp
push
das
bound
pop
adc
pop
mov
cmp
lea
insb
push
ljmp
inc
fs
scas
ffreep
sbb
xchg
adc
cmp
btc
arpl
dec
push
cli
mov
xor
and
adc
jmp
sbb
cmpsl
add
add
jns
cmp
in
test
adc
add
scas
nop
loope
pusha
aam
xchg
sbb
filds
das
sub
call
and
cli
push
push
in
mov
xchg
mov
aaa
mov
dec
mov
and
sahf
outsl
jg
mov
sbb
repz
loop
imul
inc
iret
pop
add
jmp
sub
and
pop
test
and
loope
push
push
inc
orb
jb
mov
xorl
popf
jnp
dec
inc
adc
fldt
xlat
cmp
fiaddl
inc
enter
lret
shl
cmp
arpl
test
add
mov
repnz
mov
xchg
or
mov
rolb
or
outsl
inc
xorl
mov
push
into
cs
das
out
pop
mov
xchg
jecxz
xchg
and
ljmp
xchg
fstp
pop
jecxz
cwtl
push
fmull
pop
cli
and
aam
test
shlb
or
notl
ljmp
cld
sub
cmp
or
sbb
sub
adc
mov
jg
lods
addr16
inc
cwtl
cwtl
loopne
stos
loop
mov
xchg
cmp
iret
or
outsl
ljmp
nop
xchg
insb
icebp
repnz
mov
cld
jmp
data16
mov
xor
add
mov
dec
fildl
jmp
mov
jb
cmp
mov
imul
xchg
test
out
push
and
cmp
clc
pushf
adc
xchg
adc
or
lods
jmp
in
das
lods
add
gs
into
test
pop
std
xchg
popa
inc
push
fnstenv
mov
add
push
js
aas
cmc
mov
rorb
mov
std
push
repnz
out
pop
mov
and
cmp
insb
and
and
push
mov
dec
push
sbb
icebp
inc
fcomip
xchg
pop
and
stc
pop
push
xor
pop
mov
cwtl
xchg
test
cmpb
enter
cwtl
es
and
or
pop
mov
lock
into
add
adc
jo
or
push
ljmp
pushl
shrl
stc
pop
xor
add
jo
jp
push
push
mov
stos
jp
mov
xchg
mov
adc
or
scas
pop
xchg
cld
add
mov
push
clc
std
mov
mov
movb
js
in
loope
ljmp
push
ret
addb
adc
mov
sahf
gs
cmc
jl
sbb
inc
insl
jns
lds
outsl
stos
shlb
push
lcall
in
mov
lds
add
mov
mov
dec
outsl
sti
inc
pop
adc
push
or
rolb
mov
cs
out
ljmp
pop
xor
jne
mov
add
fwait
repnz
fsubrs
xor
cwtl
imulb
adc
mov
inc
inc
les
pop
shlb
loope
add
sub
sub
inc
mov
dec
lret
jg
lret
in
jl
ds
push
pop
jb
imul
jmp
std
inc
arpl
in
adc
outsl
nop
call
or
addl
adc
add
mov
mov
mov
add
adcb
and
in
jmp
call
cwtl
cmp
xor
ljmp
push
add
mov
repz
xorb
flds
aad
sub
add
push
mulb
jge
sti
and
pop
mov
repz
outsl
je
xchg
mov
stos
jp
filds
sti
mov
pop
out
adc
push
jge
pop
xor
dec
cmp
hlt
inc
mov
mov
cs
stc
and
pop
lods
cli
mov
push
sahf
xchg
vmovq
push
clc
js
fidivl
and
push
xchg
xchg
loopne
mov
mov
adc
gs
movsl
pop
mov
mov
cli
les
scas
and
test
inc
lret
icebp
das
cld
test
add
in
mov
push
sub
or
in
inc
adc
das
insb
push
jo
mov
roll
mov
das
xchg
dec
mov
std
mov
dec
sub
gs
add
mov
xchg
mov
je
int
pop
ja
and
add
fs
jecxz
pop
hlt
lods
push
lods
iret
push
pop
mov
dec
pop
in
fimuls
push
mov
jns
or
xchg
add
push
outsl
push
mov
insl
frstor
sub
jl
outsb
sbb
rclb
out
pop
scas
fldenv
sbb
xchg
mov
ds
mov
or
sbb
and
jmp
cmp
incl
cltd
cmp
or
mov
mov
pop
pop
lahf
jg
sarl
cmp
or
test
push
jbe
jle
mov
ljmp
fcmovnu
sbb
sbb
add
pop
jno
sbb
add
add
xchg
xor
pop
jo
pop
push
repz
mov
stos
shl
mov
add
mov
mov
pop
js
lods
sbb
adc
jns
mov
adc
xor
xlat
test
push
sti
xchg
loopne
sub
adc
jecxz
fisubrs
and
mov
shl
pushl
mov
xchg
and
sub
out
cmp
fimuls
mov
mov
and
sti
outsl
jo
out
loope
inc
adc
aaa
shlb
xor
out
or
fiaddl
shl
ret
int
xchg
outsl
mov
divb
call
into
mov
push
jle
cmp
adc
jnp
test
pop
andps
mov
mov
rep
or
test
sar
jecxz
fwait
mov
push
clc
lea
and
call
and
lret
icebp
adc
call
or
adc
inc
aas
xor
mulb
lock
js
jbe
sbb
rolb
push
and
sti
xchg
stos
decl
es
ss
adcb
xchg
mov
out
mov
icebp
lcall
in
loopne
aaa
incb
jb
pop
mov
pop
test
adc
out
jns
adc
sub
outsb
insb
fstpl
cmc
dec
mov
or
outsl
cld
cmp
bound
add
jns
cld
outsl
mov
and
mov
ret
and
inc
jno
sub
fsubrl
or
fwait
mov
pusha
add
and
enter
mov
pop
loop
mov
mov
repnz
xchg
pop
lds
push
jg
sbb
sub
cmp
cmp
push
aam
dec
push
lods
add
adc
pop
jle
into
ljmp
sbb
add
gs
in
aam
mov
loope
jmp
ljmp
rolb
icebp
cmpsb
fidivs
add
add
sub
xor
push
push
or
out
jo
push
ret
adc
dec
ror
or
jne
dec
xor
adc
mov
sbb
rcrb
lea
sub
int3
pop
je
adc
stos
mov
sub
xor
cmp
inc
pop
imul
push
inc
adc
and
push
clc
add
iret
adc
and
aam
mov
adc
dec
fimuls
or
les
inc
push
adc
or
jno
fsub
push
shlb
inc
inc
xchg
push
xor
das
pop
fdivl
mov
aam
loope
stos
pop
shlb
ja
jo
cmp
sbb
adc
fists
lods
imul
hlt
pop
sub
cli
in
add
es
mov
adc
addl
push
cmc
repnz
imul
jno
or
cmp
stos
mov
scas
enter
insb
add
roll
out
xor
adc
inc
jae
xor
shl
mov
lea
enter
push
cmp
mov
add
push
or
jle
repz
adc
jle
sbb
int
sbb
in
and
add
dec
push
xor
loop
xchg
xor
and
mov
loope
mov
in
int3
jp
stos
pop
sub
data16
stc
xchg
or
pop
add
inc
dec
jo
inc
lods
pushf
pop
push
xlat
cmp
mov
ror
in
push
and
flds
lock
mov
in
adc
mov
aad
rolb
xchg
mov
ror
xor
out
add
andb
inc
pop
loop
push
enter
ficoml
call
and
mov
lock
lret
and
test
xorb
add
adc
push
cmpsl
mull
sub
xorl
mov
cmpsl
xchg
xchg
cmpb
xchg
scas
sbb
repz
jecxz
push
cmp
out
dec
cmp
movsb
and
cmp
mov
fimull
push
or
xor
inc
jae
in
fsubl
sbb
sub
mov
das
push
mov
xor
out
test
push
sarl
mov
pop
cmp
aam
in
and
les
dec
faddl
lds
out
or
push
popl
pop
sbb
sbb
jp
sbb
mov
pushf
cmp
jno
add
mov
fnstsw
roll
xor
cs
xchg
dec
int3
fsub
xor
sbb
cld
scas
adc
aam
lock
sahf
int3
insb
inc
sub
dec
jmp
cmp
inc
xchg
or
mov
inc
xor
and
clc
ret
jo
fcmovnu
lock
movsb
push
adc
inc
cld
push
jl
pop
sbb
pop
jmp
pop
add
pop
adc
subb
xor
mov
lock
in
xor
rcl
cld
call
cmc
or
pop
hlt
push
or
arpl
adcb
dec
mov
sbb
lret
fdivl
loop
imul
sti
call
mov
mov
sahf
loopne
and
aas
es
mov
loopne
xchg
pusha
cmc
jbe
pop
rcrl
rorb
pop
in
lock
mov
icebp
push
sbb
mull
or
lret
lock
adc
jae
lock
jl
fstpt
loop
leave
adc
adc
adc
popa
ja
shlb
pop
jmp
inc
or
fistps
idivb
adc
scas
mov
mov
cli
push
fsub
movsl
loopne
jge
out
jo
push
sbb
push
push
pop
cmp
enter
dec
xor
and
adc
ja
and
std
mov
sub
cld
lea
mov
dec
fwait
lods
call
xlat
clc
pop
insl
mov
rcll
dec
dec
xor
int
push
shll
adc
call
dec
jb
add
enter
add
pop
iret
popa
inc
call
fs
push
dec
jge
pop
push
icebp
sbb
out
or
and
nop
add
add
adc
push
xchg
add
jg
adc
fcmovnbe
push
fists
lret
xchg
dec
dec
subb
lock
push
push
test
repz
xor
xor
inc
imul
sub
cmp
jl
sti
jns
data16
loopne
fsubrs
test
mov
ret
adc
mov
mov
test
mov
dec
xor
jbe
or
ret
repz
mov
fucomp
data16
fdivrs
mov
or
pop
cmp
outsb
dec
cli
push
jp
std
montmul
cmpsb
inc
dec
dec
cmp
add
loopne
add
movsl
xor
mov
push
add
test
sbb
fldt
push
cmpsl
lock
scas
in
pusha
xlat
test
clc
cmp
data16
pop
jo
jb
dec
add
rorb
push
lcall
push
scas
outsb
pushl
sub
mov
mov
sbb
call
jnp
insl
xorl
ds
fildl
addl
clc
xchg
in
je
ret
add
ja
stc
fwait
mov
pushf
in
mov
ret
pushl
jp
push
cli
pop
int
hlt
push
icebp
out
iret
xor
xchg
out
movsl
mov
push
mov
jg
pop
ret
fildl
aam
dec
xor
adcb
xchg
cwtl
out
adc
xor
lahf
int3
incl
mov
jl
call
inc
mov
xor
cld
das
adc
pop
les
cs
cltd
jp
scas
decb
inc
mov
add
mov
mov
push
cmpb
sbb
fldenv
adc
mov
and
and
cmp
fildl
or
ficoml
mov
scas
insb
xchg
sub
incl
mov
in
sub
in
adc
fwait
cmp
sbb
jns
or
or
add
mull
push
mov
bound
adc
test
pop
fstl
fwait
mov
push
sbb
jae
std
aas
add
xchg
loop
ret
sub
std
das
cld
incl
adcl
push
lahf
mov
and
sar
decl
mov
lret
cmp
mov
bound
xchg
push
out
add
scas
mov
pop
orb
mov
adc
loop
mov
jl
in
cmc
les
loop
in
inc
imul
arpl
lret
cltd
sarb
lock
dec
adc
cmpsl
bound
mov
sub
mov
arpl
clc
je
or
dec
lock
xor
mov
ja
jne
std
add
jg
inc
or
lcall
pushl
je
inc
jnp
mov
dec
push
mov
imul
cwtl
into
and
add
dec
pop
sub
decb
and
jmp
sbb
aaa
icebp
scas
jl
sbbl
xor
add
cmpb
out
and
les
movsl
push
add
push
pop
mov
test
rolb
stc
xchg
notb
pop
lds
ljmp
and
push
jne
jns
xchg
and
mov
adc
dec
idiv
dec
icebp
pop
fsubrl
add
pop
out
xchg
cs
mov
std
js
or
xchg
dec
pop
fadds
insl
clc
cs
jecxz
lea
das
sarb
jp
sahf
inc
ficompl
call
lea
loop
mov
inc
rcl
test
je
push
insl
mov
pop
pop
jp
mov
xor
xchg
xchg
inc
and
lods
add
sbb
xor
inc
jl
bnd
sbb
pushf
mov
pusha
imul
or
pop
jge
jl
inc
add
jle
mov
call
jo
icebp
or
mov
inc
inc
shlb
xchg
das
xor
dec
scas
loopne
jl
add
fs
xchg
cli
mov
jmp
xchg
jp
xchg
outsb
and
movsb
inc
imul
jbe
push
sbb
cmp
insl
dec
mov
mov
mov
pop
insl
ss
sbb
sbb
mov
loopne
shl
xchg
dec
aas
clc
xor
sbbl
inc
mov
sbb
arpl
or
mov
popa
mov
mov
pop
sub
xchg
pusha
jnp
in
or
loope
mov
or
cmc
movsl
mov
add
jp
and
fstpt
or
add
jo
fstpt
in
dec
mov
in
adc
scas
sbb
shrl
inc
dec
jecxz
fisubrs
shrb
sbb
xchg
aad
jecxz
mov
inc
cs
lret
incl
pop
jge
cs
fisttps
mov
test
sbb
dec
sub
jp
fdiv
in
jne
sub
mov
scas
es
sub
mov
add
jecxz
shrl
roll
fistl
lock
sub
push
pop
outsb
inc
stc
cmpsb
adc
leave
in
jae
shrl
or
fs
jno
shlb
cli
idiv
jg
sbb
push
jecxz
mov
repz
mov
and
rcrl
dec
xchg
ret
jg
sbb
cwtl
mov
and
xchg
sbb
movsb
sub
push
mov
jg
cmp
testb
decl
clc
popa
cmp
movsb
ret
and
mov
movsb
in
ret
cs
sub
jae
fcmove
or
rolb
cld
xchg
push
dec
and
xchg
mov
add
mov
popf
mov
push
cs
movsb
cmp
fistps
jo
nop
jnp
cld
cmpsb
ljmp
pop
push
xchg
xor
mov
nop
xchg
mov
decb
sahf
cmc
add
adc
pop
mov
push
jbe
pop
jg
push
call
adc
lea
inc
mov
push
dec
sub
dec
movsl
decl
lahf
xor
push
add
push
or
jl
fistps
push
xchg
and
adc
aaa
clc
sbb
ss
xorl
dec
inc
leave
ja
xor
xor
loopne
shrl
mov
mov
inc
jecxz
call
sbb
mov
movsb
popa
add
mov
es
fldcw
mov
or
push
adc
cltd
push
or
mov
loop
stos
imul
inc
xlat
pop
rolb
add
clc
inc
and
icebp
pop
lret
xor
in
pop
ss
cld
xor
sub
fildll
xor
pop
je
aam
shll
add
loope
mov
lock
shlb
pop
or
cwtl
inc
cmp
std
lods
in
fwait
sub
fs
test
jle
iret
shll
mov
inc
and
dec
sub
pop
inc
mov
dec
aam
pushf
mov
icebp
fucomip
aad
sti
lods
fadd
lods
pop
jae
sub
jg
jle
iret
int3
inc
fsubrs
xchg
cs
jbe
ret
ret
cltd
add
and
ss
and
jp
mov
jg
ss
sbb
fmull
dec
push
sarl
cwtl
dec
call
mov
movsl
out
add
pop
shrl
push
test
in
movsl
jl
push
sbb
push
jecxz
cmp
cmc
inc
xchg
xchg
es
clc
fisttps
movb
rorb
adc
mov
mov
sarb
inc
pop
push
push
xor
adc
rcl
mov
sbb
mov
push
into
orl
add
sbb
out
lret
pop
jnp
arpl
outsl
mov
mov
xchg
cmpsl
das
insb
std
jg
add
xor
mov
xchg
int
insl
popa
imul
pop
xchg
adcl
push
pop
out
loopne
xor
mov
clc
mov
clc
dec
pop
lea
insl
mov
adc
mov
dec
pop
arpl
js
out
or
xor
movsb
fbld
cmp
mov
stos
mov
outsl
rorb
ds
fcomip
sbb
push
xchg
roll
jl
test
fistl
out
jbe
mov
mov
out
inc
sbb
orl
das
push
mov
shlb
imul
decl
jmp
jns
sbb
add
mov
xchg
mov
and
negl
xchg
push
pop
rcl
fmul
arpl
or
addl
enter
mov
cmpsb
ror
mov
lock
adc
add
jmp
outsl
shrb
insl
mov
push
sbb
adc
repnz
and
jg
jg
xlat
mov
in
leave
pop
insl
test
sbb
inc
je
cmpsb
ret
test
adc
pop
cmc
inc
jecxz
xlat
inc
cmpsb
out
shlb
mov
xchg
lcall
je
mov
pushl
mov
jle
or
mov
jg
inc
js
rcl
sbb
jl
imul
pop
sbb
cld
int
mov
jmp
adc
pop
andb
add
data16
cmp
test
push
nop
ljmp
dec
pushf
nop
ret
lret
push
inc
ljmp
in
dec
xchg
push
mov
pop
shl
cmc
es
or
mov
out
and
shr
push
mov
aam
adc
in
adc
add
pushl
mov
jecxz
adc
cli
cmp
lahf
dec
cmp
xor
aaa
nop
xor
clc
push
xrelease
iret
inc
les
mov
and
mov
sub
jg
dec
fistpl
in
stos
ja
inc
hlt
add
pusha
sbb
or
decb
mov
fcoms
repz
dec
pop
fisttpl
fcomip
sbb
ja
pop
and
sbb
je
push
mov
jle
jg
mov
xchg
sbb
xor
mov
dec
ret
hlt
xchg
pop
mov
pop
jecxz
fidivl
sub
inc
es
or
pop
mov
in
adc
mov
test
sahf
in
sub
ljmp
pop
ss
por
xchg
addr16
into
adc
ljmp
xchg
xchg
aam
push
popf
and
inc
pop
icebp
outsl
mov
and
push
popf
dec
ljmp
pop
ljmp
or
cmp
sub
dec
clc
and
or
xor
outsl
mov
inc
push
cld
repz
add
fbstp
push
lods
mov
adc
adc
cs
dec
inc
cmp
mov
add
sub
fwait
mov
mov
in
mov
add
icebp
fistps
mov
xor
push
stos
adc
xchg
mov
movsl
lock
sbb
pop
in
cmp
mov
adc
in
sub
gs
loopne
cld
inc
lods
and
sbb
add
lahf
ja
insb
add
push
mov
mov
test
andb
sbb
adc
and
sub
fdivs
fwait
neg
shll
pusha
and
mov
mov
js
ja
mov
fs
sub
mov
negb
cmp
call
les
dec
ljmp
fsubrs
leave
sub
int
push
mov
sub
test
xchg
ss
push
sbb
or
jne
dec
dec
cmpb
mov
cmpsb
or
les
andl
or
inc
mov
mov
adc
adc
adc
mov
or
aam
inc
hlt
mov
fs
jecxz
icebp
fidivs
pop
xchg
jle
inc
mov
fmulp
jle
inc
sbbb
movsb
pop
call
xor
and
inc
dec
pop
add
add
or
dec
cwtl
mov
mov
shll
cmpsb
test
aam
inc
test
aaa
mov
pop
cs
jp
and
out
add
sbb
cld
iret
push
mov
and
outsb
adc
dec
fists
push
push
push
push
fwait
popa
sub
ret
into
inc
lret
jnp
fxch
adc
hlt
push
pop
fsubr
or
jmp
fidivs
in
daa
adc
sbbl
addb
fnsave
or
or
inc
movsl
jne
lea
mov
sbb
and
pop
je
sbb
in
mov
mov
push
mov
jge
bound
adc
clc
jg
and
sbb
jo
inc
loop
pusha
add
ss
jnp
les
dec
pop
dec
repz
inc
mov
xlat
push
fstp
or
xor
and
les
and
pop
dec
out
or
adc
icebp
push
push
mov
push
xchg
js
mov
test
insl
insb
xor
in
in
imul
cld
testl
add
lds
jg
push
add
push
daa
jne
xchg
std
daa
sub
xchg
neg
adc
adc
add
jbe
dec
xchg
adc
shll
or
pop
jno
test
loopne
fisttpl
push
insl
sti
insl
loopne
loopne
fwait
sub
sub
mov
bound
mov
push
xchg
pop
lock
push
orl
xchg
ret
and
sub
andl
push
test
loop
pop
stos
ret
pop
add
mov
sub
jnp
loope
jne
fildl
xor
inc
pop
xchg
inc
adc
fnstenv
and
sbb
nop
popf
push
cmp
sub
add
pop
sbb
divl
pop
gs
push
and
mov
mov
cmc
mov
fcmove
xchg
jle
push
mov
mov
jmp
dec
shll
into
out
popf
jmp
pop
add
sub
scas
inc
das
pusha
shlb
jae
push
xor
dec
sbbl
jmp
ret
imul
dec
aas
cmp
fisttpl
adc
icebp
xlat
fisttps
hlt
iret
ja
adc
add
or
dec
movsb
sub
stos
xchg
inc
fistpl
dec
popf
test
dec
addr16
bound
xchg
or
addl
daa
cltd
and
lock
into
cmc
inc
test
xor
pushf
pop
mov
fiaddl
jge
fwait
cs
subb
aad
xchg
test
inc
lods
lock
mov
adc
add
pop
aad
les
stc
mov
mov
adc
push
lea
shr
push
push
push
lea
push
in
xorl
mov
jecxz
jbe
imul
cmp
push
fsubrl
scas
mov
sub
mov
and
push
pop
sbb
mov
cmp
mov
in
mov
dec
add
push
cmp
popa
xchg
jmp
rorb
imul
add
cmc
add
sub
mov
loopne
jl
adc
lcall
mov
ret
or
sub
out
jb
adc
jle
pop
imul
mov
mov
repnz
xor
cmc
repnz
pop
or
clc
dec
icebp
cmpsl
add
outsl
mov
int
xor
sub
test
cmc
popa
mov
and
sub
dec
xor
std
sbb
pop
call
lock
adc
jno
lods
inc
cs
movsb
cltd
dec
or
rcll
outsl
mov
dec
mov
callw
and
shll
hlt
rclb
lea
or
mov
xor
add
negb
cmp
and
cmpb
cmp
or
push
loop
mov
adc
pop
jle
aad
arpl
fsub
outsb
add
lods
mov
mov
add
pop
call
add
adc
jae
cwtl
lahf
push
mov
loop
inc
jae
dec
sar
add
push
sbb
mov
dec
dec
and
cmp
xchg
ja
out
cwtl
mov
cmp
cli
add
test
mov
jp
dec
pop
ja
repnz
and
inc
fisttpll
cs
add
inc
push
cwtl
fisubl
outsl
cli
bound
in
add
cld
idiv
negb
mov
repz
dec
add
xor
cmp
ret
xor
insl
and
lods
ljmp
ljmp
sti
xchg
loopne
sti
dec
dec
pop
mov
out
push
sbb
ds
mov
lret
dec
out
push
or
pop
enter
add
scas
xor
stos
push
negb
cmp
ret
push
inc
or
fisttps
mov
cmc
lods
lcall
push
cmc
mov
inc
scas
scas
add
pushf
xchg
lret
fnsave
rorb
inc
mov
sub
pop
shr
jne
add
je
push
mov
fs
lret
js
sbb
idiv
xor
jns
push
fldcw
rclb
pusha
shl
and
scas
jns
and
sar
decl
xchg
or
add
jmp
sbb
cmp
je
aam
sub
adc
mov
inc
ret
in
or
fstps
add
int
adc
aad
xchg
jnp
pop
cmpsb
sub
jmp
scas
std
and
inc
cmp
xor
mov
and
cmp
cmpl
add
int3
add
test
dec
pop
rcr
push
inc
shlb
add
sbb
cmp
mov
in
ljmp
call
test
jae
scas
xchg
inc
insb
pop
rol
xchg
jle
mov
push
fstpt
inc
jg
mov
scas
add
mov
imul
sbbb
cmpl
mov
or
clc
adc
or
addr16
mov
mulb
adc
xor
push
cmp
mov
movsl
push
or
mov
sub
xlat
sbb
hlt
jl
xlat
js
pop
add
sbb
dec
hlt
adc
sub
or
pop
xor
mov
xchg
and
pop
les
adc
cmp
jno
xor
rol
sbb
clc
xlat
sbb
arpl
dec
jbe
rcrl
jmp
movsb
xchg
jecxz
jp
out
sub
mov
sbb
push
hlt
mov
les
imul
mov
mov
inc
adcb
les
outsl
rcrb
fxtract
out
xor
pop
movsl
icebp
fwait
jo
and
sub
mov
loopne
pop
ss
fimull
and
inc
xor
test
les
pop
faddl
or
inc
push
lds
jl
test
adc
es
lea
outsb
in
out
or
icebp
sbb
stos
push
shrb
dec
shll
shlb
adc
sbb
xchg
rorb
enter
sbb
orps
rcll
inc
mov
push
mov
xorb
leave
lock
lret
add
inc
sbb
push
sbb
add
ja
push
xor
addb
hlt
outsb
fldenv
and
xchg
clc
xor
dec
aas
sbb
aam
scas
xor
mov
adc
or
fildl
dec
popf
and
pop
loopne
lods
inc
xchg
adc
sbb
outsb
lock
xlat
insb
filds
and
inc
ret
sub
lock
pusha
imul
int3
push
and
mov
adc
lret
and
repnz
fyl2x
sbb
jge
clc
mov
clc
cmp
xor
jns
sbb
pop
mov
test
push
xchg
mov
cmp
pop
inc
add
push
mov
clc
bound
repz
cli
mov
ja
add
jmp
sub
inc
popa
sub
bound
clc
cwtl
sbb
cmp
adc
lahf
call
add
xor
xlat
or
sbb
xor
mov
and
cwtl
or
mov
into
push
mov
cwtl
icebp
dec
mov
or
daa
ficomps
into
out
insb
cmp
aam
mov
xor
shr
cli
xchg
and
jbe
push
dec
push
sbbb
xor
daa
inc
inc
imul
jmp
fdivp
sub
addl
push
sub
pop
mov
mov
push
jmp
adc
pop
cs
das
std
call
push
fld
call
adc
dec
imul
cmpsl
std
xchg
jmp
pop
ret
loopne
dec
sub
rorl
test
push
push
mov
xor
repnz
fbld
arpl
mov
pusha
adc
jle
add
or
cmp
sahf
ret
enter
jnp
stos
aaa
call
mov
daa
sbb
loop
orb
jmp
test
sbb
sbb
in
gs
adc
xor
call
push
adc
insb
xor
pusha
leave
ljmp
mov
cmp
shl
sub
and
inc
sub
outsl
adc
scas
adc
mov
cmpb
notb
fsubrl
sub
mov
and
pop
adcb
fisttpll
pop
ljmp
cmpsb
movsb
incl
dec
orb
out
sub
fwait
cmc
dec
addr16
decl
enter
mov
enter
push
push
and
xchg
clc
aaa
jno
movsl
or
inc
sbb
gs
push
mov
iret
or
dec
nop
push
adc
cmp
je
jmp
mov
cmp
add
push
decb
adc
add
pop
lea
pop
and
inc
xchg
bound
call
ja
testl
jl
adc
sbbb
pop
je
bound
or
popa
mov
jge
in
jmp
mov
and
in
cli
add
in
jg
arpl
rolb
data16
syscall
or
repz
and
sbb
cmc
mov
lcall
push
loop
jp
addr16
or
bound
cmpb
and
mov
pop
sbb
fsubrp
push
cmp
fcom
enter
in
lock
sbb
adcb
and
lds
sbb
shr
sub
lock
mov
sub
das
inc
and
hlt
paddusw
jecxz
repnz
xor
fildll
cmp
mov
add
iret
cmp
movsb
xchg
mov
fsubrs
cld
rcr
mov
jmp
sub
pusha
push
mov
xor
mov
adc
bound
or
mov
mov
adc
add
sbb
lock
call
rcrl
clc
je
mov
incb
and
add
div
pop
dec
out
les
mov
and
or
pop
mov
shll
pop
dec
mov
push
mov
add
loop
mov
decb
rorl
loopne
jae
mov
adc
inc
push
lods
ret
add
mov
ljmp
nop
dec
stc
out
mov
fcomp
cli
or
stc
pusha
sbb
fdivs
and
es
movsb
fistpl
stc
push
pop
pop
js
mov
repnz
pcmpgtd
mov
es
addb
lock
xchg
and
rcl
mov
add
pusha
sub
cmp
addr16
and
and
add
inc
xchg
addb
mov
cmp
test
out
in
shrb
mov
adc
pop
bnd
mov
dec
cmp
sarb
xchg
out
das
test
add
xor
pop
mov
push
xchg
dec
rcll
fdivs
push
cwtl
cs
int3
or
xor
sbb
pop
adc
or
push
lahf
test
insl
and
pop
push
push
js
jns
mov
sub
adc
mov
and
mov
adc
loopne
sbb
inc
and
cmp
cmp
aas
pop
addr16
pop
pop
xor
in
in
js
leave
scas
scas
push
xor
hlt
ljmp
push
and
ds
fwait
add
jmp
repnz
dec
sub
mov
pop
mov
and
inc
mov
add
pop
jnp
mov
mov
cmp
mov
pop
mov
dec
mov
test
pop
dec
lods
stos
enter
insb
xor
aam
test
je
or
cld
fcmovnbe
cmc
inc
stos
sub
sbbb
daa
in
mov
jne
mov
mov
sub
jbe
out
mov
aad
push
cmp
fcom
jno
inc
fwait
das
mov
or
ljmp
mov
and
xchg
js
inc
out
pop
xchg
addl
or
inc
push
fdivrs
add
lea
pop
add
or
in
jecxz
mov
fsubl
adc
adc
inc
scas
fdivl
ljmp
outsw
jg
imul
cs
mov
jno
mov
or
iret
inc
jb
jecxz
les
idivl
enter
or
mov
lret
sub
xchg
int3
pop
fistl
dec
add
add
mov
sar
dec
sahf
and
inc
mov
push
jo
or
sbbb
fmuls
paddd
fs
arpl
adc
push
xor
in
testb
sub
mov
orb
pop
and
outsl
jmp
pop
dec
adc
add
inc
aas
xchg
jmp
stos
out
test
adc
inc
sub
aam
mov
inc
outsb
rorl
dec
jp
pop
push
mov
pusha
push
ja
push
jg
pop
leave
add
test
repnz
outsl
add
and
stc
dec
jp
jp
mov
or
xchg
xor
inc
cld
or
sbb
inc
dec
out
and
aaa
inc
mov
jbe
jle
test
dec
test
adcl
sub
dec
xor
xor
dec
pushf
sahf
xchg
sub
lods
adc
jecxz
imul
js
push
je
and
sbb
cmc
je
or
adc
nop
pop
sub
or
add
push
rcll
rorb
fwait
loop
lock
aas
sbb
add
or
test
lcall
push
cmp
add
add
test
adc
sub
fabs
and
test
lea
pop
push
xor
test
jbe
xor
jp,pn
sub
and
mov
sbb
in
jbe
push
add
popf
jo
clc
adc
loopne
sub
jo
xor
insl
adc
aas
dec
dec
pop
bound
inc
inc
outsl
sbb
mov
pushf
push
out
imul
jecxz
int
test
frstor
sbb
test
shlb
notl
xchg
jle
or
adc
fldt
aad
push
pop
jae
test
cmpsb
xchg
mov
movsb
jecxz
jge
lahf
outsl
mov
pop
cmp
or
mov
push
leave
int3
sahf
nop
imul
decl
imul
mov
jmp
bnd
dec
icebp
jl
sti
call
rcrl
push
lods
mov
or
and
pop
cmp
cli
mov
pop
mov
js
lods
and
iret
stos
xor
adc
iret
mov
in
mov
cmp
push
xor
lcall
dec
add
mov
mov
jns
fisttps
and
in
jle
lret
shrb
fcompl
dec
inc
clc
push
push
rcrb
jb
sahf
lds
jg
imul
lds
lds
imull
xlat
mov
mov
in
outsb
mov
jb
repnz
int3
xchg
int
mov
int
outsl
adc
sub
test
es
mov
fdivrl
mov
mov
mov
fildl
pop
insl
out
out
es
and
mov
hlt
sbb
nop
add
cwtl
cli
jae
cmp
test
rcl
inc
nop
sbbb
adc
cld
push
lds
out
mov
int3
pop
or
repnz
sbb
jne
and
aaa
sub
sub
pop
lahf
adc
xor
nop
leave
push
jae
jg
jmp
adcb
pusha
inc
xchg
inc
sub
daa
outsb
aam
push
je
ss
push
int
mov
loopne
pushw
das
into
push
roll
xor
ret
push
inc
or
dec
cld
push
es
aaa
pop
jnp
in
cmpsl
mov
lea
push
jnp
call
mov
adc
or
mov
or
sbb
subl
inc
dec
xor
cs
subb
notb
mov
mov
adc
and
push
mov
and
pop
push
adc
movsb
mov
xor
adc
push
cmp
sbb
adc
fprem1
jl
mov
mov
mov
ret
inc
int
add
adc
xor
shl
add
and
mov
push
mov
push
out
scas
jge
rorb
sbb
cmpsl
push
lds
movsb
sbb
mov
mov
cld
icebp
int3
mov
data16
mov
inc
int
aam
dec
pop
fs
shrb
jb
mov
pushf
jge
stos
xor
loope
mov
mov
adc
add
into
rorl
mov
cli
mov
mul
pop
and
addl
je
roll
adc
iret
mov
xor
sbb
cmp
lods
push
and
push
and
adc
cmpsl
jbe
xor
in
and
jne
jge
ror
shrl
scas
inc
ss
or
sbb
lret
mov
cmp
leave
test
or
test
xor
mov
jl
and
cmp
lret
jo
and
add
subl
rclb
daa
add
addl
push
and
sti
ret
lcall
adcb
repnz
dec
push
packsswb
dec
movsl
add
xor
add
fs
rcl
fwait
push
cmpsl
jmp
mov
sbb
cmp
xor
scas
xor
mov
mov
movl
or
cmovbe
fsubrl
pop
mov
fstl
cmp
dec
or
test
ss
push
std
mov
lret
sbb
cld
xchg
sub
lcall
clc
ret
sbb
push
sub
icebp
inc
push
and
push
add
adc
inc
xchg
shrb
ret
push
pop
inc
in
aad
inc
push
idiv
sbb
lret
dec
call
test
and
ret
rcl
push
ja
mov
pushf
push
xor
movsl
lcall
cmpsb
sub
mov
stos
or
mov
std
lcall
lret
dec
push
jle
cld
jnp
gs
jg
mov
cltd
lods
lcall
xlat
hlt
lahf
xchg
fucomip
ljmp
sahf
testb
cwtl
daa
js
mov
fwait
mov
pop
push
orb
dec
jb
jge
dec
icebp
mov
inc
mov
and
mov
push
imul
mov
shll
cmp
ret
cli
push
add
aas
jecxz
push
es
xor
adc
mulb
insl
incl
sbb
inc
or
aaa
inc
filds
outsb
add
add
cmp
jne
add
mov
add
pop
jge
pop
pop
mov
jmp
enter
push
adc
je
test
dec
mov
mov
in
enter
aaa
jne
aam
jo
xchg
lods
mov
dec
push
mov
or
dec
popa
in
add
cs
pop
leave
nop
add
adc
incl
add
pop
cld
fadds
fldenv
nop
add
call
pop
int3
sti
jne
dec
mov
lods
add
loop
dec
lret
pushf
ficoms
or
push
call
add
sbbb
adc
inc
loop
mov
mov
push
sub
push
hlt
dec
std
outsl
lea
loope
or
repnz
push
subl
lods
and
mov
stc
pop
xchg
cmp
incl
mov
or
cmp
adc
cld
decl
sbb
iret
mov
pusha
or
and
cmpsl
nop
push
sahf
sub
stos
or
mov
and
cli
mov
lcall
ss
xor
cli
adc
xor
or
jne
aas
xchg
loop
andb
add
mov
pop
sub
outsl
fistpll
lret
scas
xor
xchg
lock
sbb
stos
std
adc
cmpsl
iret
jle
shlb
rcll
int3
xchg
jge
in
push
inc
mov
rol
pop
aad
data16
mov
test
push
icebp
and
push
stos
das
mov
pop
dec
aam
adc
cmp
bound
dec
mov
inc
add
mov
ja
fsubr
push
testl
aad
imul
fdivrp
and
xchg
push
mov
xchg
stos
xchg
xor
mov
push
inc
stc
xchg
adc
or
xchg
mov
stos
or
add
or
outsl
hlt
add
and
cmp
fisubrl
out
sub
pushl
pop
test
mov
sub
pop
clc
pop
ljmp
inc
dec
aam
push
sbb
mov
loopne
jne
sbb
cltd
lret
mov
xlat
xor
xchg
rcr
dec
cmp
mov
xchg
jmp
jge
incb
or
sub
sub
jecxz
outsb
sarb
add
inc
leave
clc
cwtl
or
mov
or
loopne
pushf
lock
push
rorb
jge
sbb
ret
cmpb
and
pop
fcomps
sbb
pushf
adc
push
sahf
lods
jne
shrl
lds
mov
or
fcmovnb
push
pop
test
inc
int
jmp
push
sarl
xchg
add
in
stos
push
loopne
inc
cs
das
mov
cwtl
es
pop
imul
mov
pop
clc
and
nop
mov
arpl
sbb
inc
scas
adc
push
fcoms
cld
sub
mov
outsb
aaa
push
stos
mov
in
lods
pop
push
lock
cmpsb
xchg
lods
dec
adc
enter
mov
or
inc
in
and
xchg
fwait
mov
push
ljmp
clc
xchg
push
jmp
add
add
and
stos
add
jg
xor
dec
repz
inc
dec
push
inc
mov
xchg
and
inc
pop
test
xor
pop
rolb
mov
jnp
and
lock
or
dec
in
les
mov
xor
sbb
pop
push
ficoms
testb
push
fisubl
add
inc
xchg
andl
dec
mov
jno
adc
pop
lods
cmp
filds
enter
std
mov
add
daa
pop
dec
into
or
clc
add
pop
jnp
xor
push
xchg
xchg
aaa
out
xchg
inc
leave
mov
and
jp
push
mov
or
int3
loop
cmpsb
aam
inc
repz
xor
adc
pop
cli
fwait
xchg
orb
lds
fisubl
aaa
push
jg
jg
adc
lret
lahf
sub
push
nop
shlb
out
mov
inc
fs
je
add
ljmp
jl
mov
mov
bound
and
add
mov
jp
test
jne
xor
add
lock
cmp
xchg
das
imul
xchg
aad
adc
adc
mov
ss
mov
lcall
pusha
sahf
and
enter
pop
or
loopne
in
stc
pop
sub
dec
lock
hlt
in
cmpsb
dec
mov
jle
jo
subl
aas
sub
ffreep
mov
sahf
subb
jge
out
addr16
mov
and
sti
push
sub
add
imul
aam
std
out
mov
pop
and
shlb
fs
inc
pop
test
mov
pop
loopne
stos
sbb
jbe
iret
pop
insl
push
mov
les
or
jno
pop
int
imull
jge
cld
das
lock
mov
cld
test
in
stos
push
adc
mov
mov
aaa
mov
fldenv
push
inc
add
movsl
or
addw
jecxz
pop
clc
std
push
mov
lahf
loop
jl
movq
jg
dec
add
sbb
and
std
pop
incl
mov
cli
or
mov
outsl
cli
pop
mov
sbb
mov
addr16
jge
loope
jnp
outsl
orb
pushf
repnz
aam
dec
xchg
inc
clc
outsb
pop
aas
sub
or
incl
push
pop
movl
push
gs
pop
stos
sbb
shr
xorb
jne
and
in
out
inc
sbb
hlt
inc
stos
fimuls
or
add
or
pop
mov
sub
test
mov
push
jmp
add
push
push
pusha
xchg
int
js
imul
pop
sbb
ret
sub
pop
xor
lret
inc
mov
cmc
sub
jne
mov
fisttps
cs
mov
xor
or
cli
sbb
dec
xchg
es
mov
hlt
dec
bound
add
mov
xor
adc
ret
data16
xchg
sbb
jge
and
add
pusha
adc
dec
les
shlb
movsl
fnstenv
xor
shll
inc
mov
movsb
or
sub
in
pop
rcll
mov
pop
xor
nop
sub
inc
in
adc
cs
lods
sbb
mov
inc
int3
fisubs
mov
push
inc
ja
ja
leave
add
call
loopne
xor
orl
mov
iret
xchg
stos
test
out
adc
shlb
call
movsb
mov
add
mov
dec
mov
ja
push
test
pop
jne
out
push
or
adc
ja
pop
pop
adc
jecxz
jle
movsb
andb
dec
daa
loope
inc
pop
lcall
sti
shlb
dec
pop
lock
adc
loopne
inc
add
mov
add
int
js
jne
jnp
loopne
les
sub
into
sub
ss
inc
dec
daa
inc
les
push
dec
xchg
js
push
sub
mov
aam
add
daa
rorl
pushf
fcomps
jae
add
pop
mov
fidivs
cmp
jae
out
fisttps
scas
or
mov
outsl
xorl
mov
xor
in
push
imul
jae
sti
jae
cmpsb
push
mov
inc
arpl
mov
adc
push
and
mov
in
xchg
insb
out
aaa
jns
dec
xor
sub
sti
out
sbb
mov
adc
xor
sbb
mov
mov
inc
inc
dec
jmp
or
pop
xor
mov
or
add
xorb
and
es
divl
push
loop
pop
dec
dec
and
mov
jg
not
negb
lret
not
icebp
cmc
sarl
call
push
call
cmc
push
dec
shr
add
jno
adc
and
inc
fdivl
dec
sbb
dec
jo
xor
mov
arpl
adc
mov
fldt
data16
sub
mov
out
adc
push
push
mov
adc
rorb
movsb
adc
icebp
adc
cwtl
xor
mov
aaa
cwtl
xchg
pop
lock
cmc
push
adc
cmc
xchg
fdivr
ret
mov
mov
dec
je
or
and
enter
rcr
fs
sub
adcl
pushf
sub
sub
mov
fdivrs
cmp
stos
jle
or
cmp
sbb
pop
xor
sbb
pop
push
inc
jmp
adc
push
mov
pushf
adc
movsl
jno
adc
mov
inc
cli
icebp
clc
or
cmc
push
inc
mov
pop
jnp
mov
push
sbb
mov
jo
xchg
mov
and
add
lahf
cli
jbe
adc
sbb
or
sub
mov
fisttps
and
adc
or
inc
add
stos
or
and
push
aaa
jmp
movsb
mov
lea
sub
call
shlb
bound
mulb
das
sarb
inc
std
dec
mov
push
aad
add
scas
fidivs
inc
push
inc
and
imul
mov
pop
lcall
sub
je
je
mov
fucomip
ljmp
in
inc
sbb
xor
xchg
loope
or
jbe
dec
cld
inc
mov
jbe
ss
movsl
daa
mov
testb
sub
and
aam
push
das
je
stc
in
jo
mov
imull
or
inc
dec
imul
xchg
ljmp
inc
cmc
arpl
arpl
leave
mov
test
jo
loopne
xor
popl
leave
and
in
int
jg
pushl
inc
dec
sub
inc
mov
out
ret
mov
inc
lock
mov
xor
rclb
and
jo
dec
add
or
adc
shr
subb
xlat
and
cwtl
xchg
test
add
push
adc
push
bound
je
pop
push
or
and
cmove
and
roll
push
xchg
xchg
mov
add
inc
jl
push
ret
mov
lcall
add
hlt
pop
xlat
cmp
sbb
popf
aam
shrb
push
pop
aad
mov
push
xor
out
inc
int3
push
outsl
mov
pop
pop
cmp
sbb
int3
rcr
xlat
xor
lahf
mov
jge
pop
sub
mov
cmc
cmp
mov
add
icebp
daa
out
fldcw
or
les
sbb
loopne
adc
test
pop
mov
les
out
or
icebp
lock
outsl
adc
call
pop
add
js
lret
mov
lcall
orb
dec
bound
in
dec
call
cmp
or
adc
pushf
int3
inc
push
aad
mov
aaa
mov
sub
add
adc
orb
imul
or
mov
ss
int
add
pushf
jo
ljmp
sahf
pop
sub
rcrb
pusha
cwtl
out
jp
mov
xor
rol
bound
loop
xor
cmp
cmp
in
fidivrs
xor
lcall
call
adc
rclb
ret
rolb
fldt
pusha
fsubrs
push
outsb
push
cwtl
sbb
sbb
push
xor
dec
pop
scas
pop
push
fadds
xor
mov
dec
lret
add
int
lds
test
sbb
loopne
popa
jo
outsb
je
jmp
lret
add
mov
cmp
ret
stos
js
int
sub
lcall
jae
adc
jno
xchg
cmp
mov
movb
sbb
lock
xlat
mov
jnp
xor
pop
push
push
lea
or
xor
pop
sub
sub
dec
xor
lods
imul
mov
fcomps
fadd
mov
inc
jecxz
mov
fwait
mov
mov
sub
mov
sbb
data16
popa
pop
and
dec
jno
or
incb
adc
jns
and
xchg
clc
filds
call
inc
mov
add
push
popf
mov
jae
xchg
fdivrp
mov
icebp
pop
pushf
or
fdivrs
repnz
ret
daa
mov
or
fcoms
gs
shrl
out
cwtl
loope
push
mov
push
xchg
dec
xchg
fwait
pop
mov
sub
sti
pop
and
jbe
mov
adc
xor
pop
push
fimuls
ffreep
add
cmp
jae
sbb
dec
jmp
mov
add
mov
add
cmp
lahf
fldt
sub
pop
lahf
rcrb
cmp
js
push
clc
dec
push
pop
icebp
call
add
jns
xchg
jnp
add
pop
pop
jo
dec
cld
jb
or
data16
xor
scas
mov
rolb
std
mov
loope
mov
pushl
xchg
sub
push
dec
popf
sti
lcall
inc
xchg
in
ficoms
pushf
insb
loope
and
scas
xor
cli
jg
idivl
iret
or
lret
repnz
jle
aam
mov
outsl
fisubrs
and
aaa
aad
repnz
add
add
add
sbb
bound
or
outsb
data16
xchg
arpl
mov
icebp
in
int3
divb
jle
test
sub
adc
inc
add
mov
outsb
push
cmp
out
push
push
push
sbb
jns
and
mov
push
enter
sbb
xchg
out
shl
mov
test
aad
inc
shl
movsb
and
out
fistpll
notb
sete
jae
xchg
mov
jae
and
adc
decl
outsb
xchg
jecxz
dec
adc
in
push
dec
aad
pop
movsl
jae
fisubrs
test
rorb
ljmp
push
mov
cld
jns,pn
loop
rcl
adc
fwait
mov
adc
popf
push
repnz
cld
pop
into
mov
jle
cmp
jge
pop
and
push
fildl
out
mov
cmp
rclb
push
fcmovnbe
mov
mov
inc
enter
jmp
adc
es
mov
in
jecxz
mov
stos
in
das
loop
lea
ret
aaa
jb
mov
aam
stc
add
xor
cmp
icebp
inc
and
add
and
inc
dec
cmc
or
sbbb
inc
adc
popf
dec
adc
roll
adcb
data16
ffree
in
leave
dec
test
adc
xchg
xor
and
sub
cmp
and
lcall
pushw
mov
sbb
adc
jp
mov
stos
pop
mov
mov
outsb
pop
jmp
xchg
test
call
cli
add
inc
int
and
push
xor
pop
imul
pop
loope
ss
cmp
dec
adc
cmp
xlat
cmp
mov
sub
fstpt
into
outsb
add
loope
dec
push
popf
out
add
rorb
adc
imul
pushf
dec
and
push
sub
add
add
mov
test
cltd
sbb
shrl
outsl
cld
pusha
push
and
jp
sbb
adc
xor
adc
jae
ror
pop
andb
sub
out
lock
dec
ljmp
iret
sbb
add
sub
cltd
dec
enter
mov
roll
mov
pop
add
ljmp
push
test
neg
xor
mov
xor
push
imul
mov
mov
repz
adc
test
add
addb
movsb
mov
dec
les
inc
or
push
in
mov
gs
or
outsl
mov
mov
adc
punpckhwd
lock
inc
mov
or
orl
fsts
cmp
xorl
cld
inc
inc
shrb
pusha
int3
mov
aaa
and
cmp
cmp
push
ss
or
les
jb
push
imul
incl
ret
jno
outsb
daa
or
por
movsb
popa
rolb
add
add
or
mov
fistps
sub
je
dec
orl
sub
push
ret
mov
jne
inc
xor
enter
data16
mov
mov
ret
fcoml
call
mov
xor
lock
fs
ljmp
push
fldenv
subl
test
fldcw
lcall
xor
insb
mov
cmp
and
sarb
xor
mov
test
nop
test
addr16
testb
inc
mov
mov
loop
adc
rorb
sbb
pusha
mov
sub
cltd
add
dec
cld
jg
push
call
xchg
and
dec
push
test
add
jecxz
pop
pop
loopne
pop
and
cltd
dec
cmpsl
or
outsb
dec
dec
mov
or
iret
adc
jnp
idivb
jmp
test
test
arpl
mov
psrad
adc
dec
mov
ds
cltd
insb
xchg
das
in
jg
loopne
or
in
adc
push
lcall
or
lods
lret
sbb
jp
mov
mov
insl
loope
mov
lahf
pusha
adc
fimull
mov
jo
jo
add
sub
insb
das
cld
or
xor
xor
roll
mov
add
jle
dec
push
sub
das
inc
dec
andb
cmpl
lds
enter
xor
mov
icebp
lcall
push
adc
pop
adc
pop
je
outsl
fnstsw
cmc
and
adc
and
jp
lock
rol
cwtl
xorb
jl
ljmp
xor
scas
jg
pusha
push
xchg
adc
outsb
idiv
and
mov
out
arpl
insb
lock
push
or
ror
cmc
and
popa
inc
mov
xlat
add
test
loopne
add
jge
lret
mov
xor
dec
sbb
jp
int
divl
incb
sbb
mov
mov
cmpsb
lock
addr16
les
sub
clc
incl
mov
sbb
cmpb
sbb
mov
inc
cmc
mov
out
js
mov
lods
xchg
cmpsb
ret
or
sub
enter
fwait
loope
inc
icebp
and
fcomps
cmc
lods
dec
std
lds
pop
repz
or
add
lret
lcall
add
sbb
movb
lcall
imul
dec
fsub
stc
push
rolb
mov
fs
xchg
push
icebp
repnz
rorl
add
fwait
jge
push
mov
xchg
and
dec
inc
shrb
push
insl
jge
push
inc
popf
and
dec
fists
jne
push
pop
loop
pop
xor
subl
int
popa
loopne
xor
je
bound
xchg
fs
mov
addb
add
int
cmp
jne
lock
clc
lcall
sbb
fstl
cld
mov
mov
stos
inc
sahf
or
xlat
mov
pushf
aad
call
push
leave
fsubs
add
fdivrs
fdivl
and
in
test
jne
mov
mov
cmc
pop
push
xlat
ljmp
outsb
stos
sbb
mov
push
mov
sub
jb
push
jl
faddl
imul
add
adc
js
pop
punpckhbw
add
add
loope
push
rcrb
bound
mov
loope
dec
add
add
mov
loop
sub
or
adc
out
test
add
sbb
sub
mov
fiadds
pop
cwtl
xor
xor
add
lock
inc
add
and
push
xor
xchg
icebp
pushl
jmp
dec
fcmove
dec
jns
xchg
push
dec
call
dec
gs
mov
xor
out
push
aas
inc
in
imul
es
in
jbe
cmc
ja
inc
add
insl
mov
or
mov
dec
xor
sub
mov
mov
adcl
or
xor
jp
cmpsw
repnz
sub
popa
lds
test
or
test
cmpsl
lcall
ss
cli
push
shlb
icebp
std
dec
fucomip
ljmp
int3
int3
mov
ljmp
cmc
push
jecxz
ret
and
call
fstpt
les
fbstp
roll
sahf
xchg
lahf
sahf
hlt
roll
pop
loopne
xchg
out
sbbb
push
andb
sub
int
in
jp
mov
adc
icebp
mov
andb
stos
fs
mov
mov
lahf
mov
push
add
out
in
adc
inc
cmpsb
outsl
aad
ljmp
dec
push
and
cmp
cmp
call
mov
imul
sbb
bound
fwait
jbe
add
jp
mov
inc
mov
xchg
adc
test
lahf
sub
add
mov
hlt
add
xor
std
mov
dec
std
cmpsl
mov
outsb
cld
or
pop
jae
ljmp
out
and
insb
xor
push
jl
rcrb
jg
adcl
push
inc
adc
and
lea
std
sbb
loopne
and
cld
fldt
sbb
out
inc
push
aad
cmc
jbe
and
pop
xchg
data16
sti
inc
cmc
and
mov
or
test
incl
les
push
out
add
clc
jp
ljmp
adc
in
sub
sbb
gs
int
sti
addr16
fwait
add
jecxz
dec
push
pushf
cld
roll
or
cld
outsl
paddw
test
loop
mov
les
call
inc
aaa
addb
pop
sti
scas
cli
mov
out
jo
pop
sbb
repnz
cmp
in
sub
jbe
pop
mov
pop
stos
popa
pop
add
sbb
stos
pop
lahf
call
gs
test
mov
fstpl
addb
inc
or
jbe
pop
aam
adc
or
pop
add
jl
pushl
sub
ja
shll
roll
xchg
sub
aad
ja
aas
jo
movsb
xor
add
pusha
pop
or
sub
dec
inc
xchg
addb
add
jg
stos
mov
push
into
mov
mov
jge
test
loopne
inc
loop
js
xchg
add
sbb
jae
test
addr16
outsb
outsl
pop
push
add
xchg
outsb
out
nop
mov
outsl
push
sbb
push
push
xchg
cli
imul
pop
or
jge
push
jmp
push
mov
dec
mov
rorb
and
adc
inc
divl
push
xchg
xchg
xor
sub
pop
movl
test
std
sbb
xchg
pop
scas
dec
xchg
ffree
xor
pop
inc
mov
push
inc
adc
ljmp
sub
sbb
vsubps
push
outsb
aas
xchg
cwtl
lcall
push
std
dec
mov
dec
inc
jle
loop
adcl
lods
gs
decl
fsts
shrl
call
and
push
bound
daa
add
cmp
pop
sahf
sbb
jns
outsl
mov
sbb
daa
jbe
jbe
andl
adc
icebp
cmp
cld
add
or
lods
sbb
scas
jo
push
popa
enter
dec
pushf
mov
iret
mov
dec
mov
jge
push
lcall
addl
adc
push
sub
or
xor
add
push
mov
lea
sbb
cs
int
mov
mov
adc
and
add
ljmp
mov
pushf
or
mov
enter
dec
cmp
hlt
mov
mov
adc
jns
mov
push
pop
xor
rol
faddl
dec
gs
out
lea
mov
mov
fiaddl
adc
add
loop
aam
push
xor
pop
aaa
mov
fwait
mov
cmp
repnz
js
jnp
nop
adc
jnp
mov
adcb
mov
add
call
lahf
test
ret
xor
subb
iret
sbb
std
imul
hlt
adc
push
push
addr16
xchg
inc
icebp
dec
sub
sub
cs
xlat
inc
xor
dec
xor
adc
jmp
xor
mov
inc
out
hlt
xor
add
pop
xor
push
xor
push
push
dec
pop
pop
addr16
inc
sub
addb
int
rorl
sub
dec
xchg
ja
cltd
and
bound
add
mov
xor
clc
jo
test
bound
add
inc
cwtl
pop
push
les
push
repnz
push
push
jl
hlt
shrb
sub
jb
adc
loopne
imul
push
inc
jb
bound
pop
fldt
cmp
jmp
sbb
fisubrs
dec
out
sbb
xchg
sub
mov
es
sub
add
add
test
loopne
lea
scas
and
fwait
xor
rcr
push
add
or
in
test
test
jo
ret
mov
mov
inc
mov
int
add
add
add
push
outsl
sub
imul
out
clc
cwtl
decb
push
add
mov
xor
movsb
sbb
add
push
lret
sub
rclb
in
js
call
sub
jae
std
inc
mov
lcall
add
sub
push
and
inc
jae
push
adc
mov
test
xchg
and
fiadds
ljmp
test
scas
add
test
mov
call
pushf
ds
jne
push
test
fdivrs
jg
mov
add
mov
lahf
aas
add
mov
and
push
jg
adc
xlat
outsb
ret
inc
dec
rcl
jecxz
test
or
cmp
shl
add
or
jl
xorb
jo
push
outsl
jo
movsb
dec
push
adc
std
jmp
dec
subb
ljmp
adc
or
pop
jae
sub
or
adc
les
adc
mov
in
mov
mov
mov
mov
push
stos
sbb
fistl
aad
roll
or
or
mov
mov
add
and
stos
fmul
cmp
ljmp
mov
shl
das
cmpsl
jne
jae
cmp
mov
jge
clc
xor
int3
movsl
out
shlb
lahf
sbb
cli
mov
jno
popf
push
sbb
sbb
mov
loop
mov
repz
jg
mov
xorl
scas
pop
inc
xlat
jne
mov
cmp
mov
movsl
push
aam
mov
dec
inc
add
xchg
pop
jp
clc
inc
inc
das
inc
ret
cmp
clc
sub
negl
hlt
lods
push
mov
jmp
mov
or
push
sbb
xchg
out
xor
add
add
mov
sbb
push
sub
movsb
lcall
std
notl
les
jnp
std
sbb
popf
int
jl
fbld
incl
jp
scas
test
xchg
call
jae
xchg
popf
je
pushf
shll
xor
sbb
jo
movsb
xor
add
add
dec
add
jl
mov
sar
fildll
fnstsw
push
mov
add
sub
and
aas
push
add
xchg
sub
mov
jge
popa
pop
sbbl
and
mov
xor
popf
dec
into
stos
jmp
xchg
aaa
int3
push
cs
mov
leave
mov
mov
push
xchg
xchg
rorl
aam
jne
into
and
sub
stc
mov
cmc
sbb
cli
inc
sub
je
insl
testl
xor
cmp
lcall
sub
sub
lea
sub
pop
pop
cli
cmp
mov
add
push
sbb
xchg
lock
js
add
outsl
sarl
xchg
pop
or
xlat
mov
pop
cli
xchg
xor
or
inc
arpl
xchg
and
pop
fbld
ss
movsl
fistpl
adc
in
aaa
mov
pop
adc
out
adc
xor
dec
fstpt
fadds
je
mov
pop
cmc
or
xorb
inc
out
daa
dec
scas
cltd
cmpl
jbe
or
dec
andl
adc
cmpl
pop
xchg
js
fnstenv
pop
in
inc
mov
loop
pop
fisttpl
xor
dec
mov
rolb
inc
sbb
push
sub
scas
jg
jmp
aam
push
xchg
fadds
xchg
xchg
adc
adc
jnp
sub
jmp
cmp
insb
fisttpl
jnp
mov
mov
int3
rorb
sbb
call
sub
sti
mov
dec
xchg
inc
push
adc
mov
stos
mov
push
dec
mov
push
sub
pop
cmpsl
push
xchg
mov
test
push
mov
mov
mov
lcall
sub
xor
hlt
gs
sub
push
xchg
fldt
adc
lock
and
loopne
mov
or
xchg
jns
inc
mov
pop
loop
add
pop
push
scas
mov
or
pop
rorb
xchg
nop
movsb
test
ljmp
cmc
add
fdiv
fidivs
mulb
fdivrl
mov
mov
jg
loop
imul
jns
xchg
mov
sub
inc
sbb
inc
add
das
xor
and
pop
cltd
pop
adc
dec
inc
loopne
mov
inc
lea
adc
sti
add
call
and
mov
push
or
pop
jo
icebp
push
lea
sub
mov
rcr
push
mov
cmp
sub
rolb
iret
jge
in
mov
out
insl
inc
out
jg
or
xchg
xlat
decl
stos
dec
sub
mov
loop
cmp
stc
add
fcmovb
pop
add
inc
push
ret
call
rcrb
add
pop
mov
adc
pusha
and
shll
jno
jmp
mov
outsb
mov
cmp
enter
or
shrb
popf
add
in
iret
jb
xchg
or
xor
cwtl
lea
lds
sahf
xor
loopne
js
cs
out
push
das
pop
in
or
or
mov
cmp
dec
inc
mov
xor
repnz
push
mov
enter
and
shll
mov
je
or
jg
ja
jecxz
jno
xchg
jmp
loopne
or
and
inc
repnz
add
mov
hlt
sbbb
xor
hlt
add
or
adc
mov
add
add
or
and
fimuls
imul
mov
adc
push
xor
xor
dec
mov
push
loope
fucom
outsl
xchg
data16
and
sarl
stos
dec
push
flds
stc
mov
pop
and
cmpsb
adc
in
aam
xor
mov
cwtl
in
xor
add
mov
sbb
cmc
adc
dec
push
ror
mov
je
sbb
sub
mov
mov
xlat
cmp
adc
cmp
mov
repz
sub
fmuls
je
into
in
ja
sbb
adc
je
popf
push
lock
pushl
jge
jl
mov
inc
pop
shrb
mov
data16
out
jbe
inc
sub
and
sbb
sahf
pop
jno
inc
xchg
adc
xchg
fcomip
mov
sti
xlat
cmc
ret
and
sbb
push
add
jo
xor
outsb
rcll
pushf
mov
les
shll
test
pop
and
inc
insb
adc
inc
dec
lcall
in
lret
mov
shrb
cmp
push
test
ret
das
inc
or
or
pop
cmp
xchg
mov
lcall
sahf
xor
mov
mov
adc
lret
xchg
std
or
inc
jmp
scas
mov
push
sub
jl
push
pop
sub
stc
negl
cmp
scas
lret
loopne
adc
xchg
add
in
imul
dec
inc
or
pop
andl
aad
mov
rolb
int
push
mov
jns
insl
xor
sub
dec
add
ljmp
das
inc
cmp
test
push
mov
jne
adc
mov
jbe
sbb
fmull
pop
dec
mov
scas
inc
filds
xor
push
cs
or
adc
xor
xor
roll
xchg
jnp
inc
jl
and
lcall
ljmp
in
aad
sbb
and
add
mov
push
cwtl
mov
filds
test
pop
ret
jbe
lock
mov
jns
cwtl
or
adc
lea
add
jle
jno
rolb
xor
xchg
addl
std
or
shll
push
push
sub
das
cmp
inc
inc
hlt
iret
cs
adc
mov
add
xor
pop
mov
clc
add
pop
mov
adc
and
dec
mov
or
and
inc
mov
push
jae
and
loope
add
aam
xchg
mov
ret
mov
jo
mov
nop
inc
lds
push
inc
xchg
popa
dec
cwtl
and
in
aad
or
clc
xlat
cmp
xor
pusha
add
and
loop
and
push
ja
out
loope
dec
mov
mov
les
sbb
dec
adc
and
xor
ljmp
ret
icebp
dec
push
add
xchg
inc
cwtl
adc
popa
add
inc
dec
adc
add
pushf
shlb
nop
and
xchg
and
sbb
xor
mov
dec
aad
sbb
adc
xchg
or
pop
mov
mov
adc
sub
cwtl
fimuls
pop
test
ud0
leave
mov
sahf
mov
xchg
xorb
out
ja
inc
add
and
sbb
jmp
arpl
mov
add
mov
cmp
sub
jno
or
adc
inc
xor
jno
fcomp
add
or
push
add
lahf
adc
inc
cltd
sub
ja
int
xor
push
subb
sbb
xor
mov
popa
daa
sbb
popf
sahf
inc
sbb
jl
mov
mov
int
out
orb
xchg
ret
push
jo
out
push
add
sub
mov
mov
cmc
loop
sbb
add
sbb
or
stc
rorb
std
inc
int3
jb
add
nop
dec
fwait
adc
push
insl
xchg
pop
aas
jg
adc
pop
mov
mov
mov
pop
testl
js
clc
sbb
neg
mov
add
and
test
dec
lock
mov
mov
lock
int3
dec
bound
push
push
imul
loope
xchg
stos
test
enter
in
pop
lock
jne
xchg
or
and
adc
xchg
nop
inc
cmp
aam
add
mov
inc
dec
push
std
push
push
mov
test
aad
paddd
xlat
jne
ficomps
push
inc
mov
pop
and
mov
pop
sub
insb
ja
jne
add
sbb
sbb
mov
fwait
xor
dec
notl
add
push
ja
les
iret
adc
in
or
out
ret
sbb
adc
xchg
and
into
pop
lock
push
outsl
add
int3
and
jns
mov
xor
js
inc
js
pop
adc
sub
xor
xor
cwtl
pushaw
dec
and
sub
test
mov
int3
inc
iret
loope
sub
fs
rclb
mov
adc
inc
or
push
mov
dec
cwtl
mov
add
xor
sbb
dec
inc
adc
mov
imul
out
loop
js
inc
xor
stc
and
cmpsb
fdivrs
mov
cmpsb
adcl
imulb
ret
js
or
pop
adc
test
or
adc
jp
insl
jle
add
jle
cwtl
dec
rclb
add
mov
cmp
out
mov
xchg
incl
xor
sub
inc
out
sub
addb
call
loope
inc
push
pop
and
adc
mov
test
cmp
add
aaa
push
jmp
ljmp
test
mov
sbb
add
ror
add
loope
fdivl
ds
jge
mov
dec
popa
jae
ss
roll
push
fildll
push
push
shrb
lds
fldt
pusha
pop
lea
mov
mov
mov
es
rclb
inc
fistpl
fldt
test
jmp
sbb
pop
sbb
mov
ljmp
lret
add
test
xchg
pop
jp
das
add
mov
rorb
ds
addl
or
mov
hlt
cmp
jb
or
dec
fxch
or
push
jg
pop
nop
in
ja
mov
test
mov
jbe
sbb
fs
out
ret
fcoml
pop
cmp
hlt
movsl
cmp
sub
fdivrp
call
xchg
pop
add
out
adc
popa
in
nop
sbb
ljmp
loop
sarb
mov
and
jg
scas
sti
popl
ret
int
test
mov
sub
jo
push
outsb
int3
cwtl
adc
ret
cld
mov
add
insl
aaa
jb
jge
add
std
pop
and
movsl
add
push
mov
push
cmp
mov
jae
xchg
push
and
mov
lods
mov
call
out
jle
add
cmp
int3
fcoms
mov
pop
pop
ficoms
outsl
icebp
aaa
push
pop
jmp
mov
dec
mov
imul
arpl
std
decl
stos
dec
mov
mov
test
xchg
sahf
sbb
push
cmp
icebp
push
lds
sbb
fnstcw
lcall
int3
mov
sar
mov
sarb
cli
inc
dec
mov
cmpl
movsl
sbb
fisubl
xchg
rcl
push
mov
sbb
push
data16
test
shll
and
push
mov
dec
mov
push
into
cwtl
push
ret
sub
mov
shl
mov
into
mov
daa
push
add
lds
add
push
or
add
push
push
xchg
sub
xor
inc
fisttpll
cmpsb
pop
dec
push
xor
mov
or
push
push
inc
jp
mov
xor
pop
jl
out
dec
imul
ret
mov
jg
xor
aas
das
lock
xchg
bnd
imul
ja
les
dec
sbb
repnz
mov
les
icebp
adc
inc
popa
xchg
sti
sbb
sbb
push
mov
jmp
adc
test
testl
loop
pop
sbb
and
out
sbb
push
jl
je
rcr
lahf
fxch
mov
jp
jmp
mov
push
and
shrw
xor
jno
inc
push
or
sbb
and
add
push
stc
pop
hlt
push
std
sahf
stos
pop
mov
adc
add
dec
mov
fdivs
adc
pop
and
ja
sub
mov
lock
pop
loop
enter
or
mov
jb
jecxz
rolb
mov
cld
fstpl
add
xchg
sub
adc
dec
fdivrs
lahf
mov
int3
orb
adc
test
add
clc
fimull
pop
lret
adc
cmp
js
daa
pop
sub
or
mov
and
push
inc
pop
mov
dec
shr
shlb
push
pop
jno
in
fidivrl
ljmp
jbe
stc
mov
add
mov
out
xchg
mov
inc
es
mov
rol
ja
inc
cwtl
test
icebp
mov
mov
push
cmc
lds
and
add
ljmp
sub
add
lea
pushf
inc
insb
mov
mov
or
add
push
ret
pop
aas
push
clc
cmpsl
js
std
jg
in
jno,pn
bound
add
mov
add
movsl
movsl
test
das
lock
out
and
mov
xchg
adc
push
mov
lret
jmp
inc
xor
xor
mov
adc
enter
lcall
push
cwtl
test
add
pop
data16
push
std
pop
out
ja
scas
jns
xchg
jecxz
push
xlat
cmpsb
pop
inc
insl
das
xor
enter
ds
outsl
int
dec
insl
mov
jg
out
or
push
std
outsl
adc
sbb
andb
mov
mov
mov
cmp
or
jp
and
xor
jbe
dec
mov
cmp
push
push
xchg
sbb
jae
addr16
push
das
adc
xor
sub
stos
popa
sub
mov
repz
std
aaa
and
daa
or
mov
sbb
mov
les
mov
clc
pop
adc
dec
fadds
mov
fstps
pop
sbb
jge
xor
inc
out
fists
or
push
test
fmull
jns
sub
mov
rol
bnd
xchg
loop
lahf
add
test
jae
mov
cltd
add
xchg
jg
decl
dec
and
push
aam
sbbb
mov
insl
lock
mov
cltd
mov
xor
push
mov
add
ss
or
add
call
jbe
cmp
add
jle
add
int
lock
pop
outsl
cmp
fstpt
add
sbb
dec
icebp
jle
outsl
inc
inc
das
cld
mov
imull
mov
popa
or
mov
addb
sbb
rorl
lcall
lahf
pop
mov
fucomip
mov
aam
jno
jge
and
cmc
mov
aam
aam
push
rcll
add
cmp
cs
les
aaa
hlt
mov
lock
movsb
stos
das
pop
in
mov
rorb
xchg
test
adc
add
add
or
sti
jmp
scas
inc
cmp
test
sub
adc
or
jecxz
rolb
xor
xchg
incl
lds
call
jge
jp
sbb
jo
outsl
incl
adc
sub
dec
ret
iret
cmp
fbld
mov
xchg
pop
shl
jne
adc
cmc
mov
outsl
fistl
pop
mov
mov
push
xor
jecxz
pop
xchg
ja
adc
mov
out
mov
icebp
or
nop
mov
xor
insb
std
das
movsl
imul
inc
mov
xlat
sbb
sub
sbb
mov
adc
or
sarl
mov
add
inc
mov
push
popa
sti
rclw
jbe
andl
mov
xchg
cmp
mov
aaa
clc
mov
lock
sarl
inc
int
adc
mov
cmc
cli
cwtl
inc
stc
xchg
addr16
pop
fmul
sarl
adc
fstl
ret
lea
fstpt
pop
rorl
add
and
pop
addb
loopne
push
xchg
mov
push
cmp
or
mov
imul
adc
push
out
adc
adcb
push
hlt
and
fistpl
mov
xchg
jge
cli
or
test
data16
pop
lds
movsl
push
ja
ja
push
dec
sti
fs
insb
push
sub
or
xlat
jae
push
mov
xchg
push
call
sub
cwtl
adc
or
lcall
imul
jno
sbb
sub
xor
in
inc
jg
or
mov
fsubrl
cli
mov
lock
pop
pop
inc
call
cmc
lods
fdivl
inc
xchg
or
imul
push
mov
push
roll
test
jmp
add
sub
lret
inc
sar
rolb
lods
call
lods
shll
lods
and
push
mov
mov
pushf
push
test
int
sbb
daa
jle
stos
pusha
addr16
sub
inc
cmp
mov
mov
pop
mov
inc
fidivrl
add
into
adc
cmp
xchg
cmp
lcall
mov
pop
popa
test
mov
sbb
pop
shlb
iret
mov
sbb
lret
cli
pop
pusha
insb
aaa
stos
xor
or
test
mov
ret
out
dec
pushf
pop
add
mov
jne
add
jmp
inc
pop
mov
add
xor
arpl
jg
sarb
mov
mov
scas
and
sti
dec
push
pop
stos
xchg
fimuls
lods
and
sbb
xor
pop
in
inc
inc
adc
roll
jecxz
sbb
sbb
adc
cmp
adc
cmp
jae
xor
out
add
push
roll
filds
inc
or
dec
cmc
inc
add
inc
inc
sub
test
jbe
inc
cmp
repz
call
sub
in
jnp
movsb
sub
popa
or
sub
pop
xchg
daa
add
add
xor
sub
icebp
or
push
xor
xor
cmpsl
rcrl
sub
sub
sbb
or
dec
and
inc
insb
mov
xchg
adc
push
in
sbb
test
or
loop
add
addr16
sbb
insl
inc
mov
ja
add
fiadds
test
lret
ja
aas
rcll
imul
cmpb
and
int3
clc
cmpsl
add
cltd
dec
enter
cmp
lret
in
je
dec
inc
dec
push
inc
dec
inc
sti
scas
add
mov
mov
out
imul
xor
pop
es
push
mov
mov
fdivl
sub
mov
xchg
adc
cmp
fisttpll
pop
mov
lds
loopne
sarl
mov
dec
cmp
cmp
inc
cmp
sbb
fbld
fwait
or
repz
mov
mov
mov
xchg
adc
outsl
pushf
mov
dec
cmp
sarb
lahf
mov
adc
pop
mov
mov
outsb
icebp
jge
add
xor
pop
lods
icebp
cmpsl
outsl
inc
and
adc
pop
pop
rorb
and
pop
adc
gs
mov
jl,pn
sbb
inc
and
inc
mov
mov
icebp
jmp
arpl
stc
loopne
mov
pushl
jmp
and
lret
push
mov
cmp
sub
dec
std
hlt
idiv
add
push
jmp
jae
cwtl
dec
shl
push
sti
mov
inc
sbb
inc
sub
and
or
mov
xchg
mov
mov
jnp
xchg
jg
dec
and
jns
aad
mov
das
xchg
xchg
and
sub
cmp
jg
jmp
roll
in
xchg
int3
aam
out
cmp
push
lret
mov
fadd
add
xchg
xchg
xor
sbb
inc
icebp
out
mov
in
rorb
sub
dec
pusha
in
cmc
or
imulb
bound
test
mov
sub
xchg
cli
call
and
xchg
lds
or
push
lods
adc
mov
sbb
push
into
sub
mov
adc
adc
in
cmpsl
pop
popf
or
pop
sub
push
add
mov
in
push
outsb
mov
fwait
out
jg
pop
mov
pop
loop
mov
ljmp
xchg
fildll
pushl
clc
fcmovnb
add
dec
pop
mov
mov
ror
push
fmuls
pmulhuw
into
ljmp
aad
out
sub
adc
inc
out
cmp
aas
lock
scas
cmpsl
jecxz
inc
daa
std
pop
adc
and
inc
test
cld
ds
jge
mov
inc
aam
dec
jecxz
dec
ret
jg
in
pop
aad
out
cltd
cmp
pop
mov
xchg
popa
push
lcall
imul
in
mov
fimuls
cld
jl
cld
xor
cs
push
push
mov
test
mov
rolb
ret
mov
loop
aad
add
lods
call
loop
movsb
add
add
push
inc
test
mov
sub
add
insb
jmp
ud1
pop
or
xchg
push
pop
arpl
sbb
cmp
mov
pop
cwtl
adc
clc
mov
or
xchg
xchg
adc
pop
mov
std
stos
mov
nop
xchg
dec
addb
jge
xchg
xchg
push
add
test
ficoms
jp
jns
sbb
fstps
shll
cwtl
mov
push
xorb
insl
xor
xor
fisttps
or
and
fildl
ret
pop
add
loop
pop
inc
push
add
scas
subl
data16
inc
aam
adc
loop
das
mov
mov
mov
ja
push
mov
jmp
je
lea
stos
cli
mov
and
xchg
or
cmpl
pop
nop
push
jge
adc
jbe
fmul
add
daa
loopne
push
sub
ret
inc
add
enter
xorb
or
jg
or
add
sub
mov
shll
jno
stos
add
xchg
mov
cmp
ror
mov
mov
aaa
rorl
dec
nop
lret
icebp
add
cltd
ficoms
adc
cmp
cmp
cld
enter
pop
jne
mov
pop
clc
iret
adc
lldt
pop
sar
pop
fisttpll
sub
in
test
pop
dec
mov
popa
jp
cmp
mov
and
cmc
mov
cmpsl
mov
clc
xor
mov
out
cmpsb
push
jmp
lock
adc
test
mov
push
sarl
bound
add
mov
sahf
fxtract
test
mov
pop
xchg
andb
push
cltd
push
rcll
js
test
stos
jns
inc
add
outsb
das
icebp
cmc
push
loop
lds
stc
pop
jnp
cmp
cld
xchg
pop
sub
ljmp
mov
icebp
mov
pop
jecxz
in
dec
mov
stos
mov
js
sub
pop
mov
push
push
xorl
out
or
push
sub
sbb
cmp
lahf
lock
mov
movsl
test
fisttpll
bound
add
push
mulb
dec
adc
jae
pop
lcall
lock
out
aam
or
out
sub
scas
or
mov
call
out
inc
outsl
adc
scas
imul
lods
mov
aaa
aad
jg
outsl
add
dec
in
dec
fldl
lret
add
push
ja
rorb
pop
jl
cmp
add
in
cltd
lahf
jns
and
aas
jmp
out
add
add
imulb
pushl
and
rorl
sbb
jne
ror
xor
ret
aas
repz
andb
outsl
mov
inc
xchg
in
jg
int3
dec
jno
sahf
shl
push
int3
seta
pop
clc
pop
adcb
mov
mov
stos
pop
leave
sbb
pusha
xor
jecxz
incl
pop
jg
mov
xor
cwtl
inc
lock
jmp
fsubrs
insb
incl
aas
ljmp
and
or
sub
std
pusha
outsb
adc
movsl
dec
test
lods
mov
int
jmp
jle
out
mov
xchg
adc
aam
addb
clc
insl
mov
adc
and
dec
stos
pop
mov
imul
add
dec
les
dec
daa
dec
pop
sub
xchg
cwtl
mov
adc
sub
sub
mov
inc
cmp
sub
rcrb
fisubrs
xchg
sbb
mov
data16
pop
orl
xor
adc
scas
adc
testb
jbe
push
int3
sbb
cwtl
inc
daa
ja
fstl
xor
imul
push
movsb
add
aad
mov
mov
pusha
je
add
dec
shl
mov
imul
push
sbb
mov
xadd
inc
sbb
and
pop
and
roll
cs
fnstenv
inc
or
stos
xor
add
push
dec
xchg
movl
sub
or
imull
ficoms
mov
js
mov
loopne
mov
shrb
repz
aas
dec
clc
adc
mov
push
xchg
test
add
pop
andl
ljmp
icebp
sti
xchg
lds
jbe
out
roll
leave
ret
es
out
jl
pusha
out
jmp
pop
shlb
or
inc
add
dec
rcll
je
fisubrl
lret
xor
xchg
insb
lret
subb
popa
xchg
lods
pop
cmp
dec
shl
filds
ja
in
add
mov
add
or
ret
cmp
imul
cmpsb
jge
adc
mov
jb
push
loope
rorb
dec
rolb
aas
jmp
cmp
je
dec
aam
insb
ljmp
add
mov
mov
and
popa
icebp
and
aam
sbb
shlb
cmc
pop
adc
ja
push
push
loopne
popf
mov
and
orb
or
push
pop
mov
pop
movsb
adc
int3
push
incl
aam
push
xchg
adc
scas
push
rclb
push
jne
and
dec
dec
int
clc
les
pop
jge
loop
fistpl
mov
sbb
sbb
xchg
lahf
jae
mov
test
pop
inc
out
lds
push
les
scas
fdivs
push
push
dec
aaa
jo
and
out
pop
lahf
into
in
xchg
xchg
ss
jg
repz
mov
gs
pop
test
lock
je
loop
jg
hlt
add
cld
inc
jle
sbb
inc
pop
mov
shrl
cmp
lock
jb
mov
xchg
sub
or
xor
xor
or
loopne
loopne
cld
cmp
or
lcall
adc
jecxz
push
mov
call
and
dec
pushf
pop
sbb
inc
shll
call
test
mov
sti
dec
push
stc
dec
jb
mov
mov
lcall
mov
xchg
scas
sub
scas
mov
pop
or
and
loope
jo
sbb
push
pushl
add
fsubr
xchg
pop
pusha
dec
adc
push
lock
add
inc
xor
cmp
cmpsb
cld
lahf
iret
mov
pop
mov
dec
cmp
dec
pop
sub
sub
cmp
cmp
cwtl
add
mov
stos
jmp
mov
push
push
add
mov
push
es
xor
jl
inc
add
sbb
negb
inc
outsl
fdivr
ret
mov
xlat
imul
adc
in
insl
and
mov
cmp
and
test
fsub
mov
out
fildl
decb
and
shr
in
xorb
incb
jae
jecxz
push
mov
rorb
push
insb
sbb
fstpt
shll
adc
clc
add
cmpsl
shrb
js
push
into
or
cld
sbb
push
inc
aam
stos
xchg
push
cmc
ret
pop
daa
mov
or
jg
aad
dec
pop
push
repz
fucomip
mov
sub
or
fsubrl
pop
sbb
decb
sub
fstl
mov
inc
adc
or
mov
fisubrs
add
in
sbb
sbb
outsl
pop
cld
decl
js
fs
adc
add
loope
xor
insl
push
std
cmpsb
mov
adc
mov
push
xchg
lods
stc
ss
push
fwait
pushl
nop
ja
dec
dec
xchg
mov
jo
adc
pop
hlt
fsubrp
lock
outsl
xchg
popf
lds
add
and
in
push
pop
js
ret
add
pushf
jmp
jmp
cwtl
pop
jnp
mov
push
dec
sub
lods
adcl
push
cltd
sbb
ljmp
xlat
jecxz
cmovg
int3
and
cmpsb
call
pushl
ds
insb
jb
pop
pop
or
xchg
fnstcw
pop
clc
outsl
insl
mov
pusha
mov
add
mov
dec
inc
adc
mov
xchg
lea
adc
xor
dec
cmc
mov
and
xor
mov
call
xor
das
ret
addr16
loopne
adcl
out
int3
fs
ss
pushl
and
aad
jp
cmp
pop
loopne
jae
mov
incb
ret
push
inc
or
ret
filds
push
decl
sbb
iret
jo
cwtl
add
xor
mov
fwait
test
push
fst
das
iret
and
jmp
jbe
inc
mov
sahf
ljmp
cld
pop
xchg
ds
clc
mov
pop
xlat
mov
bound
mov
dec
icebp
std
popf
cmpsl
jecxz
mov
sub
xchg
push
les
cmp
imul
add
jb
push
ja
adcb
ljmp
sbb
fs
inc
cs
pop
lret
das
or
mov
mov
jno
nop
into
xchg
mov
inc
jmp
mov
sub
mov
arpl
mov
lods
fisubs
enter
push
inc
fcom
mov
or
ds
adc
jmp
sbb
sti
inc
rcl
add
test
mov
jle
sbb
inc
inc
in
mov
mov
push
inc
popf
outsl
cld
mov
sub
popa
aas
sub
and
mov
cmpl
cmp
call
mov
out
decl
fnstenv
and
test
test
inc
mov
mov
outsl
mov
adc
mov
xchg
sub
das
test
dec
hlt
push
sti
fs
cmpb
xlat
fdivs
clc
sar
sti
cmpsb
aam
xchg
adc
movsl
notl
movsl
jecxz
addl
sbb
xor
xor
pop
dec
cmp
cli
ja
loope
sub
leave
nop
idiv
in
aas
or
xchg
push
cmp
mov
popf
adc
sbb
push
jge
test
lods
int
xor
outsl
add
into
int
hlt
cld
inc
mov
les
mov
push
addb
cwtl
mov
pop
je
xor
xor
sahf
xchg
fisubrs
mov
pop
inc
repz
pand
push
cmpsb
popa
loopne
ret
jmp
adc
shl
adcl
pop
shrl
and
outsb
push
push
adc
loop
xor
push
push
mov
scas
int
fsts
sbb
fnstcw
xor
out
pop
or
icebp
xchg
mov
das
mov
addr16
adc
imull
add
movsb
mov
popa
test
jns
cmpsb
jnp
cmp
fistps
dec
leave
icebp
inc
dec
add
insb
das
outsl
cmp
test
fcmovbe
lods
cmp
dec
in
push
stos
pop
dec
ret
push
dec
fwait
xor
in
mov
jg
ror
dec
sti
call
inc
je
jmp
cmp
and
cmc
aam
mov
push
fstpt
clc
dec
mov
and
test
ss
stos
sbb
repnz
fneni(8087
push
sahf
inc
stos
mov
sbb
das
stos
pop
pop
add
rcrl
inc
jmp
std
xor
lret
xchg
movl
mov
sub
test
push
stos
pushf
mov
fcmovnb
stc
xchg
cs
xchg
pop
int3
sub
and
cld
mov
iret
mov
pop
jg
test
sub
sbb
adc
mov
push
xor
div
adc
gs
cs
loop
pop
xchg
les
mov
jo
call
pop
insb
jg
jae
xchg
xchg
test
loopne
jl
ret
test
mov
mov
dec
stos
cwtl
sub
push
sub
outsl
adc
in
xor
or
sbb
xlat
cwtl
imul
loopne
out
ret
xor
jp
and
jne
jnp
sarl
adcl
loope
loope
mov
pushl
shll
inc
sub
cltd
jae
sbb
filds
push
sub
inc
jg
cmp
fs
lahf
sbb
shlb
sbb
push
add
jg
ret
divb
add
sbb
sbb
mov
subb
mov
mov
test
jl
mov
hlt
fildll
pop
sbb
lret
pushf
inc
data16
or
das
jne
or
pop
daa
push
inc
xor
sbb
adc
xor
dec
data16
xchg
mov
adc
pop
lds
lds
mov
jmp
mov
dec
inc
mov
push
sub
das
pop
and
jge
xchg
leave
lods
stc
adc
sbb
leave
rclb
add
push
lock
sub
test
int3
jecxz
leave
xor
rcll
mov
icebp
mov
add
mov
cmc
test
mov
pop
pop
xorb
xchg
cld
pop
daa
add
pop
loope
push
fstpl
in
or
push
jle
outsl
aam
es
lds
push
bound
lahf
adc
sub
nop
mov
pop
mov
mov
adc
jo
sbb
sub
pop
insb
imul
sub
in
fisttpl
mov
push
mov
push
jmp
dec
adc
iret
xchg
push
and
sbb
cs
adc
pop
das
addb
ret
es
pop
aaa
data16
mov
cmp
push
mov
cmp
std
jl
xor
inc
mov
pop
negl
jp
jl
out
lock
mov
out
jg
pop
add
add
sbb
sbb
mov
fcomps
push
in
in
mov
cld
cmpsb
cmp
mov
cmp
adcb
enter
ss
push
jl
lcall
ret
pushl
jno
aam
jmp
mov
cmpb
lods
scas
jle
mov
repz
jno
lcall
insl
test
jg
sbb
sti
sbb
push
lret
aas
push
push
inc
sbb
and
jg
jp
push
ret
mov
dec
jl
movsb
push
xchg
scas
test
sub
pop
ffreep
testb
jle
jmp
sub
lret
push
pop
xchg
jbe
mov
mov
xor
xchg
cli
mov
fcomp
or
scas
xlat
inc
add
fstl
bound
cmpl
xchg
lock
and
dec
stc
or
push
stos
mov
jecxz
xor
adcl
loopne
xchg
sbb
dec
adc
lcall
ljmp
rclb
pop
push
lods
sbb
jp
xor
cmp
add
add
mov
add
sbb
mov
adc
incb
adc
cmp
push
xchg
xchg
xor
jg
mov
fidivs
clc
xchg
add
lret
inc
cwtl
inc
lock
cmp
mov
lea
xchg
mov
ret
dec
dec
cli
clts
mov
mov
or
das
cld
xor
mov
cmpsb
cmp
jno
cmp
xchg
push
and
lcallw
mov
sub
loope
repnz
stos
xchg
adc
pop
xorb
sub
add
test
stc
test
cltd
xchg
mov
lret
mov
iret
or
push
add
loop
ja
popa
push
mov
sbb
adc
sub
adc
sub
mov
mov
js
jne
mov
push
jmp
fistpl
or
enter
sub
xlat
jg
push
popa
stc
mov
in
jbe
leave
add
sahf
fs
ljmp
lcall
data16
pop
push
decl
sub
shr
sbb
push
bound
dec
lds
fucomp
lea
xchg
lods
test
pushl
aad
lea
sbb
xor
sub
xchg
add
xchg
or
or
mov
xor
cli
jg
push
dec
inc
jmp
fdivrs
mov
mov
xor
mov
dec
cmp
sbb
std
nop
or
sub
push
sub
jp
adc
sbb
fistpll
scas
mov
mov
inc
or
rcl
test
je
sbb
shll
clc
aaa
rcrl
insl
in
loop
outsl
gs
push
clc
dec
ljmp
fdivrl
cld
jmp
movsl
cmpsl
xchg
or
fistpl
decb
jle
fst
outsl
mov
pusha
fdivr
mov
adc
mov
mov
bound
pushl
popf
pop
or
push
push
sub
xchg
dec
gs
subl
mov
int3
scas
rcr
push
in
lret
clc
sub
adc
ret
decl
mov
lods
pop
lods
sub
and
lock
mov
testl
icebp
aaa
pop
fistps
icebp
aad
lret
ret
xorb
orl
cmc
jmp
dec
scas
dec
shrl
sub
and
jl,pn
jg
cmp
add
xchg
test
pop
es
pop
mov
jb
and
jbe
movsb
xchg
sub
sar
rcrl
inc
sbb
inc
test
mov
mov
test
and
xchg
pop
outsl
pusha
push
push
std
jns
int
insl
add
sub
lea
int3
push
mov
jle
frndint
or
inc
inc
jl
rolb
or
inc
add
mov
xchg
lcall
rorb
adc
mov
add
sbb
inc
add
pop
mov
adc
jge
sub
fcmovnbe
add
lds
xchg
popa
sbb
test
adc
and
inc
add
jg
mov
push
ret
or
mov
cmp
push
je
orl
mov
adc
cmp
xor
pop
les
mov
push
xchg
pushf
mov
sub
xor
xor
mov
mov
outsb
out
push
insl
inc
cld
outsl
jne
testb
test
cli
sub
repnz
add
cmp
inc
cwtl
lock
stc
xchg
ret
inc
subb
xchg
int3
inc
and
cmpb
aad
jnp
sbb
aaa
xor
int3
xor
rorl
cmp
subps
in
pushf
push
or
pop
scas
int3
or
inc
out
mov
xchg
mov
adc
or
push
stc
aam
push
lea
cmp
mov
lea
jae
mov
xlat
add
cmpsb
inc
loop
add
addr16
jle
subl
mov
out
mov
push
in
pop
and
imul
lds
or
sbbb
pop
pop
ret
push
and
mov
test
scas
pop
sbb
pop
icebp
addl
mov
xor
scas
mov
push
mov
mov
popf
cmp
fiaddl
sbb
in
lret
cmp
and
add
subl
pop
fs
add
aaa
inc
sub
cmc
adc
rolb
mov
int
add
inc
inc
call
inc
or
int3
inc
js
mov
jl
popa
pusha
adc
out
push
out
push
dec
mov
and
xor
movlhps
rclb
aas
in
jmp
add
sbb
xchg
push
mov
sub
out
mov
ss
add
push
adc
outsb
adc
or
cmpsb
in
sbb
dec
xor
push
pop
xchg
out
xchg
sbbb
mov
cmp
cmpsb
pop
mov
iret
mov
add
and
cmp
pushf
pop
jns
jns
pop
mov
outsl
test
loop
add
das
addr16
lock
outsb
push
inc
pushl
out
jge
mov
mov
and
add
call
imul
or
inc
pop
add
push
or
xchg
xor
adc
jmp
jp
jno
jae
rcl
cld
lock
rcrl
int3
add
push
data16
ljmp
sbb
pop
push
or
pop
in
inc
inc
sub
jae
mov
mov
sub
xor
push
fwait
dec
ds
jg
das
sub
int
ret
ja
imul
sub
das
hlt
adc
icebp
stos
into
or
test
mov
dec
add
js
pop
mov
mov
mov
xor
std
or
pop
add
inc
mov
inc
xchg
push
jg
out
add
data16
add
bound
sub
mov
fwait
rcl
pop
rorl
jp
add
das
repz
pop
flds
jb
es
push
flds
rol
fidivrs
dec
mov
jle
mov
lcall
mov
divb
add
out
fstps
and
dec
xchg
fsubrs
or
cmp
mov
clc
mov
adc
icebp
inc
mov
push
jbe
xchg
mov
jecxz
fldcw
jle
inc
mov
mov
and
add
loopne
mov
add
xchg
pop
adc
outsl
loopne
lcall
mov
popa
mov
movsb
lcall
std
or
pop
mov
aas
repz
dec
sar
mov
jno
cli
mov
je
addl
push
cmp
add
stc
enter
pushl
fistps
js
dec
aaa
push
dec
ljmp
mov
cwtl
loopne
mov
lret
inc
inc
jecxz
mov
push
adc
pop
adc
pop
inc
popa
leave
mov
mov
dec
addr16
pop
xorl
mov
adc
inc
cmp
adc
jge
dec
movsb
pop
inc
movsb
aam
inc
cld
lcall
lock
call
push
cli
xor
fs
test
jno
sarb
xchg
jmp
xchg
sbb
hlt
das
clc
imulb
xchg
or
fdivrl
ljmp
adcb
bnd
pop
sar
outsl
outsb
add
aam
pop
adc
push
xor
add
add
or
pusha
pop
addr16
mov
fwait
mov
jb
ss
test
sbb
pop
mov
adc
push
mov
push
out
xor
jmp
dec
sub
aam
outsl
data16
cmp
push
es
dec
sub
rcrb
aaa
push
xchg
fcoml
test
add
push
mov
pop
xor
les
mov
adc
xchg
pop
xchg
mov
cmpb
pop
jg
rorl
dec
call
jmp
push
jg
sub
mov
inc
dec
inc
cmp
repnz
mov
in
aad
sbb
sub
orl
divl
mov
andb
add
adc
sbb
xorb
movsb
sbbb
addl
das
fimull
test
in
ficoml
shl
scas
fiadds
clc
outsl
jno
fstpl
inc
jp
or
pop
rcrl
mov
aaa
mov
lcall
and
adc
ret
imul
sbb
leave
test
outsb
outsl
test
inc
or
nop
sti
out
and
mov
adc
jp
sbb
sub
cli
mov
outsl
loop
cmp
bound
aad
sbb
cwtl
fists
mov
sub
gs
mov
dec
shl
imulb
arpl
and
xorb
adcb
fistpll
nop
add
movsb
pop
inc
or
loopne
jg
push
jl
fcmovne
pop
sbb
mov
jb
fwait
imul
das
cmp
mov
lds
in
jp
adc
nop
inc
add
daa
mov
aas
push
push
lock
int3
nop
or
js
or
pop
daa
push
add
sti
movsl
sbb
mov
xchg
mov
dec
xchg
lcall
fdivrs
loopne
cmp
scas
adc
pop
les
dec
inc
dec
dec
leave
pop
pop
test
add
fstpt
pop
popf
cmpsl
mov
mov
mov
mov
testb
push
mov
outsl
popf
jns
and
add
mov
xchg
scas
pop
stos
inc
mov
lret
mov
push
cmpl
xchg
lret
cmovno
push
cld
dec
outsl
cld
rolb
mov
out
mov
or
outsl
idivb
xchg
and
adc
ds
jl
fistpll
hlt
push
cmpsb
adc
sbb
dec
les
push
je
add
add
inc
das
xchg
ja
jp
push
xchg
mov
cli
fs
sub
ljmp
jge
rclb
sbbl
inc
mov
incl
lds
loope
or
sbb
add
mov
mov
adc
lods
jl
sti
fs
and
pop
push
decl
outsb
cmpb
sub
rcr
pop
mov
data16
mov
test
jne
das
ljmp
adc
mov
aad
push
jae
or
stos
jne
jecxz
mov
pop
addr16
inc
ss
mov
call
hlt
je
cld
subb
mov
xor
addr16
dec
add
xor
int
adc
cli
les
xor
sahf
xchg
dec
loope
xor
xor
mov
repz
push
mov
movsl
jp
add
fwait
les
dec
sub
call
bound
jae
inc
adc
mov
scas
shrb
pop
dec
cmp
es
out
sub
xchg
add
fwait
subl
bound
and
fstpl
xor
ss
shr
jbe
enter
enter
lcall
addl
js
xor
les
pop
clc
int3
ret
je
xor
jg
ss
lret
cmovb
jge
xor
sub
mov
add
mov
scas
jmp
add
divl
sarb
mov
arpl
lret
mov
xchg
jbe
lea
sbb
push
jmp
xor
movsb
sub
and
push
test
in
pop
cmp
pop
outsl
push
sub
pusha
fdivl
inc
and
jmp
jecxz
cltd
adc
xchg
popa
mov
xor
mov
das
aad
cmp
ss
push
aam
add
loopne
std
pop
sti
jns
movsl
decb
jb
divl
int3
mov
add
cmp
cwtl
inc
cwtl
fs
insl
rclb
inc
jecxz
data16
mov
outsl
std
pop
loop
jnp
mov
mov
cmpsb
xor
or
jge
jb
fnstcw
and
add
xor
sub
mov
fs
nop
xchg
inc
adc
push
or
jmp
adc
hlt
cld
inc
sbb
adc
jo
enter
fwait
pushaw
loopne
scas
fistl
dec
push
ja
pop
and
jno
imul
ret
or
push
adc
xchg
push
xchg
pusha
test
mov
rolb
push
sbb
mov
add
stos
ja
add
or
push
xor
out
mov
jo
xor
sub
jge
ret
adc
cmpsl
mov
loope
jg
dec
aam
rorb
pop
ljmp
jo
fdivrs
aam
into
loop
add
roll
push
fildl
das
adc
pop
dec
insb
mov
roll
ja
pop
sub
sub
out
into
dec
mov
pusha
call
decl
mov
push
add
addr16
xchg
add
lods
add
in
cmp
push
pop
add
or
decl
inc
inc
push
in
pop
rclb
fiaddl
fcomi
add
aaa
jo
aaa
push
push
inc
cmp
mov
clc
push
sbb
or
sub
mov
add
push
push
out
or
inc
lds
or
scas
mov
push
xlat
jp
shl
inc
bound
fdivs
xor
sbb
sub
xor
push
popa
js
dec
call
ljmp
add
xlat
add
inc
test
or
loopne
push
xchg
xchg
dec
flds
mov
sbb
push
inc
mov
mov
push
fnstenv
dec
dec
dec
jle
sub
aas
mov
out
and
mov
mov
xor
fidivrs
xlat
pop
popa
rcrb
lahf
hlt
pop
mov
lock
dec
mov
loopne
call
outsb
sbb
test
push
dec
xchg
inc
out
jo
xorb
and
sbb
mov
mov
out
incb
push
icebp
push
mov
daa
mov
push
repnz
in
sti
outsb
or
and
out
out
or
dec
pushl
and
push
fmull
loop
pop
gs
sbb
add
or
mov
pop
das
pop
loopne
pop
jecxz
and
push
enter
test
stos
rolb
add
pop
push
fildl
cltd
cs
push
decb
incl
push
add
pushl
outsl
xchg
mov
icebp
add
xchg
xor
sub
add
mov
and
mov
and
mov
jle
js
ja
pop
js
inc
adc
fxch
rcll
lds
in
sbb
and
dec
in
and
aam
and
pop
stc
js
xchg
in
nop
clc
test
iret
aas
dec
scas
test
stos
pop
imul
mov
out
add
pop
jg
jnp
jne
push
sbb
mov
or
incb
jg
push
enter
mov
mov
pop
mov
mov
les
loopne
xchg
fs
xor
repz
fstpt
arpl
mov
mov
scas
mov
movsl
test
outsl
cld
das
std
xor
insl
xor
jle
arpl
push
data16
add
jecxz
dec
aad
cwtl
xchg
lods
inc
loopne
in
inc
mov
shl
mov
inc
push
shrl
dec
daa
push
ret
sub
or
les
loopne
jnp
mov
sbb
enter
lock
dec
dec
add
add
sbb
add
pop
add
lcall
push
jne
xor
inc
jmp
push
adcl
add
ret
movsl
hlt
and
jo
inc
roll
ds
jnp
addl
add
stos
mov
fstps
test
or
loopne
subl
stos
mov
data16
jmp
sti
and
data16
lock
fs
inc
mov
jp
imul
adc
xor
loope
push
mov
mov
or
inc
sub
sub
sbb
out
call
shlb
adc
ja
pop
sbb
mov
stos
and
test
sahf
and
adc
push
adc
xchg
add
and
imul
fsubl
ficoml
xchg
pop
adc
sbb
fcomi
loop,pn
lahf
inc
dec
js
sub
fsts
push
and
push
ret
cmp
cmp
fcoms
test
mov
fmull
orb
mov
cwtl
inc
add
or
cld
pop
adc
cmp
push
xchg
add
pop
cmp
inc
jns
add
sub
or
jno
faddl
in
inc
pop
add
add
push
ss
pop
mov
mov
aad
adc
std
loope
push
pop
loopne
sbb
test
adc
push
and
sbb
mov
add
fisubl
dec
test
cmp
lods
inc
stos
test
jbe
rol
xchg
sbb
cmpl
pushf
out
jns
es
out
or
cmp
cltd
test
jb
add
dec
jo
mov
leave
cmp
hlt
mov
xor
fcoml
rcrl
sahf
mov
js
imul
xchg
cli
cmp
adc
and
adc
into
jmp
fadds
and
add
fstps
and
push
mov
bnd
mov
mov
inc
mov
scas
adc
clc
cs
push
les
sbb
and
inc
mov
lea
add
mov
clc
das
pop
jnp
outsl
dec
add
pusha
or
push
pop
mull
loopne
sbb
jae
add
aam
add
adc
out
xor
mov
xor
cli
sbb
data16
gs
aaa
hlt
or
inc
add
imul
nop
pusha
js
xchg
inc
xchg
ljmp
add
jns
dec
lods
aaa
or
and
mov
push
rcrl
aad
dec
jl
decl
mov
adc
mov
adc
sarb
scas
nop
and
lea
cmp
mov
mov
insb
push
mov
add
inc
or
dec
leave
add
imul
inc
jmp
sbb
or
sbb
mov
stos
fldt
stos
push
js
incb
enter
push
adc
and
lock
ficoml
fwait
sbbb
pmullw
cmp
outsl
jmp
lods
lcall
into
xchg
mov
push
push
push
inc
lds
iret
insl
mov
or
push
aam
insl
mov
pop
lods
mov
sar
pop
fiadds
pop
and
push
inc
jo
add
add
pusha
sub
stos
shr
sub
clc
incl
dec
and
andl
imull
and
xchg
stos
imul
unpcklps
aam
clc
lock
push
cmpsb
loop
xchg
jmp
mov
addr16
je
lcall
inc
xor
or
stos
mov
sub
cmpsb
cmp
jle
cmpsl
mulb
xchg
clc
add
or
stos
or
in
adc
shlb
lock
mov
cmp
std
push
repnz
in
push
dec
das
sub
dec
and
lcall
gs
mov
jo
or
cmp
mov
mov
inc
sahf
and
test
or
push
sub
dec
icebp
or
mov
lea
daa
jle,pn
mov
jnp
clc
xorb
fwait
clc
xor
pop
ja
mov
and
stc
call
or
push
lock
pop
aaa
fsave
orb
mov
mov
lret
xchg
mov
das
sbb
cmc
mov
mulb
adc
push
dec
add
xorl
dec
insl
arpl
lods
push
xchg
js
push
lahf
scas
mov
cmp
push
fwait
iret
mov
add
inc
in
test
inc
jl
sti
dec
lea
fstpt
shll
jecxz
jl
mov
pop
cmp
xchg
pop
jmp
stc
dec
pushl
dec
inc
into
frstor
nop
call
decb
push
xor
push
cmp
xor
stc
ljmp
adc
std
stc
in
pop
clc
aas
sub
ljmp
push
sub
sbb
adc
daa
adc
pop
cli
aaa
dec
iret
add
scas
and
push
sbb
lret
addb
icebp
imul
sub
popf
or
js
je
sarb
xor
ss
sub
ficomps
mov
push
enter
mov
mov
adc
push
iret
xor
int3
mov
ret
lds
in
mov
pop
mov
dec
xchg
mov
call
outsb
mov
cmc
mov
mulb
push
loop
ret
inc
cmc
js
std
adc
adc
cld
inc
dec
jl
out
sbb
or
mov
fstp
insb
bound
sbb
jl
mov
jne
out
mov
inc
jne
xchg
sti
out
test
push
lcall
das
xchg
sub
cmp
mov
push
add
jb
daa
xchg
sbb
mov
mov
dec
and
adc
lcall
mov
mov
insl
push
jae
jb
xor
nop
clc
jg
rcrb
jmp
and
movsb
fidivs
pop
mov
decl
mov
mov
je
sub
ds
shll
add
adc
mov
dec
or
pop
xor
cli
sub
or
rol
lcall
add
nop
inc
out
loopne
inc
mov
inc
and
fstpt
or
das
pop
adc
jmp
push
dec
inc
int
inc
inc
dec
shrl
pop
xor
mov
mov
imul
jne
hlt
addr16
aas
jno
add
mov
in
cmp
mov
std
or
or
test
fs
or
pop
jo
cmp
jg
sbb
xor
jle
or
mov
imul
or
xchg
jns
and
mov
out
mov
jg
loopne
stos
push
jo
das
ret
jb
mov
xchg
mov
fisttpll
xchg
push
push
nop
sub
pop
sub
push
xchg
pop
adc
mov
jecxz
das
jecxz
movsl
scas
cmp
jle
in
push
jmp
test
xor
fstps
mov
lds
rorb
fstpt
leave
sbb
sbb
pop
das
xchg
mov
stc
mov
aaa
fwait
jmp
movsl
fcomps
test
jns
and
in
sbb
lds
pop
cmp
daa
js
push
adc
ss
icebp
aas
push
or
push
xor
nop
mov
mov
ret
cmp
xlat
mov
jo
cmp
pop
jge
addl
ds
push
sbb
mov
and
or
fisttpll
lcall
pop
xor
sub
pop
mov
mov
sbb
cmp
dec
jl
daa
adc
jmp
in
adc
inc
push
mov
sub
outsl
rcr
add
test
sub
mov
xor
aam
mov
lcall
add
or
xor
mov
mov
rcl
fwait
cmp
pop
push
shrl
sbb
jbe
jns
dec
jb
push
aaa
mov
and
pop
inc
out
cli
jae
movsl
jns
icebp
adc
cmp
sub
insl
test
mov
cwtl
sbb
fsubr
clc
test
into
inc
or
filds
pop
sbb
sbbl
mov
push
gs
mov
dec
add
testl
sbb
add
loopne
int
push
push
push
std
push
dec
ds
add
imul
in
sub
les
or
repz
adc
pusha
insl
jg
movb
ljmp
push
mov
mov
rol
std
cmpsb
out
pop
lret
xlat
js
movsl
mov
cmp
in
mov
inc
shll
add
stc
cmp
pop
mov
mov
sub
and
fadds
cmp
mov
sub
andl
jne
xchg
ds
scas
popf
dec
nop
jmp
dec
pop
pop
xchg
jb
es
jo
jb
push
dec
jecxz
iret
movsb
mov
fmul
jp
xchg
mov
xchg
push
pop
fsubr
or
pop
sbb
clc
jg
jns
inc
cs
out
test
push
cmc
mov
into
lock
orb
iret
jne
in
cltd
xchg
nop
mov
sbb
cmp
adc
push
rol
jmp
and
test
mov
mov
out
add
test
sub
mov
xchg
fdivrl
cwtl
sti
xchg
jbe
xchg
mov
mov
adc
inc
mov
jne
loopne
lret
and
outsb
mov
pop
int
jb
adc
xchg
sbb
dec
lcall
inc
mov
push
les
jo
insl
xchg
int3
sub
aaa
movsl
stos
negl
mov
and
push
aas
push
pop
sub
or
js
inc
andb
ret
sbb
dec
ja
stos
outsb
cld
test
scas
mov
dec
ret
inc
mov
pop
push
out
pop
sti
arpl
xor
mov
dec
lahf
push
xchg
mov
xchg
sbb
dec
mov
dec
pop
pop
sbb
nop
add
popf
pop
fwait
mov
adc
das
sbb
les
cli
sbb
in
scas
stc
xchg
xchg
jmp
pusha
int
test
pushf
inc
test
test
loop
xchg
cwtl
inc
mov
add
or
add
js
arpl
out
jbe
lcall
das
je
scas
fs
rclb
sahf
and
inc
mov
sub
fistpll
push
sub
mov
or
xchg
and
cmp
add
cld
dec
cmc
lret
in
or
xor
push
addl
xchg
jno
jg
inc
notb
xchg
mov
mov
xchg
outsb
rclb
push
jle
scas
mov
mov
mov
outsl
std
push
xchg
add
je
dec
scas
mov
leave
fisubl
sahf
push
push
xchg
xchg
mov
push
or
int3
mov
jno
clc
mov
push
mov
lds
adc
insl
aas
ficoml
mov
cwtl
dec
adc
cmp
cld
movsl
push
stos
ret
xor
daa
aas
cmp
je
xor
rcr
inc
inc
stos
and
adc
mov
mov
in
pop
jl
outsb
inc
adc
mov
pop
inc
icebp
or
cmpsl
fidivrl
stos
insb
xchg
or
ret
xchg
mov
mov
shr
sbbb
mov
dec
sbb
dec
sbb
xchg
and
mov
shlb
xchg
sub
scas
movhps
jl
dec
lcall
and
fcmovnbe
and
sahf
add
sbb
and
cmp
dec
mov
fistpl
fldcw
jae
js
clc
lret
push
loop
jb
ficompl
jg
outsl
es
fbld
nop
inc
lret
pop
outsb
xor
cli
adc
es
imulb
sbbb
pop
in
lds
pusha
add
in
cwtl
cmpsb
pop
fdivr
inc
inc
sub
jae
mov
add
mov
pop
es
pop
nop
popa
pop
gs
pop
jge
cmp
push
cmp
jb
mov
rcl
jp
cmp
mov
sahf
pop
dec
dec
sbb
mov
push
dec
mov
inc
mov
and
cmc
movsl
mov
les
pop
xor
xchg
sbbb
mov
jns
lcall
sub
ret
in
and
popl
mov
mov
adc
xchg
xchg
mov
inc
jmp
stos
ljmp
mov
sbb
jnp
shrb
stc
adc
faddp
pop
test
mov
clc
out
push
xor
mov
sbb
adc
mov
dec
mov
mov
pop
or
inc
xchg
fcoml
in
sub
outsl
pushl
jge
adc
and
push
jns
and
mov
clc
and
pop
insb
jg
lahf
jmp
aaa
inc
ret
add
jno
mov
pop
xor
sub
nop
test
xchg
ljmp
std
incl
jne
mov
mov
mov
add
movsb
stc
cs
or
jl
inc
push
push
xchg
xor
jp
mov
aam
jns
ficomps
movl
mov
mov
inc
dec
push
adcl
jno
aas
testl
mov
fs
or
jl
jno
daa
test
sbb
inc
cmp
sub
daa
aad
loope
stc
jge
in
clc
outsb
call
jmp
push
sbb
adc
mov
xor
jge
mov
jg
ss
pop
add
int3
and
dec
cbtw
cli
scas
inc
sbb
outsl
mov
inc
or
shrl
movsl
xor
repnz
stc
scas
lock
hlt
xchg
adc
mov
adc
jle
push
lahf
mov
outsb
mov
out
xor
rol
xor
mov
stos
or
cli
lods
sbb
or
or
push
aas
mov
dec
fistpll
jle
add
jge
inc
xor
cmc
repz
or
sbb
sub
xchg
js
sarl
mov
sahf
ljmp
jnp
nop
imul
xchg
js
das
or
xor
scas
jg
scas
adc
aas
jge
cld
popa
aas
lret
lcall
jecxz
xor
cwtl
arpl
pop
imul
decl
leave
add
lock
inc
xor
adcb
and
lods
mov
dec
neg
dec
xor
lea
xor
in
or
or
inc
push
fidivrl
mov
push
ja
fisubrl
pop
lock
ja
loope
add
xor
adc
adc
movsb
adcb
roll
adc
or
xlat
inc
sub
inc
cmp
adcb
inc
ja
pop
or
decl
push
ljmp
leave
mov
push
cs
into
or
or
orl
add
ja
and
xor
add
cmp
subl
lretw
lret
adc
xor
mov
add
cmp
leave
add
call
icebp
xlat
dec
aam
mov
push
outsb
bswap
mov
adc
and
or
orb
and
mov
in
inc
xor
adc
lahf
push
mov
sbb
add
shll
mov
cmpl
xchg
int3
dec
cs
adc
and
adc
mov
in
xchg
repnz
push
shl
scas
mov
icebp
inc
inc
push
adc
call
inc
sub
sbb
cmp
sub
std
sub
gs
sarb
je
mov
andl
sub
cli
xor
dec
fildl
sub
lcall
mov
adc
inc
pusha
stos
mov
mov
and
ror
add
ss
add
adc
mov
cmp
inc
lcall
jle
sbb
mov
adcb
in
clc
out
or
mov
loop
xor
xor
and
xorb
frstor
insb
outsl
xchg
or
add
inc
add
pop
xchg
lahf
imul
mov
repnz
add
push
xor
scas
iret
push
or
not
dec
add
add
pop
mov
loopne
gs
xor
push
mov
test
stos
mul
pop
cmc
clc
scas
cmp
jne
movl
ficoms
and
sub
dec
jl
lahf
dec
cmp
push
add
incb
cmp
inc
sbb
mov
aas
mov
call
push
cmpsb
fimull
xchg
and
adc
sti
inc
in
sbb
dec
loopne
subb
jg
popf
ficoms
scas
loopne
js
sub
mov
jmp
mov
add
push
pop
push
add
icebp
add
mov
mov
adc
xor
inc
mov
push
aad
test
mov
adc
mov
test
std
out
pushf
cmp
dec
imul
dec
test
or
add
inc
jne
aas
add
push
xchg
pop
jecxz
adc
aaa
call
inc
icebp
fs
xor
mov
mov
xor
int
lret
cmp
iret
inc
mov
push
cmpsb
pusha
daa
dec
push
and
pop
xor
mov
pusha
inc
idivb
inc
and
icebp
or
xor
xchg
mov
and
inc
cld
in
dec
cmp
dec
jo
and
mov
addr16
adc
and
into
jp
xor
fstpl
outsl
and
jmp
pusha
push
scas
fldl
inc
nop
daa
lds
lods
sahf
sub
add
cmpl
incl
lret
lret
das
and
fwait
icebp
testb
dec
lahf
and
mov
decl
stc
test
add
rclb
sub
incb
lea
dec
mov
stos
fmuls
dec
test
fs
mov
lret
or
push
xlat
aad
imul
add
test
or
cmc
movl
call
loopne
sti
lret
mov
or
cmp
xchg
mov
dec
movsl
push
pushf
dec
dec
out
insl
push
mov
push
mov
inc
sbb
xchg
repnz
scas
mov
fs
popf
xor
leave
and
xchg
adc
push
or
imul
push
add
out
jns
dec
xor
cltd
xor
cli
and
test
and
fildll
cmp
int3
add
jo
cmp
add
inc
sub
mov
rorl
sbb
lcall
ficompl
inc
sub
jge
cmpsb
repnz
or
jno
sarb
and
out
dec
bound
lret
mov
push
addr16
stos
inc
mov
aaa
sarb
mov
out
jle
lcall
aam
aad
je
jmp
lcall
pop
test
sti
xor
stos
push
ds
pop
imul
dec
inc
popa
dec
xchg
adc
nop
ljmp
inc
insb
lods
inc
clc
mov
xchg
cmp
sub
inc
push
mov
fstl
icebp
fistpl
ds
inc
mov
sar
mov
sub
pop
mov
xor
es
jb
loop
xchg
test
jae
idiv
dec
ds
add
sbb
and
push
dec
cmp
pop
mov
jns
lds
dec
rcrb
mov
mov
pop
mov
add
in
aas
lahf
add
in
das
cld
aaa
pop
jecxz
inc
mov
gs
mov
adc
out
cli
push
mov
xor
sbb
test
out
cmp
ret
push
mov
add
pop
adc
push
leave
ja
imul
out
scas
or
jle
pop
dec
fiadds
dec
sarb
and
pop
push
pop
insb
icebp
outsb
cmc
sbb
dec
popf
lret
ret
or
test
and
cmp
mov
test
add
into
dec
or
out
sub
jb
push
pop
or
or
into
push
jg
out
imul
adc
in
pop
std
jecxz
ljmp
mov
leave
repnz
loope
cmp
jle
test
inc
ficompl
bound
rclb
push
outsb
sbb
inc
es
repnz
and
lea
pop
int
pop
jle
adc
mov
and
push
popa
out
clc
das
call
mov
ja
clc
or
and
popf
add
pop
fldl
push
roll
nop
sbb
scas
rorb
push
ret
xor
mov
cmp
mov
aas
xor
push
dec
cmp
aaa
push
jmp
cmp
sahf
ljmp
mov
ljmp
pushf
pop
xor
push
fwait
mov
lcall
jo
add
ss
push
mov
test
or
stos
add
loope
nop
mov
pop
scas
adc
or
pop
in
rcll
rcl
mov
jp
fsubrl
aaa
imul
cs
jmp
sar
testb
sbb
pushl
loopne
cs
mov
sarl
and
dec
add
in
aaa
jp
call
xlat
jae
sbb
adc
js
pop
sub
xchg
ret
fiaddl
out
jmp
popa
and
mov
lods
xchg
or
jg
js
xlat
add
int
movsb
ljmp
je
movsb
cmp
das
cmp
aam
jg
jmp
sub
sbb
pusha
fsubl
sub
ret
adc
cld
dec
ds
push
push
jp
adc
or
pop
daa
arpl
outsb
cmpsb
popa
lcall
test
jno
push
and
dec
sbb
incl
adc
xchg
sbb
push
mov
rorb
rorl
mov
dec
test
test
call
adc
add
shlb
adc
or
adc
and
sub
lods
sub
stos
mov
sub
call
xchg
ljmp
sbb
or
fildll
insb
mov
push
sbb
sbb
lahf
fs
ja
lret
call
rcl
je
dec
add
sahf
and
out
dec
xchg
enter
inc
and
push
das
nop
sbb
aas
bound
pushf
sbb
xor
jbe
jecxz
and
push
clc
and
leave
das
mov
dec
pop
fsubrp
push
addr16
cmpsl
cs
das
adc
mov
in
sbb
push
icebp
sbb
imul
cmpsb
ret
inc
cmp
add
les
andb
sti
xchg
lds
loop
popf
cmp
jmp
cld
or
mov
test
push
jae
and
jnp
lret
repz
add
icebp
cmpsl
outsl
std
int
sub
ss
cmp
fs
cmp
loopne
test
fcmovnbe
outsl
sub
cmpsb
add
xchg
lds
imul
punpckhwd
add
xchg
pop
sub
and
inc
inc
add
sbb
hlt
shlb
out
sub
xchg
jno
and
sbb
dec
add
icebp
xchg
mov
mov
or
call
subb
jecxz
mov
jns
imulb
adc
mov
jmp
cld
and
push
mov
mov
sub
inc
mov
loope
cmp
jl
cmc
lcall
xchg
xchg
xor
shlb
xor
jns
ret
push
decb
push
bound
in
iret
add
imul
pop
dec
sbb
mov
dec
or
mov
mov
xor
or
insb
push
aaa
xlat
adc
sbb
sub
inc
cltd
xor
mov
adc
test
in
dec
sbb
pop
mov
jne
lahf
push
mov
test
add
test
and
cld
test
fists
call
cli
pushl
sub
xor
mov
outsb
sbb
xchg
dec
push
and
or
push
inc
sbb
add
pusha
adc
inc
inc
leave
sub
test
push
adc
subb
cmp
push
daa
or
dec
mov
mov
push
in
xor
cmc
rolb
cmpsb
sub
lcall
stos
out
hlt
insl
mov
xor
cmp
fwait
jge
mov
pop
or
xchg
scas
xchg
or
fidivrs
jg
clc
mov
mov
push
xchg
and
nop
inc
les
push
and
cltd
sbb
subl
subl
jno
lcall
pop
mov
cwtl
xchg
out
les
cmc
sar
pop
insb
bound
mov
dec
mov
sbb
rcrl
jns
cmp
adc
pop
pop
js
pop
sub
xchg
jmp
add
mov
and
aam
test
mov
or
lret
lret
test
mov
loopne
add
adc
out
mov
sub
call
jp
add
out
mov
scas
pusha
jbe
popf
add
cmc
mov
std
xlat
add
jmp
and
std
push
aaa
mov
adc
das
jne
mov
push
mov
or
and
sahf
and
repnz
sbb
inc
mov
inc
xchg
outsb
jae
aaa
mov
xor
mov
push
cmpb
pop
jle
rcrb
pop
add
cmp
lds
mov
sub
fs
push
ret
cmp
pop
loope
xor
add
inc
mov
lock
nop
xor
icebp
inc
mov
inc
decl
lods
enter
jo
cmpsb
and
add
fcmovu
outsb
lret
idivl
stos
sar
pop
mov
sub
sbb
sub
lret
fildll
ds
aaa
sti
lock
pop
mov
push
sbb
incb
jl
daa
dec
ret
cli
mov
add
push
in
clc
dec
sbb
addb
andb
push
push
mov
out
sub
sub
aaa
ret
jmp
dec
pushl
pop
icebp
pop
mov
mov
into
sub
sbb
ret
dec
ret
pop
xrelease
rcr
xchg
mov
mov
mov
test
jbe
xchg
cli
fldcw
cmp
or
inc
xor
or
shrb
and
mov
cs
es
lahf
test
add
sub
or
mov
fwait
adc
mov
cmp
gs
shl
pop
test
lock
incl
lock
dec
sub
imul
aaa
inc
and
push
xor
pusha
push
pop
es
insl
pop
int
cli
pop
jae
add
cltd
cli
sahf
add
lahf
adc
inc
xchg
adc
out
dec
and
call
adc
shlb
pop
loope
jbe
or
fwait
sarb
and
push
adc
dec
sub
push
lock
jg
jno
inc
adc
and
rolb
lret
mov
add
add
mov
cli
inc
ds
test
push
xchg
inc
pop
or
sbb
adc
and
call
add
adc
push
leave
add
lds
test
add
inc
inc
outsl
lock
xor
sarb
aad
and
sbb
add
stos
or
adc
loopne
cmc
repz
push
adc
add
and
pusha
add
mov
mov
push
and
fwait
and
fisttps
stc
push
sbb
add
shlb
rclb
cmc
or
loope
or
sbb
sub
mov
aaa
or
loopne
push
out
add
mov
or
mov
bound
sub
and
add
fmull
repz
in
shl
outsl
mov
je
lret
fcoms
insb
bound
push
repnz
sub
mov
test
sbb
test
add
add
loop
sti
movsb
test
scas
movsl
out
pop
pop
mov
arpl
cld
add
lods
mov
or
and
mov
mull
movsb
adc
mov
or
jp
dec
push
pushl
out
out
pop
add
orb
ljmp
cld
dec
jg
mov
pushf
pop
dec
ljmp
sub
cmpsl
push
filds
enter
shl
cmpsl
nop
ds
cmpsl
add
fstl
or
dec
inc
rclb
roll
sahf
xchg
sub
inc
pmaddwd
pop
stc
fisubs
inc
inc
pop
es
test
out
sbb
stos
cmp
test
test
or
or
pop
xchg
push
lcall
inc
movzbl
and
into
xor
add
mov
outsl
or
mov
or
pop
cli
scas
mov
pop
fidivs
cld
add
ljmp
loopne
mov
xor
clc
push
es
and
sti
jp
inc
dec
je
stos
or
mov
cwtl
sbb
outsl
adc
push
in
or
inc
fwait
repnz
call
and
mov
xchg
mov
jmp
mov
mov
das
jns
mov
ljmp
adc
mov
andb
inc
cmp
add
xchg
inc
add
in
and
xor
or
push
outsl
pop
push
push
pop
std
lret
sub
cmp
jg
mov
adc
or
iret
or
inc
in
lahf
loopne
std
xchg
in
add
ret
adc
icebp
repnz
call
xchg
xchg
shl
shrb
stos
cmp
ja
shrb
aam
mov
rcr
push
push
jbe
mov
sub
aaa
ljmp
loop
out
iret
cmp
jns
push
and
push
repz
addr16
mov
cmp
sub
add
outsb
xlat
push
es
fimull
inc
fldl
cmp
mov
fcom
sub
xchg
push
xor
dec
lea
pop
insb
add
lcall
movsl
fsubrs
sahf
fldenv
push
ret
inc
rolb
into
or
ja
sub
sub
daa
mov
mov
gs
adc
mov
pushf
jns
sar
loopne
add
xchg
imul
sbb
lret
pop
aas
dec
cld
sbb
nop
mov
jb
nop
incb
sbb
xor
mov
lods
mov
stc
sub
adcb
inc
jl
xchg
or
add
ljmp
daa
xor
cli
push
jl
dec
push
pusha
push
xchg
stos
pop
lcall
jl
jns
rcll
jns
mov
add
xchg
ss
push
add
jb
test
inc
fs
xlat
inc
xchg
enter
sar
sar
mov
push
pop
flds
rcl
dec
adc
pop
rcrb
fdivrl
pop
push
pushf
pop
add
jnp
xchg
fisubrs
adc
and
xor
jle
jo
mov
test
dec
sub
pop
inc
mov
call
or
icebp
nop
adc
adc
repz
push
sub
cmpsb
and
fucomi
add
pop
push
cmc
pop
popa
into
sub
shlb
test
jg
adc
inc
cmpsb
ffreep
adc
cld
xor
popa
mov
rclb
arpl
sbb
pop
push
mul
mov
dec
mov
push
pop
add
pop
jg
fsubr
test
add
mov
mov
clc
int3
stos
call
mov
xor
pop
xor
pop
mov
jmp
ljmp
sti
movsl
cltd
push
adc
push
ret
fdiv
scas
cmp
ret
xchg
cmp
or
and
xchg
addr16
out
data16
inc
or
jmp
cmp
repz
lock
lcall
pop
cmp
lret
subl
jmp
int3
ret
rcrl
push
addr16
push
rcl
ret
lea
in
mov
xchg
pop
sub
jae
jo
adc
test
loopne
arpl
dec
out
push
fldenv
ja
add
pop
mov
pop
dec
ljmp
add
fs
xchg
xor
cmp
pop
push
inc
scas
stos
adc
mov
push
xchg
inc
cmc
das
loopne
data16
ss
loope
mov
xor
mov
mov
jl
aas
mov
stos
pop
sub
xor
mov
lcall
stc
push
mov
inc
movsl
adc
popl
fidivrl
push
fcomi
inc
dec
mov
mov
int
dec
sahf
cmp
bound
movl
test
sti
out
ljmp
lret
ret
stos
inc
xchg
mov
mov
jge
mov
ds
xor
xor
inc
inc
mov
add
outsl
sub
test
dec
pop
call
iret
outsb
xor
mov
outsb
aam
inc
pop
inc
sarl
stos
xchg
outsl
inc
sbb
xor
push
lret
xor
icebp
ret
xor
pop
mov
mov
ret
push
mov
cs
pushf
fcmovnb
add
int
and
in
loopne
inc
mov
mov
je
inc
movsb
shlb
xchg
mov
outsb
cld
mov
sbb
sbb
lahf
imul
push
push
addr16
inc
icebp
lea
clc
ja
int3
push
jmp
sbb
mov
sub
dec
test
cmp
ret
mov
pusha
lea
mov
jbe
and
dec
adc
add
cmp
push
cmp
xor
inc
pop
xchg
std
repnz
ja
xchg
fbld
push
push
outsl
pop
add
lds
testb
add
dec
lea
xchg
add
jmp
pushf
and
clc
rorb
push
mov
sbb
data16
ret
insl
lods
jmp
mov
jne
xchg
insb
xchg
fcompl
nop
adcb
js
cmp
pop
or
outsb
push
mov
out
or
les
cwtl
iret
aas
adc
rorb
and
xor
jbe
cmp
dec
mov
pop
loop
jg
cmp
roll
jl
les
mov
mov
sub
loop
mov
test
cli
ljmp
arpl
std
sub
add
push
push
jnp
mov
mov
or
lds
les
push
mov
jo
add
adc
clc
jg
ret
lahf
inc
add
ret
sbb
and
mov
jae
sbb
xchg
mov
xchg
cmp
jecxz
dec
dec
mov
and
mov
ret
xchg
and
dec
push
and
jecxz
jo
call
gs
mov
inc
cmc
cmp
pop
mov
sbb
nop
pop
les
stc
xor
mul
xor
call
push
dec
dec
add
adc
fwait
daa
movsb
jmp
cld
das
mov
js
sub
add
call
aam
sbb
mov
arpl
loopne
inc
sub
adc
cmp
shrl
mov
rclb
jno
movsl
push
movsl
mov
enter
pop
loopne
decl
sbb
inc
dec
or
sbb
pop
in
les
jg
or
mov
cmp
in
cltd
sti
daa
in
inc
das
movsl
shlb
add
mov
inc
inc
dec
and
pusha
fsubrp
pushl
addl
push
addr16
xor
loope
push
mov
push
movsb
push
not
pop
pop
sub
into
sbbl
orb
xor
incl
add
push
cmp
push
push
push
mov
add
xchg
sub
repz
or
add
fsubrs
or
push
jmp
xor
ja
push
or
fdivrs
xor
push
hlt
cmp
in
out
sti
sub
lock
out
push
aaa
stos
add
and
dec
fisttpl
xchg
arpl
in
cmp
mov
push
int
hlt
jnp
jne
fs
sbb
fdivl
dec
jo
add
sbb
enter
or
mov
sbb
push
pop
pop
or
adc
mov
cli
rorb
cmpb
fsubs
test
testb
out
loop
cmc
ret
jg
sbb
pop
fsubp
sbb
sub
jge
subb
sahf
adc
in
or
bound
in
sub
push
sub
push
les
mov
xchg
add
andl
mov
pop
aad
cmp
and
add
inc
push
lcall
sbb
testb
dec
and
addl
adc
fadds
xchg
adc
adc
jmp
stos
insl
xchg
lock
aas
mov
dec
add
je
jle
bound
loopne
divl
call
dec
cmpsl
loopne
gs
inc
jecxz
pop
cld
decl
dec
pop
mov
mov
pop
or
xchg
js
lods
outsb
movsb
cmp
outsl
or
dec
sub
adc
or
cmp
mov
stos
jns
sub
outsl
stos
ficoms
jg
add
je,pt
pop
cmpb
pop
adcb
sahf
mov
mov
aaa
mov
cmp
jecxz
cmp
fbstp
shrl
lahf
and
jbe
imul
sub
test
ja
div
cltd
xchg
push
pop
lds
sbb
jmp
add
or
sbb
in
clc
or
inc
xor
repz
nop
jecxz
and
insl
sarb
pop
mov
mov
aad
js
test
lret
or
or
dec
xor
jl
fwait
mov
mov
ret
out
and
loopne
stc
add
mov
pop
jl
and
pop
sbb
dec
outsb
mov
dec
out
mov
xchg
jle
xchg
insl
cmp
cmc
sbb
ds
ljmp
cli
push
or
sub
movsl
lea
rcrb
add
aaa
idiv
cmp
inc
inc
cmpsl
push
jb
sbb
xchg
dec
jge
push
test
jno
cmc
sub
shlb
mov
lret
mov
sub
add
xchg
jnp
imul
mov
into
leave
xor
inc
clc
inc
rcrb
pushl
or
dec
jns
ret
rclb
fstl
cmc
pop
aam
insl
or
pop
lcall
test
jo
inc
rcrb
gs
mov
int3
icebp
sub
sar
cld
jne
nop
mov
add
in
sbb
push
shlb
pop
stos
fwait
jmp
ds
xchg
cmpsl
push
dec
out
sub
rcll
es
xchg
out
sbb
inc
imul
and
jb
scas
jcxz
es
pop
clc
cli
mov
xor
outsb
sbb
jg
inc
add
aas
stos
daa
ret
popf
rolb
test
cmp
mov
in
mov
sbb
push
fsubs
call
fidivrs
fildl
mov
cmpsb
or
lret
push
fldl
das
fmul
jg
and
fnsave
dec
jae
and
mov
dec
mov
jecxz
xchg
sbb
mov
jnp
pop
and
aaa
jle
cwtl
adc
aam
popa
and
jle
sbb
add
xchg
xorl
cli
fists
stos
repz
jnp
push
jne
mov
push
shll
push
push
adc
in
incl
daa
repz
xor
shll
jno
pop
rol
dec
outsl
jno
adc
adc
dec
jo
push
mov
movsl
mov
insl
ret
jge
jne
push
test
sub
fsubs
clc
add
arpl
jl
loop
pop
imul
inc
or
fistps
jl
mov
jbe
jb
adcb
dec
outsl
lods
dec
or
xlat
jo
jmp
mov
jmp
pop
inc
push
fcompl
xchg
mov
lret
repnz
lock
std
lods
cmc
xchg
cmp
aad
push
jg
mov
scas
in
test
inc
dec
and
enter
popa
loope
and
arpl
mov
mov
dec
lret
dec
daa
inc
dec
push
incb
lods
rclb
incl
fldcw
lea
test
ja
pop
mov
lahf
or
mov
push
ret
mov
inc
sbb
jmp
aaa
outsb
xchg
ljmp
xchg
mov
pop
pushf
cmp
inc
es
xchg
xor
movsl
fdivrp
push
cli
cwtl
daa
ljmp
leave
jg
xchg
push
movsb
pop
rcr
in
mov
and
lret
sub
sti
insl
jnp
ss
cmp
lds
aad
pop
mov
inc
or
dec
ffree
sub
adc
call
shll
xchg
hlt
inc
xor
decb
out
push
cld
push
in
fwait
clc
fisubrs
aad
inc
divb
lcall
call
ret
pop
aaa
je
inc
pop
push
iret
push
or
nop
adc
pop
fs
ss
dec
or
xchg
push
icebp
cmpsb
push
adc
ret
sub
jbe,pt
stos
sbb
jmp
icebp
sbb
loope
cmp
xchg
pop
fsubrs
aaa
mov
cmpsb
push
in
fdiv
pop
arpl
out
xchg
lcall
add
dec
ret
paddb
fucomip
test
or
mov
xor
pusha
icebp
mov
pop
ljmp
inc
cs
cmp
mov
incl
adc
lret
add
inc
notl
pop
pop
ljmp
outsl
jae
jecxz
xchg
ds
mov
add
push
jecxz
mov
jg
aad
nop
cmp
jo
push
xor
inc
decb
fidivl
sbb
mulb
adc
adc
dec
xlat
cmpsl
pop
push
movsb
popa
pop
daa
add
jo
sbb
mov
cmp
xchg
ret
or
mov
adc
sti
insl
xchg
inc
cmp
and
enter
jne
fistpll
ret
aad
push
pop
scas
adc
pusha
outsl
cmp
jmp
mov
in
mov
out
push
icebp
outsb
ja
nop
sbb
mov
mov
movsb
hlt
test
pop
xchg
movsb
pop
sub
inc
mov
test
or
clc
inc
loopne
lcall
jae
and
inc
mov
bound
sub
rolb
fisubrs
shrb
mov
icebp
in
fcmovb
jno
push
insl
xchg
pop
iret
incb
out
pop
enter
in
ret
sbb
mov
mov
into
inc
cmp
scas
gs
loope
cmc
add
es
fildll
shll
stc
mov
push
add
adc
hlt
outsl
mov
xchg
out
data16
stos
jle
or
sbb
add
or
or
mov
scas
mov
pop
sbb
xchg
xor
mov
pop
mov
dec
xchg
call
pop
aaa
out
movsb
xor
mov
stos
or
movb
loopne
test
decl
daa
hlt
jle
out
or
dec
je
ss
outsl
push
mov
xor
inc
mov
sbb
lahf
jl
mov
jle
or
scas
hlt
push
fldl
inc
int3
jae
push
mov
ljmp
scas
inc
ljmp
insb
stos
jg
lods
mov
lds
jo
shll
jp
call
jecxz
xchg
out
flds
cmpsl
popa
sbb
repnz
and
or
push
fwait
sti
decl
icebp
sbb
lock
add
es
sub
dec
and
push
sbb
xchg
or
mov
jno
dec
adc
mov
add
mov
clc
popa
jb
popw
pop
std
mull
iret
insb
mov
std
or
lds
jmp
mov
sub
int
das
or
sbb
or
mov
or
in
out
jg
adc
inc
clc
sbbl
rcll
adc
mov
xor
sbb
inc
ret
arpl
or
jle
push
or
mov
xor
popf
cmpsb
sub
xchg
outsb
inc
fsubr
push
mov
ja
add
sbb
roll
lds
int3
pop
jp
or
es
or
je
stos
cli
adc
add
bound
fildll
add
push
cmc
xchg
inc
in
test
push
and
roll
cltd
shrb
jmp
pop
popf
xchg
mov
xchg
fildl
sbb
push
daa
add
call
pop
inc
stos
pop
inc
lahf
std
sbb
and
mov
shlb
sub
or
add
inc
mov
and
ret
pop
jns
xchg
adc
mov
ret
ljmp
inc
cwtl
out
mov
add
pop
into
das
imul
clc
gs
push
mov
xchg
sub
jo
arpl
mov
or
sub
int3
inc
jl
pop
sbb
xchg
ret
sbb
fxch
cwtl
add
or
sub
inc
sub
mov
rcrl
das
push
roll
push
xchg
sti
ret
sbb
add
rclb
ret
lahf
add
mov
cmp
subb
in
mov
shrl
adc
ljmp
shl
xchg
dec
xchg
xchg
and
aaa
add
mov
inc
insb
adc
out
lret
pop
xor
insl
xchg
add
adc
iret
out
lcall
pop
fs
cmp
rorl
roll
std
sbb
test
mov
xchg
sub
cwtl
mov
bound
mov
xor
js
mov
fsubs
adc
nop
loope
jne
andl
outsl
push
mul
aaa
stos
aad
and
testl
xchg
jnp
outsb
mov
mov
lret
inc
sarb
je
dec
jo
sar
or
inc
fwait
pushf
cmp
mov
mov
jbe
pop
xor
xorl
or
lret
or
mov
cltd
sahf
lds
ljmp
and
xor
cmp
cltd
adc
push
das
in
mov
sbb
ja
into
push
jo
mov
mov
or
cmp
int3
test
pusha
ret
inc
pop
xchg
pop
and
popf
into
mov
shrl
fstl
insb
imul
and
mov
lods
sbb
cmpl
mov
xchg
dec
je
mov
in
iret
push
out
xor
ljmp
mov
cli
pop
and
adc
lret
mov
insl
sub
mov
adc
push
mov
addb
cmp
cmpsb
pushfw
mov
cmp
adc
jbe
orl
movb
adc
inc
sbb
dec
ja
cmp
ret
pop
leave
sbb
mov
jbe
sub
mov
push
add
ljmp
fucomip
fidivs
call
and
ror
popa
jae
mov
push
mov
push
cmp
or
iret
xor
sbb
fidivl
and
mov
adc
push
fbstp
das
fwait
rcrb
std
aas
jecxz
orl
cmpsb
xchg
ja
mov
jae
adc
cmpsb
cwtl
icebp
popf
cmp
add
mov
xchg
sbb
outsb
jmp
add
xor
imul
cmp
mov
cmp
rol
mov
adc
jle
outsl
pop
sbb
loopne
cmp
mov
sbb
pop
clc
mov
sbb
xchg
pop
jb
movsl
cs
pop
jo
pop
repnz
push
data16
xchg
pop
rol
jno
scas
jae
addl
mov
insb
and
mov
xchg
jp
lods
push
pop
movsl
jge
jg
xor
test
cwtl
addr16
incl
inc
subl
into
mov
ljmp
sub
jns
in
ds
xchg
loope
shrb
mov
incl
dec
or
and
add
push
rolb
pop
cmp
bound
or
mov
jecxz
sahf
ljmp
or
inc
xchg
xlat
ds
hlt
lret
aad
mov
mov
mov
and
add
inc
cld
outsb
test
sub
je
and
add
or
push
sbb
push
jle
pop
mov
ret
movsl
dec
mov
pop
jl
mov
ljmp
pop
je
mov
push
or
loope
xor
inc
insb
das
xor
add
dec
aam
mov
pop
push
mov
xchg
sub
js
loop
mov
std
cmp
mov
xor
aas
cltd
mov
je
push
sbb
cli
lea
adc
add
mov
hlt
sbb
jnp
xchg
cmp
aad
xchg
mov
add
repz
jns
mov
fidivs
aam
inc
xor
fisttps
loopne
arpl
mov
cli
sbb
jb
sar
mov
xor
test
daa
mov
inc
mull
cli
push
cli
and
xchg
movsl
divb
test
cmp
pop
cltd
lock
mov
add
in
or
aaa
enter
call
sti
xchg
cmp
and
xor
push
loop
mov
imul
adc
push
and
mov
jmp
lcall
jnp
dec
sub
push
jnp
adcl
adc
push
sub
ss
ds
add
push
jle
ss
fisubrs
xor
cs
cwtl
pop
ljmp
xor
pop
std
in
jb
fisubrl
fiadds
push
sub
inc
xor
mov
sub
test
les
cmp
bound
xchg
popf
inc
or
or
mov
jp
insb
sub
cmpl
or
jg
pop
sti
mov
dec
js
sub
andl
fmull
inc
mov
dec
inc
lcall
fisttps
inc
lods
jmp
pushl
pop
aaa
xchg
push
pop
pop
cmp
pop
in
mov
jecxz
sarb
mov
ljmp
sarb
push
es
mov
loop
andl
in
shl
sbb
fmull
call
popf
fbstp
fdivr
sbbb
adc
inc
hlt
push
fildl
sub
or
cwtl
push
dec
sub
clc
jnp
movl
loope
scas
push
jl
neg
inc
ja
and
fadds
out
insl
pop
pop
ja
repz
dec
mov
cmpsb
fildll
stos
xchg
inc
dec
ja
lahf
add
ret
in
pop
loopne
pusha
callw
call
int
ljmp
jge
orb
cmp
leave
mov
jge
rcr
cs
mov
adc
inc
fwait
popa
sub
pop
mov
rol
mov
out
dec
pop
mov
adc
push
jg
xchg
sbb
mov
dec
mov
test
adc
std
adc
cmp
jg
lods
inc
push
push
cmpsb
clc
insl
out
insl
mov
fistps
or
inc
mov
cld
les
xor
insl
pop
in
inc
jnp
pop
xchg
outsb
inc
cmp
mov
outsl
sbb
push
jp
pop
fdivr
nop
gs
gs
xlat
mov
pop
jnp
mov
mov
and
test
loope
fldt
cmp
and
aaa
mov
push
sub
js,pt
subl
ret
aam
or
loope
sahf
and
pop
test
je
adc
and
lock
mov
add
pop
pop
dec
psubw
subl
mov
mov
inc
das
fldt
sbb
sbb
pop
fldcw
aam
int
jl
jle
bound
xor
sub
adc
inc
xchg
mov
movsb
dec
jb
js
subl
int
pop
inc
add
lret
push
popf
pop
aas
push
adc
jbe
add
roll
xlat
data16
and
call
mov
jno
xor
cmp
nop
jle
std
mov
enter
daa
repz
cmp
add
lock
mov
sub
sbb
add
xchg
call
pop
outsl
mov
adc
or
movb
push
mov
mov
dec
push
rclb
sti
int
or
xlat
popa
fcomps
jno
add
and
mov
das
rcr
mov
andb
shlb
mov
divb
mov
rorb
ficompl
pushl
mov
push
mov
and
pop
int
jmp
push
jg
call
adc
add
lods
leave
xchg
orl
sbb
rorl
xchg
ret
mov
stos
loope
mov
mov
sub
xchg
andl
jle
aam
das
es
pop
popa
sub
sub
dec
je
sub
mov
lcall
dec
cmpsl
nopl
push
mov
dec
or
xchg
mov
cmp
cld
outsb
cmp
shl
mov
mov
std
decl
adc
sbb
mov
outsl
dec
scas
ljmp
sbb
inc
pop
sti
jge
cmpsb
mov
ljmp
xor
lods
sub
lods
out
or
int3
sbb
cmp
and
cltd
dec
jg
jecxz
inc
cmpsb
and
cmp
lds
or
imul
mov
pop
mov
bound
push
mov
mov
cmpsb
inc
sbb
in
aad
in
sbb
decb
inc
popw
les
sbb
shl
inc
incl
xor
adc
loop
stos
jecxz
std
push
mov
and
mov
daa
call
jmp
xor
xchg
inc
movsb
adc
cld
push
daa
cmp
ret
add
je
xor
sub
mov
lret
mov
xchg
jg
test
mulb
jae
pop
sub
sbb
movb
and
and
movsl
dec
and
cwtl
dec
adc
or
xorb
mov
arpl
clc
pop
es
pop
fsubl
sub
lock
sbb
iret
sti
stos
loop
add
or
pop
push
jne
imul
cwtl
sub
jmp
jo
fwait
cmp
aad
aam
mov
mov
lock
add
sub
add
sti
dec
aad
iret
xlat
and
cmp
push
or
js
rorl
sbbb
pop
fistpll
shlb
adcb
out
or
not
popl
out
and
and
negb
clc
dec
push
hlt
or
inc
jne
add
outsl
and
adc
sbbb
out
dec
or
mov
jg
xor
xor
test
sbb
arpl
scas
movsb
push
icebp
aaa
jo
call
mov
jp
jb
daa
icebp
jmp
jg
movsl
mov
push
lock
aam
test
rorb
add
push
add
lret
jl
xor
add
dec
mov
testb
sub
push
daa
mov
xlat
aad
iret
and
test
mov
xor
out
fs
arpl
sbb
pop
mov
or
aam
movsl
iret
inc
inc
push
loopne
add
pop
ficompl
stos
xchg
adc
insl
xorb
decl
xchg
add
mov
xchg
adc
fcoms
lea
push
pop
inc
ss
jle
adc
mov
lcall
imul
mov
jbe
and
dec
fbld
push
jecxz
mov
jg
sarb
ffreep
push
in
inc
jbe
ret
pop
addr16
and
cli
xchg
xor
mov
lcall
add
mov
testb
sub
mov
loopne
icebp
pop
addl
imul
add
aad
shrl
push
int
addl
dec
lcall
or
and
sub
popa
mov
push
xchg
ljmp
adc
inc
lret
jb
hlt
and
add
rorb
pop
dec
inc
orb
inc
adc
test
cld
in
xor
sub
dec
pop
jne
push
loope
sbb
lret
fmull
xchg
sti
sbb
cmp
repnz
sub
mov
outsb
push
std
lea
insb
mov
pop
xor
push
inc
test
mov
inc
sub
add
add
lahf
std
mov
fildll
adc
fimuls
add
pop
mov
lock
in
add
xchg
pop
push
add
inc
adc
out
aam
add
and
sub
sub
mov
popa
mov
pop
adc
pop
mov
inc
xchg
shrb
arpl
lock
xor
dec
xor
push
mov
test
pavgb
jns
and
cmp
jmp
xchg
pop
inc
pushf
dec
out
insb
shrl
hlt
in
push
xor
push
inc
jb
nop
mov
aas
fsubl
in
xchg
and
jge
jmp
adc
mov
out
inc
adc
punpckldq
inc
mov
nop
add
jne
aad
and
movsww
int3
mov
add
mov
sub
sbb
add
adc
add
xchg
sbb
or
inc
dec
in
xor
sti
js
xorb
jmp
mov
push
adc
repnz
data16
and
or
repz
sub
popa
inc
xchg
xchg
fdivr
or
inc
dec
add
jg
andl
jbe
dec
and
add
mov
xor
pop
mov
xchg
and
ds
inc
psubb
jnp
push
push
mov
mov
addl
jle
pop
cmc
push
or
jo
insb
adc
sbb
push
mov
mov
insb
fdivs
ficoms
or
xchg
push
push
add
cmpb
pop
push
sub
adc
push
arpl
adc
mov
sbb
mov
add
xchg
pop
jge
push
pop
dec
std
sub
add
sti
call
pop
push
shl
inc
in
dec
aaa
add
or
or
mov
shrb
dec
adc
ljmp
popa
shlb
fmuls
insb
sar
aad
jge
fld
and
cltd
mov
xchg
xor
pop
fwait
sbb
push
and
orb
pop
push
popa
adc
or
push
dec
in
add
ss
jge
subb
push
in
sbb
outsl
iret
push
ret
jae
mov
mov
je
fdivrs
pop
pop
cli
inc
cltd
mov
cmpsb
in
ss
sub
push
xchg
jl
insl
clc
push
imul
mov
xchg
shrb
mov
in
pop
sar
xor
pop
sub
sbbl
incl
repz
je
mov
rcr
je
ss
adcb
mov
mov
cltd
push
lahf
adc
ljmp
lds
push
or
outsl
fucomip
push
pop
xchg
sub
arpl
sbb
sub
stc
sbb
and
dec
out
pop
loop
arpl
scas
cmc
dec
pop
aaa
mov
or
jae
incb
mov
mov
mov
int
addr16
cmc
mov
and
shlb
in
cltd
icebp
and
dec
mov
adc
add
lret
loope
cmpsb
lret
and
loop
je
dec
push
push
orl
std
aaa
in
cmp
std
add
push
push
ljmp
jge
cld
mov
push
and
sbb
sub
shrl
push
and
lods
fwait
or
imul
push
mov
outsb
lret
cmpsb
in
invlpg
lcall
js
fstpl
push
je
fbstp
cmp
loopne
inc
dec
pop
clc
or
roll
lds
push
das
add
push
cmp
adc
pop
orb
arpl
mov
add
inc
stos
lock
cld
and
sahf
movl
dec
into
add
fistps
add
shlb
shrb
xor
mov
push
xor
xor
push
mov
call
testb
xor
mov
loopne
in
dec
and
popa
stos
xchg
dec
orb
sub
out
jle
scas
mov
cld
daa
or
xor
pusha
and
test
sbb
bound
push
mov
push
mov
js
dec
inc
call
jp
mov
sub
dec
stos
fisubs
sub
add
adc
fstps
test
cmp
loope
pop
or
cli
outsl
lock
add
push
inc
in
xor
push
or
xor
ja
and
xchg
inc
test
mov
push
sbb
ljmp
inc
nop
cmp
rorb
push
lds
ret
lea
sub
add
negb
mov
scas
pop
cs
sub
sbb
jbe
shlb
gs
ljmp
cmpsl
rorb
and
xor
sub
or
clc
sbb
sub
shrb
adc
sub
adc
ja
inc
adcb
ja
add
push
aas
push
outsb
push
fwait
adc
inc
out
mov
or
rcll
pop
subl
inc
adc
mov
hlt
pop
adc
jmp
and
jle
pmulhuw
dec
inc
push
ds
sbb
adc
sbb
aaa
stos
xor
pop
add
pop
add
mov
or
cltd
imul
xor
push
xchg
add
push
call
pushf
sbb
test
add
mov
loop
dec
adc
arpl
pop
xchg
push
insl
adc
mov
inc
insb
cmpsb
push
add
or
pop
or
cmp
lcall
pop
sub
and
dec
call
dec
mov
mov
or
shll
sub
fcoms
push
and
jae
mov
mov
ret
call
addb
sub
add
push
gs
push
shll
out
mov
aaa
jne
bound
push
clc
loope
sbb
rcll
popa
mov
daa
and
sbbb
lea
outsb
fistps
jp
push
xchg
aaa
xor
repnz
loop
dec
push
mov
in
sbb
jmp
mov
inc
pop
loope
jecxz
jb
and
test
pop
jecxz
cmp
insb
aaa
add
push
lea
adc
push
adc
bound
fadds
mov
add
adc
inc
or
xor
fs
fsubr
mov
xor
rcrl
mov
or
jecxz
movsl
aaa
xor
shlb
mov
lock
add
inc
js
in
inc
push
xor
xchg
push
dec
adc
mov
xor
sbb
loope
xor
lahf
in
lods
fisubrl
in
mov
inc
sub
lock
inc
in
jnp
jae
add
mov
push
pusha
clc
jbe
inc
jno
add
leave
test
xchg
push
daa
inc
enter
ret
push
rorl
jb
aas
jg
jle
aaa
loop
and
dec
inc
mov
das
test
adc
and
jecxz
xor
inc
add
fmuls
fwait
inc
gs
mov
std
movsb
or
jmp
adc
jne
outsl
rcll
lret
lcall
jp
lret
add
dec
movsl
out
shll
dec
or
dec
ret
cltd
add
mov
xor
or
repz
outsb
je
jg
scas
sbb
lret
or
loopne
sub
cmp
mov
addr16
pop
leave
inc
mov
dec
xchg
fsubs
lds
shrl
dec
sar
add
xchg
je
jo
repz
hlt
fiadds
mov
stos
adc
outsb
test
push
repnz
push
jno
push
inc
femms
pop
mull
fdivp
cwtl
dec
inc
adc
call
push
mov
dec
sub
add
push
cmp
sbb
or
dec
pop
out
jo
lds
add
js
es
rolb
xchg
bound
rcrl
arpl
cmp
add
pop
lret
scas
cmp
add
scas
mov
and
sub
mov
pop
jl
stc
sub
xor
movsb
jp
add
loopne
add
add
test
pop
push
fcomip
add
xor
cltd
dec
cmpsl
pop
aaa
sbb
add
or
jo
lcall
and
pushf
sub
and
or
nop
cvtps2pd
cmp
lret
clc
das
xorl
lret
in
add
add
jne
mov
ficoms
pop
rep
nop
addr16
aaa
fsubl
sub
fbld
shll
test
aad
jp
fs
insb
or
or
cmp
cli
lock
mov
cld
push
mov
aam
in
pop
adc
ja
mov
add
in
mov
ja
pop
ffree
xor
lock
push
sbb
pusha
sbb
pushf
popf
outsl
in
out
repnz
arpl
cld
push
dec
mov
fistpl
dec
outsb
test
ljmp
icebp
jbe
negl
pop
adc
inc
adc
sub
add
inc
xchg
jo
jnp
and
inc
push
push
inc
shrb
test
cmp
int3
xchg
js
cmp
inc
mov
repnz
or
andl
mov
xor
and
dec
gs
testl
and
mov
and
aad
add
inc
pop
pop
lcall
ds
out
xchg
xchg
notl
sbb
stc
fildll
jnp
shr
ss
arpl
or
call
loopne
adc
or
scas
sbb
dec
cld
out
and
mov
ret
incl
and
sbb
jmp
test
jae
dec
lret
jp
popa
and
hlt
sub
mov
icebp
or
in
into
sbb
cmpsl
mov
push
mov
adc
testl
inc
out
add
mov
push
orps
mov
cmp
push
push
adc
adc
mov
xorl
outsl
xor
cmp
push
mov
test
int
sbb
fistl
sti
jae
or
and
test
pop
push
lcall
rorl
frstor
dec
adc
sbb
lcall
rcrb
jmp
xchg
pushf
jnp
sbb
and
cwtl
mov
xchg
cwtl
lock
cmp
jbe
dec
idivb
movsb
fstps
into
dec
pop
push
push
xchg
data16
shl
xchg
and
mov
cltd
push
repnz
sub
sub
jmp
ss
add
aaa
loope
or
mov
dec
jl
mov
add
test
mov
xchg
sub
sbb
jg
lret
pusha
xlat
inc
mov
cmp
sarl
dec
dec
loopne
push
inc
negl
movsb
ret
xorb
enter
xchg
popf
inc
adc
adc
pop
insb
mov
or
mov
pop
shlb
into
xchg
push
dec
scas
loopne
mov
xorb
leave
add
pop
sub
sub
sbbl
jmp
rcrl
inc
xchg
pop
lret
mov
loop
scas
leave
or
stos
push
fcoms
push
ja
and
rolb
js
les
xchg
adc
outsl
adc
fstl
jnp
adc
sub
repnz
cltd
jmp
sbb
daa
call
inc
push
sbbb
je
jnp
mov
mov
push
sti
andl
sbb
insb
imul
cmp
cmp
push
jne
jle
loope
mov
ds
adc
mov
xlat
testb
sbb
adc
add
mov
mov
pushf
dec
mov
xor
rclb
sar
fwait
or
outsb
jns
movsl
sti
or
and
pop
outsb
pop
test
adcb
cmpsb
sbb
ja
xor
xor
mov
dec
insl
mov
pushf
filds
adc
adc
sbb
faddl
ds
insl
xchg
add
pop
mov
mov
ret
popf
lods
dec
adc
inc
push
int3
mov
insb
ret
push
add
mov
mov
mov
cltd
or
add
cld
mov
push
pusha
jae
filds
je
inc
add
popa
add
push
sbb
cwtl
cld
bound
mov
fsubs
rcr
cmp
adc
add
ja
lods
cmp
into
jp
or
add
cli
jnp
push
sbb
and
das
ljmp
inc
and
in
cld
push
cmp
jne
sahf
inc
daa
rcrb
push
in
leave
add
jns
adc
mov
add
ljmp
mov
lahf
es
inc
jnp
and
adc
jns
outsb
add
mov
push
pop
adc
sub
incl
movsl
push
add
add
xchg
jp
cld
popf
bound
dec
and
cltd
repz
xchg
pop
push
add
cli
stos
or
mov
and
pop
adc
cmp
add
loop
in
pop
dec
mov
ja,pn
incl
loope
and
cwtl
test
adc
xchg
and
aam
dec
inc
cmp
cmp
jno
js
sbb
arpl
xor
mov
push
scas
pushf
mov
pop
int
sub
es
aam
je
add
test
push
add
push
ud1
inc
jmp
push
or
mov
or
call
jl
mov
and
add
imulb
cltd
shrb
fidivs
inc
adc
mov
lods
ss
loopne
push
jne
push
aam
or
xchg
jns
bound
jne
cld
sub
xchg
daa
gs
dec
xor
and
mov
aad
stc
addr16
pop
add
adc
and
jmp
mov
rcrb
test
mov
and
sbbb
mov
mov
mov
pop
mov
and
dec
stos
mov
clc
or
inc
and
pop
sbb
push
lods
lods
in
cmpb
cmp
decb
push
sub
mov
jb
jo
in
add
das
mov
in
testb
dec
fwait
mov
or
adc
pop
mov
xchg
add
cmpsb
movsl
adc
out
mov
stc
fsubrl
outsb
mov
adc
lea
jmp
add
movsb
dec
inc
cmpb
ds
mov
sti
add
imul
lret
ror
jbe
test
dec
les
pushl
sbb
cli
lods
js
or
mov
loope
subl
decl
sbb
push
popa
mov
and
leave
pop
push
out
outsl
ret
push
lret
push
lret
and
lds
clc
mov
jnp
leave
mov
sub
jbe
adc
dec
ja
outsl
xor
push
imul
mov
je
rep
adc
lret
stc
inc
rolb
pop
jg
mov
cmp
jno
in
sbb
ja
mov
fcmovu
ss
add
je
mov
stc
add
mov
lock
out
scas
jbe
push
mov
pushl
aam
cmpb
add
sbb
cld
adc
pop
gs
outsl
mov
dec
pop
idivb
jp
iret
push
dec
rcrb
rorb
out
hlt
adc
sbb
mov
jae
fmul
push
push
call
inc
test
sub
jmp
push
add
push
dec
test
call
into
or
xor
gs
mov
aad
movsl
call
inc
mov
fs
filds
jl
fwait
mov
cmp
loope
inc
mov
hlt
pop
icebp
inc
mov
jg
mov
lock
call
mov
sub
pop
adc
pop
mov
out
pop
ja
pop
stos
add
dec
adc
and
test
mov
pop
adc
jecxz
and
movsl
push
pushl
mov
cmp
mov
cmpl
lock
inc
je
icebp
adc
inc
push
sub
clc
add
lea
cmp
dec
cmc
pop
lods
pop
sarl
cmp
pop
mov
and
insl
or
mov
mov
popa
ret
div
xchg
subl
ret
out
test
nop
add
jo
inc
inc
jg
push
xchg
and
sbb
add
mov
negb
mov
add
in
inc
xor
and
push
insl
out
mov
sbb
pop
pop
les
popa
sar
fmulp
dec
mov
rcrl
pop
inc
std
into
lret
shrb
push
jl
mov
pop
sub
int
xchg
cmp
into
jp
adc
sub
push
xchg
mov
xor
push
arpl
fs
mov
cwtl
fwait
decb
ss
add
mov
or
sbb
sbb
push
sar
pop
hlt
xchg
or
enter
pushf
mov
jno
fdivs
movb
add
push
jo
stos
push
add
mov
jmp
rep
scas
mov
inc
jns
push
sbb
and
aas
add
or
inc
call
loop
add
or
test
hlt
decl
loopne
cld
push
dec
dec
jp
add
movb
ljmp
pop
inc
pop
mov
lahf
add
ret
add
in
decl
in
imul
add
outsb
dec
pop
inc
ja
cltd
mov
shrb
sbb
push
imul
mov
idiv
lods
test
aad
sbb
xor
add
pushf
nop
cmp
mov
pop
call
or
and
dec
loopne
pop
clc
push
pop
test
js
sub
dec
nop
mov
ret
mov
cli
aad
jae
fcomps
and
push
shr
outsl
and
jp
leave
or
fs
cmp
mov
adc
mov
push
cmpsb
xor
es
sbbl
mov
fnstsw
add
test
pop
incl
xor
arpl
and
incb
kmovw
stos
xchg
jno
outsl
and
mov
mov
sbb
sahf
ficoml
pop
jecxz
jecxz
xor
cli
xor
rorl
jnp
div
xor
push
test
scas
flds
in
cmpsl
mul
dec
mov
add
out
movsl
out
sbb
sub
int3
stos
lock
dec
or
shll
aas
aad
pop
call
loopne
push
cltd
shll
add
cwtl
sbb
ja
and
dec
mov
add
adc
or
push
add
pop
inc
sub
xor
mov
mov
push
pop
inc
mov
or
or
or
sub
adc
adc
das
cld
popl
sbb
jns
adc
sbb
faddl
lret
clc
popf
cmp
inc
rorl
fisubrl
xor
cs
pop
imul
or
push
inc
push
orb
in
jb
sbb
sbb
popa
stos
sbb
mov
mov
and
jbe
pop
jae
push
adc
jg
pop
ss
and
jae
call
cmp
test
pop
push
rorb
clc
sub
std
pop
shrl
jne
push
push
insl
sti
testl
testb
add
addb
mov
fst
cmp
and
dec
imul
ljmp
imul
aaa
idivb
ds
mov
or
sub
sbb
and
mov
rorb
stos
and
shll
jo
cmpsl
xchg
add
pushf
cmc
mov
xchg
shl
dec
rclb
or
mov
pop
ljmp
sar
aas
insl
divl
cwtl
scas
std
cmpb
lods
stc
stos
testl
sbb
incl
cld
push
sbb
lods
mov
mov
adc
or
cmp
mov
jl
mov
mov
push
ret
jmp
dec
jmp
jecxz
aas
push
jno
mov
les
movsl
push
je
mov
imulb
fimull
xchg
jl
and
rcll
sbb
loopne
xchg
mov
movsl
mov
aaa
fidivrs
std
movl
mov
out
fiaddl
push
push
mov
and
mov
and
xor
xor
lds
push
mov
mov
jb
jle
cld
out
ss
and
out
sub
mov
das
fcom
sub
adc
jo
mov
enter
cmp
pop
icebp
loope
fs
mov
int
inc
add
inc
cs
test
popa
adc
jecxz
and
push
or
jae
in
sub
inc
daa
js
add
adc
outsl
insb
fdivrl
cmpb
rolb
imul
clc
jbe
dec
roll
push
loop
inc
mov
or
jb
adc
dec
mov
mov
enter
jmp
xor
adc
cltd
push
mov
inc
mov
imul
cld
das
lock
mov
cltd
pop
xchg
stos
in
or
xchg
mov
testb
addl
xchg
sbb
push
cld
loope
pop
and
cmpsl
fiadds
ja
aam
pusha
insb
mov
dec
ds
or
inc
mov
xchg
pop
push
jle
dec
jle
call
in
adc
test
xchg
lea
gs
in
add
cmp
sub
xchg
jmp
pusha
mov
out
pop
inc
pop
xor
jne
xchg
dec
movsb
sub
clc
aad
jmp
push
cmp
flds
and
dec
loope
das
icebp
inc
les
mov
sbb
jmp
or
jbe
rorb
or
adc
repz
add
dec
stos
adc
and
scas
push
data16
or
push
inc
inc
aaa
mov
cmpb
std
inc
mov
mov
adc
mov
jg
cmp
mov
add
pop
jp
xor
shll
pop
aam
push
dec
or
inc
or
sub
out
inc
xchg
fistpl
mov
hlt
xadd
inc
sub
adc
mov
xorb
lea
xor
sub
rolb
fprem1
or
cmp
mov
mov
mov
push
fnstcw
shll
mov
cli
mov
inc
pop
sbb
popf
test
in
cmpsl
pop
push
dec
out
pop
mov
or
aad
test
sub
jo
mov
add
pop
inc
jnp
lock
ljmp
loop
aas
std
inc
iret
inc
mov
mov
or
fldcw
sbb
add
pop
push
and
cli
push
adc
push
xchg
mov
hlt
pop
and
loope
add
cwtl
mov
inc
filds
push
mov
adc
dec
and
xchg
arpl
push
imul
mov
popa
jge
mov
fnstcw
xorl
mov
test
jno
sub
adc
mov
mulb
jle
shll
add
incl
mov
bound
push
addr16
movsl
adc
and
call
adc
inc
outsl
mov
inc
imul
push
jae
cs
or
lahf
adc
cmp
clc
aaa
pop
lahf
ljmp
mov
stos
pop
or
mov
xchg
js
hlt
and
adc
xor
mov
pop
mov
fcmovbe
xchg
inc
fists
insl
movsl
test
dec
add
hlt
inc
mov
leave
xor
xor
int
and
xchg
and
push
and
leave
pop
adcl
std
lea
fwait
or
es
stc
cs
sub
icebp
jg
inc
daa
into
or
mov
mov
add
jmp
adc
test
test
std
fisttpll
sti
mov
rolw
sub
call
daa
mov
add
and
mov
hlt
xchg
adc
xor
xchg
cli
jp
push
or
in
jns
movsl
mov
mov
incl
jl
cmp
cmp
gs
hlt
add
sub
arpl
adc
pand
notb
sti
cmpsb
sub
jge
icebp
xor
inc
mov
or
xchg
push
flds
in
sbb
fisubs
std
lock
std
test
test
xchg
inc
inc
adc
dec
jle
jg
enter
xchg
or
push
or
add
jp
enter
push
scas
pop
in
mov
clc
jge
xchg
and
clc
sbb
int3
adc
into
mov
loop
adc
test
notl
pop
add
lock
test
push
aas
mov
or
inc
lea
sub
out
adc
xor
jno
adc
jl
test
and
dec
add
fimull
fisubrl
dec
mov
jo
cld
cli
cwtl
fidivl
bound
test
sub
hlt
out
sbb
adc
sub
cmpsl
mov
pop
repz
clc
sub
sti
add
or
fidivrs
mov
and
out
sub
mov
cwtl
shll
repz
mov
stc
xchg
or
sbb
adc
shlb
add
sub
icebp
outsl
clc
jp
sub
int
mov
adc
add
divb
movsb
mov
xor
loope
pop
sti
mov
stos
xor
add
sbb
sti
sarb
imul
adc
cmp
add
clc
in
pop
rcrl
incb
push
aam
cmpb
fmuls
fsubrs
cmp
cltd
sbb
adcb
pop
mov
sub
testl
or
pushf
jl
ja
stos
push
pop
push
or
je
and
addr16
push
aam
loopne
pushf
sbb
in
sbb
push
jb
push
adc
xchg
sti
add
push
cmpl
sbb
adc
and
xchg
jo
inc
adc
int
xor
aaa
add
mov
shr
xchg
or
pop
sub
mov
lock
xor
les
push
and
mov
push
les
mov
pusha
adc
mov
push
movsl
push
adc
sub
aad
shlb
in
add
ss
cli
pop
lock
push
xor
xchg
mov
adc
inc
inc
sbb
sbb
cld
jb
sub
inc
mov
jno
ror
das
sbb
add
fcoml
jle
test
cmpb
jns
add
aam
jmp
bsf
enter
mov
sbb
lock
mov
sti
cmp
stos
push
stos
inc
or
in
nop
pop
adc
stc
push
ds
jne
call
decl
sub
sub
xchg
subl
or
inc
or
dec
xchg
fs
shll
cmp
add
je
or
xlat
lahf
mov
and
mov
mov
clc
push
push
adc
rcrb
xor
pushf
xchg
pop
std
mov
or
sub
pop
or
cmc
sbb
outsl
add
daa
fnstenv
push
xchg
dec
frstor
inc
ret
call
mov
mov
xor
or
cmp
popa
push
inc
rolb
js
pop
dec
adc
aam
mov
inc
jecxz
jae
pop
adc
sti
in
sub
call
lds
and
sar
adc
mov
sqrtps
pop
ds
icebp
ljmp
lock
out
pop
dec
dec
sbb
push
mov
mov
jo
jg
lea
outsb
les
and
inc
add
add
inc
sbb
repnz
add
sbb
std
ljmp
icebp
mov
test
repnz
xor
cmp
int
inc
fisttpl
ljmp
adc
sub
scas
xchg
jno
push
aad
ss
and
das
adc
dec
mov
daa
mov
jg
pop
pop
subb
outsl
ret
sti
icebp
mov
adc
mov
fiaddl
sbbl
and
mov
sbb
ljmp
shrl
sahf
push
jno
add
insl
sbb
icebp
add
or
and
dec
mov
cmc
push
fistpl
movb
xchg
ja
xchg
or
xlat
jg
fldenv
push
add
jb
mov
js
das
adc
jbe
shl
mov
das
ljmp
jnp
adc
mov
add
adc
and
dec
sbb
mov
xchg
movl
jp
sub
lea
dec
and
inc
mov
xchg
push
outsl
push
aam
jmp
push
incb
sbb
inc
movsb
cmp
cmpsb
jbe
call
and
movsb
ljmp
insl
and
pop
add
push
adc
dec
aas
cmp
clc
adc
add
push
ds
mov
lock
cmp
test
mov
clc
cmpsb
cmp
movsb
mov
cld
or
and
aas
mov
out
mov
dec
adc
inc
das
sub
add
nop
fstpt
sub
push
jl
mov
mov
lods
add
or
add
js
pushl
icebp
inc
mov
or
shll
adcl
xchg
or
pop
sbb
aam
mov
mov
lds
outsl
js
mov
and
adc
and
pop
xchg
mov
mov
jbe
pop
jecxz
aam
sbb
jae
xor
arpl
bound
inc
out
cld
sbb
pop
int
in
lret
xchg
lahf
cmp
das
loop
adc
add
jae
mov
mov
shr
sti
je
jp
call
push
aam
xor
out
mov
scas
sbb
inc
das
pop
mov
shll
xchg
and
cwtl
iret
lahf
in
cli
cmp
mov
fstpt
adc
sarb
cld
aaa
mov
mov
sahf
rorl
inc
leave
mov
push
data16
mov
push
fldl
enter
jmp
xchg
enter
adc
lret
xlat
adc
xchg
push
popa
stos
push
mov
add
hlt
pop
adc
div
adc
add
bound
ljmp
addb
mov
daa
xor
lcall
push
aad
sub
ljmp
add
push
xor
addr16
mov
adc
xor
sbb
mov
dec
cmp
add
popa
dec
out
fucom
aaa
add
ljmp
mov
or
dec
pop
bound
mov
cmpsl
pop
enter
jo
das
sbb
mov
xor
scas
enter
add
or
sub
cmp
roll
in
aam
push
loope
mov
xchg
lret
clc
push
pushf
push
mull
mov
and
inc
jbe
adc
pop
out
sub
sbb
enter
je
arpl
aam
sarl
mov
ret
and
xchg
or
icebp
int
jg
pusha
cmpsl
aas
insb
xor
sub
fdivl
btr
mov
pop
mov
dec
adc
test
adc
cmp
sbb
mov
cwtl
mov
add
js
push
test
mov
cltd
push
inc
and
pop
leave
lock
in
or
add
test
cmpsl
or
je
adc
cwtl
dec
cmpl
jg
inc
push
add
in
sub
inc
inc
mov
sbb
jae
pusha
adc
add
int
lds
or
adc
mov
pop
xchg
push
loope
or
shlb
xchg
push
aad
pop
add
es
addb
aad
lret
push
inc
sub
and
decl
test
pop
xchg
push
or
sahf
or
pop
adc
and
or
adc
and
inc
cs
lods
xor
and
push
das
add
daa
cmc
loop
cmpsb
fisttpll
orb
push
je
int3
ja
hlt
daa
gs
repz
in
xor
xor
sbb
xchg
dec
lods
pop
scas
dec
add
dec
sub
xchg
add
loope
mov
les
shr
les
xchg
leave
jae
hlt
xchg
sbb
repnz
or
loopne
js
icebp
js
and
jmp
clc
or
or
xor
test
nop
xchg
sub
cmp
fsubrs
and
dec
andl
and
jno
inc
dec
add
or
xor
jns
jbe
cmc
dec
mov
and
lret
adc
inc
rcrb
addl
jmp
nop
ljmp
push
pop
or
insl
out
inc
cmp
sub
add
and
adc
mov
and
mov
push
mov
daa
xchg
fcoml
ret
jb
leave
scas
add
insb
dec
mov
dec
je
adc
sbb
add
add
sub
xor
jae
pop
xor
sahf
popa
inc
and
adc
xchg
pop
adc
and
lock
out
adc
fcoml
sub
fidivs
jo
cli
or
mov
les
adc
outsl
sub
pop
adc
xchg
fld
inc
cmp
lret
xor
or
adc
jecxz
mov
add
arpl
es
les
mov
mov
mov
call
fisubrl
leave
ret
mov
sbb
add
cli
inc
mov
and
and
or
stos
or
xor
popf
sub
or
adc
clc
fsubrs
add
inc
nop
fisubs
mov
out
call
xchg
sub
jg
in
inc
jp
mov
popa
mov
add
aam
test
sbb
rcll
test
sbb
or
and
decl
mov
cmp
dec
push
inc
hlt
mov
push
add
incl
push
insl
add
cmp
mov
mov
adc
sub
jo
mov
add
loope
adc
test
or
pop
mov
scas
xor
mov
mov
cwtl
cwtl
out
cli
dec
inc
cld
xchg
mov
and
add
enter
test
rolb
adc
fsubrl
insl
inc
inc
cmp
inc
mov
xor
push
xchg
jae
and
inc
add
cwtl
out
cmpl
add
data16
int
pop
adc
fildl
xchg
pushl
or
xchg
jmpw
mov
sub
pop
fst
inc
in
dec
lfs
ja
icebp
push
jmp
push
in
in
jg
outsl
divb
or
int3
sti
cmp
cmc
decb
test
jp
adc
cmp
enter
call
int3
add
xor
mov
mov
inc
in
clc
cmpsb
ljmp
push
rol
and
dec
fs
xchg
lock
mov
testl
cmp
xchg
aad
decl
das
cmpsl
lcall
xchg
loop
bound
sbb
sbb
daa
and
xchg
stc
clc
lret
lock
mov
xor
sub
dec
push
flds
push
or
and
push
ss
add
clc
add
sbbb
mov
push
imul
jmp
out
or
sbb
call
repnz
std
push
jne
sub
nop
cltd
repnz
addb
mov
je
std
adc
aaa
addr16
jmp
or
jp
push
in
outsb
push
shrl
and
xor
and
push
mov
test
fiadds
mov
push
idivl
subb
int
mov
xor
les
xchg
or
add
push
loopne
pushf
imul
pop
mov
jg
add
lret
imul
push
rolb
sarl
mov
inc
ret
test
inc
shrb
mov
bound
popf
test
sub
stos
cmp
dec
test
push
shll
lcall
fidivs
ds
dec
fisttpll
xor
aaa
and
sbbb
daa
push
xchg
cmc
adc
sub
in
and
jecxz
jo
and
ljmp
mov
fwait
add
adc
mov
clc
sbb
inc
loop
movsb
test
adc
xchg
outsl
insb
xor
insl
mov
das
cmc
xor
iret
out
jg
adc
imul
mov
push
mov
jnp
jge
ljmp
in
sbbb
into
and
push
addb
enter
jge
inc
in
out
ret
sbb
dec
mov
rorl
insl
jecxz
aam
mov
lret
cmp
scas
movsl
mov
sbb
icebp
lds
push
out
jg
mov
mov
pop
iret
dec
ss
xor
and
test
jle
call
in
insb
pop
inc
mov
int3
xchg
jb
scas
dec
cmp
cltd
out
fisttpl
outsl
sbb
xchg
xchg
pop
pop
cld
and
iret
fistpll
inc
scas
cmpsb
adc
inc
mov
stos
mov
fistpl
pinsrw
or
sub
les
add
sbb
adc
pop
clc
lea
push
ja
lret
jne
jbe
pop
jle
rcll
cli
and
mov
imul
fisubl
mov
out
mov
ss
xor
sbb
fstpl
sub
std
jge
jmp
call
add
inc
dec
or
rclb
rorb
sti
push
jo
xor
lods
out
loop
mov
in
inc
jg
jno
fldcw
cmp
aam
mov
inc
insl
movsb
rcl
sub
dec
insb
rolb
mov
and
flds
ficompl
or
mov
insl
sbbb
pop
mov
outsl
jg
dec
test
inc
push
dec
mov
rolb
mov
imul
aas
add
jg
aaa
sbb
test
adc
push
lods
dec
stos
mov
hlt
mov
hlt
mov
insl
cmc
or
mov
push
or
jg
outsb
jl
fcompl
faddl
sub
mov
add
xor
faddl
cmp
aad
icebp
rol
mov
mov
ja
cli
pop
lahf
dec
das
int3
mov
lods
test
int
mov
ljmp
cmp
sbbb
jle
mov
push
sbb
mov
lea
cli
fmul
adc
inc
push
jg
repz
jmp
inc
xor
fdivs
fiadds
cmp
sub
or
xor
outsb
mov
jo
jno
pusha
icebp
mov
mov
stos
push
adc
fbstp
not
push
push
test
scas
loopne
shrb
pop
movntq
out
test
or
add
sub
in
mov
rcrl
addb
dec
fmull
ljmp
outsl
hlt
icebp
xor
jmp
outsb
mov
jmp
ret
and
int3
push
cmpsl
add
repz
jne
jne
pop
fldenv
adc
decl
pop
or
loop
adc
pop
jmp
mov
inc
insl
mov
xlat
jl
jge
mov
xchg
call
add
cld
sub
pop
sub
sub
push
clc
repnz
je
sub
arpl
mov
fsts
loope
cs
mov
dec
mov
inc
movsb
inc
cmp
fistpll
jnp
imull
gs
dec
mov
dec
ss
fs
pop
test
mov
or
ljmp
xor
cld
pop
inc
ds
hlt
or
jp
sub
icebp
xchg
sbbb
rcrb
neg
loopne
test
aaa
js
jl
out
jecxz
movsl
cli
push
insl
or
xor
and
adc
xchg
test
and
ljmp
jnp
and
fbld
or
cmpsb
sub
or
cwtl
loope
and
pop
cmpsb
cmpl
inc
popa
xor
ljmp
aam
sbb
inc
mov
sti
mov
sub
cmpsl
loope
icebp
cmpsb
xchg
sub
stos
xchg
xlat
les
out
push
js
jge
push
mov
jno
mov
imulb
cmc
gs
mov
cmpb
clc
xchg
or
andl
aam
es
repnz
sbb
adc
cld
test
incl
lcall
jle
and
int3
rclb
sub
lods
ss
ds
cwtl
dec
pop
sbb
adc
call
mov
int
imul
in
push
std
pushl
test
popa
ret
inc
je
and
xor
and
or
fldcw
inc
dec
clc
sti
push
int
imull
test
sub
lahf
clc
xor
inc
stos
and
shll
inc
daa
mov
sbbb
dec
clc
xchg
mov
push
push
inc
ljmp
test
and
add
testl
add
dec
or
and
es
out
popa
inc
jne
data16
adc
pop
lds
xchg
in
or
das
add
dec
inc
jbe
jne
add
mov
test
xor
push
jp
adc
and
rorl
xchg
add
mov
add
lods
lret
lock
ret
test
loopne
jae
popf
mov
es
inc
sub
arpl
sbb
fs
pop
push
cmpb
cmc
add
add
jo
fcomps
lcall
push
call
inc
mov
xor
bound
fmuls
sbb
add
inc
add
ja
aas
mov
sbb
inc
das
xor
test
and
inc
adc
xchg
pop
adc
test
xor
pop
and
xor
mov
or
lret
and
rcll
cmp
sub
pop
and
push
dec
mov
ret
pop
push
pusha
and
enter
movsb
loopne
jmp
sbb
adc
mov
dec
ror
adc
je
call
aaa
jp
std
popa
lods
pop
dec
out
ret
adc
sbb
shll
and
mov
cmc
and
jp
in
cld
pop
mov
lea
and
andl
inc
dec
add
fsubrl
shll
adc
sub
jmp
out
xor
xchg
ljmp
add
pop
sbb
or
add
mov
cmc
and
outsl
mov
int3
push
inc
test
pushl
clc
sub
fwait
dec
push
bound
mov
js
sbb
loope
mov
inc
repnz
std
mov
cmc
stc
adc
add
adc
adc
adc
push
out
shll
sub
minps
jne
inc
aam
dec
inc
push
xor
bound
or
loopne
dec
mov
jl
sahf
inc
pop
loop
or
and
je
mov
jo
push
xorl
jo
inc
mov
sub
xchg
daa
lock
cmp
sub
push
mov
arpl
lea
push
cmp
int
out
loope
test
cmpsl
and
cmc
outsl
sub
jmp
dec
mov
mov
std
mov
test
outsl
into
xchg
cwtl
insl
test
in
sbb
pop
dec
nop
outsb
mov
or
inc
std
ret
pop
mov
ja
push
adc
jge
mov
xchg
sbb
lret
fsubrs
inc
adc
push
pop
sbb
and
pop
ss
pop
push
cmp
bound
into
testl
inc
insb
and
hlt
push
mov
lock
add
test
sub
push
mov
mov
mov
mov
cld
cs
call
jle
or
and
dec
or
mov
and
icebp
ret
inc
jecxz
mov
scas
and
ficoms
out
mov
subps
pmuludq
adc
xchg
shll
lahf
daa
ja
pop
and
test
adc
or
imul
cmpb
jo
nop
std
orl
jg
cmp
sahf
lahf
or
mov
loopne
inc
aam
ret
outsl
push
cld
rcrb
ret
jle
cmp
fimull
xchg
mov
mov
call
jno
add
fwait
out
adc
adc
inc
adc
jg
or
test
cmp
sbbb
negb
incl
pushf
stc
and
add
adc
mov
ret
add
xchg
fnstsw
mov
pop
andl
sub
or
in
cs
push
dec
and
fisttpll
add
loopne
cmp
cmp
sbb
and
jg
sbb
pop
sbb
je
mov
push
sub
sar
ret
pop
and
adc
movsl
and
outsb
mov
stc
add
inc
mov
out
dec
stos
push
xchg
sbb
sub
sarl
add
mov
push
inc
pop
cli
out
lock
add
mov
call
push
mov
leave
mov
mov
fildll
je
idivb
add
dec
jl
loopne
out
sbb
cmpsb
int
mov
or
cmpsb
pop
jecxz
sub
fldt
mov
pop
fdivrl
pop
cwtl
addr16
adc
decl
pop
clc
pop
xor
inc
andb
mov
mov
inc
lds
or
add
pop
fstpl
mov
scas
jmp
mov
incl
imul
mov
cmp
loop
pop
nop
mov
inc
fwait
ljmp
add
or
cli
imul
lea
scas
cmpsb
cwtl
pop
cmp
push
lods
mov
fwait
dec
cmpsb
and
scas
xor
int3
fwait
decb
sub
and
adc
into
pop
loopne
scas
aad
sbb
int
pop
popl
cmc
loop
lock
xor
mov
and
sahf
push
and
inc
xchg
or
or
fs
aad
movsl
decl
cmc
in
shl
push
add
inc
sbb
push
in
movsl
pop
push
sbb
adc
test
mov
sbb
lret
movsl
lcall
mov
mov
jb
sub
sbb
adc
inc
mov
xor
sbb
sbb
pop
cmp
fidivl
cmpsl
lea
jnp
add
xor
scas
jge
mov
enter
ret
mov
inc
cwtl
sub
fucomi
lea
sub
popl
mov
inc
test
pop
popa
or
out
cs
cs
mov
or
jne
out
addr16
jno
add
popa
push
mov
mov
dec
negb
add
xor
test
cmpsl
aad
push
adc
sub
mov
jp
call
gs
dec
rclb
ljmp
xchg
test
jo
mov
nop
ret
mov
push
aas
adc
or
gs
mov
jnp
inc
xchg
cmp
les
fstpl
dec
jl
std
xchg
xor
mov
in
lcall
inc
adc
inc
xor
push
in
push
mov
roll
movsb
xor
inc
jnp
mov
sbb
add
ret
dec
cld
testb
test
ljmp
call
mov
sbb
lods
xchg
push
xchg
cli
bound
add
fisttpll
sahf
rep
sub
test
int
out
dec
fisttps
add
adc
lcall
ds
ljmp
lret
inc
mov
or
je
mov
outsb
add
lret
add
icebp
mov
cld
aas
rol
stos
mov
out
sti
mov
lds
or
loopne
add
hlt
ss
stos
ja
cmp
hlt
push
out
adc
sub
fwait
enter
je
insb
xor
out
xor
icebp
pop
ss
imul
mov
cmp
repnz
loopne
xlat
inc
dec
jge
aaa
push
jne
pop
mov
pop
mov
push
sbb
cmp
aam
and
in
add
test
fisttps
jecxz
or
dec
enter
pop
fidivrs
mov
imul
movsl
in
jle
rcrb
ljmp
ret
and
push
xchg
add
mov
mov
sbb
shl
and
outsl
and
cltd
int
xorl
and
mov
push
and
outsl
ss
push
stos
sbb
es
xor
dec
std
ljmp
scas
imul
lods
xchg
inc
fld
mov
dec
ljmp
shlb
sub
subb
lret
repz
mov
testb
lahf
clc
aaa
mov
pusha
xchg
cmp
push
aaa
popf
test
xchg
out
cmc
pop
and
mov
pop
in
jg
roll
leave
push
dec
sbb
dec
pop
lods
shlb
pop
ret
cmp
in
pusha
sub
jge
aad
iret
and
ret
sti
adc
push
xchg
pop
jl
and
aad
divl
ret
sbb
pop
push
pop
loope
jp
dec
stos
hlt
movsl
lahf
jl
mov
add
and
je
push
sbb
mov
hlt
xchg
xor
pop
ret
add
arpl
cmp
nop
insl
shrb
jp
inc
xor
insl
in
aaa
fldl
lcall
mov
fcomps
xchg
andl
or
jo
cltd
jmp
aaa
mov
in
insb
lret
arpl
dec
push
xor
enter
adc
mov
and
pop
fcmovnb
cmpsl
ret
out
sbb
push
ds
inc
je
mov
in
test
sbb
hlt
or
pop
jmpw
adc
sti
push
sbb
dec
fcoms
push
ret
jmp
insb
jl
pop
or
add
bound
addr16
movsb
jne
lcall
adc
and
adc
or
subb
sahf
add
sbb
insb
inc
iret
aas
ficompl
outsl
in
push
xor
and
scas
inc
inc
cmp
mov
imul
mov
cltd
mov
cld
pop
push
xchg
inc
adc
imul
adc
and
insl
js
mov
lcall
push
adc
in
mov
adc
push
js
cwtl
clc
sbb
sar
aaa
clc
or
lret
lcall
add
mov
push
js
mov
jns
add
pusha
xorl
cli
push
test
loopne
or
dec
mov
imul
insl
popa
sti
das
pop
cli
fsts
outsl
repnz
negb
dec
and
pop
negl
cltd
jb
mov
rorl
pop
js
insl
cli
rdmsr
jnp
in
mov
xor
insl
jmp
xchg
rclb
xchg
jo
add
sub
vmwrite
xor
in
loop
es
mov
xchg
jg
leave
rcrl
loop
jmp
pop
shlb
adc
scas
xchg
inc
test
cmp
inc
cs
sarl
adc
mov
jecxz
jo
sub
daa
cmpsl
stc
or
aaa
hlt
sbb
lock
dec
sarb
aas
or
sub
lea
fildll
adc
mov
mov
mov
outsl
hlt
enter
lahf
lahf
mov
fstpl
jnp
pop
and
test
push
fidivs
or
or
mov
adc
das
jmp
aad
sub
decl
cmp
faddl
or
std
fnstenv
insb
sarl
pop
cli
das
adc
rol
xor
std
adc
jle
ret
out
add
jg
fists
imul
and
mov
lds
push
xor
dec
std
inc
sbb
jnp
push
jp
dec
mov
and
adc
cmp
jo
loopne
mov
aaa
jno
inc
sbb
pop
hlt
inc
or
adc
and
lds
in
decl
mov
arpl
lret
fadds
or
incb
dec
jae
add
or
push
jne
sbb
push
xor
shlb
dec
or
mov
mov
mov
mov
call
or
imul
ss
pop
test
scas
sarl
add
or
lea
jp
inc
fcoml
inc
cmp
and
icebp
fwait
cltd
fcmovu
fprem
mov
shlb
nop
add
lods
mov
jbe
or
out
or
pop
sbb
or
cltd
fcomi
aad
adc
dec
mov
inc
stos
xchg
adc
mov
fistps
sbb
push
arpl
and
jl
out
mov
addr16
sbb
jecxz
fwait
cmc
clc
mov
adc
movsb
cli
fwait
imul
mov
adc
jb
sbb
xor
cmp
pop
je
push
mov
sbb
out
xchg
mov
enter
fisubl
cs
lock
jae
int
lods
call
cltd
das
sahf
pop
push
and
push
arpl
test
daa
sub
add
or
xchg
and
inc
xchg
mov
sub
sarb
ret
insl
mov
fnstcw
cmpb
and
lcall
inc
push
sub
into
shll
sub
and
mov
and
mov
jp
mov
icebp
jg
push
xchg
ds
aam
inc
pop
jo
mov
and
bound
push
dec
lahf
nop
cmp
ljmp
cld
mov
sub
cmp
or
jle
shll
lock
xchg
adc
cmp
sub
stos
dec
sbb
movsl
and
sub
mov
out
and
dec
mov
cmpsb
loopne
je
lea
stc
bound
repz
ljmp
insl
test
data16
imul
fadds
pushl
cmpsb
add
mov
rcrl
xchg
pop
es
test
andb
xor
addl
cmc
call
neg
dec
add
add
test
push
mov
movsb
sub
dec
sub
and
push
mov
shll
mov
cld
or
pop
adc
ficoms
dec
add
dec
adc
cmpl
in
cmp
loop
shlb
inc
or
int3
or
mov
push
dec
clc
fldenv
in
lods
sub
sub
into
or
add
pop
int3
push
orb
pop
cmp
adc
xchg
mov
out
mov
xlat
enter
aam
outsb
daa
mov
outsl
xor
pop
and
cmp
addb
and
cmp
sti
pusha
lods
jb
jge
xor
mov
rorl
add
push
aaa
inc
and
outsl
aaa
hlt
sbb
add
cli
jp
hlt
dec
stc
add
stos
sbb
and
int3
cli
mov
push
inc
test
inc
sbb
aad
add
fistpl
into
pop
int3
dec
or
mov
jle
js
adcl
or
add
aaa
ss
dec
mov
xor
mov
insl
shll
ror
jmp
inc
add
mov
push
push
test
cs
xor
push
push
les
mov
mov
jecxz
out
into
add
and
and
fstl
push
clc
mov
hlt
push
pop
mov
jne
shlb
incb
ret
out
andb
shlb
add
insb
sarl
pop
push
push
adc
gs
and
inc
aad
push
add
pop
lds
je
lds
mov
mov
stc
inc
andl
les
jbe
mov
shll
andb
fsubrs
jns
ja
adc
lret
jns
adc
push
jl
stos
dec
xlat
jmp
or
icebp
jg
mov
lcall
jp
das
roll
pop
popa
fidivs
pop
loop
std
dec
fwait
jmp
sub
push
add
call
cmc
outsl
pop
adcl
xchg
sbb
jg
sub
xor
add
lods
inc
dec
repz
shlb
roll
dec
push
sbb
fcomp
test
sbb
lock
ret
jbe
or
sbb
xchg
ss
pop
inc
pushl
inc
cmp
nop
dec
jo
inc
shrl
pop
loop
clc
scas
scas
orb
ss
in
jb
xchg
sbb
rol
xchg
bound
lods
or
sbb
xchg
fcomps
pushf
xorl
mov
push
mov
lcall
inc
ret
pop
mov
popf
std
mov
test
mov
xor
fdivl
in
jmp
mov
mov
ja
mov
out
addl
nop
stos
mull
sbb
fwait
pusha
adc
loop
loop
mov
test
std
lret
mov
or
lea
xor
ret
lcall
adc
stos
test
mov
cmp
push
repz
add
fcoml
cmp
cli
jns
mov
cmp
ss
insl
xor
mov
inc
push
jne
movsb
fwait
mov
mov
pop
test
inc
cmc
xchg
fisttpll
mov
into
mov
pop
call
inc
mull
sbbb
scas
mov
pop
add
cld
cmp
aaa
unpckhps
mov
out
stos
pop
shrb
cs
cmc
loopne
lds
pop
mov
mov
mov
jge
clc
mov
lahf
daa
loop
sarl
clc
jl
aad
fistl
add
inc
ds
dec
mov
pusha
or
push
cmp
push
fisttps
inc
dec
outsb
fucomi
jp
sar
ficompl
xor
call
jge
cmp
xchg
fisttpll
push
insl
test
lahf
mov
push
cs
inc
xchg
jg
lods
xchg
cmc
mov
or
rcr
push
mov
mov
inc
inc
or
pop
cmp
sbb
xlat
adc
cmp
and
scas
hlt
movsl
jae
mov
mov
mov
aaa
cmp
jp
sbb
enter
insb
xor
rolb
addr16
push
sbb
dec
in
data16
faddl
add
or
popa
ror
jo
mov
pushf
push
pop
test
cmp
dec
pop
jecxz
aad
mov
ficoms
dec
lods
push
jb
adcb
inc
imul
jecxz
sub
iret
or
bnd
or
shll
sub
outsb
inc
dec
aam
loopne
repnz
rcrl
push
jg
add
and
iret
iret
call
sbb
mov
sub
popa
nop
jne
ss
testb
xchg
outsl
sbb
orps
adc
cmp
pop
and
mov
inc
sub
sbbl
inc
add
jns
dec
data16
rorl
and
aas
mov
enter
or
adc
mov
ds
xorb
push
out
aaa
or
add
addb
lea
add
testb
xor
dec
xchg
in
add
adcl
xor
mov
sbb
mov
addl
jno
pusha
pop
and
mov
frstor
inc
dec
leave
sti
outsb
and
fmull
mov
out
roll
jae
aaa
mov
or
inc
mov
mov
adc
lcall
inc
xchg
pop
sahf
xor
repnz
and
popa
jle
out
clc
add
lret
or
sbb
js
adc
test
dec
adc
popf
fwait
rcrl
dec
sub
aam
and
sub
xorl
lods
stos
or
fmuls
enter
inc
mov
das
and
popf
mov
adc
dec
out
dec
and
add
lea
push
xchg
or
or
adcb
xor
sub
fsubl
sarl
dec
xlat
fists
sbb
xchg
push
xchg
mull
xchg
push
lock
or
loop
outsl
jp
leave
and
pop
sub
mov
fisubrs
andl
sub
popf
mov
call
movsl
fadds
js
ljmp
rolb
es
mov
movsb
in
add
ret
sbb
mov
pop
xor
jmp
inc
decl
andl
add
push
and
mov
or
inc
out
xchg
popl
adc
add
adc
subb
shll
add
mov
or
adc
into
add
cmp
mov
aas
leave
ret
mov
xlat
mov
push
enter
shll
lea
and
mov
outsl
pop
inc
cmpsb
sbb
pop
pop
mov
pop
pushf
or
test
xchg
je
js
add
data16
lds
add
sahf
add
std
dec
mov
or
jmp
outsb
or
jg
iret
mov
xorb
pop
loopne
inc
jbe
mov
gs
push
cld
inc
mov
sub
mov
dec
jne
sbb
call
ja
push
add
fdivrp
das
icebp
mov
outsl
into
xor
les
dec
mov
pop
sub
cs
andb
pusha
lods
sub
das
pushf
es
test
mov
sub
or
sbb
mov
lds
pop
push
fbstp
cmp
cwtl
js
or
fsubs
mov
outsl
call
lahf
lods
mov
mov
mov
push
in
repnz
mov
popa
pop
mov
sub
cmp
pop
xchg
testb
mov
mov
push
scas
pusha
adc
fildl
cmpb
push
xor
ss
out
xchg
les
add
imul
mov
gs
std
and
adc
aam
cs
lods
inc
sbb
mov
rcll
ds
mov
or
sbb
or
dec
inc
lock
lahf
jmp
jnp
add
sbb
mov
insl
sub
shrb
or
loop
sbb
test
adc
xorl
je
mov
push
sbb
aam
lcall
mov
test
loopne
pop
add
sarb
cwtl
xchg
outsb
movsb
popa
ret
fnstenv
xor
fidivl
mov
adc
out
adc
push
std
stc
push
dec
iret
jae
adc
push
adc
test
in
cmpsb
jge
xchg
lret
sub
std
lea
shll
out
ljmp
icebp
mov
fimull
mov
std
loop
es
and
mov
pop
inc
loope
cld
mov
push
xor
or
andb
sbb
mov
bound
add
stos
ret
add
lcall
sbbb
dec
jo
pusha
fistpl
sarl
mov
pusha
and
outsb
cld
mov
xchg
adc
add
push
fwait
adc
in
mov
cmc
xor
mov
mov
xlat
inc
and
sbb
outsl
sbb
movsb
xor
sub
push
jecxz
fsubrp
mov
shll
incb
push
pusha
cli
cs
pop
mov
ds
and
jmp
repz
add
gs
inc
ficoms
in
mov
test
rcrl
cld
push
mov
xor
adc
push
clc
decl
scas
pop
mov
mov
in
adc
inc
bound
xchg
jle
ljmp
test
jb
setp
dec
sbb
jbe
cmpl
fcomps
xor
rcrl
subl
mov
aaa
std
test
rcll
rclb
test
lods
call
testb
mov
sbb
mov
xor
xor
cli
movsl
imul
sub
sub
bound
das
daa
mov
cmpsl
insl
mov
and
subl
or
cld
je
cmp
fstpl
mov
or
minps
xor
dec
push
adc
pop
loope
cmpsl
js
insb
mov
cmp
dec
push
adc
adc
fdivrs
sbb
cli
mov
jne
outsl
push
lock
cmp
inc
cltd
or
insb
outsb
repz
and
adc
je
incl
and
sbb
jo
or
xchg
ficoml
movsl
mov
test
in
add
dec
mov
mov
ret
insb
sbb
jmp
xchg
stos
test
pusha
ret
ret
pop
ds
aaa
clc
shr
jle
je
stos
jo
add
dec
add
loopne
lods
cld
js
push
fisttpl
mov
xchg
stc
cmc
mov
add
pop
mov
push
repz
mov
test
sahf
ss
sbb
mov
hlt
sbb
and
mov
or
dec
or
roll
cwtl
insl
cltd
stc
jmp
outsb
fisttps
push
or
fucomi
add
aam
lods
inc
sub
mov
mov
sbb
jns
add
xor
inc
sahf
sarb
or
lea
push
jl
jmp
jae
mov
or
mov
cs
adc
sbb
xchg
add
rclb
les
mov
cwtl
sti
ss
popa
or
adc
loopne
sti
je
nop
hlt
push
dec
jb
pop
movsl
syscall
push
pop
mov
ja
call
jnp
add
pop
dec
jmp
jp
mov
pop
aad
dec
shlb
jg
aam
pop
scas
outsb
out
out
mov
dec
add
loop
aam
loopne
in
xchg
js
add
inc
cwtl
repz
pop
xor
outsb
cmp
into
orl
and
inc
mov
stc
aad
jmp
or
lds
push
ja
adc
adc
aam
or
or
or
add
pop
les
push
dec
fildll
pop
cld
pusha
adc
ret
xor
mov
nop
test
int
aam
sbbl
mov
mov
add
fcmovnbe
or
adc
inc
dec
add
pop
rclb
std
cld
sbb
adc
adc
pop
rorb
icebp
addr16
mov
xor
cmp
or
test
add
or
cmp
cmpsb
mov
das
test
xor
inc
or
add
xchg
loopne
in
jle
sbb
out
es
add
or
sbb
shlb
decb
ret
outsl
scas
mov
add
test
mov
dec
xor
jle
push
adc
inc
cmp
jo
mov
in
inc
push
insl
and
push
ss
mov
or
add
sub
add
sbb
mov
cmp
mov
lcall
add
repz
mov
push
add
data16
shll
add
addr16
adc
push
fistpll
push
push
or
jnp
scas
dec
mov
xchg
mov
sbb
jge
loop
mov
mov
jmp
xor
sbb
ja
push
jnp
mov
and
insb
insl
or
adc
sbb
push
lock
push
mov
lock
ret
stos
ljmp
cwtl
adc
repnz
imul
push
andl
inc
stos
xor
divb
xor
mov
insl
aaa
xchg
mov
inc
cmp
jg
push
mov
in
addb
add
mov
sbb
pop
jge
loopne
or
push
inc
inc
add
stos
jmp
lds
adc
and
inc
or
mov
mov
lcall
add
sbb
mov
xchg
outsl
push
mov
shrl
notl
mov
leave
sub
adc
fistpll
mov
movsl
xor
decl
sbb
adcl
mov
pop
lods
mov
aaa
or
cmp
mov
pop
sub
mov
inc
repz
sub
outsl
out
mov
shlb
jmp
add
lock
js
iret
loope
dec
mov
xchg
incl
xchg
fiadds
lret
mov
ljmp
daa
inc
dec
rol
add
and
stos
repnz
mov
ret
mov
push
dec
mov
stos
decl
sub
jno
mov
xchg
imul
inc
xchg
add
std
outsl
fistpl
sub
lret
les
xchg
lret
cli
jno,pt
pushf
outsl
cld
push
mov
scas
mov
dec
push
sbb
push
enter
mul
dec
push
fcoms
cmp
scas
loop
xor
add
lods
into
xor
jecxz
ss
jg
loopne
pop
test
aad
rcrl
cmpl
push
cltd
xchg
mov
aaa
cmp
dec
and
loopne
sbb
mov
push
sub
enter
sbb
rol
mov
jne
in
mov
cli
cmpsl
lods
and
dec
ljmp
enter
sbb
mov
add
leave
inc
ficomps
or
jl
mov
push
jmp
call
shll
cs
push
mov
outsl
fs
push
dec
and
push
inc
fcmovnbe
or
cmp
or
sub
mov
sti
push
or
dec
xchg
lret
movsl
ds
int
repnz
pop
movsb
cmpsl
sub
jecxz
je
push
mov
iret
pop
shlb
jecxz
clc
sbb
mov
cld
scas
fnstenv
icebp
mull
inc
mov
push
jmp
rorb
aas
mov
pushf
push
inc
sbb
aam
loopne
mov
imul
sbb
add
andb
in
and
dec
pop
xchg
into
inc
inc
pop
sbb
xchg
jae
sub
mov
push
or
pop
pop
test
outsb
sahf
mov
das
je
mov
push
in
dec
mov
and
fsubl
int
sbb
and
mov
sub
cmp
cmc
fstps
mov
sarb
arpl
xlat
ss
xchg
call
inc
mov
rcrb
movsb
push
mov
repz
xchg
rol
cmpb
inc
dec
decl
push
pop
inc
mov
push
xchg
mov
inc
dec
mov
call
push
sbb
fwait
shrl
mov
or
mov
clc
and
loope
inc
pop
inc
das
aam
sub
pop
mov
xor
aaa
cmc
negb
push
and
aam
inc
data16
cmp
test
les
mov
test
hlt
or
xchg
cmp
fildll
pop
xchg
xchg
out
int
adc
mov
call
dec
and
fs
les
fdivp
add
or
cli
arpl
mov
or
add
add
adc
sahf
add
sbb
adc
shlb
inc
in
das
hlt
xchg
inc
aad
adc
mov
lock
mov
sub
mov
aam
jbe
push
outsb
mov
out
loopne
xchg
jp
xchg
cmc
fxch
les
adc
hlt
mov
xorb
outsb
push
push
out
inc
test
dec
cmc
filds
mov
mov
pop
or
rcrb
inc
or
decb
mov
sbb
add
mov
into
adc
mov
cs
aaa
movsb
pop
sarl
inc
aaa
das
test
les
mov
xchg
repnz
int
jb
in
sbb
ret
cmpsl
rolb
mov
mov
pop
les
pop
in
cs
mov
mov
jns
xor
push
and
icebp
pop
call
sti
push
and
xor
xor
movb
outsl
mov
push
mov
add
testb
sbbl
rcrl
rcr
test
test
insb
shrb
jae
add
out
xchg
sbb
sbb
sbb
out
nop
int3
addr16
std
outsl
pop
push
insb
clc
pop
inc
inc
or
mov
mov
push
insb
and
outsl
das
adc
mov
add
hlt
push
pop
inc
jmp
xchg
fwait
andl
xor
ficomps
cmp
sbb
push
push
push
call
and
loope
das
pop
lret
inc
loopne
das
jl
enter
into
test
daa
js
xor
ljmp
mov
les
pusha
popa
stos
adc
imul
aaa
adc
dec
lahf
out
cltd
ret
out
pop
xchg
inc
sub
out
repz
ret
fistpll
push
sub
addr16
xchg
cmp
mov
push
outsl
or
cs
inc
hlt
shlb
lock
pop
jp
call
cwtl
cmc
pop
adc
cmp
arpl
out
iret
xor
nop
sbb
add
jge
xchg
adcl
stos
mov
or
xchg
ja
sbb
or
into
cmpsl
or
dec
add
and
fnstcw
mov
push
fildll
mov
sbb
roll
andl
rcr
push
loop
inc
lahf
testb
dec
lcall
lock
sbb
cmpsl
js
sub
sbb
sbb
loopne
add
mov
stc
dec
add
xor
jbe
shll
lea
test
sub
sarl
mov
test
repnz
mov
inc
outsb
rclb
push
dec
popw
jp
test
pop
or
stos
sub
xlat
ljmp
mov
cli
mulb
or
popf
pop
lds
lahf
jae
popa
sub
nop
loop
lea
cmpsl
ss
mov
repz
sub
sub
dec
bound
ss
xchg
testl
hlt
addl
rolb
pop
adc
icebp
dec
inc
in
jno
xor
cmp
pop
adc
jmp
std
and
jmp
xor
mov
mov
cld
adc
mov
lods
inc
xor
sbb
nop
cmpl
mov
loop
jb
addl
mov
repz
xor
or
stos
adcb
push
add
or
mov
movsb
push
jge
add
les
inc
fs
add
rclb
push
lods
ljmp
adc
sub
ss
shll
cld
inc
nop
add
dec
lods
into
loopne
fildll
fs
jnp
out
enter
aaa
loopne
lcall
and
xchg
mov
push
mov
jg
adc
add
jge
xchg
lcall
xor
add
or
adc
subl
fisubrs
add
fiaddl
fisubs
push
jmp
pop
push
mov
fmul
adc
mov
test
fwait
dec
mov
pushf
xor
stos
int
dec
sub
lcall
push
xor
fcoml
call
push
push
adc
das
daa
add
cmp
lods
cmp
loope
out
mov
les
pop
or
xchg
and
lahf
fisubl
add
imul
lret
inc
in
adc
pusha
and
mov
rcr
int
push
inc
daa
stos
xor
mov
push
cmpsb
ret
and
icebp
es
mov
mov
stos
shr
xor
test
outsb
mov
aad
jno
inc
cmp
test
mov
dec
adc
add
js
push
insl
xlat
int3
xchg
movsb
push
icebp
outsb
mov
sbb
pop
push
xchg
push
repz
add
and
jg
or
add
test
ss
fistl
cld
adc
clc
push
jle
push
xchg
xchg
push
jb
loopne
pop
jp
add
push
std
jmp
and
sub
xor
jns
ja
cmp
stos
test
or
cli
imul
mov
std
mov
mov
and
inc
mov
or
push
fisubl
mov
bound
and
mov
fidivrl
push
cmc
loop
mov
mov
popf
mov
sub
pushf
sub
int3
jnp
ljmp
and
ficomps
and
mov
inc
insl
fnstsw
add
in
push
mov
or
movsl
jg
aam
cmpsb
movsl
or
lcall
mov
mov
mov
fstl
sbb
pop
loop
leave
imul
ret
loopne
or
fisttpl
jmp
cli
clc
and
mov
mov
ljmp
push
inc
out
mov
adc
mov
fildl
add
adc
add
add
lcall
dec
pop
fs
mov
nop
push
or
mov
jg
loop
icebp
fisttpll
mov
fwait
ljmp
cwtl
popa
inc
dec
jmp
clc
lea
dec
xor
jmp
mov
push
lret
pop
int3
cmp
cmpl
xchg
ficoml
fisubs
call
fwait
syscall
sar
jb
mov
lcall
xchg
inc
or
xor
icebp
stc
pop
aaa
cmpsl
push
sbb
dec
aas
push
xor
jecxz
in
in
lahf
xchg
jle
ljmp
icebp
test
ss
les
cmpl
fstpl
or
sub
pop
mov
mov
lock
bound
and
jmp
lcall
out
ret
inc
lahf
js
in
in
push
adc
mov
inc
push
sbb
daa
jg
fs
test
mov
add
pop
sub
shlb
call
je
xchg
ret
sbb
jo
enter
xchg
add
fwait
test
or
pop
or
ret
sbb
mov
cmp
inc
xchg
mov
sub
add
and
icebp
out
sbb
dec
stos
cwtl
xchg
lods
arpl
cmp
mov
pop
mov
sub
into
pop
add
inc
jb,pt
rcrl
pop
adc
mov
jp
stc
mov
loopne
pop
pop
push
rolb
das
push
movsb
mov
push
rcrl
sub
in
cmp
dec
in
or
push
jg
arpl
in
scas
dec
add
push
sub
push
ret
in
pop
fcompl
ljmp
sbb
fadds
pop
sub
rol
cwtl
movsl
add
mov
dec
cmp
inc
or
mov
leave
cmp
call
popf
jecxz
or
sub
addb
cld
or
arpl
mov
scas
pop
aam
dec
ret
push
nop
repz
fisubrl
shl
icebp
hlt
pushl
jg
jg
mov
popf
dec
bound
push
jecxz
jmp
xchg
xor
and
dec
je
mov
ss
mov
mov
scas
in
sub
mov
daa
arpl
orl
out
inc
das
mov
cmp
xchg
add
and
ret
push
mov
mov
mov
mov
xchg
outsl
push
push
sbb
push
or
pop
insl
int
hlt
imul
and
cmpsl
inc
and
stos
mov
fistpl
lcall
les
sub
rcrl
call
fincstp
or
fiadds
ds
inc
ljmp
inc
cli
dec
push
setno
sbb
out
mov
test
nop/reserved
push
pop
dec
popf
mov
push
loope
insb
mov
mov
xor
jbe
popa
push
aaa
mov
inc
dec
dec
and
pop
out
jecxz
inc
sbb
sub
push
push
inc
jbe
sbb
js
and
nop
stos
mov
jge
mov
xorb
test
insl
jg
test
sub
jl
mov
ja
cmp
movd
data16
test
lods
sahf
mov
loope
std
outsl
mov
xor
repz
fstl
or
mulb
inc
dec
loopne
stc
adc
or
adc
mov
add
or
push
cwtl
inc
xor
outsb
mov
outsl
out
add
sbb
and
mov
sub
cwtl
test
pop
ss
jmp
dec
clc
add
jnp
add
cmc
leave
int3
jg
test
lds
lds
or
movsl
incl
inc
cltd
and
dec
jo
or
mov
pop
and
xchg
sti
push
mov
sarb
push
xchg
loop
mov
insl
jl
mov
subb
das
sbb
push
sub
add
rorb
sbb
mov
or
xor
aas
mov
mov
ss
pop
test
mov
popf
xchg
test
loope
pop
or
inc
fwait
mov
call
mov
imul
fsts
inc
jno
loop
cmp
xchg
and
push
mov
adc
add
shrl
test
dec
rol
push
pop
push
loop
into
xchg
mov
aaa
insl
lods
ss
or
dec
mov
aaa
or
mov
xchg
adc
jo
jne
int3
pop
pop
mov
push
int
rorb
jnp
jbe
ret
shr
push
into
ret
and
dec
cmp
cmp
clc
out
add
jnp
enter
mov
and
and
cmc
jbe
mov
cmpsl
in
pop
mov
push
jp
mov
xor
push
dec
jle
roll
cmp
add
inc
ffree
push
pop
xchg
xchg
lcall
imul
push
push
stc
je
ds
aas
lcall
xor
decb
fisttpl
jne
out
adc
andl
pop
xchg
adc
xchg
cmpsb
clc
pop
pop
sbb
add
adc
test
jae
lcall
add
sbb
mov
xlat
in
mov
fistpl
pushf
call
or
fsub
call
pop
inc
pop
xchg
sbb
fs
xchg
push
pop
inc
inc
into
cli
in
push
xchg
nop
jg
mov
add
gs
mov
mov
add
lds
sbb
jb
mov
push
push
inc
push
mov
popf
loopne
test
outsl
xchg
cmpsb
pushf
in
lcall
xchg
insb
push
outsb
gs
in
mov
mov
out
pop
outsb
mov
inc
cmp
rolb
mov
icebp
xchg
pop
xlat
orl
loopne
shl
push
jo
and
idivl
push
mov
or
test
and
lods
adc
sub
sub
outsb
mov
call
lcall
movsb
or
and
clc
dec
push
dec
loope
xor
ljmp
movsl
jno
adc
adcb
iret
or
and
das
adc
push
xor
adc
shrb
pop
or
pop
add
mov
or
inc
sub
scas
sub
divb
setnp
jge
and
pop
mov
push
jne
adc
aam
outsb
rcr
mov
add
adc
sub
sbb
dec
pop
inc
pusha
mov
push
clc
adc
inc
pop
inc
sub
add
outsl
adc
xchg
call
add
lods
mov
arpl
int
sbb
jbe
inc
inc
jo
jp
test
mov
add
fldl
jnp
mov
mov
cwtl
and
mov
push
mov
jns
mov
loop
scas
scas
rcl
and
mov
ror
div
scas
test
xchg
pusha
fstps
cli
xchg
add
jno
andl
inc
mov
xor
and
sbb
and
xchg
push
std
add
push
repz
or
dec
or
data16
xchg
push
adc
jmp
add
movb
or
inc
test
outsl
outsb
or
add
mov
scas
push
mov
push
rolb
jg
jp
mov
inc
std
aaa
ret
fnstcw
mov
jbe
ret
add
cmpsl
rorl
insl
or
push
push
aam
aam
insb
in
nop
cmp
inc
lock
jb
xlat
lds
or
enter
fiadds
out
inc
repz
in
add
adc
mov
cmp
and
dec
aam
loopne
mov
inc
sahf
mov
int3
in
inc
in
xor
rcrb
and
push
negl
add
shlb
shrb
sbb
je
sub
sub
inc
cli
mov
ljmp
adc
jo
and
addl
jb
mov
adc
cmp
icebp
ljmp
inc
mov
inc
popa
lods
jae
or
mov
ss
sar
cmp
jg
or
loopne
mov
mov
mov
les
ficoml
ret
push
orb
add
insb
or
cld
jmp
jae
sbb
in
add
sbb
add
mov
fildll
mov
sub
cmpsl
dec
inc
push
mov
movsb
xchg
jecxz
es
lock
cli
xor
out
push
adc
shl
subb
hlt
xchg
push
add
clc
gs
push
int
cmp
cmp
sub
popf
sbb
or
inc
cmp
aas
ljmp
fcompl
std
cmp
xchg
call
cmp
mov
cmp
mov
mov
push
inc
into
adc
shrb
in
jnp
movd
add
cli
ss
enter
xchg
enter
cmp
add
inc
push
push
inc
lds
adc
push
rcr
ror
leave
push
dec
cmp
sub
punpckhbw
pop
jne
or
inc
sub
push
pusha
pop
in
out
pop
adc
out
cmpsb
ss
mov
and
sarl
and
xchg
pusha
pop
jg
lea
fadds
les
mov
das
icebp
outsl
xor
fcoms
lds
pusha
mov
mov
push
insb
pop
fnsave
js
adc
xor
mov
loope
or
ja
ficomps
push
and
incl
rol
push
jecxz
lret
das
mov
or
fistl
in
stos
icebp
shl
shrl
and
sub
and
jmp
insl
jbe
pop
mov
inc
mov
pop
lock
cltd
dec
rorl
mov
inc
in
dec
mov
mov
push
mov
ror
mov
scas
fldenv
sub
push
or
clc
daa
ss
cmp
push
mov
call
insb
out
mul
inc
cmp
sub
and
pop
scas
or
movsl
push
jg
mov
js
hlt
jno
mov
rclb
sbb
aas
sub
insl
insl
or
xor
fucomi
js
dec
and
jno
insl
pusha
inc
push
dec
or
jg
xchg
rcll
jmp
cld
rol
xor
xchg
sub
sbb
push
mov
cld
ja
loopne
push
fwait
mov
mov
lock
std
xor
call
xor
pop
gs
lret
mov
outsl
aam
sbb
sub
xchg
repz
push
jbe
es
cwtl
xchg
sub
lea
pop
test
pop
jmp
sub
rcrl
pushf
dec
xchg
nop
mov
outsl
jle
push
push
mov
and
int
fnsetpm(287
rcrl
sbb
push
enter
jecxz
add
inc
lcall
xor
or
pop
stos
xor
xor
rdpmc
sbb
sub
pop
jl
std
negl
and
jge
mov
dec
icebp
inc
dec
add
or
fistpll
aaa
ret
inc
sub
jp
jbe
shl
push
sbb
jecxz
addr16
mov
sbb
or
ret
push
in
mov
imul
jbe
lods
mov
add
scas
push
mov
pop
mov
jnp
ficompl
xchg
xor
sub
cmp
mov
inc
sub
mov
mov
pop
xchg
scas
mov
sub
lcall
and
cmp
mov
jp
out
jb
daa
sub
jbe
fidivrl
dec
out
sub
mov
or
push
push
mov
cmp
leave
push
cmpsl
pushf
ja
push
ljmp
dec
fcomps
mov
cwtl
icebp
jge
lret
clc
mov
pop
inc
cmpb
decl
jecxz
call
push
xor
or
repz
icebp
lret
stos
fwait
sbb
inc
add
xor
mov
jge
ljmp
loopne
sub
fs
aaa
lcall
fisttps
lret
hlt
and
cmc
ret
out
xlat
scas
xchg
sti
sub
inc
mov
mov
xchg
push
sub
popf
dec
aas
or
mov
dec
scas
jbe
and
outsl
hlt
mov
or
movsb
pop
inc
repnz
dec
jmp
sub
out
sub
xor
je
and
and
pop
adc
xor
movshdup
pcmpgtw
test
push
add
or
jbe
clc
jbe
pushl
or
sbb
lods
adc
jo
mov
push
ret
adc
jns
into
mov
out
decb
mov
aam
rcll
sahf
test
mov
jl
notb
decb
mov
cmpsb
cmovo
test
cltd
adc
test
adc
add
sarl
jne
push
cmp
sahf
pop
cli
cli
sar
and
nop
xchg
cmpsb
nop
lahf
cmp
or
add
or
pop
call
cmc
pop
xchg
les
dec
cmp
in
out
out
shrl
sarl
xor
xor
call
jns
jns
mov
test
in
cmpsb
xorb
jg
lcall
push
nop
repz
dec
push
test
cwtl
into
push
dec
cmc
out
push
cmp
dec
push
shrl
push
sub
push
xor
andb
inc
clc
mov
adc
fiaddl
outsl
dec
add
cmpsl
inc
adc
sub
test
jle
sub
push
mov
mov
shlb
push
out
aam
ds
sub
rcll
add
cmpsb
outsl
jns
adc
adc
data16
aam
mov
add
enter
push
add
js
addr16
daa
je
shl
aas
pop
testb
adc
mov
in
cmp
mov
jle
dec
cld
add
cmp
fucom
jg
loopne
ss
sub
in
push
aad
mov
jb
jecxz
mov
mov
jecxz
push
sub
xchg
jno
add
jp
inc
pop
daa
das
subb
test
xchg
in
and
movsl
pop
sbb
sub
inc
adc
or
pop
lahf
adc
call
jbe
das
lock
and
sub
mov
inc
xor
or
lods
mov
mov
or
jb
jle
push
shl
jno
push
movsb
add
outsl
add
hlt
std
inc
cmp
add
std
add
fstpl
cmp
adc
mov
jg
sbb
xchg
call
fimull
jne
dec
xchg
mov
mov
mov
xchg
push
mov
or
jg
neg
and
push
xchg
lock
xchg
jl
sbb
cmp
mov
xchg
clc
mov
notl
or
outsl
adc
or
add
mov
lret
xchg
bnd
popf
sti
push
jl
push
inc
mov
sbb
mov
mov
xchg
inc
into
add
js
loop
sub
sbbb
xchg
ds
ffree
mov
repz
lahf
sub
add
ret
mov
jnp
bound
lock
bsf
sbbl
orb
test
aaa
fs
mov
inc
mov
out
lods
ret
ds
ss
sbb
clc
and
add
adc
dec
es
inc
xchg
call
mov
aam
inc
mov
jecxz
mov
cmpsl
xchg
add
repz
pop
aad
inc
add
sub
xchg
and
and
sub
cmpsb
pop
add
mov
add
fs
and
push
sub
xchg
jmp
data16
mov
and
inc
xchg
add
adc
push
and
mov
and
or
dec
push
mov
dec
ja
add
fisttpll
ljmp
rolb
mov
call
or
icebp
and
xor
neg
test
push
and
dec
js
push
cmp
cwtl
push
pop
push
lds
sub
xor
loop
outsb
jmp
cld
testb
mov
insb
lds
dec
fldl
mov
sub
leave
fdivr
xor
rolb
scas
stos
push
out
pop
sarb
loop
mov
fidivs
pop
rolb
jl
add
fwait
xchg
pushf
cmp
subb
cmc
push
fs
rcr
add
add
je
fcom
jecxz
dec
subb
xchg
xor
mov
mov
sbb
addb
push
int
mov
sub
pop
jne
and
cltd
pop
jne
fidivl
stos
sub
or
repnz
orl
lds
cld
test
or
mov
adcb
test
mov
push
sub
pop
xchg
pop
sbb
mov
jne
adc
test
hlt
iret
mov
out
mov
fistpll
cs
fsubl
mov
mov
fwait
adc
jl
push
add
pop
popa
and
fbstp
dec
jge
dec
in
sub
jnp
inc
add
inc
icebp
and
andb
incl
and
mov
repz
push
loop
push
sub
and
das
push
cmp
xor
outsb
les
outsb
hlt
add
jmp
ds
xchg
repnz
xchg
mov
test
or
cmp
adc
pushf
sbb
push
and
push
inc
pop
insb
rcr
jle
sbb
mov
fstpt
js
test
xchg
das
jecxz
fistps
addr16
outsb
aad
mov
aaa
aas
mov
push
xchg
xchg
popa
fisubrs
xor
mov
pop
test
into
jbe
dec
mov
jp
xor
xchg
or
mov
sbb
loopne
cs
mov
xchg
ss
testl
jle
mov
xchg
outsb
enter
mov
orl
dec
pop
aaa
pop
dec
sbb
mov
jo
mov
inc
jecxz
cmpl
mov
subl
iret
loopne
pop
add
xlat
inc
jbe
clc
push
mov
push
xor
or
lea
mov
aaa
push
pop
ret
in
repz
pushl
mov
and
test
cmp
jns
jge
dec
inc
jle
fwait
push
iret
int
call
enter
push
cmp
jno
cmp
aaa
ror
lods
out
mov
sarb
adc
mov
or
add
sarl
flds
sbb
adc
out
lods
xchg
push
push
xchg
and
sbb
jae
mov
jne
mov
scas
dec
ds
outsl
or
add
test
xchg
push
incb
inc
xchg
out
lock
insl
flds
testb
mov
sub
das
cmp
mov
cmp
sbb
loopne
sti
lahf
jns
push
ret
outsl
pop
stc
icebp
push
inc
frstor
cmp
and
in
jle
dec
icebp
pop
add
xor
or
ds
insb
add
insb
loopne
or
aaa
fisttpl
int3
sbb
out
cmp
clc
adc
lds
mov
adc
rcl
or
in
adc
mov
addr16
das
loopne
lds
inc
lahf
lret
adc
inc
sub
scas
or
sbb
in
mov
fisubl
pop
icebp
rclb
shlb
daa
subl
jo
int
addb
add
sbb
mov
inc
sbb
push
mov
add
movsb
or
cmp
adc
adc
jno
jp
lods
mov
lock
add
in
fsubl
outsl
dec
pushf
push
pushf
sub
add
cli
add
sbb
adc
dec
pushl
xchg
xor
mov
adc
sub
lret
in
shrb
inc
cli
loop
and
inc
outsl
in
inc
or
lock
aam
out
out
jbe
add
cmp
mov
sub
cmp
xchg
in
xchg
or
loopne
repz
rcll
and
or
dec
int3
adc
or
mov
jmp
xchg
inc
pusha
mov
scas
sub
lock
push
hlt
scas
aam
mov
push
and
add
sub
mov
test
popf
shll
xchg
pop
add
enter
add
hlt
add
and
xlat
jae
cmc
jno
mov
adc
and
fmull
mov
add
les
rolb
repz
add
shl
ficoml
push
inc
scas
sbb
push
pop
and
or
ja
cli
dec
sbb
pop
pop
push
push
inc
dec
sbb
cmp
inc
dec
push
les
pop
lret
test
mov
cmp
std
addl
add
add
mov
cmp
pushf
inc
cmc
das
ja
add
or
test
adc
or
adc
fisubl
xchg
stos
xchg
ficompl
sbb
sub
xlat
xor
and
movsl
or
shlb
call
xor
sti
leave
mov
add
movb
aas
or
mov
pop
mov
push
dec
add
sbb
call
arpl
popf
pop
push
aaa
sbb
xor
and
add
mov
push
adc
arpl
je
and
int3
add
lds
mov
and
roll
fdivl
jle
btr
fsubrl
mov
push
cmp
cmp
rcrl
test
fmul
or
mov
dec
pushf
mov
or
sub
test
jae
add
cmp
movsb
scas
add
jbe
and
adc
addr16
add
xchg
and
xchg
and
cmp
jecxz
dec
mov
mov
sub
nop
jmp
dec
sub
inc
mov
sbb
fcoms
lds
mov
inc
and
jmp
xor
adc
mov
jge
dec
pop
mov
inc
jae
stos
lods
cwtl
sbb
insb
add
jle
roll
push
orb
fists
hlt
shlb
add
sahf
std
pop
ret
sbbb
push
fld
inc
test
xor
ljmp
push
push
stc
data16
lods
sbb
bound
pushf
or
xor
add
test
in
jo
and
and
fwait
stos
mov
and
repz
mov
faddl
pop
cmp
lahf
push
xchg
fadds
hlt
daa
push
fldl
push
mov
sbb
xor
sub
push
and
cmp
mov
sbb
jg
call
out
mov
pusha
xchg
repnz
inc
aaa
jmp
xor
add
lods
mov
movsb
and
sub
pop
xor
ljmp
outsl
pop
call
inc
adc
in
mov
dec
cmp
std
cld
out
leave
cmpsl
movsl
pop
jae
lcall
push
dec
and
mov
push
mov
xchg
pop
lods
sbb
pop
shrb
xchg
enter
notb
xor
add
sbb
add
imul
aas
mov
stos
or
sub
out
cltd
scas
ljmp
test
fwait
sahf
pushf
mov
push
xchg
push
lods
rcrb
movsl
add
andb
scas
fwait
je
stos
sbb
sub
in
cld
jecxz
push
pop
in
add
add
adc
xor
push
mov
loopne
xor
pop
lahf
add
idiv
pusha
cld
inc
test
loop
int3
sbb
and
pop
mov
popa
push
clc
cld
hlt
adc
in
aam
cld
dec
idivl
inc
lock
or
add
mov
mov
xor
add
jb
xor
xchg
stos
add
mov
xchg
and
sub
mov
pop
les
or
aaa
add
and
stos
loope
les
sub
adc
xchg
movsl
arpl
mov
pop
ljmp
and
mov
aam
inc
inc
sub
dec
xchg
adc
cmpsb
cltd
jae
leave
mov
fadds
pusha
or
loopne
lds
or
push
insl
hlt
out
pop
in
sub
loop
push
rep
pop
inc
dec
rorb
mov
pushf
push
insb
mov
js
mov
lret
xor
shrb
subl
repnz
push
testl
adc
adc
xchg
cmp
adc
add
or
lock
pop
push
fcoml
faddl
pushf
jae
xor
pop
push
pop
adc
add
in
loopne
pop
push
cmp
movsl
cltd
or
dec
les
adc
outsl
xlat
cmp
pop
dec
mov
cwtl
mov
mov
add
cmp
lcall
in
fmull
pop
hlt
adc
mov
adc
or
and
and
adc
clc
push
mov
mov
incb
push
stos
rorl
push
pop
add
add
sub
and
iret
mov
push
call
dec
and
pop
mov
push
sub
mov
add
fistpl
faddl
rolb
xor
je
test
cld
imul
and
dec
adc
shll
bound
pop
mov
sub
pop
or
xchg
add
jg
add
cmpsl
and
ja
aas
xorb
sub
xchg
push
pop
notl
mov
clc
inc
lods
test
add
imul
sub
add
in
dec
inc
cwtl
test
mov
inc
hlt
cwtl
mov
roll
mov
fucom
jb
pop
and
jbe
shl
sbbb
fwait
push
imul
add
sbb
add
ret
in
pop
and
fdiv
aam
popf
mov
filds
mov
mov
and
hlt
jmp
adc
mov
sbb
clc
mov
mov
sbb
push
jecxz
decb
fiadds
cmp
jecxz
scas
jp
arpl
decl
ficompl
movsl
add
out
sbb
out
inc
dec
hlt
and
arpl
add
shlb
inc
lock
jo
pusha
incl
adc
out
mov
push
repz
bnd
cmpb
outsb
inc
mov
lahf
inc
arpl
inc
subl
xchg
lock
cwtl
push
dec
popf
pop
cs
xor
into
cmp
mov
cli
or
dec
sarl
in
inc
adc
mov
push
mov
ljmp
sahf
fcomps
pop
loopne
jo
popl
or
jo
xchg
or
sub
push
lret
cs
or
and
aam
nop
lea
jb
aam
mov
adc
movb
ficompl
sarb
adc
push
int3
stos
mov
add
nop
jnp
aad
jno
sub
test
and
or
or
mov
jbe
lock
roll
sahf
cli
jp
xor
addl
sbb
cmpsb
jge
xchg
fisubrs
lret
popf
test
lcall
in
test
call
jns
out
pop
or
andb
scas
pop
or
or
int3
push
mov
sbb
add
push
xchg
adc
ljmp
insb
add
inc
mov
mov
adc
or
mov
xchg
or
aam
jo
repz
jl
push
mov
adcl
mov
sbb
ret
out
and
or
mov
mov
test
es
adc
dec
aam
rorb
loopne
sub
sarl
mov
push
scas
add
subb
inc
xor
push
pop
clc
addb
add
push
and
ret
push
mov
out
mov
mov
adc
arpl
push
xchg
test
jae
adc
mov
ds
into
jl
fsub
fwait
shlb
icebp
movsl
push
test
push
mov
mov
sbb
test
dec
xor
cmp
loopne
das
push
out
xor
jnp
push
arpl
shl
inc
inc
jbe
data16
fdiv
ret
es
jmp
dec
jg
pop
imul
arpl
hlt
insb
xor
shlb
clc
push
push
add
dec
add
dec
inc
inc
pop
iret
sbb
arpl
pop
push
push
mov
mov
dec
xor
push
mov
in
sarl
popa
mov
leave
lods
insb
sbb
sahf
gs
jo
inc
out
cmp
adc
or
mov
jp
sbb
and
or
xchg
jg
mov
js
ficoml
dec
ja
sub
dec
loopne
inc
seto
add
inc
loopne
mov
in
or
add
xor
push
shrl
push
andb
int3
and
push
nop
call
or
push
ret
add
addb
pop
add
enter
xor
pop
push
cmp
loop
cmc
outsl
sti
das
mov
inc
mov
jge
dec
add
pop
out
icebp
inc
mov
jge
mov
or
adc
pop
dec
cmp
push
leave
push
mov
in
fstpt
adc
je
inc
xchg
xchg
push
add
lret
and
cld
xchg
in
sub
sahf
or
xchg
sbb
jb
jno
add
sbb
push
arpl
inc
imull
jg
dec
mov
mov
or
in
popf
jb
jno
and
mov
adc
jbe
mov
fimull
cwtl
add
jl
dec
test
cmp
scas
into
andb
pop
int3
jg
or
xchg
adc
dec
loopne
pop
sarl
in
ret
icebp
xor
adc
and
sub
or
test
jmp
cmp
testl
inc
add
add
add
and
push
push
push
xchg
out
sbb
cmp
xchg
sbb
and
push
xchg
lock
adc
pusha
aam
mov
inc
sub
rolb
adc
xchg
dec
jecxz
inc
mov
sti
xchg
inc
les
sbb
or
or
ret
add
push
inc
cmp
movsb
pop
inc
cmp
sbb
dec
push
xchg
push
jmp
mov
xchg
xor
test
test
dec
in
out
inc
cmpb
sbb
int3
fcoms
inc
hlt
lahf
jb
loopne
adc
xor
fld
adc
pop
push
sbbb
sbb
lock
outsl
mov
icebp
imul
or
pushl
jecxz
cmp
sub
cmp
fnstsw
xchg
jbe
jno
jecxz
les
adc
xor
cld
mov
jo
cmp
lock
insl
lock
or
sub
into
and
xchg
xchg
cmc
aaa
adc
mov
or
inc
sub
fstpl
ret
mov
cli
filds
mov
lcall
mov
adc
lcall
pop
jp
stc
adc
test
lahf
push
or
inc
data16
inc
cmp
dec
das
fs
sub
rolb
loop
or
sbb
and
insb
cmpb
adc
pop
push
les
cwtd
xor
test
sbb
adc
out
and
xor
jg
call
add
clc
inc
jle
rcrl
or
cmc
mov
mov
jl
in
orl
inc
lret
mov
sub
add
pop
int
mov
fs
cld
cmp
dec
or
mov
inc
xlat
adc
xor
xchg
push
repnz
clc
mov
mov
sub
movsb
dec
adc
pop
aam
cmpsl
icebp
cmp
inc
jbe
adc
mov
jg
mov
imulb
test
jo
mov
jg
dec
cmp
mov
pop
dec
add
ret
sub
adc
lock
or
addl
mov
mov
add
push
in
xchg
test
arpl
sub
mov
shlb
leave
or
xorb
jo
repnz
lahf
mov
lcall
push
push
shll
xor
mov
notl
adc
xchg
sub
push
adc
insl
insb
es
add
push
cmp
stos
fmuls
xor
aam
xchg
sbb
mov
sbb
adc
inc
jbe
or
shll
test
ljmp
arpl
in
adc
or
cmpsb
adc
aam
add
movsb
pop
jle
adc
jno
sbb
xchg
push
es
add
dec
dec
dec
mov
ljmp
or
orl
das
mov
pop
add
xor
shll
les
and
add
mov
pop
call
insb
ret
pushf
mov
je
and
and
int
ret
dec
adc
imul
les
or
fsubrs
ljmp
lock
rorl
rorb
loop
mov
push
stos
fsubl
mov
inc
cli
sub
jnp
stos
sub
dec
or
iret
xor
push
add
test
push
mov
ja
loopne
shrb
mov
sub
inc
rorl
ja
add
xor
sub
loop
outsb
and
mov
mov
push
ret
push
flds
xchg
sar
adc
fbstp
mov
lcall
cmp
int3
movsl
dec
cwtl
xor
loopne
mov
mull
repnz
not
xchg
pop
xchg
adc
aad
nop
movsb
fsubrs
push
shrb
push
insl
add
cwtl
clc
out
add
cld
mov
into
in
and
outsb
iret
mov
scas
push
out
mov
inc
pop
imul
jno
sbb
arpl
cld
aaa
or
mov
cmp
dec
cmp
xor
ljmp
dec
cmpb
push
mov
insl
or
sbb
pop
and
js
push
push
cltd
lock
sbb
or
and
and
mov
scas
jae
enter
and
xchg
out
push
add
pop
je
adc
subl
add
add
and
sub
or
pop
test
mov
mov
push
imul
jbe
mov
test
cli
aaa
sub
sub
xor
cmp
add
es
cld
sarl
inc
xor
pop
pop
and
mov
or
and
pop
lods
pop
shll
mov
xchg
mov
rcr
rcll
pushf
icebp
pusha
insl
or
lock
fsubrs
rorb
inc
rcr
stos
pop
pusha
add
sbb
push
ljmp
push
js
sbb
xchg
or
testb
push
jne
cmp
xor
cmp
in
or
jle
inc
out
xor
jns
add
and
and
add
fcmove
in
add
std
sbb
outsl
adc
inc
pop
cli
in
fisubl
xorb
fcoml
inc
push
aas
fsub
in
shlb
pop
je
mov
inc
je
add
pop
aaa
jns
inc
pop
mov
stc
inc
cmp
jecxz
adc
incl
cs
pop
jecxz
lock
xchg
cwtl
cmpsl
pop
lock
scas
andl
jno
pop
test
xlat
sub
nop
repz
xchg
pop
sarl
ret
fcmovnbe
js
sahf
xor
cltd
rorb
pop
mov
mov
jg
sti
add
mov
sti
xchg
mov
in
xor
cld
inc
jmp
arpl
add
cmp
aas
xor
das
pop
mov
das
pop
sub
jp
out
sub
clc
sbb
xchg
sub
pop
ret
pusha
cmpl
push
bound
mov
inc
insb
inc
ret
inc
mov
push
pop
dec
adc
sarl
sub
mov
sub
push
shrl
xchg
mov
test
movb
mov
push
inc
fidivl
leave
adc
and
lds
call
xchg
add
orl
iret
mov
lretw
fisttpll
ds
daa
cwtl
xchg
movsl
cmpb
scas
hlt
sbb
jge
xor
xchg
adc
cltd
rcl
cltd
pop
or
or
sub
nop
lcall
stos
es
pushl
and
cmpsb
xchg
jb
or
inc
or
enter
and
xor
sub
adc
repnz
inc
jecxz
inc
xchg
sbb
push
jne
xchg
mov
jae
pop
pop
pop
mov
inc
push
fcoml
cmc
arpl
mov
push
in
inc
outsb
lods
and
add
cltd
inc
stos
lcall
add
xchg
insl
xchg
mov
hlt
enter
jg
insl
imul
or
cmp
dec
mov
loop
pusha
sbb
cltd
adc
outsl
arpl
test
inc
fs
jge
les
push
movsl
jo
stos
andl
sub
popf
add
xchg
ljmp
out
mov
mov
inc
or
sbb
enter
jle
and
shlb
call
push
les
rcr
mov
call
sti
pop
cwtl
aaa
rcrl
in
or
into
push
push
dec
cs
sub
adc
je
loopne
aad
test
push
pop
cmp
ja
fdivrs
mov
and
cmc
or
add
shl
or
mov
nop
xchg
lahf
add
mov
fsts
push
cmpl
push
pcmpgtd
loop
pusha
push
add
pop
push
lahf
dec
lcall
mov
rcll
nop
and
out
push
mov
mov
dec
pusha
push
pop
dec
push
popa
mov
and
test
inc
push
xchg
add
or
mov
dec
dec
jo
aad
xchg
addr16
je
aam
push
cmp
ljmp
das
mov
into
out
push
push
mov
mov
pop
dec
mov
addr16
iret
loop
mov
test
comiss
pop
sbb
sbb
inc
inc
sbb
jge
jb
add
loopne
gs
fstl
or
inc
in
ret
das
test
cli
insl
int3
aaa
cmpl
mov
arpl
cmp
stos
jecxz
ret
and
test
clc
aam
test
and
in
ljmp
movsb
std
mov
loopne
mov
inc
pop
ret
or
jp
sub
rorl
sub
jecxz
addb
mov
or
sub
push
ret
dec
sub
ret
and
incb
xor
cmc
cmp
adc
sub
outsb
mov
js
push
mul
jb
xchg
int3
adc
xchg
add
mov
movsl
inc
out
getsec
dec
rcr
push
push
xor
sarl
nop
loop
scas
and
pop
mov
lock
insb
add
sbb
mov
int
dec
ret
fbld
fsubrs
adc
cmp
add
add
and
or
cmpsb
push
sub
mov
mov
out
push
aam
shr
mov
inc
pop
or
movsb
or
mov
test
mov
aas
xor
dec
mov
xchg
fs
cmp
sbb
cmp
clc
outsl
jne
int
sub
dec
shr
aam
addb
pop
inc
jno
in
dec
pop
pusha
and
scas
and
cli
fdivrs
inc
cmp
mov
inc
mov
scas
test
cmp
nop
add
mov
fsqrt
sub
jge
jnp
pushf
mov
movsl
cli
xor
inc
mov
mov
lcall
mov
les
adc
jnp
inc
dec
insb
sbb
fnclex
add
pop
call
adc
mov
jno
pusha
js
dec
pop
or
aas
mov
cli
fisttpl
pop
rcrb
shrl
test
jbe
pop
out
cld
cmc
flds
lock
hlt
leave
pop
add
inc
mov
outsl
inc
mov
lock
in
adc
pop
mov
push
or
testb
xchg
popf
xor
dec
mov
sbb
outsl
sti
cs
jmp
lahf
outsb
cmp
mov
icebp
mov
jae
in
pop
mov
mov
iret
add
ljmp
and
mov
push
in
push
insl
mov
arpl
push
xor
or
stos
bound
mov
sub
cmp
bound
mov
mov
xchg
icebp
cwtl
xor
add
scas
fsubrs
xbegin
mov
sub
mov
add
adc
lds
fdivl
xor
fsubrl
shl
or
stos
or
fsubrs
mov
pop
xor
sub
lea
sub
stos
add
fbstp
sub
adc
xchg
push
adc
sbb
test
and
add
sbb
movb
loope
or
add
inc
push
les
adc
mov
shrb
lods
adc
stos
and
test
jmp
and
add
jge
int3
loop
in
push
inc
dec
lods
loopne
adc
or
adc
inc
mov
inc
cmp
fmul
xor
mov
jle
pop
gs
sub
or
cmc
mov
mov
loope
cmpsl
cmpsl
dec
orb
or
adc
add
mov
loopne
sub
dec
and
mov
xchg
test
mov
fadds
fisubrl
adc
rclb
add
in
subl
or
cwtl
les
clc
daa
aad
mov
jecxz
addb
pop
pop
jae
inc
mov
jb
int
inc
sub
adc
sub
ret
add
adc
pop
loopne
jp
cmpsb
pop
inc
mov
test
mulb
sbb
call
mov
jl
inc
add
pop
sar
mov
inc
mov
pop
in
test
push
aas
sahf
push
and
mov
xor
inc
mov
cmp
dec
lds
sbbb
pop
inc
shll
int3
and
xor
cwtl
andb
outsl
ss
pop
mov
adc
cmp
and
pop
push
fs
push
andl
xorl
adc
add
sub
aaa
ret
xor
jne
sub
xor
clc
inc
mov
and
xor
shrb
orb
loop
push
popa
adc
es
lock
shlb
movsb
arpl
adc
xorl
loopne
sbb
daa
cmp
or
xchg
jge
ljmp
mov
orl
mov
add
add
into
jno
cmpsl
pop
push
adc
mov
pop
cmpsl
add
cmp
cmp
daa
and
popf
jne
out
and
mov
inc
push
push
adc
fnstenv
inc
adc
cmp
adc
loopne
xchg
or
nop
or
leave
fs
dec
inc
mov
xor
adc
subb
sub
daa
orl
push
lock
mov
adc
xor
fildll
and
aas
dec
adc
int3
stos
int3
pop
xor
mov
into
push
push
mov
inc
clc
mov
mov
mov
and
push
jge
sub
inc
jae
jns
sub
mov
push
cli
lods
ss
es
mov
and
pop
xor
pop
xor
mov
or
stos
cmp
push
dec
adc
adc
or
inc
je
filds
test
xchg
popa
add
mov
jle
test
xchg
mov
fbstp
lcall
push
xchg
sub
rclb
into
bound
iret
cmp
jbe
imul
xchg
subb
adc
inc
xor
and
or
in
fwait
mov
push
arpl
ljmp
adc
push
in
or
inc
les
enter
daa
std
inc
aas
jmp
mov
pop
test
add
jne
mov
add
push
add
in
sub
and
add
clc
xchg
and
adc
pushf
sbb
adc
and
dec
adc
fwait
inc
jecxz
add
xor
popf
pop
adc
sub
xchg
adc
out
stos
data16
or
dec
inc
int3
fisubrs
or
mov
gs
xor
popf
inc
push
jnp
inc
mov
in
adc
jno
add
jge
out
ds
cld
cmpsl
xlat
aas
adc
or
jns
jns
add
icebp
movsb
sub
jl
je
ficomps
xchg
mov
ret
lret
mov
mov
jecxz
lds
sub
loopne
repz
inc
add
aas
jl
dec
pusha
fcomps
mov
outsb
lea
ljmp
mov
jp
add
call
add
cmc
or
loope
adc
xor
loope
test
or
jo
popa
fnsave
sbb
mov
sarb
sbb
rclb
or
xor
popf
sbb
add
sub
and
dec
mov
icebp
dec
add
fwait
xchg
stos
or
xor
dec
shr
mov
cld
add
shll
stos
pop
sti
repz
jle
jge
sarb
in
insb
in
pushf
mov
rclb
js
or
ret
and
add
push
scas
bound
xor
mov
sub
or
xchg
adc
frndint
sbb
les
xchg
push
scas
stos
push
je
hlt
or
cmpb
add
repnz
testl
sbb
push
leave
mov
or
roll
and
inc
adc
loopne
repnz
clc
movsb
and
ret
mov
lret
int
std
jmp
loopne
add
mov
adc
cwtl
test
out
jb
shrb
or
cmp
loop
ret
pop
push
fwait
or
or
mov
aas
jb
enter
pop
hlt
js
lahf
mov
adc
adc
inc
shll
aaa
add
cmp
xor
push
fbld
icebp
pop
addl
add
test
fldenv
and
int3
cmc
xchg
mov
out
je
aam
or
push
lcall
pop
adc
or
lock
or
xchg
jmp
mov
clc
mov
push
xchg
adc
xor
jmp
inc
scas
ret
loope
lds
je
arpl
push
outsl
and
dec
and
pop
sub
cld
cmp
xor
scas
aaa
icebp
push
rcrb
sbb
add
les
or
sbb
fdiv
loop
push
mov
pop
push
sbb
dec
and
adc
jno
sbb
dec
sbb
dec
mov
mov
jle
push
inc
add
loop
mov
ja
mov
sbb
xor
push
or
push
ss
pop
cmp
mov
push
bound
pop
mov
outsl
aam
ret
into
cmp
imul
cmp
mov
incb
rol
or
movsb
jb
cmp
das
or
pop
fwait
push
and
xor
push
nop
pop
add
push
inc
inc
dec
push
fs
dec
xor
cmp
cli
notb
add
fists
add
or
mov
sbb
add
push
cli
aaa
mov
shlb
cmp
incb
push
mov
sahf
dec
test
jg
sbb
pop
mov
and
fadds
loope
push
push
call
inc
arpl
push
fimull
sti
mov
jns,pn
add
ds
sbb
pusha
sub
mov
mov
mov
or
mov
or
pop
mov
les
add
push
xchg
andb
scas
xor
das
inc
mov
jle
add
cld
pop
mov
aad
icebp
insb
shlb
xchg
pop
xchg
cmpb
add
xchg
or
ret
push
mov
xlat
pusha
add
fistpll
pop
pop
rolb
adc
lods
ffree
adc
stos
adc
nop
out
mov
or
loopne
das
rcrb
sub
sbb
lock
dec
cli
mov
sub
rcr
xchg
aaa
add
data16
inc
push
insb
repz
pop
ljmp
int
mov
cmpsb
xchg
movsl
xchg
xchg
pushw
sbb
psadbw
in
jg
mov
in
or
clc
xor
pop
shll
add
roll
mov
xor
popf
bound
inc
sbb
pop
aad
add
lds
js
arpl
sub
gs
inc
push
jg
jne
out
cld
push
mov
inc
enter
jmp
negl
pop
test
ds
mov
add
xor
and
lahf
inc
call
adc
das
adc
jnp
pusha
jge
lds
ljmp
xchg
xchg
sahf
enter
jp
pop
std
and
and
fildl
call
or
fisubrl
movd
and
repz
push
sbb
sbb
push
dec
mov
mov
outsl
sbb
mov
loopne
xor
or
push
test
sarb
test
cld
int
lods
cmp
push
cmp
ja
xchg
and
adc
outsl
outsb
sub
xorb
popa
jg
add
push
popa
test
xorl
or
addr16
or
mov
xchg
fistpll
sbb
mov
add
test
and
popa
inc
lods
add
lds
pop
jg
pop
lcall
lret
iret
pop
xor
fiaddl
push
loopne
je
les
js
pop
jecxz
push
inc
jbe
push
push
fdivrp
add
dec
pop
lahf
nop
das
jne
stos
loopne
pop
mov
mov
clc
add
lret
mov
test
sar
push
jp
rorb
sbb
mov
popf
push
inc
rol
pop
and
adc
gs
les
ss
dec
ss
roll
or
cmpsb
dec
sarb
aaa
in
divl
push
mov
jg
lea
mov
cmpsb
jle
and
pop
push
mov
mov
add
xchg
dec
aaa
repz
pop
lcall
pop
pop
ljmp
nop
popa
int3
adc
mov
outsl
fdivr
or
sub
fs
test
inc
neg
jne
outsl
or
dec
add
lcall
lds
push
push
scas
pusha
repz
mov
push
mov
sub
sbb
dec
loop
mov
sar
mov
sbb
into
xchg
jbe
add
dec
faddl
lock
cmp
popf
and
add
or
rclb
and
hlt
stos
add
andb
test
or
mov
lret
xor
push
roll
inc
mov
xor
movsl
lock
aaa
or
insb
mov
and
and
hlt
mov
insb
adc
adc
jp
notb
mov
shll
sub
sbb
jno
pusha
push
pop
pop
les
inc
pushf
or
jmp
aad
xchg
jge
xchg
or
cmp
fdivs
fimull
inc
add
dec
loop
enter
add
in
subb
xchg
mov
aam
cmp
ficoml
mov
lret
push
xchg
popa
push
inc
rcrb
loop
push
pop
mov
or
or
andb
and
nop
xor
lock
inc
xor
repnz
orb
push
scas
sub
mov
fdivrs
stos
aam
movsl
sbb
cli
test
push
in
insb
scas
and
sti
add
xchg
aad
stos
or
fs
out
pop
add
nop
daa
lock
test
xor
push
add
loope
jecxz
stos
dec
loop
mov
inc
inc
in
inc
or
and
pop
xor
pushf
mov
je
mov
je
lcall
loopne
int
les
int
jb
jl
xchg
jnp
fprem1
std
pop
movb
add
dec
in
clc
xchg
or
xchg
and
sbb
out
mov
rol
or
ret
xor
mov
xorl
ret
and
adc
or
fistps
out
enter
repz
mov
dec
ljmp
adc
inc
clc
adc
push
adc
push
adc
add
jle
idivl
dec
test
sub
outsl
jge
lock
sti
js
jmp
test
mov
pusha
inc
jo
in
jo
lea
es
push
test
push
ja
mov
inc
shlb
cli
mov
push
mov
orl
lods
notl
mov
std
dec
mov
lret
sahf
les
dec
sbb
lea
incl
lret
mov
cmp
and
cld
pop
and
jb
imul
je
pusha
in
mov
pop
loopne
sub
jg
les
out
call
cltd
push
outsb
pop
fsincos
sbbb
out
pop
test
sbb
cmpb
fadds
jne
jp
das
in
inc
push
dec
dec
mov
insb
idiv
cld
dec
xchg
push
in
mov
cmpl
xchg
add
stos
stc
push
lock
cmpsl
push
fcoms
mov
icebp
or
insb
push
add
inc
inc
cmp
xor
subl
loope
jo
pop
inc
movb
xchg
inc
lcall
cld
mov
and
mov
or
and
icebp
xchg
mov
and
and
loop
shrl
popa
dec
test
sbb
pop
add
or
leave
xor
push
flds
pop
or
mov
fbld
scas
insl
std
out
aad
push
fisttpl
cld
add
ret
sbb
mov
add
out
imulb
cmpl
inc
inc
mov
jmp
orl
sub
imul
lcall
js
push
xor
cmp
push
add
jbe
scas
lea
push
fisubs
and
cmp
ja
ja
inc
cmp
or
dec
pop
loope
lcall
xchg
push
cmpb
gs
mov
fisttpll
mov
ret
xor
jne
pusha
mov
das
jno
jbe
ror
push
sbb
sbb
and
xchg
and
or
add
jle
push
test
in
push
dec
test
loop
mov
jo
mov
jle
icebp
das
das
es
mov
out
iret
xor
dec
arpl
push
cwtl
lods
fstl
out
stos
gs
movl
mov
testl
or
add
decl
jne
xor
outsl
fcomi
xchg
mov
out
out
pop
mov
add
cli
push
es
outsl
stos
gs
jnp
pop
mov
or
xchg
push
fmulp
dec
ret
shll
aad
push
push
jecxz
add
xor
inc
jle
inc
rcll
leave
enter
mov
hlt
or
cmp
scas
mov
arpl
sub
testb
lcall
cmp
dec
xchg
xchg
push
das
les
mov
sbb
fmuls
sbb
cmp
pop
xchg
xchg
adc
iret
dec
inc
push
call
or
mov
dec
sub
xor
adc
or
add
mov
and
and
push
test
imul
ffree
les
mov
and
pop
jnp
or
bnd
adc
mov
rcll
shrl
or
cmpl
push
in
out
lea
cmpsb
dec
or
mov
sbb
xlat
sbb
mov
les
aam
lcall
test
orb
mov
fcoms
add
cmp
add
fcmovnb
sbb
mov
sahf
jne
clc
inc
add
jnp,pt
jmp
and
loop
add
out
in
pop
push
mov
testb
inc
cmp
rcll
loope
fs
inc
inc
push
jp
adcb
add
je
adc
fwait
xlat
bound
mov
sub
sub
push
jno
loope
mov
xor
hlt
push
rcrb
add
out
adc
push
mov
inc
mov
shlb
sbb
gs
je
lret
mov
nop
stos
cli
add
loopne
and
xchg
sub
dec
mov
inc
adc
loop
xor
icebp
push
loopne
in
sub
rolb
sahf
loop
andb
icebp
xor
pop
push
ret
xorl
push
adc
fsubrs
ds
xor
add
daa
stos
xor
xchg
ret
fwait
shlb
or
cli
pushf
lods
loop
sbb
dec
add
shlb
sub
out
mov
pop
aam
in
mov
orw
loop
lods
mov
inc
test
or
add
or
xchg
inc
out
jno
mov
and
adc
ret
shl
xchg
pop
mov
and
sub
test
leave
in
stos
cmpsb
or
in
mov
dec
sarl
xchg
stos
or
sahf
andl
int
mov
and
enter
stos
adc
push
adc
inc
sub
push
out
xchg
push
rorl
mov
orl
mull
or
iret
xlat
xchg
test
pushf
jns
in
rorl
jns
pop
or
shr
mov
sub
icebp
data16
test
fidivrl
lret
iret
lock
inc
pop
sub
add
add
sbbb
js
adc
xchg
push
imul
ret
mov
adc
pop
das
sub
jle
jne
mov
ja
das
dec
xchg
mov
push
out
test
fs
adc
shrb
pop
pop
inc
rolb
mov
jecxz
add
push
sub
mov
add
loopne
data16
push
sbb
inc
ret
adc
pop
pop
xchg
jo
adc
jno
or
ds
scas
mov
sbb
push
xor
or
dec
jo
in
adcl
pop
test
and
shll
in
pop
ljmp
rclb
gs
xor
mov
push
push
insl
push
mov
in
jnp
fistl
stc
adc
in
lcall
and
pop
adc
aam
push
sub
jecxz
imul
sbb
jae
lods
cmc
push
push
add
loopne
es
addl
add
and
sub
rorl
push
stos
pop
push
xor
notb
dec
or
add
xor
mov
lock
adc
sub
ljmp
iret
insl
jg
out
ljmp
dec
add
fcompl
jo
outsl
cmp
in
lock
enter
mov
rorl
test
dec
test
pop
subb
aam
lret
xor
push
jno
pop
cmpsl
pop
xor
cmp
sub
push
rorl
mov
sub
or
pop
cmp
push
mov
sbb
rcll
sbb
lea
shll
push
mov
popa
mov
mov
aas
mov
cmp
faddp
jge
jbe
dec
out
stos
push
add
cmpsl
sahf
subb
inc
mov
bound
mov
xor
inc
mov
adcb
cltd
jecxz
xor
or
mov
inc
adc
je
call
push
cmp
les
jl
int3
icebp
adc
jg
stos
in
mov
stc
add
push
les
mov
fildl
bound
dec
iret
data16
into
popa
mov
decl
xchg
push
inc
pushf
pop
sub
push
and
inc
std
or
adc
testl
inc
test
stc
and
popa
pop
xchg
dec
xchg
xlat
mov
sub
adc
dec
adc
mov
xchg
mov
cs
int
or
loop
lock
bswap
adc
jne
add
fiadds
andl
enter
xor
and
pop
sub
test
or
xchg
pusha
add
cmp
arpl
loop
xchg
testb
mov
sahf
stos
addb
mov
push
jmp
adc
jo
lods
sbb
lods
sub
or
push
gs
lcall
push
and
xchg
mov
and
les
das
aad
test
sub
adc
mov
sti
cmp
sarb
sub
out
or
rcrb
adc
add
add
pop
cmp
out
nop
cmp
js
aad
add
adc
cmp
stos
pop
xorb
clc
cmpsb
popa
or
mov
sub
lcall
push
jge
cs
hlt
jnp
out
inc
dec
aam
inc
mov
addb
dec
inc
adc
dec
and
xor
sub
sbb
mov
push
clc
stos
rorb
loopne
mov
inc
adc
iret
ficoms
fucomi
popa
add
adc
cld
repnz
mov
dec
and
hlt
inc
dec
push
hlt
sbb
mov
jp
lds
jo
and
subb
sbb
xor
movsl
xchg
shlb
or
cld
js
shrl
scas
cmp
jp
in
lods
shll
add
out
pop
in
sahf
int
add
sbb
out
and
dec
jno
sbb
push
dec
rolb
xlat
mov
push
andb
or
pusha
jbe
in
stos
sub
andb
aam
jbe
inc
lds
mov
xor
les
arpl
in
in
andb
ret
mov
push
in
add
or
pop
rcrb
xlat
add
and
dec
add
sbb
adc
xor
xor
lea
dec
cmp
xchg
dec
xchg
pushf
sub
leave
jne
or
mov
adc
addb
sar
rcrl
clc
lret
add
adc
xchg
adc
ficompl
sbb
lret
sar
mov
xchg
mov
cmp
and
add
test
mov
push
in
fnsave
sub
out
pop
jg
mov
and
jl
dec
int3
ret
mov
and
xor
mov
inc
lods
orl
les
dec
push
dec
adc
lock
roll
and
pop
aam
in
in
jne
call
pop
int3
push
mov
push
mov
data16
adcb
ss
push
or
repnz
xorl
jbe
pop
inc
add
je
mov
shll
insl
imul
push
jg
pop
mov
cmp
lcall
xorb
mov
mov
mov
incl
fimull
fistpl
test
or
jge
call
cmpsl
movsl
xchg
adc
dec
lcall
movsb
out
ss
inc
andl
shll
andl
insl
outsl
call
ret
adc
sbb
mov
dec
adc
roll
sbb
fildl
jp
cmp
shlb
add
je
push
bound
dec
out
push
jle
mov
std
inc
popf
scas
insb
add
jbe
add
xor
imul
add
adc
xor
lock
movq
les
mov
stos
mov
mov
mov
shrl
sbb
cmp
sbb
fbstp
or
mov
mov
jb
jne
fs
fcomi
pop
inc
add
out
lods
xchg
pop
sbb
jo
outsb
ret
sub
inc
orb
dec
out
je
fwait
push
subb
mov
out
add
sbb
add
xchg
rcrl
or
and
jo
in
sbb
jg
popf
xor
add
aam
xor
mov
push
lcall
cmp
repz
pop
mov
gs
cld
cmp
cmc
ffree
mov
xor
call
rorb
out
shrb
jg
pop
mov
pop
or
jae
in
lds
adc
in
scas
rorl
xor
fcmovnu
repnz
cmp
cli
movsl
and
arpl
xchg
lea
xchg
and
jbe
out
test
rorb
mov
or
mov
cmp
leave
shlb
setnp
pop
jecxz
mov
adc
lods
mov
movsb
mov
xchg
push
and
and
cltd
add
clc
jg
scas
sub
sub
xchg
adc
icebp
or
lods
mov
dec
cld
movsl
or
xchg
stc
cmp
decl
pusha
subb
sarl
std
pop
adc
dec
ljmp
jo
repnz
inc
push
mov
std
cmp
cmpl
mov
or
movsb
lcall
xchg
inc
push
sbb
jno
push
mov
jg
mov
sub
ret
cmp
test
sbb
mov
push
push
lret
mov
gs
testb
add
enter
popf
inc
pop
pop
cltd
push
negl
sub
fwait
mov
inc
cmp
sti
arpl
or
out
mov
pop
cmpsb
mov
int
mov
stos
shrl
xlat
rcrb
pop
fdiv
scas
loope
cltd
mov
pop
inc
pop
insb
rorl
lret
adc
ss
int3
shr
jbe
loope
sarb
hlt
mov
cs
pop
clc
ja
xchg
mov
je
icebp
push
dec
xchg
test
jge
ja
jl
pop
das
data16
movsl
imul
cld
inc
cmp
mov
pop
imul
hlt
lea
into
aas
and
sbb
push
fldl
js
sbb
push
divl
pushf
outsl
or
popf
mov
or
cmpsb
lfs
and
lock
fisttpl
mov
pop
mov
js
or
add
inc
inc
adc
mov
sbb
dec
push
push
test
push
imul
icebp
pop
pop
add
popa
mov
adc
std
jbe
fiadds
popf
mov
inc
push
jg
jmp
adc
dec
mov
shr
adc
sbb
xchg
hlt
mov
and
xor
dec
sbb
mov
bound
movsb
pop
xor
pop
inc
pop
push
lret
mov
test
cld
add
lret
xchg
lret
stos
sub
adc
add
fs
lahf
insb
push
sbb
mov
xor
push
mov
jno
pop
sbb
iret
daa
call
cmc
fsubrl
stos
fs
popa
and
dec
test
inc
mov
adc
inc
adc
dec
or
pop
cmp
inc
shl
and
cmpsl
dec
mov
data16
arpl
movsb
sbbl
aad
rcll
fisubl
imul
push
adc
aas
adc
ret
xor
or
mov
inc
rclb
scas
and
lahf
add
test
jb
inc
nopl
add
dec
mov
dec
inc
out
dec
test
push
loopne
in
in
enter
popl
pop
test
push
scas
in
popf
insb
inc
cltd
push
adc
add
add
xchg
pop
adc
sub
pop
sbb
nop
and
mov
add
push
dec
add
inc
mov
push
jno
adc
sub
dec
adc
add
xchg
dec
jne
jb
adc
add
mov
cmpl
push
mov
add
or
lods
call
pop
add
call
inc
sub
iret
cmp
cli
imul
adc
mov
xor
mov
fwait
mov
or
loop
push
add
out
adc
ljmp
jecxz
pushf
jno
and
loopne
xlat
cmp
lds
xor
fmul
and
push
rolb
mov
mov
xchg
xchg
movsb
push
jl
stos
pusha
pusha
adc
add
ficoms
pop
inc
xchg
add
cmpsl
js
ret
and
jno
loope
rolb
mov
jmp
scas
divb
push
jns
fcmovnbe
ret
sti
ret
push
mov
js
xchg
inc
lock
cli
or
cmp
sbb
insl
call
sub
fisubrs
cmc
bound
outsb
add
mov
pcmpeqb
pop
adc
je
std
mov
inc
cmp
push
ljmp
sub
add
loope
fldcw
sub
or
mov
jg
rcrl
js
stc
pop
or
enter
mov
jl
mov
sbb
sub
sbb
mov
inc
push
push
mull
out
out
mov
jo
incl
ss
loope
loop
pushf
mov
adc
jno
jl
xor
sbb
jle
daa
mov
sub
mov
mov
dec
call
mov
dec
push
sbb
fcmovb
sar
xor
icebp
mov
cltd
sbb
sub
adc
in
and
pop
and
mov
mov
fstl
idiv
scas
repz
out
loop
jns
movsb
daa
sti
scas
test
aad
push
aaa
ds
ret
and
xor
xorb
loope
incb
adc
loopne
int
and
gs
sbb
mov
mov
lock
xchg
mov
fiaddl
add
ljmp
ret
or
imul
iret
add
enter
lcall
js
enter
jnp
inc
stc
in
add
dec
add
inc
cwtl
push
cmp
add
lret
lock
xchg
sbb
sti
pop
cld
outsl
sbb
in
stos
cmp
ljmp
movl
mov
pop
loop
clc
decl
xchg
push
sarl
das
pop
mov
dec
stos
mull
mov
lcall
mov
fstps
popa
icebp
jno
push
out
adc
jecxz
loope
push
sbb
xchg
cld
jl
test
push
xor
call
ljmp
inc
push
push
inc
mov
cmpsl
dec
add
mov
push
push
cli
outsl
mov
cs
test
mov
and
add
lea
add
movsl
in
fbld
push
xor
cmpsl
sbb
mov
mov
addb
pop
mov
and
sbb
stos
js
mov
iret
mov
xchg
xchg
push
mov
jae
mov
pop
into
cwtl
nop
je
inc
outsl
faddl
sbb
or
fdiv
insl
mov
mov
xchg
je
sahf
mov
inc
mov
jmp
in
mov
pop
das
clc
psubw
pop
xchg
jo
sub
jnp
test
xor
hlt
push
dec
je
add
adc
ror
or
sub
jns
test
hlt
adc
clc
roll
jle
pop
cs
int3
xlat
dec
out
sti
adc
xchg
lock
xchg
ja
sbb
inc
outsl
mov
sub
aaa
divl
loope
xchg
push
into
dec
or
and
lcall
xor
adc
xchg
dec
mov
jno
lock
add
sahf
fbstp
out
inc
and
xor
inc
pop
or
clc
mov
dec
popa
sysret
leave
pop
daa
lods
orb
pop
outsb
xchg
or
mov
xchg
jbe
jg
std
sbb
nop
cltd
pop
jp
outsl
icebp
push
cld
jne
les
call
lcall
pop
ss
inc
or
adc
and
lock
mov
adc
cmp
loopne
adcl
call
fisttps
imul
jl
pop
sub
inc
jbe
shl
fisubl
inc
rcl
movsl
insb
repnz
adc
in
cmpsb
lea
mov
insl
test
js
rcr
sub
jp
lock
xchg
in
subl
cmp
sbb
rorb
sub
jo
aaa
jb
xchg
add
scas
or
and
add
ret
mov
xchg
faddl
test
into
mov
xchg
les
insb
adc
shld
adc
lea
enter
insl
fdivrs
hlt
faddp
test
inc
pop
ljmp
ja
adc
add
aaa
pop
lahf
adc
lahf
popa
dec
add
cmp
nop
popa
cmp
jg
out
pop
mov
sbb
ljmp
inc
popf
or
cmp
lcall
imul
cmc
mov
adc
lea
cmp
in
cmp
pop
mov
addb
lcall
js
mov
inc
inc
sub
mov
divl
mov
sub
and
mov
stc
xchg
cmpsb
incb
cs
lret
cmp
sbb
loope
mov
mov
mov
out
jo
das
adc
pushf
out
inc
sub
insl
cmp
dec
add
das
loopne
cmp
sbb
lods
ret
xor
jmp
or
jb
loopne
xchg
push
repz
sub
pop
pop
in
sbb
mov
mov
call
cwtl
jp
push
adc
xchg
jle
pop
or
mov
loopne
cmp
or
hlt
insb
sbb
fsubl
adc
pop
adc
dec
rolb
pop
dec
ret
xlat
ljmp
stos
stc
fs
mov
xor
jmp
bound
mov
test
push
mov
and
shrb
mov
sbb
push
or
inc
or
inc
data16
push
add
cmp
outsb
mov
mov
jp
push
loope
jb
mov
enter
or
call
mov
jb
mov
sub
or
es
aam
xor
xor
test
lret
int
xchg
mov
addr16
mov
into
out
jle
lea
gs
popl
mov
mov
ljmp
inc
int3
sub
jns
sub
push
add
insb
cld
jmp
dec
fdivrl
push
cwtl
fsubrs
stos
orl
jg
test
fisttpl
jmp
int3
inc
gs
outsl
adc
mov
push
enter
adc
jmp
sti
or
mov
scas
data16
dec
adc
or
loopne
out
xor
and
scas
insb
test
mov
xchg
ljmp
or
adc
or
mov
xor
rorb
mov
push
ficomps
inc
jo
sbb
adc
adc
mov
mov
outsl
jg
push
mov
add
inc
mov
push
js
nop
adc
lock
sahf
movsl
sbb
in
std
popf
or
aaa
push
orb
addr16
mov
loope
jecxz
pop
and
push
xor
hlt
or
je
push
dec
into
mov
pop
push
fcmovnu
push
in
mov
and
lods
into
pop
test
xor
xor
dec
std
mov
shll
mov
pandn
mov
xchg
mov
adc
pop
inc
dec
xchg
arpl
jp
pop
pushf
lahf
xor
cli
push
mov
sub
sub
movl
shll
jae
jp
mov
pop
out
sub
mov
filds
sub
push
push
or
cmp
popl
shrb
lds
jg
insb
fistps
outsb
sarl
sbb
mov
push
xchg
data16
cmp
add
push
fiadds
push
jns
mov
filds
adc
inc
fistpll
sub
lahf
cmp
pusha
das
or
aad
mov
adc
add
sti
fwait
xlat
push
clc
cwtl
rcll
and
mov
pop
in
dec
pop
xchg
jno
or
mov
mov
jmp
outsb
sbbl
xor
xor
pop
xchg
hlt
iret
mov
dec
mov
adc
ret
repz
xor
xchg
inc
loope
loopne
in
cmpsb
adc
shrb
out
js
lock
ss
leave
inc
lahf
push
jb
jg
fisttps
push
stos
sbbb
inc
cmc
sub
jmp
xor
hlt
shll
and
xchg
mov
lcall
rclb
ja
pop
inc
and
inc
cmpsl
xlat
test
mov
out
add
xchg
jb
fcompl
adcb
int3
dec
enter
es
lret
mov
sub
andb
rcrl
xchg
movsl
xor
push
inc
pop
orl
pushl
mov
add
jl
ret
pop
xorb
call
ret
jecxz
and
jge
adc
aas
leave
jns
iret
icebp
inc
and
push
pxor
lock
pop
jo
sub
subl
test
std
inc
adc
test
mov
pop
sub
mov
pop
test
adc
jge
cwtl
sub
aam
dec
aam
mov
inc
rcll
cmc
mov
or
mov
cwtl
mov
xor
sub
enter
mov
mov
inc
add
jae
mov
fisubrs
mov
insl
xor
in
or
insl
adc
cmp
fstps
push
sti
adc
cs
or
int3
pushf
jg
sub
pop
in
lahf
jge
push
jecxz
push
pop
mov
shrb
push
loopne
hlt
jne
adc
push
std
push
test
and
cmp
push
pop
mov
insl
sbb
outsb
ljmp
pusha
fdivp
and
pop
or
hlt
push
pushf
je
push
jg
loopne
pop
insb
or
push
cltd
and
aaa
fdivr
or
outsl
leave
icebp
xchg
cmpsb
jmp
jo
es
xchg
jbe
inc
cld
je
fs
ja
shll
cmpsl
jbe
sbb
mov
fldl
add
add
das
das
roll
scas
in
mov
mov
fsubs
pop
cmpsb
mov
xchg
rcrl
pop
push
pop
loopne
iret
pop
movsb
jmpw
out
insl
xchg
ljmp
add
std
add
pop
jge
scas
movsb
add
and
fdivs
fimuls
push
or
les
jnp
inc
push
adc
mov
push
xor
cmp
cld
insb
mov
fwait
stos
xchg
push
leave
fbstp
arpl
xor
sub
sbb
cld
fildll
cli
adc
jge
pop
addr16
insb
aam
mov
loopne
adc
jbe
test
out
sbb
mov
mov
or
in
xor
in
subb
sub
outsl
pop
std
jnp
add
pop
repz
ret
test
adc
icebp
nop
pop
xchg
divl
xor
int
pop
mov
cwtl
inc
mov
rcr
js
fists
xchg
jo
mov
push
xchg
ss
cwtl
test
inc
int3
bound
call
sbb
sbb
add
lock
sbb
cmpsb
mov
out
pop
mov
das
pop
js
rorl
in
int
jle
cmp
mov
inc
jno
movsl
add
or
inc
sub
and
ret
sbb
add
incl
cld
lods
out
mov
mov
ss
fwait
out
outsb
lock
mov
and
inc
fnstcw
and
jo
outsl
lock
testl
inc
inc
xchg
inc
dec
and
hlt
test
outsb
pop
stos
mov
mov
push
add
pushf
ret
mov
dec
mov
ljmp
adc
jecxz
adc
imul
das
mov
add
sub
outsl
jg
pop
and
push
xor
mov
divl
add
in
into
fsubrp
or
test
pop
decl
xchg
cld
ljmp
adc
jbe
icebp
shl
push
add
push
xor
rclb
mov
adc
cld
mov
test
ja
mov
or
call
adc
push
repnz
inc
mov
add
adc
outsl
popa
mov
aad
cmpb
mov
sti
mov
lock
imul
bound
sbb
sbb
das
jl
lret
xchg
cmp
enter
jecxz
stos
xchg
or
dec
xchg
ljmp
sub
jle
pop
jecxz
fistl
add
addr16
fsubrl
dec
fisttpl
mov
lock
sarb
push
aaa
jno
mov
and
rcrl
stos
adc
sti
test
or
jo
call
or
mov
mov
test
pop
mov
addb
jg
or
mov
cmp
imul
sub
lret
fcomip
pop
loopne
or
pop
inc
mov
lret
iret
xchg
scas
js
adc
fiadds
xor
mov
inc
test
add
cmpsl
push
subl
xchg
push
sub
pop
imul
cmc
lea
pusha
or
and
test
gs
adc
sub
sti
lahf
sbb
mov
jecxz
add
insb
aam
idivb
and
xor
mov
subb
pop
sahf
pop
jbe
dec
pop
aam
cltd
stos
add
testb
inc
or
and
pop
fsubl
adc
xchg
test
sar
rorl
mov
mov
dec
push
pop
mov
push
loopne
insl
adc
jge
adc
push
aaa
push
mov
fdivl
xchg
mov
stc
idivb
add
imul
js
jmp
sub
dec
je
pop
in
mov
add
mov
dec
scas
cmpsb
push
cwtl
mov
adc
add
stos
rorl
repnz
out
mov
ds
sub
mov
aam
test
insb
adc
call
sbb
jmp
rorl
cld
fsubrs
adc
movb
sbb
sbb
or
mov
inc
mov
mov
loopne
cmp
inc
cld
idiv
mov
leave
adc
lahf
xor
add
xchg
test
ss
in
sbb
ljmp
jge
jle
das
pop
fld
and
and
clc
outsl
fldlg2
iret
pop
push
and
xchg
in
pop
jns
pop
sub
xor
nop
incl
insl
xor
add
stc
adc
lods
xchg
dec
inc
and
ljmp
cmc
adc
pop
push
faddl
cmpsb
dec
cli
or
jg
out
shl
adcb
xor
lock
int
xchg
lret
ret
sbb
jmp
inc
adc
jg
jno
decb
je
jae
push
stos
push
pop
sub
lock
and
inc
in
inc
and
cli
out
int3
and
jg
mov
hlt
cmp
push
mov
add
mov
iret
fidivl
cld
pushl
and
sti
fcmovnb
mov
insl
add
cmp
ss
mov
jmp
inc
filds
dec
and
and
loop
mov
push
pop
mov
leave
pop
inc
jecxz
call
in
fisttps
fwait
rorb
fildll
in
gs
push
arpl
fistps
inc
push
mov
or
div
xor
ljmp
sub
lds
jle
push
test
mov
jo
adc
cmp
inc
nop
pop
dec
dec
ljmp
ljmp
and
lds
stos
sbb
adc
pop
push
iret
lods
or
add
aaa
xor
mov
icebp
in
stos
mov
insb
or
xchg
pop
call
mov
pusha
jae
pop
push
repz
roll
dec
pushf
push
repz
cld
add
ret
and
mov
das
mov
xlat
pusha
les
or
inc
mov
rclb
or
fisttpl
push
inc
jb
das
lcall
cmp
xor
push
mov
popa
inc
cmp
rorb
xchg
mov
loopne
cmpb
mov
mov
mov
inc
pop
out
sbb
mov
and
mov
icebp
mov
sub
daa
leave
xor
jns
rol
sbb
adc
pop
cmp
mov
cmpb
xchg
sti
cmpsl
arpl
pop
mov
xchg
jmp
outsl
push
mov
fdivrs
cmpsl
test
cmc
gs
sub
cmpsl
test
hlt
cmp
mov
pop
rorb
and
push
cmpxchg
imul
cmpsb
pop
fs
je
add
mov
movsl
adc
pop
mov
push
movsb
dec
call
cmpsl
pop
cmp
arpl
jno
aaa
insb
lods
es
push
shrb
mov
stos
lods
pushl
cmpsl
mov
lods
in
xchg
or
mov
daa
shrb
xchg
xchg
repnz
mov
dec
push
fwait
iret
sbb
or
sub
adc
shrb
insl
inc
cmpb
xchg
fstl
lret
aad
adc
stos
int
or
jle
outsl
cmp
mov
addr16
mov
cli
or
dec
jno
hlt
adc
into
inc
and
sti
push
sub
cwtl
adc
jno
mov
addr16
mov
sbb
aad
or
mov
cmpl
xchg
les
mov
mov
fdivs
add
and
fcomi
mov
or
cmp
add
call
incl
add
cmc
aaa
aam
jb
clc
lahf
and
outsb
bound
insb
je
or
stc
in
mov
aam
and
out
stos
cwtl
leave
adc
mov
addl
stos
cmp
push
enter
xor
daa
daa
fwait
push
out
movsl
mov
xchg
scas
mov
arpl
mov
aaa
push
scas
xchg
stc
inc
sbb
xchg
xor
xchg
and
loop
hlt
cmp
cmp
rcr
test
es
push
cmp
out
mov
out
fcmovnb
fldcw
les
fs
out
inc
js
mov
jg
inc
hlt
test
cmp
sbb
scas
add
jg
dec
and
andb
pop
cld
xchg
pop
dec
mov
mov
or
sbb
clc
mov
jnp
divl
and
mov
push
fstp
loopne
push
orl
mov
mov
dec
mov
pop
pop
adc
outsb
and
std
test
punpckhwd
iret
movsl
cmp
loope
dec
ror
xor
das
ljmp
int3
xchg
cs
and
out
scas
in
mov
inc
xor
sbb
mov
push
jo
mov
rcrb
std
jbe
mov
mov
out
xor
push
jmp
test
jge
adc
fld1
sub
dec
jb
pop
cmc
inc
lret
pop
scas
jo
mov
push
inc
xchg
mov
push
decl
add
testb
push
xor
jg
popa
sbb
xor
mov
cmp
cmp
inc
mov
pusha
les
lcall
push
inc
lea
xchg
push
daa
and
aas
mov
lods
inc
enter
mov
pop
jb
adc
ds
fisttpl
das
fildl
add
bound
fildll
mov
push
dec
or
iret
clc
add
or
adcb
nop
cmp
es
xchg
shl
inc
cmp
add
mov
dec
fcomp
pop
jl
sub
repnz
scas
jl
andb
sub
movsl
ljmp
pop
jmp
orl
fwait
and
inc
imul
jo
shrb
daa
mov
dec
sbb
xchg
loopne
jnp,pt
incl
mov
push
jg
or
jns
xchg
xchg
in
or
mov
mov
push
test
std
imul
pop
jbe
sbb
pop
fmull
adc
jmp
rcr
push
call
mov
out
mov
bound
add
xchg
or
call
push
pop
cmpsl
lods
inc
or
aam
xchg
xor
and
dec
movsb
nop
cltd
mov
out
inc
movsl
xor
mov
jo
push
push
ljmp
mov
lods
mov
ss
in
inc
add
jl
adc
in
push
ja
loope
add
gs
jne
fldt
sub
pop
cli
pop
mov
popf
and
sub
xor
cmpl
jge
test
shll
out
and
movsl
adc
cs
fistl
pop
enter
push
arpl
mov
stos
movsl
and
scas
call
jae
xor
stc
dec
test
xor
adc
dec
dec
inc
fmuls
xchg
mov
andb
adc
rcll
jle
test
jbe
orb
aam
mov
ljmp
sub
test
mov
xor
mov
stos
pop
sub
ret
aas
cmp
dec
sub
push
ret
lret
mov
stos
jno
inc
enter
xchg
addr16
fists
movsb
pop
push
ds
das
mov
lret
mov
fldl
sub
data16
inc
sbb
enter
dec
inc
popf
ljmp
xor
mov
int
icebp
adc
into
js
jne
lods
cmp
push
in
push
rcrb
pop
adc
mov
mov
push
out
mov
shll
je
mov
mov
hlt
and
stos
rcll
push
mov
in
lcall
ljmp
mov
mov
jns
push
mov
and
pop
clc
sarb
fs
inc
adc
cld
sub
push
inc
fmul
sub
fisubrl
fwait
xor
adc
sbb
dec
sbb
std
je
cmp
ret
rorb
pop
add
clc
pop
push
cmp
movsl
mov
cmp
sbb
and
sbb
call
fldt
ja
popf
pop
push
mov
dec
shlb
stos
fstpt
rorb
mov
push
leave
lock
int3
pop
pop
shll
loope
mov
or
add
subb
fildll
cmp
pop
jno
adc
xor
add
dec
out
stos
lods
or
in
cmp
pop
sbb
cmp
jmp
ret
jo
imul
cmpsl
test
cmp
insl
vsubss
cli
mov
hlt
mov
add
pop
inc
add
pop
sahf
ret
add
sbb
adc
jg
mov
ret
xchg
cmp
jb
jb
ret
or
pop
les
aam
lret
push
rorb
mov
inc
xor
sbb
test
mov
stos
or
fs
call
pop
aad
dec
push
ds
scas
jg
push
cli
and
sbb
push
push
std
ja
movsl
in
iret
mov
sub
iret
pop
push
adc
scas
fcoml
inc
arpl
rorl
cwtl
cmp
inc
sbb
in
movsb
fdivr
testb
fnstcw
adc
lock
add
xor
or
or
ljmp
pushf
sub
aam
cmp
pusha
mov
test
add
jno
add
shll
aas
jbe
fidivs
adc
lods
mov
and
sarb
gs
push
mov
xor
gs
lcall
int
mov
mov
loopne
pop
mov
popa
repz
xchg
arpl
movsl
stos
fwait
jmp
sub
lods
sbb
lcall
xchg
daa
cmp
cmp
cld
and
lret
not
mov
test
inc
in
sub
test
dec
hlt
movsl
dec
sbb
xor
rorl
push
insl
into
insb
imul
inc
jno
cmp
les
pop
jo
and
cli
push
cld
leave
xchg
push
cmpsb
je
in
dec
cmc
inc
sbb
repz
fcmovnu
call
std
cs
xchg
xchg
popf
popa
stc
jbe
and
mov
sub
sub
clc
nop
mov
imul
rcrl
sub
loope
scas
repnz
cmp
test
push
add
mov
cmpsb
add
in
push
fsubp
ja
mov
idivl
nop
andb
in
xchg
lods
in
pop
adc
in
dec
sarl
dec
xchg
mov
call
out
cltd
or
out
outsl
push
fmulp
add
fisttpl
out
aas
hlt
outsl
inc
aas
push
ljmp
mov
clc
ja
jecxz
and
xor
pop
and
dec
sbb
cmp
sub
incb
addb
enter
ds
insl
hlt
mov
dec
ljmp
or
inc
and
and
mov
test
aas
dec
pop
adc
cwtl
pop
bound
add
cmp
in
pop
loop
fdiv
test
adc
pop
test
cld
dec
dec
cld
and
rclb
out
fisubrl
adc
loope
cli
mov
inc
push
add
adc
fwait
xlat
fwait
aad
stos
mov
mov
loop
inc
dec
mov
xorl
cmpsl
loopne
mov
cli
rorb
xor
nop
pusha
shrl
ja
pminub
mov
jne
loopne
add
pop
outsl
decl
outsl
xor
sbb
jbe
pop
popa
cmp
add
ja
adc
popa
shrb
sub
iret
add
insl
pop
decb
addl
arpl
into
ds
loop
std
pop
mov
sbb
mov
das
icebp
mov
mov
arpl
pusha
mov
jle
hlt
arpl
shl
in
clc
inc
in
jnp
iret
sub
dec
fwait
stos
mov
movsb
push
mov
push
test
inc
sub
mov
sbb
dec
loope
ret
jl
sub
stos
icebp
mov
mov
addr16
jmp
in
sub
inc
dec
or
in
pushf
mov
pop
xor
roll
mov
jo
outsl
outsl
pop
mov
fisubs
jbe
sbb
dec
jl
jg
mov
call
and
decl
mov
test
adc
inc
ret
cmp
sti
xchg
shrb
or
inc
mov
in
out
adc
sbb
push
cld
lock
push
mov
ds
fdivrl
loopne
push
les
fdivr
call
or
rolb
gs
ja
adc
jbe
xor
out
pop
add
loopne
cld
lahf
shlb
push
mov
xor
and
pop
and
jmp
loopne
xor
xchg
xchg
test
sbb
and
outsl
das
jl
xor
mov
mov
add
mov
dec
add
shll
iret
push
sub
jmp
mov
rcrl
das
fdivs
mov
decl
jge
sarb
mov
test
push
push
push
mov
outsb
and
pop
loopne
add
pop
sub
xchg
lret
pop
fistpl
incb
decl
push
push
mov
mov
cmp
lcall
arpl
and
lods
xchg
sub
pushl
inc
lahf
adc
adc
dec
popa
cmp
adc
pop
decl
lret
scas
cwtl
fiaddl
jmp
es
mov
cwtl
nop
jo
jl
mov
xor
push
mov
out
sbb
fs
push
mov
int
aas
test
mov
adc
add
sbb
sub
or
sub
jg
incl
sbb
shr
pop
jmp
jge
outsl
jmp
rcrl
imul
sub
mov
insb
and
adc
call
mov
pop
or
jbe
jecxz
loop
cmpsb
push
les
mov
mov
inc
push
inc
mov
jb
add
pop
xor
clc
les
cmp
aaa
pop
adc
sbb
insl
adc
add
outsl
aas
fcomps
lea
cwtl
aas
sbb
imul
adcl
test
mov
imul
jecxz
sub
int
xor
dec
jmp
inc
stos
inc
and
pop
pushf
adc
and
ret
movsl
jg
stos
mov
fcmovnb
jb
leave
inc
out
jg
mov
or
fdivs
adc
stos
xor
cld
leave
inc
sub
dec
add
inc
adc
mov
adc
mov
jns
mov
xor
pop
adc
das
cmp
xchg
dec
lock
pop
add
mov
insl
in
ja
cmpsl
and
ficoml
fistps
push
xchg
and
mov
stc
push
cld
mov
xor
sti
jbe
lcall
mov
push
movsl
lcall
mov
stc
sbb
cli
push
icebp
sbb
inc
jmp
mov
orl
arpl
test
hlt
stos
mov
scas
sbb
mov
lock
leave
adc
dec
mov
adc
add
jns
inc
sbbb
cld
ljmp
mov
mov
scas
ljmp
xchg
xor
sub
insl
add
xchg
rol
rolw
lds
cmc
hlt
inc
adc
mov
fs
and
decl
lcall
bound
adc
sbb
inc
or
cmp
mov
sub
outsl
rcrb
insb
aam
inc
mov
daa
xchg
push
test
pushl
insb
aam
mov
mov
pusha
negl
lret
loope
test
mov
inc
jecxz
jmp
cmp
jg
test
cwtl
test
push
loope
loop
call
sbb
fidivs
cmp
rolb
scas
mov
movd
shl
mov
loope
sbb
inc
push
add
cmp
push
aad
imul
das
lock
xchg
bound
les
je
sbb
jecxz
in
fists
pop
push
inc
lods
sub
mov
mov
or
cwtl
mov
mov
mov
das
repz
dec
dec
mov
ficomps
inc
jge
adc
xor
lods
jg
fs
inc
sbb
cmp
pop
cmp
push
ret
push
lahf
ss
mov
dec
rcrb
push
pop
add
jmp
xchg
sbb
cmp
das
je
pop
mov
popf
stc
in
fs
or
rol
jg
pushf
hlt
scas
call
cwtl
dec
add
cld
xchg
clc
mov
mov
repnz
cwtl
movb
pop
dec
dec
test
cs
scas
mov
jbe
movsb
mov
pop
add
shrb
aas
sub
bnd
shrb
sub
push
adc
pusha
sbb
lea
dec
mov
mov
push
push
cmp
decb
inc
fnstenv
cwtl
andl
ficompl
out
sbb
test
push
push
pop
dec
mov
fimuls
mov
inc
js
dec
inc
or
pop
outsl
mov
pop
inc
cmp
cltd
push
pop
aam
sub
fcmovu
in
lahf
dec
push
jbe
lods
jmp
xor
jl
lret
mov
mov
loope
mov
jmp
xchg
mov
push
push
or
hlt
jg
sbb
sub
pop
repz
add
xlat
nop
xor
fstl
lods
daa
dec
jns
call
in
dec
insl
inc
out
sbb
imul
fmuls
jle
mov
jl
inc
add
sub
xor
lods
shl
test
add
das
hlt
outsl
jmp
jle
push
and
xchg
call
iret
adc
push
adc
subl
mov
xor
das
icebp
xchg
and
jecxz
stos
xchg
inc
dec
xchg
idiv
jbe
addl
add
mov
cmpsb
aam
jnp
sub
out
mov
mov
inc
ficompl
push
cmpsb
outsl
and
lods
xor
jmp
jecxz
jmp
sbb
mov
in
icebp
test
add
mov
xchg
jns
sbb
repz
and
pushf
stos
inc
add
jl
pop
and
adcb
dec
jmp
test
jl
pushf
popf
adc
or
hlt
fmull
lcall
test
mov
frstor
pop
jmp
nop
push
pop
mov
mov
or
jne
cmp
in
pop
test
pop
push
mov
popf
lahf
loope
out
js
jnp
dec
sbbb
scas
inc
jg
insb
pusha
loopne
aas
dec
pop
mov
test
mov
aaa
jle
int3
leave
cmp
mov
fbstp
cs
sbb
xchg
add
or
hlt
decl
inc
ret
pop
adc
cmp
pop
cmp
push
outsb
addb
mov
push
push
mov
popa
pop
enter
pop
inc
xchg
movsb
pop
and
inc
add
inc
and
pop
hlt
ret
outsl
std
pop
mov
jb
and
out
push
sub
orl
pop
xchg
dec
pop
mov
in
incl
inc
cmp
adc
and
std
adc
inc
xorps
out
outsl
sub
xchg
inc
xor
fld
movsl
aaa
fsubrl
loop
mov
ret
nop
push
test
xor
pop
jecxz
mov
mov
ds
stc
mov
push
xor
push
or
or
jge
popa
mov
out
or
fisubrl
push
cmp
das
cld
or
cmp
test
push
xor
shrb
push
mov
or
repnz
or
in
push
filds
or
lret
mov
lock
outsl
ret
jecxz
jbe
loop
sbb
clc
jg
push
adc
into
mov
frstor
adc
cmpsl
stos
push
or
stos
mov
hlt
sbb
aas
std
sub
icebp
or
mov
push
adc
in
mov
das
and
adc
das
arpl
add
pusha
dec
jmp
js
in
inc
adc
aas
sbb
arpl
lock
xchg
loop
and
das
sub
mov
mov
pop
push
and
lods
movntps
dec
cltd
insl
cmc
icebp
clc
cltd
out
clc
cld
scas
sbb
addr16
mov
or
daa
shr
divb
add
push
test
or
pop
xor
cmp
cmp
mov
fcoms
push
pusha
je
fcmovnbe
icebp
rcr
mov
loop
subl
decl
popf
lret
test
bound
stos
lods
in
outsb
pop
lcall
push
fwait
nop
sub
stc
fwait
pop
push
mov
add
sub
sub
insl
jecxz
les
add
xchg
ret
sbb
sbbl
daa
push
sti
movsl
xchg
push
inc
aam
lret
insl
sti
mov
push
pop
les
andl
mov
sar
ss
dec
mov
dec
jl
int3
adc
push
andb
pop
hlt
test
sbb
popa
outsb
add
and
pop
cmpb
mov
xlat
push
mov
jmp
mov
dec
test
jp
xor
pop
push
lcall
push
mov
mov
orb
xchg
addb
mov
arpl
mov
dec
push
mov
or
inc
and
aaa
push
xchg
or
add
fldt
lock
jg
pop
and
imul
cmpsl
add
adc
mov
leave
or
shl
sbb
ljmp
cmp
mov
loopne
mov
cmp
lods
or
xor
insb
les
sub
jg
stos
mov
add
fildl
fildll
mov
inc
sahf
add
loopne
and
xor
sbb
or
test
add
fs
ss
mov
dec
incl
into
int3
mov
or
int
dec
decl
mov
test
xor
repz
popa
and
or
sub
jl
dec
add
sahf
pop
shll
inc
aam
dec
in
js
or
movsl
adc
sub
call
sti
xor
jg
stos
mov
shl
pop
mov
mov
inc
jae
xor
adc
sbb
bound
adc
fdivl
lahf
in
filds
les
loope
inc
push
js
nop
push
and
in
push
incl
shlb
fdivr
push
push
jp
push
push
mov
inc
lret
roll
push
fiadds
pop
test
mov
jp
jg
sbb
cmp
push
add
fildll
pop
mov
xchg
icebp
mov
iret
addb
outsb
lods
mov
mov
outsl
mov
inc
dec
jae
push
jmp
and
sti
jbe
adc
aaa
xchg
pop
or
mov
sub
aas
jmp
inc
aaa
mov
pop
scas
js
cmpsb
jg
push
cmp
pop
cwtl
pop
push
fmull
mov
add
repz
or
sub
mov
setb
daa
lods
adc
fadds
push
dec
lds
mov
hlt
sub
ret
into
out
test
and
or
push
add
outsl
pop
nop
loop
insl
lock
mov
sbb
mov
lret
inc
sarl
es
lock
scas
and
ja
pop
inc
dec
mov
push
mov
sbb
rcl
inc
bound
lret
fidivs
stc
mov
lods
adc
mov
pop
sbb
into
mov
mov
push
icebp
add
jg
mov
fbstp
inc
adc
cmp
clc
push
je
jge
lds
fidivrs
xchg
inc
sub
xchg
aad
je
mov
add
adc
icebp
add
sub
and
shrb
fcompl
dec
jbe
xchg
js
jbe
push
cmpsb
mov
and
jno
hlt
xor
dec
push
pop
add
xor
das
push
push
pop
cmp
xchg
mov
in
sub
repnz
mov
call
cwtl
mov
enter
pop
mov
and
fs
push
mov
js
xlat
loope
addl
adc
dec
jo
inc
into
call
pop
orl
ret
dec
push
mov
popl
inc
sti
lods
sbb
in
pop
shll
pop
push
mov
ljmp
test
dec
pop
test
or
stos
in
pop
sub
outsl
orl
sti
add
repnz
push
pop
dec
mov
push
cmpsl
xor
das
mov
les
inc
push
insb
adcl
mov
push
in
ficoml
inc
add
dec
addb
pop
dec
adc
inc
xchg
lock
in
and
dec
mov
call
cld
adc
aad
xchg
xchg
sub
jg
pusha
adc
cld
dec
or
stc
idivl
shll
lods
pop
js
push
sub
in
clc
pusha
lock
push
les
in
fwait
cs
lret
out
hlt
lcall
xchg
cmp
mov
rorl
aam
or
sbb
movsb
mov
ffreep
or
pop
or
je
in
xchg
cmc
mov
cmp
jb
popw
outsb
push
sbbb
sbb
sbb
aaa
push
push
and
ljmp
sub
loopne
pop
dec
jp
mov
and
movsb
notb
test
pop
and
enter
paddw
cmp
pop
sarb
cmp
mov
jmp
lods
int3
sbb
je
inc
repz
sub
sbb
jmp
jg
xchg
fwait
dec
xchg
pop
jne
insl
add
xor
mov
jmp
div
jge
stc
mov
dec
out
inc
test
cmp
and
movsb
ljmp
jl
movsl
mov
dec
fisttpl
xor
adc
fwait
jg
pop
movsl
pop
mov
fdivl
movsb
jmp
enter
push
js
es
push
movsl
jo
ret
andb
sub
or
and
mov
in
int3
sbb
mov
shrl
aam
sbb
in
icebp
inc
lret
sbb
insl
inc
andb
mov
push
cmp
out
add
iret
pop
xchg
or
iret
mov
loope
jl
xchg
sub
sub
aas
push
in
pushf
aad
popa
jae
stos
jl
adc
dec
loopne
pushl
pusha
ljmp
decl
fcoms
xchg
xor
sub
pop
fstpt
cmp
test
fs
iret
mov
mov
add
or
jbe
sbb
ss
out
sbb
jmp
xor
subb
es
mov
jp
js
mov
jno
or
enter
je
insl
cs
adc
mov
movsl
mov
xlat
pop
mov
icebp
repnz
aaa
loopne
lcall
adc
push
mov
adc
adc
mov
mov
in
cmp
jnp
mov
mov
adc
fwait
add
and
pop
fcoms
ficoms
mov
xchg
fmuls
subb
lock
icebp
fildll
xor
push
sbb
sbb
or
dec
push
test
pop
push
add
cmp
arpl
inc
fst
into
and
mov
xor
dec
lret
nop
jge
and
fisttpl
push
lcall
jae
fimuls
adc
icebp
xchg
pop
add
jno
and
insl
pop
jl
pop
mov
add
xchg
mov
incb
and
inc
adc
push
push
adcb
or
test
fnstsw
js
pop
adc
dec
sub
jmp
mov
pextrw
mov
mov
cmp
xchg
cmp
inc
pop
nop
fwait
mov
jnp
les
sub
xchg
mov
fcmovnbe
loope
or
lods
movsb
punpckhbw
nop
mov
fdivl
js
cmp
fisttps
orb
inc
scas
cltd
adc
and
fucomi
inc
pusha
rclb
je
and
cltd
push
push
mov
repz
int3
and
ja
orl
arpl
jno
and
push
les
mov
filds
dec
aas
push
pop
cmpsl
cmp
add
imul
jbe
jp
xlat
xlat
mov
sahf
or
push
ss
lds
lds
movb
inc
daa
outsl
xor
jmp
fstl
mov
fcoml
xchg
insl
push
push
rol
xor
fildll
test
enter
lock
hlt
adcl
daa
cmc
outsb
jg
cld
push
and
mov
lcall
dec
scas
insl
icebp
outsl
clc
or
mov
push
inc
adc
sub
push
insl
lods
mov
sarl
push
mov
push
into
cmpsl
and
jne
cmp
fbstp
movsl
fwait
and
mov
push
call
fcmovnu
ror
xchg
jb
js
mov
lret
mov
jmp
sub
add
add
cld
jg
mov
mov
xchg
adc
and
das
std
sbb
fisubs
cmp
mov
push
mov
stc
js
push
mov
mov
dec
mov
pop
adc
inc
lods
push
cli
incl
xor
fisubs
push
fs
data16
inc
sub
frstor
pop
daa
decl
mov
push
xor
jno
push
sarb
decb
and
loop
xchg
loopne
insb
insl
and
scas
sahf
movsl
lods
pop
outsl
mov
aaa
jl
pop
add
dec
xchg
movsb
inc
int3
int3
dec
pusha
xchg
pop
jmp
inc
sti
shll
jmp
or
lods
sub
rorb
lds
push
mov
jecxz
mov
jbe
sub
rclb
mov
lret
or
xchg
aaa
je
out
mov
or
mov
xchg
loopne
push
inc
mov
sub
cmc
dec
std
dec
loopne
mov
dec
das
mov
and
enter
mov
loop
iret
stc
cmp
aam
xchg
mov
scas
lods
imul
xorl
les
and
xchg
clc
mov
xor
shrb
insb
enter
jl,pn
outsl
cli
in
push
mov
jmp
pop
in
cmpsl
cmp
push
clc
cs
in
and
ja
pop
lahf
les
pop
fcompl
mov
mov
call
pop
popa
mov
dec
lahf
add
fwait
cmp
test
nop
imull
cmpsb
push
incb
rclb
aaa
shlb
jns
shll
stos
push
mov
jbe
cwtl
lahf
popf
das
adc
jle
divb
ss
jl
xor
dec
jl
ja
jp
ffreep
pop
jl
xchg
or
out
inc
pop
loop
push
ds
aaa
mov
mov
pop
stc
cmp
cs
aas
adc
out
fisubrl
rcrl
and
sbb
std
fcomi
stos
mov
xor
sbb
or
pop
addr16
xor
sub
lods
bound
and
in
inc
incb
cmpsb
or
dec
and
push
dec
fldt
or
jnp
inc
mov
sarb
js
xlat
clc
mov
inc
inc
iret
mov
sarb
jg
fistpll
adc
inc
out
inc
stc
loope
push
stos
xchg
push
or
in
xchg
daa
dec
push
ljmp
movsl
fists
imul
xor
std
cmpb
push
jp
rorb
divb
testl
jg
jecxz
adc
xchg
sub
xor
jns,pn
pop
pop
sub
out
dec
mov
jp
push
add
nop
mov
loope
aaa
fcomi
dec
cld
or
lock
mov
push
mov
mov
cld
ljmp
inc
xor
dec
pushf
xor
sub
push
inc
hlt
and
repnz
outsl
xchg
or
shll
insb
xor
notb
iret
mov
pop
dec
decl
mulb
addb
mov
jbe
repnz
dec
mov
push
inc
dec
loop
popf
push
repz
fbstp
pop
aam
inc
pusha
jb
pop
pop
xor
jnp
mov
sbb
lea
and
and
clc
das
fmull
movsb
inc
jb
test
pop
xchg
jnp
rcrl
jmp
sti
mov
cmp
scas
scas
jno
lods
aas
aaa
jle
loope
mov
call
jmp
ret
or
push
cmpsl
pop
dec
shlb
in
mov
sub
das
icebp
cmp
add
xor
out
out
mov
fsubrl
push
mov
mull
mov
sti
das
aam
lds
jge
fdiv
fnstcw
cld
loop
push
into
out
cmp
lock
outsl
push
lea
push
mov
inc
mov
cld
lahf
je
or
lcall
dec
push
mov
mov
inc
jb
xchg
ljmp
je
lret
loop
lcall
inc
xchg
xor
call
addr16
mov
jg
cmp
roll
xchg
ja
or
sub
fwait
sahf
mov
and
jecxz
xchg
mov
es
pop
cs
sbbl
or
and
jno
mov
jg
cmc
dec
dec
out
jmp
or
out
add
mov
test
xchg
xchg
inc
xor
lret
insl
mov
addr16
push
pop
adc
pop
inc
mov
sahf
mov
negb
sbb
test
jecxz
ror
add
sub
test
mov
or
bsr
loopne
pop
shr
sarb
loopne
jae
mov
mov
push
lock
aaa
fdivrs
sti
negl
les
fucomi
cmpsb
pop
out
sbbb
cwtl
imul
dec
sub
ss
js
outsb
and
scas
outsl
inc
sbb
inc
je
fildl
and
jmp
mov
jge
stos
dec
rorl
mov
xchg
loop
pop
inc
xchg
cmp
mov
aaa
pop
and
repnz
push
adc
pop
cli
iret
dec
pop
push
addr16
lret
sbb
jg
xchg
jg
inc
jbe
cltd
xchg
adc
mov
lcall
lock
xor
das
fstpl
lret
out
mov
jp
xor
mov
je
aad
add
xchg
mov
call
lods
lahf
lret
insl
pop
dec
mov
rorl
nop
ret
repnz
jmp
mov
loope
jge
hlt
jns
ljmp
dec
or
repz
fistps
aam
jnp
jo
cmpl
xchg
mov
and
loope
clc
xor
fbld
mov
mull
push
and
jne
mov
daa
or
icebp
aad
fs
loope
test
xor
push
int
cmp
jbe
loop
imul
fisttpl
cltd
sbb
xlat
push
stos
aaa
mov
orl
xor
jg
pusha
sbb
xchg
add
push
lret
and
mov
or
insl
test
xchg
add
loope
adc
ljmp
adc
fiaddl
jo
je
icebp
ja
scas
push
xchg
fldcw
and
jp
addr16
push
aas
adc
mov
lods
stos
mov
sbb
fcmovne
pop
add
in
ret
sub
imul
xor
loope
xchg
out
xchg
sub
dec
cmpsl
pop
mov
or
pop
js
out
jg
scas
mov
frstor
adc
sahf
mov
cmpsl
popa
xchg
pop
mov
cmpsl
cmp
cmp
add
add
test
sub
inc
jns
adc
push
dec
cmpsb
ljmp
or
lods
mov
incl
mov
in
jp
xchg
cmp
cwtl
jae
insb
add
sar
int
mov
push
add
pop
cmpsb
daa
mov
xor
mov
mov
rolb
loope
jle
xchg
jecxz
in
mov
mov
das
test
cli
mov
aas
mov
fidivs
cli
jge
popf
repz
push
loop
add
jl
int
ds
icebp
adc
fnstcw
int3
push
lcall
xor
ja
mov
outsl
cmp
test
mov
xchg
pushl
jne
insl
enter
pop
in
xor
pop
mov
xchg
push
fs
stc
pop
or
adc
cmpsb
push
dec
dec
cmp
lret
ss
stos
fnstcw
or
push
jg
fcmovnb
or
and
cwtl
pop
popf
icebp
xchg
mov
ljmp
pop
clc
sub
pop
inc
adc
mov
imul
jae
fimuls
or
loope
insb
fildl
addl
inc
lock
jbe
icebp
cli
mov
push
in
insl
std
out
adc
push
jg
push
nop
mov
or
mov
out
gs
pop
arpl
sahf
pop
daa
insl
pop
fadds
xchg
dec
loopne
fs
xchg
mov
jl
sbb
adc
or
push
dec
test
decl
push
push
stos
cmp
fadd
lock
faddl
iret
ret
mov
shlb
mov
add
aaa
out
idiv
outsl
sbb
jmp
sbb
fstpl
out
ljmp
add
push
xchg
outsb
push
inc
loope
mov
adc
push
adc
push
inc
inc
test
mov
fnstsw
mov
adc
push
insl
mov
mov
subl
cmc
add
rol
stc
sahf
lret
stos
in
scas
jg
push
shlb
adc
push
sub
aam
or
movsl
sbb
hlt
pusha
inc
mov
bound
jo
jmp
data16
mov
je
or
cmpsb
cmp
je
push
int
scas
push
loope
ss
sbb
push
jb
scas
or
jp
incl
pop
leave
fsub
and
leave
loop
test
loopne
imul
dec
push
outsl
push
xchg
mov
gs
lret
mov
popf
cmp
lods
int
loope
je
in
sbb
mov
adc
movl
lret
jge
mov
mov
out
xchg
rol
notl
mov
jnp
adc
outsb
outsb
or
cwtl
and
pop
loope
filds
enter
add
xchg
ds
mov
rep
and
jns
jle
arpl
xorb
add
pusha
sub
sub
int3
mov
mov
mov
scas
ja
and
clc
fisttps
cmp
inc
cmp
sub
cmp
xorb
adc
add
mov
jl
jno
iret
test
hlt
pop
sahf
das
rclb
inc
lock
dec
cmp
test
mov
cmpb
jmp
cmpsl
rcr
pop
mov
js
pop
mov
or
fsub
sbb
push
mov
mov
jge
dec
das
jl
fildll
ret
scas
mov
hlt
dec
rorl
mov
imul
clc
mov
ret
sbb
mov
fdivp
addb
mov
sbb
aaa
ljmp
jno
pop
aaa
jg
das
jle
imul
sub
xchg
movsb
leave
decl
idiv
inc
cmpsl
xor
mull
sbb
cmpsl
mov
push
push
imul
or
test
pop
dec
or
movsl
es
mov
popw
mov
js
insb
mov
cmpsl
pop
addr16
std
xchg
test
out
shrb
lds
xchg
subb
lods
dec
and
aaa
sub
loop
in
jle
enter
add
sbb
out
les
clc
jo
push
and
xor
mov
dec
push
pop
adc
inc
and
sub
dec
mov
and
stc
or
sbb
repz
les
jecxz
inc
mov
pop
cmp
mov
mov
sbb
dec
inc
mov
add
fbstp
ret
fwait
les
mov
loopne
cmp
xor
ss
ds
cmc
subb
into
outsb
cmp
mov
movsl
mov
xor
sub
cmpsb
test
lcall
movsl
mov
push
inc
lds
lods
lcall
push
jl
loopne
jp
push
outsl
loop
mov
roll
sbbl
leave
mov
xchg
and
inc
add
pop
orb
pop
pop
je
cmc
fadds
in
xor
loopne
in
call
pop
jo
mov
or
sub
and
dec
jp
xlat
inc
inc
mov
insb
mov
rol
xor
into
cmp
call
stos
aad
sbb
cs
mov
in
jp
adc
das
xchg
jg
es
and
js
imul
cli
pop
jle
jno
adc
add
aad
and
lahf
lock
xor
push
arpl
or
std
enter
out
loop
mov
lock
leave
leave
add
nop
rorl
sbb
or
xlat
or
fadds
mov
mov
mov
out
iret
adc
stos
jecxz
add
xchg
fcmovnu
jne
mov
data16
stos
and
js
outsb
aas
dec
cmp
lret
push
pop
out
xchg
cmp
rcrb
aas
inc
dec
adc
ja
aad
mov
test
sub
inc
test
test
clc
jmp
inc
into
dec
mov
fs
dec
or
pop
in
test
fs
cmp
push
cmp
push
mov
mov
push
test
or
add
mov
push
pop
jp
mov
fstp
shrl
hlt
lcall
and
sarl
out
adc
fsts
mov
aam
imul
outsl
rorl
daa
cmp
dec
popa
sub
push
jl
ds
in
popf
call
pop
dec
das
adc
add
jp
xchg
out
cmpsb
inc
jge
sbb
fiadds
pop
aad
push
out
sbb
mov
inc
xor
pusha
jmp
std
mov
jae
in
insl
ret
fistps
jp
dec
arpl
push
fwait
pop
std
inc
cld
lods
cs
lret
sbbl
push
mov
out
les
sti
aam
ret
hlt
inc
mov
sub
je
js
push
jb
sub
pop
rol
mov
or
call
adc
mov
mov
xor
mov
dec
or
movsb
in
pusha
std
lea
sub
or
jecxz
scas
aaa
outsb
pop
mov
xor
xor
les
add
mov
int
sub
push
add
and
push
inc
sbb
pop
popf
outsl
mov
jno
adc
sub
in
dec
or
enter
in
mov
mov
bound
push
fadd
xor
je
arpl
icebp
sti
scas
sub
inc
in
orl
inc
mov
jl
clc
and
and
pop
rolb
pop
aaa
cltd
xchg
jnp
xlat
aam
lds
scas
push
dec
outsb
lcall
mov
push
jae
sbb
mov
adc
and
xor
inc
sti
or
dec
pop
call
add
iret
push
push
adc
push
movsl
mov
cmp
pop
fcompl
ss
lds
rcll
movsl
stos
adc
in
enter
cmp
sbb
data16
xor
adc
stos
mov
cmp
loope
rcr
xchg
mov
or
adc
push
xor
push
std
pop
mov
shr
in
push
xchg
fildll
rcr
lret
push
arpl
fdivs
fdivp
outsl
jne
jl
lret
jp
jne
adc
and
jg
xor
jmp
in
sub
pop
push
insb
xor
xchg
pushf
pushf
fcmovu
repnz
jg
cs
icebp
dec
mov
es
aam
inc
decl
in
jp
out
movsl
xorl
inc
leave
cmp
leave
xor
aam
push
add
mov
dec
pop
pop
push
sbb
dec
and
inc
sahf
adc
cs
inc
jno
adc
mov
lock
or
lock
jne
fildl
lcall
or
pusha
or
mov
mov
popa
inc
fdivl
loope
inc
sub
lret
xchg
idivl
fbstp
mov
in
das
subb
push
in
outsb
fwait
pop
mov
lods
jno
mov
jl
mov
sbb
in
jb
adc
addr16
je
shll
andl
sti
cmp
adc
jg
insb
aaa
movsb
cs
push
nop
push
jmp
in
inc
and
jnp
sbb
jo
int
test
ret
and
add
inc
adc
faddl
rcrb
pop
xor
cmp
cmpsb
inc
pop
jle
jmp
xchg
clc
add
aad
loope
inc
pop
jg
adc
cmp
inc
mov
inc
ds
and
jmp
inc
rcll
addr16
or
je
inc
xchg
shlb
aaa
negb
insb
adc
ljmp
sbb
jmp
sub
and
je
mov
sub
dec
cmp
jne
mov
leave
jg
scas
inc
shrb
mov
sub
sbb
or
cwtl
loop
nop
notb
ficompl
std
xchg
adcl
pop
sbb
in
or
sbb
outsb
movsl
sub
int3
fcoml
sub
dec
mov
pop
enter
jg
lea
sbb
test
outsb
push
fisubl
packuswb
xchg
and
add
mov
daa
cmc
or
dec
cs
orb
fwait
je
dec
imul
mov
mov
lea
sbb
jecxz
push
lahf
je
mov
push
shrb
fidivl
loopne
jae
pop
sub
cmpsl
in
test
mov
pop
cli
popf
xchg
inc
fwait
xchg
lahf
movsl
nop
push
popf
mov
lods
dec
xchg
incb
aas
rolb
daa
mov
out
test
data16
iret
loopne
dec
mov
mov
out
mov
cwtl
mov
adc
jl
mov
sbb
pop
mov
sbb
loop
mov
push
pop
daa
repz
repnz
push
lock
mov
or
adc
jle
pop
push
es
testb
and
or
arpl
aas
lock
push
pop
dec
test
dec
inc
negb
xorb
pop
mov
mov
inc
stos
icebp
dec
in
jmp
xor
adc
xchg
int3
iret
ret
jmp
mov
and
stos
outsl
or
insl
xchg
push
xchg
cmp
and
fdiv
mov
push
lret
shrl
adc
mov
mov
pop
sbb
fnsave
dec
cltd
notl
cmpsl
roll
add
xchg
jg
cli
ffreep
adc
clc
push
movb
cmc
clc
popf
outsl
jo
lret
mov
mov
sbb
call
mov
or
xchg
sub
ja
arpl
hlt
inc
jmp
dec
out
or
pop
jo
clc
fisubl
adc
ret
jae
iret
test
or
jl
sbb
cwtl
cld
movsl
fisubrl
jecxz
or
sub
rcrl
aaa
pushf
invd
aaa
add
inc
subl
jns
xchg
out
iret
jmp
pusha
pop
std
out
cli
adc
cmp
loopne
fmull
stos
or
cmp
test
jmp
mov
in
arpl
out
repnz
mov
add
fcomip
lea
inc
mov
cli
aad
daa
or
sbb
push
inc
sar
outsl
mov
add
arpl
sbb
nop
stc
into
jmp
or
ret
cmp
xchg
cmpsb
mov
mov
jns
lcall
jle
sti
xchg
xor
cmp
push
mov
jb
lcall
sahf
pop
cmp
ret
and
pop
shrl
mov
mov
pop
add
rorb
ja
sbb
scas
repz
pop
or
mov
sbb
cli
pop
fidivl
inc
ss
loop
ret
mov
push
lret
and
pop
roll
les
pop
sbb
adc
lea
and
jge
sbb
mov
mov
loope
std
call
bound
add
in
sbbb
loop
mov
push
les
add
xchg
cmp
fsts
sub
shrl
xchg
data16
mov
adc
mov
mov
bound
repz
inc
call
adc
pop
add
fcomip
xchg
xchg
jecxz
out
push
dec
outsb
xchg
pop
loopne
in
xchg
sub
and
ljmp
inc
jo
out
and
dec
jl
pop
sbb
xchg
ret
std
decb
imul
push
std
xchg
adc
lcall
cmp
pop
fbld
dec
repnz
add
mov
imul
or
xor
push
and
cmove
ljmp
or
and
cmp
and
gs
out
sbb
pop
and
or
out
data16
popa
mov
sbb
lock
adc
pop
loope
inc
fstps
xchg
or
decb
xchg
fnsave
jg
stos
jbe
pop
je
out
cmc
addr16
sub
dec
or
outsl
adcb
push
dec
data16
ret
xor
mov
mov
loop
leave
scas
jg
sub
jbe
or
jo
imul
jmp
mov
pop
fcomps
pop
dec
sub
nop
or
fcoml
into
dec
dec
sbb
sarl
rcll
inc
xchg
adc
stos
les
out
insl
inc
test
sub
or
jns
mov
enter
lret
and
notl
insl
or
shlb
mov
call
mov
leave
mov
and
test
cmp
iret
cmp
sub
dec
or
js
cmp
in
icebp
xlat
xchg
lods
mov
mov
mov
cmc
adc
mov
sbb
insb
test
cmp
shr
mov
incl
adc
ja
subb
in
aaa
lods
cwtl
test
mov
inc
mov
pushl
mov
xchg
pop
mov
mov
rcll
sbb
sub
sahf
inc
fistpll
aad
mov
inc
dec
popf
test
std
add
push
fisubs
dec
aaa
dec
sbb
or
cld
sub
scas
bound
pop
push
xchg
mov
jg
jno
inc
fbstp
sar
add
std
inc
xlat
fistps
mov
xchg
pop
jb
into
cmpsb
mov
call
movsl
inc
repz
mov
sarl
call
cld
pop
daa
lahf
jnp
out
mov
mov
sbb
inc
ret
add
mov
xorl
mov
or
mov
dec
dec
scas
jmp
enter
and
dec
cmp
pop
aad
mov
ret
adc
cltd
lret
hlt
push
subb
clc
jg
cmpsb
mov
xchg
cwtl
cs
or
xchg
mov
out
push
jecxz
jmp
call
pop
jb
out
push
out
aas
mov
add
dec
cmpl
adc
insb
inc
mov
mov
pop
sbb
push
data16
sub
dec
push
push
out
orb
jle
push
push
sbb
mov
shll
xchg
rcrl
repnz
bound
pop
dec
jne
sbb
insb
mov
mov
and
push
adc
ja
cwtl
aas
xchg
push
lea
mov
pop
mov
repz
pop
xor
clc
repz
scas
into
rclb
das
std
adc
jnp
test
and
in
loopne
lea
push
or
aaa
jb
das
inc
lahf
lret
xchg
shl
nop
dec
outsl
mov
shll
stc
inc
sahf
or
inc
inc
push
pop
jg
mov
dec
mov
ljmp
mov
inc
xchg
mov
mov
popa
mov
pop
data16
or
dec
or
dec
or
mov
bound
orl
cmp
pop
jno
push
add
dec
pop
or
sub
pop
jo
cmp
mov
xor
fiadds
xchg
ljmp
rolb
pop
or
leave
mov
xchg
mov
sub
sbb
loopne
clc
das
mov
loope
icebp
loope
cmc
cmp
cmp
mov
push
loopne
jns
and
jecxz
iret
ret
add
push
mov
popa
sti
sbb
lods
pop
ja
cmp
mov
cmp
or
fidivrs
js
scas
push
bound
jecxz
dec
and
cmp
adc
cli
outsl
shlb
mov
dec
add
mov
aas
insl
cmpsb
adc
push
cmc
sub
mov
pushf
fstps
and
out
cmpsb
pop
lcall
adc
fstpt
xor
std
scas
imul
dec
and
add
pop
repnz
sbb
xchg
sub
xchg
push
mov
fnstsw
lahf
shrb
enter
mov
ret
daa
inc
push
pusha
stc
lcall
and
cmp
movsl
xor
mov
sub
aam
jno
lahf
push
push
push
push
outsb
js
and
push
adc
jg
fcmovnb
dec
ljmp
jae
jmp
xchg
adc
pop
and
pop
fdivrl
in
mov
pusha
sub
and
sbb
out
addr16
subb
es
push
sub
mov
push
dec
insb
mov
call
xchg
bound
dec
std
lea
cmp
stos
hlt
cmpsl
lods
cmpsb
outsb
insb
insl
es
cwtl
mov
sbb
add
into
cmc
or
inc
inc
ja
cltd
or
jb
test
imul
ret
mov
mov
pop
shld
cmpsb
sbb
mov
jmp
mov
repnz
inc
jge
xchg
jo
ret
lds
jle
mov
and
icebp
movsl
inc
std
push
xchg
in
xor
dec
sbb
cmpsb
daa
outsb
fdivr
cmc
cwtl
test
into
mov
mov
and
jle
mov
mov
pop
inc
rcr
and
sbb
stos
loopne
add
mov
mov
jno
loopne
fs
lods
or
xchg
test
push
dec
pop
stos
call
lcall
mov
out
dec
aaa
nop
outsb
rcl
xchg
adc
aas
xor
test
in
mov
jno
xchg
ljmp
push
clc
xchg
xorb
dec
lds
dec
cs
rol
mov
xor
bnd
push
pop
mov
cli
cmp
in
adc
pop
insb
outsb
lret
dec
xor
and
push
mov
and
movsb
xchg
pop
adcb
dec
lods
push
inc
sbb
jmp
shlb
dec
test
lret
add
aas
push
sar
pop
push
and
pop
or
inc
add
aas
jg
aaa
mov
call
rcr
sbb
pusha
push
xlat
cld
test
ret
push
jnp
mov
inc
das
dec
mov
and
insb
jb
pop
loopne
dec
or
add
or
mov
mov
roll
dec
movsb
pop
and
fbstp
int3
cmp
jb
ss
dec
xor
aam
pop
movsb
lret
lret
or
fadd
repz
inc
jl
dec
cmpsb
or
sbb
mov
enter
cs
sahf
shrl
sbb
add
jne
push
fcomip
cs
mov
mov
mov
push
pop
jge
lock
jp
add
aaa
repz
hlt
or
mov
mov
popa
fadds
pop
and
pop
xchg
jae
mov
push
addl
or
ret
push
cmp
pop
mov
xor
cmc
jmp
call
out
mov
adc
lods
cmpsl
rcrl
push
stos
pusha
and
fbld
adc
inc
mov
pushl
xchg
pop
mov
test
sub
adcl
and
iret
inc
js
mov
adc
sbb
sbb
outsl
mov
ss
sarb
out
pop
repz
pushl
sbb
sub
in
lret
arpl
dec
repnz
fnstcw
add
adc
pop
cmc
lods
hlt
and
aaa
les
xor
sahf
aad
xor
dec
lea
adc
in
mov
sub
or
adc
test
cmpsl
arpl
clc
in
push
addr16
jge
push
mov
mov
jl
mov
addr16
sti
lret
mov
das
insb
pop
idivb
pushf
jle
dec
dec
jnp
or
ja
jnp
inc
divl
push
das
mov
pop
xorb
cld
outsb
sti
dec
pop
mov
outsl
dec
jp
sbb
sbb
dec
mov
push
sbb
xor
sub
sbb
cltd
and
ja
std
jb
cmp
cmp
rol
or
imulb
mov
adc
rolb
sarl
cld
pop
mov
inc
pop
mov
or
mov
test
inc
sub
fdivl
cmp
add
pusha
adc
addr16
mov
cmp
mov
and
outsl
jne
cs
das
sub
mov
cmc
je
pushf
xor
pop
out
adc
add
lock
pop
test
imul
mov
lahf
push
scas
pop
into
mov
push
mov
aaa
sbb
pop
inc
test
add
mov
inc
dec
shrl
mov
xchg
or
jmp
cmc
adc
push
lret
mov
or
push
testb
mov
outsl
or
lods
mov
lock
ljmp
push
stos
inc
jo
sub
pop
ds
and
lods
jg
jge
pushf
cmc
lahf
or
xchg
cmp
add
mov
enter
test
jo
inc
push
sbb
push
sub
or
mov
pop
mov
pop
in
outsl
xchg
cli
mov
cmp
mov
bound
cs
sti
mov
xor
out
xchg
push
sbb
or
in
das
lds
and
das
ss
hlt
rclb
mov
mov
or
popf
xor
sbb
cmp
addl
leave
dec
pop
adc
fmuls
outsb
sbb
int
in
mov
mov
mov
or
cmpsl
xchg
and
xchg
jg
mov
enter
jnp
add
cli
testb
sbb
stos
fbld
inc
adc
or
call
cmp
xorb
scas
push
test
or
sub
shlb
add
cmp
ljmp
leave
cmpsl
mov
adc
fistpl
and
pop
adc
pop
or
loopne
shll
lret
mov
sbb
mov
cmpsb
sahf
push
fisubl
movsb
loopne
vpsllw
push
in
hlt
push
mov
push
pop
dec
fsubrl
das
rorl
icebp
cmp
and
bound
jmp
cwtl
pop
xor
cmpsl
pop
sbb
sub
adc
sbb
jg
push
ret
xor
jo
and
push
mov
and
xchg
push
pop
xchg
xchg
mov
daa
xchg
in
inc
mov
jl
ss
dec
adc
call
mov
push
add
enter
xchg
inc
add
mov
outsb
mov
js
cmp
stc
push
ret
punpcklbw
outsl
push
sbb
pop
mov
sbb
xor
cmpsl
add
lds
adc
inc
xor
dec
cs
dec
xlat
inc
leave
loopne
jns
ror
jmp
aas
xchg
and
les
cmp
mov
mov
cmpsl
jo
dec
cmp
jae
cmpl
xor
fnstsw
cmpsl
push
lret
cmp
inc
lcall
push
icebp
cmc
pop
icebp
adc
cmp
in
and
cmp
jnp
sbb
out
inc
xchg
pop
call
addl
sub
fsubrs
int3
movsl
out
cmp
dec
add
jbe
pop
lods
cmp
adc
inc
xchg
scas
divl
shll
andb
bound
jae
inc
aad
fbstp
adc
aad
ret
xlat
rcr
xor
sub
pop
cli
movsl
outsb
loope
loopne
jnp
cmp
mov
ret
jae
cmp
xor
movsb
push
outsb
rcr
in
call
fwait
dec
mov
rcll
sbb
mov
je
pop
or
scas
mov
hlt
sarb
int
pop
aad
fisttps
adc
test
in
pinsrw
loope
push
bound
adcl
pop
andb
xchg
dec
nop
adc
mov
pop
push
xor
movsl
movsl
add
icebp
sbb
mov
or
sub
inc
or
xchg
add
lea
sbb
jecxz
out
fidivl
fmull
cwtl
inc
xor
push
mov
loope
mov
aas
jns
pop
jae
mov
sub
add
lock
cmp
out
mov
mov
stos
and
push
push
xor
ds
rcll
xor
mov
dec
jge
mov
cmpsl
inc
inc
and
lds
notb
mov
dec
jmp
sbb
inc
sub
adc
and
mov
adc
sbb
add
shrb
xchg
jb
decl
push
out
lret
out
sbb
jle
or
xchg
in
sub
shl
clc
pop
aad
or
out
mov
cli
pop
pop
popa
and
jnp
dec
ret
js
pop
xor
fistpll
lock
pop
les
rcrb
lock
mov
jnp
cvtps2pd
add
push
cmc
ret
xchg
and
scas
pop
pop
test
xor
sbb
dec
hlt
mov
pop
call
xor
cmpsl
pusha
jb
or
lea
sbb
pop
mov
add
dec
adc
mov
int
pop
jno
jno
xchg
jo
or
pop
inc
fwait
test
movsl
jle
test
cld
dec
push
xor
in
pop
cld
pop
jae
pop
inc
imul
shrl
sbb
jecxz
push
dec
std
jl
xor
sbbb
ret
cwtl
lahf
popa
mov
enter
ljmp
std
inc
jle
push
sahf
push
mov
add
insb
pop
insb
test
jg
pop
addb
add
push
add
sbb
pop
ret
in
mov
incb
imul
out
add
lds
movsl
and
inc
outsl
ljmp
add
jns
push
and
mov
fadd
inc
mov
mov
sbb
movsb
in
jg
dec
xor
ret
xacquire
push
push
or
fwait
or
push
mov
roll
inc
frndint
adc
pop
mov
lock
jecxz
mov
scas
mov
test
in
mov
mov
loopne
sub
fucomi
test
pop
mov
xor
mov
dec
or
mov
cmpsb
and
filds
mov
push
mov
push
aam
fimuls
fcmovne
lea
call
icebp
pop
pop
clc
pop
mov
sub
out
fsubp
movsb
adc
mov
xor
popa
shl
sbb
inc
push
add
lds
les
std
rclb
lods
dec
iret
mov
out
iret
out
inc
or
and
push
jae
shll
pop
ljmp
inc
imul
insl
mov
adc
std
inc
add
das
std
pop
inc
ss
add
cmp
xchg
mov
cltd
push
dec
sub
jmp
push
xlat
iret
lods
push
push
cs
jp
mov
adcb
dec
cmp
mov
add
adc
xchg
lock
sub
push
cld
mov
mov
push
div
and
mov
and
cmp
and
inc
dec
xchg
outsb
pop
out
and
push
lret
std
mov
cld
hlt
jmp
sbb
subb
pop
hlt
sub
fwait
push
cli
and
cltd
push
adc
pop
outsb
das
incb
clc
int3
xchg
xchg
insb
loopne
les
andl
cwtl
sbb
nop
test
vmovhps
ret
jecxz
sbb
jmp
mov
push
sbb
push
inc
out
fwait
mov
ds
push
adc
lahf
lock
cli
das
mov
xchg
push
sbb
insl
push
leave
fildl
mov
call
and
ficoml
cmp
cmp
mov
loop
cmc
filds
pop
dec
enter
pop
fnstsw
leave
leave
insl
push
sub
aam
mov
fildll
outsl
insl
push
push
out
mov
sbb
add
cmp
pop
pop
bound
stos
lods
xorb
sbb
outsb
ljmp
arpl
cli
sahf
outsl
add
mov
lods
adc
flds
in
icebp
mov
jmp
mov
addr16
clc
movl
jecxz
xor
decl
inc
cmp
or
xchg
xorb
int
movsb
int3
test
fildl
inc
leave
fucomi
lea
test
pop
test
mov
test
jp
fcmovb
shr
mov
adcl
mov
pop
jge
sti
orl
shl
adc
pop
cmpsl
sub
shrb
xchg
fdivp
jns
sbb
or
and
dec
shlb
mov
mov
pushl
je
cs
xor
sub
or
pushf
repnz
mov
mov
aas
jle
pop
dec
and
testl
popa
das
sarb
orl
pop
sbb
add
mov
aam
add
add
inc
fcmovnb
repz
aaa
fsts
rolb
enter
dec
pmaxsw
xchg
clc
nop
cmp
jne
inc
inc
mov
add
icebp
fwait
mov
lock
iret
push
xor
arpl
push
andl
mov
jg
push
xchg
or
cmc
ret
inc
loopne
mov
repz
int
jmp
idivb
jl
fcompl
xor
mov
iret
or
stos
cmpsb
inc
sub
cmp
mov
or
fwait
xchg
push
ja
mov
mov
lods
inc
jo
in
clc
inc
mov
fmulp
aaa
xchg
sbb
pop
mov
outsl
sbb
mov
xlat
push
xchg
ljmp
sbb
inc
aad
orb
in
sub
add
cmpsb
inc
arpl
push
cmc
mov
aad
sbb
hlt
mov
scas
xchg
pop
mov
testl
das
jl
add
add
mov
test
in
pop
test
jp
and
jecxz
add
outsl
shrb
popf
add
imul
pusha
cmp
pop
push
push
pop
mov
sbb
mov
cld
push
pop
aad
mov
leave
xchg
xchg
mov
jae,pt
pushf
or
mov
jge
dec
sbb
jg
xchg
inc
inc
frstor
mov
mov
jp
xor
or
roll
mov
xchg
loop
sub
cmpl
insb
ja
jae
fstpt
push
bound
push
mov
popa
cli
sbb
xchg
cmpsb
xorb
jne
or
addr16
jb
cmpl
mov
sbb
add
sbb
andb
push
cmp
ret
sarb
jg
jmp
outsl
add
or
lock
xchg
adc
call
mov
pop
scas
fstpl
inc
sbb
mov
push
cld
in
mov
mov
add
or
daa
inc
outsb
stos
fsubrl
in
fs
adc
mov
mov
cs
fstl
jg
sub
sarl
lock
mov
pusha
in
aad
mov
cmc
sahf
mov
or
jne
flds
leave
jne
add
cltd
test
cld
sbb
rcll
das
push
data16
cli
fwait
push
mov
inc
inc
stc
sub
mov
jge
push
pop
mov
idivl
popf
repnz
mov
nop
pop
and
pop
pusha
mov
gs
out
lcall
test
addr16
lock
addb
push
stos
cmp
mov
jle
stos
push
shll
test
mov
sbb
mov
mov
jmp
or
lods
cmp
pop
xchg
call
out
ds
popf
inc
xor
es
push
cs
es
add
roll
cld
dec
adc
rcll
jmp
icebp
pop
push
test
outsl
es
popl
fwait
jle
or
adc
jmp
cmp
xor
lods
dec
xchg
mov
cs
mov
out
push
aad
mov
hlt
pop
int
or
gs
xchg
daa
lahf
ljmp
xchg
cmp
dec
and
cs
dec
lock
stos
ljmp
repz
icebp
clc
inc
or
and
insb
fs
lock
or
and
dec
std
into
nop
push
pop
xchg
mov
pop
jp
addr16
xor
cmp
sbb
jae
pop
jl
fistpl
pop
ljmp
jmp
jno
cmpsl
sub
leave
mov
jmp
xchg
mov
push
and
test
dec
cmp
enter
jmp
fnsave
mov
push
icebp
push
fstpl
add
push
or
clc
ljmp
inc
subl
pop
loop
dec
lahf
pop
pop
adc
dec
mov
pop
and
das
pop
out
ja
and
clc
std
adc
or
fcoml
sar
push
test
into
xor
add
decl
and
dec
out
mov
aas
jg
jmp
pop
into
popf
aam
fsts
call
mov
fwait
iret
cmp
xor
and
fs
loop
add
shr
jmp
jecxz
mov
jl,pn
sub
clc
pop
xor
add
lret
jle
clc
or
shl
in
sbb
call
stos
popa
nop
or
fs
jno
cmpb
inc
sbb
in
arpl
cmpsl
pop
rcr
aam
push
jg
and
nop
add
aaa
mov
mov
push
mov
std
scas
mov
fcomps
xchg
pop
add
jbe
lods
jmp
jo
out
sbb
sub
jmp
inc
mov
mov
ja
out
cmp
and
sub
cmpsb
inc
cld
dec
dec
les
ret
fldenv
sub
mov
out
test
fcomip
call
mov
xchg
std
mov
out
pop
stos
xchg
movsb
vpcmpgtw
mov
lock
mov
dec
cmpsb
and
dec
mov
push
arpl
adc
and
or
lds
xor
loop
jns
and
xlat
push
jnp
xchg
mov
sbb
faddp
sbb
mov
sbb
or
jecxz
fbld
adcb
push
sbb
stos
leave
add
mov
aam
add
ret
push
lods
subb
addl
push
dec
xchg
sbb
add
and
inc
cld
outsb
jmp
cmp
clc
testb
add
push
jo
add
fisubs
sahf
test
pop
hlt
lcall
std
data16
and
test
push
je
mov
scas
mov
cmc
sbb
lcall
icebp
fwait
loopne
adc
loope
pop
mov
loopne
mov
and
pushf
shlb
out
cli
mov
inc
sbb
dec
outsl
add
cld
sbb
pop
and
fcoml
sbb
js
inc
pushf
ss
dec
mov
adc
iret
pop
faddl
lods
mov
pop
stos
pop
scas
mov
cld
popa
jae
outsb
shlb
movsl
mov
in
or
jmp
xor
or
scas
dec
xlat
sti
fwait
sub
mov
insb
mov
outsl
sarb
aas
sbb
mull
fdivs
xchg
aad
mov
push
imul
sub
mov
div
out
jecxz
mov
je
call
jecxz
pop
push
fnstcw
or
movsl
scas
sub
jno
sbb
inc
jg
jge
push
jg
insl
adc
mov
adc
xchg
mov
pusha
push
orb
or
popa
mov
insb
fmuls
push
xor
notb
rcrl
pop
jne
mov
mov
mov
scas
inc
mov
lret
push
std
cli
or
stos
std
pop
sbbl
mov
cmp
mov
inc
mov
out
pop
test
mov
push
std
push
mov
mov
cltd
call
mov
fwait
mov
sub
int
es
fnstsw
sahf
push
cmpsb
bound
ss
rclb
jmp
shll
or
cmp
or
mov
js
adc
push
shlb
sub
fbld
cld
inc
cmp
test
adc
jle
push
fdivr
enter
inc
mov
mov
xchg
hlt
push
sbb
push
mov
xorb
push
cmp
push
and
jl
clc
inc
sub
pop
orl
pop
jp
je
int
into
repnz
aaa
lock
inc
std
decl
gs
andl
dec
inc
cwtl
push
je
xchg
pop
sbb
shll
stos
xchg
daa
xchg
aaa
adc
jg
dec
loop
wbinvd
jl
and
xchg
fidivrs
sub
jbe
insl
inc
nop
or
dec
mov
mov
mov
sub
mov
pop
push
xchg
pop
es
sub
inc
outsl
mov
int
test
fcompl
adcb
lahf
mov
sub
and
jle
pop
loopne
test
add
bound
inc
popa
push
loopne
lahf
or
and
cmp
dec
popa
pusha
sti
testb
sahf
push
inc
iret
push
dec
jmp
imulb
lcall
jo
nop
add
mov
push
sbb
dec
nop
sbb
fcompl
adc
push
rolb
inc
push
roll
mov
sbb
push
jge
loop
sbb
adc
ljmp
es
or
and
es
jmp
mov
pop
js
xchg
sti
mov
mov
sub
adc
push
jg
std
cmp
inc
stc
orl
dec
push
test
rolb
add
sbb
rcrb
fldt
push
ss
mov
jge
outsl
push
pop
cld
adc
mov
test
jg
int
les
mov
icebp
xchg
je
or
js
lock
mov
jge
ja
ds
mov
adc
jg
gs
mov
pop
int
jmp
lods
mov
decl
popf
test
cmc
int
pop
fnstcw
inc
out
mov
aaa
aad
cmc
jb
test
fisttpl
pop
inc
mov
pop
fsubr
in
mov
loope
and
or
sarb
hlt
ja
aad
adc
subl
popf
cmp
or
adc
push
imull
aas
or
push
sub
lds
cmc
inc
add
jmp
and
sar
mov
aad
inc
popa
xor
dec
cmp
xor
icebp
movsl
push
gs
xchg
sarb
adc
or
and
test
sahf
mov
xlat
jb
fistpll
push
shrb
daa
aas
push
jmp
leave
mov
insb
xorb
push
mov
sbb
mov
das
or
sbb
add
pop
popa
imull
inc
sbb
jp
inc
sti
mov
decb
and
movsbl
pop
sarl
push
rolb
pop
jno
sar
mov
push
dec
inc
jmp
bound
and
hlt
xchg
aaa
outsb
imul
pop
cmp
and
push
fsubrl
inc
pop
test
lahf
inc
incl
lcall
movsb
push
arpl
and
xchg
sarl
add
push
adcb
shrb
sub
add
cmc
movsl
ret
mov
mov
cmp
jbe
and
shl
hlt
decl
outsl
xchg
loopne
add
mov
adc
in
movl
or
xor
jg
scas
sub
test
loopne
dec
xorl
leave
pop
xor
and
or
in
flds
jmp
test
inc
rorb
or
int3
mov
aaa
mov
cmp
nop
rcll
lds
xor
lock
push
pusha
xchg
dec
cmp
sahf
adc
push
cld
sbb
mov
fcmovbe
movsl
ljmp
into
lret
push
cli
das
mov
rorl
leave
push
sbb
inc
mov
iret
xor
mov
mov
mov
jmp
scas
inc
adc
aad
aaa
and
or
and
in
push
ret
add
test
test
and
ret
dec
loop
sbb
rorb
push
mov
insl
stc
add
xorb
fbstp
test
shl
cs
pop
push
mov
imul
stc
popf
dec
mov
sub
inc
jge
inc
jnp
push
add
lds
and
add
inc
mov
pusha
loopne
aad
mov
mov
lods
jno
fisubrl
push
mov
mov
lcall
leave
ds
mov
loop
sbb
jecxz
sbb
pusha
mov
iret
icebp
lcall
mov
mov
xchg
leave
test
test
fisubrl
xorl
test
insb
push
xor
mov
aas
sub
pop
in
add
xlat
rclb
popa
call
inc
pop
fdivs
xchg
xchg
out
stos
sub
ljmp
xor
xor
cmpsb
cmpsb
dec
es
jae
js
outsl
pop
adc
ss
push
jae
and
in
das
icebp
test
pop
and
stos
adc
cmp
push
sbb
jbe
cmc
mov
aaa
sbb
lcall
pop
stos
xor
cmp
dec
rol
xor
dec
filds
stos
out
mov
inc
dec
movsb
mov
in
mov
sbb
pcmpeqw
pushf
hlt
xchg
clc
pop
or
imul
stos
lods
mov
decb
jle
xor
fnstenv
in
adc
pop
leave
mov
and
lret
mov
scas
jg
bound
imul
ljmp
movsb
icebp
inc
mov
and
lahf
incb
sbb
mov
mov
popa
jno
jb
enter
lea
fdivl
dec
xchg
aaa
xor
xor
lea
cmp
lahf
lods
fwait
loope
stos
mov
adc
clc
lcall
mov
outsl
pop
cmp
push
aam
gs
xor
cli
add
add
sbb
in
mov
cmp
inc
cltd
sub
es
ja
xchg
adcb
lds
fisttps
xchg
das
inc
adc
dec
shlb
ffreep
mov
and
jns
inc
pop
js
call
jp
fadds
andl
inc
sbb
push
mov
arpl
mov
test
sub
mul
scas
int3
sbb
fistpl
icebp
mov
les
mov
and
sbb
xor
push
bound
or
or
gs
xchg
and
jl
mov
cld
push
push
push
testb
adc
adc
adc
pop
or
das
xchg
movsb
popf
andl
dec
lock
loop
adc
inc
cmpsb
loop
out
xchg
inc
xchg
incb
das
loopne
mov
lcall
das
xor
adc
stos
aad
cmova
or
loope,pt
loopne
dec
cmpsb
outsb
lock
push
cmpsl
pop
sbb
jle
dec
sbb
xor
out
push
pusha
sub
dec
out
mov
clc
adc
stc
mov
aas
adc
inc
shll
pusha
lods
mov
inc
adc
xchg
call
call
stc
in
andb
cwtl
sti
pop
test
test
or
add
mov
push
iret
addr16
aam
xor
sub
mov
jno
add
jbe
or
mov
sub
fsubl
fisubrs
inc
xor
dec
das
std
gs
es
xor
ficoms
aaa
loop
test
pop
lcall
in
pop
cld
push
mov
scas
mov
into
adc
and
xor
adc
adc
in
push
jmp
jecxz
aam
popf
adc
mov
or
or
pushl
or
clc
sar
movlps
sti
mov
stc
mov
lret
lods
sbb
mov
mov
mov
sbb
sub
cli
aas
add
repz
adc
ftst
mov
outsl
cltd
jp
icebp
jecxz
stos
fmuls
dec
pop
roll
inc
xor
xor
cmp
dec
movsb
xor
inc
in
fistpl
inc
cwtl
add
call
ss
pop
pushl
push
fldl
add
das
test
lret
xor
sub
cli
or
ja
sbb
aad
xchg
and
sub
imul
je
sub
pop
fst
lcall
outsb
cmp
add
mov
outsb
cmc
jg
lcall
sbb
mov
aas
pop
fistps
mov
lds
ss
cli
push
ljmp
lods
xor
call
pop
aaa
xchg
mov
xor
imul
cmp
dec
jmp
jne
or
cmp
adc
fsubrp
inc
pop
test
mov
loope
mov
mov
jecxz
dec
scas
mov
push
std
mov
rcl
mov
fwait
jnp
sarl
pop
mov
loop
xor
loope
cld
dec
in
scas
pop
pop
int3
call
xor
xor
call
psllq
lds
cmp
add
stos
fwait
test
test
shr
and
cmp
outsl
mov
dec
or
jg
das
lcall
push
push
aad
mov
popa
rolb
mov
lock
add
sahf
or
mov
jle
jl
cmp
popa
sbb
jmp
xchg
clc
dec
adc
insb
mov
mov
jge
cld
mov
out
loop
lods
mov
rclb
scas
fldt
mov
mov
add
scas
push
jp
push
push
fnstsw
enter
mov
inc
loope
jno
out
rolb
sbb
outsl
std
cmp
adc
imul
xchg
ss
lcall
lock
xchg
inc
test
push
and
pop
jmp
jp
aam
dec
mov
sbb
mov
dec
sbbl
mov
les
adc
sub
adc
roll
rcr
sub
pushf
sbb
lret
xchg
pop
subb
push
call
stc
loope
push
adcb
orb
xchg
and
push
sub
or
or
mov
or
xchg
lret
popa
add
and
call
scas
fwait
xchg
bound
xchg
mov
shrl
jmp
test
lds
aad
incb
rorl
mov
dec
or
pop
loope
ficompl
jns
ficomps
rorl
arpl
std
sbb
push
cmp
sbb
inc
xchg
loop
dec
mov
loopne
adc
imul
push
push
loopne
fcmovbe
inc
es
jnp
mov
mov
arpl
ja
enter
shl
or
adc
imul
mov
dec
push
or
mov
adc
or
jne
sbb
test
roll
int3
xor
sub
sbb
filds
cmc
dec
adc
outsb
and
pop
mov
mov
mov
aaa
or
out
enter
popa
jo
loop
insb
push
xor
xchg
jns
fucom
fildl
mov
adc
push
aad
std
fisttps
xchg
and
das
sbb
xchg
sarb
xchg
fwait
in
icebp
adc
and
sub
icebp
in
or
repz
addr16
fists
loop
mov
push
fiadds
fs
and
or
in
ja
or
jns
outsl
xor
sub
jno
mov
leave
mov
mov
sub
bsr
ja
pop
or
aam
mov
dec
in
repz
leave
pop
pushf
sbb
sbb
pop
jp
outsl
std
stos
cs
lock
inc
adc
and
dec
sub
adc
js
mov
popf
out
mov
mov
pop
loop
shl
dec
or
pop
or
hlt
bnd
add
ja
sbb
adc
je
loop
cli
aas
shl
inc
adc
mov
push
mov
outsb
mov
cmp
mov
or
loope
out
mov
shrl
mov
sbb
std
xchg
popa
stc
mov
lds
pop
jb
push
js
jle
test
fcmovbe
frstor
xor
cmpl
sub
jp
test
push
push
cmpsl
repnz
dec
shlb
imul
pop
mov
jle
cmpsb
jae
ds
inc
roll
stc
pusha
jp
bound
das
std
mov
fwait
adc
sti
popf
aaa
out
fwait
and
xlat
lods
outsb
or
push
xchg
arpl
jmp
xchg
jns
sbb
adc
lods
adc
gs
mov
xorb
nop
js
stos
sahf
stos
loop
add
and
ljmp
xchg
add
push
xchg
dec
or
dec
mov
mov
jle
mov
mov
adc
cltd
movsl
aam
sbbb
mov
outsl
insb
jl
das
pop
sub
test
pop
pusha
cs
mov
dec
inc
and
or
xchg
jmp
jl
sub
les
bswap
push
mov
daa
popa
and
cmpsl
cmp
inc
je
push
addr16
sub
insb
mov
out
insl
mov
jns
sbb
xchg
sub
rcl
insl
and
mov
lds
mov
das
icebp
fs
repz
fsubrl
lret
mov
cmpsb
outsl
jnp
mov
inc
jb
bound
push
or
mov
sbb
push
addb
movsl
repnz
dec
andl
insl
inc
add
cmp
rclb
mov
in
mov
jl
add
inc
push
inc
mov
pushf
pop
or
mov
adc
push
jmp
std
xor
incl
cltd
and
or
adc
movsl
pop
in
inc
or
lock
movsb
lock
push
mov
mov
xor
lahf
call
mov
lock
mov
out
fnstenv
and
icebp
inc
test
pop
mov
mov
loope
inc
mov
hlt
and
pop
aaa
sub
xor
flds
inc
cmc
ficoms
stos
pusha
pcmpeqw
mov
push
mov
ss
mov
pop
ss
lods
cwtl
ret
push
pop
pop
push
pusha
cmp
popf
or
mov
cmp
test
sub
int3
push
icebp
sub
jae,pn
jg
into
adc
cmpl
maxps
aam
mov
loopne
adc
sbb
fdivrl
fcmovnu
das
xor
mov
lea
cmp
add
push
in
call
lods
pop
xchg
cmc
fildll
mov
test
lahf
add
stc
jno
inc
add
pop
mov
jg
cmpsb
scas
jp
push
dec
pop
lret
xor
dec
and
fistps
test
adc
orl
aam
mov
das
icebp
stos
addb
call
jg
add
xor
mov
call
loopne
aas
xchg
hlt
call
sbb
adc
dec
push
mov
and
add
mov
push
jg
ffree
mov
and
sub
dec
or
stos
mov
mov
arpl
mov
inc
pop
in
fcomip
sbb
jle
mov
addl
ja
scas
jmp
adc
cmp
mov
in
sbb
dec
rsqrtps
xlat
inc
aad
scas
xchg
jb
lock
inc
fistpl
mov
and
cmp
sub
mov
outsl
mov
push
xchg
in
ret
negb
neg
xchg
mov
int
hlt
or
xor
and
outsl
hlt
insb
or
gs
cwtl
jne
adc
ret
decl
enter
repz
inc
adc
sub
inc
sub
aas
adc
sbbl
into
imul
xor
mov
dec
repz
xor
xlat
js
xor
ret
arpl
pop
inc
pop
lods
cmc
lahf
ljmp
daa
mov
add
popf
push
loopne
xchg
test
icebp
jbe
mov
arpl
mov
xchg
in
test
mov
push
out
add
sahf
in
insl
icebp
inc
mov
add
cli
jg
dec
fildl
gs
and
fs
loopne
pop
xchg
cmp
xor
jo
int3
int
dec
les
nop
test
inc
out
bound
stc
or
mov
xor
push
out
sahf
or
inc
jno
and
imull
mov
mov
int3
add
adc
out
dec
push
aaa
and
and
dec
cmp
adc
cltd
mov
sub
push
mov
adc
bound
pop
lret
std
pop
mov
dec
arpl
cmpsb
in
cmp
sub
jg
or
ret
dec
repz
pop
jle
and
shl
lods
xchg
jmp
jbe
pop
jl
mov
or
fldcw
sbb
sub
push
inc
ljmp
shlb
scas
call
push
out
movsb
add
pusha
mov
rorl
xchg
dec
or
mov
in
xor
lret
cltd
adc
outsl
mov
add
test
xorb
xchg
enter
call
push
xor
rcrl
mov
lret
out
xchg
aas
in
into
cmp
jnp
jo
mov
cmp
mov
int3
xchg
mov
cmp
cmp
icebp
sbb
pop
pop
cmp
pop
inc
mov
xchg
sar
in
outsl
repz
mov
mov
push
in
mov
add
sahf
pop
cmpsl
shll
loopne
pop
cmp
iret
sub
outsb
sbb
inc
pop
add
cmc
test
or
add
fists
or
dec
mov
testl
or
js
fnstcw
mov
das
loopne
inc
repz
sbb
popf
hlt
js
test
sub
fcmovne
icebp
scas
test
lret
out
dec
daa
sti
push
xchg
out
pop
jno
or
and
insl
aas
aad
push
fimuls
lods
nop
push
mov
push
inc
xor
mov
mov
mov
add
aad
insl
out
in
dec
sub
gs
xchg
and
leave
test
loopne
xor
test
das
bound
lock
xor
push
push
stos
mov
scas
imul
test
mov
jmp
popa
lret
add
aaa
test
add
dec
and
push
mov
adc
add
cwtl
add
jge
mov
call
clc
and
addr16
jo
inc
xchg
popf
out
sbb
cwtl
and
imul
jnp
adc
repnz
xchg
aad
out
idivb
sbb
rcl
sub
xchg
push
outsb
in
cs
mov
mov
out
lods
adc
rcll
dec
mov
repz
ja
shlb
idiv
jnp
adc
xor
in
push
dec
sub
mov
out
loopne
adc
imul
cld
sub
test
scas
adc
xchg
test
and
aam
je
and
imulb
and
dec
std
mov
inc
out
lds
call
das
push
lock
add
enter
and
stc
aad
shrl
add
adc
inc
add
dec
add
push
xchg
testl
sub
enter
das
mov
inc
adc
ret
lcall
js
jmp
int
cmp
push
shl
adc
inc
cld
jne
jb
push
sarl
incl
sti
dec
jmp
loop
pushf
out
std
inc
mov
mov
test
cld
mov
ljmp
stos
in
xchg
jno
mov
mov
clc
sbb
ss
movsb
iret
hlt
mov
dec
dec
fisttps
call
xor
jne
lahf
sub
ret
push
sbb
shlb
xor
mov
mov
pop
xchg
adc
aam
cwtl
pop
add
andb
daa
sub
pop
fdivl
nop
movsb
rcll
fdivrp
push
arpl
pop
mov
arpl
call
lahf
push
mov
jnp
cmc
outsb
in
add
mov
mov
pop
push
jl
push
repnz
jmp
into
in
or
lea
enter
test
dec
sbb
fnstcw
outsl
adc
je
sub
cmpsb
jmp
imul
adc
std
sbb
jecxz
outsl
adc
inc
pop
jecxz
or
jp
out
mov
jo
xchg
cmp
and
insb
sti
inc
inc
cld
pop
mov
call
ja
dec
loope
jo
rorb
data16
cmp
nop
aaa
in
mov
pop
clc
adc
cmp
mov
push
pop
mov
push
incl
inc
in
lahf
dec
add
dec
addr16
testb
jmp
imul
fwait
sti
ds
lods
fidivl
hlt
dec
jl
pop
mov
clc
lea
std
stc
push
and
stos
orl
push
jecxz
mov
mov
clc
jb
xchg
adc
push
in
cs
mov
aam
std
fbstp
and
push
nop
lods
dec
scas
and
lods
stos
mov
dec
lret
xchg
cmpsl
out
pop
xlat
fucomip
mov
fimull
push
fucomi
adc
sbb
add
and
leave
mov
xchg
pop
inc
aam
lock
adc
jl
xchg
fildll
cld
pushl
xchg
or
xchg
lcall
ficomps
adc
call
lock
dec
sbb
stc
mov
cmp
pop
cmp
call
sbbb
inc
jg
sbb
jno
mov
or
fwait
or
cmp
jecxz
xchg
xchg
pop
sbb
adc
cmp
pusha
std
mov
stos
loope
pop
xor
pop
inc
push
aam
xchg
pop
out
icebp
outsl
mov
push
or
mov
lds
cli
outsl
std
das
das
mov
xchg
hlt
xchg
pop
out
xchg
mov
xor
in
dec
pop
xchg
dec
add
inc
or
rorl
lods
dec
lods
cmpsb
mov
mov
sub
inc
out
xchg
outsb
mov
mov
std
fsub
test
mov
incl
sbb
mov
inc
hlt
push
pop
mov
adc
jns
pop
pop
dec
jae
adc
mov
cli
cli
or
orb
cmovo
jmp
xchg
leave
adc
and
aas
int3
pop
das
and
lea
ret
mov
pop
clc
stos
sbb
mov
lds
js
cmp
cld
scas
scas
xchg
pop
pop
sbb
jmp
dec
push
xor
cli
dec
cmp
pushf
enter
mov
cltd
push
call
dec
sub
sub
enter
inc
inc
inc
adc
lcall
or
int3
add
mov
jb
daa
cmp
push
stos
adc
frstor
movsl
jnp
or
xor
cmpsl
inc
xchg
mov
lea
mov
adc
and
pop
push
xchg
adc
lods
outsl
imul
mov
mov
and
xchg
mov
lcall
rol
adc
movsb
cltd
push
cmc
push
cmp
movsl
add
add
push
dec
or
jp
inc
jb
clc
outsb
mov
sub
add
sbb
xor
fildl
sbb
inc
movsl
jns
cli
incl
cmp
cwtl
dec
push
ss
jae
adc
mov
lret
jle
sti
scas
aaa
cmp
xacquire
and
cld
xchg
lret
ret
push
sbb
jl
add
or
rcrb
adc
dec
mov
inc
scas
mov
aas
mov
cmp
lcall
test
and
sub
sbb
inc
push
insb
fiaddl
or
jbe
clc
jg
adc
push
loopne
cmp
rclb
sahf
leave
icebp
mov
pop
pop
jae
fstps
push
dec
aas
xchg
addb
dec
mov
xlat
pop
loopne
inc
scas
add
stos
or
flds
mov
jg
jnp
out
sbb
insb
dec
jge
pop
cmp
insb
ja
sbb
mov
aad
je
cmp
pop
cmp
inc
outsl
rolb
ficompl
fisubrl
and
adc
lahf
and
repz
jg
out
ljmp
jno
dec
inc
and
dec
push
outsl
cmp
fadds
in
mov
push
test
dec
rcrl
or
pushf
lret
mov
int3
mov
pusha
cltd
imul
jae
push
inc
jl
push
mov
bound
jp
in
mov
mov
inc
sub
ljmp
inc
pushf
mov
pop
rclb
jns
jle
mov
cmc
aas
dec
mov
mov
and
js
out
mov
mov
jecxz
enter
jecxz
xor
push
push
aaa
insb
mov
rcr
mov
sub
insb
pop
jl
xor
fnsave
rcr
push
mov
data16
clc
cmpsb
add
sti
cs
xchg
dec
xchg
push
cld
outsl
lret
std
bndldx
lods
add
cld
pop
lods
xor
dec
cld
test
sbb
inc
fistpl
mov
inc
jge
cmp
pop
outsb
mov
les
dec
jno
das
and
dec
add
and
les
insb
jle
movsl
sbb
mov
shll
sub
xchg
dec
push
adc
jo
icebp
cmovo
fs
jmp
push
mov
aad
and
lret
mov
push
scas
add
inc
outsl
mov
bound
mov
aaa
mov
ss
insb
or
push
cwtl
punpckhdq
push
aaa
push
jecxz
inc
inc
mov
adc
cmp
aaa
imul
loope
push
mov
mov
ret
nop
cpuid
clc
dec
add
dec
sbb
aam
enter
test
fistpll
mov
mov
mov
jg
jmp
sbb
lea
pop
xor
fbstp
mov
dec
lret
inc
addr16
mov
inc
out
sub
out
clc
lcall
roll
pop
setns
inc
out
imul
dec
cmc
aam
stc
cli
xor
push
mov
or
sub
mov
xchg
repnz
push
add
mov
add
cld
dec
subb
pop
sahf
in
mov
stc
dec
es
sub
or
mov
cli
rol
loop
sub
mov
sbb
mov
rclb
leave
sbb
jg
sbb
jbe
cmp
and
mov
pusha
pop
dec
mov
std
cmpsb
das
jl
or
lods
pop
in
xlat
push
aas
jnp
push
add
mov
xor
cld
jg
js
xchg
sbb
out
jl
mov
mov
inc
inc
dec
pop
mov
cmp
add
add
and
fisubs
repnz
mov
jmp
xor
orl
cmp
aam
and
sub
stos
dec
mov
xchg
push
scas
ljmp
rcrl
pop
aam
in
mov
sti
sbb
loop
enter
pop
das
adc
push
lds
and
add
inc
jnp
js
mov
rcr
jg
ss
rcr
lret
dec
lcall
push
insb
outsl
add
int
mov
mov
fs
inc
testl
ds
mov
lods
movsl
outsl
in
jl
js
loop
das
inc
cmpsl
and
cld
pop
fsubrl
outsb
xor
sub
popa
jg
cmc
outsb
mov
ss
fisubs
cld
sbb
sub
sbb
jle
dec
insl
aaa
das
subl
mov
pop
dec
mov
and
call
and
bound
leave
cmp
xor
pop
sub
xchg
outsl
orb
scas
outsl
rcll
sub
xchg
mov
add
push
clc
fbstp
sub
adc
add
in
cwtl
pop
fnsave
ss
mov
fimull
mov
shll
jge
bswap
stc
dec
push
cmp
cmpsb
and
out
jmp
or
inc
xor
cmp
pop
mov
adc
rclb
lret
dec
aaa
hlt
sub
fwait
iret
jns
shlb
mov
pop
in
outsl
mov
test
pop
jns
test
mov
push
inc
incl
jb
pop
or
xchg
lods
jb
das
cmp
in
xchg
xor
mov
inc
add
dec
push
mov
stc
sub
fisubrl
loope
test
pop
dec
dec
rclb
fwait
push
negl
cld
outsl
inc
test
test
mov
lahf
outsb
dec
mov
inc
xlat
xchg
loop
std
fcmovnu
push
inc
jmp
scas
shll
and
cmp
aas
and
xor
mov
std
ret
sarb
adc
loope
or
rcrl
xchg
cmpsb
and
outsl
or
lods
cli
xchg
and
fists
sbb
gs
lcall
fists
hlt
pusha
loope
push
movsb
mov
movsb
dec
call
insb
mov
or
fistpl
pushf
cmp
pop
mov
push
xchg
inc
jo
xor
xchg
mov
es
fcmovnu
mov
sub
mov
mov
jmp
gs
call
cli
jecxz
mov
jo
xchg
mov
je
push
sti
mov
xor
cmp
mov
jb
pushf
lock
pop
andl
or
xor
popa
or
ja
sbb
sarl
imul
push
fisttpl
outsl
loopne
lods
cmp
loopne
jbe
lods
pushl
sbbb
add
js
adc
and
inc
aaa
data16
enter
shl
mov
outsl
test
jne
inc
jecxz
das
pushf
jae
call
mov
push
mov
sbb
sbb
scas
loopne
insb
xorps
negl
pop
jle
rorl
jg
fbld
or
xchg
sbb
nop
sahf
filds
xchg
push
lcall
or
pop
add
adc
inc
lods
clc
ds
and
jmp
cld
int
outsb
push
xor
out
jecxz
xchg
sub
mov
call
loop
mov
call
cli
daa
xchg
fcoml
fcmovnbe
inc
out
fisubl
fsub
adc
mov
mov
pop
shrl
std
ja
inc
orl
out
mov
jg
pop
pop
orl
add
mov
push
outsl
or
cwtl
incl
lcall
push
jge
or
js
lcall
movsl
fcmovnbe
fnstsw
push
adc
mov
outsb
iret
xchg
decl
jae
and
lret
into
jmp
mov
fwait
outsl
or
pusha
or
pop
and
inc
jne
pop
lahf
push
push
rcl
cld
adc
sbb
xor
add
jnp
mov
add
or
dec
mov
inc
xor
add
jo
add
bnd
xor
mov
cld
sbb
shll
cmpl
pop
daa
or
add
add
pop
or
ret
xchg
enter
jecxz
sbb
pushf
push
jb
xchg
movb
sub
push
pop
mov
push
or
shr
lret
outsl
test
add
jbe
into
push
std
jg
pop
adc
add
test
hlt
push
mov
inc
cmpsl
sub
push
test
jno
nop
mov
cmpsb
call
je
or
icebp
or
cld
outsl
jl
call
dec
outsb
and
or
xlat
mov
movsl
mov
adc
aaa
cmp
sbb
cltd
sbb
add
pop
insl
push
adc
test
inc
addr16
adc
call
in
push
mov
clc
ja
push
mov
add
mov
aad
adc
fisttpll
cli
rcll
cmpsb
inc
mov
pop
adc
xchg
xchg
push
or
hlt
push
mov
stos
pop
ffree
aas
xchg
rorb
mov
negb
lods
xor
jmp
adc
incl
imul
cmp
mov
xchg
push
loope
pop
jmp
and
test
lock
decb
inc
test
ret
or
mul
add
roll
dec
push
mov
dec
cld
sbb
mov
add
decl
and
jge
pushl
idivl
add
add
inc
aam
cld
sbb
jns
add
mov
cmp
add
and
int
push
mov
xor
jg
mov
xchg
inc
cmp
jp
scas
in
pushl
inc
dec
xchg
scas
rorb
and
popa
cltd
pusha
mov
test
mov
mov
xchg
lahf
in
call
sbb
cmp
pop
mov
or
sti
mov
insl
or
xchg
pop
pop
or
adcl
sub
cmp
or
pop
std
or
mov
cwtl
aad
lret
or
xchg
sbb
daa
test
clc
decl
roll
lds
jge
adc
inc
sub
sbb
ret
mov
in
loope
fstps
adc
sub
or
or
loop
mov
andb
fistpll
sbb
cmp
clc
pop
cli
out
dec
adc
jno
mov
xor
fistpl
scas
mov
movsl
and
loope
shlb
pusha
cmc
es
push
jg
mov
add
js
clc
or
or
xor
or
cmp
push
hlt
pop
movsl
cmc
or
cltd
andl
sub
add
leave
cmc
iret
lods
push
fdivl
mov
cmpl
mov
jp
sub
fimull
or
fcomip
popl
push
imul
cmp
test
ss
or
pop
add
and
into
dec
les
sbb
xchg
dec
fstl
mov
push
clc
dec
movsb
mov
dec
and
aas
push
les
jg
cltd
pop
test
les
out
scas
or
stc
pop
sub
shrb
inc
xchg
adc
add
push
fcmovb
lea
mov
push
fmul
shlb
sub
xchg
sbb
shrl
push
xor
incb
in
mov
stos
das
fcompl
xor
cmc
aaa
jle
inc
sbb
jne
enter
stc
aaa
hlt
sbb
push
xchg
insb
ret
stos
fdivs
xchg
mov
cmc
jg
add
add
adc
incb
rorb
scas
mov
pop
dec
inc
add
in
mov
or
and
dec
jp
mov
inc
pop
pop
cmp
cltd
adc
aad
add
or
mov
or
aam
aaa
ss
mov
adc
jne
lcall
xor
lahf
sbb
add
inc
in
repnz
sub
push
scas
shlb
dec
and
adc
sbb
mov
xchg
mov
mov
xor
jns
sub
mov
jl
jns
mov
add
mov
loope
adc
sub
inc
jp
mov
lods
adc
fwait
cli
pop
hlt
sub
repz
clc
sbb
rcll
cmp
les
or
rcl
or
lahf
cld
out
aaa
mov
pop
cltd
aam
stos
loopne
jno
inc
and
pop
add
pop
mov
pushf
aas
xchg
adc
add
lea
stos
orl
popa
pusha
push
sub
pop
jno
pop
call
call
icebp
gs
or
push
sbb
mov
cmpsb
xor
pop
in
sub
inc
or
or
mov
fisttpl
testb
mov
jg
jg
add
ja,pn
pop
dec
mov
adc
sbb
pop
cld
push
loope
mov
lcall
adc
into
rcrb
or
adc
ljmp
xchg
push
das
adc
rolb
pop
and
bnd
mov
sub
decl
fimuls
add
adc
dec
idivl
data16
imul
loopne
movsl
mov
xchg
mov
popf
pop
adc
xor
loope
ret
push
mov
and
ja
incl
inc
adc
and
inc
iret
or
sti
divb
call
sahf
rcll
add
cli
loopne
push
xchg
outsl
fistl
in
lods
popa
dec
adc
fldt
xchg
fcmovb
lods
sub
mov
jns
adc
push
xor
lods
fstl
pop
adc
pop
aad
fbld
and
shll
mov
mov
inc
dec
adc
clc
xchg
es
add
ret
xchg
add
ret
inc
addb
lock
ficomps
sbb
testl
inc
das
fcmovnu
pop
jmp
pop
mov
xchg
mov
cltd
ffreep
cltd
mov
and
sbb
push
push
rcrb
push
loop
mov
and
push
std
push
xchg
cmp
jp
sbb
and
and
orl
faddl
loope
dec
jb
imul
scas
inc
hlt
add
pop
loope
pop
push
aas
sub
xchg
cmp
pop
js
pop
pusha
sbb
jl,pt
cmc
mov
in
aaa
pushf
scas
out
imul
je
enter
cwtl
lods
decl
lea
stos
mov
mov
pop
outsb
outsl
out
push
dec
je
clc
inc
xchg
or
movntq
ret
std
mov
lcall
and
add
in
jb
mov
ljmp
inc
and
cs
mov
cs
and
dec
and
jb
cmp
cli
inc
out
or
in
int
int
shrl
ds
adc
nop
jecxz
lods
inc
xlat
dec
inc
dec
ljmp
jge
cmc
sbb
xchg
aas
inc
js
imulb
or
test
jbe
mov
nop
and
decl
or
imul
xchg
loopne
jg
mov
mov
xchg
jnp
fnstcw
xor
lea
or
sbb
clc
les
fbld
pop
mov
mov
xchg
bound
lock
mov
mov
call
cmp
mov
xchg
fadds
fldcw
das
sbb
jb
xor
aaa
jnp
iret
push
in
or
adc
pusha
xlat
mov
xchg
mov
xor
stos
add
mov
mov
adc
jbe
pop
sahf
test
cmp
xchg
sbb
mov
daa
icebp
fsts
call
mov
and
outsl
inc
xchg
jbe
sbb
mov
or
xchg
and
lahf
push
mov
outsb
pop
sub
aaa
jno
mov
and
dec
scas
call
mov
pop
inc
and
clc
mov
iret
mov
push
dec
outsl
loop
mov
mov
movsl
mov
jo
aas
outsb
les
xor
mov
sbb
push
xlat
jno
mov
pop
dec
push
mov
mov
out
sub
and
pushf
cmpsb
jns
mov
and
push
mov
cmpsl
inc
call
shl
mov
push
sbb
mov
popa
pop
call
stc
adc
pop
mov
jb
jno
xchg
pushf
getsec
pop
pusha
sub
lahf
loopne
sub
mov
daa
adc
pop
sub
mov
or
xchg
enter
lods
xchg
ljmp
negl
scas
pop
sahf
mov
callw
out
ret
push
das
test
sar
push
movsl
decb
jmp
clc
lret
pusha
repz
ret
loopne
cld
cmp
push
ret
insb
add
or
jecxz
and
notl
jecxz
shll
aas
jp
mov
jno
push
imul
cld
push
test
jbe
int
xor
mov
dec
add
lods
mov
out
repz
lea
orb
outsb
mulb
sub
scas
out
cmpsb
pop
ffree
or
jmp
test
lahf
cmc
ja
rcrb
push
inc
mov
cmp
aas
jl
js
inc
test
sub
aaa
cmp
pop
shrl
jns
test
ficompl
add
cltd
in
xchg
aaa
cs
xor
lret
xor
lret
addb
jmp
sub
mov
inc
repnz
jg
xchg
mov
add
mov
dec
out
sahf
fidivl
fmuls
adc
mov
lahf
sub
js
mov
sub
inc
out
jne
lods
mov
in
mov
xlat
jge
jnp
sub
push
sub
push
shr
pop
fdivrl
sti
jg
pusha
push
xchg
push
xor
lcall
call
add
xor
imul
add
inc
aad
sbb
shll
lea
jae
dec
or
push
and
imul
adc
sub
jae
fstpt
icebp
insl
mov
add
ffree
pop
pop
ljmp
in
sbb
loope
hlt
and
scas
cmpl
std
push
test
lret
inc
cli
sti
fs
cwtl
lock
idiv
ja
test
loope
loope
mov
dec
arpl
in
cmp
pop
push
orb
pop
jg
xchg
fimuls
or
int3
sub
addb
inc
fstps
mov
push
sbb
cltd
pop
jnp
inc
ja
imulb
xlat
rorl
ret
push
dec
outsl
dec
es
decl
cmp
push
push
bnd
lret
xor
cmp
mov
outsb
les
adc
push
adc
mov
mov
adc
scas
out
dec
int
movsl
xchg
xor
jl
pusha
icebp
jbe
int
pushl
dec
add
pop
inc
xchg
in
xor
std
ja
push
out
fdivrs
into
sbb
pushl
xchg
leave
xor
leave
mov
lea
mov
mov
loope
cmp
fisubrl
dec
daa
ficomps
or
rol
push
mov
les
ss
call
jg
aam
push
outsb
lcall
cmp
jp
mov
hlt
xchg
enter
decl
jecxz
push
das
popf
sarb
and
pusha
je
enter
divl
sti
pop
outsb
addl
frstor
popa
in
adc
push
mov
incl
add
jg
push
mov
jg
int3
or
fsubr
out
mov
mov
mov
je
out
and
mov
jg
mov
stos
push
mov
in
ret
sbb
push
ret
nop
popa
jle
clc
pushl
std
cs
leave
test
idivb
in
shll
test
leave
mov
add
stos
push
aas
lods
clc
pop
pop
movl
mov
andl
ret
mov
shrb
and
leave
ljmp
decl
fbld
fnsave
ljmp
pop
insb
ret
cmp
add
xchg
sar
clc
lcall
sbb
or
les
pop
jp
stos
fisttpl
js
sti
inc
ljmp
jmp
pop
sti
and
sar
xor
stc
xchg
xchg
inc
inc
clc
lcall
int
push
decl
pop
push
iret
fisttps
or
push
es
sbb
test
mov
dec
or
dec
imul
mov
sub
decl
daa
mov
arpl
aas
sub
dec
push
fsubrl
popf
call
incl
mov
jns
mov
jno
filds
lret
out
jle
add
add
dec
std
mov
push
icebp
ds
jo
push
jp
inc
mov
push
rcll
cld
sbb
call
or
fs
push
and
adc
cmp
adc
shlb
mov
jne
cld
ljmp
scas
out
inc
insl
arpl
pop
adc
adc
js
xor
xchg
decl
addr16
mov
mov
fistpl
aaa
pop
jo
lock
repnz
outsl
and
xchg
cli
lcall
daa
int
fimuls
nop
je
mov
push
out
cs
inc
sbb
ret
fistl
adc
dec
mov
inc
in
dec
call
loope
lret
and
xor
mov
adc
arpl
js
bound
dec
or
in
fnsave
daa
lret
sti
inc
mov
or
dec
pushl
jns
cmpsb
sarl
fmull
ljmp
lea
lock
pop
repnz
or
inc
mov
cmc
ret
pop
fwait
sub
leave
add
pop
mov
sbb
sbb
pop
lret
addl
dec
or
lahf
int3
lods
lea
leave
lret
inc
fnstcw
gs
xor
lcall
sub
mov
out
or
inc
cwtl
sub
jne
pop
xlat
cs
sub
inc
push
mov
icebp
jno
xor
and
push
clc
or
add
adc
inc
jg
dec
ljmp
jae
pop
ret
lods
pop
and
dec
lcall
mov
jno
data16
jb
add
movsl
mov
stos
xchg
cli
sbb
pushl
lods
lds
xlat
pop
stc
fdivrp
rorb
or
cmp
jbe
pop
push
ror
push
imul
pop
sub
ss
and
cltd
adc
xor
cmc
addl
xlat
sbb
cli
loope
repz
mov
sar
es
fstpt
pop
mov
int3
out
idivl
call
mov
mov
pop
inc
lds
inc
je
cmp
lahf
xchg
push
inc
mov
cltd
fdivl
push
mov
dec
popf
nop
ss
pushl
je
inc
cwtl
std
xchg
xchg
and
ret
repz
out
fidivrl
pusha
jmp
fisttpl
cs
incl
aas
repz
mov
jb
push
daa
adc
jge
xorl
ljmp
pop
lds
nop
and
movsb
mov
push
dec
push
inc
adc
ljmp
or
adc
jecxz
sub
cmpsb
and
mov
push
incl
lea
add
sbb
fsubrl
push
sub
xor
push
or
inc
into
lcall
xor
int3
stos
pop
mov
into
jb
and
jle
jns
pop
clc
mov
dec
cld
sbb
roll
pop
hlt
push
jae
icebp
aaa
jg
ds
fwait
lods
dec
cmp
imul
repnz
push
cwtl
mov
notb
sbb
shlb
lock
test
out
pop
mov
fsubs
xchg
bnd
xchg
cmp
lods
xchg
xchg
call
sti
adc
rorb
mov
sub
lods
hlt
push
les
rcll
movsl
in
push
mov
xchg
fstpl
jmp
inc
cs
bound
out
out
ret
ljmp
std
out
cmc
pop
enter
shrb
imul
push
repz
aam
into
jg
fildl
movsb
clc
jno
out
xchg
clc
push
mov
loop
or
ljmp
mov
and
adc
sti
xor
or
aad
or
loopne
decl
jmp
cmp
fidivrl
jecxz
dec
and
mov
or
mov
in
in
cmp
jge
scas
hlt
std
cwtl
lcall
fstpt
mov
popf
movsl
shl
pop
ss
mov
adc
test
lcall
jae
out
dec
stos
jl
int3
mov
sub
sahf
shrd
mov
pop
clc
lcall
sub
roll
lcall
or
pop
stc
test
call
in
mov
test
xchg
sbb
pop
dec
and
dec
xor
adc
iret
or
or
pop
jnp
mov
push
dec
ret
cmp
dec
xchg
jmp
lcall
or
iret
mov
push
push
sbb
cmp
xchg
int
lods
xchg
sub
sbb
push
inc
and
lods
mov
dec
jbe
sbb
pop
incl
jbe
inc
jg
shl
jmp
push
mov
mov
scas
lcall
add
jno
andl
or
adc
jns
and
jg
adc
loopne
push
jo
fxch
daa
call
and
std
std
mov
in
cld
sub
dec
popa
inc
jb
jne
sub
or
lcall
add
jne
mov
pop
stc
out
add
mov
dec
movswl
mov
test
jb
jg
ficomps
dec
pop
sahf
push
lahf
dec
loopne
enter
repz
test
ljmp
inc
fwait
in
out
mov
fistpll
insb
jbe
vandpd
outsl
cmc
les
fmuls
jecxz
pop
lods
xor
movsb
movsb
insb
pop
sar
outsl
cmc
outsb
int3
cmp
out
xchg
movsl
mov
sar
ja
mov
inc
cli
cmp
inc
cmp
aaa
ljmp
cmpsb
jmp
xchg
mov
inc
sbb
cmp
pushl
or
push
and
pop
xchg
dec
jl
xchg
pop
call
scas
cs
adc
inc
sub
sub
lahf
sbbl
sub
jmp
xchg
jg
xchg
mov
mov
fwait
stos
sbb
ds
aam
xchg
mov
adc
push
into
mov
lcall
push
jbe
scas
aad
bound
fildl
rolb
jne
rolb
ret
bound
lcall
mov
or
lea
outsb
inc
leave
mulb
bound
dec
push
jg
inc
jecxz
jne
adc
popf
cld
enter
cli
push
pop
loop
mov
repz
mov
pushl
xchg
in
insl
jmp
fcoms
add
pushf
shlb
pop
in
decl
xor
cmp
stos
out
xor
es
cmpsb
jbe
cmp
movsl
call
mul
pop
in
es
jae
mov
xlat
fucomp
daa
sub
decl
xchg
negw
xlat
cli
stos
mov
pop
xor
ds
sbb
cli
mov
or
xlat
bound
push
aas
inc
xchg
xchg
adc
fs
adc
scas
filds
stos
add
arpl
sbb
lahf
push
lret
inc
push
imul
aaa
mov
mov
jae
repz
push
cmpb
scas
ret
in
sbb
cmp
or
stos
pusha
jae
cltd
jnp
std
xor
js
cmc
inc
xchg
or
push
pop
nop
sar
decl
sbb
pop
fldenv
mov
loope
imul
imul
pop
sbb
in
sbb
filds
cmp
pushf
push
mov
mov
pushf
xchg
ds
jnp
ljmp
ds
sti
mov
faddl
aam
or
sbb
call
and
dec
ret
jmp
adc
out
and
stos
je
insl
jp
sbb
sahf
decl
fs
xchg
ja
and
repnz
add
sub
cmpsl
add
push
outsl
dec
dec
pop
daa
adc
adc
stos
daa
jmp
pop
js
add
mov
sbb
inc
inc
push
or
lock
inc
fwait
cmpsb
and
test
stos
lret
test
cmp
test
push
xchg
aad
data16
es
gs
pop
test
adc
xor
mov
jl
rorb
mov
div
lock
sbb
pushl
clc
jmp
push
cmp
hlt
stos
out
adc
cli
lods
sub
adc
rol
push
incl
imul
iret
mov
cltd
mov
mov
mov
inc
push
jle
cmp
test
fwait
jno
jne
es
incl
stos
out
push
andl
outsl
std
incl
lahf
mov
hlt
inc
insb
and
fisubrs
outsl
jae
jmp
loope
incl
pop
fs
es
jmp
mov
imul
push
push
insb
inc
dec
push
pop
xor
cli
pop
sti
les
inc
std
ss
and
adc
jnp
sahf
jb
adc
sbb
pushl
inc
insb
xchg
adc
adc
xchg
clc
inc
pop
xchg
xor
lahf
push
mov
cld
jb
pop
ss
fbld
roll
jnp
xor
dec
mov
jecxz
and
sbb
decl
dec
rolb
sti
rcl
xchg
cld
cli
fistpl
incl
pop
ljmp
outsl
and
jmp
jb
push
pushf
in
lcall
mov
jecxz
mov
sbb
pop
lcall
rorl
loop
in
and
pushl
inc
push
das
dec
call
sub
or
lret
pop
clc
lcall
inc
sti
push
xchg
fstpt
mov
jmp
fucomi
sbb
dec
inc
mov
hlt
inc
call
jno
jle
jg
and
test
mov
roll
push
cmpsl
adc
pushl
repz
fmuls
ret
fadd
insl
mov
iret
or
scas
inc
fnstsw
inc
dec
hlt
scas
xchg
mov
sub
testb
inc
push
data16
pop
sbb
sar
inc
and
xchg
cmp
adc
jnp
push
inc
ds
pushf
leave
lds
cmpsb
pop
dec
xchg
cli
jmp
push
aad
jae
push
pushf
and
cld
ds
mov
ja
stc
inc
ret
mov
ljmp
inc
mov
xor
dec
test
pop
mov
cmp
fildl
fildl
jne
or
fbstp
in
adc
sub
cmp
pop
dec
pushf
xorl
lods
and
pop
pmaxub
push
inc
movsb
or
mov
clc
sbb
lcall
cld
outsl
ret
mov
jnp
div
inc
sub
mov
loope
and
sbbl
bound
ret
testb
lds
test
sahf
sbb
shrl
aaa
mov
mov
imul
ja
adc
fwait
scas
mov
ret
loop
decl
add
sbb
xchg
sarb
fs
cmp
jmp
ficoml
inc
and
in
add
aam
mov
lcall
cmpb
sub
push
mov
mov
xor
mov
mov
faddp
pop
clc
or
pushf
and
add
outsb
out
cmp
call
jecxz
insl
and
and
mov
add
loopne
repz
jno
mov
call
mov
push
rclb
iret
xor
sbb
xchg
addr16
pop
sbb
mov
jae
mov
gs
out
popl
cs
mov
subl
mov
mov
xor
fdivr
decl
add
xchg
jecxz
xor
test
xchg
ljmp
mov
xchg
loop
sbb
or
outsb
jbe,pn
and
dec
loopne
out
and
inc
mov
out
vcvtdq2pd
repnz
push
jge
loop
push
adc
popf
mov
outsl
sbb
cld
in
xchg
mov
or
rcll
xchg
pop
mov
ljmp
mov
jge
test
xchg
orb
lret
sub
cmpsb
lret
inc
cmp
add
lock
aaa
lea
lahf
mov
sahf
and
add
inc
xor
adc
ret
adc
mov
lcall
push
sub
test
add
add
mov
cld
insb
adc
and
aas
mov
sbb
adc
stos
sbb
mov
sti
and
lods
or
outsl
sub
xchg
cli
jmp
xchg
sarl
or
sbb
and
jl
movsl
ljmp
cs
add
repz
and
adc
push
in
ljmp
xor
sbb
jns
in
push
pop
clc
insl
xchg
fidivrs
int
push
dec
loopne
imul
sbb
imul
out
js
mov
call
icebp
fadds
mov
mov
dec
cmp
popa
push
icebp
jae
ljmp
add
mov
stos
mov
idivl
lods
jne
xor
outsb
hlt
fdivrl
out
adc
sub
adc
js
jg
pushl
xchg
out
sbb
xor
aas
dec
mov
mov
out
fisttpll
lcall
out
aaa
int3
push
fsts
pop
dec
and
mov
jno
mov
inc
pop
fucomip
outsb
pusha
xor
mov
xchg
xchg
cltd
or
fdiv
or
mov
test
fnstsw
pop
std
std
pushf
sbb
lds
dec
cmp
addr16
mov
xchg
sbb
lahf
cmpsb
outsl
add
sub
cmp
stos
pushl
pushl
out
imul
testb
std
jl
xor
add
call
push
dec
sbb
xor
and
sbb
xchg
or
rcrl
sub
add
fdivr
mov
frstor
jae
cmp
popf
dec
push
incb
xchg
dec
push
pop
test
mov
cmp
daa
xchg
loopne
outsb
loopne,pn
mov
fstps
maskmovq
notl
push
rorl
lcall
fmul
stc
cmp
insl
jo
subb
or
inc
aam
push
arpl
add
pushl
mov
mov
push
mov
loop
test
ret
mov
lcall
inc
mov
mov
dec
push
add
xchg
cli
pop
cli
add
cmp
pop
insl
xchg
push
lcall
out
and
daa
lahf
mov
and
out
incl
pusha
push
hlt
jne
ja
cmp
or
call
scas
aas
lahf
daa
or
test
repnz
test
clc
ret
cmp
jns
mov
or
sub
adc
or
jg
nop
push
jl
mov
mov
pop
in
push
inc
stos
shll
or
mov
subb
jns
sbb
mov
inc
bound
shrl
inc
lock
push
aad
lret
dec
mov
or
in
mov
fdivrl
pop
decl
lods
jle
sbb
movsb
js
add
inc
add
mov
and
mov
idivb
cli
sbb
addr16
aam
out
je
jg
lcall
or
push
mov
ds
in
insb
not
cmp
incl
lods
or
testb
pop
xor
sbb
fbld
or
mov
nop
mov
push
in
pop
pop
jg
cmp
lea
inc
daa
and
ljmp
incl
cmp
pushf
rcrb
popf
fdiv
test
lcall
rorl
cmp
bnd
js
dec
and
jmp
mov
fwait
pop
shrb
int3
adc
repz
sub
call
out
imul
push
inc
inc
pop
mov
dec
fistpll
pop
pop
fwait
adc
movzbl
out
sarl
mov
sbb
movsb
jno
nop
mov
push
ret
jmp
and
sbb
mov
xchg
mov
push
jo
jae
lcall
std
lcall
addl
adc
fdivp
push
pop
insb
jge
dec
test
sbb
ds
mov
stos
dec
jbe
jns
mov
sahf
jns
std
push
fdivr
das
icebp
dec
mov
jle
stos
aas
daa
mov
icebp
call
cmpsb
sbb
popf
int
inc
jbe
out
inc
sbb
sbb
out
cwtl
xor
cld
lods
adc
cld
das
mov
mov
pushl
adc
xor
in
push
imulb
stos
pusha
dec
scas
cmc
pushl
paddw
xchg
push
jns
loop
cs
in
lahf
aas
popf
pop
xor
jnp
into
xchg
clc
mov
xor
inc
cwtl
mov
mov
std
into
cmc
movsb
xchg
arpl
push
mov
test
insl
arpl
sub
ljmp
ficoms
sbb
daa
popf
flds
cs
loope
cld
dec
into
push
int
inc
mov
dec
xor
xchg
insl
insb
les
push
mov
ret
in
call
cmp
add
mov
jbe
sbb
cmp
mov
pop
stc
sub
jmp
hlt
inc
fimull
loopne
es
in
iret
scas
fistl
hlt
jg
rorl
pop
xchg
mov
jg
mov
fs
jns
pop
mov
insl
aad
jmp
loopne
cmp
inc
jo
or
addb
in
cmp
mov
stos
insl
jg
out
rcl
adc
xor
pop
xchg
ret
std
push
in
cmp
sbb
adc
jmp
aam
addr16
xchg
imul
mov
sbb
les
loopne
cld
incl
xchg
sbb
add
mov
ja
mov
clc
test
xchg
call
or
sub
imul
iret
test
decl
call
test
enter
lock
and
pop
aas
cltd
js
call
test
cld
repnz
insl
jne
xchg
notb
sbb
cmp
or
mov
stc
and
xlat
sarl
jae
mov
std
pop
mov
popf
repz
inc
aad
pop
jbe
call
fiadds
dec
test
xchg
sbb
add
sub
call
imul
cmp
andl
dec
sbb
mov
cld
pop
sarb
call
jmp
cwtl
xchg
data16
fisubrs
into
popa
fistpll
inc
pinsrw
aaa
sub
ret
ret
mov
test
sbb
ret
imul
bound
enter
cwtl
cmpsl
pusha
push
lcall
xchg
xchg
sub
and
adc
fwait
pop
mov
test
sbb
pop
cli
jge
decl
sub
push
sbb
filds
dec
push
xor
push
test
loope
stos
stc
sub
movsl
dec
std
in
mov
shlb
add
pop
xor
mov
pop
xchg
jns
dec
add
imul
call
or
lea
mov
mov
fisttpl
out
jle
lea
stos
fbstp
stos
mov
decl
lcall
repz
loopne
faddp
ds
dec
mov
lods
adc
incl
lahf
fs
fnstenv
enter
pop
jo
movsl
adc
out
or
jmp
pop
lods
xchg
xchg
nop
pop
rcrl
mov
in
lods
sub
push
dec
jge
pop
or
xor
push
rcrb
pop
pop
scas
pop
mov
test
test
jg
into
cs
inc
inc
dec
sbb
pop
aaa
mov
cmp
icebp
pop
test
daa
icebp
inc
stc
sti
jle
leave
dec
cmpsb
mov
and
repz
adc
dec
test
outsb
fisubrs
or
mov
add
lret
add
lahf
cli
xchg
pop
cmp
in
pop
and
cltd
pop
cli
call
scas
mov
cmp
inc
mov
sti
dec
xlat
adc
test
dec
cmpsl
lahf
std
mov
arpl
sahf
mov
and
repz
adc
fs
in
ljmp
cmc
mov
jmp
or
adcl
stos
stos
xchg
aad
inc
hlt
outsl
std
lea
fsubrs
push
cld
jns
cld
sbb
jne
call
outsl
add
testl
sahf
xor
lock
das
shr
lcall
in
xor
lds
int3
pop
xor
hlt
mov
mov
icebp
mov
xchg
cltd
pop
dec
cld
incl
mov
mov
lret
sub
sbb
mov
rolb
in
xor
mov
aas
adc
repnz
sbb
inc
jno
ds
scas
div
incl
ljmp
xor
jno
and
ds
jg
inc
fsubrs
hlt
js
dec
aam
cmp
mov
sub
sub
and
arpl
enter
in
push
stos
lods
cmp
pushl
push
mov
mov
ja
inc
lods
stos
add
add
mov
test
loopne
scas
ljmp
push
sub
incl
pusha
imul
js
sbb
lcall
mov
fildl
dec
out
rcl
jmp
fstps
cmc
decl
mov
mov
fxrstor
out
scas
jae
sbb
cltd
decl
add
imul
leave
push
fistps
das
inc
icebp
call
mov
xchg
cld
adc
xchg
clc
hlt
decl
negb
mov
mov
mov
int
xchg
shrl
jmp
test
push
sbb
mov
sub
call
lods
mov
jbe
test
popf
pop
movsb
sbb
pop
inc
jg
mov
ljmp
outsl
in
xor
or
jle
dec
iret
aaa
std
jp
out
fisubrl
mov
shrb
inc
jne
mov
adc
inc
rol
int
int3
scas
adc
hlt
pushl
cli
inc
pop
imul
pop
pop
and
ja
jmp
ljmp
outsl
dec
pop
outsl
sbb
bound
and
lret
mov
xchg
pop
shl
jg
outsl
sub
sti
sub
in
aad
xor
je
push
mov
pop
jb
xchg
xor
loopne
sbb
rcll
xor
lock
adc
ljmp
hlt
imul
xor
sbb
cmpl
inc
scas
push
xchg
jno
add
sub
in
sub
out
lods
das
push
daa
xor
addr16
sbbb
mov
mov
dec
sbb
dec
test
pop
mov
cmp
sbb
lcall
dec
xor
sbb
pusha
leave
cmpsb
xchg
lock
mov
dec
call
adc
sbb
and
xchg
and
pop
fwait
jge
repnz
cld
lcall
pop
cmp
mov
xor
int
cmp
mov
lcall
xchg
sub
adc
mov
aam
iret
and
dec
xchg
xchg
pop
cld
inc
fidivs
pop
dec
aas
pusha
outsl
sub
push
mov
mov
or
pop
cmp
dec
aas
ret
push
xchg
cmp
dec
mov
cli
jmp
jp
js
std
imul
ja
gs
xor
fnsave
dec
jo
pushl
int3
inc
sarl
movsl
jnp
hlt
out
hlt
mov
ret
cmpsb
insl
ja
incl
not
cmp
xor
dec
jl
adc
arpl
pop
jp
mov
lahf
pop
shr
mov
pop
sbb
mov
imul
mov
frstor
pop
xor
loop
aaa
lcall
fildl
aas
js
mov
shlb
cli
lcall
repnz
bound
leave
pushf
in
rcrl
push
or
leave
dec
lds
sbb
mov
dec
and
test
test
es
mov
pushf
jmp
mov
xlat
jge
test
ret
and
outsb
cmc
mov
movsl
jg
inc
mov
jp
pop
sti
and
movsb
pop
cmp
popa
cld
call
popf
mov
shl
jo
addb
dec
cmp
ljmp
aam
call
jbe
loop
and
inc
lea
inc
lds
cli
pushl
add
push
xor
lods
fsubl
mov
popa
jno
xchg
xor
adc
call
sbb
jge
fldt
add
sub
loopne
cmp
inc
mov
scas
mov
push
jne
mov
mov
out
bnd
sti
mov
sahf
aas
sub
adc
jbe
adc
mov
outsl
hlt
jg
test
into
mov
out
mov
add
gs
or
call
ret
xchg
and
js
inc
xor
adc
lret
sar
jg
pop
lahf
add
jae
push
dec
in
or
mov
mov
mov
push
and
and
cmpsb
mov
out
jb
push
aas
test
sub
push
ljmp
data16
leave
fiadds
fnsave
inc
sarl
aam
mov
cli
nop
and
dec
mov
sti
jns
lret
int3
std
ret
out
lcall
outsl
loop
fistps
sar
xchg
lods
ja
fadd
add
ljmp
pop
out
push
pop
adc
lret
jp
jne
loopne
mov
mov
mov
lcall
shlb
add
pop
loope
push
pop
pop
daa
push
insb
adc
push
pushl
pop
sahf
push
mov
fcmovb
test
mov
mov
nop
jge
mov
ljmp
ja
xchg
sub
jno
ds
add
xchg
fldcw
rorl
lea
andl
mov
adc
mov
pop
push
fsub
push
fsubrp
je
bnd
bound
mov
call
dec
test
jae
cmp
pushf
mov
cwtl
xor
fs
mov
popa
dec
shlb
xchg
aaa
clc
outsl
lock
or
pusha
movsb
ljmp
inc
adc
pop
sbb
push
test
mov
jns
xchg
cwtl
adc
ljmp
sub
push
fisubrl
xchg
imull
loopne
lock
jno
sbb
or
aam
mov
jnp
insb
xchg
data16
and
ljmp
add
sub
mov
push
sub
fnstsw
jg
jle,pn
pop
rclb
arpl
incl
push
pop
xlat
fwait
adcb
mov
push
ret
add
arpl
dec
mov
jno
push
mov
sbb
adc
loop
dec
aaa
inc
inc
adc
pop
mov
cmpl
repnz
pop
loopne
aas
in
pop
ds
sbb
push
in
xlat
pop
pop
push
sbb
out
sub
sar
aaa
outsl
mov
jae
scas
loop
sbb
pop
mov
xlat
mov
sbb
add
xor
cmp
inc
jge
push
pop
es
fsubl
mov
jg
xchg
mov
iret
int3
rcrl
call
movsl
add
shll
call
inc
mov
cmp
cmc
movsw
rcl
aam
jnp
mov
cli
das
lods
incl
incl
sub
or
dec
lahf
or
aam
into
vpsubw
mov
fidivrs
dec
add
mov
hlt
mov
incb
dec
aaa
inc
xchg
mov
jmp
lret
push
pop
push
out
stc
sbb
clc
inc
push
or
fwait
pop
into
and
or
xchg
aad
or
xchg
jl
and
in
inc
push
sbb
call
or
inc
sti
insl
dec
sub
dec
add
incl
mov
add
nop
enter
mov
mov
jne
mov
mov
call
repnz
jecxz
lds
jno
je
sub
or
imull
out
testb
jg
scas
and
xchg
bswap
or
lock
push
push
adc
ret
ja
xor
jns
insl
dec
cmp
push
idivb
lcall
mov
stos
addr16
sub
or
ljmp
push
scas
xor
fsub
add
insb
std
dec
outsl
push
mov
cmp
push
cmpsl
xorl
mov
and
mov
mov
mov
xchg
clc
lret
je
inc
into
call
xlat
sbb
call
adc
mov
jae
or
cmpsl
aas
xchg
or
add
arpl
inc
jo
stc
add
pushl
js
inc
fcmovnu
and
subb
pushf
adc
sub
or
mov
mov
in
dec
rcrl
test
movb
pop
jnp
xor
jmp
cmpsb
inc
jb
fisttpl
cltd
dec
dec
stc
cmp
jmp
xchg
or
fistps
cli
insl
pop
pusha
inc
and
icebp
gs
jns
popf
insl
shr
and
mov
mov
lahf
xor
inc
inc
xchg
std
push
ret
xor
jg
outsl
pusha
mov
xorb
sbb
mov
pop
ljmp
outsl
ret
cmpsb
add
clc
insl
jle
addr16
es
ljmp
icebp
mov
xor
mov
andb
imul
mov
xor
mov
aam
jmp
jo
sbb
mov
cs
je
and
jg
xchg
int3
sbb
mov
rorb
mov
sbb
inc
push
mov
jg
mov
inc
pop
push
mov
xchg
call
cwtl
negl
mov
shl
inc
adc
outsb
jnp
mov
int
clc
sbb
sahf
sub
adc
ljmp
mov
ficomps
push
xchg
pop
push
xchg
andb
sbbl
mov
clc
incl
cwtl
mov
and
scas
int3
fmull
imul
and
pop
jmp
nop
dec
add
outsl
mov
in
loopne
xchg
fbld
sub
dec
inc
daa
mov
call
mov
dec
sbb
adc
icebp
mov
mov
fsubrp
jg
inc
repnz
in
clc
test
mov
stos
int3
mov
inc
and
test
inc
inc
push
mov
negl
fwait
daa
sbb
jmp
inc
xchg
mov
lcall
test
adc
scas
pop
ss
inc
dec
mov
or
out
pusha
cmpsb
pop
jge,pn
mov
cld
sbb
lcall
stos
pop
out
jo
cmp
std
ljmp
test
imul
out
ljmp
adcl
mov
mov
call
cmp
jp
cmp
mov
and
sub
orb
mov
call
dec
push
bound
jbe
cltd
sub
repnz
dec
adc
add
sbb
icebp
test
nop
dec
out
sub
ljmp
jne
cwtl
cmpsb
sub
pop
mov
out
scas
scas
mov
cli
cmp
lahf
jmp
cmc
stc
inc
inc
cld
ljmp
push
pop
xchg
hlt
sub
fsub
jmp
js
int3
or
insb
decl
push
pop
imul
mov
xchg
mov
inc
stos
jmp
sub
push
mov
out
adc
sarl
lock
jle
xchg
mov
jnp
stos
lret
mov
jb
jecxz
push
testl
in
xorb
adc
fwait
mov
icebp
outsb
xor
sbb
mov
es
xchg
mov
adc
arpl
aas
cmc
scas
push
loop
mov
lcall
std
incl
jo
out
out
adc
in
and
cmpl
dec
mov
adc
ljmp
popa
xchg
sub
adc
test
add
pop
xor
test
jecxz
lods
pushl
dec
cmp
adc
pop
mov
cmp
je
xor
idiv
mov
mov
insl
sbb
lock
sub
dec
pop
dec
bnd
incl
sbb
pop
aas
or
les
lods
ljmp
lods
jle
jmp
loop
sbb
das
pop
dec
aas
jmp
cmp
in
xchg
stc
mov
inc
xor
lock
in
sbb
enter
dec
cs
xchg
add
fwait
cmpsb
aam
insl
pop
push
rcll
fisubs
pop
pop
push
or
sub
sbb
idivb
xchg
mov
add
fcompl
out
fmuls
out
in
jmp
pop
mov
pop
test
xchg
dec
enter
pushf
int
ljmp
pop
lcall
insb
dec
nop
jp
cmp
or
push
push
dec
jns
adc
insb
loopne
mov
jl
stos
xchg
popf
pop
fmuls
std
scas
and
dec
push
inc
mov
mov
jns
xor
subb
loope
das
jge
decl
jmp
cmp
aam
jnp
mov
sti
jmp
jmp
mov
sbbb
jl
push
push
ljmp
xor
in
jge
sbbl
dec
inc
cld
pushf
and
pop
mov
imul
fbstp
dec
or
dec
in
movsl
clc
dec
fisttpl
int
or
fisttps
jp
sub
test
dec
ret
adcb
jno
jge
and
or
jecxz
decl
jecxz
xchg
dec
sbb
insb
pop
popf
nop
stos
mov
test
lcall
fidivrl
fdivs
mov
cmpsl
or
jne
mov
es
push
mov
or
pop
stos
inc
imul
lea
xchg
fimull
shll
cltd
adc
dec
nop
mov
lea
in
xchg
inc
jnp
sar
call
and
arpl
push
push
fs
stos
lock
push
mov
inc
call
dec
ficoml
push
jp
pop
mov
loop
cmp
lcall
je
mov
popf
loopne
sub
lds
xchg
out
push
cmc
lcall
sbb
pop
push
push
cmpsb
inc
push
addr16
pop
adc
push
repnz
push
dec
outsb
sar
mov
push
sbb
aam
xchg
push
jo
mov
push
loope
add
sub
mov
mov
mov
cmp
test
fucomip
inc
cwtl
std
push
ja
pushf
mov
sbb
add
idiv
or
imul
push
mov
cwtl
int3
cltd
popf
insb
xchg
loopne
and
inc
dec
rorb
cmp
jg
adc
loop
mov
jle
push
fidivs
out
adc
mov
and
push
das
hlt
cwtl
cwtl
jmp
sti
cmpsl
in
push
stos
lret
sbb
mov
sbb
add
jmp
cwtl
stos
fildl
xchg
push
aam
arpl
ret
ficompl
jl
sbb
adc
pop
in
call
idivb
mov
pushl
sub
ficomps
inc
dec
xor
cmpsb
scas
xor
les
adc
mov
decl
mov
sti
cmc
pushf
aas
shrl
cmp
jmp
jg
jp
movsl
inc
mov
mov
sub
adc
dec
adc
pop
sar
lcall
xchg
cmpb
jnp
xchg
popa
leave
xchg
in
ljmp
icebp
pop
lea
ljmp
hlt
xchg
jns
or
out
cmp
fldt
enter
dec
lea
jg
ror
cmp
pop
xorb
jmp
fchs
hlt
mov
dec
pop
jb
add
pop
repz
dec
sub
xor
or
adc
inc
lods
enter
jmp
shl
fnstsw
outsl
jne
fcompl
repz
or
adc
in
ljmp
cld
ljmp
mov
add
sbb
in
imul
orb
jmp
popa
fnstsw
inc
cmc
rcll
add
lock
mov
push
ljmp
inc
adc
dec
mov
jle
les
jecxz
sub
push
dec
adc
sbb
loope
lock
pushl
push
inc
sti
cltd
adc
adc
mov
ljmp
aad
inc
inc
lods
pop
cmp
xchg
pushf
aam
std
and
js
leave
xchg
add
out
pop
ss
outsl
push
inc
js
rclb
pop
stos
es
imul
out
cs
pop
sar
call
dec
and
cvtps2pd
push
adc
sbb
popl
cmp
ljmp
lcall
int3
sbb
gs
loopne
test
adcl
fsts
loopne
incl
mov
cmp
lcall
decl
fdivl
mov
dec
dec
jp
push
add
fcomip
and
dec
inc
lea
mov
mov
scas
loop
xchg
loopne
imul
mov
adc
lcall
cltd
mov
dec
sub
movsl
test
scas
mov
sub
ljmp
jbe
xor
inc
shlb
xchg
mov
dec
sbb
fdiv
xor
clc
fisubrl
fcoms
aad
cmp
pop
sti
imul
xchg
test
jne
xchg
mov
xor
pushl
pop
out
fs
dec
cmpsl
xor
call
xchg
in
cmp
jecxz
test
mov
lcall
stos
imul
lahf
adcb
sub
mov
push
imul
nop
pushf
call
inc
dec
push
push
cmp
jne
mov
cmc
or
mov
nop
stos
pop
adc
rcr
cmpsl
adc
dec
std
cltd
mov
sub
mov
jle
gs
add
or
lret
cmp
or
imul
lds
mov
jmp
imul
mov
pop
mov
stos
call
addr16
jnp
mov
mov
push
popf
lret
mov
xchg
addr16
mov
jbe
icebp
push
ret
les
je
pop
ljmp
mov
arpl
push
fistl
pop
out
imul
lcall
xor
xchg
cmp
inc
cltd
push
lock
clc
jg
lcall
cmpsl
push
push
dec
or
mov
cmp
dec
test
andb
dec
mov
movsbl
std
jmp
filds
daa
scas
adc
sahf
or
imul
mov
add
sbb
push
dec
arpl
imul
lock
jmp
add
add
popf
lea
cld
and
leave
cmp
sub
push
call
bound
les
cmpsb
mov
out
iret
and
ror
mov
dec
push
cmpb
pop
mov
jecxz
sub
inc
cmp
push
sahf
mov
loopne
outsl
hlt
call
jg
jmp
sbb
insl
enter
dec
push
dec
nop
rcr
idiv
push
out
insl
test
jns
jbe
xor
cli
xchg
rorb
or
lea
dec
or
incl
mov
mov
cmp
call
cli
add
push
mov
int
mov
cmp
jp
out
int3
pop
lock
mov
pop
aam
scas
pop
xor
out
cwtl
cmp
out
push
jbe
int
xchg
jo
fisubrl
push
fwait
mov
jbe
push
jg
push
inc
mov
pusha
loop
cli
push
aaa
jg
mov
cmp
movl
mov
mov
fs
add
imul
mov
lret
push
scas
cli
jg
lcall
cmp
movsb
fs
imul
int3
push
lahf
xchg
in
aad
xor
outsl
cmc
call
lods
or
push
adc
popf
fcoml
pushl
sbb
sahf
daa
sub
aad
kxorw
or
or
mov
or
cld
or
jge
nop
cld
cmp
mov
jno
mov
inc
stos
pusha
dec
sub
sub
les
in
lret
call
or
daa
test
jne
ss
adc
jmp
test
or
cmp
jnp
xor
push
jne
out
jne
int3
dec
mov
pushl
dec
in
jge
sub
mov
xor
dec
jge
je
adc
push
cs
ljmp
add
jnp
stos
popa
jnp
je
mov
and
or
out
sbb
lea
cmpsb
jmp
dec
cmp
or
ljmp
mov
shll
aaa
push
inc
test
dec
sbb
mov
aam
ljmp
scas
pop
clc
push
xchg
arpl
push
and
out
popa
add
xor
jbe
jb
iretw
sub
pushl
int
std
push
daa
sbb
loope
clc
in
pop
inc
data16
call
ljmp
sbb
inc
and
out
xchg
nop
pop
fsubrl
pusha
negb
pushl
and
out
aad
inc
ljmp
repnz
sar
call
out
scas
pop
sub
and
and
and
cmp
lods
sti
or
in
call
stos
test
sub
mov
pop
or
jmp
sti
jl
addr16
pop
pop
lods
or
sti
dec
aas
cmpsb
cmc
jns
mov
cmc
inc
stc
sbb
fistl
xor
in
cmpsl
pop
repz
mov
faddl
incl
test
fs
xchg
lahf
adc
mov
loopne
mov
data16
mov
leave
mov
add
mov
push
lret
lods
imul
sub
mov
or
aad
movsl
lret
push
leave
inc
jae
xchg
mov
loop
std
push
mov
sub
jae
inc
inc
mov
and
jge
ljmp
push
pop
jmp
jmp
out
xor
fs
inc
sbb
mov
pushl
sbb
fistl
push
mov
jp
pop
iret
imul
scas
les
incl
imul
cmp
pop
loop
inc
pop
sub
adc
mov
and
pushl
lods
mov
popa
std
dec
push
xor
mov
mov
aas
std
out
jecxz
pop
pop
jmp
cld
decl
cmp
jne
out
into
adc
jnp
dec
popa
jmp
add
call
jp
add
fs
push
xchg
ja
pop
lea
sbb
lcall
inc
push
cmpl
in
movlhps
daa
and
loope
xchg
inc
xchg
inc
lret
xorl
mov
mov
imul
outsl
jb
in
inc
push
pop
inc
aas
mov
repnz
ds
jl
test
inc
movsb
loopne
jmp
push
jne
mov
into
pop
scas
cmpsb
jp
in
xor
mov
lcall
insl
fsubrl
and
mov
mov
xchg
pop
outsl
push
int3
and
or
dec
and
into
pushf
xchg
scas
cmp
or
test
push
outsl
dec
cmp
push
call
aaa
inc
in
adc
xor
pop
dec
addb
push
push
int
inc
sbb
ljmp
add
daa
repz
pusha
jp
xchg
ljmp
push
adc
cltd
in
dec
or
test
pop
sbb
inc
jg
dec
notl
ljmp
sbb
gs
lcall
sub
in
fbld
sbb
cmp
into
inc
mov
popf
repz
decl
fcmovb
adc
add
mov
mull
ds
jp
dec
sbb
or
call
mov
push
jmp
icebp
jge
dec
outsl
stos
stos
stos
and
pop
or
ret
nop
mov
jle
sub
in
jns
xchg
mov
xchg
test
pop
xor
jns
nop
and
cmpb
test
jg
pop
loopne
in
aam
int
dec
wbinvd
jbe
mov
imul
jle
ljmp
jb
push
out
push
pop
mov
cmp
and
inc
scas
mov
call
pop
dec
sarl
cmpl
je
and
shll
js
mov
pop
cli
lods
or
or
mov
into
leave
fidivrs
ljmp
lcall
loopne
mov
lods
jno
mov
push
or
decl
mov
push
insb
out
add
cmp
sbb
dec
or
call
jg
call
es
cmpb
movsl
or
jne
cmp
mov
mov
push
lahf
insl
loope
push
scas
sub
mov
popf
xchg
pusha
xor
lcall
cltd
leave
mov
addr16
lds
je
pop
and
jne
cwtl
jae
adc
add
std
inc
mov
aam
jge
call
pop
jo
mov
mov
sbb
ss
call
dec
mov
xorb
sub
jae
lods
push
imul
loopne
aaa
inc
icebp
in
inc
leave
sub
xchg
icebp
push
mov
test
ret
sub
pop
lods
cmp
aam
inc
out
outsl
cld
jg
or
sahf
int
movsb
jmp
mov
xchg
in
jo
cmp
sub
out
repnz
call
in
cmpsl
hlt
pop
xchg
clc
decl
fmuls
pushf
and
xlat
pop
inc
mov
jg
jmp
mov
dec
fistps
insl
sbb
sub
shll
jg
jmp
cld
xchg
mov
push
push
enter
ds
addr16
insl
jne
js
insb
sahf
xchg
jnp
sub
fldl
xor
jg
outsl
pusha
inc
mov
sbb
sahf
popa
cwtl
dec
test
incl
pop
mov
sarb
mov
xchg
lcall
lret
rcr
movsl
sbb
cld
gs
xchg
jle
mov
das
cmc
dec
add
fldt
push
movsl
jle
and
iret
pushl
cli
jg
or
push
dec
xchg
jno
fdivrs
dec
scas
cmpl
jae
ficompl
mov
lcall
push
lods
inc
ret
movsb
pop
test
mov
pop
cmp
dec
xor
orl
sbb
data16
clc
sub
jmp
lcall
dec
sbb
iret
pop
rcl
outsb
push
aam
cli
jg
hlt
cmp
or
pop
dec
mov
xor
mov
dec
push
outsl
fcomps
fwait
jle
and
paddsb
xchg
mov
adc
pop
test
mov
pushl
cld
popa
inc
rcll
mov
mov
pop
push
mov
push
push
add
cmp
xor
in
mov
arpl
loope
ss
out
or
das
and
jge
mov
lock
hlt
decl
mov
dec
addr16
scas
xchg
movsb
mov
test
sti
xor
jbe
les
call
add
xchg
shl
aad
fwait
test
movsl
pop
loop
sub
repz
hlt
sub
nop
pop
pop
dec
xor
insb
xor
jne
addr16
cmc
push
gs
or
shl
mov
lret
fs
imul
mov
mov
out
pop
or
idivl
sub
inc
inc
add
aam
das
mov
cmp
xor
cld
mov
xchg
cmpsb
push
and
jg
pop
fsubrs
dec
ja
pushl
sbb
mov
and
mov
rorb
and
sub
dec
mov
pusha
mov
aaa
int3
push
aam
pop
in
push
pop
ret
pop
gs
pusha
imul
pop
push
adc
aad
sub
mov
jl
jg
aam
pushl
cli
call
idivl
add
xchg
xor
popa
es
out
mov
xchg
jmp
mov
sbb
sti
addr16
clc
jnp
pop
mov
mov
popf
mov
lcall
movsl
pop
or
jbe
jb
rcll
enter
mov
incl
rorl
ret
mov
lret
in
sub
incl
jl
int3
stos
fs
js
cmp
jnp
inc
loop
enter
pop
xor
js
jno
call
loop
sbb
pop
fdivrp
inc
cmp
add
inc
es
sub
aam
imul
xchg
jns
xchg
jnp
mov
xor
jg
popa
subl
adc
xchg
popf
pusha
jns
xor
insb
fstl
idiv
cmpsb
ret
aas
decl
sbb
pop
mov
fcomps
call
pusha
lock
dec
enter
or
repz
scas
sbb
jmp
dec
jg
cmpsb
xor
mov
das
cld
outsl
std
xor
out
mov
icebp
and
jge
xchg
fildll
cld
mov
or
xchg
pop
mov
jg
xlat
adcb
ds
sub
stc
mov
push
ficoms
ja
and
into
lcall
mov
ja
inc
pop
rcll
xlat
lahf
ljmp
icebp
inc
pop
insl
inc
shlb
xchg
neg
shll
lcall
xchg
jmp
out
adc
push
xlat
cmp
insl
nop
jmp
gs
ljmp
call
les
jb
out
mov
outsb
fsubrs
aad
clc
pushl
lds
call
movsb
movsl
test
ret
stos
insb
dec
lds
test
jp
inc
cmp
cld
jb
insb
xchg
xor
add
dec
pop
ljmp
int3
shlb
or
mov
sub
xor
xor
jmp
cmp
or
stc
jle
pop
shlb
lcall
in
sbb
sbb
loopne
mov
dec
cmp
sarl
mov
movsl
fsubrs
adc
push
in
lret
test
adc
mov
ficompl
inc
xchg
add
and
adc
xchg
decl
out
pop
out
rolb
int3
sub
cld
mov
lret
pop
inc
cld
popf
pop
je
add
decl
pop
jp
sarb
mov
and
icebp
jb
inc
fisttps
jge
outsb
jne
xchg
or
decl
jecxz
sub
cli
jecxz
mov
dec
icebp
fs
sub
shll
xor
cmc
xchg
call
popa
pop
add
loop
fnstsw
rclb
push
add
push
shlb
call
jge
int
mov
jmp
fadds
and
or
cmp
loopne
mov
or
pop
rolb
cmc
shr
outsb
out
pop
or
pop
cld
call
ss
xchg
lods
lock
movsl
les
incb
sbb
dec
sbbb
aaa
xchg
adc
xchg
fisttps
call
out
out
xchg
jne
jnp
test
cld
pop
or
incl
jle
outsl
sbb
sbb
out
sbb
xor
shrb
fnsave
ret
push
stos
jg
incl
push
jl
sti
pop
jbe
out
xlat
jge
in
push
xorl
inc
decl
aas
mov
and
fmull
mov
icebp
push
outsb
jb
stos
mov
jmp
mov
sbb
cmp
mov
mov
and
mov
ficomps
orb
scas
xor
sbb
sub
in
in
add
pop
ret
incb
sar
push
sbbl
dec
divb
in
push
mov
mov
xchg
xchg
mov
lods
mov
add
jnp
dec
pop
pop
mov
jecxz
sub
and
test
les
ljmp
mov
cwtl
cmp
test
xor
cwtl
pop
pop
addr16
mov
hlt
out
cli
call
pop
mov
sahf
push
pop
xchg
cld
in
push
sbb
lds
jecxz
mov
and
sti
mov
iret
push
push
movsb
jmp
pop
loopne
in
mov
je
push
mov
insb
rcrl
lret
pop
divl
cltd
mov
in
mov
sbb
clc
call
decl
cwtl
mov
adc
push
push
add
jo
std
xlat
leave
clc
lcall
stos
icebp
imul
aas
adc
jle
arpl
dec
or
mov
or
ret
jmp
js
adc
jg
icebp
add
mov
insl
pop
loopne
sahf
mov
dec
pop
jp
dec
test
lcall
stc
imul
aad
push
jnp
push
mov
or
leave
rcr
xchg
sbb
hlt
push
popa
in
outsb
inc
pop
lock
in
push
std
xor
or
push
fst
out
or
repz
ljmp
insb
jb
adc
xor
cmp
loop
and
push
and
decl
bound
adc
mov
lods
pop
push
insl
push
xchg
push
xchg
cld
inc
jns
sub
mov
popf
inc
cmpsb
mov
mov
xchg
push
adc
jmp
and
pop
iret
mov
inc
imul
in
mov
call
cli
push
push
inc
shlb
sbb
xor
stc
jb
jae
inc
loope
push
add
repz
sub
lock
cwtl
aad
jg
mov
adc
outsl
xchg
out
push
idivl
stos
orl
incl
dec
xor
lods
int3
repz
ja
mov
dec
cmpsb
jnp
std
lcall
add
adc
xchg
mov
mov
pop
or
addr16
xchg
mov
dec
out
push
mov
push
ljmp
inc
pop
jno
aaa
in
pop
sbb
dec
test
out
jo
sub
xchg
popa
sbb
in
outsl
dec
mov
dec
adc
sbb
add
inc
in
out
sti
fcoml
incl
pop
jg
mov
out
or
mov
ss
shrb
clc
push
inc
sub
lcall
pop
shl
sub
ljmp
adc
fildll
cld
cli
adc
add
adc
cmpb
std
loope
leave
push
std
test
or
pop
inc
out
jo
push
lret
es
decl
pop
bound
out
fsubrl
sub
xor
inc
call
mov
jo
fcmovu
ljmp
push
aas
jo
inc
lcall
lds
xor
inc
lret
mov
call
clc
rorb
dec
movl
mov
xor
pusha
jl
lcall
mov
and
mov
or
mov
push
cmpsl
ret
jle
push
ljmp
pop
test
mov
subb
movsb
jne
mov
jg
pop
push
sti
and
outsl
push
add
mov
xchg
stos
fld
or
or
cli
das
cmc
inc
sub
cltd
cmpsl
sub
fwait
les
popf
jl
xchg
bound
into
jl
pop
cli
insl
xor
inc
jl
jmp
decl
ror
mov
dec
insb
push
pop
inc
pop
scas
mov
clc
dec
push
jl
and
decl
std
add
cmpsb
xor
mull
push
pop
shlb
ljmp
inc
or
in
jmp
fnstcw
or
push
jmp
add
bound
pop
jbe
push
pop
mov
dec
xor
movsl
fisttps
js
fidivl
lcall
cmp
mov
icebp
inc
in
test
pop
and
mov
pop
pop
imul
outsb
pop
push
leave
inc
cli
pop
add
sub
repnz
mov
ljmp
inc
adc
xor
daa
jge
inc
scas
jl
lcall
outsl
ja
pop
adc
cmpsl
adc
mov
cmp
pop
or
fptan
inc
popa
cli
xor
in
loopne
xchg
xchg
sub
and
cmpsb
inc
jo
jae
push
jle
jge
fadds
jmp
mov
or
add
or
mov
push
or
incl
sti
mov
repz
fbld
adc
movsb
or
mov
or
repz
movsb
mov
mov
lret
out
dec
mov
insl
jp
dec
mov
cld
jmp
dec
or
add
xchg
push
testb
shl
pushl
mov
sbb
inc
data16
sub
push
inc
pop
loop
rclb
insb
jno
push
or
ljmp
stos
loopne
push
pop
or
dec
sbb
fdiv
hlt
hlt
pop
cli
lcall
stc
mov
pop
scas
or
rcrl
ret
aad
repnz
fcoml
push
iret
ret
sub
rcrb
test
add
lea
fsub
call
push
inc
xchg
bound
inc
ficoml
pop
enter
daa
mov
mov
xchg
decb
sbb
pusha
push
sub
fmull
mov
sub
in
jge
adc
call
lahf
sub
gs
push
loope
xchg
div
mov
or
and
inc
stc
jmp
pop
push
push
mov
mov
xchg
inc
es
dec
fwait
and
mov
push
adc
inc
out
jg
pop
loop
lcall
fyl2x
jo
inc
in
xchg
test
jns
call
mov
inc
out
into
insb
repz
ljmp
inc
roll
fmulp
mov
mov
cli
jp
pusha
pop
push
cmp
gs
push
fwait
xor
fadd
sub
mov
add
mov
pop
inc
pop
xchg
mov
dec
fcomi
push
stc
pop
into
mov
pop
fisttpll
pop
push
jecxz
test
fcoml
mov
sub
fs
xchg
out
ffreep
push
dec
subb
ss
jp
fwait
out
outsl
lock
mov
mov
mov
pop
mov
mov
jb
dec
rorl
jl
mov
adc
in
cld
xchg
cmp
cs
std
lods
lods
fucom
add
jne
mov
cld
incl
dec
jnp
stc
push
ret
pop
jecxz
pop
jo
add
jecxz
jg
sbb
mov
sti
inc
adc
sub
test
fwait
push
loopne
mov
xor
push
shl
push
cmpsl
xchg
sbb
ds
jae
dec
sbb
lods
incl
cwtl
out
sbb
pop
and
ljmp
decl
inc
scas
outsb
fildll
xchg
js
repnz
cld
test
cvtpi2ps
loop
shr
out
fstps
jg
xchg
or
in
fwait
mov
call
outsl
iret
cmp
add
mov
in
cli
cwtl
push
popf
incl
jno
mov
icebp
push
popa
movb
mov
mov
fildll
mov
pop
push
addb
xor
mov
call
scas
inc
jb
jb
xchg
inc
xlat
cltd
adc
rol
std
scas
cs
sti
mov
mov
dec
arpl
push
ret
jmp
xchg
js
les
add
lret
testl
in
inc
ljmp
call
test
sub
sub
dec
or
scas
push
mov
dec
push
dec
xor
pop
test
sti
fisttpl
inc
vmulsd
faddp
and
ljmp
pop
movsb
sahf
test
jecxz
and
das
imul
lcall
sbb
arpl
int3
ret
pushf
outsl
call
add
pop
xchg
mov
xchg
adc
fcmovne
lcall
ss
fwait
icebp
cmpsb
xor
xor
mov
movb
incl
mov
and
add
sub
dec
repnz
jnp
loopne
xlat
jg
mov
sub
adc
fnstenv
repz
aas
loop
add
jmp
fs
cmp
call
adc
add
pop
bound
fldl
lock
mov
pop
cmovb
sub
insl
cli
repnz
incl
cwtl
add
std
add
sub
add
adc
call
jno
mov
aaa
xchg
push
mov
cmp
mov
mov
add
sahf
jno
hlt
int
aas
adc
and
xorl
movsl
jb
call
popa
sub
inc
out
adc
push
lret
jg
jns
sub
add
xchg
add
jnp
add
push
inc
cmc
fbstp
sbb
jmp
inc
add
adc
lods
scas
subl
fisttpl
aas
das
cwtl
sbb
mov
or
pop
roll
push
pusha
sbb
and
pop
xchg
jg
sub
adc
pushl
in
inc
orb
fadds
int3
push
pop
imul
jo
outsl
fbstp
add
add
es
pop
cs
addr16
loopne
adc
mov
push
lock
jmp
push
xor
inc
bnd
ficoms
int3
out
jle
imul
nop
xchg
mov
dec
jg
cld
add
push
adc
nop
inc
nop
leave
arpl
lods
xchg
adc
dec
xor
es
sbb
aaa
add
in
cltd
xchg
rcl
xchg
in
jb
loopne
pop
or
mov
mov
lret
adc
shl
ret
dec
or
inc
jmp
call
sbb
mov
push
cs
stos
lret
popa
cld
push
mov
nop
sub
inc
inc
aas
aam
add
xchg
jo
das
push
hlt
xor
mov
lret
sahf
push
push
xchg
or
push
mov
mov
add
cmp
push
loop
jne
mov
mull
push
hlt
mov
pop
fdivrs
negb
inc
movl
incb
daa
add
cs
call
mov
push
pop
add
inc
shll
andl
inc
or
mov
sbb
mov
dec
jo
or
and
pop
add
push
xchg
mov
dec
pop
cmp
adc
cs
jnp
pop
ret
adc
rclb
adc
lret
filds
imul
inc
xchg
cli
fstp
fstl
iret
add
adc
sub
outsl
fldl
sub
mov
jbe
sub
insl
add
sub
mov
mov
pushf
es
nop
push
pop
sub
sahf
or
sbb
lock
fwait
pop
div
jecxz
inc
fs
sub
jnp
ss
dec
stc
cmp
xchg
or
mov
jge
mov
lds
sub
add
or
mov
sahf
stos
notl
jmp
out
data16
push
shll
push
adc
in
int
pop
push
popa
jo
or
in
arpl
cmp
lret
movsl
add
lret
jl
popa
adc
dec
inc
or
out
pushf
jns
mov
movsbl
dec
jae
adc
push
pop
js
rclb
and
inc
jne
push
add
jmp
add
add
mov
xchg
jg
xchg
mov
idiv
xlat
in
inc
jbe
sub
mov
aaa
xchg
in
in
pusha
lahf
xchg
adc
push
jbe
and
and
flds
mov
shrl
lock
outsb
mov
adc
adc
outsb
das
sub
test
mov
and
mov
sbb
scas
dec
mov
add
inc
int3
pusha
jge
and
add
ret
add
shll
jmp
cltd
pop
adc
mov
mov
push
outsb
mov
popf
or
in
sarl
fldcw
adcl
push
mov
cmp
jle
scas
shr
fcomi
xchg
push
mov
inc
and
pop
clc
cmp
daa
xchg
sbb
cltd
sbb
test
pop
and
inc
mov
mov
ds
sbb
insb
or
into
xor
jge
jg
or
clc
and
iret
fs
repz
mov
cmp
xchg
fnstcw
or
nop
negb
or
jno
test
test
mov
scas
addr16
test
shrb
cmp
push
pusha
jecxz
cmp
clc
sarb
and
dec
push
out
jg
mov
ret
dec
xchg
sub
sbb
insb
movsl
ss
push
out
fisttps
cmp
loope
pop
add
fisubl
loopne
lcall
adc
jg
mov
add
xchg
and
adc
mov
or
out
xor
ret
lods
pop
xorl
mov
dec
fiadds
jb
sbb
cmp
hlt
jmp
jg
lea
popf
lcall
add
outsl
inc
mov
mov
sub
cmpsb
imul
xchg
push
fcoml
add
jne
lcall
jmp
cli
adc
fcmovnbe
dec
movsl
mov
ficoms
sub
insl
inc
std
push
sbb
sbbb
cmp
adcb
ss
sahf
xor
xor
addl
pop
insl
insl
iret
notb
mov
fnsave
xchg
clc
dec
pop
sub
ljmp
sbb
cmp
test
lea
push
cmp
mov
sbb
or
test
sub
pop
and
or
sbb
push
lds
jae
mov
je
nop
cmp
push
cmpsb
and
pop
je
and
mov
insb
mov
mov
es
in
sbb
in
dec
outsl
mov
lcall
add
jg
test
or
pop
rol
push
ss
dec
inc
cs
sub
aam
dec
dec
cwtl
ds
sbb
test
hlt
test
stos
ret
repz
push
add
add
pop
add
push
or
pusha
xchg
out
es
fldt
or
xor
push
mov
sub
push
cwtl
pshufw
pop
out
mov
sbb
xor
jbe
shlb
cmp
pop
inc
xor
xchg
ja
push
hlt
mov
stos
clc
xchg
std
lea
xchg
add
jl
cmp
icebp
push
xlat
jg
add
and
dec
fwait
jae
scas
xchg
lds
mov
fmull
jne
pop
faddp
xchg
ja
leave
xchg
sbb
addr16
sarb
xchg
jb
bound
or
test
or
mov
stc
popf
adc
cmpb
mov
add
iret
aaa
insb
push
xor
lahf
and
xor
mov
test
orb
jns
imul
xorb
mov
jo
cmp
je
test
sbb
and
clc
fistpll
push
sarb
decb
sarl
push
xor
mov
les
jl
jecxz
lock
mov
cltd
adc
fisttpl
in
clc
add
mov
in
repz
sbb
repz
stc
jmp
leave
dec
aas
xor
xor
loope
xchg
sub
pop
mov
jmp
push
stos
sahf
sbb
lock
adc
adc
pushl
xor
data16
jo
push
sub
mov
rcll
pop
dec
inc
lock
and
cmc
add
lock
repnz
mov
test
adc
rorb
mov
int3
jecxz
inc
jo
ja
and
ret
mov
add
lea
jnp
and
cli
lcall
and
test
pushf
rorl
out
lcall
inc
shll
mov
enter
add
adc
ss
cmp
add
dec
cmp
sub
pusha
lret
mov
fldt
xchg
sub
pop
cwtl
insb
ss
xor
leave
mov
into
in
imul
or
inc
adc
fs
or
dec
pop
sbbl
les
enter
into
dec
mov
arpl
add
test
cli
adc
shr
add
test
or
les
filds
mov
mov
int
cmp
gs
sbb
sbb
leave
cmp
xor
xor
sbb
cmp
js
sarb
adc
add
xor
xchg
fcmovb
jle
mov
pop
cmpsb
test
iret
std
pop
fdivrp
test
or
pop
mov
cmpsl
popa
push
push
push
inc
insl
insb
inc
repnz
push
test
pop
mov
sbb
and
loop
cltd
dec
pop
or
or
pop
fadds
and
aaa
ss
lret
mov
nop
out
push
sahf
loop
pop
stos
mov
mov
pop
add
mov
repnz
xchg
sub
dec
mov
mov
fwait
out
pop
inc
or
dec
xchg
dec
mov
or
test
sarl
mov
and
mov
sbb
mov
repz
mov
dec
mov
arpl
outsl
fld
daa
sti
mov
and
in
push
fwait
je
xor
rolb
outsb
popa
lcall
jl
addl
iret
xor
std
jg
orl
push
dec
or
stc
and
aaa
ss
jnp
stos
dec
nopl
jg
out
testl
mov
ljmp
rolb
add
pusha
popf
push
adc
and
movaps
rcl
sarl
cmp
inc
adc
mov
push
jp
mov
or
inc
xor
out
test
ds
pushf
iret
xor
sbb
mov
mov
push
pop
mov
xchg
mov
icebp
in
pushl
inc
ret
push
sbb
scas
iret
or
cwtl
adcl
or
cmp
sbb
inc
xchg
and
xor
dec
jne
loop
nop
adc
mov
fisubrs
test
push
lcall
adcl
fwait
mov
push
or
dec
dec
mov
das
add
inc
add
cmp
pop
mov
dec
mov
loopne
test
and
pop
sub
pop
mov
les
cs
cmp
lret
and
int3
int3
jo
and
cmp
shll
icebp
addr16
push
adc
and
adc
mov
cs
mov
xchg
jb
and
xchg
shll
fstp
fisttpl
popf
adc
mov
inc
pusha
call
push
fmull
addl
adc
sti
mov
addl
sub
mov
out
jge
mov
lcall
sbb
adc
add
jle
ljmp
je
mov
mov
mov
mov
xor
dec
mov
sbb
inc
mov
or
outsb
add
das
pop
outsb
push
inc
xchg
ds
jecxz
daa
test
lock
lcall
les
aam
cli
adc
loopne
stc
ret
push
fiadds
out
push
sarb
jb
int
mov
xor
hlt
outsl
ljmp
lock
sbb
outsl
xor
or
adc
dec
sti
psubusw
mov
mov
movsb
movsl
iret
push
pop
std
mov
andb
jecxz
pop
inc
lret
cmpsl
dec
mov
add
dec
add
add
stc
aas
clc
mov
and
sbb
sub
jmp
push
or
mov
xchg
and
mov
jb
adc
jmp
std
lret
lods
pop
xchg
jno
push
mull
and
adc
fs
jae
js
adc
paddb
sahf
jl
scas
cmpsl
sbbb
sbb
pop
fdivr
and
dec
cwtl
icebp
xlat
lret
mov
push
cmp
cltd
pop
loopne
pop
mov
sub
loop
test
push
data16
or
test
outsb
in
xor
push
mov
fwait
inc
or
jl
pop
js
pop
lcall
xchg
clc
test
and
inc
jns
stc
adc
dec
push
dec
test
shrl
jne
xor
fdivrl
mov
loop
popf
or
or
add
rorl
mov
dec
mov
fldenv
lret
outsb
insl
in
mov
fisubrl
fisttps
push
pop
cmp
mov
add
push
push
push
addl
scas
or
out
fs
mov
inc
dec
jl
mov
xchg
loop
push
iret
test
jmp
in
push
add
das
imull
sub
mov
jecxz
add
mov
sbb
in
mov
push
mov
add
push
mov
adc
sbb
clc
in
sub
and
push
mov
std
bound
inc
pop
mov
fcmovnb
push
push
lret
cld
movsb
mov
shrl
roll
in
mov
imul
sub
adc
ss
pop
add
inc
mov
push
jb
mov
mov
outsl
cld
xchg
push
out
add
mov
imul
movsl
mov
adcb
xor
test
mov
rol
inc
call
icebp
sub
ss
int3
jb
dec
jne
mov
clc
lods
movsb
xchg
pop
clc
fcompl
fsubrs
sbb
cmpsb
ja
fs
lret
sbb
mov
stos
das
jne
les
push
lea
stos
stos
mov
adc
hlt
jg
cltd
inc
or
inc
xchg
or
stc
stc
mov
inc
adc
xchg
inc
mov
jne
xchg
mov
or
xchg
cld
mov
sub
adc
pop
movb
pushf
jns
xchg
fcmovu
and
mov
das
add
inc
mov
cmc
jb
sub
aad
int3
mov
lock
loopne
ljmp
loop
cld
aaa
out
pop
mov
stc
iret
xchg
push
insl
xchg
out
cmp
xor
shlb
fisttpl
cmp
test
es
xor
rorl
dec
add
cmp
aad
subb
out
pop
outsl
mov
mov
enter
cmp
addr16
stos
rcrl
cltd
mov
sbb
or
arpl
das
std
xchg
push
fstl
and
sti
adc
lret
into
adc
adc
mov
dec
add
adc
repnz
add
loop
and
xor
pop
mov
fcomps
or
scas
pop
mov
pop
push
dec
ret
aad
pop
fimull
lcall
call
movsb
ficomps
sbb
pop
cmp
call
insl
push
dec
add
sub
xorl
mov
pop
mov
dec
xchg
xlat
mov
imul
into
fsts
das
and
idivb
cmpb
cmc
data16
aaa
in
aam
sti
insl
addl
sti
ret
xor
mov
add
insb
mov
xchg
xor
inc
arpl
loope
lret
call
mov
inc
mov
mov
xchg
jb
pop
lcall
jg
test
mov
popa
lret
btr
mov
add
sbb
or
push
mov
je
dec
fiaddl
or
lret
imul
les
cmp
and
sub
jae
aam
and
sub
mov
aaa
loopne
fisubs
fidivrs
js
gs
outsl
mov
inc
inc
cmpsl
fidivrs
icebp
push
push
je
scas
neg
mov
cli
sub
sarl
pop
and
insb
push
rclb
mov
fnstcw
pop
adc
mov
rcrb
mov
pop
dec
inc
jmp
imul
in
push
call
sub
rolb
and
movsb
pop
rsm
jne
out
sbb
cmp
mov
xchg
arpl
mov
jecxz
hlt
xchg
rcrb
or
xchg
xor
call
fldl
neg
into
adc
in
scas
adc
mov
jb
mov
es
xor
leave
mov
lea
daa
and
pop
jbe
jg
test
xor
aaa
jmp
repnz
dec
adc
jb
sbb
rep
mov
stos
cmc
arpl
inc
xchg
pop
push
sub
jb
sti
dec
dec
cld
mov
sub
fcmovu
and
lahf
add
in
subl
stos
sbb
pop
andb
mov
sub
sarl
lret
xor
stos
adc
inc
pushl
adc
lock
adc
lahf
inc
inc
mov
jns
clc
js
hlt
push
sbb
push
incl
addb
xlat
dec
xchg
pop
leave
mov
sarb
pop
push
sahf
mov
inc
mov
sub
push
loope
pop
jle
inc
enter
and
into
jmp
adc
push
push
out
fs
lret
push
cli
inc
mov
pop
sub
jns
mov
shl
jg
js
jmp
adcl
pop
movsl
in
pop
jp
lock
sbb
pop
or
fmull
dec
mov
add
add
popf
push
icebp
call
js
cltd
or
lods
lods
int
cmp
rorb
jbe
mov
incb
pop
sbb
out
mov
movsb
pusha
scas
or
and
adc
pop
jle
ds
in
pop
sbb
lds
arpl
dec
stos
mov
sbb
adc
stos
dec
add
icebp
jg
out
dec
testb
cld
push
mov
xor
aad
fsubrs
movl
inc
mov
inc
sbb
imul
cld
mov
js
lea
sub
jmp
or
mov
mov
pop
mov
filds
pop
iret
adc
aad
dec
dec
sbb
cmp
and
lods
and
xor
push
fdivr
out
frstor
and
sahf
sub
minps
loop
movsl
fs
addr16
mov
fstps
push
add
dec
shrl
add
loopne
sbb
std
stos
sbb
push
scas
lea
jne
cltd
cltd
xlat
in
mov
lods
pop
inc
push
ret
orl
loope
pop
je
adc
out
outsl
lock
pop
sub
ljmp
les
xor
lret
fistps
add
rorl
xchg
inc
push
lods
testb
jmp
pop
leave
daa
cld
fadds
test
sarl
sbbl
lcall
mov
adc
mov
push
sub
jmp
adc
pop
pop
adc
fs
xorl
push
inc
add
xchg
dec
adc
adcb
ret
xor
loopne
movsb
mov
stos
push
andl
xchg
xchg
cmp
mov
mov
shlb
add
test
xchg
xor
mov
decl
push
cwtl
incb
sti
lret
cld
pop
pop
sub
and
pop
into
pop
dec
sub
inc
das
push
cld
es
or
mov
or
pushf
add
lods
loope
test
call
add
test
sbb
dec
push
xor
jl
pop
insb
repnz
ja
mov
call
or
push
inc
pop
mov
fsubs
pop
loop
in
xor
pop
cs
mov
jmp
sbb
mov
jl
or
adc
loope
les
inc
cltd
lea
rcll
bound
cmp
mov
dec
popf
movsl
aaa
orb
inc
loopne
pushl
xor
mov
or
adc
lds
push
add
icebp
frstor
icebp
xchg
nop
leave
inc
out
cwtl
shl
repz
push
negb
ja
cli
mov
mov
cmp
or
push
je
push
add
mov
mov
add
movsl
fistpl
cltd
outsl
in
cld
xchg
sub
cmp
mov
jae
inc
lcall
push
out
sahf
inc
mov
xchg
cmp
pop
lcall
arpl
push
mov
rclb
rorb
or
imulb
and
pop
sbb
adc
mul
cmp
test
jmp
xchg
pop
mov
mov
or
push
jbe
pop
mov
out
loopne
cmp
clc
mov
pushf
andl
ffreep
sub
popf
stos
fwait
mov
sar
jns
xchg
mov
sbb
xchg
jp
addr16
ljmp
arpl
scas
inc
add
xor
pop
adc
cmp
ljmp
clc
push
mov
test
inc
or
fstpt
test
inc
lret
sub
aad
and
enter
nop
mov
hlt
inc
rcl
pop
push
in
andb
and
adc
mov
sbb
imulb
cmp
or
jp
push
jg
ljmp
xor
mov
nop
adc
jmp
inc
mov
aaa
xor
inc
rcrb
cmp
test
adc
jg
adc
sbb
inc
or
call
sbb
das
mov
aad
aam
and
clc
test
fnstcw
mov
adc
inc
sub
sbb
or
es
fcomip
rcll
pop
inc
xchg
add
les
jge
pop
pusha
jb
mov
ffreep
sbb
mov
in
sbb
lcall
aad
xor
and
adc
jbe
cld
adc
mov
ljmp
jge
jno
aad
push
or
and
scas
fsub
push
and
pop
add
pushf
or
cmpsl
add
push
dec
fxtract
std
or
inc
in
dec
and
jl
adc
jnp
xchg
ficoms
stos
scas
and
mov
cmp
cmpsb
inc
add
int3
mov
pop
cmc
enter
clc
jne
adc
and
lahf
jp
fwait
jnp,pt
mov
incl
ret
dec
sub
mov
sbb
pop
or
push
push
mov
sub
dec
rcrl
jns
cmp
frstor
and
and
ljmp
push
jno
gs
jg
js
je
cs
imulb
jnp
mov
stos
sub
mov
xor
jnp
das
mov
pop
scas
push
das
jb
inc
push
lock
inc
aas
and
in
sbb
push
or
mov
aad
call
sub
in
das
cld
decl
lcall
inc
pop
xchg
mov
sbb
insl
or
mov
fadds
shr
pusha
dec
cltd
bound
fbld
out
fidivs
push
dec
insl
cld
and
or
lds
mov
aaa
mov
mov
fisubrl
lret
cmp
push
sub
sub
push
mov
jmp
sti
nop
xchg
ja
loopne,pn
out
aas
iret
mov
sub
adc
call
push
pushf
das
arpl
icebp
out
ret
shrl
test
sbb
mov
leave
mov
mov
mov
fcmovu
cld
pop
dec
mov
dec
sbb
dec
cld
fwait
bsf
inc
int
imul
and
sub
mov
sub
fistl
fdivs
cmp
outsb
push
pop
xor
dec
and
ss
fdivrs
test
xlat
jecxz
mov
enter
ss
adc
sub
rclb
insl
aaa
ds
mov
les
sub
jno
std
rclb
mov
ficoml
insl
roll
jo
pop
push
pop
mov
dec
and
shlb
std
sub
mov
xor
js
add
test
sbb
rcrl
mov
add
js
cmp
in
mov
adc
mov
les
ret
lahf
insb
mov
sub
cmp
leave
insl
pusha
lods
jp
inc
and
pop
mov
decl
lcall
pushf
jmp
test
sbb
add
pop
push
aam
cld
outsl
pop
jecxz
test
adc
or
jp
pop
mov
and
or
sub
pop
adc
mov
fsubrs
hlt
and
or
call
rolb
cwtd
ret
mull
lret
mov
mov
add
add
jg
pop
cmp
mov
or
mov
and
out
jmp
dec
loopne
adc
js
mov
mov
sbb
cli
gs
lds
and
lahf
mov
div
iret
fldt
cmpsl
insb
and
ds
insl
mov
jg
test
test
aaa
stos
outsb
ret
fisubrl
call
or
enter
inc
sbb
xlat
orl
sbb
fsubrs
loope
aaa
cmpsl
jns
xchg
inc
pop
loop
clc
sbb
popa
mov
int
add
mov
in
shl
add
cmpsb
and
dec
adc
fisttpl
mov
lds
imul
stos
sarl
pop
std
cwtl
or
fidivs
imul
pop
sub
push
mov
les
scas
adc
pop
pop
xchg
add
and
in
das
jle
xor
dec
push
cmc
and
sub
dec
xchg
fistpl
pushf
rcr
call
mov
add
ret
jno
cmp
inc
test
and
loop
addb
push
jle
jge
add
add
outsl
cld
jge
in
adc
repz
fstp
in
sub
ljmp
es
outsl
test
ficompl
and
imul
mov
push
dec
ret
inc
movsl
jg
mov
adc
xchg
and
das
sub
and
pop
imul
js
jb
shr
ds
test
lock
mov
xchg
out
cltd
pop
add
subb
or
adc
pop
pop
fists
pop
call
xchg
in
or
xor
aam
fstpl
lahf
mov
mov
notb
mov
outsb
mov
xchg
dec
cmp
dec
mov
addr16
or
aaa
cmpb
ljmp
cltd
daa
push
sbb
sbb
cmpb
mov
push
adc
xchg
lods
xchg
cmp
inc
sti
pop
fwait
addl
or
loop
inc
or
add
add
mov
insl
js
enter
insl
xlat
and
lea
dec
rcll
pop
mov
test
out
clc
std
xor
mov
push
xor
mov
and
mov
xchg
data16
inc
fisttpl
push
and
cld
push
push
jg
lock
pusha
mov
mov
movsb
inc
mov
popf
cli
mov
mov
sbb
movsl
test
mov
mov
xchg
lds
add
data16
pop
sbb
stos
std
mov
inc
dec
mov
loopne
jbe
das
adc
jle
jno
in
mov
cmp
cmp
mov
xchg
jecxz
popa
sbb
repnz
cmp
add
mov
je
cmpsl
outsb
mov
fists
movsb
sbb
lds
add
outsl
push
std
or
add
insl
call
xchg
andb
pop
ficomps
test
shlb
loopne
and
xchg
mov
stos
sub
and
lods
decl
mov
cwtl
and
lret
xor
jecxz
decl
insl
push
fistpll
add
and
sbb
dec
sbb
test
inc
pop
and
inc
mov
xor
test
and
test
orl
shlb
add
and
shrb
ljmp
pusha
inc
movsb
roll
xchg
imulb
lahf
and
mov
inc
sub
push
push
std
and
repz
push
xchg
dec
sbb
rorb
adc
jecxz
push
cmc
enter
and
adc
pop
dec
dec
cmp
loope
imul
inc
xchg
subl
dec
cltd
nop
sbb
scas
les
jp
dec
iret
lahf
mov
ffreep
call
repnz
and
cmc
lods
mov
cmp
mov
jmp
or
push
mov
cmpl
adcl
addr16
sub
or
xor
fcompl
lcall
idivb
mov
pop
fs
dec
shl
addr16
jge
jecxz
js
shlb
fwait
push
pop
loopne
or
add
xchg
imul
push
mov
cmp
inc
lret
jecxz
jg
nop
cmpl
sub
and
incl
js
push
cld
push
dec
jecxz
and
adc
cmp
jg
pop
xor
sub
fiadds
decl
fstps
jecxz
or
sub
push
mov
hlt
lcall
jp
sub
ror
pop
mov
xor
aad
fdivrl
mov
adc
and
rcl
cmp
pop
inc
pop
fstpl
dec
mov
or
pop
inc
jl
jmp
in
adc
ficoml
mov
mov
mov
or
shrb
fs
jecxz
or
cmpsb
aaa
xchg
pop
add
sub
mov
cld
inc
loopne
push
sarl
loopne
adc
insl
fiaddl
pop
clc
lods
test
inc
xchg
mov
in
push
mov
lods
dec
call
scas
lods
scas
mov
push
and
mov
fcmovnu
jle
insb
push
movsb
xor
and
icebp
in
mov
jg
push
stos
mov
call
pushl
push
lret
cs
mov
sbb
push
nop
cld
mov
and
mov
in
or
fcmovnu
popf
js
inc
xchg
and
nop
push
decl
or
xchg
sub
out
dec
and
inc
arpl
cs
jle
or
mov
lock
rorb
fcoms
sbbb
popa
push
mov
fidivrl
add
shl
out
dec
mov
jmp
arpl
cmpsl
sbb
mov
mov
push
push
dec
xlat
add
inc
test
aas
jecxz
mov
and
cltd
jle
negb
lret
sub
mov
mov
mov
fnstcw
pop
jl
mov
repnz
pop
insb
mov
push
xor
fcmovnu
cmp
sub
inc
lds
jl
pop
inc
fs
or
hlt
cmp
not
testb
pop
psllq
lea
or
mov
mov
pop
fnstcw
in
push
sarb
ljmp
rorb
sbb
jae
add
jp
bnd
lock
push
and
jns
adc
mov
sub
pop
mov
xchg
ret
ficompl
pusha
inc
jmp
pop
pop
xor
xchg
aas
add
pop
mov
add
mov
jmp
mov
mov
pop
mov
mov
ret
mov
pop
mov
in
sti
or
inc
fsubr
fcomps
sbbb
sub
fwait
mov
jp
sbb
mov
pusha
jecxz
adc
mov
mov
pop
inc
bound
add
jo
push
push
movsl
cs
xor
bound
push
dec
xor
addl
cli
out
outsl
pop
orb
in
icebp
pop
add
loopne
loopne
push
push
add
jl
inc
jg
mov
cmp
and
data16
int3
add
mov
sarl
daa
inc
mov
dec
or
adc
mov
push
cwtl
jmp
jne
cmpsl
xchg
out
mov
fists
inc
mov
mov
mov
jne
ret
cmpsb
dec
lret
and
dec
xchg
outsl
mov
pop
loope
sti
scas
inc
xchg
insl
sbb
mov
cmp
pusha
pop
je
adc
icebp
ja
sbb
inc
mov
pop
shlb
fcmovb
push
cli
xchg
pop
and
and
pop
js
aam
pop
in
mov
add
adc
pop
roll
xchg
ds
jmp
inc
mov
in
dec
imul
out
outsb
scas
enter
jo
adc
inc
mov
movsb
mov
xor
out
incb
addr16
les
cmp
sub
push
ljmp
cmp
push
mov
mov
mov
pop
jb
std
mov
sub
insl
fmul
fdivp
sub
mov
mov
mov
xchg
xor
push
rol
shlb
add
lcall
sbb
test
push
and
or
cwtl
rorl
aas
mov
test
inc
pop
in
addb
mov
push
popf
les
ss
das
and
in
and
xlat
fstpt
and
ds
sub
mov
jb
inc
hlt
and
jae
lahf
mov
mov
out
jns
aaa
jbe
jbe
xchg
out
sbb
sub
xor
push
push
int3
mov
adc
out
push
nop
stos
jo
in
pop
xchg
mov
jb
shll
test
lods
inc
jmp
into
movsl
ret
push
xchg
hlt
inc
jecxz
lock
xor
sub
cmc
inc
push
sub
aaa
sbb
aas
or
dec
popa
inc
or
js
pop
inc
popl
dec
sbb
shrl
cmp
fbstp
leave
pushf
pop
add
or
xor
addr16
shlb
sbb
hlt
adc
call
test
mov
inc
add
add
mov
xchg
jne
mov
jbe
loope
mov
clc
cmpsl
pop
or
stos
add
push
inc
notb
dec
sbb
sbb
int3
xchg
rclb
out
clc
outsl
addr16
inc
xor
repnz
shr
mov
clc
sbb
dec
pop
fnstsw
test
cltd
in
or
xchg
xor
enter
cld
xchg
movsb
scas
lods
andl
pop
mov
xchg
or
cwtl
dec
adc
adc
int
lea
out
xor
test
adc
mov
aaa
fsubrl
add
fdivrp
loop
pop
mov
inc
mov
mov
outsl
jne
add
lret
xchg
push
cmpb
leave
dec
pop
test
xchg
dec
aaa
lret
pop
fcoml
xor
orb
jp
add
sub
xor
adc
jmp
test
jge
decb
mov
and
in
lods
rorb
sbb
or
mov
pop
daa
xchg
jp
sub
scas
or
adc
in
sbb
mull
xor
js
fwait
mov
loope
pop
pop
mov
mov
pop
xor
insl
mov
sub
and
les
cmp
jb
add
fsubl
xlat
movaps
repnz
sub
dec
mov
inc
setae
roll
icebp
pusha
mov
mov
icebp
mov
std
inc
shrl
mov
jne
adc
ret
push
xchg
and
sbb
mov
call
in
add
pop
cs
aaa
push
mov
out
sahf
pop
enter
mov
jp
popf
sbb
or
cld
pop
jle
xlat
jg
pop
mov
cmpsl
clc
push
and
data16
das
psllq
jno
stos
cmp
decl
ficomps
std
mov
or
insl
sarb
xlat
inc
mov
mov
push
aam
or
sahf
dec
mov
mov
xchg
scas
test
jg
cmp
or
clc
mov
push
decl
out
lods
pop
xchg
out
lcall
out
aad
mov
sub
icebp
adc
mov
pop
clc
icebp
xchg
mov
rcl
dec
adc
xor
push
cs
aaa
into
into
add
in
jb
mov
pop
mov
sbb
cmpl
lods
das
nop
out
jecxz
ret
mov
pop
lds
mov
mov
rcrb
sub
jmp
add
sub
and
pop
mov
or
sub
mov
fbstp
mov
mov
xchg
cli
or
xchg
mov
inc
cmpsl
cmp
sarb
xchg
lcall
push
pusha
clc
roll
xor
in
mov
dec
insl
or
mov
decl
ds
jb
mov
cmp
or
xchg
jb
jecxz
mov
scas
inc
cs
test
push
hlt
jae
pop
mov
rclb
push
ds
inc
ljmp
sti
les
mov
mov
clc
decl
insb
in
loopne
fldl
rcr
ljmp
and
arpl
push
ljmp
push
pop
popa
lock
stos
decl
cld
jno
orl
pop
dec
lods
and
aaa
hlt
arpl
jno
xchg
jnp
gs
popf
xchg
es
lahf
rclb
or
rorl
or
stc
lret
es
mov
loope
dec
xchg
mov
sbbb
enter
loope
jl
inc
lods
or
inc
push
xor
ss
imul
push
pop
mov
inc
aad
imul
mov
loop
les
mov
xchg
or
mov
xor
cmp
cld
stos
jns
repz
popl
dec
cld
lea
orb
ja
mov
add
sbb
and
pop
mov
xchg
push
jbe
push
mov
bound
pop
lock
cmp
add
imul
add
xchg
xchg
push
fistpll
pop
test
adc
ds
icebp
push
cmp
push
cmp
into
xchg
out
add
ret
imul
ja
fcompl
arpl
fiadds
rcrl
jbe
mov
and
inc
jne
mov
xchg
push
lods
xor
or
inc
sub
and
and
dec
and
dec
inc
pop
cs
out
sbb
pushf
inc
mov
negb
and
aad
pop
cmpsb
hlt
mov
mov
pop
sti
in
aad
cli
cmp
jne
into
add
sub
mov
sub
and
std
jg
pop
test
pop
and
add
push
cmpl
sub
cmc
inc
jl
testl
js
xchg
xchg
inc
loop
ret
mov
mov
mov
dec
push
jbe
rcll
test
ja
push
push
add
ret
test
inc
dec
fisttpl
push
cld
stos
cmp
cmc
cmpsl
push
and
sub
xchg
inc
add
and
sub
daa
clc
movsl
scas
push
sbb
adc
pop
loopne
sub
cmpsb
ds
ret
xchg
mov
add
inc
bt
lret
cmp
jg
lods
fidivrl
std
repz
or
les
jae
or
push
jo
movsb
adc
lods
lcall
push
outsl
hlt
movl
rorl
inc
shlb
and
mov
dec
inc
mov
inc
loopne
out
adc
imul
or
push
sub
clc
jecxz
add
fsts
push
mov
adc
lock
dec
or
imul
sbb
sub
enter
insb
mov
bound
push
aad
xor
pop
std
ret
loop
je,pt
nop
jo
into
test
cli
add
in
lret
adc
shl
lea
shlb
jge
and
nop
adc
mov
incl
mov
out
repnz
cwtl
jae
push
push
stos
dec
mov
xchg
or
fwait
xchg
scas
fcoml
lea
push
push
lcall
loop
cmp
push
dec
inc
fwait
push
lea
ss
xor
pop
adc
jb
dec
mov
and
push
fisubl
inc
mov
movsb
mov
cmc
cmpsb
nop
enter
push
dec
movsl
enter
imul
cmc
push
dec
cmpl
jae
shlb
call
mov
and
or
mov
and
out
insl
cmp
aam
aaa
add
sbbl
mov
shr
sub
int3
mov
test
jbe
mov
loope
lcall
fidivl
js
and
in
outsb
xchg
push
scas
loopne
or
sub
imul
ljmp
mov
cmc
sbb
popa
aas
movsb
mov
mov
adc
test
jne
movsb
push
cld
mov
mov
faddl
add
test
sub
imul
mov
mov
lcall
push
out
push
call
pop
mov
push
pop
mov
dec
pop
stos
std
and
unpcklps
adc
jp
loop
gs
lahf
loop
dec
xchg
cmc
outsl
xorb
add
jp
rorb
dec
mov
add
mov
adc
fildll
pop
neg
pop
fsubr
push
mov
jns
lds
mov
mov
stc
pop
fisubrl
rcrb
rclb
lcall
fsubrs
stos
push
lcall
icebp
or
jnp
xor
jecxz
loopne
cmp
mov
push
test
insb
add
lret
sbb
pop
and
jno
ficompl
inc
lcall
jl
mov
jp
xor
call
xor
sub
rolb
xlat
jl
pop
push
push
or
mov
push
je
jmp
jge
hlt
adc
nop
push
adc
pop
sti
push
imul
fisttpl
lds
cltd
jb
fnstcw
jo
inc
dec
negb
xchg
aaa
lcall
sub
xchg
addb
mov
test
sbb
je
push
call
cltd
mov
mov
xchg
and
mov
stos
mov
gs
mov
das
in
clc
dec
dec
jnp
mov
pop
inc
call
lds
jne
sub
push
pop
sbb
mov
or
add
jmp
and
out
cli
out
testl
aam
adc
mov
sbb
ret
add
sbb
inc
test
lods
adc
notb
stc
mov
incl
add
cmpsb
push
push
jae
jb
push
pushf
rcl
push
and
cltd
sti
sarb
inc
arpl
aam
adc
jge
imul
bound
adc
jl
mov
scas
pusha
push
mov
jge
js
outsl
outsl
insb
add
adc
jbe
fnstsw
cmp
cld
pop
outsl
lds
mov
jno
in
sub
mov
in
jle
or
orl
or
jmp
dec
mov
loopne
and
out
filds
sbb
sub
fs
xchg
sub
fldenv
push
sub
push
je
out
popf
addr16
add
and
test
sbb
in
dec
fildl
jp
inc
add
sub
in
push
popa
mov
push
hlt
andb
pop
xchg
test
add
inc
xor
sti
and
mov
movsb
inc
mov
sub
cmpsl
stc
adc
ds
jg
xor
call
jge
lret
xor
sbb
add
ret
mov
in
push
sbb
mov
mov
dec
shll
xchg
loop
push
push
mov
divb
add
push
sub
test
pop
mov
fs
data16
gs
je
test
insb
sbb
pop
mov
movl
shll
add
and
sub
shl
jae
cltd
inc
cli
xchg
inc
les
out
outsl
shlb
push
jecxz
add
pop
int3
outsb
insl
sub
ljmp
cmp
mov
mov
fnstsw
sbb
enter
jo
xor
jmp
xchg
fstpt
add
lods
in
fcomps
mov
lea
cmp
mov
jmp
jmp
test
mov
dec
sbb
leave
cmc
pop
in
outsb
js
stos
aaa
sub
pop
iret
repz
mov
aaa
sub
std
dec
mov
roll
mov
inc
or
scas
jle
sbb
cmp
push
lock
fidivrl
int3
ret
mov
inc
lock
mov
subl
imul
hlt
fadd
fcmovnb
mov
repnz
icebp
cmp
sub
mov
loopne
sahf
adc
pop
imulb
dec
jns
adc
int
scas
cmp
dec
pop
das
fidivrl
rolb
test
sbb
outsb
fwait
insb
jb
rclb
stos
ror
test
inc
popa
data16
mov
icebp
cld
or
sub
jg
add
jl
int
xor
sub
mov
mov
int3
fadd
xor
or
pop
mov
popa
push
dec
fdivs
cmc
push
pop
push
pop
ret
mov
rolb
mov
insl
push
aad
mov
pushf
xor
addb
rorl
scas
data16
and
xor
inc
aam
xchg
or
cmp
shlb
bound
es
jl
fbstp
fnsave
sbbb
xchg
pop
fwait
andb
mov
outsb
fistl
outsb
aad
inc
imul
loopne
movsb
fsubrp
mov
clc
mov
sub
jae
repnz
add
fildl
mov
mov
addb
incl
stos
and
xchg
push
jbe
mov
jo
inc
dec
xchg
jmp
pop
push
in
aaa
fsubrs
insb
mov
pop
out
pushf
jg
jmp
repnz
xchg
std
or
pushf
test
jns
pop
clc
flds
movaps
fcomps
ret
ja
jb
inc
pop
add
adc
push
push
adc
mov
xchg
xor
push
mov
add
or
lds
jo
mov
jb
sbb
outsb
push
cmpsl
or
adc
filds
adc
dec
mov
bound
fcmovnu
ror
pop
mov
push
and
mov
das
and
sahf
pop
addr16
sbb
or
test
xlat
adc
lods
lcall
push
xchg
dec
ret
push
mov
dec
das
fdivl
outsb
push
aad
jbe
push
pop
cmpsl
out
cmp
pop
js
xchg
loopne
or
inc
adc
add
shlb
lret
test
pop
sub
shlb
shrl
lret
jo
les
cmp
and
test
ljmp
adc
mov
mov
shlb
pand
mov
imul
nop
inc
add
out
scas
lods
jbe
ds
inc
xchg
or
test
pop
lods
mov
push
xorb
mov
push
and
lock
popa
fists
adc
add
jo
push
lea
stos
mov
loope
cmpsb
in
scas
or
pushl
sbb
sbb
mov
pop
cmp
jge
fsts
inc
rclb
inc
adc
sub
or
xchg
out
mov
push
mov
mov
add
les
clc
and
inc
mov
int3
cs
mov
bound
enter
lods
dec
sbb
jae
pop
jg
sarb
and
pop
cmpsb
jmp
inc
pop
loopne
xlat
mov
pop
pop
mov
lea
inc
loop
inc
fwait
cwtl
jl
push
sub
addl
sub
out
mov
test
popa
call
pushl
push
adc
into
dec
loope
scas
outsb
ljmp
pop
jle
pop
icebp
in
xchg
xchg
dec
jbe
mov
repz
xchg
lahf
cld
adc
loope,pt
les
sarb
cli
shll
mov
add
dec
inc
call
cmp
mov
std
sarb
jecxz
jecxz
adc
pop
movsl
sbb
xchg
cmpsl
push
aam
push
xor
js
pusha
les
mov
pushf
orb
fnstenv
push
sbb
jle
inc
push
sub
jmp
dec
jecxz
rcrb
cmc
xlat
push
sar
lea
ret
call
pop
xor
fidivl
xchg
test
les
fists
ds
cld
inc
rclb
ljmp
lds
call
mov
mov
cld
test
aam
in
sbb
mov
ja
push
inc
dec
arpl
push
sbb
aam
loopne
hlt
inc
jecxz
cmp
enter
adc
rolw
and
push
loop
movsb
sbb
mov
jecxz
call
adc
ljmp
push
cmp
cmc
push
push
xor
lret
jne
js
testb
mov
mov
sbb
out
lods
mov
xor
ret
add
mov
adc
add
lea
inc
cwtl
xlat
clc
xor
ljmp
lret
test
insb
xchg
mov
push
addl
fdivp
insl
call
jb
iret
push
push
lock
test
mov
addr16
mov
add
sbb
vmovdqu
enter
js
pop
leave
jg
shll
dec
jns
aam
mov
icebp
fistl
jg
and
mov
fidivrs
pop
push
das
mov
popa
xchg
cmp
scas
in
rolb
popf
or
jbe
and
mov
std
stc
adc
and
push
push
out
cwtl
inc
fnsave
xor
inc
fcmovnu
lock
or
movsb
sbb
fsub
dec
insl
subl
sbb
inc
sub
push
loope
sahf
ja
sbb
inc
jle
test
xchg
ret
adc
outsl
mov
bound
sbb
push
mov
mov
int3
sbb
mov
inc
ljmp
call
imul
ljmp
shl
fildl
push
xor
pop
or
or
lea
xchg
or
xor
mov
adc
mov
aam
xchg
mov
cli
outsl
or
sbb
addr16
cmpsl
outsb
dec
icebp
sbb
repnz
pop
bound
push
add
cmp
test
or
pushf
int
adc
leave
adc
in
mov
dec
movsl
test
test
dec
jns
out
pusha
and
test
aaa
loop
cmp
sub
rcr
add
xchg
ljmp
enter
xor
and
std
push
rorl
jno
jno
cmp
addb
inc
loopne
mov
mov
outsl
cld
addr16
popf
add
inc
adcb
loopne
ret
pop
jmp
or
xor
xor
movsl
jg
cs
aas
inc
fisttpll
dec
or
insb
lods
insl
sbb
incl
movl
imul
lods
xor
pop
loope
cmp
aam
sub
fwait
mov
cmpb
pop
push
xchg
push
xchg
lock
fimull
popa
dec
sub
cmp
adc
mov
sbb
jmp
push
xchg
sbb
ja
fcomps
dec
lahf
repnz
ret
lock
mov
ds
inc
dec
xor
lcall
push
push
clc
lods
pusha
addl
ss
stos
cwtl
adc
ljmp
mov
add
test
shlb
cmp
das
lock
arpl
sbb
xchg
stc
jnp
jle
stos
das
lock
hlt
scas
icebp
das
jmp
adc
jg
clc
mov
xchg
leave
fwait
mov
test
aad
testb
sub
mov
mov
or
jno
adc
and
inc
clc
sbb
mov
ret
ficoms
push
xor
sbb
mov
stos
lea
inc
mov
incl
push
xor
jno
loop
sbb
jns
jg
sbb
xchg
sbb
xchg
out
pusha
fimull
cli
push
lret
xlat
or
dec
or
and
push
rclb
outsb
insl
pop
test
or
gs
or
xor
mov
rclb
clc
aad
int3
enter
in
test
sub
insl
add
shrb
xchg
xchg
call
incl
mov
cmpsl
mov
call
push
jg
dec
int3
dec
inc
lcall
xlat
cmp
jge
pop
stos
popf
repz
fdivrl
jge
mov
fdivs
adc
decl
je
mov
icebp
or
adc
push
cmpl
jo
lods
clc
adc
xor
test
lcall
dec
and
orb
cli
dec
jne
icebp
das
fnstsw
nopl
push
dec
inc
dec
mov
outsl
push
lcall
sbb
sarb
icebp
ret
adc
and
pop
call
jmp
dec
add
lahf
pop
push
test
push
rcrl
movsl
sbb
mov
stos
fcomps
sbb
rclb
add
or
rorb
in
out
add
adcb
inc
lods
jecxz
mov
sbb
xchg
push
mov
aam
adc
mov
cwtl
les
pop
cli
mov
mov
push
cli
mov
push
out
and
js
sub
out
cmc
sbb
mov
jle
not
xchg
repz
loopne
sbb
into
imul
xchg
std
insl
addl
mov
fsubrs
das
add
cmpl
shr
call
or
insb
clc
es
ljmp
cmpsl
add
xor
popf
push
sub
gs
mov
rorb
jg
pop
cwtl
ljmp
lcall
hlt
fwait
inc
fsubrl
sub
test
or
sbb
mov
jg,pn
int
loop
sbb
lea
add
out
loopne
ljmp
mov
push
or
movsl
out
fbstp
lds
mov
adc
lret
sahf
loope
xor
cltd
outsl
push
sbb
xchg
xor
push
roll
inc
jae,pn
inc
cmp
les
test
sub
shrl
call
icebp
pop
xor
iret
jne
aad
mov
lods
jne
movsb
adc
sub
and
mov
sub
xchg
pop
ds
sarl
mov
in
mov
pop
je
jp
ret
mov
mov
lods
es
adc
pop
mov
scas
mov
cmp
movsb
cmpsl
cwtl
sti
popa
adc
call
cmpsb
or
jl
inc
fisttps
imulb
sbb
inc
jnp
push
push
sub
sub
rol
pop
cmc
jne
shl
mov
xchg
add
rorb
ja
inc
pop
inc
push
rcr
je
cmp
jecxz
push
and
cli
jg
cli
jbe
aam
adcb
cmpsb
loop
jle
ljmp
lahf
mov
fdivrl
dec
inc
jl
push
pushf
mov
pop
mov
push
push
loopne
stos
cmp
call
mov
sub
pop
sub
sahf
aas
adc
shl
mov
or
dec
or
fldl
push
and
outsb
add
aaa
shl
mov
or
and
push
decl
fidivl
jg
sbb
push
ja
and
cmp
and
xchg
mov
cmpsl
in
pop
dec
mov
mov
std
jecxz
jp
or
sub
fidivl
test
pop
cli
test
inc
adc
fidivrl
dec
mov
stos
push
push
jmp
jg
push
mov
xor
mov
mov
das
ljmp
clc
or
in
rol
jl,pt
or
mov
push
mov
ret
test
aaa
mov
or
int3
inc
ret
jmp
sarb
and
xor
adcl
fwait
neg
pop
sbb
mov
xchg
ss
mov
mov
aam
fdivrp
mov
cmp
pop
inc
ss
mov
sub
or
fwait
sub
jo
pop
aam
mov
and
call
lcall
lds
hlt
pusha
jno
imul
jnp
ficoml
fnsave
imul
sbb
mov
lods
lret
mov
pop
adc
xchg
cmp
shll
push
jae
sub
test
xor
arpl
or
adc
add
sbbb
mov
fisubs
or
cmp
sub
cltd
data16
xor
jnp
jb
test
adc
jecxz
jmp
cld
xchg
push
xor
arpl
add
addb
mov
pop
adc
mov
cs
das
sarl
jnp
xor
or
lret
clc
add
sti
add
adc
loope
xchg
jne
sub
mov
adc
and
cmp
pop
inc
xchg
inc
push
mov
data16
call
rorb
jp
shlb
nopl
xchg
dec
cli
sbb
int3
std
dec
sbb
mov
pop
xchg
lock
xor
aaa
jle
push
fidivl
inc
fsubs
mov
adc
sub
hlt
or
xor
push
dec
in
pop
jg
and
lods
outsl
cmc
or
or
mov
jge
add
sbb
mov
inc
jmp
xor
fisttpll
in
adc
daa
aas
pop
jo
cmp
incb
mov
or
movsb
scas
je
and
js
cli
in
or
adc
ret
cmp
insl
mov
xlat
xchg
mov
mov
push
mov
sbb
pop
loopne
in
or
inc
mov
mov
dec
sub
in
inc
mov
mov
mov
int
lds
jle
pop
jno
cmpsb
sbb
aas
adc
mov
push
jg
stos
and
push
popf
hlt
push
sub
adcb
loope
jg
mov
dec
sub
stc
dec
or
fldenv
pop
loopne
int
mov
sub
or
inc
clc
and
loope
jb
xchg
xlat
push
call
pop
aas
popa
push
fnstenv
add
icebp
cwtl
aaa
and
loop
ljmp
insb
nop/reserved
cmp
cmp
lret
int3
in
inc
loope
subl
fucomi
cmpl
adc
fbstp
rcll
mov
or
xor
test
sbb
xchg
dec
out
aaa
pop
rcrl
or
stc
loopne
mov
mov
ljmp
inc
loope
ret
inc
pop
push
into
je
fadd
fsubp
lea
mov
in
sbbb
mull
out
adc
sbb
jae
cmp
bound
mov
cmove
mov
cmpsb
pusha
or
jecxz
add
lds
push
sub
rcl
data16
cltd
lock
pop
ljmp
loopne
cmp
or
inc
jo
xchg
jae
loopne
call
in
bound
and
sbbl
sbb
mov
sahf
pop
xchg
test
adc
push
imulb
or
bound
push
ljmp
mov
mov
scas
ja
jg
mov
ds
ss
adc
lret
addb
imul
add
call
daa
nop
mov
stos
stc
and
or
in
mov
daa
gs
pop
dec
add
ljmp
in
push
repnz
outsb
pop
cli
imul
mov
imul
push
fucom
adc
nop
nop
mov
bound
cld
fwait
ret
gs
inc
std
insb
mov
cmpb
jg
push
out
and
rorb
mov
outsb
fsubrl
xchg
xchg
test
xchg
jno
sub
xor
or
adc
push
xchg
fdivrp
pop
xlat
mov
cltd
jge
pop
xchg
leave
rcl
cmp
notb
std
icebp
mov
sti
iret
mov
push
ljmp
adc
fidivs
mov
dec
and
mov
jmp
int
adc
insl
cli
lahf
xor
or
data16
inc
cmp
and
jle
into
mov
xchg
out
sahf
lods
push
clc
pop
dec
inc
jno
lcall
mov
sbb
imul
adc
nop
inc
or
pusha
mov
mov
cli
push
in
jge
xor
scas
xor
cmp
adc
mov
das
xor
dec
cmp
or
aam
cmp
out
loope
subl
outsl
sbb
cwtl
or
sub
push
cmp
addl
enter
push
jp
lea
lea
ljmp
xor
andb
jbe
mov
test
scas
test
dec
or
jecxz
mov
sub
sub
pop
pop
outsl
insl
mov
push
fs
inc
movsb
sbb
xor
add
cmc
out
push
hlt
pushl
mov
cmp
jno
aaa
outsb
xchg
aam
add
in
sbb
mov
dec
xor
fldenv
push
lret
cmp
or
add
mov
and
sti
xchg
movsl
aam
outsl
insl
push
jmp
clc
leave
ljmp
std
rcrl
mov
mov
int3
xor
mov
jo
adc
adc
cwtl
in
sub
add
add
out
add
inc
or
add
add
je
jb
arpl
jbe
incb
fs
jae
cmovbe
gs
or
jb
gs
incb
gs
outsb
je
andps
jo
popa
je
idivl
decl
insb
xor
dec
popa
jo
imul
pop
fldt
push
dec
cmovno
xor
insl
bound
in
idiv
gs
outsl
jb
popa
inc
and
arpl
imul
jnp
outsl
popa
fs
inc
push
pop
addr16
daa
das
gs
lcall
mov
jge
outsl
inc
outsl
mov
insb
adc
mov
fcom
mov
jge
or
bsr
mov
dec
push
arpl
insl
mov
push
imul
arpl
insl
out
fisubrl
adc
inc
jne
je
mov
jne
push
inc
popa
arpl
inc
sub
push
adc
das
push
fildl
sbb
push
imul
dec
jae
popa
fs
lahf
cmp
dec
outsl
fs
out
sti
imul
insb
push
arpl
jl
gs
outsb
push
fcmovnu
cs
js
jo
cmp
imul
push
outsl
imul
fstp
mov
cmp
sbb
sbb
jae
scas
mov
adc
push
cmp
push
cmp
jns
ss
out
dec
inc
popa
addr16
popa
jae
dec
jne
js
jmp
pop
xlat
repz
vmwrite
mov
jae
data16
inc
inc
bound
imul
outsb
push
daa
inc
je
bound
push
jmp
scas
jne
inc
inc
push
mov
mull
out
mov
imul
fs
jmp
in
mov
in
mov
sub
dec
push
jb
jns
les
lret
je
xchg
add
mov
mov
dec
je
out
gs
jne
mov
sbb
in
outsb
or
push
add
and
imul
cmp
inc
and
inc
or
scas
rclb
adc
mov
movsb
push
add
sbb
outsb
inc
pop
push
test
jbe
dec
leave
pop
shlb
inc
es
into
cmp
insl
int3
jae
in
mov
outsb
sub
inc
dec
imul
cmp
mov
fiadds
lods
pop
mov
push
push
jb
popaw
orb
orl
jo
cmpsb
fdivl
adc
scas
mov
ror
loope
out
pop
inc
fadds
dec
or
stos
ret
inc
jp
push
inc
sub
imul
dec
mov
je
sbb
aad
cmp
jne
cltd
lods
mov
and
pop
add
dec
mov
mov
add
inc
sbbb
push
add
shrb
inc
push
dec
rolb
mov
lahf
dec
and
sbb
xorb
push
or
movl
mov
and
test
lds
mov
and
xchg
push
push
imul
pop
and
xchg
popa
jne
iret
in
sbb
fstl
pop
dec
movsb
jo
and
push
or
mov
push
jp
shrb
arpl
adc
adc
and
and
test
jae
cmp
or
hlt
mov
sbb
out
ret
mov
dec
jne
lret
or
or
xchg
in
jmp
inc
jae
mov
sbb
outsb
shlb
xchg
sub
mov
pop
mov
xchg
and
add
lock
aas
xchg
push
in
xor
add
xchg
add
mov
sub
js
insl
ss
roll
xorb
mov
popa
call
mov
jne
or
add
repnz
enter
mov
fsubrs
xchg
mov
fstpt
sbb
dec
gs
inc
push
lret
mov
popf
je
rcrl
cs
sub
int3
or
sub
ds
push
pop
mov
pop
sarb
push
aas
es
adc
dec
mov
aas
ret
scas
cmp
neg
adc
xchg
cmpsb
adc
outsl
cmpsl
sbb
jb
mov
ss
pusha
sub
push
arpl
adc
insb
lret
push
push
adc
hlt
xor
inc
jmp
push
jmp
sti
mov
jne
inc
cmp
imul
test
adc
fcoml
insl
pop
inc
dec
or
push
or
nop
jae
xchg
inc
xlat
push
push
push
addr16
jns
dec
ss
xor
push
daa
cmpsl
aas
into
push
sbb
insb
jns
mov
or
or
cwtl
and
mov
inc
cltd
xlat
inc
rcll
divl
enter
cmp
add
and
push
outsl
fs
divl
insb
popa
mov
xor
push
lahf
insl
popa
mov
mov
inc
jnp
xchg
imul
icebp
in
imul
sub
jb
loopne
dec
add
sbb
mov
add
or
adc
xchg
jg
xor
arpl
inc
sub
inc
dec
push
arpl
mov
fmuls
inc
jecxz
arpl
rcrl
inc
imul
mov
arpl
ret
cwtl
nop
and
or
jo
inc
mov
outsl
ja
pop
idivl
dec
lods
inc
inc
outsl
pop
inc
xorl
es
lcall
or
roll
adc
pop
mov
divl
cmpsl
pop
ficompl
pcmpgtb
sbb
jbe
ret
test
das
sbb
fadds
dec
es
push
inc
jno
inc
or
insb
loop
dec
mov
jne
fdivrl
lcall
loop
out
jle
shrb
jmp
jbe
adc
leave
jp
dec
adc
jmp
sub
lea
xchg
mov
cwtl
and
mov
je
lock
dec
inc
loope
inc
sub
dec
scas
adc
mov
bound
sbb
loopne
repz
push
imul
test
push
dec
mov
mov
icebp
es
push
add
loope
xchg
stc
jne
fisubl
add
add
fs
gs
add
popa
das
pop
inc
xchg
ds
pop
je
cmp
call
lods
jb
sbb
or
add
imul
push
arpl
sbb
push
imul
out
popf
push
js
imul
inc
xorb
int3
cwtl
xor
cmpsl
rclb
insb
addr16
cmpsl
xchg
shlb
insb
roll
clc
add
xorb
jnp
jbe
or
orb
int3
inc
pop
add
ret
mov
mov
arpl
jg
adc
pusha
mov
cwtl
shlb
addr16
xor
pop
push
les
dec
data16
loopne
jae
mov
dec
sbb
test
gs
sbb
push
cmp
cmp
pop
dec
dec
sub
push
push
out
fldcw
mov
stos
mov
mov
dec
inc
jae
es
cmpsb
mov
loope
and
pop
cmp
push
adc
ss
cmpsl
mov
inc
lret
inc
pop
fisubrs
fwait
sbb
and
jecxz
add
and
jbe
ret
pop
xchg
shrl
je
adc
cmp
insl
adc
test
mov
lahf
je
or
mov
in
or
push
cli
mov
jno
inc
pusha
cmpsl
ja
xor
insl
gs
push
test
std
push
loopne
data16
inc
or
ficoms
xchg
sbb
jne
xlat
int3
add
pop
test
scas
xor
xor
xchg
mov
cmp
push
jo
jmp
pop
shll
mov
xchg
or
ss
mov
pushw
or
jo
mov
shll
xchg
push
fmul
rcll
xlat
pop
inc
add
aas
pop
call
loope
inc
mov
cmp
js
test
xor
xchg
mov
js
aad
nop
daa
mov
imul
sbb
cwtl
mov
fs
inc
or
fwait
les
or
addr16
mov
bound
pop
data16
mov
popa
mov
mov
cmp
mov
test
mov
mov
fs
orl
and
cbtw
aad
dec
xor
insb
outsb
inc
int
mov
dec
sub
xchg
and
xor
sbb
xor
or
mov
bound
into
sbb
adc
icebp
push
push
inc
shrl
push
mov
dec
insb
jbe
mov
imul
push
mov
inc
dec
clc
lcall
mov
cmp
sub
or
aam
arpl
test
or
mov
mov
adc
flds
cmp
sbb
movb
mov
mov
xchg
pusha
negb
inc
pop
adc
sbb
fnstcw
xor
shll
lcall
aas
lods
popa
or
fs
mov
or
cmp
clc
or
faddp
dec
jae
xchg
andb
and
rclb
mov
dec
and
or
push
inc
inc
dec
loopne
push
dec
mov
mov
push
cmp
pop
mov
inc
jecxz
adc
push
test
dec
push
icebp
sbb
addl
int3
cwtl
mov
pop
push
in
and
jb
mov
mov
dec
jne
les
imul
popa
push
test
sbb
mov
add
mov
rol
insb
sbb
add
cwtl
sets
push
pop
idiv
shlb
aaa
cmp
mov
cmp
jae
jae
shlb
adc
mov
ljmp
fisubs
neg
xor
jle
and
mov
fwait
shll
push
lret
orl
rorb
mov
and
lods
add
in
sbb
add
ret
add
inc
xor
ret
addb
push
in
and
xchg
adc
cmp
xor
push
fsubl
and
stc
ds
adc
imul
dec
jne
and
fdivs
push
jge
mov
pop
cs
inc
das
cwtl
or
xor
add
mov
aam
adc
xorl
fnsave
or
or
sub
add
inc
xor
dec
dec
push
lds
mov
add
repz
sub
sbb
pop
and
add
or
pop
cmp
cmp
add
into
add
cmp
xor
pop
push
add
imulb
rolb
bound
push
push
jb
add
inc
dec
rolb
sub
adc
fldcw
jmp
shlb
pop
into
add
pusha
cs
mov
fsts
jecxz
sti
push
pop
adc
push
imulb
jb,pn
je
jnp
inc
imulb
inc
jae
arpl
fidivs
jmp
jnp
daa
add
mov
pop
mov
add
add
add
add
and
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
or
add
xor
add
xor
add
jo
add
mov
add
add
add
add
add
nop
add
sbbb
mov
add
add
add
sbbb
add
add
addb
add
or
add
ret
add
add
add
add
add
ret
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
add
or
add
add
lock
jo
add
add
add
mov
add
add
add
or
add
lret
and
add
add
add
andb
add
cmp
add
pusha
add
orb
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
movsb
int
add
add
add
add
add
add
mov
add
add
add
add
add
add
int
add
add
add
add
add
and
inc
or
add
mov
add
add
jb
add
add
or
add
enter
inc
add
add
jb
add
xor
and
add
fdivs
add
add
add
add
add
add
add
add
add
add
out
jg
add
testl
outsl
sti
incl
jg
testl
incl
jg
testl
std
out
testl
outsb
jnp
add
outsl
testl
insl
jnp
add
incl
out
incl
out
out
testl
in
out
testl
in
jnp
add
add
testl
jge
incl
insb
incl
incl
jge
incl
jle
testl
in
sti
incl
out
imul
jl
incl
cld
out
testl
jg
incl
out
sti
testl
out
testl
jge
testl
jnp
add
jmp
add
outsl
incl
std
push
add
testl
jmp
add
imul
in
jg
add
jg
add
incl
in
push
add
testl
in
incl
insb
outsl
incl
jg
incl
std
incl
jg
add
jg
add
incl
std
outsl
testl
insb
push
add
testl
out
imul
cld
incl
cld
out
testl
in
out
incl
jg
testl
insb
imul
insb
push
add
add
incl
cld
jnp
add
incl
std
outsl
incl
jg
add
incl
cld
jmp
add
jnp
add
incl
insb
outsl
incl
jle
testl
jg
incl
jmp
add
imul
insb
outsl
incl
outsl
testl
insl
imul
out
incl
cld
jmp
add
incl
in
outsl
incl
cld
out
incl
jnp
add
outsl
testl
sti
incl
jg
add
incl
jg
testl
outsl
jg
add
imul
outsb
sti
incl
cld
sti
testl
out
testl
out
jg
add
add
add
add
testl
jl
incl
jnp
add
testl
in
jg
add
add
push
add
push
add
add
incl
ljmp
add
add
incl
cld
imul
jle
incl
out
push
add
out
testl
jg
incl
ljmp
add
jg
add
testl
sti
testl
std
out
incl
jl
incl
cld
jnp
add
outsl
testl
out
incl
jl
testl
jge
testl
jl
incl
in
out
incl
jnp
add
testl
insb
jg
add
out
incl
insl
incl
outsl
incl
jg
incl
out
jmp
add
jnp
add
jmp
add
sti
incl
jg
testl
std
imul
cld
sti
incl
insb
jmp
add
outsl
incl
jle
incl
out
jmp
add
testl
std
outsl
testl
out
jnp
add
jg
add
incl
jg
testl
jmp
add
outsl
testl
insl
out
incl
out
sti
incl
jge
incl
std
sti
incl
jg
incl
out
jmp
add
incl
jl
testl
jg
testl
insb
jmp
add
sti
testl
insl
outsl
testl
jge
testl
in
out
testl
in
jmp
add
incl
jle
incl
insl
imul
in
outsl
incl
in
incl
outsl
jnp
add
sti
incl
incl
jg
testl
cld
outsl
testl
outsb
push
add
sti
testl
insb
jmp
add
outsl
incl
in
imul
std
jg
add
testl
std
imul
in
sti
incl
out
imul
out
outsl
incl
jge
testl
jg
add
jmp
add
testl
outsb
imul
jge
testl
out
jnp
add
testl
jle
testl
jge
incl
insb
out
incl
insb
out
testl
pop
and
pop
inc
pop
ret
rcr
in
imul
sub
mov
out
mov
jp
add
add
stc
pushf
aam
int
mov
mov
insb
xor
jle
sbb
jb
xchg
nop
push
pop
adc
sub
std
bnd
rorb
push
push
shlb
mov
jo
sbb
mov
jnp
fwait
add
sahf
xor
pop
cmp
xchg
mov
pop
test
les
test
nop
jmp
dec
cmp
ss
bound
and
add
and
cmp
sti
sbb
ret
dec
cli
rolb
inc
lods
adc
and
ss
stos
push
std
out
pop
inc
test
and
xchg
xchg
mov
push
xlat
shlb
add
jg
xchg
mov
hlt
pop
sti
loope
xchg
bnd
cs
push
daa
cs
jns
dec
add
cmpsb
test
lahf
mov
pop
ja
xor
movsl
addb
stc
push
ret
in
enter
outsb
fs
mov
cmp
imul
gs
sti
std
mov
cld
aad
fs
push
mov
xchg
int
mov
jne
movsb
mov
or
loope
or
sbb
pushf
push
inc
testl
mov
dec
or
test
sbb
inc
out
stos
and
rorb
xchg
lods
push
sahf
mov
std
jne
mov
mov
cmp
xor
repnz
iret
imul
scas
mulb
xor
movsl
fisubs
cmc
mov
mov
test
pop
inc
lret
lds
in
je
outsl
mov
es
push
dec
push
imul
xor
lds
fs
daa
out
int3
jmp
mov
out
testb
loop
dec
cmp
inc
mov
outsl
mov
xor
add
into
inc
sub
push
jo
vsqrtsd
insl
xlat
mov
repnz
push
mov
pop
test
adc
icebp
mov
or
mov
inc
pop
dec
adc
dec
mov
outsb
mov
jecxz
icebp
dec
in
adc
dec
repnz
sbb
sub
fsubrs
outsl
aam
jge
xor
adc
xchg
dec
push
and
ds
inc
dec
mov
icebp
sub
add
roll
and
adc
jno
mov
xchg
notl
inc
sbb
test
out
mov
sub
xchg
jg
idivb
bound
xchg
bound
int
mov
inc
fnstenv
jns
mov
jl
jg
sbb
pcmpgtw
mov
icebp
ljmp
sub
fdivp
repz
setnp
sti
test
cmp
mov
mov
sarb
jge
fiaddl
ja
movsb
aaa
xor
std
adc
mov
xchg
lods
int
pop
push
jnp
or
adc
add
add
add
and
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
push
add
add
add
push
add
add
add
add
add
add
add
add
add
add
test
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
pusha
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
jne
outsb
add
add
add
add
add
outsb
add
add
add
sbb
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
add
add
add
jae
push
add
add
popa
add
imul
add
add
add
add
jb
outsl
add
add
add
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
add
add
add
pop
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
ja
add
je
and
push
add
je
popa
add
add
popa
add
jb
outsl
add
and
push
add
popa
add
je
and
dec
add
outsb
add
add
pop
add
add
add
insb
add
outsl
add
jns
jb
imul
je
add
push
add
insb
add
and
test
add
outsb
add
add
add
add
add
and
xor
xor
xor
xor
sub
add
add
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
bound
insb
add
add
js
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
push
add
imul
jae
and
push
add
jbe
add
and
dec
add
je
jae
and
inc
add
je
jb
jne
jae
add
sub
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
jge
add
inc
inc
test
add
je
add
mov
add
jl
add
or
or
push
add
add
xor
mov
add
or
add
add
pop
iret
add
fmul
add
gs
add
clc
into
add
jb
add
add
add
jg
add
or
add
mov
add
adc
add
xchg
iret
add
sbb
add
mov
iret
add
lods
iret
add
sub
add
mov
iret
add
iret
add
cmp
add
iret
iret
add
inc
iret
add
fcmove
add
dec
iret
add
out
add
push
iret
add
lock
add
dec
add
push
rolb
add
rolb
add
add
cmp
add
add
add
dec
rolb
add
add
add
add
add
add
rolb
add
add
add
add
add
add
jle
add
add
add
mov
add
add
add
xchg
rolb
add
add
add
add
add
add
add
rolb
add
add
add
rolb
add
add
add
rolb
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
insl
fs
xor
cs
insb
add
jns
je
xor
fs
insb
add
imul
insb
add
imul
insb
insb
add
arpl
xor
fs
insb
add
arpl
xor
cs
insb
add
insb
ja
jo
cs
insb
add
insb
insl
outsl
outsb
cs
insb
add
gs
xor
fs
insb
add
jb
imul
add
outsb
insl
insl
cs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
insb
outsl
jae
dec
gs
add
inc
push
inc
outsl
insb
outsl
jb
add
inc
jb
jo
push
jb
je
arpl
je
add
dec
imul
inc
insb
jo
popa
inc
insb
outsb
add
push
jne
fs
jno
popa
insb
add
add
je
jae
jb
popa
insl
gs
js
add
push
jb
dec
jae
add
inc
jb
popa
je
inc
jae
outsb
arpl
outsb
fs
je
add
inc
gs
inc
add
add
jb
jne
jb
push
popa
insb
jne
push
add
insl
imul
outsb
