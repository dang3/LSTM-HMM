push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
xor
mov
mov
pusha
call
add
pop
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
ret
add
add
in
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
jmp
ret
and
push
pop
sub
mov
mov
shl
xor
sub
mov
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
je
mov
sub
jne
push
pop
je
popf
push
pushl
decl
ret
push
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
push
pushl
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
add
lea
sub
sub
mov
pop
mov
mov
lea
mov
push
mov
xorl
pop
sub
or
xor
mov
push
push
push
pop
push
pop
stos
shr
stos
shr
stos
shr
stos
pop
pop
subl
neg
clc
sbb
pushl
lea
lea
pop
repz
add
cmp
jne
mov
pop
ret
add
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
push
push
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
push
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
mov
and
add
and
add
and
add
add
xor
add
jb
add
int3
and
add
add
push
and
add
and
add
add
mov
and
add
and
add
and
add
and
add
add
push
and
add
add
add
and
add
and
add
and
add
and
add
and
add
add
add
mov
and
add
add
jbe
add
add
add
dec
and
add
and
add
and
add
add
add
add
outsb
and
add
add
add
and
add
and
add
and
add
add
adc
add
add
mov
add
add
add
add
add
nop
and
add
add
add
add
jle
add
movsb
and
add
add
lret
add
and
add
add
xor
add
jb
add
int3
and
add
add
push
and
add
and
add
add
mov
and
add
and
add
and
add
and
add
add
push
and
add
add
add
and
add
and
add
and
add
and
add
and
add
add
add
mov
and
add
add
jbe
add
add
add
dec
and
add
and
add
and
add
add
add
add
outsb
and
add
add
add
push
gs
imul
test
inc
jb
popa
je
inc
jbe
outsb
je
add
ret
gs
jne
jb
outsb
je
jb
arpl
jae
pop
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
dec
add
popa
insb
inc
insb
popa
addr16
add
add
outsl
bound
dec
outsl
arpl
add
inc
jne
jb
outsb
je
push
add
add
gs
outsl
jbe
inc
imul
jns
add
aad
inc
imul
gs
add
popa
jo
jb
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
imul
jb
je
arpl
add
push
push
je
imul
inc
add
call
inc
imul
bound
gs
add
call
inc
imul
bound
gs
add
push
add
outsl
jae
dec
popa
outsb
fs
add
push
jb
jbe
je
push
jb
imul
inc
add
gs
popa
jae
inc
jb
outsl
jb
add
popa
je
inc
imul
jns
add
and
gs
outsl
insl
insl
inc
jb
popa
imul
dec
inc
push
dec
inc
dec
xor
cs
insb
add
movl
outsl
insl
gs
xchg
inc
gs
imul
js
push
add
xchg
push
push
gs
jae
addr16
add
jnp
inc
gs
imul
outsb
addr16
add
into
pop
dec
outsl
popa
fs
jne
jae
jb
add
jo
je
push
popa
addr16
add
jae
push
gs
jne
jae
jb
outsl
jae
add
push
gs
outsl
arpl
add
das
push
inc
insb
outsl
jae
inc
gs
je
jo
add
imul
jae
popa
addr16
add
sbb
ja
jo
imul
pop
dec
jae
imul
pop
or
jae
dec
gs
popa
addr16
add
push
push
inc
push
xor
cs
insb
add
or
inc
gs
gs
imul
inc
gs
popa
insl
gs
jns
jns
gs
add
sbb
addr16
gs
jns
popa
insl
add
add
inc
fs
jae
inc
jns
popa
insl
gs
add
push
push
dec
inc
dec
cs
insb
add
dec
jae
popa
je
push
push
inc
add
push
dec
push
push
dec
cs
insb
add
movsl
loop
outsl
xor
lea
inc
stos
sub
aas
lods
jp
and
push
ja
nop
pop
xchg
dec
and
mov
sahf
loop
and
mov
dec
loope
add
ret
lahf
pop
sub
xlat
call
lcall
sub
lds
mov
int
jb
das
ret
or
cli
dec
outsl
scas
stos
data16
shrb
sub
push
mov
or
repnz
std
xchg
lret
inc
lret
or
mov
aas
daa
push
les
ja
vsqrtss
inc
pusha
dec
dec
jg
clc
add
mov
sub
mov
xor
movl
pop
mov
mov
sub
arpl
push
sbb
and
inc
in
pop
or
aam
xor
sbb
xchg
int
and
jae
stos
in
xor
push
cmpsl
sub
dec
addr16
mov
jmp
outsl
xorb
rcrb
andb
scas
add
cltd
aas
fadd
fsub
jnp
imul
xchg
jbe
es
mov
mov
mov
dec
fadds
call
xchg
mov
fwait
mov
adc
jo
push
cmpsl
ja
jnp
inc
add
mov
les
es
popa
add
lods
xorl
in
divb
push
testl
jnp
and
aas
xchg
mulb
outsb
push
push
sub
xchg
repnz
nop
int3
cli
jo
pop
lock
jnp
daa
mov
stos
mov
pop
mov
sub
imul
add
cltd
push
mov
insl
jnp
cmp
daa
mov
adc
loope
add
add
add
add
xor
add
decl
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
or
add
adc
add
or
add
and
add
or
add
add
add
add
add
add
add
add
push
popa
add
test
add
clc
xchg
add
add
add
add
add
or
add
mov
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
push
sub
sub
xchg
xchg
xchg
add
lods
scas
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
stos
mov
mov
lcall
jge
add
add
xchg
xchg
add
mov
inc
mov
ret
lret
lret
int3
rcl
in
rcl
shl
iret
iret
shl
int
int
leave
mov
out
in
mov
mov
lods
lods
lods
lea
fwait
cltd
and
jne
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
lahf
add
mov
jae
mov
out
leave
leave
not
rcl
cld
xlat
xlat
std
xlat
xlat
fdivr
fdivr
aam
rcl
sar
int3
int
aam
rcl
sar
ret
std
mov
mov
lods
iret
mov
mov
and
add
push
add
add
add
add
add
add
add
add
stos
lods
lods
add
lods
lods
sbb
mov
jnp
mov
mov
dec
lret
lret
dec
iret
sar
aad
aam
fdivr
xlat
call
aam
int
int
int
int
aad
dec
int
mov
mov
mov
std
cmpsl
cmpsl
test
xchg
xchg
xchg
mov
push
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
push
add
dec
add
push
add
push
or
inc
or
sbb
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
leave
dec
int
call
rcl
fcom
xlat
fcom
call
aam
dec
int
dec
lret
int3
int
inc
mov
mov
mov
test
cmpsl
jmp
cltd
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
popa
or
imul
pop
pop
pop
fs
sbb
das
or
sbb
xor
cmp
aaa
cmp
and
adc
pop
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
inc
leave
call
rcl
call
aad
call
aam
call
iret
sar
enter
mov
inc
ret
mov
mov
ljmp
movsl
movsb
pushf
pushf
pushf
xchg
cwtl
cwtl
lcall
addb
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jo
jle
jge
jge
jg
jno
jno
arpl
mov
cmp
cmp
inc
inc
inc
mov
outsl
outsl
outsb
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
movsb
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
lret
lret
leave
dec
enter
ret
mov
mov
ljmp
mov
cltd
call
xchg
cwtl
cwtl
cwtl
fwait
lcall
ds
push
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
jo
outsb
add
pop
or
pusha
xchg
lea
incb
jnp
idivb
jp
outsl
jo
out
addr16
je
jae
jle
jg
jp
js
arpl
inc
inc
inc
cmp
sbb
sbb
prefetch
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
test
lcall
xchg
incl
addb
xchg
xchg
xchg
sahf
mov
mov
mov
js
jp
xor
das
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
addb
in
mov
mov
addl
mov
mov
jge
jo
jno
jae
jne
jle
jle
addl
xchg
addr16
cmp
and
jg
cmp
mov
test
icebp
lods
stos
lods
sti
lods
stos
lods
lods
lods
stos
test
stos
std
movsb
movsl
mov
xchg
xchg
xchg
decl
jg
jp
js
jnp
jnp
xchg
xchg
mov
mov
sti
mov
mov
mov
mov
mov
lods
scas
stos
xchg
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
movsb
cmpsb
out
scas
mov
xchg
nop
xchg
incl
xchg
std
xchg
xchg
xchg
std
xchg
cwtl
cwtl
stc
xchg
xchg
xchg
in
mov
or
mov
mov
getsec
rdmsr
inc
inc
inc
dec
insl
insl
imul
test
lcall
out
cltd
fwait
lcall
mov
mov
mov
lea
cltd
jmp
lods
lods
mov
mov
mov
mov
mov
std
mov
mov
movsb
movsb
movsb
addr16
jnp
lods
test
add
pop
adc
test
mov
incl
xchg
decb
xchg
sahf
sahf
sahf
std
mov
mov
xchg
in
nop
in
xchg
push
jne
or
add
or
dec
dec
dec
data16
jno
mov
xchg
rclb
xchg
xchg
std
mov
xchg
call
sahf
lahf
jmp
test
pushl
movsl
scas
mov
xchg
test
std
ret
xchg
scas
mov
mov
ljmp
mov
add
pop
pop
adc
scas
mov
les
pushf
decl
mov
nop
nop
decl
xchg
xchg
pushf
popf
pushf
mov
test
movsb
mov
xchg
fstpt
jl
push
push
push
outsl
dec
dec
dec
pop
pusha
arpl
jb
mov
jge
test
mov
mov
xchg
testl
lea
jmp
mov
mov
pop
mov
xor
jbe
mov
cmpsb
mov
mov
mov
stos
lods
lods
mov
mov
add
shll
adc
mov
ljmp
popf
decl
nop
xchg
call
xchg
xchg
call
cwtl
cltd
lcall
mov
mov
movsb
stc
cltd
lcall
nop
nop
xchg
les
cltd
in
xchg
cwtl
out
lea
xchg
stc
xchg
test
std
xchg
jb
cltd
imul
ljmp
jnp
mov
jae
mov
outsb
ljmp
adc
lods
or
or
mov
jg
mov
mov
lods
pushf
movsb
mov
mov
add
pop
pop
adc
mov
ljmp
popf
call
xchg
xchg
lcall
popf
popf
lcall
sahf
popf
lcall
xchg
xchg
decl
xchg
xchg
call
cltd
cld
cwtl
cltd
sahf
stc
mov
xchg
pushf
cld
sahf
mov
xchg
push
xchg
push
jge
xchg
dec
jp
fwait
je,pt
cltd
sub
pop
addr16
mov
push
ljmpw
adc
stos
adc
lods
pcmpgtw
scas
adc
mov
imul
adc
mov
insb
mov
fwait
scas
mov
lods
lods
scas
movsb
movsb
mov
add
add
add
add
add
pop
pop
adc
mov
lds
pushf
call
popf
jmp
movsl
movsl
jmp
mov
xchg
decl
mov
decl
mov
lcall
xchg
dec
jp
xchg
jb,pt
xchg
cs
decl
adc
nop
or
call
add
lcall
jmp
sbb
pushl
pop
outsl
pushl
sbb
jae
mov
and
aas
cmp
xchg
scas
mov
scas
lods
mov
sahf
sahf
sahf
add
add
add
add
add
pop
pop
adc
lods
mov
shll
lcall
movsb
jmp
cmpsl
cmpsl
ljmp
test
lcall
mov
mov
mov
decl
sub
mov
pop
incl
add
incl
add
mov
pop
call
add
lcall
jmp
and
mov
jbe
mov
sub
inc
sub
les
inc
sub
cmp
xor
inc
lea
cld
mov
scas
lret
movsl
dec
mov
mov
add
add
add
stos
mov
push
adc
test
mov
mov
mov
test
lods
lods
lods
ljmp
mov
ljmp
mov
mov
mov
arpl
xchg
push
incl
pop
push
incl
add
addl
incl
add
mov
push
call
add
fwait
add
lahf
add
movsb
add
ljmp
sub
cmp
cmp
dec
cmp
call
cmp
mov
rorb
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
movsb
test
mov
mov
mov
test
ljmp
mov
pushl
mov
pushl
stos
lods
lcall
and
incl
adc
mov
pop
decl
or
xchg
push
decl
add
nop
add
xchg
add
popf
add
mov
add
lods
add
jb
ret
cmp
into
inc
call
inc
call
dec
nop
call
dec
xchg
call
dec
xchg
fisttpl
fmull
fsts
call
test
mov
mov
mov
sahf
sahf
or
add
add
add
add
dec
dec
adc
jp
movsl
lahf
mov
lcall
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
outsb
decl
sbb
decl
adc
pop
decl
add
nop
add
xchg
add
sahf
add
mov
add
test
pop
pushl
es
into
dec
mov
aad
xchg
call
push
lcall
pop
popf
ficoms
fistps
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
test
cmpsb
jne
mov
mov
add
add
add
inc
inc
adc
js
mov
mov
lahf
ljmp
mov
pushl
mov
mov
pushl
xchg
mov
call
and
xchg
and
call
sbb
xchg
or
nop
add
xchg
add
lcall
ljmp
add
mov
fs
mov
xor
fcomps
fstps
jmp
bound
in
cmpsl
jmp
data16
out
test
jmp
data16
call
test
mov
test
mov
sahf
mov
add
add
add
inc
inc
adc
jp
xchg
lcall
fwait
sahf
ljmp
mov
pushl
mov
mov
mov
mov
jg
xchg
sub
lcall
call
push
call
add
fwait
add
mov
add
stos
add
mov
pushl
adc
roll
fldt
jmp
jo
jmp
jno
call
jae
in
je
in
je
out
jne
out
je
out
je
jmp
mov
mov
test
lcall
sahf
add
jge
cmp
insb
outsb
js
mov
lcall
mov
mov
mov
mov
mov
mov
mov
movsl
scas
lcall
xor
sahf
cmp
mov
xor
cltd
sbb
call
add
lahf
add
movsb
add
add
mov
arpl
mov
gs
mov
sbb
fsts
jmp
jbe
jmp
jge
in
xorl
push
xchg
push
cmpl
call
mov
inc
mov
test
daa
sahf
mov
lahf
add
add
add
add
xor
pop
jne
jg
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
rol
rol
pushl
outsb
mov
fwait
cmp
movsb
inc
jl
movsb
inc
jge
mov
pop
arpl
xchg
add
popf
add
add
test
add
mov
fs
mov
add
shll
mov
in
mov
icebp
lea
push
xchg
ret
nop
nop
xchg
clc
mov
out
nop
mov
inc
ret
lods
stos
test
xor
pushf
popf
add
add
add
inc
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
xchg
mov
mov
mov
mov
mov
sar
ret
ret
mov
mov
jge
lcall
jg
lods
dec
test
mov
maxps
lcall
jmp
add
mov
fs
mov
add
leave
push
insb
call
xor
jmp
ja
out
xchg
ret
push
cltd
enter
push
lcall
cmc
pushf
leave
stc
sahf
int3
cld
lahf
int3
cld
lahf
into
cld
lcall
fidivs
cli
mov
mov
lahf
sahf
mov
add
add
add
xor
or
cmp
dec
jecxz
pop
pusha
decl
mov
mov
mov
sar
ret
mov
inc
enter
mov
lahf
lcall
push
mov
scas
push
mov
movsl
sub
fwait
push
pop
lcall
pop
ljmp
add
mov
add
leave
add
rorl
je
filds
in
mov
push
movsb
int3
push
movsl
int3
clc
cmpsl
int
sti
cmpsl
sar
cli
cmpsl
iret
sti
test
sar
test
sar
negl
lret
dec
leave
int3
std
mov
mov
mov
xchg
xchg
add
cltd
fwait
add
add
add
xor
sub
or
inc
bound
pop
xlat
jne
jb
mov
mov
ret
rol
ret
ret
vshufps
enter
ret
xchg
cmpsb
jmp
push
mov
lods
dec
xchg
lahf
sbb
lcall
add
stos
add
mov
fs
mov
add
int3
add
add
loopne
jge
in
pop
cmpsl
push
sahf
lret
scas
aam
cli
scas
cld
mov
cli
mov
mov
mov
std
mov
mov
pushl
sar
mull
call
enter
mov
fisubl
xchg
xchg
or
add
add
xor
add
dec
dec
ss
jo
xchg
cltd
lcall
xlat
jmp
xlat
fdiv
rcl
sar
lret
dec
leave
lret
lret
leave
dec
leave
lret
inc
leave
leave
mov
scas
ljmp
push
mov
lods
cmp
jmp
add
mov
arpl
mov
add
iret
add
add
loopne
jne
jmp
jb
cli
lods
aam
mov
mov
std
mov
xlat
cld
mov
fdivr
inc
fcos
mov
lret
jmp
mov
call
lret
mov
mov
xchg
or
add
add
xor
xor
add
add
pop
pop
pop
or
enter
jecxz
call
out
test
in
leave
fstp
fucom
fdivr
std
into
iret
sar
mov
push
cmp
sub
mov
add
mov
arpl
mov
add
lret
call
add
fildl
jne
in
ja
out
xor
cli
mov
loope
std
std
std
loopne
std
dec
dec
inc
fdivrp
dec
dec
loopne
sti
mov
leave
fmul
iret
mov
mov
xchg
adc
add
add
incb
std
incl
incl
repz
or
out
jmp
in
out
in
sub
out
in
dec
ljmp
xchg
out
out
jecxz
out
fucomi
ret
mov
xchg
cmpsb
cmp
movsb
adc
jmp
add
mov
mov
add
int3
add
add
fiadds
jbe
ljmp
cli
mov
jecxz
dec
in
std
into
in
dec
in
std
int
dec
jecxz
dec
loop
std
shl
std
shl
std
shl
std
shl
cli
ret
fdivr
in
mov
inc
ret
cmpsb
cmpsb
test
xchg
xchg
xchg
sbb
cltd
fwait
add
incl
incl
div
testl
repnz
repnz
out
repnz
pop
in
repnz
cmp
in
in
pop
loopne
lds
xchg
sti
sahf
and
lcall
add
add
mov
fs
add
enter
roll
jo
fiaddl
je
jecxz
jp
jmp
jge
negl
cli
mov
cld
shl
cld
iret
in
shl
call
call
aad
fsubr
call
fldl2e
cld
shl
push
aam
jecxz
leave
leave
lret
repz
xchg
xchg
and
xchg
xchg
add
sti
add
std
stc
add
cli
clc
add
div
or
shlb
mov
jae
negb
add
cmpsb
add
scas
add
mov
add
leave
add
add
fildl
jne
out
js
in
sbb
cld
std
fsubr
std
fldpi
fldpi
std
fucomp
fsubr
fucomp
std
fucomip
fucomip
jmp
in
std
shl
push
ret
aam
call
iret
iret
clc
lods
stos
lods
lods
xchg
xchg
xchg
outsb
jo
add
add
add
loop
add
mov
xchg
lods
jl
repnz
and
sahf
add
add
mov
mov
add
int3
add
aad
jno
filds
jae
ljmp
sti
nop
shl
fdivp
std
fucomp
fldl2t
fucomi
std
fsub
std
aad
shl
cli
shl
sti
iret
loopne
test
fdivrp
test
in
mov
xlat
sti
mov
mov
lcall
add
add
add
add
mov
mov
jmp
add
mov
arpl
mov
add
iret
add
xlat
add
loopne
jns
call
aaa
xchg
cld
xchg
cld
leave
loopne
cld
lret
loop
cli
clc
mov
sar
repnz
iret
push
mov
int
call
mov
iret
std
ljmp
imul
fneni(8087
cmc
fsubrp
mov
mov
xchg
add
add
add
into
int3
add
shrb
loopne
ss
mov
add
mov
gs
mov
add
int3
pop
jo
rorl
je
ficoml
js
loopne
cmp
call
scas
lret
ljmp
std
loop
ret
cld
fildll
neg
mov
leave
ljmp
iret
fsubp
rcl
shl
xlat
fcmovnb
out
loopne
jmp
call
popf
jmp
lret
lods
lods
stos
adc
cmpsb
cmpsb
cmpsl
add
ret
mov
ret
ret
sahf
stos
aam
dec
cmp
sbb
cmpsb
sbb
jo
mov
js
mov
inc
xchg
ret
stc
leave
gs
test
mov
out
mov
mov
leave
lret
lret
rcl
int
aam
shlb
fcom
jg
jb
loopne
gs
jecxz
call
in
jmp
repnz
cmc
sub
div
and
lock
sbb
fstp
or
mov
into
add
add
add
roll
roll
mov
test
push
lock
jne
ljmp
mov
sarb
test
mov
pushf
leave
ror
int3
leave
int
ror
into
addr16
iret
rclb
rcl
dec
aam
inc
rcr
aam
fcmovnu
daa
fistpl
fneni(8087
ficoms
fucom
jecxz
loope
in
out
ljmp
cld
testb
cld
add
incl
incl
mov
mov
shrb
mov
mov
mov
scas
xchg
mov
mov
mov
mov
rcll
les
mov
daa
lret
ror
and
aam
sbb
aad
adc
aam
rcl
push
rcr
xlat
add
add
add
in
add
in
jmp
lret
fcom
add
incl
mov
mov
add
rol
ret
sub
mov
mov
push
rol
or
enter
mov
add
aam
add
fcom
add
add
xlat
aad
aad
xlat
add
fabs
add
fildl
loopne
loopne
in
call
add
incb
std
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
ret
mov
mov
mov
mov
test
test
and
add
add
add
add
add
add
add
add
mov
mov
aam
iret
into
jmp
aam
cmc
rcl
sar
rcl
into
cli
lret
lret
int3
stc
int3
lret
mov
mov
lods
fwait
xchg
xchg
xchg
dec
ds
cmp
sbb
add
adc
add
push
add
add
addb
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
cld
iret
ror
xlat
call
dec
rcl
dec
into
int
int3
int3
lret
inc
rol
mov
stos
stos
icebp
cltd
cltd
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jae
jae
jne
fs
dec
inc
inc
cmp
sub
sub
aaa
aaa
xor
dec
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
dec
int3
int3
call
rcl
call
rcl
dec
int3
lret
inc
mov
pushl
test
sahf
cwtl
xchg
xchg
jmp
jo
xchg
pop
pop
adc
xor
add
add
add
add
addl
subl
imul
push
push
push
stos
push
insl
insb
push
pop
pop
cmp
aaa
cmp
outsl
jo
adc
mov
fstpt
mov
sar
mov
mov
mov
ljmp
lcall
xchg
xchg
xchg
fwait
fwait
cltd
out
test
wrmsr
add
add
add
add
add
pop
cltd
fwait
fwait
add
popf
cwtl
cltd
fcoml
addl
jmp
jns
sarb
jns
jp
jnp
jb
jb
push
push
push
cmp
aaa
pushf
popf
pushf
mov
lods
lods
rep
scas
scas
sti
lods
scas
scas
std
cmpsl
test
std
popf
popf
sahf
call
test
call
mov
lods
jmp
scas
scas
leave
cmpsb
movsl
movsb
cltd
je
je
adc
adc
add
add
add
add
insl
outsl
outsl
pop
xchg
mov
loop
cltd
popf
incl
mov
sti
xchg
xchg
xchg
lock
nop
fimuls
mov
jp
pop
and
inc
inc
dec
jo
outsl
orl
cltd
cltd
repnz
xchg
xchg
std
mov
mov
xchg
xchg
xchg
lcall
movsb
test
std
mov
scas
mov
mov
mov
movsl
mov
addb
add
add
add
add
pusha
or
lods
mov
cmpsl
sahf
movsl
decl
mov
cwtl
xchg
cwtl
std
lahf
lahf
mov
negl
addb
push
pop
push
outsl
imul
jle
subl
xchg
lock
mov
lcall
mov
mov
xchg
mov
mov
mov
jge
mov
scas
stos
insl
stos
stos
stos
or
add
add
add
add
pusha
or
mov
in
mov
xchg
call
xchg
xchg
lcall
cltd
fwait
cltd
pushf
lcall
xchg
xchg
jmp
xchg
mov
jecxz
orl
cld
xchg
pop
cmp
dec
jl
movsl
inc
jp
lods
xor
jb
mov
outsl
ljmp
sbb
mov
scas
mov
scas
scas
mov
mov
add
add
add
add
pop
or
mov
in
movsl
test
cltd
xchg
cltd
lcall
mov
mov
decl
orl
xchg
jb
cld
cwtl
pop
cmp
dec
js
cmp
xchg
sub
xchg
sbb
call
or
ljmp
pushl
sbb
mov
and
mov
test
scas
xchg
sahf
lahf
sahf
adc
add
add
pusha
popa
pusha
or
mov
stos
movsb
test
mov
cmpsb
cmpsb
ljmp
test
lcall
pop
jnp
mov
push
mov
decl
adc
or
mov
push
decl
add
popf
add
test
arpl
mov
jae
mov
jl,pn
les
jg
xor
lret
xor
inc
test
divl
test
sbb
add
add
pop
pusha
popa
or
movsl
test
cmpsl
mov
cmpsb
pushl
mov
pushl
mov
decl
orps
xchg
push
incl
add
mov
push
call
add
add
mov
outsb
inc
cmp
rolb
roll
call
inc
xchg
fiaddl
call
arpl
stc
mov
mov
mov
std
add
add
add
pop
or
mov
ljmp
mov
pushl
mov
ljmp
push
jl
mov
call
adc
pop
call
add
lahf
add
add
scas
add
and
rorb
fcoms
ficompl
fistps
loop
mov
jmp
insb
cmpsl
dec
cmpsb
mov
ret
movsl
xor
add
add
dec
pop
jge
jnp
fwait
xchg
cwtl
jecxz
mov
scas
pushl
mov
mov
lcall
sub
lcall
and
xchg
push
pop
call
add
cmpsl
add
scas
add
or
lret
xor
jmp
insl
test
in
stos
jmp
jo
in
jb
call
test
std
mov
test
inc
cmpl
add
dec
pop
outsb
insl
imul
test
fwait
cltd
xchg
pushl
mov
mov
mov
jne
lcall
cmp
pushf
sub
cwtl
or
lcall
pop
ljmp
add
ret
or
call
dec
xchg
jmp
jp
ljmp
push
test
push
xchg
fldt
mov
push
lcall
add
sub
push
push
dec
pop
pushw
mov
mov
mov
mov
ret
inc
mov
sahf
jmp
inc
cmp
lcall
ljmp
add
mov
adc
mov
push
xchg
ret
push
xchg
xchg
enter
leave
stc
lcall
jecxz
vcmpss
popa
lahf
mov
add
xor
add
pop
pop
pop
fisttpl
mov
mov
rol
mov
cmpsl
jmp
dec
test
mov
add
pusha
pushl
add
lret
fsubs
cmp
jp
push
mov
iret
stc
test
iret
cld
stos
sar
cld
lods
sar
cli
test
call
mov
stos
jne
pushf
popf
or
add
add
dec
dec
push
aaa
jb
je
stos
test
into
out
into
int
leave
int3
lret
sti
enter
enter
mov
mov
stos
bound
jmp
add
mov
arpl
ret
dec
add
flds
jbe
jmp
xchg
sti
mov
std
mov
fdivr
mov
std
mov
sar
jmp
lret
rol
scas
scas
scas
mov
add
add
add
add
pop
or
rcl
dec
loopne
loop
loopne
loope
fcmovnu
fadd
aam
out
shlb
cmpsl
sub
pusha
ljmp
add
enter
xlat
add
or
push
mov
sti
loope
std
enter
loopne
dec
loopne
dec
loopne
sti
lock
lret
divb
sahf
sahf
sbb
add
add
incb
std
std
add
ljmp
in
in
jmp
ljmp
xchg
mov
mov
mov
add
mov
inc
add
iret
add
faddl
jne
call
outsb
mov
cld
sti
shl
shl
shl
call
out
xlat
out
std
xlat
call
push
fcos
fmul
sar
mov
mov
add
std
incb
incl
std
std
pop
aam
aam
mov
pop
mov
popf
or
ljmp
add
add
rolb
jno
loopne
ja
out
and
shl
fucompp
std
fsubr
cld
xlat
jmp
sti
fld1
cld
xlat
call
push
jmp
rcl
sti
mov
popf
sahf
das
add
add
into
into
into
or
bound
stos
add
mov
add
add
loopne
jns
out
xor
cli
lret
loopne
cli
lret
test
repz
icebp
ret
aad
out
ret
in
aad
out
in
aam
jecxz
fucomp
mov
test
add
add
add
aam
push
mov
je
push
gs
mov
insb
inc
pop
jb
int3
and
sub
sti
loopne
lcall
mov
out
in
leave
jmp
fnstsw
leave
ffreep
iret
mov
in
fcompl
out
call
rorl
mov
add
stos
lods
lods
add
xchg
mov
ljmp
xchg
fidivrl
andb
int
mov
iret
mov
nop
sarl
int
aam
iret
pop
rcl
iret
dec
fcomp
fnstcw
fsubp
fildll
in
fsubl
loop
lock
jmp
or
std
incl
std
incb
mov
mov
outsb
mov
stos
jns
mov
mov
mov
mov
xor
enter
rcl
rclb
sarb
or
loope
or
into
int3
add
incl
incl
fwait
cltd
lcall
or
into
int
add
std
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
ret
enter
mov
enter
ret
mov
mov
stos
lods
lods
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
stos
stos
lods
add
mov
enter
sar
aam
aad
rcl
sar
iret
int
std
vshufps
mov
in
test
jle
sbb
push
add
add
add
add
add
add
add
add
jae
jno
addr16
inc
dec
das
cs
inc
inc
inc
and
add
add
mov
mov
cmpl
ret
into
into
call
rcl
dec
into
iret
inc
enter
mov
lods
lcall
mov
push
add
add
add
add
je
je
xchg
aad
jo
ret
bound
outsb
outsl
outsb
jb
pusha
popa
cmp
pop
sbb
mov
in
mov
mov
mov
lods
stos
lcall
xchg
xchg
lcall
cltd
cltd
lds
jno
es
add
add
add
add
jb
jae
fwait
xchg
pushf
mov
test
clc
xchg
test
test
push
push
dec
dec
inc
mov
pushf
into
movsb
mov
mov
decb
mov
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorl
cmpsl
test
cmpsb
cld
mov
mov
xchg
xchg
xchg
cld
pushf
sahf
sahf
cmc
cltd
cltd
cltd
in
test
push
imul
jle
lea
testl
mov
mov
jno
mov
lods
scas
push
stos
lods
stos
add
add
add
test
test
xchg
xchg
xchg
call
cltd
fwait
lcall
cltd
lcall
mov
loope
jbe
out
xchg
arpl
std
lcall
ljmp
and
mov
insb
pushl
pushf
lods
lock
mov
imul
into
add
test
pop
lods
movsb
stos
test
sahf
sahf
lahf
jmp
movsb
call
push
decl
jb
lea
imul
push
arpl
xchg
adc
xchg
or
mov
push
outsb
pushl
es
shlb
inc
aas
xchg
rcrl
subl
je
push
mov
mov
test
mov
mov
mov
mov
mov
sub
decl
or
xchg
push
decl
add
mov
adc
shlb
dec
inc
mov
inc
call
dec
xchg
dec
cwtl
mov
mov
mov
mov
add
add
imul
movsl
lahf
movsb
cld
lods
lods
scas
pushl
mov
mov
call
push
pop
decl
add
mov
add
mov
push
xchg
fcompl
fistps
jmp
pop
movsl
jmp
data16
call
lcall
cmpsb
test
pop
add
add
arpl
adc
popf
fwait
lcall
mov
mov
lcall
xor
cwtl
and
call
add
stos
add
mov
push
jmp
outsb
stos
jmp
jnp
push
jl
out
jg
fstps
mov
and
add
add
adc
addr16
mov
mov
mov
mov
ret
ret
mov
arpl
jmp
add
ljmp
add
ret
fisttpl
in
lea
push
xchg
clc
cwtl
leave
clc
xchg
enter
mov
movsb
sub
aas
inc
inc
adc
push
xchg
mov
mov
inc
mov
cwtl
ljmp
pop
push
pushl
imul
adc
in
outsb
scas
clc
test
clc
stos
iret
cli
lods
sar
cld
scas
sar
cld
lods
sar
in
mov
inc
mov
movsb
ds
std
add
xor
jno
scas
mov
mov
aam
mov
aad
rcl
shr
lret
enter
mov
jmp
arpl
les
imul
out
xchg
testl
inc
fdivr
std
rcr
std
ret
icebp
mov
ret
cmpsl
cmpsl
dec
cmpl
add
jmp
or
call
out
outsb
fldenv
movsl
daa
outsb
ljmp
add
lret
faddl
cld
mov
cld
iret
in
call
out
std
shl
call
out
std
shl
push
leave
fdivr
aad
int
lods
scas
scas
popa
jg
jg
std
incl
std
incl
int
shrl
lahf
sbb
lods
add
mov
add
loope
jns
cmc
push
cmpsb
cld
loope
jmp
aad
std
aam
cli
aam
push
fdivr
fcmovne
shl
mov
mov
xchg
xchg
xchg
pop
ret
ret
ret
adc
mov
add
mov
or
ficomps
jg
ljmp
cli
in
mov
iret
bnd
ret
shl
out
rcl
jmp
fcmovu
scas
ret
lcall
rol
or
pushf
stos
xchg
and
ret
int3
int3
ja
mov
xlat
mov
lret
adc
int
fmul
iret
pop
dec
in
loope
out
out
in
in
out
sbb
rol
add
mov
cmp
mov
scas
push
mov
mov
les
sbb
bswap
int
or
aad
push
incb
jg
addb
std
add
add
add
rol
std
add
std
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
std
adc
xchg
sub
arpl
dec
mov
rcl
repz
rclb
icebp
mov
fidivs
push
cld
xchg
scas
mov
sbb
and
iret
push
pop
push
xchg
jae
cmc
movsb
mov
pop
in
jl
testl
lds
mov
jp
mov
add
inc
push
pop
mov
gs
xchg
mov
xor
call
or
cmp
adc
outsl
push
mov
lea
in
mov
push
add
jno
lret
xchg
icebp
mov
test
xsha256
cmpsb
push
std
push
popf
cmp
mov
mov
fsubrl
push
hlt
pusha
mull
inc
jle
js
movsl
cmp
cltd
pushf
xor
ret
pop
or
mov
js
inc
fsubrs
jge
xchg
scas
xchg
testb
out
stos
sbb
cmp
push
cmp
leave
push
pop
lock
mov
mov
bndstx
and
add
pop
test
ds
and
outsl
and
push
nop
inc
fcmove
jae
out
mov
sbb
dec
lods
jg
fists
mov
es
fldcw
mov
test
jmp
adc
aas
pushf
xor
push
lods
js
mov
lret
into
gs
xchg
out
push
out
mov
outsb
add
cmp
pop
mov
nop
pop
mov
push
mov
lahf
fnstsw
mov
int3
std
push
push
lds
stc
nop
shlb
dec
jecxz
adc
iret
inc
subb
fs
in
xchg
aad
pop
pop
mov
or
sub
sub
les
pop
mov
pop
dec
loope
mov
es
push
inc
xor
push
push
jmp
inc
movsb
cmp
jb
xchg
ret
notl
ja
dec
scas
insl
pusha
mov
ja
andl
push
clc
lahf
xchg
sub
sbb
mov
and
sti
xchg
mov
les
in
xor
mov
or
sub
jae
pop
sub
mov
dec
ffreep
or
mov
jecxz
std
adc
aaa
mov
add
mov
xor
xchg
sub
jbe
mov
mov
adc
in
inc
add
arpl
fsubr
orl
sub
lahf
pop
sti
jmp
sub
dec
or
add
stc
push
repz
fsubl
arpl
jbe
sahf
xor
leave
sbb
ss
cmp
stc
nop
hlt
nop
adc
stc
nop
adc
ss
scas
addr16
xor
or
ficoml
or
sub
mov
inc
in
es
into
gs
lods
inc
add
in
orl
mov
stos
ljmp
mov
std
push
inc
fldl
mov
inc
ret
stc
hlt
dec
mov
sbb
mov
ss
push
out
inc
cli
xchg
jae
fdivl
xchg
sbb
xchg
out
int
mov
scas
out
push
jmp
or
into
cmp
push
in
mov
nop
daa
shrd
fbstp
scas
inc
bound
xchg
sub
or
mov
mov
test
ljmp
sub
lahf
pop
cli
in
subl
mov
jle
inc
lahf
sub
push
icebp
inc
frstor
jae
sbb
lahf
ss
xchg
sbbb
sbb
aaa
sbb
jae
cmp
xchg
repnz
jae
adc
mov
loope
xchg
adc
into
xchg
xor
scas
push
mov
cmp
pop
inc
fimull
xchg
xor
sarl
mov
sub
rol
jns
pop
add
pop
xchg
insl
add
ret
hlt
mov
pop
jecxz
mov
push
jmp
xchg
shrl
ret
repz
repz
nop
sarl
xchg
das
js
pop
popl
lcall
jne
popf
cs
in
pop
mov
jbe
lds
int
push
pop
icebp
pop
mov
xchg
fbstp
and
push
call
scas
rcr
je
iret
in
std
sub
xor
int
push
jns
xor
iret
dec
in
ret
jecxz
cmc
sbb
push
inc
insb
push
lods
cltd
gs
xchg
mov
sbbb
adc
lret
rcrl
ja
cwtl
popa
fbstp
mov
std
xchg
in
ds
outsb
inc
mov
jne
cmc
mov
test
mov
and
stos
pop
push
daa
mov
add
je
dec
pop
push
in
mov
adc
lret
and
lods
inc
mov
jne
or
jo
dec
pop
shrl
cwtl
rcrl
mov
dec
dec
xor
test
sbb
or
jge
and
fisubl
es
dec
sub
jge
jns
rep
scas
inc
xchg
cs
dec
iret
data16
xchg
sub
lods
sub
scas
inc
push
mov
pop
scas
popa
cmp
push
rcrl
push
out
hlt
cmp
popf
xor
mov
cltd
xor
cmp
add
lds
clc
inc
mov
je
pop
mov
fwait
xor
dec
movsl
cmp
sbb
dec
stos
dec
in
fsubrl
push
inc
fiadds
and
adc
add
add
add
and
xchg
sub
sbb
sub
sti
test
sub
cmpsb
scas
rep
cmp
jns
mov
sub
out
cld
mov
fsubrl
jg
push
scas
or
mov
mov
leave
pusha
add
notb
mov
fs
outsb
jno
lahf
push
es
popl
cwtl
mov
outsb
dec
out
sbb
jl
fucomp
jg
push
out
xchg
xchg
sti
xchg
leave
jecxz
data16
jbe
add
xor
hlt
mov
pop
stc
nop
mov
push
cmp
iret
sbb
xchg
or
jne
sbb
mov
add
scas
push
call
xchg
icebp
pop
and
xor
into
in
jne
and
je
out
pop
sahf
sbb
adc
inc
and
mov
enter
push
ljmp
jp
xor
or
pushf
xor
push
aam
addb
push
xor
cld
sub
xor
xchg
mov
ss
dec
or
inc
fwait
aaa
into
shlb
add
icebp
push
in
es
xchg
sub
push
inc
xchg
scas
mov
fdiv
xchg
out
bound
mov
cltd
in
repnz
mov
loop
add
lahf
outsl
cmp
mov
loop
pop
fistpll
fsubrs
mov
push
jecxz
insl
and
mov
xor
in
popa
clc
and
popf
jnp
jecxz
cs
xchg
fdiv
shrl
inc
insl
jb
xor
sub
repz
icebp
jns
and
or
imul
jnp
aad
and
pop
cs
adc
es
sub
testl
dec
das
jl
fdivl
cmpsb
inc
xchg
sahf
xor
test
daa
mov
cmp
enter
lea
iret
adcl
out
pop
call
adcl
rcrb
scas
lea
cltd
jnp
add
gs
out
mov
and
sbb
jns
aaa
into
mov
fistpll
rorb
fsubrs
xor
dec
js
mov
fidivl
shrl
rolb
or
push
fidivs
ja
stos
movsb
jbe
rol
dec
mul
cmpsb
mov
dec
xor
lahf
gs
or
ret
xchg
lods
hlt
fnstenv
dec
dec
sub
xchg
xchg
cs
fisubrl
lds
bswap
gs
pop
testl
fcmovbe
les
std
inc
sub
jno
dec
stos
inc
addl
lock
or
adc
sub
mov
jge
ds
sahf
fsubr
iret
lret
sub
std
lock
and
fsubr
push
inc
push
and
mov
les
push
push
adc
testl
les
inc
ficoml
add
cmc
mov
data16
lea
scas
inc
loopne
inc
fmuls
push
xor
aaa
das
pop
negb
gs
sub
push
in
pop
out
aam
and
push
pop
push
xchg
stos
rorb
mov
cmpsl
sbb
dec
push
jns
nop
lods
iret
mov
je
push
push
lret
sti
leave
stc
nop
sti
sbb
jle
xor
lock
les
sbb
repnz
inc
lock
sub
cli
jl
insl
testl
xor
jle
or
mov
sti
push
sbb
mov
or
test
or
xchg
inc
mov
gs
movsl
jbe
mov
jbe
shrb
mov
stc
js
mov
dec
bound
add
repz
or
ds
and
jmp
xor
and
add
pop
xor
xchg
jne
leave
repz
mov
negb
mov
sbb
xchg
mov
gs
lahf
test
push
and
xchg
ret
int
cmpsl
mov
std
repnz
cltd
aam
js
xor
dec
cmp
fsubr
cmc
jbe
and
shll
lds
cld
push
mov
or
test
imul
scas
add
pushf
insb
dec
pop
mov
in
cmp
loop
xor
mov
jae
movsl
in
fstl
jg
dec
lahf
adc
push
mov
into
adcl
xchg
or
inc
je
sti
jle
lock
xor
jle
call
lahf
insl
adc
xor
imul
arpl
insl
inc
adc
loop
mov
mov
push
xchg
loope
ficoms
lea
in
sbb
rcl
push
mov
jbe
push
addr16
iret
sub
fisttpl
mov
mov
cmpsb
sbb
sub
int
cmp
popa
dec
sti
sar
jns
pop
movsl
int
push
jmp
push
inc
stos
and
stos
xor
xchg
dec
icebp
movsl
loope
mov
jbe
push
jne
loopne
lcall
sbb
or
nop
ds
sbb
mov
pop
push
test
pop
lods
cmpsl
push
mov
mov
or
cmp
stos
call
cmp
icebp
inc
sbb
jae
fnstcw
add
jb
push
popf
and
push
cmpsb
std
outsl
push
jne
lods
xchg
add
lcall
pop
jecxz
mov
adc
movsb
pop
popf
xor
push
arpl
xor
mov
xchg
rcrl
add
fidivrs
incl
mov
xchg
lcall
aas
cmp
scas
push
adc
jge
jmp
xor
repnz
adcl
cmp
in
data16
idiv
jb
pop
enter
and
xchg
fisubrl
cs
fwait
and
xor
push
dec
cmc
push
scas
loopne
mov
cmpsb
gs
or
xor
jno
ss
in
xlat
cli
data16
dec
jns
addb
mov
sbb
pop
xor
inc
fldcw
mov
sti
leave
int
add
adc
xor
adc
mov
rol
mov
call
jo
mov
push
out
or
xchg
add
push
mov
or
enter
inc
jmp
movsb
cmp
push
scas
or
mov
jo
sbbb
and
in
lods
inc
and
insl
add
dec
fidivs
ret
in
cld
xchg
ret
or
sbb
lods
cmp
iret
dec
xchg
push
in
xchg
rolb
jno
je
mov
and
sub
xor
and
push
call
out
mov
sbb
or
test
mov
mov
push
out
sar
lret
bound
sbb
inc
sub
adc
data16
push
std
pop
sahf
jnp,pt
sbb
fisubl
lret
mov
xor
popa
clc
stos
pop
shrl
ret
jg
cmp
pop
mov
outsb
lcall
mov
dec
loope
push
call
call
testl
imul
pop
lea
and
jp
pop
hlt
les
add
fdivrp
xchg
and
mov
sahf
dec
sbb
jae
test
roll
xchg
pop
mov
pop
out
pop
xlat
aad
mov
jbe
cwtl
loopne
mov
lahf
les
mov
aad
sub
jb
dec
dec
loop
jge
nop
xchg
ja
add
xchg
fiadds
ss
mull
jmp
arpl
or
nop
daa
aas
add
xchg
jns
mov
xor
sar
addl
or
gs
mov
lods
lea
int3
mov
stc
cmc
in
outsb
pop
pop
inc
fcomps
add
js
pop
divb
and
enter
std
loope
xor
push
dec
in
adc
add
fsubrs
fisttpll
lea
aad
stos
cld
xlat
outsb
in
push
xor
cmpsb
or
cltd
mov
int
mov
dec
outsl
push
mov
ret
cmp
dec
loope
fldcw
call
add
jle
dec
add
popf
inc
bound
mov
mov
leave
sub
in
inc
dec
loop
cmpsl
jnp
clc
xchg
imul
in
mov
inc
push
mov
cmp
cmp
pop
mov
int3
loop
pop
push
and
inc
pop
xor
lahf
outsb
push
mov
mov
cmp
in
jle
push
push
pop
repnz
das
pushf
xor
jb
adc
xchg
sarl
pop
test
shrl
inc
and
jne
add
pop
cmpsl
pop
mov
inc
push
jmp
jmp
aam
fiadds
repnz
push
mov
adc
idivl
das
xchg
int
jae
mov
ljmp
jge
lahf
sbb
mov
adc
jp
xor
mov
repz
fisttpll
and
jnp
fimull
add
cltd
xor
fidivl
ds
jbe
jl
js
pop
popf
addb
je
shlb
xchg
adc
hlt
xor
lds
pop
or
repnz
sub
jle
jns
pop
cwtl
dec
loopne
jbe
cs
out
push
mov
call
adc
jnp
push
movsb
cmp
add
add
stos
push
sub
ja
jge
leave
fsubrl
mov
stc
enter
and
adcb
dec
cmp
js
sahf
xor
or
jbe
pop
ror
popa
mov
shr
jg
mov
mov
fcoml
cmpsl
sbb
adc
push
inc
xlat
add
cmc
mov
push
sub
jl
cltd
inc
mov
xor
pop
cmpsb
cmp
daa
mov
pop
loope
pop
add
jecxz
fwait
sub
mov
mov
pop
mov
lret
pop
ds
cmp
jb
pop
repz
fdivrs
leave
outsb
js
ret
das
adc
testb
add
ja
movb
mov
xchg
mov
fs
add
sbb
add
cs
aas
xchg
nop
daa
gs
pop
out
mov
jbe
adc
arpl
xchg
mov
mov
ret
scas
sub
or
add
out
test
popa
clc
sub
mov
push
shrl
sbb
dec
fildll
lods
inc
xor
pop
lret
pop
test
outsb
mov
scas
jle
mov
and
aam
mov
stc
mov
repnz
fsubrs
out
and
cmpsl
aaa
pop
mov
mov
lods
inc
mov
fxch
bound
push
data16
nop
or
mov
mov
fsubs
fldcw
ret
dec
ss
push
insb
insb
add
jl
xchg
sbbl
mov
cmp
cmp
pop
daa
xchg
pop
repnz
inc
out
jns
das
outsl
repz
dec
mov
popf
sbb
mov
mov
aas
test
enter
dec
in
ss
inc
or
add
mov
int3
and
pop
xlat
inc
xlat
add
outsb
push
sub
popa
jg
mov
jl
sti
cmp
mov
adc
xor
cmp
push
lret
ret
ftst
xlat
outsb
add
imul
sub
mov
mov
dec
jnp
stos
bound
lds
dec
out
dec
out
adc
imul
lds
call
jno
sbb
add
icebp
sub
enter
stc
loope
loope
adc
incl
lds
xchg
mov
aam
cwtl
sti
fdivl
mov
xchg
in
sbb
aaa
add
jnp
adc
in
lods
xor
inc
push
cltd
xor
push
in
push
mov
dec
ds
add
data16
cwtl
adc
xorb
rcrb
es
dec
ds
fildl
push
out
xlat
push
stc
xchg
icebp
test
mov
mov
xor
inc
aas
mov
jbe
fcmovu
jno
in
test
daa
clc
jo
or
int3
lcall
sti
xor
repz
push
in
insl
sbb
cmp
jno
scas
cmp
es
scas
inc
xchg
int3
arpl
sahf
in
cmp
ljmp
sbb
dec
outsl
ss
popa
push
out
xchg
pmulhuw
push
stos
ret
jge
inc
push
loopne
xchg
test
arpl
fsubr
xor
pop
or
mov
daa
mov
cmp
inc
fcoml
popa
push
cli
inc
push
xchg
scas
cmp
mov
ret
pop
sbb
cmp
push
pop
lret
cmp
test
cmpsb
or
js
shl
lock
sub
dec
fildll
les
xchg
mov
test
jo
test
cltd
mov
cmp
fdivs
pop
sub
into
gs
fbstp
sahf
clc
pop
push
std
xchg
lcall
mov
lock
icebp
cmp
or
fs
andb
out
pop
stos
sbbb
jb
or
jnp
aaa
mov
fisubrl
dec
clc
fmul
arpl
adc
mov
movsb
adc
arpl
mov
ljmp
sbb
mov
test
mov
jae
inc
fsubl
iret
arpl
add
lret
bound
xchg
aam
lahf
ss
sbb
pop
jbe
mov
dec
arpl
or
es
fidivrl
sbbl
je
and
mov
mov
add
or
jo
sub
in
inc
nop
mov
fisubrl
adc
add
mov
fistl
test
fisubrs
pop
repz
sti
xchg
cs
addr16
xor
dec
adc
adc
mov
xchg
push
mov
test
cmp
cmp
jmp
push
in
fsubrl
xor
sbb
xchg
sub
ds
imulb
test
mov
mov
xor
add
jle
xor
testl
shrb
pop
pop
pop
and
mov
ds
or
mov
sti
cmp
lret
add
mov
dec
scas
sub
mov
push
iret
dec
jmp
jcxz
add
ds
cmp
pop
arpl
gs
lea
rcll
int3
xchg
mov
fistpl
mov
xchg
sbb
dec
les
dec
inc
test
cmp
sarb
sub
jnp
scas
movsb
or
xchg
popa
or
dec
aas
pop
and
or
aad
mov
pop
mov
inc
gs
addl
dec
mov
pusha
or
mov
sub
jbe
dec
imul
loopne
mov
jle
mov
inc
xor
aad
push
sub
adc
shlb
sbb
icebp
fisubs
aad
sti
testl
aaa
insb
mov
paddq
xchg
fcmovne
jmp
push
bound
xchg
mov
or
fs
pushf
je
arpl
push
mov
aad
sbb
test
mov
jl
dec
out
dec
push
mov
dec
inc
idivb
test
xorl
dec
stos
push
cs
inc
push
inc
xchg
sti
mov
sahf
aad
cmp
hlt
cmpsb
dec
xor
push
sub
loop
in
dec
test
and
fdivrl
out
outsl
push
mov
adc
lret
cmp
xchg
movsl
js
dec
jl
add
push
mov
mov
push
cmc
sahf
mov
stos
stc
fwait
xor
ficoml
mov
sub
test
sbb
addr16
jmp
bound
sub
stos
mov
repz
jl
out
or
nop
mov
push
xor
xor
ret
pusha
jecxz
out
not
int3
movb
rclb
xchg
pusha
mov
and
cmp
adc
add
cmp
lock
pushf
add
test
divb
push
sarb
shrl
inc
mov
ljmp
mov
repz
aaa
out
jg
mov
ret
pop
xchg
add
jnp
mov
stos
or
push
xor
mov
ja
mov
mov
shl
loop
lcall
xor
xchg
in
lods
mov
and
je
adc
test
insl
enter
pop
jle
negb
aam
dec
mov
and
xchg
mov
jp
mov
clc
xor
sbb
stos
mov
stc
ljmp
aad
ss
and
jns
jns
test
imull
clc
sub
xor
aaa
cli
pop
bound
popf
sbb
adc
bound
ljmp
outsb
test
sub
mov
pop
stc
jmp
cmp
idiv
adc
js
test
aaa
call
jmp
fld
out
mov
add
mov
cmc
sbb
aad
mov
xor
pop
jecxz
adc
mov
sarb
mov
mov
mov
pop
ss
in
jge
movsb
fdivrl
mov
adc
xor
into
cmpsl
aad
movsl
jns
cmp
shlb
push
mov
cwtl
push
stos
mov
push
inc
xchg
out
ljmp
sti
stc
cmp
loop
aam
cs
mov
in
out
mov
pop
xor
mov
jmp
sub
cmp
inc
add
ljmp
mull
xchg
jno
sbb
addr16
imul
cs
xchg
iret
imul
mov
or
out
fidivl
imul
ljmp
outsb
xchg
push
fs
les
fisubrl
stos
std
jl
push
dec
imul
xchg
pop
mov
dec
iret
or
fs
movsl
lret
sub
int3
scas
or
cmp
lea
data16
jbe
cmp
jnp
cmp
cwtl
fsts
mov
sub
sti
push
mov
out
pop
out
arpl
shll
dec
sub
mov
cmpsb
mov
leave
xor
sarb
aas
bound
aas
imul
cmpsb
data16
and
lds
push
mov
mov
push
mov
imul
cmpsb
or
ss
cmp
pop
jno
loopne
jns
dec
dec
push
push
and
mov
cmp
sub
adc
mov
shlb
sbb
xchg
std
inc
xor
dec
or
jecxz
and
jge
stos
test
mov
jmp
and
ret
or
sbb
mov
sub
xchg
or
ftst
xor
mov
lahf
cmp
xchg
les
push
ljmp
fmull
scas
dec
icebp
xchg
adc
mov
into
add
push
loop
jns
in
add
in
dec
aad
xor
loope
in
sarb
or
in
xchg
and
add
mov
jnp
push
lret
push
mov
xchg
push
sub
xor
push
or
divb
xchg
decl
jg
sub
gs
xor
lret
and
adc
je
push
aad
insb
lods
jo
mov
mov
test
mov
xchg
inc
mov
jl
cmp
and
cmp
mov
sub
cwtl
mov
sub
enter
mov
sub
pop
cld
bound
pop
sbb
fwait
adc
shll
inc
sbb
push
jnp
lds
out
je
ret
sbb
lcall
int3
andb
cmp
test
push
add
add
cmc
cs
dec
inc
fwait
sbb
mov
mov
sbb
xor
mov
sub
test
push
fs
and
pop
jno
insb
test
test
adc
aad
into
jns
adc
inc
jmp
test
and
inc
cmpsb
push
mov
pop
push
arpl
mov
mov
hlt
stos
pop
push
inc
add
shl
adc
jbe
mov
or
mov
add
mov
shrb
mov
xchg
jne
dec
jg
push
and
rorl
sub
data16
fsubs
mov
jne
outsb
mov
movaps
add
jbe
pop
or
mov
aaa
pop
cmpsb
sub
lods
jns
inc
xor
rol
mov
ret
sbb
mov
dec
pop
std
pop
jle
loope
push
imul
test
and
mov
pop
mov
cmp
dec
mov
jle
dec
and
dec
or
repz
andl
dec
sahf
aas
out
fstpt
inc
inc
movsl
jle
sub
jecxz
ret
fmuls
mov
jg
xor
inc
push
push
mov
push
ds
pop
cmp
inc
dec
mov
fbstp
sub
jnp
iret
add
sub
je
mov
andb
inc
push
lock
dec
fisubrs
pop
adc
repnz
daa
ret
dec
rsm
and
cmp
fidivl
lret
inc
call
out
mov
mov
shlb
pop
fwait
and
rcrl
sbb
es
push
mov
sub
bound
out
aaa
cmpsb
shr
jae
xchg
and
pop
sbb
mulb
add
out
jno
out
test
insl
call
adc
and
icebp
inc
pop
dec
push
rorb
in
cmp
push
jmp
sarb
sbb
mov
fisubl
fnsave
push
xor
mov
add
jg
adc
test
and
cmp
jne
les
fisubs
aam
xor
adc
jp
adc
call
fidivrs
insb
xchg
test
sbb
movsb
mov
sub
push
pop
rolb
mov
and
xorb
mov
mov
movsb
jae
into
stos
push
pop
push
sbb
sbb
jnp
pushl
mov
in
pop
into
fsubrs
pop
int
stos
push
rorl
pop
popa
cltd
stos
lahf
adc
out
xchg
dec
loop
and
jmp
mov
fcoms
enter
jp
dec
mov
fisttps
daa
add
out
cmp
hlt
push
mov
inc
dec
lahf
jbe
fbstp
push
pop
lock
or
pusha
xchg
insl
mov
push
or
test
sti
inc
sbb
out
test
jmp
pop
jae
rol
out
push
xor
cmp
sub
outsl
lret
inc
lock
xor
lret
mov
push
sahf
pop
lods
pop
jns
push
push
jb
dec
pop
insl
es
dec
inc
or
testl
les
cmp
loope
dec
cmp
mov
loop
mov
dec
stc
test
outsb
fwait
std
scas
sub
popf
rcl
jp,pn
lods
pop
push
xchg
jbe
mov
aaa
sub
sub
insb
jg
sahf
mov
in
cmpsl
jecxz,pt
jmp
push
aaa
das
fiadds
or
jne
add
adc
pop
sbb
sbb
push
jnp
push
ja
sub
test
mov
int3
test
cltd
in
nop
fdivp
or
mov
mov
add
pop
or
mov
lret
pusha
frstor
inc
lods
cmp
pop
imul
lcall
je
pop
dec
and
mov
adc
lods
xchg
sub
clc
cmp
sub
test
repz
sbb
lods
aam
add
or
sti
lods
aad
pop
fucom
sub
rcr
mov
mov
cmp
sbb
into
out
aad
rcrl
movsl
clc
cld
nop
mov
clc
outsb
and
mov
xchg
rcrb
mov
je
cs
cmpsb
mov
cld
stos
dec
in
add
mov
sbb
dec
es
aad
xchg
jmp
imul
lods
fstl
xchg
xchg
rcrb
lods
fwait
sub
stos
popf
jb
out
xor
inc
xchg
sbb
inc
adcb
rcrb
push
xchg
jns
pop
mov
push
sbb
mov
mov
cmp
mov
rorl
ja
cmp
mov
pop
adcb
mov
xchg
nop
cmp
pop
cmp
jns
ret
aam
push
mov
mov
xchg
add
add
sbb
clc
jae
or
jecxz
negb
inc
and
and
rcll
mov
ss
mov
lock
xchg
shlb
or
int
jb
dec
ss
mov
cmp
lods
aam
add
xor
pop
jns
inc
push
push
xchg
mov
ss
lods
in
lret
test
shr
xor
rol
mov
mov
lahf
mov
jl
xor
cmp
mov
mov
lcall
fstl
mov
arpl
pop
fwait
dec
xor
in
hlt
in
inc
gs
rcrl
lds
xchg
push
jl
xchg
fucompp
lcall
add
or
and
dec
and
fistl
loope
js
sbbl
cltd
rcrb
pop
xor
fadds
inc
pop
cmp
dec
imul
or
cwtl
push
mov
mov
sbb
subl
pop
fbstp
sbb
call
mov
xor
mov
mov
mov
sub
xlat
mov
loopne
push
flds
inc
xchg
dec
test
xchg
or
adc
push
icebp
inc
das
jnp
int3
pop
ljmp
popl
aad
lods
popf
push
fdivrp
inc
decb
inc
or
jae
sub
fs
xor
outsb
js
xor
push
lcall
or
scas
lock
mov
scas
push
push
das
pusha
push
andb
xchg
cmpl
ja
sub
das
sbb
sbbb
and
in
xchg
insb
cmpsb
mov
pop
add
xor
test
lahf
stos
inc
rcll
sub
push
xchg
int
mov
jne
cmp
ds
ljmp
push
lahf
push
out
icebp
inc
jbe
mov
pusha
ljmp
pop
movsb
adc
jbe
mov
movsb
pop
mov
push
fsubrl
ss
mov
dec
leave
movsl
int3
leave
shll
mov
jns
ret
daa
loop
cmp
imul
fcmovnu
clc
int3
jp
outsb
push
sub
stos
xor
lods
mov
xor
add
jg
cmpsb
push
mov
push
std
mov
mov
xchg
dec
faddl
in
pusha
aad
call
pop
shlb
shr
les
jmp
and
jnp
cmp
popf
lods
push
jle
add
stos
pop
jmp
cwtl
mov
sbb
adc
cmp
xchg
pop
popa
and
sbb
push
addr16
enter
ret
lcall
fstpt
inc
add
lds
mov
lock
cmpsb
adc
xchg
cmp
pop
aad
inc
in
xchg
jnp
call
inc
loope
cmp
aad
lahf
ret
insb
jnp
sahf
mov
ret
xor
push
jne
cmp
dec
or
or
adc
imul
jbe
pop
rcll
sub
outsl
dec
mov
mov
mov
outsl
and
mov
push
lahf
int
push
add
cmc
inc
jbe
stc
xchg
sub
cmpsl
mov
dec
int3
jg
jno
adc
jnp
lcall
mov
and
jl
sbb
jae
test
inc
sbb
mov
idivb
jo
fiaddl
add
push
xlat
orb
lods
in
in
mov
xchg
pop
adc
mov
sahf
fistl
test
xor
sbb
and
and
int
cmp
cmp
scas
sbbl
add
addr16
mov
mov
xor
mov
in
inc
not
lahf
and
outsl
push
xchg
inc
es
cmpsl
mov
imul
xor
int3
das
jns
sbb
lods
mov
arpl
or
sub
js
push
mov
or
out
pop
cli
inc
add
or
push
cwtl
mov
scas
push
pop
popl
push
jmp
mov
jl
rcll
vandpd
lds
mov
mov
adc
mov
and
sti
sbb
movsl
loopne
cmpsl
sbb
sub
jl
sahf
dec
adc
dec
icebp
roll
adc
sti
cmp
pushf
mov
push
test
and
inc
sub
vxorpd
jmp
imul
pop
insl
cwtl
repnz
mov
adc
ds
arpl
dec
nop
fldl
popa
popf
loope
xor
imul
cmp
aaa
fnstenv
call
addr16
jmp
or
cmp
jge
and
push
sub
pop
push
nop
inc
stos
pop
xor
dec
xchg
mov
adc
sub
mov
and
cmpsb
sahf
inc
movsb
xchg
jnp
mov
ret
mov
push
pop
cmp
test
xchg
xchg
or
mov
adc
lcall
or
out
jp
pop
and
sub
mov
mov
fdivl
sti
xlat
sub
data16
and
xor
movsb
sbb
out
iret
cwtl
adc
pop
mov
mov
mov
sub
xor
mov
test
adc
testl
add
addr16
xchg
sub
pop
mov
nop
shll
and
pop
sahf
pop
fadds
les
inc
je
fs
rclb
neg
call
int3
fwait
insl
or
xchg
push
imul
outsb
test
daa
pop
imull
jbe
inc
loopne
loop
mov
mov
xlat
paddq
xchg
test
xor
in
lahf
sub
jb
push
xchg
xchg
cmp
lcall
mov
fstpt
mov
cmp
inc
dec
pop
popa
xorl
aas
mov
das
jl
dec
push
push
mov
out
jp
jnp
push
inc
and
movsb
bound
sbb
sub
jae
nop
shrb
js
lret
sbb
in
ret
sbb
jne
lods
pop
xchg
loope
wbinvd
dec
mov
outsl
mov
frstor
mov
fstpt
inc
dec
movzwl
in
dec
adc
mov
or
mov
shlb
sub
mov
lods
mov
inc
movsl
into
dec
inc
jle
pop
sbb
push
sbb
jp
insl
mov
cmc
cwtl
test
mov
lret
out
fstpt
jmp
add
std
pop
outsl
and
jnp
mov
adc
xor
ret
add
push
add
mov
pop
mov
aam
stc
insb
adcl
fs
mov
cmp
cmp
sahf
jb
push
hlt
mov
xor
in
test
inc
cmp
shr
fstpl
dec
sbb
fistpl
sub
add
repnz
test
xchg
mov
orb
pop
fbld
add
mov
or
jnp
rep
lret
out
and
mov
pusha
call
repz
jbe
dec
mov
cmp
fnstsw
xor
add
and
pop
jo
cld
dec
cmp
push
push
push
mov
adc
sbb
loop
out
add
divl
es
xchg
rcrb
add
jge
and
adcl
fstpt
push
mov
or
push
or
enter
push
scas
cmp
cmp
movsl
inc
dec
sub
lcall
push
loop
add
ror
fldcw
in
testb
jecxz
dec
cmp
fisttps
repz
dec
xor
mov
movsb
adc
push
jno
cvttps2pi
xorl
sub
arpl
mov
jge
xor
aad
sub
mov
xchg
push
movsl
lcall
stc
je
orb
fs
xor
movsb
cmc
jnp
push
jae
movsl
mov
jo
or
mov
sub
mov
clc
movsl
jmp
mov
ret
xchg
pop
ss
icebp
pop
pushf
dec
movsl
test
adc
or
adcb
stc
push
and
mov
or
std
insl
les
or
dec
jne
ret
and
mov
push
shr
iret
hlt
xchg
add
hlt
test
je
sbbb
xchg
insb
mov
dec
imul
ret
aam
pushf
xchg
scas
adc
sahf
aaa
cmp
push
shll
or
lock
int3
adc
pop
lcall
sbb
push
mov
xlat
and
sub
stos
jecxz
scas
sbb
addr16
je
clc
mov
pop
lret
addl
jns
jno
jae
shll
jne
mov
cld
sahf
jecxz
subl
ja
add
fistps
fsubrs
mov
xchg
sbb
or
dec
stos
lock
sub
nop
sub
xor
sbb
xor
call
xchg
adc
in
dec
dec
jp
xchg
mov
mov
cltd
imul
adc
stos
dec
or
mov
sub
test
jle
es
mov
xor
fidivrl
cmp
push
imul
cltd
mov
scas
outsl
mov
cltd
sbb
stc
cmp
sub
add
mov
add
in
dec
insb
dec
and
outsb
insb
fldenv
pop
das
adc
dec
jo
pop
and
lret
mov
pop
fs
push
sbb
dec
cmp
jae
ljmp
jle
inc
push
push
aas
test
insb
rol
mov
aas
rep
inc
pop
adc
rolb
add
mov
scas
popf
push
or
int
or
gs
pop
cltd
mov
cmp
sub
xor
push
inc
pop
nop
clc
jnp
in
jne
jb
mov
mov
in
test
jmp
sar
and
fwait
jne
fwait
fwait
mov
js
jns
stos
fsubrs
ljmp
test
lods
notl
and
xor
push
pop
aaa
xchg
xchg
hlt
rolb
insl
add
call
daa
jecxz
inc
dec
and
jge
xor
fs
cmc
test
jmp
mov
sub
cmp
sub
sub
or
cmc
mov
pushf
negl
cmc
out
call
mov
cmp
test
out
daa
add
xor
lods
ret
mov
stos
add
iret
push
sbb
imul
pop
popa
lret
jns
cmpl
pop
adc
sub
loope
or
test
pusha
ljmp
push
cmpb
outsl
xchg
dec
and
xchg
pop
add
mov
leave
setbe
fsubs
cld
jecxz
out
outsl
inc
inc
test
xchg
scas
or
mov
repz
adc
jae
fldln2
mov
dec
addr16
jmp
push
mov
mov
fdivrl
push
loop
filds
mov
fs
pop
test
xor
lea
frstor
mov
inc
popa
cli
cld
icebp
or
lahf
push
div
sub
sarl
sub
repnz
pop
jnp
sbb
es
lret
push
add
mov
cs
xlat
lahf
xchg
xor
sub
cmp
mov
imul
icebp
test
and
jecxz
imulb
mov
xorl
arpl
xor
flds
enter
subb
daa
cmpsb
mov
es
ja
mov
test
inc
push
inc
cmp
xor
shll
cli
lock
dec
push
lock
adc
shrd
insl
aas
test
dec
pop
inc
push
cmpb
dec
add
mov
xchg
xorb
push
imul
stos
loop
push
and
rcrl
xlat
in
dec
jbe
ljmp
punpckhbw
xchg
adc
mov
loope
icebp
ds
lcall
and
pop
mov
cmp
and
push
adc
fbld
fwait
imul
ficoml
xor
fwait
jo
adcl
adc
xchg
insb
lods
adc
in
push
pop
jle
cmp
sti
cmc
in
push
arpl
cmp
ja
hlt
push
lock
adc
adc
xchg
xchg
cmp
subl
out
mov
and
dec
cmp
mov
fcoml
mov
pop
arpl
jle
mov
lods
ror
cmp
adc
and
or
jle
repz
fdivrl
adcb
jmp
in
int3
cs
into
adc
push
push
xor
cmpsb
stos
cmpsl
push
mov
and
dec
cli
fs
mov
jbe
cmpsb
jno
add
sarl
mov
push
div
subb
scas
mov
inc
cwtl
lea
inc
dec
je
xor
mov
mov
into
dec
icebp
lret
lock
mov
add
or
orb
pop
fisubrl
mov
push
fucomi
call
or
sbb
mov
ja
push
lods
or
popf
mov
jno
call
mov
cmp
shll
mov
inc
mov
fptan
fisubl
mov
dec
inc
js
sbb
cs
cmpsl
jnp
imul
sahf
repz
fnstenv
out
shll
test
and
inc
lcall
xchg
push
loope
shlb
sub
sarl
mov
mov
jle
nop
aam
cwtl
clc
leave
ss
mov
jle
cmp
inc
shl
inc
push
jmp
cltd
jmp
vpsllq
push
mov
test
bound
push
aam
sti
adc
icebp
pusha
insb
add
and
lods
mov
inc
cmp
push
push
lods
adc
scas
sub
iretw
pop
inc
lahf
xor
add
pop
pusha
clc
clc
fs
jge
lds
inc
and
mov
jp
or
add
pop
faddl
fadds
push
mov
sub
lea
stos
icebp
cltd
sbb
mov
or
cltd
loopne
mov
rcr
test
shlb
mov
insl
inc
dec
jle
inc
cmpsl
push
push
sub
and
mov
inc
es
rcr
sub
jne
sub
jmp
dec
xchg
fsubr
mov
hlt
lcall
cld
mov
punpckhdq
imul
lods
sub
adc
leave
fdivl
pop
ds
scas
roll
pop
push
bound
inc
insb
into
lret
jecxz
shrb
and
jbe
and
cwtl
jb
call
inc
into
scas
add
lcall
test
push
mov
xor
push
fistps
hlt
daa
movd
in
test
jp
mov
addr16
imul
xlat
out
movsl
arpl
xchg
or
sbb
icebp
dec
and
xchg
in
adc
sbb
xlat
dec
push
jecxz
fsubrl
mov
lret
cmpsb
out
cmpb
in
jno
sbb
lcall
ss
scas
nop
in
call
jecxz
loop
xor
mov
lcall
mov
or
movsl
inc
mov
inc
js
cmp
and
jno
add
call
fildl
div
jle
addb
xchg
xorl
and
syscall
add
imul
ss
dec
iret
sbb
divl
mov
xchg
insl
stos
hlt
sbb
pop
dec
andl
mov
popa
ljmp
jo
and
fdivrs
add
jb
sub
cmp
sti
popa
cltd
xchg
and
mov
cmpsb
lahf
int
add
jle
jmp
out
xchg
xchg
scas
mov
inc
adcb
lock
jl
mov
cmp
js
cwtl
fs
inc
jb
cli
xchg
push
outsl
aam
in
jp
shll
sbb
test
xor
decl
filds
cmp
cmp
test
mov
out
or
outsb
stc
out
sbb
inc
jg
add
push
out
sarl
loopne
clc
bound
inc
sub
out
sbb
iret
pop
push
adc
sub
mov
lods
cmp
cli
mov
std
movsb
insb
xchg
xchg
or
add
psubw
dec
mov
inc
add
or
test
lahf
bound
js
mov
xchg
push
jp
inc
js
push
push
and
jne
out
jmp
pop
mov
pusha
jb
and
cmp
mov
cmpl
jmp
xchg
mov
mov
pop
or
dec
lahf
push
cmp
xchg
jecxz
mov
adc
aad
or
xchg
out
push
fdivrl
mov
pop
sub
xor
pop
pushf
dec
push
or
insl
fcomps
cmp
leave
out
sbb
adc
pop
out
sub
xor
mov
push
out
mov
pop
dec
ds
add
stos
loopne
adc
pop
inc
xor
and
inc
pusha
lea
add
hlt
aam
mov
cmpsb
lea
add
data16
jno
stos
push
mov
imul
sub
pop
das
enter
stos
in
mov
adc
es
popf
pushf
dec
jl
aaa
mov
sar
aaa
sub
lods
mov
adc
lahf
dec
clc
cs
mov
push
dec
ret
js
enter
cmc
push
sbb
inc
and
push
cmpsb
pop
clc
xchg
dec
fsubr
jecxz
jmp
icebp
pop
push
out
push
jb
or
call
insl
push
xchg
pop
or
je
insb
daa
cmp
mov
and
adc
in
pop
mov
inc
lock
xor
inc
lds
sti
aas
movsl
jle
aad
lods
inc
imulb
popa
loope
lret
bound
jmp
or
pop
sahf
xchg
pop
sahf
and
es
sub
clc
jge
pop
notb
lahf
sbbl
push
mov
das
mov
fbstp
js
xor
insb
fs
add
mov
mov
ret
ret
pop
lock
dec
loopne
es
pusha
mov
jns
mov
frstor
dec
xchg
xor
pop
bound
jbe
pop
lock
xchg
or
mov
pop
lods
daa
mov
lods
incl
xor
push
out
call
sti
andb
or
test
aad
xchg
sub
mov
stc
dec
mov
bound
ja
insl
repnz
rorl
repnz
pop
scas
jb
xor
inc
xchg
sub
les
jecxz
in
jmp
mov
jb
imul
nop
daa
mov
addr16
int3
arpl
out
xchg
sub
mov
or
lahf
pop
stos
sub
fsubrl
es
jnp,pn
fldt
pusha
idiv
mov
js
push
hlt
mov
and
into
hlt
mov
cltd
cmpsb
cmp
inc
in
scas
sbb
ds
mov
test
mov
ss
aam
in
push
js
lea
loopne
pop
scas
cli
xchg
fdivrs
test
and
mov
incb
adc
adc
enter
xchg
jmp
dec
loop
xor
popa
outsb
psubb
mov
addl
jp
pop
add
cmp
xchg
add
es
fstps
es
mov
ficoml
add
cmp
pop
add
cmp
or
leave
cli
xchg
repz
pop
scas
loopne
pop
mov
add
push
cwtl
pop
or
jecxz
rclb
test
add
sarb
pop
mov
mov
test
cmp
fcomip
mov
test
push
enter
cli
xchg
xchg
cmpsb
cmp
xor
jnp
cmp
pop
inc
fiaddl
test
push
shl
enter
push
ljmp
mov
aas
fcomps
enter
jnp
pop
inc
in
jg
sbb
ficompl
add
and
pop
addb
jp
lea
fwait
loop
xchg
es
and
shlb
xchg
jnp
cmp
lret
pushf
jmp
in
dec
in
call
xor
jo
addr16
insb
xchg
imul
mov
lock
fldenv
mov
popa
and
add
rcrl
xchg
sub
push
adc
repz
jae
pop
lods
outsb
std
xchg
cwtl
into
movsb
cmp
mov
cmpsb
cmp
cmp
pop
xchg
sub
test
pop
repz
es
dec
sbb
fcomps
sub
and
jbe
push
inc
adc
jge
inc
fisubrs
or
xchg
mov
push
out
aad
lcall
mov
mov
fxam
jl
xor
jmp
pop
pop
and
test
pop
movsb
leave
inc
xlat
icebp
push
jmp
adc
dec
and
pop
insb
testl
loop
xchg
cs
xchg
and
adc
cmpsl
push
cmp
add
pop
mov
mov
jb
sti
lods
cmpsl
test
loopne
aaa
into
clc
add
cmp
lea
gs
sub
faddp
or
sub
sbb
dec
fbstp
mov
sahf
xchg
dec
loop
sarb
adc
ss
ljmp
mov
sub
jmp
xchg
adc
lahf
ss
xor
adc
xchg
pop
pop
mov
fldcw
mov
aaa
and
pop
push
mov
outsl
cmpsb
mov
hlt
in
scas
inc
add
cmp
aaa
and
lahf
pop
push
pushf
xor
mov
xor
decb
jo
dec
push
pop
icebp
lea
xchg
lods
popf
xor
mov
pop
in
clc
stos
inc
and
sbb
jnp
jg
sbbl
jecxz
xor
add
cmp
mov
imul
mov
inc
xlat
dec
loope
add
xor
pop
mov
test
scas
movsl
dec
iret
pop
hlt
idiv
pop
scas
sub
inc
fiaddl
call
xor
mov
dec
fists
ss
into
jo
stc
mov
popf
xor
jmp
ds
mov
xor
sub
mov
xor
fsubr
test
adc
aaa
xchg
jo
xchg
sub
mov
inc
ficoms
push
jmp
jno
popf
xor
xchg
pop
xchg
sti
xchg
fwait
and
jns
adc
test
xchg
and
mov
inc
fstl
aam
and
shrl
xchg
xchg
sub
je
dec
movsl
call
mov
dec
ja
cwtl
das
inc
cwtl
hlt
mov
shrb
repnz
in
adc
inc
xchg
sub
lret
popa
push
jmp
in
or
out
inc
fisubrl
insl
add
nop
inc
xlat
leave
bound
cltd
ljmp
lock
test
jbe
mov
inc
xchg
cmpsb
cmp
xchg
in
dec
adc
aam
push
mov
jg
push
sbb
or
and
and
stos
inc
jge
jns
fs
lcall
xchg
sub
cs
dec
enter
mov
cld
mov
enter
clc
xor
fwait
push
pop
mov
mov
ds
rcll
adc
xor
mov
cmpl
push
idivb
pushl
daa
push
andl
dec
movsl
inc
ja
mov
fistpl
loop
sub
add
mov
aaa
xor
insb
xchg
inc
in
andl
sbb
sbb
cmp
sub
mov
test
pushf
sub
and
push
je
dec
stos
jge
fwait
movsb
int
cli
lret
sbb
notb
das
mov
pushf
addr16
movsl
out
mov
fsubr
add
aam
add
outsl
popa
push
xchg
push
insb
stc
nop
mov
jle
jecxz
sahf
daa
xor
pop
scas
aaa
xchg
test
icebp
xchg
aad
iret
push
sub
and
and
fbld
dec
push
cmc
je
out
ja
pushf
andl
adc
cmp
test
pop
cmpsl
mov
fisubrl
aam
cli
or
pop
adc
sub
outsb
inc
imul
mov
leave
outsl
push
add
mov
cs
jecxz
xorl
mov
in
jmp
in
aas
pop
outsl
or
inc
push
mov
lret
mov
mov
sbb
jb
and
mov
push
je
test
mov
rcr
or
mov
add
aas
mov
jp
outsb
lods
inc
movsb
mov
loop
testl
adc
xchg
test
sub
add
loop
fisubrs
inc
movsl
push
lea
jns
shll
xchg
int3
sbb
movsl
dec
push
push
das
leave
jge
fstps
sbbl
mov
ret
add
jno
xor
sbb
arpl
lret
scas
add
pushl
cmp
fisubrs
mov
mov
jge
sub
jne
mov
decl
cmp
push
mov
dec
adc
push
mov
dec
cmc
test
adc
cli
inc
adc
push
mov
xchg
aam
lods
push
mov
fxch
jne
push
daa
leave
jb
call
or
lcall
shr
sub
mov
dec
icebp
push
mov
or
and
pop
gs
mov
and
adc
les
sub
push
fs
data16
pop
popf
scas
rolb
mov
xlat
or
dec
pop
cmp
xchg
ja
enter
sub
cmpsb
pop
sbb
jmp
test
testl
aaa
aam
pop
jecxz
push
sub
mov
push
aad
jnp
xor
std
addl
rcrb
xchg
sub
cmp
fisubrs
mov
cld
mov
mov
loopne
sbb
jno
andb
push
movsl
cmc
xchg
into
inc
fxch
pusha
or
ficomps
mov
sbb
adc
rcrl
mov
popa
ret
and
mov
out
addr16
cmpsb
pop
mov
cmp
and
pop
mov
les
lods
sbbl
insb
and
xor
mov
testb
push
fsubs
adc
popf
xor
dec
cli
xchg
jle
les
lahf
and
rcrb
mov
sub
and
js
jne
scas
inc
xor
push
dec
in
jmp
imul
cmp
insl
stc
mov
sub
cmpsl
ds
inc
pop
lods
lds
int3
arpl
jecxz
and
add
dec
xor
mov
dec
daa
mov
mov
inc
fld
rcrb
or
push
out
sbb
adcb
cmp
mov
les
mov
mov
adc
jecxz
jae
mov
sbb
adc
cld
lea
stos
inc
aas
out
pop
repz
jo
push
push
jb
call
cs
fld
pop
cld
lea
mov
sbb
sub
adc
ss
repz
lcall
cmpsl
mov
xchg
hlt
mov
and
inc
mov
xchg
xorb
add
lea
fstps
scas
inc
dec
cld
test
push
mov
rcr
test
or
xchg
iret
mov
adc
fbstp
cli
inc
ficomps
ja
adcb
sbb
sbb
hlt
sub
adc
xchg
sub
pop
mulb
mov
xchg
xorl
loopne
popf
xor
add
lea
xor
dec
add
adc
ss
or
das
lods
fmul
inc
out
jmp
pop
ret
das
add
arpl
loope
jnp
shll
fwait
xor
pushf
jmp
push
cmpb
out
jo
fdiv
push
adc
ret
hlt
cld
adc
cmc
mov
push
iret
cmp
cmp
xchg
lcall
clc
in
cmpsb
xor
mov
lahf
lret
out
js
jb
mov
in
mov
fiadds
sub
jp
inc
xlat
pop
fwait
jle
or
mov
in
test
dec
into
jmp
jge
jp
cmp
int3
pop
sbb
fisttps
cmp
fs
jmp
jge
xchg
in
add
add
and
lahf
adc
and
shrl
xchg
mov
fstps
xchg
int3
sub
das
pop
in
fbstp
jae
in
movsb
inc
fidivl
lds
scas
iret
sbb
andb
inc
xlat
fwait
inc
sub
je
mov
popa
leave
setp
inc
ljmp
xchg
cmp
pop
outsb
mov
cmp
mov
mov
insb
push
and
divb
mov
aad
push
cwtl
ficoml
enter
adc
dec
xchg
rol
xchg
push
lods
and
jp
sub
bts
ficompl
loopne
imul
aas
call
sub
loopne
cld
push
xorl
mov
pop
repz
mov
dec
cli
loope
adc
mov
inc
push
imul
add
stc
xlat
inc
mov
ret
push
aad
out
fdivrl
push
pop
fidivs
popf
je
dec
sbb
lret
int
fwait
push
xorb
push
icebp
rcll
aaa
orb
jns
enter
loope
mov
bound
shl
mov
sbb
mov
out
inc
loop
cltd
je
adc
push
xchg
cld
jle
add
mov
insb
pop
sbb
sarb
cmpl
arpl
scas
mov
jne
cmpsl
pop
xchg
test
xchg
out
lcall
dec
pop
popf
shll
mov
popf
xchg
mov
mov
xor
dec
sub
pop
cltd
loopne
cmp
mov
mul
adc
pop
test
clc
cmp
mov
pushf
dec
mov
psrad
adc
jns
mov
hlt
outsb
mov
test
pop
cld
shlb
jno
das
bound
divl
stos
inc
push
lahf
testl
sub
call
out
dec
clc
cmp
out
ret
sahf
mov
mov
pop
scas
push
inc
fildl
mov
mov
push
out
filds
paddb
out
daa
loopne
pop
out
lea
jb
push
movsl
in
dec
xlat
int
cmpsl
std
push
loope
mov
testb
mov
fsubrs
inc
xor
xor
pop
lock
inc
pop
lock
insb
mov
int3
pop
lock
dec
pushf
xor
pop
insl
dec
push
mov
inc
arpl
xchg
jae
jo
rcl
repz
or
lret
or
lods
xchg
dec
jno
cmp
inc
mov
xor
push
in
dec
xor
mov
aad
lret
lds
or
push
jb
inc
sbb
aad
mov
repnz
das
sub
lahf
add
or
pop
xor
nop
adc
inc
xchg
lock
mov
adc
add
fnsave
in
ss
icebp
mov
mov
push
arpl
xor
cmp
push
push
push
aad
sbbl
or
dec
cmp
cmp
adc
add
jae
mov
adc
cmp
xor
adc
fidivrl
xchg
insb
dec
push
inc
mov
pop
xchg
jmp
leave
bound
inc
fisubrl
fsubrl
iret
fdivs
pop
jae
jle
push
sub
hlt
xorb
mov
dec
loope
insb
movntq
mov
pop
push
test
mov
lods
movsb
int3
fbstp
into
mov
add
push
in
pop
xor
test
ret
cmc
pop
pop
repnz
sbb
inc
fdivr
gs
xchg
lcall
scas
out
shlb
out
insb
add
sbb
data16
arpl
dec
mov
mov
mov
mov
xchg
sub
mov
lret
cmp
adc
pop
pop
sahf
dec
push
jb
xchg
adc
xlat
out
or
dec
aas
in
or
xchg
jl
xchg
scas
repz
ror
arpl
or
push
jnp
xor
test
sub
aad
fidivs
mov
jb
sub
repnz
inc
adc
movl
and
pop
aaa
imul
aas
repnz
jecxz
sbb
xchg
sub
pop
lods
inc
push
out
leave
sbb
insb
fs
cmpsl
cmp
jecxz
scas
jmp
mov
dec
gs
jno
lea
mov
aad
mov
or
jae
xor
xor
xor
mov
rcl
insb
add
cwtl
das
pop
jb,pn
popa
fwait
int3
arpl
adc
es
mov
or
in
push
testb
in
aam
ffreep
xchg
sub
push
mov
xchg
pop
xor
dec
ret
fidivl
addr16
cwtl
test
push
sbb
repz
push
push
scas
inc
sub
inc
popf
loopne
adc
adc
or
in
cmpl
jnp
sub
pop
icebp
mov
lea
cmpl
lea
and
xchg
clc
repz
jl
lea
mov
stos
and
aaa
repz
pop
and
jae
test
popa
clc
mov
push
popf
jmp
add
jecxz
imul
test
loop
or
sbb
test
cwtl
and
or
pop
push
in
pop
daa
mov
cli
dec
stc
nop
lock
nop
jecxz
add
aaa
call
incl
cmp
xlat
outsb
in
js
jns
cli
imul
stc
adc
jmp
std
lods
inc
out
imul
ljmp
add
dec
and
cmp
inc
fdiv
pop
shrl
sbb
jp
jnp
sbb
test
xchg
outsl
adc
repnz
mov
pop
dec
push
pop
testb
stc
lcall
pushf
out
pushf
xor
adc
aad
inc
fistpl
mov
jp
lret
mov
rcrb
mov
and
and
pusha
notl
aam
jne
pop
add
mov
pop
repz
mov
outsl
insb
sti
inc
fldt
jo
ljmp
aad
gs
test
push
and
pop
inc
mov
arpl
inc
fcoml
pop
sub
stc
jne
rclb
add
sbb
in
cmp
and
add
iret
push
rcrl
test
sbb
adc
fs
sub
pop
mov
pop
shll
cli
sbb
test
fwait
push
andb
jmp
inc
fisttpl
and
stos
inc
nop
addb
mov
out
mov
pop
pop
sti
xchg
mov
mov
iret
into
lds
test
sub
pop
ret
daa
mov
mov
lret
std
sub
mov
inc
js
or
jns
xchg
outsl
add
mov
pusha
pop
lds
push
popf
push
cmpsb
cli
fadds
add
and
cmp
rorl
cmp
test
jns
jecxz
and
notb
sbb
pop
or
push
mov
out
les
cmp
cli
jp
xlat
outsb
sbb
pusha
sub
push
lock
sub
jle
imul
lret
out
cmp
dec
loop
cmp
pop
lods
ds
xorl
lods
pop
lcall
push
in
ret
adc
ds
bound
cmp
cmp
mov
push
mov
adc
inc
lods
inc
jb
dec
out
pushf
dec
loop
xlat
pop
enter
sbb
cmpsb
jle
mov
fs
fwait
insl
mov
shlb
arpl
lret
bound
xor
es
dec
adcb
jmp
jle
lods
xor
loop
scas
jnp
and
ja
xchg
in
mov
pop
fdivs
aaa
sub
or
jge
lret
rolb
add
xor
jno
fmuls
push
loop
lret
popf
xor
and
adcl
cld
das
orb
mov
movsl
pusha
notl
pop
mov
add
fimull
mov
jae
lods
inc
pop
adcl
je
sbb
iret
and
ficoml
lds
cwtl
das
mov
stc
xchg
leave
stc
mov
mov
mov
cli
mov
mov
jecxz
in
pop
icebp
inc
push
test
xchg
mov
out
mov
pop
loop
mov
fimuls
cli
ds
add
mov
xchg
xlat
mov
inc
fdivl
pusha
test
pop
jmp
cmp
mov
scas
dec
sbb
ja
mov
mov
rclb
rcrb
testb
inc
sub
pop
lock
pushf
mov
push
jmp
or
insl
pop
mov
xchg
lea
mov
fnsave
test
sub
or
mov
pop
scas
lods
sub
mov
add
xor
lods
inc
push
push
imul
test
leave
jmp
cmp
inc
les
outsl
sub
pushf
popf
fidivl
mov
clc
xchg
es
add
inc
push
mov
pop
mov
lea
mov
in
sbb
rcrl
or
loopne
adcl
xchg
jecxz
inc
adc
aaa
into
imul
cmpl
mov
and
sub
je
inc
fnsave
aam
sti
add
dec
sbbb
xor
cmp
xchg
ret
push
sbb
xchg
cs
pop
fsubrs
cmp
imul
adc
vmread
lret
testl
movsl
dec
push
ds
mov
scas
adc
mov
push
jno
std
mov
leave
add
adc
ds
in
add
mov
leave
xlat
outsb
sti
adc
faddl
lds
mov
pop
lcall
mul
sub
loopne,pt
pop
rcrl
mov
aam
test
pushf
sar
push
das
repnz
js
inc
fimuls
lret
dec
in
in
mov
push
mov
pop
mov
das
mov
mov
mov
dec
out
pop
lds
call
pop
adc
push
cmpsl
and
pop
xchg
iret
sbb
sbb
scas
inc
pop
pop
add
fildll
ret
cmc
add
adc
ret
push
add
pop
mov
push
jecxz
inc
faddl
or
idivb
pop
adc
enter
rorb
std
xchg
jl
push
ljmp
hlt
mov
js
loop
xchg
sub
loope
inc
shr
xor
pop
adc
lea
shll
mov
mov
pop
scas
loope
clc
or
or
pop
pop
scas
mov
sub
sub
mov
lods
fwait
adc
and
xchg
lahf
movups
jmp
add
xor
movsb
pop
pop
xor
mov
mov
movsb
aam
xlat
lcall
xor
mov
mov
or
dec
aam
es
xor
or
mov
sub
mov
xchg
sub
movl
inc
mov
into
mov
rcll
jl
loop
aaa
adc
pop
xchg
aaa
into
outsl
mov
shlb
pop
call
add
sub
ds
jns
cs
aas
sbb
hlt
fistpll
rcrb
enter
out
aad
pop
imulb
ret
clc
cmc
call
nop
daa
dec
jmp
mov
addr16
mov
loopne
rclb
aaa
into
test
pop
out
aas
mov
lahf
sub
xchg
movsb
mov
jle
fidivl
and
hlt
pop
mov
mov
jge
jns
push
out
mov
pop
cli
out
xor
adcb
nop
add
fdivs
jmp
repnz
and
cmp
leave
dec
inc
fidivrs
jmp
sbb
adc
adc
push
test
fwait
push
filds
adc
push
cmp
outsb
insb
push
jo
mov
rolb
sahf
add
xlat
popa
sub
rcll
aaa
into
test
aaa
into
add
xor
movsl
cmp
aad
lret
lds
fs
cmc
xor
in
pop
mov
adc
cmp
push
shrl
rol
fidivs
test
sbb
jge
clc
pop
xor
dec
adc
mov
fwait
sub
mov
leave
pop
icebp
cli
mov
inc
sti
pop
bnd
cltd
xor
int3
ds
lret
push
ljmp
and
les
push
jmp
xor
and
jge
push
jmp
cwtl
fs
mov
aam
imul
push
popa
clc
aas
daa
es
js
dec
jecxz
xchg
pop
hlt
mov
and
add
loope
sub
lock
push
mov
lret
loop
loop
or
dec
es
nop
ds
loope
mov
and
push
sub
ret
pop
movsl
inc
pop
hlt
jbe
arpl
jbe
cli
xchg
shlb
xchg
data16
popf
xor
ja
xor
cmp
ja
ds
lahf
fdivl
lcall
sub
outsl
push
inc
inc
sbb
js
or
xor
sbb
xor
fsubrs
nop
pushf
xor
int3
imul
jmp
rcrb
mov
fdivl
cs
mov
movsb
cmp
push
jmp
mov
push
pop
dec
xor
in
imul
sti
xchg
or
nop
daa
lods
and
int
cmp
scas
std
int
out
enter
and
xchg
adc
adc
or
mov
and
push
cmpsb
push
out
sbb
sub
adcb
mov
repnz
inc
fstp
sbb
ret
dec
out
enter
lret
bound
mov
push
popf
sub
or
dec
pop
mov
dec
arpl
sahf
or
pop
dec
pop
lods
and
pushf
xchg
sbbl
dec
stos
lods
inc
fnstsw
xchg
insb
cmc
dec
loop
lahf
mov
addl
mov
frstor
sub
daa
pop
call
andl
jle
xchg
testb
daa
cmpsl
inc
fcoml
push
lods
inc
andb
mov
stos
stos
inc
sbb
jbe,pn
mov
shrl
rol
sub
iret
add
ja
lret
bound
ja
pop
push
imul
mov
mov
lods
inc
or
xchg
dec
loop
cmpl
scas
imull
call
jmp
rcr
adc
inc
inc
psllw
mov
leave
in
test
sbb
mov
inc
fdivl
int
insl
sub
sahf
sbb
nop
mov
mov
int3
add
add
sbb
lea
mov
leave
mov
xchg
sub
jo
shll
adcl
subl
lahf
loope
int3
arpl
scas
imul
add
push
mov
inc
push
lods
inc
mov
push
xchg
mov
dec
in
cld
in
xchg
cs
mov
cmp
and
or
aam
dec
out
xchg
in
fisubl
cmp
imul
sbbl
sub
fsubrl
push
loope
dec
loope
in
in
jg
test
fimull
mov
push
mov
lret
das
pop
mov
rorl
cmpsb
ret
daa
inc
fcomps
clc
in
out
movsl
out
jne
int
sbb
sbb
mov
daa
mov
mov
sarb
mov
push
in
and
icebp
mov
daa
mov
sub
lret
scas
xor
loopne
clc
jge
xlat
cs
xor
repz
test
repz
ret
add
out
xchg
sub
ja
sbb
test
leave
out
mov
mov
mov
mov
mov
into
gs
xlat
outsb
cmp
imul
lahf
lcall
mov
movsl
mov
incb
stos
add
xor
xchg
cs
dec
xor
jle
adc
lret
ja
loope
inc
adc
movsb
cmp
sbbl
dec
fnsave
out
mov
push
movsl
fisttps
outsl
inc
cmp
push
and
mov
aad
clc
or
and
push
mov
add
mov
lds
imul
inc
fstl
pop
scas
ss
js
dec
fnstenv
movb
cmp
and
lods
outsb
lds
adc
loope
enter
add
fbld
mov
mov
mov
xchg
sbb
jg
adc
xchg
and
sub
outsw
mov
pop
cmpb
or
sub
shl
imul
aas
mov
out
stos
test
iret
inc
or
jg
mov
mov
mov
jg
std
xchg
mov
sbb
pop
sarl
das
filds
ds
inc
dec
ds
jno
pop
jmp
adc
ds
or
lock
adc
les
xor
adc
inc
push
mov
test
mov
mov
cli
xor
movl
add
add
out
test
push
pop
jns
clc
icebp
leave
imul
iret
xchg
divb
das
pop
sub
sbb
sub
testb
pop
fstpt
jo
clc
mov
xchg
mov
cwtl
scas
int3
mov
lahf
mov
popf
stc
jle
ljmp
ret
stc
repnz
sub
push
and
xor
inc
pop
fmuls
dec
inc
add
pop
pop
add
cld
push
outsb
jp
lea
loop
push
jae
jnp
dec
push
enter
cmp
pop
xor
push
or
xchg
ret
adc
dec
mov
push
lcall
in
mov
mov
mov
cwtl
sbb
int3
mov
push
mov
mov
inc
add
xor
flds
insl
xchg
or
test
jl
loop
icebp
jmp
cmc
aam
scas
jge
push
and
popa
insl
xchg
popf
les
pop
dec
pop
jp
push
xor
cmc
push
shrl
lds
ljmp
sbb
push
stos
mov
push
jmp
and
mov
dec
sbb
cmp
ss
sbb
push
pop
out
mov
mov
or
mov
xchg
sub
lods
fnsave
mov
addl
shlb
push
outsl
push
test
mov
and
dec
mov
inc
sub
leave
popa
in
cli
xchg
and
jmp
scas
je
pop
sahf
mov
and
jmp
incl
xor
jb
div
stos
inc
and
xchg
sub
leave
pusha
jne
mov
sahf
xchg
out
enter
icebp
jmp
out
xchg
and
or
cs
clc
lcall
adc
pop
jne
stos
je
xchg
adc
ficoml
xor
inc
sti
scas
inc
sub
dec
int
loop
lahf
mull
jns
es
adc
js
int3
lods
inc
call
int3
arpl
sbb
jae
test
adc
fistl
xor
inc
cld
scas
inc
arpl
xchg
dec
int3
movl
fidivs
adc
push
ljmp
jno
js
mov
stos
test
adc
sti
pushf
mov
and
sarl
test
out
rol
pop
clc
icebp
testb
inc
adc
je
add
mov
push
out
adc
inc
cmp
imul
or
jl
pop
ret
inc
icebp
adc
or
mov
adc
and
or
and
cld
test
shll
push
xor
ss
mov
test
shll
stc
fildl
jb
sub
push
push
pop
insb
add
mov
and
mov
inc
xor
push
pop
mov
loop
bound
add
cs
push
mov
push
and
pop
mov
pop
icebp
stos
hlt
pop
hlt
and
inc
jnp
js
xchg
cs
cltd
cltd
xor
jae
dec
movsl
in
mov
push
shrl
aas
aad
jno
repnz
mov
insl
adc
push
shrb
icebp
aaa
das
push
mov
mov
inc
stos
mov
mov
lods
outsl
lds
cmc
popf
fdivl
data16
mov
and
nop
sbb
outsl
int
addr16
cmpsl
ret
int
js
sbb
clc
sbb
or
fwait
mov
dec
stos
sub
inc
cmc
popf
jae
icebp
lret
adcb
mov
loope
inc
into
jnp,pn
movsb
xchg
cmp
and
inc
fldl
inc
mov
aad
jno
fst
and
jp
mov
sbb
call
aas
jge
cmp
scas
sub
add
in
cmc
inc
cld
mov
pop
mov
sbb
pop
sbb
dec
jge
cli
lods
insb
popa
negl
sarb
and
xor
push
mov
rcr
divl
popl
repnz
adc
cwtl
adc
ljmp
in
aas
add
xor
jae
scas
push
insl
add
mov
nop
sub
icebp
test
es
dec
mov
enter
aam
add
lea
or
test
sub
jo
xor
add
mov
pop
in
sub
dec
in
dec
fcomip
mov
or
cmpl
push
mov
dec
jae
jae
mov
rolb
movsb
shr
pop
mov
outsb
aaa
pushl
sbb
loop
fnsave
dec
add
lcall
out
arpl
imul
out
sarb
fwait
dec
idivl
push
sbb
xchg
pop
adc
sbb
lret
mov
push
loop
xor
push
enter
cmp
xchg
out
sbb
loope
dec
pop
test
jb
je
stos
mov
ljmp
out
repz
arpl
imul
pop
jb
lret
lret
cmp
cmp
ds
xor
int
out
call
xor
fcomp
and
inc
cmpsb
xchg
mov
lock
mov
stos
sbb
or
enter
lcall
cmc
adc
aam
mov
inc
xchg
pop
adc
mov
inc
jnp
and
fsubr
test
pop
push
or
lods
gs
movsl
enter
loop
push
test
jae
iret
fdivs
dec
int3
test
cli
mov
mov
mov
add
mov
or
mov
dec
in
outsb
orl
dec
call
shrl
push
adc
add
scas
cmpsb
pop
pop
jnp
jle
je
sti
mov
mov
mov
inc
mov
lods
das
les
enter
xchg
mov
lcall
clc
add
cmc
sub
xor
int
xchg
lods
lods
and
scas
shlb
inc
inc
add
adc
jle
fs
mov
push
stc
iret
cmpsl
pop
mov
sub
push
das
dec
stos
xor
mov
out
out
xchg
mov
jb
fwait
inc
add
aas
xor
cmpsl
sub
sarb
mov
pushf
inc
clc
jbe
enter
inc
pop
jns
imul
icebp
pop
leave
add
jmp
daa
jecxz
insl
and
push
jnp
test
fnstsw
push
inc
inc
pop
cmpsl
xor
into
mov
inc
out
pusha
inc
pop
mov
popa
xor
or
pop
sub
jmp
xor
aaa
bound
lahf
cmp
andl
xlat
jno
mov
das
mov
adc
aaa
loop
cmpb
dec
push
add
jmp
lea
test
out
insl
ficoml
sub
add
int
pop
sub
out
or
xchg
test
adcl
enter
repz
out
dec
or
mov
cmpsl
jae
push
pop
lret
testl
lods
push
pop
int
xor
push
sbb
jbe
inc
movsb
or
push
rcl
push
lea
jmp
fisubl
ds
arpl
sti
in
xor
nop
pop
iret
and
xchg
ret
mov
loope
sahf
cmp
sti
ret
and
cmc
jnp
repz
dec
jl
movsl
xor
mov
mov
jo
pop
push
cld
xchg
hlt
push
push
xchg
out
sbb
pop
adc
mov
push
jbe
popf
sarb
sub
scas
add
xchg
mov
in
in
fnsave
stc
jecxz
out
call
rcrb
cmp
cs
loop
xchg
cwtl
push
cli
add
test
mov
xor
lods
add
ljmp
ss
stc
push
insb
enter
test
cmp
loope
xor
insl
scas
sub
sbb
fadds
pop
pop
pop
fldt
or
sub
test
ficoms
push
test
fstpt
xchg
ror
mov
and
sub
inc
jg
mov
mov
sub
sbb
fwait
jne
inc
std
pop
jo
and
mov
loop
add
loop
sbb
ja
mov
pop
adc
fucomp
mov
push
mov
mov
jbe
test
mov
inc
dec
push
call
mov
and
sbb
shrb
lods
jnp
mov
ret
xchg
fsubs
jns
mov
loop
xchg
outsb
sbb
subl
into
adc
rclb
cli
xchg
inc
orb
mov
mov
adc
push
movb
dec
pushw
movsl
and
pop
mov
test
mov
pop
into
cmp
lret
sub
pop
dec
lret
mov
mov
push
stos
fldt
ja
push
test
add
xor
mov
lods
js
shlb
jl
pop
push
mov
std
divb
push
call
xchg
cmp
jae
pop
ss
push
fmull
xor
ja
in
sti
push
pop
xor
aaa
in
xlat
push
lret
or
mov
les
out
dec
cmc
pusha
pop
fsubrl
lea
push
dec
mov
mov
push
sarl
lcall
add
xlat
jae
sti
jp
pop
in
and
inc
aam
mov
pop
mov
cwtl
inc
aaa
lods
jns
jmp
jo
call
xchg
in
fs
xchg
pop
push
cmp
test
sbb
testb
hlt
popw
adc
js
dec
fcomip
push
sbbb
sub
mov
mov
mov
jle
jle
adc
movl
pop
out
sti
arpl
ja
inc
xchg
loopne
sub
pushf
aaa
movsl
ror
mov
test
sub
xor
in
loope
mov
shlb
mov
int
push
mov
inc
mov
bt
xor
dec
loopne
cmpsb
push
cld
fsts
dec
std
mov
lea
enter
pop
shrb
and
test
xchg
add
stc
pop
cvtpi2ps
lods
inc
fldenv
mov
loope
shr
or
or
ljmp
push
pop
testb
xchg
xchg
sbb
and
repnz
and
shlb
adc
and
hlt
xor
mov
clc
popa
clc
jmp
sub
inc
mov
xchg
sub
mov
xlat
bound
xchg
xchg
clc
jecxz
sub
add
cmp
pop
repnz
cmp
adc
inc
pop
and
xor
ret
mov
and
mov
imul
push
into
in
mov
sub
outsb
repnz
xor
or
sub
jae
shl
fdivs
mov
push
push
ds
mov
fs
and
push
pop
aas
dec
jb
mov
lcall
adc
push
inc
fiadds
lcall
popa
mov
sbb
mov
insl
out
mov
mov
pusha
rclb
adc
in
xor
fldl
std
xchg
cmp
dec
out
pop
sbb
subb
aad
push
out
das
imull
or
dec
pop
jl
xchg
sub
popf
in
iret
divl
xchg
inc
idivl
pop
cmp
repz
dec
shl
mov
aad
js
rcl
jo
push
mov
ret
roll
mov
out
test
nop
mov
mov
dec
idivb
pop
cmp
stos
cmp
mov
mov
or
test
sbb
cltd
std
sub
cwtl
mov
fldz
test
inc
cwtl
in
sbb
mov
xor
push
std
or
daa
and
push
or
adc
inc
push
pop
hlt
mov
push
cwtl
test
movsl
cmp
cld
cltd
xor
or
mov
andl
insb
aam
add
daa
push
pop
mov
dec
adc
mov
pop
repnz
dec
in
std
jns
das
aas
imul
push
xchg
adcb
dec
aad
cmpsl
ds
not
push
cmp
pop
imul
jl
jecxz
mov
filds
cwtl
adc
sub
mov
inc
dec
loop
test
sti
xorl
popf
mov
iret
fdivp
xchg
icebp
test
movsl
arpl
addl
sti
xchg
jo
sbb
jbe
sbb
adc
iret
xor
rcrb
inc
shrl
xchg
dec
mov
sahf
pop
int3
arpl
inc
xlat
fs
cmp
sbbl
mov
inc
rcrl
mov
mov
lret
into
gs
push
jmp
jge
test
sub
lret
pushl
sub
mov
les
loope
xlat
mov
leave
cmp
pop
ljmp
sub
mov
lock
push
jmp
adc
adcb
dec
adc
ss
data16
pop
leave
fdivl
sti
fsubrs
fstl
into
int3
pop
cmc
stc
out
cwtl
das
loope
mov
xchg
je
and
pop
cmp
xchg
sahf
xor
xor
shlb
aas
lods
pop
shlb
mov
jne
je
jb
xor
mov
sub
rcrb
mov
pop
sahf
and
pop
hlt
hlt
sbb
rol
pop
ret
add
cmp
xor
out
jns
and
cmp
jp
sbb
or
cs
loope
arpl
pushf
shrb
mov
fnsave
mov
les
pusha
idivl
fdivrl
shr
or
jl
lret
popf
arpl
push
pop
sbb
mov
ret
mov
add
mov
pop
sahf
or
stos
cmp
pop
jmp
addr16
sti
or
lahf
jge
inc
fadd
sahf
jg
adc
jbe
xor
add
testb
xlat
lea
xlat
lcall
lahf
js
sar
jb
addr16
stc
cmpsb
adc
addl
lret
pop
icebp
addr16
sahf
movsl
adc
xor
in
mov
flds
cwtl
mov
enter
pop
bnd
movsb
cmp
sbb
mov
adc
jmp
cmpsb
shrb
mov
clc
stos
mov
pop
mov
fisttps
mov
jns
in
repnz
push
scas
inc
js
clc
fcomps
es
sahf
push
sbb
sbb
push
push
scas
inc
inc
mov
test
pop
mov
out
jns
in
push
stc
nop
rorb
ds
sbb
or
sbb
or
mov
sub
es
stos
inc
dec
sarb
iret
add
lods
ret
jl
push
outsb
jbe
ret
stos
insl
add
inc
dec
in
and
rsqrtps
stos
inc
sub
and
ret
negl
dec
sahf
stc
lret
outsb
push
in
pop
bound
iret
cwtl
cmpb
icebp
xor
mov
test
insl
add
movsl
icebp
mov
shl
jle
cmp
stos
lods
xchg
sub
int3
or
mov
fidivrs
adc
mov
jecxz
sbb
xor
pcmpeqd
pop
push
cwtl
sub
or
sub
sarl
pushf
xor
cmp
or
push
fisubrl
jne
push
addr16
icebp
mov
outsb
add
lea
jle
outsl
scas
and
add
int
shll
or
sbb
fbld
dec
pop
jne
inc
mov
dec
pop
hlt
jp
lock
adc
xchg
pop
sbb
push
mov
in
mov
ja
lea
cltd
dec
push
mov
pop
sub
pop
push
jnp
fildll
imul
fnstenv
jmp
out
xchg
mov
mov
inc
lods
inc
cmp
mov
pop
xlat
outsb
dec
xor
lods
pop
add
xorb
repz
xchg
sbbl
aad
sub
xchg
movsb
mov
mov
pop
fidivs
dec
into
gs
mov
push
dec
dec
mov
jnp
imul
pop
inc
fadds
push
cmc
ljmp
mov
lds
mov
push
loop
mov
scas
nop
inc
fadd
shl
jns
insb
ret
pop
popf
jecxz
jmp
xor
sub
push
aas
dec
or
jo
call
ret
pop
push
mov
and
mov
roll
stos
aam
int
inc
pop
cmc
jae
jb
fcomps
sbb
lret
arpl
add
lods
or
xchg
adc
and
call
xchg
mov
adc
lahf
call
sbb
in
cli
aad
pop
movaps
cmpb
in
adc
rcrb
and
mov
fldcw
lahf
or
add
out
cs
adc
mov
pop
mov
in
sub
xstore-rng
cmpsl
add
stc
nop
mov
fmull
out
out
sub
loopne
dec
loopne
add
shll
push
out
insl
xchg
loop
add
es
arpl
mov
push
out
sti
xchg
ds
clc
into
pop
mov
push
jg
adc
fs
sbb
mov
ret
sbb
mov
push
call
sbb
iret
data16
push
in
loopne
jp
rcll
dec
aam
dec
loopne
cmc
mov
dec
mov
repz
sub
push
fwait
cmp
or
dec
loop
sub
push
call
mov
aas
scas
rorl
movsl
les
fadds
xlat
imulb
movb
lea
jge
fisubrs
pop
push
call
mov
ret
popa
clc
mov
stos
inc
adc
xchg
sub
mov
cmp
ficompl
in
test
sahf
insb
add
setns
sbb
fbstp
movsl
push
out
ss
fsubs
enter
outsb
push
out
fiaddl
cwtl
lret
sub
lods
push
in
inc
xlat
fucom
fs
pop
call
cltd
xlat
adc
andl
mov
push
xor
nop
ss
test
hlt
mov
das
mov
fcompl
int
and
loopne
out
test
add
mov
cli
xchg
insb
sbbl
sbb
mov
lds
ret
ss
mov
add
jecxz
shlb
bound
inc
cltd
adc
cmc
cs
inc
push
push
adc
xchg
rcrl
stc
sbb
mov
into
mov
dec
mov
push
sbbl
in
xor
inc
push
inc
fdivs
xchg
sub
cltd
push
popf
or
mov
sbbb
pop
cmp
cld
jp
in
lea
ret
sbb
and
imul
lods
test
movsb
or
sub
dec
loop
dec
jp
xor
cmp
bound
jne
sbbl
mull
inc
pop
sbb
lods
jge
dec
inc
into
add
inc
xrelease
cmp
sti
xchg
lret
imul
add
adc
jne
xor
and
cmc
add
jo
push
mov
mov
mov
test
fwait
aad
push
out
out
sbb
fidivs
mov
mov
es
xor
jmp
jecxz
outsl
or
pop
lahf
nop
sahf
xor
rorb
adcl
inc
and
jb
push
sub
add
cmp
and
jmp
mov
fcompl
arpl
ss
xchg
push
mov
mov
shrl
lds
add
mov
gs
jg
ljmp
jmp
movsl
push
call
loope
mov
mov
test
cmc
shrb
roll
and
pop
pop
cmc
push
ret
adc
int3
or
popa
mov
sbb
pusha
mov
jae
stos
push
sarl
push
call
ret
imul
into
mov
pop
mov
shrb
rolb
ds
and
mov
ret
or
and
je
roll
pop
loop
test
fimull
lock
push
in
fists
arpl
inc
add
arpl
xchg
push
mov
test
dec
out
cmp
and
mov
xlat
add
mov
sbb
ret
mov
jb
mov
xchg
push
insl
clc
and
test
jae
mov
lret
mov
orb
repz
cwtl
inc
pop
sahf
xor
lods
out
ja
icebp
fsubr
ljmp
pop
push
jb
lods
ljmp
cmp
sub
negl
sub
jp
mov
add
sbb
cmpb
mov
test
pop
btr
jne
movsl
loop
sbb
hlt
je
rcr
arpl
dec
or
into
and
dec
shrb
stc
out
in
jmp
or
xchg
pop
lret
cmp
rorb
hlt
push
in
inc
inc
rorb
pop
lea
ret
mov
mov
dec
adc
roll
pop
daa
pop
out
ds
cmpsl
cld
ss
in
sti
inc
mov
xor
mov
lcall
jae
lock
add
mov
repnz
in
push
or
iret
xchg
pop
ljmp
enter
pop
push
popf
mov
ret
jg
and
fwait
xor
inc
mov
jl
jl
and
insl
ret
jbe
dec
jno
mov
mov
into
mov
shl
dec
shr
mov
dec
into
gs
cmp
adc
loop
sti
std
mov
add
decb
es
pop
cltd
dec
aaa
into
cmp
cmpsl
ds
sahf
scas
or
xchg
stos
iret
push
in
fmul
adcb
stc
or
mov
fildll
adc
scas
inc
movsb
bound
push
mov
aaa
into
add
inc
fcomps
push
jmp
xchg
adc
fisubrl
pusha
idivl
fstpt
iret
out
mulb
mov
mov
gs
out
roll
lods
xchg
add
cwtl
xchg
mov
fisttps
das
aaa
into
pusha
cs
sub
shl
jp
inc
pusha
divl
movsl
cmp
push
and
ja
outsb
pop
lock
mov
repz
dec
pop
hlt
adc
mov
mov
or
cs
inc
nop
cmpsb
sub
pusha
push
stc
aaa
into
sub
xchg
bound
add
cmp
mov
cwtl
iret
or
ds
loope
push
rol
sub
mov
adc
or
dec
mov
inc
std
sbb
inc
mov
ja
push
js
lcall
vxorps
test
daa
jno
pop
sub
push
call
insb
push
aad
pop
lea
xchg
out
jns
xor
aaa
into
pop
push
shlb
jl
fildl
leave
pusha
leave
popa
test
ljmp
pop
movsl
int
push
shufps
test
dec
inc
ja
push
imul
cltd
xor
arpl
push
jg
test
or
or
roll
imul
cld
jl
bound
jbe
dec
lds
mov
lahf
or
out
in
push
inc
pop
hlt
xor
and
mov
pop
mov
mov
jae
dec
out
xchg
lret
bound
leave
adc
push
fsts
or
jp
sub
fiadds
insl
stos
subb
cmpb
pop
and
dec
fisubrl
push
pop
out
dec
pop
dec
loope
test
sti
sbb
mov
cmpsl
jbe
stos
inc
dec
xchg
ja
leave
outsb
xchg
sub
xlat
outsb
inc
mov
lret
ss
sbbb
sub
in
sbb
movsb
sub
dec
ljmp
xor
ja
cwtl
dec
jbe
pop
ret
xchg
xchg
sub
sub
int3
imul
loop
test
lcall
punpcklwd
jle
aam
insb
test
pop
sbb
inc
fadds
mov
xchg
fsubrs
ror
mov
and
xor
mov
fs
xchg
push
dec
loope
cmp
cltd
je
or
imul
and
cmp
out
lods
gs
das
pop
or
jnp
inc
adc
stos
adcl
inc
ljmp
arpl
and
call
or
lods
sub
outsb
pop
lods
jne
cmp
cld
aas
push
inc
sahf
xor
dec
xchg
enter
fsubrs
dec
rcrl
cmpsb
cmp
lods
jb
pop
inc
int
inc
loopne
mov
dec
xchg
les
mov
push
add
es
jl
mov
jae
add
jae,pn
lret
xchg
leave
pusha
or
sbbb
jne
pavgb
imul
jmp
cmp
jne
pop
fstenv
sub
xor
stos
lret
icebp
shrl
sub
jg
inc
mov
popa
mov
xchg
push
sbb
jle
aas
repz
add
pop
sub
dec
sti
xchg
pop
lret
in
test
jle
add
push
imul
popa
out
xchg
mov
outsb
add
jl
lock
sahf
adc
orb
insb
mov
and
pop
mov
sbb
add
adcb
adc
lcall
psubq
aad
xor
repz
jb
pop
xlat
and
jecxz
scas
inc
popl
loop
mov
arpl
push
sbb
movsb
mov
sbb
in
aad
pop
icebp
testb
or
outsl
outsb
sub
orl
inc
lret
sbb
das
adc
aaa
jecxz
xorl
int
push
ljmp
mov
ret
mov
cmc
insl
mov
cwtl
test
pop
pop
leave
jb
in
jnp
push
push
push
scas
inc
popf
jno
dec
mov
lds
xor
ss
je
cmp
imul
sbbb
push
lock
stos
and
jo
adc
cmpsb
cmp
lret
addr16
jmp
or
in
test
imul
pop
or
ret
cmpsb
jnp
xor
cmp
shll
jnp
repnz
lret
push
xchg
sub
das
in
mov
rcll
mov
movsb
cmp
xlat
pushf
xor
sub
out
repz
in
mov
push
out
and
fstp
out
lret
test
popa
out
std
xchg
loope
push
in
mov
mov
xchg
and
jle
fcompl
int
sbbl
xchg
adc
push
ljmp
xchg
cmp
jo
pop
mov
out
add
adc
or
mov
jle
insb
fnstenv
push
sahf
xor
sti
pop
loopne
pop
mov
xlat
outsb
stos
xchg
sub
mov
imull
jno
inc
mov
push
xchg
shrl
jne
stos
and
jbe
mov
int
jbe
inc
xlat
adc
ss
cmc
push
jmp
outsb
add
bswap
push
in
mov
cmp
xchg
stos
xor
mov
out
stos
inc
push
dec
push
or
lods
jge
and
adc
mov
pop
cmc
frstor
push
out
jae
decl
enter
pusha
xchg
inc
test
lds
adc
in
fiaddl
mov
stc
and
nop
jg
lock
inc
mov
push
mov
sbb
aad
mov
pop
testb
pop
out
addr16
inc
cmpxchg
gs
mov
repz
sbb
pop
adc
inc
stos
jge
clc
dec
lret
stos
inc
std
insb
and
popf
push
shlb
mov
repz
les
mov
mov
push
lods
stc
mov
jnp
cmpsl
add
dec
push
fistps
jp
xor
inc
pop
lea
cld
jae
lock
pop
and
loope
rcrw
push
dec
push
and
mov
inc
std
xchg
ss
repnz
xor
out
inc
cmp
cmp
rclb
jno
ljmp
ljmp
sub
adc
ss
inc
ss
mov
or
aas
out
lock
popa
sub
imul
jno
sbb
out
mov
mov
mov
arpl
or
adc
js
loopne
and
sub
call
aaa
outsb
insl
repz
pop
inc
add
inc
cmp
call
dec
add
ret
lret
and
push
lods
ret
mov
aas
movups
test
pushf
scas
movsl
ds
and
pop
icebp
xor
sub
repz
mov
arpl
jno
cli
xchg
inc
push
or
xor
dec
fists
xor
pop
push
iret
cmp
push
rcrl
in
pop
push
inc
shrb
xchg
pop
bound
call
outsl
jb
mov
xor
pusha
in
jg
xor
montmul
cmpsb
add
cmp
pop
ret
rorb
arpl
cmp
lods
inc
push
pop
dec
aam
inc
mov
jmp
insb
or
adc
and
pop
push
ds
push
xchg
movsb
mov
xchg
stos
test
stc
sbb
cmp
repz
mov
mov
cmp
jmp
push
shll
rolb
repz
mov
jns
nop
in
and
nop
cmp
aaa
insl
cltd
pop
idiv
dec
add
push
mov
shll
aaa
scas
aaa
jmp
test
out
les
loop
lcall
data16
mov
testb
into
insl
loope
dec
int3
in
pop
fisttpll
dec
pop
aam
sub
pusha
mov
xchg
stc
mov
ret
test
pop
push
popf
mov
hlt
jo
es
loop
jecxz
adc
pushf
das
xor
push
xchg
dec
pop
ljmp
mov
mov
jnp
repz
dec
push
cmp
inc
sbb
sti
sub
scas
out
mov
stos
push
imul
inc
fdivs
aam
xlat
loop
cltd
dec
sbb
mov
and
lcall
inc
imul
pop
cld
pop
mov
pop
orl
popf
ljmp
test
lret
sub
or
rclb
lea
in
mov
idivb
mov
mov
inc
xlat
test
mov
xchg
xchg
in
pop
lock
iret
hlt
jmp
mov
push
inc
ret
ja
es
test
dec
push
enter
in
cmp
sub
les
pop
hlt
clc
pop
adcb
sbb
dec
mov
cmp
jo
lds
sub
pop
leave
jg
fstl
fcmovu
insl
ljmp
and
sub
mov
xor
jns
jmp
jo
push
scas
xor
or
jnp
cld
andl
push
mov
cmp
or
inc
ret
in
or
pop
lods
cmp
cli
pop
push
or
in
jnp
jnp
mov
enter
or
jbe
jmp
mov
shrl
cmp
fisttps
adc
mov
mov
out
scas
gs
sti
shl
jp
sbb
scas
dec
adc
cli
xchg
push
stos
sbb
adc
add
daa
lahf
push
jo
add
pop
mov
ds
push
sbb
pop
sbb
dec
loope
pop
scas
inc
dec
dec
push
popf
cmp
jns
cmp
call
xor
arpl
cmc
push
jp
adcb
inc
mov
ret
adc
inc
xchg
bound
fldt
xchg
movb
jbe
in
outsl
fidivl
xor
push
jmp
add
ja
repz
mov
dec
aas
add
add
xor
inc
xor
mov
scas
adcb
out
xchg
cli
lcall
xor
or
aam
aas
lods
mov
filds
or
imul
dec
cmpb
or
adc
lods
inc
add
cs
dec
shrb
cmp
das
das
mov
add
outsb
in
xor
pop
pop
push
pop
jl
dec
xor
jae
push
rorl
sbb
sub
add
sbb
enter
and
hlt
dec
mov
dec
or
mov
sub
stos
pusha
inc
fwait
xor
test
in
dec
add
cmpsb
cmp
xchg
xor
nop
push
fstpl
aas
test
dec
ss
nop
daa
and
ficompl
and
cli
inc
jge
enter
lcall
mov
add
test
fnsave
mov
je
lahf
nop
push
and
insl
jno
mov
xchg
js
adc
mov
inc
cmp
je
jbe
xchg
mov
pop
mov
pushf
movsl
les
pop
dec
add
jg
mov
fldcw
dec
pusha
clc
jnp
mov
adc
lea
popf
loope
mov
sbb
push
shl
mov
mov
add
pop
clc
addl
or
pushf
aam
push
add
lcall
scas
cmp
shll
rcrb
push
repz
push
jle
push
push
dec
lret
mov
and
push
sub
adc
mov
dec
jp
cmpsl
mov
dec
js
vpsrlw
pop
add
mov
fs
scas
inc
js
or
xchg
mov
ret
stos
mov
and
mov
push
in
dec
adc
movsb
inc
adc
stos
inc
xchg
loop
mov
aas
jmp
out
lahf
je
adc
daa
fsubr
mov
and
and
int
add
push
into
icebp
in
mov
sub
xor
neg
jb
in
frstpm(287
xchg
pusha
jp
push
push
fmull
pop
addr16
aam
mov
and
mov
sar
mov
add
stc
int
adcb
insl
mull
pop
fnstsw
mov
inc
adc
ret
loop,pn
inc
adc
push
test
adcb
adcb
addr16
movsb
fwait
mov
jb
mov
or
adc
ds
shrb
or
dec
incl
dec
inc
ret
insb
sti
pop
bound
push
jg
or
ret
or
ljmp
hlt
mov
jb
and
pop
decb
ss
sub
test
adc
test
push
mov
push
jle
xchg
adc
jbe
movsl
mov
lcall
neg
mov
jg
pop
or
nop
push
xchg
pop
icebp
ret
je
cmp
xchg
add
jge
and
jecxz
dec
mov
stos
mov
inc
mov
adc
es
cmpsl
mov
mov
xlat
and
cmc
outsl
cmc
xchg
lds
imulb
jp
inc
hlt
aaa
movsl
push
xchg
loopne
aaa
mov
add
dec
pop
mov
add
push
outsb
pop
out
jo
push
pavgw
loop
mov
jae
jb
incl
popf
pop
dec
cs
xchg
mov
aad
enter
negb
add
inc
ficoms
xchg
dec
xchg
fwait
pop
add
faddl
and
cmpsb
or
out
sahf
cmp
mull
sbb
push
pop
jmp
xchg
das
insb
maxps
cmpsb
cmp
ret
repz
out
rorl
sub
clc
mov
pop
and
push
pop
outsb
mov
outsb
cmp
or
int
or
pop
scas
mov
mov
add
cmpsl
out
mov
mov
int3
in
imul
jge
fyl2x
or
roll
stc
insl
jno
inc
sub
ja
inc
cltd
lcall
rcr
outsb
leave
push
mov
adc
lret
lods
shll
and
push
add
push
pop
lock
lahf
cs
cmpsb
fs
xlat
push
ds
repz
test
cs
aaa
lret
repz
scas
pop
or
inc
scas
dec
out
andb
outsb
lahf
hlt
das
pusha
loop
lds
mulb
testb
cmpsl
and
std
cltd
push
in
lret
and
jnp
popf
mov
inc
lock
mov
add
sub
push
ret
fdiv
mov
imul
add
ljmp
mov
imul
inc
xchg
mov
inc
clc
je
cld
inc
inc
dec
pop
repz
fwait
add
mov
jmp
add
icebp
mov
arpl
lods
leave
pusha
fists
enter
pop
xchg
fbld
dec
loopne
mov
fidivrs
add
xchg
sub
mov
in
hlt
sub
lcall
lock
fisubl
jo
add
std
mov
push
sbb
pop
lock
push
xchg
xchg
pop
xor
sub
lods
adc
ss
dec
push
and
jle
insb
mov
test
push
dec
leave
rclb
mov
add
pushf
and
xor
jl
rdmsr
xlat
cmp
es
leave
xchg
sahf
sub
mov
jne
add
insb
ss
shrb
sbb
int3
fnstsw
sub
rorl
dec
mov
sti
in
xchg
jecxz
pop
mov
shlb
or
and
test
jb
pop
xchg
test
sub
repz
or
scas
cmc
xchg
sbb
jecxz
in
sbb
stos
inc
or
mov
mov
push
xchg
lcall
dec
notl
inc
incl
mov
ficomps
arpl
mov
movsb
fldt
into
scas
jmp
pop
mov
js
aas
shlb
mov
ret
mov
adc
cmp
imul
shlb
rcrb
loopne
mov
cmp
pushf
popa
sub
scas
lods
lods
xchg
push
les
dec
addl
ja
xchg
aad
adcb
neg
xor
xlat
imul
xchg
dec
pop
cmp
inc
cwtl
mov
cmp
or
mov
mov
xor
add
push
in
cmc
sbb
dec
dec
adc
pushf
push
mov
divl
mov
jbe
std
pop
pop
add
lods
mov
into
leave
cmp
adc
or
andl
hlt
jmp
add
sub
cmp
cltd
inc
adc
or
shll
test
push
scas
movsl
mov
stc
out
mov
add
lret
pop
stc
inc
mov
pop
jg
cltd
xor
cmp
dec
outsb
stos
mov
outsb
jge
mov
mov
test
mov
and
push
mov
rol
repnz
pop
pop
mov
aaa
add
cld
push
mov
testb
xchg
enter
cmp
push
std
xor
dec
movsb
data16
addr16
outsb
ret
xor
out
pop
xchg
xchg
sbb
int3
repz
dec
pop
out
mov
add
mov
add
mov
mov
push
dec
or
scas
lahf
sub
dec
lea
ja
xchg
sbb
test
sub
mov
sahf
mulb
mov
sbb
test
inc
fwait
ja
dec
repz
mov
or
sbb
sub
arpl
push
sti
mov
imul
cmpsb
test
mov
imul
xlat
icebp
mov
push
ljmp
push
ss
inc
push
or
push
inc
clc
jne
adc
ss
cmp
cltd
push
push
lahf
push
push
sbb
xchg
ss
cmp
pop
or
add
cmp
xchg
adc
test
sub
fbld
xchg
mov
add
add
out
mov
shlb
jmp
or
out
pop
stos
push
jae
dec
idivl
add
dec
mov
xchg
and
mov
aas
icebp
sub
pushf
pop
shlb
pop
add
data16
jge
mov
cmp
testl
cli
out
xchg
sub
sbb
dec
cmp
ljmp
popa
fimull
xchg
sub
xor
movsl
fdivl
int3
icebp
mov
gs
in
cwtl
jb
pop
sbb
xor
and
shrb
mov
loopne
adc
inc
pop
lods
sahf
sub
addr16
jp
sbb
mov
out
mull
pusha
mull
aas
lcall
inc
mov
inc
fbld
pop
fwait
iret
mov
test
dec
mov
scas
adc
leave
insl
movsb
imulb
lret
call
dec
mov
inc
dec
arpl
xor
int3
imul
mov
push
xor
data16
xor
adc
orl
lret
arpl
sub
leave
orb
jo
push
jmp
xchg
jl
stos
fmull
and
sti
fisttpll
mov
mov
mov
xchg
mov
lcall
mov
or
int
mov
xchg
arpl
das
sub
fcomip
scas
xlat
repz
loop
inc
out
adc
sti
data16
mov
sbb
jnp
mov
push
pop
imul
arpl
pop
inc
mov
dec
mov
cmpsb
hlt
fs
loop
inc
mov
mov
insl
mov
mov
lahf
xlat
jmp
mov
and
es
movsb
cmp
fld
ljmp
repnz
add
lods
xor
sti
stos
add
lock
and
shrb
or
dec
adc
inc
mov
ja
sub
xchg
sub
jns
xor
and
xor
stos
xchg
push
sbb
mov
imul
mov
icebp
orb
xor
adc
dec
loop
pop
xchg
sbb
jo
movsl
shrl
push
lock
ljmp
icebp
ljmp
out
sarl
lock
and
adc
jb
inc
call
aas
xchg
adc
jns
sub
mov
jmp
mov
xchg
scas
lcall
mov
adc
inc
ret
sti
sub
or
add
add
mov
cwtl
jmp
xchg
sub
jb
add
or
jl
arpl
fstpl
jne
sti
fisttps
test
dec
loopne
aam
xchg
mov
lods
mov
fcomip
jecxz
bound
jb
push
dec
cmp
and
ficoml
xchg
dec
ficompl
mov
sub
fsubl
or
pop
lea
push
jns
push
stos
je
cmp
xchg
sub
inc
ljmp
mov
roll
shrb
cmp
mov
inc
mov
push
cwtl
das
cmp
outsl
adc
mov
push
xchg
inc
pop
jecxz
xchg
pop
je
xor
int3
mov
adc
pop
scas
xchg
lea
pop
test
out
inc
jmp
jge
lock
sbb
or
leave
sub
aas
xchg
gs
fadds
fadd
dec
stos
cmpl
pop
mov
hlt
xorb
cmpsb
outsl
sbb
cmpl
ss
outsb
push
inc
into
rorl
push
inc
inc
loopne
cmp
xor
in
loope
and
int3
pop
loope
in
lcall
fadd
pop
or
pop
push
pop
imulb
dec
push
ja
sbb
add
inc
insb
inc
push
dec
xor
jg
iret
loopne
adc
jmp
adc
fwait
jmp
dec
push
sub
scas
add
in
add
xchg
jbe
xchg
and
sub
add
repz
clc
add
add
cmpsb
jmp
stc
adc
orl
mov
mov
das
scas
out
xchg
mov
std
sahf
push
mov
cli
mov
addb
cltd
sbb
adc
jns
inc
in
mov
lock
int
xor
jno
fwait
xor
ss
pop
repz
popf
push
push
jo
in
test
cmp
imul
mov
mov
fcompl
cwtl
cs
and
and
subb
ret
pop
jne
mov
mov
scas
mov
out
mov
mov
icebp
pop
inc
ds
mov
sub
fsubrs
dec
sbb
and
cld
movsl
cld
stos
inc
sub
sub
mov
or
jae
cmp
mov
sub
stos
sub
cmp
inc
imul
xor
dec
rclb
vpaddsw
test
pop
stos
out
in
xchg
xchg
lods
mov
jo
pop
ljmp
xor
mov
xor
sbb
push
dec
cmpsl
dec
ss
in
inc
push
decl
jb
call
jp
dec
mov
push
inc
fiadds
leave
jno
js
and
in
cmpsl
jbe
cmpsl
dec
add
pop
outsl
popa
lcall
push
int
add
jge
push
shrl
shll
int3
jge
sub
sahf
xor
repz
loop
cmp
in
and
add
divl
push
or
and
negl
jge
pop
mov
sbb
push
inc
xor
dec
mov
in
rorl
mov
dec
loopne
mov
sahf
mov
jp
repz
outsl
mov
add
or
jge
bound
std
je
and
fmuls
test
dec
jb
mov
jmp
or
lcall
adc
lds
fiadds
mov
loop
lds
stos
add
cmpsl
adc
adc
mov
jno
pop
shl
lret
iret
push
inc
inc
dec
jecxz
pop
cmp
mov
jecxz
jnp
outsl
fstps
pop
push
inc
fwait
fs
cwtl
xchg
repnz
ret
sub
repnz
nop
lods
sbbb
push
test
lea
inc
popa
mov
mov
mov
dec
add
lea
aas
jnp
lods
pusha
pop
ret
imul
rorb
or
repnz
call
subl
sbb
icebp
jb
dec
cmp
xor
in
rclb
jg,pt
cmpsb
sub
movsl
test
jns
cli
shr
fcmovnbe
into
gs
mov
leave
loopne
add
and
das
mov
mov
mov
ret
xor
mov
pop
je
pop
push
cmp
dec
sub
adc
sbb
imul
adc
pop
sub
mov
fmull
mov
fisttpll
mov
mov
outsb
add
lahf
xor
pop
pop
push
sbbl
jl
pop
dec
nop
sti
xchg
lock
mov
xor
jle
inc
push
mov
dec
and
inc
jb
sbbl
or
in
pop
mov
daa
inc
sbb
sub
repz
push
mov
cmp
pop
lock
icebp
ds
and
xchg
mov
enter
mov
fnsave
xchg
shrl
nop
push
movsl
roll
ret
adc
xsha1
cmpsb
or
sub
mov
flds
add
sub
xchg
xchg
jo
popf
mov
ret
cld
mov
jl
push
sti
mov
mov
mov
xchg
pop
repz
mov
scas
js
or
mov
leave
mov
pop
sbb
inc
lcall
and
push
stc
adc
xchg
adc
popa
clc
pushf
stc
push
cltd
sub
push
push
pop
scas
aam
notb
movsl
pop
ljmp
negb
loop
sbb
out
sub
push
pop
push
stos
lret
push
mov
cs
lcall
sbb
rol
movsl
movsl
or
mov
cwtl
in
jge
push
sub
fistpll
dec
test
dec
popf
mov
cld
inc
stos
inc
int3
pushf
out
sub
test
lods
sub
push
jmp
shl
bound
lea
sub
fs
rcr
mov
shrb
sub
ja
dec
cmp
ds
inc
adc
sub
inc
add
mov
fiadds
lcall
mov
stc
cmpsl
add
and
and
pusha
aaa
cli
ljmp
lret
into
popf
mov
stc
and
cmp
jle
jns
fs
orl
jae
mov
mov
mov
dec
xor
cmp
push
push
push
lahf
das
inc
lret
pushf
push
adc
icebp
xor
test
add
sbb
insl
jmp
mov
fwait
pop
lock
lods
jns
xchg
mov
iret
pop
addb
dec
nop
mov
stos
imul
sti
mov
out
bound
sub
jae
mov
xchg
inc
pop
cmpsb
xor
adc
dec
or
cmp
sub
into
in
jge
cmp
mov
aaa
or
or
push
mov
aad
scas
or
sahf
mov
fadds
add
scas
inc
or
sahf
cmp
arpl
jl
mov
stos
mov
sbb
dec
fcmovb
dec
js
out
add
mov
add
cli
cmc
daa
dec
pop
icebp
loop
pop
loop
sbb
shll
iret
leave
ds
pop
jo
push
in
pop
aam
add
inc
rorb
lods
das
inc
ffreep
or
repz
lods
pop
out
cltd
mov
inc
fldenv
das
popf
out
aaa
lret
lock
pop
lcall
sub
rcr
jne
cmp
mov
sub
loope
fdivl
inc
cmp
xchg
jg,pt
loopew
loope
xor
push
pop
adc
sbb
rep
add
scas
jmp
pop
cli
push
sahf
mov
les
lods
adc
xchg
mov
cmpsl
addr16
lock
mov
fwait
inc
jmp
sbb
aas
mov
push
out
bound
dec
incl
lods
cwtl
int
mov
sbbl
mov
jo
cwtl
outsl
popf
fstpt
push
aam
jmp
sarl
leave
int
adc
jae
xor
xchg
in
ja
mov
adc
fsubs
cmpsb
mov
push
pop
mov
jne
scas
and
clc
xchg
fldt
push
mov
mov
add
rcl
insb
sbb
into
enter
dec
pop
leave
fs
call
mov
fadds
pop
ficomps
std
enter
faddp
jg
push
sub
scas
add
rorb
jo
add
add
and
pop
jbe
sti
mov
in
xchg
sbb
or
roll
xchg
dec
test
or
in
js
and
dec
pop
out
adc
mov
pop
mov
jecxz
mov
mov
push
mov
xchg
js
hlt
addr16
aas
lock
push
push
call
mull
outsl
add
dec
lds
ds
xchg
sub
in
mov
cltd
inc
xor
jg
jecxz
fimuls
stos
dec
inc
sub
enter
fisubl
xorl
jne
xchg
cmpsl
loopne
push
testb
mov
or
orps
xor
loope
icebp
into
ds
bound
push
scas
dec
pop
jo
pop
mov
mov
data16
push
mov
clc
std
ja
ljmp
lods
sub
stos
jecxz
add
stc
and
subb
jb
dec
jmp
add
test
mov
iret
push
adc
push
divb
xor
mov
in
mov
adc
and
xor
test
mov
jmp
std
and
lea
push
dec
iret
dec
scas
mov
in
in
adc
adc
xor
jno
xchg
in
push
lahf
ret
jp
fisubrs
xorl
pop
sbb
add
mov
loopne
cmp
mov
std
mov
divl
outsb
das
int
sbb
push
cmpsl
aad
mov
adc
in
inc
decb
mov
rclb
xchg
psubd
ds
xchg
hlt
push
lret
out
cwtl
js
mov
test
mov
loopne
sbb
sub
pop
pop
xchg
hlt
or
das
mov
loop
adc
bound
aas
push
sub
daa
jp
pop
sbb
and
cmpsl
jp
sub
or
stos
lret
fstpt
imul
push
les
sbb
cmpsb
sbb
xchg
jae
pop
mov
sub
mov
mov
mov
jb
add
sbb
mov
cmp
insb
sbb
dec
pop
jl
hlt
mov
jns
icebp
mov
shlb
jmp
ficompl
xor
add
pop
push
sub
cmp
jge
sub
stos
scas
inc
mov
fmulp
arpl
jbe
or
nop
daa
data16
push
mov
clc
push
mov
in
fistps
aaa
pop
cmc
push
adc
push
fcompl
sbb
enter
pop
lods
hlt
sub
repz
test
dec
fisubs
jecxz
rclb
or
push
jp
jnp
cs
fadds
jne
adc
cmp
xor
pop
push
in
mov
and
in
xor
out
inc
jle
je
out
rclb
popf
pop
add
mov
xor
xlat
enter
xlat
sbb
cmp
jg
push
insl
cmc
mov
cmp
mov
aas
cmc
adc
aas
dec
imul
test
sbb
xchg
mov
pop
mov
subl
mov
push
in
notl
insl
or
jne
dec
sub
imul
shl
or
cmpsl
pushf
xor
das
fcoml
gs
push
rorl
cmpsb
sbb
push
xchg
dec
inc
jno
lock
insl
loop
jnp
add
jo
mov
pop
push
movsl
inc
scas
xchg
sub
lahf
cmc
or
inc
xor
stc
loope
dec
jmp
ja
jmp
pop
sbb
iret
outsl
pusha
sub
pushf
mov
out
push
sahf
xchg
jbe
push
fcmovne
test
dec
outsl
in
and
push
xor
mov
sub
adc
stos
or
xor
mov
jmp
cmp
xor
sahf
mov
pop
or
add
inc
jg
push
test
fcoml
aaa
add
inc
je
jbe
mov
test
xor
mov
stos
and
add
sbb
imul
bswap
pop
push
lock
loopne
mov
sbb
mov
xchg
jge
out
jp
mov
mov
ret
pop
lcall
fidivl
movsb
jns
rclb
pop
push
mov
mov
dec
and
insl
aaa
xchg
cmp
mov
dec
pop
xor
clc
xchg
cmp
into
mov
je
jle
or
cld
push
jo
mov
dec
inc
mov
mov
jno
cmc
gs
push
movsl
cs
loope
cmovae
out
adc
lea
js
fsubrl
xor
sbb
ficomps
jae
data16
dec
int
mov
push
ljmp
push
add
pop
xor
mov
push
imul
mov
push
cmp
shll
or
fs
jno
or
mov
inc
dec
bound
pop
icebp
daa
mov
add
jns
test
in
add
stos
icebp
imul
mov
pop
sub
sub
push
pop
xchg
sub
sti
cwtl
sbb
ss
arpl
mov
mov
out
adc
jb
lock
jno
jmp
mov
lock
lret
mov
mov
or
mov
cmp
imul
cmp
push
testl
in
mov
and
mov
jb
sub
add
cmc
xor
xor
xchg
popf
mov
sbb
xor
dec
in
cltd
cltd
and
lods
scas
add
add
and
mov
pop
xchg
fimull
pop
fidivs
daa
inc
dec
fbstp
mov
data16
and
xor
push
adc
jb
mov
or
adc
sbb
dec
scas
sbb
leave
pop
jo
cmc
gs
adc
imul
mov
sbbb
mov
push
sbb
stos
out
xor
bound
daa
popf
xchg
jno
add
mov
mov
pop
inc
mov
jle
sbb
test
push
outsl
jo
inc
mov
es
xchg
sbb
mov
jg
in
add
push
pop
and
cmpsb
inc
fcoms
gs
sub
movd
dec
cmc
mov
adc
cmpsb
ja
test
cwtl
sub
pusha
pop
scas
rol
xor
es
fists
inc
aaa
scas
pop
pop
pop
pop
int
mov
sbb
sti
jns
dec
loopne
iret
lods
sub
into
push
in
clc
dec
arpl
mov
andb
inc
daa
mov
cld
sbb
dec
sbb
subb
mov
fdivs
or
lods
mov
sti
xchg
inc
int3
jg
rcrb
mov
outsl
cmp
in
mov
sarl
xchg
xor
jecxz
in
addr16
jb
lods
xor
scas
inc
push
sub
add
orb
fistpll
sbb
xor
sbb
shrl
dec
pusha
loop
int
or
jmp
cmpsb
insb
cmp
mov
into
sub
fmull
aam
out
mov
pop
push
sbb
outsb
mov
adc
cmp
shl
mov
aad
push
dec
in
adc
mov
pop
insb
add
mov
mov
loop
or
jecxz
test
les
ret
cmp
push
dec
loopne
xor
fsubl
gs
inc
pop
movb
mov
mov
cmp
and
in
pop
insl
and
nop
popa
jmp
sbb
ficompl
imul
jns
ljmp
xchg
jle
cmp
xor
push
push
out
jae
inc
jmp
aaa
sbb
enter
add
std
sti
fwait
cmp
ja
add
jmp
jp
push
lods
fcompl
dec
out
mov
outsb
insl
mov
push
clc
jae
adc
popf
lea
or
les
adc
or
aam
in
or
cmp
cltd
pop
xor
push
loopne
jbe
pop
adc
roll
jae
add
mov
stc
cmp
clc
in
test
frstor
aas
mov
scas
push
fcompl
sub
lret
fdivs
push
iret
and
add
aam
test
ret
sti
popf
mov
mov
sahf
jnp
rorb
xchg
std
mov
cmc
loope
push
leave
push
pop
lahf
pusha
cmp
scas
push
pop
adc
or
mov
sahf
xchg
xchg
int3
stc
mov
lcall
std
pop
aaa
and
and
push
xchg
out
aad
std
pop
push
cmp
aad
les
cmc
adc
out
mov
xchg
lds
dec
adc
ss
fs
cld
cmp
movsb
xchg
js
jmp
sbb
lcall
test
sbb
stc
xchg
aaa
xor
cltd
mov
mov
pop
cmp
push
push
or
xor
inc
fs
ss
mov
dec
pusha
psubusw
fucomp
pop
cli
xor
mov
sub
and
fwait
adc
pop
xlat
fxch
shrl
fwait
jns
lock
mov
subl
les
pushf
and
mov
ret
xlat
rclb
imul
or
jnp
mov
and
clc
adc
rcrb
adc
mov
les
xchg
xor
xor
loop
scas
xor
adc
popf
jp
outsl
lods
jnp
inc
cmp
adc
sahf
push
cli
sbb
mov
fwait
pop
fldl
inc
jg
addr16
cwtl
fiadds
mov
mov
cld
mov
test
mov
push
jns
xchg
jb
cmpb
push
iret
pop
sti
xor
notl
test
inc
sbb
jecxz
enter
adc
adc
cmp
testb
movsl
jmp
lock
aad
lcall
lahf
mov
or
lret
pop
inc
inc
pop
arpl
and
rol
mov
repz
push
scas
das
cmp
enter
xchg
or
inc
add
stc
les
pop
adc
lds
hlt
pop
jne
rcrl
inc
outsl
mov
popa
cmpsb
mov
cwtl
add
fistpll
rolb
fsubrs
fwait
pop
xor
lock
sbb
cld
test
inc
dec
pushl
imul
pop
test
andl
jle
adc
popf
nop
mov
out
cmpb
mov
sub
adc
mov
fdivrs
push
xor
pop
adc
lock
xchg
cmpsl
insb
hlt
inc
push
leave
push
hlt
jae
ljmp
sbb
sahf
dec
sub
fcomps
cmp
or
insl
imul
or
cwtl
add
add
pop
out
xchg
hlt
mov
iret
pop
add
mov
stos
inc
jns
sbb
dec
enter
or
pop
sahf
out
mov
mov
popf
fs
xchg
mov
test
xchg
fcmovbe
xor
sbb
adc
xor
test
push
in
movl
je
pop
sub
and
mov
cmp
rolb
mov
loop
ja,pn
gs
xlat
clc
xor
int3
add
cmp
mov
shlb
sti
lcall
inc
call
lahf
and
inc
mov
add
fldenv
ret
pusha
div
ja
mov
in
mov
aad
cmp
mov
pop
scas
das
and
pop
adc
adc
sbb
inc
les
push
or
fidivs
mov
cmpsb
jmp
sbb
sahf
lea
rclb
cmc
mov
pop
add
aam
jg
pop
aas
pop
mov
cmp
push
xchg
mov
scas
xchg
mov
sub
inc
xchg
lea
popf
pop
fbstp
lcall
cltd
popa
push
movsl
xchg
xor
call
add
pop
xor
fsts
lret
and
mov
ds
or
ret
sub
call
mov
sbb
ret
sbb
xchg
mov
cmp
sub
and
insl
lcall
lret
xor
dec
and
push
push
jnp
loop
out
mov
ret
push
fmuls
iret
cmp
push
in
leave
xor
popa
imul
rcll
mov
push
cmp
aas
insb
sahf
mov
sub
xchg
out
mov
mov
gs
and
xor
es
mov
test
sbbl
paddd
dec
in
sbb
jmp
imul
jmp
cmpps
cld
outsl
mov
jmp
std
cltd
cmc
push
dec
daa
mov
or
stos
stc
sbb
int3
jge
lcall
icebp
or
pushf
xor
pop
outsl
imul
movsl
in
fstpl
mov
out
mov
mov
ficompl
and
fcmovne
push
dec
out
jp
push
ljmp
jno
jo
jp
nop
jne
icebp
daa
mov
lods
iret
test
inc
inc
stos
jmp
push
cltd
xlat
xchg
loopne
xchg
xor
xor
mov
mov
jb
xchg
cs
or
xlat
mov
push
jp
int
mov
xor
jmp
jge
mov
ja
dec
insl
lcall
pop
fsubrs
lods
xor
out
imul
in
dec
add
aad
mov
xor
pop
add
pop
mov
cmp
jge
insb
push
lcall
arpl
inc
pushf
dec
pop
sub
mov
or
mov
stos
xchg
les
mov
cltd
mov
pop
pop
mov
push
inc
pusha
iret
cli
js
das
lods
xor
fadds
or
inc
fisttpll
fsubl
push
cmc
pop
push
xchg
movsl
testb
daa
cmp
in
and
lods
jmp
xor
pop
es
and
mov
loope
push
call
insb
mov
push
lods
or
sub
sbb
xor
xchg
mov
lods
push
cltd
pop
lock
xchg
mov
xor
push
inc
fimuls
and
cmc
push
iret
insb
xor
lods
mov
divl
mov
jns
call
aas
push
leave
fiaddl
xlat
in
dec
cs
imul
sub
popf
test
ds
or
adc
rol
jbe
insl
jge
xchg
sbb
dec
sub
cltd
pop
insl
lahf
not
clc
dec
es
icebp
cs
sbb
jmp
dec
in
dec
jbe
insl
test
shl
lds
aad
data16
mov
mov
push
test
and
or
or
mov
inc
mov
or
fnstsw
or
bound
inc
jmp
inc
jns
xor
add
mov
xor
lods
mov
mov
jno
ljmp
xlat
or
mov
cltd
pop
xlat
roll
jge
lahf
scas
inc
popa
enter
jl
lea
xor
jae
fsts
cmpsb
out
test
cmp
jp
or
test
mov
ja
mov
test
pop
mov
inc
leave
stos
loop
add
mov
pop
repz
mov
dec
xchg
fldcw
orl
sbb
stc
rorb
in
jp
pop
or
ds
and
pushf
pop
mov
imul
add
push
test
mov
dec
cwtl
in
sbb
sbb
mov
mov
fstpt
or
push
inc
push
cmp
cmp
movsb
aas
test
jne
adc
cmp
sub
in
out
mov
push
jno
dec
or
lret
dec
das
push
dec
orl
and
popa
cli
repnz
popl
mov
pop
jno
dec
iret
push
push
xchg
ja
jae
out
xlat
fidivrl
and
inc
mov
in
mov
inc
lea
mov
in
cs
add
dec
mov
xchg
cs
push
mov
dec
add
stos
in
mov
or
adc
rcrb
xor
xchg
in
push
cwtl
aas
add
repnz
stos
inc
sarl
out
enter
enter
and
pusha
insl
sbbb
mov
add
loopne
int3
adc
int
push
jno
fxch
jmp
leave
fistpll
push
add
sub
push
push
in
xchg
in
jae
sub
insl
call
test
cmp
xchg
stos
jge
dec
mov
incb
pop
pop
imul
jae
jno
movsl
cmp
movsb
xchg
mov
addr16
pop
aaa
stc
lret
inc
cmp
mov
cmp
sbb
repz
pop
and
lock
sub
and
jp
outsb
adcl
fiaddl
pop
rol
lret
pop
push
dec
cli
jne
add
ja
std
clc
iret
lcall
inc
mov
iret
pushf
jae
mov
ljmp
jl
xchg
in
popf
mov
jmp
repz
insb
push
dec
in
nop
sti
div
xchg
into
repz
cmpsl
stos
in
movsb
jge
cld
or
fnstenv
add
or
mov
push
divl
movsb
and
dec
cmp
inc
fdivl
add
and
inc
ret
pop
sub
dec
add
pop
test
xchg
push
add
xor
cwtl
add
cmp
cli
xchg
adc
int3
mov
test
loop
shll
iret
push
outsb
jle
fwait
push
sbbl
jns
or
xor
mov
cltd
mov
out
lret
adc
jmp
mov
mov
imulb
pop
add
jge
aaa
mov
push
pop
sahf
imul
and
lahf
cs
inc
stc
shlb
repnz
popf
mov
je
cltd
xor
mov
rcr
insl
loopne
jge
inc
add
mov
in
or
loope
mov
mov
or
jg
das
leave
test
mov
adc
repnz
dec
and
xchg
notb
dec
push
rorb
cld
outsl
mov
data16
sub
pop
mov
lods
int3
je
leave
inc
add
lret
adc
mov
cmovns
sbb
cmpb
mov
pop
jbe
cmp
or
cmp
cmp
mov
xchg
lcall
xchg
sar
adc
or
or
dec
mov
repnz
sbb
xchg
or
ret
mov
mov
mov
cmpb
ret
lretw
xor
aad
mov
or
arpl
out
xor
sbb
and
pop
mov
imul
std
dec
xchg
adc
add
pop
mov
imul
and
xchg
jb
push
fnstsw
sub
psadbw
mov
mov
test
or
mov
adc
imul
fs
cmp
or
iret
add
sbb
or
add
cmp
test
out
test
jbe
inc
test
dec
loop
xor
fisubl
inc
lahf
jg
arpl
mov
mov
jmp
clc
sbb
ds
dec
add
loop
fsubl
rcl
lds
out
ja
cmp
jne
pop
cmp
xchg
dec
sub
dec
loopne
sub
addr16
scas
add
add
jmp
shll
xchg
sub
sub
mov
movsb
outsl
or
movsb
mov
sub
addr16
and
sub
lret
lds
and
out
icebp
add
mov
dec
adc
test
inc
insb
xor
aaa
mov
or
jne
xor
iret
rcrl
xchg
jbe
cmpsl
sub
sbb
add
pop
or
add
shl
cli
inc
dec
mov
lea
ret
imul
jl
mov
cld
loopne
sub
xlat
or
mov
iret
fildll
js
push
sbb
lods
in
cmp
mov
mov
push
mov
ret
jb
enter
dec
and
decl
rcrl
js
xor
in
push
push
xlat
gs
pop
orb
int
icebp
std
cmpsb
mov
xchg
nop
sti
xchg
mov
negb
enter
mov
push
lock
jns
mov
loopne
xchg
add
adc
fdivs
cmp
add
orl
mov
insl
or
jmp
fistl
push
sub
adc
push
frstor
cltd
xor
leave
outsb
divb
jb
popa
enter
inc
popa
sbb
mov
jno
inc
cmc
movsb
sarb
fdiv
movhps
sahf
pop
dec
add
xlat
daa
ljmp
jbe
or
pop
lock
in
pusha
mov
adc
movsl
adc
cmp
test
pop
add
arpl
les
sbb
inc
mov
stc
adc
hlt
xchg
fisttpl
jmp
popa
push
mov
dec
or
cmp
cmp
xchg
sub
push
cmp
lahf
cmp
pop
dec
sbb
mov
cmpsl
insb
mov
in
xor
incb
adc
loop
sub
sub
or
jo
push
paddw
mov
lret
and
xor
xor
pop
cmp
xchg
out
xchg
sub
or
in
mov
xchg
mov
jp
cs
push
push
mov
push
mov
pushf
sbb
and
sti
mov
xchg
add
dec
loop
scas
sbbl
or
push
das
sarl
out
xor
and
insl
inc
mov
fcmovnbe
mov
lods
sbb
ret
loope
cmpsl
das
dec
push
cmp
arpl
das
mov
add
lcall
jo
nop
popf
in
lret
sbb
xor
int3
xor
ret
scas
in
add
push
jbe
test
jecxz
orb
dec
mov
mov
insl
xchg
cmp
mov
and
xlat
inc
inc
mov
cld
inc
mov
jbe
mov
pushl
out
adcl
sahf
lods
sbb
ja
out
es
and
out
xor
stos
fidivl
popf
iret
insl
adc
mov
test
loope
pop
popf
mov
mov
mov
push
mov
fistps
lcall
cmpsb
cld
cmp
fwait
dec
out
add
es
test
xor
stc
pop
imul
mov
push
inc
sahf
dec
ds
das
in
and
roll
in
sub
xchg
push
add
lret
lea
outsl
mov
adc
sbb
rcrb
mov
xchg
cmp
out
inc
fcompl
fbstp
sahf
and
xchg
lea
mov
test
std
jle
addr16
xchg
sub
and
testl
shrl
sbb
fsubs
add
test
iret
enter
mov
sahf
testb
cli
mov
jle
xchg
aad
pop
add
xor
and
jp
pusha
arpl
test
shlb
pusha
pop
jno
shll
or
pop
popa
jnp
push
nop
push
adc
fisttpl
lcall
add
mov
push
out
cmp
inc
lahf
imul
jmp
add
jo
mov
addl
xor
push
sbb
mov
mov
adc
test
mov
and
jmp
cmp
andb
bound
add
cld
pop
add
fstps
stos
add
lret
bound
sub
sub
cmp
mov
xchg
inc
inc
inc
dec
jge
andl
or
lea
call
loopne
loope
fisttps
mov
and
xchg
pop
sbb
sub
imul
repnz
mov
xchg
xchg
js
cmp
adc
jmp
js
aam
add
test
inc
pop
dec
icebp
fdivl
mov
cmp
jae
lahf
in
cmpl
sub
ret
mov
lods
jmp
test
popf
mov
fs
pop
fisubs
out
test
sub
adc
rorl
arpl
and
ljmp
int
jno
cmc
pop
aaa
jo
clc
addb
push
aas
popa
inc
lret
pop
mov
mov
aam
lds
call
sbb
or
pusha
dec
push
add
scas
ljmp
call
or
inc
add
pushf
sub
or
cmp
sbb
add
push
add
xor
and
test
or
push
jno
adc
mov
std
cmp
jne
xchg
and
sahf
jmp
sbb
push
mov
sbb
xchg
cltd
data16
repz
inc
inc
fdivs
pushf
fstpt
sbb
cmp
mov
push
pop
sahf
test
jecxz
arpl
jnp
sub
cltd
mov
push
and
insb
mov
clc
jg
std
arpl
xor
mov
pop
push
jg
inc
push
lfs
jp
sbb
in
push
dec
iret
jmp
add
and
cmp
add
and
cwtl
lds
sub
out
cli
lcall
cltd
in
es
popf
pushl
or
push
out
xchg
mov
sbb
xchg
les
mov
adc
mov
push
xchg
movsb
xchg
sub
mov
pop
jg
xor
ljmp
mov
push
sbbl
or
xchg
movsl
ljmp
cmp
jge
or
subl
call
ret
pop
xchg
dec
push
jne
mov
stos
cmp
into
xor
lods
cmp
imul
stos
xchg
sbb
test
sub
repz
dec
fnstsw
fidivrl
dec
dec
mov
aaa
or
movsb
mov
add
and
inc
inc
aas
cli
mov
mov
in
test
sbb
ret
mov
inc
cmp
lock
incb
pop
dec
mov
xchg
roll
mov
lds
rorb
pop
mov
int
pop
cmp
out
mov
xor
inc
adc
xor
cltd
and
mov
xchg
sub
or
mov
mov
cmp
jne
xchg
xchg
adc
test
mov
pop
cmp
ja
imul
mov
inc
data16
aaa
fists
sub
adc
mov
pop
arpl
xor
sbb
add
push
and
pop
std
mov
test
push
and
sub
stc
pop
lock
dec
nop
jecxz
outsb
stc
add
mov
jb
leave
dec
in
push
insb
xorb
cmp
xchg
mov
inc
jmp
outsb
sub
shl
cmp
push
les
and
cwtl
sub
pushf
push
cltd
int
hlt
ret
jno
cltd
data16
push
sub
les
push
lods
or
xor
iret
fs
mov
xor
ljmp
pusha
sbb
lret
insl
sbb
xchg
push
add
and
dec
sub
add
imul
test
inc
addr16
in
sbb
popf
mov
fsubp
mov
das
push
inc
imul
xchg
inc
xchg
cltd
loopne
mov
inc
xor
stos
out
out
mov
inc
xor
jne
cmp
jb
andl
inc
inc
leave
cmpsl
idivb
into
das
dec
mov
ljmp
and
ss
arpl
pop
pop
scas
lods
jmp
mul
dec
cmp
pushf
ljmp
mov
mov
test
ja
pop
jns
lods
mov
adc
mov
cmc
mov
or
dec
or
hlt
mov
out
pop
negb
push
jnp
les
cld
xor
jp
cmp
sarl
xor
add
dec
inc
jne
enter
or
push
pop
pop
xor
xor
xor
ds
test
rorb
pop
adc
and
lods
or
mov
loop
cs
gs
mov
add
push
mov
fistl
pop
sbb
xchg
loopne
dec
adc
pop
int3
jg
jp
ret
test
enter
cmp
stc
cmpsl
push
mov
jle
or
inc
jbe
cmc
xchg
cmp
lahf
xor
popa
push
mov
lods
inc
vmovntps
mov
lret
mov
das
fcmove
mov
scas
push
xchg
je
sub
xchg
sbb
sub
fildl
adc
mov
cmpl
jne
repnz
cmp
jg
jge
dec
gs
pop
lock
push
mov
fldcw
inc
xlat
ljmp
jo
enter
xlat
fisttpll
cmp
pop
push
mov
loope
ds
pop
jnp
cmc
rorl
mov
ror
sbb
sub
sti
xchg
inc
pop
out
add
fcomps
repnz
push
jno
ret
sbb
jns
mov
incl
pop
xchg
adc
sahf
adc
xchg
out
dec
push
dec
jge
or
std
lahf
jge
les
fidivrl
in
shl
jbe
add
mov
filds
cwtl
inc
xor
or
xor
aaa
int
mov
ret
push
in
lds
or
popa
je
xor
loop
fistpl
cmp
xorb
dec
loope
outsb
sub
cmc
decb
mov
roll
xchg
bound
in
mov
ret
jae
mov
jo
push
lret
push
cmc
jmp
int
int3
dec
out
cs
pop
push
xor
jecxz
or
cs
loope
sbb
cmp
ds
fwait
hlt
mov
aad
aas
loop
jb
pop
mov
and
jp
inc
gs
pop
inc
push
fsubrs
addr16
ss
inc
popf
scas
addb
inc
sbb
shrl
mov
or
adc
test
insl
sub
dec
hlt
cltd
fdiv
fisubl
cli
or
add
push
cmp
adc
sbb
add
fiadds
lock
jl
gs
inc
movsb
icebp
jnp
xor
mov
rorl
test
mov
xchg
adc
add
shrl
call
mov
and
add
mov
icebp
xchg
xlat
movsb
decb
int3
lret
popf
subb
das
push
sub
test
les
shr
lock
mov
test
add
or
fiaddl
nop
dec
lock
jmp
negl
pop
ret
out
enter
enter
nop
mov
mov
jle
push
in
inc
mov
aam
adc
addr16
ficompl
jnp
dec
sti
mov
pop
sub
call
insl
adc
pop
mov
pmulhw
ret
xor
gs
std
ss
dec
push
pop
loop
addb
out
and
mov
popa
push
cmpsb
jo
out
aam
movsl
popa
sbb
and
divb
xchg
adc
xchg
sbb
dec
lds
mov
pop
out
pop
push
daa
call
push
adc
sti
push
or
stos
and
mov
or
mov
mov
arpl
sub
jp
pop
inc
int
fmull
rcl
cmp
pushl
shll
loopne
in
lcall
and
xchg
fildl
or
rcr
out
jecxz
and
add
sahf
sbb
and
sti
icebp
je
mov
sub
gs
add
les
sarb
dec
and
adc
shl
xor
adc
and
out
xchg
arpl
cmp
xchg
mov
ret
insl
addb
in
jae
adc
push
data16
mov
mov
add
test
repz
popf
loop
pop
push
nop
xchg
push
ret
mov
bound
xchg
pop
cltd
xchg
cwtl
les
xchg
mov
xor
popa
cmp
mov
xchg
xchg
inc
popa
xorl
jns
js
repz
or
lods
mov
jl
test
out
pop
sbb
adc
pop
pop
testb
jge
popa
xchg
mov
cs
push
mov
inc
pop
pusha
xor
dec
inc
xor
jne
dec
stos
cltd
push
int
lret
subb
out
jl
xchg
and
push
jle
cmp
jne
ljmp
ja
jg
rcr
movsl
les
sbb
jae
pop
movsb
test
lret
cld
sar
add
or
jl
push
push
pop
pop
cmpsb
cmp
inc
mov
xor
sti
cmp
test
adc
gs
jmp
out
lret
in
xchg
and
lods
mov
inc
pop
cmp
stos
nop
and
jge
jo
mull
incb
pop
ficoml
lret
sti
rol
mov
mov
push
or
sub
mov
ret
mov
sbb
aam
outsl
push
push
push
xor
js
lea
imul
push
pop
fimull
dec
fbstp
jo
or
add
mov
ror
sbb
nopl
in
push
jae
cmp
insb
aad
test
imul
ja
push
mov
lgs
and
push
sbb
adc
mov
les
enter
sub
pop
and
lahf
or
sbb
xorl
add
jge
lods
pop
rcrb
dec
mov
addl
scas
or
inc
inc
push
pop
mov
mov
cmp
jp
ficoml
sbb
adc
mov
int
push
pop
roll
and
mov
rcrl
std
sbb
bound
mov
pop
or
xchg
add
xchg
mov
sbb
jb
dec
ljmp
dec
mov
pcmpeqb
fisubl
or
movsb
add
mov
sbb
cld
dec
cmpsl
cmp
sbb
out
int
jmp
jp
outsb
fstpt
sbb
lods
enter
adc
pusha
add
or
push
out
stos
in
fdivr
data16
inc
pushf
xor
and
push
mov
add
mov
inc
mov
lods
mov
ljmp
scas
cmp
gs
lret
xor
mov
sub
cld
sbb
cmp
inc
push
dec
iret
cmpsl
jle
add
pop
repz
call
push
divb
push
push
aas
push
into
cmc
stc
cmp
aaa
loope
jo
aam
jno
sbbl
stc
dec
push
gs
jg
pushf
xor
das
adc
imul
jmp
adc
cwtl
xchg
adc
and
cwtl
jno
stos
out
ds
in
mov
or
jle
leave
pop
xchg
sub
lea
out
das
bnd
jnp
sbbl
pushf
dec
add
or
hlt
xor
mov
cmc
lock
jo
cmpsl
cmpsl
pop
xlat
adc
mov
das
jecxz
ss
aas
sti
inc
sti
cwtl
div
inc
sbb
bound
pop
call
pop
test
clc
fnstcw
jne
push
mov
xchg
fdivr
insl
mov
mov
sbb
mov
mov
push
lods
and
add
or
or
xchg
lea
mov
mov
adc
dec
jae
sub
and
inc
push
shll
xor
inc
das
clc
and
sub
inc
fisubl
dec
xchg
fcomi
sbb
push
imul
fmuls
into
adc
xlat
and
inc
mov
nop
lea
jae
push
arpl
mov
xor
loopne
insl
inc
cmp
mov
hlt
mov
aam
cmp
jmp
int3
lahf
sbb
shrb
cmp
push
js
adc
inc
sti
cmp
xchg
rcll
mov
dec
loopne
test
lret
sub
inc
push
pop
arpl
mov
repz
mov
cmp
add
test
mov
push
ja
fisubrl
lret
ja
dec
imul
inc
fcmovb
add
cld
push
add
inc
sub
fwait
sub
adcb
xor
bound
jg
sub
aam
out
and
adc
adc
cmp
and
jno
ret
fwait
pop
adc
and
mov
and
scas
shll
push
push
int
or
lock
push
mov
imul
rcll
test
xor
dec
or
testb
out
test
test
repnz
xor
sub
ljmp
call
in
pop
jl
sbb
das
addr16
cmpsb
aam
dec
add
or
popa
int3
andl
jbe
lods
js
in
jge
and
rclb
cld
mov
into
shll
ret
roll
cs
sbb
ffree
mov
loope
mov
hlt
mov
inc
subb
mov
dec
cmp
xchg
xchg
jmp
les
fistpll
icebp
adcl
dec
mov
ljmp
call
mov
in
inc
lret
mov
cli
push
inc
daa
outsl
out
scas
andl
or
out
test
add
adc
ds
lods
outsl
cmp
xchg
adc
add
jp
pushf
pop
sti
push
sub
pop
add
js
mov
in
cmpsl
ds
loope,pt
fldt
out
repnz
iret
in
leave
push
lcall
sub
push
push
scas
push
test
test
mov
mov
jecxz
daa
adc
inc
inc
dec
or
mov
lock
sub
jle
nop
inc
mov
aad
inc
or
mov
sbb
adc
bound
es
dec
dec
test
ret
add
push
mov
sbb
cmp
js
popa
cmp
insl
stc
push
mov
pop
and
cmpsb
scas
fisttps
mov
mov
fstps
aam
rcrl
test
fiadds
scas
and
and
lret
insb
push
fs
jp
xlat
mov
stos
mov
inc
out
jge
push
out
xchg
jno
or
cmp
sub
dec
outsl
negb
fbld
data16
jmp
or
push
mov
xor
test
into
fwait
gs
pop
xchg
mov
sub
inc
mov
loopne
lret
ss
or
int3
mov
ret
hlt
and
ja
add
bound
xchg
jnp
dec
jno
icebp
and
js
idivl
jecxz
fsts
ja
xchg
lahf
pop
imul
sub
sub
mov
mov
fdivrs
rcrb
ret
loopne
pop
aas
push
mulb
xchg
aam
cmpl
or
daa
inc
dec
mov
xchg
jge
adc
xor
gs
cmp
int
cmp
sarl
jge
jg
fldenv
dec
shlb
add
les
stos
imul
and
dec
das
pop
push
loop
cs
fwait
sub
jns
test
mov
inc
or
inc
fs
jne
dec
jecxz
sbb
aas
jg
push
mov
data16
shl
shlb
push
movsl
out
out
mov
push
mov
mov
aas
cmp
xchg
add
stos
nop
pushf
in
sti
mov
cmp
iret
jno
jbe
lret
cmp
jmp
inc
gs
dec
daa
pop
sarl
adcl
push
iret
adc
xchg
inc
fisubrl
dec
lret
arpl
gs
hlt
xchg
jp
hlt
jl
fwait
sbb
mov
andl
inc
push
test
bnd
lods
xor
xor
lods
jno
mov
in
popa
xor
ret
push
fsubrs
and
das
xchg
push
enter
adc
fs
int
pop
fidivl
out
mov
inc
adcl
in
xorb
fadd
js
addb
out
loopne
jns
jne
mov
dec
inc
lret
jmp
and
clc
test
ss
loope
xchg
sub
out
xor
adc
mov
jecxz
sbb
dec
sbb
cmp
jmp
popa
dec
adcb
jo
pop
bound
push
add
jae
adc
inc
push
sti
xchg
ds
outsl
xlat
pushf
cmpsb
dec
xchg
mov
cwtl
cmpsl
xchg
fstps
cli
test
arpl
dec
popa
mov
ficoms
xchg
rcrb
add
mov
xchg
cmp
mov
jne
fimuls
mov
mov
mov
out
xor
rol
aas
fists
adc
repz
pushf
es
jle
mov
push
out
cld
adc
adc
sbb
xor
mov
pop
inc
loop
js
mov
stc
mov
sub
sbb
fimull
out
out
adc
inc
repnz
movsb
xor
sub
or
nop
push
rcl
out
popa
repnz
or
fistpll
aad
popa
pop
nop
mov
inc
int
push
jp
pop
icebp
fwait
imul
popf
mov
and
pop
fiaddl
mov
jge
and
aam
push
push
scas
xchg
daa
mov
scas
jp
add
repnz
sub
xchg
hlt
push
jns
adcl
mov
call
mov
inc
pushf
pop
dec
inc
data16
mov
lods
jnp
scas
inc
rolb
push
pop
and
xor
mov
movsl
jge
movsb
lret
addr16
aad
pop
mov
inc
xchg
jb
cmp
sbb
lock
leave
addr16
cltd
stos
cmpsl
ret
fisttpll
or
into
fsubs
push
lock
sub
dec
dec
sbb
push
out
jle
js
in
push
add
inc
or
fiaddl
iret
push
fisubl
je
sbb
push
xchg
shll
std
stos
mov
cli
ror
push
mov
pop
ljmp
pushf
sub
lret
xchg
negb
iret
jmp
mov
inc
dec
mov
icebp
ds
adc
push
xor
sar
in
lods
mov
add
fwait
movsl
subl
test
dec
dec
push
jnp
xor
mov
jge
movsb
or
test
les
scas
aas
push
sbbl
sub
cmp
arpl
adc
sbb
mov
scas
popf
dec
mov
xor
cmc
pop
stc
push
and
lods
jg
adc
addr16
out
shl
xor
adc
jne
mov
divl
cmp
mov
mov
out
pushf
xchg
xor
lock
and
shrl
inc
cltd
into
bound
pop
inc
out
xlat
jbe
and
fldcw
inc
inc
jno
inc
loop
imul
sbb
xor
test
ds
mov
incl
jne
lock
dec
rol
fadds
insl
inc
sahf
push
sub
ficoms
mov
jae
pop
test
lods
mov
fcmovu
stc
push
test
pop
ljmp
ljmp
stos
call
shrb
xchg
cmpl
dec
fcomps
inc
sbb
and
cmp
ret
sbb
pop
add
lret
add
not
pop
cld
aad
fistpl
or
or
sub
dec
mov
idivl
cld
negl
fdivrs
fcompl
pop
sbb
leave
fidivs
sub
pop
and
push
mov
shrl
xor
sbb
sbb
fistps
call
push
aad
lret
inc
inc
std
inc
pop
repz
insb
js
inc
sub
jb
jge
cmp
inc
fmuls
and
in
mov
lods
loope
jns
ds
jbe
cwtl
cmp
ror
shrl
fsub
or
dec
fbstp
jne
cmpsb
ja
sbb
aas
mov
pusha
test
fs
xchg
inc
inc
lret
pushf
add
scas
xchg
loopne
inc
scas
adc
movsl
ret
xor
stc
mov
jne
jl
aad
aam
lret
pop
mov
rorb
mov
inc
lea
cli
or
pop
push
mov
and
dec
into
pop
fcoms
in
cmc
lea
jle
orb
dec
pop
insl
or
test
push
mov
mov
test
leave
cld
push
xor
movsl
sbb
jne
loop
mov
fdivl
jne
js
jo
pop
jmp
cld
pop
repnz
jb
sarl
lea
fists
jp
mov
push
pushf
mov
inc
sub
or
sbb
out
push
push
pop
lret
pusha
xchg
add
mov
ret
dec
loope
xchg
dec
push
adc
bound
mov
inc
mov
je
in
pop
xlat
inc
sbb
mov
mov
jno
jae
mov
adc
lods
mov
mov
pop
shrl
stos
xor
inc
in
mov
incb
in
pusha
adcb
ds
xor
lea
cli
xorb
xchg
andl
mov
sub
mov
sbb
das
xchg
cmp
icebp
iret
dec
dec
xlat
sub
cli
repz
insb
adc
repnz
cmp
ret
xchg
ja
jo
cmpb
out
scas
pop
mov
loop
cmpsl
jne
cwtl
lret
inc
pop
lods
fildl
or
add
mov
pop
xor
jo
stc
cmp
out
adc
rolb
push
inc
pop
je
mov
andl
stos
test
js
std
sbb
add
orb
dec
mov
pop
add
jle
fdivp
sub
jecxz
ret
fidivs
mov
sub
scas
out
xchg
or
mov
cmc
mov
or
loope
std
adc
cmp
ds
mov
pop
insb
dec
jbe
pop
xchg
cs
lcall
dec
push
xlat
sub
ja
jb
mov
mov
popf
callw
pushf
xchg
pop
dec
cwtl
addb
int
shll
push
dec
orl
clc
mov
and
lods
es
movsb
sti
mov
nop
scas
test
xchg
repz
jle
ret
leave
xchg
add
das
fwait
sarl
adc
inc
mov
dec
dec
fwait
pop
sbbl
sbb
mov
mov
mov
lret
and
pop
push
inc
pop
adc
xchg
scas
or
sub
inc
clc
sbbl
mov
cwtl
std
inc
pop
xrelease
push
aad
call
insb
call
lcall
out
sbb
push
cwtl
fincstp
test
data16
xchg
mov
xlat
push
mov
shll
dec
sahf
add
lcall
adc
out
xchg
cmc
or
cmp
rorl
enter
cmp
push
mov
movsl
in
pop
in
stos
push
insl
cmc
mov
repnz
ss
icebp
xor
into
xchg
cld
and
jae
sbb
mov
pop
inc
cltd
mov
fdivr
inc
rcrl
pop
jge
popf
push
repz
loopne
xchg
push
jl
mov
leave
jl
xchg
fldcw
xchg
xor
les
std
aam
lret
pop
cmp
cmpl
and
aaa
lock
cmpsb
in
adc
icebp
mov
pushf
jae
cmpsb
push
xchg
sbb
outsl
adc
push
mov
and
cmc
or
cmc
mov
pop
xor
inc
ja
jae
or
lret
test
push
add
and
popa
arpl
xchg
cmc
scas
lahf
dec
jge
inc
scas
jo
mov
jbe
insb
add
xchg
sub
pop
loop
xchg
sbb
push
push
mov
and
mov
mov
fsubrs
pop
shrb
aaa
jae
repz
xchg
leave
hlt
sub
mov
mov
jp
xor
imul
lock
aas
into
jnp
arpl
push
in
and
je
popa
sbb
in
cwtl
enter
mov
mov
aad
mov
fdivl
xor
mov
dec
or
cmp
xor
or
subl
aaa
adc
jp
sub
lods
movsb
ja
sbb
fs
ficoml
or
ret
fwait
call
or
aaa
nop
in
dec
jb
stos
out
out
push
sbb
push
add
scas
inc
dec
xor
lret
dec
movsb
out
xchg
jns
sub
mov
xor
push
jne
adc
inc
lods
loop
bnd
iret
scas
inc
dec
in
sbb
shl
int
aas
pop
es
or
add
fs
xchg
and
add
outsb
loope
jge
sbb
cli
insl
adc
push
push
movsl
insb
xor
repnz
scas
fmulp
inc
test
jne
push
or
jecxz
push
dec
repnz
xor
xchg
shrl
les
call
hlt
cmc
test
cmpsl
fld
jnp
adc
cmp
push
lahf
insl
fbstp
dec
pop
ret
lods
sbb
xchg
movsb
int
mov
adc
sbb
adc
or
push
cmc
ljmp
test
add
mov
fcmovnb
repnz
mov
xchg
ljmp
cmc
push
or
xchg
adc
adc
sub
xchg
dec
or
hlt
push
or
jmp
xor
test
adc
ljmp
jg
aam
inc
mov
shrb
stos
pushf
xor
push
je
ja
push
xchg
popf
jmp
lods
ret
rolb
rorl
mov
hlt
mov
aad
cs
sti
outsb
js
cmp
lcall
aad
mov
clc
pop
cmp
jle
xchg
and
ss
repz
pop
mov
aaa
sbb
inc
pop
les
lea
push
lods
les
jecxz
and
aad
loope
inc
jns
sbb
cmp
arpl
lret
mov
out
ljmp
inc
sbb
outsb
xor
sbb
sub
testb
mov
lock
xlat
leave
out
iret
pusha
les
pop
icebp
pushf
test
insl
fldl2t
jle
test
insb
movsl
loope,pt
insl
daa
ljmp
push
jb
xorl
pop
jnp
sub
jg
pushf
sub
inc
or
jne
in
pop
jae
je
aas
test
jo
ljmp
pop
leave
bound
mov
flds
mov
jo
ss
fisubrs
aam
iret
pop
add
mov
xchg
mov
push
xlat
sbb
xor
lcall
xorb
add
dec
pop
movsl
mov
jge
add
call
mov
add
jg
in
xchg
or
jle
mov
mov
stc
shlb
scas
inc
xchg
mov
jnp
cmpsb
xor
pop
jl
mov
mov
xchg
pop
testl
cltd
leave
pop
into
int
imul
xor
test
push
jmp
test
sub
pop
dec
shll
push
movsl
rep
push
jne,pt
push
addr16
popa
orb
sbb
xor
jno
adcb
xchg
push
jmp
jae
jo
pop
inc
mov
inc
xor
repnz
mov
enter
jle
mov
cmpl
add
pop
jns
lods
jne
cmp
xor
dec
int
dec
sbb
jae
pop
or
pop
imul
out
jae
add
in
add
mov
popa
aaa
xor
stos
cld
push
sbb
sbb
pushf
mov
imul
scas
sbb
cmp
outsl
dec
xchg
mov
cmpsl
mov
sub
push
out
in
leave
mov
out
inc
les
push
cmp
cwtl
or
cmpb
shl
lea
and
or
gs
dec
into
enter
or
aam
jae
es
sbb
xchg
adc
iret
outsl
js
xchg
xor
add
xor
filds
push
jb
neg
cmc
sbb
mov
nop
xchg
dec
es
cmp
repz
push
cmp
mov
ss
jmp
mov
mov
adc
aaa
ljmp
and
aas
in
jecxz
xchg
xchg
jg
nop
sbb
sbb
and
outsl
push
sarb
jecxz
xor
into
add
shrb
jle
xchg
lock
push
out
cmp
fbstp
mov
pop
mov
je
xchg
cli
mov
dec
mov
xchg
cs
push
mov
enter
gs
outsb
push
sub
mov
push
dec
add
and
sti
fbstp
add
in
or
xor
test
pop
rcll
xchg
stos
leave
xor
push
pop
pusha
in
jg
scas
ljmp
dec
push
push
xchg
inc
out
mov
or
jns
pop
jo
cwtl
push
cmpl
loop
xchg
mov
xchg
fwait
les
movsb
mov
lds
inc
xchg
dec
inc
sarl
sbb
out
sarl
repz
jl
loopne
sub
ficoms
loopne
test
rcr
push
cli
mov
pop
push
and
outsl
movsb
lods
js
aad
mov
in
mov
test
cmpsl
and
fs
pop
or
pop
call
in
loope
enter
out
pop
mov
cmp
pushf
loop
sbb
pop
fistps
cmp
bound
mov
icebp
iret
in
cmp
call
data16
cld
andl
orl
jne
stos
fs
popf
mov
js
add
add
clc
mov
add
push
jmp
mov
xchg
mov
xchg
aaa
xor
jno
mov
add
cmp
std
call
push
daa
sub
ljmp
test
call
pushf
mov
cli
fcmovnu
data16
cs
dec
pop
xchg
jo
jno
sbb
push
enter
bound
loop
mov
push
push
fsubp
out
into
jg
add
in
iret
fistpl
or
dec
pop
es
lods
mov
in
dec
pop
pop
mov
push
lret
std
dec
and
cmp
mov
cmp
scas
movsb
jge
jbe
lds
test
push
aam
pop
xor
xchg
pop
sbb
scas
ret
hlt
frstor
fcmovnbe
mov
test
mov
das
stos
dec
enterw
das
jg
push
jecxz
ficoml
mov
cmpsl
cld
aad
mov
push
idivb
jo
mov
and
movsl
js
stc
and
mov
xchg
xor
cmp
add
fsub
or
int3
cmp
sub
dec
push
adc
push
pop
mov
dec
inc
dec
pusha
pop
insb
mov
mov
sbb
jbe
push
dec
bound
sbb
adc
adc
pop
sti
push
jne
mov
fiadds
xchg
cmp
cmpsb
add
dec
ret
jp
adc
rcl
stos
and
data16
xor
and
loopne
arpl
mov
mov
and
lock
int3
fists
nop
pop
aas
rcrl
mov
sub
sbb
insl
sahf
pop
xor
nop
jno
xchg
fimull
ficoml
aam
push
psllq
test
popf
add
je
stos
dec
subb
and
imul
jecxz
jecxz
sahf
dec
cmp
das
add
xchg
jbe
dec
lods
jno
mov
push
pushf
bound
and
fcoml
mov
sbb
lods
mov
imul
icebp
and
and
out
movl
testb
cmp
xor
sub
shrl
jne
sub
add
xchg
or
repz
js
dec
int
insl
jle
test
cmpsb
js
out
or
pop
cmp
data16
push
scas
add
cli
xchg
loope
sti
ds
dec
loop
jl
xchg
scas
adc
jmp
rcrb
xor
cltd
jno
xchg
jo
push
rorl
scas
fimuls
cmp
je
test
insl
dec
cmp
das
mov
sti
cmp
les
mov
fxtract
and
adc
mov
fbld
push
dec
std
or
loop
push
mov
inc
mov
pop
mov
mov
leave
pop
andb
int3
xor
add
inc
and
fldcw
lret
mov
cld
dec
push
xorb
leave
pop
push
mov
rcll
in
add
mov
xor
mov
or
cli
cltd
xor
xor
ljmp
sbb
int
std
jns
outsb
xchg
ljmp
call
in
inc
test
dec
xlat
jmp
clc
jns
std
mov
xor
ja
scas
cmp
cmpsb
pop
sti
mov
aam
ret
sbbl
stos
xor
cwtl
cmc
pop
cltd
test
and
xchg
fisubrs
stos
push
jbe
pusha
test
dec
lods
lds
add
loope
jg
cmp
fldcw
adcb
push
sbb
test
std
mov
push
movsl
adc
mov
addb
pop
ret
fs
fnstenv
das
arpl
mov
pop
mov
fsts
ds
push
loope
lret
orb
add
adc
and
stos
fldcw
icebp
push
enter
loopne
pop
popf
outsb
les
or
xor
icebp
jae
and
shl
cld
cltd
sub
arpl
andb
psllq
pop
imul
addb
sbb
fs
in
dec
mov
pop
out
inc
outsl
cmp
fildl
out
loope
push
pop
test
shrl
cmpsl
mov
daa
jb
mov
ss
jmp
pop
inc
outsl
lret
fisubrl
cmp
int
movsb
mov
dec
jmp
dec
icebp
aas
cmp
pop
stos
push
and
shrb
js
lret
lcall
lods
or
mov
cld
lds
cmp
cmpsb
aas
lret
fsubl
bound
mov
cmp
push
test
sbb
movsl
xchg
dec
jb
fwait
add
test
jno
stos
jae,pt
pop
jne
mov
ds
insb
in
aam
cmpsl
orb
aam
mov
xchg
enter
push
sub
packsswb
push
inc
mov
dec
sub
fisubrs
add
std
push
jb
xor
lds
inc
mov
and
jp
insl
lods
jne
cld
daa
sbb
jl
inc
ret
jge
push
les
in
jle
scas
jb
sbb
insb
xor
sub
jno
add
xor
or
or
les
aad
jns
xchg
test
in
or
xor
lret
sbb
or
mull
mov
sarb
xchg
mov
dec
sbb
dec
xor
jl
xchg
lret
test
dec
jae
jnp
adc
mov
fs
sbb
push
xchg
icebp
xchg
sarl
icebp
cmpsl
xchg
dec
mov
lcall
int
jb
mov
jle
mov
xchg
lahf
cs
cmp
jb
test
xchg
insl
sub
push
les
pop
lret
push
fs
aaa
cmp
imull
cmpsb
rcl
jo
pop
cmp
mov
dec
dec
cmp
icebp
push
out
incl
push
cmp
push
in
push
mov
or
mov
pop
xor
or
testb
sbb
push
mov
je
cs
lea
mov
movsb
adcb
push
pop
jg
outsb
in
daa
and
mov
push
mov
hlt
es
insl
pop
dec
push
jle
sbb
movsl
jns
stc
jo
mov
in
adc
or
lock
test
mov
call
dec
sti
inc
dec
fiaddl
fwait
mov
dec
outsb
lods
enter
ficomps
loop
cmp
xor
lret
scas
mov
jno
fsubrs
sbb
out
xchg
mov
out
and
jae
lock
in
pushf
in
nop
aas
inc
nop
sarb
adc
pop
lret
ret
add
inc
or
push
adc
push
stos
push
fldenv
bound
xor
sub
adc
lahf
jp
lcall
jae
out
into
call
jno
or
aad
mov
mov
add
adc
jmp
cmp
ss
sbb
dec
push
test
rclb
push
mov
divl
ja
in
add
call
inc
fs
push
xchg
mov
movsb
fisttpl
jb
cld
sub
cmpsl
popa
mov
pop
cltd
cmp
movsl
xlat
orl
pop
shlb
fs
mov
jle
cltd
and
lea
jmp
jo
stos
mov
imul
jno
push
cmp
mov
push
xor
clc
cmpsl
jnp
out
test
pop
xor
mov
pop
jecxz
inc
hlt
aas
rcrb
mov
scas
mov
dec
jo
rcrl
jne
in
into
mov
xor
in
pop
push
mov
scas
inc
cmp
inc
fnstcw
loopne
jno
dec
shr
jl
fmuls
sub
xor
ja
pop
mov
lods
add
fidivs
push
and
bound
stc
xor
mov
in
mov
mov
dec
outsl
pop
hlt
cmp
lock
addr16
mov
mov
or
xchg
xchg
aam
ret
loope
cmp
mov
add
and
outsb
sbb
out
xor
jbe
mov
mov
xor
lcall
cmp
inc
sub
js
imul
jne
addl
xor
pop
arpl
sbb
lret
popa
movsl
push
scas
orl
pop
sub
jnp
pop
jo
pop
xchg
clc
and
cmp
in
jo
cwtl
fs
pop
jb
aaa
int3
mulb
push
xor
jae
jle
lahf
arpl
mov
lock
jg
int3
lods
gs
fmul
add
testb
lock
mov
gs
daa
mov
stos
into
inc
sbb
pop
repz
pop
movsb
mov
sub
sbb
scas
adc
pop
mov
and
jg
cmp
ret
mov
sbb
push
push
hlt
mov
cmp
dec
and
sbb
add
jnp
daa
data16
or
or
popf
inc
and
mov
popf
leave
fs
sbb
inc
fidivrs
addr16
sbbl
xchg
call
lahf
int3
jge
lret
rclb
imul
pushf
jg
add
sti
push
sbbb
push
jo
inc
xor
je
push
dec
adc
push
ljmp
pusha
or
inc
test
loopne
cmc
in
ret
adc
pop
jmp
into
lret
mov
popa
push
imul
les
cmp
gs
test
sub
arpl
jg
mov
hlt
popf
in
adc
mov
jb
push
inc
lock
push
inc
int
cmp
out
xchg
pop
inc
cmpsb
dec
icebp
dec
js
out
sub
cmp
jnp
shll
and
ret
mov
rclb
cmp
and
loopne
mov
and
imul
mov
mov
dec
in
xchg
cli
fidivrs
ret
cwtl
and
mov
ret
cmp
call
and
das
sti
out
pop
jmp
repnz
add
ss
fidivl
add
das
mov
push
repz
xchg
out
mov
inc
cmc
loop
jbe
rol
add
jecxz
or
in
push
mov
pop
ret
out
pushf
adc
xchg
es
aam
popf
dec
sbb
scas
or
jbe
pusha
lods
push
inc
sbb
push
arpl
movsb
cmp
sub
mov
jecxz
out
push
dec
dec
faddl
sti
stos
stc
adc
rolb
and
inc
mov
pcmpgtb
scas
lret
pop
out
pop
lahf
mov
iret
jmp
test
std
or
sarl
lret
lret
cwtl
pop
pop
dec
mov
push
out
fucomip
adc
test
ret
push
push
in
xchg
push
sahf
xor
mov
fmull
adc
in
loope
mov
push
call
rcrl
aas
mov
loope
mov
out
leave
xchg
add
aam
jno
clc
std
std
aas
loopne
in
lods
pop
fdiv
jg
xor
jns
int
push
or
ret
or
cwtl
in
sub
sub
mov
push
xor
or
or
push
pop
mov
xor
xor
lds
xchg
mov
cs
mov
add
jnp
adc
mov
adc
sbb
xor
bound
sti
popa
das
push
mov
cmp
sub
cwtl
push
and
inc
dec
loop
into
adcl
jg
std
push
addb
cmp
test
out
push
and
cli
fnsave
sbb
sbb
add
xchg
mov
sub
xlat
lahf
mov
mov
and
mov
pop
imul
bound
jl
clc
or
shr
cbtw
aad
xor
lods
js
mov
ficoml
testl
scas
jns
push
shrl
push
sub
in
test
seta
adc
push
or
lcall
cltd
push
lds
pop
ss
push
adc
aas
pop
jle
addl
imul
mov
fcoml
rorl
fcmovnu
mov
addr16
xchg
mov
pop
jnp
cmp
cwtl
xchg
aam
in
dec
sbb
push
mov
lods
imul
out
cmp
in
mov
mov
adc
data16
pop
inc
mov
or
mov
push
loope
xor
call
test
loope
xor
mov
out
hlt
data16
xchg
out
stos
lods
aam
pop
inc
add
stos
fsubl
adc
jo
enter
jge
push
inc
outsl
test
pop
loope
jae
cltd
fidivl
cwtl
cmp
mov
sub
rcr
adc
xlat
xchg
add
mov
xor
xorb
enter
aaa
jns
xor
cmp
in
mov
adc
ret
jle
add
xor
aad
fwait
adc
or
movsb
dec
jns
pushf
add
adc
hlt
mov
sub
and
xchg
movsb
mov
mov
std
xchg
call
lds
fadd
mov
cmpsb
xchg
mov
stos
fnstsw
fnstenv
jecxz
sbb
cmpsl
sbb
jp
sbb
int3
mov
test
in
xchg
push
xchg
or
jb
shr
es
or
inc
jbe
adc
iret
xchg
cmp
mov
mov
dec
dec
pusha
pop
loop
xchg
mov
and
jle
fwait
push
andl
jo
mov
sub
mulb
and
loopne
inc
shrl
push
and
cwtl
je
into
mov
mov
xlat
cmp
int3
test
dec
push
sub
in
xchg
or
out
ret
mov
in
aas
jl
mov
adc
cs
pop
sahf
and
sub
das
fstpt
ljmp
fs
int
xor
imul
ljmp
mov
pop
out
sbb
mov
sub
in
std
pop
jae
or
or
and
sbb
dec
jae
stc
sti
push
mov
dec
sbb
sbb
dec
mov
ss
push
push
outsb
addb
leave
fcmovnu
add
xchg
xchg
jns
dec
lahf
jno
fmull
mov
pop
dec
cli
push
stc
dec
js
loop
inc
push
adc
ret
pop
sbb
ds
sub
or
popa
call
cmp
sub
inc
stos
xchg
out
pop
pop
cmp
push
hlt
dec
mov
dec
mov
or
data16
xchg
pop
adc
mov
mov
fsub
mov
mov
cmp
inc
ficoml
pop
mov
jo
in
daa
xchg
clc
adc
dec
push
out
jns
hlt
sub
mov
in
inc
push
push
shrb
and
addr16
arpl
mov
jno
fsubs
leave
pop
mov
cmp
push
add
cmp
js
clc
jne
push
adc
dec
int
xchg
xor
imul
sahf
loope
push
divl
jb
sbb
sbb
sub
insb
pop
test
inc
in
xchg
add
mov
push
ljmp
mov
xor
sbb
xchg
scas
sbb
shll
or
outsb
in
sub
jg
jmp
jge
sbb
iret
mov
fwait
fs
popa
scas
pop
jbe
shll
add
hlt
xchg
xor
js
xchg
in
repz
fcoms
add
sub
in
sbbl
popf
sbb
cpuid
movb
out
xor
fcmove
fs
das
push
sbb
push
jne
push
aas
sub
dec
bnd
inc
xchg
pop
xchg
enter
out
xchg
outsb
mov
lcall
fldcw
push
mov
and
jbe
clc
xchg
mov
std
sbb
inc
pop
inc
cmp
mov
jge
cmc
mov
imul
fisttpll
repnz
jg
fcoml
mov
pop
and
push
stos
pop
cmpsb
lock
xlat
sbb
xchg
cs
fs
lret
nop
push
ret
repz
test
dec
xchg
xor
cmpl
sub
sbb
and
pushf
test
inc
scas
inc
call
or
mov
adc
inc
mov
fs
jg
mov
pop
mov
inc
mov
cld
in
or
in
mov
sub
lock
stos
xor
cld
dec
jmp
rcrb
xchg
lahf
adc
inc
adc
add
out
test
ja
fdivp
mov
hlt
testl
sti
inc
cmpsl
pop
mov
decb
xchg
adc
jp
or
aaa
xchg
sub
or
or
sub
lea
popa
jbe
cmpsl
xlat
push
fptan
sti
les
stos
aam
pop
and
and
pop
mov
sbb
sbb
push
stos
cmp
or
dec
adc
in
shrl
add
mov
sbb
and
and
in
sub
dec
dec
loopne
mov
scas
jge
pop
mov
pop
aam
leave
imul
ljmp
sbb
sub
mov
ffreep
sub
lock
dec
mov
mov
push
ljmp
insl
sub
sbbl
push
gs
inc
xchg
or
xchg
daa
xor
xchg
sbb
inc
cmpb
cltd
pop
fucomi
push
mov
arpl
dec
mov
sarl
mov
in
sbb
mov
loop
sub
push
ret
sbb
adc
xchg
sbb
mov
test
loop,pt
jge
push
out
add
push
mov
std
mov
fldl
nop
dec
mov
jge
rcl
aad
inc
adc
rorl
fnsave
mov
ljmp
cmc
mov
lret
xchg
por
jecxz
ret
insl
ja
dec
cmp
sub
dec
pop
inc
orb
pusha
clc
pop
mov
sbb
test
imul
out
in
sub
adc
add
mov
scas
adc
lock
fsubl
or
push
xor
push
pop
lret
and
ss
repnz
pop
xchg
lock
and
jg
flds
inc
xchg
mov
repnz
int
push
adc
ds
aas
dec
mov
cmp
jb
subb
loopne
js
scas
lods
mov
pop
pop
and
test
out
ljmp
jno
insb
sbb
inc
xlat
testl
sti
jbe
mov
in
test
out
or
popf
pop
mov
mov
dec
adc
xchg
outsl
std
stos
push
daa
sub
dec
scas
inc
mov
inc
loop
fmul
jae
nop
idivb
hlt
push
jg
xchg
dec
call
flds
sub
and
push
dec
xchg
xchg
mov
dec
sub
test
rorb
cmp
mov
sub
jbe
or
ljmp
call
insl
mov
in
jnp
test
add
addr16
arpl
add
push
or
or
mov
mull
fsubrp
aad
test
gs
test
aam
std
adc
sub
rcrb
lods
mov
lcall
push
lock
cli
pushf
int
sbbl
bound
fstpt
aaa
jbe
sub
mov
or
add
dec
mov
xchg
test
cmpsb
sbb
mov
out
movsl
adc
pop
ss
jmp
rcl
mov
icebp
test
insl
push
lret
cmp
jmp
clc
or
pop
out
stc
add
sarl
call
dec
push
mov
inc
jle
sbb
call
dec
jmp
or
sub
jb
nop
push
out
add
fwait
or
test
aas
pop
dec
pop
lock
in
ds
pop
mov
insb
lret
outsb
pop
xor
insl
mov
mov
mov
sub
inc
pop
mov
push
push
std
pop
divb
jp
sbb
pop
std
test
movsb
cmp
pop
xchg
dec
aaa
jle
loopne
push
repnz
repnz
into
mov
cmpsl
shrl
sbb
xor
out
popf
fwait
test
push
jle
rol
sbb
scas
pop
cmp
cmpb
dec
sub
mov
lcall
inc
inc
outsl
pop
ja
shll
pop
shl
inc
jecxz
cli
ss
imul
mov
cmp
inc
mov
sub
inc
pop
mov
xchg
mov
jge
mov
sub
ss
inc
jg
cli
sti
mov
cltd
pop
fcompl
add
clc
xor
rcrl
sbb
dec
push
sub
leave
imul
xchg
das
lods
sub
repz
mov
lods
push
test
icebp
xor
in
mov
or
imul
movsl
sbb
rorb
js
inc
pop
gs
addb
call
cmp
stc
sub
daa
dec
jle
adc
sti
mov
nop
mov
lcall
push
das
jbe
mov
repz
rorb
lock
xor
pop
add
xchg
icebp
scas
adc
bswap
jnp
jle
gs
sub
sbb
dec
dec
ret
pop
pop
cmp
pushf
scas
cwtl
pop
fistpll
imul
fidivl
popl
lods
ja
lahf
mov
push
dec
pusha
xchg
adc
jne
mov
int
arpl
lea
scas
mov
and
lea
mov
stc
add
sarb
push
hlt
scas
ds
popf
icebp
mov
jne
dec
mov
cwtl
dec
in
jl
cli
lds
addl
cmp
nop
mov
pop
inc
fisubs
or
push
sahf
xor
inc
xor
mov
fstpt
lret
jb
pop
jl
fs
pop
adc
js
jo
mov
fwait
xor
jg
roll
xor
cwtl
sbb
leave
in
shrb
lods
test
lock
aad
movsb
inc
ja
sbbb
aam
or
mov
cltd
jecxz
xchg
adc
sbb
enter
sub
pop
lea
popf
mov
inc
mov
push
lock
decl
int3
inc
mov
add
cmpsb
xchg
es
sbbl
and
subl
adc
mov
mov
popf
inc
push
loopne
fbld
xor
mov
inc
pushf
leave
fcmovne
addr16
cmp
in
and
add
mov
ljmp
lock
cwtl
test
jns
sbb
cmp
out
cmp
jg
or
adc
jns
jbe
int
xchg
jae
loop
fsubrs
shrb
hlt
dec
mov
out
scas
fdivl
daa
sub
or
xchg
cmp
stc
shll
dec
or
cs
sub
repz
lret
cmc
xchg
pushf
push
ret
lahf
ds
or
movl
cmp
sbb
cwtl
test
mov
inc
push
cmp
das
fisubl
mov
insl
out
mov
push
or
fidivrl
sub
subb
mov
xor
inc
pop
inc
cmpsl
inc
in
adc
push
mov
pop
mov
push
call
in
xor
xchg
inc
std
sbb
jp
ja
aaa
popf
rorl
fsubl
mov
pop
rcll
xor
js
inc
fistl
dec
popa
cld
bound
pop
dec
push
push
int
mov
std
add
inc
adc
std
loopne
addl
mov
or
sbb
lea
jmp
add
rorb
std
out
adc
scas
push
cmp
jno
inc
sahf
sbb
enter
lods
loope
jns
sbb
or
hlt
pop
xor
dec
mov
adc
movsl
push
push
test
and
iret
jecxz
sbb
cmp
addr16
push
js
enter
or
dec
loopne
mov
fbld
xor
xchg
movsl
imul
cld
mov
mov
xor
roll
es
lret
popf
cmp
jecxz
out
fists
leave
fdivrl
jl
mov
push
sbb
and
rcr
mov
inc
inc
push
in
xor
sub
sub
cmp
mov
add
cli
mov
pop
lock
jnp
jne
clc
ja
sub
mov
mov
jle
and
mov
lret
into
xor
lahf
push
jno
cmpsb
inc
push
and
push
pop
xchg
dec
mov
notb
mov
sbb
cltd
mov
mov
in
xchg
sub
cmp
jge
sbb
mov
and
mov
adc
es
test
and
out
jecxz
mov
dec
jmp
jg
pop
pop
arpl
or
out
js
mov
lea
mov
mov
das
pop
subl
pop
fcoms
mov
cmp
ss
sbb
adc
or
insb
iret
enter
mov
inc
subl
inc
ret
jl
scas
xchg
dec
push
clc
mov
sub
xlat
repz
nop
sub
shr
jne
mov
inc
pusha
inc
add
addr16
repnz
shrl
jl
dec
xor
outsb
out
push
xchg
movd
push
std
mov
loopne
lahf
push
and
shlb
negb
jne
dec
adc
shll
sub
mov
inc
frstor
sti
adc
sub
xchg
pop
sbb
test
mov
sbb
ss
add
xor
push
jne
lods
aas
mov
pop
add
imul
cltd
scas
icebp
aaa
xor
cli
in
sub
adc
ret
mov
fldcw
call
js
stos
in
dec
cltd
stos
jge
jle
sub
loopne
mov
xor
fstpl
lock
jno
rorl
test
movsb
jno
pop
insb
pop
xchg
and
mov
fisttpl
stos
mov
xlat
lock
and
shll
inc
scas
loopne
sbb
enter
cwtl
xor
dec
add
add
and
pop
fildll
push
xor
inc
add
xor
inc
push
imul
ret
fcompl
leave
pop
cmp
rep
fwait
sub
movsb
test
dec
lods
push
jmp
ficomps
mov
push
jmp
mov
pop
adc
jb
sbb
push
jo
push
xor
mov
mov
mov
xor
in
push
adc
mov
xor
hlt
stos
mov
mov
shll
xchg
aad
add
into
and
and
lea
jmp
mov
aad
stos
in
mov
lret
data16
dec
push
dec
int
cmp
mov
fcoms
xor
in
push
push
dec
outsl
push
mov
ret
cld
dec
inc
fdecstp
stc
adc
fstl
popa
or
adc
int3
loope
ljmp
mov
sarl
jne
movsl
add
mov
mov
xlat
enter
idiv
adc
cmp
fistps
pop
fst
mov
iret
mov
inc
stos
add
adc
and
push
mov
data16
mov
test
test
add
outsb
xor
js
mov
adc
flds
and
push
push
repz
adc
cmpsl
mov
fisttpl
mov
sub
lahf
fisubrl
and
jg
add
out
dec
jge
jle
cmc
adc
pop
inc
pop
divb
cld
movsb
mov
loope
or
dec
jmp
gs
sub
or
lcall
fstl
cmpsl
cmp
shlb
mov
ret
jle
pop
jg
gs
xor
and
insl
dec
aas
mov
lea
push
outsl
pop
call
stos
in
sbb
fs
out
push
xchg
push
cli
jecxz
outsb
add
js
mov
cltd
sbb
push
jbe
pop
xchg
sub
hlt
rcrb
gs
inc
btr
push
rclb
push
mov
mov
in
fisttpl
jmp
pushf
je
and
loope
clc
aas
jmp
inc
fidivs
loop
stc
sbb
and
clc
xor
push
pop
push
adc
and
or
jnp
shlb
dec
arpl
push
jnp
xor
xchg
or
testl
les
push
mov
mov
mov
int3
xor
jmp
jmp
xlat
mov
push
jg
jno
dec
inc
xchg
sub
sub
cwtl
sub
leave
jmp
add
or
clc
imul
cltd
std
push
jle
pop
pusha
cltd
push
mov
push
js
mov
dec
pushf
aam
mov
call
bound
pop
jl
test
stos
loopne
dec
cmp
add
pop
add
sbb
roll
cmp
sub
rclb
cmp
dec
ficoms
pop
int3
xor
jns
std
xchg
stc
notb
and
push
nop
lcall
lea
push
adc
jle
loopne
sub
push
add
call
mov
adc
loop
lods
xlat
mov
out
pusha
adc
outsl
lock
inc
out
and
stc
sbb
mov
into
fsubrl
stc
je
add
cs
dec
mov
xlat
pop
loop
inc
adc
sub
dec
adcl
pop
sub
lock
rcl
adc
shll
and
gs
push
push
cmc
or
lcall
and
sub
idivl
add
push
adc
or
mov
dec
cwtl
das
jge
push
scas
jbe
ss
or
addl
cwtl
loope
in
popf
test
and
inc
and
fstl
push
ds
and
and
and
enter
popa
pop
mov
mov
push
fildl
in
sbb
push
movsb
add
cmp
sub
jnp
dec
add
mov
fdivl
data16
rclb
test
xor
test
mov
or
or
imul
or
lock
mov
int3
cmp
xchg
pop
ficompl
test
ljmp
testb
repz
mov
push
jp
push
cbtw
push
inc
int
adc
out
jno
repz
nop
arpl
mov
ds
inc
lcall
and
jl
stos
jmp
lret
mov
sbb
pushf
outsl
in
in
pop
popf
jecxz
shrl
or
popf
mov
sub
pop
pop
clc
rcrl
push
outsb
mov
fstps
daa
popa
dec
mov
and
cltd
xor
sarb
data16
lcall
xlat
outsb
cmp
cmp
sti
pop
movsb
mov
jl
ds
cmp
jl
hlt
sbbl
sbb
movsl
dec
adc
mov
je
xor
loope
adcb
sub
fistps
add
or
pop
adc
sub
dec
hlt
es
outsl
pop
pop
add
push
popf
ret
incl
and
das
mov
dec
lahf
fisttpl
mov
jno
push
js
push
mov
inc
push
cld
lahf
ss
clc
push
mov
or
xchg
mov
mov
shl
fs
imulb
subl
enter
cmp
loop
xchg
jge
and
cld
repz
adc
cltd
sub
and
or
pop
les
sub
scas
jb
mov
fsubrl
lcall
lods
sbb
mov
scas
mov
jbe
mov
imul
push
enter
imul
fwait
outsb
pop
test
sarl
mov
fdivs
sub
mov
movsl
fxch
frstor
jecxz
cmp
dec
loop
call
imul
out
adc
imul
mov
mov
faddl
xchg
int
cmpsl
sub
dec
adc
lods
pop
lods
aam
scas
aaa
divb
andl
or
push
xor
cmp
sbbb
dec
in
das
stc
int3
and
orb
int3
cmp
add
inc
lcall
pop
outsl
hlt
jl
movsb
ja
popf
jge
incl
hlt
cmp
adc
insb
sbb
mov
dec
lea
add
lock
push
sahf
dec
xchg
sbb
in
lods
hlt
mov
adc
and
add
and
xlat
fdivrl
lods
les
hlt
pop
repz
and
dec
mov
jbe
sti
movsb
arpl
push
testb
scas
lds
mov
mov
inc
imul
movsb
lcall
lret
das
mul
dec
sbb
push
sub
nop
hlt
es
xchg
sbb
mov
adc
lds
adc
lods
push
mov
xor
xor
push
scas
mov
jmp
jmp
movsb
adc
cld
add
mov
jle
jl
sub
lahf
cwtl
sbbl
mov
jp
stc
xor
adc
adc
call
cltd
cld
mov
cs
imul
out
sbbl
inc
icebp
std
push
cltd
push
push
inc
xlat
and
call
mov
pop
cmp
lret
inc
xor
cmc
aad
stc
addr16
mov
aam
lahf
ret
xor
test
outsl
push
imul
xor
bound
jne
int
jo
push
sbb
mov
jne
int
mov
fimull
outsl
loop
lret
insl
sub
xchg
mov
mov
and
mov
loop
decb
inc
test
mov
xchg
mov
add
mov
cmpsl
mov
jmp
rcrb
xchg
push
les
xor
in
ret
xchg
daa
js
or
jmp
fdivrs
mov
sbb
rorb
push
out
ficomps
loop
push
mov
or
test
mov
inc
cld
aas
std
aaa
inc
push
mov
mov
dec
fldt
mov
push
add
clc
push
xor
leave
ljmp
insb
ljmp
inc
inc
fwait
incb
inc
in
and
jmp
adc
dec
outsb
mov
cmp
ffreep
sub
adc
dec
mov
js
mov
mov
xchg
xor
mov
pop
ljmp
xor
and
add
xor
add
in
adc
setg
popa
rcl
xchg
mov
movl
xor
mov
jmp
mov
jge
mov
into
ret
sub
sbb
xor
psadbw
daa
push
mov
clc
sub
push
mov
lock
add
in
stos
sbb
ret
cmp
sub
mov
nop
lods
adc
xor
or
out
leave
cmp
repnz
mov
lret
shll
mov
in
out
pop
fldenv
mov
in
pusha
cltd
incl
mov
mov
jb
pop
lret
ljmp
jmp
add
adc
mov
int3
mov
imul
hlt
movsb
pusha
add
and
testb
cmpsl
out
jo
xchg
xchg
jmp
mov
sahf
jecxz
inc
cmp
mov
pop
sbbl
xor
lds
add
les
out
inc
hlt
add
pop
rcll
mov
popa
inc
int3
iret
fisubl
roll
sbb
jmp
inc
add
ror
cmp
pop
outsl
out
cmp
pop
aam
stos
aas
pop
mov
out
sub
das
ljmp
cmp
rep
imul
mov
add
sub
sub
adc
lods
call
lret
idivl
cmp
shll
push
pop
dec
out
sub
adc
add
pop
and
mov
xor
testl
jle
mov
outsl
pop
add
xchg
and
mov
testb
fnstcw
adcl
int3
scas
js
out
and
stos
enter
xchg
je
insb
sbb
aaa
rcrl
cli
fisttpl
jne
jp
jbe
sti
add
xchg
or
pushf
mov
jo
cmc
mov
push
sbb
test
jg
xchg
ficoms
lret
lea
cld
sti
xchg
inc
mov
sbb
xchg
adcl
adc
imul
ss
inc
rcrb
cmp
sti
addl
loope
or
js
sub
fs
push
jb
jo
xchg
aad
gs
or
or
lahf
je
jecxz
clc
jg
loope
movsb
repnz
xor
inc
test
test
or
enter
mov
iret
sub
jp
jl
outsb
adc
dec
iret
mov
mov
pushl
inc
fimuls
pop
jmp
inc
dec
dec
loope
and
loope
icebp
push
insb
jns
push
and
fsubs
sbb
in
jmp
cmpsl
inc
push
lock
je
ss
sbb
dec
mov
jmp
in
in
fstpt
mov
sub
mulb
int
cmp
mov
xchg
clc
iret
adc
rcrb
push
mov
test
ret
cld
inc
xor
mov
ret
hlt
mov
das
test
enter
arpl
insl
push
lods
aam
jns
sbb
andb
mov
adc
push
popf
std
sahf
push
loopne
mov
mov
mov
popf
jl
fsubrl
sub
pop
push
notl
mov
xchg
mov
popa
test
sbb
add
daa
lcall
inc
stc
hlt
jle
jo
dec
outsb
and
fnstcw
mov
jecxz
jbe
inc
and
test
inc
das
ficomps
clc
movsl
es
mov
add
push
out
inc
movups
lcall
in
fs
fwait
jbe
es
and
push
pop
jp
mov
lods
sbb
add
jp
daa
pop
data16
stos
mov
xor
ret
daa
ret
jno
pop
cmp
sbb
mov
push
and
jg
inc
pop
or
mov
or
rcr
xor
ss
lods
jecxz
pusha
in
int3
cmp
cmp
out
push
pop
or
std
scas
jno
push
pop
jmp
leave
cmp
inc
sub
dec
data16
pop
jmp
fcom
lahf
pop
rorb
popa
fs
fldt
jb
daa
adc
jmp
pop
arpl
inc
dec
cmpsb
ds
movsl
lds
movb
enter
fldl2e
mov
mov
icebp
mov
lds
cmpsl
add
xchg
aad
ret
dec
dec
sbb
ljmp
cmpsl
inc
xor
mov
dec
imul
dec
cs
mov
inc
push
inc
sti
rcll
jno
stc
inc
lret
xchg
xor
out
push
inc
xor
xchg
mov
cs
cmpsl
dec
push
je
les
mov
in
inc
loope
hlt
inc
xchg
mov
xor
sbb
jg
cmp
ret
or
cmpsl
mov
loopne
pushf
and
xchg
sti
dec
dec
pop
test
xor
adc
movsl
popf
or
and
xchg
adc
div
mov
iret
ret
subb
mov
xchg
not
sub
ret
mov
inc
mov
fisttpll
scas
repz
adc
jecxz
mov
fildl
mov
repz
dec
daa
arpl
sbb
int
jns
pop
mull
push
test
loope
mov
mov
je
xor
sbb
int
xor
in
imul
cwtl
pusha
cmp
dec
loopne
or
sbb
mov
sbb
les
fyl2x
sahf
addr16
inc
adc
mov
daa
push
scas
sbb
fwait
mov
inc
mov
inc
aas
out
dec
xor
fnstsw
pusha
or
shrb
jo
je
addr16
sbb
push
insl
insl
das
mov
aas
sub
mov
jae
and
cs
cmpsb
add
fdivp
es
mov
ret
jmp
cmp
push
out
jae
push
fwait
inc
lcall
dec
leave
outsl
jl
lea
xlat
scas
push
cmp
int
repnz
test
loope
pop
aam
cmp
mov
xchg
sub
dec
repz
jmp
in
fsts
dec
fs
lret
je
je
sbb
jne
dec
test
into
xor
stc
mov
or
adc
mov
lds
loop
or
cmp
mov
pop
mov
insl
add
into
bnd
xchg
fstpl
xchg
insb
push
dec
gs
out
test
jbe
mov
jns
cli
and
das
sbbb
pop
mov
jae
test
xor
clc
int
mov
or
adc
inc
xor
push
cmp
mov
xchg
incl
repnz
cmp
lock
sbb
mov
mov
cmp
xor
fdivrl
je
ja
ja
xchg
test
dec
lret
test
lret
mov
mov
sbb
inc
dec
cmp
adc
add
lods
lret
or
and
js
in
cmp
mov
fsubrs
xlat
outsl
test
push
jbe
xorl
jne
lds
jb
cmp
fcmovnb
add
cmp
aaa
pop
andl
cmpsl
mov
or
aam
cltd
test
loopne
js
sbb
aas
push
outsb
add
into
adc
fistl
sbb
pop
fidivl
test
or
jp
xor
pop
jno
sbb
sahf
inc
jecxz
out
xorb
rcrl
cmp
jno
add
aad
dec
or
test
jge
sub
or
sub
or
shrl
mov
xor
enter
mov
pusha
in
pop
imul
popa
repnz
push
inc
jno
in
int
aas
inc
shl
mov
out
scas
jle
mov
iret
cs
xchg
sbb
mov
fdivrl
and
shrb
insb
pusha
fwait
movsb
xlat
lods
sbb
loopne
in
ja
inc
lea
or
add
mov
loopne
clc
mov
stos
cmpsb
adc
xor
inc
xchg
cld
out
lcall
in
subl
inc
stos
outsb
les
fsubrs
sbb
out
dec
loope
addb
inc
mov
push
cltd
cld
push
jl
lcall
sub
fidivs
mov
aad
js
mov
push
sub
enter
data16
add
lods
xchg
jns
pop
int
cmp
and
daa
jno
inc
mov
jnp
cmpsl
xchg
inc
lahf
push
xchg
lods
jo
notb
xor
sub
inc
sub
jns
mov
imul
push
jno
mov
fldcw
xor
je
and
in
jmp
jg
lock
loope
dec
or
imul
lds
fsubl
pop
jns
push
pushf
and
imul
fbstp
lds
sbb
stos
inc
xor
mov
cmp
out
or
mov
imul
dec
arpl
push
dec
dec
out
jno
stos
scas
inc
mov
adc
hlt
jne
cs
mov
lcall
lahf
outsl
push
mov
cmp
movsb
aaa
filds
mov
cmp
imul
adcb
pop
loopne
jecxz
sub
shll
ret
add
scas
xor
mov
ret
les
mov
popa
xorb
xchg
call
or
inc
cmp
inc
lods
mov
out
fidivrl
dec
lret
xor
out
xchg
xchg
mov
imul
stc
xchg
testl
hlt
cmp
repz
dec
cs
popf
sbb
push
dec
sbb
xchg
jae
pusha
fcmovnbe
sbb
cmp
movsb
outsb
mov
sti
mov
mov
icebp
pop
mov
jecxz
dec
adc
outsl
cmp
push
jmp
and
test
inc
in
xor
loopne
les
jb
jns
mov
aas
pop
divl
lods
add
mov
cmpsl
aas
lret
pop
ds
inc
test
cltd
arpl
ficompl
repz
lret
mov
test
pop
or
sbb
stos
cmc
lods
jb
insb
scas
nop
xchg
scas
nop
int
cmp
add
movsb
stos
or
add
rcrl
add
dec
and
and
inc
aad
mov
xorl
sbb
fsubrl
lock
adc
test
movsl
mov
iret
popa
cmp
mov
ret
int3
sarl
aas
jne
adc
sbb
cmp
mov
mov
add
sub
sub
xlat
xor
inc
adc
inc
or
mov
xor
mov
cmp
mov
mov
or
cmpb
scas
inc
shl
pop
cmp
xor
dec
das
xchg
sarb
fwait
dec
in
jne
lcall
mov
pop
jl
sti
fwait
xor
adc
gs
dec
or
arpl
and
loope
ret
in
out
mov
and
sbb
rcr
push
leave
stos
insb
sbb
outsl
loop
lahf
inc
hlt
mov
adc
int
fidivrs
ret
shl
hlt
push
mov
adc
fistps
out
sbb
cmp
push
leave
mov
bound
mov
fucomp
lock
xor
scas
mov
loop
pop
cld
sahf
mov
stc
mov
loopne
mov
or
gs
mov
push
call
push
cli
inc
out
ss
loope
pop
inc
jns
jnp
cmpb
fisubrl
mov
push
shll
or
or
out
repnz
push
inc
lds
cli
subb
fwait
jno
push
mov
test
scas
lds
inc
scas
sbb
das
ret
scas
fisubrl
or
adcb
fmull
outsl
loopne
push
stos
stc
test
out
mov
cmpsl
adc
movsb
pop
push
push
in
andl
jle
sub
lret
dec
inc
inc
sbb
pop
sbb
les
cmpsb
aam
aam
sbbb
daa
std
test
nop
insb
mov
rcrl
dec
fnstenv
std
stos
mov
ja
mov
cmp
mov
rcl
add
sub
lcall
inc
jo
xchg
daa
push
ret
call
fnstsw
jp
jo
cli
fucomp
push
prefetcht2
aad
movsl
mov
pusha
dec
pusha
orb
mov
loop
jns
clc
cli
adc
inc
repnz
ficoms
add
adc
cmp
cmpl
aam
pop
jmp
test
lds
aas
ja
adc
dec
mov
xchg
pop
mov
movsl
dec
xchg
fsubl
sbb
test
jb
bound
jmp
or
and
aaa
push
nop
ret
jle
sti
test
insl
inc
hlt
sbb
xchg
mov
dec
fwait
add
sbb
cs
daa
nop
fisttpl
sahf
adc
push
sarl
cld
pop
add
roll
jno
mov
pop
test
icebp
mov
pop
xchg
mov
movsl
mov
fcoml
jl
cmp
pop
stos
mov
leave
mov
decb
pop
lods
mov
push
ret
cmp
into
cs
jmp
sbb
mov
sub
fbstp
mov
jae
clc
das
or
and
sahf
andb
pop
out
cmp
mov
pushf
xor
lds
add
mov
mov
iret
in
ja
gs
xor
leave
addl
lods
aas
adc
hlt
mov
mov
int3
jo
ds
push
in
push
out
mov
aaa
jno
nop
mov
je
mov
push
lods
or
repnz
loop
pop
repz
or
jns
dec
push
or
std
mov
sbb
push
dec
shl
xchg
add
je
stos
and
in
cmp
lock
arpl
ret
push
jnp
in
sub
push
or
shlb
cmp
loope
sbb
mov
mul
cld
sub
dec
pushf
push
cmpsb
xchg
jl
pusha
cmp
dec
and
xchg
push
fxch
mov
xchg
repz
mov
mov
aad
daa
repz
rcrl
sub
arpl
les
ljmp
aam
pop
hlt
jo
std
and
aad
sbb
movsb
xor
lahf
mov
shl
js
in
scas
aam
and
inc
inc
sbb
test
pop
sub
jp
adc
pop
iret
cmp
xchg
ret
out
std
pop
sub
dec
sub
add
dec
inc
insb
daa
xchg
mov
dec
mov
fcmovnbe
scas
push
mov
imul
jbe
int3
add
cmp
adc
cmp
xchg
out
mov
mov
cltd
stc
fistpll
jo
vucomisd
or
repz
test
lret
push
sbb
aad
aaa
into
lret
cmp
cmc
add
aaa
aaa
int
push
std
pop
sub
jge
cmp
jae
in
jne
dec
or
adc
cmpsb
sub
test
repnz
cmp
mov
pop
out
adc
lcall
jne
push
adc
sub
fildl
inc
sti
dec
shl
sbb
xchg
dec
aad
out
popf
addb
fs
pop
or
cmp
scas
cmp
xchg
jbe
test
sbb
repz
pop
dec
aad
aam
lock
movsb
jnp
iret
pop
and
sbb
sub
pop
jo
mov
ss
mov
sbb
xor
add
cs
mov
les
inc
sub
mov
push
dec
or
cwtl
pop
into
mov
fsubr
jb
mov
and
das
add
and
pushf
lret
add
and
out
test
test
psubw
mov
dec
loop
mov
mov
imul
cmpb
imul
test
sbb
or
aaa
jge
movsl
ljmp
movb
dec
or
cmp
push
jne
pop
cmp
xchg
mov
push
arpl
push
sbb
mov
cmp
lds
aam
jp
ds
cmp
ds
imul
push
add
and
push
dec
mov
mov
sub
pmullw
stc
shrl
fbstp
add
xchg
insl
stos
mov
and
fidivs
mov
std
pop
sbb
pop
sub
jno
cmp
bound
dec
cltd
stos
push
cmpsb
adc
out
bound
or
ds
xor
lcall
fdivs
faddl
stos
jle
fsubrl
shrb
pop
push
outsl
data16
pop
imul
cli
and
jae
sbb
add
cli
jnp
imul
bswap
hlt
es
cwtl
mov
jge
sub
xchg
xorl
inc
and
icebp
repz
adc
sbb
jb
jbe
inc
es
mov
push
jge
cmpb
and
leave
jno
stc
nop
mov
push
xchg
xchg
dec
in
scas
and
cmp
push
mov
fstpl
adc
mov
test
inc
aaa
incb
arpl
scas
adc
push
aaa
fstpt
out
cli
jbe
cmp
andl
dec
popa
lods
aam
push
push
movsb
repnz
push
scas
bound
outsb
sub
daa
repnz
test
xchg
test
lods
mov
push
mov
addl
jnp
lcall
and
ds
and
fisttpl
push
lods
notb
xchg
and
mov
mov
mov
mov
add
mov
xor
push
cmpsb
dec
xchg
out
pop
shr
pop
fmuls
fldcw
dec
fdivp
jge
pop
scas
setae
lret
dec
mov
fistps
and
xor
cld
fs
test
les
push
int3
fadds
iret
das
mov
adc
jns
int3
outsb
into
mov
sub
repz
lcall
sbb
mov
mov
clc
testl
rorb
and
addr16
lret
js
hlt
loopne
shrl
int
fs
mov
ret
into
push
jg
jge
shlb
adc
dec
mov
dec
and
lea
pop
aam
fisubrl
data16
imul
sbb
idivb
inc
fmul
popa
cmp
outsl
outsb
test
push
mov
int3
loopne
push
sti
sub
cmpsl
out
mov
inc
lcall
stc
pop
fistpll
enter
fiadds
jecxz
xchg
sub
jno
jle
int3
mov
in
mov
push
hlt
int
push
inc
xor
inc
push
outsb
lret
bound
cld
jbe
add
shrb
shrb
adc
repz
xchg
fcmovne
andl
xor
xchg
imul
out
push
popa
lds
sbb
or
mov
dec
ja
jp
das
cmp
pop
jbe
adcb
lock
xchg
insb
adc
jb
lods
jecxz
fbld
jb
imulb
jbe
xor
adc
sub
pop
inc
mov
frstor
mov
mov
test
call
das
pop
or
inc
push
insb
movsl
shl
shrb
subl
or
hlt
arpl
fnstenv
idivl
pop
dec
add
cltd
mov
adc
cmp
and
dec
test
orl
and
cld
jp
xlat
pop
xor
scas
les
mov
fidivrs
lock
test
xchg
mov
test
jge
outsb
repnz
push
aam
jg
dec
sub
out
das
fisubs
jo
mov
pop
testb
inc
fxch
mov
push
mov
adc
lods
ss
adc
fs
sbb
sbb
imul
nop
mov
pop
xchg
cmpsl
ret
dec
xor
pop
lods
xchg
dec
pop
mov
mov
pop
nop
into
jb
push
cmp
scas
gs
mov
fs
jbe
test
xchg
push
jns
pusha
jns
arpl
in
sub
les
es
mov
jb
into
push
addr16
cmp
outsl
push
ljmp
pop
repz
adc
negb
loope
aas
mov
out
movsl
mov
cmp
ja
daa
inc
in
xorl
jbe
inc
int3
mov
cmpsl
ret
push
scas
popl
jmp
mov
or
jbe
lods
or
xchg
xchg
insl
cmp
push
insb
jbe
out
push
rcrb
and
sub
test
mov
jb
sbb
fwait
adc
adc
add
test
pop
fisubrs
ja
mov
dec
jge
cwtl
imull
aaa
rcl
or
jle
pushf
test
sub
mov
inc
sub
scas
inc
mov
xchg
arpl
and
sub
inc
orl
mov
jbe
arpl
sbb
xor
pop
out
cli
pushf
xchg
ret
mov
dec
imul
test
into
sub
dec
pop
outsb
dec
inc
xchg
addr16
stos
loop
push
call
cwtl
push
rcrl
mov
push
push
pop
mov
repz
mov
mov
xchg
mov
int3
xchg
add
xchg
jge
mov
pushf
mov
cmpsl
pop
inc
sbb
mov
sbb
and
imul
cmp
jo
dec
push
adc
test
mov
das
xchg
and
cmpl
bswap
cltd
int
test
nop
push
lods
lods
inc
fwait
out
lret
pop
mov
popf
xor
lock
mov
stos
adc
bound
fmul
sbb
stos
mov
dec
dec
adc
cmp
pop
fsubl
add
rcrl
int
inc
mov
mov
and
xchg
pushf
mov
shrl
and
jp
negb
xor
mov
or
sbb
mov
jae
out
fnstcw
push
or
xchg
xchg
imul
ret
jnp
jns
push
or
xchg
repnz
fadd
dec
mov
push
sbb
adc
xchg
cs
adc
jns
imul
cmpsb
mov
dec
scas
shr
loopne
mulb
movsl
loop
fs
push
lds
cmp
js
mov
xor
sbb
mov
fstpl
mov
mov
jnp
cmp
lret
sbb
push
addb
jb
andl
xor
ljmp
cmp
out
mov
pusha
cld
ret
inc
add
jmp
sub
repnz
mov
adc
xchg
out
pop
fldenv
cmp
data16
das
jo
js
pop
xchg
mov
mov
pop
gs
fbstp
mov
std
in
sbb
mov
push
adc
dec
mov
sub
inc
jae
incb
sub
repz
mov
psubb
fstpl
scas
or
mov
sbb
xchg
fs
fimull
popf
dec
bound
stos
and
lods
jmp
add
cmp
sbb
xchg
and
push
push
adc
sti
lods
jge
stos
dec
data16
sbb
test
cwtl
lea
push
ja
xor
and
lds
mov
jnp
shrl
sarb
push
mov
ret
cs
fsubrl
stos
lahf
xchg
adc
addr16
cs
test
push
test
adc
js
push
sbb
fistl
sbb
jge
jo
xchg
jb
fidivrs
gs
xchg
mov
fbstp
add
std
xchg
xor
sbb
into
inc
imul
and
aaa
mov
add
adc
test
xlat
mov
test
sbb
inc
jle
sbb
dec
clc
jge
push
icebp
test
adc
inc
out
das
loopne
test
repnz
xor
bound
stc
je
adc
inc
jmp
ds
jp
pop
roll
sub
stc
nop
jp
inc
repnz
push
push
test
xor
mov
pushf
aad
dec
pop
mov
push
ljmp
cmp
xchg
jmp
mov
push
es
xchg
push
push
xchg
mov
dec
cmp
clc
adc
inc
fcomp
mov
imul
pop
cmp
inc
mov
mov
fidivs
and
cs
push
inc
andnps
es
outsb
adc
lds
fstpl
in
adc
notb
les
mov
xchg
shlb
neg
mov
pop
sbb
xchg
and
add
inc
dec
mov
std
mov
xor
cli
loope
xor
sarb
xchg
cmpl
sahf
push
jmp
push
cmpsl
mov
rorl
xor
sub
pop
lds
mov
aad
and
roll
add
adc
fidivrl
sbb
pop
inc
sbb
xor
vandnps
outsl
aaa
or
dec
mov
mov
jno
sbb
mov
shlb
outsl
insl
adc
adc
addr16
xor
push
pop
imul
add
sub
cmpl
sbb
mov
mov
outsb
add
lds
xchg
iret
mov
xor
lret
xor
xchg
or
dec
ds
cmpl
call
imul
xchg
add
out
jne
adc
mov
cmpsb
icebp
enter
cmp
data16
lds
xchg
repz
dec
sub
fbstp
mov
fidivs
mov
insl
ja
mov
arpl
imul
mov
sub
xor
cwtl
pop
outsb
xor
mov
pop
pop
adc
lods
push
fwait
push
jl
mov
movsl
bound
push
cwtl
mov
pop
in
enter
daa
sub
lods
dec
es
push
es
popa
dec
loopne
mov
xor
cmp
sub
adc
leave
xchg
sub
sub
cmp
xor
add
and
push
fstpt
pop
push
or
and
cmpsl
fs
mov
dec
out
jg
mov
mov
inc
and
jbe
adc
and
inc
mov
and
flds
cmpsb
ss
pop
jmp
es
stos
iret
aaa
and
js
fmull
push
int
xor
pop
in
jp
clc
mov
push
lahf
push
cmpsl
pop
and
mov
or
mov
idivb
pusha
pop
ret
pop
cmpsb
sbb
stos
pop
or
jle
sub
sub
push
mov
xor
cmp
dec
repnz
mov
inc
out
mov
fmull
psrlw
es
in
xchg
arpl
mov
loopne
sub
cmpsb
jle
in
pop
sbb
or
pop
push
or
jecxz
cwtl
test
adc
mov
xor
in
std
cltd
lret
cli
add
xor
scas
mov
jnp
cld
lret
dec
in
pop
stos
mov
imul
inc
ljmp
iret
lea
lods
ja
ljmp
fiadds
mov
xchg
mov
rorb
outsl
fisttpll
sbb
and
jle
xor
sbb
fdivrs
jg
sbb
xchg
dec
loopne
cmpsb
lcall
lret
sahf
cmc
roll
lods
and
jbe
hlt
testl
sarb
and
jle
scas
pop
nop
daa
nop
out
hlt
movsb
shrb
add
dec
outsl
mov
mov
mov
rcrb
and
inc
add
leave
ja
xchg
xlat
leave
xchg
jo
xchg
mov
and
dec
mov
sbb
jns
pop
adc
mov
and
adc
arpl
jae
jp
xor
sub
mov
xchg
fwait
mov
push
stc
nop
inc
jbe
sbb
sub
mov
inc
int3
inc
jne
lea
xor
cmp
out
push
mov
adc
loopne
xchg
insl
push
repnz
cld
fidivs
and
lcall
xor
sbb
orl
rcrb
loop
dec
pop
and
sub
bound
outsb
test
rep
setl
cmc
test
pop
into
gs
jp
out
ficoml
inc
stos
in
fdivs
testl
into
pop
icebp
push
inc
rol
adc
add
jo
out
adc
icebp
inc
iret
sbb
dec
sar
daa
out
cmc
or
mov
loope
adc
inc
cmp
mov
mov
jne
xchg
xchg
aas
hlt
aad
es
inc
orl
push
stos
pop
fistpll
add
test
dec
std
or
or
lret
mov
data16
sub
push
fsubs
jae
pop
push
mov
cmp
xchg
loopne,pt
mov
iret
decb
pop
cmc
mov
mov
out
push
movsl
popa
add
cmp
mov
iret
or
fists
pop
dec
lods
xchg
xor
bound
stos
push
jmp
push
cmp
dec
sti
push
mov
leave
stc
adcb
xchg
xor
mov
or
sarl
fcmove
imul
loop
mov
push
cmc
addr16
xchg
dec
xor
out
std
push
xor
xchg
xchg
sub
mov
lea
cld
addr16
mov
pop
ljmp
pusha
insb
xor
lahf
arpl
daa
subl
lcall
idiv
daa
fcoms
ds
fldl
jbe
popa
lret
cmp
xchg
dec
pop
inc
dec
aam
add
filds
and
movsl
aas
cmp
add
fildl
mov
inc
mov
sbb
int3
add
mov
xor
lea
fldt
xchg
xlat
clc
shlb
cmpb
cld
scas
push
lahf
mov
push
sub
pop
push
aam
xor
pop
add
adc
leave
mov
test
aam
xchg
adc
cltd
xchg
scas
xor
mov
pop
cli
mov
cli
cmp
sbb
mov
push
inc
xchg
call
mov
sbb
sti
lahf
ss
dec
xlat
mov
aam
fsub
sub
mov
add
pop
dec
or
loop
push
or
or
mov
xor
and
test
inc
push
cmp
or
aad
pop
in
sbb
pop
jo
jp
test
loopne
bswap
jecxz
add
addr16
ljmp
js
pop
stos
inc
add
inc
addr16
lahf
in
xchg
inc
test
call
subb
mov
xchg
inc
pusha
jl
les
lret
sub
push
mov
jg
xchg
mov
fdivrl
lods
lcall
lock
cmpsb
lock
or
xchg
ret
js
scas
jno
lea
adc
jne
sbb
sub
imul
jp
xor
inc
imul
enter
and
mov
loope
test
jbe
mov
dec
mov
aas
rcrb
adcl
jge
sub
dec
push
dec
nop
or
cmp
loop
mov
xchg
dec
into
nop
push
hlt
sub
or
xor
mov
dec
fadd
pop
sub
jns
adc
pop
push
mov
xor
jne
and
inc
push
popa
test
ja
cmp
push
fcmovb
je
loopne
push
push
pop
insb
jb
ret
mov
xchg
mov
mov
mov
cmp
fwait
ljmp
mov
mov
addl
xchg
sub
jecxz
cmc
sbb
jae
jg
xchg
out
mov
or
mov
and
pusha
sub
sbb
mov
test
push
or
mov
jmp
popa
clc
xor
jg
xchg
fidivrl
xchg
aam
cltd
popa
test
mov
je
sbb
push
lcall
test
or
mov
aas
cmp
push
mov
cld
daa
adc
pop
fnsave
stc
enter
fidivl
mov
mov
jnp
ffreep
fsubrl
or
adc
fildl
fistl
js
or
out
stc
lret
daa
xchg
aas
rcrl
mov
jbe
dec
push
cmovb
outsb
mov
mov
jecxz
xchg
add
or
clc
push
cmc
popf
inc
test
out
dec
and
xor
cmp
jge
aaa
test
add
addl
dec
cmp
daa
popf
jne
jmp
imulb
repz
sub
dec
sub
nop
sbb
mov
fs
scas
fdivrl
sbb
sub
pop
pop
sub
pushfw
xchg
test
xor
test
push
xchg
pop
lea
jae
pop
mov
push
or
nop
mov
sarl
addl
sub
je
push
dec
std
sub
stc
adc
sbb
fmull
and
add
ljmp
addr16
cwtl
add
xchg
jg
xor
fndisi(8087
arpl
fnstenv
xlat
pusha
lods
sub
clc
jae
ljmp
in
imul
lea
xchg
adc
jae
xchg
jmp
or
mov
lcall
jp
int3
xor
xchg
adc
pop
addr16
int
loop
sub
xchg
and
pop
test
cmp
mov
lahf
adc
int
andl
mov
mov
adc
fistl
xchg
stos
mov
cmp
xchg
fsubrl
cmp
xorl
add
popa
mov
adc
pushf
lock
and
pop
addr16
adc
cmp
dec
dec
aaa
pop
leave
iret
add
lds
lret
lret
shrl
fdivr
jmp
mov
dec
cmp
jle
aaa
pop
or
or
daa
loop
pop
hlt
sub
ljmpw
lret
or
xchg
mov
sbb
movsb
imul
loope
pop
imul
mov
pop
aas
pop
icebp
jo
sub
stos
add
das
pop
cmpsb
lea
in
sbb
mov
movsb
cmp
mov
or
mov
mov
ljmp
lea
loop
in
adc
jae
xor
pop
mov
ret
lcall
mov
lods
mov
jo
fsubs
xchg
xchg
scas
dec
push
sti
out
xchg
movsb
or
es
fimull
dec
stos
mov
mov
out
add
ljmp
std
mov
insb
nop
out
iret
and
pop
sbb
add
xlat
stos
or
xchg
push
stc
nop
test
sub
sbb
sbb
addr16
div
retw
push
lea
arpl
pop
out
add
test
or
in
nop
pop
jp
lea
test
arpl
in
scas
test
pushf
into
sar
pop
xchg
cmpsl
xor
call
testl
pusha
int3
pop
in
fs
adc
out
mov
xorl
sub
and
xor
pop
repz
scas
ss
lods
xor
add
jl
cmp
movsl
cltd
pop
cmp
xor
sub
dec
test
cs
out
outsb
jl
loopne
xchg
insl
add
loop
sub
inc
enter
xor
inc
sbb
push
jmp
xchg
mov
enter
xchg
shrb
xchg
test
xor
add
mov
mov
scas
in
adc
mov
mov
sbb
jnp
xor
cltd
pusha
push
xchg
lahf
xor
fnstcw
xor
mov
push
aam
sbb
fs
fistl
sub
adc
pop
sbb
movsb
test
jg
divl
ret
aas
loop
cmp
pop
aaa
sub
cmp
pop
sbb
pop
rorb
sub
mov
scas
aad
mov
push
call
xchg
xor
cmc
push
jb
lahf
xor
cltd
imul
xchg
push
and
push
add
mov
stos
pop
xor
sbb
imul
push
sbb
outsb
add
dec
repnz
ret
dec
push
sbb
cmp
xchg
movsl
push
fbld
int
mov
adc
xchg
sub
cmp
jnp
out
jns
mov
adc
add
adc
push
dec
dec
pop
in
and
aad
dec
nop
inc
lods
mov
repz
push
es
inc
adc
in
in
cli
popf
fiaddl
dec
inc
jmp
mov
test
subb
shrb
cli
inc
lret
lret
inc
fidivrs
fstl
test
ret
and
pop
int
xchg
sti
sahf
insl
int
xchg
leave
pop
into
out
insl
and
aaa
mov
movsl
mov
stos
jns
xlat
repnz
mov
mul
hlt
pop
xchg
das
jge
aam
and
dec
mov
fldcw
mov
xchg
jo
test
mov
out
jb
lods
lret
pop
dec
push
stc
dec
jae
icebp
sbb
sahf
ret
push
fsubl
jp
mov
decl
stos
out
pop
inc
fs
jno
jmp
shl
lea
mov
mull
adc
lock
ficomps
inc
cmp
ja
test
lcall
xor
mov
mov
shll
mov
lcall
dec
inc
sti
fwait
in
add
dec
sub
pop
jbe
sub
add
fs
clc
mov
andl
add
outsl
jo
aad
es
jns
loope
mov
pusha
or
hlt
sub
lods
imulb
pop
dec
scas
lock
lods
repz
lea
fsubrs
push
push
xor
psadbw
jmp
aaa
test
sbb
push
or
dec
xor
sbb
test
aas
fucomp
imul
fmull
call
mov
mov
pop
sahf
ds
jl
push
push
jp
xchg
or
add
cs
jl
pushf
cli
lea
mov
inc
cli
add
lods
imul
mov
sbbb
test
lcall
cmp
sub
or
add
push
ds
scas
pop
test
arpl
int3
sbb
adc
ljmp
jno
rcl
and
add
cltd
xorl
push
xor
push
arpl
and
xor
cmc
dec
jecxz
mov
xchg
in
cmp
jp
push
xor
dec
pushf
xor
outsl
jp
xchg
pushf
inc
test
aad
pop
xchg
dec
inc
cmp
xchg
xchg
adc
aam
push
and
sbb
test
mov
sbb
and
negb
hlt
xchg
lock
pop
cs
lds
ds
pop
mov
movsl
movsl
js
test
mov
in
scas
movsl
cmp
adc
ret
pop
jle
loopne
mov
ret
shrb
add
mov
out
lea
inc
inc
and
movsb
xor
je
stos
bound
sub
inc
idivl
emms
or
aam
adc
cmp
sbb
push
or
jmp
scas
add
push
in
aas
push
xchg
sbb
iret
pop
nop
cmpsl
imul
pop
mov
mov
sub
mov
sub
jg
mov
movsb
jnp
cmp
xchg
pop
mov
cmp
adc
sahf
shrl
adc
xor
pop
or
jl
mov
out
dec
xchg
pop
xchg
sub
insl
daa
mov
decl
mov
mov
mov
inc
pop
sub
add
dec
std
push
fbstp
pop
repz
mov
sbb
sbb
push
adc
ss
pop
cld
mov
mov
mov
sbb
xor
inc
mov
inc
and
push
imul
mov
lret
test
add
jb
jnp
out
and
cltd
and
mov
mov
jb
movsb
mov
test
aas
xchg
jne
mov
xchg
dec
mov
push
jg
bound
outsb
sbb
jne
cmpl
fs
in
sub
pop
ja
js
outsb
fwait
cltd
jmp
mov
and
pop
push
xor
jmp
push
divb
xchg
add
jo
mov
dec
aad
xchg
sub
mov
fs
fistpll
mov
xorb
mov
call
in
hlt
xchg
fisttpll
je
incb
fistpl
xlat
cmp
push
pop
outsb
testb
push
and
das
les
xchg
pusha
dec
jge
xor
inc
ss
divl
sbb
into
push
add
jge
push
add
xchg
xchg
pop
or
xor
mov
add
dec
push
stos
hlt
pop
jae
pusha
and
flds
loope
enter
add
dec
test
jb,pn
and
mov
xchg
daa
lds
cmp
xorb
aad
outsl
out
push
lahf
fs
inc
sbb
into
pop
cltd
cmp
cmpb
pop
sti
sub
dec
adc
ljmp
or
xchg
push
lods
add
mov
fstps
out
loope
add
loop
xchg
movsb
jae
push
jno
popa
jp
pop
das
mov
in
push
xor
int3
notl
sub
in
dec
sahf
jo
lahf
xchg
sti
mov
leave
data16
cwtl
loop
pusha
dec
lods
repz
addl
adc
les
notb
ja
lds
xchg
sub
jnp
push
jb
push
addl
mov
lahf
and
add
xchg
mov
dec
rclb
xadd
and
stos
mov
mov
push
icebp
icebp
jg
push
pusha
ret
cmp
or
aas
xor
jl
mov
adc
xor
out
les
pop
jge
out
fsts
add
cmp
outsb
xchg
stc
sbb
clc
aas
or
in
nop
outsb
cmp
lahf
sbb
sbb
and
js
inc
mov
add
fxch
call
pusha
notl
in
add
jo
sub
push
push
shrl
aad
jo
fidivrl
ljmp
xchg
jp
inc
pushf
sahf
sub
jle
loopne
ja
enter
cld
data16
out
ret
dec
inc
notl
in
push
jmp
adcb
cmc
jl
sub
sahf
das
lahf
in
cmp
cmpsb
shrl
push
mov
push
repz
aaa
cmp
movsb
or
sahf
pop
cmp
mov
ja
jecxz
mov
test
mov
inc
ret
cmp
out
icebp
rcl
dec
push
test
pop
sub
rorl
and
orb
jo
data16
xchg
test
imul
enter
cmp
cmp
inc
scas
ret
xor
mov
out
xchg
dec
in
in
scas
fmull
jno
and
testb
insl
orl
pushf
nop
cmp
jmp
adcl
or
jmp
adc
sbb
jge
sbbl
lods
addb
or
cli
dec
xchg
jl
jp
out
shl
adc
and
aas
dec
iret
mov
dec
movsl
imul
push
mov
shr
or
pop
xchg
ret
mov
js
or
jnp
fcomip
popf
mov
shlb
jae
ret
aam
mov
mov
aam
push
test
sti
bound
sti
out
cmc
pop
xor
cltd
pop
push
jns
cmp
dec
mov
mov
les
mov
inc
jbe
push
mov
xchg
pop
push
jnp
lret
lea
ja
xchg
inc
int
mov
out
dec
loopne
outsb
test
fs
pushf
in
adc
mov
decb
mov
mov
das
inc
fidivrl
or
add
add
test
fidivrl
fnsave
fwait
xor
mov
ss
sub
cltd
push
and
or
jno
xor
repnz
dec
shll
mov
add
mov
mov
ret
pop
aaa
cltd
mov
inc
int3
mov
pop
push
daa
xchg
cs
add
cmpsb
mov
pop
ljmp
sub
xor
pop
cmp
add
ljmp
mov
or
and
fpatan
pushf
jp
jge
ljmp
push
inc
sahf
mov
inc
inc
cs
xor
int
cs
push
out
rcrb
fcmovbe
iret
jle
std
enter
pusha
stos
adc
sti
sub
fcmovne
pop
int3
cmp
out
adc
imul
cmp
mov
loope
popf
push
inc
mov
addr16
fildll
xor
cmp
cmp
into
fldln2
push
push
movsl
outsl
loopne
rorb
jb
cmc
fstpt
ss
xchg
add
sbb
shll
cmp
inc
sub
imul
imul
xor
xchg
orl
lahf
sub
dec
loopne
mov
push
push
ror
insl
stc
into
mov
nop
adc
aaa
roll
sub
adc
notb
psrld
lret
test
imul
insl
in
test
push
adc
mov
push
adc
gs
sbb
push
push
pushf
les
fsts
lods
inc
jno
sbb
out
inc
not
jl
int3
xor
xchg
outsl
fstps
sub
filds
ficoms
loope
loopne
pop
pop
add
test
and
sbb
pop
xor
aas
mov
cmp
fs
xchg
cmp
mov
sub
fsubl
push
push
cmp
push
mov
stos
mov
test
repnz
mov
shl
push
aam
cmp
frstor
ds
arpl
pop
mov
cmpsb
ret
xchg
mov
xor
int
mov
dec
inc
cmp
or
mov
enter
cmpsl
or
scas
dec
testl
jbe
push
nop
sbb
push
adc
jl
dec
scas
push
in
aas
mov
rorl
add
rorb
and
dec
in
push
shl
and
inc
pop
call
dec
adc
jae
pop
mov
out
cmp
inc
ds
lret
fnsave
push
mov
in
aas
or
pop
pushf
sbb
inc
orb
js
ds
ja
and
add
test
mov
jbe
sbb
xchg
adc
arpl
int3
and
inc
fisttpll
das
adc
popa
adc
jmp
cmpsl
inc
sti
testb
lret
leave
test
jle
sahf
mov
lcall
sub
aas
adc
push
fisubs
cld
sbb
push
inc
lea
adc
mov
je
aad
cld
stos
shrb
mov
lock
orl
add
pushf
adc
jle
and
jo
jp
xchg
jae
xchg
lret
cmpb
inc
inc
imul
outsb
mov
cmp
in
mov
sbb
adc
es
xchg
es
es
inc
pop
jbe
xor
dec
sub
jno
leave
sbb
jle
adc
pop
pop
add
inc
push
outsl
loop
lock
inc
cmp
aad
jbe
ja
mov
xor
std
push
das
das
mov
stos
inc
out
mov
pop
jb
jne
push
xlat
cwtl
lcall
xor
xlat
jns
push
inc
cli
push
les
adcb
out
nopl
lret
cmp
adc
lods
mov
jo
outsl
push
fs
and
movsl
test
scas
add
iret
pusha
es
push
jle
jbe
pop
stos
and
inc
inc
nop
dec
pop
jmp
xchg
out
stos
push
iret
fiadds
mov
cs
test
xor
sahf
push
loop
mov
repnz
inc
es
call
movb
or
imul
ja
push
sbb
inc
inc
decl
insb
mov
sbb
ret
inc
xchg
jb
je
movsl
jmp
cmp
out
xchg
sub
adc
mov
push
int3
lret
mov
xor
jg
xor
fmuls
inc
movsl
jmp
jecxz
call
out
sub
sub
je
xchg
xor
dec
or
pop
mov
push
out
jo
loope
sarl
mov
lods
mov
mov
std
cmp
jno
mov
orb
inc
mov
ret
lret
lods
ret
add
movsl
inc
dec
xor
aad
push
jne
lds
mov
sub
jmp
xchg
fmull
sub
jb
mov
xlat
xchg
push
or
sub
push
jne
mov
das
sti
sbb
dec
xor
mov
cs
test
add
or
xor
addr16
stc
xchg
sbb
in
lret
cmp
xor
fdivrp
cmp
or
test
adc
add
pop
dec
mov
imul
lods
rcrb
xchg
xchg
shll
pop
or
cmpsl
cmp
mov
mov
sbb
mov
dec
add
pusha
inc
or
fwait
out
mov
inc
lds
push
test
sahf
gs
cmc
jle
cmp
push
cmp
or
ds
outsl
mov
xchg
pop
insl
pop
lcall
out
out
cmpsl
sbb
xor
jno
push
fsubs
mov
aaa
sbbl
mov
jno
pusha
iret
in
addl
add
jne
and
rcrb
jb
jns
push
push
dec
addb
sub
cmpsb
ja
or
adc
inc
loopne
push
adc
imul
push
mov
dec
std
mov
xor
push
lock
adc
mov
lock
cmp
testl
arpl
push
call
fisubrl
fldenv
mov
stos
dec
loop
jp
int3
ret
pxor
mov
or
adc
add
xor
lcall
push
pop
mov
xchg
js
xor
or
push
rcl
cmp
mov
pop
xchg
das
fdivl
mov
mov
add
ret
sbb
lret
push
sbb
notl
rorb
std
adc
fwait
inc
pop
scas
lcall
test
mov
jne
jae
lret
movsl
scas
pop
fdivrs
and
xchg
mov
xchg
pusha
movsb
or
mov
in
aad
outsl
leave
or
sub
fnsave
int3
lahf
add
mov
test
push
mov
ds
lahf
xor
sarl
das
cld
jnp
stos
lods
push
mov
sbb
cltd
pop
scas
rcrl
out
or
cmp
adc
adc
pop
inc
fs
mov
ljmp
sbb
les
mov
jo
mov
lea
jo
stos
cs
xor
dec
inc
xchg
out
mov
sbb
sub
inc
stos
jo
lock
jno
xchg
dec
in
popf
out
popf
xor
frstor
cmp
mov
add
stc
pmaxub
pop
cli
mov
push
std
cltd
xchg
adc
inc
je
add
bswap
push
fs
test
push
repz
es
or
xchg
mov
or
jg
push
cmp
adc
repnz
arpl
add
xorb
test
ja
mov
dec
inc
dec
pop
inc
ds
mov
or
popa
or
push
mov
js
adc
pop
aam
push
xchg
das
mov
xor
lods
jb
les
lods
adc
fisttps
pop
lea
mov
sbb
push
mov
clc
and
scas
push
sarb
jns
jmp
repnz
jp
mov
xchg
sub
add
fnstenv
cmc
jle
lret
addr16
jns
or
ja
dec
loopne
in
fcompl
mov
inc
xchg
adc
fstpt
iret
or
xor
out
lret
lahf
call
loopne
jle
mov
mov
insb
incl
leave
xlat
dec
aam
push
int3
mov
popa
sbb
scas
lea
mov
loopne
add
out
ja
sub
fcomi
outsl
lea
cli
mov
mov
sbb
inc
hlt
test
es
xchg
stc
test
adc
xor
xchg
cli
cli
mov
stos
sbb
or
out
dec
loopne
sbb
adcb
sub
adc
cmp
push
out
scas
std
sbb
outsb
leave
xchg
je
mov
addr16
push
stos
xchg
mov
and
xor
fists
dec
cmp
cmp
lret
mov
sbb
ret
dec
or
sar
adc
sarb
adc
adc
mov
xchg
out
xor
mov
in
push
xchg
pushf
and
push
cmc
sti
stos
fstps
popf
mov
sbb
es
jmp
cs
xor
adc
inc
and
movsb
and
xchg
dec
stc
cwtl
cli
sti
sub
stos
pop
cmp
mov
pop
dec
dec
jno
xlat
mov
pop
cs
pop
mov
fnop
cld
imul
vmulpd
jns
push
push
icebp
repz
mov
mov
lahf
outsl
popa
cwtl
dec
mov
xchg
jg
xor
clc
sub
pop
jle
out
add
cmpsb
icebp
inc
sub
push
jmp
es
dec
xlat
or
mov
mov
fadds
imul
in
xor
xor
inc
sbb
cmp
push
jno
popa
mov
rcrb
dec
dec
ljmp
mov
jl
and
lds
insl
adc
cmp
fistpl
subb
push
fyl2xp1
xor
outsl
mov
pop
out
xor
cmpsb
lock
pusha
ljmp
dec
enter
ljmp
jbe
adc
mov
sub
lds
into
and
add
push
xlat
ja
out
in
or
jmp
lret
lods
pop
jmp
mov
inc
gs
stos
add
and
fisttpll
xor
mov
push
dec
ret
outsb
sti
xor
test
or
pop
lret
jns
lahf
mov
push
cmp
add
pop
sub
les
inc
mov
sub
test
push
jbe
adc
je
pop
bound
push
xor
jno
out
cmpsl
test
dec
out
popa
xor
jle
je
cld
outsl
pop
imul
adc
and
push
mov
ss
addb
mov
cmp
clc
push
and
test
mov
ss
fsubrp
sub
push
jb
bound
lds
mov
in
cs
cmpsl
nop
dec
orl
or
lret
sbb
add
cmp
xlat
sub
sub
loop
cmpsl
push
in
in
test
push
shlb
cmp
inc
in
testb
sbb
inc
inc
nop
imul
mov
lds
insl
popf
repz
mov
pop
shrl
decl
shlb
scas
rcrl
in
jae
mov
inc
sub
add
mov
shl
rolb
pop
or
imul
jae
mov
push
xchg
cmp
leave
jbe
mov
popf
sarl
or
test
inc
addr16
out
fstpt
dec
mov
mov
jnp
insb
xchg
addl
aas
cld
xlat
bound
stc
test
dec
jbe
sbbb
xchg
iret
clc
mov
mov
inc
repnz
xlat
cmpsl
arpl
cs
pop
sub
pusha
jbe
lahf
and
int3
call
ret
add
xorb
adc
pop
mov
fnstenv
js
mov
icebp
xor
sub
mov
mov
cmpsl
jae
int
fldenv
das
pop
jo
inc
xlat
fxch
xor
mov
push
sbb
aaa
loope
add
dec
dec
add
pushf
sub
mov
fistps
inc
add
xchg
ret
mov
cmc
mov
out
cmp
insb
xchg
add
fisttpll
stc
popf
mov
jmp
scas
inc
pop
aas
dec
dec
arpl
pusha
iret
push
je
dec
es
hlt
in
xchg
ficompl
out
jae
jmp
call
xor
jl
pop
adc
data16
aad
xchg
jno
adc
mov
icebp
repz
adc
insl
and
nop
daa
sbb
mov
sub
in
das
mull
loopne
testb
push
mov
ja,pt
ret
stos
ret
lret
in
addr16
and
inc
inc
leave
cmp
mov
pop
outsl
sti
test
pop
mov
ss
lcall
push
push
cmp
pop
jns
fsubl
cld
arpl
pop
jns
mov
push
mov
xchg
por
stc
pop
sub
ljmp
jg
sbb
sbbl
rorb
sub
or
push
mov
fists
test
ds
inc
inc
aam
cmpsb
mov
sahf
ss
mov
imul
repnz
test
jmp
dec
js
ds
and
inc
shrb
aad
out
ror
je
or
sbb
sub
xchg
adc
jp
sbb
mov
and
adc
js
imul
xchg
push
negb
outsb
push
dec
mov
mov
in
movsl
fcomps
mov
jbe
shlb
mov
mov
imul
pop
dec
pop
or
insl
decl
lahf
hlt
and
es
sbb
ljmp
jecxz
push
cmp
pop
lcall
inc
aam
js
push
testb
ret
test
andb
add
ds
push
insl
or
pop
sub
nop
outsb
jle
dec
frstor
shrb
in
xchg
or
ja
aam
mov
test
dec
xorl
scas
adc
sahf
in
pop
cwtl
xchg
fidivrs
insb
sarl
add
push
pop
and
push
mov
lods
insb
cmp
inc
cmp
pop
cmc
hlt
leave
mov
out
ss
pop
inc
cltd
repnz
mov
fdivl
les
jne
movsb
popf
nop
add
js
outsb
outsb
mov
cltd
insb
sbb
sub
imul
jmp
jge
notl
mov
imul
cmpsb
std
sub
and
cwtl
or
out
mov
insl
add
cwtl
lods
jo
mov
push
insl
cmp
xchg
push
fwait
add
scas
fisubrs
popa
jg
shrb
cmp
mov
sbb
pop
lret
adc
ret
in
cltd
outsl
popa
das
dec
icebp
ret
xor
call
idivl
xor
sti
cmp
push
aas
push
icebp
or
call
sub
sbb
int3
sbb
cmp
xchg
sbb
clc
fidivrl
popf
and
enter
jnp
dec
jae
neg
add
es
mov
inc
xchg
adc
push
imul
add
cmp
sub
jo
popf
xor
lahf
shlb
mov
in
rcr
adc
add
mov
jecxz
adc
inc
loop
jmp
xchg
sub
repz
outsb
push
fcmove
imul
sahf
dec
mov
std
and
shlb
mul
jp
xchg
jns
push
movb
movsb
pop
insb
sub
bound
out
fstpt
das
mov
dec
addr16
jle
push
mov
movb
adc
pop
mov
lret
xchg
push
sbb
mov
imul
xor
mov
out
inc
fwait
cmpsl
jbe
jge
and
adc
cmp
sarb
push
lods
call
dec
lods
inc
into
push
dec
mov
pop
dec
in
arpl
sarb
mov
cmp
mov
jbe
loop
dec
inc
cmp
imul
push
movsl
outsb
sarb
and
shlb
in
mov
subb
xor
jge
sub
jae
mov
mov
aad
jnp
movsb
xor
mov
push
lods
dec
cld
shl
outsb
xor
sub
pop
and
inc
xor
xchg
adc
push
ljmp
mov
into
fcmovnu
jmp
inc
push
mov
add
int
adc
ss
add
mov
scas
inc
iret
or
mov
adc
push
in
test
xchg
cwtl
adc
cmp
mov
movsb
cmp
inc
mov
cld
sbb
iret
std
test
outsl
insb
testl
push
lock
sub
stc
pop
repnz
xor
jl
xor
ret
hlt
jg
jl
mov
mov
or
lds
adcl
popa
and
fwait
jmp
out
xchg
test
rcr
cmpsb
in
or
daa
imul
xchg
mov
sahf
stos
lock
push
push
cmc
lods
into
dec
ja
in
test
out
ljmp
into
pop
test
test
pop
pop
mov
xor
stc
test
cmp
gs
inc
and
popf
out
loopne
and
aam
pop
pop
lahf
push
cmc
repz
aaa
add
test
and
frstor
push
jb
bound
addr16
fistl
cmp
sbbb
or
pop
jbe
sub
gs
jmp
mov
and
stos
cmp
inc
push
mov
mov
cmp
fs
mov
sbb
in
mov
ret
dec
in
push
mov
lahf
scas
adc
cmpl
enter
das
cmp
shlb
add
std
in
jno
xor
inc
or
addl
xor
pop
shl
xor
push
mov
in
daa
mov
mov
cmpsl
arpl
cmp
arpl
lcall
fiadds
aaa
in
jbe
mov
arpl
cmc
pop
sub
inc
sarl
sub
jp
fsubrs
jecxz
popf
sbb
shrb
mov
mov
mov
jge
out
icebp
mov
xor
mov
jae
inc
push
lds
dec
dec
jg
pop
push
in
lds
sbb
or
pusha
sub
addb
jmp
adcl
cli
in
std
cmpl
jecxz
int
xor
push
sub
in
mov
cmp
pop
rcl
imul
cmpb
mov
mov
mov
xchg
cmc
loopne
out
mov
out
or
iret
fldl
mov
int3
fcomps
ja
out
in
fsubs
leave
xchg
aaa
mov
add
sbb
or
cmpsb
mov
inc
aam
mov
or
inc
fimull
popa
cld
mov
add
sar
hlt
mov
out
mov
cmpb
pop
push
out
je
jecxz
in
fnsave
push
sub
push
std
mov
xchg
fiaddl
ret
repz
gs
cmp
test
jns
adc
jae
lcall
mov
pop
gs
push
jo
push
mov
loop
jnp
dec
dec
fists
cmc
mov
adc
fcmove
lahf
jb
stos
test
int3
jns
repz
sub
mov
lret
jecxz
sbb
and
pop
adc
or
mov
scas
es
lret
or
xchg
mov
adc
mov
xor
jmp
inc
fadds
push
or
ret
daa
pop
aaa
mov
cmpsl
lret
orb
and
sub
mov
xor
aad
cmp
sub
pop
jae
dec
fs
jg
cmp
rcrb
orl
sti
cmp
xorl
adc
jle
sbb
add
cmp
scas
push
pusha
mov
sti
xchg
push
sub
pop
adc
shll
stc
iret
mov
es
popf
icebp
dec
jg
push
jo,pn
xchg
pusha
xchg
xor
lret
ret
dec
loop
mov
fcoms
jo
push
fstpt
xor
es
stos
push
jecxz
dec
out
es
cmp
push
incb
enter
or
push
xor
outsb
hlt
fdivrl
pop
lock
mov
inc
push
sbb
xlat
sbb
sbbb
repz
adc
cld
sbb
mov
enter
mov
mov
aam
sbb
push
shlb
inc
sub
xchg
xor
int
dec
testb
shld
cwtl
or
movsl
scas
jb
mov
jno
mov
std
loop
ss
cmp
ret
xor
mov
outsb
sub
mov
and
jne
sbbl
scas
jno
sbb
ja
ss
ja
pop
aam
adc
frstors
sbb
jns
inc
mov
shr
xchg
sbb
dec
jmp
test
jmp
repz
jae
bound
out
xchg
iret
sub
sti
pop
out
push
cld
inc
pop
jbe
outsb
popf
es
into
aad
inc
in
cli
jg
xlat
outsb
mov
or
inc
or
mov
insl
mov
aas
jnp
xlat
pop
das
popa
cwtl
das
xchg
push
sub
pop
xchg
adc
sti
mov
mov
hlt
decb
and
rorl
sar
xor
sbb
popf
into
das
xchg
push
in
lcall
dec
scas
jg
mov
mov
in
imul
push
jmp
pop
data16
xlat
mov
int3
mov
adc
and
pop
and
imul
sti
jle
jno
and
bound
pop
add
push
out
cli
adc
mov
addr16
pushf
adc
mov
mov
or
js
push
shrb
stc
stos
jmp
imul
xlat
bound
lahf
xchg
repnz
das
xor
push
sbb
mov
nop
inc
call
mov
dec
hlt
inc
aam
rol
ja
dec
lods
and
sbb
sbb
out
dec
addl
into
in
adc
mov
mov
xchg
inc
sbb
setp
lea
xor
mov
lcall
in
jnp
pop
push
and
sarl
cmp
in
mov
sbb
mov
clc
lea
dec
or
inc
xchg
sbb
cmp
lock
dec
cmc
aas
jecxz
push
outsl
sbb
pushl
hlt
or
xor
pop
and
mov
bound
fisttpll
lcall
nop
mov
add
cmpsl
xor
dec
sar
or
pop
cmc
add
mov
iret
mov
cmp
adc
test
fs
sbb
pop
adc
xor
dec
add
pop
push
sub
cld
and
cmp
inc
in
cmpl
pop
das
adc
jns
push
stos
lds
push
lea
and
aam
scas
and
test
jne
mov
sub
sub
inc
xchg
mov
dec
mov
jns
ficoms
cmp
mov
jmp
push
dec
jmp
and
or
je
dec
pop
rolb
movsl
aas
jl
les
mov
xor
lods
repnz
mov
cmpsl
cmpsb
add
add
lret
xor
mov
mov
cwtl
scas
lea
or
push
add
notb
sub
cmp
add
adc
setbe
movsl
add
test
add
es
push
inc
sbb
jl
ljmp
push
mov
in
jecxz
and
mov
mov
hlt
testl
cmpsl
xchg
pop
mov
cld
or
jmp
pop
jnp
pop
ja
add
add
outsl
sub
sbbb
push
xchg
dec
inc
dec
fcompl
aaa
add
stos
cmp
mov
out
and
push
das
lds
es
jne
ret
cli
ret
mov
clc
imul
inc
stc
lret
mov
jno
inc
push
xor
or
lret
data16
mov
data16
cmpsl
cmp
pop
sub
push
pop
dec
in
jle
popa
sti
es
xchg
mov
add
pop
fnstcw
cltd
adc
push
scas
in
es
sub
cwtl
cmpl
faddl
xchg
repz
push
jmp
push
xchg
lcallw
test
js
addr16
inc
lret
por
adc
push
and
mov
inc
inc
lret
into
dec
or
iret
push
dec
mov
ficoml
ds
adc
adc
push
push
in
push
jmp
aad
cmp
inc
push
aaa
push
inc
cli
out
push
xlat
dec
out
and
fsubs
push
in
test
push
xorb
popa
fwait
xchg
repnz
cli
out
pop
and
mov
mov
in
orl
mov
outsl
std
cmp
movsl
push
cld
pop
or
xor
pop
jno
or
xchg
xchg
loopne
lahf
stos
dec
mov
sar
sub
sbb
scas
rcrb
adc
cmp
xor
cmpb
iret
jb
dec
xchg
pop
xchg
mov
mov
dec
xchg
dec
arpl
in
orl
sbb
sbb
adc
popa
add
sub
sbb
sub
inc
and
and
inc
cltd
mov
push
jl
icebp
mov
daa
mov
idivb
dec
cmc
fs
sbb
jno
lock
and
hlt
mov
lret
test
sti
lret
lahf
push
rcll
leave
push
mov
pop
xlat
lahf
mov
fcomps
loop
add
cli
sti
inc
stc
jmp
dec
test
mov
shrb
cmp
cmpsl
shrl
pop
idivl
lds
cmp
sub
jge
es
aam
hlt
mov
mov
movb
mov
andb
in
mov
push
fstps
repz
xchg
test
cmp
icebp
sbb
out
push
or
jle
cmp
outsl
stos
inc
mov
mov
jns
enter
ja
mov
pop
popf
lods
ds
or
mov
xchg
jmp
push
sub
or
dec
lret
test
jbe
aaa
xchg
movsl
xchg
ljmp
or
lods
movsb
inc
mov
jb
mov
stc
iret
imul
push
mov
outsl
mov
jg
insb
push
inc
sub
or
dec
leave
fucomi
push
out
andb
roll
or
jno
aad
addb
jle
mov
ror
bound
in
pushf
jg
mov
sub
xchg
and
je
mov
in
nop
adc
sbb
push
mov
jne
ss
sbbl
mov
repz
ljmp
jo
mov
cmp
push
mov
test
sbb
cmp
xor
xor
int
rclb
mov
test
adc
je
or
js
lahf
mov
mov
aad
ja
inc
cmp
sbb
outsb
jne
out
std
aam
lahf
or
inc
lds
ret
push
push
imul
jmp
adc
add
sahf
loop
pop
lock
out
fstps
rclb
fcoms
mov
push
lock
subb
xchg
jmp
bound
loopne
es
push
pop
jp
add
icebp
add
jnp
dec
xchg
xchg
push
inc
jle
pop
push
idivb
mov
sbb
xchg
jno
pop
adc
dec
enter
push
jno
push
jbe
imul
mov
or
popf
sbb
pop
cs
mov
jae
dec
ja
mov
arpl
dec
jo
or
stc
lahf
inc
das
icebp
daa
adc
xchg
int
dec
push
inc
in
jo
cwtl
aam
push
pop
jmp
out
cwtl
mov
pop
jg
sahf
jle
sbb
data16
int3
and
xor
hlt
ja
or
pop
push
jne
aaa
negl
jns
daa
popl
arpl
cmp
push
add
std
cltd
inc
sbb
test
adc
fucomp
pop
xchg
out
mov
jns
fisttpll
mov
mov
jl
les
test
inc
rep
dec
and
in
pusha
fnstenv
aam
adc
repz
push
in
adc
ret
or
in
sub
adc
cld
and
mov
xsha256
cmpsb
pop
cmc
adc
fldcw
fstpl
sbb
outsb
push
mov
das
mulb
jns
mov
xchg
sub
push
xchg
loop
pop
sub
repz
daa
js
scas
inc
inc
loope
add
sub
popf
ret
lcall
inc
sub
hlt
add
fistpl
pop
mov
fstl
xchg
adc
test
pop
and
xchg
xor
jmp
xchg
pop
xor
mov
cmp
mov
mov
push
cli
pop
ds
rolb
in
mov
jmp
push
es
push
adc
xor
add
aad
add
cmc
jo
jmp
cltd
out
cmp
and
adc
cli
into
loope
ss
push
push
int3
into
ds
xchg
add
repnz
fwait
clc
or
fnstsw
xchg
mov
cmp
arpl
arpl
test
sti
sub
dec
nop
or
imul
sahf
xor
push
push
mov
sbb
repnz
aam
sbb
dec
lcall
fdivl
push
cmc
stos
jecxz
lods
lahf
xchg
fldcw
or
inc
pop
out
mov
lahf
mov
or
inc
je
mov
add
add
add
and
adc
fcoml
mov
out
in
adc
out
les
clc
js
inc
outsl
inc
mul
xchg
xor
ds
lahf
pop
adc
mov
hlt
jbe
mov
lods
and
cwtl
lahf
mov
fisubrl
rolb
mov
push
inc
adc
mov
jmp
shr
add
ja
mov
push
test
fdivrs
mov
pop
fnstsw
sbb
xor
sub
push
jnp
sbb
mov
push
jle
scas
mov
clc
sahf
les
rcrl
call
sbb
iret
mov
push
iret
loope
mov
push
add
cmp
pop
subl
hlt
int3
imul
les
pop
pop
sub
cwtl
lods
lea
dec
mulb
cmpsb
inc
cmp
push
inc
xchg
fcos
push
xchg
mov
mov
std
jg
ret
hlt
test
cmpsb
std
push
push
shll
mov
and
notl
cwtl
fdivs
mov
sbb
notb
fcomip
imul
nop
mov
out
mov
lds
cmp
push
pop
xlat
push
pop
das
aas
dec
stos
cs
jbe
inc
cmp
fwait
adc
mov
roll
xchg
gs
sub
mov
pop
or
addl
jmp
ja
inc
rolb
pop
mov
add
dec
call
out
in
dec
jmp
mov
ja
out
out
adc
popf
inc
test
lret
mov
xchg
outsl
sbbb
into
enter
nop
sub
dec
pop
ficoms
dec
pop
scas
bound
adc
ss
jp
mov
gs
jno
lcall
mov
stos
xchg
enter
int
cmpsb
lock
push
cmp
jns
insl
add
sbb
test
cmp
xchg
add
daa
dec
stos
push
sub
adc
out
pop
bound
or
jbe
lret
cmp
xchg
incb
shl
push
les
xor
orb
leave
in
loope
aaa
ljmp
jge
sbb
clc
shlb
pop
mov
fildll
cmp
icebp
mov
or
fisubs
inc
loop
mov
mov
fisubs
jmp
vmovd
push
or
xchg
and
inc
stos
pushl
hlt
insl
test
sti
pusha
mov
js
inc
in
cmp
sbb
int3
dec
dec
pop
out
jmp
xchg
js
clc
fwait
xchg
enter
cmp
mov
pusha
addr16
loope
shrl
loope
cld
cmp
gs
cmc
or
int3
arpl
sbb
mov
mov
push
fbld
jns
push
call
fldz
sbbb
rcr
lret
and
jp
aaa
sahf
into
test
mov
hlt
add
mov
add
push
aas
mov
test
push
jae
cmp
lock
fadd
dec
inc
ja
in
sub
cwtl
into
gs
ret
hlt
xchg
popf
mov
adc
cmp
cmp
or
and
leave
daa
imul
popa
aam
out
rol
popa
or
jmp
cwtl
test
mov
nop
inc
xor
rolb
adc
ss
daa
pop
lods
outsl
test
add
sbb
and
add
xor
aad
inc
aam
fisttps
shrb
data16
in
je
dec
xor
mov
jecxz
in
movsb
or
xchg
cmp
jae
movb
movsb
add
sub
inc
and
xchg
enter
mov
ret
and
inc
imul
adc
movsl
mov
xchg
sahf
mov
lock
pop
shlb
rolb
stc
nop
adc
arpl
maskmovq
adc
jbe
jp
xor
xchg
inc
insb
cmpb
mov
lret
mov
inc
cmpsl
pop
fstps
out
add
cli
jecxz
sub
xchg
sbb
cwtl
xchg
and
loope
sub
adc
notl
xor
add
mov
inc
in
gs
arpl
xor
pop
sahf
inc
in
mov
sti
dec
cs
repz
mov
push
push
push
mov
testb
push
sub
ret
or
pop
js
cmpl
pop
mov
mov
mov
cmp
sbb
aam
sub
mov
mov
shrl
push
aaa
sbb
repnz
lret
lret
into
dec
ret
nop
mov
mov
push
nopl
data16
aam
aas
push
push
xorb
movsb
stos
xor
sbb
repz
adc
push
pusha
enter
pop
in
in
pop
and
jnp
or
cmp
inc
sbb
xor
sub
mov
adc
sbb
lret
sbbb
xor
inc
push
jno
sub
pop
mov
add
mov
xor
or
jnp
mov
in
ret
sarl
or
fdivrs
mov
fstpt
cld
enter
cltd
sbb
xor
jno
fimuls
jle
xor
push
cmpsl
jg
pop
xor
mov
in
adc
mov
xor
lea
and
movsl
hlt
sub
out
pop
in
jno
ja,pn
mov
int3
dec
testb
ljmp
jmp
or
inc
cmp
and
je
push
push
pop
mov
test
roll
jnp
cmp
andl
sub
jb
dec
dec
pop
xchg
dec
mov
nop
pop
daa
stos
out
push
nop
ljmp
inc
adc
ficoml
ljmp
jno
aam
out
pop
cmp
mov
out
sub
sahf
cmpl
xor
test
leave
test
lock
mov
inc
jg
std
pushf
js
stos
jb
inc
data16
xor
or
stc
outsb
jle
icebp
jl
stos
dec
test
rolb
faddl
push
jae
sbb
jp
out
or
mov
dec
cmp
add
pop
add
dec
daa
fiadds
cli
dec
cmpsl
xchg
jno
in
mov
xchg
sarl
cltd
out
cmpsb
hlt
mov
pop
pop
cmp
xor
nop
cltd
outsb
jbe
pop
daa
rclb
lods
sbbb
mov
push
inc
pop
icebp
xchg
arpl
idivl
sahf
test
cmpsb
int3
cmp
lret
dec
aam
outsb
lock
sub
inc
jb
movsl
je
or
cmp
jp
xor
fistps
add
scas
push
and
repz
push
or
leave
repz
push
fldcw
loope
out
das
test
pop
inc
fimull
popa
clc
pusha
repz
sti
xor
add
jle
inc
data16
jae
pop
sbb
push
mov
jo
xor
outsl
cmp
nop
push
repnz
mov
pop
mov
inc
ds
mov
movsl
movsb
xchg
pop
repnz
in
aam
ja
add
jne
imul
xor
jo
ret
mov
incl
or
and
stos
rolb
and
bound
cs
jp
lds
push
stos
es
sub
bound
dec
mov
inc
push
mov
repz
out
out
or
mov
mov
inc
jge
mov
jge
ret
or
xchg
daa
pop
insl
add
push
pop
mov
aaa
stc
imul
mov
xorl
dec
fsubrs
mov
lock
mov
lcall
pop
lds
xchg
cmpsb
iret
push
add
mov
and
mov
test
imul
test
ret
loop
psubusb
cltd
in
outsb
sbb
ret
sub
dec
inc
lea
jmp
mov
loopne
or
inc
divb
mov
and
sub
jg
xchg
dec
push
mov
stos
adc
or
inc
shrl
popl
jmp
lock
or
into
lds
inc
aas
and
jnp
inc
add
nop
jbe
add
incb
or
jge
cmp
pop
mov
fsubl
imul
push
adc
cmp
jmp
ret
js
jecxz
pop
adc
mov
sarb
outsl
lcall
inc
arpl
adc
xor
scas
adc
rolb
lods
push
push
fisttps
xor
cmp
fs
inc
daa
mov
cmp
mov
icebp
mov
xor
gs
andb
jae
cld
cmp
cmp
insl
rcrl
xor
mov
aaa
or
icebp
xlat
mov
stos
rcl
sub
fsub
dec
mov
push
mov
fnclex
aad
or
cmc
or
lods
nop
pop
mov
pop
es
xor
mov
jmp
loope
mov
inc
lret
xchg
lods
xor
sub
pop
stos
mov
dec
mov
adc
or
mov
aas
dec
cltd
int
fucom
xor
std
sub
and
jb
mov
xchg
outsb
and
xchg
ss
inc
cltd
jae
pop
ljmp
push
jne
insb
fdivrs
jne
jne
jae
mov
jge
dec
sub
fcompl
icebp
shlb
int3
fucomip
into
in
dec
cltd
sbb
push
pop
test
sbb
sbb
aad
jle
cmpsb
loopne
repnz
jp
data16
clc
cli
test
stc
and
ja
les
pop
insl
imul
mov
lods
sti
lods
jne
push
fscale
push
xchg
mov
xor
cmp
seto
rcll
jne
ljmp
push
or
shrb
mov
adc
pop
push
scas
int3
arpl
cmp
jns
add
aam
or
add
daa
lds
sbb
out
mov
pop
in
inc
jno
cltd
sbb
popa
dec
inc
loope
xchg
xor
pop
lods
je
pop
sub
and
cwtl
sub
inc
sbb
adc
icebp
xchg
pop
setne
decl
fwait
cmc
lock
jne
lods
sub
push
lods
add
in
idivl
push
out
sbb
push
jg
les
and
xchg
das
pushf
addr16
aas
lds
addb
xchg
test
lret
xchg
add
cmp
nop
pop
lar
mov
imul
rorl
test
and
movsb
popa
mov
mov
cmp
dec
cmp
popa
shll
add
inc
test
mov
movsl
jle
pop
inc
dec
adc
dec
mov
jb
or
xrelease
xchg
es
push
xor
push
lea
fcompp
inc
test
fucomip
das
fisubl
dec
and
stc
adc
ror
iret
data16
mov
pop
out
xor
mov
mov
xorl
add
gs
jns
mov
les
sbb
inc
sbb
sbb
pusha
negl
data16
push
mov
mov
sbb
stos
inc
jae
repz
inc
enter
sub
sub
call
in
test
cltd
fldcw
ja
addr16
mov
mov
xor
fbstp
push
fndisi(8087
outsl
inc
andl
jne
packsswb
cltd
dec
dec
or
mov
or
cli
mov
pop
inc
movsl
mov
add
or
movl
mov
dec
std
inc
sahf
cmpsl
imul
push
jne
add
dec
and
add
mov
andb
sbb
jmp
or
push
add
sub
jle
mov
ja
call
pop
nop
or
dec
adc
push
xor
and
mov
iret
jb
dec
mov
mov
push
mov
xchg
cmpsl
mov
jp
fmul
subl
mov
jae
xor
mov
pop
in
jnp
cli
pop
insb
sbbb
ffreep
inc
xor
add
sbb
dec
jge
pop
test
or
outsb
test
mov
add
stos
ja
push
mov
pop
imul
mov
decb
gs
adc
jae
pop
mov
dec
roll
add
sub
aaa
pusha
idiv
xor
test
xchg
mov
cmp
sbb
enter
imul
int3
pop
clc
sti
fiadds
push
lds
pop
pusha
pop
insb
bound
mov
mov
mov
shrl
lcall
mov
dec
fistpl
dec
fs
and
stos
aad
and
push
xchg
sbb
pop
xchg
jno
mov
sti
stos
sub
mov
es
ret
cmp
mov
or
push
pop
sbb
jp
push
mov
adc
mov
mov
mov
arpl
inc
xor
sbb
mov
jmp
pop
inc
sub
mov
cli
dec
repnz
pop
stos
mov
xchg
and
xchg
popa
and
cs
test
sbb
xchg
sbb
dec
jmp
push
sbb
push
std
int
inc
lcall
adc
cmp
cwtl
sbb
jle
movsb
cmp
cmp
and
dec
lahf
sbb
iret
mov
jle
xor
cld
dec
adc
xlat
sbb
out
mov
cmp
sub
popf
push
inc
dec
pushf
inc
lea
mov
pusha
jae
jmp
jo
mov
nop
pop
fisubl
push
ror
iret
mov
addr16
fcmovnbe
stos
mov
adc
js
pushf
mov
pop
iret
push
int3
dec
in
or
mov
push
sbb
cwtl
xor
loopne
jge
mov
and
inc
aam
pop
jecxz
fistpl
popa
clc
sub
sub
or
cmp
js
push
mov
lcall
or
xchg
mov
jo
imul
andl
xor
cld
sub
cmpsb
add
sub
repnz
dec
in
push
pushf
fwait
and
jge
jge
mov
repnz
sub
decl
pushf
mov
cmp
in
jle
les
loop
xchg
movsl
xlat
mov
lods
in
mov
cld
push
sub
xchg
stos
flds
in
jge
push
data16
jmp
jmp
and
mov
mov
inc
jmp
mov
dec
jp
jnp
pop
imul
pushf
in
pushf
int
cmp
dec
push
outsl
push
mov
mov
and
mov
stos
int3
and
dec
mov
mov
mov
fimuls
gs
cmpsl
sahf
dec
dec
fstpt
sub
movsl
mov
adc
inc
fadds
pop
inc
repz
fnstcw
arpl
imul
outsb
out
andl
mov
pop
and
inc
loopne
xor
pop
sub
leave
mov
and
sub
mov
je
cmp
xchg
xor
mov
and
les
push
pop
repnz
movsl
push
ret
jmp
dec
sbb
in
fists
and
jl
pop
leave
out
test
mov
inc
add
mov
filds
popf
push
mov
mov
pop
out
adc
push
inc
fcomps
sahf
lods
push
in
imul
jae
cmpsl
aas
lods
repnz
cmpsb
add
pop
mov
xchg
sub
mov
add
test
mov
mov
push
out
mov
in
js
lret
cmp
into
into
or
pop
adc
int3
mov
outsl
mov
mov
ljmp
in
pushf
mov
mov
outsl
add
imul
fsubs
adc
add
out
lds
int
jecxz
inc
aaa
int
cli
xchg
jge
into
push
jbe
cld
lcall
adc
push
pop
stos
cmp
lea
xchg
mov
mov
xor
mov
inc
push
leave
xor
addr16
sub
add
jne
sub
xor
xor
subb
mov
shll
incb
xor
jno
or
mov
sbb
rolb
jne
pop
in
mov
lahf
dec
scas
cmp
dec
pop
cmp
push
jno
clc
sbb
ja
mov
add
sbb
sub
inc
pop
adc
push
fst
sahf
xor
stc
call
shlb
sub
in
out
jne
loope
test
ret
pop
xchg
jp
fs
movsl
popf
stc
jge
mov
mov
and
ficompl
cmp
mov
hlt
into
and
shll
mov
jmp
mov
loopne
dec
cwtl
push
imul
cmpsl
xchg
testl
cmp
jbe
sub
rcrl
push
xor
jmp
clc
push
dec
pop
xchg
sub
int
das
stos
hlt
fistpl
insb
adc
xchg
jp
out
ss
sahf
enter
push
inc
mov
jb
jmp
out
adc
je
inc
jecxz
ds
das
cmp
or
arpl
jmp
pop
pop
fcmovne
push
cmp
sti
mov
insb
outsl
push
xchg
sub
andl
dec
mov
push
jmp
cmp
sahf
sub
or
shrb
mov
jge
icebp
movsl
sbb
sub
push
pop
pop
cwtl
or
js
mov
jnp
adc
mov
icebp
lods
xchg
and
adcl
roll
ss
fcmove
dec
fld1
jg
das
cmp
lahf
pop
insb
push
scas
lods
jns
fdivrp
cmp
neg
outsl
sub
ret
xchg
ljmp
leave
out
movsl
mov
sbb
sub
mov
xchg
jge
mov
ficompl
or
das
xor
leave
das
das
fildl
in
mov
sub
push
mov
dec
mov
mov
inc
sahf
inc
sub
cmp
add
sub
test
mov
movsb
out
lahf
movsb
das
pop
mov
lds
loop
xchg
jle
aam
loop
pushf
or
pop
inc
cmp
and
outsl
add
sub
lea
add
test
in
ds
mov
adc
xchg
shll
push
popf
or
and
imull
inc
loop
jle
xor
sub
loop
inc
sti
jbe
imul
jecxz
call
push
add
dec
hlt
cli
push
mov
cmp
and
dec
out
dec
cmp
xor
sbb
mov
sbb
dec
xchg
imul
mov
test
fcompl
iret
mov
mov
leave
out
mov
sub
and
adcb
ja
fwait
shrl
rolb
cli
shll
mov
cli
dec
xchg
repz
hlt
push
out
push
shrb
mov
xchg
sub
sahf
adc
xchg
mov
dec
lods
mov
adc
dec
add
subb
adc
mov
mov
repnz
xor
les
hlt
mov
mov
push
mov
add
imul
cmc
jge
sti
xchg
stos
sahf
js
enter
addr16
cwtl
dec
inc
outsl
sub
out
jge
lret
mov
data16
sahf
push
push
mov
mov
daa
xor
mov
shll
movb
pop
icebp
sub
mov
mov
test
push
xor
mov
int
test
push
jmp
aas
lahf
popa
jno
mov
mov
cmpsl
cmc
ror
mov
outsb
stc
mov
shl
sbb
ret
hlt
push
clc
sahf
loopne
and
xor
jg
neg
pop
push
xchg
in
aad
dec
stos
cmp
add
shrb
lcall
and
data16
and
mov
xchg
xchg
pop
mov
out
sub
cmp
pop
push
sbb
fwait
ds
out
xor
in
aaa
push
mov
stc
jnp
cmpb
push
arpl
ja
or
and
fwait
cs
inc
test
lods
xchg
mov
jmp
aaa
xchg
scas
push
test
mov
adc
cmp
mov
test
jnp
sahf
lret
icebp
cmp
adc
push
in
pop
mov
cld
mov
repnz
lahf
push
icebp
into
mov
adc
cmp
cmp
test
out
sub
lea
pop
cwtl
addss
cmpsl
xchg
sub
sub
les
dec
push
inc
out
data16
dec
pop
xor
out
sar
mov
es
into
and
inc
shrl
fwait
or
ss
loope
xchg
push
xor
xchg
loop
stos
dec
jo
jns
jl
and
dec
test
jge
mov
push
pop
mov
enter
xchg
push
jmp
mov
dec
push
add
sbb
push
inc
decl
imull
mov
mov
jg
push
xchg
jb
outsl
fnsave
xor
bound
jae,pn
cmp
andb
jge
mov
fisubl
add
add
fisubs
xchg
jecxz
xor
imul
jge
mov
fldt
insl
out
add
iret
mov
jbe
fiaddl
cmc
and
jl
mov
mov
loopne
push
push
inc
ja
pop
and
stos
mov
neg
xchg
cs
cs
push
stos
mov
lods
imul
popa
xchg
popl
add
pop
fsubp
pop
mov
mov
adc
ret
cmp
ja
gs
ja
cmp
cmpsl
fs
and
inc
mov
shll
adc
mov
fidivrs
sub
ja
in
push
enter
stos
xchg
sub
and
into
fdivs
mov
mov
test
nop
pop
sbb
nop
ja
sahf
xor
jp
nop
adc
lahf
xor
imul
into
adc
addr16
outsl
popf
in
std
push
fists
jge
stos
and
fnstenv
clc
sub
adc
add
xor
aad
fwait
xchg
pop
int
sbbb
out
mov
pop
lret
imul
or
or
jno
addl
push
adc
mov
je
push
xchg
je
test
movsb
dec
pop
mov
stos
fcmovb
mov
jl
sub
add
push
rcll
pusha
cmp
leave
adc
fs
xor
pop
in
test
inc
nop
xchg
jbe
dec
sbbb
push
sub
aas
sbb
outsl
push
dec
mov
mov
mov
test
push
lcall
jae
addb
mov
cmc
dec
cmpsl
add
fildl
adc
sub
push
lea
out
dec
xor
xor
push
mov
dec
dec
aas
in
xchg
dec
lret
mov
push
sub
test
jnp
push
stos
repnz
jo
clc
add
and
dec
jbe
negl
mov
jae
or
stc
stc
inc
movsb
mov
xor
mov
mov
pop
adcl
loop
xchg
mov
lds
mov
mov
lea
xor
std
movsb
out
xchg
lret
dec
pop
int
xchg
std
testl
or
push
mov
xchg
clc
scas
cmp
int
fwait
cs
addr16
jbe
popa
call
add
outsb
imul
jno
cmp
and
xor
adcl
jae
sbb
xchg
dec
mov
ja
cs
out
and
xchg
daa
sub
scas
inc
cmc
ja
cmc
int
push
lahf
cmp
dec
and
orl
add
loopne
push
stos
nop
mov
push
arpl
or
jp
and
mov
loop
jnp
inc
flds
mov
lret
lea
vmovhps
pop
push
push
xchg
shll
cmpsb
pop
dec
fwait
jae
andl
xor
in
mov
adc
inc
sub
or
mov
aad
xchg
inc
jg
rolb
sbb
fsub
in
in
cmp
sub
outsl
jecxz
pop
insb
leave
dec
jae
jp
jb
imul
mov
mov
add
cmpxchg
loope
pop
sahf
xor
gs
orb
in
cmp
pop
sub
stos
jl
pop
mov
push
xchg
popa
push
xchg
mov
lods
rcr
mov
rclb
loopne
jmp
add
test
fbstp
les
pusha
std
aam
sbb
mov
mov
adc
adc
cmpl
mov
je
repz
push
and
jb
pop
test
dec
jbe
xchg
pop
hlt
xor
cmp
xor
pop
cld
ja
aam
cltd
mov
push
subb
xor
ror
xor
es
movsb
inc
push
sub
leave
and
or
imul
imull
fwait
sub
int3
cmp
xchg
jnp
or
mov
aam
stos
mov
ljmp
out
ljmp
outsb
jl
aaa
shrl
lret
jne
repnz
negl
dec
xor
add
jge
sub
mov
arpl
or
in
test
in
lock
xor
cmc
gs
jle
push
pop
push
nop
pop
fld
xchg
pop
ljmp
jb
push
jb
mull
mov
jno
jge
hlt
scas
mov
mov
adc
pushf
mov
sbb
lcall
xchg
mov
push
inc
fcomps
cld
imul
cmp
fs
sahf
leave
test
test
xchg
push
test
stos
std
push
subl
out
or
xchg
xor
cmp
decl
orb
xchg
ljmp
xor
jbe
jae
mov
mov
sub
mov
add
mov
test
pop
sbb
or
xor
xchg
xchg
es
movsb
std
xchg
mov
sbb
xchg
mov
jge
jecxz
jge
inc
mov
add
inc
sbb
cmp
lcall
popa
notl
xchg
out
scas
hlt
fmul
arpl
push
lock
jbe
sub
xor
xchg
push
cmp
and
rclb
xchg
add
xor
shl
cmp
mov
popa
and
jnp
jno
decb
dec
sti
outsl
push
sub
or
jl
pusha
data16
ss
subl
dec
inc
movsl
inc
mov
mov
lods
in
xchg
notb
adc
inc
out
mov
andl
arpl
cmp
testl
test
imul
gs
adc
mov
sti
mov
xor
or
cs
cltd
push
ret
ficomps
mov
sti
xor
es
mov
nop
mov
arpl
subl
adc
out
test
xor
adc
sub
add
in
out
inc
sbb
cli
daa
mov
fs
add
icebp
jmp
pop
cmovle
mov
jge
mov
xchg
aam
inc
inc
dec
hlt
sti
and
aad
fcmovnbe
sahf
rcrl
mov
push
sub
sbb
dec
lds
repnz
dec
sub
les
icebp
xchg
out
daa
mov
push
imul
xor
jno
jmp
mov
imul
mov
mov
rcl
imul
xchg
lock
movsl
test
xor
jg
fwait
xchg
lahf
ss
push
test
sbb
insl
xor
cmpb
jge
imul
adc
push
dec
mov
addr16
mov
add
and
nop
push
repz
inc
ss
or
fisubs
or
and
js
ja
add
adc
and
gs
cmp
outsb
mov
adcl
mov
lea
sub
hlt
popf
enterw
ret
xchg
test
jo
rcrl
jae
pop
sbbl
dec
fdivrs
jl
lret
xchg
jmp
loopne
mov
fisubs
xor
mov
in
push
int3
lret
clc
push
mov
test
mov
aad
pop
cld
scas
xor
out
repnz
mov
jo
orl
mov
pop
in
stc
xor
sub
hlt
cs
inc
data16
icebp
jle
cs
push
add
adc
mov
xchg
inc
cmpsl
iret
and
test
xor
push
jmp
test
mov
inc
scas
xor
cmpl
gs
mov
mov
iret
negl
bound
xchg
sbb
lahf
lds
mov
and
out
add
xor
hlt
stos
sub
lods
fdivl
mov
add
mov
cmp
xchg
xchg
pop
push
or
into
and
clc
dec
inc
cmpsb
adc
dec
inc
sbb
leave
mov
dec
mov
jmp
lds
lock
dec
dec
and
sbb
in
adc
mov
push
cmp
cmp
fwait
inc
fxch
leave
cmpsl
adc
fcmovb
push
xchg
cld
mov
mov
mov
ret
gs
pusha
and
push
and
and
sbb
mov
mov
jne
addr16
dec
dec
inc
pusha
dec
cmp
icebp
inc
jecxz
jg
jns
popf
vpcmpeqb
jae
mov
adc
jmp
pusha
notl
add
orl
das
lock
adc
leave
push
das
insb
rcl
sbb
pop
cmc
aad
mov
mov
jl
mov
icebp
outsl
dec
lock
add
icebp
dec
loope
ds
lret
pop
dec
push
sahf
adc
shlb
or
scas
ja
push
loopne
sub
dec
and
adc
jo
pop
stos
jb,pn
insl
imul
push
pop
push
out
mov
mov
arpl
ret
push
mov
add
cmp
adc
scas
xor
xchg
inc
sbb
inc
xor
addr16
aam
pop
mov
push
movsl
mov
and
out
pop
jbe
mov
insl
cmpsb
mov
gs
lods
fwait
mov
dec
xor
and
mov
mov
nop
rol
inc
cmc
push
stc
daa
push
jae
mov
pushf
mulb
dec
sub
dec
xchg
mov
inc
push
das
fdivrl
addb
std
pop
cmp
cltd
stos
dec
xchg
cmp
jne
and
sarb
push
ds
mov
and
dec
movsb
jnp
add
mov
aam
push
popa
leave
repz
cmp
fsubr
aas
jb
aad
lock
dec
aam
xor
insb
and
jge
jns
or
arpl
xchg
cmpsb
shrl
sahf
jns
sub
adc
jo
clc
mov
cmc
mov
or
push
push
movsl
outsl
and
pop
push
dec
scas
xchg
jb
and
stos
mov
lret
cmp
adc
pop
pop
call
mov
pop
fidivrl
test
shll
arpl
cmpsl
adc
dec
sbb
int
and
stos
cs
leave
mov
lea
adc
xchg
fisubs
in
out
mov
mov
sti
shll
lcall
xor
jo
sarl
ds
push
and
push
imul
fcmovne
and
jmp
xor
inc
test
fsubr
stos
mov
cli
imulb
xchg
inc
mov
js
cmpl
adc
imul
jecxz
jb
lahf
push
scas
sbb
scas
cmp
rcrb
adc
je
cmpsb
fistps
inc
imul
enter
add
xor
push
pop
sbb
lods
jns
std
pusha
ret
mov
mov
je
cmp
insb
adc
outsl
push
sti
imul
xor
xchg
dec
in
pop
mov
mov
inc
out
pusha
mov
repz
inc
frndint
adc
int
fnstsw
sub
mov
cmp
pop
out
nop
cs
jbe
xor
sti
jg
xchg
enter
dec
nop
das
sahf
mov
fstpt
stc
push
je
scas
popa
sti
jno
sarb
lea
push
inc
shll
push
loop
pop
jbe
adc
popf
add
xchg
sbb
loop
dec
lods
lahf
test
sbb
in
xchg
inc
jecxz
hlt
mov
mov
inc
xchg
cmpsb
mov
dec
cmpsl
ds
jns
popa
lds
in
sub
jecxz
fistpl
testl
popf
rcrw
fldenv
inc
sbb
jmp
push
push
sbb
test
mov
daa
inc
sahf
std
loope
outsl
xlat
xchg
push
cwtl
imull
push
addr16
rolb
pop
or
dec
lahf
and
les
fnsave
lea
arpl
outsb
lods
shlb
popf
test
xor
and
fs
paddq
inc
sbb
dec
nop
sub
cmc
dec
adc
push
sbbb
cltd
xchg
insl
mov
mov
in
dec
out
mov
and
lret
insl
cld
cmp
sub
in
pusha
push
scas
or
sub
out
and
pop
push
inc
fsubrs
enter
mov
icebp
push
push
lahf
enter
ret
sub
pop
out
or
popf
pop
and
data16
loope
shr
adc
mov
rcrb
call
int
xchg
daa
fistps
sub
xchg
stc
nop
leave
xor
je
jbe
xchg
fs
rclb
dec
cltd
lock
cmp
mov
jne
popa
mov
adc
sub
shl
pop
subl
jp
cmp
inc
daa
adc
mov
pop
adc
aam
pop
or
xor
inc
push
outsb
imul
cmpsb
repz
lock
jecxz
jns
xchg
sub
es
fsubrl
inc
mov
lods
rcrb
adc
pop
cmc
push
daa
out
inc
xchg
lret
fsubrs
mov
ret
aad
in
mov
jb
add
shlb
add
mov
insl
push
xchg
dec
out
imul
imul
test
popa
mov
cmpsb
out
test
jl
jmp
jp
mov
and
add
les
negb
sub
sbb
dec
jmp
jns
mov
sarb
daa
movsb
out
insl
lret
cmp
push
popf
cmp
and
dec
cmp
push
lea
mov
xchg
and
fildl
jb
lods
das
lds
sbb
stos
jns
inc
pop
ja
dec
loope
into
loop
mov
or
sub
loope
gs
shrl
mov
rolb
imul
loopne
adc
gs
add
shlb
adc
jge
mov
arpl
mov
hlt
jge
in
xlat
xchg
mov
fildl
lds
cmp
in
andl
sahf
dec
in
or
lret
push
pop
lods
mov
xor
ret
sub
aaa
in
xor
cmp
jbe
outsb
sahf
push
mov
fistl
rorl
xor
adc
jnp
ficoms
push
inc
in
frstor
push
lock
lods
js
xor
sbb
push
jp
cmc
push
lods
test
inc
js
mov
ljmp
filds
xchg
out
pop
repnz
pop
test
mov
mov
cmp
jae
aad
push
nop
arpl
into
xchg
movsl
inc
clc
adc
gs
clc
inc
das
sbbb
vcvtpd2dqx
cmp
enter
xor
sub
and
jg
jecxz
sti
mov
arpl
andb
les
adc
std
and
data16
arpl
out
push
mull
popa
subl
fildl
mov
imul
push
fdivl
push
shrl
xor
les
xchg
add
mov
adc
or
mov
cs
sbb
jnp
fstl
cwtl
mov
and
push
pop
testl
inc
adc
cmp
cmc
mov
fisubl
xchg
pop
jg
adc
cmp
and
jmp
daa
call
aad
aas
shrl
incl
fwait
inc
mov
movsl
xchg
push
sub
mov
lahf
setl
cmp
pop
int
pop
xchg
ds
jno
sbb
arpl
cmp
jp
divl
push
mov
in
leave
ficoms
jmp
roll
cmpsb
pop
cli
sysenter
mov
jae
pop
mov
xor
pop
sbbb
dec
inc
rcrb
call
jnp
lods
dec
decl
imul
loope
ret
inc
stos
addb
xchg
or
into
push
mov
cld
addl
aad
rcrl
mov
lods
pop
jne
lock
mov
ja
push
mov
mov
cmc
aas
pusha
mov
in
lahf
mov
fmuls
sbb
jp
stos
sub
xor
stos
jl
loope
add
push
xchg
scas
xchg
cmpsl
mov
and
and
loope
decb
lea
mov
pop
cmpsb
sbb
fwait
xor
push
cmp
arpl
and
shrl
pop
sahf
orl
por
imul
mov
jo
mov
mov
in
in
mov
decl
inc
xchg
call
or
mov
cld
repz
add
lea
sarb
aam
dec
mov
or
push
aaa
rolb
call
mov
push
subl
orb
cmpsb
xor
and
mov
or
test
movsl
push
sub
scas
mov
jno
lret
push
das
sbb
stc
in
push
rolb
mov
lret
adc
dec
movsl
push
add
sub
jp
adc
iret
shrl
iret
cli
inc
push
cmpsl
rorb
and
leave
mov
pop
loope
dec
jmp
or
mov
fnstsw
int
mov
dec
add
jmp
movsb
push
and
push
jmp
xchg
fs
cmp
and
popf
dec
mov
jge
or
xchg
mov
cwtl
lods
mov
std
xor
fwait
inc
inc
sub
leave
mov
mov
push
add
cmp
shrl
xor
xor
mov
dec
loopne
stc
cmp
mov
icebp
dec
inc
add
jge
stos
in
aam
stos
test
repnz
hlt
cs
mov
xchg
nop
das
mov
jb
fdivr
mov
ljmp
lds
repz
mov
lcall
sbb
and
fisubrl
ret
xchg
jne
jmp
xchg
sbb
shrb
lds
xchg
insl
insb
ffree
cwtl
call
loope,pt
fcomps
imul
imul
lret
add
push
or
or
sarl
dec
out
push
mov
test
add
inc
jg
add
lds
in
pop
xchg
daa
shll
inc
xor
fisubrs
lds
clc
jl
lods
xchg
negb
xor
repnz
imul
sbb
into
lret
push
fbld
and
ds
pop
das
xchg
or
stc
in
add
scas
jbe
lahf
cld
dec
aaa
fiadds
jo
add
lret
repnz
jp
pop
or
and
cmpsb
jg
cli
pop
push
test
push
out
idivl
cmc
pop
jae
test
push
sub
icebp
pop
xor
pop
test
push
fwait
add
sbb
pop
lods
push
imul
imul
dec
xchg
les
pop
sbb
sub
cs
mov
imul
hlt
inc
out
stc
inc
sti
add
popa
imul
imul
aad
lea
les
movsb
popa
jo
inc
insl
add
xchg
mov
xor
mov
xchg
mov
call
pop
pop
fdivs
lahf
xchg
cmp
cmc
xor
rcll
testl
push
inc
inc
push
ljmp
xor
pushf
arpl
jmp
lret
test
clc
pop
leave
int
lods
fcom
sti
pop
xor
movsb
pop
imul
nopl
arpl
arpl
mov
xchg
rclb
add
pop
sub
lret
into
mov
sub
pop
jae
js
sub
and
imul
adc
adc
jbe
cmpsb
jns
sub
pop
shl
jle
rorb
mov
jl
add
inc
pop
sbb
add
fldl
push
in
sbb
pushf
sbbb
dec
add
cltd
cli
popf
popf
sbb
cmpsl
cltd
std
push
arpl
sbb
inc
fsubs
into
xchg
add
lods
lea
pop
ljmp
jno
push
cmpsl
pop
mov
xorb
cli
stos
scas
fstpl
daa
push
jge
pusha
mov
mov
mov
or
mov
add
leave
outsl
adc
mov
pop
dec
jecxz
loope
int3
rcrb
aam
gs
mov
sub
dec
xor
pop
inc
pop
bound
fsts
je
jae
into
mov
daa
outsl
sub
xchg
stos
mov
pop
cmpsl
stc
pop
dec
lods
scas
inc
jmp
dec
push
mov
push
xor
mov
sub
pusha
jbe
call
xchg
sub
jp
cmp
mov
jno
scas
je
loopne
cmp
in
pop
adc
mov
pop
cmpsb
dec
scas
outsb
adc
movsl
and
out
into
mov
jne
dec
dec
loope
xor
out
dec
pop
std
mov
xchg
and
push
std
mov
leave
out
lods
inc
dec
jecxz
jno
jo
dec
pop
push
and
out
in
push
cltd
and
cmc
stc
cmp
pop
loop
sub
adc
sub
data16
sti
sub
sub
add
jo
out
andb
mov
mov
jg
jb
hlt
insl
xchg
ds
jae
sub
rcr
push
fbstp
adc
popf
lods
or
dec
js
xchg
lret
fsubrp
add
jnp
repz
xor
fcompl
ljmp
jge
inc
push
pop
imul
mov
adc
xchg
stos
loope,pt
xor
xchg
push
xor
ljmp
test
push
inc
xor
mov
and
lods
and
clc
cmpsl
inc
mov
cmp
fcmovb
aam
sub
fdivs
add
jecxz
frstor
ja
jg
in
xor
scas
push
lret
rcll
cltd
push
sbb
xchg
jp
cmp
mov
icebp
in
inc
in
dec
movsl
mov
loopne
sti
cmp
test
sbb
out
push
repnz
jae
push
mov
fwait
pop
cs
scas
mov
dec
jle
dec
mov
mov
shl
repz
repnz
stos
add
dec
push
pop
rcrb
mov
cmc
push
dec
outsb
add
mov
or
outsl
jmp
lahf
and
mov
xor
lds
inc
jg
sbb
xchg
out
imul
xchg
outsb
add
cmp
mov
fwait
pop
mov
mov
jo
inc
push
cmpsb
xchg
gs
enter
mov
mov
add
jae
xchg
mov
rorb
or
xchg
push
out
dec
push
jmp
inc
cmp
or
rorl
ret
add
push
ror
mov
stos
push
pop
scas
or
inc
mov
inc
repnz
lret
in
or
lods
pop
jo
imul
jnp
lahf
and
incb
dec
push
xchg
aaa
lea
mov
frstor
fwait
xorb
adc
xor
data16
data16
push
pop
cmp
outsl
hlt
sbb
pusha
mov
decl
dec
jo
js
mov
xchg
inc
xchg
fsubrs
or
leave
je
mov
filds
fnsave
add
cmp
ret
pop
ljmp
into
ljmp
fwait
or
jnp
es
enter
pop
jns
mov
out
sbb
pop
cmpsb
jp
inc
bound
xor
cmp
lds
cs
in
fld
add
cld
jns
or
jle
push
mov
xchg
mov
push
mov
dec
or
sub
icebp
add
xchg
xor
iret
mov
inc
inc
ret
std
mov
cmc
mov
push
outsb
ss
xchg
jnp
clc
movsb
mov
dec
cwtl
inc
jnp
mov
loopne
stc
lcall
cli
int
xor
loopne
mov
push
cli
test
push
ds
sbb
or
push
cltd
popf
mov
xchg
hlt
inc
xchg
add
mov
mov
adc
mov
sbb
addb
lds
rcrb
cwtl
xor
fsubrs
pop
xlat
jbe
mov
ds
dec
leave
mov
inc
xchg
ja
psraw
mov
lock
cs
mov
lret
xchg
lahf
inc
jecxz
fidivs
ss
or
lret
insl
add
dec
les
jmp
orl
mov
dec
rorl
push
pop
adc
sub
cmp
xchg
or
jns
jo
rcrl
xchg
mov
int
jo
jne
rclb
lret
aas
cld
sarl
mov
loope
or
sub
jg
mov
pop
lods
cmp
jp
add
orl
mov
xchg
sti
adc
iret
sub
nop
xchg
jns
int
jae
mov
dec
mov
dec
cmpsl
xor
xchg
fcoms
std
adc
adc
sbb
lock
mov
std
shll
jp
inc
lds
out
pop
ljmp
call
sub
ja
imul
movsb
cmp
inc
sbb
mov
lds
jecxz
movsb
pop
cwtl
add
add
sub
add
into
sub
inc
lods
pusha
add
loopne
adc
flds
push
int
xor
lods
push
dec
push
push
xor
cltd
insb
xchg
in
pop
out
jbe
fsubs
or
nop
adc
mov
rcrb
adc
ficompl
scas
xor
sub
mov
pop
std
mov
jne
loop
sub
mov
subl
popa
outsl
xchg
cs
leave
dec
jno
call
inc
cmp
dec
fadds
jmp
sbb
push
mov
leave
popa
in
add
inc
and
dec
pop
je
or
xchg
jno
icebp
and
jl
jbe
xchg
jb
lods
jo
insb
push
push
push
add
popa
mov
xchg
arpl
mov
mov
mov
adc
adc
mov
sbbb
or
notl
xchg
or
cmpsl
sbb
and
mov
jbe
fs
dec
xchg
jno
mov
jnp
mov
cmpsb
dec
xchg
pop
cmc
ret
cmpl
and
dec
pop
aaa
inc
test
cmp
aaa
daa
out
jbe
push
mov
dec
and
cld
push
sub
sub
inc
testb
mov
xor
mov
mov
add
mov
sbb
ret
outsb
shl
sbbb
jecxz
inc
lods
cmp
push
popf
sbb
ljmp
aad
mov
jp
movsb
js
loop
lds
mov
mov
xor
push
push
ljmp
pop
mulb
and
pop
mov
add
mov
cwtl
xchg
adc
movsl
cmp
pusha
mov
push
adc
pop
add
shlb
jo
pusha
negl
addl
testl
sbb
jne
mov
es
mov
je
jb
in
push
fwait
dec
stc
test
test
data16
xor
iret
cmc
dec
jb
dec
sub
fdivs
push
lods
cmp
call
dec
mov
outsb
sub
daa
inc
popf
inc
decl
dec
xchg
popf
push
push
jl
nop
addr16
inc
jno
das
sub
testb
mov
push
inc
xlat
ret
pop
add
jnp
sbb
popf
scas
pop
jb
cmp
inc
pop
add
jmp
cwtl
rcrl
cs
inc
insl
dec
mov
orb
xor
into
xchg
or
in
mov
rcr
mov
mov
mov
xor
fcmovb
jp
mov
cmc
int3
pop
xor
loope
mov
mov
pop
les
daa
insl
imul
daa
rcl
sub
call
movsl
outsl
adc
xchg
inc
mov
mov
clc
movsl
mov
scas
pop
cmpsb
inc
pop
mov
inc
jle
mov
push
mov
outsb
push
fdivs
xor
in
mov
sbb
mov
mov
pop
add
jge
and
pop
lods
cmp
les
fstpl
pusha
push
cmc
std
pop
pop
movsb
mov
je
bound
fldenv
and
jne
jmp
icebp
sahf
sub
pop
sub
jmp
mov
das
in
fdivl
cwtl
or
imul
sub
xor
lock
mov
dec
data16
pop
pop
push
jl
xor
fimull
mov
mov
or
cmpsb
sub
pop
pop
repz
and
mov
je
aas
push
cli
add
sarl
rcrb
add
dec
pusha
idivl
jb
aam
inc
mov
inc
adc
mov
inc
push
movsb
cld
xor
fwait
aas
xorl
cmpsl
mov
daa
gs
add
orb
fucomp
imul
fs
xor
rclb
lahf
xor
xchg
push
imul
add
mov
in
sub
inc
enter
gs
inc
push
cmp
insb
testl
paddq
cld
mov
cmp
mov
jle
xchg
pop
xchg
cs
inc
xchg
js
in
sub
iret
in
inc
inc
aam
imul
movsl
push
into
div
dec
sbb
mov
jo
into
rclb
shrb
fsubrl
dec
mov
push
jbe
mov
incb
mov
push
rcrl
cli
loope
dec
mov
stos
pop
out
iret
mov
loopne
adc
rorb
int3
mov
fidivl
adcb
lret
jp
bound
cmpsl
aas
mov
jge,pn
pop
push
inc
shlb
inc
hlt
inc
icebp
pop
aas
popa
and
dec
test
mov
pop
cmp
loop
jae
xchg
mov
mov
aaa
into
repz
fmuls
adc
cmp
add
xor
inc
sub
fimuls
mov
and
popa
jno
iret
xchg
jmp
mov
mov
jb
and
pop
adc
xchg
inc
jnp
jle
mov
in
mov
sbb
push
dec
jnp
xchg
push
mov
pop
int3
shl
aaa
push
add
shll
insl
sbb
rorl
pop
popf
xor
lock
and
push
push
mov
mov
pop
gs
gs
cmp
mov
jg
int
gs
mov
mov
jge
pop
dec
mov
push
sahf
jnp
jnp
xchg
lods
or
lea
pop
lock
fidivrl
mov
ret
mov
arpl
fnstcw
mov
sub
push
jl
or
pop
icebp
clc
cmp
cmpsl
sbb
dec
pop
mov
xlat
mov
gs
stos
sbb
pcmpeqw
mov
fstpt
psubd
repz
cs
cs
imul
cltd
imul
push
lds
push
sbb
fs
ss
dec
out
sub
lods
sub
nop
adc
lret
mov
cli
jl
movsb
jecxz
sbb
dec
and
scas
cmp
mov
cmpsl
adc
pop
pushf
fadd
mov
xchg
outsb
xor
inc
cmpsl
push
cmc
adc
enter
mov
arpl
rcll
repnz
pop
rol
roll
insb
mov
sarb
push
jmp
dec
mov
fists
mov
in
sti
sbb
xchg
mov
movsb
mov
aad
sub
lea
adc
adc
cld
xor
inc
jle
sti
mov
lods
ja
call
sbb
and
mov
jmp
mov
cmp
sbb
inc
bound
adc
icebp
mov
fstpl
test
mov
enter
out
xchg
push
or
inc
mov
rorl
pop
mov
ret
ret
pushf
cli
inc
inc
bound
push
clc
daa
movsl
sub
cmpsb
pop
lds
xor
mov
adc
imull
pop
jo
push
adcb
ja
adc
push
adc
subb
xor
ret
jle
por
sub
mov
cltd
negl
shr
aaa
pop
ret
imul
sub
fisubs
mull
adc
sub
inc
fsubrp
jg
push
fs
sbb
dec
and
adc
cmc
lcall
sbb
mov
aam
popf
add
daa
and
call
jl
imul
nop
es
xor
mov
fs
fstpl
mov
aad
inc
and
add
jae
lret
fwait
xor
into
fisubrs
sub
add
pop
or
or
scas
mov
test
ja
adc
mov
adc
cmp
ret
rcrb
xchg
fisubl
stc
rclb
sub
lds
sub
xchg
dec
in
loopne
inc
test
in
pop
mov
pusha
pop
sub
popf
stc
pop
idivl
add
test
daa
in
adc
sbb
imul
xchg
mov
mov
sub
nop
out
inc
in
inc
popa
pop
push
pushf
arpl
pop
loop
pop
jne
dec
push
cmp
pop
mov
scas
movsl
pushf
or
sbb
sub
jmp
dec
jge
imul
adc
ljmp
jns
lods
sarl
out
sbb
cmp
push
loopne
int
sbb
addr16
scas
cltd
add
lret
adc
cmp
jae
mov
add
movsb
mov
sbb
push
rcll
ja
fistpll
insb
js
loopne
stos
dec
jbe
movsl
push
push
jno
xchg
jo
popf
pop
mov
std
xor
mov
jl
sub
cs
fadd
pop
push
mov
jl
cmp
insb
popf
add
dec
mov
cmpsb
lcall
push
into
lds
ds
jne
loop
sbb
or
mov
dec
in
adc
fisubrs
mov
iret
xor
sub
cmc
mov
push
push
rol
dec
push
clc
sub
lock
aas
and
add
xchg
psadbw
into
mov
pop
nop
bound
ret
mov
or
outsl
cmp
stos
ficoml
in
test
repz
fsubrp
cmp
xor
mov
jo
cmp
and
out
aad
pop
popa
ja
jno
stos
outsl
sbb
adc
mov
ja
nop
push
test
dec
sahf
mov
sub
xchg
popfw
jecxz
mov
mov
imul
pop
bound
int
nop
out
dec
cmc
fwait
int
in
add
xchg
mov
mov
mov
push
jno
ret
mov
xchg
ja
mov
adc
sbb
mov
pusha
adc
adcl
xchg
repnz
and
fs
cmp
stc
je
mov
and
pop
pop
jns
pop
xchg
movsb
cmp
dec
add
icebp
and
cmp
jne
adc
xor
cmp
push
cltd
mov
lret
inc
push
mov
cmpsl
sub
mov
jbe
dec
cltd
sbb
jge
enter
jnp
xchg
idivl
dec
or
xchg
push
dec
imul
inc
add
leave
loop
inc
push
mov
adcb
daa
popa
ret
pop
stos
inc
lret
mov
xor
loopne
popf
mov
inc
jecxz
jo
cmp
jns
dec
cmp
pop
inc
shr
aas
data16
xorl
mov
addr16
cmp
pop
mov
mov
loope
push
repnz
stos
add
push
in
shll
xchg
stos
sarb
jge
fpatan
insb
mov
mov
cmp
sbb
test
mov
enter
in
in
pusha
jns
mov
or
fldz
lods
out
fnstenv
insb
fistpll
push
mov
jmp
add
scas
xchg
cld
inc
jne
cld
int3
dec
push
jns
pushf
pop
sahf
inc
data16
mov
push
fsubr
mov
mov
xlat
inc
jecxz
push
pop
jmp
jo
push
ds
jmp
push
mov
sbb
push
jo
pop
sub
mov
jbe
push
and
pop
push
push
lods
pop
and
cmp
mov
loope
in
and
mov
dec
data16
jecxz
and
lods
fiaddl
scas
xchg
popf
inc
xor
cwtl
test
andl
cmp
cwtl
addr16
jecxz
mov
stos
jle
call
loope
out
push
out
test
mov
arpl
push
adc
addr16
fst
cmp
and
out
mov
and
xorl
lock
mov
pop
xchg
pop
movsb
clc
sub
scas
sub
sbb
pushf
mov
dec
mov
jbe
push
sbb
out
mov
add
int
testl
fwait
xlat
mov
mov
cmpl
pop
outsb
cmp
cmp
xor
sarb
int
sub
test
movsl
sbb
dec
push
cmp
ds
mov
adc
mov
mov
mov
add
iret
cmpsb
mov
into
cmp
push
outsl
ret
push
inc
inc
scas
or
or
sbb
xchg
dec
lret
xor
mov
dec
xchg
inc
xlat
mov
pop
imul
dec
pop
pop
out
leave
repz
mov
mov
mov
insl
sub
and
fbld
in
and
adc
jle
jno
popa
packsswb
jns
xlat
mov
adcl
xchg
into
in
xchg
inc
mov
pop
out
dec
mov
fs
jbe
pop
imul
xor
aam
jge
or
jge
add
imul
or
scas
mov
js
fcomip
dec
cltd
push
dec
call
cmp
and
repz
or
loop
lds
jbe
call
pop
repz
ficoms
jge
into
xor
mov
adc
nop
cmp
and
mov
jae
xor
data16
xorb
int3
sub
jmp
in
lahf
popf
addr16
mov
mov
add
or
and
shrl
js
popa
lock
xchg
mov
push
cli
int3
xlat
leave
cwtl
xor
inc
xchg
push
test
mov
gs
jl
out
pop
add
mov
jnp
jae
fs
mov
ljmp
mov
adc
ss
sub
imul
inc
cs
mov
int
xlat
pop
jmp
lods
les
adc
cmp
pop
inc
enter
dec
dec
gs
sub
test
mov
pop
paddw
add
arpl
mov
outsb
shl
pop
cmpsb
and
out
ret
je
jo
mov
fdecstp
and
cli
nop
andl
cs
aam
add
jge
out
bound
sbb
out
dec
push
roll
mov
mov
pop
ss
shr
das
xsaveopt
jg
in
adc
cmp
jg
mov
mov
pop
out
cld
dec
pop
mov
data16
stc
mov
ficomps
inc
inc
mov
jmp
adc
faddl
xor
fwait
mov
mov
aam
jmp
dec
push
pop
or
lock
ds
lods
popa
jecxz
vpavgw
mov
mov
adc
and
inc
adc
cmp
and
mov
xor
popa
or
imulb
outsb
out
sub
add
in
jge
clc
pop
insl
test
add
push
mov
rorb
aam
arpl
mov
mov
into
xor
imul
dec
int3
roll
adcl
pop
xor
mov
cmp
inc
and
dec
stc
stos
cld
arpl
lods
ljmp
jne
rcrb
mov
adc
cmp
cmpsb
lock
jo
push
sub
add
sbb
xchg
sub
add
clc
pop
mov
shrb
dec
scas
sbb
pop
movsl
sub
lods
in
lret
pop
xchg
shr
repnz
dec
jne
push
xor
pop
cmp
iret
dec
repz
out
adc
sub
inc
xlat
jmp
jecxz
roll
les
mov
or
in
outsl
in
bound
xor
dec
sub
sti
mov
xor
std
clc
in
jmp
push
adc
jp
xchg
add
insb
loop
and
lds
fwait
or
xchg
sub
xor
enter
push
jns
add
jle
pop
push
jbe
or
mov
movsb
mov
loopne
aam
jl
fidivrs
sbb
mov
lret
sbb
ljmp
mov
outsl
js
in
or
popa
inc
inc
cwtl
or
gs
xor
insl
cmpsl
mov
sub
fwait
cmpsl
add
jbe
pop
cmpsl
fdivrl
andl
stos
cmp
pop
bswap
cmc
add
into
jo
dec
int
mov
cmp
sub
imul
call
xor
jns
xchg
testl
and
or
test
scas
xor
out
jae
fsubs
int
daa
sub
jg
sub
push
repz
jle
inc
adc
out
scas
into
mov
jnp
cmp
mov
jbe
cmp
push
je
sub
nop
cltd
xchg
fxch
incl
sbb
movsb
sub
jle
push
arpl
vmovntpd
dec
idiv
stc
test
mov
decl
shlb
adc
sbb
and
je
ret
scas
arpl
push
insl
add
mov
fcompl
sub
mov
adc
aad
push
or
out
loop
jl
cmpsb
pop
inc
addb
dec
das
mov
pop
sahf
clc
mul
ja
pop
std
push
lret
movsb
out
fisubs
xchg
xchg
push
mov
push
dec
out
cmp
rorl
xor
cld
leave
rcrl
cwtl
icebp
in
hlt
pop
and
popf
lds
movsb
mov
sbb
add
and
jmp
xor
fbld
stos
push
aam
jne
fcomi
or
xchg
xchg
push
cli
dec
daa
xor
subl
lahf
sbb
jp
mov
push
jmp
lret
call
xor
or
sbb
sub
xor
lret
in
push
xchg
jl
and
in
clc
add
and
movsb
push
xor
mov
add
stc
loope
adc
movsb
xor
stos
data16
addr16
jl
sbb
data16
jle
dec
scas
push
mov
xchg
and
push
mov
les
push
in
popa
insl
rep
xor
je
push
cmp
push
je
sub
dec
ret
clc
add
sub
js
xchg
jp
dec
mov
test
lds
cmp
jle
sub
xor
jno
movsb
adc
pushf
inc
adc
shrb
lahf
aam
incb
repz
mov
jl
xor
jne
cmp
adc
outsl
add
xor
mov
nop
lret
xor
int
notl
sub
pop
ret
filds
stos
inc
outsl
loope
add
lea
xor
jecxz
or
sub
xchg
pop
dec
cmp
lret
pop
push
sbb
cmp
jcxz
jnp
cmp
mov
lock
int
pop
mov
mov
movsb
lds
lock
sbb
pop
add
lahf
inc
mov
addr16
mov
add
mov
ljmp
inc
fdivl
repz
mov
movsl
pop
outsb
roll
push
mov
test
in
inc
dec
je
inc
pushf
or
xorb
mov
push
test
out
lds
cwtl
and
push
cmp
xor
nop
jge
enter
or
stos
adc
sarb
lahf
pop
dec
loope,pn
es
in
jns
mov
sbbl
and
fists
and
mov
out
cmp
pop
in
inc
rcr
lds
jbe
les
out
push
jo
loop
imul
sub
fldcw
xchg
sarl
mov
push
sbb
mov
shl
push
mov
mov
sub
sbb
gs
cmp
and
test
shrb
mov
xor
jp
and
out
pop
ljmp
pop
push
test
or
xchg
ret
mov
loopne
cmc
rclb
pushl
test
rorb
and
mov
stos
mov
sub
jno
ja
call
cld
dec
add
mov
ret
xlat
addr16
aaa
lock
lcall
insb
fsubrs
mov
popa
ds
mulb
decb
sub
stos
inc
enter
lds
clc
dec
mov
fldt
jle
or
sub
mov
incl
sub
paddb
repz
inc
inc
into
addl
push
mov
fdivl
mov
cmpsb
aam
mov
aad
pushf
jb
add
pop
mov
lods
push
js
enter
xchg
jmp
add
fisttpl
shrb
and
bound
int
pop
xchg
push
scas
movsb
sti
pop
mov
lea
pop
jb
mov
xor
inc
sub
stos
aad
es
mov
test
out
jne
fmul
data16
in
cli
cld
or
dec
push
sub
lods
int
mov
out
push
fcoms
stos
jecxz
mov
outsb
pop
cmpsl
lds
or
xchg
and
adc
dec
bound
push
mov
subl
pop
jge
imul
sub
mov
mov
sub
jg
sbb
imul
in
mov
mov
popf
in
jbe
jo
cltd
rolb
idiv
rol
gs
es
push
pop
mov
sbb
std
push
pop
fldt
ja
jno
add
jecxz
dec
adc
data16
xchg
outsl
js
gs
movl
es
cmpsl
pushf
or
jmp
inc
ret
fistpll
dec
add
mov
push
ljmp
out
ffreep
in
mov
mov
mov
lea
push
call
dec
dec
arpl
shrl
add
shll
jg
xchg
loopne
testl
cwtl
push
aaa
dec
mov
mov
xor
xchg
mov
push
mov
movsb
jp
jl
adc
add
mov
sub
int3
sub
outsb
outsl
andb
leave
flds
xchg
orl
dec
repnz
or
stc
mov
dec
out
ljmp
jno
mov
fsts
cs
nop
sbb
mov
scas
or
and
fmul
cmpsl
fnstenv
push
or
xchg
scas
add
lods
push
cmc
pop
icebp
outsl
jo
mov
sbb
lods
cli
shrb
std
stc
push
mov
out
dec
xchg
mov
hlt
imul
adc
dec
filds
std
push
adc
mov
jge
les
xor
loope
dec
push
lods
cmp
pop
movsb
pop
dec
iret
pop
insb
pop
ret
xchg
jge
sti
fwait
stos
sub
jge
and
or
cmpsb
mov
cs
sub
arpl
mov
inc
out
les
or
cmp
add
insb
imul
mov
aad
adc
inc
aaa
mov
mov
pop
adc
or
das
xor
push
pop
sbb
xchg
and
in
cmp
adc
xchg
cltd
mov
lret
mov
jg
loopne
mov
pusha
or
mov
xor
loope
int
xchg
dec
mov
or
loop
lea
jno
ja
adc
dec
cmpl
in
stos
pop
pop
mov
loope
test
add
into
jns
push
cmp
add
loope
jecxz
stos
pushf
arpl
push
mov
push
int3
and
or
lahf
stos
add
mov
add
outsl
pop
shld
push
into
repnz
das
addr16
cwtl
jp
jb
js
xchg
stos
out
and
mov
jb
xchg
fnsave
ficoms
imul
jo
ficoms
adc
ja
adcl
pop
sahf
dec
mov
mov
or
xchg
sub
fisubs
mov
sub
xorl
lahf
add
pop
loopne
xchg
and
insb
lret
mov
jg
mov
pop
xor
pop
xchg
xchg
movsb
mov
sub
cwtl
test
add
popf
mov
clc
mov
addb
pusha
jp
mov
rcrl
push
sbbl
mov
pop
fnstenv
shrb
or
xchg
clc
pushf
std
dec
add
sbb
idivb
inc
or
in
inc
add
ret
lret
bound
dec
cld
pop
cltd
outsl
inc
mov
cmc
leave
pusha
mov
insb
xlat
insl
inc
scas
lds
sbb
add
add
push
cmp
insb
int
test
leave
dec
loope
xor
repz
js
bts
inc
fists
or
mov
jne
jbe
adcl
pop
jb
std
sub
xchg
adc
rolb
testb
jo
sub
push
push
cmp
push
pop
movsb
loopne
addl
notb
push
fdivs
xchg
adc
mov
arpl
lret
sti
and
add
repnz
ljmp
call
sbb
arpl
roll
mov
ljmp
loopne
xchg
mov
push
jno
pushf
lret
jb
mov
cmc
daa
mov
movsl
mov
push
das
jle
and
push
sub
sbb
jnp
ret
sbb
test
fsts
inc
pop
add
fs
fsubrp
jno
fdivrl
xchg
mov
xor
jg
push
lahf
cmp
pusha
jp
mov
mov
shrl
dec
fdiv
add
je
das
in
popa
pop
subl
push
sbb
jmp
push
test
aas
push
dec
push
dec
aad
or
loope
lret
aad
testb
add
jbe
in
into
push
or
adc
lret
jb
mov
sbbb
pop
jo
jg
mov
pop
outsb
leave
push
outsl
loope
mov
mov
sub
jg
sbbl
pop
es
jno
mov
cs
xor
xchg
daa
xchg
inc
push
addr16
mov
sti
cmc
xor
ficoml
addr16
add
xor
pusha
xchg
lret
mov
cltd
mov
sbb
pop
iret
xor
mov
push
cli
pusha
nop
push
aas
dec
pop
repnz
push
lret
jmp
lret
mov
mov
pop
jecxz
adc
mov
cmc
mov
jmp
hlt
sbb
daa
mov
jnp
enter
xor
jbe
daa
push
outsl
mov
mov
xor
in
pop
push
hlt
stc
sbb
cmp
sbb
dec
cltd
xor
mov
outsb
sub
nop
push
cmp
xchg
mov
sub
test
mov
addl
loop
xchg
adc
stos
add
add
mov
jle
out
mov
dec
inc
inc
cld
ret
leave
shlb
push
lds
es
mov
out
xor
cltd
fs
shll
fs
pop
jns
pop
mov
dec
xchg
push
or
adc
add
mov
pop
pop
lock
adc
xchg
ja
mov
outsl
dec
out
aam
stos
enter
out
pop
mov
in
pop
sbb
mov
sub
cmp
out
mov
repnz
cmp
mov
sub
adc
pop
jo
jbe
outsb
test
divl
les
inc
dec
cmpsb
sti
xor
cmp
and
lcall
and
jno
scas
out
or
cmpsl
dec
fbld
sub
fcmove
push
andl
mov
psubd
push
shl
add
mov
loopne
or
fcomp
imul
push
push
adc
pop
fwait
xorl
rol
pop
adc
jae
pop
xor
sub
xor
cmp
pop
push
sbb
lret
roll
mov
hlt
scas
imul
push
fistpl
adc
xor
mov
bound
push
xchg
int
stos
dec
jp
jl
into
inc
sti
mov
loope
dec
sub
pop
fldcw
xchg
mov
adc
lea
lock
lret
or
xchg
pop
pushf
xchg
cli
gs
xchg
sbb
cs
rcr
ds
cld
bound
scas
and
jno
in
ljmp
cld
fstpl
dec
sub
lahf
jne
filds
es
dec
lods
jmp
lock
or
les
sub
add
jge
out
push
cld
sbb
mov
sbbl
pusha
mov
aad
cmc
xchg
sbbb
pop
dec
and
inc
jbe
cwtl
bound
iret
mov
arpl
lods
push
push
and
sbb
cwtl
int3
xchg
pop
mov
int
cld
jg
sbb
sub
cs
pop
test
push
xchg
enter
xchg
sbb
je
inc
and
push
adc
xor
lea
int3
ficomps
push
xchg
mov
push
cmpsl
cmp
inc
mov
stc
movsl
ret
loope
pop
adc
xor
sub
in
fimuls
dec
mov
mov
push
jo
addl
negl
into
subl
dec
and
test
jns
pop
dec
cmp
push
lods
pop
lret
daa
ja
pop
mov
push
pop
jno
ret
inc
xchg
sub
inc
stc
adc
xor
dec
sub
outsl
scas
adc
jnp
xchg
mov
adc
lret
add
adc
roll
shl
dec
ficoms
repz
push
mov
pop
xchg
sbb
inc
xlat
inc
cmpb
loop
push
cmp
mov
stos
fsub
xchg
adc
sahf
push
mov
xchg
lods
pop
push
rorb
xchg
add
cmp
dec
mov
xchg
push
divb
jo
cmp
cs
ret
xchg
jb
xchg
in
movsb
cmp
hlt
fwait
sti
push
ret
aaa
call
lds
sarl
mov
mov
push
jle
adc
mov
xchg
inc
test
push
inc
arpl
xchg
popa
pop
ds
inc
movsb
mov
cltd
dec
out
fwait
jbe
pop
scas
add
repz
ds
mov
xlat
jmp
jo
dec
mov
lcall
loope
in
xor
int3
ljmp
jmp
in
sub
sbbb
repz
pop
mov
push
or
movsl
add
icebp
xor
inc
adc
cmp
js
rcrb
xchg
and
mul
dec
mov
fnstsw
push
pop
xor
pop
ja
imul
xor
mov
pusha
popa
fcoml
cmc
jge
pop
jg
inc
sub
xchg
cmc
mov
movsb
clc
adc
push
cmp
test
popf
lods
xor
add
or
das
addr16
or
mov
or
or
push
shrb
pop
jae
inc
sahf
stos
xchg
imul
mull
pop
jo
pop
push
and
ret
or
iret
dec
loopne
dec
std
or
lea
sbb
loop
lock
call
mov
lahf
pusha
std
sbb
pop
ret
add
rorb
add
cltd
jb
in
sti
cwtl
ja
xchg
fimull
shrb
mov
add
aas
adc
jo
add
loope
insb
jecxz
cmpsl
ds
lock
into
inc
pusha
fistpl
sbb
shll
aas
adc
std
mov
popf
pushw
pop
cmc
xor
sub
andl
jecxz
popf
pop
imul
cs
mov
mov
push
add
dec
inc
stc
cmp
lods
or
ljmp
jno
xchg
mov
pop
je
int
and
sahf
push
lcall
push
bound
xchg
mul
mov
bound
jle
lds
cltd
je
sarb
imul
xchg
lock
jg
repnz
xchg
cltd
adc
out
mov
inc
and
mov
shrl
js
stos
cmp
scas
mov
fidivs
or
out
xchg
ds
and
xlat
scas
test
and
not
mov
icebp
mov
nop
fs
mov
or
mov
cmp
jle
ss
fcmovnb
xor
call
or
lock
pop
sbb
lret
inc
stos
jo
sub
jno
xchg
repz
fidivrs
add
test
push
or
mov
out
and
sbbb
icebp
pop
das
ja
addr16
test
bound
lods
or
jae
mov
sbb
shrb
mov
add
sub
ss
push
in
daa
mov
iret
out
std
or
icebp
pop
dec
add
rorb
mov
lcall
add
daa
mov
jno
inc
push
mov
lcall
or
addl
scas
jecxz
add
lods
fucomp
aam
hlt
mov
xchg
jge
aas
or
loopne
das
mov
push
movsl
imul
add
mov
ss
mov
dec
bound
jae
add
mov
arpl
mov
out
fwait
imul
test
subl
aam
nop
inc
faddp
xchg
mov
hlt
cmp
bound
popf
pusha
mov
gs
addr16
jge
rcll
adc
sbb
jnp
cmp
ja
mov
mov
mov
addl
std
cmc
mov
mov
cmc
adc
jne
dec
aad
push
jl
mull
scas
jbe
xor
jo
stc
dec
cmp
decb
mov
mov
mov
mov
cmpsl
dec
daa
adc
dec
or
push
mov
fwait
out
pop
cmp
in
xor
jge
cmp
mov
les
mov
pop
cmpsb
jp
sbb
add
cmp
stos
pop
cmp
mov
inc
iret
lret
pop
mov
shrb
sub
push
xor
xchg
pop
mov
rcl
enter
pop
outsb
cli
mov
ror
xor
jmp
add
mov
shrl
dec
clc
test
push
mov
mov
cmp
dec
jmp
iret
sarl
add
sub
clc
jnp
pushf
jbe
popf
aas
cmp
stc
test
add
mov
xor
mov
jae
ss
dec
mov
dec
inc
inc
lea
fcompl
leave
mov
icebp
call
inc
sahf
ja
xlat
and
sub
mov
push
sarb
divl
sub
aaa
and
pop
pusha
testl
rorb
out
sub
or
or
pfrcp
cld
xor
cmp
and
jg
movsl
xchg
dec
sub
ljmp
andl
xchg
jle
mov
push
mov
xchg
inc
out
ss
mov
push
xor
jmp
mov
push
push
imul
lods
shrb
cmp
xor
jb
sub
enterw
mov
lret
sub
cld
enter
popf
inc
outsb
mov
sbb
xchg
lret
ret
lock
shlb
sahf
scas
testb
shlb
sbb
jge
fisubrs
dec
stos
xor
fwait
out
mov
add
mov
mov
push
cmp
jg
dec
and
fcomp
mov
movsl
fists
push
into
aaa
into
mov
mov
stos
inc
mov
jge
pop
xchg
adc
dec
lods
lret
push
test
lahf
lods
fwait
jecxz
int
adc
adc
mov
and
imul
js
imul
fistl
test
std
daa
lds
in
rcrl
loopne
loop
nop
lahf
or
lock
imul
sub
fs
add
rcll
push
dec
hlt
add
je
lods
push
lods
pop
pop
mov
jno
xchg
and
ja
lods
pop
outsb
test
out
push
out
or
jmp
lods
sub
pop
mov
jne
idivb
cmp
rcl
imul
pop
repz
inc
fsubrp
mov
cmp
cmp
add
cmpsb
lods
in
pop
jmp
imul
js
pop
scas
cltd
adc
mov
push
aas
sbb
cmp
pop
and
cmp
xor
shrb
push
add
negb
js
pop
sarl
stos
shrb
mov
cltd
sbb
mov
or
pop
lds
daa
pusha
das
aam
ljmp
xor
in
xor
mov
xor
aaa
sub
aam
jle
fdivrl
imul
inc
jae
push
movsl
inc
aam
xchg
xchg
cmpsb
repz
add
push
addr16
call
pop
sub
jge
cmpb
mov
and
mov
push
psrad
xchg
fwait
jns
or
or
lahf
mov
mov
into
in
shr
out
movsb
addr16
jg
mull
jmp
arpl
cmp
mov
in
add
adc
pop
sbb
enter
sub
inc
pusha
call
mov
imul
xchg
cmpsb
push
mov
aad
dec
xchg
fdivs
jns
stc
out
loopne
jns
mov
shlw
repz
push
insl
mov
jmp
int
sub
pop
scas
dec
push
fwait
jb
mov
stos
xor
xchg
jl
in
mov
xchg
mov
sahf
clc
jle
daa
jmp
or
dec
cwtl
mov
fadds
or
jecxz
lahf
and
shrb
sbb
cmp
in
jae
ret
push
das
xchg
dec
dec
loope
add
mov
lcall
arpl
shll
sub
mov
shll
push
mov
and
jge
push
test
clc
cmc
fimuls
pop
lahf
jae
xchg
cld
cmp
cmp
test
aas
aam
xchg
mov
mov
loope
and
ss
rcrl
lea
dec
and
scas
rcl
shll
into
cltd
loopne
mov
sbb
inc
add
cltd
and
mov
or
and
jne
rep
int3
stos
xchg
loope
out
into
movlps
in
or
xor
pop
insl
js
mov
push
in
sbb
movsb
aad
clc
xor
aad
inc
out
loope
decb
cmp
sub
inc
xchg
andb
adc
mov
sbb
push
repnz
pop
dec
mov
dec
sub
arpl
inc
adc
mov
rcll
fsubl
inc
inc
cld
inc
sbb
mov
shlb
es
popf
sub
imul
and
icebp
and
adc
lds
and
lds
dec
jns
mull
fisttpl
add
push
inc
popa
cld
mov
and
mov
mov
flds
je
cmp
ds
mov
pop
dec
add
mov
fiaddl
out
loopne
inc
dec
fcmovnbe
les
xchg
daa
fidivs
leave
pop
aas
pushf
mov
jns
sub
and
mov
pop
bound
in
mov
je
out
je
adc
outsl
push
les
or
mov
sub
xorb
mov
pop
adc
jl
cmp
mov
lods
imul
xchg
imul
or
add
sub
dec
loopne
test
pop
shlb
hlt
loop
pop
lea
movsl
imul
fisttpl
xchg
pop
jae
mov
push
mov
sahf
xchg
pop
cmp
test
inc
mov
and
repz
sub
mov
mov
jge
mov
aaa
dec
dec
xlat
cmp
or
data16
xor
fisubs
mov
test
lea
xchg
mov
jb
and
lahf
pop
fimull
mov
lock
adc
hlt
push
sbb
in
xchg
mov
and
and
cmp
and
push
fsubrs
aas
mov
les
pop
jge
xor
mov
lcall
inc
call
scas
adc
xor
sbb
lret
sub
ljmp
into
or
mov
push
cmp
pop
lahf
jb
fidivl
xchg
test
and
mov
xor
cmpsb
xor
in
icebp
mov
loop
int
cmp
mov
dec
push
xor
mov
ret
scas
jnp
ss
ja
lahf
mov
roll
mov
shlb
jno
jne
mov
pushf
jo
sbb
sbb
xchg
dec
dec
outsl
stos
adc
fisttpl
in
insl
adc
inc
jle
mov
xchg
xchg
xlat
xor
mov
push
xchg
lods
sbb
fidivs
jne
pop
shr
mov
cmpsl
inc
sub
addl
dec
dec
dec
sub
sub
jae
leave
cmpsb
fcmovnbe
jne
mov
sub
cwtl
cld
shll
leave
push
mov
and
or
adc
aas
mov
in
adc
lret
inc
sub
pop
in
push
push
ret
pushl
push
arpl
mov
ds
ret
andb
aas
mov
fidivrl
and
int
imul
in
mov
xlat
fldt
or
movsb
inc
push
cltd
into
cmp
insb
into
and
pop
xor
mov
out
sbb
out
dec
sbb
popa
or
or
cmp
xchg
sub
popf
ljmp
mov
int3
add
std
jnp
xchg
pop
sub
out
insl
in
cmp
fwait
cmpsl
push
sbb
fs
daa
push
add
nop
fdiv
or
mov
ret
js
lock
imul
adc
hlt
jb
mov
xchg
inc
sub
pop
stos
int
fimuls
push
mov
ds
test
and
xchg
sub
ss
pop
adc
push
je
test
pop
add
mov
lcall
sbb
xor
sbb
icebp
adc
aaa
cmp
je
bound
bound
shr
adc
xchg
nop
pop
push
xor
adcl
cmpsb
dec
nop
mov
pop
xor
pop
in
mov
scas
jl
xchg
push
popf
mov
arpl
movsb
nop
push
es
xlat
jg,pn
lcall
shlb
or
inc
xchg
jbe
out
test
push
std
dec
jbe
add
pop
sub
arpl
lahf
out
call
add
addr16
pusha
out
sub
lods
inc
push
bound
scas
out
mov
jbe
push
sti
pop
ss
sbb
sub
aaa
push
repnz
adc
andb
mov
xor
xchg
iret
clc
cmpsl
or
mov
sbb
push
push
jne
cmp
fwait
cld
outsl
daa
ljmp
push
mov
ret
fimuls
imul
scas
out
cmpsl
xchg
pop
mov
int3
pusha
pop
ss
jne
js
mov
xchg
test
aad
and
push
mov
and
daa
scas
cmp
add
sar
mov
movsb
sub
sub
push
xchg
arpl
sbb
scas
lahf
movsb
adc
cli
test
aam
daa
lods
add
loopne
ret
data16
fadds
jns
or
dec
dec
dec
or
pop
xlat
dec
adc
xor
pop
and
adc
adc
sub
mov
fildll
test
add
call
enter
cmpsb
push
mov
mulb
std
lods
lret
push
fists
lea
jne
insb
addr16
insl
aas
lods
mov
mov
out
add
mov
out
pop
imul
mov
sbb
leave
pop
bound
xchg
mov
cld
mov
dec
xor
jg
xor
xchg
jle
icebp
xchg
es
dec
out
inc
enter
lods
aad
pop
lret
cli
movsb
scas
clc
pusha
repz
in
mov
fsubrl
sbb
fs
sbb
icebp
mov
test
or
or
dec
rcrl
mov
sub
lahf
lea
scas
mov
lods
inc
push
xchg
xor
mov
lahf
cmp
xlat
imul
mov
ret
cs
icebp
xchg
les
into
xor
imul
vpmaxsw
mov
rcrl
mov
ret
scas
test
popf
mov
and
movl
aas
jnp
subb
pop
inc
fcoml
mov
mov
arpl
out
iret
stos
popl
loop
aam
loop
add
loope
stos
call
add
mov
into
push
sub
lods
kandw
add
xchg
bound
push
andb
scas
jne
outsb
loopnew
cmp
leave
jb
sti
inc
xchg
cmp
or
mov
sbb
xchg
or
sub
cld
mov
or
ljmp
and
pop
es
ljmp
mov
push
or
mov
mov
les
call
pop
adc
cmp
mov
sbb
pop
jg
inc
popf
aad
aad
dec
jno
mov
out
inc
or
dec
shrb
pop
movsl
icebp
popf
icebp
xor
adc
imul
dec
xchg
jnp
push
pop
pop
dec
adcb
je
js
lods
test
test
jae
or
and
sbb
mov
out
test
pop
mov
push
shll
in
add
add
sbbb
call
mov
sahf
sbb
insl
bound
xor
imulb
cmp
xor
fcmove
mov
cwtl
jmp
outsl
std
frstor
mov
jns
sub
hlt
push
filds
sbb
or
sub
loope
call
jnp
dec
pop
aaa
les
popa
mov
inc
cli
aas
push
ss
mov
fisubrs
rcll
xor
aam
pop
rol
roll
aam
jno
mov
dec
pop
scas
scas
inc
fidivs
xchg
jmp
imul
xchg
cs
mov
lea
mov
fnstenv
xchg
shrl
pop
call
mov
cmpsb
adc
push
inc
jmp
ja
adc
xchg
or
in
icebp
icebp
test
es
fidivrl
jb
int3
mov
inc
stos
es
daa
mov
outsl
pop
inc
xlat
adc
aaa
mov
loop
adc
adc
cmp
xor
orb
aaa
std
rcll
clc
movsl
enter
mov
mov
sbb
cmp
pop
cmp
insl
xchg
insb
pop
loop
mov
xor
mov
mov
int3
lahf
stos
adc
pop
insb
call
iret
jb
scas
push
xor
inc
sub
in
aaa
push
stc
stc
loop
movsb
out
fs
aam
xor
inc
stos
cwtl
outsl
or
testb
mov
xor
cmpl
fs
xchg
inc
fs
or
inc
in
add
insb
mov
mov
or
and
and
dec
push
jge
sub
or
lret
jbe
out
int3
fisubrs
jl
mov
stc
and
adc
jae
mov
adc
or
sub
iret
xchg
iret
popa
adc
mov
in
dec
dec
lock
lret
xlat
jg
push
push
and
fwait
push
mov
in
sub
adc
loopne
sub
cmp
mov
push
push
stos
inc
popf
dec
jne
lahf
or
push
or
adc
mov
or
jb
or
cmp
push
stos
flds
outsb
add
and
adc
pop
out
cmc
mov
dec
add
xor
popa
pop
cmp
loop
xor
add
xor
dec
mov
push
les
mov
mov
push
popf
repnz
shrl
leave
cld
cmovae
repnz
jnp
shrl
pop
xchg
fwait
jne
adc
stos
and
push
int3
ljmp
mov
push
fisubrl
cld
lods
out
jo
and
ret
inc
inc
push
jl
sub
sbb
jns
mull
mov
movswl
pusha
add
and
and
sub
and
mov
cmc
jno
aam
hlt
mov
mov
fsubrs
out
lret
mov
add
fsubl
repnz
loop
dec
das
pushf
fisubs
mov
rorb
lods
fdivrl
movsl
jo
sub
fldenv
add
push
and
or
inc
mov
lret
adc
out
stc
bound
insl
iret
pop
xchg
xchg
insb
into
jno
imulb
pop
pop
push
cli
pushf
loopne
dec
bnd
mov
ret
dec
mov
xor
in
and
sub
or
xchg
fldcw
into
bound
cmp
out
cltd
push
dec
pop
cmpb
cltd
je
mov
daa
xchg
and
fldenv
ret
pop
out
rcrb
or
xor
loope
cwtl
mov
hlt
mov
data16
mov
xor
icebp
mulb
xor
out
fstl
add
and
or
fstpl
xchg
outsl
loop
add
cmp
xor
xchg
jecxz
mov
rcl
and
pop
es
test
fs
testl
inc
data16
movsb
or
outsl
aam
sub
inc
cs
xlat
gs
xlat
addr16
mov
adc
gs
jmpw
scas
xor
jo
inc
mov
popa
inc
rcrb
add
jnp
clc
or
adc
push
int
scas
arpl
pop
js
test
ja
loopne
push
out
cltd
in
lock
out
add
or
and
idivb
jecxz
cmpsb
mov
jns
inc
js
arpl
in
cmp
mov
mov
loopne
adc
and
sbb
insb
pop
into
adcl
sbb
popf
push
cmp
jno
out
jmp
cs
or
cmp
xchg
inc
scas
fistl
leave
int
add
xor
into
inc
lock
lods
mov
xor
xchg
outsb
or
and
imul
xchg
sub
mov
push
fcoml
sbb
movsb
das
dec
cmpsl
mov
addl
inc
dec
stos
pop
insl
jmp
and
cltd
xlat
xor
mov
in
or
or
mov
pop
ficoml
out
fsub
jge
dec
adc
or
arpl
int
es
mov
nop
pop
rclb
or
mov
sub
pop
adc
sbb
and
sbb
push
nop
mov
or
cmc
mov
std
negl
sti
and
xchg
jp
sub
sub
stc
jg
inc
inc
fists
ja
iret
sub
mov
lret
lret
jo
add
jae
outsl
movsl
or
xor
fimuls
cmpsb
std
mov
mov
jp
daa
pushf
mov
xor
dec
popf
or
cwtl
cmp
leave
push
iret
push
mov
push
cmp
adc
mov
lock
and
jo
enter
sbb
or
imul
inc
sbb
xchg
push
inc
push
mov
mov
cli
mov
or
xor
arpl
pop
dec
repz
dec
in
int3
add
push
jl
imul
test
sub
cmp
rcrw
rol
loopne
and
dec
pop
les
mov
mov
dec
and
sub
test
imul
outsb
jbe
out
mov
cmc
ror
loope
push
cmp
das
cmp
mov
xlat
jne
imul
mov
mov
mov
lock
scas
das
in
or
insl
add
nop
pop
in
lods
mov
lock
movsb
ljmp
es
pop
and
icebp
or
lret
cli
cs
sbb
pop
inc
into
shr
js
in
lcall
daa
mov
and
xor
mov
mov
ret
rcrl
push
push
test
lds
imul
sub
and
outsb
cwtl
sbb
dec
or
cmp
cmc
mov
dec
jl
jnp
mov
fldcw
mov
and
and
inc
rcll
xchg
fs
ficomps
and
cs
mov
jmp
cld
mov
mov
mov
fwait
pop
inc
fucomi
outsb
cmp
push
fisubs
mov
outsb
clc
xorl
adc
mov
sahf
shll
insl
pusha
mov
xor
std
fnstcw
shlb
cmp
gs
dec
leave
je
and
orb
push
fmuls
xchg
mov
push
setp
and
sahf
pop
mov
mov
fcomip
test
dec
arpl
xchg
jne
and
jne
mov
adc
adc
mov
pop
jecxz
mov
imul
loopne
cmc
pop
lahf
or
ds
mov
xor
mov
rorb
outsb
fcmovnu
adc
adcb
aaa
jle
push
mov
out
mov
sub
aaa
out
jno
cmp
popa
leave
pop
jmp
leave
sub
in
fwait
pop
pop
aam
inc
push
jae
rorb
push
mov
mov
cmp
test
cmpb
fnsave
xchg
aad
and
scas
jb
pop
in
dec
outsl
rorb
jnp
iret
out
in
xchg
lock
and
xchg
addr16
jg
ljmp
add
jmp
add
pop
sub
add
out
repnz
jecxz
and
inc
pop
push
mov
dec
pop
and
outsl
pop
xor
addr16
inc
cmpsb
sarl
daa
xor
ljmp
push
aas
cmpsl
std
or
cmp
or
xchg
jae
add
fistps
addl
or
add
ljmp
jle
mov
or
inc
xchg
addb
and
or
and
outsl
xchg
mov
scas
pop
leave
sbb
lods
fisttpl
or
adc
int
mov
cmp
int
pusha
xor
mov
stos
and
daa
cs
stos
dec
imul
scas
mov
in
aad
jge
daa
mov
pop
jl
and
and
mov
stos
xchg
and
and
aam
xchg
repnz
mov
mov
sub
push
push
mov
or
push
jnp
push
sahf
inc
pop
or
adc
imul
pop
fistl
or
xchg
mov
int3
fimull
inc
dec
pop
dec
or
fstpl
movsb
mov
lods
movsb
sbb
cmp
lcall
and
cwtl
push
test
repz
call
adc
ja
cwtl
enter
sbb
call
repnz
xchg
in
ja
jne
sub
inc
subl
dec
xor
mov
imul
or
iret
dec
fisubs
cs
dec
and
rol
xchg
pop
jecxz
sarl
adc
sub
adc
adc
dec
fists
push
rcll
sub
pop
mov
cld
cmp
add
into
int3
movsl
xlat
mov
imul
cmpsl
mov
ljmp
jmp
mov
xchg
or
mov
cmp
mov
sti
sub
jb
add
sub
lock
jecxz
adc
push
leave
mov
das
xchg
stos
sahf
xchg
xor
lds
pop
loop
dec
mov
mov
push
gs
bnd
xchg
test
fdivl
sbb
add
clc
shld
pop
jo
daa
push
sub
push
dec
mov
cmp
sbb
inc
mov
mov
sahf
lds
addb
add
stos
mov
fcmovb
cmpsl
cmp
roll
jne
in
dec
xchg
push
shlb
mov
pushf
or
incl
sahf
and
pop
cmp
push
mov
or
nop
jle
pop
push
jl
mov
fstpl
cld
sti
scas
jbe
fbld
mov
push
clc
lahf
cli
daa
xchg
mov
push
cmp
stos
adc
scas
mov
rcrb
cs
xor
ss
icebp
cmp
leave
ret
mov
adc
shrl
leave
enter
pushf
or
inc
pop
mov
fnstenv
pop
and
sbb
pusha
xorb
push
mov
sbb
sbb
movsl
incl
and
jnp
mov
daa
adc
jl
mov
imul
hlt
shll
dec
jmp
dec
mov
fisubrl
lea
sahf
xor
bound
loop
aas
ret
movsl
mov
pop
repz
roll
dec
mov
sbbb
push
negl
cmp
cmp
cs
pop
and
in
mull
sbb
movsl
icebp
jge
sub
lcall
and
adc
daa
rcr
or
mov
call
aam
icebp
cmp
adc
push
cmp
rcr
inc
lret
xchg
inc
sub
fldcw
jne
mov
mov
sbb
rcr
rorl
xor
in
lret
cwtl
andl
and
addr16
mov
push
addr16
push
test
jno
fistl
mov
pop
cld
dec
sub
jo
sbb
mov
lds
outsl
add
imul
cmp
test
add
push
leave
insb
inc
cld
lret
lea
popa
mov
clc
test
jle
push
sbb
testl
jp
and
and
aas
dec
mov
jb
movsl
cmp
mov
fld
adc
or
stos
decl
popa
scas
adc
dec
jns
cld
or
dec
sub
and
jp
js
in
roll
ljmp
jb
mov
add
ja
gs
pop
xchg
xchg
and
std
movsb
xor
cmp
rolb
fsts
test
mov
pop
pop
mov
mov
and
outsl
xchg
pop
cmpsb
inc
andl
or
iret
mov
scas
call
pushf
fstps
cmp
pop
mov
jmp
jg
or
jge
in
jle
rol
fimuls
push
pop
xchg
mov
xor
and
push
loope
iret
mov
push
dec
push
out
sti
xchg
pop
fcomp
sbb
add
xor
sub
je
jg
xchg
jg
mov
xchg
or
mov
and
xor
jle
pop
sbb
and
adc
and
fnstcw
adc
in
sbb
sti
and
mov
mov
jg
test
dec
pop
push
mov
js
stos
sub
subb
adc
jle
dec
pop
leave
xor
push
and
repnz
ret
cmpsl
or
sbbb
dec
in
pause
cmpsl
cmp
cmp
loope
inc
int3
loopne
inc
push
mov
or
inc
lea
pop
xchg
jae
xor
and
mov
aam
push
mov
std
testl
push
pop
in
data16
iret
mov
lret
arpl
fsubr
add
pop
ror
or
jno
dec
sub
inc
jecxz
jge
cmp
cmp
rorl
negb
out
stc
pop
push
jle
dec
cltd
cmp
cwtl
mov
gs
or
gs
fsubr
lods
mov
ret
inc
jecxz
mov
out
int3
setg
shll
push
jbe
lds
xor
push
clc
enter
call
add
pop
xchg
sub
aam
ljmp
xchg
and
add
aaa
ljmp
cmpl
xchg
xchg
mov
fnstenv
xor
mov
rcll
arpl
fwait
stc
push
mov
movl
filds
mov
and
lahf
push
mov
outsl
cmpsl
and
sti
fmul
imul
daa
mov
fnsave
addr16
jg
shlb
xor
lret
xchg
fsubrs
js
insb
into
icebp
nop
pusha
into
or
mov
sbb
cmp
popa
jmp
mov
xchg
mov
sbb
lahf
lcall
imul
fistl
inc
les
lods
mov
cltd
pop
aam
xlat
in
add
cld
loop
and
dec
push
xor
vmovdqa
add
outsl
pop
xchg
sar
pop
jg
mov
aad
jge
int
adc
je
mov
data16
xchg
jl
les
and
lret
pushf
roll
xchg
xchg
and
mov
out
sub
sub
dec
shrl
add
adc
fimull
test
imul
movsb
cmp
fsts
icebp
loope
ret
xchg
es
lcall
push
call
mov
xor
xor
jg
cltd
iret
pusha
ret
sbb
pop
and
push
mov
fwait
push
rcrb
xor
add
cli
dec
and
mov
pop
cs
leave
add
pop
jo
adc
xor
jl
dec
sub
sti
lods
ja
push
pop
cmp
test
adcb
jmp
lods
xor
add
adc
outsl
push
push
mov
pusha
aaa
ds
and
dec
lret
dec
stc
xchg
cmp
or
xchg
or
push
or
push
jb
add
lds
enter
sub
mov
lahf
or
mov
mov
ja
jne
inc
hlt
mov
fadd
add
adc
andl
cs
int
insl
mov
mov
xor
sub
outsb
or
pop
inc
fimuls
stc
add
aad
ffree
pop
pop
int3
pop
jbe
lods
xchg
and
and
cltd
and
fwait
insl
adc
pop
pop
leave
pop
dec
insb
daa
out
pusha
cltd
xor
mov
or
pop
sub
dec
loope
insb
movsl
ret
mov
mov
outsb
sbb
add
test
das
mov
lods
mov
sbb
clc
fadd
data16
inc
cs
sub
decl
incb
mov
popa
jbe
xchg
jge
xor
pushf
xchg
push
and
adc
movsl
add
push
and
push
lods
mov
cs
enter
stos
sbb
push
out
movsb
mov
push
in
or
pop
dec
stos
and
mov
aam
xchg
int3
fdivp
and
mov
rcrb
xchg
pop
out
sbb
mov
jae
xor
mov
fsts
add
jp
or
leave
shr
cli
into
ja
cs
sbb
xchg
pop
pop
dec
in
ror
mov
mov
test
inc
movsl
jbe
mov
fld
fildl
jle
in
jp
leave
inc
fwait
je
push
fs
jne
jns
shrb
jb
std
cli
jp
mov
cmp
xor
outsb
js
and
bound
inc
jmp
fcomps
mov
pop
test
cmp
ja
and
incb
push
sti
enter
clc
jle
cmp
mov
mov
stos
inc
cs
test
cmpb
aas
test
jo
int3
dec
aad
fcmove
or
lods
inc
mov
jbe
adc
push
lcall
push
clc
xor
xchg
jae
adc
jmp
popa
xor
outsb
sbb
cmpsl
vdivpd
aas
or
stc
test
scas
sbb
adc
fidivrs
shrb
fdivr
inc
data16
outsb
sbb
cmc
xchg
sbbl
aaa
cmp
cmp
mov
push
dec
mov
or
or
pop
adc
xchg
ret
push
lods
cld
push
fdivs
aam
sub
sbb
dec
inc
movsl
aaa
push
xchg
data16
sbb
adcl
dec
insb
sahf
clc
imul
ss
nop
je
dec
mov
gs
mov
vpunpckhqdq
sti
adc
sub
cltd
push
cmc
std
jmp
repnz
add
out
in
stos
sbb
in
push
inc
xor
fsubl
pop
stc
and
jnp
daa
in
shll
mov
pop
pop
out
mov
mov
mov
xlat
je
dec
jo
jbe
xchg
pop
ret
jge
call
fimuls
pop
and
outsl
cmp
inc
push
xchg
add
inc
push
sub
sub
jo
jae
sub
adcl
jmp
xor
movsb
jbe
shll
loopne
ret
sbb
or
mov
and
fcmovnb
pop
shl
inc
mov
add
mov
lcall
pop
mov
push
fwait
aam
shr
or
imul
scas
imul
ljmp
js
dec
fsub
js
adcl
push
test
ljmp
call
mov
lods
ret
rcrl
cmp
xchg
cmp
push
lock
fstp
xor
arpl
js
push
sub
jno
ffree
sahf
xlat
pusha
orb
inc
lret
pusha
ret
fmull
pop
out
out
add
xchg
pop
jb,pt
adc
sahf
incb
xchg
mov
adc
and
sub
movsl
mov
xchg
fmuls
ja
das
dec
sub
pop
sub
push
outsl
ss
and
cld
lret
sub
cmp
mov
sbb
bound
xchg
fs
lahf
pop
fsub
jl
mov
shll
scas
inc
sbb
xchg
cmp
dec
inc
fwait
mov
testl
pop
mov
mov
fmulp
add
fdivr
cmp
xorl
mov
push
cld
pop
hlt
jg
sahf
mov
jecxz
sub
ret
inc
faddp
push
icebp
dec
faddp
dec
hlt
clc
pop
mov
iret
xor
xor
xor
pop
jbe
xor
sub
ret
pop
jl
add
notb
cmp
mov
pop
insl
bound
lahf
sbbb
fdiv
and
stos
mov
fstp
enter
stos
cmp
pop
lret
inc
gs
push
jno
add
decb
pop
add
cmp
ds
xchg
cmpsb
jl
test
adc
mov
int
call
ds
fsubs
popa
dec
enter
jbe
push
xor
add
xchg
in
pop
cmc
mov
stc
or
test
into
xor
add
shrb
leave
xor
lock
jnp
cmp
popf
dec
cmp
and
jnp
mov
mov
or
pop
mov
dec
fldt
mov
dec
pushf
add
mov
cltd
nop
add
push
rorl
insb
jae
sbb
fistl
test
mov
push
xchg
pop
cmc
mov
out
ljmp
jno
popf
out
pusha
sbb
call
push
jmp
mov
fmul
les
or
push
sbb
lds
jno
pushf
repnz
jge
xchg
mov
popa
clc
ret
stos
and
adcb
mov
addr16
push
ret
cmp
or
mov
sbb
push
push
push
movsw
js
cwtl
lret
lret
stc
dec
jecxz
rcrb
scas
mov
aaa
bound
inc
ljmp
arpl
xor
sub
fwait
ds
icebp
out
outsb
mov
andl
out
push
pop
sbb
imul
sbb
ds
fidivl
lods
ret
sbb
mov
xor
sub
ret
hlt
stos
clc
pushf
icebp
sbb
stos
mov
pop
insl
stos
es
pushf
adc
mov
loope
mov
movsl
clc
lcall
negb
xor
test
gs
popf
lods
enter
cmpb
arpl
pop
adc
ljmp
push
cld
cmp
repz
aad
pop
inc
or
adc
lods
mov
jmp
mov
jo
push
pop
cmp
mull
xchg
aam
or
jle
cmp
sbb
outsl
ja
nop
repz
not
das
fbld
inc
push
cmp
xchg
mov
int3
add
movb
arpl
ljmp
jno
lock
mov
pop
scas
sub
mov
jg
pop
sub
cmpl
push
leave
pusha
add
fcoms
in
inc
repnz
jno
inc
add
dec
xchg
fstps
mov
sti
out
pusha
inc
cmp
dec
outsl
rcrb
xchg
movsl
cmpsb
mov
dec
inc
mov
xchg
push
iret
or
push
ljmp
add
mov
xchg
mov
ja
add
jg
inc
inc
pop
jl
pop
xor
rorb
pushf
ljmp
out
addr16
or
sbb
movsl
or
imul
movsb
cmp
std
ret
and
inc
push
out
pop
inc
daa
int
or
les
xchg
daa
cmpsl
fs
mov
decl
push
mov
andb
outsl
push
xlat
dec
daa
push
mov
lea
daa
int
pop
lods
xor
xor
push
mov
daa
jle
fsubl
in
sbb
dec
jecxz
imul
in
lock
adc
push
and
pop
lock
pop
test
push
cmp
popa
add
sbb
add
arpl
ss
aas
mov
jge
pop
add
insb
mov
and
fcmovnb
mov
dec
pushf
xchg
mov
push
mov
push
jb
fstl
clc
sbbb
sbb
int
inc
leave
js
jo
push
adc
push
mov
loope
lret
out
mov
outsl
xor
pop
dec
pop
lock
fsubl
cmp
mov
testb
adc
sbb
mov
insl
add
jnp
loope
jo
cmc
mov
std
and
mov
dec
cmp
icebp
xor
rcrb
inc
in
inc
mov
dec
sbb
push
ret
fbstp
cmc
xchg
dec
mov
mov
pop
push
add
mov
fcmove
inc
int
sub
dec
gs
test
ret
int
mov
lret
xor
adc
test
and
and
call
dec
pop
scas
add
arpl
loope
adc
pop
xchg
add
or
mov
sbb
sub
jmp
add
mov
dec
jbe
xor
sbb
add
jbe
jecxz
dec
adc
mov
ljmp
cmp
and
je
aas
mov
push
int3
fnsave
jecxz
inc
push
mov
push
out
dec
push
aaa
mov
hlt
aaa
mov
cmpb
or
push
fcomi
mov
movsl
sbb
push
hlt
sbb
in
and
je
pusha
mul
cmpsb
iret
arpl
int3
leave
mov
in
or
sarb
shr
scas
pusha
test
xchg
jb
xor
rcrb
push
jle
xchg
sub
ljmp
sub
push
mov
sahf
aad
testl
addb
xor
insb
in
out
xchg
testb
or
mov
jno
stc
sub
xor
fs
popa
xor
xchg
addb
mov
push
cwtl
dec
test
hlt
call
cmp
and
or
inc
pop
test
repz
scas
or
stos
cmp
divb
mov
test
push
arpl
sbb
and
jmp
mov
fsts
mov
mov
loopne
int
out
call
in
out
dec
shll
jecxz
out
or
mov
mov
decl
cmp
ss
iret
aaa
nop
and
inc
pop
push
int
gs
cmp
int
popf
imul
popf
mov
cli
popl
add
jb
jbe
cmpsl
data16
into
loopne
cmp
and
sub
or
mov
fstpt
add
mov
push
xchg
dec
in
mov
xchg
imul
inc
xor
push
jl
mov
subb
mov
arpl
hlt
mov
and
movsb
add
rclb
psubusw
scas
lds
testb
shl
shrb
pop
pop
jo
push
push
out
and
xchg
shrl
jne
sahf
jnp
call
decl
cmp
cmp
test
mov
pop
popf
jge
lahf
dec
mov
dec
pop
mov
fidivs
sub
ss
inc
arpl
mov
aaa
push
xor
pop
out
fidivs
pushf
inc
inc
mov
out
cmp
test
ret
into
adc
cmp
cmpsl
adc
mov
scas
repnz
mov
xor
addb
xor
ljmp
faddp
push
lods
pop
inc
push
imul
lea
ljmp
adc
sub
jl
mov
push
push
add
add
enter
fcmovu
fmull
in
bound
popl
add
xchg
adc
fldl
rorl
fs
mov
pop
outsb
daa
inc
inc
popa
lea
mov
mul
loopne
adc
mov
xlat
dec
sti
pop
lock
or
cmp
pop
scas
dec
lcall
inc
pop
xchg
adc
mov
xchg
jbe
ret
outsb
aad
outsl
and
and
mov
mov
xchg
orb
pusha
sub
cwtl
int
test
out
pop
adc
mov
add
and
insb
rorl
or
cmpsb
out
lea
cmp
pop
add
arpl
test
pop
test
dec
cmp
mov
les
clc
xchg
das
inc
lret
push
call
or
cmp
int
aad
xchg
ret
add
test
ja
test
sahf
or
lods
adc
add
filds
mov
outsl
loop
les
fistps
push
or
pop
imul
cld
fdivrs
push
cmp
inc
in
ss
push
add
cmp
decb
lret
inc
aam
jg
gs
ja
jae
mov
test
lret
jg
cmp
jno
call
add
push
sarb
jae
jecxz
cmp
cld
pop
outsl
mov
inc
in
stos
xchg
lds
cmp
ret
shl
jge
mov
push
stos
push
sub
lahf
push
or
imul
aaa
and
xlat
repz
mov
jmp
mov
add
cmp
pushf
mov
es
or
adc
or
cld
cmpsb
decb
es
cmpsl
out
push
inc
xchg
add
pop
fwait
cld
dec
jl
sbb
mov
dec
xor
mov
jp
inc
dec
fidivs
sarb
in
daa
inc
in
pop
ss
push
aas
lcall
shlb
inc
fidivrs
jno
dec
frstor
push
mov
out
xor
xchg
in
idivl
in
mov
dec
neg
nop
in
jecxz
inc
push
add
inc
lret
inc
mov
dec
xor
cltd
xchg
mov
in
sbb
jno
outsl
mov
dec
call
int
loope
jnp
fisubrs
fisubl
jnp
cmpb
pop
mov
mov
ret
add
jno
notl
data16
rolb
and
sub
xchg
fsubrs
into
dec
lods
inc
test
and
pop
inc
lret
popa
cltd
pop
aaa
int
mov
stos
fs
jl
stc
cmp
dec
scas
xchg
dec
sbb
dec
jne
jae
out
inc
movsl
cwtl
in
js
inc
int
movsl
lods
sbb
fiaddl
rorb
sbb
dec
imul
sbb
shrl
test
pop
mov
xchg
add
sub
repz
inc
icebp
mov
mov
test
jnp
and
loop
xchg
adc
bound
mov
pop
jge
push
ss
inc
fdivs
xchg
or
sarl
daa
and
mov
adc
pop
jo
mov
push
cltd
mov
mov
test
movsl
dec
inc
mov
aaa
icebp
xchg
dec
dec
popf
in
cmp
inc
aas
cmp
or
lahf
call
dec
out
cmp
decb
idiv
leave
lods
jecxz
lret
bound
test
scas
or
mov
mov
sub
xchg
lods
fcompl
adc
pop
inc
xor
aam
rcr
jae
icebp
sub
push
ljmp
loopne
fstpt
cmp
bound
movsb
push
scas
std
cld
outsl
mov
push
lret
mov
push
lods
cmc
sub
xor
sbb
aas
fnstcw
sbb
leave
ss
adc
pop
xor
xchg
sub
xchg
or
mov
mov
cmpsl
cmpsl
mov
cmpsl
ds
inc
hlt
add
sbb
push
pop
clc
or
ror
shrb
pop
test
mov
mov
in
fisubrl
pop
jno
mov
mov
adc
into
jmp
ds
jge
cmpsl
sub
xor
insl
dec
repz
pop
push
lock
and
add
xchg
repnz
xchg
iret
lds
fmull
insl
add
pushf
xchg
aam
fsin
or
adc
aas
bound
iret
or
pop
adc
rcl
fistpll
pop
push
es
mov
inc
or
fwait
sti
loope
push
inc
push
out
dec
push
push
daa
pop
aaa
cmp
push
add
stos
dec
add
dec
aas
and
xor
push
sub
loopne
mov
movsl
push
push
call
pop
aas
outsl
xor
mov
mov
mov
mov
cmpsb
loope
nop
mov
repz
push
scas
push
shr
fidivs
push
add
inc
lcall
popa
cld
xchg
rcrb
sbb
mov
outsb
jp
mov
lds
and
rcl
bound
int3
push
popa
push
cmc
out
pop
outsb
ficomps
negl
jge
outsb
or
fwait
push
xchg
mov
in
insl
mov
pop
mov
hlt
cmp
xlat
push
fldl
push
dec
cmpsb
mov
ja
inc
or
adc
add
push
push
cld
add
dec
lret
ss
add
insb
dec
dec
and
jg
add
ds
sti
xor
sbb
ja
cmovne
fisubrs
jmp
mov
lock
into
cld
ja
or
push
and
cld
mov
data16
xchg
add
cmp
inc
outsb
jno
out
push
mov
push
andb
ja
push
push
pop
nop
data16
jns
xor
xor
push
mov
sahf
scas
jae
xor
fildll
lahf
pop
repnz
out
xchg
mov
cmp
push
dec
popa
xorb
xor
inc
adc
mov
jb
pusha
sub
or
pop
lret
xor
fbstp
mov
imull
sbb
push
ss
iret
cmpsb
lods
ja
in
add
mov
add
test
inc
test
in
push
push
mov
fdivs
in
inc
mov
mov
ffree
ljmp
push
fcompl
divb
push
fdivrl
subb
inc
dec
add
inc
push
dec
push
jecxz
aas
push
jno
sbb
pop
insl
mov
sub
imul
pop
cmp
push
xor
mov
dec
in
xchg
cmp
xor
and
punpckhwd
push
adc
jo
pop
sarl
pusha
out
jo
out
jb
loop
sarb
or
push
test
mov
cwtl
jno
jae
scas
cmp
add
or
lods
mov
and
ljmp
repnz
xor
or
rclb
xchg
push
fwait
shlb
icebp
jae
or
addr16
cmp
repz
fwait
inc
comiss
or
shl
xchg
pushf
jmp
loopne
std
aas
lret
addr16
adc
cwtl
lds
xchg
push
adc
and
jmp
ret
test
cmp
mov
pop
cmp
mov
mov
cmp
cmp
mov
fistps
push
pop
add
or
nop
jmp
dec
pop
add
push
fstl
sahf
xor
popf
les
imul
mov
sahf
aad
adc
mov
dec
adc
addb
xchg
mov
leave
sbb
pop
cmp
cmp
ret
icebp
adc
popa
ds
out
xchg
jo
push
test
inc
mov
rcrl
cmp
jmp
sbb
jmp
mov
mov
jge
jl
jle
push
add
xor
int3
jno
xor
push
ljmp
test
push
test
stos
jne
push
pusha
dec
rcl
repz
push
mov
clc
sub
sub
mov
xor
sbb
mov
xor
iret
ret
dec
jnp
pusha
push
sub
dec
push
mov
enter
mov
int
notb
nop
push
mov
inc
addb
pop
cmpsb
push
fmuls
insb
jb
pop
push
fsubr
jo
mov
adc
in
aam
xor
pop
std
push
xor
repz
mov
jae
cli
mov
xlat
cmp
sbb
rcrb
addr16
decl
lock
or
jo
push
out
cmp
adc
cli
loopne
and
incl
inc
rep
xchg
fldt
jg
loope
jo
inc
pushf
lods
push
dec
cli
in
addr16
xchg
and
adc
stos
dec
fisubs
lock
out
jl
rorb
jne
out
in
lods
adcb
dec
pop
sbb
mov
dec
xor
movsl
das
and
inc
sub
adc
gs
daa
xchg
push
mov
cmp
mov
scas
sti
dec
roll
mov
mov
ja
xchg
mov
xchg
inc
leave
and
push
ljmp
sbb
mov
repz
xchg
sub
popf
jge
mov
mov
and
jmp
out
outsl
jo
push
xchg
mov
jmp
cmp
loopne
jl
sub
add
pop
cmp
adc
jp
lcall
push
imul
pop
test
nop
pop
arpl
or
cltd
insb
mov
add
pusha
aaa
shll
push
popf
pop
idivb
aad
sub
inc
mov
in
fcoms
inc
clc
leave
mov
repz
jno
inc
push
xchg
push
mov
push
andb
or
mov
or
cltd
ud0
les
jns,pt
lock
fsubrs
jg
sub
adc
lds
fsubrs
nop
mov
dec
rorl
fisttpl
das
pop
mov
mov
mov
repz
jg
int
sub
imul
sbb
xor
adc
xor
inc
adc
int
xlat
popa
inc
pop
cmp
cmp
lods
fwait
jb
adc
lock
test
sub
ficomps
push
std
push
arpl
mov
cli
lods
pushw
out
mov
jge
inc
inc
orl
jecxz
nop
sbb
xor
mov
xchg
aam
mov
jns
and
push
sub
sbb
iret
notb
cmc
bound
pop
lahf
mov
pusha
mov
xlat
icebp
or
xchg
mov
notb
fisubrl
test
mov
loopne
jecxz
aam
addl
xchg
enter
mov
fsubl
cli
sbb
cmp
push
ret
cltd
inc
out
add
stc
or
jecxz
ljmp
sbb
cmp
out
in
fisubl
das
aas
scas
mov
adc
pop
and
xor
test
je
lds
daa
cmp
add
add
pop
cmpsb
xor
push
pop
fldt
shrb
aaa
mov
scas
outsl
test
ficompl
sbb
int3
arpl
shr
sti
enter
ljmp
or
push
es
scas
pop
dec
popf
lods
ret
repz
mov
divl
pop
scas
push
and
and
std
pop
repnz
xor
arpl
mov
ljmp
push
xlat
jnp
lods
jb
mov
adc
mov
jnp
jg
cmp
loope
and
ret
mull
push
add
sbb
pushf
movsb
mov
sti
psadbw
xlat
cmp
and
mov
jmp
lcall
xchg
jecxz
movsb
xchg
xlat
jmp
xchg
sub
cmp
cmpsl
sub
dec
pop
add
sbb
jnp
push
sub
push
test
into
sbb
mov
out
test
aas
stos
js
data16
sbb
daa
gs
inc
push
out
ja
jle
sbb
rorl
xchg
xchg
enter
mov
div
pop
inc
pusha
cmp
fbld
sub
mov
repz
push
in
out
ret
sbb
out
std
loop
pop
orl
inc
fsub
cmp
dec
jl
fsubr
addr16
jle
test
cmp
jo
jge
or
lods
mov
pop
test
adc
jge
xor
dec
out
fidivrs
test
decb
into
loop
jmp
fwait
xor
add
or
inc
sbb
xchg
mov
sub
xchg
lods
bound
das
push
push
mov
dec
adc
ret
fld
inc
push
fmuls
push
mov
xlat
and
sti
sbb
iret
inc
push
fisubs
pop
jae
aam
xchg
or
cmp
fbld
sub
mov
mov
push
in
jo
pop
cli
sub
push
or
leave
out
jnp
repnz
dec
xor
js
test
aas
xchg
enter
adc
daa
push
pop
mov
shlb
jne
ffree
imul
scas
jle
xchg
repnz
in
sbb
das
mov
fildll
mov
xchg
mov
out
movsl
mov
cmp
add
fwait
push
and
or
repnz
jl
je
ficomps
xchg
daa
and
scas
inc
jb
inc
push
mov
int3
loopne
adc
cmp
enter
aaa
ret
pop
nop
stos
inc
sub
enter
out
sub
mov
dec
mov
mov
loopne
lret
adc
mov
popa
push
scas
out
rcrb
sti
mov
fsts
mov
pop
xchg
mov
sbb
sub
cmp
dec
dec
sbb
sub
es
push
xor
mov
fistl
ja
sbb
jbe
test
push
or
lret
cmp
xor
cmp
mov
xchg
jp
out
aas
pop
xor
pusha
outsl
pop
add
insb
stos
sbb
nop
out
lock
sub
jg
cmp
fwait
adc
add
repz
ja
fcoms
int3
int
scas
jmp
mov
out
mov
shl
jne
add
lcall
sub
xlat
in
xlat
xchg
xor
in
sub
insb
dec
aad
call
xor
adcl
mov
rol
cli
jge
cmpsl
es
lcall
sbb
jb
rclb
jg
insl
in
xorb
frstor
mov
cmpsl
roll
orb
cmpl
lods
dec
sub
filds
pusha
fistps
subb
das
cmpsb
inc
in
rclb
fcoml
cmc
add
xchg
push
sub
xchg
movsl
pcmpgtw
inc
sbb
mov
shll
cwtl
push
clc
stos
int3
das
lds
stos
dec
lahf
push
xchg
ds
adc
movl
call
push
dec
inc
sbb
int
lret
gs
test
and
cmp
pusha
jo
js
adc
out
sahf
call
aaa
jae
inc
repnz
push
push
or
stc
and
cmp
push
dec
push
fucom
xor
sub
lcall
mov
cwtl
imul
jnp
or
fidivs
div
cmp
mov
or
lahf
or
jne
loop
sub
mov
xor
ds
mov
aad
sbb
hlt
push
sbb
inc
adc
mov
outsl
adc
addr16
fidivl
and
in
sbb
cmp
sbb
data16
pop
xchg
les
stc
lret
xor
lret
jae
lcall
outsb
push
ret
inc
out
inc
fmul
push
pop
xlat
or
bswap
jmp
or
add
leave
and
jmp
sbbb
fldz
data16
and
add
inc
lock
xchg
out
out
mov
dec
sti
and
sbbb
sub
jle
mov
xchg
pop
dec
mov
mov
fisttps
insb
je
filds
int
stos
adcb
cmp
out
lahf
loop
adc
std
jg
push
mov
push
inc
pop
push
adc
aaa
sbb
movsb
pop
fsubrs
fdivr
xor
push
popf
mul
ret
jmp
or
and
mov
cmp
mov
mov
cmc
cmp
lret
scas
out
mov
mov
insl
adc
hlt
mov
int3
pop
cmp
dec
sbb
out
cltd
jo
aam
std
jmp
or
pop
pushf
jge
sub
dec
mov
mov
jns
bts
aad
aam
loope
mov
ret
lret
push
cwtl
pop
add
pop
sub
out
imul
xchg
insb
sub
fnsave
jl
bswap
inc
fwait
jbe
sub
into
inc
leave
xor
mov
fisttpl
fs
jmp
jb
movsb
jo
jb
adc
rcl
fdivrs
fbstp
jae
sub
sbb
out
push
xchg
in
dec
pop
push
push
jecxz
in
pop
mov
xor
sbb
mull
adc
jp
mov
sub
adc
add
xor
add
call
or
fsubp
jns
iret
inc
in
lret
xor
ja
gs
push
pop
pop
mov
sub
inc
mov
add
dec
sbb
jecxz
bound
mov
sti
pop
xchg
sub
adc
xchg
xchg
pop
out
ret
scas
lret
ss
in
inc
sub
cmp
cmp
stc
sub
pop
aaa
push
enter
pop
shrb
fisubrl
lea
xlat
jmp
or
or
das
shll
xchg
jge
icebp
addb
jo
xor
bound
push
mov
xchg
in
pop
fdivr
sbb
dec
fisubrs
mov
fs
mov
adc
int3
shll
dec
mov
inc
stos
int3
ss
idivb
jle
sub
insb
dec
cmp
dec
and
iret
mov
cmp
stos
pop
xor
lods
mov
mov
add
and
dec
adc
sbb
pop
stc
ss
stos
xchg
out
add
fsubl
mov
cmp
daa
push
mov
popa
mov
push
push
pop
xchg
ja
cmpsb
and
outsl
cli
fisttpll
fstpl
lock
xor
sub
sub
pop
dec
add
lahf
inc
xchg
imul
repnz
lods
jbe
inc
fs
add
add
nop
lock
lods
xor
outsb
cli
sub
xchg
adc
xor
mov
ret
sub
imul
hlt
outsb
aad
in
cmp
inc
aaa
inc
mov
xchg
xchg
out
cmpsb
jns
rcl
insb
inc
scas
mov
mov
jae
outsl
inc
ja
cmp
mov
jo
mov
test
insb
xor
mov
scas
pusha
push
jbe
sbb
jns
stc
cmp
sub
repnz
jns
scas
xor
shrl
jg
fs
gs
add
in
outsl
adc
cmp
imul
outsb
pop
sub
imul
sti
fisubl
inc
mov
add
xchg
xor
loope
push
mov
aam
mov
cmp
out
bound
cltd
scas
ds
repz
sbb
fstp
xchg
roll
lods
or
or
jb
js
loopne
enter
dec
popf
aad
inc
inc
mov
push
scas
out
cmp
xchg
push
or
push
mov
xor
push
aad
cmp
sbb
shrb
jg
push
mov
clc
sbb
lods
sub
popf
shlb
mov
inc
outsb
xlat
popa
cld
add
loopne
sbb
imul
data16
std
orb
xchg
and
xchg
add
adcb
mov
ror
mov
test
xchg
popa
mov
inc
outsl
aas
pusha
je
fdivs
rcr
outsl
popf
fdivr
sar
jl
cmpsl
outsb
imul
mov
inc
or
pop
lds
sub
lret
sub
sbbl
and
sbb
add
sbb
xor
fcomi
jge
cld
outsb
mov
mov
sti
pop
pop
xchg
xor
out
sbb
arpl
sarb
inc
outsl
test
sbb
test
sbb
sub
lods
xchg
jp
scas
and
dec
dec
scas
jle
leave
xlat
jle
lock
fidivrl
stc
cltd
mov
out
cmp
jnp
js
sub
dec
test
xlat
fldcw
insb
fwait
push
xor
ret
inc
in
cmp
loopne
adc
add
mov
inc
rcl
imul
push
pop
insl
loopne
mov
test
mov
add
lds
loope
aam
push
and
dec
pop
push
mov
test
sub
ss
or
cmp
in
scas
repnz
sub
out
cmp
fucomip
xor
xlat
loopne
mov
in
cltd
ret
mov
cmpsl
out
in
roll
mov
shl
js
push
inc
push
out
and
inc
mov
adc
ds
addr16
adc
rcrl
pop
xor
pop
movsb
mov
push
in
sbb
ret
mov
and
sbb
and
cmp
mov
dec
aas
sahf
pop
insl
shlb
data16
jno
js
in
inc
xchg
jge
sub
lret
lret
xor
jp
int
iret
and
notb
insb
mov
loop
scas
jnp
and
add
mov
xchg
cmp
jle
mov
clc
pop
ljmp
jl
and
jl
xor
gs
mov
ret
js
or
scas
aad
or
xchg
dec
cmpsb
cwtl
loopne
push
dec
shrl
test
jne
lahf
insb
jle
sbb
inc
mov
cwtl
push
dec
adcl
and
pop
daa
lcall
or
push
add
mov
lods
and
xchg
add
movsl
xchg
lret
jno,pt
push
inc
arpl
aam
pop
jecxz
pop
cmp
xchg
cmp
inc
mov
imul
adc
nop
and
in
pop
sub
add
incl
scas
fmull
pop
lods
stos
aas
mov
ljmp
sti
or
mov
xor
fsubs
rorl
adc
pop
daa
add
mov
ds
fcoms
add
xchg
jg
jbe
lret
daa
jo
mov
jp
dec
fbstp
mov
jb
add
insl
pop
adc
fildl
pop
clc
movsl
jg
mov
mov
xchg
les
movsl
daa
cli
pop
add
fisttpll
into
sub
jbe
or
in
fnstcw
bound
pop
cwtl
jl
add
jp
mov
popa
cmpsl
dec
lret
dec
loopne
dec
xchg
adc
mov
outsb
daa
idivb
and
inc
mov
fcoms
dec
roll
movsl
ret
in
cmp
hlt
push
popf
in
add
sub
dec
outsl
bound
mov
add
push
sbb
in
dec
repz
pop
das
scas
mov
jg
pop
adc
or
adc
clc
into
jp
ss
sbb
imul
xor
push
inc
stos
lahf
jne
pop
orl
pop
lock
repnz
xor
sbb
and
mov
jo
imul
sub
into
ds
gs
mov
xor
add
lret
out
aaa
dec
ret
mov
mov
out
cltd
jne
das
out
jno
cmpb
mov
or
addr16
sub
mov
inc
rcll
add
mov
sbb
mov
and
mov
mov
fucomi
test
clc
mulb
test
mov
ret
sti
insl
mov
mov
push
pop
data16
jle
aas
loop
sbb
cmp
lock
iret
nop
mov
cmp
mov
mov
imul
stos
or
sbb
mov
mov
out
and
and
jmp
lods
xchg
lock
int
inc
ret
jno
dec
push
ljmp
jb
movsl
jbe
jle
push
fcmovnb
dec
cli
xchg
cmp
andb
xor
cs
xchg
fwait
mov
and
gs
rcl
mov
in
sbb
mov
inc
or
push
mov
stos
xor
sub
xchg
push
mov
insl
call
leave
push
int3
mov
shlb
jae
jb
pop
outsl
mov
push
out
lea
jne
cmp
fidivl
imul
iret
and
cmp
mov
fsub
dec
adc
shrb
xor
pop
aaa
ljmp
mov
cmp
pop
pop
rorb
icebp
push
je
orl
push
push
mov
dec
movsb
inc
fistl
lock
sub
stos
push
mov
aaa
loope
mov
loopne
fstl
push
push
stos
xor
push
push
mov
mov
aam
add
pop
movl
stos
fst
inc
pop
outsb
ja
je
mov
lret
xor
call
loope
pop
pushf
insl
mov
push
dec
xor
pop
and
mov
stc
sahf
pop
mov
mov
fld
and
push
lahf
jg
xor
inc
scas
jno
ljmp
sar
inc
icebp
sub
dec
and
clc
jae
into
popf
cmp
insl
lcall
fisttps
lahf
dec
fisubrs
popa
outsl
es
mov
cmpsb
dec
push
sub
mov
or
iret
inc
arpl
pushf
dec
out
dec
outsb
jp
push
sbb
mov
pop
rcrl
lds
fsubrp
jae
cmp
fists
xor
mov
inc
cld
push
scas
shll
clc
ja
sbb
xchg
fwait
push
or
jbe
ljmp
jno
clc
lahf
inc
inc
rcrl
enter
sbb
mov
sbb
push
icebp
or
ret
cld
outsl
dec
loopne
sti
ds
stos
aaa
cmpsb
out
dec
xor
sarb
pusha
and
lods
xchg
or
aaa
mov
js
bound
stos
xchg
inc
sub
filds
ss
add
sahf
jmp
fbstp
sub
ljmp
popf
in
mov
out
xchg
aad
dec
lcall
inc
clc
cmp
shrb
push
push
fwait
pop
add
stos
jbe
inc
lods
and
xchg
push
add
pop
imul
cmp
pop
jo
push
xchg
in
sbb
mov
dec
xor
sti
es
cs
pushf
inc
scas
out
inc
mov
test
imul
sbbb
inc
gs
push
movsl
add
mov
xchg
mov
xor
inc
fcomp
repnz
jnp
insl
in
fldt
and
out
mov
xchg
sbb
inc
and
sti
dec
and
les
stc
nop
imul
aad
ret
add
out
xor
rcll
sub
or
xchg
aas
inc
pop
cs
rcrb
jae
and
push
xchg
push
jge
xchg
sub
pop
inc
fwait
stos
pushf
sub
cmc
xor
call
xchg
test
out
scas
shlb
xchg
scas
stos
mov
cmp
inc
mov
xlat
pop
mov
frstor
div
fs
jb
add
xor
xor
rcll
mov
cmp
sbb
adc
jb
xor
sarl
aad
mov
jns
push
sahf
inc
test
lea
repnz
cmp
add
mov
xorb
test
sbb
xchg
ljmp
in
loopne
movb
ja
mov
loop
pop
push
xchg
sub
sub
pop
sbb
or
rcrb
shlb
movsl
cltd
jno
mov
sub
inc
pop
mov
sbb
cmp
clc
cmp
push
xchg
pop
push
jecxz
dec
mov
out
stc
out
sti
out
popa
fsubrs
rcr
lea
jl
cmp
shll
cli
std
xchg
sarb
sbb
scas
sbb
rclb
mov
push
call
cmp
call
dec
push
push
sbb
inc
push
pusha
testl
into
enter
bound
fcomp
loope
adc
jno
fistpll
gs
adc
outsl
lret
ljmp
inc
fcomps
ja
out
push
mov
add
arpl
mov
call
add
pop
mov
shrb
pusha
xlat
push
cltd
lock
mov
jnp
xor
addr16
mov
or
lcall
push
push
or
jne
fbstp
scas
dec
mov
out
cmp
xchg
jmp
lcall
cmp
dec
mov
dec
in
adc
bound
cmc
mov
in
mov
or
adc
xchg
movsl
mov
cltd
cmpsb
sbb
scas
popa
jl
lret
inc
sbb
repz
fists
adc
shrl
adc
call
xor
push
mov
push
mov
test
addr16
push
pop
mov
inc
adc
sbb
xlat
outsb
or
in
add
push
insl
add
add
cwtl
jbe
cld
ficomps
and
das
into
fidivs
sub
shlb
loop
mov
mov
cltd
icebp
mov
arpl
xchg
dec
and
add
movsb
xor
push
push
jmp
aad
mov
fidivs
aam
xor
fs
push
jmp
mov
mov
icebp
jmp
add
fidivrl
adc
push
cmp
push
fs
inc
sub
into
ljmp
hlt
lods
ljmp
cmp
pop
int
pusha
hlt
xlat
out
in
loopne
lahf
jne
leave
dec
jecxz
mov
pop
aaa
stos
push
sbb
mov
push
sti
sti
mov
int3
fimuls
xchg
push
cmpsb
ficoml
scas
push
dec
jae
push
or
xlat
add
jl
pusha
std
subb
aad
pushf
mov
mov
mov
and
mov
fsub
mov
pop
das
in
push
adc
mov
clc
arpl
loopne
insl
push
in
pop
lcall
jnp
dec
mov
pop
mov
add
sub
daa
inc
sub
stc
dec
fisttpll
shl
inc
mov
xchg
and
xor
inc
inc
jg
adc
xchg
push
push
xorl
pop
sub
shll
aam
fisubrs
lods
sbb
add
in
dec
xor
aas
das
lds
dec
xlat
rolb
repnz
inc
jmp
lret
cld
push
in
les
std
or
jo,pn
cmp
nop
fcomps
add
adc
movsb
xor
leave
mov
cmp
test
push
aad
mov
test
or
test
add
rcrl
jae
test
aam
dec
jg
or
iret
jb
int
jg
pop
sahf
mov
mov
push
popa
xor
xor
fdivl
xchg
arpl
lahf
ja
fsts
aas
push
ret
movsb
push
out
jecxz
test
addb
lods
pop
mov
js
popf
jbe
in
fidivrs
cli
pushf
loopne
addr16
and
cmp
jnp
mov
push
pop
inc
ljmp
mov
roll
imul
mov
add
jne
and
add
jbe
mov
rcrl
jno
jmp
xlat
loopne
or
movsb
dec
fwait
mov
adc
mov
out
imul
sub
add
mov
cmc
dec
pop
icebp
or
cli
repnz
bound
subl
mov
push
jne
loopne
shrb
dec
and
push
cmc
int3
add
bound
mov
movsl
push
pop
in
test
jg
sub
leave
jae
stos
adc
insb
stc
test
gs
dec
jp
push
fidivs
clc
xchg
test
fsubr
dec
sti
xchg
mov
scas
mov
mov
movsb
sub
fisubrs
cmc
and
cmp
xchg
push
roll
mov
xchg
pushl
xor
test
je
xor
xchg
push
cmp
int
pushf
inc
imull
scas
aaa
and
int3
mov
out
push
jne
mov
leave
lret
fwait
lods
dec
mov
idivl
pop
aad
imul
mov
inc
fwait
mov
xchg
sub
jmp
lahf
xchg
jbe
jmp
out
add
jl
test
in
mov
mov
push
cld
cld
sub
xchg
fistps
outsb
jp
pop
mov
gs
adcl
decl
inc
shr
dec
and
adc
fstps
les
andb
push
sbb
arpl
fnstsw
in
mov
and
cmp
ret
stc
repnz
in
push
push
popf
cmc
shl
push
dec
pop
mov
iret
push
insb
xlat
xchg
add
cmp
negl
jmp
jmp
cld
add
fidivl
bound
test
mov
xchg
mov
data16
fcoms
out
cmp
std
nop
out
push
adc
inc
inc
or
int3
adc
stos
es
in
orl
out
mov
ss
and
xchg
pop
jne
push
mov
ja
and
movsl
test
lret
and
mov
pop
jnp
bound
ret
sub
hlt
lcall
dec
clc
cs
pop
js
cmp
pop
cltd
jecxz
and
xchg
clc
je
xor
xchg
dec
push
jno
mov
mov
cmc
push
cmp
adc
sub
push
popf
fiaddl
lea
sbb
pop
or
stc
je
test
xchg
aad
push
sbb
ret
jmp
fbld
mov
sbb
jo
clc
or
les
push
jg
adc
pop
ja
xor
inc
pushf
test
loope
or
jge
or
sahf
inc
inc
xorl
addr16
lock
push
sahf
popf
xor
pop
push
pusha
push
scas
pop
or
xor
sub
cmpsl
out
test
cmpsb
pop
fsubrs
insb
test
div
fcom
rorl
mov
jb
dec
dec
pop
ret
pop
push
and
in
popf
mov
xor
and
xor
fnstenv
fcompl
jo
push
jb
jns
movsl
or
rorb
jge
insl
dec
loopne
xchg
xlat
aas
jg
ret
sbb
inc
cmp
or
push
pop
stos
in
mov
mov
mov
inc
fstpt
int3
inc
add
test
inc
test
mov
mov
xchg
inc
arpl
inc
sbb
jne
xor
xchg
and
cltd
xor
mov
out
insb
rcrb
aaa
jb
shl
add
add
cs
icebp
mov
xor
clc
icebp
repz
mov
xchg
mov
mov
aaa
data16
sbb
data16
movsl
sahf
and
jmp
dec
dec
xor
dec
push
inc
test
xchg
jge
and
lods
push
mov
movsb
das
clc
scas
sbb
push
int3
dec
and
xor
movb
int3
jb
imulb
addr16
adc
xor
stos
arpl
in
das
test
fbld
cmpsl
push
je
push
mov
cs
mov
dec
jge
jl
das
test
es
mov
push
cmp
pop
nop
call
mov
outsl
pushl
sub
clc
sahf
pop
cmpb
lea
jecxz
jo
cmp
lea
cmp
mov
adc
mulb
push
imul
out
or
jg
xchg
mov
push
cmp
lret
add
outsl
cmpsb
std
mov
xchg
add
cmpsl
sti
push
out
je
adc
sbb
jnp
aam
fs
sahf
push
jecxz
iret
lret
into
mov
lea
sbb
sbb
or
mov
mov
mov
pop
int
or
fucomi
out
jnp
lods
or
int
mov
cli
pop
mov
pop
adc
mov
mov
in
sahf
and
test
outsb
stc
or
arpl
outsl
add
inc
sbb
cld
dec
out
pop
cmp
mov
jecxz
or
xchg
or
sub
popa
das
sbb
pusha
jp
mov
scas
or
pushf
inc
inc
je
in
notl
rcll
mov
jb
dec
loop
xor
push
test
in
jp
and
inc
lahf
cmp
icebp
cmp
outsl
push
cs
pop
xor
ja
mov
int
xchg
jge
push
jge
or
aas
mov
push
push
lea
jb
imul
xchg
ret
jo
pushf
fdiv
or
jge
mov
mov
push
hlt
push
test
inc
fs
stos
fdivrs
lret
pop
sub
fsubrp
push
subb
jge
push
mov
mov
sbb
xor
mov
cmpsb
les
scas
shr
fistpll
and
pop
outsb
popa
lret
into
push
or
jge
mov
je
imul
adc
repz
fdiv
xchg
filds
xchg
mov
mov
mov
mov
mov
fidivrs
push
fsub
mov
fldt
sub
stos
loop
call
fimull
xchg
insl
shrb
lods
cltd
sti
ror
xor
leave
arpl
fld
sbb
scas
xchg
jae
jo
testl
enter
jge
xchg
or
cmp
cs
pop
cmp
cmp
cmp
dec
je
js
repz
scas
mov
enter
pop
jle
dec
out
mov
mov
std
and
mov
movl
cwtl
fisubl
push
sbb
push
popf
pusha
cmp
jle
and
cmp
mov
add
insl
leave
xor
dec
inc
ret
notl
insl
sub
icebp
enter
add
nop
mov
dec
dec
dec
and
adc
cmp
and
iret
inc
adc
jo
cmp
negb
in
jg
sarl
outsb
mov
or
lret
into
notb
pop
adc
ds
fstpt
enter
sar
repnz
aaa
stos
call
mov
mov
in
xchg
pop
ljmp
jno
fcmove
adc
xchg
addb
inc
inc
sahf
dec
test
and
pop
fcompl
fucom
orl
ljmp
mov
mov
or
mov
inc
call
aas
pop
mov
sti
insb
lods
jg
mov
inc
fstpt
pop
bound
faddl
inc
ficompl
aas
mov
ret
hlt
push
imul
mull
lahf
inc
xlat
rorb
arpl
cli
sub
mov
fcompl
dec
and
addr16
cmp
dec
arpl
push
out
xchg
ss
ja
xchg
dec
push
cwtl
inc
scas
clc
jne
xchg
movsb
dec
pop
and
shrl
aas
fiaddl
mov
movsb
push
mov
ds
out
lahf
pop
sub
enter
fsubrp
xchg
frstor
lds
into
xchg
pop
xlat
jmp
sub
test
in
das
push
js
push
and
roll
in
sbbl
test
inc
or
scas
loopne
sub
inc
pop
mov
xchg
rolb
mov
sub
repz
scas
push
sbb
mov
test
fxam
or
mov
xchg
or
dec
dec
or
adc
sub
mov
push
js
xor
lods
int
loopne
sbb
cmp
or
sbb
stc
add
ret
push
push
gs
inc
outsb
sub
cwtl
stos
or
out
popf
mov
aas
rcl
adc
ljmp
sub
mov
inc
arpl
inc
inc
fbstp
hlt
push
das
out
xor
call
and
push
call
mov
lahf
pushf
ds
jo
lock
repnz
call
xor
push
jp
lea
sbb
push
mov
call
pop
idivb
xchg
pop
mov
dec
or
and
sbb
ds
pop
dec
lds
sbb
movsb
mov
popa
push
je
pop
scas
pop
cmp
add
pop
mov
inc
call
push
inc
test
push
xchg
pop
leave
test
inc
mov
mov
xchg
testl
mov
cmpsl
inc
icebp
lods
pop
dec
xchg
fwait
sahf
clc
xchg
mov
mov
lcall
jmp
and
jg
sbb
inc
or
push
mov
bound
cmp
xchg
add
addl
sbb
out
aaa
ds
dec
inc
popa
dec
inc
or
orl
mov
repz
cmp
aad
xchg
pop
fs
loopne
push
es
jae
ds
mov
push
fistl
xor
mov
pop
jge
add
ljmp
mov
test
mov
jae
pop
mov
daa
mov
rcl
inc
test
mov
arpl
test
rclb
ljmp
jno
add
mov
ljmp
jns
push
clc
das
inc
out
inc
fwait
bound
mov
lcall
adc
fs
lcall
add
lea
inc
jl
je
fsubrl
aas
lds
dec
dec
ret
ja
mov
ds
or
sub
xorb
jge
repz
mov
jns
data16
jbe
push
sbb
add
lods
inc
leave
and
jmp
divb
movl
leave
shlb
mov
lret
lock
lret
lds
mov
or
adc
mov
ljmp
subl
loope
sbb
adcb
sub
test
int
outsb
adc
push
in
mov
add
stos
int
sub
mov
das
sbb
pop
pop
jl
shrl
sahf
and
call
insb
stos
mov
lahf
push
jecxz
movsb
jg
dec
movsb
push
movsb
jae
xorl
out
xchg
lret
sub
push
xchg
push
std
mov
cltd
out
leave
mov
sub
shlb
mov
inc
jmp
popf
adc
push
repnz
hlt
pop
insb
hlt
mov
lods
jl
fsubp
xchg
and
jecxz
xorb
jno
add
pushl
push
push
sub
test
inc
push
mov
lret
imul
dec
dec
and
in
ja
xchg
add
adc
mov
pushf
pop
pusha
mov
lods
add
jno
hlt
dec
loope
ficompl
adc
cmpsb
les
fildll
mov
pop
lret
rolb
and
stos
adcl
push
fdivl
int
cmpb
mov
jno
pusha
jbe
inc
insb
jnp
and
or
sub
dec
sbb
sub
cltd
lcall
mov
adc
pop
sbb
adc
aam
add
cwtl
add
test
ficoml
fnstenv
sbbb
test
aaa
pop
ficoml
das
inc
popf
xor
outsl
dec
or
popa
adc
test
cli
push
int3
mov
andb
sbb
repz
daa
dec
cltd
pop
mov
xchg
mov
in
popf
lods
lods
shl
push
dec
lret
test
test
xchg
adc
lds
mov
clc
pop
mov
inc
mov
jp
loopne
mov
add
xchg
mov
sbb
or
loopne
outsb
dec
stc
pop
nop
imul
pop
shlb
mov
rcr
lds
jmp
jecxz
bound
jp
movsl
mov
inc
sub
xchg
ss
loop
ss
shlb
and
jo
es
and
loope
sub
push
xchg
lcall
mov
inc
xor
out
mov
cmp
popf
mov
out
je
int3
hlt
mov
popa
adc
rorl
mov
scas
out
push
inc
fs
mov
dec
loop
xchg
in
lock
fdivs
in
call
lock
sbb
xlat
in
dec
nop
xor
cmp
mov
mov
dec
imul
mov
mov
mov
ljmp
and
scas
adc
lret
insb
idivl
jecxz
adc
pop
out
jns
or
cmpsb
inc
insl
push
inc
scas
jl
push
cltd
cmp
or
ss
cmp
add
pop
imul
sub
cwtl
mov
push
leave
cli
and
push
lods
xchg
cmp
cli
mov
sub
sub
sbb
in
push
outsl
sbb
js
les
pop
setne
leave
sub
mov
inc
aas
add
repz
inc
fnsave
sbb
push
sbb
push
lahf
sub
or
cmp
push
pusha
push
movsb
test
fbstp
rorb
gs
pop
adc
jg
mov
cld
cmpb
stos
cmp
fcmovne
ljmp
pushf
mov
stc
mov
or
jg
adc
ret
mov
and
and
xchg
cmc
mov
jne
inc
push
leave
mov
sub
movb
push
pop
rcrb
push
ja
loope
mov
xor
sbb
rorb
fs
dec
enter
int3
ret
push
jecxz
pop
lret
mov
cmp
arpl
dec
in
mov
jns
xor
sbbl
lea
push
inc
sbb
cld
ja
ljmp
or
sbb
xchg
pop
mov
cmp
jecxz
sbb
popa
jg
loope
fcmovb
out
ret
add
test
shrb
fpatan
test
es
shll
leave
fadds
test
daa
xchg
xor
loopne
push
add
mov
sub
xchg
mov
mov
fsubl
mov
mov
ds
cli
cli
jne
out
ljmp
in
or
xlat
mov
nop
inc
insb
sar
lods
fisubrs
push
pop
jmp
aad
push
push
mov
lea
mov
ret
stos
shl
adc
mull
sbb
lret
cmp
out
cmp
ret
imul
and
mov
pop
ljmp
cmp
mov
insl
lea
and
and
lods
rorl
xchg
inc
loope
mov
inc
pop
inc
fidivrl
sbb
popf
popa
jmp
ljmp
push
cmp
movsl
push
pop
add
xor
cmpsl
sbb
push
push
call
jl
outsl
jo
lcall
adc
or
dec
cwtl
data16
ficoms
or
popa
inc
push
adc
mov
push
cmp
in
pop
push
mov
jge
cmp
lahf
jbe
loopne
je
fwait
sub
jecxz
mov
and
out
notb
fwait
sub
mov
stos
fcoms
dec
aas
mov
nop
sub
imulb
enter
push
leave
fildl
pop
repnz
xchg
add
pop
andb
repz
enter
cmpsb
cmp
jnp
mov
pop
ret
jns
push
lcall
inc
sahf
adc
cmc
xchg
mov
inc
shl
out
cld
xchg
sahf
arpl
dec
adc
inc
fsts
jecxz
push
pusha
ret
mov
enter
adcb
icebp
insb
push
jne
gs
lods
es
cmp
inc
in
mov
dec
mov
cltd
cwtl
dec
mov
pop
out
adc
push
mov
stos
mov
and
cmp
mov
cmp
popa
les
andl
js
xchg
inc
pusha
andb
lods
pop
sbb
cmp
and
ret
cmp
sbb
adc
pop
pop
pop
out
test
cmp
test
add
mov
push
sub
sbb
fwait
mov
and
push
or
and
ljmp
hlt
xchg
add
mov
xor
pop
es
mov
fnstcw
aam
inc
jl
subb
sub
in
shlb
cmpsb
jb
jae
xor
bound
dec
sbb
mov
mov
sbb
subl
inc
cld
jnp
sarb
pusha
fildl
xor
hlt
das
cli
lcall
pop
inc
pop
xchg
or
add
mov
test
push
adc
dec
out
xchg
xchg
xor
dec
ljmp
cmp
fs
mov
jbe
sbb
sbb
call
and
mov
xchg
les
or
aas
pop
jbe
outsb
div
je
inc
lea
push
sahf
mov
iret
jno
ret
call
and
cmp
mov
mov
iret
fwait
mov
cmp
pminub
cmp
jg
xchg
push
pop
ljmp
inc
movsb
sbb
test
out
fcoms
std
mov
cld
xor
sub
sbb
test
or
dec
arpl
sub
sbb
cmp
test
inc
loope
cmpsb
xchg
xor
mov
mov
stc
je
testl
jge
and
mov
aas
outsl
mov
insl
aad
xchg
or
jecxz
sub
cmp
mov
cld
xchg
insb
out
jmp
mov
xor
fisubl
pop
push
xchg
inc
and
xlat
imul
iret
push
jg
xchg
clc
movsl
xchg
fsubr
ret
addl
jb
int
pop
pushf
subb
aas
lcall
push
adc
imull
stc
mov
sbb
nop
cmp
pop
and
adc
inc
out
xor
xlat
insl
sbb
fwait
cmp
hlt
adc
pop
dec
cmp
call
mov
mov
adc
sbb
sbb
pop
cmc
jns
cli
and
xchg
adcb
push
push
add
sahf
xor
push
sub
stos
pop
push
popa
icebp
js
pop
mov
add
sub
push
xor
lcall
pop
lret
or
out
cmp
sarl
pop
loop
es
pop
push
dec
add
pushf
scas
xor
jno
inc
xchg
adc
jnp
clc
adc
dec
adc
hlt
sub
std
xchg
cmp
push
sbb
push
jmp
mov
sub
jno
dec
sub
xchg
add
scas
fwait
movsl
mov
int3
in
not
and
cmpsl
dec
xor
xor
jle
mov
lahf
and
mov
mov
cmpsl
pop
inc
fmuls
and
xchg
jmp
cmp
stos
repz
adc
cli
nop
dec
mov
ds
scas
cmp
mov
insl
stc
push
add
cltd
scas
sbb
and
xchg
mov
nop
in
sbb
mov
or
ds
stos
mov
lahf
nop
mov
es
subps
add
int3
sbb
push
sub
lods
js
mov
dec
fdivl
inc
pop
adc
sbb
int3
call
loop
push
sbb
ror
stc
cmc
loope
into
push
sbb
jl
mov
out
idivl
cld
std
punpcklwd
mov
jo
xchg
cmpsl
jp
cmpsb
pop
adc
add
in
test
or
test
add
jmp
mov
ret
or
rorl
and
pushf
shlb
aas
xchg
stos
data16
or
adcl
in
mov
mov
jp
fsubrl
sbbl
xchg
in
test
popa
push
adc
and
jae
mov
xchg
fucomip
dec
leave
jge
sti
sbb
fists
cmp
aas
inc
sti
shrb
sti
fldenv
xor
hlt
or
mov
icebp
leave
in
or
aad
int3
add
sbb
jecxz
or
insl
ficoms
sub
add
mov
loopne
dec
out
adc
aad
ret
lds
cld
adc
cmp
add
sbb
in
xchg
cltd
jae
mov
mov
push
jmp
fadds
or
dec
imul
push
or
movsl
movsb
sub
ret
push
xchg
ja
jl
ret
ss
call
dec
mov
adc
xchg
xor
xchg
or
lds
sub
loop
cs
nop
addr16
mov
popf
or
popa
mov
data16
test
call
xor
inc
jl
jl
lock
cmpsb
mov
fldcw
das
jle
imulb
cmpsl
and
mov
adc
mov
fwait
jmp
call
mov
add
cmp
iret
loop
pushf
cmpsb
lock
orl
cli
add
or
test
jnp
cs
dec
pusha
mov
int3
fidivs
xlat
jo
mov
fimuls
lods
loope
add
popl
mov
mov
ljmp
jno
or
sbb
sbb
xlat
jbe
mov
xchg
dec
popf
jl
inc
imul
movsl
insl
jmp
adc
ss
imul
ss
inc
frstpm(287
adc
push
cmpb
out
sti
sbb
pop
jl
mov
xchg
jns
jle
mov
les
scas
mov
ja
push
test
scas
cmp
fwait
das
jo
sti
or
push
pop
movsb
mov
xlat
mov
and
idiv
xchg
jo
out
cli
adc
subl
push
or
xor
cs
fwait
xchg
out
or
lea
or
sbb
mov
adc
sarl
add
out
mov
outsb
push
lock
loop
jbe
mov
stos
push
mov
mull
ret
stos
stos
pop
stc
into
and
xor
add
mov
mov
addr16
imul
xor
sahf
sub
mov
lods
nop
sub
and
loop
sti
dec
lock
lods
pop
xchg
mov
mov
flds
popf
xchg
outsb
cld
add
outsl
push
and
out
cld
repz
adc
pop
jmp
push
xchg
sbb
jb
jp
repz
stc
jp
cwtl
cmp
aad
add
jg
cmp
push
flds
std
idivb
push
jp
push
adc
in
aam
daa
sub
divb
dec
add
fildll
lcall
jecxz
rclb
pushf
pop
nop
push
mov
cs
shll
out
pop
mov
push
and
adc
or
ror
ja
push
mov
xlat
mov
pop
jne
mov
xor
cmp
adc
xor
mov
adc
movsl
xor
sub
cmp
jne
jmp
cwtl
sub
ss
imul
cmpsb
sub
int3
aam
or
loope
cmp
mov
dec
pushl
pop
push
leave
pushf
ss
repz
fdivrs
pop
sub
pop
xchg
xchg
dec
std
xchg
cli
std
mov
adc
mov
addr16
cmp
mov
stc
xchg
dec
insl
cmpsb
sbb
out
ja
cmp
arpl
mov
push
dec
mov
addl
sbb
xor
cwtl
cwtl
out
inc
std
push
leave
jp
sbb
ljmp
testb
jge
add
rolb
call
xlat
xor
push
pop
dec
lock
pop
adc
jg
test
sbb
cs
pop
fsubrl
jmp
mov
dec
or
int3
xorb
add
inc
lahf
stos
js
mov
icebp
jmp
cli
jl
mov
jmp
maxps
add
adc
cltd
decb
xor
or
dec
decl
daa
inc
loope
rcrl
incl
adc
xchg
xchg
pop
mov
cs
xor
push
lods
jnp
mov
lea
cmpsb
rcll
adcb
hlt
cld
pushf
sub
mov
filds
iret
call
and
push
fiaddl
lock
cwtl
mov
mov
cmp
mov
out
add
xchg
mov
hlt
iret
mov
adc
add
roll
mov
lret
lcall
test
cmp
shr
negb
jecxz
insb
inc
jl
mov
les
loop
pusha
iret
dec
adc
pop
aad
sarl
sbb
dec
pop
cmp
imul
and
mov
test
lods
cmp
enter
pop
fadds
mov
pop
cmpsb
movsb
and
jmp
nop
mov
mov
rorb
cmovae
pop
or
es
xchg
sub
or
lret
xchg
aaa
out
xchg
xchg
aas
sbb
mov
sbb
sbb
into
aas
out
pop
lock
iret
dec
push
add
push
add
nop
scas
out
loope
or
jbe
sti
push
push
iret
ret
shll
xchg
lods
cwtl
iret
dec
dec
les
adc
outsb
cmc
cmp
repnz
fists
fsubr
dec
inc
test
jb
adc
pop
cmp
fs
gs
push
fiadds
hlt
mov
mov
adc
add
fdivrs
push
xchg
cmpb
icebp
test
sub
outsl
loopne
push
repz
sbb
and
insl
nop
addr16
fisubrl
adc
cmp
inc
dec
lahf
outsl
icebp
pop
pop
xor
fcmovne
std
mov
push
ret
mov
repz
inc
sbb
mov
mov
push
push
call
mov
cs
xchg
aaa
mov
jnp
movsl
mov
sub
or
dec
js
arpl
jl
xlat
mov
inc
scas
aaa
mov
mov
push
jb
daa
inc
mov
fistpl
mov
lock
mov
cmp
shll
or
jns
jl
mov
fistpll
test
lret
ret
pusha
jmp
fsubl
negl
fldl
roll
mov
loop
dec
cmp
aaa
scas
inc
imul
push
and
aam
popf
cmp
ja
addr16
dec
out
sub
dec
adc
adc
pop
icebp
stc
pop
jle
hlt
xor
cmp
cmp
dec
fadd
lods
inc
or
cmpl
mov
insl
jmp
push
mov
aaa
fildl
mov
call
pop
jg
frstor
dec
lds
lret
push
mov
lret
lret
sti
in
pop
cmp
daa
or
jge
mov
xchg
inc
or
sbb
xor
lods
sub
sbb
cli
or
xor
add
repz
sbb
inc
ja
or
xchg
hlt
mov
mov
and
pop
rcrb
je
mov
xor
push
pushl
lcall
test
mov
dec
fbstp
push
xchg
pop
aaa
jb
and
loope
cmp
jmp
nop
sahf
dec
fists
xchg
testb
mov
into
cltd
mov
inc
jg
mov
jle
cltd
movsl
stc
and
jmp
popa
xor
adc
fwait
in
and
adc
or
add
pop
ljmp
cmp
shr
push
push
lds
lds
popf
data16
mov
insb
add
lret
mov
std
jmp
mov
mov
les
bnd
repnz
adc
mov
pusha
ss
sub
jo
scas
pop
scas
loop
jnp
filds
ss
inc
add
xor
mov
ret
sub
push
rol
iret
pusha
leave
insb
insl
cld
testl
divb
mov
sbb
adc
lret
lret
lock
iret
movl
pop
mov
outsl
stos
fwait
in
test
ja
mov
int3
pushf
or
cmp
gs
dec
xor
fwait
sbb
jl
insl
test
scas
xor
jmp
aad
jo
pop
roll
jae
imul
xchg
bswap
enter
lods
out
mov
lods
cmp
pop
pushf
pop
mov
mov
aas
xlat
lret
pop
or
lock
fldt
shlb
add
movsl
out
xchg
xchg
inc
std
loope
jge
and
pop
movsb
rol
pop
jge
lods
xor
arpl
and
fbstp
adc
imul
std
gs
pop
pop
pop
mov
ds
push
daa
cmp
lods
jmp
pusha
gs
push
push
testl
dec
push
cmc
push
movq
fistl
cmp
push
xor
xchg
rolb
cli
in
or
gs
mov
lret
arpl
dec
cmp
mov
ret
and
mov
ljmp
out
adc
mov
inc
out
ficoms
mov
pushf
jnp
ljmp
mov
dec
sarl
in
cli
sbb
in
stos
test
and
push
dec
scas
add
nop
jns
out
mov
les
mov
adcl
inc
mov
fs
outsb
mov
and
mov
or
mov
rep
jo
xchg
lods
mov
jp
jg
mov
mov
lcall
cmp
push
shrl
sbb
inc
arpl
mov
push
jmp
push
add
xchg
mov
adc
push
mov
push
movsl
push
jbe
push
and
sub
sub
xchg
sbb
out
push
dec
pop
mov
or
imul
enter
ljmp
incl
push
sub
aaa
xchg
sub
sub
in
inc
fmuls
stos
pop
test
hlt
aam
cmp
sbb
loop
in
pop
lea
decb
adc
les
sbb
pop
mov
test
in
push
popf
enter
push
adc
jg
xor
sub
loope
les
pusha
aas
test
clc
xor
loop
and
loop
jg
adcl
xor
lods
mov
xchg
popl
mov
mov
push
bound
and
mov
inc
mov
repnz
push
sahf
mov
roll
sbb
mov
repnz
mov
ret
lret
mov
dec
ljmp
mov
mov
mov
adc
sub
js
adc
adc
pop
fcoml
pop
mov
mov
and
rol
ds
repz
lret
bnd
cld
and
cs
clc
xchg
dec
pop
mov
dec
xchg
pop
fsts
pusha
cmpb
or
dec
push
mov
into
push
repz
mov
int
fisttpll
and
dec
mov
pop
mov
xchg
pushl
ja
cwtl
gs
xor
xor
xor
icebp
sbb
andb
sbb
pushf
ja
std
inc
gs
and
lods
cmp
push
test
into
or
das
fnstsw
add
jnp
cmp
aaa
fwait
cmp
loop
add
and
je
jl
lahf
mov
in
xor
mov
mov
mov
pop
and
fidivl
clc
call
iret
push
test
lahf
repnz
adc
daa
mov
sbb
or
notb
mov
dec
or
xchg
dec
inc
out
out
nop
hlt
cld
cmc
adc
push
sub
or
out
sub
xchg
iret
pop
cld
test
pop
xchg
sub
lahf
ss
or
and
mov
jmp
cmpb
jmp
sbb
lods
nop
push
or
clc
mov
ficoms
addb
roll
xchg
clc
or
ja
arpl
fucomi
inc
adc
repz
push
in
mov
lea
fists
cmp
jbe
xor
xchg
js
lcall
inc
xchg
lea
fidivl
dec
cmpsb
arpl
inc
push
adc
cltd
out
in
faddl
xor
cltd
sahf
inc
insl
sub
and
mov
pop
mov
lds
cmp
out
popf
xchg
fisttpl
add
sbb
and
push
lret
popl
stc
jg
sbb
scas
xlat
pop
hlt
imul
inc
fcmovb
test
fadds
loopne
inc
imul
test
push
xchg
cmpsl
ror
fnstcw
loopne
fistl
mov
divl
clc
or
inc
gs
fdivrl
and
data16
sbb
adc
xor
arpl
lods
push
ja
cmpsb
loopne
aam
mov
xchg
mov
add
mov
lds
push
mov
push
jl
outsl
push
mov
lods
cmp
out
sub
cmpsl
dec
xor
push
je
lret
sub
ljmp
paddb
add
pusha
mov
sarl
dec
add
inc
push
jbe
mov
sbb
aad
sahf
xlat
out
repnz
insb
outsb
add
or
mov
sbb
add
add
push
jl
or
ds
sbb
lret
pop
repz
call
incl
pop
mov
xchg
in
aas
dec
scas
mov
dec
pop
or
mov
in
sbb
and
dec
adc
xchg
xor
lret
insb
imul
mov
and
pop
test
idivb
adcl
xchg
pusha
out
pop
and
lret
insb
pop
jmp
iret
out
cs
test
aas
ja
repnz
gs
gs
mov
sub
push
insl
xor
dec
or
sbb
and
pushl
pop
inc
xlat
int3
mov
or
cwtl
dec
xor
jp
fs
lret
inc
es
andb
leave
imul
xorb
mov
js
loopne
mov
scas
push
cmpsl
mov
mov
mov
mov
or
imul
cmp
adc
bswap
jae
insb
rcrl
arpl
cmp
jne
repz
mulb
mov
les
fisttpll
mov
and
sub
jge
and
xchg
cmp
push
fdivrp
inc
mov
mov
pop
das
inc
adcl
and
mov
jmp
inc
mul
push
and
leave
and
mov
xchg
shr
outsl
pop
adc
mov
jmp
xor
imul
orb
add
pop
das
or
fwait
adcb
sub
sbb
cmp
mov
sub
mov
stos
ss
sarl
mov
int
xor
sbb
adc
cmp
int
sub
mov
mov
and
cwtl
stos
insl
fdiv
xchg
dec
jecxz
cmc
dec
xor
xchg
dec
fcoms
in
cli
xchg
sbb
out
jne
lea
in
sbb
pop
push
call
or
insb
mov
and
pop
xor
xor
cltd
add
and
xchg
sub
filds
and
mov
jae
lods
and
iret
data16
and
mov
lret
in
into
jbe
push
test
xchg
xchg
movsl
fsubrs
ret
rcrb
daa
rcrl
in
jp
push
lods
mov
addr16
arpl
ljmp
sub
scas
jb
inc
jo
in
ret
outsl
cmp
inc
dec
add
jo
enter
adcb
inc
adc
cmp
xor
insl
lods
mov
mov
pop
sub
dec
xchg
lds
mov
hlt
jmpw
sbb
mov
jo
mov
lret
xchg
xor
arpl
in
mov
push
mov
ret
test
loope
sub
subb
gs
dec
call
mov
xchg
add
jmp
rcr
enter
or
pop
pop
add
subb
iret
xor
adc
in
orl
addr16
je
in
lret
jb
frstor
jge
es
mov
je
jno
mov
cmp
cmp
pop
ret
outsl
shrl
jbe
push
xor
xchg
cltd
das
or
mov
xchg
jno
gs
fdivr
sbbb
or
push
jmp
add
jno
mov
and
push
sbb
add
add
jno
sub
lcall
mov
dec
jge
and
inc
dec
sbb
and
ret
mov
mov
nop
sub
jb
push
or
inc
xchg
scas
orb
xchg
lea
inc
mov
stos
das
fidivs
idivb
xchg
push
leave
add
call
lret
fstpl
aam
roll
pop
mov
hlt
xor
xchg
out
mov
loope
xor
jecxz
jecxz
int3
xchg
dec
add
cwtl
push
lods
add
dec
aas
out
adc
sbb
xor
movsl
push
lret
adc
cmp
add
jnp
fbld
ret
xor
mov
sbb
sbb
sub
dec
std
ret
scas
inc
cltd
dec
mov
cld
fiadds
adc
fcomps
inc
mov
jo
pop
outsl
push
icebp
out
inc
fadds
and
imul
inc
xchg
ret
sub
jp
daa
les
inc
aam
pop
pop
adc
or
das
xor
xchg
mov
in
xchg
dec
pcmpgtw
jo
inc
push
cwtl
repz
adc
ret
fisubrl
jns
dec
pop
mov
test
push
push
imul
rorl
arpl
pop
das
incl
por
dec
sbb
std
adc
pop
and
pop
notl
mov
push
sbb
pop
mov
daa
mov
push
scas
mov
mov
shr
lcall
jl
sub
jmp
inc
dec
jo
std
jno
icebp
mov
sti
xorb
dec
jne
pop
outsl
inc
fwait
scas
mov
mov
push
test
inc
sahf
mov
mov
test
sbbl
sarl
mov
xchg
shll
adc
mov
cltd
popf
inc
dec
push
adc
pop
addr16
shl
mov
lock
mov
cwtl
das
mov
mov
aam
cmp
pop
lcall
sub
aad
inc
jmp
out
mov
mov
add
and
dec
inc
loope
sbb
ret
rclb
push
divl
and
xchg
push
clc
jg
jg
std
test
pop
add
fdivl
push
ja
xor
pop
push
lods
pop
mov
icebp
repnz
sub
insl
lds
dec
lret
int
andb
or
cld
fstl
sbb
adc
jl
ljmp
out
test
and
pop
jmp
aad
test
fistpl
in
repnz
cmpsb
iret
jecxz
inc
mov
cmp
xchg
xorl
pop
test
and
repnz
add
adc
sub
pop
cltd
push
sub
jge
add
jbe
ja
jno
mov
mov
adc
sti
js
xchg
mov
pop
inc
in
mov
jbe
dec
test
aas
imul
mov
sbbl
xchg
rorl
dec
pop
mov
faddl
push
sar
xor
dec
fnstcw
psubsb
sub
lock
cmp
fsubrs
mov
ljmp
jno
sbb
mov
dec
inc
jg
je
popa
mov
push
adc
push
mov
add
inc
popf
loope
fbld
add
test
sbb
roll
inc
sbb
enter
mov
fstsw
pop
push
sbb
and
movsb
xchg
push
sbb
xor
test
pxor
xchg
and
das
add
mov
test
shlb
push
or
cli
les
sub
jno
mov
or
int3
cld
sarb
scas
loope
pop
pushf
lds
add
xchg
inc
lds
pop
jmp
mov
ror
sub
leave
xchg
rcll
test
push
cmp
fdivl
test
adc
or
fisubl
sub
dec
mov
shl
data16
sub
jecxz
add
add
and
sbb
sbb
mov
test
and
outsb
addr16
andl
int3
sub
jp
mov
adc
mov
adc
gs
xchg
jg
inc
adc
nop
sub
pop
sub
lods
push
mov
rclb
jmp
in
add
xlat
jnp
cltd
dec
cmpsb
sarl
pop
mov
ret
mov
stos
pusha
test
inc
popa
or
cs
je
decl
inc
push
dec
imul
inc
mov
outsb
jno
movsb
les
xchg
cmc
cmp
xor
icebp
mov
insl
jo
int
and
and
push
bswap
test
cld
je
and
and
pop
push
adc
jg
call
je
fxch
minpd
add
cmp
lret
mov
or
mov
std
xchg
enter
mov
sbb
rorl
xchg
imull
frstor
mov
mov
mov
dec
loop
pop
xor
jns
lret
and
mov
clc
sbb
stos
mov
lret
arpl
mov
into
and
inc
mov
xor
les
aad
xor
in
fldcw
and
js
xor
cmp
add
out
push
pop
sub
cmp
daa
dec
push
cmp
mov
jmp
cmp
add
mov
int
iret
push
clc
popl
cmp
shrb
es
pop
cwtl
lock
cwtl
in
cs
insb
aas
inc
and
dec
adc
dec
cmp
lea
cmp
filds
rcll
xor
lret
lea
mov
sbb
lret
call
fwait
cmpl
add
sbb
aam
pop
shrl
inc
adc
popf
stc
icebp
ud1
sub
xchg
push
jp
repz
icebp
cmpsb
hlt
pop
adcl
sub
cmpsb
xor
inc
xor
ja
ds
mov
dec
movsl
mov
daa
jp,pt
jno
cltd
push
or
pop
adc
lret
and
out
hlt
push
pop
sbb
scas
sahf
ss
outsb
xchg
pop
mov
in
fsubrs
sbb
out
xor
daa
jg
add
or
sub
mov
icebp
add
dec
out
and
leave
cmpsb
push
jge
imul
xor
pop
hlt
dec
arpl
hlt
scas
mov
cltd
and
push
js
fcompl
cs
ret
das
ret
add
and
xor
cs
and
aaa
sbbl
sarl
cmpps
add
mov
lcall
sahf
into
in
inc
mov
in
pusha
mov
es
fisubrs
dec
dec
xor
test
repz
mov
inc
cmpsl
test
rcl
jl
adc
adc
shll
add
jb
dec
or
fldl2t
popa
fcmove
popa
pop
jbe
dec
stos
outsl
out
shll
jge
jae
or
inc
mov
push
shrb
sti
or
adc
jle
cmpsb
lods
cmp
out
sub
mov
jo
cmpsl
pop
out
dec
xor
pop
pop
nop
pop
cmc
jp
inc
icebp
xchg
mov
in
dec
push
fcomi
cmp
jl
xor
push
fwait
mov
repnz
pop
add
or
inc
test
rcr
mov
pop
dec
xchg
mov
inc
or
mov
test
loope
les
dec
std
repz
ret
fwait
popf
xor
pop
loopw
sub
jnp
loopne
mov
cmp
fcomp
outsl
mov
jbe
or
testb
add
insb
mov
pop
scas
into
push
ljmp
or
sbb
imul
lret
nop
mov
dec
pop
mov
sbb
rol
sub
in
jns
stos
adc
inc
or
xchg
cmp
add
jl
lret
inc
scas
test
loope
movsl
xor
xlat
jle
xor
sti
mov
push
dec
int
pusha
ss
xchg
daa
in
or
add
dec
add
ret
mov
or
sub
enter
aas
test
dec
popa
fdivrl
out
mov
sub
insl
ja
xchg
pop
mov
lahf
outsb
movsb
jne
xlat
push
inc
loope
aaa
xchg
adc
jno
dec
icebp
movsl
ds
nop
xor
cmp
aas
mov
loop
repnz
mov
dec
mov
jns
dec
push
addl
test
adc
outsb
mov
jo
scas
int
push
addr16
mov
pop
loopne
test
xchg
dec
mov
push
shlb
lahf
mov
daa
imulb
xor
xchg
test
push
outsl
rcll
nop
fdivs
or
clc
cmp
cmp
mov
push
add
jo
cmpsl
and
cmp
in
push
push
dec
out
repz
loop
addb
and
push
pop
mov
ljmp
hlt
subb
mov
mov
in
sub
lret
mov
stos
in
sbb
cs
or
pop
xchg
sti
xchg
leave
jle
xchg
pop
mov
test
cltd
clc
jbe
out
fldl
push
lahf
xor
dec
imul
cmp
insb
mov
mov
nop
add
xor
mov
cltd
or
out
dec
test
lds
adc
mov
gs
xor
cltd
xor
js
mov
mov
imul
repnz
jo
lea
cwtl
lea
adc
or
bound
sbb
lcall
ficompl
ss
cmpsl
shll
mov
adc
or
add
mov
loopne
mov
cmpsl
mov
rcrb
mov
jle
jp
xor
in
mov
mov
push
scas
scas
push
loop
push
test
pop
push
imul
jp
pop
pop
mov
or
sbb
and
and
mov
or
sbb
es
imul
gs
xchg
dec
in
test
add
dec
push
fnstsw
aad
je
cmp
cmpsl
pop
xchg
mov
dec
dec
cwtl
aad
mov
fldl
rorl
xor
clc
add
xor
push
xor
stos
pushf
push
ret
test
idiv
xchg
xor
enter
sbb
push
mov
data16
mov
xor
add
es
add
sti
xchg
or
sbb
and
mov
and
ficompl
ficoms
push
cmp
sub
mov
enter
xor
nop
ss
js
shlb
dec
pop
lock
jo
fs
xchg
add
ds
cmp
pop
cwtl
mov
add
and
pusha
stos
jno
fstpl
dec
sbb
jbe
pushf
push
push
jecxz
pop
adc
in
loope
lret
sahf
ret
rcll
mov
sub
jle
popf
xor
or
popa
orl
shl
cmp
add
insl
cmp
out
cmp
scas
fdiv
nop
dec
in
jbe
arpl
jecxz
add
lret
outsl
mov
push
ljmp
jno
shrb
inc
mov
enter
pop
jmp
ss
repnz
mov
les
mov
mov
icebp
add
mov
fmull
pushf
mov
sti
jbe
outsb
and
or
mov
or
mov
add
sahf
inc
xor
xchg
bswap
repnz
mull
lock
mov
pop
arpl
and
mov
ss
inc
fidivrl
std
mov
or
dec
mov
fstpl
inc
dec
push
andl
lea
icebp
jle
mov
movl
push
out
lock
jne
aad
test
or
in
cmp
lock
xor
push
call
sbb
sub
sarb
jecxz
mov
daa
ret
repz
lds
clc
mov
inc
loopw
leave
fisubs
jl
mov
loope
sub
or
lods
cmp
cmpsl
jp
aaa
iret
cltd
inc
and
stos
shll
push
adc
jae
stos
out
inc
popf
outsb
jl
fs
push
andb
jnp
pop
mov
mov
xchg
adc
cmpsl
add
es
jae
adc
jae
out
xor
adc
mov
cmp
add
inc
test
iret
xor
out
popa
maskmovq
negl
arpl
mov
mov
adc
aad
iret
and
mov
fwait
call
int
out
lods
mov
aaa
cmpsb
and
pop
xchg
mov
pop
sbb
loope
shlb
clc
cltd
aam
out
insl
aad
sahf
adc
fists
lds
sub
pop
jecxz
or
mov
fs
lds
data16
fmull
mov
inc
mov
mov
fmul
loope
les
movsl
inc
sti
jle
adc
mov
outsl
jb
fisubl
leave
js
mov
es
sti
out
xor
mov
or
pop
pop
sbb
les
popf
xor
mov
fisubl
sbb
scas
pop
bound
lahf
dec
fs
cs
jnp
mov
rolb
mov
in
insl
adc
push
rclb
into
cmp
fdivp
pop
fisttpll
data16
or
or
adc
fnstcw
in
mov
inc
adc
fisubl
mov
jmp
stos
mov
shl
lret
or
or
sbb
dec
xchg
fadds
xchg
pop
lret
mov
movsb
jp
adc
pop
call
das
xchg
dec
sti
cmp
push
icebp
adc
orb
jbe
jne
xchg
loopne
fwait
mov
int
addr16
sub
pop
out
int3
test
addl
cmp
fldt
xchg
lcall
add
pushf
xor
jae
jb
mov
adc
push
js
out
sub
mov
outsb
loope
into
mov
inc
mov
ret
lahf
mov
ja
int3
xor
sarl
mov
shl
imul
sbbb
mov
inc
pop
stos
pop
xchg
stos
xchg
cs
stos
je
sub
filds
jl
les
inc
enter
cmpsb
lock
adc
mov
sub
mov
ja
sub
cld
jns
and
lods
inc
pop
ss
mov
push
fcmovb
adc
imul
sub
xchg
lea
add
ja
xchg
add
mov
cmc
test
pop
mov
fistps
loopne
das
imul
or
cmp
inc
mov
mov
push
loop
cmp
jno
mulb
cmp
bound
push
sbb
xor
jle
bound
mov
mov
jecxz
fstl
and
cli
andb
shrb
pop
mov
inc
xlat
repz
adcl
cli
push
pop
sti
xor
gs
in
add
fs
push
jne
inc
mov
loop
rclb
mov
in
sbbl
pop
dec
jle
loope
xchg
push
ja
cmp
ljmp
fidivrl
gs
fistpl
movsl
nop
xor
stos
push
sbb
dec
push
add
jl
loope
ret
aas
mov
push
sub
hlt
enter
dec
fists
dec
push
repz
xor
xor
mov
pop
or
stos
mov
add
pushf
cmp
jecxz
gs
in
push
sahf
loopne
dec
daa
push
frstor
daa
push
pop
jno
mov
push
dec
iret
or
jb,pt
mul
dec
push
sub
stc
sub
lret
test
aaa
add
stos
push
fiaddl
jg
push
pusha
mov
or
jb
imul
popa
clc
and
mov
in
scas
dec
fidivrs
adc
adc
sub
xlat
lock
scas
inc
inc
sub
cmpsb
mov
mov
repz
test
jno
popf
lods
test
mov
int3
sbb
fisubl
ret
test
mov
test
mov
lds
movsl
jg
enter
sbbl
adc
inc
imul
lret
fchs
mov
leave
mov
or
xor
jns
aam
adc
lods
jno
je
inc
and
push
push
fstl
xchg
loopne
flds
aaa
inc
pop
push
ret
roll
loope
jae
pop
mov
mov
adc
jg
mov
sub
iret
js
lds
and
dec
out
outsb
mov
inc
sti
pop
imul
popf
jp
push
pushfw
arpl
xchg
mov
pop
push
inc
pop
and
xchg
movsb
inc
push
test
xor
in
jns
insb
add
xchg
pop
pop
lods
fcomps
mov
sub
mov
fisubl
mov
js
push
mov
sub
inc
jnp
dec
loope
dec
in
mov
in
lock
mov
scas
inc
jbe
xor
or
xor
cmpsl
add
cwtl
mov
cs
js
int
and
inc
push
jmp
cld
push
aas
and
ds
stc
mov
fsubrl
mov
mov
mov
cmpl
stos
std
cltd
adc
and
or
mov
xchg
add
inc
pusha
rcll
mov
adc
sbb
dec
push
iret
inc
sbb
jo
and
dec
xchg
pop
rcr
stc
cli
in
sti
pop
scas
sub
xor
pop
mov
into
int3
stc
or
out
cmpsl
or
pushl
and
pushf
mov
inc
add
sbb
and
inc
cmc
mov
jle
jns
adc
pop
cltd
xchg
fs
or
cmp
adc
test
icebp
xchg
test
ja
sub
lea
cli
lahf
and
and
dec
mov
lods
xor
xchg
out
loope
mov
fcmove
enter
pop
les
mov
lret
iret
ss
push
push
movsb
test
push
neg
leave
sub
sti
mov
addr16
cmp
cmp
xchg
ret
xorb
cmp
ja
dec
pop
and
xchg
call
ficompl
cmp
es
or
pusha
push
int3
jl
cld
movsb
mov
mov
fucomp
mov
dec
push
dec
jp
int
xlat
ss
mov
push
inc
stos
sub
mov
imul
inc
inc
pop
shr
pop
insb
int
pop
fwait
push
mov
cmp
sub
and
cltd
std
jle
pop
lods
mov
shl
pop
aam
jnp
aam
xchg
addb
imul
repnz
pop
scas
jmp
xorl
pop
mov
icebp
xchg
out
jns
fcompl
aad
out
jge
mov
sub
loop
mov
fldcw
dec
fistpl
imul
arpl
mov
loope
testb
xchg
mov
add
lret
adc
push
iret
lods
xchg
and
and
lcall
or
int3
cmpsb
sub
xchg
xlat
mov
hlt
mov
ljmp
test
popa
enter
push
pop
or
test
push
sbbb
push
sbb
sbb
jp
cmp
out
jb
jno
xor
loopne
in
ss
cmp
xchg
int3
gs
dec
mov
adc
cwtl
xchg
insl
lds
jnp
out
js
pushf
mov
inc
nop
idivl
inc
or
fcomps
or
das
mov
leave
inc
in
iret
push
ss
xor
nop
stos
lret
daa
insb
jmp
add
mov
cwtl
cwtl
fs
cld
xchg
or
imul
inc
cltd
addr16
bound
ja
cld
inc
fistpll
inc
push
repnz
sbb
xor
dec
mov
fwait
rcl
leave
add
repnz
pop
inc
mov
test
bound
xor
inc
fadds
cs
mov
daa
push
movsb
in
dec
jbe
out
sahf
jno
loopne
das
sar
mov
sbb
jle
out
sti
jmp
sub
lret
cld
rclb
adc
sbbb
push
jp
and
adc
cmp
in
mov
adc
xchg
mov
shl
sub
out
inc
push
sahf
add
push
enter
fisttpl
das
addb
mov
push
in
or
int
outsl
loopne
push
mov
lret
fisubl
cld
fsubrl
add
fwait
sbbl
mov
xchg
fbstp
jbe
nop
xchg
vpcomd
xor
rorb
loope
mov
push
add
in
mov
mov
sub
dec
stos
jecxz
in
leave
mov
int3
mov
inc
int
sbb
loop
leave
and
ja
pushf
add
test
lret
add
das
add
leave
bound
inc
adc
adc
mov
inc
ficompl
jo
loope
and
xchg
and
shrl
cs
in
pop
mov
jno
insb
lds
mov
jo
sti
sbb
test
cmp
xor
and
ljmp
adc
lock
push
sub
sub
call
mov
pop
add
xor
aaa
pop
mov
pop
pop
sbb
pushf
les
sub
jl
push
mov
pushl
std
xchg
ds
cmp
loop
movsb
dec
pushf
jne
loope
xchg
or
cld
xchg
sub
sbb
mov
sub
fs
pop
mov
xchg
es
xor
ja
repz
fisttpl
pop
xchg
adc
scas
outsb
fstpt
fdivrs
mov
push
sbb
dec
hlt
sahf
inc
mull
ja
inc
in
pop
add
pop
mulb
arpl
jg
fistpll
push
adc
dec
ror
pop
enter
xchg
jmp
pop
fcoml
loopne
mov
xchg
cmpb
aad
jae
call
pop
push
test
adc
or
fnstenv
bound
ja
mov
dec
arpl
jmp
int
sub
in
mov
cld
xor
dec
call
ljmp
jno
rcl
xchg
pop
push
cmpsl
push
xor
aaa
dec
in
add
cld
mov
pop
and
sbb
sbb
out
outsb
cmp
dec
pop
ret
sbb
imul
push
mov
mov
fcmovbe
sub
stos
out
int
mov
inc
test
or
pmulhuw
pusha
imul
loopne
dec
add
inc
pushf
inc
leave
sub
sbb
daa
mov
xor
out
pop
push
jmp
jle
jo
in
mov
or
jne
int3
jg
push
or
adc
xchg
add
mov
stos
jne
push
clc
dec
scas
mov
mov
and
gs
fwait
adc
mov
and
aam
rorl
pop
pop
repnz
in
movsl
das
jns
popa
adc
mov
push
xor
fs
neg
jno
iret
jb
aaa
clc
test
jle
ret
scas
jno
xlat
cmp
jmp
pop
mov
or
jae
sub
hlt
aam
mov
bound
xchg
inc
stc
and
mov
popf
ret
sub
rcll
gs
sub
inc
idivl
out
bound
adc
xchg
inc
xchg
inc
sbb
daa
fwait
dec
jecxz
dec
scas
test
and
sti
push
repnz
sar
lcall
dec
or
and
pushf
scas
inc
inc
sbb
push
sbb
pop
pop
out
ljmp
js
pop
stos
mov
cs
out
fsub
push
fiaddl
gs
gs
shlb
push
cli
js
jno
push
and
sarb
add
cmp
sti
insl
or
push
cmp
pop
jo
mov
ss
fucomi
inc
add
inc
xor
fucomp
mov
ljmp
sub
shlb
mov
ret
popf
andl
mov
mov
enter
ss
xorl
push
popf
xor
icebp
push
in
mov
xor
push
jo
cmp
sub
sbb
push
outsl
out
sbb
ds
addr16
xchg
lidtl
cli
mov
mov
push
mov
push
or
jg
fdivl
fsubrp
test
pop
sahf
cmp
mov
fstl
orl
cmp
or
jns
sbb
loopne
fdivrs
int3
arpl
ja
imull
or
pop
adc
or
inc
xchg
mov
mov
aam
or
adc
test
fidivrl
jo
rcll
pop
in
fwait
xor
movsb
mov
mov
push
sahf
ljmp
lret
add
sbb
stos
sbb
xor
sub
jg
cmp
xor
adc
movsb
sub
mov
arpl
movlps
xchg
aad
movl
jp
xchg
xchg
popl
cwtl
add
insl
sub
pop
pop
sub
xchg
cmp
insb
sub
js
mov
add
mov
and
pop
test
call
ret
xchg
daa
or
cmp
xchg
cmc
dec
dec
jbe
fdivl
jae
xor
mov
into
adcl
insb
fbld
mov
imul
cmc
mov
ds
rorb
lret
bound
dec
movsl
lds
ds
xchg
repz
jae
mov
cltd
jne
in
daa
cmc
outsl
jmp
dec
cltd
sahf
lods
lret
fdivs
imul
nop
test
lret
pop
dec
sub
push
stos
shrb
mov
push
in
pop
xor
and
int3
sbb
and
push
enter
aad
pop
ja
dec
pusha
jp
lret
syscall
cmp
ss
out
push
in
pop
adc
test
sub
sahf
sahf
stos
xchg
imul
add
pop
mov
shl
jg
jg
inc
and
adc
push
movsl
hlt
dec
les
fmul
int3
leave
cwtl
sbb
js
ds
sti
ss
push
test
inc
adc
cmp
cmpb
insb
mov
cmp
xor
dec
pop
addr16
mov
pop
inc
add
add
inc
and
sub
fcomps
fs
scas
push
fisttpll
pop
jns
cs
jge
jecxz
adc
mov
out
xchg
mov
mov
sub
clc
jnp
ljmp
shrl
addl
inc
mov
or
push
push
sub
stos
in
stc
lret
jg
jo
jmp
jb
push
cmc
leave
insb
push
sti
push
test
mov
cmp
sub
pop
mov
cmp
fisttpl
sub
push
cmc
and
call
mov
insb
cmc
push
push
inc
mov
xchg
int
dec
sbb
sbb
in
pusha
fwait
in
aaa
push
enter
fcomps
mov
fcmovb
in
andb
xchg
push
dec
pop
cmpsl
lcall
xchg
and
dec
pushl
and
mov
ret
dec
or
lock
ret
sti
adc
push
int3
imul
adc
out
js
mov
mov
cmp
int3
inc
stos
and
push
pop
call
icebp
lods
das
daa
ror
scas
outsb
adc
call
outsl
js
push
mov
fsts
faddl
dec
cli
into
pop
insl
xchg
mov
repnz
lods
cwtl
ja
loopne
push
cwtl
pop
mov
xchg
int
ret
cmp
xlat
sub
out
dec
mov
ret
jne
mov
in
js
das
mov
insl
incb
shll
cmpsb
pop
cmc
push
or
fbstp
sbb
mov
or
out
aad
scas
jb
jno
loop
xor
pop
mov
in
cmp
or
fs
gs
and
and
repz
sub
in
lcall
mov
in
sub
ret
add
mov
das
sar
fidivl
jno
mov
stos
mov
fistpl
or
int
adc
jne
outsl
test
mov
cmp
sub
femms
inc
lret
cmp
icebp
mov
daa
push
mov
sahf
arpl
push
sahf
stos
pop
cld
xchg
mov
aaa
stos
loopne
jbe
pop
add
and
mov
loop
bound
ja
lock
out
loop
dec
cli
jge
and
enter
mov
or
stc
sbb
pushf
adc
mov
or
cmc
push
xchg
mov
movsb
pop
cmpsl
pop
push
scas
into
test
bound
sbb
sbb
adc
outsl
jge
sarb
dec
mov
xor
out
fwait
repz
shll
jbe
dec
pop
mov
das
sub
jne
add
sub
adc
repnz
imul
test
push
inc
mov
rolb
add
sbb
sub
jecxz
mov
mov
sub
cmp
enter
adcl
cmpsl
pop
aaa
push
fmul
pop
aaa
repnz
cmc
lods
or
cmp
jl
pushl
into
sub
outsb
xchg
or
int
xchg
daa
movsb
stos
mov
dec
shll
or
ret
sub
imul
xor
into
sub
es
pop
ret
jne
cmc
jnp
or
daa
or
inc
fcoms
arpl
jle
push
jns
xorl
pop
pop
out
mov
fnstenv
into
sti
push
sbb
rcrl
sub
pminsw
inc
push
mov
inc
test
xor
push
insb
mov
jle
or
mov
loope
sub
rcr
scas
add
repz
sbb
orb
insb
ja
rep
mov
hlt
mov
out
cmovge
mov
fistl
divb
movsl
jne
mov
out
cli
xchg
and
shll
cmp
xor
push
aas
mov
inc
xchg
inc
mov
mov
mov
arpl
sub
add
cmpsl
mov
sahf
aad
mov
subl
hlt
mov
sti
jg
lahf
add
fsubr
ret
jp
rcrb
add
mov
pop
repz
or
daa
jmp
mov
sub
rclb
pop
sub
push
push
xchg
jb
ficoml
sti
lret
cmpsl
cltd
iret
lretw
push
adc
out
xchg
xor
je
in
dec
pop
xchg
call
jo
cmpsl
push
cmp
aaa
inc
inc
pop
lea
cmpsb
cmc
pop
pushw
xchg
aad
mov
xlat
mov
sub
xchg
pop
sbbl
int
das
jbe
frndint
xor
sub
dec
push
sbbl
mov
bound
cmc
inc
rclb
jle
stos
cmpsb
cmp
pop
out
pop
lahf
fdivrs
into
gs
frstor
jno
push
ljmp
subb
adc
jl
in
lods
adc
push
jge
or
pop
fxch
and
push
rcr
pop
xor
fwait
mov
jle
xor
pop
shlb
std
push
test
push
inc
or
fwait
sti
dec
mov
es
fnsave
aaa
inc
lods
ljmp
lock
rclb
mul
ret
call
test
pushf
mov
push
sub
cli
mov
pop
adc
push
scas
stos
icebp
sbb
dec
insl
sahf
jle
mov
inc
fdivl
mov
outsb
inc
pop
cmp
pop
push
sub
fidivs
push
repz
shrl
push
mov
div
popa
mov
mov
fcomi
mov
pop
imul
adc
mov
insb
inc
push
sbb
and
pop
out
add
mov
pop
push
lods
mov
sbb
rcrb
das
pop
aam
mov
mov
pop
aas
enter
sbb
call
fcom
outsb
lcall
push
test
lcall
push
jne
push
lods
push
movsl
popa
mov
sbb
repnz
pop
adc
sub
dec
cltd
push
mov
mov
into
fmull
mov
scas
pop
dec
sub
dec
or
jno
cld
xor
or
jecxz
je
das
push
aad
push
cmp
sub
mov
or
adc
arpl
sbb
and
iret
inc
dec
jbe
mov
jno
mov
ja
or
nop
mov
mov
cmp
cmp
test
add
cs
lods
inc
lahf
push
xchg
cmp
imul
je
mov
and
jle
sub
or
mov
es
fcoml
adcl
arpl
loopne
test
inc
sti
out
clc
push
mov
mov
mov
mov
sahf
decb
inc
lds
inc
jp
das
lods
popa
jmp
sahf
cmp
and
gs
popa
mov
mov
lcall
inc
and
add
mov
pop
mov
xchg
js
pop
rcll
mov
fsubr
hlt
mov
mov
cltd
out
dec
fistps
mov
fldenv
xchg
lds
lret
loop
daa
push
popf
pop
test
nop
stos
int
fisttps
daa
insb
mov
sub
push
cmpsb
inc
stc
lods
ljmp
leave
jle
cli
mov
fcmovb
hlt
pop
jb
lret
inc
frstor
add
inc
popa
mov
int3
test
sbb
loop
or
fsubl
fwait
stos
xchg
and
test
bound
repnz
ds
mov
pop
repz
xchg
pushf
aam
es
xor
push
xchg
in
sub
leave
test
or
cmp
std
in
xchg
pop
push
sbb
mov
adcb
pop
fcmovbe
in
inc
movsl
pop
dec
pusha
cmp
cltd
scas
push
mov
inc
jmp
xor
xchg
in
lret
push
hlt
and
repz
je
and
call
or
jns
sub
cwtl
adc
push
aam
jmp
call
test
add
jae
movsl
das
lock
mov
insl
mov
insl
jge
lods
cmc
pop
test
mov
in
xor
insb
mov
jnp
gs
or
addb
or
sub
or
inc
mov
gs
xor
jg
jns
jle
pop
cmc
repz
ss
cltd
jl
adc
imul
icebp
rcl
es
push
xor
and
out
or
xchg
sub
sbb
dec
dec
and
ret
hlt
and
push
icebp
sub
and
dec
mov
rcl
insb
insb
enter
sbbl
pop
jno
pop
das
cmp
xlat
add
lods
addr16
ret
dec
in
xchg
sbb
or
mov
insb
stos
and
sub
jbe
ret
aad
mov
jae
rorb
and
out
inc
sbb
inc
pop
pop
mov
mov
lret
mov
add
js
outsl
jb
push
xchg
js
stc
and
lret
adcb
ds
dec
mov
ret
ficoml
mov
mov
cmpsl
popl
cld
sbb
fwait
sbb
les
mov
shrb
movsl
out
mov
mov
and
cmc
inc
cltd
adc
mov
adc
and
or
and
push
push
mov
cli
stos
fadds
cmc
inc
minps
jne
xor
xchg
int3
js
imul
rcrb
push
outsl
jmp
cmp
xchg
and
mov
sti
jbe
sti
dec
movsl
mov
loope
fidivrl
ret
inc
inc
sub
xchg
out
aad
and
aaa
ds
aaa
jbe
lahf
push
mov
jmp
sbb
mov
jge
ja
cli
push
jp
cmp
cld
or
imul
arpl
insl
pop
stc
lea
aas
testb
jp,pn
add
lea
out
aas
scas
and
sbb
ja
or
inc
jne
fadd
sbb
outsb
inc
mov
mov
mov
into
shl
decl
push
out
cld
and
and
repz
lock
sub
lea
xor
xchg
xchg
in
cmp
into
sbb
cmp
imulb
sbb
cmpsl
leave
adc
cmp
dec
loope
jmp
int3
adc
hlt
mov
pop
xchg
lret
jl
jmp
cmp
sbbb
mov
stos
add
xchg
les
lea
ss
mov
jle
data16
push
imul
push
leave
xchg
scas
xor
add
pop
add
lds
sbb
and
rolb
addb
xchg
jno
push
pop
rcrl
mov
add
lret
jecxz
xchg
leave
clc
lahf
cmp
sbb
mov
outsb
sub
outsl
adc
insb
or
es
insl
jle
push
popa
pop
insl
sarb
enter
cwtl
je
dec
popa
jns
xchg
jp
push
fs
mov
adc
jp
cltd
xor
push
roll
and
xor
cmp
fsubr
cld
or
sub
dec
dec
popf
lods
push
jbe
lret
jb,pn
jnp
lahf
mov
jnp
shll
leave
aad
push
dec
lock
cmpsl
lods
ja
xchg
xor
or
or
mov
repnz
and
repnz
and
mov
sub
iret
xlat
sbb
mov
aam
xchg
mov
lcall
sbbl
mov
gs
popf
jae
js
lock
sbb
adc
in
sbb
fmull
ja
mov
or
nop
jge
or
lods
loope
xlat
outsl
mov
addr16
and
jge
inc
and
aas
aad
sahf
sahf
pop
test
jl
jbe
daa
mov
rorl
bound
push
mov
jmp
jmp
cmc
inc
into
or
sub
cs
pop
stos
stos
scas
nop
push
push
xor
xor
mov
dec
add
jmp
mov
call
inc
aad
adc
movsl
mov
bound
cmp
or
aaa
or
daa
pushf
xor
arpl
faddl
mov
xor
test
pop
cmc
xor
mov
fidivs
lret
cli
and
mov
pop
notb
in
and
or
cmp
dec
cwtl
test
aad
scas
add
stos
loopne
push
or
notb
stos
cmp
insl
mov
into
popa
aaa
sub
jg
jle
cmpsl
stos
std
push
cmp
outsl
dec
cmovge
mov
jg
int
ds
or
imull
cmp
negb
dec
fsubr
scas
mov
push
inc
call
popf
sub
ret
sahf
add
dec
mov
dec
lcall
mov
leave
jl
jo
xchg
push
aas
mov
pop
sub
push
dec
mov
in
mov
dec
das
fstps
and
arpl
jae
ret
ret
adcl
nop
and
or
mov
dec
ds
add
push
loop
pop
cltd
lret
mov
fistpl
mov
cwtl
das
hlt
xor
mov
mov
lcall
add
dec
mov
fcomi
pop
sub
xchg
mov
jge
mov
push
aam
inc
pop
leave
stos
pop
rolb
cmp
sbb
mov
cmpsb
inc
insl
fcoms
xlat
pop
jo
jl
es
sub
test
pop
push
insl
jne
stos
xor
fcomps
fildl
ja
lret
test
stc
pop
push
stos
cmp
mov
xor
push
loop
call
jb
jbe
push
into
or
lock
fsubp
test
leave
insl
out
lret
dec
pop
push
out
jnp
pop
inc
add
ret
xor
test
sbb
fsubs
inc
mov
in
lret
xchg
inc
xlat
inc
fcmovb
jns
and
push
stos
inc
leave
add
fs
push
push
aaa
stos
pop
mov
jmp
jg
xor
jns
fcomi
mov
sbb
jl
into
mov
bswap
and
aad
lods
mov
xchg
mov
popf
mov
sub
pop
push
enter
out
arpl
mov
movsb
mov
sub
xor
fs
jge
mov
int
mov
sub
out
add
and
adc
rcrb
test
std
jl
mov
shll
xor
adc
idivb
dec
loopne
cmp
cmp
xor
int3
xor
sbb
lahf
push
pop
adc
jb
jge
ss
leave
sahf
add
repnz
sub
jge
push
inc
repnz
adc
out
movsl
sbb
cmpsl
ds
dec
out
stos
ret
cmc
xor
paddd
cli
inc
imul
inc
cwtl
mov
hlt
inc
lods
push
mov
in
insb
jae
cmp
mov
aas
adc
rcll
xchg
test
lret
lcall
in
push
lahf
int3
mov
xor
aaa
sarb
cmp
fbstp
mov
lock
cmp
das
ret
inc
or
xchg
sbbb
jbe
adc
pop
mov
das
aas
sar
and
dec
imulb
cli
sbb
mov
adc
push
cmp
cmp
mov
jb
dec
aaa
stc
dec
adc
push
mov
mov
sbb
incb
jg
scas
push
mov
insl
test
out
push
inc
popf
cmp
ss
xchg
jb
add
lret
cmc
jo
test
icebp
maskmovq
movsb
out
xchg
cli
jno
lcall
cmp
fisubrl
leave
insb
jle
std
iret
lea
pusha
mov
cmpsb
inc
cmpb
dec
shr
movsl
daa
mov
popf
dec
mov
xor
les
stos
add
sahf
fwait
cmpsl
and
movsb
lcall
movsb
jmp
cmc
loopne
add
addr16
pop
loopne
lea
icebp
lret
dec
inc
lcall
xchg
call
in
pop
out
push
push
mov
push
lret
cmp
xchg
cmpsl
adc
cmpsl
jle
inc
sbbb
jne
add
loope
jnp
adc
fsubrs
ja
pushf
add
fldcw
fcmove
and
out
rcrb
adc
cltd
sbbb
jg
insl
es
hlt
lret
ja
shrb
nop
push
sbb
nop
push
aad
push
dec
dec
fisubrs
bnd
adc
clc
xchg
inc
out
xlat
mov
or
xchg
add
push
pushf
jp,pt
int
scas
xchg
dec
setnp
ret
pusha
in
adc
and
and
popf
or
inc
es
xchg
push
xchg
leave
xchg
xor
inc
inc
sar
inc
xor
pusha
lods
pop
sbb
out
cltd
ss
cmp
jbe
shlb
pop
dec
pop
cwtl
fs
movsl
fisttpll
push
mov
stos
test
push
sbb
mov
fs
jae
dec
je
xchg
mov
insl
xchg
fldcw
xorl
repnz
push
mov
sub
or
jnp
inc
pop
push
cmp
pop
push
mov
cmp
mov
push
push
roll
sbb
shl
outsl
ret
outsl
rcl
mov
push
dec
or
adc
sbb
adc
fucomp
jnp
cmp
inc
pop
dec
pop
jae
jg
rcrb
jecxz
ret
pop
scas
repz
push
or
fsubrl
lods
sbb
shrl
cs
pop
push
pop
jmp
fwait
pop
aam
cmc
xchg
rol
outsl
push
movsl
mov
or
mov
nop
xor
imul
sahf
adc
inc
mov
subl
arpl
lea
lods
sahf
xor
dec
pop
cmp
xchg
pop
cmc
ret
add
sbb
sti
int3
mov
adcb
and
pop
xor
pushf
push
bound
bnd
adc
loop
jae
mov
stc
xchg
add
lahf
add
sub
in
add
jnp
arpl
ja
push
incl
int3
jae
adc
push
add
inc
xchg
and
loope
sahf
sub
gs
dec
gs
sub
cmpsl
jo
cli
or
adcl
push
lock
mov
fadds
jp
add
gs
int3
sub
leave
pop
dec
sub
dec
and
ss
iret
popa
into
jo
sub
mov
mov
pop
mov
jae
arpl
fstpt
push
testb
bound
ss
icebp
dec
lods
xor
iret
fisttpl
cmpsl
sbb
add
pop
call
fbld
fwait
je
cmp
add
fmul
push
addr16
js
mov
imul
cmp
cs
jg
jmp
add
aaa
adc
insl
pop
out
shrl
mov
jae
outsl
mov
leave
push
mov
in
stos
jbe
idivl
push
test
lods
out
cltd
xor
pop
mov
out
xchg
mov
cmp
mov
and
xchg
xor
movsb
repnz
mov
or
push
call
cmp
xor
mov
cmpsl
nop
test
and
outsl
fisubl
leave
push
popf
or
jo
lea
aaa
fildl
add
sbbb
push
fwait
bound
popa
cli
cwtl
jbe
cli
pop
dec
mov
push
sbb
shll
dec
pop
jne
pop
repz
mov
or
dec
ds
jg
scas
pop
mov
inc
icebp
xchg
mov
cmp
sbb
sahf
fs
clc
popl
mov
filds
ret
test
sbb
std
out
js
fcoml
jle
adc
push
in
mov
or
mov
dec
cld
int
lret
sti
and
data16
inc
sbbl
fs
popa
mov
mov
arpl
mulb
nop
mov
mov
cmp
inc
loop
popa
aam
loopne
xor
cmpsl
xchg
sub
cmp
mov
xchg
fsts
sub
loop
cmp
push
xor
dec
in
ss
les
arpl
adc
and
insl
adc
scas
repnz
jbe
cwtl
mov
rcll
fidivl
mov
and
in
pop
insl
cltd
fmuls
arpl
mov
test
divb
mov
notl
daa
cmp
mov
fistps
int
push
scas
inc
pop
inc
push
xor
aaa
push
in
mov
push
je
ret
and
dec
dec
inc
test
loopne
addl
inc
pop
inc
dec
aas
dec
ss
aaa
jb
xchg
sub
dec
mov
ja
add
cmp
fsubr
inc
movsb
movsl
xorl
ljmp
rcl
iret
iret
mov
in
cltd
mov
or
arpl
mov
sub
pop
adcl
les
lds
mov
mull
fcom
add
jno
loopne
test
ja
popa
lods
sbb
lods
push
pop
ret
fimuls
pop
repz
clc
jle
incl
fidivl
sahf
adc
push
or
mov
lret
test
and
test
jmp
fimuls
mov
popa
repz
pop
popf
push
in
shll
addl
jle
jge
mov
mov
loopne,pn
enter
mov
incb
jns
or
add
inc
popa
and
and
andb
sahf
xchg
sub
mov
dec
std
mov
mov
pop
imul
cmp
inc
xchg
int3
inc
cmp
sti
add
roll
cmp
jg
sbb
jo
inc
fs
aas
gs
rcrl
jle
push
out
xor
or
and
mov
lds
mov
dec
imulb
hlt
xchg
and
push
dec
push
dec
out
fsts
faddp
mov
rcll
mov
push
push
cmp
movsb
das
loopne
cld
xchg
icebp
loope
int3
mov
mov
aad
int3
fisubs
adc
cwtl
add
ret
inc
aas
stc
dec
sbb
mov
sbb
stos
xchg
jecxz
dec
jae
xchg
mov
into
sbb
sub
sbb
shlb
or
jecxz
jbe
imul
into
and
jmp
cmp
pop
sbb
mov
push
js
mov
leave
pop
xchg
or
mov
fwait
sub
xchg
jno
mov
hlt
jecxz
fmul
jge
arpl
and
jb
inc
sahf
cli
push
inc
insl
push
fcomp
dec
jmp
fwait
mov
xchg
sbb
adc
scas
int
push
sbb
mov
aaa
mov
into
mov
jle
fisttpl
lock
dec
xchg
xor
add
xchg
cmp
push
mov
sub
mov
pcmpeqd
xor
pop
pop
inc
ljmp
lock
scas
and
sub
jge
mov
add
mov
iret
js
jne
jns
jae
push
push
jmp
and
test
stos
jp
mov
stos
inc
xchg
pop
mov
jno
leave
arpl
ret
add
outsl
add
pop
push
in
test
out
pop
mov
movsb
js
sbb
aas
xchg
adcb
dec
pop
xorb
icebp
cmp
mov
clc
pop
in
loop
mov
lods
loopne
sbb
stos
mov
or
add
test
cmp
ret
xchg
addr16
int3
jg
mov
or
push
mov
imul
pop
int
je
addb
stos
sti
adc
or
or
jp
cs
pop
add
sahf
mov
fimuls
addr16
xor
or
cmpsl
xor
filds
test
mov
pop
lret
fisttps
cwtl
xchg
outsb
mov
pop
cmc
rolb
test
push
inc
pop
out
push
dec
cli
fsubs
js
stc
adcl
pop
cmp
pop
mov
imul
popa
js
lret
sti
xlat
sbb
test
arpl
cld
loope
call
sub
lock
fstpl
cli
test
mov
pop
ret
in
inc
dec
repnz
arpl
data16
fs
mov
rclb
add
lds
xchg
into
pop
test
fnstsw
in
out
mov
xchg
jmp
push
in
mov
or
sub
imul
cmp
out
mov
filds
pop
jle
cmp
call
adc
cmp
and
xchg
je
inc
pop
movsl
mov
push
and
xchg
sub
ret
xor
add
adcb
fnstcw
adc
and
xor
push
popf
hlt
mov
aaa
pop
adc
enter
jp
lods
pop
and
bound
mov
fs
out
xor
sbb
lahf
pop
test
out
jl
add
jb
xor
mov
jmp
or
psubw
roll
cmpsl
pop
adc
push
out
outsb
pop
fisttpl
push
test
stos
clc
or
sub
out
lods
call
jbe
mov
push
xchg
out
dec
movsb
push
in
aad
sbb
pop
mov
cmp
push
repz
ljmp
jno
lods
arpl
xchg
sbb
sub
mov
loopne
dec
or
insl
inc
jmp
cmp
jns
in
mov
jg
int3
rorl
jae
mov
fstps
add
sub
andb
cld
lahf
cs
fwait
jns
mov
mov
inc
gs
xlat
pop
push
sub
inc
imul
or
shr
add
mov
fstpl
dec
nop
mov
loope
jecxz
dec
jecxz
call
push
adc
push
push
subl
sub
jnp
sub
pop
pop
cmp
lods
icebp
add
and
lahf
pop
or
test
mov
push
push
lea
in
rcl
pop
dec
out
insb
sub
xchg
aas
dec
mov
cmp
push
ss
decb
xor
xor
fwait
addl
std
cmc
push
fstpl
mov
imulb
mov
push
add
cli
outsl
lods
adcb
stos
movsl
sub
gs
pusha
das
arpl
and
fdivr
jb
add
sbb
mov
imul
ja
adc
ss
pop
adc
int3
fisttps
adc
add
mov
add
dec
mov
jge
dec
pop
mov
sub
xor
dec
in
ja
test
fdiv
movsl
mov
jp
mov
jmp
sbb
mov
push
jmp
jno
jmp
stos
fisttpll
ds
pop
decl
push
dec
loop
sti
jae
rcrl
xor
jbe
xor
cwtl
js
add
jo
fildll
popf
sub
and
rorb
pushf
or
addb
sbb
lcall
jbe
and
push
addr16
lods
cwtl
daa
xor
into
int3
es
sub
and
fwait
adc
inc
in
and
in
hlt
mov
nop
ljmp
jno
and
add
outsl
in
lock
cmp
lret
ret
jge
out
sub
jnp
add
mov
mov
lea
pop
inc
mov
xchg
fsubr
repnz
mov
push
sub
cwtl
das
leave
adc
aad
mov
loop
or
movsl
push
pusha
push
mov
or
das
lods
sub
mov
outsl
xor
scas
loop
movsl
stc
jl
popa
adc
pop
mull
mov
insb
sub
push
cmp
inc
pop
dec
loope
mov
jo
push
addr16
outsb
or
mov
adc
jecxz
mov
adc
jl
sub
inc
sbb
lret
lds
test
shl
fnsave
cmp
sbbb
dec
mov
dec
loop
mov
lock
and
out
pop
test
sti
fwait
fwait
ljmp
add
lcall
and
sub
jno
inc
xchg
and
orl
stos
adc
xor
lret
inc
inc
push
test
pop
lcall
outsb
ss
mov
mov
in
jge
mov
or
jnp
cmp
mov
popa
inc
push
lret
fildl
add
jge
push
daa
push
in
add
inc
sbb
imul
lret
cmp
out
and
mov
lods
push
mov
or
mulb
fistl
lea
push
cwtl
scas
mov
popf
call
sbb
jl
fidivrl
xchg
into
imul
popw
xor
cmpb
mov
rclb
pop
pmovmskb
xchg
jns
jae
or
call
test
adc
fidivrs
and
push
cld
xlat
es
xchg
dec
or
fnsave
mov
mov
mov
mov
cmpsb
sub
mov
out
loop
es
xor
xchg
push
inc
ret
aas
rcrl
inc
rolb
bound
cmp
push
fdivrl
mov
and
push
gs
sub
scas
scas
adcb
lods
in
sub
repz
loopne
fstl
push
data16
pop
cmp
and
sub
inc
incb
and
dec
out
stos
lret
jno
mov
clc
fwait
pop
mov
push
cmpsb
mov
cs
or
jb
cmpsb
in
popa
add
lods
cmp
xchg
ss
in
idivb
pop
roll
jnp
fisttpll
pop
cwtl
xchg
xor
push
in
sbb
aaa
push
sbb
or
jns
test
outsb
mov
xor
aaa
fwait
andl
jecxz
mov
and
out
or
pop
and
jmp
cmpsl
push
fidivrs
int3
xchg
push
rclb
dec
jns
mov
sbb
mulb
popa
into
mov
das
mov
cmpl
rcr
and
dec
pusha
push
ret
mov
cli
clc
movsl
xchg
jp
sahf
jno
or
lods
addb
lret
pop
jb
pusha
test
cwtl
movsl
mov
and
pop
jb
sti
push
dec
lds
cmp
mov
leave
inc
mov
pushf
test
and
push
test
push
hlt
jl
push
stos
scas
testl
add
shlb
pop
push
xorl
fildll
sbb
sub
mov
out
pop
fwait
pop
int3
and
fdivrl
leave
int
fcomip
mov
xor
test
sbb
inc
gs
push
xlat
inc
test
sub
cmp
xor
xchg
adc
xchg
jne
fwait
sub
mov
inc
out
fdiv
push
lock
or
inc
mov
pop
sbb
mov
ja
add
insl
pop
repz
inc
loop
test
add
add
mov
sti
pop
mov
xor
mov
lahf
jmp
mov
enter
lret
pop
pop
cmp
in
mov
push
loop
and
in
xlat
jo
add
not
std
cmp
js
add
fldl
push
jl
xchg
xchg
mov
adc
jle
cmp
pop
sbbl
push
fwait
push
jmp
ret
repnz
jbe
je
cwtl
imul
xor
jecxz
add
cmp
loope
lahf
adc
repnz
pop
xchg
push
mov
cmp
jb
and
cmp
scas
ret
mov
cmpl
pusha
fistpl
cmp
in
insl
icebp
pop
in
pop
jne
ss
inc
lds
std
dec
insl
lret
cs
sbb
mov
fwait
jae,pn
js
and
das
ret
cmp
pop
or
jne
mov
call
push
shll
loopne
test
push
xchg
sti
repnz
xor
jns
loop
decb
test
push
xor
sti
hlt
arpl
daa
push
push
xor
lahf
popf
cli
push
inc
popa
fsubrl
clc
mov
sub
push
pusha
ret
aaa
jnp
nop
mov
sub
rcll
fdivs
sbb
mov
pop
ss
arpl
dec
in
mov
add
jg
mov
jno
call
pop
popf
sub
sbb
push
jno
subl
int
push
int3
mov
mov
sahf
push
push
push
xchg
sub
stos
jno
loope
dec
mov
sti
or
dec
out
scas
xchg
sub
fimull
fistpll
mov
mov
inc
fsubrs
loope
arpl
cmp
xchg
mov
roll
leave
jg
data16
lea
xlat
mov
cs
mov
sbb
dec
cs
iret
fildl
dec
fisubs
out
aas
sbb
loop
jne
lock
jnp
jae
ja
xchg
loope
dec
in
push
push
adc
jno
les
push
inc
aad
jae
cmp
out
jle
outsb
dec
dec
ret
xchg
mov
mov
push
add
incl
xchg
stc
icebp
inc
add
xchg
add
sbb
cmp
mov
lds
out
aaa
rcr
popf
insb
fidivl
jbe
cmp
mov
sub
mov
bound
je
mov
ror
jae
xor
js
xor
inc
xor
int
jo
or
add
jl
lahf
outsl
add
dec
adc
ret
scas
xor
inc
xor
lret
jnp
cmc
xor
jne
lds
mov
or
lret
ffreep
push
or
scas
add
out
movsb
stos
in
xor
inc
aas
pop
or
loopne
fisubs
insl
dec
addr16
jg
clc
dec
insl
mov
fnstenv
xlat
xchg
movsl
xchg
scas
mov
test
aad
adc
mov
je
es
aam
sbb
mov
jg,pt
rclb
mov
ja
cmpsl
pop
fisttps
mov
xchg
mov
lret
xchg
or
fs
and
mov
shrb
movsl
inc
jmp
popf
mov
jl
xor
inc
sub
pop
sti
jne
and
sbb
cld
or
sub
push
pop
ss
imul
mov
or
lock
or
dec
rcrl
dec
loop
aad
insl
iret
xor
stos
push
sub
cmpsb
icebp
push
add
mov
nop
daa
xchg
sub
cmpb
popf
xor
and
test
sub
gs
mov
shrl
lret
sbb
mov
or
mov
stc
rolb
sti
pop
out
push
jno
lea
mull
lret
jecxz
jno
js
cmp
imul
fiaddl
sub
std
fnstcw
mov
jbe
out
push
sub
mov
fnstenv
pmulhw
or
mov
insl
pop
cmpsl
add
sbb
xor
jmp
loop
std
push
inc
fsubrs
lret
call
cmp
lods
daa
push
lds
scas
push
dec
jecxz
out
mov
in
xchg
in
lds
jl
push
cmp
mov
lods
aaa
arpl
lahf
pop
pop
hlt
xor
imul
ret
jb
aam
push
push
and
fimull
xchg
popa
xor
fbld
xchg
pusha
pop
mov
adc
sbbl
aad
outsb
add
dec
bound
insl
adc
test
addr16
pusha
dec
mov
stc
push
out
in
sahf
filds
dec
mov
js
fisttpl
xlat
jecxz
mov
dec
sub
jl
and
ficomps
inc
fisttpl
lret
inc
out
in
mov
push
insl
lret
cltd
mov
sbb
test
test
inc
lds
in
mov
pop
xlat
subl
jge
test
adc
sar
fidivrl
fcmovbe
jle
mov
pushf
and
adc
adc
dec
add
push
pop
fdivs
das
xchg
sbb
add
push
rcrl
inc
mov
test
mov
cwtl
jecxz
sbb
addl
push
push
lea
pushf
xor
ss
pop
out
mov
in
pop
jmp
add
adc
lods
ret
dec
or
outsl
xchg
jo
in
jle
in
dec
push
inc
sbb
cltd
stos
dec
mov
or
ficoml
ss
movsl
bound
loope
sub
arpl
stos
xchg
bound
loopne
cmp
jl
lock
sub
push
sahf
sub
sub
lds
jge
and
dec
sbb
cmpsb
pop
out
push
test
sub
addb
mov
movsb
push
leave
shl
inc
add
movsb
pop
ret
add
pop
adc
push
or
int3
repz
and
xchg
cltd
xor
jb
push
int3
jmp
push
popa
leave
mov
scas
aam
sti
and
test
pop
out
fldl
and
pushf
sbb
in
pop
stos
cmpsb
push
push
sub
movb
into
leave
sbb
xchg
stos
inc
out
xor
fsubl
fnstenv
mov
push
jle
and
andb
stc
inc
xchg
add
daa
pop
pop
jae
push
cmp
in
pop
jno
sub
cmp
jmp
outsb
fsts
mov
mov
dec
or
cwtl
inc
rcr
cmpxchg8b
xchg
sub
jmp
lods
inc
xchg
popa
inc
stos
scas
scas
mov
cmpsb
or
pop
cmp
int
push
fs
imul
cmp
mov
mov
out
inc
jmp
jb
cmp
jns
lea
xor
stos
jbe
mov
mov
cmp
or
dec
or
mov
fsubrs
test
outsl
loop
pushf
pop
cmpsb
leave
xor
mov
cmp
xor
and
leave
in
cmp
fsubl
in
dec
cmpsl
jecxz
lods
inc
rcr
insl
shll
sub
test
lods
push
push
mov
std
imul
orl
lock
mov
xor
push
push
lret
clc
pop
int3
mov
js
pop
movsb
out
test
adc
push
mov
fisubrs
aad
cli
sub
mov
mov
int3
clc
ja
insb
mov
xchg
cmpsl
shll
shlb
jne
ljmp
mov
or
pop
hlt
movsl
test
jl
cmp
fstpl
lcall
xchg
clc
iret
inc
mov
inc
les
adc
push
cmp
jmp
std
inc
lret
or
adc
push
in
cmp
andb
mov
aam
dec
xchg
ja
lods
xor
fs
mov
fistl
mov
call
jmp
xor
sub
sahf
or
pop
loop
test
push
mov
push
fidivl
adcb
scas
mov
lods
test
pusha
aaa
enter
mov
mov
out
inc
jmp
ret
sbb
sahf
fbstp
xchg
mov
inc
ss
int3
arpl
inc
lret
inc
clc
xchg
montmul
cmpsb
ret
sbb
fildll
enter
xchg
sbb
lods
rcrl
or
decl
cmp
mov
fsubrs
movsb
jne
popf
test
inc
xor
adc
add
pop
outsb
cli
pusha
push
test
dec
cmp
popl
out
mov
push
arpl
pop
jge
mov
out
leave
fwait
or
mov
push
data16
push
xor
add
xor
js
xchg
fnstcw
in
pop
sub
mov
cmp
inc
pop
sub
mov
dec
cs
jne
mov
ret
lods
push
mov
loopne
pop
add
jo
dec
test
in
aad
mov
inc
pop
popf
stos
sbb
enter
mov
movsb
lea
out
sub
in
jno
push
add
loopne
lds
adc
mov
repz
fwait
std
aam
xor
and
lea
jbe
cmp
push
loop
xlat
outsb
inc
inc
sbb
inc
and
movsl
jb
inc
mov
addr16
pop
xor
push
adc
cmpsl
pop
mov
cmp
cmp
push
out
xchg
pop
sub
sub
dec
mov
adc
jns
cmp
scas
inc
insb
shlb
rol
adc
aas
es
xor
or
push
mov
stc
sub
mov
pop
imul
sbb
scas
leave
dec
pop
in
insl
xlat
pop
mov
mov
jecxz
xchg
inc
pusha
mov
addr16
fucomip
rcl
scas
jno
lahf
out
shrb
cmp
add
imul
es
and
dec
jecxz
push
out
ljmp
xchg
das
cmpsb
aas
dec
mov
jge
and
test
pop
mov
or
mov
fxch
imul
sarb
std
jb
arpl
cmpsb
ljmp
mov
or
pop
les
sbb
inc
fisubl
js
xchg
pop
or
test
dec
out
pop
dec
add
lds
inc
inc
ja
addb
jne
jmp
xchg
sub
and
add
jge
push
cwtl
mov
cmpsl
rclb
cmpsl
inc
fistl
int3
pop
ds
inc
in
or
cmp
int
lock
pop
lds
ret
mov
xor
push
out
lock
das
fidivl
int3
jb
and
or
lret
daa
or
loopne
in
rorl
mov
pop
jno
push
mov
xchg
test
adc
pop
bound
xchg
in
cmp
iret
sbb
mov
lods
jge
or
cmp
jmp
outsb
cld
cmp
call
jns
shrb
pop
imul
cltd
lcall
mov
aam
divb
xor
out
dec
sbb
loopne
js
rcrl
aaa
js
mov
dec
incl
mov
imul
jno
pop
add
jbe
push
imul
fdivrl
cld
fdiv
clc
arpl
sub
cltd
test
push
movsb
jecxz
mov
fwait
sti
das
adc
jmp
int3
jae
out
imul
insb
cltd
sbb
test
call
and
arpl
pop
cmp
or
or
push
push
out
xor
push
imul
xor
xor
cwtl
out
jns
xchg
mov
fs
andl
inc
repz
mov
lahf
mov
add
add
dec
push
mov
xchg
test
cli
sbb
mov
dec
int3
push
mov
push
das
sarl
add
pop
ret
mov
iret
fcmovnbe
and
lret
ljmp
fs
aad
add
xchg
ds
mov
ljmp
imul
shlb
rorl
hlt
add
shl
or
mov
sbb
push
xor
int3
lcall
pop
jmp
orl
repz
or
pause
inc
dec
insb
int3
jg
loop
pop
xchg
repnz
sbb
mov
pop
shll
mov
jecxz
xor
dec
add
in
sub
ja
test
mov
push
in
imul
mov
insb
or
das
jecxz
pop
fsubrl
add
cli
mov
data16
adcb
stc
test
ja
push
pop
repz
out
jmp
fwait
mov
enterw
insb
in
mov
sub
packsswb
loope
sub
inc
scas
jbe
mov
mov
inc
push
cmpsb
jnp
jae
repz
mov
repnz
aaa
push
out
cld
mov
lods
mov
sahf
sar
aam
adcb
daa
cld
mov
outsl
push
imul
out
cmp
out
scas
leave
cmp
mov
mov
mov
outsb
loope
scas
outsb
hlt
fmull
dec
sbbl
out
jge
pop
scas
stos
lods
pop
cs
add
in
stos
mov
push
xchg
inc
dec
cmp
pop
xchg
aaa
pop
inc
leave
aad
sub
nop
pusha
ds
loop
lea
mov
jns
pushf
and
movsl
push
push
aas
mov
inc
loope
cld
xchg
sar
xor
mov
fdivl
sbb
or
mov
shl
push
jg
sbb
and
sarb
push
push
cld
inc
fucomi
sub
inc
fildl
sub
push
icebp
xorb
imul
nop
in
add
jecxz
test
jbe
jge
sbb
and
fimuls
fdivs
aaa
aam
jno
pop
ficoml
mov
push
clc
sbb
lods
enter
jbe
xchg
ds
jl
push
loop
icebp
dec
mov
scas
not
test
addb
loop
bound
mov
out
pop
ja
add
mov
sbb
bound
and
sbb
andl
dec
sub
mov
inc
jecxz
mov
adc
fwait
out
setno
pop
push
xor
jbe
sub
or
mov
jg
sbb
sbb
shll
pop
outsb
scas
outsl
jnp
nop
dec
popf
push
sub
cmp
mov
data16
mov
fidivrs
frstor
and
xchg
inc
pop
mov
pop
int3
mov
bound
iret
mov
int
push
ss
in
aas
jb
pop
push
xchg
inc
xor
mov
inc
pop
sub
xchg
jae
adc
pushf
sbb
jne
test
mov
push
scas
and
adc
popf
sti
sbb
or
mov
lcall
mov
out
push
adc
sahf
repnz
es
xchg
inc
sbbb
jb
inc
mov
push
fucomip
mov
mov
cld
and
push
sbb
sti
and
add
lea
cwtl
xchg
sub
add
pop
cmp
mov
push
popf
cwtl
fldcw
mov
test
xor
mov
or
mov
cmp
xlat
lods
pop
and
sub
pop
cmp
jge
pop
stos
subl
enter
xor
and
pop
jecxz
or
bound
imulb
mov
sbb
scas
fcoml
mov
imull
pop
pop
push
push
push
rol
cli
test
mov
push
addr16
xchg
add
mov
sbb
outsl
das
insb
bound
mov
mov
jg
rcrl
pop
jmp
popf
std
push
cltd
stos
push
in
dec
dec
leave
jp
enter
mov
rcl
push
lock
push
fmul
into
gs
xorb
data16
bound
xchg
cmp
fists
or
adc
ss
or
stc
pop
xor
or
mov
mov
sti
sub
cmc
cmp
pushf
bound
mov
aam
xchg
movsb
fsubrs
movsl
jecxz
fcoms
fisubrl
leave
clc
add
sub
mov
sbb
das
les
xchg
cmp
mov
sub
mov
pop
addr16
mov
in
imul
jne
sbb
dec
inc
fcmovb
xor
popa
notl
mov
icebp
sub
lcall
in
pop
das
push
jl
inc
inc
push
movsl
outsl
in
lret
loop
sub
movsl
iret
adc
sub
mov
push
dec
mov
jp
or
or
lea
or
cmp
imul
dec
in
fdivl
or
jg
adc
and
fsubs
push
popa
adc
xrelease
sub
xchg
mov
stos
out
adc
mov
push
fsts
dec
cmp
push
fldenv
pushf
mov
in
sbb
adc
gs
mov
testl
loope
adc
cmp
out
mov
ja
aas
cs
sub
ja
lock
leave
out
pushf
stos
in
cmc
ret
or
jge
imul
fldl
arpl
addr16
jmp
sahf
xchg
jo
and
push
jmp
pop
in
jmp
cmp
clc
sub
shrb
jge
gs
dec
sub
out
xchg
sub
mov
cwtl
lods
pushf
scas
call
lret
pushf
ljmp
mov
fwait
rcrl
repnz
gs
pusha
inc
pop
add
xor
xor
inc
icebp
inc
pop
lcall
sbb
cmpsl
jmp
cwtl
out
jns
insb
sarb
add
shrb
adc
inc
scas
idiv
and
sarl
dec
filds
je
insb
les
cmpsl
aaa
pop
outsb
add
and
in
fdiv
xor
mov
jbe
xor
cmp
das
mov
cmp
adc
out
pop
mov
sarl
cmpsl
jle
adc
insl
pop
dec
cmp
add
mov
push
jge
fs
xchg
lods
pop
les
outsl
adc
dec
cwtl
cmpl
pop
and
mov
pop
add
mov
inc
inc
into
fistpl
pop
adc
jecxz
stos
daa
in
xor
push
xchg
add
stos
leave
xor
scas
cld
inc
in
xchg
inc
in
sbb
movsb
call
push
test
mov
xchg
mov
xchg
inc
stos
push
aad
and
push
push
lret
or
cmp
nop
dec
jns
sub
pop
adc
mov
push
cmpxchg
mov
loopne
push
cmp
pushf
fs
jecxz
sub
lods
fwait
hlt
push
mov
mov
xlat
and
push
test
mov
xchg
jno
sub
sbb
cmp
push
sbb
xorb
mov
xchg
stos
imul
outsl
mov
and
pop
mov
subb
jnp
stos
and
mov
ljmp
addl
lods
pop
clc
shll
es
xchg
cmpsl
les
xchg
mov
arpl
out
sbb
push
loopne
inc
mov
push
fadds
ret
sarl
jmp
pop
cmp
clc
or
push
data16
test
cvtps2pd
adc
mov
mov
sbb
lods
iret
imul
sbb
popf
and
cmp
jnp
shlb
add
bound
insl
xchg
arpl
shl
and
pop
scas
xor
mov
pop
jae
xor
jge
mov
scas
les
ss
fnstsw
popl
sbb
adc
lahf
lds
sub
mov
aam
lret
mov
rorl
shlb
jb
jle
lahf
sub
lcall
ljmp
push
lods
sub
sub
add
pop
xor
inc
fiaddl
fbstp
push
popa
popa
xorl
dec
sub
je
sub
push
push
andl
xlat
adc
sub
js
test
testb
pop
pop
popf
cmc
or
cmp
mov
rol
fstpt
int3
test
aas
idivl
rcrl
int3
test
incb
repz
scas
outsb
jecxz
rolb
ja
dec
jg
insl
test
sbb
testl
mov
int3
fidivrs
or
cmp
gs
jecxz
lret
mov
pop
orl
cmp
cmp
push
lea
xchg
adc
sbb
ljmp
dec
xlat
pop
movsb
lock
sub
dec
dec
sbb
pop
add
inc
into
aam
cld
int3
mov
sub
or
ja
jnp
cmp
shr
adc
int
add
inc
mov
or
jno
cmp
mov
dec
pop
and
jo
repz
je
int
hlt
push
cmp
aas
outsl
ret
lahf
mov
pop
sub
push
inc
fwait
sbb
movsl
pop
push
and
pusha
test
imul
repz
adc
mov
push
mov
xchg
stos
fs
push
xchg
inc
mov
loop
mov
or
mov
push
int3
loopne
or
add
add
int
cs
pusha
add
mov
xchg
xchg
in
fisubs
mov
mov
inc
mov
data16
pop
hlt
ljmp
mulb
add
add
xchg
dec
ret
xor
aad
fprem
sub
ljmp
inc
testb
xlat
vsubsd
imul
pop
mov
xchg
fnsave
push
test
loop
adc
xchg
xor
insl
sbb
arpl
stos
orb
inc
sbb
mov
push
cmp
and
jno
loope
out
cmp
xor
sbb
push
insl
add
xchg
cmc
pop
enter
lods
inc
and
aas
in
scas
add
rclb
icebp
loopne
cmpsl
mov
dec
mov
rorl
or
arpl
jmp
imul
test
in
pop
scas
mov
sahf
lods
test
dec
pop
imul
add
stc
adc
push
shlb
clc
cmp
call
pop
adc
cltd
repz
pop
stos
mov
ds
mov
fidivl
xor
push
insl
repz
ljmp
push
sbb
cmpsl
push
dec
aaa
pusha
stos
ds
fbld
add
ds
and
push
or
xchg
pop
in
fstl
pushw
loope
and
jo
or
sarl
lret
xlat
test
mov
mov
cmp
fs
ret
pop
stos
mov
mov
add
cs
ja
push
lods
adc
mov
repz
jno
and
ja
std
xchg
and
out
pop
repz
cli
push
mov
push
mov
or
xor
add
int
into
aas
mov
lods
mov
pop
fwait
xor
pop
insb
stos
sbb
call
add
mov
push
xor
test
xchg
int
shr
int3
mov
mov
xor
jmp
andl
cmp
je
push
ss
sub
push
aam
out
xor
push
ret
shl
xchg
xchg
out
push
fists
or
repnz
and
lret
fdivs
rcrb
xor
pop
lock
pop
fcomip
bnd
jp
or
fwait
fwait
or
or
into
xor
mov
jbe
xchg
bound
lahf
xchg
fstpl
jae
sbb
xchg
mov
add
or
loope
mov
dec
mov
pop
jb
mov
shrb
stc
test
sahf
mov
sub
lods
inc
cli
iret
xor
fcmovb
inc
popf
addr16
jmp
sub
inc
sub
pusha
ret
fsubl
ret
imull
push
aaa
inc
xor
movsl
stc
call
sub
mov
andl
ret
xor
fwait
jle
aaa
outsb
mov
mov
je
inc
push
js
ljmp
mov
and
cmp
andl
daa
lcall
or
outsl
insb
push
mov
pusha
ss
in
imul
outsb
sbb
dec
insb
ss
mov
cmc
jl
movsl
xchg
mov
sub
push
or
mov
xlat
outsb
push
leave
notb
fdiv
psadbw
cs
hlt
shlb
movsb
sub
and
adcb
std
xchg
mov
xchg
test
les
es
aaa
and
sbb
push
or
ljmp
or
xchg
or
in
and
mov
in
rorl
divl
mov
jae
mov
or
mov
in
incb
js
and
andb
iret
loop
int
cli
test
adc
push
add
or
adc
inc
sub
mov
xchg
sbb
add
pop
cmc
movsl
add
mov
push
jge
xor
sbb
cmp
jp
ljmp
pop
fistpl
gs
inc
xchg
call
loope
imul
push
jecxz
jae
mov
sub
inc
xlat
sub
jne
outsl
cli
mov
pop
jl
out
dec
repnz
or
or
adc
xor
dec
movsb
in
push
enter
sub
shrb
mov
inc
adc
insl
in
push
inc
arpl
rclb
call
loope
outsl
jnp
xlat
sub
push
into
in
adc
dec
cmpsb
stc
xlat
outsb
xor
add
xor
mov
inc
sti
mov
jle
test
lret
cmc
mov
jnp
push
xchg
test
pushf
and
sti
push
lcall
push
repz
cmp
adc
fbstp
push
mov
das
push
imul
and
scas
mov
mov
shll
insb
test
rcrl
xor
jp
pop
push
cmp
push
int
test
fs
in
xchg
mov
jmp
xor
repnz
andb
inc
test
filds
fisubrl
cld
sti
lock
stos
jl
xor
inc
mov
outsb
and
push
fsubrs
popf
stc
lea
fisubrs
inc
push
popf
insl
rolb
xor
sub
lea
mov
jb
mov
scas
xchg
aad
iret
xor
mov
scas
cmp
insl
xchg
mov
sub
and
mov
lods
mov
cli
add
xchg
add
vunpckhps
jbe
insl
shrb
repnz
jnp
in
inc
movsb
shrb
or
shl
gs
test
and
mov
in
sbb
adc
aaa
in
cmp
addb
xor
test
jne
fdivrl
mov
inc
mov
out
idivl
rcrl
int
inc
bound
cmp
pop
and
pop
out
mov
lock
pop
in
inc
xlat
xchg
in
push
push
ror
das
mov
mov
xchg
ja
pop
scas
stc
test
inc
push
push
inc
mov
add
sub
cmp
cmpl
push
inc
test
sarl
loopne
sbb
jnp
jns
das
adc
add
and
jbe
in
test
push
sbbb
pop
in
adc
cmp
adc
rcrl
inc
loope
leave
mov
mov
aad
push
inc
sbb
cmp
sbb
jns
pop
push
ds
bound
sbb
and
movsb
daa
aas
scas
in
loope
lods
xchg
lcall
aaa
mov
fdivrl
cli
sbb
orl
sub
jns
fidivl
or
xchg
or
fdivl
pop
push
into
in
ljmp
popf
scas
inc
iret
pop
bound
xor
popa
cmpsl
dec
arpl
mov
mov
incl
imul
jp
call
or
mov
nop
dec
shl
popf
lods
shll
imul
popf
pop
mov
xchg
push
ds
rcrl
pushf
imul
push
ljmp
jae
mov
xor
sete
bound
ss
jae
inc
inc
scas
pop
pop
hlt
pop
ljmp
mov
mov
jge
repnz
sub
out
in
loope
fs
loop
enter
push
sti
stos
inc
inc
xor
jae
or
push
loop
or
decb
test
mov
addr16
cmc
ljmp
add
jecxz
pavgb
jmp
push
dec
pop
cmp
add
cmp
cmc
mov
ficompl
or
lods
mov
imul
inc
xlat
sbb
inc
pop
cmc
je
jbe
jp
jge
sbb
or
push
in
mov
loop
xchg
pop
xor
imul
mov
xchg
inc
testb
daa
addr16
pop
lcall
push
sub
imul
pop
mov
repnz
pop
fisubl
add
adc
out
jno
or
daa
fidivl
xor
cwtl
das
push
cltd
test
inc
filds
xchg
pop
or
xor
std
icebp
mov
adc
mov
les
dec
std
clc
das
mov
nop
push
mov
dec
mov
jmp
and
loope
rorb
loope
ss
sti
push
pop
popa
clc
dec
jne
push
cmpl
insl
add
cmpsl
sub
pop
fidivl
or
push
inc
faddl
aam
sbb
into
cmp
ret
or
iret
rep
mov
mov
mov
hlt
mov
pop
daa
jmp
pop
or
shl
mov
xor
dec
mov
stos
popf
mov
out
xorb
xchg
xlat
adc
cmpsl
ret
loope
pop
and
out
rcl
bound
pop
jnp
repz
fs
push
dec
add
lods
and
ret
fistps
rol
fwait
sbb
or
mov
adc
nop
pop
mov
lds
pop
jb
cmp
inc
add
mov
mov
xor
loopne
stos
addb
xchg
add
sti
mov
xchg
xor
xchg
scas
icebp
push
inc
push
lea
fstpt
dec
imul
lock
insl
push
test
lds
mov
xchg
xor
lahf
lret
and
or
cli
lea
pop
repnz
stos
xchg
xchg
jecxz
mov
xor
fs
and
mov
movb
or
jne
inc
addl
test
mov
mov
adc
and
dec
add
out
loopne
pop
out
cmp
push
push
adc
mov
sbb
inc
and
push
insl
dec
pusha
xchg
lock
and
or
mov
shll
add
and
loope
mov
jl
ds
xchg
popf
mov
into
mov
mov
imul
mov
xchg
jb
sub
andb
int
and
xlat
sub
pop
sti
out
inc
in
mov
addr16
mov
mov
sbb
mov
push
mov
adc
xchg
sub
mov
enter
faddl
lret
xchg
faddl
std
clc
add
adc
and
push
shl
cwtl
pop
and
or
cs
add
repnz
sar
xchg
inc
stos
insl
scas
dec
jns
jbe
pop
and
aam
inc
movsb
mov
pusha
das
imul
jbe
fisubl
adc
rcr
repnz
das
sub
dec
lock
js
push
test
les
aad
jmp
movsb
cld
icebp
movsl
xor
call
repnz
iret
mov
or
jbe
outsb
call
fsubl
add
or
pop
or
imul
mov
andl
insl
push
loope
lock
jne
xchg
xor
mov
jnp
mov
test
or
sub
adc
sub
inc
out
cld
jmp
ret
xchg
sub
mov
or
mov
test
shl
fisttps
dec
fcoml
fidivrs
aad
enter
adc
jl
xor
jae
insb
inc
andb
xlat
fstpt
mov
call
sub
mov
fdivrs
adc
daa
out
dec
dec
xchg
push
push
jge
adc
xor
daa
scas
in
xor
es
pushf
sbbl
mov
dec
ret
lods
or
stos
or
sbb
xor
int
loopne
mov
fcmove
data16
mov
cmp
add
aaa
xchg
repnz
sub
xchg
pop
mov
rcll
stos
or
cmpsb
push
jecxz
hlt
xor
jp
mov
out
jo
cwtl
push
xchg
push
imul
cli
cmp
rcr
enter
mov
fimuls
das
icebp
lock
xchg
adc
push
dec
add
incb
jmp
hlt
test
fisttpll
mov
add
arpl
xchg
pop
fs
mov
sub
xchg
xchg
bound
xchg
repz
adc
insb
xchg
rolb
dec
dec
test
adc
repz
jb
adc
sbb
scas
xchg
fdivr
push
and
icebp
call
in
inc
push
inc
pop
aaa
mov
add
push
sbb
outsb
inc
cmp
notb
mov
dec
mov
lcall
nop
ss
test
out
loop
or
adc
push
rdpmc
adc
in
jb
stos
mov
sub
cltd
pop
inc
push
ja
loopne
sbb
xchg
pop
jmp
adc
ja
cs
inc
sarl
repz
das
lds
sbb
pop
fcomi
fldl
dec
xchg
pusha
jbe
and
push
sbb
push
dec
das
push
je
mov
inc
push
dec
das
cmp
inc
fldl
fcmove
pop
sbb
sub
je
push
xchg
xchg
pushf
and
cmp
xor
inc
inc
pop
sub
adc
leave
test
mov
cmp
mov
push
push
mov
arpl
cld
pop
popa
dec
sub
xchg
mov
enter
ja
dec
ljmp
push
cltd
push
movsl
icebp
jmp
clc
jae
test
sbb
clc
dec
fs
sbb
jl,pn
out
scas
push
roll
ja
inc
fadds
mov
sub
push
mov
add
or
jl
nop
jb
lcall
or
subl
shll
leave
push
cmpsl
push
xor
scas
jg
inc
xchg
out
movsl
sbb
mov
add
stos
andb
inc
sbb
mov
cmp
mov
xorl
ss
repz
push
mov
mov
leave
push
jg
cmpsl
out
nop
dec
pop
push
sti
rorb
cmp
scas
out
jmp
popa
je
inc
shll
xchg
movl
cmp
add
xor
ret
in
xor
sub
mov
fistl
outsl
sbb
loopne
hlt
pushl
in
sbb
daa
ret
ret
int3
mov
inc
scas
xor
sub
test
cmp
lcall
jne
add
shrb
lods
mov
push
dec
jno
cmp
pop
mov
call
mov
into
mov
stos
jns
sbb
xor
push
sti
outsl
xor
sub
mov
jmp
int3
mov
jmp
ds
pop
lahf
dec
add
movsl
mov
xor
dec
out
dec
jp
jl
and
pop
frstor
and
int
lock
jmp
sbb
into
dec
loop
jg
and
dec
sbb
pop
sub
jb
call
popa
dec
outsl
cmp
sahf
pushf
mov
divl
jb
xchg
cmp
test
popa
push
sbb
xchg
lahf
scas
clc
pop
cmp
inc
std
adc
mov
mov
ret
fidivs
mov
add
aad
xchg
ret
loope
mov
packsswb
xchg
lahf
xor
jno
push
lds
adc
cltd
enter
repnz
pop
outsb
ss
scas
mov
test
inc
mov
aas
shll
mov
daa
mov
in
outsb
jl
xchg
mov
sahf
and
sbb
pop
in
push
xchg
and
adc
push
jne
sbb
ficoml
jge
mov
push
cs
cld
mov
repnz
shll
sbb
fsts
xchg
push
xor
gs
mov
bound
lods
shr
addr16
cli
pop
cmc
test
ja
gs
lret
add
jne
mov
push
xchg
popf
test
push
fidivrl
mov
adc
mov
outsl
outsb
cmpsb
adc
fstps
xor
fmul
xchg
or
add
cltd
test
mov
dec
push
dec
mov
dec
sbb
negb
xlat
add
insb
mov
sbb
loope
ret
rclb
lahf
ss
add
out
rorl
cmp
cmpsl
mov
mov
xchg
push
insl
pop
ljmp
in
xor
xor
push
xor
inc
aaa
adc
stc
lea
aaa
negb
add
fidivs
pop
iret
ret
popf
mov
dec
sub
es
icebp
lea
mov
fbld
scas
repnz
mov
adc
jle
jne
mov
add
enter
mov
xchg
les
add
inc
cs
jne
fnsave
pop
dec
test
jp
pop
mov
fists
mov
movsb
adc
inc
lds
movsl
adc
clc
insb
test
cmpsl
mov
sub
pop
sub
pop
or
push
sahf
fdivp
add
lcall
push
mov
int
jmp
sbb
mov
jae
pop
std
pop
rorb
hlt
cld
and
test
shlb
out
cmp
mov
pop
lock
xor
lcall
lea
xchg
add
cmc
psadbw
mov
mov
ljmp
sbb
ljmp
jno
push
ljmp
jae
stos
jne
sbb
push
loope
aam
out
sti
xchg
push
mov
loopne
in
fcomip
mov
addr16
sub
out
lds
aaa
push
jae
out
xchg
lods
adc
add
dec
mov
movsl
push
pusha
pop
or
stos
pop
sub
push
mov
addr16
push
xchg
dec
sbb
mov
cwtl
stos
mov
xor
cmpl
pop
ret
in
pusha
fistpl
mov
outsb
sbb
or
cmp
js
add
aad
mov
adc
push
xchg
jl
pushf
pop
xchg
sub
stos
ret
sub
stos
ss
lea
adc
inc
out
sub
inc
outsl
je
adc
push
push
mov
int
icebp
cmp
push
mov
push
dec
xchg
mov
push
mov
sbb
or
mov
mov
ljmp
mov
rolb
maskmovq
imull
data16
ret
mov
test
stos
mov
push
jle
cmp
shlb
sbb
nop
dec
mov
dec
mov
loope
daa
jo
fildll
dec
fwait
in
adc
std
mov
sbb
and
loop
or
xchg
fistps
jle
add
je
iret
mov
mov
push
add
push
mov
jns
mov
shl
call
int
add
or
and
movsb
xchg
sub
mov
mov
xlat
shl
mov
icebp
mov
scas
sbb
pushf
dec
adc
mov
popf
enter
adc
xchg
cmp
jno
scas
pop
inc
rcrb
sub
in
add
xor
push
outsl
push
insl
ret
nop
xor
dec
cmpb
pop
dec
jae
out
cmp
mov
frstor
xor
andl
or
push
nop
nop
out
dec
fwait
scas
inc
xchg
stos
rep
sbb
ficomps
andb
mov
pop
hlt
pushf
dec
std
and
negl
pop
xor
fcmovnu
mov
addb
je
shl
jnp
mov
jge
pop
test
in
jg
out
adc
ret
bswap
test
sbb
out
aas
inc
pop
in
mov
jbe
data16
in
std
iret
xchg
pushf
mov
stos
aas
rcll
dec
aad
aam
mov
loop
cwtl
in
cmp
test
adc
lea
mov
mov
pop
push
clc
scas
or
pop
nop
sbb
or
sbb
mov
out
aaa
into
dec
pop
add
imul
xor
lea
fistl
inc
in
mov
insb
mov
push
mov
shr
push
sub
aad
rorb
outsl
jnp
pushf
push
call
std
cmp
loop
push
rcrb
stos
pushf
mov
mov
mov
fists
sub
loopne
xchg
aaa
lret
data16
in
pop
ret
jmp
pop
mov
aam
and
in
pop
or
fiaddl
and
inc
fcoms
ror
jg
mov
rorb
jns
push
lcall
in
fnsave
cmpsl
mov
test
and
scas
aam
or
mov
int3
mov
jne
movsl
nop
shl
repz
popa
push
stc
daa
mov
mov
push
pop
sbb
xchg
push
inc
push
cmc
insl
sub
leave
push
add
jl
test
add
cmpsb
xor
inc
unpcklps
mov
gs
inc
push
mov
fst
cmc
dec
orb
mov
mov
lahf
dec
pop
or
ja
stos
sbb
loop
sbb
in
ret
xor
aaa
enter
pop
jmp
xchg
and
and
fstp
lock
jbe
sbb
push
dec
push
insb
in
gs
pusha
loop
pop
xchg
hlt
negb
addl
xchg
pop
orb
add
add
ficoms
rorb
or
outsb
cmpb
in
insb
mov
mov
sbb
add
testb
or
push
pop
lret
pop
repz
testl
cmp
push
and
cmp
fildll
fwait
pushf
add
cmp
jne
dec
lret
push
lds
jne
mov
rcll
xchg
push
add
sub
pop
mov
lret
pop
repz
xor
es
xchg
dec
mov
xor
pop
lret
bound
imulb
cmp
sbb
add
rcrb
mov
cmp
cmp
aad
add
ja
or
dec
jl
imul
aas
into
push
dec
dec
adc
rolb
stos
hlt
add
sbb
adc
stc
adc
push
out
jg
push
mov
enter
leave
loopne
pop
mov
mov
xchg
mov
adc
push
jmp
das
inc
xchg
sub
ficomps
sbb
clc
dec
mov
mov
sbb
dec
popf
test
out
inc
mov
in
jne
cmp
addr16
fmull
cmp
repnz
lods
sub
fsubrs
mov
mov
mov
lret
enter
loop
and
mov
pop
outsb
lea
clc
cmpps
sti
push
mov
insl
iret
mov
popa
and
lret
mov
dec
popa
shrl
loope
add
pop
xor
jge
pop
sti
dec
push
out
fstps
stc
dec
insl
xchg
cwtl
stos
roll
outsl
xchg
sbb
dec
shl
test
pusha
pop
ficompl
fwait
pop
scas
inc
push
test
xor
xlat
sbb
jne
loop
cmp
mov
hlt
or
mov
or
inc
push
icebp
jb
lods
ljmp
popf
push
cmpsb
lods
xlat
cmp
inc
add
std
sarb
ret
cmpsb
dec
pop
dec
shl
jmp
rcll
or
leave
leave
int
adc
aam
inc
popl
cmpsl
adc
lret
pop
dec
jbe
mov
dec
outsb
mov
mulb
sub
pop
mov
mov
push
adc
pusha
xor
lods
pop
mov
es
shll
push
xlat
mov
xchg
dec
mov
jmp
pop
pushf
js
fidivl
jg
jne
push
loope
inc
xchg
outsb
dec
pop
push
lock
and
out
in
xchg
pushf
shl
ret
mov
outsb
xchg
xchg
jno
xor
fsubrl
ds
lods
ret
sbb
mov
cmp
push
outsl
hlt
rcll
pop
shrb
fsubrs
enter
movd
pop
outsl
xor
push
negb
sahf
clc
mov
xchg
cli
or
je
adc
mov
fld
xchg
jge
sub
xor
sbb
shrb
outsb
adc
sbb
pop
mov
sbb
push
daa
cmp
decb
repnz
orb
pop
sbb
push
push
lods
dec
loop
or
mov
push
xor
push
ljmp
jno
xchg
nop
daa
mov
decb
dec
fcompl
scas
inc
ds
pop
call
or
jmp
or
or
or
in
lcall
enter
push
adc
nop
lahf
aam
add
push
jnp
mov
mov
pop
push
sub
lcall
lock
addr16
inc
lret
xchg
fsin
test
js
lods
pushf
mov
dec
cmpsb
jle
sbb
ds
cmpl
mov
jae
leave
aad
sub
push
popa
xor
fmull
mov
mov
xor
mov
cmp
xor
les
cmp
mov
push
sub
mov
add
lods
push
dec
bound
outsb
es
addr16
adc
sbb
sbb
fs
in
test
mov
stc
or
mov
lret
in
imul
fnstcw
subb
sub
lea
xor
lcall
aad
mov
sub
ds
bound
inc
fcmovbe
push
fbstp
and
popa
lods
daa
pop
popf
push
push
add
shlb
pop
repnz
push
arpl
outsl
mov
jo
std
inc
scas
cs
notl
enter
push
mov
mov
bound
pop
test
and
fdivp
or
mov
xchg
fwait
jae
dec
dec
push
xchg
and
addr16
rolb
dec
mov
test
or
js
adc
jl
das
rcrl
mov
push
jbe
adc
popl
cwtl
sub
fwait
cmovno
leave
in
lods
pop
shlb
xor
repnz
add
push
sub
cmp
fbstp
test
sub
sbb
rcrb
outsl
pop
fsubrp
test
into
lods
ret
test
add
sub
pop
adc
sub
push
lods
lret
addb
stos
mov
stos
jp
add
mov
shlb
sbb
dec
adc
mov
pusha
jmp
and
push
cltd
jo
lret
aaa
lds
and
mov
pop
cltd
pop
xor
jp
mov
jp
mov
cmp
iret
and
sbb
dec
or
jno
sub
test
dec
push
das
repnz
mov
push
cmpsb
pop
lahf
popa
mov
push
lds
out
inc
shlb
jno
outsl
stos
inc
mov
jb
xor
mov
arpl
inc
lcall
call
or
mov
or
jns
mov
adcl
ds
cmp
and
insb
pop
lret
sub
daa
mov
dec
push
inc
stos
xchg
or
negl
cmp
insb
dec
mov
mov
ds
cltd
add
out
movsb
es
mov
adc
das
and
sahf
cmc
aas
pop
cmp
lods
outsb
fcmovnbe
mov
push
xor
lods
lds
or
arpl
push
jmp
mov
adc
repz
mov
add
inc
fdivp
mov
data16
jge
rclb
lds
xchg
int
cmp
int3
testl
mov
push
jnp
lcall
inc
in
movsb
mov
shr
adc
mov
scas
xorl
add
pop
sub
and
aaa
jmp
test
div
sbbb
jge
lock
sbb
rcrl
or
mov
and
xlat
mov
outsb
rolb
mov
xchg
push
fwait
mov
dec
jne
stos
push
jno
push
stos
inc
mov
pop
mov
mov
jecxz
jb
enter
pop
pop
in
pop
sahf
xchg
sub
push
mov
fdivs
nop
mov
sbb
jo,pn
and
clc
sub
inc
stc
daa
scas
dec
aam
dec
cmc
jp
sti
xchg
fwait
xchg
push
icebp
sbb
test
lret
aas
and
mov
stos
es
lds
loop
mov
xor
adc
jnp
cmp
jle
test
sub
sarl
popa
stc
mov
push
jno
pop
aaa
push
mov
xchg
seta
jge
dec
add
adc
xorb
je
cltd
in
shll
xchg
loopne
cmc
out
mov
dec
ds
xor
cwtl
push
mov
ljmp
sbb
xchg
imul
mov
sbb
aam
in
icebp
adc
aam
xor
int3
cld
ret
clc
or
xchg
ret
sub
mov
sub
pop
jg
jp
fsubs
xchg
out
rorl
nop
loop
int3
lcall
testl
add
inc
mov
and
bound
mov
int3
js
xor
push
ffree
push
leave
flds
mov
pop
xchg
cmp
or
jmp
mov
lock
jmp
shl
sbb
and
push
test
jns
ficompl
into
enter
push
inc
imul
scas
pop
mov
pop
in
mov
stc
movsb
pop
cmp
aad
out
adc
sbb
imul
imul
ss
xor
cmp
xor
pop
inc
jo
adc
lock
cmp
and
dec
leave
and
mov
int3
mov
and
mov
mov
inc
pop
adc
aaa
jl
in
jns
jp
in
mov
bsf
and
mov
and
imul
fildll
jno
jmp
mov
and
pop
jno
sar
jne
push
fiaddl
and
mov
fcmovnbe
fadds
jnp
movsl
push
test
mulb
dec
jne,pn
push
lret
out
lods
ljmp
pushf
scas
pop
nop
mov
xor
arpl
cmp
shrb
mov
lock
cmp
popl
push
xor
lods
mov
fisubl
inc
ds
inc
xor
adc
lret
fsubrs
push
and
fwait
cld
lock
jnp
ficompl
pop
fsubp
inc
fdivrs
in
cmovs
mov
mov
mulb
loope
jp
out
hlt
pop
divb
and
dec
pop
sbb
jnp
dec
pop
cmpsb
sub
rep
adc
pop
cmpsl
sub
arpl
fisttps
push
pop
repnz
imul
add
mov
movsl
std
xor
mov
cltd
out
push
loopne
clc
pop
mov
mov
sub
dec
push
aas
push
lcall
out
pusha
daa
imul
xchg
mov
inc
aad
dec
nop
xor
out
popf
mov
scas
add
in
rclb
push
mov
xchg
xchg
cmp
das
aaa
mov
scas
jg
xor
inc
js
jge
mov
cmpsl
lds
dec
pop
cmp
xor
cli
cmc
insb
inc
sub
leave
pusha
push
pop
or
aas
jmp
inc
add
push
inc
mov
loope
mov
pop
dec
rol
aas
aas
push
imul
sarb
jae
test
fldcw
push
lahf
push
into
loopne
sahf
cmp
je
insl
leave
mov
add
jge
stc
mov
lds
sub
jnp
jmp
cmpl
ljmp
push
jae
clc
das
pop
stos
mov
push
mov
sub
or
cmp
or
shrl
addb
enter
jecxz
dec
int3
mov
shrl
loope
dec
sarl
in
cwtl
jns
enter
bound
lret
jnp
pop
jge
movsb
mov
xchg
pop
leave
pop
xchg
in
jg
cmc
xor
or
hlt
pop
outsb
jp
cmpsl
add
stos
or
xchg
popa
daa
test
xchg
adc
fwait
jno
and
push
dec
adc
pop
call
dec
cmp
ds
arpl
adc
mov
xchg
fisttpl
out
lahf
clc
push
adc
xor
jns
movsl
ret
out
les
pop
vphadduwd
lahf
pop
push
or
fnsave
jle
aaa
sub
or
dec
leave
loope
insb
das
xchg
shll
mov
jns
ss
inc
std
mov
or
jge
bound
mov
dec
fdivrl
add
xchg
mov
sbb
test
xor
daa
pop
and
xchg
mov
fiadds
test
push
lea
int3
xchg
jae
sub
jns
bound
push
icebp
adc
jbe
push
mov
sub
ds
inc
insb
mov
cltd
mov
enter
mov
mov
rcrl
mov
scas
loop
scas
pop
dec
stos
inc
cmp
shlb
inc
bsr
std
lahf
sub
leave
mov
xor
adc
jns
xchg
jmp
mov
adc
fistpl
call
jmp
jmp
push
es
sbb
xchg
ret
push
mov
and
ds
fisubrl
push
test
pop
cmp
lcall
jno
inc
and
js
js
leave
xchg
in
mov
sbb
std
xor
pop
sub
push
jmp
cld
xchg
push
test
arpl
pop
xchg
inc
jmp
icebp
mov
test
xor
stos
int3
repz
push
mov
das
stos
scas
movsb
cmp
push
jbe
repnz
je
scas
std
nop
push
mul
pop
cmpsl
cmp
in
jg
and
pop
mov
shll
xor
dec
mov
push
add
jo
push
call
mov
ds
in
and
or
ljmp
mov
inc
paddb
add
xlat
enter
lcall
mul
mov
jp
imul
add
push
das
xor
insl
jge
in
sarl
out
mul
jmp
jbe
jl
mov
xchg
popf
inc
mov
negb
dec
outsb
push
jmp
xchg
pop
rcrl
and
cli
stos
xchg
fcmovne
test
jp
repz
cltd
mov
stos
inc
xchg
scas
xchg
cld
xchg
les
jae
and
jle
sbb
mov
imul
loope
fdivr
repnz
dec
fdivrs
pop
push
scas
pop
lock
add
outsl
iret
jmp
loope
mov
jp
rcr
lahf
data16
mov
in
pop
sti
sbb
ret
xchg
sbb
lock
in
je
aad
js
sbb
jbe
aas
push
cwtl
pop
cmpsb
xchg
add
jb
stos
das
cmpl
test
or
and
inc
inc
les
jge
jl
sbb
add
or
jle
mov
ficomps
sub
push
pusha
testb
or
xor
fdecstp
sub
dec
add
xlat
inc
test
gs
add
pusha
cmpl
rorl
lods
fsubl
mov
fldenv
insl
movsb
push
sbb
hlt
xlat
mov
out
push
mull
sub
test
push
lods
dec
pop
cmpl
rcr
adc
sbb
mov
xchg
imul
xchg
or
ret
sbb
push
pop
std
dec
jo
xlat
push
sti
repz
jmp
cmpsb
xchg
hlt
jle
stos
and
sbb
jecxz
sahf
adcb
cmp
lock
lds
pusha
and
jno
or
mov
mov
xor
insl
out
ror
mov
and
mov
push
pop
adc
xchg
pushf
repnz
into
cltd
jae
xlat
test
cmp
jmp
dec
adc
xor
test
xorb
cld
or
sub
shrb
daa
cltd
and
movsb
ss
cmp
pop
xor
xchg
cmpsb
and
decb
cmp
dec
push
cmp
out
pop
jp
xor
shrb
rcrb
mov
std
mov
iret
add
test
and
xchg
fisubrs
pop
mov
iret
adc
cmp
jo
ljmp
scas
fucomip
cmp
test
lret
pop
lock
repz
adc
cmp
push
mov
sahf
nop
daa
adc
clc
and
lock
scas
jg
xchg
mov
xchg
mov
bnd
xchg
sub
inc
or
push
out
imul
mov
or
popf
mov
fldenv
arpl
push
jecxz
stos
inc
push
mov
xor
jnp
das
and
add
dec
xchg
mov
and
lds
aas
push
sub
mov
daa
in
mov
jbe
adcl
add
push
jne
mov
es
lods
cmpsl
outsl
push
fdiv
in
aad
lea
popf
mov
mov
and
rcll
test
ja
mov
arpl
in
cmp
pop
je
sarb
lret
outsl
lds
ret
inc
enter
dec
mov
xchg
lods
test
xor
outsb
cwtl
and
inc
aad
sub
out
mov
iret
push
loopne
inc
pop
and
sub
lret
lea
adc
mov
test
dec
mov
cmc
cmp
les
fdivrs
push
sub
dec
movsl
filds
fdivrl
jbe
lret
scas
jnp
add
mov
sbb
adcl
mov
cli
xchg
phsubd
shrl
pop
inc
jp
pop
in
in
xchg
or
addr16
mov
addb
les
movsl
push
iret
jno
into
cwtl
das
rclb
or
xor
mov
sub
out
dec
lret
sub
js
push
mov
mov
and
adc
scas
inc
mov
mov
push
sbb
in
dec
in
xor
imul
fisubrl
xchg
pusha
inc
xchg
aas
xor
dec
in
jnp
ja
fisubl
xor
cmpsb
add
movsb
xor
push
stos
dec
fstpt
cmc
fidivs
fstpt
pop
jecxz
out
mov
add
sub
ret
and
mov
movsl
pop
insl
xlat
mov
out
jl
leave
mov
movsb
mov
lock
movsl
mov
fwait
rclb
leave
mov
in
fiadds
or
repz
ds
fstpl
add
or
jmp
jnp
ja
repz
outsb
push
jns
dec
jp
add
mov
aas
and
xchg
xor
aam
sbb
or
jo
xchg
sub
test
bound
shll
ret
push
and
and
dec
sbb
into
cmpsb
mov
pusha
mov
push
in
push
mov
mov
adc
sahf
push
stc
in
insb
mov
mov
pop
addr16
movsl
pushf
mov
adc
arpl
jns
xlat
fmuls
std
rcll
aas
fsubl
cs
leave
ss
jecxz
xchg
cmp
jecxz
pop
dec
je
dec
arpl
cmpsb
dec
cli
xchg
cmp
nop
in
and
lret
mov
sti
jb
fldt
mov
ret
les
test
and
inc
or
movsl
aad
mov
enter
sahf
stc
into
arpl
aad
push
xor
push
mov
js
cli
js
mov
pop
and
aas
push
pop
inc
es
push
stos
jb
popf
mov
je
aaa
push
or
add
ret
sub
mov
jle
sub
stos
int
jmp
mov
xchg
mov
cltd
fyl2xp1
insl
fistpll
push
xlat
dec
out
subb
test
mov
push
subl
sbb
lods
mov
out
adc
add
outsb
cmp
mov
dec
adc
mov
clc
add
outsb
mov
fwait
or
mov
movsb
adc
adc
das
adc
xchg
shl
mov
add
adc
add
pop
outsb
gs
cs
insb
scas
cmp
div
mov
fldl
outsl
outsl
mov
cmp
int3
jae
lret
jmp
int3
out
pop
outsl
adc
xchg
push
add
sti
fwait
imul
cmpsb
in
dec
xor
in
outsb
mov
xchg
mov
jle
bound
mov
sub
shrl
cmp
or
scas
rorb
fucomip
std
popf
shr
into
fiadds
pop
nopl
lcall
add
scas
sbb
pop
int
popa
scas
jp
das
mov
adc
jns
stos
in
or
mov
xor
cmp
pop
iret
mov
inc
push
test
adc
fcomps
inc
and
jecxz
mov
cmp
xchg
mov
orb
in
xchg
mov
inc
bound
cmp
notl
cwtl
push
mov
sti
fsts
push
call
mov
or
ret
bound
mov
xchg
popa
out
push
popf
stc
xchg
sbb
js
and
les
fs
cld
repnz
cwtl
xor
rcl
enter
mov
and
jbe
push
cmp
cmp
dec
pop
mov
xchg
mov
xor
xchg
add
sbb
aad
pop
dec
mov
xor
jmp
mov
dec
popa
pushf
pop
mov
lea
jp
sbb
mov
fidivl
idivb
lcall
xor
push
mov
in
jge
sub
adc
cmp
test
mov
adc
cmc
pop
daa
cmp
lahf
add
out
lret
push
push
aaa
xchg
push
lret
mov
jno
cs
pop
test
lcall
ja
mov
lret
sahf
pusha
sti
aaa
lahf
and
daa
outsl
mov
add
andb
mov
add
adcl
push
jl
fistl
or
and
dec
mov
xor
jne
outsb
test
cli
les
loop
adcb
add
push
inc
std
sahf
sub
lcall
adc
and
mov
daa
jg
stos
jbe
mov
icebp
roll
and
mov
add
jne
cmpl
cmpl
cmp
test
sti
loopne
adc
xchg
inc
fnsave
or
aad
jmp
pop
out
in
std
lods
push
mov
insl
pop
pushf
arpl
mov
fistpll
movb
cmpsb
cmc
xchg
aad
inc
sub
jo
repz
adc
pop
mov
js
cmp
mov
es
fisttps
xchg
sub
lods
test
ficompl
ss
push
int3
adcb
jne
sti
or
cli
sbb
mov
dec
mov
adc
ljmp
mov
sbb
mov
rcl
bnd
and
std
lahf
pusha
add
inc
clc
dec
pop
jg
xchg
lcall
gs
mov
daa
dec
icebp
or
dec
loop
cmp
data16
pop
lcall
fnstenv
lods
cmp
dec
mov
dec
aad
sbb
jns
bound
mov
repz
fdivs
subb
cmovg
cld
inc
mov
dec
jnp
pop
imulb
inc
inc
lods
iret
dec
dec
les
fisubrs
shrb
xorl
push
enter
inc
inc
lcall
and
stos
xchg
sub
ljmp
push
xor
pop
mov
pop
in
lahf
cmp
pop
jnp
loopne
or
jg
adc
sub
data16
jmp
ss
dec
or
mov
aaa
imul
jno
add
je
lock
fs
insb
fsubrs
or
fbstp
mov
lret
xor
adc
or
out
and
push
pop
bound
outsb
divl
dec
sub
orl
ljmp
out
out
jmp
clc
push
mov
cmp
ljmp
add
pusha
add
xor
xchg
sub
aaa
cmp
sub
ficomps
test
into
fucomip
jl
das
pop
cli
push
mov
dec
das
fucomi
push
push
dec
ss
stc
jmp
ret
test
inc
inc
push
cmpsb
inc
negl
or
lds
fisttpl
push
dec
mov
pop
inc
cmp
xchg
mov
ficomps
mov
jno
scas
push
fsubrs
bt
rcrl
mov
ljmp
dec
sbb
lret
add
inc
ss
pop
mov
add
in
pop
repnz
outsb
icebp
mov
mov
cmpsb
mov
sbb
test
inc
repnz
jecxz
lret
gs
lret
lods
orb
subb
add
pusha
adc
xchg
xor
in
jns
ret
jb
push
cld
inc
sub
and
lcall
loopne
pop
mov
xchg
push
lods
out
add
xchg
and
subb
inc
popf
pop
inc
test
mov
fwait
clc
sub
lret
mov
in
ljmp
into
xchg
movsb
repnz
outsb
inc
sbb
popa
sbb
mov
lret
bnd
out
jmp
and
push
out
pop
enter
cltd
mov
in
test
jns
inc
cli
inc
gs
sub
rclb
call
test
fsubrs
jne
fwait
jbe
mov
jmp
and
and
loope,pt
ret
ja,pt
push
test
jge
jmp
out
xor
jb
fwait
xchg
pop
jle
rcrl
dec
xchg
adc
mulb
jbe
mov
pop
in
std
lods
xchg
push
in
push
jecxz
ja
mov
daa
mov
add
sub
loopne
lock
lods
data16
mov
es
shrb
jge
or
sbb
lret
out
sti
jne
ret
inc
cmpb
sub
bound
xchg
leave
lds
leave
in
js
out
sti
nop
push
call
aaa
jnp
or
mov
ljmp
sbb
iret
cmp
jns
loopne
in
mov
stos
insl
xchg
add
mov
dec
icebp
movsl
out
xlat
mov
lods
mov
loope
pop
mov
inc
dec
aad
sub
mov
adc
adc
jbe
roll
lds
xchg
outsl
adc
lods
mov
push
xchg
int3
xor
pop
sbb
add
ja
hlt
pop
jb
out
addr16
loopne
pop
xchg
test
jecxz
shrb
orl
test
pop
inc
inc
out
movsl
jg
mov
in
or
pop
sub
repz
in
adc
insb
add
mov
popf
and
xchg
inc
icebp
test
or
jns
lods
xlat
and
add
sub
repnz
int3
jo
aam
and
jmp
push
and
sbb
orl
icebp
movsb
mov
pop
in
rcrb
fcomp
xor
scas
adc
in
stos
sub
daa
ja
setne
add
or
push
je
mov
dec
inc
int
xor
or
lods
jo
das
add
and
xchg
nop
inc
les
push
mov
inc
out
repz
test
mov
das
cmp
aam
cmp
mov
add
movsl
mov
mov
jp
mov
or
sub
lds
mov
cmpsl
loopne
cmp
sub
or
adc
test
cmp
lods
push
popf
ficoms
mov
push
test
femms
stos
dec
iret
orb
or
add
pop
or
or
andb
fs
sub
push
movsb
flds
test
leave
fldenv
pusha
push
arpl
sbb
cmp
push
jg
ja
fimuls
and
inc
gs
test
pop
inc
mul
mov
fmull
push
dec
and
enterw
sub
cmp
repz
iret
sbbl
sub
pop
insl
xchg
sub
cmp
mov
in
pop
and
xor
dec
outsl
int3
dec
in
mov
pop
jmp
mov
cmp
rcll
leave
loopne
mov
pop
pop
mov
lea
adcb
mov
sbb
sbb
sbb
sbb
mov
out
mov
loope
xor
pop
lods
inc
mov
push
cmp
andb
lret
dec
sub
enter
pop
mov
mov
fbstp
gs
jae
cmp
fisttps
mov
test
outsb
cmpsl
les
faddl
sbb
or
mov
cltd
mov
jb
incl
in
enter
sbb
lahf
outsb
pop
sub
or
cmp
lret
testl
cmpsl
mov
sbb
ss
imul
ljmp
int3
test
nop
lret
jnp
shrl
mov
mov
pop
mov
pop
repz
gs
pop
and
mov
dec
pop
xchg
mov
xchg
or
js
pop
loope
push
jne
xchg
xor
xchg
cmp
jmp
sbbb
mov
enter
aad
sub
pop
push
pop
hlt
aas
push
jge
and
cmpsb
lock
stos
je
cs
adc
xchg
mov
int
and
out
mov
popl
pop
xlat
sub
mulb
pop
inc
repz
or
jmp
jmp
into
inc
stos
outsb
insb
pop
ds
and
dec
fcomip
loope
xchg
not
fisubs
fs
cmpsl
xchg
dec
jmp
lds
or
adc
jne
jle
inc
loop
int
mov
mov
ret
test
repnz
imulb
cs
pop
pusha
mov
pop
icebp
shll
adc
pop
rorl
adc
jb
xchg
scas
popf
pop
iret
shl
xchg
es
xor
sahf
inc
push
mov
cmp
sti
cmp
dec
xchg
int3
scas
inc
outsl
pop
icebp
loop
sub
add
shlb
sbb
das
pop
mov
fs
in
add
pop
mov
mov
push
test
and
inc
and
jecxz
aas
push
cmpsb
lds
or
xchg
adc
rcll
out
insb
push
loope
inc
pop
adc
out
xchg
push
rolb
sub
sub
pop
sub
lods
cmp
out
xor
push
jbe
clc
movsl
cmpsl
and
push
or
fimull
sbb
dec
dec
loopne
icebp
cltd
fnsave
push
or
mov
jae
sbb
push
push
aad
cmpsl
jnp
fstps
pop
rclb
lcall
pop
imul
inc
daa
ljmp
push
in
mov
mov
mov
ss
xchg
inc
inc
dec
roll
pop
dec
cmp
jmp
push
pop
mov
push
ljmp
scas
jle
test
call
outsb
jbe
lods
addr16
mov
rdmsr
insb
push
mov
fstpl
xlat
pop
xor
jns
bound
mov
call
lea
sar
pop
ss
adc
ja
out
xchg
push
cld
inc
mov
mov
mov
sbb
aam
cli
lret
pop
adc
test
data16
and
incl
jns
mov
pop
out
inc
inc
out
bound
lock
and
xor
mov
fistl
leave
xor
jne
xlat
inc
mov
pop
scas
loop
ficompl
shll
dec
jg
subb
test
adcl
and
rorl
fsts
in
daa
insl
enterw
data16
frstor
in
push
lret
sbb
mov
mov
add
xor
push
mov
adcl
lock
das
push
fwait
xor
arpl
push
and
push
int3
dec
sar
sub
lcall
ljmp
mov
sub
fwait
pop
movsb
cmpl
into
and
xor
fsubl
cmp
pop
inc
sub
inc
fsubrs
test
add
add
xor
pop
jae
aaa
testl
push
lret
cli
xchg
icebp
dec
das
ror
leave
add
aas
push
pop
int3
iret
xchg
cli
dec
sbb
mov
cltd
imul
lods
jmp
pusha
jo
lods
push
push
mov
and
pop
nop
mov
aad
shll
dec
lds
xchg
adc
cwtl
test
lret
incl
inc
std
icebp
movsb
push
push
es
ss
loopne
mov
js
cli
roll
xchg
pop
add
mov
lock
cmp
faddl
stos
mov
hlt
pop
inc
mov
lret
sbb
push
fsubs
lods
or
movsb
or
outsb
lods
jl
rcrl
or
dec
insb
dec
xchg
pop
cmp
pop
loope
lods
stos
adc
cmp
jle
push
shrl
sarl
ficompl
pop
scas
fs
xchg
iret
movsb
cmp
loop
mov
callw
sti
out
iret
or
out
jnp
lods
inc
pop
pushf
jb
hlt
mov
lret
bound
xor
mov
out
mov
add
nop
mov
adcl
negl
lret
dec
fsubrl
out
sbb
push
inc
stos
inc
icebp
mov
xor
insl
cli
mov
jne
push
int
aad
ja
xchg
push
fbstp
ficoml
sbbb
or
jmp
aam
movsl
cmp
in
xor
lcall
add
insb
paddusb
xchg
jo
pop
add
pop
push
int
leave
mov
mov
dec
xor
add
push
sahf
fs
xchg
rolb
into
mov
mov
popa
stos
and
dec
sarb
outsb
bound
xchg
nop
shl
out
add
xchg
cmp
adc
lahf
cltd
bound
cmpsl
cld
incb
leave
adc
pop
and
test
je
cmpsl
and
cmp
inc
les
lcall
and
pop
stc
clc
dec
pushf
loope
loopne
mov
outsl
push
pop
push
mov
popf
jg
jecxz
mov
imul
mov
or
mov
push
sbb
scas
mov
xchg
fisubl
mov
bound
pop
subl
xchg
mov
push
xor
sbb
lcall
loope
fstps
rolb
gs
ss
xor
jecxz
fidivl
aam
dec
jno
clc
push
pop
dec
repnz
inc
mov
jge
xchg
jp
xchg
and
sahf
fdivr
mov
inc
shl
jnp
xor
sub
inc
scas
call
in
mov
jo
pop
push
fnsave
std
fdivrl
movb
iret
add
daa
repz
imull
or
jnp
xor
sub
xor
rcrl
mov
mov
mov
mov
arpl
aam
sahf
int3
and
mov
or
dec
xchg
dec
jl
mov
mov
lds
adc
push
inc
xchg
divb
pop
jl
jbe
lock
ret
push
insb
leave
imul
jno
sahf
push
rorl
dec
clc
xchg
jo
pusha
dec
cmc
fbld
pop
jo
or
cltd
test
push
jmp
imul
jbe
mov
and
xor
sti
push
mov
jecxz
jmp
insl
aas
js
divl
sbb
scas
and
cld
icebp
or
je
jbe
ja
push
cmpsb
js
fstps
loop
outsb
enter
imul
outsl
daa
adc
fidivrl
fisttps
mov
adc
mov
sbb
xchg
xlat
dec
and
push
test
scas
or
add
mov
cmc
or
or
cmc
pop
and
loope
adc
and
lret
icebp
cwtl
daa
gs
gs
pop
scas
popl
movsb
insb
mov
jne
or
das
dec
mov
inc
in
rclb
shrb
stos
fistl
outsb
xchg
cmp
add
les
cmpsb
push
out
xlat
pop
outsb
out
push
jbe
inc
pusha
adc
push
out
cmp
mov
push
push
xor
jecxz
push
in
int
das
sub
inc
mov
leave
dec
sbb
testl
pop
das
mov
cwtl
pop
or
lret
jge
aas
dec
pop
outsl
data16
jle
shr
push
xlat
cmpl
jb
jle
hlt
test
scas
xsha1
cmpsb
mov
dec
pop
dec
sub
bswap
adc
popa
inc
mov
sub
movsb
insb
add
aad
add
sub
or
jge
push
test
das
mov
iret
mov
inc
xor
or
jg
jg
jp
xor
inc
leave
lods
setb
push
std
jns
sbb
xchg
and
sbb
daa
dec
rorb
pushf
adc
push
lahf
sub
push
pop
jmp
out
lock
and
lea
arpl
dec
test
add
sbb
into
les
inc
xchg
cli
xor
into
out
mov
jp
scas
xchg
adc
adc
cmp
push
ffreep
call
bndstx
push
je
pushf
fisttpll
or
adc
outsl
repnz
fsubrl
xchg
mov
jae
mov
pusha
fdivl
into
aas
adc
cli
lret
out
inc
adcb
in
jne
ljmp
cmpsb
cmp
mov
inc
sahf
lods
ja
daa
stc
mov
adc
pop
imul
movb
push
ss
xor
in
inc
dec
lret
js
nop
mov
lcall
bound
xchg
inc
xchg
dec
inc
ss
mov
cltd
sbb
mov
adc
push
je
cmp
adc
mov
adc
mov
int3
mov
incl
cwtl
lret
jb
movsl
dec
loopne
xor
leave
es
leave
insl
and
ja
es
jg
push
or
clc
scas
mov
movsl
ret
and
fsubs
stos
cmc
sti
dec
cmpsl
push
test
test
mov
mov
bound
sub
add
nop
call
pushf
xor
and
xor
cli
or
negl
shll
shlb
into
inc
xchg
out
bound
xchg
das
call
cmpsl
sub
lcall
add
push
cli
xchg
push
mov
dec
loop
mov
pop
fsubl
arpl
pop
xchg
lods
bound
pop
mov
nop
imul
pop
popa
pop
sbb
pop
mov
or
add
lahf
testl
dec
and
sahf
sub
aam
jo
repnz
testl
cmp
mov
xor
add
into
dec
cli
mov
aaa
add
bound
or
ja
or
jo
adc
mov
mov
jo
jne
sbb
dec
jbe
dec
push
popa
in
push
stos
xchg
xchg
adcb
loopne
xchg
sub
fmull
aad
push
pop
mov
xchg
push
jbe
cmp
xchg
mov
sbb
jae
jb
pop
adc
jg
dec
nop
jp
orl
xchg
repz
inc
inc
mov
movsl
pop
mov
fnstcw
pop
fistl
pop
fisubrl
andl
mov
iret
shll
and
js
jecxz
inc
sub
adc
sub
push
dec
or
push
lock
push
leave
movsb
dec
iret
add
mov
int
lea
movsl
jb
arpl
mov
xor
stc
pop
mov
int3
enter
jns
cmp
pop
mov
lods
cltd
scas
mov
cwtl
lods
shr
sar
sbb
and
das
addb
inc
jp
insb
mov
test
ret
adc
andl
or
jae
outsb
adc
aam
pop
mov
jecxz
iret
ret
gs
lds
orps
cmp
das
cmp
stos
stos
loop,pt
outsl
daa
rcl
mov
stc
mov
sub
and
jnp
jle
dec
xor
adc
mov
in
lret
push
sbb
imul
or
sub
ja
incb
jle
dec
mov
loop
loop
xor
add
mov
lds
imull
adc
iret
dec
cmp
mov
mov
mov
je
jmp
dec
aam
jg
mov
lcall
cmp
popf
cwtl
cmp
inc
bound
push
sbb
adc
stos
cmp
fwait
push
std
test
mov
xor
loopne
cmp
add
push
lret
add
hlt
xchg
ljmp
rclb
jl
dec
xchg
add
pop
sbb
sub
dec
out
dec
push
dec
rclb
in
adc
rorl
movsl
leave
and
cwtl
sbb
pop
scas
sub
xor
stos
jmp
fistpl
mov
lret
call
or
xor
sub
and
adc
jno
cwtl
and
pop
mov
iret
lret
enter
imulb
mov
in
dec
int3
mov
jp
lret
jg
outsl
mov
mov
nop
loopne
pop
lods
add
and
xchg
push
add
sbb
cli
inc
insb
push
nop
sbbw
loope
movsb
mov
add
nop
jmp
sub
jle
cld
inc
jb
cltd
xor
bound
push
adc
pop
stos
jmp
adc
add
push
jmp
stos
mov
jbe
fcomi
adc
scas
inc
out
loop,pt
in
hlt
mov
xlat
lret
in
shrl
sti
mov
inc
jb
pop
push
ljmp
movsb
je
xchg
lahf
mov
cmc
add
cltd
scas
lahf
push
jne
or
leave
or
fldl
scas
pop
mov
pop
dec
sub
scas
scas
mov
int
ljmp
pusha
fisubrl
jbe
sub
dec
push
sbb
jae
or
outsl
cmp
idivb
pop
mov
je
adc
repnz
push
mov
push
add
dec
movsb
cmove
test
fbstp
xor
jne
dec
out
mov
jge
jne
mov
xlat
mov
sbb
imul
mov
movsl
mov
in
cwtl
and
bnd
mov
addr16
cwtl
loop
pop
sbb
mov
pop
pop
cmpsb
lock
ss
lahf
insb
xchg
sbb
ss
insl
arpl
mov
lahf
in
mov
pop
dec
add
adcl
xor
jmp
jecxz
fidivl
mov
int
sbb
push
xchg
push
pop
mov
inc
pop
inc
mov
ror
das
xor
std
xor
cltd
and
sbbl
jb
xor
push
es
in
pop
inc
push
sub
jle
dec
fisubrl
hlt
xor
xchg
cmp
lcall
mov
fdiv
inc
xchg
jg
or
mov
lret
xchg
mov
lods
arpl
push
into
into
shlb
loopne
int
nopl
bound
fwait
cmpsb
cli
fcomi
pop
test
push
mov
or
std
cmp
rcrb
mov
in
das
xchg
scas
inc
or
push
mov
leave
sub
sbb
test
add
sub
popa
jns
int
sub
push
sahf
clc
fdivl
shlb
lcall
xor
push
lds
shrl
cli
sbb
push
cmp
outsl
hlt
sbbb
lret
cmp
sbb
ja
fisubrs
mov
and
imul
mov
call
sbb
fcompl
je
sarl
adc
test
mov
adc
dec
push
jno
add
out
mov
insl
add
lea
dec
js
mov
dec
adc
pop
xchg
dec
fldenv
stc
xlat
sbb
pop
je
ljmp
lahf
adc
jae
into
dec
js
xchg
ss
xor
sbb
and
add
test
in
dec
in
aaa
cmp
jb
xchg
in
mov
inc
mov
in
insb
xchg
pop
mov
and
into
ret
mov
cwtl
mov
shlb
pop
dec
call
and
jmp
mov
pop
popa
inc
pop
mov
rcrl
aaa
stos
in
stc
add
into
mov
out
mov
and
pop
les
aam
sub
outsb
push
and
jb
ljmp
adc
fnstenv
mov
pop
xor
push
jb
push
dec
pop
adc
clc
shlb
push
fstl
mov
aaa
xchg
adc
rol
sub
push
andb
dec
jno
cmp
xchg
push
testl
mov
aas
push
lock
pusha
arpl
xchg
mov
iret
jmp
popf
scas
and
pop
cmp
cld
subb
les
push
loop
push
mov
iret
adc
pop
push
clc
and
mov
adc
lahf
in
scas
xlat
jne
sub
cmp
outsl
idivl
mov
cmp
jo
sub
cmp
jp
repnz
shl
lea
xor
mov
cmpsl
ds
and
fmul
cmp
sub
pop
xor
sbb
cmp
aad
mov
sub
fildl
aad
inc
leave
bound
cmp
and
out
fsubp
dec
adc
lahf
ss
mov
fs
imul
cmpsl
push
cmp
xchg
adc
xchg
outsl
arpl
add
enter
adc
in
jmp
ss
fs
outsl
adc
jle
dec
xor
mov
test
rorl
lret
out
into
data16
mov
incb
scas
into
int
ds
jl
iret
mov
lret
mov
pusha
push
mov
sub
fisubrs
cs
mov
or
std
test
into
push
jnp
or
push
std
xchg
pop
add
mov
add
outsl
mov
push
imul
je
data16
add
and
mov
adc
stos
cltd
xor
incl
shll
xor
adc
rcll
mov
push
addr16
out
mov
inc
jae
iret
cmp
sbb
out
cmp
xor
dec
jns
sahf
aad
out
push
aas
cs
out
inc
movsl
and
fs
xor
mov
jle
push
mov
mov
mov
das
add
test
adc
mov
dec
fwait
gs
hlt
mov
xor
push
aam
into
xchg
sub
mov
mov
or
sub
shl
jns
arpl
lea
add
shrl
inc
aaa
mov
push
dec
lods
cmp
push
jbe
gs
notl
cmp
xchg
jmp
inc
cmpsb
jmp
mov
xor
jl
push
and
push
jae
sub
in
outsl
dec
push
ss
test
dec
aas
mov
aad
dec
cmp
fbld
filds
sub
and
iret
add
stc
inc
mov
je
stos
ret
inc
and
lahf
sub
cmp
lods
fidivl
aaa
into
inc
rcll
sbb
push
jne
popa
mov
jecxz
outsl
movsl
adcb
movsb
cld
out
sub
rol
jg
jge
popa
add
leave
jb
sbb
inc
cmpsl
arpl
imul
dec
or
jle
fsubrs
inc
xchg
stos
mov
and
sub
imul
gs
mov
fs
xchg
adc
mov
shlb
adc
mov
sti
idiv
aaa
sub
lock
hlt
push
fcompl
dec
adc
bound
pop
and
xchg
sub
jle
pusha
ret
or
add
repz
sti
test
dec
mov
sub
aaa
mov
aam
mov
lahf
cmp
popl
push
mov
in
and
fbld
xchg
ljmp
rolb
sar
adc
and
mov
incb
sbb
iret
fisttpll
and
stc
inc
or
pop
push
xchg
xor
sti
fwait
fs
testb
adc
jle
insl
pop
imul
fsubl
rolb
mov
push
sbb
push
clc
daa
aaa
xor
push
fisttpl
test
xor
aad
cmc
aas
sahf
or
test
out
pushf
cmpsb
mov
pusha
movsl
movsl
cmp
pop
cmp
and
adc
stos
xor
das
and
test
xor
jne
adc
xchg
sbb
fs
sbb
clc
mov
shll
push
push
mov
scas
lods
dec
or
dec
dec
fidivrl
jmp
sub
jmp
nop
mov
pop
addr16
jb
dec
mov
movsl
mov
cwtl
mov
testl
sub
hlt
lods
mov
xor
jae
repnz
sub
sub
arpl
decl
les
xchg
mov
mov
stos
pop
mov
in
aam
stc
inc
in
jl
out
int3
testb
pop
xorps
mov
test
movsl
push
dec
mov
aad
loope
daa
mov
pop
in
xchg
mov
adc
sbb
ja
shrb
add
jns
lds
mov
jmp
xor
dec
mov
frstor
mov
mov
out
sub
aaa
push
fs
pop
shlb
in
add
je
push
cmpsl
scas
push
std
cltd
push
or
mov
out
adc
adc
ret
sub
add
inc
fucomip
inc
inc
in
imul
cmc
sbb
add
cmc
sub
add
pop
xchg
push
xchg
mov
cmc
sarl
pusha
jmp
cmpsb
or
push
cwtl
es
loop
or
mov
push
inc
and
xor
adcl
mov
adc
ret
inc
out
sbb
inc
add
bound
push
fwait
and
inc
xchg
call
mov
mov
aaa
mov
stos
mov
push
sub
sub
jle
scas
xor
sub
xchg
xor
or
add
push
xor
cmc
movsb
cmpsb
inc
sub
addr16
mov
fldcw
pop
shll
adc
mov
andb
loope
add
pop
add
cmpsl
scas
mov
fcmovne
add
add
in
add
sub
addr16
sarl
test
loop
notl
mov
mov
jnp
inc
cmpsb
fldt
add
xchg
mov
sbb
mov
je
xchg
xor
loop
cmp
xchg
jo
or
mov
sub
sub
mov
mov
xor
int3
jg
in
cld
call
add
jge
lock
lahf
inc
pop
sahf
ss
in
and
dec
lock
jae
pop
mov
push
nop
inc
fs
xchg
daa
mov
cmpsl
sbb
pop
test
dec
lahf
nop
add
je
dec
repnz
in
je
dec
fsubp
jecxz
cmp
ret
jae
pop
mov
xchg
mov
pop
pop
mov
jecxz
jg
popf
push
mov
aas
out
je
lock
loopne
cmp
mov
negb
out
cmp
daa
inc
mov
add
fidivrl
fists
inc
gs
mov
movsb
movq
push
icebp
xor
sti
mov
xor
ja
seta
dec
out
adc
out
into
lods
insl
jl
sbb
mov
cmc
jo
stos
jnp
mov
imul
fwait
test
pop
repz
mov
lahf
mov
push
stos
dec
adc
negl
pop
sbb
mov
inc
jb
xor
bound
pop
in
pop
xorl
and
stc
adc
movsb
mov
sbb
insb
xchg
dec
dec
sbb
adc
and
out
mov
adc
imull
js
inc
stos
cmpsb
hlt
push
int3
add
mov
xor
int
insl
jbe
lcall
in
ret
adc
repz
jmp
cmp
sbb
pop
ret
aam
sti
pop
and
clc
shrb
dec
arpl
push
xor
ret
fmul
addr16
push
je
push
mov
mov
nop
cmpsl
cmp
mov
pop
cmc
mov
pushf
dec
pop
into
iret
sbb
adc
cwtl
out
jo
pop
int3
lods
inc
xor
add
mov
fcompl
adc
daa
clc
or
in
iret
aad
cld
data16
xchg
retw
cltd
jbe
pop
hlt
hlt
fsubrs
pop
arpl
mov
test
dec
mov
sarb
adc
cld
mov
pop
xor
or
mov
loop
mov
shlb
js
or
pop
adc
mulb
fisubrl
mov
jmp
or
int3
pop
lret
mov
hlt
aas
rcrl
add
iret
test
cltd
jo
or
fcomps
mov
loope
fs
stos
jne
add
and
pop
mov
mov
sahf
lods
push
xchg
cmpsl
fs
sbb
add
mov
xchg
lds
cli
pop
filds
lahf
adc
aas
cltd
in
push
mov
rorb
ja
sub
cltd
sub
fstpl
push
rclb
je
into
mov
push
repnz
mov
lods
inc
imul
call
jno
mov
xchg
push
gs
mov
out
outsb
lds
rorb
mov
push
in
or
je
xlat
and
std
pop
cmp
cmpsl
imul
jns
fsts
pop
out
push
push
scas
imul
push
in
fldt
jae
lret
fbld
pusha
jnp
xchg
mov
mov
aad
aas
adc
xor
xchg
xchg
xor
test
lods
jmp
orl
or
xchg
in
in
sub
out
push
inc
cli
int
xor
xchg
shlb
idivl
dec
inc
push
aam
cwtl
movsl
popf
shll
pop
adc
jo
loope
adc
mov
clc
outsb
into
jne
jecxz
push
icebp
cmp
scas
ret
adc
ret
dec
add
into
xchg
and
add
es
pop
incl
cwtl
incb
cmpsb
jb
xchg
and
in
out
and
xchg
insb
xchg
sbb
pop
clc
movsb
push
movsl
in
gs
push
adc
sub
das
push
or
jecxz
mov
lret
push
das
test
daa
repz
mov
inc
lret
mov
jns
sbb
in
dec
cmp
mov
jne
sub
jle
sbb
jp
jle
into
das
ja
pop
inc
lret
pusha
faddp
bound
aas
jo
loopne
das
daa
mov
gs
ss
clts
imul
iret
rorb
pop
cli
lea
das
loopw
in
jp
mov
mov
mul
sarl
pop
xchg
gs
sarb
cmp
repz
mov
ficoml
es
cmc
jb
das
mov
das
lcall
mov
dec
imul
push
xor
adc
pop
sub
add
cmp
cs
xchg
mov
pop
sbb
jp
dec
pop
mov
mov
inc
fldcw
or
cmp
and
jns
xchg
push
add
sbb
lret
sbb
rcr
inc
mov
cltd
mov
out
jl
orb
cs
out
jbe
xlat
mov
aad
pop
and
jg
pop
es
mov
dec
sbb
jnp
fildl
or
jmp
jno
fbld
push
sti
rcl
xchg
lcall
in
popa
mov
push
hlt
insb
std
jo
xor
mov
push
mov
mov
dec
lea
js
int3
jecxz
fldcw
cltd
rolb
rcrb
gs
outsb
ret
pop
inc
xor
pop
ljmp
mov
lea
movsb
or
fdivrl
sub
mov
cmp
cs
pop
add
cli
imul
pop
cmpsl
mov
and
jb
cmp
lea
movsl
cli
xchg
xchg
nop
fnstcw
xor
pop
ja
insb
cmp
mov
pop
xor
out
arpl
push
adc
pop
xchg
xchg
push
dec
lock
mov
add
push
and
xchg
lods
ds
add
fnsave
jbe
movsl
jl
pop
mov
mov
lods
call
fimull
lret
xor
push
stos
lcall
cmp
and
sbb
push
jb
gs
pop
push
cld
or
sub
rol
shrl
xor
mov
pusha
jbe
out
sbb
cmp
stos
js
call
mov
mov
mov
out
jo
add
pop
jl
gs
xchg
andb
iret
push
mov
xor
ret
out
in
std
or
sbb
int
mov
mov
repz
pop
arpl
cmp
add
jg
xchg
insl
test
or
pop
and
dec
nop
loopne
dec
decl
jecxz
ret
jle
mov
int3
dec
pop
fiaddl
dec
aam
lcall
jae
pop
push
jecxz
sub
xchg
add
pop
hlt
mov
scas
in
add
aas
or
jmp
xchg
adc
bnd
mov
leave
int
pop
pop
push
leave
test
push
adc
fcmovnbe
mov
iret
pop
and
roll
jb
fisubrl
dec
loope
enter
push
adc
add
xchg
scas
dec
test
mov
push
sahf
testl
xorb
dec
rolb
jbe
and
xchg
add
mov
push
outsb
inc
enter
mov
in
mov
bound
out
mov
test
decl
std
rcl
cmp
subl
dec
sbb
int3
pop
sbb
bound
push
popf
and
mov
mov
mov
in
ds
loope
or
pop
idivb
stos
push
out
popa
jge
and
stos
testl
xor
pop
push
scas
adc
sti
pushf
daa
roll
inc
pop
cmpsb
xor
jmp
roll
mov
pop
push
stos
jle
mov
inc
mov
shlb
in
xchg
lock
dec
loop
pop
pop
or
jno
int3
sti
pushf
xor
or
and
pop
pop
mov
stos
adc
cmp
loopne
mov
add
and
sahf
pop
sarl
les
pop
jne
jno
add
or
xor
imul
push
jns
adc
mov
loop
xchg
sub
jns
stos
pop
ss
sbb
hlt
adc
lds
sub
sub
push
push
mov
mov
cli
es
mov
pop
int
push
inc
inc
and
rorb
loop
and
mov
jle
sahf
fsubrl
push
rcl
add
divl
hlt
cs
cmp
repnz
push
fidivl
in
and
or
inc
push
or
nop
xor
fsubs
addl
loope
or
add
pop
arpl
or
sbb
je
inc
jns
pop
inc
jae
inc
inc
cmp
int
push
pop
xchg
push
jmp
sbb
push
aaa
je
push
adc
call
stos
ljmp
jg
sbb
push
insl
repnz
push
xor
sbb
insl
mov
test
call
lret
sub
and
xor
andb
mov
test
lods
or
movsl
or
jecxz
xor
stos
ds
mov
rolb
xor
cmpps
ljmp
faddl
or
mov
je
and
decb
and
sti
jbe
int
mov
inc
fisubrs
jb
gs
jg
ljmp
xchg
xchg
movsl
push
mov
mov
loope
adc
aam
push
inc
mov
andl
sbb
push
popa
aad
or
out
mov
fwait
xor
icebp
stos
and
push
mov
mov
pop
sub
mov
adc
xchg
popf
jb
dec
jo
sbb
xchg
dec
mov
mov
cmc
dec
push
imulb
add
jbe
xchg
inc
out
loope
jge
fidivl
jge
popf
jg
ret
jmp
jnp
sahf
xlat
and
inc
stos
rcl
hlt
xor
arpl
sbb
lods
jmp
cli
das
notb
push
stos
mov
xor
mov
movw
mov
out
cmc
xchg
call
xor
ljmp
or
mov
scas
fucomi
fildll
jmp
cmp
popf
dec
loop
daa
dec
mov
jne
jge
mov
pop
jecxz
loopne
test
lret
mov
mov
sarb
roll
cs
push
das
shl
xlat
push
xor
outsb
adc
sahf
sbb
movsb
adcb
jge
pop
jo
popf
or
sbb
dec
adc
jmp
mov
push
push
lret
pop
loope
push
sub
inc
jae
sti
dec
sub
cmpsb
std
inc
loopne
jns
and
xor
pop
fisubs
add
js
xor
das
pop
call
arpl
pop
lds
lds
jo
hlt
pop
lahf
sbb
aad
imul
sbb
mov
push
cmovbe
and
lahf
cwtl
das
and
cwtl
shr
inc
cmp
cli
insl
gs
scas
jns
push
and
add
repz
push
and
ret
inc
dec
in
aam
insl
mov
insb
add
dec
jne
jmp
dec
inc
xlat
jle
inc
cmp
inc
dec
lds
loop
shl
out
ja
sub
lods
add
xchg
pop
and
les
lahf
test
movsl
sti
mov
mov
cmp
push
adc
out
sub
ret
loope
lods
fsubl
add
das
lea
mov
ja
repnz
push
lahf
mov
sbbb
mov
sub
pop
loopne
in
fisttpll
sub
and
or
movsb
xchg
jg
dec
shll
mov
sub
out
stos
pop
jns
and
sub
sub
movsb
push
mov
leave
iret
data16
add
test
cmp
or
mov
fmull
lods
arpl
movsl
stos
in
ffreep
xorl
and
inc
jb
inc
in
je
xor
jb
frstor
push
xor
sub
mov
cld
or
insb
jns
sub
cmpsl
les
xchg
movsb
into
pop
add
and
fnstcw
lret
imul
inc
push
shlb
movsb
cltd
and
inc
pop
mov
jmp
lret
in
hlt
cmp
adc
add
cwtl
xor
stos
adc
pop
push
mov
test
or
push
jmp
jns
jo
andl
popl
and
js
add
push
adc
xlat
outsb
js
lahf
clc
sbb
dec
loopne
jnp
or
iret
xchg
sub
shrl
cmp
mov
fsubp
add
jb
cmp
out
not
test
mov
lods
inc
push
dec
adc
dec
inc
mov
fdivl
cwtl
das
fists
pop
sbb
mov
pusha
ret
frstor
sahf
jne
add
push
sub
nop
stos
xchg
dec
in
inc
inc
pop
fbstp
insb
inc
imul
dec
mov
push
xchg
lock
and
int
pushf
int
into
enter
fs
ret
clc
popl
leave
push
sbb
adc
mov
mov
out
jbe
cmp
fs
sbb
into
sub
push
pop
clc
shl
jl
or
jnp
push
add
mov
xlat
pop
bnd
sbb
and
lods
pop
push
out
test
or
mov
leave
inc
mov
jne
mov
and
iret
movsb
int
inc
addl
repz
hlt
mov
mov
psllq
or
adc
or
mov
cli
jbe
inc
daa
adc
sub
inc
test
mov
ja
push
pop
push
cmp
ja
jp
sbb
in
and
pop
lock
xchg
xchg
lods
mov
mov
dec
andb
out
or
popf
push
xchg
adc
jb
mov
mov
scas
jl
pusha
stos
fisubs
xchg
rclb
xchg
jo
adc
push
adc
inc
push
pop
ret
dec
fs
insl
add
xor
enter
out
cmp
test
xor
insl
test
sbb
adc
mulb
sub
out
sahf
xor
iret
or
dec
pop
movsb
lret
push
sub
neg
mov
cltd
and
cs
xchg
insb
rolb
mov
lret
cli
xchg
lods
mov
sub
pop
sub
jb
or
inc
jg
cmc
jae
sub
mov
pop
sbbl
in
shrl
push
pop
lcall
das
jns
inc
dec
mov
cmp
sbb
jle
psubusb
inc
cs
fwait
mov
mov
test
fnsave
add
les
aad
jp
inc
or
inc
ficoms
cmp
lock
stos
cmp
sbbb
insl
les
xor
dec
loop
mov
imul
in
adc
adc
shlb
mov
xchg
subb
repnz
rcr
sub
mov
movsl
mov
lcall
addl
pop
and
mov
inc
outsl
mov
jecxz
bound
test
mov
sbb
cs
test
jne
repnz
inc
fdivp
test
xchg
cld
shrl
fidivrs
fldenv
mov
xchg
enter
push
push
sbb
pushf
xor
mov
and
stos
push
fnstenv
xor
dec
push
jae
ljmp
cmp
fcompl
lcall
movsl
inc
out
ficoml
sbb
xlat
mov
test
add
push
add
jge
mov
xchg
aaa
mov
bound
dec
fs
mov
push
enter
sqrtps
xor
mov
insb
shll
pop
or
xlat
lods
outsb
xor
lods
shlb
cmpsb
negl
data16
lret
inc
js
push
mov
test
pop
adc
lcall
std
push
in
push
js
cs
xlat
scas
aam
mov
pop
aad
push
das
shrl
int
icebp
ss
inc
mov
cmpsb
jl
pushf
in
push
xorl
pop
ljmp
fidivs
pop
or
cmpsb
lods
iret
push
test
stos
es
jmp
xor
sti
pushf
mov
ljmp
cltd
add
mov
insb
sbb
xchg
jg
mov
and
push
out
loopne
int3
adc
lea
mov
xchg
dec
mov
ja
stos
dec
cmp
aas
dec
repnz
and
xorb
stos
sarb
sbb
or
pusha
aam
sar
jge
stos
add
std
mov
les
loope
sbb
out
jg
inc
mov
or
ret
inc
xchg
xor
adc
add
adc
jae
add
adc
mov
xchg
pop
adc
fsubrs
sub
hlt
in
sub
loopne
in
dec
dec
insl
jns
int3
jmp
leave
pusha
pushf
sbb
out
cmp
rcl
popf
clc
push
push
lcall
in
stos
stc
jecxz
xor
cmp
mov
sbb
rcrb
mov
iret
pusha
pop
int3
rcrb
jae
jle
xlat
pop
dec
pop
mov
jb
inc
mov
lret
loopne
jl
decl
imul
in
cli
mov
inc
stos
mov
test
cwtl
inc
imul
or
shrb
jge
sub
sbb
inc
orb
repnz
adcb
mov
sbb
dec
dec
push
xchg
jge
stc
test
adc
outsl
pop
mov
das
mov
sbb
mov
testl
test
push
stos
lock
lock
ds
jge
imul
push
sub
sub
xor
repz
inc
adc
xchg
pop
clc
mov
dec
mov
and
pop
mov
inc
lret
mov
push
cwtl
sub
dec
out
hlt
or
pop
fildl
xchg
imul
xchg
inc
add
addl
test
add
adc
shrb
adc
das
sub
jl
and
mov
jb
orb
pop
rcll
sbb
les
add
cmp
sarb
or
jno
jo
xchg
sub
pop
popa
mov
cmpsb
inc
jg
je
sbb
loopne
lds
dec
mov
xor
jp
icebp
pusha
add
stc
loop
pop
pop
sub
and
push
fstl
push
movsl
mov
adc
roll
xchg
loopne
add
stc
add
andb
adc
lods
stos
out
andb
inc
cli
es
mov
mov
std
in
push
daa
fstpl
stos
or
fwait
xchg
xorb
xchg
jge
addr16
mov
mov
and
cltd
or
push
add
test
mov
lret
jae
lds
mov
shr
xchg
cmp
hlt
add
call
cmp
xor
loope
jae
xchg
ja
jge
pop
sub
dec
dec
les
mov
daa
xchg
mov
sti
fwait
js
pop
stos
sub
fnsave
push
jnp
dec
roll
push
add
adcl
mov
ret
add
add
mov
cmc
jl
out
lods
std
mov
xchg
hlt
xchg
lahf
mov
pop
lahf
jne
lods
and
mov
sub
stc
test
mov
stc
insl
cmp
ljmp
xchg
add
cmp
adcl
mov
and
in
jge
mov
add
mov
push
mov
mov
pop
outsl
test
das
aad
xchg
mov
ja
out
and
addl
repnz
adc
loopne
inc
fnstenv
bound
xchg
orl
lahf
int
sarb
push
insl
sbb
adc
lock
fsts
xchg
jno
rcl
call
sbb
pop
pop
mov
add
xchg
xchg
adc
enter
inc
jo
lret
push
push
jmp
mov
add
fadd
nop
jno
push
shrb
test
stc
jbe
scas
subb
mov
pop
mov
std
mov
jbe
cmp
insl
dec
pop
mov
sti
imulb
mov
js
jb
mov
sbb
ljmp
shrb
push
jae
clc
and
jbe
std
lea
test
rclb
sbb
xlat
mov
arpl
sahf
cmp
sbbb
jb
cld
jo
dec
and
leave
leave
and
xor
add
movsb
inc
fs
xchg
fs
pop
fwait
test
fwait
or
sub
or
imul
inc
push
das
test
xor
mov
adc
and
cltd
dec
mov
je
push
pop
sub
rcrb
ds
lods
fdivrl
jns
int3
pop
sti
roll
addl
push
sub
lods
jle
out
jle
push
int
mov
lods
imul
call
enter
cmp
sub
mov
jns
and
les
jne
sahf
adc
iret
add
mov
push
or
push
cwtl
mov
popf
xor
sub
jne
dec
inc
movsl
neg
test
fcoml
mov
hlt
loop
imul
and
loopne
push
pop
add
pop
xchg
mov
or
or
and
ret
dec
pushl
loopne
in
shll
sbb
es
or
test
dec
ret
add
cmp
lret
imul
cmp
cmp
in
inc
sbb
dec
jne
clc
aas
or
mov
sub
cmp
bound
loopne
or
cmp
mov
ret
mov
jne
cmp
mul
add
jle
mov
mov
push
mov
pop
insl
jno
cmp
andl
ret
jecxz
fs
rcrl
jge
mov
mov
xchg
icebp
lock
sti
adc
jbe
aad
and
jge
insl
addr16
xchg
pop
mov
inc
push
stos
mov
fmul
loop
adc
int3
sbb
out
out
mov
xlat
jecxz
cld
pop
push
sub
shlb
icebp
js
sahf
fs
add
cmp
pop
loopne
or
in
loope
or
cwtl
sahf
addr16
icebp
jp
jmp
mov
push
jmp
in
cmp
fidivs
movsl
test
sub
nop
push
mov
out
lds
notl
jmp
call
mov
scas
in
dec
adc
push
leave
pop
add
mov
push
in
adc
fwait
cmpsb
orl
pop
and
pop
into
xchg
call
out
jne
jnp
lods
stc
in
pushf
gs
fbld
test
mov
push
pop
ljmp
push
push
push
and
cmp
add
ljmp
fisubrs
adcb
pop
xchg
cmpsl
mov
sbb
aas
sub
mov
mov
add
mov
movsb
ror
cli
xchg
pop
gs
pushf
mov
adc
lret
mov
xlat
or
das
pop
lock
int
and
lds
mov
arpl
shlb
out
push
stc
mov
xor
mov
pop
sahf
pop
push
adc
sub
outsb
mov
leave
jae
imul
pop
xlat
ficoms
mov
cmc
mov
jmp
ljmp
jno
ljmp
cmp
sub
lret
inc
test
into
inc
movsb
es
push
lret
push
lcall
jg
mov
push
je
or
or
jge
mov
test
jp
das
lea
sub
push
push
ret
fstp
into
clc
bound
movsb
jno
stos
xor
cmp
mov
jo
push
inc
sub
mov
sub
out
cmp
shrl
and
das
mov
nopl
cmp
leave
flds
stos
pminub
dec
repnz
shr
hlt
std
xchg
daa
mov
fistpl
popf
xor
inc
push
pop
or
xor
xorl
jp
lahf
push
sahf
ss
decb
jne
mov
mov
gs
mov
sarl
or
push
jne
push
loop
or
mov
fdivrl
in
and
xchg
sub
out
xchg
push
pop
xchg
mov
add
xchg
xchg
scas
incb
ljmp
ret
ror
add
std
int
outsl
rorb
cmp
inc
pop
sbb
mov
xor
loop
mov
mov
mov
popf
js
mov
stc
push
xchg
jp
lods
jl
push
scas
into
xchg
mov
cld
sbb
xor
jp
in
pop
sub
cli
mov
int3
dec
push
std
out
cmp
enter
stos
jne
jp
jecxz
scas
push
in
xor
js
popf
stc
mov
mov
cld
add
push
jmp
mov
fstps
in
inc
adc
inc
and
out
cmp
out
pop
xor
pop
movsb
mov
call
decb
sub
pop
xchg
sub
leave
add
out
push
and
fists
sub
xor
jne
pop
jb
lods
or
sbb
dec
dec
jl
fdivl
mov
mov
pop
nopl
movsl
inc
push
push
xor
pop
fnsave
fucom
pop
stos
sti
stos
in
xor
jno
shll
movsb
loop
inc
clc
or
cs
push
dec
loop
inc
dec
pop
jmp
mov
mov
or
inc
ficompl
jle
je
inc
push
cmc
mov
lcall
pop
test
int
pop
or
pop
fwait
pop
and
sarl
push
pop
lret
xor
aas
loope
pop
les
std
divb
sub
sub
xor
in
int
aaa
push
inc
dec
pop
jne
mov
sti
mov
xchg
test
das
fs
das
addr16
popa
ljmp
mov
lock
dec
dec
lcall
push
out
stos
pop
jmp
enter
or
cmp
faddl
or
or
push
aad
lahf
data16
popf
jecxz
inc
cmp
ja
jae
scas
sub
mov
jle
xchg
and
xor
ljmp
movsl
mov
ss
mov
jge
push
dec
xor
push
xlat
loopne
or
jno
sbb
out
repz
mov
xchg
xor
lcall
arpl
lock
inc
sub
jne
jp
mov
flds
mov
push
mov
cmp
sub
or
sarb
fcmovbe
sbb
jae
scas
push
into
mov
mov
jns
inc
ljmp
adc
xor
fnstsw
movb
les
idivl
subb
sub
bound
add
lock
cmp
dec
mov
pop
out
mov
pop
pop
mov
xchg
mov
popa
lock
sbb
sbb
pop
mov
add
xchg
xor
adc
pop
adc
mov
xlat
inc
mov
mov
int3
repz
pop
dec
mov
cwtl
mov
fwait
xchg
cs
mov
mov
mov
fwait
dec
std
push
aaa
ljmp
je
test
ss
cmp
push
push
icebp
std
sbb
xchg
fildll
ja
mov
test
outsl
data16
aas
imull
xor
movsl
mov
cmc
outsb
adc
fs
dec
test
xor
fwait
xchg
sub
push
add
lea
jle
adc
out
jae
divl
dec
pop
mov
mov
js
lods
popa
add
lods
inc
xchg
pushf
scas
pop
pop
dec
sbb
outsl
cmpsb
loop
add
stos
les
in
mov
out
test
mov
add
shlb
jle
in
xchg
ss
cmpsl
push
inc
and
cld
xchg
xor
push
sub
mov
sbb
mov
sub
inc
dec
loope
sub
in
sub
xor
push
enter
push
shrl
and
jp
jecxz
test
scas
cld
sahf
pusha
pop
or
adc
or
outsl
lock
in
and
xor
inc
push
loopne
vpsllq
cmpsl
out
xchg
jl
dec
mov
mov
pop
insb
mov
sub
pop
or
pop
mulb
sub
push
fldcw
out
pusha
arpl
rorl
add
shlb
dec
pop
cmc
sbbb
xchg
pushf
cld
xchg
iret
or
int3
outsb
icebp
push
jmp
or
hlt
xchg
in
jb
sahf
jnp
xor
adc
es
movsb
pop
cmc
aad
cli
and
out
sbb
jne
mov
mov
cld
sub
jne
mov
fmulp
mov
sub
fcoms
stos
pushf
inc
int3
js
cmp
xchg
stos
mov
mov
inc
and
lcall
arpl
pop
mov
mov
mov
in
or
lcall
sbb
cmp
cs
pop
addr16
inc
xchg
inc
enter
dec
push
andb
jns
fisubl
sbb
push
or
mov
mov
mov
mov
cmp
dec
loopne
je
je
ret
je
adc
mov
mov
fiaddl
mov
in
xor
xchg
scas
repz
in
mov
or
xor
sbb
adc
mov
jb
mov
mov
cmp
loop
pop
dec
push
and
sub
aad
inc
mov
mov
js
mov
sti
xchg
cmp
mov
test
stc
mov
or
or
push
or
push
xchg
out
mov
cmp
pop
mov
mov
packsswb
js
fildll
push
mov
scas
mov
insl
rcrb
pop
mov
fwait
cmp
ret
pop
icebp
cmp
enter
movsb
cmpsb
bound
push
outsl
pop
sub
hlt
ret
mov
mov
xor
jle
leave
push
stos
mov
xor
testl
and
fdivl
es
nop
inc
jnp
stos
mov
inc
push
lcall
popf
lods
stc
or
bnd
dec
lcallw
push
sbb
xlat
mov
lret
push
adc
jecxz
and
mov
mov
mov
fwait
dec
xor
daa
icebp
insb
fs
xchg
out
gs
icebp
insb
mov
aas
lcall
cmp
decl
movsb
dec
mov
sbb
les
aam
addr16
pop
bound
sub
and
cmp
dec
or
or
push
aad
mov
sarb
pop
testl
mov
adc
popf
sbb
or
cmp
arpl
xor
jle
add
or
add
jecxz
shrb
inc
fsubrl
int3
cmc
mov
push
in
jae
dec
inc
pop
cmc
jae
push
mov
jl
jnp
or
rcll
ljmp
inc
cmpb
sub
mov
jne
mov
jbe
in
aad
push
push
sub
and
pop
loopne
out
or
pop
shlb
lods
mov
out
montmul
cmpsb
or
jne
mov
inc
ret
adc
mov
jo
inc
shll
dec
lea
jge
pop
adc
push
in
add
mov
pushf
and
pop
push
adcb
js
stos
outsl
data16
subb
psrlq
push
cld
or
ret
loop
les
mulb
jmp
add
roll
ds
xchg
pusha
stos
scas
sbb
in
mov
jecxz
xchg
cmpsl
in
cmp
sbbl
inc
cmc
or
in
mov
push
jno
mov
lret
shrl
sub
aam
insb
pop
lcall
test
lret
push
add
leave
movsb
cli
and
outsl
mov
or
gs
fsubl
and
inc
repz
sbb
addb
sub
scas
mov
mov
mov
xor
push
test
ds
test
mov
sti
mov
jo
and
sub
sti
dec
cmp
fcomps
icebp
pop
lcall
imul
scas
and
mov
addr16
lret
and
push
fildll
not
ret
push
adc
insl
adc
sub
xchg
pop
invd
in
sbbb
mov
xor
sahf
jb
jmp
xchg
add
test
in
in
aaa
lret
sub
fsts
cli
xor
cmp
pop
and
sbb
jne
sti
sub
xor
scas
jg
dec
push
jns
out
xchg
cwtl
add
in
mov
mov
xor
sub
and
jnp
sub
add
mov
fiaddl
lea
mov
popf
pop
sti
add
mov
xlat
jg
test
dec
inc
jl
push
in
out
out
push
jno
push
sbb
loopne
add
int
push
xor
inc
in
push
sbb
xor
roll
xchg
push
enter
mov
add
cs
xchg
iret
cwtl
push
nop
je
inc
movsb
out
aas
pusha
outsb
popa
sbb
dec
push
mov
sub
xor
lods
subb
leave
adc
sub
xchg
inc
sub
fwait
pusha
cwtl
inc
loope
add
in
pop
xor
inc
in
push
adc
lea
lret
dec
push
sbb
into
nop
icebp
js
in
loopne
lcall
imul
cmp
lds
popl
sub
mov
mov
jae
sub
cmp
add
mov
sub
cs
pop
dec
rol
out
sbbb
jb
xor
sbb
dec
pusha
sub
outsb
mov
mov
imul
les
xor
cmpsl
add
jbe
sub
adc
mulb
or
push
mov
dec
loope
push
mov
mov
popf
xor
jb
ficomps
mov
xchg
stc
sub
cmpsl
push
ret
loope
dec
xor
jp
lahf
cmp
mov
jae
in
adc
imul
mov
push
xchg
cmp
dec
outsb
mov
dec
pop
inc
in
push
mov
aam
out
pop
push
jo
adc
pop
xor
dec
bound
lret
push
push
ss
insb
adc
add
rcll
dec
repnz
out
pop
dec
fiaddl
adc
xchg
lds
cmpsb
sub
inc
sub
in
pop
fld
cmp
ljmp
jnp
xchg
sub
jnp
and
es
adc
leave
pop
fidivrl
in
inc
rcrb
pop
ss
dec
negl
inc
ret
jae
fldcw
and
stc
inc
icebp
arpl
stos
repnz
pop
adc
adc
xchg
xchg
pop
xchg
mov
push
in
push
shll
daa
dec
cmc
mov
add
gs
mov
mov
push
dec
hlt
lret
add
add
stc
mov
outsb
data16
mov
fucomip
movsl
xchg
push
jne
mov
mov
cmpsb
xor
dec
inc
push
fldt
js
mov
push
sbb
sahf
inc
rcl
rcrl
mov
or
ror
mov
jns
or
xor
mov
fsubp
sbb
adc
jl
cmpsl
addr16
inc
jne
push
lahf
jnp
rol
inc
dec
sti
lcall
sbb
or
addr16
mov
inc
push
add
leave
and
clc
dec
frndint
dec
dec
scas
inc
enter
fisubrs
pop
jno
test
mov
icebp
mov
test
mov
xchg
push
inc
inc
sub
neg
imul
sub
out
aad
insl
add
mov
sahf
sbb
sbb
data16
pop
cmp
inc
in
call
call
dec
rcl
push
inc
pop
dec
hlt
pop
iret
aas
push
aam
loope
push
adc
movsb
stc
into
in
fcmovb
sbb
jnp
sub
int3
fisubrs
adc
inc
stc
mulps
cmp
negl
inc
pop
jge
mov
fstl
add
fwait
xor
xor
lea
cld
jb
je
xchg
xchg
xchg
cwtl
mov
xor
sub
push
ret
loope
jecxz
inc
xchg
js
shrl
scas
and
orl
shl
xchg
cwtl
mov
test
adc
int
lea
imulb
or
inc
mov
icebp
dec
jle
jbe
dec
cmp
cwtl
nop
push
cltd
inc
int
dec
lret
ja
xchg
cwtl
dec
pop
leave
int
sub
fcoml
std
aad
mov
cmp
mov
insb
jbe
orb
pushf
mov
outsl
push
subl
add
aaa
test
pop
pop
mov
mull
int
jecxz
pop
or
mov
xchg
mov
dec
imul
jns
push
jne
daa
mov
lods
popa
rcl
out
loope
popa
repnz
cmp
rol
mov
js
push
call
sti
mov
stos
inc
push
xorb
jnp
and
pop
pop
adc
cmc
sub
stos
sub
stc
pushf
dec
sub
cltd
les
in
jnp
adc
adc
fldl
xlat
xchg
sub
or
push
lock
and
cld
cmpb
loope
cs
jge
push
jnp
sbb
mov
and
push
fxam
inc
pop
dec
inc
jae
cmc
jo
jecxz
sub
aaa
fdivr
jbe
icebp
sbb
popa
loopne
sub
flds
jmp
push
add
cmpb
lret
pop
loopne
cwtl
push
cmpsl
sbb
push
lods
sbb
and
sbb
fpatan
dec
movsb
js
gs
mov
out
xchg
shlb
add
xor
pop
mov
lret
into
pop
scas
push
in
and
sub
lock
es
js
push
loop
dec
xchg
addb
cmpsb
push
test
jo
adc
and
rorl
enter
xchg
je
push
imul
add
sbb
pop
pop
push
jmp
or
pop
sub
popa
clc
inc
stc
mov
test
add
inc
leave
lahf
stos
add
pop
mov
into
sti
and
inc
adc
xor
xor
jp
ja
or
or
stos
xor
adc
aas
dec
ss
push
fsubrl
sbb
xor
gs
hlt
or
push
sub
sbb
adc
jnp
inc
mov
icebp
data16
ds
adc
mov
pop
icebp
xchg
js
fisubrl
out
hlt
in
scas
adc
or
sbb
dec
into
cli
fsubrs
popf
stc
sbbl
inc
sub
push
pop
inc
mov
pop
cwtl
or
lds
pop
add
pop
mov
sbb
ret
mov
jecxz
sbb
lea
mov
test
sub
orl
push
sub
inc
xchg
repnz
lcall
and
sarl
mov
add
enter
jl
cmpsb
inc
cmp
mov
xchg
std
jg
jno
sahf
adc
add
xor
pop
addb
shrl
in
out
shll
test
aam
cmp
mov
xchg
mov
inc
add
sub
fdiv
or
sub
mov
orl
jmp
push
jnp
mov
data16
mov
movb
orl
mov
mov
sbb
das
in
into
mov
ja
cld
pop
jno
andl
les
shll
mov
ljmp
sti
fcom
pusha
or
mov
sbb
mov
push
pop
iret
jp
xor
hlt
mov
dec
aas
xor
push
call
sbb
cmc
push
js
push
aaa
adc
cs
aam
sub
lods
stos
aas
shrl
mov
mov
jbe
enter
add
rorb
xlat
pop
jbe
push
or
ss
rorb
fcoml
jno
repz
ljmp
mov
push
sbb
adc
cmp
orb
rcll
mov
dec
enter
mov
movsb
cmp
ret
js
mov
mov
adc
xor
aad
fidivrs
mov
rcll
add
icebp
xor
in
data16
test
std
mov
fwait
je
ja
mov
nop
jnp
adc
xchg
sbb
sar
idivl
movsl
mov
ret
xor
sbb
scas
mov
xor
xchg
sub
adc
push
fcoml
sub
adc
dec
dec
lds
xor
inc
adc
rol
cmp
mov
lods
add
sub
fstpt
int
inc
mov
cld
lock
out
dec
movsb
cmp
mov
inc
dec
sbb
addb
imul
mov
add
xchg
mov
orb
add
jl
jo
jnp
out
mov
xor
jnp
call
stc
and
test
fwait
cmp
mov
sbb
ds
cwtl
push
gs
movsb
push
int3
out
add
pop
sub
adc
aam
jge
cs
and
or
mov
cld
test
or
jecxz
push
mov
sbb
mov
push
push
insb
dec
and
xor
movsl
mov
or
or
cmp
ret
stc
and
pop
mov
sbb
mov
cmpsl
aas
dec
add
sub
aas
xchg
mov
cmp
pop
xor
std
int
pop
mov
loope
stos
cmp
out
mov
and
cwtl
mov
pop
mov
shll
xchg
stc
scas
mov
mov
int
jl
les
push
cmp
in
fldt
and
out
xchg
dec
stos
mov
inc
cmp
jecxz
sbb
cmpsb
adc
mov
and
and
mov
push
add
add
insl
xor
lea
aas
mov
adc
jp
inc
and
fwait
push
xchg
leave
adc
rcrl
adc
stos
jno
test
scas
xchg
xchg
xchg
test
pop
loopne
rcll
sub
sub
repnz
inc
push
lahf
add
xchg
ja
cmpsb
sbb
and
into
jl
lret
jae
inc
sbb
ret
jp
out
jp
jg
xor
add
or
jecxz
sub
xor
mov
push
xchg
sti
and
fcmovu
and
test
add
cltd
addl
jb
lret
sub
jns
dec
fsts
mov
test
fistpll
jno
test
ja
rolb
lods
sbb
dec
lret
mov
xor
aaa
aad
in
inc
loop
outsb
adc
int3
pop
in
pusha
dec
push
call
aas
insl
ret
std
push
inc
daa
dec
dec
fldenv
push
push
dec
sbb
lcall
pop
js
inc
repz
mov
idiv
enter
xor
jb
sub
sti
jnp
adc
icebp
dec
mov
loopne
mov
jno
leave
cmp
jnp
push
add
imul
dec
fildll
xchg
cs
enter
mov
cld
into
aas
shll
and
xor
or
in
test
inc
fistpll
sahf
loope
ret
mov
sahf
pop
rcrb
cs
inc
fcomps
mov
sbbb
or
test
daa
incl
repz
cmp
lcall
popl
cli
ret
sub
ds
adc
andl
nop
push
ljmp
movsb
popa
inc
push
scas
and
add
jae
pop
es
push
js
jle
leave
lods
fmull
flds
popa
inc
ja
jle
fsub
mov
pop
pop
sbb
inc
rcrl
hlt
dec
mov
pop
cwtl
ss
jp
mov
inc
mov
pop
adc
mov
and
add
scas
stc
test
insb
jp
popf
shrb
jg
cmp
fsubrs
adc
lods
adc
sub
mov
adc
xor
call
xchg
pop
outsb
add
mov
lahf
jns
push
xchg
movsb
add
stc
stc
loopne
push
push
popf
adcb
ljmp
repnz
and
xlat
xor
or
sub
mov
ds
add
stc
mov
aas
push
fcoml
sbb
jo
sub
pop
fmul
dec
aas
add
mov
xchg
add
xor
dec
aaa
ss
sti
jmp
mov
mov
and
cwtl
xor
cwtl
jne
jg
es
mov
pushf
add
shlb
les
shr
es
addr16
pop
in
jg
xchg
lea
lahf
sbb
dec
ljmp
fucom
mov
loopne
loope
std
mov
jae
xor
lret
and
jg
dec
sub
cmp
jb
xchg
lods
and
orb
dec
cmp
popa
mov
xchg
or
mov
jbe
or
shrb
es
push
fcmove
pushf
es
xchg
mov
xchg
test
push
rorb
in
jmp
inc
push
lret
sti
ds
jmp
pop
stos
jl
push
mov
dec
jnp
mov
shrb
mov
xchg
add
jg
cmp
cld
sub
aam
movsl
das
ljmp
push
icebp
mov
stc
popf
inc
sti
cld
jnp
ljmp
aas
movsl
imul
sbb
les
dec
pop
sti
or
rcl
jp
outsl
lgs
jne
mov
fsubrl
addr16
jmp
pop
ror
ret
lock
insb
inc
mov
add
insl
push
mov
js
mov
push
decb
sti
pop
jmp
fxch
cld
cmp
sub
enter
roll
stos
fs
faddl
subb
dec
repnz
inc
sahf
pop
or
mov
arpl
sub
or
dec
outsb
stc
cli
dec
mov
dec
and
jo
push
icebp
or
cs
popa
inc
test
popf
xor
stos
lcall
mov
add
dec
fldenv
mov
out
out
mov
mov
daa
lock
xchg
add
sub
pop
add
out
xor
adc
mov
aam
fisubrs
mov
lret
xbegin
dec
add
mov
push
pop
lock
xlat
outsb
sub
mov
outsl
lahf
pop
cmp
test
les
in
fcomi
xchg
and
ss
insl
or
shrl
or
je
and
scas
inc
sub
pop
repnz
cmpsl
ja
jnp
inc
test
add
jmp
ret
or
out
dec
xchg
pop
icebp
add
sub
sbbb
dec
xchg
fnsave
fs
lret
jb
xchg
and
lret
adc
rorb
add
fdivl
adc
jns
xchg
stos
inc
add
mov
xchg
inc
cmp
jmp
add
adc
sub
sbbb
icebp
fmuls
mov
inc
je
ss
es
in
inc
fnstsw
jmp
scas
mov
lods
inc
insl
and
cmp
std
lahf
ss
es
test
lock
bound
push
sub
mov
mov
outsl
pop
scas
pop
adc
jle
cwtl
xor
or
pop
dec
push
cmp
fldt
aad
pop
rol
jnp
gs
in
in
push
sub
dec
sarb
xor
inc
loopne
lock
repnz
add
out
sbb
repz
sbb
int
in
fmull
sbb
inc
jmp
mov
xor
lds
xlat
sarl
jge
dec
imul
lods
push
and
add
cmp
arpl
push
fstp
pushf
pop
leave
mov
mov
aam
shll
dec
pop
mov
enter
xchg
cmp
fwait
xchg
fidivl
popf
cmp
das
mov
andb
cmpsl
lret
enter
xor
insb
and
mov
jg
je
lea
in
sbb
push
mov
scas
in
je
or
int
push
cli
xchg
insl
mov
popf
add
mov
push
insl
hlt
call
push
add
push
data16
mov
and
pop
mov
xlat
movb
idivl
jmp
mov
scas
inc
pop
xchg
ljmp
mov
xlat
call
sbb
pop
out
xchg
inc
int3
jmp
out
pop
scas
mov
pop
out
mov
xchg
cmc
cmp
cli
fmuls
mov
pop
test
sub
xor
cmp
repnz
mov
sub
adc
cmp
fcomp
pop
aad
sbb
adc
cs
in
add
mov
test
xor
ja
jne
or
mov
pop
mov
jp
push
push
outsl
pop
into
pop
mov
enter
popa
xchg
push
addr16
xchg
push
leave
dec
out
lret
mov
or
and
jne
ljmp
xor
pop
fcompl
mov
mov
mul
ficomps
cmpb
std
lods
inc
das
bound
cwtl
jg
jns
dec
sub
or
call
jns
data16
shl
or
fistpll
or
push
dec
pop
call
mov
testb
out
inc
xchg
adc
stc
bound
stos
out
sbbb
cmp
mov
fcmovne
pop
lds
jge
cmc
in
mov
mov
imul
outsl
mov
ss
and
mov
or
mov
popf
out
ret
faddl
mov
push
xor
inc
mov
push
les
inc
jo
xor
test
aas
dec
notb
inc
jle
mov
icebp
add
mov
shll
and
inc
rcrl
xor
pusha
out
cltd
pop
sbb
sbb
arpl
fucomi
cltd
inc
shl
scas
pusha
in
stos
js
stos
jbe
sub
or
adc
mov
and
test
inc
in
mov
dec
cmp
call
stos
mov
test
xchg
and
lea
and
xor
loop
ds
dec
bound
xchg
jae
in
and
popa
pop
mov
dec
sbbl
mov
mov
rcl
and
out
mov
mov
or
mov
mov
mov
mov
and
cmp
dec
jmp
lea
fldl
push
fnstsw
or
xor
jnp
sbb
shll
jns
and
enter
test
dec
xor
sahf
xor
pushf
out
test
lea
add
xchg
dec
and
inc
jo
mov
xor
sub
ret
jmp
out
mov
push
test
rorb
lret
sub
push
sarl
sbb
push
inc
ja
and
mov
jmp
pop
mov
pop
inc
inc
lahf
rcrl
dec
mov
ljmp
dec
aaa
rclb
insl
clc
in
add
lods
mov
push
jmp
jo
push
movsl
jg
xlat
js
xor
mov
ds
mov
sbb
sahf
jno
dec
test
or
jnp
dec
cmp
xchg
fimull
or
xor
outsb
mov
sub
and
sub
push
cld
pop
notb
popf
add
cwtl
pop
xchg
sbb
popf
and
sti
arpl
rorl
xchg
mov
mov
add
cmp
cmp
loopne
add
scas
cmpsl
mov
mov
xor
gs
repnz
out
inc
push
sub
xchg
insl
jge
popa
loopne
rcll
xchg
sub
inc
xrelease
scas
andb
adc
add
outsl
ja
sbb
je
imul
push
cli
inc
scas
sbb
jl
faddl
mov
les
jo
adc
push
insb
mov
push
inc
test
scas
nop
cmpsb
inc
int
mov
mov
std
xchg
xor
or
xor
jne
ja
xor
xchg
bound
jl
push
adc
fsubrl
cmpb
std
xchg
inc
jmp
pop
cmp
inc
testb
sahf
insb
xor
ja
test
mov
sub
add
mov
jg
loopne
fcomps
loop
xchg
xchg
sbb
cmp
dec
push
sub
xchg
mov
lock
mov
adcl
jns
jo
lahf
and
stos
rcll
sti
fwait
sbb
adc
push
cli
cmpsb
xchg
das
pop
xor
push
cmpsb
mov
mov
daa
aaa
xor
lock
push
popf
aaa
lcall
enter
adc
aas
dec
outsl
jae
mov
insb
cmpsb
les
mov
popf
inc
ret
lods
mov
fnsave
or
je
add
jp
mov
jae
out
adc
jmp
pop
in
push
cmp
into
mov
in
jb
jmp
push
or
dec
lds
inc
out
cmpsl
add
xchg
dec
cmc
mov
cli
xchg
cltd
mov
cltd
xor
add
popa
xor
lds
add
insb
sarb
aaa
pop
icebp
push
or
xlat
imul
dec
popa
mov
jno
lock
jmp
nop
pop
notb
testl
dec
repz
jae
add
xchg
js
js
cmp
jge
or
int3
add
sti
call
mov
std
xchg
or
ret
lods
daa
inc
fisttpl
sub
xor
add
sbbl
mov
push
cmp
add
sbb
push
iret
inc
add
imul
repz
addr16
pop
ret
and
or
or
cmpsl
popf
scas
mov
jmp
cwtl
push
cmp
iret
loope
in
inc
cs
test
cwtl
jnp
lret
mov
das
ror
lret
cld
out
pop
push
pop
hlt
pop
mov
or
out
xchg
sub
pop
enter
das
ret
outsb
push
loopw
dec
clc
jge
xorl
int3
negl
pop
xchg
das
inc
fsts
fdivr
mov
ss
push
adcb
data16
and
xor
aas
aad
xlat
sbb
pop
pop
fldt
push
ficompl
out
sub
sti
cmp
scas
xchg
and
pusha
jnp
lods
orb
xlat
add
inc
jno
out
lods
push
add
adc
lcall
cmp
aas
pushf
push
dec
iret
fsubr
pop
rolb
adc
imul
mov
shll
jg
lahf
aad
add
orb
sbb
push
jle
and
ss
mov
xchg
jb
push
or
andb
cwtl
push
rcll
pop
lea
fs
scas
add
add
test
lock
fisubs
inc
pop
mov
cmpsb
cli
pusha
sub
es
mov
xchg
lods
int
push
push
adc
push
fyl2x
insl
gs
mov
iret
jg
add
subl
or
jmp
js
sbbl
jae
pop
loop
pop
jmp
rol
xchg
test
daa
xor
fisttps
dec
hlt
mov
aas
adc
icebp
mov
mov
pop
adc
lds
mov
mov
mov
xlat
push
pop
sbb
pusha
shl
xor
repz
movsb
test
sarb
and
ja
sbb
mov
inc
ret
pop
in
fptan
subl
in
icebp
nop
aad
imul
dec
decl
loope
jmp
inc
pop
pop
incl
push
les
inc
push
adc
mov
popf
sub
into
xor
pop
mov
inc
adc
inc
fs
out
sub
cwtl
pop
stos
inc
mov
int3
lcall
test
jno
test
addl
nop
test
push
jnp
rolb
lret
mov
call
sti
add
fninit
cld
push
mov
xchg
test
add
xchg
nop
xchg
xor
xor
rclb
outsb
and
repnz
pop
and
cld
nop
xchg
enter
data16
or
mov
fwait
sbb
xchg
push
cmp
out
sbb
sub
mov
cmpsb
leave
jae
and
icebp
outsb
push
jp
popf
or
fwait
push
xchg
sbb
push
shrl
ret
pop
jbe
stos
jg,pn
dec
je
lret
xchg
adc
popa
xor
adcl
arpl
cltd
sub
or
movsl
pusha
pop
das
icebp
stos
push
push
adc
leave
arpl
loop
daa
mov
repnz
inc
popf
test
iret
jo
adcb
push
clc
sub
sub
add
clc
sub
and
sbb
inc
inc
sbb
nop
in
ret
add
out
inc
leave
repnz
jns
cli
jns
mov
xor
shl
popa
shlb
jno
les
jbe
pop
jnp
jp
test
push
or
lahf
jo
aaa
add
hlt
xchg
cmpsb
outsl
int
mov
adcl
or
jecxz
jns
mov
dec
out
sbbl
test
ss
cmp
pop
cmp
mov
push
jmp
push
mov
out
sbb
fsubrs
hlt
inc
pcmpgtd
mov
push
call
lods
lahf
jg
mov
mov
pusha
push
xor
xchg
mov
imul
cltd
fsts
add
outsl
notl
test
jge
or
or
pop
cld
sub
sbb
adcl
out
stos
mov
fidivs
push
sar
sub
aaa
xchg
xchg
xchg
movsb
mov
jecxz
movsl
mov
les
or
inc
or
xorl
lret
adc
cmpsl
aas
and
into
not
repnz
stc
lods
cmp
int
fnsave
jnp
lcall
loope
loopne
pop
cmp
in
dec
add
aam
movsb
gs
shr
repz
inc
mov
lret
bound
mov
sahf
pop
jp
and
call
shrb
dec
dec
mov
insl
adc
or
inc
mov
mov
sub
sahf
sahf
mov
loop
and
ret
scas
sbb
jg
int
jb
cmp
out
add
pop
loopne
ror
pop
jmp
adc
je
xchg
jmp
xchg
je
inc
mov
fidivs
sti
inc
test
adc
inc
push
adc
inc
scas
cltd
xchg
or
mov
shlb
and
popf
ret
cs
dec
jne
pop
aad
aad
pop
repnz
adc
movsb
adc
mov
cmp
and
std
adc
cmpsb
fisttpll
cmpb
push
insb
pushf
pop
and
int3
fldt
lods
sbb
sti
jno
arpl
imul
in
pop
sbb
outsb
es
idiv
jo
sub
jp
push
adc
xor
add
ja
call
xor
test
mov
pop
adc
sbb
pop
inc
add
mov
nop
fdivr
dec
xchg
cmc
lcall
jmp
cmp
inc
mov
scas
mov
bound
xchg
daa
sub
jle
push
push
pop
sub
movsb
pop
lcall
xchg
loopne
lds
cmpsl
push
xor
xlat
mulb
fidivrl
mov
xchg
test
inc
out
js
cld
sub
iret
xor
inc
pop
xor
cmp
push
mov
dec
cli
movsl
nop
imul
jmp
fwait
outsb
dec
insb
imul
cmc
cmp
xchg
or
dec
movsl
cltd
data16
or
xchg
mov
mov
jge
mov
sub
fs
jno
int3
test
addr16
pop
test
jge
ret
js
inc
stos
negl
test
hlt
xorl
mov
adc
or
or
or
cmp
push
mov
mov
orl
mov
nop
sbb
jbe
es
and
mov
xchg
or
jle
xchg
push
scas
mov
movsl
ret
inc
ret
pop
addl
in
mov
shlb
mov
iret
pop
mov
push
mov
sub
sub
orl
das
lret
inc
bound
sarl
push
push
jecxz
cmpsl
mov
adcb
ds
push
pop
adc
jb
or
sbb
aas
shlb
push
sbb
push
jmp
inc
push
scas
jg
call
test
pop
cmpb
cmp
rcrb
or
out
push
fidivrl
lret
test
call
cmpsl
aas
dec
push
bnd
ret
ss
pushl
icebp
aam
and
pop
push
cmp
sub
das
insl
dec
cmp
mov
sarl
ljmp
fbstp
lods
push
sub
add
mov
or
imul
push
pop
mov
iret
imul
icebp
sbb
std
ss
test
sbbb
rep
fs
and
dec
das
adc
rcl
mov
sti
insl
mov
mov
push
jecxz
dec
sub
pop
jnp
push
sub
out
int3
push
jno
fldl
add
adc
mov
test
bnd
mov
pop
mov
or
add
mov
adc
pop
cld
jb
pop
and
pushf
shll
rcl
out
sahf
pusha
push
mov
pop
mov
add
dec
adc
pop
repnz
mov
mov
lar
push
and
push
push
loop
xchg
pop
mov
or
mov
add
pop
pop
push
jg
sbb
jmp
adc
paddb
dec
adc
jecxz
rcl
cmpsb
adc
inc
xchg
cltd
jl
mov
pop
sbb
fnstcw
imul
lea
stos
sbb
insb
ret
fistpll
sti
xchg
mov
cltd
sub
fwait
inc
push
stos
inc
test
adc
lea
jb
fldt
dec
push
stc
inc
xor
xchg
push
inc
push
inc
cmp
jne
inc
pop
rcll
ljmp
addr16
mov
test
adc
in
cs
xor
into
pop
sbb
adc
test
dec
pop
jno
and
std
leave
and
adc
sbb
add
repz
xchg
repz
lea
repz
imul
pop
nop
lcall
movsl
xor
jbe
mov
xor
std
add
pop
shll
fisttpll
mov
mov
dec
sbb
xor
imulb
cli
xorb
push
imul
jae
jno
cmp
add
int3
mov
les
or
adc
in
sbb
fistpll
fs
inc
cli
and
push
mov
mov
push
xchg
movsl
mov
xor
xchg
out
mov
popl
sub
jle
mov
ss
add
pop
xor
fs
cmp
and
mov
loop
xlat
test
and
push
dec
push
cmp
sbb
cwtl
shr
leave
inc
in
mov
mov
aam
lcall
fcoms
imul
daa
lcall
or
int
das
jp
sub
push
cmpsl
jp
in
or
mov
lods
outsl
mov
jmp
ret
push
sarl
xchg
cmc
xor
test
call
xor
arpl
xor
add
lret
or
adc
jbe
out
adc
sub
jb
pop
inc
dec
dec
xor
push
push
cli
scas
out
call
jmp
and
js
ret
sbb
add
cltd
and
std
xor
xor
pop
cmpsl
test
cmp
jno
loop
jbe
adc
sarl
add
add
xor
bound
imul
les
cmpsb
mov
sbb
dec
pop
jle
mov
xor
scas
leave
out
mov
sub
jae
or
loopne
or
test
call
mov
pop
adc
aas
jle
jns
cmp
mov
xor
mov
push
stc
mov
adc
aas
mov
mov
cmp
movl
outsb
or
cmp
adc
push
jl
pop
xchg
ss
mov
mov
stc
mov
push
shrb
mov
in
adc
cmp
cli
js
shlb
sbb
jecxz
mov
jb
xor
cltd
or
mov
rorl
lcall
push
and
mov
push
insl
into
xor
int
inc
out
push
movsl
scas
or
pop
outsl
je
insb
sub
cwtl
gs
repz
out
test
fsubrl
add
faddl
cmpsb
xchg
mov
push
jmp
js
ljmp
sbb
or
sbb
dec
les
fsubrs
or
fnstsw
ljmp
adc
and
movsb
mov
cli
add
pushf
rcl
jns
stos
cmpsb
lcall
test
add
mov
add
sti
or
mov
cmovl
or
mov
ljmp
stc
test
data16
xchg
xchg
cmpsl
push
mov
sahf
xor
fldcw
out
ret
xchg
mov
sbb
das
adc
js
aad
inc
inc
es
cwtl
or
dec
fisttps
ret
enter
pop
mov
mov
mov
cs
clc
add
test
mov
cwtl
mov
pop
pushf
mov
fistpll
pop
subl
push
inc
fildll
inc
shll
cld
cmp
push
inc
pop
jg
jg
push
pushf
and
xchg
pop
clc
jmp
adc
out
jbe
cmp
gs
cmpsl
mov
adc
and
jle
dec
mov
movsb
dec
dec
imul
fmul
add
sbb
inc
sbb
adc
pop
mulb
int3
sub
jae
stc
shl
sbb
arpl
mov
xchg
and
pop
cwtl
push
lea
adc
cmp
push
les
sbb
fisubrs
jg
sti
mov
sbb
sub
add
outsl
ret
mov
loopne
scas
or
adc
push
cmpsb
xor
sub
mov
int
sub
aaa
mov
add
pop
sahf
int3
dec
dec
sti
add
sbb
add
jp
cld
jp
and
out
pop
sub
add
dec
cwtl
in
mov
jle
add
mov
pop
addb
pop
cld
pop
cmp
leave
pusha
je
shlb
sbb
aaa
push
stc
out
add
loope
inc
and
aad
cmpsb
xor
std
jp
sub
jmp
repz
jp
imul
out
test
pop
xchg
js
fsubrl
mov
repz
pop
sub
mov
sbb
fdivr
pop
pop
rcr
xlat
test
aam
outsb
sub
dec
fcomps
pop
adc
movsl
in
fsubrs
aad
pop
mov
or
push
loop
cmp
iret
shr
add
mov
dec
pop
xor
call
loopne
inc
fwait
push
pop
cmc
mov
adc
ja
loope
ds
test
mov
shl
jns
push
scas
push
mov
or
jo
cmp
loope
jle
lret
and
xchg
ret
test
inc
movsl
inc
pop
mov
mov
fcompl
dec
and
stos
add
jb
test
push
jno
xor
fsubs
xchg
out
je
mov
inc
jb
dec
in
or
arpl
test
or
sub
and
pushf
mov
pop
mov
xchg
cmp
push
xchg
orl
hlt
cmc
iret
dec
add
push
mov
xor
jbe
or
in
jnp
push
scas
orb
stos
fbld
icebp
aam
mov
inc
xor
xor
call
adc
dec
mov
ds
iret
shrl
add
imul
pop
cmc
jae
rorb
pmuludq
lret
inc
es
loopne
or
shlb
adc
addb
and
call
cld
subb
sbb
call
test
jno
dec
dec
mov
pop
lret
push
push
and
std
test
push
aas
dec
pop
add
push
out
inc
dec
int
xor
cltd
lret
ljmp
lea
mov
movsb
ja
inc
iret
ss
inc
jne
in
xchg
lods
inc
inc
js
out
in
movsb
mov
cld
lods
xchg
fists
mov
mov
adc
test
cmp
cmp
cmp
orb
jne
jo
loope
outsb
inc
push
mov
cmp
or
push
testb
mov
jle
xchg
sub
and
gs
rcrl
lret
unpcklps
bound
add
pushf
jl
mov
clc
sub
xor
pop
cmp
jle
add
ss
pop
mov
cmp
std
cs
testb
outsl
cmp
leave
cmp
std
pop
mov
jae
cmc
xor
and
mov
and
mov
pop
xchg
mov
in
or
lahf
sbb
aad
mov
ss
dec
stc
pop
jecxz
cmp
stos
inc
out
inc
cwtl
xchg
int
mov
enter
rol
es
fsubrl
js
psrld
push
fistpll
inc
push
xchg
ja
movsb
ja
cmpsl
mov
cmpsl
pushf
lret
lock
xorb
pop
sub
sbb
inc
pop
nop
pusha
testl
and
and
push
out
xchg
dec
in
pop
jmp
sarl
jg
mov
insb
push
call
push
sub
xor
mov
or
lahf
mov
sar
testl
into
fadd
add
sahf
cmc
add
and
sahf
push
push
mov
pop
clc
and
mov
dec
mov
push
mov
or
popf
mov
pop
sbb
test
mov
jp
xchg
fildll
in
imull
cmp
sbb
lea
dec
ficoms
push
fwait
jbe
and
popa
enter
push
mov
fdiv
ja
andl
sub
ret
xor
mov
cmp
movsl
jb
cs
mov
lcall
cmp
out
cmpsl
or
push
hlt
insb
cmp
cwtl
movsl
jg
mov
or
call
mov
mov
negl
rorb
stc
inc
jo
cltd
cld
mov
les
or
imul
addb
repnz
cmp
push
xor
movsl
mov
test
adc
dec
pop
jne
dec
xchg
es
dec
jno,pt
lahf
fs
jno
fidivrs
in
movsl
lds
es
pop
clc
pop
call
adc
mov
loopne
stos
push
mov
cs
xor
xchg
ja
hlt
mov
push
cli
pop
xor
inc
sti
std
mov
cmp
dec
lcall
dec
adcb
cmp
lods
in
jbe
stc
mov
data16
pushf
daa
es
mov
popa
jl
ficomps
pushf
pop
or
jbe
in
test
add
xchg
and
cmp
and
dec
sub
inc
cmp
xor
push
aaa
stos
jmp
mov
aas
std
cmp
inc
fistl
xchg
jb
and
mov
cmp
pop
cmp
mov
or
std
aam
push
pop
xchg
mov
clc
ljmp
arpl
mov
add
push
mov
xchg
sub
out
sub
aam
loope
out
adc
insl
mov
sub
sub
cld
pop
mov
imul
sub
shll
in
cmp
jae
cltd
push
pop
lods
push
mov
outsb
pop
fnstenv
sbb
jbe
xor
inc
movsl
xchg
sarl
sbb
mov
and
jmp
adcl
stos
fisubs
lods
decb
ficoms
mov
sub
and
ret
or
cmpsl
and
push
out
dec
push
mov
dec
xor
cmp
dec
ss
sub
pop
jo
push
bound
and
lds
movsb
es
stos
int
repz
cmpsb
or
in
pop
pop
js
clc
push
ljmp
or
xor
pop
mov
mov
sub
lret
or
add
popa
or
dec
xchg
lahf
dec
jmp
sub
or
mov
leave
jl
data16
push
dec
mov
cmpsb
cmp
sbb
popf
pop
lods
inc
out
outsl
jmp
or
std
mov
cmc
mov
cmp
stos
movsl
stos
icebp
pop
jbe
je
mov
sbb
fiadds
jo
js
xlat
in
or
pop
fmull
mov
xor
mov
inc
addb
out
nop
push
jge
cmp
arpl
in
push
cltd
mov
push
sti
xchg
mov
jle
inc
cs
mov
jmp
push
mov
inc
loope
jmp
mov
stos
push
montmul
cmpsb
or
sub
mov
sub
rorb
cli
sbbl
xchg
sbb
sbb
mov
dec
inc
add
std
test
rol
fistpll
jbe
add
mov
dec
lods
inc
cmp
jecxz
pop
dec
repnz
mov
pop
mov
dec
sub
xlat
scas
push
mov
mov
std
lods
ret
xor
mov
fistl
xorl
in
adc
jno
cwtl
and
outsb
xor
aas
xor
sahf
enter
xorl
mov
ljmp
fidivl
pop
or
jns
cltd
pop
int3
rcll
scas
enter
lret
test
std
fmul
outsl
pop
int3
pop
idivb
lcall
pop
lea
lock
mov
sub
aam
and
mov
pop
mov
xchg
add
add
jle
repz
push
outsl
push
jb
pop
orl
outsb
out
lock
enter
dec
loopne
jecxz
int3
fmuls
sbb
add
pop
dec
sub
imull
cmp
fistpl
iret
lahf
stos
lret
ds
add
into
adc
mov
loop
scas
ja
add
push
sub
daa
and
adc
jge
movsb
test
insb
adc
arpl
test
test
cmc
cmc
stc
jg
inc
es
push
or
mov
mov
decb
push
or
ljmp
sahf
xchg
dec
sub
push
pop
sub
sbb
call
xchg
dec
dec
cmc
add
xchg
inc
mul
jg
loope
in
popf
loopne
int
xchg
mov
adc
xor
fsubrl
mov
pusha
mov
xor
daa
mov
fisubl
push
sahf
xor
mov
inc
enter
dec
and
mov
cmpsb
lea
popa
mov
stc
fdivs
into
push
cmp
addb
inc
xchg
pop
fldcw
mov
out
aas
mov
mov
adc
xor
icebp
mov
and
sahf
das
imul
mov
std
sub
fbstp
xchg
ret
int
xchg
mov
fs
push
xchg
andl
xor
fpatan
dec
daa
in
cltd
pop
mov
lret
mov
mov
adc
pop
pop
cmpsb
icebp
sbb
sub
pop
je
movsl
mov
movsb
mov
jl
or
cli
xlat
sbb
or
dec
mov
jecxz
cmc
or
and
push
call
mov
inc
pop
shll
and
xlat
outsb
mov
out
pop
daa
enter
cwtl
cmpsl
stos
imul
pushf
int3
cs
movsl
cmp
pop
lea
leave
imul
mov
xchg
pop
arpl
push
mov
lods
aaa
jbe
ss
testb
mov
push
inc
mov
xor
lret
test
in
push
mov
shrb
sbb
pop
cmpsb
cmp
loopne
xchg
mov
les
sbb
sbb
lcall
pop
inc
cmp
mov
pop
xor
ret
enter
adc
int3
xor
mov
rcll
popa
add
and
mov
mov
call
mov
or
xchg
sahf
xor
icebp
es
mov
pop
and
lret
cltd
mov
into
inc
pop
or
lods
xchg
jb
cs
dec
movsl
mov
out
and
pop
nop
divl
jmp
je
aam
inc
xchg
scas
jmp
aad
mov
dec
cs
in
aaa
sahf
int3
loope
cmpl
inc
xchg
pop
push
fcmovnu
out
test
push
mov
dec
jns
sub
pop
int3
pop
outsb
repnz
pop
push
xor
lock
aad
les
ja
stc
daa
dec
ficoms
mov
cmp
push
outsl
lock
out
xchg
and
div
xor
add
sahf
inc
mov
and
aas
mov
movsb
mov
fstp
mov
cmp
cmp
add
out
push
and
rcr
in
adc
sbb
ds
push
mov
pop
hlt
jp,pn
test
sub
sahf
pop
inc
nop
sub
shrb
mov
test
mov
sub
into
jecxz
outsl
daa
sbb
mov
jg
push
int3
movsb
mov
bnd
and
pop
ret
pop
lcall
dec
cmpsl
mov
jb
shrl
xchg
push
ljmp
jno
push
mov
scas
les
lret
das
sub
popa
clc
or
jle
subb
lcall
cmpsl
lea
movsl
pop
mov
adc
dec
aam
xchg
cltd
mov
xlat
dec
aad
pop
cmp
movsl
inc
sub
push
mov
add
mov
pop
and
mov
pop
mov
loopne
in
cli
sti
xchg
sub
out
inc
cld
test
and
nop
stos
jns
leave
mov
lods
lea
mov
leave
add
sti
mov
shr
xchg
sub
into
adc
aaa
dec
pusha
push
inc
pop
push
inc
xor
jno
imul
xchg
dec
mov
mov
cmp
in
pop
popa
mov
dec
push
loope
cmpsl
pop
stc
fiadds
jno
fcompl
mov
jns
xchg
mov
cld
sbb
pop
dec
shl
jle
popf
pop
fiaddl
adc
pop
insl
addr16
sub
add
add
adc
addl
cmp
pop
xchg
jmp
pop
mov
lret
push
shll
mov
sbb
mov
js
iret
jecxz
sub
xor
incb
xor
xchg
fcompl
data16
inc
addr16
sbb
and
pop
mov
test
sarb
mov
xor
ret
pop
xchg
add
mov
loope
repnz
fmuls
test
dec
pop
bound
sbbb
mov
xor
mov
shr
pushf
add
mov
das
sub
stos
jge
movsb
jnp
rorl
adc
std
loop
and
popf
bound
push
movsb
repnz
mov
xor
mov
bound
in
test
mov
js
cmc
lret
bound
jmp
adc
cmp
test
mov
jge
sub
in
test
mov
lret
xor
lea
shll
add
fsubs
das
scas
pop
sbb
test
mov
xchg
cmc
loope
lea
and
jp
lret
outsl
xchg
cs
sbb
xor
jmp
into
jge
mov
aam
and
and
add
lods
push
dec
rol
dec
cld
inc
jp
xor
dec
popl
add
or
cmp
ficompl
sub
shll
cltd
lea
mov
xor
ret
jp
je
xchg
inc
cld
xchg
jns
in
sub
out
dec
fwait
pop
pop
ret
in
ret
les
sub
insb
xchg
fisttpll
orb
repnz
jns
mov
jne
or
ret
int3
cmovg
fnsave
jb
or
xchg
pop
ret
shrb
lods
inc
xor
test
aam
add
jbe
fidivs
cs
jae
mov
fidivl
cmp
mov
je
movsl
in
pop
int
xlat
add
dec
rolb
jnp
jb
cmpsl
sub
mov
dec
mov
push
xchg
dec
or
fstp
sub
adc
jecxz
adc
cld
test
and
sbb
xchg
jb,pn
enter
add
sbb
leave
mov
push
sbb
xchg
stos
push
movsl
fisttpl
sub
ja
les
mov
xor
or
adcl
popa
and
lods
sbb
fwait
jno
and
aaa
out
test
movsb
push
mov
iret
fstp
add
arpl
sub
mov
in
cld
inc
jg
mov
xor
std
xchg
xchg
sbb
mov
adc
cmp
loopne
int3
or
add
scas
test
repz
stos
fnstenv
inc
ds
icebp
cmp
outsb
dec
mov
cmp
pop
out
sbb
mov
xchg
fsubrl
insl
jo
xor
loope
sbb
inc
lods
shl
sub
out
inc
push
inc
mov
adc
or
ja
cwtl
cld
pop
dec
shlb
in
ljmp
sub
jl
inc
jae
sbbl
cld
and
movsb
xchg
mov
insl
stc
xchg
sub
lcall
jecxz
xlat
loope
add
call
rcrl
cmp
push
mov
pop
xor
cmpsb
mov
mov
dec
fdivrs
lret
mov
fimuls
xchg
imul
imul
shlb
sar
sbb
and
loop
adc
dec
xchg
sti
icebp
push
mov
ret
or
ja
dec
hlt
xchg
jg
test
je
stos
mov
test
out
sub
outsb
jg
js
test
addb
sub
pop
cmp
inc
and
sub
repz
dec
xor
iret
fwait
cmp
dec
jmp
testl
test
dec
bound
shl
addr16
test
repnz
pop
and
cwtl
mulb
adc
pop
mov
sub
lret
sbb
add
mov
int3
mov
leave
arpl
push
cmp
xor
adc
mov
les
pop
cmp
mov
rcl
push
mov
out
jg
push
xor
fldlg2
scas
or
aad
jle
sbb
jb
jecxz
out
adc
cli
pop
or
in
cmpsb
arpl
fs
imul
pop
in
cmpl
inc
xchg
lcall
pop
bound
psubusw
or
and
xor
push
into
xor
ror
sbb
into
cmpsl
sub
adc
in
test
insl
add
add
out
push
test
push
popf
sti
enter
and
daa
inc
dec
sahf
cmp
pushf
lret
into
mov
mov
lcall
and
inc
push
mov
movsb
inc
push
int3
jbe
bound
call
fstpl
pop
and
pop
movsb
mov
sarb
sub
int
inc
fcomp
stos
iret
push
jmp
int3
fnstenv
mov
les
cmc
dec
dec
pusha
stc
push
jns
xchg
jl
lret
xor
test
dec
sub
test
lret
movsb
ret
hlt
lds
insb
cmp
lret
ds
mov
frstor
or
cmpsl
test
arpl
xchg
pop
xchg
ljmp
imul
shrb
leave
pop
lock
shlb
dec
push
int3
loop
aaa
shrl
xchg
dec
cmpb
pop
mov
mov
mov
cmp
out
es
and
jno
jbe
test
fldt
bnd
aaa
mov
lret
data16
js
xor
mov
mov
popa
xchg
sub
push
sahf
test
adc
es
clc
mov
add
lods
and
int3
arpl
inc
xchg
dec
cltd
ja
out
mov
mov
inc
shlb
push
ss
xchg
repz
stc
or
ljmp
cmc
mov
cmp
hlt
ja
inc
test
loop
add
pop
andb
mov
push
outsl
dec
xchg
dec
inc
add
hlt
mov
push
adc
ljmp
mov
adc
mov
xchg
cmp
pop
mov
test
lods
fstpl
outsl
sbb
inc
int
int3
sbb
xchg
imul
sub
adc
sbb
gs
push
out
inc
hlt
xor
push
rcll
adc
cmp
pop
cwtl
arpl
dec
js
loope
loop
aaa
imul
xchg
xchg
std
sub
pop
sbb
icebp
dec
in
cli
mov
ja
into
fcmovu
cwtl
std
or
jle
jo
insl
ljmp
orb
add
sub
mov
pop
ss
ss
stc
sub
lds
mov
fbstp
sti
adc
cmpsl
gs
or
and
repz
push
dec
push
push
jno
jo
cmp
xor
fimull
dec
idiv
jbe
sub
or
sbb
cltd
int
mov
loopne
ss
push
xor
aam
aad
fsubr
mov
xor
jmp
adc
nop
sub
add
sub
sti
hlt
lea
test
xchg
add
stos
lock
cld
mov
test
iret
lret
sbb
test
mov
adc
cli
and
hlt
xor
popf
shlb
and
lock
xchg
hlt
aam
xchg
test
sbb
jmp
push
int3
mov
and
push
sarb
inc
repz
aam
mov
aaa
pop
add
mov
es
add
shr
gs
mull
push
adc
adc
cmp
inc
pusha
pop
fistpll
xor
sub
fisubrs
lock
out
xor
dec
addb
popa
add
sub
sbbb
lret
lods
pop
fldt
adc
cmpb
cmp
leave
mov
xchg
mov
xor
stos
pushf
sub
xor
push
jmp
loope
jno
aad
mov
push
mov
or
mov
addr16
jns
mov
sbb
aas
jb
xor
push
js
fcmove
adc
pop
aas
sbb
jge
sbb
xchg
movsl
ja
push
xchg
cmp
aas
add
imul
nop
sub
ss
push
jmp
dec
and
das
cmp
or
addr16
popa
push
mov
sbb
fdiv
xlat
mov
and
jp
and
dec
in
les
add
std
adc
mov
test
movb
aaa
out
mov
rorl
movsl
cmp
aas
mov
cmpsb
lret
negl
mov
dec
out
icebp
loop
das
fsubrp
adcl
pop
mov
cmp
daa
inc
and
pushf
xor
ss
aad
cmp
pop
xchg
pop
xchg
iret
xor
jb
sub
ja,pt
je
fsubs
mov
fstpt
repz
std
fdiv
in
cs
mov
mov
xchg
adc
push
fistl
adc
mull
cmp
jns
push
or
ja
cs
xchg
xchg
jne
pop
insb
push
dec
pop
xchg
mov
adc
pop
mov
into
fldt
jo
cmp
or
jno
aas
pop
xlat
pop
loop
ret
dec
and
inc
lea
nop
mov
sub
lods
ja
popf
lcall
or
mov
daa
adc
frstor
inc
pop
cmc
cli
add
idivb
scas
add
in
mov
xchg
test
sub
cmp
or
ja
pop
insl
test
scas
mov
pop
fwait
mov
push
rolb
icebp
dec
mov
lock
mov
pop
scas
icebp
xor
rclb
popf
lods
popf
lods
ret
mov
clc
jg
or
add
push
cmpl
cmp
push
mov
xchg
dec
enter
xchg
add
jmp
sbb
sub
leave
inc
leave
xor
push
out
dec
or
mov
inc
leave
test
hlt
sbb
jae
insl
adc
add
dec
dec
mov
xlat
ret
mov
inc
and
lea
dec
xlat
push
cmc
push
xchg
jge
dec
mov
mov
ja
nop
mov
jb
sub
pop
xor
push
adc
add
jne
sbb
divb
mov
call
mov
bound
ja
jp
loope
sbb
lock
inc
int3
popf
and
fcompl
pop
xor
cli
dec
push
xor
out
xchg
fs
mov
imul
and
outsb
cmpsl
add
pusha
cmpb
fbstp
ret
ficoml
push
ret
decl
inc
mov
enter
xor
mov
std
xchg
xor
sbb
insl
ja
pop
dec
mov
mov
loopne
popf
pop
cld
roll
inc
jnp
jno
or
add
cs
xlat
stc
insb
xchg
popf
sbb
sahf
xlat
lret
rcrb
shl
jnp
ljmp
mov
fnsave
mov
inc
test
testb
loope
dec
push
std
mov
clc
xchg
jnp
lcall
sbb
or
out
push
cwtl
jmp
mov
popa
pop
loopne
test
xchg
jmp
xor
stos
mov
xor
xchg
in
cmp
fldcw
dec
clc
push
and
scas
mov
aad
pop
enter
lahf
mov
rcll
or
cmpl
adc
fyl2x
popf
and
sbb
insl
mov
push
popa
pop
jmp
cmp
pop
popa
adc
popf
push
fistps
cmpsl
out
inc
sbb
mov
jne
jb
sbb
iret
sbb
inc
sbbl
push
add
repnz
mov
in
lcall
cs
lcall
ja
faddl
inc
push
mov
push
xor
pop
popf
xor
push
icebp
mov
add
in
mov
nop
jge
dec
and
sbb
fisubl
adc
int
fs
cmpsb
into
in
sbb
divl
dec
std
cmc
out
xchg
or
or
inc
mov
movsb
mov
fisubs
outsl
push
imul
cmp
pop
ret
sbb
pop
stc
push
enter
gs
cli
test
xor
push
dec
adc
lock
adc
pop
lret
add
insb
ss
dec
pop
sub
dec
sahf
or
imul
and
cwtl
fisubs
lods
stos
mov
test
mov
and
gs
sub
sub
aad
lret
lock
fs
mov
mov
lcall
aad
and
outsb
jg
push
mov
loope
js
int
aad
mov
aas
leave
xchg
repnz
push
imul
and
cmc
add
jae
int
add
fwait
jl
ret
testb
into
and
mov
push
inc
addr16
or
or
outsw
jmp
adcl
sbb
lahf
mov
sti
mov
inc
sub
mov
jns
pop
and
fildl
mov
enter
jecxz
aad
ja
adc
popl
xor
mov
push
xor
mov
xor
subb
jnp
fdivrs
and
in
inc
cwtl
xchg
ja
xchg
lcall
outsb
aad
push
fstpt
imul
in
mov
dec
inc
pusha
loop
mov
push
and
cmp
mov
fnstsw
insl
sub
movsb
add
into
jecxz
movl
or
cmp
pushl
pop
xchg
jmp
aaa
outsb
mov
dec
sbb
mov
inc
hlt
lcall
hlt
dec
test
adc
aad
mov
sub
hlt
lea
sbb
sbb
insl
cmc
inc
stos
mov
push
xor
mov
push
xor
mov
push
cmc
ljmp
sbb
xlat
xchg
mov
icebp
sbb
mov
jmp
ret
hlt
xlat
test
stc
ret
pop
cwtl
jne,pn
sbb
pop
into
mov
aad
ds
mov
das
ja
ljmp
out
jae
out
mov
out
mov
xchg
mov
in
add
shrb
inc
push
fsts
add
add
nop
xchg
inc
dec
mov
daa
add
sbb
outsl
jns
xchg
ja
or
add
dec
mov
add
inc
inc
repz
hlt
push
and
xor
in
rcl
hlt
pop
stos
stos
xlat
lds
rcll
xor
scas
sub
xlat
shll
aas
aad
movsl
and
outsb
and
sub
cmp
sbb
shll
mov
loope
pushf
out
sbb
shl
sub
mov
sbb
std
lahf
ss
dec
mov
jae
adc
jo
xchg
sbb
mov
hlt
push
cli
mov
push
nop
adc
ficompl
mov
aad
jnp
les
nop
sub
dec
xor
sbb
lahf
shl
pop
clc
or
mov
das
pop
dec
movsb
sub
test
out
aad
addb
das
adc
test
icebp
lds
lods
or
rorl
pop
lock
rep
mov
push
shrl
or
jno
push
dec
dec
fldl
cltd
es
dec
stc
data16
xlat
xchg
cmp
sti
lods
ljmp
lods
mov
sbb
jb
addr16
push
jno
mov
icebp
mov
lock
lcall
jo
fnstenv
lea
int3
cli
mov
addr16
js
sub
icebp
subb
mov
mov
pop
cmp
mov
adc
inc
fcomps
decb
jp
icebp
mov
mov
sbb
jmp
add
adcb
inc
mov
mov
xchg
loope
adc
pop
add
pushf
addr16
pop
cltd
mov
mov
and
and
into
xchg
jmp
push
add
int3
loopne
out
outsb
mov
mov
outsb
loop
subl
or
pop
addl
or
jl
or
push
xchg
sti
and
jns
lret
push
ds
mov
pushf
les
mov
or
pop
mov
movsl
into
jb
inc
imul
out
or
xchg
push
jle
imul
sbb
sbb
lahf
mov
mov
lret
mov
cmp
mov
leave
and
sub
xorl
cmpsl
pop
add
mov
dec
cmp
jecxz
dec
mov
mov
push
ret
addr16
xor
or
xor
inc
jecxz
sub
ret
xor
push
repz
or
mov
std
pop
outsl
adc
xchg
mov
dec
mov
adc
mov
sti
xchg
adc
adc
push
popf
cmp
repz
mov
sbb
and
das
jnp
clc
add
stc
das
sub
int3
nop
stos
rep
pop
xor
sub
xchg
lods
push
sti
adc
insb
sub
sub
mov
jle
sbb
dec
adc
std
dec
push
mov
or
std
add
ret
adcb
pusha
push
pop
sub
jp
out
push
std
movsb
aam
lock
xlat
ja
jl
test
inc
dec
sti
or
stc
and
push
sbb
sub
test
pop
mov
or
jne
mov
jp
mov
jl
mov
jno
arpl
inc
test
inc
fs
xchg
inc
loopne
imul
insl
mov
pop
and
daa
or
push
test
lahf
jns
sbb
shl
cmp
pop
add
cld
xchg
xchg
sub
xchg
pop
jge
sbb
daa
xchg
aaa
popa
and
xchg
pop
dec
fisttps
cmp
xchg
mov
and
movsb
ret
sub
shl
mov
leave
add
push
cmpsb
std
xchg
push
hlt
ja
hlt
sti
dec
mov
jns
pop
dec
lahf
lret
stc
adc
and
mov
adc
sub
mov
out
pop
pop
das
test
lret
std
inc
push
out
cld
xor
mov
xchg
cld
pushf
into
inc
inc
inc
sub
pop
xor
ja
xlat
cwtl
pop
jbe
leave
and
lcall
push
mov
push
add
push
js
jns
enter
out
lret
andl
out
sti
push
pop
jne
sub
popf
jg
lock
jecxz
fsubrp
sub
into
or
in
cmpsl
xor
dec
jl
add
lods
mov
pop
sarl
and
test
fdivrl
shrl
xchg
pop
mov
adc
dec
in
adc
ret
inc
js
ja
imul
inc
add
fildll
mov
push
mul
out
xchg
sbb
ss
mov
mov
adc
and
in
lods
push
mov
jecxz
js
fbstp
incl
inc
out
jmp
xor
push
in
mov
dec
dec
cmc
jecxz
sub
aam
fistpl
loopne
fxch
xor
sub
jb
fs
movb
aas
dec
dec
and
roll
and
aaa
mov
xchg
shr
sahf
adc
mov
loop
out
in
cmp
inc
bound
jo
bound
jge
push
inc
lret
adc
packuswb
inc
adc
dec
out
lea
sub
dec
outsb
ljmp
jg
fnsave
dec
pop
cmp
sbb
dec
mov
imul
int3
shrb
in
push
push
bound
inc
jg
imull
daa
inc
xor
out
mov
icebp
add
mov
push
push
xchg
inc
popl
ret
push
in
icebp
insl
int
push
ficoms
ficompl
jmp
test
mov
bound
push
ja
int
sub
ret
xor
in
or
sbb
loope
pop
adc
mov
pop
jae
or
lcall
outsb
cmp
mov
xchg
inc
mov
jge
enter
psubusb
mov
jp
mov
pop
adc
rolb
stos
fldcw
sti
mov
or
cltd
adc
enter
jecxz
icebp
dec
add
dec
mov
sbb
jp
push
or
add
cld
pop
push
call
cmp
ret
add
in
and
xchg
mull
push
push
insb
imul
mov
xchg
repz
loop
cmp
cmp
test
mov
cmpsl
ds
sub
sbbb
pop
lods
mov
jecxz
cwtl
xchg
or
adc
jo
mov
fists
xchg
push
or
sub
out
scas
push
xor
mov
imul
sub
outsl
push
insb
jl
mov
cltd
in
ret
sub
sbb
ret
xlat
jmp
mov
cmpsb
sbbl
shrb
xchg
loope
push
push
loop
xchg
popf
insl
es
aaa
hlt
pop
mov
push
jno
mov
jmp
orl
cld
lock
adc
inc
add
leave
xchg
loop
mov
and
cmp
lds
mov
stos
shll
dec
xorb
sbb
cltd
and
jae
or
sub
or
sbb
setle
jmp
xchg
push
ror
push
rcrb
or
stos
inc
pop
jnp
aad
push
mov
mov
bound
jns
fmuls
lcall
push
daa
aaa
push
out
cltd
into
pop
mov
sti
and
test
mov
push
je
out
ljmp
mov
ret
mov
mov
loopne
xchg
fisubs
sbb
sub
xchg
pop
jge
or
xchg
call
mov
fwait
daa
fwait
out
xor
xchg
test
call
fiaddl
fisttpll
in
subb
lods
in
inc
push
je
js
inc
jno
jecxz
adcb
jnp
jne,pn
std
data16
mov
mov
imul
aas
call
mov
cltd
loopne
xor
adc
jmp
outsb
sub
pushl
mov
ficomps
scas
push
pop
mov
outsl
jns
test
js
and
pop
mov
scas
and
jne
in
push
mov
std
or
xchg
test
inc
mov
jp
sahf
or
cmp
jne
add
dec
jb
loop
jo
fsubs
adc
enter
and
cmp
fmuls
das
xchg
jb
test
adc
subb
fidivrs
push
rcrl
jns
addr16
jo
fmul
into
jae
ljmp
je
push
adc
or
mov
ss
mov
inc
push
jno
pushf
data16
rorl
icebp
test
add
call
in
call
mov
popf
sahf
adc
jns
cmp
mov
ja
mov
imul
aaa
jbe
cmpsl
push
loope
mov
cmp
jecxz
cli
out
mov
jb
adc
rolb
bound
shlb
xchg
mov
sub
xor
stos
repz
inc
and
mov
in
repnz
mov
xor
shl
fmul
mov
adc
cmp
push
add
cmp
or
bound
inc
mov
fs
fstp
pop
pop
cmp
jb
lcall
sahf
clc
shlb
xor
ds
in
pop
push
orb
pop
popl
lahf
mov
inc
pop
lea
aas
push
mov
sbb
add
call
add
cmp
imul
fsub
cmp
fists
sbb
inc
test
int3
cwtl
jp
mov
and
mov
ja
push
leave
and
or
add
cmp
int3
cmp
jb
or
cltd
and
testb
rcrb
and
test
ja
pop
iret
or
arpl
movb
pop
and
notb
js
imul
cs
xor
mov
fimuls
inc
ret
mov
sar
out
sub
enter
add
or
jb
movsb
mov
add
iret
fsubs
bound
stc
test
add
shll
mov
out
cmpsl
adc
fbstp
push
cmp
cmp
clc
shll
sti
pop
test
loop
les
cmp
fildll
ret
push
test
xor
test
jge
js
loopne
pop
sarl
in
mov
bound
sti
add
cmp
fstpt
fwait
xor
push
in
out
cmp
fstpl
rolb
mov
jae
mov
xchg
sbb
adc
rorl
push
repz
loopne
mov
push
push
or
lahf
dec
loopne
bound
dec
jne
cmp
aad
pop
scas
adc
in
push
push
lods
xor
cmp
push
mov
pop
lahf
lods
xchg
loope
shlb
cmpsb
mov
fs
add
add
jb
push
sbb
lret
insb
add
enter
int
and
xchg
in
icebp
cltd
push
xor
cmpb
cmpsl
bswap
loope
movsb
inc
popa
fistps
jecxz
pop
xor
cmp
pushf
lret
pop
sbb
ret
jge
inc
loopne
cmp
enter
out
sbb
lret
test
lds
add
mov
pop
mov
jge
cmp
loop
mov
jo
or
xor
bound
cltd
dec
mov
xchg
mov
mov
mov
fcmove
je
jl
leave
sbb
mov
mov
js
dec
pusha
mov
cmc
pop
pop
outsl
lds
mov
add
mov
andl
subl
mov
stos
pusha
int3
out
gs
enter
cld
lcall
push
pusha
in
dec
fstpt
xor
dec
push
call
shll
adc
fsubr
adc
push
stos
std
movb
dec
adc
fildll
sarl
loop
sbb
jge
dec
popf
jno
iret
insl
dec
fidivl
insl
fcmovne
sarl
andl
data16
enter
push
cmpb
cmp
push
addb
mov
negb
dec
add
mov
cltd
cmpsl
test
enter
push
push
das
stos
mov
jae
mov
gs
jo
leave
cmpl
and
cwtl
adc
nop
push
loop
add
out
lods
out
push
mov
push
xor
mov
sbb
cmc
test
mov
push
add
stos
out
xor
adc
fiaddl
xchg
pop
xorl
test
jae
sub
push
arpl
cmp
xor
push
cld
cmp
adc
les
or
mov
cs
daa
in
aam
push
ljmp
adcl
jo
mov
cld
pop
clc
sbb
xchg
rclb
inc
test
ret
or
push
std
push
xor
push
addr16
jecxz
mov
out
adcb
mov
mov
push
jb
and
cmpsb
dec
add
insb
out
adc
xor
mov
inc
std
dec
jo
ds
cmp
inc
ss
sarl
adc
subb
repnz
or
shrl
xchg
and
dec
push
loopne
insl
psubq
les
test
scas
into
test
ljmp
inc
lods
into
test
add
cmp
add
popa
ret
dec
add
or
iret
aas
lods
and
inc
popa
sbb
jne
jns
lods
xchg
pop
lcall
inc
add
andl
scas
mov
lret
into
das
mov
fmulp
xor
addl
xchg
inc
fs
test
je
adc
sub
testl
stos
arpl
sbb
sbbb
int3
movsb
lea
and
push
push
jb
insb
sub
lahf
xor
les
fwait
test
push
imulb
push
cmpsb
inc
inc
xchg
add
dec
lods
xchg
inc
jne
insl
push
sbbb
decl
sahf
sbb
jge
mov
inc
les
jecxz
pop
leave
xchg
repnz
mov
aaa
jae
mov
sti
mov
shrl
push
pop
push
push
mov
xchg
sub
jno
xor
jo
ljmp
repnz
pop
adc
in
mov
lock
fucomp
idivl
jbe
out
dec
test
sub
xchg
popa
dec
enter
xor
pop
pop
fdivr
lcall
jbe
shr
test
addr16
lods
push
fstps
or
arpl
fnstsw
sahf
addb
mov
pop
and
sub
push
xlat
lahf
testl
mov
out
test
loope
hlt
in
addr16
mov
roll
popf
hlt
push
lds
sbb
lcall
sbb
inc
sbb
pop
xchg
addb
enter
sub
insb
sti
shl
add
rorl
mov
ret
pusha
cmc
push
test
cwtl
stos
and
es
or
test
add
in
mov
aaa
jg
or
mov
xchg
das
mov
loopne
nop
push
sub
dec
enter
and
aad
fisubrs
fisttpll
mov
fsubrs
sbbb
addr16
mov
fisubl
mov
bound
and
mov
and
int
mov
lret
pusha
pop
lret
sbb
movb
in
jmp
repz
addr16
jmp
pusha
fdivrl
test
aas
and
fstpl
sarl
inc
fs
jg
push
inc
mov
mov
mov
adcl
and
adc
ficomps
lret
and
or
xor
nop
pop
sub
nop
arpl
repz
dec
fwait
into
loop
xlat
std
or
xor
fmulp
mov
scas
ss
cmpl
stos
insl
test
sbbl
ljmp
push
pop
repz
leave
mov
mov
cmp
in
xor
cltd
mov
inc
ret
cmpsl
icebp
jae
arpl
negl
mov
mov
clc
in
xchg
push
push
adc
movsb
fwait
repnz
loopne
jecxz
rcl
cmc
jmp
subl
int
outsb
sbb
or
mov
adc
lret
outsb
adc
jle
push
insl
xor
aas
lock
sbb
push
fcmove
into
add
loopne
sbb
xchg
cmp
popf
cmp
je
ficoms
mov
jb
cld
mov
js
xor
inc
sahf
rolb
mov
lock
push
in
xchg
cwtl
jmp
mov
xor
add
dec
aad
hlt
inc
cltd
mov
pop
push
xor
add
lods
cwtl
std
mov
std
xor
aaa
jmp
cmpsl
sbb
push
in
lods
popl
test
inc
mov
xchg
sub
cli
jle
pop
mov
dec
fxch
add
cmpsl
mov
outsl
jnp
mov
lds
ret
test
inc
pop
lea
sahf
in
xchg
sub
int3
lahf
cmp
out
in
sub
sarb
call
mov
jp
jns
jg
inc
mov
stos
add
push
sub
push
loop
lds
repz
arpl
lds
jae
xchg
adc
aam
push
push
mov
inc
cld
popf
test
and
lcall
jp
das
xor
add
loopne
dec
sbb
mov
jl
xchg
mov
pop
or
or
lea
lret
jae
hlt
mov
adc
adc
bound
divl
or
psadbw
in
stos
ds
test
mov
int3
insb
rcrl
mov
sub
lea
outsl
insb
add
add
adc
jl
in
cltd
sbbl
mov
push
pop
out
jne
and
xor
daa
adc
clc
add
sbb
xchg
sub
insl
jp
lahf
inc
cld
fcoml
sub
push
ljmp
jno
mov
jmp
fstpl
or
icebp
lods
fadd
sub
jmp
sub
into
and
or
pop
or
cmp
mov
xor
mov
and
movsb
mov
or
jnp
mov
or
xlat
mov
xor
adc
sub
pop
movsb
repz
adc
jmp
jnp
shl
cmpsb
fidivs
fsubr
inc
xchg
mov
push
ja
xchg
xor
xor
jmp
ja
imul
and
inc
loop
inc
call
push
out
cmp
sbb
call
les
dec
leave
sub
pop
inc
mov
shrb
repnz
add
test
jns
adc
cmpsl
aad
mov
mov
ljmp
push
mov
into
push
and
fisubs
push
inc
pop
loope
pop
cmp
inc
test
cltd
les
loop
dec
xor
aam
bndstx
inc
leave
in
imul
xor
jmp
cmp
xchg
stos
rolb
in
xchg
mov
xchg
mov
cmpsb
mov
call
mov
mov
mov
ret
jne
sub
insl
add
dec
js
mov
fnstsw
dec
or
pop
fisubs
xlat
fdivr
jecxz
stos
gs
inc
rol
out
cs
adc
shrl
je
jle
pop
movsl
sub
iret
xor
jns
dec
outsl
push
xchg
jl
cmp
push
out
sahf
adc
or
ret
xor
or
sbb
sub
cmp
mov
mov
movntps
and
ja
pop
stos
sbb
jl
das
mov
popf
mov
mov
adc
stos
mov
les
cmc
loope
fnstenv
mov
fsubs
stos
iret
push
xchg
jne
add
lds
enter
jecxz
xchg
lret
imul
sub
repz
stc
and
xchg
cs
fadds
test
mov
xchg
loope
movsb
adc
pop
inc
cmpsb
lea
lock
jb
mov
std
mov
dec
add
test
inc
or
push
inc
push
push
pop
mov
ja
fbld
cmp
and
xchg
fistpl
fadd
jns
mov
sub
jge
mov
sub
jns
jmp
aad
loope
fs
pop
mov
gs
dec
stos
xchg
cmc
pop
sbb
pop
mov
adc
sbb
scas
inc
rorl
int3
es
sbbb
lahf
mov
cld
inc
aam
jge
leave
add
ud1
cmpl
dec
dec
call
push
ljmp
jno
movsl
inc
test
out
jns
lods
outsb
xchg
or
int3
aam
xor
test
mov
mov
notl
aad
pop
cmp
mov
sbb
fdivs
dec
cmp
jmp
add
shrd
or
xorb
cmp
nop
dec
into
sbb
ret
mov
adc
sub
aam
in
insl
xor
cmp
dec
push
iret
inc
inc
bound
daa
outsl
pop
mov
jecxz
pcmpeqd
pushf
hlt
sub
pushf
dec
sahf
ss
adc
fiaddl
and
nop
jmp
adc
ret
push
loope
out
mov
test
push
fwait
push
push
rcl
mov
data16
test
pop
fistps
xorb
inc
inc
bound
jb
sub
imul
rcll
addr16
pop
sub
aad
jecxz
loop
sub
repnz
in
sub
jo
repnz
aas
test
rcrl
and
push
push
xchg
shrl
add
mul
das
mov
cmp
push
jp
idivl
mov
mov
mov
lock
or
rcl
outsb
xchg
xor
jmp
pop
mov
test
inc
xchg
mov
dec
insb
mov
jmp
pop
dec
fstl
outsl
push
inc
lret
data16
and
pop
mov
add
test
sub
dec
add
mov
push
fwait
push
lods
popl
test
jg
mov
negl
daa
outsl
add
mov
inc
xor
inc
push
or
ss
sti
pop
imul
jns
jmp
movsb
sbb
or
ficomps
and
xchg
xchg
gs
lods
clc
add
pop
jae
jns
out
xchg
sub
or
lcall
lcall
arpl
insb
repz
notb
call
and
aaa
dec
loope
loop
std
mov
xchg
adc
push
push
scas
les
leave
mov
mov
xchg
pop
shl
addl
out
loop
xchg
addr16
aas
loop
add
lods
les
pop
mov
mov
sbb
stc
xchg
xchg
jecxz
das
mov
pop
lods
out
or
inc
sub
adc
cmp
mov
pushf
lds
jmp
inc
into
out
mov
xor
add
adc
mov
add
mov
out
in
mov
inc
inc
push
jmp
jnp
jmp
pop
aaa
hlt
in
std
inc
cmp
inc
pop
xor
lcall
test
arpl
xor
cmp
mov
add
sub
jecxz
inc
add
xchg
into
gs
mov
jae
inc
into
sub
movsl
daa
cmp
adc
push
inc
ja
cli
jp
mov
insb
pop
fistps
aas
movsl
xor
cld
hlt
mov
outsb
jp
mov
mov
mov
test
data16
pop
out
add
and
lock
inc
pushf
les
inc
jle
mov
mov
leave
dec
out
sahf
dec
gs
push
fs
mov
rcll
jl
in
mov
pusha
int3
out
cld
fstpt
xlat
stos
mov
mov
mov
outsl
push
fs
pop
lea
xchg
push
aam
fcompl
fisubl
cmp
hlt
sbb
adc
jnp
push
jg
stc
sbb
js
dec
fsubrs
and
pop
fmull
dec
das
jge
mov
out
fsts
pusha
mov
xchg
ja
fadd
dec
dec
dec
xor
out
into
dec
jge
daa
enter
pop
xor
push
sub
mov
jbe
in
into
cmp
sub
data16
xchg
shrl
repz
lea
adc
sbbb
loop
mov
rcrl
jmp
push
mov
sub
movsb
xchg
jmp
cmp
out
jnp
daa
lods
adc
cmp
ret
sbb
jno
divb
in
sbb
out
inc
imul
pop
mov
push
xchg
ss
xlat
in
sbb
and
mov
xor
fcmove
sbb
mov
lahf
mov
jge
ss
fnsave
adc
cmc
pop
in
loop
xchg
mov
pop
mov
push
xchg
fldcw
jb
mov
jmp
das
cwtl
stc
and
dec
inc
push
push
push
ret
clc
test
fwait
push
pop
inc
jg
pop
mov
adc
cld
push
inc
test
pusha
add
stos
push
cmpsl
ds
in
lea
or
hlt
sbb
js
pushl
sbb
xchg
aas
dec
xchg
lds
jle
in
jno
fidivl
popa
nop
dec
jecxz
mov
imul
je
mov
mov
clc
cmpsl
ja
or
mov
pop
hlt
pop
fbstp
lock
nop
fstpl
cmp
cmp
enter
out
das
add
je
jne
sbb
mov
test
or
mov
loop
sbb
mov
scas
roll
adc
push
shll
aad
inc
fcomps
mov
popf
stc
push
and
shll
jae
jb
pop
jne
xchg
add
outsb
cmp
lahf
push
stos
in
insl
add
call
addb
pop
mov
pop
pusha
or
nop
pop
leave
xor
inc
push
mov
inc
mov
or
popf
shl
inc
insb
mov
mov
mov
iret
or
jne
in
test
loopne
cmp
inc
scas
fnsave
lcall
push
decl
mov
xor
jb
aaa
stc
push
mov
sbb
leave
sti
xchg
lods
rorl
out
data16
jle
xchg
cwtl
pop
std
or
xor
cwtl
xchg
and
mov
adc
inc
push
out
out
scas
pop
icebp
mov
loope
sarl
and
mov
mov
outsl
test
ret
pop
test
maxps
mov
repz
sbb
outsb
sub
push
sub
pop
push
or
mov
adc
stos
push
lret
data16
pop
xor
nop
aam
mov
jmp
jge
int3
jge
into
test
push
inc
inc
movsb
ss
jne
xor
mulb
xor
sbb
cwtl
int
jmp
out
cmp
cmp
fistpll
dec
shll
fisubrl
mov
mov
out
inc
pop
mov
xchg
data16
lods
xor
or
out
mov
cmp
xchg
and
and
negl
cmp
icebp
adc
leave
in
nop
out
int3
scas
sub
mov
add
shr
gs
dec
inc
jmp
mov
fildl
scas
mov
out
lret
mov
xchg
in
dec
aaa
or
test
popa
jmp
mov
sub
jge
mov
and
repz
or
enter
cmp
xor
rcrl
aam
lods
mov
and
imul
or
fisubrs
hlt
mov
mov
adc
out
push
out
sti
or
push
stos
push
repnz
mov
scas
movsb
and
cmp
or
push
js
cmp
scas
mov
fsubrs
vcvtsi2sdl
sbb
pop
and
inc
fnsave
lea
std
fs
fstl
mov
sti
cmp
jno
outsl
pop
sbbb
repz
aaa
imul
mov
and
cmc
int3
sub
aas
loop
add
xchg
xor
ja
fsts
mov
cli
jne
test
cmp
inc
nop
cmp
ret
into
jo
push
mov
dec
or
mov
xchg
call
cli
lret
hlt
mov
adc
cmp
nop
test
pop
jne
or
cmp
push
scas
pop
pop
inc
sbb
mov
loopne
jo
mov
out
in
test
cmp
sar
into
mov
loop
or
lock
decb
cmpsl
jl
stos
sub
dec
xor
loop
mov
push
push
in
mov
divl
arpl
aaa
stos
mov
movsb
sub
xor
clc
notb
sub
mov
std
add
mov
out
xchg
in
test
fxch
pop
xor
ret
addr16
outsl
jmp
sbb
adc
add
jns
outsb
stos
enter
jbe
daa
incb
dec
xchg
add
or
lahf
out
or
loope
out
inc
fdivs
pop
ret
cmpsl
sub
sbb
ds
fistpll
iret
subb
adc
jp
mov
add
decl
push
or
lcall
mov
add
xchg
pop
push
push
mov
adc
inc
popf
addr16
dec
aas
dec
int3
and
fs
inc
fimuls
xchg
insl
sti
adc
loop
aas
orb
aad
push
rcrb
mov
loope
stos
cmp
push
aaa
sub
jg
dec
icebp
mov
in
mov
idivb
mov
lods
inc
ret
ret
scas
push
add
sbb
adc
sbbb
test
lods
sbb
push
pop
daa
pop
out
xor
mov
ljmp
outsl
ficoms
movsl
and
mov
adc
test
mov
xor
xchg
dec
adc
inc
into
popa
movsb
add
mov
dec
pop
xchg
daa
and
mov
test
into
and
test
inc
ret
pop
imul
and
xor
push
stos
jmp
mov
cmc
imul
lret
out
dec
mov
push
stos
pop
jb
iret
and
bound
xor
sub
xchg
xor
mov
sbb
fmuls
aaa
jb
cmp
adcb
jg
mov
or
enter
and
imul
fists
mov
test
jl
pop
out
mov
xor
xor
mov
arpl
fwait
les
push
ret
jmp
cld
jae
mov
adc
daa
jae,pn
cmp
xchg
push
loop
jo
jg
sbb
arpl
insl
std
rorl
push
shrl
nop
out
pop
imul
aaa
out
push
pop
dec
mov
addb
loop
inc
and
xsha256
cmpsb
push
dec
ss
add
adc
popa
gs
xchg
sbbl
push
push
insl
add
lret
push
les
shlb
inc
ljmp
fxam
inc
mov
or
and
repz
mov
cld
pop
ja
adc
test
gs
mov
fs
sub
add
xor
mov
sbb
mov
stos
mov
subb
adc
and
mov
out
sbbl
or
pushf
pop
rorb
data16
and
xchg
sti
dec
movsl
cmpsl
xor
ljmp
or
sub
pushf
mov
ret
jae
or
test
in
and
and
movsb
jnp
jl
sub
mov
pop
mov
adc
add
das
sbb
enter
jbe
fimull
out
inc
jl
mov
sbb
outsb
hlt
jp
mov
aad
mov
mov
pop
js
mov
dec
in
dec
out
jp
addr16
push
lret
mov
push
fimull
mov
add
call
xor
jae
cld
push
shlb
popf
ljmp
mov
xchg
jno
mov
inc
sahf
out
test
ja
icebp
xor
xchg
into
or
rolb
mov
mov
enter
scas
iret
mov
pop
mov
scas
push
xchg
push
cmpsb
inc
mov
fsubrs
lods
dec
pop
nop
bound
xor
jle
das
adc
lahf
pop
loop
or
inc
nop
adc
fnstenv
mov
and
xor
jge
mov
ret
outsl
fs
mov
add
mov
fistpl
pop
add
and
mov
popa
jp
cmp
xor
xchg
lcall
inc
push
lcall
xchg
mov
xchg
lock
sbb
pop
push
cwtl
jg
or
and
push
sub
cld
daa
cmp
pextrw
cmp
orb
mov
and
adc
fldl2t
jno
add
lods
lcall
out
iret
xor
sbb
xchg
fdivrs
push
outsb
testb
lcall
ss
push
and
lods
push
jns
nop
add
dec
in
test
mov
or
push
nop
into
gs
push
fcmovne
cmp
mov
push
inc
mov
shrb
jbe
adc
es
scas
js
movsl
imul
push
inc
lahf
movsb
jno
sbb
call
mov
hlt
xor
dec
loop
jb
in
push
scas
or
clc
cmpb
mov
and
xchg
add
jae
loopne
ret
ljmp
popf
popa
arpl
outsl
dec
xchg
dec
loope
das
das
ss
call
mov
sbb
cld
fdivs
sbb
shlb
lods
mov
js
jbe
dec
pop
mov
pop
push
mov
jbe
sub
mov
push
push
sti
dec
inc
shrl
pslld
lahf
mov
nop
dec
call
sbbl
mov
outsl
add
add
push
push
pop
loopne
inc
aaa
lea
xor
push
test
leave
cmc
cmpsl
mov
adc
in
test
mov
dec
dec
xchg
add
jo
sub
dec
inc
mov
je
mov
sbb
adc
imul
fisubs
pop
push
outsl
jnp
sub
loopne
sbb
into
sbb
dec
lds
mov
xor
cmp
dec
out
pop
test
shl
mov
adc
jnp
push
fwait
aam
fsubr
cmc
pop
into
es
ftst
xchg
cmp
add
mov
arpl
lret
jo
dec
xor
ljmp
dec
in
lret
out
or
movsb
xchg
daa
pop
inc
sbb
jnp
xor
pop
arpl
push
adc
mov
stc
rcr
mov
adc
loope
sti
mov
shrl
ret
adc
roll
daa
fidivl
sti
shlb
arpl
pop
std
gs
mov
enter
sbb
push
jae
push
clc
les
sub
fmul
fldt
mov
pop
sahf
xor
call
cmp
idivl
adc
out
jp
push
mov
add
rcll
cmp
mov
enter
cwtl
testb
push
inc
les
add
mov
stos
enter
ret
rcrl
shrl
fldl
cmp
test
jae
ret
mov
jnp
mov
jg
xor
pop
cmp
int
fwait
cld
sub
in
in
push
ja
mov
daa
scas
mov
notb
add
ljmp
cmpsl
sbb
inc
pop
outsl
cmp
pop
sub
out
push
inc
inc
pop
pop
cmp
sbb
dec
fmull
mov
fdivs
lods
ds
sub
pop
sti
shr
xor
sub
pop
fistpll
icebp
sub
push
push
nop
out
in
loope
jmp
rcrb
mov
push
and
cmp
add
mov
pushf
mov
lcall
hlt
push
adcb
pop
enter
and
mov
cmp
loope
out
sub
lret
mov
je
out
push
mov
cmp
sahf
and
scas
cmp
ljmp
or
dec
adc
ss
jecxz
xchg
push
jne
mov
inc
push
push
hlt
ret
sbb
hlt
shll
jnp
mov
data16
cmpsl
hlt
in
cmc
daa
cmc
xchg
adc
add
mov
and
xchg
mov
test
repnz
lret
or
dec
cli
pushf
jb
xor
jo
mov
shrb
add
add
adc
mov
mov
popa
mov
xchg
xchg
add
jae
xchg
rcl
loope
sbb
inc
mov
sahf
in
call
icebp
data16
xchg
cmpsb
cld
jle
fisttpll
int
xchg
outsl
pop
scas
adc
test
pop
push
xchg
gs
cli
cwtl
mov
xchg
xchg
sti
out
inc
pop
xchg
and
cld
jnp
mov
pusha
popa
aam
outsl
or
andb
stos
push
in
xchg
jnp
push
nop
mov
push
addr16
lods
loope
fcmovnb
mov
cmp
repnz
fbld
xchg
in
enter
in
sbb
addr16
movd
popa
pop
push
sub
or
push
arpl
aas
pop
jecxz
ret
and
fwait
cli
icebp
lret
gs
icebp
das
push
and
pushf
xlat
mov
xchg
xor
lahf
in
mov
cmp
es
inc
push
scas
in
popf
cltd
mov
repnz
nop
fldt
mov
jmp
in
jae
dec
loope
cwtl
inc
test
pop
ljmp
add
cmp
repnz
cltd
test
mov
test
clc
out
movsl
incl
push
or
pop
xchg
repnz
mov
pop
insb
push
or
pop
jg
sbb
mov
hlt
loope
mov
mov
fst
stos
hlt
pop
sub
sub
xchg
mov
mov
sahf
stc
call
stc
mov
insl
jecxz
push
and
xchg
mov
pop
lods
sub
xchg
dec
xor
and
or
popa
aam
bound
or
mov
stos
sbb
push
jbe
push
daa
or
leave
push
into
fsubr
repnz
nop
maskmovq
imull
sub
add
faddl
jno
push
sub
lahf
sub
sbb
sti
js
lock
shlb
in
sbbl
mov
leave
leave
data16
cmp
ljmp
inc
sbb
cmp
mov
xchg
or
add
mov
push
rcrb
outsb
add
mov
insl
sbb
xchg
shl
xor
mov
bound
cmp
repnz
xchg
inc
out
mov
sub
or
sub
dec
imul
mov
rclb
push
mov
shl
inc
stos
xchg
add
jnp
and
xchg
mov
out
imul
loope
add
aas
pop
insb
sub
loopne
cwtl
divb
loopne
add
mov
mov
push
inc
dec
add
inc
lods
dec
inc
sbb
adc
ss
seta
stos
fdivrs
dec
and
aad
and
inc
jg
jo
loopne
ficoml
mov
or
and
mov
xchg
out
and
pushf
pop
xor
stos
out
pusha
mov
adc
fnclex
or
cmpsl
aad
pop
inc
loopne
in
fwait
jmp
test
and
cmc
mov
inc
pop
fisubrs
pop
mov
js
jp
jl
mov
or
into
pop
xor
stos
sbb
fnsave
jnp
xchg
mov
xchg
in
pop
outsb
sub
sbb
mov
in
fdivl
jecxz
xor
adc
mov
imul
cmp
enter
sub
clc
and
sbb
dec
imul
push
int
aam
mov
sahf
cmpsl
in
mov
test
cld
mov
jnp
inc
xchg
fsubr
jle
cmp
sbb
adc
lods
cmp
xor
jp
cld
cmp
test
into
xchg
xchg
add
sbb
push
dec
shrb
clc
jle
cmpsb
out
sahf
pop
jp
std
fwait
xor
stos
add
sub
je
xor
sub
mov
in
xlat
stos
and
dec
push
jb
fidivs
sub
dec
fdivl
or
cmp
jg
fiaddl
inc
add
mov
dec
pop
insl
out
inc
es
ljmp
scas
mov
pop
adc
cmp
test
lret
mov
adc
xor
push
push
mov
stc
popf
ljmp
cld
shl
sti
negb
jb
movsb
ret
scas
xchg
push
cltd
test
pop
mov
push
subb
insl
gs
imul
out
shrb
stos
push
or
push
sbb
rolb
mov
js
and
movsb
push
mov
shll
je
pop
in
sarl
decb
xor
daa
ljmp
xor
pop
fcoml
push
add
out
sbb
adc
aam
iret
and
jae
adc
scas
out
jb
loope
loop
andb
xchg
mov
mov
ficoml
pop
enter
mov
jns
sbb
ret
test
jnp
insb
cmpsl
out
ja
adc
mov
fdivl
cmpsb
or
and
xor
lock
dec
loopne
dec
sbb
mov
jb
dec
out
scas
lea
adc
mov
cmpsb
jle
xlat
jmp
pop
sbb
xchg
jne
rcll
inc
pop
ss
mov
jb
xchg
test
jnp
xor
ficoml
cli
test
sti
jge
in
inc
popa
fisubl
or
sub
adc
enter
cs
std
jmp
divl
cltd
sub
sub
xchg
cld
inc
andl
xchg
incb
xchg
mov
push
pop
inc
pop
cmp
pop
push
mov
xchg
repz
cmp
dec
test
pop
jno
lods
fwait
xchg
out
jle
xor
lds
incb
in
xor
dec
test
cmp
jp
xor
rcrl
dec
clc
mov
das
popa
push
or
jge
jae
loop
in
pop
idivl
in
jno
sahf
ss
cs
or
add
cmpl
sahf
loopne
cwtl
jle
xchg
sbb
mov
movsb
jecxz
inc
push
loop
in
sbb
cmc
repz
mov
sub
or
pushf
sub
pop
mov
mov
xchg
xchg
sbb
cli
enter
sbb
fistps
cmp
mov
mov
incb
outsb
lret
popa
add
push
out
dec
dec
or
adc
in
test
add
mov
lcall
and
and
sub
xor
popa
mov
sar
jns
and
stos
loop
das
adc
fsubrs
jo
shlb
pop
pop
inc
push
sbb
nop
push
imul
xor
pop
icebp
fmull
push
push
repz
lahf
clc
adc
cltd
inc
mov
cmp
popl
ret
adc
sub
cmp
sarl
dec
pop
jl
jae
cli
mov
sub
fstl
mov
mov
inc
fwait
aaa
je
ficompl
into
ret
nop
repz
adc
inc
xor
xchg
pop
mov
loopne
push
pop
xchg
sub
xchg
xchg
cltd
fdivrs
add
pop
test
or
stos
dec
mov
fwait
out
pop
push
pop
or
out
pushl
jo
fiaddl
outsb
jl
jb
pop
adc
or
xchg
lods
repz
mov
punpckhdq
sahf
mov
cmpsb
push
dec
push
xor
fucomi
mov
sbb
or
inc
and
in
dec
pop
ret
outsl
andl
aam
negb
popa
icebp
mov
sub
sbb
mov
mov
les
mov
mov
xor
or
fcmovnu
arpl
mov
jbe
js
aam
ret
repz
fwait
xor
and
in
push
adcl
pop
mov
data16
ret
repz
cli
and
or
arpl
or
out
sahf
repnz
loop
sub
sarl
jecxz
cmpsb
out
outsb
sbb
movsb
popf
inc
pop
lret
sbbl
icebp
sahf
insb
jg
sbb
in
fwait
outsl
mov
das
jge
lcall
mov
adc
mov
ljmp
sbb
dec
ljmp
or
stc
andl
or
outsb
test
out
ret
sbb
and
sub
ret
in
scas
cltd
adc
into
shr
xchg
add
lods
cmp
loope
sbb
xor
sub
cmpsl
add
push
jo
cld
sub
pop
adc
xlat
sbb
ljmp
call
pop
imulb
or
sub
sbb
lods
loope
cmp
lods
mov
mov
push
add
xor
or
test
mov
pushf
inc
mov
sti
inc
sbbl
push
imul
in
xchg
cwtl
lret
mov
or
movsb
adc
or
mov
rcrb
fisttpll
lret
rclb
shr
mov
jge
adc
mov
xchg
cmpsl
cs
push
sub
pop
idivl
std
mov
cwtl
ljmp
pushf
mov
jne
mov
shlb
popa
sbb
jl
or
mov
ret
lcall
jne
leave
sub
xor
arpl
jl
sub
pop
lods
adcb
jp
aad
mov
popf
sti
pop
pop
stc
jl
jne
mov
mov
out
pop
call
insl
or
push
mov
incb
mov
push
in
push
insl
sbb
xor
insl
push
les
or
pushf
push
xchg
sub
add
mov
push
cwtl
xor
call
imul
mov
jae
int
cltd
fsubrs
sub
stos
xchg
mov
fiadds
ret
jnp
into
pushf
lock
scas
scas
adc
test
mov
pop
test
out
fnsave
or
daa
cmp
push
jo
push
dec
xchg
jo
repnz
fldcw
into
sub
arpl
test
adc
and
lock
shrl
push
daa
mov
ljmp
xchg
js
les
mov
in
fdivr
das
mov
je
fs
fsubrl
push
lock
cld
movsb
cmp
push
sub
jg
insl
cmp
mov
bound
dec
jg
sbb
inc
outsl
daa
jmp
mov
xor
pop
xchg
ja
dec
cmp
dec
adc
push
push
icebp
push
jb
scas
xor
enter
xchg
loopne
sbb
testl
cmp
out
mov
jb
pop
cmp
test
mov
mov
mov
mov
pop
inc
pop
mov
ds
popf
sbbl
ljmp
jo
xchg
stos
inc
inc
sbb
loopne
jb
negb
push
push
aad
sub
inc
mov
jno
jo
dec
es
mov
call
and
pusha
ss
sti
cmp
call
loopne
popf
adc
or
push
aad
lcall
imul
outsb
jmp
lods
jg
adc
in
xchg
imul
js
inc
sub
dec
out
cld
and
inc
lods
aam
push
xlat
mov
adc
pop
pop
mov
movsl
sbb
or
sub
ss
sub
lret
mov
pop
adc
lss
inc
into
or
adc
add
leave
fldcw
pop
lahf
mov
out
jmp
call
add
cmpl
cltd
out
cltd
es
insb
js
imulb
test
xchg
fwait
cmpsl
iret
sub
xchg
stos
push
je
fwait
popf
call
sahf
stos
cmp
jno
push
sub
add
sbb
push
hlt
jnp
cs
popf
fidivl
push
out
mov
cli
push
inc
nop
daa
xchg
mov
jnp
pop
or
dec
xor
hlt
in
es
lret
and
into
sub
xchg
jg
loopne
mov
in
ret
dec
and
adc
inc
ja
lock
cltd
pushf
std
jl
divps
xchg
hlt
xchg
nop
decb
cltd
jno
jb
sbb
xor
out
push
das
push
push
jg
int3
mov
cmpsb
mov
dec
add
leave
fldcw
stos
imul
xchg
lds
insl
insb
mov
lret
jge
mov
push
rcll
mov
xor
stos
mov
cwtl
in
ret
dec
scas
adcb
lock
fnsave
fwait
insl
sub
int3
xchg
popa
out
insl
sbb
sub
adc
push
ja
dec
pop
arpl
push
rcrb
mov
cmpsb
sub
or
inc
test
mov
fnstenv
and
push
dec
pop
xor
xlat
push
sub
mov
mov
fisttpl
jne
xor
dec
sub
hlt
fstpl
xchg
lods
mov
xchg
cmp
ret
sub
sbb
jl
loope
push
cmpsl
cmp
ja
negl
es
test
je
aas
ret
cmp
cmp
test
int
xorl
dec
movsl
adc
ss
daa
test
lret
pop
mov
cmp
mov
jo
fsubs
cmp
and
es
insb
or
and
fists
pop
sub
loopne
push
pop
xor
cs
push
pop
xor
jecxz
and
js
sub
in
or
jge
mov
aas
shll
push
sub
scas
in
mov
xor
int
cli
lea
cltd
xchg
loop
add
stos
add
inc
push
fists
loope
ljmp
dec
add
fs
test
out
lock
mov
lahf
jg
jne
insl
out
ret
inc
jg
mov
push
icebp
ret
mov
mov
int3
rclb
ret
push
push
stc
fwait
aas
fidivs
mov
push
xorl
test
fmul
ror
adc
scas
les
push
bound
fbld
sub
sbb
adcb
pop
cmp
jnp
xchg
aam
dec
cmp
repnz
push
cmp
fwait
dec
adc
jb
ret
out
sbbb
mov
jae
hlt
mov
sbb
push
pop
repz
sub
pop
outsl
and
enter
cmp
lret
in
dec
in
leave
adc
pop
jl
fnstsw
movsl
cltd
add
rcrb
pop
neg
mov
pop
popf
mov
or
inc
mov
lahf
inc
inc
xchg
mov
data16
fsubs
sbb
xchg
dec
lahf
jno
mov
enter
ja
push
xor
imul
mov
fidivs
add
lahf
mov
in
xchg
cwtl
lahf
fiaddl
ja
push
imul
pop
mov
and
sbb
incb
stos
mov
sub
testl
inc
out
mov
loopne
push
lods
jo
mov
orb
and
xchg
ljmp
int
dec
icebp
jle
mov
xchg
arpl
sbb
scas
outsl
jnp
or
insl
nop
xchg
dec
push
jl
mov
pop
fsubrs
mov
mov
std
mov
shl
xor
loop
mov
std
jmp
addl
pushf
xchg
xchg
loopne
in
jg
pop
daa
into
xchg
xchg
lret
bound
jmp
mov
scas
fnsave
mov
adc
fpatan
adc
cmp
hlt
cmp
aam
insb
add
or
leave
and
fucomip
xor
xor
in
loopne
push
cmp
jl
mov
add
andl
sub
cmp
shrb
fcomps
sbb
imulb
dec
jge
je
in
fstl
jle
es
lock
ret
daa
ja
out
imul
cwtl
cs
mov
push
jmp
sbbl
sub
sbb
jo
movsb
sti
push
decb
pop
test
jg
inc
repz
cmp
adc
enter
lret
pop
jmp
push
mov
and
lods
push
mov
cmp
jne
arpl
or
ret
mov
fmull
dec
inc
in
push
dec
and
inc
pop
jg
xor
dec
ljmp
les
mov
mov
les
jns
push
ret
mov
arpl
pop
or
mov
sahf
movsb
cmp
movsl
mov
pop
inc
in
stos
aas
fmull
jno
into
in
jnp
in
inc
ret
fwait
test
or
repnz
rcll
pop
xor
adc
in
pop
fldenv
comiss
aaa
inc
sbb
ljmp
or
cli
sbb
and
push
je
mov
daa
enter
mov
scas
inc
sbb
jbe
cmp
outsl
jns
add
and
insl
sub
push
xor
fidivs
nop
and
std
ret
sarl
pop
fistl
js
cli
jmp
jecxz
sub
andl
cli
call
incl
imul
sti
jl
or
adc
loop
fistpl
movsl
cmp
mov
cmp
pop
les
cmp
or
mov
popf
mov
out
adc
add
sti
xchg
stos
jnp
scas
adc
xor
fcoms
jl
ja
shlb
push
inc
rcr
cli
sub
jle
sbb
dec
inc
dec
add
es
xchg
mov
les
clc
dec
lods
sub
subl
pop
les
add
mov
dec
loope
mov
out
push
in
push
push
faddl
int
add
popa
inc
xor
fcomi
xor
cwtl
das
punpcklwd
idivb
mov
iret
or
pop
xchg
call
xchg
pop
icebp
jno
jp
dec
hlt
mov
cli
rcl
jo
call
xchg
popf
mov
xchg
mov
cmpsb
xlat
enter
cs
popf
incl
and
or
fnstsw
fisubl
push
pop
xor
ds
sbb
std
sbb
jle
shrb
xor
call
cs
adc
jbe
pop
aaa
aas
stos
xchg
pop
mov
pop
mov
stos
and
scas
aad
adc
fsubl
jle
mov
pop
lret
mov
scas
aam
cwtl
cmpl
fs
pop
out
inc
iret
jo
sbb
add
test
clc
pop
cmp
es
imul
mov
jno
insb
or
xchg
or
lods
mov
cmp
push
sbb
cltd
lds
fwait
cmp
test
aaa
sub
adc
add
movups
aas
loope
add
jg
test
addr16
cli
mov
jl
jns
mov
pop
adcl
fstps
add
jle
dec
cmp
addr16
add
add
mov
gs
xor
or
or
bound
sbb
mov
cmp
out
movsl
rol
mov
retw
int3
cmp
mov
sbb
cli
xchg
add
mov
pusha
cmp
jmp
mov
jle
out
dec
std
test
pop
xor
mov
xchg
cwtl
addl
outsb
sub
mov
sub
leave
pop
clc
sahf
adc
inc
dec
mov
call
pop
cli
cmc
and
push
mov
inc
push
fs
scas
inc
hlt
sbb
mov
mov
loopne
inc
aas
test
gs
and
dec
inc
jb
out
lods
xchg
mov
sub
out
je
fiaddl
push
xor
pushf
out
daa
hlt
pop
ret
daa
lcall
adc
in
mov
mov
push
andb
out
xorb
inc
inc
fmuls
dec
sbbl
fs
cmp
pushf
dec
and
cwtl
stos
int
jge
jae
lea
lods
in
push
cli
xor
pop
cmp
jo
fs
pop
cmpb
pop
mov
inc
hlt
push
and
loop
mov
outsb
out
jbe
iret
push
movsb
adc
push
adc
in
out
popa
andl
mov
sbb
jo
sub
pop
add
xchg
data16
sub
repz
or
adc
pop
xor
es
clc
pop
inc
push
push
ss
shl
clc
xchg
stos
movsb
inc
mov
lock
fidivs
pop
fidivrl
imul
scas
lock
shlb
lock
ds
aas
push
movsl
faddl
cmpl
mov
sbb
sub
jne
hlt
or
cmp
pop
ljmp
out
mov
stos
jne
pop
jne
leave
jb
xor
scas
mov
lret
xor
xor
jmp
fiaddl
push
xchg
fcmove
lods
jle
repz
mov
pop
movsb
repnz
xchg
add
in
stc
pop
adc
daa
aam
gs
sahf
push
mov
sub
orb
fisubs
sahf
or
or
push
jle
fidivs
jg
inc
sbb
out
or
in
test
jae
mov
test
hlt
icebp
adc
in
mov
dec
cld
xchg
insl
pop
leave
sub
mov
push
and
cmp
nop
mov
mov
sbb
lret
fsts
fs
mov
pop
bound
mov
movsl
add
add
cli
negb
inc
push
mov
movsl
lds
or
push
jp
fsub
xchg
mov
out
mov
dec
retw
pop
inc
pusha
aas
adc
imul
fnstenv
or
notl
sbb
mov
sbb
add
lock
int
sub
xchg
mov
xchg
sub
popf
sub
mov
aaa
mov
jne
push
push
dec
test
sub
repz
clc
pop
in
mov
push
mov
add
mov
mov
fldl
jecxz
xor
adc
mov
adc
prefetchw
data16
das
in
sbbl
xchg
pop
pop
sub
ret
sub
das
inc
and
mov
jo
dec
pop
hlt
pop
inc
gs
mov
sub
dec
popa
jg
sbb
and
mov
insb
xor
cmp
jp
jnp
dec
and
inc
push
or
std
cmp
popa
mov
fucomi
mov
data16
std
pop
sbb
push
jb
or
leave
mov
mov
and
pop
loop
test
addr16
cmp
call
dec
cli
xchg
int
inc
faddl
sahf
adc
rorb
outsl
ret
xor
pop
lock
xor
test
ja
mov
mov
aam
pusha
mov
xor
sbb
sarl
xchg
add
cmp
mov
test
je
repz
pop
push
adc
mov
dec
push
jae
repnz
stos
or
cmpsl
je
test
sub
out
push
enter
incb
stos
mul
pushf
xor
sbb
shll
out
or
cmpsl
mov
jmp
pop
not
in
popf
sub
idivl
daa
pop
je
loop
fwait
xor
push
rcll
loop
mov
fisubs
mov
js
mov
push
scas
mov
xor
pop
scas
sbb
int3
lahf
cmpsl
call
out
sbb
and
dec
daa
add
jmp
dec
sbb
xchg
mov
pop
imul
pop
je
adc
inc
inc
leave
inc
addr16
bound
xchg
fsubrs
dec
push
jmp
out
push
xchg
mov
mov
sarb
loop
add
es
or
dec
loop
stos
dec
in
pop
imul
xor
dec
xor
loop
dec
and
add
xor
fnstenv
sub
cli
dec
in
xor
mov
and
xchg
adc
pop
dec
mov
and
mov
sbb
sub
pop
sbb
xchg
and
daa
repz
cli
stos
sub
test
icebp
cli
xchg
and
mov
push
leave
add
call
jmp
or
sub
stos
pop
jne
ljmp
add
test
lcall
inc
add
stos
inc
sbb
mov
in
adc
cmpsl
add
fwait
jg
mov
push
pushf
and
inc
mov
push
jmp
pop
sbb
dec
jg
outsb
xor
and
hlt
mov
sti
cmpsl
imull
pop
xchg
sub
divb
in
leave
into
gs
popf
insl
add
push
sub
sbb
cld
pop
outsl
outsb
sub
mov
mov
xchg
jle
cmp
xchg
xchg
sub
mov
adc
ds
pusha
inc
test
adcb
negl
arpl
outsl
pop
cmc
aaa
scas
mov
loopne
mov
repnz
lea
mov
mov
jle
push
xor
inc
enter
and
cltd
fsubrp
cmpsb
test
push
mov
decl
scas
imul
pushl
sub
adc
cli
and
fmul
shll
sahf
pusha
repz
loopne
imul
insl
sarb
jno
cmp
xchg
or
fs
std
enter
pop
jl
mov
cmp
adc
data16
xchg
xchg
fdivrl
add
or
stos
xchg
mov
dec
dec
pop
dec
addr16
movsb
mov
popa
jnp
subl
inc
test
mov
loop
js
rorl
pop
addr16
imul
adc
rol
std
mov
mov
or
subl
aaa
fisubrl
inc
jb
lcall
pop
adc
sbb
jbe
mov
push
fmull
fisttps
dec
push
push
out
jnp
lret
pop
xor
loope
arpl
fimull
add
mov
sarb
mov
leave
int
push
cmpsl
xor
in
cmc
ror
dec
xor
andl
loope
ss
cmc
jbe
cmp
inc
popf
clc
inc
mov
call
or
dec
inc
imul
sub
push
and
sub
fcmovnbe
jae
nop
cmpsb
mov
pop
je
mov
scas
sub
outsl
cmp
in
fnstcw
inc
leave
test
push
in
movsb
adc
mov
insb
sti
dec
sbb
sbb
daa
xor
jbe
mov
es
dec
fidivl
out
scas
decb
add
stos
jge
push
popf
jmp
scas
push
fcomp
push
ljmp
lock
fstpt
dec
or
push
insb
test
mov
shll
sub
sub
pop
subl
mov
out
loopne
aad
insb
cmpsl
pop
dec
test
jl
push
sbb
xchg
in
jmp
cmpl
push
push
mov
fstpt
loop
pop
sub
push
pop
sub
repnz
add
pop
fwait
sbb
jg
cld
and
xor
jnp
inc
les
mov
mov
and
out
pushf
mov
stc
push
pop
ret
sbb
cmc
sub
lahf
pop
push
je
push
es
aam
outsb
mov
ljmp
push
lea
loope
push
add
cmpsb
nop
notb
aaa
jmp
xor
push
jg
dec
sub
fwait
imul
and
and
lea
int
push
xor
aam
cmp
sahf
push
nop
sub
sbb
js
in
imul
popf
mov
jl
push
punpcklbw
push
xchg
dec
sahf
stos
lcall
jmp
sub
push
add
push
xor
fstl
jl
das
jp
lcall
out
inc
inc
mov
dec
iret
or
cltd
xor
nop
mov
dec
mov
adc
adc
int3
add
shlb
push
test
mov
cli
cmp
fs
and
xchg
daa
push
gs
jecxz
mov
push
icebp
push
int
sti
sub
inc
clc
dec
mov
inc
mov
ljmp
xchg
dec
loop
aam
ret
or
ds
jb
ret
inc
or
push
in
xchg
cmpsl
push
test
ljmp
xor
pop
cmpsl
jo
and
jno
popf
popa
imulb
stc
std
and
fnstenv
push
orb
movsl
push
aaa
int3
mov
rcll
sbb
pop
loop
cmp
cmpsl
xorb
sub
cs
mov
inc
push
mov
dec
pop
cmp
addr16
jle
mov
sub
bnd
xor
orl
daa
out
pop
jae
cmp
aaa
push
out
and
cmp
cmp
pop
xchg
add
and
cs
pop
cmp
shlb
jb
ret
in
mov
inc
in
outsb
push
aad
jecxz
mov
jmp
pop
or
inc
mov
mov
mov
mov
lcall
adc
pop
insb
jmp
push
stos
cmp
scas
sbb
jecxz
inc
dec
loope
subl
mov
gs
test
ljmp
sbb
nop
inc
sbb
js
mov
cmpsl
inc
and
jb
nop
pop
fwait
fs
std
dec
pop
outsl
out
incb
jne
xchg
pop
ljmp
call
cmp
adc
ss
test
pop
imul
or
add
addr16
push
and
dec
enter
outsl
icebp
mov
inc
inc
rcl
cs
pop
push
push
add
mov
and
insl
inc
sub
aas
iret
data16
cmp
repnz
xchg
ja
popf
and
pop
mov
bound
leave
pushw
mov
inc
or
cld
xchg
pop
inc
ret
iret
ljmp
push
push
jae
and
push
adc
sub
std
xor
test
xchg
test
cwtl
pop
mov
and
imul
jl
pop
mov
lret
daa
repz
inc
dec
stc
adc
xlat
xchg
testb
repnz
add
cwtl
sbb
lret
loopne
test
out
or
pop
pop
fs
repnz
shl
xor
adc
sub
js
testl
cmp
out
mov
test
xchg
arpl
loope
fwait
daa
pop
repz
cmp
pop
aad
sti
push
jge
in
and
mov
enter
stos
jns
ja
repz
out
add
adcb
xor
xchg
aad
jg
outsl
jge
mov
mov
lds
push
popf
inc
cltd
pop
cmp
xor
push
push
sub
nop
outsb
scas
inc
fdivs
jmp
mov
int3
adc
mov
xchg
rsqrtps
mov
lods
pop
lods
outsl
dec
inc
jmp
mov
push
jg
push
jecxz
sub
dec
outsb
mov
ljmp
dec
dec
cmp
ljmp
ja
ss
and
int3
aaa
jg
fisttpl
or
out
pop
bound
ds
or
mov
pop
adcb
jp
loope
lret
add
mov
shll
cmp
out
mov
rclb
loopne
in
stos
out
mov
xor
adc
push
add
inc
mov
cmpl
imul
jl
jmp
inc
push
in
cmp
inc
inc
push
mov
inc
ljmp
test
mov
loop
out
pop
xchg
add
fidivl
lahf
jo
sti
dec
lods
out
movsb
daa
lds
scas
popf
push
jge
xorl
jl
test
aad
es
mov
add
les
roll
xor
addl
jnp
add
xchg
pushf
lds
cmp
and
scas
test
sahf
lods
ss
call
fdivr
loope
pop
push
jle
sbbl
xchg
lods
adcl
les
mov
jge
xor
mov
pop
jmp
xchg
cmp
test
js
push
lcall
push
mov
pop
insb
xor
or
rorb
roll
out
test
popa
dec
fs
stc
or
mov
adc
jnp
mov
fldl
loop
ret
ljmp
dec
push
pop
sti
adc
test
ljmp
aaa
rcr
jle
and
fcompl
dec
cmp
jl
sbb
xchg
cmp
loopne
test
push
inc
xlat
lcall
es
aam
shll
mov
mov
mov
jbe
jg
sub
jl
or
cmpsl
insb
cli
fsubr
adc
xchg
cmp
cmc
insb
mov
js
stos
add
mov
xor
pop
mov
cs
out
test
mov
subl
xchg
sub
push
inc
cmp
mov
fdivs
fmul
pop
shrb
ljmp
ss
xchg
xchg
or
leave
inc
fld
sbb
dec
inc
mov
xor
out
add
sbb
mov
dec
aam
add
jmp
mov
arpl
dec
mov
repnz
lea
call
mov
push
push
mov
mov
mov
mov
jg
dec
jo
mov
mov
mov
daa
lock
notl
sub
nop/reserved
xor
push
mov
inc
jge
adc
sbb
xor
les
fcompl
in
push
fwait
movsb
or
repnz
cmp
insb
into
rorb
mov
push
xor
je
sahf
cmc
cld
pushf
dec
cmp
popf
lahf
sti
cli
cmp
push
and
sbb
jecxz
adcl
lcall
and
dec
dec
imul
sub
cld
push
pop
jo
in
mov
push
dec
inc
popa
add
pop
lea
out
xchg
sbb
sub
or
mov
inc
ftst
jl
jnp
mov
jnp
lret
cs
jp
dec
push
call
jne
and
or
sbb
xchg
mov
adc
xchg
data16
pop
dec
mov
adc
aad
bound
sti
stos
mov
jge
or
out
pushf
out
adc
cld
mov
mov
je
cmp
shll
cmp
nop
iret
or
fdivl
lret
jg
fsts
gs
push
ret
cmp
mov
push
scas
and
jg
jb
sub
inc
inc
sub
loop
es
mov
or
add
les
xchg
cmp
scas
mov
dec
lods
mov
cli
add
lods
inc
cmp
sub
cli
add
xor
fcoml
mov
sbb
sub
push
inc
add
xchg
fdivrl
pop
push
xchg
add
lcall
inc
mov
mov
pop
cmpsb
xchg
xchg
or
mov
and
iret
adc
dec
test
sbb
adc
hlt
xchg
jmp
sub
cltd
sahf
inc
stc
in
jno
ret
or
loope
sbbl
imul
mov
std
cs
inc
test
and
loop
lds
aam
lea
pop
pop
mov
fsubrs
dec
push
xchg
fimuls
xchg
pop
fs
mov
jg
popw
test
lret
mov
shrb
jmp
enter
hlt
push
push
es
pop
repnz
not
push
shll
rorb
lret
cmp
ret
sarl
outsl
in
xchg
or
pop
imul
jns,pn
pop
int3
xchg
ret
push
mov
push
xlat
outsb
test
jg
movsl
cmc
or
sbb
es
xor
lcall
jmp
and
pusha
jl
cmpsl
inc
dec
and
jne
leavew
jecxz
idiv
mov
jmp
inc
fisubrs
pusha
mov
cmp
mov
xchg
add
and
popf
js
jecxz
jae
gs
dec
out
fidivs
pop
stos
inc
negb
call
ljmp
mov
insl
add
pop
push
out
mov
push
push
xor
jge
cwtl
jns,pt
jo
lods
and
jo
loope
pop
arpl
jecxz
sbb
cmp
xchg
adcb
repz
popf
fs
clc
xchg
mov
ljmp
inc
nop
aaa
mov
cmp
ficoms
insl
inc
fstps
mov
pop
in
stos
repnz
test
cmp
test
lcall
push
mov
popa
mov
not
out
hlt
lret
jp
pushf
insl
bound
mov
fwait
stos
ds
cltd
cmp
cmp
hlt
push
and
push
jg
pop
or
ljmp
xor
out
popa
add
mov
aad
and
push
push
lcall
sbb
fnsave
lods
lock
mov
mov
or
mov
add
cld
push
push
jl
push
ljmp
mov
mov
ss
push
push
hlt
push
dec
dec
je
mov
pop
mov
jne
stc
or
ljmp
imul
es
test
inc
sub
out
inc
lahf
dec
jecxz
xor
pusha
out
hlt
ficompl
fcmovnbe
sbb
jge
test
add
rcrb
mov
ret
and
mov
jo
mov
pop
jl
orl
push
sbb
inc
fldcw
lahf
out
ja
fnstenv
inc
xor
aad
hlt
test
sti
adc
movsl
inc
mov
cmp
gs
mov
rep
xchg
arpl
cmp
mov
sar
push
sahf
scas
inc
pop
fdivrs
cmc
cmp
pop
je
sbb
inc
pushf
loope
xchg
fdivrl
dec
xchg
xorl
inc
rclb
pop
insl
shll
stos
aam
mov
or
xchg
mov
mov
mov
icebp
mov
push
add
or
cmp
mov
add
les
in
push
jmp
push
push
std
mov
inc
add
mov
cmp
imul
push
ss
aam
bsr
add
hlt
jo
and
adc
mov
out
ret
lret
inc
pop
daa
push
xor
pop
and
push
lock
jmp
jle
mov
mov
cmp
push
xlat
dec
jmp
dec
out
sub
sub
je
sbb
frstor
bound
jb
inc
outsb
call
jne
pop
repz
frndint
push
lds
sub
push
cmp
dec
pop
sbb
mov
in
pop
mov
sti
push
mov
fisttpl
clc
aad
stos
pop
push
adcb
xor
imul
cwtl
jb
test
cmp
in
aaa
push
sbb
test
dec
inc
movsb
add
insl
cltd
pusha
loope
fisubrs
fdivrs
and
xchg
sbb
mov
fsubrp
jnp
je
lea
and
adc
aaa
add
repz
loopne
mov
sbb
idiv
cltd
cmp
popf
sbbl
inc
ret
xorb
cmp
in
cwtl
push
insb
rorl
scas
repz
pop
and
sub
enter
lods
mov
popa
mov
faddp
aas
mov
adc
cltd
adc
lods
xchg
and
push
ljmp
jb
inc
mov
or
xor
sub
stc
push
test
dec
icebp
sbb
pop
sbb
pop
pop
lock
aad
stc
call
hlt
in
leave
mov
hlt
in
je
mov
inc
lret
xor
nop
push
out
jno
xchg
mov
pop
loopne
or
cmp
pop
push
lcall
adc
inc
pushf
out
mulb
stos
adc
and
lahf
jp
lds
out
movsb
push
and
addr16
jp
outsl
pop
xchg
mov
sbb
mov
enter
aaa
inc
lret
scas
mov
inc
pop
cs
rclb
add
loop
shlb
notb
clc
daa
lods
inc
test
pop
add
cmpsb
in
mov
mov
lods
pop
rcr
popa
cmp
leave
fwait
xor
push
jbe
or
hlt
ficoml
xchg
rclb
test
mov
sbb
xchg
sub
aas
or
aaa
mov
or
mov
dec
xor
int
addl
int
jbe
repz
push
jmp
push
cld
adc
cmc
jb
daa
and
lea
out
or
lret
or
jbe
js
adc
cld
std
movb
scas
scas
xchg
shr
test
mov
or
mov
push
mov
sarb
pusha
pop
insb
lcall
cmpsb
sarb
lcall
pop
lods
int3
out
hlt
sbb
bound
gs
hlt
mov
mov
rcll
push
daa
sub
out
movsb
pop
inc
and
cmp
cmpsb
gs
cs
or
jmp
push
push
and
jnp
popf
and
pop
mov
sub
mov
adc
fucomi
adc
adcb
mov
mov
jno
lods
dec
fcoms
adc
mov
clc
sub
sub
testl
lods
sbb
jp
int
push
ret
icebp
js
sub
dec
adc
push
sub
xor
xchg
clts
arpl
bound
loope
mov
and
out
pop
fnstenv
or
test
sbb
push
fwait
daa
dec
sub
adc
scas
fisubs
jne
ret
fnstsw
ret
fisttps
and
jae
bound
subl
jmp
lret
clc
iret
mov
adc
xlat
fcoml
or
daa
mov
adc
negl
insl
movsl
mov
cld
pop
xor
jl
inc
push
sti
xchg
xor
push
mov
movsb
leave
or
shll
jnp
repnz
and
lds
inc
add
xchg
push
mov
leave
adc
into
arpl
or
out
fdivl
das
and
pop
cli
fiaddl
push
in
cmp
bound
clc
shll
sbb
loopne
loopne
pop
loopne
adc
cld
test
mov
cmpsb
cmp
cmp
jmp
inc
sub
sbb
bound
xchg
push
jmp
popa
fnstsw
adc
lods
push
sbb
push
into
dec
data16
sub
fsubrs
mov
pop
push
rolb
pushf
mov
nop
jge
shrb
mov
sub
das
fisttpl
lahf
or
dec
roll
jae,pn
mov
sub
xchg
add
ja
test
mov
orl
test
cmp
ljmp
imul
je
incl
nop
in
jle
push
mov
add
mov
mov
bound
and
cs
push
inc
dec
add
dec
cmp
mov
mov
push
mov
push
and
fdiv
bound
into
in
mov
aam
shll
imull
or
push
cmp
test
nop
add
mov
fwait
sti
scas
push
testl
mov
add
xlat
sbb
insl
or
jae
or
mov
jle
and
mov
stc
add
ja
cwtl
mov
xchg
aam
mov
cmc
stos
cmp
dec
dec
and
jle
push
xchg
cwtl
into
popa
adc
pop
jne
jecxz
shll
cmpsb
mov
sub
push
jbe
or
test
xchg
add
jge
fcoms
add
and
push
add
dec
pop
xchg
lcall
adc
lods
pop
aad
mov
incb
scas
pop
fsubrl
pop
test
int
icebp
fdiv
mov
mov
cmpsb
inc
in
sti
xchg
orl
and
adc
add
fidivl
insb
jb
rep
mov
aaa
iret
push
jp
into
hlt
clc
xchg
push
mov
jle
jp
in
xor
jp
adc
lock
lock
pop
repz
inc
mov
gs
mov
xlat
sub
sbb
ds
gs
insb
in
mov
pop
mov
fistpl
ljmp
xor
mov
fisttpll
push
test
cld
add
aad
pop
imul
call
and
test
xchg
js
inc
fldenv
loope
lahf
adc
jns
std
jo
adc
jno
sbbb
mov
int3
fiadds
mov
cs
and
cmp
mov
pop
cmp
push
test
mov
andb
jl
setp
cmpsl
cmpb
xor
and
icebp
loope
push
and
rcrb
pop
xchg
pop
and
mov
in
divb
cwtl
sbb
push
fwait
cmpsl
je
aam
pop
sahf
js
repnz
push
mov
hlt
das
popf
push
add
test
jmp
mov
test
sub
cmp
dec
movsl
mov
iret
data16
pop
push
mov
xchg
in
mov
sbbl
mov
fsubl
or
sbb
jne
cmpsl
js
andb
shrl
je
push
jl
pop
arpl
xchg
add
fsubr
adc
aas
inc
out
xchg
inc
xor
std
in
sub
repz
mov
data16
adc
int3
aaa
mov
adc
les
dec
imul
scas
inc
mov
out
sub
cli
mov
inc
fisttpl
and
push
stc
xorl
flds
fnstsw
js
int3
jl
mov
sub
arpl
lahf
shlb
addr16
int
in
dec
xchg
shll
lret
cwtl
sub
xchg
sub
cmp
pop
lock
test
fmul
xchg
jmp
jae
jg
fnsave
loope
push
xchg
out
pop
sbb
iret
cmp
jbe
lods
cmpsl
lods
ret
xchg
mov
fistpl
cltd
jge
jl
sub
and
dec
push
dec
bound
mov
xlat
and
cltd
cmpsl
pop
jecxz
out
jno
push
mov
das
aam
jp
jae
lock
inc
cmc
sbb
negl
iret
arpl
sub
sub
popf
sub
iret
xchg
cmp
and
or
jbe
pop
das
daa
sarl
sbbl
les
das
aad
out
lcall
xor
bound
mov
add
imul
test
adc
scas
dec
sbbb
lret
mov
mov
add
dec
adc
stos
dec
pop
setp
push
mov
arpl
enter
aas
std
xor
push
fwait
cwtl
test
push
jmp
fwait
mov
imul
or
mov
jne
shlb
dec
pop
stc
mov
inc
pop
out
cld
pop
fwait
in
lods
jno
rorl
lea
push
pop
push
cmpsb
aas
lea
mov
jl
stos
movsl
ljmp
cmp
cmpsb
mov
mov
sbb
hlt
inc
loop
addr16
outsl
mov
cmp
popf
ss
xchg
sbb
cmpsl
out
mov
inc
shl
mov
cmp
jge
imul
ja
jae
mov
lret
and
outsl
jge
push
nop
insl
inc
and
lock
enter
and
push
mov
mov
xchg
jbe
lret
enter
leave
pusha
lea
adc
into
fucomi
add
sbb
imul
leave
mov
les
xchg
leave
inc
arpl
push
outsl
ret
sti
sti
jb
imul
int
movsb
ss
pop
das
pop
lods
aad
lahf
jbe,pn
sub
pushf
push
pop
dec
sub
and
imul
or
filds
mov
test
ficomps
pop
fldt
icebp
mov
sub
mov
out
pop
sub
insl
or
in
mov
add
dec
mov
add
push
ret
popl
lods
dec
dec
ja
clc
sbb
cmp
or
je
jle
out
stos
shll
jbe
add
or
xchg
mov
cmp
sahf
xorl
xor
fwait
pop
in
repz
add
je
stos
or
xor
stos
pusha
xchg
popl
popf
stos
imul
cmc
sar
lcall
in
mov
inc
inc
test
jbe
popa
mov
int
into
out
ljmp
pop
xchg
pop
xor
jl
jp
cmp
in
popa
shrb
push
aad
dec
and
lds
clc
dec
mov
xchg
jb
xor
xor
push
jmp
dec
lahf
jmp
rcrl
cmp
cmp
jae
frstor
test
push
push
jne
sub
mov
mov
pushf
in
fcoml
shrl
ret
imul
xchg
inc
mov
mov
push
subl
cmp
push
popf
inc
pop
das
clc
subl
xor
dec
jae
add
fptan
adc
push
sub
xor
aad
out
add
sar
pop
mov
jb
xor
inc
sub
mov
inc
cld
lods
inc
das
push
neg
int
cmpb
hlt
jmp
mov
dec
xor
pop
cmp
or
mov
in
add
cwtl
jmp
push
call
jecxz
or
pop
out
lods
xor
aam
test
pop
lcall
push
xor
jl
in
push
sbb
or
push
and
push
daa
push
rcrl
sbb
aaa
mov
js
inc
add
loopne
pop
push
andb
push
int3
arpl
test
js
and
or
push
push
mov
adc
int3
in
test
mov
insb
ret
pusha
mov
loopne
fbld
sbb
cmp
setle
fistpl
jp
pop
sbb
inc
mov
mov
enter
shrb
and
out
outsb
and
push
push
cmp
cmpl
fidivl
enter
jg
scas
inc
sahf
mov
jo
fbstp
cli
jmp
and
and
sub
mov
inc
add
fisttpl
cmp
lock
sahf
push
stos
cmp
subb
mov
test
popa
xor
and
pop
pusha
shr
xor
testb
sbb
pop
inc
rorl
cs
dec
add
sahf
clc
mov
cld
cmp
mov
xor
jb
pop
icebp
xchg
add
push
movsl
or
mov
hlt
dec
pop
mov
mov
scas
ljmp
jb
jb
out
pop
xchg
mov
je
arpl
std
addr16
aas
mov
test
dec
bound
mov
xor
or
mov
aam
addr16
add
popf
lods
outsl
stc
aad
stc
jmp
xor
push
pop
jne
and
dec
fdivrl
cmp
call
pop
cmp
cmp
aaa
pop
push
mov
scas
mov
addr16
mov
pusha
ja
leave
xor
cwtl
out
xchg
jg
call
mov
loopne
sub
mov
aad
mov
pop
sbb
out
lods
fidivrl
add
sub
mov
mov
cmpsl
out
push
and
hlt
push
jne
cmp
aam
jns
sbb
pop
lods
ja
fidivrs
hlt
es
fs
iret
jae
enter
pop
pop
pop
hlt
mov
out
cmpsb
push
lods
jnp
out
mov
sub
xor
or
sub
push
mov
xchg
sub
icebp
push
dec
sbb
icebp
lcall
in
jb
rcll
or
decb
cmc
push
dec
pop
movsl
jg
pop
insb
in
jnp
pop
lds
or
or
xchg
and
or
xchg
dec
xor
daa
mov
push
out
push
sub
aaa
into
in
fbstp
adc
push
popa
mov
or
in
shr
mov
in
xchg
fwait
cmp
sub
mov
inc
jo
dec
rcrl
push
test
stc
and
bnd
lret
push
cmp
sub
bound
dec
stc
adc
mov
push
dec
loopne
es
std
xchg
cmc
push
popf
es
mov
and
dec
pop
sbb
test
dec
xchg
montmul
cmpsb
ret
cld
bound
imul
or
jmp
xlat
push
out
mov
inc
pop
and
push
xchg
push
mov
fsubr
imul
xor
mov
dec
pushf
sbb
popa
mov
cmp
jge
loope
test
add
movsb
fnsave
dec
stos
scas
mov
flds
es
mov
push
les
push
mov
loopne
popa
mov
testl
dec
push
pop
dec
pushf
inc
mov
loop
sbb
cmp
add
call
dec
jae
jl
adc
lret
popa
inc
cmp
loop
adc
sub
cld
push
mov
inc
test
inc
mov
sub
movsl
data16
push
icebp
lret
hlt
mov
stos
loope
rclb
in
outsl
mov
shl
lea
fnsave
js
add
add
adc
shlb
pop
and
xlat
pop
cmp
popa
dec
test
bound
dec
lea
or
mov
pushf
in
or
out
je
cld
mov
xor
pop
mov
cmp
jno
sbb
sbb
dec
bound
mov
jmp
hlt
icebp
cmp
mov
shll
pop
jne
mov
pop
filds
gs
rcll
mov
aam
shrb
xor
cmpsb
sbb
ja
hlt
notl
sub
das
fdivrl
push
pop
jnp
xor
adc
or
cmpsb
pop
or
pusha
xchg
loope
sub
lods
cmp
mov
xchg
nop
bound
in
jns
das
sbb
sub
fwait
and
mov
pop
or
adc
cmpsb
inc
iret
mov
xor
imul
push
pop
cwtl
xchg
pusha
stc
jle
sbb
lea
xor
xchg
and
xorb
aas
push
or
inc
jno
cmp
adcb
sub
inc
stos
inc
ja
mov
adc
or
bound
inc
fsubrs
sahf
adcb
xor
dec
push
enter
movsl
test
test
fidivl
push
jmp
scas
adc
mov
and
push
pop
test
xor
mov
xchg
cmp
dec
jo
pop
add
imul
cmp
xchg
iret
lea
push
push
in
xchg
sub
repnz
or
pushl
jge
pop
push
pop
icebp
cmpl
js
mov
pop
add
adc
repz
je
shl
popa
xchg
push
sbb
and
rol
dec
jae
xchg
xchg
shll
xchg
and
push
popf
in
ret
jbe
pop
push
sbb
iret
jp
pop
notb
sub
and
adc
xchg
or
push
mov
pop
xor
cwtl
lea
loop
aas
adc
push
test
push
ss
out
jno
dec
shl
ja
pop
icebp
sarb
xchg
dec
inc
dec
filds
inc
lods
mov
stos
popf
fwait
or
push
jmp
enter
and
push
lds
fisubrl
adc
hlt
push
lods
jecxz
or
into
mov
mov
lcall
int
push
popf
nop
loop
lods
fstpt
add
in
lods
push
lea
mov
push
loopne
rcrl
mov
xchg
mov
shrb
arpl
or
bnd
fs
or
xchg
xor
inc
sti
ds
decl
sbb
bound
iret
mov
dec
loope
mov
cmpsb
mov
lods
movsl
xor
mov
outsb
mov
cs
and
cmc
aaa
adc
push
pop
js
add
adc
les
idiv
xchg
iret
es
mov
or
xor
jmp
in
out
test
js
xchg
inc
adc
daa
insl
enter
pop
lock
jo
ret
cltd
nop
pause
out
mov
mull
jns
or
push
andl
call
test
mov
mov
mov
outsb
cmp
in
pop
fidivrs
aad
outsb
idivl
pop
adc
roll
sbb
xor
js
ret
daa
fmull
imul
insl
mov
adc
and
test
ret
pop
mov
mov
and
loop
jae
movsl
hlt
inc
sbb
mov
pop
loop
adc
faddl
and
jnp
push
pop
xor
scas
and
push
mov
sub
ds
xor
jmp
add
aam
mov
inc
fadd
dec
fcomi
inc
rcrl
out
das
scas
fucomip
addl
mov
mov
adc
adc
into
pop
imul
fs
mov
jle
or
cmpsl
xor
jnp
sar
popl
int3
loopne
mov
or
or
nop
daa
xchg
lcall
jae
fsubs
xchg
mov
add
push
cltd
inc
push
push
pushf
js
or
push
sbb
std
into
jno
loopne
push
xchg
push
pop
and
xlat
jb
sbb
ss
roll
add
pop
cmp
push
lret
adcb
popf
adc
scas
inc
sti
aaa
and
icebp
idivb
and
push
aaa
or
icebp
dec
sbb
js
cmpsb
lea
pop
and
int3
stc
arpl
mov
dec
mov
out
push
iret
lods
aas
push
je
popf
xchg
leave
inc
push
out
inc
xor
or
push
sub
dec
loopne
cmp
arpl
push
mov
add
ficoms
lea
lret
xchg
fidivrl
insb
pop
xchg
add
mov
dec
sbb
in
lods
cmp
pop
mov
outsb
dec
pop
mov
outsb
aad
into
mov
aam
cmpsl
mov
mov
adc
add
and
jne
jecxz
pop
mov
mov
jae
inc
pop
dec
pop
fwait
jo
mov
jp
lea
or
add
pop
jbe
jl
or
xlat
outsb
negb
mov
adcb
sbb
ret
jns
je
imul
mov
mov
pop
and
mov
jmp
mov
loopne
jae
pushf
sbb
xchg
insb
decl
and
jle
xor
ljmp
or
sbb
lcall
mov
aaa
dec
mov
mov
mov
lods
ja
out
mov
xor
pop
icebp
xchg
mov
das
cmc
popa
xor
lds
dec
rclb
mov
imul
shll
push
jne
ljmp
and
out
scas
mov
sbb
ret
add
xor
or
fcmovbe
xchg
pop
mov
push
sub
mov
stc
nop
xor
out
js
add
adcl
aad
jne
imul
push
xor
outsl
leave
sbb
mov
xchg
ljmp
mov
jns
aas
imul
pop
insb
decb
ljmp
sub
mov
and
orb
mov
stos
jge
pop
test
xor
fcomps
repz
aas
insl
adc
lahf
pusha
jne
sbb
pop
bnd
es
sbb
loopne
addr16
or
mov
mov
and
ret
pop
test
loop
fcoms
adc
ret
js
cmp
mov
lcall
cmp
aam
xor
inc
lahf
scas
cwtl
dec
pop
dec
inc
in
insl
out
push
jmp
inc
out
js
jmp
jp
add
cmpsl
mov
pushf
sbb
inc
leave
cmc
lock
js
and
xchg
push
or
in
arpl
push
push
inc
cmp
dec
xchg
mov
or
xor
popa
sbb
inc
outsb
push
xchg
insl
in
arpl
adc
iret
lahf
mov
cmpsl
data16
xchg
scas
add
push
aam
repnz
cmp
lock
pop
icebp
mov
sbb
movsl
lock
dec
inc
in
add
mov
inc
dec
nop
jg
stos
or
cmp
in
inc
jnp
lods
and
gs
lds
lcall
loop
pop
aas
inc
cli
cltd
mov
mov
fsts
adc
data16
jne
add
insb
shll
push
imul
movsb
xor
out
lds
jle
push
in
daa
xchg
cmpsl
pop
call
adcl
shrb
jl
std
outsl
mov
cmp
lret
ret
jnp
cmpsl
mov
je
jecxz
jo
imul
or
rclb
add
pop
iret
xor
in
sub
das
jo
data16
add
xlat
mov
stc
adc
aam
stc
add
sbb
in
or
pop
jle
sbb
dec
pop
cmc
jge
pusha
add
pop
jge
int
lea
sbb
divb
dec
loop
adc
cmp
imul
faddl
insb
loopne
jnp
das
add
pop
mov
ds
adc
insl
aas
lds
lahf
pop
and
fwait
sub
adc
mov
mov
push
cs
sub
mov
xor
dec
shrl
pop
in
popf
push
inc
sub
pop
cmc
xchg
mov
mov
je
mov
xchg
and
mov
fwait
imul
mov
mov
mov
push
or
cmpsb
cmp
and
mov
icebp
loope
mov
adc
mov
sahf
xor
xor
cmp
dec
subl
mov
ljmp
cmc
cltd
mov
cmp
xor
shlb
and
adc
pop
loopne
lcall
mov
push
add
or
cmpsl
cld
xor
and
call
in
and
aaa
sub
mov
ret
cwtl
jg
lret
add
and
and
xchg
cmp
subb
nop
daa
gs
lea
push
imul
mov
mov
push
cmp
pop
add
add
mov
ss
lea
push
mov
pop
mov
mov
loope
ret
aad
scas
push
add
jecxz
ja
stos
sbb
aam
in
scas
in
loopne
jae
sub
push
jg
cmp
shrb
inc
push
mov
popa
sbb
xor
jns
cld
std
mov
sub
or
fdivs
mov
dec
jno
sti
lret
scas
sub
repnz
popf
jo
push
insb
enter
outsl
out
mov
push
shlb
int
arpl
lds
shlb
push
inc
lea
fadd
int
sti
and
jg
sbb
lcall
dec
in
aam
fwait
or
out
test
pop
call
and
mov
out
and
xlat
adc
mov
pop
mov
push
adc
mov
bound
es
xor
cmp
mov
push
add
mov
lret
cmpsb
cmp
xchg
sub
cmp
stos
es
dec
filds
sti
lods
cmp
jb
cmp
adc
in
testb
dec
mov
jb
push
call
daa
jp
aaa
outsl
iret
cmpsb
cmp
inc
data16
ret
dec
test
jg
jne
mov
sub
and
fcoml
jb
repnz
adc
pushf
fdiv
les
fdivl
fcmovnb
cmp
mov
push
movb
mov
lahf
jl
hlt
jecxz
push
fwait
xor
xchg
xchg
js
inc
sti
push
out
inc
movsb
shl
xchg
adc
pop
addb
xchg
dec
test
mov
fwait
mov
cmpsb
fcoml
shrb
cltd
call
loopne
bound
cwtl
testl
mov
retw
faddl
sub
adc
leave
or
jno
adcb
cmp
aad
jge
ffree
pop
mov
xchg
pop
lock
lds
test
sub
movsb
mov
jle
jo
mov
lahf
push
add
shl
nop
push
cld
xchg
xchg
cwtl
daa
jl
js
inc
popf
scas
jmp
cmp
jmp
dec
iret
adc
fabs
sbb
adc
push
add
mov
movsb
add
fidivrl
and
pop
jne
add
add
xchg
dec
mov
xchg
test
sub
shrl
mov
push
push
insb
xchg
cmpsb
mov
shl
dec
pushf
stos
cmp
into
cmc
rorb
adc
cmpsl
and
pop
test
inc
imul
imul
push
test
imull
cmp
int3
or
pop
xor
mov
lock
mov
mov
int
in
loope
push
push
repnz
scas
mov
dec
jne
xor
out
test
pushf
add
das
or
jg
lret
pop
hlt
loop
je
push
xor
fninit
push
out
adc
xor
push
jno
or
or
outsb
push
fwait
rcrl
loopne
int
and
mov
inc
inc
cmp
out
mov
iret
jmp
jge
mov
or
shrb
push
push
nop
icebp
mov
mov
jl
pop
jb
movsl
imul
add
test
shrb
mov
or
mov
loopne
shld
sub
push
mov
fidivs
aaa
std
push
in
sub
xchg
jb
test
push
aaa
add
cwtl
add
cmp
push
fwait
xor
push
in
hlt
and
je
jbe
mov
cmp
mov
fsubrl
scas
pusha
sub
cmp
mov
daa
incl
sbb
adcl
ja
ja
jmp
xchg
sub
sub
pop
cmp
cltd
xor
mov
inc
enter
enter
clc
jmp
mov
fadds
mov
sbb
shl
roll
jecxz
pop
jae
icebp
sub
cmp
rcrl
in
push
gs
sub
jne
lock
xchg
inc
pushf
andb
dec
cmp
mov
or
xchg
cmc
movsb
neg
andl
shll
ret
les
in
pop
dec
inc
pop
xor
mov
pop
lock
stos
inc
xorl
cwtl
out
and
xor
test
inc
dec
call
sbb
sbb
mov
xchg
ja
or
push
pop
push
xlat
into
mov
sbb
out
sbb
gs
dec
std
xchg
jge
inc
cmp
lahf
sbb
add
push
add
dec
add
lods
hlt
movsl
push
outsb
inc
sbb
lods
sbb
outsb
adcl
dec
xchg
ss
popf
adc
fwait
insl
sub
fs
mov
push
enter
cld
pop
or
mov
fs
sbb
xor
arpl
orb
mov
rclb
mov
mov
in
loope
scas
inc
mov
xchg
into
push
sar
mov
mov
negb
icebp
nop
mov
xchg
call
test
jecxz
sti
cmpsb
out
jae
cwtl
fs
pushf
les
sub
aam
push
out
cld
mov
addb
jg
stc
loope
xchg
push
jo
in
fcoms
or
sbb
movsb
cmc
mov
loope
cli
data16
andl
stc
and
dec
jno
push
out
aam
mov
cwtl
shrl
or
xor
or
push
xchg
ja
xchg
jmp
and
shlb
repz
call
or
cmp
pop
lahf
in
pushf
inc
sbb
mov
loopne
data16
xchg
cld
push
mov
mov
cmpsl
xlat
add
push
sar
icebp
imul
mov
insb
into
gs
sub
into
push
add
dec
xchg
ficoms
push
xchg
ret
cmpsb
push
bound
lret
and
xchg
test
mov
int3
jl
add
js
mov
stos
mov
sbb
push
lret
es
xchg
sbb
ret
fwait
hlt
leave
mov
pop
inc
rcrb
icebp
cwtl
cmpsl
xor
adc
dec
jl
in
mov
xchg
jb,pn
dec
jecxz
pop
test
cs
cmp
popa
sub
imul
movsb
add
sub
mov
jl
or
orl
addr16
jno
inc
gs
inc
lea
mov
jbe
push
jmp
sub
pop
mov
pop
popf
out
jno
or
dec
outsl
push
mov
pop
inc
fdivrs
ret
adc
cli
xchg
out
data16
mov
jp
xchg
push
fcmovnb
shll
fs
test
aaa
or
nop
inc
add
inc
aas
mov
or
inc
mov
imulb
daa
lods
xchg
push
and
cli
loopne
outsl
sub
jnp
xchg
imul
es
sarb
xor
ret
loop
fnsave
xor
adc
data16
dec
jmp
mov
rolb
pop
out
dec
mov
jle
int3
push
jg
sub
sbb
out
test
cmp
aad
movsl
repz
pop
out
adc
lock
pop
aaa
bound
lods
mov
scas
test
push
sbb
cwtl
jg
pushl
sub
dec
movsb
mov
jmp
leave
mov
pop
loop
or
dec
ljmp
mov
pusha
negl
and
xchg
rcrb
pushl
das
loope
lods
ffree
mov
inc
bound
lcall
int
pop
add
push
cmp
sbb
jnp
call
dec
pusha
repnz
vcvtudq2pd
pop
and
test
mov
inc
out
dec
jnp
icebp
cmp
xor
jno
dec
xor
jo
xlat
mov
mov
les
sub
cltd
add
rorl
std
push
xor
aaa
dec
push
movsb
les
lea
jne
push
rcrb
in
inc
addr16
in
ds
sub
gs
inc
sti
stc
or
push
aam
lea
inc
pop
mov
je
cmp
insl
add
mov
and
lods
dec
push
add
add
lcall
jle
fsubrs
push
add
sbbb
out
rcrl
xchg
sub
fbstp
fstp
lods
push
iret
bndstx
pusha
mov
inc
not
jns
xor
push
cmpsb
pushf
inc
fisttps
fstl
push
outsb
xor
push
inc
cltd
xor
or
mov
das
shl
mov
xchg
xchg
add
push
cmp
push
mov
ror
ret
fs
gs
loope
cltd
imull
and
jecxz
xor
data16
dec
jmp
inc
dec
pop
mov
cld
mov
sbb
enter
dec
jmp
xchg
mov
lcall
pop
lock
mov
jb
dec
mov
lret
into
shrb
imul
and
testl
jae
sti
xchg
mov
inc
sbb
repnz
pop
jo
adc
adc
adc
push
sarl
dec
mov
fcmovb
xlat
xor
iret
test
xor
pop
pop
dec
sbb
sbb
cmc
leave
ret
jge
cs
call
sub
lret
sbb
fdivl
dec
lods
dec
inc
popa
cmp
lods
jg
jno
call
dec
inc
call
fistl
mov
arpl
mov
leave
in
push
and
mov
mov
add
dec
mov
ret
fdivrp
mov
stc
hlt
dec
mov
in
pop
lods
js
js
ret
pop
xor
dec
lods
mov
roll
pop
mov
andb
mov
lret
mov
outsl
sahf
test
and
mov
mov
flds
bound
and
mov
push
mov
push
int3
sub
xlat
repz
jno
xlat
pop
or
pop
das
xor
jae
xchg
and
push
stc
pop
and
outsb
ret
jae
jnp
cmp
pop
addr16
test
loope
or
inc
lods
inc
lahf
iret
and
push
rol
std
cmp
mov
push
cmp
pop
cmp
jp
inc
jns
cli
xchg
faddp
xchg
insl
clc
pop
hlt
lods
inc
je,pn
fsubl
int3
stos
inc
testb
jl
lret
test
cmp
pop
into
repnz
xor
jge
mov
jnp
and
std
outsb
lock
mov
xchg
js
pop
cltd
sub
out
add
push
cld
adc
lods
out
nop
idivb
fnstcw
xlat
lret
hlt
ss
and
jb
mov
cli
pushf
movl
and
xchg
add
adc
mov
fsubrs
fldenv
lret
mov
movsb
cmp
jo
enter
mov
in
xor
push
test
push
xchg
sub
lods
neg
jbe
push
adc
inc
cltd
sub
jne
and
mov
repnz
push
insl
sbb
sahf
loopne
cmp
ds
cmp
and
lods
jnp
and
and
ss
stc
jae
in
je
aas
imul
or
ret
mov
flds
and
xchg
into
movsl
inc
sub
aaa
rclb
lcall
lret
inc
push
mov
popa
sbb
scas
sbb
into
pop
sbb
mov
fdivrs
or
xor
nop
mov
sbb
add
iret
lcall
insb
push
adc
mov
cmp
fistpl
shl
lds
enter
repnz
fisttpl
cld
pop
movsl
test
add
sbb
push
sbb
and
les
pop
mov
in
or
pop
push
sub
pop
sbb
pop
cmpsb
mov
inc
test
pop
in
jg
loop
nop
cmp
pop
sarl
outsl
adc
sub
std
sbb
das
cmp
int3
add
mov
ljmp
test
lret
scas
xor
enter
xor
push
xchg
and
iret
test
mov
out
pop
push
mov
mov
mov
sub
adc
pusha
inc
fs
jns
mov
push
jno
mov
scas
jno
and
xchg
mov
ficompl
add
add
mov
and
push
movsl
test
lods
xor
mov
xchg
add
and
push
popf
xor
movsl
sub
fistpl
shrb
fildl
mov
dec
mov
dec
fistps
lods
fstpt
jae
mov
pop
orb
mov
push
out
pop
or
mov
loope
xor
js
and
mov
dec
xchg
pop
adc
mov
ret
addb
pop
sahf
enter
xor
pushf
cwtl
push
push
push
xchg
add
xchg
nop
das
pop
out
call
push
hlt
jg
cmpsl
jnp
mov
jo
sbb
scas
adc
out
out
inc
pop
pop
hlt
add
jp
jle
mov
push
loopew
popf
mov
dec
loope
cmpsl
pop
jno
inc
push
dec
add
cld
lcall
and
adc
data16
sbb
daa
popf
in
test
and
or
bound
pop
push
cld
lea
sub
mov
cmp
fsubr
stc
pop
mov
data16
fdivr
or
cmp
pusha
loopne
enter
or
mov
rcrb
adc
je
test
pop
jmp
adcl
fwait
stc
mov
aas
sub
movsb
aad
insl
pusha
dec
into
ljmp
rcl
cmp
xchg
mov
popa
in
addb
push
mov
adc
iret
les
dec
aaa
sub
push
scas
inc
and
arpl
mov
aas
and
stos
das
data16
sti
imul
loop
sbb
xchg
add
cmp
cmp
adc
pop
xor
pop
push
inc
cmp
js
lret
mov
push
push
jmp
insl
cli
rolb
sahf
ret
hlt
push
push
cmp
jne
insb
outsl
mov
pop
jecxz
xor
mov
xor
push
mov
mov
mov
das
and
aad
mov
cmpb
dec
add
mov
dec
daa
rcll
xchg
out
and
push
add
cli
sub
icebp
movsb
dec
sbbl
xor
inc
daa
cwtl
shr
hlt
cltd
jge
mov
mov
test
test
lahf
pop
fidivs
jle
xchg
adc
adcl
pop
sub
mov
in
pop
out
dec
dec
fwait
nop
cmp
add
lcall
out
out
mov
jnp
stos
sbb
test
dec
inc
pop
lock
jle
clc
cltd
fs
mov
flds
xor
cmp
insl
adc
mov
push
dec
cpuid
mov
jmp
or
mov
pop
call
andb
mov
fnstenv
ds
xchg
out
mov
adc
dec
push
sub
ja
or
negl
inc
test
call
test
jle
in
movsb
inc
jecxz
push
mov
into
leave
mov
je
popa
jns
xchg
mov
hlt
mov
pop
jle
stc
xchg
adc
cmp
adc
lods
movsl
mov
out
stc
push
rorl
iret
adc
and
pop
cld
push
out
subb
xor
les
pop
call
cmp
pushf
ret
sbb
icebp
mov
loopne
decl
mov
mov
jg
jle
loope
lds
mov
pop
loopne
ret
or
aas
or
scas
inc
mov
jl
sarb
es
xchg
ss
insb
jnp
adc
scas
mov
arpl
jmp
mov
mov
push
xor
shll
mov
movsl
mov
repnz
pop
rol
dec
push
cld
mov
mov
cmp
dec
mov
cld
into
dec
test
mov
mov
or
inc
jns
lods
pop
or
or
nop
daa
add
xor
sahf
in
mov
lods
cmp
test
xor
andps
inc
mov
lret
bound
lods
pop
aad
push
jmp
mov
fwait
nop
std
flds
push
gs
jno
popa
mov
push
mov
out
fidivrl
cltd
mov
test
inc
stos
adc
cmpsl
jne
adc
in
mov
fmulp
sbb
scas
repnz
xchg
das
iret
add
imul
push
addr16
mov
dec
and
jecxz
aam
arpl
test
ljmp
push
sti
mov
sub
pop
xchg
xor
or
inc
or
out
inc
xorl
daa
or
mov
into
loope
and
xchg
enter
cmp
out
cmpsl
loope
shl
jno,pn
push
xchg
in
test
je
mov
pushf
nop
mov
pop
or
dec
adc
loope
push
repz
jno
jns
mov
cld
das
inc
mov
aas
decb
lret
xchg
push
movsb
push
mov
dec
sbb
repnz
daa
push
in
jb
add
lahf
lea
cmpsb
mov
neg
sub
sub
out
das
cmp
loope
ret
cmpsb
jecxz
lahf
adc
lods
jmp
sub
popl
lahf
jb
repnz
add
shrl
test
out
scas
lea
out
test
inc
wbinvd
sti
and
xchg
xchg
fwait
scas
cmpsl
mov
fxtract
mov
in
sub
xchg
fstpt
mov
pop
sub
cmpsl
int3
xchg
pushf
mov
jnp
cmp
pushf
mov
push
push
jge
dec
dec
sbb
add
cmp
jecxz
push
push
pop
pushf
jae
push
mov
jle
inc
insb
fsubs
xor
push
xor
in
test
fsubrl
push
aad
mov
cmp
outsb
push
push
inc
fnstenv
sub
in
stos
or
outsl
out
and
pushf
loope
js
inc
test
mov
pop
fwait
mov
cmp
pop
xchg
add
icebp
nop
xor
dec
loop
test
cmp
out
inc
rorl
mov
jge
ret
packsswb
ja
dec
add
sahf
stos
cmp
aam
cld
in
stc
push
sbb
sbbb
cld
dec
sarb
pusha
imul
xchg
stos
or
mov
pushl
jl
sub
add
fstpt
ljmp
pop
mov
ret
in
add
mov
or
add
test
inc
outsl
xorl
push
jecxz
int3
dec
dec
xor
aas
addr16
pusha
stos
into
insb
mov
mov
outsb
xchg
xchg
lret
dec
push
xchg
mov
fbstp
arpl
xchg
lcall
adc
xchg
rcr
repnz
push
push
and
push
mov
push
xor
xorb
insl
inc
imul
push
outsb
mov
xchg
xchg
cmp
and
push
push
dec
inc
fimull
cmpsl
popa
clc
fsubs
cli
push
mov
fcmovu
shrl
out
cs
or
or
mov
or
inc
scas
jnp
jecxz
inc
cmpsb
shrl
add
and
enter
stos
std
and
aas
mov
dec
je
or
cld
cmp
adc
xchg
fwait
mov
sbb
inc
dec
and
lret
clc
push
cmpl
shlb
xchg
loope
mov
mov
fsubrs
and
mov
test
cmp
cmpsl
aas
icebp
insb
cmpsl
or
xor
xorl
faddl
push
pop
fbld
mov
mov
repz
dec
xor
inc
roll
pop
dec
icebp
sub
pop
push
pop
gs
nop
jae
arpl
mov
xor
or
jne
aam
push
xchg
cmp
pop
fbstp
notb
push
aad
mov
inc
dec
lds
popa
and
popf
xor
adc
adc
add
jo
decl
pop
shrl
push
mov
fsub
mov
pop
rcr
push
movsl
or
push
xor
lret
fstpl
sbb
rorb
sub
leave
xor
call
stos
mov
bound
inc
jmp
rorl
adc
lds
cmp
sub
mov
dec
sbb
xor
aaa
sti
xor
xor
sti
out
add
nop
xchg
mov
push
fdivrl
cmpsb
jmp
out
mov
pop
inc
ja
jl
popa
sahf
mov
ja
mov
out
mov
dec
shrb
jne
aas
dec
mov
jno
imul
jae
push
cs
sbb
add
cmpl
test
sub
cmc
mov
sub
test
pop
outsb
rcrb
add
sub
cmc
test
inc
jl
mov
hlt
sub
sti
sarb
adc
inc
mov
idivb
sbb
jge
lea
loop
nop
call
std
pop
push
popf
out
test
push
and
add
test
pop
pop
xor
push
clc
sahf
incb
pop
push
imul
scas
fildll
inc
mov
and
push
out
pop
push
in
notb
daa
imull
sub
xor
pop
dec
add
filds
pop
pushf
pushf
ret
and
in
cmp
sbb
add
scas
in
xchg
inc
stos
mov
mov
nop
mov
jb
sbb
aas
cmp
mov
mov
and
stc
test
outsl
xchg
push
inc
nop
hlt
adc
mov
jbe
ss
rclb
mov
sub
std
cmpb
add
or
sbb
pushf
mov
push
inc
arpl
test
lret
jbe
das
subl
fsubr
mov
loopne
xchg
mov
fnstenv
test
push
je
shr
jge
call
rclb
cmpsl
adc
call
cmp
pop
mov
and
addr16
and
dec
je
arpl
xchg
mov
lret
bound
inc
hlt
jbe
ljmp
shll
push
jnp
pop
aas
das
ds
data16
jb
adc
cmc
and
jne
dec
inc
imul
scas
xchg
sbbl
and
leave
pop
popa
mov
repz
push
mov
mov
xor
add
scas
sbb
xlat
sahf
or
imul
pushf
or
sahf
lock
test
fdiv
cmp
pop
push
push
iret
sub
mov
es
inc
xchg
cmc
mov
adc
add
sbb
pop
insl
jnp
ret
cli
rcl
mov
idivl
data16
shll
jge
cmp
jo
mov
hlt
xchg
xor
push
push
fimuls
sbb
je
ss
mov
sti
pop
adc
lret
push
mov
stos
aas
and
dec
cld
mov
jge
pop
imul
ljmp
mov
jns
daa
ss
fildl
adc
mov
sub
lahf
js
sbbb
cltd
pushf
ss
adc
mov
pop
int
fdivs
out
fbstp
jnp
subl
jl
lock
test
movsl
mov
cmp
mov
jp
das
push
or
mov
das
push
xor
pop
push
out
out
call
addl
fwait
movsb
js
hlt
mov
fcmovbe
je
dec
or
pop
and
or
pop
dec
pop
jl
or
out
xchg
xor
mov
fdivs
mov
je
push
push
fstpl
mov
xchg
imul
movsb
add
sbb
mov
int
xor
dec
lods
bound
cmpb
dec
pushf
nop
into
imul
testb
mov
mov
out
xor
cmp
push
andb
cmp
adc
push
dec
pop
xor
mov
cmp
in
fcmovnb
imul
push
cmp
and
dec
flds
adc
xor
ficomps
mov
loope
repnz
and
or
jb
loop
mov
mov
bnd
adcl
xchg
sub
mov
call
andb
mov
dec
loop
xchg
cltd
mov
push
call
inc
lcall
jge
inc
es
pop
and
ret
fbstp
mov
ljmp
jns
dec
loop
nop
fsubr
mov
icebp
dec
rcr
daa
mov
testb
add
xchg
out
sahf
jae
push
jae
shlb
in
ret
adc
test
dec
loope
adc
xchg
lods
repz
xor
sahf
jnp
aam
inc
pushf
xchg
push
in
addr16
inc
mov
push
das
aas
pop
call
out
xchg
outsl
and
test
ss
lcall
push
mov
pop
cmp
add
inc
sbb
inc
inc
xor
jmp
in
stos
push
movsb
fistl
xlat
dec
loopne
xchg
sbb
ja
js
push
pusha
divl
xchg
mov
fmull
pushf
bound
adc
add
pusha
xor
mov
in
cmp
mov
mov
cmp
fldcw
push
mov
and
mov
mov
mov
fucomip
cmpb
test
lock
mov
sbb
mov
cmp
mov
stos
xchg
push
outsl
ficompl
enter
push
in
xchg
xlat
addr16
test
or
adc
lahf
xor
es
pop
or
movsl
cmp
sub
lret
cmpsl
repnz
push
imul
xchg
mov
neg
mov
mov
mov
aas
add
popf
stc
loope
mov
push
lcall
sahf
hlt
aaa
es
dec
sbbl
push
flds
mov
pop
insl
or
mov
push
ret
scas
out
mov
mov
iret
hlt
adc
jle
jmp
jecxz
fs
push
leave
test
aaa
ret
arpl
gs
fsubr
xchg
xchg
adc
lret
dec
insl
adc
mov
xor
mov
fbld
cli
inc
mov
and
sub
and
inc
lahf
nop
adc
lret
inc
lret
into
dec
mov
incl
push
jae
data16
and
lcall
jmp
cli
xchg
or
push
dec
cmp
mov
jb
mov
xchg
mov
add
xchg
aad
hlt
sahf
inc
testl
int
movsl
ret
pop
cmc
push
call
mov
sbb
inc
aad
out
lea
xchg
mov
sbb
cwtl
pusha
and
jg
mov
jl
out
lahf
sbb
dec
mov
iret
pop
xor
or
ljmp
inc
and
inc
and
sbb
test
sbb
sub
repz
or
mov
popa
dec
outsl
sbb
dec
stos
sub
scas
idiv
mov
inc
fisubs
mov
ljmp
stc
mov
cmp
mov
add
bswap
cs
pop
outsl
pushf
xchg
ret
clc
push
scas
jne
pop
loopne
xchg
ss
gs
sbb
subl
mov
ret
pop
mov
and
cmpsl
imul
jno
flds
jb
fs
cltd
sbb
mov
jns
imul
pop
shrl
inc
into
aad
mov
sbb
push
xchg
or
loopne
mov
inc
jle
mov
xlat
in
adc
sbb
jno
aaa
pop
test
lret
cmp
sar
dec
push
inc
xlat
inc
daa
cltd
sub
lret
into
das
fs
adc
adc
subl
mov
inc
js
and
rorb
leave
jnp
lret
sbb
aas
adc
or
fsts
rclb
fldcw
or
jle
mov
ds
xor
or
adc
sub
push
inc
fs
fbld
mov
xchg
or
adc
into
mov
pusha
ret
sub
mov
xchg
sub
lods
mov
in
mov
dec
in
iret
data16
in
add
je
je
xchg
decb
xlat
testb
push
dec
xchg
jmp
sub
aaa
jnp
sub
cmp
data16
pop
lods
push
adc
fadds
sbb
push
cmpsl
mov
fldcw
mov
xor
mov
cli
pop
cmpsl
and
rorb
sbb
sarb
jge
test
inc
inc
inc
jae
fidivrs
outsb
push
gs
shlb
les
jmp
push
into
xchg
les
adc
push
pop
pusha
inc
sti
vpunpcklqdq
andb
mov
jnp
dec
xchg
fiaddl
mov
aam
sbbb
out
fs
int
xchg
cmpsl
dec
inc
xlat
jns
mov
jns
movsl
aam
xlat
js
sbb
cmpsb
cmp
std
jno
pop
mov
dec
loop
add
testb
movsl
cmp
mov
mov
inc
clc
xlat
outsb
sub
clc
fimull
not
divl
mov
out
xor
xchg
mov
in
cltd
pop
push
inc
shll
adc
mov
mov
inc
aam
scas
shlb
adc
xchg
cmp
int
ja
adc
enter
push
jb
mov
xchg
ret
add
xor
cmp
or
fisttpl
cmp
xor
jle
cmp
fisttpll
and
imul
sbb
and
aad
inc
push
out
testb
cwtl
mov
shll
xchg
out
js
jo
loopne
stos
push
fwait
mov
or
fimull
out
fs
and
mov
lods
mov
mov
jge
mov
xlat
dec
sbb
jmp
jmp
loopne
mov
addr16
enter
rclb
xlat
add
repnz
pop
fwait
out
lds
addr16
imull
test
fucom
mov
adc
add
shrl
mov
les
mov
push
lock
pop
xor
add
in
mov
push
adc
outsb
jae
rcrb
add
js
ss
cwtl
mov
mov
push
mov
pop
lret
shl
mov
in
jnp
insl
mov
clc
adcb
add
mov
cltd
mov
add
outsl
jnp
xor
mov
pushf
or
imul
mov
sbb
xchg
into
mov
mov
fisttpl
xlat
jp
stos
inc
out
pop
in
fadds
jae
mov
lret
aas
lret
and
pop
loopne
inc
push
jb
lock
pop
jo
stos
lock
dec
dec
insb
push
leave
pushf
leave
sarl
arpl
addr16
lds
cmp
cmpsl
ret
mov
mov
aam
dec
adc
das
test
stc
jbe
ljmp
jecxz
lock
test
test
adc
or
fucomi
stc
or
xchg
int
bound
out
mov
mov
fsubl
xchg
scas
bound
and
adc
xor
pop
pop
faddl
mov
pop
push
inc
fildl
mov
mov
jnp
sbb
cmp
xlat
jnp
or
xchg
push
out
sbb
push
cmpsl
cmp
cmpsb
pop
mov
xchg
adcl
add
or
add
stos
lods
inc
mulb
add
scas
dec
pop
loope
or
push
add
je
fisubl
fldenv
in
je
jmp
xchg
std
dec
pop
xor
in
js
out
xlat
out
test
mov
pop
sbb
lea
test
rcr
push
vshufps
mov
hlt
adc
push
fsubs
mov
fs
popa
mov
xchg
sbb
push
cmp
hlt
jmp
fadds
mov
stos
mov
subl
pop
inc
add
dec
stc
jbe
lds
aaa
adc
fidivrs
mov
into
in
fmul
cmc
or
dec
jne
sub
pushf
sbb
push
mov
imul
pop
jns
cmp
cltd
mov
bound
insb
ja
and
xchg
xchg
mov
lods
mov
es
cltd
lods
movb
test
negl
jge
iret
dec
lods
js
aas
inc
gs
cs
stos
cmpsl
inc
js
jg
xor
jb
ds
mov
mov
leave
fisttpll
mov
cmp
mov
out
loope
xor
mov
ljmp
pushf
xor
icebp
ja
fdivrs
inc
test
sbbl
jmp
xchg
fdivs
stc
mov
scas
sbb
scas
mov
xor
xchg
fstps
movsb
fucom
roll
sub
xchg
out
xchg
fsubrl
pop
inc
inc
xlat
jl
subb
aas
xor
add
rorb
fucomi
or
iret
arpl
cmp
push
adc
mov
inc
pop
sub
xor
imull
sbbl
xor
int3
aaa
mov
mov
arpl
rclb
das
push
mov
mov
and
lea
push
adc
pop
jno
ja
push
arpl
xchg
dec
push
in
lds
je
add
insb
repz
xchg
test
mov
fdivrp
jbe
pop
push
pop
in
mov
ljmp
rcl
and
cmpsl
push
sbb
sahf
pop
lret
mov
cmpsb
ret
sti
xchg
bound
cmpsb
add
xor
lods
test
add
mov
out
and
xor
xchg
sub
jle
or
xchg
test
mov
neg
lahf
push
das
jne
push
pop
dec
fdivrs
ja
push
add
cmc
dec
push
add
cmp
dec
push
jg
or
pusha
test
sbb
xor
insb
xor
jne
cmpsb
das
and
sahf
fisubrs
enter
inc
mov
sbb
int
lock
pop
fdivr
iret
arpl
inc
in
icebp
pop
jb
mov
cld
dec
in
jge
mov
cld
imul
and
cmpsb
add
cld
nop
repz
cmp
das
and
in
lret
leave
jge
outsb
mov
mov
lret
cmp
roll
lcall
cmpsl
fsubl
sub
xchg
enter
enter
cmpb
sub
sub
mov
mov
jg
mov
jge
daa
xchg
sub
outsb
or
xor
inc
dec
out
xor
cmp
addr16
xchg
and
push
add
ficoml
xor
mov
xchg
in
cld
repnz
shlb
lahf
ljmp
push
cli
cmpxchg
cmp
xchg
aaa
iret
or
fsubs
mov
out
add
jl
add
inc
cmpb
jno
jg
daa
subl
xor
and
inc
popf
rclb
lock
and
cmp
adc
jle
pop
repnz
push
push
cmpsb
lods
rclb
or
mov
add
jb
mov
popf
sbb
sarl
fdivs
fwait
out
xchg
test
pop
xchg
push
arpl
pop
aas
shlb
pop
or
cmp
out
xchg
mov
and
stos
mov
testl
mov
cmp
cmc
mov
scas
dec
in
jge
lahf
negl
mov
sbb
in
push
cmp
loope
in
pop
outsl
push
jle,pt
out
xor
jecxz
test
xchg
hlt
push
lcall
movsl
or
jnp
push
loop
ficoml
or
mov
neg
mov
lret
fbld
stos
jge
xchg
mov
lcall
and
bts
mov
mov
loopne
push
jmp
xor
in
mov
out
andl
cmp
jge
dec
icebp
inc
frstor
orl
lods
fcmovne
in
sahf
les
out
out
rcll
mov
sub
mov
jo
push
aam
imul
enter
test
xchg
sbb
add
sub
pop
cli
mov
arpl
ljmp
cs
mov
std
xchg
pop
pop
subl
mov
popf
cmp
in
add
add
xor
movsl
jle
nop
in
inc
movsb
cmp
add
adc
filds
and
jb
mov
clc
cmovge
rcrb
or
pusha
imull
aaa
pop
add
inc
fs
pushf
ja
outsl
xchg
inc
sti
xchg
cmp
adc
aaa
xchg
nop
daa
lds
mov
movsb
pop
rcrb
cwtl
mov
aas
pop
sti
xor
pusha
bound
or
inc
out
dec
sub
mov
pushf
or
push
aaa
and
cli
jecxz
sub
mov
xor
jne
shl
mov
test
inc
arpl
jecxz
mov
push
mov
scas
lock
loopne
cmpsb
cld
jge
xchg
cmc
sbb
mov
jo
daa
inc
adc
and
dec
cld
pop
inc
push
sarb
push
inc
out
repz
icebp
mov
xor
sub
cmp
jns
pop
mov
fsub
jp
mov
add
sub
icebp
lret
icebp
adc
dec
push
or
inc
sub
scas
mov
pop
ret
stos
shll
add
lahf
and
loopne
dec
pusha
xor
scas
vcomiss
cltd
add
ret
fsts
and
out
jo,pt
xchg
mov
popf
aaa
xchg
jecxz
push
xor
pusha
loopne
sahf
pop
pop
cltd
call
or
mov
cmpsl
mov
fldl
scas
mov
cmc
std
xchg
aaa
into
sbb
lret
decb
jns
xor
push
pushf
lcall
mov
add
sub
add
repnz
sub
loopne
cli
daa
jle
mov
add
sub
mov
std
sub
addr16
pusha
add
sub
leave
add
and
imul
fdivl
rclb
xchg
sub
loope
sub
mov
sbb
icebp
mov
cmp
push
imull
lret
or
js
mov
xorl
push
jns
leave
int
xchg
pop
jp
or
xchg
mov
lods
cmp
xchg
mov
arpl
pop
push
mov
nop
mov
arpl
jbe
gs
or
fwait
push
jmp
cmp
insl
rolb
push
sbbb
and
vmulss
cmp
sub
fbld
sbb
addps
cwtl
shrb
fnstenv
out
mov
fcomp
test
cltd
xor
je
mov
loope
xor
fmuls
pop
lock
std
jge
jl
rcrl
push
popf
inc
push
sbb
add
xchg
and
push
aam
sub
gs
sub
jp
cld
sarl
movsb
ja
fstpl
test
imul
fbstp
cmpsl
mov
bound
xor
xchg
dec
fidivl
mov
js
push
or
push
push
roll
int3
ja
pop
cmp
test
push
stc
test
imul
dec
rorb
mov
inc
sahf
mov
sbb
jae
jbe
loopne
jbe
aad
mov
cmp
pusha
mov
inc
push
cmp
andb
int3
sbb
movb
xchg
pop
out
cwtl
scas
mov
dec
ljmp
cmp
jo
add
push
shrl
inc
ds
push
mov
or
cs
mov
scas
mov
jg
ljmp
scas
addr16
loop
cmpsb
repz
sbb
jns
call
mov
jmp
xchg
mov
ja
mulb
push
inc
mov
jne
jns
push
xlat
fs
bswap
dec
hlt
pop
adc
jecxz
lret
jb
in
add
push
rolb
jno
mov
clc
popa
xchg
mov
push
aaa
cltd
daa
cltd
test
cmp
je
bound
or
sub
icebp
mov
pop
ss
out
pop
mov
ficomps
adc
dec
xor
cmc
sahf
rcrl
scas
xor
jnp
inc
jae
mov
sbb
jle
fdivp
mov
aam
push
mov
lock
ds
cltd
ss
sub
aam
shl
repz
cltd
cmc
repnz
cmp
adc
nop
pushf
ret
aad
sub
xor
cltd
pop
in
jbe
jl
add
outsb
stos
lock
push
xchg
jb
dec
push
and
xchg
inc
stc
adc
mov
xor
mov
sbb
inc
jmp
imull
push
shl
fmull
cs
ss
mov
mov
nop
or
dec
pop
pop
in
pop
jb
fistpl
xor
jno
test
or
jge
push
out
mov
daa
popl
lret
in
test
or
and
sub
jae
aaa
into
stos
xchg
mov
int3
js
out
dec
sbb
js
push
cmp
into
push
ja
movsb
mov
paddd
cmp
xor
ja
adc
mov
mov
jle
iret
scas
loope
or
scas
or
dec
jb
iret
jle
jne
fisubl
jp
jmp
cmp
lahf
xor
mov
mov
jl
or
xor
mov
in
into
add
inc
mov
pop
adc
and
icebp
push
cmc
sbbl
sub
jl
fstps
cmp
sub
cmp
and
mov
inc
jo
test
inc
push
pop
add
lds
in
push
lcall
decl
test
test
into
xor
xchg
imul
loopne
xchg
fcompp
mov
stos
jo
mov
jp
aam
repnz
dec
or
pop
leave
pushf
push
repz
jmp
push
idivl
out
xchg
push
ud2
push
dec
and
mov
das
lds
xchg
pop
andl
clc
daa
rorb
fwait
loop
popf
mov
xchg
mov
lock
sbb
jno
mov
in
outsb
data16
pop
sbb
xchg
jmp
xchg
push
rcl
gs
add
or
in
jns
pop
outsl
dec
xchg
mov
and
sbb
cmp
test
jne
gs
jo
xor
es
xchg
push
ljmp
imul
xchg
lds
sti
cltd
jns
mov
ficompl
add
shrb
xchg
imul
mov
test
out
sub
lea
mov
cltd
or
push
jecxz
sub
inc
push
ss
sbb
push
push
mov
push
out
push
sbb
lcall
inc
out
das
test
mov
fwait
xor
inc
mov
mov
int
sahf
push
aas
pop
les
mov
xor
dec
out
and
jg
roll
mov
test
sbb
pushf
in
dec
inc
lds
sub
pop
xor
xor
repnz
pop
leave
andb
in
jecxz
mov
inc
jo
nop
adc
int
jl
fsubs
mov
mov
inc
gs
push
int
or
cmc
and
sahf
and
jo
mov
loopne
shlb
out
cmp
cmp
dec
out
pop
xchg
jmp
in
jno
insl
inc
pop
xchg
push
shrl
mov
out
ret
das
hlt
push
in
std
xchg
xor
das
subb
popf
xor
cmpsb
pop
inc
sbb
fucomip
xchg
and
jo
jecxz
mov
ljmp
adc
test
cmp
and
add
mov
pop
mov
data16
fwait
scas
fdivl
mov
push
mov
pop
add
clc
sbb
mov
mov
push
insl
jp
xchg
shrb
mov
xchg
jmp
pop
sbb
jo
sahf
test
addb
mov
mov
mov
dec
lds
insb
loopne
cltd
jl
dec
negb
jge
loopne
vmread
js
movsl
adc
xchg
jbe
stos
call
test
mov
insb
aam
iret
arpl
pop
gs
frstor
decl
inc
inc
jo
mov
mov
test
mov
movsl
stos
sbb
rol
loopne
aas
pusha
and
movsb
sahf
dec
xchg
inc
leave
and
mov
inc
sub
cli
or
add
inc
push
add
mov
add
sarb
stos
daa
mov
fs
fildll
popa
daa
lcall
sbb
cltd
int
pop
in
ficoml
pusha
mov
and
mov
pushf
jns
lds
loopne
jmp
subb
push
cwtl
or
pop
xchg
mov
cld
stos
cwtl
xchg
xchg
inc
inc
pop
jnp
sub
adc
addb
popf
mov
aam
mov
les
or
adc
cltd
or
in
outsb
gs
mov
scas
outsl
add
xchg
xlat
sub
push
inc
fidivrl
pop
bound
fldenv
mov
imul
and
push
inc
or
pusha
mov
mov
into
pop
jb
fdivl
adc
test
ret
test
fmulp
leave
mov
cmc
cmp
mov
aad
jmp
aam
clc
movsb
movsb
stos
test
lods
fxch
sub
int3
adc
or
xchg
mov
scas
loopne
cmp
imull
daa
sbb
sbb
jns
nop
push
repnz
jns
dec
jmp
imul
and
pop
repz
xchg
xlat
pop
push
mov
or
daa
pusha
add
xchg
mov
or
sub
pop
in
or
adc
adc
loop
incb
pushf
cmpsb
mov
sub
sub
pop
jae
xlat
outsb
mov
xorb
pop
je
add
jg
addr16
out
je
jnp
pop
loope
and
adc
jo
mulb
es
mov
add
lret
mov
cltd
mov
js
cmp
daa
imul
into
les
mov
out
notb
out
dec
js
in
out
sti
pop
ja
sysexit
jge
or
mov
inc
ror
enter
sbb
lods
fidivl
push
jecxz
sti
pop
pop
xor
repz
sbb
sbb
ret
mov
inc
icebp
cltd
dec
cmp
cmp
insb
aam
cld
rorl
dec
add
xchg
nop
xchg
mov
sarl
lea
jnp
in
test
cltd
cmp
lret
sub
mov
xchg
add
mov
insl
jo
push
gs
add
shlb
adc
shr
mov
scas
inc
loop
xchg
sbb
add
xor
fucomip
cmp
push
jae
inc
roll
stos
mov
xchg
pop
imul
adc
mov
xor
xor
cltd
cltd
and
bound
sbb
data16
shlb
jecxz
push
lret
pop
repnz
icebp
cmp
jns
add
adc
push
or
lcall
cmp
add
outsb
adc
scas
jp
pop
inc
push
xchg
int3
mov
or
jb
pop
ss
or
or
xchg
cmp
jmp
jmp
xor
mov
push
mov
mov
mov
cld
sbb
sub
jg
pop
xor
dec
maskmovq
mull
mov
outsb
xchg
xor
cmpsl
cmp
insb
je
xor
push
insb
rorb
mov
dec
mov
scas
shll
cs
mov
jp
cmpsl
stos
or
fmul
decl
mov
adc
cwtl
cwtl
cmp
movsb
pop
push
test
pop
sbb
in
jns
sub
dec
lcall
xchg
orb
int
or
adc
enter
dec
add
mov
aad
andb
mov
addb
xchg
sub
shlb
lret
mov
push
in
cli
and
fnstcw
pop
mov
sub
movl
cmp
mov
mov
emms
jg
test
and
loope
movsb
pop
xchg
icebp
nop
adc
call
cmpsl
pop
push
cmp
daa
xor
stos
out
ret
push
pop
cmp
test
test
mov
stos
rorb
and
push
push
into
gs
pop
xchg
jbe
cmp
aam
jne
or
mov
in
mov
pop
shlb
xchg
xor
les
pop
into
out
pop
shl
aaa
dec
loopne
jg
icebp
mov
lahf
arpl
dec
das
loope
sub
dec
sub
jmp
outsb
shll
sbb
lods
js
stos
mov
xchg
out
daa
imulb
jno
leave
jnp
push
sahf
xor
repz
fcmovbe
loopne
data16
jle
call
or
sarl
push
pushf
jmp
or
mov
gs
jno
mov
rcrl
sub
out
out
and
fcoms
out
mov
faddp
mov
lcall
jbe
pusha
outsl
mov
sub
sbb
inc
idivb
aam
xlat
dec
push
popf
ss
jae
insb
popf
sbb
lods
loopne
mov
jae
shl
xchg
repnz
and
adc
aaa
fwait
mov
js
in
jne
sarb
jno
dec
lcall
fsubl
std
sbb
mov
adc
mov
int3
loop
lods
fs
enter
fisttps
cld
inc
add
jo
sbb
idivl
push
jns
in
loop
movsb
cmp
pusha
das
int
ret
loop
dec
mov
ret
sbb
xchg
cmpsl
mov
dec
xchg
sub
aas
or
pop
js
sub
or
cli
sbb
lods
shlb
scas
xchg
fdivrp
pusha
cli
pop
push
repnz
fs
shrl
test
mov
ret
ret
bnd
or
add
stos
decb
add
in
into
inc
adc
loopne
mulb
dec
shl
push
std
mov
sbb
test
adc
fwait
sarb
inc
fs
sub
dec
push
push
inc
insb
andb
daa
stc
sub
mov
cwtl
loopne
mov
fsub
and
into
push
mov
dec
pusha
inc
add
aaa
dec
gs
pop
xor
in
xchg
in
lret
xchg
pop
shr
mov
pop
and
int3
dec
scas
jbe
out
test
pop
lcall
in
dec
cwtl
xchg
insb
test
push
aam
ds
bnd
scas
jp
pop
imul
hlt
and
lods
mov
cmp
in
pop
push
xchg
out
mov
adc
pop
ja
testb
xlat
inc
pop
mov
push
cmpsb
lock
and
addr16
les
dec
and
out
in
push
jae
shl
jl
or
fnstenv
rcll
push
mov
popa
sub
test
lret
popa
daa
les
or
jle
pop
sub
cmp
xor
cli
mov
push
xchg
inc
push
lahf
adc
lret
stc
xor
in
daa
mov
mov
jno
lret
scas
pop
ds
mov
xlat
add
lret
in
pop
dec
pop
mov
jo
sub
testl
mov
mov
push
xor
je,pn
fcos
pushf
cli
xor
mov
xchg
cwtl
cltd
arpl
mov
cmp
shll
arpl
and
test
out
pop
test
mov
mov
xchg
insl
sbb
inc
push
sub
int3
subb
lret
sbb
dec
fdivs
sahf
fwait
and
into
fs
fsubrl
or
xlat
cmp
mov
pop
adc
ror
out
pop
hlt
iret
loope
cmp
mov
jmp
les
iret
lcall
cltd
arpl
add
mov
gs
push
push
iret
xchg
cmpsl
or
leave
mov
mov
loop
or
cmp
and
sbb
push
mov
inc
xor
leave
mov
mov
mov
sarb
in
lea
test
pop
lret
xchg
add
xor
es
mov
add
das
jp
push
ja
lret
mov
and
and
mov
clc
adc
mov
lods
iret
jb
inc
mov
fnstenv
sti
mov
mov
in
aam
xlat
scas
sti
xchg
loope
xor
sub
je
scas
and
cmpsb
out
xchg
pushf
cs
mov
jmp
test
mov
adc
mov
dec
aaa
lret
mov
jae
test
sti
and
pop
stos
dec
in
leave
xor
cmp
in
push
ljmp
mov
lods
icebp
fidivs
xor
adc
add
xchg
push
int
or
ja
dec
and
fnstenv
cmp
cli
xlat
pop
xchg
movsb
xchg
into
adc
imul
or
jns
repz
mov
add
popa
repnz
int
je
push
cmp
iret
fldt
and
pushf
cli
sub
hlt
cmp
cmp
scas
shl
aaa
dec
xlat
jb
sbb
dec
shr
cmpsl
pop
push
pop
fcoms
and
push
test
inc
add
pop
fists
cwtl
mov
mov
outsl
lea
scas
sbb
push
loopne
imul
pusha
mov
fimuls
es
inc
inc
pop
fwait
insl
add
hlt
int3
mov
fwait
mov
mov
and
les
out
add
iret
mov
push
dec
pop
pushf
scas
push
xchg
dec
pop
push
mov
xchg
pop
leave
pop
or
sbb
scas
mov
insl
lock
xchg
xor
fwait
or
dec
lods
jmp
je
jno
pop
sub
fstl
lock
int3
outsb
ror
inc
fisubs
push
pop
sbb
and
jno
movsl
cmp
sbb
lahf
fs
pusha
lcall
adc
xchg
call
cli
out
jb
xchg
aad
dec
push
addb
mov
ret
insl
aas
jmp
insl
sub
add
cs
jnp
dec
aam
popa
pop
cmp
jne
xor
out
push
add
pusha
push
xchg
or
test
jnp
mov
and
out
dec
dec
aam
out
std
xor
pop
cli
rcll
data16
pop
jno
jmp
xor
lods
dec
stc
mov
daa
push
cli
push
ret
xor
jo
shlb
jg
jecxz
cmp
test
shr
cmpsl
pop
bswap
xor
clc
fbld
fucomi
aas
mov
jnp
call
dec
fstpl
cmp
scas
mov
lods
adc
mov
scas
add
je,pn
jnp
sub
add
outsl
gs
inc
or
fdivl
mov
or
fldenv
mov
xor
add
xor
mov
out
jmp
in
sahf
inc
in
cmp
dec
out
mov
xor
cmpsb
jp
cmc
jp
adc
mov
cmp
inc
std
mov
mov
pop
fldcw
enter
loop
jp
pusha
jg
mov
push
push
in
xchg
fisttps
sub
push
in
sbb
xchg
popa
leave
sahf
xchg
pop
lcall
jo
jnp
xchg
add
out
or
xor
jb
cmp
lahf
es
sub
rclb
ss
lret
pop
jb,pt
repnz
sbb
push
jnp
imul
dec
adc
shll
mov
test
icebp
sti
jp
mov
xchg
pop
ret
add
jb
xchg
inc
mov
iret
adc
xchg
jne
lahf
push
and
jecxz
aas
lret
arpl
mov
imul
push
sahf
in
mov
ss
mov
cltd
leave
jne
loopne
out
xor
or
adc
add
test
test
inc
xchg
stc
xchg
or
xchg
js
pop
sbb
sbb
daa
pop
insb
sbb
mov
jg
hlt
dec
mov
enter
arpl
mov
insl
inc
imul
aam
aad
xorb
popa
movsl
shl
out
inc
aam
jl
addr16
aas
push
insb
or
int
scas
mov
jbe
adc
mov
call
out
inc
push
lret
ds
outsb
pop
xor
popf
and
cmp
jae
push
and
stc
call
mov
push
fwait
in
movsb
aas
sbb
ret
or
fcomps
sub
xor
fcomps
cmc
aaa
sbb
in
inc
out
adc
int3
inc
sahf
or
pop
and
ss
fdivs
ja
mov
push
push
dec
sti
pop
addb
or
testb
loopne
test
jge
loope
dec
out
cld
mov
jle
push
jae
jns
shl
repnz
in
mov
enter
outsl
push
or
setns
stos
fwait
mov
pop
jg
rcrb
push
out
jbe
xchg
je
mov
arpl
test
mov
cmpsb
out
cwtl
jns
shll
adc
push
dec
es
in
mov
fcmovnu
xchg
test
dec
movsb
pop
mov
sbb
add
sahf
and
cmp
repz
lds
lods
pop
inc
push
sub
enter
pop
jo
and
outsl
sahf
icebp
jno
hlt
jg
lods
jge
stc
mov
das
fsubrs
lds
xor
decb
ljmp
js
inc
pushf
cli
cmpsl
jg
lock
bound
jne
lahf
jae
lahf
flds
cs
xchg
xchg
jmp
xorl
jl
mov
mov
sub
cmp
mov
push
inc
pop
jne
shll
cmp
push
sub
pop
pop
ds
out
testb
gs
xchg
test
mov
cmpsl
nop
insl
mov
sti
fdivrl
jo
ja
sbbl
daa
insb
rclb
dec
xor
pop
daa
call
push
negb
and
push
std
jl
nop
dec
arpl
jno
sbb
test
mov
cmpsb
adc
movsl
imul
and
xor
mov
outsl
push
daa
sbb
sbb
inc
loop
in
jae
ja
nop
pop
mov
adc
int3
adc
push
jo
xchg
shl
fadd
and
and
stos
addr16
inc
pop
inc
test
stc
sub
xlat
lea
xor
xchg
aaa
repnz
mov
gs
out
dec
sub
jae
jl
cli
sub
fwait
lcall
lea
shlb
mov
mov
xchg
dec
mov
cmpb
fs
mov
aaa
out
ret
roll
subb
subb
arpl
outsl
add
sbbb
nop
mulb
dec
dec
mov
xchg
fwait
xlat
xor
fs
sbb
jnp
inc
mov
imul
sub
add
jnp
push
inc
cmp
rcll
inc
imull
fstpl
or
mov
inc
sub
mov
aad
popa
fstl
xchg
add
mov
jge
dec
add
imul
sub
insb
movsl
jge
mov
mov
xor
add
mov
pop
cmp
mov
cwtl
lahf
pop
sbb
inc
adc
or
jmp
add
pop
and
mov
mov
shlb
xchg
movsl
push
xor
add
jnp
das
je
sti
popf
ljmp
add
xchg
aaa
mov
pop
and
mov
pushf
and
pop
sub
iret
or
ret
sub
inc
je
xchg
test
sub
arpl
call
jno
test
push
out
fnstsw
pop
mov
pop
cmp
cmp
int
xor
mov
sbbb
cmp
and
jns
pop
mov
push
and
adc
xor
fbld
xlat
sub
or
inc
add
push
js
adc
sub
ret
or
xor
movsb
dec
lea
std
push
stos
inc
xor
sub
repz
sub
and
push
in
dec
mov
dec
ficomps
adc
shrl
jg
mov
pop
dec
enter
xor
in
idivl
das
stc
cmp
jle
pop
pop
inc
xlat
dec
imul
mov
xor
push
and
push
add
sbb
jb
popa
mov
push
xchg
bound
in
or
bound
dec
stc
je
and
and
iret
dec
pop
adc
push
test
scas
fwait
loope
jg
dec
fstps
pop
xchg
xchg
mov
insb
push
pop
add
pop
sarb
xchg
cmp
lock
sub
fisttps
mov
mov
insb
enter
xlat
js
or
notb
mov
push
fldt
lods
mull
leave
lods
push
sub
or
clc
jecxz
out
mov
js
std
test
jmp
jl
insb
int3
cmpsb
inc
dec
loopne
test
imul
sub
dec
pop
push
xor
adc
loop
adc
add
xor
aam
pop
jae
stc
in
out
js
js
mov
xor
aaa
push
pop
lcall
loopne
push
mov
es
sti
xchg
mov
jno
shll
fbstp
dec
fbstp
icebp
cltd
test
shll
sub
les
jno
subb
xor
iret
xchg
jp
clc
mov
lods
inc
negl
pop
jl
jl
outsb
dec
lods
xchg
ret
ret
xor
inc
out
je
inc
lret
and
push
mov
test
sbb
mov
jge
sbb
jecxz
lahf
mulb
das
or
sbb
loope
inc
cld
xchg
xor
imul
dec
or
jge
aad
push
xchg
mov
pop
popa
fwait
add
xchg
xchg
out
pushf
dec
mov
and
mov
mov
pusha
sub
arpl
in
outsl
push
pusha
pop
fcmovbe
fcoml
adc
loopne
add
fistpl
dec
dec
cwtl
loop
rcrb
mov
fldl
push
pop
add
mov
adc
inc
xchg
mov
push
cltd
jnp
xchg
sti
test
aaa
jb
loop
xor
inc
xchg
in
dec
dec
loopne
repnz
in
inc
cmp
ljmp
sub
ss
jg
jo
cmp
shrl
pop
mov
idivl
aas
cmp
xchg
out
shll
test
test
ficoml
push
mov
xor
ds
xor
jge
push
popf
cmpsl
ss
out
leave
and
cmp
testl
popa
rcrb
xchg
or
pusha
clc
sbb
cmp
and
ljmp
fnstsw
jle
fisubl
outsb
xor
and
fsubr
lods
inc
scas
mov
scas
jae
sti
pop
sbb
jnp
daa
subb
aad
jne
es
push
inc
push
subl
xchg
bound
and
dec
fdiv
xchg
xor
in
add
mov
sbb
mov
dec
jge
push
es
mov
cltd
adc
or
fsubrs
aas
adc
xlat
enter
inc
test
fstps
mov
rol
pop
cmp
mov
sub
xchg
fs
stos
stos
leave
in
ss
popa
neg
sbb
pusha
shl
pop
dec
or
pusha
and
push
jecxz
mov
jnp
in
or
mov
fnstcw
lea
pop
out
push
sub
maskmovq
divl
xchg
lcall
cmp
lcall
jmp
sub
add
pop
add
test
ret
dec
shl
outsl
cmpsb
adc
sbb
fbstp
pushf
loopne
into
ret
outsb
push
montmul
cmpsb
inc
sub
rcrl
dec
dec
jb
shlb
adc
inc
xlat
icebp
cmpsb
cmp
scas
inc
mov
inc
pop
bnd
ja
jb
xchg
sub
pop
stos
inc
mov
repnz
test
std
xchg
cwtl
and
rclb
push
aas
jl
push
call
jge
mov
or
sub
pop
lock
mov
xchg
sub
subl
push
pop
movsb
stos
in
mov
jo
mov
cli
xchg
movsb
dec
sub
jl
sbb
movsb
les
adc
subl
cmp
xor
mov
ret
outsl
and
addb
mov
daa
mov
movsb
dec
sbb
inc
insb
mov
ss
test
push
inc
mov
jp
fnsave
ljmp
iret
add
mov
mov
inc
push
push
insl
shrb
adc
pop
neg
test
mov
jge
sub
outsb
add
sbb
aam
imul
add
repnz
addr16
cltd
stos
push
out
xchg
repnz
sti
outsb
add
sbb
cmp
daa
sub
gs
lock
and
scas
inc
add
jno
out
test
outsl
call
xlat
add
push
popf
icebp
sbb
mov
dec
in
fbstp
push
imul
sbb
xchg
dec
pushf
mov
into
jns
sti
stos
inc
call
xchg
sbb
popa
push
idiv
xchg
daa
fistl
or
sbb
leave
pop
fwait
sub
int3
jo
movsb
inc
ja
dec
in
cwtl
sub
dec
call
clc
push
sbb
lahf
dec
mov
outsb
add
lret
mov
std
scas
movsl
cmp
and
ret
xchg
adc
loopne
xor
les
sub
xor
dec
loopne
inc
xchg
sub
pop
repnz
pop
mov
inc
jns
jae
ds
xchg
imul
jne
push
dec
cmc
mov
xchg
sub
lret
and
push
adc
xchg
mov
popf
xor
pop
sbb
push
and
xor
js
dec
loopne
lcall
jae
insl
add
xchg
test
aas
mov
outsb
pop
push
out
nop
mov
mov
stc
nop
sarb
push
outsl
pop
decb
sub
xchg
aas
enter
addr16
pop
testb
shrl
xor
fwait
xor
fwait
icebp
mov
xor
push
mov
in
call
xor
dec
test
jnp
into
aaa
cmp
gs
or
outsb
cmc
sahf
push
out
into
xor
fadds
sahf
jno
iret
xor
and
lahf
test
aaa
sub
gs
daa
mov
mov
xchg
pop
mov
incl
cmpsb
push
dec
inc
fidivrl
movsb
sahf
mov
int3
cltd
xor
in
shrl
sbb
dec
cmp
add
inc
fldenv
movb
loop
ficoms
adc
imul
fs
xor
popl
push
loop
inc
fimull
fwait
cltd
xor
mov
repnz
mov
mov
insl
add
cltd
in
test
mov
pop
out
dec
out
xor
jmp
mov
outsl
lods
inc
sahf
and
pop
pop
mov
cmpsb
mov
outsb
leave
pusha
lahf
sub
jb
mov
add
out
push
daa
mov
pop
xchg
sbbl
push
stc
nop
xchg
lods
inc
pop
xchg
mov
ret
add
push
sbb
pop
xchg
jmp
ret
into
xchg
sub
push
or
pop
xchg
pop
sahf
ret
sar
xchg
add
adc
inc
lcall
add
adc
ljmp
mov
or
loope
mov
mov
add
leave
pusha
xchg
adc
push
mov
jo
movsl
pop
jb
dec
je
shrb
mov
mov
ret
pop
dec
fs
negb
xchg
pop
lock
sbb
jns
push
cmp
xchg
mov
notb
stos
inc
push
push
pop
lock
dec
in
xchg
in
test
and
insl
push
push
ret
pop
mov
xor
clc
lahf
adc
pop
gs
sub
cltd
out
lahf
test
aaa
data16
gs
cmc
mov
sbbl
aas
fs
insl
fs
hlt
cwtl
shlb
mov
or
lcall
lret
testb
mov
adc
xchg
xchg
cs
xchg
addr16
add
repz
stos
inc
iret
xor
fnsave
jl
out
or
jecxz
pop
cmc
mov
mov
jo
insl
inc
dec
loop
mov
or
je
imul
movsl
pop
repz
test
inc
fisttpll
sbb
aas
xorl
dec
jecxz
jb
mov
rcr
jno
outsl
mov
sahf
or
mov
ret
shl
mov
or
cmp
pop
repz
jmp
add
shrb
rolb
ja
inc
or
cmp
cli
iret
push
mov
xor
dec
jecxz
mov
pusha
mov
fimull
sti
push
aaa
mov
imul
ja
sarl
lods
jecxz
in
adc
movsb
mov
push
mov
push
mov
fsubl
les
jne
push
cmpsl
data16
fisubrl
js
jl
fisubrl
jbe
mov
jnp
fs
fisubl
cmpsl
push
cmp
inc
jp
fsubrs
jns
pop
lods
adc
mov
adc
push
movsl
ds
ficompl
mov
mov
addr16
test
mov
mov
data16
xchg
in
notl
mov
dec
loopne
xor
mov
pop
mov
xchg
sub
pop
mov
mov
outsb
call
xor
ljmp
add
imul
pop
jecxz
mov
in
leave
pusha
push
push
out
outsl
mov
or
mov
sub
imul
xchg
jecxz,pn
sbb
xor
push
addl
or
icebp
icebp
fs
es
sub
inc
xor
jae
cmc
mov
mov
mov
adc
dec
fbld
xor
popl
in
loopne
adc
pop
add
or
les
push
cmp
jg
jmp
je
add
sbbl
jp
adc
test
leave
cmp
repnz
push
inc
push
insb
jns
pop
icebp
movsb
cltd
scas
lret
adc
in
outsl
push
sbb
sub
xchg
sub
arpl
mov
sarb
ficoml
adc
adc
data16
fs
add
xchg
mov
jg
pop
or
in
sub
pop
pop
jo
jnp
shrb
sar
add
movsl
cmp
jbe
pop
pop
icebp
mov
adc
scas
add
out
stc
mov
cmp
jns
jb
xchg
sahf
ljmp
jmp
cmpsl
ds
inc
or
mov
mov
addr16
xchg
sub
pusha
pop
lock
inc
cmp
push
shrl
dec
mov
cmp
sbb
hlt
fninit
cmp
adc
bound
push
mov
sbb
jne
mov
push
test
adc
adc
aam
lods
andb
jae
pop
sub
jge
arpl
pop
xor
push
sub
or
adc
sbb
inc
lahf
es
inc
inc
movl
das
repnz
dec
adc
push
pop
sbb
in
inc
sbbl
push
or
sub
cmp
cs
cmp
mov
pop
adc
mov
xor
cmp
xchg
sub
shl
dec
aam
scas
pop
fidivrs
inc
in
insl
add
lods
mov
sbb
mov
xchg
sti
ljmp
or
pusha
test
loop
pop
mov
in
jmp
aam
sti
aas
les
rclb
out
inc
rcll
ja
cltd
es
enter
jo
call
enter
test
flds
inc
int
dec
gs
outsl
shrb
fsub
cmp
imul
jmp
sti
jecxz
add
xlat
stos
pop
fld
std
shlb
shrb
push
sarb
stos
add
jle
sbb
and
jle
sub
cmp
outsl
pusha
fists
sub
pop
inc
mov
ss
loop
arpl
lods
ljmp
stos
push
push
mov
mov
or
sub
sahf
adc
mov
add
out
outsl
xchg
jne
pop
sbb
movsl
pop
out
sbb
in
imulb
dec
les
into
in
xor
dec
test
add
or
leave
pop
push
call
add
outsl
mov
xchg
cmp
adc
aaa
fdivl
or
jmp
or
scas
sbb
cld
divl
sub
push
or
clc
add
into
inc
cwtl
mov
or
xor
insl
lahf
pop
push
js
adc
test
popa
fwait
jmp
sub
xor
js
mov
jg
cmp
mov
orl
sti
or
es
pop
cld
mul
fldt
sbb
cmp
xchg
jns
push
or
in
loopne
add
sti
cs
and
daa
js
in
fnstsw
clc
xchg
aam
mov
sbb
pop
dec
mov
add
ss
es
cmp
xchg
jge
fistpl
and
or
adc
adc
push
lods
jge
sbb
mov
out
loopne
imul
fildl
jae
add
arpl
inc
mov
stos
add
jecxz
add
or
and
stos
mov
test
sub
dec
loop
insb
leave
test
es
jnp
fwait
xor
dec
fimull
jns
lea
pop
dec
and
push
cmp
flds
dec
mov
xor
push
aam
popa
fwait
jg
mov
in
jno
sub
adc
les
test
mov
aad
imul
nop
insl
jmp
cmpsb
mov
mov
repz
cld
int
les
cmpl
mov
pop
xchg
jp
mov
mov
mov
cmpsb
jp
scas
cmp
mov
inc
add
sub
aaa
mov
lods
stc
test
hlt
sbb
and
sub
scas
cmpb
stos
loop
rcl
lret
fnstsw
nop
mov
sahf
repz
les
sbb
bound
fnstsw
outsl
fidivl
lret
jmp
lods
pop
push
cmpsl
jmp
and
insl
call
cmp
stos
xchg
pop
and
lock
xchg
cmp
jge
add
movsl
xor
lcall
pop
imul
jo
ljmp
addr16
sbb
popa
leave
test
cs
pop
inc
fmull
rorb
divl
jns
lret
sub
js
pop
mov
xor
inc
push
add
push
pop
sbb
mov
and
outsl
inc
insl
xlat
das
dec
inc
lea
sub
insb
ljmp
cmp
cltd
mov
xor
imul
inc
mov
lea
sbb
scas
and
and
mov
rcll
and
jbe
rclb
xorb
push
pusha
enter
arpl
xchg
xchg
icebp
dec
inc
fnstcw
jnp
mov
js
and
dec
sahf
popf
outsl
gs
jns
pop
sarb
sub
and
dec
sti
xchg
dec
cmpsb
imul
push
fmull
add
shlb
movsl
xchg
pop
jb
bound
jns
andb
cwtl
pop
push
shll
sbb
std
daa
sub
or
pushf
sbb
mov
jmp
mov
inc
mov
icebp
pusha
movsl
jmp
lods
pop
aam
leave
gs
xlat
aad
jmp
in
xor
xlat
lods
pop
icebp
xor
je
mov
sbb
popf
mov
adc
push
dec
mov
xchg
fidivl
pop
out
cmpsl
jge
test
repnz
aaa
cwtl
xor
sbb
pushf
bnd
aam
loopne
inc
adc
aas
icebp
xchg
out
xor
in
bsr
sbb
add
movsl
pop
test
dec
stc
out
mov
mov
or
dec
mov
add
dec
lahf
pop
in
insb
push
rclb
xlat
cmp
movsl
sub
jae
mov
gs
dec
pop
rorl
xchg
sub
lahf
mov
sbb
xor
xlat
jnp
pop
in
clc
adc
repz
enter
in
or
rcrl
out
lret
incb
pushl
enter
cmp
inc
or
pop
fadds
popf
rolb
jecxz
int
xchg
mov
fsubrl
in
das
ret
movl
pop
loop
int
daa
aam
xchg
in
lods
mov
testb
sub
jb
push
add
sarb
jbe
xor
test
cmpsb
pop
lret
mov
ret
xchg
add
add
fisttps
js
stc
dec
dec
rclb
sbb
lahf
mov
call
aaa
push
call
dec
fbstp
sbb
pop
aad
shlb
add
pop
hlt
not
inc
xlat
adc
lods
mov
gs
or
sahf
pusha
repz
aas
inc
adc
and
out
push
lds
or
into
mov
add
sahf
subl
jae
idivl
in
pop
sbb
jge
idivl
test
inc
adc
push
mov
inc
mov
repnz
mov
std
sbb
cltd
adc
rorl
rcll
jne
cs
mov
in
add
fwait
jno
nop
mov
xor
movsl
aaa
les
aas
push
leave
ljmp
std
aas
in
shlb
push
movsl
and
fsub
xlat
cmp
lods
xchg
push
rcl
cmp
mov
jbe
mov
sarl
mov
and
xor
insb
mov
push
insb
cmp
jb
inc
std
sub
mov
adc
int
pusha
xor
aas
testb
pop
mov
cmp
icebp
cmpsl
dec
rolb
cmpsl
or
fcomps
mov
jns
and
sbb
shlb
or
dec
js
jmp
fstpl
fcoms
repz
popa
shrl
loop
push
jp
mov
push
xchg
xchg
xchg
nop
icebp
and
xchg
adc
xchg
adc
sub
push
int
lods
cli
sub
push
into
scas
data16
adc
fstps
jp
hlt
in
sbb
and
testb
adc
xchg
shr
pop
icebp
pop
int3
jns
mov
decl
int
das
ret
jne
aas
hlt
mov
or
mov
lock
test
mov
testb
and
inc
xlat
or
das
ret
add
lods
xchg
sub
dec
mov
jmp
push
enter
inc
repz
ss
int
test
add
hlt
in
and
loop
ret
frstor
mov
xchg
or
mov
pop
lret
sbb
sarl
jbe
jmp
hlt
fmuls
inc
es
int
cmpl
lock
mov
fistpl
addr16
addr16
aam
std
xor
call
movsw
mov
test
cmpsb
clc
pop
into
out
mov
outsb
repz
jbe
stos
mov
and
testb
test
cmpsl
cld
sub
add
jle
sarl
mov
enter
add
hlt
cmpsb
pop
shl
cmpsl
hlt
mov
push
pop
ret
dec
rorb
or
jecxz
in
jb
loopne
or
push
mov
mov
add
inc
jge
popl
outsb
fs
inc
sub
sbb
adc
push
xor
sbb
leave
mov
mov
movsb
cltd
xor
add
out
sbb
sbb
push
push
lret
xor
test
inc
in
adc
sbb
icebp
daa
push
xchg
out
pop
xor
push
inc
push
push
cmp
push
gs
xlat
dec
pop
sub
pop
jne
ret
xor
jle,pt
mov
mov
lock
sbb
inc
mov
out
dec
ret
push
xchg
lea
xchg
mov
and
cwtl
fsubs
ljmp
jmp
out
ffree
movsl
push
testl
fsubs
out
inc
les
ljmp
or
decl
jo
hlt
je
xchg
popl
xor
push
xor
hlt
nop
ss
mov
sub
cmpb
jge
loop
xchg
mov
insl
shl
fs
add
xchg
or
lods
dec
lfs
jo
cmp
test
addb
insl
push
imulb
cmp
mov
push
ljmp
pop
les
idivb
aaa
push
cmp
scas
pop
mov
push
into
pop
xchg
rolb
clc
aad
les
idivb
enter
cltd
lds
shl
lahf
xchg
shll
lock
add
shrb
fcmovu
flds
loopne
fidivl
xlat
repz
call
mov
sbbl
es
push
clc
xor
les
pop
iret
dec
mov
mov
mov
sub
mov
jns
xchg
sbbl
aaa
xchg
in
dec
lea
outsl
cmp
cmp
xchg
ja
jne
mov
sub
push
outsl
dec
mov
jno
insl
add
and
daa
xchg
jne
push
dec
add
push
mov
ret
aad
movsl
bound
mov
mov
sbb
out
xchg
inc
inc
push
pop
aad
xchg
std
xchg
ret
in
lret
nop
xchg
rcr
ljmp
or
mov
insl
mov
decl
mov
dec
mov
in
cmp
jmp
mov
fbstp
push
jecxz
pushf
sahf
xchg
and
pop
jne
cltd
popa
inc
cmp
add
pop
adc
das
outsl
lret
mov
dec
push
cmpl
jnp
stos
dec
and
mov
mov
in
or
fsubs
or
push
xor
cmp
pop
push
stc
outsb
or
and
pop
and
jp
mov
pop
gs
lahf
ss
mov
push
push
cld
rorl
rclb
xchg
mov
sbb
test
fsubrl
stos
test
xor
ljmp
sahf
icebp
into
popa
cmpsl
mov
pop
lock
in
and
loopne
popf
bound
sbb
inc
mov
inc
and
test
icebp
sbb
leave
pusha
mov
push
mov
out
pop
xchg
cmc
jp
aas
cmpsb
ss
jo
cli
inc
shlb
int
orl
adcl
or
jp
call
scas
mov
dec
loopne
mov
jl
fs
test
jge
cmp
jle
jl
dec
shrl
pop
mov
cmp
fnstsw
pop
int
inc
ss
xchg
sub
and
add
add
clc
xchg
lret
mov
out
gs
pop
leave
std
and
push
inc
mov
stc
push
lret
fiadds
jb
ja
jmp
sbb
insb
popf
xor
loop
clc
pop
loop
bound
int3
cmp
sbb
ja
push
lret
into
lds
sub
cmp
rolb
out
jbe
mov
sbb
lods
mov
sbb
leave
and
cli
pop
jnp
xor
cmp
lcall
add
bound
cmp
mov
or
ds
cmc
rorl
mov
pop
or
ret
inc
jmp
mov
mov
loopne
push
negl
push
or
and
rorl
pop
mov
movsb
test
js
add
movsl
andb
jns
lea
rcrb
in
xchg
push
add
ficoms
sbb
mov
adc
pop
pop
mov
sub
data16
cmp
cwtl
inc
imul
inc
jge
pop
xchg
repnz
fildl
popa
and
inc
pushf
scas
pop
and
jge
mov
addr16
and
popa
pop
adc
ljmp
adc
je
or
pop
push
xor
push
push
out
sbb
pop
sahf
push
hlt
sbb
xor
xor
inc
popf
dec
push
fisttpll
jne,pt
jo
les
xchg
sub
sbb
mov
lods
mov
pop
loop
insl
mov
fs
outsb
icebp
lahf
xchg
loop
imul
imul
insl
dec
test
inc
push
stos
and
cmpsl
ds
sbb
xor
mov
into
push
jmp
daa
das
cmpsb
les
push
scas
pop
push
pushf
xchg
lea
mov
into
xor
xchg
sub
fists
add
mov
pop
sub
aas
xchg
stos
gs
out
aas
mov
das
jecxz
xchg
pop
out
out
outsl
cmp
dec
mov
jmp
lods
bound
push
rcrl
ficoml
fnstsw
repz
mov
jmp
leave
jne
push
push
ljmp
xor
jbe
frstor
js
fs
mov
jns
or
jo
test
movsl
sbb
jne
mov
or
adc
leave
stc
push
int3
mov
fbld
call
add
push
mov
pop
push
call
scas
mov
int
pop
and
leave
pop
jae
in
dec
gs
fsts
mov
and
mov
in
pushf
jbe
add
cmpsl
cmp
push
adc
dec
shlb
mov
rorb
insb
scas
imul
xchg
cmp
outsl
movsl
adc
lahf
pop
ret
and
sub
in
cmp
cwtl
xchg
adc
mov
mov
pop
hlt
test
sub
sbb
add
fcoml
fisttpll
out
inc
add
xchg
lea
decl
flds
in
xor
nop
jp
es
fldt
into
cltd
lods
lock
mov
lock
xlat
jnp
ljmp
in
pop
test
fucomp
dec
mov
ds
loopne
jge
bound
adc
add
push
pop
jne
fldl
mov
hlt
push
in
push
mov
cli
add
ret
and
lods
push
in
mov
pop
jne
push
pop
mov
mov
push
iret
test
pop
mov
or
ficomps
pop
xor
loopne
ja
int3
dec
sarl
out
mov
dec
sti
cli
or
mov
out
inc
test
mov
cmc
rcr
mov
in
cmp
mov
lock
mov
sbb
xchg
arpl
into
jp
sbbb
and
dec
push
pop
add
enter
cs
cmp
clc
jg
lret
xor
add
sbb
sub
adc
lods
inc
jb
shll
dec
shlb
sidtl
cmp
jle
mov
xor
add
es
mov
mov
cmp
stos
pusha
arpl
mov
add
mov
sti
jno
jmp
test
jp
add
fsubl
adc
repz
hlt
sub
in
jns
lock
dec
mov
pop
mov
decb
sti
dec
out
jbe
in
inc
aas
icebp
cmp
and
and
or
dec
mov
adc
dec
xchg
jle
mov
cmpsb
data16
cltd
xor
cmp
dec
mov
rorb
enter
test
jns
aaa
adc
test
pushf
nop
mov
cmp
cmp
jp
rcrl
iret
pop
aad
fwait
lock
pop
sahf
mov
xor
cmc
xchg
dec
fcomip
xlat
xor
rcll
popa
cmpsb
cmpsb
and
hlt
out
es
movsl
and
adc
stos
gs
cwtl
cmp
leave
scas
test
push
jmp
aad
jge
mov
or
xchg
hlt
sbb
push
arpl
sub
aad
je
aad
inc
xchg
cmpl
xchg
sub
jnp
jns
sbb
push
mov
out
pop
or
in
insl
jnp
jle
cmp
add
sbbb
pop
pushf
or
aas
nop
pop
ljmp
xchg
push
jmp
mov
jmp
negb
jae
mov
jmp
data16
cmp
sbb
add
cmp
sbb
lods
mov
daa
cli
pop
jg
sahf
mov
dec
mov
std
ljmp
popf
into
gs
or
std
xchg
fimull
and
cwtl
movlps
outsl
mov
xor
bound
and
pop
ror
cmp
pop
mov
outsl
ret
add
mov
push
mov
out
jne
int
xlat
outsb
mov
adc
inc
xchg
mov
lret
pop
sub
add
sub
int3
inc
scas
int3
pusha
out
test
sbb
insl
mov
mov
mov
or
popa
clc
sbb
jns
cmp
dec
les
icebp
ja
mov
push
add
hlt
jp
ret
push
and
sub
out
jo
inc
pop
scas
scas
pop
mov
jmp
mov
icebp
push
cwtl
cmp
out
add
fwait
jmp
es
ds
int
enter
push
ljmp
cli
lods
aam
imulb
cmpsl
pusha
xor
mov
nop
jno
cltd
mov
pop
jne
insb
mov
push
sub
bound
inc
lret
jnp
pop
sahf
ret
and
or
add
xor
icebp
fcoml
lret
cld
out
pushf
jno
push
add
mov
clc
ljmp
repnz
nop
jecxz
xor
loope
xor
sub
inc
mov
aas
out
mov
inc
adc
test
mov
aas
in
jae
adcl
fwait
pop
mov
jl
test
mov
fdivr
jb
mov
jecxz
insb
add
add
int
into
shlb
and
int3
mov
insb
out
cmp
sbb
addl
iret
adcl
inc
fcoms
lods
xlat
orl
faddl
cwtl
ret
jl
ret
sub
pop
out
clc
cmp
cmp
call
scas
jb
ret
mov
cmp
add
push
cmpsb
jle
sbb
jmp
mov
aam
cmp
mov
pop
push
ret
dec
sahf
subb
lahf
inc
outsb
add
out
aam
test
add
add
xchg
xchg
dec
bound
xor
push
lods
insl
addr16
cmc
or
inc
into
adc
xor
testl
sub
cli
pop
jmp
cmp
aas
repnz
in
sbbl
outsl
jge
das
inc
pop
sub
outsl
sub
and
mov
sbb
sbb
ljmp
or
pushf
jo
out
push
jnp
pop
cmp
hlt
push
adc
xchg
sbb
mov
ja
pop
jns
mov
les
add
mov
sbb
mov
outsb
loop
xlat
dec
sub
sbb
jmp
add
xchg
lds
cli
aam
sbb
popf
arpl
les
popf
jg
pushf
mov
into
dec
mov
pop
mov
adc
inc
mov
scas
push
xor
jge
gs
int
les
mov
mov
rclb
adcl
fistpl
adc
std
fbstp
mov
pop
add
push
mov
jnp
orl
jo
xor
lea
cmp
pop
fwait
andb
push
xchg
and
jbe
cmpsl
inc
ss
sbb
sbb
xchg
dec
stc
xchg
add
popf
orb
push
in
les
xchg
ja
je
ret
and
scas
jns
jg
shrb
dec
les
dec
jnp
repnz
sbb
and
lods
lock
pusha
mov
loopne
push
call
cmpsb
iret
loop,pn
repz
mov
mov
pop
repnz
out
and
loope
cmp
and
pop
and
push
test
jmp
dec
pusha
ss
ret
hlt
ja
xor
std
sbb
sbb
push
test
call
add
and
loopne
and
lods
shrb
call
mov
push
inc
cltd
inc
push
mov
pop
mov
fucom
jge
push
leave
pusha
test
add
popa
movsl
out
xlat
andb
mov
add
xlat
push
dec
and
pop
popf
inc
fmul
jns
adc
int
xor
inc
jge
jae
mov
xor
jae
outsb
movsl
out
push
sbb
cmc
mov
cmp
outsb
insb
sbb
dec
cmc
mov
loopne
stos
roll
rcrl
xchg
sub
xchg
loopne
movb
push
xor
xchg
lods
inc
add
es
cmovp
inc
jns
mov
or
movsl
pop
fbstp
mov
xchg
loop
rcll
and
daa
mov
mov
es
add
fildl
mov
mov
std
scas
mov
loope
leave
pusha
push
add
jle
je
mov
fdivrl
pop
lods
std
nop
daa
das
iret
fnstenv
push
mov
push
movsb
lods
inc
jne
mov
lret
sti
ljmp
xchg
pop
je
dec
movsl
loopne
in
loope
sub
fidivrl
iret
or
xchg
and
add
das
mov
les
pop
imul
inc
pop
mov
pop
repnz
mov
shlb
loopne
push
xor
arpl
mov
push
test
and
testb
aam
add
push
loope
mov
in
cmp
hlt
js
shrb
cli
clc
fs
push
outsl
cmpsb
sub
cmp
inc
jne
ret
cmpsl
xchg
add
lcall
and
js
test
orb
fisubrs
sarl
mov
add
rorb
jns
dec
shrb
lahf
data16
mov
sub
dec
push
push
rolb
add
sbb
in
xlat
dec
movsb
movsl
mov
xor
cwtl
jge
push
addr16
sub
scas
adc
xor
or
ljmp
call
ja
cmp
mov
loope
push
testb
sub
xor
inc
enter
sbb
mov
into
and
cwtl
lea
ss
scas
pop
push
sbb
fildl
jnp
test
adc
xchg
mov
cmc
pop
lret
adcb
rorl
push
mov
jno
sahf
mov
mov
jge
or
rcll
int
xor
dec
les
push
or
push
push
fsubrs
lods
outsl
scas
in
sarl
mov
sub
jbe
xor
fdivrs
sbb
test
mov
inc
dec
mov
and
sti
aaa
clc
ljmp
imulb
outsb
mov
xor
jmp
jo
adcl
dec
xor
lcall
outsb
mov
dec
xor
mov
xor
add
mov
aas
mov
xchg
movsb
xor
std
scas
scas
fwait
int
lcall
int
ds
repz
dec
shll
mov
insb
push
dec
fsts
pop
and
test
cmp
ja
pop
sbb
aad
pop
pop
mov
orb
nop
pushf
imul
pusha
xlat
push
insb
int
push
test
lahf
mov
or
mov
sub
lds
push
nop
xor
fstpt
adc
ficoms
scas
shrb
fs
std
ret
mov
repnz
push
ljmp
jmp
repnz
jge
xchg
outsl
test
movsl
cmp
mov
daa
mov
mov
pusha
mov
push
dec
jnp
cmp
or
into
test
popa
imull
sub
sbb
or
pop
cmc
je
inc
fstps
pop
insl
add
mov
mov
pushf
int
icebp
mov
loope
push
shrl
call
movsl
mov
loop
fwait
shrl
cltd
mov
loop
aam
mov
lahf
lret
push
popf
cld
shrb
dec
add
pop
xor
das
gs
mov
cmpsb
lret
mov
icebp
mov
bound
xchg
adc
lret
in
or
loope
rclb
lahf
cmp
aas
xor
add
movsb
in
popf
cmp
lods
aam
push
out
mov
cmp
pop
mov
jb
add
and
cmp
jmp
lret
cld
add
xchg
xor
mov
lahf
xchg
sub
push
mov
aad
jge
push
call
test
jmp
or
mov
and
sbb
call
stc
mov
js
cmp
imul
sub
sarl
mov
add
cmp
push
push
mov
out
fildl
add
int3
xchg
cmp
and
add
in
and
imul
aam
mov
rorb
lods
je
add
sbb
imul
jmp
std
mov
dec
mov
scas
and
add
insl
xchg
push
loopne
add
lret
aad
sbb
dec
cmp
mov
mov
fstpl
arpl
insl
and
push
xor
dec
lret
std
sbb
xchg
rorb
adc
pop
pop
std
mov
addb
sub
sbb
push
pop
sarb
test
aam
jae
cmp
inc
xlat
jp
daa
xor
mov
stos
stos
xor
ret
int
repz
sbb
push
mov
sarb
int
mov
mov
push
das
pop
dec
adc
cmp
imul
cmpsb
sub
xlat
inc
pop
lods
xlat
jns
mov
inc
or
mov
arpl
lds
mov
gs
xor
jns
ss
fidivl
or
xchg
mov
pop
daa
out
jge
pusha
in
fildll
repnz
jle
in
loopne
incl
push
lea
fisubrs
mov
push
repnz
add
dec
push
icebp
imul
inc
ljmp
dec
or
outsb
sbb
fnsave
or
push
lret
decl
dec
pop
fdivrl
xchg
insl
jmp
add
int
sbb
jo
pop
clc
fisubrs
or
dec
or
jp
mov
xlat
test
mov
or
jne
sbb
int
add
ret
xchg
push
pop
fidivrs
mov
push
sbb
repnz
mulb
dec
or
jge
adc
fnstsw
xchg
add
dec
sbb
dec
pop
sub
cmp
mov
test
inc
inc
fnstsw
lahf
add
leave
pop
sbb
outsb
inc
pop
mov
mov
inc
adc
fdivrl
mov
cmp
dec
sub
jno
xor
mov
negb
kmovb
fdivrl
mov
mov
movsb
dec
or
stos
scas
test
sbb
inc
out
imul
mov
jg
aam
sub
rolb
daa
push
xor
pop
out
push
dec
dec
push
out
hlt
or
fistl
ds
push
dec
dec
dec
or
mov
mulb
inc
rolb
das
addl
add
mov
paddusb
sti
out
add
daa
hlt
sahf
aaa
and
dec
pop
cmp
fdivrs
xchg
inc
dec
fstpl
mov
pop
mov
rorl
xchg
arpl
jle
adc
dec
push
dec
pop
push
add
cwtl
pop
popf
rep
out
lds
in
pop
fdivrs
xchg
dec
pop
or
leave
les
test
pop
std
cltd
jb
out
enter
cmp
fs
rcr
jge
adc
pop
enter
pop
push
add
xchg
icebp
jo
and
mov
cld
mov
inc
test
or
pop
xchg
inc
sti
stos
daa
pop
and
std
orl
out
test
inc
pop
ret
jmp
fdivrs
cmpsb
adc
sti
clc
aad
mov
cmp
lret
pusha
jbe
out
jg
stos
lods
scas
mov
test
hlt
mov
repnz
or
mov
mov
leave
loope
lock
sub
lods
scas
mov
sub
xor
mov
mov
dec
arpl
out
jge
ret
scas
test
cmp
decl
xor
jae
daa
and
cmp
inc
sbbb
xchg
dec
push
or
leave
nop
mov
nop
arpl
jnp
aam
imul
push
out
jne
cmp
je
sbb
dec
sysret
add
jmp
shl
movsb
sub
add
dec
cmp
push
cli
aam
cwtl
inc
adc
inc
push
lea
inc
pop
push
rorl
pop
add
and
sub
sbb
lds
pop
pusha
or
int
xchg
cmp
outsb
mov
test
jae
mov
adc
cld
gs
sarb
mov
nop
xchg
cmp
aaa
popf
xor
lret
jno
sbb
clc
push
stc
inc
jmp
rorb
xchg
rcrb
sbb
test
rorb
fs
lret
fiaddl
out
pop
or
sti
rorl
imul
add
jg
ss
pusha
insl
lcall
mov
out
jno
or
movsl
pop
repnz
mov
ret
repz
ret
call
jo
jge
cmp
pop
push
imul
cmp
adc
lods
negb
mov
xor
inc
movsb
mov
in
outsl
shrb
sbb
pop
imul
rdpmc
xchg
iret
xchg
cmp
and
mov
lods
imul
into
xchg
mov
inc
out
inc
or
movsl
sub
test
adc
nop
cmp
dec
sahf
enter
lret
inc
sahf
xchg
xchg
mov
iret
or
ja
pop
rclb
lret
out
pop
mov
push
notl
shlb
mov
das
and
adc
add
fdivrl
pusha
adc
and
sub
cmp
sub
mov
sbb
outsb
dec
jbe
pop
loopne
inc
adc
jge
jl
lds
xchg
iret
sbb
cs
push
in
insl
xor
das
mov
adc
dec
mov
mov
mov
push
xchg
cs
push
add
dec
or
imul
mov
mov
mov
sbb
xchg
inc
xchg
out
xlat
inc
mov
inc
mov
es
stos
stos
push
add
ret
jl
mov
cwtl
mov
xor
into
stc
pop
mov
out
addr16
xchg
inc
cli
ret
loop
sub
sbb
push
xchg
sbb
jno
lret
je
jge
fldt
fldl
add
rclb
decl
sub
je
adc
test
and
mov
addb
inc
or
adc
sub
mov
cmp
dec
cmc
xchg
aaa
sti
pushf
lea
mov
imul
in
je
scas
test
cmpsl
mov
nop
aas
cmp
and
fidivl
test
mov
mov
loop
stos
cs
mov
scas
mov
ljmp
xchg
sub
push
jmp
mov
mov
mov
xchg
es
aad
lret
fwait
add
lret
cmp
push
cmp
imul
addb
fsubs
stos
stos
jno
push
mov
pusha
repnz
mov
fdivl
sub
add
xor
add
sarl
jb
mov
or
lods
xor
add
sbb
xor
xor
and
xchg
and
jae
clc
jns
test
mov
push
inc
ja
jg
outsl
repnz
dec
flds
add
int3
mov
xchg
fidivs
fwait
inc
fistpl
mov
sub
sub
notl
mov
repz
or
adc
jnp
popa
inc
mov
dec
push
sbbb
xor
and
push
sub
in
imul
push
sbb
aas
popf
sub
mulb
xor
jb
je
adc
ret
les
and
jg
jecxz
or
jnp
movsb
adc
or
daa
mull
lock
mov
sub
lret
or
push
mov
std
pop
outsb
in
addr16
dec
fidivrl
pop
cmp
jp
xor
add
cmpsl
das
js
fstpt
push
mov
mov
outsl
stc
mov
rol
sbb
inc
or
mov
jecxz
je
movsl
sub
mov
or
inc
or
and
rcrl
push
enter
xchg
aaa
cmc
lahf
inc
or
int3
mov
es
cld
inc
mov
mov
xchg
pop
add
lods
orb
inc
or
inc
or
mov
lcall
fidivrs
shll
sbb
sub
clc
call
mov
mov
insb
out
daa
in
push
mov
inc
adc
scas
push
add
or
add
addb
into
in
mov
adc
and
push
inc
dec
pop
imul
enter
mov
call
or
ljmp
mov
cli
pusha
xorl
cmp
mov
mov
fmuls
and
jg
nop
aas
movsb
push
cmp
movsb
repz
hlt
mov
xchg
cmp
cwtl
xchg
cmc
xchg
adcl
ret
nop
mov
cmpsl
ljmp
jp
and
add
fldenv
mov
inc
adc
mov
dec
jecxz
lcall
pushf
cs
add
push
push
enter
test
xchg
mov
mov
push
popf
fwait
ss
cwtl
iret
sub
mov
mov
dec
push
dec
cwtl
inc
push
pop
mov
mov
lahf
sub
bound
aad
jbe
lods
stos
icebp
arpl
push
mov
adc
inc
pop
cli
push
push
push
add
lea
mov
cmp
in
outsb
sub
mov
xor
jge
lods
sub
iret
cld
xchg
adc
mov
cmpsb
push
lods
xlat
push
scas
inc
cmp
test
sub
pop
sub
mov
insb
notb
dec
adc
xchg
cmp
xchg
aaa
pushl
orl
xchg
inc
adc
inc
push
xchg
fs
or
or
dec
pop
fidivrl
xchg
xor
fmull
mov
sub
cli
sahf
dec
addl
jp
in
xchg
mov
mov
inc
rcl
xchg
xchg
push
add
clc
xchg
aas
push
sbb
inc
mov
mov
jae
mov
or
mov
scas
sub
push
cmpsl
xor
rcrb
fbld
xor
sbb
popf
aaa
incb
and
in
adc
pop
clc
push
dec
jne
stos
dec
push
add
mov
cmc
sbb
fnstcw
dec
sbb
sub
xchg
push
ss
divb
mov
xchg
roll
xorl
mov
pop
mov
fnsave
xchg
jo
xor
les
push
ds
orb
and
rorl
push
sbb
add
gs
push
mov
fsts
push
mov
mov
enter
push
test
push
aad
fs
or
push
xor
std
repnz
mov
mov
xor
jmp
hlt
mov
or
out
iret
sbb
dec
mov
outsl
mov
mov
jb
je
mov
lcall
test
fisubs
lret
add
xadd
lea
leave
sub
test
ja
cmp
out
cmp
and
mov
clc
lcall
rorb
enter
sti
mov
dec
out
shll
test
jg
pop
mov
inc
pop
outsb
hlt
les
jbe
mov
push
rcrl
inc
inc
nop
cmp
lahf
fcmovne
xchg
xchg
jne
test
stos
xor
shlb
fiadds
mov
mov
or
hlt
and
pusha
test
mov
xchg
sub
test
js
hlt
inc
jno
and
xor
addl
rorl
sub
loopne
ret
xchg
fadds
jg
iret
xchg
stos
insb
jno
pop
mov
sbb
shr
out
or
jae
js
test
add
push
adc
inc
or
pop
jge
adc
je
aaa
cmpsb
outsb
insl
stc
push
push
rorl
dec
clc
pop
cmp
outsb
call
push
jb
push
movsb
jbe
push
out
das
mov
clc
or
pop
inc
lcall
cwtl
cmpsb
sub
sub
test
arpl
out
test
mov
stos
jmp
clc
cmovb
mov
mov
or
mov
call
cmp
sarb
sbbb
mov
jbe
push
test
ss
scas
jno
popa
pop
mov
xchg
ds
lret
mov
jae
ja
push
mov
jae
sub
xchg
xchg
out
rol
sbb
adc
jmp
inc
sbb
scas
jle
xchg
jne
icebp
pushf
jbe
nop
out
xchg
outsl
lds
outsl
movsl
jnp
xchg
jg
aad
inc
imul
xchg
dec
adc
add
movsl
inc
lret
mov
ret
mov
mov
arpl
sbb
stos
xor
mov
mov
data16
adc
stos
jns
dec
out
mov
std
sbb
into
push
bound
test
popf
cmp
jae
jl
xchg
rclb
jae
xor
mov
pop
sub
out
aad
mov
scas
xor
xor
pop
pop
add
dec
xor
jp
push
iret
mov
test
into
nop
fnsave
mov
rcrl
or
sbb
in
outsb
xchg
inc
fwait
cmp
lret
mov
das
stos
sub
ret
cmp
lret
dec
push
sbb
or
push
js
jl
mov
lret
pop
mov
roll
add
mov
scas
push
popa
call
pop
push
add
xchg
mov
and
mov
dec
btc
in
outsl
jmp
je
and
in
jo
sub
dec
dec
inc
push
push
lcall
dec
pop
pop
int
add
xchg
mov
pop
mov
adc
popf
xor
pop
out
mov
mov
daa
enter
xor
push
mov
scas
scas
xor
sarl
addr16
or
mov
xchg
cmp
cld
dec
adc
mov
mov
lods
mov
inc
sbb
jge
fiaddl
out
cltd
fldl
jl
adcl
jmp
jbe
adc
cmp
mov
pusha
out
je
add
sub
xlat
in
loope
mov
mov
mov
xchg
xor
adc
testl
mov
inc
or
xchg
lcall
int
mov
mov
sbb
inc
sub
inc
mov
insb
and
dec
pop
cmp
inc
pushf
fstps
mov
xchg
mov
int
pop
xor
inc
xor
sub
pusha
popa
idivb
jge
outsl
push
cwtl
inc
adc
lret
aas
pop
sub
insl
dec
push
enter
shll
es
and
jns
shr
imul
jae
fcom
mov
mov
fs
out
outsb
loop
jecxz
js
adc
ret
ja
sbb
jp
lock
adc
mov
mov
icebp
aad
sub
in
adc
andb
and
icebp
pop
sahf
and
fdivrs
xor
or
pusha
adc
cli
call
in
jne
jb
xchg
out
and
and
xor
test
and
in
stos
xor
adc
mov
fcmovnbe
ja
popf
xor
sub
mov
adc
mov
mov
cmp
adcb
inc
adc
mov
cmp
fldcw
mov
push
int
mov
idivb
push
je
in
inc
push
decb
sub
stos
cmp
push
notl
into
pop
push
or
adc
adc
xchg
inc
xchg
loopne
or
adc
dec
or
cli
or
push
ljmp
cmpsl
in
dec
fistpll
lahf
cmp
dec
rcll
cld
fdivl
push
push
xchg
sti
xchg
push
test
imul
sbb
dec
std
lret
nop
loopne
dec
adc
repz
mov
fstl
test
xor
addb
maskmovq
notl
lods
sub
popa
repnz
pushf
andb
paddusw
cld
pop
add
scas
bound
movsl
pop
jle
daa
mov
sub
psrlq
push
pop
or
and
dec
ud0
mov
repnz
add
cmpsl
push
rclb
push
aam
loop
mov
mov
sbb
addb
xor
sarb
shll
sbb
sbb
ja
dec
or
aad
mov
dec
adc
push
lea
les
ficoms
bswap
stos
xor
scas
inc
or
push
mov
add
push
lcall
cmpsb
es
mov
mov
test
pop
adc
jge
and
adc
clc
movl
jl
adc
arpl
jmp
sahf
jg
setnp
cmp
das
mov
out
pop
add
iret
and
aaa
loope
mov
add
std
jp
pop
mov
les
in
dec
sbb
pushf
stc
aam
cld
leave
jb
mov
scas
sbb
es
push
xchg
xor
ret
jne
and
in
add
push
inc
sbb
push
and
xor
sarl
in
pop
add
and
popf
aas
xor
inc
mov
xor
daa
cmp
sub
pop
mov
inc
or
or
sti
xchg
fcomp
or
aad
lret
mov
ja
adc
push
rolb
and
std
aad
cmpsl
popf
call
lock
lcall
adc
push
mov
cmpsl
mov
mov
mov
cmpsl
or
xor
popf
dec
or
popl
or
cwtl
repz
or
insl
in
aad
inc
jae
push
mov
les
mov
pop
xor
dec
sub
xchg
ret
mov
adc
in
pop
sbb
cmp
movb
cmp
test
addl
sbbl
pop
daa
mov
xchg
sub
mov
mov
mov
sbb
pop
test
nop
cltd
addb
loop
mov
imul
scas
inc
fsubp
test
mov
gs
and
push
cld
test
mov
sub
sub
cmp
mov
movsb
shll
and
mov
das
mov
push
mulb
mov
sbb
fnstcw
push
lds
sub
cmpsb
lods
xor
xor
stos
inc
out
sbb
xchg
adc
and
lds
dec
mov
mov
sub
xor
sbb
frndint
adcb
and
in
xor
test
xchg
cmp
ret
adc
xor
jns
jmp
scas
das
xor
inc
push
push
add
and
outsb
xor
in
insb
ljmp
fists
int3
roll
jmp
repnz
and
sbb
pop
aam
adc
in
rcl
mov
push
or
mov
nop
pop
sti
ret
test
xchg
jg
rclb
fs
add
sub
sbbb
xchg
sub
xchg
nop
cmp
pop
add
xchg
test
mov
sub
adc
in
mov
stos
cld
bound
mov
rcll
mov
movl
dec
or
mov
push
lret
xchg
cmp
xor
iret
pushf
aaa
lahf
xchg
les
mov
in
cmp
test
lret
gs
fnsave
dec
mov
ret
fs
adc
sarb
jo
mov
jo
inc
pop
outsl
push
add
hlt
sbb
xchg
out
das
lods
cmp
cmpsb
xor
and
mov
out
sub
dec
jae
add
lcall
jnp
jp
fsubrp
jne
add
cli
pusha
iret
sub
cmp
mov
cwtl
sub
fs
push
les
in
sbb
jl
clc
mov
inc
loop
mov
xchg
je
mov
inc
push
pushf
cmpsl
push
cld
pop
lret
into
inc
inc
or
int
add
adc
or
loop
fdivrl
clc
in
jo
cmp
push
je
mov
inc
jb
in
and
xchg
stc
pop
add
jns
rcll
popa
lods
das
aam
in
jo
add
sbb
jae
sbb
out
xchg
dec
xchg
cmp
pop
add
mov
push
jno
ja
imul
outsb
mov
adcl
fs
pop
xor
movsb
dec
xorl
push
mov
mov
aam
jnp
out
movsl
in
outsb
cmpl
test
mov
cmc
xchg
aad
insl
pop
lret
pop
xchg
mov
jmp
inc
or
dec
stos
xor
dec
jns
arpl
xchg
cmp
fst
adc
fwait
je
jl
punpckhwd
std
pop
clc
bound
scas
or
adc
inc
mov
lods
sub
idivl
inc
or
cmpsb
push
lret
push
add
push
adc
jae
inc
cli
pop
xchg
pusha
sub
sub
xchg
lahf
jecxz
hlt
cmp
mov
sbb
cmpsl
xor
pop
mov
or
subl
negb
aaa
adcl
rcrl
push
jmp
inc
mov
jp
loopne
aad
add
cmpsl
mov
mov
add
jno
scas
sub
je
repz
xchg
sub
addr16
sub
sbb
adc
dec
aas
lahf
xchg
clc
or
inc
or
dec
or
lret
imul
frstor
fsubrl
add
ljmp
ret
mov
jnp
adcb
push
sar
xchg
out
xchg
sbb
aaa
into
or
sbb
dec
pop
xor
mov
sbb
data16
jae
in
je
shll
pop
sub
addr16
xchg
dec
jbe
push
jo
ret
fs
nop
cmpl
push
lods
data16
mov
jns
and
push
sub
xchg
sbb
iret
fwait
int3
je
dec
clc
pop
and
mov
fistpll
or
sub
and
and
xchg
loop
sub
hlt
hlt
fdivrp
pop
jae
push
sti
outsl
sbb
xchg
insl
adcb
pusha
mul
jle
xchg
and
push
shlb
stos
inc
jno
es
loop
pusha
adc
fldl
inc
ljmp
test
insl
cli
es
sub
adc
lret
xchg
cli
dec
jge
pop
in
mov
andl
jb
xor
mov
sub
pop
cli
mov
sbb
lea
clc
out
imul
adc
fwait
add
jp
dec
pop
inc
btr
lahf
ss
lock
add
andl
std
scas
shlb
adc
movsl
sub
pandn
mov
mov
push
sub
push
cli
leave
aas
mov
dec
push
mov
push
mov
xchg
mov
popa
repnz
mov
repz
add
xor
shlb
mov
fbstp
adc
insb
scas
cmc
pop
fs
push
jl
inc
pop
or
adc
mov
stos
xor
ja
inc
add
lods
sub
gs
add
dec
sub
std
add
and
out
adc
pop
cli
mov
test
cmpsl
lods
test
and
cmp
js
shll
cld
stos
hlt
pusha
add
pop
push
roll
cmp
je
and
enter
lds
and
xor
sbb
sbb
pop
sahf
cmp
enter
fistpl
out
jbe
or
cmp
mov
loope
inc
cltd
inc
rolb
push
loopne
xchg
inc
add
inc
xrstors
pop
and
lea
fnstsw
sbb
filds
test
imul
lock
pop
jge
stc
icebp
pop
mov
lods
jl
sub
jle
xor
loop
popf
cmp
loopne
int
mov
rclb
mov
pop
std
or
push
fdivrl
sbb
jno
dec
or
fldenv
dec
or
rcrb
dec
outsl
jmp
pushf
lods
add
das
sub
mov
insl
xrelease
jae
sbb
mov
xor
push
xor
ljmp
inc
adc
dec
or
pop
cli
sti
pop
enter
es
mov
pushf
cmp
push
ret
adc
insl
ljmp
dec
pop
data16
mov
xchg
and
and
ss
push
pop
mov
and
xchg
cmp
cmp
lret
andl
adc
mov
call
inc
push
inc
inc
inc
cmovge
call
cmp
int3
pop
sti
int
lock
pop
xor
xchg
sbb
sub
stos
sub
inc
nop
mov
clc
lahf
into
mov
out
ja
push
mov
fwait
pop
scas
pop
sti
mov
movsb
ds
mov
das
stos
add
pop
push
lds
lods
pop
aas
xchg
mov
movsl
push
enter
imul
cwtl
mov
push
dec
out
push
cli
std
lahf
popf
inc
sbb
dec
pop
add
loopne
daa
xchg
fisubrs
mov
xor
inc
cltd
iret
mov
roll
js
add
ret
mov
push
outsl
hlt
dec
sbb
lahf
jnp
inc
or
xor
shlb
jecxz
cmp
mov
aam
mov
loop
push
cmpsl
repnz
push
mov
test
test
mov
jl
adc
inc
gs
add
dec
adc
movsl
aam
add
jg
push
ds
cmp
mov
cs
popa
mov
outsl
out
inc
shl
jbe
mov
ret
xchg
movsl
xor
dec
push
testb
jae
fs
cwtl
ss
cs
das
enter
dec
or
dec
xor
iret
mov
jo
pop
add
jp
lods
cs
repz
push
hlt
data16
sub
aad
out
inc
jp
lcall
cld
or
into
xchg
and
out
xor
bound
enter
pop
rorl
icebp
push
mov
and
adcl
adc
movsl
xor
mov
jmp
add
mov
push
pop
xor
jle
mov
xchg
cmp
sub
mov
and
sub
lods
sbbl
and
scas
xchg
xor
jge
rcll
push
cli
inc
adc
cmpsb
cwtl
cmp
test
ret
push
xor
int3
mov
push
sub
aas
xchg
outsl
mov
add
roll
pop
add
sub
cmp
sub
pushf
fs
cs
jge
jg
jl
sub
cmp
int3
jmp
sbb
fdivs
ret
fidivrl
xchg
inc
adc
ljmp
arpl
jae
out
push
jo
lds
dec
jecxz
mov
mov
cwtl
sub
push
pop
lret
push
int3
dec
popf
inc
sbb
aad
adc
fstl
ret
cmp
icebp
ficoml
push
rcrb
leave
xchg
push
rorl
cmpsl
jecxz
pop
jb
adc
jnp
addr16
daa
test
jb
outsb
icebp
sbb
jne
call
xor
sbb
stos
sub
dec
into
lea
cld
inc
adc
xchg
jge
adcb
sbb
adc
nop
inc
xlat
rcrl
xor
or
fistps
jb
xor
sub
mov
cmpsl
cmc
lock
sub
mov
stc
lock
adc
jp
faddl
cwtl
lea
jns
out
arpl
cmp
pop
mov
pusha
mov
jecxz
push
dec
rep
xor
sti
orl
xchg
xor
cmp
dec
add
dec
adc
fbld
cmp
inc
faddl
mov
push
inc
ret
sbb
addr16
jbe
and
fidivl
add
sub
xchg
test
sub
cmc
test
popa
repnz
fyl2xp1
pop
cmp
repz
test
stos
xchg
inc
xor
xchg
pop
out
jns
pop
adc
inc
pop
int3
mov
mov
jb
inc
push
mov
test
ret
adcl
xchg
pop
roll
insb
mov
xchg
inc
add
into
gs
pop
sub
lea
arpl
xchg
es
out
int3
or
fwait
mov
or
add
mov
mov
test
xor
mov
mov
and
adc
das
test
dec
inc
fdivrl
das
iret
sahf
imul
and
xor
cmp
pop
adc
push
insb
nop
leave
xchg
loope
mov
cmc
out
lcall
sbb
push
push
inc
lock
popl
mov
lds
cli
movsb
sub
inc
push
into
repnz
jge
in
xchg
mov
jo
cld
mov
out
jne
lcall
xchg
sar
arpl
fiadds
int
sbb
push
jmp
sbb
push
and
xchg
cltd
xchg
pop
into
jle
cmp
mov
xlat
cwtl
call
jmp
inc
jl
mov
mov
jmp
adc
mov
stc
jbe
jmp
addb
and
fidivrs
xor
mov
mov
js
hlt
fs
jge
jb
ljmp
aad
iret
sbb
js
out
push
shrb
xor
xchg
and
nop
mov
cmp
cltd
insb
lods
ss
loop
xchg
sub
scas
sbb
cli
pusha
aaa
or
arpl
push
out
lods
ss
mov
enter
mov
dec
push
es
sbbl
or
push
out
pop
fnstsw
or
xor
jb
rcll
nop
mov
mov
push
xlat
pop
scas
or
data16
sub
test
jnp
ljmp
jno
pushl
shll
dec
fcomip
jae
inc
movsl
adc
incb
int3
arpl
test
sbb
orb
cmp
insb
or
ds
loopne
xchg
adc
inc
mov
xchg
in
fs
xchg
add
sbbb
push
cmp
mov
mov
lock
push
mov
ja
sub
dec
xchg
sub
add
xchg
xor
sbb
cmpsl
cmp
fadds
xchg
push
in
sub
je
jge
sub
push
lahf
xchg
sub
aas
dec
loopne
repnz
and
addr16
inc
into
gs
test
cltd
in
or
mov
mov
mov
jbe
xchg
inc
ffree
xor
xchg
arpl
fs
adc
sbb
xlat
cmp
or
push
out
pop
fdivrl
or
das
fdivl
iret
xchg
sub
cmp
mov
mov
push
sbb
test
ss
leave
in
test
jp
jmp
sbb
mov
outsb
sub
lahf
pop
xchg
sub
dec
fcomip
jb
inc
movsb
adc
inc
vpcmpgtb
test
sbb
orl
cmp
imul
pushf
or
pop
cmp
sub
cmova
inc
mov
xchg
loop
gs
xchg
add
sbb
push
cmp
xchg
mov
lock
push
mov
ja
sub
xchg
sub
add
xchg
xor
sbb
and
cmp
xlat
inc
out
xchg
push
out
sub
jne
jl
sub
sbb
xchg
sub
cmp
mov
and
iret
data16
test
cwtl
in
test
xor
or
mov
jbe
nop
inc
faddp
das
std
xchg
popa
loop
cld
adc
sbbl
aad
rolb
mov
out
pop
fstpt
or
fnsave
xchg
sub
cmp
dec
push
aam
mov
je
cmpsb
es
into
push
out
test
js
in
test
lret
cld
insb
sub
popf
sbb
dec
loopne
jo
inc
mov
ret
into
gs
bound
test
movsb
cmp
imul
pop
cmp
loope
lea
call
nop
add
mov
mov
sbb
push
cmp
test
cmp
movsl
pop
icebp
push
rcrl
js
sub
xchg
sub
xor
sbb
and
xchg
push
out
daa
cwtl
push
movsl
leave
dec
jne
jp
sub
sbb
loope
out
mov
and
iret
data16
xchg
enter
jmpw
sbb
sub
insb
fneni(8087
ja
mov
mov
loopne
cld
adc
sbbl
aam
roll
es
out
push
fnstcw
or
pop
int3
xchg
sub
jg
xchg
mov
mov
push
rcrb
mov
jae
push
push
out
xchg
jbe
in
cmpsl
sbb
movsl
dec
enter
imul
sbb
loope
outsb
mov
mov
ror
repz
test
movsl
cmp
or
les
mov
loop
lea
dec
fistpll
add
mov
pop
mov
scas
test
loope
cmp
cmp
pop
repnz
rcrl
jns
sub
xchg
jnp,pn
std
xchg
cs
mov
iret
dec
sbb
and
icebp
mov
push
out
and
inc
jne
js
sub
sub
cmp
insb
in
mov
pop
mov
rolb
jb
xchg
adc
cmp
out
mov
mov
fndisi(8087
js
mov
mov
fisubs
jb
sbbl
aam
rolb
es
lock
xlat
mov
push
stos
sub
je
int3
xchg
sub
jge
xchg
scas
pop
mov
push
rcrb
mov
jae
imul
je
in
movsl
sbb
cmpsb
dec
jae
clc
imul
dec
mov
mov
sahf
punpckhdq
inc
mov
mov
xchg
adc
test
cmp
xchg
or
pop
cmp
jecxz
lea
dec
fistpll
scas
add
mov
and
fists
aad
add
repz
rcrl
jp
sub
cwtl
das
jnp
std
xchg
sub
mov
iret
dec
sbb
and
repnz
push
out
and
jne
jbe
lds
cwtl
xchg
sub
cmp
jmp
dec
sbb
ds
data16
mov
adc
cmpsb
cmp
push
mov
pop
mov
fnclex
jns
mov
mov
fsubl
or
sbbl
sarl
add
mov
icebp
push
aad
push
pop
js
rsm
sub
je
lret
xchg
sub
lods
push
mov
push
into
sbb
mov
icebp
mov
jb
in
mov
les
imul
sub
dec
jecxz
push
dec
pushf
or
iret
out
pusha
mov
xchg
adc
test
cmpsl
ds
or
xchg
push
pop
cmp
in
mov
dec
loopne
lods
add
mov
and
ficoms
aad
jmp
repz
rcrl
jp
daa
cmpsb
fbstp
dec
cwtl
das
jp
std
xchg
sub
mov
out
aam
and
repnz
out
and
jne
jne
lds
xchg
xchg
sub
cmp
ljmp
mov
loopne
pop
adc
cmpsb
cmp
adc
ss
addr16
jns
mov
mov
or
push
mov
sub
cmp
add
pop
icebp
push
aam
push
push
ja
pop
daa
fnsave
xchg
sub
lods
sbb
sbb
mov
ret
icebp
mov
jno
in
mov
ret
je
cmc
push
xchg
sub
dec
jecxz
imul
data16
pop
mov
xchg
pmaxsw
in
or
xchg
add
sub
in
in
mov
dec
loopne
stos
add
mov
and
fisttpll
aad
mov
repz
pop
xor
adc
movsl
fbstp
inc
cwtl
das
jns
std
xchg
sub
sbb
and
repnz
push
out
and
jne
je
lds
xchg
xchg
sub
cmp
jmp
push
mov
fisttps
test
xor
mov
mov
jns
mov
mov
fisubl
or
mov
sub
sbb
cmp
add
pop
icebp
push
sarl
push
fnsave
xchg
sub
stos
sbb
dec
dec
int3
sbb
mov
ret
hlt
jo
in
mov
ret
hlt
lds
sub
dec
jecxz
push
imul
mov
mov
nop
push
out
test
cmpsl
jecxz,pt
or
xchg
add
pop
ss
shl
in
mov
add
mov
and
fmull
aad
std
mov
repz
pop
xor
adc
inc
cwtl
das
js
std
xchg
sub
sbb
pop
popf
cmp
into
inc
repnz
push
out
and
or
out
lds
xchg
xchg
sub
cmp
call
push
mov
fimuls
test
xor
mov
mov
sub
gs
jns
xchg
mov
fldenv
or
mov
sub
roll
jg
cmp
sarb
xcrypt-cfb
cmpsl
and
xchg
sub
stos
sbb
mov
outsb
shrl
sbb
icebp
mov
outsl
push
in
mov
shll
lds
mov
mov
cltd
or
cmp
iret
data16
pop
mov
or
cmpsl
loop,pt
or
xchg
add
pop
xor
push
in
mov
loopne
test
incb
mov
test
ds
cld
mov
repz
pop
xor
fbstp
inc
cwtl
das
ja
std
xchg
sub
sbb
push
pushf
cmp
int
repnz
push
out
pop
xchg
adc
jb
lds
xchg
xchg
sub
aaa
dec
jecxz
out
dec
sbb
iret
data16
fisttpll
test
xor
mov
mov
sub
xlat
loop
or
add
or
mov
sub
roll
jle
cmp
sarl
and
je
xchg
sub
test
lret
sti
insl
shrl
sbb
iret
dec
shl
repnz
push
in
lahf
adc
cmpsl
inc
shlb
lds
mov
jecxz
data16
cwtl
or
cmp
mov
mov
test
scas
cmpsl
loope,pt
or
nop
add
pop
xor
sub
loop
in
xchg
dec
loopne
test
cltd
fsts
incb
test
sbb
dec
ds
sti
mov
repz
pop
xor
adc
mov
cwtl
das
jbe
std
xchg
daa
cwtl
mov
lret
mov
jmp
imul
repnz
push
out
push
xchg
adc
jno
lds
ss
jecxz
out
dec
sbb
iret
imul
pop
push
in
test
loopne
mov
mov
sub
arpl
loop
or
add
or
lods
sub
sar
jl
cmp
iret
mov
adc
xchg
cs
jne
xchg
cmpsl
sbb
mov
insb
aam
sahf
sbb
iret
dec
mov
push
in
popf
adc
test
mov
das
xchg
adc
in
fs
xchg
or
mov
jmpw
and
scas
test
loopne
or
mov
pop
xor
in
xchg
dec
loopne
cmpsl
add
test
and
fmuls
jl
mov
hlt
iret
dec
rcrl
jnp
and
cltd
xor
std
xchg
and
inc
sbb
sbb
cmp
lret
mov
push
out
sbb
adc
outsl
jecxz
adc
xchg
sub
xor
mov
push
mov
mov
fisttpl
test
fimuls
mov
mov
sub
popa
aad
jp
addl
sub
cwtl
pop
aad
cld
push
jnp
mov
daa
sbbl
int
aam
jp
cmp
mov
adc
les
xchg
movsl
pop
mov
dec
sbb
pushf
sbb
rorb
repz
push
out
fwait
adc
test
out
bound
xchg
sete
inc
mov
in
bound
add
mov
addr16
mov
mov
out
xchg
lods
test
movsb
mov
pop
xor
in
test
dec
loope
movsl
add
xor
mov
xlat
dec
aas
jp
movsb
cmp
pushf
pop
hlt
int
ret
out
jnp
and
cltd
xor
xchg
and
mov
movl
insb
sbb
repz
pop
out
sbb
jbe
outsb
loope
adc
dec
in
jecxz
dec
adc
shlb
test
or
push
add
mov
sub
pusha
shl
jp
orb
add
add
test
pop
lret
cmp
cmp
int3
rclb
jp
mov
ret
hlt
jb
xchg
movsb
adc
sbb
lcall
mov
imul
aas
mov
xor
xchg
push
xchg
sub
mov
in
popa
mov
xchg
add
add
mov
push
mov
lock
stos
test
movsl
mov
pop
das
lods
sub
ficoms
jl
decl
xor
incl
movsb
xchg
jns
movsb
cmp
fwait
pop
hlt
int3
dec
ret
in
jnp
pop
sahf
loopne
rolb
xor
xchg
and
mov
out
insb
sbb
repz
out
sbb
jbe
insl
loopne
adc
dec
in
loop
dec
adc
imul
xor
mov
or
cmpsl
ds
fmull
or
cs
pop
shl
jp
orl
push
shll
add
pop
mov
and
cmp
cmp
lret
rclb
jp
mov
rcrl
mov
les
mov
addr16
cltd
push
cmp
inc
mov
pop
out
cltd
or
jbe
in
pop
xor
nop
or
dec
in
pusha
mov
xchg
add
xor
push
mov
mov
lock
test
push
movsl
mov
pop
lods
sub
fisttpll
jl
decb
das
mov
push
mov
aad
aas
js
movsb
cmp
lcall
jnp
jnp
push
popf
loopne
iret
aas
cltd
xor
xchg
and
sbb
je
aad
sbb
repz
pop
out
sbb
jbe
insb
fildll
adc
dec
in
loope
dec
adc
data16
mov
or
cmpsl
ds
fisttpl
or
lds
sub
pop
shl
jp
orb
and
cwtl
push
shlb
add
mov
and
sbb
cmp
cmp
lret
cld
insl
jp
lahf
sbb
cwtl
das
bnd
xchg
mov
ret
sbb
cwtl
adc
repz
addr16
out
cwtl
or
test
jmp
xor
or
sub
mov
in
pop
mov
xchg
add
xor
shrl
push
mov
xchg
test
movsl
mov
pop
sub
dec
in
cmp
loope
mov
push
mov
aam
aas
ja
movsb
cmp
cltd
pop
hlt
lret
pop
jp
jnp
sbb
ds
xor
xchg
and
sbb
jae
aad
pop
xchg
cmp
cmp
mov
pop
out
sbb
or
jge
dec
in
loopne
dec
adc
shlb
mov
or
cmpsl
ds
fimull
or
pop
scas
sub
rcrl
jp
jg
fbstp
shll
add
mov
and
stc
jbe
cmp
leave
rclb
jp
sahf
sbb
jbe
mov
std
xchg
mov
ret
repz
xchg
adc
roll
repz
pop
out
xchg
or
test
ljmp
sub
scas
dec
in
pop
mov
nop
add
xor
mov
xchg
xchg
cmpsl
test
movsl
mov
pop
sub
sub
fisttpl
jl
cld
dec
loope
mov
push
mov
roll
jbe
movsb
cmp
cwtl
pop
hlt
leave
inc
ret
ljmp
int
cltd
xor
xchg
and
sbb
jb
aad
push
xchg
cmp
lds
repz
pop
out
pop
mov
test
cmp
push
das
push
mov
pusha
fbstp
add
mov
pop
xchg
test
or
scas
sub
rcrl
add
fildll
shlb
add
mov
and
clc
jne
cmp
enter
imul
sbb
jbe
mov
std
xchg
mov
rcrl
repnz
xchg
adc
roll
mov
gs
out
xchg
or
test
jmp
or
in
pop
mov
popl
insl
add
mov
push
test
lock
push
push
movsl
xchg
pop
sub
in
jle
dec
loope
mov
push
mov
rolb
jne
movsb
cmp
inc
ret
jmp
loopne
int3
cmp
xor
xchg
pop
nop
mov
ret
mov
jecxz
insb
adc
repz
pop
out
push
mov
test
aaa
jbe
imul
xchg
sub
fidivs
add
aam
and
test
test
fmuls
or
pop
lods
sub
rcrl
jp
jge
fildll
iret
data16
add
movsl
and
divl
cmpsb
sbb
mov
adc
cwtl
das
out
insl
std
xchg
lahf
adc
mov
arpl
insb
xchg
adc
roll
repz
fs
out
xchg
or
test
call
or
in
pop
mov
mov
insb
add
mov
push
test
lock
push
push
movsl
xchg
pop
sub
in
jge
dec
loope
lahf
add
jle
and
rolb
aad
rep
cmp
inc
ret
call
loopne
int3
cmp
xchg
pop
mov
roll
jno
aam
adc
cmp
les
pop
out
push
mov
cmpsl
mov
fldt
lds
xchg
sub
cmp
add
xor
push
add
bound
mov
pop
mov
pop
rorb
das
aaa
ret
add
adc
or
mov
push
push
xchg
loopne
mov
and
test
or
loop
scas
pop
lock
ljmp
mov
fisubrl
ret
in
pop
sub
push
mov
mov
xlat
mov
ljmp
lret
cmp
sub
nop
push
dec
fsubrl
dec
clc
mov
out
xor
lds
jne
push
xchg
test
ds
or
sar
es
notl
ret
cmpsl
cld
leave
jo
arpl
fisubl
add
mov
ja
dec
adcb
inc
jle
xchg
push
jno
inc
js
sub
sub
int
adc
mov
push
icebp
pop
rep
lahf
js
xor
xchg
and
dec
push
pop
lea
out
popa
sbb
mov
lcall
popf
popf
js
dec
roll
lods
sub
mov
jmp
daa
cmp
pusha
int
gs
aad
les
jne
push
mov
mov
in
or
out
sub
mov
sub
jmp
xor
pushf
mulb
loop
mov
pop
ret
pop
mov
cmp
jge
inc
test
lahf
sbb
and
fadd
mov
xorb
mov
movsb
xor
inc
cs
and
out
lods
jno
push
in
pop
mov
cltd
inc
pop
sbb
push
or
xchg
adc
xchg
xchg
lret
jmp
cwtl
bound
aaa
mov
sub
fs
repz
xor
lret
js
es
cmp
push
or
push
shrb
pop
xchg
shlb
cmpsl
add
popf
push
test
iret
lret
mov
push
cltd
pop
mov
je
cmp
jg
push
dec
test
loopne
or
stos
mov
arpl
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
push
push
jb
mov
mov
test
mov
arpl
fcmovne
and
xchg
jp
fldcw
loope
push
orb
mov
loope
rcll
adc
aad
adc
outsl
xchg
rorb
insl
inc
insl
xchg
mov
inc
imul
cmp
sbb
or
cmpsb
mov
jnp
loopne
stos
xchg
jns
int3
cmpsl
pop
mov
psubb
push
cmp
or
cld
cmp
dec
ljmp
or
push
adc
addr16
sti
push
ss
andb
sbb
outsl
xor
aam
loopne
push
insb
xchg
push
test
xchg
insb
push
dec
or
loope
enter
jp
cmpb
jge
adc
cmp
mov
ljmp
je
or
mov
push
in
dec
sub
mov
sub
or
xor
lock
cli
inc
loope
pop
into
mov
add
push
sbb
dec
iret
mov
or
mov
stc
outsb
outsl
iret
xor
test
push
adc
add
mov
pop
pop
inc
inc
xor
stc
psadbw
lret
mov
divb
pusha
nop
lret
sub
jns
cmp
into
and
repz
clc
and
pop
mov
es
push
gs
sub
out
sahf
aaa
scas
pop
lds
dec
dec
add
lcall
jmp
dec
int3
pop
popa
push
outsb
push
mov
test
cmpsl
mov
test
scas
xor
pop
cmp
loope
xchg
test
cmc
lods
adc
add
xor
mov
mov
fbstp
mov
push
cmpsl
xor
and
pop
scas
enter
xchg
add
and
sub
insl
clc
add
ds
hlt
lcall
inc
pop
jp
imull
out
jl
adc
fstpt
jno
daa
push
out
leave
mov
sub
inc
into
cltd
mov
mov
shll
xlat
mov
stos
dec
in
dec
xchg
insl
push
aaa
add
lret
stc
xchg
int3
iret
mov
cwtl
dec
xchg
mov
xor
ret
mov
lret
hlt
or
aaa
out
mov
ss
lret
cmp
std
les
lret
ja
jmp
cltd
push
fldenv
out
adc
add
lds
lea
insl
sbb
std
jp
jmp
or
cmpsb
lock
stos
pop
lods
xchg
jo
notl
adc
stos
lea
jae
insb
shll
pop
incl
adc
in
out
mov
loopne
pop
and
push
icebp
xor
xor
aad
imulb
shrb
mov
ljmp
test
add
cmp
in
sbb
loop
push
mov
jmp
cmpsl
in
mov
call
nop
jno
mov
mov
dec
mov
dec
mov
mov
cmp
shll
aaa
orb
fbld
pop
les
inc
mov
mov
mov
sti
into
xor
std
icebp
jbe
xchg
cmp
je
cmp
fnstenv
adc
out
fidivs
test
cs
scas
mov
sub
mov
ljmp
daa
mov
cmp
daa
mov
push
cmpsl
xor
mov
movsl
cld
mov
ja
pop
mov
pop
mov
cli
out
cli
lock
mov
das
add
aam
das
pop
pusha
fcoms
sahf
bound
cmp
xchg
cli
and
fldl
dec
mov
cmp
mov
stos
xchg
dec
cmp
push
jo
jmp
cmp
pop
lods
lods
das
je
aad
rcrl
sub
daa
mov
xor
cmpsl
std
jl
add
mov
cmpb
mov
outsl
js
adc
test
pop
in
inc
ret
and
mov
sub
cmpsl
pop
icebp
int3
daa
lea
xor
cmp
inc
add
mov
mov
mov
jp
sub
xlat
cmpsl
xor
sahf
pop
mov
add
icebp
test
inc
push
js
adc
jo
jno
pop
or
iret
mov
push
mov
xlat
dec
scas
push
mov
lods
repz
inc
std
and
add
or
dec
sub
sbb
rorb
mov
pop
bound
cli
repz
xchg
add
cwtl
into
clc
jg
insb
sarb
sub
xor
dec
push
inc
mov
push
push
inc
repnz
pop
arpl
adc
psrld
xor
jns
mov
pop
insb
xchg
mov
out
shlb
jno
and
fdivl
lods
add
adc
iret
mov
jbe
mov
fst
in
lahf
daa
cmpsb
mov
pop
dec
fs
sub
mov
pusha
pop
and
sub
push
std
pop
xchg
sub
scas
lods
add
jno
gs
out
jne
arpl
xor
add
xchg
add
mov
mov
cmpsl
add
add
fs
mov
sti
lock
cmpsl
pop
fmulp
jns
test
testl
sub
inc
cld
insl
pop
movsl
bound
scas
xor
pop
mov
mov
push
mov
cli
int3
lods
mov
out
aam
lret
cli
jno
push
je
mov
xchg
fiadds
inc
or
mov
sub
sarl
pop
notb
pop
inc
sbb
lea
in
mov
sbb
xchg
mov
sub
inc
add
in
lahf
sbb
incl
cmp
enter
std
mov
lods
xchg
aad
les
inc
sti
pop
mov
mov
dec
push
or
mov
idivl
ret
lret
and
fnstcw
mov
out
out
rol
dec
es
sbb
dec
cmp
and
xor
xchg
mov
mov
push
fwait
inc
dec
popa
adc
out
sahf
push
inc
popa
addr16
ficomps
mov
pop
mov
jnp
negb
mov
mov
dec
cltd
jno
adc
mov
ljmp
int3
dec
call
movsb
sahf
pop
ljmp
jbe
push
mov
daa
fildll
xor
imul
stc
add
fcomp
cwtl
mov
push
std
and
into
cmpsl
lods
outsb
fnstcw
dec
int
cltd
xchg
xchg
addr16
pop
loope
xlat
sarb
jns
jge
popfw
outsb
ret
dec
add
dec
add
lahf
dec
add
mov
mov
lret
lods
add
lods
lret
stos
sub
push
rorb
cmp
xor
jmp
sahf
jo
adc
xor
lret
push
jns
ret
