push
mov
sub
mov
mov
mov
mov
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
push
mov
push
mov
push
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
mov
movzwl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
jmp
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
mov
add
mov
mov
mov
mov
mov
movl
mov
mov
movl
cmpl
jne
movl
push
push
call
mov
mov
mov
mov
mov
mov
mov
push
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
cmpl
jne
mov
jmp
movl
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
xor
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
cmpl
jne
mov
mov
mov
cmpl
je
movl
mov
mov
sub
shr
mov
mov
add
mov
mov
push
mov
push
mov
push
mov
push
call
add
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
mov
movzwl
sar
cmp
jne
movl
movl
movl
movl
movl
mov
mov
movzwl
and
add
mov
movl
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
jmp
mov
add
mov
mov
cmp
jge
mov
add
movzbl
mov
movl
mov
add
mov
mov
movl
jmp
mov
pop
ret
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
pusha
push
call
movl
movl
movl
push
push
call
push
call
mov
mov
mov
mov
movzbl
cmp
je
mov
movzbl
cmp
je
xor
jmp
mov
mov
mov
mov
mov
mov
lea
push
mov
push
push
call
test
je
call
call
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
mov
push
mov
push
mov
add
push
call
add
mov
sub
mov
mov
push
push
mov
push
call
add
popa
mov
mov
xor
je
ret
mov
add
xor
dec
js
ret
js
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
push
movl
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
push
movl
mov
add
mov
mov
pop
ret
add
add
add
add
add
add
xor
xor
test
pop
repnz
incl
add
test
sti
cmp
or
xor
fnstcw
pop
or
ds
cmp
aas
pop
add
inc
add
add
xor
xor
xor
ret
xor
test
xor
dec
xor
das
pop
xor
xchg
xor
xor
das
mov
fildll
xor
dec
xor
xor
xor
xor
ss
xor
ss
xorb
xor
xor
sti
xor
aaa
or
clc
ss
xor
add
xorl
pop
ss
shlb
push
ss
jmp
xor
jnp
stos
ss
xor
ss
xor
ss
xor
aaa
dec
xor
push
xor
pushf
xor
aaa
les
fnstenv
divb
jmp
aaa
and
adc
idivb
xor
cmp
add
pop
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
push
add
pop
or
addr16
gs
arpl
data16
inc
jno
add
popa
fs
imul
jo
inc
das
inc
add
push
insl
popa
fs
imul
outsl
jns
andnps
add
data16
call
dec
popa
outsb
rep
gs
pop
add
add
outsl
gs
lret
inc
imul
bound
add
add
data16
add
jo
imul
add
add
je
andb
jb
popa
outsb
jnp
gs
pop
add
add
add
and
inc
add
add
add
inc
add
inc
add
inc
add
add
pop
add
fsubs
push
add
gs
add
add
jecxz
popa
fldt
jb
outsl
jns
add
inc
add
mov
insl
xor
icebp
gs
insb
pop
add
add
jo
arpl
insl
add
stos
insw
jae
jbe
add
jbe
test
imul
andb
addr16
add
jb
bound
inc
inc
outsb
outsl
arpl
add
add
jb
inc
popa
insb
inc
inc
outsb
outsl
arpl
add
add
insl
popa
daa
push
imul
or
inc
insl
gs
push
insb
push
in
je
hlt
jne
add
fs
jo
insl
insb
outsl
mov
add
mov
insl
xor
jmp
add
add
fs
movsl
push
movsb
outsb
dec
gs
add
pop
add
add
cmpsb
pop
add
jmp
add
pop
jmp
add
pop
jmp
add
add
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
jmp
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
jmp
adc
add
adc
add
adc
add
sbb
dec
jmp
adc
add
adc
add
adc
add
jmp
adc
add
add
add
add
les
jmp
and
add
sbb
add
adc
add
add
add
adc
add
adc
add
and
call
adc
add
adc
sub
add
add
ds
add
adc
add
add
add
add
add
add
add
add
add
sahf
add
mov
add
add
add
add
add
add
add
add
add
cmpsb
sbb
add
mov
add
add
add
add
add
outsb
add
add
add
jle
add
jle
add
outsb
add
add
add
add
add
adc
add
jmp
add
pop
jmp
add
pop
jmp
add
pop
iret
outsl
gs
add
pop
dec
mov
pop
jmp
mov
add
pop
jmp
add
pop
jmp
add
pop
or
aaa
lcall
sub
add
dec
and
pop
jmp
or
pop
jmp
add
pop
jmp
add
pop
sub
push
into
jno
repz
arpl
pop
pop
sub
add
add
sub
add
mov
pop
add
add
add
add
add
add
pop
inc
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
adc
add
adc
add
adc
add
adc
add
outsb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
out
out
out
mov
incl
scas
ljmp
mov
ljmp
jle
ljmp
ljmp
call
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
add
jmp
mov
add
sbb
add
out
add
lret
mov
pop
pop
mov
pop
sbb
add
dec
mov
pop
arpl
add
xorl
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
adc
ja
add
mov
adc
das
mov
add
mov
add
mov
add
mov
add
mov
add
adc
jmp
adc
pop
adc
ja
adc
add
adc
pop
adc
cmc
adc
mov
adc
jmp
lds
add
pop
add
add
pop
add
add
add
add
pop
add
add
push
add
add
pop
add
add
add
add
adc
add
les
mov
movsb
add
arpl
add
add
xor
add
addl
imul
gs
out
add
add
add
add
xor
add
es
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
xor
add
adc
add
fdivl
add
jbe
add
jp
add
pop
mov
add
inc
popl
add
xor
add
out
mov
add
mov
add
mov
add
mov
add
cmp
add
dec
mov
pop
xchg
mov
pop
jae
add
mov
mov
pop
fbstp
add
ret
mov
pop
lods
mov
pop
sbb
add
adc
add
jecxz
add
outsl
mov
pop
outsl
mov
pop
test
add
pop
mov
enter
enter
enter
enter
enter
lahf
add
int
add
stc
lahf
add
or
add
add
lahf
adc
jns
adc
imul
add
lahf
adc
std
sahf
adc
add
adc
xchg
sahf
adc
test
adc
aas
sahf
add
inc
sahf
adc
dec
sahf
adc
jne
adc
imul
adc
mov
adc
sti
popf
adc
setle
xlat
popf
adc
icebp
popf
adc
sbb
mov
adc
xor
adc
add
add
arpl
add
add
inc
jbe
add
jbe
add
mov
add
mov
add
add
add
fwait
nop
add
mov
addb
dec
js
add
add
pop
test
add
add
repz
add
xlat
nop
add
mov
add
js
add
mov
add
test
add
mov
add
sbb
add
das
jge
add
jb
add
xor
add
add
mov
add
add
mov
add
mov
add
add
add
sbb
add
data16
jo
add
jle
add
data16
xorb
subb
inc
add
cmpb
add
rolb
or
add
push
add
add
add
lds
add
movb
hlt
mov
add
repnz
add
add
popf
add
and
lods
add
push
lods
add
cmp
add
pop
lods
add
push
lods
add
sub
add
shrd
pop
adc
add
jecxz
add
mov
add
jge
add
fwait
lods
add
push
lods
add
inc
lods
add
inc
lods
add
flds
add
inc
ret
add
flds
add
xlat
stos
add
pop
push
mov
pop
cmp
pop
pop
mov
pop
imul
pop
add
stos
adc
stos
stos
adc
mov
stos
adc
stos
adc
ja
adc
arpl
adc
xchg
lods
adc
lahf
lods
adc
mov
lods
adc
fldt
adc
fildll
add
lods
add
shrl
add
lods
adc
ljmp
add
adc
fwait
lods
adc
sub
lods
adc
shrl
adc
lods
scas
adc
add
test
add
add
mov
add
addl
add
imul
add
add
add
add
add
mov
add
add
cmpsl
add
add
cmpsb
add
add
xchg
add
test
add
fs
add
gs
add
dec
mov
add
add
and
add
xor
add
dec
mov
add
add
data16
add
dec
mov
add
add
nop
mov
add
mov
add
cwtl
add
xor
add
out
add
loopne
add
and
add
fs
add
inc
xchg
add
jo
add
test
add
cwtl
add
mov
mov
add
mov
add
mov
add
pop
mov
pop
popf
mov
add
jae
add
flds
add
pop
mov
add
xor
mov
add
scas
mov
add
mov
add
sarl
add
mov
add
lahf
mov
add
jae
add
push
mov
add
cmp
add
pop
rolb
lret
mov
add
jecxz
add
xlat
mov
add
pop
pop
lds
pop
add
xchg
fiaddl
add
add
add
and
pop
cmpb
adc
jmp
lds
in
add
sbbb
adc
and
adc
filds
pop
adc
pop
cmpb
sub
pop
andb
add
add
cmp
pop
and
pop
sbb
pop
adcb
adc
fildl
pop
and
pop
cmp
pop
cmp
pop
xorb
adc
testb
sub
pop
add
mov
jb
add
add
jne
add
ja
add
mov
add
jge
add
jg
add
jg
add
and
add
or
cltd
add
sbb
mov
add
adc
add
add
add
rcl
add
fildl
add
aam
add
push
add
mov
add
test
push
add
jmp
adc
add
xchg
lods
mov
loopne
add
test
movsl
scas
repz
dec
jmp
adc
push
inc
das
rcrl
add
mov
cs
dec
cwtl
mov
aam
rep
stc
icebp
inc
dec
add
add
or
and
insb
pop
int3
out
pop
inc
inc
fucomip
xor
xchg
jno
das
pushf
xor
adcb
in
out
mov
and
rclb
lods
jmp
mov
jl
pop
cmc
pop
movsl
rcll
negl
loope
xchg
sbb
lods
mov
pop
or
mov
popf
sbb
call
popa
daa
sub
nop
mov
mov
daa
lea
adc
and
pushf
bound
ja
or
mov
sbb
fcomp
adc
adc
lds
aas
movsl
or
sub
lahf
and
std
jge
pop
fisttpl
push
fcom
sub
imul
roll
jle
add
int3
std
pusha
add
add
adc
pop
cwtl
jmp
daa
add
adc
adc
pop
ret
and
add
adc
pop
cwtl
jmp
popa
lea
loopne
mov
cwtl
jmp
popf
add
adc
pop
cwtl
jmp
imul
popa
ss
cwtl
jmp
dec
push
add
mov
add
mov
pop
add
add
add
stos
cmp
add
jge
and
inc
rcll
dec
mov
rcrb
jns
jne
out
lret
adc
rcrb
in
in
xchg
outsb
xor
sub
dec
jae
cmp
repnz
cli
or
sahf
jle
and
add
adc
add
add
test
aad
mov
arpl
fwait
jg
cmp
push
dec
push
dec
mov
xchg
mov
add
movl
adc
xor
adc
stos
add
and
pop
mov
rclb
mov
add
xchg
imul
rcl
adc
mov
es
adc
pushf
std
ljmp
fs
add
jne
ds
cltd
pop
scas
insl
imul
add
cmpl
jmp
clc
rcll
pop
mov
add
cltd
mov
mov
sahf
pop
push
mov
add
cmc
add
pop
loopne
shll
inc
mov
push
mov
add
cmp
sbb
pop
mov
js
ds
jno
pushl
mov
add
xchg
add
add
push
mov
call
jae
push
cmp
mov
lret
add
sbbb
pop
jmp
das
inc
pop
in
add
add
add
add
cs
in
add
add
add
add
add
add
add
add
add
add
add
add
cs
in
add
add
add
add
adc
add
add
add
add
add
adc
add
add
add
xchg
add
adc
add
add
pop
add
adc
add
add
add
push
fsts
push
add
add
add
add
repnz
adc
add
add
add
add
or
inc
add
jmp
or
add
sbb
call
or
add
or
add
sbb
jmp
or
add
or
add
sbb
add
or
add
or
add
sbb
add
sbb
add
or
call
sbb
add
sbb
add
or
add
or
call
add
add
or
add
sbb
add
or
add
or
add
into
add
add
or
ret
or
add
or
or
outsb
push
enter
or
add
and
outsb
push
test
or
or
cs
call
add
or
or
add
push
cwtl
add
add
add
or
or
out
or
pop
add
or
or
out
or
or
mov
jmp
dec
pop
jmp
clc
pop
mov
or
jmp
adc
mov
mov
pop
jmp
jb
jmp
xor
jmp
les
mov
or
jmp
and
jmp
movsb
add
jmp
add
jmp
adcb
or
jmp
in
mov
or
jmp
sbb
jmp
xchg
pop
fldl
pop
jmp
or
pop
jmp
add
pop
jmp
or
pop
jmp
jmp
or
add
or
add
or
jmp
or
add
add
inc
add
or
add
or
jmp
add
add
or
add
or
add
or
add
or
add
or
flds
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
or
add
sbb
or
jmp
add
add
or
add
sbb
add
jmp
or
call
sbb
add
adc
push
add
or
add
and
add
adc
popa
add
or
add
and
add
or
add
or
add
and
add
adc
cmp
jmp
and
adc
pop
add
add
add
and
add
or
sub
mov
or
mov
scas
or
repnz
add
add
or
add
lea
add
jne
outsb
or
lret
add
add
add
and
add
or
test
cs
add
add
push
ljmp
or
sbb
add
add
add
or
add
jmp
cmp
pop
mov
or
jmp
sub
pop
jmp
or
pop
jmp
dec
pop
jmp
cli
pop
mov
or
jmp
adc
scas
or
pop
faddl
and
jmp
jae
jmp
xor
jmp
movb
add
add
mov
or
jmp
and
jmp
cmpsb
pop
jmp
add
jmp
adcl
or
jmp
out
mov
or
jmp
sbb
jmp
std
add
or
or
jmp
add
jmp
or
add
or
add
or
jmp
add
sbb
jmp
or
add
add
or
add
or
add
or
fadds
adc
jmp
or
add
or
jmp
or
add
or
add
add
add
or
idiv
call
pop
arpl
jmp
sbb
add
sbb
sti
call
add
add
sbb
add
sbb
pop
add
or
add
sbb
add
sbb
add
jmp
sbb
call
sbb
add
xor
add
sbb
add
sbb
add
popa
or
jmp
sbb
add
sbb
add
or
add
sbb
add
sbb
add
xlat
add
add
decb
sbb
incb
xchg
add
aam
add
or
decb
cmp
incb
roll
mov
or
mov
push
mov
scas
or
add
or
mov
aam
add
or
arpl
jecxz
jge
sub
outsb
or
or
jle
leave
add
aam
add
add
or
add
push
test
add
or
pop
jmp
jmp
pop
jmp
pop
pop
jmp
sbb
jmp
cltd
pop
xlat
push
pop
jmp
jl
jmp
cmp
jmp
fsts
mov
or
or
jmp
mov
pop
jmp
mov
jmp
dec
pop
jmp
stc
pop
mov
or
jmp
adc
scas
or
add
fdivr
and
jmp
jb
jmp
xor
jmp
lds
mov
or
jmp
and
jmp
movsl
pop
add
or
add
or
add
or
add
cld
adc
jmp
or
add
cld
push
add
or
jmp
or
add
cld
add
add
or
add
or
or
add
or
jmp
cld
adc
jmp
or
add
cld
inc
add
or
add
or
add
or
fdivr
or
jmp
jmp
or
cld
call
sbb
add
or
or
jmp
sbb
call
sti
pop
add
add
add
sbb
add
or
idiv
call
sbb
add
or
add
jmp
sbb
add
or
sar
jmp
sbb
call
or
add
or
push
add
insb
adc
jmp
ds
or
ds
pusha
add
and
cs
add
add
ds
addb
ds
inc
add
aad
add
pop
push
add
int
add
int
add
into
xchg
add
cld
cmp
dec
js
dec
cmp
out
into
rolb
mov
int
add
into
mov
scas
int
add
int
add
cld
add
jle
push
add
adc
pop
int
add
sub
jle
je
pop
xor
pop
lret
or
pop
and
stos
pop
add
test
inc
pop
ljmp
sti
pop
pop
sbb
lcall
sti
jl
cmp
ficoml
lods
or
pop
insb
pop
sub
mov
pop
mov
dec
pop
cli
add
stos
or
pop
push
pop
adc
mov
ret
cli
or
jmp
sti
and
add
or
jmp
sti
cmc
add
cli
jno
jmp
sti
xchg
add
sti
aad
jmp
or
add
sti
insl
add
sti
sbb
add
or
sti
insl
add
sti
sbb
add
or
and
jmp
sti
in
add
cli
addl
jmp
sti
dec
add
cli
mov
add
sti
loope
add
jl
ljmp
pop
adc
jmp
pop
sbb
jmp
pop
call
cmp
add
cmp
or
jmp
sbb
add
sbb
stc
call
add
add
cld
out
call
pop
arpl
jmp
fmull
add
call
mov
popl
jmp
lods
jg
jmp
popf
iret
add
outsb
pop
add
popa
pop
add
pop
pop
adc
gs
add
outsl
stc
add
pop
stc
add
stc
inc
add
add
stc
add
ss
add
add
and
dec
stc
add
sub
or
adc
add
and
addb
clc
out
cli
add
loope
addb
cli
sbb
in
add
out
cli
push
add
sti
add
jecxz
pusha
add
cli
add
cli
add
mov
add
loop
xor
lret
xor
add
int
rcll
or
pop
stos
add
pop
test
add
add
loop
push
pop
roll
add
pop
out
add
scas
add
pop
aad
add
faddl
add
fildl
add
xor
fs
cmp
or
insl
adc
push
mov
mov
inc
mov
outsb
add
lods
rorb
jle
mov
fsubl
mov
cmpsl
mov
and
add
sarb
inc
popa
test
jb
cwtl
cwtl
arpl
mov
imul
sub
cmc
into
int
cli
ja
xor
imulb
enter
jg
and
or
hlt
mov
mov
push
mov
push
es
sbb
jae
ret
imul
add
add
dec
pusha
mov
inc
ss
scas
mov
test
test
push
imul
mov
pop
mov
push
pusha
add
mov
loope
add
fwait
mov
divl
clc
adc
xchg
cmp
cld
and
aad
jbe
lds
cwtl
roll
and
out
pusha
xchg
xchg
jno
test
mov
dec
mov
add
ja
clc
xchg
add
loopne
fstps
cld
and
add
fs
scas
sbb
cli
packssdw
pop
insb
sbb
out
test
popa
repnz
movsl
mov
or
sub
mov
inc
jge
mov
dec
mov
add
mov
call
rorl
gs
nop
adc
cmp
push
mov
aam
mov
fdivrs
xchg
mov
rcll
imul
dec
lods
push
jbe
ficoml
lods
sbb
ds
or
dec
or
inc
test
lock
popa
popa
and
into
mov
push
add
sub
mov
popa
dec
loope
xor
shlb
enter
pop
clc
mov
add
mov
push
sti
xchg
iret
in
adc
mov
mov
pop
push
shrb
pop
icebp
fildl
push
addl
pop
jb
nop
sub
and
insb
lret
add
add
jne
lcall
lods
jbe
rcrb
cmpsb
pop
adcl
xor
shlb
cmpl
in
push
jg
inc
or
inc
jp
dec
cmp
pusha
inc
test
mov
mov
popa
shll
mov
cmp
cmp
cwtl
popa
int3
mov
xor
mov
add
add
pop
xor
lds
add
cli
stc
scas
pop
and
ss
dec
incb
out
fbstp
pop
xor
mov
mov
rcll
push
and
jl
cmc
lret
ljmp
and
ss
push
aaa
and
jnp
mov
in
xchg
pop
mov
ret
mov
jb
test
faddl
sahf
test
jns
pop
fwait
pop
inc
arpl
test
jne
mov
stc
fwait
into
es
ljmp
adc
add
ret
loop
in
jnp
aad
or
dec
rclb
inc
stos
fdivrl
fisttpl
adc
aam
imulb
push
cmp
mov
testb
mov
add
sbb
and
ud0
add
imul
clc
popf
mov
insb
push
out
or
loop
add
insb
jb
cmp
cli
sbb
pop
out
aas
imul
pop
sarl
mov
ficoms
or
or
mov
mov
push
xor
mov
scas
sarl
add
ret
stos
jb
inc
cmp
or
push
mov
fsubp
add
xor
dec
data16
adc
popa
pop
fldl2e
addr16
jecxz
or
loopne
add
add
add
pop
sbb
popa
loope
stos
xor
in
sarb
rorb
sub
insl
push
xor
and
add
mov
fucomi
xor
xchg
pushf
inc
jno
ja
xchg
arpl
out
jl
icebp
aaa
fldenv
mov
dec
jnp
andb
mov
or
nop
lahf
in
jg
decb
pushf
pop
imul
mov
rcr
push
mov
cmpsb
add
into
mov
mov
jge
lret
mov
add
cmpsl
or
mov
xchg
iret
call
add
mov
pop
cmpb
adc
push
jbe
outsb
adc
ds
pop
and
sbb
adc
sbb
jnp
es
cwtl
call
push
hlt
push
data16
jl
out
mov
sti
repnz
arpl
xor
jge
pusha
mov
and
add
push
cmp
jae
cld
fldcw
rcr
les
jmp
jns
cli
cmp
test
ficoml
decl
xchg
jns,pn
lea
and
repz
popa
xchg
or
push
lea
mov
lret
pop
jbe
inc
inc
popa
cli
outsb
in
loope
mov
mov
mov
or
xchg
xchg
add
push
xlat
fidivrs
int3
sbb
loope
int
cli
cmc
adcb
imul
inc
sarl
pop
pop
adc
push
sub
out
or
inc
and
jae
std
mov
mov
lret
push
dec
jb
push
lea
cmpsl
and
sarl
aam
mov
iret
jne
xchg
test
inc
add
inc
sbb
adc
lods
sarl
gs
cmp
and
sahf
push
or
in
adc
sbb
xchg
dec
in
loope
out
jns
jle
mov
vmulpd
gs
xlat
sbb
pop
into
sar
mov
inc
pop
jae
add
jo
and
in
mov
mov
pusha
fildll
add
dec
mov
into
cs
adc
xor
jmp
push
lods
sub
inc
ret
imul
out
ljmp
xchg
rorl
cmp
inc
inc
fdivr
pop
notl
pop
scas
inc
inc
push
gs
add
fistl
mov
jns
outsl
mov
pop
mov
ss
les
mov
rclb
mov
cmc
icebp
fwait
rol
in
test
xor
push
adc
iret
cli
inc
loope
fstp
dec
push
lds
push
mov
dec
mov
shrl
into
test
sub
jbe
std
jecxz
mov
mov
xor
or
jae
add
lahf
mov
jmp
stos
sbb
sbb
xor
in
clc
xor
mov
shrl
xor
pop
arpl
fdivr
lret
cmp
ror
aaa
int3
stc
jnp
xlat
loopne
sbb
mov
repnz
popf
addr16
mov
add
out
aaa
sbb
add
sub
lods
sub
jl
push
aas
into
bound
add
add
cmp
fwait
sub
mov
cltd
adc
push
jb
repnz
jae
and
jns
fists
into
xchg
inc
cli
out
icebp
int3
je
int3
mov
mov
jmp
lods
mov
sbb
mov
mov
adc
arpl
xor
cmp
adc
pop
shrb
aas
push
cmp
add
addl
xchg
jae
ljmp
mov
std
xlat
or
mov
and
out
popf
in
jno
std
dec
call
pop
sub
inc
jno
xorl
pop
cmp
repnz
pop
rol
push
or
fdivs
sahf
add
xchg
sar
jmp
sub
aad
pop
fcoms
add
rcr
cmp
lcall
push
add
pop
cli
out
aas
mov
push
int
sbb
or
lock
cld
inc
inc
or
mov
arpl
pop
shlb
and
inc
or
scas
sbb
dec
push
sbb
cmpsb
notb
out
lods
mov
popl
xor
js
xor
std
fdivrp
adc
sub
push
sub
aaa
pop
leave
rorl
xchg
pop
lea
ja
leave
cmp
pop
cmp
stos
inc
aas
loop
test
sbb
jnp
add
add
adc
xor
insl
cmp
lcall
shlb
add
adc
arpl
cltd
lea
daa
add
sub
and
cwtl
out
dec
jb
and
js
popa
fnstsw
sub
pop
sub
jno
jge
mov
mov
cmc
cs
and
das
outsb
mov
jno
pop
push
jae
mov
jb
movsb
xchg
ja
dec
push
jbe
outsl
pop
je
cltd
aad
out
mov
xor
jg
push
or
jl
pop
lea
subb
sbb
add
dec
sbb
in
mov
cli
inc
mov
cli
jmp
outsl
scas
ja
cmpsb
push
xor
jne
repnz
mov
push
insl
mov
outsl
sub
jl
cmpsb
mov
jle
and
or
xlat
pop
shlb
icebp
sbb
loop
xchg
dec
daa
fiadds
pusha
fs
pop
push
fstps
pop
clc
mov
push
add
push
aas
sub
xchg
lods
cmc
jecxz
ficompl
inc
adc
mov
sub
dec
out
or
rol
push
les
push
outsb
sub
push
adc
cltd
push
add
ss
push
push
negl
mov
pop
sbb
mov
add
push
and
push
dec
jmp
pop
imul
add
shlb
xor
fucomp
mov
in
pop
sahf
add
mov
out
mov
push
call
jmp
jl
sub
cmp
cld
xchg
xchg
push
push
dec
inc
add
cli
repnz
sti
stos
add
push
clc
mov
xchg
ret
repnz
jge
or
mov
lret
cmc
ret
nop
xchg
lods
pop
dec
testb
fsts
push
jp
testl
xor
bound
mov
aaa
fsubl
in
mov
xor
rorb
repz
add
and
outsb
jns
lds
xchg
pushf
les
inc
sbb
cmp
add
jg
rol
adc
sub
fnstenv
lret
enter
or
rolb
inc
int3
std
fiadds
iret
or
add
ds
scas
xchg
inc
jp
nop
call
cmpsb
call
movsl
addl
and
stos
xor
mov
mov
mov
cli
xchg
add
mov
mov
jl
jl
shl
lods
mov
pop
dec
xchg
mov
mov
mov
repz
inc
mov
dec
add
in
jecxz
lahf
and
lcall
je
xchg
jns
fcoml
dec
pop
push
lcall
aad
mov
loop
mov
add
es
and
cs
les
roll
pop
fists
pop
test
imul
inc
frstor
mov
shll
xor
inc
sbb
xlat
imul
insl
in
pop
jo
je
jno
push
into
jb
and
mov
sub
lods
in
sbb
dec
jbe
mov
mov
jae
jmp
and
jb
or
ds
pop
and
xchg
jge
je
outsl
call
and
dec
sub
daa
repnz
jmp
and
fstps
push
xor
add
add
gs
and
cmp
mov
jne
stc
ret
int
add
aam
adc
jg
sbb
sub
popf
lds
add
xor
pop
adc
xchg
ret
xchg
mov
test
test
cmp
or
fst
ds
iret
add
cmpsb
xor
push
in
dec
in
push
mov
cs
clc
lahf
jbe
lock
and
inc
sahf
loop
fisttpll
fldl
inc
aad
mov
lahf
xor
imul
lahf
sahf
out
sub
pop
mov
std
pop
inc
in
adc
insb
stos
dec
mov
adc
cmpsl
xor
xchg
sbb
add
aam
lret
cld
jle
sbb
ret
adc
or
sarl
adc
adc
dec
cmpl
in
or
dec
ja
xchg
add
mov
mov
fstpt
mov
pop
jp
inc
lahf
in
fabs
pop
fdivrl
addl
mov
repz
cmp
dec
fnsave
cmp
inc
xchg
popf
test
inc
xchg
mov
cmp
pop
jbe
or
movsl
pop
bound
inc
ret
push
pusha
insb
jmp
push
jmp
lock
xchg
cmp
xor
jecxz
mov
xchg
stos
shlb
lret
xchg
aad
sbb
ret
fwait
add
movsl
aas
push
add
test
mov
mov
scas
xlat
jne
adc
jl
out
mov
sub
push
cltd
xchg
in
mov
xor
jle
in
psrad
inc
mov
sahf
incl
dec
mov
mov
jg
popf
cmpsb
sahf
sub
imul
dec
cmpsb
andb
pop
cmp
jg
inc
div
push
icebp
add
or
lea
lods
add
mov
mov
sbb
in
ja
nop
mov
xchg
xor
cwtl
imul
js
and
jle
std
rclb
push
xchg
test
mov
in
cld
push
dec
hlt
cmc
push
sub
pop
sbb
or
rorl
add
mov
fimuls
fistps
mov
push
mov
mov
lods
lods
pop
adc
sub
int
outsl
jns
mov
fs
out
adc
pop
adc
bsf
movsl
xchg
cs
pop
leave
add
cmpsb
popa
iret
movsl
cmpl
shl
sbb
xchg
ljmp
pop
lahf
mov
icebp
loope
jmp
clc
jnp
sub
adc
lock
test
sbb
add
push
test
dec
jbe
push
fcomi
clc
es
lods
mov
xor
push
xor
shr
xchg
add
xor
jge
sbb
es
pop
inc
cmp
add
adcb
add
aaa
mov
in
cmp
push
xchg
sbb
xchg
mov
dec
sub
inc
js
or
aad
pop
jge
cs
int
push
cli
dec
jecxz
jbe
lea
and
sahf
sbb
sub
fs
and
and
imul
test
into
push
and
and
sub
sub
ds
sbb
xchg
sbb
push
orb
mov
mov
jecxz
sti
stos
leave
jmp
idivb
std
jae
xor
mov
adc
add
sbb
xchg
xchg
ljmp
out
aaa
sbb
sub
xor
xchg
mov
lock
movsb
dec
add
lcall
and
sub
or
mov
pop
ficomps
sbb
fs
xor
repnz
push
inc
fisubs
jge
shl
jmp
shll
pop
or
push
lcall
jp
in
in
sbb
pop
dec
pop
add
lods
cmp
jae
or
add
pop
adc
out
in
dec
in
jb
add
shl
stc
roll
stos
test
pop
test
imul
cli
cld
das
cwtl
insb
push
sbb
xchg
xor
inc
pop
pop
int3
insb
je
int3
pop
add
aad
push
nop
sarl
ret
mov
add
dec
aam
add
jo
hlt
repz
xchg
jl
mov
pop
fsubs
clc
call
add
add
dec
es
and
cmp
iret
inc
xchg
shll
mov
or
sahf
mov
insb
in
nop
imul
mov
leave
jne
add
jecxz
jg
js
dec
std
orb
sbb
loopew
dec
fstl
repz
inc
and
add
sbb
mov
pop
negb
insb
es
lret
pop
cmp
add
add
es
shl
push
push
mov
ret
jb
pop
xchg
sub
hlt
int
cmp
xorl
jbe
dec
repz
mov
mov
daa
movsb
and
jp
int3
lret
mov
pop
lcall
fwait
push
push
lret
cld
xchg
hlt
jns
inc
repz
sbb
adc
in
cmpl
cmp
adc
addr16
stc
wrmsr
pop
or
leave
sub
int
das
repnz
lahf
xchg
pop
stos
push
rcrb
cltd
inc
mov
cmpsb
inc
pop
mov
mov
push
js
cmpb
cmp
jl
and
jne
ljmp
lcall
xor
add
mov
es
popf
fisttps
adc
cmp
push
pop
test
stos
into
or
add
daa
mov
lods
xchg
inc
icebp
lods
mov
push
xor
push
pop
mov
adc
jno
pop
push
out
mov
jbe
iret
sub
push
mov
pop
rol
dec
int3
out
fildll
sbb
stc
loope
mov
add
dec
cs
nop
aam
call
idivb
repnz
pop
push
addr16
aas
push
push
jne
pop
xchg
imull
int
std
sbb
add
jns
out
and
push
andl
mov
sbb
fwait
adc
sbb
mov
sbb
or
divl
push
std
inc
adc
add
and
add
insl
cmp
or
adc
test
je
sbb
pushl
or
leave
scas
adc
cmpsl
fs
cmp
sbb
mov
jmp
movsb
sti
je
adc
stc
or
cli
add
jge
add
pop
push
sbb
push
in
jno
ljmp
shl
push
loopne
aam
inc
int
iret
jne
xchg
movsb
test
push
push
dec
xchg
jae
mov
popa
sti
into
lahf
out
imull
mov
and
sbb
clc
rcl
pop
loopne
add
out
aaa
pop
adcl
fsubl
sti
or
xor
cmp
fildl
sbb
add
dec
fsubrl
arpl
out
cmp
push
das
in
add
push
mov
stc
out
jmp
and
mov
xor
shlb
arpl
add
push
cld
xchg
popf
push
dec
sub
arpl
cs
sti
or
adc
fsts
stos
or
add
fistps
and
out
incb
add
divl
inc
add
push
ret
sbb
lds
aad
inc
sbb
cmpsl
xchg
aas
xchg
jbe
mov
jg
mov
mov
push
fxch
xchg
xor
stos
dec
jle
lock
mov
js
iret
mov
adc
mov
adc
mov
push
dec
xlat
push
imul
mov
cmp
xchg
mov
add
fildl
cmpsl
xchg
lret
mov
pop
bound
aas
rclb
push
mov
and
inc
test
testl
loope
xorl
mov
push
inc
scas
insl
fnstsw
int3
aas
lret
xor
adc
push
stc
fstps
mov
or
pop
cmp
or
ss
movsl
push
xor
or
add
add
add
push
dec
aaa
repz
std
lahf
jecxz
test
add
icebp
sub
mov
mov
sub
cmp
std
mov
xor
jnp
dec
sub
cmc
jge
dec
loopne
jle
jmp
mov
push
mov
mov
mov
pop
stc
mov
test
les
mov
or
jbe
int3
js
sbb
es
adc
test
mov
jnp
lret
in
fwait
sbb
inc
xchg
fdivrp
in
or
icebp
inc
fwait
dec
mov
cmpsl
sub
loopne
and
call
add
into
and
dec
lahf
pusha
inc
scas
mov
out
xchg
push
insb
and
in
cmp
jmp
dec
sbb
je
div
jo
mov
and
jae
inc
jmp
mov
int3
mov
jo
jecxz
xor
insb
repz
sub
mov
mov
ss
test
pop
mov
add
push
js
sub
in
cwtl
dec
or
test
leave
into
adc
mov
push
pop
dec
lock
push
or
int
push
mov
inc
and
aas
icebp
outsl
rcl
inc
addb
inc
fcoms
mov
ljmp
sbb
mov
cwtl
push
lock
pop
sahf
lock
sbb
sub
mov
sbb
sarl
add
adc
bound
push
cwtl
lds
gs
dec
mov
mov
mov
jg
rcr
cmp
out
out
in
bound
dec
addl
sub
push
ret
mov
pop
mov
stos
push
hlt
insl
xchg
gs
xchg
push
mov
icebp
andb
cmp
scas
lahf
out
rcrl
fsubrl
imul
sbbl
push
push
mov
sub
in
mov
and
push
cmp
xchg
xlat
dec
aas
movsl
push
mov
mov
or
mov
and
or
lret
push
mov
in
cmp
push
sbb
dec
adc
adc
iret
aaa
mov
shrl
cmp
pop
push
cmp
popf
push
dec
je
or
add
or
repnz
mov
mov
push
shr
dec
out
roll
mov
adc
dec
stos
xchg
out
mov
in
add
add
add
mov
outsb
adc
bound
rol
xlat
out
and
push
shll
pop
xor
in
testl
pushf
call
loopne
stos
mov
bound
fs
and
cmp
sar
pop
mov
jle
push
and
xchg
enter
addr16
cmp
ja
add
push
cmp
pop
hlt
add
iret
or
jmp
or
sahf
lock
cld
jb
add
add
test
outsb
lods
inc
mov
fdivrl
jno
mov
dec
push
test
push
cmp
jb
out
loope
mov
mov
sub
sbb
cmpsl
leave
rolb
bound
and
out
or
mov
sub
and
xchg
cwtl
or
adc
fistps
xchg
popf
xor
pop
mov
sbb
dec
xchg
dec
inc
mov
mov
mov
or
jle
inc
out
repz
sbb
ret
cmp
add
pop
cmp
jge
add
push
aam
cld
add
xchg
ja
dec
sti
mov
cmpsl
cli
repnz
mov
add
cwtl
arpl
lods
push
pushf
out
lret
dec
lret
arpl
push
leave
movsl
jle
out
cmc
ret
jmp
push
ja
adc
push
adc
adc
pop
xchg
iret
ja
aad
insb
cmp
sarl
mov
sbb
pop
insb
sbb
add
push
jno
cli
std
push
xor
cld
hlt
cmpsl
pmuludq
popf
mov
dec
in
or
fisttpll
and
xchg
adc
xchg
ret
sbb
ret
std
scas
mov
pop
cwtl
fimuls
leave
subl
pop
xchg
inc
xor
nop
xchg
xor
sbbl
mov
out
ds
lock
dec
stos
ret
push
dec
jne
aam
add
push
jecxz
stc
add
inc
mov
lea
test
and
bound
xor
stc
dec
xor
jns
insl
and
lret
add
xlat
mov
jmp
frstor
xor
scas
mov
dec
divb
lret
mov
inc
out
lods
mov
mov
repnz
or
rorb
add
add
adc
jg
jle
movsb
pop
cmp
movsl
movsb
push
fists
in
xchg
xchg
cmp
inc
pop
stc
sub
insl
fbstp
jno
mov
movsb
fsts
mov
mov
sbbb
in
sbb
dec
dec
sbb
sahf
loope
and
testb
jae
test
inc
xor
add
int
mov
out
rcrb
jno
cltd
imull
push
jle
cld
psubq
mov
aad
aaa
scas
mov
addl
inc
push
push
mov
inc
subl
xchg
fisttpll
jmp
jb
pop
aaa
jno
aaa
push
or
fidivl
push
scas
push
orb
roll
fstpl
imul
cmp
out
cmpl
fs
rcrl
mov
cs
and
stos
fildll
mov
lock
sub
rol
outsl
jecxz
sub
clc
insb
and
imul
lret
mov
push
xchg
movsl
aas
adc
pushf
xorl
scas
add
add
jo
pop
stc
xchg
ja
stos
inc
jp,pn
jmp
fwait
jbe
cs
pop
mov
repnz
mov
lds
mov
iret
test
jl
sbb
jo
std
adc
pop
dec
arpl
int3
das
pop
shll
pop
ja
mov
imul
mov
jo
dec
xorb
mov
mov
mov
cmp
mov
push
fs
push
sub
imul
shlb
fs
add
inc
and
push
imul
inc
and
fdivs
push
jbe
inc
aas
inc
sahf
jbe
les
cli
cld
stos
pushf
sub
popf
lret
shll
xchg
sbb
add
cmp
int
int3
lret
mov
inc
punpckldq
gs
inc
and
xchg
inc
pop
mov
cmc
push
mov
pushf
xor
outsl
mov
stos
test
fists
jnp
mov
adc
xor
or
pushf
cwtl
push
scas
mov
lods
mov
in
sub
xor
dec
sub
or
stos
pop
loopne
sti
lret
add
lahf
cmp
fdivrs
dec
mov
add
and
loope
cld
push
mov
loopne
sahf
or
clc
cmpsb
lret
sbb
dec
jnp
cmpsl
push
adc
push
out
outsl
xor
push
pop
and
es
test
data16
fdivs
out
fisttpl
mov
push
leave
mov
jno
rolb
cmp
jge
pop
mov
xor
sub
cmp
insb
cmp
jnp
jle
mov
ficompl
ss
aaa
shlb
roll
pop
jl
cmp
sahf
test
xor
popa
mov
loope
call
xchg
dec
mov
es
movq
mov
stc
mov
testb
cmp
push
std
adc
add
mov
sbb
push
loop
fldenv
stos
notl
sub
fsubrs
mov
std
adc
push
into
imul
out
and
sub
pop
std
pop
pop
lods
jns
cmp
push
lcall
pop
loop
sub
dec
imul
add
mov
mov
dec
lods
sti
jns
or
add
nop
add
out
dec
jle
dec
aaa
sbb
sub
dec
inc
nop
aas
sub
xchg
xchg
pop
fst
jg
pop
js
insl
in
hlt
lds
nop
data16
movsl
ds
sbb
inc
cmp
mov
inc
test
shlb
mov
xor
ficompl
aas
jne
mov
add
jle
xor
out
push
mov
pushf
sbb
stos
addr16
ja
pop
pushl
aaa
dec
pop
movsb
push
rcrl
push
cltd
fwait
cwtl
cmp
mov
test
outsb
shll
cmp
pop
xor
cmp
adc
xlat
js
das
mov
lds
cld
cmc
test
push
loopne
jle
outsl
lahf
sbb
cld
into
and
push
mov
push
aad
add
orl
cmpsb
sbb
push
enter
sbb
lahf
insl
cmp
int
mov
inc
loope
movsl
popl
loopne
cwtl
sarl
frstpm(287
mov
js
fmulp
or
jp
in
jo
into
cmp
cmp
loopne
push
ret
jns
fidivrs
out
sbb
jno
ja
in
xchg
and
push
add
mov
movb
sti
mov
push
jle
adc
test
push
ss
popa
mov
pushf
mov
mov
addl
mov
push
stos
xchg
pop
mov
xor
aam
inc
lcall
mov
out
dec
mov
int
jo
test
std
icebp
inc
imul
add
add
daa
jne
and
adc
pop
mov
mov
and
imul
int3
aas
clc
lahf
push
lahf
test
lds
mov
mov
push
sub
lock
jge
ficoml
jmp
add
sbb
adc
aas
aam
add
adc
xor
or
mov
add
loopne
fdivrp
mov
arpl
ja
test
into
movups
std
mov
inc
push
xchg
jbe
adc
outsl
pop
std
mov
addb
mov
stos
add
inc
cmp
shlb
repnz
out
aad
lahf
daa
mov
or
jns,pn
pop
dec
imul
add
inc
cmp
pop
pop
xchg
pop
stc
cwtl
xor
lock
test
popf
test
fdivp
push
mov
into
mov
dec
out
aaa
add
mov
mov
pop
nop
sbb
not
leave
es
mov
push
test
dec
cmp
or
lcall
pop
fwait
add
add
fwait
add
pop
fwait
add
pop
fwait
add
pop
fwait
add
pop
fwait
add
pop
lcall
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
repnz
add
add
push
or
in
and
filds
sbb
jmp
add
add
add
add
add
add
add
add
add
add
jmp
add
jmp
add
ljmp
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
outsb
ljmp
jle
jle
ljmp
ljmp
ds
incl
ds
ljmp
ljmp
cmp
cmp
ljmp
cli
add
or
lret
add
add
or
sub
pop
add
incb
add
add
pop
add
std
pop
add
add
pop
add
std
pop
add
pop
add
popf
add
pop
sbb
add
add
fldl
or
pop
add
pop
mov
add
pop
mov
add
pop
lea
or
or
add
pop
in
add
pop
lea
or
or
add
pop
in
add
pop
movsl
add
pop
and
add
pop
aad
or
lds
or
inc
add
pop
xor
add
pop
xchg
add
pop
adc
add
add
add
pop
xchg
add
pop
adc
and
add
add
add
lar
add
add
add
add
lar
add
add
pop
add
add
add
lar
add
add
add
add
lar
add
add
add
add
lar
add
pop
add
add
add
add
add
lar
add
add
add
add
lar
add
add
notl
ljmp
cli
jmp
adc
lcall
adc
jmp
cli
jmp
adc
jmp
adc
incl
cli
inc
adc
incl
cli
push
adc
pushl
cli
call
sbb
push
add
pushl
cli
call
sbb
fists
lcall
cli
ljmp
sbb
mov
sbb
decl
cli
dec
adc
out
adc
ljmp
cli
push
std
pop
add
or
cmpsl
add
add
add
add
std
pop
add
add
add
add
add
incb
add
add
add
fildl
or
dec
add
add
add
add
or
lret
add
add
add
add
add
add
add
add
add
add
add
add
or
ret
add
add
or
roll
or
and
or
inc
incb
add
incb
add
mov
or
push
add
pop
fiadds
or
data16
pop
mov
or
push
add
add
fiadds
or
data16
pop
mov
or
mov
pop
sub
pop
sub
or
call
add
pop
enter
call
add
pop
or
pop
or
or
dec
add
pop
call
add
pop
mov
add
pop
adc
pop
adc
or
pusha
add
pop
add
add
push
add
add
add
add
push
add
add
add
push
add
add
add
add
add
add
add
push
add
push
add
add
add
add
push
add
push
add
add
add
add
push
add
add
add
add
add
add
push
add
add
add
add
add
push
add
push
add
scas
adc
jmp
sbb
jmp
sbb
incl
sbb
incl
sbb
incl
stc
decl
adc
std
adc
push
adc
stc
call
stc
lcall
adc
cmp
adc
lcall
add
stc
call
sbb
pushl
stc
mov
adc
stc
call
adc
fstl
decb
add
or
mov
decl
add
decl
add
decb
add
decb
add
decb
add
decb
add
decl
add
imul
or
leave
decl
add
decb
add
decl
add
decb
add
add
add
decb
add
decl
add
decl
add
or
imul
or
sub
add
imul
pop
stos
add
pop
dec
add
pop
mov
pop
pop
pop
add
pop
fwait
add
pop
sbb
pop
fildl
pop
pop
arpl
pop
pop
and
add
adc
pop
roll
pop
pop
push
add
pop
adc
pop
arpl
pop
pop
and
pop
outsl
add
pop
daa
add
pop
dec
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
push
add
pop
insb
add
pop
in
add
pop
lods
add
pop
sub
or
or
or
mov
pop
add
add
add
add
add
add
add
add
adc
loope
sbb
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
adc
add
adc
add
adc
in
add
push
out
pop
pop
icebp
sbb
or
or
or
or
or
and
or
sbb
repz
jecxz
or
jecxz
or
repnz
or
adc
or
or
or
and
or
sbb
or
adc
or
or
or
and
or
sbb
or
adc
or
add
push
or
and
or
sbb
or
fsubl
or
or
or
repz
lock
push
lock
push
rclb
push
push
loopne
push
push
lock
push
lock
push
lock
push
rclb
push
mov
push
push
mov
push
push
rclb
push
push
mov
adc
push
mov
push
push
add
push
push
adcl
adc
sqrtps
punpcklwd
adc
adc
adc
cmovno
rdtsc
adc
movhps
mov
adc
sbb
movups
invd
push
adc
sbb
adc
jns
adc
pop
adc
jbe
adc
or
push
add
sub
add
add
pop
add
pop
jae
sbb
jae
sbb
bound
popa
sbb
push
sbb
cs
sbb
add
sbb
jno
sbb
popa
sbb
std
pusha
sbb
std
push
sbb
sub
add
sbb
add
sbb
repnz
repnz
loop
cld
sbb
sbb
sbb
sbb
rcrb
sub
add
add
and
std
pop
sbb
cmc
pop
adc
in
pop
or
in
add
fstpl
sti
sbb
int
sub
add
pop
sbb
cmc
pop
adc
in
pop
or
in
add
fstpl
sti
sbb
int
sub
add
and
cld
and
pop
hlt
and
pop
in
and
pop
in
add
fsubl
cli
push
add
negl
sbb
add
push
sbb
add
negl
sbb
in
negl
sbb
fdiv
push
sbb
int3
aaa
sbb
add
pop
loope
or
jecxz
pop
or
adc
or
pop
or
push
ficomps
or
stc
and
adc
and
adc
add
adc
fildl
adc
fildl
adc
fisubl
fisubl
std
sub
adc
and
adc
add
push
adc
add
adc
inc
adc
adc
jae
adc
adc
inc
adc
push
push
and
pop
pop
inc
push
pop
pop
icebp
adc
pop
pop
push
push
sbb
push
push
sbb
out
sbb
out
sbb
notb
sbb
notb
sbb
out
sbb
out
sbb
pop
pop
sbb
pop
pop
sbb
cmpsl
pop
sbb
add
pop
sbb
mov
sbb
addr16
sbb
addr16
sbb
adc
sbb
adc
sbb
pop
outsl
sbb
or
pop
sbb
std
pop
sbb
sub
dec
sbb
sbb
add
sbb
sbb
or
sbb
cld
pop
sbb
cld
pop
sbb
sub
sbb
sub
sbb
and
add
push
add
insl
add
pop
insb
add
add
add
pop
pop
add
pop
imul
add
jae
add
jne
add
pop
add
pop
pop
add
pop
pop
add
pop
dec
add
pop
push
add
pop
inc
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
pop
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
pop
add
jmp
sbb
add
adc
add
sbb
add
push
add
jmp
add
add
jmp
sbb
add
hlt
add
jmp
push
js
jmp
adc
jmp
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
decl
adc
add
adc
add
add
add
add
outsb
add
add
adc
jg
adc
outsl
add
add
add
add
add
add
adc
push
adc
cmp
adc
add
add
add
add
das
add
add
add
sti
add
add
add
add
add
add
inc
add
add
add
scas
or
or
adc
sbb
push
add
imul
adc
pop
add
pop
pop
add
pop
pop
add
pop
jl
adc
insl
add
jbe
adc
pop
pop
add
pop
popa
add
pop
push
add
pop
push
add
pop
add
sbb
jne
sbb
outsb
add
pop
mov
jne
inc
ljmp
mov
jae
jb
and
cwtl
hlt
fs
out
outsb
aaa
test
jb
out
push
inc
jge
jae
hlt
call
add
add
pop
push
add
add
add
adcl
jmp
jle
cmp
sbb
insb
add
add
xor
or
sub
cmp
iret
rolb
add
xor
aam
loopne
jmp
test
add
jecxz
ljmp
jo
mov
push
or
or
std
loopne
pop
add
pop
add
add
add
out
call
adc
add
add
or
mov
rclb
roll
rcrb
adc
add
jns
or
addr16
and
dec
mov
adc
add
push
iret
push
jmp
push
sar
sub
sar
js
push
addr16
pop
mov
jmp
int3
ret
mov
call
add
lcall
ret
scas
ret
mov
ficomps
inc
add
inc
add
mov
add
add
push
jmp
inc
add
push
lods
inc
add
add
mov
aas
add
mov
aas
add
lods
inc
add
inc
add
lods
inc
add
lods
inc
add
stos
inc
add
mov
aas
add
add
insl
add
imul
pushl
add
arpl
mov
pushl
and
add
fsubrl
mov
jae
test
inc
mov
fldl
add
pop
cmp
jae
ret
dec
xor
outsb
add
ret
in
and
insl
repz
pushl
dec
inc
pop
cmp
cmp
cmp
sub
sbb
sbb
stc
ds
pop
dec
add
pop
add
adc
add
add
add
push
add
pop
mov
pop
push
stos
fisubrs
pushf
rcll
add
add
add
in
out
add
add
out
add
in
add
inc
fstps
and
call
or
jle
push
adc
pop
inc
push
dec
int
push
pop
inc
adc
pop
and
push
data16
mov
add
xchg
outsl
addr16
adc
cmp
mov
repz
adc
sbb
sbb
xchg
outsb
repz
add
jo
sahf
pop
int3
mov
cmp
adc
add
sahf
adc
push
mov
push
adc
add
sahf
adc
repz
add
aad
incl
sar
mov
call
add
add
adc
in
or
icebp
imul
in
pop
add
stc
add
cmc
das
sbb
loope
or
frstor
adc
leave
repz
daa
adc
sbb
or
loop
xor
push
sbb
ds
scas
popaw
arpl
pop
xchg
imul
jno
stos
push
ja
pop
jns
mov
mov
arpl
dec
imul
jae
jae
jbe
ja
pop
jns
inc
pop
jge
out
addb
out
mov
ficoms
xchg
xchg
mov
lcall
mov
cmpsb
cmpsl
xchg
scas
scas
pop
mov
mov
subb
mov
aam
inc
shlb
cmp
int3
sbb
into
enter
in
push
loopne
dec
fcmovu
or
clc
out
push
pop
ljmp
jb
test
addb
jl
outsb
js
add
adc
push
push
adc
or
adc
and
push
push
and
sbb
and
hlt
inc
es
add
add
add
sbb
sbb
xor
adc
sub
sub
out
in
fisubrl
mov
push
cwtl
repnz
icebp
xchg
testb
ljmp
mov
push
shll
mov
cmp
out
xor
loop
and
fsubrp
cmp
cli
in
push
mov
lea
orl
xchg
popa
lea
lea
dec
jp
mov
xchg
sbbb
cltd
lret
xchg
into
mov
xorl
inc
ret
and
and
lret
sub
push
shll
push
dec
fistpl
cmp
add
inc
pop
jmp
add
pop
out
jo
aad
je
shl
sti
mov
inc
add
call
adc
add
adc
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
out
out
incb
out
out
incl
mov
ljmp
mov
mov
jle
jle
ljmp
ljmp
jle
jle
ljmp
js
incb
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
adc
insb
call
pop
add
add
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
sbb
loopne
insl
fmuls
insl
call
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
insb
jmp
dec
insb
call
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
fwait
insb
add
call
add
ljmp
add
add
add
add
add
add
sub
add
add
add
add
add
sub
pop
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
xchg
sub
xchg
add
pop
sub
in
pop
and
in
add
add
add
addb
sbb
rcll
or
sti
add
sti
sub
sti
and
sti
sub
adc
imul
or
rcll
or
sti
add
sti
sub
sti
and
sti
sub
adc
imul
add
jmp
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
outsb
add
add
add
jle
add
outsb
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
jge
add
add
add
add
add
inc
add
add
add
inc
add
rolb
and
add
scas
add
add
lea
pop
push
add
pop
roll
pop
adc
add
pop
push
add
pop
stc
xchg
inc
pop
imul
add
pop
xchg
inc
pop
bound
add
popa
add
pop
jmp
add
add
pop
add
pop
addb
pop
add
pop
adc
pop
cmc
jns
pop
addb
lea
add
pop
jg
push
pop
inc
jns
pop
imul
inc
pop
mov
ja
pop
add
add
add
jbe
add
add
add
add
xchg
jbe
add
add
test
add
xlat
add
add
add
add
add
add
add
xlat
add
jbe
add
sbb
jns
push
add
jbe
add
jbe
add
add
mov
add
add
add
add
add
add
jbe
add
arpl
jmp
sbb
push
cmpps
sbb
jmp
inc
jmp
adc
mov
sar
sbb
add
adc
pushl
adc
add
sar
adc
add
mov
and
sbb
adc
lcall
ret
adc
add
jg
incl
pusha
ret
adc
jmp
pusha
ret
adc
lcall
dec
ret
sbb
add
cmp
inc
add
push
jmp
adc
cli
call
adc
mov
aas
add
std
push
add
add
add
decb
add
add
out
add
out
add
add
add
aas
add
incl
add
call
add
add
push
add
call
push
out
add
call
or
fsubrp
aas
add
sub
adc
inc
jp
pop
pop
add
pop
pop
jp
pop
add
adc
gs
pop
fiaddl
or
cmp
pop
ret
add
pop
test
add
pop
mov
inc
pop
enter
icebp
jns
pop
sbb
pop
mov
inc
pop
add
add
mov
add
loope
inc
pop
sub
push
or
pop
loopne
push
pop
loope
inc
pop
pop
add
pop
add
add
pop
sbb
jbe
xor
lds
pop
add
adc
gs
add
add
add
add
add
add
add
add
add
jl
add
adc
sarl
add
xlat
add
adc
leave
jl
add
add
add
add
add
add
add
xlat
add
jl
add
jl
add
add
jns
push
add
and
sarl
in
sbb
sarl
add
add
push
ret
adc
pushl
adc
add
xor
jmp
add
add
and
jmp
adc
fcoml
ret
adc
add
ret
adc
jmp
xor
cltd
ret
adc
pushl
ret
adc
jl
ret
adc
add
ret
adc
push
mov
call
adc
add
adc
add
adc
add
popf
sar
addb
add
testb
add
mov
call
mov
sub
mov
scas
add
add
mov
push
push
or
xor
adc
mov
inc
add
push
add
mov
xchg
add
add
mov
pop
push
or
mov
pop
add
add
mov
out
or
inc
mov
icebp
add
inc
add
pop
add
add
mov
add
add
mov
pop
mov
mov
je
add
imul
inc
pop
and
or
icebp
xchg
outsl
add
or
push
pop
sub
pop
pop
adc
movhps
inc
pop
add
mov
es
pop
loope
inc
pop
mov
or
pop
mov
add
pop
std
xchg
cmp
or
stc
xchg
sub
pop
or
or
cmc
xchg
add
add
add
add
add
mov
loope
or
add
xchg
sbb
add
xchg
pop
add
add
test
push
add
add
add
add
add
xlat
add
add
add
add
add
add
add
xlat
add
daa
add
xlat
add
and
sbb
and
or
push
add
int3
adc
add
adc
call
xchg
ret
adc
push
xchg
ret
adc
cmp
ret
adc
incl
push
add
cmp
call
ret
adc
lcall
incl
sti
ljmp
ret
sbb
add
sbb
add
adc
jmp
xchg
ret
sbb
add
xchg
ret
sbb
decl
xchg
ret
push
add
xchg
xchg
mov
xchg
mov
or
add
xchg
add
dec
add
inc
add
and
mov
inc
add
xchg
sahf
add
into
test
or
test
lods
add
mov
push
push
add
xchg
imul
inc
add
add
inc
add
cmp
add
add
push
cmp
add
add
add
pop
popf
add
pop
xchg
fidivrs
pop
push
add
pop
jecxz
aas
pop
xchg
add
pop
aad
pop
pop
dec
fidivrs
pop
xchg
add
cltd
fidivrs
pop
dec
add
pop
movsl
fidivrs
pop
add
pop
push
fidivrs
pop
aam
or
dec
fidivrs
pop
push
add
pop
dec
fidivrs
pop
and
or
cmp
aas
pop
test
sub
or
aas
pop
mov
pop
xchg
fidivrs
pop
stos
add
add
test
add
pop
aad
aas
pop
roll
pop
sbb
add
add
lock
add
add
loopne
inc
add
add
add
add
add
add
add
add
frstor
add
add
add
fstl
add
add
add
fldl
add
add
add
add
add
filds
loopne
add
add
add
add
add
add
add
add
into
jo
and
pop
add
add
add
add
add
push
pop
add
adc
add
imul
cwtl
dec
gs
sbb
jbe
pop
pop
jbe
imul
xor
mov
fbstp
dec
pusha
jge
scas
pop
les
inc
decl
mov
iret
pop
and
lods
jbe
out
dec
jl
mov
pushf
xchg
fistpl
and
shll
and
inc
adc
ret
jne
arpl
jl
dec
lds
push
test
add
shll
leave
and
xchg
pop
cmp
cwtl
incl
pop
jge
pushl
fildll
mov
jno
lahf
and
test
push
xchg
lds
out
pop
out
lds
pop
arpl
jmp
and
das
popf
dec
cltd
xorb
pop
xchg
dec
mov
mov
jg
icebp
ret
repnz
push
mov
aam
movsb
add
movhps
push
push
xor
fisubl
add
xor
add
pop
aas
faddl
test
stos
push
ret
aas
cli
or
std
xor
out
cwtl
sbb
mov
imul
add
jmp
add
pop
jp
add
leave
or
pop
incb
add
fildl
add
leave
or
pop
push
add
pop
faddl
add
jmp
add
pop
mov
add
jmp
add
pop
push
add
pop
jmp
add
add
add
pop
add
or
add
add
add
add
mov
add
int
push
add
add
mov
push
add
add
jl
cmp
adc
fwait
add
add
add
add
add
add
add
jb
add
add
sub
add
and
dec
add
add
add
add
add
sbb
daa
adc
add
adc
cld
add
adc
ret
add
adc
mov
add
adc
scas
add
adc
std
add
adc
sti
add
stc
add
adc
repz
adc
lret
adc
mov
add
adc
loope
add
add
add
and
add
das
add
add
jg
daa
add
add
add
pushl
jae
or
addb
add
arpl
and
data16
imul
add
decl
add
add
add
sbb
add
pop
add
push
add
add
add
and
pop
add
pop
mov
add
push
adc
add
push
adc
and
daa
add
sahf
add
je
dec
add
stos
add
push
pushf
add
push
popl
push
push
movsb
add
push
jp
inc
push
jns
dec
push
cwtl
add
push
inc
add
mov
push
push
mov
add
jl
das
push
jge
pop
push
aam
sub
mov
add
mov
add
mov
add
mov
cmp
out
dec
lcall
dec
call
adc
add
adc
adc
xchg
inc
pushl
adc
mov
adc
add
add
adc
add
add
adc
jne
pop
add
pop
add
pop
add
push
add
adc
add
adc
add
adc
add
mov
xchg
mov
jle
adcb
sub
xchg
xor
pop
inc
xor
pop
xor
pop
cmp
sub
pop
dec
xor
pop
inc
xor
pop
inc
xor
pop
inc
xor
pop
inc
xor
pusha
xor
movsl
pop
sub
xor
inc
xor
cltd
cmp
xor
sub
mov
sbb
mov
push
add
add
push
xchg
add
xchg
clc
pop
xor
call
pop
xor
rclb
lock
lcall
push
or
and
push
push
push
out
dec
and
in
dec
and
cmp
push
and
cmp
push
sub
push
cmp
push
cmpsb
sti
daa
push
cmpsl
sti
sub
mov
sub
jne
sub
cmp
push
add
sub
jo
sub
push
outsb
sti
das
push
pop
sti
xor
pop
sti
xor
int
xor
stos
cli
xor
stos
cli
xor
cwtl
cli
xor
push
push
sti
aaa
push
push
sti
cmp
pop
adc
or
mov
or
mov
or
or
or
inc
adc
or
add
dec
adc
or
cmc
or
adc
dec
sbb
dec
adc
or
inc
or
dec
or
sub
push
adc
or
jp
push
sbb
push
adc
push
adc
or
rorb
sbb
or
ret
or
add
or
push
test
cmpsb
push
jg
imul
jns
and
js
add
push
pop
or
push
push
or
push
pop
or
push
push
or
push
or
push
inc
or
push
xor
push
push
xor
sbb
push
popf
or
push
xchg
or
push
xchg
adc
test
or
add
stos
or
add
lods
or
cmpsl
or
scas
or
or
add
add
or
sub
sbb
or
add
or
mov
add
or
les
cmp
ret
add
sbb
adc
and
mov
add
push
mov
add
movl
leave
push
and
push
repnz
push
icebp
add
add
sub
push
testl
add
sti
and
xchg
sti
pop
add
sti
sbb
sti
sbb
sti
sbb
sti
sbb
imul
push
add
cli
cs
cli
pop
add
cli
and
sti
and
sti
and
sti
adc
add
sti
sub
cli
sub
cli
push
add
add
add
cmp
add
add
add
add
add
add
mov
popf
add
mov
roll
add
mov
push
mov
push
stos
adc
push
adc
push
test
pop
adc
adc
pop
lods
adc
pop
scas
adc
pop
scas
adc
push
lret
push
nop
adc
push
int3
adc
push
int
loop
lret
adc
push
mov
adc
push
into
adc
pop
xchg
adc
pop
xchg
adc
pop
xchg
adc
pop
xchg
adc
pop
xchg
adc
push
xchg
adc
push
xchg
adc
push
cwtl
adc
push
cltd
adc
push
lcall
push
pushf
adc
push
popf
adc
mov
jns
scas
push
mov
mov
push
mov
lcall
lcall
push
mov
incl
jg
das
push
add
inc
push
xchg
dec
push
test
dec
push
decl
incl
push
push
push
popa
incl
push
iret
incl
mov
incl
stos
sti
add
cltd
dec
add
push
call
add
push
mov
mov
sbb
lahf
adc
sbb
xchg
adc
add
add
cmp
dec
sti
xchg
and
mulb
jmp
and
jecxz
and
add
add
sahf
and
stos
and
insl
and
and
push
inc
mov
and
fisubs
cmp
stos
and
imul
arpl
and
dec
in
and
cmp
and
add
inc
inc
and
shll
addb
popa
inc
pusha
and
dec
sbb
les
and
dec
andb
dec
sub
xchg
dec
sub
orb
xchg
dec
daa
and
add
push
dec
and
nop
and
xchg
and
dec
xchg
and
dec
and
dec
lds
sbb
or
dec
or
or
add
dec
and
dec
or
dec
pop
and
bound
and
cli
mov
cmp
das
std
mov
hlt
mov
sti
mov
mov
xor
std
sbb
data16
and
jno
xor
enter
cmp
xor
std
add
jl
add
jle
add
jne
push
testl
decb
add
cmp
adc
scas
std
and
mov
std
and
stos
std
push
ss
push
ss
push
paddd
add
out
and
std
adc
cmp
and
jmp
std
repnz
out
and
std
insl
and
std
arpl
cmpsl
std
pop
and
std
add
xlat
sbb
aaa
std
fstpl
cmp
sub
cmp
pop
and
std
or
sbb
or
sbb
std
out
ds
inc
and
sub
xor
lods
sbb
and
stos
sbb
add
bound
and
lret
dec
xchg
and
lds
xchg
sub
and
and
add
add
xchg
and
xchg
or
and
jge
jecxz
xchg
icebp
fsubl
jns
out
js
out
pop
shll
and
repz
shr
push
mov
aad
ss
push
xor
in
and
mov
and
jns
pop
add
dec
sbb
add
inc
cmp
and
cmpsl
inc
and
scas
add
and
sub
addb
jo
pop
add
and
xchg
and
inc
mov
and
rolb
mov
andb
inc
andl
push
mov
and
iret
add
dec
dec
roll
push
dec
roll
push
dec
aad
and
add
add
dec
xlat
add
adc
neg
sbb
neg
adc
neg
sbb
neg
adc
fstpl
sub
ficoms
sub
fistps
sub
loopne
sub
loope
mov
loop
clc
jecxz
xchg
in
clc
in
fs
out
mov
clc
call
sbb
clc
add
mov
clc
add
jbe
add
jge
add
add
je
push
or
stc
or
jno
or
cmp
or
clc
or
add
hlt
dec
stc
adc
inc
stc
or
pop
stc
and
aaa
stc
pop
hlt
cmp
push
hlt
cmp
add
hlt
fwait
clc
and
xchg
clc
sub
popf
clc
and
nop
clc
or
jg
pmuludq
clc
std
rep
clc
sub
arpl
sub
pop
clc
and
push
clc
add
hlt
test
adc
cmpsl
clc
aaa
hlt
stos
clc
ss
test
clc
hlt
repz
repz
cli
repz
clc
clc
repz
clc
push
xor
out
repz
lahf
sbb
sbb
push
push
das
jg
push
es
push
cmp
push
sbb
push
sbb
push
sbb
push
adc
inc
push
push
mov
or
push
mov
sub
push
mov
sub
push
xchg
and
push
mov
add
mov
ret
add
or
loopne
or
loopne
or
push
sarb
inc
sarb
add
dec
push
push
dec
dec
push
fimuls
push
dec
dec
push
push
sub
push
push
sbb
dec
push
push
or
push
add
push
push
imul
push
inc
dec
pop
push
lahf
dec
xor
mov
lea
lcall
xor
dec
xor
aaa
cmp
fs
cmp
push
aaa
cmp
xor
cmp
inc
aaa
cmp
push
aaa
cmp
xor
aaa
aas
xor
aaa
inc
xor
pushf
cmc
inc
out
cmc
inc
out
hlt
inc
add
mov
hlt
inc
inc
mov
inc
inc
mov
hlt
dec
inc
aam
dec
es
hlt
dec
es
hlt
dec
es
dec
es
hlt
dec
push
jmp
dec
push
push
push
push
insl
adc
insb
adc
data16
adc
push
adc
arpl
pop
inc
jb
pop
inc
jne
pop
inc
adc
lahf
adc
adc
jno
pop
add
push
adc
add
adc
repz
xor
repz
jg
sbb
outsb
adc
adc
push
adc
inc
adc
adc
adc
adc
adc
adc
adc
enter
lret
adc
adc
adc
int3
adc
adc
into
adc
int3
adc
adc
adc
adc
adc
xlat
adc
aad
add
es
pop
es
xor
xorl
cmp
mov
aaa
push
lea
ds
xor
sub
and
xor
and
cmp
push
push
imul
inc
or
add
roll
aaa
sub
add
add
and
xor
mov
and
cmp
xchg
and
repz
imul
inc
sti
imul
repz
add
sar
out
add
mov
pushl
sar
stos
add
add
add
add
add
add
jmp
add
add
sar
dec
add
add
add
add
call
add
lods
sar
push
add
add
sar
adc
add
repnz
push
add
add
sar
lsl
add
ret
lcall
add
inc
ret
dec
add
add
or
pop
inc
add
pop
or
pop
dec
add
pop
or
pop
inc
add
pop
dec
inc
add
pop
push
add
pop
inc
inc
add
cmp
add
push
inc
add
sub
add
stos
aas
add
or
pop
mov
add
xor
add
cmpsb
aas
add
pop
add
pop
fidivrl
add
mov
aas
add
mov
add
flds
add
mov
add
pop
fidivrs
add
pop
add
pop
fnstsw
add
push
add
pop
add
pop
add
add
pop
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
add
pop
add
add
add
add
add
pop
add
aas
pop
add
aas
pop
add
pop
add
pop
add
add
pop
add
add
add
add
dec
add
dec
sbb
add
add
or
add
pop
sub
add
sbb
add
sbb
add
sbb
add
sbb
add
add
lahf
jmp
add
jle
add
adc
add
add
rcll
pusha
cmp
add
sub
add
add
add
add
js
add
sub
add
jnp
add
test
add
pop
sbb
add
sbb
add
insl
std
decl
add
mov
push
add
stos
cld
decl
push
add
mov
push
add
test
push
add
jbe
inc
incl
std
pushl
cld
call
incl
in
call
pushl
std
pushl
std
call
std
out
add
mov
std
ljmp
mov
ja
add
movsl
add
pop
cwtl
cmp
pop
sahf
add
pop
xchg
cmp
pop
mov
cmp
pop
mov
cmp
pop
lret
add
pop
lea
add
lret
pop
mov
pop
int
add
cmp
pop
mov
add
ret
pop
jg
add
aad
add
jle
add
les
add
xchg
add
pop
add
ja
add
mov
pop
add
pop
sub
add
sub
add
sub
add
sub
add
add
pop
add
je
add
pop
add
pop
add
jbe
push
add
add
add
add
add
push
add
pop
add
ja
add
pop
add
ja
add
pop
add
push
add
pop
add
pop
add
add
add
add
pop
add
add
add
add
pop
add
add
pop
add
add
arpl
sbb
add
scas
ret
adc
add
mov
add
cmp
add
sar
adc
add
insb
sar
adc
add
adc
add
adc
add
adc
add
sar
adc
add
sar
adc
add
and
call
adc
add
adc
add
add
add
adc
add
adc
add
adc
add
adc
add
ds
jmp
push
and
sub
sub
xor
daa
xor
ljmp
add
add
arpl
push
xchg
gs
imul
pop
insl
outsl
push
jae
jae
addr16
push
jnp
add
add
push
arpl
adc
imul
into
jae
jae
addr16
jnp
add
add
jle
add
jle
add
outsb
add
add
add
jle
add
jle
add
pop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
pop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
mov
aaa
incl
in
pushl
cmp
push
cmp
push
cmp
push
cmp
push
cmp
aaa
inc
xor
out
aaa
xor
in
add
std
loopne
sbb
or
in
add
clc
xor
aaa
lock
aaa
call
xor
aaa
fdivs
aaa
shlb
or
in
add
mov
xor
aaa
test
pop
aaa
mov
xor
aaa
nop
xor
add
add
add
add
jmp
adc
add
adc
add
adc
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
jle
ljmp
ljmp
jle
jle
ljmp
ljmp
ds
incb
add
incb
add
incb
add
incb
add
add
add
add
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
mov
incl
add
incl
add
incl
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sbb
add
sbb
add
pop
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
add
add
add
add
add
add
add
add
jmp
sub
scas
adc
jle
mov
cli
outsl
sbb
sub
pop
pushf
lahf
mov
mov
addr16
xor
inc
out
jecxz
mov
scas
add
push
ret
jecxz
pop
orb
mov
mov
in
sbb
mov
fdiv
xor
dec
mov
sbb
sbb
subl
mov
or
test
notb
lods
jecxz
sbb
push
mov
nop
push
out
mov
out
roll
imul
jne
push
fdivs
add
out
shl
testb
stos
push
mov
jbe,pn
in
sub
imul
fwait
xor
iret
lock
add
std
insb
mov
jp
into
push
lods
inc
mov
out
xchg
mov
sub
adc
clc
jb
leave
lods
xchg
add
addb
sub
adc
add
add
jge
nop
ja
and
push
and
push
mov
add
xor
fcmovnu
lds
ficoms
jg
adc
cltd
mov
adc
pop
lods
pop
stc
lret
ficomps
ds
add
mov
cmp
lret
int
cmpsb
xor
xchg
nop
mov
test
popa
shrl
outsb
dec
in
sahf
clc
inc
push
sarb
add
subl
pop
pop
and
aam
popa
out
fstps
arpl
adcb
pop
fbld
sub
pushf
out
sub
sbb
pop
insl
hlt
sub
ret
mov
sbbl
mov
mov
das
and
pop
mov
add
subl
nop
mov
add
add
cmp
fadd
dec
and
sub
in
aas
ljmp
pop
in
or
add
in
xor
call
xor
gs
hlt
in
jo
xchg
xchg
cmpsb
push
in
jl
mov
insb
call
sub
pop
call
push
mov
aad
jmp
jb
out
xchg
inc
es
int3
out
add
test
fsubr
mov
fsubr
mov
lods
call
insb
in
pushf
jmp
hlt
lods
in
lods
mov
fs
cs
inc
test
pop
pop
pop
or
test
out
cmp
out
cmp
pusha
cmp
test
push
ret
aaa
cltd
dec
insb
addr16
lahf
ror
insb
mov
add
and
add
les
lods
imul
pusha
add
push
into
inc
adc
adc
mov
hlt
aaa
mov
cmp
aaa
popf
sub
cmp
arpl
push
orb
add
aad
inc
cmpb
call
sbb
cmp
xchg
xor
cmp
dec
sbb
scas
cmp
dec
insb
int
imul
inc
shlb
aad
mov
sub
jle
add
out
fdivrp
mov
cmp
add
cltd
test
int3
punpcklbw
mov
stos
sub
xor
rdtsc
dec
ss
xor
das
daa
xor
das
das
xor
loope
xchg
inc
orl
jecxz
dec
add
clc
movsl
loopne
roll
mov
add
push
das
repnz
das
js
and
lock
add
lock
add
lock
aad
cmpsb
cmpsl
xchg
mov
xlat
mov
in
add
mov
fcompl
cmpsl
idivb
sub
cmc
iret
and
sub
hlt
cmp
pop
hlt
push
or
sub
movl
call
xor
or
fldl
or
and
outsb
out
mov
call
jmp
lock
cmpb
insb
mov
inc
jnp
lret
shrb
call
nop
out
inc
imulb
lock
fyl2x
fwait
hlt
in
inc
mov
inc
dec
adc
cmp
insb
outsl
mov
jl
xchg
and
add
fcmovb
popf
out
scas
out
out
ja
scas
out
mov
sub
dec
call
dec
out
xchg
pop
or
pop
jns
test
jecxz
lret
aaa
subb
rol
mov
pushaw
mov
xorb
or
scas
add
xor
ljmp
adc
cltd
aaa
sbb
sbb
and
mov
out
in
sbb
pusha
add
clc
xor
loopne
mov
xchg
mov
xor
jle
push
lret
insb
lret
inc
in
mov
mov
cmp
cmp
notl
das
fdivp
mov
aaa
roll
sbb
pop
xchg
and
or
nop
cmp
scas
cmp
mov
cmp
xchg
aaa
xor
inc
int
fwait
out
ror
loope
lock
mov
xchg
cmp
mov
in
cmp
jne
sbb
rol
insb
clc
pop
jg
fwait
jnp
insl
int3
fnstenv
jle
repnz
call
sub
sbb
out
cmc
xchg
in
hlt
pop
in
js
arpl
mov
add
sbb
out
clc
fisttpl
add
aad
mov
push
mov
adc
and
cmp
or
sbb
sbb
por
out
mov
and
sahf
mov
cmp
sbb
je
jbe
test
jg
stc
pop
lods
fbstp
jno
into
and
lds
je
add
outsb
outsb
cmpsl
cmc
out
pusha
or
into
out
mov
ljmp
jmp
test
cld
xor
cwtl
in
sub
es
sub
xchg
and
loope
out
dec
jno
adc
in
jne
adc
fisubs
push
mov
gs
xchg
outsl
shrb
add
add
lods
cmpb
fisubs
lods
cli
adc
stos
incl
mov
outsb
jbe
mov
ret
mov
sbb
mov
fistpll
jne
in
dec
jbe
jbe
jbe
inc
push
inc
fbstp
jbe
push
jne
jbe
jbe
movsl
fwait
jne
ss
jbe
stos
sbb
jbe
add
pop
jbe
push
pop
jbe
xor
jbe
fcomip
pop
jbe
sbb
pop
jbe
inc
jno
fcomip
pop
jbe
jg
add
outsb
add
add
add
add
aas
std
cmp
add
sub
cmp
add
aas
std
add
das
std
add
das
std
add
incb
add
incb
add
incb
add
add
add
cld
add
add
add
add
and
add
add
add
add
add
add
stos
add
add
add
lods
and
add
add
and
add
insl
add
add
sbb
add
add
adc
add
adc
add
adc
add
adc
add
push
sbb
add
push
add
push
add
add
insl
add
bound
add
lds
pop
dec
sub
std
es
pop
mov
pop
jno
inc
pop
pop
inc
inc
pop
and
add
sbb
add
sbb
add
sbb
add
sbb
add
dec
jmp
inc
pop
push
stc
inc
pop
jno
inc
pop
mov
inc
pop
lahf
clc
inc
pop
add
add
add
add
add
in
add
add
add
add
pop
add
in
or
pop
add
add
add
add
add
add
roll
add
add
add
add
add
push
add
add
add
mov
push
add
shl
and
push
add
mov
add
add
add
add
add
add
add
roll
add
add
cli
mov
jae
adc
add
cwtl
push
cmpsl
push
lret
mov
stos
mov
push
cmpsb
push
lret
xchg
decl
ret
mov
pushl
ret
mov
jmp
push
ret
incl
mov
stos
push
cmpsb
scas
outsl
pop
adcl
outsb
cmp
mov
decl
jno
decl
sar
jno
fidivrl
jg
sar
adc
push
add
pop
push
inc
xor
add
mov
add
add
push
inc
push
cmpsl
inc
inc
add
inc
push
jge
dec
inc
jae
add
mov
push
dec
jo
jnp
push
inc
jg
inc
dec
cs
add
push
inc
ret
add
add
mov
xor
add
add
dec
inc
inc
and
dec
add
cld
dec
dec
dec
sub
jmp
xor
dec
in
dec
std
dec
inc
push
pop
in
lret
ljmp
stc
les
roll
add
stc
mov
out
int3
dec
fldt
add
pop
outsb
rclb
sub
add
jle
inc
rclb
pop
insl
rolb
sub
add
insb
rorb
fisubrs
add
pop
push
mov
aam
add
pop
xorb
pop
insb
rorb
outsb
push
pop
jns
push
pop
rol
inc
push
sub
add
in
dec
push
aad
jmp
lret
mov
imul
mov
enter
aas
add
out
xor
mov
call
mov
xchg
add
cli
cmpsb
hlt
stos
sbbb
xchg
add
scas
fldcw
cli
mov
int
pop
add
mov
lret
scas
xchg
cmpsb
mov
xchg
cmpsb
mov
test
cmpsb
and
mov
pop
add
roll
sbb
inc
or
add
add
lret
call
add
add
add
add
or
cmp
incl
xor
incl
add
ret
lcall
ret
cmp
cmp
ret
adc
incl
adc
add
adc
fistl
inc
adc
mov
adc
mov
adc
decl
adc
add
adc
decl
adc
ljmp
add
pop
adc
incl
add
add
sar
sbb
in
decl
insb
add
add
sub
dec
insl
outsl
sbb
and
jb
data16
scas
add
add
leave
inc
add
into
aas
add
into
aas
add
enter
enter
enter
leave
inc
add
lret
inc
add
add
add
inc
add
jnp
add
jnp
add
cli
loope
add
incl
les
inc
add
aas
add
inc
add
mov
pop
inc
pop
mov
loope
pop
sub
add
ljmp
dec
ror
dec
arpl
int
inc
fidivl
push
aas
loop
pusha
cmc
pop
test
icebp
or
jmp
aaa
xchg
je
cmp
xor
and
fdivs
clc
sub
add
sub
add
gs
sti
jge
jb
jge
jbe
jno
jp
dec
out
cmp
cmp
push
gs
xor
pop
sub
pop
lret
cmp
inc
mov
call
pusha
mov
push
mov
xor
push
movsl
xor
lods
sub
add
add
add
cmpsl
add
cli
lods
cmc
rolb
movsl
fsts
mull
xchg
ffreep
call
xchg
aad
lret
mov
movsb
xchg
aad
mov
mov
cwtl
xchg
andl
je
cmpsb
lcall
mov
push
ds
jb
sbb
add
add
xchg
push
inc
movsl
sahf
pusha
or
sbb
and
jne
inc
adc
mov
lds
dec
mov
call
adc
jmp
adc
lcall
adc
mov
adc
lcall
adc
ljmp
add
add
addl
pop
add
jno
push
insl
add
push
add
jno
std
std
push
add
dec
add
outsb
add
push
add
push
add
and
jge
add
scas
add
add
data16
insb
add
dec
add
popa
add
add
addb
ds
add
mov
xor
xor
out
mov
add
sub
add
or
pop
incb
insl
pop
incb
jo
push
add
pop
sub
add
add
sub
ljmp
pop
or
fisttpll
add
push
or
insl
icebp
add
test
add
aaa
insb
cmpsl
outsb
in
or
pop
ss
imul
test
decl
movsl
jae
inc
test
inc
mov
mov
xchg
scas
cmpsl
lea
pop
add
nop
test
test
outsl
xchg
jl
gs
mov
loopne
mov
inc
mov
popl
xchg
xor
mov
cmp
add
add
adc
aaa
xchg
cs
sub
xor
fadds
mov
add
enter
pushf
call
lahf
out
xchg
movsl
sahf
enter
pushf
mov
int3
cltd
nop
jb
jge
fs
subb
jl
pushf
lods
mov
xchg
jb
adc
add
mov
xor
mov
movsb
push
push
test
add
je
mov
inc
dec
jmp
sbb
inc
adc
add
add
add
adc
decl
mov
incl
sbb
add
add
xor
add
jae
push
jge
je
push
pop
dec
outsl
xchg
je
insl
add
imul
push
test
test
add
popa
popa
sub
inc
dec
push
inc
pop
dec
push
dec
push
pop
add
dec
repnz
in
std
test
ror
jl
call
dec
or
outsl
sub
arpl
outsl
jno
outsl
jo
xor
lcall
jne
jo
outsb
es
or
jne
sub
add
pop
aam
fcomps
enter
push
xor
inc
lret
and
cmp
aam
out
daa
lret
xlat
adc
in
pop
cld
sub
pop
das
out
sbb
pop
clc
or
push
fcomps
push
and
add
and
fcoms
mov
or
push
or
aaa
add
jb
push
outsl
adc
idivb
cmpsb
imul
add
add
ret
pop
xchg
xchg
dec
inc
add
inc
push
push
das
cmp
stc
or
out
clc
and
fdivrp
and
sti
in
fdivrp
frstor
sti
out
aam
lahf
jmp
add
call
cli
rorl
in
loopne
sbb
call
popa
mov
arpl
dec
scas
dec
jmp
pop
adcb
or
add
add
and
and
scas
and
add
movsl
sbb
or
push
add
add
enter
add
iret
inc
fistpll
scas
dec
fisttpll
cmp
adc
add
pop
mov
aad
mov
lods
jg
pop
ret
push
test
rcrb
xchg
jp
pop
lds
rorl
js
pushf
js
add
enter
add
movsl
in
adc
adc
add
movsb
stos
pop
in
in
adc
jecxz
test
push
stos
add
inc
xchg
xchg
sub
adc
and
lods
mov
add
dec
adc
cs
push
add
cmp
mov
decl
add
int3
lret
xchg
mov
add
add
jecxz
mov
rol
ret
int
lahf
mov
xor
mov
loop
aam
mov
in
fcomp
rcrl
mov
lahf
call
jge
lret
cli
movsl
leave
iret
cwtl
and
fwait
lahf
inc
test
jmp
int3
test
jnp
jle
sub
test
push
add
push
xchg
gs
filds
dec
stos
and
call
pop
mov
dec
mov
imul
dec
fcomps
inc
addr16
or
mov
sub
scas
pop
pop
popa
aam
inc
dec
add
pop
cmp
cmp
push
in
inc
iret
sub
jmp
cmp
pop
hlt
add
pop
int
adc
or
pop
popf
pop
mov
add
push
push
into
inc
cmpsb
arpl
pop
inc
inc
mov
pop
outsb
lea
jns
jl
jne
ja
add
add
xchg
xchg
pop
push
subb
xchg
dec
lea
test
pop
pop
add
mov
jo
sahf
shlb
lcall
push
push
xchg
dec
add
jbe
movsb
add
iret
cs
call
shl
xlat
or
sti
sar
or
int3
sub
mov
sub
loopne
in
adc
mov
mov
gs
add
arpl
xor
dec
shlb
call
das
adc
lock
fisttpl
inc
sarb
push
xchg
pop
mov
push
out
sub
add
jmp
add
add
mov
push
cltd
scas
in
sub
ror
fidivrs
cli
out
data16
int3
inc
daa
ret
mov
cmp
call
mov
add
pop
or
rcrl
divps
pop
mov
pop
sbb
push
dec
dec
sbb
ss
addr16
and
jle
add
fwait
loope
call
iret
out
ljmp
xchg
mov
add
dec
push
dec
jle
pop
jo
pop
je
cmp
dec
imul
or
push
dec
pop
incb
add
outsl
addb
pavgw
imul
in
add
jbe
jb
arpl
pop
scas
mov
test
mov
mov
xchg
sub
lcall
lret
mov
pop
mov
add
test
mov
les
mov
or
mov
cwtl
inc
rolb
negb
das
or
lods
adc
in
pop
or
or
pop
add
adc
push
or
add
sbb
and
jp
add
aad
loop
ret
xchg
fiadds
loop
inc
in
jae
in
aad
jle
pop
add
cmp
push
test
add
ds
ss
sub
call
dec
mov
pusha
push
push
jge
push
push
pop
inc
push
pop
add
decb
negb
mov
mov
popf
ret
es
es
adc
cmp
xor
sbb
and
add
sbb
sbb
pop
negl
adc
add
decb
adc
or
add
add
add
pop
call
ret
call
loop
stc
push
hlt
mov
clc
push
fistps
add
cmp
rclb
mov
sbb
or
add
fwait
js
subb
loopne
add
and
ljmp
sbb
roll
add
repnz
or
stc
cmp
sbb
pop
cmp
add
jecxz
xor
clc
and
sub
shlb
ds
add
std
call
fsub
out
scas
add
sub
sub
and
or
pop
das
dec
dec
pop
inc
push
dec
pop
outsb
add
scas
xchg
clc
pushf
nop
stos
enter
add
mov
iret
add
repnz
mov
add
fcmovne
ds
in
or
ret
into
rcr
pop
int
fstpt
ror
fildl
add
mov
rcrb
xchg
subb
adcb
hlt
or
adc
and
adc
lds
inc
add
iret
nop
call
push
out
outsl
je
ljmp
add
adc
cmc
sbb
and
add
mov
movsl
lahf
xchg
lods
xchg
sub
adc
enter
add
pop
push
movb
jmp
jo
addl
lahf
jns
add
add
pop
jmp
sub
sbb
add
pop
add
std
xlat
call
mov
mov
pushf
cmp
xor
xchg
inc
cmp
mov
xor
shlb
adc
xlat
xchg
xlat
add
std
idiv
call
cld
scas
sbb
stos
test
pop
fbld
pop
add
jns
jbe
jnp
pop
test
xchg
jmp
add
into
aaa
push
add
xor
add
dec
pop
popa
ret
jmp
shrl
add
mov
inc
xor
push
xor
insl
mov
add
rolb
cmc
insb
aad
orl
mov
shrb
sub
movsl
test
scas
jp
lcall
in
add
and
pop
fnstcw
or
add
insb
icebp
xorl
mov
fimull
fdivrl
iret
lret
ret
fwait
xchg
xchg
and
in
in
sbb
fcomip
push
mov
in
decl
popf
test
sub
in
mov
sub
lret
enter
js
add
jo
cmp
add
pop
xor
push
arpl
dec
jle
mov
mov
add
xchg
nop
insb
xchg
cltd
test
sbb
xor
adc
mov
stos
inc
in
cli
jecxz
add
jp
pop
inc
push
mov
push
inc
sbb
add
dec
mov
pop
sbb
ret
add
pop
fistpl
add
xor
xchg
jmp
mov
fs
loop
jp
ljmp
icebp
add
jl
lock
add
flds
nop
mov
mov
xchg
mov
scas
aam
mov
mov
mov
push
mov
push
mov
mov
stos
add
call
loop
lret
push
xchg
rcr
sti
shll
fucomp
add
mov
bswap
push
pop
mov
pushf
adc
or
pop
add
fwait
jae
imul
jle
jl
fs
jl
add
sub
pushf
gs
xchg
pushf
fldenv
push
mov
add
test
shrl
xchg
mov
stos
decl
cli
in
loop
add
mov
cwtl
xchg
movsb
lods
cwtl
jo
jnp
jno
adc
add
mov
sar
pushl
les
imull
add
mov
or
push
loop
xlat
pop
loop
jmp
add
add
cwtl
sahf
xchg
add
jle
aam
pushf
pushf
mov
mov
mov
incl
rcrb
push
outsl
jle
pop
addr16
fistl
outsb
add
sahf
jb
mov
adcl
insb
mov
fprem
adc
pop
ret
outsb
cwtl
add
mov
add
fidivrs
cmpsl
xor
add
ljmp
dec
lea
pop
aam
cmp
fsubrp
dec
divb
lcall
xor
lods
movsl
push
add
sub
daa
add
nop
insb
scas
sbb
lahf
jmp
add
out
add
pop
jmp
add
fcmovnbe
es
sti
ss
pop
sub
loope
xor
fmull
ror
xor
flds
aam
cs
out
add
add
add
in
or
cmp
adc
pop
adc
cld
add
add
pop
or
add
bound
jmp
add
add
lea
xchg
xchg
xchg
call
mov
mov
push
mov
sahf
mov
outsb
lock
mov
test
mov
pushf
bound
add
add
ja
jl
jle
dec
ret
add
add
hlt
add
out
test
out
mul
fcmove
ror
lds
mov
mov
sar
jbe
call
js
fists
imul
aad
nop
sarl
or
adc
add
mov
jg
pmulhw
fldl
lods
jbe
frstor
js
int
xor
jae
pop
mov
adc
add
lcall
lret
addl
bound
iret
xchg
jle
mov
adc
imul
mov
sahf
cmpsb
add
lods
test
scas
mov
mov
lret
add
iret
int3
jecxz
into
xlat
pushf
cltd
xchg
xchg
hlt
test
add
rol
xchg
lret
vpsrlq
enter
ret
test
int
mov
ds
das
sti
div
dec
add
out
mov
mov
es
cmc
loope
movsb
test
in
outsb
fstl
lcall
xchg
add
jg
into
xchg
arpl
lret
mov
insb
xchg
ficomps
mov
mov
stos
cmpsl
cmp
mov
lea
pop
inc
ficoms
push
push
mov
adc
int
push
push
fcmovu
sbb
dec
insl
mov
cmp
je
jne
jno
jo
sub
jbe
add
outsl
imul
inc
xchg
insb
and
sbb
push
add
dec
sbb
adc
sbb
pop
xor
sbb
adc
sbb
lock
fcomps
xor
and
and
js
cmp
jmp
sub
sbb
sarl
or
or
mov
dec
xchg
cmpb
into
pop
fisubrl
mov
dec
shrl
fsubp
test
iret
jmp
lock
test
sbb
stc
stc
inc
cmc
out
jmp
fucomp
call
dec
in
mov
ror
repz
std
loop
adc
add
and
push
adc
add
inc
sub
pop
sub
add
mov
lahf
outsb
jmp
pop
gs
lock
add
mov
sbb
sbb
sub
std
add
add
movsl
lock
hlt
jmp
xchg
jp
xor
cmpsb
xor
repnz
insb
fmulp
mov
pop
pusha
jg
mov
jg
xchg
cld
mov
mov
mov
mov
jmp
mov
mov
add
and
and
pop
adc
dec
sbb
adc
inc
imul
gs
push
add
jmp
fcmovu
add
push
jae
decl
rcr
add
loopne
sub
stc
jmp
add
call
push
mov
pop
aaa
xchg
mov
add
add
mov
fs
dec
push
and
pop
pop
jmp
add
nop
nop
mov
lea
xchg
xchg
cmpsl
pop
lcall
flds
add
push
xchg
sbbl
insl
mov
pop
or
dec
inc
int
inc
inc
and
dec
dec
sarb
pusha
sub
mov
imul
mov
add
add
jmp
add
add
fsubr
clc
lahf
push
and
sub
and
and
xor
add
add
pop
pop
mov
push
dec
push
inc
pop
dec
add
xor
or
cmp
ds
dec
sub
and
xor
xlat
add
dec
int
and
dec
daa
dec
out
jmp
scas
outsl
movsl
xchg
lahf
mov
add
add
jge
test
mov
nop
xorb
xlat
mov
inc
xchg
out
push
push
stos
pop
aas
pop
cmpsl
dec
inc
pop
mov
push
or
pop
inc
push
mov
pop
push
mov
hlt
and
jbe
jo
gs
sbb
sub
sti
add
push
in
push
inc
sub
dec
pop
rorl
adc
pop
push
xor
lds
and
mov
add
xor
push
jmp
mov
dec
mov
stos
jbe
mov
xor
xchg
pop
in
cltd
add
popf
xchg
outsl
mov
cld
out
add
add
lock
ljmp
in
push
mov
loope
cmp
das
in
sub
add
sub
add
decl
shll
push
or
daa
insb
jne
cmp
aas
sub
and
cmp
jg
xor
or
sub
pop
std
adc
es
and
add
add
inc
inc
pop
mov
add
pop
dec
clc
fbstp
jmp
xor
xchg
popa
xor
xchg
or
push
jbe
ja
mov
add
pop
xor
mov
pop
lahf
lret
push
into
insl
popl
add
arpl
incl
or
add
xor
test
das
add
or
push
out
and
or
filds
jb
jge
lock
add
inc
sarb
rolb
add
add
sbb
add
lahf
fldcw
mov
add
mov
int3
cmp
mov
mov
add
add
push
pop
sbb
adc
pop
xor
pop
add
add
pop
out
pop
add
add
add
pop
ficoms
adc
std
fisttpl
cmp
jns
aas
cmp
adc
push
xor
add
sbb
jmp
out
pop
pop
push
add
rcrb
or
addr16
mov
push
addr16
add
in
push
mov
in
dec
ljmp
fbld
cmc
add
ljmp
in
nop
xor
into
pushf
adc
cwtl
or
fcmovnb
scas
stos
mov
add
push
inc
add
cld
aas
add
dec
xor
sbb
add
pop
xor
cmp
add
dec
xor
int3
aas
add
stc
jne
add
outsl
push
outsl
xor
arpl
jo
add
and
in
and
decl
and
mov
and
lods
incl
pop
jbe
mov
jo
popa
inc
bound
add
jb
cwtl
imul
dec
imul
je
pop
jns
dec
imul
jno
insb
fldenv
add
or
push
insb
and
and
fimuls
imul
mov
gs
enter
movl
add
fwait
pop
arpl
and
roll
add
data16
test
and
pop
enter
mov
add
mov
add
outsb
add
dec
add
pop
cmp
add
outsl
addb
add
pop
pop
add
pop
cmp
pop
pop
add
pop
outsl
pop
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
roll
add
add
add
add
nop
add
add
addb
add
add
add
push
add
add
add
pop
add
add
add
cli
add
add
add
fiadds
add
adc
inc
add
dec
add
adc
or
addr16
adc
add
sbb
pop
adc
push
sbb
or
pop
add
sbb
int
popa
add
adc
add
adc
add
adc
add
adc
add
sbb
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
scas
jmp
dec
movsb
adc
add
add
jbe
pop
hlt
gs
outsb
inc
hlt
add
add
push
dec
add
push
cmp
add
sbb
dec
add
push
dec
add
push
cmp
add
add
push
push
add
add
and
add
add
movsb
nop
inc
add
inc
add
add
nop
inc
add
xchg
inc
add
xchg
inc
add
push
xchg
inc
add
xchg
inc
add
pushf
inc
add
inc
add
lcall
inc
push
add
pop
lods
lods
inc
pop
xor
jno
pop
mov
scas
inc
pop
into
cld
or
flds
add
leave
std
or
jecxz
add
push
pop
jle
inc
pop
mov
faddl
nop
mov
pop
shll
xchg
and
add
ret
sub
add
pop
ret
jbe
addr16
pop
das
pusha
mov
cmp
cmp
arpl
outsb
and
pop
imul
pop
loopne
inc
pop
outsl
pop
add
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
jmp
add
jbe
add
jbe
pop
add
add
adc
add
std
push
and
std
push
clc
repnz
push
clc
fldenv
fnstenv
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
fs
decb
add
adc
sbb
shlb
inc
in
add
bound
push
mov
xor
fldl
scas
pop
stos
cld
cmp
inc
jmp
pusha
jmp
in
pop
das
jmp
add
jmp
leave
rclb
ja
insb
push
decb
dec
es
push
cli
adc
pop
cli
je
aas
das
in
lock
dec
inc
add
movb
adcl
add
push
fistl
adc
aas
add
and
pushl
fcoml
clc
mov
add
cmpsb
ljmp
ja
inc
gs
sbb
add
or
jb
fcoml
adc
aas
add
cmp
dec
push
int
inc
or
dec
mov
fcoml
or
add
xor
stc
jns
add
cmp
jmp
test
xorl
adc
add
sahf
insl
out
out
mov
ja
inc
jg
decl
jmp
jbe
in
push
lock
push
jae
add
jmp
pop
add
pop
in
je
paddsw
mov
adc
out
add
int
adc
fcoms
add
int
adc
fcoms
arpl
inc
pop
je
mov
inc
jl
adc
loopne
dec
jecxz
sti
mov
pop
in
push
imul
test
ja
jmp
jmp
mov
inc
jge
sti
and
jbe
add
call
xor
inc
pop
xor
out
add
sbb
xor
add
xchg
ljmp
mov
in
xor
sbb
pop
push
and
in
adc
add
sti
imul
call
push
fiadds
dec
jmp
xchg
in
or
add
push
add
les
ret
mov
fstl
aas
push
roll
add
stos
or
add
add
add
outsl
jge
pop
sbb
inc
jb
pop
cmp
lock
movd
clc
inc
incb
adc
cmpl
cmpsl
fucomp
icebp
ret
addl
fildl
fstl
add
mov
xor
add
addb
jmp
push
inc
add
sbb
cvtpi2ps
add
mov
inc
add
xor
clc
push
ret
je
push
pushl
inc
dec
sbb
jne
sbb
jne
roll
call
push
imul
pop
sti
mov
out
ljmp
push
mov
movsl
xor
ljmp
and
add
icebp
data16
pop
flds
mov
aam
xor
push
add
mov
add
sbb
cli
addl
push
lea
push
push
lcall
and
out
iret
test
jle
pop
flds
push
xchg
mov
addr16
mov
cmovo
inc
inc
and
sub
adc
ljmp
add
mov
call
xchg
pop
and
flds
call
sbb
sahf
inc
cmp
mov
sbb
xchg
inc
xor
jbe
push
gs
add
add
add
sub
and
add
add
andl
nop
outsb
lds
pushf
mov
cmp
sub
std
inc
jne
add
jg
outsb
in
aam
out
add
lods
outsl
repz
push
cmp
wrmsr
adc
add
sti
hlt
sbb
mov
push
loopne
jecxz
xchg
fdivr
jmp
add
jae
or
jno
push
or
inc
add
inc
adc
jmp
adc
add
add
add
jmp
adc
test
sbb
add
std
jmp
lock
call
sbb
test
adc
lea
es
adc
adc
fs
jmp
xchg
add
dec
ja
adc
pop
xchg
push
add
push
and
call
sti
lcall
mov
add
push
push
punpcklwd
es
in
mov
adc
mov
dec
lea
dec
lea
dec
push
jne
jnp
cmpsb
jae
jg
add
cmpl
jo
push
push
push
addr16
add
xor
divl
cmp
pop
add
inc
push
and
lret
xlat
fcomps
jg
xor
inc
dec
test
add
fidivs
ja
cmp
add
push
fnstcw
inc
iret
in
sti
cld
js
repz
in
sti
lock
push
cmp
fadds
call
pushf
xchg
push
adc
jb
mov
ret
dec
sbb
mov
pushf
fadds
pop
jo
or
sub
add
popl
ret
lahf
pop
add
add
loop
sti
add
dec
mov
pop
insl
jae
call
negb
add
jmp
test
lsl
test
mov
inc
ja
lret
add
add
push
cmc
fildl
ljmp
shrl
mov
add
add
add
mov
add
pop
popl
rolb
pop
test
dec
aas
loope
and
loopne
xchg
out
add
dec
or
test
inc
test
mov
add
andl
add
add
gs
add
loope
add
push
fdivrp
jno
or
stc
in
mov
inc
inc
add
push
xor
push
lds
or
xchg
dec
cld
push
pop
inc
in
and
add
push
add
orl
call
push
popa
into
or
add
adc
pop
lock
outsb
inc
ret
mov
out
lds
pop
incl
nop
inc
in
lahf
call
add
push
call
add
add
cmp
inc
lea
test
sbb
inc
inc
push
mov
in
call
inc
dec
in
cmpl
inc
in
mov
test
mov
in
push
cmp
test
add
cmp
rclb
xchg
jmp
cmp
mov
push
xlat
call
popl
lea
add
popa
dec
add
push
dec
add
push
dec
xchg
jno
dec
push
mov
lea
dec
adc
lea
dec
sbb
push
mov
push
mov
push
mov
push
mov
into
push
mov
add
fcmovnb
outsl
dec
add
mov
jl
push
adc
shl
fcomp
fucomi
es
jmp
jmp
add
imul
sub
mov
add
or
pop
or
out
aaa
jne
pop
mov
les
shll
lds
loope
dec
xor
in
imul
add
push
jmp
xchg
push
add
gs
add
test
fucomp
mov
or
mulb
sub
add
sbb
ret
stc
jmp
inc
aaa
orb
inc
int
push
jmp
jmp
nop
inc
add
xchg
data16
jmp
popa
push
mov
cmpl
pushf
ja
fwait
dec
adc
adc
adc
adc
out
out
and
aas
sub
out
es
subb
pop
add
add
add
pushl
push
andl
xchg
inc
add
lahf
adc
sub
roll
loopne
xor
mov
ljmp
movsl
xor
mov
roll
faddl
and
inc
sub
jne
dec
ret
push
mov
ljmp
popa
or
mov
mov
lds
scas
cmp
mov
andl
test
adc
dec
pop
loope
je
imul
call
add
mov
mov
sbb
add
jmp
push
setne
add
add
add
adc
cmp
mov
outsb
push
or
gs
jmp
jmp
add
and
decl
jmp
push
or
stos
add
pop
test
add
mov
test
pop
jmp
fldl
dec
or
popf
dec
dec
inc
out
dec
dec
sub
fadds
xchg
jmp
add
and
dec
repz
add
add
jmp
pop
lcall
mov
cmc
rcrl
inc
loope
jecxz
rcll
pushf
ds
sub
xchg
and
push
loope
push
add
add
dec
cmc
pop
push
dec
sub
xlat
add
add
dec
mov
push
or
sbb
frstor
xchg
fdiv
push
incb
push
divb
add
add
cmc
icebp
add
jb
or
cmpsl
sbb
add
xchg
push
sub
fcomp
add
sub
pop
rolb
push
fsin
xchg
push
jmp
sub
adc
leave
stos
and
xor
xor
add
dec
xor
sub
ret
add
add
rcll
add
insb
aam
jmp
shl
add
js
sarb
jge
or
inc
push
push
addb
add
lods
mov
cmc
or
stc
xchg
add
mov
or
add
mov
sub
ds
mov
jae
movl
mov
fildl
add
xorl
add
jmp
xchg
mov
mov
out
add
jne
xchg
push
gs
je
std
call
les
fwait
mov
add
inc
push
in
out
insl
add
jmp
fildl
adc
add
pop
bound
xchg
and
or
xlat
out
jecxz
test
mov
rolb
xor
call
pushf
divb
mov
pushf
xor
pop
bound
aas
adc
jmp
pop
ret
push
xchg
insl
add
pop
ss
sar
arpl
pop
push
push
loopne
in
ffreep
pop
push
add
push
add
mov
fiaddl
jmp
fisttpl
imul
add
push
pop
into
fldl
mov
rolb
xlat
add
add
pop
gs
add
xchg
add
add
out
xchg
mov
add
mov
or
shr
dec
cmp
cld
add
jle
add
add
shr
pop
add
jg
add
add
jg
add
add
add
aad
jne
mov
jmp
loope
add
add
jb
add
pop
pop
xchg
mov
jmp
sub
lea
cs
mov
add
sbb
jmp
inc
xchg
mov
jmp
adc
test
aam
cmp
xor
cmp
das
call
pop
repz
jmp
lcall
gs
dec
adc
out
add
aam
add
cltd
out
push
shl
sar
call
cmp
jnp
movsb
pop
mov
add
push
mov
add
mov
jmp
lcall
mov
lea
mov
xor
jg
test
imul
xor
mov
add
mov
add
add
mov
pop
push
inc
or
dec
pop
nop
inc
test
add
jmp
mov
shrl
xor
pop
inc
xor
push
jmp
cmp
xlat
orl
std
jmp
fdivr
addb
add
imul
mov
mov
out
arpl
sub
fisubl
xor
pop
xor
movsb
aad
and
sbb
sbb
or
push
add
push
pop
dec
mov
inc
pop
jg
jmp
scas
pop
lsl
push
add
jmp
pop
call
add
add
or
add
pop
add
pop
xchg
add
dec
inc
mov
xor
xchg
mov
jns
mov
std
lock
add
xor
dec
xlat
test
mov
jecxz
add
xchg
lret
or
add
add
loopne
xor
sub
jb
das
mov
repz
call
push
mov
add
add
push
out
or
inc
out
lea
insb
push
int3
adc
adc
push
pop
aam
dec
mov
xor
pushl
movsb
and
adc
dec
or
xor
mov
jo
popf
mov
push
cmp
add
push
push
or
out
inc
sar
add
cmp
inc
dec
mov
jmp
add
add
mov
fnsave
and
add
shrb
mov
jns
imul
dec
cmp
into
mov
adc
call
add
call
bound
or
mov
dec
icebp
cmp
out
jno
add
xchg
sahf
jnp
cmp
aad
add
inc
cmp
jno
cmp
sbb
ret
je
pop
fcmovnu
sbb
filds
add
mov
xchg
or
add
dec
js
mov
pop
mov
cmp
in
mov
cmp
lds
pop
mov
xchg
cmp
jge
pcmpgtb
xchg
sbb
test
add
xchg
cwtl
sbb
adc
add
fstps
add
fptan
orl
sub
push
add
pop
imul
xor
pop
add
pop
jns
mov
xor
add
xchg
add
adc
sbb
sbb
push
sbbb
pop
push
ljmp
add
sbb
push
ljmp
add
inc
bound
mov
dec
hlt
ror
dec
mov
sub
fwait
pushf
out
pop
iret
mov
cmc
fadds
es
pop
xor
mov
dec
fldln2
int3
jns
insb
ret
jmp
imul
cmp
bound
jl
adc
push
loope
lea
ds
ds
jp
adc
addr16
xchg
negb
pop
cmp
add
jg
mov
int
mov
hlt
lock
push
adc
mov
xor
push
xchg
call
sbb
fistl
rclb
jo
ljmp
jnp
xor
insb
or
push
xchg
call
pop
or
push
add
mov
lods
mov
xchg
mov
add
xor
or
mov
or
add
xchg
icebp
dec
or
jle
cmp
cmc
mov
inc
xchg
sub
sub
ss
cld
mov
outsb
stc
pushl
dec
dec
lock
test
in
mov
mov
in
inc
add
push
dec
pop
mov
cmp
mov
add
pop
fildl
call
add
or
inc
mov
decb
inc
cmp
mov
mov
scas
lds
adc
inc
mov
mov
xor
clc
jecxz
sbb
lret
decl
jnp
add
mov
add
fsubrs
jl
dec
dec
in
mov
loopne
push
jns
orl
mov
jne
xor
hlt
scas
mov
lock
int3
xchg
stc
sub
add
repnz
inc
cmp
sbb
adc
jmp
adc
add
jmp
push
inc
ficompl
out
push
add
fisubrl
push
add
sub
repnz
jmp
sub
mov
mov
jg
int3
lock
pop
aaa
jg
mov
add
pop
les
xlat
fxch
sar
and
cmpsl
test
stos
push
add
cmpsl
jle
mov
leave
jmp
inc
movsb
fs
cs
rolb
pop
loope
dec
or
jp
ud0
adc
mov
adc
roll
fsts
push
call
icebp
int3
rcr
sub
lret
adc
add
or
bound
test
adc
push
add
cs
and
pop
lods
ret
mov
adc
dec
popf
xchg
pop
enter
sarb
leave
xchg
add
sbbb
add
add
cmc
jmp
cmpsb
stos
outsb
jle
mov
push
lods
testb
stc
add
sub
pop
add
jg
add
add
add
popa
add
inc
mov
mov
add
mov
jbe
out
lods
sbb
test
dec
lds
ljmp
stos
jo
jmp
mov
call
lcall
mov
inc
scas
mov
mov
xchg
jge
lret
dec
jg
out
pop
push
ret
push
mov
xchg
mov
mov
mov
divb
mov
ljmp
sbb
call
and
or
lahf
lods
ret
into
add
fwait
cltd
dec
inc
lcall
testb
add
add
add
xlat
imul
xlat
pusha
pusha
add
pop
jns
shrl
arpl
xor
lcall
mov
lret
jno
add
fmul
std
lret
test
jl
pop
testb
repnz
cmc
pop
xlat
dec
in
rorl
adc
adc
repnz
push
fucomi
xchg
adc
aas
jb
push
clc
add
dec
loope
lock
test
sub
sbb
xlat
jp
fildl
pushl
cmpb
cltd
fdivrp
aam
ds
sbb
add
in
testb
dec
add
mov
inc
push
sbb
mov
add
fisttps
add
add
leave
and
add
mov
adc
jb
stos
inc
or
stc
test
add
adc
adc
insb
in
lea
xor
popl
out
decl
sahf
decb
enter
add
fsubr
lahf
int
pushl
mov
ljmp
xor
add
xlat
push
ljmp
cmp
rorl
mov
add
add
call
in
rorl
ret
xchg
idiv
cmp
insb
cmp
decl
push
pop
xor
fwait
sbb
je
roll
mov
add
adc
pop
pop
lret
add
pop
adc
loopne
cmpl
andb
push
enter
lret
mov
jecxz
fildl
jmp
add
xchg
iret
ljmp
fs
je
insb
adc
enter
cmpsl
ret
add
mov
inc
repnz
or
fstpt
xchg
rorl
or
cmp
aam
aad
add
pop
cmp
push
pop
dec
and
or
push
pop
mov
out
add
mov
add
adc
jp
ja
fdivl
out
add
xchg
ret
sahf
cmp
pop
or
in
orb
dec
lret
push
push
sbb
lahf
inc
cmp
pop
fimuls
mov
pushf
aas
stc
or
add
or
xchg
je
adc
mov
add
push
daa
ja
mov
aad
fisttpl
call
jbe
adc
mov
jmp
js
lret
std
pushl
sub
xor
mov
lea
xor
mov
cwtl
idivb
cmpsb
pop
lsl
aas
inc
in
push
sub
and
cmp
mov
inc
jmp
push
add
lock
xor
fisubrl
pop
dec
adc
int
add
jp
add
push
testl
xlat
add
pop
pop
jg
shll
int3
inc
add
or
add
sub
cmp
adc
cmp
fisubs
out
add
pop
jmp
iret
inc
clc
out
push
cmp
mov
add
mov
cmp
lock
sub
aaa
inc
es
inc
mov
jle
add
push
push
push
or
addr16
sub
in
cmp
jecxz
jnp
add
add
in
mov
in
out
pop
jnp
add
fistl
jo
add
pop
stos
repz
add
cmpsl
inc
pop
stc
les
faddl
cmp
fistl
test
mov
mov
or
test
jae
cmpsl
mov
push
stos
jge
or
test
mov
adc
jmp
pop
subl
and
test
pop
icebp
xor
inc
and
in
and
inc
cld
in
out
add
sbb
adc
loope
aad
inc
add
jbe
add
or
insl
js
shr
cmp
xchg
add
sub
push
loopne
cmp
push
add
sbb
arpl
add
or
pop
ret
and
adc
out
cvttps2pi
nop
ret
dec
xor
sbbl
sub
push
pusha
push
add
push
mov
fnstcw
out
neg
xor
add
add
add
inc
mov
fwait
lcall
adc
push
fs
sbb
scas
aad
je
dec
push
push
cmp
and
loopne
addb
jle
sub
out
jle
push
or
stos
xchg
call
dec
or
lret
jmp
push
push
add
push
xor
add
xchg
cmp
orl
add
add
add
add
cmpsl
add
add
divb
pushl
call
test
add
repz
je
test
push
or
repnz
sbb
ret
add
or
jne
icebp
call
inc
inc
clc
pop
sub
ret
push
mov
inc
sbb
mov
mov
jae
mov
mov
jp
dec
imul
adc
test
add
mov
fisttpl
addb
add
xchg
add
push
nop
movsb
add
pop
and
mov
shr
sub
and
lods
inc
dec
fsubl
cmc
or
setb
add
pop
sub
mov
jmp
shlb
cld
shl
mov
add
mov
sub
mov
mov
mov
push
cmpsl
lea
pop
or
adc
push
push
out
out
pop
adc
add
or
xchg
pop
add
push
adc
mov
mov
mov
inc
bsf
decl
sahf
xchg
pop
adc
jmp
clc
mov
mov
sbbl
dec
push
stos
pop
push
adc
sub
jmp
add
cmp
lea
add
in
pusha
stos
jns
adc
or
mov
mov
bnd
aad
pop
dec
add
ds
push
test
mov
adc
jmp
dec
mov
lea
mov
mov
cmpb
pop
pop
xor
rclb
push
jnp
mov
xor
add
mov
jg
cmp
adc
push
bound
push
mov
popa
inc
adc
dec
inc
jmp
fcoml
cld
dec
les
stos
push
add
add
popa
ljmp
jnp
add
inc
incl
stos
mov
and
inc
fcomps
sub
inc
call
aas
incb
mov
push
mov
dec
push
rorl
popa
add
mov
jne
push
pop
jnp
jge
std
jbe
dec
stos
leave
adc
push
lea
push
push
mov
jp
adc
cmp
inc
test
sbb
enter
arpl
jmp
pop
test
mov
push
scas
sub
lret
mov
mov
fsts
add
and
test
gs
add
pop
fsub
roll
mov
push
leave
out
mov
lods
test
fldcw
ss
pushf
imul
das
cmp
xor
sub
mov
add
or
ja
push
adc
dec
inc
push
push
mov
call
xchg
imul
fidivrl
pop
add
scas
aam
loopne
sub
adc
lods
in
repz
mov
fstpt
mov
mov
cmp
in
ss
arpl
and
gs
pop
add
mov
push
je
call
aaa
daa
mov
or
xor
jle
or
mov
mov
add
mov
cmp
or
out
pop
call
push
add
aam
lahf
mov
sbb
adcl
add
push
jle
out
mov
inc
fstpl
add
add
or
add
dec
add
std
or
add
jmp
mov
ja
gs
pop
and
fcoml
inc
jmp
or
hlt
cmpsb
daa
mov
push
sub
mov
cltd
dec
adc
in
add
into
inc
mov
rolb
inc
dec
push
incl
xchg
inc
push
inc
jle
ret
out
psubsb
out
jns
cmp
ljmp
mov
add
mov
call
test
mov
jb
loope
call
ja
repz
xchg
test
mov
jl
cmp
imul
push
pop
test
push
add
push
mov
push
push
stos
add
pushf
movsl
add
pop
incl
or
into
mov
add
pop
leave
shll
dec
mov
mov
mov
mov
mov
add
inc
sub
adc
stos
add
push
sub
jne
xor
lods
mov
call
xchg
push
test
mov
in
or
inc
ret
popa
jmp
add
mov
add
mov
enter
and
pop
mov
mov
mov
andl
pop
add
aas
addl
js
call
mov
or
in
or
lret
imul
add
mov
fwait
test
scas
inc
or
or
pop
adc
xor
fildl
pop
jg
add
inc
or
xor
push
call
mov
cmp
mov
xor
fldt
add
sahf
hlt
pop
imul
adc
call
bound
mov
jae
cld
ljmp
add
add
or
mov
push
scas
lcall
adc
add
add
dec
add
lret
test
out
jl
mov
stc
out
add
dec
mov
jmp
adc
call
add
icebp
out
call
test
decl
jp
out
out
std
adc
xchg
cmp
inc
or
dec
or
add
jns
clc
ret
mov
fnstsw
inc
loop
pop
mov
lcall
stos
repnz
in
imulb
jae
in
or
jge
add
loopne
fildl
in
sub
add
popf
std
xor
incb
or
dec
push
call
pop
and
adc
add
pushf
testb
add
aas
cld
adc
cmpb
cwtl
aas
mov
inc
pop
orb
and
add
pop
xchg
mov
aas
in
pushl
sbb
sbb
icebp
mov
sbb
push
negl
leave
rcrl
dec
mov
sub
add
call
adc
pop
sbb
sbb
les
add
or
sub
mov
sub
das
aam
add
pop
add
sub
adc
xchg
das
or
jmp
inc
lcall
fnstenv
in
stos
lret
adc
add
aaa
loope
mov
jmp
mov
adc
add
pop
bound
inc
jge
sub
imul
push
sahf
stos
push
adc
add
jl
xorb
add
test
in
mov
das
repz
jmp
insl
mov
add
daa
lret
gs
pop
out
jmp
sub
mov
add
mov
sbb
push
cmpsb
cs
adc
adc
sub
and
shlb
out
nop
in
add
adc
push
add
push
push
dec
out
pop
add
dec
push
aas
out
dec
push
ret
adc
inc
add
cwtl
incl
jmp
shrl
mov
xchg
pshufw
push
test
insb
add
inc
sbb
test
add
scas
adcb
outsb
or
dec
inc
jae
and
dec
pushl
call
inc
jae
repz
add
add
add
sub
and
fcmovnb
scas
add
scas
add
push
shlb
addl
test
call
mov
cmp
jbe
jae
sbb
inc
and
pop
imul
push
add
xchg
in
test
push
push
jge
mov
xor
pop
ljmp
push
inc
add
mov
mov
adc
jmp
addr16
push
push
imul
mov
dec
dec
and
or
repz
add
add
inc
fs
and
lahf
add
pop
xor
dec
push
pop
mov
outsl
lcall
dec
fwait
add
jecxz
pop
ljmp
add
xlat
add
cmp
in
pop
outsl
pop
test
add
xor
int
sub
push
pop
xlat
add
inc
repz
cmp
jmp
xchg
sbb
add
loope
adc
ljmp
cmp
test
pushf
cmpsb
inc
adc
sahf
aaa
sti
cmc
andb
out
fwait
mov
ljmp
jg
out
dec
push
aad
add
jp
in
pushf
ficoml
std
sbb
add
push
jb
cmp
lcall
adc
mov
pop
add
shl
and
stos
jae
and
mov
jl
pop
pop
cs
das
ficomps
cmpsb
adc
adc
and
jl
lahf
xor
add
bnd
xlat
jb
out
xchg
inc
cld
add
xchg
aas
and
inc
jge
int
push
lea
add
ljmp
and
push
fidivs
mov
out
xor
out
or
lahf
add
jo
xchg
ja
dec
mov
and
in
jle
mov
addl
es
std
mov
daa
dec
cld
xchg
add
add
and
push
push
push
or
add
add
add
ret
or
scas
add
jo
add
insb
rorl
cmpsb
mov
sub
mov
xchg
enter
mov
popf
add
sub
dec
jae
das
adc
mov
addl
aaa
es
inc
sahf
jo
xor
sbbl
fcomps
or
mov
lret
cltd
icebp
roll
dec
in
cmp
jnp
sti
or
mov
call
aaa
or
cld
add
jg
adc
das
les
pop
fistpl
ret
mov
fwait
orb
xor
mov
rcll
js
test
push
inc
mov
add
lods
jmp
imul
pop
jnp
scas
add
daa
sbb
sbb
add
test
sti
add
loope
lods
fwait
mov
add
mov
jmp
mov
or
push
jmp
sbb
gs
jno
in
mull
sbb
adc
jp
lods
push
test
rcll
stos
nop
add
add
sti
mov
jne
scas
ljmp
pushl
jno
pop
cmp
adc
pop
inc
add
clc
pop
xchg
ret
int
add
push
pop
add
adc
inc
loope
cmp
mov
les
aad
pop
or
pop
aam
inc
or
push
out
add
in
outsl
out
jo
loop
jne
ds
adc
cmp
add
add
cmp
push
aaa
jl
or
mov
scas
std
cmp
mov
inc
and
insl
les
rcl
insb
push
adc
adc
or
pop
push
jle
add
cmpb
bound
mov
push
push
cmp
popf
cli
push
mov
pop
rorb
pop
adc
je
pop
ret
mov
stos
mov
cwtl
ret
jle
mov
addr16
mov
mov
adc
pop
add
hlt
and
add
add
jl
jge
cmp
push
mov
inc
or
fdiv
mov
xchg
jge
adc
push
rorl
or
loopne
add
adc
xor
ret
jae
sbb
cmp
mov
push
xchg
push
call
push
xor
adc
inc
or
inc
pop
inc
les
dec
or
adc
decb
adc
fwait
dec
push
add
add
in
lcall
pushf
lcall
inc
lcall
add
sbb
pop
pop
test
pop
push
push
cmovae
test
add
mov
fcoms
add
push
dec
out
insb
mov
add
sarb
call
fwait
das
pop
jmp
sub
test
call
dec
push
and
add
les
in
add
cmp
mov
jmp
sbb
loopne
push
add
or
adc
sbb
add
adc
ss
add
add
inc
or
andl
movsb
jmp
lock
or
incb
xchg
add
loope
lea
mov
add
stos
add
jmp
test
mov
add
sbb
test
andl
call
insb
shl
xchg
test
out
mov
add
inc
cmpl
scas
decl
es
inc
div
stc
lea
call
cmovo
repz
pop
dec
jnp
adc
es
jo
aad
add
mov
jne
adc
out
out
cld
decl
ds
add
call
dec
sbb
inc
cs
aam
xchg
cwtl
cmp
add
sub
in
and
outsl
lea
push
daa
std
loopne
push
push
cs
test
inc
call
push
cltd
push
incl
sbb
int3
cmp
add
pop
mov
fiaddl
add
pop
xchg
push
cs
push
pushf
add
dec
push
push
leave
imul
xor
push
push
out
movsl
outsl
aas
pop
mov
aas
or
incb
inc
xchg
jne
inc
add
xor
aas
fcmovne
and
inc
jmp
cmpsl
icebp
mov
push
nop
inc
pop
into
add
cwtl
les
jmp
sbb
imul
mov
loopne
shrl
das
pop
dec
add
add
icebp
mov
subb
mov
and
enter
repz
test
xchg
ret
out
xchg
out
pop
mov
jmp
sbb
sub
jbe
jns
dec
sahf
pop
sbb
inc
pop
xchg
das
push
imul
mov
add
pushf
xor
call
fildl
imul
lret
ret
lods
idivb
les
jmp
add
push
lock
pop
add
stos
out
push
add
jmp
out
inc
les
jg
adc
dec
fstp
add
push
adc
sbb
popf
add
adc
push
stos
add
push
loopne
pushf
add
add
dec
add
ret
push
mov
and
insl
ja
push
xor
add
add
or
nop
rorl
loope
pushl
jb
mov
add
xchg
mov
or
dec
icebp
add
inc
and
push
test
orl
inc
push
cwtl
decb
push
push
mov
jns
mov
add
cmpl
add
mov
and
pop
push
add
nop
inc
or
pop
add
pop
test
cmp
add
test
inc
adc
xor
test
mov
or
push
and
and
add
add
fildl
sbb
ret
rcll
lea
movsb
stos
pop
ret
test
mov
imul
adc
inc
add
addb
and
pop
add
mov
imul
inc
mov
xchg
pop
sub
add
adc
xchg
push
andl
mov
add
je
add
ds
inc
int
push
add
add
inc
int
cmp
jmp
negl
movsb
out
or
add
lds
or
ret
add
test
in
push
out
sub
and
add
popf
xor
or
test
test
int3
add
jg
out
pop
and
sub
and
mov
hlt
xor
icebp
add
add
aam
jp
add
stos
filds
pop
add
imul
data16
call
aam
inc
int
popf
out
add
xchg
adc
adc
push
add
nop
pop
jae
mov
adc
jmp
loop
jl
lret
pop
add
or
xor
add
mov
in
jmp
mov
mov
add
pop
jmp
add
gs
add
adc
dec
test
adc
call
lods
inc
add
mov
add
inc
and
outsb
mov
dec
leave
inc
and
and
inc
addr16
ljmp
add
inc
and
into
idivl
add
int
add
push
adc
mov
int
or
push
sub
das
js
pop
sbb
jbe
daa
inc
or
lret
cmp
inc
scas
jb
and
mov
jno,pt
and
iret
mov
lds
push
dec
mov
mov
pop
insl
out
jnp
inc
add
movsl
ret
add
adc
add
inc
and
fmuls
pop
sub
and
test
mov
mov
xor
dec
fstl
imul
add
and
cmp
pop
aam
ss
cs
cmp
add
push
int
add
mov
push
push
jmp
test
roll
xor
add
jo
out
push
inc
jmp
add
add
mov
pop
ds
xacquire
fmuls
test
add
jg
in
inc
jmp
and
pop
cltd
fcomi
add
add
add
mov
sbb
sub
push
jecxz
fldl
add
pop
aam
push
add
mov
add
dec
pusha
mov
add
stos
imul
adc
sbb
out
inc
jmp
lods
jle
mov
adc
sbb
add
pop
dec
push
mov
adc
adc
insb
psubusw
pmaxub
fwait
jl
push
jmp
and
jmp
pop
gs
push
add
lock
aas
cmp
adc
add
sub
pop
pop
adc
rcll
add
repnz
mov
in
adc
push
add
push
aaa
ret
xor
add
ja
or
add
fdivr
xor
push
and
fstpt
call
xor
mov
or
jb
push
push
mov
dec
add
add
pop
fstpt
xchg
add
mov
andl
jg
bound
add
sbb
push
test
mov
add
mov
std
incl
mov
add
rdpmc
das
call
test
add
sub
xchg
je
add
mov
add
add
insb
add
ja
add
aas
pop
pop
add
and
dec
das
xchg
sar
sbb
inc
and
les
adc
inc
jp
clc
test
push
lods
test
repnz
test
add
fstpl
pop
mov
ficoml
mov
mov
test
test
aas
repz
out
add
test
add
add
pop
add
or
movsb
repz
jmp
lcall
adc
add
test
cmp
in
add
add
adc
push
lea
add
push
out
cmp
fs
fs
addl
or
cli
cmp
pop
add
or
roll
add
xor
mov
pop
sub
in
fwait
adc
loope
or
iret
inc
add
lcall
mov
sbb
mov
cli
xchg
decb
xchg
adc
inc
aad
popf
out
cmp
jmp
mov
or
pop
aad
popa
mov
lods
inc
mov
adc
mov
add
xchg
push
gs
push
adc
add
jae
sar
adc
and
loop
ss
xchg
add
push
stc
jmp
int
add
enter
inc
add
lds
or
xchg
stos
jns
sub
add
sar
adc
xchg
int3
cld
and
call
cwtl
jp
adc
aas
add
in
push
push
push
adc
jae
icebp
xchg
lret
jmp
or
faddp
add
cwtl
ret
test
pop
add
test
fisubl
add
lret
mov
inc
jl
enter
jae
sub
les
and
or
xor
call
lcall
cmp
arpl
jmp
mov
clc
lcall
pop
fnstcw
pop
mov
jmp
int
inc
pop
movsb
out
add
add
mov
addb
lock
shrl
mov
sbb
int
pushf
add
ret
mov
xchg
pop
iret
test
push
add
jno
sbb
jmp
mov
sub
xchg
and
out
pop
mov
xor
test
orl
stos
mov
jmp
mov
cmpsb
rcll
inc
xor
add
add
test
mov
out
add
add
xchg
cmp
push
dec
adc
add
adc
lea
pop
xor
fwait
adc
add
adc
mov
popf
in
xorb
scas
call
add
jmp
push
add
xchg
push
mov
movsl
imull
in
sub
aaa
mov
add
and
lea
lea
jns
add
jnp
and
fdivl
jo
add
repnz
add
stos
and
jmp
add
out
inc
jle
aad
jl
add
xchg
mov
dec
jb
decl
aam
test
mov
lea
jp
sbb
repnz
add
or
ds
pop
cs
ror
add
sarb
pop
mov
jae
pusha
xor
pushf
xor
sbb
inc
inc
pop
add
call
cltd
xchg
jne
push
add
mov
cmp
pop
int
push
in
int3
jge
out
hlt
mov
movsb
xchg
xor
mov
cltd
dec
cmp
nop
adc
enter
outsl
clc
add
pop
sbb
add
sbb
or
dec
lds
sub
mov
pushl
adc
add
lea
fistpl
scas
pop
xchg
in
add
jnp
pushf
je
call
or
xor
cmp
sahf
jle
lret
inc
jecxz
adc
add
imul
add
push
push
into
xlat
push
add
iret
and
cmp
js
call
adc
aas
jg
mov
or
call
or
orl
pop
sub
jle
in
into
xlat
stc
fxtract
ljmp
xor
add
add
ret
in
adc
mov
lods
repnz
movsl
xchg
inc
je
ds
add
add
jmp
cli
add
xor
lcall
jmp
aas
jmp
sub
xchg
loope
xor
mov
roll
call
lahf
iret
in
call
cmp
pop
stos
lar
ja
jecxz
xchg
cltd
inc
mov
bound
add
jp
or
adc
repz
js
incb
jnp
decb
and
mov
add
mov
push
push
jns
push
push
push
adc
add
mov
inc
and
addr16
mov
testb
xor
and
cmpsb
fs
hlt
sub
flds
data16
shlb
outsb
call
add
outsb
add
scas
mov
inc
sbb
sub
mov
and
xchg
push
inc
sti
xchg
sbb
das
addb
lods
pop
mov
das
icebp
dec
inc
pop
cltd
sbb
lock
rdpmc
xlat
adc
add
push
and
insb
inc
adc
ss
mov
xor
in
aas
inc
adc
out
rolb
add
xchg
pop
pop
add
adc
les
inc
cmp
add
fucom
pop
fistl
and
add
repz
sbb
popf
inc
or
hlt
lock
scas
jmp
and
or
mov
xor
add
add
add
add
sub
cmp
jle
mov
add
popf
inc
loope
mov
mov
clc
incb
scas
sbb
mov
add
ret
pop
jg
mov
add
jne
incl
add
xchg
mov
mov
add
push
in
push
xchg
ds
in
push
rcll
jmp
call
add
cmc
mov
xchg
ds
mov
les
jmp
push
add
aam
or
pop
mov
jo
scas
call
loope
jmp
ja
addb
cli
push
sbb
pop
sbb
dec
sahf
and
je
lcall
inc
outsb
cmpb
imul
hlt
add
decl
add
add
bound
jb
out
jne
and
jne
incl
xor
inc
out
insl
sbb
outsl
ret
push
mov
in
decl
xchg
mov
jne
or
mov
adc
inc
lds
cmp
or
ret
or
sub
in
inc
outsb
out
xor
add
fsubs
inc
pop
fwait
xor
add
in
pop
cmp
add
and
mov
and
inc
pop
adc
arpl
adc
xor
add
popa
mov
pop
add
aam
fisubl
pop
inc
add
xchg
push
cltd
mov
dec
pop
add
cmpsb
jb
push
cltd
pop
mov
faddl
cmp
add
add
lock
sti
imul
in
mov
nop
imul
cld
js
fisubrl
aad
adc
lret
scas
aad
pop
mov
cli
flds
lret
pop
inc
jmp
inc
dec
inc
jmp
inc
pop
jns
pop
cmp
jmp
inc
pop
add
inc
pop
sub
int
jmp
add
aad
rcrl
aaa
test
notb
add
addr16
inc
jmp
cmc
lock
into
aad
in
aad
lcall
sub
xor
arpl
mov
loope
sub
sub
add
jl
leave
xchg
test
sbb
add
xlat
lods
dec
mov
jl
std
inc
lea
mov
loope
jns
mov
in
and
in
ja
xor
lea
jl
adc
or
cmp
add
sub
inc
add
into
push
ljmp
or
jae
mov
jmp
jno
ret
cmc
or
add
std
rcll
rorb
lcall
sbb
mov
insl
sar
adc
lods
rorl
fstps
cmp
push
jne
dec
push
xor
pop
jmp
adc
jge
decl
jnp
loopne
mov
add
call
std
jne
or
ret
xchg
sti
mov
cli
sbb
add
std
lcall
ficoml
or
xchg
shrb
mov
push
jo
mov
push
fwait
mov
or
rorl
sub
notl
add
rcrl
adc
lea
sti
dec
fs
push
cld
lock
mov
setns
inc
mov
sbb
add
push
sti
mov
repnz
mov
imulb
sbb
pop
imull
cli
int
or
loopne
xor
addb
call
xchg
icebp
imul
cmp
out
stc
test
sub
loopne
xor
xchg
mov
lock
cltd
inc
mov
addl
or
inc
adc
cmp
and
inc
add
mov
jmp
mov
pushf
pushf
mov
and
call
xchg
sbb
pop
cmp
loopne
aam
repnz
jmp
cltd
stos
shr
sub
adc
xchg
sbb
sbb
ljmp
sbbb
lcall
and
lea
xor
insl
add
xor
inc
pop
and
je
push
cmc
addb
mov
xchg
nop
clc
add
movsl
testl
adc
push
rcl
cmc
es
scas
das
push
incl
std
adc
xor
or
inc
or
jo
add
sbb
dec
out
push
add
out
lds
pop
leave
add
pop
add
inc
cld
call
push
add
sbb
ja
mov
inc
leave
inc
std
je
add
push
pop
ss
inc
cmpb
sub
cmp
and
gs
xor
inc
arpl
enter
xchg
in
inc
call
outsb
add
inc
inc
decb
add
xor
mov
rorl
cmp
mov
dec
daa
jl
adcl
rcrb
loopne
mov
in
mov
sbb
mov
rorb
ja
pmuludq
inc
jb
enter
xchg
testb
xchg
xor
mov
add
add
pop
mov
aaa
fadd
call
mov
stc
and
inc
test
add
sub
fld
test
add
les
movsl
loop
jg
sub
lea
xor
test
xchg
inc
clc
aam
dec
data16
inc
lock
inc
loopne
lret
test
call
sldt
add
add
pcmpgtw
push
push
jmp
pop
jle
cwtl
cmpsl
test
xchg
jg
es
or
movsb
pusha
call
cs
test
and
imulb
push
call
or
in
xchg
mov
cmc
sub
lea
cmpsb
ffree
push
call
adc
add
decb
add
into
out
ret
add
sbbb
sub
jg
or
roll
mov
scas
lret
inc
psubd
sti
clc
out
add
push
mov
xor
dec
call
adc
dec
ficoms
cwtl
testl
mov
adc
sti
adcl
or
mov
add
mov
push
mov
outsl
add
cmp
dec
sub
add
call
lds
outsb
or
sti
loope
decl
call
xor
and
mov
xor
pop
xchg
mov
xchg
jae
pop
imul
pushf
popf
or
adc
pop
imul
adc
xchg
mov
push
add
lcall
pop
xchg
add
fwait
stos
je
dec
jge,pn
xchg
add
add
insb
mov
mov
cmp
imul
push
adc
sub
cmp
adc
jle
xor
cmp
jne
inc
push
pop
std
inc
or
jnp
rclb
call
mov
add
add
sarb
add
add
add
cmp
scas
push
out
pop
lea
jle
jg
inc
cmp
adc
sub
xchg
mov
jb
mov
mov
add
sub
jmp
lcall
fs
idiv
inc
sarl
cmpsb
leave
jl
add
add
jmp
rol
mov
adc
add
dec
mov
jmp
fiadds
jb
push
adc
and
dec
mov
int3
inc
out
filds
jmp
in
pcmpeqb
lret
out
jl
add
or
xor
add
push
repz
dec
icebp
sub
jnp
jo
push
cmp
adc
push
add
mov
outsb
or
xchg
xchg
mov
incb
xchg
sbb
hlt
dec
call
mov
or
add
arpl
stc
out
or
lea
push
out
push
incl
mov
dec
hlt
mov
or
mov
push
push
push
dec
mov
sti
add
vunpckhpd
adc
repz
cmc
add
popf
jle
rorb
add
movzbl
cmp
nopl
ret
rcll
negb
loopne
sbb
adc
or
incl
push
mov
cmp
bound
inc
call
jno
cmp
dec
cmp
add
call
dec
mov
out
jae
aad
push
push
xor
ljmp
lods
cmc
add
jl
call
mov
in
in
jecxz
imul
outsl
out
mov
lock
roll
xchg
idivl
add
add
add
xor
xlat
cmpsb
fmul
inc
in
fnstcw
xor
add
loopne
nop
mov
add
mov
inc
push
pop
gs
sbb
jmp
push
pop
add
lock
jae
imul
test
mov
sarl
fs
ja
cmpsb
inc
sar
hlt
add
inc
jmp
add
add
jmp
sahf
jle
jne
ja
push
pushf
or
subl
jge
in
adc
pushw
sub
inc
jl
data16
and
ss
out
or
ret
pop
mov
xchg
decl
cmp
dec
push
adc
mov
jle
in
add
adc
add
ja
cmp
add
push
adc
decb
or
bound
add
jae
lds
push
mov
mov
call
xorl
inc
xchg
jg
in
mov
mov
jo
std
pushl
into
mov
rolb
incb
add
xor
std
jmp
adc
lea
sub
stos
movsl
mov
sbb
mov
decl
jae
pop
dec
push
cmp
sub
adc
add
loop
xchg
es
pop
imul
lret
lds
add
imul
dec
lcall
push
scas
fstpt
adc
sub
stos
add
add
or
xchg
and
setne
mov
push
jge
mov
xchg
add
pop
test
mov
je
jg
jne
js
sbb
orb
std
adc
jne
js
xchg
ja
je
mov
mov
and
call
add
pop
fsubrl
add
hlt
in
sbb
jb
jle
jae
js
test
repz
shl
jbe
add
fsubrl
test
js
in
in
mov
mov
mov
jb
mov
adc
add
jmp
or
dec
fisubs
rclb
es
ret
cmc
pop
add
mov
add
and
push
out
cmp
adc
call
sbb
mov
add
add
fisubl
xchg
daa
jle
call
dec
pop
xchg
das
jmp
ret
movsb
test
add
adc
xchg
add
sbbl
adc
inc
in
pusha
mov
gs
add
sbb
sbb
test
add
sub
add
mov
call
add
repnz
push
add
scas
mov
cmovle
xor
mov
ljmp
jle
test
das
pushl
jl
testb
movzbl
out
dec
add
adc
inc
or
rolb
clc
jl
adc
dec
lock
lea
inc
sub
ljmp
push
out
pop
or
mov
mov
jbe
and
mov
js
decb
push
push
inc
sub
add
sub
jne
and
mov
push
rorb
mov
sub
out
mov
add
shlb
pop
add
lcall
xchg
sbb
addl
add
add
frstor
push
jg
add
pop
fidivrs
loop
jne
pop
mov
addr16
ret
enter
in
jo
jne
jnp
adc
inc
imul
jo
mov
dec
shlb
mov
jmp
jnp
add
pop
add
xor
cmp
add
test
pop
xchg
inc
repnz
push
add
add
xchg
dec
neg
je
jno
jle
jo
je
jnp
dec
jle
adc
jge
adc
outsl
shll
adc
push
in
outsl
jmp
pop
lods
call
xchg
xchg
pop
dec
jo
push
jbe
add
add
mov
mov
outsl
out
xor
cmp
adc
cmp
cmc
jmp
sbb
sub
sub
cs
pushl
sahf
repnz
leave
pop
mov
xchg
adc
cmpb
jbe
xchg
test
cmp
adc
push
dec
push
popa
aam
jne
sar
mov
arpl
jmp
iret
or
mov
dec
add
and
dec
stos
push
out
add
add
mov
mov
inc
xor
icebp
jg
pushl
orl
push
or
jae
mov
push
jmp
dec
mov
leave
xorl
xchg
outsl
in
andl
repz
cmpl
lea
std
pushl
stc
std
pushl
dec
call
pop
aam
push
inc
test
test
add
jno
inc
mov
daa
dec
ret
sbb
push
daa
jb
mov
add
mov
out
or
pop
je
jmp
jecxz
cli
call
pop
jnp
outsl
push
jbe
js
dec
inc
push
pop
add
push
lds
adc
test
out
call
add
xchg
loope
add
pop
jnp
mov
adcb
add
insl
shll
aam
pop
add
popf
imul
push
cli
cwtl
jle
push
cwtl
pop
das
cmpsl
out
mov
cmp
jp
push
mov
addl
add
cmp
jmp
mov
jo
js
test
cmp
popa
notb
add
add
jl
push
nop
or
jmp
xchg
insb
lea
insb
out
rolb
insl
sbb
and
add
jb
cmp
add
lods
outsl
push
jmp
int
sub
sbb
pushl
add
dec
insb
push
add
cmp
pop
mov
adc
or
out
imul
add
incl
lea
add
push
lret
bound
and
es
call
sti
cmpl
cmpsb
ds
adc
fdivr
xchg
cs
fbld
lds
stc
mov
push
mov
jno
jmp
pop
testb
lea
push
mov
push
std
jne
ret
inc
cld
out
incl
subb
rclb
add
jb
cmp
fistl
xor
ds
ljmp
mulb
cmp
jmp
jg
clc
outsb
das
shlb
hlt
mov
push
mov
dec
push
lea
ljmp
cmp
call
xchg
inc
mov
inc
movhps
jnp
xchg
jl
add
pop
rorl
add
xor
pop
xor
xor
xchg
or
push
insl
pop
jg
repz
sahf
sahf
pop
out
mov
clc
push
add
pop
add
or
imul
mov
test
add
hlt
mov
add
cmp
mov
pop
popf
js
xchg
cmp
inc
loopne
add
push
add
lock
ss
loope
sarb
and
xchg
add
test
add
xchg
mov
push
mov
in
jbe
pop
insl
jo
and
ds
sarl
clc
sbb
outsb
roll
add
push
pminsw
jb
xor
xor
pop
out
js
rcrl
sub
call
inc
add
jo
pop
and
cli
imul
popf
out
call
pushl
mov
or
add
add
fs
pop
dec
cmp
in
out
jle
ret
adc
div
pop
out
pop
into
cmp
test
adc
add
add
inc
sbb
rclb
fstp
add
cmp
mov
add
add
add
popf
cmp
sti
jmp
in
lahf
mov
add
push
addr16
in
in
jmp
les
push
push
sbb
and
je
ret
inc
push
push
ret
inc
out
push
xchg
lods
mov
lock
aad
jge
lds
incl
cmp
jno
mov
push
inc
dec
aaa
out
incb
add
push
xchg
add
out
in
inc
cmp
xor
dec
push
push
push
call
and
jno
decl
std
decl
fdivr
incl
loopne
std
std
jae
push
inc
inc
pop
pop
jl
pop
pop
lret
lcall
mov
adc
jnp
inc
andb
pop
jge
add
imul
aas
pop
add
or
pop
dec
test
outsl
ljmp
pop
inc
rcrl
mov
xchg
xor
sbb
inc
pop
and
call
xchg
jbe
add
filds
xchg
mov
push
decb
insb
in
shrl
jb
fnstsw
cmc
jnp
insl
jle
jge
adc
add
pop
mov
cmp
in
adc
mov
shll
inc
movsb
fbld
and
ds
adc
cmpsb
inc
push
gs
add
mov
fldl
int3
ret
push
loope
push
add
xor
add
sbb
ds
add
mov
add
add
push
push
sub
adc
add
ljmp
arpl
pop
pop
cmp
iret
adc
fnstcw
ret
pop
adc
mov
push
jb
ja
jb
jo
sub
int
cmpl
cmp
cmp
inc
jmp
adc
inc
jmp
jge
jb
iret
pop
push
push
lcall
xor
add
outsb
jne
cmp
cmp
cmp
insb
pusha
int3
addr16
aad
mov
jb
out
imul
push
push
inc
das
jle
dec
push
adc
cmc
aad
sti
adc
repz
call
pop
mov
aad
mov
ds
push
mov
or
incl
sbb
clc
mov
mov
xor
mov
jg
adc
out
or
inc
cli
jne
scas
ljmp
dec
or
cld
stc
das
rcrb
mov
adc
ret
sbb
or
ds
pop
stos
dec
pop
pop
push
mov
pop
inc
pop
pushf
inc
inc
pop
add
sbb
push
xchg
pushl
pop
inc
pop
js
rcl
pop
mov
add
or
add
aaa
cmpsl
sar
enter
mov
mov
mov
mov
cmovo
mov
aam
imul
aaa
pop
ret
mov
xor
push
imul
push
add
adc
dec
rol
int3
imull
ret
insb
adc
add
inc
add
mov
add
mov
je
xchg
shll
enter
dec
mov
add
sub
inc
pushf
rorl
mov
push
in
call
add
push
adc
mov
call
add
sbb
pusha
lahf
sub
ret
add
inc
jmp
add
adc
adc
pop
xor
pusha
lahf
stc
sbb
decl
aaa
inc
jmp
adc
aas
mov
adc
decl
jne
adc
adc
lahf
sbb
ret
and
inc
jmp
sbb
lahf
movsl
and
decl
ss
jmp
adc
lahf
add
ret
movsb
ss
jmp
add
mov
mov
lea
loop
jle
mov
mov
fst
roll
movsb
rclb
add
mov
popf
push
aam
outsb
cmpsb
add
mov
mov
not
inc
cmpsb
pop
adc
push
pop
ds
xchg
aam
add
movsl
ficoml
push
mov
mov
pop
ss
movsl
push
adc
pop
pop
pushl
idivl
pop
mov
push
imul
pushl
stc
aas
pop
int3
xchg
aad
imul
pushl
int3
xor
aam
mov
mov
mov
idivl
pop
mov
add
push
add
pop
add
ja
idivb
pop
int3
repnz
aam
mov
mov
mov
repnz
pop
icebp
sbb
js
pushl
add
loop
pop
inc
inc
mov
sbb
outsb
mov
shlb
mov
mov
rol
lret
mov
add
add
rol
call
jo
push
jmp
mov
add
mov
cmp
shr
shlb
das
xchg
mov
xor
lret
pusha
jmp
mov
sbb
mov
or
jmp
mov
std
mov
xor
insb
pop
out
call
xchg
aas
push
bound
jmp
xchg
add
sub
and
add
sbb
mov
enter
in
mov
sbbl
jl
movsb
loop
inc
loope
vsubss
dec
sbb
fs
adc
test
adc
lea
mov
mov
pop
insb
psubsw
mov
mov
jb
pushf
out
sbb
jg
daa
mov
jg
popa
mov
imul
mov
imull
inc
xor
jns
in
xchg
xor
wrmsr
into
cld
ret
ss
das
test
xor
cmovo
xchg
loope
pushl
xor
les
adc
xor
or
test
jae
jg,pn
add
mov
imul
divl
lods
add
jle
add
ds
pop
scas
xlat
or
imul
ret
sub
clc
xor
mov
inc
add
xchg
in
lods
xor
inc
pop
push
pop
shrb
sub
add
add
ret
xchg
ret
adc
lea
mov
add
fildll
add
mov
mov
incb
pop
in
jae
cmpl
cmp
inc
rorl
lcall
outsl
push
ret
test
call
add
call
add
loopne
or
cli
ret
fsubrs
dec
or
sbb
test
add
add
iret
decb
outsl
push
add
push
pop
nop
add
imul
mov
mov
fistl
inc
add
jno
sbb
imul
call
fcomps
sub
shrb
jmp
mov
sbb
mov
scas
dec
push
jb
sub
aas
nop
cmp
stc
cmpl
loopne
lea
push
jbe
mov
pop
adc
add
add
mov
lods
pusha
leave
out
jp
add
aad
ds
dec
into
repz
adc
addr16
or
int
add
pusha
and
adc
pop
and
lods
mov
xchg
insb
repz
adc
push
insb
pop
push
xor
test
movb
add
rolb
add
add
call
movsl
sbb
pop
stos
mov
add
in
daa
push
in
add
mov
inc
call
insl
dec
repnz
bnd
lods
roll
dec
push
call
inc
js
cli
icebp
mov
test
add
xor
pop
jmp
lods
roll
or
fidivrl
add
js
add
inc
add
and
fistps
imulb
xor
call
add
inc
adc
imul
add
add
sar
repz
adc
lea
enter
mov
adc
imul
rcll
cmpb
call
aaa
sbb
push
pusha
js
xchg
int3
test
push
inc
adc
out
add
arpl
xor
adc
imul
add
pop
out
jae
jo
incb
xor
aas
pop
outsl
pop
adc
add
ret
push
mov
inc
jecxz
les
out
cmp
imul
rcrb
in
call
add
test
and
adc
iret
lock
add
inc
sub
adc
dec
call
pop
enter
push
add
mov
ds
iret
hlt
sub
add
les
lcall
jge
add
mov
imul
jne
andb
add
sub
testl
mov
sub
add
adc
inc
lds
add
adc
inc
lds
add
jmp
add
add
inc
mov
adc
push
add
xchg
jge
push
pop
push
dec
inc
or
inc
xchg
xchg
jae
xchg
test
xor
push
out
mov
xor
lods
mov
movb
add
cmp
lea
cld
mov
xchg
mov
push
mov
scas
std
push
aam
btr
test
add
or
cmp
push
decl
test
stc
aam
add
decl
lea
out
push
sbb
ror
add
xor
inc
push
inc
call
and
sbb
outsb
xchg
std
adc
repz
in
call
inc
add
pushf
add
jmp
mov
add
add
insb
add
xor
push
imul
and
inc
addr16
stc
ret
call
imul
mov
add
xor
pop
out
shl
push
xchg
mov
inc
inc
mov
or
cltd
or
dec
pop
mov
mov
push
mov
das
add
sub
incb
jg
add
add
mov
push
or
loop
mov
mov
stos
xchg
add
push
cwtl
pop
xchg
inc
jae
btc
aad
xchg
mov
or
scas
cmp
in
xor
and
hlt
out
push
mov
cmp
ljmp
and
sbb
push
sti
pop
pushf
xor
dec
push
fsts
shlb
lock
leave
mov
mov
mov
mov
xchg
iret
push
mov
mov
inc
mov
lods
enter
push
jb
sub
mov
movsb
adc
xchg
cmp
aas
jmp
adc
out
sbb
or
out
sarb
adc
push
pusha
push
push
dec
in
mov
pop
lea
mov
adc
pop
xchg
cmp
push
xor
mov
cmp
adc
fs
dec
push
cmpl
imul
push
jnp
mov
push
inc
mov
add
add
rcll
add
call
mov
std
push
data16
clc
in
dec
jg
mov
test
dec
or
mov
cld
add
add
rorb
shl
mov
inc
into
stc
jmp
pop
pop
mov
push
mov
add
push
cmp
add
mov
fildl
mov
xor
pop
add
dec
andl
scas
jge
stos
enter
pop
jg
cwtl
shll
pop
mov
cld
push
xchg
fidivrs
js
mov
add
push
lods
inc
sub
lcall
cli
ljmp
push
dec
call
jne
add
loop
pop
pushf
pop
mov
xchg
in
sbb
push
je
notl
and
inc
je
fimuls
dec
dec
fdivrl
ljmp
mov
out
sti
data16
punpcklwd
data16
test
fcoms
lret
dec
mov
out
add
xchg
push
sub
xchg
push
dec
repnz
jmp
xchg
aam
lods
jo
jge
pop
fcompl
pop
leave
jbe
add
test
xchg
dec
jno
adc
aad
data16
sub
xchg
int3
rolb
pushf
cmp
xchg
mov
call
add
adc
dec
sbb
mov
adc
clc
add
lock
sub
popa
pop
gs
mov
mov
je
pop
xor
call
dec
cmp
call
xor
add
js
push
jb
sub
mov
movsb
or
aas
jmp
adc
out
mov
adc
gs
add
mov
push
arpl
dec
sub
nop
lea
insb
inc
add
jmp
ja
imul
cltd
mov
fs
add
add
cmpsl
mov
inc
dec
iret
push
lea
stos
push
push
cmp
test
jnp
or
jmp
jb
add
push
lea
xchg
lcall
xchg
data16
adc
xchg
adc
jnp
jmp
add
mov
mov
push
lods
or
call
mov
out
mov
mov
or
int
sbbb
push
push
mov
xor
std
push
add
jmp
inc
jge
xchg
jle
incb
test
fdivs
and
pop
jnp
cmp
inc
pop
push
mov
mov
or
sub
mov
or
add
movsl
cmp
test
gs
add
shll
dec
xchg
sahf
xchg
dec
hlt
xlat
and
scas
jbe
add
fadds
xor
jns
push
pop
mov
xchg
insb
add
xchg
xchg
dec
je
fsubr
repz
add
adc
arpl
aam
xorb
jmp
fmul
push
repnz
insb
add
ficompl
cltd
out
rcrb
cli
fstpt
inc
cwtl
jp
dec
push
leave
xchg
dec
xor
xlat
inc
fcoms
pop
cmc
je
add
push
jmp
add
sbbb
das
scas
repnz
jmp
mov
int3
pop
or
lds
les
jecxz
je
lods
popa
sub
add
add
add
lahf
adc
add
fnstsw
call
jns
sbb
push
mov
rclb
dec
mov
cmp
dec
mov
les
loope
mov
push
and
push
sar
sarl
adc
test
mov
orb
mov
mov
testb
add
add
inc
ss
enter
jmp
scas
loope
add
add
push
sub
jae
mov
jae
rorb
cltd
mov
xchg
add
aaa
pop
mov
inc
mov
inc
xchg
or
sqrtps
aad
add
dec
mov
lods
pop
fnstcw
jmp
jge
pop
pop
push
or
or
mov
add
loope
add
push
push
jns
jnp
test
sub
jecxz
std
stc
aas
ljmp
aaa
mov
lods
scas
jp
pop
and
xchg
dec
push
imul
stos
out
push
fisubrl
xor
and
rorb
inc
mov
and
add
pop
jns
add
popf
pop
jae
aam
out
xchg
out
popa
add
mov
push
cmp
call
jge
inc
xchg
pop
fiaddl
jbe
out
pop
xchg
mov
add
shll
xor
cmpsb
loopne
pop
adc
or
repz
das
out
test
into
sbb
popf
cmp
pop
add
addl
add
add
das
xchg
inc
daa
shll
imul
ror
in
push
xlat
pop
jecxz
or
xor
aam
lods
jle
jp
dec
jo
or
inc
jne
cmp
mov
mov
int3
in
mov
hlt
adc
push
pop
int
int
bound
out
sti
add
fiadds
mov
inc
adc
and
add
add
xor
ljmp
mov
dec
inc
incb
sbb
call
lea
lock
jmp
vpshad
inc
cmp
cmp
movsl
in
or
rolb
mov
sbb
setnp
mov
mov
jne
cmc
int
cs
pushf
insb
mov
xlat
mov
loope
out
sti
add
add
ret
mov
mov
ret
lods
mov
dec
adc
jne
mov
std
fnstenv
jmp
jns
pop
cmpsl
mov
ljmp
lds
xor
sub
mov
inc
std
sub
out
push
incl
add
lea
xchg
decl
out
add
decl
add
add
pop
loopne
lret
push
push
stos
decl
jge
adc
mov
pop
pop
jnp
and
cli
mov
push
mov
and
call
xchg
push
pop
add
scas
loope
mov
stos
out
cmpsl
add
pushf
push
cld
imul
pop
stos
out
cmp
add
inc
cli
mov
adc
aas
pop
loopne
testb
add
add
das
sub
enter
xchg
test
add
fcomp
pop
pop
aas
fisttps
stos
add
mov
lods
xlat
lds
jb
mov
jb
add
add
int
pop
lret
sub
add
jg
inc
xor
push
jns
jno
pop
push
jno
add
sbb
xchg
mov
inc
push
jo
inc
call
add
mov
repz
bound
jl
dec
addl
cmp
inc
jne
pusha
pop
pop
jne
add
mov
mov
jo
push
add
mov
aam
ljmp
decb
imul
or
pop
mov
fwait
xorl
flds
cltd
mov
dec
es
add
ret
cmc
fxch
sti
les
into
out
sahf
xchg
aaa
jle
es
adcl
add
outsb
mov
inc
add
add
fbstp
andb
mov
fs
push
test
ret
ret
mov
sub
add
add
dec
push
cmc
decb
mov
enter
cs
add
sub
loope
call
mov
push
push
cltd
mov
or
std
mov
ret
sbb
cmp
jne
mov
std
call
rcll
or
jmp
out
pop
and
ds
ljmp
mov
sub
dec
or
pop
leave
jl
push
and
add
add
pop
sbb
aaa
fisubl
scas
push
mov
mov
js
cmp
jg
mov
pop
lods
inc
pop
outsl
test
pop
test
mov
cli
stos
out
fiaddl
add
inc
xor
orb
aas
out
lcall
adc
jg
lock
jle
pop
sub
push
scas
int
aas
mov
add
add
mov
mull
add
scas
into
mov
mov
sahf
add
dec
mov
clc
ret
nop
xchg
into
and
stos
dec
rcl
jno
enter
js
jp
pop
repz
inc
pop
sbb
mov
xlat
cwtl
inc
and
faddp
xor
mov
mov
jmp
cmp
fwait
rorb
insb
cmp
xchg
xchg
push
cmp
mov
ds
aam
int3
mov
add
add
jmp
incl
add
adc
dec
inc
adc
mov
push
subps
cmpl
aam
pop
xchg
fildl
jmp
daa
mov
jmp
jp
mov
add
add
add
inc
lea
adc
add
in
call
and
add
stos
add
add
adc
fisttps
stos
and
add
push
xchg
jnp
push
out
xlat
mov
shlb
sbb
ret
imul
add
add
push
cli
push
sti
push
ficoms
roll
add
mov
mov
lea
int
push
and
decl
mov
add
lea
push
lea
push
push
push
std
jne
ret
push
ret
dec
cmp
or
add
mov
cmp
sub
mov
mov
mov
add
add
sub
and
sbb
fildll
add
pop
mov
lea
rorl
cltd
out
push
and
mov
adc
push
in
mov
out
rorl
ljmp
pushf
insl
pop
mov
cmp
pop
adc
mov
int
lcall
cmp
jbe
add
add
add
ficompl
les
pop
fdivs
ret
lock
lock
cmp
sub
inc
cltd
mov
test
arpl
subb
push
push
add
insl
repz
sbb
rcll
insb
inc
in
sbb
inc
mov
add
mov
std
mov
shrl
sub
add
add
sub
clc
xchg
mov
mov
mov
jmp
sub
int3
int
add
sub
mov
int
add
xchg
cmpsb
incb
fidivs
lcall
pop
sbb
rcll
data16
sub
pop
xchg
jge
packssdw
sti
bound
rclb
inc
adc
add
sub
pop
mov
pop
dec
mov
cmp
outsl
push
mov
inc
cmp
or
cmp
lea
add
jmp
mov
xor
push
lock
clc
adc
inc
pop
adc
ret
or
ljmp
ss
pop
out
std
out
sbb
decl
add
test
sti
testl
jne
pop
out
repnz
ljmp
xchg
jae
push
in
in
aas
add
repnz
aad
push
xor
incb
test
das
add
dec
clc
dec
dec
std
push
pop
or
add
sub
call
add
mov
cmp
add
adcb
lea
aam
inc
dec
test
mov
mov
ljmp
call
adc
pop
sub
shr
add
test
movsl
mov
push
pop
aam
add
invd
cmp
add
flds
cmp
clc
aam
mov
add
inc
add
dec
sbb
inc
aaa
pop
adc
ret
adc
popf
cmp
aaa
sti
scas
and
scas
mov
cmp
shrb
mov
jmp
sub
test
test
xlat
test
add
sub
subb
push
xchg
cmp
mov
cmp
or
stos
or
add
cmp
cltd
cmp
or
bound
mov
rolb
jb
cs
in
push
stc
xchg
jbe
sub
mov
out
push
sbb
mov
ds
pop
jb
xor
jecxz
out
jg
aaa
pop
daa
rorb
adc
sub
cmp
add
cmp
stc
push
cmp
pop
dec
cmp
ljmp
cmp
repz
add
push
cmp
xchg
sbb
xlat
and
mov
inc
push
sti
jge
add
pusha
add
sbb
adc
mov
add
insl
stc
push
jne
jmp
pop
ret
movb
adcl
imul
jle
into
je
or
je
push
xor
add
or
js
add
push
pop
add
mov
push
into
data16
repz
ja
cld
cmc
lea
mov
nop
jl
add
inc
scas
lock
adc
into
shll
or
test
adc
cmpsb
dec
jae
test
add
xor
add
aas
push
push
jae
sub
or
and
add
cmpb
add
sub
xor
stos
cmc
sbb
push
or
xchg
call
cmp
js
gs
test
add
add
add
sub
popf
and
xchg
shl
pop
cmp
fwait
shr
jae
in
pop
adc
add
mov
gs
add
stos
sbb
fistl
pop
ds
pop
add
fmuls
mov
int
add
aam
lds
xchg
push
imul
adc
aam
test
inc
push
mov
cmp
pop
mov
pop
jle
out
add
adc
pop
adc
inc
adc
inc
push
insl
divl
jmp
adc
push
sbbl
jmp
add
sub
sub
mov
aas
jae
sahf
lds
cltd
pop
ret
pop
scas
or
sahf
es
adc
adc
adc
mov
in
scas
xor
leave
xor
add
inc
xor
mov
push
push
push
dec
push
and
add
shll
fsubrs
decb
jo
decl
test
gs
dec
jle
push
push
and
lcall
jae
decl
push
inc
out
cmpb
dec
mov
sbb
mov
inc
into
lcall
repnz
mov
add
clc
jae
mov
add
jnp
and
call
cmc
imul
jne
clc
jae
pop
fmuls
out
xor
jmp
cmp
add
adc
cwtl
xor
ljmp
jae
and
xlat
sbb
nop
add
scas
decb
into
dec
sub
add
add
movsb
mov
enter
push
adc
xchg
pop
mov
test
push
decb
pop
pushf
fdivr
in
aam
mov
add
add
add
insb
sub
add
aad
int3
mov
movb
leave
addb
jg
dec
cmp
pop
add
test
cmp
add
add
cmpsb
in
jmp
addl
lds
xchg
dec
and
clc
dec
sub
jg
sub
lds
mov
pop
ss
mov
js
sbb
cmp
mov
lds
pop
lcall
mov
add
jmp
and
jmp
aam
adc
mov
pop
fdivl
jmp
mov
mov
add
decb
lahf
repz
out
jmp
sub
andb
incl
sbb
mov
pop
cli
call
adc
adc
in
add
lahf
outsb
jae
inc
mov
maxps
push
cmp
pop
out
add
jmp
imulb
pop
add
mov
mov
std
je
scas
add
push
sbb
test
push
into
decl
mov
mov
std
push
sbb
div
mov
cli
jne
out
cmovno
mov
xor
sbb
pop
cmp
and
push
add
out
icebp
add
test
push
mov
push
call
pop
lahf
inc
je
mov
inc
incb
xchg
daa
call
pushf
xor
out
xor
jp
add
or
xor
jbe
cmpl
mov
sbb
gs
in
push
push
test
pop
pop
sub
pop
add
mov
and
jno
add
sahf
sbb
jmp
sbb
mov
aas
push
imul
cmp
push
int3
sub
xchg
jo
out
adc
popf
mov
js
cmp
je
mov
rclb
testl
and
add
lret
test
mov
add
add
js
shlb
enter
mov
or
imul
mov
ja
xor
jae
rorl
push
cmp
lock
pushf
mov
andl
mov
ja
popf
rcl
pushl
ret
sub
out
fwait
fucomip
xchg
repz
scas
jmp
pop
sbb
inc
sub
sub
test
add
cmpb
inc
rolb
push
inc
jmp
jnp
jmp
adc
add
inc
xor
add
call
adc
mov
push
add
jmp
adc
mov
or
jmp
adc
inc
imul
push
scas
push
fisubrs
aaa
add
decl
dec
es
ljmp
scas
incl
arpl
pop
push
addl
fistl
push
push
add
gs
sub
pusha
mov
jmp
push
jmp
stc
call
cmpsl
out
xor
sbb
pushl
push
push
jns
adc
decb
out
sbb
jne
xor
add
cld
mov
pop
pop
icebp
inc
push
mov
jmp
or
xlat
pushf
pushf
cli
add
sbb
jecxz
orl
sahf
fisubs
mov
repnz
inc
mov
xlat
pop
fisubs
add
sbb
mov
subb
lahf
dec
sub
movsb
jae
add
dec
test
sbb
mov
mov
add
add
sbb
mov
and
jmp
push
adc
add
push
add
add
mov
aad
adc
sub
lcall
adc
add
add
sbb
scas
sbb
mov
add
clc
insb
xchg
nop
sub
cld
shll
ljmp
xor
add
sti
imul
dec
push
sbb
xlat
add
icebp
add
call
ret
subl
movb
scas
mov
call
out
xchg
add
jmp
shl
sub
clc
mov
adc
rcrl
stos
ret
jp
add
jmp
aam
jmp
jmp
fsub
call
add
cmp
jp
cmc
adc
push
into
adc
jne
xchg
cmpsb
std
jmp
cmp
mov
es
lods
add
addl
imul
inc
icebp
xchg
addr16
fstpt
add
add
cs
push
outsb
add
decl
out
cmpsl
dec
clc
insl
and
add
in
mov
cmpl
push
jns
push
inc
xchg
push
add
jb
cmc
out
outsl
add
call
adc
test
push
mov
mov
cmpsl
testb
cmpsb
out
add
add
inc
pop
std
push
test
testl
sbb
add
add
hlt
jnp
add
add
pop
incb
xor
push
push
sbb
add
xchg
fs
sbb
imul
add
jnp
mov
mov
scas
inc
std
sbb
and
inc
pop
xchg
inc
je
mov
xor
sub
arpl
or
adc
xchg
push
decb
pop
or
xor
cld
movl
imulb
mov
ljmp
or
sub
add
std
lock
lock
jge
sbb
add
adc
mov
orl
aas
adc
add
scas
xchg
sbb
mov
add
jb
addb
sub
cmp
add
jo
call
pop
pop
push
cmc
adc
add
inc
dec
imul
inc
mov
jns
mov
add
jmp
sub
mov
jne
iret
ds
add
jmp
adc
mov
stos
cld
mov
pop
mov
lock
mov
adc
add
add
add
jmp
mov
call
ja
pop
or
call
add
or
cmp
mov
add
jmp
dec
cmp
add
cmp
push
test
aas
xor
es
ljmp
ret
jns
push
into
cmpsl
pushf
pusha
decl
out
push
stos
test
add
call
fcmovnbe
push
test
call
fcmovnbe
cmpl
adc
jl
add
decl
fs
jle
push
sbb
adc
decb
push
fcmovnbe
clc
test
jle
xchg
pop
mov
add
pop
in
mov
hlt
testl
add
sbb
push
mov
jnp
xchg
sub
add
stc
mov
je
add
js
clc
lcall
add
cmp
add
push
sub
pusha
insl
jmp
lcall
sub
cvtpi2ps
add
hlt
test
std
mov
cmc
add
daa
lods
cmp
int3
sbb
add
pop
add
add
add
add
test
add
or
cmp
add
enter
movsl
and
and
test
mov
mov
iret
pop
add
sbb
mov
or
and
rorb
jmp
jge
add
add
xchg
and
pop
sub
cmp
add
cmp
add
out
les
sub
add
sub
sub
add
insl
fistl
lret
leave
call
or
sbb
popf
and
mov
aad
add
mov
jge
idiv
or
adc
adc
pop
push
les
into
add
jae
ds
push
call
in
xchg
push
pop
cmp
xor
shr
sub
mov
add
adc
lcall
dec
pushf
sbb
outsb
add
xchg
punpckhbw
outsb
add
inc
stc
add
jae
std
adc
movsb
pop
std
leave
in
dec
mov
jge
or
add
or
and
dec
cmpb
out
add
xor
incb
loop
adc
fldl
xor
mov
add
xchg
scas
add
pop
xchg
popa
xchg
inc
ds
or
les
xchg
imul
and
testb
sbb
test
adc
add
add
xchg
xchg
sub
mov
cwtl
sub
lret
subb
add
and
mov
enter
fnsave
test
push
pushf
xor
add
dec
and
dec
pop
and
cmp
lcall
bound
add
lods
orl
mov
outsl
shrb
cwtl
add
shrb
add
in
fistpl
cwtl
sbb
sub
pop
mov
mov
or
cwtl
adc
jmp
and
cmpsb
add
mov
lods
sbb
out
xchg
cld
sbb
cld
fsts
aad
sbb
test
xchg
adc
popf
sahf
jmp
add
sbb
insl
push
xchg
add
mov
mov
aaa
jle
adc
shl
adc
add
mov
adc
inc
push
push
mov
lcall
pop
andl
add
inc
mov
mov
notl
ja
cwtl
pop
jae
aaa
xchg
or
sar
sub
test
imul
dec
inc
adc
push
add
mov
je
mov
jne
jne
mov
or
inc
imulb
mov
dec
insb
add
leave
cmp
add
je
std
dec
cli
call
cmp
dec
cld
lea
cld
call
lea
jno
mov
rolb
mov
add
push
mov
ror
mov
das
incb
rclb
out
jno
rolb
scas
pop
stc
add
cmp
repz
sub
and
add
faddl
cmp
out
and
or
or
inc
repz
movsl
cmp
pushf
xchg
mov
nop
pushf
add
add
pop
inc
inc
dec
sub
sub
lcall
into
sub
out
sub
mov
lods
cmp
fwait
lods
add
pop
sahf
enter
adc
je
add
lcall
cmc
pop
sub
jg
add
add
lods
call
add
sub
mov
jno
lahf
shr
popf
ljmp
sbb
jo
roll
mov
sbb
cmp
xchg
lret
sbb
mov
nop
fildl
dec
xor
add
jle
xchg
or
call
pop
pop
mov
adc
add
mov
push
cs
orb
cltd
insl
out
pop
mov
cmc
call
cmpb
push
cltd
adc
mov
add
orb
insl
clc
push
mov
adc
push
pusha
rolb
cld
sbb
aas
jmp
add
mov
jns
jmp
jp
out
add
roll
sbb
push
insb
test
out
das
sbb
popa
push
sbb
cmp
sbb
jo
add
sub
mov
jmp
adc
dec
out
out
pop
popa
add
sbb
add
jp
subl
xchg
out
jne
xor
leave
call
jmp
movups
mov
or
leave
insb
call
sub
add
add
les
add
or
xor
andb
add
mov
add
add
arpl
incl
add
movsl
outsl
push
lea
push
call
add
mov
add
pop
test
mov
stos
lcall
sub
notb
add
fisttpl
adc
lea
aas
or
sub
and
or
dec
stos
test
aas
jo
adc
add
add
repz
push
cmp
push
sub
leave
or
add
shrb
mov
sub
je
out
pop
and
test
add
mov
nop
cmp
or
insl
or
push
push
test
mov
cmp
add
jle
adc
and
pop
mov
out
xchg
in
add
mov
add
mov
mov
add
sub
js
enter
adc
adc
jo
rorl
out
pop
add
push
sbb
adc
add
test
xchg
xchg
cmp
bound
out
cmc
adc
jae
adc
push
inc
pop
jmp
add
jmp
aam
cmc
adc
fsts
pop
dec
adc
jmp
sub
in
add
sbb
addr16
rcll
cld
adc
cmpsl
loopne
xchg
into
jo
xchg
mov
sbb
push
adc
insl
ja
call
xchg
pusha
and
jp
push
jne
push
call
sbb
adc
add
add
std
xor
sbbl
out
and
call
and
andb
out
decl
jp
push
push
inc
stos
and
and
ljmp
sbb
aas
imul
into
add
cmp
inc
push
dec
std
rorl
add
incb
mov
out
add
std
incl
pop
sub
add
add
xchg
popf
fisubrs
sub
push
sahf
ficoms
shlb
fmuls
add
leave
subb
sub
add
jg
push
shl
test
pop
xchg
jle
push
sub
lea
fisttps
pop
cmpsb
mov
or
sub
add
cmp
add
pop
aam
xchg
push
adc
pusha
out
or
xlat
addr16
lcall
pop
cmpsb
shr
sar
adc
lcall
push
fwait
mov
jnp
pop
jle
xchg
sbb
adc
inc
jo
add
aad
mov
mov
add
add
add
add
ret
rolb
add
add
add
sbb
add
add
inc
cmp
jmp
adc
xor
nop
insl
movsl
adc
jle
add
add
pop
add
add
out
mov
jmp
sbb
add
lret
xchg
or
aam
or
sub
pop
mov
inc
add
or
add
fldl
in
add
enter
push
inc
int
nop
jnp
in
jb
add
add
adc
mov
mov
mov
adc
repnz
add
jmp
jg
aas
and
jne
and
push
adc
jmp
ja
pop
add
aaa
pushf
push
mov
ds
or
add
or
incl
ds
push
cs
shlb
xchg
add
lods
fildl
out
add
push
mov
push
push
or
out
jp
test
das
jp
inc
cmpl
setne
mov
push
sub
add
xchg
clc
outsb
add
push
add
and
cmp
xchg
popf
fsubrp
pop
sbb
call
xchg
pop
lea
xchg
popf
fidivrs
sbb
push
mov
sbb
push
mov
sub
pop
sahf
or
sbb
repz
out
sub
push
inc
xchg
add
popf
xchg
std
fmuls
jle
sti
pushf
add
pop
sbb
xchg
xlat
pushf
inc
push
xchg
fs
mov
xchg
and
movsb
xor
mov
inc
xor
out
nop
push
sbb
mov
mov
add
stos
jo
jns
jno
fildl
add
call
add
add
adc
cmp
pushf
add
add
or
pop
add
sub
shr
fildl
add
add
or
fildll
lock
int3
mov
xor
adc
adc
jmp
add
push
out
mov
xor
mov
push
call
notl
add
test
lds
repz
lcall
or
out
adc
add
mov
push
xorl
inc
pop
stos
adc
push
adc
js
mov
or
lret
outsb
in
mov
push
bound
iret
add
inc
mov
add
adc
jne
sbb
mov
in
or
mov
and
pop
cmc
xorb
scas
adc
jbe
adc
xchg
test
cmpb
divl
testl
push
add
fmuls
push
adc
sti
xor
xchg
inc
iret
je
or
dec
adc
lds
add
adc
testb
mov
add
pop
aaa
dec
add
push
push
movsl
jl
push
jge
add
enter
jne
xor
add
rolb
push
jmp
adc
out
xchg
shrl
dec
dec
or
push
out
add
or
sbb
mov
add
stc
aas
pop
cwtl
inc
or
sub
add
rclb
mov
cmp
mov
ss
add
sbb
daa
call
adc
orl
repnz
fwait
stos
add
pop
das
fimull
cs
push
sbb
or
add
pop
sbb
mov
dec
sub
jmp
cmp
scas
lret
pop
add
add
enter
out
adc
sub
ss
rcrb
roll
jmp
cltd
js
sub
add
fists
jmp
sbb
push
lea
mov
inc
in
sbb
faddl
add
sub
add
xchg
and
pop
dec
out
or
out
inc
inc
lds
bnd
add
popf
push
imul
xchg
lahf
adc
lahf
hlt
add
and
adc
test
mov
and
dec
adc
test
scas
cmc
cmp
or
mov
xchg
fs
sahf
sbb
jmp
adc
cld
sub
jecxz
adc
mov
lahf
adc
add
and
add
add
add
add
sbb
cmp
fsts
mov
in
and
sbb
test
popl
sub
aad
lock
add
mov
imul
test
notb
push
mov
add
imul
dec
or
les
add
dec
and
imul
and
imul
add
jne
lds
add
cmp
or
cltd
jns
add
cmp
mov
jns
mov
imul
mov
add
sub
decl
mov
mov
fistl
mov
add
outsl
inc
add
outsb
ja
xchg
xor
add
pop
sahf
push
and
roll
add
sbb
adc
cs
jno
mov
push
pusha
in
add
add
sbb
xchg
aas
pop
cltd
int
insb
faddl
add
inc
mov
ja
mov
pop
add
add
pop
sbb
adc
add
mov
sbb
cltd
sub
call
lock
scas
jns
fsubrp
addb
add
add
std
jg
cli
call
hlt
stc
jo
sbb
inc
sbb
aas
jg
sbb
shlb
sbb
jmp
add
lods
jno
xchg
adc
cmpsb
add
mov
add
clc
cs
jmp
fs
ret
sub
lock
add
test
test
sbb
add
add
add
add
inc
sar
adc
jmp
push
xchg
fisubrl
icebp
adc
test
popa
or
add
jmp
adc
lcall
jae
adc
mov
adc
xchg
ljmp
nop
adc
out
jge
cmpsl
sbb
add
cmp
ljmp
stc
addb
jle
movsl
jae
add
add
mulb
add
daa
cmc
add
test
out
out
add
sbb
incb
out
inc
add
ret
mov
iret
ret
dec
inc
out
add
add
stc
jb
jle
ret
vmread
or
or
je
cs
push
in
xor
mov
push
pop
xchg
ljmp
dec
push
mov
std
xor
lods
cmc
std
mov
add
xchg
jle
cmpl
ja
movhps
push
adc
sbb
setle
xor
sbb
ret
scas
push
fmuls
jne
cld
out
out
sub
xorl
add
xlat
fdivrs
adc
pushf
add
in
pop
sub
add
add
ret
pushf
test
cld
dec
pusha
push
adc
sbb
push
pushf
insl
sub
ljmp
sbb
add
cld
ret
mov
mov
xor
adc
sub
or
rol
call
loopne
xchg
shlb
int
pop
jne
dec
pop
ja
sti
loope,pn
adc
jmp
adc
or
and
faddp
les
push
dec
xchg
test
xchg
rolb
sbb
ret
test
scas
inc
adc
pop
add
pop
push
xorb
add
add
jne
popa
adc
mov
add
push
sbb
std
aam
leave
inc
inc
cmpsl
add
jmp
aam
test
xchg
mov
std
push
sti
sbb
jmp
push
lret
adc
mov
jnp
or
push
imul
push
dec
dec
pop
mov
test
in
shl
inc
or
xchg
dec
sbb
jle
pop
stos
add
mov
jno
lods
sbb
je
aam
ret
adc
push
ret
inc
cmc
push
ret
arpl
jne
in
pop
or
push
in
std
jne
jle
cld
sub
dec
push
mov
jns
cld
sahf
pop
je
sub
adc
pmullw
out
enter
push
mov
jb
mov
nop
add
add
xor
adc
in
inc
or
and
jbe
add
std
notb
mov
mov
pop
mov
pop
xor
std
incb
jmp
aas
pop
pusha
sub
push
stos
aas
add
mov
aam
imul
add
and
sbb
fisubl
add
sub
testl
adc
mov
jg
add
outsb
rclb
mov
nop
pop
add
and
out
aas
pop
outsb
inc
jae
je
iret
or
add
inc
je
es
add
jp
std
loop
les
jg
dec
decl
out
xor
mov
mov
add
and
repz
push
mov
lea
add
dec
ficoms
out
test
inc
sbb
andl
out
out
mov
cmpsl
add
leave
sub
mov
bound
in
test
add
adc
into
or
movb
shll
jg
add
inc
or
jmp
add
in
call
clc
fisubs
orl
add
inc
jmp
xchg
jl
call
xor
std
mov
call
dec
push
inc
add
add
adc
push
push
rclb
test
daa
stc
std
push
pop
call
adc
inc
add
lar
test
in
gs
add
in
addr16
nop
repnz
jmp
sti
pushl
push
and
outsb
popl
in
les
test
jmp
mov
add
js
mov
mov
mov
sti
pushl
sub
popa
add
aaa
movl
bound
push
inc
mov
xor
imul
mov
mov
sub
add
lcall
mov
push
mov
jno
pop
jmp
xchg
jmp
mov
push
shlb
xchg
std
push
outsl
inc
or
mov
std
das
cmpsl
add
xor
jae
jae
rorb
sub
xlat
or
mov
incl
imul
add
sub
sub
pop
xor
hlt
lahf
or
add
mov
inc
lret
xchg
mov
xlat
mov
ret
mov
lods
cld
push
mov
lcall
mov
add
pop
repz
add
or
jb
sti
aam
add
out
pop
jg
add
push
adc
push
std
inc
pop
push
add
das
lret
pop
test
repz
data16
sbb
add
add
das
daa
in
push
das
pop
push
xchg
repz
insl
pop
cmpsb
jmp
idivl
add
ret
inc
xor
ret
push
push
push
pop
adc
add
hlt
pop
and
in
pop
sti
aam
add
add
xchg
mov
adc
cs
fstps
pop
add
imul
fstpl
add
cs
sub
adc
or
fisttps
push
pop
enter
and
push
push
les
subb
add
xor
jmp
fadd
adc
and
shll
mov
sti
jmp
addl
jp
divb
and
inc
in
and
jae
std
sbb
add
jecxz
cmp
cmp
leave
mov
and
add
std
xor
movsl
jmp
jne
in
in
jmp
out
adc
call
mov
add
sbb
xchg
push
cld
or
or
add
adc
mov
notl
sub
inc
add
cld
or
push
divl
je
repz
outsl
sbb
sbb
add
pop
mov
cmp
jae
mov
push
mov
xchg
add
pop
jmp
clc
sbb
ret
push
les
std
rcl
add
cld
mov
cld
adc
inc
add
mov
cs
stos
loop
inc
inc
sbb
out
jmp
jne
add
add
add
cmp
scas
adc
push
mov
fiadds
sub
xor
jmp
mov
add
repz
rorl
sahf
div
push
lcall
ja
sbb
ja
sbb
jb
div
cmp
inc
out
push
cmpl
or
adc
inc
adcl
repnz
shll
out
out
out
add
out
aam
pop
mov
add
cs
pop
jge
jbe
lock
xlat
adc
mov
loop
add
cld
mov
mov
es
or
mov
jns
incl
pop
cmc
jae
stos
adc
aam
add
sub
mov
mov
nop
in
push
cmc
add
in
jae
mov
add
aaa
add
mov
mov
std
cld
xchg
xchg
shll
std
nop
xchg
add
jmp
sbb
jge
fdivs
pop
clc
ja
add
test
xchg
mov
jno
dec
push
adc
mov
aad
sbb
jae
mov
in
cli
icebp
clc
test
stos
push
xchg
sbb
and
sub
mov
inc
cld
sbb
or
insb
fildl
ret
inc
bound
jbe
mov
add
xlat
mov
ret
sti
andl
add
jno
mov
std
pop
mov
add
xchg
jl
or
mov
or
mov
inc
hlt
inc
sar
jmp
cli
jae
and
hlt
add
jmp
add
movsl
stc
adc
ljmp
pop
jmp
adc
and
rclb
add
mov
xor
inc
cld
out
push
push
les
sahf
and
cmovo
mov
sbb
leave
ret
push
push
add
push
inc
xchg
int
ljmp
cmp
add
sbb
or
push
jmp
add
add
add
sbb
xor
bnd
jo
mov
out
push
inc
out
sub
adc
dec
movntps
cmpsl
add
decl
stc
stos
xchg
adc
adc
push
mov
mov
push
jb
in
push
cmp
and
or
add
repnz
push
dec
int3
inc
pop
add
xchg
dec
sahf
out
out
dec
mov
jae
aas
add
subl
add
push
add
hlt
flds
jns
call
gs
ucomiss
outsb
fldcw
adc
add
inc
cmc
adc
add
jae
or
adc
jne
mov
push
out
sbb
push
sub
jnp
loope
xchg
stc
std
pop
pop
xor
ret
xor
les
and
inc
push
pop
fsubp
dec
cmp
mov
jmp
mov
cmc
std
add
aas
sti
adc
mov
jb
mov
sub
sbb
std
ss
mov
inc
cld
push
stc
jb
jmp
clc
jno
add
rolb
cmpsb
frstor
mov
add
jno
jns
sbb
cs
xchg
pop
pop
pop
mov
add
and
orl
push
add
call
mov
int3
ret
inc
mov
fstpt
jae
jbe
clc
das
or
clc
xchg
lcall
pusha
aad
push
lods
notb
add
ljmp
push
cmp
into
lods
fbld
pop
data16
pop
mov
stos
flds
xor
int3
inc
add
ret
push
cmpb
xlat
inc
pop
fldt
roll
std
add
adc
pop
xor
add
add
in
loope
sahf
cmc
fwait
rcrl
push
push
adc
add
add
add
add
add
push
outsb
movntps
cmpsl
add
movsb
testl
fildll
lods
mull
add
add
push
outsl
pxor
xlat
and
out
xlat
jbe
imul
add
outsb
flds
xor
jmp
push
cli
out
mov
cmp
lret
cmp
add
add
pop
add
sbb
sbb
pop
inc
add
in
test
test
inc
jmp
lret
xchg
push
add
mov
push
add
jmp
jecxz
or
add
jmp
xor
xchg
jne
fs
cli
xchg
push
add
add
es
push
out
stc
cld
hlt
les
inc
jmp
pop
fadds
add
add
pop
cmc
lods
ret
dec
xchg
lods
loope
push
xchg
add
insl
inc
lock
out
cld
adc
int3
shl
out
add
push
test
xor
dec
push
ret
faddp
inc
inc
push
stos
mov
outsb
inc
fadds
xor
mov
inc
in
add
add
je
aaa
cmp
imul
jle
sti
jne
test
outsb
dec
add
lret
fld
inc
pop
aam
std
or
push
inc
pop
push
push
call
add
in
pop
pshufw
fwait
jne
xchg
xchg
add
lcall
xchg
cmpb
stc
xchg
addb
mov
push
std
popa
jecxz
jbe
cmp
add
fwait
add
push
fildl
negb
add
xchg
addb
pop
jo
mov
sbb
adcl
pop
add
fildl
std
add
jnp
orb
xchg
push
jge
or
xchg
push
xchg
jle
fstpl
icebp
icebp
mov
das
push
scas
push
add
xchg
add
xchg
add
jns
loopne
ret
incb
imul
sbb
and
repz
jl
fidivrl
mov
xlat
sti
push
pop
add
jl
pop
out
shr
ja
ja
icebp
inc
push
jo
mov
test
imul
shll
out
inc
and
jmp
rcrl
add
add
jns
movsl
xchg
ret
xor
call
in
invd
add
out
adc
outsl
push
imul
aas
fcoms
adc
cld
clc
in
adc
and
and
jmp
jmp
out
lds
fldenv
push
fiadds
inc
jp
push
decl
aad
jg
add
add
jmp
fprem1
jmp
hlt
and
add
jne
xchg
scas
jg
jle
inc
add
add
adc
les
sti
leave
insb
or
push
push
dec
out
inc
ds
sti
adc
lods
mov
add
insb
mov
insl
in
cmpl
push
mov
push
push
add
inc
add
mov
test
push
jae
add
inc
jl
xor
add
fistl
rorb
push
sub
movsb
inc
add
test
mov
ret
xchg
add
mov
sbb
fldt
push
je
call
or
push
je
mov
rcr
add
add
cli
rcrb
push
decl
fildl
or
popf
pop
rorb
mov
repz
pusha
xlat
inc
fidivrl
pop
and
jp
push
mov
mov
out
inc
pop
out
xchg
push
xchg
adc
adc
aas
out
stos
jl
dec
je
adc
faddl
jg
add
pop
add
jecxz
daa
add
inc
xor
ja
mov
pushf
test
pop
add
in
inc
pop
jmp
xchg
add
add
push
pop
add
push
repnz
push
movntq
jle
fsubrp
add
push
je
jmp
out
addr16
xor
loop
call
adc
add
push
jmp
addl
jmp
add
fldcw
jmp
add
jmp
xchg
add
jmp
adc
jmp
fimull
xor
push
cmpsl
loopne
mov
jns
xchg
aas
cmp
jmp
shl
pop
pusha
xchg
call
cld
out
pusha
xchg
call
xlat
push
mov
cmp
push
mov
outsb
es
add
dec
mov
stc
lret
scas
add
push
test
add
scas
dec
adc
jle
mov
sahf
aad
push
jecxz
nop
add
push
in
mov
add
push
sti
xlat
mov
std
pushl
add
int
std
ljmp
inc
add
scas
decl
out
data16
add
add
push
push
cmpsb
incl
add
jge
add
fildl
push
shrb
inc
fstpt
test
add
inc
inc
mov
adc
add
pop
mov
add
pusha
jg
push
fildl
xchg
stc
mov
sub
pop
fldl
add
lret
rolb
push
fildl
mov
or
add
fldl
add
xchg
fucomp
pop
fstpt
std
flds
add
jnp
and
add
pop
cltd
std
decl
aad
sti
add
add
add
push
ljmp
xchg
js
jmp
mov
mov
push
sbb
fwait
adc
dec
jmp
dec
cli
arpl
jg
jecxz
pop
mov
xlat
xchg
fucomp
addl
add
add
in
add
dec
insb
test
adc
add
ficompl
xor
push
sti
stc
out
xchg
sbb
pop
ja
sbb
call
lods
add
out
pushf
ds
sti
clc
je
add
inc
add
inc
ret
jns
or
cmpsb
nop
call
adc
xor
repnz
push
inc
push
std
mov
and
add
add
sub
sub
push
pop
std
addb
addr16
popa
sbb
or
clc
sbb
call
loopne
inc
jmp
mov
add
push
fidivrl
jmp
in
imul
loop
add
aam
out
dec
push
mov
adc
dec
push
imul
ss
fdivs
mov
push
push
pushl
jg
ret
mov
inc
or
addb
lea
sar
jle
sti
adc
add
or
les
std
pop
aad
or
sub
out
mov
and
sbb
cld
call
lcall
pop
sub
fldl
push
add
sbb
je
lret
push
push
add
sub
jno
js
daa
xchg
dec
std
imul
clc
add
add
sub
fprem1
xor
dec
xorb
jnp
xor
jns
mov
data16
addr16
add
in
and
les
push
push
cmc
inc
stc
imul
in
das
shl
shll
push
in
push
xor
adc
fnstcw
ret
in
add
and
outsl
cld
mov
sub
push
out
scas
pop
mulb
or
xlat
push
lret
inc
or
jp
ds
cmp
inc
pop
xchg
outsl
adc
xor
cmp
push
fcmovb
push
lds
jg
movsb
out
adc
fildl
sbb
jmp
pop
outsl
test
add
lea
mov
jb
pop
test
lea
sub
add
add
xchg
push
adc
add
or
cmp
sbb
mov
pop
cmc
pop
mov
sbb
mov
sti
mov
mov
faddl
stc
pop
mov
movsb
add
mov
es
mov
clc
icebp
orb
aad
sub
data16
inc
push
and
fisttpll
ljmp
subb
outsb
push
mov
fldenv
cmp
sub
in
lahf
lcall
mov
sti
mov
mov
add
add
mov
xor
inc
sbb
mov
push
push
call
and
dec
cld
mov
xchg
mov
cmp
jle
add
leave
xor
jne
in
push
dec
inc
add
ljmp
add
sarb
xor
push
in
mov
mov
incb
sub
ss
sbb
mov
jae
je
inc
and
loopne
cmc
iret
push
inc
in
fidivrs
add
ljmp
jmp
std
dec
dec
loope
cmove
push
add
dec
test
sub
inc
mov
push
xor
mov
add
shrb
add
sub
add
mov
call
add
push
push
pop
mov
xchg
ljmp
xchg
or
push
adc
and
out
pop
mov
jecxz
or
testl
and
dec
mov
add
and
inc
add
jmp
daa
add
add
push
leave
mov
in
add
shl
aam
jmp
inc
andb
cmp
jmp
sbb
shll
andl
fsubs
adc
or
mov
inc
add
andb
mov
pop
xchg
xchg
sbb
jg
sub
add
lcall
add
adc
jne
add
mov
je
mov
or
repnz
pushf
aas
fsubl
loop
into
inc
cli
mov
mov
repnz
or
jb
fiadds
popf
mov
call
cmp
sti
mov
call
add
incl
ljmp
push
ret
add
add
loope
add
mov
or
lods
lds
pop
push
xchg
inc
push
call
cmp
loop
das
rolb
mov
push
push
xchg
inc
add
lods
sti
call
hlt
mov
bound
pushf
fcmovnu
std
mov
or
or
or
add
add
hlt
cwtl
or
mov
push
dec
adc
mov
not
or
jno
adc
cmp
mov
mov
not
or
jns
adc
adc
pushf
sbb
ljmp
or
xor
adc
pop
dec
push
pushf
cli
ret
or
mov
stc
add
and
push
dec
pop
lea
lds
insl
or
mov
jecxz
or
jo
decl
ds
std
mov
lds
jecxz
or
pusha
xor
adc
test
xchg
les
or
mov
mov
das
mov
imul
sahf
jb
mov
cld
repz
jmp
sbb
cmp
lret
inc
sbb
dec
fiadds
mov
lods
sub
mov
ret
xor
push
push
fisttps
xor
inc
push
in
add
test
cmp
stc
jne
das
push
out
add
std
bound
icebp
push
jecxz
add
out
add
movl
cmpsb
add
sbb
loope
shll
and
add
std
aam
repnz
jmp
enter
adc
inc
pop
adc
push
rcll
jmp
push
iret
push
adc
push
mov
adc
push
leave
sub
add
sarl
stos
add
add
inc
add
repnz
jnp
add
ss
push
popa
shlb
adc
std
test
mov
add
out
cld
incb
sti
push
mov
jae
jmp
mov
cmp
inc
add
popa
add
add
mov
iret
mov
fldl
pop
jmp
jmp
pop
rolb
xor
rcrl
or
or
add
jmp
dec
out
lock
push
jmp
add
add
les
pop
loopne
mov
scas
call
out
aas
add
add
or
pop
ss
in
adc
add
jae
rcrl
es
sbb
inc
pop
pop
std
or
daa
add
in
push
add
das
sahf
add
stos
add
add
addb
add
add
test
je
mov
out
pop
xchg
pop
jle
push
mov
push
aad
dec
inc
aad
in
inc
aas
aam
pusha
jmp
aad
jmp
sarl
add
ds
add
ljmp
cli
dec
jg
movb
xor
dec
ja
add
add
push
add
add
sbb
std
aam
rcll
dec
out
fs
sar
inc
mov
popf
call
dec
cmp
sub
in
push
adc
mov
sbb
ret
mov
fisttps
mov
fwait
inc
or
int3
cmc
mov
pusha
lock
add
std
insb
cwtl
fsin
mov
mov
std
call
add
add
into
call
mov
mov
in
adcl
call
adc
or
inc
mov
pop
mov
xchg
cmc
cmp
or
mov
xchg
xchg
cmc
sub
pop
or
xchg
je
dec
inc
or
std
test
add
adc
popw
sti
decl
pop
adc
sub
mov
or
movl
test
xchg
subl
xchg
std
out
rolb
mov
cmc
lds
pop
testb
shlb
flds
ss
sahf
movsl
aad
pop
les
add
xchg
int
lret
xchg
add
in
std
add
in
xlat
jae
add
pusha
push
or
rcl
std
popf
lock
xchg
sub
mov
cmpb
push
and
adc
or
mov
mov
pop
ret
adc
mov
push
cmp
pop
add
adc
adc
fst
mov
or
fimuls
pop
add
push
call
and
popa
dec
sti
add
adcl
xchg
mov
jb
or
addl
mov
jo
push
xchg
dec
out
xlat
movsl
incl
inc
hlt
les
fimuls
fcmovb
mov
xchg
sarl
sbb
pop
roll
cmp
fiaddl
jmp
jp
in
leave
push
or
cli
push
pop
add
out
cli
add
push
pushf
test
std
push
shlb
and
in
repnz
aam
fxch
mov
add
sub
sub
push
or
pusha
int3
std
push
popf
aas
or
xlat
int
in
add
icebp
sbb
jmp
jne
divb
out
push
and
dec
push
and
cmp
std
into
dec
jp
add
stos
mov
and
cmc
cli
pushl
xor
mov
cli
test
jne
pop
pop
lods
cli
call
jge
mov
add
dec
add
push
mov
sti
or
lds
call
lock
jle
outsb
add
jo
idiv
jae
jp
add
add
pop
and
add
and
jp
or
out
push
lret
fisttps
leave
fsubr
pop
jae
nop
inc
add
flds
add
fs
call
lcall
es
fs
add
cltd
add
pop
xchg
mov
loop
mov
in
add
call
pushf
or
add
pusha
addr16
loopne
xor
ljmp
xlat
fmuls
adcl
push
push
flds
mov
lods
mov
add
outsl
cmp
jnp
jle
in
pop
cmp
adc
xchg
cmp
mov
jle
andl
shr
cwtl
inc
add
fwait
ret
fildl
out
add
jns
push
jnp
jle
push
pusha
cmp
jns
sti
xchg
cmp
jle
std
outsl
cmp
jns
sti
xchg
mov
mov
loope
daa
hlt
fmul
cld
aaa
or
xchg
jno
push
add
jle
stc
jmp
fidivrl
iret
mov
lahf
iret
jae
test
add
test
and
mov
cmp
rol
jae
add
cwtl
shll
push
sub
sbb
adc
addl
push
inc
scas
aad
outsb
in
add
adc
std
aad
jnp
leave
js
push
into
std
push
insl
call
scas
aad
cs
push
dec
jne
call
adc
mov
test
sti
call
rorb
cs
inc
adc
cmpsl
fisttpll
call
std
lds
xor
or
adc
je
xchg
add
out
mov
call
cld
xor
dec
rorl
adc
add
je
and
inc
adc
scas
decl
add
cmpsl
cmp
push
lahf
std
incl
dec
mov
add
int
in
das
fiaddl
add
dec
rcll
roll
add
fnstcw
inc
out
mov
sbb
test
add
pushf
sbb
jp
adc
icebp
push
popa
rcrl
fnstcw
jb
test
std
sti
incl
jae
pop
cmpsb
call
mov
mov
fnstcw
add
pop
mov
std
mov
fisttpll
outsl
sbb
std
sbb
out
pop
test
push
adc
jl
jl
fistl
push
fistpl
out
mov
or
push
movsl
test
aaa
adc
rcrl
les
into
outsb
add
jle
pop
inc
pop
xlat
sbbb
jnp
xor
add
mov
icebp
pop
add
fisubl
outsl
ror
insb
les
imul
jg
pop
sbb
fistpl
test
jmp
outsb
add
jmp
add
sub
xchg
gs
jmp
pop
or
jmp
add
inc
lock
out
mov
adc
add
jae
add
fldcw
and
dec
mov
daa
lret
pop
inc
lock
dec
cmp
mov
push
jb
lret
adc
imul
lods
cmp
hlt
lock
aas
jmp
push
push
or
mov
lods
push
outsb
add
dec
inc
in
idiv
mov
add
cmp
cmp
mov
nop
add
inc
ds
in
das
adc
cmp
mov
mov
push
dec
lock
add
notb
call
test
mov
add
ds
ret
jge
pop
ret
sbb
push
or
mov
call
pop
fs
xor
push
sub
add
xchg
inc
add
stc
out
aaa
add
sub
pop
add
adc
dec
insl
jmp
or
add
call
dec
add
push
idiv
loope
repz
push
fnstenv
jmp
pop
adc
pop
test
out
pop
into
fwait
js
sbb
inc
or
shlb
rorb
leave
push
data16
sahf
push
fnstcw
add
cwtl
fsubs
pop
add
js
fstps
jns
fldcw
outsb
add
shrb
add
outsl
out
pop
adc
fstpt
call
rcrb
popf
mov
testl
xchg
iret
insl
out
lahf
repz
popf
std
out
sbb
es
aas
xor
fiadds
dec
and
xchg
xor
es
or
add
mov
add
inc
in
imul
int
or
sub
test
xchg
ret
dec
inc
cld
stos
xchg
mov
jnp
call
mov
push
int
das
mov
into
cmp
out
std
xchg
ret
cltd
mov
add
add
push
fimuls
rclb
rol
adc
sub
ds
jno
and
imul
test
add
test
mov
inc
add
add
in
add
cli
jo
mov
call
sub
add
or
or
or
mov
cmpl
dec
cmpl
in
add
add
mov
repnz
adc
push
lds
xchg
sti
dec
add
mov
call
cmpb
incl
xchg
test
inc
pop
hlt
out
add
add
clc
test
fistl
pusha
pop
add
jns
ret
ret
cmp
add
cmp
shll
std
add
test
aas
pop
pop
rorb
push
pop
adcb
shrl
ds
xor
pop
in
ror
jl
adc
imul
inc
push
popa
cmp
scas
sub
les
movsb
ds
pushf
sub
test
add
inc
adc
pop
das
rorl
push
add
xchg
fsubs
sub
fdivrs
mov
dec
push
pop
pop
sub
fwait
pop
add
sub
xor
cli
ds
stos
add
jp
std
jno
outsl
adc
jb
daa
dec
adc
daa
fsubrl
mov
sbb
or
shll
pop
jle
dec
xor
decl
in
pop
out
inc
xchg
xor
cs
inc
pop
test
add
mov
push
out
mov
add
call
jb
or
dec
enter
mov
add
ljmp
loope
add
pusha
loopne
mov
mov
xchg
fnstsw
notb
adc
imul
inc
sbb
xchg
or
sbb
sub
mov
mov
push
cli
add
add
cmpb
push
push
jb
enter
ss
andl
jne
sahf
inc
sbb
dec
mov
add
or
sub
or
clc
pushl
les
mov
adc
cmp
sbb
idiv
adc
cmp
enter
lcall
data16
inc
and
jns
outsb
push
add
add
inc
and
mov
inc
xor
stos
jmp
and
jge
push
push
and
jg
inc
add
jne
fsubl
std
xor
add
mov
out
divl
inc
hlt
mov
xor
push
add
out
aas
pop
sub
or
out
ret
pop
cmp
rolb
dec
filds
add
cmp
aas
xor
out
ret
out
pop
cmp
rorl
aam
cmp
and
mov
pop
lock
add
mov
xchg
arpl
push
outsl
popa
push
xor
les
ss
ja
push
mov
js
mov
xor
xchg
lods
rdtsc
bound
out
pop
repz
adc
es
fbstp
pop
out
jbe
scas
imul
out
sub
sub
inc
mov
out
fisttpl
stos
sbbb
adc
orb
sub
jmp
sahf
ret
repnz
pusha
jecxz
xor
and
jbe
push
fbstp
inc
xor
mov
mov
add
push
inc
push
stc
cmp
fldt
mov
add
stos
cmc
cli
lret
in
out
lock
loop
out
cmc
dec
fisttpll
sbb
mov
xor
or
rorl
cmc
fs
add
lock
pop
cmp
sub
jo
pop
arpl
mov
push
test
test
bound
cmpsl
mov
cltd
scas
sub
call
into
or
mov
outsb
ret
ljmp
shrb
dec
in
push
mov
push
jmp
push
jg
fcmove
ret
pop
xchg
jg
cld
add
add
cmp
add
jns
call
xor
mov
push
mov
inc
adc
mov
ds
mov
mov
sahf
add
cltd
rcl
jle
shlb
repz
stc
push
xchg
es
cwtl
add
stos
test
ret
ret
aas
stc
cwtl
add
daa
shll
call
into
roll
add
test
aad
pop
test
je
std
ljmp
std
add
sbb
unpcklps
add
stc
push
std
and
sbb
sub
sbb
pop
add
pop
cmp
add
test
pop
mov
inc
add
mov
xchg
mov
add
xchg
jg
insb
add
or
inc
out
cld
mov
inc
pop
add
sbb
shlb
daa
cmp
jg
out
ds
roll
faddl
push
add
pop
cli
adc
adc
add
add
daa
fldt
addr16
hlt
pop
sub
test
or
daa
adc
sbb
pop
out
cmpsb
push
stc
mov
stc
out
adc
pop
dec
pop
out
push
push
nop
jmp
xor
mov
or
sbb
xchg
sub
push
push
add
add
add
sbb
or
push
cltd
push
push
push
add
pop
adc
daa
sti
scas
add
adc
jae
adc
das
out
dec
std
lcall
or
and
ficoms
jo
push
fists
movsl
pop
repz
mov
ret
popf
in
push
not
add
cmpsl
aas
or
add
mov
xchg
mov
clc
pop
add
sbb
sarl
adc
or
push
sti
rcrl
rorl
aas
adc
add
push
arpl
push
jae
pop
push
mov
mov
push
add
ljmp
add
xchg
add
mov
add
mov
decl
stos
mov
and
push
add
cmc
aas
mov
loop
xchg
ljmp
mov
or
fcompl
sub
mov
pusha
test
dec
mov
sub
push
inc
push
es
or
inc
and
enter
out
or
add
leave
or
fcmovnbe
and
pop
mov
xchg
loop
adc
inc
add
push
inc
sbb
or
mov
add
push
mov
push
add
and
shl
mov
push
dec
bound
sbb
repnz
push
mov
dec
pop
mov
push
das
jecxz
add
jge
aaa
sbb
mov
scas
or
pop
pop
lcall
arpl
out
pop
or
stos
jmp
ret
decl
test
repz
pop
rol
jmp
mov
push
ret
push
push
add
and
jae
sbb
adc
cltd
sarl
shll
cltd
jne
adc
inc
in
test
cmpl
adc
imul
adc
mov
adc
mov
cltd
scas
je
sahf
pop
test
call
xor
arpl
jge
dec
add
pop
jae
mov
call
ret
mov
nop
int3
call
push
addb
mov
push
or
rol
xor
imul
mov
rolb
sti
incl
adc
or
ret
test
and
jge
repnz
add
pop
or
cld
or
sub
stc
std
call
icebp
and
icebp
and
nop
mov
je
inc
cmp
icebp
cmp
push
mov
dec
dec
test
mov
data16
enter
push
mov
mov
sbb
add
out
mov
std
incl
and
sarb
add
sbb
adc
dec
sbb
pop
inc
dec
out
loopne
push
stos
mov
inc
sbb
jecxz
pop
stos
push
call
push
jbe
adc
std
inc
das
push
notb
stos
sub
call
int3
cmpsb
push
push
sbb
fstl
test
add
add
pop
test
add
add
sbb
mov
sbb
add
in
pop
dec
dec
xlat
mov
pop
sti
add
stos
fnstcw
call
add
xchg
loopne
sub
sub
sub
mov
pop
jle
xor
sbb
and
fisttpl
shrl
pop
xchg
add
sbb
test
cmp
add
add
adc
stos
xchg
add
add
adc
iret
and
test
movsb
add
add
fs
and
mov
xchg
add
sbb
sub
adc
shl
inc
call
sbb
jmp
ds
gs
add
iret
adc
out
test
mov
arpl
cmp
jge
add
add
mov
js
call
sbb
add
test
add
sub
mov
jge
jmp
lock
xchg
ret
cmp
inc
and
and
jmp
push
inc
mov
andb
add
dec
cli
mov
add
add
and
push
dec
cli
mov
push
mov
push
std
sti
lds
jge
add
je
jb
adc
insl
inc
add
mov
sbb
js,pn
decl
outsl
inc
and
push
dec
push
jge
decb
incb
adc
outsb
ljmp
mov
push
add
fwait
add
add
fwait
mov
sti
outsb
add
pop
and
and
jmp
je
scas
mov
xchg
push
fwait
mov
enter
inc
xor
outsb
aad
mov
aad
mov
xchg
aad
mov
xchg
aad
mov
xchg
aad
test
push
push
jge
sub
and
sbb
pop
or
pushf
xor
incl
and
iret
pop
pop
add
push
call
sub
lahf
insb
jnp
xorl
cmp
lds
cli
add
push
ds
aam
out
xchg
sub
pop
jge
sbb
inc
dec
dec
jb
dec
push
sahf
inc
mov
add
cmpl
add
in
add
arpl
lahf
adc
add
cmc
push
mov
add
sysret
adc
add
cltd
add
lods
sub
out
push
call
fs
sti
into
mov
lods
mov
std
mov
jnp
lea
int3
add
pushf
inc
insl
aam
sub
lods
jae
lahf
xor
lds
mov
sbb
push
push
push
cltd
adc
add
inc
jl
fucomp
adc
out
call
dec
stos
std
es
add
fldcw
add
imul
mov
call
xor
dec
add
out
sub
clc
push
mov
add
jne
call
add
je
and
adc
inc
cmp
push
cmp
call
add
mov
test
cmp
dec
cmpsb
cmc
or
ljmp
mov
jle
or
jo
mov
out
incl
push
repnz
pop
add
add
adc
pop
xor
pop
pop
push
add
adc
add
push
push
sub
fwait
sbb
pop
cltd
add
sbb
out
enter
dec
popf
push
call
mov
mov
add
daa
inc
std
nop
cmpl
xchg
mov
push
fwait
cmpl
xchg
add
xchg
mov
xorb
pop
bound
mov
out
test
push
fwait
push
call
pushf
add
add
lock
mov
lock
push
mov
adc
push
loop
test
call
test
mov
outsb
xlat
sbb
addr16
mov
mov
out
sub
ss
cmpsb
stc
inc
pop
push
ss
mov
lds
push
add
dec
fs
int
pop
das
outsl
ja
pushf
stos
xchg
out
add
dec
jg
mov
les
xor
call
adc
stc
xchg
stos
sbb
jmp
xor
add
sub
test
cltd
rorl
cmpsl
push
or
push
add
xchg
adc
add
lods
jae
xchg
clc
fistl
inc
mov
andb
jno
add
loope
addr16
push
fildl
std
fmull
stos
xorl
mov
enter
or
mov
adc
cmp
add
adc
add
pop
dec
push
decl
ret
lods
icebp
dec
add
test
icebp
sbb
repnz
add
push
push
inc
incl
out
lea
rolb
add
add
scas
add
push
push
call
sub
std
dec
lds
push
addr16
dec
xchg
std
pop
clc
andl
add
or
xchg
cmp
jle
inc
and
jp
jne
cltd
inc
out
cltd
add
mov
int
add
out
push
aam
pop
add
mov
add
or
add
mov
add
add
xor
and
push
pop
and
add
aad
fwait
jl
xor
test
jmp
or
sti
adc
add
adc
jp
repz
sub
jp
iret
scas
adc
inc
add
testb
add
mov
sbbl
pop
popf
ret
inc
adc
add
mov
dec
subl
arpl
mov
hlt
xor
popl
cmp
fwait
cs
sub
or
pop
fiadds
add
add
lods
dec
cli
popa
xor
mov
lock
scas
lods
mov
and
or
mov
push
fsubp
fwait
cwtl
js
add
mov
pop
add
insb
pop
cmc
cmpb
fstl
mov
adc
fsubs
inc
jb
ficoms
fs
aaa
bound
fs
mov
add
push
cmp
jmp
out
jnp
push
testb
push
test
popa
ds
inc
lcall
mov
lcall
add
add
scas
mov
movsl
adc
pop
inc
add
push
cmpsl
std
jmp
cltd
push
sti
incl
mov
pop
pop
push
sub
pop
sub
call
jg
jb
push
push
or
ss
call
lods
fcomip
add
dec
js
sub
mov
testb
add
add
call
stc
aaa
mov
cmc
retw
and
cld
cmp
jo
xor
aad
repz
mov
add
das
add
mov
sbb
mov
inc
arpl
cmp
ficompl
das
or
or
mov
lcall
add
fidivl
jl
adc
rorb
leave
jle
sti
addr16
in
xor
lcall
inc
or
daa
push
add
popf
aad
out
mov
add
mov
add
cli
xchg
jg
add
js
jg
sub
mov
xor
js
add
add
popa
dec
sti
sar
mov
fnstsw
shll
sbb
sbb
inc
std
mov
dec
sbb
inc
xchg
lds
arpl
adc
xlat
and
fs
sar
mov
fstpl
pushf
sub
lods
adc
sti
and
fs
add
dec
repz
jge
cmp
jnp
jle
sbb
add
jnp
bound
pop
stos
mov
and
rolb
loopne
je
arpl
pusha
push
dec
jmp
mov
cwtd
adc
rolb
lods
or
sbb
or
lds
mov
xchg
stos
xor
jge
or
xchg
adc
push
push
mov
add
adc
xchg
dec
shll
outsb
add
data16
add
or
add
scas
dec
push
push
and
lock
cmpsb
xchg
adc
cs
inc
or
mov
decl
xchg
loope
xchg
jle
cld
shrl
dec
xor
xchg
pop
or
rolb
std
inc
mov
xor
mov
and
inc
repnz
jle
mov
mov
jge
pop
stos
add
push
push
sub
add
stos
adc
fistl
mov
movsl
std
fwait
imul
js
movsl
std
or
inc
pop
les
cmp
ja
push
bound
adcl
movsl
std
add
inc
cltd
outsb
pushf
outsb
movsl
std
stos
inc
orl
jnp
add
pop
add
pop
stos
js
repz
mov
xchg
insb
out
push
stos
add
shlb
pop
stos
scas
ficompl
or
jb
stos
pop
lds
add
mov
es
outsb
cld
pop
inc
jnp
inc
jp
jb
inc
xchg
push
add
pop
mov
inc
fcoms
popa
icebp
mov
dec
pop
ret
jecxz
in
push
test
call
lret
mull
js
repnz
add
rorb
in
dec
mov
pop
fstpl
cmp
push
sarl
nop
std
mov
add
std
mov
add
sbb
fcoml
cli
ljmp
adc
add
or
pop
je
repnz
xchg
inc
mov
jbe
inc
or
lods
sbb
call
fidivrl
sub
add
mov
test
mov
nop
hlt
aas
jmp
popf
std
mov
adc
movb
dec
xchg
jge
pop
add
insl
std
or
outsl
jp
add
xor
std
jmp
jp
fcmovu
add
ret
add
lock
add
call
test
xor
mov
push
xchg
addb
pop
rorb
ret
jae
xor
push
sbb
mov
fistpl
ljmp
inc
inc
jne
inc
xchg
add
jne
in
sub
pop
test
stc
xor
jge
xchg
cmc
cmp
pop
incl
mov
daa
les
pop
sbb
insl
dec
and
stos
test
mov
test
test
es
cmpsb
nop
test
inc
add
pop
sti
mov
xor
jo
add
xchg
imul
add
in
mov
out
xor
les
es
and
add
pminub
out
add
in
dec
pop
xchg
sbb
mov
mov
mov
mov
mov
adc
les
call
repz
jno
scas
shlb
pop
add
xor
movsb
add
inc
and
orb
je
test
scas
xchg
movsl
outsl
xchg
mov
jmp
shrb
insb
mov
pop
add
fs
in
pusha
push
out
adc
ret
mov
add
xchg
and
mov
sub
into
xor
or
test
add
xchg
jmp
jmp
inc
adc
add
adc
mov
fs
std
adc
mov
cmp
daa
push
sbbl
ret
leave
add
jmp
add
das
sbb
mov
xchg
je
jbe
and
out
daa
insl
add
pusha
push
mov
adc
add
loop
pmaxsw
addl
out
jg
push
add
inc
and
into
out
sahf
decl
adc
and
fsubrs
std
insl
stos
jecxz
popa
push
mov
test
std
ljmp
sti
and
jle
dec
lea
stos
adc
arpl
mov
cs
outsl
push
xchg
shlb
and
into
out
sub
decl
pop
xchg
mov
add
sti
cwtl
aaa
push
ja
bound
lahf
push
insb
in
call
decl
sub
and
stos
adc
or
nop
stos
add
dec
mov
fcomps
jno
mov
push
or
push
mov
mov
sub
sahf
add
xchg
ds
jmp
clc
or
hlt
test
out
sbb
jmp
dec
mov
add
add
test
add
sahf
pop
call
out
inc
cltd
arpl
or
add
repz
xchg
stos
loopne
out
mov
sub
sub
bswap
cmc
cwtl
push
ss
cmp
insl
add
or
out
lret
add
or
mov
xor
inc
stos
mov
add
jle
add
add
call
inc
pop
sub
xor
mov
xchg
ret
out
pop
sub
nop
aam
add
std
sqrtps
cwtl
rorl
push
sbb
xlat
and
adc
add
call
gs
test
add
loopne
push
je
xchg
adc
cmp
call
add
add
add
push
jnp
div
jae
test
xor
cltd
jne
std
insl
fisttpl
addr16
neg
daa
scas
dec
fimuls
insb
sub
jmp
stos
jae
mov
rorb
jmp
xorb
pop
lahf
xor
add
out
add
and
cmp
add
add
aas
addr16
push
incb
insb
sti
cmp
xor
mov
add
shl
sub
add
mov
jne
call
lods
push
xchg
xlat
push
mov
xlat
rcll
xchg
and
rcll
jg
dec
lods
das
shrb
fstpt
out
inc
mov
out
cmp
test
ficompl
in
call
add
and
clc
ret
icebp
xchg
mov
lods
cltd
push
leave
aas
xor
call
cltd
push
or
push
insl
test
fwait
mov
push
test
pop
call
add
jg
and
es
pop
fadds
jae
push
aas
clc
inc
ss
cld
inc
mov
jae
stos
add
cmpsl
sarl
add
rolb
addl
pop
mov
xor
jae
lods
pop
aas
call
mov
mov
mov
and
xlat
lcall
mov
add
adc
shlb
xchg
movsl
repz
xchg
je
pushf
push
sti
out
test
imul
inc
adc
push
rorl
pop
add
add
stos
lods
popf
xchg
std
sbb
xchg
xchg
mov
call
push
mov
in
push
adc
push
bound
std
mov
adc
fmuls
hlt
adc
adc
add
lahf
xchg
std
mov
add
insb
mov
std
push
and
adc
aam
aas
fs
mov
out
sahf
xor
dec
mov
das
sub
call
cli
mov
or
jmp
stc
call
jns
mov
jns
push
cmpsb
test
mov
and
in
in
mov
notrack
outsb
sbb
xor
repnz
jge
add
je
sub
testl
out
roll
incl
cld
mov
pusha
push
push
in
push
in
add
test
mov
or
cwtl
push
pushf
in
or
test
ds
xor
aam
das
push
pop
xorl
add
imul
xor
jge
mov
pop
xchg
push
jns
adc
inc
add
test
dec
xor
sar
pop
inc
loop
add
jno
mov
adc
jo
mov
jle
inc
add
stos
lea
out
sahf
cltd
mov
lea
push
out
add
or
lods
or
push
ss
push
out
sahf
sahf
cmp
sarl
adc
aad
xchg
in
jno
push
pop
rcll
adc
dec
pop
add
mov
int
adc
adc
movsl
aas
data16
icebp
push
clc
cmpsb
add
sub
dec
pop
jecxz
mov
mov
add
stc
test
mov
add
dec
mov
adc
pop
adc
popl
cmp
mov
sbb
std
imul
inc
pushl
cs
es
test
bnd
cmp
adc
sti
mov
mov
push
mov
loop
push
movsb
ljmp
add
push
stc
movb
lods
mov
adcb
adc
add
testl
cli
jne
jbe
or
sti
incl
call
leave
mov
pop
jge
jp
add
sbb
add
ja
pop
ja
fdivl
xor
jne
call
je
add
mov
mov
repz
aas
add
inc
inc
push
jl
push
test
inc
sarl
adc
je
mov
adc
pop
push
mov
hlt
jp
cltd
sarb
push
cltd
sbb
in
mov
mov
mov
ss
fwait
pop
or
call
add
lahf
daa
lcall
pop
xor
mov
adc
and
push
leave
je
push
enter
jb
pop
cltd
add
lcall
mov
xor
mov
mov
mov
cmp
ret
out
push
testb
jns
jecxz
inc
lret
test
les
repz
ret
add
add
andl
xor
push
push
hlt
xchg
ret
xchg
pandn
mov
adc
xor
sbb
std
icebp
popf
sbb
jg
dec
mov
adc
add
add
jg
cmp
mov
xchg
pop
sbb
js
repz
neg
inc
lea
pop
lcall
push
ljmp
add
sarl
lods
in
test
mov
call
jb
repnz
out
mov
out
loop
cmpsl
rorb
fsubrp
inc
and
das
loop
movsl
insb
sbb
sbb
add
mov
add
lahf
scas
je
leave
push
adc
jbe
cltd
or
add
pop
add
adc
mov
mov
xchg
sub
test
add
lret
popf
leave
fisttpl
ljmp
popf
in
cld
scas
aas
shl
ljmp
push
lock
je
daa
fisttpl
je
mov
push
lea
xchg
dec
ljmp
xchg
cld
jne
leave
cli
adc
add
lds
push
ljmp
adc
jg
add
xchg
jne
test
mov
fcompl
pop
movsl
add
int3
xor
mov
push
insl
lcall
bound
inc
add
sti
pop
jo
push
mov
mov
xchg
and
adc
aaa
sub
mov
add
movsl
jp
jl
sbb
cwtl
sar
js
ss
or
pop
cmp
rcll
sti
dec
push
repnz
push
dec
mov
cld
sub
repz
pop
push
shll
or
add
add
call
out
or
inc
divb
cmpsb
add
adc
nop
add
flds
aam
xor
jge
jl
jg
pop
add
sbb
adcl
xchg
add
fsub
push
inc
out
and
imul
mov
inc
pop
sub
mov
out
push
adcl
out
add
clc
inc
pop
cmp
cwtl
pop
add
push
mov
je
stc
incl
in
fs
add
add
xchg
pop
mov
jmp
add
add
push
icebp
xorb
or
mov
std
push
or
jl
adc
shlb
add
push
mov
decb
rcl
idiv
hlt
push
repz
jmp
test
jg
lods
add
jmp
xor
pop
mov
stc
cmp
add
push
add
push
add
or
je
mov
add
incl
movsb
cmovo
lret
cmp
out
add
ja
mov
call
sahf
jmp
ja
add
mov
add
dec
xor
std
mov
add
xor
cmp
ljmp
outsb
jns
decl
jno
xchg
jns
outsb
add
add
and
cmp
xlat
jle
mov
pop
xor
sub
add
cwtl
repz
pop
sbb
mov
fwait
and
out
adc
jno
or
pop
inc
add
xor
fldt
push
mov
imul
mov
sbb
xchg
or
add
cmp
and
pop
add
adc
mov
push
in
xchg
dec
mulb
outsl
push
push
or
add
ss
in
into
icebp
adc
insb
ret
add
repz
testb
or
imul
and
lds
ret
sbb
mov
mov
add
inc
pop
jns
xor
mov
lret
repz
lcall
inc
or
icebp
call
inc
sti
cmc
xchg
mov
fadds
jns
xchg
jle
enter
fwait
cmp
xor
popf
jle
or
and
mov
push
or
jmp
cmpsb
jle
fsts
add
fldenv
sti
mov
mov
add
add
js
add
xchg
xchg
pop
xchg
fisttpll
jmp
add
popf
lock
sub
pop
push
es
adc
adc
push
push
movb
adc
std
aam
repnz
jmp
daa
ret
ja
rcl
fiadds
call
push
outsb
jne
cs
jae
or
jl
add
add
or
add
jns
or
mov
xor
push
add
ds
pop
in
add
mov
xchg
sti
cld
ljmp
addr16
sti
push
xlat
inc
out
push
inc
inc
mov
cmp
jmp
scas
mov
cld
xor
mov
or
out
std
add
mov
add
pop
add
cwtl
rolb
inc
aas
pop
pop
jnp
lcall
inc
lret
cmp
leave
fwait
dec
sbb
fwait
repnz
add
loope
sub
test
pop
sbb
add
fsubrs
sti
pop
cwtl
or
mov
mov
dec
insb
jl
jmp
xchg
loopne
xchg
and
cmp
jno
jne
cltd
sbb
add
scas
lock
cltd
jle
sub
inc
pop
and
mov
jp
adc
jb
daa
jns
clc
lahf
cli
inc
add
js
nop
push
cmp
add
shl
mov
jl
in
outsl
clc
lahf
mov
or
addb
fidivl
aas
pop
jle
sub
sub
mov
mov
cmc
dec
add
add
stos
add
mov
call
mov
inc
loop
and
hlt
mov
push
into
jl
stos
add
add
adc
jmp
push
jb
mov
leave
or
daa
or
fstps
inc
push
add
push
xlat
out
sbb
std
bound
jg
int
xor
add
add
jbe
es
in
cli
call
inc
mov
inc
fcoms
sub
jae
and
adc
sub
test
call
icebp
add
jmp
mov
add
add
pushf
adc
jae
add
jle
out
mov
sti
add
orb
add
and
mov
add
shrl
jno
ret
inc
je
imul
add
add
inc
cmp
cmp
sbb
jmp
sbb
gs
add
add
je
dec
std
add
adc
lods
aas
push
sub
inc
or
incl
xor
pop
jns
rolb
cmp
pop
add
scas
clc
push
lcall
in
sti
cld
jl
sarb
outsb
insb
sbb
fldenv
ljmp
je
icebp
lret
call
pop
imul
cld
xor
out
add
add
cmpsl
xchg
sub
stc
cld
sub
aas
pop
loop
mov
out
xorb
call
add
leave
jns
add
sub
pop
sbbl
pop
loopne
mov
xlat
cmc
mov
leave
xchg
std
ret
repnz
mov
push
cli
out
int
test
daa
add
adc
rdpmc
or
pushf
arpl
movsl
test
sbb
cmp
lock
aas
or
pop
scas
std
ret
add
add
xchg
dec
rcrw
mov
repz
out
mov
jmp
loopne
cmp
or
jmp
mov
xchg
jg
xlat
out
inc
icebp
in
cld
je
jle
imulb
add
icebp
mov
pop
daa
cmp
push
adc
cmc
add
ljmp
imul
int3
push
bound
cmp
add
vminpd
jmp
push
fadd
icebp
adc
mov
mov
cmp
push
sbb
pop
add
add
mov
add
cs
call
mov
xchg
push
mov
cld
ljmp
jae
and
mov
out
xchg
jp
jg
rcrb
xchg
jmp
test
adc
add
lea
jmp
mov
je
movl
xorl
add
mov
mov
test
call
push
call
sub
aam
ljmp
rol
add
pop
pop
lds
mov
add
call
mov
xchg
lds
add
imul
cmpl
add
add
movl
pop
movsb
test
sub
jae
out
clc
xchg
insb
jg
add
out
pop
jg
dec
test
inc
or
inc
je
lods
add
pop
imul
rcrl
and
lock
pop
xchg
clc
and
add
rorb
and
loopne
and
add
xor
dec
std
cli
jp
loope
xlat
xchg
clc
xor
dec
lret
ss
xchg
daa
sbb
sbb
add
sbb
inc
test
aam
jo
outsb
filds
or
je
jg
fiadds
jg
call
inc
jmp
insb
xchg
mov
out
lahf
decl
imul
fiaddl
ds
xor
add
add
add
sar
sbb
mov
imul
pop
adc
push
push
add
mov
vpunpckldq
or
adc
add
cltd
or
add
lea
cltd
sub
adc
adc
mov
call
and
in
insb
pop
sahf
jb
movb
add
add
sar
aam
adc
popf
dec
mov
std
cmpsb
xchg
int
loop
in
push
bound
push
mov
add
cwtl
test
add
cmp
push
rclb
push
push
push
cmp
jle
cmp
or
push
cld
je
cmp
jge
xchg
ja
add
jne
notl
push
rolb
out
test
or
jmp
xor
pop
pop
pop
mov
sarb
cmp
lea
add
jo
aam
imul
pop
idiv
inc
hlt
jle
pop
ja
mulb
jbe
mov
out
ret
data16
and
push
inc
pop
out
jae
hlt
pop
cmp
std
call
mov
inc
fistps
add
add
cltd
jle
lret
pop
sar
sub
mov
mov
jle
sbb
sar
sahf
inc
mov
push
and
jg
call
pop
mov
inc
add
push
ss
xchg
imul
mov
faddp
push
add
sub
out
ret
ja
ret
aas
ljmp
add
jl
imull
mov
add
rclb
adc
filds
ret
fsubrs
jmp
out
cmpsb
add
adc
mov
push
or
ljmp
lcall
jge
testl
inc
adc
jns
jl
sbbb
pop
jge
std
sub
inc
loope
sbb
add
adc
cld
adc
push
sbb
add
test
sbb
push
mov
adc
push
push
add
adc
push
pop
test
add
shr
call
loopne
inc
jmp
aam
mov
test
mov
dec
jne
adc
ss
in
dec
icebp
jl
jne
adc
in
sub
add
dec
or
loope
inc
xchg
xlat
lds
push
mov
or
dec
clc
rorb
out
addl
aaa
pop
add
adc
cmp
cld
jae
pop
push
or
inc
addr16
add
dec
in
mov
decl
icebp
adc
add
test
int3
rclb
inc
add
add
mov
push
jno
and
incb
rclb
jns
pop
imul
pop
or
mov
das
js
cmp
inc
jae
out
movb
mov
mov
imul
popa
jno
jg
arpl
add
mov
add
add
pop
lock
add
nopl
pushl
popa
mov
mov
mov
mov
cmp
pop
add
adc
test
and
in
adc
out
push
or
sbb
jmp
add
shr
add
rclb
add
pop
adc
add
mov
mov
pop
add
in
aad
daa
add
xchg
lret
mov
jmp
leave
cmpsl
add
das
mov
enter
add
mov
jmp
mov
loop
add
add
xchg
lcall
xchg
scas
or
les
push
add
add
xchg
mov
add
add
dec
cmp
mov
xchg
cmp
cmp
add
jmp
mov
int
cld
sbb
mov
jl
fstps
xchg
orb
jmp
adc
add
or
call
es
in
mov
in
push
push
mov
mov
mov
std
push
les
out
ja
add
add
push
inc
stc
dec
call
cmc
in
xchg
jge
adc
cld
xchg
jl
hlt
jo
adc
xor
scas
add
dec
out
add
std
addr16
add
inc
std
decb
stc
dec
or
pop
test
or
je
aas
in
add
loopne
cmp
add
or
and
xor
mov
in
aad
pop
sbb
add
repz
data16
minps
add
fildl
dec
lock
xchg
fnstsw
pop
aas
rorl
pop
pop
add
sti
mov
sbb
inc
das
lea
in
clc
sbb
push
in
jb
or
add
mov
shrd
sbb
add
fs
xor
or
repnz
iret
mov
jbe
inc
add
ret
test
and
mov
mov
cmp
outsl
push
jg
jmp
pop
add
jbe
cli
jmp
push
jmp
pop
add
mov
add
lods
mov
inc
jp
je
nop
int
jne
dec
stc
ret
sub
jl
inc
sbb
mov
dec
jns
jl
imul
xchg
inc
cwtl
push
dec
lds
out
cmp
fstl
mov
cmpsl
add
mov
xor
xchg
inc
adc
push
repz
stc
mov
mov
std
testb
inc
adc
add
add
js
std
push
ret
pop
adc
add
sub
cmc
push
cmp
std
aam
adc
mov
or
std
jp
mov
stos
js
mov
add
std
cld
insb
pop
in
adc
testb
add
std
cld
in
adc
es
pop
mov
inc
add
inc
and
mov
sub
std
jae
aas
in
add
push
mov
in
std
int3
testl
outsb
jp
adc
shlb
cmp
or
dec
adc
push
aam
push
ljmp
out
jp,pn
js
test
add
jno
and
jne
cli
sbb
call
jnp
jo
subl
add
jmp
test
ss
out
push
in
pop
int
add
pop
jne
push
pop
or
mov
cmc
push
mov
add
pop
loopne
sbb
pop
cld
and
inc
pop
pop
clc
and
and
ljmp
jae
cmp
or
cld
cld
sub
inc
pop
adc
mov
std
inc
and
jge,pn
xchg
jle
add
pop
pop
cld
mov
pop
pop
test
sub
ja
std
cmpb
sbb
add
or
cmc
bnd
adc
sbb
dec
sbb
pop
stos
add
sti
pop
pop
pop
add
jns
es
add
test
add
jg
incl
add
pop
pop
je
add
add
add
pop
add
adc
add
inc
testb
pop
test
add
clc
test
add
aam
jge
fsub
shl
mov
ja
test
add
jge
and
stos
adc
jnp
pop
jg
push
inc
insl
push
dec
push
jmp
test
sar
nop
xor
add
adc
adc
add
idivb
bound
push
sub
cmc
loop
pushl
je
or
sar
pusha
add
pushf
clc
data16
fcompp
jle
aam
insb
push
into
jae
std
cmpsb
xchg
xor
jmp
adc
adc
add
out
adc
sbb
incb
add
sti
xor
push
adc
cli
jne
repnz
faddl
pop
cwtl
out
sub
sub
sub
push
mov
add
lock
cmp
and
pop
dec
mov
dec
push
pushl
jo
jmp
ljmp
out
jmp
push
adc
inc
inc
std
mov
jnp
js
jnp
je
test
add
inc
cmpb
je
mov
dec
cld
adc
pop
xchg
pop
hlt
fcompl
add
add
sbb
pop
inc
je
hlt
imul
fldcw
pop
das
rcrb
jne
push
pop
add
test
adc
pop
mov
leave
pop
push
push
push
pushf
data16
mov
mov
not
push
std
push
xor
pusha
adc
xlat
pop
mov
lret
cli
cmpb
adc
pop
es
incl
xor
or
fiaddl
xchg
sub
loop
fnstcw
jp
sub
int
pop
xchg
push
lret
aad
jo
inc
nop
in
outsb
pop
scas
data16
xchg
push
xchg
jo
add
jne
outsl
fsubl
rcl
outsb
mov
iret
adc
add
jle
add
add
fstps
xstore-rng
cmpsl
add
pop
fs
add
inc
rcrb
pop
or
out
push
imull
pop
add
aam
in
aas
pop
pop
out
add
fwait
jbe
jmp
jl
je
xchg
outsb
call
in
add
mov
shll
jmp
add
int
aad
add
push
gs
pop
leave
mov
push
ret
or
addl
sbb
faddl
mov
cmp
aam
pop
mov
gs
pop
nop
inc
je
ffreep
pop
adc
sub
xchg
ljmp
mov
mov
jmp
push
aam
mov
push
push
push
aad
mov
pop
lea
repnz
jmp
imul
lret
stc
or
add
ljmp
mov
shll
adc
inc
std
mov
sti
insb
scas
add
dec
js
jle
test
stos
sbb
nop
mov
jmp
jae
mov
adc
inc
std
xor
or
mov
inc
std
addr16
addr16
pop
xor
and
cmp
std
or
inc
pop
inc
jae
cli
add
push
nop
push
mov
push
and
rcll
rorb
push
outsl
inc
inc
repz
add
pop
inc
je
add
dec
mov
shrb
stos
push
sbb
call
movsl
gs
push
jle
lahf
addb
adc
clc
add
push
sbb
pop
iret
mov
jle
pushf
sbb
imul
out
cld
xor
rcl
ljmp
add
adc
flds
bound
imul
inc
rol
popf
mov
bnd
or
icebp
jge
jp
jge
mull
jl
mov
adc
iret
adc
adc
adc
jb
or
sarl
add
jge
les
rorb
stc
jmp
jle
pop
mov
inc
in
mov
lahf
in
out
punpckldq
out
or
mov
arpl
in
add
pop
push
enter
int3
mov
push
and
mov
je
addr16
and
inc
add
rclb
incl
lods
add
inc
mov
pop
idiv
jno
push
or
pop
push
or
ljmp
subl
jle
in
cmp
addb
std
pop
jecxz
repnz
dec
xchg
jmp
clc
push
inc
imul
repz
jne
mov
les
sbb
mov
jne
or
add
movsl
std
out
pop
test
out
add
add
aas
adc
mov
cli
decl
inc
std
xor
add
loope
add
call
mov
scas
imul
jg
into
pusha
loop
sti
sbb
out
add
pop
je
mov
out
add
and
mov
iret
outsl
xlat
adc
push
jo
sbb
lds
sbb
inc
je
xor
add
icebp
loope
push
fdiv
mov
push
gs
cld
push
or
xor
pop
mov
rclb
jmp
adc
repz
and
or
jge
jbe
add
subb
jle
fs
js
mov
add
sbb
add
add
push
fnstsw
cmp
add
jb
dec
pusha
out
les
mov
add
jg
fbld
pop
iret
add
push
mov
xor
mov
jecxz
mov
mov
add
fmul
add
add
sbb
ret
rclb
popf
rcrb
and
lret
cmp
inc
test
cmp
push
push
jb
or
pushl
add
or
hlt
push
cmc
aas
jmp
stc
pop
jae
int3
mov
jae
dec
mov
jo
pop
std
push
cmc
jne
pop
pop
fld1
adc
push
mov
adc
push
mov
mov
cmc
mov
je
in
adc
xchg
pop
call
out
pop
jae
outsb
inc
call
arpl
jae
add
imul
arpl
call
lds
add
mov
sub
dec
mov
ss
int
add
jmp
jo
dec
ret
in
stc
mov
ljmp
in
add
add
inc
adc
fcomip
je
inc
or
jmp
mov
xor
jne
mov
std
imul
out
lock
jae
gs
add
call
cmp
jae
clc
fwait
adc
data16
jmp
pop
mov
jnp
int3
mov
and
int3
out
xor
add
outsl
cmp
sbb
mov
rclb
xchg
adc
clc
imul
pop
jae
or
sbb
das
push
pushf
and
xchg
shlb
or
mov
xor
sbb
inc
jmp
sbb
mov
roll
sti
pushf
nop
insb
ljmp
adc
stos
flds
add
push
pop
decl
mov
add
mov
add
and
aas
push
dec
pop
inc
mov
aad
arpl
sahf
bound
aas
enter
test
pop
call
add
xor
lods
add
inc
xchg
add
pop
jl
popa
dec
out
cltd
push
mov
lret
fstpl
aam
ficoms
das
testb
lret
inc
sbb
adc
sub
out
bound
mov
out
mov
add
in
adc
mov
sbb
frstor
mov
push
xchg
ljmp
add
iret
pop
lahf
sub
push
pusha
ja
xorl
dec
adcl
int3
call
or
or
push
mov
cld
aam
cmc
aas
jmp
rcl
or
xchg
inc
fld1
adc
cmp
dec
cmp
ljmp
addr16
adc
add
nop
jle
sahf
jbe
call
pop
add
stc
xchg
xor
mov
dec
loope
repz
test
std
lds
inc
test
mov
push
xchg
add
repz
inc
lods
push
mov
or
mov
divb
xor
mov
sub
leave
sub
cmp
testl
add
mov
inc
fnstsw
cli
push
or
inc
add
add
icebp
add
faddp
jmp
subl
xchg
movsb
aad
add
sbb
push
loop
fsts
jae
out
or
push
pusha
jae
xchg
pusha
adc
sar
pop
or
inc
xchg
and
subb
imul
sub
add
pop
inc
pop
jb
rol
jmp
sub
dec
imul
sarb
cmp
out
ret
add
cmp
xadd
es
pop
aas
mov
nop
stc
add
add
nop
fs
jg
push
add
insb
hlt
add
add
push
cld
dec
push
xor
xor
xchg
xor
add
in
call
scas
adc
lods
add
add
add
inc
dec
or
or
out
mov
xchg
pop
movl
out
xchg
mov
fnstsw
adc
sub
or
mov
push
hlt
pusha
test
sub
mov
aam
in
aas
jmp
xchg
ds
adc
inc
inc
push
or
add
jbe
cmp
add
adc
inc
icebp
pop
adc
mov
fwait
sub
inc
push
xchg
add
mov
insb
outsl
cmp
adc
int
mov
std
push
nop
inc
je
rcl
inc
add
call
cmpsl
jae
out
loop
mov
std
faddp
lods
lret
push
push
push
jae
mov
test
push
lea
cld
incl
mov
cld
push
ljmp
decb
fldl
stos
std
call
jle
cvtpi2ps
inc
lock
add
push
jg
xchg
test
in
jbe
mov
push
mov
in
aas
or
adc
push
scas
add
inc
jg
je
cmp
add
add
ss
jb
jmp
or
mov
mov
fsts
imul
or
pop
jb
loopne
out
outsb
stos
cmp
lock
lcall
out
add
add
aad
shl
mov
scas
out
movsb
add
inc
ret
dec
arpl
imul
push
imul
jnp
mov
add
sti
imul
sahf
jns
pop
ss
les
out
jae
jnp
gs
add
xor
shll
push
ret
and
xchg
jmp
pop
incl
in
pop
push
sub
mov
testb
sahf
out
pop
xchg
daa
cmp
lea
and
out
push
or
mov
add
add
pop
ret
xchg
pop
and
aam
mov
or
sub
push
int3
icebp
cwtl
arpl
data16
add
push
into
out
mov
icebp
ljmp
push
cld
incl
test
call
and
call
jp
call
fwait
call
dec
xlat
aam
mov
add
add
out
mov
mov
faddl
ds
xlat
jnp
subl
push
lods
inc
push
in
pop
add
inc
addr16
call
ss
jb
push
std
jae
pop
pop
mov
adc
mov
int3
in
aas
add
nop
add
and
sti
xchg
inc
push
inc
add
sarl
push
add
xchg
cmpl
or
mov
testl
jne
cli
jne
xchg
xchg
mov
std
mov
test
add
jnp
and
mov
je
push
or
mov
imul
das
mov
xchg
jle
cld
adc
pop
fiadds
add
cwtl
cmp
jmp
mov
std
ret
xor
push
sar
cmp
inc
fists
or
pop
add
lds
clc
js
jae
aam
and
jo
pop
mov
and
out
add
shl
push
std
inc
inc
stc
mov
fsubrs
and
xor
clc
cld
enter
mov
test
mov
push
movsb
mov
loop
or
inc
and
sub
mov
inc
inc
lock
mov
fsubrp
push
nop
shl
test
sub
arpl
add
bound
inc
sub
jno
mov
out
xchg
add
jle
add
add
push
loop
push
mov
jl
mov
sub
add
push
insb
pop
add
out
rcll
mov
dec
cmp
call
das
add
lcall
ret
pop
jge
adc
and
add
jmp
jo
add
outsl
adc
stos
adc
mov
add
mov
xchg
pushw
lea
nop
loopne
std
movb
rcll
add
add
shl
jne
sar
daa
jns
push
ja
incl
sub
and
pop
orl
popa
adc
adc
xchg
jecxz
adc
rolb
pop
cmp
lea
loope
jle
mov
enter
lods
cmpsb
jmp
xor
mov
mov
das
enter
add
mov
mov
ret
jmp
in
push
fistps
in
push
sti
adc
jae
cmc
push
rcrl
ds
add
into
push
cmp
inc
cmpsb
frstor
xchg
addr16
lret
add
inc
mov
or
add
pop
mov
xor
aas
pop
outsl
lods
mov
lock
pop
mov
mov
add
daa
sub
pop
pop
into
sbb
aam
std
dec
faddl
es
push
pop
fwait
add
cltd
add
adc
aaa
inc
pop
pop
stos
cld
inc
jbe
jecxz
pop
stos
cld
loopne
fdivr
add
xor
aam
mov
sub
std
push
push
loopne
jae
mov
adc
std
mov
aad
ret
stos
pop
add
lods
sub
cwtl
mov
dec
dec
add
add
sahf
add
into
add
jecxz
add
add
xchg
push
es
and
lods
sbb
and
movsb
inc
adc
xchg
mov
addl
repz
push
and
jge
dec
mov
popf
pop
add
add
jmp
and
cmp
es
sti
movsl
leave
add
sbb
and
das
lret
adc
pusha
data16
cmp
test
call
pushf
and
mov
enter
push
call
sbbb
std
jmp
shr
test
test
les
inc
inc
stc
cmp
aas
jmp
cltd
enter
push
mov
add
mov
jae
arpl
enter
std
jmp
mov
fcomps
xor
cmpsl
sti
add
test
xor
jae
jge
pop
scas
ja
jmp
adc
idivl
jp
jne
xchg
or
cmp
mov
nop
test
xor
adc
int3
jae
or
inc
or
cli
push
xor
test
sbb
lds
ss
push
jge
add
mov
add
add
pop
xchg
add
testb
je
pop
fisubrs
je
loopne
or
fmul
push
mov
sbb
pop
add
xor
add
icebp
pop
or
add
rol
shrb
or
and
push
push
push
icebp
pop
jecxz
test
lret
dec
jl
sbb
test
not
sti
cmpb
mov
mov
push
adc
and
cld
outsl
orl
fmull
test
insl
or
adc
add
cmp
test
push
xchg
mov
add
add
sti
mov
jg
dec
add
jp
push
jmp
sbb
ficoms
pop
hlt
ret
adcb
mov
xchg
call
xlat
xor
popa
push
into
lret
mov
push
adc
pop
inc
jp
notl
add
repz
add
add
jno
filds
popa
jge
pop
es
add
mov
add
add
aam
out
mov
add
jmp
adc
vmovaps
aas
jmp
adc
into
addb
shr
clc
imul
adc
pop
ljmp
sub
and
fs
or
insb
pop
hlt
out
or
add
inc
pusha
loopne
enter
lods
push
pop
add
add
add
out
loop
add
sbb
jmp
adc
push
into
call
scas
cli
je
dec
in
cltd
mov
sti
jle
mov
sub
cmp
dec
mov
mov
int3
shr
mov
add
xor
dec
std
push
enter
mov
in
ljmp
adc
mov
mov
sbb
add
add
add
sub
je
add
add
pop
nop
mov
push
aad
add
jp
je
int3
dec
and
lret
mov
pop
add
sahf
pop
insb
lret
pop
push
aam
pop
aad
add
test
or
dec
notb
pop
jp
mov
pop
add
pop
pop
add
add
mov
std
nop
cmpsl
xchg
add
enter
mov
sbbb
add
gs
xchg
dec
pop
das
bound
mov
mov
or
pop
or
and
mov
ret
mov
out
sahf
fidivl
pop
add
out
mov
dec
bnd
cld
das
cmp
and
iret
scas
js
testb
add
add
orb
adc
daa
adc
cli
jno
sbb
and
adc
aam
jo
lea
lods
cmp
out
lahf
push
push
sbb
dec
popa
jge
add
add
jp
dec
fwait
in
dec
loopne
cmp
incb
mov
or
adc
lock
push
add
add
dec
fxch
ja
in
adc
add
jb
sti
jo
hlt
out
pop
add
bound
call
push
jnp
stc
pop
sub
jmp
sub
jno
sbb
divl
push
push
pop
and
loope
sbb
call
in
fst
pop
inc
popfw
std
lods
cmpsb
sub
push
jb
inc
jbe
add
sti
inc
xchg
push
inc
in
popa
cltd
jmp
mov
pop
add
push
call
jne
pop
ret
push
mov
jl
sbb
mov
pop
test
cwtl
or
les
add
jb
lods
xor
sbb
jo
and
jg
push
cmp
movlps
pop
in
negl
add
add
std
dec
push
mov
or
mov
in
idiv
incl
pop
gs
ret
inc
aas
jno
add
pop
mov
push
add
cmc
pop
pop
jns
cmp
inc
je
fwait
mov
out
clc
push
add
cmp
repz
sbb
sbb
push
and
mov
ret
jbe
stos
xlat
dec
or
add
aam
ljmp
gs
pop
or
xor
sub
xor
and
subb
test
pop
add
ja
test
addr16
fmul
filds
add
add
or
add
lods
sti
stos
xlat
and
adc
inc
repnz
inc
addr16
add
adc
inc
out
add
test
add
inc
jecxz
sti
mov
cld
jmp
cmp
or
adc
inc
mov
addl
out
in
sbb
inc
popf
inc
repz
mov
mov
pop
add
and
out
jae
xchg
cmp
xchg
clc
xor
incb
fdivrs
xor
mov
imul
add
ficomps
pop
stos
fwait
cmp
pop
lods
sbb
push
xor
rolb
xorb
push
and
mov
mov
imul
add
mov
cmp
data16
addb
mul
popa
movsl
imul
call
push
cmp
xor
jo
movsb
in
ret
xor
insl
inc
ds
add
in
ret
scas
into
push
je
xchg
aas
imul
lock
int
movsb
fldt
incb
je
inc
in
ret
outsb
into
push
je
xchg
aas
or
call
xorb
inc
scas
add
ds
push
je
xor
stos
add
shr
mov
jle
bound
dec
bound
lods
pusha
inc
pop
sub
arpl
sub
data16
sub
data16
sub
gs
sub
sub
gs
sub
gs
sub
data16
sub
sub
mov
stos
pop
clc
xchg
dec
sbb
push
and
xchg
in
xchg
hlt
xchg
call
add
push
dec
in
mov
jns
repz
push
pushf
add
inc
out
pop
add
lcall
add
cmp
int
adcl
adc
mov
jle
mov
jns
ds
jg
mov
jp
push
ret
jl
pop
outsl
mov
or
mov
repz
jno,pt
stc
stc
add
adc
dec
and
test
mov
and
out
fiaddl
and
jbe
or
pusha
mov
sbb
lds
bound
movd
add
cmpb
jb
cmp
or
push
clc
or
cmp
addb
ljmp
iret
or
jmp
mov
andb
xchg
lret
pop
out
mov
or
xchg
add
mov
push
mov
scas
int
adc
pop
cmp
and
add
scas
or
add
xor
test
movsb
add
addb
add
in
inc
and
lret
add
orl
adc
xchg
daa
lret
into
decb
inc
pop
bound
mov
and
cmpsb
dec
and
stc
mov
jle
adc
add
xor
pop
or
out
jg
or
cmp
mov
xor
sub
sar
jne
or
add
lahf
push
shrb
sub
pop
sub
push
jno
adc
das
cmpl
jmp
sarb
sub
inc
sub
mov
mov
inc
rclb
adc
xchg
xor
jl
insb
in
sbb
mov
in
inc
and
or
add
adc
and
mov
or
adc
sti
add
mov
loop
sub
sbb
out
daa
or
nop
int
idivl
fdivs
pop
shlb
shlb
mov
xchg
out
mov
out
out
sbb
enter
enter
enter
lret
sub
jge
out
add
out
dec
mov
fwait
inc
add
jb
adc
pop
out
lahf
into
add
or
dec
sub
lahf
dec
add
adc
out
rclb
push
and
xchg
mov
dec
jle
orl
xchg
cmp
out
cwtl
les
jmp
pop
jle
hlt
adc
mov
add
fimuls
fists
scas
adc
aaa
or
jmp
xchg
inc
je
mov
add
mov
and
jl
or
nop
aaa
or
adc
inc
add
push
daa
inc
ret
pushf
mov
add
inc
add
xchg
push
jge
sti
or
sbbb
inc
add
movb
movb
in
addb
sbb
jle
idivl
inc
jo
addb
inc
bts
or
ds
jo
adc
jg
jp
orl
adc
add
push
jns
call
sub
push
and
or
add
aas
sub
add
add
scas
adc
add
test
sar
mov
xor
and
add
or
cmpsb
or
in
mov
xchg
cmp
push
and
or
add
push
addr16
cs
cmp
mov
cmp
mov
data16
call
dec
data16
mov
xchg
push
add
jp
add
add
cmpsl
or
pop
mov
or
test
push
sti
or
das
cmp
pop
inc
xor
and
vmread
pop
xorb
or
inc
push
add
subl
inc
xchg
cmp
mov
mov
in
dec
lahf
jmp
hlt
add
cwtl
rcll
mov
mov
imul
adc
cmpsl
adc
add
imul
or
jmp
cmpsl
push
or
jle
add
xchg
ret
iret
in
or
mov
or
adc
push
jne
push
repnz
pop
add
jl
je
xor
add
stc
jecxz
jmp
push
or
jb
sarb
or
adc
stc
hlt
imul
out
lar
imul
push
pop
add
mov
or
sti
in
out
mov
adc
cli
push
in
cmc
add
adc
or
cmc
or
xor
or
mov
dec
add
add
sub
mov
or
xor
or
test
mov
add
mov
cld
add
jl
xchg
inc
sub
xor
sbb
call
xchg
sbb
xor
pop
sbb
sub
pop
push
or
push
add
lds
add
inc
arpl
lds
add
add
mov
lds
adc
cld
cmpsl
sub
aaa
leave
jae
lock
jae
icebp
scas
adc
or
aas
inc
and
sbb
jecxz
add
or
adc
movups
inc
add
cs
arpl
push
push
pop
add
cs
std
cmp
orb
add
mov
arpl
add
mov
jae
lret
jmp
negl
add
mov
out
pop
mov
sub
in
jg
add
add
andb
dec
lods
filds
or
sub
add
add
inc
loope
pop
xorb
jge
push
pop
add
sub
add
orl
iret
add
aaa
call
xor
push
daa
push
or
adc
add
jmp
xor
or
scas
es
aas
sbb
add
xor
sub
pop
sbb
inc
notl
sub
rcrl
incl
imul
sti
call
std
xchg
add
adc
idiv
imul
sbbb
add
imul
inc
lds
dec
sti
call
cmp
sub
add
fwait
sub
mov
movb
out
scas
in
push
jne
ret
inc
push
cmp
dec
xor
or
and
cmp
sbb
pop
sbb
or
push
jne
lock
push
pop
add
jno
ds
dec
jne
lock
push
jmp
test
or
ds
or
cmp
add
orl
push
aas
add
xchg
std
in
pop
psubd
pop
add
sbb
jae
mov
and
mov
and
lcall
rcrl
push
or
dec
add
adc
mov
inc
add
lcall
adc
cmp
pop
push
test
add
cltd
cmp
arpl
stc
and
sub
lods
pop
cmp
lods
dec
lods
or
addr16
xor
mov
adc
pop
xchg
test
mov
adc
lahf
add
in
push
out
adc
out
sahf
scas
ljmp
in
ljmp
add
add
push
insb
inc
stos
sti
jo
add
push
push
popf
fstp
cmpl
or
imul
out
xorl
out
add
adc
and
cmp
arpl
adc
out
pop
add
sub
sub
add
xchg
inc
and
std
subb
cmp
ljmp
cs
outsb
sub
decb
add
add
mov
add
out
cmp
std
imul
sub
shr
arpl
push
clts
or
lcall
mov
and
decb
sub
add
call
orl
adc
out
mov
std
pop
xlat
cmp
push
add
jecxz
data16
inc
pushw
repnz
outsl
shufps
daa
jmp
jmp
inc
add
flds
add
and
cmc
cli
jmp
mov
cld
sti
stc
jp
pop
push
jge
adc
incl
add
out
inc
add
xlat
adc
mov
jnp
call
scas
add
add
sbb
arpl
mov
test
or
jo
add
jo
sub
pop
es
xchg
orb
daa
repz
pop
faddl
add
add
rolb
sbb
adc
sbb
rcrl
add
data16
add
mov
mov
cmpsl
inc
or
add
dec
ja
adc
sbb
xchg
sbb
add
xor
push
ja
sbb
inc
adc
mov
enter
pop
adc
sbb
insl
and
inc
filds
jmp
pop
push
pushf
sbb
dec
mov
cwtl
push
sub
out
sbb
leave
push
push
cmpb
jo
pop
adcb
andl
pop
add
jns
call
out
xchg
je
add
andb
or
sub
or
push
pushl
pop
xor
sbb
idivb
out
clc
dec
ret
xchg
and
pop
add
scas
cmp
daa
adc
or
inc
call
lcall
stos
stos
neg
pop
jg
in
add
daa
sbb
out
adc
add
add
clc
mov
xorl
pop
jg
in
adc
cmpsl
sbb
out
adc
add
fldl
mov
mov
in
orl
pop
test
daa
sbb
out
adc
add
loope
add
push
add
mov
or
add
mov
inc
cmp
sbb
imul
ljmp
mov
daa
ret
int
or
inc
pop
sbb
add
cmp
js
and
mov
and
inc
subb
icebp
jle
call
outsb
or
mov
mov
add
and
add
test
sub
sahf
jg
pop
sti
cld
add
add
xchg
inc
sti
or
outsb
or
pop
sub
aaa
pop
call
jae
mov
and
mov
and
pop
xor
pushl
add
push
insl
add
fstpt
adc
add
mov
or
mov
mov
adc
rorl
add
testl
and
jns
xor
incb
xchg
jne
adc
add
pop
add
or
push
push
rol
out
scas
pop
fidivs
add
inc
and
imul
loope
mov
push
add
mov
std
out
xchg
clc
es
xor
lahf
out
sbb
add
push
and
and
pop
pop
add
insl
push
cmpl
mov
shr
sbb
std
out
jecxz
mov
push
shr
stc
fsub
add
out
movsl
inc
or
lds
sbb
pop
pop
add
push
loop
jmp
rolb
mov
cmp
stos
and
dec
jmp
inc
or
xchg
cs
sbb
jmp
add
add
add
jmp
nop
push
add
adc
jae
popf
cmc
xorl
add
push
mov
add
xchg
sub
ficoms
cmp
sub
in
adc
xorb
cmc
mov
sbb
add
std
imul
es
ljmp
clc
jne
out
mov
adc
cmp
or
or
popa
sub
jle
es
mov
and
andl
test
push
add
pop
insl
add
incb
mov
xor
std
jmp
sbb
aaa
inc
std
push
mov
clc
dec
xor
sub
ds
inc
sub
in
sub
daa
jno
jge
or
add
add
and
mov
and
movsb
les
icebp
out
inc
add
pop
sbb
add
mov
xor
push
cmp
sbb
jne
push
sub
jb
add
pop
aam
adc
push
add
jge
add
and
test
xchg
sub
and
lods
aas
pop
sbb
inc
add
mov
subb
cli
andb
add
add
cmpsb
add
das
sbb
and
sti
ret
xchg
adc
or
or
push
pop
add
sbb
arpl
adc
dec
push
pop
add
adc
xor
pop
add
sahf
push
add
jle
sbb
pop
add
punpcklwd
add
push
jno
sub
ss
inc
fcomps
push
out
es
nop
mov
insb
sub
jle
push
pop
add
sub
inc
adc
or
and
arpl
or
out
inc
and
or
or
add
es
stos
jmp
add
rcrl
pop
and
fnsave
sub
call
add
inc
icebp
and
xor
jns
xchg
and
call
xchg
and
fsubp
inc
jmp
subl
and
adcb
std
jmp
sub
sahf
in
adc
subl
sti
lds
js
cmp
stos
pushl
add
sbbl
adc
imul
sbbl
add
cli
cld
inc
jmp
ljmp
sahf
inc
and
pushf
inc
and
sahf
inc
and
pop
xchg
in
scas
add
mov
jb
or
stos
mov
mov
sbb
inc
outsl
xor
push
outsl
add
jb
clc
inc
xor
pop
sub
mov
movsl
nop
call
sbb
xchg
aam
jae
stos
sub
sbb
aas
inc
push
sbb
push
sub
mov
jl
sete
or
mov
jl
sbb
xchg
adc
adc
cld
addr16
adcl
xor
push
sub
mov
orl
fdivr
xchg
ds
pop
sub
sbbb
inc
sub
add
cmp
cmp
add
cmpb
mov
fiadds
rorb
pop
sbb
fxch
out
icebp
imul
testl
or
ds
push
dec
jle
inc
push
mov
inc
push
jb
mov
push
hlt
stc
out
adc
dec
loopne
jmp
js
pop
mov
or
stos
cli
add
mov
cltd
shr
mov
inc
sub
test
testb
sahf
dec
sbb
daa
adc
jae
mov
xchg
sub
jecxz
bound
movhlps
mov
das
icebp
xor
sub
or
cmc
add
adc
mov
or
std
push
loop
jmp
iret
or
add
add
sbb
add
xlat
loop
jb
loop
jb
fadds
ja
adcl
std
jb
push
sbbl
adc
inc
add
mov
ds
push
and
cltd
lret
sbb
xlat
cli
rol
lds
mov
adc
lods
sbb
mov
testb
or
addl
in
add
out
mov
push
and
lret
nop
out
add
mov
or
test
push
and
stos
adc
jnp
pop
adc
and
inc
pop
adc
inc
popa
cmp
inc
pop
cmpsl
dec
out
call
je
jg
call
scas
inc
je
xchg
cli
and
imul
jae
rclb
add
in
rolb
lods
and
adc
inc
or
clc
nop
mov
add
fs
cld
sbb
std
lea
test
or
adc
adc
in
mov
imul
inc
call
mov
icebp
mov
add
mov
lds
add
sbb
add
jno
pop
xor
pop
popa
lret
bound
sbb
cmc
mov
sub
mov
ljmp
ljmp
ror
xor
mov
loope
aaa
mov
xchg
loopne
pop
repz
add
sub
inc
rcrl
xchg
out
add
out
popa
movb
add
cmc
xchg
call
pop
mov
popa
out
shlb
or
mulb
and
mov
insb
adc
adcl
std
jb
or
mov
add
mov
ds
push
test
ds
jp
ds
data16
jmp
shrl
jmp
add
ds
mov
cmpsb
ds
insb
lods
ds
scas
lcall
jle
insl
inc
outsb
lcall
jle
insl
inc
jle
insl
inc
outsb
lcall
ds
insl
inc
ds
insl
inc
cs
insl
inc
cs
insl
inc
ds
insl
inc
add
cs
inc
cs
insb
inc
add
inc
insb
inc
jne
inc
out
jg
inc
out
lahf
push
mov
inc
shrl
out
cmc
push
out
adc
mov
add
scas
dec
gs
scas
movsl
addr16
mov
sub
push
sub
push
sub
jne
sub
push
sub
sub
je
sub
data16
sub
sub
add
sub
sub
sub
sub
jo
sub
outsl
sub
outsb
sub
outsb
push
sub
push
sub
push
sub
push
sub
push
sub
arpl
mov
das
mov
xchg
pusha
adc
add
pop
add
movsl
fisttps
jmp
dec
dec
xor
popf
inc
cmpsl
sub
adc
push
cwtl
and
loop
pop
sbb
es
daa
mov
push
scas
popa
adc
test
repz
clc
add
mov
rcrb
sub
sbb
mov
decl
psubq
mov
add
hlt
mov
ret
sbb
mov
sub
add
cmpl
mov
in
outsb
or
or
mov
call
pop
pop
ljmp
out
jg
pop
sbb
decb
xchg
add
stc
jb
xchg
xchg
and
adc
xchg
stos
sbb
sub
xchg
xor
mov
adc
adc
mov
mov
xchg
add
dec
mov
add
add
xchg
add
push
xchg
jg
lds
mov
incl
add
add
mov
push
filds
inc
xchg
pop
mov
inc
push
or
mov
je
mov
movsl
out
xadd
xchg
add
inc
cltd
pop
or
repz
or
je
stos
repz
add
add
or
mov
incb
mov
xchg
andb
fdivrs
or
inc
pop
pop
mov
sub
pushf
in
push
enter
mov
push
and
pop
sti
add
nop
lds
fsub
repz
mov
rolb
inc
or
mov
sub
sbb
mov
add
aas
stc
adc
jb
nop
lds
adc
sub
lea
mov
out
xlat
movsl
mov
adc
push
xchg
push
mov
add
mov
icebp
ds
add
or
or
fcomp
add
lods
jecxz
push
mov
pop
scas
jno
xchg
and
mov
shlb
cmp
nop
scas
lea
cltd
add
jb
pop
add
sbb
mov
mov
fdivs
add
mov
sahf
scas
jle
sbb
outsb
leave
inc
xlat
and
or
add
add
cmp
and
adc
add
xchg
mov
cltd
add
add
pop
cmp
add
mov
add
add
fnstenv
aad
jp
test
dec
mov
popl
fs
jp
jg
xchg
jnp
adc
pop
add
sub
mov
add
add
and
mov
lods
bound
mov
jmp
aas
sub
and
adc
mov
cmp
or
fsubr
add
pop
icebp
xor
add
push
test
xchg
jmp
sbbl
push
fldl
mov
jo
jae
add
stos
and
lret
mov
scas
cli
inc
push
jg
sbb
test
dec
add
aaa
cmp
or
test
hlt
cmp
mov
faddl
dec
cld
or
incb
lcall
add
dec
int
insl
push
mov
fiadds
mov
xchg
int
push
test
sub
xchg
dec
or
push
mull
add
xchg
divl
push
xor
rcll
mov
or
mov
fmull
lahf
xor
push
and
or
aam
push
aaa
call
sarl
shrb
or
fiadds
mov
inc
mov
mov
pop
in
popa
inc
sbb
dec
inc
jmp
xchg
xchg
mov
and
cltd
mov
popa
sbb
filds
aam
dec
movsb
push
pop
dec
lods
sbb
jnp
pop
nop
mov
mov
inc
or
add
add
dec
data16
inc
scas
add
scas
or
inc
add
add
adc
ljmp
pop
fwait
mov
int3
sub
pusha
shll
push
inc
sbb
nop
mov
in
sub
testb
jb
adc
std
hlt
add
ret
or
or
movsb
sbb
pop
xchg
mov
fucomip
into
or
pusha
add
xchg
sbb
cld
jmp
or
shr
add
sti
call
xchg
mov
jmp
mov
inc
cmpsl
add
and
sbb
push
das
add
inc
inc
mov
jp
dec
les
pushw
inc
mov
aaa
inc
push
aaa
add
movl
movb
decl
add
jl
mov
mov
faddl
push
pop
cmpl
jp
pop
mov
cmp
jg
sub
mov
int3
inc
std
mov
cmpb
pop
addl
add
mov
inc
adc
mov
jle
cmp
jae
mov
test
push
adc
movb
xchg
jmp
adc
add
clc
incl
arpl
cmp
jae
call
data16
and
mov
shrb
mov
add
out
mov
bound
mov
xchg
mov
std
enter
fs
out
adc
mov
push
pop
add
adc
addb
mov
cwtl
movsl
iret
add
lock
std
addb
sub
lret
pop
adc
les
sahf
mov
push
inc
testl
sub
sbb
sub
mov
mov
adc
aam
inc
mov
add
fs
or
adc
adc
pop
push
cmp
test
out
add
adc
dec
nop
mov
loopne
out
mov
out
pop
jns
jge
xor
and
orb
mov
add
add
incl
mov
mov
jnp
mov
scas
mov
int
push
cld
jp
mov
testl
push
cmp
and
out
scas
loope
jae
mov
add
add
xchg
jo
jno
loope
mov
movsl
adc
call
jmp
add
dec
add
lret
mov
jns
std
sarl
jo
and
int
cmpsl
out
and
inc
xchg
add
or
push
in
add
out
mov
aad
or
jg
add
decl
icebp
stc
xchg
add
cmp
sar
mov
incb
mov
xchg
out
add
inc
inc
stc
rcrb
or
or
and
leave
in
lea
xchg
jle
jl
js
pop
mov
aaa
cmp
mov
lret
dec
imul
xchg
jo
push
ja
mov
cmp
jl
dec
jg
add
pcmpeqb
nop
mov
mov
cmc
sti
add
jns
les
dec
out
daa
and
inc
lcall
mov
cmp
int
push
or
dec
fistl
jge
shr
push
xor
sbb
dec
pop
int3
inc
or
jge
add
daa
jnp
mov
inc
ds
cmp
sbb
scas
jno
xchg
push
pop
jge
stc
popa
mov
int3
or
mov
cmp
or
sbb
test
pop
mov
ss
inc
pusha
sub
daa
add
push
mov
mov
sbb
jge
repz
mov
repnz
adc
add
add
inc
cwtl
mov
lods
aas
sub
or
enter
pop
jnp
lods
or
inc
and
inc
jnp
adc
xlat
jb
xor
xchg
mov
mov
xor
pop
jae
add
scas
or
lods
inc
and
in
int
repz
sub
push
sub
push
and
push
and
fs
testb
adc
xchg
push
ret
ret
das
into
aaa
jmp
into
out
imul
push
pop
add
mov
imulb
data16
sub
adc
out
stos
cmpb
jo
and
add
inc
pop
push
pushl
fiaddl
aam
ret
fcmovne
decl
push
inc
inc
jle
xchg
cmpsb
cmp
in
or
mov
rorl
mov
fsubp
or
mov
loopne
mov
fsubrl
dec
fnstenv
cmp
outsl
pop
cmp
mov
pop
mov
aas
jmp
mov
hlt
cld
mov
cmpb
pop
sbbb
daa
stc
jg
jmp
sarl
adc
je
jg
push
jae
push
add
lods
fmuls
lds
or
mov
jl
sbb
or
fisttpll
lcall
sbb
or
or
cmp
jns
xor
or
push
xchg
xlat
sbb
adc
std
adc
test
xor
jae
or
dec
sti
les
fmuls
mov
pop
inc
adc
jb
add
jp
or
mov
ljmp
add
add
add
adc
idivl
adc
pop
repnz
lods
cmc
push
bound
xlat
js
adc
loope
jo
cmp
lods
lods
push
inc
xlat
add
js
subb
sbb
or
push
jp
fs
pusha
mov
jp
pop
and
add
adc
mov
mov
xchg
cmp
adc
dec
std
sub
xchg
mov
out
add
dec
shr
mov
scas
push
sbb
call
dec
mov
dec
ror
mul
pop
stc
jb
mov
in
lret
lahf
testb
xchg
inc
mov
repz
int3
lret
push
jnp
pop
jp
repz
xchg
insl
jns
add
jp
inc
and
incb
add
fidivrl
sub
jns
and
out
es
andb
add
cli
xchg
and
sldt
add
add
or
test
dec
in
cmp
andb
std
mov
sti
jo
mov
add
sub
mov
lret
pop
sbb
inc
rcrl
or
jle
fbld
or
push
sub
mov
js
call
mov
add
stc
cld
or
mov
sbb
pop
pop
and
movl
mov
jmp
adcl
mov
cmp
mov
jo
dec
inc
pop
xor
cmp
jl
and
sbbb
lods
out
add
jmp
pop
out
add
mov
jne
cmp
jno
adc
movsb
or
fmuls
jge
cli
icebp
mov
jle
or
mov
cmp
stos
add
inc
mov
inc
mov
and
jae
addb
jl
or
fidivrs
and
add
ret
in
mov
mov
lea
call
inc
lea
hlt
lahf
cld
jno
or
scas
add
xor
add
add
jmp
jge
mov
xchg
rolb
popa
out
call
mov
push
or
mov
xchg
mov
ret
int3
call
xchg
movsb
push
xchg
mov
hlt
jb
enter
add
shrl
rcll
jne
out
push
in
scas
add
call
mov
shrd
andl
add
jg
sahf
push
jg
xchg
push
xchg
jns
push
mov
add
ja
mov
mov
test
inc
inc
shr
cmp
mov
loopne
xchg
add
xor
nop
add
jae
out
sub
add
inc
insl
add
add
pop
int3
inc
fsub
hlt
sti
inc
bound
dec
aam
inc
add
add
sbb
movb
add
mov
xchg
mov
push
pushf
sub
sbb
mov
dec
cs
je
imul
mov
sub
or
cmp
jb
ret
push
jmp
xchg
add
pop
daa
add
add
in
jnp
jmp
add
xchg
idiv
jg
sbb
mov
jge
jg
lock
mov
add
js
or
outsl
lock
stc
jmp
repz
insb
inc
out
add
sbb
mov
sub
push
sbb
out
testl
mov
add
rcrb
and
fstpt
cli
ja
add
add
add
repnz
fdivr
inc
add
xchg
push
std
mov
sbb
ja
cmc
adcl
and
popa
pusha
in
mov
jnp
cld
outsb
mov
mov
popa
mov
out
push
adc
push
cmc
mov
dec
adc
pop
add
js
in
ljmp
leave
pslld
cld
sahf
xchg
inc
call
add
scas
inc
call
ret
or
hlt
cld
jbe
mov
rorb
test
or
lods
in
test
add
lcall
or
pushl
aad
sbb
mov
fs
add
out
cld
push
stos
mov
test
inc
or
loop
xor
cmp
pop
aad
fmull
cmc
mov
or
add
add
push
jno
adc
push
mov
out
inc
aaa
lret
out
mov
cmp
jae
mov
cmp
je
jmp
jg
add
adc
repnz
inc
inc
add
dec
or
test
cmp
adc
pop
pop
dec
inc
mov
pop
xchg
xor
fsts
and
push
int
push
mov
andl
jle
or
sbb
adc
je
call
bound
mov
push
add
mov
push
pop
bound
mov
lock
iret
pushf
sub
mov
xchg
addr16
xlat
pop
xchg
out
add
add
cmp
adc
xor
lock
in
test
jmp
lock
stos
xor
jg
mov
aam
add
lahf
inc
mov
lret
cmpsb
outsb
notl
cmp
in
rorl
mov
mov
cmc
or
movsb
icebp
jmp
add
or
adc
ret
adc
inc
fists
ret
mov
sbb
in
enter
xchg
outsl
aas
adc
cli
jmp
lret
aaa
adc
or
cwtl
dec
das
mov
cmc
xchg
out
popf
dec
add
xlat
mov
and
test
iret
sbb
ljmp
jo
add
add
jae
stc
ss
pop
test
rcl
shll
outsl
or
add
sbbb
add
push
mov
and
add
add
sbb
ljmp
je
jmp
add
popf
jae
jb
ret
call
je
add
cmp
jmp
lret
add
shl
aas
jg
add
add
push
lds
ret
dec
jg
add
add
inc
mov
sub
ret
movsl
jo
sub
in
mov
mov
xor
aad
jno
insl
mov
jmp
test
shl
imul
add
jo
std
and
mov
outsl
or
jae
lahf
aam
and
jmp
mov
pop
pop
dec
jmp
popa
inc
cld
pushf
cmpsb
in
mov
hlt
dec
push
fisttpll
ss
jmp
mov
inc
imul
fdivrl
test
adc
push
call
data16
cmp
data16
hlt
gs
stos
or
sbb
pushfw
or
or
sbb
mov
mov
pop
insb
jle
sbb
or
fdivr
jb
fwait
std
jb
cltd
call
call
push
add
and
fwait
add
jle
push
js
mov
mov
rcll
cli
imul
sub
insb
scas
mov
int
ja
mov
aam
dec
iret
jbe
divb
fcompl
stc
jno
add
ds
xchg
repz
std
cltd
aas
addl
out
inc
lret
xchg
add
mov
add
dec
or
inc
std
lret
mov
cmp
fcomps
sub
sub
jge
std
mov
pop
mov
mov
ljmp
call
divb
push
jo
roll
call
pop
in
inc
ret
mulb
jmp
ljmp
fadd
pop
jmp
in
std
test
repz
lahf
push
and
jp
add
push
or
rolb
mov
in
push
cwtl
dec
push
aam
sti
xor
and
or
adc
mov
out
or
jae
add
push
mov
test
pop
mov
push
inc
bound
inc
das
add
ud1
push
cmovge
adc
mov
sub
cli
jne
mov
push
mov
push
dec
call
ljmp
add
push
jmp
add
add
pop
mov
or
mov
jmp
mov
push
fisttps
fwait
add
rcr
xchg
popa
add
inc
ss
and
inc
test
or
add
outsl
push
je
push
xchg
mov
jae
movsb
aas
or
adc
cld
fists
add
push
jne
add
pop
jmp
and
pushf
aas
or
add
cli
loopne
mov
add
cmp
cli
enter
pop
sub
mov
aas
iret
stos
repnz
mov
mov
aad
mov
fisubl
xchg
mov
in
scas
push
in
pop
dec
insb
inc
sub
into
add
out
shlb
outsl
inc
add
jbe
add
mov
cmpsb
jo
ljmp
das
xchg
adc
cmp
fists
add
sbb
jae
inc
std
call
adc
or
icebp
jae
mov
stos
pop
adc
call
fisubl
dec
sub
add
xchg
mov
xor
test
add
mov
pop
fsts
adc
xor
or
xlat
flds
cmc
adc
xor
call
lds
adc
out
adc
add
add
out
jmp
in
cmc
ret
xchg
jg
cld
out
add
das
out
or
ret
in
jmp
add
out
jnp
cld
in
mov
push
sti
jne
mov
movsl
in
add
rolb
push
jmp
fcoml
shl
lods
add
mov
xchg
mov
add
mov
stc
push
push
lds
push
pop
nop
jns
add
cld
pushl
cwtl
cld
decl
add
fldenv
mov
int3
dec
decl
call
fwait
inc
std
fcom
cld
push
addr16
enter
jbe
fld1
sbb
xlat
call
add
les
std
mov
call
fisttps
sbb
add
test
mov
add
sti
inc
enter
flds
data16
cltd
add
add
add
add
jge
in
push
push
pop
push
repz
call
push
fisubs
lahf
shll
add
out
out
fnstsw
mov
out
out
not
daa
jecxz
sti
push
imul
fcomp
les
cli
icebp
leave
cltd
cmp
jmp
in
add
cmp
negb
add
jg
pop
out
iret
arpl
add
add
imul
repnz
jp
or
inc
mov
leave
adc
test
adc
sbbb
mov
adc
subl
add
jmp
xchg
push
loopne
data16
fldl
add
ret
jo
insb
lock
mov
ret
sbb
sbb
add
or
adcb
sti
aam
or
add
jp
loope
lods
ret
dec
mov
inc
sahf
inc
or
jp
or
int
add
cli
mov
mov
add
jno
xchg
outsl
fmuls
mov
adc
lret
add
lahf
clc
push
shll
push
cmpl
sahf
addl
fmuls
xor
jnp
add
out
sub
test
pop
sbb
jnp
out
sbb
push
test
js
add
jno
loopne
jmp
out
or
add
pop
push
push
push
xlat
fisubrl
mov
pushf
mov
int
xchg
jb
cld
adc
add
rcrl
int3
jp
aas
xlat
add
mov
jmp
je
push
inc
pop
flds
iret
jb
in
xchg
call
mov
std
add
pop
inc
or
shl
incb
add
add
pop
cld
push
shlb
cltd
add
jecxz
add
sbb
add
flds
ja
pop
fdivp
lds
daa
add
inc
repz
sbb
push
adc
insl
scas
xchg
jbe
xchg
out
or
popa
dec
repz
fmull
imul
popa
aaa
or
jns
push
data16
ja
fldt
jmp
in
add
test
add
jg
add
pop
jb
daa
inc
loop
je
repnz
imul
in
push
jecxz
cmp
add
inc
add
mov
add
and
jns
stc
fwait
aas
call
cmp
std
addl
in
cld
scas
mov
stc
aas
jmp
push
jnp
loope
inc
jne
adc
ljmp
out
orl
add
inc
push
lcall
jmp
nop
les
jmp
add
or
jmp
adc
add
adc
dec
add
mov
add
ljmp
push
inc
loope
add
je
cs
ljmp
push
sub
cs
pop
add
add
dec
mov
mov
add
mov
mov
ficoms
add
cld
mov
int3
add
dec
in
pop
ret
les
andb
sbb
repnz
add
jle
inc
ja
hlt
add
add
push
call
xchg
sbb
test
add
mov
js
loope
push
sbb
ret
push
fcmovnu
xor
mov
pop
inc
test
add
inc
inc
lock
add
add
fists
flds
pop
fldenv
pop
push
gs
push
icebp
pop
insl
enter
flds
loopne
cltd
add
fmulp
xchg
inc
add
sub
scas
mulb
xchg
leave
ficomps
gs
aad
pusha
inc
xchg
push
add
imul
pop
js
xor
sub
adc
xchg
add
andl
call
shrl
inc
imulb
adc
mov
pop
bnd
mov
loop
idiv
sarb
adc
incb
imul
shrb
lods
adc
mov
cmp
loopne
xorb
hlt
sahf
xor
add
add
and
shrb
xchg
sub
cmp
fisttps
xchg
cmpsb
aas
loop
in
inc
stc
insl
jb
xchg
in
data16
jmp
dec
inc
lock
sar
jno
mov
loopne
add
sbb
mov
lret
fnstcw
jbe
repz
cmp
scas
inc
cwtl
imul
jg
mov
add
push
sbb
outsb
decl
fs
cld
insl
add
testb
ds
xchg
add
mov
xchg
add
sbb
outsb
cld
or
imul
pop
push
and
popa
add
or
imul
loopne
shll
push
cmp
mov
popa
xchg
dec
inc
ja
add
mov
int3
push
add
add
jl
xor
add
pop
mov
add
xchg
call
add
scas
cmp
or
roll
cmpb
in
rcrb
inc
int3
out
test
jne
jo
in
xchg
sbb
fisubs
sub
add
inc
adcl
fdivrl
repnz
push
add
push
pop
jbe
aas
adc
or
les
add
inc
jmp
imul
push
outsb
aas
int3
or
mov
aas
xchg
call
sbb
lsl
and
sub
flds
test
in
jl
push
flds
mov
pop
inc
dec
rolb
push
add
push
dec
sbb
out
jo
bound
imul
jle
sbb
sub
sbb
paddb
rorl
repz
add
out
mov
jne
aas
sahf
mov
dec
repz
jg
repz
xor
out
xlat
push
add
loop
jle
stc
mov
jg
repnz
add
out
jne
out
xlat
cmpsl
out
call
cmp
push
mov
jmp
test
adc
faddl
enter
out
sub
out
ds
lods
jbe
add
faddl
sub
ss
or
add
stos
cmp
add
push
shlb
jb
jecxz
dec
sbb
bound
adc
or
jb
mov
fidivl
sub
repnz
jns
test
or
mov
aam
pop
repnz
xor
add
sbb
jmp
dec
jmp
add
add
xor
add
mov
or
sbb
or
xlat
jl
jle
outsl
sbb
adc
add
pop
sbb
mov
fs
loope
add
ljmp
ds
mov
ljmp
pop
jp
inc
jae
ds
adc
and
cld
incl
jle
mov
and
jl
cmc
jae
pop
imul
testb
and
je
or
inc
loop
mov
lods
movsb
pop
xchg
mov
notl
xchg
lods
lods
dec
mov
scas
jo
sbb
adcb
repnz
insl
psubsb
add
mov
fildl
lods
ljmp
and
inc
cmc
sub
in
xor
fsts
pushf
pushf
fisttpl
mov
call
out
fists
cld
clc
push
sahf
out
aas
sub
add
jbe
lret
jp
xchg
sub
push
in
adc
sub
add
mov
xor
cmpb
adc
cltd
addl
sbb
add
push
ror
mov
mov
xorl
and
jae
mov
add
lahf
les
mov
add
cmp
add
or
adc
push
jb
or
je
or
or
xchg
mov
push
hlt
fisubrs
add
add
xor
aad
mov
inc
or
xchg
or
or
lods
mov
jno
mov
scas
sub
pushl
mov
insl
testb
pop
add
icebp
lods
or
sub
les
push
push
cld
add
push
in
sub
add
pop
inc
or
add
jmp
repnz
xchg
sbb
subl
mov
cld
lods
sbb
cmp
dec
fucomi
push
sub
push
or
jmp
pop
or
add
lds
cmp
push
repnz
sub
pop
daa
rolb
stos
pop
jmp
ljmp
xor
xor
ss
add
add
jns
and
je
pop
add
xor
add
inc
jo
cmp
std
stc
les
call
jmp
inc
jmp
inc
adc
cwtl
add
sbb
or
push
jle
mov
in
test
hlt
xchg
jp
cmpsl
push
inc
call
xchg
lret
sub
add
and
or
stos
add
push
add
add
pop
jmp
xor
mov
add
gs
inc
jmp
dec
mov
sub
loopne
mov
push
rcrl
inc
push
or
jo
mov
aas
shrl
shrl
xchg
mov
pop
test
adc
test
push
out
jno
ret
jg
push
cwtl
inc
sub
shrl
and
add
cmpsl
cmp
add
add
mov
loop
test
adc
xchg
sub
pop
push
jecxz
pop
sub
daa
sub
and
xorb
cld
and
or
push
test
xor
mov
adc
outsl
add
sbb
push
test
hlt
out
add
push
add
insl
aaa
mov
sbb
push
add
mov
jbe
adc
adc
icebp
negb
mov
mov
sbb
mov
xlat
add
mov
rorb
jmp
jne
inc
adc
fs
lods
js
test
iret
add
or
jae
xchg
sub
aam
xor
dec
sub
fdivs
mov
mov
jp
inc
add
sti
xor
sbb
xchg
sti
adc
outsb
cmp
add
xlat
adc
std
jo
cmp
push
pop
inc
aam
cmp
mov
add
push
jmp
mov
pop
sbb
jne
cld
pop
lock
call
sbb
adc
pop
fs
or
dec
dec
les
in
cld
inc
jl
incl
mov
add
pop
loopne
or
push
cmp
repz
mov
xor
add
jmp
jb
nop
cmc
mov
pop
shrl
fwait
and
fsubr
xlat
push
shlb
cmpb
jae
out
mov
ds
in
adc
inc
adc
jns
adc
inc
add
mov
add
add
add
push
jae
xchg
jmp
fdivr
lahf
or
mov
or
jp
fdiv
xor
imul
movsl
add
rcl
dec
cld
cmpsb
inc
rorl
hlt
dec
add
inc
es
in
cli
dec
ret
fbld
cmp
add
xor
push
xlat
adc
lahf
xor
sbb
inc
icebp
add
popa
push
add
add
add
xlat
repz
add
out
push
or
add
inc
sbb
dec
cmp
sti
dec
out
jmp
aam
jmp
in
sarb
lods
inc
push
add
xlat
shll
add
push
in
xchg
push
hlt
mov
insb
mov
cld
into
icebp
push
add
adc
jb
fpatan
mov
call
add
fsubp
xchg
mov
sub
fmull
adc
pop
fstps
mov
inc
pop
or
fstl
in
add
pop
lock
mov
or
cmp
popf
jno
cmc
mov
sti
push
test
jno
inc
into
sub
add
pop
xor
loop
inc
add
decb
inc
sub
push
sub
dec
call
jp
jo
jnp
jo
sub
cli
adc
inc
scas
xor
stos
sub
push
push
call
mov
test
pop
pusha
inc
sbb
pushf
add
daa
dec
inc
or
addr16
pop
loopne
pop
es
jmp
inc
pop
and
xor
fcoml
add
ljmp
dec
fsubp
out
ljmp
mov
jmp
test
cli
cld
dec
ja
inc
pop
mov
add
xlat
push
or
fists
and
inc
jmp
or
inc
add
or
push
in
cmc
adc
xor
add
or
or
out
rorb
faddl
inc
ss
pop
aad
daa
or
mov
sbb
inc
pop
ret
push
dec
fcmovnu
and
mov
sbb
dec
repz
out
inc
icebp
fadds
cmp
add
inc
in
push
add
xor
sbb
mov
mov
xchg
inc
pop
shl
pop
sbb
addb
add
add
sti
sbb
jmp
cltd
adc
push
adc
std
hlt
cwtl
lock
jmp
data16
push
fadds
add
mov
loope
sbb
les
dec
sbb
push
out
stos
adc
adc
inc
adc
insb
pop
dec
or
in
jb
push
sar
popa
rorl
jmp
shrl
adc
aaa
fsin
call
pop
loop
sub
push
jb
dec
push
or
cmp
and
test
shl
inc
jmp
push
add
cmp
mov
sti
je
or
adc
enter
ret
sub
jae
in
outsb
rorb
mov
push
je
out
stos
outsb
incb
xor
sbb
and
outsb
incb
push
add
add
mov
or
inc
or
jnp
or
mov
dec
faddp
and
add
je
adc
les
cs
push
jns
or
fs
and
add
rclb
inc
sahf
sub
cld
or
hlt
aas
pop
nop
adc
xlat
bound
jmp
orb
adc
fidivl
pop
add
sbb
add
push
call
inc
pop
fbstp
mov
loop
je
repnz
stos
jg
xor
inc
add
into
sbb
xlat
fimull
push
dec
and
jae
enter
sbb
cld
imul
cld
mov
dec
repnz
cld
cmp
lret
or
insl
pop
sar
or
inc
sar
mov
push
push
filds
inc
jecxz
and
xor
add
outsb
and
pop
out
sti
mov
inc
out
fisubrs
sub
pop
aaa
jb
lahf
mov
pop
add
inc
add
les
repz
inc
out
adc
xchg
mov
push
adc
lock
fs
call
call
int
in
sar
jmp
sbb
imul
jge
lds
aam
inc
jmp
inc
into
dec
inc
movsb
out
call
pop
cmpl
xchg
test
add
into
mov
sbb
add
stc
out
dec
aam
jae
add
xor
int
cmp
inc
add
sbb
add
sbb
cmp
adc
inc
add
loop
sbbl
stos
lcall
mov
mov
lea
pop
test
scas
add
decl
add
rolb
lock
add
add
sub
push
sti
adc
mov
add
sub
pop
sbb
add
xchg
pop
enter
pop
ficomps
loopne
xchg
ja
push
push
jnp
aas
pop
or
adc
test
lods
out
push
fildl
add
xlat
inc
add
mov
add
mov
add
aas
add
int
jnp
mov
jb
cmp
dec
outsl
sbb
sbb
add
pop
jae
out
aam
call
mov
repz
add
xor
out
or
mov
lods
outsb
add
jge
imul
ljmp
gs
xchg
sarl
mov
stos
add
add
add
add
add
jbe
vmwrite
cmpsb
fucom
add
xchg
es
aad
add
xchg
outsl
xor
dec
pop
int
and
inc
out
cwtl
push
shrl
jg
xor
int3
fisttpl
inc
mov
popf
dec
shrl
fcos
add
int3
cld
pop
cltd
push
std
out
cmp
cmpsl
dec
lret
cld
popa
dec
int
in
inc
std
jmp
add
xor
push
add
inc
hlt
stc
outsl
inc
std
push
pop
int
out
inc
or
popf
cmp
test
sti
or
adc
inc
in
stos
pslld
std
mov
jb
gs
aam
subl
lock
pop
sti
adc
cwtl
fwait
call
fs
subl
arpl
adc
cli
adc
decl
andl
or
shrb
ja
scas
mov
inc
mov
mov
add
scas
adc
mov
sub
mov
scas
sub
mov
scas
out
decb
add
call
cmp
mov
add
inc
or
and
and
outsb
aas
jne
adc
xor
mov
std
xor
and
hlt
aas
pop
outsl
push
mov
add
std
push
fdiv
movntps
add
sbb
xor
rorb
add
shl
add
add
push
lock
aad
add
outsl
and
pop
loopne
or
mov
clc
push
fcomp
or
pop
fcmovne
jne
bound
add
ljmp
xchg
sbb
andl
hlt
mov
not
mov
jmp
jge
adc
adc
push
hlt
shlb
add
add
push
aad
jmp
or
cmp
ds
out
enter
sar
jnp
xchg
rcll
aas
sti
test
cmpsb
flds
jg
push
inc
jge
clc
inc
test
add
addr16
sub
xor
jbe
fsubr
adc
loope
hlt
testl
mov
add
jecxz
aam
repz
in
outsl
inc
xor
divb
test
test
lods
lock
dec
adc
sub
movsb
push
xor
jmp
add
mov
pop
xor
mov
call
pop
cli
cld
xor
mov
shrl
call
fdivs
mov
cld
mov
push
inc
loop
cld
jmp
adc
ret
fstps
je
call
dec
cld
inc
fnstenv
call
call
mov
or
cmp
sldt
add
add
inc
inc
or
ret
bound
jge
mov
enter
cmp
call
jp
jo
fs
addr16
add
add
add
in
out
push
mov
test
mov
or
xchg
ljmp
cmp
cmp
jo
add
mov
adc
scas
add
dec
stos
jb
icebp
mov
shrb
test
pop
or
adc
inc
add
push
mov
mov
and
call
xchg
sbb
pushf
popf
lock
ficoml
xor
adc
add
dec
out
clc
jmp
mov
mov
in
jbe
adc
or
cld
cld
or
push
push
call
add
add
mov
pushf
add
je
in
fistl
add
add
js
cs
out
mov
jb
xchg
fidivrs
subl
daa
sub
push
sbb
daa
xlat
adc
xor
xchg
es
repz
ds
daa
push
dec
cmpsl
add
cmp
es
jnp
sub
jnp
sub
jnp
sub
aaa
pop
add
or
in
sahf
add
add
popf
fisttpl
test
cmp
adc
out
xchg
xor
add
sbb
xor
cltd
test
cmp
dec
push
hlt
addr16
push
cld
push
cmp
jmp
loope
mov
adc
add
dec
pop
mov
add
sbb
out
add
cld
xchg
jb
inc
or
adc
mov
ljmp
sbb
add
testl
sbb
adc
fldenv
push
adc
inc
decb
call
cmc
mov
sti
imul
or
cmpsl
dec
inc
and
jne
add
sbb
incl
mov
cld
ljmp
jecxz
lea
imul
cli
je
into
in
lods
std
incl
out
into
fs
jg
loop
pop
and
mov
adc
add
xchg
mov
testb
je
fcomps
mov
add
pop
mov
add
mov
add
add
sbb
cltd
imul
mov
add
fnstenv
push
push
in
pmovmskb
fstl
inc
pushf
sbb
sbb
addr16
flds
cmpb
inc
add
sub
call
cltd
es
pushf
push
sub
add
pusha
sbb
mov
sbb
xor
ret
fnsave
enter
fstpt
pop
ret
test
add
enter
dec
add
xchg
mov
adc
rcll
push
stos
fwait
call
dec
mov
and
add
out
push
ss
or
sub
mov
jl
lods
out
xor
inc
roll
pop
cmc
sub
adc
pop
stos
in
sub
rol
movsb
or
add
cmp
fcoml
cmc
es
add
ss
stos
stc
out
sarb
out
shlb
lock
add
std
ljmp
adc
add
jae
pop
pop
xor
push
mov
lods
pop
sbb
fistl
dec
push
mov
das
out
sbb
xchg
pop
mov
mov
adc
push
je
test
cld
insl
push
or
add
icebp
mov
mov
jnp
add
dec
sahf
cmp
sbb
fdivr
shl
test
call
addr16
and
repnz
icebp
outsb
dec
sbb
push
mov
aad
xor
test
mov
hlt
sub
push
aaa
jne
dec
cmp
mov
adc
add
pop
add
cmp
call
ljmp
add
std
pop
add
call
jg
or
testb
jno
mov
cmp
inc
data16
jne
cmp
decl
enter
push
adc
leave
adc
scas
dec
add
xor
imul
push
inc
push
adc
mov
push
and
mov
sbbb
addb
add
add
lds
aaa
fldl
xchg
mov
adc
lcall
sbb
jl
outsl
bnd
sub
jb
push
dec
nop
dec
neg
jecxz
out
pop
fsubrp
clc
dec
xor
cmpb
xor
gs
dec
sbb
lds
add
js
lods
js
lar
shll
addl
inc
add
inc
push
bound
roll
out
pop
push
pop
dec
scas
stos
les
bound
testl
orl
int3
lea
xor
push
insb
aas
arpl
or
in
imul
mov
sti
cmp
repz
jmp
xor
push
or
add
add
add
aaa
in
pop
loop
les
add
rorl
pushf
sti
push
add
push
out
movsb
psllq
sbb
popa
scas
mov
cmpsb
sbb
scas
shl
cld
cld
pushf
adc
shrl
or
lret
call
int3
ret
cmp
push
bound
push
push
jb
adc
and
add
inc
icebp
sbb
inc
add
mov
daa
inc
sbb
mov
dec
in
aaa
lock
incl
ret
repnz
add
cs
adc
push
push
mov
mov
das
sar
dec
lock
or
inc
or
inc
adc
xchg
push
xchg
mov
and
scas
push
push
addl
push
lds
push
test
add
add
dec
mov
and
or
gs
std
jmp
aas
xor
rorb
xchg
and
mov
pop
call
sub
aaa
sbb
shll
lds
rorl
push
shll
add
pop
clc
stos
repnz
add
xlat
repnz
push
aad
add
xchg
lea
sub
or
push
adc
and
sbb
push
sub
jae
lcall
enter
mov
cmp
add
ss
jg
mov
sub
ret
jno
or
imull
add
jae
out
push
lods
je
rcll
cmp
sbb
inc
mov
shll
inc
xchg
mov
test
cli
in
repz
add
push
mov
lods
and
xor
xor
leave
pushf
clc
ret
ljmp
aas
shlb
add
add
cmc
popf
data16
mov
adc
fimuls
xchg
test
jmp
dec
or
or
sub
pop
push
sub
cmp
adc
mov
jmp
dec
push
xchg
fisttpll
std
sahf
fwait
mov
sbb
mov
test
mov
xchg
ja
sub
sub
outsb
cs
or
add
or
pop
addb
mov
cld
add
add
inc
add
add
icebp
mov
inc
add
clc
sti
add
add
fistl
dec
mov
pop
xchg
insl
push
adcl
sti
addl
std
mov
stos
adc
cmp
cld
mov
push
dec
call
cmpl
add
scas
test
xor
cmp
add
mov
push
inc
pop
test
es
dec
mov
push
das
and
add
and
xchg
mov
and
lcall
jb
adc
pop
test
add
jmp
std
pop
mov
push
add
call
inc
sbb
or
das
add
pop
push
inc
and
clc
mov
push
pushf
test
mov
mov
hlt
dec
mov
inc
xor
xchg
mov
or
out
mov
fwait
and
pop
push
sub
mov
sti
in
pop
inc
repz
outsl
aas
sti
or
out
add
cli
adc
rorb
dec
divb
cmp
mov
mov
sti
mov
call
add
jne
shlb
push
sti
adc
lock
mov
call
inc
stos
dec
add
lods
sti
jmp
add
xor
mov
adc
jnp
imul
adc
jae
inc
popf
mov
adc
mov
push
cld
push
pop
add
ud0
lahf
inc
and
push
jge
inc
frstor
or
stos
mov
pop
out
or
stos
mov
stos
or
pop
rorl
call
dec
mov
or
add
cmp
test
test
insl
adc
add
loope
xor
add
jno
jbe
push
call
push
inc
jne
jbe
xchg
sbb
adc
add
jne
jbe
xchg
xor
add
add
ds
and
push
test
cmp
dec
std
mov
std
out
mov
or
sti
je
cmpsb
sti
je
mov
sti
mov
jbe
xor
mov
mov
sub
adc
cld
call
and
jl
jl
push
test
call
std
jmp
loopne
sarl
and
aas
and
test
fcos
sub
rorl
call
dec
and
xor
and
mov
fwait
les
adc
push
pushw
fdiv
or
sub
add
cmp
add
cmp
sub
das
imul
add
cli
mov
loopne
mov
lahf
es
out
aam
mov
aam
push
cwtl
cmp
inc
adc
repz
pop
aas
sti
cmp
out
pop
add
adc
mov
out
pusha
sub
cli
xor
and
clc
fildl
mov
fbstp
xchg
fistps
mov
cmp
and
sub
sbb
into
inc
sti
or
repz
push
sti
adc
call
arpl
inc
int
incb
imul
cld
std
pop
or
cld
arpl
add
add
jae
lcall
mov
push
mov
inc
pop
out
push
fsts
and
jae
adc
adc
jae
add
das
std
adc
rcrl
dec
ret
push
mov
sub
add
xor
push
adc
adc
lods
call
add
push
ret
aas
xchg
cmp
std
add
add
push
pop
repnz
mov
les
add
loopne
add
loopne
imul
mov
and
push
push
push
add
xor
imul
mov
sub
sub
add
int
jge
add
pop
jmp
xorl
inc
cli
loope
sbb
das
daa
add
add
icebp
adc
add
add
add
add
lds
pop
pop
cltd
jl
or
xchg
out
adcl
jae
sbb
cltd
mov
sbb
xor
sbb
mov
out
mov
mov
les
aas
lock
pop
pop
xor
add
dec
add
xchg
fsubrs
pop
lock
out
push
cltd
xchg
inc
add
push
iret
adc
out
push
scas
pop
inc
cltd
bound
scas
adc
test
xor
stos
xchg
and
add
push
add
int
mov
push
xchg
sbb
out
sbb
call
mov
in
scas
ficompl
mov
inc
cmpb
test
push
push
sbb
outsb
mov
ljmp
out
jmp
je
int3
scas
std
mov
push
add
push
add
and
cmc
pop
lock
push
mov
cld
mov
sbb
subl
cltd
jae
adc
scas
pop
xor
dec
ret
add
mov
jb
stos
pop
add
adc
fcom
adc
call
arpl
ret
lcall
adc
push
shll
xor
setl
push
add
aad
jnp
add
inc
add
ds
adc
inc
shll
ja
mov
add
mov
outsb
sub
jne
push
push
mov
jne
cwtl
mov
push
mov
aad
add
test
fdivr
imul
mov
and
push
push
fs
ds
sti
ret
push
mov
jg
and
add
xorl
in
xor
mov
ljmp
lods
push
push
dec
fcoms
add
add
fnstenv
sbb
inc
add
aam
call
lcall
jb
test
mov
aam
nop
fs
push
cltd
add
js
add
xlat
icebp
ss
pop
sub
es
pop
sbb
dec
push
scas
hlt
push
xlat
cwtl
test
lcall
xchg
add
or
mov
add
movl
mov
jmp
xchg
rcrl
mov
push
ljmp
cmpsl
stos
or
aam
stos
std
push
out
pushf
add
imul
sbb
jno
mov
xchg
out
mov
lret
sti
jo
mov
pop
dec
jno
iret
jbe
push
push
add
add
add
xchg
jg
pop
fisubs
js
sub
pop
lcall
push
add
imul
insl
adcl
popa
test
ss
in
testb
xor
add
adc
mov
inc
inc
add
cli
add
call
or
call
repnz
xor
add
add
xchg
pop
mov
inc
jmp
fildl
jmp
mov
mov
xchg
test
leave
xor
rcrl
mov
movsl
in
call
stos
mov
call
mov
xchg
repz
sub
or
or
mov
add
push
mov
aas
add
loope
add
mov
negb
out
pop
cmovnp
out
pushf
les
add
dec
xchg
std
pusha
hlt
adcl
dec
push
push
in
xchg
push
cmp
je
jg
or
inc
and
sub
pop
cmpsl
ss
pusha
clc
mov
notb
call
xchg
insl
clc
add
cs
add
sub
outsl
add
sbb
and
mov
adc
or
mov
paddw
pop
std
inc
mov
lods
adc
pop
mov
aam
xor
adc
pushf
mov
push
mov
mov
add
out
js
pushf
xorb
and
ljmp
mov
pop
jge
movsl
aam
add
xor
adc
mov
out
shl
add
sub
out
inc
ret
fadd
loop
cmpsw
fwait
mov
das
fildll
jecxz
jne
lock
movsl
scas
shll
into
adc
xlat
dec
ret
jnp
push
xchg
and
add
push
push
jnp
jp
xchg
test
add
repz
in
or
in
xchg
std
adc
sbb
out
pop
sub
ljmp
adc
in
pop
out
stc
xor
jg
and
jae
xchg
sbb
or
jns
xchg
decb
sarb
ljmp
adc
testb
ds
or
out
add
cmp
mov
add
or
cld
call
les
add
push
add
or
sti
imul
mov
pop
pop
push
push
mov
shll
andw
mov
in
stc
call
jg
inc
push
jg
push
add
shrl
mov
out
add
mov
add
or
cld
jmp
incl
mov
dec
mov
mov
mov
add
xor
jle
mov
inc
ja
pop
jbe
stos
stos
xor
add
fsub
jp
test
dec
pop
mov
push
mov
popf
pop
adc
loope
inc
add
lea
decl
lcall
in
test
push
mov
clc
adc
ss
push
mov
call
xchg
pop
das
and
cmp
sbb
pop
sbb
pop
push
inc
or
add
add
daa
adc
add
lods
arpl
pusha
movsl
jge
add
pop
in
fwait
data16
out
fwait
ret
loop
arpl
movsb
ds
mov
jecxz
ljmp
xor
push
es
xstore-rng
cmpsl
add
sti
addb
add
dec
fdivrs
fists
xchg
test
cld
adc
out
adc
bound
sbb
das
or
mov
add
add
xor
or
sbb
xchg
add
gs
rcll
and
push
sbb
add
in
out
xlat
cmc
xor
dec
mov
mov
jmp
fwait
stos
cld
notb
or
jmp
cltd
and
jmp
out
ja
call
push
lcall
adc
add
add
call
xchg
daa
adcl
cld
add
fpatan
mov
std
testb
and
jle
lds
xchg
push
add
push
aad
lds
test
add
or
imul
stc
jecxz
add
or
mov
inc
imul
ret
cld
incl
test
xchg
pop
or
jg
add
pop
mov
mov
push
jb
pop
gs
ljmp
push
in
mov
insl
jmp
and
divl
scas
xor
adcb
rolb
sar
sub
sub
xchg
loop
cmp
gs
ret
pop
adc
mov
roll
pushf
insl
movsb
mov
es
jmp
stos
jne
and
ds
ljmp
shll
test
and
sub
test
add
fistl
std
mov
outsb
movsb
mov
jb
xchg
add
mov
out
clc
test
into
inc
fldenv
lods
and
sub
mov
out
add
test
bound
lea
mov
xor
pop
stos
jg
mov
popa
add
inc
pop
test
xor
mov
cmpsl
dec
xchg
xor
mov
mov
pop
add
jns
sbb
inc
out
fwait
not
inc
decl
leave
mov
jae
mov
add
inc
call
bound
push
xchg
inc
adc
or
dec
mov
lds
jae
call
in
sbb
xchg
bound
call
jge
mov
push
sarl
stos
cmp
push
bound
aaa
push
jb
xor
test
xlat
mov
jae
mov
xchg
insl
push
sbbb
cld
mov
imul
xchg
and
jmp
add
dec
add
jmp
mov
sbb
push
fucomi
add
add
xchg
scas
add
repz
call
repnz
sti
in
jmp
adc
mov
jle
jb
outsb
add
jle
mov
xor
add
push
in
lret
jmp
push
or
mov
ds
jge
or
push
cwtl
cld
pushl
mov
push
pop
add
pop
stos
ja
sahf
sbb
jl
pop
stos
add
in
ja
dec
mov
add
jge
pop
stos
add
jno
dec
or
cmp
stos
jne
movlps
clc
xchg
std
idiv
jmp
push
adc
in
dec
mov
dec
mov
push
xlat
stos
jg
or
shll
ds
or
xchg
inc
mov
cmc
mov
fadd
xchg
rolb
cs
stos
addr16
jno
das
inc
nop
cmp
leave
daa
daa
or
jae
imul
adc
push
cld
inc
jmp
add
cltd
fiadds
add
xchg
push
add
pushf
inc
arpl
xchg
arpl
stos
out
push
fwait
imul
jmp
sbb
stos
adc
sahf
xor
lock
sub
cmp
mov
xor
dec
out
add
xchg
cmp
mov
es
jb
nop
aas
hlt
mov
adc
or
andl
add
adc
mov
rcll
test
decl
pop
addr16
adc
mov
rclb
xchg
lods
addr16
inc
aad
stos
sbb
push
bound
mov
icebp
jle
cmc
cmp
or
fdivr
andb
add
xor
insb
out
call
test
mov
add
mov
add
imul
test
inc
mov
idivb
or
dec
in
sarb
jg
jle
push
psubsw
add
sub
out
pop
jge
dec
wbinvd
hlt
mov
in
jle
ja
pop
add
sbb
xlat
and
test
jae
cmp
int
btr
lcall
rorl
add
movsl
jns
lods
stos
ret
insb
roll
push
rorl
jge
xchg
ret
rcrl
push
lcallw
jmp
div
or
stos
add
ret
add
cltd
call
dec
xor
push
adc
mov
sub
add
adc
subl
add
add
sbb
leave
and
iret
cmpsl
adc
pop
mov
or
imul
mov
add
cmp
loop
pop
xor
divb
sub
pop
sbb
adc
stos
inc
push
push
mov
das
out
pop
mov
lahf
mov
cwtl
xchg
arpl
fcoms
out
add
xchg
out
mov
jge
fwait
pop
xchg
sub
mov
inc
xchg
push
lahf
and
add
call
js
dec
mov
push
add
ds
stos
or
xchg
xchg
cld
mov
xchg
jb
sub
subl
divb
movsb
les
add
or
icebp
and
adc
adc
aad
dec
fidivrs
scas
call
dec
cmp
stos
adc
push
jb
pop
in
rcrl
add
sbb
sub
inc
jmp
xchg
jl
mov
or
ljmp
cmpl
mov
sbb
jge
ja
hlt
imul
add
add
sti
incl
jno
or
mov
mov
mov
in
lea
in
xor
shr
push
xchg
imul
mov
in
decl
lret
mov
add
lea
sti
lcall
ja
or
arpl
call
stos
test
jg
add
push
xchg
lock
ret
mov
and
fwait
push
das
pop
add
adc
inc
std
push
mov
push
mov
jmp
js
push
jg
repz
pop
jae
adc
stos
test
fldcw
xchg
cmp
push
sbb
xchg
call
pushf
jo
push
stos
add
mov
stc
incb
loope
lcall
cmpsl
lea
add
sub
in
es
xchg
testb
movsl
push
popf
and
sub
cmp
movsl
not
pop
sbb
or
bound
mov
into
add
out
mov
push
inc
loopne
out
push
xchg
jno
addr16
mov
push
rcrb
mov
add
add
das
popf
xor
cmp
out
fwait
xchg
mov
test
flds
sub
cmp
add
ss
sarl
aam
xchg
cmpb
into
cltd
dec
push
add
dec
mov
push
inc
jl
out
adc
subl
or
cs
adc
adc
add
sar
push
or
add
mov
sub
add
jg
mov
lahf
inc
cld
cwtl
out
dec
push
xchg
push
jae
cltd
pop
cld
jmp
inc
or
ret
or
aaa
ret
xor
loopne
ds
ss
and
das
rclb
orps
ja
or
ja
or
mov
cmp
outsb
ss
lock
pop
push
in
or
push
add
cmp
mov
sub
add
imul
or
jae
jne
pop
lcall
insb
jnp
pop
jmp
add
mov
stos
jl
or
inc
daa
in
cs
ljmp
or
xchg
cld
add
ret
jae
fldcw
xor
or
stos
pushf
mov
pushf
popa
cmp
std
lds
pop
push
das
mov
es
jb
push
mov
jmp
sub
aas
add
mov
xchg
or
fsubl
outsb
add
push
jno
push
push
add
mov
cwtl
add
les
jg
outsl
aam
add
std
clc
rcll
pop
cmp
test
movsl
add
jle
jnp
or
cmp
mov
add
pop
sub
cmp
sti
add
shlb
pushl
push
lock
scas
sub
jno
stos
stos
popf
inc
dec
xor
mov
add
sbb
xchg
mov
inc
cli
push
add
add
add
push
in
and
and
stos
adc
or
mov
adc
in
dec
aas
ret
mov
sbb
push
icebp
pop
daa
fldcw
adc
cs
mov
loope
iret
call
aas
daa
fldcw
sbb
adc
mov
sub
xchg
std
pop
inc
add
push
sbb
stos
adc
push
push
add
repz
std
shll
cmp
push
sbb
or
inc
notb
dec
out
push
add
insl
loopne
add
lahf
cmp
test
adc
fsubs
jmp
aaa
lds
ds
push
push
mov
push
and
pop
cmp
call
lods
adc
add
xor
and
add
xchg
mov
incb
add
insl
icebp
or
push
inc
add
repz
lods
add
pop
std
cmp
cmp
stc
dec
push
add
add
shll
and
or
add
mov
xchg
or
mov
inc
add
and
cs
and
aas
add
or
jmp
xchg
add
pop
fwait
das
push
jmp
xchg
lcall
pop
int3
in
pop
pop
testb
pop
xchg
add
orl
lock
jb
insb
jge
sbb
lods
jmp
lcall
pop
add
mov
dec
loop
pop
add
mov
orl
pop
lcall
fwait
enter
pop
out
pop
xchg
push
ja
out
pop
xchg
or
out
arpl
call
xchg
xchg
and
subl
mov
cwtl
xchg
and
jle
push
mov
pop
imul
and
pop
or
shrb
adc
sub
aas
cld
ljmp
dec
icebp
adc
push
mov
shrl
test
adc
std
pushl
dec
icebp
xchg
inc
or
and
pop
dec
cli
mov
lds
lea
push
lea
adc
pop
notl
ds
lds
in
stos
pop
add
mov
add
stc
mov
or
inc
cwtl
add
inc
xor
out
add
mov
pop
inc
add
jge
add
add
jo
xchg
add
push
in
cld
imul
incb
push
sub
mov
inc
jbe
inc
je
andl
std
fadds
add
jg
mov
movsl
inc
add
sub
aas
add
outsb
adc
sub
inc
cs
jo
xchg
cld
cli
incl
andl
add
flds
dec
int3
pop
add
inc
inc
clc
adc
add
fld
push
pushf
lret
jge
pop
push
cmp
inc
add
fistl
pop
pop
add
push
test
push
nop
scas
loopne
add
lcall
in
jp
pushf
loope
inc
pop
pop
outsl
aam
cld
pop
pop
les
shr
or
enter
jnp
pop
rcll
pop
fimuls
jmp
adc
addr16
xor
xchg
sub
out
mov
pushf
sub
inc
cli
and
add
ret
out
into
repz
add
inc
mov
lods
mov
sbb
jge
sti
sbb
repnz
mov
movsl
jnp
out
mov
adc
cmpsb
xlat
add
int
cmc
cmp
ljmp
mov
pop
cmp
fildl
and
repnz
repz
call
add
psubsw
mov
cltd
inc
jae
cli
add
ret
adc
std
cld
lods
idivl
jmp
sbb
jb
add
xor
cmp
sub
mov
scas
mov
out
xchg
push
xor
int
fwait
or
sub
aad
adc
nop
xchg
fnstsw
scas
cwtl
xchg
cmpsl
fwait
or
xchg
add
push
incl
cmp
call
sbb
pop
inc
les
ret
or
sbbl
inc
dec
into
cli
adc
imul
push
push
add
add
bound
sub
clc
push
or
pop
jmp
or
and
stc
jg
lods
addb
std
cmpb
dec
call
add
ret
cmpsl
rolb
add
jmp
add
roll
push
pop
int3
jle
jae
cld
adc
lcall
out
lcall
lock
mov
imul
sahf
push
clc
or
pop
add
xchg
cltd
flds
jg
iret
out
cld
mov
mov
out
add
pop
and
mov
es
sbbb
lcall
out
fwait
add
popa
push
pusha
cli
push
dec
repz
pop
add
pop
add
loope
jg
sub
out
xchg
ret
lahf
repz
add
mov
xchg
cli
out
popa
ja
lods
add
test
push
scas
mov
lea
sbb
sub
jecxz
xchg
lea
sub
cs
mov
aaa
push
jns
dec
xorl
popa
add
jbe
pop
pop
test
sbb
xor
sub
push
mov
add
xchg
test
sbb
add
add
mov
bound
xchg
mov
xchg
inc
jb
popa
subb
sub
cld
fadd
icebp
aas
jmp
adc
cld
push
cli
xor
xchg
mov
fisubrs
inc
mov
xchg
jmp
cmp
jl
std
sti
or
push
cmp
lock
sti
aam
push
add
nop
adc
std
xchg
add
fcoms
insb
add
push
pop
js
jl
xchg
dec
mov
adc
imul
inc
jne
mov
adc
xchg
js
mov
inc
xchg
movsb
adc
test
outsb
out
dec
xchg
add
dec
decl
adc
cmpl
jle
ret
jne
sbb
mov
xlat
roll
inc
or
push
mov
or
adc
or
adc
jmp
test
pop
in
dec
adc
adcb
inc
or
jle
mov
push
aaa
es
adc
jnp
or
rclb
shrb
mov
rolb
aad
cmp
mov
xor
mov
stos
add
cwtl
stos
mov
test
cmp
mov
add
add
pop
xor
add
add
leave
insl
mov
xor
mov
mov
out
outsl
lods
out
pop
mov
loopne
push
push
adc
adc
add
fidivrl
and
sahf
dec
dec
push
push
adcl
cwtl
shll
leave
dec
or
push
es
xor
sub
add
sbb
stos
fildll
jae
xchg
std
dec
je
jo
rolb
adc
xor
adc
mov
pop
call
pusha
add
jmp
aaa
in
xor
mov
cld
rclb
fsubs
and
add
repz
bound
ljmp
enter
adc
mov
iret
add
test
rcrb
mov
add
jecxz
add
and
fs
and
movsb
fs
addb
std
mov
jns
jae
dec
xchg
add
add
ret
xor
cli
shlb
decl
cld
push
add
mov
sbb
xchg
adc
pop
call
jb
or
jbe
jl
outsb
push
call
aam
sti
jbe
xchg
dec
shlb
in
add
call
xor
lcall
pop
imul
add
cmpsl
in
jae
lahf
jns
out
jg
ja
add
out
outsb
fcoms
imul
add
imul
mov
add
cld
lret
std
pusha
cwtl
je
cmpsl
test
and
mov
pop
xchg
enter
jg
adc
rcrb
loop
sub
incl
xchg
jle
scas
call
mov
add
add
cmp
ds
xor
xor
fidivrs
mov
add
cmpsl
mov
jl
jp
sub
jge
int3
fnsave
xor
mov
adc
jl
mov
mov
add
mov
or
jne
daa
pop
mov
mov
jge
ja
push
jbe
pushf
mov
xchg
inc
repnz
mulb
gs
mov
gs
aas
ret
imul
xchg
mov
repz
jp
call
jo
out
in
cld
jb
outsb
cmp
rcll
and
cmp
inc
fldenv
mov
xchg
jge
bound
rorl
add
push
call
and
cltd
mov
jmp
jl
imul
adc
fucom
lcall
xchg
mov
jno
cmp
fmull
inc
push
add
and
test
jae
adc
cli
insb
push
xchg
pop
int
add
add
ds
popf
or
test
addl
daa
icebp
popa
mov
push
mov
dec
inc
and
jne
mov
jg
xor
inc
and
decl
inc
clc
cmp
jne
mov
jg
ljmp
test
jge
fiaddl
xchg
push
xchg
gs
sub
je
add
adc
shrl
add
pushf
movsl
sbb
mov
popl
loope
lret
sahf
lods
sbb
adc
out
pop
call
mov
sahf
sub
adc
and
add
sti
aad
icebp
push
adc
pshufw
addr16
pop
outsl
adc
xchg
mov
repnz
imul
fiadds
add
pop
add
mov
insb
mov
mov
jno
cmp
popa
rcrb
sub
outsl
shrb
cs
or
adc
ss
leave
in
mov
mov
or
mov
dec
lahf
mov
xchg
jl
mov
out
pop
mov
mov
add
add
inc
sub
mov
jae
clc
jge
test
xchg
jno
and
jmp
out
add
cmp
pop
call
pop
jle
call
scas
hlt
pop
push
in
mov
outsl
addr16
pop
mov
adc
mov
add
in
cmp
add
inc
or
cmp
cmp
mov
pop
xchg
repz
or
xor
push
cmpsl
xchg
jne
mov
xor
add
or
cld
jns
addl
out
add
jo
pop
add
pop
or
ret
aaa
inc
fidivrs
mov
add
lea
pusha
lock
std
sti
popa
psllq
cld
ljmp
dec
sub
pop
adc
psubq
pop
add
in
mov
or
or
aaa
inc
jle
or
inc
inc
mov
cmpsl
push
call
ficoms
in
adc
or
pop
hlt
jmp
and
repnz
mov
mov
jmp
add
addr16
jmp
sub
push
mov
imul
sub
or
fistps
fs
psubd
push
and
aas
adcb
push
imul
cmp
add
mov
sbb
mov
repz
adc
es
shl
jmp
add
mov
jmp
je
xchg
inc
call
jle
ret
call
out
sbb
roll
or
inc
jmp
add
movsb
setbe
push
add
add
test
push
enter
pop
ds
xor
into
push
inc
push
or
inc
jmp
add
or
jecxz
ficoml
add
addb
add
add
push
sub
jmp
xchg
rcrb
jmp
push
lds
xchg
lock
jbe
icebp
ljmp
hlt
and
loope
jo
outsb
bound
adc
mov
je
jmp
hlt
jae
inc
or
in
push
push
pop
loop
jl
and
jbe
jmp
adc
add
jmp
add
imul
xchg
subl
add
jge
sbb
add
push
push
or
mov
add
cmp
cmc
jo
std
cmp
xchg
mov
aad
sbb
nop
mov
movsl
cmp
sti
pushl
inc
in
inc
cmp
cmp
jbe
xor
sbb
add
mov
decb
or
call
mov
in
or
jbe
ret
mov
ljmp
inc
add
pop
rclb
mov
into
idivl
leave
adc
mov
push
push
inc
daa
loopne
adc
and
or
mov
xchg
mov
addr16
addb
add
add
data16
int
adc
imul
outsl
mov
mov
mov
arpl
push
leave
or
out
mov
fs
sbb
les
jo
or
rclb
aaa
in
out
add
jp
cmp
jo
jb
add
jae
jp
lods
and
push
pusha
popa
fimuls
add
cli
add
xchg
add
sub
lods
shrl
out
pop
pop
inc
add
add
or
dec
add
bound
add
js
push
push
jo
pop
jge
pop
sahf
cmp
lcall
testb
and
pop
test
add
in
out
sahf
mov
pop
adc
add
add
gs
adc
dec
in
jne
mov
popf
jg
jmp
or
je
testl
sub
jnp
cmc
mov
pop
jo
add
in
ret
pop
andb
pushw
mov
pop
push
add
or
outsb
cld
jb
and
cltd
mov
hlt
pop
pop
movb
addb
xor
push
hlt
or
jo
call
add
in
std
jae
aaa
adc
and
sti
or
ljmp
xorb
inc
std
push
mov
inc
pop
cld
push
shrl
lods
jmp
jg
jo
mov
sub
or
mov
add
lock
out
add
mov
add
mov
add
mov
add
cmpw
loop
xchg
cmp
adc
xchg
in
sti
mov
cmovo
add
pop
sbb
pop
mov
adc
pusha
out
or
and
cld
xchg
popa
add
pop
push
sbb
cmp
test
dec
je
and
je
mov
sbb
nop
je
cmp
inc
jae
or
adc
lock
adc
add
das
mov
add
mov
js
add
add
mov
pop
inc
fisttps
fs
add
add
outsb
aad
call
add
andl
imul
mov
push
inc
push
or
inc
adc
dec
pop
xchg
or
add
sub
add
cmpsl
dec
outsl
aad
pop
xchg
sbb
mov
jg
add
add
mov
add
xchg
fimuls
or
insl
popa
mov
popf
ljmp
out
cmp
inc
insl
dec
jbe
jg
jbe
insl
jno
out
cmp
in
movb
hlt
add
mov
mov
adc
mov
or
add
sti
mov
movsb
and
sub
xchg
jp
insl
adc
add
test
jmp
mov
outsb
cld
cmpsb
adc
add
lea
repnz
cmpl
jbe
add
push
pop
out
dec
outsb
cld
jo
adc
add
mov
xor
pop
or
adc
pop
or
stos
clc
out
es
addl
je
sti
lds
mov
add
add
test
std
push
test
inc
dec
clc
push
sarl
mov
cmp
jo
stos
add
stc
xor
push
xor
insb
pop
add
push
mov
incl
mov
cld
rcr
in
push
add
push
je
jg
push
inc
in
jl
scas
incl
inc
pop
dec
jl
test
sub
xchg
je
mov
add
mov
jo
mov
fs
outsl
jo
xchg
pusha
xchg
cltd
cmpb
inc
dec
sbb
unpckhps
pop
jge
idivl
jno
ud2
jno
pop
lods
testb
cs
out
sub
add
mov
add
sbb
leave
adc
roll
js
or
push
push
imull
popa
leave
hlt
ret
add
cld
jbe
jae
or
ljmp
jb
cli
push
subl
mov
arpl
or
out
test
mov
loope
add
push
xor
cmc
lret
insb
aad
add
out
imul
loope
pop
inc
sub
xchg
jle
push
sub
outsb
add
pop
ljmp
clc
or
sti
shlb
loope
fdiv
inc
test
jmp
and
mov
add
hlt
add
sub
push
out
push
insb
cld
push
adc
mov
jmp
inc
pop
repnz
aaa
mov
ret
adc
jnp
std
mov
adcb
mov
bound
jl
or
dec
or
jmp
nop
movsl
sbb
adc
divb
push
jle
add
add
adcb
fstpl
xor
add
add
imul
sbbl
adc
add
fbld
enter
mov
incl
adc
inc
cmp
add
adc
in
mov
push
daa
push
in
nop
mov
mov
add
out
mov
ljmp
cmp
jle
in
in
inc
adc
pop
in
xchg
pop
pop
add
dec
pop
cmc
xor
xchg
inc
pop
jnp
daa
sbb
inc
shl
or
test
inc
pop
hlt
adc
jnp
outsl
faddl
sahf
or
cwtl
pop
jo
pushf
sahf
adc
and
mov
sti
dec
pop
sub
jo
bound
dec
insb
jg
mov
add
add
cmpb
pop
and
sbb
pop
pop
jns
cmp
daa
aam
add
add
stc
adc
outsl
idivb
sbb
jns
data16
pop
movhps
and
adc
imul
push
push
and
out
adc
out
adc
fistl
jle
or
add
fstps
dec
in
mov
xchg
or
add
in
push
sub
lar
fldcw
shll
or
outsl
or
or
jmp
ljmp
adc
adc
enter
push
ret
ljmp
jmp
mov
mov
adc
adc
out
add
data16
add
call
jmp
pop
sub
adc
jnp
loope
popa
cmc
movsb
or
je
fnsave
aaa
bound
subl
imulb
fs
std
scas
inc
out
mulb
pushf
jns
add
or
cmp
add
mov
sbb
add
incb
jg
ljmp
sub
push
cmp
add
std
or
sub
pop
xchg
sbb
je
jmp
sbb
mov
or
push
add
mov
mov
psubd
adc
outsb
leave
and
enter
xchg
add
les
dec
and
sbb
add
xchg
push
add
mov
or
add
loopne
imul
out
test
sub
loopne
xchg
mov
add
xchg
or
shl
ja
cmp
imul
lock
sbb
and
xor
push
sub
pop
ja
jg
and
mov
inc
jb
push
jns
xchg
pop
add
jle
or
pop
loopne
sbb
sub
enter
or
aaa
fsubrs
les
out
jge
add
ret
mov
ret
lahf
icebp
fstps
push
arpl
leave
js
loop
rclb
das
push
ljmp
pop
ljmp
add
xor
adc
add
fmuls
sahf
mov
stc
cs
aam
out
test
ljmp
add
add
inc
add
divb
sbb
xchg
add
fiaddl
mov
mov
out
jmp
pop
fidivrl
ficomps
push
mov
adc
jae
inc
cmp
lret
fs
std
mov
adc
mov
jbe
push
std
sub
add
cmp
or
cmpsl
or
adc
pusha
or
ds
repnz
sub
gs
inc
inc
loop
in
or
sti
pop
cld
push
fld
jnp
ret
les
test
jmp
incl
iret
cli
cmp
lds
fwait
pop
cmp
mov
dec
jmp
push
dec
in
enter
sub
outsl
rcr
xchg
decl
add
pop
add
xchg
jmp
inc
dec
push
add
xor
add
add
loopne
cmp
in
dec
jmp
cmp
outsl
mov
enter
jb
std
call
test
jae
pop
mov
in
xor
add
or
add
cmp
jbe
add
addr16
adc
add
sbb
out
inc
addr16
add
sbb
or
sub
scas
add
clc
paddsb
jnp
andl
es
loopne
scas
add
or
in
or
enter
not
addr16
xchg
shl
jne
jmp
or
push
and
je
push
pop
and
imul
cld
inc
add
pop
inc
jg
jb
es
rorb
jb
pop
pop
or
push
fs
cmc
addr16
dec
loop
sub
iret
inc
sbb
aad
mov
pop
lds
cwtl
jmp
add
test
cmp
pop
popf
sub
out
stos
pop
lea
pop
notb
inc
add
add
jg
pop
gs
xor
data16
pop
or
aaa
add
notb
sbb
jecxz
add
fdivp
fdivr
lock
insl
inc
pop
cld
push
mov
test
adc
add
rcrl
pop
dec
sub
or
adc
add
pop
sub
js
cld
scas
jns
div
loope
and
jns
adcb
pop
cld
les
je
cld
jmp
xor
imul
pop
cld
pop
out
add
jmp
lcall
add
pop
sbb
outsb
push
xor
in
cmp
popa
fucom
sti
add
cmp
add
leave
idiv
adc
add
cs
push
inc
out
cmp
in
pushl
scas
incl
in
push
movsl
idiv
roll
add
add
fidivrs
test
add
scas
clc
incl
add
xchg
sti
call
negl
add
out
jmp
cmc
inc
push
call
mov
mov
test
negl
sbb
jg
repz
adc
sub
add
pop
insb
jl
pop
repz
clc
dec
add
sbb
inc
pop
and
add
imull
or
sub
mov
mov
imul
fistps
push
inc
add
call
je
pop
cmp
adc
ja
xchg
mov
add
out
cmc
xor
inc
lret
imul
inc
dec
inc
popf
add
jp
push
sbb
pop
add
mov
adc
out
add
add
cmc
lods
in
cltd
mov
add
or
sti
pop
inc
pop
mov
mov
pop
movsl
or
lea
popa
mov
out
sub
cltd
mov
pusha
out
pop
outsb
cmc
mov
fmuls
push
test
out
add
mov
pusha
cltd
les
js
jmp
mov
outsb
add
or
ljmp
pusha
into
out
cmp
ja
std
mov
mov
hlt
iret
out
fisttpll
cld
push
mov
call
dec
out
mov
xor
loope
dec
or
stos
insl
cld
cltd
fsubr
jmp
adc
mov
addb
les
sub
jb
adc
adc
jb
mov
imul
incl
or
inc
lock
sti
dec
std
xorb
test
xchg
cmp
das
imul
fwait
add
daa
stc
dec
dec
decb
ret
dec
sub
mov
das
mov
or
es
ret
jmp
test
xor
sti
jg
inc
hlt
xorl
mov
loope
mov
jmp
add
lcall
leave
or
sub
pop
roll
mov
cld
dec
ds
sub
testl
lret
sbb
aaa
orl
imul
add
xor
mov
mov
pop
lods
test
sbb
mov
inc
add
int
dec
push
clc
jge
in
idivl
je
xchg
push
jo
lahf
div
or
add
hlt
rcrl
mov
jbe
add
mov
mov
sbb
add
out
pop
ret
push
leave
xchg
or
lea
push
push
inc
pusha
pop
lret
sub
ret
fisttpll
or
out
fildl
popa
notl
ret
mov
adc
out
popa
call
inc
xchg
mov
ret
mov
out
sarl
ljmp
pop
repnz
adc
imul
push
jge
sub
orb
lds
pop
cld
jmp
add
data16
pop
lcall
fistl
xchg
mov
xchg
jmp
jg
cmp
add
dec
dec
subb
mov
leave
push
jl
dec
dec
or
and
xchg
push
test
adc
add
add
add
dec
hlt
jne
clc
inc
addr16
mov
xchg
push
add
inc
sub
call
xor
psubq
jmp
mov
adc
xor
cmp
dec
jp
adc
sar
in
popa
call
adc
add
jge
xchg
push
xchg
push
add
xor
mov
mov
sub
call
mov
inc
adc
repnz
orl
mov
adc
out
cmp
rorb
dec
mov
gs
jle
push
cmp
pop
cld
in
cmc
pop
or
lret
mov
rol
and
inc
add
or
enter
push
jo
lock
add
pop
pop
jb
ret
xor
pop
sbb
adcb
into
and
cmp
push
iret
shrl
jb
cld
xor
int3
sti
push
movsl
hlt
and
sbbl
pop
cmp
pop
add
movswl
into
in
fs
mov
push
out
popa
into
fcompl
xor
push
xor
dec
sbb
outsl
ret
push
imul
add
fs
add
mov
cmp
adc
mov
roll
iret
test
add
jnp
ficompl
aam
mov
xlat
pop
pop
les
leave
add
dec
or
fisttpll
aad
add
jge
jle
push
cld
mov
push
or
inc
dec
cld
ficomps
mov
mov
out
mov
mov
ljmp
add
add
sbb
push
jb
cmp
jmp
pop
lret
or
pop
fists
cmp
rcl
sbbb
outsb
clc
mov
negb
add
inc
icebp
adc
sbb
and
in
add
notb
pop
outsb
push
fcoml
push
push
push
addl
add
std
or
add
add
in
fiadds
mov
pop
or
stos
add
ret
test
xor
fisubrl
inc
in
add
mov
inc
lock
inc
clc
jmp
xchg
outsb
clc
mov
inc
lds
mov
push
or
sub
inc
lock
add
add
add
inc
call
xchg
cli
add
imul
aas
pop
xor
call
sti
mov
or
sahf
and
mov
xchg
push
test
sub
vpinsrw
sbb
out
cmp
pop
and
inc
dec
xchg
in
add
mov
pushf
cwtl
adc
push
cmpsb
dec
or
sahf
dec
cld
push
add
mov
or
pop
or
test
and
out
or
outsl
mov
or
dec
or
xchg
pop
jnp
adc
cwtl
ljmp
ret
lods
mov
dec
arpl
jg
js
stc
sbb
cli
cld
or
cmp
mov
mov
or
push
xchg
dec
imul
mov
lods
dec
or
jnp
pop
xlat
js
stos
clc
dec
jb
mov
rcrl
jb
dec
jb
xchg
stc
iret
rorl
push
pop
pop
call
insb
aam
xorb
stos
sti
pop
inc
push
mov
dec
inc
inc
fstl
add
jmp
xor
pop
cmp
pusha
dec
or
or
ss
incb
xchg
repnz
sbb
ret
mov
loopne
sbb
dec
xchg
dec
cld
add
mov
cmp
sub
cmp
jl
cmp
mov
adc
inc
adc
push
mov
js
add
ss
xor
inc
test
jmp
bnd
cmpb
add
ffreep
mov
cmp
stos
or
xor
inc
and
sub
xchg
adc
sti
jne
js
ljmp
push
sti
jne
mov
or
cmpl
sarb
dec
cld
add
mov
mov
fs
sbb
mov
cmp
xchg
incb
jmp
pop
add
mov
pop
inc
ficomps
push
inc
xchg
push
movl
sti
sbb
mov
ffreep
idivl
add
pop
sub
push
ja
call
sahf
sbb
dec
add
add
add
lcall
rolb
push
ret
adc
add
inc
stos
push
popa
dec
out
push
cmp
popf
mov
push
add
sbb
lock
xchg
xchg
icebp
xchg
ret
and
outsl
mov
xchg
cmp
rorb
cmpl
or
jle
sti
je
pop
add
adc
imul
and
gs
sbb
out
hlt
je
push
stc
add
xor
test
add
jns
lock
mov
jg
xlat
notb
cmpl
adc
jne
cltd
mov
jb
bound
fcoml
jg
sbb
dec
mov
out
and
xor
cli
cmp
outsb
dec
or
add
dec
push
cld
out
mov
or
into
push
rclb
into
out
jge
jb
add
adc
push
adc
adc
rcrl
cmp
add
add
hlt
add
mov
outsb
ss
dec
jle
shrb
aas
adc
jo
imul
or
add
hlt
add
mov
or
lods
das
pop
add
jns
repz
inc
adc
mov
add
sub
out
jle
or
inc
out
mov
adc
mov
decb
mov
add
mov
push
repz
add
push
pop
test
test
push
orb
push
cld
add
pop
add
xchg
hlt
shrb
into
lret
add
adc
pop
add
xchg
and
pop
xor
imul
dec
lock
mov
pushf
test
push
iret
repz
xlat
or
pop
incl
loopne
clc
ss
das
into
sarb
mov
out
pop
test
add
and
add
add
mov
stc
imul
sti
ljmp
outsb
pop
push
jae
push
xchg
out
fwait
jp
push
pop
dec
mov
rcrl
dec
add
add
and
out
pop
test
add
jbe
add
add
mov
clc
imul
shl
test
cld
cmc
jg
push
fstl
dec
jecxz
add
rolb
xchg
mov
ljmp
iret
adc
out
out
adc
add
ljmp
fisubs
mov
add
ja
sbbb
inc
cld
negb
jl
clc
push
fsubp
pop
addl
movl
frstor
out
adc
roll
test
call
add
add
lock
sbb
inc
cld
ficomps
jl
clc
aad
fsubrp
jmp
inc
cld
add
dec
xor
jmp
mov
dec
aaa
ret
into
add
adc
cmp
popa
or
jno
pop
mov
ljmp
jg
adcl
add
xor
jmp
dec
adc
mov
xchg
add
add
add
aas
cmp
or
add
mov
inc
jl
out
inc
adcb
sti
call
push
clc
ss
dec
lret
mov
rclb
mov
or
int3
pop
lods
pop
adc
push
pusha
stos
imul
fisttpl
pop
pop
std
mov
loopne
xor
xchg
jp
or
cmp
adc
adc
xchg
hlt
jge
mov
xor
jnp
or
inc
jnp
mov
xor
or
pop
xorl
adcl
push
aam
arpl
adc
pop
out
sbb
dec
inc
sub
adc
popl
xchg
add
repz
imul
xchg
out
mov
outsl
scas
add
xorb
mov
or
clc
filds
int3
mov
adc
xlat
push
fsub
dec
add
jno
popf
stos
cli
js
pop
sub
inc
in
jno
dec
pop
fstpt
in
inc
ljmp
mov
mov
loope
cld
into
jmp
add
or
push
jnp
push
inc
mov
faddl
rclb
mov
idivl
adc
or
pop
cli
jp
call
int
cli
std
add
divb
fsubr
sahf
pop
cmpb
cmc
subb
inc
or
aaa
push
cld
jbe
mov
and
pop
mov
dec
inc
std
fdivl
enter
push
inc
imul
jb
fsubrl
add
add
mov
push
out
adc
cmp
push
cld
add
add
jmp
enter
mov
push
jo
xor
inc
add
repz
mov
jo
sub
cmpb
xor
or
mov
add
or
sub
mov
jl
mov
mov
pop
pop
inc
jg
leave
mov
dec
jg
inc
inc
orb
sti
addl
test
mov
pop
add
adc
cmp
mov
dec
cld
cmp
aam
xchg
xor
call
push
sti
jae
lods
dec
pop
dec
aaa
cmp
sub
add
scas
sti
cld
mov
imul
add
mov
push
cmpsb
imul
sub
mov
lods
dec
or
scas
pop
std
js
test
sbb
jl
imul
stc
addl
cld
xchg
xchg
icebp
inc
cld
inc
stos
dec
adcb
add
sub
ret
filds
mov
jns
dec
adc
movsb
xlat
sbb
in
daa
test
cld
fs
hlt
test
fimuls
fcmovne
sbb
sarb
out
xchg
mov
jo
mov
sub
dec
cltd
cli
or
adc
inc
test
out
jne
or
jl
cmc
pop
add
push
out
jle
aas
push
dec
xlat
inc
mov
push
lods
dec
inc
inc
lcall
adc
sub
mov
fidivrs
or
add
cmp
mov
add
test
dec
ds
stos
pop
les
and
sbb
dec
mov
and
je
cmp
imul
sub
mov
sub
xor
sbb
cli
mov
sar
xchg
dec
aad
pop
out
sarl
cmp
outsl
mov
pop
iret
cmp
orl
add
add
add
cmp
decl
pop
add
test
sti
jge
inc
adc
js
jl
ljmp
incl
or
roll
or
mov
adcl
dec
fiaddl
jmp
daa
inc
adc
outsl
mov
sti
cmp
or
add
leave
sti
pushl
decl
dec
xor
test
ljmp
adc
push
dec
movl
addr16
mov
lcall
mov
sub
mov
sub
pop
xor
ljmp
pop
nop
sti
sub
or
hlt
add
mulb
stc
leave
sahf
push
push
add
add
add
adc
xor
push
dec
call
sub
xchg
push
and
jl
js
xor
mov
or
mov
mov
sbb
cmc
jo
loope
cmpsl
add
incb
inc
aam
shlb
mov
inc
lds
mov
inc
movsb
or
in
cmp
icebp
add
or
push
mov
inc
push
sti
cmovae
dec
add
je
add
je
add
sbbl
orl
jmp
std
or
sub
out
scas
sub
inc
push
adc
lcall
inc
add
cmp
decl
bound
repz
mov
xor
sub
loopne
mov
sti
dec
cltd
fldt
jb
add
scas
or
push
add
xor
push
andl
cmp
push
add
out
pop
les
out
ljmp
push
dec
and
jecxz
add
insl
arpl
jmp
ret
call
xrelease
mov
jo
pop
std
sbb
mov
aaa
shrb
mov
imul
add
add
inc
insl
out
in
into
out
sti
sbb
cmp
jb
stc
dec
or
push
pop
adc
push
pop
mov
mov
fmuls
jle
jp
out
dec
add
xchg
jmp
in
in
decl
fnstcw
cmovo
sti
jne
movzbl
jns
adc
add
sti
jne
mov
call
push
adc
add
sub
pusha
addl
sub
mov
outsb
jle
cld
pop
scas
and
js
jb
pop
jbe
inc
jge
or
xlat
sub
movaps
and
mov
adc
inc
cld
lcall
add
add
call
add
sub
push
jmp
cld
inc
or
mov
inc
mov
or
add
and
lds
cmpsb
mov
add
scas
fisubrs
add
inc
xchg
inc
in
mov
or
add
test
add
add
adc
out
aad
cmpsb
sarl
scas
push
adc
ss
cwtl
mov
add
scas
incb
add
iret
adc
inc
test
push
mov
repz
sbb
or
add
push
cmp
lea
cmc
jns
add
aam
scas
decl
push
jo
scas
push
xorb
aaa
jb
adc
push
mov
or
cltd
mov
jb
xor
cmpl
adc
jmp
popf
mov
xchg
and
cld
inc
in
and
jmp
push
enter
add
sbb
mov
std
xchg
sbb
aad
push
mov
jb
ss
push
mov
add
cld
out
ja
fs
call
push
and
in
sti
mov
sub
mov
add
jno
sbb
cmp
sti
jne
adc
add
xchg
jo
add
dec
ljmp
xchg
icebp
outsl
add
inc
mov
or
cmpsb
loope
call
jmp
icebp
roll
mov
std
mov
xchg
test
xchg
aad
lock
xchg
mov
xchg
addr16
in
test
dec
push
xor
push
push
add
mov
sub
inc
cmp
add
or
mov
mov
aas
pop
mov
cmp
jmp
adc
lret
jb
shll
ret
xor
sbb
xchg
syscall
add
movsb
into
out
scas
xchg
adc
mov
sub
wrmsr
inc
add
out
stos
cld
push
arpl
mov
mov
fs
div
mov
shrb
adc
mov
inc
push
shrb
mov
mov
add
out
inc
inc
popl
aad
es
scas
push
mov
add
cmpsb
add
out
add
inc
mov
add
sub
inc
and
push
pop
add
xor
xor
cli
pop
or
les
cmpsb
mov
jl
call
int3
mov
inc
stc
lea
jmp
sbb
cmp
cwtl
call
inc
dec
sbb
cmp
push
sbb
out
add
test
add
sti
out
add
xchg
bound
mov
cmovo
sub
add
inc
add
mov
pop
add
fsubp
cmovp
add
jmp
int3
lea
incl
or
jno
test
mov
sub
test
mov
mov
add
add
notb
push
int
cld
mov
mov
imul
jle
inc
loopne
dec
jmp
sar
adc
mov
or
fwait
sbb
and
pop
sbb
and
inc
xchg
pop
xchg
in
shr
mov
mov
aas
pop
sub
pop
dec
sub
sbb
add
add
repz
push
scas
or
aad
call
sahf
in
subl
push
xor
nop
sub
sub
adcl
cmp
test
cld
ljmp
xchg
pop
sub
mov
mov
adc
shll
adc
imull
outsb
inc
push
and
dec
adc
filds
sahf
add
add
out
mov
cmp
jge
push
lahf
mov
out
pop
jg
xor
xor
rolb
arpl
mov
mov
and
jg
xor
mov
cmp
jl
adc
jecxz
pop
jge
push
lahf
mov
out
pop
jg
xor
gs
push
mov
cmp
and
hlt
es
cmp
dec
cmp
jge
fisttps
sar
hlt
sub
out
rorb
mov
punpcklbw
jnp
icebp
xchg
into
jae
mov
mull
mov
mov
loopne
cld
cmp
jns
jb
sub
test
adc
add
cs
std
add
mov
add
das
jb
fwait
push
cld
hlt
cld
jp
pop
push
mov
outsb
cmp
fcompl
jmp
sub
out
pop
add
add
add
enter
jne
jle
hlt
xor
mov
jge
call
jnp
jo
std
pop
lock
mov
cs
clc
inc
xlat
out
inc
cmp
xchg
cmp
pop
outsb
adc
add
ss
cmp
mov
ljmp
push
sti
push
outsl
and
outsl
and
imul
add
sti
jne
jle
decl
push
ljmp
sti
jne
ljmp
xor
jge
sbb
jmp
and
stc
repnz
mov
jge
or
sti
pop
add
and
das
xor
cmp
pop
xchg
add
ret
xchg
clc
scas
push
sbb
imul
fisttpll
or
cwtl
xor
imul
inc
in
addr16
adc
dec
xor
and
lods
inc
out
mov
pop
aam
push
or
mov
shlw
fildll
jnp
aaa
movsl
or
add
cs
sbb
push
loope
and
sub
cwtl
iret
or
shrb
jns
or
fdiv
sbb
mov
sub
jns
jmp
push
and
sub
push
push
jb
add
sub
push
rcrl
les
add
stc
sbb
cmp
fcmove
roll
push
add
pushl
sub
shlb
mov
and
loope
ss
std
mov
addr16
cld
mov
das
jb
sub
push
inc
cmpb
adc
cmp
and
negb
incb
and
add
outsl
pop
and
into
cld
xor
ljmp
insl
add
and
scas
mov
pop
testb
jecxz
inc
test
outsb
inc
out
or
cld
add
insb
and
inc
adc
mov
clc
imull
stos
xchg
loopne
leave
sub
dec
adcl
xor
popf
add
mov
lods
jb
sbb
sti
inc
repnz
xchg
cli
jne
jp
jmp
xchg
mov
jno
add
out
idiv
test
scas
jmp
and
insb
and
pop
xchg
sub
mov
pop
pop
add
xor
adc
incl
out
or
cmp
dec
pushf
mov
imul
in
xor
mov
adc
mov
ror
or
jge
add
sbb
mov
rolb
mov
negl
data16
mov
outsl
shrb
cwtl
sbb
mov
mov
pop
or
repz
xor
pop
mov
in
add
xor
mov
jle
rorl
lcall
out
sbb
jne
xchg
inc
bnd
sub
add
pop
ja
out
js
out
push
jle
sub
enter
xchg
sub
xchg
jo
sub
or
jecxz
stos
pop
fisubrl
jnp
sahf
push
in
mov
mov
not
mov
mov
imul
xchg
sub
call
sbb
add
sub
add
add
jnp
int
addb
and
adc
mov
lock
fstl
mov
cltd
loop
push
in
jp
and
sub
or
push
int
inc
out
adc
cld
fs
testb
out
jns
in
inc
cmp
lea
loop
mov
je
xor
pop
jle
lret
out
mov
add
inc
cld
pop
jle
add
repnz
mov
or
sub
jns
call
push
lock
outsb
jge
or
roll
ds
xchg
ljmp
jge
or
ds
btc
mov
test
call
cld
out
push
pop
insb
add
add
add
add
hlt
add
inc
daa
mov
mov
jg
loop
bnd
push
add
loop
add
pop
push
mov
xor
push
push
pusha
js
incl
jl
xor
or
sbbb
test
jp
cld
or
mov
orl
sar
jne
cmc
test
add
sbb
int
push
hlt
cmc
adc
add
fisubl
clc
add
cmp
and
add
mov
add
sbb
setl
cmc
sbb
adc
jbe
jb
in
loop
sbb
push
shll
das
push
push
mov
add
lods
into
jp
iret
movsl
mov
push
ficomps
adc
inc
cmc
xchg
int
jge
aas
add
sub
or
push
inc
push
add
imull
lds
sbb
lds
xor
lds
and
lds
adc
or
sbb
add
adc
clc
les
xor
call
test
vandps
adc
enter
fisubl
xchg
mov
shll
lret
mov
pop
and
add
add
imul
and
out
push
and
imul
and
inc
xchg
pop
and
pop
inc
pop
and
add
and
mov
shll
adc
shll
inc
shll
das
shll
add
cmp
cld
dec
add
ds
pop
or
cld
inc
cld
pushf
popa
inc
cld
push
aad
cld
lods
js
cld
inc
scas
inc
cld
add
inc
cld
negb
inc
cld
pop
mov
inc
cld
xchg
nop
inc
cld
mov
inc
cld
pop
scas
inc
cld
mov
xchg
inc
cld
pop
movb
movb
inc
cld
and
inc
cld
insl
addr16
cld
stos
addr16
cld
push
push
aas
cld
repz
add
add
aas
cld
out
aas
cld
dec
pop
pop
sar
sbb
add
adc
stc
or
cli
or
sub
push
or
or
std
cs
sbb
inc
or
ss
loopne
ss
loope
xor
in
xor
daa
das
inc
fsubs
cs
xlat
sub
dec
mov
inc
into
loope
sub
push
add
add
add
xor
or
xor
fcoml
ljmp
and
roll
lds
add
ret
pop
ret
or
rclb
or
rolb
bound
lds
jno
lds
mov
mov
cs
out
mov
add
add
xchg
mov
pop
pusha
add
dec
mov
dec
cld
test
inc
ljmp
xor
dec
lds
jno
lds
jno
lds
cmovnp
or
dec
shlb
cli
inc
fisubl
xor
and
sbb
and
sbb
and
sbb
and
sti
shll
or
sti
shll
and
and
shll
and
add
and
fstps
inc
mov
pop
and
mov
push
and
or
add
adc
cld
push
dec
cld
sbb
xor
mov
mov
dec
xchg
sahf
push
call
cmp
testb
inc
add
das
or
add
out
sub
xor
push
mov
adc
xchg
aad
add
add
jns
pushf
adcl
inc
sbb
rcrl
inc
inc
fwait
orl
or
mull
test
lds
mov
movb
cmp
inc
clc
jle
cmp
pop
stos
out
add
shlb
xchg
jl
add
es
insl
sub
out
out
es
inc
xchg
ds
inc
daa
cld
mov
jl
dec
sub
add
pop
push
mov
jnp
add
mov
push
lods
and
out
dec
or
out
xchg
pusha
divl
lods
and
lahf
mov
divl
sub
das
mov
add
add
testl
shlb
xchg
pushf
add
hlt
push
rorl
cltd
test
sub
pop
jno
sbb
cld
aaa
inc
pop
mov
jmp
and
sbb
loop
jp
xchg
or
sti
subl
imul
sbb
dec
pop
frstor
adc
mov
mov
lds
movsl
test
pop
test
push
lods
jge
subl
xchg
mov
jge
pop
pop
sub
out
jl
or
sub
or
jo
xchg
ljmp
and
adc
call
push
mov
cld
fsts
push
in
add
jmp
adc
call
sbb
add
add
xchg
cmp
adc
mov
pusha
cmpsl
into
xor
cld
jmp
std
inc
mov
and
fbstp
cmpb
cld
xorb
or
idiv
shrl
clc
cmc
mov
inc
sti
mov
inc
sti
mov
pop
sti
lcall
adcl
xchg
sarb
pop
ja
sbb
cmp
xchg
xchg
jp
pop
xor
or
nop
cmpl
test
idivl
imul
add
jge
lret
rcrl
adc
add
in
push
lret
add
in
jb
add
pop
out
and
dec
sub
jmp
mov
jbe
add
daa
leave
hlt
push
cmpsl
pop
pop
adc
push
cld
mov
js
xor
and
sbb
add
sbb
adc
fcompl
mov
aad
dec
into
scas
addr16
pop
lock
mov
lcall
daa
test
cld
xchg
xor
cmp
sub
cld
push
pop
add
ljmp
cmc
popa
cmp
and
sbb
jg
add
dec
popl
in
adc
pusha
mov
adc
add
stos
ret
fdivrl
inc
ds
popa
and
and
mov
hlt
mov
out
pop
adc
faddl
loop
add
arpl
add
popa
leave
jl
fiaddl
cs
das
inc
jns
jmp
nop
inc
cld
bound
adc
adc
mov
rorb
push
aas
xchg
sbb
jb
cwtl
xchg
outsb
mov
xchg
bound
dec
sbb
mov
sub
fidivs
fs
push
cld
es
mov
push
cld
push
sahf
cmc
addb
sbb
ss
push
cld
out
incl
jne
lea
iret
inc
add
jo
push
pop
or
mov
sti
psubsb
or
sti
stc
or
xchg
push
pop
or
out
add
add
inc
hlt
add
add
add
add
mov
clc
aaa
push
add
jmp
out
and
xor
or
pop
mov
cmp
scas
out
adcl
pushl
pop
mov
jecxz
in
inc
clc
jmp
mov
addb
js
push
out
push
add
pushf
cmc
pop
adcb
call
push
ja
mov
lcall
add
pop
xchg
sbb
xor
fildl
stos
cmp
mov
repnz
incb
ficoml
pop
jns
insl
rorb
aaa
lods
pop
aas
fsub
push
incb
mov
adc
or
or
imul
in
mov
or
lea
int
dec
ret
add
add
sub
add
xchg
sbb
mov
jne
add
xor
mov
ljmp
pop
out
popa
or
adc
in
les
xchg
sub
sub
push
push
stc
push
out
test
adc
adc
add
fmulp
push
out
push
xor
mov
out
xchg
mov
pop
cmp
daa
out
push
dec
push
adc
jg
jno
fwait
lahf
jo
fdivrp
mov
add
xor
lahf
xchg
or
addr16
jb
ret
lahf
pusha
dec
push
jle
sub
jle
jmp
sbb
cld
scas
divb
adc
push
fimuls
xchg
clc
filds
or
cld
mov
fcmovnbe
fimuls
mov
rcl
fcom
xlat
xor
sar
xlat
cmpb
hlt
jo
gs
nop
jae
hlt
jno
add
inc
sti
ljmp
xchg
inc
dec
hlt
sti
call
repz
leave
add
add
xor
mov
xchg
out
mov
nop
sub
cmp
lcall
mov
add
test
jp
cmpl
jae
je
push
decl
xchg
cmp
jge
ss
fsubs
imul
or
cmp
jp
ja
jg
adc
and
sub
mov
push
mov
or
sbb
subb
push
xchg
test
cld
jo
add
fmull
ret
add
sub
dec
jae
xor
xor
inc
in
pop
xchg
push
xchg
jg
sti
and
and
test
sbb
add
mov
push
sub
jae
add
sbb
add
pushf
add
xchg
xchg
cli
add
test
pop
add
into
adc
iret
mov
cwtl
enter
add
add
xchg
sub
xchg
sub
pop
jecxz
arpl
movsb
sbb
xchg
popf
sbb
inc
fidivs
jo
pop
sbb
and
ds
sbb
pop
mov
adc
mov
mov
cmp
mov
sbb
inc
push
add
sarl
cmp
cltd
xor
jmp
pushf
sub
push
pop
pop
punpcklbw
scas
jo
call
ss
adc
sub
nop
and
out
jl
aas
jmp
movsl
aas
call
pop
add
cmp
cld
not
sbb
adc
std
divl
push
sub
add
pop
add
rol
adc
vpaddusw
push
cmp
das
fldt
dec
or
jns
mov
add
cld
mov
test
jle
and
dec
and
cmp
sti
decl
jp
sub
fwait
cld
jle
xor
add
test
les
aas
les
xor
add
add
xor
dec
add
and
das
addl
add
jg
pop
sub
cld
push
pop
movsb
and
inc
pushf
lahf
sti
pop
pushf
cltd
or
jns
add
push
sar
insb
mov
push
adc
xchg
or
xchg
mov
mov
add
sub
nop
pop
push
mov
pushf
mov
push
shrd
mov
sub
xchg
add
je
xlat
sbb
jp
sbb
push
aas
out
aas
incl
mov
cmp
cs
lods
int3
xchg
mov
das
popa
add
pop
cwtl
mov
fsubr
decl
out
mov
add
inc
in
fwait
outsb
ret
roll
mov
mov
pop
out
loop
add
test
nop
daa
addl
pop
inc
out
cs
add
adc
xchg
movsl
cli
add
xchg
xchg
push
out
pop
jge
or
sbb
punpckhdq
fnsave
in
add
popa
rcrb
scas
and
out
popa
or
andl
imul
cmp
or
std
setne
es
jns
add
ret
sub
push
inc
outsb
inc
call
pop
mov
or
fsqrt
push
mov
es
cmp
xchg
jno
call
xchg
xchg
or
adc
inc
jmp
xor
in
cwtl
dec
sbbb
out
fwait
paddb
cli
lds
ud1
cltd
jo
mov
repz
in
testb
cmovo
sti
loop
xchg
mov
cmpb
js
clc
imul
in
roll
jge
dec
andb
jne
hlt
xor
ret
mov
add
inc
push
pop
ret
jle
adc
ret
mov
mov
adc
sti
adc
push
stc
cli
ss
adc
cs
cmpb
je
add
hlt
xor
inc
push
adc
add
pop
sahf
inc
jb
jl
out
pop
add
xchg
inc
add
or
jle
clc
stos
adc
inc
sbb
add
pop
nop
cli
adc
mov
push
or
call
mov
push
cld
mov
mov
add
sbb
fmuls
and
add
jg
push
incl
call
jmp
xchg
inc
jl
sbb
cmp
psubsb
out
xor
cmp
dec
insl
or
mov
shll
inc
cld
xchg
inc
loop
pop
sti
insl
lahf
pop
jno
adc
mov
ja
or
movsb
lea
daa
add
xchg
nop
cli
xchg
movb
push
push
mov
xchg
inc
push
in
mov
cmc
mov
loopne
jb
adc
test
sbb
faddl
adc
loopne
aad
mov
rcrl
inc
jmp
adc
sbb
addl
adc
bound
adc
inc
icebp
mov
or
dec
or
jmp
add
addb
cltd
es
pop
pop
jo
xor
jmp
cld
std
subb
add
cltd
cmc
mov
xchg
add
popa
and
add
std
mov
sub
das
test
orl
punpckldq
out
cld
add
lds
lds
xor
imul
add
sti
add
jnp
add
sbb
repnz
dec
test
mov
decl
push
xchg
out
pop
ret
add
pop
jmp
add
jno
js
jno
xor
hlt
sti
jmp
fnstenv
sub
out
xchg
cmp
jmp
mov
pop
in
inc
repnz
xor
pop
pop
sbb
sbb
ret
mov
inc
pushf
sbb
xchg
mov
jmp
lock
inc
xor
sbb
jno
adcl
out
sbb
mov
mov
adc
add
lahf
pop
add
pop
mov
out
test
cld
lcall
add
cmpl
lret
add
daa
mov
pop
lcall
movsl
sti
out
iret
out
pop
fldl
in
mov
jl
jle
cwtl
fstpt
adc
add
add
int3
sub
or
clc
sub
shrb
mov
enter
test
rorl
arpl
gs
add
jge
xchg
sbb
cli
ds
ret
jl
idivl
add
jne
fwait
addb
aad
lcall
daa
test
fiadds
cmpb
mov
pop
push
or
je,pn
mov
inc
cmpb
mov
je
or
bnd
xchg
dec
inc
pop
das
push
shl
adc
mov
mov
lods
imul
adc
add
xchg
or
cmpb
mov
roll
adc
inc
xor
lret
mov
movsb
add
cld
gs
xchg
inc
add
jo
jmp
push
inc
outsb
cmp
add
jne
notb
les
cmp
cmc
jo
dec
push
push
inc
add
xor
jg
xor
or
lock
cli
push
inc
xor
push
add
faddl
mov
add
inc
cmc
sti
dec
imul
mov
stc
sti
adc
aaa
cmp
cmp
imul
pop
out
or
cwtl
outsb
or
outsl
cld
xor
aas
add
push
testl
sbb
ss
cld
jecxz
or
mov
push
call
jmp
aas
pop
nop
or
in
inc
aas
inc
jnp
les
push
jg
and
jmp
xchg
xchg
testl
pop
xchg
push
xchg
mov
je
xchg
or
dec
push
enter
out
std
pop
sub
add
fwait
or
xor
sub
push
add
hlt
cmc
pop
mov
pushf
mov
rorb
add
add
xor
pop
nop
xchg
repnz
jnp
add
enter
pushf
call
vmovaps
adc
adc
mov
cmp
out
movl
mov
or
out
add
jno
sbb
fsubr
loopne
pop
shlb
mov
add
repz
cld
jmp
enter
cmp
aas
jmp
ud2
mov
into
dec
cld
notb
xor
cld
push
add
pop
dec
inc
loope
or
adc
mov
mov
setno
or
cld
sahf
push
mov
test
push
sbb
jl
push
subl
ficoms
mov
adc
pop
mov
add
stc
cmpsl
roll
incb
push
xor
mov
lea
addl
or
dec
add
fidivrs
xor
jnp
je
cmc
dec
or
ds
add
dec
call
add
add
dec
das
fistl
sbb
subl
jmp
test
mov
or
orl
push
mov
stc
jne
add
cmpsb
xchg
orb
pop
cmp
push
mov
push
add
xlat
outsl
inc
jae
xor
push
add
add
mov
add
je
and
les
add
jl
pop
test
pop
sarl
outsb
sbb
jo
pop
jmp
rcrl
mov
cmp
lret
jb
mov
add
mov
push
clc
imul
imulb
jp
jmp
or
hlt
jnp
mov
lret
jl
dec
mov
jle
mov
pop
pushw
ret
jbe
or
xor
mov
test
add
add
mov
add
xchg
mov
xchg
or
add
xchg
negl
jmp
push
clc
lahf
ljmp
aas
add
inc
lret
pop
cmpsl
push
or
scas
in
cmp
add
mov
sub
inc
add
jae
in
mov
xchg
xchg
inc
cld
jmp
push
incl
jmp
adc
add
or
jmp
sar
in
add
add
lret
dec
sti
aam
adc
icebp
mov
sti
and
jnp
ljmp
mov
pushf
mov
rolb
sbb
push
mov
data16
je
sub
push
sub
mov
push
out
add
out
add
dec
lcall
adc
out
add
and
cld
je
notb
or
pushf
ffree
sti
test
mov
lea
cmp
push
lock
add
stos
pop
ret
push
mov
push
inc
jmp
push
test
lret
inc
and
mov
adc
outsb
fwait
add
lret
mov
sub
xor
aas
pushf
adcb
movsl
rclb
and
jl
xlat
add
sbb
jae
rep
out
mov
lcall
push
add
sti
out
add
mov
mov
and
mov
push
jmp
lds
in
rcrl
jle
xor
pushl
mov
or
ljmp
adc
mov
call
aaa
lock
jno
call
add
sbb
mov
in
xchg
jge
clc
push
outsb
adc
mov
add
sub
cmc
push
fs
push
and
xchg
pop
add
out
jbe
add
subb
lods
mov
ljmp
adc
mov
repnz
mov
sub
inc
jmp
cld
pop
jne
hlt
push
rcrb
dec
xor
xor
mov
je
cld
sti
add
add
add
jo
je
aas
push
jb
pushl
mov
lret
jecxz
inc
adc
mov
cs
pop
add
mov
push
xchg
dec
in
je
ds
fcmovnbe
sti
jle
sbb
xchg
adc
repnz
es
shll
mov
ljmp
cmpsl
adc
int
add
cltd
cld
dec
mov
add
add
push
xor
ss
mov
add
adc
jl
jle
rol
xor
shl
or
repnz
cmp
mov
cmpl
je
aas
sarb
loop
sub
inc
jmp
lea
in
or
and
add
icebp
cli
je
jbe
jb
xchg
leave
aad
mov
test
add
mov
call
mov
mov
fmuls
jecxz
shlb
sti
or
out
push
mov
mov
data16
in
add
mov
push
movl
incl
pop
pop
add
and
mov
mov
cmp
jg
in
ljmp
pop
fwait
add
pop
dec
sub
xchg
mov
mov
data16
pushf
cmpsb
or
jmp
mov
add
icebp
and
pop
jmp
inc
pop
insb
in
popl
sub
cmp
insl
js
lea
mov
in
push
cmp
fnstcw
xlat
cmp
jne
lea
dec
add
in
fcompl
jbe
mov
jmp
pop
sti
cwtl
inc
insl
mov
je
mov
ljmp
or
mov
pop
add
sbb
mov
jmp
outsb
pop
xchg
mov
mov
mov
xchg
lcall
add
flds
add
cmc
xchg
mov
in
pushf
js
jmp
adc
add
and
insb
pop
jnp
cli
inc
sub
insb
pop
jnp
arpl
xor
or
or
sub
clc
add
push
sub
icebp
add
and
sbb
jmp
adc
rol
cli
mov
jge
mov
push
push
xchg
lods
insl
mov
fsts
inc
adc
inc
cld
rcl
or
add
cld
adc
ljmp
inc
cld
mov
leave
sub
add
xor
call
push
mov
in
or
pop
clc
add
pop
xor
sub
lea
or
xor
xchg
xor
add
incb
or
or
stc
or
jae
xor
fsubr
xor
fnstcw
add
cmp
and
je
negb
jne
mov
and
imul
stc
push
jge
subb
add
insl
arpl
daa
outsl
shrl
sub
das
dec
pop
inc
sti
sub
inc
dec
xchg
add
cs
lds
stos
in
aaa
sbb
pop
cli
pop
xchg
xchg
sub
add
mov
xchg
movsb
mov
pop
jmp
shlb
xlat
dec
icebp
sarb
jae
pop
stos
out
mov
push
pop
cld
test
xchg
mov
mov
or
sti
sar
outsb
pop
mov
and
and
add
nop
aas
add
adc
add
test
jmp
pop
call
out
out
and
adc
add
movsl
mov
faddp
or
mov
mov
addl
sbb
repnz
out
push
negb
ret
xor
push
ret
or
cwtl
add
add
mov
xchg
add
sti
add
pop
jle
outsl
sbb
arpl
or
jne
leave
call
fs
out
xchg
sar
add
jecxz
push
fcom
repnz
cmp
rorl
mov
pop
inc
jg
adc
insl
repnz
add
mov
fcmovbe
ljmp
push
idiv
jno
sbb
mov
fs
test
adc
shll
xorl
clc
jl
aam
and
add
xchg
inc
inc
scas
aas
jecxz
loope
cld
mov
xor
orl
dec
clc
mov
test
mov
testl
mov
add
and
pushl
mov
gs
inc
data16
call
mov
pop
leave
ret
sti
mov
adc
dec
push
in
mov
push
clc
cmp
pop
xchg
jmp
clc
mov
push
lea
mov
jnp
add
add
or
inc
adc
push
pop
je
ret
cmp
mov
bound
mov
popa
lcall
inc
jo
push
sti
add
adc
or
mov
mov
fsubr
iret
mov
incl
mov
add
lret
or
in
inc
xchg
push
testl
pop
or
add
jl
mov
xorl
pop
xchg
repnz
fdivrs
jge
pop
jns
pop
add
or
and
popa
mov
into
inc
add
ret
mov
insl
inc
inc
lahf
jge
sti
loopne
in
adc
sti
mov
pop
fisttpll
lar
jno
fidivrl
ret
js
xchg
mov
lcall
repnz
int3
lret
cli
ret
adc
add
add
insl
add
add
add
ret
xlat
ficompl
pop
add
ret
jp
add
push
outsb
sbb
adc
add
lock
test
fdivl
lea
add
or
mov
mov
sub
arpl
cld
mov
dec
test
mov
cltd
icebp
jg
sbb
jne
in
iret
mov
adc
jne
xchg
repz
xchg
mov
test
add
mov
loop
inc
inc
add
jmp
adc
out
cli
fldl
xchg
pop
jge
loopne
xadd
dec
dec
mov
mov
jge
or
pop
test
loop
jp
dec
fistl
incl
arpl
sub
outsb
fmull
rcl
add
outsb
push
sbbl
jmp
jne
xchg
sbb
mov
pop
mov
push
lock
push
data16
je
lods
sar
xchg
add
mov
sub
lock
jecxz
call
xor
js
jmp
sti
dec
mov
bound
or
xor
sbb
add
hlt
push
test
in
adc
xlat
gs
push
clc
mov
or
or
fiaddl
sbb
cmp
or
pop
add
push
mov
sbb
ret
add
jae
push
pushf
popf
pop
mov
fdivrl
rcr
enter
push
mov
shlb
jne
adc
dec
sti
and
inc
pop
add
int3
jne
sub
cld
in
ja
dec
fcoml
mov
ret
add
mov
pop
ja
and
inc
shll
pop
jg
pop
and
dec
in
aam
adc
mov
lock
or
jnp
test
add
add
add
loop
std
push
shlb
in
and
in
pop
or
rcrl
pop
in
sbb
outsb
repz
lods
in
ljmp
push
out
xchg
jnp
bound
test
sbb
lock
pushf
daa
lea
push
sti
fmull
push
pop
mov
insb
clc
inc
daa
adc
and
incl
add
jmp
fcoms
add
add
lea
cmpsb
ret
xchg
popf
fstl
mov
add
inc
jbe
insb
lock
call
bound
xchg
add
div
jne
fiadds
or
cld
mov
mov
lods
push
leave
mov
mov
add
dec
call
jge
cmp
cmc
divl
ret
and
notb
mov
idivl
pop
add
jb
adc
std
add
jge
xor
mov
sti
lds
js
add
sti
jecxz
scas
decl
jmp
xor
pop
in
add
jmp
dec
jnp
sbb
adc
pop
mull
stos
fistps
pop
and
mov
pop
jns
add
pop
xchg
push
add
jg
add
push
sti
jp
dec
popf
xor
xor
mov
lods
out
mov
repz
imul
in
add
cmpsb
outsl
mov
aaa
pop
lods
or
add
jg
and
push
lea
mov
pop
sti
jmp
jecxz
cmp
inc
sbb
stc
pop
stos
dec
dec
and
lds
fldenv
imul
jmp
pop
jg
mul
lret
mov
lret
mov
mov
jmp
jecxz
or
jne
jnp
pop
sahf
dec
add
push
jge
jnp
or
add
cmp
div
mov
jl
icebp
loopne
pop
stc
fs
pop
add
add
add
add
pusha
inc
arpl
jmp
cmp
jge
cli
pushl
adc
insb
push
add
jmp
pop
dec
pop
xor
ss
sbb
add
add
xacquire
je
jns
or
or
xchg
pop
jp
xchg
faddp
or
push
hlt
shl
pop
lea
test
jnp
hlt
jbe
cmpsb
xchg
ljmp
rcrb
mov
movsl
loopne
test
push
ds
push
adc
adc
fcomp
ds
mov
aam
mov
dec
sti
add
pop
inc
cmp
ret
sti
xor
and
xor
je
movsl
sub
cmp
or
idiv
test
sub
add
jae
idiv
test
lds
xorb
ljmp
or
add
inc
dec
idiv
dec
gs
hlt
test
cvtps2pi
idiv
cmp
add
dec
add
mov
icebp
inc
inc
out
aas
pushl
out
mov
adc
or
or
sub
pop
pop
inc
sbb
bound
lret
fs
daa
fcoms
sti
cmp
popf
das
incl
push
dec
or
or
jae
dec
pushf
jb
add
lock
insl
stc
push
lea
dec
call
push
push
fsubrs
push
mov
jp
xchg
push
xchg
add
mov
sbb
mov
cmp
sub
inc
add
sahf
scas
pop
test
cmpb
lock
cmp
movd
adc
xchg
lock
dec
pop
fists
add
add
mov
jp
out
or
inc
pop
andl
mov
add
and
outsl
in
aam
lcall
jg
outsb
adc
jns
fidivl
hlt
sahf
addr16
mov
outsl
and
xlat
add
add
mov
cli
mov
or
aas
fstl
mov
lock
lcall
add
mov
pusha
jp
add
cmp
ds
insb
addr16
adc
inc
std
pop
jnp
loop
sbb
sbb
out
xchg
cmpsl
adc
xor
call
inc
sbb
sbb
call
or
dec
out
lahf
int3
mov
clc
jo
out
xchg
pusha
mov
xchg
dec
inc
sbb
adc
fcmovu
aas
add
push
push
ret
jmp
cmp
add
add
idiv
add
pop
push
push
inc
jle
inc
or
mov
cli
mov
cmp
scas
inc
addl
push
leave
cld
call
call
imul
or
ds
jp
bnd
cmp
or
add
dec
addb
call
push
xchg
dec
cmpsb
add
cli
call
push
push
xor
lcall
divl
loope
pop
popl
or
flds
jne
pusha
ret
xor
jne
adc
jne
pusha
in
call
pushf
sarl
pshufw
fdivrp
ljmp
or
test
and
mov
mov
fsts
sti
push
fs
or
xchg
aaa
push
dec
pusha
out
je
xor
fstps
lds
add
enter
pop
mov
scas
fistpl
xchg
add
push
push
jbe
jecxz
sti
jo
hlt
add
ja
xchg
push
fsts
lret
cwtl
cli
mov
add
mov
insl
adcl
in
mov
insb
icebp
push
cltd
mov
jmp
ljmp
icebp
push
out
cli
call
cld
xchg
ret
mov
add
add
sub
lret
cmpsl
cld
shlb
fdivrs
out
jno
out
sbb
inc
xor
lock
bnd
add
ds
imul
insb
mov
xchg
mov
dec
mov
jp
and
adc
or
test
cmp
je
in
push
imul
xchg
icebp
inc
and
mov
mov
insb
lret
add
adc
jecxz
adc
test
in
jne
jno
adc
push
add
and
add
stc
outsb
add
jmp
and
mov
test
mov
pop
inc
adc
sahf
add
jle
mov
jle
test
ret
sub
in
imull
pop
inc
and
xor
jmp
push
inc
outsb
pop
roll
sbb
adc
outsb
add
add
ret
xchg
add
sti
das
outsl
adc
je
jmp
and
jmp
and
fidivrs
jecxz
jnp
and
int3
std
mov
ljmp
pop
pop
fsubrl
jmp
or
pop
addr16
pushf
lods
dec
pop
cmp
fistpl
in
call
arpl
lea
loope
lods
orb
add
xlat
movsl
jb
jmp
sti
or
adc
pop
push
imul
ud2
clc
and
fldcw
stc
mov
mov
repz
add
decl
cmp
cmp
addl
jo
shlb
or
dec
rcrl
loope
push
in
iret
sbb
add
sti
cmc
outsl
xor
mov
out
xor
jns
ffree
icebp
add
lret
push
push
jae
pusha
adcl
lds
cmp
push
ljmp
add
jmp
jbe
or
test
outsb
lods
xchg
jmp
push
or
loopne
push
add
or
add
jmp
call
jo
fiaddl
xchg
fsts
push
fiaddl
jb
or
add
jne
xchg
addr16
jmp
adc
add
insb
movsl
hlt
dec
js
rclb
xor
xor
hlt
daa
jo
rclb
ss
decb
push
lahf
pop
pop
hlt
cmp
dec
loope
arpl
sahf
ss
mov
cli
mov
or
movsl
add
mov
ret
add
ss
mov
and
push
or
lea
decb
sub
adc
fcmovnu
or
push
inc
add
sbb
jbe
sahf
inc
and
pop
lea
push
push
imull
sti
shlb
push
decl
or
sub
add
jne
cmp
divl
notb
mov
push
pop
jo
pop
pop
cld
lock
inc
outsb
inc
add
and
add
stos
dec
call
fimuls
xorps
xor
in
mov
out
push
jmp
les
pop
jmp
incl
mov
push
and
add
out
pop
jo
idiv
in
lea
add
pop
push
bound
mov
popw
xchg
ja
aas
inc
or
test
sub
pop
mov
leave
jecxz
pop
jg
rcl
pushl
jecxz
inc
push
cmpl
mov
mov
push
add
in
inc
add
and
fcmovne
push
xor
rcrb
and
negl
sarl
arpl
adc
xor
add
cmc
fcomps
fs
jmp
xchg
in
cmp
add
add
xor
adc
pop
add
add
mov
outsl
adc
call
in
jmp
data16
jmp
pushf
js
jle
pop
test
add
adc
xor
sbb
repnz
or
pusha
adc
push
jo
into
call
enter
sbb
bound
or
add
dec
add
out
ret
dec
xchg
or
inc
sbb
adc
int3
icebp
mov
aas
fsubrl
push
ss
cmc
push
test
fmull
cmc
xchg
ljmp
aas
addb
mov
add
jmp
jge
add
add
mov
ljmp
add
mov
push
lea
ret
scas
add
mov
sub
pushl
or
rolb
call
mov
jecxz
inc
ljmp
add
addl
inc
adc
popf
adc
or
fisttpll
mov
addl
add
pop
cmp
pop
add
fldl
dec
sub
add
arpl
addl
sbb
xchg
sbb
add
inc
test
adc
test
je
jmp
js
add
adcl
arpl
pop
push
inc
adc
add
push
in
adc
sbb
decl
popa
rorb
add
pop
jmp
pop
jge
loope
leave
xchg
add
add
dec
outsb
aaa
jne
or
mov
xlat
cwtl
test
fs
sbb
hlt
fmull
insl
ret
subl
add
mov
hlt
in
faddp
lcall
dec
or
out
cli
scas
test
jno
loopne
xor
sbb
int3
xor
nop
cld
add
jb
mov
mov
xlat
push
mov
movsb
or
les
loope
mov
push
cmp
pop
xchg
add
add
push
adc
xchg
mov
lea
test
imul
or
arpl
xor
and
push
dec
or
add
es
es
adc
add
or
call
mov
jmp
call
sbb
mov
pop
jb
add
adc
movl
pop
jnp
inc
xor
pushl
lock
mov
and
fsubs
add
or
out
fnstcw
push
add
add
sbb
inc
and
loope
lock
sub
mov
push
cmpl
xchg
call
mov
mov
imul
mov
push
cmp
mov
call
rolb
jle
test
lock
push
mov
bound
jo
das
adc
ljmp
sarb
sbb
sbb
add
add
repnz
adc
out
shl
das
mov
repnz
shlb
or
lea
in
mov
lods
fucom
les
pushf
es
pop
or
js
push
inc
loopne
xchg
in
add
fldl
mov
push
loopne
dec
jge
inc
jg
mov
dec
add
add
add
push
outsl
xor
dec
mov
jmp
mov
shll
push
test
shll
mov
add
pushf
sets
adcl
cli
mov
call
imul
rcl
aad
add
add
xchg
cmp
xor
and
xchg
rorb
mov
inc
add
rcrl
sahf
push
cmc
push
imul
fldcw
pop
test
push
dec
or
pop
pop
sti
cld
and
sti
fwait
xchg
roll
mov
push
arpl
bound
leave
shr
inc
jno
add
in
xlat
sti
nop
cmp
bound
fiaddl
and
cli
out
stos
call
add
call
jae
jmp
or
mov
sti
scas
or
push
mov
cli
pushl
mov
addl
and
cmp
add
push
hlt
add
sub
xlat
in
enter
dec
push
iret
add
sbbl
rorl
outsb
add
les
lds
xchg
add
xchg
outsb
add
les
movb
jle
add
imul
call
jb
pop
test
push
add
pusha
mov
add
cli
jg
mov
idiv
pop
clc
push
xchg
xlat
sbbl
xchg
inc
or
cwtl
dec
out
je
add
sti
orb
cli
inc
pop
mov
mov
add
ljmp
pop
inc
add
fisttpl
add
fisttpl
call
cmp
push
in
lcall
incl
imul
orb
xor
xchg
hlt
fdivr
out
scas
call
push
add
xchg
call
sub
nop
rclb
xlat
jmp
add
insl
add
jge
shl
jl
pushf
out
aam
and
addl
shl
pop
cwtl
xchg
fiaddl
cmc
dec
iret
mov
fwait
mov
add
add
andl
jmp
popf
pop
jmp
pop
add
adc
pop
jmp
mov
fnstcw
into
je
daa
sarb
add
addr16
das
out
fistl
or
xchg
data16
clc
xchg
rcll
add
dec
call
stos
loopne
daa
stos
fmuls
stos
rorb
jg
ds
pop
adc
popa
add
pop
bound
cli
xchg
es
mov
adc
fadds
jmp
popf
into
je
mov
xor
pop
mov
movsl
out
adc
xor
dec
cli
push
push
cli
mov
fcmove
enter
xchg
and
adcl
sti
xchg
mov
jne
sbb
jne
cmpb
adcl
in
sbbl
add
sub
push
jp
and
jne
js
mov
cli
orb
dec
add
icebp
jle
and
jnp
or
or
mov
and
mov
or
mov
js
adc
and
jnp
je
test
bound
rcl
divb
fisttps
mov
ret
rclb
xlat
sahf
add
dec
and
ret
jnp
mov
push
loopne
aad
call
xor
inc
in
xchg
pushf
and
call
mov
sti
jle
repnz
jecxz
aas
pop
pusha
std
test
hlt
xchg
out
cmp
cli
ficompl
jle
adc
out
adc
incl
pop
fisttpl
pushf
sahf
pop
test
dec
cmp
lar
dec
xchg
add
mov
pop
aam
aam
and
sbb
es
in
pop
push
sbb
add
add
or
pop
fidivl
lods
lret
insl
les
lock
mov
cmc
or
add
mov
cs
fisubs
adc
push
mov
sahf
sub
fmull
cld
lret
push
jns
xor
pushl
inc
icebp
xor
add
mov
cli
out
vphsubwd
call
add
add
sti
sbb
add
mov
dec
adc
jmp
jae
cli
cmpsb
popf
inc
cld
loop
inc
aaa
shr
std
jae
jo,pn
pop
fstps
adc
bound
out
insl
or
and
ljmp
push
sti
fbld
mov
repnz
push
ss
mov
dec
movb
add
inc
or
inc
ret
or
mov
lods
jnp
lret
and
lock
and
lock
push
add
mov
sbb
repnz
add
adc
daa
adc
jo
and
scas
dec
jge
xor
mov
test
add
add
push
in
or
outsb
daa
add
jb
sbb
mov
pop
test
call
or
ds
call
pop
fs
jg
ficoml
ljmp
out
fs
jo
out
mov
loop
or
es
add
sar
and
test
jl
incb
scas
addr16
adc
mulb
or
adc
test
inc
into
jmp
inc
fwait
cmp
sarb
pop
xchg
imul
xchg
lret
lret
fildl
add
imul
roll
das
jp
daa
jle
push
adc
jmp
inc
add
adcl
sbbl
pop
xor
daa
or
cltd
mov
les
sbb
rorl
push
jg
dec
push
loope
pop
push
fstp
or
int
xchg
ret
aad
int
push
jnp
jl
push
in
icebp
and
cmc
sub
daa
sbb
or
daa
add
insb
mov
fistpl
outsl
add
xor
scas
call
cmp
xor
out
sti
jge
repnz
add
in
jae
push
cmp
xchg
sti
mov
mov
jns
lds
ret
pop
xor
adc
call
fs
or
adc
jne
insb
sbb
xchg
clc
xchg
sbb
sti
insb
addr16
add
push
ficoms
adc
jns
add
mov
sarl
add
or
add
and
shlb
mov
add
add
jne
test
push
xchg
in
mov
test
test
dec
add
iret
loope
sub
in
add
adc
add
loop
mov
or
mov
dec
sub
add
cld
call
ljmp
add
std
xor
add
cmpb
add
push
scas
lret
call
mov
mov
ret
mov
inc
xor
or
dec
mov
push
cld
leave
sti
xchg
sbb
imul
adc
pusha
gs
inc
repz
aas
add
out
add
mov
add
push
add
fildl
xor
jmp
repz
xchg
lret
xlat
lret
js
aad
call
imul
icebp
shll
xor
lcall
jmp
add
lcall
into
out
gs
mov
ffreep
xor
lar
ret
add
gs
xor
add
jmp
add
cwtl
shlb
or
push
pop
int
lcall
lock
ret
cwtl
cmp
js
jne
int3
dec
xor
pop
adc
int3
pop
ja
rclb
xor
bound
xor
mov
sub
fstpl
jns
loope
imul
jl
push
jb
xor
sub
call
dec
xor
fisttpl
push
movb
pop
leave
sub
push
popa
loop
add
and
add
pop
rolb
into
pusha
push
or
leave
movaps
jnp
insb
jecxz
xor
cmpsb
in
test
push
push
adc
xor
cltd
push
cmp
jb
adc
jo
notl
jp
jne
dec
imul
ds
push
jle
shlb
push
stc
push
or
lock
cmp
movsl
mov
sti
push
jne
push
mov
out
idiv
stc
cmp
test
pop
adcl
dec
cld
pop
int
adc
xchg
dec
adc
hlt
notb
add
mov
gs
mov
testb
repz
xor
je
pop
and
add
add
add
xor
xchg
sbb
push
pop
jl
test
imul
jae
jne
pusha
push
adc
repz
dec
sti
mov
sti
ret
sarb
inc
pop
pushf
xlat
icebp
and
movb
push
imul
jp
dec
mov
notl
fdivr
sti
test
repz
fisubrs
add
roll
pop
sub
clc
test
cs
xchg
lret
add
incl
fildll
insb
addb
hlt
negl
add
in
fwait
pop
lret
insb
rol
inc
dec
daa
add
lret
xor
test
add
ss
js
mov
addl
add
shl
xlat
xor
testb
loope
dec
pop
adc
pop
add
dec
adc
cmpsb
test
es
jle
mov
call
jb
pop
push
mov
push
add
scas
push
cmp
add
xchg
div
cli
jbe
stos
call
jno
inc
popa
icebp
add
inc
idiv
inc
and
jmp
add
mov
add
adc
push
add
adc
jle
movsl
adc
aaa
lods
or
jae
dec
or
and
and
inc
ret
mov
push
and
cmc
dec
push
inc
add
push
and
in
add
in
push
cmc
incl
lea
push
sti
lock
mov
add
add
add
in
add
stc
cmp
in
cmpsl
addb
insb
lods
outsb
add
cmp
aam
jne
mov
push
enter
adc
jecxz
mov
lea
incb
add
cmp
push
adc
push
jne
pop
pop
out
cli
dec
ret
in
mov
sbb
call
add
push
fs
fs
dec
out
jecxz
sbb
addr16
pshufw
faddl
xor
outsl
adc
sti
push
push
sub
cld
pop
mov
fsubs
jge
outsb
add
push
fcoms
ret
jne
mov
push
popa
add
cli
add
incb
jg
imul
inc
pop
les
cld
cli
add
call
clc
xchg
ss
movsl
mov
flds
and
aas
cld
cltd
ret
sbb
and
mov
add
in
loop
pop
inc
adcl
test
adc
enter
pop
push
outsb
xlat
xchg
lods
add
pop
add
testl
push
inc
jg,pn
sub
xchg
testb
add
add
add
mov
add
andb
adc
test
notb
lea
sti
out
mov
add
ss
jmp
and
push
stos
and
jmp
mov
lea
insb
push
xchg
xchg
pop
xchg
adc
sub
jne
jmp
push
cli
pop
xchg
aad
mov
jge
pop
xor
sti
mov
call
or
inc
jmp
addl
lods
add
testl
mov
add
std
notb
xor
add
lds
lcall
mov
jp
mov
mov
sub
cmp
push
leave
mov
rolb
decl
pop
std
jmp
sub
jge
jmp
adc
hlt
sbb
mov
data16
aaa
aam
push
sti
push
das
xchg
adc
in
loope
pop
adc
push
xor
shlb
jl
iret
shrb
add
enter
inc
and
mov
add
nop
sti
stos
or
mov
cmp
and
mov
push
mov
push
mov
stos
sub
pop
das
dec
add
xor
push
pop
mov
out
xor
nop
xchg
popa
sbb
cld
mov
inc
dec
das
psadbw
mov
and
pop
add
jmp
repnz
xchg
lcall
ret
fldl
lea
jmp
xchg
xchg
cltd
scas
ret
je
cmpsl
mov
popa
cltd
jl
fs
sbb
imul
shrb
imul
loopne
roll
pop
add
nop
lcall
sbb
test
add
nop
mov
rcrl
rclb
or
push
add
fs
adcl
jg
in
dec
test
inc
push
sti
je
push
sti
cld
cmp
inc
jmp
into
cmp
cld
cmp
ds
add
push
or
cmp
sub
stc
mov
call
jle
sub
add
test
add
cltd
jge
pop
push
mov
dec
aam
addb
and
out
or
jnp
in
adcl
dec
push
jae
xchg
std
and
call
push
push
dec
lea
idiv
loope
bound
jae
stos
addl
testl
ret
lea
xchg
incl
popa
push
call
test
ret
pop
ret
sti
xchg
call
shl
loope
mov
std
cmpb
or
call
xchg
div
cwtl
push
clc
push
xchg
mov
inc
adc
pop
xchg
jecxz
or
and
push
lcall
lea
rcrb
mov
pop
push
stos
decl
sbb
sti
inc
insb
sbb
xchg
add
ficompl
sbbl
stos
jle
cmpb
pop
sbb
sti
out
je
fwait
mov
inc
cwtl
sub
les
test
add
adcl
jmp
sub
pop
add
adcl
mov
jg
add
pushf
pop
add
nop
pop
mov
pop
fldt
jge
aaa
mov
mov
adc
out
loope
lea
jmp
xchg
aad
imul
aas
xorl
jle
aaa
and
add
pop
pushw
mov
xchg
sti
add
add
jns
pop
mov
les
aaa
daa
fists
sahf
cmpsl
jge
sub
mov
ds
sti
jb
or
pop
adc
clc
fistl
movsb
mov
lea
sti
fisubs
pop
jb
mov
dec
outsl
add
nop
cmp
cli
mov
jge
mov
mov
cmpsb
dec
mov
hlt
add
inc
jmp
test
sti
add
loopne
add
push
repz
sub
jae
jmp
notl
xchg
test
aas
dec
ret
ja
inc
and
mov
jnp
xchg
std
sbb
add
ds
jne
mov
pop
test
leave
ret
dec
lea
jno
push
sub
clc
mov
xor
dec
inc
movsb
addb
add
mov
aaa
test
adc
scas
mov
jle
popf
or
push
xor
push
shlb
aad
adc
jmp
or
daa
mov
mov
sahf
mov
into
dec
scas
xchg
pop
push
push
pop
pop
insb
fldl
add
push
aaa
mov
das
xlat
fmull
add
test
add
insb
xor
sub
std
dec
mov
insl
or
das
add
xor
jmp
das
add
cmpsb
add
je
sbb
pop
add
pop
mov
add
xor
fmulp
ljmp
mov
jl
scas
adc
push
and
xor
ljmp
ss
xchg
add
out
jl
scas
adc
inc
xor
testl
xchg
mov
into
les
in
xor
aad
out
cwtl
dec
sahf
push
add
push
cwtl
mov
inc
mulps
scas
pushf
std
mov
stos
pop
shrl
mov
fcmovne
inc
clc
pop
cwtl
stos
adc
mov
mov
stos
sbb
daa
lcall
add
add
add
jmp
or
xchg
jg
loop
inc
cld
fistpl
jnp
inc
xchg
cs
jmp
adc
in
test
pop
lods
stos
test
daa
pop
sti
movsb
sbb
cld
jnp
stos
jne
lcallw
sti
pop
jnp
clc
jb
lcall
lea
add
pop
add
inc
add
int
sarb
inc
add
lock
cmp
push
out
sti
push
in
push
push
sub
roll
add
mov
push
sub
dec
call
rcr
call
movsl
out
or
mov
out
imul
mov
jge
push
scas
push
cmp
jle
add
add
add
jae
test
dec
cmp
dec
popf
push
daa
dec
clc
mov
out
or
in
or
mov
push
mov
adc
popl
xchg
lcall
inc
fwait
int
ret
loope
cwtl
lcall
jae
or
daa
inc
or
gs
call
xor
lahf
xor
add
fwait
pop
leave
add
cmpsl
call
loop
enter
and
out
sub
lea
xor
daa
imul
aaa
push
or
add
int
cmp
xor
lar
stos
jns
or
sahf
in
orb
call
add
push
je
outsl
push
into
leave
les
sub
and
pop
jg
mov
pop
xor
mov
std
imul
or
add
jmp
pop
gs
inc
mov
ret
xchg
xchg
push
add
insl
bound
pop
sub
lea
inc
pop
andl
negb
jp
hlt
ljmp
lret
adc
fsubrp
fistpl
xchg
jns
inc
add
push
pop
cmp
ss
mov
add
jp
adc
add
jmp
out
jg
sub
je
adc
setb
or
pop
mov
lahf
inc
clc
mov
or
jmp
jnp
in
jp
out
xchg
ret
and
arpl
mov
pushf
cmp
imul
add
data16
push
pop
in
or
in
add
push
xor
push
dec
lea
or
addb
mov
dec
xor
mov
cmp
or
jne
jge
outsb
jns
je
cmpb
mov
push
mov
js
int
aas
add
cmp
enter
or
mov
xchg
rorl
enter
lds
je
shlb
sti
testl
pop
sbb
repnz
jo
dec
iret
cs
lea
mov
xchg
xchg
push
mov
dec
mov
add
rolb
push
push
and
mov
mov
pop
xor
std
xchg
xor
or
mov
fisubrl
add
outsl
leave
jl
outsl
aam
xchg
addr16
sub
inc
sub
cmp
add
fwait
dec
xchg
ss
xchg
sbb
add
add
mov
cmp
mov
add
push
fdivrl
inc
pop
das
std
push
mov
je
adc
loop
mov
test
jmp
dec
pushf
jg
cmp
jl
hlt
repnz
repz
mov
jg
push
negl
xor
popa
inc
pop
and
add
add
add
add
jnp
inc
and
call
mov
scas
or
movsb
mov
inc
loope
and
outsl
sbb
mov
jle
lods
xchg
sbb
cmc
sbb
mov
movsl
lock
fisttpll
inc
lods
test
inc
scas
mov
mov
out
add
push
scas
add
adc
hlt
call
xchg
mov
push
push
std
dec
cmpsb
and
or
adc
fstpl
pushl
daa
jmp
cld
and
in
push
or
ret
in
cltd
push
push
lods
mov
add
out
sub
adc
in
out
cli
xor
rolb
add
loopne
jo
xor
sub
add
sub
jecxz
cmp
call
mov
mov
sub
mov
jae
aaa
ljmp
outsb
in
je
in
or
mov
imul
mov
add
and
idiv
std
jo
or
xchg
jl
pushf
jmp
mov
inc
mov
adc
add
fs
xchg
inc
mov
call
xor
adc
push
pop
bound
and
dec
dec
lds
inc
adc
mov
add
out
iret
scas
shll
call
mov
sti
jmp
jl
xor
mov
push
add
xchg
mov
add
out
or
add
add
push
popa
stc
call
sti
xchg
fwait
jmp
push
sbbb
push
mov
xchg
jl
lcall
std
movsb
cltd
sti
cltd
mov
sub
add
ret
nop
mov
dec
test
fidivl
cmpsb
push
in
dec
call
jl
in
mov
add
add
jecxz
das
cmp
cmp
cmp
lcall
cmp
push
add
add
add
push
xchg
addr16
jo
lea
ret
lods
sti
ds
testb
std
xchg
insb
mov
sti
jb
dec
pop
sub
add
icebp
cld
cmp
jecxz
push
cwtl
mov
clc
insb
add
sbb
loopne
or
fisttpll
leave
jl
rorl
sti
mov
lahf
int3
je
jmp
xchg
cmpsb
ja
jmp
dec
movsb
push
add
adc
mov
or
jmp
daa
or
incl
dec
adc
mov
jne
adc
daa
adc
add
push
jbe
push
adc
push
sbb
sub
incl
decb
adc
idivb
and
repnz
notb
gs
notb
cmc
mov
push
mov
dec
dec
mov
xchg
sti
dec
or
xchg
cmpsl
sti
and
adc
and
pushf
and
add
cltd
cld
mov
test
add
add
dec
xor
test
adc
mov
insl
stos
sti
or
les
fiaddl
add
jnp
jge
xchg
xor
jno
call
rorb
sbb
pop
sbbl
out
stos
je
jg
cmpsl
or
fnstsw
aaa
adc
add
cmp
jg
add
add
cmp
cmp
outsl
cs
xchg
ret
cmpb
cld
or
stos
divb
mov
pop
pop
cwtl
sbb
push
cwtl
adc
pusha
cs
mov
fdiv
cmp
push
add
push
jg
mov
xchg
inc
pop
imul
pop
inc
jne
cmp
inc
scas
xor
xor
inc
jmp
add
stc
add
adc
imulb
add
inc
add
pop
inc
add
les
call
mov
stos
jmpw
cld
jle
mov
adc
push
jb
xor
jmp
xor
ljmp
sarb
add
shll
or
add
aad
cld
lock
add
add
add
mov
push
sahf
add
adc
out
aad
cld
ljmp
inc
int
add
add
adc
cmp
add
jecxz
mov
add
mov
imul
cmpsb
pop
inc
or
insb
add
add
dec
mov
push
dec
and
cmp
inc
rorb
addr16
out
aam
test
xor
xor
adc
inc
fwait
outsl
sbb
ret
mov
aaa
andl
push
add
xor
and
and
incb
add
test
decl
test
dec
leave
push
mov
dec
dec
jmp
and
addl
jno
add
popf
testl
adc
sahf
out
adc
jl
cmp
xor
pop
test
xor
xchg
mov
mov
jb
shll
sbb
cli
or
adc
je
sub
cld
adc
add
add
sbb
fiaddl
pop
add
out
jmp
adc
or
mov
inc
pop
rorl
lret
inc
cmp
leave
test
or
mov
hlt
adc
adc
sub
orl
push
and
mov
fwait
jb
xor
pop
add
cs
popf
xchg
sti
mov
adc
cmp
out
pop
or
add
add
insb
add
adc
imul
xor
jg
push
push
push
je
xchg
jg
adc
inc
hlt
sti
add
jmp
sbb
add
adc
je
das
jge
jmp
mov
add
out
jmp
jb
or
add
gs
adc
cltd
mov
cld
ds
inc
rcrl
cld
cs
adc
push
cltd
sti
push
mov
pop
or
sbb
pop
jmp
test
jne
xchg
add
gs
mov
mov
pusha
lock
add
jne
xchg
scas
rorb
or
outsb
add
jne
arpl
pop
fmuls
ret
cmp
lss
add
test
jecxz
imul
add
in
pushf
cmp
add
sbb
add
cmp
out
pushl
pop
or
push
divl
stc
call
repnz
adc
decl
icebp
addr16
pop
add
jne
jmp
loop,pn
test
jns
adc
add
subl
jmp
cltd
sub
mov
ret
movsl
sti
xchg
rorb
movsl
sub
imull
xchg
jp
dec
jl
cmp
add
decl
es
xor
call
fiaddl
add
xchg
jp
or
sti
mov
push
pop
add
test
xrelease
push
add
add
add
shlb
add
lods
iret
imulb
fistpll
sar
add
or
les
and
pop
add
hlt
fwait
cmc
shll
jl
test
lcall
movsb
cmc
cmpsl
hlt
xchg
stos
stos
movsb
dec
lcall
enter
cmp
xor
inc
jle
inc
fdivs
outsb
mov
inc
pusha
or
and
jmp
ds
adc
push
outsb
int
inc
add
mov
jg
int3
fwait
repnz
int3
add
push
mov
add
sti
adc
add
pusha
mov
adc
imul
jmp
lcall
and
sbbl
adc
xchg
dec
orb
mov
adc
aaa
cmpsb
add
jp
adc
mov
sbb
sbb
add
adc
jae
cmp
test
add
add
push
outsl
add
std
loop
sub
inc
je
fldt
ljmp
add
push
push
je
xchg
std
loop
mov
scas
add
decl
jp
push
fincstp
fiadds
add
out
pop
cmpsb
lock
mov
jne
rorb
pushl
push
out
push
mov
test
incb
inc
je
xor
incb
push
imulb
bound
repz
pop
es
cld
mov
xchg
sub
call
outsl
imul
je
cmp
mov
sub
xchg
jle
push
stos
incl
pop
les
repnz
adc
popf
xor
sub
les
mov
je
cmovae
adc
leave
inc
lar
add
add
lock
addr16
pop
add
pop
push
hlt
sub
pop
rorl
mov
dec
add
add
mov
jmp
neg
add
sbb
mov
pop
add
pop
loop
jmp
movsb
pop
or
push
xor
sar
leave
add
imul
in
inc
stos
add
inc
push
push
pop
fwait
cwtl
cmp
in
rcll
test
pop
xor
adc
jge
xchg
pop
lock
sub
add
adc
add
adc
out
jle
or
add
dec
sahf
cld
jae
jmp
add
ljmp
inc
inc
in
jne
fwait
shr
sbbl
jge
inc
push
cmp
add
call
fimuls
inc
push
push
inc
push
push
repz
jmp
adc
jne
cmpsb
aas
test
mov
stos
out
xchg
nop
cltd
jg
jnp
je
sub
dec
push
push
or
addr16
add
iret
dec
push
or
out
jae
clc
imul
or
sti
mov
gs
inc
std
jae
insl
lret
addr16
add
add
add
sub
add
adc
pop
imul
or
add
pushf
add
into
inc
pop
push
add
add
sar
loope
add
push
push
pop
test
cld
and
cmp
adc
or
loopne
push
lods
mull
test
stc
xchg
loope
aas
pop
movsb
push
sbbl
or
add
test
push
rcl
out
add
icebp
sbb
lods
aas
pop
popf
adc
jg
or
pop
sbb
dec
and
push
les
add
add
or
addr16
call
adc
and
aas
pop
and
add
inc
cmpsl
or
iret
test
push
xchg
int3
aaa
add
xchg
sbb
hlt
in
clc
jg
add
jle
sbb
popa
xor
outsl
mov
add
add
add
xchg
add
jo
adc
jmp
roll
add
add
add
out
in
test
movsl
cld
or
in
jne
outsl
aas
cmc
add
jle
pop
xor
rcr
ds
xor
leave
add
stos
xchg
sti
inc
stc
sub
xor
pushl
out
clc
xchg
repnz
sbb
idiv
adc
push
scas
mov
sub
lea
push
add
mov
je
jl
pop
jmp
fmull
jno
stos
lock
adc
sbb
add
jl
inc
push
mov
addr16
call
jmp
push
pop
sub
push
data16
notl
xor
mull
mov
loopne
in
add
call
test
cmp
add
int
inc
jg
fmuls
cli
add
out
icebp
sbb
add
sub
adc
cmp
jne
lods
aam
push
mov
dec
add
jns
idiv
gs
pop
in
cmpb
xchg
and
add
xor
dec
mov
notb
das
out
sbb
or
add
std
or
pop
pop
mov
lock
mov
sahf
loopne
mov
mov
sti
add
cltd
mov
pop
sti
ljmp
or
push
xchg
je
add
je
xchg
xor
add
jmp
pop
adc
push
mov
and
pop
pop
fucomi
decl
or
push
xchg
je
nop
xchg
je
mov
xor
add
icebp
ljmp
add
insb
outsb
ror
cmpsl
hlt
pusha
ss
test
jp
or
mov
dec
adc
test
out
add
sub
mov
lods
and
jb
aad
bound
xor
adc
cltd
push
pop
sysret
faddl
inc
hlt
and
inc
jmp
stc
int
xor
add
mov
jns
call
sub
bound
mov
test
jp
cs
xchg
les
add
dec
mov
jmp
dec
nop
mov
je
rcrl
out
cmc
test
add
loop
push
add
in
push
pop
lea
jle
leave
add
fnstsw
in
and
add
add
sub
mov
fcmovne
inc
fisttpll
ja
mov
sti
jmp
ljmp
xor
sbb
sbb
cli
sub
xor
bound
add
test
add
add
jle
call
jns
repz
fdiv
adc
ret
lds
aas
rol
xchg
or
jns
adc
nop
inc
or
pop
xorl
or
rorb
cli
les
inc
add
inc
add
dec
movl
data16
mov
mov
cmp
je
xor
pop
xchg
out
jp
lea
cli
add
movsb
jo
mov
cli
add
pop
sti
and
mov
add
mov
daa
sbb
or
aaa
in
out
les
bound
in
repz
mov
adc
dec
cld
pop
fwait
lcall
sbb
xchg
push
jg
add
pop
jo
xlat
hlt
ss
aad
incl
pushf
mov
ja
sub
push
pop
divl
adc
fbstp
and
mov
and
add
sub
add
add
ret
push
mov
ret
frstor
daa
js
mov
xchg
sub
dec
sbb
arpl
xchg
ja
fistl
into
mov
sbb
adc
pop
xor
add
mov
sub
daa
xor
repz
jb
xchg
shl
icebp
sub
insb
aas
pop
xor
add
cli
dec
out
pop
lock
xchg
shll
ret
and
xchg
add
push
es
cli
xchg
or
rcr
aam
pop
mov
dec
or
cmp
cld
test
add
std
lahf
sbb
mov
inc
xchg
test
adc
cld
mov
xchg
subl
es
push
bound
mov
push
sti
jle
imul
test
mov
xchg
inc
loope
cmp
add
add
jmp
jmp
fisttpll
outsb
add
idiv
and
clc
daa
inc
add
shll
outsb
pop
sar
jne
or
push
insw
fadds
test
jmp
sub
add
add
cs
mov
lds
ds
add
cmp
inc
add
mov
add
mov
in
imul
push
ljmp
out
jnp
pop
cli
or
popf
aas
pop
jl
out
fwait
mov
das
sub
inc
pop
fcomp
sti
mov
cmc
inc
add
pop
cli
inc
lcall
add
cmp
in
lcall
pop
mov
add
push
push
pop
int3
int3
fiaddl
sti
or
aas
pop
jl
in
lcall
pop
mov
add
mov
add
faddl
je
ret
in
faddl
je
push
rorb
std
add
lret
arpl
cwtl
add
add
les
sahf
mov
add
or
call
or
cmc
or
inc
int
inc
add
jmp
inc
jmp
add
bound
sahf
and
cmp
nop
sub
sbb
xchg
es
jmp
add
lcall
mov
xchg
pusha
loopne
jmp
add
sar
clc
fstps
in
add
mov
ljmp
std
fisubl
add
pop
add
fwait
lret
xor
inc
push
add
push
ret
mov
mov
adc
in
rolb
sti
mov
adc
incb
add
add
pop
xlat
mov
push
adc
inc
loope
or
add
add
lahf
aas
jmp
pop
mov
insl
aam
add
aam
add
jmp
out
out
out
repnz
jb
je
std
add
out
add
clc
imul
aam
notl
sub
std
jmp
mov
fwait
cmp
add
adc
leave
ret
push
mov
sub
jb
add
ret
mov
push
or
test
lock
out
mov
out
std
std
add
mov
add
cs
xor
addb
sub
jns
call
lea
push
mov
or
xlat
ljmp
pop
jmp
adc
lcall
lea
dec
das
call
xchg
ficoml
adc
fwait
addb
inc
in
jae
pop
incl
mov
jg
outsb
adc
sbb
jg
ret
fiaddl
or
mov
out
icebp
adc
adc
xchg
xchg
lahf
jmp
pop
fwait
sub
add
sub
in
push
test
das
sbb
nop
xor
add
sarl
mov
iret
cmp
xor
lea
pusha
lock
cmpsb
add
add
mull
add
loopne
test
or
je
imul
lea
jo
dec
lret
add
add
lahf
ljmp
popa
xchg
cmpsb
cltd
xchg
adc
xor
sub
add
add
xchg
cmpsl
sub
dec
test
lea
sti
and
test
lret
adc
or
cli
aam
mov
sti
ss
cwtl
add
adc
test
xchg
jno
ret
sahf
sbb
nop
aam
lea
sti
and
adc
imul
sbb
cmp
add
add
cltd
mov
push
sti
jno
add
notb
movsl
outsb
jnp
mov
pop
push
jae
sti
push
xchg
sbb
lea
std
pushl
dec
dec
in
inc
out
mov
je
cli
inc
cld
inc
enter
js
adc
addl
clc
ljmp
test
push
sub
lcall
inc
inc
nop
idiv
repz
std
adc
add
add
add
sti
mov
int
outsb
add
decl
pop
imul
inc
add
mov
jmp
sub
push
dec
push
xlat
push
mov
push
outsl
cli
add
je
in
clc
repz
sub
out
inc
jne
fadds
mov
inc
mov
jg
rolb
add
das
int3
jecxz
jg
imul
sbb
add
sbb
out
into
divb
jnp
loop
aad
outsb
lods
add
pop
add
sbb
add
add
cmp
es
jecxz
es
inc
xor
sub
add
jnp
and
inc
pop
imul
sbb
inc
pop
add
clc
test
popf
inc
add
fldenv
popa
inc
loope
bound
shrb
test
inc
pop
jg
sbb
pop
cmpsb
add
cltd
sbb
sbb
sbb
mov
divl
decb
jmp
pop
dec
lcall
add
cmp
or
test
mov
aaa
mov
add
mov
push
movsl
sahf
jp
test
mov
adc
lahf
jp
rorl
test
cli
adc
push
add
push
adc
xchg
mov
jmp
sahf
ss
mov
add
dec
jmp
add
add
push
movsb
sti
ljmp
lea
push
mov
divl
cmpsl
sbb
inc
sbb
std
add
sub
dec
sti
ljmp
and
cmpsb
cmp
ljmp
mov
decl
pop
je
xchg
scas
out
dec
mov
pop
aad
in
in
sub
or
les
subb
add
add
fdivrp
ljmp
cltd
xor
pop
adc
call
xchg
add
sti
pusha
lcall
mov
push
mov
ljmp
add
xlat
xor
stc
xchg
cs
push
lods
imul
sti
and
hlt
aas
pop
loopne
test
pop
ljmp
mov
adc
inc
in
lock
sarl
add
mov
in
xchg
fwait
add
bound
sti
cwtl
ret
nop
add
xchg
adc
adc
or
ss
inc
pminsw
push
adc
jmp
add
mov
subb
xor
sarl
xchg
pop
inc
scas
rorb
add
sbb
add
pop
jnp
inc
es
out
jnp
add
jns
fcoml
fs
dec
adc
jmp
lock
add
inc
mov
jp
add
in
cwtl
dec
orl
xor
cmp
test
push
imul
jmp
lret
mov
lret
push
ficoms
or
add
xchg
in
into
inc
ja
sub
test
xor
inc
inc
mov
mov
jg
pop
or
xor
add
arpl
sub
and
add
jnp
jno
int
mov
inc
inc
jne
xchg
cli
mov
jge
and
aam
cli
inc
inc
repz
clc
iret
cs
decl
test
fwait
add
inc
add
test
mov
xchg
cmp
popa
or
push
push
out
out
pushl
cli
mov
jmp
mov
shrb
jmp
dec
call
jp
jne
mov
idivl
inc
jg
adc
xor
jne
notl
xchg
inc
idiv
inc
cli
inc
clc
aad
mov
call
push
dec
lock
imul
pop
pop
aas
add
adc
push
mov
psubq
subb
rolb
das
ret
rolb
test
lcall
mov
das
stos
das
add
in
push
add
add
enter
pop
imul
adc
mov
mov
push
jg
pop
nop
test
jg
inc
repnz
add
loope
jle
add
adc
pop
fiadds
push
add
cmpl
add
js
rcrl
xchg
pop
push
xor
add
mov
adc
sub
shll
pushf
shrl
push
pop
add
push
imul
enter
cmp
mov
hlt
xor
pop
add
sarb
add
pop
xchg
fisttpl
repnz
clc
jo
fsub
adc
call
fldenv
xchg
jmp
jge
sub
push
jmp
pop
jnp
inc
xchg
out
push
add
adc
pop
out
jmp
pop
pop
mov
jl
lods
xchg
adc
xchg
in
aas
xor
xchg
add
jmp
adc
mov
sti
dec
pop
sub
push
shll
decl
cltd
hlt
imul
js
xchg
jp
add
loopne
dec
add
xorb
gs
test
call
sub
aas
pop
pop
cmp
mov
call
pop
std
mov
add
add
add
jmp
arpl
cltd
inc
sti
push
sbb
push
push
scas
add
add
add
dec
test
add
push
inc
dec
ret
clc
push
ret
add
sti
decb
in
add
push
imul
mov
sti
mov
xchg
addr16
sub
imul
add
out
je
in
hlt
mov
jg
inc
mov
jg
scas
hlt
adc
je
and
xchg
pop
ljmp
out
pop
aas
push
pop
sub
add
out
push
imul
pop
cwtl
fsts
dec
call
cmp
aas
pop
fimuls
push
pop
es
mov
xor
inc
lods
das
rorb
add
add
xor
jecxz
xchg
jg
adcl
repnz
out
subb
jg
fists
jle
jle
je
mov
imul
or
loopne
jl
sbb
in
sub
mov
or
jmp
jle
inc
jne
inc
cmc
lock
imul
aas
imul
inc
stos
add
lock
mov
cmp
pop
push
pop
lcall
int3
or
fisubrl
mov
sti
mov
jae
xchg
rcll
sub
repz
in
jl
paddusb
in
adc
xchg
data16
adc
dec
mov
pop
call
cli
in
sub
inc
sub
sub
adc
mov
jmp
push
jae
or
add
ficomps
test
je
cmp
push
cmp
mov
inc
out
mov
call
gs
loop
int
mov
out
insl
sti
decl
fucomip
std
std
pop
push
lret
mov
inc
or
incl
add
add
sti
ljmp
mov
push
popf
inc
xor
cmp
fucomip
lods
aas
je
push
sti
incl
ljmp
inc
xchg
mov
or
lock
xor
jbe
bound
pop
push
jmp
pop
pop
jmp
clc
fs
je
bnd
decb
add
pop
xor
jbe
bound
pop
add
pop
pop
jne
mov
mov
add
int
stc
mov
cli
mov
jo
ret
stc
cmpb
aam
mov
sub
repz
jg
vpunpcklbw
lcall
xor
pop
mov
cmp
jmp
jnp
stc
stos
rcrl
sub
lcall
icebp
sbb
adc
call
jnp
pop
cmpsb
inc
fdivl
fstpl
lret
sarb
addb
add
jo
inc
sub
data16
cmc
add
adc
adc
add
jo
pop
nop
dec
mov
ret
push
sub
push
push
outsl
sub
adc
faddl
jmp
lods
cmp
das
mov
repz
popf
test
cmp
cmp
insb
mov
sub
xchg
dec
imul
pusha
inc
je
ljmp
jmp
adc
cmp
adc
call
cmpsl
pop
xchg
or
pop
cmpsl
add
add
add
push
sub
add
jg
jl
push
fcmovnb
cli
mov
push
mov
orl
jl
add
ss
inc
clc
cmp
ret
stos
add
mov
call
lea
mov
inc
mov
je
mov
jg
repz
pop
cmc
mov
notl
fidivrl
add
in
and
add
push
pusha
push
divb
cmp
sbb
inc
pop
adc
out
repz
jmp
addl
je
or
mov
inc
or
xor
xchg
jp
ret
inc
sti
push
insb
pop
sub
out
in
and
and
cmp
jp
push
pop
call
pushl
add
out
or
add
mov
fisttpl
stos
push
nop
incl
addl
pop
out
pop
js
pop
push
lcall
out
std
sbbb
or
lcall
ret
movsb
add
add
push
mov
pusha
xor
jge
std
fs
jmp
add
pop
incl
test
add
mov
add
insb
adc
call
int3
mov
jmp
ja
adcl
pop
test
and
and
call
cmp
jg
pop
jmp
push
adc
mov
cwtl
push
fdivr
call
cld
or
add
jmp
pop
aas
jmp
adc
add
adc
fmull
push
inc
jmp
mul
dec
push
call
cmpsl
repz
mov
or
out
insl
cli
fdivr
adc
popf
push
cmpsb
clc
add
or
mov
inc
addr16
pop
add
and
adc
bound
add
jmp
add
test
sbb
add
add
mov
call
imull
push
test
ljmp
mov
out
sub
pop
std
std
std
movsl
in
std
add
notl
jge
add
xlat
pop
cmp
incb
add
jg
je
sbbl
add
push
cmp
add
xchg
and
mov
and
pop
pop
jmp
jbe
jl
insb
xchg
arpl
pop
pop
cli
loopne
mov
pop
mov
push
xor
or
pop
fiadds
aas
je
add
icebp
mov
or
mov
add
xor
xor
fs
in
pop
rorb
pop
iret
out
cmp
call
aas
add
imul
je
adc
fisttpl
cwtl
sarb
std
add
movsl
imul
loope
out
and
jl
lds
xlat
add
xor
pusha
mov
xor
je
inc
pushf
or
push
call
add
or
and
lcall
ret
loop
test
das
out
loop
sbbl
jb
push
lcall
push
mov
cltd
mov
jmp
clc
adc
das
mov
sbb
jmp
mov
and
mov
data16
or
outsl
jg
cwtl
imul
add
add
pop
in
cmp
insb
test
adc
fsubrp
adc
push
xchg
or
push
fs
push
push
cs
push
pusha
fcoms
out
psrld
sub
cmp
aas
dec
je
sub
in
dec
jb
mov
test
cmp
jne
adc
pop
bound
enter
sbb
imul
add
sbb
je
push
notb
mov
jecxz
in
daa
adc
insl
add
rcrb
cld
mov
jae
inc
outsb
push
push
idiv
cld
jae
push
push
inc
add
lret
sbb
icebp
in
add
xor
xlat
je
dec
sti
mov
out
cmp
jnp
add
lds
add
int
add
test
roll
add
add
cld
dec
orb
jecxz
pop
lea
popf
mov
xlat
dec
inc
jns
mov
gs
gs
adc
add
sbb
xchg
push
test
adc
dec
repz
lcall
les
pop
incl
sbb
dec
mov
mov
pop
xorl
add
aam
push
dec
out
ljmp
adc
jmp
adc
mov
iret
cli
push
jo
stos
stos
ljmp
mov
ret
shlb
xlat
out
loope
xlat
pop
popl
pop
add
push
inc
int
int3
shrb
or
sbb
cmpsl
shr
lea
xchg
dec
fildl
add
stc
cmp
lret
outsl
cmpsb
add
adc
add
add
out
sub
pop
stos
or
pop
add
pushf
or
jp
movsb
mov
in
adc
es
add
add
mov
add
jns
fs
cld
jp
inc
add
and
je
data16
cmpsb
cmp
lahf
inc
shl
jg
push
add
cmp
ret
cmp
cltd
xor
in
adc
add
call
push
cli
dec
lock
jns
call
add
clc
add
icebp
ds
xchg
sbb
mov
iret
cmc
push
lcall
adc
xchg
mov
out
repz
imul
adc
dec
add
aam
pop
mov
jecxz
push
decl
mov
call
xchg
jle
in
call
cmpl
pushl
aam
in
decl
rorl
push
push
scas
jp
cmpb
jl
sub
jp,pn
pop
popa
mov
pop
pop
shlb
jmp
jp
add
mov
add
xor
mov
dec
notb
dec
aad
push
pop
push
add
add
imul
dec
test
cmp
sbb
xor
push
fscale
xor
out
aas
pop
sub
cmpsl
inc
mov
adc
xchg
pop
popa
jle
insb
test
add
shlb
add
popa
shlb
add
jl
jbe
ja
repz
out
or
aaa
pop
cld
orl
sti
add
aad
add
pop
lods
add
pop
call
outsl
sbb
outsb
imul
insl
mov
add
aad
add
jns
push
shr
xlat
enter
xlat
ret
fmuls
adc
add
xor
mov
ret
mov
movsl
lcall
popa
pop
push
nop
push
je
arpl
insb
jg
xor
jl
pushf
outsl
jl
repz
push
ret
repnz
inc
popa
pushf
dec
dec
mull
xlat
add
lar
sub
add
pushf
sti
xor
xchg
mov
xlat
pop
fisubs
mov
sub
loope
ffree
add
xchg
out
call
insl
xlat
fildll
sbb
rolb
push
add
mov
aam
mov
loope
dec
inc
adc
inc
dec
lea
xorb
aam
cmc
push
cmp
loop
ss
jecxz
outsl
lret
and
push
hlt
push
push
sbb
ret
mov
ficoml
clc
mov
jnp
jno
outsb
fs
in
xor
outsl
xchg
add
rcrl
dec
adc
mov
sub
inc
dec
sbb
xchg
xchg
xchg
xchg
jmp
add
dec
xchg
mov
xchg
add
xchg
xchg
bound
sti
pop
stos
fwait
sbb
pop
daa
dec
fists
in
sub
ret
sbb
cltd
xchg
xchg
fists
in
in
adc
pop
fwait
xchg
mov
pusha
add
jp
ja
mov
ljmp
mov
cmp
pop
outsb
outsb
hlt
aad
jo
stc
sarl
push
adc
inc
fidivrl
mov
lahf
and
mov
mov
fldl2t
je
sarb
pusha
jp
jbe
sub
jp
adc
daa
jae
test
add
ret
addl
inc
add
pop
add
jbe
cmp
xor
lahf
jmp
jp
pop
pusha
out
or
cld
iret
es
fisttpl
rorb
in
pop
or
mov
imul
add
push
enter
inc
push
into
insb
inc
stc
xor
popa
call
mov
push
add
mov
fsubrl
jg
pop
push
outsl
xchg
insb
adc
enter
inc
lar
jno
fidivrs
jmp
dec
xchg
cwtl
scas
push
pop
dec
mov
adc
mov
sti
incb
sbb
adc
ret
std
xchg
inc
jne
fstpl
rcll
mov
jge
jl
ret
mov
and
stos
mov
cmp
add
insb
push
sti
jle
push
jne
fld
and
xchg
test
orl
add
and
je
repz
out
push
lock
add
jecxz,pt
call
jle
jnp
and
das
jecxz
in
adc
adc
push
not
loope
jecxz
add
mov
dec
out
in
or
call
dec
sub
int
out
jns
testb
add
add
push
jp
ficoml
test
imul
jo
std
mov
xlat
dec
or
adc
shr
xor
insb
xor
insb
xchg
jg
or
add
imul
inc
and
pop
mov
out
sub
add
js
pop
pop
gs
movl
push
add
cmp
xlat
mov
jp
ljmp
cli
fsubr
inc
je
out
and
fldl
mov
arpl
mov
pop
sub
insb
jb
lahf
aad
sti
out
sbb
sarl
into
add
mov
add
insl
push
add
xchg
lar
int3
les
xlat
inc
ds
add
fwait
mov
fstps
scas
icebp
push
addr16
sahf
fucomp
js
or
or
fcmovnbe
jb
and
repnz
cmp
adcl
pop
lea
sub
push
sbb
sub
fwait
int
jns
aam
add
bound
popf
add
adc
cmp
outsl
xchg
ds
adc
subps
cwtl
add
adc
mov
add
jmp
or
push
insb
mov
mov
push
add
jmp
fadds
add
das
add
adc
mov
add
jmp
stos
pop
sti
insb
pop
or
add
add
inc
sbb
sti
xchg
enter
mov
subl
jne
add
std
aas
aaa
cmp
jmp
shll
scas
jno
clc
jge
add
jg
inc
stc
stos
decl
mov
jg
jne
add
add
test
loop
incl
aas
ja
clc
jmp
movsl
dec
add
add
insl
add
xchg
notb
insl
mov
cmp
mov
jne
mov
pop
fimuls
dec
xchg
aam
add
imul
or
aam
std
sbb
mov
add
adc
pop
jbe
in
add
jns
gs
imul
xchg
mov
test
jns
std
or
push
sti
jmp
aam
negl
test
je
xor
clc
lcall
push
rolb
pop
fs
out
sub
xchg
cmp
push
in
cwtl
push
mov
in
mov
add
shrb
pop
cmp
insb
mov
pop
int
mov
cmp
xor
mov
xchg
cld
mov
pop
ret
push
int3
out
pusha
scas
adc
scas
add
mov
pop
mov
sarb
sub
push
cld
mov
clc
test
test
cmp
and
aas
jmp
add
inc
inc
stos
adc
push
bound
aad
aad
mov
mov
lods
jbe
jmp
in
add
jmp
adc
push
mov
popa
rcll
adc
inc
xor
xchg
jne
mov
cli
hlt
jo
aas
jmp
fisttpl
test
add
decb
lods
adc
mov
sti
fiadds
lahf
inc
or
add
jmp
addr16
add
jge
or
inc
mov
lock
xchg
dec
push
xchg
cmp
mov
xchg
cmp
xchg
dec
push
icebp
cmp
ljmp
adc
jle
lock
cwtl
adc
nop
notb
test
jecxz
lock
test
cmp
push
add
pop
inc
adc
add
je
mov
notb
ss
divb
negl
mov
sti
push
addr16
fnstcw
sti
dec
inc
pop
adc
mov
pop
pop
pop
rorb
mov
xchg
sbb
inc
pop
cwtl
ss
mov
sub
imul
cli
add
aad
aas
pop
je
add
sub
decl
std
je
push
aas
out
xlat
push
call
jg
shlb
dec
push
adc
and
idivl
pop
call
xor
push
ss
pushl
pop
bound
ret
in
test
or
pusha
adc
cmpsb
xlat
ja
jmp
add
sub
pop
add
mov
push
xchg
and
add
mov
std
pop
pop
scas
in
test
lcall
xor
jge
fcoms
mov
xor
fidivrs
pop
adc
fcomps
mov
divl
test
mov
lods
insl
jo
pop
loope
pop
add
lcall
sti
jmp
mov
sahf
adc
or
enter
cmp
add
add
add
add
imul
mov
mov
adc
xorl
push
adc
xor
arpl
popa
or
dec
add
aas
jmp
aam
cmpl
add
adc
loope
out
cltd
rol
pop
call
and
test
adc
xchg
fstpt
inc
add
imul
add
add
mov
mov
add
lea
decb
inc
scas
cmc
decl
add
add
inc
sti
test
push
add
inc
add
cmp
add
repnz
decb
lods
decl
xchg
notb
testl
push
jns
call
add
sub
add
inc
sti
mov
jp
pop
addr16
fwait
lcall
or
cli
sub
hlt
aas
pop
in
pop
inc
fdivrl
cmova
jg
loope
push
push
fdivs
xlat
sti
pop
push
repnz
sub
sbb
sub
rcll
rorb
cwtl
testb
pop
repz
add
adc
add
sarl
out
mov
cli
pusha
mov
mov
push
pushf
mov
mov
loopne
push
je
add
pop
or
and
add
add
add
mov
fnstenv
mov
test
add
adcl
imul
rorb
hlt
int
fdiv
add
hlt
add
add
sub
inc
jnp
or
mov
aam
jns
pop
mov
pop
out
dec
add
mov
test
pop
nop
mov
fsts
xchg
push
aad
cwtl
mov
push
insl
rcl
and
pusha
dec
xchg
adc
add
es
add
dec
jg
pop
add
jae
dec
add
loope
call
add
add
pop
inc
sti
arpl
adc
rcrb
mov
stos
adc
push
bound
int
std
arpl
jg
adc
data16
out
adc
add
sub
or
dec
sti
aam
sti
aas
jmp
mov
add
mov
add
add
add
lea
pushl
cmp
mov
cmp
push
cmp
or
or
inc
repz
add
add
jae
jmp
jne
add
xor
ds
notb
cmp
jae
inc
inc
jmp
insl
xor
jge
add
sub
cmp
push
fidivs
test
inc
sti
test
mov
inc
repnz
adc
add
sbb
shl
aas
fdivrp
inc
jae
adc
rclb
cli
mov
repz
arpl
repz
popf
mov
aad
call
jle
and
cli
push
mov
xor
pushf
pop
pop
jnp
arpl
jge
push
rolb
xchg
push
and
lods
gs
testl
pop
sti
sub
jne
adcl
add
pusha
push
jne
sarb
xchg
iret
out
jg
mov
dec
gs
jecxz
xchg
add
add
cmp
imul
add
call
mov
ret
mov
fimull
xlat
dec
add
lock
lock
mov
lock
aam
dec
test
cmp
in
int
add
psrld
jb
ret
add
ja
jg
aad
in
adc
call
cmovae
add
hlt
in
repnz
pop
pop
lcall
pop
out
cmp
add
jmp
rolb
fcmovnbe
or
inc
aaa
das
sbb
ret
call
scas
out
ss
sti
xchg
lret
aam
cs
or
mov
lahf
push
push
push
dec
add
add
dec
push
fs
push
adcl
out
add
mov
inc
jne
sub
sti
push
dec
adc
push
shlb
mov
call
jb
jg
sbb
les
or
push
jnp
jg
or
inc
dec
orb
or
mov
mov
add
cwtl
mov
sub
andb
xchg
xorb
jg
cld
into
pop
sti
incb
scas
int
cmp
cmp
dec
pop
adc
jp
sub
mov
mov
shrb
pushl
push
mov
lea
add
divl
arpl
xchg
jb
jne
aam
out
lock
popa
add
pop
ljmp
push
imull
push
mov
dec
add
nop
mov
lret
adc
xor
clc
aas
pop
aam
shl
mov
mov
sti
or
push
add
idiv
loope
inc
jne
push
clc
or
jle
jecxz
push
mov
push
aaa
out
pusha
mov
ljmp
test
add
add
add
or
mov
add
int
adc
cmp
dec
sbb
cli
jns
lock
call
hlt
fwait
inc
fisttpll
nop
mov
jl
jnp
dec
xor
dec
fmuls
sub
cmp
inc
int3
cmpsl
lea
bnd
pop
or
sti
ret
or
lods
dec
addr16
push
inc
push
cli
pop
mov
faddl
jge
lcall
push
dec
fs
dec
and
mov
mov
mov
jns
movsl
inc
xor
adc
jns
xchg
out
jg
roll
jne
test
mov
std
lcall
ljmp
jmp
sbb
rolb
fs
sbb
adc
arpl
push
pop
pop
dec
push
add
add
add
cli
xchg
or
shrb
inc
push
or
push
test
leave
or
lods
pop
ret
cmp
pop
jmp
add
and
roll
divl
mov
andl
adc
sub
mov
cmc
mov
call
rclb
enter
push
mov
push
push
cwtl
xor
add
addr16
not
test
mov
mov
mov
sbbl
mov
jnp
je
jnp
je
ret
inc
cld
mov
dec
not
jnp
je
loope
pop
mov
mov
cld
dec
sti
mov
loop
test
sbb
enter
push
pushf
jg,pt
push
call
in
aas
pop
or
clc
add
cli
sarb
pop
je
ret
shrb
pushl
dec
sar
dec
sarb
pop
aam
xchg
push
dec
jecxz
inc
inc
mov
das
inc
ror
out
in
and
fimuls
add
pop
pusha
inc
or
cmpsb
enter
enter
fdiv
sahf
dec
mov
dec
iret
xchg
add
add
ja
pop
add
cmp
xchg
add
add
int3
mov
add
pop
mov
sub
ljmp
inc
adc
jl
test
push
fs
loop
mov
pop
int3
mov
loopne
bound
dec
int
dec
and
test
adc
dec
mov
dec
popf
call
mov
push
mov
pop
jg
dec
add
psubq
pop
or
jl
testl
pop
mov
cmpsl
not
inc
test
pop
into
jo
enter
aaa
shlb
adc
inc
mov
mov
inc
test
mov
addr16
inc
in
and
call
outsb
sbbb
std
lret
bound
sub
dec
push
add
mov
pop
mov
push
sub
call
cmp
xchg
ds
decl
fiaddl
xor
jbe
push
ret
clc
aad
sub
stc
outsl
push
leave
jl
sti
push
xor
test
or
add
cli
ljmp
cmp
sbb
push
pushl
dec
call
add
sti
in
dec
or
jmp
movsl
hlt
call
xchg
dec
int
stos
ljmp
lea
int
into
cmpb
inc
push
inc
pop
sahf
or
sub
jmp
sub
push
add
xor
pop
xor
aas
adc
and
leave
sub
pushl
adc
jb
cmp
dec
add
sbb
add
sub
inc
imul
lret
mov
cmpl
scas
mov
pushf
fidivrl
mov
sub
sbb
mov
lcall
lcall
inc
jmp
lsl
stos
or
faddl
add
add
add
jl
mov
add
jecxz
push
fsubrs
pop
dec
fstp
dec
inc
mov
leave
rcrb
mov
aas
mov
dec
pushf
aas
shrl
aas
mov
add
aas
sub
push
fistps
cmp
xchg
cs
add
xlat
addr16
pop
add
add
add
sub
cmp
add
shll
add
add
push
add
mov
shl
cli
pushf
cld
mov
sti
jmp
dec
cmp
imul
sti
adc
mov
lea
rorl
imull
lods
cmp
and
out
sbb
lea
cmpsb
shrb
jmp
add
push
fnstsw
sti
insl
shll
pushl
dec
mov
add
adc
ret
aam
inc
xchg
sub
push
add
sub
push
mov
add
inc
pop
mov
lret
xchg
call
push
jge
push
test
jne
lret
loope
pop
adc
test
push
sub
inc
je
cmp
cmp
rcll
add
mov
cmpl
add
lret
incl
je
jb
mov
clc
push
lret
je
loope
pop
lcall
notb
mov
out
mov
jno
je
xor
and
sub
cmpsl
pop
dec
jmp
push
addl
jge
mov
sbb
xchg
cli
lock
ljmp
xor
testb
mov
roll
add
sub
aas
pop
dec
xlat
dec
rol
sub
xor
and
mov
icebp
xchg
or
push
aam
sti
xchg
push
xchg
in
push
outsl
dec
call
jg
arpl
jmp
das
out
leave
inc
in
rorl
ja
add
cltd
cs
add
hlt
and
ret
add
lea
lar
add
adc
fs
inc
add
loopne
push
cmp
mov
inc
sub
push
mov
push
add
rclb
jl
sub
cmp
mov
xchg
push
add
ss
pop
adc
lods
sub
dec
add
gs
ss
xor
add
jg
add
gs
push
pop
lret
adc
into
ficoms
arpl
add
push
das
rolb
call
dec
ds
cmp
add
cs
sub
add
push
sarl
call
adc
rcrb
inc
or
sub
popa
pusha
mov
adc
jmp
notl
fiadds
ds
dec
cld
cmc
hlt
push
inc
stc
jne
mov
decl
inc
sti
pushl
jae
testl
cld
mov
sbb
add
mov
cld
jle
xchg
add
add
jae
sub
cmp
or
add
aaa
push
add
scas
cld
mov
in
es
add
add
add
cld
jb
mov
adc
sti
add
out
aas
pop
movsb
add
jmp
mov
mov
jb
or
sti
aad
shrl
inc
pushf
sti
sbb
repz
fcos
push
loopne
jg
es
adc
popf
sbb
aas
pop
ret
add
sub
shll
jmp
out
inc
call
fwait
push
or
sub
cli
shrb
push
lcall
aam
add
push
ret
push
lods
ficoml
dec
rcrl
inc
xchg
and
das
mov
jge
mov
shlb
mov
xchg
insb
leave
arpl
add
rcrb
mov
rorb
adc
push
mov
lock
leave
test
in
xchg
inc
shrd
addl
dec
cmp
aam
filds
mov
ljmp
pop
call
lahf
dec
jne
popa
cmp
data16
add
sub
jno
cmp
into
add
mov
aas
jmp
inc
sub
jmp
dec
cli
aam
adc
mov
mov
vphaddudq
rclb
test
adc
cmpsb
movsb
xchg
or
push
dec
cli
mov
sbb
add
dec
or
dec
repnz
ljmp
jle
les
adc
loopne
mov
pop
clc
mov
into
out
fcmovnb
testb
shl
dec
loop
ficompl
or
pop
movsl
enter
dec
push
push
sub
add
or
pushl
add
scas
add
add
xchg
fldt
jne
stc
ret
add
sub
lcall
mov
xchg
insb
call
pop
aas
pop
sub
cli
or
adc
pop
add
add
in
call
lahf
in
cmp
fistpl
pop
push
out
xor
negb
lock
ljmp
sub
adc
or
pop
fldl
nop
fsubl
add
adc
add
jmp
fs
inc
sbb
xor
pop
sub
mov
add
add
xlat
inc
lea
cs
dec
mov
xor
lret
sbb
sub
xlat
ret
js
mov
cli
test
sub
add
add
pop
push
add
test
xor
call
add
add
add
clc
ret
add
xchg
and
pop
add
add
movsb
clc
xor
loopne
out
sbb
test
adc
add
jmp
and
ljmp
fists
push
arpl
and
ret
cmp
imul
inc
jno
add
jmp
adc
ret
fbld
call
add
sti
jmp
fwait
and
mov
and
popf
and
and
jl
add
sbb
add
ficoms
aaa
flds
jg
lock
push
je
incl
out
adc
xchg
test
xchg
inc
and
dec
roll
pushl
inc
inc
rdmsr
sar
scas
inc
push
test
paddd
incl
test
pop
jp
add
inc
psllq
inc
and
sti
scas
add
jp
ljmp
data16
decb
cs
dec
push
pop
push
dec
ret
push
dec
sbb
sub
nop
jl
and
mov
call
into
xchg
sbb
incl
xor
sbb
pop
decl
int3
mov
and
push
cmp
pop
add
loope
mov
sbb
cli
sub
or
jne
sahf
push
je
fwait
aaa
add
dec
mov
pop
aas
add
popa
ret
and
dec
sub
pop
or
test
cmp
and
cmp
fstps
or
sub
add
add
cmp
shll
or
add
push
aad
les
xor
mov
test
fwait
push
aad
hlt
fstps
ret
test
test
loopne
jp
push
cwtl
lds
lahf
loop
frstpm(287
sub
xor
outsl
ret
and
loopne
jge
loopne
jp
add
lret
addl
add
add
in
cmp
in
andl
fdivrs
or
imul
iret
jecxz
pusha
and
sub
jmp
inc
pop
scas
icebp
mov
movsb
push
push
add
scas
jmp
leave
rcll
sbb
aas
nop
push
lea
ja
mov
ja
ret
out
jmp
add
call
jb
jecxz
insl
aam
or
jecxz
ljmp
mov
xchg
pusha
das
sti
sbb
sbb
sub
movsb
cmpsb
add
call
mov
jle
and
das
ljmp
jg
push
enter
js
jp
mov
xor
add
cmp
add
add
ljmp
add
add
pushl
icebp
cmp
add
add
in
imul
scas
mov
shlb
mov
and
pop
shrl
cs
mov
push
pop
movsb
rorb
fldt
jg
dec
stos
sbb
sti
std
imul
xor
inc
add
dec
jnp
bound
rcrb
sti
dec
lcall
stc
sbb
adc
mov
and
dec
mov
jne
cwtl
ds
dec
iret
mov
push
stc
dec
js
test
and
stos
movsb
stc
scas
shlb
mov
sarb
test
call
inc
inc
push
dec
lods
dec
push
pop
mov
mov
out
push
cmp
pop
add
mov
stc
cld
xlat
mov
mov
jb
fs
arpl
rolb
call
inc
xchg
dec
cwtl
mov
jle
cld
imul
out
sub
dec
aas
add
mov
sti
jno
das
frstpm(287
fdivr
push
lods
in
mov
add
adc
xchg
add
lret
or
dec
inc
in
sarl
lods
dec
cmp
lcall
add
movsl
cmp
sti
lods
lock
xchg
adc
add
cmp
dec
jmp
xlat
mov
push
mov
aaa
sbb
sti
cmp
mov
mov
or
rcrb
punpckhdq
rcr
pop
add
fbld
rorl
mov
sub
and
and
and
and
xchg
imul
push
cmpsl
iret
out
xchg
push
sti
jmp
mov
push
push
lret
jb
sub
cli
imul
or
push
sti
pushl
pop
sbb
push
push
mov
dec
mov
in
cmp
pop
or
scas
cmp
adc
cmp
xchg
dec
mov
mov
jle
adc
ds
test
mov
dec
out
add
roll
adc
lds
out
jbe
sbb
enter
out
mov
repz
decb
mov
xor
inc
repz
stos
sub
sub
xor
push
bound
mov
mov
sbb
jmp
add
scas
stos
out
lahf
mov
movsb
pop
pop
sbb
addr16
std
call
fwait
sub
sbb
xchg
cmp
inc
pop
aad
mov
pop
xor
std
or
enter
dec
sahf
iret
cli
scas
push
xor
pop
add
push
in
imul
in
mov
adc
outsl
mov
add
pop
daa
test
jno
xor
out
pop
aad
int3
inc
inc
push
pop
sahf
lds
xchg
movsl
or
mov
testb
or
fwait
movsl
add
mov
mov
int3
lahf
jno
xchg
fisttps
jnp
fucomip
pop
adc
arpl
add
add
dec
fcmovnu
adc
cmpsl
shr
jecxz
sub
frstor
rolb
jmp
add
mov
testl
add
adc
sahf
out
adc
xchg
sub
sti
insl
shrl
sub
add
cmp
adc
shl
ret
adc
cmp
pop
iret
jecxz
jo
jecxz
insb
push
pusha
and
pop
jo
jecxz
insb
pop
pusha
adc
add
jecxz
movsl
addr16
movsl
pop
jecxz
ljmp
sbb
enter
ljmp
jns,pn
add
rcrb
aas
jne
mov
xchg
std
not
mov
pop
inc
push
rolb
add
add
add
push
cmpsl
ss
adc
int3
xor
out
jae
jne
pop
inc
test
mov
dec
push
aam
push
ljmp
xor
test
outsb
decl
adc
dec
adc
addl
inc
xor
sarl
scas
add
insb
pop
jmp
push
cmp
shlb
rcll
and
sbb
cli
dec
add
adc
je
mov
and
movsb
sti
dec
in
xlat
and
and
into
setp
sub
xchg
mov
pushf
push
jecxz
cmp
mov
jno
or
and
jl
xchg
jecxz
call
mov
or
inc
and
incl
pop
mov
push
pop
mov
sti
dec
cwtl
add
cld
adc
sub
mov
gs
xor
ljmp
xor
pop
add
pop
add
hlt
fstps
push
mov
sub
fidivs
xor
test
out
jns
jle
fdivrp
aad
and
mov
out
and
out
cwtl
jge
mov
cmp
jmp
out
sbb
lods
and
mov
pusha
loopne
shl
dec
je
add
jo
loopne
insb
add
scas
add
sub
push
adc
xchg
fdivrl
push
notl
sbb
call
mov
add
pop
loopne
popa
pop
add
scas
sbb
mov
pop
sar
mov
scas
cld
mov
pop
lock
in
dec
or
add
lahf
fbld
add
push
rolb
push
out
mov
add
add
jnp
mov
cmpsl
pop
and
add
cmp
dec
data16
fwait
ljmp
je
inc
push
xchg
pushf
dec
aam
je
pop
jecxz
lret
mov
mov
cmc
mov
in
jl
decl
mov
jae
mov
sbb
imul
lods
mov
jmp
ds
add
dec
sub
jg
or
decb
and
insl
dec
cmp
das
int
pop
add
call
or
imul
mov
testl
incl
fisubl
loope
out
rorl
or
ret
sub
pusha
sbb
call
mov
sub
inc
pop
cwtl
sub
ret
cli
stos
sub
jne
pop
or
adc
fstpl
pop
outsb
sti
add
out
adc
jl
xlat
repnz
and
jmp
movsb
pop
push
push
xchg
clc
js
or
mov
pop
and
sub
inc
jge
sbb
cltd
add
dec
cmpsl
incl
lods
call
sub
in
sub
jmp
fsubrs
loop
ret
push
fsubrl
sbb
jne
orl
xor
sub
add
cwtl
pop
push
xor
loope
cld
stos
inc
mov
inc
adc
inc
push
push
add
insb
push
xchg
add
call
and
repz
mov
mov
std
mov
sahf
jb
shl
push
fdivrs
add
mov
fs
out
or
shrl
sub
push
and
sub
jle
adc
push
bound
ret
add
pop
je
in
xchg
jle
outsb
and
jo
sbb
ficoml
sbb
pop
push
pop
int
call
movsl
sti
add
push
leave
ljmp
icebp
aas
add
xor
jmp
stos
sbb
add
cs
adc
test
sbb
jp
adcl
out
jmp
push
shl
jne
sti
or
add
jne
sti
add
add
leave
jl
sti
push
or
bound
adc
push
decl
adc
mov
jae
int
pop
addl
add
add
or
xchg
cs
jp
pop
mov
into
push
call
sub
add
pavgb
imul
sti
and
cmovo
push
jp
test
add
push
sub
cli
add
adc
lods
cmp
call
aad
insb
xor
inc
jl
daa
aaa
mov
gs
aad
cmp
inc
test
sar
jl
lcall
jne
xchg
mov
mov
xchg
out
mov
roll
sbb
jmp
sub
mov
sub
ret
loopne
movsb
fwait
pop
sbb
cmpsl
fs
jbe
cmpsb
sbb
scas
sub
cld
jecxz
ret
push
stos
jnp
popf
js
push
xchg
lods
jle
sbb
sub
arpl
cld
mov
jnp
xchg
scas
shrl
insb
mov
jle
sbb
sub
mov
jle
sbb
sub
jmp
sub
call
sub
scas
inc
adc
add
cmpl
sbbl
xor
mov
lea
stos
cltd
test
test
sbb
call
flds
cmp
add
add
sbb
lret
lea
cltd
or
sbb
mov
sub
loopne
inc
pop
jne
filds
push
sarl
aaa
sub
lea
or
pop
test
cmpsb
incl
adc
idiv
ja
movss
add
add
daa
out
push
adc
add
negb
fidivrs
call
adc
lcall
cmp
or
add
pop
inc
sbbl
push
add
not
push
cmc
stc
divb
adc
or
and
pop
in
clc
pop
imul
sub
push
push
das
mov
add
in
aam
aas
sti
pop
pop
addr16
xchg
mov
je
pop
out
std
push
sbb
notl
push
sub
cli
and
inc
pop
call
cltd
adc
iret
cli
add
inc
pop
nop
es
fldt
jle
daa
repnz
xlat
push
jle
ret
cmpsl
ds
pop
lret
adc
je,pt
je
adc
xchg
sti
and
mov
pop
test
or
ror
setbe
add
mov
sub
cli
or
stos
pop
incb
and
mov
test
jbe
sbb
sbb
lret
loopne
hlt
mov
mov
hlt
sti
imul
push
cmp
in
add
outsb
dec
sbb
mov
jbe
add
and
push
sbb
cmp
test
dec
mov
cmp
popf
out
add
xchg
in
movsb
dec
lods
fnsave
jmp
insl
int
test
syscall
test
cmp
add
xchg
dec
scas
aas
jmp
xchg
rorb
addr16
push
bound
ds
adc
push
or
cwtl
aad
adc
mov
sub
add
cs
push
shlb
xchg
aam
and
movl
shl
mov
mov
mov
pop
cmp
jp
testb
add
xchg
ds
mov
dec
inc
push
enter
mov
std
lcall
pop
mov
mov
inc
sbb
cmp
jbe
pop
divb
lea
in
and
jecxz
add
stos
addl
add
or
mov
add
sarb
push
jne
divb
jmp
dec
out
add
inc
sbb
add
mov
outsl
add
cmp
add
or
push
xor
jge
or
add
push
test
mov
and
xchg
call
pop
cld
inc
ret
shrl
fwait
std
addl
sub
add
xchg
andb
call
loop
pop
sub
call
sub
xchg
add
in
out
gs
mov
push
pop
dec
inc
xor
cli
inc
sbb
lahf
std
shrb
nop
inc
repz
gs
inc
add
inc
inc
jecxz
arpl
jecxz
mov
mov
mov
xchg
leave
or
mov
js
cmp
mov
call
hlt
pusha
pop
gs
pop
push
jmp
mov
pop
add
xchg
pop
ret
cs
lcall
add
pop
add
sub
jp
lcall
sub
jp
and
xchg
fmull
imul
mov
cmp
clc
mov
mov
dec
fstpt
jg
adc
addb
push
add
mov
cmp
add
lret
nop
jmp
cwtl
inc
jne
aaa
pop
loope
adc
pop
mov
xchg
cld
mov
mov
adc
mov
or
loope
sub
negb
test
incl
add
loopne
cmpl
mov
std
cmp
inc
jmp
add
jl
push
add
insl
mov
add
std
pusha
add
adc
test
adc
ficoms
ficoms
add
test
ljmp
outsl
push
in
mov
lods
jle
add
jns
dec
add
mov
jbe
add
add
jae
outsb
jno
and
lcall
jae
and
dec
mov
jecxz
lcall
add
repnz
jae
mov
sub
divb
adc
xor
add
xor
psrld
out
cmpb
push
test
pushl
sub
add
repnz
add
mov
inc
jns
cld
clc
iret
and
cmp
inc
decl
sahf
xor
pop
sub
jne
cmpsb
andb
inc
lahf
sldt
add
add
push
sbb
cmp
push
jmp
imul
sub
call
nop
andb
incl
add
sub
mov
sub
pop
jp
lret
mov
lahf
push
test
dec
lods
xchg
add
sbb
mov
sub
call
push
add
movsl
out
sub
js
xchg
sub
xchg
add
pop
mov
sbb
sbb
cmp
fwait
mov
mov
cmp
test
sbb
and
adc
pop
out
pop
iret
add
add
mov
cmp
inc
data16
sbb
pop
enter
in
add
add
and
adc
ret
call
pop
mov
lods
std
call
xchg
movsb
add
ret
lds
icebp
adc
or
cs
aam
fsubs
aad
lcall
mov
push
pop
mov
or
adc
loope
xchg
and
movaps
xchg
std
jmp
rcrb
add
lock
call
hlt
jge
push
movsb
cmpsb
add
cld
gs
in
je
add
aas
adc
test
imul
call
mov
in
adc
mov
cmp
ret
push
mov
sub
mov
ljmp
pusha
imul
outsb
jg
xorl
lock
mov
push
push
jmp
sbb
add
add
adc
test
addb
inc
or
add
dec
push
adcl
test
jmp
dec
jmp
or
cmpb
sbb
mov
mov
sahf
shl
or
dec
cmp
or
cmp
pop
incl
add
and
aas
pop
cmpsb
inc
jne
adc
inc
out
popf
mov
pop
pop
out
add
sbb
dec
pop
out
cmp
cli
or
repz
pop
sahf
je,pt
lret
mov
mov
sub
adcb
push
sbb
adc
xchg
add
nop
loop
call
lock
xchg
inc
sahf
dec
addl
movsb
sbb
lock
add
clc
ret
nop
test
or
mov
fcom
icebp
test
mov
mov
sti
pop
xchg
loopne
inc
test
pop
sbb
call
mov
jno
dec
mov
les
pop
jnp
xchg
xor
sbb
or
add
xor
test
add
sub
aam
xlat
mov
mov
aaa
or
xchg
leave
or
add
and
call
adc
sti
seta
out
adc
test
lcall
push
jae
aas
jmp
push
or
lods
mov
cmp
testl
lea
ljmp
mov
mov
decl
push
ror
cmpl
push
push
xor
ss
data16
inc
idivl
lock
push
addl
push
notb
std
int3
or
mov
inc
add
lea
orl
jnp
je
ja
or
push
out
push
cmc
je
add
pop
sti
ljmp
or
push
and
call
or
add
adc
push
adc
cmpsb
shr
jl
pxor
hlt
cli
push
xchg
loope
adc
lods
sub
add
adc
test
or
push
add
in
pop
das
int
inc
pop
dec
daa
or
cld
adc
pop
adc
add
ljmp
dec
outsl
sub
adc
xchg
push
dec
mov
xchg
sub
jne
dec
nop
or
or
sti
sub
mov
cltd
sub
shr
cwtl
inc
xor
cltd
sbb
mov
jg
arpl
call
hlt
mov
sbb
jo
sub
xchg
inc
jmp
mov
add
ret
mov
in
xchg
cltd
push
lds
sbb
gs
daa
dec
sub
jg
add
add
inc
loop
nop
add
add
or
loopne
lahf
mov
adc
inc
jns
sbb
lds
shll
decl
sti
pop
pusha
jb
cmp
cmc
dec
not
or
fisttpll
imul
add
mov
ja
lea
addb
mov
and
hlt
adc
add
fs
sahf
gs
mov
or
jmp
lea
push
cwtl
sub
jmp
sub
mov
add
push
xor
repz
xor
push
pop
movsl
inc
jmp
add
pop
add
das
repz
incb
leave
jns
test
popa
adc
leave
inc
out
add
ret
fwait
jns
lea
dec
push
in
je
push
js
jnp
popa
add
pop
jmp
jle
test
push
push
lcall
jns
adc
ret
fwait
jns
andl
push
dec
lea
sti
lock
pushl
divb
repz
pop
push
mov
cli
cmp
mov
mov
nop
lahf
std
and
xorb
jno
or
xlat
mov
jns
addb
cmp
shlb
add
pop
add
pop
subl
test
sti
mov
mov
out
fimull
xorl
decl
or
sti
pusha
imul
ret
push
jbe
push
dec
pop
shlb
sar
push
movsb
popf
ret
xor
movsl
repz
or
add
mov
cwtl
sbb
push
cli
push
xorb
push
cld
sti
lcall
xchg
call
add
sbbb
rolb
sbb
inc
push
or
mov
adcb
std
lahf
addb
add
sbbb
incl
add
push
inc
sbb
add
jmp
bound
lea
mov
mov
sbb
bound
sbb
add
dec
push
cmpb
or
cwtl
dec
std
jle
mov
sub
mov
inc
push
adc
add
sub
cld
push
es
repnz
adc
push
adc
or
cltd
cld
sti
inc
das
push
aam
mov
mov
adcb
dec
xchg
ret
sbb
mov
xchg
call
pusha
cmp
add
add
insl
add
pop
cmp
xchg
push
mov
addb
std
lahf
mov
test
pushl
or
dec
repnz
push
ret
jne
incl
add
clc
add
cs
cli
xor
mov
push
mov
jp
ljmp
jne
push
bound
pop
in
xchg
pop
add
arpl
xlat
sbb
inc
arpl
aas
leave
push
adc
push
pushf
ss
add
int
daa
mov
xchg
adc
loop
mov
shlb
push
sbb
jne
je
or
std
pop
sbb
rorl
addb
pop
xor
pop
lods
mov
add
or
les
std
pop
sbb
rorl
cwtl
sbb
xchg
movq
roll
pop
shrb
sbb
mov
pop
cld
xchg
mov
jl
std
outsl
xchg
adc
scas
fisubs
pop
mov
cli
add
mov
in
rcrl
or
stos
xchg
push
cld
aas
loope
dec
ja
addb
add
add
icebp
adc
hlt
sbb
mov
pusha
jne
or
into
pop
push
scas
mov
inc
cli
pusha
mov
cltd
out
pop
cmpb
lcall
in
mov
movsl
pop
xchg
sbb
jne
sahf
gs
sbb
and
pop
lea
mov
adcl
or
test
sti
mov
and
jl
add
push
mov
cli
jle
adc
stos
cs
ret
add
sbb
std
shrb
insl
inc
sti
daa
mov
push
lea
or
sti
jmp
pop
mov
fs
data16
mov
fndisi(8087
clc
dec
adc
test
lret
xchg
xorl
and
push
ljmp
jnp
mov
pop
addb
add
notl
clc
mov
test
push
adc
test
cmp
popa
mov
push
stos
mov
mov
test
idiv
ds
test
nop
mov
jne
sarl
lea
push
dec
js
inc
pop
jmp
shrb
dec
add
mov
clc
incl
lock
js
in
imul
sub
add
arpl
jg
adc
or
inc
cwtl
mov
pop
clc
xchg
pop
pushf
adc
repz
add
das
loopne
mov
stos
sbb
mov
cld
add
xchg
repnz
imul
aas
xchg
xchg
decl
pop
test
jle
icebp
xchg
out
out
jae
js
cpuid
and
add
add
jmp
mov
fistps
lea
pushf
jmp
push
ficoml
mov
or
xchg
jmp
jo
loop
adc
cmp
xlat
add
inc
cwtl
repz
jmp
js
jnp
fmul
mov
or
lock
sbb
add
pop
push
jg
pop
cmpsl
repz
pop
xchg
in
lock
add
add
cld
xchg
or
imul
fdivl
adc
lcall
push
jbe
rcll
cli
mov
aam
subl
add
sub
and
mov
pop
sti
cli
xchg
xchg
add
jmp
adc
jmpw
lcall
ror
dec
push
bound
lea
sti
je
add
push
or
pop
ss
jne
roll
sbb
jmp
cmpsl
cmp
xor
stc
xor
adc
sti
adc
test
je
or
sub
cmp
or
xor
add
lock
jne
mov
pop
inc
or
jmp
loop
lcall
cmp
add
jne
or
pop
add
jle
orl
push
jecxz
mov
call
lds
incl
or
js,pt
cld
mov
pop
test
add
std
mov
jge
dec
rolb
add
hlt
lahf
or
mov
jo
inc
pop
jmp
ret
inc
mov
fmuls
ljmp
shrb
mov
popa
mov
add
lcall
ljmp
pop
inc
push
mov
adc
repz
stc
jmp
xchg
ret
mov
add
dec
aad
adc
ljmp
stos
in
jne
int3
nop
pop
sbb
pop
mov
mov
mov
push
add
scas
std
iret
arpl
sub
jne
mov
sub
push
jecxz
push
or
add
std
jp
aaa
movsb
pop
sub
sar
push
push
push
pop
popf
sti
cmp
adc
in
jmp
mov
jl
sbb
xchg
insb
sti
sti
mov
inc
jmp
inc
lar
pushf
in
fisttpl
mov
xchg
add
mov
xchg
fs
add
jge
cmp
add
cmpsb
rcrb
fbld
shlb
pop
inc
popa
cwtl
ja
fisttps
pop
push
pop
shrl
rorb
bound
notl
mov
push
lods
push
inc
sub
loop
mov
xchg
out
sahf
fisubrs
cmp
popa
pop
fsubrs
cmp
ret
nop
add
push
inc
or
dec
and
insl
sub
pusha
or
jb
int
out
loop
fsubs
pop
xor
push
mov
jecxz
gs
ds
orb
sub
in
sub
add
neg
dec
add
outsb
lock
xchg
mov
mov
jns
scas
sub
in
sub
xor
add
pop
nop
pusha
add
sbb
negb
dec
sub
xchg
sbb
popa
sub
leave
cmc
push
dec
repz
push
popa
aaa
pusha
xchg
sbb
sahf
pop
fdivrl
loope
or
cmp
jp
mov
hlt
insl
pop
or
pop
and
mov
cmp
inc
cmc
test
test
and
jmp
push
add
adc
cli
sub
xchg
addr16
scas
in
aas
pop
insb
cmp
insl
sbb
mov
pop
cmp
daa
outsb
jp
jno
add
iret
add
js
enter
aas
je
je
ret
mov
mov
or
rcll
pop
jns
test
add
test
and
add
add
popl
test
loope
xchg
push
out
std
roll
fdivrl
adc
or
loopne
mull
ljmp
loopne
testl
xlat
add
jge
add
or
add
inc
fsubrl
xchg
call
cld
test
mov
add
mov
add
jmp
out
add
add
into
push
insb
scas
lds
popa
mov
out
add
cli
jb
inc
sti
fmull
cmp
test
add
fs
movsl
mov
adc
add
cltd
ret
dec
jbe
out
cli
aam
add
jmp
xchg
mov
adc
stc
add
adc
sti
sbb
test
add
add
repnz
decl
add
test
ret
dec
lea
sahf
add
push
cmpsl
ds
lea
dec
lea
add
test
testb
mov
enter
cwtl
xchg
add
call
jo
testl
mov
or
cmp
add
or
rclb
add
pop
incl
push
call
add
cmp
push
jmp
in
sti
cmp
push
pop
cmp
adc
mov
add
adc
mov
or
call
data16
sbb
xor
leave
pop
jmp
cs
pop
lock
push
ljmp
filds
sbb
add
pop
push
sti
sub
mov
call
pusha
inc
hlt
in
daa
adc
pop
lahf
cld
cwtl
inc
dec
sti
pop
sbb
push
mov
lea
add
add
jmp
or
lcall
cmp
mov
pop
inc
lcall
insb
xchg
add
pop
add
movsb
or
mov
lcall
ss
xchg
xchg
lahf
fstl
in
jae
mov
xchg
ret
lcall
mov
imul
add
popf
repz
jns
repz
inc
jmp
invlpg
ss
cli
mov
clc
adc
add
out
jmp
cmp
cli
push
add
clc
dec
adcl
sti
sbbl
notb
push
outsb
xor
lahf
cmp
or
imul
xchg
mov
testl
loope
mov
movsb
stc
cli
xchg
mov
aam
add
pop
testl
mov
out
cmp
jle
dec
push
add
mov
loop
stc
hlt
cmc
push
xchg
adcl
cmc
push
xchg
mov
adc
cmc
mov
out
jns
hlt
add
and
ljmp
cmc
decl
sbb
shr
add
cwtl
mov
xor
icebp
cmc
jmp
mov
cs
lea
cs
int
ljmp
add
inc
out
cmc
push
adc
lea
jnp
call
pop
pop
les
fs
mov
ds
pop
xor
cmp
dec
jg
xor
push
sbb
sarb
std
mov
mov
shlb
mov
out
aam
jg
aaa
sarb
add
sbb
xlat
stos
aas
add
jb
fs
adc
pop
int3
ds
inc
sub
loopne
mov
fcoml
std
cli
lcall
or
cld
or
int
add
push
pop
jmp
sarb
cld
lea
mov
shrb
call
push
outsb
imul
lock
inc
mov
cmp
shrl
mov
add
lock
or
add
sub
inc
pop
jnp
xor
inc
jmp
sti
fstl
sbb
out
mov
xchg
cli
cmp
push
insb
add
aas
sti
xchg
sahf
scas
pcmpgtd
add
out
dec
sahf
xchg
inc
jl
dec
insb
xchg
fcomip
ss
aas
lea
cli
add
add
add
jl
sbb
cli
mov
movl
out
lcall
test
fnstcw
in
aam
ds
std
adc
mov
je
out
icebp
sahf
ffree
call
insl
dec
mov
scas
dec
leave
ret
and
sbbl
add
add
add
jmp
push
fnstenv
jmp
push
inc
outsb
jg
test
cmp
inc
push
inc
outsb
jg
adc
idiv
lcall
push
add
cs
outsb
mov
or
test
dec
mov
dec
push
leave
mov
cli
pop
mov
push
inc
fsubrp
push
jne
jg
and
jmp
push
push
add
pop
jmp
xor
xlat
lret
sahf
sbb
jg
pop
imul
sbb
inc
adc
lods
addl
and
cmp
mov
bound
fiaddl
jae
cmp
push
das
pop
mov
mov
xchg
insb
add
ljmp
jmp
add
add
mov
mov
and
outsl
shl
movsl
lahf
add
push
gs
xchg
push
mov
sub
inc
fnstsw
jg
mov
movsl
sub
pop
xchg
jns
imul
cmp
in
shll
imul
and
pop
push
mov
mov
mov
add
add
sub
or
jp
adc
sbb
add
push
jo
inc
and
adc
sti
jmp
inc
jmp
mov
pop
add
bound
mov
sub
or
mov
inc
sbb
mov
ret
jp
aad
rolb
jbe
ljmp
add
and
outsl
adc
stos
xor
lea
push
jecxz
push
adc
out
and
jp
std
loop
adc
daa
inc
add
lds
add
popf
ds
popf
inc
or
aad
or
aas
jns
adc
call
mov
xor
movsl
xor
add
or
js
testl
scas
decb
add
testl
xor
push
add
push
clc
sub
outsb
jns
lcall
clc
push
jle
add
mov
lods
call
xabort
aas
ja
stc
push
ret
sub
lea
push
call
fs
push
push
out
add
mov
inc
in
repz
outsl
shr
ds
mov
add
xchg
sti
call
aam
or
adc
adc
add
dec
sti
sub
adc
pop
bound
ss
cmpsl
cs
aad
push
push
fiaddl
decl
jo
out
mov
push
cli
and
adc
pop
jb
push
push
add
add
add
sti
rcl
loop
gs
fimull
imul
add
ds
mov
outsb
push
scas
adc
add
jge
mov
cmp
insl
out
int3
aam
cmp
or
jle
insl
out
lods
rcrb
sbb
mov
inc
pop
jge
setp
aam
out
sbb
in
cltd
hlt
or
add
add
jge
jle
insl
out
dec
shrb
sti
adc
outsl
mov
add
jle
insl
add
in
mov
adc
lret
adc
xor
shll
sbb
mov
add
cmpsl
jae
inc
jmp
mov
popf
inc
add
adc
mov
sahf
xor
test
inc
jmp
stc
add
inc
add
add
jmp
fiaddl
data16
xchg
adc
sti
fdivl
aas
jmp
adc
call
mov
dec
mov
add
jp
add
push
call
mov
mov
sbb
mov
add
sbb
jo
ljmp
dec
inc
mov
add
mov
mov
add
ret
and
test
popf
cli
jle
or
push
cli
ljmp
add
cs
imul
cmc
adcl
out
xchg
filds
add
mov
add
xchg
inc
adc
sbb
inc
fwait
mov
adc
mov
xchg
sub
je
pop
mov
add
fwait
sub
adc
mov
je
pop
mov
push
mov
jmp
pop
sbb
mov
fildl
dec
mov
inc
sbb
nop
pop
dec
adc
adc
out
add
mov
pop
add
inc
aaa
xor
add
jmp
shll
xchg
add
in
add
xchg
enter
clc
inc
pop
fidivrl
or
sti
gs
fcomp
and
pop
pop
jns
fcmovnu
out
lock
mov
in
enter
inc
pop
jns
and
push
lds
jns
xor
push
sarl
pop
addb
sar
call
fucomip
js
jle
xchg
mov
add
sahf
ss
jle
sbb
call
dec
pop
add
ljmp
jmp
or
xchg
adc
adc
or
insb
push
jo
cltd
xchg
ds
fcomip
mov
lock
sti
jns
add
jmp
adc
push
inc
aas
jnp
dec
call
insb
shrl
mov
push
or
add
out
jl
cli
push
dec
movsb
add
subl
aad
idiv
fnsave
testb
pushf
cli
add
mov
call
jns
push
addr16
or
loope
push
mov
and
jle
aas
decl
mov
xor
xor
divb
aam
orb
add
jp
add
jg
and
lret
mov
das
rorl
scas
cli
ljmp
mov
dec
dec
jb
inc
scas
jp
jns
dec
dec
push
add
decl
gs
and
in
aaa
sar
adc
out
aam
jmp
call
incl
pop
fsts
lret
adc
in
add
xor
fsin
push
add
sub
mov
add
pop
sub
icebp
jmp
aas
add
or
pop
cld
push
sti
jmp
sti
mov
add
ret
mov
or
pop
dec
and
mov
in
adc
add
inc
pop
lea
xchg
insl
mov
aam
loope
sarb
cmp
loope
xchg
and
jmp
jnp
loope
pop
pop
loope
sti
sub
push
int
scas
add
push
cmpsl
cmc
test
lock
fiaddl
bnd
or
mov
push
imulb
add
fidivl
cld
test
cmp
jmp
in
or
ret
cld
gs
fisttpl
mov
sub
decb
add
add
add
add
or
inc
add
enter
lea
xor
mov
pop
adc
xor
inc
pop
add
or
test
and
add
add
test
aam
xchg
dec
mov
jmp
iret
arpl
in
ljmp
jg
cli
mov
lahf
jae
imul
add
add
adc
sbbl
adc
sub
jmp
xor
adc
in
cmc
jne
in
jae
leave
push
or
arpl
push
inc
outsb
sahf
mov
loopne
inc
add
fsub
fucomp
cmc
test
push
xor
inc
mov
dec
inc
inc
add
mov
cmp
repnz
call
add
xchg
cmc
incl
adc
lock
push
adc
mov
mov
jns
loope
cltd
push
adc
pop
adc
cmc
sti
cli
or
dec
mov
jnp
add
outsb
stos
incb
loope
jo
jmp
fdiv
movsl
dec
out
push
pushf
push
aaa
and
out
ds
sahf
push
sti
ret
dec
sub
jo
das
out
add
add
sti
mov
jg
je
loopne
pop
sub
verw
fdiv
adc
ds
out
push
xchg
push
out
pop
mov
fsubs
jae
shrb
rol
sub
daa
mov
adc
mov
mov
adc
fdivr
sti
idivl
xlat
add
inc
mov
out
pop
incl
dec
jmp
add
xor
outsl
or
fdivrl
ret
or
cmp
stc
add
fcomi
or
ljmp
or
fucomp
xor
call
dec
imull
add
aas
cmpsl
adc
aaa
pop
xlat
out
leave
ficompl
add
push
cwtl
push
add
cmp
call
insl
aam
sbb
add
adc
add
testb
insb
jge
jbe
jecxz
outsb
icebp
stc
cli
fmull
xor
aam
xlat
je
jg
mov
aam
pop
movsb
push
lock
xor
ds
and
and
pop
xchg
cli
push
test
jae
repz
sar
aam
jne
call
bound
cli
je
jecxz
in
fsub
cli
stc
push
sbb
data16
pushw
sti
add
sbb
cmc
adc
and
adc
xor
jmp
xor
mov
mov
jecxz
rorb
cmp
mov
divb
pop
dec
adc
push
or
jne
cmc
call
cmc
divb
in
adc
icebp
dec
adc
in
cmc
call
lock
cmp
jne
imul
add
xchg
cmc
jp
outsb
sbb
adc
lock
push
adc
push
fadd
loope
daa
pushf
outsl
adc
sbb
cld
cli
and
dec
mov
mov
fildll
dec
jo
add
add
imul
push
mov
out
ds
mov
jne
incl
or
fwait
in
add
push
sti
lret
je
fwait
loope
and
outsl
or
fnstsw
pop
push
mov
in
add
add
add
jno
je
add
lcall
test
lcall
aam
inc
jmp
adc
push
shrl
fldenv
or
dec
std
dec
pushf
dec
fucom
and
orb
out
sub
pop
sbb
jmp
nop
sub
sub
cmp
inc
pop
dec
jmp
outsb
cmpsb
add
inc
jmp
repnz
sbb
ds
inc
pop
shll
or
sbb
mov
add
add
push
in
shr
push
add
outsb
dec
or
ljmp
inc
pop
test
pop
ljmp
add
out
rcrl
dec
mov
ljmp
pop
test
loopne
pop
jp
pop
aam
add
push
add
mov
in
jle
cld
roll
cmp
xorb
call
gs
push
and
jb
std
out
cmp
cli
fs
push
adc
lea
cld
pushl
fmull
add
dec
jmp
sbb
adc
sub
mov
in
cmp
jecxz
inc
scas
decl
adc
je
xchg
mov
je
cmpb
sbbl
inc
jbe
sti
jmp
fisubl
jb
rcrb
add
shrb
flds
adc
cld
or
push
add
mov
inc
add
ja
je
dec
adc
dec
inc
xchg
sub
lcall
jne
fs
or
and
shlb
jae
xor
xchg
sbb
sub
pop
push
dec
fcomps
jmp
repnz
pop
pop
int
adc
aaa
xchg
xor
cmc
fists
jmp
push
mov
fisubrl
sti
add
mov
incb
xor
sti
stos
add
nop
mov
call
xchg
aad
fimuls
add
push
loope
imul
pop
pop
add
mov
inc
mov
xchg
dec
pop
dec
out
mov
add
add
pop
lret
add
add
mov
dec
cwtl
mov
int
add
out
xor
aad
lea
push
pop
push
push
add
add
cmc
or
fs
lret
add
push
fcoms
adc
add
fwait
xchg
out
fwait
mov
mov
adc
loopne
mov
add
pop
sbb
adc
jecxz
add
add
add
dec
sbb
cmp
mov
inc
lea
xor
xor
xchg
jmp
call
xchg
mov
jne
sub
push
gs
jge
insl
pop
xchg
pop
jmp
xchg
cmp
adc
xlat
cli
add
sub
cmp
adc
inc
add
dec
jnp
xor
sbb
adc
xchg
add
mov
or
stos
xchg
push
popf
out
rclb
inc
cld
push
sub
maskmovq
divl
ja
mov
loope
adc
sub
sbb
or
cmc
jne
adc
jne
mov
cld
mov
incb
add
cld
decl
adc
mov
add
xchg
test
xchg
adc
fisttpl
jmp
test
xor
dec
cwtl
fnstenv
inc
cld
jmp
or
lods
xchg
sub
mov
or
xchg
test
aaa
aam
sbb
mov
sbb
xor
mov
or
mov
xlat
in
xrelease
test
pop
xchg
jl
inc
jg
push
sti
add
push
out
cmp
cli
and
clc
enter
nop
cmp
cmp
pop
das
test
xor
cld
sub
icebp
test
sbb
outsb
mov
push
or
pusha
repnz
cltd
lds
mov
test
es
nop
dec
shlb
add
lds
xlat
inc
pop
out
out
pop
rcr
outsl
es
jmp
adc
push
add
imul
xchg
pop
js
jmp
push
leave
mov
add
push
jne
mov
out
stos
adc
mov
mov
adc
call
adc
add
push
push
outsl
popa
sbb
out
stos
adc
pushw
add
mov
out
stos
adc
mov
mov
pushl
icebp
add
sub
sub
add
das
sub
shll
je
out
sub
push
clc
in
dec
repz
cmp
ds
ds
insb
add
js
vpmovzxwd
jae
mov
add
push
xor
jne
add
pop
bnd
jmp
xchg
lods
cmc
add
jmp
iret
and
out
cmc
add
add
mov
or
inc
cmp
sbb
jmp
cmp
inc
mov
add
add
scas
jp
fcompl
stos
adc
xor
or
inc
scas
jae
ljmp
imul
popa
mov
sarb
pop
jmp
cli
push
into
ss
add
fadds
add
fcom
adc
mov
add
lret
mov
aam
je
cwtl
lahf
in
fwait
push
add
jle
xchg
inc
add
push
out
out
out
cli
xchg
cwtl
dec
or
inc
sbb
mov
sti
or
mov
add
sbb
add
imul
lcall
rorl
and
subl
lea
add
bnd
pop
fimull
sub
addl
imul
mov
sub
aam
loopne
ret
mov
shlb
pop
out
xor
mov
cmp
je
inc
mov
sub
xchg
fimull
cli
cmc
inc
pop
or
jae
inc
jmp
add
and
int
les
testl
add
out
adc
mov
dec
sub
jnp
test
scas
fcmovnbe
add
stos
or
jmp
add
aam
aaa
sub
sbb
jle
push
out
stos
adc
or
push
out
stos
adc
sti
fsubrl
sbb
sti
cmp
orb
jb
into
push
and
xor
add
rcrl
adc
xlat
add
stos
adc
inc
add
and
push
and
push
decl
dec
mov
hlt
push
test
incb
cld
adc
decl
adc
dec
mov
add
pop
test
clc
ljmp
dec
decl
adc
dec
mov
cld
and
push
scas
jp
adc
mov
pushl
add
push
incb
xor
cltd
ss
aam
xchg
data16
xor
test
inc
cld
inc
aas
add
pop
out
add
or
rcl
xchg
cltd
push
ss
pmovmskb
jge
add
aad
xchg
push
cmpl
dec
shlw
inc
cld
out
push
cld
loopne
add
stos
rcl
rcll
and
pop
shl
pop
pop
mov
aad
icebp
pop
inc
pusha
aad
sbb
jae
pop
add
data16
and
add
pop
shl
call
xor
add
push
pop
jns
pusha
xor
sbb
or
xor
jge
xor
mov
stc
js
xor
insl
sub
add
into
add
cmp
mov
pop
add
popa
lret
inc
xchg
pop
sub
sub
cmp
push
dec
pop
out
mov
or
test
adc
stos
enter
dec
add
add
ret
cltd
inc
push
jmp
add
ror
addb
pusha
add
mov
aaa
lds
adc
adc
int
jbe
xor
imul
mov
xchg
push
test
push
add
pop
mov
xchg
fldenv
data16
dec
push
roll
push
xchg
mov
mov
push
ret
roll
ljmp
adc
sti
add
ud0
loop
and
mov
ret
dec
mov
faddl
enter
add
mov
jge
pop
aaa
push
pop
movl
mov
xchg
add
test
add
call
loopne
and
add
cmp
push
out
pop
add
jns
pop
in
enter
sbb
add
outsb
pop
add
test
mov
jge
or
pop
mov
push
pop
push
mov
andps
dec
inc
push
jb
fsin
ss
inc
pop
add
pop
fs
adc
xchg
push
adc
and
dec
xchg
cwtl
adc
call
add
fisubrl
mov
pushf
push
cld
dec
mov
in
or
sbb
add
pop
pop
dec
push
pop
scas
add
add
fnstcw
pop
bound
mov
loope
or
icebp
jle
fsts
std
fstps
insl
dec
lock
ljmp
push
cmp
pop
rolb
fwait
mov
jmp
cmp
dec
inc
cmp
imull
cwtl
call
xchg
add
add
sbb
jge
stc
rorb
fildl
jnp
clc
pop
jns
cld
sarl
cld
sarb
jle
add
add
add
inc
xchg
pop
dec
jno
test
lret
jb
in
int3
scas
daa
in
mov
in
jns
pop
push
dec
cli
xchg
imul
cli
notb
pusha
add
dec
inc
cld
cmpsb
dec
xor
in
xor
jb
icebp
es
aas
hlt
cli
cmp
jge
frstor
or
popl
lea
imul
mov
push
jg
jbe
enter
inc
clc
call
sbb
shr
and
add
add
inc
jbe
mov
pop
aaa
mov
loope
lret
inc
out
mov
inc
and
clc
loopne
inc
out
test
loope
sub
jae
mov
mov
mov
pushl
stos
inc
adc
adc
mov
lret
data16
cmp
lds
and
divb
inc
inc
push
cs
inc
xor
xchg
jge
add
dec
stos
inc
adc
decb
pop
fldt
xchg
and
push
mov
push
pop
icebp
pop
std
sti
add
decl
cmp
pusha
movsl
movl
out
sub
call
es
pop
fsin
out
cmpsb
lret
and
call
rcl
cmpsb
popl
push
fldcw
inc
pusha
loopne
out
inc
or
add
call
mov
hlt
xchg
pop
cld
jg
stc
jmp
push
or
int
roll
sbb
xchg
and
xor
add
xchg
cmpsl
into
stos
lds
sbb
in
dec
roll
sub
mov
inc
sbb
adc
repnz
loop
cli
mov
flds
jp
cli
add
cmc
out
adc
gs
mov
push
pusha
dec
setb
fimull
ret
xor
mov
rolb
pop
pop
adc
sub
cmp
jl
jmp
sub
pop
mov
mov
add
jmp
call
xchg
sarl
jmp
and
add
mulb
mov
adc
cmp
jmp
call
insb
lahf
jg
push
loope
sub
mov
add
xchg
ss
mov
sarl
pop
fs
fidivl
rcll
inc
mov
push
ret
dec
push
imul
cmpsb
push
xchg
test
icebp
mov
add
ds
test
add
add
stc
mov
jl
mov
mov
addb
andl
mov
inc
out
add
jne
mov
jmp
mov
cmp
push
mov
xor
pop
push
adcl
roll
add
add
scas
div
adc
xlat
jmp
push
add
fdivrl
add
jmp
xchg
aad
cld
adc
push
pop
aad
push
xlat
stos
cmpl
pop
jns
adc
mov
sub
push
jle
xchg
push
or
adc
mov
add
jle
push
test
adc
popa
mov
pop
and
add
add
sub
adc
sub
and
cmpsb
jle
aam
jmp
out
and
pop
imul
call
pop
add
add
push
add
xor
mov
mov
fsubrl
cmp
mov
test
mov
std
xor
lret
add
add
adc
jl
test
jle
test
xchg
sub
ret
faddl
push
aam
mov
xlat
push
push
jmp
add
ss
push
outsb
stos
add
test
lea
into
mov
adc
dec
xor
call
insb
jns
sub
adc
adc
add
add
cli
hlt
fmuls
inc
jmp
fidivrs
inc
adc
add
ret
add
push
inc
jne
ror
call
push
mov
add
mov
add
mov
xchg
fiadds
testl
mov
lret
cmc
add
push
add
pop
dec
js
sti
jp
xchg
roll
add
add
push
mov
fisubs
ror
mov
mov
cmc
add
lea
dec
lea
add
cmp
xchg
push
push
in
add
call
gs
xor
movsb
mov
out
add
lea
add
dec
enter
leave
cmc
mov
xchg
cmc
je
pmuludq
inc
sbb
out
call
lea
push
jg
jmp
push
stos
jno
xor
mov
jne
and
pop
loope
jge
idiv
lret
das
sarl
push
jle
shll
das
lret
add
cmp
jmp
mov
loop
lock
testb
or
mov
out
push
add
icebp
std
call
sub
les
es
mov
xrelease
idivl
jmp
js
in
xor
mov
cmp
dec
xor
sub
pop
xorb
leave
mov
call
notl
aam
incl
aam
mov
pushf
pop
add
lea
call
sub
mov
jmp
fnsave
adc
and
add
inc
das
and
and
mov
jmp
negl
sub
adc
adc
gs
out
jb
lea
cmp
adc
and
repz
inc
bound
add
add
add
jno
cli
dec
aam
addl
mov
add
popl
add
stc
dec
mov
call
xchg
js
jmp
sub
popa
add
jnp
dec
cmp
cld
ret
mov
out
out
movsb
add
add
cmp
pop
mov
push
mov
mov
clc
sti
push
add
call
mov
icebp
je
cmp
add
sbb
test
rorb
ds
cli
jle
jecxz
mov
inc
sbb
add
shrb
push
mov
test
call
pop
adc
out
inc
les
adcl
scas
ret
out
dec
pushf
in
sti
mov
cli
push
adc
sahf
mov
mov
jp
jge
ret
gs
sti
les
mov
add
cli
jmp
rcll
adc
inc
mov
out
aam
jmp
mov
les
sbb
cmp
xchg
icebp
bnd
ret
repnz
inc
add
add
arpl
sbb
inc
adc
sub
pop
jb
and
bound
cmp
iret
add
add
mov
mov
mov
add
js
and
insl
mov
pop
outsl
lock
mov
pop
cwtl
cmpsb
gs
lar
cmp
sub
sub
jmp
add
lock
mov
scas
inc
test
sub
or
shll
cs
sub
pushf
or
enter
call
decl
xchg
imul
inc
ss
jmp
cmp
mov
push
xlat
aam
jg
or
bound
xchg
cmpsb
test
add
sub
sub
aaa
clc
push
outsb
out
or
cld
rclb
jmp
insb
lds
jmp
mov
mov
in
insl
gs
add
add
and
mov
lea
push
notl
cmp
aad
push
out
pop
adc
call
repnz
leave
mov
add
jle
loop
dec
add
je
scas
mov
ret
aam
push
ret
sub
addb
sub
or
pop
xchg
mov
btrl
ljmp
test
push
popw
cli
mov
jle
xor
add
stos
incb
or
mov
dec
push
mov
out
out
cli
pushf
pop
push
xchg
imul
rcrb
les
add
add
stos
shll
xlat
and
sahf
sbb
test
mov
adc
jne
jmp
pop
push
out
add
insb
ja
mov
sbb
cmp
outsl
or
jae
xorl
pushf
in
cli
lret
ret
cmp
push
xor
aas
add
sbb
pop
icebp
in
add
add
add
push
cmp
add
test
loope
cmp
sbb
and
pop
ss
mov
ss
mov
ret
dec
push
ds
or
pop
nop
cmpsb
aaa
push
loopne
xor
movsb
add
add
lods
mov
shll
fisttpll
add
pop
jns
push
sub
add
add
jmp
in
out
cli
xor
or
cld
jo
inc
jmp
fldt
or
or
xor
cmp
xor
adc
xchg
je
jmp
push
or
lcall
add
mov
in
pop
sub
add
popf
mov
sub
sub
pop
push
push
xchg
inc
mov
xlat
addl
call
ljmp
loop
cmpsl
jae
pop
push
and
in
iret
push
dec
lea
add
hlt
ljmp
jl
test
stc
sbb
mov
jp
jne
scas
jae
cmp
adcb
cld
mov
pop
add
push
mov
add
decl
jbe
jbe
dec
push
and
sub
imul
outsb
and
pop
fsts
outsb
add
mov
adc
mov
cltd
pop
fwait
incb
sub
push
xchg
push
push
adc
fwait
mov
jg
add
pop
lods
mov
cli
push
cltd
push
pop
aad
push
add
inc
cld
sbbl
cmpsb
push
mov
and
inc
cld
outsb
adc
call
or
xchg
dec
or
fidivrl
or
pop
adc
push
add
dec
ret
in
out
adc
adc
ss
in
rolb
int3
out
pop
jge
push
sbb
or
add
das
inc
repz
jnp
xchg
ss
rcrb
add
jnp
stos
mov
inc
stos
mov
ret
std
or
add
lock
bound
inc
dec
daa
pop
pop
push
outsb
test
push
xor
movsl
add
add
mov
sbbl
cld
inc
arpl
int
movsb
mov
mov
add
cld
cmp
sbb
mov
mov
out
lret
cltd
pop
fcoml
das
test
adc
xchg
push
push
fs
scas
dec
ret
and
xchg
xchg
mov
cld
ret
loop
int
movsl
mov
cmp
cld
cmp
cli
mov
mov
out
dec
lcall
cmp
push
xchg
cltd
mov
add
add
push
push
add
mov
popa
shlb
mov
pop
call
lds
imulb
add
rclb
mov
decl
adc
test
jmp
bound
loop
imul
in
in
xlat
aaa
push
sbb
je
gs
or
cld
fcompl
xor
test
jne
loop
dec
add
incl
or
jae
inc
jecxz
pop
shl
out
pop
stc
mov
mov
cmp
push
add
push
rorb
jecxz
or
or
adc
xor
test
cs
subb
xchg
adc
jg
lcall
aas
je
add
and
test
fimull
xlat
fimull
addr16
or
jle
shll
out
push
lahf
orl
fwait
incb
xlat
out
xchg
cld
dec
add
je
dec
mov
fisttpl
inc
mov
push
or
jle
add
add
add
loop
adc
call
inc
sbb
rcll
mov
mov
push
outsb
cmpsl
enter
sbb
test
mov
subb
pop
jns
stos
push
lods
jno
cltd
mov
ja,pn
sub
cmpsb
testb
mov
mov
out
std
lret
xchg
xor
add
push
mov
push
arpl
add
dec
in
dec
push
mov
mov
add
pop
icebp
out
add
add
stos
stc
cs
mov
call
push
call
add
add
adc
mov
adc
je
push
fildl
das
test
and
std
hlt
movb
sbb
out
mov
aas
mov
xor
fwait
bound
and
add
add
jmp
or
ss
lock
mov
cmp
add
add
add
push
ja
pop
add
ja
xor
inc
and
repz
push
pop
mov
ja
push
add
add
sub
xor
iret
jae
in
dec
inc
ds
mov
data16
gs
mov
add
jle
dec
mov
push
stos
push
pushl
jo
push
xorl
add
rolb
add
jp
pop
push
cld
loopne
add
cltd
test
mov
ficompl
adc
mov
or
pop
xchg
les
add
jb
push
mov
loopne
lcall
push
push
mov
in
mov
pusha
mov
loopne
aam
inc
sbb
inc
sahf
cmp
int
popf
jae
pop
cwtl
jle
and
add
add
mov
cli
out
sbb
decl
orl
jnp
pop
cwtl
jns
arpl
jg
sub
adc
lods
pop
sar
add
mov
shll
int
jmp
das
adc
cmp
popf
in
add
mov
add
sbbl
add
add
fucomip
shr
int
movsb
mull
sub
pushl
dec
pop
add
dec
add
pop
aam
addl
add
add
fsubp
cs
pushl
sub
subl
adc
subb
add
pop
and
jb
fdivrs
clc
lcall
mov
add
cld
test
push
jle
push
sbb
adc
sarb
jne
mov
xor
add
sub
jmp
push
stos
pop
add
ja
jg
cmpsl
dec
pop
nop
xchg
cs
sahf
mov
or
in
test
or
imul
outsb
or
and
inc
inc
sub
pop
cmp
add
cmp
jp
sti
jg
out
fisttpl
test
ljmp
inc
aaa
leave
ret
push
mov
cli
sub
cmpsl
mov
loop
xorb
mov
push
leave
insl
daa
inc
cld
ja
push
mov
sub
ja
push
lea
push
loop
jo
cmc
pop
jnp
outsb
add
add
fdivrs
jmp
rcll
je
mov
test
arpl
test
mov
mov
pop
ds
inc
pop
adc
cwtl
xor
mov
cli
loope
xchg
in
add
out
mov
mov
mov
outsl
mov
ret
push
jge
out
jbe
inc
xor
loopne
scas
push
sahf
fdivrp
out
mov
cli
lcall
mov
xchg
or
bound
xchg
movsb
fisttpl
cs
dec
cmp
jns
sti
jbe
pushl
sub
inc
in
jnp
add
or
jle
cli
mov
fstps
movsb
icebp
pushf
pop
jg
aaa
adc
scas
sub
std
call
jle
fstp
push
add
add
test
insl
push
sti
cmc
imul
cmp
aam
hlt
fwait
mov
dec
add
push
push
push
cli
fisttpl
push
jmp
jae
adc
cmpsl
jl
fs
sub
jno
add
imul
mov
call
sub
and
call
ds
call
xchg
cs
rcrl
idiv
call
mov
adc
xor
jnp
mov
mov
cli
jb
cmp
adc
jg
push
cmpb
mov
call
jne
pop
pop
mov
or
mov
xchg
test
in
mov
orl
xchg
push
add
icebp
pop
add
sti
jg
nop
daa
dec
adc
ss
sbb
fdivs
mov
pop
inc
dec
add
incb
cli
lds
push
cli
push
mov
test
fsubs
cmc
jg
movsl
mov
jns
jne
repz
call
jmp
cli
ljmp
sbb
jae
jnp
adc
or
jne
add
and
stos
cli
mov
test
insl
stos
add
loopne
xor
xlat
test
dec
push
into
in
push
add
incb
xchg
add
test
add
movlps
push
add
mov
push
push
cmpb
vmread
call
movq
lods
cli
pusha
insb
push
xchg
test
xchg
daa
dec
pushf
jne
add
add
add
add
lsl
and
cmp
pop
faddl
mov
and
jno
pop
xor
loop
fwait
addr16
pop
lods
inc
lea
push
jno
stos
jle
out
fwait
lock
lods
outsl
cmp
or
ret
add
mov
aad
inc
inc
cmp
push
inc
movsb
out
xor
xor
pop
cmp
fisubrs
add
inc
rcrl
test
and
cld
adc
pop
mov
add
rolb
in
test
addl
or
aaa
push
ret
pushf
sub
xor
gs
int
pop
movsl
fcom
aam
mov
pop
xlat
shll
mov
sub
insl
pop
add
fwait
inc
lds
dec
and
dec
mov
out
sbbl
cli
pusha
pop
cmp
or
add
shlb
adc
in
or
sbb
and
jle
cmpsl
xchg
imul
fwait
dec
mov
in
push
add
add
sbb
in
mov
xchg
dec
sbb
enter
xor
mov
push
mov
add
sub
xchg
add
cmpl
ret
lock
out
outsl
xchg
jg
mov
pop
mov
jbe
pop
xchg
pop
imul
adc
cmp
adc
out
sub
movsl
out
addr16
cli
mov
cmc
adc
call
jo,pt
clc
and
out
mov
jns
xchg
jle
out
pop
test
xchg
in
cli
pop
inc
xor
das
inc
add
pop
push
addb
movsl
dec
inc
hlt
or
jle
xchg
sbb
mov
outsb
testb
add
test
arpl
out
push
outsl
mov
add
pop
popf
cmp
xor
sub
add
cmc
js
rolb
add
dec
mov
cwtl
cmp
adc
sbb
pop
test
aad
jb
addb
aas
add
jo
mov
fwait
pop
pop
push
stc
mov
out
pop
mov
jp
mov
fwait
rcrl
add
jns
stos
test
add
idiv
ljmp
jnp
in
adc
cmp
and
mov
or
jecxz
adc
and
or
and
addl
adc
fldcw
xchg
fiaddl
xchg
jg
add
out
xchg
les
jmp
popa
push
fcoml
add
jmp
add
jae
and
mov
fcomps
call
and
sub
fmuls
add
pop
xchg
jno
arpl
add
dec
call
mov
add
add
jle
outsb
mov
sarb
inc
add
jp
mov
jbe
add
jge
jno
arpl
pcmpeqd
inc
or
add
dec
xchg
ljmp
or
jmp
test
add
push
inc
pushf
out
xor
in
int3
ja
lahf
fcoms
decb
lret
outsl
sub
call
inc
mov
add
test
inc
cli
sub
inc
clc
xchg
jo
jge
and
cli
pushf
fisubrs
jo
ljmp
loope
decb
stos
decb
mov
jg
inc
xchg
sbb
push
shll
repnz
push
leave
xchg
ficoms
xchg
out
lea
rep
repnz
add
sub
movsl
loope
add
cltd
pop
lea
stos
jo
ds
cmc
ret
clc
aam
ds
aas
icebp
js
std
pop
jnp
add
add
outsb
mov
std
mov
les
or
push
xor
push
cltd
adc
shlb
cmc
mov
mov
adc
icebp
popf
add
sub
pop
jb
mov
or
pop
gs
popf
inc
adc
mov
cmp
aaa
adc
mov
jne
xchg
cli
mov
jb
add
scas
sub
xchg
mov
sub
and
adc
cmp
mov
ds
pusha
inc
mov
inc
mov
add
add
and
pop
test
incl
call
cli
ljmp
mov
scas
add
jne
jp
or
divl
jnp
or
cmp
mov
leave
mov
push
jns
inc
jg
sbb
je
adc
mov
and
mov
add
stos
cld
ljmp
sbb
or
push
imul
xor
sti
int
push
lods
ret
jne
cmc
test
stc
push
push
pop
cld
ret
push
push
inc
mov
mov
adc
push
test
or
inc
clc
clc
imul
cli
and
icebp
aas
pop
adc
sbb
pop
gs
mov
sub
adc
jp
incl
pushf
pop
cmpsb
sbb
cld
out
push
in
push
pop
and
and
jo
in
and
les
movsb
call
je
xchg
imul
fcomp
out
push
add
add
fcmovne
pop
or
xchg
add
add
repz
insl
dec
sbb
insb
ret
sbb
add
mov
inc
loope
jg
cwtl
mov
add
mov
push
add
xchg
cmp
out
pop
sub
push
xchg
cmp
pop
jg
sbb
mov
or
add
sti
loope
add
test
arpl
in
nop
mov
mov
inc
and
xchg
sbb
sbb
push
or
mov
add
repnz
test
les
pushf
loopne
jbe
dec
push
fstl
rcrl
and
adc
int3
inc
ret
or
cltd
cli
out
fwait
aaa
add
sbb
call
insl
push
adc
call
das
out
jae
mov
xchg
cli
jb
std
jle
inc
adc
jl
mov
pop
add
aas
add
add
stos
push
cmp
loopne
push
push
push
call
inc
mov
sub
data16
stc
jp
jne
into
dec
push
xlat
out
hlt
popa
cmc
jmp
mov
and
bound
call
mov
incl
add
dec
jmp
or
mov
add
jmp
add
add
add
or
std
test
sub
loope
pop
and
adc
xor
sub
cmp
and
and
stos
xor
out
add
push
cmpsb
dec
sbb
rolb
es
add
and
test
loop
out
clc
outsl
and
out
pop
mov
push
scas
inc
and
es
add
push
fnstsw
pop
sub
jle
add
add
movsl
cltd
jae
movsb
xor
add
aas
pop
add
les
inc
int
xchg
mov
mov
repnz
in
rcll
mov
lcall
sti
stc
out
adc
add
mov
xor
pop
pop
jge
or
or
jne
loopne
insb
ret
and
insl
or
nop
mov
or
loope
jl
cmc
sahf
and
inc
pop
jge
lods
lret
jl
xor
aam
ss
aas
add
aaa
xor
cmp
ret
clc
sub
cmp
iret
sbb
adc
push
out
dec
sbb
push
add
add
call
sahf
cwtl
ss
push
cs
add
cli
hlt
pop
add
lahf
mov
je
add
push
xchg
ljmp
and
dec
xor
mov
lea
jb
xor
sti
add
cmp
leave
je
sub
ljmp
jae
jno
xchg
incb
cld
je
jns
push
add
jp
or
or
mull
or
dec
mov
ret
jae
cmp
fyl2xp1
dec
push
cmp
test
testb
push
jp
cmp
outsb
pop
and
roll
andl
outsb
or
insl
outsb
push
cltd
pop
ret
add
into
jno
push
xor
rolb
add
pop
lret
aas
mov
mov
jae
inc
add
scas
arpl
pop
repz
stos
push
cwtl
cli
lahf
fstl
mov
jno
mov
adc
inc
sti
xchg
movsl
xchg
decl
mov
cmp
mov
lcall
push
sub
jno
mov
cwtl
sub
std
cwtl
xchg
adc
xchg
cmp
std
cltd
mov
pusha
test
ret
cmpsb
nop
sbb
mov
std
pop
inc
daa
jge
repnz
call
add
jo
add
jnp
lock
add
or
stos
movb
stos
sbb
jmp
or
push
jmp
mov
jns
cmp
push
cli
sub
out
test
xchg
ret
inc
rcrl
push
repnz
add
ret
xchg
inc
pop
shll
add
add
adcl
adcl
dec
dec
int
outsl
aad
test
push
int
test
adc
mov
jb
dec
dec
mov
push
mov
test
xor
pop
aaa
inc
test
mov
add
int3
mov
mov
jmp
mov
jo
mov
enter
cmp
cmc
mov
hlt
ds
jnp
cmp
cmc
out
inc
mov
mov
add
dec
jae
scas
fiadds
lea
insb
loop
insl
imul
push
addl
test
push
idiv
pop
or
je
cmp
add
imul
push
shl
adc
adc
mov
iret
jp
cli
shl
adc
insl
dec
adc
mov
mov
ljmp
xor
ljmp
imul
rcr
bnd
cmp
adc
push
add
pop
incb
sti
mov
add
push
jle
repz
incb
mov
mov
sti
inc
sbb
or
popf
cmpsb
decl
insb
xchg
sub
xor
mov
rorb
repz
jmp
dec
sub
aas
std
call
mov
nop
ds
mov
adc
stos
add
mov
out
and
insl
rorl
clc
inc
pop
das
mov
stc
add
cmp
jmp
xchg
test
add
das
cmp
mov
ss
stos
in
rcll
mov
jle
mov
xchg
mov
mov
add
adc
mov
or
inc
pop
jnp
clc
in
mov
mov
stc
cmp
add
test
dec
sti
gs
and
clc
sub
pushf
lock
into
or
and
scas
adc
stos
cmpsl
cmp
sub
pop
fsubp
adc
xor
push
lea
or
mov
pusha
or
ss
mov
or
cli
push
sub
push
sbb
cli
aam
stc
aas
jmp
xlat
adc
loop
scas
or
call
and
cli
cld
loopne
adc
jmp
jmp
xchg
push
mov
xchg
pushf
push
insb
sar
sbbl
js
test
std
ljmp
cmpsb
inc
push
mov
inc
lods
push
movsb
add
dec
inc
aad
dec
movsb
outsb
cmc
test
stc
imul
jnp
jno
jle
ds
incl
sbb
xor
inc
cmpsl
jne
push
mov
add
out
and
aad
push
mov
mov
outsb
icebp
cmp
xchg
fildl
mov
cli
in
sar
std
push
sub
jmp
jns
rcll
inc
xorl
aas
or
lods
cld
or
in
out
sbb
cli
lods
xchg
add
sbb
aas
sbb
mov
mov
iret
nop
inc
sahf
cmpsl
cmpsl
and
xchg
dec
dec
xlat
cwtl
cmpsl
sbb
enter
jmp
inc
or
mov
out
mov
fwait
add
mov
mov
out
inc
mov
pop
jae
rcr
lods
mov
fiaddl
mov
mov
fiaddl
loopne
fiaddl
icebp
mov
cmpsl
add
inc
cmpsb
add
inc
cmpsb
add
cmpsb
add
cmpsb
add
cmpsb
add
ret
pusha
inc
cmpsb
add
cltd
cmc
add
add
xor
pop
ret
fwait
jle
xor
in
stos
mov
xchg
cmp
cmp
xchg
cmp
into
leave
xchg
xchg
xchg
imul
add
add
iret
pop
dec
pop
sbb
orb
xchg
xchg
fwait
ret
add
mov
jle
ret
decl
adc
add
jle
aam
pop
divb
add
mov
lahf
mov
out
adc
add
test
fcomi
add
adc
test
push
gs
test
push
sti
fiaddl
sti
aam
repnz
jmp
cmp
dec
and
add
add
jg
xor
aam
stos
mov
mov
roll
jl
sbb
jne
cmpsl
shl
push
sbb
add
test
add
incb
lods
dec
repnz
add
adc
push
add
mov
ds
ret
inc
cmovo
mov
jmp
pop
add
std
mov
cmc
xor
add
push
adc
mov
jmp
stc
sub
gs
je
cli
popa
add
dec
repnz
std
notb
mov
lcall
sar
popa
add
insb
rcll
fadds
sti
or
aas
pop
push
add
imul
testl
sub
cli
xchg
sub
out
dec
xor
cli
cwtl
les
mov
add
arpl
xchg
mov
xchg
mov
das
pop
push
movsl
incb
or
cld
es
popa
xor
cmpps
sti
mov
mov
mov
mov
mov
add
xor
xor
enterw
mov
sub
xchg
shll
add
add
subb
or
adc
lods
or
repz
add
cmc
out
cltd
mov
mov
adc
mov
negb
xchg
lcall
sbb
test
adc
test
fnstsw
mov
data16
cmp
dec
add
idiv
or
jge
sbb
or
push
or
push
sarb
es
hlt
sub
xor
jb
sar
std
mov
push
outsb
mov
add
in
lahf
shll
les
int
or
pop
lahf
push
or
bound
repnz
enter
adc
push
rcll
or
or
pop
aad
test
in
out
sarw
add
icebp
push
xor
or
popl
sbb
enter
adcl
test
mov
mov
inc
out
xor
cmp
ss
scas
add
test
sbb
or
out
inc
mov
push
je
outsb
add
cmp
adc
jmp
stc
repnz
add
mov
push
sbb
inc
xchg
mov
mov
pop
sar
lahf
cmc
mov
pusha
mov
in
add
cmp
pop
in
push
pop
insb
leave
or
xor
cli
mov
aas
popw
out
sbb
xchg
pop
mov
add
lea
xchg
mov
pop
hlt
rcrl
add
pushf
movsb
out
push
dec
sbb
xlat
out
mov
xor
pushf
pop
xchg
std
push
mov
aas
xchg
sub
ss
fwait
out
test
mul
dec
cmp
outsb
sbb
stos
sti
inc
jo
mov
icebp
adc
mov
sbb
fisttpll
nopl
in
rcll
movsl
xor
imul
fs
or
cltd
push
mov
xchg
ret
clc
clc
andb
jmp
inc
mov
pusha
ljmp
lcall
add
jne
adc
mov
lahf
cmp
notl
push
mov
jmp
pushf
sbb
jno
mov
jno
orl
add
lea
adc
out
pop
mov
inc
add
fxch
push
aaa
and
testl
adc
cmp
cmp
mov
inc
sub
xchg
nop
js
add
cmp
std
call
popf
js
and
movswl
ja
xchg
popf
js
stos
xchg
inc
das
shrb
lock
add
jecxz
decl
mov
insl
add
push
movsl
insb
mov
std
add
addb
add
dec
xchg
add
jg
jbe
add
sub
and
xchg
sbb
lcall
ljmp
cli
mov
add
mov
cmc
mov
repnz
inc
jle
push
pop
add
and
jbe
add
inc
mov
pop
mov
pop
movsl
or
cli
dec
lcall
cmp
ret
or
lock
sbb
sbb
push
decl
mov
call
mov
es
mov
cli
rcrb
jae
imul
add
orl
mov
pop
imul
inc
int3
jmp
jle
cmp
addl
jno
pop
add
fwait
jne
sbb
cmpsl
fiaddl
cmpsl
xchg
sbb
call
jnp
rcr
call
xchg
mov
mov
mov
ret
pop
fldenv
add
or
lock
js
fstpl
xchg
inc
sbb
pop
xchg
mov
add
add
jp
sbb
add
add
jp
rolb
jno
pop
pop
dec
es
adc
xor
test
ja
pop
mov
cld
cltd
ja
fstpl
sti
aaa
mov
add
add
cli
fisttps
dec
dec
sub
xchg
jl
cmp
xchg
jle
arpl
xchg
aad
sahf
cltd
leave
out
mov
fs
adc
jle
pusha
add
cld
outsb
cltd
adcb
add
adc
mov
dec
xchg
idiv
add
outsl
jl
inc
xor
movsl
pop
leave
ret
push
mov
add
insb
insl
add
xor
stos
mov
incl
rclb
adcl
repnz
mov
push
lock
data16
out
sbb
push
push
add
inc
lea
idiv
subl
cld
adcl
decl
jmp
add
add
sub
pop
ret
xor
xchg
in
aas
pop
out
clc
out
cmp
pop
imul
xchg
jle
cli
pusha
mov
stos
test
lret
add
sub
xorl
jecxz
sub
pop
hlt
xchg
iret
cli
cmpb
or
mov
std
out
pop
cmpsl
cli
push
adcl
add
add
ds
push
mov
and
cmpsl
push
inc
pop
jno
mov
cmp
add
sahf
jne
and
add
xchg
or
addl
inc
pop
add
hlt
xchg
xchg
call
xor
add
out
adcb
xchg
inc
icebp
jg
add
add
subb
or
ret
sbb
add
add
ja
add
dec
jge
jbe
jl
jbe
jmp
lock
sbb
imul
andb
int
outsb
pop
mov
jge
xchg
scas
ret
xchg
xchg
shrl
pop
xchg
jnp
pop
mov
jp
push
mov
cli
ds
inc
or
fwait
sub
inc
inc
es
adc
sti
jp
adc
add
stc
xchg
pop
add
xchg
jnp
inc
inc
dec
mov
lds
addr16
test
add
mov
sub
jns
std
add
jmp
std
sahf
pop
inc
xor
add
push
mov
xor
cli
cmp
and
in
cmp
cmc
dec
adc
popf
pop
hlt
add
pop
xchg
mov
mov
nop
dec
inc
cli
incb
sub
cmp
stos
add
pop
push
xchg
test
cmp
insb
hlt
in
std
not
push
cmp
mov
push
call
jne
dec
jmp
fs
inc
out
adc
repz
sub
cmp
cmp
mov
ja
pop
in
sahf
jg
fbstp
repz
repnz
dec
data16
repz
repnz
ds
cli
out
aam
repnz
push
pop
and
aam
std
ss
lea
mov
dec
pop
ds
movsb
loopne
dec
sub
add
out
outsl
jle
jle
push
mov
bound
lods
add
or
out
stc
mov
add
lods
mov
stc
or
call
cmp
inc
or
add
or
xchg
fs
lds
jb
popa
adcb
jmp
sar
add
add
mov
xchg
hlt
or
sbb
dec
add
cmp
mov
in
adc
jmp
jmp
add
roll
inc
or
add
incl
loop
mov
jmp
aam
mov
inc
sub
mov
test
adc
jb
fstpl
test
fdivr
push
rcrb
adc
mov
sar
adc
fs
sbb
and
push
xor
negl
add
in
or
shrl
jmp
xchg
cmc
imul
or
jmp
add
lods
cld
or
je
jmp
cmpsl
mulb
into
cmpsl
out
repz
add
test
out
add
aaa
inc
stos
add
mov
jmp
in
sarl
mov
enter
scas
add
bound
cmp
fidivl
outsb
add
js
mov
adc
cli
pop
idivl
test
jns
push
xchg
jnp
xchg
cmpsl
lods
adc
orl
fsubl
and
add
cli
popa
or
fidivl
incb
pop
pop
in
out
mov
add
mov
lcall
fdiv
rolb
lcall
call
mov
fldcw
cmpsl
jecxz
pop
inc
call
iret
mov
data16
jbe
dec
dec
fidivl
sub
rolb
push
pop
push
sub
or
mov
int
mov
jnp
push
pushf
or
lar
aad
icebp
add
lcall
jl
jge
jl
jnp
shr
cmc
fdivrs
shlb
div
mov
imul
cmp
lods
outsl
outsl
rcrb
cmc
pop
cwtl
lds
sbb
fldt
cmc
ljmp
cs
or
sarb
jl
xorl
pop
outsl
and
or
jmp
add
pop
inc
test
outsl
jae
sub
insl
inc
fsubrs
jnp
imul
cs
xchg
jo
xchg
rcll
das
sbb
call
jle
cmpsb
lcall
loopne
mov
mov
add
sub
push
add
mov
cli
fcompl
pop
pop
sbb
adc
xchg
xchg
jo
adc
or
stos
and
mov
int3
xchg
add
xor
jmp
sub
clc
sbb
cmp
jmp
inc
fidivl
stc
call
inc
or
call
jge
cmc
pop
or
sub
inc
leave
addl
std
out
mov
cs
mov
shr
add
add
pop
and
jnp
push
call
sti
inc
notb
mov
add
test
inc
repnz
pop
arpl
jp
in
mov
jae
pop
adc
jl
fwait
jle
ja
inc
cmp
mov
es
aam
xorb
rorl
cli
addr16
ret
testb
add
mov
loopne
cmpb
loopne
sti
cld
inc
sub
adc
jl
addr16
cmp
popf
repz
addb
adc
push
xor
pop
fiadds
sbb
sarl
push
mov
ja
sbb
jns
rclb
das
pushf
add
sub
adc
mov
dec
aas
clc
add
js
test
add
add
jmp
fwait
add
call
out
push
ret
pushf
mul
xor
cmp
out
xor
test
add
push
jg
test
sti
push
scas
les
cld
js
xchg
out
test
icebp
adc
add
js
push
ret
cltd
inc
call
add
mov
or
iret
adc
test
pop
xchg
xchg
in
test
jge
sub
jge
pop
shll
subl
outsl
ds
add
outsl
cli
mov
push
pop
jle
dec
push
movaps
pop
bound
ss
bnd
lods
bnd
fucomp
and
ret
add
and
adc
addr16
and
pop
call
orw
je
insb
jp
cmp
or
repz
jle
jl
cmp
adc
repz
addl
outsb
sbb
or
jmp
fmull
sti
ljmp
fsubr
jmp
std
notb
add
adc
add
jge
pop
insb
std
decl
mov
adcl
hlt
or
test
incl
push
je
sbb
bound
ret
sub
pop
jmp
nop
test
mov
inc
rep
jno
cmp
lcall
mov
xchg
call
xor
xchg
pop
push
pop
inc
test
xor
roll
inc
mov
jg
dec
jae
sahf
mov
and
inc
add
fdiv
and
pop
test
cmp
or
or
xor
mov
pop
add
or
jne
inc
loope
or
sbb
and
add
add
cltd
adc
inc
mov
imul
jmp
dec
lahf
add
sub
loope
sbb
and
shr
xor
lret
adc
add
ds
jmp
adc
shrb
mov
aam
aas
cmp
shrb
pop
jmp
cmp
mov
aam
hlt
aas
jmp
in
sti
lock
add
cmpb
adc
inc
add
fs
cs
pop
xor
adc
sti
xlat
popl
ljmp
inc
xchg
fdivl
inc
iret
out
mov
cli
pop
enter
xchg
ret
jecxz
ret
sbb
scas
and
pop
and
sti
test
out
adc
sub
add
pop
cli
add
out
and
out
mov
jbe
sub
test
leave
bnd
inc
inc
addl
inc
cs
inc
ds
loop
psllq
mov
stc
add
push
sub
push
pop
out
lcall
std
xor
leave
sbb
stc
lock
xchg
and
addr16
incl
flds
push
call
ljmp
and
pop
es
xchg
out
dec
dec
lock
jmp
pop
incb
jnp
jg
jae
fcoml
rol
pusha
mov
data16
cs
ret
pop
pop
fsubl
aas
shrb
mov
ja
insl
cli
mov
out
push
out
lds
add
lock
push
inc
sub
pop
decb
sub
pop
nop
shrb
icebp
pop
add
pop
adc
xor
xorl
leave
or
imul
shrl
je
mov
js
add
pop
andb
lcall
dec
out
mov
pop
push
jno
jno
inc
xchg
sub
sub
in
mov
jb
jo
inc
pop
sub
push
in
das
scas
jnp
adc
push
lret
mov
mov
add
sub
testl
adc
mov
add
pop
push
or
addr16
pop
icebp
mov
mov
adc
ds
inc
push
nop
fcoml
xor
addr16
push
idiv
fwait
pop
faddl
inc
fstpt
pop
push
arpl
pop
cli
testb
cli
out
mov
out
js
or
fildl
aas
ds
imul
daa
jg
inc
jp
xchg
shlb
mov
mov
jae
adc
lea
notb
std
ret
jg
push
mov
add
inc
out
or
stc
pop
or
cmp
mov
orl
in
jo
movsl
outsb
data16
cmp
lcall
dec
mov
cli
cmp
je
or
js
test
ljmp
jno
jo
add
in
jle
push
int
mov
inc
paddq
testl
imul
push
aas
je
add
cli
into
out
xchg
sbb
mov
pop
jnp
ret
push
pop
lcall
cli
xchg
das
sti
test
push
ja
xchg
inc
xchg
push
aam
nop
or
fwait
sub
push
xchg
and
inc
test
push
aas
add
push
insl
inc
f2xm1
fcmovnu
add
inc
fcompl
jno
insl
xchg
inc
mov
jns
add
cmp
shl
cwtl
mov
subl
inc
adc
jmp
mov
aad
rolb
jns
add
aam
xchg
ftst
add
mov
sbb
push
pop
sub
jecxz
push
pusha
or
jnp
jmp
and
xchg
jg
out
sbbb
shl
sbb
pop
xor
add
idivl
pop
add
pop
add
ds
ja
loopne
leave
add
jmp
insb
aam
add
dec
pop
out
inc
inc
mov
mov
inc
cltd
jmp
sarl
mov
push
add
gs
int3
lcall
inc
mov
add
push
or
roll
add
mov
add
call
jb
add
add
inc
pop
add
cmp
fisubs
scas
add
fiadds
pop
mov
add
and
inc
idiv
mov
stc
jle
cmp
pop
inc
cli
mov
lods
jmp
call
testl
test
ret
cs
add
sarl
add
add
jae
adc
sldt
add
add
fcomip
out
add
out
aaa
add
pop
loopne
xchg
rol
jmp
adcb
loop
out
and
loopne
pop
lahf
ja
mov
je,pn
rcll
or
incb
and
cli
sub
adcl
movsl
adc
xchg
mov
pop
xchg
and
mov
test
scas
jg
pop
imul
lret
clc
sub
xchg
add
add
mov
add
add
mov
add
add
jge
imul
xchg
push
adc
add
ja
cli
pop
aam
popf
les
mov
pop
mov
shr
popf
idiv
adc
add
testl
sub
lds
nop
test
dec
sbb
add
sti
cmp
jnp
pop
ljmp
push
or
add
jmp
mov
pop
outsb
repz
dec
push
jmp
pop
pop
cli
pusha
mov
test
adc
xchg
adc
ljmp
inc
int3
cli
cmp
mov
dec
push
sub
push
js
pop
xchg
cmp
repz
dec
lea
shlb
and
fstl
inc
dec
jecxz
sub
add
and
stos
jg
ds
jmp
das
mov
add
jmp
ljmp
fadd
je
fidivrs
decl
mov
jmp
add
addl
inc
push
rcll
in
cmc
mov
mov
add
lods
in
sbb
js
sbb
pusha
arpl
ljmp
pop
mov
jg
sub
cmpl
lock
repnz
mov
repnz
push
add
add
mov
dec
sub
dec
das
xchg
adc
shr
stos
push
xchg
jge
xchg
shr
stos
adc
imul
jmp
mov
cmp
dec
imul
add
or
in
out
sahf
sti
sbb
jnp
jg
hlt
aaa
jns
pop
imul
fcmovu
popa
outsl
aaa
addl
jne
add
add
xor
rolb
orb
cmp
cmp
fwait
push
es
mov
stos
clc
cld
int
test
int
mov
lcall
out
js
xor
nop
int3
imul
lock
pop
sbb
pop
lock
hlt
cltd
mov
pop
mov
mov
lock
mov
insl
mov
add
sbb
cmp
pop
mov
out
mov
daa
bound
out
leave
pop
cli
push
inc
push
cli
push
into
mov
cli
inc
arpl
rep
adc
adc
pop
ret
pop
aaa
xchg
xor
mov
adc
aam
push
push
jp
adc
push
fadd
out
dec
cli
dec
out
out
push
sub
pop
je
add
into
or
mov
push
ds
fnstenv
pop
cmp
mov
sbb
mov
adc
jae
push
push
push
add
and
stc
pop
adc
decb
cmc
pushw
sbb
ficoms
pusha
ret
mov
cmpb
jne
cmc
adc
mul
stc
xor
or
pop
sar
add
push
out
inc
out
dec
push
jmp
cmp
add
jb
inc
out
not
jne
xchg
cmp
push
jmp
out
jmp
and
jo
imul
pop
jmp
imul
adc
pop
sub
mov
pushf
fadds
fsubr
or
jb
add
mov
inc
imul
add
and
jae
stos
cli
add
jmp
ds
xchg
pop
adc
pop
mov
fldenv
dec
dec
shlb
pavgb
and
adc
adc
das
sar
xchg
add
dec
add
aas
pop
inc
out
test
xor
xor
adc
xchg
push
outsl
push
repz
add
add
push
call
jae
shr
mov
out
cmc
ret
dec
mov
mov
scas
insl
outsl
mov
xor
mov
ds
lods
loopne
xor
movsl
add
push
add
add
xor
stc
xchg
push
call
xchg
add
mov
adc
mov
or
push
pop
add
or
mov
push
adc
adcl
inc
push
xchg
cli
jle
not
pop
add
push
xor
adc
adc
jno
mov
pop
jb
pop
inc
aas
mov
out
or
jnp
stc
mov
or
pop
je
jl
stc
push
jbe
inc
push
loopne
lea
add
push
je
insb
push
ljmp
shl
loope
xchg
shl
jmp
mov
push
jno
push
adc
std
divb
loop
or
sub
decl
jle
or
inc
push
mov
push
sub
aaa
inc
push
dec
inc
jnp
add
decl
add
sti
jmp
add
ret
cmp
dec
push
das
sar
xor
cmp
mov
loop
adc
xchg
mov
push
sub
mov
sub
pop
or
decl
pop
xchg
in
or
call
call
pop
xchg
mov
jo
jge
adc
test
mov
and
lods
xor
inc
ret
xchg
and
pushf
and
pushf
in
mov
imul
cli
xchg
outsl
and
pop
push
gs
or
and
push
testl
imul
incl
lret
push
push
sub
push
sti
pop
adc
call
mov
push
call
insb
imul
add
add
and
call
add
add
stos
andb
icebp
pop
fcomps
adc
push
pop
hlt
jmp
cmp
pop
jge
daa
popl
jmp
pusha
or
add
add
push
jl
inc
jge
daa
dec
pop
cmp
or
call
add
ds
test
adc
add
jp
fstps
push
gs
and
int3
push
xchg
or
cli
hlt
fs
jae
cmp
les
data16
cmp
dec
insb
cli
dec
mov
lcall
and
adc
and
jge
int
stos
out
mov
add
dec
push
fbld
and
push
cli
and
jl
and
mov
and
pop
je
inc
das
push
sbb
scas
jae
xor
push
loope
and
inc
push
sbb
lods
outsb
and
js
pushl
sbb
mov
ljmp
jl
and
fninit
in
lods
jns
push
push
cli
je
ljmp
adc
pop
adc
or
and
xchg
loop
shrl
sbb
ret
call
pop
in
and
fsub
pop
pop
rol
addr16
movsb
and
sahf
mov
inc
inc
pop
mov
sarb
cli
mov
xor
into
stos
xor
dec
pop
pop
inc
mov
lock
xor
int3
cmpl
add
add
ret
jmp
pop
pxor
ss
jmp
popa
das
xor
cli
cmp
inc
jae
xor
repz
push
adc
sub
fistps
sbb
add
call
pop
lock
pop
in
addl
inc
cwtl
add
add
push
pop
push
adc
data16
sbb
adc
dec
mov
lods
xchg
add
and
pop
adc
and
lock
movb
call
rcrb
jns
clc
push
and
mov
mov
push
movb
out
or
call
mov
dec
loop
push
pop
decl
jae
mov
pop
das
sub
std
mov
push
addb
xlat
add
add
int3
clc
mov
data16
stc
mov
mov
dec
sbb
jae
fwait
inc
add
dec
jp
inc
ror
and
jb
pop
stos
mov
mov
mov
inc
in
xchg
das
xchg
sub
and
push
add
or
add
add
cmp
xor
xor
out
mov
cli
ljmp
push
clc
in
ret
jne
mov
push
lods
stos
sub
jnp
outsb
es
lcall
jmp
jg
mov
incl
add
cmpsb
idiv
ljmp
sbb
testl
hlt
sub
stos
cmc
test
jae
inc
outsb
pop
cmc
or
ss
cmp
inc
cs
cmp
jmp
test
mov
pop
push
pop
mov
popa
rclb
xlat
je
xchg
mov
inc
push
pop
fiadds
cli
xchg
xchg
push
je
fisubrl
pop
decb
daa
push
clc
sub
lret
or
pop
pop
lods
mov
js
pop
cli
add
pop
add
fcoms
xchg
mov
pusha
xor
jge
pop
faddl
test
jmp
pop
pop
sti
insb
dec
xor
subb
call
or
cmp
push
or
dec
xchg
or
inc
adc
jg
pop
xchg
mov
mov
iret
push
ja
adc
jmp
add
jo
icebp
add
pop
fisttps
adc
call
add
stc
xor
ret
add
or
jmp
icebp
popa
inc
aas
add
add
jmp
std
inc
popa
adc
mov
orl
andl
jle
mov
rcrl
jecxz
ljmp
popa
rolb
cli
sti
mov
stos
inc
sarl
dec
or
fcmovu
lcall
bound
pop
xor
pop
icebp
in
cmpsb
subps
nop
mov
mov
push
sub
lods
pop
ret
cli
aam
idivl
jmp
adc
mov
pop
popa
pop
pop
cmp
add
jb
add
and
push
add
dec
call
sub
add
inc
add
push
xchg
loop
imul
pop
cmp
inc
cli
push
cmp
adc
sti
divb
outsb
and
fldt
rclb
mov
fistpl
push
fstps
adc
std
push
ret
call
test
cmp
insl
sahf
hlt
cmp
sti
or
scas
outsb
and
pop
data16
push
push
xchg
dec
jae
jo
cli
push
sarb
dec
mov
popa
mov
cli
add
pop
fmull
pop
roll
add
mov
xor
xchg
popa
call
out
cli
bound
ljmp
aad
jns
add
rcrb
inc
push
faddl
dec
xor
or
or
dec
cli
mov
push
pushf
test
mov
repz
xchg
adc
movb
lds
sti
dec
in
sar
or
pusha
leave
sbb
sub
clc
jl
fsubr
pop
iret
ljmp
outsb
sbb
adc
mov
iret
decl
push
mov
cwtl
incb
push
and
dec
addb
fsub
push
imul
fadds
mov
pop
inc
push
int
movsl
push
dec
and
jns
lock
movsb
xor
add
lods
lods
rcr
inc
xor
iret
jmp
in
pop
scas
jg
adc
adc
fs
int3
and
jl
cli
mov
push
je
in
pop
cmpl
dec
je
inc
js
cli
dec
mov
hlt
call
add
into
adc
out
cli
xchg
add
icebp
scas
inc
je
popf
inc
je
inc
out
lret
aam
inc
xchg
jge
pop
xchg
inc
dec
subl
sub
dec
cmp
dec
imul
push
xor
sbb
mov
es
decb
push
divl
divb
test
cld
shll
add
add
jne
xchg
push
jnp
mov
sbb
sub
adc
repz
add
sub
mov
or
sti
pushl
lds
mov
push
pop
cmp
cli
test
sub
mov
push
inc
mov
sub
jmp
out
inc
scas
clc
sub
jns
pop
add
cwtl
cwtl
mov
pushf
mov
or
mov
add
add
idivl
incl
pushf
pop
hlt
aam
adc
sarl
jno
iret
icebp
sti
inc
sbb
inc
xchg
lock
cltd
add
pop
aas
insl
and
sti
xchg
inc
pop
daa
adc
jl
mov
mov
sti
or
dec
cli
fwait
sbb
inc
pushf
sub
dec
add
inc
mov
icebp
call
cld
lret
xchg
jae
out
add
mov
scas
outsl
push
lahf
mov
test
jg
lock
cld
lahf
mov
pop
scas
and
inc
in
lahf
mov
pop
inc
mov
std
call
push
lock
mov
mov
lret
lock
pop
stc
and
test
sbb
fcompl
and
or
push
inc
stos
sarl
sub
sbb
push
add
inc
sbb
out
push
or
dec
ja
hlt
ret
push
popl
cld
fst
inc
test
pusha
adc
push
add
xchg
sub
outsb
ss
in
scas
pop
or
lret
sahf
xor
sti
popf
push
inc
in
fisttpll
mov
jl
jne
inc
loop
repnz
pusha
daa
add
stos
adc
pop
sub
outsl
mov
mov
xchg
add
inc
inc
mov
sub
push
mov
orb
cltd
inc
cli
jmp
dec
lock
xchg
cmp
push
adc
xchg
pop
sub
xor
sar
adcb
mov
cmp
dec
call
push
call
repz
and
adc
jecxz
sub
addb
mov
add
incb
cmc
xor
sub
add
and
push
jae
int
or
iret
adc
inc
cli
std
sub
xor
add
xchg
pop
addb
jae
adc
pop
sarb
dec
je
lahf
dec
push
mov
sub
cs
sub
add
add
sbb
sub
ljmp
ds
js
pop
and
add
fisttpl
das
dec
es
rcll
pop
sub
in
aas
pop
int3
es
pop
lds
lods
aaa
ljmp
sub
aaa
fnstsw
int
pop
ja
jmp
mov
or
add
mov
or
jmp
add
in
xor
sbb
mov
xchg
call
push
jmp
xor
fdiv
push
add
fisubrs
mov
test
leave
push
cmp
adc
sub
push
cli
xchg
sarb
hlt
mov
xor
in
cwtl
cmc
lock
push
mov
mov
push
pop
jge
add
ret
sub
add
pop
inc
movb
ljmp
into
cmp
insb
push
mov
daa
xlat
loope
call
xor
gs
sarl
jmp
pop
pop
repz
cmp
lahf
pop
repz
fstps
shll
ds
push
cmp
pop
inc
mov
mov
xchg
pop
push
inc
jmp
add
xlat
mov
int3
mov
int3
gs
int
test
dec
or
enter
loop
inc
enter
dec
adc
lea
jae
jge
enter
dec
add
jae
mov
sub
adc
push
mov
jg
ljmp
xor
add
pop
imull
sarl
add
in
xchg
testl
and
dec
mov
sbb
adc
inc
cli
cmp
dec
call
pop
pop
andb
jne
bound
les
mov
cli
insl
push
je
jno
push
movsl
add
dec
rclb
push
sub
add
daa
scas
dec
cmp
stc
jl
inc
inc
fbstp
lcall
cli
js
mov
out
mov
cli
in
in
je
icebp
pop
sbb
sbb
inc
scas
scas
inc
mov
add
je
arpl
add
xchg
mov
lds
int
jmp
pop
test
cmp
inc
mov
add
jno
je
jo
mov
dec
lea
int
gs
adc
stos
iret
inc
inc
jle
mov
inc
ja
popf
cmpsl
and
into
xor
leave
inc
fwait
les
cli
add
sub
mov
xor
rcrb
in
sti
fists
ret
cwtl
mov
jp
rcrl
les
pop
nop
cmp
inc
ljmp
push
pop
push
dec
je
push
dec
dec
jb
and
lcall
in
jg
outsl
cltd
fiadds
mov
and
dec
scas
mov
push
pop
lahf
dec
insb
out
push
add
cli
out
into
mov
out
and
fs
icebp
mov
add
push
rorl
push
add
jmp
push
gs
adc
mov
cmp
mov
shll
cltd
rclb
les
adc
lea
pop
sbbl
mov
std
jle
xchg
mov
rolb
fiaddl
add
inc
push
test
dec
lea
cmc
ljmp
jne
add
icebp
cmp
pop
rolb
jo
jne
pusha
pop
pop
sub
push
add
add
fstps
jle
dec
push
pop
dec
add
mov
jae
mull
call
repnz
add
pop
cld
aad
lcall
xchg
xchg
pop
push
imulb
mov
out
inc
inc
cli
xchg
iret
inc
or
cwtl
fmuls
inc
sbb
dec
clc
dec
test
pop
jns
pop
sub
gs
cmpsb
ret
add
nop
add
or
dec
xchg
jle
push
scas
pop
outsb
cli
mov
xor
adc
ja
pop
movsb
mov
mov
jns
icebp
or
jle
pop
pop
jp
pop
add
add
mov
jle
pop
mov
std
add
jg
add
add
pop
icebp
jg
add
add
sub
add
xorl
dec
aam
cmp
cwtl
or
in
jl
iret
daa
test
or
add
jbe
popa
adc
scas
sbb
xor
icebp
into
dec
mov
mov
in
fists
fiaddl
inc
pop
rcll
and
fimull
stc
jmp
adc
lea
cli
cmpsb
sub
and
xchg
cs
adc
add
sbb
jbe
jbe
int
mov
pop
jb
in
inc
push
and
xor
cmp
cmc
push
scas
sti
push
fstps
ss
sahf
sti
jmp
xor
scas
jae
cli
mov
mov
mov
or
out
std
call
test
cli
push
and
cli
cmp
incl
sti
shrb
dec
incb
sub
test
out
mov
mov
push
mov
in
std
orb
rorb
adc
jmp
mov
or
or
stos
add
dec
dec
adc
jnp
or
pop
push
ljmp
shl
test
cmp
lea
stc
sti
incl
mov
ret
outsb
and
ret
push
mov
aas
test
jg
das
dec
adc
jecxz
jae
das
out
aam
cli
mov
sti
repnz
mov
inc
push
das
push
cli
shll
sbb
sti
push
nop
xlat
sub
inc
repz
xchg
adc
arpl
mov
imul
out
fwait
inc
cli
add
gs
mov
gs
xchg
pop
loop
mov
and
sahf
iret
and
fadd
and
add
add
add
add
add
add
add
cmp
xor
mov
pop
xor
cmp
cmp
test
adc
jae
hlt
adc
sbbb
imul
add
fstl
nop
loopne
pop
xchg
sahf
add
or
int
das
pop
es
aam
mov
sbb
cmp
scas
sub
add
lret
mov
out
aam
hlt
jae
or
lret
cmpsb
aaa
cli
inc
push
test
sbb
pop
xchg
std
popa
aam
mov
mov
xor
in
cmp
clc
mov
fldl
arpl
aam
xchg
es
mov
and
add
mov
adc
push
xor
sub
push
cmp
xor
aam
adc
popf
pop
mov
loopne
add
lock
test
add
mov
pop
cli
dec
add
or
cs
mov
test
mov
out
inc
push
add
adc
push
jmp
ljmp
push
inc
cli
ljmp
push
push
cmc
jne
jle
in
or
jecxz
notl
jmp
stc
out
imul
call
and
pop
incl
je
mov
movswl
cli
mov
call
mov
jg
push
cli
sbbb
xchg
dec
cmp
jg
push
cli
pusha
movsb
ret
add
enter
push
pushf
jle
jecxz
fwait
das
xor
mov
dec
mov
jecxz
fildl
xchg
test
add
xor
clc
push
cmp
sbb
xchg
in
aaa
ds
inc
ds
mov
loopne
and
bound
pop
add
cmpb
call
adc
mov
stos
out
pop
add
add
mov
adc
inc
add
pusha
or
scas
in
cmp
test
pop
add
sbb
or
jo
aaa
adc
cmp
sub
test
xor
sbb
mov
mov
rcrl
mov
or
das
pop
aad
lds
clc
mov
cmp
jp
sbb
jmp
nop
jp
jmp
daa
add
movsl
add
jmp
test
jge
lds
add
mov
mov
dec
add
ja
xchg
ret
roll
jo
cli
mov
mov
punpcklbw
aaa
jb
adc
ret
and
cmp
and
sbb
add
cmp
insl
or
sub
cli
push
sub
add
cs
and
call
loop
mov
cmc
push
push
sbb
jmp
jmp
ds
push
loop
call
adc
mov
adc
add
insb
push
sbb
ror
call
repnz
xor
sub
push
push
sub
outsb
and
sar
add
cmp
inc
cmpb
push
les
or
adc
outsb
and
jmp
loop
pop
outsl
cmp
dec
ret
dec
shr
ret
xor
rolb
add
add
repz
out
out
xor
daa
scas
ret
dec
cli
mov
mov
pop
mov
xor
ds
fsqrt
mov
add
test
test
add
addl
pop
sbb
jge
pop
cmp
adc
jl
cwtl
mov
pop
pop
adc
inc
notl
aam
mov
jmp
cmp
mov
or
test
pusha
cld
aad
add
push
add
add
xor
fsubrs
mov
call
fcomps
insl
pop
pop
inc
cld
add
mov
cmp
mov
cmp
sub
scas
sbb
das
inc
add
xor
sbb
data16
xor
jmp
add
adc
add
jbe
test
ss
aam
pop
pop
cmp
mov
sub
add
add
add
pusha
incb
adc
pushl
xchg
out
jmp
inc
and
jmp
adc
pop
sub
pop
insb
shll
push
pusha
mul
dec
or
cli
adc
jge
in
lds
cli
pusha
push
add
add
ljmp
call
inc
test
notb
lcall
sbb
adc
or
push
jo
cli
mov
mov
add
jae
jno
testb
add
adc
test
add
stc
cmp
pop
add
jne
test
bnd
mov
dec
bound
scas
add
add
add
lock
mov
addl
inc
ljmp
out
jns
outsl
or
pop
add
push
pop
push
inc
cmc
out
pop
icebp
cmc
mov
mov
ds
dec
push
icebp
jae
cmpsb
xor
jg
mov
sbb
mov
and
call
mov
ret
add
add
out
lcall
fsub
xor
out
std
or
fdivrs
mov
iret
out
in
xor
inc
adc
cwtl
daa
and
mov
pop
outsb
add
jno
or
out
mov
xchg
cmp
mov
inc
or
push
pop
sub
xchg
inc
xor
dec
cmp
frstor
add
sub
jmp
add
sub
add
cwtl
inc
mov
xor
scas
add
add
daa
rorl
xor
hlt
add
pop
out
fwait
test
add
addl
aas
movsb
fisttps
add
mov
cmpsb
push
lret
or
jmp
jmp
jae
xor
imul
fs
scas
shlb
xchg
ret
and
inc
pop
mov
adc
sti
adc
lds
cli
jle
loop
jbe
sub
or
or
fstl
jns
add
mov
add
lods
call
pushf
and
daa
sar
adcb
jg
push
adc
call
add
add
jg
cltd
inc
scas
pop
out
rcrl
inc
adc
and
call
repnz
or
push
sub
add
dec
push
cmpsb
mov
js
sar
inc
decb
adc
outsb
jb
push
incb
test
lret
sub
sbb
icebp
cmc
cmp
std
push
push
push
sub
push
adc
je
movsb
ljmp
jmp
decl
xor
call
fcomip
out
inc
outsb
lock
push
push
push
adc
push
lock
cld
pop
inc
sar
mov
sub
aam
andl
outsl
sar
mov
xor
pop
mov
mov
repz
sbb
add
das
jnp
sbb
sti
add
xchg
adc
aaa
mov
and
andb
sbb
mov
xchg
stos
and
sbb
movswl
sahf
cli
mov
dec
mov
jecxz
push
icebp
fstpt
push
add
add
jge
fldl
adc
cwtl
mov
lahf
add
add
cwtl
scas
loopne
iret
xor
inc
sbb
xor
and
inc
movsb
loop
xor
es
or
loop
lock
in
ja
out
ja
das
in
call
fmul
or
fs
cmp
and
fdivp
rorb
pop
daa
inc
inc
clc
add
adc
stc
xor
testl
insl
scas
minps
jmp
push
into
mov
daa
je
pop
push
je
push
and
cmc
mov
pop
cmp
sub
cmp
sbb
cli
pop
xchg
sub
cld
pextrw
jl
inc
jmp
sarl
sub
cli
dec
nop
bound
out
shl
add
lods
or
add
cli
xchg
add
je
out
pop
push
add
add
cmpsl
jae
sti
cmp
push
fstpt
push
push
xor
jae
or
shl
pop
in
aad
jne
push
cmc
and
sub
push
add
cmpsl
out
mov
dec
loop
jecxz
cmc
test
jae
nop
jl
lea
sub
cmp
and
and
cmc
adc
add
push
mov
add
out
add
jae
scas
std
jnp
or
aaa
je
cli
jae
mov
push
adc
sub
lahf
cwtl
ja
pop
nop
lahf
loop
mov
pop
inc
pop
mov
mov
add
addb
aam
push
fdivrp
cs
xor
idivl
jge
adc
or
and
or
mov
sti
sub
pop
mov
mov
xlat
xchg
stos
and
xchg
ficoml
mov
cli
shrb
xor
out
movsl
ret
adc
aad
and
roll
ret
aam
and
xor
roll
pop
add
bnd
in
jo
sbb
insl
ficompl
xchg
add
in
clc
mov
test
sarl
stc
mov
adc
shll
ret
movsb
in
jp
in
jle
in
shll
mov
lahf
sbb
sbb
jno
popa
mov
lea
push
push
dec
mov
pop
mov
sarl
cmc
mov
jb
mov
push
bound
or
add
cmpsl
fcoml
and
enter
cmpl
and
pushl
push
pop
loop
xor
push
sbb
sbb
jmp
aam
cmovo
pop
mov
add
inc
mov
subl
pop
jae
pop
pop
cmp
xchg
sbb
add
lds
aad
mov
push
mov
sbb
out
in
jae
pop
in
incl
xor
imul
inc
scas
dec
mov
in
enter
adc
xorl
xchg
je
cltd
push
adc
mov
push
repz
adc
dec
jmp
adc
add
push
sbb
inc
or
out
incl
div
jne
jmp
adc
ljmp
ds
push
pop
add
loop
or
push
pop
dec
or
pushf
std
shll
repnz
xor
out
aad
cli
xchg
shll
je
mov
incl
adc
inc
mov
and
cmp
subl
jo
testb
sub
rdpmc
and
pop
xor
notl
add
add
add
cmp
pop
test
add
idiv
xchg
dec
jnp
pop
aam
adc
cmp
cli
xor
cmovo
cmp
call
xchg
out
jle
out
sbb
out
adc
push
pop
dec
sbb
fistpll
out
sbb
out
adc
add
pop
xchg
roll
add
sub
aad
sbb
inc
in
outsb
mov
sub
dec
sbb
sub
fcmovnb
inc
jg
loopne
add
jge
or
cld
mov
xchg
cld
test
push
sbb
pop
xlat
mov
add
xchg
jecxz
cli
mov
sbbl
sbb
call
push
add
lcall
pushf
clc
in
dec
xorb
sub
cli
jmp
mov
call
insb
sti
call
adc
add
adc
sub
cmc
pop
jbe
sub
push
cs
mov
ja
xchg
adc
add
sbb
pop
jle
sub
add
adc
pop
push
add
aaa
adcl
addl
jae
add
sbb
and
call
jbe
icebp
add
ljmp
mov
add
and
add
add
loop
insl
mov
push
or
push
jp
imul
jmp
inc
out
sub
mov
out
push
dec
xor
xor
jecxz
mov
push
add
pop
adc
jmp
cmp
repz
ds
push
add
adc
ds
nop
cmp
mov
decl
sub
dec
aam
call
jns
adc
cmp
lcall
iret
jl
lahf
xchg
enter
sar
push
cli
hlt
aam
int
in
and
xchg
cmpsb
shr
jp
repz
and
shlb
jle
add
mov
cmp
insl
add
mov
cmp
xchg
add
add
aad
data16
stos
loope
call
dec
cmp
adc
or
ret
call
call
fucomp
call
xor
add
clc
add
xor
mov
loope
call
adc
add
add
adc
test
cmp
insl
mov
ljmp
call
and
cmp
cmp
mov
xor
loopne
ljmp
sti
enter
mov
or
jmp
xor
mov
adcl
jg
xor
cli
sbb
mov
push
or
jmp
inc
add
lret
pop
arpl
enter
push
jb
xchg
jmp
bound
jmp
pop
add
xchg
cmp
add
adc
inc
fstl
addb
enter
cli
xor
or
outsl
nop
inc
loopne
fcoml
mov
inc
cli
mov
fimuls
or
inc
out
js
push
add
dec
mov
xor
xlat
jnp
jae
xchg
xchg
cmc
je
add
adc
popa
cmp
adc
divl
bound
movb
adc
inc
cli
test
add
or
adc
add
shrb
push
in
mov
add
iret
mov
and
std
jae
pop
xlat
sub
fiadds
add
out
mov
xchg
cmp
add
sub
jle
dec
or
call
sub
lcall
ud2
mov
das
pop
jg
adc
je
cs
xchg
ret
sbb
call
cmpsb
push
jae
mov
mov
xchg
hlt
push
out
xor
jae
or
adc
sub
xchg
inc
out
loop
add
add
sbb
adc
xlat
inc
cmp
cld
pop
je
add
leave
mov
sbb
or
iret
adc
mov
arpl
repz
or
pop
push
adc
dec
mov
jmp
ret
mov
test
roll
add
add
call
stc
push
add
adc
jge
add
jmp
call
inc
incl
xchg
jge
xchg
or
jg
notb
xchg
and
cmp
fldl
bound
out
popa
pusha
int
jle
jmp
sub
call
add
xchg
mov
sbb
sbb
sub
lea
mov
outsb
sbb
ret
mov
ljmp
icebp
push
es
adc
push
mov
xchg
or
pop
jg
call
push
cmp
insb
or
adc
idiv
push
or
jecxz
loop
inc
decl
or
mov
add
mov
jae
call
mov
push
loop
sbb
cmc
push
jnp
mov
mov
dec
loop
ret
loope
xor
push
andl
pop
pop
insb
push
mov
dec
lcall
notl
std
idiv
je
test
call
jbe
out
fistpl
cli
leave
lock
test
mov
inc
cmpsl
das
dec
add
or
in
add
and
stos
jle
sbb
xchg
push
mov
std
mov
out
sbb
add
ja
inc
mov
dec
jge
mov
rolb
xchg
fwait
adc
fs
cli
mov
enter
ds
call
sahf
inc
jae
pushf
mov
shl
mov
add
jle
in
or
insl
adc
add
sub
out
jle
cmp
push
fldl
call
pop
add
add
std
pop
inc
sbb
xor
insl
dec
clc
movsl
jno
std
test
adc
jp
sbb
push
int
mov
mov
add
rorl
inc
adc
daa
sbb
call
push
test
test
lahf
aaa
jae
insl
adc
negb
lock
sbb
or
sbb
shlb
in
inc
xchg
call
jecxz
xchg
daa
lahf
aaa
je
inc
cmp
idivl
call
popa
fmuls
add
inc
add
loope
jle
cmpsl
push
sub
test
cld
lock
aas
jmp
mov
roll
add
rolb
push
mov
out
int
fs
push
sub
repz
mov
push
dec
inc
cli
xor
inc
jns
jb
inc
fdivs
loope
inc
jp
dec
push
popa
js
mov
mov
add
add
cmp
mov
ret
out
incb
add
push
loop
mov
lret
cmpsb
or
shrl
cld
addb
xor
jmp
testb
inc
lock
repnz
inc
stos
xchg
leave
repz
dec
push
add
push
add
push
repz
xchg
in
cli
mov
aaa
push
jne
sti
and
les
pusha
mov
pop
lea
aas
push
xchg
push
dec
aas
dec
inc
cli
inc
das
nop
sti
mov
incl
das
xchg
mov
mov
pop
daa
inc
cmp
std
xchg
ret
mov
mov
mov
mov
sub
inc
sub
jno
push
sbb
inc
push
cld
out
adc
mov
mov
add
mov
sub
push
fdivs
sbb
adc
sub
sbb
or
insl
xchg
nop
sti
js
setno
pusha
clc
pop
or
push
idiv
add
inc
movsb
int
mov
mov
clc
mov
cltd
adc
push
test
adc
bnd
lock
icebp
sub
inc
sti
repz
lcall
add
loope
or
jb
mov
cmp
pop
cli
push
xchg
and
pop
cli
inc
xchg
out
fadds
cli
aad
pop
xchg
fisttpl
jmp
pop
enter
mov
mov
std
nop
and
cmpsb
pop
adc
dec
int3
jmp
xchg
sbb
enter
lock
xchg
cmp
addb
hlt
xchg
decl
ljmp
add
cmp
add
test
sti
mov
addr16
out
mov
call
dec
clc
xchg
xor
ljmp
mov
dec
inc
jb
sbbb
cmp
ljmp
jle
cs
add
cmp
imul
hlt
repz
pushl
jg
incb
test
pop
das
jnp
orl
xchg
ljmp
iret
cli
push
xchg
ds
bound
cs
loop
cltd
jmp
pop
test
adc
call
std
pop
or
nop
adc
lds
pop
mov
cli
mov
jp
and
inc
inc
mov
sbb
rcr
decb
shll
leave
mov
add
add
sbb
bnd
mov
mov
add
std
sbb
dec
movsb
je,pt
and
cli
xchg
lods
adc
movsl
dec
es
sbb
cli
lea
and
je
fwait
cwtl
stc
pop
add
cmp
adc
sub
sbb
sub
adc
sbb
sti
call
aad
jo
inc
in
add
push
ja
mov
pop
mov
icebp
xor
test
lcall
sbb
jmp
adc
or
sbb
lret
or
push
or
mov
jmp
push
out
jl
sbb
inc
in
adc
cmp
icebp
or
mov
xchg
add
jmp
idiv
test
adc
ret
push
fwait
or
cli
push
cmp
mov
lea
imul
or
cmpsb
jne
mov
clc
cmpsb
xchg
jg
scas
xchg
cmp
dec
in
xchg
and
imul
or
imul
stc
or
or
imul
inc
add
pop
push
iret
jno
fadds
popa
addr16
imul
fildl
in
sub
xor
add
call
rolb
push
ret
addl
shr
push
je
fldt
ret
xor
xor
or
jb
or
sub
call
shr
xor
push
cmc
fnstcw
bound
or
mov
cmc
adc
testl
add
push
arpl
jp,pt
or
subb
lds
push
sbbl
sbb
enter
hlt
cmp
jmp
jl
xor
invd
push
xchg
inc
imul
adc
pop
pop
out
out
cmp
mov
repz
cmpb
inc
or
adc
cwtl
mov
mov
lcall
and
incb
dec
dec
xchg
xchg
rcl
flds
ds
push
or
jle
or
je
mov
ljmp
popf
cli
sbb
lds
sbb
movsb
sti
push
sbbl
inc
xchg
or
xchg
adc
cmp
add
and
call
add
pop
imul
std
call
fadds
add
pop
mov
sarl
cmpsl
pop
jg
or
pop
cltd
mov
ficomps
out
sub
cmpsb
in
cltd
add
jecxz
cli
in
in
cld
faddl
in
add
divl
cmp
cltd
inc
rsm
dec
add
jmp
xorl
hlt
lock
jmp
dec
or
cmp
outsb
xor
enter
dec
mov
repz
pop
adc
out
ljmp
stc
mov
jle
cld
pop
jnp
jge
add
sub
jl
insl
fldcw
jle
sbb
jae
xchg
lret
sarb
inc
xchg
mov
xor
add
mov
mov
es
hlt
cli
hlt
mov
aas
jmp
cmp
jae
mov
inc
cli
sub
mov
jge
jge
or
jae
jmp
test
add
test
sub
ret
push
mov
dec
cmc
jne
xchg
in
aas
cli
mov
cmp
jmp
cmp
mov
add
rorb
mov
decl
or
call
idivl
repnz
add
add
decl
pop
arpl
mov
mov
cld
dec
xchg
popa
pushf
into
or
pop
lock
jl
sbb
pop
lea
std
ss
push
cwtl
or
cmpsb
repnz
pushf
dec
push
inc
xlat
arpl
out
call
inc
dec
mov
xchg
mov
pop
add
cli
inc
xchg
dec
add
stc
adc
add
add
pop
jns
add
or
mov
adc
adc
mov
mov
adc
jne
and
out
pop
test
ret
or
test
jl
cmc
lcall
jbe
mov
stos
insl
fnstenv
sub
add
sbb
leave
cltd
sbb
mov
mov
ljmp
adc
add
add
push
pusha
leave
sbb
lcall
add
inc
inc
inc
jg
insl
add
rolb
cltd
or
aas
xchg
add
dec
add
roll
subl
xchg
rcrb
and
add
int3
add
call
or
jae
lods
ret
call
add
add
add
stos
or
push
jb
sub
sbb
add
rcll
insl
icebp
pop
scas
fcomip
add
iret
or
outsl
pop
add
jmp
aam
xchg
or
inc
out
or
imul
stc
or
push
add
rcr
jmp
pop
jbe
dec
lret
adc
incl
dec
test
add
testb
ds
call
lds
fstpt
unpcklps
stc
mov
mov
je
mov
jmp
mov
push
testb
add
cmpsb
or
testb
repnz
or
push
pop
ja
add
adcl
push
pop
rcl
pushf
pop
lds
add
add
mov
add
pop
cmp
out
add
cli
mov
subl
sub
jg
push
jmp
das
pop
and
enter
jb
pop
jmp
xchg
pop
lcall
pop
sbb
or
xor
xchg
frstor
jecxz
inc
or
jbe
testl
adc
mov
outsl
or
scas
add
xchg
mov
add
add
adc
daa
cld
sahf
sub
add
sbbl
out
add
xchg
xchg
and
cmc
ljmp
ljmp
mov
add
sarl
dec
pop
mov
mov
add
cmp
sbb
movsb
stos
or
push
fs
fs
jg
xchg
std
mov
or
pop
or
xor
sbb
or
aam
xchg
sti
sub
call
or
jb
stc
xchg
repz
xor
push
cli
es
iret
icebp
xchg
adc
leave
lret
inc
and
test
stc
aam
or
jmp
add
aaa
outsl
push
jbe
ds
push
fisubs
popa
push
sub
mov
fdivrs
add
or
mov
pop
xchg
divl
or
cld
mov
fildl
insl
and
mov
adc
iret
sar
out
mov
cmpl
shl
adc
pop
int3
cmp
mov
cmpb
add
add
dec
push
xchg
add
ds
lea
or
ret
sti
arpl
es
sub
notb
outsl
mov
cmp
divb
mov
mov
call
adc
jl
mov
test
std
call
jnp,pt
data16
push
mov
add
aas
pop
mov
add
add
nop
jae
mov
xchg
mov
dec
mov
subb
int
mov
pushf
int
call
lds
popf
aad
and
hlt
aas
pop
rol
pop
cli
or
pop
js
cli
shr
jl
and
mov
je
rcl
sub
add
cmc
pushf
mov
jge
lods
cli
push
out
or
add
ret
sarb
test
push
ret
mov
push
jb
add
daa
add
rol
iret
mov
inc
test
mov
inc
inc
add
cmc
xor
pop
or
inc
pop
or
or
ret
push
das
jp,pn
stc
shrb
rorl
inc
adc
lods
setg
sub
mov
incl
addr16
pop
adc
add
or
cmpsl
xchg
push
lea
das
ret
clc
inc
loope
jbe
jmp
push
add
loope
and
in
sub
out
mov
adc
outsb
add
cmp
pop
pop
xchg
pop
inc
add
jl
js
sti
inc
add
pop
jns
loope
les
sbb
inc
and
cmp
or
add
adc
push
cmpsb
jmp
inc
jmp
insl
lret
adc
test
xchg
in
push
or
add
add
push
addr16
xor
adc
das
notb
decb
push
call
add
stc
cmp
std
ljmp
out
test
pop
fadds
add
sbb
mov
decl
or
jnp
and
inc
insl
and
mov
adc
sbb
mov
mov
add
mov
inc
testb
pop
shlb
add
fdivrl
mov
loopne
jns
arpl
xchg
jmp
addr16
jmp
add
add
in
lods
sbb
add
in
iret
out
jp
cli
or
or
pop
push
jg
push
jg
inc
cli
push
sub
enter
inc
mov
inc
dec
mov
add
xor
dec
leave
arpl
mov
inc
cld
popa
div
sti
sbb
jbe
sub
int3
lock
add
divb
aam
add
stos
out
pop
insl
mov
int
in
add
imul
jmp
mov
popf
or
lock
ret
ret
jl
inc
push
pop
add
mov
dec
outsb
xchg
mov
js
xchg
call
jp
stc
sub
shl
mov
inc
jmp
imul
dec
add
pop
add
arpl
call
jb
js
jmp
gs
icebp
add
sbb
add
pop
in
and
push
fs
sahf
jmpw
adc
sub
push
bound
sahf
dec
pop
aas
or
xchg
push
jno
adc
mov
dec
mov
inc
sti
adc
pop
push
in
xchg
inc
jecxz
into
test
dec
ds
frstor
add
mov
ljmp
cmp
inc
inc
stos
adc
add
add
std
sub
jne
dec
test
push
xor
inc
cmc
jmp
dec
int3
inc
xor
add
shl
cmc
ljmp
add
push
cmp
idiv
test
push
rol
add
add
push
mov
jmp
loop
add
adc
jne
xchg
cmp
std
leave
xchg
test
add
mov
out
add
bound
lret
add
call
or
stc
ret
mov
cld
std
stc
mov
jmp
test
data16
cli
or
mov
cmp
in
cli
incl
push
mov
xor
jb
add
xchg
mov
addr16
inc
mov
lds
test
aam
cmpl
stc
out
inc
shl
sbbl
sbb
stc
jo
sbbl
mov
mov
adc
xor
add
add
push
lfs
pop
or
sub
cltd
cli
add
test
add
mov
daa
add
out
out
xchg
add
mov
add
dec
xor
sub
testb
sbb
cwtl
cmp
mov
repnz
inc
out
xor
out
adc
xor
insb
loop
push
call
outsb
or
add
mov
jge
dec
clc
mov
inc
jmp
test
test
stc
jl
jl
cmc
sub
and
pusha
pop
fidivl
jmp
pop
ljmp
call
icebp
mov
stc
scas
imul
xchg
pop
adc
xchg
mov
xor
out
popf
inc
sbb
ss
push
jmp
push
mov
add
dec
jo
mov
pop
jb
or
imul
xor
dec
or
xor
push
sar
adc
clc
add
add
incl
push
push
xor
out
dec
push
in
call
sub
stc
mov
imulb
lock
lock
add
imul
call
mov
push
or
jle
mov
loope
sub
pop
pop
cmp
rclb
mov
outsl
scas
sbb
push
mov
adc
clc
cmp
adcl
cs
adc
add
fisttpl
mov
dec
push
inc
out
push
bound
push
mov
arpl
xchg
incl
pop
cs
pushw
rcll
or
js
push
xlat
jnp
xchg
das
or
fisttpll
adc
adc
xlat
in
add
inc
sbb
pop
adc
cmpsl
add
jmp
push
jbe
inc
bnd
cmp
inc
jno
pop
jns
std
xor
add
fwait
push
lcall
cmp
jne
imul
and
mov
hlt
dec
cmc
jae
inc
and
mov
addb
out
xlat
jne
adc
dec
adc
jge
push
addr16
aam
and
std
arpl
inc
sbb
jb
int
sub
sbb
mov
jp
jmp
push
mov
ds
call
lock
fimull
ljmp
shr
push
sahf
in
into
push
adc
adc
inc
stc
stc
xchg
out
test
lods
test
imul
xchg
or
jecxz
shlb
mov
cmp
test
mov
jb
push
shrl
add
adc
mov
cmp
outsl
in
xchg
ret
lahf
cmp
add
fisttpll
les
addb
cld
add
in
or
jl
pop
sub
dec
mov
add
mov
int3
int3
jae
in
push
insl
push
dec
mov
jnp
cld
movsl
notb
ret
hlt
add
incb
call
mov
ljmp
mov
ljmp
xor
jb
test
outsl
out
or
add
inc
stos
sub
adc
outsl
add
lcall
or
xchg
test
idivb
out
shr
mov
outsl
dec
or
sbb
sbb
push
xchg
rorb
pop
mov
rcll
mov
mov
mov
dec
add
mov
mov
clc
test
sub
call
shll
enter
xchg
xchg
movsl
add
mov
jge
clc
pop
fisubrl
sahf
jmp
rclb
scas
aam
push
or
jmp
jg,pt
jne
xchg
in
mov
in
inc
stc
fcmovb
jecxz
pop
ja
mull
stc
mov
add
js
testl
jge
test
jmp
rcrb
pop
lea
or
ljmp
shlb
dec
out
sbb
sub
mov
in
fwait
mov
pop
sub
jle
adc
ja
xchg
inc
ficoml
lahf
call
enter
xchg
test
stc
push
and
jle
fmull
ja
pop
add
fsincos
push
outsl
call
enter
xchg
sub
pop
lods
dec
jle
mov
ja
and
das
call
add
dec
outsb
pop
jb
in
xchg
jb
jg
loope
hlt
add
repnz
pop
jg
xor
cmp
add
ds
scas
add
and
jecxz
int3
int3
cmpb
int3
ret
int3
sub
addl
dec
mov
dec
push
in
or
enter
test
dec
stos
fincstp
ds
insl
in
jb
call
mov
jno
pop
jo
shlb
dec
and
ret
dec
push
push
in
ss
jnp
subl
fmull
add
dec
push
outsb
cvtps2pd
stc
rcr
std
insb
pop
bound
mov
add
ds
adc
mov
add
add
sub
std
call
and
or
fs
hlt
in
rorb
pop
fiaddl
pop
or
mov
xchg
jae
loopne
xchg
jmp
incl
sbb
add
or
loope
inc
jmp
jo
out
loope
inc
pusha
inc
out
and
xchg
repz
outsl
ret
jnp
sbb
lds
mov
sbb
jmp
sbb
imul
add
frstpm(287
sub
and
xchg
xor
adc
cmp
pop
add
add
outsl
lock
notl
loope
outsb
aas
pop
jnp
pop
lcall
rolb
outsl
les
xchg
ret
xchg
xor
out
push
test
mov
and
add
ljmp
out
ret
mov
hlt
shlb
fiadds
sbb
jge
mov
xchg
pop
stc
mov
in
aaa
sub
jg
jge
mov
stc
leave
in
rcll
adc
and
bound
fiadds
icebp
jmp
push
jb
dec
mov
cmp
sbb
push
jb
cmc
sub
scas
out
mov
xor
add
aad
incb
xorl
push
call
add
adc
scas
push
pop
sub
and
mov
add
add
xor
les
and
addr16
loopne
int3
outsl
adc
in
sti
cltd
icebp
add
jmp
dec
clc
cmc
jmp
add
add
push
inc
add
arpl
roll
jl
or
cmp
test
imul
sub
add
add
sbb
sub
jl
cld
enter
pusha
dec
faddl
mov
test
jp
out
dec
hlt
xchg
cwtl
std
add
fildl
outsb
sbb
xor
push
cmpsl
jl
cmpsl
popl
xchg
jl
cmpsl
pop
jo
mov
js
pushf
scas
or
mov
mov
jle
fiadds
add
lds
mov
cmp
sbb
pushf
popf
stc
test
loop
add
mov
add
add
das
pop
add
or
js
js
out
lcall
dec
emms
lahf
setb
push
out
shlb
pop
daa
cmpsb
ja
jne
out
xchg
ret
lcall
push
inc
or
push
ja
andb
stos
std
adc
xchg
data16
outsb
loope
push
arpl
adc
pusha
inc
jae
movsb
jnp
or
add
icebp
loop
xor
dec
icebp
cmc
insl
aas
inc
sub
inc
jmp
test
psubusb
rolb
test
sarb
add
into
out
jbe
out
out
jae
dec
add
ds
call
push
or
je
call
test
mov
fdivr
subb
call
test
push
stc
push
std
subb
jg
pop
addr16
adcb
call
fcoml
mov
repnz
jle
add
mov
idiv
mov
cld
push
jne
or
push
repnz
xchg
add
lds
test
shl
jge
cld
add
mov
std
add
icebp
sbbl
inc
fsubrl
xor
idivb
scas
add
rorb
call
dec
cld
fcompl
mov
cs
xchg
icebp
jnp
jp
rorb
lahf
cmc
incl
xchg
scas
sbb
add
pop
cmp
test
cs
pop
pushf
cld
inc
test
jle
int3
dec
jle
in
pushf
jle
dec
rcll
enter
push
call
add
add
fs
mov
fstpl
mov
iret
mov
loop
push
push
adc
or
inc
add
out
call
ret
sub
test
stos
lahf
sarl
clc
popa
aas
or
jmp
adc
sub
add
add
jo
adc
sbb
add
xor
dec
int
jp
test
ja
aaa
mov
xor
sbb
lea
jp
cmp
out
pop
mov
jns
adc
push
inc
xor
fcompl
sbb
add
fildl
rcr
mov
push
xchg
dec
xlat
js
ljmp
sbb
scas
in
add
push
and
insl
in
ja
data16
inc
sbb
dec
mov
cmp
stc
push
push
subl
fdivrl
inc
test
test
lret
call
push
add
jle
repnz
arpl
call
push
add
jle
ret
test
dec
dec
cwtl
sbb
int3
call
add
stos
fdivr
push
add
jle
mov
inc
fstps
xor
jl
stc
add
movb
in
addl
push
lea
in
testl
out
clc
stc
add
add
adc
into
push
push
lcall
add
jae
je
insl
lcall
add
in
test
pop
cmp
push
gs
cmpl
jmp
shlb
pushl
xchg
push
mov
adc
lods
mov
divb
stc
xchg
scas
add
pop
push
jns
daa
ds
mov
push
xor
stc
xchg
das
add
dec
inc
jns
pop
outsb
dec
mov
add
in
xchg
das
add
fdiv
jbe
xlat
lcall
cmpsb
shl
stc
xchg
add
int3
jecxz
inc
daa
outsb
cmp
pushaw
mov
dec
mov
stc
xchg
scas
stc
adc
add
xchg
jp
out
push
enter
mov
mov
adc
add
cmpb
pop
jg
adc
jg
jb
add
sub
xchg
rcl
ror
push
jle
frstor
das
mov
scas
nop
dec
inc
jl
xchg
add
pop
xchg
outsl
push
xchg
cwtl
jmp
push
cwtl
dec
repz
push
enter
add
inc
fisubrs
pop
xor
sub
pop
inc
sbb
adc
adc
inc
add
scas
and
add
add
cld
bound
push
stc
call
test
cli
push
sbb
push
insl
popa
jnp
jnp
sbb
jb
fiadds
outsl
loope
dec
mov
shlb
adc
aad
shll
ds
inc
sbb
es
push
mov
xchg
adc
jb
subl
jb
adc
bound
push
cwtl
out
lret
jge
add
and
dec
add
rcll
push
sbb
add
pop
cmp
iret
mov
pop
dec
mov
mov
xchg
stc
ljmp
rorb
sti
clc
jle
cmp
testl
cld
xchg
cmp
push
mov
xor
push
add
icebp
pop
shlb
cmp
filds
jle
mov
add
fidivrl
out
add
test
xor
push
test
add
mov
addl
jbe
mov
xchg
out
stc
mov
rolb
jo
lea
jo
dec
notb
mov
out
or
fstps
ljmp
sub
popf
sbb
jnp
mov
jge
ret
jae
push
cmp
mov
and
xchg
sub
loope
push
out
rorb
fnstenv
insb
addr16
pop
fwait
js
repz
lret
jmp
fadds
mov
cmpsl
outsl
leave
mov
push
mov
rcll
aas
idivl
jmp
mov
cld
jp
fldcw
inc
insb
call
dec
add
mov
sete
sti
add
mov
xchg
ds
sub
cltd
fiaddl
xchg
mov
out
mov
push
outsb
push
inc
ficoml
mov
insb
into
push
add
pop
cld
jmp
mov
xor
sarl
add
add
dec
std
imul
jge
aaa
add
cvtdq2ps
bound
test
inc
jge
in
inc
test
pop
dec
push
jbe
push
fldcw
shll
lds
jl
mov
loop
sub
pop
or
mov
nop
adc
adc
mov
push
subl
std
test
pop
adc
add
rcll
aas
mov
int3
jp
int3
int3
add
mov
and
sbb
pop
cmp
adc
pop
dec
adc
cmp
add
pop
cmp
lcall
les
add
pop
in
push
cmc
or
or
in
stc
mov
orl
add
cmp
push
cmp
mov
bound
mov
dec
lea
gs
pop
jmp
test
push
xor
dec
add
jmp
rclb
call
jmp
into
int
fldl
rorl
xchg
and
les
dec
inc
mov
pop
ror
pop
cmpsl
ror
push
push
mov
loope
push
or
sbb
or
add
pop
push
push
inc
lea
adc
mov
jae
jp
imul
jb
pop
fnsave
outsb
dec
mov
ret
enter
fs
lcall
aaa
and
xchg
pop
add
push
lea
jno
pop
add
insl
pop
push
add
add
add
jmp
dec
out
std
add
add
lret
add
add
add
xchg
pop
add
xor
inc
aam
mov
daa
xchg
fs
push
outsb
daa
inc
orb
int
xchg
pop
mov
pushl
int3
sub
mov
test
out
xchg
or
xchg
sub
js
add
aad
mov
add
bound
or
jmp
jecxz
dec
pop
adc
jmp
cltd
ret
xchg
lret
mov
inc
xor
dec
bound
daa
jp
fnstcw
pop
jg
aad
push
leave
push
sub
jg
push
xor
cmp
push
idiv
loope
cmp
xor
sbb
testl
adc
clc
push
jne
call
cmpl
shrb
iret
loope
xor
cld
push
and
loope
subl
rorb
iret
mov
sbb
call
idivl
imul
shrb
clc
jb
add
jno
idiv
loope
cmp
add
pop
cltd
mov
pop
iret
call
xchg
sbb
adcl
jge
and
mov
lock
xchg
pop
add
enter
lcall
xor
pop
das
push
repnz
pop
add
fyl2xp1
mov
fs
xor
fnstcw
out
rolb
jle
add
sub
fiaddl
sbb
sub
xchg
mov
stc
sbb
add
push
in
sahf
mov
cmp
xchg
dec
notl
fstp
jmp
shlb
adc
sbb
repnz
jecxz
add
arpl
insb
filds
ret
add
push
or
mov
or
movsl
out
pop
adc
pusha
ficomps
jg
jl
jmp
rcrb
sbbb
ret
jecxz
data16
pop
mov
add
sub
add
js
pop
pop
xchg
sbb
mov
xchg
push
jmp
movb
push
std
imul
test
add
add
jmp
add
jns
jmp
rorb
jmp
jne
or
iret
add
sahf
rcrl
sub
sbb
fidivrs
popl
xchg
adc
jae,pt
jecxz
add
loopne
add
repnz
pushl
pop
vandnps
cmp
xor
inc
pushl
pop
add
add
fwait
shlb
mov
adc
add
or
mov
sbbb
lea
xor
add
scas
xor
cmp
mov
add
scas
jnp
adc
jns
or
cmp
adc
bound
rclb
jmp
jo
mov
jb
ret
pop
fscale
jae
pop
xor
js
push
sub
pop
loopne
mov
fscale
jl
loopne
or
push
inc
jl
movsl
push
adc
add
xchg
mov
xchg
sbb
fistps
leave
rorb
or
push
jle
pop
cld
pop
sbb
incl
add
pop
inc
add
add
call
out
pop
xor
xchg
arpl
push
xchg
lcall
cmpb
add
xor
mov
xor
mov
std
arpl
int
mov
inc
jo
adc
or
inc
stos
sub
dec
lock
arpl
pushf
pop
add
adc
push
pop
add
xchg
jge
out
pop
add
lret
xchg
loop
add
jns
cld
xchg
cmp
insl
xchg
jge
pop
pop
cmp
and
test
insb
sub
loope
sarl
inc
sbb
enter
and
stc
jbe
xchg
sub
test
dec
hlt
jb
idivb
lahf
les
jb
repnz
cltd
inc
ficoml
add
add
add
lock
push
push
pop
ja
add
jmp
push
cli
xchg
loopne
clc
call
dec
push
in
mov
dec
or
dec
add
add
cmp
xor
mov
cmc
mov
jmp
test
cmc
mov
test
ja
or
in
mov
adc
stc
jge
inc
cmovns
pusha
arpl
sub
add
add
ja
jo
dec
test
out
and
sbb
ljmp
adc
or
jge
pushl
sub
roll
inc
mov
push
pop
inc
lods
push
ret
push
pop
pop
call
xor
xchg
nop
fcomps
mov
ror
xchg
ror
pushf
ror
pop
or
mov
mov
lcall
jmp
dec
nop
loopne
fscale
andb
or
mov
push
jg
pop
add
pop
std
call
data16
ss
adc
call
data16
push
imul
inc
add
outsl
xor
sub
mov
rcrb
pop
dec
pop
shr
add
add
push
adc
add
flds
pop
add
push
shll
pop
add
add
mov
rorb
mov
add
add
add
jl
cmp
ret
jecxz
dec
mov
enter
enter
mov
cmpl
sbb
out
xor
sar
add
ja
sar
enter
jl
or
mov
test
or
add
xor
into
enter
sbb
jmp
sbb
stc
adc
sbbl
add
sahf
test
mov
sbb
xlat
test
push
addb
jle
call
xor
stc
jle
xor
mov
xlat
movsl
call
cli
add
push
in
subb
pusha
lds
loope
orl
dec
je
into
cli
push
rcr
add
leave
jge
fadds
lret
leave
jns
and
lods
testl
leave
out
leave
lods
jnp
mov
shlb
sti
push
lock
cmc
inc
and
test
mov
incl
add
add
mov
idiv
leave
jle
lock
jg
hlt
mov
fincstp
ljmp
xor
addb
test
lods
idiv
jnp
lock
pop
jg
cmp
testl
fdivr
addb
mov
mov
in
mov
aam
shlb
add
push
jp
mov
add
add
jmp
aam
jg
loope
pusha
pop
mov
std
xchg
xchg
aam
xchg
mov
sub
in
xor
pop
aam
out
aam
xchg
adc
adcb
jge
cmp
inc
invlpg
add
inc
cld
sub
je
out
lds
dec
sbb
xchg
iret
fs
push
dec
in
cwtl
mov
jg
aam
mov
pop
ja
fcomps
lret
mov
out
pop
lds
les
sub
lcall
ficompl
enter
pop
inc
sbbb
lds
sub
out
mov
push
rcrl
xor
les
pop
fiaddl
inc
add
jle
push
add
push
in
sbb
push
pop
jno
push
in
push
lahf
add
mov
stc
testb
jmp
pop
je
xchg
mov
stc
gs
mov
lretw
pop
fdivrp
cmpsb
xchg
mov
std
imul
xor
sbb
lret
push
lret
add
subb
jle
inc
js
push
inc
jge
add
scas
idiv
jae
hlt
incb
call
cmpl
jl
mov
jp
add
and
dec
lea
stos
idiv
shrl
les
jle
pushl
mov
mov
sbb
inc
inc
test
shlb
pushl
xorl
add
jle
sti
addb
sarb
and
pushl
in
idiv
pop
sub
push
dec
mov
jae
add
mov
mov
lcall
cld
inc
push
jns
fldpi
into
call
xchg
adc
adc
add
int3
lret
jl
mov
inc
cld
inc
push
andb
rorb
add
popa
jb
mov
iret
stc
js
mov
les
push
mov
stc
mov
sar
dec
dec
jb
inc
inc
rolb
xor
js
and
popa
rcrb
js
push
push
ret
dec
lods
dec
rorb
ss
rol
pop
jbe
shrl
xchg
jg
rcr
shrl
rcll
add
xchg
shrl
adc
mov
xor
adc
std
mov
sub
adc
iret
jle
sbb
movsb
or
cld
iret
pop
ret
lret
xor
lea
iret
ds
cltd
jmp
sub
jbe
mov
add
sbb
jl
mov
inc
dec
add
mov
stc
jp,pt
pusha
ss
xchg
adc
inc
push
add
fs
adc
add
jmp
loope
test
in
mov
fsubrp
pop
test
push
int
mov
int
lods
mov
lods
jge
or
pop
out
mov
mov
lea
add
int
inc
stos
cmp
ljmp
add
push
loop
jbe
imul
push
mov
mov
or
add
rolb
and
stc
add
mov
lret
or
int3
ljmp
push
xor
push
or
mov
cmpsb
add
outsb
add
and
xchg
test
cmp
in
adc
int
push
pop
add
and
cmp
add
sub
lods
std
lret
pop
popf
ror
cmc
mov
int3
jecxz
js
xchg
cld
call
dec
add
mov
sub
pop
jg
jae
movsb
aam
pop
and
pusha
sbb
popa
jae
test
int3
pop
add
push
mov
and
int3
stc
lcall
dec
mov
iret
push
jg
sar
push
add
push
mov
sub
sub
push
pop
addr16
add
mov
mov
adcb
lods
mov
add
out
add
mul
fldenv
js
inc
mov
mov
xchg
push
mov
fs
data16
sbb
jo
aaa
mov
cwtl
xchg
pop
add
add
xor
add
pop
pop
sub
mov
sub
inc
or
rorb
scas
or
jmp
dec
test
or
jmp
adc
add
mov
jmp
add
loopne
xchg
stos
aam
ds
inc
sbb
adc
adc
or
adc
adc
cmpb
add
xor
lea
pushl
sub
test
jb
icebp
xchg
add
jmp
xchg
cmp
add
add
jle
jmp
cmc
clc
inc
mov
in
add
cmp
insl
movl
mov
xor
sub
xlat
cmp
addl
pushl
cwtl
add
incl
pushf
decl
dec
incl
addb
incl
incl
sti
mov
add
mov
add
scas
mov
faddl
jle
incl
push
lock
xchg
in
cwtl
ja
std
mov
test
daa
test
test
pop
sub
or
pop
or
stos
push
jnp
inc
nop
inc
add
mov
subb
push
add
adc
into
push
sahf
mov
dec
or
inc
hlt
fsubrs
aam
enter
add
sarb
adc
stc
mov
xor
test
movsl
aad
test
jge,pt
pop
cmp
pop
movsl
out
add
mov
int
mov
int
mov
int
jge
xchg
xchg
dec
out
xor
add
fsubrl
mov
stos
mov
int
jge
dec
adc
or
add
add
add
pop
add
add
add
add
add
loopne
call
sub
push
and
pop
add
adc
out
pop
add
add
lds
jae
xlat
mov
shr
add
jmp
jnp
or
sbb
add
push
ret
add
adc
add
int3
mov
int3
lods
pop
int3
ficoml
adc
add
aaa
stc
xchg
fimuls
or
outsb
es
stos
adc
lock
add
push
dec
push
mov
test
cmp
jg
sub
pop
int3
mov
les
dec
lea
push
lea
aad
inc
mov
shr
imul
shll
add
jns
cmp
sbb
icebp
notl
cmp
hlt
or
dec
lock
dec
push
test
std
cmp
push
idiv
test
jmp
int3
int3
dec
outsl
int3
int3
cmp
int3
ret
cmp
push
sarb
sub
push
test
inc
and
jae
push
mov
in
dec
addr16
adc
cmp
add
xchg
jmp
icebp
or
test
sub
xor
add
out
pop
mov
mov
int3
push
push
ja
push
ja
and
mov
repnz
fnstcw
xchg
bound
pushf
push
lock
lcall
dec
sbb
adc
call
icebp
or
test
ljmp
xor
add
mov
pop
mov
xor
rol
mov
sti
inc
mov
repz
or
mov
icebp
dec
aam
icebp
or
sbb
test
out
cmp
mov
aam
adc
jp
mov
js
push
testb
mov
les
sub
into
subb
add
aas
pop
js
mov
and
lret
sbb
fcmovnb
sub
pop
cmpsb
push
bound
sub
shrb
popa
stos
jle
icebp
xchg
popf
add
cmp
repz
xor
add
jmp
adc
add
sbb
insb
popa
and
mov
or
adc
add
push
xchg
mov
or
aam
xchg
getsec
enter
mov
stos
inc
int3
sbb
cmpsb
push
push
mov
mov
test
pop
je
inc
mov
inc
add
jp
push
mov
add
clc
pop
push
ret
jnp
in
mov
mov
je
cmpl
cmpl
int3
add
int3
int3
mov
int3
int3
cmp
mov
add
cmp
xor
std
std
mov
inc
movl
jns
adc
inc
cmp
out
adc
mov
out
and
int3
jecxz
leave
int3
fucomi
enter
enter
mov
mov
inc
sahf
std
incl
mov
add
shrb
subl
mov
mov
jg
cmp
or
pop
adc
jmp
sub
or
clc
pop
jae
and
sahf
sbb
in
addr16
push
gs
dec
testb
xchg
xor
test
std
decl
xorl
add
std
aaa
inc
jg
inc
arpl
rcrl
test
push
mov
aaa
das
jg
xor
push
add
pop
stos
jnp
mov
sarl
cmpsl
or
or
andps
data16
pop
xchg
and
sub
push
aad
push
rcrl
or
inc
insb
ret
add
push
outsb
dec
out
push
jp
lcall
bound
subb
std
test
cld
inc
stc
cmp
push
test
imul
fcmovbe
das
stc
cwtl
daa
xchg
shlb
add
cmpsl
dec
das
loopne
cmp
jmp
enter
lar
lods
addr16
push
bound
stos
div
aas
adc
xor
mov
in
lea
cmp
cltd
stos
sub
add
add
test
or
insl
stc
je
jnp
xor
push
dec
call
out
scas
cli
jge
jge
xor
push
ret
insl
outsb
cli
je
jnp
xor
cmpsb
stc
incl
xor
fadds
push
ret
or
int3
int3
add
ror
int3
ljmp
push
lods
jnp
sub
jg
cld
gs
cmp
and
mov
add
ja
jge
insb
in
sub
repnz
icebp
jns
and
xor
inc
cmp
or
ljmp
rcr
inc
pop
ret
add
jge
mov
pop
pop
push
or
test
aas
jmp
fsubrl
add
sub
movsl
incb
lcall
in
or
test
aas
test
fldt
add
bound
int3
xchg
xchg
and
add
sbb
mov
fwait
pop
insb
mov
pop
mov
ds
mov
cmp
jbe
add
jge
add
movsb
jp
xor
lcall
aad
js
adc
cwtl
push
sbb
push
ret
add
mov
fs
push
pop
xor
lcall
add
jp
inc
repnz
negl
add
jo
ljmp
es
adc
flds
pop
jnp
ja
add
jmp
add
out
jl
pop
and
push
xor
call
adc
pop
add
insb
fildll
sar
add
fidivl
xchg
pop
xor
pop
sub
loope
xlat
push
adc
add
lods
stc
jmp
sarb
push
add
jmp
call
jb
xchg
adc
jmp
add
xchg
inc
push
jns
jmp
add
adc
and
stos
sub
add
and
add
icebp
mov
cmp
xchg
call
mov
lds
add
dec
push
mov
jge
push
sub
or
insl
dec
mov
add
jae
jge
cld
xor
pop
outsl
adc
inc
push
testl
scas
add
inc
mov
inc
cld
mov
add
add
pop
dec
add
inc
xor
sahf
in
sbbl
test
mov
iret
sub
repnz
lcall
pop
sar
decl
mov
call
mov
add
add
cltd
sub
arpl
dec
insl
mov
adc
sub
lcall
fdivl
add
add
inc
mov
test
test
xchg
add
popa
cmpsl
fidivrl
pop
add
jle
stos
ret
out
cmpsb
pop
xchg
movsl
adc
lcall
rcll
add
add
add
add
jg
add
mov
push
ja
cld
add
jle
sub
outsb
push
sbbl
in
push
out
or
add
ja
daa
lcall
push
scas
sub
mov
jo
cmpsl
adc
jnp
cmp
movsb
movsb
les
dec
add
popa
sub
jb
jmp
mov
add
add
shrl
call
ds
pop
xchg
sub
jl
or
or
test
xchg
call
mov
mov
xor
shlb
dec
mov
xor
stc
jmp
push
cs
adc
jle
adc
inc
je
add
test
add
repnz
ljmp
rorb
jmp
clc
add
inc
pop
lds
insb
mov
mov
loopne
aas
cmp
sarb
add
sbb
jl
inc
dec
imul
and
inc
adc
jp
inc
insb
and
mov
push
mov
jnp
dec
jne
inc
data16
imul
add
add
inc
test
icebp
push
mov
adcb
roll
stos
ret
ja
sahf
dec
push
scas
inc
clc
call
pusha
sbb
or
cmp
dec
out
mov
fnstcw
test
adc
int3
bound
orb
pop
xor
mov
adc
stc
xor
add
cltd
add
jmp
inc
add
xchg
xchg
popf
std
call
cltd
std
jle
inc
mov
pop
cmp
xor
push
sbbl
pop
push
outsl
cmp
jns
icebp
insl
or
call
add
jnp
cwtl
add
add
jnp
and
mov
add
sub
xor
xchg
and
pop
das
xor
iret
js
and
inc
adc
dec
jnp
pop
xchg
aas
scas
add
cmp
outsb
inc
pop
repz
push
or
dec
push
outsl
jecxz
and
add
inc
bound
push
or
adc
push
lods
cli
jle
mov
adc
add
xor
push
adc
add
xor
test
imul
scas
sbb
add
adc
or
jg
xor
or
cmpsb
cs
inc
push
jo
cmp
cmp
push
insb
fucompp
test
push
jg
dec
sbb
add
pop
adc
adc
clc
pop
pushf
out
jb
bound
jmp
or
add
hlt
pushl
and
add
add
add
add
and
add
add
lret
sub
xchg
fcmovb
testl
loope
pushl
std
inc
jno
dec
add
js
and
cmp
roll
outsl
dec
push
push
xchg
ds
jne
jl
out
and
clc
incl
adc
sldt
add
add
cmc
incl
push
xor
fisttpl
aam
inc
insb
pushf
repnz
imul
call
js
pop
fwait
cmp
mov
gs
push
test
ret
insb
cwtl
repnz
in
ret
push
mov
test
ss
xchg
push
or
inc
dec
mov
mov
or
flds
pop
add
mov
mov
jp
imul
js
xor
cmp
lcall
add
xchg
and
out
gs
pop
icebp
dec
mov
dec
mov
mov
scas
adc
repz
sahf
mov
es
in
mov
xor
dec
mov
jle
dec
xchg
jle
stc
cmp
mov
add
add
adc
dec
mov
mov
mov
xor
andl
out
pop
das
in
test
in
pop
jge
add
out
ljmp
sub
cmp
cmp
mov
bound
or
repz
stc
aad
inc
popf
xor
inc
or
push
test
sbb
popl
or
adc
push
test
repz
dec
int
bound
push
bound
cmp
daa
sti
jl
pop
mov
dec
inc
mov
and
ja
add
jmp
aaa
xchg
jmp
jg
cmpsl
or
out
scas
lret
xor
stc
ljmp
or
ret
ficoml
add
cmp
or
xor
aad
cli
scas
cmc
incl
push
js,pt
insb
sti
push
in
clc
ljmp
aas
pusha
jns
add
pop
mov
loop
sub
ljmp
sarb
add
cmpb
js,pt
sbb
mov
out
or
fdivl
cwtl
std
incl
mov
adc
stos
frndint
cwtl
scas
pop
or
stos
std
jp
adc
pop
test
nop
iret
fs
xchg
lahf
cmpsb
std
jmp
stos
std
jle
out
add
and
nop
stos
and
enter
xchg
add
pop
add
or
cwtl
jae
pop
roll
mov
mov
mov
add
stos
mov
ja
std
decl
test
loop
mov
gs
retw
std
mov
sub
dec
out
sbbb
dec
jnp
adc
sub
scas
jp
cmp
add
icebp
jne
icebp
in
jno
test
xchg
push
mov
jbe
inc
leave
lcall
inc
dec
xchg
jp
dec
outsb
push
add
daa
pusha
pop
rcrl
add
add
fists
add
sub
pop
inc
mov
sub
add
add
add
add
jmp
push
test
addr16
adc
in
pop
enter
pop
push
sbb
daa
mov
clc
test
push
icebp
xchg
jb
test
xchg
pop
adc
mov
stos
xor
jp
pop
cmpsl
pop
push
xlat
sbb
xchg
adc
test
add
fldcw
inc
icebp
ret
test
vpsubsw
dec
bound
test
jmp
and
add
popf
scas
rorb
add
jae
mov
lea
add
mov
push
add
out
aam
mov
push
addl
mov
mov
mov
push
mov
xor
sbb
cmpl
addb
loop
adc
push
outsl
dec
insb
inc
aad
jns
add
push
jno
testl
ljmp
cld
inc
int3
cmpl
cmc
pop
test
xchg
jnp
adc
ja
std
lcall
repnz
jns
call
adc
stos
jp
mov
adc
jp
push
add
lods
outsl
shlb
addl
pop
stos
std
xchg
ret
jp
xor
mov
add
test
call
sub
or
and
and
dec
pop
xchg
clc
sub
mov
dec
add
add
add
lret
fisttps
mov
xor
lcall
dec
das
fidivl
not
fldenv
outsb
or
aaa
retw
stc
cmpsb
xchg
add
jmp
xor
or
mov
cmp
inc
xor
shl
add
jle
adc
sbb
add
add
jg
fwait
add
ret
sub
into
int3
mov
into
int3
lods
into
int3
cmp
lods
test
xor
dec
stos
ficompl
repnz
push
push
pusha
jecxz
xchg
daa
subl
sub
bound
xor
mov
dec
mov
adc
xchg
or
xchg
mov
jo
add
cmp
push
idiv
push
add
dec
es
rcll
adc
subb
cwtl
stc
add
add
mov
mov
add
push
int3
int3
jp
int3
int3
add
sub
adc
aas
sbb
insb
ljmp
dec
mov
push
ljmp
repnz
negl
cltd
stc
lret
add
in
mov
xchg
push
test
jmp
jge
loop
dec
push
xor
jmp
xor
push
jmp
push
shl
cmp
cmp
pop
test
stc
sub
xchg
or
jnp
sub
or
cmpsb
inc
push
lahf
xchg
mov
mov
add
les
sub
dec
test
bnd
repz
mov
jl
mov
std
call
fidivrl
mov
and
shlb
pop
dec
insl
cld
ljmp
pop
inc
mov
mov
rcll
in
mov
dec
in
in
sbb
jle
pop
stos
in
and
jnp
add
xor
xor
paddusw
jecxz
aaa
fucomip
add
fnstsw
mov
cwtl
ds
mov
out
int
cmp
cld
out
mov
mov
stos
movsb
add
mov
ret
pop
push
or
and
and
pop
lret
xchg
mov
pop
fidivs
mov
pop
add
add
outsb
ret
add
add
add
add
mov
ret
adc
enter
aam
or
aam
shrl
roll
cmc
aas
jmp
adc
add
mov
and
push
int
adc
sahf
dec
and
data16
call
mov
xchg
dec
cmp
jg
mov
ret
add
call
test
mov
add
add
lahf
rorb
mov
sbb
xor
fsubrs
mov
sbb
sub
push
cmc
fmuls
mov
xor
mov
daa
cmp
addb
mov
ljmp
xchg
mov
ret
add
imul
jge
ret
mov
test
add
ds
push
xor
add
or
push
or
andb
call
mov
dec
sub
inc
xchg
out
mov
push
adc
sub
gs
sarl
in
ljmp
std
test
call
iret
sahf
insl
rcrl
add
test
ror
mov
pushf
fimuls
jge
fwait
adcl
mov
pop
mov
sbb
push
or
or
std
call
sbb
pop
pushf
mov
or
out
sbb
add
mov
pop
hlt
xchg
inc
dec
dec
repnz
inc
adc
pop
inc
dec
mov
add
sub
sbb
mov
fsubl
out
pop
sub
cmc
dec
xchg
loop
xchg
xchg
cs
pop
mov
or
rcll
repnz
add
pop
or
out
or
adc
out
cmc
clc
xchg
loop
icebp
xchg
sbb
xchg
les
or
mov
ficompl
or
aam
mov
cmc
mulb
sbb
add
icebp
call
adc
pop
or
sub
test
stc
sub
pop
add
call
inc
xchg
stc
jb
loope
sub
sarb
cltd
stc
mov
inc
or
daa
jle
jmp
rclb
loope
mov
xchg
rolb
dec
mov
out
push
dec
jnp
jne
test
orb
ljmp
inc
leave
inc
sbb
stc
aas
add
adc
jle
aas
and
gs
inc
jge
paddsw
cmpl
jge
xorl
outsb
popa
add
incb
cs
clc
add
or
jge
fildl
lods
lds
mov
addb
pop
xor
mov
jmp
pop
mov
jb
and
clc
out
sub
fcoms
or
xchg
inc
fildl
test
cmpsb
xchg
fwait
std
jl
mov
xchg
mov
mov
mov
fmuls
pushf
icebp
mov
aad
or
sbb
adc
loopne
pop
add
sbb
pop
fwait
cwtl
mov
lret
xchg
xchg
push
inc
add
add
jmp
adc
and
arpl
out
sbb
decl
repnz
pop
add
nop
jnp,pn
cli
stc
or
mov
mov
xor
lods
add
ss
lea
adc
pop
mov
mov
data16
aaa
adc
out
fwait
xor
add
add
outsb
adc
loop
out
mov
mov
mov
insl
jl
jecxz
rcrl
sub
xchg
icebp
out
pop
add
cwtl
rorl
clc
cli
jmp
cld
and
mov
jp
xchg
dec
sbb
adc
push
jno
inc
sbb
adc
add
repnz
or
fsubr
adc
or
mov
lea
icebp
mov
or
test
dec
xchg
push
adc
dec
icebp
cmp
jb
dec
call
ljmp
add
push
in
add
jg
in
xchg
in
cmp
or
clc
addr16
sbb
jne
out
mov
jne
adc
jecxz
scas
icebp
sbb
sub
push
add
lods
add
cld
mov
push
loopne
in
or
std
outsl
adc
jns
and
int3
aas
test
jmp
lock
add
cli
ljmp
notb
jmp
mov
scas
mov
ljmp
mov
fwait
xchg
iret
aam
jne
or
add
push
stos
std
call
fwait
les
adc
repz
std
or
and
outsb
cltd
xchg
xlat
mov
sahf
xchg
adcl
insl
add
fwait
std
test
mov
mov
and
xchg
rclb
xor
je
test
scas
call
sbb
lds
into
movsl
push
xor
jns
pop
mov
push
mov
inc
repz
pop
lods
leave
add
mov
sbb
out
arpl
insl
xor
js
pushf
xchg
cmp
xor
and
out
add
inc
vmwrite
fisubrl
xchg
inc
out
xchg
xor
stos
inc
pop
add
add
jmp
inc
pop
add
add
std
bound
cltd
or
jmp
adc
sub
out
std
movaps
loop
sub
jg
cmp
mov
aam
jecxz
adc
pop
inc
xor
bound
mov
sub
jp
rep
inc
inc
bound
mov
cwtl
add
aas
hlt
and
outsb
xchg
test
jmp
test
clc
aad
dec
fwait
inc
lcall
mov
hlt
rcl
std
ljmp
test
jle,pt
clc
cmp
loop
movsl
inc
and
add
mov
ljmp
mov
add
sar
out
push
xor
push
test
add
insl
repz
add
sub
cmp
and
mov
jbe
hlt
and
push
rol
test
ja
aam
mov
pop
add
xchg
insb
pmaddwd
rorl
imul
clc
add
mov
mov
mov
cltd
add
pop
sub
mov
pop
inc
sbb
xor
cli
lods
std
lcall
mov
add
cld
adc
test
fwait
xchg
mov
std
in
adc
and
fcmovnu
mov
xchg
std
call
xor
pop
popf
std
jmp
testb
add
dec
in
lods
fwait
std
call
sbb
cld
pop
test
iret
and
out
push
push
in
int3
test
dec
mov
outsl
cs
add
je
push
push
lcall
ficoml
xchg
inc
pop
adc
repnz
popf
sbb
sti
mov
test
add
sbb
sub
sbb
stos
push
hlt
out
add
mov
pop
jnp
aam
add
add
add
adc
out
popf
loope
loope
pop
inc
add
jle
pop
pop
add
out
xchg
pushf
mov
cmp
adcl
cmp
fidivl
jle
sub
jle
adc
test
jnp
and
addl
dec
icebp
rcrl
add
add
jg
rorl
aad
scas
jmp
add
orl
add
adc
add
sbb
test
jg
add
mov
out
or
or
jnp
test
test
add
cli
push
add
jle
ja
outsb
notl
mov
test
pop
or
xchg
add
add
pop
add
add
inc
mov
add
push
cltd
or
add
mov
insl
inc
cld
jne
lret
loopne
cmpl
add
dec
or
pop
add
arpl
orb
clc
add
out
inc
scas
ret
jecxz
pop
fdivr
or
cltd
std
jl
fwait
cmpsb
stc
or
inc
xchg
add
jle
sbb
std
jmp
mov
mov
add
fisubl
pushl
cwtl
sub
mov
push
pop
cltd
mov
pop
cmp
add
xchg
repnz
pushf
mov
std
decl
pop
add
adc
jge
pushf
call
cli
mul
fnstsw
std
or
pushf
dec
mov
xchg
test
flds
mov
nop
das
dec
add
dec
jecxz
mov
xor
pop
ret
inc
repz
bnd
mov
xchg
sub
xchg
cmp
out
pop
cmc
push
sbb
out
push
cmc
out
pop
jns
inc
nop
aas
fisttpl
push
add
jle
xchg
les
ss
pop
xchg
faddp
add
insl
lds
hlt
bound
dec
mov
mov
xor
sbb
jg
push
adc
add
test
movsb
movsb
test
xor
push
cmc
es
aam
repnz
add
adc
fdivrp
imul
les
jmp
cmp
bound
loopne
xchg
mov
std
rolb
add
add
jge
push
jmp
mov
fnstcw
dec
rcrb
loopne
xchg
mov
add
test
add
push
nop
cli
mov
inc
pop
rdtsc
mov
cmp
jns
sub
fldcw
inc
data16
ljmp
call
jle
decl
pop
in
dec
jmp
addb
mov
jl
cld
add
lock
testb
rorl
jnp
or
std
push
jnp
std
in
aad
xor
push
mov
cmp
lret
jge
jmp
inc
aas
jo
cmp
pop
fcompl
mov
adc
inc
pop
inc
enter
cltd
std
ss
add
sbb
repz
std
call
and
push
add
insb
add
testb
out
xchg
pop
or
inc
out
cmpsw
mov
push
aas
insb
sahf
cltd
jbe
rorl
std
dec
mov
fildl
add
cltd
std
gs
dec
jo
lds
call
mov
mov
arpl
iret
out
mov
jmp
add
outsl
dec
loop
rolb
in
add
cmp
sbb
test
inc
inc
mov
mov
xor
decl
lea
ret
repnz
push
mov
jmp
sub
push
xchg
sti
pop
sub
xchg
push
mov
mov
mov
push
mov
les
jecxz
mov
test
adc
add
clc
jmp
jmp
inc
mov
and
or
js
lret
addr16
xor
dec
stc
cltd
ret
faddl
test
pop
imul
sub
mov
push
jle
ficomps
or
bound
jne
push
or
and
xor
mov
xchg
adc
out
fs
test
jg
add
add
dec
inc
push
sti
mov
shr
jecxz
inc
ret
sti
cltd
jnp
lods
sahf
popf
add
xchg
or
call
sbb
lea
xor
insl
pop
test
std
adc
add
flds
outsb
add
mov
nop
inc
cld
add
mov
fildl
inc
or
cmpl
cmp
adc
shll
or
cmp
fwait
sti
mov
idiv
in
test
jo
out
test
jg
sti
push
std
lcall
std
clc
push
lods
ja
les
jg
pop
insb
movsl
mov
jbe
mov
fwait
xchg
test
jmp
jns
xchg
test
xchg
mov
stc
mov
mov
subl
in
imul
std
pop
jecxz
fs
sbb
lret
std
jl
adc
je
hlt
inc
in
imul
in
push
mov
sub
mov
fiaddl
test
inc
jae
sub
lds
push
mov
fiadds
add
add
xchg
pop
add
orl
add
add
fs
mov
jp
into
jae
xchg
out
mov
enter
jo
out
pushf
lds
add
add
sbbb
inc
outsl
xchg
cld
xchg
mov
lcall
sar
arpl
int3
mov
add
dec
jb
loop
jmp
jns
arpl
outsb
dec
cmp
in
shlb
sbb
pop
subl
jp
or
add
ficoml
add
and
add
adc
add
adc
add
jle
fistpl
std
jp
adc
jmp
insb
test
loopne
out
pusha
sbb
test
push
bound
or
inc
xor
cmp
mov
cmp
test
or
inc
jbe
pop
es
outsb
cmp
xor
mov
cld
aas
add
mov
orb
dec
clc
inc
ret
xor
cld
ljmp
cltd
mov
jmp
xor
decl
mov
incl
outsb
pushl
cld
ds
in
orl
orl
call
call
jns
sbb
or
xchg
loopne
int
loopne
push
push
call
dec
incl
imul
dec
sahf
sbb
jnp
xchg
fistpll
mov
icebp
cmp
or
movswl
xlat
push
testb
mov
xor
and
divb
mov
std
incl
dec
jnp
in
inc
sarb
add
fwait
daa
jmp
jge
xchg
stc
data16
sbb
jne
pushf
ud2
cmp
sbb
roll
out
pop
add
sti
add
jg
adc
out
push
mov
jl
push
jl
push
stos
ss
in
push
mov
jp
pop
loop
rolb
out
fisubl
ss
iret
outsb
cmp
inc
ss
push
mov
test
lret
mov
sbbb
ljmp
das
ret
or
adc
mov
add
add
push
popa
or
movb
pop
verw
lret
pop
and
jb
mov
aas
gs
add
call
popa
ss
adc
test
daa
adc
add
cltd
jp
xchg
js
add
enter
push
pop
out
or
or
sub
popa
or
adc
or
repz
cmp
add
outsb
add
inc
mov
shlb
jae
stc
mov
add
clc
cmp
add
mov
jg
cld
mov
lret
loopne
test
add
dec
jo
pop
mov
clc
incb
lret
loopne
lea
lods
ds
lods
pushf
stc
mov
stc
incl
inc
mov
mov
call
icebp
and
add
add
cmp
ret
add
cld
add
jle
repnz
repnz
hlt
sbb
or
in
pop
cld
pop
pop
jns
adc
std
or
in
int
in
pop
aad
mov
lcall
imul
push
sahf
xor
ja
xchg
jecxz
mov
fdivp
cmp
sbb
or
add
mov
out
repnz
or
mov
bound
mov
imul
mov
std
jmp
dec
jae
scas
loopne
push
dec
jns
insl
sub
pop
mov
cmc
cmpsb
les
jnp
insl
sub
inc
fidivrs
xor
fidivrl
add
add
mov
js
push
pop
jns
push
ljmp
or
in
push
lods
movsb
jp
pop
loop
fadds
lahf
dec
call
bound
repz
fwait
push
lods
sub
mov
mov
adcb
ljmp
das
ret
or
push
pop
and
repnz
test
push
pop
or
lret
gs
verw
xchg
sbb
mov
in
or
or
test
adc
pop
jmp
add
sub
jge
and
sbb
add
adc
inc
xor
jb
or
jle
jmp
add
push
adc
xchg
mov
cmc
roll
test
lods
fdivs
ja
insb
xlat
mov
inc
mov
outsb
add
roll
into
and
dec
sbb
lret
loop
jmp
pop
add
cmpl
push
mov
sti
ljmp
addl
push
jmp
shll
in
cmp
and
jge
rcrb
decl
jae
stc
incb
syscall
mov
inc
sub
dec
in
sub
add
lods
push
sub
add
es
pop
lods
mov
repnz
fcmovnu
test
push
pushf
push
insb
and
mov
mov
loopne
out
sbb
testl
dec
add
cmp
test
adc
cld
xchg
gs
adc
or
nop
inc
pop
loopne
rcrl
push
mov
push
push
leave
repz
and
add
add
out
aas
pop
insb
cmpb
imul
call
inc
cmp
rolb
test
out
fwait
mov
add
xchg
cltd
ret
cmpps
mov
push
cli
rolb
pop
add
js
out
out
or
adc
jg
and
sbb
add
dec
add
xchg
add
add
lods
in
fdivl
push
pop
popa
movsl
test
push
or
and
push
test
movl
into
adc
sub
lock
bound
sbb
lock
sbb
sbb
psubsw
mov
add
adc
add
xchg
mov
xchg
xor
psubsw
push
test
imul
add
mov
flds
adc
or
add
jmp
adc
sbb
aad
inc
icebp
sub
test
repnz
jmp
dec
je
out
sbb
ljmp
adc
jge
push
push
add
cmp
add
and
jb
pop
test
mov
incb
addb
add
add
push
xor
jnp
or
inc
adc
imul
incl
push
loopne
pushl
push
push
pop
mov
push
ret
addl
inc
call
mov
adcb
dec
cmc
mov
adcl
aaa
mov
xor
fcomps
pop
pushf
inc
loopne
add
pop
cs
mov
add
pop
std
fsubs
pop
ljmp
test
xlat
lcall
test
orb
imul
jge
add
mov
mov
test
mov
cmp
mov
jle
or
dec
add
fistps
jp
add
add
sbb
inc
stos
sarl
outsb
sub
pop
jnp
or
les
sbb
mov
out
add
call
or
jns
push
or
fs
add
push
clc
or
setp
sub
mov
cmp
insl
into
sbb
xchg
sbb
cmp
add
pop
jns
sbb
orl
stos
std
and
adc
out
pop
cmp
fadds
test
pop
jae
add
push
ret
psubq
xor
std
xchg
pop
sarl
push
cmp
jae
cltd
push
je
xchg
jmp
test
add
cltd
mov
push
mov
add
push
pop
dec
xchg
mov
stc
jmp
push
pop
mov
stc
pushl
push
cs
xchg
stc
jge
add
add
add
push
sub
add
sub
add
cmp
or
sub
add
cmp
mov
cmp
jecxz
cmp
xlat
daa
cmp
inc
sub
add
inc
cmp
adc
add
add
cmp
outsl
inc
cmp
xor
add
inc
cmp
sbb
add
ds
dec
cmp
pop
aas
cmp
stos
cmp
cmp
xchg
cmp
repnz
dec
cmp
pop
daa
cmp
cwtl
daa
cmp
pop
out
cmp
pop
xor
dec
int3
rorl
out
pop
lcall
addl
add
add
int
test
jg
dec
adc
inc
add
cmp
or
or
xchg
popf
add
push
out
fistpll
rclb
std
call
pop
xor
fscale
inc
add
mov
pop
push
pop
std
lret
dec
or
inc
int3
pop
sbb
mov
mov
insb
dec
mov
ja
pop
add
jbe
pop
popa
rolb
push
mov
fadd
jbe
adc
mov
push
rcr
dec
inc
or
movsl
dec
jecxz
mov
fstpt
sbb
stos
jbe
or
shl
xlat
cmc
std
mov
lret
cld
iret
pop
iret
and
insl
iret
sbb
insl
iret
or
pop
jns
jle
adc
outsb
mov
push
hlt
jmp
les
add
add
cmp
mov
sbb
jbe
cwtl
and
test
mov
adc
ss
xor
dec
ss
pushf
mov
movsb
sbb
ja
adc
dec
in
xchg
rcrb
cmp
cmc
add
cltd
xchg
or
jg
or
sbb
mull
fwait
inc
stc
xor
pop
into
sub
xor
add
add
xor
int3
pop
mov
cltd
icebp
jae
or
sahf
and
adc
add
insw
lock
mov
add
js
add
pop
xor
js
and
cmp
fisttps
lods
ljmp
jne
rcll
test
mov
xlat
jnp
outsl
in
add
add
loop
std
incl
lea
add
ds
xor
mov
fdivrs
pop
xor
std
sbb
jle
add
push
mov
cs
sub
jnp
rcll
add
pop
fwait
std
test
or
pop
cs
ljmp
cmp
sub
inc
pop
ficompl
pop
pop
std
sub
mov
push
pop
cs
add
in
mov
push
add
call
ficompl
pop
pop
std
test
lods
and
cs
jmp
push
mov
or
inc
pop
ss
pop
pop
cs
sub
inc
pop
lods
aam
mov
jb
pop
add
mov
jge
sbb
nop
pop
filds
xor
cwtl
xchg
add
lcall
cwtl
addr16
add
add
jmp
xor
adc
jnp
inc
repnz
addr16
fiadds
out
xchg
or
out
ljmp
xchg
xchg
daa
add
dec
test
rdpmc
sti
xchg
and
add
out
pop
xor
jle
pop
daa
add
rcl
mov
and
jmp
add
test
loope
and
mov
add
jmp
in
sar
int
in
out
lcall
push
add
ret
sbb
xchg
movsl
and
cmp
bound
out
push
pop
or
imul
adc
adc
test
inc
jmp
adc
sub
sub
jg
test
das
or
sub
and
jmp
in
cs
sub
jns
rcll
add
jle
sbb
flds
or
xor
mov
mov
popf
mov
jecxz
add
add
add
mov
inc
out
cmp
idiv
jge
add
in
roll
add
add
sti
cmp
jp
mov
test
jns
pushl
ds
mov
mov
testb
pop
std
sub
mov
xlat
pop
jp
push
or
xor
mov
xlat
pop
sub
pop
pop
std
sub
fidivs
ljmp
int3
push
xchg
sub
adc
in
sbb
pop
std
call
cld
sub
sbb
mov
push
pop
les
hlt
je
pop
sbb
jecxz
jp
pushf
xchg
or
add
or
loopne
setl
cld
out
cmp
stc
adcb
call
out
add
jns
js
xchg
das
stc
test
jnp
add
lods
or
insb
leave
jl
jg
pop
fsubr
pop
addb
add
add
in
add
test
insb
out
add
jns
js
xchg
scas
clc
and
add
add
das
daa
jl
xchg
roll
pop
jns
fwait
add
mov
add
jns
movsb
and
xor
mov
lret
xor
add
push
dec
bound
mov
jb
cli
test
lds
add
or
std
sti
ret
mov
add
in
sub
jno
std
call
dec
stc
fidivrs
mov
jg
cltd
movl
or
jmp
out
add
cmp
mov
add
jle
and
jmp
pop
xchg
adc
pop
xchg
sbb
mov
aam
jmp
xor
pop
adc
add
or
mov
pop
xorb
push
mov
rorl
xchg
mov
pop
stc
call
movb
jo
xchg
mov
pop
in
fistpl
call
dec
test
ret
and
int3
int3
inc
and
int3
add
int3
int3
mov
jmp
loop
adcb
test
inc
lahf
add
es
fisttpl
arpl
push
cmp
mov
jne
push
mov
or
std
xchg
loope
inc
or
std
xchg
sarl
sbb
std
xchg
sarl
sbb
std
xchg
lahf
jb
jmp
jecxz
push
add
test
imul
mov
imul
pop
mov
add
pop
sbb
pop
add
subb
add
out
inc
push
insl
xor
add
sarb
rolb
add
xchg
sub
ret
add
pop
and
mov
imul
mov
lock
inc
xchg
sbb
cmp
inc
jp
sub
jp
bound
push
pop
das
xchg
add
scas
dec
call
add
inc
je
fsts
shr
stos
xor
js
repz
call
test
jge
das
push
stc
and
rorl
add
and
test
fnstcw
loop
add
push
leave
cmp
adc
add
cmp
adc
jae
shll
add
pop
dec
xchg
pop
add
imul
jmp
stos
add
adc
pop
stc
bound
push
jbe
gs
mov
push
mov
stc
fdivs
out
jae
xor
fstps
mov
add
add
aad
out
sbb
loopne
pushf
loope
pop
pop
mov
cmc
add
cli
bound
sbb
into
cmp
dec
rorl
mov
test
cltd
call
call
or
jge
fldcw
in
insb
mov
sub
inc
mov
stos
mov
lret
push
mov
cmp
fldt
cmp
sarl
in
xchg
pop
push
dec
imul
mov
imul
stc
mov
xchg
ja
sbb
icebp
add
rolb
add
out
repz
enter
pop
add
adc
rcll
rcll
jnp
push
iret
out
sahf
popf
imul
add
add
add
mov
popa
or
ret
xor
popf
stc
xor
sahf
fbstp
lods
sti
popa
push
add
mov
out
cli
sub
hlt
int
call
xchg
sbb
out
filds
into
adc
in
ljmp
out
mov
inc
in
add
setne
fs
add
pusha
jge
add
js
jge
add
adc
test
clc
push
pop
add
js
pop
data16
inc
aad
lret
pop
pusha
int3
xor
pop
dec
sub
push
dec
add
int
jb
or
mov
dec
pop
stc
push
jge
pop
cmc
push
push
add
adc
add
push
mov
sbb
add
add
add
xorb
adc
jge
adc
cmpl
pop
stc
jmp
jo
or
test
adc
hlt
rolb
mov
pop
and
or
dec
push
or
add
shll
pushl
xchg
mov
incl
add
add
sub
ret
mov
mov
push
push
add
arpl
push
push
pop
or
lods
push
add
repz
jmp
hlt
testb
scas
cwtl
pop
repz
incl
push
sbbl
add
stc
ljmp
stc
push
cmp
shll
test
pop
mov
imul
or
mov
jl
or
int
push
cmpsl
rorb
add
insb
cmp
divl
mov
clc
call
imul
loope
jns
push
imul
inc
das
icebp
subl
decl
js
mov
gs
ljmp
std
call
hlt
push
dec
xchg
jne
shll
std
decl
adc
sti
fs
lcall
mov
psrld
add
icebp
popa
lea
out
sti
jns
cltd
icebp
add
mov
adc
mov
insl
in
add
scas
sti
xchg
jno
push
pop
add
push
mov
and
callw
xchg
negl
shl
adc
js
or
jl
xchg
roll
pop
mov
xor
add
pop
adc
pop
cmpsl
addr16
in
add
loopne
pop
xchg
mov
add
add
rcrb
insb
nop
mov
pop
add
mulb
push
add
and
add
sub
jl
popf
or
add
call
jb
repz
xchg
lret
xlat
bound
movsb
cltd
adc
adc
push
std
outsb
cmpb
or
add
mov
int3
jl
mov
daa
or
call
int3
repnz
fsin
aas
bound
add
mov
cmp
jecxz
push
mov
mov
mov
rcll
pop
add
sub
test
xchg
fidivrs
clc
pop
push
mov
or
inc
or
jno
push
incb
adcl
jg
rolb
mov
lock
pop
adc
imul
or
add
push
add
dec
or
mov
ret
mov
icebp
loope
mov
push
pop
bound
mov
cmpb
adc
imul
push
hlt
mov
imul
mov
shll
adc
imul
imul
fcom
leave
jmp
clc
pop
test
jbe
mov
dec
std
lcall
idiv
mov
sbb
mov
loopne
pop
lea
ja
and
or
out
lcall
hlt
cli
inc
or
mov
mov
fwait
cli
xor
sub
pop
pushf
pop
jmp
add
and
mov
inc
fldl
pop
fcoml
cli
clc
push
orl
lcall
cli
fcoms
mov
inc
in
xchg
add
lret
pusha
pop
lret
add
mov
xor
add
mov
in
jmp
lcall
mov
test
outsl
jge
push
pop
push
stc
jb
sti
xchg
and
push
stc
bound
addr16
inc
movsb
adc
loope
int3
inc
xchg
xchg
in
pusha
movsb
xchg
adc
adc
xchg
jnp
call
out
sti
popa
out
push
stc
push
push
call
add
sbb
add
jge
ret
add
bound
leave
pop
mov
cld
call
dec
or
addl
pop
stc
incl
jne
add
add
cmc
cmp
add
pop
test
test
mov
mov
incb
mov
inc
loop
push
sub
sub
in
int3
out
test
lea
mov
dec
cld
cwtl
jl
mov
into
pop
test
cwtl
push
fisttps
scas
pop
add
mov
jecxz
adc
pop
mov
xchg
popf
push
jge
fists
imulb
fs
dec
pop
rol
jecxz
popa
insl
mov
mov
add
pop
out
test
xchg
push
and
aam
popf
lret
xchg
adc
pop
mov
jecxz
or
mov
pop
mov
sub
jno
jo
aad
test
jns
xchg
mov
and
xor
xor
mov
add
mov
jge
pop
repnz
lods
xchg
add
pop
add
add
pop
add
adc
pushf
adc
mov
pop
add
push
mov
add
add
add
test
push
xchg
pop
push
push
stos
mov
sarl
sub
ds
mov
mov
leave
adc
mov
adc
mov
add
enter
ss
sbb
mov
xrelease
in
ja
hlt
call
xchg
mov
jmp
adc
jmp
popf
mov
mov
adc
stc
call
incb
lcall
mov
jo
mov
jmp
in
lock
in
xchg
jnp
xlat
add
test
dec
stc
mov
mov
gs
loop
cmp
pop
or
push
add
mov
add
add
add
mov
jle
cmpl
inc
or
inc
cmc
mov
adcb
mov
lods
fnstsw
ret
jp
mov
mov
mov
add
ds
adc
loopne
aaa
test
roll
xchg
push
test
jge
sti
xorl
jne
pop
jge
shlb
pop
test
xchg
test
xchg
jg
std
decl
repz
adc
repz
sbb
test
loopne
mov
add
push
mov
sub
fdivrs
hlt
sahf
lods
cwtl
adc
pop
jecxz
cltd
adc
cmp
loop
xchg
mov
cmp
adc
pop
adc
dec
mov
or
loopne
mov
push
in
fnsave
pop
je
shll
dec
clc
out
xor
pop
pop
int
in
jno
repz
add
xchg
jno
add
stc
outsb
clc
sbb
lock
and
cmc
insl
mov
jp
hlt
fwait
jae
repnz
dec
pop
hlt
cli
aaa
or
aas
mov
add
add
mov
mov
imul
pop
add
dec
add
mov
add
sub
lock
jmp
add
add
add
pmaxsw
test
jecxz
xchg
jge
add
jb
pop
dec
sarl
ret
mov
add
jmp
fmull
push
mov
jecxz
sarb
int3
cmp
pop
jge
inc
mov
pop
test
dec
inc
dec
stc
fidivs
add
add
dec
test
mov
imull
cwtl
fdivr
decl
push
cmp
mov
push
add
jge
cld
cmp
add
mov
jl
lods
insb
adc
mov
mov
xor
dec
jge
data16
orb
add
jno
cwtl
mov
cs
sbbl
jo
mov
add
push
test
jbe
adc
testb
push
or
and
pop
cmp
mov
rclb
in
cmp
jno
insl
mov
leave
loop
mov
pop
inc
sbb
ja
std
decl
clc
mov
or
mov
pop
std
mov
pop
std
cmp
sbb
add
flds
js
or
push
mov
iret
filds
cmpsl
mov
decl
cwtl
jg
std
decl
pop
inc
add
repnz
jg
icebp
add
jge
out
fwait
mov
mov
rep
jae
out
out
inc
ficoml
fistl
sub
mov
loopne
xchg
out
out
pop
lods
insl
pop
add
xchg
insl
dec
popf
ret
test
cltd
jo
jmp
add
testl
nop
scas
mov
dec
std
loop
mov
dec
jo
jo
mov
xchg
mov
dec
out
dec
dec
repnz
jge
sbb
sbbb
rcll
xchg
imul
loope
out
jb
xchg
jmp
add
adc
sbb
test
jg
dec
mov
push
xlat
adc
in
sarb
xor
call
or
call
std
sbb
jle
test
stc
jb
mov
adc
jle
cltd
xchg
sub
mov
bound
mov
add
sub
push
sub
data16
pop
or
ljmp
incl
in
inc
ret
cwtl
ja
stc
jmp
add
jmp
add
ljmp
stos
adc
mov
inc
lock
add
push
jnp
mov
push
int3
out
cli
scas
mov
mov
mov
out
cmc
xorl
clc
iret
sbb
ds
add
data16
aas
pop
aam
or
jo
scas
adc
pop
std
mov
pop
std
ljmp
test
push
dec
jp
loopne
or
movsb
pop
scas
jno
sub
stc
xchg
jge
nop
jg
std
decl
or
std
test
test
pop
mov
add
mov
lock
rcll
push
psrlq
push
mov
push
inc
add
in
and
outsb
jns
push
pushf
scas
fcoml
jb
in
inc
inc
outsb
scas
cmp
outsl
fwait
outsl
in
out
xor
pop
mov
fsubrl
imul
pusha
jne
outsb
fwait
and
jp
xchg
and
out
shrb
pop
mov
jg
add
jl
push
add
sbb
mov
cmpsb
add
inc
cmp
mov
out
cmpsb
or
add
stos
jecxz
sahf
fldt
cmc
xor
jg
stc
inc
std
mov
flds
pop
cmc
jo
scas
jmp
call
fsub
cmpsb
push
lock
mov
jmp
sarl
popa
xchg
call
sub
pop
bound
mov
jmp
add
push
adc
pop
icebp
jnp
mov
fildl
stc
popa
jne
in
adc
bound
cmp
push
jns
lock
call
cmp
xlat
adc
push
bound
cmpsl
mov
mov
xor
int3
xchg
gs
sub
add
lret
jle
inc
add
pop
jl
outsb
sub
inc
mov
jl
pop
add
movsb
pop
adc
add
ljmp
jnp
mov
cmp
pop
xorl
insb
and
addl
add
sti
xor
mov
in
mov
ljmp
add
int3
insl
mov
fiadds
movsl
mov
mov
out
inc
scas
mov
add
inc
int3
arpl
mov
xchg
mov
xchg
cwtl
popl
decl
jne
push
add
pop
std
test
inc
jl
pop
mov
push
or
into
dec
jbe
mov
mov
adc
sub
xor
test
mov
je
add
sub
clc
push
pop
test
lahf
add
cmpsl
jp
add
frstor
aas
dec
dec
mov
arpl
aas
pop
dec
pop
jnp
sbb
add
test
cltd
scas
jp
add
lea
clc
xchg
lret
adc
jp
add
pop
clc
fwait
rcr
add
mov
repz
dec
shl
fwait
leave
fidivrs
insl
imul
add
add
push
idivb
jne
outsl
mov
jge
add
frstor
aas
jecxz
sub
fisttpl
pushf
and
dec
xchg
sbb
fcomi
stc
mov
cmp
sbb
sbb
fld
adc
or
dec
adc
mov
sub
jno
adc
sub
test
mov
xor
jno
adc
sub
pop
test
popf
roll
jb
xor
sub
mov
or
inc
cmc
test
mov
bound
movb
adc
cmc
rolb
pop
mov
lret
int3
cmpl
repz
add
outsb
sbb
lea
inc
pop
mov
sbb
data16
pop
add
sarb
clc
cmp
xor
inc
mov
icebp
add
and
ret
call
sarb
jmp
cmp
in
ret
lret
int3
cmpl
inc
jae
mov
movsb
lods
or
cmp
dec
mov
sub
incl
pop
sub
rclb
call
cmpsb
sub
cmp
sub
sbb
pop
sub
out
std
lcall
sub
xchg
mov
out
idiv
sub
js
sub
adc
mov
mov
adc
pusha
aaa
jge
jnp
clc
sub
dec
xchg
ret
adc
mov
fsubs
out
add
mov
pop
or
add
out
pop
movsb
outsl
clc
xchg
inc
imul
push
out
pop
cmp
out
push
mov
xchg
cmc
push
adc
je
fdivrl
sub
clc
cmp
lahf
xor
cmpl
push
sub
pop
push
cmp
dec
add
mov
pusha
call
in
add
add
bound
xchg
aas
cwtl
pusha
loop
add
lcall
jno
test
add
andb
add
int3
cmp
xor
in
aad
jmp
scas
add
push
std
adc
test
adc
jmp
add
cmp
push
adc
cltd
bound
bound
mov
jmp
lods
verw
cltd
inc
add
adc
push
mov
push
cld
push
pop
cmc
orb
mov
adc
incl
mov
pop
adcb
mov
es
scas
inc
arpl
cmc
mov
mov
popa
enter
test
add
push
incl
popa
mov
testb
adcb
adcb
jns
mov
incl
jmp
mov
or
out
arpl
negb
jo
jecxz
call
xor
shr
xor
lret
lcall
pop
sub
stos
sub
jmp
cli
call
add
das
std
call
sub
stc
lcall
out
push
inc
stc
xchg
fs
mov
sub
ljmp
inc
pop
and
mov
out
pushl
cs
call
push
aad
imul
lds
dec
pop
cmpsb
ret
add
faddl
pop
add
adc
jo
and
and
out
pop
jbe
lret
out
inc
repnz
sbb
fs
jg
out
cmp
ret
popf
push
add
fsubs
mov
adc
jns
adc
add
inc
pop
bound
popa
fwait
and
inc
mov
push
inc
stos
aaa
dec
inc
cmp
inc
lea
xchg
mov
and
dec
add
dec
rolb
testb
mov
jp
jmp
mov
add
pop
rclb
popa
mov
jno
jmp
cmp
adc
add
inc
cmpsb
cmp
aad
scas
fnstenv
inc
bound
out
jle
stc
xchg
ja
jo
jbe
jmp
dec
jg
xorl
inc
add
cs
scas
xchg
cmp
test
mov
std
pop
stos
jne
add
add
dec
ds
add
jne
add
sti
pop
mov
mov
int3
sub
lret
int3
sub
lret
int3
mov
jmp
jae
push
jmp
ljmp
push
insl
mov
insb
or
add
push
add
inc
cmc
add
add
mov
cli
je
fucomi
stc
pop
rolb
xor
or
jns
test
adcl
les
mov
call
pushf
xchg
adc
sub
mov
std
call
inc
out
ljmp
int
cli
in
sahf
mov
pushf
sbb
add
and
jno
mov
or
test
push
inc
cltd
stos
out
ss
stc
xchg
in
out
sub
call
stc
or
adc
or
mov
mov
lret
push
sbb
dec
or
xor
fwait
inc
or
aaa
mov
lock
imul
ss
mov
add
mov
nop
out
call
mov
js
jbe
add
xor
int
xor
xor
imul
xor
add
pop
and
mov
add
mov
out
xchg
mov
in
add
mov
sbb
add
push
lds
sbb
out
out
stc
insb
add
rorb
jmp
imul
jbe
cmp
add
jg
mov
aam
xchg
xchg
sub
cmpsb
mov
fisubs
adc
xor
jmp
pushf
verw
das
rolb
popa
mov
or
jmp
mov
xchg
or
pop
adc
add
jp
lea
add
xchg
adc
int
data16
mov
shrl
jmp
inc
cmp
push
incb
out
test
jge
pop
mov
out
call
mov
add
xor
push
push
push
pop
inc
jmp
lret
int3
imul
add
cmovg
fdiv
ljmp
jp
outsl
jp
mov
adc
mov
cmp
xchg
push
xor
pop
sub
stc
pop
sub
notl
sub
stc
pop
sub
pop
or
ficompl
and
push
pushf
xor
or
dec
jbe
or
test
adc
aad
arpl
movsb
sti
sub
call
sbb
add
cld
mov
loope
stc
pop
sub
stc
pop
sub
xchg
sbb
jo
sub
mov
inc
loopne
add
inc
jb
cmp
adc
or
or
push
add
adcb
jo
inc
cmp
lea
cmp
add
jp
add
pop
add
add
jns
add
out
call
fsub
add
add
in
enter
test
ljmp
fsubr
add
add
call
adc
jmp
adc
fdivr
loopne
cmp
and
je
lock
std
mov
je
jecxz
cmp
mov
sbb
std
mov
daa
je
in
cmp
mov
sbb
std
mov
je
out
cmp
mov
sbb
std
mov
cmp
and
or
stc
data16
mov
fildll
xor
cmp
add
inc
sbb
mov
out
jo
fisubrs
or
push
sub
and
or
cltd
idiv
push
push
test
add
add
sti
add
jp
outsb
add
mov
pop
sbb
add
icebp
add
icebp
add
push
cmp
add
add
push
add
lods
push
lock
add
icebp
add
lods
push
testb
xor
lods
push
movl
push
mov
icebp
add
hlt
lods
push
movsl
add
add
lods
push
pop
and
or
adc
or
adc
or
adc
jle
pop
sbb
jge
sub
or
cmpsb
push
je
sub
adc
ret
cld
das
hlt
mov
outsl
or
sub
sbb
stc
adc
jne
xchg
pop
jge
lock
daa
or
jle
or
call
mov
arpl
mov
rorl
mov
lcall
or
jnp
mov
add
loopne
cmp
pushf
sete
pop
setb
out
mov
add
mov
int3
movsl
push
pop
cmp
sbb
out
gs
jp
call
add
jp
call
xchg
mov
pop
add
mov
repnz
and
or
jnp
out
xorb
add
inc
jmp
pop
mov
call
pushf
aaa
pusha
outsl
loope
jb
cltd
mov
mov
test
dec
dec
jge
push
test
xchg
lds
call
adc
push
mov
sub
popf
mov
icebp
sbb
jo
loope
out
int
scas
popf
into
and
lahf
mov
jb
out
hlt
mov
dec
pop
sti
mov
fcomi
lret
and
jmp
adc
stc
negb
mov
in
xor
add
std
push
dec
add
or
js
and
jne
add
insl
sbb
add
lods
out
addb
clc
adc
testb
add
jle
add
std
add
jne
jnp
xor
xor
subl
push
jbe
ret
idiv
add
lods
ret
stc
rclb
decl
pop
and
ret
add
inc
mov
dec
adc
or
pushf
push
flds
pushf
aas
mov
test
std
sub
fdivl
pop
inc
adc
adc
je
sbb
fadds
or
xlat
aaa
jo
mov
or
ss
pushf
cmc
fbstp
push
fstp
sbb
fbstp
test
cmp
test
adc
xlat
cwtl
push
mov
add
mov
lret
sbb
inc
pop
add
mov
out
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
pop
add
add
add
or
add
sbb
add
stc
pusha
sub
mov
pop
add
cmp
ret
inc
sub
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
outsb
sub
pushw
sub
pop
push
sub
push
sub
mov
aam
gs
xchg
mov
add
jge
or
push
lds
jg
int
jle
flds
mov
or
cmp
test
add
lret
sbbb
insb
add
sub
sub
jo
pop
pusha
push
in
popa
adc
mov
xchg
call
add
mov
inc
int3
loopne
jge
and
jne
sub
sub
and
orb
push
adc
test
ja
cmp
xor
inc
sbb
and
lods
or
jle
and
or
sbb
movl
sbb
jno
adc
add
add
loop
sub
les
aas
mov
fldl
call
push
xor
int
add
sbb
test
adc
dec
or
xor
xor
std
pop
pop
jle
push
and
scas
inc
add
add
xor
aaa
xchg
ret
cmp
stos
imul
sbb
call
and
jg
jle
adc
mov
loop
es
push
mov
call
sbb
push
push
push
mov
call
sbb
push
int3
adc
or
test
hlt
repnz
mov
cmpsb
adc
and
sub
fsubrp
loop
jp
xchg
xchg
xor
imul
sub
daa
pop
adc
popa
out
add
inc
into
adc
out
movl
adc
jle
add
add
push
scas
lret
stc
popa
mov
mov
es
mov
adc
add
adc
insl
inc
popl
out
pop
push
int3
cli
dec
push
aas
dec
adc
push
cwtl
int
or
xor
jae
sub
jns
xchg
xor
out
out
add
loope
lret
add
sahf
push
mov
adc
aaa
jmp
arpl
out
push
add
adc
fcomip
push
hlt
test
bound
subb
aaa
loopne
add
lret
push
adc
add
out
dec
rcr
push
ret
sbb
daa
leave
add
jge
lds
rcll
loope
and
cli
jge
adc
add
loope
add
aad
repnz
jns
mov
add
add
add
in
icebp
mov
jmp
jge
clc
je
sub
push
jb
dec
inc
cmp
add
add
jl
lods
js
add
sti
xchg
jnp
mov
out
idiv
inc
inc
or
out
ljmp
fisttps
jecxz
shl
sbb
jmp
xchg
call
xchg
add
pop
sbb
iret
testl
sbb
cs
sbb
icebp
lock
mov
add
add
push
inc
or
sbb
jge
xor
fidivrl
sti
add
mov
les
icebp
in
out
push
in
fnstenv
movsb
mov
fsubr
lods
jno
inc
cmp
movl
dec
add
sub
fcmovb
pushf
pop
loope
sub
mov
sub
xor
ja
call
push
xlat
cmpsl
add
add
add
mov
push
daa
xlat
mov
fcmovnu
into
out
pop
lods
out
cs
jle
xlat
xchg
jle
cs
jle
sbb
and
xor
xchg
mov
out
repnz
push
xchg
ret
repz
sbb
push
fsubrp
push
test
loop
pusha
jle
jecxz
adc
mov
or
add
dec
aaa
repz
add
push
inc
pop
add
and
out
inc
test
xchg
clc
mov
push
cwtl
adc
rcrb
stc
jnp
or
sbb
push
sbb
jmp
add
inc
sub
test
cmp
je
pop
dec
mov
out
push
out
or
test
int
and
aaa
push
dec
mov
fistl
lods
repnz
add
jl
ud2
in
das
xchg
inc
and
xor
mov
and
jp
push
fwait
rolb
in
jnp
and
sbb
decl
sub
add
cmpsb
cmc
push
test
in
je
add
shrl
rorl
les
call
fiaddl
add
fwait
jae
ficompl
and
lods
add
incb
mov
add
add
loope
je
mov
inc
dec
cli
mov
pushf
add
cmp
addb
jmp
and
push
sbb
cmp
clc
je
mov
jnp
inc
mov
loopne
cmp
cwtl
outsl
incb
adc
inc
add
je
pop
sti
and
cmp
test
jb
or
lods
and
add
jl
or
mov
test
movsb
sbb
icebp
mov
test
mov
or
lods
and
and
inc
or
fmull
lcall
and
sub
test
xchg
sbb
mov
movsb
cmp
xchg
outsb
mov
push
test
pop
add
cmp
popf
ret
xchg
ficompl
popa
cwtl
fistpl
cmpl
aad
int
mov
xchg
xor
mov
xor
daa
jnp
in
ljmp
rolb
pop
jmp
fcmovbe
fidivl
xor
mov
call
sub
aaa
xor
push
fidivl
ljmp
fsts
cmpl
cmp
xchg
and
add
out
push
sub
jge
push
mov
adc
add
inc
data16
push
add
adc
mov
adc
add
daa
push
aam
push
push
mov
adc
add
add
faddl
push
mov
adc
add
int3
add
push
test
outsl
ret
add
add
sub
sbb
jmp
cmp
xor
ds
sub
es
push
cmp
cmpb
push
cmp
fildl
pop
cmc
insb
adc
rolb
adc
rolb
or
sbb
add
add
rcrl
jl
out
mov
add
add
insl
rolb
jnp
jo
inc
cwtl
popa
cmp
iret
insl
or
into
jp
add
xchg
sbb
mov
jp
in
outsl
add
dec
sbb
or
mov
dec
or
pop
es
test
jge
push
sub
decl
push
push
repnz
mov
push
out
cmp
dec
pop
js
xchg
push
stos
test
cmp
mov
push
jmp
rolb
outsl
xchg
mov
xchg
fidivl
inc
outsl
xchg
mov
sub
and
decb
pop
and
or
add
dec
push
aad
pop
test
jp
sahf
add
pop
jb
xchg
lds
xchg
lds
pop
xchg
jecxz
aam
outsb
cmp
inc
xchg
fcoml
inc
movsb
adc
xlat
add
add
jg
lcall
add
lret
call
inc
int
enter
add
add
out
pop
xchg
jecxz
xchg
sahf
or
xchg
jmp
dec
cmp
pop
cwtl
mov
out
lcall
out
xchg
dec
inc
adc
insb
lock
or
xor
or
add
xchg
add
sbb
popa
mov
test
pop
sub
outsl
cld
sbb
jmp
shl
call
ror
add
sbb
mov
in
mov
imul
bound
test
in
mov
dec
lcall
pop
inc
or
int3
andl
popa
pusha
pop
int3
or
and
inc
data16
add
add
inc
test
push
jge
cmc
mov
jp
mov
jmp
imul
addr16
mov
mov
inc
outsb
pushf
inc
in
push
mov
mov
jmp
pop
aad
inc
push
cmp
pop
stc
ds
cs
add
test
pushf
cmp
jno
fstl
cs
adcb
add
add
xchg
or
mov
pop
in
mov
scas
orb
gs
call
xchg
leave
out
xorb
mov
dec
xchg
cmp
add
dec
sub
mov
push
cld
cmp
std
jmp
lods
adc
mov
jl
and
jb
pop
movsb
mov
test
sbb
jae
inc
es
mov
add
add
sar
test
xor
popa
mov
inc
add
xchg
mov
test
std
mov
push
add
jp
add
or
jge
hlt
jge
xor
rorl
add
hlt
pop
cmp
dec
pop
aas
lcall
add
and
mov
dec
sub
rolb
out
mov
pop
clc
add
mov
pop
add
in
in
je
pop
pop
call
and
orb
add
add
sub
mov
cltd
mov
inc
mov
xchg
ret
jl
stc
jmp
into
bound
mov
cmp
dec
pop
add
push
psrld
or
clc
or
jb
dec
sbb
and
clc
pop
cli
push
cmp
sbb
sti
jo
adc
bound
jl
adc
jle
rol
push
stc
jmp
sti
int3
push
add
push
lea
popf
nop
icebp
cmpsb
xor
jle
inc
cmp
add
inc
in
xchg
fwait
insb
les
rorl
mov
add
mov
cmp
lret
sbb
push
add
inc
sbb
add
outsb
push
arpl
in
orl
fldl
push
lds
test
add
dec
mov
inc
arpl
incl
pop
sub
inc
pop
sahf
cmp
lock
jns
xchg
js
out
pop
mov
push
pushf
in
xchg
test
leave
sti
mov
jp
pop
sub
test
incb
mov
or
xchg
or
xlat
push
js
dec
call
std
call
pop
js
repnz
stc
loop
adc
cli
call
lret
aam
lock
and
add
xchg
jno
push
adc
stc
inc
mov
loop
cwtl
dec
mov
cs
popa
push
push
lret
test
adc
stos
pushf
test
and
adc
pushf
dec
movsb
and
pushf
push
rcll
inc
inc
fcoml
subb
adc
xchg
adc
xchg
scas
adc
cmp
popf
adc
pop
add
mov
cmpsl
pop
out
sub
insb
adc
and
clc
ret
pop
mov
pop
add
jmp
jg
in
inc
add
clc
fdivp
inc
int3
adc
mov
cld
stos
adc
out
push
add
bound
push
je
lahf
pcmpeqb
mov
jl
popa
fmul
xchg
add
roll
pop
pop
inc
int3
popf
dec
inc
int3
xor
pop
inc
int3
cmc
scas
test
int
clc
add
nop
imul
lds
ljmp
test
cmp
jno
pusha
jno
and
pushl
dec
clc
push
jge,pn
or
mov
cli
je
xor
inc
or
test
mov
push
test
pop
enter
adcl
sbb
or
inc
xor
insb
lock
and
cmc
out
outsb
movsb
push
push
mov
int3
dec
mov
int3
cmp
dec
mov
test
add
add
push
add
movsb
cwtl
or
or
adc
xlat
sbb
mov
sbb
jmp
sbb
jge
rclb
mov
xchg
pop
xchg
add
and
push
adc
sbb
add
sbb
ljmp
fwait
inc
adc
push
mov
jge
sbb
repz
jo
adc
inc
inc
mov
std
incl
pop
mov
movsb
sbb
pop
dec
xor
xor
dec
stc
jno
fwait
into
mov
cmc
xchg
mov
mov
inc
aas
inc
fstps
push
test
add
jnp
cld
fstps
ljmp
mov
cli
adc
arpl
pop
mov
xchg
sbb
push
into
movd
sub
rolb
add
imul
mov
pop
sbb
shll
mov
mov
mov
fcoml
mov
jb
incl
cli
or
shlb
pushl
movsb
repz
mov
push
std
subb
in
cld
sub
pop
shll
dec
sbb
mov
push
incb
add
mov
in
xchg
inc
mov
xor
stos
incb
and
subb
xlat
test
test
add
movl
push
jne
lods
adc
push
cli
push
enter
pop
jnp
lock
jns
jne
sub
btc
incl
jmp
mov
popa
or
dec
jo
jmp
sub
outsl
or
loopne
adc
push
out
dec
adc
mov
loop
mov
jmp
jl
add
insb
or
enter
mov
push
push
inc
push
or
ror
addb
dec
clc
pop
mov
inc
and
sub
inc
insl
and
mov
in
xchg
pop
hlt
mov
aad
inc
mov
nop
nop
jle
sbb
stc
in
inc
nop
adc
xchg
clc
adc
xchg
lcall
dec
add
inc
insl
and
xrelease
es
jae
test
mov
xchg
and
in
or
lahf
jo
das
add
sahf
js
xchg
or
add
add
or
lcall
dec
arpl
mov
out
jns
out
mov
mov
mov
xchg
shl
aas
out
pop
add
pop
shl
push
jp
loopne
cmpsb
pop
loope
or
add
stos
out
mov
add
or
or
mov
loopne
jg
sbb
into
adc
add
jae
inc
jge
push
daa
ja
loop
mov
fistpl
out
add
in
add
jb
add
jne
add
inc
ret
movsl
mov
adc
add
xchg
inc
sbb
pop
filds
pop
incl
jmp
adc
add
xchg
test
inc
inc
call
xor
cltd
pop
movb
add
add
jo
cmp
clc
scas
or
test
test
cmp
adc
add
scas
ret
dec
mov
and
mov
out
sbb
jbe
mov
call
push
ret
dec
push
mov
mov
sub
insl
out
rcll
push
pop
sub
jl
push
incb
cs
sub
add
sub
insl
aam
cmp
dec
mov
dec
push
les
jbe
push
loope
repz
push
ret
adc
and
dec
dec
incl
and
call
pushf
aas
or
pop
or
rorl
int3
lret
push
dec
int3
jecxz
push
push
pushf
xchg
pop
inc
xchg
mov
jmp
jmp
test
fnstcw
repz
add
add
sbb
lcall
loope
add
pop
stc
cld
popa
sub
cmp
add
nopl
and
push
sbb
popa
or
orb
lret
sti
mov
pop
xchg
mov
mov
pop
je
add
add
add
jge
jb
ja
jb
jnp
adc
add
add
jge
sub
or
push
mov
lret
xlat
inc
insl
mov
outsl
pop
mov
add
loope
add
or
sbb
decl
pop
decl
pushf
pop
xchg
mov
mov
stc
in
cli
cmc
lods
sbb
cmc
insl
shll
mov
mov
out
int3
jnp
hlt
jno
decl
pushf
fbstp
xacquire
inc
push
mov
pushf
push
stc
jmp
pop
mov
fdivp
gs
pop
xlat
stc
test
or
in
mov
mov
enter
stc
push
pushf
ret
adc
ja
push
or
repnz
mov
or
add
test
and
clc
xor
jge
add
fsub
dec
mov
out
idiv
notl
clc
jmp
push
test
cmpsb
arpl
pushl
sbb
and
xor
pop
push
mov
push
dec
xor
jnp
and
sti
mov
push
sbb
lock
leave
jp
outsb
jne
and
dec
jne
and
jnp
and
sti
mov
push
pop
or
fsubrs
leave
jp
jne,pn
and
jnp
and
sti
mov
dec
cmp
mov
ror
call
xlat
fisttps
call
fiaddl
pop
pushf
fists
mov
fisttps
out
sub
fcomps
mov
test
xchg
mov
roll
add
xor
or
adc
lea
cmp
fsts
call
push
jmp
nop
cmp
sbb
inc
sarl
pop
push
mov
push
sub
test
outsb
mov
xchg
jmp
and
pusha
sarb
add
add
imulb
out
fsubrs
es
out
cmp
add
test
es
push
sbb
or
enter
add
sub
add
jbe
pop
iret
shl
pushf
cmp
loop
add
nop
sahf
push
mov
je
and
out
aam
xchg
dec
shl
aam
test
aas
shl
aam
inc
pop
outsl
shl
xchg
and
adc
cmp
jecxz
shl
pop
add
jmp
adc
fdivrl
inc
xor
test
add
sahf
fadds
add
adc
lahf
sub
mov
cld
cmpsb
and
dec
mov
pop
push
stc
mov
repz
jmp
sbb
adc
ret
call
xchg
ljmp
and
repz
push
add
jle
push
test
xlat
xor
and
pop
inc
jae
shll
and
imul
add
add
test
mov
out
and
test
mov
out
and
cld
enter
mov
sbb
mov
sbb
rcl
int
rcl
int
or
sub
adc
or
and
out
add
sbb
cmp
sbb
jbe
inc
and
adc
adc
adc
sub
add
jne
sbb
fsubr
aam
mov
lret
add
pop
shrl
int3
arpl
mov
call
mov
pop
push
shlb
jb
pop
mov
xchg
dec
inc
and
add
mov
aas
int3
jecxz
aas
int3
fldt
rcpps
mov
add
add
add
incl
sub
add
pop
jmp
call
push
jmp
popa
cs
or
sub
arpl
xor
into
sub
into
pop
adc
mov
jl
or
in
add
add
xor
out
jmp
negl
xchg
jle
jl
push
decb
jns
outsb
stos
sbb
add
add
jae
lds
into
int3
out
aam
pusha
xor
cmp
push
add
add
pushf
add
add
inc
out
jo
pop
adc
insb
inc
add
pop
sbb
push
adc
add
jae
aas
int
jmp
loopne
iret
inc
cld
sysret
sti
clc
adc
test
inc
cmp
add
shl
mov
push
inc
cld
iret
and
clc
cli
push
ljmp
iret
and
xlat
and
repnz
dec
pop
iret
and
cli
mov
fidivs
test
pushf
repnz
mov
shlb
and
push
cmp
int
adc
rol
cmp
xor
cmc
leave
sbb
mov
sbb
add
mov
dec
push
jns
inc
sarb
sub
sarl
lcall
dec
cmp
incl
push
mov
mov
jge
add
add
pop
and
push
push
insl
jnp
push
xor
adc
cli
pusha
mov
cmp
cmp
out
repnz
loope
ret
sbb
mov
stc
cmp
aas
pop
je
mov
aam
mov
jmp
jae
and
jb
and
cwtd
and
les
pop
jno
out
arpl
sti
fsubs
or
pop
push
pop
add
jmp
mov
mov
cld
call
jmp
pop
jno
xor
subl
add
add
cmp
add
in
push
lock
in
sub
je
test
outsb
enter
adc
lret
xor
outsb
mov
xor
sbb
pusha
fsts
sbb
in
cmp
cmc
adc
xchg
repnz
xchg
inc
lret
mull
in
xor
adc
jp
push
enter
add
mov
add
pop
cs
pop
add
or
cld
out
pop
add
add
add
cmp
add
add
add
add
add
push
adc
add
adc
add
sti
clc
jne
cmp
jno
cmp
jmp
adc
clc
loope
cmp
aad
cmp
jmp
adc
clc
xor
add
sub
add
add
add
adc
clc
add
cmp
cmc
or
add
or
clc
es
inc
add
dec
inc
add
adc
add
or
clc
int3
push
add
adc
add
sub
dec
inc
inc
add
adc
add
cltd
pop
idiv
push
insl
inc
add
insl
inc
add
stc
push
idiv
out
insl
inc
add
outsb
inc
add
incl
flds
idiv
pop
addr16
add
inc
add
stc
push
idiv
and
add
lcall
pop
idiv
fldcw
add
stc
pop
idiv
je
cmp
dec
out
cmp
flds
idiv
insb
jo
add
inc
add
pop
idiv
cmpsl
mov
add
xchg
call
test
add
cwtl
pop
mov
pop
push
mov
pop
jmp
cld
call
jmp
sub
lds
cld
pop
es
cld
push
es
cld
arpl
jmp
cld
xchg
jmp
cld
aas
es
cmp
jmp
aaa
es
xor
jmp
inc
push
jmp
jnp
jmp
addr16
jmp
ss
ljmp
add
jmp
sbb
jmp
pop
es
add
adc
add
adc
add
out
dec
adc
add
out
pop
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
out
pop
adc
add
out
cmp
out
or
out
jne
out
adc
out
xlat
adc
add
lret
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
psubsw
psubsw
psubsw
psubsw
psubsw
psubsw
psubsw
psubsw
adc
adc
adc
adc
adc
adc
psubsw
psubsw
psubsw
psubsw
psubsw
psubsw
adc
psubsw
push
jmp
adc
psubsw
psubsw
psubsw
psubsw
psubsw
psubsw
psubsw
psubsw
psubsw
verw
add
adc
add
adc
add
adc
add
adc
add
adc
or
outsb
add
adc
outsb
add
jle
add
jle
cld
movd
clc
movd
hlt
add
add
ucomiss
push
adc
add
add
adc
add
pop
incb
stc
adc
add
out
add
adc
add
jmp
cld
mov
jmp
cld
mov
jmp
cld
stos
or
cld
cmpsl
add
jmp
cld
lahf
adc
cld
fwait
or
cld
xchg
and
cld
xchg
sbb
cld
adc
cld
mov
jmp
cld
sbbl
cld
jg
jmp
cld
ja
jmp
cld
loope
jmp
cld
enter
dec
sbb
cld
dec
adc
cld
inc
or
cld
inc
and
cld
aas
sbb
cld
cmp
jmp
aaa
or
out
sub
add
add
add
out
das
add
out
pop
add
out
out
add
add
add
add
add
add
add
out
sub
out
adc
out
sbb
out
arpl
add
out
dec
add
add
adc
add
adc
add
adc
add
adc
add
add
add
inc
add
add
add
add
add
add
add
jmp
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
add
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
cmp
ljmp
out
decl
out
decl
push
aas
push
out
aas
push
out
jmp
mov
lcall
push
scas
lcall
push
scas
call
push
mov
jmp
lcall
call
push
add
adc
jle
adcl
outsb
decl
jle
cmpsb
sbb
and
outsb
pushl
outsb
call
sbb
ljmp
sbb
push
or
cs
jmp
notrack
or
pop
jmp
cld
jmp
cld
movups
cld
or
jmp
cld
sbb
cld
mov
or
cld
mov
jmp
add
add
jmp
cld
stos
or
cld
in
or
cld
xor
jmp
cld
fwait
or
cld
sub
jmp
cld
adc
cld
mov
jmp
cld
sbbl
cld
jg
jmp
cld
cmpsl
daa
jmp
cld
frstor
jmp
cld
push
and
out
ret
add
add
out
mov
jmp
add
out
add
out
dec
jmp
add
jmp
add
out
sub
out
ud0
add
out
sbb
out
ud0
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
out
outsl
out
arpl
out
addr16
out
imul
add
out
xor
out
out
call
add
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
adc
adc
or
add
adc
adc
or
adc
or
adc
or
adc
or
ds
push
cs
or
add
or
add
or
add
or
add
or
add
or
add
incb
inc
or
add
out
add
incb
cmp
add
out
add
or
add
mov
add
scas
add
or
add
mov
mov
add
or
add
jle
or
add
outsb
add
or
add
or
clc
or
hlt
or
lock
frndint
jmp
frndint
out
frndint
jecxz
frndint
fisttps
cld
fistpl
cld
xlat
sbb
cld
rorl
cld
iret
or
cld
lret
sbb
cld
sbb
cld
ret
or
cld
mov
sbb
cld
mov
frndint
mov
or
cld
or
cld
ret
cld
cmpsl
sbb
cld
mov
or
cld
mov
frndint
adc
frndint
fwait
push
frndint
or
cld
mov
cld
xchg
cld
xchg
or
cld
jg
frndint
jnp
frndint
loope
add
add
out
out
out
ret
cli
out
mov
cli
out
xchg
out
cmp
add
std
out
add
out
scas
stc
out
stos
stc
out
cmpsl
stc
out
mov
stc
out
fwait
stc
out
xchg
stc
out
push
stc
out
dec
stc
out
dec
stc
out
idiv
out
adc
out
psubw
add
stc
out
pop
stc
out
and
out
pop
stc
out
sbb
out
pop
stc
call
adc
add
jmp
add
add
jmp
adc
add
jmp
adc
add
jmp
adc
or
adc
or
adc
add
jmp
adc
add
jmp
adc
psubsw
add
jmp
adc
add
jmp
adc
add
add
adc
add
or
orb
add
outsb
add
add
add
add
add
add
add
add
add
add
decl
incl
out
call
push
out
decl
decl
incl
out
incl
out
aas
or
pushl
or
scas
pushl
or
lcall
or
call
or
frndint
or
frndint
add
frndint
sti
push
frndint
testl
frndint
out
push
frndint
jmp
frndint
out
frndint
jecxz
frndint
fistps
frndint
fistpl
frndint
xlat
push
frndint
rorl
frndint
iret
push
frndint
lret
push
frndint
data16
cld
ret
add
frndint
mov
push
frndint
mov
frndint
mov
frndint
scas
push
frndint
stos
push
frndint
cmpsl
push
frndint
mov
sbb
cld
fwait
push
frndint
xchg
push
add
add
clc
out
fwait
clc
out
clc
out
xchg
clc
out
xchg
clc
out
jmp
out
out
jecxz
out
xbegin
out
scas
clc
out
dec
mul
add
mov
out
lret
clc
out
mov
clc
out
addr16
out
pop
sti
out
dec
sti
out
push
sti
out
push
sti
out
sub
out
pop
sti
out
and
out
lods
std
out
mov
std
out
mov
out
call
addb
test
adc
add
jmp
adc
add
jmp
add
add
jmp
adc
pop
jmp
adc
pop
jmp
adc
pop
jmp
adc
pop
jmp
adc
pop
jmp
adc
add
jmp
adc
pop
jmp
adc
pop
jmp
adc
add
add
add
or
scas
add
or
add
or
popf
or
out
or
xchg
or
xchg
or
lea
outsb
add
or
test
ds
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
out
add
or
frndint
xchg
or
frndint
lea
frndint
test
frndint
jge
frndint
jns
frndint
jne
frndint
jno
frndint
insl
sbb
frndint
gs
frndint
pop
sbb
frndint
push
or
frndint
dec
sbb
frndint
inc
or
frndint
cmp
add
frndint
xor
or
frndint
sub
frndint
and
cld
out
sub
cld
out
and
cld
out
sbb
cld
out
adc
clc
out
clc
out
mov
out
test
out
cmp
out
jns
out
jne
out
jno
out
add
out
imul
out
popa
clc
out
pop
clc
out
pop
clc
out
push
clc
out
sar
out
int
out
leave
sti
out
vcvtpd2dqx
sar
add
pushf
push
jmp
adc
push
jmp
adc
push
jmp
adc
push
jmp
adc
push
jmp
adc
pop
jmp
add
pop
jmp
adc
pop
jmp
adc
pop
jmp
adc
pop
jmp
adc
pop
jmp
adc
pop
jmp
adc
pop
jmp
adc
pop
jmp
adc
pop
jmp
incb
sub
incb
es
add
or
add
or
add
or
scas
add
or
add
or
add
or
cli
or
testb
add
or
out
or
ljmp
add
or
fimuls
ds
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
pushl
mov
frndint
mov
pop
frndint
lods
pop
frndint
test
psubusw
mov
pop
frndint
cltd
psubusw
xchg
psubusw
xchg
pop
frndint
lea
frndint
mov
frndint
test
frndint
sbbl
frndint
jns
frndint
jne
frndint
jno
frndint
insl
pop
frndint
imul
frndint
popa
pop
frndint
pop
pop
frndint
pop
psubusw
push
psubusw
push
pop
frndint
dec
add
frndint
dec
psubusw
inc
psubusw
inc
pop
add
add
out
cmp
cli
out
and
cli
out
sub
cli
out
cmc
stc
out
sub
out
sbb
cli
out
add
cli
out
out
cli
out
repnz
out
adc
cli
out
jge
out
cmp
out
jns
out
add
out
jno
out
xor
cli
out
pop
cli
out
popa
cli
out
inc
cli
out
pop
cli
out
dec
cli
call
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
ds
add
incb
add
add
pop
out
add
pop
out
add
pop
incb
pop
incb
pop
out
add
pop
out
add
pop
add
add
pop
scas
add
pop
scas
add
pop
mov
add
pop
scas
add
pop
scas
add
pop
jle
incb
jle
cli
push
outsb
add
push
outsb
add
push
jle
out
push
jle
ljmp
add
push
ds
push
ds
push
cs
push
pop
jmp
aad
jmp
rcll
jmp
int
jmp
test
jmp
sbbb
cld
jl
adc
cld
mov
adc
cld
mov
jmp
cld
lods
sbb
cld
test
sbb
cld
mov
sbb
cld
cltd
adc
cld
xchg
sbb
cld
xchg
adc
cld
lea
jmp
cld
test
jmp
cld
jge
jmp
cld
jne
jmp
cld
insl
sbb
cld
imul
jmp
out
add
pop
out
fldl
out
leave
pop
out
lds
out
roll
out
adc
out
push
push
out
or
out
incb
out
cmp
or
add
or
add
pop
out
cmc
pop
out
and
out
sbb
or
add
or
add
or
add
add
add
jge
out
imul
add
out
insl
add
jmp
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
outsb
add
outsb
add
add
add
add
add
add
add
add
add
incb
inc
add
out
add
add
incb
xor
add
add
add
out
add
add
mov
add
add
mov
add
add
scas
add
add
jle
incb
add
add
add
add
jmp
cmc
adc
cld
icebp
sbb
cld
in
adc
cld
jmp
adc
cld
loope
jmp
fstl
jmp
fstps
jmp
aad
jmp
roll
sbb
cld
int
jmp
leave
sbb
cld
lds
jmp
cld
mov
sbb
cld
mov
jmp
cld
lods
adc
cld
test
adc
cld
mov
adc
cld
cltd
sbb
cld
xchg
adc
cld
xchg
sbb
cld
lea
jmp
cld
test
jmp
out
stc
add
out
loope
out
in
out
add
add
out
mov
out
mov
out
flds
out
roll
add
add
out
push
push
out
push
push
out
cmp
out
sub
push
out
and
push
out
std
add
out
cmc
add
out
or
push
out
add
push
out
add
add
jmp
adc
cld
call
adc
cld
call
adc
cld
call
adc
cld
call
adc
cld
call
adc
cld
call
adc
cld
call
adc
call
adc
call
adc
call
adc
call
add
call
adc
call
adc
ljmp
add
aad
outsb
add
int
jle
lret
add
roll
add
mov
add
add
lods
add
add
movsl
add
add
popf
add
add
dec
stc
xchg
or
sarl
cmp
pop
out
add
adcl
cmp
add
faddl
adcb
clc
clc
imul
and
jnp
xor
cmp
jmp
incl
por
call
cmp
xor
cmp
into
dec
pop
jbe
add
fiadds
notl
in
xchg
mov
add
mov
mov
lock
mov
test
divl
cvtpi2ps
cld
lahf
cmpsb
push
mov
testl
std
add
cmp
in
mov
cmpl
adc
fldl
adc
add
add
ret
imul
addl
and
adc
in
cmp
aas
mov
adc
in
pop
cmp
push
add
cmpb
sub
mov
add
subl
jo
ljmp
xor
push
pop
leave
call
push
push
add
cmc
xlat
clc
jmp
add
flds
aam
jnp
hlt
push
add
hlt
add
push
push
jnp
aam
add
hlt
push
stos
xchg
pop
dec
out
jge
xor
mov
test
cmp
inc
lret
jnp
fistl
xlat
xlat
cmp
adc
stc
movsb
cmc
jl
or
xchg
pop
insb
or
cs
inc
jmp
add
jmp
add
push
jnp
push
push
sbb
jae
cmpb
insl
push
push
je
mov
iret
scas
or
add
add
scas
mov
ret
sbb
xor
cmpb
insl
push
xchg
ljmp
addl
scas
or
add
add
lods
mov
jl
mov
jnp
or
aam
idiv
jge
sbb
cmp
arpl
out
cmp
sarl
enter
popf
pop
add
addr16
sub
bnd
movsl
stc
mov
mov
clc
xchg
sub
aam
xchg
mov
std
call
test
inc
xor
mov
jae
push
jg
xor
mov
add
shl
or
adc
sbb
adc
imul
push
cmp
push
sub
pop
ljmp
or
aad
pop
jmp
cld
imul
fildl
in
adcb
pop
aam
in
jg
add
dec
jmp
jecxz
ljmp
sbb
ljmp
add
jg
daa
push
mov
movsl
jmp
in
in
jle
pop
rorl
dec
sub
daa
adc
shrl
aad
out
or
sbb
aam
ljmp
add
mov
mov
sbb
jl
xor
mov
push
nop
push
adc
outsl
add
das
mov
clc
sub
mov
add
adc
jl
or
in
xchg
aas
sbb
jmp
dec
add
hlt
add
pop
push
jnp
adc
shl
clc
cmpsb
push
call
jne
clc
mov
jnp
aam
add
push
fidivl
fnstcw
sarb
aad
ljmp
mov
data16
incl
inc
mov
mov
in
loop
ljmp
push
add
push
cmp
add
xchg
mov
jecxz
ljmp
cmp
cmpl
cli
ret
cli
pop
inc
clc
out
ret
call
std
xor
add
incl
and
xchg
das
cmp
out
jecxz
incl
jge
cmp
cmpl
ret
cmp
adc
xchg
or
jl
mov
inc
push
push
cmpsb
and
mov
idiv
arpl
in
sar
fidivrs
mov
ret
out
clc
mov
pop
pop
adc
cmp
call
push
push
inc
push
push
and
sti
add
add
pop
adc
icebp
add
clc
push
or
dec
xchg
sbb
push
sbb
sub
jmp
int
loopne
dec
stc
push
lea
aas
mov
fwait
inc
fldl
push
and
adc
jmp
lret
and
clc
add
loopne
adcl
dec
cld
in
xchg
sahf
out
pop
xorl
lcall
test
out
add
adcl
push
in
orb
out
pop
xorl
jo
pop
subb
jmp
iret
cltd
fistps
push
testl
pop
add
lret
xchg
dec
adc
mov
int
mov
xor
dec
call
add
xchg
dec
push
ljmp
clc
sub
add
add
add
aad
leave
clc
sub
jl
push
int
ret
mov
lea
add
xchg
dec
push
ljmp
jae
xchg
dec
or
loopne
out
push
leave
clc
stos
jl
cli
cmpsb
inc
lea
xchg
inc
sbb
add
idiv
mov
add
in
scas
test
add
and
sbb
stos
idiv
data16
repz
xorb
sub
out
loop
ljmp
sub
out
loop
in
jg
push
lods
sub
out
loop
std
jg
push
mov
out
lods
idiv
mov
xor
out
lods
idiv
lods
xorl
das
out
lods
idiv
lods
jnp
sbb
sbb
add
xchg
cmc
inc
test
and
push
add
pop
fprem
sub
push
add
mov
jg
and
push
pxor
pop
push
adc
cs
aam
pop
adc
add
adc
aam
pop
adc
dec
out
out
add
clc
xchg
push
pop
std
and
in
mov
sub
in
mov
add
add
in
insl
xchg
fstpt
pushl
add
sarb
xchg
fmull
pop
inc
sub
sub
mov
fld
fldcw
int3
gs
add
loop
fmull
shlb
add
add
mov
mov
jg
or
dec
mov
mov
adc
mov
cmc
ret
push
jmp
add
push
stc
jae
adc
fsubr
jg
loope
sbb
push
or
mov
movl
add
mov
mov
dec
jnp
push
dec
setno
dec
push
ljmp
clc
stos
sub
jle
mov
cltd
inc
sbb
pusha
in
leave
jl
push
lret
jae
in
xor
inc
fmull
add
add
lret
jae
cld
inc
cld
cs
int3
jae
mov
dec
jnp
sbb
addl
int
not
dec
jnp
sbb
push
int3
or
adc
insl
leave
jl
adc
insb
add
fimuls
cld
mov
mov
ljmp
xor
out
mov
jge
jne
cmp
out
stos
idiv
jge
jne
add
xor
call
lods
sub
add
push
call
ret
insl
sub
pop
mov
aad
adc
lock
xorb
cmp
cmpsl
idiv
std
fdivl
mov
stc
inc
fldl
loopne
cmpsb
stos
testl
pop
mov
jl
in
or
mov
hlt
push
loop
std
jb
jae
clc
push
push
pop
sbbl
xor
adc
cli
sbb
adc
jns
pop
out
xor
clc
aam
push
adc
in
out
adc
clc
xchg
xchg
or
arpl
mov
dec
loope
xor
out
add
stos
in
lahf
xlat
xlat
jl
sbb
in
add
adc
clc
or
les
inc
icebp
add
into
pop
outsl
enter
sti
in
or
pop
enter
out
loope
push
ficompl
add
into
jl
das
les
add
sub
mov
fmull
enter
add
repnz
mov
fdivr
add
repnz
cwtl
jmp
int3
xor
mov
dec
clc
jmp
mov
sbb
dec
inc
fldl
or
pop
movl
add
adc
out
xchg
dec
push
ljmp
clc
stos
xchg
dec
adc
out
out
pusha
lret
into
cld
cmp
fiaddl
xchg
xchg
int
sahf
push
jle
repz
push
in
test
or
adc
cli
and
cmpl
add
clc
push
aam
inc
or
xchg
pop
je
jl
call
stos
roll
add
jmp
loop
push
imul
xor
adc
test
pop
jne
push
xor
cli
test
add
subl
rcrb
inc
push
mov
inc
sbb
inc
stc
test
repz
mov
out
mov
je
out
movsl
je
out
cmpsb
je
out
push
je
fdivr
lds
and
mov
jp
std
add
repnz
enter
add
sub
incb
cld
insb
push
pop
add
test
add
loope
cwtl
jae
xchg
lahf
jae
pop
lcall
out
movsl
jae
sub
jmp
jae
iret
mov
jae
fbld
and
scas
bound
arpl
add
inc
fcmovu
std
test
mov
mov
dec
add
sbb
rcll
mov
push
stc
cmpl
dec
add
mov
mov
ljmp
add
add
mov
les
aad
and
xor
pop
jo
loopne
jg
pop
ds
nop
or
out
pop
andl
sub
jmp
aam
js
and
mov
xchg
out
xchg
ret
fdivrs
out
pop
ja
and
mov
add
sub
out
pop
inc
add
in
div
cs
jnp
lret
dec
add
stos
lret
clc
push
xlat
fldt
lods
scas
les
xchg
inc
sbb
rcll
add
or
out
sahf
add
adc
out
dec
lret
out
cmp
dec
pop
xchg
nop
lret
clc
sahf
pop
or
jmp
mov
mov
push
cmp
jl
push
dec
add
stos
in
and
pop
in
jl
adc
les
clc
cmpsb
dec
clc
and
insb
push
push
aaa
clc
push
mov
out
mov
std
jp
pop
sub
out
push
scas
test
js
push
clc
jno
mov
push
cmp
add
sbb
sbb
aam
incl
outsb
incb
inc
aas
icebp
mov
cs
jbe
xchg
icebp
in
jmp
xor
call
insl
icebp
mov
and
cli
ds
jl
loope
add
push
push
mov
jl
loopne
add
in
aam
ret
sbb
test
add
sub
adc
stos
cld
incl
pop
and
sbb
inc
mov
out
out
xlat
into
clc
xchg
inc
testb
mov
jp
mov
or
fstpt
das
sub
clc
cmp
pop
stos
cld
jnp
xor
mov
xchg
mov
jl
loope
adc
gs
sti
xor
test
add
stc
lock
cmp
ffreep
gs
getsec
fiadds
mov
les
or
rclb
push
sbb
inc
or
and
add
add
lea
add
out
pop
inc
clc
fcmovne
mov
shr
fucom
into
add
mov
or
ds
jp
ret
nop
ret
pop
test
sarb
cmpsl
jns
mov
inc
or
lcall
repz
add
imul
sti
xchg
call
push
adc
xchg
mov
cmp
add
stos
mov
sarb
clc
jmp
push
movsl
add
ds
xchg
mov
pop
insb
ds
fmuls
call
stos
xchg
mov
cmp
stos
xchg
out
clc
sahf
add
jge
hlt
mov
adc
add
mov
push
mov
add
add
ficompl
jge
pop
jbe
inc
repz
lcall
ret
xor
jl
cmp
add
add
insl
or
fisubrl
negb
shl
push
dec
adc
xor
jp
or
inc
lods
clc
jle
addl
scas
inc
outsl
adc
adc
ljmp
dec
dec
call
sub
rclb
cld
jnp
xor
mov
std
mov
add
dec
fdivr
lock
add
lret
clc
aam
or
jge
pop
ja
jl
mov
adc
call
add
add
xchg
cmc
jl
mov
add
call
lret
add
inc
xor
inc
sbb
pop
repz
call
stos
cld
call
fwait
xchg
cld
dec
ja
incl
jecxz
cmp
out
pop
add
and
add
pop
add
add
add
sti
mov
sub
add
add
add
add
lock
ret
mov
out
pop
add
stos
mov
mov
add
add
add
add
cmpl
jae
out
pop
add
add
add
pop
mov
fdivs
clc
jmp
adc
add
push
mov
clc
fnstcw
clc
jmp
add
add
adc
add
xlat
mov
clc
push
mov
clc
jmp
adc
add
in
clc
adc
adc
add
adc
add
test
mov
add
adc
add
pop
mov
clc
pop
mov
add
jmp
push
mov
clc
add
pusha
sti
incl
ds
ds
dec
mov
clc
dec
fwait
sti
ds
ljmp
call
mov
out
out
jl
sti
jmp
sti
pushl
mov
decl
mov
ljmp
sti
dec
cmp
js
sti
pushl
sti
lcall
cmp
clc
mov
incl
call
mov
ljmp
sti
call
lds
cld
pop
mov
xchg
dec
ljmp
cmp
xchg
xor
mov
sub
mov
and
cld
sbb
xchg
adc
cld
or
cld
clc
mov
cld
lock
call
lea
call
cmp
cld
enter
add
imul
cld
mov
sar
rol
cld
mov
sbb
cld
nop
stos
cld
call
jnp
cld
and
cld
js
popf
ret
jae
mov
imul
lds
in
push
mov
ret
mov
mov
ret
sub
cld
ret
push
adc
pop
ret
out
add
add
xchg
jmp
mov
jecxz
rclb
sarl
adcb
xor
mov
fcoms
xchg
mov
pushl
movsl
mov
inc
test
clc
pop
test
clc
lea
mov
cmpsl
movsl
mov
movsl
mov
fwait
add
mov
testl
mov
das
mov
mov
sti
mov
mov
jne
mov
mov
mov
subl
clc
cmp
mov
lret
mov
clc
scas
mov
clc
add
sti
call
sti
incl
jmp
add
add
sti
js
sti
ljmp
sti
jmp
sti
incl
sti
out
xchg
sti
lcall
xchg
sti
call
xchg
sti
lcall
xchg
sti
incl
sti
jmp
xchg
sti
decl
sti
lcall
ja
lcall
sti
cmp
decl
sti
ljmp
lcall
sti
jmp
xchg
sti
decl
sti
lcall
sti
cmp
sti
incl
pop
dec
xchg
cld
cwtl
cmp
cld
mov
xchg
cld
js
xchg
cld
jo
xchg
cld
push
mov
xchg
cld
push
les
cld
inc
cs
cld
cmp
cld
xor
sub
cld
and
xchg
cld
sbb
xchg
cld
adc
xchg
cld
or
xchg
cld
add
cld
clc
mov
xchg
cld
call
dec
cwtl
cld
add
cmp
mov
enter
sarb
mov
add
stos
mov
cwtl
mov
mov
cwtl
xchg
mov
cwtl
mov
mov
cwtl
jae
in
imul
cwtl
pop
mov
cwtl
push
mov
cwtl
dec
mov
cwtl
inc
mov
cwtl
cmp
sbb
sub
or
add
mov
cwtl
or
rclb
repz
cltd
jmp
push
cltd
jecxz
xor
shll
cltd
ret
mov
insb
sahf
mov
rorl
mov
ret
jg
clc
xlat
jg
clc
mov
movsl
mov
jmp
mov
mov
out
stos
mov
jmp
adc
and
add
add
adc
and
add
cmp
clc
inc
push
mov
sub
adc
add
aam
clc
int
mov
jecxz
mov
mov
in
mov
popa
xchg
mov
push
fwait
mov
aas
xchg
mov
and
jle
decl
jg
jle
jle,pt
call
jle
dec
jle
call
incl
data16
jmp
call
sti
pushl
sti
lcall
sti
pushl
cmp
cwtl
cmp
fdivrl
ljmp
dec
mov
ljmp
cld
jp
cld
lcall
ss
ljmp
cld
jmp
cld
jmp
cld
dec
aaa
cld
call
std
jnp
shlb
cld
enter
rclb
add
mov
bound
jl,pn
mov
inc
jl
nop
dec
jl
mov
jl
cmp
cld
js
je
jo
jnp
push
mov
cld
pop
jp
push
push
jnp
dec
in
jp
inc
inc
jnp
cmp
jp
xor
cld
sub
cld
and
cld
sbb
adc
jns
add
jns
clc
out
cld
add
pop
jns
call
mov
jle
mov
jle
mov
jge
mov
jge
mov
jnp
mov
jl
mov
jge
mov
jge
mov
jge
mov
jge
mov
ja
mov
ja
mov
jbe
mov
js
mov
js
mov
ja
mov
ja
mov
ja
mov
ja
mov
ja
mov
jns
mov
jns
mov
jns
sub
sarb
mov
js
mov
js
mov
js
mov
jp
mov
subb
xchg
insl
scas
clc
xor
clc
xchg
pop
scas
clc
orl
clc
pop
cmp
scas
clc
cs
clc
cs
clc
mov
scas
clc
jge
scas
clc
inc
or
clc
addl
lods
clc
xchg
repnz
clc
lahf
ljmp
add
loope
clc
adc
lods
clc
out
lods
clc
ror
lods
clc
test
shrl
mov
sahf
lods
clc
negl
scas
clc
aad
scas
clc
add
sub
incl
add
or
mov
enter
enter
enter
enter
enter
sti
inc
enter
enter
adc
sti
incl
sti
out
sti
push
sti
push
sti
push
sti
lcall
mov
sti
jmp
sti
pushl
sti
cmp
sti
ljmp
add
add
add
stos
ret
sti
call
cmp
call
test
call
cwtl
mov
cld
fsubs
add
xchg
lret
cld
call
repnz
call
je
call
pusha
mov
call
popf
cld
call
cmpb
xchg
sahf
cld
call
test
call
iret
cld
call
inc
ret
lock
add
sbb
js
add
scas
inc
lds
scas
push
xor
rep
xor
jmp
sahf
cmp
fldt
cmp
lret
lods
push
jb
mov
add
les
lods
lock
lods
cli
ret
push
ret
jnp
es
jae
ss
imul
or
and
aad
push
push
mov
inc
xor
mov
inc
sub
add
lock
cmp
jmp
cmp
add
out
insl
adc
and
arpl
pop
and
add
cli
dec
je
push
and
arpl
loop
cmp
mov
sbb
xchg
add
jmp
inc
arpl
enter
fstps
outsb
xchg
add
call
push
xor
dec
hlt
sbb
addr16
ljmp
dec
popa
xlat
jmp
insl
insb
cli
fsubrs
sbb
jae
out
dec
add
jecxz
gs
arpl
repnz
gs
pusha
outsl
loopne
out
jp
outsl
insb
xlat
loop
je
aaa
pop
outsb
add
fistpl
cmp
pop
dec
frstor
fwait
decl
add
in
jne
in
push
jle
lods
add
jecxz
push
ljmp
pop
fcompl
je
push
xor
push
addr16
in
frstor
ret
adc
arpl
cmp
addr16
add
adc
push
push
push
cltd
cld
ret
push
in
je
into
xor
mov
pop
pop
cmp
and
imul
je
insl
pop
push
cltd
cld
xchg
sbb
je
xorb
testb
jmp
cld
mov
cmc
jns
dec
call
add
loopne
xor
stos
sbb
pop
add
pop
fsubl
aaa
push
add
inc
adc
je
mov
sbb
xchg
or
push
add
sahf
add
ss
repz
shll
data16
or
and
pop
mov
and
xor
sub
push
out
push
xchg
and
aas
xchg
pop
ficomps
mov
add
std
mov
add
daa
hlt
push
mov
inc
js
add
sub
divl
dec
rorl
inc
out
and
jmp
or
inc
inc
out
and
inc
lock
int3
adc
adc
inc
add
and
arpl
push
and
je,pn
sub
push
push
jmp
sub
scas
in
adc
ljmp
push
and
xor
insl
jmp
add
movsl
sub
inc
cmpb
dec
cmpb
inc
add
pop
je
in
jae
fsubr
data16
add
add
or
ficompl
shl
imul
add
gs
popa
insb
rcll
insl
and
int
xor
insb
and
ds
add
gs
popa
insb
adc
data16
fs
repnz
add
popa
fadds
insb
gs
add
lea
je
fistps
xlat
imul
push
add
mov
fs
test
pop
pop
xchg
cmp
inc
in
sbb
xor
xor
cmp
sub
cmp
ja
cwtl
cld
inc
adc
and
xor
outsb
mov
or
xor
fsubrl
add
mov
sbb
pop
imul
push
loop
dec
jp
aas
jb
cmpsl
sub
pop
push
add
inc
mov
sub
int
add
inc
add
insl
inc
pop
xor
sbb
add
pop
add
xor
xor
add
xor
and
push
pop
xor
add
jmp
sbb
add
and
rcrl
scas
add
inc
sbb
inc
adcl
and
add
and
pop
push
sbb
pusha
inc
out
sub
cs
inc
adc
lods
and
addb
das
int3
and
pop
xchg
and
push
jmp
inc
and
inc
sbb
add
push
outsb
mov
xlat
inc
addb
je
adc
pop
dec
push
pop
sub
cmp
sbb
insl
dec
hlt
sub
insb
adc
push
jo
push
ss
inc
pop
push
push
inc
arpl
push
and
sbb
imul
add
and
addr16
sbb
sub
add
add
fcompl
add
insl
repnz
popa
lret
imul
in
add
xlat
imul
pop
add
ds
insl
out
dec
pop
je
add
push
movsb
dec
imul
inc
insb
insb
shl
call
add
imul
pop
add
mov
insl
gs
imul
pop
xor
cmp
gs
cmp
add
scas
std
inc
das
leave
sbb
jb
and
mov
je
insb
cs
jae
push
pop
hlt
incb
test
outsb
add
gs
push
sbb
jp
add
add
inc
mov
xor
gs
dec
arpl
cmp
pop
clc
add
scas
cmp
push
jle
es
js
sbb
pop
cli
aaa
arpl
pop
arpl
fiaddl
insb
movsl
xor
test
push
insb
inc
lods
xor
add
and
add
add
dec
sbb
inc
and
dec
xor
int3
push
clc
adc
add
dec
xor
adc
add
dec
jg
add
pop
sub
ljmp
sub
sbb
aaa
fcomps
push
sub
sub
jnp
push
add
push
xor
xorl
sub
sub
pop
add
or
xor
icebp
and
ficoml
imul
sbb
pop
sbb
fneni(8087
adc
aad
xor
out
je,pt
cmp
add
add
push
jae
dec
sbb
inc
and
fwait
aaa
inc
push
aas
fildll
ss
arpl
cwtl
cld
lcall
dec
pop
jmp
jmp
imull
inc
inc
out
xor
call
ss
cmp
je
xor
jae
sbb
add
xor
xor
or
add
add
jmp
outsb
add
add
add
fdivr
lcall
or
pop
popa
ret
add
add
cmp
js
add
add
lods
cld
pop
jb
loope
jne
fsubs
xchg
fcomps
or
int
pop
insl
mov
jecxz
imul
call
aas
gs
popa
insl
rorl
outsb
arpl
gs
fsubs
sti
data16
add
add
add
lock
and
std
adc
jb
cld
int3
push
lock
adc
jo
pop
cld
push
adc
pusha
daa
addr16
sbb
arpl
cld
pusha
adc
xor
inc
ja
xchg
enter
aam
sbb
inc
repnz
jae
sbb
push
je
outsb
mov
test
push
add
out
sub
fsubrs
insl
pop
sub
inc
jp
cmp
jp
and
add
sbb
dec
push
sub
adc
pop
jae
out
sahf
add
sub
cli
and
fldt
sub
and
out
jae
mov
xor
sub
sbb
and
sub
dec
xchg
daa
add
test
sub
add
add
sub
push
pop
add
repnz
sbb
add
adc
pop
inc
push
stos
ss
push
inc
cmp
test
adc
inc
xor
insl
cmp
add
fildll
cmp
arpl
and
das
push
jmp
xor
cld
repz
arpl
add
add
cmp
rolb
add
add
and
in
arpl
push
sub
adc
movsl
das
push
dec
mov
fsubs
bound
and
xchg
xor
pop
xchg
add
fwait
push
inc
arpl
sub
lock
xor
adc
add
int
outsl
push
incb
rolb
loop
bound
inc
gs
imul
sarl
out
add
add
sub
jae
int
imul
dec
dec
sbb
addr16
fistps
mov
jecxz
inc
shll
int3
jecxz
push
into
fistps
mov
ds
insb
mov
pop
dec
loopne
data16
fbstp
mov
add
gs
jbe
iret
data16
jecxz
gs
fstpl
scas
dec
push
insb
mov
add
add
cmc
sbb
dec
sub
test
add
sbb
sbb
or
sub
arpl
and
and
push
cmp
into
inc
imul
mov
je
mov
push
je
repz
fadd
xor
hlt
jl
jb
sbb
sbbl
les
sbb
test
cltd
add
push
and
add
scas
xor
add
sbb
push
out
aad
adc
jp
xor
add
sbb
push
sub
mov
dec
and
sub
inc
sub
add
lcall
and
and
xor
out
pop
add
sbb
ss
and
sub
fbld
xor
inc
adc
and
and
mov
sbb
and
and
sldt
adc
std
sub
or
pop
pop
divb
outsb
ds
and
sub
push
adc
push
inc
push
arpl
inc
add
mov
inc
arpl
push
sub
sub
repnz
dec
and
jmp
sub
jmp
cld
cmp
std
adc
in
add
adc
imul
inc
arpl
cmp
pop
fwait
clc
cmp
jl
ds
jns
cld
pop
jb
je,pn
ret
decl
push
jb
sti
push
pop
rcrb
iret
push
push
stc
pushl
and
push
adc
cmp
push
out
add
add
stc
pop
inc
int3
jecxz
gs
shlb
and
push
add
int
popa
shl
dec
outsl
mov
negl
addr16
arpl
xor
outsl
dec
xor
add
cmp
lock
imul
pop
xor
ja
sbb
insb
sbb
push
pop
xor
das
and
add
jmp
adc
cmp
pusha
test
sbb
xor
or
sti
sbb
pop
adc
inc
jb
xor
sbb
std
push
outsb
xor
inc
cmp
cmp
xor
push
out
pop
das
addr16
adc
repnz
sbb
cld
xchg
pop
pop
sbb
add
pop
add
xor
add
add
xor
scas
adc
add
cs
push
mov
es
inc
pop
add
sbb
dec
inc
cmp
cmc
add
or
pop
sbb
or
pop
add
add
sbb
incl
repnz
and
sbb
inc
adc
push
xor
out
cltd
add
add
and
xor
daa
mov
adc
add
add
fwait
aaa
and
inc
and
add
insl
lcall
jmp
add
jae
testl
arpl
aam
insl
adc
push
adc
and
xor
add
adc
bound
sub
sbb
je
adc
std
xor
or
jae
push
and
add
sub
adc
jmp
pop
inc
sti
repz
in
pop
test
jno
movsb
negl
inc
outsb
mov
incb
dec
gs
jo
shrb
jle
mov
mov
out
arpl
aad
add
imulb
fwait
sarl
insb
shrb
cmpsb
cmp
aas
gs
jae
loopne
gs
incb
add
cmp
jae
loop,pt
je
xor
incb
push
add
cmc
jae
sbb
push
or
cmp
cmp
outsb
sbb
pop
imul
ds
xlat
pop
outsl
rcl
rolw
mov
pop
or
imul
pop
sbb
adc
cld
je
pop
sbb
sbb
mov
arpl
adcl
push
add
dec
mov
dec
sarl
fldt
adc
stos
cld
xchg
push
in
je
inc
adc
aaa
imul
push
jle
pop
imul
adc
cmc
add
push
cmc
adc
rclb
pop
cmp
dec
add
incb
lea
daa
add
sub
add
add
sbb
push
add
mov
das
add
sub
xor
add
add
push
mov
ret
push
out
nop
add
pushl
push
mov
mov
sub
add
call
cmp
add
add
adc
xor
add
push
and
sub
sub
or
je
out
mov
and
inc
sbb
repz
add
jno
clc
and
adc
lods
aas
push
push
rolb
mov
adc
std
cwtl
and
and
push
jmp
add
insb
mov
adc
jmp
add
fs
and
ljmp
jmp
outsb
cmp
adc
dec
add
adc
iret
addr16
and
imul
add
sub
and
sbb
repnz
pop
gs
add
outsl
push
shll
rcl
imul
inc
jae
fisubs
dec
in
incl
dec
mov
aam
push
mov
incl
aas
mov
clc
jae
mov
fidivl
stos
in
jae
ljmp
add
jae
pop
clc
pop
outsb
inc
push
pushf
add
jmp
arpl
fcomps
push
or
sub
outsl
push
pop
add
je
cli
das
inc
cmp
aaa
add
mov
sub
imul
mov
push
lcall
ljmp
arpl
dec
inc
push
dec
adc
outsb
and
add
jmp
dec
and
adc
jle
arpl
jae
imul
cmp
sbb
cltd
cld
daa
adc
frstor
insl
insb
aad
jo
cltd
cld
addr16
call
adc
adc
ds
sbb
adc
sub
adc
and
rcrb
dec
push
enter
add
add
push
sarl
add
adc
shlb
sti
push
mov
sub
pop
out
flds
mov
adc
mov
mov
scas
adc
add
xchg
mov
and
adc
sbb
jle
sbb
inc
das
insl
add
add
adc
and
ds
push
jmp
adc
add
add
inc
jmp
je
jmp
lret
sti
outsb
adc
loope
add
sbb
fldl
arpl
xor
jno
adc
ljmp
xor
add
cmp
add
arpl
and
adc
jmp
cli
adc
out
sbb
jmp
ds
dec
inc
add
adc
cmp
jae
incb
or
cmp
jae
and
push
and
fs
in
add
rorl
mov
fisubrl
neg
pop
outsl
or
out
add
pop
arpl
data16
icebp
inc
gs
js
add
mov
fildll
fisubl
loopne
add
xor
stos
add
add
sbb
jne
cmc
pop
insl
js
insw
jle
pusha
outsb
mov
in
push
pop
cs
dec
jp
adc
pop
sub
inc
arpl
sub
inc
das
je
out
and
pop
leave
cld
inc
xor
dec
arpl
testb
inc
inc
pop
clc
std
dec
xor
and
sub
push
push
cs
imul
mov
cld
test
pop
and
add
out
adc
and
mov
cld
sbb
jns
je
or
dec
ret
cmpsl
jle
dec
mov
and
pop
std
push
les
sub
inc
rorb
sub
out
inc
add
daa
cmpl
jbe,pn
dec
xor
out
lds
adc
sbb
xor
adc
inc
das
add
sub
adc
and
sti
inc
xor
push
daa
and
enter
out
push
add
dec
in
adc
adc
les
pop
add
and
mov
jecxz
mov
lret
jp
add
adc
mov
jae
mov
sbb
jmp
cmp
push
arpl
and
push
ss
sbb
ljmp
add
jo
push
pop
je
repnz
cmp
sbb
adc
ljmp
or
jo
push
sub
arpl
in
pop
je
sub
push
jmp
sub
jo
inc
pop
insb
int3
cmp
je
cld
adc
insl
mov
imull
je
int3
sub
adc
jge
jo
mov
lret
add
icebp
dec
gs
fiaddl
pop
cmc
gs
push
loop
decl
cmp
hlt
pop
jb
shll
add
dec
je
xlat
gs
add
pop
outsb
push
lock
icebp
push
sbb
pop
outsb
scas
add
jae
addr16
insl
je
fsubrl
mov
ljmp
incb
push
fistl
pushf
loop
add
add
add
add
pop
je
sbbl
jae
jb
outsb
scas
push
sbb
test
daa
je
inc
std
inc
jb
xor
ss
imul
addr16
add
pop
fcoml
arpl
sbb
lock
in
cmp
push
sbb
fwait
cld
nop
push
iret
imul
push
addr16
push
arpl
mov
add
add
dec
cld
sbb
pop
sbb
lods
or
sbb
dec
and
popa
repnz
cld
ss
inc
xchg
push
loopne
mov
movsb
sbb
add
inc
mov
jbe
rcrb
jo
push
add
test
dec
xor
insl
add
pop
jbe
cmp
jns
adc
jae
dec
aas
pop
das
out
jo
xor
pop
add
or
add
add
pop
xor
inc
and
sysenter
cmp
fiaddl
rclb
rorb
clc
and
sub
sbb
mov
jecxz
mov
mov
sub
add
xor
pop
pushf
and
je
lock
add
jo
out
pop
inc
mov
adc
push
push
inc
push
outsb
inc
add
and
xor
outsb
push
pop
cmove
outsb
inc
add
imul
hlt
adc
daa
cmove
and
imul
sbb
std
in
pop
hlt
es
je
dec
and
es
jo
xor
dec
enter
add
pop
arpl
pop
jae
lock
jo
fildll
jecxz
add
jg
dec
inc
mov
imul
add
repz
shrl
dec
jecxz
push
incb
jge
push
fbstp
cld
loop
outsl
sbb
cmp
fldcw
pop
icebp
addr16
scas
add
push
or
data16
xchg
add
fidivs
sub
push
push
pop
ficomps
pop
test
add
cld
dec
add
inc
and
out
mov
inc
out
mov
pop
push
pop
adc
dec
mov
and
mov
and
pop
sub
or
mov
cld
adc
push
or
insb
pop
lret
sbb
outsl
loop
push
inc
out
add
inc
add
jbe
sub
push
push
pusha
fwait
cld
inc
pop
lret
sbb
das
aad
push
ficomps
je
in
push
add
add
add
cmc
sub
pop
mov
jo
test
jo
add
and
out
add
or
lock
add
and
sub
push
sub
add
add
and
ds
or
andb
push
push
inc
insb
adc
sub
inc
and
push
sbb
xor
add
inc
and
adc
add
and
sub
xor
and
psubq
cmp
sbb
add
adc
aas
add
cmp
adc
mov
sbb
arpl
cmp
add
xor
arpl
sti
add
fists
lds
aad
add
adc
push
jo
jmp
add
add
sbb
sbb
cmp
adc
inc
or
out
adc
jo
sbb
incl
das
outsb
cmp
clc
and
push
add
cmp
xor
sub
adc
imul
std
dec
push
xchg
pop
jne
sub
fnstenv
test
into
pop
je
incl
cmp
mov
pop
outsb
xchg
ret
xchg
lret
mov
insl
push
decb
jae
dec
xor
insb
lcall
push
pop
sub
dec
and
inc
cmp
pop
jne
pop
sub
push
and
push
cmp
daa
imul
gs
sbb
pop
add
icebp
cld
cmp
push
and
sbb
or
dec
add
inc
insb
clc
or
insb
add
jnp
cmp
stos
adc
pop
daa
inc
stc
pop
adc
dec
daa
add
dec
cld
cmp
popf
push
addr16
xchg
sbb
push
aas
pop
lods
sbb
addr16
sbb
fwait
daa
pop
mov
sbb
cld
cmp
sub
inc
imul
adc
jb
or
pop
jae
cmp
sbb
inc
pop
cmp
adc
add
add
inc
add
sbb
add
push
hlt
stc
push
push
xlat
das
dec
jmp
icebp
adc
and
cli
movsb
pop
fsubr
int
jmp
ret
xor
loop
in
rolb
add
es
mov
and
stos
out
xchg
pop
add
add
repz
mov
xacquire
jo
jp
pop
ret
out
xchg
daa
add
in
daa
inc
mul
add
add
daa
inc
in
cmp
enter
fdivl
adc
add
or
pop
sbb
sbb
sub
sub
fisubrs
adc
ljmp
cmp
adc
add
add
add
sbb
bound
fdivrs
cltd
adc
pop
xchg
stc
lds
add
std
mov
repz
dec
xchg
add
jl
shll
out
jb
sbb
add
and
bound
jmp
push
sti
or
aas
gs
inc
inc
daa
sbb
lret
add
jb
and
cmp
and
and
add
lret
mov
add
gs
es
push
sbb
outsl
outsb
add
popa
pop
es
andb
xchg
dec
push
jg
pop
outsb
lcall
push
mov
outsb
add
xor
pop
pop
push
popa
arpl
imul
add
pop
xor
aas
push
iret
daa
outsb
cmp
or
outsb
cs
cld
push
inc
sub
arpl
daa
push
and
and
sarb
or
daa
insb
repnz
adc
pop
add
push
les
cmp
mov
adc
mov
cld
push
in
cmp
xchg
sbb
pop
jo
push
les
daa
inc
mov
sub
sub
push
and
add
add
out
sbb
cmp
arpl
and
add
inc
testb
loope
sbb
xor
sub
sbb
inc
add
daa
xor
sbb
in
adc
pop
add
hlt
aam
add
add
pop
lock
xor
in
aam
pop
add
add
ret
sahf
cmp
ret
adc
rcrb
add
add
sbb
xor
add
add
incl
sbb
jae
add
cmp
jb
aaa
jecxz
dec
das
fistpll
and
fstpl
lock
pop
pandn
adc
cmp
inc
adc
jmp
insl
cmc
inc
imulb
cmp
ljmp
and
outsl
fildl
mulb
add
pop
mov
push
rorl
add
sub
sbb
mov
add
jb
push
repz
jg
call
push
gs
pop
je
sbb
je
push
aaa
sbb
sbb
std
adc
xor
out
add
je
jmp
and
adc
je
scas
decb
inc
adc
and
adc
add
add
dec
gs
sbb
dec
movsl
incb
inc
push
dec
gs
adc
add
jmp
add
push
xchg
or
pop
mov
aas
pop
cmp
xor
or
dec
mov
fs
pop
pop
xor
je
cmp
push
cmp
adc
inc
add
push
add
inc
das
adc
add
adc
dec
xor
packsswb
aas
js
imul
pop
xor
je
jl
arpl
sbb
je
outsb
and
inc
pop
sti
inc
and
inc
inc
add
hlt
cld
inc
shll
dec
lret
ja
dec
or
add
and
ja
mov
sbb
and
test
imul
or
add
add
push
call
dec
adc
inc
and
push
pop
pop
add
pop
sub
inc
adc
sbb
daa
out
nopl
add
adc
repnz
pop
lock
or
stos
add
sbb
in
mov
jecxz
shlb
lret
out
mov
call
in
roll
add
shrl
call
add
add
leave
jb
add
dec
cltd
and
push
pop
sbb
imul
fildll
push
add
and
clc
out
sub
aam
dec
clc
jmp
cmp
imul
sbb
jae
add
fs
sub
jae
and
arpl
in
jmp
push
out
loop
mov
add
in
cmp
das
frstor
pop
ljmp
cmp
add
cmp
xor
insb
insb
incb
testl
jge
push
mov
inc
outsb
cwtl
sbb
add
inc
gs
mov
pop
pop
adc
jb
and
add
xor
in
shlb
incb
ljmp
add
add
add
add
mov
pop
jb
mov
imul
add
pop
mov
inc
push
fimuls
inc
dec
shrl
push
push
nop
pop
outsb
movsl
mov
add
verw
test
in
negb
imul
pop
pop
add
jle
imul
push
imul
pop
dec
pop
inc
into
or
add
xor
pop
insb
pop
dec
ljmp
sbb
adc
lcall
or
pop
lods
std
pop
or
jno
jns
push
cld
add
adc
ret
jecxz
adc
jecxz
sbb
jmp
add
and
add
mov
out
out
lods
lock
and
out
add
jne
xchg
and
sarb
jge
dec
adc
add
dec
out
pop
adc
out
and
imul
dec
push
ss
out
paddd
cmp
adc
xlat
add
pop
or
adc
stc
ficoms
adc
out
or
hlt
lock
stc
adc
add
ljmp
sbb
pop
int3
and
mov
data16
loope
jmp
add
add
or
imul
and
push
jge
in
mov
aaa
fildll
xor
pop
push
aaa
out
pop
jae
jmp
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
outsb
ljmp
incl
jle
jle
ljmp
ljmp
ds
ds
ljmp
ljmp
ds
ds
ljmp
ljmp
xor
outsb
sarl
out
fdivr
stc
jle
inc
add
cmp
add
dec
jmp
cmp
add
int
pushl
call
push
call
adc
mov
push
pop
lea
imul
call
imul
add
push
clc
inc
jne
call
jo
call
test
add
pop
jmp
jl
adc
pop
arpl
call
cmp
call
lock
call
pop
cld
call
pop
cld
incl
pop
pop
pushf
std
sbb
call
pop
cld
call
pop
inc
add
cld
call
pop
cld
call
pop
jp
push
pop
cld
call
add
add
add
mov
pop
add
add
add
inc
cmpunordps
pop
add
add
add
ja
ret
pop
add
add
cmpb
ret
pop
add
add
and
or
out
pop
add
pop
pop
cmp
xchg
add
shl
pop
mov
and
jae
mov
cs
ret
frstor
int3
push
sar
push
ret
out
and
mov
sarl
xchg
decb
push
push
mov
adc
cmp
mov
mov
push
sbb
in
cmp
add
lock
push
test
in
jb
cmp
lods
repnz
xchg
and
adc
and
jne
add
push
inc
andl
mov
mov
mov
icebp
adc
xchg
xorl
fldenv
add
xor
repz
fstpl
enter
mov
sahf
lock
add
add
and
push
fstpt
popa
lahf
lock
sbb
addr16
lock
enter
outsb
jb
xchg
xchg
push
cmp
dec
sbb
add
mov
int3
loop
repz
scas
das
add
pop
jae
or
lock
mov
xor
sarl
int3
test
aas
sub
in
pop
test
test
add
add
popf
mov
mov
lds
in
dec
aas
mov
mov
fwait
jle
dec
stc
xchg
call
dec
enter
dec
mov
adc
inc
dec
or
ror
jg
test
es
mov
stos
or
dec
xchg
loopne
sbb
xor
jp
jne
jp
push
jge
dec
add
mov
xor
sub
push
jne
sbb
or
je
pop
test
cli
sub
mov
data16
les
sti
push
ds
xchg
adc
js
inc
or
inc
lods
cs
movb
mov
cmp
movsl
dec
sub
xchg
mov
stc
pop
add
daa
div
or
add
xchg
ret
xchg
inc
mov
mov
dec
mov
stos
adc
pop
lahf
mov
push
add
shll
mov
mov
and
add
sub
cmp
test
mov
pop
into
fistps
xchg
jns
out
out
lea
dec
cwtl
lahf
in
add
adc
add
aam
add
add
dec
sub
xor
cmp
sub
sub
in
sbb
sub
sbb
or
or
sti
sub
add
outsb
cmp
xor
add
outsb
cmp
and
add
cmp
inc
cmp
pop
cmp
cmp
push
outsb
cmp
add
cmp
dec
outsb
cmp
insl
cmp
dec
outsb
cmp
outsb
ljmp
jle
jle
ljmp
call
ds
ljmp
pushl
ds
ljmp
decl
lock
call
pop
cld
call
push
outsb
cmp
pop
pop
cld
call
pop
cld
incl
pop
adc
pop
pop
cld
call
pop
cld
call
pop
cld
call
mov
cld
call
pop
cld
call
pop
cld
call
lcall
pop
pop
cld
call
pop
cld
call
pop
push
call
pop
cld
call
pop
cld
call
or
cmp
pop
pop
cld
call
pop
cld
call
cmp
cmp
pop
pop
cld
call
pop
cld
call
adc
add
add
add
add
add
add
add
add
add
outsl
xor
out
pop
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
arpl
add
add
add
add
add
add
add
adc
out
add
add
add
add
add
add
arpl
add
add
add
add
add
jmp
mov
add
jmp
adc
add
add
adc
add
adc
add
adc
add
es
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
mov
add
jmp
add
add
adc
add
es
adc
add
adc
add
adc
add
es
adc
add
adc
add
adc
add
ds
add
add
add
add
add
xchg
cmp
incb
add
out
add
add
add
add
add
add
add
add
add
add
xchg
cmp
mov
add
add
scas
add
add
add
scas
add
add
xchg
cmp
jle
add
outsb
add
add
add
ret
add
add
outsb
add
add
add
push
mov
add
add
add
add
add
pop
cld
call
push
xchg
cmp
pop
pop
cld
call
pop
cld
call
push
fwait
ds
pop
cld
call
pop
cld
call
pop
cld
incl
pop
in
ds
pop
cld
call
pop
cld
call
pop
cld
call
and
ds
pop
cld
call
pop
cld
call
pop
cld
call
call
call
pop
cld
call
pop
cld
call
mov
cld
call
pop
cld
call
pop
cld
call
mov
cld
call
pop
cld
call
pop
cld
call
jge
ds
add
add
add
add
add
add
add
cwtl
add
add
add
add
add
add
add
add
cmp
out
pop
add
add
add
add
add
cmp
add
add
add
add
add
add
add
pop
add
add
add
add
add
jmp
add
add
add
add
add
cmp
out
pop
add
add
add
add
add
aaa
sub
out
add
add
add
add
jmp
add
jmp
adc
add
adc
add
and
jmp
adc
add
adc
add
dec
and
jmp
adc
add
adc
add
adc
add
adc
add
adc
add
andb
adc
add
adc
add
adc
add
add
adc
add
add
add
adc
add
adc
add
adc
add
adc
add
shlb
add
outsb
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
push
mov
add
out
call
out
incl
mov
scas
add
scas
jle
cmp
lcall
add
nop
cmp
push
nop
cmp
or
cmp
rorb
lea
pop
aad
aas
pop
loope
aas
pop
int
aas
pop
pop
cld
call
pop
cld
call
pop
cld
call
pop
cld
call
pop
cld
call
pop
cld
call
pop
cld
call
pop
cld
call
pop
cld
incl
pop
pop
cld
call
pop
cld
call
pop
cld
call
pop
or
pop
push
cld
call
leave
xor
mov
sbb
int3
push
adc
in
dec
sub
pop
mov
add
push
cs
mov
sub
in
dec
test
lahf
xor
out
sbb
fbstp
sbb
divl
add
xor
and
xor
and
xor
add
cmpsl
xor
and
xor
and
xor
daa
xor
and
xor
and
xor
and
sar
popa
push
add
mov
inc
xor
adc
aaa
fistl
out
pop
pop
jecxz
daa
pop
lret
cmp
push
sbb
push
pop
sub
push
pop
dec
cmp
pop
push
cmp
pop
imul
pop
push
cmp
scas
xor
sahf
xor
add
dec
xor
das
outsb
xor
push
push
xor
push
xor
push
xor
dec
xor
out
in
xor
xor
lea
push
dec
jle
lea
xor
sahf
xor
cs
push
pop
xor
sbb
xor
or
sbb
xor
add
mov
xor
fnsave
add
sbb
lcall
aaa
stos
sbb
aaa
stos
sbb
aaa
lcall
aaa
push
or
push
sbb
pop
sub
cmp
sub
cmp
pop
cmp
insb
cmp
jl
stos
sub
pushf
cmp
cs
cmp
fdivrl
add
cs
cmp
cs
cmp
sub
cmp
sub
cmp
sub
cmp
sub
sub
int
insb
fidivs
mov
and
lods
ds
mov
cs
and
in
push
jne
cld
push
insl
sub
dec
sub
lods
sub
sub
sub
add
add
xor
jl
in
sub
lea
lods
cmp
sub
sub
sub
cmc
sub
sbb
xor
sub
xchg
sub
add
sub
xor
dec
sbb
xor
push
sub
sbb
mov
pop
repnz
add
das
xor
shrl
sub
fldt
rcrl
sub
add
sbb
sti
das
xchg
sbb
dec
xor
xchg
xor
fwait
xor
and
dec
sbb
out
adc
add
add
sub
cmp
stos
ss
adc
fwait
ss
adc
add
cmpsb
xor
in
add
cmp
cld
cmc
aaa
sbb
jmp
aaa
sub
add
aaa
sub
xor
ss
lret
cmp
mov
xor
or
out
xorl
jne
jns
jne
mov
xor
or
add
lea
stos
cmp
xchg
cmp
lcall
xor
dec
sub
add
mov
push
add
add
adc
xor
adc
xor
adc
hlt
xor
adc
add
mov
adc
bound
and
adc
sub
jp
xor
adc
adc
adc
push
adc
adc
xorl
movnti
lea
sbb
stc
adc
outsl
adc
inc
adc
mov
adc
xor
adc
add
adc
xor
adc
push
add
and
xor
or
add
xor
xor
mov
aad
push
and
filds
and
or
popa
sbb
mov
sub
imul
push
dec
lds
add
clc
cs
mov
je
icebp
loop
xor
dec
sub
inc
cs
dec
sbb
aas
das
and
das
add
sub
and
push
pop
mov
cmp
lcall
sbb
daa
sub
sbb
ljmp
negl
sub
and
pop
add
mov
pop
into
add
add
xor
adc
add
adc
xor
adc
xor
sub
punpcklbw
aas
push
stos
das
mov
adc
mov
xor
adc
movsl
inc
mov
mov
test
popa
and
push
xor
add
fs
ljmp
pop
add
test
mov
pusha
xor
call
xor
xor
sub
xor
ds
xor
xor
xor
add
xor
icebp
cmp
jmp
leave
cmp
clc
lods
cmp
cmp
cmp
push
sub
sub
cmp
in
push
add
add
add
mov
and
repnz
sub
aas
adc
add
scas
clc
lcall
add
scas
adc
xor
jnp
xor
jno
loop
lods
xor
pinsrw
push
lret
push
xor
push
repz
sub
xor
sub
xor
adc
icebp
adc
and
pop
xor
sub
dec
sub
add
jmp
das
pushf
inc
mov
clc
dec
cmpsl
sub
sub
sub
sub
add
pop
and
rcpps
rdtsc
and
fisubrs
cwtl
incl
sub
mov
cmp
movaps
push
lret
and
dec
fsubs
sbb
daa
call
jo
cld
call
das
sub
daa
mov
and
add
xor
add
sub
loope
mov
ljmp
xor
jno
mov
xorb
vmread
lds
jle
xlat
cvttps2pi
sbb
ret
cmovo
mov
xor
movlps
lret
psubsb
adc
paddusb
or
lret
push
adc
in
push
push
das
fisttps
adc
push
mov
add
push
sbb
in
push
das
testl
cmp
jecxz
and
fisttpll
data16
push
fs
mov
push
dec
das
jne
dec
das
xchg
add
nop
xor
clc
cmp
xor
call
xor
inc
cmp
cmp
push
xor
add
in
cmp
aaa
fidivrs
aaa
add
clc
aaa
lret
cmp
cld
and
cld
adc
add
add
mov
aaa
pushf
cld
stos
aaa
mov
fnsave
push
repz
pop
jmp
aaa
push
inc
aam
data16
aaa
pop
sub
aaa
bound
aaa
mov
aaa
jle
mov
pusha
sub
aaa
stos
sub
aaa
cmpsb
cld
sub
aaa
add
sub
cmp
es
cmp
sbb
adc
and
cmc
cmp
mov
inc
cmp
and
fidivrl
add
sbb
cmp
sbb
clc
cmp
mov
sbb
add
add
add
xor
adc
xor
adc
lret
ss
and
es
cmp
and
hlt
cmp
cmp
sahf
and
mov
cli
loopne
cmpsb
add
sbb
in
andb
loop
and
fxtract
and
inc
and
shlb
mov
cmp
pushl
pop
and
jmp
and
sbb
call
test
call
cwtl
test
fldcw
lods
in
sub
das
int3
jmp
sub
loop
sub
dec
sub
inc
inc
outsb
sub
dec
pop
sub
sub
hlt
add
cld
sub
add
test
add
and
shrb
je
sahf
sub
push
and
daa
sbb
inc
es
adc
and
or
add
add
xor
adc
xor
xor
push
sub
fimuls
xor
jecxz
adc
test
push
test
das
add
inc
sbb
push
pop
sbb
or
sub
hlt
or
sbb
popf
xor
xor
sub
sub
rcrb
test
mov
push
xor
or
aaa
out
cld
test
mov
xor
sub
xor
rcrb
xchg
xor
stos
or
xor
add
and
xor
negl
cmp
neg
cmp
xlat
cmp
fwait
cmp
xor
push
cmp
aaa
push
cmp
pop
and
ds
and
ds
and
aas
push
and
aas
inc
and
aas
cli
and
aas
lock
aas
daa
and
movsb
aas
lds
stos
aas
out
sarl
and
aas
aad
fnstcw
add
push
stc
call
add
add
hlt
dec
xor
mulb
xor
idivb
xor
imul
xor
ljmp
inc
jmp
ss
fidivl
mov
cmp
inc
out
mov
cs
or
pop
add
xor
sbb
or
test
sbb
sbb
and
mov
add
test
icebp
add
add
pop
sbb
xor
add
pop
ficoml
dec
out
or
in
adc
sbb
adc
inc
adc
pop
lret
and
lcall
adc
jb
jbe
jge
aad
pushf
mov
adc
inc
fnsave
jo
add
sbb
popa
or
add
adc
in
push
and
adc
and
and
adc
sbb
add
adc
adc
out
adc
lea
dec
adc
es
adc
and
adc
mov
jns
mov
stos
sbb
sbb
or
push
push
sbb
xchg
and
das
and
pop
pcmpeqb
pop
add
ret
test
add
mov
imull
and
and
sub
cs
and
fadds
jmp
sub
stos
add
dec
sub
inc
and
sub
and
xor
psubusb
addr16
xor
mov
je
push
xor
dec
xor
das
lock
push
xor
pop
xor
push
dec
xor
add
xor
or
xor
sub
cmp
xor
push
xorl
mov
cmp
jp
pop
cmp
call
fstpt
pop
call
add
jl
adc
cmp
and
cmp
or
dec
cmp
adc
arpl
adc
jp
add
cmp
icebp
jmp
ds
jmp
ds
jmp
aas
ja
movsb
aas
inc
in
out
nop
stc
pushl
add
add
mulb
cwtl
lock
dec
icebp
stos
xor
icebp
sbb
pop
lea
push
out
adc
out
or
in
push
aaa
inc
sbb
inc
inc
sbb
or
lock
rorb
roll
and
push
or
dec
adc
inc
pop
sbb
int
in
cs
add
cs
adc
sbb
pop
and
push
pop
sbb
fstps
xchg
inc
jnp
repnz
sbb
sub
sbb
sbb
add
scas
or
push
orl
in
sub
rorl
push
mov
or
add
fisttpl
lcall
or
repnz
lea
jne
or
jecxz
dec
push
add
add
adc
adc
adc
adc
adc
pcmpgtd
adc
adc
int3
adc
loopne
dec
adc
add
adc
loopne
add
add
xor
add
sti
xor
and
cmp
in
clc
push
adc
add
add
das
pop
add
das
faddl
jle
adc
push
xor
daa
xchg
xor
xor
mov
sub
les
arpl
aam
pop
aaa
mov
push
aaa
mov
dec
aaa
in
add
hlt
sub
ss
and
ss
sbb
les
and
aam
sbb
mov
adc
mov
or
and
shll
add
mov
ss
test
ss
out
cmp
out
cmp
out
cmp
mov
dec
out
cmp
cwtl
cmp
mov
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
loopne
inc
out
cmp
out
cmp
test
lcall
add
add
in
cmp
icebp
inc
cmp
mov
jmp
jge,pt
aam
incl
add
pop
cli
adc
movsl
adc
cmp
mov
or
mov
adc
repz
sbb
movsb
sbb
jne
sbb
sbb
fiadds
sbb
dec
inc
sbb
cmp
cmp
mov
clc
sub
dec
sbb
sbb
or
sbb
cld
jg
jmp
push
adc
inc
adc
jmp
sbb
call
jp
pop
pushf
push
mov
es
push
push
sbb
add
mov
push
arpl
jo
fadds
call
sbb
rorl
negl
or
pop
lods
sbb
mov
cli
push
jo
nop
pop
jnp
mov
fcomps
pop
add
mov
pop
add
adc
adc
adc
adc
adc
adc
adc
adc
lea
push
adc
push
add
cmp
jl
inc
xor
mov
jp
mov
xor
or
fadds
stos
xor
shrl
jnp
sbb
cmc
cmp
pop
outsb
cmp
xchg
cmp
test
imul
das
nop
and
das
lods
and
jb
mov
pop
adc
xor
adc
lods
or
aaa
xor
ss
sub
xor
adc
xor
or
xor
add
cs
out
int
int3
out
xor
ds
cmp
ds
pop
ds
out
xchg
outsl
in
xchg
ds
in
mov
ds
jmp
ds
sarb
or
push
aas
shr
xor
inc
in
mov
decl
icebp
xor
enter
call
icebp
mov
xor
xor
or
shr
jnp
add
out
jl
mov
lock
stc
movq
jo
adc
inc
loop
or
dec
and
imul
adc
xor
sub
loopne
add
pop
mov
xor
push
popf
sbb
ficoml
adc
dec
pop
xor
adc
xchg
call
inc
or
add
dec
mov
leave
inc
dec
or
aas
scas
sbb
lods
adc
and
ficompl
push
adc
js
mov
je
add
add
push
cmp
pop
add
adc
cvtpi2ps
ret
adc
adc
adc
adc
xchg
adc
mov
adc
adcb
adc
adc
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
pminsw
and
cli
adc
pminsw
add
or
xor
or
add
add
daa
or
sub
cs
mov
ds
lods
sub
push
movsl
sub
push
es
daa
int
out
add
dec
sub
daa
inc
sub
and
xor
sbb
xor
adc
xor
or
xor
daa
sbb
xor
adc
xor
and
xor
or
xor
adc
xor
lds
hsubpd
pcmpeqw
jbe
insb
xor
icebp
jmp
mov
xor
jmp
add
add
pop
cmp
fdivrl
dec
repnz
bnd
mov
out
jecxz
dec
cmp
xor
fidivrs
jb
sahf
xchg
aas
mov
cli
ljmp
pop
add
xor
pop
mov
dec
sbb
xor
sbb
xor
sbb
xor
xchg
sbb
add
add
add
pop
aaa
pop
adcb
sbb
or
or
or
pop
clc
mov
add
sub
std
sub
add
pop
rorl
dec
adc
dec
xor
addb
and
addr16
and
push
add
or
data16
adc
outsb
inc
or
or
add
jge
loopne
adc
fsubrs
sbb
nop
lcall
inc
pop
adc
inc
add
mov
mov
push
testl
std
stc
xor
sti
or
cli
inc
or
aam
inc
sti
fisttpll
cld
push
or
xchg
add
adc
add
adc
aas
addb
lock
mov
mov
hlt
in
sbb
add
cmp
scas
adc
repz
pop
adc
int3
pop
pop
notb
stos
testb
sti
div
sbb
cld
or
aaa
lods
or
push
xor
loope
and
and
xor
adc
test
and
mov
adc
cmp
add
hlt
cmp
daa
leave
cmp
daa
mov
adc
xor
jge
push
and
cmp
sbb
cmp
out
mov
sarl
push
es
cmp
daa
and
sbb
cmp
jmp
adc
or
add
cmp
scas
adc
test
xor
adc
mov
sti
adc
xchg
xor
mov
adc
mov
xor
adc
sbb
push
adc
pop
xor
pop
xorl
pop
lods
xor
pop
push
xor
adc
adc
enter
cmp
movsb
xor
adc
xor
in
xor
clc
xor
adc
xor
fs
mov
sbb
add
inc
push
adc
dec
dec
adc
inc
jbe
dec
sub
adc
and
adc
add
cli
add
sbb
dec
pop
es
push
push
ljmp
pushf
dec
lret
inc
and
xor
adc
adc
adc
sub
adc
and
adc
outsl
adc
or
addl
add
fcomi
pop
push
mov
loope
cmc
stc
mov
pop
stc
orl
clc
sbb
insl
imul
or
stc
and
or
clc
push
or
clc
push
or
stos
or
mov
adc
std
xor
mov
std
lahf
adc
std
test
cli
std
jg
and
add
add
push
push
sar
push
add
sti
sahf
or
sti
gs
mov
cmp
inc
adc
add
add
xor
add
das
push
mov
jg
pop
das
or
xor
fldenv
shrb
mov
cs
fldl
and
fisubs
ret
es
sub
add
inc
sub
pop
sbb
or
xor
sub
xor
xor
sub
js
xor
xor
nop
xor
or
in
mov
add
or
cmp
or
mov
jp
sub
cmpsl
cmp
or
cmp
or
cmp
or
cmp
or
cmp
add
cmp
or
mov
or
cmp
or
scas
or
cmp
stc
pop
pop
adc
add
xor
adc
fisttpll
aas
rorb
aas
test
add
and
call
arpl
pop
push
or
pop
xchg
adc
pop
and
pushw
mov
adc
out
adc
jp
push
add
notl
sbb
dec
out
push
jnp
fisttpl
cli
inc
fisttps
sub
or
sbbb
add
pop
ds
shrd
mov
fisttpll
fwait
decb
or
out
lcall
fnstsw
or
dec
lods
or
push
or
mov
add
pop
loop
ljmp
cli
clc
mov
ror
cmp
adc
repnz
adc
loopne
push
repz
repnz
ret
push
jnp
stc
adc
push
in
decl
gs
out
adc
testb
out
inc
psubusb
aaa
adc
out
lcall
icebp
xor
fs
or
sti
movsb
or
add
into
pop
pop
negb
or
idiv
cmp
aas
cmp
cmp
fidivrl
sbb
cmp
push
out
lcall
cmp
sbb
cmp
pop
mov
cmp
sub
add
add
jmp
adc
add
or
das
push
add
das
clc
add
jle
jae
jno
scas
add
push
sub
and
subl
and
sahf
xor
push
divb
pop
inc
xor
mov
adc
stc
adc
imul
aaa
push
adc
aaa
mov
push
cmp
or
cmp
or
jmp
xchg
add
cmp
add
cmp
add
lahf
cmp
and
or
cmp
or
cmp
or
repz
cmp
dec
cld
sub
pop
repz
inc
inc
add
pop
add
mov
add
and
add
sbb
insb
std
rolb
add
xor
pop
arpl
add
xor
adc
out
push
or
jg
scas
inc
loop
xlat
inc
add
stc
inc
pop
or
push
and
or
mov
and
or
or
packsswb
int3
jno
jmp
or
jecxz
or
ljmp
adc
push
adc
out
test
call
inc
in
lods
or
xchg
jmp
or
repz
push
push
in
add
pop
in
fwait
push
pop
in
lds
cmp
mov
das
in
test
push
lret
push
aaa
cli
xlat
or
stc
or
or
out
cli
inc
or
cli
out
cmp
mov
or
rorb
adc
stc
decl
or
sub
out
sbb
mov
push
mov
pop
push
mov
push
jno
pop
push
cmp
mov
push
xor
adc
cmp
sbb
cmp
adc
cmp
adc
cmp
sbb
cmp
mov
mov
push
jns
jo
je
inc
cmp
inc
cmp
cmp
adc
cmp
sbb
cmp
adc
cmp
adc
cmp
add
pushf
cmp
stos
cmp
cwtl
cmp
sbb
add
stc
cmp
lret
ds
pop
aas
std
jmp
test
pop
cli
ljmp
ljmp
adc
xor
adc
xchg
adc
xor
aas
xor
adc
cmp
xorl
adc
xchg
adc
xor
cwtl
add
pusha
add
xor
add
xor
add
les
push
ss
add
aaa
jo
mov
cmp
pop
cmp
adc
fdivr
cmp
cmp
ret
std
ret
std
fneni(8087
sub
or
add
nop
repz
inc
lret
idiv
dec
cmc
roll
ds
xor
xchg
inc
sti
rcrb
cli
sbb
or
stc
repz
and
and
in
stc
mov
mov
xor
push
pushl
dec
push
add
inc
xor
pop
cmp
decl
sub
push
sbb
cmpsb
add
lock
lods
icebp
out
inc
xor
repz
hlt
sbb
lret
hlt
push
cmp
add
or
jp
clc
repz
clc
repz
repz
or
enter
or
ja
shl
cwtl
repnz
hlt
xor
hlt
cld
repz
cmc
fs
adc
push
imul
hlt
mov
mulb
hlt
push
testl
negb
shl
pushl
les
sbbl
xor
dec
sub
jmp
cmp
cmp
xor
sub
popf
and
sbb
aaa
cmpsb
adc
aaa
add
aaa
fdivr
jmp
ss
movsb
ss
mov
imul
cli
cmp
enter
shrb
push
mov
out
add
pusha
cmp
sub
cmp
in
clc
pop
sbb
add
add
add
pushl
push
xor
add
xor
sub
xor
jmp
sub
out
sub
jmp
sub
aaa
aad
in
repz
cmp
je,pn
jge
xchg
cmp
mov
cmp
xor
jle
push
cmp
sub
cmp
cltd
cmp
subl
mov
sarl
das
cmp
pop
stos
stc
mov
xor
stc
in
sub
sub
jae
inc
sbb
stc
xor
int3
clc
jne
mov
lods
clc
xchg
clc
jmp
insb
clc
ljmp
sbb
pop
and
dec
inc
int
add
out
xacquire
repnz
es
add
and
or
pop
and
fs
les
adc
inc
add
in
fs
in
stos
in
in
mov
in
in
in
add
mull
idiv
divl
testl
negl
idivb
clc
scas
mulb
clc
cld
negb
stc
or
and
int3
divb
clc
jmp
ljmp
add
out
stc
mov
test
stc
pop
jmp
push
cli
scas
call
or
add
in
xor
enter
ret
add
add
repz
repnz
icebp
jg
pop
das
insl
test
aas
test
das
out
mov
mov
imul
arpl
cs
aam
pop
add
sub
pop
inc
subl
inc
xor
das
mov
ja
xor
pop
and
jmp
add
xor
or
xor
jmp
cmpsb
xor
insb
xor
leave
dec
xor
and
dec
leave
das
xor
adc
stos
stos
xor
aas
xor
mov
aaa
add
divb
mov
movsb
cmp
sub
or
sbb
pop
sub
mov
jg
sub
lods
sub
cmp
pop
sub
fsubrl
js
jae
clc
ljmp
cli
incl
push
add
arpl
mov
mov
pop
xor
das
xorl
push
xor
xor
xor
xor
xor
xor
mov
jl
jne
mov
jmp
iret
icebp
and
mov
shr
repnz
aad
rorl
hlt
push
dec
mov
cmc
hlt
cmp
fdivr
fldt
sbb
pop
jp
js
push
cli
cmp
sbb
cld
inc
lock
pop
shl
inc
in
lock
and
dec
ljmp
push
dec
shr
inc
sbb
push
add
in
pop
inc
mov
hlt
xor
adc
insb
pop
sar
test
jmp
sti
les
add
cli
adc
out
mov
push
add
add
cmc
mov
pop
negb
ljmp
jmp
sub
ret
jae
push
pop
add
hlt
div
nop
icebp
push
ljmp
dec
in
ljmp
or
cli
testl
out
clc
clc
in
clc
call
out
testl
sub
dec
out
clc
dec
out
clc
dec
out
clc
js
or
push
mov
in
shrb
adc
mov
cmp
sahf
jg
nop
sahf
pop
cmp
inc
cmp
jle
cmp
jge
cmp
add
cmp
pop
cmpl
pop
push
cmp
dec
cmp
dec
sbb
in
sub
jmp
sbb
add
and
das
sub
mov
sbb
cmpsl
das
jmp
mov
cmp
pop
cmp
mov
clc
in
adc
add
in
xor
xor
pop
pop
dec
cmp
es
xchg
sub
ds
jae
fiadds
add
add
stos
xor
xor
lods
cs
xor
sub
xor
ja
ljmp
cmp
and
add
das
sbb
cmpsb
sub
ds
sub
aas
xchg
sub
aas
insb
sub
aas
jle
iret
aas
test
fnstsw
lret
sub
aas
mov
cmp
pop
cltd
cld
call
and
or
add
dec
in
sbb
inc
in
das
pop
je
inc
pop
pop
hlt
push
pop
inc
in
popa
pop
xor
adc
xlat
in
shl
cmp
repnz
mov
repz
inc
jmp
repz
or
sti
and
call
sbb
cmp
sub
imul
dec
or
out
pop
add
out
jnp
cwtl
out
mov
enter
jecxz
out
stos
dec
stos
out
mov
dec
add
push
repz
out
adc
add
lret
icebp
sbb
pusha
icebp
or
pusha
icebp
lret
icebp
lret
icebp
and
lret
icebp
push
nop
icebp
push
mov
icebp
dec
repz
icebp
dec
repz
repz
icebp
or
fs
loop
add
lret
out
mov
lock
in
out
test
mov
fs
mov
out
and
loop
and
decl
icebp
xor
push
mov
gs
xor
jo
movsl
out
xor
ret
int
lock
stos
mov
gs
lea
push
xor
xor
in
adc
or
add
xor
imul
xor
pop
xor
imul
sub
inc
xor
xor
xor
adc
add
adc
add
adc
add
adc
add
add
add
out
out
out
out
mov
incl
scas
ljmp
mov
ljmp
jle
ljmp
ljmp
jle
jle
ljmp
ljmp
ds
ds
ljmp
ljmp
ds
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
incl
pop
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
jmp
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
jle
add
outsb
add
add
add
jle
add
jle
add
pop
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
incl
pop
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
jmp
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
jle
add
outsb
add
add
add
jle
add
jle
add
outsb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
out
incl
out
out
mov
ljmp
mov
ljmp
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
incl
pop
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
adc
add
adc
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
adc
add
scas
add
add
add
add
add
add
add
add
add
outsb
add
add
add
jle
add
jle
add
outsb
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incb
add
out
add
add
add
add
add
add
add
add
add
add
add
add
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
incl
pop
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
out
add
add
incb
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
jle
add
outsb
add
add
add
jle
add
jle
add
outsb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
incl
pop
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
ds
add
cs
add
incb
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jle
add
outsb
add
add
add
jle
add
jle
add
outsb
add
add
add
ds
add
add
add
sbb
incl
pop
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
call
sbb
incl
pop
sbb
call
sbb
call
sbb
call
sbb
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
adc
add
adc
add
adc
add
mov
sub
js
inc
out
inc
lods
shll
or
lea
repz
insl
push
ljmp
add
pop
pop
and
ret
cmpb
or
out
adc
sbb
jle
cmp
subl
stos
ljmp
sbb
push
push
mov
inc
or
insb
lret
scas
jp
add
add
lock
mov
fidivl
cli
insl
mov
out
mov
mov
add
or
notl
inc
test
roll
fstp
mov
sahf
jns
hlt
out
xlat
mov
mov
cmp
mov
shlb
pushf
ret
or
sahf
orl
addb
pop
leave
scas
cmp
ds
ret
in
mov
add
jmp
xor
xchg
mov
fucomi
adc
or
movsl
sub
sub
mov
dec
movsl
push
sub
mov
jno
fstpl
hlt
xor
into
jmp
or
test
mov
sub
or
and
sbb
fmull
repz
adcb
scas
add
add
mov
sub
inc
cmp
or
test
fidivl
cmpsb
cmp
ret
in
or
push
jcxz
movsb
xor
shll
hlt
lret
pop
mov
adc
repnz
adc
adc
and
sub
cmp
cmpsb
xor
cmp
xor
mov
jp
xlat
incl
in
or
sahf
lret
pop
push
cmp
inc
and
add
or
cmp
loopne
jmp
xor
xchg
daa
xor
adc
mov
js
xchg
or
arpl
jmp
mov
pop
mov
jp
lcall
jmp
imul
add
add
add
add
outsb
xor
test
jnp
cld
mov
cmp
add
ljmp
mov
xorl
inc
loopne
mov
mov
and
push
inc
jnp
in
mov
cld
dec
pop
jnp
clc
mov
cld
inc
pop
jnp
call
out
cld
push
push
lock
add
add
cld
dec
dec
cld
push
mov
add
push
jge
hlt
xchg
inc
decb
out
jl
hlt
sub
pop
jae
jge
lock
std
inc
pop
jnp
fdivrl
ret
dec
es
call
xchg
cmp
adc
inc
push
test
clc
mov
out
dec
in
mov
test
add
or
jl
test
test
jmp
aam
mov
cmpsb
mov
int3
dec
xor
lret
int3
ret
xorl
out
sbb
clc
mov
test
mov
sub
or
adc
pushf
fs
mov
inc
add
arpl
pop
add
imul
add
mov
or
xchg
scas
aas
inc
cld
pop
add
add
push
mov
sti
cmp
pop
jae
jnp
cld
pushf
testb
mov
arpl
roll
test
jns
lea
xor
push
ss
int3
dec
ss
int3
jecxz
lret
int3
bound
mov
cmp
xor
pop
pop
aam
lret
int3
add
xor
lret
int3
bound
mov
dec
mov
dec
decl
sahf
pop
inc
pop
movsl
mov
int3
lret
xor
lret
int3
loop
jmp
jae
gs
add
adc
incb
lcall
out
sbb
aas
pop
jnp
clc
out
mov
inc
push
jl
vmwrite
pushf
mov
push
pushf
lods
or
mov
sti
mov
cli
cmpsl
mov
push
fdivrs
add
push
jns
cld
xchg
inc
decb
fcmovne
dec
adc
push
pop
add
adc
dec
idiv
dec
mov
mov
in
aas
jae
pop
add
add
sbb
jmp
sarl
int3
push
ss
int3
dec
ss
int3
arpl
lret
int3
ret
mov
repz
mov
inc
pop
inc
add
cmpsl
mov
int3
dec
ss
int3
arpl
lret
int3
ret
xorl
test
xorl
pop
add
mov
test
and
push
jecxz
inc
or
rolb
add
pop
sbb
mov
jl
push
jnp
cld
pushf
scas
sti
cmp
insb
inc
mov
or
sbb
add
add
rolb
and
inc
xchg
pop
clc
movhps
xchg
js
or
push
clc
mov
push
add
icebp
test
jns
or
repz
jp
or
test
ja
or
add
clc
add
mov
movsl
mov
xor
test
jns
in
mov
mov
cld
push
add
call
add
call
jns
lock
test
add
jle
add
add
lock
jl
pop
add
test
add
in
add
mov
cld
push
sbb
inc
add
and
mov
mov
and
push
test
jbe
or
jns
add
cld
inc
pop
jns
hlt
mov
adc
or
call
add
adc
mov
mov
jl
pop
mov
fimull
call
add
add
mov
pop
xorl
sbb
cli
add
dec
mov
dec
inc
mov
mov
add
sbbl
inc
add
sbb
mov
push
pushf
inc
hlt
push
out
cltd
cmc
clc
test
pop
out
mov
mov
mov
add
mov
adc
mov
in
mov
add
mov
scas
adc
lcall
into
int3
loop
in
jae
push
decl
jb
inc
pop
mov
add
out
std
add
lea
std
dec
add
mov
push
pushf
push
add
pushf
inc
or
push
hlt
mov
pop
ret
int3
jecxz
int3
bound
cmp
roll
push
inc
pop
mov
movsl
les
int3
jecxz
int3
bound
mov
mov
xor
ds
inc
xor
add
inc
hlt
pushf
inc
in
mov
or
dec
clc
sahf
push
hlt
mov
lcall
add
add
mov
mov
cld
push
or
lea
mov
sbb
cmp
mov
in
sbb
mov
mov
cmp
shr
jmp
add
mov
push
int3
ror
int3
lret
into
int3
jecxz
int3
inc
mov
xorl
xor
pop
push
add
add
push
outsl
push
hlt
pushl
mov
push
mov
mov
mov
push
push
push
decl
je
or
xor
add
add
jmp
mov
add
adc
add
adc
add
add
pushf
adc
or
add
gs
adc
and
mov
xchg
inc
pop
sub
mov
mov
inc
pop
mov
push
mov
or
mov
push
call
sbbl
adc
adc
or
add
loop
xor
arpl
int3
ret
mov
or
inc
or
mov
jmp
cld
add
int3
lret
into
int3
jecxz
int3
inc
mov
xor
mov
add
mov
mov
mov
add
sahf
push
loopne
push
loop
mov
push
mov
cmp
das
mov
aas
pop
mov
add
cmovbe
push
jg
sti
ljmp
mov
push
imul
add
push
add
std
dec
lock
mov
loope
inc
ret
push
mov
push
mov
push
call
adc
mov
add
jmp
add
mov
push
push
cmp
jae
pushf
inc
call
je
mov
add
mov
mov
mov
mov
cmp
mov
xor
testl
or
inc
sub
inc
outsl
mov
adc
or
pushf
push
call
inc
adc
push
cmp
testl
mov
jmp
mov
gs
sbb
add
add
push
add
xchg
jmp
jg
or
stos
or
insl
or
push
decl
cmpl
jne
push
push
xor
add
inc
ja
dec
xor
cli
dec
lock
or
or
xor
add
add
lock
xchg
cmp
add
push
add
add
xor
add
notl
lahf
jl
pop
add
fcomps
add
mov
mov
push
mov
push
mov
xchg
inc
pop
push
call
adc
mov
jle
movsb
pop
add
add
cmp
fcoms
mov
dec
addl
inc
pop
daa
inc
xor
mov
or
add
push
mov
or
add
push
call
xchg
lds
lret
adc
adc
sub
pop
test
add
mov
push
mov
mov
mov
mov
call
sbb
mov
push
scas
inc
stc
lcall
jl
push
mov
cmpsb
or
call
adcl
inc
dec
lea
push
pushf
aas
loopne
sbb
inc
pop
add
or
push
aas
sub
mov
inc
pop
incl
add
push
insb
decb
pop
push
notl
jmp
mov
add
pop
add
mov
mov
jecxz
int3
inc
in
pop
or
int3
arpl
int3
loop
in
jmp
or
pushf
push
xchg
or
add
add
loop
in
scas
cmp
movsb
or
add
jnp
idiv
xchg
mov
mov
push
push
pushf
or
add
add
push
jmp
mov
push
ret
int3
inc
mov
xor
mov
add
mov
add
fdivrs
add
pop
testb
pop
add
add
mov
sahf
add
call
mov
cmp
testl
sbb
add
pop
jmp
adc
add
add
xorl
mov
or
pop
add
add
add
insb
add
and
inc
pop
mov
mov
mov
sub
cmp
mov
mov
mov
push
cwtl
or
or
add
sbb
cld
aas
add
push
add
add
add
jmp
add
mov
notl
je
or
mov
fildl
push
call
xchg
mov
mov
push
call
sbb
mov
mov
push
push
mov
push
call
xchg
mov
mov
mov
add
dec
lock
mov
fsub
jmp
add
mov
mov
lds
add
push
mov
adc
hlt
push
das
int
cmp
in
add
aad
push
cmp
hlt
add
mov
mov
sub
mov
push
add
push
cli
add
add
add
or
mov
mov
jae
mov
add
mov
adc
clc
mov
adc
clc
mov
mov
xchg
ret
pop
add
add
clc
xor
add
inc
dec
mov
jmp
mov
mov
xchg
or
leave
mov
mov
inc
pop
xor
mov
cli
xchg
or
inc
testl
or
mov
mov
xchg
jmp
mov
daa
rorl
pop
mov
push
call
xchg
mov
or
call
test
cld
xor
sub
pop
jg
add
xor
add
jl
roll
mov
add
add
std
out
dec
repz
push
xchg
pop
push
mov
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
stos
lcall
mov
out
test
out
test
dec
adc
call
test
pop
jl
loope
pop
dec
mov
push
cmp
mov
insl
cld
sub
mov
sbb
aaa
imul
ret
lods
or
mov
push
jle
cmp
sbb
jge
out
mov
outsl
jns
test
int
inc
and
mov
inc
jo
fstp
stos
mov
cmpsb
je
loop
les
mov
xchg
sub
adc
or
call
pop
mov
inc
bnd
sub
xor
push
lock
xorb
xlat
aam
adc
lock
roll
sub
popa
rcrl
aad
jns
xchg
rcrl
fistpl
insl
ds
jl
rorl
adc
rolb
sbb
sahf
pop
mov
scas
stos
jmp
in
cmp
andb
and
or
rcr
push
push
or
mov
bound
adc
jge
lcall
icebp
mov
mov
and
sub
test
loopne
mov
dec
inc
bound
push
adc
cmp
in
ret
sub
dec
aas
test
cmp
pop
inc
jg
pop
push
and
andl
pop
movsl
es
push
sub
xchg
jmp
adc
les
aad
adc
mov
ljmp
into
push
sub
ja
xchg
cltd
out
jmp
xor
rorb
in
test
mov
int3
ficoms
sahf
dec
inc
shll
mov
mov
and
mov
sub
fs
xchg
call
aaa
lret
aam
sub
andb
xor
movsl
test
and
jmp
jmp
jmp
jmp
jmp
jmp
add
jns
jae
je
add
xor
xor
pop
add
popa
add
imul
je
add
add
add
add
inc
add
add
add
add
xor
inc
add
add
xor
xor
sub
add
add
sub
add
inc
add
add
add
add
add
inc
add
add
add
xor
inc
add
add
pop
add
outsb
add
jb
outsl
add
push
add
jb
jbe
add
xor
xor
add
push
gs
jo
outsb
dec
gs
add
jbe
jo
xor
add
add
cld
jo
add
jno
add
jno
add
jno
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
imul
insb
insb
outsl
arpl
add
addl
imul
imul
jns
add
cmpsl
add
jae
jb
popa
je
add
jg
inc
jb
popa
je
inc
imul
outsl
popa
fs
imul
add
and
inc
gs
jb
arpl
fs
jae
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
hlt
add
je
je
arpl
bound
arpl
inc
inc
dec
xor
cs
insb
add
add
ss
add
add
add
js
add
add
add
js
add
mov
add
add
add
sbbb
add
cmp
add
ss
add
add
add
add
add
push
add
addb
add
ss
add
add
add
or
add
add
test
add
ss
add
add
add
add
add
nop
add
addb
add
ss
add
add
add
or
add
addb
ss
add
add
add
call
add
addb
add
ss
add
add
add
or
add
add
add
add
add
ss
add
add
add
add
add
adc
add
ss
add
add
add
or
add
add
add
add
add
sub
add
add
add
add
add
push
add
addb
add
ss
add
add
add
or
add
add
push
xchg
add
add
push
add
add
add
int
int
rolb
add
add
add
add
add
adc
add
add
add
add
add
mov
mov
testb
sbb
adc
ret
adc
dec
ja
lea
mov
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
push
add
add
adc
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xorb
pop
jo
add
jo
add
xchg
lock
hlt
les
lock
add
jo
add
jo
add
add
add
add
add
inc
inc
add
les
push
lock
inc
inc
sldt
cmova
inc
push
ud0
incl
pushl
inc
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
sub
add
add
rolb
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
inc
mov
add
push
add
inc
mov
aas
add
add
add
add
add
add
add
and
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
cld
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
sbb
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
bound
push
add
add
add
add
add
add
add
add
add
add
add
add
outsl
add
jo
outsl
add
popa
add
add
outsb
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
add
add
add
add
jb
add
add
insb
add
add
add
imul
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
pop
add
je
insl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
push
add
dec
add
dec
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
jno
cmp
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
add
dec
add
add
pop
add
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
bound
push
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
jae
scas
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
imul
add
add
add
inc
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
aas
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
sub
jns
imul
sub
dec
imul
je
inc
outsl
jb
outsl
jb
je
outsl
outsb
and
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
insl
bound
fs
je
je
and
insl
gs
insl
outsl
outsb
and
jo
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jbe
jb
imul
xor
xor
xor
and
gs
xor
and
ds
jae
jb
jo
imul
insl
outsl
outsb
cmp
fs
jb
jo
imul
fs
outsb
fs
arpl
or
and
gs
outsb
fs
je
jae
gs
bound
or
and
and
and
jae
gs
bound
fs
je
je
or
and
and
and
and
and
gs
xor
and
and
and
and
and
and
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
or
and
and
and
and
and
jb
imul
xor
xor
xor
or
and
and
and
and
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
or
and
and
and
and
and
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
or
and
and
and
and
and
addr16
addr16
or
and
and
and
and
ds
and
fs
outsb
fs
je
jae
gs
bound
or
gs
outsb
fs
arpl
or
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
and
and
and
cmp
gs
gs
gs
jb
jbe
insb
gs
or
and
and
and
and
and
gs
gs
gs
js
arpl
imul
insb
or
and
and
and
and
and
and
and
gs
cmp
outsb
jbe
imul
or
and
and
and
and
and
and
and
inc
arpl
jae
cmp
jae
and
and
and
and
and
and
ds
and
and
and
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
je
jne
je
outsb
outsw
ds
jae
gs
bound
.byte
.byte
add
add
pop
add
add
movsb
xor
xor
outsb
xor
xor
xor
xorl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xchg
cld
ss
aaa
and
inc
aaa
push
aaa
jg
test
lahf
aaa
movsb
aaa
add
add
add
add
cmp
jl
.byte
cmp
