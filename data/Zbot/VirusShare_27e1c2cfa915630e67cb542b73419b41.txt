testl
cli
add
add
add
add
sub
ljmp
ret
push
mov
add
addl
push
lea
push
lea
push
call
mov
ret
dec
and
imul
push
dec
fcoms
adc
test
mov
fcomi
push
jo
sbb
add
ds
repnz
enter
dec
clc
sbb
push
cmp
shlb
pop
adc
and
mov
fbstp
or
xchg
or
sbb
jbe
ja
push
pushw
pop
divl
inc
dec
je
push
pop
add
gs
std
sti
push
mov
jne
js
xchg
push
inc
or
jg
xchg
cli
aam
pop
cld
push
or
leave
ret
sub
xor
push
push
imul
lahf
fnsave
push
insb
in
or
adc
push
fadds
dec
add
clc
iret
inc
outsb
dec
and
dec
xor
int
jnp
pusha
sahf
lods
and
clc
lret
fdivs
sti
inc
jne
clc
daa
lahf
out
jne
lock
test
pop
push
scas
push
xor
call
add
sar
outsb
out
xor
in
ficompl
jae
sub
clc
loope
loop
jno
mov
lahf
lock
fstpt
inc
dec
xor
add
daa
fdivr
push
adc
sbb
jmp
xchg
addl
fbstp
lret
movsl
dec
sub
scas
adc
push
adc
aas
mov
sbb
mov
pop
sub
inc
sbb
push
inc
je
sub
mov
mov
insl
les
mov
outsb
fists
jb
xor
outsb
pop
loopne
xchg
outsl
cld
ss
in
sbb
inc
adc
dec
adc
sbb
outsl
decl
pop
jno
dec
neg
jge
fincstp
rolb
inc
push
lock
mov
sub
filds
mov
not
dec
add
adc
sub
pmulhuw
inc
add
stc
add
inc
sub
mov
fdiv
inc
dec
sub
cmp
dec
pop
test
inc
dec
mov
dec
adc
adc
add
add
or
bound
insl
outsl
outsl
sbb
pop
inc
add
filds
and
fcoms
sub
dec
mov
dec
arpl
ficoms
jle
jle
ret
inc
dec
dec
or
jne
loope
or
adc
enter
cmpsb
testb
sbb
adc
push
stc
data16
ja
add
xchg
aam
popa
jecxz
negb
pop
mov
fmull
dec
je
ret
push
mov
adc
sub
fstp
enter
dec
or
pop
std
outsl
dec
sahf
mov
push
push
fs
dec
xor
je
inc
inc
jbe
add
xchg
mov
cmp
imul
incl
dec
cltd
pop
aaa
jmp
dec
mov
push
int3
das
mov
fxtract
or
pop
mov
sar
cmp
pop
xchg
or
aaa
or
jg
dec
inc
dec
cld
aaa
push
cmp
cmp
dec
jns
hlt
popa
cmp
subl
jne
xor
testb
mov
mov
int
dec
sub
in
sub
lock
push
adc
aaa
data16
cmp
rclb
test
outsl
inc
push
rol
jae
add
call
xchg
xor
sub
add
mov
or
push
inc
aam
inc
add
cmpsl
pusha
xchg
pusha
jmp
adc
mov
in
or
fisttpl
push
mov
inc
inc
insb
dec
ja
and
notb
adc
mov
cmp
push
xchg
push
jmp
and
and
dec
push
inc
in
and
dec
push
inc
dec
mov
imul
dec
inc
jbe
in
adc
test
cmp
adc
mov
mov
ret
dec
das
dec
or
cli
push
or
out
xor
cltd
in
and
inc
lock
push
rorl
adc
pop
inc
ds
not
cwtl
int3
inc
pop
ss
sub
adc
inc
pop
fcomp
rcl
xchg
pop
sub
mov
loope
adc
pop
or
sar
rep
dec
jns
test
or
push
mov
add
int
xlat
and
jbe
xor
push
push
sbb
hlt
mov
mov
icebp
add
testl
popf
lcall
mov
arpl
cmp
dec
jg
mov
cld
sbb
xchg
out
inc
sub
sbb
roll
inc
ss
pop
cld
inc
in
push
fiaddl
fsubr
xchg
dec
inc
clc
xchg
push
pop
pop
mov
gs
aad
fadd
fdivs
xchg
sbb
fildll
cmp
pop
sar
repnz
pop
xorl
lods
je
xor
or
notl
lock
mov
stc
or
cwtl
jns
push
push
shrb
add
jb
ret
icebp
xchg
mov
inc
xchg
mov
aaa
xor
aad
cs
jecxz
xlat
or
ljmp
xadd
xlat
add
ss
mov
sub
push
mov
imul
pop
imul
in
ret
or
dec
movsb
aad
lock
jge
shr
hlt
push
push
jl
mov
repz
cld
jns
push
dec
imul
xchg
dec
aam
imul
push
jo
popa
insb
call
push
cs
cmp
in
outsl
or
cmp
cmpl
setl
jmp
jmp
inc
repz
push
pop
dec
sbb
adc
dec
inc
mov
push
frstor
sbb
pop
jp
bound
in
mov
jae
add
mov
sbb
sar
inc
ss
cmpl
adc
add
mov
jno
mov
mov
dec
push
ret
cmpsl
pop
ds
mov
insl
insl
adc
add
sbb
shrl
jmp
fistps
add
test
mov
imul
push
xchg
hlt
and
push
cmp
iret
add
xor
pop
rcrl
sarl
sub
loope
mov
rorb
xor
adc
or
mov
pop
dec
outsb
add
push
sbb
pop
mov
xchg
jno
cli
xchg
fdivp
andb
inc
push
add
in
sti
cli
je
jns
jnp
pop
fcmovnbe
or
loopne
lock
sub
mov
inc
add
inc
push
inc
push
data16
and
sbb
xor
outsb
int3
sub
aas
inc
adc
xchg
xchg
je
lret
push
fwait
xor
paddq
into
in
dec
retw
mov
movsb
push
nop
mov
insl
cld
das
ret
insb
mov
int3
das
add
data16
std
inc
aam
push
jle
adc
dec
dec
insl
xor
pop
and
cmovb
jbe
jge
sub
into
xor
pop
outsb
dec
or
test
jp
inc
jbe
fadds
iret
adc
fmull
jp
mov
sbb
rcr
xchg
rclb
pop
popf
pop
lds
jnp
leave
jecxz
add
dec
js
shrl
xor
mov
pop
jmp
test
cmp
cmp
inc
lods
rcrb
cli
cs
into
clc
push
jbe
clc
arpl
ss
hlt
dec
or
lds
xchg
jnp
lahf
adc
mov
jae
dec
dec
out
xchg
cmp
xchg
test
sbb
rcrb
cmp
push
out
shrl
pop
out
add
dec
push
pavgw
decb
pop
xor
fwait
xor
sbb
and
jle
inc
faddl
add
push
pop
fadds
and
lret
loop
mov
or
adc
addb
fcoms
dec
sub
cmp
jp
clc
inc
mov
jg
xlat
rclb
inc
add
dec
lahf
gs
enter
sub
rclb
data16
or
fpatan
aam
pop
inc
ss
and
push
or
sbb
outsl
and
cwtl
dec
jo
test
insl
ds
sbb
or
jmp
sar
pop
inc
dec
fadds
inc
inc
push
imul
add
loop
mov
dec
imul
es
dec
jno
xchg
subb
movsb
jecxz
sub
gs
jge
pusha
cmpsl
adc
xor
dec
test
scas
aas
pop
lea
js
pop
dec
movzbl
inc
fs
add
into
jno
push
enter
aad
pop
push
jl
test
jne
inc
mov
jbe
pushf
mov
fadd
dec
fldenv
jne
inc
loop
loopne
imul
and
inc
cli
cltd
inc
sbb
mov
ss
je
push
inc
add
xchg
xchg
fisubrs
push
xchg
push
imul
insl
sbb
sbb
cli
push
fnstcw
push
pop
jo
xor
ret
or
inc
sub
movsbl
pushl
pop
dec
pop
sub
in
fldt
pop
test
repz
repz
aaa
movb
or
and
lahf
or
lret
cmp
xchg
test
sbb
sub
pop
xor
push
xor
push
adc
xchg
or
jo
insl
fstps
cmp
cltd
nop
repz
jne
inc
imul
cmp
jb
mov
add
or
mov
mov
into
filds
push
push
dec
sub
pusha
adc
mov
js
add
fdivp
push
cmc
xchg
rcll
mov
mov
jnp
push
xchg
sahf
push
or
cltd
pop
inc
pop
jg
addr16
xor
jne
mov
inc
push
aad
inc
aad
clc
ja
lock
xor
mov
mov
mov
roll
call
and
push
adc
mov
mov
cwtl
movsb
adc
mov
sbb
mov
sbb
inc
mov
bound
xchg
pop
fwait
sbbl
xchg
mov
ret
imul
nop
mov
xor
add
js
sbb
dec
xchg
or
fnstenv
in
xchg
lock
insb
mov
jne
enter
inc
in
xchg
icebp
mov
pusha
cmp
cmp
inc
jbe
mov
add
in
push
aam
pop
push
outsl
mov
int3
sbb
mov
inc
and
popf
xchg
lods
cld
mov
inc
push
inc
pop
popa
mov
adcb
aad
push
xchg
or
sub
cmp
mov
hlt
rolb
jo
cmp
ret
xor
insb
jne
inc
add
and
and
decb
pop
add
in
add
fisttpll
jne
ja
sbb
jmp
jmp
in
xor
addr16
or
jge
test
and
sbb
or
jp
xor
inc
xlat
xchg
popl
inc
lret
js
fisubrs
cmc
mov
pusha
lds
xchg
and
je
repnz
mov
insb
xor
add
xor
dec
in
arpl
jp
fistps
rcl
sbb
cli
lock
xor
push
jl
addb
inc
xchg
les
enter
or
push
ret
rol
mov
hlt
aas
outsb
push
push
jo
movsb
or
push
sbb
inc
xor
jp
mov
xor
insb
cld
ss
xchg
mov
inc
ds
pop
cmp
adc
xchg
sarl
jo
inc
gs
mov
mov
add
xor
xlat
orl
fcomp
add
outsb
loopne
adc
fimuls
ret
push
imul
mov
icebp
cld
adc
inc
mov
add
bound
adc
shlb
inc
push
int
cmpsl
jnp
fisttpll
pop
nop
inc
push
add
add
mov
mov
add
and
sub
xchg
xchg
popa
xchg
ret
add
or
sbb
icebp
fs
jb
adc
ret
aas
outsb
xchg
bound
imul
xor
jmp
pop
push
movsl
scas
adc
int
jb
jae
xchg
lods
xchg
into
mov
and
and
cmp
ret
mov
out
inc
popa
aaa
push
leave
sbb
not
cltd
adc
mov
mov
rcr
sbb
mov
and
jnp
push
sbb
vmulps
jbe
xchg
add
aaa
insl
pushf
movsl
fsubs
mov
je
sahf
or
sbb
popa
lds
jle
out
cmpsb
or
scas
cmp
in
gs
xchg
cmp
xchg
add
imul
data16
sbb
add
les
xchg
pop
dec
push
xchg
inc
mov
insl
outsl
pop
mov
sti
ret
add
pop
ljmp
ss
fildl
jbe
clc
lret
push
inc
add
jge
lock
cmp
into
or
dec
and
add
fstp
insl
cli
push
inc
sbb
add
push
add
dec
les
and
scas
jmp
out
add
add
add
adc
int
das
je
mov
jo
dec
add
and
subb
cmpb
push
or
fildll
dec
aas
mov
mov
inc
or
jl
xchg
add
pop
repnz
sbb
jl
fildll
jae
divl
or
xor
or
add
cmpsb
mov
mov
add
push
sub
iret
cmp
nop
add
jmp
out
add
fsub
cmp
sub
pop
or
mov
outsl
sbb
add
add
adc
xor
movsl
aaa
add
add
add
loopne
sbb
ret
pop
add
je
xchg
xor
add
add
aad
push
cmpsl
sbb
mov
add
mov
mov
pop
popf
jp
fistpl
mov
xlat
in
loop
enter
dec
je
in
cmp
pop
ljmp
mov
rcll
sbb
jecxz
xlat
jo
adc
push
cwtl
inc
pop
fisubrs
push
pop
jmp
cs
pop
shl
mov
cmp
test
aaa
xlat
fdiv
aas
addl
flds
push
ss
and
push
into
shlb
jne
add
xchg
add
popa
mov
mov
outsl
xchg
mov
sti
cmp
adc
push
int3
push
or
mov
sbb
add
cwtl
xor
bndstx
cmp
jge
loopne
mov
imul
or
in
jo
and
xchg
lcall
mov
jg
pusha
add
add
inc
and
test
pop
loopne
filds
shrl
sbb
test
in
pop
mov
cmp
clc
cs
addr16
lcall
add
pop
adc
bound
adc
mov
add
test
jns
mov
add
int
out
mov
sti
or
imul
jo
cmp
mov
cmp
pop
mov
pop
jp
lds
lret
push
loop
mov
out
xchg
lea
std
jbe
in
xor
bound
pushf
or
pop
inc
jno
mov
push
or
sbb
lcall
ljmp
inc
and
add
pop
jbe
cmpsb
push
mov
dec
and
pop
stc
mov
sbb
sub
add
sbb
fcompl
cld
cmc
cmp
xor
dec
xor
mov
pop
je
sbb
xchg
rorb
loope
leave
add
jg
xchg
mov
int3
or
pop
add
out
jp
pushl
add
int3
adc
sti
inc
nop
cmp
pushf
push
inc
sub
sbb
shrb
and
cmc
mov
jecxz
lods
test
mov
sub
add
mov
or
pushf
sbb
icebp
ficoml
inc
cltd
or
mov
push
jmp
xor
imul
dec
cltd
jne
pop
mov
arpl
pop
repz
ret
aaa
not
mov
adc
aas
sub
cmp
aaa
and
ja
mov
cmp
shrl
xchg
loope
lea
push
imul
jecxz
bound
add
ljmp
adc
push
hlt
inc
nop
dec
popf
jg
mull
andl
sub
push
pop
aaa
clc
add
add
add
xor
or
icebp
rorl
xor
mov
add
dec
jns
in
or
in
inc
lods
imul
push
push
popa
loopne
pop
mov
and
out
movsl
ja
scas
xchg
aas
mov
xchg
adc
popf
inc
aas
sbbb
stc
leave
subl
mov
cmp
pop
jecxz
jmp
xor
leave
sbb
or
in
mov
xlat
sub
setne
mov
adc
je
out
cmp
mov
dec
pop
cs
add
ds
push
movups
ja
ucomiss
xchg
js
mov
popa
xchg
and
or
addr16
and
push
ret
xchg
mov
je
add
push
stos
push
pop
jp
pop
or
sbb
sbb
leave
or
inc
jo
ja
add
xchg
jmp
insl
sar
add
push
enter
mov
sbb
mov
xchg
pop
push
sahf
frstor
jecxz
mov
in
pop
movsb
xchg
je
jmp
aas
sub
adc
mov
lock
je
adc
xchg
imul
outsl
adc
jg
push
outsl
cmpl
fadd
outsb
push
cmpsb
imull
out
dec
movsl
test
pop
xchg
clc
or
or
imul
sbb
orl
clc
cld
add
or
sub
es
cmp
js
sbb
data16
lds
push
jg
adc
adc
rcrl
pop
push
test
xchg
mov
popa
and
movsb
jbe
dec
push
fnstenv
sti
push
imul
cmp
daa
push
sub
and
stos
js
sub
fcmovnb
jns
or
add
add
movsl
sbb
lret
lahf
xor
push
test
or
adc
xchg
fiadds
insb
cmp
es
mov
mov
js
sub
xchg
dec
fiadds
cld
ds
iret
test
add
xor
inc
fcomps
repz
mov
ss
cmp
outsb
xor
or
or
push
push
mov
ja
lea
sbb
or
das
pushf
cmc
enter
lcall
clc
sbb
scas
ret
movsb
mov
pop
xchg
lods
lock
lods
add
push
fisttpll
mov
mov
dec
inc
sahf
inc
loope
jle
mov
out
icebp
leave
and
js
mov
lret
adcl
pop
mov
jo
out
mov
mov
sbb
ret
arpl
rcr
outsl
test
aas
adc
adc
or
dec
mov
xor
mov
push
roll
add
popf
jp
sbb
addr16
movsl
in
xchg
insb
shlb
jb
dec
cmp
mov
int
leave
mov
xchg
add
fisttps
lea
jmp
mov
mov
faddp
imul
cmp
loop
pop
fsubl
or
and
pop
lods
mov
push
mov
lret
aam
jns
and
lret
pop
pop
in
es
sti
test
insl
xor
mov
xor
jae
or
pusha
insb
add
jl
scas
xchg
xor
xor
shrl
lcall
repz
sub
stos
mov
mov
jae
sbb
sbb
out
jecxz
add
and
mov
mov
enter
mov
inc
fldt
pop
sbb
mov
ficoms
pop
xchg
mov
mov
outsb
push
fnstcw
pop
aad
add
push
pusha
jae
stos
aam
jl
lock
pushf
sub
mov
pusha
fwait
adcb
inc
jo
cmpsl
mov
cmp
or
sahf
add
andl
cli
cmp
sarl
mov
dec
xchg
dec
cltd
add
fidivrs
ret
repz
outsb
aaa
pop
xchg
mov
fst
mov
rclb
dec
lods
xor
and
jp
inc
fsub
leave
lds
jno
stc
push
repnz
or
out
bsr
lret
sub
outsl
dec
jp
test
inc
outsb
inc
fistl
fidivl
ljmp
cmp
pop
and
sub
adc
adc
dec
bswap
ret
pop
roll
shl
add
lcallw
outsl
xor
pop
push
jne
mov
les
imul
addr16
mov
push
xor
in
sti
mov
mov
lock
jl
inc
pop
sbb
enter
daa
jno
and
js
out
inc
ljmp
popf
cld
pushf
cwtl
cmovb
adc
sbb
add
push
mov
mov
lods
incl
inc
dec
or
call
adc
scas
ret
testb
int
iret
xor
lds
adc
inc
pusha
jns
adcl
mov
xchg
mov
mov
cmp
adc
xchg
hlt
pop
in
pop
insb
sti
movsl
sti
adc
mov
jl
ljmp
daa
cs
enter
xchg
inc
je
pop
mov
sub
inc
cmp
jg
test
cmp
loope
mov
sub
dec
rcl
and
jnp
add
nop
mov
out
daa
push
fcmovnb
adc
mov
pop
sub
out
repz
add
sbb
hlt
fucomi
std
sub
xorl
fnstcw
mov
adc
gs
jns
sbb
mov
aas
shll
loop
clc
xorb
push
mov
mov
adc
xor
xor
les
jne
or
inc
push
int
sbb
rcrb
daa
hlt
and
xor
es
inc
pusha
push
ret
es
cli
loope
jg
ss
adc
mov
sub
inc
rcll
outsb
fs
cltd
fsub
dec
pop
jl
or
xchg
pop
cs
cmp
aam
pop
or
out
or
jecxz,pn
pop
mov
clc
cmpsb
push
adc
and
and
fsubs
mov
loop
lods
les
xlat
pop
pop
sub
xchg
adc
iret
mov
dec
lea
inc
cmp
faddl
or
inc
arpl
out
cmp
sub
fimuls
mov
test
adc
mov
xlat
test
add
jp
inc
adc
add
call
jecxz
arpl
orb
sbb
mov
jle
aam
mov
pop
shr
aaa
push
rcrl
imul
sub
lea
ja
test
xchg
repnz
adc
scas
push
popa
cwtl
popa
rol
cmp
mov
mov
in
popw
adc
mov
iret
fbstp
push
repz
das
mov
fistl
adc
enter
popf
test
xchg
mov
rolb
pop
ret
cmp
dec
popf
das
ret
xor
mov
in
mov
clc
sbb
fs
sub
repz
cs
mov
sbb
shrl
clc
pop
mov
dec
mov
jg
cmpsl
ret
stos
test
dec
adc
call
stc
test
test
pop
xchg
xlat
add
pusha
shrl
out
jle
imulb
pop
ja
lea
int
mov
pop
jmp
sahf
mov
ficoms
xchg
inc
push
xchg
sub
jno
mov
xchg
mov
ret
xchg
or
xchg
stos
add
orl
mov
or
addb
inc
dec
lret
xchg
sbb
sub
addr16
pop
mov
dec
mov
loop
ss
mov
icebp
pop
mov
pop
cld
movb
mov
mov
adc
add
or
daa
and
pop
sub
xchg
mov
movsb
pop
cmp
push
decb
ljmp
push
fwait
pop
push
pop
loop
sub
popf
or
push
push
insb
jg
sarb
fwait
test
and
sbb
xor
sbb
sbb
pop
mov
mov
and
jge
loop
push
pop
out
sbb
push
aad
mov
or
xchg
sub
mov
dec
das
mov
addr16
mov
ret
loopne
call
call
sbb
insb
jl
sti
mov
xchg
mov
mov
pop
jmp
dec
xchg
sbb
rorl
mov
and
xor
and
pusha
in
cmp
jecxz
outsl
sub
sti
sbb
popl
mov
mov
mov
test
std
jbe
ljmp
notb
jnp
andl
cli
je
mov
mov
cmc
imul
test
mov
div
dec
pop
add
dec
nop
cld
mov
and
adcb
out
test
mov
shl
mov
clc
js
dec
inc
aam
shll
xchg
ds
xorb
cmpsl
lds
test
xchg
add
and
jl
jnp
jl
cmpsb
sahf
add
fs
cmp
rol
insb
and
loopne
cmp
sub
jge
pusha
sub
jmp
add
jns
lret
arpl
jle
xor
cmpsb
in
ret
sub
sub
cmp
or
or
arpl
cs
adc
dec
pop
push
adc
jge
pop
mov
daa
popf
push
call
cmp
xchg
mov
jo
add
ljmp
in
pusha
xor
out
jge
lahf
roll
cmpsl
outsb
sbb
je
inc
js
mov
xorb
xor
mov
jecxz
xor
roll
mov
je
add
mov
aam
push
loope
and
in
jmp
sbb
les
jp
fsubrs
cmp
dec
adc
leave
or
iret
jb
add
sti
add
dec
xlat
sbb
shl
cld
mov
push
pop
dec
pop
adc
test
rcl
mov
mov
setg
jo
and
push
lds
lret
mov
es
je
sub
call
mov
pop
sahf
mov
push
mov
movb
inc
mov
xchg
mov
ss
dec
popa
xchg
mov
addl
sub
fwait
cmpsl
insb
shr
hlt
bound
movsb
add
es
fdivrl
push
aaa
xchg
jne
aam
adc
push
pushf
sahf
test
loope
cli
mov
es
sub
nop
inc
adc
xor
popf
add
inc
je
cmpl
insl
cmpsl
xor
pusha
dec
roll
ret
pop
push
pop
in
jg
mov
inc
test
xchg
shl
dec
loop
and
aaa
add
and
addr16
das
in
clc
lret
mov
cwtl
adc
jecxz
lahf
add
inc
inc
dec
lret
orb
outsb
mov
cli
mov
lods
jb
stc
mov
push
cltd
and
jl
mov
fildl
fdivs
xor
fsubl
test
pop
pusha
addb
cltd
xchg
insl
bound
in
adc
mov
xchg
in
inc
insb
mov
pusha
dec
mov
lods
or
test
fistps
out
xor
mov
pop
and
test
out
cmpsl
or
adc
jmp
pop
jg
jmp
addl
jns
xchg
jae
mov
sbb
lock
cmp
sarl
sbb
pop
xorb
fcompl
xor
insl
xchg
or
add
cmpsl
shll
xor
sahf
test
xchg
iret
icebp
pop
popa
cld
imul
cmpsb
cmp
xlat
es
push
pop
mov
das
xor
sti
xchg
clc
adc
adc
cmp
jo
cmpsl
js
cmpsl
das
mov
pop
mov
jnp
es
cld
testl
outsl
jg
mov
push
out
insl
ljmp
push
and
pop
jo
dec
push
push
pusha
xor
cmp
loope
into
testb
shrb
sbb
lds
add
cli
stos
pop
cmpsl
in
adc
pop
pop
call
inc
push
int
bound
jb
inc
adc
and
mov
jge
jns
repnz
add
jmp
sub
hlt
or
inc
mov
or
push
sti
xchg
mov
test
jbe
daa
xor
ljmp
add
or
in
cmpsb
movsb
sub
xchg
faddl
sbb
movsl
mov
pusha
add
jo
mov
mov
pop
ja
in
xchg
sub
clc
ja
mov
push
enter
int
loope
shlb
mov
add
fcoml
psllq
sub
dec
rolb
dec
lahf
and
loopne
push
mov
cmc
jle
add
stos
stc
lea
sbb
or
test
into
xor
dec
inc
sub
stc
or
pop
or
and
idiv
xor
mov
pop
adcl
push
out
loop
rcll
mov
jmp
mov
mov
or
mov
mov
aad
jmp
imul
push
inc
in
in
adc
and
sbb
shl
inc
aaa
jge
js
add
adc
hlt
xchg
cmp
js
cld
jne
push
push
pop
inc
or
mov
jb
sahf
clc
test
mov
pop
sbbb
inc
subl
cli
jle
loope
pusha
js
in
mov
add
inc
adc
xor
xchg
push
sbb
js
bound
shl
jb
ljmp
and
in
daa
xor
out
sub
dec
fildll
inc
std
add
inc
mov
sti
loope
adc
call
jle
jo
lret
and
and
inc
lods
mov
lahf
bound
sbb
jno
stos
push
addr16
shl
pop
and
dec
dec
xor
cmpsl
jns
and
push
sahf
push
andb
jo
cmp
gs
orl
or
mov
std
fsubs
push
jmp
cmp
test
pop
aaa
gs
adc
stos
push
mov
add
dec
xor
ror
jbe
cmpsl
fcoms
test
arpl
loope
mov
ss
mov
or
arpl
push
jb
pop
std
loop
adc
xor
int3
jmp
call
pushf
iret
jp
data16
xlat
mov
aas
dec
jb
and
lea
test
or
adc
mov
in
jb
pop
cld
test
or
add
popa
jne
nop
jg
mov
push
and
adc
dec
mov
in
mov
mov
cmp
sub
pop
xor
cli
push
inc
test
and
pop
jo
mov
lcall
jne
jle
cmp
daa
lcall
pop
sbb
gs
pop
inc
cmp
or
pop
sub
cmp
fwait
dec
cmp
push
or
mov
mov
or
or
dec
jmp
jp
dec
outsl
cli
pop
fs
loopne
jne
ror
decb
and
subl
xchg
in
adc
loope
fadd
imul
mov
mov
outsb
pop
nop
xchg
sbb
inc
pop
jnp
cmp
inc
mov
add
or
push
push
cmp
pop
scas
mov
bound
push
inc
mov
push
pop
xchg
loopne
mov
fildl
pop
adc
or
inc
add
pop
movsb
je
testl
push
cmpsl
mov
mov
pop
push
push
jb
add
jecxz
sub
andb
test
jo
lea
movsl
rcr
push
insb
jp
or
cltd
fcoms
js
dec
cmp
hlt
in
loopne
cvttps2pi
es
rolb
fwait
jecxz
cltd
clc
inc
aad
arpl
cltd
inc
xlat
xchg
test
and
fiaddl
ficompl
sahf
inc
mov
scas
test
orb
push
mov
sbb
adc
out
sub
testl
aas
loopne
sbb
in
mov
in
test
stc
mov
cmovl
pop
test
push
fdiv
or
movsl
xchg
clc
mov
lea
xor
sub
adc
in
test
sahf
loope
rcr
movsl
add
dec
jg
mov
sub
xor
lret
pop
or
cmp
sub
lock
lods
test
and
or
hlt
xchg
test
sbb
aas
cwtl
sub
rcll
test
nop
out
daa
arpl
lods
ss
paddusw
xor
repz
or
incb
sbb
sub
ja
sub
fsubrs
insl
mov
adc
shrl
push
cmp
mov
sbb
cmp
push
sbb
dec
add
mov
pop
sub
xor
xor
mov
not
hlt
stos
mov
or
mov
sbb
sahf
mov
add
add
or
sbb
shlb
cmc
enter
into
movsb
push
lds
or
xchg
popa
bswap
ret
mov
stos
jns
rcl
dec
stos
call
ja
std
addr16
rorb
push
aas
push
jo
fwait
jno
sbb
add
xor
dec
xchg
ja
and
inc
lcall
leave
gs
stc
pop
cwtl
inc
add
clc
cmp
jmp
jp
hlt
test
dec
dec
sbb
dec
loop
fs
loop
push
cmp
lods
add
dec
lock
movsl
pop
pusha
xor
cmp
sbb
mov
daa
dec
mov
mov
xchg
inc
and
iret
sbb
flds
xchg
push
aaa
fisttpl
imul
xor
xor
in
in
pop
bound
mov
int3
xor
outsb
ud1
es
cli
mov
lret
in
push
and
bound
loop
seta
xchg
fwait
nop
add
daa
aaa
push
repz
int
je
jge,pt
fprem1
frstor
pop
cwtl
cld
jbe
pop
mov
adc
add
mov
je
sub
inc
sti
mov
adc
popa
rcrb
bound
and
in
cld
cmpsl
loop
loopne
ss
xor
mov
mov
dec
test
pop
cmp
mov
test
loop
lock
rcl
popf
xor
jge
insb
cmp
in
pop
in
fmuls
and
insl
lods
inc
dec
loopne
mov
repnz
pop
adc
pop
and
clc
mov
or
fadd
or
mov
or
adc
in
enter
add
fnsave
dec
push
lods
xor
xchg
stos
fstps
int
fisubrl
jne
pop
addb
xchg
mov
bound
push
lock
mov
or
sub
xor
cmp
jno
mov
faddl
xor
mov
cli
mov
jns,pt
ds
sbb
adc
lock
sahf
popf
lods
outsl
push
mov
push
mov
cs
xchg
mov
cmp
test
inc
insl
cmp
das
js
subw
cmp
orl
inc
and
pop
icebp
or
cmc
add
inc
jmp
lret
iret
movl
dec
gs
rolb
pop
in
repz
adc
sbb
das
popf
hlt
inc
test
push
xchg
faddp
push
int
mov
mov
lret
jp
popa
rorl
rcr
loopne
mov
sub
and
ret
scas
mov
negb
loopne
sbb
and
or
push
dec
xchg
in
dec
sbb
or
test
stc
test
mov
pop
in
lahf
cli
inc
add
pop
fisubl
adc
mov
add
push
icebp
pop
movsl
shrl
outsl
or
pop
cmp
pop
das
dec
pop
jo
inc
je
adc
mov
arpl
loop
scas
idivb
adc
popa
movsb
jg
stc
push
adc
xchg
mov
dec
push
stos
pop
ljmp
movl
leave
popf
jnp
lret
mov
loopne
jns
les
pop
fdiv
mov
mov
hlt
lds
stos
or
mov
icebp
shlb
sbb
fdivp
dec
adc
leave
loopne
aad
loope
lcall
out
add
add
ss
or
repz
cmpsl
jle
push
aaa
inc
mov
add
push
jae
inc
adc
xacquire
sub
int3
icebp
fistpll
push
cmp
xchg
inc
cli
pop
mov
and
shrl
popf
clc
lds
inc
fimull
adc
jne
sub
lock
xorb
leave
fistps
sbb
data16
xlat
cmp
push
addb
xchg
push
movsl
pop
inc
cmpsl
outsb
or
pop
inc
fs
pop
jl
xchg
push
addl
fcmovnbe
test
xor
inc
pop
jmp
push
roll
insl
and
mov
cmp
mov
movsb
sbb
in
pop
fcmovbe
icebp
inc
pop
mov
pop
push
or
pop
ds
add
adc
lret
sbb
sbb
jnp
xchg
or
sarb
or
and
and
sub
sbb
lcall
push
decl
dec
test
mov
add
sub
cmp
cltd
cmp
repz
xchg
add
or
xor
cmpsb
mov
pop
xor
sub
adc
mov
fwait
mov
jo
mov
xor
js
jne
mov
cli
ret
push
or
cwtl
in
dec
in
xor
ljmp
push
shl
sbbb
jo
mov
cmp
lds
into
pop
pop
sahf
fcomps
scas
int3
inc
or
pop
sub
jle
aad
js
xor
or
jo
cmp
adc
inc
jp
not
loope
push
adc
sub
fildl
outsl
test
std
cmpsl
sbb
cmp
push
xchg
mov
mov
push
and
mov
pusha
sar
adc
in
subl
or
pop
test
jo
lcall
frstor
sub
ds
sbb
test
lock
adc
mov
pxor
lock
dec
sbb
mov
or
cmp
rclb
hlt
sbbl
pop
mov
mov
and
jb
lock
push
xor
inc
mov
mov
js
fnstcw
push
and
test
scas
arpl
adc
cmpsl
mov
push
mov
test
jl
mov
sarb
popa
add
in
test
popf
aad
xchg
inc
movq
mov
jo
xor
xchg
pop
xorb
rol
and
mov
sub
xchg
push
xor
inc
mov
orb
movsb
test
fsqrt
call
rcrl
and
mov
pop
xchg
inc
and
aad
mov
adc
add
jle
out
bound
jge
pop
mov
stos
outsl
fldt
rcrb
inc
into
loopne
fidivrl
sub
sub
xor
cld
arpl
adc
ret
imul
dec
insl
jo
lea
inc
cs
test
mov
pusha
or
call
pushf
aad
pop
dec
adc
mov
out
xor
cmc
xlat
lret
std
push
cmp
data16
lahf
xorl
mov
out
or
loopne
xor
repz
pop
clc
fwait
jno
pop
jno
sarb
data16
sti
out
arpl
adc
loope
dec
dec
test
inc
xor
ja
add
or
fidivrs
fldl
sub
and
ljmp
pop
lret
add
dec
xor
mov
clc
stos
lret
jg
rcl
stc
and
insl
mov
pop
icebp
sub
dec
cmp
outsl
mov
ds
xlat
lcall
adc
push
test
js
xchg
popf
in
daa
adc
xchg
dec
out
xchg
mov
scas
pop
arpl
cmpsl
push
mov
scas
les
call
cmp
out
in
out
mov
loope
mov
scas
in
repz
xlat
pop
mov
insl
push
xchg
and
add
shll
ss
into
add
imul
mov
mov
sbb
std
or
push
into
pop
pusha
mov
out
push
addr16
push
inc
sbb
out
dec
mov
lcall
movsl
mov
push
xchg
xchg
call
hlt
add
jl
add
mov
adcl
mov
call
mov
xchg
jno
push
mov
lahf
iret
les
sub
mov
call
jo
clc
xor
out
push
jg
xchg
adc
mov
mov
sbb
jbe
mov
sbb
sbb
in
push
mov
xor
or
rcll
and
stc
movsb
adc
enter
mov
push
push
leave
mov
adc
les
adc
icebp
push
dec
mov
xor
in
test
out
jecxz
pop
ds
icebp
cmp
repnz
push
scas
out
mov
lods
jge
xchg
popf
pop
repz
push
decl
adcb
daa
pop
lret
loop
adc
pop
orl
jns
insb
es
adc
roll
sub
adcb
outsb
cmp
js
loopne
mov
insb
clc
idivl
movl
adc
cmc
lods
iret
jnp
sbb
inc
aam
pop
in
lcall
or
icebp
xor
mov
stc
or
cld
mov
sbb
fwait
push
sbb
mov
add
aad
jle
loopne
sbb
jnp
sbb
dec
mov
jbe
mov
insl
cmpl
pop
mov
pop
mov
addb
push
sahf
pop
js
int
xchg
aad
out
clc
dec
mov
push
fwait
je
mov
push
xchg
dec
add
aad
mov
cli
imul
ljmp
cs
mov
sti
or
jne
in
fs
call
mov
repz
jb
mov
adc
push
pusha
mov
shrb
insl
inc
test
push
jecxz,pn
loope
sub
movsb
add
das
add
add
shll
jmp
xor
ret
lahf
pusha
mov
mov
jne
sub
cmp
xchg
push
mov
insb
inc
sahf
scas
fwait
push
in
lock
mov
cld
fdiv
les
dec
rcll
mov
test
dec
stos
sub
outsb
mov
cmc
jmp
ret
sar
cmp
xchg
inc
push
pop
lods
cmc
sbb
mov
mov
pop
aas
cmpl
mov
iret
and
imul
imul
test
mov
dec
pop
stc
adc
ss
xchg
pop
sub
insl
mov
roll
inc
cmp
dec
sub
adc
and
ret
data16
push
inc
jge
aam
jle
loop
lahf
push
or
xchg
cmc
scas
cli
sarl
sbb
out
bound
add
add
rolb
mov
ljmp
add
rol
rcrl
inc
add
pop
inc
jb
sub
push
sbb
dec
in
add
neg
js
mov
mov
mov
sahf
adc
xchg
xchg
inc
sbb
push
cli
mov
lods
icebp
cmp
adc
xlat
fstpt
cli
fdivrp
push
loop
shll
inc
test
test
arpl
scas
mov
outsl
testl
jle
adcb
pop
loop
hlt
jecxz
pusha
arpl
dec
inc
mov
int
call
jp
push
imul
mov
inc
add
push
jg
adc
mov
in
inc
mov
in
add
or
enter
fidivl
leave
xchg
xchg
je
mov
nop
cmp
jge
cltd
inc
mull
dec
loopne
or
push
dec
jl
sub
pop
test
jne
orb
sub
and
xchg
imul
insl
jmp
fiadds
enter
fildl
aas
dec
je
repz
jecxz
rcrb
jbe
cli
push
and
insl
mov
mov
pop
not
xchg
ror
cmp
mov
adc
push
pop
unpcklps
mov
ds
jbe
xor
and
lods
mov
lahf
cmp
lods
fcomp
and
inc
xchg
mov
mov
leave
shlb
sti
or
mov
dec
inc
xchg
xor
mov
add
xchg
jmp
sarb
fisubrl
ja
or
test
jecxz
insb
cmp
add
mov
pop
shl
loope
ret
mov
mov
cmp
leave
sub
xor
nop
lods
mov
mov
cmpsl
adc
or
movsb
xchg
ljmp
push
sbb
std
arpl
jbe
in
popa
adc
adc
aaa
cmpb
arpl
jmp
adc
or
push
fwait
inc
sbb
jl
or
cli
cmp
pop
lahf
stc
inc
scas
mov
mov
in
push
inc
or
and
shrb
push
ds
xor
inc
add
andl
pop
mov
pop
sbb
add
je
inc
loop
iret
adc
mov
ss
mov
clc
int3
cmp
outsl
nop
mov
sub
mov
clc
mov
inc
adc
shlb
mov
pop
add
mov
ss
mov
jb
test
pop
mov
jmp
xchg
inc
inc
popf
int3
add
mov
mov
loope
int3
or
clc
adcl
mov
lret
arpl
test
or
xchg
fldcw
fsubs
iret
or
pop
mov
adc
jecxz
mov
loope
push
xchg
mov
repnz
and
adcl
sub
xor
mov
pop
ss
and
pop
clc
incb
lock
icebp
xchg
cmpsl
sbbl
ret
jmp
lods
adc
cli
sbbl
int3
and
cmp
into
sbb
jne
fwait
outsb
mov
or
jecxz
mov
shlb
jecxz
jbe
addr16
mov
push
sub
sub
and
pop
imulb
into
cmp
arpl
mov
pop
aaa
aam
pop
push
aam
orl
loop
and
loop
or
imul
fisttps
stc
push
or
das
adc
mov
in
call
push
push
in
mov
mov
leave
or
test
lahf
pop
inc
pop
cmp
inc
cld
adc
xor
cmpsl
call
push
dec
cmpl
pusha
push
dec
ss
icebp
jno
movsl
sub
into
inc
test
adc
sti
pop
add
mov
push
hlt
repz
fdivl
and
pop
jle
mov
jno
into
mov
jp
mov
aas
rol
cmp
inc
aas
adc
out
cmp
xchg
mov
push
or
ret
fs
adc
ss
outsl
aaa
leave
movsl
and
inc
stc
cltd
xchg
iret
pop
cmp
sbb
or
push
push
cli
mov
mov
mov
jnp,pn
add
sbb
bound
das
inc
pop
daa
in
addl
ret
out
les
shrb
and
adc
sub
je
notb
cwtl
xchg
inc
add
addb
insb
hlt
or
ds
out
jle
popf
rcrb
mov
and
xchg
mov
dec
ficoms
xlat
xor
fdivrs
inc
stos
inc
lret
hlt
pop
adc
js
jnp
jg
add
sbb
adc
jns
pop
sahf
push
cmp
mov
mov
sub
icebp
sub
add
and
or
mov
daa
mov
sahf
pop
orb
mov
adc
inc
xor
xorb
pusha
mov
nop
jne
aad
pop
sbb
push
into
xor
or
add
in
mov
pop
mov
ret
mov
mov
mov
sbb
pusha
lret
or
xor
std
lock
push
or
mov
xchg
mov
imul
xchg
or
mov
add
call
jnp
push
push
mov
mov
push
mov
stos
leave
cwtl
ljmp
dec
pop
clc
cmp
int
icebp
or
mov
xor
mov
lret
xchg
movb
lahf
and
mov
stos
mov
call
sub
test
bound
les
mul
pop
loop
in
data16
ds
dec
cmp
push
inc
lahf
mov
int3
jae
add
sub
add
fdivl
out
cmp
repz
clc
and
mov
add
push
dec
cmp
idivl
pop
test
cmpsb
mov
and
xor
xchg
mov
loopne
push
mov
inc
jo
jmp
faddl
jns
in
jmp
mov
adc
cmpsl
push
adc
out
mov
cmpsb
int3
fsubrs
push
mov
dec
push
xor
cwtl
sub
aas
cld
push
roll
cmp
mov
ljmp
lds
subl
cmc
xchg
adc
push
xchg
cmpsb
fldt
push
sub
xchg
ss
lods
pop
or
icebp
jle
jnp
mov
ss
inc
loope
pusha
sbb
mov
adc
mov
jmp
ds
push
dec
xchg
jle
shll
xchg
movb
cld
pop
arpl
or
add
lcall
insl
out
sti
fldl
fsubs
lods
in
mov
or
adc
test
inc
insb
daa
push
mov
inc
xchg
xchg
mov
sbb
leave
jo
jo
sub
ret
addb
jnp
es
sahf
cmp
test
xor
je
out
mov
sarb
iret
sbb
jns
inc
mov
fildl
dec
mov
mov
mov
inc
push
add
jmp
jae
ds
mov
and
outsl
psrlq
movsb
mov
pop
popf
jge
xchg
cli
mov
clc
push
outsl
lock
push
xor
xor
xor
adc
loope
test
pop
xor
jb
and
push
loope
ljmp
popf
fisttpll
mov
push
arpl
aam
push
add
jl
shrl
sbb
shrl
push
decb
adc
fwait
dec
xorb
push
jmp
ret
out
mov
xchg
test
mov
mov
mov
push
push
lods
notl
outsb
add
or
stc
lahf
dec
pop
lahf
movsl
or
ftst
loopne
insl
lret
icebp
test
daa
adc
leave
repnz
xchg
sbb
jns
xor
xchg
jno
xlat
icebp
sbb
inc
enter
mov
daa
jle
push
outsb
lea
jo
xchg
mov
test
shlb
jnp
test
ret
icebp
jmp
stos
mov
cmp
ljmp
push
out
sbb
call
imul
lds
jmp
pop
movsl
loope
mov
push
xor
mov
aam
fldenv
mov
lahf
or
pushf
xor
mov
std
jp
or
ja
mov
xchg
dec
leave
jns
and
loop
inc
push
insb
insl
push
popa
dec
sbb
pop
outsb
pushl
fwait
ds
shlb
arpl
shlb
dec
and
mov
mov
bound
hlt
fcomps
jecxz
icebp
mov
dec
ret
loope
pop
cmp
mov
test
mov
push
cmp
cmpsl
sbb
push
sub
lock
jnp
stos
push
sbb
mov
mov
stos
xor
push
xchg
dec
test
arpl
imul
icebp
push
inc
sbb
pushl
or
pushf
sbb
sbb
ljmp
test
pop
adc
pop
inc
pop
mov
out
dec
mov
jo
mov
pop
mov
jne
fisttps
repz
or
xrelease
pushf
cmpsb
dec
sbb
clc
rcrb
insb
sbb
mov
push
sub
nop
sbb
sbb
loope
arpl
in
hlt
int3
or
adc
jbe
xchg
arpl
rorl
sbb
fsubr
ljmp
inc
test
and
push
pusha
push
cmp
les
xchg
cmp
mov
lret
fcmovnbe
jbe
jle
mov
pop
sbb
add
sahf
dec
sbb
jno
mov
push
or
xor
adc
jno
adc
mov
dec
sbb
cmpsl
cli
mov
cmp
les
stos
push
adc
fcoms
cmp
pop
xchg
pop
shll
push
pop
push
add
mov
sub
mov
jg
ret
les
sub
xor
icebp
fistl
mov
aaa
cmp
arpl
fisttpll
into
pusha
inc
cmp
hlt
sbb
sbb
inc
std
lock
ds
and
imul
pop
push
pop
es
fstps
lret
and
in
icebp
push
mov
mull
call
adcl
idiv
movsl
pop
call
adc
mov
xor
mov
push
out
mov
mov
inc
stos
jl
aas
inc
adc
orb
push
and
dec
fisttpll
lock
aam
cmpsl
adc
in
push
add
rolb
loopne
sarl
xorb
jl
fmulp
lcall
mov
fstpt
test
mov
mov
sbb
pavgw
push
das
scas
fs
mov
test
jl
add
adc
es
xchg
pop
add
andl
add
mov
push
fimuls
push
jmp
xchg
mov
push
xor
ljmp
aam
xchg
sti
dec
pop
dec
xor
inc
adc
in
mov
xor
add
pop
and
rcrl
xchg
push
mov
inc
mov
push
sbb
je
jo
repnz
movb
gs
xor
push
pushf
mov
cmc
test
push
rcl
jnp
add
fists
pop
adc
or
sahf
adc
insb
sub
jbe
pop
mov
inc
ds
subb
imul
orb
or
adc
mov
push
mov
inc
xor
in
aas
mov
adc
pop
sub
jne
ljmp
pop
inc
loop
xchg
jns
jno,pt
or
loopne
add
cmc
push
pop
cmpsb
subb
xchg
inc
popf
add
sbbl
cli
xchg
or
shlb
mov
xlat
call
mov
lods
mov
nop
mov
stos
movsl
scas
push
fcoml
movsl
imul
inc
mov
pusha
scas
jecxz
jle
daa
dec
popf
adc
mov
jns
rol
xlat
xor
xchg
dec
jp
fcmovnb
jmp
inc
call
add
mov
fidivs
lock
dec
notb
insb
jmp
sub
dec
inc
adc
dec
sub
int
jno
pop
mov
or
mov
and
add
push
fnstsw
dec
xchg
adc
sub
scas
icebp
pop
aaa
jno
mov
cmp
loop
movsl
fnstenv
sti
pop
push
in
fildl
xchg
push
xor
addb
and
cmc
icebp
mov
sbbl
add
sbb
xlat
jle
aas
pop
icebp
out
in
cmpsl
addb
sub
in
loopne
inc
test
inc
xchg
scas
xchg
mov
mov
xor
adc
sbb
movsl
xchg
push
push
out
jno
inc
dec
mov
mov
push
pop
sbb
adc
jl
jns
sub
in
sti
adc
cld
shrb
add
cmc
dec
cmp
sahf
sahf
push
add
cmp
ja
cmp
loop
mov
sbb
and
push
push
insb
cmp
mov
cld
push
dec
pushf
pop
mov
lods
push
add
hlt
repz
inc
lret
jl
scas
notb
xchg
jecxz
imul
sbb
clc
mov
add
loop
mov
aad
loopne
insl
ljmp
pop
mov
mov
movsb
sti
movsb
fdivr
rcrb
dec
xchg
cmpsb
scas
xorl
mov
jmp
repz
add
rorl
mov
sbb
imul
xor
mov
pop
mov
and
repz
gs
and
ja
loope
fs
shlb
loop
adc
jg
dec
mov
das
inc
add
adc
cmpsb
sbb
xchg
and
sqrtps
mov
faddl
push
lds
shll
sbb
roll
sahf
adc
push
pusha
adc
shl
aad
lret
fs
jae
ret
arpl
mov
imul
jle
loope
shl
jge
lret
jle
xor
adc
mov
notl
cli
pop
js
cmp
and
mov
lahf
sbb
or
cmpsl
add
push
call
aas
out
jecxz
loope
mov
aam
pop
xchg
ja
fimull
jle
sub
andl
or
and
lds
adc
aas
push
add
cmp
das
outsl
test
jae
das
mov
out
adcl
pusha
cmp
or
push
frstor
out
std
mov
pop
fbstp
mov
add
pop
lret
and
aas
xor
adc
add
sbbb
fiaddl
mov
push
or
adc
xchg
fcomps
imul
mov
or
xchg
xor
imul
or
xchg
mov
add
in
xchg
adc
jmp
adc
jno
adc
xlat
inc
pop
mov
sub
mov
sbb
test
fwait
jmp
data16
lcall
addl
cmp
mov
mov
pop
mov
aas
mov
sub
cmp
lock
jl
das
and
cli
imul
lret
inc
test
push
rol
cmpsl
xlat
mov
test
and
add
add
mov
inc
add
add
sbb
iret
insl
jge
pop
hlt
jge
stc
out
popf
xchg
mov
mov
rcrl
jno
push
imul
cli
cmc
jnp
imul
sub
add
and
popf
mov
or
mov
jge
loope
movsb
cmpw
mov
pushf
popf
dec
pusha
inc
jns
mov
je
aaa
les
filds
das
mov
and
in
pop
pop
cli
xchg
push
imul
push
sub
clc
clc
dec
loopne
icebp
inc
xor
sbb
sbb
mov
mov
sub
je
movsl
arpl
mov
insl
sbb
sahf
jl
sahf
ss
and
or
sbb
scas
push
cs
shll
xlat
pushf
je
xor
cmc
pop
xchg
mov
xor
xchg
das
mov
sub
and
rorb
add
lock
fidivrs
in
xchg
cmpsl
into
pop
or
or
pop
sub
inc
jle
das
jb
jmp
decl
push
popf
adc
data16
sarl
aas
mov
lds
mov
fdivp
and
sub
jg
movsl
fstpt
pop
out
pop
jbe
lds
push
pop
loop
mov
cmp
adc
push
sbb
add
push
jns
mov
sbb
xorb
fwait
push
cltd
adc
pop
loope
push
mov
cwtl
out
shlb
mov
xor
jbe
imul
cmp
add
mov
push
pop
lea
pusha
xchg
outsb
scas
inc
push
aad
nop
inc
test
cmpl
fnsetpm(287
clc
rdpmc
mov
inc
and
clc
mov
fmul
dec
fidivs
xlat
and
inc
popa
out
lahf
ds
movsb
push
fisttpll
data16
dec
sbbb
pop
adc
fistps
mov
sbbb
jg
jg
mov
or
inc
mov
add
add
jbe
mov
mov
aas
mov
inc
dec
aaa
int3
mov
fnstcw
insl
fistps
lret
mov
push
pop
rorb
cs
mov
xor
and
lods
fsubs
pop
fstl
push
js
sub
and
mov
and
dec
add
push
mov
sets
pop
add
lcall
cmp
mov
jns
std
movl
loopne
aas
pop
shll
mov
add
push
rep
rol
adc
add
pusha
lea
inc
mov
push
roll
or
mov
and
inc
mov
or
mov
loop
sbb
inc
jno
sbb
fwait
cmp
mov
clc
dec
loopne
cmp
lods
loop
fildll
lods
ret
lea
jmp
orl
or
stc
adc
add
fidivs
ret
insl
jge
lods
add
fdivr
sub
ljmp
pop
jmp
mov
jp
adc
dec
rorb
fidivs
xor
out
icebp
sub
add
enter
sbb
or
gs
fildl
lret
mov
and
adc
rolw
loop
and
jecxz
add
not
xor
sbb
add
adc
loop
sbb
push
jp
inc
pop
sbb
xchg
xchg
jecxz
stos
das
js
adc
divb
xchg
or
cmc
cmp
pop
jae
pop
sti
pop
mov
add
inc
sbb
in
adc
movsb
xchg
and
call
push
outsb
xchg
add
aas
sub
mov
cs
add
pop
adc
mov
jo
loope
rol
adc
adc
mov
and
out
aas
adc
sub
lock
sub
mov
mov
mov
packsswb
inc
cmpsl
mov
add
sub
push
scas
lcall
or
int
adc
ljmp
lds
sti
xchg
push
mov
adc
inc
pop
push
fiaddl
jg
sbb
mov
cmp
mov
mov
pop
xchg
sbb
les
jg
aad
ret
div
xchg
add
jo
sbb
vminss
inc
aad
mov
out
out
ds
lret
iret
lea
fcmovbe
clc
jne
inc
gs
aaa
and
stos
lea
push
mov
adc
loopne
outsb
pop
pop
lods
xchg
adc
js
test
outsb
jno
sbb
fsubrl
cmc
push
cmp
mov
arpl
jp
dec
int3
ljmp
addl
add
sub
mov
add
mov
movsl
or
cli
out
jg
fnstenv
adc
or
mov
add
or
cmc
shrl
out
pop
and
fsubl
lods
daa
jge
sarl
loopne
sahf
pop
and
jb
inc
jb
mov
sti
push
push
pop
scas
inc
aaa
jns
cmpsl
clc
mov
sbb
popa
xor
pop
pop
sub
add
fstps
icebp
popa
sbb
and
xor
loope
cvtdq2ps
shlb
jmp
in
test
or
arpl
les
call
je
fs
jecxz
fsubrl
in
lret
jno
fnstenv
cmp
sbb
cs
push
xchg
cmp
rcll
pop
ljmp
dec
inc
lret
sbb
or
adc
repz
in
mov
or
push
mov
inc
mov
and
ja
orl
adc
and
ds
aam
pop
add
clc
xchg
push
pop
push
std
arpl
xor
inc
insl
mov
cmp
fwait
andl
adc
pop
xchg
adc
inc
popf
orl
xchg
mul
ds
lds
sahf
add
xor
add
jb
test
pop
mov
push
mov
shll
mov
sbb
pop
neg
mov
out
pop
rorb
push
pop
loop
mov
dec
add
sub
xchg
cmp
jge
xor
loop
lods
or
ss
push
mov
int
dec
push
or
pop
psllw
pop
mov
sub
or
push
insl
leave
mov
pop
jb
cmpb
mov
test
add
sarl
adc
mov
or
jne
loope
inc
int
pop
pop
sbb
hlt
dec
orb
std
clc
das
jp
test
ret
pop
fcom
mov
mov
cld
cld
jg
std
loope
jg
jle
mov
jle
clc
jmp
fisubs
aaa
add
xorb
pop
out
push
inc
aas
jle
sub
cmpsl
lods
cmpsl
cli
ljmpw
pop
pusha
loopne
test
mov
or
mov
cmpsb
dec
pop
add
in
call
stos
push
mov
je
iret
sbb
lock
push
push
mov
push
pusha
cmp
mov
sub
test
shrb
hlt
mov
jmp
imul
lcall
jno
sub
sahf
sbb
int
test
arpl
inc
inc
negb
dec
add
nop
sbb
std
cmc
pop
aam
arpl
jb
push
sub
cmp
adc
xor
jno
scas
and
push
lock
stc
inc
or
in
cwtl
pop
ja
mov
sub
push
aam
push
push
cmpsb
das
add
sub
pop
or
cmp
mov
addr16
aas
ljmp
push
xchg
data16
cli
pop
push
push
add
xor
std
add
inc
scas
test
icebp
xor
xor
jg
or
in
fsubr
sbb
xor
ss
fcompl
or
gs
sahf
inc
insl
fwait
imul
pusha
add
inc
jecxz
adc
loopne
push
shll
and
js
pop
push
sub
xor
xchg
push
jo
bnd
testb
hlt
shrd
je
stos
daa
lds
ljmp
fldt
loopne
mov
push
jle
arpl
test
clc
imul
shlb
pop
clc
fnstenv
sub
sbbl
xor
mov
fwait
cmc
jp
mov
lods
test
test
or
and
jo
inc
arpl
inc
mov
ja
inc
push
imul
inc
outsb
bound
push
xchg
lret
pop
mov
ret
insb
arpl
and
inc
xlat
push
cmp
ret
imul
mov
shrb
hlt
fidivrl
fwait
mov
in
popl
std
test
std
xchg
inc
mov
pop
pop
jb
divb
or
test
mov
aas
inc
sbb
aas
cmp
cmp
xor
cmp
loop
add
xor
inc
popa
pop
lock
hlt
pusha
icebp
cmc
pop
mov
lods
sbb
cmp
sub
xlat
push
and
dec
mov
inc
popf
stos
push
ljmp
mov
cmc
add
orl
insb
cld
add
cmp
mov
les
mov
push
push
adc
add
rcr
sbb
sub
add
adc
adc
push
imul
add
setb
lahf
jmp
mov
hlt
icebp
sbb
adc
xlat
push
lock
insb
call
gs
pusha
cmpsb
in
filds
into
xor
pop
xchg
jp
push
gs
mov
xor
repnz
daa
xchg
add
adc
sub
aaa
je
jmp
sbb
inc
je
mov
inc
into
cmp
roll
and
hlt
clc
shll
inc
ja
xchg
pop
std
or
stos
lds
push
xchg
mov
xlat
lock
sub
loop
add
out
cmp
out
push
add
std
mov
push
push
or
test
lds
pop
push
pop
add
xor
outsl
pop
mov
movsb
push
out
sbb
push
pop
std
mov
dec
or
bound
sbb
dec
jecxz
inc
sbb
js
adc
adc
insb
icebp
nopl
mov
flds
ret
out
ljmp
mov
adc
fwait
js
insl
add
mov
ljmp
insl
add
jbe
movsl
push
mov
push
das
push
mov
jle
dec
pop
sbb
popf
cmp
flds
mov
pop
push
xchg
aad
loope
gs
test
lock
es
call
fst
fwait
movsb
sbb
or
cmp
pop
repz
push
mov
mov
imul
pop
cmpb
outsb
outsb
cs
cmp
jae
test
mov
lds
push
mov
call
test
cld
stos
mov
das
inc
push
nop
repz
dec
jno
mov
lret
fwait
mov
sbb
or
push
andl
clc
bnd
rcr
test
inc
adc
addr16
stc
mov
lods
mov
sbb
push
or
mov
sete
bswap
push
sub
lds
je
add
push
nop
push
adcl
inc
cwtl
hlt
faddp
xchg
lods
adc
mov
and
cld
loopne
pop
adc
adc
flds
mov
add
sbb
cs
test
cli
fwait
mov
jp
cli
imull
lret
mov
je
or
jnp
mov
movd
je
rcrl
sub
ds
xchg
stc
mov
jne
push
repnz
jmp
pop
or
orl
pushf
roll
cmp
pusha
pop
aas
popf
cwtl
mov
adc
nop
xchg
cmp
push
js
xlat
mov
cli
data16
push
lds
mov
push
push
movsb
xchg
rclw
pop
js
mov
fidivl
repz
pop
adc
pop
push
sbb
and
enter
or
xor
addr16
inc
mov
int3
mov
mov
or
cld
ds
lea
adc
dec
or
xchg
fldenv
cmp
mov
xchg
imul
pop
cmp
mov
xchg
scas
adc
push
cmp
xlat
push
fsubrs
rcl
mov
mov
mov
xor
push
push
and
add
insl
xchg
push
imul
ja
or
cmp
orl
cld
les
aam
dec
insb
pop
adc
stos
lea
adc
rorl
pop
aaa
inc
mov
adcb
xor
mov
dec
dec
test
loop
hlt
push
ret
adc
push
ljmp
push
or
shll
cld
fcomip
rcll
adcb
lods
sbb
enter
std
mov
mov
clc
sub
pop
jge
mov
cld
popf
push
adc
xor
dec
or
out
stos
andl
mov
hlt
sub
jecxz
adc
stos
xlat
fwait
ss
cltd
mov
scas
aaa
mov
cmpsb
jp
or
mov
pushf
mov
pop
lods
iret
test
jl
je
sub
movq
movsl
in
lahf
lret
mov
cmp
leave
repz
jle
test
data16
add
mov
mov
dec
jo
dec
mov
jnp
js
sbb
js
mov
sti
cmp
xor
mov
lods
cli
aas
insb
mov
mov
std
jmp
or
bound
mov
test
mov
xchg
pop
fldl
pusha
icebp
inc
inc
arpl
gs
adc
adcb
mov
ds
mov
jge
testl
pop
fisubs
jge
jne
pop
pop
faddl
push
cmpb
aas
and
xor
push
int
rol
xchg
mov
test
fwait
ret
sbb
std
sbb
lock
xor
adc
std
lcall
mov
shll
cld
aad
lret
mov
push
or
sbb
movsb
fidivl
adc
aas
mov
pop
mov
push
and
push
aas
mov
jle
jcxz
call
or
ja
sti
sbb
jb
pop
cmc
push
adc
and
ret
or
sub
lock
ljmp
inc
lock
inc
pop
jp
pop
xchg
repnz
enter
hlt
add
and
call
push
cmp
mov
ret
out
mov
inc
out
testb
sbb
push
dec
mov
xor
adc
mov
pop
je
sbb
mov
out
xchg
hlt
js
inc
lock
ss
and
movsl
or
cltd
xchg
inc
daa
shl
js
lods
ret
shr
push
mov
movb
jl
sub
mov
js
je
je
pop
filds
movsl
out
xchg
js
mov
fwait
mov
rcrl
sbb
xor
xchg
jo
dec
aas
lret
or
call
push
cmpxchg
sbb
xor
jne
imul
mov
push
movsb
subb
int
shrb
adc
push
clc
loop
jo
icebp
xchg
sbb
int3
xor
xchg
or
pop
std
nop
dec
mov
jecxz
mov
sub
add
and
jle
or
cmpsb
in
and
insb
rol
jns
pop
adc
test
fstp
ja
mov
sub
xchg
push
adc
addb
test
cmp
test
mov
loop
icebp
or
jmp
xchg
loopne
je
stc
and
xchg
pop
jl
jmp
and
mov
push
sub
pop
mov
jno
mov
out
clc
data16
add
sbb
lock
fidivs
jge
mov
inc
ret
xor
fs
mov
call
sbb
push
sarb
cld
decb
outsb
xchg
jbe
ja
ret
popf
orb
mov
xchg
repnz
shrl
insb
mov
jo
jl
fdivs
test
jmp
mov
mov
mov
pop
outsb
push
adc
out
in
cmpsb
fdivs
sbb
adc
fstl
mov
jno,pt
and
outsb
shr
enter
mov
pop
pusha
inc
das
test
cmpb
add
push
jne
jae
mov
inc
sbb
mov
mov
jae
and
push
lret
clc
jecxz
lret
lret
pop
idivl
in
jle
jne
movsl
loop
aad
aaa
pusha
mov
xor
adc
xchg
pextrw
xchg
outsl
adc
xor
dec
pop
rorl
pop
pop
enter
test
pop
sahf
lcall
push
cltd
adcl
test
cmp
pop
push
inc
js
ret
mov
enter
call
aaa
mov
fsubrp
cmpsl
push
pop
adc
insl
xchg
test
imul
inc
sbb
pushf
xchg
or
fcompl
cwtl
cmpsl
int
jmp
lret
bound
mov
dec
in
cmpsb
sbb
out
push
jp
cmp
adc
lea
int
push
adc
sbb
inc
stos
pop
fst
sbb
mov
hlt
lds
push
push
in
dec
mov
inc
aad
mov
pop
jno
pop
out
mov
pop
pop
sti
jl
adc
and
dec
sbb
mov
dec
mov
xor
cmp
add
test
dec
rcrl
inc
xchg
push
rcrl
pop
xor
fcmovnb
es
cwtl
jmp
repnz
cmp
inc
jne
add
and
fisttpl
mov
mov
cmp
sbb
bound
mov
mov
dec
jg
test
and
adc
cld
or
bound
jge
mov
cmp
jle
push
mov
btc
repnz
add
jp
sbb
and
rolb
jg
mov
dec
scas
idivb
sbb
mov
jae
mull
clc
mov
stos
mov
xor
mov
sahf
push
loopne
into
jl
sti
sub
xor
inc
sbb
mov
imul
jecxz
ja
jb
in
js
gs
fstpt
cmp
in
in
xor
sub
jl
addr16
xor
lea
jno
out
xchg
xor
dec
scas
das
dec
imull
clc
jbe
inc
xchg
movsb
ficoms
mov
loope
sub
daa
fisubrl
fdivr
pop
mov
push
mov
rcrl
iret
lods
testb
jb
mov
mov
sub
subb
add
in
mov
outsb
or
xlat
nop
dec
sbb
dec
dec
aaa
roll
push
xorl
cli
fcom
adc
pop
adc
ja
fwait
ret
xor
jg
or
dec
mov
out
loopne
mov
jne
mov
add
mov
testb
ds
ret
or
pop
lds
pop
or
jle
sub
fdivrl
rcl
frstor
or
push
jecxz
dec
jns
cltd
xchg
test
movsb
push
sbb
jo
mov
xor
stos
cmp
insb
mov
out
jae
je
mov
out
inc
mov
xor
out
or
fistps
add
pop
out
pop
mov
lods
add
lds
pop
jecxz
incb
adc
andl
mov
les
sbbl
adc
jge
clc
inc
imul
pop
test
test
inc
out
sti
daa
das
and
xchg
mov
sub
add
xchg
cli
in
push
in
or
leave
xor
out
lahf
adc
out
pop
xor
mov
mov
xor
addb
jmp
sub
push
and
les
push
xchg
in
xchg
jbe
cs
mov
idivb
sbb
xor
in
jbe
rcl
icebp
lret
jmp
sub
je
and
or
lock
mov
clc
adc
int3
aad
cmp
je
inc
sbbb
sbb
push
add
out
mov
test
or
mov
pop
jo
or
mov
clc
and
push
outsb
pushf
sub
inc
jae
test
scas
and
mov
mov
bound
cltd
pop
movsb
mov
push
and
mov
or
test
push
lahf
inc
ja
punpcklbw
sub
and
sub
dec
and
rcrb
inc
adc
mov
xchg
jle
xchg
and
and
xchg
ja
jb
push
aas
xchg
out
in
arpl
and
mov
out
xchg
xor
jo
jmp
mov
in
cli
or
into
imul
sub
ret
iret
pusha
xchg
ret
movsb
pop
push
cmp
outsb
push
sahf
rolb
adc
push
jl
fidivl
push
jmp
aad
in
push
clc
add
dec
or
popf
push
shrb
cld
xorb
mov
and
sub
xor
inc
pop
mov
sahf
loopne
push
push
xor
inc
test
popf
push
stos
cmp
les
mov
push
or
lock
push
pop
dec
test
adc
pushf
inc
notl
or
aaa
cmp
adc
out
in
popa
mov
add
int3
mov
aam
mov
lods
fwait
scas
inc
loopne
inc
xchg
rcl
jmp
pop
jecxz
pop
cmp
cld
mov
fisttps
or
movsb
xor
daa
jl
or
bnd
xlat
mov
enter
in
inc
sub
mov
outsb
daa
andb
inc
pop
mov
mov
mov
adc
cld
popl
jne
mov
ret
fcoms
mov
sub
sub
push
pusha
pop
fimull
sbbb
scas
sub
stos
jae
sbb
std
lds
mov
adc
rcll
add
imul
push
sbb
insb
inc
aas
push
pop
js
lock
add
notb
push
lock
add
xchg
outsb
fwait
aam
insb
pop
xchg
jno
jns
jo
jns
sarl
mov
hlt
popf
enter
jg
xorb
movsl
imul
subb
je
xor
or
ljmp
inc
xor
fimull
lret
aaa
sub
fsub
xchg
mov
std
mov
xor
sub
stc
ds
push
mov
ljmp
out
mov
jb
sbb
popl
lock
ds
mov
xchg
jmp
pop
stos
jbe
sbb
sub
or
xchg
les
mov
cmp
or
push
push
jbe
xchg
sub
loop
stos
outsb
adc
xchg
in
popl
and
dec
inc
movsb
mov
or
dec
pop
mov
mov
ja
or
test
inc
jmp
lds
enter
pop
jne
les
adc
cli
lahf
lcall
or
push
mov
movsl
xchg
or
fcoms
push
or
lds
push
cltd
pop
mov
mov
mov
xor
scas
jg
in
xchg
mov
sub
xor
loopne
aas
mov
rolb
pop
jmp
dec
cmp
add
add
hlt
orl
dec
ret
dec
es
jb
shl
rdmsr
push
push
scas
scas
jns
pop
jb
call
call
add
mov
pop
loop
mov
push
loope
push
fstpt
dec
jnp
add
fstp
inc
call
ret
jbe
dec
dec
or
in
pop
fstp
mov
ja
pushf
pushf
loopne
pop
push
mov
xchg
sbb
out
das
add
pop
stos
ss
cmp
cmp
dec
shrb
push
cmp
mov
mov
or
out
daa
cmc
daa
lds
jg
xchg
push
sti
arpl
orb
pushf
lahf
shlw
pop
mov
testl
fsubp
jmp
lock
add
ljmp
leave
add
test
in
bound
aas
pop
adc
fwait
and
clc
sbb
or
cmp
jg
dec
push
adc
sbb
das
test
inc
cmp
clc
test
mov
bound
pop
adc
pop
cmc
mov
jmp
mov
jp
mov
lock
mov
push
lea
fcoms
push
add
cmc
mov
pop
jle
loope
js
cmp
lock
call
jecxz
adc
fnsave
xor
loope
idivl
adc
jbe
mov
cmpsb
insb
loopne
cld
cmp
inc
fadd
jge
mov
arpl
jne
ja
push
and
xor
loopne
mov
les
ljmp
ljmp
rcrl
ja
jmp
push
sbb
pop
add
jle
xchg
lret
adc
push
stc
cmp
int3
jne
ja
cvtpi2ps
test
mov
mov
int3
dec
add
pop
cli
mov
aaa
and
int
inc
rolb
pop
add
roll
cmp
mov
pusha
mov
xor
push
mov
dec
ss
sub
xor
xor
xor
fildl
in
adc
aaa
clc
loope
std
insb
pop
ret
mov
lds
and
xchg
movsl
aas
insb
lea
lods
in
repnz
loopne
xor
mov
xchg
add
adc
insb
mov
insb
leave
jnp
es
js
jg
cmp
jb
repz
mov
jae
add
push
stos
xor
in
adc
ljmp
cld
pop
test
ret
or
dec
or
inc
sbb
push
cmp
xor
stos
cld
test
iret
or
sub
scas
call
insl
or
pop
arpl
jae
or
sahf
push
xor
inc
xchg
add
push
mov
loope
push
fwait
mov
and
jnp
xor
push
pop
inc
ljmp
rorb
jno
dec
pop
fisttps
lahf
add
lret
outsl
pop
mov
adcl
nop
mov
iret
inc
sub
mov
cs
adc
nop
mov
movsl
mulb
mov
sbb
mov
sub
and
jg
repnz
inc
xor
arpl
mov
xor
dec
dec
rcl
movsl
shll
pop
mov
test
cmp
cld
ljmp
icebp
sbb
mov
sbb
jae
jmp
add
cmp
aam
sbb
stos
push
xchg
pop
cmp
shr
dec
xorl
sbb
loop
xor
hlt
lods
dec
cmp
loop
mov
cmpb
mov
imul
mov
xchg
das
sti
loopne
clc
je
shlb
in
sbb
aas
das
mov
inc
xor
mov
lods
test
iret
mov
test
push
aaa
arpl
push
das
lret
push
mov
out
push
lods
mov
sti
mov
dec
mov
testb
cmp
push
sbbl
shrl
insl
cld
add
mov
dec
aam
lahf
pop
negl
repnz
mov
sti
push
pop
and
push
inc
stos
push
shr
sbb
sbb
testl
test
outsl
xchg
mov
pop
and
push
testl
add
cmp
ret
sub
repz
mov
out
aas
sarb
mov
cmpsb
aas
aad
mov
scas
ds
xor
out
hlt
les
popa
rorb
cmp
stos
lds
push
xchg
mov
js
ficoml
lods
subb
jmp
mov
mov
stos
sarl
outsb
adc
scas
xor
ljmp
inc
cld
mov
fs
push
xchg
vpaddb
out
xor
iret
loop
mov
fisttpl
add
sub
adc
jg
and
test
dec
outsl
ficompl
repz
aam
mov
mov
pushf
or
lret
push
adc
aad
cmp
or
or
pop
jg
test
push
mov
sti
mov
add
outsb
call
in
ss
inc
push
cmp
les
loop
or
jl
xchg
mov
lcall
call
in
mov
inc
mov
enter
cmpl
fldcw
std
fstpl
xchg
fdivrs
xchg
adc
imul
sub
into
fstl
jno
xor
inc
mov
shrb
mov
mov
aam
clc
pop
arpl
movsb
popa
push
cmc
or
and
ret
push
out
rcrb
inc
sarb
loope
fwait
loopne
leave
inc
repz
push
adc
mov
clc
jns
repnz
xorb
lods
aas
dec
xchg
cld
stos
push
pop
test
shr
loopw
xchg
inc
pop
inc
pop
js
notb
clc
pop
lock
jbe
insl
nop
popa
test
js
dec
popf
adc
push
and
inc
dec
mull
dec
imul
into
xchg
inc
xchg
inc
pop
test
xor
int3
stos
xlat
lar
sub
adcb
xor
xchg
dec
push
ret
adc
cs
fsubs
dec
bound
outsl
fnsave
inc
or
leave
pop
or
ret
cmp
mov
sti
or
packssdw
clc
lods
or
ret
cmpsl
push
lods
ljmp
mov
addb
cs
pop
add
xchg
xchg
fs
imul
xor
mov
mov
data16
dec
xchg
loope
sbb
jbe
mov
fdivrs
in
shrl
sub
rcll
add
das
push
mov
mov
bound
mov
cld
lahf
adc
loopne
insl
inc
dec
push
add
xchg
or
or
mov
mov
add
push
lea
test
es
xchg
and
push
push
add
cmp
push
fldt
adc
add
pushf
cwtl
imul
cmc
loopne
aas
leave
pop
jg
orl
pop
inc
addr16
add
add
cmp
dec
rorb
adc
or
movsl
or
mov
aaa
sbb
inc
mov
pop
adc
dec
ss
add
push
icebp
adc
leave
mov
mov
ljmp
sub
mov
clc
test
push
fdivl
push
fs
add
cmp
out
sti
pusha
cmp
cmp
dec
add
jge
cld
push
jmp
add
je
int3
movl
addb
loopne
push
add
pop
cmp
rclb
mov
out
push
outsl
jae
push
movsb
bound
mov
fsts
enter
push
jmp
dec
ret
mov
add
mov
std
loope
mov
gs
jbe
fisttps
or
add
loopne
add
xchg
add
lret
mov
xchg
pop
add
lret
iret
adc
sahf
ret
push
rclb
or
sbb
push
add
movsb
fadds
add
dec
mov
rcr
lods
xor
inc
les
data16
imulb
addr16
push
adc
lock
das
aam
jno
insl
push
rclb
xchg
or
or
nop
aam
sbb
ror
push
popa
enter
popa
jl
or
push
notb
fs
fsubrl
and
cld
ja
push
orb
in
xor
and
push
sbb
add
or
nop
push
out
loopne
ss
rol
jns
push
out
out
push
data16
movsl
fisubrs
repnz
inc
fadd
addr16
sbb
xchg
push
inc
lods
dec
mov
outsl
sarb
sbb
jnp
jg
cs
les
subb
ret
pop
insb
movsb
js
add
mov
loop
mov
movsb
aaa
sbb
cld
xchg
pop
imul
clc
jbe
sbb
xor
insl
dec
xor
cmp
mov
push
push
movsb
outsl
adc
mov
sub
ret
inc
mov
das
jl
outsl
jnp
mov
dec
push
mov
dec
adc
rorl
lea
mov
adc
inc
sub
outsl
mov
pop
push
or
jne
cld
push
insb
cwtl
mov
pop
mov
out
xor
xor
loopne
jecxz
fsubl
push
xchg
lret
mov
dec
clc
stc
lock
mov
int3
adc
jmp
add
push
add
mov
add
fs
add
nop
inc
add
add
xorl
adc
add
ja
outsl
push
jne
dec
jno
pushl
popa
inc
inc
inc
add
pop
dec
inc
push
add
jb
gs
xor
cs
insb
add
xchg
test
mov
loop
adc
pop
aas
add
addl
stc
cmpsb
mov
xchg
pop
mov
mov
dec
xor
enter
mov
cmp
mov
push
push
dec
add
in
pop
add
rorb
dec
outsl
mov
test
xchg
add
and
out
nop
std
lock
outsl
addr16
in
call
ret
inc
sub
sarl
adc
ds
xor
or
sub
pop
jle
push
mov
mov
add
ss
stos
fisubrs
add
stos
sub
xchg
scas
mov
add
mov
stos
faddl
jb
push
jae
out
push
and
add
sub
scas
and
mov
popf
pop
loope
or
push
std
add
mov
fwait
xchg
pop
sub
inc
aad
inc
vcvttpd2dqy
leave
andb
mov
add
pop
flds
sbb
and
push
sar
jl
fcomps
ret
mov
popa
cmp
jg
dec
shll
add
xor
mov
adc
iret
testl
rolb
push
dec
sbb
jmp
mov
xchg
adc
xchg
dec
sbb
mov
push
pop
inc
sub
call
xor
test
ja
test
movsb
and
inc
test
outsl
divb
jecxz
add
add
inc
jge
push
add
jns
popf
test
stos
stos
cmpsl
add
fs
outsl
popl
cli
push
jl
add
lret
mov
push
sub
jno
das
fcompl
xor
into
add
les
pop
lock
add
jle
inc
dec
iret
sbb
mov
dec
inc
pop
les
or
decl
dec
call
or
lods
push
adc
jne
xchg
ljmp
push
add
add
in
xor
fadd
add
clc
out
mov
daa
cmpsl
cld
pop
idiv
ret
repnz
inc
lds
pushf
pusha
and
andl
dec
sbb
outsl
pop
mov
adc
push
das
add
xor
mov
aaa
or
xchg
das
inc
cmp
dec
xor
inc
mov
ret
mov
cmc
imul
mov
mov
push
lret
fmull
jecxz
add
lea
push
xor
xor
test
push
push
inc
cmp
jp
repnz
stos
int3
add
jmp
iret
daa
add
xchg
stos
xchg
and
dec
mov
mov
dec
inc
mov
add
mov
loopne
cs
js
sub
jb
jo
pop
clc
jmp
add
jne
shl
ret
jecxz
mov
sbb
inc
shld
addl
out
pop
inc
mov
mov
adc
add
inc
gs
std
movl
push
add
inc
mov
and
mov
icebp
push
push
aas
adc
addb
test
imul
sbb
loope
cs
push
clc
pushf
lret
out
clc
or
or
inc
aam
inc
jne
pusha
adc
frstor
mov
mov
cltd
ret
dec
jecxz
in
mov
mov
sti
cmp
jb
mov
insb
jl
sbb
add
pop
cwtl
and
ret
cmpl
fisubl
hlt
pushf
mov
data16
scas
sahf
sub
sub
mov
cmp
jae
nop
movsl
popa
inc
loopne
or
cli
inc
adc
outsb
cs
inc
sub
mov
rolb
cmp
cs
lret
or
xor
inc
pop
lock
dec
arpl
in
or
mov
push
sti
xor
or
sbb
push
dec
mull
out
ss
lea
add
scas
fidivrl
rorl
and
arpl
push
push
iret
test
mov
pushf
inc
out
mov
pop
xor
mov
jmp
out
loop
rclb
out
mov
mov
sarb
test
cmp
or
ret
popa
std
sub
outsb
mov
lret
leave
test
pusha
cmc
inc
pop
add
pop
popa
add
xor
popa
ret
mov
inc
idivb
add
sbb
js
fistpll
lock
scas
int3
imul
mov
fmull
sysenter
push
push
test
loopne
and
jl
outsl
out
xor
dec
shrb
fdivrs
sbb
mov
aas
subl
and
lret
push
loopne
pop
ret
mov
mov
mov
mov
mov
jmp
es
mov
idivl
mov
mov
pop
pop
mov
mov
add
pop
jle
lea
fildll
fisubrs
push
js
add
out
icebp
cltd
pushf
pop
pop
es
imul
or
fistpll
adc
nopl
add
or
push
xchg
adc
movsl
ret
cmp
adc
or
jecxz
jmp
push
push
pop
les
dec
aam
add
or
sysexit
jle
xor
xchg
adc
jmp
sarl
add
aam
mov
fldt
aaa
hlt
pushf
rcrb
push
jnp
js
and
in
inc
add
sub
imul
adc
daa
fcmovnbe
jle
fildl
adc
or
movzbl
fisttpl
mov
fnsave
and
add
push
mov
sbbb
or
xchg
mov
add
sub
mov
js
or
or
sub
sub
add
add
ret
pop
mov
hlt
mov
shr
mov
sub
loopne
sarl
clc
lahf
or
mov
js
in
ret
jne
cld
insl
not
xchg
inc
je
xor
cltd
js
or
cld
or
je
mov
and
jo
aaa
cmp
or
cmp
call
and
jmp
jae
es
out
es
sub
mov
icebp
out
movb
int3
popa
repnz
cmp
push
imul
jle
jge
ja
xor
loopne
mov
das
and
shlb
sub
jnp
dec
mov
sbb
ror
aaa
xor
out
mov
xor
call
ficomps
scas
fwait
push
xchg
test
imul
outsb
cmpsb
and
xor
xor
std
add
or
mov
cmpsb
repz
fnstsw
dec
xchg
inc
lret
push
or
jno
ret
ja
mov
xchg
mov
and
lret
pop
dec
push
iret
rclb
outsb
dec
sti
data16
pop
mov
ja
pop
push
rorl
inc
insl
pop
fnstsw
test
mov
stc
or
les
fsubrl
xchg
jmp
in
in
ret
add
mov
xchg
inc
out
mov
outsl
cli
pop
push
sub
insl
mov
mov
xchg
pop
sbb
enter
cmp
arpl
rcrl
into
inc
add
mov
cs
pop
bound
xor
out
jbe
pop
addr16
ret
xor
imul
jno
and
das
rclb
cmp
rorb
fstpl
cli
push
popf
inc
sarb
notl
icebp
pop
mov
iret
jge
lods
repnz
mov
addr16
push
mov
sbb
cmc
ljmp
push
mov
dec
adc
mov
xor
scas
mov
cmp
sub
int3
and
in
pop
xchg
decb
cmp
fldl
push
sub
add
roll
pop
enter
popf
xor
cmp
clc
std
nop
xor
cwtl
mov
and
loopne
pop
loopne
testb
in
adc
into
test
sbb
dec
add
sti
pusha
xlat
andl
cmc
hlt
jle
push
test
mov
call
and
fmuls
dec
xchg
push
ss
pushf
push
gs
mov
fisttpll
lret
or
in
cmp
adc
aaa
hlt
xlat
std
mov
xor
and
shl
out
jge
cltd
jp
aam
and
mov
add
pop
rclb
mov
daa
nop
lea
enter
mov
pop
scas
xchg
mov
sbb
popf
adc
ds
pop
mov
hlt
push
or
inc
sarb
sub
dec
dec
xchg
shll
cli
mov
jb
cmp
xor
repnz
push
ficoml
push
shrl
mov
jl
or
frstor
dec
arpl
popa
stos
insb
dec
sbb
insl
cwtl
daa
mov
mov
mov
stc
sbb
int3
rcl
ds
pop
sbb
enter
cmp
icebp
jmp
adc
loop
lock
loopne
cmpsb
fwait
aaa
ja
and
push
mov
out
sub
jmp
xorb
pop
jle
push
negl
cmp
add
pop
mov
fistpll
in
dec
ljmp
jl
lods
pop
ljmp
nop
xchg
into
add
cwtl
cli
adc
cmp
sbb
sub
fcoml
loope
outsb
pop
dec
xorb
cmpsb
scas
sub
xchg
ret
cmp
out
cmpsb
mov
mov
out
dec
push
mov
clc
sahf
addr16
into
pop
ret
jecxz
fnstsw
and
hlt
and
popw
mov
aas
cmp
mov
pop
pop
jne
cs
xchg
or
iret
or
fsubp
dec
sub
addb
xchg
sub
push
sbb
mov
xlat
cs
shl
movsl
and
mov
mov
out
addl
jp
loop
outsl
push
cmp
imul
incl
andl
test
int
cmp
rcl
fwait
pop
cltd
mov
sbb
jae
jmp
or
addb
jl
or
cwtl
sbb
fdivl
add
adc
pop
add
test
out
shll
popa
pop
xor
stos
add
sub
mov
popf
inc
mov
imul
push
push
jnp
and
loope
jecxz
inc
outsl
add
add
aam
mov
hlt
dec
fildl
test
mov
cmp
mov
in
movsb
popf
addb
fisubl
lods
push
pop
adcl
mov
mov
les
and
sub
add
cltd
sub
xor
or
mov
incb
and
in
cmp
xchg
icebp
xchg
clc
pop
lea
shll
test
outsb
cmp
out
sub
mov
or
adc
lock
mov
add
and
jmp
fdivs
mov
sbb
shrl
movsb
xor
inc
mov
stos
jg
lret
lea
mov
push
mov
or
bnd
add
xlat
mov
jg
mov
scas
mov
mov
mov
push
jb
cli
push
or
xor
imul
hlt
inc
dec
jle
rol
arpl
lock
and
mov
mov
aam
jo
sbb
mov
mov
inc
push
xor
lret
in
lock
cmp
pop
mov
pusha
cmp
in
lahf
jnp
mov
add
ret
add
fcmovbe
mov
sub
test
mov
xchg
jle
clc
push
mov
jle
cwtl
aam
cs
mov
daa
das
stos
inc
dec
push
pop
adc
mov
pop
xor
xlat
mov
enter
imul
ja
addb
sbb
xor
sahf
adc
das
cld
insl
jnp
addb
aas
and
in
fucom
out
cmp
clc
inc
pop
and
lcall
jmp
movsl
les
mov
in
cmp
fstpt
lcall
stos
xor
iret
arpl
sub
icebp
jmp
pusha
jmp
jl
jbe
and
jae
jp
sbb
pop
lret
sarl
in
lods
mov
and
inc
inc
mov
sti
inc
jle
cmc
jl
imul
lods
inc
mov
mov
test
inc
or
mov
mov
mov
les
jl
arpl
inc
inc
or
sbb
add
sbb
dec
outsb
call
aas
jp
add
sbb
ljmp
je
imulb
loope
mov
inc
imul
lods
jg
test
shr
pop
push
fcomi
mov
xor
pop
lahf
flds
mov
scas
push
adc
sub
enter
fdivr
popa
xor
jae
cld
inc
test
add
mull
lcall
in
dec
lret
jle
stos
js
mov
pop
loop
pop
or
mov
shlb
or
or
rcr
clc
loop
or
rcl
imul
inc
mov
sub
pop
add
push
pop
mov
ja
lahf
lahf
addl
xor
repz
adc
scas
sahf
loop
xlat
into
jne
or
ss
xlat
fcmovnu
js
je
sbb
rcrb
mov
sbb
pop
pop
imul
outsb
jg
jp
std
mov
or
daa
call
jmp
in
cmp
push
rcrl
jl
out
pop
cwtl
mov
mov
lahf
inc
loope
ret
test
mov
inc
and
lods
fwait
cmp
xorl
jmp
sbb
mov
jl
push
xor
popa
iret
mov
test
sti
ret
shll
stos
sub
push
lock
sbb
inc
cmc
lds
call
inc
ss
pop
popf
pop
mov
jo
lea
push
test
mov
les
xchg
and
adc
js
jg
mov
jae
adc
outsb
cmp
mov
xchg
mov
mov
xor
dec
add
xor
sbb
pop
mov
loope
mov
shlb
fsubr
stos
cmc
jecxz
sbb
inc
xor
testl
inc
add
in
push
aas
push
pop
mov
cmpl
adc
cwtl
insl
js
test
js
jge
xorb
sarb
fdivrl
and
pop
das
pop
add
ss
cmp
inc
pop
fcomps
repz
and
addl
dec
pop
gs
loope
push
push
popa
js
lods
sub
xchg
mov
jl
out
in
xor
mov
push
and
test
sar
loope
enter
out
mov
into
aad
mov
xchg
cmc
xchg
xlat
jb
push
shrb
fldln2
fsubrs
push
or
xor
push
loopne
pusha
jl
das
cltd
sahf
fidivl
jo
scas
add
add
mov
movl
xchg
loop
fs
jecxz
call
add
adc
mov
std
lock
adc
xchg
push
sbb
repz
ret
sub
mull
add
jae
push
push
stc
add
mov
sub
jmp
and
xor
add
add
mov
cld
xor
pop
jo
mov
popa
xchg
in
inc
push
mov
mov
mov
mov
inc
hlt
sub
cmp
xchg
movl
pop
jns
push
mov
imul
insl
faddl
or
add
mov
adc
or
and
fistpl
ficoml
faddp
jecxz
in
or
std
jp
ss
pushl
in
das
mov
outsl
xchg
fcmovnbe
call
dec
test
aam
lcall
add
mov
leave
sub
outsl
xchg
cld
mov
popf
mov
das
adcl
sbb
adc
je
into
hlt
push
pusha
cmp
cld
out
add
adc
mov
add
inc
popa
lods
out
dec
inc
movsl
shlb
frstor
iret
loopne
ret
sbb
push
dec
adc
ret
out
add
fdivs
cmpsb
dec
idiv
aad
scas
push
notl
jecxz
sbb
pop
mov
sbb
cs
xchg
stos
faddl
xlat
stos
adc
lret
pop
inc
pop
jle
je
les
push
pop
and
cltd
loope
sub
or
notb
xor
push
sarl
shl
fnstsw
mov
xchg
aaa
mov
adc
lea
adc
out
push
insb
loop
icebp
xor
mov
dec
rol
add
xor
rorl
mov
xchg
pop
std
shrb
xchg
test
icebp
in
popa
adcb
fldenv
fidivl
bnd
pop
jl
jle
jle
mov
add
mov
jo
xchg
mov
cmp
sahf
je
es
inc
add
insb
ds
jo
ret
out
or
es
and
mov
push
xlat
or
cmp
aas
test
add
stc
shlb
leave
add
adc
jl
push
xor
xchg
add
mov
add
aaa
mov
mov
add
test
jmp
jecxz
pop
jno
in
rorb
dec
les
das
fisubrs
mov
icebp
lahf
push
dec
out
push
jnp
mov
sub
rclb
jne
movsb
jge
fwait
insl
mov
mov
lret
sbb
cli
fsub
add
cmp
sub
sbb
lock
enter
xchg
sbb
pop
mov
mov
mov
js
in
mov
cld
popf
push
sbb
outsb
and
test
data16
mov
adcl
movsb
imul
rcrl
scas
xchg
mov
mov
sbb
xor
cld
addr16
and
ret
cmc
or
cmpl
data16
jge
daa
inc
mov
cli
arpl
xchg
jno
pop
push
or
adcb
add
and
popf
inc
outsb
js
orl
adc
bound
xlat
in
test
lock
je
es
mov
sub
or
out
sbb
out
mov
repnz
test
lods
ljmp
cmpsb
movsl
fdiv
daa
jo
adc
sub
push
mov
jl
adc
mov
clc
mov
sbb
dec
mov
incb
mov
mov
mov
ss
pop
cli
inc
mov
push
aas
inc
xor
adc
pop
aaa
dec
pushf
lret
stos
hlt
stos
mov
adc
aad
fwait
and
and
dec
push
insl
in
insl
frstor
inc
adc
mov
cmc
sub
movsl
repz
jno
nop
cmc
mov
mov
leave
mov
xchg
add
push
aam
jae
dec
sbbl
rcrl
dec
lahf
jge
mov
sarl
cwtl
sti
mov
mov
je
inc
mov
xchg
adc
xor
jnp
lds
fcmovbe
pusha
js
addr16
lock
mov
push
loope
movsb
add
push
sub
pop
js
repz
pop
mov
test
sti
adc
pusha
xor
shr
push
test
insb
jge
fimuls
shlb
adc
adc
or
outsl
enter
mov
lret
mov
jg
test
js
cld
mov
clc
xchg
mov
mov
add
jbe
lea
adcb
cmpsl
jnp
jae
lea
mov
ljmp
leave
cmp
adc
xchg
popa
xchg
inc
sub
and
fxch
pop
mov
rcrb
add
jno
movsl
inc
xchg
add
mull
xchg
loope
jl
repnz
add
jle
and
pop
mov
loope
push
or
add
fdivrs
mov
fimuls
dec
cmp
aad
dec
xchg
cmp
jp
aaa
enter
rolb
mov
pushf
jmp
lret
fists
outsb
dec
outsl
loopne
adc
adc
test
and
into
cltd
sbb
mov
sub
or
pop
mov
or
es
mov
jmp
mov
pop
lahf
daa
lea
rcrb
insl
pop
jle
sbb
pop
sbb
out
cmp
pop
jo
nop
rcr
fcoms
xor
xlat
movsl
daa
lret
xlat
bound
insl
sti
test
lahf
inc
cwtl
jae
jmp
cld
shl
out
test
loope
ret
movsbl
jmp
xchg
movsb
das
lods
push
xlat
pop
inc
loope
test
cld
daa
dec
mov
pushf
sub
jno
adc
sbb
adc
movsb
add
push
sbb
daa
jmp
xor
mov
push
xor
andl
scas
cmp
xlat
movsl
or
das
sub
cmpsb
mov
call
and
adc
shrb
scas
fdecstp
mov
lods
pop
xor
bound
pop
in
sbb
fldcw
lds
scas
or
sbb
stos
popa
sbb
add
cmp
inc
stos
ljmp
mov
lcall
in
testb
mov
stc
xor
inc
adc
mov
popf
add
pop
gs
ss
shl
mov
push
mov
dec
imul
enter
test
jge
cmp
or
jno
repz
inc
inc
sbb
in
dec
cmpsb
jle
pusha
add
jge
cmp
pusha
adcb
fiadds
ret
fdivs
fdivs
mov
imul
sti
mov
pop
or
adc
adc
cmc
dec
mov
add
andb
outsb
add
sbb
sbb
sub
insl
push
int
in
xchg
dec
jl
pop
lret
dec
sbb
ljmp
mov
mov
clc
sbb
fisttpl
mov
in
lret
loopne
cmp
cwtl
inc
xlat
mov
les
pop
push
jp
dec
sub
shll
dec
insb
cmp
fwait
push
cwtl
mov
pop
cmpsl
bound
lret
mov
mov
stos
aas
call
sub
mov
adc
orl
xchg
cltd
lea
pop
sub
pop
xor
enter
sbb
jne
ljmp
movb
bnd
xor
sbb
loop
ljmp
push
push
sar
and
lods
add
outsl
fidivl
sarb
or
adc
stc
aam
jb
fisubrl
sbb
mov
out
xchg
dec
loopne
adc
mov
adc
mov
out
in
loopne
outsl
jl
xchg
jg
pop
add
sbb
xlat
add
mov
ret
jmp
outsb
sub
fsubrs
test
sete
jecxz
mov
lea
cmp
adc
add
or
xor
xor
in
push
xchg
add
inc
push
hlt
inc
xor
ret
fyl2xp1
scas
addr16
cmp
push
push
addr16
negb
push
xchg
pop
cs
pop
cmpsb
pop
pop
xorb
les
inc
arpl
bound
movsb
into
xchg
out
fidivrs
pop
lock
scas
add
fisttpl
inc
xlat
hlt
ljmp
popa
es
hlt
ror
sbb
jb
pop
or
jmp
ret
push
jle
call
sti
push
imul
insl
ds
cwtl
pop
pop
xor
xchg
fxam
shlb
setl
push
inc
inc
pop
sbb
movsl
js
fsts
jecxz
ja
test
push
rorl
je
sbb
dec
mov
test
fistpll
pop
mov
punpcklwd
outsl
fiadds
sub
imul
mov
jnp
sti
rorb
mov
add
pop
sbb
pop
adc
push
mov
fucomp
xchg
adc
xchg
sbb
or
pop
mov
xor
incl
pop
jne
adc
xchg
xchg
jno
daa
and
xchg
pusha
shr
lods
pop
mov
gs
cli
nop
std
ret
in
ret
xchg
leave
pop
pop
cwtl
or
mov
xorl
sbb
mov
call
add
pop
mov
sbb
adc
adc
decb
bound
fcompl
mov
arpl
mov
push
and
lret
push
in
push
shl
cs
mov
cmpsl
xchg
loopne
push
pop
or
fs
outsl
inc
sarb
dec
jg
scas
loop
or
add
icebp
gs
xor
adc
mov
sub
aas
jmp
mov
movsl
push
mov
inc
sahf
fs
adc
lds
jbe
mov
pop
mov
sub
aas
idivb
dec
push
shrb
fs
add
lods
sbb
int3
cmc
gs
dec
pop
push
outsb
popf
jne
outsb
rolb
jp
adc
or
pop
mov
xlat
sbb
dec
push
sub
sbb
aad
add
std
xchg
and
shll
in
push
insl
insb
mov
xchg
es
inc
sti
into
outsb
lcall
push
dec
mov
adc
and
or
push
mov
les
mov
imul
xor
ffreep
mov
xor
movsb
imul
push
test
imul
mov
xchg
sahf
bound
cmp
push
ret
insb
dec
gs
xchg
inc
pusha
mov
fstpt
test
mov
aaa
cs
sarb
mov
sbb
in
je
adcb
mov
sti
or
xor
lcall
pop
sub
push
cmp
scas
cmp
or
sbb
pop
ja
jns
addr16
mov
les
shr
inc
test
push
ds
insl
sti
inc
inc
xchg
ljmp
mov
and
inc
decl
cwtl
xor
jp
std
mov
shll
addb
or
xchg
and
jmp
shl
sti
aaa
push
lret
push
jl
push
mov
adc
mov
repz
dec
sahf
sub
push
push
call
repnz
imul
xor
xchg
testb
dec
xchg
cmc
mov
insl
fs
adc
lods
jp
sbb
mov
and
dec
xchg
mov
and
in
sbb
jmp
loop
cmpl
aad
rclb
add
or
adc
insl
icebp
scas
add
add
pop
in
adc
enter
ss
push
jbe
sbb
mov
xchg
xchg
inc
dec
test
pusha
repz
mov
movb
addb
pop
lods
mov
adc
in
clc
arpl
int3
xor
insb
sbb
xchg
ret
sbb
test
loopne
jp
bnd
mov
fldenv
add
pop
cmp
or
pushf
out
jle
call
dec
adc
mov
push
decb
imul
incb
inc
mov
aaa
rcr
cs
rorb
mov
dec
loopne
sub
loopne
dec
loope
movsb
fisttpl
xor
pop
cmp
cld
mov
cli
cmovge
mov
jg
ret
inc
inc
xlat
dec
cmpsl
clc
pop
add
inc
jmp
sub
add
push
clc
jge
xlat
sbbb
pop
cs
lock
inc
cmp
sbb
scas
sarl
mov
jo
mov
push
std
orl
and
pop
js
cmpsl
or
jp
inc
push
ljmp
sbb
mov
dec
outsb
pop
mov
loope
mov
out
adc
loope
pop
std
test
icebp
pop
loope
fidivl
in
mov
not
and
ror
sub
mov
je
inc
clc
push
mov
je
jg
jecxz
in
addb
bound
push
and
add
ss
data16
push
scas
push
mov
stos
xor
or
lahf
xlat
push
test
xchg
fidivrl
mov
mov
xor
jo
fimull
xor
sahf
or
dec
nop
or
cmp
in
aam
push
arpl
pop
jl
push
test
cmp
jbe
je
xchg
sub
adc
mov
dec
and
gs
xchg
mov
mov
inc
lock
and
cmc
dec
mov
roll
add
aam
in
ret
test
movsl
sbbl
fcmovnb
popa
sub
pop
adc
jl
or
aaa
sub
hlt
mov
je
adc
jmp
cmp
inc
xor
aaa
or
xor
sub
mov
inc
addr16
das
rorl
mov
or
std
mov
rcl
std
xor
inc
jge
out
or
outsb
pop
clc
sahf
sbb
shll
cmp
or
rep
cmovbe
jo
out
orl
loope
inc
push
sub
cmp
scas
aam
jnp
mov
push
dec
add
pop
inc
mov
sarb
jp
and
jmp
adc
or
adc
test
aam
ja
loope
or
xchg
loopne
fdivl
sub
cmp
call
xor
pop
inc
pop
mov
add
test
cmp
and
pusha
dec
ds
mov
push
push
add
pop
clc
test
jp
jne
or
pop
loopne
xchg
test
sub
mov
or
jl
pop
sbb
mov
push
movsl
inc
mov
fisttps
in
mov
std
dec
and
pop
and
mov
mov
cmpsb
loop
pop
lahf
imull
rolb
fisubs
in
subl
dec
in
scas
movsl
mov
inc
int3
cld
xor
add
adc
ja
pop
out
lods
jl
arpl
dec
popf
adc
push
mov
or
mov
push
lret
call
mov
lret
cmp
add
lcall
jle
mov
ljmp
rclb
js
fiadds
sub
add
or
gs
push
mov
inc
daa
imul
vphsubbw
aaa
insb
mov
and
fidivrl
outsl
in
clc
sti
ss
call
jmp
cld
and
inc
sbb
mov
test
pusha
sub
addl
jo
pop
jp
xchg
pop
and
imul
in
pushf
sti
dec
fidivrl
imul
adc
pop
pop
mov
pusha
mov
fldcw
push
and
xchg
lods
pop
mov
xchg
jl
mov
ret
test
cmpsl
mov
inc
xor
xchg
inc
jae
cmp
fwait
sbb
add
jp
sbb
xor
push
and
push
pop
leave
inc
mov
out
out
cltd
add
std
push
mov
xor
movsb
add
xchg
add
xchg
mov
shrl
sbb
adc
jecxz
add
sar
dec
fistpl
add
add
mov
js
xchg
or
adc
lcall
and
or
outsb
push
scas
push
add
push
filds
pop
jg
lock
ret
adc
xchg
cltd
pop
xchg
inc
mov
jnp
adc
cmp
push
pop
out
rcll
inc
jmp
xor
add
adc
shll
fnsave
cltd
cmp
jo
insb
mov
mov
jle
std
xlat
out
mov
fpatan
push
jmp
hlt
mov
les
cmp
pcmpgtw
xchg
cwtl
call
or
sbb
cmp
mov
inc
addl
insl
push
cmpsb
test
xchg
outsb
mov
jmp
cmp
ret
jmp
adcl
cs
fstpl
mov
mov
cmp
jbe
loop
dec
sbb
jge
in
ja
movsl
xchg
out
ficomps
jb
lock
stos
movsl
clc
in
inc
mov
or
xchg
mov
mov
cmp
mov
pop
cs
push
outsl
mov
sahf
xchg
and
cmp
test
add
js
shrb
lret
xchg
pop
pop
stos
outsb
inc
jecxz
mov
imul
pop
add
rcl
mov
jp
gs
sub
mov
sarl
inc
std
or
loopne
push
movsl
push
jmp
sub
adc
and
outsb
sbb
adc
repnz
loopne
inc
sbb
pop
cld
push
ljmp
enter
lock
cmp
das
sbb
xor
xor
int3
mov
adc
sbb
xor
in
stos
mov
sahf
jae
pop
sub
push
jmp
and
xchg
fldenv
cmovno
and
nop
roll
jo
popa
mov
push
outsb
test
push
xchg
pop
xchg
and
xchg
jle
fisttpl
mov
add
in
pop
or
arpl
and
insb
add
shl
jae
inc
pop
mov
sub
sbb
or
outsl
insl
cs
sub
addl
lret
mov
test
ja
add
scas
xor
lea
lods
push
mov
nop
pop
fcom
mov
in
jnp
lods
jns
sbb
ss
dec
push
sbb
xor
mov
inc
mov
clc
into
and
test
cmp
ss
outsb
jmp
push
pusha
shll
adc
mov
adc
mov
aas
icebp
sbb
inc
cmp
call
pushf
out
ret
popa
cs
shl
fwait
push
andl
push
fnstcw
loope
aas
jnp
test
jg
pop
int3
and
xor
std
sub
idivl
pop
pop
pcmpgtw
jnp
lret
jb
dec
out
mov
enter
push
pop
pop
adc
shr
cmp
insl
xor
gs
sar
movsl
cs
jg
bound
pop
pop
sub
icebp
xchg
loope
jp
jbe
rcll
push
mov
mov
push
sbb
cltd
xlat
cmp
ja
fstl
mov
sub
mov
inc
sub
fistpll
icebp
ds
mov
fcmovnb
xchg
push
fadds
adc
jae
or
cmp
pop
and
lcall
cmp
aam
je
xor
jmp
rcr
rcrb
mov
inc
pop
jp
cmp
pop
std
sbb
cs
jne
xchg
and
xor
sub
ja
je
in
clc
add
and
jo
or
inc
mov
cwtl
insl
push
lods
add
imul
shll
dec
mov
mov
stos
nop
xchg
mov
sbb
movsl
push
jne
ret
enter
sub
mov
mov
jno
test
cmc
dec
dec
mov
fwait
ror
arpl
popa
inc
insl
jge
sbb
fisubs
testl
push
mov
scas
sub
stos
pop
push
adc
push
mov
mov
mov
int
add
xor
xlat
pushf
dec
push
aas
dec
mov
inc
push
sti
stos
pop
add
push
sbb
ret
push
pop
mov
outsl
cli
movsl
movsl
loop
and
fs
lods
es
jl
loopne
ret
addl
dec
xchg
insl
xchg
mov
out
mov
cmp
xor
jecxz
xchg
aaa
shlb
cmp
adc
les
xchg
imul
cmp
shlb
add
sub
sbb
fimull
xlat
cwtl
xchg
jb
inc
inc
inc
dec
jle
jo
out
xchg
nop
fildl
filds
mov
inc
add
loope
xchg
adc
mov
lcall
xchg
jl
icebp
xor
movsb
lods
dec
xlat
jno
adc
das
faddl
add
cmp
sbb
loop
je
mov
fwait
js
rclb
mov
push
loop
mov
stc
int3
sti
mov
lds
jg
xor
push
movsb
push
shrl
mov
movsl
sbb
arpl
fistpl
push
and
call
sub
les
adc
out
xchg
sahf
or
jl
rorl
inc
push
push
fmuls
arpl
mov
mov
movsl
dec
aad
aad
popa
movsl
adc
insb
loopne
adc
cmp
and
cs
divl
add
lcall
scas
arpl
data16
gs
out
cmp
sbb
jl
or
outsb
push
push
out
mov
mov
repz
movsb
jbe
mov
out
repnz
xchg
mov
mov
nop
jecxz
in
jno
aaa
fdivrp
adcb
dec
add
xor
lock
mov
sub
add
and
lock
xor
out
loope
sti
mov
pop
fildll
and
xchg
cmp
mov
push
stos
push
fdivl
dec
adc
add
fistps
mov
popf
sub
repz
and
movsl
roll
mov
loope
lods
idivl
inc
sub
ljmp
dec
mov
and
pop
mov
bound
cld
stc
jl
add
mov
add
jmp
fnstsw
mov
js
pop
or
xor
xor
dec
vhsubps
lea
pushf
fbld
aad
js
mov
sub
dec
jnp
addr16
push
cmp
imul
subb
sub
neg
divb
or
fadd
sub
dec
mov
add
xchg
arpl
insl
bound
mov
loopne
xorb
sarl
ljmp
shll
out
mov
lcall
inc
mov
addr16
jl
xchg
or
sub
dec
push
scas
push
test
cs
out
out
push
xchg
cmp
add
cmpsb
adc
mov
aas
dec
lcall
xchg
out
jle
pop
mov
pop
leave
inc
add
fmull
lahf
mov
es
dec
fisttpl
shll
or
push
stc
jbe
fisttpl
cmp
hlt
cmpsl
mov
mov
jo
cmp
adc
lock
outsb
jle
dec
cwtl
cmp
cmp
push
mov
movsb
mov
out
add
adc
inc
xchg
clc
out
cli
cmpb
aaa
inc
scas
xchg
cmc
and
lcall
into
add
add
and
cmpsb
scas
dec
std
mov
inc
push
dec
inc
fdivrs
outsb
cld
jge
mov
xchg
push
decb
arpl
out
pop
push
add
sbb
cmpsb
lcall
test
xor
and
mov
repz
lock
inc
lahf
ret
shll
loope
add
daa
bnd
and
dec
mov
shll
dec
inc
or
inc
mov
pushf
movsb
shr
jge
adc
xor
xchg
lret
mov
js
adc
add
and
or
and
mov
adc
pusha
xchg
mov
sbb
movsl
sub
into
push
xchg
iret
jle
in
gs
lea
or
push
loop
nop
jl
out
add
lea
xor
int3
push
pushf
push
icebp
fisttpll
sbb
dec
test
sbb
or
push
shrb
mov
dec
adc
scas
pop
push
and
cmp
lahf
push
loope
sbb
pop
mov
cmp
fadds
push
cli
shll
mov
and
cmc
cmp
js
cmp
pop
jmp
xchg
xor
inc
or
jg
sbb
arpl
xor
in
decl
lds
subb
mov
add
fcompl
call
aaa
std
mov
cmp
imull
dec
jecxz
lea
mov
and
push
mov
xor
shl
xchg
repnz
mov
mov
adc
pop
and
mov
and
jle
and
mov
arpl
push
loope
mov
push
add
dec
xlat
call
mov
rolb
push
cld
fs
clc
xlat
popf
scas
xor
pop
mov
fmuls
jecxz
jbe
jp
inc
mov
and
in
adcb
roll
sbb
sbb
adc
jbe
mov
popa
clc
fsubs
xchg
roll
lret
jp
ret
rcrb
mov
jno
inc
adc
or
mov
shrb
outsl
insl
aaa
adc
push
ljmp
mov
push
mov
shrb
mov
scas
and
add
insb
sbb
outsb
mov
rcrl
cmp
fldenv
aaa
xchg
in
popa
mov
rorl
sub
ds
inc
cld
push
pop
dec
xchg
xchg
add
push
mov
idivb
mov
or
incl
fisttpll
sub
mov
sti
jle
bound
xchg
ret
mov
outsl
nop
and
ja
or
xchg
pop
cmpsb
sub
mov
dec
mov
dec
add
iret
loopne
out
into
call
fadds
icebp
add
cltd
push
andl
aaa
or
jb
fcoml
dec
cltd
stos
push
int
xchg
adc
les
sti
dec
test
inc
ret
seto
or
inc
jne
push
jns
fcmovnu
cmpsb
cmp
and
inc
das
jge
daa
dec
cmp
or
xchg
scas
mov
push
xchg
jmp
in
dec
lock
add
push
add
es
ffree
ret
xchg
xchg
push
cltd
sbb
xlat
jecxz
fists
xchg
ja
inc
vmovd
mov
inc
es
ficoml
xor
leave
adc
movsb
je
nop
push
push
jo
int
rorb
jns
outsb
out
stc
cmp
fimull
or
in
in
stos
mov
inc
push
cwtl
sbb
fisttps
mov
in
mov
fldl
push
loopne
push
sub
xor
cmpsl
orb
add
mov
fmuls
dec
subb
js
mov
mov
cli
into
pop
out
faddl
and
and
dec
aam
pop
lds
cmp
mov
stos
pop
lock
mov
xchg
mov
int
and
test
or
outsb
test
bound
call
js
js
xchg
and
sub
addl
lds
in
xlat
jnp
clc
xlat
imul
sub
xchg
fwait
mov
mov
mov
and
inc
cmp
mov
ds
imul
mov
in
and
lret
mov
jb
cli
mov
dec
popl
mov
lahf
aad
inc
gs
mov
aad
adc
or
ds
pop
xchg
xchg
and
dec
clc
aaa
lods
movsb
jmp
mov
loope
icebp
mov
sub
lods
xchg
lods
test
ret
mov
imul
pop
js
add
addr16
jge
imul
inc
sti
loopne
push
jo
notl
sbb
ljmp
xchg
xor
and
pop
pop
jmp
xchg
xor
rcll
push
xchg
arpl
mov
push
lret
sbb
aaa
mov
push
arpl
fmull
loopne
jle
fimuls
pop
push
out
mov
adc
xchg
mov
or
xor
test
pop
xchg
pop
jb
and
inc
pop
jb
or
xor
popf
testb
adc
pop
test
adc
push
call
add
test
mov
stos
dec
outsb
or
dec
les
sbb
hlt
xorl
lret
sti
pop
sub
cmp
lahf
imul
clc
xchg
and
std
div
imul
dec
mov
xor
sti
aaa
adc
rorb
cmp
mov
mov
sbb
xchg
roll
add
mov
mov
or
cmpsl
xchg
cmp
scas
pop
mov
jle
mov
adc
cmpsl
mov
jae
cmp
popf
add
mov
imul
nop
je
mov
notb
cld
sarl
nop
inc
xchg
pop
mov
sarb
bound
xor
push
sub
subl
cmp
add
sbbl
test
pop
mov
cmc
mov
sahf
jno
adc
les
nop
mov
xchg
or
out
aam
call
loop
fdiv
push
popa
and
xchg
loope
neg
pusha
fwait
sahf
ljmp
cmp
iret
mov
fistpll
lret
rolb
stos
dec
pop
outsb
loop
xor
pop
sub
inc
mov
rclb
lahf
mov
dec
mov
subb
xchg
subl
push
mov
push
ds
repnz
cmp
push
xchg
adc
daa
xchg
push
mov
sbb
out
mov
cmp
mov
fildll
jo
mov
orb
jmp
imul
ja
lret
stos
rorl
iret
jb
mov
add
je
and
jg
stos
mov
ljmp
and
xchg
jne
xor
mov
mov
dec
and
jmp
mov
rcrl
cs
rsqrtps
ret
icebp
stos
jecxz
inc
dec
adc
mov
sbbl
jnp
cmp
fsts
xorb
jo
out
arpl
hlt
sbb
sbb
lret
cwtl
subl
hlt
js
cmpsb
fistpll
add
xor
jmp
dec
push
data16
xchg
mov
aam
in
sar
or
and
or
cmp
pop
push
cs
fwait
dec
and
rcll
fisubrl
inc
filds
nop
test
xor
dec
jle
loope
ret
sarl
pusha
sbb
xchg
mov
cmp
rclb
imul
push
cmpl
inc
test
or
jle
cmc
out
movhps
ret
mov
pop
les
mov
aad
pop
mov
hlt
cmpsl
inc
and
sub
out
jecxz
decl
adc
out
jle
outsl
fnstsw
jge
arpl
int
jno
jmp
mov
push
sti
add
sbb
dec
mov
ljmp
mov
ret
jl
ret
mov
push
or
negl
rorl
mov
sbb
jbe
xor
insl
sbb
std
mov
push
fwait
jle
add
inc
jno
stc
sbb
sbb
rcr
loopne
push
push
cmp
mov
or
sub
xor
push
in
scas
adc
jae,pt
fwait
jnp
mov
mov
or
sub
imull
addr16
or
stc
loop
ds
into
xlat
mov
cmpsl
push
inc
stc
ret
cli
push
fstpl
ja
pop
inc
imull
dec
sbbl
nop
sti
in
out
sub
addb
sub
cltd
and
rcr
pop
pop
xchg
xchg
mov
mov
loope
inc
mov
sbb
xchg
ja
dec
loopne
jg
inc
dec
stos
rolb
js
lock
sbb
nop
mov
jne
ss
pop
mov
inc
push
std
mov
popa
mov
sbb
divl
lods
lods
xor
in
inc
stos
rorb
insl
adc
mov
jne
adc
jno
shrl
mov
mov
jmp
mov
test
push
mov
inc
or
out
cli
mov
pop
outsl
add
into
les
outsl
sbbl
std
mov
loope
fistpll
daa
inc
sub
jne
outsl
mov
call
add
cld
inc
jns
std
shll
mov
jl
or
push
mov
fiaddl
repnz
dec
test
add
push
mov
xchg
loop
aam
jge
repnz
add
mov
sbb
xchg
pop
cwtl
out
mov
push
std
test
daa
dec
fistpl
nop
mov
cli
das
popl
push
mov
js
mov
mov
xchg
mov
fadds
adc
cmp
jl
mov
fdivs
mov
push
aam
aas
mov
sti
jecxz
stc
add
sbb
sbbl
inc
xor
lret
sub
clc
mov
lea
jno
xchg
jno
mov
add
mov
cltd
lods
mov
icebp
pop
clc
fwait
outsb
mov
lods
sub
popa
inc
cmp
fiaddl
jb
fistps
call
loopne
mov
dec
mov
mov
inc
add
outsl
sub
call
ret
ja
sbb
jae
mov
ss
adc
pop
sub
test
fidivs
mov
mov
dec
sbb
lds
imul
aam
lods
scas
xor
repnz
mov
movsb
push
in
push
orl
inc
fcoml
jge
mov
adc
cmp
mov
inc
mov
shrl
push
test
mov
push
push
sbb
fcomp
push
sub
xchg
fnstsw
adc
popf
sbb
es
inc
aas
xchg
sub
cs
mov
dec
sub
scas
add
or
jbe
mov
sbb
arpl
shrl
ret
loop
add
mov
jne
add
pop
xor
or
mov
mov
cmp
js
add
and
imul
xor
mov
and
adc
scas
aad
fcompl
adc
iret
pop
insb
cmp
sbb
cmp
cli
dec
sub
enter
mov
mov
xor
push
push
adc
mov
addr16
adc
add
push
add
jmp
inc
add
mov
inc
pop
and
mov
scas
das
cmp
fisubl
or
jp
dec
pusha
ljmp
loope
test
dec
repz
xchg
nop
cmp
fwait
push
sub
pop
xor
jo
sbb
es
jae
sub
sarb
push
sbb
dec
pop
pop
mov
lret
add
mov
lock
adc
stos
xor
inc
cltd
xor
fistpl
lods
cltd
inc
ja
xchg
cmp
sub
dec
mov
cwtl
and
cwtl
mov
adc
add
cs
daa
lds
sub
das
cmp
mov
push
mov
mov
orb
outsl
xlat
es
mov
in
mov
stc
jl
jb
repnz
clc
mov
ds
push
mov
sti
sbb
pop
std
lock
add
cmp
dec
movsl
in
outsb
mov
cmpsb
sub
jl
mov
mov
cli
jmp
pop
scas
xchg
add
jl
shlb
fnstenv
cmp
add
roll
aaa
insb
push
dec
aas
push
ljmp
fimuls
xor
lret
adc
repz
xlat
inc
insl
xchg
jmp
add
iret
sub
and
mov
sub
daa
dec
addl
lret
add
mov
shlb
cwtl
test
pop
sub
fldcw
or
insb
cmc
arpl
pop
adc
dec
test
sub
test
insl
mov
mov
pop
and
int3
dec
popa
jle
cmpsb
cmpsb
ljmp
cmp
dec
jge
jle
mov
imul
aad
int
pop
xor
fdivr
mov
clc
mov
cmpb
roll
fcomip
hlt
adc
push
xor
sahf
test
cmp
fildl
sub
mov
hlt
fwait
es
call
inc
push
rclb
add
jg
icebp
mov
repz
jle
js
jnp
push
or
or
and
push
mov
fs
add
rclb
inc
xor
shll
or
nop
pop
xchg
pop
mov
loope
inc
jle
sub
add
out
xchg
and
in
cld
call
adc
movsl
xchg
jno
xchg
sbbb
sub
pop
mov
in
call
das
sub
call
push
popa
pop
imul
shl
in
mov
cmc
into
mov
mov
test
mov
and
and
mov
adcb
test
loope
jbe
or
stos
sbb
or
dec
in
cld
push
incb
inc
mov
add
cmp
es
fsubrp
mov
sub
pop
idiv
cs
clc
add
add
ret
cmpsb
xchg
popa
pop
fistl
push
test
mov
shll
jg
out
mov
fistpll
outsl
cwtl
in
test
std
or
or
jno
fstpl
adc
lea
js
scas
ss
xor
xchg
and
adc
loopne
mov
popa
jmp
mov
xchg
ss
call
shr
fidivl
dec
mov
inc
push
pop
das
xlat
loopne
incl
or
adc
jno
ret
xchg
sbb
pusha
xor
or
pop
inc
mov
fsub
pop
pop
movsl
std
pop
mov
jg
int3
fistl
test
cmp
add
lea
fimull
dec
xor
add
or
mov
cmp
sbb
push
aas
lods
fistpll
or
orb
sbbl
mov
mov
and
xor
mov
or
pop
jne
push
aad
rcrb
sbb
mov
gs
popf
push
lods
pop
test
andb
fidivrl
lea
xchg
mov
mov
push
or
daa
or
cmc
cltd
mov
sub
stos
das
out
jns
lret
sarl
das
inc
mul
mov
inc
inc
ljmp
mov
xor
outsb
mov
xchg
in
pop
inc
dec
iret
jns
pushf
jl
icebp
xchg
push
cwtl
dec
aam
push
dec
xlat
loopne
jnp
xchg
setl
xchg
jo
jo
fcomip
movsl
in
aas
or
xor
inc
test
loopne
test
push
cwtl
call
outsl
mov
lods
xchg
idiv
xchg
add
out
ret
insl
push
adc
jecxz
cmpb
lods
jg
imull
popa
fwait
sub
aad
adc
mov
and
fldt
jb
ss
andb
xchg
mov
push
mov
mov
mov
adc
lock
xchg
outsb
loop
jno
sbb
xchg
cli
aaa
adc
dec
aas
ret
movl
aad
jb
in
and
std
fwait
test
fcmovnbe
imul
pop
out
sub
jle
shlb
adc
repnz
jle
add
cs
and
mov
mov
xchg
xchg
and
sarb
xchg
sar
pop
in
xchg
mov
sub
inc
shll
loope
icebp
mov
mov
pop
nop
and
jno
adc
aaa
push
mov
jo
inc
jb
jnp
pop
mov
inc
sbb
or
mov
jle
scas
cwtl
mov
clc
pop
inc
nop
int
and
sbb
dec
pop
mov
add
mov
imul
push
fistpl
or
and
or
icebp
fistl
jg
pushf
mov
or
jo
add
and
pop
mov
push
fdivl
pusha
mov
out
mov
test
sbb
les
into
sbb
sbb
and
fwait
aad
add
hlt
mov
loop
cmp
adc
sub
into
hlt
dec
add
dec
jo
dec
push
or
je
insb
mov
mov
enter
es
loop
pusha
mov
daa
sbb
lods
lods
inc
adc
ljmp
add
mov
out
and
adc
nop
movsl
push
ljmp
pop
shlb
and
xchg
mov
decb
xor
lock
add
xchg
push
pop
mov
dec
jecxz
jle
idiv
mov
dec
sbb
fwait
pop
mov
mov
jb
jmp
bound
add
das
cmc
ljmp
cmp
inc
pop
js
inc
or
add
in
jle
adc
pop
enter
insb
jnp
sub
cmp
inc
pusha
mov
mov
and
or
add
pop
xlat
cmp
fcom
icebp
sbb
cmp
inc
inc
pop
mov
lock
enter
shll
mov
pop
dec
sub
jg
pop
mov
xor
inc
pop
test
pop
adc
mov
cltd
cli
stos
adc
dec
std
pusha
adcb
pop
into
dec
xchg
stos
ljmp
ret
ds
rclb
cmp
mov
out
push
adc
std
dec
or
cmp
adc
mov
mov
ja
dec
push
xor
dec
popa
lahf
ljmp
aaa
icebp
lahf
outsl
cmp
jnp
push
mov
sbb
mov
adc
aas
repnz
mov
xor
subl
frstor
xor
stc
dec
rcrb
sbb
dec
das
mov
mov
push
mov
inc
ror
popf
scas
or
in
xor
push
pusha
out
mov
sbb
mov
pop
scas
dec
dec
icebp
test
cmpsb
std
mov
lea
jnp
repz
mov
adc
xchg
andl
dec
fistpll
mov
rcr
dec
jno
and
fwait
push
jge
push
shrb
icebp
popf
mov
decb
repz
insb
and
or
leave
sbb
pop
in
aam
ds
loopne
decl
cmc
rol
pop
lret
ja
push
call
ds
xchg
out
pusha
xchg
xchg
mov
sub
sub
jecxz
fists
int
jno
adc
pop
movsl
aas
push
stos
cmp
shrl
lock
or
jae
cwtl
hlt
push
cmpsl
fisubrs
rcll
mov
mov
stos
hlt
shll
mov
jmp
xchg
jno
outsl
mov
stos
fdivp
jl
test
or
push
mov
sbb
mov
mov
mov
or
lods
jg
gs
out
subb
sub
cmc
outsb
dec
fadd
rclb
jecxz
ret
cli
scas
cmp
sbb
sbb
xchg
shll
dec
daa
call
push
roll
insl
pushf
paddq
jb
arpl
mov
hlt
xchg
xor
inc
fists
fucom
and
fstpl
sarb
xchg
jg
mov
xchg
roll
fsubp
ljmp
repz
dec
pusha
adc
xchg
subb
pop
outsl
outsl
sub
mov
arpl
scas
cltd
pop
in
rcll
push
pop
shlb
arpl
xor
pop
add
shll
xchg
and
mov
popa
inc
adc
test
jp
js
push
xchg
adc
push
enter
mov
dec
adc
aas
inc
add
pushl
xor
loopne
jp
jmp
stc
xor
adc
mov
adc
jl
cmpsl
or
mov
mov
rol
aas
cwtl
movsb
xchg
in
cmp
ds
ds
cmp
popf
fadds
xchg
cmp
out
imul
pop
inc
and
add
add
test
data16
nop
orl
push
adc
pop
xchg
sub
push
dec
cmpsb
mov
jg
aaa
test
xchg
jg
stc
add
jle
pop
jg
sti
negb
aaa
scas
xor
or
jecxz
add
adc
lret
imul
enter
aas
xchg
into
mov
test
sbb
adc
xchg
imul
out
push
xchg
inc
mov
jnp
incl
sbb
or
mov
fimuls
and
ljmp
xchg
div
jns
rorl
and
mov
mov
add
divl
jae
mov
cmp
mov
sbb
testb
das
pop
or
jle
dec
mov
rclb
test
daa
inc
fildl
dec
fisubs
test
inc
jecxz
es
into
jb
pop
or
push
push
fsubl
mov
js
push
adc
loope
xor
pop
jbe
outsl
add
xor
add
lret
gs
incl
out
xchg
add
dec
je
and
cmp
outsl
std
inc
xor
insb
fdivs
shrl
cltd
xor
out
hlt
stos
outsb
out
dec
test
fidivrs
adc
imul
or
fcoml
add
divl
je
rol
dec
xchg
xchg
outsb
lahf
adc
mov
push
lock
pop
insl
ja
mov
and
mov
dec
mov
rcll
dec
inc
aaa
sahf
fwait
mov
je
das
pop
inc
ss
push
mov
push
in
insl
movsl
or
les
inc
mov
mov
rcrl
or
dec
mov
das
icebp
pusha
add
mov
lahf
dec
insl
mov
cmp
pop
add
ficompl
sub
inc
pushf
stos
dec
sub
sub
dec
inc
cmp
inc
lock
dec
jo
cmp
test
mov
pop
imul
inc
arpl
push
popa
mov
mov
add
cmp
dec
mov
cpuid
or
xor
popf
push
inc
ficomps
adc
sub
call
dec
add
and
jae
jbe
shrb
push
add
mov
aad
mov
lods
popa
sti
ret
mov
inc
and
js
push
dec
mov
push
clc
or
enter
rol
xor
sbb
sub
orl
jbe
outsb
add
cs
push
aam
push
xor
pop
adc
fisttpl
xlat
or
mov
pop
mov
clc
mov
repz
nop
pop
stos
jne
cmpb
jne
cmpsl
push
mov
je
repz
mov
das
rorb
xor
jns
mov
mov
cmp
sub
mov
push
add
mov
jno
dec
push
mov
pushf
push
sahf
pop
ds
pop
jb
and
lret
movsb
stos
fsub
sbb
inc
push
mov
cmp
cmovae
and
cli
sbb
lds
add
dec
pop
add
aam
mov
sbb
faddl
jge
sub
ret
fnstcw
sub
out
test
ljmp
iret
ja
ret
pop
add
ds
in
push
jne
inc
ljmp
mov
leave
push
ret
jmp
pop
in
rclb
call
lcall
add
cmp
inc
inc
imull
and
add
lret
and
fidivrs
addr16
jecxz
pop
xorb
aas
pop
fadd
outsl
arpl
fistl
cmp
add
sbb
into
test
xchg
jge
insb
sbb
mov
pop
sbb
out
mov
pop
out
mov
int
xor
aas
jle
fnstcw
pusha
push
mov
cmc
inc
pop
lds
inc
ret
fistps
and
call
sbb
sti
push
or
addr16
push
lcall
lds
lock
fucom
adc
sbbb
or
decl
cli
sub
lock
lods
xor
test
jmp
pop
sahf
in
dec
lock
insb
out
mov
jnp
mov
cmp
mov
pop
pop
dec
fstl
and
jecxz
icebp
adc
ljmp
adc
fiaddl
std
push
mov
sub
sbb
aam
lcall
push
or
xchg
mov
cwtl
pusha
jb
addl
cwtl
bound
ds
push
repz
loope
scas
and
sbb
cmp
xor
fs
stos
lcall
in
xchg
outsl
dec
sbb
in
hlt
jle
andw
xor
nop
decb
add
aas
jmp
or
fmull
insb
fcompl
std
test
adc
loopne
das
inc
adc
leave
dec
push
mov
add
testl
mov
mov
shrb
xor
inc
inc
loop
sbb
sub
push
rcrl
adc
aaa
les
mov
dec
mov
inc
add
ss
cld
hlt
mov
stos
mov
ds
xor
pop
lret
cmc
cs
mov
cltd
pusha
loope
adc
pop
jns
xchg
testl
lock
lahf
icebp
shll
adc
mov
cmp
cmp
into
push
aaa
mov
xchg
inc
pop
pop
jl
push
ret
push
ljmp
arpl
pop
jg
adc
cli
inc
lock
lods
bound
ja
or
push
adc
jbe
call
popa
adc
pop
aas
cmpsb
mov
cmp
inc
add
fbstp
sbb
arpl
mov
loope
aam
xlat
mov
or
repnz
pop
cmpb
loope
into
leave
or
pop
cmp
pop
push
lock
test
es
out
pop
xchg
sub
stc
loopne
aaa
cli
ljmp
shll
xorl
xor
rolb
add
out
inc
push
push
cmp
jns
mov
icebp
push
dec
aaa
popf
fiaddl
outsb
sbbl
and
inc
inc
fs
pop
push
mov
out
mov
rorb
shll
clc
mov
inc
std
sbb
mov
mov
jge
subb
fdivrl
int3
push
shrl
rorb
outsb
pop
push
xchg
shrb
xchg
xchg
inc
cli
fcmovnbe
mov
and
ds
adc
sbb
xchg
test
leave
enter
cs
sbb
or
loope
roll
or
pop
push
ret
aaa
adc
scas
cmp
negb
into
inc
sub
jle
mov
fwait
imul
pop
hlt
or
mov
hlt
in
add
xor
sti
aad
mov
or
lods
pop
xor
cmp
adc
add
loop
mov
or
inc
cmc
add
cmpsl
adc
add
dec
jl
add
aad
shr
pop
stc
shlb
adc
sbb
pop
or
loope
inc
jl
imul
bound
mov
add
xchg
mov
sbb
sub
insb
sub
out
inc
adc
lock
fnsave
outsb
xchg
or
into
dec
dec
xchg
push
testl
clc
sbb
push
jbe
movsl
sbbb
mov
dec
jne
aas
jg
outsb
jg
stos
sub
dec
or
inc
inc
daa
in
dec
lock
xchg
outsb
shll
sti
scas
subps
ljmp
and
inc
clc
mov
call
mov
out
lock
fsubr
sbb
clc
adc
or
insb
das
mov
iret
aaa
sbb
fnsave
dec
or
adc
out
push
mov
mov
jge
pusha
pop
mov
sti
mov
fsubrs
outsl
sub
push
movsl
cmp
cmpb
pop
adc
outsl
add
insl
daa
movsb
add
xchg
out
mov
hlt
in
and
jmp
fisttps
adcl
push
xlat
jae
inc
dec
xchg
fisttpl
das
mov
adc
mov
mov
inc
cli
inc
adc
mov
loope
mov
cltd
ja
out
pop
lret
shll
add
jbe
scas
xchg
dec
mov
xor
mov
mov
fwait
pop
mov
pop
sub
out
xor
pop
mov
xchg
add
inc
outsb
aad
or
pusha
mov
dec
aam
and
pusha
jecxz
fwait
loop
sub
lock
icebp
mov
and
fnsave
faddl
adc
test
xchg
lret
add
dec
add
and
fnstsw
push
mov
or
sbb
push
std
jbe
mov
cltd
or
test
pop
insl
inc
xchg
and
push
test
inc
lods
jnp
and
xor
sti
loop
mov
xchg
add
leave
mov
mov
aas
cld
scas
push
fsubrl
mov
sar
xchg
and
insb
or
mov
cmp
mov
fldl
dec
ret
xchg
push
mov
outsl
cli
and
pop
push
mov
mov
and
insb
cmp
mov
fistps
jg
or
xchg
jmp
rcll
xor
mov
rcr
mov
iret
adc
adc
mov
pop
bound
push
xchg
arpl
mov
mov
push
in
lea
dec
xlat
out
loopne
jnp
sbb
lcall
inc
hlt
add
mov
push
cmpsl
pop
clc
jg
jle
and
mov
pusha
nop
test
pop
xor
les
outsl
mov
jnp
psubusw
std
aaa
jno
aaa
mov
shl
jae
nop
inc
mov
pop
cwtl
push
xor
fidivs
push
data16
mov
xor
mov
lods
lahf
adc
mov
out
orl
out
mov
aaa
push
mov
adcl
jg
mov
xchg
cs
repz
leave
sahf
or
inc
cld
scas
xlat
add
leave
inc
and
push
jg
lds
leave
xor
les
ret
test
sub
mov
or
ds
fcmovnb
inc
adc
or
inc
lret
mov
mov
dec
cwtl
fstl
push
and
cmc
or
mov
mov
dec
sahf
incb
inc
fcomp
in
movsl
sbb
fistpll
sub
inc
inc
or
fldl
aaa
push
xchg
jp
push
pushf
arpl
pusha
mov
stos
lods
add
xchg
inc
xchg
lahf
sub
jns
inc
cmc
push
cmp
jno
test
cltd
xchg
mov
jg
cmp
jns
rcrb
jmp
out
sub
push
sub
add
push
adc
or
or
out
test
movsb
pop
cmp
sbb
jnp
cmp
inc
mov
push
pop
xor
cmpl
mov
jl
scas
xchg
lock
rol
add
int
icebp
or
fcom
pshufw
std
or
adc
sub
or
out
mov
ret
or
xchg
fwait
cli
mov
rcr
rclb
add
mov
pusha
subl
xchg
hlt
mov
adcb
cmp
push
call
mov
mov
xchg
shl
enter
loopne
andb
inc
hlt
cwtl
fisttps
push
jmp
jl
push
ds
ret
cmp
test
push
lods
adc
adc
xor
dec
daa
outsb
sub
mov
sahf
ret
sbb
aam
cmpl
push
jo
inc
je,pt
ret
jl
lods
int
pop
aam
cmp
outsl
cmp
jae
clc
repz
lcall
js,pt
stos
iret
pop
insb
je
inc
sti
jb
daa
jecxz
testl
cmp
clc
cmpb
adc
test
jecxz
mov
movsb
in
je
inc
xlat
movb
inc
pop
test
mov
lods
cmp
negl
in
push
ds
sbb
cmp
sbb
cwtl
dec
push
jl
pop
ror
sbb
add
add
stos
add
push
xor
pop
hlt
sbb
in
add
pop
scas
cmc
fidivrl
xor
sub
lret
xchg
jge
push
dec
jecxz
inc
addb
dec
cmp
adc
mov
mov
loop
nop
inc
mov
add
mov
fiadds
xchg
jno
add
push
leave
inc
cld
dec
movsl
clc
adc
cs
xlat
out
fiaddl
lock
add
sbb
xor
arpl
sub
mov
ja
push
pusha
mov
ss
sub
andb
in
cs
pop
pop
movsl
in
pop
arpl
or
decl
cli
icebp
xchg
ja
out
out
add
dec
std
pop
inc
jmp
in
repz
jnp
cmp
xor
mov
lcall
mov
xchg
popa
push
pop
xchg
mov
insl
push
adc
push
sbb
and
add
xchg
loope
ljmp
pop
mov
dec
adc
icebp
std
fists
movsb
push
cs
cli
jb
nop
jbe
cmpsw
pushf
xchg
pop
add
adc
addr16
aaa
dec
ljmp
negl
lock
jo
and
pop
test
dec
test
out
outsb
inc
mov
fisttps
cld
in
lods
xor
scas
inc
cmp
inc
adc
xor
jo
mov
sbb
cltd
sub
pusha
mov
aas
push
adc
mov
and
lret
push
jecxz
int
sbb
ljmp
cld
outsl
pop
add
cwtl
pop
push
sbb
sub
or
xor
inc
xchg
es
mov
or
pushf
ret
and
jl
cmp
inc
xor
add
outsb
xor
outsb
push
test
mov
ret
jp
and
aam
dec
add
ret
lock
leave
ds
sti
ret
mov
push
or
test
xor
test
aaa
mov
mov
xchg
orb
test
push
mov
jae
insb
add
pop
pop
xchg
rclb
sti
lea
mov
or
cwtl
and
lock
fildl
mov
out
divl
mov
mov
inc
mov
xchg
mov
mov
test
xor
push
pop
cli
cmc
aas
nop
imulb
jb
mov
fwait
jbe
fstl
push
inc
aaa
das
mov
cmp
xor
cmpxchg
jl
and
nop
adc
or
sub
incl
and
ficomps
and
lock
inc
sahf
inc
sub
sub
ffreep
jbe
jmp
test
inc
insb
lods
adc
leave
inc
shlb
xor
push
test
out
pusha
sbb
adc
mov
jnp
int
aaa
outsb
bound
clc
loopne
pop
adc
notl
ds
jns
xor
jge
in
cwtl
shlb
push
jne
mov
pop
sbb
mov
loope
mov
dec
ficoms
lea
aaa
leave
adc
xchg
xor
pop
inc
in
stos
sbb
pop
das
sbb
and
out
repz
mov
fsubl
cmp
inc
insl
mov
fidivl
rorl
cmpsl
mov
call
adc
xchg
fistps
cmp
add
push
and
sbb
ja
mul
icebp
push
iret
mov
cmpsb
jb
xchg
out
push
sbb
xchg
out
mov
mov
cmpsb
fidivl
fistps
adcl
and
pop
mov
cmpsl
lods
fwait
sub
sti
arpl
inc
adc
pop
mov
lods
test
insb
test
or
xchg
out
mov
int3
add
in
and
or
add
fs
sbb
mov
adc
mov
mov
test
fisubrl
mov
mov
packssdw
sbbb
lahf
mov
push
pop
cld
pop
mov
cmpsb
inc
cmp
mov
fidivs
mov
add
push
xchg
jg
add
into
loope
repz
pop
fisubs
jle
insb
push
lret
nop
xchg
pushf
or
or
popa
jmp
push
xor
cmp
popf
jo
mov
popf
mov
test
xor
xchg
jecxz
jo
cli
mov
cmp
xchg
jl
and
add
add
push
fsubp
clc
dec
stos
and
out
xchg
lods
lret
adc
pop
pop
and
add
scas
add
or
push
jbe
cmpsb
lgdtl
test
loop
outsl
pop
out
sub
push
sub
hlt
push
out
nop
stc
aaa
jne
cmp
sbb
out
outsb
and
pop
ljmp
fs
push
adc
lds
pop
xchg
decl
jle
imul
shl
pop
fadds
jp
out
jle
cmp
mov
imul
das
subl
pop
in
mov
and
push
std
xchg
loope
push
adc
scas
clc
jbe
or
fcomi
inc
lret
fwait
adc
and
jg
insl
cmpsl
and
pmullw
ss
pop
lahf
adc
hlt
xchg
ficoms
in
or
add
mov
lods
jecxz
jno
xchg
cmp
xorl
add
stos
sbb
push
push
adc
ret
adc
adc
pop
in
cld
outsl
pop
mov
ljmp
fimull
mov
std
cmp
out
add
rcr
test
xrelease
mov
cmpl
movb
fcomi
sub
xor
and
mov
ret
aad
mov
adc
insb
dec
cmp
mov
lock
aam
or
stc
cmp
sbb
test
aam
pushf
ffree
sub
ss
or
rcrl
or
mov
adc
movsl
inc
xor
dec
call
jno
add
pop
test
push
decb
jg
mov
repnz
loop
repz
pushf
into
xorl
dec
call
call
fisttps
fistpll
dec
in
or
out
pop
popf
sub
pop
add
jle
or
add
cmp
lds
aam
push
add
imul
add
cmp
add
aas
ret
sbb
rorb
jge
test
inc
cmp
pop
ljmp
decl
ljmp
xchg
mov
ja
jns
cmp
call
and
insl
shlb
adc
xchg
aam
jne
mov
vhaddpd
or
adc
sbbb
add
xchg
test
sbb
mov
cld
cmc
or
fdiv
mov
addr16
cwtl
sbb
pop
xor
outsl
stos
je
fisttpl
or
push
push
in
jg
cli
sbb
or
pop
int
lds
das
xchg
xlat
jg
pushl
or
adc
pop
bound
jl
sub
jle
insl
inc
lcall
mov
ret
pop
idivl
pop
les
mov
inc
fstp
es
add
adc
mov
test
adc
add
push
je
pop
mov
in
xor
pop
insb
loopne
mov
push
ja
popa
fwait
das
mov
lds
movsb
scas
icebp
inc
call
lcall
push
rcrw
mov
mov
jae
cmovnp
sbb
bound
aas
push
jmp
xchg
outsb
push
mov
push
fdivrs
push
sbb
jp
sbb
adc
xlat
ljmp
lods
outsb
ret
mov
add
xor
out
or
dec
dec
push
ljmp
ljmp
jno
or
enter
popl
add
es
call
mov
rolb
adc
xchg
int3
icebp
pop
mov
sbb
test
sbb
push
xorl
sub
or
jbe
in
mov
js
aam
add
stos
fistps
mov
xchg
inc
je
arpl
loop
aam
iret
cwtl
mov
mov
stos
xchg
add
cmp
gs
mov
addb
sbbl
insl
jmp
and
pushf
dec
adc
icebp
fsts
sbb
dec
aaa
or
sub
movsl
scas
and
fwait
dec
pop
mov
mov
call
jo
test
mov
addr16
xor
mov
lea
pop
push
inc
mov
clc
add
mov
jmp
pop
comiss
sub
repz
dec
inc
mov
add
dec
in
lcall
mov
shlb
push
test
lret
jge
and
lahf
add
or
sbb
ss
jb
jecxz
movsb
je
and
mov
test
and
mov
dec
pop
inc
push
int3
fwait
das
lock
xchg
mov
push
movsl
xor
cmc
iret
mov
or
stos
loop
imul
or
jnp
mov
jb
outsb
inc
sbb
frstor
insb
das
pop
cli
aam
int
insl
pushl
ret
add
sbb
ret
das
xor
cli
add
inc
lahf
es
shll
add
push
dec
aam
arpl
test
lret
jns
loop
daa
fldt
shlb
fidivrl
lds
cmp
or
je
int3
adc
xchg
loop
push
and
add
mov
and
fndisi(8087
inc
push
lds
pop
adc
bound
ret
repnz
fstpt
fidivl
and
mov
mov
in
xor
jg
inc
jl
mov
pop
or
mov
inc
ja
mov
xchg
stos
test
js
mov
nop
aam
loope
pop
roll
cmp
aam
adc
adc
ds
xor
rolb
dec
std
stos
jno
aad
bound
outsl
pop
test
xchg
mov
xor
sub
aad
lods
out
ljmp
test
pusha
mov
test
mov
aaa
daa
fdivrl
xchg
arpl
push
add
clc
add
stos
mov
imul
add
pop
add
ljmp
sub
out
and
cmp
sbb
rcll
adc
and
js
aam
sub
sbb
mov
aas
mov
adc
testl
sub
insb
ss
push
in
aaa
jb
repnz
mov
popf
or
fdivr
lret
cwtl
dec
ficoms
psllw
jbe
inc
icebp
sti
andl
bound
shrl
pusha
movsb
data16
cmp
pop
xchg
mov
lds
testb
mov
pop
sub
pop
pop
movsl
test
xor
mov
fildl
test
loop
sbb
dec
and
fwait
xchg
push
dec
lods
adcl
fadds
dec
and
inc
cs
jge
add
sarb
int
jo
inc
pop
shlb
mov
rorl
scas
imul
mov
cmp
outsl
cld
gs
lock
mov
push
push
les
add
cmc
mov
push
cmp
pop
nop
add
adc
sub
aaa
inc
jle
and
adc
xchg
bound
xchg
call
dec
hlt
aam
imul
das
idivb
in
and
or
imul
xchg
lods
jg
inc
xor
add
push
in
test
lock
mov
pop
jne
dec
jp
xchg
jbe
mov
fisttps
inc
inc
mov
clc
mov
sbb
insl
xlat
pushf
adc
insb
in
xchg
sbb
push
adc
sbb
in
or
cmp
in
icebp
mov
mov
push
aam
pop
mov
and
push
fstpl
fcomps
rorl
inc
out
pusha
fcmovnb
movsl
pop
xor
inc
test
jle
pop
cmp
and
push
adc
aaa
sahf
mov
sub
lods
incb
sbb
div
mov
add
mov
aas
pop
gs
jp
inc
inc
mov
add
or
xor
and
adc
sbb
sbb
jecxz
shr
and
test
cmp
pop
pop
jbe
call
ret
nop
sbb
mov
pop
lret
and
pushf
iret
loope
jmp
and
cmp
xchg
enter
iret
aam
mov
test
and
ljmp
lret
push
cmp
lods
mov
ljmp
in
sbb
mov
cmpb
cmp
stos
cmp
aas
inc
adc
out
push
sub
dec
mov
inc
scas
hlt
fbstp
les
int
pop
and
mov
cmp
xlat
sahf
cli
stos
pop
loope
popf
fstpl
xchg
fsubl
in
or
insb
inc
std
mov
sub
mov
jns
es
add
test
dec
clc
push
adc
mov
cmp
addr16
fsub
fwait
jnp
insb
xor
add
mov
test
test
jbe
cli
int
inc
scas
mov
stos
xchg
jle
cmp
cld
dec
xchg
es
arpl
dec
xchg
nop
add
adc
fstpt
in
arpl
loope
xchg
ficoml
mov
sbb
cmpsl
dec
add
mov
and
xchg
fmuls
adc
imul
je
adc
mov
cmpsl
ljmp
sti
push
sbb
add
es
mov
cli
sbb
shl
incl
xchg
ret
shlb
cli
scas
rclb
ret
shrb
xor
sahf
aaa
sbb
lea
fs
les
call
gs
mov
outsl
in
push
mov
sbb
cmp
mov
cmp
cli
cmp
mov
fldt
js
and
cs
pop
mov
dec
xchg
test
les
das
js
mov
mov
icebp
notl
leave
les
sbbb
push
or
add
out
mov
fs
mov
sbb
icebp
test
ja
jmp
mov
je
fimull
mov
push
mov
push
add
jg
add
sub
cltd
inc
adc
loopne
nop
sbb
push
jle
adc
cmpb
push
orb
xlat
add
mov
jo
jno
mov
iret
mov
inc
adc
jmp
add
mov
inc
push
mov
and
into
mov
sub
mov
sbb
ljmp
ror
and
mov
mov
inc
push
clc
ret
push
addb
rcr
xchg
mov
movsl
int
shll
movq
push
xor
mov
adc
cmp
cli
outsb
out
nop
cmp
push
lret
lahf
shl
js
mov
jecxz
pop
xchg
pop
mov
inc
fcomip
sub
mov
js
pop
add
cwtl
test
scas
mov
pushf
lea
sub
dec
loopne
inc
push
movsb
push
and
ficoms
push
js
shr
lock
imul
pop
xor
cmp
scas
pop
dec
sub
ret
or
cmp
jle
cli
push
lods
pop
cwtl
or
ss
fsubl
in
adc
add
push
jne
cmp
and
add
pop
inc
adc
sahf
leave
shrl
push
and
ret
and
addr16
std
push
outsb
pop
sahf
or
inc
clc
push
inc
lods
in
jecxz
mov
jns
push
pop
repnz
test
and
enter
sub
mov
cld
xchg
adc
leave
lods
cs
sub
pop
outsl
mov
ficompl
lock
and
or
fsub
jbe
cmc
fwait
jnp
mov
mov
in
loop
or
cmp
sub
sti
jo
aaa
adc
adc
outsb
add
shlb
jg
adc
stos
fs
jno
mov
inc
insl
sti
push
insb
dec
ljmp
add
popa
mov
dec
mov
shlb
dec
imul
xor
dec
scas
lret
fs
mov
sbb
and
orl
data16
push
pop
in
mov
push
push
in
mov
mov
inc
popf
mov
push
mov
imul
loop
and
cwtl
aam
jno
adc
scas
cwtl
inc
cmp
add
pop
jo
rcrl
xchg
clc
jl
push
and
stos
dec
mov
lods
mov
das
data16
jnp
loopne
test
inc
push
jmp
and
js
push
mov
imul
out
mov
cmp
pop
xorl
mov
mov
subb
aaa
ja
or
aas
imul
mov
leave
xchg
cld
iret
rolb
push
sbb
jmp
into
sub
stc
rclb
out
mov
rcll
lods
xor
fsubr
insl
jmp
jge
and
push
adc
jg
les
pop
adc
iret
dec
rcrl
fwait
sarb
lods
jae
or
push
mov
loopne
aaa
leave
xor
test
xor
mov
lds
test
loopne
mov
mov
bound
mov
mov
adc
dec
insl
loopne
js
aas
inc
pop
mov
nop
cmp
mov
push
xchg
xor
jg
movsl
movsb
andl
xchg
xchg
or
push
lds
sub
mov
xlat
xchg
pushf
push
das
es
inc
push
xchg
push
sahf
jnp
aaa
mov
xchg
ss
popa
inc
pop
push
xor
arpl
xchg
inc
xor
dec
fstpl
fisttps
mov
popa
mov
dec
dec
sub
or
in
cmp
mov
sti
add
rcll
sub
mov
and
and
addl
push
jno
lock
lock
inc
sub
enter
sub
sbbb
xlat
add
mov
push
test
out
xor
inc
leave
inc
or
cmp
fists
xor
ljmp
mov
jo
lock
rcrl
pop
roll
stos
adc
jbe
rcl
adcb
cwtl
shlb
fiadds
out
or
shrb
dec
inc
movsl
aas
mov
out
pop
lahf
inc
mov
test
sbb
or
add
or
push
cmp
xchg
lods
pop
ret
dec
sub
xchg
pop
cmp
jo
inc
imull
mov
jg
in
rolb
cmp
jne
shlb
adc
adc
pusha
sub
jno
shll
pop
fmull
mov
pop
cmp
scas
cltd
insb
in
pop
mov
and
insl
les
mov
repnz
or
mov
jno
or
cltd
fistl
in
dec
fnstenv
xchg
shll
adc
pop
sub
insl
jle
inc
cld
loopne
push
lcall
lock
aad
sub
adc
popa
mov
push
roll
or
shl
cmp
pop
cmp
add
jno
imul
test
pop
xor
out
dec
repz
jmp
clc
add
sub
jecxz
sub
or
and
jmp
mov
mov
xor
fisttpl
push
jbe
cmp
mov
movsl
fildll
incl
daa
mov
pop
mov
jg
adc
negb
inc
lods
loopne
lahf
xor
pop
mov
push
push
aas
push
nop
in
insb
shll
fwait
inc
jecxz
xor
lret
imul
fwait
ljmp
in
and
mov
mov
insl
das
jmp
imul
repz
mov
hlt
mov
mov
mov
push
mov
or
ss
xor
fndisi(8087
mov
test
stos
call
add
xor
call
scas
xchg
ficoml
mov
loope
inc
push
mov
fdivs
in
hlt
dec
je
mov
leave
roll
xor
sub
mov
dec
jno
insl
lods
add
outsl
adc
add
pop
int
sahf
mov
bswap
ret
cltd
add
std
mov
outsl
pop
dec
xor
add
sub
mov
cli
mov
aas
into
dec
jg
sahf
movsb
xor
mov
lret
movsl
jmp
sbb
adc
push
cli
jecxz
call
sub
cs
fdivr
aad
testb
mov
push
loopne
jno
push
inc
rorb
aaa
stos
aam
insl
mov
inc
das
shr
pop
mov
xor
push
mov
mov
fisttps
xchg
xchg
pop
mov
stos
sbb
sbb
pop
add
paddsb
outsb
mov
daa
adc
hlt
push
jp
pop
pop
sbbb
dec
mov
pop
aaa
hlt
rep
mov
clc
outsl
lret
adc
push
and
inc
cwtl
adc
ja
je
sub
sub
das
hlt
idiv
imul
push
mov
aad
lahf
mov
xor
push
pop
mov
mov
rorl
les
js
push
xchg
pop
les
cltd
cs
call
loope
cmp
mov
addl
mov
stos
lret
call
out
ljmp
fldenv
shlb
or
filds
insl
xor
jge
or
push
sbb
mov
aas
inc
adc
and
out
add
aaa
shrl
cmp
fsubrs
and
addb
dec
jg
cli
sbb
scas
jge
adc
ljmp
add
das
outsl
aam
add
cli
sub
add
popf
fcmovbe
mov
ja
in
ljmp
repnz
add
mov
cmp
movsb
push
mov
movsl
in
push
sub
loope
or
dec
adc
mov
lret
mov
jmp
fldenv
mov
je
in
xor
lcall
out
xchg
add
adc
dec
lds
jle
add
adc
adc
hlt
jg
adcb
inc
aas
mov
test
loopne
add
test
pop
dec
add
ret
test
inc
andb
pop
pop
adc
rolb
push
mov
mov
shrl
pop
push
add
lods
mov
shll
jno
xchg
adc
cmp
gs
jne
pop
rcrb
and
aad
lock
lea
lock
cmp
pop
mov
xor
or
adc
push
clc
mov
cmc
dec
pop
mov
loope
ja
add
xlat
cmp
std
popf
js
ffreep
sbb
pop
adc
dec
nop
xchg
movsl
loop
mov
mov
xchg
ficomps
test
fwait
add
lods
sbb
or
jns
loop
jmp
ds
int3
push
leave
orl
insl
sti
sti
sub
test
orb
push
pop
mov
fdivs
insl
jg
aas
sub
leave
fistpll
sahf
push
mov
sub
imul
cmp
mov
push
mov
or
mov
adc
rcrb
pop
sbb
adc
ror
neg
mov
jnp
test
lods
mov
dec
les
enter
cs
sbb
scas
push
xchg
sbb
lcall
roll
hlt
lods
mov
mov
leave
insb
mov
mov
push
test
push
std
les
mov
nop
dec
les
sti
icebp
or
mov
xor
insb
call
rcrb
clc
and
add
pusha
dec
test
xor
leave
movsb
clc
sub
mov
pop
inc
scas
inc
xchg
push
lods
bound
cmpsl
and
jno
icebp
test
sub
sbb
and
push
push
pop
mov
sahf
sbb
js
mov
mov
or
push
cmp
enter
in
mov
pop
sub
stc
jbe
pop
cli
lcall
or
jae
mov
iret
xor
cli
ljmp
aas
cs
in
xor
pop
adc
mov
xor
pop
sub
mov
cltd
shrb
insl
xchg
push
fwait
xor
inc
jb
or
jbe
mov
cltd
cli
es
pop
jnp
mov
das
mov
mov
and
outsl
fdivl
push
mov
les
ror
sbb
outsb
cwtl
xchg
or
sub
lea
fimull
out
orb
dec
xchg
faddl
and
xor
xor
fsubr
clc
pop
sbb
adcl
fistpll
dec
sub
sub
rclb
icebp
fwait
inc
jle
sbb
jbe
push
test
movsb
sti
push
repz
cmc
lods
or
loope
popa
push
lahf
or
mov
xchg
mov
pop
xchg
cmp
scas
mov
nop
pop
das
in
mov
mov
lahf
outsb
out
adc
mov
inc
fldl
inc
mov
pushl
xchg
pop
repz
ds
add
inc
xor
inc
xlat
xor
mov
inc
mov
mov
add
inc
scas
data16
loope
adc
sub
mov
js
jg
aad
rcrl
das
adc
sbb
ljmp
push
push
add
loope
cmp
dec
mov
or
mov
xor
fstpl
out
sbbb
mov
xchg
in
sub
loopne
push
sub
scas
daa
mov
ja
bnd
mov
xor
inc
inc
mov
mov
mov
fs
adc
dec
shr
data16
mov
je
mov
adc
or
call
jbe
cmpsl
push
lods
sub
ss
arpl
fadds
insb
jns
out
nop
mov
add
das
add
xchg
or
lock
push
mov
cmp
xchg
dec
cmp
out
xor
in
push
xchg
fisubrs
fs
mov
js
jmp
nop
icebp
cmpsl
movsb
aas
hlt
cmp
testb
and
mov
fstl
mov
stc
fstpt
mov
nop
inc
jo
pause
mov
xchg
movsb
out
test
push
sbbb
mov
xor
dec
mov
cmp
push
inc
mov
mov
ret
pushl
xchg
stc
mov
dec
add
xor
mov
pusha
xchg
popf
mov
and
call
inc
lds
imul
sahf
sar
jecxz
stc
sub
add
mov
andb
icebp
lock
call
push
stos
addb
pop
fildll
aad
sti
sub
push
outsl
jb
test
rol
fcmovnbe
and
xchg
push
lods
xor
dec
das
inc
test
fnsave
insl
fadds
mov
cmp
pop
fs
mov
xor
outsl
adc
std
loope
fwait
lret
adc
insb
test
add
push
add
jle
incb
into
cmp
loopne
in
lret
mov
scas
and
or
stos
stos
mov
cltd
sti
sarl
mov
mov
add
gs
jbe
mov
adc
arpl
movb
dec
adc
jge
mov
and
cmpb
adc
in
xchg
mov
movsl
jo
scas
jecxz
rcr
daa
in
mov
loopne
in
movsb
lahf
call
rolb
xchg
sbb
inc
push
push
leave
pop
aad
leave
lea
push
adc
jb
cmp
es
pop
loop
add
divl
add
ss
inc
mov
xor
or
pushl
inc
fisttpl
xchg
xchg
out
stos
dec
shr
fs
add
nop
das
shll
clc
test
and
and
add
nop
loopne
dec
cmc
pop
gs
mov
mov
popa
or
call
inc
add
sub
in
or
sbb
icebp
adc
lea
pusha
push
adc
xor
rcll
int3
pop
push
cmp
or
test
jg
insl
je
addr16
inc
or
sub
pop
mov
and
xor
push
addr16
xorb
mov
les
or
xchg
mov
jl
std
das
adc
in
push
xchg
call
push
mov
leave
sbbl
jmp
mov
loope
orl
xor
out
int3
test
in
xchg
mov
adc
mov
mov
sub
cwtl
xor
cld
clc
sub
shll
or
mov
stos
mov
inc
subb
into
inc
mov
fwait
outsb
sub
jg
xor
rclb
mul
loop
sub
sbb
aas
in
int3
push
sub
mov
sbb
adc
jo
mov
jmp
out
push
int
and
push
ret
in
mov
add
call
push
int
jge
out
mov
push
daa
out
xchg
mov
call
and
or
aam
jae
fstl
das
sbb
insl
mov
ss
xor
jnp
cmpsb
imul
out
mov
cli
scas
ss
cmp
mov
fidivl
pop
ljmp
dec
sarl
flds
fistpll
fsubs
dec
cmp
js
les
add
mov
push
notl
repnz
adc
jae
adc
outsl
cld
mov
xor
into
jb
push
xchg
cmp
push
loop
loopne
jg
or
jne
nop
sub
mov
push
cmpsl
shlb
push
push
add
in
pop
mov
repnz
insl
fwait
adc
aam
fistps
pop
push
add
fwait
out
push
adc
ret
pop
stos
adc
jl
jg
fdivr
mov
mov
inc
lret
das
xlat
ss
repz
ss
inc
inc
std
pop
call
sub
subb
pop
fs
nop
add
sbb
dec
adc
dec
es
shrl
mov
add
fcoml
jno
test
hlt
in
push
movsb
and
mul
mov
pop
test
testb
cmp
call
lea
and
cmpsb
jo
popa
inc
fsubrs
lock
inc
cwtl
scas
scas
add
pushf
xor
pop
jns
ljmp
push
cltd
xchg
sub
jns
in
push
lea
pop
inc
mov
incl
rorb
mov
popa
cmp
jnp
adc
enter
ret
fiadds
std
push
decl
outsb
test
sbb
shrb
pop
mov
daa
jbe
rcll
mov
fsubs
sbb
cmpsl
out
pinsrw
adc
mov
mov
imul
add
adc
stos
sti
sbb
push
and
cld
xchg
jecxz
test
sbb
cmp
mov
data16
sub
int
cld
xchg
outsb
inc
mov
cmpsb
fdivp
sbb
mov
sar
pop
or
jecxz
es
xchg
and
fdivl
clc
xor
inc
push
inc
pop
cmc
nop
dec
pop
push
hlt
inc
jns
adc
jnp
in
and
mov
or
psubsw
subb
mov
xchg
iret
or
inc
rcl
xlat
push
ret
xlat
xor
andl
idiv
xchg
cmp
adc
insb
cld
or
inc
sbb
jbe
jno
adc
jns
cmp
aam
fwait
shrl
cmp
xchg
lret
idiv
jge
inc
outsl
xorb
add
ret
mov
push
fistpll
shrb
gs
dec
and
xchg
mov
pop
frstor
and
andl
jo
mov
in
or
jle
xchg
in
aas
inc
hlt
add
mov
lods
outsb
pushl
shrb
dec
add
fprem1
fdivr
int
sbb
clc
cmp
mov
inc
add
inc
push
cltd
dec
das
inc
inc
shl
xor
ss
ss
pushf
mov
add
mov
or
mov
xchg
pop
push
data16
and
stos
out
rclb
ljmp
sub
push
jle
clc
ja
push
outsl
or
in
mov
aam
mov
push
pop
cmp
ljmp
call
mul
push
mov
repz
xchg
xchg
lret
add
mov
je
mov
mov
xor
pop
mov
rorb
push
add
push
sbb
jmp
mov
es
pop
mov
test
pop
jmp
inc
or
sbb
js
mov
sbb
cmp
adc
aad
add
movb
cmp
xor
mov
or
pop
sub
pop
call
aas
aam
push
dec
xor
jg
mov
mov
dec
std
add
lahf
flds
xchg
dec
push
aaa
dec
add
arpl
faddl
adc
push
and
ds
mov
or
test
xor
dec
lds
mov
nop
sub
mov
cmp
je
mov
out
mov
scas
xchg
es
add
inc
lea
mov
imul
push
xor
mov
in
pop
or
or
push
dec
mov
xor
clc
mov
clc
xchg
pop
test
rorl
lea
std
outsl
xchg
shrl
fwait
int
dec
or
or
bound
popf
mov
push
add
inc
lcall
popf
ret
xchg
call
add
sub
out
clc
mov
cmp
xchg
sarb
dec
pop
pop
jl
mov
push
dec
and
xchg
loop
dec
jg
jmp
clc
das
jb
leave
jne
clc
xchg
add
pusha
sahf
mov
iret
ljmp
pop
add
scas
add
adc
inc
gs
xor
stos
inc
lea
rorl
ljmp
shlb
add
add
dec
xor
or
and
cmp
inc
add
lea
imul
sbb
lods
loop
cld
mov
jno
push
sbb
std
std
dec
icebp
jnp
mov
sahf
ret
pop
movsb
xchg
xchg
push
or
gs
fdivrl
adc
mov
cwtl
push
sbb
mov
mov
or
pop
mov
xor
enter
test
xchg
out
push
xlat
or
adc
arpl
xor
inc
std
out
push
or
adc
roll
and
cmpsb
sbb
mov
mov
rcr
adc
sub
ret
pop
jae
lds
adc
add
mov
insl
mov
scas
and
stos
mov
pop
mov
pop
xchg
pop
jmp
pop
add
movsl
scas
aaa
pusha
mov
jbe
lret
je
loop
inc
sub
leave
mov
jg
call
xchg
and
lret
push
ds
mov
fildll
rclb
xchg
pusha
xchg
jmp
adc
adc
xor
leave
jmp
aaa
mov
inc
sub
add
dec
push
lret
lods
icebp
sbb
dec
push
ljmp
mov
addr16
add
inc
xorl
jbe
adc
test
adc
mov
negb
pop
xor
xchg
cmp
mov
fbstp
lret
int
shll
pop
loope
xor
lds
test
inc
pop
mov
scas
cmpsb
mov
iret
add
loopne
add
or
xchg
int
ja
cmpsl
mov
jo
ret
sahf
adc
mov
add
mov
sub
xor
and
inc
jb
push
and
cmc
adc
pusha
inc
and
push
je
outsl
jmp
sbb
sub
add
and
mov
sbb
mov
pop
mov
xchg
push
mov
jp
push
je
aam
sub
int3
jns
iret
jns
js
jbe
jmp
cmp
xchg
cmp
jnp
mov
mov
popf
pop
jnp
stos
rcrl
pop
xchg
in
fadd
cmc
dec
fsubrl
out
jp
inc
add
sub
mov
dec
addps
aam
in
sub
jno
sbb
mov
pop
jge
jge
ja
mov
nop
xchg
push
sub
les
mov
mov
inc
scas
cmp
cwtl
iret
gs
add
and
adc
mov
xor
in
adc
movsb
pop
sbb
loopne
das
call
mov
sbb
or
cs
bound
icebp
mov
xchg
jge
xlat
and
pop
mov
inc
push
les
xchg
nop
dec
std
inc
lahf
mov
mov
xchg
scas
dec
jnp
cmc
jg
push
ljmp
pop
test
std
je
jecxz
mov
jg
inc
mov
jmp
cld
sbb
sahf
mov
mov
in
add
xor
jge
sahf
mov
push
ljmp
xor
mov
push
popa
mov
xchg
or
ss
sub
mov
pop
aaa
mov
push
stos
scas
jbe
fadds
sub
pusha
loopne
aas
in
mov
sub
fidivs
pop
ret
add
dec
cmp
leave
jo
jp
fistps
rorl
inc
xchg
mov
and
fsubr
mov
add
lahf
sub
int
push
fistpl
rorb
out
out
add
sahf
pop
mov
nop
sti
filds
nop
add
outsl
test
push
inc
stc
sbb
pop
pop
dec
adc
inc
bound
aas
stc
inc
push
and
xor
clc
loope
in
ret
sbb
aad
cmpsb
out
jecxz
or
mov
mov
mov
inc
mov
fimull
push
cmp
jg
mov
scas
xlat
adc
sub
pop
pop
cmp
shr
pop
jg
test
outsb
pusha
and
sbbb
fsubrs
lahf
inc
lret
pop
dec
loope
scas
inc
outsl
or
mov
sahf
push
je
jo
loopne
add
and
movsl
sbbl
mov
mov
sti
arpl
jge
dec
add
jno
push
sbb
mov
test
ss
or
xchg
call
pop
jns
jg
xchg
inc
pop
inc
iret
in
pushl
xor
enter
ret
std
imul
jmp
xor
sub
aam
insb
mov
inc
mov
rolb
push
scas
cmp
inc
icebp
pop
das
mov
mov
cmpb
mov
and
add
addr16
in
sbb
xor
inc
jo
cld
push
push
mov
push
pop
movsb
in
xchg
std
dec
popa
fisttpl
adcl
repz
sub
adc
lods
xchg
mov
pop
shr
ljmp
push
dec
sub
pop
movsb
bound
mov
xchg
or
das
les
pop
andl
or
cmpsl
mov
mov
xchg
mov
mov
shll
cltd
lret
sbb
sti
popa
jns
adc
jne
mov
cmp
std
fcoml
insl
mov
push
fisubrs
sub
call
fildll
pop
jl
cmp
inc
push
or
push
pop
jbe
mov
pop
jmp
sbb
adc
add
dec
inc
push
pop
xor
movsb
dec
dec
out
in
dec
test
mov
inc
pop
push
mov
sbb
sbb
inc
cmp
mov
int3
clc
or
mov
xchg
sbb
pop
sahf
dec
xor
mov
push
and
push
outsb
dec
scas
fcomps
sbb
mov
fildll
imul
jge
xchg
jle
push
lods
mov
xchg
sbb
aas
pop
jae
test
mov
dec
les
xchg
dec
fistpll
sub
pop
cmc
push
std
out
lret
pop
push
test
cmp
outsl
icebp
es
test
xchg
je
lds
mov
add
dec
xchg
nop
das
jne
dec
xchg
stos
decl
add
adc
cli
ret
repz
or
outsl
lds
aas
incl
inc
sbb
hlt
fistpl
or
mov
sbb
out
jnp
lds
rclb
mov
inc
ret
pop
or
sbb
mov
faddp
xchg
sbb
int
in
jne
xchg
pop
mov
lock
shrb
js
sbb
pop
xchg
and
sbb
mov
outsb
and
mov
lock
push
mov
lahf
lods
mov
pop
push
jl
inc
das
cld
jg
test
or
pop
and
enter
in
mov
add
fstpt
push
fucom
add
and
into
imul
mov
mov
jge
cli
out
pop
pop
pop
adc
mov
js
inc
cmp
es
or
sahf
repnz
xchg
je
pop
fcomps
jbe
gs
adc
in
push
ds
and
xor
or
add
cwtl
data16
cmp
decl
xchg
lret
gs
lods
jb
notb
ret
in
push
neg
lock
sti
inc
mov
je
jl
leave
mov
clc
push
enter
inc
mov
cld
inc
gs
pusha
shrb
jmp
xchg
inc
lods
jl
cmp
mov
ja
pop
add
push
and
add
mov
mov
in
loop
sub
bound
mov
loop
std
fbstp
or
popa
stos
in
add
mov
add
jp
aaa
lock
and
cmp
mov
fsubs
ja
inc
xor
aad
and
loope
shll
adc
fistl
das
sbbb
stc
mov
add
hlt
cli
xchg
ret
arpl
or
jecxz
mov
loop
roll
and
into
test
push
jl
sbb
pop
inc
pop
ljmp
mov
cmp
stc
outsl
add
pop
subb
jecxz
sub
sbb
push
mov
std
lods
jl
loopne
ret
setg
push
dec
and
stos
dec
cmc
lock
mov
and
mov
rclb
cwtl
xchg
jge
xor
pop
test
nop
mov
push
sti
rol
sbb
inc
ss
mov
loop
insl
mov
sub
add
dec
push
push
jnp
aad
shll
dec
fdivl
mov
add
ja
mov
inc
pop
pop
hlt
std
mov
or
gs
outsl
fnsave
in
xor
or
mov
mov
aam
clc
and
lret
stos
push
sbb
in
je
pop
fcomip
fsubs
rclb
lock
jp
pop
jg
lcall
inc
xor
test
ss
mov
jno
sbb
xchg
jae
stc
adc
pop
mov
out
rdpmc
mov
ljmp
adc
or
loope
mov
bound
sub
and
jle
mov
jle
cmp
mov
es
cmc
sbb
dec
pop
xchg
xor
cmpsb
push
jge
rorl
push
test
sub
int3
daa
sub
and
xlat
aad
cmc
pop
rolb
cmp
sahf
in
stos
mov
or
adc
jne
aaa
push
pop
push
aad
dec
repz
or
aaa
insb
and
nop
jno
lock
pop
lds
nop
pop
mov
or
xchg
mov
shll
jmp
cmpl
out
cmpsb
jp
cmc
add
sbb
test
xorl
mov
inc
mov
ret
jmp
adc
pop
adc
jbe
test
mov
push
out
pop
js
push
jge
mov
or
xchg
jle
stc
add
dec
shrb
push
sub
loop
cmp
cmpl
xor
lds
ja
test
inc
std
aas
fidivrs
imul
adc
and
xchg
fldt
mov
and
add
inc
xchg
xor
adc
and
mov
int3
mov
adc
decl
aad
xchg
mov
test
ss
sbb
out
outsl
vcmpsd
out
imul
pop
cltd
repz
fwait
add
inc
cmp
mov
arpl
fistl
dec
outsl
push
loopne
cmp
mov
into
lds
lods
lock
loop
xor
stos
out
cmp
push
cmp
mov
mov
movsl
push
mov
shl
stos
jbe
jecxz
test
sub
in
ret
les
ljmp
lds
daa
jmp
sub
mov
cmp
mov
mov
lahf
xchg
mov
cmp
xor
push
shr
sti
pop
mov
idiv
aaa
loopne
jle
push
lock
pop
jo
jmp
stos
jno
es
xor
pop
ja
cs
mov
jecxz
adc
mov
idivl
out
ds
ret
movl
inc
leave
test
sub
inc
std
sbb
mov
aam
jno
jns
mov
jmp
push
jns
mov
lods
outsl
adc
and
outsl
clc
or
mov
sbb
mov
adc
push
mov
jmp
in
mov
test
fwait
rclb
movsb
rcl
js
andnps
mov
adc
mov
mov
adcb
sub
pop
pop
aaa
mov
add
lods
out
sbb
loopne
outsl
and
push
push
testl
enter
gs
cltd
push
sbb
jge
lret
nop
sub
cmp
mov
xchg
mov
test
adc
jno
jmp
jecxz
sbb
stos
sub
xor
test
dec
sbb
imul
cld
mov
out
pop
add
pop
add
fdivrs
outsl
push
or
shll
into
fwait
mov
add
push
sbb
sar
add
out
sub
cmp
mov
orl
xchg
test
inc
cld
mov
pop
loope
mov
movl
movsl
std
outsl
test
or
fmul
enter
push
in
and
mulb
push
push
lret
xor
fisttps
imul
lods
cltd
mov
fwait
out
icebp
test
and
call
pop
pop
fildll
fstl
sahf
test
mov
int3
add
stos
lcall
jnp
inc
data16
lds
jbe
jl
dec
repnz
adc
hlt
incb
cmpsb
cmp
pop
dec
push
push
mov
push
bound
je
inc
cmp
stos
aad
cltd
and
fistpl
insb
sub
jl
sti
iret
in
push
in
or
clc
mov
imul
incl
push
sti
icebp
jne
dec
test
cld
jg
movsl
ja
adc
pusha
leave
es
xchg
jo
imul
lret
jnp,pn
lds
xchg
dec
xor
adc
fbstp
in
lret
mov
fs
sub
ficomps
scas
gs
leave
pushw
inc
xchg
shll
mov
jl
out
push
and
imul
ss
inc
adc
mov
decb
adcl
mov
andl
pop
lds
mov
xor
cmpsb
popf
mov
mov
push
mov
fs
inc
pop
ljmp
cs
dec
mov
pop
pop
pop
fdivp
cmp
xor
xor
and
decl
aad
jmp
xchg
xchg
lock
je
cmp
gs
mov
xchg
lret
repnz
mov
add
push
out
xor
pop
iret
dec
mov
nop
mov
jecxz
or
ja
mov
out
call
pusha
in
sbb
add
cmp
push
out
add
add
pop
xorb
arpl
popf
mov
add
loope
aas
out
add
sbb
push
mov
mov
pop
cld
out
aam
fildll
jne
fists
inc
call
arpl
negb
ret
les
in
repnz
pop
add
adc
loopne
out
xor
xor
push
aad
test
mov
mov
adc
jno
ljmp
fistps
mov
cs
mov
roll
lahf
push
jg
nop
push
nop
ja
lea
hlt
pop
daa
adc
lods
outsl
lret
hlt
sti
or
dec
or
pop
mov
bound
out
enter
call
stos
sbb
cld
out
out
fisubrs
push
fmul
sub
fldl
or
jg
sub
sub
cltd
stos
and
pop
sahf
xchg
and
add
mov
add
outsl
xchg
mov
xchg
mov
dec
cwtl
or
inc
shll
push
cld
std
inc
lcall
add
sbb
mov
cld
rcll
mov
mov
addr16
cmp
arpl
xlat
mov
sbb
mov
adc
sub
mov
cmp
dec
inc
sub
dec
lock
cs
arpl
cmp
cvtps2pd
xchg
cs
punpckhwd
rcr
mov
mov
cmp
das
adc
fs
cmp
imul
lods
or
pop
iret
xor
cltd
jp
das
lock
or
out
add
mov
and
mov
arpl
lods
jg
push
pop
aam
out
in
or
mov
subl
sub
mov
ud0
fucomi
rcll
aas
xchg
ljmp
outsl
mov
movsl
test
clc
xor
movsl
int
fsubl
imul
dec
cs
fdivl
js
rolb
push
jo
mov
push
push
xchg
cs
fsubs
fsub
cmpsl
clc
jg
fidivrs
lret
test
jo
mov
test
outsl
fists
sbb
mov
push
mov
fdivrs
loop
inc
ret
xchg
jnp
loopne
pop
pop
imul
adc
rcr
clc
jmp
cmpb
jo
inc
outsl
mov
das
lods
push
or
icebp
xor
or
sti
mov
fidivrl
lcall
pop
aaa
fdivr
sbb
add
pop
adc
sbb
xor
popa
pop
rsm
out
aam
lds
daa
inc
in
call
fldt
push
gs
aaa
push
fcoml
push
or
int
out
movsl
lods
popa
loop
ret
inc
sub
aas
mov
inc
loopne
repnz
mov
mov
cltd
lods
mov
hlt
repnz
scas
inc
sbb
mov
dec
mov
movsl
mov
sub
inc
or
aaa
add
jno
bswap
fsts
push
jne
ffreep
sbb
inc
and
mov
or
lcall
in
mov
dec
loopne
mov
cld
pop
insl
incl
add
andb
and
pop
imul
aad
cmc
repz
cmp
enter
fcompl
sub
out
fidivl
jo
inc
cld
mov
data16
sub
cmpsl
cmp
mov
push
mov
repz
mov
inc
sub
mov
mov
divl
xor
or
fiadds
call
ss
mov
push
add
lret
jle
mov
pop
hlt
cmpsl
lcall
mov
fdivr
popl
cmp
adc
fiaddl
insb
or
call
lock
in
dec
fstl
push
mov
mov
mov
or
dec
outsb
insb
inc
insl
mov
and
mov
or
icebp
jg
fidivrs
mov
call
daa
das
push
aad
fists
sbb
aaa
sbb
mov
add
ror
mov
inc
mov
adc
decb
addr16
xor
inc
in
out
ret
push
insb
push
mov
jno
xchg
push
cmp
ss
mov
or
sbb
xchg
push
adc
inc
push
jp
push
cld
dec
sbb
in
dec
test
aaa
lcall
jns
arpl
arpl
cwtl
xor
mov
fmuls
stos
inc
loopne
arpl
stos
leave
ret
movsl
imul
inc
stos
lahf
or
outsl
mov
rep
jbe
mov
push
outsb
mov
and
outsb
out
xchg
nopl
pusha
inc
mov
jne
in
mov
adc
daa
xchg
or
add
pop
add
cmp
in
sahf
mov
movsl
ja
ds
and
mov
mov
sub
cmp
xor
pop
add
mov
call
inc
push
adc
adcl
lods
sahf
pop
mov
sub
ret
dec
aas
test
les
mov
push
cmpsl
xchg
adc
cwtl
dec
insl
jle
mov
clc
ljmp
lock
cmp
mov
out
outsb
ja
or
add
test
or
outsl
pusha
inc
loopne
int
add
dec
sbb
and
ljmp
ficompl
je
rcll
jecxz
mov
test
xor
mov
roll
cmp
mov
mov
fimuls
dec
test
inc
push
mov
jb
rcl
nop
or
outsl
jl
pop
push
cltd
lcall
jl
mov
lods
add
fwait
inc
dec
cmp
aaa
negl
sub
mov
push
in
mov
adc
sub
push
or
shlb
sbb
or
inc
push
je
pop
stc
aam
pusha
jmp
pop
ljmp
fstl
in
clc
mov
jo
subb
in
xor
inc
clc
adc
push
sahf
aas
adcb
mov
mov
in
pop
push
mov
push
jecxz
cmp
jns
jle
notb
sar
sahf
and
lods
jmp
mov
fistl
subl
stos
mov
lock
js
mov
adc
xchg
cltd
push
xor
sarl
stc
roll
test
sub
roll
loope
and
inc
mov
icebp
add
decb
testb
shrl
adc
adc
mov
and
adc
jae
mov
mov
inc
fsubrl
inc
push
sub
inc
sahf
pop
pop
sub
cwtl
mov
mov
sbb
xchg
cmc
and
adc
fdiv
out
mov
inc
mov
fs
xor
scas
ds
cli
adc
bound
call
mov
xchg
add
out
sbb
cmp
push
sub
outsb
cltd
dec
ss
aaa
sub
push
nop
jg
pop
cltd
fwait
mov
add
xchg
dec
adc
outsl
fstpl
or
push
lahf
stos
int3
rorl
xor
adcb
mov
mov
xor
cs
push
cld
mov
rolb
bound
adc
idivl
xchg
and
sub
and
fildl
push
jae
js
mov
pop
clc
imulb
in
out
addr16
popl
aam
push
divb
fwait
or
adc
adc
cmp
push
mov
mov
test
cwtl
dec
cmp
and
cwtl
aaa
push
cmpsb
cmp
dec
xlat
add
stos
icebp
push
and
das
dec
sbb
xchg
push
shr
test
or
sbb
fstpl
mov
outsb
negb
pop
fisubs
add
xor
loop
sub
fisttpl
add
outsl
ret
std
outsb
add
shr
adc
inc
and
data16
dec
incb
and
in
push
les
pop
je
test
push
sar
inc
bound
add
ds
ror
fistpll
or
ljmp
fsubrp
jne
loopne
mov
loop
mov
mov
popa
lea
sbb
stc
in
fsubs
ljmp
les
pop
mov
pop
shll
pop
test
aas
add
dec
jns
push
xor
push
pop
lods
xor
sbb
xlat
or
pushf
jmp
in
lods
dec
pop
movsl
cmp
sbb
mov
cmc
inc
pop
rorb
pop
xchg
fnstsw
mov
or
ss
adc
dec
cmp
or
cli
xchg
enter
mov
outsl
loop
nop
and
fucomp
sbb
mov
push
xor
cmp
pop
aad
sbb
das
cmp
fsubrs
mov
cmp
in
jb
shll
push
lds
cld
mov
xor
hlt
cmp
push
or
adc
sbb
sub
jg
leave
inc
sub
pop
sbb
in
dec
inc
test
pmaxub
mov
jb
lods
pop
sbb
and
es
jns
dec
cs
sahf
outsb
fildl
xor
mov
je
mov
sub
push
xchg
sub
or
jecxz
lock
mov
sub
je
test
clc
in
pop
pop
and
mov
mov
mov
adc
hlt
in
or
cltd
push
inc
mov
clc
out
mov
or
jo
dec
xor
dec
outsl
cld
add
jne
xlat
movsb
sub
add
cwtl
mov
jnp
test
xchg
fiaddl
cli
enter
test
mov
lock
mov
mov
inc
in
pop
cmp
scas
enter
push
adcb
lret
or
mul
aaa
adc
or
pop
mulb
ret
cli
gs
mov
dec
or
lret
jg
cli
mov
ret
js
sbb
mov
pop
imul
adc
jmp
fdivrs
lahf
in
addr16
jo
sub
imul
adc
mov
mov
imulb
fwait
push
movsb
popa
and
pop
pop
sar
daa
mov
cmp
pop
clc
sbb
clc
pop
sbb
pop
std
aaa
bound
scas
add
xchg
dec
fcomip
cmp
pop
outsb
push
lods
insb
imul
mov
mov
insb
js
add
pop
xchg
mov
push
push
xor
push
mov
fists
xchg
pusha
adc
inc
negl
scas
jmp
mov
sub
xor
inc
jg
xchg
addb
xchg
pop
adc
adc
sti
in
outsb
add
fistps
lcall
pop
es
fstp
jge
inc
mov
mov
sbb
mov
push
fchs
icebp
cmp
ljmp
inc
imul
jle
dec
jb
outsl
aad
adc
xchg
xchg
pop
fists
or
add
mov
out
adc
lods
add
dec
sbb
lods
icebp
je
test
hlt
add
scas
scas
js
mov
xchg
lret
xor
ljmp
dec
std
jb
test
and
icebp
cs
das
test
mov
sub
sbb
test
ss
dec
xchg
pop
xchg
aas
pop
pop
das
pop
loope
mov
aaa
push
out
xchg
push
cld
adc
and
mov
mov
lea
jecxz
test
loop
les
mov
mov
iret
cs
shr
and
imul
sub
xlat
cwtl
popf
and
call
sbb
mov
bound
fdivrs
pop
cmp
jp
sub
xchg
add
fldl
pop
repz
int3
hlt
dec
jge
bound
and
and
sub
ljmp
jmp
push
cmpb
cmpsb
cs
in
sbb
aaa
or
popf
lds
inc
sbb
xor
out
addr16
fsubrs
adc
mov
orb
aad
lcall
dec
sub
pop
push
mov
call
xchg
aam
pop
movsb
push
and
clc
sarb
inc
cli
subl
nop
push
incl
and
pop
jp
test
call
mov
jg
daa
mov
cwtl
mov
aad
mov
inc
push
clc
inc
sbb
sti
mov
adc
imul
jle
and
xor
xor
or
icebp
push
jl
xor
sbb
push
call
ror
adc
andb
xchg
leave
pop
jmp
mov
lock
cs
call
pop
mov
inc
js
or
negl
pop
xchg
shlb
ljmp
pop
leave
paddsb
jp
dec
jecxz
add
pop
lods
int
je
jecxz
pusha
sbb
dec
add
xchg
aam
sbb
pop
mov
rcl
sub
mov
pop
stos
jmp
push
xor
insb
sarb
sarb
mov
out
cmp
jae
loope
lcall
mov
jmp
and
cmc
or
inc
mov
add
xor
inc
jg
insl
rcrl
out
out
in
xchg
fistpll
shrb
enter
mov
icebp
jg
fadds
and
mov
negl
shl
std
push
sbb
pop
and
movsb
das
imul
sub
push
inc
les
les
push
sbb
mov
add
mov
pop
les
xchg
xor
outsl
mov
ret
repz
mov
sub
push
pop
clc
push
lock
fidivrs
jae
sarb
cmp
add
outsl
inc
jae
mov
fisubl
inc
cmp
jp
push
mov
into
add
punpckhwd
daa
test
iret
sub
mov
jge
mov
or
xchg
dec
pop
jge
pop
mov
jns
rorb
push
xchg
cmp
loopne
xor
js
repz
dec
inc
sti
pop
push
cmp
insl
xchg
shll
loopne
mov
popa
jg
sbb
data16
movsl
push
enter
xchg
sbb
std
adc
decl
dec
lret
push
lahf
mov
add
aaa
int3
int3
popf
jge
loopne
cmp
jl
rorl
call
xchg
sbb
das
cld
test
jne
cwtl
or
ret
sbb
dec
mov
and
inc
sbb
add
mov
aad
fisttps
leave
inc
jl
rol
xor
out
cmp
stos
call
ljmp
aam
sbb
jl
xor
or
xor
cmp
mov
notb
ds
shll
xchg
inc
sbb
sbb
in
adcl
gs
add
cmp
sub
addb
leave
out
xor
popf
cmp
sub
jg
mov
jb
cmp
repz
xlat
jg
xchg
adc
movsb
aaa
bswap
and
sarl
test
test
sbb
push
insl
es
jno
fimuls
notb
jg
shlb
or
adc
lea
dec
ret
call
loopne
or
std
or
enter
das
je
scas
xchg
mov
call
popf
adc
dec
adc
subl
adc
enter
aas
fildll
dec
test
les
adc
imul
jg
cwtl
dec
and
lock
out
cmp
cltd
iret
ljmp
jb
sub
fs
outsb
add
lcall
pop
pop
inc
and
inc
lcall
inc
pusha
or
cmpsl
mov
push
or
aam
lea
xchg
xor
mov
jmp
xor
sbb
fcompl
stc
and
mov
mov
jb
adc
idivl
mov
ds
fcoms
repz
insb
pop
mov
nop
pop
stos
out
insl
sub
daa
xor
call
cli
dec
mov
add
push
mov
fidivl
and
aam
outsl
rclb
orl
rclb
pop
and
in
sbb
mov
addr16
xor
mov
mov
imul
or
cmp
fiaddl
mov
sub
add
xchg
push
and
sub
cld
scas
mov
fldenv
or
cld
fwait
cli
jmp
mov
cmp
mov
inc
outsl
jbe
xorl
ret
loope
sbb
mov
clc
lahf
jno
and
and
out
push
add
data16
insl
mov
insb
lret
sarl
inc
aaa
loop
icebp
jbe
and
pushf
dec
and
das
pushf
cli
jge
xchg
gs
aas
test
adc
sub
rep
orl
into
jmp
or
push
fistps
adc
negl
mov
call
shrl
inc
mov
dec
sbb
rcrb
pop
jg
enter
call
scas
addb
je
or
lea
aad
cmpsb
into
or
cwtl
jae
in
jnp
mov
inc
stc
sarl
jns
fbstp
jge
lods
mov
adc
and
outsb
ljmp
test
push
dec
push
rcrb
out
outsb
xor
daa
test
mov
inc
shll
mov
sub
out
jae
pushf
jo
fneni(8087
jg
sarl
mov
jecxz
push
psubq
push
call
xchg
ja
outsl
pop
cs
or
sub
sbb
add
push
mov
xchg
les
repnz
adc
call
push
jbe
mov
loop
ljmp
imul
xor
out
scas
sarb
lods
adc
inc
pop
sub
cmp
insl
addb
repz
fcoms
stos
or
inc
mov
jg
pop
lock
add
dec
jo
xchg
nop
pop
shl
mov
sub
add
sti
mov
or
dec
leave
das
out
outsb
push
ds
test
push
dec
inc
int3
dec
jbe
ret
push
jge
xchg
push
pushf
push
test
call
sbb
and
cmp
mov
inc
popa
sbb
add
pop
insl
push
js
mov
nop
test
mov
cld
jmp
call
test
push
cwtl
repz
push
sub
bound
js
insl
loop
sub
add
jmp
std
pop
ficompl
mov
xchg
cwtl
popa
push
mov
int
aad
je
in
mov
cmc
mov
jns
les
jmp
js
jg
sbb
mov
mov
shrl
sbb
subb
addb
jmp
fwait
jnp
mov
jge
subb
pushw
jl,pn
and
dec
hlt
pop
fwait
or
ret
xchg
sahf
lahf
pop
jno
fdivrp
sbb
and
ss
cltd
mov
movsb
cltd
rolb
mulb
nop
cmp
lret
or
movsl
ljmp
movsb
stos
les
add
je
sub
xchg
mov
or
je
xor
push
fwait
movsl
and
or
inc
outsl
dec
sbb
bound
lds
outsl
daa
push
or
or
push
inc
mov
sti
jl
jmp
adc
sbb
xchg
cmp
dec
fstp
das
shrb
imul
outsl
outsl
std
and
insb
ljmp
repz
out
stos
mov
add
test
stos
push
mov
pop
fwait
mov
sbb
adc
add
xor
or
das
sbb
cltd
xor
loope
inc
fnsave
push
data16
je
cmp
out
insl
or
sahf
ret
hlt
xor
into
ja
ja
dec
aaa
fidivrs
xor
and
aas
vshufps
pop
into
les
adc
xor
cmp
mov
push
clc
pop
mov
ret
mov
xchg
sbb
xchg
mov
test
fildll
pop
call
movsb
fnstcw
sbb
dec
xchg
xor
cmp
out
mov
hlt
mov
cmp
sbb
jle
mov
cmp
add
push
mov
and
and
mov
dec
xchg
mov
mov
adc
out
stos
add
push
push
adc
sbb
pop
or
insl
std
out
cmp
jbe
adc
ja
adc
push
imul
mov
popa
sub
pop
sub
and
inc
xchg
lods
sub
in
outsl
aaa
cs
and
and
inc
push
les
aaa
pop
mov
sub
sbb
pop
adc
icebp
mov
pop
adc
pop
add
or
lret
popf
sbb
mov
shlb
add
mov
xor
add
icebp
rcll
xchg
mov
sbb
mov
xchg
imul
adc
in
jae
adc
jnp
js
mov
movsb
push
mov
jge
mov
mov
add
jmp
adc
or
arpl
xor
jle
clc
mov
pop
xchg
sbb
ret
mov
cmp
das
mov
out
push
cs
dec
adc
xchg
lods
or
cmp
push
and
mov
and
xor
mov
cli
jecxz
jmp
cmp
dec
xor
arpl
scas
push
pop
ja
cld
mov
lods
andl
push
js
icebp
mov
push
jno
mov
fsubl
gs
imul
or
adc
cmp
mov
cmp
adc
scas
lcall
in
jne
dec
call
and
mov
mov
arpl
adc
loopne
rcrb
push
add
mov
js
in
add
adc
push
cmpsl
out
mov
inc
dec
ret
pushf
lods
sub
or
sbb
in
jle
pop
test
mov
sbbb
adc
and
and
cli
pop
and
test
enter
lods
push
jnp
sbb
add
push
sub
lret
enter
mov
or
stos
scas
and
insb
fists
mov
xchg
mov
jg
incb
lds
cld
ss
test
call
dec
cld
and
in
cmp
iret
add
adcb
sbb
mov
push
mov
fisttpll
stos
lcall
inc
sti
cmpsb
mov
inc
mov
sbb
cmp
or
sahf
pop
pushf
ret
inc
add
sub
mov
cmp
dec
sub
rorb
mov
xor
sub
mov
pop
iret
push
ss
mov
inc
push
mov
cwtl
adc
pushl
push
cmp
inc
lock
or
mov
icebp
lcall
stc
push
sub
xchg
loopw
pop
sub
dec
mov
cld
fistps
imul
adc
jmp
mov
test
das
inc
pop
dec
js
jmp
and
outsb
inc
out
cmp
sub
dec
pop
jnp
pushf
or
test
push
into
push
fstps
cmp
jmp
xchg
mov
or
cmp
je
negb
fbld
or
push
lea
mov
test
sbb
mov
aad
jecxz
stos
adc
aam
adc
in
aaa
icebp
dec
mov
imul
sbb
jg
push
loop
push
out
fnstcw
bound
jge
push
shrl
lods
clc
shlb
cmp
cli
fmuls
sub
and
dec
or
inc
test
sarl
sarl
aaa
popf
ja
jmp
sarl
imul
sbb
aad
adc
ljmp
mov
int
mov
test
and
jno
cli
lea
and
adc
or
add
mov
ljmp
lods
scas
jb
cmp
mov
inc
mov
shrl
outsb
dec
in
mov
dec
pop
cld
pusha
jo
andl
pop
stos
repnz
pop
outsl
clc
xor
pop
or
mov
movsl
sbb
cmp
add
in
subb
shll
mov
rolb
cmp
mov
xor
dec
xor
stos
aaa
popa
shr
jo
inc
fucomp
xchg
nop
mov
std
in
inc
and
dec
fnsave
xlat
fs
xchg
xor
out
fsubrs
in
testl
inc
jge
loope
sbb
cli
inc
mov
mov
ficomps
fildll
inc
enter
stos
fsubs
mov
aam
adc
xchg
sbb
jecxz
push
adc
in
dec
dec
test
fildl
into
or
jbe
jmp
push
mov
lcall
push
dec
xor
add
and
add
lods
cmp
cmpb
and
add
ret
mov
pop
xchg
fsts
sub
mov
push
mov
xor
sbb
out
push
shrl
mov
cld
scas
negl
mov
pop
sub
nop
dec
dec
scas
xor
in
sbb
fwait
mov
aam
pop
sbb
repz
int3
xor
push
iret
cmpsb
mov
jmp
xor
lcall
jl
or
mov
aaa
inc
rcll
mov
adc
xorl
jae
jmp
push
inc
xor
jle
xor
or
mov
dec
subb
or
cmp
loope
std
push
das
jns,pt
arpl
sub
mov
inc
das
push
fdivrp
shlb
scas
loope
pusha
mov
ficompl
mov
push
jge
cli
jg
pxor
stos
mov
aam
js
pop
imul
xchg
int
or
mov
push
test
loope
cmp
push
pop
pushf
push
add
push
sbb
outsb
adc
movswl
or
insb
lock
sti
push
ljmp
popa
push
imul
test
aaa
push
cld
loopne
loop
test
jmp
rol
ret
nop
push
mov
inc
movsb
fnsave
inc
jmp
jl
adc
mov
add
xor
jno
je
cmp
mov
iret
xor
inc
out
jmp
add
rcll
dec
popf
lahf
ret
bnd
push
mov
mov
xor
dec
daa
jle
shr
mov
cmc
fs
imul
mov
or
dec
and
pop
mov
inc
inc
divl
jl
xchg
lock
sbb
out
lds
lods
inc
lea
xchg
xor
fldt
leave
jnp
outsl
mov
pusha
iret
pop
pushf
cwtl
mov
dec
ret
mov
insl
daa
xchg
jnp
and
or
test
mov
sub
aam
shr
xor
inc
mov
mov
or
aad
shr
in
pop
mov
aaa
adc
cs
push
fs
icebp
mov
mov
push
pop
outsb
add
mov
push
push
or
sbb
add
dec
in
jo
mov
jnp
movsl
fistps
sub
fisubrl
push
jle
push
inc
mov
popf
mov
shlb
das
idivb
cwtl
mov
inc
cld
and
mov
outsb
addr16
stc
sahf
cmp
aad
jno
xor
daa
mov
fildll
adc
pushw
mov
stos
repnz
out
test
mov
scas
ss
add
fmull
jp
roll
mov
dec
dec
rorb
pop
pop
stc
cwtl
lcall
lds
sub
jnp
add
stos
lret
dec
mov
in
jmp
dec
mov
and
pop
mov
sti
inc
xor
mov
push
cmpb
push
mov
add
jecxz
mov
cmp
ljmp
jg
pop
xor
pop
dec
sbbl
pop
push
adcl
sub
ss
xchg
mov
gs
dec
adc
adc
add
add
push
sbb
xchg
test
add
pop
icebp
xchg
js
insb
testl
jecxz
neg
jo
adc
inc
dec
sbb
daa
xor
mov
mov
das
sbb
sub
mov
adc
pop
incb
enter
es
mov
inc
ret
cmpb
stos
push
in
ds
aam
dec
jae
push
insb
aam
out
bound
adc
push
and
clc
pop
inc
sbb
inc
loope
inc
mov
cs
pop
test
push
lcall
mov
mull
jno
lcall
sub
xchg
push
out
faddl
rcrb
jecxz
ljmp
insl
popa
scas
repnz
insl
jmp
test
out
sarb
mov
in
cmp
sahf
insl
add
std
xor
js
mov
fwait
divl
xchg
mov
mov
int
pop
andb
push
cli
pop
stos
dec
repnz
rorl
lea
pop
aaa
lods
mov
jo
stos
pop
xor
xchg
in
adc
jnp
cmp
test
cmpsb
pop
sarl
shlb
add
ret
cmpsl
int3
or
or
or
arpl
pop
cli
sarl
sar
sub
mov
add
mov
cmp
push
sub
data16
mov
pusha
dec
or
xchg
into
dec
push
test
inc
push
lahf
or
sti
movsl
aaa
cmp
pop
sbbl
adc
ret
in
xor
cmpb
jg
inc
pop
aaa
daa
mov
dec
lds
aaa
push
arpl
lods
push
pop
test
mov
fucomi
add
in
dec
iret
pop
movsl
pop
jnp
inc
inc
ss
dec
cli
pushf
std
fcomps
or
test
icebp
or
mov
clc
scas
shll
cli
dec
sub
rorl
shll
roll
jbe
mov
int
mov
add
pusha
pop
mov
or
jnp
out
mov
cmpsb
and
mov
shl
add
mov
out
pop
sti
les
mov
sbb
or
push
ret
call
cwtl
dec
das
push
mov
push
inc
push
call
sub
jecxz
mulb
mov
js
add
mov
cmpsb
or
fisubrs
loope
mov
jge
das
xchg
mov
xchg
or
dec
push
cltd
mov
loopne
cmp
popf
mov
scas
shlb
loop
pushf
out
loopne
jns
icebp
pop
cs
mov
mov
les
adc
call
clc
test
dec
jmp
add
testl
int3
imul
es
mov
inc
sub
mov
dec
and
pop
pop
pop
inc
lret
fstps
jle
adc
sub
fbstp
ret
mov
dec
mov
inc
add
sbb
ljmp
and
outsb
mov
push
cltd
fstp
xchg
fsubs
push
out
lahf
mov
sbb
jne
mov
loopne
mov
jmp
mov
mov
cmc
push
or
mov
jnp
inc
lea
or
jge
mov
rclb
xchg
icebp
dec
leave
lret
into
and
aam
and
cld
mov
adc
add
adc
cmc
cmpsb
aaa
fcmovnu
cmp
mov
in
sbb
jne
pshufw
cld
push
leave
movsb
pop
inc
add
mov
mov
sbb
lea
dec
movsb
pop
test
lret
mov
ljmp
sub
pop
dec
leave
push
arpl
bound
movsl
push
inc
icebp
xchg
or
pusha
incl
int3
repz
ficoms
sub
loop
jne
cmp
mov
cmp
cltd
xchg
pop
lea
ja
andl
or
hlt
cld
loop
and
mov
or
or
shll
adc
mov
xchg
adc
fbstp
jle
imul
mov
pusha
cmp
sbb
int
mov
ja
outsl
movsl
mov
frstor
testb
push
sbb
cmpsb
pop
in
das
or
lret
cmp
add
push
shlb
cmp
and
ja
lea
sub
and
outsl
movsb
sbb
mov
in
ds
pop
xchg
popf
fldcw
pop
push
push
mov
mov
pop
lock
dec
jl
dec
jl
xchg
in
fbld
cmp
add
repnz
roll
push
cmp
es
mov
in
rcrb
aad
and
bound
test
roll
sahf
stc
loopne
add
fwait
jmp
lods
test
mov
fidivrl
mov
test
scas
dec
sbb
cwtl
or
xor
cmc
fistpll
pushf
add
and
push
sbb
aas
adc
inc
mov
imul
or
les
loopne
xchg
das
push
mov
orl
push
dec
jg
and
jbe
jno
rorb
push
js
loopne
fs
xlat
sub
mov
stos
push
hlt
das
cmp
sub
jno
xchg
insb
mov
add
mov
push
pusha
aas
mov
mov
mov
in
mov
add
arpl
cmpsl
fsubs
jbe
jns
addr16
jmp
clc
xchg
cmpsb
rclb
sahf
addl
push
fs
mov
dec
or
adc
ret
jb
aaa
aad
mov
adc
jp
push
mov
cmpb
mov
jbe
pop
jne
les
adc
in
dec
in
inc
stos
xor
xor
imul
sti
xor
and
adc
mov
popa
or
in
mov
fcomi
sub
outsb
dec
pop
cmpsb
ljmp
adc
and
fcom
pop
fistpl
mov
arpl
xchg
stos
lcall
js
testb
adc
jo
xchg
sub
mov
fs
imul
movb
inc
scas
xor
mov
sbb
mov
xchg
das
mov
imul
xor
xchg
fidivs
jb
fs
scas
into
cli
xchg
popf
jae
push
pop
jg
mov
mov
in
mov
xor
js
outsl
popa
lret
jns
sbb
inc
jbe
js
push
sbb
mov
rcl
inc
jns
in
or
dec
fwait
addr16
ljmp
aad
out
push
cwtl
xlat
push
hlt
pop
jecxz
jecxz
hlt
ret
cmp
dec
add
lcall
stos
sub
repnz
or
jns
mov
push
lock
xchg
dec
mov
xchg
pop
pop
clc
test
popa
mov
push
jle,pn
and
mov
cmp
in
shrl
cmpsl
loop
jg
jmp
mov
test
leave
push
fisubl
xchg
lds
pop
jae
lea
xchg
orb
jo
pop
stos
adc
sbb
fndisi(8087
call
inc
sbb
outsl
cld
add
stos
rorl
pusha
popa
mov
push
inc
adc
pop
aam
cmpsb
sbb
fnstcw
push
clc
es
dec
adc
stc
ror
mov
mov
mov
inc
orl
xchg
dec
jp
pushl
pop
shlb
push
dec
jb
and
inc
cld
inc
fwait
repnz
jmp
cli
ja
cs
loope
filds
les
fimuls
icebp
mov
jns
and
xchg
mov
sarb
xor
vsqrtss
push
xchg
add
push
sti
shlb
adc
inc
add
sub
mov
mov
pop
insl
popa
sub
pop
jmp
call
loopne
call
mov
pop
add
mov
negb
test
decl
inc
inc
mov
movsl
add
hlt
cmp
jno
add
or
pop
outsl
mov
test
push
cld
fistpll
jnp
mov
dec
add
add
xchg
stos
mov
leave
out
pop
sub
and
rcr
push
rcll
test
test
lea
movsb
stos
je
jge
jle
notb
repnz
cmc
int3
and
pop
gs
subl
jge
dec
iret
mov
nop
jp
cmp
test
sbb
jl
cwtl
xchg
pop
pop
sti
shl
call
xchg
imul
xchg
adc
push
sub
dec
jg
mov
repnz
gs
inc
jecxz
dec
jbe
sbb
pop
mov
stc
add
xchg
cmp
pop
stos
into
in
adc
out
mov
mov
aam
iret
pop
aam
dec
pop
clc
movd
imul
loope
jmp
insb
shrb
dec
xor
cmpsl
data16
push
sbb
mov
push
testl
insb
lea
inc
out
pop
inc
jl
add
cld
dec
jge
rcr
jo
out
sub
cld
lcall
fidivrl
dec
sub
jnp
test
arpl
push
jge
push
pop
test
push
mov
add
nop
out
add
add
jge
inc
orl
sti
or
dec
fnsave
sbb
int3
cwtl
std
rorb
xchg
int3
es
daa
pop
inc
sub
lds
fstpl
dec
ret
sti
sbb
or
sbb
sbb
loope
or
into
lods
shl
jo
fiaddl
cltd
and
icebp
mov
push
out
xchg
cmp
fs
mov
push
cmpl
jb
das
les
mov
rol
outsb
popa
mov
or
adc
and
lods
pop
ss
int3
dec
dec
lret
inc
iret
and
xor
mov
test
adc
pusha
mov
sbb
scas
mov
js
mov
rcr
lahf
mov
mov
fistpll
scas
jno
jno
push
aaa
sub
push
sbb
testb
lods
inc
inc
out
and
mov
loope
fildl
mov
adc
mov
cmp
pop
dec
or
xchg
aaa
mov
jo
xchg
pop
dec
dec
lahf
out
add
adc
das
mov
pop
shll
aam
mov
dec
sbb
iret
in
sbb
sub
jnp
fiaddl
test
pusha
adcl
lea
cwtl
lods
adc
dec
sti
lods
add
xlat
call
int3
or
adc
jge
jmp
cmp
hlt
mov
aad
pop
mov
fistpll
adc
push
test
daa
or
popf
ljmp
ret
mov
or
mov
sbb
ja
imul
aad
inc
xchg
sbb
mov
lret
sbb
cmp
adc
test
cmp
cmp
push
stos
cld
mov
fidivl
jne
ss
xchg
pop
add
mov
fistpll
test
int3
mov
jecxz
xchg
adc
inc
dec
cmpb
mov
decb
popa
jl
in
sbb
add
mov
xchg
fisttpl
vsubsd
lock
outsl
sub
adc
push
stos
adc
xchg
add
sub
subl
enter
adc
jno
fiadds
pop
or
test
call
mov
sub
mov
lds
inc
xlat
pop
and
out
sahf
call
int3
movsb
fadds
dec
or
cmp
mov
mov
js
or
dec
and
xchg
mov
xchg
fiadds
andb
dec
jle
popf
rol
mov
insb
test
das
shll
outsb
mov
cmp
jl
adc
inc
fs
aaa
incb
or
inc
jb
inc
in
sub
fildll
dec
in
ret
neg
dec
aad
lock
sbb
aaa
testl
sbb
jne
pop
pop
rorl
call
inc
pop
std
aaa
aaa
fsubrs
cld
xor
insl
arpl
out
popf
loop
jmp
sub
dec
mov
mov
ret
mov
lret
add
xchg
mov
fs
and
adc
shl
fsubrl
sbb
orl
dec
stos
outsl
cltd
xchg
cmp
iret
jne
add
js
enter
cmp
aam
es
jo
cld
lods
adc
mov
jo
fisttpl
popa
cmp
lods
movsl
cmpsb
fistps
pop
aad
arpl
imul
das
lods
lods
fmuls
push
xchg
push
insl
pop
sub
aam
test
je
idiv
or
mov
jno
xchg
insb
adc
data16
xchg
sbb
and
pand
fistps
or
mov
sarl
mov
inc
mov
ret
pop
std
pop
xchg
add
and
je
add
adc
out
jnp
and
dec
mov
inc
jb
jo
push
out
pop
fisubrl
mov
inc
pop
push
add
adc
push
leave
insb
sahf
mov
ficoms
mov
insl
cmpsb
cli
or
push
mov
test
adc
dec
mov
shll
dec
xchg
lds
ret
pop
in
int
or
sub
aaa
addr16
fisttpl
jns
sbb
push
out
aam
jge
jge
jge
or
xchg
sti
inc
mov
stc
inc
and
mov
mov
outsl
adc
cli
mov
mov
cmp
xor
je
mov
and
lahf
ds
int3
call
mov
enter
adc
xchg
jmp
call
dec
adc
add
mov
or
rcrl
xchg
sbb
lret
enter
mov
test
sub
ljmp
daa
movb
sbb
jmp
or
jge
sbb
push
rcrl
pusha
cmp
push
stos
xor
js
xor
or
jo
push
lock
sbb
in
dec
or
call
mov
movsb
xor
scas
mov
and
fdivrp
and
loop
add
loope
jg
ja
cld
push
inc
sub
push
pop
je
shrb
cmpsb
cmc
ret
mov
inc
pusha
sbb
lret
add
loop
jg
outsl
lahf
or
jo
je
or
call
adc
jmp
outsl
lcall
ret
sbb
mov
fisttpl
adc
lcall
cmp
or
stos
add
test
mov
leave
push
jbe
jo
dec
aas
xorl
jbe
add
sbb
inc
fldt
xchg
inc
mov
pusha
leave
je
or
sahf
data16
outsl
loopne
dec
iret
push
sub
xchg
xor
hlt
in
sbbl
shll
dec
jge
testb
or
push
xlat
xor
pop
roll
loopne
pop
inc
movsl
cwtl
scas
sbb
inc
mov
jne
fmull
mov
scas
jb
mov
ret
rorb
or
mov
lds
jbe
jmp
inc
sbb
nop
xor
pop
cmp
jecxz
mov
dec
sbb
sub
push
lods
insl
scas
adc
xchg
repz
mov
cltd
lcall
push
shll
pop
imul
rcl
add
das
xchg
add
aas
shrb
cs
push
xor
lods
sbb
shll
xor
mov
adc
arpl
adc
xchg
dec
fstpt
enter
call
and
adc
mov
das
aam
rsqrtps
and
sub
repnz
jne
jmp
pushf
inc
testb
roll
in
mov
lret
sub
pusha
sbb
out
and
jno
sub
js
add
mov
scas
rcl
pop
pop
mov
hlt
dec
mov
add
or
xchg
cwtl
insl
fdivrp
add
mov
arpl
mov
add
in
aas
mov
dec
cmp
fsubl
dec
icebp
loop
in
cltd
cltd
popa
nop
xorl
popa
ljmp
jmp
repnz
jne
ljmp
cmpsl
jno
mov
adc
jge
mov
add
and
inc
cli
push
mov
lds
test
xchg
and
pop
enter
mulps
xchg
push
cmp
rorl
bound
add
adc
or
sub
mov
jns
rol
add
stc
jne
movsl
pop
pop
inc
xor
sbb
outsb
ret
jbe
loopne
fwait
add
loope
and
dec
fstl
jp
stos
popf
fs
incb
and
add
adc
sbb
adc
cmp
mov
dec
repz
add
jb
outsl
dec
lds
dec
or
cmc
and
incl
test
aam
jge
pop
in
lock
mov
insb
mov
xchg
popa
icebp
or
movsl
adc
lock
stc
ja
sbb
and
ret
push
les
inc
jae
and
cmc
out
jecxz
lods
ds
pop
pop
cli
notl
push
test
or
out
push
cwtl
ljmp
loop
adc
fistl
out
lgs
mov
pushf
stos
cs
outsl
stos
inc
ja
inc
push
inc
sub
inc
and
dec
or
ltr
sub
divb
xchg
pop
pop
insb
inc
pop
xchg
mov
mov
sti
rcrl
mov
xor
orb
insl
push
jecxz
ret
pop
jno
sub
sub
mulb
loopne
ficoms
mov
int
hlt
in
js
loopne
stos
mov
mov
fistpl
fldenv
xor
jbe
mov
jecxz
fistpll
add
mov
and
inc
pminsw
shr
leave
outsl
cs
and
xchg
mov
push
and
mov
stos
sbb
pushf
inc
and
aas
dec
inc
dec
cmp
ret
or
cmpsb
ss
gs
movsl
push
cld
aaa
adc
pop
add
leave
pusha
or
cmpb
sub
sbb
pop
aaa
push
dec
cld
sub
sbb
add
xchg
and
xor
stos
pop
rcr
cli
cmp
and
int
mov
test
mov
orl
xchg
ficoms
movsl
fistl
or
or
adc
and
mov
int
add
sub
xor
jae
mov
adc
call
sub
mov
cmp
sarb
lods
stos
sub
lds
jp
repz
mov
mov
jmp
sbb
loopne
int3
pop
fs
xchg
cmp
sub
mov
jmp
inc
loopne
sets
mov
and
movsb
fwait
inc
ds
xor
fisttps
shll
ficoml
xchg
xchg
add
mov
mov
out
push
movsb
loopne
mov
in
and
dec
loopne
frstor
out
xchg
cld
sbb
sbb
lods
fadds
sar
pop
jmp
mov
sbb
clc
rolb
hlt
je
lea
out
cmc
adc
and
sbb
dec
xchg
jmp
mov
out
outsl
push
jle
mov
ds
loope
or
outsb
xchg
xchg
jo
jl
and
sbb
incl
dec
and
subl
lock
cmp
jl
add
ja
dec
je
push
outsb
clc
adc
lea
call
and
insb
loopne
push
sti
jmp
scas
add
sub
clc
data16
ljmp
insl
add
fs
insl
cmc
sbb
xchg
xor
cmp
sbb
dec
sub
xor
icebp
or
mov
dec
ja
icebp
inc
shlb
inc
mov
mov
sbbb
call
lcall
jns
test
imul
cwtl
pop
ds
cmc
decl
or
sqrtps
out
nop
push
cwtl
cmp
add
sub
iret
xchg
cld
jg
xchg
cmp
mov
sbb
mov
jle
mov
jle
jg
mov
xchg
pop
mov
cwtl
inc
inc
inc
mov
add
cmpsl
xor
xlat
call
dec
dec
inc
sbb
testl
ss
mov
and
adc
dec
sbb
test
in
jo
in
adc
out
call
pop
mov
stos
adc
pop
add
pop
and
je
orl
into
mov
jecxz
fimull
mov
jmp
add
sbb
lsl
fisttpl
lods
in
test
sbb
cmp
nop
sbb
sbb
xchg
sahf
pop
ror
into
sahf
aas
xor
fwait
mov
dec
mov
adc
cmp
aas
cli
pop
and
xorl
in
jg
inc
pop
push
in
movsl
shll
lea
push
pop
cmp
and
aaa
mov
and
sub
push
push
mov
insl
jmp
push
daa
xchg
lds
or
add
sbb
jnp
mov
repz
and
cwtl
and
test
imul
xlat
popf
xchg
adc
out
sbb
mov
dec
inc
lea
inc
ljmp
sbb
sub
xchg
fisubrs
and
jns
or
dec
hlt
sub
adc
mov
int3
push
pop
mov
ficoms
ficoml
mov
test
push
and
pop
call
sbb
lcall
cld
testb
inc
push
cmp
xor
aaa
leave
ljmp
stc
ja
dec
cmp
inc
repz
jle
pop
add
xchg
test
jb
ljmp
mov
push
imul
or
cmc
mov
ljmp
daa
sub
lcall
fst
push
inc
jns
add
loop
mov
scas
adc
xor
jl
pop
enter
pop
push
or
fdivrs
xchg
lcall
ficoml
mov
dec
or
adc
push
test
aad
loopne
mov
mov
out
or
jb
and
rcr
cli
inc
pop
pop
mov
and
imul
scas
or
mov
jmp
call
outsb
add
bound
dec
les
rolb
ds
cwtl
in
test
ret
or
or
xor
out
cs
shl
gs
repz
mov
or
push
fidivl
pop
ffree
xor
mov
or
mov
fcom
mov
sub
push
adc
dec
in
mov
sbb
clc
push
xorl
loopne
xchg
inc
xor
push
test
sbb
inc
and
jmp
sbb
gs
jnp
push
stos
lds
in
decb
dec
add
sub
cmp
inc
mov
jle
cli
cmpsb
in
or
add
lret
jns
mov
imul
mov
imul
sbb
imul
out
push
rclb
js
cli
adc
sbb
mov
mov
cmp
notb
jmp
enter
shrl
loop
sti
push
add
xorb
adcb
add
xor
ss
ss
xorb
orb
fsubl
and
pop
cld
insb
pusha
shl
jle
decb
addr16
mov
pop
xor
mov
ljmp
aam
je
and
mov
fnstenv
ja
aad
inc
add
pusha
adc
xchg
jb
in
and
sti
in
adc
stos
push
sub
jne
sub
cld
ljmp
dec
insl
xchg
mov
filds
sarl
push
mov
inc
add
push
cmc
inc
add
push
clc
outsl
or
lret
inc
cld
jbe
aad
push
std
cmp
outsb
repnz
incl
outsl
jne
cmp
mov
stos
iret
or
ss
jmp
mov
xchg
pop
jnp
fsubrs
fwait
ret
dec
jle
pop
dec
push
std
scas
inc
and
or
mov
std
out
and
and
iret
roll
pop
fildl
insb
clc
cmp
pop
popf
or
es
cmp
cmc
fistpll
clc
adc
bound
xor
in
roll
sbb
mov
mov
push
mov
lods
fistpl
cmp
dec
and
test
inc
cltd
pop
ljmp
out
xor
xor
jl
call
out
sbb
push
cmp
mov
push
adc
std
adc
loopne
jecxz
add
scas
or
mov
out
inc
ret
call
fcmove
int
xchg
int
inc
jp
imul
ljmp
mov
shl
and
daa
jbe
push
lret
and
dec
ret
ret
nop
xor
mov
ret
pop
xchg
jle
xchg
xchg
pop
push
cmp
mov
push
fucomi
outsl
cmp
or
jp
mov
adc
mulb
dec
xor
and
data16
mov
sbb
mov
gs
inc
xchg
and
inc
mov
pop
mov
call
mov
jge
jmp
and
pusha
popf
imul
sbb
scas
jno
inc
pop
das
inc
mov
gs
leave
inc
xchg
rolb
xchg
pop
xchg
mov
jno
movb
mov
xor
movsl
add
sub
sahf
dec
mov
mov
leave
pop
adc
fstpl
push
pop
inc
outsl
jmp
add
push
aas
jns
jae
divb
add
cwtl
xor
cmc
ret
aam
ret
popa
sub
pusha
cwtl
fldz
call
sbb
inc
fwait
int3
jno
pushl
loop
pop
push
bound
dec
sbb
cmp
mov
mov
inc
xor
sbb
test
outsl
into
imul
cmpsb
or
or
call
mov
mov
inc
stos
mov
cmp
cmpl
icebp
sahf
mov
sbb
push
inc
push
fsubrl
loopne
xchg
pusha
xchg
fisubrl
pop
fldt
xor
popa
packsswb
fisubs
mov
pop
mov
pusha
mov
xchg
cwtl
xor
inc
pop
mov
mov
mov
orb
and
push
mov
or
push
dec
or
sbb
test
mov
jle
xor
movsl
push
adc
mov
push
push
insb
mov
mov
jecxz
push
insl
sbb
les
xchg
inc
loopne
aad
cwtl
pop
pop
sbb
or
inc
pop
and
pop
jle
rclb
mov
xchg
leave
add
pop
stos
outsl
fnstsw
int3
mov
mov
adcl
sbb
cmp
aas
and
sbb
dec
mov
call
movsb
testl
cmp
sbb
sub
scas
call
cmp
ja
xor
jle
and
xchg
pop
pop
jl
jmp
cmovbe
add
leave
push
add
mov
mov
xchg
sbb
sbb
xor
into
sarl
mov
or
adc
cmp
mov
and
pop
or
test
mov
jae
lock
adc
pop
sbb
adc
mov
xor
sbb
inc
outsl
xorb
in
iret
adc
sub
pop
and
aas
clc
das
pop
sub
addl
add
std
lcall
cltd
cld
arpl
and
xchg
and
push
dec
aaa
mov
cmp
sbb
ss
mov
dec
ja
inc
xor
ja
or
call
cmp
mov
mov
dec
lea
jb
cs
cli
test
push
cli
ja
leave
dec
test
cmp
sahf
inc
jno
outsl
test
mov
push
cmp
int3
xchg
pop
aam
adc
adc
jg
push
jle
dec
sbb
aas
mov
fdivrp
rcrw
inc
add
fstl
inc
in
sbb
lods
fbstp
mov
icebp
xor
in
sbb
mov
aam
aam
pusha
jle
push
cmp
inc
sbb
sbb
daa
xchg
jae
lcall
jg
push
pop
sbb
sub
pop
movsl
xchg
mov
pop
mov
dec
mov
jbe
inc
icebp
push
mov
dec
mov
in
subb
les
mov
cmp
leave
mov
pop
cli
xchg
incb
popf
aam
shr
aaa
aaa
mov
repz
in
sti
das
aas
jp
data16
and
mov
lcall
and
sbb
cmp
arpl
pushf
mov
or
adc
xor
pop
mov
outsl
cmpsl
subb
loop
or
loope
mov
lahf
sbb
ficomps
pop
xchg
jbe
cmc
cmp
roll
rolb
aaa
xchg
ds
jecxz
jnp
xchg
flds
xchg
adc
clc
dec
jg
sub
push
jo
je
movsl
sub
jae
in
adc
mov
jmp
push
fsubrs
imul
lcall
pop
pop
out
les
jno
mov
outsl
cmp
sbb
std
ret
jmp
xchg
aas
daa
insb
or
push
mov
in
cmp
dec
cld
add
mov
ret
out
xor
jnp
cmp
add
outsl
adc
fistpl
inc
ret
movb
mov
bound
pop
sbb
mov
out
repnz
adc
call
stos
addb
in
gs
or
test
jecxz
and
push
mov
xchg
movsl
loop
jne
ljmp
loop
jmp
xor
mov
and
mov
das
pop
add
cld
add
lea
scas
jne
cli
or
ljmp
adc
stc
into
jmp
jmp
jp
sub
adcl
adc
sbb
cmp
ret
loop
adc
and
mov
hlt
push
in
inc
add
mov
ss
push
fdivl
xor
shrb
das
shll
out
and
push
cmpl
jl
loope
mov
or
pop
sbb
xchg
outsl
js
fucomip
sbb
xor
data16
pop
xchg
lock
stc
or
inc
js
mov
jg
cmp
into
adc
or
mov
cmp
hlt
enter
lock
std
aaa
call
fwait
and
shr
mov
std
lcall
insb
ret
xor
loope
in
jecxz
nop
aaa
lret
dec
dec
loop
mov
je
push
xchg
aas
icebp
or
cmp
loope
jmp
hlt
mov
xor
adc
cmp
stos
sbb
outsl
add
scas
sub
andb
stos
dec
rol
sub
fiadds
sub
xchg
push
jne
push
cli
shlb
xchg
aam
and
sbb
push
lret
mov
test
add
add
mul
mov
jmp
outsl
cld
cmp
scas
sbb
sub
xor
insl
sbb
jg
in
push
mov
add
sbb
icebp
aad
setg
filds
lret
shl
stc
imul
mov
rcll
fnsave
jbe
or
lahf
pop
popa
xchg
or
push
mov
mov
enter
addb
sar
or
cld
rclb
out
add
incl
adc
mov
ret
add
mov
jbe
fists
jge
adc
in
sar
divb
push
mov
iret
pop
or
mov
nop
test
jecxz
popf
incl
pop
aas
ret
add
mov
adc
sub
fcomps
popa
mov
sbb
sbb
adc
cmp
jg
push
insb
movsl
push
mov
sub
jge
sub
ljmp
ret
dec
jg
fwait
cs
pop
mov
inc
inc
shr
popf
mov
shlb
sahf
leave
xorb
or
pop
mov
or
xchg
xchg
and
negb
pop
push
add
xchg
dec
stos
push
or
popa
cmpsb
in
sbb
inc
imul
les
ficoml
sub
adc
mov
push
out
add
inc
insl
mov
jge
adc
mov
jnp
jp
les
into
mov
xor
sbb
in
xchg
sbb
fistpl
pop
and
xchg
xor
or
sub
insl
mov
cmp
outsb
xor
add
add
jbe
cmp
adc
ljmp
decb
dec
adc
loopne
mull
sarb
xchg
pop
mov
mov
mov
push
mov
arpl
dec
js
push
and
mov
jno
add
sahf
insl
jl
aaa
push
jge
flds
jmp
dec
fstpt
push
mov
or
mov
xchg
jbe
mov
xchg
vmulss
add
inc
xor
int3
test
rcll
sub
mov
mov
test
jp
or
decl
jmp
shlb
arpl
fistpll
out
incb
test
inc
and
jns
movsb
fstpt
push
add
cmp
jne
arpl
pop
clc
or
out
dec
daa
jae
sub
push
shr
xchg
pop
inc
sub
notb
imul
sarl
or
arpl
push
cmp
mov
int3
stos
sub
push
ficoml
dec
inc
cltd
fsubrs
cli
scas
dec
mov
cld
stos
mov
out
movsb
lret
push
call
cmp
mov
mov
mov
gs
mov
adc
les
jo
insb
xor
repz
pop
pop
cld
es
fucomip
pushl
mov
ljmp
jbe
ljmp
pop
xchg
ljmp
pop
jl
sar
test
pusha
and
jmp
dec
inc
dec
movsl
add
aam
insb
arpl
or
sub
sbb
sbb
mov
das
dec
mov
adc
dec
xor
mov
in
pop
js
jl
push
and
fbstp
je
cli
sbb
xchg
lods
inc
mov
insb
dec
outsl
sub
rcrb
popf
das
mov
les
bound
adc
mov
mov
jb
inc
dec
lret
dec
mov
mov
mov
lret
cli
add
dec
jge
xchg
pop
jmp
sqrtps
xor
nop
stos
pop
jno
pop
in
cmc
out
xchg
lahf
and
sub
daa
aas
sub
cmp
mov
clc
roll
das
scas
lret
fimuls
pop
subl
mov
or
movsl
mov
ret
push
loopne
or
push
mov
fdiv
mulb
jle
dec
iret
lds
aaa
mov
jnp
and
cli
mov
push
cltd
dec
outsl
loope
ret
pop
jne
insb
stos
std
lock
loopne
in
inc
adc
mov
mov
and
sub
xor
mov
inc
sbb
xchg
ficoms
xor
push
add
jmp
xchg
xchg
aam
pop
pop
shll
sub
xchg
cmpl
inc
out
loopne
inc
xchg
sub
loope
es
push
fdiv
addr16
ret
testl
mov
clc
mov
test
hlt
outsb
sbb
push
addl
data16
inc
test
lods
push
inc
and
jbe
mov
outsl
mov
movsb
cld
jle
cld
sub
iret
lea
inc
add
lock
push
addb
cltd
push
mov
push
lock
mov
aad
mov
rcll
adc
lea
sub
add
lds
xchg
xchg
and
mov
imul
ljmp
adc
aam
pop
push
les
sub
ret
cmpsb
xchg
punpckhdq
int3
jbe
daa
aad
pop
jo
inc
mov
stos
and
add
popf
and
sub
insl
loope
dec
sti
jo
sbb
pop
lahf
push
mov
add
subb
lcall
mov
push
dec
mov
gs
ss
add
pop
sub
jo
shll
cld
ja
jle
std
mov
andb
pusha
adc
lea
and
into
sub
xchg
imull
cmc
scas
sub
out
les
ret
in
stos
cmc
sub
jae
je
adc
mov
fdivrs
push
dec
pop
in
cmpsb
and
mov
adc
rorb
mov
outsb
push
cmp
inc
test
sub
mov
lods
fwait
sbb
insl
loopne
test
fsubl
mov
insb
add
jg
fiadds
adc
push
out
inc
cltd
and
adc
gs
cmp
nop
outsl
and
in
cmp
mov
jl
cmpsl
cmp
icebp
mov
stos
mov
inc
mov
insb
shl
jae
cmp
bound
lods
mul
js
mov
ja
xchg
push
pushf
xchg
inc
xor
or
dec
xchg
xchg
shll
in
or
cmp
mov
jge
fidivrl
jg
lock
sub
neg
out
into
cmp
cmpsb
dec
gs
adc
add
pushf
mov
mov
sbb
sub
adc
shr
pop
push
inc
pop
pop
pop
xorb
cld
fscale
add
arpl
scas
sbb
cmp
out
test
mov
rolb
xchg
inc
pop
mov
jle
pusha
add
iret
mov
orb
pop
jbe
pop
push
adc
clc
xor
rcrb
decb
stos
fistpll
push
dec
mov
cmp
sub
pop
sti
inc
dec
pop
xor
outsl
arpl
jo
std
add
cmpsl
cmpb
pushf
ja
gs
push
fcoml
mov
push
cmp
add
pushf
push
sub
js
push
iret
pushf
pushf
and
daa
mov
xor
mov
jmp
std
roll
xchg
cld
add
mov
or
cld
mov
pop
mov
sub
movsl
outsl
mov
push
add
insl
lahf
sub
push
rorb
sub
es
insb
sub
add
outsb
adc
rclb
sbb
out
xchg
cld
inc
xor
lret
jo
outsl
add
imul
and
mov
jg
pop
movsb
mov
mov
xchg
subl
inc
push
popa
or
push
ret
out
pusha
jne
dec
ret
sbb
out
hlt
movsl
loopne
in
in
adc
int
or
cmpsb
in
dec
in
div
out
mov
ror
sbb
mov
call
scas
popa
mov
lds
and
sbb
cmp
jl
sub
mov
in
sub
pop
sbb
int3
mov
loope
pop
lea
push
xchg
jp
in
fisttps
popf
mov
aad
pop
add
incl
ja
and
nop
stc
mov
rcr
lock
xchg
ds
shr
xor
adc
pop
xor
je
cli
fidivl
imul
das
sarb
in
jo
mov
xchg
mov
mov
sbb
icebp
jl
jb
add
incl
mov
inc
mov
movsb
inc
rolb
mov
clc
in
and
stos
jl
shlb
aas
stos
inc
jecxz
add
aad
pop
scas
testb
nop
sti
jo
push
loop
in
call
pop
jb
mov
adc
pop
cli
xchg
pop
push
xor
dec
xlat
push
mov
sahf
jb
aaa
push
lock
fstl
mov
movsb
jl
dec
lret
mov
aas
inc
inc
cmc
sbb
push
push
imul
fbld
stos
pop
or
inc
xchg
int
jne
pop
jb
call
push
pusha
shr
fwait
clc
test
jp
jae
scas
daa
push
inc
pop
orb
subb
xor
aas
lods
or
mov
mov
and
pminsw
pop
divb
fisubs
or
jge
cli
dec
xor
sub
xchg
pop
fisttpll
push
loope
loope
mov
les
inc
xchg
cmp
xor
mov
xor
clc
lods
hlt
mov
pop
dec
stos
cmp
fwait
pop
pop
pop
clc
pop
in
jae
mov
bound
mov
loop
outsl
dec
test
insl
in
pop
mov
xchg
and
push
mov
mov
and
adc
lcall
adc
pop
cs
clc
les
jmp
mov
add
ja
les
cmp
pop
popa
xchg
clc
mov
mov
scas
and
push
pop
sbb
fistpl
mov
push
shlb
inc
inc
mov
cld
outsl
mov
and
movsl
out
adc
push
es
inc
rclb
add
mov
pusha
xor
roll
jecxz
pop
mov
cmc
inc
stc
fidivs
das
dec
out
push
xchg
cmpl
idivb
std
das
and
ljmp
stos
pusha
add
call
xor
mov
cmp
or
sti
mov
add
or
push
add
inc
aad
sub
testl
cmc
in
pop
lcall
insb
add
pop
aam
xor
movsb
sbb
pop
xchg
lods
and
das
push
movsl
inc
fsubs
and
scas
sahf
xor
movsl
xchg
xor
mov
fisubrs
loopne
fcmovu
sahf
push
shll
inc
loop
xor
fisttpl
cmp
call
fbstp
or
incl
mov
test
push
imul
in
filds
pop
push
pusha
pop
imul
je
push
out
std
cltd
mov
push
sahf
and
dec
leave
jle
inc
jl
jne
pop
rcrl
pop
inc
mov
dec
inc
verw
push
ds
std
sub
xor
or
lock
cs
mov
and
clc
cmpsl
shr
push
mov
fucomip
cmc
fldl
adc
sub
aam
lcall
test
ljmp
lcall
movhps
and
call
xor
fs
mov
inc
add
or
cmp
jle
adc
inc
cmpsl
sub
mov
sub
or
stos
or
adc
or
mov
popa
cmp
mov
inc
mov
into
cmp
or
sahf
ss
mov
scas
ja
pusha
push
adc
pop
lods
ficoml
pop
sbb
cmp
fistpll
lods
cmp
sbb
out
es
addl
xchg
dec
xchg
xchg
lock
or
cli
test
fsubl
xchg
ljmp
and
add
or
bnd
enter
sti
sbb
and
inc
or
out
fdivs
insl
dec
inc
or
clc
in
ret
cmp
je
mov
out
mov
cmp
subl
dec
mov
popf
adc
pop
and
fists
add
sbb
pop
push
ds
dec
mov
pop
or
cli
xor
pop
stos
mov
out
jl
jge
push
mov
pop
test
shr
cld
push
in
jg
cmpsb
ds
pop
fistps
test
aam
push
icebp
or
push
and
dec
es
test
in
outsl
out
add
pop
xchg
jne
adc
cli
out
dec
cwtl
or
in
lea
add
mov
cmp
mov
cli
mov
inc
int3
pop
jmp
jne
add
dec
into
pop
mov
clc
imul
ffreep
loope
hlt
lret
push
dec
and
dec
mov
ss
push
shll
inc
les
das
shrb
and
aam
push
cld
mov
mov
lret
scas
xchg
icebp
and
mov
stos
mov
mov
inc
loope
insl
test
mov
pop
cmp
loope
dec
mov
stc
stos
inc
cs
sbb
jae
and
iret
xchg
jl
mov
mov
repz
cmpsb
mov
mov
loope
inc
and
add
call
or
std
xor
and
pushl
decb
sub
jle
test
push
adc
dec
xor
mov
sbb
lret
gs
adcl
mov
repnz
jo
shlb
sub
into
mov
inc
pushf
push
in
pop
add
xor
mov
mov
test
lods
adc
cmp
or
pop
orl
push
lods
fistpl
movsl
jae
inc
in
rclb
sbb
sub
andb
loope
rorb
rcrb
push
cmc
mov
xchg
cs
and
outsl
jae
test
outsl
int3
mov
flds
punpcklwd
neg
pop
test
sbb
add
jle
shl
inc
pop
mov
xchg
xor
or
xor
sar
or
mov
pushf
jae
popa
mov
sbb
jo
sbb
jnp
jae
cmp
es
mov
scas
dec
mov
aas
xlat
or
and
jmp
or
sbb
daa
dec
lahf
fists
mov
pop
cmp
sbb
sahf
mov
testl
loopne
or
adc
imul
movsl
pop
inc
add
add
gs
lds
jmp
les
test
popa
mov
xor
cwtl
push
mov
insb
xor
dec
cmp
out
cmp
cli
les
repnz
xchg
mov
or
aad
add
mov
aam
clc
call
pop
mov
mov
jb
scas
inc
pop
pop
xor
inc
adc
sti
push
loopne
cld
mov
add
cmpsb
xchg
leave
adc
push
push
cs
mov
sti
dec
xchg
mov
ja
jg
insb
xor
sub
addr16
movsl
lahf
mov
rolb
push
cwtl
js
inc
mov
pop
insl
std
and
add
add
icebp
movsl
mov
mov
push
or
pop
lock
js
hlt
ja
xchg
pop
pop
sub
rcrb
lea
mov
xchg
rorl
ret
adc
jl
loope
test
xchg
pusha
and
loop
mov
pop
sbb
test
xor
iret
mov
mov
add
sbb
jmp
ljmp
pop
or
dec
or
inc
aam
push
push
lea
dec
push
scas
movsl
loope
mov
jbe
sti
jge
sub
fisubs
inc
and
dec
sub
mov
inc
mov
xorb
mov
fwait
jne
insl
mov
adc
imul
fisubrs
aaa
or
sub
das
pop
test
lds
adc
xor
andl
dec
lock
sub
out
cwtl
pop
or
pop
int
cmc
movsl
int3
jne
add
das
mov
or
add
outsl
dec
push
dec
xchg
stc
xchg
fwait
jb
data16
mov
sbb
push
jae
imul
loope
loopne
movups
sbb
roll
pop
or
pop
and
andl
nopl
mov
mov
test
adc
adc
mov
mov
scas
xchg
mov
mov
inc
cmp
test
rol
call
mov
adc
mov
testb
sub
lahf
mov
push
ljmp
dec
mov
les
outsb
stos
das
dec
inc
inc
frstor
or
pop
and
add
mov
aaa
jmp
imul
jbe
test
mov
mov
cmp
pop
popf
lret
cli
lahf
and
or
outsb
loopne
inc
je
inc
adc
push
aaa
cs
xchg
int3
out
in
inc
leave
imul
lea
aaa
xchg
or
jge
arpl
dec
pop
mov
or
inc
out
and
cmp
lcall
fs
mov
inc
sbb
jle
inc
std
mov
stos
sbb
jo
mov
xchg
dec
bound
lds
xchg
stos
mov
outsl
mov
push
icebp
ret
sbb
dec
cld
mov
dec
enter
dec
scas
xchg
dec
test
mov
clc
mov
sub
xchg
dec
xor
daa
xchg
fidivs
inc
popf
and
cmp
and
sbb
add
je
cmp
hlt
push
sbb
sub
ret
push
jmp
mov
loop
add
cmpb
cmc
jl
in
outsl
insl
xor
into
inc
icebp
and
dec
test
add
cld
lcall
add
pop
push
xchg
cmp
sub
sub
cs
dec
xchg
mov
mov
mov
jmp
std
cli
mov
mov
inc
xchg
sub
pop
sub
sub
lcall
imul
inc
inc
sub
jmp
mov
lret
mov
pop
xor
les
shrl
mov
sub
cs
pop
and
test
xchg
pop
mov
push
sub
or
movsl
pop
push
jp
mov
lds
clc
dec
shlb
dec
inc
loope
add
cld
and
xlat
sub
jo
je
push
push
xor
daa
mov
push
clc
lods
rol
adc
jg
push
xor
popf
xchg
dec
hlt
scas
fisttps
push
cmp
rcrl
clc
jbe
fbstp
sub
rolb
icebp
xor
push
mov
inc
mov
xor
popf
or
aaa
in
jg
mov
sub
fistpll
mov
pop
cs
inc
mov
mov
outsb
fiaddl
aaa
and
jns
aam
push
mov
jne
or
stos
mov
push
inc
sbb
inc
xor
adc
inc
jb
lea
ror
rorb
mov
xchg
mov
xchg
fbstp
ljmp
addr16
jp
js
inc
outsb
popf
or
xor
orl
pop
jmp
fisubrs
aaa
push
scas
xchg
mov
mov
das
jbe
push
in
dec
or
clc
syscall
jns
fildll
out
lds
push
fdivrs
dec
push
push
and
iret
rcr
push
les
mov
mov
and
cmp
sbb
in
or
loope
movsl
rcll
aad
mov
rcr
and
ret
addl
test
pop
lea
and
lret
cmp
outsl
outsl
out
das
aaa
jne
rorb
pop
adc
push
xchg
lret
jo
jecxz
mov
xchg
mov
sti
mov
xchg
dec
mov
xchg
mov
or
es
sub
sti
adc
jns
faddl
adc
xor
out
xchg
aaa
sarb
add
dec
jb
rcrb
mov
test
mov
stc
xchg
mov
inc
in
sub
mov
or
das
cld
movsl
mov
sbb
mov
inc
add
mov
pop
jl
popf
adc
mov
push
mov
inc
mov
bound
cltd
outsb
mov
mov
xchg
mov
in
xor
xchg
inc
mov
pop
fisttpl
decb
loop
jecxz
jle
and
decl
les
sbb
test
xor
out
cmp
mov
mov
and
sbb
hlt
dec
push
les
das
pop
mov
loop
pop
push
push
stc
push
enter
aaa
sub
lcall
ret
nop
xchg
clc
xor
jl
pusha
mov
aaa
xchg
call
std
inc
pop
jg
ja
aam
adc
inc
sbb
jp
adc
push
mov
sti
push
dec
xorl
icebp
and
jbe
into
nop
int
aas
hlt
jg
pop
fdivrl
xor
pop
inc
mov
cmp
vpandn
lods
adc
andl
pop
test
mov
sbb
or
dec
mov
gs
orb
out
fucomi
pop
mov
and
dec
adc
dec
mov
jg
sbb
lret
xchg
xchg
divb
shrb
mov
push
sahf
mov
dec
push
lret
or
push
in
mov
lods
jge
pop
sub
movsb
sbb
ds
add
test
xchg
push
xor
pop
adc
test
ss
stc
out
push
push
xchg
xor
xchg
idiv
mov
push
adc
pop
lds
outsb
xor
push
std
or
xchg
sbbb
push
out
pushl
aam
adc
mov
cmc
insb
jne
shrl
mov
fcmovnb
push
or
sti
mov
daa
cs
stos
lds
out
cmp
js
mov
icebp
mov
clc
outsl
jo
adc
test
mov
mov
ljmp
rcrb
mov
sub
aam
aaa
mov
cli
pop
imul
xor
rcrb
dec
jo
pop
test
jmp
in
aad
aas
iret
sbb
mov
and
mov
incl
and
fldt
pop
inc
nop
xchg
fisubrs
sub
mov
test
or
push
sub
xlat
jp
test
cs
jno
inc
inc
ret
test
dec
loopne
loop
mov
pop
inc
mov
test
inc
jle
shrl
aaa
add
incl
dec
dec
fldl
js
fcomps
shlb
mov
aas
inc
mov
hlt
jg
out
sub
adc
outsl
dec
fdiv
cltd
sti
xchg
jg,pn
add
mov
clc
add
sbb
jg
sbb
dec
mov
shll
and
subl
frstor
inc
push
repnz
push
mov
xor
adc
dec
cli
xor
std
or
mov
lds
pusha
add
adc
mov
imul
cmpsb
jb
outsl
mov
in
rcrb
inc
stos
lock
pop
sbb
out
sub
mov
les
das
cld
push
mov
lea
js
cwtl
xchg
add
fcom
repz
push
ljmp
ljmp
sub
jae
stos
xchg
xorb
cmp
cmc
and
add
nop
cld
xchg
mov
fidivrl
ljmp
jge
mov
cli
pop
jnp
sub
push
mov
push
out
jae
jl
sbb
mov
push
and
pusha
cmp
or
dec
lcall
out
cmp
jg
xchg
stos
test
rorb
mov
fldenv
stos
fwait
or
pop
mov
mov
jnp
scas
push
and
ficomps
in
mov
mov
sbb
jg
push
cmpsl
xor
sub
clc
ret
xchg
sub
inc
mov
mov
cmp
inc
fistl
in
mov
inc
dec
sbbl
mov
mov
rclb
cmpsb
or
push
cmpl
inc
push
testl
mov
lea
xchg
pusha
jp
idiv
inc
fnstsw
jp
jmp
clc
mov
inc
mov
call
test
push
aad
out
pop
inc
inc
add
lods
iret
or
push
or
inc
pop
adcb
fs
mov
not
fistpl
les
mov
into
or
cli
scas
pop
push
dec
test
pop
outsb
push
imul
imul
mov
inc
mov
add
xchg
dec
rcll
mov
mov
jg
incb
inc
jp
sub
mov
inc
jmp
arpl
sbb
xor
loopne
cmp
and
outsl
pop
outsb
add
loope
xor
or
mov
inc
mov
clc
inc
or
into
fsubrl
or
aaa
fdiv
std
sub
ret
lock
es
xchg
ds
mov
mov
sbb
in
pop
push
inc
push
subl
and
push
ljmp
sbb
cmp
and
arpl
mov
pop
pop
scas
scas
or
ret
inc
lock
test
pminsw
xchg
outsb
jg
add
or
call
add
cmc
dec
test
mov
and
aas
adc
jnp
jne
and
icebp
mov
mov
mov
jmp
add
outsl
sbb
dec
jecxz
jmp
fmull
xor
pop
test
jle
movsl
lcall
lods
shl
pop
test
push
pop
dec
insb
enter
jne
int
clc
inc
cmc
mov
xor
bound
pop
fdivrl
rcrb
or
mov
dec
and
lret
xor
adc
insb
sub
mov
pop
jle
sbbb
pop
enter
icebp
ja
dec
loope,pt
lea
xchg
inc
mov
or
nop
jbe
les
cmc
aaa
push
sub
inc
ffree
lret
ror
outsl
sbb
out
cmp
adc
and
or
cmp
pop
sub
sarl
add
call
mov
xchg
adc
sub
call
jg
mov
or
mov
loope
push
push
imul
rclb
ja
dec
mov
or
rcrb
and
cmpb
add
mov
jae
dec
add
jge
cld
lahf
sub
or
xchg
add
sbbb
add
sbbb
cmpsb
pop
jmp
outsl
cli
add
sbb
fidivs
push
je
inc
in
daa
sti
enter
ret
and
cmc
stc
adc
cs
lock
adc
inc
mov
popa
adc
pop
movswl
das
adc
repz
xchg
dec
sub
dec
mov
jbe
popa
lods
hlt
cmp
inc
enter
mov
pop
loopne
imul
mov
push
stos
outsl
mov
lahf
dec
or
dec
cmp
mov
pop
ds
inc
jb
and
lcall
mov
mov
das
aam
aaa
dec
sub
xchg
arpl
scas
lock
adc
cmp
cmpsl
push
outsl
clc
or
scas
loop
push
test
mov
imul
movsb
addr16
dec
ss
fbld
icebp
push
test
sti
cmp
ficoml
pop
ss
nop
mov
js
aas
mov
or
hlt
xchg
xlat
push
and
jo
into
testb
call
sbb
push
hlt
push
xor
ror
or
cmp
jecxz
or
cmpsl
xor
mov
in
cmp
or
cmp
mov
adc
in
sub
les
jle
aam
mov
inc
jae
fwait
mov
jl
out
or
push
iret
mov
push
scas
push
mov
mov
cmpl
push
jnp
adc
add
mov
inc
pop
inc
adc
lods
ljmp
in
arpl
mov
aam
mov
jle
push
aam
pop
pop
adc
jo
or
sub
and
movsb
popa
mov
sbb
cmp
rol
ds
shl
lods
aam
aaa
loopne
mov
jecxz
push
cmp
pop
cmc
add
roll
das
sub
mov
mov
mov
pop
loop
test
mov
iret
sub
inc
cmp
shrl
shlb
icebp
mov
inc
mov
icebp
movsb
movsl
std
mov
mov
inc
cmp
add
adc
loope
inc
sub
inc
dec
dec
in
ret
cs
clc
adc
outsl
shrl
push
cmc
ss
xor
stos
mov
jo
xlat
aaa
pop
imul
cmp
xorps
add
xchg
mov
mov
fwait
or
mov
xchg
add
sbb
cmpsb
and
out
mov
xor
std
test
notl
mov
das
push
mov
dec
lret
das
clc
lea
lock
push
cmpsb
push
leave
cwtl
mov
mov
add
mov
aaa
sub
shl
pop
mov
xor
leave
out
mov
test
cmp
add
sub
dec
jmp
loop
sub
xor
in
or
dec
mov
call
mov
pop
in
and
dec
lods
sahf
dec
cli
lock
sbb
les
xchg
pop
mov
lods
or
mov
pushl
xchg
dec
mov
rol
add
jmp
inc
in
sbb
daa
cmp
ljmp
adc
cld
jg
mov
loopne
cld
add
andb
cwtl
aaa
movsl
xchg
sub
adc
test
and
sub
movsl
push
jnp
dec
push
inc
xor
or
fldt
mov
inc
fldt
xor
cmp
or
push
push
mov
push
mov
mov
xlat
adc
insb
push
xchg
and
xchg
aaa
aas
jne
stos
add
aaa
into
loopne
fdivrs
xorl
aas
enter
pop
call
fidivs
sbb
pop
out
dec
pop
jle
and
xchg
adc
sub
push
jle
stc
xlat
data16
out
orb
addr16
fisttpl
jae
iret
das
clc
xchg
xor
add
cli
aas
es
jl
pop
xchg
stc
cmp
mov
mov
add
out
repnz
fcomip
jo
push
rorb
dec
or
adc
data16
bound
pushl
out
insb
imul
rolb
out
and
and
mov
rolb
enter
jecxz
ja
jae
inc
stc
incl
sub
leave
inc
push
ret
and
sbb
jno
inc
stos
je
xchg
cmp
pop
pop
mov
test
push
dec
push
mov
mov
cwtl
ss
mov
jecxz
mov
out
mov
pop
dec
mov
and
and
je
pop
mov
sub
lcall
cld
cmp
dec
popa
icebp
shll
mov
incl
mov
dec
push
inc
cld
push
mov
mulps
mov
bound
mov
out
dec
movsl
test
xchg
in
add
sub
imul
popa
jno
lods
adc
xchg
frstor
jns
outsl
std
inc
cmp
loopne
mov
aaa
add
xlat
je
or
lods
push
out
xrelease
jg
pop
jecxz,pn
push
repnz
sahf
sbb
sbb
inc
out
jmp
jmp
inc
clc
jg
outsl
jnp
das
dec
cs
pop
adc
ret
cmp
pop
jb
outsl
pop
pop
rorb
and
inc
sti
adc
mov
out
cmp
push
fwait
cmp
std
lods
or
and
xor
jb
mov
or
mov
sub
das
sarb
stos
push
adc
shr
cwtl
aaa
cmc
cld
rol
loopne
mov
mov
adc
shl
mov
sbb
jmp
mov
sbb
lods
sub
sbb
imul
mov
test
pop
mov
popf
stos
mov
clc
xor
in
fwait
push
push
push
dec
data16
rcrb
and
cs
cmp
mov
xchg
in
mov
push
xorl
in
std
scas
std
aas
call
inc
and
mov
or
jp
sbb
outsl
pop
pop
cmp
and
pop
sub
adcl
mov
mov
clc
push
outsl
dec
dec
inc
sub
repz
mov
push
add
imul
ljmp
test
cmpl
scas
outsl
dec
arpl
dec
adc
movhps
inc
cld
dec
test
addr16
addr16
test
dec
pop
sbb
and
out
adc
pop
add
frstor
xchg
movsb
into
jb
les
in
sti
mov
jecxz
xlat
das
push
and
rcrl
aaa
jbe
jg
pusha
mov
fdivl
rolb
and
push
cmp
push
lcall
frstor
sub
iret
call
ljmp
scas
jmp
sub
push
icebp
in
into
inc
lcall
push
incl
fnstcw
jecxz
mov
xchg
in
dec
jo
add
push
add
cs
sub
mov
ret
cmc
lea
mov
scas
sar
sti
movsl
mov
nop
mov
lds
adc
inc
adc
inc
cs
leave
pusha
jne
ss
in
sub
pop
add
mov
fwait
imul
fnsave
jne
pop
dec
cld
mov
xor
pusha
in
mov
sbb
inc
mov
mov
pushf
xor
ret
add
call
aaa
push
jo
roll
jg
cmp
outsb
mov
das
sub
outsl
mov
add
lcall
out
sti
and
pop
rclb
rcll
pop
jbe
sub
fwait
addb
movsb
cmpsb
sub
xlat
inc
xchg
and
sbb
jp
in
lea
outsl
push
cmp
pop
clc
pop
subb
mov
pop
clc
std
scas
adc
imul
fimuls
mov
sub
jg
dec
add
ret
push
xchg
ljmp
jno
sti
or
jp
dec
loope
std
mov
insl
push
rorb
mov
test
sbb
xchg
sbb
mov
loope
shrb
adc
mov
lods
dec
mov
adc
sbbl
dec
sub
in
push
cmp
pop
dec
jle
test
out
jp
loope
sub
adc
push
insl
lret
hlt
decl
adc
push
xchg
inc
fidivl
xchg
ss
aas
jg
pop
mov
hlt
pop
incl
fld
lretw
mov
push
gs
mov
push
and
and
aad
clc
xor
mov
ljmp
add
sbb
ja
sub
filds
adc
push
stc
ja
fwait
lcall
lahf
pop
jns
iret
add
push
adc
mov
mov
dec
shll
mov
das
add
cmp
into
or
es
jle
pop
mov
mov
cmp
sbb
push
repnz
push
mov
dec
in
das
fldenv
mov
daa
shll
in
mov
or
adc
inc
je
pop
xor
pop
ffreep
inc
mov
cli
push
mov
dec
leave
and
inc
jnp
adc
xor
cmp
push
gs
or
cmpsl
add
outsl
mov
adc
mov
enter
cmpsl
pop
inc
sub
cmp
aaa
push
or
movsl
cmp
jge,pn
jne
jg
call
negb
int3
data16
or
test
movsl
adc
lahf
add
jg
xchg
js
icebp
shll
dec
xchg
push
dec
subb
stos
out
loopne
sbb
aaa
rolb
cld
fwait
dec
adc
shll
cltd
sbb
or
sub
pop
xchg
dec
cwtl
insb
add
nop
cmpsl
repz
aam
notb
sarb
sbb
outsl
rclb
push
cmp
loopne
mov
lds
pop
or
mov
sbb
test
movsb
sub
cltd
sbb
add
xchg
addb
icebp
or
imul
mov
xor
cli
in
cmp
mov
outsl
notl
inc
int3
and
fsubr
cmp
inc
es
lods
push
imul
sbb
cwtl
loopne
mov
add
icebp
xchg
fdivrs
dec
jg
filds
test
lods
lock
mov
inc
or
inc
fists
fsubrp
lods
adc
adc
sub
add
sub
std
test
add
into
icebp
psubusb
je
sbb
jb
rcrb
std
push
or
mov
dec
mov
subl
lcall
sub
fildl
adc
inc
cli
xchg
add
inc
jg
leave
cmp
int
jge
push
jmp
negb
inc
xor
add
arpl
call
mov
addb
mov
mov
or
out
in
outsb
xchg
inc
std
jecxz
adc
sbb
xlat
and
and
mov
jb
sub
sub
sbb
fnstcw
cmp
xor
mov
loopne
dec
lock
emms
lcall
dec
insb
pushf
call
sub
xor
icebp
mov
iret
adcb
pop
lea
icebp
or
push
or
push
in
jno
jnp
movsl
jbe
jge
fildl
lods
in
xchg
test
addr16
mov
push
add
test
lods
stc
rcr
dec
xchg
sub
add
mov
movsl
inc
or
jmp
aas
mov
and
pop
aas
cs
test
adc
sahf
xorb
mov
xor
fcomip
inc
xchg
mov
test
xor
fdivrp
inc
insb
adc
inc
ficompl
loopne
mov
cmp
mov
or
xor
cmpsb
in
das
pop
outsb
pop
lea
mov
pop
push
shll
dec
cmp
xchg
and
sbb
pop
scas
mov
dec
flds
add
mov
movsb
rorb
add
pop
jl
lret
sub
mov
cmp
jg
insl
xor
int3
clc
sbb
imul
mov
sbb
xor
xchg
loopne
xchg
pop
push
mov
inc
xchg
push
in
add
cmpsl
or
hlt
sbb
mov
mov
jnp
fildl
nop
mov
mov
insl
into
dec
adc
or
or
ja
cmpsb
jo
bound
inc
out
and
rcll
das
rcll
push
lea
out
ss
jmp
or
mov
call
rorl
dec
fidivrl
icebp
pop
test
addb
cmp
adcb
das
push
and
cmp
cmp
or
movsl
lea
gs
int3
movsb
int
dec
cmc
pushl
cmp
jmp
pop
popa
or
pusha
jl
mov
push
call
sub
dec
shll
or
jg
mov
mov
stos
sbb
sbb
cmpsl
clc
cmp
cmp
pop
and
pop
out
daa
sbbb
call
pop
inc
jle
getsec
jmp
adc
fcoms
add
adcl
xor
popa
add
ljmp
mov
adc
adc
dec
dec
and
imul
arpl
and
mov
das
xor
call
aad
push
insb
arpl
mov
and
and
push
push
mov
add
or
adc
mov
mov
sbb
nop
add
into
pop
fcoml
std
shlb
clc
fstpt
cwtl
popa
sbb
xchg
dec
movsb
dec
xor
outsl
mov
xchg
push
popf
push
cmp
orl
push
cltd
push
jb
ja
mov
jmp
in
add
insb
push
imul
mov
adc
rcl
jno
xchg
mov
jl
lcall
lea
leave
js
mov
mov
leave
out
jne
ficoml
or
mov
xchg
repnz
arpl
lea
rcrb
out
out
scas
push
and
idivb
fdivrs
jns
lods
bound
push
mov
vmptrst
mov
or
inc
pop
test
aas
mov
push
ja
lods
mov
dec
dec
mov
xor
push
cmp
ret
push
jp
repz
mulb
movsl
out
cmp
push
cld
das
aad
add
ljmp
fbstp
xor
add
dec
xchg
jecxz
push
lret
into
xchg
mov
rcr
bound
movsl
rcr
movsl
and
adc
mov
fcomp
jle
mov
adc
adc
js
aaa
rcr
jbe
imul
pop
mov
dec
out
inc
idivl
divl
loope
out
or
mov
sub
xchg
jge
das
cld
das
cs
in
lahf
stc
les
fs
cmp
add
je
fadds
adc
lods
add
lock
adc
mov
cmp
hlt
fwait
cmp
jge
mov
std
xchg
lret
sub
jecxz
xchg
mov
push
cmpsb
js
ljmp
jmp
ljmp
pop
add
xor
sub
out
push
add
lods
sub
js
and
and
js
mov
sahf
mov
adcl
mov
outsl
push
xchg
fwait
or
cmp
fwait
testl
adcl
dec
adc
pop
or
inc
jmp
insl
cld
mov
imul
cld
lds
scas
mov
mov
lahf
pop
clc
or
xor
call
js
lret
fstpt
pop
iret
or
jo
popf
in
sti
mov
movsl
cs
sahf
and
jp
insb
adcl
jmp
ljmp
xor
sbb
mov
inc
add
out
inc
sub
pop
jnp
movsl
call
dec
sbb
mov
sub
and
leave
inc
inc
xchg
adc
sbb
pop
xchg
adcl
pop
or
fwait
test
scas
dec
mov
loop
sbb
jl
cmp
sbb
or
loop
faddp
mov
or
es
dec
sbb
pusha
adc
push
dec
add
adc
and
jg
inc
loope,pt
mov
addb
sbb
cmc
aaa
push
push
xchg
rcrl
pop
push
arpl
and
jg
jb
dec
jmp
aas
test
inc
push
outsl
or
stos
cltd
popa
bnd
test
lods
jae
xor
test
sahf
push
imul
push
cltd
shrl
inc
inc
int
mov
pop
mov
sti
push
sbb
fstp
push
cmp
dec
inc
push
popa
into
xor
push
lahf
and
mov
das
xchg
loop
jb
pop
cltd
mov
out
xorl
jl
push
add
in
push
or
mov
cmp
and
mov
mov
add
jle
mov
xor
jle
and
mov
pop
dec
inc
inc
pop
jno
pop
cltd
lret
popa
jg
rcl
jmp
es
insb
xor
test
aad
fs
iret
jne
outsl
pop
fidivs
arpl
les
rol
daa
or
test
pop
inc
cmp
push
jnp
jecxz
or
out
lods
push
or
cmp
add
mov
cltd
xor
pop
ja,pn
movsl
outsb
icebp
das
sarl
mov
jmp
fstpt
xor
ja
sbb
ja
xchg
lds
or
out
adc
andl
mov
mov
sub
adc
xor
call
les
inc
pop
lahf
add
test
adc
dec
sbb
pop
mov
mov
das
fidivl
roll
xchg
jnp
or
pop
xor
pusha
mov
pop
rcl
fsubl
adc
lods
xor
and
pop
push
dec
in
aaa
xor
mov
cmc
mov
sbb
repnz
leave
sub
or
in
test
rclb
insb
mov
cld
hlt
pop
subb
pop
sbbl
sbb
adc
add
insl
ss
sub
orb
jg
jle
les
xchg
repz
roll
dec
push
std
enter
out
js
mov
sbb
insb
movsb
sub
rcll
jns
loope
and
jmp
call
les
outsb
dec
in
out
dec
pop
mov
jae
sub
cwtl
sbb
mov
push
cli
scas
insl
sbb
leave
loopne
adc
push
popf
jp
sahf
enter
jmp
xchg
push
in
outsb
push
mov
push
jle
inc
push
clc
mov
lahf
mov
or
push
sbb
pop
mov
sarb
pop
push
popa
or
pop
call
inc
in
jne
shll
test
repz
loope
pushf
sbb
or
filds
nop
sbb
popf
sbb
mov
mov
jmp
pop
push
mov
bound
and
push
or
cs
cmp
outsl
mov
test
loop
imul
mov
xlat
test
cmc
pop
rcr
add
les
xor
inc
xor
dec
or
or
mov
jo
push
ret
shrb
add
nop
xchg
mov
mov
ja
bound
dec
iret
add
call
ds
sub
and
push
pusha
iret
shll
or
lods
decl
insl
and
fdivrs
cmp
mov
fadds
pop
jle
xor
sub
and
cmp
lods
das
pusha
sti
decl
repnz
lcall
pop
sti
fstpt
cmp
dec
out
in
insb
cmp
and
mov
mov
add
call
inc
testb
fnsave
xor
cld
jg
fistpll
jmp
pop
nop
pop
mov
adc
or
cmc
hlt
ja
push
clc
mov
pop
inc
clc
fwait
cli
mov
cs
xor
insl
test
fcmovnu
in
sbb
sti
iret
add
add
fiadds
jno
out
add
or
outsl
test
mov
clc
jbe
out
in
mov
mov
mov
mov
rolb
xor
nop
jbe
inc
push
jmp
jae
xor
push
xchg
mov
nop
xchg
push
sbb
push
imul
mov
mov
fcompl
add
std
inc
mov
pop
cli
fadds
cli
inc
call
cld
jbe
sti
lods
out
mov
cmp
pop
xchg
lods
mov
pop
jae
fldenv
dec
sub
mov
adc
push
rorl
sbb
sahf
push
cmpb
fsub
and
sbb
or
sbb
movsl
aas
shrl
adc
jbe
iret
push
jg
dec
mov
sub
jl
add
dec
jo
or
test
shlb
sahf
sub
xchg
or
inc
pop
mov
push
lds
incl
add
jb
mov
dec
mov
clc
adc
mov
das
icebp
repnz
in
adc
inc
call
jge
clc
ja
sahf
jmp
jg
sbb
pop
xchg
push
adc
pop
pop
mov
xchg
mov
stos
test
jbe
dec
or
xor
mov
rolb
pop
mov
jmp
and
jmp
call
mov
fdiv
sti
cltd
xchg
mov
adc
aam
hlt
cmp
add
mov
orl
sti
pop
stos
jg
and
mov
add
test
jp
lock
jo
or
inc
and
jae
ja
dec
out
mov
push
adc
or
imul
and
jns
fisttpl
test
push
mov
roll
cs
aaa
test
add
xchg
xchg
or
and
mov
xchg
int3
in
jge
pop
cwtl
inc
sub
aam
call
test
xchg
icebp
adc
adc
push
push
inc
loop
inc
insl
mov
jle
test
mov
scas
ret
add
gs
imul
add
lods
mov
sbb
mov
leave
int3
cmp
and
stc
sbb
add
cli
ja
test
adc
ljmp
sub
cltd
xor
push
inc
mov
testl
mov
inc
xchg
imul
jbe
sub
dec
enter
jecxz
cli
adcb
insb
cmp
cmp
clc
and
and
push
pushl
rorb
and
jmp
push
sbb
pop
add
mov
fisttpll
dec
mov
dec
push
insb
mov
loopne
push
xchg
sbb
xchg
pop
shlb
leave
adc
mov
and
cmp
adc
xor
fildll
insl
pop
outsb
mov
add
mov
popf
cld
xor
rcr
sub
out
lret
in
dec
jg
cmp
and
sti
call
fbld
pop
mov
dec
std
or
cli
xor
movsl
stos
lcall
and
or
adcb
ljmp
or
push
mov
mov
xorb
and
push
loopne
mov
sbb
push
push
dec
cltd
pop
push
add
ffreep
xchg
lea
push
pop
push
xor
inc
cld
ret
xchg
out
jge
jp
dec
inc
or
pop
ljmp
sub
dec
xchg
test
mov
nop
sub
xor
xchg
outsb
rcr
pop
push
mov
ficoml
jmp
adc
scas
movsl
add
add
and
cmpb
int3
xchg
fdivl
jecxz
pop
movsb
ss
push
in
mov
mov
call
adc
cmp
dec
sbb
lea
std
out
push
inc
call
call
sbb
into
fldt
lret
lea
add
inc
xchg
sbb
roll
test
fucomi
or
mov
push
rcll
cld
mov
jns
in
sbbb
xor
mov
rorb
xor
mov
mov
subb
mov
cmp
pop
jae
rolb
push
stos
jecxz
sub
fisttps
or
test
xor
shl
xchg
test
psadbw
xlat
in
inc
roll
fcmovne
push
sub
icebp
add
movsl
push
pop
add
outsl
mov
pop
add
add
dec
mov
jno
incl
xchg
and
xchg
jge
scas
stc
pop
sub
icebp
lret
add
xorb
add
mov
outsl
add
jmp
dec
adc
fcmovu
ja
dec
cmp
adc
fisubrs
fmull
mov
pop
out
call
jg
ss
test
pop
sub
incb
pop
je
loope
mov
sti
mov
loopne
adc
adc
jae
pop
sbb
mov
jne
xor
scas
das
add
pop
push
add
inc
fistpll
dec
and
std
add
push
pop
inc
mov
in
lea
push
pop
push
lock
push
jb
lods
mov
loop
mov
and
push
repz
push
lock
aaa
mov
scas
aaa
fsubs
sbb
push
dec
adc
push
cld
dec
movsb
outsl
pop
jns
bound
adc
push
outsb
and
mov
inc
jecxz
xchg
xchg
pop
or
jl
or
call
js
cmp
and
adc
scas
pop
adc
or
ds
lds
inc
movsl
out
call
pop
sbbb
ja
pusha
lret
and
adc
mov
aaa
stos
fsubl
mov
mov
sti
and
call
xor
outsl
and
mov
in
test
int
in
lods
inc
lock
mov
xchg
ds
adc
or
and
sahf
xchg
loopne
cmpb
xor
cmc
inc
out
es
test
xchg
popa
push
add
pop
pop
sarl
lret
insl
icebp
jg
xlat
jecxz
sub
jl
popf
mov
sbb
clc
or
jnp
ret
incl
lea
jbe
dec
mov
clc
idivb
mov
adc
mov
repnz
jo
xchg
into
lcall
xchg
or
dec
in
sbb
pop
sahf
addl
lcall
jecxz
loopne
daa
mov
popf
xorl
adc
mov
jg
out
movsb
sarl
lds
push
lds
and
xchg
test
js
or
sbb
shll
enter
mov
push
ljmp
cs
jg
out
or
ss
addr16
sub
inc
cli
fsubrl
mov
sbb
or
add
cld
jg
dec
nop
sub
addb
clc
add
out
cli
adc
loope
xor
inc
insb
mov
clc
fsub
movsl
push
xor
inc
inc
cmp
push
mov
mov
xchg
add
and
or
mov
fwait
mov
call
mov
ds
ds
sub
dec
scas
or
fidivl
int
stos
or
xor
cmpsl
push
dec
mov
xchg
adc
sbb
adc
ud2
es
test
test
push
pusha
jns
pushw
and
stos
push
pop
outsl
fs
mov
movsl
jne
push
or
lods
sti
outsl
mov
pushf
and
mov
sub
adc
jmp
insb
movsl
and
test
into
pop
pop
cwtl
nop
add
mov
add
push
adc
dec
inc
xchg
and
inc
std
stos
sti
pop
mov
ja
inc
mov
in
xchg
ret
les
icebp
sbb
add
mov
fisttps
and
icebp
ret
aam
addr16
jo
and
sub
push
fdivrs
add
mov
pop
stc
pop
clc
in
loopne
push
js
xor
enter
test
enter
pop
cmpb
cmc
mov
push
sar
sbb
push
cmp
or
add
clc
iret
xchg
xor
movsb
loop
adc
add
lods
pop
and
and
icebp
divb
add
sub
inc
fidivs
xor
mov
ficoml
and
and
xor
inc
and
or
mov
mov
pop
in
les
mov
push
and
sub
or
inc
cmp
inc
pop
cmp
push
add
push
and
pop
mov
cmp
mov
or
mov
add
fcoms
jno
stos
mov
add
lret
jl
pop
mov
fistpll
cmp
int3
push
adc
out
dec
subl
push
inc
mov
or
pusha
sub
mov
ljmp
into
lds
imul
outsl
sbbl
ja
or
adc
add
xor
mov
push
scas
pop
push
xchg
dec
xlat
sbb
out
outsl
outsl
dec
hlt
mov
or
inc
mov
icebp
mov
vmovss
or
inc
das
sub
in
xlat
cli
push
mov
ljmp
data16
mov
fstp
int3
lea
cmp
lods
pop
cli
aaa
call
mov
push
dec
dec
pusha
xchg
fsubrl
pop
lods
aas
repnz
xor
rolb
inc
dec
pop
lock
mov
aam
shll
push
rclb
fnstcw
or
xor
pop
add
xor
cltd
movsl
push
fs
andl
imul
mov
fildl
inc
jg
mov
jo
shl
push
dec
int3
faddp
fimull
push
inc
and
notb
dec
cmp
in
call
lahf
std
adc
stos
pop
out
add
ljmp
push
jp
hlt
add
xor
sub
add
repnz
test
clc
jg
fbstp
ret
mov
pop
icebp
jg
inc
aas
shll
dec
ja
in
test
lcall
cmp
mov
daa
insl
insb
movsb
push
repz
mov
jbe
daa
mov
sbb
push
mov
push
fidivrl
mov
hlt
add
dec
add
es
les
sub
xlat
jae
xor
js
outsb
lds
jge
ds
call
data16
cmpsb
cmpsb
or
pop
adc
sbb
jge
outsb
push
mov
pop
mov
loope
mov
pop
nop
stc
inc
pusha
jnp
sub
in
addl
mov
scas
and
in
push
push
cmpb
shlb
fists
adc
dec
in
imull
add
jle
dec
inc
sub
subl
sbb
mov
idivb
adc
or
outsb
sbb
loope
sub
mov
std
mov
mov
incl
mov
aaa
ret
push
pop
push
pop
pop
fucomip
xchg
outsb
jle
mov
cmp
jl
mov
fs
std
stc
mov
rolb
jg
insl
aam
add
lods
cmp
aas
rcrb
into
hlt
sbb
push
pop
jbe
lods
mov
add
pop
cmp
into
or
and
inc
jmp
shl
mov
or
lock
mov
outsb
jno
sbb
ljmp
cmpsl
movsl
add
mov
outsl
imul
mov
pushf
mov
das
jp
and
xchg
or
xor
mov
ljmp
in
rorb
enter
ds
xchg
fmull
scas
pop
mov
decb
adcb
aam
sti
xchg
insl
inc
ja
inc
mov
lea
repz
sti
insl
mov
ss
les
loopne
inc
and
fisttpl
adc
sub
dec
mov
lahf
andl
adc
push
cli
test
xchg
leave
mov
fcom
add
jne
push
jmp
mov
adc
insb
push
adc
jnp
andb
ss
sbb
daa
mov
addb
int3
rcll
add
xchg
out
and
adc
mov
mov
xor
iret
data16
pushf
xchg
mov
cli
or
push
push
out
fnstcw
loop
adc
test
cmc
and
std
or
pop
cmp
fidivrs
fdiv
dec
sub
fbld
inc
add
or
lcall
or
imul
je
cmp
xor
pop
push
dec
cld
dec
sub
jle
ficoml
add
sub
sub
insl
ffree
loopne
mov
jg
xlat
jne
loop
adc
sti
and
lret
mov
out
push
push
insb
add
out
inc
push
rcrl
out
fildl
les
addr16
clc
push
jbe
jne
scas
cmc
mov
fistps
pop
xchg
dec
fisubrl
dec
ljmp
mov
or
jb
rcll
pop
push
push
adc
imul
lret
mov
inc
insb
add
mov
rclb
mov
or
in
xor
dec
aaa
hlt
rcll
mov
sbb
add
jmp
es
add
cltd
cld
xor
cwtl
mov
or
push
inc
mov
jnp
in
push
sub
mov
mov
mov
fistps
sub
inc
xchg
and
pop
cmp
mov
pop
bound
popf
mov
inc
and
adc
add
cmpb
std
lret
push
inc
mov
loope
cltd
dec
pop
push
andl
and
pusha
push
and
xor
stos
sbb
or
xchg
jl
loopne
aad
and
push
mov
push
or
loopne
xor
and
rorb
inc
push
cmpsl
lcall
aam
mov
dec
incl
pop
mov
add
scas
insb
outsl
cli
mov
push
test
and
mov
push
dec
pop
int
ljmp
add
int
mov
lods
jnp
mov
nop
pop
negb
test
jecxz
cmp
cld
movb
and
push
sti
push
pop
inc
outsl
shrl
xchg
cmp
adc
jne
lods
cmp
and
test
mov
push
xlat
es
push
add
fwait
push
and
mov
insb
add
pusha
mov
es
adc
pop
push
test
push
mov
sub
inc
aas
jb
pop
push
daa
lock
xlat
sub
or
lds
lods
test
ret
and
mov
hlt
enter
sahf
mov
pop
sbb
insl
adc
mov
inc
pop
in
repnz
jge
idiv
imul
mov
js
mov
rcll
cs
fucomip
shll
test
mov
fnstenv
fldcw
ucomiss
jp
imul
aam
lahf
xor
testb
and
xor
imull
das
jns
jp
add
pushf
movsl
push
mov
outsb
push
dec
lret
cld
aaa
sub
iret
shlb
sbb
mov
fsubl
inc
lds
pop
leave
inc
in
sub
loope
jo
rclb
repz
xor
mov
sub
cwtl
idivb
daa
sbbl
inc
mov
or
cwtl
icebp
mov
stos
dec
dec
mov
jnp
cmp
adcl
ja
jge
rcrl
movsl
imul
out
movsl
mov
add
mov
inc
std
out
cmpl
shlb
push
test
xchg
aam
cs
push
aad
and
jmp
add
push
push
jnp
sub
xchg
inc
das
add
dec
int
fmuls
xor
in
mov
popa
mov
xor
xchg
push
lds
lcall
adc
mov
mov
pop
jle
pop
mulb
inc
mov
cwtl
inc
dec
call
es
and
sarl
fs
loope
mov
mov
sahf
xlat
stos
mov
mov
movsl
sbb
cmp
push
pop
and
cli
xorl
adc
push
push
xchg
sbb
mov
test
sub
dec
push
dec
aad
aam
clc
enter
adc
adc
mov
fiaddl
mov
neg
icebp
jne
movsl
ja
fadd
push
mov
add
lea
ret
fsincos
test
push
popa
mov
mov
xor
sub
js
insb
insl
or
cmp
mull
outsl
dec
xor
xchg
cmc
mov
dec
xchg
push
add
test
movb
das
hlt
mov
shrb
sarb
push
add
cmc
jp
adc
xchg
jecxz
xorb
xlat
xor
clc
push
push
mov
lret
hlt
add
ljmp
mov
mov
and
cld
mov
mov
rcr
mov
mov
jne
daa
mov
mov
pop
stc
lock
orl
loop
and
add
dec
shrb
pop
add
or
cmpsl
cmp
lcall
je
test
add
adc
scas
cwtl
or
fdivl
je
pop
std
pop
or
aaa
mull
adc
aad
ret
stos
roll
fdivr
sar
and
mov
sbbl
inc
xchg
xchg
add
outsl
pop
pop
dec
mov
dec
scas
fwait
cmp
loop
xchg
add
xlat
sti
or
push
mov
adc
mov
scas
stos
movsl
sbb
jmp
mov
xorb
jmp
jecxz
mov
scas
push
test
or
pushf
movsb
mov
xor
cmp
cmc
insl
test
lahf
sar
xchg
cld
cmp
imul
jle
adc
push
hlt
adc
sub
jne
inc
fsubl
ret
push
xchg
fiadds
sti
adc
mov
mov
test
inc
inc
lcall
mov
jo
dec
outsb
and
and
pop
add
pop
or
movsb
loopne
mov
sbb
fsubs
add
dec
inc
adc
dec
mov
movsl
outsb
mov
and
add
sar
das
into
add
adc
lock
adc
mov
or
jg
dec
push
sub
sbb
mov
inc
push
cli
js
or
push
mov
cmpsb
mov
sub
aam
hlt
addr16
and
cmc
hlt
jbe
mov
lahf
jae
or
push
push
mov
jo
cmp
adc
dec
movsl
and
lods
mov
pop
mov
mov
jp
or
dec
and
decb
sub
dec
aad
dec
sti
dec
repz
cmp
adc
ret
and
popa
sub
jmp
test
icebp
aas
dec
int
shll
sub
in
pop
mov
or
ja
inc
pop
ret
jl
aaa
cwtl
fnstsw
jb
pop
ret
sbb
mov
insl
cmp
jmp
ljmp
dec
adc
push
cld
pop
mov
mov
sbb
data16
and
test
sub
fistl
inc
mov
xchg
add
out
fidivrs
pop
jnp
cmp
cmpsb
mov
lcall
test
jge
leave
and
inc
sti
or
xor
cld
insl
sub
fidivl
push
mov
xlat
add
xor
and
ret
pop
clc
aaa
jl
lcall
cs
mov
sub
roll
nop
adc
lea
jmp
pop
push
sub
andl
jge
movsb
mov
ret
pop
sbb
push
loopne
pop
adcl
loope
inc
push
mov
jne
jge
dec
mov
mov
in
jg
sub
cmc
repnz
ret
roll
daa
fsubs
push
ljmp
adc
ljmp
out
and
movsl
out
adc
push
arpl
rorl
jo
stos
sarb
push
and
fidivrs
mov
pusha
sub
pop
test
mov
and
inc
lock
jnp
decl
loope
mov
pop
lea
add
sbb
cli
cld
hlt
sbb
jnp
bound
les
dec
xchg
repnz
mov
fwait
repnz
inc
mov
test
lret
sub
mov
in
call
dec
push
jle
or
ficompl
cmp
push
ja
sahf
adc
clc
or
cmp
scas
or
cmp
mov
adc
paddq
idiv
dec
jb
jg
sub
orb
sbbb
call
pop
in
inc
jo
cmpsl
jle
fxam
mov
jg
movsl
dec
cs
mov
push
fisttps
xorb
push
fists
push
outsb
sbb
adc
repz
in
nop
add
jle
jle
pop
dec
stos
sbb
cmp
xorl
andl
add
xor
mov
je
in
inc
rorb
movb
addr16
xchg
rolb
dec
aad
mov
jno
jge
mov
dec
pop
loope
jmp
cli
inc
cmp
outsb
cwtl
mov
fdivrp
filds
das
xchg
mov
add
adc
jp
sub
push
out
or
inc
push
call
les
xchg
dec
in
lods
xchg
mov
sub
hlt
push
outsl
jge
subb
jg
inc
xchg
inc
lahf
jmp
inc
hlt
push
inc
ss
fbstp
in
popa
mov
test
repz
mov
sub
fsubs
mov
cmp
pop
loopne
jg
idiv
out
and
lea
jecxz
movb
jb
add
fcoms
pop
subl
aad
call
inc
mov
lea
mull
ja
insb
mov
cli
pop
pop
loop,pt
imulb
mov
or
mov
and
jmp
mov
or
clc
and
dec
add
push
and
stos
jb
ret
mov
xchg
in
outsl
jge
add
or
cmpl
xor
outsl
adc
jmp
sub
dec
les
sbb
sbb
ljmp
mov
or
xchg
ljmp
xor
data16
ret
fisttps
aad
sub
add
add
dec
push
std
iret
dec
cmp
popf
add
xor
mov
cli
jnp
sbb
adc
dec
les
hlt
xchg
std
or
jae
lock
xchg
pop
jge
decl
ffreep
dec
andw
loope
scas
cmpsl
sbb
mov
adc
js
notb
cli
and
sub
mov
and
push
push
mov
shrl
adc
add
and
mov
aaa
fdiv
ret
lret
mov
aaa
lds
push
ret
sbb
pop
sbb
aaa
ja
or
or
mov
push
add
lock
popf
lret
fists
jb
xor
and
sbb
lret
and
add
sbb
jmp
stos
inc
sbb
inc
pop
xchg
enter
dec
or
mov
insl
movsb
mov
xchg
mov
cmp
pop
imul
lret
pop
orb
jbe
add
cltd
sub
pop
xchg
dec
hlt
sub
subb
pop
std
sbb
stc
pop
push
mov
stos
icebp
in
leave
adc
or
fnstsw
call
mov
pop
add
mov
push
nop
mov
add
dec
cmp
push
push
inc
pop
aaa
in
pop
ss
cli
adc
shll
mov
das
or
pop
or
outsl
mov
or
jne
mov
aam
repz
ss
rcrb
inc
subl
jne
adc
andb
dec
add
mov
mov
or
fwait
test
dec
cmpb
push
and
cwtl
aas
pop
xchg
cmc
gs
cmp
jnp,pt
pop
and
and
xor
mov
jg
or
outsb
jno
sub
std
and
jle
fiaddl
pop
js
pop
pop
add
xor
dec
inc
push
pop
clc
jo
movsb
jne
or
rorl
push
mov
sbb
lea
bound
cli
jl
call
mov
sti
test
pop
jmp
aaa
push
or
xor
mov
sar
int3
shrb
add
sbb
pushf
push
sti
cmp
das
dec
or
pop
or
in
push
scas
cli
and
sbb
lock
lret
ret
push
add
cmc
iret
dec
sbb
mov
sbb
mov
sbb
inc
leave
inc
sub
les
adc
cmp
cmovo
dec
mov
cs
daa
xlat
faddl
adc
imull
and
mov
mov
roll
mov
add
mov
push
mov
shrb
daa
jle
pop
bound
adc
jbe
aaa
and
out
pop
sbb
lock
shr
addr16
mov
inc
sarl
add
push
mov
dec
push
hlt
mov
or
lods
lds
cmpsb
popf
fisttpll
movsl
push
pop
pop
arpl
lea
xchg
adc
pop
int
movsl
pop
push
shl
and
cwtl
arpl
xor
cmpsb
sub
jge
pop
test
out
pop
loop
push
ljmp
mov
pusha
pop
cld
pop
push
cli
sub
loope
inc
push
sub
incl
add
test
popa
in
mov
jbe
sub
aam
jno
push
daa
pop
fists
push
push
ja
sbb
adc
add
jle
ret
or
or
mov
rcll
je
sbbb
pop
lahf
add
and
adc
and
pop
lock
xor
ret
into
daa
pop
loopne
fucomp
mov
push
xor
sbb
cmp
push
in
and
dec
pop
cli
loop
ja
pop
out
leave
and
add
pop
sub
pop
adc
in
jmp
icebp
test
out
stc
imul
pop
lcall
xor
rcrb
aad
or
setle
pop
pop
push
leave
add
cmp
rolb
hlt
mov
push
imul
cmpsb
xchg
lahf
adc
sbb
mov
mov
incl
add
inc
add
mov
push
int3
lock
in
or
mov
out
inc
push
out
in
adc
fstpt
lock
sbb
pusha
xor
hlt
or
call
fstpl
insl
sti
adc
and
nop
or
jmp
cmp
sub
pop
loopne
cmpsl
mov
call
and
adc
push
pop
inc
xchg
aaa
jge
cmp
lcall
int
xor
repz
out
cmovp
clc
or
inc
and
ret
xchg
xchg
dec
xor
fwait
jle
hlt
inc
ret
andb
rorl
sub
or
bound
sub
dec
ljmp
mov
shrl
push
rclb
mov
mov
loop
js
mov
rcr
inc
out
inc
mov
dec
loopne
jb
je
sbb
xchg
aaa
push
shlb
push
push
and
push
fistpll
xlat
push
xchg
inc
pop
mov
insl
subb
loopne
movl
fsubs
pop
lods
rclb
cs
outsl
push
fsubrs
arpl
in
pop
adc
sbb
jecxz
pop
mov
and
fnstsw
mov
shl
mov
insb
lret
loopne
jne
aas
outsb
movq
cmp
jnp
dec
inc
orb
fbld
mov
fidivl
push
leave
stos
pop
das
cld
or
lret
fnstcw
mov
cmp
cmpsb
xor
lret
xchg
jg
loop
jecxz
inc
sbb
mov
mov
insl
in
push
in
ljmp
dec
cli
xchg
xchg
mov
insb
aaa
insl
mov
dec
pop
out
pop
mov
idivl
into
sub
dec
js
jp
rcrb
push
mov
nop
cltd
ret
jecxz
mov
rclb
pop
xor
pop
jo
jg
jmp
negb
pop
rcrb
xchg
subb
pop
or
sub
insb
shlb
add
xchg
pop
fbld
sbb
cmpsl
std
repnz
lcall
and
orl
das
mov
scas
cwtl
lea
cld
add
test
adc
inc
pop
ja
dec
aam
sbb
call
lcall
scas
bound
mov
dec
or
int
adc
inc
shl
inc
ds
xor
je
add
lahf
inc
cmp
mov
mov
imul
pushl
fcompl
cli
ficomps
adc
mov
and
fisubs
push
push
shl
jno
daa
cs
das
mov
es
push
loop
jbe
sti
push
fbld
xchg
push
test
jecxz
xor
ljmp
xchg
mov
dec
jo
jns
fimull
js
adc
popa
xchg
dec
push
mov
add
push
sub
shlb
mov
jbe
add
cs
jmp
or
sbb
aaa
jg
xchg
mov
pusha
xchg
out
xor
dec
sbb
movsl
lea
mov
mov
sub
cmc
lea
ljmp
mov
les
cmp
addr16
push
ficoml
xchg
push
sbb
push
pop
xor
mov
rorb
pop
loop
daa
dec
sbb
jmp
or
mov
cld
hlt
ds
imul
stc
cwtl
jmp
inc
jmp
outsl
mov
push
stos
pop
jo
sbb
jbe
and
push
int
sbb
dec
sbb
rcl
sbb
jnp
mov
lods
cld
f2xm1
inc
mov
and
or
sub
pushf
or
sti
pop
cmpsl
cmove
mov
cld
inc
in
test
pop
mov
xchg
xor
lret
mov
js
test
insb
dec
repnz
mov
lret
jnp
scas
notb
sub
push
andl
cmpsb
int3
pop
lret
sbbl
push
pop
pushf
jmp
call
cs
test
lock
pop
cld
pushf
push
or
mov
icebp
jg
jge
add
hlt
mov
adc
into
adc
mov
pop
sub
xchg
popf
inc
mov
jg
aas
aad
call
lods
pop
into
xlat
insl
outsl
mov
pusha
rorb
fisttpll
fistps
call
inc
nop
or
stc
sbb
xchg
jns
lret
dec
test
dec
jnp
jg
andb
sub
inc
test
jmp
dec
int3
jle
jge
cmc
pop
push
movhlps
stos
cmp
adc
sbb
scas
pop
cli
cmpsl
xor
aad
scas
push
xorb
add
jge
push
and
bound
fndisi(8087
jmp
sahf
xchg
dec
push
sub
mov
pushf
inc
push
enter
scas
jg
je
fbstp
pop
ja
sub
das
lock
aad
jnp
or
and
aad
mov
and
in
push
loope
fcompl
fidivs
cld
xchg
mov
cli
jno
clc
xchg
or
jge
inc
mov
sti
add
aas
sbb
xchg
inc
or
sbb
fsubs
hlt
inc
cmp
lahf
clc
add
push
cmp
xor
cli
rclb
int
popa
jle
fs
add
xchg
hlt
rcrb
fmuls
shll
cmc
adc
in
out
cli
xor
cli
fisttpl
outsb
push
dec
inc
dec
loopne
repz
insl
ja
test
inc
mov
adc
movsb
sub
scas
pushf
mov
out
test
in
cmp
sbb
inc
call
and
xlat
sbb
dec
sub
inc
lock
loopne
cld
pop
mov
ret
sbb
inc
and
loopne,pt
js
cmp
add
jg
adc
inc
enter
stos
inc
aam
mov
pop
dec
xlat
add
shll
inc
or
loopne,pn
xchg
movhps
jmpw
sub
in
addl
arpl
jb
inc
push
dec
fdivr
mov
mov
adc
gs
adc
imul
scas
pop
mov
mov
sub
adc
lea
dec
stos
and
rorl
xor
lods
or
decb
and
or
fisttpl
xchg
insb
xor
lock
adc
aad
jns
sub
mov
iret
add
addr16
mov
pop
jle
gs
enter
jmp
sub
lcall
pop
mov
sbb
mov
cmp
mov
add
stos
loopne
iret
arpl
jecxz
jp
jecxz
jle
lret
out
jo
add
jge
leave
jns
inc
sbb
ret
jae
js
ror
test
lahf
jg
sub
mov
ret
inc
arpl
and
mov
mov
pusha
mov
xlat
cmc
adc
add
mov
arpl
arpl
mov
nop
mov
bound
mov
push
imul
sub
cld
popa
inc
jo
popa
xor
sbb
xor
mov
xor
test
jb
xchg
dec
cld
add
test
pop
aad
mov
jb
pop
stc
or
sub
test
loop
push
enter
bound
dec
loop
push
jecxz
adc
sbb
cmp
inc
xchg
std
loopne
into
ficomps
jp
subb
clc
lea
cmp
div
sti
lea
mov
push
inc
decl
xchg
lcall
sti
fbld
std
push
xor
dec
add
jne
out
call
fisttpl
adcl
nop
pusha
push
pop
icebp
jg
lahf
mov
xor
adc
and
adc
loope
sbb
fsincos
xor
push
std
movsl
in
jb
in
adc
movb
pop
pop
add
jo
or
xor
arpl
sbbb
pop
inc
cmp
fcomps
mov
aam
sar
dec
aas
xchg
ds
inc
out
mov
cmp
cmp
xchg
add
inc
xchg
sub
and
stc
adc
mov
cli
sarb
xor
lods
jno
rorb
lock
out
ljmp
andb
or
inc
imul
jmp
movsb
jle
gs
leave
jg
or
ret
rorl
push
es
cmovo
pop
movsb
and
stos
aas
divb
mov
insb
dec
and
mov
pop
loop
mov
cli
rcrl
adc
js
inc
cmp
push
addl
and
arpl
add
push
fidivl
data16
bound
adc
inc
pop
jnp
jg
mov
add
adc
mov
jge
mov
mov
mov
ja
xchg
std
mov
dec
jb
stos
lods
ljmp
popa
cmp
adc
rclb
scas
push
insl
sbb
pop
push
inc
ljmp
xchg
lret
jecxz
ja
mov
and
clc
mov
das
or
decb
dec
adc
icebp
sbb
and
sbb
mov
dec
pop
jbe
test
add
push
stc
pushf
xchg
or
ficoms
dec
pop
dec
or
pop
push
in
mov
fnstsw
pop
ret
pop
scas
std
shlb
cmc
fwait
push
pop
ret
mov
dec
sbb
loop
cmp
test
push
add
popf
aaa
xlat
in
imul
aam
popf
push
aas
push
xchg
mov
mov
cmpsl
push
or
test
dec
mov
xchg
push
test
or
cli
dec
mov
push
push
aam
mov
pop
jmp
incb
aam
imul
daa
mov
inc
jg
js
dec
sbb
das
pop
pop
cmp
sbb
inc
mov
pop
inc
mov
lock
fidivrl
or
std
mov
stos
repz
arpl
xchg
sub
lods
cltd
xchg
mov
push
lock
and
push
subb
in
dec
mov
pop
outsb
or
cmp
add
hlt
pop
or
inc
sbb
lahf
repz
xor
int3
mov
inc
outsb
and
clc
sbb
sbb
std
mov
incl
out
pop
fs
lcall
dec
xorb
dec
inc
hlt
stos
push
mov
outsl
xor
dec
mov
push
mov
sub
cli
mov
pop
mov
adc
arpl
xchg
aad
xor
test
xchg
sub
leave
and
movsl
lods
outsb
push
fiadds
pop
xor
mov
ret
mov
jne
jae
jecxz
pop
fcmovu
mov
inc
loop
sahf
mov
and
clc
fsubr
mov
int3
test
ds
stc
ja
repnz
and
mov
out
mov
sub
xor
mov
or
outsl
addr16
xor
dec
sub
insb
sbb
mov
push
lea
and
clc
and
jno
mov
xchg
or
adc
mov
call
in
cld
inc
mov
js
subb
sub
mov
popf
lock
mov
pop
test
shrl
les
fisttpl
pop
popa
leave
adc
frstor
jno
sahf
cwtl
jecxz
cs
jle
lds
lea
clc
imull
insb
xchg
mov
lock
loope
mov
xchg
sub
push
xor
les
cmc
test
jne
dec
sbb
je
inc
mov
outsl
mov
ss
push
lods
cmp
call
xchg
pop
rclb
push
addb
out
cmc
jb
xor
test
stos
out
sub
dec
adc
push
jg
test
inc
mov
lret
inc
loope
mov
pop
cmp
outsb
sub
cwtl
out
pusha
dec
inc
sub
cld
lea
std
fimuls
mov
fsubrs
xchg
ss
dec
push
jb
aaa
cmpsl
js
pushf
sahf
cli
sti
test
outsb
inc
scas
inc
decl
in
sti
addb
xor
adc
cwtl
js
cs
mov
jbe
jle
jle
lret
mov
fistl
push
inc
jmp
mov
popa
push
cmc
push
xor
test
pop
mov
fists
adc
dec
and
leave
push
pusha
popf
push
xor
xchg
mov
cmp
xor
incl
adc
std
fistpll
cli
sub
adc
or
hlt
xorb
stos
test
imul
aam
xchg
or
test
andb
pop
loopne
jne
pop
and
and
cli
lcall
adc
or
and
andl
lock
pop
aas
xor
xor
mov
cmp
and
sbb
mov
test
dec
es
cmp
sbb
fstl
loopne
decl
icebp
push
insl
pop
or
mov
mov
inc
cli
gs
and
mov
push
cmp
aas
rclb
add
mov
out
fisttps
lret
decl
pushf
dec
les
xchg
xor
cs
or
inc
mov
or
idivb
subl
dec
sbb
add
or
lods
cld
mov
cmp
jg
fs
nop
popa
sbb
js
mulb
add
out
push
clc
jmp
push
outsl
rorl
push
pusha
sbb
mov
js
adc
stos
ja
pushf
stos
rorl
rcll
or
test
icebp
dec
cmp
push
dec
pop
jg
hlt
xor
scas
or
mov
iret
divb
shlb
rorb
std
imul
jmp
ret
inc
pop
loope
pop
xor
mov
mov
fistpl
out
adc
addr16
pushl
stos
mov
lret
stos
adc
daa
inc
add
fldenv
movsl
outsl
mov
icebp
cld
rol
insb
cwtl
xchg
out
pop
fiaddl
mov
cmpsl
push
stos
cs
jge
das
fbstp
imull
dec
icebp
sar
sub
push
jg
inc
adc
pop
sub
es
mov
lds
hlt
or
out
ja
mov
xchg
inc
mov
pop
cli
dec
std
inc
xor
or
add
repz
js
mov
and
mov
in
sub
test
lds
aas
mov
cmp
push
jne
xchg
imul
call
inc
lcall
inc
clc
push
pop
sbb
sbb
fsubl
jp
rcr
pushl
push
fildll
es
pop
mov
les
mov
shlb
xchg
pop
aas
xlat
lcall
fsubrp
adc
movsl
je
push
mov
sub
or
rorb
fmull
cmp
xchg
jbe
adc
lods
inc
inc
xchg
sub
sahf
loop
pop
loopne
sub
push
testb
mov
cld
pop
subl
scas
push
jle
sbb
dec
loopne
xor
mov
testb
std
lods
in
dec
mov
xlat
dec
scas
insb
scas
mov
sbb
insb
cmp
jg
jg
xchg
mov
xchg
push
lds
inc
push
mov
pop
js
decl
popf
insb
jo
movsl
mov
mov
pop
and
mov
ficompl
and
inc
xor
or
push
jmp
add
lods
out
add
push
fnstsw
dec
clc
inc
insl
subl
mov
xchg
stos
sub
xor
insb
cmp
sub
jecxz
push
or
fadd
and
leave
jae
add
mov
cmp
xchg
xor
sub
sub
add
push
fmuls
inc
pop
mov
push
pop
xor
dec
fimull
inc
les
adc
or
inc
arpl
jle
xor
pop
out
jbe
add
inc
das
mov
and
aaa
pop
out
push
aad
xchg
ja
outsl
clc
mov
xchg
lcall
pop
das
add
cld
cmpsl
adc
inc
std
xchg
mov
sbb
js
enter
cvtps2pi
das
pop
jl
cmc
scas
mov
scas
pop
and
in
out
loop
sub
push
adc
mov
sub
cs
xchg
and
ret
lahf
sbb
pop
lods
rcrb
les
cs
hlt
shlb
push
push
cltd
addr16
sbb
rorl
hlt
inc
mov
add
pcmpgtb
mov
jge
pop
cs
push
cmc
or
inc
fs
push
mov
shll
lgs
mov
mov
ret
adc
mov
mov
cmp
fidivrl
popf
lock
push
sub
cmp
fmull
pushf
mov
icebp
jbe
andb
pusha
aas
xchg
imull
sbb
pusha
sbb
lret
test
xchg
or
aad
inc
pop
fdivrl
sbb
push
lods
inc
inc
lods
inc
fsubrl
or
mov
jge
xchg
sub
cld
and
shlb
rolb
stc
call
js
xor
adc
sti
inc
pop
es
mov
push
lea
push
adc
push
pop
icebp
negb
xchg
or
rcrb
aaa
mov
pusha
stos
lahf
push
repnz
iret
add
xlat
mov
repnz
out
cmp
sbb
das
insb
loop
mov
mov
cmp
frstor
icebp
jecxz
sub
loopne
js
or
jne
aam
ljmp
daa
je
jo
shlb
cmp
movl
rorl
mov
adc
xor
and
mov
adc
das
cmp
pushf
out
mov
fildll
sub
dec
or
lods
sbb
cmp
add
sub
lock
ret
fistl
xchg
cmpsb
lods
sahf
mov
stos
add
cmp
mov
pushl
push
ljmp
dec
cld
das
mov
cmp
aam
outsl
push
sbb
jbe
push
aaa
loopne
roll
mov
jg
push
dec
pop
jne
and
push
in
inc
and
jmp
mov
hlt
pop
ret
cmpsl
sub
dec
call
lock
push
and
jle
pop
or
cmc
dec
jmp
pop
loope
sub
leave
lret
jbe
out
ljmp
and
int3
sub
mov
in
pop
fwait
xchg
mov
push
adc
clc
lret
xorb
jge
pop
mov
adc
mov
xor
outsl
mov
mov
add
sub
push
inc
sub
pop
mov
pop
adc
add
cld
fwait
lea
mov
outsb
pop
adc
and
and
inc
and
xlat
in
mov
test
aas
subb
push
and
sbb
cli
aas
jno
pop
ljmp
pushf
iret
out
xor
test
ljmp
in
cmova
les
adc
sarb
add
pusha
push
addl
mov
xor
pusha
xor
mov
push
mov
enter
inc
push
mov
ja
jl
adc
dec
jbe
and
movsl
das
cld
pop
pop
clc
dec
and
pushf
loope
and
cld
lea
cmp
or
jge
mov
icebp
xor
insb
pop
dec
xor
fbld
stos
add
adc
aad
adc
gs
fbld
aad
lahf
hlt
lahf
or
jns
lret
jmp
outsb
push
es
movsb
xor
loope
ret
mov
or
cmpsl
mov
cld
cwtl
in
enter
stos
rclb
or
xlat
push
mov
mov
mov
bound
cmpsb
iret
xor
sbb
push
repz
out
outsl
mov
push
pop
insl
and
add
arpl
cmp
cmp
xchg
mov
in
or
cwtl
movsb
bound
mov
hlt
cmp
cmc
pop
jmp
pop
fstpt
sub
je
and
outsl
jge
shlb
pop
and
mov
add
and
push
rcr
dec
lds
inc
dec
std
lods
je
ret
adc
jo
push
mov
mov
sbb
and
cmc
xor
js
and
fnstenv
xchg
and
xchg
mulb
jo
cmp
dec
je
stos
or
mov
pop
and
sbb
clc
sub
movsl
or
arpl
aad
sub
add
movl
mov
pop
fwait
jbe
clc
push
hlt
mov
jle
sub
pop
aas
xor
cltd
sahf
decb
adc
enter
mov
loopne
mov
adc
rcrb
xchg
and
inc
jmp
stos
inc
dec
ficomps
test
mov
inc
add
jns
mov
fldt
jl
es
popa
add
outsl
or
dec
dec
pop
stos
mov
mov
cmpsl
dec
pop
repnz
cld
inc
pop
cmpb
subl
fmuls
push
add
mov
packuswb
dec
cld
pop
out
aaa
out
in
xor
add
dec
lcall
sti
mov
lret
nop
shll
or
int
jno
int
imul
mov
arpl
inc
cli
shll
popl
adc
xlat
aad
xchg
shlb
adc
mov
xlat
cmp
push
xor
das
mov
cmp
dec
out
mov
test
mov
imul
ds
xchg
data16
push
inc
xchg
push
cmpsb
int
sbb
jae
dec
xor
mov
cmp
xchg
sub
mov
mov
mov
sbb
das
cmp
dec
add
mov
in
ja
arpl
nop
fbld
add
lea
mov
negb
iret
jge
inc
mov
pop
xchg
pushf
jns
sub
xor
or
sub
sub
mov
subb
mov
test
mov
mov
mov
loopne
jle
sbb
mov
mov
or
and
sbb
lods
xchg
fisubrs
pop
imul
shr
xor
in
pop
xchg
rclb
mov
loop
adc
lahf
mov
cmpsb
sbb
inc
pop
jecxz
movsl
mov
sbb
xor
or
movsl
cli
test
fdivp
or
test
stc
xchg
mov
mov
and
xchg
jmp
jg
stos
push
xchg
sub
jno
adc
inc
push
pop
mov
out
xor
clc
scas
mov
push
imul
add
lret
xchg
mov
push
xchg
roll
xor
ret
data16
sbbl
aam
inc
dec
clc
call
jl
scas
pop
shld
cli
std
call
ljmp
xchg
xor
sub
lds
push
xor
in
mov
sbb
in
ret
cwtl
adc
stos
push
or
push
loopne
xor
xchg
daa
gs
jmp
les
sbb
test
negb
fwait
lcall
gs
mov
xor
pop
cmp
mov
iret
stc
xor
push
adc
mov
js
pop
test
mov
call
sbb
and
sti
jb
and
cmpsl
mov
adc
mov
imul
or
xor
leave
push
adc
ljmp
inc
clc
push
pushf
cli
js
repnz
mov
pop
in
xchg
cld
sub
lret
inc
pop
xchg
mov
inc
out
cli
jmp
insl
lcall
dec
popf
jno
gs
jmp
jl
fildll
repnz
xor
lcall
pusha
xlat
fbld
scas
mov
sbb
repz
push
call
sub
sbb
inc
cmc
inc
adc
pushl
rcrb
stos
push
roll
push
sbb
out
mov
or
inc
adc
daa
mov
ds
inc
mov
ror
jno
addr16
jg
sahf
popl
or
aaa
je
jmp
inc
xchg
add
xor
daa
jle
in
pop
jb
xchg
cmpsl
or
add
out
andb
sbb
test
xor
std
mov
inc
adc
mov
arpl
cld
clc
in
inc
inc
jbe
fwait
sub
icebp
arpl
mov
mov
sarl
hlt
cld
in
ret
mov
cmp
jbe
lods
cmpsb
sbb
cli
inc
mov
xchg
sbb
gs
out
jo
andl
out
xorb
mov
cld
mov
and
xchg
clc
mov
mov
pop
mov
ds
aaa
or
aas
subb
rclb
ret
jp
loopew
inc
cmpsb
insl
in
adc
addr16
jo
cmpsb
movsb
loopne
dec
lock
push
and
aas
push
inc
mov
popw
cli
rorl
into
xchg
stos
inc
sub
sub
dec
inc
push
test
insl
pop
pop
ljmp
add
xor
mov
incb
les
mov
xchg
add
sub
cmp
adc
pop
or
pop
push
mov
jecxz
in
cmp
gs
and
xor
rcrb
ja
xor
dec
mov
lock
leave
mov
xchg
xchg
decb
jmp
rcl
shll
or
test
cwtl
fstl
cli
sub
mov
out
test
sar
filds
les
imul
push
icebp
push
mov
repnz
adc
pop
bound
mov
sti
lahf
xor
ss
xchg
adc
xlat
mov
je
lret
roll
lods
mov
jmp
fcmovbe
pushf
push
int3
sbb
jne
adc
cmp
or
or
jo
and
mov
jbe
mov
sbb
popf
ljmp
movb
jnp
dec
cld
adc
or
xor
xchg
aas
add
mov
sti
rclb
ficoml
fadds
sbb
dec
incl
pop
ret
icebp
xor
fstpl
cmp
add
ja
iret
mov
cmp
xor
add
cmp
mov
out
leave
mov
aaa
pop
mov
nop
pusha
js
dec
pop
pop
outsl
outsb
por
sbb
mov
add
cmpsl
mov
fldcw
cmp
stc
aaa
or
bound
jecxz
and
icebp
or
outsl
pop
or
mov
arpl
mov
cltd
add
mov
rcrb
nop
mov
hlt
dec
cli
lods
cmp
adc
add
jle
or
fists
cld
push
xor
insl
sbb
shl
push
and
fistpll
pop
cmpsb
adc
jo
mov
les
jle
sbb
cli
fdivr
stos
push
dec
sub
sub
out
ss
inc
mov
mov
fneni(8087
rolb
addl
inc
fistpll
orl
xchg
sub
dec
out
fs
jmp
dec
xorl
out
in
push
adc
jg
adc
sbb
sbb
aad
pop
mov
or
outsb
inc
jmp
push
loopne
cmp
insl
rcrb
mov
push
decl
in
mov
addb
pop
adc
loope
adc
lret
jle
push
jo
jns
xchg
and
adcl
mov
int3
sbb
push
jae
ljmp
and
ljmp
insl
sub
mov
mov
lds
mov
andb
and
fwait
and
fdiv
in
dec
jg
fidivrs
call
adc
in
mov
sbb
outsl
shrb
push
dec
or
das
cmp
sahf
xor
fsubrl
push
or
mov
inc
iret
pop
mov
mull
mov
pop
in
mov
adc
adc
daa
dec
in
xor
mov
sub
pop
clc
movsl
mov
int
xor
sarb
mov
pop
push
xchg
les
xchg
lret
je
sbb
jecxz
les
push
push
pop
roll
lea
adc
xchg
adc
inc
ss
sbb
fnstcw
dec
sbb
mov
and
pop
mov
xchg
adc
sub
fdivrs
loopne
cmc
movsb
fisttps
sub
scas
and
adc
pop
cwtl
jmp
into
es
dec
push
clc
push
sahf
loop
dec
adc
dec
push
push
add
cltd
mov
loope
std
mov
jns
and
inc
hlt
sub
addl
inc
push
arpl
sahf
push
sub
pop
and
icebp
jmp
or
sbb
jl
lcall
movsl
movsb
stc
addb
jge
or
incl
inc
or
cmp
fldl
aad
jo
mov
add
aad
das
daa
mov
sbbl
inc
repz
push
fcom
arpl
shll
pop
jnp
sub
andl
aaa
icebp
rorl
out
addr16
mov
imulb
leave
adc
out
jl
cmp
mov
cmpsb
fs
mov
stos
and
or
or
arpl
mov
xor
cmp
push
stc
frstpm(287
aam
js
cmp
fwait
pop
add
inc
push
jnp
or
fistpl
das
fdivr
lods
dec
or
inc
nop
out
in
xchg
popl
rolb
mov
test
or
pop
call
jp
and
fwait
inc
cli
inc
lock
fsubrl
loopne
add
test
mov
mov
fcmovnb
rcl
jg
popa
cmpsb
pusha
xchg
mov
fildl
pop
rol
inc
stos
mov
cli
cmp
dec
or
pop
je
mov
fidivl
inc
nop
push
call
jno
sub
jo
ja
or
repz
clc
push
or
insl
mov
adc
lock
scas
inc
test
lods
xchg
shlb
mov
cmp
jo
stos
lcall
clc
jbe
cld
xchg
push
in
inc
stc
cltd
mov
aad
push
push
sbb
inc
ret
outsl
or
cmpsb
jl
lods
test
adc
and
ret
mov
mov
mov
pop
scas
adc
sbb
mov
mov
adc
and
stos
adc
les
mov
mov
cli
daa
out
push
dec
fistpl
adc
stc
inc
stc
mov
or
dec
out
aaa
push
xor
xor
aas
lock
mov
mov
les
inc
sub
movsl
cmp
xchg
rorb
mov
and
ret
mov
push
add
sahf
lock
lods
sbb
pop
xor
jne
stos
clc
xchg
add
sub
pop
fcmovb
adc
sub
jo
ss
dec
out
pop
dec
test
sbb
mov
mov
cs
nopl
shl
xchg
push
nop
and
imul
jmp
pop
cmc
addr16
adc
movl
in
adc
cli
or
push
ss
jbe
mov
add
cmpsb
insb
rcr
lock
test
mov
fidivs
fwait
jmp
mov
pop
mov
push
cmp
or
jg
adcl
inc
dec
cmp
ss
pop
jne
pop
xor
pop
fwait
sub
sub
xchg
cltd
jne
cmp
fwait
mov
in
xor
mov
mov
mov
jmp
shll
cli
sub
mov
pop
aad
std
fstpt
inc
mov
add
mov
sub
inc
test
sbb
xchg
loopne
inc
cmp
inc
insl
push
jmp
incl
lea
scas
lods
sbb
push
adc
daa
aam
sti
pop
lret
add
adc
fcom
xor
or
mov
das
dec
movsl
xchg
xorb
test
mov
inc
mov
hlt
ret
mov
sbb
fiadds
jle
insb
in
lock
and
fwait
mov
mov
movsl
je
push
inc
ljmp
dec
mov
cmp
push
cwtl
push
jl
fnsave
jne
rcll
jb
sbb
push
loopne
insb
mov
aam
mov
xorl
imul
and
std
shlb
in
nop
iret
daa
dec
les
inc
adc
push
mov
inc
add
ljmp
outsl
push
jg
cld
or
sbb
jg
sbb
push
cs
add
sarl
adc
or
jge
mov
sar
lea
sarl
cmpsl
cli
ret
fistpll
push
pop
dec
mov
adcb
mov
mov
mov
mov
xlat
cmp
inc
sti
mov
pushf
loopne
dec
cmp
push
lahf
shlb
outsl
mov
jb
fldln2
xchg
or
or
loopne
rcrl
lock
pop
dec
lds
cmovs
mov
std
jp
mov
loopne
lods
stc
push
add
jg
aad
je
in
out
adc
pusha
fcomps
mov
inc
jns
xchg
and
jmp
faddl
inc
out
sbb
aaa
mov
lods
aam
fcmovnbe
inc
sub
cs
js
push
jbe
dec
cld
aas
cmp
and
movsb
and
push
mov
fidivrs
adc
cmp
popa
ss
shll
mov
push
test
aas
jo
outsl
mov
popf
aas
jb
mov
incb
mov
add
xor
sbb
in
nop
aad
cmp
pop
adc
lods
xor
lahf
adc
hlt
adc
dec
sbb
lds
push
jg
lock
mov
les
cltd
pop
mov
mov
pop
movl
aam
movhlps
mov
xchg
aam
add
inc
dec
outsl
push
daa
aaa
out
icebp
or
jne
hlt
pusha
stos
mov
rol
inc
gs
icebp
out
xor
add
jp
sbb
or
shl
cwtl
cmp
mov
jns
mov
fistpl
dec
lods
mov
mov
fdivr
push
and
inc
rolb
incl
outsl
jl
mov
negb
add
xchg
lret
inc
mov
or
and
in
or
stc
adc
fadds
sarl
sub
push
dec
gs
xor
std
mov
aaa
dec
push
test
pop
clc
pop
ss
loopne
shll
icebp
notl
mov
adc
add
lcall
sbb
add
jne
sbb
jp
lock
andl
push
cli
enter
test
leave
mov
clc
hlt
mov
mov
mov
cli
cs
js
xorb
sbb
jns
mov
pop
dec
adcl
ljmp
test
js
addl
add
mov
or
jnp
and
lcall
pop
jns
push
aas
push
cwtl
mov
sub
int3
clc
and
dec
aaa
incb
xchg
inc
push
jns
das
fimull
jo
pop
sub
in
call
das
enter
mov
mov
pop
fistps
sub
mov
dec
push
imul
push
das
insl
dec
fs
push
notl
push
add
mov
pop
sub
js
loopne
sbb
mov
aaa
or
jns
mov
or
nop
jmp
lcall
dec
sub
fmuls
leave
sub
mov
lock
rcll
mov
fstp
xor
inc
stos
cmp
mov
jmp
add
xlat
lret
or
or
pop
pop
push
and
pop
dec
mov
adc
pop
rorb
mov
jb
mov
mov
call
lods
mov
divb
fldl
xlat
xchg
xchg
dec
aam
inc
notl
xchg
popf
add
pop
aaa
add
in
jge
inc
mov
fld1
imul
je
arpl
or
lahf
fisttpl
leave
adc
inc
cmp
xchg
jns
sub
movsl
mov
imul
in
and
pop
js
and
cmp
es
mov
push
push
cld
cmp
subl
in
fimull
or
sub
daa
mov
push
xor
lods
fneni(8087
add
ljmp
jle
in
inc
aad
lods
ds
insl
les
jle
addr16
pop
jno
mov
adc
mov
call
inc
fwait
or
pusha
dec
sub
cli
lcall
insb
daa
jl
xor
and
clc
popf
cmp
or
aam
adc
add
fisubs
adc
enter
add
frstor
cmp
cli
std
in
in
aas
push
outsl
mov
pop
mov
inc
movsb
fcompl
stos
mov
add
cli
jmp
or
or
cld
test
jle
xor
fdivr
adc
popa
arpl
fisubrl
cmpsl
mov
mov
cmpsl
mov
movsb
jg
jl
and
adc
jbe
sbb
test
jns
add
subb
adc
and
insb
push
lds
jle
shlb
jmp
ss
push
out
out
sub
loope
or
cwtl
push
into
xchg
pop
jle
mov
ja
daa
and
xorl
inc
out
call
and
dec
adc
inc
je
test
mov
in
jno
in
loopne
adc
cmp
pushf
in
cli
cmpb
jle
sub
sub
rcll
push
mov
stos
pop
int
jb
fcomip
mov
push
sbb
int
mov
jl
add
mov
sbb
aaa
cmpb
or
xchg
pop
jg
sub
fistl
adc
mov
dec
js
xor
fneni(8087
aam
repnz
xchg
dec
stos
pushf
pop
and
pop
ret
pop
vprotw
cwtl
fists
adc
push
stos
loopne
and
add
push
adc
sbbb
daa
push
add
je
adc
fcmovb
sub
aad
sbb
test
cmp
dec
shlb
jp
les
inc
xor
js
lcall
call
mov
pushf
mov
repz
mov
lods
adc
adc
mov
in
adc
mov
and
and
jns
clc
cmp
dec
das
sbb
or
dec
sbb
dec
ljmp
sub
das
mov
setne
or
fnstsw
call
ljmp
push
nop
xor
sbb
lods
push
sbb
and
call
adc
inc
arpl
or
mov
and
and
inc
add
aad
push
mov
lcall
mov
adc
dec
call
or
adc
pop
lock
ret
cmp
push
inc
jle
add
lahf
sbb
fstpl
adc
int3
or
push
in
divb
test
mov
push
dec
inc
sti
push
mov
pop
mov
out
and
aaa
push
ret
mov
leave
test
mov
xor
stos
sub
rcrb
mov
xchg
push
mov
mov
xchg
loope
popf
orb
hlt
cltd
gs
mov
scas
jns
stc
int3
fcoms
popa
or
mov
stos
call
jp
sbb
adc
pop
and
push
ljmp
dec
pop
ret
dec
pusha
mov
mov
rcll
aaa
add
mov
mov
jae
test
outsb
out
addl
lea
iret
fisubl
aad
movb
test
cmp
movsl
movsl
jnp
jmp
aaa
xchg
and
sahf
lea
cld
pop
std
and
mov
xchg
sub
dec
enter
or
push
fildll
hlt
push
adc
pop
push
dec
stos
pop
pop
inc
scas
dec
lcall
push
cmp
lcall
lea
and
repz
push
das
adc
movsl
pop
cltd
loop
pop
rolb
add
mov
mov
adc
outsl
mov
repnz
adc
ss
pushl
fsubs
inc
adc
add
jg
inc
and
adc
mov
inc
fistps
jg
sarb
dec
testl
sub
cmp
and
pop
mov
cmp
ds
sbb
jbe
loop
ret
movsb
repnz
mov
ret
cmp
lods
loopne
mov
xchg
dec
out
jmp
inc
stos
out
inc
jge
fadd
pop
add
and
jge
or
fmuls
cmpb
adc
xchg
jmp
jns
mov
lods
decb
out
movsl
xchg
pop
and
push
pop
popf
xchg
push
cmp
jle
fbstp
or
push
jno
sbb
lea
scas
incb
jle
inc
ljmp
aad
mov
mov
out
mov
std
out
std
in
xlat
xor
xchg
mov
add
icebp
xchg
or
mov
push
mov
sub
call
or
sub
orl
cmp
jo
jmp
rcl
and
inc
data16
lret
add
cltd
pop
call
shl
jle
dec
ss
inc
jo
jp
loope
clc
mov
inc
sub
mov
je
add
cld
jge
sub
ret
frstor
dec
mov
sub
lcall
daa
loopne
pop
loope
lea
mov
ret
out
lea
lock
inc
je
icebp
mov
clc
inc
or
test
aas
stos
outsl
xor
push
mov
icebp
mov
push
fwait
test
std
or
sti
sti
inc
or
mov
adc
les
pusha
add
mov
pop
pop
push
xorb
int
add
inc
enter
mov
push
int3
aam
mov
std
fistpl
test
jl
mov
insb
cltd
sub
ja
cmp
jne
push
icebp
clc
rcrl
xor
adcb
and
mov
sbb
repnz
add
cmp
incl
adcb
or
es
pop
hlt
xor
mov
pop
lcall
in
pop
aaa
ds
adc
fdivrs
jmp
out
sbb
xor
adc
roll
pop
mov
pop
sub
inc
sets
sbb
lea
mov
cli
xor
inc
pop
out
lock
popa
inc
rcrb
and
lret
or
gs
adc
jle
aaa
sub
jmp
pop
lock
or
mov
cs
incl
addr16
ficoml
lea
mov
outsb
ds
pushf
and
push
add
jmp
and
push
addl
scas
xor
lretw
mov
test
ds
sub
or
cmpsb
ljmp
and
imul
cmc
jl
insb
mov
cli
inc
sub
sahf
push
repz
jg
addr16
lret
hlt
jg
and
inc
push
and
sbb
or
movsl
ret
lret
jbe
dec
mov
sub
jg
inc
lahf
xchg
mov
rclb
nop
fs
clc
popa
mov
inc
lahf
cmp
xchg
adc
or
in
lcall
rorl
leave
clc
push
in
push
imul
or
fimuls
loopne
mov
fmul
push
movl
jmp
movsl
or
popf
push
pop
enter
dec
lret
xor
test
scas
lret
sahf
test
push
sbb
mov
xlat
adc
ret
sbb
dec
xchg
and
sbb
push
add
jmp
push
pop
dec
dec
xchg
cwtl
xchg
push
cmp
decl
fsubl
inc
lret
xchg
pop
std
shll
stc
xor
arpl
pop
or
mov
or
xorb
adc
mov
enter
cltd
addr16
and
xchg
jg
pop
pop
nop
push
pop
imul
jg
mov
sbb
jg
sbbl
xor
push
rcr
ret
add
sbb
ret
mov
test
icebp
rcll
mov
shrb
cltd
cmp
jo
lods
xchg
dec
loopne
inc
push
push
adc
cmp
out
popl
js
rcl
test
pop
mov
gs
testb
sbb
mov
insl
jle
loope
sub
loop
push
ficompl
repnz
sbb
pop
pop
sarl
xchg
std
mov
aad
addr16
cltd
lds
ss
test
rolb
lret
les
push
pop
sbb
aam
xor
in
mov
popl
mov
sub
mov
fsubs
std
pop
loopne
sub
icebp
inc
ljmp
and
mov
repz
push
mov
cmp
jbe
add
pop
popf
dec
jge
cmp
std
xchg
mov
inc
in
sti
mov
pop
mov
loope
and
sbb
test
push
outsl
cli
push
mov
fists
pop
test
xor
pop
push
cmp
mov
stos
cmp
add
dec
rcll
mov
inc
xor
in
dec
das
add
inc
push
pop
test
fwait
clc
out
lret
mov
adc
mov
shll
inc
inc
inc
sti
dec
dec
ja
fbstp
dec
scas
movsb
rep
dec
repz
jmp
xlat
loope
adc
xchg
out
test
add
sub
je
lahf
nop
xlat
aad
test
adc
and
ljmp
push
xchg
stos
xor
sbb
or
and
aad
xor
sbb
mov
sub
xchg
dec
cmp
jle
shl
jbe
shll
mov
pop
add
lock
shrb
inc
cmp
cli
in
add
or
mov
and
std
push
lds
xchg
mov
cmp
sbb
lret
sbb
xchg
test
test
dec
xchg
aam
mov
cmpsl
push
pop
mov
loop
or
das
scas
jl
push
lds
mov
fcompl
jno
aam
movsl
push
test
or
xor
es
test
out
xor
cmc
out
push
test
sbb
jbe
mov
sbb
inc
je
fdivr
xchg
decb
rorb
scas
out
push
push
xchg
fdiv
or
dec
pop
les
outsl
push
sbb
push
out
int3
imul
push
jmp
or
mov
ret
cld
push
cmp
and
divps
inc
sbb
std
fisubs
pop
add
jns
mov
adc
cmpsb
aas
mov
pop
sti
jg
add
jge
test
mov
mov
fprem1
shl
pinsrw
add
imul
push
mov
outsb
jne
push
mov
nop
inc
test
fistps
test
faddl
cmp
jb
test
mov
mov
pop
add
aam
in
addr16
rcl
bound
or
mov
dec
adc
fisttpll
vpextrw
xchg
popf
in
rcr
cmp
dec
inc
jmp
rorl
lret
in
pop
xchg
push
test
sbb
sbb
add
pop
sarb
jns
sub
lock
or
or
mov
inc
mov
mov
scas
xchg
mov
jmp
arpl
aas
inc
shlb
hlt
inc
stos
std
hlt
add
or
xor
xchg
mov
jno
leave
aad
lea
mov
imul
inc
in
add
cld
or
mov
les
mov
scas
cmpsb
or
mov
aas
stos
dec
sbb
and
scas
inc
ficoml
inc
enter
inc
aaa
decb
movsb
mov
bswap
incl
push
push
xchg
arpl
xor
xchg
addl
lcall
mov
in
out
push
xchg
rcl
aaa
mov
push
pop
pop
mov
popa
in
xchg
aas
xchg
shl
cli
call
pop
push
inc
inc
cmpl
jae
je
mov
lret
jecxz
insl
or
lods
out
mov
fstl
adcb
fdivrp
sub
sub
xchg
or
xchg
push
fdivrs
js
rcr
mov
sbbb
xchg
fisubrs
sbb
inc
pop
mov
inc
mov
lahf
push
ret
ret
push
fldl
mov
aaa
mov
dec
mov
loope
jo
adc
insb
mov
mov
incl
mov
pop
cmp
outsl
lahf
movsl
and
mov
pop
mov
and
or
mov
mov
divl
daa
xchg
xor
xor
push
mov
jg
jb
mov
aad
pusha
xchg
pop
cmp
lea
xchg
cmp
jp
jg
sub
xchg
push
pop
push
pushf
mov
sbb
push
dec
dec
lods
fsubp
xchg
rcr
jae
pop
loopne
or
sub
inc
push
mov
mov
jp
jo
inc
push
xchg
aam
mov
inc
lret
adc
ja
jmp
aas
cld
pop
test
push
cmpb
fisttpll
mov
sbb
test
sti
sub
inc
arpl
clc
sub
in
movsl
mov
adc
pop
clc
mov
adc
mulb
les
cli
cmc
insl
pop
fcoms
insb
rcrl
scas
lret
movsl
inc
mov
fmul
cmc
sbb
pop
pusha
adc
adc
cmp
or
out
mov
push
cmp
add
rorl
pop
adc
mov
ss
and
inc
inc
lock
jb
push
lds
sbb
ljmp
add
rcrl
fbstp
aam
jg
enter
mov
mov
pop
icebp
xchg
mov
cld
lea
pushf
adc
xor
nop
push
popa
mov
shr
imul
icebp
sbb
mov
add
dec
aaa
aas
pop
push
ret
inc
jg
jns
and
scas
inc
sub
sub
dec
adc
add
pop
bound
sarb
push
cld
push
push
inc
mov
imulb
jne
fstl
test
push
fwait
jo
andb
cmc
inc
sti
jg
xchg
cwtl
inc
shll
xchg
ja
scas
pop
clc
out
mov
js
bound
sti
inc
xor
rorl
pop
xchg
loopne
xchg
outsb
sti
add
or
or
lods
xchg
jle
cld
daa
clc
inc
jge
lret
or
and
jp,pt
xor
clc
mov
mov
es
movsl
incl
lock
pop
cmc
orb
add
push
jge
push
iret
pop
jg
inc
out
sub
inc
adc
loopne
sbbl
cmc
dec
jl
xor
ljmp
sbb
mov
mov
or
xchg
cmc
or
cwtl
ret
js
push
adc
cmp
xchg
sub
iret
sub
jg
cmp
imul
cmc
push
cwtl
out
mov
mov
lock
insb
aam
mov
jne
mov
ret
pop
sub
dec
mov
adcb
call
dec
pop
iret
stos
imull
aam
dec
call
mov
inc
push
sbb
jbe
fwait
push
shlb
and
fcomp
lock
arpl
or
repz
pop
sub
in
mov
pop
and
jmp
push
arpl
imul
mov
imul
or
mov
xchg
and
and
cltd
ficoml
adc
adc
xor
push
adc
scas
xor
add
push
movsl
inc
leave
sbb
scas
or
sub
xchg
or
imul
jmp
mov
jno
add
dec
enter
fnstenv
pop
adc
inc
cmc
jecxz
in
inc
mov
push
and
test
mov
mov
and
lahf
xchg
sub
mov
je
imul
inc
mov
incl
mov
pusha
add
rorb
stos
lods
xchg
push
movsb
mov
inc
daa
sub
roll
loope
fistl
aas
mov
xchg
fwait
xchg
pop
inc
shl
notb
ret
fadd
pop
loope
and
std
iret
outsl
decb
or
sahf
push
adc
dec
and
xchg
sbb
add
mov
inc
mov
jb
fldl
mov
push
clc
or
inc
imul
les
ret
decl
lret
dec
and
xchg
pop
adc
pop
jp
adc
pop
icebp
dec
inc
pop
fistpl
pop
imul
clc
aas
add
es
int3
shll
das
sti
mov
data16
or
xchg
jle
test
addr16
or
inc
sbb
fs
outsl
pop
lea
test
bound
pop
outsb
sub
lret
repz
mov
adc
dec
icebp
jg
stc
mov
push
ja
adc
dec
pop
mov
dec
xor
xlat
cmp
mov
test
cs
xorl
fidivrs
pop
cwtl
jb
jae
dec
test
jno
fsubl
lods
dec
mov
outsl
insl
pusha
sbb
in
lcall
sub
aam
add
lret
imul
pop
fcmovne
shlb
lods
lea
dec
test
repz
inc
pop
inc
nop
into
dec
orl
push
fs
push
and
cmp
ja
mov
loope
fidivl
stc
pop
clc
outsl
pop
push
push
xor
mov
lcall
icebp
mov
push
inc
mov
push
cwtl
ja
dec
add
jg
call
out
push
mov
cmp
mov
push
jae
dec
mov
push
jg
outsl
fmul
popa
push
mov
je
sub
sidtl
inc
xchg
xchg
cs
adc
xchg
sub
cld
push
and
mov
sbb
pusha
lock
sub
inc
icebp
inc
lock
jmp
cmp
xor
out
mov
cli
test
push
mov
filds
inc
es
pop
cmp
sbb
ljmp
leave
jmp
mov
push
mov
stos
xchg
or
jg
mov
pop
test
mov
mov
push
repnz
dec
mov
movsb
js
or
sti
icebp
fdivrp
and
lret
or
jno
xchg
mov
in
clc
add
push
test
bound
sbb
add
aas
cltd
inc
loope
incl
sub
aad
incb
mov
mov
call
xor
mov
in
mov
inc
add
add
idiv
jge
cltd
push
sub
push
push
pop
pop
add
movq
clc
inc
fldt
mov
movsb
imul
iret
lret
mov
pop
ss
aaa
jno
loop
jo
in
jbe
ja
xchg
inc
cmp
dec
insb
shrb
adc
scas
icebp
and
out
cmpsb
rcll
mov
pop
call
xor
or
popf
nop
ljmp
pop
fnstenv
sbb
dec
dec
scas
xlat
jmp
rol
inc
and
das
mov
divl
sbb
ret
adc
cmpl
int3
sub
adc
fldl
data16
das
gs
push
pop
add
scas
inc
cmp
mov
jns
push
cld
xlat
pop
add
inc
mov
cmp
inc
lds
pop
cld
adc
add
repz
aas
pop
sti
lds
adc
mov
mov
in
ja
pushf
out
das
mov
cli
rcr
lea
jge
andl
cs
fs
sbbb
lret
and
push
pop
xchg
and
in
outsl
fldl
int
hlt
and
lock
and
pop
test
inc
stc
cmp
mov
mov
shrb
mov
push
cmp
mov
mov
rcrb
rolb
std
nop
add
sub
adc
rcrb
fdivrs
inc
sbb
data16
test
dec
icebp
fnstsw
inc
push
lods
movsb
xor
adc
in
dec
dec
ljmp
or
roll
mov
sbb
or
xchg
insl
xor
and
mov
jbe
xor
push
sbb
es
je
mov
jg
pop
icebp
or
or
cmp
dec
sub
mov
mov
inc
and
ja
std
mov
sbb
sbb
ss
jne
outsb
lock
dec
mov
shlb
repz
loop
popf
xor
adc
shll
push
shlb
inc
idiv
fcomps
pop
pop
std
mov
rorb
shrl
xor
mov
mov
jmp
add
fisubrl
mov
iret
xor
xor
pop
sub
xor
xlat
jo
mov
pop
fcompl
adc
pop
aaa
dec
mov
je
lcall
mov
inc
mov
mov
cmp
scas
roll
jp
clc
adc
sbb
sbb
in
mov
pop
adc
jmp
pop
cmovns
and
aaa
mov
xor
fcomp
sti
xchg
jg
pop
xor
mov
push
xchg
xchg
and
daa
pop
xor
std
dec
xor
xchg
repz
mov
out
ds
addl
jl
adc
or
pop
aam
je
mov
ljmp
loopne
mov
mov
add
loopne
icebp
call
mov
loope
cmp
cmp
faddl
dec
mov
pop
aas
call
sbbl
mov
out
outsb
rclb
jge
ret
inc
fs
shlb
rol
stos
movsb
daa
shrb
dec
into
or
test
sbb
dec
fwait
dec
nop
pop
shlb
fcompl
dec
in
inc
pop
int
xchg
add
lret
pop
loop
xchg
jnp
and
or
mov
vpunpcklbw
dec
push
icebp
add
sub
mov
pop
add
add
sbb
scas
jl
jl
xchg
inc
aam
and
sub
and
lock
dec
popf
cmp
insl
sbb
bound
mov
jmp
xchg
mov
push
sbb
jb
hlt
aas
push
xor
push
scas
jl
or
aaa
jle
jl
pop
fwait
cmpsl
mov
or
lock
cli
pop
cli
push
pop
xor
scas
sub
push
nop
dec
push
adc
pop
out
loopne
hlt
inc
aas
scas
push
jmp
sbb
jmp
mov
and
xchg
gs
fldl
push
dec
adc
es
js
cmp
mov
inc
xchg
lods
adc
addl
ss
push
add
xor
aam
inc
adc
and
push
inc
cmpsb
cmp
ret
data16
fildll
scas
subb
xor
mov
mov
shr
cwtl
pop
decb
cs
pusha
test
or
mov
mov
pop
scas
daa
sub
insb
mov
push
xchg
loopne
shlb
mov
inc
test
jns
sub
stos
paddb
adc
into
movsl
or
mov
jl
dec
sti
pop
cld
xchg
leave
adc
add
inc
jmp
dec
mov
jae
mov
pop
das
jo
test
clc
xchg
sti
jb
aas
arpl
aam
dec
cmpb
mov
clc
and
sub
cmp
fisubl
adc
aaa
popf
cmc
add
lock
outsl
and
pop
cmc
sbb
push
test
sbbb
ljmp
adc
fimull
push
loop
pop
les
lea
nop
lods
jo
pop
mov
cmp
pop
fcmovnb
aas
xchg
iret
fwait
scas
cld
ret
mov
popf
sar
cli
arpl
jle
push
push
nop
aad
mov
std
scas
ror
stos
test
fwait
daa
je
stc
dec
add
pop
pop
repz
enter
std
pop
lock
mov
fcmovnbe
mov
loop
jmp
mov
and
adc
jmp
fildll
xchg
sub
aaa
xchg
inc
sub
jg
aaa
int
in
cmp
mov
fistpl
sub
cs
stc
add
mov
lods
outsb
dec
test
into
gs
leave
xorb
add
or
sbb
popa
xlat
cwtl
lock
icebp
jg
test
enter
dec
push
or
adc
cmp
mov
pop
mov
xchg
mov
bound
sahf
cli
ja
adc
inc
outsb
inc
inc
xchg
mov
xor
pop
cmc
test
call
repnz
xchg
xchg
arpl
cmpl
adc
inc
sarb
jno
adc
addb
fwait
loop
xchg
jl
sub
mov
jae
mov
shll
lea
jl
sbb
cmc
or
cmp
add
shlb
aas
call
jg
pop
pop
lahf
xchg
jle
fadd
notb
inc
stos
mov
roll
sbb
int
inc
or
mov
push
xor
outsl
xor
inc
mov
add
inc
loopne
cwtl
xchg
push
aaa
push
mov
loop
jg
outsl
sub
or
pop
cltd
addl
in
shrb
mov
push
shl
pop
mov
test
aaa
icebp
movsl
push
sbb
lret
pusha
sbb
fstpt
mov
aas
test
adc
jne
cmp
pop
xor
shr
inc
or
not
nop
cwtl
test
mov
mull
lret
roll
push
rorl
mov
dec
jg
jecxz
lcall
sti
xchg
jl
jb
push
cmpsb
lahf
mov
pop
adc
das
cmp
sbb
pusha
dec
arpl
cltd
push
es
or
in
das
adc
mov
adc
jmp
pop
sub
ja
sbb
and
lcall
adc
in
adc
cmp
add
and
adc
adc
mov
cltd
imul
cmp
call
repz
dec
inc
inc
inc
dec
or
sbb
adc
push
mov
cmp
test
inc
jae
inc
mov
stos
rorb
mov
pop
arpl
add
cmp
pop
in
jge
mov
pop
add
hlt
lods
lret
mov
inc
xchg
cmp
jmp
pop
addl
test
lods
daa
stos
push
dec
sar
test
jl
mov
loope,pn
inc
or
test
mov
adc
movsl
clc
nopl
sub
mov
lock
jmp
sbb
les
icebp
jle
jbe
repnz
adc
fisttps
xchg
cmp
ret
ret
test
push
mov
xor
lcall
or
xchg
scas
xchg
popa
add
fucomip
push
adc
mov
add
ljmp
enter
cmpsl
outsb
jbe
mov
ret
test
jns
cld
pop
pushf
inc
pushf
nop
xor
int3
mov
pop
arpl
sarb
jg
mov
jg
call
adc
mov
pop
inc
xchg
xor
push
pop
call
cmp
sbb
in
ja
aam
push
daa
imul
xchg
xor
mov
and
cltd
into
mov
mov
cmpsb
sbb
xor
notl
cmp
int
loopne
push
lret
jg
mov
push
enter
andb
icebp
and
call
xchg
xor
cltd
and
iret
dec
stos
test
push
rclb
in
or
pop
popf
add
popa
inc
cs
cltd
movb
jno
subb
out
pusha
xor
repz
jo
dec
cwtl
or
mov
fbstp
xor
sub
adc
leave
add
push
inc
xchg
inc
in
pop
adc
sbb
inc
xchg
lods
pop
das
out
xor
enter
or
cmp
insb
and
dec
mov
ss
push
pop
mov
imul
dec
es
clc
inc
xor
push
pop
fmull
and
mov
adc
mov
loope
pop
hlt
shl
xchg
ret
cmp
scas
or
add
out
sub
cs
out
push
mov
dec
adc
in
mov
ljmp
cmpsb
gs
add
xor
nop
add
into
aad
cs
js
aaa
aas
and
cld
jne
in
stos
inc
jecxz
xor
dec
or
dec
aam
loope
popf
or
mov
loopne
sbb
adc
and
outsb
push
mov
mov
clc
ja
mov
inc
loope
movsb
mov
cs
insb
pop
dec
aas
nop
jae
mov
xor
push
mov
or
roll
out
or
push
aaa
js
cmp
xor
dec
jge
sbb
lcall
inc
test
push
dec
sti
jg
sub
cmpsl
jo
dec
or
mov
pop
clc
in
sub
rclb
es
fcmovbe
ficoms
das
pop
inc
inc
add
lods
adc
loopne
jp
sub
rolb
outsl
cmpsl
fimull
adc
test
mov
xchg
and
and
subb
cli
dec
js
jmp
lcall
mov
pop
ljmp
xchg
push
adc
call
das
aad
test
mov
xor
je
push
cmpsb
add
add
xor
cli
out
xorl
cmp
push
xchg
dec
pushf
call
ss
ljmp
mov
cmpb
andb
out
pop
lcall
cli
pop
inc
scas
aaa
jb
sbb
inc
in
insb
mov
lods
xor
inc
test
js
sbb
dec
cmc
adc
ja
inc
inc
sub
ffreep
lea
out
daa
fsubrl
xchg
mov
inc
add
insb
insl
subb
icebp
filds
out
pushf
insl
sbb
xchg
pop
jp
push
imulb
sbb
mov
movsl
sub
and
cli
pop
mov
mov
fcompl
popa
adc
fisttpl
xor
inc
add
rcll
mov
mov
mov
fistpl
mov
ds
add
decl
xchg
cmp
adc
jns
sbb
outsl
mov
and
mov
fwait
andl
scas
loopne
adc
mov
dec
xor
cmp
lea
mov
pop
xchg
je
sub
stc
loopne
outsl
insb
add
fimuls
pop
insl
jb
push
push
movsb
mov
stos
test
shll
adc
mov
sbb
outsb
call
insl
scas
jo
fnstsw
aam
das
sbb
aas
and
mov
push
jmp
jmp
push
lds
pop
adc
add
mov
mov
data16
fwait
outsb
pop
outsl
mov
and
ficoms
and
lock
ficoms
jo
fists
jmp
sub
hlt
into
mov
dec
sbb
clc
mov
decb
mov
xor
jp
cli
loope
sub
test
and
mov
fisubl
daa
or
adc
pop
push
cs
ja
testb
cmp
inc
and
cmp
std
push
push
ljmp
pop
push
loopne
jg
sbb
push
cltd
adcl
mov
stc
xor
push
dec
mov
inc
aaa
sub
push
xor
pop
jecxz
dec
mov
in
mov
inc
ja
fisttpl
mov
jo
in
mov
push
push
push
pop
incb
in
fisubs
jb
add
icebp
jg
pop
outsl
rcll
sub
fnstsw
cld
je
mov
mov
mov
jg
push
pushf
sbb
in
jl
shlb
push
xor
or
pushl
push
or
int3
std
inc
cmpl
repnz
fcom
es
xor
pop
sti
xchg
mov
int3
or
mov
jae
insl
jmp
mov
call
sbb
scas
mov
cwtl
iret
out
jbe
add
add
in
dec
mov
inc
pusha
adc
rolb
es
dec
icebp
js
jp
pusha
testl
jo
in
push
jno
or
push
adc
mov
and
jg
dec
inc
or
stos
lahf
pop
movsb
pushf
shrl
bnd
inc
ja
inc
xchg
mov
nop
dec
repz
inc
std
jg
xchg
cmpsl
inc
sarb
jle
cmc
insb
xor
cwtl
out
xor
xor
test
sbb
mov
loope
and
dec
mov
fxch
enter
xor
xlat
fdivp
ljmp
adc
mov
ss
sub
insl
push
cld
mov
inc
xor
jp
dec
pop
mov
ljmp
or
addr16
push
dec
test
cmpsb
addr16
xchg
je
jno
add
jo
ja
es
iret
call
mov
push
mov
call
or
pop
js
adc
rcll
xchg
jge
sub
cmp
out
aaa
mov
fdivrp
jp
orl
nop
mov
ret
adc
xlat
mulb
test
adc
fs
mov
call
jo
cmpsl
sbb
enter
pop
xchg
leave
mov
push
mov
and
in
xchg
jae
gs
push
outsl
fst
add
es
mov
les
in
ss
stos
pop
push
in
jns
lods
shr
pop
jbe
add
dec
loop
push
pause
xchg
jno
lods
leave
rcl
rcrl
sti
and
adc
pop
lret
sub
push
xlat
stos
shrb
xor
cmp
pop
pop
mov
pop
cmp
fiadds
imul
ljmp
pushf
aas
data16
mov
aas
dec
mov
push
js
xchg
mov
mov
ret
xchg
in
mov
adc
jne
sahf
xchg
paddd
push
fwait
dec
push
push
lret
lods
sbb
xor
cmp
mov
add
scas
or
push
xchg
test
loop
stos
mov
imulb
and
jle
nop
cmp
lret
pop
sbb
subl
movsb
pop
icebp
pop
mov
mov
icebp
cmp
jmp
in
call
das
ret
setg
hlt
xchg
stos
inc
pop
push
lahf
out
push
pop
adcb
mov
jb
insb
movl
test
bnd
lods
cwtl
cwtl
adc
aam
inc
xor
pop
pop
or
or
mov
xchg
in
outsl
cmp
fs
mov
mov
icebp
mov
insb
pop
push
pop
out
mov
sub
adc
xchg
pop
sbb
fwait
adc
adc
xor
cli
push
lock
cmp
jnp
aas
stc
outsl
add
test
das
push
cld
mov
inc
and
out
push
and
adc
rolb
adc
jg
ret
repz
outsb
pop
ret
and
mov
push
push
lret
enter
push
mov
push
mov
and
loop
shr
mov
jg
inc
sarb
and
pop
jb
adc
or
mov
inc
sub
adc
and
mov
decl
iret
stos
stc
or
jno
mov
jns
scas
sar
in
sub
adc
and
xchg
fistpll
stos
fwait
jo
imul
test
sub
incl
xchg
mov
lds
ljmp
ret
xchg
jmp
ret
inc
int3
loop
cli
jb
cmp
jmp
jl
jne
negl
push
leave
add
or
inc
movsl
jecxz
pop
aam
lock
pop
loopne
jg
cmp
bound
loop
xchg
mov
pop
adc
mov
xchg
mov
or
out
rorb
decl
jmp
jle
jae
sub
adcl
repnz
icebp
jae
push
dec
mov
cmp
out
sub
jmp
js
mov
dec
int3
inc
enter
inc
pop
sub
mov
jle
sbb
cld
xor
dec
lds
in
pop
arpl
repnz
test
inc
in
and
adc
mov
fisttps
mov
popa
xchg
mov
mov
xchg
jb
inc
cld
push
insl
jnp
and
or
push
push
add
movsl
lds
out
scas
ljmp
cli
add
or
sbb
idiv
jno
sahf
xor
and
ds
icebp
in
ss
xor
out
cwtl
push
aam
push
fimuls
add
mov
in
and
stc
js
scas
sbb
xchg
mov
bound
aam
ja
out
adc
jmp
pop
ret
push
incl
pop
adc
jmp
xorb
push
sti
daa
pop
pop
inc
inc
mov
sub
lret
xchg
test
pop
into
mov
dec
pusha
lahf
aam
outsl
aas
pop
aaa
dec
sub
subb
mov
lea
hlt
sbb
or
push
mov
stos
dec
cli
loopne
and
mov
andl
jnp
push
jle
in
push
sbb
or
test
or
out
subb
pop
sti
xor
mov
daa
mov
pop
ljmp
lds
in
aaa
inc
xchg
jg
ljmp
xor
fldenv
adc
test
aaa
cwtl
cmp
dec
mov
adc
ljmp
and
fimuls
ficoml
in
stc
out
les
add
fsubrp
js
mov
es
mov
pushf
cmp
decb
js
sbb
add
iret
push
nop
js
out
jle
xchg
sub
in
addr16
adc
jmp
mov
data16
push
mov
mov
cmp
aas
leave
pop
stc
icebp
push
std
sbb
movsb
gs
mov
xchg
mov
dec
outsl
mov
dec
test
lret
push
in
addr16
mov
fs
mov
decb
pusha
push
jbe
jne
fwait
xor
or
icebp
scas
aaa
mov
fdivs
mov
aas
add
icebp
mov
in
xor
sbb
jne
mov
iret
mov
ret
mov
int3
popa
inc
adc
loop
and
repz
adc
xchg
stos
push
xchg
stc
fbld
aam
inc
xor
std
movsl
int
test
movb
or
xchg
or
icebp
ja
mov
xchg
loopne
adc
push
std
movsl
pushf
add
adcb
or
cld
sbb
jns
xchg
push
jmp
sub
scas
sub
inc
xor
mov
fmull
out
xor
pop
aad
scas
insl
mov
cld
cli
test
daa
dec
cmp
sbb
sbb
sarb
or
adc
not
add
scas
rorb
shlb
fdivr
lods
sub
cmpsl
cmp
cmc
push
imul
adc
dec
sub
or
mov
leave
xor
sbb
cmp
adcb
fstpt
adc
out
pop
sbb
jge
adc
and
pop
lret
xchg
inc
mov
push
das
out
call
add
cmp
and
rorl
push
mov
and
mov
jle
stos
inc
neg
fcmovnb
and
outsl
jb
bnd
aam
sarl
fisttpll
adc
rol
cvtpi2ps
inc
sar
sbb
push
inc
or
int3
pop
int3
ljmp
std
sub
mov
cmp
repz
aas
inc
rolb
repz
jmp
ljmp
xchg
js
call
test
cmp
loope
pusha
mov
imul
insb
mov
andb
outsl
jmp
int3
ret
out
int3
lret
lock
lret
das
inc
push
mov
adc
mov
and
push
jb
popa
xchg
rcrb
mov
sub
fadd
fcmovnu
loope
or
orb
xchg
je
and
push
adc
sub
pop
sbb
xlat
pushf
inc
and
fisttpl
jg
gs
mov
test
fdivs
jbe
enter
clc
arpl
es
shll
pop
enter
imul
mov
pusha
add
js
test
sub
fmull
xchg
or
fcoms
in
lds
fisubrl
int
incl
or
pushf
adc
and
stos
inc
dec
add
pusha
stos
incl
mov
shlb
adc
incb
lret
or
and
jle
push
mov
ds
dec
in
add
cmp
add
push
ret
jg
jnp
es
add
repz
cmp
and
shl
dec
imul
movsl
hlt
cld
rcr
push
aad
add
add
ss
adc
dec
hlt
inc
jmp
std
mov
icebp
mov
lcall
call
adc
outsb
pop
dec
cld
mov
adc
inc
imul
inc
mov
sbb
cmpsb
inc
lea
aam
mov
xor
inc
pop
outsb
mov
frstor
jae
mov
loopne
cld
sub
and
dec
sub
xor
mov
sbb
aaa
andb
xchg
idiv
and
cmpl
adc
pop
loop
pusha
data16
rcl
push
jbe
call
add
push
loop
cmp
loop
sub
push
aas
mov
in
leave
les
test
ja
cmc
hlt
sbbl
mov
outsb
adc
mov
mov
dec
pop
cmc
mov
rcrl
insl
repz
sub
pop
rorl
fs
push
into
in
fisttps
test
mov
icebp
scas
in
fwait
xchg
and
out
or
incl
in
adc
sbb
fcmovb
stos
push
lret
mov
and
or
ret
cmp
mov
movsb
and
mov
lret
xor
popa
outsb
insl
mov
mov
insb
lret
int3
nop
push
add
out
or
jle
es
add
xorl
nop
mov
in
dec
and
mov
in
jp
jo
lock
mov
icebp
das
cld
test
cmpsl
bound
cld
inc
pop
das
jge
das
xorb
adc
call
mov
xchg
mov
stos
xchg
cld
test
movsl
mov
test
fsubs
js
sub
sub
ljmp
stos
adc
mov
jno
mov
xchg
mov
jae
add
pop
filds
cli
cld
mov
and
sahf
jo
mov
daa
cld
sub
sub
pop
inc
ds
incl
mov
jbe
inc
adc
mov
jl
out
mov
jg
aaa
iret
sub
mov
xchg
push
add
aaa
int
inc
int3
fs
and
imul
adc
aaa
push
jg
pop
js
push
xor
cmpb
mov
add
push
mov
mov
inc
cwtl
lahf
jmp
xchg
mov
dec
inc
repnz
add
int3
movb
leave
cmpsb
push
ret
mov
jle
adc
lret
jmp
mov
sub
fcoms
cltd
sub
mov
scas
incl
fucom
add
xchg
inc
lods
je
std
jp
daa
push
cld
outsl
push
add
adc
scas
mul
aas
ljmp
adc
adc
adc
cmc
push
test
dec
cmp
lahf
adc
or
cmp
jbe
cs
adc
cmpb
ret
aaa
pop
push
inc
lea
and
sbb
mov
sbb
loop
enter
andb
and
repz
fists
or
jge
loope
xchg
inc
xchg
jmp
mov
inc
and
jmp
insl
push
stos
insb
pop
scas
add
scas
inc
xchg
xor
outsb
lock
adc
add
jo
jnp
xor
sbb
div
mov
fdivrp
rcr
insl
ljmp
mov
dec
imul
or
std
movsl
cmp
sbb
jns
push
mov
push
mov
rcr
scas
repz
mov
inc
mov
lahf
adc
dec
incl
and
xchg
pop
sbb
outsl
xor
and
dec
negb
and
movsl
aaa
lcall
mov
sbb
sbb
mov
in
pop
loope
mov
sbb
jo
es
icebp
loope
push
inc
lock
movsl
in
adc
call
imul
popa
cmpsl
or
mov
jno
jmp
cmpsl
or
push
push
lods
sahf
cmp
clc
dec
rorb
xor
mov
imul
and
aam
cmp
adc
sbb
mov
loope
pop
addr16
pop
cmp
jno
mov
add
addr16
je
shlb
je
lods
subl
mov
bound
test
setg
cmp
adc
js
push
insb
mov
mov
jmp
jno
push
or
inc
lods
js
inc
xor
sahf
mov
mov
outsb
dec
inc
rcrl
pop
call
je
xchg
push
xchg
and
inc
cmp
aas
cmp
arpl
jbe
jle
filds
inc
xchg
insb
jle
push
hlt
mov
xor
mov
mov
or
hlt
loopne
incb
push
iret
nop
cld
push
inc
sbb
leave
cld
push
cld
and
push
pusha
aas
jmp
push
or
mul
aad
cs
jg
testb
in
add
adc
out
pop
cld
mov
addr16
aaa
push
les
insb
outsb
or
and
test
jno
inc
sbb
arpl
pop
lea
test
mov
jg
ret
cmp
shrb
fdivl
mov
test
add
inc
jo
pop
arpl
negb
pop
mov
push
ficomps
mov
add
hlt
jbe
in
ffree
in
jnp
iret
jns
fisubrl
inc
push
cmp
jmp
mov
xchg
into
cmp
sbb
xor
pop
fwait
daa
mov
outsb
xchg
lods
push
push
pop
pop
nop
fdivl
les
fildll
mov
push
sbb
outsl
das
jge
int
xor
loop
pop
mov
sar
dec
sbb
frstor
movsl
or
stc
hlt
jmp
cmpl
das
inc
push
sub
fcom
mov
lcall
cmp
fdivrl
or
mov
std
and
mov
leave
jecxz
shl
inc
mov
inc
mov
xor
arpl
lret
pop
test
ljmp
xchg
mov
push
mov
xchg
add
bound
mov
pop
cs
jmp
sub
or
addl
pop
mov
xchg
fadd
movsl
lds
aad
ret
in
xor
dec
mov
fcmovnbe
mov
or
pop
loopne
es
hlt
jle
mov
adc
dec
out
cli
decl
lret
mov
adc
fiadds
das
aad
cmpsb
pop
inc
dec
nop
test
dec
std
outsb
sbb
sub
mov
adc
push
sbb
mov
fildl
decl
mov
adc
mov
cltd
inc
mov
std
ja
jb
mov
add
push
and
subb
cli
mov
mov
stos
lret
je
jge
dec
mov
repz
or
aaa
or
sbb
pusha
sub
pushf
push
imul
mov
cmp
dec
pushf
and
cmp
push
fs
mul
adc
sahf
adc
in
xchg
roll
jge
sti
dec
into
jnp
lret
xor
test
sbb
jb
test
sub
fimull
outsb
inc
xchg
idiv
cmpsl
loopne
cmp
sbb
sub
or
call
xor
jle
pop
inc
cld
cld
mov
xchg
clc
mov
decb
mov
and
push
mov
pop
or
xor
or
es
push
outsl
out
mov
cld
iret
repnz
add
les
inc
icebp
ret
outsl
je
cli
aas
stos
rcl
jle
stos
and
mov
jecxz
lcall
sub
jno
and
mov
in
test
pop
popa
or
adc
add
cmp
sbbb
in
lock
out
fiaddl
fwait
ljmp
ret
mov
mul
cmp
lods
test
cmpsl
sbbb
cld
add
test
mov
mov
jecxz
in
fs
js
sub
in
jecxz
adc
adc
adc
mov
gs
or
outsl
cmp
mov
inc
test
jl
test
adc
testl
adc
addl
or
scas
push
jno
xor
fistpll
dec
mov
xor
imul
jb
inc
push
call
mov
push
jo
bound
mov
dec
xor
inc
ljmp
mov
pushl
hlt
push
jp
mov
mov
stos
cli
xchg
xchg
daa
sub
call
ret
jns
lret
mov
push
into
pop
push
xor
or
cwtl
and
das
in
cmp
add
inc
call
mov
bound
push
mov
cli
lret
pop
jmp
push
pushl
mov
xor
fldl
shl
iret
and
imulb
cmpb
mov
cmp
imul
out
fsubrl
cmpsb
xor
js
test
test
ret
jns
mov
in
enter
jecxz
loope
sbb
ret
scas
int
xor
jbe
fsubrl
loopne
inc
inc
lret
loopne
outsl
js
adc
adc
in
pop
and
dec
dec
test
push
mov
inc
sbb
pop
out
cld
xchg
sbb
je
cmp
call
mov
in
pop
sub
and
ficomps
in
mov
cs
negb
test
sub
sti
sti
lret
mov
fucomip
incl
clc
jb
jg
sahf
stos
xor
xchg
out
sbb
fcompl
int3
jle
cmp
pop
lcall
pop
adc
adc
inc
xchg
aad
inc
loopne
dec
cs
xor
xlat
gs
ds
adc
js
pop
movsb
call
pusha
fnstcw
ljmp
ljmp
sarb
add
stos
push
or
pop
xchg
test
decl
inc
lock
mov
outsl
adc
jmp
cmpsb
in
mov
out
aam
hlt
imul
daa
insb
xchg
aas
or
sub
jae
push
xchg
sbb
incl
icebp
outsl
dec
outsb
push
mov
and
and
pop
fldenv
ljmp
xchg
mov
loope
notl
lds
rolb
sub
xlat
mov
lods
adc
fdivrl
inc
fistpl
lods
outsl
test
repnz
dec
xor
je
popa
outsl
repz
push
mov
idiv
and
mov
push
cmp
dec
lcall
stc
jp
sbb
mov
inc
mov
notb
stos
test
outsl
call
inc
arpl
push
lret
mov
orl
mov
loop
sub
mov
imul
aam
shrb
xchg
test
lea
cmovbe
inc
std
cld
xchg
and
mov
das
cld
loopne
gs
mov
push
and
aaa
sub
or
js
sbb
mov
out
and
xchg
and
sahf
jb
push
jne
lods
or
cmp
fs
sahf
ret
lahf
popa
in
push
xchg
jns
or
mov
lcall
pop
cltd
icebp
bound
push
fcomi
clc
decl
cmp
add
and
jbe
test
lods
das
lock
call
aam
mov
inc
clc
int3
ret
cmc
sbb
xchg
sbb
mov
mov
xchg
imul
sbb
mov
mov
incl
cwtl
adc
sbb
das
nop
sbb
andb
cli
pop
xchg
mov
mov
stc
or
dec
mov
add
mov
into
pop
stos
hlt
cmpl
ja
mov
fsubs
mov
cpuid
sub
or
fsubrs
xor
into
stos
pop
ljmp
dec
mov
fcomps
sbb
cmp
adc
mov
fsubl
in
cld
xchg
sub
fcompl
lock
push
sub
sbb
cmpsl
inc
lods
dec
inc
cmpsl
in
dec
insb
mov
push
cmp
lock
fsubs
push
rolb
repz
pushl
or
rorl
imul
mov
push
xor
pop
cmpsl
hlt
pushl
sub
mov
fnstenv
fdiv
loop
dec
test
ret
jge
mov
out
js
pop
sub
pop
fisubs
mov
cmc
xchg
fldt
push
cli
orl
xorb
mov
sar
pop
sbb
mov
push
xchg
out
push
clc
fildll
jo
clc
mov
lock
decl
push
test
int3
dec
adc
and
in
lret
jl
sbb
mov
jmp
mov
loop
mov
std
ss
addr16
in
je
ljmp
aaa
leave
inc
iret
pop
push
mov
orl
lods
stos
sti
dec
dec
jg
les
lea
lock
push
and
mov
icebp
icebp
jns
or
lods
lock
cwtl
loop
aas
xchg
mov
mov
push
cwtl
xchg
xchg
push
xchg
fmull
jmp
mov
fildll
out
arpl
lds
jl
cli
sub
xchg
xor
out
in
call
lahf
data16
lret
ret
bound
incb
push
mov
loop
or
call
mov
pusha
iret
xchg
pop
mov
mov
shrb
jg
repnz
mov
pop
sub
or
push
arpl
xor
loope
inc
jl
xchg
pop
leave
push
frstor
xor
call
xchg
inc
pop
js
test
mulb
gs
fisubl
fsubl
mov
bnd
dec
pop
jecxz
dec
dec
jae
or
aas
ret
dec
arpl
mov
mov
mov
mov
xchg
pop
sbb
pusha
cmp
mov
loope
or
cltd
inc
popf
mov
decl
incb
daa
sbb
or
sbb
mov
cmp
pop
icebp
xor
or
and
inc
imul
fildll
and
lcall
outsl
fsts
ja
mov
fsub
pop
je
sbb
stos
shlb
cmpsb
or
mov
add
lret
jge
repz
lea
dec
mov
sbb
adc
test
inc
pop
jp
mov
dec
aad
xor
test
loopne
stos
dec
push
ja
movsb
cs
in
cltd
fnstsw
loop
xor
ficomps
outsl
hlt
orl
mov
in
insb
jnp
push
sub
iret
enter
jecxz
mov
ret
and
jl
and
cmp
jecxz
gs
sbb
das
inc
jge
add
or
inc
rcl
icebp
decl
jo
insl
movups
xchg
in
dec
cmp
nop
and
mov
loope
mov
and
fisubl
enter
movsl
jno
sub
push
loopne
mov
clc
lcall
xor
aam
push
mov
fildll
dec
jns
add
jecxz
jb
or
xchg
es
mov
aad
loope
and
push
repz
lcall
incl
fwait
xchg
dec
cmpl
sbb
push
stos
lds
lcall
insb
inc
xchg
fstpl
addr16
xlat
bound
fsts
adc
xchg
clc
mov
stc
orb
je
insb
pop
pop
loop
jae
mov
dec
pop
jo
cmp
fs
std
sbb
or
sti
pop
imul
clc
and
jb
mov
cmpsb
inc
push
push
cmp
aaa
pop
clc
outsl
sti
outsb
jmp
mov
adc
and
das
addr16
popf
inc
cmp
fwait
dec
cmp
cwtl
faddp
push
out
sbb
std
mov
leave
es
es
lock
xor
loopne
mov
dec
mov
mov
mov
sbb
mov
sub
iret
sarl
and
jl
xchg
sbb
decb
inc
in
and
mov
fstpl
movsl
xor
jns
push
adc
call
or
std
incl
dec
xlat
leave
cli
mov
mov
push
lret
mov
out
ret
mov
mov
lea
dec
frstor
aas
inc
mov
jecxz
out
mov
add
loopne
dec
pop
popl
lret
dec
rcr
mov
mov
fs
rcll
pop
fists
mov
repnz
jg
jmp
pop
sbb
pop
testb
pushl
mov
inc
mov
fwait
aad
repnz
or
clc
lcall
dec
jno
lcall
or
loope
xchg
in
and
add
pushl
inc
jge
stc
xchg
ds
pop
in
ja
les
xchg
fstpl
bound
mov
cmp
push
xlat
popa
out
mov
pop
push
leave
ja,pn
adc
lret
dec
jge
mov
das
cld
pop
mov
dec
xchg
call
movsl
sub
and
mov
or
mov
dec
dec
jb
and
aas
pop
jg
ss
mov
inc
iret
jno
dec
push
pop
stos
mov
xor
jno
pop
push
pop
xchg
add
mov
pop
push
push
mov
mov
pusha
inc
mov
inc
add
sbb
addr16
inc
into
aam
mov
outsl
jo
sbb
mov
cltd
push
and
push
ret
jle
decl
xchg
test
xor
adc
jnp
mov
decl
movsl
cld
adcl
out
cmc
mov
sbb
das
mov
xchg
xchg
fcoms
inc
dec
inc
mov
xchg
incl
cmpsb
xor
jne
outsl
imul
stc
jg
or
ss
add
fisttps
cmpsb
jns
pop
jl
cltd
push
sub
cmp
dec
aam
hlt
fsubl
xchg
mov
xchg
aad
nop
jl
push
xor
mov
fdivp
cli
test
arpl
xchg
cmpsl
jne
jg
push
sti
lods
sub
pop
popf
mov
mov
ljmp
dec
flds
ret
mov
lods
hlt
sahf
cmpsb
push
fists
jl
xchg
lret
jp
stos
or
pop
mov
pop
push
xchg
cli
push
insl
lods
mov
pop
mov
mov
out
lds
pushf
jnp
sub
inc
call
imul
int
cmc
mov
in
pop
jecxz
jecxz
loopne
call
xchg
loopne
lds
cmp
push
mov
mov
mov
push
pop
add
std
mov
aad
addr16
rcrl
cli
into
cmp
pushf
loope
or
jg
pop
mov
xor
push
fstl
pop
lods
mov
mov
push
into
jecxz
xchg
rclb
mov
popf
inc
rcrl
imul
dec
imul
push
sbb
test
or
push
sub
jo
idiv
inc
or
test
jp
aam
andb
lods
mov
les
ffree
mov
sub
mov
fistl
clc
in
sub
fptan
in
es
and
inc
or
clc
or
mov
adc
sub
mov
adc
adc
sub
lods
cwtl
hlt
or
mull
std
jg
lods
dec
mov
dec
js
ja
and
sahf
pushf
pop
mov
or
cli
loop
movsl
mov
imul
mov
jg
roll
out
inc
inc
dec
outsb
call
fildll
nop
add
xor
clc
iret
pop
in
loope
pop
clc
fbstp
loopne
sahf
lret
mov
xchg
sbb
insb
mov
or
rcll
adc
adc
out
clc
decl
push
je
rclb
xor
fucomip
loop
sub
outsl
cmpsb
cmpsb
subb
outsl
mov
or
lcall
sub
jne
fildll
mov
outsb
adc
fsubr
clc
clc
push
mov
cli
enter
mov
or
xchg
xchg
push
or
std
cwtl
sbb
inc
out
int3
cwtl
mov
enter
hlt
push
sub
mov
pop
call
sub
jg
ljmp
jge
adc
sub
or
jecxz
nop
aam
cmpsl
je
sub
std
in
xchg
mov
cmpsl
insb
fcomps
mov
out
ret
inc
and
sub
mov
dec
lcall
data16
mov
je
mov
mov
jae
clc
ljmp
ds
adc
pop
xchg
sbb
ds
outsl
cld
mov
shr
sub
adc
lcall
inc
subl
sbb
aam
jno
in
shll
pop
mov
xor
loopne
cmc
jmp
insb
lea
dec
data16
mov
sub
fsubrp
out
dec
pop
pusha
cmc
call
mov
mov
pop
sbb
call
inc
das
aaa
push
mov
jl
sbb
xor
insb
lcall
test
movsl
jmp
mov
stc
inc
fwait
int3
push
dec
nop
test
jno
cmp
cld
sbb
sub
mov
inc
pop
stos
cmpsb
hlt
sbb
dec
jg
push
pop
pop
in
mov
dec
mov
incl
xchg
loopne
imul
and
push
pop
decb
in
fs
sub
lret
xchg
shll
lods
incl
aaa
mov
bound
arpl
call
lret
cmp
pop
pop
loop,pn
add
bound
jbe
xchg
dec
mov
das
mov
jmp
mov
jns
fldl2t
inc
lea
push
mov
cmc
leave
ret
arpl
aaa
pop
outsb
das
fcom
cs
ljmp
inc
out
cltd
push
fsubl
stc
cld
nop
sbb
mov
fldcw
xchg
mov
leave
cmp
inc
push
push
inc
mov
clc
pop
dec
aad
andl
dec
dec
daa
imul
incl
xor
push
jl
daa
jg
movsl
dec
frndint
lcall
inc
push
jns
mov
push
ret
cmc
jle
ss
or
jl
fwait
clc
mov
pop
movsl
jbe
adc
in
lock
jge
nop
lcall
dec
pop
sub
idivb
sti
jl
scas
push
fstps
inc
inc
fnsave
clc
call
aaa
and
movsb
xchg
jb
xor
popf
iret
push
test
pushl
ficomps
mov
je
inc
or
fisttpl
fldenv
hlt
ret
sbb
adc
add
fldl2e
imulb
adc
mov
mov
in
stc
fstps
pop
push
jl
jp
adc
mov
mov
add
nop
addr16
stos
lods
ljmp
pop
xor
imul
sub
xchg
and
fbld
add
push
outsb
mov
je
std
and
xchg
push
out
dec
or
sti
sbb
pop
mov
jg
push
imul
mov
inc
mov
gs
out
and
mov
stos
icebp
pop
pop
ja
int3
inc
push
sbb
enter
or
cli
outsb
mov
pushf
js
insl
mov
jmp
outsl
adc
mov
leave
pop
out
decl
jge
dec
jne
cmp
call
lcall
clc
call
push
push
xchg
xchg
jbe
cmp
call
push
out
stos
or
rcl
in
jle
or
stc
sets
add
sti
insl
mov
call
pop
cmpl
dec
mov
das
hlt
jmp
fnstsw
mov
mov
add
jmp
incl
outsl
dec
sti
fwait
xor
sbb
aam
loopne
pop
sti
gs
aad
arpl
sub
fnstsw
xchg
mov
sub
jmp
imul
lret
das
jl
fwait
pop
inc
mov
flds
push
mov
sub
mov
rcrl
add
dec
or
test
mov
fldl
mov
decl
fidivrs
jne
rcll
push
sbb
dec
lods
pop
in
pop
xor
jle
pop
clc
mov
fwait
xchg
xor
dec
xchg
xor
mov
lea
les
cld
in
add
add
push
je
popa
insb
inc
jg
ljmp
outsb
imul
jbe
js
jo
xor
das
xor
pop
gs
outsl
bound
or
ljmp
imul
xor
adc
gs
mov
in
jmp
mov
add
fs
imul
dec
jne
je
inc
jns
repnz
outsl
push
imul
jb
arpl
jae
fs
xchg
fcmovnu
push
pop
imul
push
push
mov
imul
add
inc
inc
jne
inc
xchg
fstl
outsb
je
adc
inc
fs
sbb
out
jo
and
pop
sti
in
in
dec
outsl
fs
inc
imul
push
adc
mov
leave
mov
dec
outsb
outsw
inc
outsl
insl
jo
xchg
jb
mov
scas
pop
push
or
inc
js
stos
outsb
fs
jbe
outsl
ja
inc
imul
xor
push
imul
inc
add
mov
stc
or
jge
ja
fs
fisubrl
insb
jae
adc
in
jae,pn
pop
cmp
or
or
shll
push
imul
jle
jae
inc
jbe
and
dec
popa
pop
fcoms
divb
gs
ja
push
add
mov
jae
cmp
subb
sbb
add
shll
push
pop
clc
out
push
je
insl
dec
outsb
dec
inc
pop
bound
rorb
aas
int
clc
push
push
fistpl
je
ret
loope
or
dec
outsl
std
data16
xor
pop
fcoms
and
or
pop
adc
inc
outsb
jne
jb
mov
push
mov
push
jnp
es
js
fnstenv
or
ret
in
sub
data16
scas
xor
push
gs
jns
dec
mov
mov
push
outsl
push
jne
dec
or
cmp
gs
or
das
and
xor
gs
inc
sti
insb
imul
outsl
inc
andl
orb
testb
lahf
push
sub
mov
mov
jb
pop
arpl
insl
pop
mov
fnstenv
imul
push
int3
es
pop
stos
pop
jnp
sbb
jge
movsl
insb
insb
je
fldcw
pop
outsl
outsl
adc
jge
loope
mov
rolb
fcmovb
adcb
pop
arpl
pop
ret
testb
jo
push
fs
push
das
push
inc
outsl
rorb
or
jae
push
ss
ficomps
outsb
addr16
xchg
push
push
cltd
imul
popa
ret
adc
sbb
fs
xorl
je
arpl
outsb
xor
popa
jo
je
loopne
pop
mov
sbb
lret
mov
gs
loop
jae
xlat
push
data16
cmp
lcall
push
arpl
cmp
aaa
mov
mov
cmp
fnstenv
je
xchg
xchg
gs
dec
ret
adc
push
outsb
jo
inc
jae
in
push
je
fistl
popa
or
dec
dec
addr16
or
je
ds
lods
jne
es
push
xor
into
or
push
inc
mov
in
cltd
lea
sar
popa
inc
inc
insb
addr16
stc
movsl
inc
adc
sub
ss
pop
or
movsb
aaa
in
push
scas
jb
adc
add
sub
push
inc
mov
dec
sub
mov
cmp
insb
movsl
add
ret
icebp
jns
mov
popa
insb
jns
mov
jae
je
je
shll
push
test
fists
cmp
dec
xchg
push
outsl
push
imul
dec
adc
cmc
cmp
add
wbinvd
sbb
push
aam
adc
rclb
pusha
out
insb
adc
fadd
push
shlb
in
mov
or
mov
fsubr
xchg
int
in
data16
mov
mov
add
jns
stos
mov
xor
dec
insl
push
dec
and
mov
outsb
jbe
add
adc
filds
es
ja
adc
cmpsl
sbb
and
push
dec
push
rolb
cmp
into
sub
jae
or
imul
mov
add
jns
movaps
ror
notb
dec
add
adc
cs
add
mov
idiv
add
add
and
add
mov
addb
or
cmp
mov
in
jae
jo
sbb
xor
mov
mov
pop
push
add
and
mov
mov
sbb
mov
add
add
and
sub
imul
daa
in
idivl
es
add
fistl
lods
rorb
mov
fnstenv
pop
repz
adc
ss
movsb
test
push
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
and
mov
imul
movl
push
lret
pop
pushf
mov
xor
outsl
mov
outsl
add
enter
cmpsl
ss
lods
fistpll
aaa
lock
or
cmp
sub
jno
int3
and
shrl
jbe
xchg
add
aaa
jno
test
aaa
cltd
ds
adc
or
das
push
out
rcll
xor
mov
aam
or
xchg
mov
dec
filds
jae
or
pop
pop
cmpsb
or
lret
and
push
out
rolb
ficoml
in
mov
scas
push
movsl
sbb
sti
and
aad
repz
dec
in
pop
mov
fwait
jnp
test
and
mov
pop
sub
or
jmp
adc
sahf
mov
add
pop
xchg
xchg
cmp
sub
aam
adc
in
and
test
int
aaa
dec
mull
sub
pop
repz
out
push
into
push
cmp
xchg
inc
mov
xchg
sbb
mov
sbb
es
nop
pop
sub
sbb
xchg
cld
mov
xchg
movsl
ds
daa
loopne
and
and
push
ret
mov
fwait
pop
call
xlat
clc
xchg
dec
xor
out
out
lcall
mov
xchg
jno
popf
stos
stc
ja
cwtl
or
out
cwtl
lea
arpl
shl
add
jns
std
outsl
push
jmp
sahf
xor
adc
add
pop
loope
xlat
in
mov
scas
or
ret
lea
ror
inc
pop
or
fcmovbe
inc
pop
sub
rolb
lret
and
xor
iret
loopne
psubsw
jbe
adc
int3
in
xor
pusha
shll
inc
xchg
cmc
out
jmp
push
popf
insb
add
add
add
add
sub
add
enter
adc
add
or
add
add
add
add
add
push
add
addb
add
js
add
mov
add
add
add
add
add
dec
xchg
add
push
add
add
add
add
xchg
add
push
add
add
add
add
fwait
add
push
add
add
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
addb
add
sbb
add
add
add
pushf
add
dec
add
add
add
sub
add
xor
add
pusha
add
add
add
sbb
idiv
add
push
std
add
fistpll
add
add
mov
add
incb
mov
insb
jno
das
adc
or
cli
out
out
and
mov
mov
add
out
cmpxchg
pop
jae
enter
adc
push
test
sbb
sub
test
push
mov
or
jne
loopne
or
out
imul
xor
repz
sbb
add
adc
in
push
es
fmull
jne
push
sub
add
sub
cs
cmp
rcrl
in
mov
inc
mov
mov
cs
push
ds
outsl
xor
jg
or
dec
dec
adc
lret
addr16
push
jmp
stos
sub
add
jg
ret
dec
jl
pushf
pop
call
hlt
gs
adc
mov
daa
es
ret
jno
and
or
cltd
push
out
add
loop
int3
movsb
dec
stc
xchg
in
fildll
shl
mov
and
scas
xchg
inc
mov
adc
jl
gs
sub
hlt
sbb
dec
adc
lret
jg
mov
std
fwait
nop
dec
jle
je,pt
jb
sub
add
lock
addr16
fldt
int3
clc
lods
or
push
dec
jg
or
inc
rorl
call
mov
outsb
loope
adcb
cs
xchg
lret
dec
mov
push
cmp
fcomps
or
inc
xor
hlt
mov
enter
jle
inc
jge
and
in
inc
repz
dec
jnp
mov
andb
pop
jecxz
out
pusha
cmpsl
mov
imul
adc
jmp
lods
or
push
pop
subb
mov
push
fbld
in
mov
xor
push
mov
ljmp
lock
cmpsl
add
aam
mov
xchg
mov
jle
mov
mov
mov
in
divl
inc
and
arpl
subl
mov
js
test
cltd
dec
jbe
ret
push
lret
add
cmp
sub
sub
dec
dec
f2xm1
aam
mov
enter
cmp
stos
mov
xor
fstpt
lods
pop
je
fisubl
xor
sub
pop
cmpsl
add
fxch
andl
jbe
cmp
and
scas
rorl
mov
mov
movl
xor
fbstp
sbb
lret
and
stos
mov
dec
push
jnp
int3
std
inc
imul
push
mov
and
rcll
mov
pop
cmp
mov
mov
iret
lret
pop
push
pusha
loope
das
mov
sahf
mov
aas
cld
fsts
pop
pop
adc
mov
adc
push
daa
sar
mov
call
cltd
movsb
out
or
sub
xorl
sbb
xchg
push
or
sbbl
pusha
sub
mov
jns
pop
icebp
insb
outsl
or
xor
lret
mov
aad
and
daa
jl
inc
dec
cltd
popl
dec
das
adcb
in
or
movswl
push
dec
fldt
jle
rorb
cmc
pop
pop
jg
mov
mov
push
test
mov
mov
mov
loope
inc
or
jo
loopne
inc
xorl
sub
dec
push
mov
and
push
scas
push
lock
imul
jg
sub
dec
sub
repz
aas
loope
mov
stos
in
iret
dec
in
outsl
push
jo
out
movsb
sub
mov
es
jns
sbb
push
cmp
jnp
icebp
mov
cltd
icebp
leave
push
jge
nop
jno
add
vpaddb
push
xor
push
nop
cld
jnp
loop
cmc
push
stos
mov
out
aam
sbb
nop
ret
cwtl
lods
xor
inc
dec
dec
add
sarb
add
pop
out
ret
ljmp
fmull
hlt
icebp
test
mov
int
adc
dec
lret
sbb
fmull
dec
push
xchg
add
movsl
adc
dec
xlat
cmp
rcll
or
out
dec
jmp
add
add
add
add
add
add
add
add
add
negb
add
mov
testl
aas
testl
out
incb
lcall
add
pop
incl
jnp
add
fcomip
add
cmp
add
add
jle
test
mov
adc
rorl
dec
pop
data16
inc
and
cmpsl
cwtl
xor
test
pop
pop
imul
cmp
sarl
dec
iret
cld
sub
or
or
push
sub
mov
cltd
and
dec
mov
es
scas
and
stc
rcr
sub
push
insb
push
pop
out
in
adc
pop
repz
repnz
mov
ja
das
xchg
xchg
lods
xor
mov
mov
mov
or
insl
scas
add
aas
xlat
fistpll
pop
out
arpl
or
nop
int
in
or
mov
mov
ficomps
mov
out
jmp
cld
mov
inc
out
lds
sbb
adc
lcall
add
pop
std
jb
adc
stos
inc
jecxz
lret
dec
fsubrl
lea
mov
or
jmp
mov
into
int3
pop
add
and
into
ret
fistl
sbb
insb
adc
cmp
adc
in
xor
sbb
dec
jbe
sub
xchg
mov
xor
pop
shll
xor
xchg
add
mov
inc
or
shlb
pusha
pusha
cltd
fiaddl
insl
pop
jnp
stos
jecxz
aam
jb
and
cmp
fmull
sub
test
int
jecxz
aaa
fdivrs
aas
cmpsl
mov
xor
fmul
xor
outsb
pop
shlb
adc
lahf
out
lahf
sbb
sbbl
and
mov
adc
add
sbb
test
ljmp
mov
adc
rorb
push
add
mov
sbb
add
add
add
add
add
add
add
add
jg
in
out
cld
out
stos
fcomip
add
std
loop
jg
cld
add
add
stc
cli
add
add
add
cli
mov
add
clc
mov
add
mov
ljmp
stos
adc
sbb
pop
scas
fsubp
shr
dec
add
sbbb
stos
stos
jl
das
push
xchg
push
dec
cmpl
ret
mov
mov
dec
mov
xchg
add
or
jmp
andl
pop
dec
jb
sbb
test
out
dec
lock
and
inc
jno
add
out
sbb
repnz
mov
sti
jle
add
add
add
add
add
xor
add
add
push
add
and
add
add
push
add
adc
add
add
push
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
and
pop
add
add
add
add
add
add
add
add
add
stos
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
xchg
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
inc
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
pop
add
push
push
add
imul
add
and
pop
add
jae
outsl
add
add
add
sbb
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
pop
add
push
push
add
imul
add
and
dec
add
insb
add
arpl
jns
insl
add
add
imul
push
add
add
add
push
add
add
imul
push
add
jb
jae
imul
add
add
add
and
xor
xor
cmp
sub
and
cmp
sub
and
aaa
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
js
push
push
add
imul
add
add
add
jb
daa
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
push
push
add
imul
add
and
pop
add
jae
outsl
add
add
add
add
add
add
add
add
add
add
add
sldt
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
pop
add
push
push
add
imul
add
add
js
add
add
add
sbb
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
pop
add
push
push
add
imul
add
and
dec
add
insb
add
arpl
jns
insl
add
add
imul
push
add
add
add
sldt
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
sub
and
aaa
add
add
add
sub
and
cmp
xor
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
mov
add
or
add
push
mov
add
and
add
sub
add
in
add
cmp
add
inc
mov
add
dec
mov
add
insb
mov
add
mov
add
add
add
cmpsb
mov
add
mov
add
add
add
mov
add
fisubs
add
out
mov
add
mulb
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
dec
inc
push
dec
xor
cs
dec
dec
add
dec
dec
inc
xor
cs
dec
dec
add
inc
xor
cs
dec
dec
add
inc
dec
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
push
push
dec
dec
dec
cs
dec
dec
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
dec
insl
popa
addr16
imul
ja
add
outsb
jae
popa
jb
outsb
je
insb
je
add
gs
je
push
je
gs
insl
dec
outsb
dec
inc
insb
outsl
bound
add
add
gs
insb
inc
js
arpl
gs
add
add
je
inc
add
add
jb
jne
jb
push
popa
insb
jne
push
