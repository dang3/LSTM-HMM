stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
add
shlb
pop
add
call
add
pop
push
mov
sub
push
push
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
ret
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
jmp
ret
and
push
pop
sub
mov
mov
shl
xor
sub
mov
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
je
mov
sub
jne
push
pop
je
popf
push
pushl
decl
ret
push
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
push
push
push
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
push
push
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
push
push
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
pushl
push
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
push
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
add
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
add
lea
sub
sub
mov
pop
mov
mov
lea
mov
push
mov
xorl
pop
sub
or
mov
cmp
je
add
mov
push
push
push
pop
push
pop
stos
shr
stos
shr
stos
shr
stos
pop
pop
subl
neg
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
mov
and
add
and
add
and
add
add
cmpsb
and
add
and
add
add
fisubl
add
cli
and
add
add
push
and
add
and
add
and
add
and
add
add
push
and
add
and
add
and
add
add
add
and
add
and
add
add
mov
and
add
and
add
and
add
add
and
add
add
xchg
and
add
add
add
add
push
and
add
add
inc
and
add
add
add
add
outsb
and
add
add
add
and
add
and
add
and
add
add
adc
add
add
mov
add
add
add
add
add
nop
and
add
add
add
add
jle
add
movsb
and
add
add
out
and
add
and
add
add
cmpsb
and
add
and
add
add
fisubl
add
cli
and
add
add
push
and
add
and
add
and
add
and
add
add
push
and
add
and
add
and
add
add
add
and
add
and
add
add
mov
and
add
and
add
and
add
add
and
add
add
xchg
and
add
add
add
add
push
and
add
add
inc
and
add
add
add
add
outsb
and
add
add
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
gs
outsl
insl
insl
inc
jb
popa
imul
push
push
je
imul
inc
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
add
gs
outsl
jbe
inc
imul
jns
add
call
inc
imul
bound
gs
add
push
add
outsl
jae
dec
popa
outsb
fs
add
dec
outsl
arpl
inc
insb
popa
addr16
add
gs
popa
jae
inc
jb
outsl
jb
add
add
je
imul
bound
gs
add
movsl
add
je
gs
imul
repnz
imul
jb
je
arpl
add
aad
inc
imul
add
popa
je
inc
imul
jns
add
pop
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
roll
dec
gs
jo
jb
add
ret
gs
jne
jb
outsb
je
jb
arpl
jae
cmp
push
jb
jbe
je
push
jb
imul
inc
add
add
imul
outsb
je
outsl
insb
add
add
outsl
bound
dec
outsl
arpl
add
inc
jne
jb
outsb
je
push
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jnp
inc
gs
imul
outsb
addr16
add
pop
or
jae
dec
gs
popa
addr16
add
into
pop
dec
outsl
popa
fs
jne
jae
jb
add
push
imul
js
push
add
jnp
push
gs
outsl
arpl
add
mov
inc
imul
dec
gs
popa
addr16
add
das
push
inc
insb
outsl
jae
inc
gs
je
jo
add
pop
dec
jae
outsl
outsl
insl
gs
rolb
jae
imul
sbb
ja
jo
imul
pop
dec
jae
imul
jae
popa
addr16
add
jae
push
gs
jne
jae
jb
outsl
jae
add
dec
gs
popa
addr16
add
push
push
inc
push
xor
cs
insb
add
or
inc
gs
gs
imul
inc
gs
fs
jae
inc
jns
popa
insl
gs
add
add
je
gs
jns
popa
insl
add
pop
add
je
popa
insl
gs
jns
jns
gs
add
dec
push
push
push
dec
inc
dec
cs
insb
add
dec
jae
popa
je
push
push
inc
add
push
dec
push
push
dec
cs
insb
add
fstpl
lock
or
lret
jbe
mov
pop
pushf
mov
push
js
fs
clc
filds
aam
cmpl
cmp
sub
push
and
clc
pushf
jb
test
push
pusha
les
into
cmp
mov
pop
in
cmp
push
mov
adc
aaa
imull
push
je
push
das
imul
loope
aaa
sbb
inc
sbbb
jl
jno
push
adc
xor
mov
xlat
lea
mov
loop
sub
dec
jg
fs
jno
enterw
lret
fidivrs
pop
add
xor
lcall
sbb
pop
movsl
scas
bound
sbb
aam
xchg
xchg
sub
pop
cld
ljmp
mov
test
gs
xchg
mov
lret
sbb
or
cli
sbb
xchg
adc
pop
jo
in
mov
jp
in
lods
push
add
pushf
xor
sbb
cs
xchg
jo
ret
shrl
hlt
je
inc
jo
adc
inc
mov
pop
xchg
xchg
jo
bound
std
and
pop
stos
xchg
jae
push
aas
test
sub
cmp
sub
not
jno
fdivp
pop
or
add
loopne
mov
shll
pop
add
stos
scas
xchg
dec
push
fdivrs
add
mov
jge
lahf
mov
mov
enter
xor
stos
xchg
dec
stc
xchg
dec
ud0
dec
dec
mov
jg
sbb
lods
shlb
lds
ljmp
mov
mov
lock
rcrl
or
cmp
adc
or
add
xor
fiaddl
add
add
add
add
xor
add
decl
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
or
add
adc
add
or
add
and
add
or
add
add
add
add
add
add
add
add
push
popa
add
test
add
clc
xchg
add
add
add
add
add
or
add
mov
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
push
sub
sub
xchg
xchg
xchg
add
scas
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
stos
mov
mov
cltd
pop
xchg
xchg
xchg
or
jg
jl
jp
lods
stos
lods
add
cmpsb
push
mov
mov
mov
ret
ret
stos
lret
lret
lret
into
int
rcl
shr
rcl
shl
rcl
shl
into
int
hlt
leave
mov
out
vshufps
mov
mov
stos
stos
stos
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
lahf
add
mov
mov
out
lret
lret
rcl
cld
fcomp
xlat
std
fcom
xlat
fcomp
aam
rcl
iret
dec
int
aam
dec
ror
inc
std
mov
mov
lods
iret
mov
xchg
and
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
scas
lods
sbb
mov
jnp
mov
sar
vpaddd
lret
rcl
sar
aam
fcom
fdivr
fcom
fdivr
aad
dec
into
int
int3
int
call
aad
dec
int3
into
inc
mov
mov
ljmp
cmpsb
cmpsb
ljmp
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
push
pop
add
inc
add
pop
add
push
or
inc
or
sbb
add
add
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
enter
int3
into
call
rcl
call
fcomp
fcom
xlat
call
aam
dec
into
int3
dec
lret
lret
into
int3
inc
mov
mov
mov
cmpsb
test
jmp
fwait
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
imul
fs
das
femms
or
xor
aaa
cmp
cmp
cmp
and
and
pop
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
dec
enter
iret
sar
aad
aam
aad
aam
ror
sar
leave
leave
inc
inc
ret
mov
mov
ljmp
movsl
mov
xchg
cwtl
xchg
lcall
test
pop
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
arpl
push
push
push
add
jo
jg
jge
jle
jg
jno
jno
bound
mov
cmp
inc
inc
mov
outsb
outsl
outsl
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
movsl
movsl
movsb
add
mov
mov
mov
mov
mov
mov
mov
dec
enter
leave
lret
dec
leave
lret
inc
enter
ret
mov
mov
ljmp
movsl
mov
call
xchg
xchg
xchg
cwtl
xchg
cltd
fwait
cltd
in
addb
push
or
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
jo
jo
pop
pop
pop
or
pusha
nop
lea
incb
jl
idivb
jnp
outsb
jo
out
data16
push
ret
jle
jns
jp
arpl
inc
inc
inc
cmp
sbb
sbb
adc
or
lods
lods
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
test
lcall
nop
incl
test
xchg
xchg
xchg
lahf
sahf
lahf
sti
mov
cwtl
xchg
mov
jp
jp
xor
das
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
addl
in
mov
incl
mov
std
mov
jg
jb
jb
jae
je
jg
jg
addb
xchg
addr16
ss
and
cmp
movsl
movsl
mov
icebp
lods
stos
stos
sti
stos
stos
stos
lods
lods
lods
test
test
std
fwait
lcall
mov
jle
jp
js
jl
jp
mov
xchg
movsb
movsb
movsb
mov
mov
mov
mov
mov
mov
mov
scas
lods
stos
test
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
incl
xchg
lea
xchg
std
cwtl
xchg
xchg
stc
xchg
xchg
xchg
in
mov
enter
int
mov
mov
pop
pop
push
push
or
inc
dec
insl
imul
test
fwait
fistps
cltd
cltd
stc
xchg
std
mov
mov
mov
mov
mov
lcall
lods
scas
mov
mov
mov
mov
mov
std
mov
mov
movsb
mov
jp
scas
cmpsl
stos
add
adc
cmpsl
scas
call
lcall
incl
mov
xchg
xchg
xchg
sahf
sahf
pushf
std
movsb
movsb
movsl
stc
mov
xchg
xchg
in
xchg
xchg
in
test
push
jne
push
push
dec
add
add
inc
es
daa
push
dec
dec
dec
outsw
jno
test
xchg
xchg
rclb
xchg
std
mov
call
lahf
sahf
jmp
test
pushl
cmpsl
scas
mov
xchg
stos
std
rorl
mov
mov
ljmp
lahf
adc
add
add
pop
adc
mov
jmp
popf
xchg
fwait
incl
mov
xchg
call
xchg
xchg
sahf
popf
sahf
movsl
movsl
mov
mov
xchg
xchg
fstpt
jl
push
push
push
outsl
dec
dec
dec
pushaw
bound
jno
je
jl
jg
test
int
xchg
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
mov
mov
xor
js
mov
movsl
mov
mov
mov
mov
movsb
add
pop
pop
adc
mov
ljmp
popf
decl
xchg
call
xchg
xchg
call
xchg
xchg
lcall
mov
movsl
movsb
std
movsb
movsl
movsb
stc
cltd
cltd
lcall
xchg
xchg
les
lcall
mov
stc
xchg
test
std
xchg
jb
fwait
imul
ljmp
cmp
mov
jae
mov
outsl
ljmp
pcmpgtd
stos
or
ljmp
inc
jle
mov
mov
lods
pushf
movsb
mov
movsb
add
mov
add
pusha
adc
mov
lcall
nop
xchg
call
cltd
cltd
lcall
lahf
mov
lcall
xchg
xchg
decl
cwtl
xchg
call
lcall
cltd
mov
cld
sahf
mov
xchg
push
xchg
pop
jle
xchg
dec
jp
cltd
jbe,pt
lcall
mov
adc
ljmp
adc
lods
adc
lods
adc
mov
imul
mov
insb
mov
lcall
lods
lods
scas
scas
movsb
mov
movsl
add
add
add
add
mov
pop
pop
adc
mov
lcall
xchg
xchg
lcall
sahf
jmp
mov
mov
decl
mov
decl
js
lcall
xchg
dec
jnp
xchg
jo,pt
nop
sub
pusha
decl
or
xchg
add
push
lcall
pop
pop
ljmp
sbb
mov
outsb
pushl
push
jo
mov
and
mov
and
inc
test
les
cli
scas
scas
scas
mov
mov
movsl
movsb
add
pop
pop
adc
lods
mov
shll
lcall
mov
cmpsb
ljmp
test
test
lcall
decl
dec
outsl
decl
sub
mov
popa
decl
or
addb
xchg
push
decl
add
xchg
add
xchg
add
lcall
ljmp
pop
outsl
pushl
sub
mov
sub
inc
sub
inc
sub
cs
leave
inc
mov
enter
sarb
lret
movsb
dec
mov
movsl
movsb
add
push
adc
test
ljmp
popf
jmp
stos
stos
ljmp
lods
lods
pushl
scas
lods
jmp
jno
decl
or
incl
or
addb
incl
push
incl
add
mov
push
call
add
fwait
add
lahf
add
mov
adc
mov
cmp
dec
cmp
int3
cmp
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
movsl
movsl
movsl
push
mov
mov
add
add
add
mov
dec
dec
adc
mov
mov
lahf
lcall
scas
scas
scas
pushl
mov
pushl
mov
ljmp
decl
or
mov
pop
decl
or
xchg
push
incl
add
mov
push
call
add
sahf
add
add
cmpsb
add
lods
add
pushl
cmp
dec
inc
mov
roll
call
inc
call
dec
xchg
fmuls
fisttpll
fistl
call
xchg
std
mov
mov
movsb
movsl
mov
or
add
add
add
add
dec
dec
adc
jp
movsb
sahf
mov
lcall
test
mov
mov
mov
mov
mov
mov
mov
mov
scas
mov
movsl
xchg
decl
popa
decl
adc
pop
decl
add
popl
pop
call
add
add
add
test
popa
pushl
es
into
inc
mov
aad
cwtl
fcoms
ficoml
fistl
fists
fistps
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
jne
mov
lahf
add
inc
inc
adc
jns
sahf
lcall
sahf
fwait
sahf
ljmp
mov
mov
mov
mov
mov
mov
ljmp
inc
jne
and
and
callw
sbb
nop
or
popl
push
call
pop
jmp
add
lods
add
mov
fs
mov
xor
call
pop
fwait
ficompl
fisubs
fisubs
jmp
fs
in
cmpsl
call
push
jmp
push
mov
int3
mov
mov
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
inc
adc
jae
fwait
xchg
cltd
call
mov
lods
lods
pushl
mov
mov
mov
mov
ljmp
push
jle
xchg
sub
fwait
das
outsb
lcall
sub
xchg
sbb
pop
call
add
mov
add
lods
add
mov
pushl
movq
roll
jmp
outsl
lods
jmp
jo
jmp
jo
ljmp
jmp
scas
out
je
in
jbe
out
jb
jmp
mov
mov
cmpsl
cmpsl
lcall
mov
add
add
add
jle
ds
cmp
js
mov
lcall
mov
pushl
mov
mov
inc
rol
mov
cmpsb
scas
lcall
xor
sahf
aaa
jne
lahf
aaa
jae
lahf
xor
cltd
sbb
pop
call
add
mov
add
mov
pushl
add
sbb
fsts
jecxz
mov
jmp
jg
jmp
mov
out
cmpb
xacquire
push
test
jmp
mov
mov
test
cmpsl
popf
popf
popf
daa
sahf
mov
mov
add
pusha
add
aaa
cmp
pop
pusha
push
jne
jle
out
test
xchg
xchg
xchg
pushl
mov
mov
mov
ret
rol
pushl
outsb
mov
lcall
jmp
js
cltd
sbb
add
pushf
add
add
add
scas
add
mov
fs
mov
add
call
and
mov
in
mov
push
mov
push
nop
ret
push
pop
push
xchg
ret
push
xchg
xchg
stc
ret
mov
inc
ret
lods
stos
mov
sahf
sahf
xor
sahf
add
add
add
aas
add
xor
push
inc
inc
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
sar
ret
ret
inc
ret
ret
mov
jl
lcall
dec
cmp
movsb
xor
lcall
add
mov
add
lods
add
mov
mov
add
enter
fdivs
jmp
js
in
xchg
ret
push
cltd
push
lcall
cmc
lcall
negl
int3
cld
lahf
int
sti
cwtl
lret
push
xchg
ret
mov
enter
mov
lahf
sahf
mov
add
add
add
cs
outsb
push
dec
dec
jecxz
pop
pusha
call
mov
mov
mov
mov
inc
inc
mov
lahf
lcall
push
xchg
lods
dec
mov
movsl
sub
lcall
jmp
popa
pushl
add
mov
add
rorl
out
lea
push
movsb
int
cmc
movsl
int
clc
cmpsb
iret
cld
test
iret
sti
test
std
stos
sar
stos
sar
std
test
jmp
mov
dec
leave
lret
std
mov
mov
mov
xchg
xchg
add
cltd
fwait
add
add
add
xor
or
inc
bound
pop
xlat
je
jno
mov
mov
ret
mov
ret
ret
enter
ret
pushl
push
test
lods
push
mov
scas
dec
xchg
sahf
sbb
lcall
pop
ljmp
fs
mov
add
int
insl
call
add
fists
jl
out
pop
test
negl
sar
cld
mov
sti
mov
cld
mov
std
mov
cld
mov
cld
mov
mov
mov
cld
mov
push
cmpsb
jmp
mov
call
enter
mov
fisubl
xchg
xchg
or
add
add
xor
sbb
ss
outsl
mov
mov
aam
xlat
jmp
xlat
xlat
test
int3
int
lret
leave
lret
dec
lret
lret
lret
leave
mov
lods
jmp
push
mov
lods
cmp
jmp
add
stos
add
mov
fs
mov
add
rolb
outsl
call
add
add
ljmp
cli
scas
aad
mov
std
mov
fdivr
std
mov
fdivr
mov
fcos
inc
mov
int3
jmp
mov
call
lret
mov
lahf
lahf
jo
xchg
xchg
or
add
add
xor
xor
add
add
pop
pop
pop
or
enter
in
out
call
test
in
leave
fsub
fucom
fcmovu
fdiv
fcomp
xlat
cli
xlat
xlat
std
into
iret
sar
mov
imul
jmp
add
mov
arpl
mov
add
leave
add
add
faddl
jbe
in
ja
out
das
xchg
clc
mov
cld
mov
loopne
std
ret
std
inc
inc
dec
fdivrp
inc
std
leave
std
fdivrp
std
leave
cli
mov
leave
call
lret
mov
mov
xchg
adc
add
add
std
add
std
add
std
std
add
div
or
out
in
pop
jmp
in
sub
out
in
dec
ljmp
xchg
out
call
aad
jmp
mov
xchg
cmpsl
cmp
movsb
adc
jmp
add
mov
mov
add
int3
add
add
add
ljmp
sti
mov
jecxz
cld
lret
dec
in
dec
jecxz
dec
loop
std
int3
loop
std
into
loop
call
jecxz
std
shl
call
in
call
in
sti
in
mov
inc
cmpsl
test
xchg
xchg
xchg
sbb
lcall
incl
std
std
incl
idiv
clc
add
repz
repz
out
icebp
out
pop
in
lock
cmp
out
in
pop
loopne
loopne
mov
xchg
sti
mov
push
pop
jmp
pop
pushl
add
leave
add
add
fildl
jbe
in
jns
jmp
jle
negb
cld
mov
shl
std
iret
jecxz
std
shl
shl
call
in
call
call
call
out
std
fld1
fld1
shl
push
ret
in
leave
lret
lret
rep
test
xchg
and
cwtl
xchg
add
cld
add
cld
testl
hlt
cmc
repz
aam
xor
mov
xchg
negb
add
add
lods
add
mov
add
leave
add
roll
jb
faddl
jbe
out
js
out
sbb
stc
jbe
cli
std
fsubr
std
std
fldl2e
std
fsubr
fucomp
std
fucomi
fucomip
std
fucomip
fucomip
cld
shl
push
ret
out
rcl
sar
stos
lods
stos
lods
xchg
xchg
xchg
outsl
outsb
jo
xchg
xchg
xchg
add
loope
add
mov
xchg
stos
jl
repnz
pop
jmp
jmp
add
mov
add
int3
add
aam
jb
filds
jae
ljmp
sti
nop
cld
aam
fdivp
fucomi
fucomi
fucomi
std
fsubr
cld
aam
std
aam
cld
iret
loop
cld
shl
clc
iret
stc
int3
fdivrp
test
out
mov
jmp
rcr
fcom
xlat
sti
mov
mov
cltd
fwait
lcall
cltd
lcall
add
add
xlat
add
mov
subb
insb
lcall
add
mov
mov
add
rolb
jo
xlat
add
loop
js
jmp
aaa
xchg
cld
xchg
enter
loopne
sti
lret
cli
stc
rcl
idivl
sar
icebp
mov
iret
out
mov
int
jmp
ret
iret
std
ljmp
imul
fsub
cmc
fnstsw
fsubrp
mov
mov
xchg
add
add
add
int
add
mov
loopne
ss
mov
add
mov
data16
mov
add
int3
pop
jno
rorl
je
ficoml
js
loop
cmp
dec
xchg
ljmp
call
mov
std
loop
mov
cli
fdivrl
lock
into
in
enter
rcl
shl
aad
call
in
test
out
lock
call
lret
stos
lods
stos
adc
test
test
lahf
mov
roll
ret
mov
sahf
stos
aam
dec
cmp
test
push
scas
and
mov
ja
mov
inc
test
ret
push
mov
lret
arpl
hlt
rorb
mov
mov
leave
lret
int3
rcl
int
aad
shll
xlat
rcl
jg
jb
fnstsw
gs
jecxz
out
jmp
xor
div
cmc
and
lock
fcmovnu
or
mov
int
xchg
add
mov
sarb
mov
xchg
lock
sbbb
mov
cmpsl
sarb
stos
mov
ret
mov
cmpsl
leave
mov
mov
leave
lret
jp
into
shlb
rcl
push
rcl
rorl
inc
aam
aam
aam
fldenv
ficompl
fneni(8087
fstl
fsubp
jecxz
loopne
jecxz
call
lock
add
cli
cmc
add
std
std
add
incl
std
incb
mov
mov
mov
mov
lods
scas
xchg
mov
mov
mov
mov
ret
les
mov
daa
int3
ror
and
aad
sbb
rclb
iret
aam
or
push
rcr
xlat
add
add
add
jecxz
add
in
jmp
leave
aam
std
incb
mov
mov
add
rol
les
mov
mov
mov
push
ret
or
enter
leave
enter
lret
add
rolb
rcr
aad
aam
aad
aad
add
xlat
add
xlat
loopne
xlat
aad
add
loopne
add
fstp
add
out
add
icebp
lock
incl
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
mov
ret
ret
mov
mov
mov
test
cmpsl
cmpsl
and
add
add
add
add
add
add
add
add
mov
shlb
ror
jmp
aad
cmc
rcl
sar
rcl
iret
cli
int3
int
stc
lret
hlt
mov
mov
lods
fwait
xchg
xchg
xchg
dec
aas
cmp
add
add
add
add
add
add
add
addb
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
leave
cld
into
iret
sar
aad
xlat
xlat
xlat
call
iret
iret
dec
into
iret
dec
lret
mov
mov
cld
stos
stos
stos
icebp
xchg
cltd
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
jae
jne
jae
fs
inc
dec
dec
cmp
sub
sub
aaa
xor
dec
sub
adc
sub
add
add
mov
mov
mov
mov
mov
mov
ret
lret
rcl
sar
rcl
sar
lret
lret
lret
mov
mov
ljmp
lahf
lahf
xchg
cwtl
cwtl
jmp
jno
xchg
push
push
pop
dec
add
add
add
add
add
add
addl
test
push
imul
push
push
insl
insb
outsb
push
pop
pop
cmp
aaa
cmp
jno
jo
scas
mov
pop
mov
mov
mov
mov
sar
mov
mov
mov
ljmp
pushf
fwait
call
xchg
xchg
fwait
cltd
lcall
dec
dec
dec
adc
wrmsr
add
add
add
add
add
pop
cltd
lcall
popf
cwtl
cltd
fcoml
addl
jmp
js
sarb
jp
jns
jp
jb
jb
push
push
push
cmp
aaa
sahf
popf
popf
mov
scas
scas
repz
lods
lods
sti
scas
lods
scas
std
test
pushf
popf
call
test
call
mov
lods
jmp
scas
scas
leave
cmpsb
movsl
cmpsb
cltd
je
jae
adc
adc
add
add
add
add
insl
outsl
outsb
pop
nop
mov
loop
cwtl
pushf
incl
mov
sti
xchg
xchg
xchg
lock
nop
nop
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsl
jo
orl
cltd
lcall
mov
call
popf
sahf
ljmp
mov
mov
scas
mov
xlat
cmpsl
mov
jg
pop
pop
pusha
or
scas
mov
movsl
mov
mov
mov
nop
call
popf
mov
negl
addb
push
pop
pop
outsl
insb
insl
outsl
xchg
subl
mov
lcall
mov
pushl
pop
mov
jl
mov
scas
stos
insl
stos
stos
test
add
add
add
pusha
or
mov
in
mov
nop
call
cwtl
lcall
cltd
cltd
fwait
popf
pushf
fwait
sahf
sahf
cli
xchg
xchg
xchg
jmp
xchg
mov
jecxz
orl
cld
xchg
pop
jg
sahf
dec
jnp
mov
ss
scas
sub
mov
outsb
pushl
sbb
mov
scas
mov
mov
scas
jle
movsb
movsb
push
pusha
pop
pusha
or
mov
in
mov
cwtl
lcall
mov
mov
decl
addl
xchg
jno
cld
xchg
popa
cmp
dec
jp
xchg
cmp
xchg
sub
xchg
sbb
cwtl
adc
lahf
punpckldq
test
sbb
mov
insb
pushl
push
jno
mov
pop
xchg
mov
lods
scas
xchg
popf
lahf
sahf
adc
add
add
popa
popa
pop
or
lods
mov
test
lahf
lahf
jmp
stos
test
lcall
pop
jns
mov
push
mov
decl
adc
test
push
decl
add
xchg
add
pushf
add
test
pushl
sub
jl
lds
jg
leave
xor
dec
pop
xchg
inc
test
imull
cmpsl
test
add
add
add
pusha
or
movsl
stos
in
mov
cmpsl
ljmp
mov
pushl
xchg
lahf
call
adc
mov
push
incl
push
push
decl
add
xchg
add
lahf
add
add
mov
outsb
inc
cmp
dec
inc
mov
rolb
inc
xchg
fmuls
call
popa
lahf
inc
cmpsl
mov
mov
mov
mov
incl
add
add
pusha
pusha
popa
or
lahf
mov
ljmp
mov
mov
mov
stos
call
pop
arpl
xchg
sbb
decl
or
push
call
add
add
scas
add
mov
dec
xchg
call
pop
fwait
ficompl
jmp
pop
sahf
jmp
pop
mov
jmp
insb
test
lret
cmpsl
mov
ret
cmpsb
xor
add
add
dec
pop
jl
jl
fwait
xchg
cltd
jecxz
lahf
mov
pushl
mov
mov
lcall
sub
lcall
and
xchg
adc
add
lahf
add
cmpsb
add
scas
add
mov
xor
fisubl
jmp
insb
test
in
stos
ljmp
out
jb
jmp
jp
call
cmpsl
mov
shrl
cmpb
add
add
dec
pop
outsl
insl
insb
bound
cwtl
cwtl
ljmp
mov
mov
mov
jbe
lcall
jbe
sahf
sub
cwtl
or
fwait
add
movsl
add
lods
add
mov
fs
or
aad
xchg
jmp
jp
ljmp
push
test
push
xchg
fldcw
mov
push
cltd
lcall
sub
sub
push
push
dec
pop
imul
mov
mov
mov
mov
inc
mov
popf
jmp
inc
cmp
sub
lcall
ljmp
add
mov
adc
jmp
pop
mov
push
xchg
push
xchg
push
xchg
stc
lcall
clc
cwtl
jmp
lods
inc
mov
lods
popa
lahf
mov
add
xor
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
ret
mov
test
ljmp
and
add
ljmp
add
mov
add
fldenv
cmp
jnp
push
mov
sar
stc
test
iret
sti
stos
sar
std
lods
sar
sti
cmpsl
int3
jmp
mov
inc
rol
stos
test
sahf
or
add
add
push
push
dec
aaa
jae
jb
stos
stos
stos
ror
int3
int3
out
into
int3
cmc
lret
lret
lret
sti
lret
std
leave
mov
mov
test
inc
jle
mov
add
mov
gs
add
int
outsl
flds
xchg
clc
xchg
std
mov
cld
mov
cld
mov
fdivr
cld
mov
fcos
std
mov
jmp
lret
rol
scas
lods
lods
mov
add
add
add
add
pop
or
aam
dec
loopne
loop
loope
fcmovnu
fcmovnb
fcmovu
fcmovnu
fcom
out
shll
test
pop
pop
pushl
add
enter
add
or
lock
mov
cld
inc
loopne
inc
dec
loopne
dec
fdivrp
dec
std
out
mov
leave
divb
pushf
pushf
sbb
add
add
incl
incl
jmp
or
in
in
sbb
in
in
xor
loopne
in
les
mov
mov
add
mov
inc
add
into
add
fldl
jne
call
outsb
mov
cld
ret
std
shl
call
out
call
in
call
out
call
call
std
shl
push
fcos
fcmove
sar
mov
mov
add
std
add
incl
cld
cld
cld
pop
aam
aam
mov
pop
mov
sahf
or
test
pop
pushl
add
rolb
outsl
fiadds
jne
out
and
shl
fldpi
fsubr
cld
cld
xlat
jmp
std
fsubr
cld
shl
push
enter
iret
xlat
sti
mov
lahf
popf
das
add
add
int
int3
or
fs
mov
add
mov
add
add
loop
jns
out
xor
sti
int
clc
lret
test
aad
repz
aad
out
ret
out
aam
in
shl
in
shl
in
fucomp
enter
test
incb
aad
push
mov
jae
push
data16
mov
insl
inc
pop
jb
int
jge
aad
test
fists
loop
mov
out
loop
leave
jmp
fdivrl
lret
leave
loopne
sarl
in
ficompl
in
out
jns
rcl
dec
mov
add
add
mov
inc
scas
xchg
movsb
les
pop
xchg
mov
fidivrl
andb
into
mov
ret
nop
sarb
int3
insl
ror
iret
pop
rcl
iret
dec
xlat
cmp
das
in
fsubl
loop
repnz
jmp
or
std
std
incb
std
add
mov
scas
mov
scas
data16
mov
mov
mov
shrb
enter
rcl
pop
mov
rcl
or
fnstsw
or
into
into
add
incb
std
std
add
add
add
int3
int3
pextrw
or
into
into
int3
add
std
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
rol
mov
mov
ret
ret
mov
scas
mov
lods
stos
stos
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
stos
lods
stos
add
mov
jmp
aad
aam
rcl
sar
int
into
std
stc
mov
cmpsl
test
cmpb
pop
sbb
add
add
add
add
add
add
add
add
jb
jb
addr16
inc
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
into
int3
call
rcl
dec
into
iret
dec
enter
mov
scas
lcall
mov
push
add
add
add
add
jae
jae
test
aad
outsb
outsb
ret
popa
mov
addr16
jb
bound
pop
pop
pop
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
lcall
cwtl
cltd
lds
jae
daa
es
pop
add
add
jb
jb
pushf
xchg
lcall
xchg
clc
mov
test
addl
dec
dec
push
inc
mov
popf
into
mov
lahf
mov
decb
lcall
lods
cld
mov
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorb
stos
movsl
test
cld
mov
mov
xchg
xchg
xchg
cld
sahf
popf
pushf
cmc
cltd
cwtl
cltd
in
test
push
imul
jle
nop
aam
xchg
notl
mov
mov
lcall
jb
mov
lods
scas
push
stos
lods
lods
add
add
add
test
lods
cld
xchg
xchg
xchg
call
fwait
fwait
call
fwait
lcall
mov
loope
jbe
out
xchg
arpl
std
fwait
inc
ja
cmpsb
cmp
sub
mov
jo
mov
insb
pushl
sahf
lods
lock
mov
imul
into
add
xchg
pop
lods
cmpsb
stos
test
lahf
sahf
popf
jmp
mov
xchg
decl
push
jbe
xchg
inc
jae
mov
push
mov
call
or
mov
sbb
pushl
es
shll
inc
ds
rcrl
subl
jae
push
movsb
fwait
mov
cld
cmpsl
cmpsb
cmpsl
ljmp
mov
lcall
sub
adc
xchg
push
incl
add
xchg
add
mov
adc
shlb
call
inc
mov
aad
call
dec
xchg
dec
cltd
mov
mov
mov
mov
add
add
push
test
lahf
movsl
cld
lods
scas
lods
pushl
mov
mov
call
push
pop
decl
add
mov
add
mov
push
xchg
fstpl
jmp
pop
mov
jmp
data16
call
pushf
mov
mov
mov
cmpsb
test
pop
add
add
popa
arpl
mov
pushf
cld
mov
mov
mov
mov
scas
lcall
jo
cwtl
and
call
add
lods
add
mov
dec
xor
jmp
jo
call
jp
push
jle
out
jge
fistpl
mov
and
add
add
dec
adc
push
cmp
mov
rol
mov
arpl
lcall
add
pusha
pushl
pop
insb
fmull
in
mov
push
xchg
xchg
clc
xchg
enter
mov
movsl
sub
inc
aas
inc
adc
push
xchg
xchg
mov
inc
ret
inc
mov
xchg
ljmp
pop
jmp
pushl
imul
adc
jmp
lods
clc
cmpsb
iret
stc
stos
sar
sti
lods
sar
cld
scas
sar
std
scas
sar
in
mov
inc
mov
movsl
ds
std
std
add
xor
scas
mov
mov
aam
mov
aad
fnop
rcl
out
lret
cli
mov
mov
jmp
add
ret
add
aad
jae
call
pop
std
mov
inc
std
rcr
std
rcr
out
mov
ret
test
dec
cmpb
add
add
stos
stos
stos
add
in
in
or
out
jmp
outsb
fcomp
fldenv
movsb
daa
outsl
ljmp
add
lret
add
add
push
cmp
dec
out
call
in
shl
std
aad
call
in
hlt
aam
int3
in
scas
scas
scas
popa
addb
add
std
incl
incl
lret
int3
shrb
mov
add
mov
add
loope
jp
repz
cmpsl
cld
enter
xlat
jmp
std
shl
sti
shl
stc
shl
push
leave
fdivr
fcmove
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
add
insb
dec
or
jg
jmp
lods
cld
out
mov
aam
jmp
ror
call
lret
rcl
jmp
scas
ret
cltd
fwait
add
sarb
xchg
inc
and
push
mov
shlb
lret
mov
mov
lret
vmovdqa
int3
iret
pop
fst
dec
in
loopne
call
out
out
sbb
sarb
cmp
movsb
lods
arpl
stos
mov
ret
les
lret
sbb
fstp
bswap
int
or
aam
push
std
add
incl
lods
std
add
sarl
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
std
adc
xchg
sub
arpl
dec
mov
rcl
repz
rclb
icebp
mov
fidivs
push
cld
xchg
scas
mov
sbb
and
iret
push
pop
push
xchg
jae
cmc
movsb
mov
pop
in
jl
testl
lds
mov
jp
mov
add
inc
push
pop
mov
gs
xchg
mov
xor
call
or
cmp
adc
outsl
push
mov
lea
in
mov
push
add
jno
lret
xchg
icebp
mov
test
xsha256
cmpsb
push
std
push
popf
cmp
mov
mov
fsubrl
push
hlt
pusha
mull
inc
jle
js
movsl
cmp
cltd
pushf
xor
ret
pop
or
mov
js
inc
fsubrs
jge
xchg
scas
xchg
testb
out
stos
sbb
cmp
push
cmp
leave
push
pop
lock
mov
mov
bndstx
and
add
pop
test
ds
and
outsl
and
push
nop
inc
fcmove
jae
out
mov
sbb
dec
lods
jg
fists
mov
es
fldcw
mov
test
jmp
adc
aas
pushf
xor
push
lods
js
mov
lret
into
gs
xchg
out
push
out
mov
outsb
add
cmp
pop
mov
nop
pop
mov
push
mov
lahf
fnstsw
mov
int3
std
push
push
lds
stc
nop
shlb
dec
jecxz
adc
iret
inc
subb
fs
in
xchg
aad
pop
pop
mov
or
sub
sub
les
pop
mov
pop
dec
loope
mov
es
push
inc
xor
push
push
jmp
inc
movsb
cmp
jb
xchg
ret
notl
ja
dec
scas
insl
pusha
mov
ja
andl
push
clc
lahf
xchg
sub
sbb
mov
and
sti
xchg
mov
les
in
xor
mov
or
sub
jae
pop
sub
mov
dec
ffreep
or
mov
jecxz
std
adc
aaa
mov
add
mov
xor
xchg
sub
jbe
mov
mov
adc
in
inc
add
arpl
fsubr
orl
sub
lahf
pop
sti
jmp
sub
dec
or
add
stc
push
repz
fsubl
arpl
jbe
sahf
xor
leave
sbb
ss
cmp
stc
nop
hlt
nop
adc
stc
nop
adc
ss
scas
addr16
xor
or
ficoml
or
sub
mov
inc
in
es
into
gs
lods
inc
add
in
orl
mov
stos
ljmp
mov
std
push
inc
fldl
mov
inc
ret
stc
hlt
dec
mov
sbb
mov
ss
push
out
inc
cli
xchg
jae
fdivl
xchg
sbb
xchg
out
int
mov
scas
out
push
jmp
or
into
cmp
push
in
mov
nop
daa
shrd
fbstp
scas
inc
bound
xchg
sub
or
mov
mov
test
ljmp
sub
lahf
pop
cli
in
subl
mov
jle
inc
lahf
sub
push
icebp
inc
frstor
jae
sbb
lahf
ss
xchg
sbbb
sbb
aaa
sbb
jae
cmp
xchg
repnz
jae
adc
mov
loope
xchg
adc
into
xchg
xor
scas
push
mov
cmp
pop
inc
fimull
xchg
xor
sarl
mov
sub
rol
jns
pop
add
pop
xchg
insl
add
ret
hlt
mov
pop
jecxz
mov
push
jmp
xchg
shrl
ret
repz
repz
nop
sarl
xchg
das
js
pop
popl
lcall
jne
popf
cs
in
pop
mov
jbe
lds
int
push
pop
icebp
pop
mov
xchg
fbstp
and
push
call
scas
rcr
je
iret
in
std
sub
xor
int
push
jns
xor
iret
dec
in
ret
jecxz
cmc
sbb
push
inc
insb
push
lods
cltd
gs
xchg
mov
sbbb
adc
lret
rcrl
ja
cwtl
popa
fbstp
mov
std
xchg
in
ds
outsb
inc
mov
jne
cmc
mov
test
mov
and
stos
pop
push
daa
mov
add
je
dec
pop
push
in
mov
adc
lret
and
lods
inc
mov
jne
or
jo
dec
pop
shrl
cwtl
rcrl
mov
dec
dec
xor
test
sbb
or
jge
and
fisubl
es
dec
sub
jge
jns
rep
scas
inc
xchg
cs
dec
iret
data16
xchg
sub
lods
sub
scas
inc
push
mov
pop
scas
popa
cmp
push
rcrl
push
out
hlt
cmp
popf
xor
mov
cltd
xor
cmp
add
lds
clc
inc
mov
je
pop
mov
fwait
xor
dec
movsl
cmp
sbb
dec
stos
dec
in
fsubrl
push
inc
fiadds
and
adc
add
add
add
and
xchg
sub
sbb
sub
sti
test
sub
cmpsb
scas
rep
cmp
jns
mov
sub
out
cld
mov
fsubrl
jg
push
scas
or
mov
mov
leave
pusha
add
notb
mov
fs
outsb
jno
lahf
push
es
popl
cwtl
mov
outsb
dec
out
sbb
jl
fucomp
jg
push
out
xchg
xchg
sti
xchg
leave
jecxz
data16
jbe
add
xor
hlt
mov
pop
stc
nop
mov
push
cmp
iret
sbb
xchg
or
jne
sbb
mov
add
scas
push
call
xchg
icebp
pop
and
xor
into
in
jne
and
je
out
pop
sahf
sbb
adc
inc
and
mov
enter
push
ljmp
jp
xor
or
pushf
xor
push
aam
addb
push
xor
cld
sub
xor
xchg
mov
ss
dec
or
inc
fwait
aaa
into
shlb
add
icebp
push
in
es
xchg
sub
push
inc
xchg
scas
mov
fdiv
xchg
out
bound
mov
cltd
in
repnz
mov
loop
add
lahf
outsl
cmp
mov
loop
pop
fistpll
fsubrs
mov
push
jecxz
insl
and
mov
xor
in
popa
clc
and
popf
jnp
jecxz
cs
xchg
fdiv
shrl
inc
insl
jb
xor
sub
repz
icebp
jns
and
or
imul
jnp
aad
and
pop
cs
adc
es
sub
testl
dec
das
jl
fdivl
cmpsb
inc
xchg
sahf
xor
test
daa
mov
cmp
enter
lea
iret
adcl
out
pop
call
adcl
rcrb
scas
lea
cltd
jnp
add
gs
out
mov
and
sbb
jns
aaa
into
mov
fistpll
rorb
fsubrs
xor
dec
js
mov
fidivl
shrl
rolb
or
push
fidivs
ja
stos
movsb
jbe
rol
dec
mul
cmpsb
mov
dec
xor
lahf
gs
or
ret
xchg
lods
hlt
fnstenv
dec
dec
sub
xchg
xchg
cs
fisubrl
lds
bswap
gs
pop
testl
fcmovbe
les
std
inc
sub
jno
dec
stos
inc
addl
lock
or
adc
sub
mov
jge
ds
sahf
fsubr
iret
lret
sub
std
lock
and
fsubr
push
inc
push
and
mov
les
push
push
adc
testl
les
inc
ficoml
add
cmc
mov
data16
lea
scas
inc
loopne
inc
fmuls
push
xor
aaa
das
pop
negb
gs
sub
push
in
pop
out
aam
and
push
pop
push
xchg
stos
rorb
mov
cmpsl
sbb
dec
push
jns
nop
lods
iret
mov
je
push
push
lret
sti
leave
stc
nop
sti
sbb
jle
xor
lock
les
sbb
repnz
inc
lock
sub
cli
jl
insl
testl
xor
jle
or
mov
sti
push
sbb
mov
or
test
or
xchg
inc
mov
gs
movsl
jbe
mov
jbe
shrb
mov
stc
js
mov
dec
bound
add
repz
or
ds
and
jmp
xor
and
add
pop
xor
xchg
jne
leave
repz
mov
negb
mov
sbb
xchg
mov
gs
lahf
test
push
and
xchg
ret
int
cmpsl
mov
std
repnz
cltd
aam
js
xor
dec
cmp
fsubr
cmc
jbe
and
shll
lds
cld
push
mov
or
test
imul
scas
add
pushf
insb
dec
pop
mov
in
cmp
loop
xor
mov
jae
movsl
in
fstl
jg
dec
lahf
adc
push
mov
into
adcl
xchg
or
inc
je
sti
jle
lock
xor
jle
call
lahf
insl
adc
xor
imul
arpl
insl
inc
adc
loop
mov
mov
push
xchg
loope
ficoms
lea
in
sbb
rcl
push
mov
jbe
push
addr16
iret
sub
fisttpl
mov
mov
cmpsb
sbb
sub
int
cmp
popa
dec
sti
sar
jns
pop
movsl
int
push
jmp
push
inc
stos
and
stos
xor
xchg
dec
icebp
movsl
loope
mov
jbe
push
jne
loopne
lcall
sbb
or
nop
ds
sbb
mov
pop
push
test
pop
lods
cmpsl
push
mov
mov
or
cmp
stos
call
cmp
icebp
inc
sbb
jae
fnstcw
add
jb
push
popf
and
push
cmpsb
std
outsl
push
jne
lods
xchg
add
lcall
pop
jecxz
mov
adc
movsb
pop
popf
xor
push
arpl
xor
mov
xchg
rcrl
add
fidivrs
incl
mov
xchg
lcall
aas
cmp
scas
push
adc
jge
jmp
xor
repnz
adcl
cmp
in
data16
idiv
jb
pop
enter
and
xchg
fisubrl
cs
fwait
and
xor
push
dec
cmc
push
scas
loopne
mov
cmpsb
gs
or
xor
jno
ss
in
xlat
cli
data16
dec
jns
addb
mov
sbb
pop
xor
inc
fldcw
mov
sti
leave
int
add
adc
xor
adc
mov
rol
mov
call
jo
mov
push
out
or
xchg
add
push
mov
or
enter
inc
jmp
movsb
cmp
push
scas
or
mov
jo
sbbb
and
in
lods
inc
and
insl
add
dec
fidivs
ret
in
cld
xchg
ret
or
sbb
lods
cmp
iret
dec
xchg
push
in
xchg
rolb
jno
je
mov
and
sub
xor
and
push
call
out
mov
sbb
or
test
mov
mov
push
out
sar
lret
bound
sbb
inc
sub
adc
data16
push
std
pop
sahf
jnp,pt
sbb
fisubl
lret
mov
xor
popa
clc
stos
pop
shrl
ret
jg
cmp
pop
mov
outsb
lcall
mov
dec
loope
push
call
call
testl
imul
pop
lea
and
jp
pop
hlt
les
add
fdivrp
xchg
and
mov
sahf
dec
sbb
jae
test
roll
xchg
pop
mov
pop
out
pop
xlat
aad
mov
jbe
cwtl
loopne
mov
lahf
les
mov
aad
sub
jb
dec
dec
loop
jge
nop
xchg
ja
add
xchg
fiadds
ss
mull
jmp
arpl
or
nop
daa
aas
add
xchg
jns
mov
xor
sar
addl
or
gs
mov
lods
lea
int3
mov
stc
cmc
in
outsb
pop
pop
inc
fcomps
add
js
pop
divb
and
enter
std
loope
xor
push
dec
in
adc
add
fsubrs
fisttpll
lea
aad
stos
cld
xlat
outsb
in
push
xor
cmpsb
or
cltd
mov
int
mov
dec
outsl
push
mov
ret
cmp
dec
loope
fldcw
call
add
jle
dec
add
popf
inc
bound
mov
mov
leave
sub
in
inc
dec
loop
cmpsl
jnp
clc
xchg
imul
in
mov
inc
push
mov
cmp
cmp
pop
mov
int3
loop
pop
push
and
inc
pop
xor
lahf
outsb
push
mov
mov
cmp
in
jle
push
push
pop
repnz
das
pushf
xor
jb
adc
xchg
sarl
pop
test
shrl
inc
and
jne
add
pop
cmpsl
pop
mov
inc
push
jmp
jmp
aam
fiadds
repnz
push
mov
adc
idivl
das
xchg
int
jae
mov
ljmp
jge
lahf
sbb
mov
adc
jp
xor
mov
repz
fisttpll
and
jnp
fimull
add
cltd
xor
fidivl
ds
jbe
jl
js
pop
popf
addb
je
shlb
xchg
adc
hlt
xor
lds
pop
or
repnz
sub
jle
jns
pop
cwtl
dec
loopne
jbe
cs
out
push
mov
call
adc
jnp
push
movsb
cmp
add
add
stos
push
sub
ja
jge
leave
fsubrl
mov
stc
enter
and
adcb
dec
cmp
js
sahf
xor
or
jbe
pop
ror
popa
mov
shr
jg
mov
mov
fcoml
cmpsl
sbb
adc
push
inc
xlat
add
cmc
mov
push
sub
jl
cltd
inc
mov
xor
pop
cmpsb
cmp
daa
mov
pop
loope
pop
add
jecxz
fwait
sub
mov
mov
pop
mov
lret
pop
ds
cmp
jb
pop
repz
fdivrs
leave
outsb
js
ret
das
adc
testb
add
ja
movb
mov
xchg
mov
fs
add
sbb
add
cs
aas
xchg
nop
daa
gs
pop
out
mov
jbe
adc
arpl
xchg
mov
mov
ret
scas
sub
or
add
out
test
popa
clc
sub
mov
push
shrl
sbb
dec
fildll
lods
inc
xor
pop
lret
pop
test
outsb
mov
scas
jle
mov
and
aam
mov
stc
mov
repnz
fsubrs
out
and
cmpsl
aaa
pop
mov
mov
lods
inc
mov
fxch
bound
push
data16
nop
or
mov
mov
fsubs
fldcw
ret
dec
ss
push
insb
insb
add
jl
xchg
sbbl
mov
cmp
cmp
pop
daa
xchg
pop
repnz
inc
out
jns
das
outsl
repz
dec
mov
popf
sbb
mov
mov
aas
test
enter
dec
in
ss
inc
or
add
mov
int3
and
pop
xlat
inc
xlat
add
outsb
push
sub
popa
jg
mov
jl
sti
cmp
mov
adc
xor
cmp
push
lret
ret
ftst
xlat
outsb
add
imul
sub
mov
mov
dec
jnp
stos
bound
lds
dec
out
dec
out
adc
imul
lds
call
jno
sbb
add
icebp
sub
enter
stc
loope
loope
adc
incl
lds
xchg
mov
aam
cwtl
sti
fdivl
mov
xchg
in
sbb
aaa
add
jnp
adc
in
lods
xor
inc
push
cltd
xor
push
in
push
mov
dec
ds
add
data16
cwtl
adc
xorb
rcrb
es
dec
ds
fildl
push
out
xlat
push
stc
xchg
icebp
test
mov
mov
xor
inc
aas
mov
jbe
fcmovu
jno
in
test
daa
clc
jo
or
int3
lcall
sti
xor
repz
push
in
insl
sbb
cmp
jno
scas
cmp
es
scas
inc
xchg
int3
arpl
sahf
in
cmp
ljmp
sbb
dec
outsl
ss
popa
push
out
xchg
pmulhuw
push
stos
ret
jge
inc
push
loopne
xchg
test
arpl
fsubr
xor
pop
or
mov
daa
mov
cmp
inc
fcoml
popa
push
cli
inc
push
xchg
scas
cmp
mov
ret
pop
sbb
cmp
push
pop
lret
cmp
test
cmpsb
or
js
shl
lock
sub
dec
fildll
les
xchg
mov
test
jo
test
cltd
mov
cmp
fdivs
pop
sub
into
gs
fbstp
sahf
clc
pop
push
std
xchg
lcall
mov
lock
icebp
cmp
or
fs
andb
out
pop
stos
sbbb
jb
or
jnp
aaa
mov
fisubrl
dec
clc
fmul
arpl
adc
mov
movsb
adc
arpl
mov
ljmp
sbb
mov
test
mov
jae
inc
fsubl
iret
arpl
add
lret
bound
xchg
aam
lahf
ss
sbb
pop
jbe
mov
dec
arpl
or
es
fidivrl
sbbl
je
and
mov
mov
add
or
jo
sub
in
inc
nop
mov
fisubrl
adc
add
mov
fistl
test
fisubrs
pop
repz
sti
xchg
cs
addr16
xor
dec
adc
adc
mov
xchg
push
mov
test
cmp
cmp
jmp
push
in
fsubrl
xor
sbb
xchg
sub
ds
imulb
test
mov
mov
xor
add
jle
xor
testl
shrb
pop
pop
pop
and
mov
ds
or
mov
sti
cmp
lret
add
mov
dec
scas
sub
mov
push
iret
dec
jmp
jcxz
add
ds
cmp
pop
arpl
gs
lea
rcll
int3
xchg
mov
fistpl
mov
xchg
sbb
dec
les
dec
inc
test
cmp
sarb
sub
jnp
scas
movsb
or
xchg
popa
or
dec
aas
pop
and
or
aad
mov
pop
mov
inc
gs
addl
dec
mov
pusha
or
mov
sub
jbe
dec
imul
loopne
mov
jle
mov
inc
xor
aad
push
sub
adc
shlb
sbb
icebp
fisubs
aad
sti
testl
aaa
insb
mov
paddq
xchg
fcmovne
jmp
push
bound
xchg
mov
or
fs
pushf
je
arpl
push
mov
aad
sbb
test
mov
jl
dec
out
dec
push
mov
dec
inc
idivb
test
xorl
dec
stos
push
cs
inc
push
inc
xchg
sti
mov
sahf
aad
cmp
hlt
cmpsb
dec
xor
push
sub
loop
in
dec
test
and
fdivrl
out
outsl
push
mov
adc
lret
cmp
xchg
movsl
js
dec
jl
add
push
mov
mov
push
cmc
sahf
mov
stos
stc
fwait
xor
ficoml
mov
sub
test
sbb
addr16
jmp
bound
sub
stos
mov
repz
jl
out
or
nop
mov
push
xor
xor
ret
pusha
jecxz
out
not
int3
movb
rclb
xchg
pusha
mov
and
cmp
adc
add
cmp
lock
pushf
add
test
divb
push
sarb
shrl
inc
mov
ljmp
mov
repz
aaa
out
jg
mov
ret
pop
xchg
add
jnp
mov
stos
or
push
xor
mov
ja
mov
mov
shl
loop
lcall
xor
xchg
in
lods
mov
and
je
adc
test
insl
enter
pop
jle
negb
aam
dec
mov
and
xchg
mov
jp
mov
clc
xor
sbb
stos
mov
stc
ljmp
aad
ss
and
jns
jns
test
imull
clc
sub
xor
aaa
cli
pop
bound
popf
sbb
adc
bound
ljmp
outsb
test
sub
mov
pop
stc
jmp
cmp
idiv
adc
js
test
aaa
call
jmp
fld
out
mov
add
mov
cmc
sbb
aad
mov
xor
pop
jecxz
adc
mov
sarb
mov
mov
mov
pop
ss
in
jge
movsb
fdivrl
mov
adc
xor
into
cmpsl
aad
movsl
jns
cmp
shlb
push
mov
cwtl
push
stos
mov
push
inc
xchg
out
ljmp
sti
stc
cmp
loop
aam
cs
mov
in
out
mov
pop
xor
mov
jmp
sub
cmp
inc
add
ljmp
mull
xchg
jno
sbb
addr16
imul
cs
xchg
iret
imul
mov
or
out
fidivl
imul
ljmp
outsb
xchg
push
fs
les
fisubrl
stos
std
jl
push
dec
imul
xchg
pop
mov
dec
iret
or
fs
movsl
lret
sub
int3
scas
or
cmp
lea
data16
jbe
cmp
jnp
cmp
cwtl
fsts
mov
sub
sti
push
mov
out
pop
out
arpl
shll
dec
sub
mov
cmpsb
mov
leave
xor
sarb
aas
bound
aas
imul
cmpsb
data16
and
lds
push
mov
mov
push
mov
imul
cmpsb
or
ss
cmp
pop
jno
loopne
jns
dec
dec
push
push
and
mov
cmp
sub
adc
mov
shlb
sbb
xchg
std
inc
xor
dec
or
jecxz
and
jge
stos
test
mov
jmp
and
ret
or
sbb
mov
sub
xchg
or
ftst
xor
mov
lahf
cmp
xchg
les
push
ljmp
fmull
scas
dec
icebp
xchg
adc
mov
into
add
push
loop
jns
in
add
in
dec
aad
xor
loope
in
sarb
or
in
xchg
and
add
mov
jnp
push
lret
push
mov
xchg
push
sub
xor
push
or
divb
xchg
decl
jg
sub
gs
xor
lret
and
adc
je
push
aad
insb
lods
jo
mov
mov
test
mov
xchg
inc
mov
jl
cmp
and
cmp
mov
sub
cwtl
mov
sub
enter
mov
sub
pop
cld
bound
pop
sbb
fwait
adc
shll
inc
sbb
push
jnp
lds
out
je
ret
sbb
lcall
int3
andb
cmp
test
push
add
add
cmc
cs
dec
inc
fwait
sbb
mov
mov
sbb
xor
mov
sub
test
push
fs
and
pop
jno
insb
test
test
adc
aad
into
jns
adc
inc
jmp
test
and
inc
cmpsb
push
mov
pop
push
arpl
mov
mov
hlt
stos
pop
push
inc
add
shl
adc
jbe
mov
or
mov
add
mov
shrb
mov
xchg
jne
dec
jg
push
and
rorl
sub
data16
fsubs
mov
jne
outsb
mov
movaps
add
jbe
pop
or
mov
aaa
pop
cmpsb
sub
lods
jns
inc
xor
rol
mov
ret
sbb
mov
dec
pop
std
pop
jle
loope
push
imul
test
and
mov
pop
mov
cmp
dec
mov
jle
dec
and
dec
or
repz
andl
dec
sahf
aas
out
fstpt
inc
inc
movsl
jle
sub
jecxz
ret
fmuls
mov
jg
xor
inc
push
push
mov
push
ds
pop
cmp
inc
dec
mov
fbstp
sub
jnp
iret
add
sub
je
mov
andb
inc
push
lock
dec
fisubrs
pop
adc
repnz
daa
ret
dec
rsm
and
cmp
fidivl
lret
inc
call
out
mov
mov
shlb
pop
fwait
and
rcrl
sbb
es
push
mov
sub
bound
out
aaa
cmpsb
shr
jae
xchg
and
pop
sbb
mulb
add
out
jno
out
test
insl
call
adc
and
icebp
inc
pop
dec
push
rorb
in
cmp
push
jmp
sarb
sbb
mov
fisubl
fnsave
push
xor
mov
add
jg
adc
test
and
cmp
jne
les
fisubs
aam
xor
adc
jp
adc
call
fidivrs
insb
xchg
test
sbb
movsb
mov
sub
push
pop
rolb
mov
and
xorb
mov
mov
movsb
jae
into
stos
push
pop
push
sbb
sbb
jnp
pushl
mov
in
pop
into
fsubrs
pop
int
stos
push
rorl
pop
popa
cltd
stos
lahf
adc
out
xchg
dec
loop
and
jmp
mov
fcoms
enter
jp
dec
mov
fisttps
daa
add
out
cmp
hlt
push
mov
inc
dec
lahf
jbe
fbstp
push
pop
lock
or
pusha
xchg
insl
mov
push
or
test
sti
inc
sbb
out
test
jmp
pop
jae
rol
out
push
xor
cmp
sub
outsl
lret
inc
lock
xor
lret
mov
push
sahf
pop
lods
pop
jns
push
push
jb
dec
pop
insl
es
dec
inc
or
testl
les
cmp
loope
dec
cmp
mov
loop
mov
dec
stc
test
outsb
fwait
std
scas
sub
popf
rcl
jp,pn
lods
pop
push
xchg
jbe
mov
aaa
sub
sub
insb
jg
sahf
mov
in
cmpsl
jecxz,pt
jmp
push
aaa
das
fiadds
or
jne
add
adc
pop
sbb
sbb
push
jnp
push
ja
sub
test
mov
int3
test
cltd
in
nop
fdivp
or
mov
mov
add
pop
or
mov
lret
pusha
frstor
inc
lods
cmp
pop
imul
lcall
je
pop
dec
and
mov
adc
lods
xchg
sub
clc
cmp
sub
test
repz
sbb
lods
aam
add
or
sti
lods
aad
pop
fucom
sub
rcr
mov
mov
cmp
sbb
into
out
aad
rcrl
movsl
clc
cld
nop
mov
clc
outsb
and
mov
xchg
rcrb
mov
je
cs
cmpsb
mov
cld
stos
dec
in
add
mov
sbb
dec
es
aad
xchg
jmp
imul
lods
fstl
xchg
xchg
rcrb
lods
fwait
sub
stos
popf
jb
out
xor
inc
xchg
sbb
inc
adcb
rcrb
push
xchg
jns
pop
mov
push
sbb
mov
mov
cmp
mov
rorl
ja
cmp
mov
pop
adcb
mov
xchg
nop
cmp
pop
cmp
jns
ret
aam
push
mov
mov
xchg
add
add
sbb
clc
jae
or
jecxz
negb
inc
and
and
rcll
mov
ss
mov
lock
xchg
shlb
or
int
jb
dec
ss
mov
cmp
lods
aam
add
xor
pop
jns
inc
push
push
xchg
mov
ss
lods
in
lret
test
shr
xor
rol
mov
mov
lahf
mov
jl
xor
cmp
mov
mov
lcall
fstl
mov
arpl
pop
fwait
dec
xor
in
hlt
in
inc
gs
rcrl
lds
xchg
push
jl
xchg
fucompp
lcall
add
or
and
dec
and
fistl
loope
js
sbbl
cltd
rcrb
pop
xor
fadds
inc
pop
cmp
dec
imul
or
cwtl
push
mov
mov
sbb
subl
pop
fbstp
sbb
call
mov
xor
mov
mov
mov
sub
xlat
mov
loopne
push
flds
inc
xchg
dec
test
xchg
or
adc
push
icebp
inc
das
jnp
int3
pop
ljmp
popl
aad
lods
popf
push
fdivrp
inc
decb
inc
or
jae
sub
fs
xor
outsb
js
xor
push
lcall
or
scas
lock
mov
scas
push
push
das
pusha
push
andb
xchg
cmpl
ja
sub
das
sbb
sbbb
and
in
xchg
insb
cmpsb
mov
pop
add
xor
test
lahf
stos
inc
rcll
sub
push
xchg
int
mov
jne
cmp
ds
ljmp
push
lahf
push
out
icebp
inc
jbe
mov
pusha
ljmp
pop
movsb
adc
jbe
mov
movsb
pop
mov
push
fsubrl
ss
mov
dec
leave
movsl
int3
leave
shll
mov
jns
ret
daa
loop
cmp
imul
fcmovnu
clc
int3
jp
outsb
push
sub
stos
xor
lods
mov
xor
add
jg
cmpsb
push
mov
push
std
mov
mov
xchg
dec
faddl
in
pusha
aad
call
pop
shlb
shr
les
jmp
and
jnp
cmp
popf
lods
push
jle
add
stos
pop
jmp
cwtl
mov
sbb
adc
cmp
xchg
pop
popa
and
sbb
push
addr16
enter
ret
lcall
fstpt
inc
add
lds
mov
lock
cmpsb
adc
xchg
cmp
pop
aad
inc
in
xchg
jnp
call
inc
loope
cmp
aad
lahf
ret
insb
jnp
sahf
mov
ret
xor
push
jne
cmp
dec
or
or
adc
imul
jbe
pop
rcll
sub
outsl
dec
mov
mov
mov
outsl
and
mov
push
lahf
int
push
add
cmc
inc
jbe
stc
xchg
sub
cmpsl
mov
dec
int3
jg
jno
adc
jnp
lcall
mov
and
jl
sbb
jae
test
inc
sbb
mov
idivb
jo
fiaddl
add
push
xlat
orb
lods
in
in
mov
xchg
pop
adc
mov
sahf
fistl
test
xor
sbb
and
and
int
cmp
cmp
scas
sbbl
add
addr16
mov
mov
xor
mov
in
inc
not
lahf
and
outsl
push
xchg
inc
es
cmpsl
mov
imul
xor
int3
das
jns
sbb
lods
mov
arpl
or
sub
js
push
mov
or
out
pop
cli
inc
add
or
push
cwtl
mov
scas
push
pop
popl
push
jmp
mov
jl
rcll
vandpd
lds
mov
mov
adc
mov
and
sti
sbb
movsl
loopne
cmpsl
sbb
sub
jl
sahf
dec
adc
dec
icebp
roll
adc
sti
cmp
pushf
mov
push
test
and
inc
sub
vxorpd
jmp
imul
pop
insl
cwtl
repnz
mov
adc
ds
arpl
dec
nop
fldl
popa
popf
loope
xor
imul
cmp
aaa
fnstenv
call
addr16
jmp
or
cmp
jge
and
push
sub
pop
push
nop
inc
stos
pop
xor
dec
xchg
mov
adc
sub
mov
and
cmpsb
sahf
inc
movsb
xchg
jnp
mov
ret
mov
push
pop
cmp
test
xchg
xchg
or
mov
adc
lcall
or
out
jp
pop
and
sub
mov
mov
fdivl
sti
xlat
sub
data16
and
xor
movsb
sbb
out
iret
cwtl
adc
pop
mov
mov
mov
sub
xor
mov
test
adc
testl
add
addr16
xchg
sub
pop
mov
nop
shll
and
pop
sahf
pop
fadds
les
inc
je
fs
rclb
neg
call
int3
fwait
insl
or
xchg
push
imul
outsb
test
daa
pop
imull
jbe
inc
loopne
loop
mov
mov
xlat
paddq
xchg
test
xor
in
lahf
sub
jb
push
xchg
xchg
cmp
lcall
mov
fstpt
mov
cmp
inc
dec
pop
popa
xorl
aas
mov
das
jl
dec
push
push
mov
out
jp
jnp
push
inc
and
movsb
bound
sbb
sub
jae
nop
shrb
js
lret
sbb
in
ret
sbb
jne
lods
pop
xchg
loope
wbinvd
dec
mov
outsl
mov
frstor
mov
fstpt
inc
dec
movzwl
in
dec
adc
mov
or
mov
shlb
sub
mov
lods
mov
inc
movsl
into
dec
inc
jle
pop
sbb
push
sbb
jp
insl
mov
cmc
cwtl
test
mov
lret
out
fstpt
jmp
add
std
pop
outsl
and
jnp
mov
adc
xor
ret
add
push
add
mov
pop
mov
aam
stc
insb
adcl
fs
mov
cmp
cmp
sahf
jb
push
hlt
mov
xor
in
test
inc
cmp
shr
fstpl
dec
sbb
fistpl
sub
add
repnz
test
xchg
mov
orb
pop
fbld
add
mov
or
jnp
rep
lret
out
and
mov
pusha
call
repz
jbe
dec
mov
cmp
fnstsw
xor
add
and
pop
jo
cld
dec
cmp
push
push
push
mov
adc
sbb
loop
out
add
divl
es
xchg
rcrb
add
jge
and
adcl
fstpt
push
mov
or
push
or
enter
push
scas
cmp
cmp
movsl
inc
dec
sub
lcall
push
loop
add
ror
fldcw
in
testb
jecxz
dec
cmp
fisttps
repz
dec
xor
mov
movsb
adc
push
jno
cvttps2pi
xorl
sub
arpl
mov
jge
xor
aad
sub
mov
xchg
push
movsl
lcall
stc
je
orb
fs
xor
movsb
cmc
jnp
push
jae
movsl
mov
jo
or
mov
sub
mov
clc
movsl
jmp
mov
ret
xchg
pop
ss
icebp
pop
pushf
dec
movsl
test
adc
or
adcb
stc
push
and
mov
or
std
insl
les
or
dec
jne
ret
and
mov
push
shr
iret
hlt
xchg
add
hlt
test
je
sbbb
xchg
insb
mov
dec
imul
ret
aam
pushf
xchg
scas
adc
sahf
aaa
cmp
push
shll
or
lock
int3
adc
pop
lcall
sbb
push
mov
xlat
and
sub
stos
jecxz
scas
sbb
addr16
je
clc
mov
pop
lret
addl
jns
jno
jae
shll
jne
mov
cld
sahf
jecxz
subl
ja
add
fistps
fsubrs
mov
xchg
sbb
or
dec
stos
lock
sub
nop
sub
xor
sbb
xor
call
xchg
adc
in
dec
dec
jp
xchg
mov
mov
cltd
imul
adc
stos
dec
or
mov
sub
test
jle
es
mov
xor
fidivrl
cmp
push
imul
cltd
mov
scas
outsl
mov
cltd
sbb
stc
cmp
sub
add
mov
add
in
dec
insb
dec
and
outsb
insb
fldenv
pop
das
adc
dec
jo
pop
and
lret
mov
pop
fs
push
sbb
dec
cmp
jae
ljmp
jle
inc
push
push
aas
test
insb
rol
mov
aas
rep
inc
pop
adc
rolb
add
mov
scas
popf
push
or
int
or
gs
pop
cltd
mov
cmp
sub
xor
push
inc
pop
nop
clc
jnp
in
jne
jb
mov
mov
in
test
jmp
sar
and
fwait
jne
fwait
fwait
mov
js
jns
stos
fsubrs
ljmp
test
lods
notl
and
xor
push
pop
aaa
xchg
xchg
hlt
rolb
insl
add
call
daa
jecxz
inc
dec
and
jge
xor
fs
cmc
test
jmp
mov
sub
cmp
sub
sub
or
cmc
mov
pushf
negl
cmc
out
call
mov
cmp
test
out
daa
add
xor
lods
ret
mov
stos
add
iret
push
sbb
imul
pop
popa
lret
jns
cmpl
pop
adc
sub
loope
or
test
pusha
ljmp
push
cmpb
outsl
xchg
dec
and
xchg
pop
add
mov
leave
setbe
fsubs
cld
jecxz
out
outsl
inc
inc
test
xchg
scas
or
mov
repz
adc
jae
fldln2
mov
dec
addr16
jmp
push
mov
mov
fdivrl
push
loop
filds
mov
fs
pop
test
xor
lea
frstor
mov
inc
popa
cli
cld
icebp
or
lahf
push
div
sub
sarl
sub
repnz
pop
jnp
sbb
es
lret
push
add
mov
cs
xlat
lahf
xchg
xor
sub
cmp
mov
imul
icebp
test
and
jecxz
imulb
mov
xorl
arpl
xor
flds
enter
subb
daa
cmpsb
mov
es
ja
mov
test
inc
push
inc
cmp
xor
shll
cli
lock
dec
push
lock
adc
shrd
insl
aas
test
dec
pop
inc
push
cmpb
dec
add
mov
xchg
xorb
push
imul
stos
loop
push
and
rcrl
xlat
in
dec
jbe
ljmp
punpckhbw
xchg
adc
mov
loope
icebp
ds
lcall
and
pop
mov
cmp
and
push
adc
fbld
fwait
imul
ficoml
xor
fwait
jo
adcl
adc
xchg
insb
lods
adc
in
push
pop
jle
cmp
sti
cmc
in
push
arpl
cmp
ja
hlt
push
lock
adc
adc
xchg
xchg
cmp
subl
out
mov
and
dec
cmp
mov
fcoml
mov
pop
arpl
jle
mov
lods
ror
cmp
adc
and
or
jle
repz
fdivrl
adcb
jmp
in
int3
cs
into
adc
push
push
xor
cmpsb
stos
cmpsl
push
mov
and
dec
cli
fs
mov
jbe
cmpsb
jno
add
sarl
mov
push
div
subb
scas
mov
inc
cwtl
lea
inc
dec
je
xor
mov
mov
into
dec
icebp
lret
lock
mov
add
or
orb
pop
fisubrl
mov
push
fucomi
call
or
sbb
mov
ja
push
lods
or
popf
mov
jno
call
mov
cmp
shll
mov
inc
mov
fptan
fisubl
mov
dec
inc
js
sbb
cs
cmpsl
jnp
imul
sahf
repz
fnstenv
out
shll
test
and
inc
lcall
xchg
push
loope
shlb
sub
sarl
mov
mov
jle
nop
aam
cwtl
clc
leave
ss
mov
jle
cmp
inc
shl
inc
push
jmp
cltd
jmp
vpsllq
push
mov
test
bound
push
aam
sti
adc
icebp
pusha
insb
add
and
lods
mov
inc
cmp
push
push
lods
adc
scas
sub
iretw
pop
inc
lahf
xor
add
pop
pusha
clc
clc
fs
jge
lds
inc
and
mov
jp
or
add
pop
faddl
fadds
push
mov
sub
lea
stos
icebp
cltd
sbb
mov
or
cltd
loopne
mov
rcr
test
shlb
mov
insl
inc
dec
jle
inc
cmpsl
push
push
sub
and
mov
inc
es
rcr
sub
jne
sub
jmp
dec
xchg
fsubr
mov
hlt
lcall
cld
mov
punpckhdq
imul
lods
sub
adc
leave
fdivl
pop
ds
scas
roll
pop
push
bound
inc
insb
into
lret
jecxz
shrb
and
jbe
and
cwtl
jb
call
inc
into
scas
add
lcall
test
push
mov
xor
push
fistps
hlt
daa
movd
in
test
jp
mov
addr16
imul
xlat
out
movsl
arpl
xchg
or
sbb
icebp
dec
and
xchg
in
adc
sbb
xlat
dec
push
jecxz
fsubrl
mov
lret
cmpsb
out
cmpb
in
jno
sbb
lcall
ss
scas
nop
in
call
jecxz
loop
xor
mov
lcall
mov
or
movsl
inc
mov
inc
js
cmp
and
jno
add
call
fildl
div
jle
addb
xchg
xorl
and
syscall
add
imul
ss
dec
iret
sbb
divl
mov
xchg
insl
stos
hlt
sbb
pop
dec
andl
mov
popa
ljmp
jo
and
fdivrs
add
jb
sub
cmp
sti
popa
cltd
xchg
and
mov
cmpsb
lahf
int
add
jle
jmp
out
xchg
xchg
scas
mov
inc
adcb
lock
jl
mov
cmp
js
cwtl
fs
inc
jb
cli
xchg
push
outsl
aam
in
jp
shll
sbb
test
xor
decl
filds
cmp
cmp
test
mov
out
or
outsb
stc
out
sbb
inc
jg
add
push
out
sarl
loopne
clc
bound
inc
sub
out
sbb
iret
pop
push
adc
sub
mov
lods
cmp
cli
mov
std
movsb
insb
xchg
xchg
or
add
psubw
dec
mov
inc
add
or
test
lahf
bound
js
mov
xchg
push
jp
inc
js
push
push
and
jne
out
jmp
pop
mov
pusha
jb
and
cmp
mov
cmpl
jmp
xchg
mov
mov
pop
or
dec
lahf
push
cmp
xchg
jecxz
mov
adc
aad
or
xchg
out
push
fdivrl
mov
pop
sub
xor
pop
pushf
dec
push
or
insl
fcomps
cmp
leave
out
sbb
adc
pop
out
sub
xor
mov
push
out
mov
pop
dec
ds
add
stos
loopne
adc
pop
inc
xor
and
inc
pusha
lea
add
hlt
aam
mov
cmpsb
lea
add
data16
jno
stos
push
mov
imul
sub
pop
das
enter
stos
in
mov
adc
es
popf
pushf
dec
jl
aaa
mov
sar
aaa
sub
lods
mov
adc
lahf
dec
clc
cs
mov
push
dec
ret
js
enter
cmc
push
sbb
inc
and
push
cmpsb
pop
clc
xchg
dec
fsubr
jecxz
jmp
icebp
pop
push
out
push
jb
or
call
insl
push
xchg
pop
or
je
insb
daa
cmp
mov
and
adc
in
pop
mov
inc
lock
xor
inc
lds
sti
aas
movsl
jle
aad
lods
inc
imulb
popa
loope
lret
bound
jmp
or
pop
sahf
xchg
pop
sahf
and
es
sub
clc
jge
pop
notb
lahf
sbbl
push
mov
das
mov
fbstp
js
xor
insb
fs
add
mov
mov
ret
ret
pop
lock
dec
loopne
es
pusha
mov
jns
mov
frstor
dec
xchg
xor
pop
bound
jbe
pop
lock
xchg
or
mov
pop
lods
daa
mov
lods
incl
xor
push
out
call
sti
andb
or
test
aad
xchg
sub
mov
stc
dec
mov
bound
ja
insl
repnz
rorl
repnz
pop
scas
jb
xor
inc
xchg
sub
les
jecxz
in
jmp
mov
jb
imul
nop
daa
mov
addr16
int3
arpl
out
xchg
sub
mov
or
lahf
pop
stos
sub
fsubrl
es
jnp,pn
fldt
pusha
idiv
mov
js
push
hlt
mov
and
into
hlt
mov
cltd
cmpsb
cmp
inc
in
scas
sbb
ds
mov
test
mov
ss
aam
in
push
js
lea
loopne
pop
scas
cli
xchg
fdivrs
test
and
mov
incb
adc
adc
enter
xchg
jmp
dec
loop
xor
popa
outsb
psubb
mov
addl
jp
pop
add
cmp
xchg
add
es
fstps
es
mov
ficoml
add
cmp
pop
add
cmp
or
leave
cli
xchg
repz
pop
scas
loopne
pop
mov
add
push
cwtl
pop
or
jecxz
rclb
test
add
sarb
pop
mov
mov
test
cmp
fcomip
mov
test
push
enter
cli
xchg
xchg
cmpsb
cmp
xor
jnp
cmp
pop
inc
fiaddl
test
push
shl
enter
push
ljmp
mov
aas
fcomps
enter
jnp
pop
inc
in
jg
sbb
ficompl
add
and
pop
addb
jp
lea
fwait
loop
xchg
es
and
shlb
xchg
jnp
cmp
lret
pushf
jmp
in
dec
in
call
xor
jo
addr16
insb
xchg
imul
mov
lock
fldenv
mov
popa
and
add
rcrl
xchg
sub
push
adc
repz
jae
pop
lods
outsb
std
xchg
cwtl
into
movsb
cmp
mov
cmpsb
cmp
cmp
pop
xchg
sub
test
pop
repz
es
dec
sbb
fcomps
sub
and
jbe
push
inc
adc
jge
inc
fisubrs
or
xchg
mov
push
out
aad
lcall
mov
mov
fxam
jl
xor
jmp
pop
pop
and
test
pop
movsb
leave
inc
xlat
icebp
push
jmp
adc
dec
and
pop
insb
testl
loop
xchg
cs
xchg
and
adc
cmpsl
push
cmp
add
pop
mov
mov
jb
sti
lods
cmpsl
test
loopne
aaa
into
clc
add
cmp
lea
gs
sub
faddp
or
sub
sbb
dec
fbstp
mov
sahf
xchg
dec
loop
sarb
adc
ss
ljmp
mov
sub
jmp
xchg
adc
lahf
ss
xor
adc
xchg
pop
pop
mov
fldcw
mov
aaa
and
pop
push
mov
outsl
cmpsb
mov
hlt
in
scas
inc
add
cmp
aaa
and
lahf
pop
push
pushf
xor
mov
xor
decb
jo
dec
push
pop
icebp
lea
xchg
lods
popf
xor
mov
pop
in
clc
stos
inc
and
sbb
jnp
jg
sbbl
jecxz
xor
add
cmp
mov
imul
mov
inc
xlat
dec
loope
add
xor
pop
mov
test
scas
movsl
dec
iret
pop
hlt
idiv
pop
scas
sub
inc
fiaddl
call
xor
mov
dec
fists
ss
into
jo
stc
mov
popf
xor
jmp
ds
mov
xor
sub
mov
xor
fsubr
test
adc
aaa
xchg
jo
xchg
sub
mov
inc
ficoms
push
jmp
jno
popf
xor
xchg
pop
xchg
sti
xchg
fwait
and
jns
adc
test
xchg
and
mov
inc
fstl
aam
and
shrl
xchg
xchg
sub
je
dec
movsl
call
mov
dec
ja
cwtl
das
inc
cwtl
hlt
mov
shrb
repnz
in
adc
inc
xchg
sub
lret
popa
push
jmp
in
or
out
inc
fisubrl
insl
add
nop
inc
xlat
leave
bound
cltd
ljmp
lock
test
jbe
mov
inc
xchg
cmpsb
cmp
xchg
in
dec
adc
aam
push
mov
jg
push
sbb
or
and
and
stos
inc
jge
jns
fs
lcall
xchg
sub
cs
dec
enter
mov
cld
mov
enter
clc
xor
fwait
push
pop
mov
mov
ds
rcll
adc
xor
mov
cmpl
push
idivb
pushl
daa
push
andl
dec
movsl
inc
ja
mov
fistpl
loop
sub
add
mov
aaa
xor
insb
xchg
inc
in
andl
sbb
sbb
cmp
sub
mov
test
pushf
sub
and
push
je
dec
stos
jge
fwait
movsb
int
cli
lret
sbb
notb
das
mov
pushf
addr16
movsl
out
mov
fsubr
add
aam
add
outsl
popa
push
xchg
push
insb
stc
nop
mov
jle
jecxz
sahf
daa
xor
pop
scas
aaa
xchg
test
icebp
xchg
aad
iret
push
sub
and
and
fbld
dec
push
cmc
je
out
ja
pushf
andl
adc
cmp
test
pop
cmpsl
mov
fisubrl
aam
cli
or
pop
adc
sub
outsb
inc
imul
mov
leave
outsl
push
add
mov
cs
jecxz
xorl
mov
in
jmp
in
aas
pop
outsl
or
inc
push
mov
lret
mov
mov
sbb
jb
and
mov
push
je
test
mov
rcr
or
mov
add
aas
mov
jp
outsb
lods
inc
movsb
mov
loop
testl
adc
xchg
test
sub
add
loop
fisubrs
inc
movsl
push
lea
jns
shll
xchg
int3
sbb
movsl
dec
push
push
das
leave
jge
fstps
sbbl
mov
ret
add
jno
xor
sbb
arpl
lret
scas
add
pushl
cmp
fisubrs
mov
mov
jge
sub
jne
mov
decl
cmp
push
mov
dec
adc
push
mov
dec
cmc
test
adc
cli
inc
adc
push
mov
xchg
aam
lods
push
mov
fxch
jne
push
daa
leave
jb
call
or
lcall
shr
sub
mov
dec
icebp
push
mov
or
and
pop
gs
mov
and
adc
les
sub
push
fs
data16
pop
popf
scas
rolb
mov
xlat
or
dec
pop
cmp
xchg
ja
enter
sub
cmpsb
pop
sbb
jmp
test
testl
aaa
aam
pop
jecxz
push
sub
mov
push
aad
jnp
xor
std
addl
rcrb
xchg
sub
cmp
fisubrs
mov
cld
mov
mov
loopne
sbb
jno
andb
push
movsl
cmc
xchg
into
inc
fxch
pusha
or
ficomps
mov
sbb
adc
rcrl
mov
popa
ret
and
mov
out
addr16
cmpsb
pop
mov
cmp
and
pop
mov
les
lods
sbbl
insb
and
xor
mov
testb
push
fsubs
adc
popf
xor
dec
cli
xchg
jle
les
lahf
and
rcrb
mov
sub
and
js
jne
scas
inc
xor
push
dec
in
jmp
imul
cmp
insl
stc
mov
sub
cmpsl
ds
inc
pop
lods
lds
int3
arpl
jecxz
and
add
dec
xor
mov
dec
daa
mov
mov
inc
fld
rcrb
or
push
out
sbb
adcb
cmp
mov
les
mov
mov
adc
jecxz
jae
mov
sbb
adc
cld
lea
stos
inc
aas
out
pop
repz
jo
push
push
jb
call
cs
fld
pop
cld
lea
mov
sbb
sub
adc
ss
repz
lcall
cmpsl
mov
xchg
hlt
mov
and
inc
mov
xchg
xorb
add
lea
fstps
scas
inc
dec
cld
test
push
mov
rcr
test
or
xchg
iret
mov
adc
fbstp
cli
inc
ficomps
ja
adcb
sbb
sbb
hlt
sub
adc
xchg
sub
pop
mulb
mov
xchg
xorl
loopne
popf
xor
add
lea
xor
dec
add
adc
ss
or
das
lods
fmul
inc
out
jmp
pop
ret
das
add
arpl
loope
jnp
shll
fwait
xor
pushf
jmp
push
cmpb
out
jo
fdiv
push
adc
ret
hlt
cld
adc
cmc
mov
push
iret
cmp
cmp
xchg
lcall
clc
in
cmpsb
xor
mov
lahf
lret
out
js
jb
mov
in
mov
fiadds
sub
jp
inc
xlat
pop
fwait
jle
or
mov
in
test
dec
into
jmp
jge
jp
cmp
int3
pop
sbb
fisttps
cmp
fs
jmp
jge
xchg
in
add
add
and
lahf
adc
and
shrl
xchg
mov
fstps
xchg
int3
sub
das
pop
in
fbstp
jae
in
movsb
inc
fidivl
lds
scas
iret
sbb
andb
inc
xlat
fwait
inc
sub
je
mov
popa
leave
setp
inc
ljmp
xchg
cmp
pop
outsb
mov
cmp
mov
mov
insb
push
and
divb
mov
aad
push
cwtl
ficoml
enter
adc
dec
xchg
rol
xchg
push
lods
and
jp
sub
bts
ficompl
loopne
imul
aas
call
sub
loopne
cld
push
xorl
mov
pop
repz
mov
dec
cli
loope
adc
mov
inc
push
imul
add
stc
xlat
inc
mov
ret
push
aad
out
fdivrl
push
pop
fidivs
popf
je
dec
sbb
lret
int
fwait
push
xorb
push
icebp
rcll
aaa
orb
jns
enter
loope
mov
bound
shl
mov
sbb
mov
out
inc
loop
cltd
je
adc
push
xchg
cld
jle
add
mov
insb
pop
sbb
sarb
cmpl
arpl
scas
mov
jne
cmpsl
pop
xchg
test
xchg
out
lcall
dec
pop
popf
shll
mov
popf
xchg
mov
mov
xor
dec
sub
pop
cltd
loopne
cmp
mov
mul
adc
pop
test
clc
cmp
mov
pushf
dec
mov
psrad
adc
jns
mov
hlt
outsb
mov
test
pop
cld
shlb
jno
das
bound
divl
stos
inc
push
lahf
testl
sub
call
out
dec
clc
cmp
out
ret
sahf
mov
mov
pop
scas
push
inc
fildl
mov
mov
push
out
filds
paddb
out
daa
loopne
pop
out
lea
jb
push
movsl
in
dec
xlat
int
cmpsl
std
push
loope
mov
testb
mov
fsubrs
inc
xor
xor
pop
lock
inc
pop
lock
insb
mov
int3
pop
lock
dec
pushf
xor
pop
insl
dec
push
mov
inc
arpl
xchg
jae
jo
rcl
repz
or
lret
or
lods
xchg
dec
jno
cmp
inc
mov
xor
push
in
dec
xor
mov
aad
lret
lds
or
push
jb
inc
sbb
aad
mov
repnz
das
sub
lahf
add
or
pop
xor
nop
adc
inc
xchg
lock
mov
adc
add
fnsave
in
ss
icebp
mov
mov
push
arpl
xor
cmp
push
push
push
aad
sbbl
or
dec
cmp
cmp
adc
add
jae
mov
adc
cmp
xor
adc
fidivrl
xchg
insb
dec
push
inc
mov
pop
xchg
jmp
leave
bound
inc
fisubrl
fsubrl
iret
fdivs
pop
jae
jle
push
sub
hlt
xorb
mov
dec
loope
insb
movntq
mov
pop
push
test
mov
lods
movsb
int3
fbstp
into
mov
add
push
in
pop
xor
test
ret
cmc
pop
pop
repnz
sbb
inc
fdivr
gs
xchg
lcall
scas
out
shlb
out
insb
add
sbb
data16
arpl
dec
mov
mov
mov
mov
xchg
sub
mov
lret
cmp
adc
pop
pop
sahf
dec
push
jb
xchg
adc
xlat
out
or
dec
aas
in
or
xchg
jl
xchg
scas
repz
ror
arpl
or
push
jnp
xor
test
sub
aad
fidivs
mov
jb
sub
repnz
inc
adc
movl
and
pop
aaa
imul
aas
repnz
jecxz
sbb
xchg
sub
pop
lods
inc
push
out
leave
sbb
insb
fs
cmpsl
cmp
jecxz
scas
jmp
mov
dec
gs
jno
lea
mov
aad
mov
or
jae
xor
xor
xor
mov
rcl
insb
add
cwtl
das
pop
jb,pn
popa
fwait
int3
arpl
adc
es
mov
or
in
push
testb
in
aam
ffreep
xchg
sub
push
mov
xchg
pop
xor
dec
ret
fidivl
addr16
cwtl
test
push
sbb
repz
push
push
scas
inc
sub
inc
popf
loopne
adc
adc
or
in
cmpl
jnp
sub
pop
icebp
mov
lea
cmpl
lea
and
xchg
clc
repz
jl
lea
mov
stos
and
aaa
repz
pop
and
jae
test
popa
clc
mov
push
popf
jmp
add
jecxz
imul
test
loop
or
sbb
test
cwtl
and
or
pop
push
in
pop
daa
mov
cli
dec
stc
nop
lock
nop
jecxz
add
aaa
call
incl
cmp
xlat
outsb
in
js
jns
cli
imul
stc
adc
jmp
std
lods
inc
out
imul
ljmp
add
dec
and
cmp
inc
fdiv
pop
shrl
sbb
jp
jnp
sbb
test
xchg
outsl
adc
repnz
mov
pop
dec
push
pop
testb
stc
lcall
pushf
out
pushf
xor
adc
aad
inc
fistpl
mov
jp
lret
mov
rcrb
mov
and
and
pusha
notl
aam
jne
pop
add
mov
pop
repz
mov
outsl
insb
sti
inc
fldt
jo
ljmp
aad
gs
test
push
and
pop
inc
mov
arpl
inc
fcoml
pop
sub
stc
jne
rclb
add
sbb
in
cmp
and
add
iret
push
rcrl
test
sbb
adc
fs
sub
pop
mov
pop
shll
cli
sbb
test
fwait
push
andb
jmp
inc
fisttpl
and
stos
inc
nop
addb
mov
out
mov
pop
pop
sti
xchg
mov
mov
iret
into
lds
test
sub
pop
ret
daa
mov
mov
lret
std
sub
mov
inc
js
or
jns
xchg
outsl
add
mov
pusha
pop
lds
push
popf
push
cmpsb
cli
fadds
add
and
cmp
rorl
cmp
test
jns
jecxz
and
notb
sbb
pop
or
push
mov
out
les
cmp
cli
jp
xlat
outsb
sbb
pusha
sub
push
lock
sub
jle
imul
lret
out
cmp
dec
loop
cmp
pop
lods
ds
xorl
lods
pop
lcall
push
in
ret
adc
ds
bound
cmp
cmp
mov
push
mov
adc
inc
lods
inc
jb
dec
out
pushf
dec
loop
xlat
pop
enter
sbb
cmpsb
jle
mov
fs
fwait
insl
mov
shlb
arpl
lret
bound
xor
es
dec
adcb
jmp
jle
lods
xor
loop
scas
jnp
and
ja
xchg
in
mov
pop
fdivs
aaa
sub
or
jge
lret
rolb
add
xor
jno
fmuls
push
loop
lret
popf
xor
and
adcl
cld
das
orb
mov
movsl
pusha
notl
pop
mov
add
fimull
mov
jae
lods
inc
pop
adcl
je
sbb
iret
and
ficoml
lds
cwtl
das
mov
stc
xchg
leave
stc
mov
mov
mov
cli
mov
mov
jecxz
in
pop
icebp
inc
push
test
xchg
mov
out
mov
pop
loop
mov
fimuls
cli
ds
add
mov
xchg
xlat
mov
inc
fdivl
pusha
test
pop
jmp
cmp
mov
scas
dec
sbb
ja
mov
mov
rclb
rcrb
testb
inc
sub
pop
lock
pushf
mov
push
jmp
or
insl
pop
mov
xchg
lea
mov
fnsave
test
sub
or
mov
pop
scas
lods
sub
mov
add
xor
lods
inc
push
push
imul
test
leave
jmp
cmp
inc
les
outsl
sub
pushf
popf
fidivl
mov
clc
xchg
es
add
inc
push
mov
pop
mov
lea
mov
in
sbb
rcrl
or
loopne
adcl
xchg
jecxz
inc
adc
aaa
into
imul
cmpl
mov
and
sub
je
inc
fnsave
aam
sti
add
dec
sbbb
xor
cmp
xchg
ret
push
sbb
xchg
cs
pop
fsubrs
cmp
imul
adc
vmread
lret
testl
movsl
dec
push
ds
mov
scas
adc
mov
push
jno
std
mov
leave
add
adc
ds
in
add
mov
leave
xlat
outsb
sti
adc
faddl
lds
mov
pop
lcall
mul
sub
loopne,pt
pop
rcrl
mov
aam
test
pushf
sar
push
das
repnz
js
inc
fimuls
lret
dec
in
in
mov
push
mov
pop
mov
das
mov
mov
mov
dec
out
pop
lds
call
pop
adc
push
cmpsl
and
pop
xchg
iret
sbb
sbb
scas
inc
pop
pop
add
fildll
ret
cmc
add
adc
ret
push
add
pop
mov
push
jecxz
inc
faddl
or
idivb
pop
adc
enter
rorb
std
xchg
jl
push
ljmp
hlt
mov
js
loop
xchg
sub
loope
inc
shr
xor
pop
adc
lea
shll
mov
mov
pop
scas
loope
clc
or
or
pop
pop
scas
mov
sub
sub
mov
lods
fwait
adc
and
xchg
lahf
movups
jmp
add
xor
movsb
pop
pop
xor
mov
mov
movsb
aam
xlat
lcall
xor
mov
mov
or
dec
aam
es
xor
or
mov
sub
mov
xchg
sub
movl
inc
mov
into
mov
rcll
jl
loop
aaa
adc
pop
xchg
aaa
into
outsl
mov
shlb
pop
call
add
sub
ds
jns
cs
aas
sbb
hlt
fistpll
rcrb
enter
out
aad
pop
imulb
ret
clc
cmc
call
nop
daa
dec
jmp
mov
addr16
mov
loopne
rclb
aaa
into
test
pop
out
aas
mov
lahf
sub
xchg
movsb
mov
jle
fidivl
and
hlt
pop
mov
mov
jge
jns
push
out
mov
pop
cli
out
xor
adcb
nop
add
fdivs
jmp
repnz
and
cmp
leave
dec
inc
fidivrs
jmp
sbb
adc
adc
push
test
fwait
push
filds
adc
push
cmp
outsb
insb
push
jo
mov
rolb
sahf
add
xlat
popa
sub
rcll
aaa
into
test
aaa
into
add
xor
movsl
cmp
aad
lret
lds
fs
cmc
xor
in
pop
mov
adc
cmp
push
shrl
rol
fidivs
test
sbb
jge
clc
pop
xor
dec
adc
mov
fwait
sub
mov
leave
pop
icebp
cli
mov
inc
sti
pop
bnd
cltd
xor
int3
ds
lret
push
ljmp
and
les
push
jmp
xor
and
jge
push
jmp
cwtl
fs
mov
aam
imul
push
popa
clc
aas
daa
es
js
dec
jecxz
xchg
pop
hlt
mov
and
add
loope
sub
lock
push
mov
lret
loop
loop
or
dec
es
nop
ds
loope
mov
and
push
sub
ret
pop
movsl
inc
pop
hlt
jbe
arpl
jbe
cli
xchg
shlb
xchg
data16
popf
xor
ja
xor
cmp
ja
ds
lahf
fdivl
lcall
sub
outsl
push
inc
inc
sbb
js
or
xor
sbb
xor
fsubrs
nop
pushf
xor
int3
imul
jmp
rcrb
mov
fdivl
cs
mov
movsb
cmp
push
jmp
mov
push
pop
dec
xor
in
imul
sti
xchg
or
nop
daa
lods
and
int
cmp
scas
std
int
out
enter
and
xchg
adc
adc
or
mov
and
push
cmpsb
push
out
sbb
sub
adcb
mov
repnz
inc
fstp
sbb
ret
dec
out
enter
lret
bound
mov
push
popf
sub
or
dec
pop
mov
dec
arpl
sahf
or
pop
dec
pop
lods
and
pushf
xchg
sbbl
dec
stos
lods
inc
fnstsw
xchg
insb
cmc
dec
loop
lahf
mov
addl
mov
frstor
sub
daa
pop
call
andl
jle
xchg
testb
daa
cmpsl
inc
fcoml
push
lods
inc
andb
mov
stos
stos
inc
sbb
jbe,pn
mov
shrl
rol
sub
iret
add
ja
lret
bound
ja
pop
push
imul
mov
mov
lods
inc
or
xchg
dec
loop
cmpl
scas
imull
call
jmp
rcr
adc
inc
inc
psllw
mov
leave
in
test
sbb
mov
inc
fdivl
int
insl
sub
sahf
sbb
nop
mov
mov
int3
add
add
sbb
lea
mov
leave
mov
xchg
sub
jo
shll
adcl
subl
lahf
loope
int3
arpl
scas
imul
add
push
mov
inc
push
lods
inc
mov
push
xchg
mov
dec
in
cld
in
xchg
cs
mov
cmp
and
or
aam
dec
out
xchg
in
fisubl
cmp
imul
sbbl
sub
fsubrl
push
loope
dec
loope
in
in
jg
test
fimull
mov
push
mov
lret
das
pop
mov
rorl
cmpsb
ret
daa
inc
fcomps
clc
in
out
movsl
out
jne
int
sbb
sbb
mov
daa
mov
mov
sarb
mov
push
in
and
icebp
mov
daa
mov
sub
lret
scas
xor
loopne
clc
jge
xlat
cs
xor
repz
test
repz
ret
add
out
xchg
sub
ja
sbb
test
leave
out
mov
mov
mov
mov
mov
into
gs
xlat
outsb
cmp
imul
lahf
lcall
mov
movsl
mov
incb
stos
add
xor
xchg
cs
dec
xor
jle
adc
lret
ja
loope
inc
adc
movsb
cmp
sbbl
dec
fnsave
out
mov
push
movsl
fisttps
outsl
inc
cmp
push
and
mov
aad
clc
or
and
push
mov
add
mov
lds
imul
inc
fstl
pop
scas
ss
js
dec
fnstenv
movb
cmp
and
lods
outsb
lds
adc
loope
enter
add
fbld
mov
mov
mov
xchg
sbb
jg
adc
xchg
and
sub
outsw
mov
pop
cmpb
or
sub
shl
imul
aas
mov
out
stos
test
iret
inc
or
jg
mov
mov
mov
jg
std
xchg
mov
sbb
pop
sarl
das
filds
ds
inc
dec
ds
jno
pop
jmp
adc
ds
or
lock
adc
les
xor
adc
inc
push
mov
test
mov
mov
cli
xor
movl
add
add
out
test
push
pop
jns
clc
icebp
leave
imul
iret
xchg
divb
das
pop
sub
sbb
sub
testb
pop
fstpt
jo
clc
mov
xchg
mov
cwtl
scas
int3
mov
lahf
mov
popf
stc
jle
ljmp
ret
stc
repnz
sub
push
and
xor
inc
pop
fmuls
dec
inc
add
pop
pop
add
cld
push
outsb
jp
lea
loop
push
jae
jnp
dec
push
enter
cmp
pop
xor
push
or
xchg
ret
adc
dec
mov
push
lcall
in
mov
mov
mov
cwtl
sbb
int3
mov
push
mov
mov
inc
add
xor
flds
insl
xchg
or
test
jl
loop
icebp
jmp
cmc
aam
scas
jge
push
and
popa
insl
xchg
popf
les
pop
dec
pop
jp
push
xor
cmc
push
shrl
lds
ljmp
sbb
push
stos
mov
push
jmp
and
mov
dec
sbb
cmp
ss
sbb
push
pop
out
mov
mov
or
mov
xchg
sub
lods
fnsave
mov
addl
shlb
push
outsl
push
test
mov
and
dec
mov
inc
sub
leave
popa
in
cli
xchg
and
jmp
scas
je
pop
sahf
mov
and
jmp
incl
xor
jb
div
stos
inc
and
xchg
sub
leave
pusha
jne
mov
sahf
xchg
out
enter
icebp
jmp
out
xchg
and
or
cs
clc
lcall
adc
pop
jne
stos
je
xchg
adc
ficoml
xor
inc
sti
scas
inc
sub
dec
int
loop
lahf
mull
jns
es
adc
js
int3
lods
inc
call
int3
arpl
sbb
jae
test
adc
fistl
xor
inc
cld
scas
inc
arpl
xchg
dec
int3
movl
fidivs
adc
push
ljmp
jno
js
mov
stos
test
adc
sti
pushf
mov
and
sarl
test
out
rol
pop
clc
icebp
testb
inc
adc
je
add
mov
push
out
adc
inc
cmp
imul
or
jl
pop
ret
inc
icebp
adc
or
mov
adc
and
or
and
cld
test
shll
push
xor
ss
mov
test
shll
stc
fildl
jb
sub
push
push
pop
insb
add
mov
and
mov
inc
xor
push
pop
mov
loop
bound
add
cs
push
mov
push
and
pop
mov
pop
icebp
stos
hlt
pop
hlt
and
inc
jnp
js
xchg
cs
cltd
cltd
xor
jae
dec
movsl
in
mov
push
shrl
aas
aad
jno
repnz
mov
insl
adc
push
shrb
icebp
aaa
das
push
mov
mov
inc
stos
mov
mov
lods
outsl
lds
cmc
popf
fdivl
data16
mov
and
nop
sbb
outsl
int
addr16
cmpsl
ret
int
js
sbb
clc
sbb
or
fwait
mov
dec
stos
sub
inc
cmc
popf
jae
icebp
lret
adcb
mov
loope
inc
into
jnp,pn
movsb
xchg
cmp
and
inc
fldl
inc
mov
aad
jno
fst
and
jp
mov
sbb
call
aas
jge
cmp
scas
sub
add
in
cmc
inc
cld
mov
pop
mov
sbb
pop
sbb
dec
jge
cli
lods
insb
popa
negl
sarb
and
xor
push
mov
rcr
divl
popl
repnz
adc
cwtl
adc
ljmp
in
aas
add
xor
jae
scas
push
insl
add
mov
nop
sub
icebp
test
es
dec
mov
enter
aam
add
lea
or
test
sub
jo
xor
add
mov
pop
in
sub
dec
in
dec
fcomip
mov
or
cmpl
push
mov
dec
jae
jae
mov
rolb
movsb
shr
pop
mov
outsb
aaa
pushl
sbb
loop
fnsave
dec
add
lcall
out
es
nop
fwait
cmp
aam
lds
or
inc
cltd
inc
adc
xchg
scas
and
lret
mov
dec
mov
int
enter
cltd
xchg
leave
out
cmp
rcr
loopne
mov
int
mov
pop
fnstsw
dec
pusha
pop
cmpsb
pusha
fwait
sahf
push
adcl
lcall
sahf
ret
pop
addr16
test
dec
fistl
and
movsb
inc
lret
mov
cli
adc
push
jnp
sub
xchg
xor
out
pop
sbb
enter
xor
sub
fimull
xchg
sbb
cmp
xlat
subl
rep
mov
push
xor
aas
mov
and
in
inc
cmp
cli
ret
cld
sub
mov
repz
adc
movsb
xor
adc
lahf
jmp
adc
dec
clc
sahf
jo
ds
pop
mov
into
adc
or
sub
fimuls
xchg
xchg
lods
mov
test
mov
mov
addr16
push
push
sub
lods
fdivl
rolb
sbb
mov
out
int3
mov
sbb
dec
clc
les
icebp
mov
add
stc
loop
aas
sub
imul
cld
xor
fs
cmp
pop
inc
test
sti
sarl
xchg
dec
out
mov
cld
pop
in
int3
ljmpw
cmp
pop
push
out
dec
out
or
lret
xchg
or
mov
repnz
or
push
idivl
fldenv
scas
data16
lcall
jae
jecxz
fcmove
jle
popa
mov
sbb
inc
outsl
inc
addr16
lods
mov
jge
out
sbbb
fwait
xchg
shl
jo
xchg
inc
push
dec
inc
es
repnz
jb
adc
shlb
cmp
mov
jno
lea
push
and
mov
scas
insb
push
insl
adc
mov
xchg
js
fld
inc
pusha
cld
pop
out
repz
mov
ret
jecxz
mov
cmpsb
das
adc
xchg
in
push
dec
mov
pop
xchg
fbld
adc
pop
clc
jge
dec
or
data16
pop
hlt
cmp
lds
mov
xchg
clc
jmp
mov
add
sub
xor
rcll
lds
rclb
xor
and
mov
lret
sub
test
fstl
mov
dec
sti
pushf
cmp
dec
pushf
dec
or
mov
or
adc
in
lods
insb
sti
and
das
and
adc
pusha
or
inc
or
ja
cltd
mov
out
repnz
mov
inc
fiaddl
ss
fs
adc
and
cmpsb
sbb
push
xor
mov
dec
dec
or
pop
mov
fdivl
lods
repnz
dec
xchg
inc
or
popa
mov
push
push
out
scas
movsl
xor
sbb
xor
push
ret
xchg
jge
gs
mov
inc
xorps
lret
ror
shl
pushf
dec
cwtl
push
mov
lea
inc
stos
push
xchg
repz
adc
leave
jae
dec
jne
stc
ret
xchg
xchg
and
lcall
push
pop
jno
addr16
add
insb
mov
and
inc
sbb
mov
mov
add
mov
sbb
mov
jmp
sarl
add
test
pop
mov
mov
adcb
pop
negl
xchg
sarl
and
hlt
lods
push
sahf
cmp
out
xchg
jnp
mov
or
pop
push
adc
cmp
je
and
daa
mov
adcb
movsl
push
sbb
dec
sbb
test
out
scas
sti
mov
leave
mov
push
rorl
rorl
mov
je
cs
add
xor
xchg
sbb
fsubrl
mov
sub
mov
dec
push
inc
ficoml
dec
in
pusha
out
sub
sub
push
popf
fsub
lcall
dec
push
repz
sub
inc
mov
lret
lret
mov
int
xlat
cmp
pusha
mov
xchg
je
hlt
jmp
aas
sub
or
fwait
inc
cmp
in
je
scas
negb
xchg
mov
cli
inc
nop
aaa
pop
jmp
enter
xchg
xor
aam
mov
mov
test
in
inc
stos
outsb
cmc
cwtl
xchg
mov
jl
test
push
insl
jp
ret
ljmp
test
sub
inc
stos
push
into
sbb
and
lds
out
mov
stos
push
testl
mov
jecxz
pop
scas
lcall
jg
andl
pop
in
mov
movl
lahf
loopne
repz
insl
sub
leave
xchg
inc
dec
or
popf
std
and
cmp
dec
pop
ja
or
or
mov
jmp
mov
cmpsb
cmp
fdivp
shl
xchg
mov
mov
sbb
unpcklps
imul
inc
adc
jp
into
pop
jl
sbb
pusha
push
jb
jecxz
popa
shrb
sub
push
mov
bound
and
inc
jg
mov
jns
inc
loopne
xor
imul
jmp
movsb
cmp
push
jl
jmp
insl
lret
enter
xchg
jle
mov
in
in
movsb
jg
scas
sbb
decb
andb
cs
and
jl
adc
mov
sbb
sbb
insl
add
cmp
jo
mov
mov
xor
movsb
jl
pop
pop
hlt
ja
jg
movsb
jb
shll
push
ret
int3
inc
adc
xor
inc
pop
divb
jl
cltd
pop
fidivl
push
sub
mov
push
sbb
movsl
sub
push
shll
int
and
pop
xchg
ds
test
inc
mov
jmp
or
loopne
add
pop
mov
inc
mov
out
sbb
jl
imul
fbstp
adc
movsb
cmp
iret
mov
ficoml
or
loopne
or
xchg
pop
adcb
mov
mov
add
inc
xchg
push
popf
out
sar
rcr
xchg
inc
cmp
jae
push
jmp
xchg
push
lret
daa
or
lahf
arpl
hlt
cmp
dec
mov
cmp
push
mov
inc
jecxz
stos
out
arpl
xor
stc
sub
fistl
dec
int3
push
imul
insb
jnp
ret
ret
pop
mov
loopne
js
stos
addr16
call
xchg
cmp
mov
pop
lock
neg
jbe
jle
push
mov
std
xchg
jnp
xchg
sub
popf
sbb
push
out
cmp
and
push
jb
out
xchg
xchg
jne
lds
push
movsl
dec
out
sub
jno
ret
mov
ret
dec
loope
mov
mov
add
in
test
imul
icebp
je
in
jae
xchg
add
fwait
test
xchg
popf
rclb
lea
mov
push
xchg
add
push
inc
fldl
movsl
pusha
mov
loop
xchg
push
repz
movsl
icebp
inc
incl
add
jne
inc
into
test
arpl
xor
and
lock
lahf
gs
pop
test
sbb
inc
rolb
jbe
sub
push
loop
data16
xor
in
adc
ss
push
mov
mov
push
or
into
gs
pop
stc
nop
sub
mov
adcb
aad
mov
aaa
daa
sub
mov
lret
fs
cld
stc
nop
xor
sbbl
push
pop
scas
xorb
mov
les
ljmp
jno
jns
cld
xchg
popf
lcall
out
in
lods
inc
pop
adc
rolb
lret
dec
icebp
fisubrs
fildl
iret
popf
xor
and
push
and
pop
cmpsl
jne
jo
enter
push
mov
ja
sub
int3
adc
and
pop
lock
enter
mov
jb
mov
mov
ret
and
lret
mov
insb
add
cmp
mov
dec
add
cwtl
cmp
outsl
push
popa
jb
or
cmc
lods
xor
rcll
lret
js
inc
cmpsb
test
cmp
scas
lods
and
pop
into
in
test
sti
insl
add
loop
inc
aam
cmpsl
ds
cmc
lock
mov
mov
jmp
lea
dec
in
cs
lahf
or
cmp
jb
mov
lds
push
mov
mov
call
jno
stc
sti
xchg
jmp
adcb
or
mov
or
cmp
fucompp
adcb
fs
mov
les
lds
xchg
cs
test
jecxz
in
imul
and
sbb
pusha
notl
fnsave
out
test
cmp
lret
insb
or
adc
imul
jb
xchg
lea
es
xchg
dec
scas
inc
mov
mov
fs
pop
in
push
filds
popf
or
lret
mov
ljmp
mov
mov
sub
dec
jbe
js
push
ljmp
ret
fldenv
rcl
movsl
push
in
fcomi
mov
in
xchg
movsb
push
pop
hlt
ja
test
or
in
inc
sub
lret
fidivl
mov
int3
arpl
push
jns
inc
iret
stos
inc
repz
xchg
push
xchg
dec
jecxz
ja
int
imul
push
sti
xor
push
pop
sbb
lods
incl
sbb
enter
inc
arpl
xor
mov
out
push
mov
inc
mov
int3
push
pop
scas
jnp
aaa
insl
dec
aam
mov
insl
imul
fnsave
outsl
push
and
inc
lret
bound
ret
pop
fnstenv
xchg
scas
inc
lret
insl
cwtl
das
pop
fs
call
repnz
sti
xchg
nop
adc
test
lods
inc
pop
cmpsb
loopne
sbb
xsha256
cmpsb
adc
sub
adc
sahf
ficomps
iret
cmp
enter
movsb
loope
incb
add
rcl
popf
xor
subb
mov
push
cmp
xchg
mov
xor
insb
dec
xor
cltd
cmp
xor
test
add
stos
fs
jle
loope
cwtl
das
testl
stos
inc
cwtl
stos
lcall
cmp
mov
xor
push
mov
push
aam
add
out
cmp
sarl
outsl
push
arpl
into
gs
sub
mov
sbb
dec
loop
mov
cmp
shlb
jg
in
cmp
pusha
mov
push
ljmp
adc
cmpsl
ds
flds
push
xor
movsl
fbstp
ret
pop
mov
sbbl
enter
jb
xchg
fistpl
testb
sti
loopne
and
ds
lret
sub
test
repz
sahf
xor
mov
jns
pop
lret
in
loop
fbld
nop
daa
pop
add
jb
fidivs
xchg
fnsave
jl
add
jno
lcall
les
mov
mov
dec
stc
mov
notl
loopne
push
jno
mov
and
xor
push
lds
test
add
insl
loopne
xchg
cmp
jno
inc
fdivrl
loopne
loop
in
and
in
adc
jbe
cmpsl
mov
push
xor
push
fwait
sub
mov
and
push
dec
push
jmp
jecxz
enter
cmp
aam
pop
hlt
gs
fisubs
dec
and
iret
mov
jae
sbb
add
mov
cmp
xchg
cs
push
or
shrb
xchg
cs
inc
fucom
fcomps
mov
push
push
jmp
aad
in
or
mov
pushf
dec
iret
xchg
mov
and
mov
or
std
xchg
push
fdivs
je
repz
test
roll
popf
test
int3
arpl
lods
dec
in
sub
xchg
popa
ds
mov
inc
shr
add
hlt
jecxz
stos
aam
mov
mov
push
jnp
jge
and
jns
dec
loope
lcall
and
lods
inc
mov
ret
mov
push
in
push
push
jmp
fsubs
cmp
pop
stc
jne
jmp
inc
fldcw
ret
xor
add
inc
fst
xor
int
jg
jae
cmp
or
leave
sbb
jg
fdiv
add
lock
push
sbbl
mov
mov
ss
mov
inc
enter
mulb
and
cmc
mov
shll
clc
out
out
loope
sbb
jae
dec
fistpll
jbe
push
das
cmp
mov
cltd
int3
int
cld
mov
jae
mov
jl
aas
inc
and
push
add
mov
les
mov
clc
test
mov
mov
lods
int3
arpl
and
fwait
outsb
aas
loop
mov
sti
xchg
outsb
ror
les
push
mov
in
add
enter
stc
mov
or
or
mov
or
mov
ss
sbbb
cld
xchg
mov
xchg
sub
xor
pop
push
jmp
into
gs
data16
out
fstp
jae
setno
orl
mov
xchg
cmpsb
cmp
in
mov
mov
fcmovbe
addr16
and
mov
leave
fdivp
xor
cli
incl
lock
mov
dec
icebp
mov
shrb
add
shrb
leave
lret
bound
fmull
in
jne
sub
loopne
shrl
add
div
xchg
stos
inc
push
mov
rcrl
mov
shrl
dec
mov
scas
xor
dec
push
sub
or
jecxz
mov
test
popf
push
in
mov
dec
xor
jae
cltd
xor
daa
mov
scas
stc
pop
hlt
shrl
cmpsb
or
cmp
aad
mov
loop
mov
call
or
ja
jnp
push
push
pusha
pop
mulb
push
leave
pusha
stos
ret
mov
sub
jle
movsl
cmp
or
pop
sbb
jae
fimull
movsl
lret
pop
scas
inc
mov
int3
arpl
loopne
mov
fisubrl
jl
mov
add
mov
cmp
test
scas
loope
loope
sub
pop
add
jne
jl
shrl
sbb
leave
in
outsb
add
fdivr
loopne
sar
pop
hlt
repnz
iret
call
int3
arpl
out
adcb
cli
xchg
sub
sar
xchg
shr
out
fdiv
cmp
loopne
mov
mov
fistpll
les
inc
test
adc
dec
out
cli
xchg
sub
mov
jecxz
lods
inc
movb
push
out
cmp
aaa
cmp
mov
scas
imul
pop
cmp
mov
mov
stc
or
xor
pop
cs
mov
jnp
mov
lock
je
push
mov
cmpsb
cmp
and
mov
lds
lock
aam
sbb
hlt
mov
pop
adc
jns
scas
inc
in
adc
addl
adc
mov
pusha
popa
rclb
rorb
fs
push
iret
lret
adc
fwait
jbe
xchg
hlt
pop
and
stc
nop
or
js
jl
mov
test
lret
filds
cmp
sahf
add
lock
imul
and
fdivl
clc
sub
into
cmpsb
fwait
xor
out
inc
fidivrs
fsubrl
pop
and
jne
popa
inc
fnstenv
adcb
jmp
or
fcmovb
or
jg
inc
jno
cmc
mov
mov
xor
pop
in
pop
sbb
div
popf
xlat
push
cmpsl
icebp
add
aad
jle
insb
push
cmp
mov
int
and
dec
iret
xchg
mov
lret
sti
lock
dec
inc
add
out
je
repnz
js
into
push
sahf
inc
cmp
loop
xchg
gs
and
jno
icebp
lret
push
adc
hlt
dec
aam
jl
neg
into
lds
imul
pusha
hlt
add
in
or
add
mov
rcrb
das
out
enter
pop
sti
mov
out
das
aam
insb
int3
subl
add
lret
xchg
lret
sub
leave
push
ret
cmp
push
add
cmpl
jl
nop
daa
mov
ret
mov
mov
xchg
lea
scas
outsb
in
int3
call
fbld
xchg
cmc
popf
xchg
xchg
and
test
cli
popa
test
in
pop
add
sub
pop
mov
in
stos
mov
testb
dec
pop
ds
movsl
mov
addb
out
fs
inc
fldenv
jmp
aaa
mov
pop
mov
add
in
jbe
pop
icebp
negl
jb
mov
std
dec
sbb
and
sub
fldt
das
dec
lret
in
loopne
mov
rclb
fnstenv
shlb
push
aam
test
jno
push
inc
pcmpeqb
lods
data16
pop
fs
insl
add
pop
xchg
inc
mov
mov
movsl
sub
push
and
fcoml
int
cmpsl
fistps
mov
add
xor
and
xorb
dec
mov
fdivl
pop
ds
pop
mov
push
lds
mov
pop
inc
mov
stos
sbb
mov
jge
pop
lock
and
push
xor
shrl
mov
jecxz
fcoms
aad
push
shrb
icebp
das
cmpsb
cmp
inc
xchg
les
data16
inc
dec
dec
add
arpl
popf
outsl
push
iret
push
lcall
arpl
enter
cmc
cmp
repz
insl
cwtl
das
pop
inc
sbb
sub
xchg
insb
sub
lcall
rorb
adc
sbb
mull
sarb
icebp
sbb
xor
xchg
test
ds
gs
push
add
insb
jae
pop
lock
xchg
shlb
mov
out
add
gs
inc
and
pusha
testl
and
inc
xchg
arpl
inc
enter
inc
fdivl
dec
sub
add
sub
movsl
cmp
aam
test
sbb
ret
pop
divb
das
cmp
sahf
mov
add
sub
clc
jbe
sub
push
out
mov
cmp
stos
popf
push
push
cmp
cmc
in
jae
dec
in
test
shlb
or
insb
pop
pop
out
jo
aam
cmc
xchg
sbb
sub
pop
out
mov
fdivl
and
dec
stc
nop
inc
inc
aas
xor
xchg
sub
and
insb
xchg
or
sarb
stos
cmc
lods
jl
pop
and
and
andl
sub
lods
into
adc
shll
adc
xlat
mov
fnstcw
or
add
jo
pop
push
stos
inc
test
enter
jp
inc
xor
stos
in
xchg
push
lds
mov
fdivrs
stos
push
stos
inc
sub
aaa
cmp
sbbl
cmpps
mov
sti
xchg
popa
adc
addb
je
fdivs
clc
cs
int
adc
test
loop
int
mov
xchg
std
mov
aad
fstpl
rorb
dec
loop
imul
xor
mov
or
pop
hlt
and
addb
fnstenv
loope
inc
fimull
or
mov
mov
ja
rorb
jbe
mov
fnsave
nop
daa
scas
pop
lahf
ss
ror
pusha
out
or
xor
inc
jmp
push
arpl
je
ja
or
lahf
ss
mov
add
xor
mov
adc
movsb
push
push
call
in
or
cltd
or
xchg
sub
cs
orl
xchg
sub
shlb
lret
scas
inc
mov
int
stos
mov
or
aam
jl
aas
enter
daa
ljmp
arpl
in
test
test
jg
sub
je
xchg
sub
std
xchg
and
addr16
fs
mov
aad
sbb
sarb
pop
out
imul
cmp
mov
mov
mov
fistps
mov
lds
in
mov
ret
sbb
hlt
cli
xchg
icebp
adc
imul
enter
mov
sbb
push
fs
sarb
test
fidivl
push
sub
xchg
aaa
into
mulb
dec
jecxz
pop
sub
mov
lds
rolb
ljmp
and
into
xor
sub
es
out
adc
mov
xchg
mov
cmc
cli
in
inc
mov
push
in
pop
aam
xchg
push
jl
idivl
addr16
push
mov
mov
dec
call
orb
jmp
lock
jae
stos
xchg
push
xchg
aam
and
daa
imul
jp
int3
arpl
fwait
shrl
adc
lcall
pop
cmc
inc
fidivl
mov
push
pop
push
ljmp
or
idivb
adc
aad
pop
cmc
fdiv
inc
fmulp
stc
push
movsl
ret
int3
mov
fdivl
in
and
xchg
mov
jo
mov
push
movsl
icebp
xlat
mov
or
sub
dec
repz
jns
jle
mov
out
jmp
sub
jne
addr16
push
pushf
in
adc
cltd
mov
and
test
loopne
and
or
mov
sahf
aad
insl
out
testb
sub
aad
dec
dec
inc
fdivrl
xchg
sub
sub
loopne
push
pop
sub
xor
loopne
adc
roll
cmp
ret
jae
int3
xor
out
jecxz
push
adc
cltd
testl
sbb
aaa
movsl
xor
mov
enter
xchg
shll
push
fs
push
in
pushf
jmp
into
mov
or
out
or
js
jge
aam
hlt
mov
xchg
mov
add
pop
insb
pusha
divl
ds
icebp
outsl
add
je
and
rolb
dec
cmp
popa
and
insl
pop
or
push
orb
jle,pt
out
inc
jmp
adc
test
push
in
mov
rorl
movsl
es
ds
xchg
mov
ret
push
call
dec
sub
jnp
adc
xchg
testb
cmp
popa
jp
push
aaa
das
movb
sbb
add
xor
pop
cmc
jge
lret
bound
sahf
sub
sbb
push
xor
mov
xor
loopne
ljmp
xor
test
push
jae
xchg
xchg
sub
push
xchg
xabort
nop
ljmp
mov
negl
aad
sbb
insb
mov
insb
add
push
push
movsl
inc
fwait
out
or
mov
mov
testl
stc
ret
xchg
sub
scas
dec
movsb
cmp
inc
ficompl
mov
inc
and
adc
hlt
leave
push
in
mov
loop
mov
lret
sbb
push
imull
xchg
cs
adc
inc
fs
leave
push
push
jmp
jae
loopne
subl
out
addb
jb
jbe
pop
inc
jge
inc
jg
or
adc
aad
stos
sub
dec
test
cltd
xor
jge
dec
add
dec
int3
mov
aaa
aaa
or
enter
std
push
mov
ficompl
in
or
xchg
movsb
cmp
enter
mov
inc
das
adc
je
sub
mov
lods
mov
mov
or
stc
nop
mov
or
stos
mov
repz
lret
int
push
shrl
call
or
dec
flds
call
cmpsl
xor
cli
cs
mov
filds
xor
mov
or
xlat
xchg
sahf
xsha1
cmpsb
iret
mov
faddl
addb
sbb
cmp
bound
mov
pop
mov
das
punpckldq
push
add
mov
in
adc
xor
add
cld
negl
cmpl
gs
repnz
inc
mov
jle
push
mov
mov
push
popf
shll
outsl
cmp
popa
test
je
xchg
inc
dec
ret
xchg
lret
xor
aas
js
push
adc
cmp
dec
mov
fiadds
mov
cmpsl
rcrl
sbb
mov
inc
cs
pop
lock
jne
mov
cwtl
das
jae
leave
push
jnp
out
and
push
lock
add
insl
xor
push
loopne
icebp
pop
mov
xor
xchg
icebp
mov
inc
mov
data16
cwtl
das
fs
cld
xchg
cmp
inc
fimuls
dec
jecxz
insb
push
clc
insb
dec
xor
mov
push
or
adc
mov
adc
add
xor
pop
and
cmp
dec
pop
movsl
cmp
outsl
sub
cmp
rcll
dec
add
js
push
adc
bound
stos
push
pop
cmc
test
xor
ret
add
adc
cld
add
ret
out
iret
xlat
sbb
lahf
push
dec
out
testl
dec
lods
in
push
ljmp
push
push
sub
mov
jns
fmull
rorl
pop
pop
xor
pop
push
mov
lock
cmpsl
fdivl
nop
or
and
mov
shlb
popf
nop
aaa
mov
pushf
fistpll
and
pop
into
or
dec
and
lods
xor
pop
dec
push
montmul
cmpsb
test
xchg
xor
sbbl
jp
add
cs
pop
stos
push
arpl
loop
push
dec
mov
jno
pop
aad
xor
inc
cmpsb
jnp
xlat
lods
lret
and
ljmp
test
xlat
inc
daa
lods
or
hlt
addr16
sub
repz
iret
in
std
ret
fnstcw
repz
fiaddl
cltd
imul
push
lcall
jnp
call
call
adc
pushf
addl
sbbl
inc
lret
movsl
testb
sbb
add
lret
hlt
mov
test
dec
iret
lds
xor
fnstsw
stos
add
pop
lock
mov
mov
icebp
movsb
into
add
add
lcall
out
jl
fwait
movsl
cmp
in
stc
loopne
std
jl
add
xor
dec
imul
lods
imul
xchg
pop
sahf
adc
push
movsl
sub
outsb
sbb
cmpsl
pusha
mov
fildll
cltd
fidivs
stos
mov
mov
ja
ja
repz
inc
and
sbb
lock
hlt
hlt
mov
jmp
xlat
test
add
roll
dec
scas
pop
or
decb
or
rcll
clc
sti
jbe
push
ret
sub
pop
and
ss
rolb
out
outsl
jmp
les
mov
push
pop
movsl
xchg
push
add
push
enter
sub
je
cmp
stc
insb
pop
sahf
sbb
out
mov
clc
int3
lcall
push
mov
mov
adc
icebp
push
jl
and
mov
lea
in
aaa
pop
cmp
rcr
lock
sub
sub
shrl
iret
adc
mov
mov
aam
ljmp
jmp
or
sub
lods
add
jnp
jns
fidivl
ret
fdivrs
fcmovnb
orb
push
fbstp
pusha
not
xchg
pop
pop
xor
sbb
js
fwait
test
xchg
pop
xorl
adc
jne
stos
movsb
fwait
mul
mov
xchg
lea
pop
cmp
mov
lds
or
push
imul
adc
cmp
push
cmpsl
inc
sub
rorb
les
lcall
pop
lret
stc
jbe
mov
mov
xor
dec
mov
xchg
hlt
and
mov
add
inc
das
mov
shrl
push
cmpsl
out
repnz
daa
aam
sub
xchg
sub
xor
cmp
inc
add
jno
lret
bound
inc
inc
lods
fisttpl
or
inc
and
call
xor
cltd
xchg
movsl
cmpl
mov
ret
mov
das
scas
into
push
pop
in
hlt
aaa
into
and
insl
sub
outsb
orl
push
lret
adc
add
pop
cmp
push
dec
jge
repz
pop
adcb
xchg
es
jo
push
lods
sub
add
pop
pop
cmp
shll
ffreep
out
hlt
sbb
xlat
inc
fcomp
fucompp
adc
dec
sub
es
fwait
stos
adc
sbb
mov
out
xchg
mov
mov
cmp
loopne
fimull
andb
add
fstpt
mov
inc
adc
push
mov
test
enter
sbb
mov
sbb
mov
mov
fistpll
rclb
cmp
test
xchg
xchg
mov
or
hlt
in
fld
dec
aas
push
cmp
or
push
inc
push
sbb
mov
push
cmp
or
add
js
fs
mov
dec
or
cmp
test
cmpsb
xchg
stos
iret
int3
jns
shl
and
mov
xchg
cmp
adc
lods
inc
mov
adc
fisttpll
in
cwtl
fxch
cmpsb
cmc
push
pop
in
mov
fidivrs
loop
cltd
push
shl
hlt
push
adc
fmull
mov
push
aaa
cmp
sub
xor
scas
or
dec
subb
jmp
cmpsb
xlat
orb
mov
xchg
loopne
out
mov
dec
loop
dec
push
xchg
in
cmp
mov
sbb
cltd
pop
xchg
mov
lds
mov
cmp
or
mov
jg
xchg
ja
js
jp
mov
daa
rorb
cmp
mov
mov
scas
stos
cmp
out
fists
mov
lods
iret
loope
fdivr
in
test
adc
push
lock
mov
mov
test
fbstp
push
mov
loop
gs
add
imul
and
insl
aam
dec
aad
push
jge
scas
jnp
cmp
add
aam
pushf
xor
sbb
int
mov
mov
sbb
push
mov
mov
mov
sub
lea
aas
mov
push
pop
fs
pop
xchg
cli
ds
imulb
inc
mov
xchg
pop
sbb
stc
nop
adc
sub
inc
cli
int
adc
in
mov
lret
dec
xchg
and
aas
repz
xlat
sbb
pop
mov
mov
add
adc
je
movsb
fistps
mov
loop
jnp
pop
or
dec
shrl
xchg
or
orb
popa
adcb
xchg
stc
movsl
mov
sbb
mov
decb
outsl
push
jo
daa
add
mov
jp
popf
add
stos
mov
scas
mov
and
xor
mov
dec
jecxz
test
push
cld
fwait
mov
orl
jo
mov
xchg
repz
push
in
pusha
jp
inc
rcrb
ds
inc
lret
add
pop
pop
sub
jl
cld
stc
push
jnp
push
sbb
xchg
sub
test
push
inc
mov
iret
mov
aas
cli
mov
inc
test
sub
insb
mov
repnz
mov
sti
or
or
enter
push
fbstp
sti
xchg
lods
xchg
sbb
das
nop
push
cmpsb
push
cmp
sti
xchg
sub
dec
cmpsl
inc
inc
fnstenv
out
adc
add
fld
cmp
mov
call
pop
mov
sub
adc
pop
inc
xlat
dec
pop
mov
pop
mulb
lods
jecxz
fdivrp
lcall
xor
push
pusha
lds
jne
pop
cmp
mov
pop
repnz
aad
add
xchg
loopne
mov
sub
subl
and
push
or
pop
jae
pop
mov
and
cmpsl
adc
mov
jb
int3
sbb
mov
sbb
xchg
outsb
lcall
notl
dec
mov
push
adc
mov
fnstsw
das
les
push
je
in
imul
test
outsb
or
fcmovne
gs
rcrb
adc
dec
jge
push
cmp
cmc
addr16
es
and
int3
push
aad
mov
sub
aam
rcrb
in
lret
int3
jne
out
and
fucomp
aaa
das
push
xlat
push
stos
jns
cmp
push
fwait
out
aam
lock
insb
inc
ficompl
xchg
lcall
add
mov
imul
adc
lds
jns
mov
fistl
lods
add
test
mov
push
pushl
shrl
in
cmp
pop
popf
dec
mov
test
jmp
sub
mov
loop
popa
lret
mov
push
mov
mov
pop
add
mov
push
cmpsl
cld
mov
xchg
fnsave
xor
inc
and
das
push
push
repz
fisttps
cmp
aaa
and
inc
mov
add
sar
xchg
add
jl
sarl
imul
cmpw
into
aaa
xchg
pop
pslld
lret
int
jg
jecxz
dec
out
call
pushf
es
in
inc
enter
shrl
pop
ret
into
popa
sbb
pop
pop
jl
mov
dec
mov
xchg
adc
dec
lcall
and
and
jnp
jmp
mov
fadds
test
pop
pop
jge
inc
pop
cmp
imul
pop
sbbb
cltd
mov
jg
mov
loope
stos
pushf
pop
outsb
add
fdivl
lods
cmpsl
pusha
or
mov
sbb
cmp
daa
xchg
imul
jp
into
jp
ss
inc
fcomps
pop
or
adc
stc
lods
fdivrl
cmp
stos
fnstsw
in
push
xor
cli
dec
sub
or
scas
out
sti
sbb
frstor
mov
lock
loopne
inc
push
push
jg
or
shrl
aas
push
mul
test
dec
inc
jmp
dec
lds
loopne
mov
ja
push
ret
adc
add
ljmpw
pop
shll
adc
ss
xor
add
insl
xor
pop
in
test
mov
mov
sub
jl
jns
lcall
pop
cli
mov
jno
inc
lret
add
jg
shl
mov
xlat
cmp
scas
imul
jmp
pusha
lret
hlt
call
dec
leave
push
pop
in
inc
repz
xchg
xor
addr16
addr16
adc
pop
push
aam
mov
ljmp
cltd
mov
shrl
mov
xor
cmp
cld
aas
sbb
jnp
cmp
jb
inc
fstpl
aad
xchg
ret
push
subl
cmp
cmp
and
inc
mov
out
adc
xchg
sub
xchg
xchg
and
in
out
and
jg
push
clc
inc
and
pop
push
arpl
cmpsb
mov
stc
jae
lds
dec
mov
add
dec
stos
das
cwtl
aad
push
jp
int3
inc
sbbl
xlat
pop
pop
dec
in
das
sbb
lock
mov
jo
mov
mov
pop
xchg
stos
repz
scas
xor
sbb
test
fucom
mov
mov
cmp
xchg
xchg
pushf
inc
add
nop
scas
mov
inc
rolb
fdivrs
mov
int
out
push
in
popf
or
cs
xlat
sub
bnd
gs
sub
add
ret
idiv
push
xlat
add
call
stos
push
roll
sub
push
ja
maskmovq
testl
adc
xor
xor
cmpsl
jne
aad
xor
lea
shl
and
fdivrs
lret
push
sbb
outsl
push
and
lea
lahf
xchg
rorl
lret
push
adc
xor
mov
jmp
pop
sti
scas
pop
loopne
mov
fs
test
sahf
pushf
sti
xchg
into
mov
push
test
or
xor
lock
loop
mov
cmpsb
bnd
aas
jns
xchg
inc
lods
push
enter
mov
aad
int
arpl
or
pop
mov
jbe
sbb
aad
dec
cmpsl
arpl
pop
lret
lea
ror
xor
leave
xchg
shl
cmpsl
lods
push
aad
cmpsl
inc
mov
inc
es
in
outsb
and
aaa
xlat
outsb
imul
sub
xlat
gs
movsl
cmp
pop
xchg
in
negl
ja
cs
mov
sbb
je
mov
mov
das
or
sbb
sbb
js
pop
or
jecxz
negb
inc
nop
pop
sub
sub
dec
lds
shll
movsl
out
rol
shl
xlat
repnz
xor
cmc
shll
insb
xchg
hlt
jl
jmp
enter
fnsave
push
jle
cmp
jl
dec
imul
pop
test
adc
push
lcall
sbb
mov
fdivl
mov
les
mov
jle
push
and
adc
adc
jae
cwtl
and
push
insl
into
loope
imul
lret
adc
in
test
adc
jnp
mov
mov
movsl
push
mov
lea
popf
out
test
mov
int3
mov
mov
cmp
cli
sbb
aas
and
insb
in
testl
fstpt
mov
and
out
cmp
fdivrs
and
and
loop
inc
jno
or
rolb
ljmp
out
lods
les
test
mov
cli
mov
jmp
repz
sbb
mov
std
cmp
adc
ret
insl
sbb
popa
gs
lret
fcmovu
or
mov
add
leave
into
mov
xchg
xlat
mov
mov
fcoml
lahf
in
inc
popl
call
xor
pop
cmp
stos
pop
sbb
std
add
xchg
inc
rorb
outsl
sar
mov
scas
out
xchg
out
lret
testb
shlb
pop
push
and
icebp
hlt
dec
fwait
lcall
or
cwtl
shll
fwait
mov
pushf
fxch
lahf
es
cwtl
les
int
cmp
pop
inc
xchg
lods
dec
sub
sub
pop
insl
aad
jbe
arpl
loopne
test
clc
scas
dec
mov
and
mov
div
push
push
aas
cmp
sub
or
js
out
sti
mov
loop
cmpsl
sbb
xchg
pushf
cmc
jnp
xor
clc
aad
movsb
push
sbb
mov
dec
rcll
iret
cmp
in
cwtl
xchg
in
adc
xchg
jg
jle
in
out
mov
mov
pushf
xchg
stos
loope
dec
aam
mov
addl
cmpsb
addb
lods
scas
push
in
test
xchg
lods
xchg
das
cmp
mov
sbb
lret
push
lds
ljmp
pop
xchg
sub
mov
shll
jmp
cmpsb
call
inc
adc
enter
push
shrl
call
call
adc
popf
pop
cmpsl
dec
mov
or
pop
out
cmpsb
lods
sahf
outsb
or
mov
daa
mov
mov
sahf
add
das
cmp
dec
jne
shll
inc
fisttpl
push
and
test
pusha
cli
cmpsl
scas
push
in
loopne
jb
outsb
and
loope
sbb
add
xorl
mov
pop
divl
add
mov
mov
aas
cli
mov
xchg
ret
cmp
icebp
in
repz
jne
in
out
jb
faddl
call
mov
cmpsb
mov
add
aad
jl
sbb
iret
data16
mov
ja
daa
ss
add
sub
adc
ds
mov
xor
rcl
adc
jno
imul
int
shlb
mov
and
fs
pop
popa
push
popf
pusha
xor
jne
xchg
push
mov
icebp
cmpsb
movb
jmp
cmp
mov
inc
sar
add
sub
push
pmulhw
mov
inc
push
push
cmc
cmp
and
lea
popf
mov
outsl
jns
sarl
sarl
imul
sub
pusha
push
mov
add
sub
mov
pop
sarl
inc
sub
mov
or
pop
sbb
in
sub
push
xchg
mov
mov
stos
jecxz
and
add
data16
and
push
xchg
jmp
cld
out
imul
mov
add
xchg
jbe
dec
sub
fisttps
ds
cmp
add
xor
and
dec
sbb
or
cwtl
mov
mov
add
es
cmp
mov
test
out
add
stc
xor
hlt
dec
ficompl
scas
inc
adc
xchg
mov
dec
jecxz
mov
fldt
popf
sub
sbb
fsubrl
fs
push
cmp
mov
xchg
je
push
cmpsb
mov
xor
fnsave
mov
xchg
dec
pop
fnstenv
insl
sbb
loopne
cmp
lock
lods
xor
push
out
inc
push
xor
test
or
movsl
push
jmp
call
or
popa
mov
call
and
clc
dec
push
movsl
aam
xchg
testb
mov
ret
or
mov
and
mov
cmp
stos
pop
lcall
stos
mov
rcr
jb
jl
pop
xchg
sub
dec
cmp
aam
stos
pop
jbe
shlb
dec
or
jge
pop
mov
inc
cmp
shl
lret
pop
xor
push
js
out
daa
arpl
jmp
pop
jge
xchg
jno
pop
je
cmpsl
cld
testb
repnz
js
les
mov
mov
mov
adc
les
pop
imul
inc
pop
cld
rorl
dec
and
scas
jg
in
mov
in
xchg
push
mov
sub
and
pop
add
imul
mov
mov
jl
lods
sub
mov
push
lcall
sub
push
daa
inc
test
mov
sti
or
sub
pop
mov
fwait
popf
lods
mov
fisubs
setno
mov
mov
mov
dec
jecxz
push
nop
das
cmpsl
shr
dec
mov
sub
jle
xor
inc
bound
bound
lds
adc
pop
in
data16
xchg
inc
in
std
jb
sub
mov
loopne
adc
hlt
arpl
addr16
cmp
cmpsl
mov
dec
loop
nop
or
cmp
sahf
and
test
push
or
imul
xor
dec
ljmp
fcomi
cmp
push
cmpsl
sub
sub
fdivp
inc
dec
dec
stos
jp
sbb
push
adc
and
fstl
push
pop
cmpsl
in
add
scas
inc
arpl
mov
ret
pop
inc
pop
loop
jecxz
sbb
sub
mov
xor
or
pop
movsl
mov
mov
adc
das
sar
fucomp
das
in
insb
scas
adc
sub
sub
movsb
cmp
mov
jmp
lret
add
adc
xchg
test
testb
sub
pop
mov
mov
or
sbb
cmp
iret
rclb
ja
inc
repz
in
sub
inc
rcrb
mov
inc
mov
xor
lret
push
jle
mov
sahf
xor
lret
pop
les
iret
xor
pop
popf
mov
pop
testb
xchg
nop
inc
mov
out
xchg
pop
out
mov
cmp
lea
or
adc
push
sub
push
sub
dec
mov
dec
dec
mov
addr16
push
sbb
mov
cmp
or
pop
shrb
xchg
stos
push
fwait
mov
lret
lock
jmp
sarb
lret
sub
mov
jbe
inc
cmp
jecxz
xor
cmp
add
stc
or
jo
adc
movsb
inc
inc
xor
fcompl
outsb
lds
dec
insb
repz
imul
fstl
mov
lock
ror
sub
xchg
mov
xor
cmpsb
inc
xchg
mov
fldt
scas
and
mov
xchg
fcomps
mov
call
shrl
hlt
mov
sub
loop
rcl
mov
outsl
jnp
shll
dec
xchg
mov
jg
mov
add
in
jge
and
jo
aad
outsb
int
out
jbe
cmp
xor
xchg
push
xchg
inc
push
cmc
jnp
shlb
mov
pop
and
clc
testl
push
adc
inc
and
gs
add
jbe
scas
and
mov
xchg
adc
jmp
mov
sti
dec
scas
pop
mov
ja
push
sbb
xchg
mov
or
sub
and
or
mov
sahf
push
jmp
mov
mov
mov
ficomps
push
xor
aad
fwait
mov
int
sub
bound
mov
loop
aam
jns
or
call
dec
fistl
xchg
push
cld
int3
hlt
pop
ds
add
insb
dec
mov
out
lret
rorl
pusha
aam
shll
xchg
dec
test
mov
inc
cld
inc
and
cmp
inc
insb
lea
shlb
call
dec
movsb
sbb
aas
fists
mov
xor
and
and
xchg
test
push
shr
fnsave
cmp
out
add
cld
hlt
int3
xchg
sub
ljmp
iret
sti
inc
sti
shlb
pop
out
jnp
lret
mov
call
or
push
cli
mov
xchg
leave
mov
insb
adc
sbb
push
fisttps
inc
mov
pop
fs
jmp
sbb
sbb
mov
sbb
cmp
cmp
into
stc
xchg
aaa
sub
mov
pushf
xor
sbb
pop
adc
inc
sbb
mov
mov
iret
mov
enter
add
jnp
fdivs
mov
ds
push
ljmp
insb
mov
sbb
and
rcrb
dec
jmp
or
shl
and
and
inc
loope
in
test
cmovae
ds
lret
loope
fwait
ljmp
je
add
inc
jge
ss
test
ret
dec
daa
repz
andb
dec
mov
rcrb
cmc
cmpsb
jne
xor
xchg
loopne
pop
pop
add
pusha
addl
movsb
lods
mov
mov
pop
jl
pop
icebp
sbb
xchg
and
rclb
jp
fstpl
mov
loop
in
dec
lods
mov
loopne
int3
icebp
outsl
sub
adc
jecxz
es
or
xor
rclb
adc
lods
cltd
lods
pop
dec
jecxz
jge
adc
jb
or
lret
test
mov
lea
sarb
pop
rorl
jae
aam
or
pop
mov
popa
insl
sub
clc
ja
int3
mov
fs
pop
sbb
pop
push
cmp
xchg
jb
cmpsl
out
sub
push
das
mov
add
mov
cli
data16
and
mov
addr16
cwtl
push
pop
hlt
xchg
repnz
push
and
mov
mov
pop
fsubl
pusha
mov
mov
pop
push
andb
stos
scas
and
dec
xchg
das
add
mov
cmp
arpl
sub
iret
jno
sahf
sbbl
xor
push
cmp
loop
es
icebp
push
cmp
lods
pop
mov
scas
inc
aam
jge
inc
push
addr16
xor
mov
add
arpl
cmpsb
lds
js
stos
mov
cwtl
push
jnp
cmp
lock
dec
xchg
push
dec
mov
dec
loope
rorl
es
cld
jmp
xor
xchg
mov
decl
sbb
mov
mov
inc
push
data16
cltd
jo
pop
sub
add
jecxz
stos
push
enter
loopne
pushf
sbb
into
out
xor
insl
add
adc
or
mov
int
xor
call
or
out
and
dec
fisttpll
daa
mov
or
jg
adc
push
loopne
or
loope
mov
les
data16
or
sub
data16
lret
xchg
inc
rorl
ljmp
xor
fsubs
test
mov
or
clc
adc
repz
filds
lcall
push
out
adc
pop
inc
cltd
mov
jnp
mov
insl
jp
and
mov
xchg
hlt
fwait
jns
inc
lahf
loopne
mov
loopne
xor
mov
xchg
out
mov
jge
dec
shll
test
aaa
outsb
out
jg
pop
fbld
idivb
sub
insb
iret
adc
jg
dec
pop
lods
mov
push
xor
mov
cs
scas
out
dec
loopne
ficoms
stos
mov
xor
fsubl
pop
and
in
je
pop
mov
imul
and
mov
clts
std
aas
cmp
push
ret
jae
xor
mov
std
jle
stc
xchg
sbb
imul
bound
loope
aaa
into
push
push
out
push
mov
out
hlt
xor
cwtl
repz
in
ds
outsb
das
popf
mov
lss
mov
cmc
xchg
pop
and
inc
in
dec
push
sub
loopne
adc
adc
pop
repz
popf
cmp
jp
sub
sub
mov
repnz
es
lods
pop
sbb
lods
insl
cmp
mov
sti
mov
ret
xor
push
ret
lods
shll
sbb
nop
ret
int3
das
in
add
lods
cmp
insb
or
dec
pop
lret
mov
dec
xor
aaa
xchg
inc
fs
pop
icebp
xchg
pop
jno
dec
cmp
fnstenv
decb
sbb
xchg
and
int3
aas
dec
outsb
add
clc
mov
adc
mov
lods
jl
addr16
scas
inc
mov
movsb
cli
test
dec
scas
jl
lock
mov
imul
out
jnp
aaa
sub
xchg
sub
mov
lods
adc
pop
hlt
stc
mov
jnp
daa
inc
cmp
mov
in
scas
push
sub
scas
inc
push
jne
push
pop
enter
in
ss
sti
int3
arpl
sbb
mov
pusha
push
inc
repnz
xlat
mov
sub
out
nop
dec
shrb
push
cwtl
push
lds
sti
ljmp
fcomip
adc
andb
pop
mov
dec
push
push
sahf
jmp
mov
xchg
cwtl
adc
and
xor
mov
adc
lcall
and
mov
stos
inc
sbb
aas
leave
pusha
jno
int
ficomps
mov
add
lock
mov
ret
cmc
test
mov
popf
xchg
scas
into
mov
sarb
push
push
aas
test
dec
test
xor
and
xchg
xchg
sub
ja
or
push
test
in
mov
pop
fbstp
push
xchg
shrl
and
mov
mov
add
mov
sub
pop
sti
stos
inc
outsb
mov
leave
mov
bound
in
dec
andb
push
mov
cltd
jae
mov
push
cmp
pop
xorb
cltd
cld
ficomps
sbb
aam
mov
sbb
or
mov
mov
xor
sti
or
arpl
adc
push
mov
xchg
pop
ds
inc
cmp
das
rcrb
jge
dec
les
and
aad
shlb
push
test
test
rcl
add
lret
bound
jmp
bnd
movsb
je
push
and
aas
outsb
ja
lock
pop
and
ja
mov
jbe
ss
outsl
jo
subl
mov
inc
sbb
push
lods
inc
pop
xchg
nop
jae
and
sub
lret
cmp
test
or
lds
je
jno
cld
xchg
lds
sbb
xchg
fs
lret
inc
loope
int3
and
cmp
adc
push
in
mov
cltd
std
mov
add
and
fsubrs
shlb
aad
cmc
add
add
cli
mov
lret
xchg
sub
call
ficomps
add
mov
jmp
or
scas
inc
mov
daa
inc
mov
iret
xor
add
lods
inc
popa
fidivrs
hlt
dec
lock
xor
repz
jl
js
mov
clc
pop
xchg
sub
pushf
in
xchg
mov
sbb
loopne
popf
lods
inc
mov
adc
ss
stos
imul
xor
leave
mov
cli
inc
mov
ss
and
mov
cmp
mov
sub
xor
jmp
les
cmp
imul
lock
jg
mov
push
xor
or
dec
loop
testl
clc
mov
loop
pusha
push
inc
pop
inc
jge
stc
cmp
nop
cmp
adc
insb
jae,pt
jno
sub
sbb
stos
jns
negb
notl
dec
cmp
test
js
es
mov
and
ret
pop
or
test
jnp
shrl
cli
enter
lea
pop
cmpsl
xchg
mov
xor
imul
cli
sub
sub
mov
jge
pop
mov
xor
adc
js
push
push
mov
xor
add
addl
inc
jnp
dec
lods
inc
gs
hlt
loope
je
jbe
cmp
and
loopne
stos
mov
add
cmpsb
fcmovnu
xor
arpl
xor
jmp
xchg
jnp
fisubrl
decl
adc
andl
sbb
cltd
xor
insl
jmp
in
neg
pop
ret
or
mov
sbb
mov
add
pop
cmp
adc
jg
sub
inc
cmp
scas
jecxz
inc
sti
push
mov
cmp
stos
cmp
lds
cmp
mov
arpl
xchg
enter
lcall
add
aam
push
or
or
pop
loop
push
dec
mov
push
inc
leave
sidtl
or
fistpl
mov
lcall
jb
jmp
lahf
aam
ficompl
pop
call
and
stc
out
xchg
pop
in
xchg
xor
push
add
pop
adc
fucomip
and
inc
jbe
arpl
mov
jecxz
pop
mov
sub
dec
push
or
jl
push
xchg
outsb
cwtl
stos
outsl
in
out
test
outsb
aaa
hlt
arpl
fstps
mov
push
outsl
jae
push
jno
mov
clc
lea
scas
inc
sub
in
fwait
cmp
lret
jb
lea
and
notl
cwtl
in
and
add
mov
repnz
jno
adc
movsl
mov
testl
outsb
jp
mov
dec
push
sub
jge
enter
arpl
mov
ret
or
ret
jne
ss
sub
inc
sar
cmpsl
decl
in
std
xchg
push
sti
mov
adc
push
sbb
lds
sub
xchg
testb
or
fadds
dec
out
jb
fistl
jns
adc
faddp
hlt
daa
clc
ljmp
ret
loopne
in
sub
rcrb
mov
cli
hlt
push
fisubs
leave
and
sub
lret
adc
sarl
add
xor
pop
sbb
les
cmp
push
mov
jge
cmpsb
mov
push
cmp
pop
repnz
xchg
cwtl
or
pop
std
ljmp
and
inc
fs
cs
mov
push
mov
fnstsw
cmp
cmpsb
dec
rcrl
xchg
nop
jae
ficomps
xor
addr16
loopne
imul
add
stos
repnz
sub
hlt
fcoml
dec
pop
jg
out
jnp
push
xchg
adc
sbbb
ret
pushf
push
popf
int
cmc
mov
push
sbb
jns
out
cmp
sbb
mov
mov
mov
dec
add
rcl
mov
and
popa
mov
dec
push
mov
test
fimull
mulb
mov
test
dec
xchg
pop
xorl
pop
pusha
jbe
jmp
pop
xlat
jmp
pop
sub
test
scas
pop
cli
andl
gs
sub
push
xchg
xchg
sub
adc
dec
loop
stos
xchg
sbb
mov
sahf
jbe
popl
out
in
pop
pop
add
aam
fldcw
or
loope
pop
enter
ret
or
pop
fcomi
iret
data16
cmp
jmp
adc
xchg
lods
mov
xor
pop
pop
fs
mov
jge
stos
mov
aam
jge
push
cmc
add
push
popf
inc
and
fcompl
ja
dec
fs
imul
arpl
mov
mov
rcr
jg,pt
std
pop
test
shrl
jo
popa
repnz
test
cs
shl
mov
test
rcrl
inc
insl
mulb
lret
bound
mov
scas
jb
push
in
fs
xchg
int
cmp
or
inc
fistps
add
ja
xor
push
shrl
test
jne
jno
push
and
pop
xor
movsl
std
add
imul
add
xchg
cmp
repz
fmull
add
dec
and
in
dec
mov
mov
clc
shrl
inc
mov
inc
pushf
rol
and
pop
fidivrl
dec
or
mov
sub
aam
and
mov
sbb
adc
rol
test
ret
mov
inc
dec
add
pop
negb
inc
das
xchg
clc
add
sub
shl
cmp
ret
add
xchg
mov
fstpt
cwtl
mov
jnp
stos
and
mov
sar
pushf
test
subb
or
imul
pop
ret
cmp
aas
push
cmp
cmp
add
popa
and
cmp
dec
or
int
mov
push
sub
jb
xchg
movsl
loop
cmp
mov
fsubr
push
notb
mov
mov
mov
mov
out
inc
xchg
lahf
shrl
mov
insl
hlt
xor
xor
xor
cli
and
outsb
or
and
daa
test
aad
std
or
lods
and
and
push
clc
nop
jl
aam
pop
scas
into
cmp
jle
xor
aas
adc
mov
push
pop
jns
mov
lds
inc
cmpps
into
gs
adc
loopne
aaa
mov
cmpl
cwtl
call
or
inc
mov
repz
sbb
cmp
push
jge
iret
jle
xor
je
mov
mov
mov
mov
push
cmpsb
mov
mov
add
sub
pop
repz
in
push
sti
inc
jns
in
push
scas
mov
ss
add
test
dec
bound
add
mov
int3
mov
jmp
rcrl
inc
adc
int3
pop
sar
scas
int
xchg
pop
int3
out
push
push
popf
insb
push
ljmp
inc
sbb
xor
pushf
in
test
xchg
test
test
or
mov
xchg
dec
daa
cmp
mov
cwtl
adc
xchg
add
jno
in
pop
push
aas
jmp
test
lods
add
cmp
push
mov
insb
xor
iret
es
pop
stos
in
mov
scas
call
out
lds
pop
cmp
push
sub
not
mov
pop
addr16
popf
inc
xchg
ror
pop
mov
or
je
sarl
or
xchg
dec
hlt
dec
push
mov
les
add
mov
ret
cmpsb
jne
and
push
push
adc
pop
lret
fdivrs
and
jae
cmp
xor
jge
and
pop
repz
insb
mov
out
inc
fwait
incl
and
cltd
or
insb
mov
aad
in
mov
das
insl
lahf
xchg
push
in
push
sub
mov
sub
mov
sbb
rol
lock
mov
cmp
mov
test
xor
and
enter
and
jmp
ds
stos
in
out
int
xor
xor
mov
push
inc
ret
jle
leave
or
dec
xchg
xor
mov
sarb
push
repnz
cmp
push
pop
cwtl
test
sbb
gs
jne
je
pop
mov
outsb
jns
test
jnp
test
arpl
add
mov
out
stos
ficoms
scas
cltd
loopne
ficoml
mov
mov
aas
pop
ficomps
pop
das
dec
fidivs
or
mov
sbb
sbb
lcall
dec
dec
aaa
dec
pusha
push
adc
lret
xor
fnsave
cmp
push
daa
cmpb
add
sub
imull
icebp
add
cmpsb
cmp
in
ret
aas
out
cmp
xchg
inc
frstor
mov
fadds
sub
pop
into
lock
cmp
loope
cmp
out
sbb
and
jp
cld
xchg
inc
adc
dec
pusha
inc
repz
mov
xchg
or
shrb
inc
lret
push
cmp
imul
bound
add
mov
ret
fwait
lods
sbb
mov
mul
sbb
and
enter
movsl
cmp
add
aad
sti
leave
jmp
mov
ljmp
addr16
insl
sahf
popa
fs
inc
inc
or
shrl
inc
push
leave
inc
mov
iret
loope
cs
mov
jb
pop
aam
xchg
and
xor
dec
sahf
mov
insb
sbb
dec
and
cmp
bnd
jecxz
repnz
push
mov
pop
xchg
sarb
push
and
inc
pop
scas
into
int3
jo
mov
shlb
popa
rcrb
mov
cmpl
xchg
add
mov
ror
out
sbb
fnstcw
clc
pop
cmp
xlat
lret
jns
dec
mov
aas
mov
xchg
nop
outsl
add
and
fmul
lds
push
dec
add
pop
mov
ret
ret
lahf
in
inc
mov
push
xchg
cmp
push
jno
cmp
in
or
sub
ret
sub
clc
xchg
into
push
mov
lea
or
aaa
lret
and
jne
mov
movsl
xchg
enter
sahf
movsl
adc
adc
dec
cmp
mov
enter
jbe
cmpsb
std
notb
adc
out
ja
insb
pop
add
mov
mov
sbb
pop
dec
xor
hlt
addr16
addb
push
sub
pop
pop
dec
xchg
mov
jmp
cmpsb
add
movsl
popf
adc
cmp
sbb
cwtl
push
and
mov
xorl
shlb
in
test
insl
mov
aas
cmpsb
xchg
push
pusha
inc
loopne
mulb
outsb
jbe
mov
ficoml
xor
push
icebp
push
pop
dec
mov
xor
lret
test
mov
mov
outsb
sub
stos
daa
ljmp
imul
popa
cmp
xchg
mov
pushf
rclw
das
mov
pop
lods
mov
out
bound
insb
leave
das
mov
push
add
and
add
xor
lds
sub
out
jmp
mov
dec
push
mov
stc
clc
test
aam
sub
dec
fbld
mov
das
push
mov
sbb
daa
ret
adc
sahf
lret
shlb
test
movsb
jle
imul
je
aas
into
adc
sub
sbb
push
lock
icebp
scas
daa
or
test
arpl
sbb
aad
sub
es
js
pop
pop
mov
jo
ja
dec
cld
cmpsb
insb
inc
xchg
jge
ret
push
dec
loopne
lock
sbb
cltd
xacquire
push
add
rorb
add
jo
dec
into
lods
jne
mov
xchg
pop
xor
xchg
jbe
stc
test
jmp
push
mov
mov
pop
cwtl
je
testb
das
pop
rcrl
aam
mov
shrl
sbb
jbe
sub
xchg
jo
fsubrl
clflush
stos
push
jge
dec
pop
lds
mov
shrl
cli
or
sbb
fsubrl
push
jecxz
sub
lret
dec
sbb
and
inc
stc
inc
fisubs
ds
popa
and
arpl
insl
setnp
or
dec
imul
jnp
push
ret
jmp
cmpsl
xlat
out
add
test
cmp
mov
sub
xor
jl
inc
mov
mov
xor
add
aam
insl
cmp
xor
mov
sti
or
aad
jbe
jns
adc
add
testl
nop
inc
cltd
dec
sub
stos
xlat
mov
mov
jl
lahf
lcall
imul
ret
outsl
or
jnp
lret
sub
scas
rorl
out
arpl
testl
push
sub
add
enter
scas
fs
mov
pop
arpl
pop
xchg
add
mov
mov
insl
sbb
cli
sub
sub
shrb
xor
imul
fldt
int3
ret
sub
imul
sub
add
dec
fsubl
loopne
add
lret
addr16
shll
xchg
inc
pop
lds
and
jp
loop
cmp
movsb
cmp
into
pushf
les
adc
sbb
jle
fldl
push
adc
xor
dec
add
in
mov
push
loop
adc
xchg
mov
xchg
jmp
fisubl
jne
adc
and
mov
in
sti
push
xor
das
imul
sarb
mov
hlt
jp
sar
add
bound
sbb
pop
les
cmp
jp
hlt
stos
jno
aas
scas
sbb
or
fdiv
mov
fwait
stos
jmp
pop
adc
in
cmp
push
cs
pop
js
xchg
push
shl
jl
pusha
lods
mov
sbb
out
xchg
inc
jp
dec
mov
xchg
dec
sbb
push
xchg
cmp
lock
std
inc
ret
mov
push
inc
jnp
incl
in
push
loopne
inc
mov
xchg
rol
sbb
lods
lds
xor
sbbb
or
or
mov
jge
or
push
pusha
jne
mov
xor
cmp
push
cs
sbb
loope
test
dec
loopne
lods
add
lret
push
rorb
adc
xchg
mov
push
mov
imulb
jmp
fs
lahf
jge
inc
sub
and
cld
inc
push
xor
push
jne
push
gs
xchg
test
mov
xorb
pushw
mov
outsb
pop
imul
enter
inc
in
jae
les
shlb
add
mov
xchg
lea
xchg
ljmp
cmp
stc
popf
xchg
add
jmp
insb
and
mov
or
ret
mov
inc
insb
jbe
stos
fnstcw
pop
push
mov
jae
fsubl
xchg
mov
fnstenv
shl
jne
out
mov
mov
ja
pop
and
jnp
das
push
mov
add
cmp
xchg
dec
pop
loope
xor
pusha
outsl
fildll
mov
push
fmull
xor
xchg
ja
xchg
sub
ficoml
stos
fwait
rcr
xor
sti
sbb
lret
daa
ret
push
jge
push
neg
repnz
adc
cs
pop
ret
dec
sarb
shll
int3
add
into
xchg
imul
mov
lds
xchg
icebp
int
jl
inc
roll
xor
ja
shr
rol
test
ds
divps
scas
insb
push
out
lahf
jmp
aam
xor
xchg
movsb
popa
sahf
cli
fiaddl
loope
inc
mov
call
adcb
cltd
mov
cs
scas
xor
es
scas
gs
scas
nop
xchg
clc
movsl
push
dec
out
lds
sub
insl
sub
xor
hlt
jp
adcb
jb
cld
push
push
and
sti
fbld
and
mov
cmpsl
mov
xchg
and
mov
test
inc
add
jae
dec
sarb
jo
sbb
out
movsb
pushf
push
cmpsl
out
faddl
mov
xchg
adc
imul
shlb
push
ret
sub
or
mov
shrb
shrb
ret
xchg
cmp
jne
out
rclb
dec
mov
add
sarl
ljmp
mov
int
push
add
dec
xchg
push
out
inc
sub
repz
cwtl
cld
sbb
in
repnz
fs
stos
cmp
add
incb
ret
int3
jmp
ret
sbb
sahf
and
lods
mov
cmpb
rorb
mov
cmp
add
pop
mov
mov
jns
jle
mov
ljmp
leave
aam
addr16
and
in
lods
mov
pop
bnd
push
jg
jns
les
out
fists
mov
mov
jmp
inc
insb
in
aas
lods
mov
gs
push
adc
cmp
nop
scas
push
not
cmp
pop
cmp
xor
stos
mov
test
adcb
sbb
aas
dec
arpl
xchg
dec
scas
inc
in
int3
insl
inc
popa
add
xor
add
lahf
pop
lock
mov
fmulp
dec
inc
inc
in
les
dec
or
mov
push
clc
sbb
sbbl
mov
ret
adcl
aaa
push
popa
out
adc
xchg
adc
ret
sub
add
dec
repz
xor
sbb
mov
jb
ds
inc
xor
lret
jle
push
jmp
mov
popf
stos
dec
imul
mov
jge
push
adc
jl
sub
jp
icebp
sub
lret
sub
loop
mov
mov
lds
insb
popf
cmpsl
cmp
into
es
cli
dec
add
push
cmpsl
sub
or
sbb
pop
mov
jmp
mov
pop
outsb
dec
sbb
push
rcrl
nop
stos
mov
jg
shrb
mov
loop
push
ljmp
call
loopne
outsb
dec
test
repnz
inc
int3
adc
in
dec
cli
push
mov
jo
push
movsb
repnz
loop
push
roll
int
push
xchg
out
rolb
cmp
popa
fs
shlb
pop
xchg
sbb
mov
orl
jle
push
lcall
popa
clc
cmp
out
mov
lds
dec
cmp
sub
cmp
stos
sbb
lods
dec
lret
arpl
cmpsl
xchg
mov
xchg
sub
jle
mov
bound
ljmp
call
test
and
fdivs
jno
cmp
push
clc
or
xor
ret
jl
sarl
jge
jge
pop
outsb
or
call
imul
mov
bnd
pop
hlt
mov
shll
and
xor
push
dec
mov
stc
lods
dec
scas
test
movsb
movb
jg
mov
fidivs
in
fsubs
jae
mov
lea
adc
ss
jg
mov
aam
adcb
out
pushf
testl
dec
adc
insb
sahf
or
cltd
movsb
cmp
aas
lods
xchg
fwait
mov
mov
outsl
or
sti
xchg
shrb
nop
negl
pop
pop
cmc
test
in
push
mov
in
popa
aaa
dec
adc
je
add
popa
or
je
add
mov
int3
adc
push
add
inc
mov
sahf
ss
mov
mov
xor
std
aad
sub
xchg
xchg
pop
cs
orb
insl
inc
imul
pop
mov
mov
sbb
flds
inc
dec
mov
cmp
imul
cli
rcll
ss
inc
cltd
sub
addr16
and
ja
fiadds
ret
adc
lea
fldcw
and
sbb
inc
add
jg
int
data16
dec
movsl
popa
pop
ljmp
call
xchg
arpl
ja
pop
add
es
mov
and
push
cmpsl
push
vmwrite
popf
ret
jne
pop
pop
xchg
daa
out
das
cmpsb
in
aas
push
call
mov
dec
popa
cmp
pop
sahf
and
jnp
xorb
mov
out
dec
in
jbe
loop
pop
xchg
js
stc
imul
adc
dec
fistps
incb
xor
repnz
sbb
aas
dec
cmp
scas
jl
aas
cmp
cmp
dec
out
popf
pop
sub
sub
dec
scas
mov
push
test
sti
push
test
mov
dec
cmc
daa
outsl
or
inc
adc
mov
dec
in
fdivrl
bound
test
cld
xor
sti
bound
add
arpl
fimuls
cli
xchg
pop
mov
mov
add
push
cmc
aad
enter
out
fcoms
xor
sbb
test
xchg
or
mov
and
sub
sbb
push
mov
repz
mov
pop
jmp
pop
and
jp
push
sub
jbe
ffreep
sub
imul
aam
ds
inc
jo
dec
scas
xchg
outsl
cmp
adcb
sub
sti
insl
testl
pop
xchg
mov
mov
iret
cmp
inc
jmp
pop
jo
push
dec
mov
bound
test
dec
lret
jnp
pop
pop
aaa
mov
jmp
fwait
dec
pop
dec
inc
xchg
loope
stos
lds
add
inc
pop
lcall
in
inc
loope
ffree
dec
lret
fadd
insb
pop
adc
xchg
call
and
dec
aad
shll
scas
mov
loopne
testl
aaa
adc
sbb
mov
cmp
test
xor
adc
xchg
std
je
jg
inc
pop
test
push
inc
ret
xchg
xchg
lcall
or
jmp
int
or
aaa
mov
bound
jmp
sub
clc
cli
jl
xchg
cmpsl
add
and
jo
sbb
push
and
adc
jp
fs
jecxz
sbb
mov
push
lret
adc
daa
pusha
test
test
imul
in
xorl
clc
mov
cwtl
pop
movsb
inc
enter
lds
lret
nop
aaa
xor
adc
adc
inc
or
popa
adc
lds
xchg
adcl
xor
scas
pop
fldt
incb
popa
cmp
in
xor
adc
adc
ja
movsb
mov
mov
xor
mov
stos
add
scas
insb
xor
inc
add
sbbb
or
negb
sub
outsb
inc
call
insb
icebp
sti
or
rcrb
dec
lds
shrl
repz
insl
mov
mov
insb
xchg
test
js
xchg
pop
lds
adc
or
mov
push
adc
pop
push
xor
xchg
test
mov
aad
xor
xchg
aad
mov
mov
and
mov
jmp
and
ficompl
mov
ret
and
jecxz
xchg
out
sbb
scas
or
cmp
add
push
mov
xchg
xor
mov
xlat
sub
cmp
cli
test
aam
push
in
les
xchg
xchg
jae
jae
cltd
dec
or
cld
cmc
mov
fldt
int3
and
mov
xchg
mov
into
out
test
loopne
mov
es
and
inc
and
sbb
mov
or
fwait
and
iret
out
popf
push
mov
stc
cmp
lret
jmp
cmp
pusha
mov
fdivr
push
xor
ss
scas
push
loopne
xchg
sub
adc
sub
repz
cwtl
adc
in
xchg
sub
out
sub
dec
pop
jne
adc
test
ss
cmp
pop
or
jmp
repnz
fs
jo
cmp
je
outsb
pop
mov
insl
and
icebp
jmp
roll
test
scas
and
imul
inc
hlt
aam
icebp
js
loop
call
pushf
and
mov
and
push
mov
push
mov
dec
mov
and
das
mov
sub
mov
scas
inc
sub
out
jns
cli
and
scas
je
adc
push
leave
adc
push
in
lods
dec
ja
cmp
xor
sub
pop
lea
out
lret
push
shufps
jne
cmp
mov
movsb
call
in
cmpsb
out
bound
pop
leave
stos
add
daa
push
and
dec
imul
call
aad
lds
pop
les
mov
cmp
jae
push
jge
jg
mov
call
data16
push
ds
lds
test
push
lahf
test
fwait
cli
aaa
xchg
stos
stc
mov
bnd
sbb
mov
jle
sub
xor
cli
test
cmp
out
prefetcht0
add
add
test
jae
pushf
cmp
jl
imul
fidivl
je
ror
out
and
cmp
and
pop
mov
jmp
enter
mov
popa
push
arpl
jno
ret
fld
jb
mov
pop
clc
inc
call
mov
rcl
inc
push
cmp
je
cmp
subb
lock
mov
mov
jno
jb
iret
aaa
inc
jnp
lods
aad
push
or
pop
jle
das
in
push
push
cwtl
daa
movsl
inc
mov
jl
sub
jne
test
lahf
outsl
push
mov
repz
lods
call
rcrl
mov
fadds
test
test
rol
pop
sarb
lret
jae
or
shlb
jecxz
adc
loopne
sbbb
or
mov
sub
or
pop
jge
sbb
or
inc
dec
adc
data16
sbb
cmp
and
rcrb
insl
pop
lods
shl
sub
mov
push
mov
pop
imulb
and
xor
into
mov
imul
xor
stc
jl
jmp
in
jle
stc
or
jbe
std
adc
push
sti
xchg
mov
mov
fcompl
mov
sbb
outsl
mov
add
fimull
outsb
out
mov
push
fidivrs
dec
clc
aam
test
or
xchg
gs
inc
int3
data16
xchg
mov
rcl
push
jecxz
dec
adc
inc
push
popa
lahf
push
dec
sahf
scas
dec
in
jmp
mov
cmp
fwait
scas
jnp
pushf
scas
andl
outsl
pop
sub
fstpl
aad
repnz
or
out
xchg
push
lahf
enter
cmp
mov
mov
and
inc
mov
shll
mov
stos
xor
fnstenv
lret
add
push
mov
ret
std
and
sub
popf
xchg
jle
stos
sbb
xor
cmp
popf
shl
pop
lds
repz
pop
dec
dec
sub
lods
loopne
inc
adc
adc
add
mov
movsl
outsb
push
mov
inc
cli
je
xchg
smsw
outsb
sub
movsb
xchg
es
jne
scas
jp
and
add
pop
aaa
decb
popa
cmp
imul
decl
scas
ljmp
pushf
push
lahf
inc
push
xor
enter
jns
inc
repnz
lods
jl
add
jnp
mov
test
cld
repnz
loop
in
jge
add
filds
cmp
add
rolb
lcall
stos
addr16
lods
xchg
sbb
stos
popa
dec
lods
jmp
cmp
and
inc
fcoml
outsb
lret
fiadds
aam
pop
dec
iret
mov
push
imul
push
xchg
xchg
addb
cltd
daa
ret
fstpl
cmpsb
imul
pusha
mov
les
xchg
jl
pop
mov
jo
outsb
pop
out
nop
outsb
add
and
das
xabort
adc
leave
mov
adcl
cs
jge
enter
xchg
ss
pop
ret
mov
aas
jle
ds
mov
ljmp
cld
mov
pop
add
out
pushf
loop
mov
test
pop
clc
xchg
out
pushf
pushf
loope
std
loopne
jecxz
repz
leave
cmp
xlat
dec
in
or
inc
adc
cmc
or
insb
push
xor
lea
cmp
insl
cli
xchg
stos
mov
cwtl
insb
pop
dec
mov
in
es
dec
std
pop
sub
std
pop
cmp
push
leave
jecxz
fimull
mull
cmpsl
shrl
jnp
fdivl
fiadds
in
std
popf
xor
pop
xchg
bound
out
cld
test
movsb
pushf
shrl
ja
std
or
out
jecxz
jg
dec
gs
jle
add
and
outsl
insb
mov
loope
push
lea
jne
adc
fwait
mov
inc
fldt
push
fsubr
cmp
lds
movsl
cs
out
shrl
std
hlt
scas
inc
pop
cmp
push
inc
jecxz
xchg
adc
dec
xchg
and
dec
scas
inc
gs
js
jae
stos
and
mov
mov
mov
or
jno
ret
push
adc
xor
sub
cli
imul
mov
or
mov
pop
lret
es
cmpsl
aas
sbb
mov
push
cli
inc
cld
mov
test
mov
outsl
or
adc
dec
dec
movhps
ret
mov
pop
or
inc
inc
mov
in
fldenv
mov
lcall
cmp
lea
bound
mov
into
push
fdiv
aaa
loop
lods
mov
pop
mov
sbb
outsl
mov
lret
dec
jecxz
imul
stos
iret
sbb
mov
xor
pop
into
push
repnz
rcrl
push
movsl
inc
xor
or
mov
xchg
mov
outsb
mov
ljmp
into
inc
add
xchg
arpl
stos
es
mov
ret
cli
fwait
xchg
addr16
ljmp
insb
loop
or
int
xor
fdivrl
mov
hlt
inc
push
mov
xchg
push
inc
lds
mov
ret
stos
repnz
xchg
pop
push
jmp
and
sbb
jns
pop
fsubs
xchg
andb
movsl
sti
je
xchg
cmpsb
sbb
push
jle
push
aam
lahf
add
add
outsb
loope
sbb
lock
push
xor
xchg
outsb
inc
push
xchg
out
cmp
adc
ds
addl
pop
push
or
dec
xor
sbb
das
fsubrp
dec
fcoml
push
ja
cmpsb
arpl
pushf
cli
mov
push
orb
push
lods
test
inc
cmpsl
dec
stos
dec
sub
mov
loopne
xor
repnz
hlt
cli
dec
mov
mov
fisttpl
sbb
pop
push
xor
mov
aaa
cld
xchg
mov
pop
idivb
addr16
xchg
pop
call
push
lcall
cwtl
dec
outsl
mov
cmp
jg
inc
lret
arpl
scas
das
pop
adc
dec
popf
push
pop
sbb
jno
sub
lock
popa
xchg
xchg
shufps
out
xchg
push
pop
push
xchg
cwtl
out
inc
ja
orb
stc
pop
loope
rcrb
pop
jbe
pop
inc
inc
cmpsl
and
subb
fwait
mov
mov
sahf
sub
adc
sbb
int3
jne
xor
out
mov
pop
push
fs
outsb
sbb
sub
mov
adc
loop
push
sub
xchg
ds
bound
and
mov
push
xchg
stos
int
je
jns
repz
and
push
xchg
sub
mov
int
pop
scas
sub
sub
stos
inc
sbb
adc
leave
pusha
lcall
je
ss
push
in
ja
in
neg
out
push
outsb
roll
cld
inc
shl
adc
lahf
shlb
push
in
ficoms
and
push
sbb
adcb
scas
push
fistpl
pop
mov
das
int3
lret
pop
mov
mov
cmp
jp
je
jnp
in
add
out
mov
sbb
outsb
adc
push
insl
xor
cmpsb
int
fsubs
push
jns
sti
nopl
xor
mov
dec
jbe
int
scas
pop
das
mov
sub
mov
dec
fldenv
dec
fwait
sub
out
mov
ds
jo
and
outsb
xlat
mov
or
out
xchg
call
and
cmc
in
jno
addr16
jg
xchg
test
icebp
lods
clc
inc
test
stc
inc
pushf
int3
jle
es
xchg
push
inc
lret
in
adc
push
dec
dec
cmp
loopne
and
out
mov
inc
incl
push
jno
arpl
xchg
and
push
notl
push
jne
mov
popa
xchg
add
hlt
or
add
aaa
jno
and
mov
test
and
push
xchg
out
bound
mov
push
paddd
out
push
lock
and
cmp
pop
insb
jle
js
sbb
ret
xor
imul
dec
pop
test
arpl
insl
jae
movsl
div
scas
call
mov
mov
popa
mov
insb
js
mov
mov
dec
sbb
mov
mov
sub
out
ja
fwait
pop
pop
mov
or
lods
mov
stc
ret
in
out
sahf
pop
inc
cmpsl
and
scas
mov
push
psrlw
jnp
jp
jbe
aam
arpl
add
ja
and
test
bswap
das
outsb
cmpb
jne
in
js
sbb
nop
xchg
and
movsb
or
pop
aas
xchg
xor
arpl
xor
xchg
outsb
xchg
aas
fxch
mov
xchg
push
subl
xchg
decl
cwtl
jecxz
fidivrs
jbe
movsb
xchg
test
push
je
lea
sub
outsl
sahf
adc
dec
jge
leave
mov
mov
and
fs
xchg
cmc
loope
mov
cmpsl
dec
pushf
rcrl
sarl
test
cmp
cmpsl
dec
mov
aas
call
push
int3
es
stos
in
sbb
push
movsl
xchg
pop
cwtl
popa
cmp
enter
mov
pop
ret
push
add
push
negb
add
sbb
jbe
push
js
push
or
fbld
dec
minps
mov
mov
ret
sub
je
movsl
cmp
mov
jb
andb
sbb
xchg
cmp
clc
cmp
cld
jmp
sahf
gs
jmp
and
jbe
mov
push
mov
jge
dec
sub
adc
inc
sub
inc
pop
add
into
mov
sbb
cwtl
inc
xlat
lret
pop
sbb
idivb
cmp
stos
addl
iret
pop
out
push
mov
fdivs
sti
cmp
sub
std
or
lea
aaa
push
shrl
adc
cwtl
ds
adc
mov
aad
rorl
orb
push
push
outsl
xor
xchg
and
push
sub
inc
mov
adc
mov
xor
xchg
lods
or
mov
push
push
xchg
repz
daa
mov
dec
loopne
cmpsl
adc
xchg
jl
cs
pop
dec
ljmp
stos
in
xchg
mov
int
fwait
push
inc
cmp
mov
sbb
pusha
push
popf
mov
jne
xchg
mov
cld
cmp
fisttpll
mov
cmp
sbb
mov
addr16
lods
jns
pop
jne
shrb
fnstenv
dec
jne
pushf
or
cmp
stos
add
inc
adc
xor
adc
cmpl
or
aaa
push
lcall
xchg
sub
xchg
call
push
cltd
ja
fsub
cmp
inc
or
add
jno
dec
jecxz
aam
cmpsb
push
inc
cmp
mov
andl
add
sub
sti
into
dec
sub
call
or
jmp
xorb
push
roll
enter
and
in
sub
push
mov
dec
xchg
pop
leave
es
push
out
pop
ja
mov
test
pop
lods
adcl
ficoms
cmp
sub
pop
add
popa
xchg
orl
jmp
test
dec
xor
mov
pusha
addr16
push
lret
stc
push
mov
jecxz
pop
xlat
and
idivb
and
test
mov
sub
sub
adc
lds
push
pop
mov
pop
lods
mov
and
jns
adc
mov
pop
xor
mov
call
adc
aaa
mov
data16
pop
movsb
mov
xchg
ror
bnd
lods
jo
push
push
push
mov
sarl
test
repz
pop
sub
and
xchg
test
jge
push
mov
loope
popa
or
mov
lods
pop
data16
mov
aad
sbb
add
sbb
cmpl
mov
roll
mov
push
push
pusha
lahf
lret
mov
int3
mov
inc
sbbl
ret
or
cmp
and
mov
popa
loop
jge
xor
sbb
pop
shll
pop
cmpsl
sarl
test
sub
fcoms
imul
scas
loop
sub
aas
std
jmp
jp
push
xchg
lods
fucompp
or
sub
repz
cs
inc
movsl
push
aad
inc
stos
sbbb
lods
cs
push
ss
pop
lock
push
movsl
out
pop
sub
jae
js
mulb
dec
pop
push
jbe
inc
inc
push
lock
mov
insb
push
inc
push
inc
cmp
addr16
push
lret
push
mov
test
rcrl
xor
pop
test
popf
push
xor
mov
dec
xchg
adc
xchg
adc
jns
mov
jb
xor
pop
fcom
dec
out
add
sub
and
cmpsl
loop
push
das
cwtl
call
sbb
mov
popa
mov
subb
jl
inc
add
push
andl
mov
mov
pop
and
add
addr16
int
movsb
out
out
mov
push
sub
scas
mov
insl
cld
push
pop
jnp
adc
popf
push
dec
icebp
mov
or
cmp
cmovbe
ret
ficomps
shrl
add
lock
or
xchg
cmpb
inc
inc
fsts
cwtl
mov
std
pusha
jnp
xor
push
inc
cmpb
out
popf
call
dec
loope
in
fwait
lods
sbb
test
xchg
and
cmp
negb
pminub
fcoms
lret
push
nop
add
dec
leave
mov
mov
sbb
hlt
shlb
dec
test
sbb
fisubrs
ss
lock
push
jl
jb
push
xchg
aas
inc
and
popa
sbb
cmp
push
inc
neg
cmp
pop
push
jb
test
es
mov
cmpsb
sub
push
cld
sbbb
pop
sub
xchg
adc
int3
arpl
cwtl
lods
fildl
fnstenv
adc
pop
iret
test
in
repz
jb
mov
pusha
xor
add
adcb
adc
jp
mov
scas
out
je,pn
jns
outsb
add
aad
mov
inc
and
push
mov
cld
mov
loope
pop
mov
mov
dec
lahf
leave
mov
mov
add
int
rcrl
jbe
call
stos
adc
push
cmpsl
cmp
pop
add
popf
fsubr
aas
xchg
mov
imul
cmp
xchg
sub
lea
xor
xor
inc
jne
or
add
mov
lcall
cmp
mov
and
into
cmp
ja
and
enter
pop
mov
gs
cmp
xchg
mov
adc
pop
adc
push
loopne
leave
loop
cmp
mov
sub
push
loope
lcall
into
mov
leave
lahf
or
xchg
push
push
mov
jo
jnp
repnz
pusha
dec
dec
mov
add
or
jno
pop
rclb
int3
mov
dec
aaa
adc
add
jg
add
leave
mov
cmpb
xchg
cli
cmp
cmp
sbb
mov
or
cld
inc
jbe
movsb
jnp
enter
testl
es
push
out
inc
in
testl
cmp
cmpl
scas
mov
xor
dec
mov
and
jmp
lock
nop
adc
pop
aas
xchg
das
jo
fdivrl
test
les
mov
sbb
and
fwait
mov
pminub
dec
iret
mov
test
rorb
jmp
sub
jmp
push
dec
push
adcl
cmp
icebp
xchg
movsl
sub
pop
mov
xorb
mov
jb
mov
out
ret
adcl
clc
pop
ss
notl
outsb
imul
inc
pop
jg
cmp
loop
js
add
cmp
cmp
cld
scas
xchg
push
scas
dec
rolb
movsb
lcall
daa
lods
pop
leave
and
xchg
jo
enter
aam
aad
cmpsb
cld
push
sbb
enter
sub
jo
aam
add
push
out
inc
je
cwtl
mov
and
xlat
aad
mulb
adc
dec
cmp
jo
pop
push
pop
mov
inc
loop
lret
mov
adc
lahf
lods
inc
adc
sbbl
mov
outsl
jns
add
fiadds
cmpsl
and
clc
mov
inc
mov
int3
mov
test
inc
popf
add
xchg
xchg
and
stos
lret
or
jo
or
mov
fwait
pusha
cld
popf
stos
andl
push
jbe
fisubrl
cmp
and
dec
scas
mov
pop
jnp
test
stos
lock
cmp
scas
ficomps
movsl
cltd
dec
call
loope
pop
addr16
cmpsl
adc
jnp
xchg
ss
lock
outsl
jle
and
int
outsl
push
sub
mov
xchg
push
pop
repz
pop
adc
jns
pushf
pop
mov
mov
dec
push
fsubrs
xchg
push
pop
daa
cmpsl
idivb
sahf
fdivl
jbe
mov
das
inc
or
stc
das
inc
iret
mov
sub
and
mov
rcll
jge
dec
push
jo
dec
cltd
inc
lahf
mov
and
dec
popa
inc
bound
test
inc
push
std
dec
sbb
ja
push
arpl
jge
or
ret
add
pop
stos
mov
jno
roll
push
mov
mov
fwait
cmpsl
sub
loop
push
jo
ljmp
pop
dec
adc
lods
push
xlat
and
and
lods
push
mov
loopne
cmp
cmp
outsb
insb
mov
and
push
xor
mov
push
dec
pop
inc
jne
mov
in
pop
popf
nop
movsb
mov
add
or
pop
repz
sub
push
sti
divl
xchg
push
inc
divl
insb
cwtl
adc
push
dec
imul
or
and
jno
leave
enter
imul
inc
sbb
clc
mov
xchg
lret
cmp
cld
mov
jmp
sahf
inc
fiaddl
mov
popa
cmp
leave
jmp
push
mov
and
and
sbb
je
test
inc
cli
jl
sti
fmulp
jno
fnstcw
lds
xchg
jg
pop
ljmp
imul
fnsave
hlt
mov
idiv
jbe
dec
dec
pop
movsb
clc
in
test
mov
jo
je
push
pcmpgtd
cmp
repz
add
jb
fldcw
adc
mull
fs
in
rorl
pop
int
sub
pop
lods
sub
andb
xchg
mov
adc
push
cli
mov
imulb
inc
int
xchg
test
aas
cwtl
push
mov
dec
push
out
mov
lret
pop
lods
jno
lea
cmp
xor
pop
movsb
jecxz
jns
xchg
stos
in
cmp
jecxz
mov
mov
sub
inc
popa
rcrb
insb
adc
in
in
cmp
js
lret
adc
xchg
mov
jecxz
mov
jnp
insl
imul
sbb
lahf
mov
imul
push
arpl
lock
outsb
ds
inc
push
roll
jecxz
repnz
add
cmp
ja
test
and
fs
xchg
fildll
test
mov
out
scas
in
rcrl
loopne
repnz
xorb
movsb
popa
mov
sub
lea
fisttpll
lret
and
lret
nop
es
pop
push
cltd
push
pop
sbb
xchg
mov
mov
js
sub
jle
mov
loope
lds
lods
scas
lahf
mov
lcall
xor
mov
insl
ficoml
lea
aaa
insl
jge
push
fsubr
jno
shl
jbe
pop
pushf
jl
cmpsb
xchg
fnstcw
or
fbld
outsb
test
xlat
push
in
sbb
rorl
std
mov
inc
fwait
mov
sbbb
in
int
sbb
ss
aad
ljmp
cmc
popa
ja
sbb
or
pop
ret
in
or
xchg
and
test
push
aas
in
xchg
aad
cltd
mov
dec
aam
push
ljmp
sbb
bound
xchg
sbb
gs
icebp
pop
shlb
pusha
movsb
gs
je
stos
out
call
fidivs
int3
mov
mulb
je
adc
mov
mov
xchg
shr
jns
icebp
inc
push
mov
clc
lcall
mov
stc
ret
xor
push
or
inc
jle
rorl
xlat
sub
push
loop
cmp
adc
push
jae
scas
add
lea
push
and
jecxz
jne
mov
rcrl
popf
pusha
popf
fimuls
das
das
xor
and
stc
sbb
bt
test
cmp
mov
pushf
jmp
push
loopne
les
sbb
adc
dec
sub
ja
in
fistps
cmp
ds
pop
mov
push
pop
imul
pop
add
mov
nop
lods
arpl
repz
lock
adc
pop
push
push
add
mov
fdivl
push
sbb
test
mov
sbbb
inc
and
outsl
jmp
inc
into
and
iret
popa
xor
cwtl
ds
iret
cltd
mov
mov
push
bound
jnp
add
fldl
dec
sahf
or
mov
stos
adc
pop
ljmp
and
xor
add
dec
inc
lcall
jg
stc
aad
pop
mov
fidivs
cmc
mov
fidivrs
push
adc
das
sbb
push
sub
and
imul
mov
mov
mov
clc
pushf
lock
sbb
fnstcw
mov
das
or
jnp
mov
adc
push
xor
les
xchg
sub
test
les
jno
in
imul
and
loopne
insl
clc
add
sub
jmp
cmpsl
mul
addr16
lods
pop
jbe
es
xchg
pop
push
adc
dec
sbb
push
mov
xchg
jnp
daa
push
push
add
ret
test
ljmp
mov
decb
pop
repnz
pop
or
add
scas
xchg
push
int3
xchg
add
fnstsw
mov
jo
pop
mov
add
addr16
insb
test
push
pop
cltd
mov
enter
adcl
flds
push
ljmp
orl
jno
jge
mov
adc
sbb
jbe
or
loopne
andb
mov
jne
sub
inc
jne
cmpsl
push
dec
xchg
push
push
je
inc
cmc
fdivs
mov
lock
test
repz
dec
and
ret
rol
insl
enter
add
fs
lea
loopne
inc
xchg
push
mov
scas
fisubl
fisubs
rclb
test
add
jge
lahf
jae
xchg
jno
or
addr16
push
cmpsl
imul
push
call
mov
xchg
mov
popf
add
sub
mov
sbb
or
call
cmp
sarl
lret
mov
sti
cmp
xor
popa
pop
mov
mov
inc
movsb
push
sub
jmp
cs
iret
xor
bnd
aad
inc
mov
fucomip
leave
xor
sub
jae
shrb
in
xlat
add
mov
jno
cmc
adc
popa
mov
ss
sti
jo
jne
or
fldl
cmpsb
jns
push
xchg
push
xor
add
push
loopne
roll
dec
mov
mov
xor
adc
pop
addr16
popa
pop
fstl
mov
and
sub
sub
add
test
push
adc
pop
xchg
loope
popf
xor
sbb
mov
sbb
lea
pop
insl
cmp
in
icebp
push
es
aam
xchg
in
shl
add
add
or
dec
sub
cmpsb
xchg
pop
lock
out
loopne
int
pusha
test
mov
mov
jmp
ret
call
fisttpl
lods
mov
jns
adc
dec
cmpsl
and
popf
daa
adc
loopne
jmp
dec
push
or
dec
stos
jbe
mov
mov
mov
ja
mov
fsts
sub
xor
add
or
sub
sub
fwait
fwait
out
int
dec
loope
popa
cmc
xchg
inc
dec
jmp
mov
add
xchg
pop
pop
add
add
mov
fbld
pop
popf
stos
add
and
jae
lods
and
das
test
adc
or
sub
and
insl
xchg
pop
outsb
xchg
aaa
scas
jecxz
push
push
mov
adc
lea
rclb
jnp
dec
xchg
mov
stc
imul
ja
es
std
cltd
mov
rcrl
std
adc
xor
lahf
push
sub
stc
jl
je
mov
xchg
stos
push
negl
arpl
out
push
add
aas
loopne
push
sbb
xchg
popa
sbb
and
push
jne
inc
mov
xorl
adc
pop
sahf
stos
and
sbb
xchg
bnd
enter
push
das
addr16
mov
aad
fwait
cmpsl
aaa
sti
lret
xlat
sbb
jb
mov
jns
fistpll
jb
sti
adc
leave
mov
movsb
sub
xchg
mov
cmpb
xor
aam
jns
stos
loope
aad
stos
xchg
push
cmpsl
mov
mov
dec
mov
cld
dec
mov
sbb
pop
jecxz
inc
sbb
ds
fcmove
cltd
insl
test
subb
imul
or
add
or
sub
sub
loope
add
clc
and
inc
mov
push
shrd
stos
jmp
pop
das
cmp
jno
dec
sub
lret
dec
sub
aas
out
outsl
mov
jle
leave
xchg
shrl
pop
ret
dec
nop
out
sahf
ret
inc
adc
dec
lahf
xor
dec
mov
jmp
inc
scas
mov
mov
pushf
jle
cld
aad
insl
and
sub
jmp
add
repz
test
inc
test
add
and
pop
push
in
scas
fidivrs
adc
push
pop
les
ss
adc
or
add
sbb
leave
jecxz
cmp
stos
in
out
add
and
add
cmovp
bound
sub
in
push
adc
fldcw
push
addr16
mov
cmp
enter
mov
sbb
pop
es
fstps
sahf
jecxz,pn
int3
sar
bound
push
jne
aaa
subb
test
pop
mov
dec
pop
adc
inc
inc
loop
sahf
xor
mov
pop
fsubs
sub
sahf
add
shrb
orb
and
arpl
jnp
push
out
jp
add
fs
inc
push
xchg
inc
addl
add
aaa
cs
out
mov
xchg
movsb
mov
cmp
mov
aam
lock
pop
pop
pop
repnz
test
dec
out
push
cltd
leave
rcl
push
loope
in
addr16
lahf
ss
in
and
enter
mov
out
mov
mov
push
push
popa
idivb
sub
test
stc
pop
mov
or
insl
aad
cmpsl
ja
jecxz
push
and
les
std
aas
arpl
mov
cmp
inc
or
aam
sub
sbb
xacquire
addl
stc
sbb
add
hlt
cmp
inc
test
pusha
lods
stos
inc
adc
aad
fdivrs
mov
mov
fcoms
popa
cmpsb
add
sti
xor
fldcw
cmpsb
mov
sbb
in
mov
movsb
out
out
or
jb
xor
push
call
xlat
push
push
push
mov
sti
shr
test
or
mov
es
add
jbe
mov
xchg
rcl
movsl
in
cltd
ljmp
addb
push
je
mov
fstpl
arpl
xor
pop
test
lret
mov
jno
fsubl
xor
lcall
add
test
stos
xchg
insl
push
out
push
dec
out
int3
mov
cmpsb
mov
sbb
dec
inc
push
xlat
sub
mov
fninit
js
rolb
push
push
faddp
pop
sbb
in
push
clc
iret
call
xorb
scas
in
jno
pop
rclb
fs
inc
push
sti
dec
jb
imul
push
cwtl
sub
gs
pop
out
sub
pop
lods
es
xor
lds
insl
sbb
lahf
sbb
dec
push
mov
movsl
in
mov
mov
adc
outsl
cmp
in
jmp
sbb
vmaxpd
sarb
int
adc
pop
and
xor
scas
insl
ds
mov
loope
lahf
rcll
mov
shll
dec
and
xlat
int
dec
inc
stos
in
push
mov
test
adc
enter
push
inc
mov
stc
jae
dec
mov
cmp
js
shl
xor
jae
hlt
xor
mov
sub
aaa
mov
cmp
cmp
out
or
lock
ljmp
jne
cmp
jg
rcrl
jl
hlt
xlat
sub
sbb
rorb
sub
cmp
hlt
jns
call
mov
pop
xor
dec
and
scas
data16
pushf
cld
js
mov
jmp
and
push
pop
icebp
test
stc
adc
lret
test
jno
push
jmp
lock
xor
inc
jb
mov
push
and
faddl
fstpt
xor
jecxz
xchg
stos
jecxz
fisubs
xchg
ror
jl
sti
jp
push
leave
push
cmpsl
ret
hlt
xchg
jo
sbb
pushf
insb
lcall
mov
cli
lea
dec
xchg
pushf
das
jb
sub
push
xchg
mov
cld
xchg
icebp
mov
sbb
out
mov
sbb
pusha
jmp
notb
in
or
cmp
int
adc
es
stos
jno
or
rorb
xchg
add
daa
pop
jle
jns
sbb
mov
cwtl
ret
call
imull
cmpl
push
test
ret
jle
inc
jp
or
cs
das
out
xor
jae
movzwl
mov
push
arpl
aad
or
xchg
sub
pop
ljmp
mov
mov
inc
add
mov
xchg
dec
pop
fwait
pop
lods
xchg
jb
movsb
pop
notb
sub
add
pop
and
inc
dec
aas
push
test
sbb
push
add
fistpll
and
repnz
xor
adc
sub
hlt
and
call
les
cmovl
or
inc
rol
push
xor
push
push
or
cmp
loop
xchg
push
jbe
lods
or
cltd
sbb
push
add
aaa
xchg
mov
test
push
adc
push
test
mov
cmc
adc
sbb
fldt
inc
and
call
out
or
cmpsb
fwait
leave
fwait
mov
ret
sarl
push
sub
fld
hlt
rorb
stc
sub
dec
or
movsl
pop
or
fwait
ret
stc
jl
xchg
into
imul
lods
test
pop
int
xchg
fnsave
or
sti
cmp
push
sbb
ds
rolb
adc
lock
insl
mov
loop
daa
mov
cmpsb
mov
inc
enter
or
xchg
frstor
mov
mov
mov
das
push
push
xor
stos
scas
cmp
pop
mov
push
and
fwait
jb
mov
jb
jno
dec
insl
sbb
pop
mov
push
xchg
fwait
in
and
cmp
sbb
test
mov
jg
ja
mov
mov
insl
daa
outsl
pusha
cmp
xor
push
or
movsb
call
dec
pop
jno
mov
paddusb
push
dec
jecxz
push
out
mov
fdivl
setl
sub
pop
loop
xchg
outsl
sub
fsubrl
les
test
push
call
mov
lahf
ss
cmpsl
mov
fucom
cmp
push
jns
into
and
sti
mov
sub
push
push
mov
sbb
fdivrl
mulb
mov
xlat
cmp
test
je
xor
out
dec
fsubs
sbbb
imul
xchg
sbb
shlb
pop
cmpsl
stos
aas
les
addr16
popf
pop
xchg
jns
fnstcw
outsl
es
jno
fnstcw
add
cli
ds
push
inc
sbb
test
adc
push
andl
push
cwtl
stos
mov
pop
leave
add
xor
ljmp
jle
sub
jmp
movsb
in
cmp
push
xchg
clc
or
xor
into
push
sbb
lret
cli
or
imul
loopne
push
daa
xor
inc
data16
repnz
pop
jns
inc
fdivrl
idivl
and
cmp
call
pop
cwtl
xor
mov
nop
sbb
xor
jmp
leave
pusha
enter
into
outsb
je
jo
outsb
sub
shl
add
dec
dec
sbb
lock
test
sbb
mov
xchg
jecxz
sub
hlt
push
ja
xchg
cmp
and
sub
pop
xor
rol
add
lahf
and
xchg
add
push
repz
scas
ret
mov
inc
xchg
inc
mov
outsl
data16
outsb
pop
mov
inc
sub
das
iret
cmp
sub
jo
mov
fbstp
rolb
jbe
jb
cmp
rcl
pop
nop
lds
dec
test
cmp
jecxz
push
push
add
dec
and
adc
xchg
andl
jb
mov
adc
ret
mov
cmp
stos
pop
ja
xchg
xor
mov
inc
jb
and
fsubrp
adc
jg
notl
outsb
mov
pusha
aaa
push
lock
pop
scas
cs
jbe
pop
in
stos
jbe
sbbl
add
mov
enter
inc
jle
xchg
jg
sbb
stc
repnz
and
test
jge
dec
cmp
mov
xorb
test
add
mov
in
outsb
leave
int
xchg
cmpsb
dec
mov
aam
dec
pop
es
or
sahf
jecxz
xchg
jg
notl
test
in
pushf
add
xor
divl
ja
mov
push
sbb
inc
imul
dec
dec
test
cmp
xchg
pushf
cmp
dec
and
sub
push
jb
pop
in
xlat
push
outsb
sbb
aaa
push
sahf
sbb
jo
je
sahf
mov
xchg
xor
or
jnp
fucomip
mov
jae
fldt
aad
icebp
adc
neg
je
inc
or
sti
test
shl
push
jg
scas
ds
adc
jp
out
imul
sbb
ror
push
mov
lret
or
repz
nop
inc
stos
roll
dec
call
mov
push
lods
dec
bsf
mov
popa
call
mov
in
mov
mov
mov
cltd
in
pop
jg
or
xor
test
lret
xrelease
arpl
adc
std
jo
fistl
or
dec
loopne
mov
mov
adc
lret
and
sub
out
cmp
fidivrs
push
sti
jge
ljmp
fiadds
push
rclb
cmp
leave
mov
arpl
pop
scas
negb
ss
pop
adc
pop
and
mov
inc
dec
int3
add
pop
into
out
movsl
sbb
mov
lods
inc
add
add
aas
mov
sub
stos
in
lock
call
fadds
shrb
scas
fmul
fistps
xchg
and
adc
loopne
lahf
mov
rol
xor
add
push
out
adc
jae
xchg
cmc
repnz
jmp
sbb
aaa
xchg
cli
or
adc
sbb
out
mov
pop
add
clc
pop
xor
not
jecxz
sub
cwtl
cmp
lods
cwtl
das
push
adc
mov
mov
or
into
dec
jne
jp
push
cltd
cld
pop
or
sbb
push
pop
mov
pop
mov
mov
pop
jb
dec
movsb
call
rcrb
mov
shl
ss
add
and
rorb
add
dec
stos
inc
data16
imul
lea
adc
outsb
ret
std
out
loope
cwtl
xchg
xorl
mov
std
xchg
insb
and
lahf
cs
aas
pusha
shrb
inc
push
cmp
mov
xlat
push
cltd
lock
add
es
xor
push
sub
les
xor
clc
xchg
scas
push
pop
pop
mov
int3
jg
inc
sbb
push
cltd
loope
mov
mov
mov
adc
sbbl
lods
fcomip
push
pop
xchg
sub
scas
mov
adc
ljmp
jno
lret
jmp
cmp
mov
push
fsubrp
addb
cld
xor
pop
bound
adc
pusha
add
jae
pop
cltd
outsl
loop
repz
lods
scas
jg
adc
and
cmp
pushf
sub
leave
je
adc
inc
arpl
inc
js
sub
imul
sbb
jo
add
jbe
mov
push
jp
cwtl
scas
push
filds
inc
mov
cmp
push
add
sbb
mov
cltd
repnz
or
testb
pop
xchg
pop
les
incl
mov
fcmovbe
je
lods
xchg
scas
pop
fdivr
inc
adc
xchg
cli
out
out
sarb
cld
push
outsb
inc
int
xor
test
mov
daa
gs
ss
out
movsl
push
cmp
test
cmpsl
push
pop
jns
cld
ds
sbb
dec
mov
jbe
addr16
dec
fsubs
mov
or
insl
ret
rorl
cltd
stc
mov
push
mov
imul
inc
imul
movsb
into
xor
aas
inc
popa
fdivl
rcll
mov
or
xor
adc
dec
dec
and
pop
xchg
cmp
push
mov
xor
jle
jmp
sbb
jle
add
mov
out
loopne
and
inc
loopne
mov
loop
movsb
adc
adc
xor
mov
pushf
or
testl
add
mulb
notl
cmp
imul
jae
sub
test
sbb
dec
inc
popf
xor
pop
mov
sar
mov
cmp
add
lods
ja
mov
pop
pop
sub
cmp
sbb
pop
dec
jge
push
mov
xchg
adc
ds
and
outsb
jb
dec
fldt
mov
push
test
mov
fisubrs
das
pop
ljmp
stos
mov
adc
pop
inc
scas
inc
xor
push
dec
cmp
aaa
sbb
lock
stc
cmp
inc
lods
dec
lods
and
jmp
or
das
cmp
pop
pop
mov
push
add
outsb
cmovno
xchg
xor
mov
movsb
pushf
jae
dec
sub
in
les
int
aas
movsl
cmp
adc
adc
xchg
pop
repz
imul
xchg
and
add
test
add
pop
or
sub
dec
or
mov
mov
sahf
and
test
mov
shll
xchg
stos
mov
dec
jnp
sbb
dec
stos
dec
nopl
or
movl
ret
hlt
xchg
and
and
test
push
mov
add
sbb
add
mov
inc
cmp
lcall
clc
inc
pushf
dec
cmp
out
jg
pop
les
repnz
or
sub
pusha
and
lds
mov
lret
jo
push
out
insl
xchg
int3
popf
stos
pop
inc
mov
mov
push
inc
xlat
test
insb
mov
cmp
mov
mov
loop
or
in
pop
notb
lods
push
negl
mov
jo
xchg
lret
out
jmp
lret
xor
xchg
popf
adc
pop
adcl
stos
ljmp
sahf
fs
or
cmp
in
repnz
pop
repz
jle
pop
cmp
dec
loop
pop
repnz
sbb
popa
dec
loope
dec
ljmp
ds
sub
xchg
cli
xchg
ret
push
imul
push
mov
inc
stos
mov
or
mov
dec
dec
lcall
icebp
out
inc
les
rorb
scas
pusha
sbb
adc
jp
pop
mov
fsubs
shll
or
fsubs
mov
jmp
scas
xchg
leave
add
push
mov
mul
jb
in
cmc
sub
out
int
enter
ljmp
hlt
fiaddl
movsb
inc
sahf
xchg
jbe
sahf
jbe
cld
inc
lods
loopne
cmp
xor
and
cs
sub
mov
dec
inc
stc
dec
sbb
cmp
ffreep
xchg
push
pop
push
mov
inc
sbb
fisubl
xor
inc
pop
je
lds
repz
jbe
fmuls
cltd
sub
dec
fwait
lods
xchg
mov
push
loop
push
lods
sbb
mov
imul
andb
dec
cmp
fsubrs
sub
push
push
cld
dec
or
lahf
sub
cwtl
pop
sbbb
inc
sub
jno
mov
pop
jmp
popf
out
xchg
fldenv
xchg
push
ss
das
jae
ja
popf
arpl
push
sbb
imul
dec
rcr
push
popf
jg
cld
sbb
xor
decb
add
xchg
dec
jg
insl
loopne
adc
dec
dec
movb
scas
stc
dec
inc
sub
jo
pushf
es
or
int
and
pop
leave
jl
out
clc
push
and
jp
or
out
lret
test
fisttps
push
cld
cli
pop
dec
pop
or
fisttps
mov
idiv
sub
dec
cwtl
pop
lock
inc
and
gs
pop
inc
dec
lret
arpl
xorb
xchg
imul
nop
inc
dec
sub
cmp
popf
push
icebp
lds
std
int
test
test
dec
pop
loop
lock
in
sub
cmp
jmp
loopne
notb
xchg
test
shlb
call
lret
push
add
lcall
ja
imul
addr16
mov
outsl
mov
sub
sahf
je
hlt
xor
cs
popf
add
xchg
orb
scas
call
cmp
add
cld
gs
or
or
sahf
sub
cmpl
xor
or
add
movsb
cli
inc
add
xor
movsb
repnz
test
cmpsb
cltd
pushf
mov
in
xor
les
mov
ret
sti
push
push
mov
jb
sbb
mov
daa
mov
add
add
fldcw
sbb
dec
mov
cltd
test
xchg
sti
test
bnd
cmp
mov
jno
cwtl
inc
fisttpl
shrl
push
outsb
lds
pop
jbe
loope
dec
pushf
aaa
std
data16
push
pushf
test
dec
cwtl
lods
dec
and
jno
movb
rcrl
ss
or
adc
inc
xchg
pop
aaa
sahf
fldenv
je
mov
stos
cmp
dec
mov
sti
jg
xor
inc
fnsave
push
adcb
fcoml
bound
es
out
aad
repnz
jmp
nop
xchg
dec
fs
movsl
mov
pop
mov
mov
cli
xchg
push
arpl
jge
int
fdivrp
sub
scas
sub
add
jb
mov
inc
mov
inc
pop
fists
sbb
xchg
add
repz
and
iret
push
pop
sbb
aas
fisttps
dec
iret
xor
test
jb
sahf
cmpsl
stc
out
dec
sbb
enter
lods
inc
lods
pop
dec
xchg
es
bound
adc
aad
fldl
cmpsb
rorb
cmpsl
push
dec
idivb
js
rcll
and
xor
jg
fwait
icebp
adc
sbb
xchg
repz
and
mov
push
or
and
scas
pusha
lret
inc
andb
mov
into
xchg
pusha
cs
icebp
fadds
xchg
rclb
xchg
lret
xor
and
stos
dec
int3
arpl
leave
out
faddl
mov
push
ds
sbb
dec
sub
stos
inc
dec
lahf
push
xor
xor
sbb
sbbl
icebp
fildll
ja
xchg
sti
cltd
das
into
out
test
mov
sub
mov
xlat
mov
or
adc
cmp
stos
xchg
add
dec
and
push
lea
outsl
ss
mov
push
adc
adc
pop
aad
sbb
in
push
psraw
push
xlat
mov
mov
add
jle
adc
lret
in
jl
fwait
or
or
sub
xchg
xchg
sti
xlat
sbb
xor
popl
incl
pop
decb
and
pop
cmp
scas
out
test
lcall
stos
jg
fsubs
xchg
adc
and
mov
movsl
cmp
push
pop
mov
xchg
add
stos
add
xor
jg
cmp
loop
jp
inc
jmp
nop
hlt
or
cmp
paddd
lret
int
repnz
sti
cs
divb
and
fs
xor
fistps
add
push
outsb
loope
mov
sbb
aam
mov
inc
pop
xchg
add
cmp
or
das
push
mov
jmp
lods
mov
out
push
pushf
jne
sar
cmc
cld
stos
es
pop
icebp
dec
xor
pop
js
sti
sbb
dec
or
mov
test
or
jecxz
sahf
jmp
add
repz
out
xchg
sbb
out
stos
xchg
dec
and
movsb
jnp
cmpsb
mov
addb
xchg
mov
and
add
add
stos
jbe
orl
or
sbb
sbb
mov
jmp
add
js
fsubrs
lcall
push
jbe
or
inc
ret
push
mov
jbe
pushf
sbb
roll
cmpsb
cmp
fistl
cmp
popf
cmp
push
lahf
dec
lods
dec
popf
mov
imul
jle
into
scas
mov
push
cwtl
adc
add
ret
andl
mov
insb
mov
sti
fdecstp
sub
add
aaa
mov
inc
test
mov
jnp
sub
jmp
and
or
ljmp
inc
lods
pop
test
mov
lret
imul
jo
mov
cli
test
or
jl
adc
shr
stos
mov
inc
into
xor
fsubrl
adc
jno
inc
and
and
sub
jmp
jp
add
rorb
popa
fwait
into
fsubr
stos
xchg
lods
jmp
mov
pusha
sbb
mov
addb
pop
gs
clc
cmp
stos
cmc
mov
xor
and
adc
inc
and
mov
push
push
in
jl
je
pop
arpl
fdivrs
lret
adc
push
loopne
notl
mov
int
and
fwait
xchg
lret
xchg
pop
add
sub
mov
mov
pop
shl
pop
cmp
jns
jnp
pop
in
jp
popf
jmp
mov
mov
push
jecxz
inc
fistps
mov
add
ret
rcrb
jbe
rcr
cmp
setle
idivb
push
or
sbb
mov
jg
inc
mov
decl
je
rol
mov
mov
idivb
push
mov
jne
sub
lcall
cld
outsl
loope
mov
loopne
test
push
pop
mov
pushf
sub
in
and
arpl
mov
or
movsl
mov
and
pop
push
inc
divl
imul
adc
cmc
test
mov
cmpsl
cmp
dec
test
xor
jns
or
cmp
stos
push
test
imul
rorl
iret
mov
push
adc
imul
mov
jae
in
and
call
imul
popf
xor
adc
xchg
orb
mov
out
cmp
lret
add
popa
sub
shlb
popw
adc
pop
dec
inc
jns
mov
mov
mov
scas
insl
jecxz
pop
mov
fiadds
mov
aas
mov
addr16
xchg
xchg
push
xor
or
ja
mov
push
test
aam
aaa
rcr
pop
daa
gs
push
or
mov
sti
pop
pop
outsb
mov
aam
mov
rcrl
xor
push
test
stos
add
sbb
jge
test
inc
mov
push
lcall
cwtl
pop
bound
addb
xchg
xor
enter
cmp
push
or
call
jns
inc
in
pop
push
pop
lcall
sub
jge
outsl
mov
xor
xor
sub
repnz
pop
arpl
mov
push
mov
fs
rcl
dec
add
dec
cmp
lret
inc
cmpsl
jp
xchg
or
mov
mov
insb
orl
iret
cmp
test
shl
sti
xchg
sub
adc
or
cltd
pusha
cmp
dec
popf
je
or
popa
jl
push
jbe
adcb
jns
gs
jge
push
mov
out
aaa
loopne
imul
std
xchg
sbb
sbb
xchg
test
stos
adc
clc
inc
inc
add
push
adc
es
mov
mov
cmp
jecxz
into
sbb
cmp
xor
in
out
xor
push
push
jno
add
pop
mov
insl
mov
les
adc
in
add
sub
outsb
aad
insb
add
jae
mov
sahf
sbb
std
push
repz
push
push
cmp
and
shl
in
std
inc
inc
fadds
xorb
pop
jbe
pop
or
add
mov
dec
jg
jl
jecxz
ja
sti
pop
push
mov
or
je
std
subl
nop
icebp
imul
iret
sub
aad
dec
add
jns
mov
and
mov
movl
mov
jne
lods
iret
pop
adc
sbb
fistpl
dec
add
hlt
sbb
fsub
lret
clc
inc
xor
cmp
inc
inc
adc
aam
stos
mov
push
dec
lods
mov
stc
xchg
sbbl
ljmp
xchg
enter
scas
iret
data16
pop
xor
mov
mov
inc
ljmp
adc
push
sub
mov
xchg
lods
xchg
push
les
xchg
adc
cmp
out
cmp
repnz
cltd
sub
lods
jne
pop
mov
je
mov
mov
fdivrs
mov
mov
sti
mov
jg
test
jae
mov
mov
popa
fcoml
popa
stos
jne
bound
and
fadd
out
sub
jge
aaa
xchg
sub
xor
xlat
pop
cmpsb
lea
or
popa
mov
xchg
enter
add
lret
xchg
push
lock
or
ljmp
push
leave
mov
int3
or
movsb
cmp
sbb
pushf
scas
fidivrl
push
add
xor
xchg
inc
outsb
lret
pop
pusha
push
cs
inc
push
sub
mov
into
mov
clc
lods
adc
negb
daa
bound
push
ja
scas
mov
enter
push
push
mov
xor
pop
add
gs
xor
add
mov
stos
pushf
dec
jb
mov
cmp
jnp
jbe
nop
or
push
sahf
sub
push
xor
xlat
gs
pop
add
pop
mov
jae
mov
test
imul
push
sub
out
pop
jo
ss
mov
xlat
jge
les
aad
and
enter
push
hlt
fwait
stos
les
jo
lret
in
int3
inc
lret
inc
int3
cmp
xchg
jge
sahf
cs
lahf
aam
push
and
out
stos
inc
push
xor
xor
mov
stos
jbe
es
inc
xchg
sbb
int3
jnp
pop
sbb
xchg
or
add
fdivr
cmpsb
filds
push
inc
loopne
fcomip
mov
fwait
xchg
push
in
cmc
push
insl
push
pop
mov
aas
sub
lea
sub
arpl
inc
add
flds
ficompl
jp
fcompl
pushf
dec
lret
cld
imul
jge
jle
pop
mov
mov
popf
push
outsb
adcl
mov
in
test
xchg
adc
inc
dec
out
iret
movsb
xchg
nop
cmp
pop
pop
scas
shll
jmp
push
inc
or
lods
mov
inc
call
fcoml
popf
jbe
test
outsl
jmp
scas
mov
push
jmp
outsb
cltd
push
pop
incl
jns
into
into
enter
add
and
into
test
add
or
pop
mov
lods
and
add
imul
stos
xchg
mov
xchg
xor
clc
cmp
mov
dec
popa
pop
shlb
add
ret
mov
cli
mov
lahf
pop
icebp
sti
add
fldt
xchg
test
cmp
je
jno
sti
xchg
mov
lret
int3
dec
pushf
mov
sub
ss
dec
fnstsw
fwait
js
pop
loop
test
outsb
fstps
hlt
jae
loope
cmp
je
sahf
lods
or
cmp
xor
movsb
sub
push
pop
lds
movsl
data16
lret
sbb
inc
mov
mull
sub
repz
fistl
pop
cmc
sub
divl
mov
push
lods
loope
mov
xor
cs
lods
mov
adc
xor
push
mov
xchg
sub
or
sarl
cmp
jb
push
nop
jae
mov
aam
test
xchg
pop
pop
mov
mov
or
sbb
push
push
xchg
dec
dec
mov
mov
sub
ljmp
jbe
les
call
stc
push
int3
cmp
dec
div
notl
jnp
dec
adc
adc
movb
jmp
test
jecxz
adc
das
addr16
mov
inc
sub
jg
pop
imul
mov
call
test
mov
mov
pushf
pop
mov
outsl
aad
mov
push
popf
sti
pop
stos
xchg
add
mov
lret
pop
hlt
mov
push
cmpsl
fstps
xchg
nop
ret
std
or
xor
fs
xchg
cmpsl
out
add
xchg
sbb
loopne
mov
dec
shl
sub
adc
push
mov
pop
call
xchg
jl
jg
inc
or
in
xor
pusha
in
stos
mov
aas
xchg
pop
xchg
aam
repnz
lahf
jae
sub
xor
pop
cmp
inc
fldcw
cwtl
mov
fsubrs
cltd
xor
imul
push
mov
sub
cld
int
push
rcll
or
push
in
push
lods
mov
sbb
pop
out
aad
sbb
mov
xchg
jb
ret
xor
dec
mov
fdivrl
pop
mov
cltd
or
dec
in
lcall
mov
cmp
popa
mov
ds
xor
push
sub
roll
cmpsl
rorl
xor
and
in
movsb
sbb
sbb
ljmp
xor
push
pushf
in
fdiv
xchg
ljmp
mov
and
or
dec
dec
jne
rol
scas
add
jno
push
push
jbe
mov
dec
pop
push
test
sbb
mov
jmp
dec
fisttps
xchg
jecxz
mov
cmp
lahf
fisubl
popf
orb
and
iret
popa
jbe
int3
pop
push
inc
and
mov
sub
fsubs
mov
cmc
xchg
jge
dec
xabort
add
subb
xchg
sub
call
repz
xchg
pop
pop
add
jmp
jb
jo
sub
aas
pop
mov
addr16
arpl
fnstcw
push
xchg
imul
and
cld
addr16
adc
mov
jo
jle
imul
jbe
dec
inc
fidivl
adc
ja
ret
pop
clc
adc
jg
mov
dec
mov
pushf
mov
shlb
inc
sub
pop
sub
ret
adc
ret
lea
xchg
cmp
ret
dec
and
pop
sbb
sbb
xlat
scas
decb
pop
mov
jle
jecxz
sub
stos
and
lcall
movsb
jp
push
ret
std
loope
test
subl
lock
int
fldt
mov
ret
out
testb
daa
repnz
cld
push
movsl
ret
inc
pop
push
xor
cmp
testb
xor
pop
pop
pop
outsl
inc
les
mov
sbb
xchg
js
add
and
pop
or
jecxz
push
and
aad
mov
rcl
std
nop
mov
scas
les
dec
mov
imul
push
sub
mov
push
out
cmpsb
popf
xor
outsb
ror
cmp
int
mov
sub
cmp
jne
mov
inc
lea
subb
sub
cmp
jb
lahf
pop
shll
cli
push
mov
or
dec
xor
mov
or
dec
outsl
sahf
and
pusha
push
inc
push
test
lret
jae
fsubrl
mov
sbb
ljmp
lods
dec
mov
cmp
push
ja
insl
pop
das
pop
xlat
stos
jg
ja
mul
mov
pushf
lret
xlat
add
dec
cld
cld
inc
adc
mov
fisubl
popf
gs
out
mov
pop
in
and
xchg
pop
jbe
jae
sbb
xchg
mov
mov
mov
in
test
sahf
xor
notl
xor
xor
jbe
dec
aam
repz
in
adc
divb
cmpl
mov
mov
xchg
adc
push
push
lds
loop
jp
test
paddsb
out
xchg
sub
into
faddl
ljmp
fcoml
ret
test
shll
mov
jp
cli
mov
push
andl
mov
outsl
cmp
mov
jl
fidivl
jmp
mov
jl
push
inc
mov
and
xchg
and
jmp
dec
lods
push
pop
lahf
pop
inc
pop
dec
cli
adc
out
sahf
rcrl
outsb
test
aad
cmp
jno
mov
sub
out
mov
in
dec
cltd
push
les
iret
jmp
xlat
out
cld
xchg
pop
push
push
scas
push
pop
and
popa
clc
scas
lock
sarb
xor
scas
jno
sub
and
les
js
dec
or
pop
sbb
adc
movsb
cmp
xchg
lock
fnstenv
pop
jmp
mov
sar
cmp
jo
and
inc
add
aas
loop
mov
insb
adc
loop
mov
fmul
sbb
jbe
adc
jne
movsl
pusha
mov
mov
jmp
sbb
lds
or
into
outsl
cld
stc
mov
das
mov
out
jbe
jle
subl
test
cld
bound
scas
push
mov
sub
outsl
add
pop
nop
cwtl
mov
xor
push
adc
push
ss
call
pushf
fdiv
pop
sub
std
push
leave
popf
xor
xor
mov
fnsave
mov
mov
adc
aad
mov
nop
mov
pop
fcmovnu
cli
mov
dec
out
mov
jle
pop
cmpsl
sub
rolb
in
xorl
sti
jo
xchg
cmpsb
fnstenv
sbb
mov
insb
cmp
repz
mov
jmp
xor
or
mov
mov
rolb
lds
addl
mov
scas
mov
inc
mov
sbb
mov
xor
mov
mov
jno
je
mov
rol
shl
add
pop
xchg
add
shll
adc
cmp
sti
incl
xorl
inc
add
leave
lcall
sbb
sahf
push
sub
stc
repz
movsb
push
dec
mov
mov
sub
push
pop
jmp
push
imul
je
mov
clc
fists
cltd
pop
icebp
ret
test
sub
mov
or
aam
cmp
in
jnp
sub
inc
insl
mov
dec
fidivrs
push
mov
ss
loope
flds
or
rolb
push
shll
mov
mov
fldcw
mov
mov
addr16
repz
inc
sti
scas
stc
movsb
jp
pop
sbb
pop
cmp
das
rcll
out
test
dec
fstpl
clc
out
add
xchg
xchg
add
xchg
xor
jbe
loope
lahf
lahf
fcmovnb
xchg
andl
mov
adc
inc
xlat
fldcw
test
push
push
or
fidivl
mov
jno
and
icebp
sub
out
dec
inc
mov
das
sbb
and
and
je
insl
add
ja
push
dec
adc
out
xchg
pop
xchg
hlt
pop
dec
jb
addb
and
mov
jo
ss
jae
jo
sub
mov
out
lret
addr16
mov
ds
cltd
lahf
push
mov
pushf
in
in
push
or
mov
int3
iret
int3
sbb
loopne
and
mov
dec
iret
sti
xchg
jbe
jle
hlt
mov
sbb
adc
and
inc
mov
add
sub
or
jp
pop
pop
cmp
or
cmp
jne
out
lahf
inc
mov
add
rcll
pushf
arpl
mov
pop
and
sub
push
lods
xchg
bound
or
jmp
xchg
lret
data16
fucom
push
aaa
jbe
lret
data16
push
mov
fldl
add
icebp
or
addl
lea
mov
dec
push
push
ja
mov
inc
scas
adc
insb
jmp
mov
push
sti
stos
lea
add
dec
stos
lds
out
sti
push
pop
testb
test
jecxz
mov
cmpsb
add
int3
adc
sbb
mov
sbb
and
and
inc
and
lods
fcmovu
xchg
mov
rcr
mov
rclb
or
stos
xchg
mov
fincstp
or
pop
xchg
add
outsb
jge
push
push
sub
mov
sub
push
imul
incl
enter
loop
fwait
inc
xchg
shll
lcall
sub
xchg
pop
in
sbbb
xor
xchg
add
pop
lcall
pusha
stos
pop
aam
or
out
pop
jo
xchg
pop
out
sarl
jae
mov
adc
stos
add
repnz
jle
aas
popa
stc
shll
das
xor
jae
das
movsb
jno
pop
mov
das
jo
pushf
in
cwtl
aaa
lock
and
in
in
inc
mov
cltd
mov
add
cmp
jmp
jg
dec
pop
pop
mull
mov
cltd
popl
mov
jl
fdivs
popa
dec
iret
aam
scas
pop
mov
dec
bound
stos
sub
rcrb
sub
or
lea
mov
insl
jg
dec
cmp
clc
sub
test
xor
and
pop
test
mov
xor
xchg
aaa
mov
hlt
mov
stos
sub
sbb
jno
pop
mov
inc
dec
pop
mov
arpl
lock
and
stos
es
imul
out
mov
inc
sbb
pop
mov
and
test
loopne
in
repnz
push
sub
adc
push
rcrl
gs
mov
lret
stos
jne
jae
lret
outsb
test
rolb
mov
sbb
xor
mov
sbb
push
call
cli
test
in
xchg
adc
les
jle
lahf
lods
je
inc
cli
xor
add
and
arpl
jne
add
lahf
mov
in
shrb
mov
cltd
adc
stos
mov
sub
jge
mov
sbb
mov
mov
push
sbb
lds
push
mov
and
je
push
test
scas
pop
inc
push
mov
popl
mov
xchg
lock
loope
aaa
push
mov
dec
cli
and
movsl
push
mov
in
inc
out
test
cmp
fmul
daa
mov
shrb
clc
sahf
pop
in
push
test
adc
and
rcrb
pop
sbb
sbb
cmp
mov
pop
sub
mov
jl
mov
xchg
jbe
iret
loopne
jnp
fsts
fwait
cmp
pusha
adc
mov
add
pop
sub
pop
sub
test
aad
and
pop
jb
arpl
sub
sbb
xchg
test
and
int3
jae
cmp
sub
sahf
mov
fdivs
jnp
xor
inc
in
xchg
xchg
mov
insl
xchg
mov
outsb
ss
dec
dec
mov
movsb
iret
enter
out
cltd
pop
or
jnp
xchg
sub
mov
mov
mov
mov
mov
and
outsl
push
shrl
inc
or
cmp
fs
mov
insl
sbb
or
icebp
mulb
fwait
or
push
lods
pminub
push
dec
andb
pop
pop
into
ret
inc
xchg
mov
push
cs
cmp
leave
movsb
or
mov
mov
add
or
jns
jns
mov
and
mov
lea
xlat
xchg
out
stc
push
fisubrs
ret
sahf
lods
xchg
pop
mov
hlt
repz
aad
scas
and
push
cltd
xor
ljmp
push
xchg
sti
push
imul
mov
shrb
add
push
xor
dec
lock
ficomps
shr
ret
mov
ficoml
das
xor
mov
imull
cmp
add
sub
imul
sub
pop
push
ret
sub
in
bound
xchg
dec
push
mov
ficoms
loop
mov
std
fldl2t
sub
enter
vpsubb
jecxz
xchg
xor
jle
jmp
or
sub
push
testb
std
adc
xor
and
sub
mov
and
loopne
lods
and
loopne
mul
or
add
cmp
adc
push
inc
fldenv
stos
fnstenv
sti
jp
out
frstor
sub
inc
or
dec
mov
shll
or
jg
fnstenv
jne
shll
sub
dec
addr16
pop
cmp
push
shrl
data16
cmpsb
lock
outsb
ljmp
call
rorl
mov
rol
data16
aad
pop
cmp
out
jle
cmpsb
lahf
push
hlt
mov
mov
jg
add
xchg
push
outsl
mov
mov
xor
insb
rorl
daa
inc
add
cmp
bound
xchg
jne
xor
repnz
lods
scas
shrd
or
mov
push
jnp
push
push
jo
mov
lret
and
loopne
imul
or
pop
repz
and
jmp
jnp
and
inc
cltd
xchg
fisttpll
repnz
cli
insb
ss
in
int
dec
fistl
movsl
xor
popl
push
call
mov
lahf
jno
shl
int3
loop
mov
jb
and
mov
jg
and
push
cwtl
stos
jmp
clc
stos
std
sbb
or
add
mov
cmpsb
xchg
xor
in
in
push
aas
fiaddl
pop
icebp
jmp
js
dec
inc
gs
loope
or
sub
cltd
pop
test
lds
pop
ret
call
adc
aad
fildl
mov
inc
insb
xchg
test
or
lret
sub
mov
cltd
les
cli
hlt
das
adc
xchg
loope
lret
jae
xchg
push
push
int
inc
mov
jl
cmpl
xor
sub
sbb
test
aas
and
fsubrs
scas
sbb
mov
sub
sbb
sub
inc
cmp
popa
in
popa
or
outsl
push
stos
mov
jmp
push
xchg
xchg
out
scas
cmc
cmp
sbb
jg
lds
mov
lret
or
movsl
push
rcl
adcl
sbb
loope
pop
mov
pop
lods
ss
mov
fbstp
mov
and
sub
imul
mov
addr16
std
outsl
cmp
scas
dec
mov
adc
repz
pop
xchg
sub
sbb
mov
lret
push
data16
hlt
loopne
xor
jl
inc
pushf
push
ja
mov
xchg
add
cmp
popf
adc
bound
push
inc
xlat
dec
mov
outsb
jb
movsb
mov
push
loopne
mov
xlat
imul
push
push
xor
cmp
data16
int
and
add
cmp
add
xchg
mov
nop
sahf
jp
or
movsb
mov
xor
outsl
ret
jmp
push
dec
dec
dec
cmpb
lods
mov
es
sub
xchg
pop
cmpsl
test
loop
cli
lods
dec
or
stos
push
mov
xchg
roll
push
pop
and
jno
jae
cmpsb
movsb
adc
mov
scas
in
sbbl
or
aad
sarb
cmp
aaa
movsb
aaa
xchg
lret
adcb
push
mov
lock
cmovg
pop
loop
shrb
add
fidivl
inc
lds
dec
ljmp
xor
and
push
lods
int3
testb
cmp
int3
push
stos
cld
mov
mov
aaa
pop
push
pop
insl
mov
std
pop
xor
out
imul
mov
adc
mov
dec
adc
jmp
mov
cmp
gs
xchg
pop
adc
mov
push
pop
sub
adc
je
out
subl
push
call
cmpl
loope
inc
fildl
pop
cmc
adc
data16
jl
es
rorl
lea
or
imul
cmpsl
out
inc
cmp
dec
outsl
cmpsb
cmpsl
inc
xchg
test
xchg
inc
loope
arpl
ljmp
test
mov
dec
sbbl
fnstenv
test
lcall
test
cmp
cltd
sti
inc
cmpsl
cmpb
repnz
or
js
stos
ds
adc
loope
add
xchg
xchg
dec
jmp
push
scas
xor
jno
adc
or
xchg
rcr
add
aas
insb
int3
cld
rclb
test
add
pop
lods
inc
xchg
push
jmp
dec
pop
adc
xor
xchg
cs
mov
insb
ljmp
andl
xor
or
mov
clc
out
das
inc
int
clc
sub
sub
mov
clc
cmp
push
push
sub
rcr
xor
mov
inc
nop
xor
push
pop
sub
insb
mov
mov
lods
jnp
es
push
scas
mov
sti
jnp
or
adc
xchg
decl
or
repz
push
inc
imul
mov
lock
and
out
cmpsl
jmp
out
mov
test
xchg
sbb
push
pusha
jp
loop
imul
decb
test
pop
and
xor
push
push
xlat
popf
inc
xor
cld
stc
jne
imul
int3
and
and
inc
xlat
sbb
pusha
mov
cmp
repz
movsl
in
push
iret
mov
jmp
push
filds
out
sbb
insl
jge
sbb
adc
cltd
divl
cmpsl
leave
outsl
push
pop
adc
call
adc
xor
add
sbb
pop
insl
push
adc
xorl
jp
xor
push
cli
push
mov
test
sub
stos
push
jge
jl
fcoms
out
pop
sub
movsl
sbb
fcmovne
call
adc
push
mov
push
loop
cmpsb
sbb
mov
cli
jge
sbb
int3
sahf
clc
int
cwtl
hlt
or
push
icebp
arpl
aaa
sub
inc
stos
jne
aam
jb
pop
loop
pop
mov
push
push
repnz
jb
cs
cmp
loopne
je
popf
mov
push
popa
add
dec
sti
data16
jl
xor
iret
mov
movsl
cmp
insb
pop
mov
enter
ret
sbb
inc
lods
pop
imul
nop
stos
rcl
data16
or
mov
outsb
adc
cwtl
xor
push
and
and
add
dec
xor
cmp
pop
jbe
mov
stos
adc
sbb
sti
lret
leave
jl
dec
pop
mov
ret
mov
daa
push
icebp
andl
popf
cs
ret
pop
dec
push
sub
sub
aad
pushf
adc
daa
in
push
cltd
inc
fwait
out
dec
call
inc
pop
and
cmp
cmpsb
shl
out
pop
mov
jg
aaa
outsl
dec
push
stos
or
inc
decb
xor
xchg
leave
leave
pop
cmpsl
mov
mov
and
sbb
lahf
mov
fmul
out
shrl
jmp
pop
adc
test
mov
mov
subb
pop
rcrb
int
inc
mov
mov
jbe
pop
cmp
push
add
xor
cmp
enter
sub
mov
lahf
mov
fadds
adc
rcr
loop
cmpsb
jne
jne
jmp
stc
lock
xor
pop
dec
mov
mov
out
ljmp
xchg
mov
scas
in
test
push
shll
or
js
scas
cmp
ja
or
push
aad
push
push
jno
outsb
mov
dec
insl
adc
test
xor
cltd
cmp
push
out
lret
test
sbb
pop
nop
ljmp
push
xor
sar
sbb
mov
cmp
stc
adc
lock
pop
hlt
adc
sarb
pop
hlt
mov
test
fstps
inc
scas
lahf
sub
in
lcall
jne
nop
mov
push
out
aad
mov
ljmp
add
or
inc
or
mov
enter
out
push
mov
push
fsubs
add
aad
int3
jmp
or
push
das
adc
imul
icebp
mov
mov
push
adc
mov
push
sub
jb
xor
pop
mov
mov
imul
fildl
push
pusha
gs
es
scas
xor
xor
outsl
stos
sub
pop
test
or
pop
inc
lds
push
imul
mov
dec
xchg
aaa
repz
adc
jnp
jle
orb
outsl
insb
mov
shr
test
aas
dec
push
mul
pop
sbb
xchg
sub
dec
inc
mov
loope
push
cmp
dec
loopne
aaa
inc
fldenv
inc
pusha
add
xchg
repz
lods
and
push
lret
push
ret
mov
add
inc
fcoml
jb
lcall
loop
ds
das
jo
sbbl
xor
push
add
mov
mov
pop
jno
xchg
out
je
repz
jb
addl
jbe
lret
and
cmp
inc
jo
pop
outsb
adc
sbb
mov
push
test
or
mov
or
xchg
xor
into
gs
cmp
dec
mov
fwait
xor
subb
cmc
mov
adc
jge
push
pushf
ss
into
add
jge
mov
out
enter
repnz
push
faddp
ret
testb
outsb
xchg
sub
inc
int3
xor
mov
rcrb
fidivl
add
xor
addl
test
jbe
push
and
cmpsb
or
sub
in
push
jle
dec
jns
jae
jnp
jne
sub
inc
dec
jns
fwait
and
pop
movsl
mov
mov
daa
dec
stos
add
dec
push
jne
and
add
sbb
fnsave
push
inc
icebp
movsl
inc
fwait
fwait
jb
mov
dec
mov
jge
shrb
dec
out
jge
pop
sbb
in
jmp
sti
mov
adc
xlat
mov
or
jnp
and
daa
fucom
pop
xchg
lds
movsl
divb
sub
int
pop
fs
insb
adc
mov
jns
cli
iret
push
sub
roll
repnz
mov
mov
mov
sahf
mov
inc
fsubr
ror
insl
adc
pushf
dec
arpl
inc
js
dec
cmp
call
pushf
sub
ja
cmp
pop
mov
jmp
xchg
sbb
sub
push
popf
or
pusha
mov
test
xchg
pop
xor
pushf
pop
jl
jb
jb
add
aad
fwait
sbb
mov
scas
dec
xor
test
sahf
adc
inc
fsubl
test
ja
and
xchg
push
mov
flds
and
popf
lahf
mov
popf
testl
lahf
adc
data16
je
subl
lds
or
mov
dec
in
adc
cli
add
inc
cmc
push
add
pushl
inc
sti
push
je
loopne
and
push
dec
cmp
and
sub
dec
sbb
or
int3
mov
push
lret
xlat
inc
mov
and
fimuls
dec
cmc
sti
out
popf
int
stc
dec
ret
rcr
fwait
mov
ljmp
mov
stos
nop
notl
clc
xchg
leave
stc
cmpsl
or
mov
lods
jae
sarb
sahf
fidivs
gs
push
cmpsl
lods
jo
mull
movsl
outsb
fists
mov
mov
mov
mov
shll
mov
fs
jmp
adc
inc
push
std
gs
test
lock
xor
xchg
inc
inc
dec
aad
js
enter
mov
mov
sbb
test
cmp
negb
loopne
xor
in
loopne
sbb
mov
sub
or
mov
in
sub
push
inc
les
sub
xor
sub
jnp
lret
aam
iret
mov
push
and
mov
test
sbb
test
in
mov
aam
scas
subb
push
mov
push
sub
aam
out
mov
pop
sbb
inc
ret
or
mov
arpl
inc
pop
push
test
aas
aas
lock
das
inc
in
in
mov
jmp
daa
ljmp
jbe
mov
cld
jg
das
sub
mov
xchg
cmc
mov
inc
mov
mov
adc
mov
rorb
mov
into
xchg
push
sbb
or
push
loope
ja
xchg
sub
jecxz
mov
movsl
loopne
cli
and
js
test
sub
xor
xchg
fs
push
or
adc
mov
es
pop
xor
fisubs
inc
es
insl
ja
dec
mov
mov
cmpsb
imul
xor
mov
sub
leave
cltd
push
sub
outsl
jno
add
jb
movsb
addr16
xchg
pop
outsb
dec
lret
jp
mov
push
pop
push
pusha
daa
icebp
es
and
mov
shlb
inc
xchg
sub
jne
mov
pushf
mov
dec
fnsave
or
mov
jae
lcall
push
xor
in
dec
ja
ljmp
sub
in
cmpsb
and
stos
in
aas
mov
pop
push
sub
mov
sti
sub
sahf
lahf
sbb
dec
mov
pop
dec
push
lods
dec
data16
fldcw
mov
std
and
fnstenv
sbbl
or
dec
ffree
test
outsb
fisubl
cmp
clc
fwait
aas
sub
push
inc
xchg
fistps
push
lods
inc
jne
add
jmp
hlt
popa
jl
lahf
call
dec
inc
mov
into
je
movsl
or
mov
cwtl
adc
ljmp
cmpsb
mov
pop
jmp
mov
out
mov
lret
mov
out
in
fistpll
adc
int3
loopne
mov
aaa
bound
iret
sbb
ljmp
out
add
imul
test
stos
pop
sub
in
add
inc
hlt
pushf
mov
pop
rcrb
adc
pusha
mov
sbb
inc
fsts
jae
jmp
scas
out
inc
jg
rclb
leave
clc
sarb
adc
pop
scas
and
sbb
lcall
xchg
mov
sbb
xchg
push
sub
nop
repnz
mov
add
jecxz
out
xchg
mov
pop
js
mov
add
xchg
pushf
ljmp
arpl
test
xchg
aam
xchg
dec
dec
fmuls
cmp
mov
test
ja
je
lock
testl
mov
enter
in
push
sub
mov
xchg
dec
cli
fdivs
xchg
mov
test
lret
xor
pop
xchg
ljmp
shll
leave
jno
cmp
xchg
push
inc
pop
pop
or
or
inc
dec
das
jo
pop
in
bound
daa
into
cld
jmp
aad
push
lods
mov
shlb
js
popf
mov
popa
popf
lret
iret
and
push
lods
pop
data16
xchg
jmp
test
mov
jecxz
fnstsw
sarb
sub
mov
mov
sbb
cmc
jl
repz
es
add
das
inc
insb
inc
mov
hlt
test
mov
shrl
xor
mov
jae
test
test
stos
cltd
xchg
shrl
sbb
sti
scas
xchg
or
cs
adc
pop
repnz
leave
icebp
adc
aas
jecxz
dec
dec
int3
jg
loope
sub
mov
in
stos
in
mov
add
scas
in
or
cmp
pop
je
dec
pop
and
gs
sbb
push
jg
mov
mov
push
pop
or
mov
test
imul
popf
outsl
add
out
lahf
mov
fisttps
ljmp
fnstenv
push
arpl
pop
dec
aam
or
xor
mov
leave
xchg
xor
dec
pop
cld
fbld
shll
and
pusha
imul
xchg
aad
add
mov
mov
testb
mov
and
cmc
clc
push
sbb
jmp
cmp
push
movsb
mov
mov
xor
pop
sahf
scas
dec
aaa
nop
inc
inc
mov
cmp
inc
in
shlb
add
sub
jle
lock
test
push
das
mov
jno
mov
jl
pop
leave
clc
lea
xchg
dec
jmp
push
or
jne
pop
fistps
dec
mov
or
jge
xchg
pop
sub
repnz
push
sahf
mov
fsubl
mov
sbb
in
push
cmpsb
mov
and
push
xlat
cmpsl
xchg
add
push
add
rcll
dec
mov
orl
mov
popa
enter
insl
cmp
mov
ficoml
push
or
in
stos
pop
pop
cmp
pop
outsb
cmp
cmp
mov
inc
xor
mov
aas
push
lret
push
imul
xchg
movsb
xor
int
and
add
jecxz
adcb
sbb
fcomps
test
loop
sti
add
xor
into
lds
pop
and
dec
addr16
dec
loope
mov
repz
adc
fdivrl
mov
inc
push
jno
pop
xchg
leave
fwait
scas
cli
not
sub
add
lock
xchg
addr16
orl
aad
pop
pop
xor
push
les
idivb
cld
push
pop
movsb
int
lea
lcall
push
stos
loope
and
add
jp
cs
sbb
lret
pusha
pop
sti
shl
cmp
cli
test
and
nop
jnp
mov
inc
fsts
out
mov
in
ja
jl
or
add
in
or
pop
inc
popa
mov
dec
in
sub
imul
sub
leave
pop
xor
push
dec
lcall
fcomi
lods
push
pop
out
mulb
mov
fwait
and
dec
inc
sub
rol
popa
xchg
outsb
movsl
xchg
dec
iret
test
in
test
insb
and
xchg
in
mov
lods
mov
lods
cmp
jg
pop
push
pop
jecxz
mov
test
cmpsl
fwait
notl
and
jb
push
and
xchg
inc
dec
push
popf
stc
mov
or
xor
jge
out
push
cld
push
jbe
jns
jno
ficompl
push
shll
mov
mov
ficoml
fidivs
add
add
sub
or
fwait
movsl
popf
sub
sub
loopne
dec
xor
cli
and
xor
push
daa
pop
mov
addl
outsb
xor
xchg
sbb
xorl
push
xlat
add
stc
xchg
jg
in
mov
dec
mov
scas
xchg
mov
and
arpl
loopne
sarb
pop
pop
int3
cmp
mov
ja
out
test
out
jl
in
jle
insl
add
pop
roll
paddb
popf
mov
arpl
insl
sahf
mov
sub
push
movups
aam
xor
push
mov
or
orb
js
idivb
int3
pop
adc
mov
js
faddl
inc
mov
add
mov
and
inc
xchg
sub
jb
daa
push
in
ror
xchg
cli
test
cmp
scas
pop
push
or
inc
jg
lods
jb
add
and
fnsave
pop
insb
aad
sti
mov
dec
sub
cmp
sub
add
scas
inc
rclb
sti
xchg
or
pop
cmpsl
dec
add
sub
or
xchg
ret
scas
xchg
add
iret
lcall
mov
push
xchg
cs
clc
jb
hlt
es
mov
sti
dec
or
mov
push
sub
xchg
shlb
rcrb
mov
xor
and
mov
test
mov
pop
lea
lahf
adc
inc
or
cmp
sti
mov
rcl
dec
mov
fdivr
inc
mov
out
inc
push
add
cmp
fldcw
cmp
out
add
mov
mov
and
cmpsl
cmp
fldcw
dec
aad
and
mov
add
xchg
daa
mov
mov
add
inc
sub
mov
js
icebp
mov
xchg
ja
push
imul
fldcw
adc
into
lds
int3
fimuls
roll
sbb
or
lds
hlt
or
jnp
add
ret
sbb
jmp
jo
movsb
iret
test
out
and
in
add
add
jbe
loop
gs
adc
add
mov
sbb
ret
in
push
dec
popf
jno
pop
sub
nop
insb
les
cmp
mov
movsl
jnp
nop
enter
scas
bound
push
pushf
in
sbb
out
pop
adc
mov
bound
cwtl
xchg
pop
fildll
scas
jle
gs
pop
dec
lea
push
ss
shrb
push
jle
test
jecxz
dec
sbb
loop
das
dec
data16
imul
push
cwtl
xor
xchg
ror
or
and
sub
ja
push
xchg
sub
mov
pop
jl
mov
pop
ret
xchg
movsb
cld
mov
push
in
adc
mov
add
call
push
cmc
negl
mov
push
das
adc
and
gs
dec
mov
daa
ja
in
test
sbbl
mov
push
mov
sbb
nop
push
xor
int3
data16
pop
sbbb
or
lds
cwtl
das
jmp
int
imul
lock
clc
sbbl
lahf
test
push
das
xchg
imul
icebp
insb
out
jl
aaa
cmpsb
xchg
push
ret
mov
fstps
clc
ret
xchg
push
sbb
sbb
mov
mov
insl
push
aad
mov
jmp
cmc
inc
xor
cld
lds
outsb
adc
jle
lods
adc
add
inc
xchg
aad
pop
pop
cmp
mov
adc
nop
sub
mov
scas
mov
add
cmp
inc
xchg
fistpl
jb
sbb
cmc
cmpsb
lock
dec
mov
int3
xor
push
icebp
push
popa
mov
mov
sti
xorb
mov
push
sbb
imul
sub
cmp
and
cli
pushf
pop
add
lea
xchg
mov
loopne
fldt
pop
stos
hlt
adc
inc
pop
mov
mov
cmpsl
adc
jg
je
xlat
jmp
aam
push
dec
add
mov
push
int
jo
test
aas
incl
out
fisttpl
push
xor
xor
aas
add
icebp
lods
cmp
fistpl
or
rcrb
negl
mov
dec
mov
pop
dec
shlb
es
js
iret
inc
sub
push
add
dec
xchg
ja
lds
mov
xchg
sbb
arpl
aam
mov
sub
and
imul
sub
stc
pop
xlat
leave
sbb
das
adcb
sbb
xchg
inc
mov
push
fistpl
ret
or
push
dec
cmpsl
jb
and
js
int3
pop
mov
cltd
sbb
or
adc
mov
imul
pusha
outsb
add
addr16
and
push
mov
add
sub
outsb
xchg
pushf
pop
cli
push
inc
sbb
inc
bound
mov
push
test
jg
scas
dec
scas
nop
scas
add
js
and
sahf
lcall
popf
xor
out
outsb
add
xchg
xchg
dec
sub
inc
xor
inc
cmp
pop
shlb
sub
movsb
mov
popa
mov
jo
jns
movsw
mov
mov
cwtl
in
or
popa
mov
mov
fcomps
dec
mov
dec
mov
loopne
gs
in
xchg
mov
adc
cmp
pop
jbe
inc
stc
ja
and
pushf
inc
andb
bound
mov
paddb
sbb
jae
xchg
pop
out
lods
xor
fs
xor
ret
push
or
shrl
lods
pushf
hlt
mov
push
pusha
and
mov
sub
jge
loope
ja
xrelease
jge
jge
loop
adc
mov
lcall
cltd
and
stc
arpl
xchg
dec
mov
insb
jno
sbb
scas
lock
and
xchg
pop
push
scas
jl
imul
inc
lcall
and
xchg
push
inc
fadds
pusha
cmp
push
mov
jl
mov
and
add
cmpsl
inc
xchg
xchg
inc
fadds
xor
pop
mov
xor
xor
jg
sub
sbb
dec
out
popa
dec
sub
jg
mov
stos
inc
mov
jb
push
in
push
push
xor
movsb
lods
int
jbe
mov
push
stos
jle
out
cwtl
and
mov
or
push
xchg
pop
lock
jns
push
addr16
pop
jne
push
test
idivl
pop
cmp
push
xchg
add
xchg
add
and
mov
cmp
pop
std
push
jge
es
inc
pop
fdivl
or
hlt
pop
sti
xchg
nop
cmp
and
cmp
mov
pushf
mov
pushl
sub
lock
imul
fs
cmp
stos
pop
jbe
aam
xchg
mov
std
shll
sbb
mov
push
and
je
xchg
popf
lods
into
inc
jle
mov
fidivl
xchg
shrb
mov
loope
scas
adc
xor
jb
fsubrp
test
test
dec
popf
or
add
push
lahf
jbe
fldenv
loopne
ds
nop
cmp
ret
push
icebp
insb
fs
jnp
inc
or
dec
fwait
add
and
inc
fdivrp
ljmp
popf
xchg
mov
ret
icebp
push
cmp
cmp
mov
test
or
cmp
stc
adc
js
xchg
test
std
cmpsb
fdivrp
cld
xor
rcrb
dec
in
imul
ja
sub
cmc
dec
lods
xchg
jbe
jl
push
test
lcall
cwtl
incb
lds
test
mov
aaa
stos
mov
ja
in
adc
xchg
lret
aam
jge
dec
pushf
cli
dec
xchg
mov
pop
mov
arpl
mov
lods
add
notb
enter
mov
mov
push
xor
push
je
into
pop
and
jo
bound
imulb
jo
cltd
pop
out
sbb
arpl
push
pushf
in
movsl
push
sbb
add
es
mov
and
outsl
inc
nop
dec
nop
xorb
jecxz
sub
ret
test
xor
repz
lea
cmpsb
scas
or
jns
fistl
ja
out
dec
lcall
cld
imul
jecxz
cmp
pop
cmpsb
testb
and
sbb
pushf
jno
lea
and
insb
mov
imul
inc
push
clc
mov
mov
out
mov
cwtl
jne
or
mov
adc
bnd
sub
xchg
add
pop
call
adc
cltd
xlat
push
add
mov
jge
inc
jbe
cmpsl
xor
call
test
movl
bound
iret
in
das
mov
jae
jns
push
inc
jecxz
jae
mov
adc
das
adc
jp
dec
rolb
daa
push
es
or
and
adc
jg
aas
movsl
xor
mov
mov
pop
pop
scas
enter
inc
jmp
bound
fstps
jns
dec
pusha
or
popf
call
fnstsw
mov
mov
or
shll
or
mov
or
cmc
ret
in
test
sti
popf
and
leave
xchg
add
adc
push
mov
mov
mov
testb
sub
jecxz
incl
repnz
push
movsb
addl
jne
loop
pop
adc
out
out
sub
fmulp
mov
inc
fadd
jae
pop
mov
fistps
cmp
cltd
push
call
xchg
lods
push
inc
pop
aaa
jmp
cmp
inc
push
jmp
test
inc
outsl
loop
adc
jns
push
aas
dec
push
sahf
das
xchg
adc
in
push
pop
mov
ficoml
dec
ljmp
int3
mov
mov
repz
inc
roll
test
int
xor
shll
lret
outsl
aad
es
mov
in
cwtl
push
adc
jne
loopne
sti
jb
andl
or
les
ljmp
andb
iret
add
and
jecxz
pusha
out
cmp
cmp
mov
pop
push
xor
dec
xor
xchg
dec
shl
fstl
jo
or
int3
imul
daa
aad
push
leave
fwait
jge
push
cmp
fs
shl
push
mov
add
addb
xchg
sub
jl
cmpsb
in
push
dec
pop
orl
mov
mull
in
adcb
cld
out
add
fildl
jecxz
jns
sahf
lods
dec
lcall
fidivrs
les
and
arpl
fwait
mov
or
ja
inc
imul
jmp
fistps
mov
sub
inc
sbb
jbe
outsb
jl
mov
inc
ds
or
movsl
cmpb
bound
repnz
push
orl
xchg
into
push
je
push
mov
cmp
sub
pop
jbe
popa
mov
xchg
fcmovnb
adc
cmp
pusha
or
and
sub
jmp
dec
xor
scas
inc
test
icebp
inc
int3
mov
stos
xor
mov
cmp
pusha
pop
jns
pop
or
insl
data16
cmp
fcmovb
mov
ja
in
inc
mov
jne
pop
mov
or
add
xor
cmpsl
inc
and
xchg
int
hlt
mov
popa
xor
inc
aad
cltd
fistpll
je
mov
movsb
test
push
or
enter
sub
mov
pop
fs
call
mov
out
test
and
dec
in
pusha
gs
repz
addps
nop
testb
xchg
div
xchg
repz
jne
jecxz
sub
push
fidivrl
and
adc
inc
fdivrs
sbb
ja
ja
add
xchg
test
in
jnp
adc
pop
and
cltd
or
mov
das
sbb
inc
or
mov
inc
ss
jecxz
sbb
and
sti
mov
push
adc
int3
xorb
push
dec
std
inc
data16
jb
pop
mov
rcrb
icebp
test
aas
cld
stos
cs
cmp
xchg
cs
push
mov
or
cwtl
inc
adc
inc
mov
addr16
xchg
xorl
mov
push
ja
or
pusha
stos
push
lcall
insl
loope
adc
push
ret
js
push
cmp
sub
cmp
pop
out
out
and
loop
cmp
aad
in
loop
mov
jmp
dec
sub
cs
cmp
out
cwtl
mov
adc
jge
std
dec
jns
dec
arpl
repz
out
sub
out
mov
mov
rep
hlt
sub
pop
fcom
repz
int3
scas
sbb
pop
fmul
dec
and
mov
rcr
mov
pusha
sub
pushf
push
enter
jno
xchg
ds
dec
mov
pop
shrl
vpmuludq
scas
in
rol
nop
adcb
xor
sbb
lcall
fldl
std
les
lds
inc
cwtl
mov
or
les
aam
enter
out
idivl
or
lcall
sbb
movsl
popl
jl
popa
lret
pop
adc
or
addr16
rcll
dec
push
out
aas
popa
lret
xchg
inc
sub
xor
aas
jp
outsl
sbb
inc
push
sub
and
inc
outsb
fwait
mov
es
xchg
mov
xor
and
into
xchg
dec
aas
fildl
jo
sbb
loopne
xor
xor
inc
lcall
orb
shrb
jmp
mov
jbe
mov
lea
and
mov
in
pop
aad
dec
shll
rorl
aam
dec
cmpsl
push
outsl
inc
xlat
jb
dec
fs
movsl
jbe
lea
mov
rcll
inc
in
lds
fucomip
fs
sub
and
sub
adc
es
pusha
das
pop
mov
sub
jnp
xor
adc
push
loop
insl
xor
lahf
sbb
in
xchg
in
lcall
or
jns
mov
xchg
imul
push
iret
cmpsb
add
stos
pop
dec
pop
cmc
pop
xor
pop
aas
jle
ret
push
xor
cmp
js
mov
adc
jb
jp
push
jae
dec
inc
mov
xchg
clc
xchg
xchg
xchg
dec
or
les
repz
jge
jno
inc
nop
pop
popf
clc
cmp
or
push
push
jne
pop
dec
rorb
sbb
sub
pop
or
jg
dec
icebp
test
roll
jo
out
cmpsb
fnstenv
push
mov
insl
sub
out
dec
nop
fs
xor
lcall
jae
dec
mov
jge
rcrb
fisubs
and
das
leave
out
adc
in
mov
lret
call
dec
xor
cmp
cmpsl
es
es
adc
sbb
ret
lods
lahf
mov
pop
adc
mov
cld
lret
fadds
hlt
xchg
hlt
es
sub
ljmp
es
mov
je
jne
cmp
jg
movsb
pushf
mov
add
stc
push
call
xchg
pop
cwtl
or
inc
fmulp
adc
pop
stos
nop
jo
loopne
xchg
test
and
scas
movsl
test
mov
call
push
ret
fldl
stos
mov
pop
movsb
jns
mov
add
pop
inc
lret
fisttps
jb
sahf
mov
inc
and
cltd
push
add
push
ret
in
fsubrl
dec
adc
pop
lret
testb
loope
jb
inc
cmp
cmp
sbb
das
into
sbb
ret
sbb
and
xchg
sti
add
in
dec
sub
lahf
cmp
dec
out
pop
movsl
pop
dec
cmp
xchg
sbb
scas
iret
sub
insl
add
out
mov
scas
mull
adcl
mov
mov
hlt
popa
jmp
or
sbb
cli
or
sub
adc
shlb
and
xor
in
dec
mov
movsb
movsb
pop
mov
jno
outsb
in
lahf
scas
jmp
and
cwtl
das
iret
lret
mov
pop
add
xor
dec
inc
arpl
arpl
jl
push
out
sbb
jae
push
in
fists
or
mov
mov
lods
mov
or
dec
nopl
push
decl
outsl
test
mov
je
stos
test
outsb
mov
cmc
add
cld
daa
jb
aam
lods
inc
cmc
cld
inc
xlat
cmc
mov
pop
in
sbb
int3
fwait
or
or
mov
cmc
mov
addb
mov
imul
add
xchg
es
sbb
in
loopne
push
aam
stc
add
xor
add
idiv
lods
adc
or
aad
scas
mov
repz
inc
push
xor
jp
or
bound
jns
xor
loop
stos
orl
mov
adc
xlat
lods
dec
inc
out
shr
adc
mov
and
scas
andb
and
mov
icebp
dec
lahf
das
movb
int
dec
inc
and
push
push
out
test
adc
adc
cld
stos
out
or
mov
in
insb
jo
pop
iret
cmp
dec
les
mull
negl
fyl2x
or
mov
mov
stos
or
mov
push
xorb
decb
add
ljmp
ja
imul
mov
xor
clc
mov
pop
cli
cli
pop
icebp
jmp
add
hlt
mov
push
sub
pop
xor
cmp
lea
pop
inc
sti
push
ja
push
test
inc
xchg
jbe
dec
cmp
int
in
ljmp
adc
out
pop
aas
push
jns
and
fnsave
test
arpl
mov
jmp
pusha
adc
jp
sarl
jns
jo
jb
inc
in
popf
cwtl
mov
xchg
rorb
push
dec
and
xchg
pop
cmp
sar
push
sahf
mov
nop
movsb
xlat
imul
cmp
xchg
or
cmp
jle
push
cmp
cmp
test
mov
ffree
iret
push
mov
nop
outsb
adc
daa
fldl
je
sub
cmpsl
mov
jns
mov
jg
xlat
jmp
jl
into
inc
sbbb
dec
push
out
cmpsb
sbb
mov
cmp
jae
mov
std
aam
mov
push
shll
push
mov
add
lods
hlt
mov
test
enter
out
fld
out
xchg
insb
daa
mov
cltd
cltd
cltd
xor
jnp
cmp
add
shlb
cmpsl
sub
sub
rclb
jmp
dec
bnd
adc
xchg
jp
cmp
mov
psubd
fistpll
test
inc
sub
add
xor
pop
mov
cld
sbb
frstor
mov
jge
push
mov
mov
or
stos
sti
aaa
add
mov
stos
lcall
jo
pop
xor
mov
loopne
jb
adc
mov
lcall
xchg
sub
cmp
mov
mov
sahf
mov
bound
adc
cmovnp
sub
test
xor
out
push
and
xchg
pop
jno
mov
jl
enter
aam
jge
mov
cld
data16
adc
test
in
test
inc
or
ljmp
or
ss
push
pop
inc
popa
xchg
sbb
loopne
push
fs
andl
sbb
imul
loopne
addr16
fsts
cld
pop
push
aad
mov
xchg
cmpsl
mov
repz
stc
adcl
cld
sub
rcl
sahf
shl
jg
shlb
push
or
test
sbb
insb
jno
popa
mov
pop
xlat
mov
iret
loopne
adc
jecxz
lret
repz
push
dec
adc
dec
enter
out
pop
les
xchg
add
and
lret
inc
inc
notb
out
loopne
ficoml
pop
ja
sub
mov
ja
mul
lea
jg
xchg
ja
mov
fildl
pop
sbb
fwait
ret
adc
pop
out
xchg
sarl
bound
jno
into
shrb
daa
movsb
sbb
sub
sbb
mov
lcall
scas
xchg
test
mov
add
add
xor
scas
xchg
pop
sbb
mov
lds
iret
out
push
popf
stc
sub
mov
enter
hlt
sub
adc
cmp
jle
or
ret
add
or
call
iret
mov
hlt
push
icebp
sti
sub
imul
push
push
call
nop
addr16
and
cld
add
out
fs
mov
mov
aas
repnz
push
out
cmpsl
cmp
pop
fimuls
sarb
in
scas
gs
xorb
or
mov
mov
or
mov
and
pop
push
ss
pop
xchg
jl
loop
mov
das
jnp
dec
in
mov
jns
mov
ja
mov
arpl
cs
dec
pop
ds
pop
pop
add
and
push
mov
pop
adc
andl
add
jbe
out
mov
sarb
push
and
mov
mov
addr16
into
mov
imul
cmpsb
mov
jge
push
shll
cmp
and
mov
sbb
sbb
mov
add
or
inc
mov
mov
dec
pop
mov
ljmp
out
sbb
fdivs
andl
xlat
pushf
push
adc
mov
int
out
pusha
int3
out
adc
int3
in
in
lods
aam
mov
fs
out
sub
outsb
fdivr
daa
cmp
int3
jmp
fs
or
lret
jl
ret
pop
idiv
pop
jmp
mov
ret
sahf
cmc
and
push
hlt
popf
xor
nop
divl
shl
push
fdivp
enter
dec
je
dec
add
bound
jmp
fwait
xor
xchg
shr
xchg
inc
or
jmp
dec
es
ds
lods
test
loope
xor
pop
xor
lret
lret
pop
fidivl
dec
mov
inc
imulb
push
negb
or
outsl
push
dec
ljmp
out
test
lods
jae
or
mov
inc
in
enter
fcmovb
ljmp
xlat
xor
cwtl
pop
fidivrs
std
mov
pop
pop
out
inc
jecxz
fucomp
mov
xlat
sub
or
loop
sbb
sti
ret
adc
or
jp
pop
in
or
into
cmp
xchg
repz
clc
popl
cmpsb
jmp
add
int
lret
mov
pop
fldt
mov
fwait
jbe
ficoml
notb
xor
dec
cmp
xchg
in
repnz
jne
lea
adc
adc
mov
inc
mov
or
es
fildl
jo
xchg
je
mov
je
mov
xchg
push
inc
or
and
movsb
daa
addr16
xchg
mov
adc
shl
jnp
cltd
stos
inc
and
mov
sub
mov
pop
pop
scas
mov
xor
in
mov
iret
shl
outsb
mov
pusha
mov
cli
sarl
push
mov
or
xor
pop
mov
fisttpl
lock
mov
sub
andb
pushf
push
outsb
addb
test
push
leave
jp
sub
ds
adc
xchg
mov
insb
add
dec
add
roll
and
push
cmp
or
adc
sbbl
scas
frstor
jno,pn
sbb
xor
inc
fwait
mov
sbb
xor
hlt
mov
jbe
in
rcll
adc
mov
mov
sar
loope
pop
jecxz
or
cmp
sub
popf
stc
roll
xor
in
and
fsts
jo
add
je
jne
int3
xor
ss
popf
enter
sbb
dec
fimull
outsb
add
dec
jle
jmpw
loop
or
lods
xor
aaa
mov
ret
insl
mov
test
jmp
sub
dec
push
ljmp
call
jge
inc
shl
out
jne
in
and
mov
dec
mov
mov
dec
loope
mov
cmp
and
hlt
std
inc
fnstcw
cwtl
and
dec
out
pop
into
in
xor
mov
ljmp
pop
out
movsb
dec
sub
sbb
add
jb
xor
sbb
and
iret
xchg
scas
out
xchg
shll
roll
sbbl
js
lods
pop
push
push
ljmp
call
lcall
cwtl
stos
shufps
fiaddl
adcb
dec
sub
insl
fcmovbe
mov
cmp
mov
lahf
push
fidivrl
push
bound
das
loop
dec
int
jbe
lock
push
dec
push
cmc
mov
movsl
sbb
inc
fwait
push
cmp
aad
add
push
in
mov
lcall
test
aas
or
adc
xor
jl
fsubr
test
loope
pop
mov
jns
adc
pushf
lods
aaa
je
mov
push
jb
mov
jg
loop,pn
ljmp
lcall
push
neg
mov
das
pop
push
out
notb
in
imul
js
insb
jge
dec
mov
out
jp
pop
lret
add
insb
pop
cmpsl
testl
les
test
icebp
popf
pusha
push
xchg
pop
enter
sbb
push
push
xlat
in
or
cmp
sti
push
pop
mov
ret
lcall
mov
ljmp
push
inc
inc
xchg
sbb
mov
or
lahf
xor
lret
scas
xor
push
add
aad
mov
add
xor
jno
fnstcw
popa
dec
mov
call
outsb
add
je
adc
iret
movzwl
aam
lods
cmp
fstpl
fcoms
testl
xchg
sbb
or
dec
push
sbb
ljmp
cmp
xchg
or
in
mov
popf
and
and
sarb
add
popf
lods
enter
add
shl
mov
std
cmp
inc
in
add
push
push
popa
fdivr
push
fldenv
adc
testl
mov
pop
stos
fiaddl
ja
out
rclb
ret
in
ja
call
std
mov
pop
aaa
scas
jecxz
iret
in
add
leave
xor
push
lock
adc
lret
pop
and
add
xor
or
mov
insb
sbb
cmc
mov
mov
es
jb
xchg
add
sub
stos
adc
rcrb
jno
into
sahf
and
mov
lods
mov
and
add
int3
stos
and
cli
call
pop
push
pop
clc
ret
cmp
jae
loop
push
cmp
int3
imul
es
dec
aam
jns
das
not
aas
mov
roll
repz
push
push
int3
cltd
std
xchg
lret
or
sub
cs
push
pop
mov
jl
cmp
push
mov
jg
cmpsb
and
es
sbb
xchg
jmp
movsb
repnz
mov
paddd
xor
inc
push
inc
scas
ret
xchg
mov
shrb
decl
fisubs
dec
and
mov
adc
scas
mov
mov
sub
lret
mov
lods
fdivrl
pop
jmp
cmc
or
in
in
push
cmp
jmp
imul
xor
hlt
data16
push
sti
bound
mov
stos
xor
push
or
sarl
faddp
jnp
fcomps
or
mov
add
out
iret
mov
lcall
in
test
mov
or
mov
scas
popa
pushf
fidivl
or
cmp
push
and
xor
ja
pop
mov
test
jmp
lods
xchg
ret
movl
stos
dec
dec
mov
mov
test
iret
enterw
inc
mov
sar
pushf
push
pop
loop
rcr
xlat
outsl
ss
push
adc
fisubs
in
push
cmp
ds
in
arpl
rcrb
bound
pop
stos
cmp
add
lcall
push
push
add
inc
sbb
or
cmp
sub
enter
xchg
fisubrl
dec
push
lock
cmp
pop
xor
call
and
jg
fs
cltd
cmp
xchg
sbbb
popf
push
add
mov
test
xchg
testl
in
bound
ja
leave
mov
or
testb
mov
cld
repz
clc
inc
inc
pop
adc
or
push
cwtl
lret
jp
inc
pop
pop
lcall
cli
dec
bound
or
mov
adc
mov
lret
pusha
jnp
mov
stos
or
or
ds
inc
popa
add
movsl
adc
xlat
imul
ret
add
sub
jne
fnstcw
adc
neg
lcall
movsb
mov
and
inc
hlt
cld
or
negl
cmp
jle
dec
daa
mov
rolb
fcompl
nop
pop
inc
movsb
rol
clc
pop
sub
or
aam
push
loopne
xor
dec
dec
dec
fidivl
pop
pop
lret
fs
pop
pop
lods
mov
xchg
imul
addl
lods
sub
fwait
adcb
or
cmp
test
mov
sbbl
dec
mov
push
cld
mov
push
or
mov
cmp
and
and
sarb
out
push
dec
adc
mov
imul
hlt
scas
pop
lods
mov
pushf
das
out
xchg
mov
jmp
hlt
sub
xchg
sub
mov
nop
cmc
jle
push
inc
sahf
or
xor
inc
clc
push
ret
jmp
nop
xchg
sbb
xor
pop
dec
push
fldcw
or
repz
jmp
in
adcl
les
mov
and
jp
dec
lcall
jns
insl
pop
hlt
sahf
adc
sub
inc
jnp
jae
mov
pusha
xchg
fidivs
add
dec
xor
cld
push
es
int
out
dec
and
into
fdivl
ja
and
in
or
and
or
add
sub
jno
pop
data16
loope
ret
shr
mov
xchg
mov
sbb
sub
popa
push
mov
add
es
sbb
icebp
mov
adc
jbe
mov
mov
js
add
sbb
fsts
arpl
cmc
adc
rcr
jae
adc
test
aaa
in
add
ljmp
mov
pusha
jl
push
ja
dec
inc
cmp
mov
mov
repnz
adc
cmpsl
test
xor
xchg
xchg
stos
out
das
sahf
fnsave
jno
insl
dec
sbb
mov
mov
mov
sarl
in
xchg
push
fdivrp
jmp
xchg
inc
or
out
xchg
fiaddl
adc
cs
loope
cmp
sbb
test
sbb
cmc
imul
in
add
xor
adc
xchg
enter
pop
insl
nop
jns
dec
es
jg
inc
xchg
mov
xchg
mov
inc
cmc
xor
shr
fiaddl
add
pop
mov
movsb
push
mov
adc
or
dec
cmpsb
sub
loope
in
movsl
jb
pusha
mov
cmp
mov
mov
xchg
fidivs
cmp
xlat
aas
and
xchg
sub
inc
push
fstl
mov
and
dec
adc
subb
sbb
sbb
lret
xchg
aas
mov
add
sbb
xor
or
mov
ret
pop
int
mov
mov
or
cmpsl
inc
test
xor
dec
jmp
mov
arpl
sahf
mov
cmc
push
mov
push
rclb
pop
je
pop
mov
leave
lret
mov
mov
xlat
and
cmp
add
and
or
push
jmp
jo
nop
stc
dec
loop
xchg
mov
add
inc
std
imul
jp
inc
lcall
clc
inc
and
mov
lds
pop
cltd
loop
add
sysret
sarb
xchg
xor
mov
rolb
xor
push
ret
push
sti
xchg
js
popf
repnz
cwtl
pop
adc
mov
add
fldpi
insl
fcomps
lock
lret
ficompl
adc
mov
stos
adc
popf
pop
je
iret
cmp
xor
mov
idiv
test
fcmove
mov
jle
fimuls
mov
cmp
shlb
aaa
int3
mov
pop
jne
sub
mov
inc
mov
loope
dec
jno
dec
test
push
mov
cmc
mov
rcrl
cli
ljmp
fimuls
push
js
mov
jns
mov
cmpsb
xor
lret
out
out
sbb
xor
cwtl
std
rcl
movsb
insl
repnz
add
add
pop
rcrl
dec
ret
mov
dec
dec
lea
add
mov
lret
das
mov
pop
bnd
xchg
cli
cmp
insb
mov
dec
xor
pop
adc
mov
mov
push
pop
mov
cmp
mov
daa
data16
lret
lret
adc
aad
sbb
sahf
sub
jle
jne
jno
mov
pop
negb
movsl
cmc
push
scas
push
sub
push
in
ret
sub
xchg
pop
and
fldt
out
jno
les
mov
push
mov
outsb
lock
inc
jle
inc
mov
cmp
push
outsb
call
jne
cmc
dec
push
add
lods
ds
pop
ljmp
adc
dec
dec
sbb
das
nop
loope
dec
dec
xchg
js
push
fucomp
idivb
push
fxch
push
sbb
push
lea
mov
xchg
ljmp
lcall
popf
sub
xchg
cwtl
aaa
je
adc
or
cld
or
cwtl
loop
push
sub
jl
push
sub
in
test
test
and
mov
add
test
cmp
hlt
addb
bswap
test
jno
xor
inc
adc
push
adc
add
ficoml
jb
es
out
inc
push
shll
lea
jmp
xchg
and
std
xchg
add
lret
mov
stos
sbb
mov
add
pop
adcb
repz
gs
push
test
sbbl
xchg
call
int3
jnp
mov
mov
lock
dec
out
lods
jns
iret
jne
lds
xchg
push
cmp
sbb
pusha
and
jae
pop
fbstp
add
xorps
mov
idivb
jae
adc
mov
ret
sbb
adc
xor
pop
mov
inc
adc
mov
cmp
push
push
push
stos
mov
jno
sub
dec
ds
ljmp
lret
jns
cmp
loop
in
fwait
pop
and
dec
adc
sahf
fcmovu
dec
icebp
sub
add
ja
iret
ds
mov
xor
scas
xchg
cmp
xor
dec
pop
test
scas
popf
mov
push
jne
mov
push
stc
in
orb
xor
cld
push
dec
out
sbb
les
popf
pop
in
scas
sbb
and
lods
fwait
das
stos
loope,pn
mov
jle
ja
jge
sahf
dec
lods
mov
xchg
pop
movsb
dec
out
lcall
sub
loopne
jno
aaa
dec
arpl
cmpsb
test
jns
lods
mov
cmc
pop
pushf
sbb
fwait
xchg
pop
and
popf
cmp
fs
inc
rol
xor
adc
sbb
and
das
or
sbb
xor
or
stc
sub
mov
xchg
xlat
clc
sub
dec
rclb
xor
dec
stos
pop
stos
jo
sbb
xchg
xor
xor
sbb
jae
out
jno
mov
pminsw
push
int
lods
mov
jmp
cld
pop
lret
fbstp
mov
lret
xchg
das
xchg
xlat
aad
cmpsl
lahf
sarl
jecxz
cmc
dec
in
std
xchg
repnz
adc
xor
rcll
mov
enter
jmp
mov
mov
mov
in
pusha
jnp
std
jo
adc
cmpsl
dec
xor
jp
imul
inc
outsl
bound
ds
ds
dec
inc
push
lods
mov
fs
xchg
aas
jne
std
sub
pop
pusha
negl
pushf
into
test
inc
jle
jg
pop
jecxz
pop
inc
mov
mov
inc
inc
pop
push
jle
adc
jp
shrb
inc
sbb
mov
push
fs
xchg
jo
int
fsubs
add
mov
xor
sub
aas
rcrl
mov
pop
push
xor
cltd
push
popa
or
jl
sub
jle
ljmp
xchg
xchg
xlat
enter
jnp
add
xchg
push
cltd
xlat
sbbb
fiadds
ret
ret
ret
movsl
xchg
subb
mov
jns
xor
mov
push
pop
xor
pop
and
fxch
hlt
inc
bound
in
sbb
cmp
xlat
insl
nop
jno
lods
mov
js
lea
sub
mov
push
pop
pop
dec
aad
ret
pop
push
cmp
push
fsts
mov
stos
adcb
push
adc
test
in
ds
cmpxchg
and
jo
push
ljmp
jecxz
filds
imul
mov
xor
outsl
mov
xlat
and
iret
pop
mov
xor
adc
or
mov
lock
xlat
popa
xor
out
jnp
fildll
sarb
push
mov
and
jno
fistps
std
inc
ljmp
or
fisubrl
push
jns
mul
divb
sar
mov
in
jg
push
and
inc
repnz
push
xor
shl
inc
mov
adc
xor
call
and
fdivl
pop
or
js
jecxz
cmpsb
loope
fadds
xchg
out
int
or
sbb
push
inc
mov
aam
pop
adc
rolb
dec
dec
addr16
hlt
mov
jb
in
sub
or
in
push
jne
mov
push
into
ljmp
mov
arpl
pop
push
mov
jmp
jle
pop
fucomp
sbbl
dec
mov
or
jecxz
add
or
scas
mov
push
or
xchg
push
or
push
xchg
mov
mov
scas
cltd
pop
cmp
jmp
scas
lds
scas
lea
push
xor
xchg
inc
dec
sub
inc
and
sbb
fwait
push
mov
pop
int
pop
jnp
stos
pop
xor
fldcw
mov
mov
xchg
sub
pop
ss
ja
mov
pop
mov
lret
filds
cli
push
dec
add
pop
aam
lahf
pop
jb
pop
je
dec
mov
ja
out
xchg
aam
inc
lock
pop
xor
fcoml
cmp
xchg
js
lcall
in
mov
xchg
jo
and
jbe
imul
sub
sub
and
outsb
mov
xor
or
aad
push
insl
add
cs
repz
xchg
iret
fsts
dec
movsl
dec
out
lds
je
mov
and
aam
jnp
xorb
jo
popf
push
sbb
pop
out
nop
pop
loop
push
cmc
mov
adc
inc
popl
and
sti
jg
jmp
sbb
repz
mov
sbb
inc
or
mov
mov
inc
lret
mov
mov
orb
das
add
adc
mov
out
pop
push
insl
cltd
sub
lahf
add
cmp
and
rolb
jle
push
in
jp
out
xor
and
sbb
jns
stos
jbe
jle
jo
ja
fsubl
lods
movsb
mov
xchg
and
mov
repz
fisubrl
pusha
jno
jmp
pop
mov
inc
data16
fcomps
ljmp
int3
inc
sti
mov
adcl
call
std
cltd
loopne
stos
aaa
mov
mov
sub
dec
fiadds
xor
aaa
and
addr16
call
push
mov
je
sbb
add
mov
push
pusha
ss
xchg
mov
loop
jo
gs
cld
lods
inc
pusha
mov
and
orl
lock
dec
cwtl
call
inc
push
je
lds
loop
xchg
xchg
dec
jae
or
push
xlat
xchg
dec
and
movsl
adcl
inc
in
orb
in
insl
lret
rcrl
mov
lds
mov
std
push
loope
pop
sub
fidivs
cs
inc
repz
insb
lahf
lods
fcoml
jno
fs
inc
push
lahf
inc
cwtl
ljmp
jge
pop
ss
aaa
pusha
daa
add
idiv
es
or
or
sub
lahf
fs
and
psubusb
or
jno
and
cmpsl
test
mov
loope
fdivl
fsts
sbb
or
jns
push
and
cld
fiadds
cli
out
adc
test
dec
popf
sti
jbe
out
fists
in
sbb
xorb
jae
ret
fistps
mov
or
mov
ljmp
aad
rorb
lods
pop
mov
or
aaa
cli
loop
sub
xchg
xchg
jns
leave
int
dec
cs
jl
outsl
inc
enter
cmp
test
adc
push
xor
add
loop
das
ret
out
mov
xor
sbb
add
dec
dec
push
cltd
jmp
or
in
mov
add
cli
iret
dec
adc
lock
mov
std
mov
ljmp
jecxz
cmp
sbbl
pop
in
push
cmp
and
out
add
adc
lds
xor
shl
daa
mov
push
scas
inc
jge
aas
dec
cld
sub
arpl
sbb
das
out
sbb
mov
push
and
repnz
cmp
adc
test
jo
jae
push
js
aaa
push
sbb
fdivrl
loopne
mov
push
std
add
sub
mov
push
or
jb
outsl
repz
fidivrs
xor
xchg
push
sbb
rolb
adc
mov
push
push
imul
sub
cmp
insb
pop
nop
out
rcrb
mov
rcrl
stos
adc
inc
pop
rol
stc
push
xor
pop
cmp
test
pop
adc
and
xchg
lds
xor
jno
es
pop
inc
icebp
in
xor
and
xchg
fidivs
mov
inc
adc
insl
dec
xor
int3
lret
pop
outsb
pop
lock
pop
dec
jp
lcall
cmc
nop
in
jo
shlb
shrl
or
pop
push
stos
xchg
pop
test
in
in
popf
push
mov
mov
test
cmp
aad
cltd
iret
xchg
add
sbb
or
fs
mov
xchg
scas
dec
popf
sub
call
inc
xchg
out
push
outsb
xor
ret
jle
out
sub
decl
arpl
and
rcll
and
add
dec
loopne
pop
dec
pop
mov
pusha
mov
add
scas
push
fistl
push
mov
jne
dec
dec
mov
test
xchg
idivl
push
aas
mov
lock
inc
ja
jecxz
outsl
push
cmp
adc
pop
jge
cmp
rorb
out
fildl
cmp
and
adc
or
movsb
cmp
inc
jmp
lock
push
mov
pop
lds
decb
sbb
pop
repnz
fisubrl
test
testb
imul
jge
mov
enter
ja
sbb
dec
cld
incb
scas
inc
sbb
or
add
cvtps2pd
pop
inc
sti
mov
das
adc
ds
fisttpll
and
lahf
inc
sbb
push
leave
fdivs
push
inc
mov
andl
movsl
xor
push
jge
pop
cwtl
xchg
mov
xor
pop
sbbb
mov
clc
xchg
imul
lcall
dec
es
inc
push
inc
mov
sub
les
ret
hlt
jo
enter
incl
sbb
or
pop
jl
loopne
test
dec
fsubs
pmulhuw
fildll
pushf
xchg
jle
dec
sub
inc
xor
lds
lds
sbb
shlb
push
add
clc
imul
mov
orl
sti
test
incl
jnp
aas
pop
and
lds
mov
pop
and
into
stos
cmp
cs
rcrl
push
lds
lahf
idivl
bound
mov
inc
call
jmp
jo
push
jmp
scas
cmpsl
jno
pusha
addr16
xchg
fs
fsubrl
xchg
repz
cmpsl
push
in
add
popf
add
ret
push
pop
xchg
or
adc
idivb
sbb
and
jo
cmp
insb
or
xchg
mov
in
push
lcall
imul
loope,pt
dec
add
mov
es
pop
sub
popa
ficoml
sub
mov
lcall
es
in
jae
ss
jns
cmp
cmp
jle
aam
repz
or
dec
mov
xchg
push
push
adc
dec
dec
dec
push
mov
dec
dec
cmp
or
xchg
sub
dec
imul
mov
scas
scas
mov
push
mov
ror
leavew
cmpsl
pop
cltd
sub
int
mov
sbb
add
pop
sub
and
mov
add
sbb
in
pop
dec
add
mov
shrb
subb
add
xor
ljmp
lret
mov
adc
das
push
jo
popf
xorl
ljmp
enter
nop
pop
xlat
mov
and
pusha
add
pop
insb
test
cmp
mov
xchg
xchg
fsub
repnz
or
xor
adc
push
call
loopne
repnz
jg
push
sbb
pop
jecxz
adc
mov
add
bound
lahf
xor
mov
outsb
cltd
scas
addb
scas
adc
in
pop
mulb
lods
push
pop
xchg
stc
sub
testb
add
mov
imul
test
xchg
jl
and
mov
daa
xchg
pop
cld
and
icebp
dec
or
repz
sbb
dec
pusha
scas
cmp
popa
sub
enter
pop
enter
loope
mov
jnp
jae
imul
mov
icebp
std
clc
xor
sub
outsb
lret
jmp
mov
jo
sub
cltd
adc
push
lea
pop
icebp
add
and
lods
pop
add
iret
push
out
sbb
icebp
js
add
push
fmuls
cmc
pop
sub
push
mov
push
push
out
jo
add
xchg
jl
cld
lods
insb
fisubrl
sbb
or
outsb
sbb
cwtl
mov
and
hlt
mov
popa
xchg
pop
je
dec
and
push
xchg
mov
mov
imul
sbb
ret
and
push
fcoms
insb
push
movsl
pop
pop
stc
jle
xchg
mov
cld
cmp
pop
mov
fnsave
xchg
pusha
jp
es
or
jbe
pop
xchg
leave
ja
dec
jbe
cmp
inc
test
aad
push
mov
fidivrl
xor
lret
push
repz
movsb
shrl
jb
aas
fstpt
dec
stos
sarb
adc
stos
faddl
xchg
sub
mov
xchg
stos
or
xlat
and
roll
adcl
loope
inc
adc
out
cli
sub
outsb
pop
cli
aaa
jne
and
jle
dec
test
dec
imul
iret
gs
xor
sbb
into
xchg
sub
xor
fnstsw
sbb
mov
int
jo
pop
sub
xchg
addr16
pop
ret
out
xor
shrb
fwait
cmpsl
paddusb
es
mov
or
xchg
adc
scas
sahf
clc
pushf
and
cld
xor
adc
in
pop
mov
insl
cmp
popf
clc
xor
lds
out
add
in
adc
xchg
add
sbb
jo
and
xor
xchg
push
push
add
jl
adc
nop
movsb
push
mov
push
xor
cwtl
push
loopne
sbb
push
or
and
push
popf
subb
cs
jp
adc
add
lods
out
fsubrp
loopne
adc
imull
fnstcw
push
mov
in
and
jne
inc
inc
outsb
inc
jle
icebp
mov
sub
sub
mov
mov
jmp
inc
popa
jo
mov
mov
fwait
arpl
xchg
cmpsb
stc
pop
mov
mov
sub
pop
and
mov
mov
pushf
xchg
sub
decl
pop
inc
add
jle
popa
insb
pushf
fidivs
or
cmpsb
cmp
add
xor
mov
test
mov
lea
cmp
stos
jne
daa
sub
sub
nop
pop
enter
and
popa
loope
lahf
jb
lock
lods
or
xor
fstps
iret
pop
ret
dec
addr16
mov
push
jbe
or
je
fsubp
push
lods
pushf
dec
imul
mov
outsl
mov
mov
and
add
add
fnstenv
pop
in
xor
mov
xchg
mov
out
sub
or
push
loopne
push
jge
push
mov
insl
add
xlat
shll
test
push
inc
nop
xchg
cmp
adc
mov
popf
mov
add
xchg
jbe
std
or
cmpsl
in
rorb
add
jp
in
aam
jbe
mov
mov
aam
jp
call
push
push
int
jo
adc
enter
mov
idivl
shlb
cmp
fiadds
sbb
xchg
xchg
clc
pushf
andb
sbb
sub
and
addl
pop
jne
test
sbb
push
idivl
mov
pop
adc
int3
or
mov
jb
sub
nop
addr16
xchg
mov
pop
mov
mov
dec
inc
jne
mov
movsl
vpunpcklqdq
rep
add
push
or
inc
insl
mov
jns,pt
sub
mov
push
cmp
loope
icebp
xlat
insl
dec
in
hlt
in
hlt
cmp
js
cmc
test
jb
stos
jecxz
jmp
addl
lret
xor
leave
and
sarb
std
jnp
push
pop
sbb
cmp
iret
movsb
pop
sti
rcrl
loope
sub
fisttpll
xchg
loopne
jecxz
jae
jge
and
xchg
lods
outsl
hlt
and
xorb
daa
cli
and
push
sub
jp
add
sbb
sarl
lret
lret
jp
adc
mov
dec
jb
jno
add
dec
jbe
xchg
ficoml
fdivs
outsb
jp
into
inc
lahf
push
sarb
in
aaa
cwtl
sub
pop
mov
lea
and
idivb
mov
mov
inc
pop
fcmovnu
lahf
sbb
in
lret
hlt
lret
push
jo
adc
not
sbb
aam
sbb
mov
jns
stos
inc
push
sbb
cmc
sbb
addl
fmull
std
loope
push
adc
dec
add
mov
push
lods
lret
aaa
cmpsl
push
outsb
lock
push
iret
aad
push
mov
and
add
add
das
sub
out
sahf
push
mov
in
xchg
pop
xor
add
xor
lea
mov
jge
sbb
cld
push
cmc
push
fisubrl
mov
clc
loop
xchg
jge
fimuls
add
pause
dec
inc
fwait
mov
and
icebp
ret
pop
dec
ror
jbe
loop
inc
adc
xor
pop
es
cmp
sti
or
js
ja
jp
jae
push
push
jecxz
mov
cmpl
insb
sub
and
lret
mov
mov
or
push
sarb
adc
fildl
repz
stos
push
fidivrl
jecxz
mov
movsl
push
sbb
push
xchg
mov
jb
xorl
jmp
pop
dec
dec
jp
int
push
call
sbb
cmp
mov
push
stos
adc
sarl
add
adc
mov
inc
sbb
push
pop
in
mov
cmc
arpl
pop
in
les
cltd
testb
addb
gs
xchg
and
mov
pop
dec
lock
xlat
push
xchg
pop
aas
xchg
sub
mov
dec
mov
mov
cmp
push
repz
xchg
sub
mov
sub
lods
pop
jecxz
inc
cmc
jg
es
rorl
popf
sti
dec
and
adc
outsb
testl
xchg
ds
inc
sbb
mov
sbb
mov
int
pop
mov
mov
nop
sub
push
mov
insl
cli
scas
pop
inc
dec
ss
pop
popf
sbb
and
sbb
or
adcl
push
insl
sahf
and
test
inc
mov
pusha
sti
or
cmpb
cmpsb
mov
push
cs
rcl
shrb
cmpsb
mov
scas
push
shl
je
lods
ljmp
jno
sarl
jns
jg
add
lahf
or
sub
add
ljmp
repz
ljmp
push
ss
push
xchg
pop
in
fs
cmp
jp
dec
lods
std
scas
out
mov
mov
test
xor
fidivs
lds
pushf
scas
inc
imul
stc
idivb
leave
gs
je
shrb
sbb
or
divb
push
add
test
icebp
out
pop
add
push
lods
cmp
pusha
jno
mov
or
mov
loope
sub
test
sub
pop
ret
repz
sahf
pop
es
mov
xchg
out
nop
adc
or
in
fucomi
js
jl
xchg
cmp
jne
mov
repnz
pop
out
add
pop
in
cmp
push
js
mov
lods
xor
fsubrs
inc
fmull
hlt
cmp
lea
push
xor
in
lds
and
ljmp
imul
xchg
pop
insl
cs
scas
dec
scas
inc
sub
mov
scas
les
mov
inc
dec
mov
push
gs
xchg
in
add
mov
push
lods
and
arpl
mov
adc
jo
dec
mov
jl
mov
mov
je
inc
popf
mov
inc
push
mov
sub
stc
popa
adcb
push
ljmp
pusha
sti
pop
sub
subb
inc
xlat
sbb
fdivrl
pop
cmp
test
shll
aad
in
pushf
scas
inc
push
push
cmp
and
imul
cmpsb
push
mov
mov
dec
test
data16
les
je
cmp
enter
loop
ss
mov
outsb
sub
fninit
push
test
fidivs
mul
and
call
or
fidivs
gs
loope
mov
andb
sub
aas
movsb
insb
and
aad
mov
negb
xor
repz
and
leave
std
adc
aad
lods
test
inc
iret
imul
pushf
mov
lock
sahf
fnsave
push
push
inc
xchg
std
xor
inc
mov
leave
dec
pop
sub
mov
or
clc
add
test
sbb
popf
cmpsb
xlat
jmp
ss
aam
adc
bswap
pop
cmp
and
mov
test
push
lret
aas
fnstcw
dec
lcall
test
stos
push
pop
mov
jl
out
rolb
cmpsb
dec
inc
xchg
test
dec
ljmp
inc
cwtl
std
mov
aas
add
pop
fdivr
pop
sbb
fdivrs
push
leave
test
and
adc
mov
sbbl
xchg
dec
or
jae
jge
std
push
xor
jmp
jecxz
mov
jb
mov
inc
aam
andb
jl
data16
lods
xor
lock
xchg
adc
push
mov
popf
jg
pop
jbe
and
adc
sarb
cmp
repz
xor
mov
mov
fisubrs
mov
mov
mov
mov
stc
scas
aaa
enter
add
adc
mov
in
jb
sahf
jae
stc
push
mov
push
call
push
xchg
outsl
daa
les
cmp
fistpl
mov
fisubl
in
add
out
int3
sbb
sbb
pop
icebp
insb
ja
adc
or
lds
lret
out
movb
cmp
xlat
in
scas
push
les
mov
aam
mov
loopne
notb
cmpsb
xor
aas
mov
and
cmp
fstpl
or
add
movsb
xchg
mov
fwait
push
sahf
test
sub
push
daa
or
rcrl
mov
inc
rol
pop
ss
int
lods
popa
leave
push
fimull
or
jl
pop
scas
xchg
rclb
push
pop
fidivl
aam
cs
adc
cmp
dec
lahf
movsb
repnz
inc
test
and
push
stos
fdiv
inc
dec
mov
mov
adc
jg
sti
daa
add
leave
and
xor
out
adc
scas
pop
and
lea
mov
push
in
clc
and
add
data16
cmp
xchg
mov
cltd
mov
ret
hlt
fistpl
loopne
mov
sbb
lcall
in
cmp
adc
ljmp
pop
es
push
push
xchg
sub
sbb
or
mov
js
leave
arpl
push
ja
sub
lods
inc
push
xorl
push
pushf
scas
or
in
mov
pop
mov
scas
mov
cmp
add
sbb
roll
xchg
sub
pop
and
adc
and
push
test
cmp
and
rcrb
xor
jecxz
add
ljmp
push
aam
jnp
out
sahf
xor
push
xchg
jmp
cmpsl
cli
xchg
fsubrs
xchg
and
jne
add
dec
jb
cld
adc
rcl
rorl
add
adc
adc
outsl
daa
loope
dec
dec
leave
sbbl
pop
sarl
test
fidivrl
pop
add
loopne
add
sar
push
stc
das
sahf
sub
jno
mov
push
pop
fmuls
xor
ljmp
mov
addl
mov
jb
mov
arpl
pop
fwait
xchg
stos
cmp
shrb
int
mov
arpl
test
dec
fidivl
in
test
and
in
mov
dec
movsb
cmp
inc
out
aam
rclb
imul
dec
jecxz
mov
imul
gs
jecxz
push
fistl
or
push
and
shrl
add
imul
mov
scas
jb
movsb
xchg
mov
adc
or
lret
mov
lods
aad
pop
xor
gs
xor
lods
inc
test
stos
sbbb
dec
sub
das
jno
stos
mov
test
dec
loope
pop
insl
and
fldt
xchg
ja
je
mov
in
sti
mov
jge
xchg
loope
push
out
add
jmp
and
and
sahf
outsl
pop
sahf
pushf
adc
push
fst
test
les
and
addr16
fwait
dec
add
test
aam
jbe
cmc
out
mov
and
leave
out
popf
addr16
inc
sub
or
jmp
ret
sub
ret
roll
popa
mov
jmp
or
sub
repnz
fdivrs
rcrb
adc
cmp
xchg
mov
js
inc
fldcw
notl
mov
in
es
imul
sub
mov
mov
dec
fdivl
cli
push
or
cmp
push
orb
pusha
xchg
cli
popf
push
jge
fstpt
add
mov
adc
ret
inc
inc
add
mov
jo
mov
pop
cmp
jecxz
inc
loopne
stc
mov
mov
dec
sahf
and
push
shll
lcall
arpl
pop
jle
out
adc
fiadds
into
stos
push
ret
lcall
jo
jbe
xor
enter
adc
sub
jns
out
sub
test
lret
data16
test
addl
xor
inc
insb
leave
mov
mov
es
nop
pop
mov
pop
nop
ret
xor
call
jmp
mov
xor
stos
adc
dec
mov
xchg
inc
xchg
cmpl
lcall
sbb
inc
ss
fbstp
mov
dec
adc
jp
xor
rolb
fcoml
cmc
jg
jecxz
in
and
jno
int
dec
add
pop
xchg
test
push
jmp
enter
dec
pop
jbe
mov
jle
adc
lcall
cmp
mov
shlb
sarb
outsb
mov
popa
jge
outsl
adc
mov
xchg
dec
sar
inc
add
inc
fstps
mov
pop
jg
mov
sahf
add
hlt
mov
cmp
xchg
xchg
fbld
inc
fnstsw
adc
mov
and
inc
lcallw
or
ljmp
jne
insl
lcall
call
sahf
add
and
rcr
cmp
push
scas
cmc
lret
add
shl
push
jo
out
es
cmpl
aam
push
outsb
dec
popa
jmp
jg
cmpsl
mov
and
out
bound
jecxz
jmp
xlat
je
add
inc
pop
outsl
jbe
or
ljmp
test
int
inc
push
pop
sbb
test
mov
ljmp
jecxz
or
enter
inc
or
imul
jno
mov
pushf
scas
loop
fsubrs
and
je
dec
mov
pushf
and
setb
ja
shrb
outsl
mov
add
fucomip
push
fmulp
fcoms
clc
adc
sub
pop
xchg
and
pop
loop
pop
sbb
decb
insb
imul
add
sub
movsl
or
negl
in
dec
jae
jo
pusha
stos
pop
outsl
adc
jno,pn
insl
add
cmpsb
bound
push
or
out
cltd
lret
mov
dec
mov
leave
mov
loope
lret
mov
pushl
inc
fnstcw
pop
jbe
cmpsl
sub
or
notb
dec
out
sub
fistl
pop
out
inc
cli
test
ja
imul
sbb
mov
lock
pop
xor
lods
xchg
push
pusha
testl
cwtl
sub
or
mov
cmp
adc
lods
insl
adc
fldt
or
dec
lea
scas
cmp
shrw
sbb
bound
dec
cmp
sahf
cmp
aad
sbb
pop
sbb
mov
dec
mov
push
ds
das
testl
xorl
and
pop
pop
repz
fbstp
pop
jnp
mov
std
mov
fidivrs
fsubr
add
mov
lock
mov
mov
jbe
xchg
cmp
lds
inc
cwtl
jecxz,pt
rcll
ja
cmpsl
push
and
loopne
sub
jge
jae
jae
pop
and
inc
push
jns
imul
leave
adc
xchg
sub
stos
mov
frstor
jecxz
jno
dec
mov
mov
not
mov
outsb
cmpsl
cmpsl
mov
jecxz
data16
ds
stc
jo
mov
add
xorb
jmp
or
cmp
or
aaa
pop
repnz
adc
adcb
mov
out
scas
les
jb
mov
jnp
jecxz
inc
pop
mov
mov
call
aaa
dec
cmc
push
push
je
mov
xorb
dec
les
push
jecxz
adc
fcomps
and
cmpsb
aad
inc
sbb
xor
mov
adc
scas
inc
imul
shl
scas
mov
ja
cmp
jl
inc
mov
push
shlb
cmp
mov
and
and
add
mov
testb
rorl
jbe
mov
push
mov
lock
and
popf
and
bound
sbb
inc
fsubl
mov
xchg
xor
cmp
test
inc
sarb
pop
xchg
sub
cmpsl
aas
jmp
mov
jge
push
mov
dec
and
mov
sub
nop
stos
push
mov
mov
std
dec
ds
rclb
add
repz
pop
push
ficoml
popa
cmc
adc
pop
je
ficoms
inc
pop
add
jb
aaa
enter
xchg
idivl
cwtl
xor
pushf
pop
push
or
dec
add
inc
test
add
push
lea
and
inc
xor
cmpsb
jb
inc
iret
adc
xlat
icebp
shlb
sub
push
sahf
cmp
call
call
or
enter
jp
cmpsl
xor
mov
jle
icebp
in
orl
inc
popa
cld
lcall
scas
popl
rcl
vmovd
in
adc
jo
sbb
out
sub
lds
xchg
sub
loope
mov
mov
rcll
and
pop
cld
push
pop
fdivrp
pushl
push
push
out
mov
inc
adc
lock
dec
cmpsb
inc
loopne
loop
fcomps
mov
inc
call
or
movsl
mov
roll
in
aam
repnz
nop
mov
and
insb
ret
test
jmp
cltd
adc
ss
lds
or
popf
jb
add
mov
push
sbb
jge
lea
movsl
pop
imul
addl
and
lahf
push
mov
es
adc
push
sub
cld
out
cs
inc
adc
ss
pop
inc
lahf
pushf
or
gs
xchg
inc
cmp
sub
rcrl
add
xor
psadbw
push
test
and
ds
fsub
pop
add
pop
lock
mov
inc
lock
push
out
or
std
lar
in
jbe
popf
push
movsl
dec
pop
and
jnp
mov
fsts
inc
arpl
cli
sub
sub
sub
dec
loopne
lods
shl
and
sbb
mov
lret
xchg
inc
mov
out
cwtl
pop
mov
in
pop
gs
iret
outsl
add
adc
mov
call
or
lock
and
and
jo
loopne
lods
test
or
iret
xchg
cmc
mov
imul
fcomp
push
sub
clc
call
jne
or
or
hlt
ds
sub
xchg
pop
mov
mov
outsb
insb
xchg
adc
in
xchg
insb
cs
or
mov
repz
shlb
and
mov
mov
cwtl
call
std
sti
and
test
into
pop
adc
jmp
jmp
xchg
outsb
aam
mov
push
and
add
aaa
and
stos
or
hlt
data16
repz
dec
pop
xor
mov
andb
in
push
icebp
lret
jge
lods
cmp
xchg
loopne
and
rcll
add
fld
jge
adc
ljmp
cld
xlat
mov
rcll
jbe
inc
push
push
xchg
mov
and
mov
icebp
jg
xlat
mov
out
and
in
pop
xchg
cmp
lods
ss
push
pop
push
ss
loopne
pop
add
adc
in
dec
lods
jns
jno
lret
add
mov
or
adc
outsl
mov
push
push
sbb
mov
mov
aam
or
mov
cs
xchg
sbb
jmp
xor
fdivl
push
lret
pop
arpl
pop
aas
mov
std
mov
mov
push
mov
inc
scas
mov
imul
cltd
xor
repnz
ret
fcoms
insl
int
aas
iret
xor
xchg
sub
dec
rclb
dec
sub
fcoml
push
testl
xor
scas
insb
fisttps
mov
dec
lods
insb
scas
and
aad
mov
aas
jae
mov
movsb
subb
jno
jo
test
dec
cmpsb
xchg
shrl
lcall
imul
lret
or
inc
aam
xchg
add
sub
pop
jno
ficoml
enter
in
nop
dec
adc
shll
dec
push
stos
hlt
dec
xor
rol
fcomi
loop
pop
push
push
bound
xor
std
jg
sub
mov
push
je
inc
pop
push
or
xlat
xchg
sub
outsl
mov
mov
jns
push
addl
addr16
or
stc
adc
sub
rol
inc
jg
call
mov
pushf
nop
pop
int3
and
sub
inc
cmp
dec
dec
loopne
push
sbb
sti
push
and
adc
xchg
out
sub
fidivrl
inc
ljmp
call
sub
mov
xlat
sub
arpl
cmc
dec
pushf
pop
cmpsb
dec
jnp
jno
fstpt
stc
xor
cld
mov
pop
xorl
inc
or
fwait
push
sub
jecxz
test
test
inc
fdivr
or
push
divps
adc
mov
es
push
and
sahf
jne
push
rorb
lahf
sub
enter
out
add
xchg
push
inc
mov
rcpps
and
ret
jno
std
insb
adc
cmp
scas
jmp
mov
and
leave
movsl
cmp
mov
loopne
push
push
insb
sub
push
or
add
xchg
ss
nop
push
mov
sbb
fnsave
inc
or
and
stos
lcall
dec
pop
sub
jb
xchg
or
cmp
lahf
jle
cmpsb
out
dec
stos
es
loop
loop
mov
les
xor
pop
and
fimull
bound
lea
mov
dec
mov
pop
jg
jp
dec
dec
mov
in
jle
mov
imul
mov
inc
rcrb
bound
push
mov
xchg
sub
adc
int
push
int
xchg
xchg
xlat
and
or
cs
clc
pop
dec
mov
and
jg
sub
push
cmp
xchg
push
es
bnd
das
dec
addr16
jge
push
jp
out
jecxz
dec
pop
jo
movsl
cmp
arpl
inc
icebp
ret
scas
repz
dec
push
mov
or
fistps
aaa
mov
xor
stc
nop
hlt
mov
outsl
cmp
loopne
outsl
imul
xchg
sub
leave
mov
repnz
jne
filds
and
inc
cmpsl
testb
test
adc
lret
cmp
jmp
cmp
inc
pop
push
ja
imul
aam
mov
fisttpll
inc
pop
mov
popa
fisubl
xor
loope
mov
or
push
mov
insl
into
pop
xchg
aad
jecxz
sub
push
negb
test
mov
test
mov
fwait
pop
or
xlat
cmp
in
pop
sahf
mov
add
or
cmpsb
or
test
mov
cmp
stos
jmp
sbbb
fwait
jb
xchg
mov
sahf
dec
stc
push
repz
popf
or
pop
dec
adc
inc
outsb
cmp
out
sarl
rorl
repz
inc
add
imul
out
or
icebp
imul
inc
jae
mov
pop
mov
sbb
inc
les
adc
arpl
xor
arpl
mov
pop
call
dec
push
ljmp
cmpsl
imul
mov
in
idivl
pusha
pop
mov
mov
sbbb
push
in
dec
add
subl
mov
pop
out
jb
jo
loop
icebp
mov
fidivl
jge
loope
clc
mov
lods
or
and
cmpsb
lea
pop
aam
nop
aad
mov
data16
outsb
sarb
aaa
push
pushf
pushf
cmpsb
mov
movsl
test
rorl
jecxz
in
js
vcvtdq2ps
call
jno
add
movsl
ret
adc
ljmp
sti
ret
stc
sbb
mov
mov
in
fsts
pop
xchg
mov
and
mov
lods
xchg
cli
mov
mov
adc
enter
clc
subl
hlt
in
jns
mov
out
test
mov
cmp
fmull
mov
xchg
sub
mov
mov
in
cmpsl
sbb
mov
mov
dec
into
pushf
mov
test
sbb
mov
xor
cltd
jb
sbb
sbb
push
or
les
mov
sub
cmpb
xor
mov
movsl
add
and
or
inc
inc
pushf
scas
ret
mov
stos
dec
mov
sbb
jb
inc
mov
rcrl
add
xor
ficoms
push
pop
cmp
stos
xchg
das
mov
rorl
iret
das
hlt
add
xchg
aaa
mov
sbb
jmp
xchg
or
mov
test
mov
and
mov
and
leave
dec
dec
cltd
hlt
mov
inc
push
daa
cmpsb
lret
hlt
jae
or
fwait
pop
mov
push
and
mov
dec
lret
xchg
mov
sbb
inc
fucomp
cmp
test
mov
dec
push
cmp
add
test
movsb
mov
pop
popa
cmpsb
mov
fdivrl
pushf
mov
xlat
pop
and
inc
mov
out
push
xchg
dec
out
add
mov
adc
xchg
mov
daa
mov
cmpsl
push
fimull
mov
sub
xor
pop
ja
movsl
addr16
push
mov
sar
test
leave
mov
xor
fcomi
call
xchg
cwtl
out
pushf
push
xor
test
sub
jge
push
hlt
addr16
add
ljmp
stos
jbe
add
mov
mov
sub
add
fisttps
dec
jg
mov
pop
or
ret
inc
cwtl
sbb
cmc
movsb
inc
mov
push
loopne
mov
jo
mov
popf
xchg
outsb
add
jecxz
mov
mov
dec
and
mov
cmp
sbb
mov
sti
fdivrp
xor
jle
push
xor
push
xlat
andb
leave
leave
int
dec
daa
mov
in
mov
and
and
scas
xchg
push
push
lods
or
mov
stc
mov
or
mov
lahf
jl
mov
add
xchg
imul
test
mov
or
pop
jge
dec
cmp
and
repz
push
loop
push
pop
mov
sbb
jg
insb
sarb
fs
xchg
jo
scas
fdivl
gs
push
notl
push
cmp
mov
push
pop
sarl
scas
inc
jnp
pop
inc
xchg
pushf
lret
orl
or
mov
jge
mov
pop
sbb
addr16
icebp
dec
pop
mov
adc
jge
aaa
jbe
dec
xor
xchg
dec
fcoms
enter
xchg
and
push
push
mov
sahf
lock
mov
cmpsb
call
cmp
sti
inc
out
inc
into
int
cwtl
sbbl
push
add
aad
into
dec
loop
jae
fisubs
cmp
and
push
sub
adc
xchg
lock
inc
push
movsl
mov
cli
shl
das
pop
iret
or
in
mov
inc
dec
shl
fwait
test
push
xchg
data16
mov
andl
in
repnz
ljmp
popa
pop
mov
mov
shrl
mov
xor
sbb
inc
in
stc
imul
call
dec
jmp
dec
out
aaa
xchg
push
mov
dec
pusha
rcrl
insb
sti
nop
adc
mov
lcall
cwtl
imul
mov
outsl
cmp
lcall
jne
push
sub
notl
pop
dec
js
push
aam
addb
lock
rcr
enter
jne
pusha
cmp
cmp
lds
aam
enter
sti
jg
lret
pop
and
push
adc
dec
pop
dec
xchg
les
jle
out
xchg
mov
dec
jmp
xchg
pushf
xor
iret
in
test
nop
or
mov
scas
out
cmc
sbb
sbb
mov
xchg
xor
daa
mov
daa
sbb
aad
shll
jg
icebp
lods
mov
sub
pop
jno
cmp
das
fidivl
fs
cwtl
insl
ja
add
insl
jg
and
enter
lret
adc
ss
enter
xchg
and
jae
std
sbb
sub
addr16
mov
je
out
push
xchg
and
leave
sahf
or
lret
ljmp
imul
das
pushf
xor
sarl
rcr
fwait
iret
loope
push
pop
jo
sbb
add
xchg
inc
mov
fidivs
ret
xor
xor
arpl
mov
sub
sbb
inc
sbb
sub
pop
xchg
mov
outsb
push
add
fwait
pop
add
ret
bswap
push
sub
dec
out
xchg
in
add
mov
arpl
pop
mov
int3
and
push
push
mov
insl
xor
movsl
mov
mov
test
das
fwait
xor
shr
pop
xchg
push
ffree
push
adc
jmp
and
leave
xchg
out
subl
sub
inc
fcoml
or
inc
cmc
jecxz
jb
push
ljmp
sub
jns
cmp
sub
xlat
lds
sub
daa
mov
outsb
sub
sub
test
adc
test
cli
or
dec
adc
sar
insb
fisttpll
jnp
leave
sub
cmp
inc
inc
mov
add
push
insb
pushf
inc
ret
inc
xor
push
push
mov
cld
push
loop
inc
test
shrb
mov
mov
data16
dec
sub
int3
push
in
sti
adc
inc
pop
jnp
add
scas
mov
flds
push
out
push
inc
frstor
cltd
pop
mov
stc
inc
dec
and
push
inc
add
cmovae
cmp
adc
cwtl
push
sbb
mov
jbe
mov
stos
loopne
bound
jno
addr16
stc
sahf
inc
inc
mul
imul
jg
xor
mov
scas
notl
scas
xchg
dec
dec
fwait
add
xchg
push
mov
jnp
stc
inc
sub
lea
jnp
and
jp
lahf
pusha
mov
prefetch
or
or
mov
inc
jmp
jo
pop
stos
cmp
scas
cmc
ja
xchg
pop
jns
inc
xchg
adc
mov
cmpsb
fnstsw
mov
xor
pop
inc
lds
pop
xor
mulb
imul
shrb
push
jne
test
jl
xor
js
mov
bound
mov
std
insl
out
or
cmpb
iret
fldt
scas
push
mov
stos
leave
fld
adc
arpl
lcall
out
adc
inc
or
add
xchg
dec
pop
nop
sbb
jp
sbb
add
mov
lahf
jmp
xchg
scas
inc
xor
push
mov
mov
cmp
rcl
adc
and
or
cmpsb
mov
rcrl
and
xchg
adc
jp
negb
mov
jo
xchg
sbb
ljmp
sbb
les
add
push
pop
cmp
fimull
outsl
dec
stos
and
jae
mov
test
sub
cmpsb
into
das
repnz
inc
mov
loope
dec
imul
movsb
push
xor
in
adc
jnp
lret
lcall
mov
dec
adcl
jl
add
mov
inc
mov
sub
testl
out
push
aad
stc
xorb
out
push
sbb
and
jbe
std
push
out
xchg
scas
call
inc
icebp
and
loopne
pop
popf
aaa
aaa
in
mov
sub
xchg
sub
cltd
pop
loope
les
mov
mov
outsl
push
stos
mov
or
mov
push
cs
fisubl
leave
xchg
daa
or
mov
fs
and
pop
lds
sbb
in
js
cwtl
push
mov
pop
jne
andl
sub
cmp
cmp
cmpsb
popa
ds
cmpsl
inc
ret
or
jg
push
jmp
insl
xchg
sub
outsb
insb
and
icebp
insb
mov
sarb
jmp
pop
adc
mov
cli
test
shrl
cmpsb
push
inc
sbb
xchg
test
loop
mov
jmp
or
movsl
sub
push
sbb
imul
leave
lock
adc
popf
cmpps
sarl
jb
mov
add
shl
imul
icebp
enter
mov
jl
pushf
cld
aas
or
je
jg
mov
dec
cmp
mov
jecxz
fistps
mov
inc
out
pushf
xor
and
mov
sub
pop
mov
xchg
push
es
icebp
mov
lret
add
fstp
pushf
push
cs
repnz
sub
int3
xchg
call
dec
push
loopne
pushf
push
or
adcl
lret
and
jae
jl
insl
aam
subl
sub
xchg
or
pushf
lods
ja
push
jns
addr16
les
cmpsl
in
jmp
pop
inc
shlb
xchg
pop
out
ja
cmp
cvtps2pi
int
ret
dec
xchg
stos
jb
dec
jecxz
xchg
add
mov
lods
pop
test
jg
sub
jecxz
pop
cltd
int
or
push
adc
mov
fstp
cmp
and
push
sub
fisubl
lcall
sbb
jg
xor
arpl
jl
sti
test
jle
inc
testb
push
leave
cmpsb
jl
xchg
arpl
mov
jl
mov
mov
xor
and
cmp
loope
in
xchg
mov
adc
sub
js
jae
popf
shl
add
mov
jle
and
lcall
jnp
outsl
add
adc
aaa
push
fdivr
pop
sbbl
or
and
lods
cmpsb
sbbb
push
push
aam
push
xor
out
aam
test
rcrb
mov
rclb
push
xchg
pop
jns
jmp
mov
add
imul
dec
je
mov
sbbl
mov
ss
imul
ret
sub
cltd
pop
push
pusha
sub
xchg
jo
ret
movsb
dec
mov
mov
mov
movsl
jno
xchg
mov
movsb
sbb
or
ja
ret
inc
and
xchg
mov
in
jge
mov
or
ja
daa
outsb
inc
lret
lahf
addr16
enter
insl
mov
xlat
jmp
daa
pop
loop
push
popf
mov
popa
push
jbe
mov
push
loop
mov
mov
aad
loope
mov
adc
pop
aaa
insb
jle
push
aaa
movsl
or
mov
mov
mov
adc
dec
cwtl
ret
ror
daa
adc
and
fsts
push
insl
jl
inc
mov
insb
cmc
negl
daa
xchg
das
repnz
ret
cltd
or
aaa
jl
imul
jp
add
andb
push
jp
aam
and
fwait
mov
pop
pop
mov
leave
int
iret
xchg
xor
pop
mov
mov
sub
sub
add
adc
sbb
mov
in
shrb
sahf
xor
adc
mov
test
fsub
add
movsb
lds
int
push
call
sbb
nop
popa
xor
lret
pop
aas
pop
test
andl
call
dec
push
mov
lds
and
push
mov
jo
int3
xchg
push
sbb
in
mov
add
rclb
lret
sub
and
daa
mov
xor
xor
adc
xchg
jle
gs
xchg
push
adc
jns
xor
leave
inc
fs
and
in
fildll
mov
out
insb
jle
mov
dec
cld
call
or
iret
inc
mov
adc
ss
cmc
lea
xchg
rol
and
stc
pop
sbb
adc
fs
pop
xor
insl
repnz
add
mov
xor
pushf
cli
or
mov
mov
mov
mov
shr
popa
popa
imul
pop
movsl
sub
mov
push
in
xor
dec
sbb
jge
mov
dec
inc
mov
pop
mov
add
outsb
ja
out
xchg
xchg
jmp
out
bound
imul
out
dec
ret
mov
push
arpl
lcall
std
inc
xlat
inc
pusha
pop
fwait
xchg
test
mov
repnz
jbe
inc
cmpsl
mov
xor
or
stos
std
aad
adc
into
jbe
sub
dec
cmpsl
sub
mov
movntq
je
jno
xchg
out
mov
and
dec
shlb
cmp
loopne
ret
fdivs
push
testl
test
fnsave
or
sahf
fdivr
jbe
sub
daa
fcmovnu
out
and
push
push
div
mov
std
sub
push
pop
stos
mov
inc
pop
divb
sahf
push
cltd
sbb
aam
call
mov
sbb
adc
adc
mov
adc
dec
jl
jl
add
aad
mov
cmc
mov
popa
sti
mov
rsm
and
ja
mov
mov
xchg
popa
mov
cwtl
or
repz
inc
mull
ds
enter
sbb
scas
mov
out
dec
adc
inc
in
inc
fnstsw
jmp
fidivrl
repz
cmp
pop
outsb
sarb
xchg
shlb
sbb
jl
lret
rcrl
lods
cmpsb
adc
add
repz
adc
subb
or
adc
test
lcall
and
aam
lds
scas
insl
shrl
add
mov
mov
dec
xchg
mov
cwtl
in
and
mov
lods
push
popa
add
xchg
scas
pushf
shlb
pushf
and
inc
inc
pop
cmp
fstps
or
stos
in
sbb
pop
cltd
cmp
xor
lret
cmp
mov
outsl
test
inc
call
xchg
mov
xchg
cmp
dec
inc
shll
fsubrp
mov
mov
adc
jge
shr
arpl
pop
loope
mov
xchg
faddl
loopne
mov
stos
add
cld
clc
nop
jle
jno
icebp
inc
push
insb
jae
adc
test
or
push
fsts
push
cmp
rorb
jmp
adc
mov
imul
xchg
pop
fsubp
jns
jg
mov
jnp
into
lahf
xchg
mov
or
jo
cmc
push
rclb
fs
sub
sub
push
js
int
xchg
add
inc
loope
inc
mov
fmul
fwait
mov
cli
and
cmp
mov
mov
pop
push
fsubrp
mov
jbe
add
xchg
xor
cli
xchg
in
mov
or
cmp
inc
lods
jo
jge
pop
push
sbbb
mov
scas
hlt
in
mov
push
cmp
push
loop
sbb
jbe
jno
cmp
add
cltd
shl
imul
mov
inc
jge
push
pop
pushf
in
xchg
cltd
mov
leave
arpl
push
insb
pushf
fidivs
cmp
lds
stc
and
push
popf
shl
movsb
testb
jbe
repnz
mov
sub
notl
pop
dec
sbb
push
pop
je
jle
lret
movsl
inc
pushl
adcl
mov
mov
push
in
in
push
ja
xchg
jmp
cs
push
mov
cltd
jl
pop
jmp
das
pop
fdivl
loope
test
pop
mull
loopne
lret
lock
dec
sti
xchg
scas
sub
or
jo
insl
jg
xchg
out
add
dec
lret
inc
sbb
inc
dec
jns
pop
or
cs
mov
outsl
subl
mov
bt
lahf
mov
aad
jns
ja
cmp
sub
testb
xchg
xchg
adc
js
and
mov
call
mov
divb
cld
and
dec
pop
cmp
adc
add
jae
in
imul
mov
mov
mov
mov
lods
test
sbb
test
push
in
pop
jmp
lea
pop
repz
lret
sbb
in
cmp
xchg
mov
mov
push
mov
push
or
mov
je
in
testb
movsb
lock
imulb
push
push
scas
add
pop
int3
xchg
inc
rcl
and
or
inc
es
pop
cmp
and
testl
xlat
push
pushf
and
xor
jno
adc
push
pushf
xor
cmp
add
stos
hlt
dec
sub
aad
and
testl
cltd
out
aaa
sbb
sahf
loope
mov
dec
jg
ljmp
or
in
adc
xor
or
or
scas
in
sahf
pop
xchg
adc
xchg
push
ljmp
inc
xlat
in
sbb
pusha
imul
push
cmpsb
sbb
sti
sahf
and
sbb
xchg
push
mov
or
mov
dec
test
gs
int3
pop
lock
inc
outsl
cmp
jo
pop
mov
push
out
push
cmpl
push
inc
ret
xchg
adc
mov
fnstsw
push
push
jo
sahf
xchg
xchg
xor
push
pop
mov
cmp
rep
mov
adc
add
jne
cmc
adc
push
xorb
sbb
aam
or
repz
movsl
cld
sbb
xchg
and
cmpsl
loope
mov
jmp
push
pop
fists
pop
inc
xchg
pusha
jne
shl
iret
xlat
xor
mov
lahf
mov
pop
cwtl
sbb
out
jp
je
loope
mov
jne
inc
mov
faddl
cmp
sbb
jle
xor
sub
jle
lods
mov
pop
je
out
inc
std
push
add
or
iret
data16
ret
mov
mov
jno
cmp
cmp
mov
push
je
cmp
notl
jno
mov
cmpsl
jge
in
or
jecxz
test
fs
xor
cli
and
pop
jbe
repnz
daa
test
inc
xchg
jb
lea
leave
sub
icebp
pop
stos
pop
scas
mov
jnp
pop
xlat
ss
pop
hlt
jb
add
ficoml
sbb
test
test
mov
jle
inc
data16
xor
cmpl
aam
movsb
sbb
aad
pop
dec
jg
testb
iret
xchg
dec
popf
push
sub
or
fs
popf
cmpsl
dec
push
fwait
insl
lock
jno
cld
adc
mov
and
imul
pop
add
inc
mov
cmp
lret
pop
adc
pop
sub
outsb
xor
movsl
cmp
dec
mov
int3
pushf
mov
in
mov
xchg
inc
fadds
cmpsb
ds
cmpsb
sbb
mov
stos
xor
scas
fisttpll
or
mov
adc
je
inc
sbbl
mov
rolb
and
push
and
out
pop
fwait
es
jg
xor
out
sarl
jnp
mov
int
adc
push
jmp
push
popf
enter
xorl
push
dec
cmp
das
mov
fldt
or
std
pusha
adc
and
push
xor
xor
mov
add
mov
test
cmpsl
sub
cltd
adc
cld
inc
mov
clc
aad
lock
jecxz
pop
pushf
xchg
cmp
repz
jae
mov
int
mov
lret
imul
pop
andb
push
and
jle
testl
hlt
ds
push
fs
arpl
cmp
test
add
jge
add
test
stos
add
mov
mov
jg
mov
mov
jne
fidivrs
mov
xchg
sbb
pop
lahf
in
dec
jmp
cmp
orb
adc
mov
mov
adc
sahf
inc
filds
nop
push
test
pop
lcall
aas
rclb
add
jo
jae
ss
jbe
mov
rol
loop
push
andl
jle
jl
and
cmp
test
imulb
rep
les
inc
inc
inc
inc
aaa
pop
lock
pop
cmp
sti
mov
ss
dec
add
fidivs
xor
lods
sub
test
daa
ljmp
push
in
hlt
shl
ja
jae
xchg
popl
rdpmc
inc
stc
mov
jg
pop
jl
aas
sbb
ret
imul
out
mov
cld
cmp
cmp
or
int3
lret
js
cmpsl
ret
adcl
popf
scas
and
jae
pop
mov
cmp
cmp
pop
hlt
mov
insb
adc
adc
mov
lss
jge
or
mov
fwait
sbb
mov
cli
popf
in
jae
outsl
mov
pop
lods
add
ss
rcll
outsb
insl
dec
shrb
jmp
fbstp
cmpl
xchg
xor
shr
test
insb
cwtl
out
cmpsb
adc
divl
xlat
repz
mov
and
dec
adc
outsb
adc
data16
sbb
push
je
cmc
mov
lods
imul
mov
repnz
mov
push
inc
dec
mov
inc
aas
jge
xor
popa
adc
je
fwait
add
movsl
sub
dec
mov
repnz
leave
sub
pop
sbb
cmpsb
lretw
roll
notl
fcmovnbe
dec
mov
xchg
mov
xchg
pop
nop
xchg
push
nop
pushf
xchg
ds
cwtl
cmp
adc
or
xlat
test
gs
push
popf
sahf
cmp
mov
fidivs
addr16
or
out
pop
out
mov
aad
fsubl
or
fucom
pop
and
rclb
mov
ficoms
pop
lods
mov
mov
clc
in
mov
out
pop
dec
loopne
or
adc
mov
mov
call
inc
cwtl
mov
mov
negl
xor
out
enter
and
stos
inc
notb
arpl
xchg
push
dec
jmp
js
lcall
stos
call
rorb
cmp
sub
movsl
cmpb
jns
shrb
jg
addl
mov
or
add
sub
add
stos
jno
mov
je
dec
sbb
and
out
push
test
lods
and
mov
orb
icebp
mov
push
push
mov
pop
leave
mov
je
jns
add
xorl
daa
jns
jle
dec
dec
movsl
mov
dec
mov
cmp
in
aas
push
jb
mulb
movsb
adc
and
inc
insl
sbb
das
cmp
js
add
test
push
popf
cltd
leave
cmpsl
dec
pop
notl
mov
or
cmpsl
movsl
icebp
mov
add
test
sub
andl
cmpsl
cmp
xchg
cmpsl
and
cld
inc
cmc
adc
testb
pop
mov
aad
js
mov
jne
hlt
lea
or
ret
inc
cli
adcb
dec
pushf
insb
add
push
sbb
push
mov
negl
jmp
jnp
push
out
mov
adc
outsb
cmp
cld
test
test
push
xor
movsl
aam
notl
add
repz
mov
xchg
xor
std
dec
mov
cmpsb
jne
mov
das
inc
mov
bswap
xchg
mov
push
jp
packsswb
pop
dec
adc
push
cmp
pop
mov
jg
mov
test
cli
pop
hlt
addr16
outsl
sub
stos
xor
mov
fldenv
xlat
ja
mov
smsw
inc
cld
cmpsb
stos
ja
xchg
dec
test
outsl
xor
pop
push
xor
mov
mov
sub
clc
inc
bound
stos
and
sub
adc
sub
cs
dec
lds
enter
nop
sahf
call
jge
xchg
mov
push
mov
mov
xchg
mov
add
mov
and
arpl
int
inc
jge
jmp
push
jne
mov
mov
arpl
mov
mov
je
hlt
ret
cmp
xchg
aad
inc
nop
mov
aam
pop
mov
mov
add
pop
jp
jo
aam
daa
mov
lods
mov
je
fbld
dec
mov
and
gs
inc
clc
xchg
imul
in
inc
int3
sub
or
push
adc
xor
mov
cmp
xchg
cmp
sbb
mov
cli
sbbl
das
or
fdivl
in
lcall
mov
cmc
mov
add
shll
pop
test
dec
inc
pusha
test
int
out
pushf
stos
hlt
dec
das
hlt
idivb
mov
xchg
xchg
shl
out
push
jb
lahf
mov
mov
out
cmp
shlb
gs
cmp
test
fistps
sbb
fsubrs
mov
jnp
add
dec
cltd
fdivs
mov
and
pop
cs
push
jp
sbb
pop
outsb
std
xchg
decl
adc
add
pop
add
xor
dec
imul
mov
jbe
or
sbbl
push
mov
js
xchg
jl
das
sub
ss
js
int
sbb
in
cs
sub
test
and
sub
arpl
xchg
dec
fisttps
ss
in
push
sarb
mov
and
call
inc
stos
jge
fmuls
inc
aad
out
xchg
les
push
dec
mov
sub
lret
jnp
xchg
mov
sub
dec
add
and
add
xchg
xchg
add
shlb
mov
xor
leave
bound
in
stos
and
dec
hlt
das
xchg
test
pop
jae
mov
outsl
or
xor
cli
mov
adc
sub
prefetchnta
push
in
sbb
aaa
scas
aam
jns
shl
dec
cltd
jl
push
call
dec
in
call
cmc
adc
outsl
inc
dec
fistl
mov
idivb
nop
and
add
jle
or
andl
jecxz
inc
stc
outsl
pushf
dec
insl
xchg
lcall
push
mov
imul
es
xor
mov
adc
xor
sbb
sub
sub
inc
push
cltd
movsl
outsl
mov
mov
jnp
inc
loope
push
imul
jmp
push
fldcw
es
sbb
xor
stos
nop
call
loopne
test
push
stc
popl
pop
ss
aam
push
mov
sbb
add
sbb
aas
mov
or
adc
sti
pop
out
in
cs
js
es
andl
data16
cmp
idiv
lea
cmp
inc
sub
pop
testl
dec
lret
xchg
rcl
repnz
mov
pop
hlt
lahf
inc
cmp
and
je
push
adc
mov
mov
jo
movsl
les
and
stc
sub
dec
test
push
mov
movsb
cmp
sti
stos
in
scas
divl
xor
and
add
xchg
xchg
sbb
scas
in
push
sbb
jno
fcmovu
lock
icebp
and
add
sbb
xor
cmp
inc
cmc
mov
out
sbb
sub
in
push
dec
out
add
jmp
mov
inc
xchg
mov
jb
adc
and
push
les
call
popf
add
jle
push
mov
aam
mov
push
data16
test
lret
xlat
mov
push
sub
mov
add
sub
and
inc
xor
lds
lret
addr16
out
cli
movl
sbb
sahf
clc
push
lods
lea
cmp
int
test
or
cmp
pop
push
cmp
ret
mov
lret
dec
es
je
mov
or
and
pop
add
stos
xor
icebp
movsl
clc
call
mov
aam
pop
mov
pop
mov
xchg
jnp
outsb
xor
and
test
xor
cltd
fs
mov
inc
arpl
nop
jmp
push
aas
movsb
xor
cmp
push
jnp
sbb
lea
pop
dec
jo
mov
popf
xor
in
fsubrp
in
mov
and
mov
popa
lret
cmp
int3
mov
fisttpl
sub
outsb
cmpsl
mov
jmp
jnp
sub
sub
jns
leave
ss
push
adc
sub
push
push
jmp
add
repnz
xor
js
gs
adc
popa
dec
fstl
sub
add
aad
imul
fists
mov
and
mov
push
ljmp
jno
jmp
ljmp
mov
cmpsb
icebp
xor
ss
push
mov
jmp
jb
jb
push
js
sub
shll
add
movsb
mov
push
mov
sarl
pop
xor
stc
mov
shll
sbb
scas
inc
enter
push
sahf
xchg
and
cli
inc
arpl
xor
in
jle
xor
mov
jmp
dec
push
nop
mov
pop
mov
xchg
out
hlt
adc
adc
es
clc
push
rcll
jg
iret
mov
sbb
add
pop
iret
pop
pop
mov
and
or
lss
jg
cwtl
das
fstpl
adc
xor
imul
or
cltd
in
push
ret
fisubs
sahf
fsub
fcoms
mov
inc
jecxz
cwtl
pop
mov
in
or
out
mov
ret
mov
lock
idivl
scas
xorl
lret
cmp
cwtl
and
push
mull
inc
popf
dec
pusha
jp
fidivs
xor
mov
xor
insl
xchg
mov
pop
mov
sub
push
sbb
fs
mov
stos
rcrl
aad
push
pop
into
mov
dec
pushf
xchg
adc
jp
es
push
push
lea
xchg
mov
ret
dec
cmp
nop
sub
dec
loope
loop
inc
sbb
daa
dec
scas
jp
pop
imul
ret
loopne
cmpsl
in
jg
ret
mov
pushf
push
xchg
movsb
lods
mov
cld
aam
das
add
pushf
repz
add
test
fsts
pop
aas
mov
dec
mov
lods
mov
lret
mov
test
mov
js
insb
dec
fucomp
je
mov
outsb
fistpll
lret
rolb
mov
stos
jge
and
dec
mov
jg
movsl
rcl
sbb
mov
sbb
sub
jmp
ja
pop
dec
loop
xor
fidivrs
das
ret
cltd
pop
repz
jge
jae
das
pop
imul
pop
sub
jae
sub
sahf
aam
sub
pop
jnp
jns
repnz
dec
adcb
pop
pushf
fistl
mov
pop
repnz
inc
lcall
and
aaa
jmp
or
std
mov
fs
pushf
pop
and
lahf
mov
shr
int
push
mull
rcll
es
sub
push
notl
adc
out
pop
repz
hlt
daa
int
adc
dec
repz
fcompl
sub
cmp
js
dec
mov
mov
jmp
insl
stc
cltd
sub
and
mov
mov
aas
lret
mov
push
mov
shl
jg
data16
mov
adcb
jge
push
inc
fdivl
sub
sbb
adcl
and
fnsave
pop
lea
shrb
jl
xor
xchg
jp
cmp
cmp
add
aaa
loopne
je
mov
outsb
repnz
dec
mov
and
neg
jae
test
insb
mov
ss
mov
btr
add
pop
pop
stos
and
shlb
cmpsl
push
push
adc
aas
sbb
mov
fs
les
nop
push
je
test
xchg
loope
inc
mov
aad
xchg
xor
aam
daa
xor
mov
arpl
adc
jae
mov
popa
jae
xchg
sub
es
jo
mov
in
insl
push
add
add
stos
and
repnz
ret
xor
in
mov
cmp
pop
push
stos
and
test
xchg
arpl
test
mov
jp
inc
out
pop
jae
adc
rcr
nop
sub
out
enter
popf
cmc
xchg
mov
fsubp
testb
adc
bound
cmpsl
mov
add
sub
dec
stos
testl
leave
jmp
into
xchg
mov
out
cs
mov
jo
negl
jnp
sub
iret
cmc
loope
adc
fwait
jl
icebp
xchg
or
sbb
rcrb
mov
imul
stc
cmpsb
sbb
xchg
cmp
aas
inc
cmp
outsl
push
cmpsb
les
adcb
xchg
mov
rol
loop
fbstp
add
in
add
popa
inc
sbb
mov
aam
roll
inc
ds
shlb
pop
adc
sub
jge
aad
fmuls
mov
push
je
mov
or
cmp
into
jg
add
int3
roll
enter
xor
js
adc
lcall
or
push
adcl
jl
xchg
daa
adc
mov
xor
inc
fcomp
or
fmul
scas
in
xor
mov
test
popf
arpl
cmp
cmp
cs
test
mov
cmpsl
out
mov
push
out
loope
sbb
cld
icebp
mov
inc
aaa
negb
int
in
arpl
daa
cmp
stos
xchg
fs
sbb
add
mov
dec
cltd
and
mov
ret
sahf
shll
mov
push
out
cmpsl
cmpsl
in
mov
add
mov
movsl
pop
inc
lcall
insl
sbb
stos
mov
cmp
sub
fdivp
scas
sbbb
icebp
out
stc
and
dec
xchg
cltd
jne
fcmove
ret
outsl
push
shrb
sbb
mov
lock
and
movsl
mull
loope
dec
ret
jl
cmc
insb
std
adc
ret
push
imul
mov
das
outsb
mov
data16
cwtl
clc
and
mov
lcall
mov
jp
stc
and
pop
je
mov
shr
xchg
pop
cmc
cs
push
out
mov
hlt
push
cmp
test
fiadds
sbbl
fs
or
mov
in
les
adcb
ret
xchg
das
jp
pop
in
int3
andb
cli
imul
push
popa
pop
push
cmpsb
lret
cld
pop
cmpsl
out
stc
xor
sub
cld
xchg
xchg
popa
xor
fwait
xchg
xchg
or
adc
cmpsb
pop
mov
push
enter
xchg
and
sbb
inc
mov
pop
xor
cmpsl
decb
sub
ret
scas
pop
add
nop
into
out
pop
jg
sub
jne
pop
mov
repnz
and
iret
data16
int3
outsl
cld
jbe
xchg
mov
ljmp
arpl
jb
jmp
movsb
adc
rorb
cmp
cmp
add
jo
push
popa
jno
sbb
pop
xchg
sub
mov
das
repnz
std
dec
popa
pop
mov
mov
ja
addr16
dec
cltd
xor
cmp
add
jecxz
dec
cld
test
bound
ljmp
outsl
xor
lret
icebp
pop
sub
pop
cs
add
mov
popf
xor
xor
inc
inc
jg
adc
sub
lock
pusha
out
stc
jnp
adcb
aad
insl
repnz
roll
ror
loope
adc
jb
sub
scas
cmp
nop
mov
repnz
pop
mov
inc
out
mov
cmp
mov
push
add
inc
and
js
mov
push
imul
mov
xor
mov
repnz
ja
out
movsb
dec
bound
repz
sub
shll
sbb
xor
cmc
mulb
inc
out
sbb
push
push
and
das
push
jmp
or
into
leave
add
push
mov
add
mov
into
in
mov
or
pop
es
call
dec
ja
shlb
out
push
jnp
test
mov
push
xchg
sahf
xchg
cmp
lret
add
or
inc
cltd
jbe
faddl
mov
stos
and
mov
jno
push
into
sub
dec
loopne
scas
push
sar
mov
ja
add
adc
jb
iret
mov
mov
jg
inc
out
pop
jmp
call
cmc
adc
xchg
cmpsb
cmp
stc
or
mov
ja
push
icebp
clc
inc
ret
cwtl
xor
cmpsl
adc
lcall
lea
push
inc
arpl
cmp
shl
popf
and
out
ds
mov
addr16
xorb
out
push
test
pop
add
mov
mov
sub
addb
test
je
push
xchg
pop
js
mov
lret
add
std
push
adc
mov
roll
add
fs
daa
lret
xchg
adc
aam
imul
pushf
mov
xchg
movsb
enter
or
adc
gs
push
mov
sbb
mov
sti
stos
cmp
pushf
inc
fcoml
ret
repz
repnz
mov
adc
pop
dec
test
je
and
fs
mov
adc
jbe
fsubl
je
adc
insb
fbstp
aas
sahf
or
sub
mov
shll
scas
daa
addr16
push
xor
repz
int
addb
cli
mov
mov
fs
sbbl
mov
adc
je
inc
loopne
lods
inc
fst
sub
xor
mov
fldt
or
fsubs
setge
outsl
divb
and
jmp
das
add
fdivrl
cwtl
or
int
rclb
out
daa
or
push
jmp
mov
mov
inc
and
and
lret
sub
test
rcrl
sub
cld
cmc
mov
sbb
aas
inc
seto
inc
data16
pop
cmp
jae
mov
mov
stos
cmpsb
sbb
lret
cld
icebp
gs
cli
loope
sub
ss
push
test
cmp
inc
hlt
movsl
xchg
cmp
cmp
jno
cmc
sub
mov
je
icebp
xor
pop
fists
jae
arpl
imul
mov
dec
arpl
sbb
fbstp
xchg
adc
jns
roll
xchg
pop
cmp
test
cwtl
dec
scas
sbb
mov
push
sub
jnp
mov
sti
jbe
cmp
cmpl
jno
and
test
sub
mov
lret
enter
xor
push
into
addr16
pop
or
add
fiadds
dec
xorl
xlat
and
sbb
sub
xlat
xlat
push
sbb
push
call
imul
scas
adc
jb
mov
xor
loop
test
in
jne
jo
or
mov
cmp
or
mov
mov
faddl
mov
test
mov
cmp
adcl
cmpl
sub
dec
adc
and
sti
fwait
mov
xchg
sahf
stc
inc
xchg
sub
fisubs
mov
xor
sbb
lret
les
movsb
gs
mov
fsubrp
pusha
sub
shll
inc
pushf
push
loope
xchg
nop
jl
addb
push
push
int3
and
jbe
ss
lret
pop
pop
movsl
jl
jecxz
std
aaa
jge
inc
shlb
cmp
xor
push
push
cmpsl
adc
cmpsl
out
scas
lea
loope
fadds
fildl
cmpsb
cmp
test
iret
data16
or
in
ret
sub
and
clc
or
inc
repnz
mov
push
popa
clc
cmpl
sub
pop
sub
outsl
push
xor
and
lea
jle
outsb
mov
sbb
push
mov
dec
out
aas
out
cs
sub
adc
push
adc
fs
jo
and
jne
push
add
popf
lods
mov
psrlq
dec
fidivs
es
in
or
lods
cmp
xchg
sub
xor
sub
push
inc
mov
dec
loopne
ret
stos
icebp
adc
sub
pusha
pop
add
jno
daa
inc
cmc
fcomps
repnz
fcomi
lcall
sbb
lcall
fldcw
lret
bound
scas
xchg
push
mov
and
jp
sbb
popa
lods
pop
ja
sbb
fiaddl
mov
mov
daa
mov
aas
pop
pop
xor
fsubs
xor
fcomip
jnp
or
sbb
sarb
out
in
jg
add
cmpsl
stos
ret
inc
mov
and
popa
out
jno
cli
mov
adc
ja
aad
aad
repz
je
jl
dec
scas
dec
sub
dec
push
in
adc
mov
lret
and
mov
add
jae
mov
dec
fdivl
mov
mov
jmp
jne
call
mov
cmp
mov
xor
inc
pop
cltd
jo
arpl
push
xlat
notl
jb
mov
out
std
jo
inc
cli
sarb
jmp
test
movsb
cmp
aas
pop
sub
push
cmp
and
xor
fisubrl
pusha
sbb
stc
pop
xor
xor
push
roll
inc
mov
cli
mov
cmpsb
lock
pop
inc
or
sti
push
out
or
pop
cwtl
xor
scas
cmp
pop
dec
in
xor
hlt
or
icebp
jmp
xchg
pop
fidivs
or
inc
mov
lret
xlat
sub
into
fcompl
inc
pusha
xchg
pop
bndstx
fcomps
or
mov
xor
and
jl
ret
lret
cmp
mov
in
stc
lahf
negb
jmp
aam
pop
outsb
rcll
add
inc
mov
nop
inc
or
cmp
push
rol
mov
shl
scas
jmp
pop
fidivrs
test
jl
ljmp
rep
lret
data16
fisubrl
out
cmpsl
inc
inc
fmul
dec
loopne
or
ljmp
and
orb
pop
outsb
inc
sub
dec
test
stos
inc
repnz
repnz
scas
dec
mov
repnz
jnp
sub
dec
fildll
cwtl
pop
cmpsl
mov
mov
js
stos
mov
mov
fistpl
fdivrs
cmp
in
les
test
push
push
hlt
dec
fbld
xchg
gs
xor
mov
andb
mov
dec
lods
sbb
cmpsl
out
in
into
dec
push
int3
jecxz
shrl
inc
xchg
add
scas
out
adcl
jge
xlat
fcmovu
cwtl
mov
xchg
loop
arpl
sub
or
sqrtps
and
into
insl
mov
insl
or
in
pop
jae
aam
lahf
sbbl
cld
add
mov
xchg
dec
xchg
add
lret
lcall
fistps
lods
fistpl
add
or
adc
and
push
jne
jmp
cmc
add
jnp
jl
sub
insb
jle
adc
push
or
cmp
jmp
xor
mov
out
shl
pop
hlt
shll
imul
mov
xor
cmpsl
bound
test
xchg
lcall
loop
mov
sbb
pop
movsb
jecxz
adc
lahf
dec
arpl
cmpsl
cmp
pop
div
xor
in
adc
pop
adc
outsb
test
insb
xchg
sbb
or
fs
nop
int3
js
and
stos
aam
fstpl
sub
dec
fildll
clc
aaa
xchg
sub
mov
out
pop
repnz
test
aam
test
ja
jnp
sti
rorb
sub
jns
jecxz
pop
add
pop
shlb
out
push
mov
add
stos
fiaddl
or
addl
xchg
add
push
repnz
push
sbbl
fmul
mov
mov
addr16
daa
ss
sti
xchg
test
clc
hlt
mov
stos
xor
std
pop
fcoml
mov
imul
push
pop
lods
mov
mov
and
and
jmp
aas
push
inc
mov
sbb
stos
lahf
fidivl
inc
mov
daa
out
jl
xchg
sub
mov
adc
or
insl
cmpsl
pop
jecxz
dec
lcall
inc
out
xchg
dec
outsb
clc
jnp
cmp
cmp
std
mov
test
adc
xor
sbb
inc
sub
jl
fxch
pop
sbb
mov
cmp
arpl
or
iret
and
sub
lea
and
andb
call
jecxz
in
lock
scas
push
sbb
xchg
sub
jmp
add
into
or
pusha
andb
push
lods
adc
pop
jno
sub
xor
mov
sbb
rcrb
rcll
jmp
nop
lahf
lcall
and
mov
rol
inc
fsubrs
mov
ffreep
add
push
in
shrb
pop
pop
or
mov
sti
repz
lds
pop
arpl
fwait
cmpsl
iret
and
mov
fldl
sbb
push
clc
aam
mov
dec
jae
addr16
cmp
mov
mov
not
ret
scas
or
xor
mov
xchg
dec
test
jle
insb
pop
test
outsl
daa
and
arpl
add
dec
or
insl
fstpt
jns
xor
push
cmp
or
jle
sub
push
add
test
testb
es
lahf
mov
jg
lock
adc
pusha
inc
push
js
xor
in
decl
ss
shl
js
xchg
pop
lods
inc
ljmp
xor
scas
xor
xchg
sti
mov
mov
scas
sbb
lds
ds
fwait
dec
lock
bound
push
movsl
addr16
jbe
rcll
rol
add
and
or
mov
jg
daa
mov
push
stos
inc
push
and
and
xchg
lcall
clc
jmp
aaa
dec
jg
xchg
jle
push
mov
adc
stos
int3
push
fsubrl
dec
and
imul
pop
das
sub
and
rolb
xor
aam
out
imul
push
outsb
xchg
pop
hlt
mov
repnz
dec
xchg
cmp
test
xorl
or
mov
jecxz
cld
dec
push
loop
sub
mov
aas
stos
lret
lret
and
mov
push
xchg
cltd
xor
mov
add
mov
cmp
mov
out
inc
inc
cmp
and
dec
jae
inc
pop
fwait
dec
inc
enter
fnop
lock
dec
mov
push
inc
inc
add
and
mov
push
sbb
and
aas
call
ret
push
out
out
enter
jbe
mov
adc
lret
sbb
jbe
push
push
mov
out
loope
xchg
add
loopne
xor
xchg
jl
sub
push
movsl
sub
xchg
mov
inc
icebp
sbb
ret
aaa
div
add
out
jmp
dec
fprem
xchg
cmp
test
imull
adc
outsb
insb
dec
ret
jbe
jne
loopne
je
pop
add
adc
int
pop
fisubrs
mov
xchg
xor
aad
and
arpl
inc
pop
insl
or
jbe
xorl
mov
add
push
push
test
and
push
cld
xor
repnz
dec
in
das
loop
fdivrl
repnz
je
cwtl
or
mov
std
mov
decb
jbe
cmc
push
popf
scas
jl
fsubs
dec
hlt
cmpsl
cld
into
ss
shlb
ja
inc
push
ljmp
jmp
push
dec
inc
loope
pop
push
mov
push
cmp
fildll
call
xchg
pusha
das
repnz
sub
scas
push
je
fbld
fs
out
aas
decb
pop
sbb
or
pop
cmp
cli
mov
xchg
scas
mov
jmp
jle
lret
roll
push
outsb
push
insl
dec
ret
add
ja
xchg
xchg
clc
daa
stos
mov
pop
popf
pop
jle
insb
fwait
into
pop
aad
xchg
out
mov
cs
jne
stc
pop
das
scas
and
adc
ret
pop
mov
sbb
sub
les
sub
add
mov
fildl
insb
jecxz
push
sahf
imull
mov
push
and
mov
adcb
out
fldl2t
outsb
xchg
out
cmpsl
stos
add
mov
xchg
dec
mov
xor
dec
xchg
jle
xchg
dec
repnz
push
or
outsl
or
and
add
mov
in
jns
jnp
loopne
fadd
push
push
das
inc
repz
hlt
ficomps
rolb
std
mov
xchg
cmp
idivb
pop
inc
in
scas
xchg
jp
push
lahf
out
and
xor
jnp
mov
pop
fcompl
sti
fmuls
fsub
lea
testb
xor
mov
aam
and
clc
arpl
sub
mov
inc
gs
add
and
test
sub
sbb
dec
or
les
iret
xor
sarl
pop
xchg
mov
xchg
fiadds
or
inc
xlat
and
xchg
pop
in
sbb
insl
jae
pop
sub
pop
das
xlat
cwtl
out
and
fnstenv
dec
movsb
cmovno
fidivl
inc
test
ret
jmp
scas
jbe
test
aas
iret
or
push
jbe
clc
xor
push
cmp
cmp
push
add
rcll
mov
and
in
orl
cmp
scas
or
pop
cli
inc
mov
jb
mov
pop
lods
or
das
lret
insl
sbb
cs
cmpsl
xor
dec
cmp
rorb
sub
mov
fists
dec
mov
sub
pavgb
or
and
mov
imul
addr16
fidivs
setns
cmpsl
jg
jecxz
mov
or
push
into
mov
popf
push
or
lds
push
fnstsw
mov
faddp
xchg
ljmp
outsl
cld
in
adc
lahf
pop
mov
out
imul
add
aad
inc
ja
push
mov
adc
data16
inc
sti
sub
out
jge
inc
mov
ja
ja
and
and
mov
rorb
repnz
fisubl
das
mov
sub
scas
xchg
enter
dec
pop
cmc
mov
push
in
lods
adcl
add
add
push
mov
data16
add
add
mov
scas
fadd
push
jge
sti
inc
mov
std
mov
ljmp
outsl
lcall
jge
push
jae
and
xchg
sub
add
sahf
daa
add
js
dec
lcall
mov
jo
jge
sub
lea
inc
movsb
xchg
leave
pusha
les
out
adc
sarl
fsubr
lahf
inc
inc
mov
aaa
pop
inc
insb
add
dec
cmpsb
bound
adc
adc
stc
sbb
sub
inc
icebp
push
in
xchg
add
test
cltd
mov
push
cwtl
lcall
lods
push
ja
cmp
repnz
in
sbb
es
cmp
pop
lcall
loop
push
ja
ds
sti
mov
mov
inc
dec
push
or
mov
mov
cmp
add
aas
pusha
dec
pop
push
pop
sbb
mov
fs
arpl
sbb
adc
xchg
xchg
sti
sahf
or
lcall
push
out
sub
mov
int3
js
sbb
adc
cmp
test
std
pop
sbbb
jl
inc
add
sub
in
jne
fbstp
or
or
sbbl
sub
lock
cmp
int3
mov
sti
aas
dec
push
jno
popa
fcomp
sahf
notl
jae
adc
pushf
faddl
mov
rol
and
pop
inc
push
negb
loopne
filds
inc
xorb
sbb
jmp
adcl
stos
sahf
sahf
jns
sbb
in
mov
mov
jae
fsubp
jns
je
fadds
add
mov
or
std
mov
sub
cmp
xchg
mov
dec
fisttpll
sub
add
or
inc
lods
inc
arpl
dec
mov
sub
cmp
out
std
insl
rol
pop
das
jmp
mov
ret
mov
loope
pop
ds
mov
mov
push
adc
add
cmp
fsts
push
fyl2x
lea
mov
lods
add
je
pop
xchg
das
xor
sbb
mov
dec
sbb
insl
scas
push
bound
loop
lock
out
dec
mov
mov
fisttps
lcall
jg
fnsave
or
stos
fildll
xor
add
mov
cmp
repz
fwait
pusha
les
les
jecxz
sub
arpl
xchg
mov
stos
nop
mov
shlb
out
in
scas
repnz
out
cmpsb
mov
add
inc
sub
xchg
leave
lahf
sub
cmp
mov
jnp
inc
xorb
into
adcl
test
mov
into
mov
pop
pop
insl
mov
jp
add
add
xor
mov
in
out
cmpsb
push
push
lods
mov
es
push
push
push
popf
mov
and
fnsave
fucomip
mov
dec
cltd
pop
hlt
ror
fcomps
lds
pop
pop
in
pusha
in
hlt
mov
dec
call
jl
adc
inc
and
or
push
inc
adc
out
push
jmp
leave
insb
jo
aas
jmp
gs
in
les
push
sbb
mov
or
mov
dec
jp
cmp
stos
inc
xchg
mov
pop
adc
sub
rcll
andl
pop
sub
inc
mov
xchg
mov
ja
and
cmp
daa
inc
jle
add
sahf
ss
mov
push
mov
xchg
adc
or
rorb
add
jo
es
or
and
imul
push
pop
jg
add
mov
pop
sub
xorl
xor
jg
sub
mov
dec
push
out
push
insb
fwait
ss
repz
push
xchg
scas
lock
sbb
or
out
call
sarl
add
mov
in
lods
mov
push
and
mov
lock
xor
rcrl
push
xchg
mov
divb
add
inc
mov
xchg
xchg
es
mov
dec
lret
nop
fnstcw
test
xorb
iret
and
dec
push
lock
mov
jno
inc
adc
pushaw
lods
and
jno
jge
mov
cmp
pop
out
add
and
dec
icebp
xor
arpl
mov
mov
cltd
fnstsw
or
cltd
ds
xchg
sub
addr16
cwtl
cld
add
or
enter
aad
adc
jne
addr16
icebp
data16
pop
mov
fwait
repz
aam
mov
outsb
das
sub
lea
add
sbb
leave
dec
cltd
test
ljmp
sub
xlat
push
repz
aad
pop
pop
into
and
decl
xlat
xchg
inc
inc
mov
fnstcw
out
push
das
mov
mov
mov
push
cltd
inc
lea
fidivrs
jnp
xor
shll
pop
xchg
mov
push
nop
push
xor
pop
xor
dec
shlb
hlt
xchg
and
aaa
lock
filds
xor
enter
lret
movsb
pop
aas
mov
icebp
mov
adc
fs
xor
or
and
iret
xchg
rcrl
loope
lret
adc
ficoms
fstpl
or
call
nop
cmpb
mov
sub
mov
pop
sub
dec
outsb
jns
jnp
shll
xchg
lcall
data16
cmpsb
nop
mov
fmuls
mov
repnz
ds
xor
jno
lcall
xor
jmp
add
jmp
xor
add
adc
add
mov
test
insl
xor
dec
xchg
mov
jo
cmp
js
xor
cmp
xchg
push
pop
ret
movsb
mov
icebp
adc
movsl
aas
adc
push
cltd
xor
xlat
mov
lea
add
imul
inc
scas
pop
add
in
push
jne
push
xor
sbb
and
pop
mov
cmp
fincstp
in
mov
add
sti
sub
jg
inc
aam
roll
nop
cmpsb
ds
push
mov
stos
ss
call
inc
dec
out
or
add
sub
inc
mov
daa
sub
jp
ja
lods
pop
aad
jo
cmpsb
cmc
lea
movsb
andb
in
jae
sub
in
push
jle,pt
or
shlb
mov
and
mov
xlat
stos
mov
scas
adc
daa
or
cmp
jno
add
jne
mov
and
dec
sti
push
push
jbe
sbb
jge
daa
xor
pop
jmp
pop
icebp
or
jmp
dec
mov
push
jle
push
inc
imul
add
mov
out
mov
mov
sarb
cmpb
jno
testl
sub
pop
addb
push
imulb
int
inc
ss
shlb
or
xchg
sub
jae
hlt
sbb
sbb
int
ja
ja
rcrl
dec
fists
shr
cmp
data16
lcall
cmpsl
push
mov
push
shll
ss
enter
sub
arpl
addr16
xor
inc
rol
xor
mov
adc
loope
icebp
test
push
iret
fsubrl
jns
lock
jp
cmpsl
xchg
xor
mov
rcl
sbb
xchg
mov
push
in
adc
mov
cltd
push
aam
or
mov
out
aas
cmp
sub
rcrl
push
outsb
and
pop
out
mov
cmp
sub
dec
loopne
fwait
stos
jbe
mov
nop
in
push
popf
dec
push
jns
xchg
scas
mov
push
test
push
mov
ljmp
pushf
scas
leave
and
fdivrp
xchg
adc
mov
jne
cltd
jmp
cpuid
inc
fcmovne
push
repnz
jbe
pop
hlt
fnsave
and
ds
mov
std
aas
movsl
xchg
dec
jg
sub
pop
repz
fwait
movzbl
fs
jecxz
pop
rcl
arpl
mov
dec
jle
jnp
and
insl
xchg
mov
or
fstpl
sub
in
test
mov
arpl
jle
lods
outsl
dec
xchg
int
jbe
out
xor
adc
dec
lret
mov
push
data16
push
inc
mov
push
neg
mov
call
mov
daa
nop
fwait
andl
lods
sub
jb
sub
mov
daa
adc
cmp
sub
mov
int3
fidivrs
subl
or
or
push
mov
test
pop
push
mov
rorl
shr
pop
pusha
push
sti
push
xchg
cmp
push
leave
aam
xchg
test
scas
test
xor
out
sbbl
pop
xor
rcrb
push
sahf
cmc
or
xor
mov
jecxz
cs
add
xchg
test
fs
inc
jp
iret
fisttpl
es
inc
aad
sbb
dec
mov
lahf
jl
lock
sti
aas
mov
in
inc
push
cli
jg
lea
fsubrp
sub
fcoms
sub
into
cmp
sub
cmp
aam
outsb
dec
xchg
cmp
sahf
pusha
aad
sbb
inc
sahf
mov
xor
pop
popf
in
adc
xor
cmp
mov
pop
loope
popf
inc
shlb
sahf
inc
mov
xchg
push
call
jmp
mov
int
jno
inc
jle
lods
pop
sbb
iret
sub
fwait
jo
stc
or
push
sbb
cmp
mov
jge
inc
lret
stos
jmp
cli
cmpsl
mov
pop
xchg
sbb
jle
push
push
inc
mov
mov
push
jb
fsubrl
sbb
xchg
pusha
dec
cmp
lea
cmp
mov
movups
inc
leave
mov
nop
imul
mov
push
mov
adc
inc
add
rolb
leave
pop
add
mov
jle
adc
negb
pop
shlb
lret
aam
pop
push
adc
out
and
test
mov
pushf
mov
xchg
es
or
inc
push
inc
dec
sub
rolb
loope
std
dec
rcl
adc
les
ss
push
je
stos
jmp
and
nop
ds
jo
cmp
inc
xchg
dec
addr16
lock
aaa
sub
das
cmp
popa
sub
adc
loopne
je
movsl
pushf
test
sub
push
xchg
pop
lds
mov
cmpsl
outsb
test
call
adc
jge
xor
ret
dec
fnstenv
or
push
repnz
mov
inc
pop
enter
popf
push
or
add
lcall
inc
sub
pop
sti
mov
sbb
mov
mov
pop
sbb
cmp
or
hlt
adc
add
sub
sub
test
pop
rcrl
repz
or
adc
sti
jp
push
outsb
inc
pop
mov
sahf
ror
iret
add
shlb
mov
push
jns
sahf
cmp
cld
aam
xor
cmp
mov
outsb
pop
dec
out
lods
aad
fisttpll
stos
aam
push
sub
pop
adc
mov
mov
fstp
xor
dec
ja
jne
insb
hlt
jle
cmp
pop
pusha
or
insl
orb
mov
add
movsl
mov
and
aas
or
jp
cmp
imul
mov
movups
rol
cmp
mov
test
inc
dec
imul
test
cmp
pop
push
call
push
sbb
adc
mov
xor
aam
aas
push
mov
xchg
xor
inc
jmp
pop
test
jge
clc
push
lods
mov
and
iret
xorb
adc
fisubrs
aam
test
inc
pusha
in
cmpsl
or
enter
mov
push
sbb
mov
jne
lock
cmp
lcall
jne
mov
push
xchg
pop
test
sbb
xchg
push
out
movl
mov
cmp
pop
mov
test
adcb
add
ja
pop
and
pop
idivb
in
pushf
mov
insb
int
ror
push
stos
and
adcb
aaa
and
sar
dec
or
out
in
test
test
fnsave
aaa
mov
in
sbb
jl
bound
pop
addr16
pop
ljmp
sbb
lret
ret
adc
push
pushf
test
push
outsl
shr
xor
imul
sub
xor
pop
mov
mov
lret
jae
inc
test
stc
in
gs
icebp
mov
sbb
sbb
mov
sbb
nop
pop
pop
cld
push
cltd
inc
mov
je
or
or
cmpsl
stos
stos
nop
xchg
add
mov
cmpsl
int3
fs
pushf
xchg
loope
ja
ljmp
rorl
lds
and
sbb
dec
sub
dec
add
xchg
jns
mov
add
into
add
iret
pop
push
ficomps
adcb
cmp
sub
aad
push
or
jl
xchg
sub
lret
xchg
popf
sbbb
sub
xor
dec
mov
hlt
lcall
cli
and
sub
outsb
lcall
cmpb
loop
incb
sbb
pop
pushl
and
sub
xchg
fldl2t
stc
aad
out
lds
imul
pusha
lock
into
je
lret
aad
add
mov
into
dec
cmpsl
loope
mov
cmp
je
sub
fsubr
insl
push
and
mov
daa
and
rclb
or
dec
xchg
cmp
icebp
xchg
aam
int3
mov
pop
push
mov
mov
dec
jl
sub
push
sub
push
rcr
inc
scas
mov
popf
stc
rcr
lret
lret
add
adc
fnsave
shll
dec
or
dec
or
push
mov
cld
mov
inc
mov
insl
mov
push
and
jae
sbb
cs
out
lods
push
pop
cmp
shlb
sti
cmp
test
aaa
or
cld
jle
dec
xchg
lock
xor
push
in
movsl
jb
and
testb
pop
mov
syscall
mov
sarb
fimull
mov
out
xlat
cmp
cwtl
outsl
mov
or
enter
pop
ja
sti
ds
std
nopl
xor
cs
fsubr
jp
xchg
push
cmp
addr16
pop
loope
mov
clc
int
outsl
xchg
jge
loope
or
xchg
pusha
xchg
push
test
es
call
movsb
js
aam
mov
repz
jl
jno
xchg
popf
adc
mov
jp
outsl
dec
push
add
cli
xor
roll
sbb
push
je
xchg
insb
ret
pop
cld
push
outsb
xlat
push
add
arpl
js
mov
sub
jbe
aad
dec
loopne
aas
cmp
aam
and
fs
outsb
cld
xchg
cmpsl
out
jbe
cmpsb
test
in
ss
sub
decl
and
call
cmp
sub
adc
push
mov
icebp
mov
jbe
outsb
rcrb
fldenv
imul
jnp
iret
or
testl
mov
push
inc
sbbl
aam
sbb
jle
adc
push
add
or
outsl
cli
xor
addr16
adc
cltd
das
xchg
incl
fmulp
xchg
ljmp
jp
dec
stos
testl
add
aas
fcoms
xor
mov
les
lret
adc
ret
cmc
insl
sbb
pusha
push
add
roll
stos
cmp
xor
xor
into
mov
sbb
cmp
adcl
sbb
mov
adc
lock
adc
es
jb
inc
out
and
repz
jle
fldcw
shll
jl
pop
scas
subb
xor
sbb
add
push
pop
enter
insl
fwait
xor
cld
inc
das
shrb
xlat
js
dec
jecxz
lcall
xchg
adc
pushf
test
mov
mov
fcmovbe
lods
leave
bound
bound
movsb
fsubrl
or
shll
sub
sti
mov
mov
push
sub
out
scas
popf
out
fldlg2
in
push
sbb
dec
nop
pop
pop
lods
iret
out
clts
stc
cmpps
fists
inc
or
aaa
mov
in
cmp
xchg
push
mov
mov
lods
stc
sbb
ja
sahf
sub
icebp
and
mov
orb
fdivl
insl
adc
repz
stc
lahf
mov
pop
cmovb
shlb
cwtl
hlt
js
in
sub
or
cmp
mov
leave
leave
inc
dec
and
iret
lahf
push
pusha
mov
dec
push
paddusw
in
jmp
or
loopne
gs
pop
inc
daa
jmp
jmp
jle
mov
mov
mov
jne
jo
js
mov
sbb
insb
sbb
mov
cmpsb
push
inc
mov
xchg
mov
xorb
push
and
jns
faddp
cmpsb
xchg
scas
mov
mov
adc
push
fs
xchg
das
xchg
jmp
cmpsl
push
cmp
or
sbb
xor
mov
cmp
test
sub
jns
inc
aas
adc
mov
sub
mov
outsb
jl
loopne
mov
mov
xchg
and
out
jnp
xchg
enter
inc
subb
lods
hlt
aad
ljmp
mov
lock
insl
rcrl
xchg
jmp
cmp
xor
aad
push
inc
popa
push
loope
rcrb
pop
jl
inc
gs
or
mov
mov
mov
jbe
rcrl
mov
aam
dec
clc
inc
sbb
outsb
xchg
sub
dec
mov
mov
addr16
ret
or
dec
add
outsl
mov
inc
cltd
jg
outsb
fwait
pop
mov
push
mov
push
mov
add
xchg
icebp
mov
fildll
testb
sub
xchg
aad
fldlg2
hlt
jg
mov
adc
addr16
sbb
adc
fwait
subl
scas
ret
mov
pop
pop
mov
xchg
dec
sbbl
subb
jp
clc
sbb
das
inc
in
push
cmp
sbb
mov
push
push
inc
inc
or
and
stos
push
jno
cmpsl
mov
stc
lds
fimuls
test
jmp
or
fistpll
xor
in
jp
mov
sbb
push
push
cmp
movsb
ljmp
adc
sbb
add
push
std
ss
mov
adc
add
insl
and
dec
imul
and
xchg
add
insb
push
dec
add
xor
mov
push
pop
pop
add
mov
frstor
jae
aam
popa
bound
push
lret
or
xchg
cwtl
lock
mov
add
jge
hlt
insl
stc
outsb
aaa
call
into
mov
outsl
mov
cmp
add
and
jmp
sub
mov
mov
cmp
ret
mov
mov
decl
test
popa
pop
cmc
mov
addr16
daa
cltd
and
xor
xor
xor
push
add
pop
sti
cmp
push
fs
test
sbb
mov
push
xor
dec
test
push
cmp
mov
xlat
mov
push
xchg
das
lcall
add
jmp
shrb
mov
out
repnz
scas
xchg
nop
mov
or
add
push
loop
popf
sub
sbb
cmpsb
jo
lret
inc
fadds
pop
jbe
push
adc
sub
pop
add
cmpsl
jns
sub
xor
mov
js
pop
es
incb
inc
xchg
out
cwtl
inc
mov
out
popa
ja
or
jecxz
mov
or
jno
daa
add
adc
pop
sbb
mov
shr
mov
dec
pop
or
js
repz
test
jmp
cmp
push
out
fisttps
dec
add
aad
push
and
dec
inc
add
insl
lret
xchg
fistpll
push
dec
call
push
test
sahf
or
inc
lods
fildll
or
je
inc
loopne
jnp
gs
iret
pop
sbb
mov
mov
and
mov
add
xchg
rclb
fdiv
mov
pop
lahf
jne
mov
add
cvtps2pi
mov
xor
adc
jae
jns
and
call
pop
push
mov
loopne
jne
les
cmp
or
mov
bound
xchg
std
outsl
insl
inc
mov
mov
jo
sub
mov
mov
inc
test
dec
mov
fnsave
lods
iret
sbb
mov
mov
xor
into
ss
ljmp
bound
adc
cmp
in
sub
clc
inc
mov
aas
jo
xor
cmpsb
loopne
mov
clc
adc
inc
push
clc
ja
jae
mov
int
add
lock
mov
dec
cmpsb
gs
cmp
mov
and
adc
mov
fbstp
adc
lret
pop
movsl
add
ja
lret
aaa
cmp
pop
mov
popf
push
and
inc
lds
mov
iret
mov
cmp
sbb
icebp
mov
add
mov
jecxz
jmp
pop
dec
test
lahf
js
lea
cmp
sbb
arpl
mov
scas
ret
xor
xlat
cmc
mov
add
inc
push
mov
scas
aaa
mov
mov
jns
mov
or
jno
xchg
mov
test
cmp
xor
fisubrs
shrb
dec
loop
xchg
add
and
rcll
mov
lods
push
push
popa
scas
mov
loope
push
lods
jne
fbstp
and
iret
xchg
dec
adc
pop
jae
loope
jle
sahf
sub
jae
fcompp
mov
shrl
clc
push
add
out
pop
push
movsb
mov
andl
sbb
sbb
dec
dec
scas
jl,pt
mov
shlb
jne
add
mov
js
xor
dec
leave
push
xchg
xor
cs
aaa
cwtl
fadds
aam
pop
pop
pop
pop
mov
mov
dec
roll
fwait
inc
mov
ret
rcrb
call
ds
push
xor
jle
or
stos
sbb
aas
jbe
test
dec
repz
adc
sbb
int3
mov
mov
clc
add
inc
sub
push
mov
ret
jle
in
inc
push
xor
out
xchg
nop
mov
sahf
and
shlb
add
push
shl
xchg
loope
xchg
cmp
lcall
cwtl
mov
mov
mov
cwtl
out
adc
xchg
stos
or
sbb
cmpsb
fistl
stos
daa
shrb
inc
les
and
dec
pop
scas
cmp
and
or
pop
jle
mov
pop
scas
outsl
sbb
loopne
ss
imul
lcall
adc
xor
ja
les
lock
jae
out
and
mov
test
xor
imul
inc
sbb
xchg
decb
xchg
jae
scas
dec
lcall
mov
xchg
push
shrl
cmpsb
jmp
dec
or
or
into
adc
push
int
inc
mov
int
out
dec
cmp
int
ss
xor
dec
mov
loopne
push
lods
push
mov
arpl
or
sti
and
repz
ds
data16
cmp
imul
push
lret
lret
pop
jae
in
adc
gs
rorb
jecxz
adc
jmp
adc
push
out
nop
mov
cwtl
push
xor
fiadds
lods
aam
push
lods
push
adc
jmp
fnsave
out
insb
xchg
ljmp
jne
sbb
clc
add
xchg
mov
or
dec
in
jp
scas
inc
mov
lcall
fdivs
cmp
in
movsl
sbbl
out
pop
add
test
ja
aaa
mov
inc
mov
int3
fsubl
lret
je
in
popl
mov
add
and
adc
inc
pop
cwtl
jo
sbb
pop
mov
clc
mov
test
sub
cmp
aaa
jmp
cmpsl
cmp
rol
pop
push
push
je
pop
fmull
scas
mov
subb
shrl
pushf
jl
lret
out
jno
mov
xchg
pop
or
cltd
mov
lret
addr16
sbb
movsb
shrl
xchg
insl
in
and
dec
adc
pop
lods
icebp
sahf
xor
or
mov
mov
mov
and
iret
mov
enter
pop
es
pop
add
mov
enter
test
dec
ljmp
scas
cmp
into
pop
cmpsl
dec
pop
pop
pop
push
lcall
in
stos
fidivrs
push
add
gs
xor
mov
mov
or
and
ficomps
out
jl
div
cltd
sub
pop
repz
inc
push
cwtl
js
adc
jle
xor
lods
jg
push
icebp
fldlg2
movsl
mov
jae
clc
fnsave
sbbl
js
call
xor
out
cmp
out
jle
mov
lods
pusha
clc
loope
and
out
lock
and
shl
aas
or
jl
ja
scas
movsb
cmc
mov
lret
sti
pop
or
mov
jp
xor
into
fcoml
mov
call
pop
inc
dec
pop
scas
mov
divb
cmp
dec
dec
pop
jge
ss
xchg
jp
in
and
sbb
dec
push
jge
adc
ud1
jmp
add
jno
dec
push
je
pop
cmp
mov
sbb
xchg
fs
mov
mov
cs
fwait
pop
mov
cwtl
test
jecxz
xor
scas
inc
cld
mov
int
adc
jb
imul
stc
and
xchg
and
ja
or
stc
outsl
rcrb
mov
cmp
mov
insb
es
jmp
pop
lahf
test
int3
jmp
fidivl
call
mov
ss
add
notb
cmc
mov
enter
or
inc
sub
cmpsb
sbb
fstpt
xor
cmc
or
jmp
push
jns
rcll
add
sbbb
jo
mov
mov
cltd
mov
mov
in
jge
and
or
in
pop
sbb
dec
mov
jnp
pop
cwtl
xor
insl
int3
pop
jnp
mov
push
fstps
insb
test
scas
adc
aas
inc
iret
mov
popf
cmp
push
cmp
out
pushf
lahf
arpl
or
inc
cltd
es
fisubrl
and
pushl
push
jp
lea
es
cmp
pushf
scas
stos
mov
testl
inc
lahf
es
push
loopne
in
jbe
mov
cmpb
je
sbbl
dec
jnp
push
sbb
movsl
repz
or
aad
popf
push
lds
ss
repz
inc
fadds
xor
mov
or
test
testb
movsb
imul
fnstcw
loope
sarb
jbe
xor
in
pop
shr
test
mov
dec
cmp
and
pop
cmc
pop
pop
adc
jl
fdivr
xchg
loope
sti
fwait
lds
ja
inc
push
out
leave
popf
push
in
shl
mov
fimuls
data16
shl
xor
out
andl
or
rep
pop
icebp
xchg
popa
cmc
mov
mov
xchg
inc
xor
mov
addl
mov
mov
fldenv
cmpsb
mov
or
xchg
mov
in
pop
loope
add
outsb
das
push
aad
shlb
loope
and
shrb
sub
mov
xchg
sbb
dec
mov
cwtl
lods
lcall
sbb
ds
dec
mov
clc
fs
xchg
test
scas
and
sbb
out
in
outsb
test
mov
mov
incb
pop
or
or
xchg
cmovo
movsl
andb
pusha
sub
pop
sub
ss
and
cmp
test
push
loop
xor
dec
mov
mov
out
std
and
dec
dec
in
sbb
cs
imul
mov
pop
out
inc
out
les
jle
pop
repz
jp
mov
pop
sbb
sar
cmpsb
scas
cmc
jae
mov
mov
clc
inc
jo
mov
push
dec
sarl
idiv
jmp
dec
lods
faddl
or
cli
jge
mov
jg
test
xchg
mov
jge
inc
sti
lods
mov
cmp
enter
dec
cld
xchg
sarl
sahf
inc
mov
aaa
stos
pop
push
mov
jns
pop
cmpsb
out
adc
xchg
jae
sahf
xor
inc
push
sbb
add
adc
shll
rcrb
bound
lret
push
aas
sarl
jmp
fisubl
jnp
mov
iret
rcll
xchg
pop
pusha
adcb
fadds
pop
mov
dec
pop
xor
adc
mov
mov
dec
jnp
adc
pop
adc
std
aaa
mov
inc
mov
into
jmp
or
imul
sub
add
xor
lods
inc
cmc
aad
mov
popf
lret
insl
outsl
loop
cmpsl
push
push
lods
pop
outsb
sub
lods
xor
lds
xchg
or
push
imul
sbb
mov
je
daa
leave
inc
mov
test
cmp
pushf
mov
jge
mov
pop
or
mov
in
rorl
push
loop
cmpsb
xor
imul
or
xchg
mov
adc
and
push
jo
in
push
push
and
mov
xor
xchg
loop
and
push
pushf
or
cwtl
xlat
lock
cmp
push
add
xchg
stc
mov
and
xchg
pop
out
hlt
call
xchg
ret
clc
sub
dec
jg
push
ret
hlt
xchg
nop
imul
or
outsb
into
jae
xor
sbb
ds
dec
fsts
shrl
sub
jb
and
sub
dec
push
out
outsl
xchg
jmp
dec
nop
jne
dec
cwtl
cltd
movsb
inc
jns
adc
fs
lock
loop
sub
mov
or
add
cmpsb
test
push
fs
sti
pop
data16
jg
inc
jno
movsl
lock
popf
mov
cmc
push
pop
adc
xlat
lcall
pop
lret
cmp
stc
addr16
call
pushw
inc
lods
mov
fnstenv
jns
sbb
pop
xchg
sub
rcrl
stos
popf
cmpb
push
sbb
aaa
into
jb
icebp
xchg
dec
loop
bound
pop
mov
inc
pop
lahf
cmpsl
scas
inc
cmp
jb
push
into
aas
popa
bound
jb
jp
es
movsb
xchg
push
ds
xchg
jo
xor
cwtl
mov
pop
loop
pop
xor
mov
addr16
ret
mov
mov
fsqrt
pop
icebp
mov
subb
jae
mov
adc
xchg
mov
sub
mov
pop
mov
or
jge
fisttpl
sbb
mov
clc
sbb
jle
dec
leave
in
dec
add
add
sub
pop
push
xlat
ds
inc
xlat
xor
xchg
pop
stos
mov
popf
scas
inc
cmp
inc
fildl
int
and
cmpsl
cli
xchg
fsts
cltd
enter
add
mov
cmpsb
lea
shrl
cwtl
icebp
insb
es
xchg
and
sti
lahf
mov
insl
mov
xchg
jb
xor
fcomps
sbb
flds
dec
xchg
push
mov
adc
rcrb
rclb
lret
push
aad
movsb
push
js
data16
out
inc
pop
jb
add
test
pop
push
push
pop
mov
push
lcall
push
or
cmp
sub
in
stos
es
pop
mov
adc
clc
mov
xor
iret
xchg
mov
imul
imul
je
test
neg
and
stos
push
sti
ja
adc
scas
mov
mov
cld
rol
outsl
and
and
inc
fwait
mov
imul
inc
adc
sbb
std
push
js
cmpsb
push
js
sbb
imul
hlt
addr16
aam
and
lahf
fisubrs
pop
push
lock
sbb
xchg
dec
cmp
adc
shrb
cltd
mov
adc
adc
inc
repnz
mov
mov
ja
shrb
lahf
push
sti
cmpb
jb
adc
xchg
jge
sub
xchg
call
enter
dec
in
leave
or
xchg
shlb
movsl
fsubrs
push
push
mov
dec
inc
out
into
mov
sub
mov
lock
je
add
pop
ja
std
nop
test
jno
jge,pn
mov
movsb
shlb
or
pushf
mov
inc
aam
test
push
inc
rclb
fnstsw
push
push
dec
mov
jg
mov
scas
inc
mov
test
mov
js
and
xchg
inc
push
sbb
inc
xchg
or
jge
cwtl
and
fimull
daa
outsl
leave
push
xchg
xchg
divb
and
subl
or
stc
pusha
addr16
push
mov
mov
push
mov
xor
xchg
int
into
mov
aas
mov
add
cs
cmpb
inc
mov
dec
pop
adc
xchg
lea
ja
inc
arpl
pop
mov
adc
sub
cmp
fmuls
scas
call
xchg
xchg
test
xorl
imul
outsb
loope
push
add
je
sbb
mov
jl
pop
and
pop
lea
xrelease
dec
imulb
mov
xchg
sub
arpl
rol
push
add
ds
test
in
xchg
fucomi
pop
xchg
ror
bound
mov
xchg
enter
jne
lahf
gs
xchg
xchg
sub
cmp
insl
add
ss
lods
inc
loopne
repnz
scas
in
xchg
lcall
rcl
mov
inc
dec
loop
sub
and
cmpsl
push
pop
leave
pop
xchg
aam
push
lret
jle
inc
lock
outsl
add
adc
ss
out
shl
dec
adcb
das
xor
movsb
mov
inc
sub
jle
xchg
mov
cltd
cld
fwait
dec
jno
sti
es
xchg
inc
orb
rclw
insb
sub
and
mov
frstor
daa
jp
xchg
dec
call
jge
pusha
ficompl
push
mov
inc
es
jl
sub
or
or
lods
jge
mov
cmp
pop
nop
stos
and
push
jb
adcl
into
add
sbbb
scas
out
xchg
mov
mov
adc
jg
loopne
cmp
daa
mov
dec
in
ret
jmp
mov
or
adc
call
scas
out
in
ljmp
out
xchg
icebp
xchg
pop
xchg
mov
push
sbb
push
out
xchg
pop
pusha
subl
pop
xchg
xchg
xchg
jns
fbstp
push
push
jmp
shrb
es
ljmp
cwtl
rol
sub
pop
dec
popa
ret
cmc
jle
inc
mov
pusha
stos
and
pop
push
cmp
cmp
arpl
pusha
fstpt
push
popa
lret
mov
jle
rcl
mov
cwtl
cmpb
das
xchg
jne
or
mov
push
mov
cmpsb
daa
or
hlt
or
mov
pop
sub
dec
outsl
dec
or
shll
sbbl
popf
divl
dec
data16
das
or
sti
mov
xor
push
mov
shr
inc
xlat
mov
sbb
inc
adc
mov
subl
insb
dec
pop
inc
js
mov
xchg
test
ret
pop
inc
pop
dec
mov
in
mov
push
call
xchg
das
cmc
lds
fcompl
fisttpl
andb
shll
pop
cmpsl
call
pop
mov
rep
mov
loopne
push
add
fwait
inc
pusha
pop
loopne
aad
repnz
push
mov
fwait
jmp
dec
pushf
pop
into
imul
data16
outsb
or
inc
imul
cltd
in
xchg
sub
mov
scas
inc
jnp
xchg
sbb
ja
sub
stos
push
iret
adc
test
repnz
fs
xchg
xor
xchg
nop
or
leave
xor
adcb
lcall
cmc
pop
xor
cmp
sbb
mov
data16
dec
mov
mov
sbb
mov
add
cmpsb
test
push
in
sbb
jge
into
mov
sbb
mov
mov
std
and
dec
mov
jo
jl
mov
inc
push
je
fwait
cmpsl
mov
mov
push
lods
jecxz
pop
xchg
mov
fidivs
mov
ja
xchg
fdivp
outsl
fucomp
rcrl
mov
mov
mov
mov
cli
sarl
fnstsw
lea
jae
js
adc
and
sub
pop
lods
dec
fsubs
test
arpl
adc
and
lcall
cs
out
ds
notl
popl
mov
jmp
dec
cld
jle
pop
fs
adc
and
mov
adc
out
sbb
cmp
dec
movsl
js
lret
int3
clc
jecxz
cmpsl
loope
pop
cmp
xchg
idivb
stc
loop
mulb
cs
fldcw
xchg
inc
sbb
jbe
mov
mov
insl
adc
and
into
mov
sbb
imul
daa
push
ss
leave
out
inc
cmp
fs
mov
xchg
mov
jp
lret
adc
dec
add
mov
jns
pop
lea
push
or
ja
icebp
movsb
jecxz
mov
cmpsb
jecxz
in
pop
divb
pop
addr16
icebp
mov
js
in
mov
shll
cmp
sub
in
icebp
repnz
jno
jno
xor
sbb
or
int
adc
bnd
add
and
or
push
cmp
jl
sub
push
mov
mov
xchg
insb
sbb
scas
es
mov
jge
in
jne
adc
fdivrl
push
enter
jno
sub
or
inc
aaa
ja
push
push
sbb
icebp
dec
in
dec
sbb
cmpsl
cli
lds
sbbb
inc
inc
mov
dec
or
xor
xor
notb
repz
pop
push
and
mov
xchg
push
out
dec
mov
movsl
stos
addr16
jmp
aas
sub
jbe
jp
cmp
jge
sbb
cmp
cmpsb
and
xchg
repz
mov
pop
test
push
movsb
fimuls
ljmp
aas
dec
call
xchg
or
stos
stc
hlt
daa
xchg
add
push
es
or
mov
mov
pushf
mov
mov
push
popf
mov
ret
and
mov
ret
and
rcll
dec
jne
jnp
dec
push
mov
movsb
subb
repnz
sbb
cmp
jp
into
mov
popf
loope
mov
pop
fisttpll
inc
sub
adc
xchg
and
lahf
cmp
or
pop
xchg
sub
sbb
sbb
sbb
imul
lods
inc
ficomps
pop
repnz
aas
add
pop
sbb
xchg
push
or
ja
rolb
loop
out
push
add
pushaw
sbb
xchg
dec
xlat
pusha
mov
jecxz
es
cld
push
dec
inc
add
pop
imul
xor
iret
mov
mov
int3
add
adc
mov
es
cmp
jmp
add
adc
sahf
out
xchg
nop
lmsw
pop
es
jo
dec
xchg
mov
xlat
cmp
enter
cmc
jmp
xor
fistl
jo
xor
sbb
scas
not
xchg
push
mov
fisttps
aad
mov
mov
popa
ret
sbb
cmp
hlt
aas
xor
jnp
push
rclb
daa
stos
in
mov
test
pusha
popf
fcoml
imul
and
les
cmp
imul
mov
mov
xchg
dec
fs
push
inc
dec
add
ja
mov
loopne
jle
jae
inc
ljmp
pop
dec
mov
xorb
xchg
xchg
mov
fistl
add
movsl
pop
pop
adc
xor
scas
jno
inc
test
cmc
rcr
sub
frstor
lcall
add
rol
cmpl
sub
mov
lret
jb
rorl
lds
mov
pop
pushf
nop
mov
imul
sbb
jns
cld
icebp
int
adcb
pop
adc
repnz
xor
je
dec
push
arpl
movsb
ja
ror
aas
lods
push
lds
or
dec
cmp
xchg
insl
stos
dec
les
push
lods
or
push
mov
pop
pop
mov
frstor
xchg
or
lcall
and
xchg
pop
outsb
add
mull
stc
mov
add
test
or
cmc
mov
or
inc
inc
add
out
fstl
lods
popa
shll
xchg
loope
aas
pop
xor
or
push
dec
shrl
ja
dec
imul
daa
pushl
jge
out
jle
jo
jle
in
mov
or
aas
shr
pop
xchg
pop
int3
cmp
inc
out
inc
xor
mov
test
andl
cmp
addr16
in
jae
pop
sub
push
cmp
push
movsb
sub
xor
adc
add
sbb
sbb
nop
lods
pop
fsubs
dec
loop
push
or
aad
jg
je
sbb
inc
mov
xorl
dec
int3
dec
js
dec
fisubl
mov
adc
orb
testb
insl
adc
ss
cmpl
popf
push
repz
mov
and
ja
xor
pop
and
jle
lret
jns
mov
lock
cmp
call
orb
sub
mov
mov
mov
bound
or
pop
add
insl
sbb
jbe
rep
sub
or
adc
dec
push
cltd
jl
shrl
cmp
xor
cwtl
mov
push
cltd
and
adc
dec
push
mov
dec
out
dec
or
push
mov
iret
xchg
sti
loop
ss
mov
test
inc
or
js
pushf
pop
imul
aam
mov
cmpsl
outsb
add
outsb
mov
jle
bound
mov
out
mov
mov
movsl
push
jmp
lods
fs
stos
stc
jp
jo
pop
repz
stos
add
adc
mov
loop
inc
or
xorl
add
adc
push
adc
stos
push
shlb
xchg
mov
orb
cwtl
dec
aam
lahf
idivb
mov
movsl
mov
std
stos
inc
out
cwtl
xchg
push
mov
scas
mov
mov
je
int3
arpl
or
into
into
loop
pop
and
push
jle
jp
aas
lahf
cltd
ss
push
and
imul
call
mov
enter
inc
ljmp
pop
cmp
dec
lcall
jb
fdivrl
push
daa
stc
nop
pop
das
inc
fbstp
sub
ljmp
rcr
ds
mov
cs
icebp
adc
sbb
jb
sahf
es
dec
xlat
mov
mov
gs
or
sbb
out
loop
mov
push
jnp
imul
stos
adc
testb
sbb
mov
push
mov
or
add
mov
mov
adc
iret
push
out
testb
mov
jbe
pop
test
mov
push
je
and
into
jns
iret
cs
adc
push
js
cld
pop
mov
iret
add
inc
xorb
inc
xchg
clc
sub
push
sbb
pop
lds
mov
sub
push
mov
mov
stc
sub
pop
pop
subl
mov
and
lea
int
mov
xchg
frstor
mov
rcl
dec
mov
leave
dec
fst
mov
inc
inc
xor
fsubrl
inc
mov
dec
adc
sub
in
jle
dec
dec
mov
cmp
imul
mov
mov
mov
clc
or
cmpsl
iret
push
or
cmp
and
testl
inc
lret
ror
hlt
hlt
mov
add
mov
fists
mov
decb
pop
les
das
sbb
xchg
ja
es
mov
inc
pop
adc
mov
mov
loop
adc
es
pushf
sbb
les
jnp
lea
sar
xchg
push
dec
xor
or
inc
scas
sub
test
or
push
dec
sbb
daa
cmp
cli
mov
push
jnp
xor
ss
in
pusha
pop
and
fstl
pop
insl
push
sub
insl
cmc
imul
ret
jnp
push
scas
stos
out
add
cmp
xchg
dec
pop
dec
push
dec
out
xor
jnp
xor
hlt
inc
adc
or
push
push
lods
jno
xchg
or
lret
imul
cltd
adc
sub
mov
or
movsl
call
js
fcoms
mov
mov
hlt
addr16
rcl
add
daa
push
adc
cld
inc
inc
fwait
sbb
imul
pushf
pop
mov
repnz
push
lds
pop
mov
sbb
scas
cmpsl
cmp
movsb
and
mov
cld
mov
push
adc
push
jne
hlt
jo
nop
xor
or
mov
cmp
xor
ss
and
ret
and
pop
push
aaa
incb
mov
lret
cwtl
mov
enter
push
lds
mov
in
push
xlat
xchg
cmp
lods
movsb
and
rcl
fisubrs
push
adc
pop
cmp
sbb
fs
dec
and
cmc
fcoml
jg
outsb
or
jo
aad
sarl
imul
sti
sbb
pop
jp
aas
pop
imul
or
pop
xchg
cmp
imul
and
popa
mov
ficoml
cli
adc
das
add
xchg
add
mov
mov
nop
jnp
into
xlat
pop
arpl
enter
xchg
add
inc
test
push
filds
ret
jae
or
outsl
dec
jl
jle
xchg
pop
hlt
dec
lcall
pop
stos
ss
addb
aad
rorl
in
mov
jge
sbb
pushf
xchg
test
loope
pop
adc
xlat
pop
mov
mov
add
lret
and
and
movsb
and
dec
sbb
mov
cmpsl
enter
cmp
int3
mov
mov
push
popf
pop
mov
aam
lds
fisttps
push
or
ret
push
add
std
pushf
gs
mov
pop
xor
mov
icebp
mov
mov
insb
adc
jne
fdivl
jne
cltd
pusha
or
cmp
data16
cltd
add
stos
movsl
jp
cmpb
sbb
imul
push
mov
mov
cmp
push
mov
sub
jnp
stos
cld
pop
repnz
mov
and
stos
inc
out
cltd
loop
test
cwtl
mov
ret
xchg
divb
xchg
and
sub
repnz
jns
or
add
aad
push
mov
cmc
or
inc
fyl2xp1
push
or
into
lahf
mov
in
sub
dec
das
adc
mov
bound
xchg
xchg
add
jne
lret
sbb
out
jge
xor
stos
dec
repnz
shlb
pop
or
sub
adc
sub
add
sti
xchg
sub
fwait
dec
lock
aaa
rolb
data16
mov
out
inc
cmp
dec
pop
fmulp
mov
jns
inc
sahf
lcall
int3
push
inc
rol
xor
add
fbld
mov
push
adcb
in
pop
jl
leave
lahf
xchg
mov
cld
in
in
pop
mov
fs
adc
xor
cmp
arpl
push
mov
or
dec
das
mov
dec
dec
pop
sti
mov
jno
sub
sbbl
dec
sbb
cmpsl
lea
into
insb
xchg
dec
cmp
inc
das
and
push
nop
jb
aad
sub
or
add
or
mov
mov
enter
cli
mov
movsl
xor
or
test
sbb
or
add
addr16
push
jl
mov
xor
bound
jge
push
bound
sti
fisubs
mov
jl
push
arpl
cmc
mov
jecxz
jmp
sub
out
cmp
stc
mov
sub
shl
sbbb
es
sbb
lods
jmp
mov
outsl
push
inc
test
cmp
outsb
dec
lret
pop
stos
das
push
mov
cltd
loopne
gs
add
stos
das
xor
int
out
xchg
inc
push
into
xchg
jle
pop
xlat
and
loope
and
mov
add
mov
imul
icebp
ret
sarl
push
fbstp
fbld
imul
fs
pusha
test
push
call
xchg
call
cmc
xchg
mov
mov
add
loopne
pop
xchg
adc
mov
lret
sbb
inc
out
lods
repz
add
adcl
xchg
cmc
dec
mov
lea
xor
or
add
pop
insb
adc
sbb
sub
xchg
call
xor
xchg
mov
in
aas
cli
jns
mov
lret
mov
add
movsb
adc
adcl
shrb
mov
mov
or
adc
and
bound
imul
les
lods
addr16
js
mov
orb
jo
clc
fs
outsl
mov
xchg
jle
jne
dec
xchg
mov
loope
mov
loope
bound
leave
add
sbb
ret
adc
cmp
gs
int3
lea
xchg
and
adc
add
xchg
xor
dec
jo
test
jns
inc
popl
inc
scas
in
dec
insl
pop
jmp
ljmp
mov
or
xchg
pop
das
test
dec
jo
stos
gs
decl
sbb
fs
cmc
setle
xchg
adc
lret
xchg
repnz
into
jge
fnsave
push
andb
cmpsb
xor
sub
imul
fiadds
cld
add
out
fwait
or
ret
repnz
sub
jmp
pop
faddl
sbb
adc
push
jge
stos
fnsave
iret
arpl
rcrb
sub
mov
call
mov
adc
aad
stc
mov
mov
adc
push
xchg
inc
push
xlat
sbb
xor
repz
enter
mov
push
jne
dec
push
out
repnz
mov
cmp
lods
repz
lds
inc
mov
inc
das
in
fdivs
ds
adc
addl
xchg
sub
xorl
bound
stc
jo
rcrl
mov
std
dec
mov
push
loope
idivl
sbb
fcoms
mov
jg
sub
dec
movsb
adc
mov
cmpsb
adc
inc
xchg
dec
fidivl
or
loop
in
dec
pop
out
cmp
jmp
rolb
enter
lahf
cmpsl
cmp
pop
mov
shlb
adc
bound
dec
push
jecxz
ljmp
xchg
or
pop
orl
jmp
addr16
sub
aam
out
mov
xor
sbb
loop
adc
mov
push
addr16
xchg
movsl
mov
dec
rcl
jmp
nop
mov
aam
stos
sbb
lret
jo
shrb
jo
sub
mov
and
jbe
push
add
in
xchg
add
sbb
sub
into
push
dec
pop
xor
adc
mov
add
push
call
fstl
ja
inc
js
add
loop
lret
out
psubw
fisubrs
xor
fisubrl
loope
mov
sbbl
fbstp
xor
fistpl
add
outsl
adc
mov
mov
add
fbld
and
jns
repz
ljmpw
or
push
pushf
ror
dec
or
push
jbe
pop
leave
fisttpl
lret
es
mov
adc
fwait
adc
mov
leave
and
divb
push
in
adc
jmp
and
jle
fsubrl
jns
jle
jmp
cld
mov
jle
and
stc
or
lea
mov
repz
nop
shrl
ljmp
gs
movsb
pop
push
push
and
inc
push
imul
in
pop
jecxz
in
xor
pop
push
dec
nop
sbb
scas
and
pop
mov
cmp
in
or
pop
shld
push
cmpsb
push
mov
push
mov
sub
icebp
inc
ret
adc
add
adc
je
mov
mov
aam
daa
mov
sub
dec
inc
loopne
cs
data16
and
in
scas
inc
and
int
lret
out
insl
loopne
jmp
mov
cld
pop
fisubl
mov
mov
cmp
clc
mov
sbb
fists
pusha
jne
out
hlt
lods
loopne
sahf
xchg
ljmp
daa
jbe
xchg
shll
fnsave
popf
xchg
inc
leave
jb
setge
clc
adc
icebp
sbb
mov
fsubs
xchg
mov
push
cmp
inc
and
ljmp
xchg
and
rcrb
jmp
scas
lock
cld
adc
call
xor
dec
cli
pop
cmpsl
aaa
in
notb
and
fnstenv
cld
hlt
sbb
push
rolb
mov
inc
pop
out
imul
xchg
mov
sbb
in
inc
xchg
xchg
lock
cmpps
jb
out
push
adc
jg
adc
bnd
jg
mov
pushf
pop
inc
xlat
lea
aam
sahf
jecxz
inc
jmp
lods
jns
inc
scas
fldcw
xchg
fmull
test
rorb
sti
in
inc
out
inc
xor
mov
addr16
lret
popa
je
jne
arpl
adc
fcomp
outsb
xor
xor
jmp
pusha
or
cmp
mov
jg
jg
mov
nop
push
push
lcall
in
je
jmp
pop
xor
and
pop
out
lds
js
add
fs
mov
mov
dec
mov
and
fimuls
insb
in
pusha
mov
push
pushl
pop
sbb
dec
repnz
xor
ljmp
lahf
stos
sbb
mov
es
mov
xchg
pop
xchg
dec
in
fs
push
mov
loopne
lock
es
push
push
push
or
jl
and
push
lahf
mov
inc
faddl
push
jb
jecxz
mov
mov
aaa
mov
dec
mov
cltd
adc
mov
fwait
test
nop
mov
pop
test
jmp
ja
ss
imul
adc
test
popf
xor
mov
cmp
imul
cmpsb
out
inc
ficomps
and
mov
xor
das
push
xlat
push
lds
mov
dec
add
or
mov
jl
shrl
jge
or
push
fstps
lret
ror
xor
pop
vphaddd
decb
xchg
fistpl
popa
xlat
xor
add
data16
push
xor
push
in
cmp
inc
into
push
mov
std
fildll
cmpsb
mov
adc
sbb
test
ja
inc
fimull
mov
lret
or
add
movsl
lea
mov
or
or
add
xlat
push
sub
pop
aas
sub
dec
inc
test
cmpsb
js
or
inc
int3
jmp
pop
loope
push
mov
movsl
sbb
jp
add
cmp
adc
lods
inc
xchg
clc
xchg
push
call
in
loopne
out
sbb
test
push
mov
insb
js
sbb
cltd
leave
pop
andl
cmp
insb
adc
mov
xchg
stos
dec
repnz
sbb
and
mov
jne
xchg
xchg
loop
jg
rol
cltd
in
sbb
adcl
ss
jo
jge,pt
add
add
movsb
repz
push
jl
sbb
pop
mov
push
add
push
xchg
je
xor
push
ljmp
push
add
aam
xchg
ret
sub
dec
mov
hlt
les
mul
outsb
dec
movl
pop
insb
mov
xchg
daa
test
rorl
add
jmp
mov
lods
ja
xchg
aam
stc
ret
add
fstpt
aad
jb
mov
xchg
jecxz
or
rorb
jb
and
or
in
sbb
add
sbb
lahf
and
nop
cmp
ds
push
add
arpl
aam
icebp
mov
loopne
mov
sub
std
xor
in
push
pop
xor
mov
bound
ja
and
addr16
pusha
jl
insb
scas
call
mov
jb
push
pop
lret
pop
sbb
loopne,pt
or
inc
sbb
ficomps
hlt
xor
add
or
jnp
addb
daa
jbe
cmp
cmp
aad
cmp
cmpsb
test
cltd
sbb
out
rol
ret
inc
fwait
pop
sub
add
and
das
pop
xchg
and
push
hlt
js
add
cli
pop
dec
mov
fsubl
loope
pop
cmp
xchg
dec
pop
int
lcall
inc
bound
sbb
adc
ret
inc
jae
sti
mov
out
add
jnp
ret
les
jb
mov
xchg
mov
cmp
cli
dec
fistpl
mov
mov
cld
std
cltd
fucom
xchg
dec
pop
jg
jge
ss
dec
lahf
imul
rcr
int
pop
add
in
jo
inc
cmp
adc
lret
and
xchg
pop
jbe
sub
test
aas
aam
sub
sbb
jb
inc
movsb
gs
lcall
push
adc
inc
ss
cltd
dec
adc
jb
imul
pushf
scas
and
lahf
cmp
and
jb
nop
push
sub
sahf
clc
dec
add
fidivrl
repnz
jle
xor
jmp
adcl
inc
pop
sub
push
fldenv
and
add
clc
mov
cmp
lds
cmp
jecxz
mov
or
aad
in
lea
data16
sbb
jbe
sub
jb
pusha
jns
sbb
mov
lock
test
mov
mov
dec
dec
jne
shll
mov
scas
gs
pop
outsl
jns
out
mov
nop
sub
fcompl
ljmp
repz
xchg
and
sub
imul
mov
rclb
cmpsl
adc
mov
cmc
mov
mov
aad
sbb
out
adc
or
in
push
cltd
out
cmpsb
dec
fwait
mov
sarl
pusha
roll
ja
xchg
adc
adc
jo
xchg
sub
adc
mov
sub
sbb
faddp
pop
into
push
mov
fidivl
movsl
shll
push
out
mov
inc
and
ss
cmpsl
push
js
jle
insb
mov
add
jno
add
mov
add
cmp
push
mov
loop
pop
jle
les
mov
mov
lock
cmpsb
or
into
inc
movsl
cmp
push
pop
out
mov
jbe
push
mov
es
enter
push
xor
xchg
out
cltd
test
stos
mov
lret
jle
jmp
pop
inc
xor
lahf
jmp
sub
push
fisubs
or
aas
or
pop
xor
in
push
in
je
das
mov
mov
pushf
mov
loopne
adc
decb
cltd
std
into
mov
mov
adc
xlat
add
xor
insb
call
sti
nop
mov
push
xchg
xchg
mov
adc
pushf
test
sbb
cmp
movsb
xor
jg
cmp
adc
stos
sbb
xor
fistps
test
xchg
clc
pop
dec
leave
das
mov
push
call
out
and
mov
xchg
mov
pop
jmp
jg
adc
loop
inc
cmp
xor
lret
push
std
lods
aaa
stos
inc
pop
enter
rsm
iret
sbb
xorl
arpl
pushf
scas
or
push
lods
or
sbb
pop
xor
outsb
cmp
sbbb
mov
lods
fistpl
sbb
mov
jns
xor
and
popa
clc
add
adc
lods
data16
sahf
addr16
test
addr16
aas
aaa
dec
mov
adc
push
sbb
shrb
cwtl
pop
scas
mov
jg
outsl
pushf
mov
mov
fldcw
outsl
xor
xor
in
out
out
dec
mov
pop
mov
iret
adc
imul
pop
clc
jnp
sub
mov
mov
sbb
dec
and
push
sub
push
inc
addr16
popa
sub
cmp
sbbl
mov
dec
and
jbe
in
jg
mov
pop
cltd
dec
cmp
lret
mov
adc
es
push
stos
imul
mov
push
xor
push
sahf
add
shlb
jns
lea
pop
or
cs
lock
xor
mov
jae
iret
inc
lret
sub
dec
mov
push
inc
pop
cmp
aaa
mov
out
repnz
jnp
into
sbb
mov
loope
sti
xchg
stos
insb
or
inc
lret
add
pop
dec
loopne
out
repz
pop
mov
mov
scas
test
or
jecxz
dec
xchg
insb
stos
cwtl
jmp
aas
push
fsubrs
das
push
jns
int
jge
sbb
push
dec
cltd
xor
dec
or
insb
add
xor
jg
ds
js
and
sti
mov
push
jmp
jg
and
inc
subl
inc
push
pop
pop
hlt
nop
push
clc
shrb
pop
add
push
out
ss
lods
frstor
test
fisubs
sub
imul
out
sbb
jl
sub
pushf
repz
int
ljmp
jns
cmpsl
pop
lods
dec
rcll
xor
mov
pop
bound
push
js
adc
sub
fildll
push
in
cmp
scas
inc
xchg
xchg
ror
adc
sub
jmp
jg
orl
dec
movsb
cmp
in
ja
ds
les
test
inc
fcomps
xchg
push
mov
cld
in
dec
clc
or
cmp
xchg
out
cmp
imul
jns
mov
enter
mov
stos
inc
or
cmp
sbb
xor
imul
pop
pop
or
out
repnz
int
fidivrs
ficoml
ljmp
jno
fcoms
dec
fistl
out
mov
jo
insl
and
dec
les
div
movsl
jne
sar
jno
mov
jo
shrl
rep
enter
iret
and
jg
inc
sbb
es
mov
mov
inc
iret
in
mov
adc
cwtl
insl
xchg
scas
shll
add
xchg
rcrl
xlat
arpl
popa
adc
pop
dec
adc
or
lock
rcr
pop
lcall
sub
dec
pop
movsb
xchg
add
dec
iret
jecxz
jmp
sbb
test
xlat
mov
negb
nop
add
or
sub
loopne
jo
xor
dec
loopne
out
out
cmp
push
push
cmp
cltd
outsb
ljmp
or
jecxz
push
and
inc
sarb
rorb
dec
mov
sub
popf
adc
loope
cmc
mov
dec
jmp
push
push
adc
fiadds
dec
das
dec
outsl
movsl
mov
dec
out
inc
ffree
pop
out
mov
wbinvd
loope
xchg
dec
pop
out
mov
cmp
jmp
mov
and
or
frstor
push
lock
pop
mov
mov
push
cmc
es
pop
adc
mov
xchg
movsl
orb
cmp
in
mov
lods
cmp
cmp
mov
jo
jle
mov
js
aaa
and
orb
fdivrs
daa
xor
scas
repz
ss
fcmovne
pusha
or
movsl
out
mov
test
push
roll
xor
jns
icebp
pusha
pop
rclb
jno
or
mov
push
jp
push
in
dec
in
mov
fmulp
icebp
adc
pop
xchg
and
xchg
push
mov
xor
mov
sub
popf
xor
andl
pop
shrl
push
sub
jb
sub
addr16
mov
pushf
dec
dec
mov
bound
dec
iret
in
pop
shr
or
jg
jns
fcoms
mov
mov
or
sahf
test
lret
rcll
push
ljmp
and
ds
das
inc
stos
pusha
iret
sbbl
out
call
std
fldt
add
pop
cmc
inc
out
and
cmp
inc
jne
in
inc
mov
fs
sbb
xchg
lret
push
fidivrl
adc
addb
push
sub
inc
cmp
sub
std
out
int3
call
in
pushf
dec
ret
cmc
je
mov
push
pop
xchg
mov
add
ljmp
insl
mov
dec
xor
lahf
daa
add
gs
cs
sbb
dec
dec
push
rclb
lods
jecxz
icebp
fwait
ret
shll
adcb
outsb
inc
fs
jo
ficomps
pop
cmpsl
outsb
loop
mov
mov
subb
adc
scas
push
pop
xor
inc
das
adc
and
in
std
add
dec
mov
fstl
jno
test
mov
and
xchg
sub
pushf
mov
jmp
pop
and
daa
or
adc
sub
in
push
ss
nop
adc
or
movsb
dec
in
mov
insb
lock
fwait
sbb
sub
pop
mov
mov
adc
aad
rolb
stos
inc
jmp
gs
adc
mov
out
jg
dec
test
outsb
outsb
into
xor
adcl
pop
pop
pusha
imul
jne,pn
jmp
inc
adc
and
movsb
pusha
stos
into
shlb
push
mov
add
int3
lahf
nop
imul
or
inc
stos
adc
xor
movsb
adc
dec
shrb
or
insb
cmp
push
mov
mov
cmp
jns
or
hlt
test
push
xchg
pop
dec
fiaddl
sbb
sahf
scas
int
or
push
or
mov
jecxz
push
sbb
insl
test
nop
sbb
ret
sub
aaa
andb
mov
inc
fcmovnu
stos
loope
jb
cmp
xchg
xchg
mov
fcompl
hlt
cmc
fiaddl
push
sub
and
add
int
jp
xor
jg
and
popf
sbb
fwait
or
mov
dec
xchg
xchg
sub
in
jbe
and
call
push
pop
inc
enter
mov
adcb
shlb
push
pop
sub
inc
and
xchg
add
movsb
and
dec
fcoml
clc
sbb
and
cmp
insl
scas
adc
mul
push
das
repnz
xchg
push
mov
js
dec
push
xchg
mov
push
fisubrl
loopne
push
es
aad
ret
dec
pusha
ss
sub
test
mov
scas
cmc
xchg
test
mov
fsubrp
and
dec
inc
push
loop
test
rorb
hlt
inc
stos
pop
push
movsb
out
sti
inc
lds
and
shl
fs
xchg
adc
push
gs
xor
retw
xchg
mov
jne
add
js
push
pushl
loop,pn
sub
mov
fisttps
loop
cmp
repz
cmp
clc
mov
jmp
push
sbb
mov
mov
jmp
sbb
mov
xchg
ljmp
mov
pushf
ja
sti
into
inc
pop
ror
push
pop
std
loop
sbb
movsb
sbb
stos
cli
push
pop
xlat
jb
out
sub
lret
loopne
sti
movl
enter
sbb
icebp
and
dec
mov
push
adc
push
ficompl
mov
xchg
xchg
movsl
dec
or
pop
scas
loopne
das
cmp
pop
loopne
xchg
in
push
mov
mov
enter
mov
adc
filds
xor
pop
xchg
mov
movsl
mov
mov
pop
jle
mov
fsubs
mov
gs
push
cltd
adc
jae
sbb
js
ss
insb
add
sbb
das
mov
lods
pop
lods
push
mov
into
push
or
xor
fadds
ret
cmp
dec
fbstp
jne
mov
jb
jae
test
mov
pop
jle
adc
repnz
mov
xchg
out
push
js
lock
jno
push
xchg
pop
pop
jno
test
add
popl
xchg
mov
add
outsl
add
push
rolb
pushf
xchg
push
cld
mov
fcomip
lret
sahf
insb
scas
iret
xchg
push
jg
push
sub
push
loop
mov
pop
mov
xchg
in
movsl
mov
addr16
int3
fmuls
push
cmp
and
add
cmp
xchg
into
mull
dec
jge
loope
jno
cmova
push
fsubs
test
xchg
cmpsl
push
xlat
sub
mov
add
push
pushf
cli
fildll
lea
jb
xchg
loopne
es
push
repz
xor
xchg
insb
sbb
out
fwait
mov
movsb
xor
shrb
mov
je
xlat
aam
cmp
jbe,pn
lea
lcall
mov
xor
aad
lods
aas
push
dec
insl
rcr
xchg
sub
pop
mov
lods
imul
rol
adc
mov
repnz
adc
mov
into
sub
or
mov
cmp
in
xchg
mov
and
mov
movsb
shr
ficompl
out
subl
cs
test
xchg
jnp
mov
int
into
xchg
push
scas
mov
in
inc
cmp
mov
cmp
xor
lea
mov
stos
inc
out
cmp
enter
add
sbb
mov
in
jmp
test
cmc
xor
out
lods
inc
and
push
mov
scas
mov
sti
fwait
arpl
jne
testl
sub
cmpxchg
in
mov
cmc
call
mov
ja
and
push
fcoms
shll
fmuls
mov
fcomps
out
dec
lahf
pop
repnz
and
popf
cs
in
fwait
iret
cmp
fcoml
mov
outsl
or
mov
adc
mov
push
repz
int
je
fmulp
mov
sub
jl
sbb
jno
mov
out
mov
jl
fs
dec
test
xchg
outsl
push
sub
push
push
lret
xor
cld
popf
sbb
mov
lcall
pop
int
push
xchg
jns
mov
in
push
add
insl
add
cs
push
pusha
add
xchg
jnp
adc
jo
lock
pop
out
test
aam
icebp
test
xchg
push
andl
mov
insb
sub
sub
inc
xlat
ret
pop
idivb
nop
in
pop
push
xchg
hlt
mov
mov
loope,pt
sub
pop
les
std
jo
lcall
sub
out
imul
in
lcall
adc
dec
xchg
push
test
xor
jno
and
hlt
mov
testl
xchg
pop
jl
cmpsl
sub
jge
dec
pop
mov
and
inc
push
loope
clc
jmp
mov
lods
adc
mov
mov
pop
stos
shl
cmp
pop
scas
fidivl
push
fdivl
cmp
test
scas
test
dec
add
sahf
xchg
loopne
imul
lcall
pop
jnp
jp
jl
in
jo
xchg
aad
add
cmp
sti
sbb
stos
mov
insl
mov
sbb
adc
dec
or
pop
es
ds
int3
xor
cmp
sub
aas
mov
mov
or
xor
sub
pop
push
inc
sbb
test
mov
and
aas
fnstsw
jl,pn
ljmp
pop
inc
repnz
xchg
lret
cld
push
sub
or
lret
insl
imul
fldcw
push
mov
cld
sbbb
xor
rcl
aam
repnz
mov
dec
jns
lret
in
cmp
mov
jge
cmp
xchg
xchg
ljmp
sbb
loop
mov
ds
and
push
in
test
nop
popf
int3
cmp
add
mov
mov
popf
push
fsubrs
mov
sub
arpl
hlt
push
aas
in
jns
fmull
mov
insb
dec
mov
lea
das
fisubl
xor
xchg
jl
pop
arpl
daa
gs
lods
cmp
pushf
add
jo
js
popf
in
ret
dec
cmp
imul
fs
inc
inc
aas
in
mov
push
dec
xchg
call
adcb
inc
cmp
pop
xchg
sbb
nop
daa
adc
daa
adc
scas
sarl
mov
mov
popa
jnp
aam
jns
aad
inc
mov
mov
loopne
sbbl
add
xchg
aas
sub
fstpl
sbb
push
testl
icebp
outsl
rcrl
sub
fcmovu
or
test
lods
mov
in
pop
cmpl
mov
fldenv
imul
xchg
dec
xchg
popf
lods
cld
pop
jb
jge
push
fisttps
cmpsb
push
popf
fsubs
outsl
xor
dec
popf
imul
enter
mov
push
sar
cmp
insl
jae
pop
mov
jg
push
sub
pop
mov
dec
leave
sbb
mov
add
out
add
ds
insb
pusha
push
lret
mov
or
mov
push
fcompl
jbe
push
dec
push
pushf
dec
ja
fcoml
sahf
andb
popa
mov
ret
mov
insb
loop
xchg
outsb
adc
add
mov
addr16
lcall
jmp
shr
leave
repz
xor
adc
inc
loopne
xor
cmpsl
out
jp
jecxz
rcrb
ret
mov
bound
mov
pop
jmp
mov
add
out
pushf
fiaddl
clc
int3
xchg
call
leave
movsl
fucomip
push
cmpsl
out
and
mov
ds
sbb
xor
mov
sahf
ds
sahf
lret
decb
stos
jmp
adc
inc
jb
dec
cmp
or
xor
les
or
test
sub
rcrb
adc
hlt
adc
mov
mov
or
cmpl
das
mov
mov
adc
jmp
xchg
xchg
shrl
cli
jbe
push
cmp
scas
cmp
repnz
sarl
shr
adc
mov
std
lods
shr
lret
mov
pusha
push
pop
out
ja
decl
or
and
add
int
push
push
out
outsl
loopne
ret
clc
adc
int3
arpl
jle
mov
xchg
dec
insb
filds
cmp
mov
aaa
dec
scas
mov
or
cwtl
mov
push
inc
cli
dec
dec
fmull
adc
mov
inc
mov
loop
pop
inc
or
ss
add
dec
jb
popf
shr
jp
adc
and
negb
imul
push
std
js
mov
ss
or
or
or
xchg
sub
add
inc
inc
mov
outsb
hlt
cmp
movsb
les
sti
push
shl
push
je
xor
movsl
mov
cltd
jb,pt
js
lahf
inc
fs
scas
decl
jmp
enter
xchg
pushf
push
push
xchg
mov
mov
mov
das
popa
std
out
push
adc
pop
sub
dec
mov
dec
loop
pop
cmp
inc
out
xchg
leave
cmp
jle
inc
pop
ljmp
xor
scas
pop
mov
test
loopne
daa
mov
add
and
test
push
sub
mov
jmp
mov
cwtl
cmpsl
ds
cmp
pop
icebp
xchg
or
xchg
pop
push
pop
sbb
imul
mov
mov
call
test
mov
fcoml
and
jns
adcl
xchg
je
push
rol
dec
jecxz
call
mov
jne,pn
into
jae
xchg
mov
fwait
adc
das
cld
pop
adc
int3
ljmp
xchg
cmp
popf
adc
mov
add
test
rcrl
mov
pop
jecxz
lods
test
pusha
divl
adc
pop
insl
push
out
daa
mov
subl
sub
push
adc
faddl
sub
lea
mov
jae
mov
push
xor
das
pop
xchg
in
stos
sbb
fldcw
mov
mov
sbb
mull
fbstp
dec
incl
mov
sbb
push
mov
mov
push
enter
push
mov
loope
imul
jo
bound
jle
add
inc
scas
or
mov
add
mov
lods
pop
and
loop
pop
jmp
inc
and
mov
bound
fsubrp
inc
in
or
cmp
xchg
ss
dec
out
aam
lahf
jo
lock
dec
stos
dec
fidivrl
inc
xchg
dec
ds
sbb
aam
sbb
jmp
sbb
xchg
sti
mov
fbld
repz
sub
mov
iret
inc
fdivr
xchg
mov
out
push
mov
stc
xor
push
fstl
push
dec
sbb
outsb
xlat
test
cmp
outsb
popa
adc
jbe
lret
xchg
adc
xchg
sbb
aad
iret
jno
lds
popa
mov
lahf
adc
push
sub
add
jb
cmp
and
pop
mov
cmp
data16
vmovsd
sti
xchg
pop
adc
sub
pop
xor
je
fmull
xchg
jl
mov
mov
mov
push
int3
pop
push
or
mov
movsl
inc
vmovaps
test
and
dec
push
push
inc
shrb
inc
mov
xchg
jge
mov
cltd
adc
movsl
mov
xchg
mov
outsb
adc
pop
in
add
rep
movsb
jb
lods
fs
leave
jae
push
test
dec
adc
mov
in
pop
push
jl
loope
test
imul
mov
or
or
into
sub
cmp
add
test
xchg
cmpl
xchg
test
in
mov
fbld
pop
and
shr
xchg
xor
pop
add
out
pop
fsubrl
adc
mov
aam
insl
jb
cmc
push
popa
xchg
hlt
xchg
xor
xchg
pop
sbbl
sti
out
out
xor
mov
lea
jge
ret
cmp
cld
push
mov
test
stc
in
sarl
test
lahf
lds
es
xchg
add
scas
out
cmp
rclb
add
outsb
sahf
push
adc
fildl
aad
ljmpw
stos
sub
mov
dec
repnz
out
in
add
jp
ss
inc
lahf
aam
inc
imul
add
fimuls
cwtl
out
jae
lret
or
int3
sub
mov
inc
jg
out
push
imul
in
ret
pop
pop
sbb
mov
pop
pusha
loope
shll
test
cli
pop
adc
dec
mov
inc
fstps
popa
mov
dec
loope
int
adcl
pop
and
mov
sub
clc
fsubr
cld
popa
sbb
pop
xor
jg
jmp
jnp
mov
push
jecxz
sbbl
jb
pop
pop
test
dec
clc
jl
sub
aad
xchg
mov
fwait
aaa
scas
pushf
cmpsl
xor
cld
jge
xor
es
orl
add
sti
and
std
aam
fildll
xchg
addr16
push
inc
cmp
inc
scas
ret
ret
jle
inc
lret
je
or
sahf
es
lds
or
jns
out
stos
and
cmp
inc
icebp
xchg
jns
rclb
xchg
jno
xchg
fidivs
push
dec
notl
call
mov
adc
cli
xchg
fists
lahf
or
cmp
sub
xchg
push
dec
insb
out
cmpsl
imul
das
mov
fnstsw
or
cmpb
push
or
mov
dec
or
mov
mov
push
add
xlat
lret
lret
pop
jno
sbb
dec
out
hlt
push
lahf
sbb
cltd
cld
push
mov
mov
adc
fisubs
xchg
add
dec
xchg
mov
sbb
js
xchg
cmpsl
cmp
scas
mov
imul
popa
insb
mov
xor
mov
pop
cmp
fstpl
nop
or
add
loop
sbb
rcrl
xchg
push
ja
push
in
mov
shll
nop
inc
lds
push
mov
out
rcr
fs
int3
sub
add
lods
mov
popf
test
inc
pop
push
aas
mov
pop
loop
int3
adc
add
idivl
push
pop
in
inc
lret
pop
in
notl
inc
jg
pushf
fwait
aaa
cs
cmp
imul
dec
test
fimull
pop
aam
es
in
lds
lods
mov
movsl
jne
pop
call
xor
loopne
movsb
inc
or
mov
pushf
cltd
test
inc
test
out
inc
cmp
shrl
sbb
gs
out
add
sub
cltd
int
inc
fidivrs
movsl
mov
rcl
test
sub
or
mov
es
push
out
in
inc
jecxz
outsb
clc
xor
inc
stos
stc
adc
and
pop
sti
push
pop
fisubl
daa
mov
xchg
lret
inc
fs
pushf
lods
clc
push
mov
loop
je
out
movsl
pushf
inc
push
rcll
jmp
jg
insl
sub
or
mov
add
inc
push
aaa
dec
push
mov
xor
ds
sub
mov
out
xor
cld
xor
jbe,pn
data16
mov
mov
jb
in
cmp
xchg
push
pop
es
inc
aas
out
shll
mov
dec
adc
push
lret
sti
xor
popa
jne
aaa
imul
ss
mov
rolb
bound
pusha
adcl
movups
cmpsl
outsl
push
fld1
cmp
jg
arpl
sub
xchg
enter
push
add
int
pop
dec
loope
outsl
arpl
cli
or
fwait
inc
xor
jecxz
sub
push
xor
inc
lea
or
cmp
dec
dec
sub
pop
insl
xor
js
jge
pop
mov
call
out
xor
insb
jle
push
outsb
das
fstpt
xchg
jmp
push
in
nop
and
dec
dec
imul
dec
loopne
lret
fstps
popa
addr16
enter
xor
xor
push
pusha
jae
dec
cmc
test
dec
pop
in
aam
add
sub
sbb
jecxz
jnp
xor
add
jmp
or
pop
sbb
or
das
pusha
sub
mov
pop
push
icebp
fimuls
scas
sbb
fmul
and
enter
jp
lcall
or
jne
ficoml
or
push
add
xor
rorl
fnsave
dec
int3
xor
cli
jne
loopne
adcl
mov
leave
icebp
xchg
mov
movsl
sbb
push
sbb
pop
dec
imul
lcall
lds
lods
fildl
push
arpl
fistl
imul
sti
inc
loop
aad
aam
movsl
jo
fldt
sarb
push
repz
inc
cmp
mov
or
ret
jns
jmp
push
cltd
push
out
scas
in
pusha
mov
push
jb
test
and
sbb
jecxz
jae
add
popf
sbb
push
push
mov
jecxz
add
inc
cmc
hlt
cmpsb
out
int3
adc
loop
xchg
andl
jbe
arpl
dec
stos
daa
sbb
lret
cmp
lds
push
pop
push
mov
test
popf
out
popf
je
iret
xlat
shrl
dec
test
inc
les
das
daa
int3
dec
xchg
mov
and
dec
std
push
shll
push
loopne
std
cmpsl
cld
lds
inc
jle
xchg
or
cmp
lret
mov
jno
js
jns
xor
pop
icebp
sbb
call
pusha
push
fwait
mov
int3
push
call
shrb
pop
scas
fcoms
fwait
xchg
cmp
lcall
xor
adc
cltd
push
js
lret
adc
addr16
mov
mov
pop
inc
out
inc
int
iret
adc
xchg
dec
adc
xor
pop
cltd
mov
cmpsl
inc
push
mov
pop
jno
cmp
xchg
aam
lret
into
gs
sbb
and
movsl
push
xlat
icebp
jl
stc
fsubs
push
shll
aas
lret
push
repnz
int3
xlat
stc
je
push
add
ret
push
in
test
jmp
or
dec
daa
iret
cmp
jnp
adc
stc
cmc
subb
aaa
push
xorl
mov
mov
or
dec
xchg
jno
add
cmp
js
pop
stos
int3
hlt
sar
loop
cmc
fiaddl
adc
sub
imul
mov
jecxz
push
out
xchg
add
insl
shr
aas
lahf
aas
or
icebp
in
sbb
pop
into
add
push
and
insl
inc
les
sarl
loopne
popa
jne
and
jl
das
add
mov
bound
mov
and
shll
iret
fsubrl
dec
in
test
jbe
outsb
loop
rorb
or
inc
push
lods
js
cmp
jg
shrb
ret
jle
push
dec
pop
mov
mov
les
scas
mov
push
sbb
lret
shlb
and
jmp
push
lcall
xchg
es
push
fucom
testb
hlt
in
pop
sub
push
mov
ja
daa
mov
mov
fstps
push
test
mov
out
xlat
xor
pop
sub
call
dec
jno
lods
mov
adc
mov
xorb
scas
mov
lock
xor
aam
scas
push
mov
xor
inc
xchg
jge
adc
bnd
insb
ficoms
fisubrl
cmp
lods
mov
sbb
sbb
cli
inc
in
repz
and
adc
sbb
inc
mov
fmulp
scas
sub
inc
sbbb
addl
mov
pushf
ljmp
jecxz
ret
xchg
jo
repnz
sysret
xchg
jne
jo
fs
adc
fnstsw
rol
mov
cmpb
imul
pop
jne
pushf
test
push
fisttpll
into
jnp
shr
loope
adc
mov
cmpsb
insb
add
jno
insb
jl
dec
adc
sub
fwait
cmp
imul
cwtl
decb
inc
push
lods
or
rorl
mov
sub
test
stos
mov
mov
icebp
sbb
lret
mov
push
push
in
dec
inc
popa
or
mov
mov
mov
inc
sbb
fs
push
pop
or
mov
pop
pop
sub
mov
lods
jg
imul
shlb
aam
sahf
iret
decb
sbb
cmp
pop
mov
adc
add
push
mov
mov
cmp
mov
push
xchg
test
xchg
das
xchg
mov
xor
filds
mov
hlt
mov
cmpsl
out
add
cmp
sbb
negb
in
xlat
push
jg
icebp
push
add
xor
push
adc
xchg
ficomps
testb
inc
sti
sub
sbb
mov
cmp
lds
xlat
shlb
bnd
mov
adc
xlat
pop
rcl
cmp
fwait
dec
fxch
loop
inc
das
push
in
shlb
les
loop
andb
aas
add
imul
and
jge
cltd
mov
addr16
lcall
dec
push
mov
sarb
gs
mov
inc
push
popf
inc
xchg
and
xchg
negl
add
iret
mov
xchg
subl
loop
cmpsl
dec
sub
pop
cli
cmp
shr
enter
scas
lahf
outsb
das
push
mov
mov
add
hlt
pop
andb
push
decb
ja
xor
dec
pop
gs
lretw
adc
rorl
movsb
mov
mov
jb
ficoml
mov
jmp
adc
lret
push
xor
xchg
lea
dec
decb
adc
test
gs
mov
mov
add
sar
mov
xchg
mov
movl
lods
movb
lret
jmp
orb
jb
out
loope
sub
inc
sbbb
mov
ret
adc
popf
mov
int
dec
lods
and
fidivs
jl
jg
push
sub
dec
rol
loop
sub
mov
inc
adc
insl
pop
cmc
sahf
or
inc
ss
push
pop
in
cmpl
in
adc
ss
push
mov
data16
lret
scas
nop
rcr
dec
loope
out
mov
js
sbb
mov
sti
push
push
inc
push
inc
add
dec
or
sbb
cmp
sub
addr16
jnp
fdivrs
shlb
loope
pop
xor
arpl
or
loope
push
sub
or
icebp
mov
xor
leave
std
and
test
jge
icebp
adc
mov
andb
sbb
or
pop
in
in
lds
nop
mov
lahf
xchg
and
mov
sub
jb
lret
sub
stc
lea
jecxz
loop
xchg
dec
loope
aam
inc
add
push
mov
or
xchg
scas
mov
fs
out
loopne
lods
jl
ficomps
test
cmp
adc
nop
inc
das
mov
nop
int
jns
jmp
cmc
push
stos
xor
jb
daa
mov
sub
mov
popa
or
add
lods
cli
push
movsb
dec
pop
pop
fiaddl
or
push
and
xchg
pop
icebp
dec
mov
sbb
cwtl
or
lods
mov
lock
imul
mov
cltd
or
movsb
js
lcall
mov
mov
mov
incl
xbegin
add
sbb
pop
das
jp
decb
pop
js
xchg
jae
movsl
cmpsl
sbb
outsl
add
or
xchg
dec
lods
and
fcoml
mov
mov
xor
std
or
into
cmp
in
adc
add
les
pop
stc
ja
outsb
adc
mov
lock
mov
popf
push
out
cmc
rol
divl
decb
ss
xchg
int
fwait
push
popa
jns
ror
daa
addb
out
mov
cmp
mov
mov
lods
add
aaa
leave
and
es
dec
pop
mov
mov
xchg
mov
inc
pop
shl
lahf
pop
repnz
push
fwait
mov
and
test
xchg
pop
in
into
xchg
roll
cmp
insb
sub
mov
enter
jno
je
test
xor
stos
andl
sahf
xor
cs
and
lods
fdivr
xchg
jbe
icebp
test
mov
jnp
jg
repnz
jns
icebp
pop
test
test
pop
andl
sub
mov
sahf
dec
add
add
ds
lcall
loop
push
fsubl
shr
sbb
lcall
loopne
and
inc
rclb
imul
push
enter
push
xlat
cmp
jbe
pop
dec
xchg
jae
cmpsl
rol
int3
jnp
test
js
ja
test
jecxz
nop
test
inc
int
in
add
sbb
das
fwait
adc
dec
cmp
sbb
cmpsl
xchg
add
negb
push
or
lock
addr16
and
cltd
aas
iret
arpl
rcr
sbb
push
jg
arpl
clc
lock
movsl
xchg
sbbl
fists
das
or
pusha
lret
addr16
push
and
stos
fdivl
bound
sub
adc
lcall
negb
rcrb
mov
mov
test
mov
jmp
aaa
xchg
in
pushf
mov
fisttpll
push
mov
int3
gs
add
stos
cmp
lahf
mov
shlb
repz
and
cmp
out
dec
repnz
adc
push
push
shrl
mov
inc
add
arpl
out
cld
popf
mov
popa
mov
sahf
lods
nop
pop
test
in
add
test
arpl
adc
inc
das
and
fstps
aad
dec
mov
sub
adc
orb
cmp
xor
cmc
adc
insb
jmp
movsl
pop
out
jno
inc
loop
jbe
xchg
inc
push
mov
test
add
inc
in
movsl
jno
sahf
xchg
in
sti
jae
xor
jl
inc
adc
and
or
fs
nop
mov
repz
inc
sbb
push
add
movsb
adc
dec
cltd
adc
cmpsb
cmp
push
or
sub
add
shrb
addb
cltd
imul
mov
xchg
cmp
xchg
sub
mov
jecxz
sub
add
jnp
push
mov
int
push
es
adcl
mov
iret
loope
add
sub
cmp
test
out
or
adc
repz
sub
cs
call
pusha
mov
jbe
imul
addr16
aam
cmp
cmp
cltd
sahf
cltd
or
neg
mov
push
pop
sub
inc
sub
mov
aaa
dec
dec
pmaddwd
mov
mov
ret
hlt
popa
imulb
mov
in
fs
in
mov
cmp
dec
pop
shl
repz
cmp
ljmp
lahf
cmp
fstpt
ja
fsts
js
cmp
stos
dec
inc
pop
push
pop
xchg
sub
jmp
pop
push
lret
loopne
scas
cmp
pop
mov
rclb
loopne
pop
adc
loop
movsl
mov
in
mov
jae
inc
mov
xchg
cmpl
pop
lret
mov
clc
xchg
mov
xchg
or
push
sub
test
push
jle
and
lea
xor
int3
jae
sbb
pop
push
ja
movsl
xchg
jno
jnp
cld
sub
xor
dec
imul
std
pop
imul
mov
in
mov
mov
cld
filds
or
pop
sbbl
imul
out
test
mov
push
lahf
jb
and
mov
push
dec
sbb
cs
pop
jb
dec
clc
or
or
into
pop
scas
mov
cwtl
xor
mov
mov
cli
pushf
cld
mov
fld
xchg
sahf
push
ret
out
aaa
dec
pop
in
jns
xor
sbbl
nop
popf
mov
jmp
pop
movsl
add
sub
imul
or
jne
mov
repz
xor
adc
cmp
int3
mov
pop
cmp
daa
mov
pop
in
shrl
lret
adc
shl
add
rol
and
and
jl
cli
cmp
cmc
push
xchg
mov
mov
add
loopne
cltd
push
fs
adc
aad
adc
inc
push
sbb
inc
xor
lea
and
or
lret
push
rcrl
jo
xchg
or
sbb
mov
mov
jb
push
repnz
int3
adc
push
adc
sub
inc
push
imul
fs
pusha
fcom
xor
mov
outsl
outsl
inc
rclb
jno
in
scas
ds
xchg
jo
pop
push
ss
fists
jle
out
adc
fwait
dec
out
aas
cmp
out
cmp
mov
mov
mov
sub
xor
subb
inc
inc
mov
out
mov
je
adc
xchg
arpl
dec
rcrb
ret
mov
out
movsl
js
inc
push
jae
and
jp
inc
add
test
es
scas
push
sbb
filds
add
stc
int
stos
es
adc
mov
inc
xchg
xlat
outsb
les
and
insb
fisubl
push
cmp
insl
ljmp
cltd
mov
and
shlb
sub
jecxz
bound
imul
xor
adc
sbb
mov
aas
add
icebp
mov
mov
mov
sub
inc
xchg
inc
xchg
cmp
imul
inc
xchg
dec
pop
pop
mov
add
xor
test
xor
push
nop
mov
out
das
adc
mov
icebp
and
mov
es
xor
js
fisttpll
cmp
pop
test
rcl
inc
jne
sbb
stos
adc
sub
add
adc
sub
sar
pop
inc
mov
sbb
add
shll
arpl
insb
sbb
orl
aas
xchg
ret
pop
call
push
xor
xor
inc
cmp
cmp
ret
inc
adc
mov
iret
fistpl
test
sub
pop
es
dec
cmp
xchg
mov
lret
inc
adc
in
mov
jle
fsubl
add
jp
test
pushf
mov
pop
fsubrs
jl
sbb
xlat
mov
sub
xor
jge
cli
push
dec
mov
adc
pop
insl
xchg
bound
ret
mov
xchg
jo
outsb
mov
jne
xlat
repnz
nop
xchg
adc
lret
sbb
stos
aad
push
insl
mov
cmp
jl
movsb
insb
call
xor
fldl
pushl
call
and
icebp
sbb
scas
int3
dec
sbb
clc
sub
dec
paddusw
pop
xchg
jp
cmp
out
and
psubsw
and
das
repnz
dec
push
mov
push
shlb
inc
xchg
xchg
imul
mov
dec
cmp
iret
out
cltd
push
repnz
or
mov
push
shl
iret
xchg
cmp
push
loope
sahf
fiaddl
ret
dec
dec
inc
shl
sbb
shrb
push
clc
daa
lcall
inc
sbb
jb
sbb
daa
aam
jnp
pop
fsts
cmp
cmp
fdivs
adc
push
decb
iret
add
insl
pop
mov
imul
push
jno
mov
jp
adc
int
ds
xchg
shll
jne
lret
xchg
fldl
xchg
sub
mov
pop
scas
test
das
mov
andb
scas
pop
lret
fdivrs
mov
xchg
push
sub
mov
xchg
jecxz
mov
call
imul
jb
push
lock
push
fwait
arpl
mov
testl
outsb
icebp
adc
cmpsb
in
sbb
aad
aaa
dec
lret
jmp
movsl
adc
jae
mov
or
xor
add
sbbb
push
lcall
or
int
inc
xchg
sub
fsubrs
ficoms
or
mov
push
or
dec
xchg
add
pushf
movsb
xor
mov
sub
or
lods
jb
aaa
dec
sub
push
lcall
cmp
decb
sbb
mov
leave
lods
add
inc
cltd
mov
je
or
je
mov
out
lods
out
aas
ljmp
insb
jno
fdivr
xchg
nop
sbb
and
mov
hlt
dec
jecxz
movsl
cmp
cmpsb
gs
js
fildll
scas
and
mov
lcall
pushf
sbb
daa
ret
hlt
inc
and
xchg
jo
leave
popa
mov
test
in
call
or
pop
jg
jo
or
jbe
test
mov
dec
call
in
or
mov
fyl2x
or
jp
jne
sbb
adc
roll
sub
cmc
mov
stc
inc
mov
ja
push
out
stos
pop
adc
fldcw
addl
and
insl
pop
out
xchg
lcall
xor
pop
inc
in
sbb
mov
sub
mov
mov
and
aad
add
stos
inc
dec
ds
or
lds
push
sbb
lds
mov
adcl
xor
mov
mov
dec
mov
push
lret
test
mov
int
xor
mov
mull
test
test
bound
xorl
sub
sub
lods
scas
ds
pop
orb
lds
sarl
push
insl
arpl
adc
gs
scas
and
mov
xor
push
ficoml
test
add
out
daa
mov
pop
sub
pop
push
stos
pop
sub
xchg
cmc
lret
loop
out
xchg
mov
sbb
leave
xchg
mov
sbb
cmpsl
js
mov
mov
push
push
aaa
inc
adc
mov
rolb
adc
cmpl
sub
mov
jge
shrl
rorb
mov
imul
xlat
es
stos
dec
jns
bound
mov
and
je
lds
inc
test
inc
into
and
aaa
dec
and
adc
jecxz
jp
in
insl
adc
inc
pop
rcl
pop
out
or
mov
and
addr16
xor
scas
jecxz
or
jmp
out
sahf
lods
addr16
sbb
outsl
add
push
ja
lahf
test
imul
mov
in
sbbl
mov
and
push
cmpb
push
icebp
notb
jne
add
mov
pop
mov
mov
add
cmpb
fbstp
das
inc
sti
adc
adc
scas
or
cwtl
jb
cld
jmp
mov
fbld
lds
xchg
test
add
sbb
pop
mov
mov
or
insb
jle
cmpsb
push
out
sub
fidivrl
outsb
clc
imul
add
adc
inc
hlt
sub
jo
aad
jnp
inc
popa
addr16
repnz
lods
pop
add
lea
lret
into
lea
jae
mov
test
cmpps
leave
pusha
stos
pop
es
fsubrp
aas
xlat
outsl
xor
jno
aam
cmp
xor
sahf
add
loope
incl
xchg
or
jnp
shl
pushf
mov
stos
cld
sbb
inc
lret
xchg
pop
push
ss
fimull
imul
or
repnz
sub
loope
jge
jg
xor
or
add
adc
gs
fimull
jg
push
mov
inc
fidivrs
mov
and
orb
clc
das
enter
and
int3
sub
gs
daa
xchg
xchg
push
add
add
dec
ss
and
mov
gs
inc
out
fwait
scas
shrd
inc
push
sbbl
pop
lods
jmp
repnz
mov
adc
int3
sbb
adcl
lods
aaa
xchg
mov
xor
mov
push
inc
xor
or
mov
pushf
int
push
out
imul
ret
aam
xchg
push
add
icebp
adcl
pop
jbe
outsb
stos
mov
movsl
jbe
cmpsl
xor
clc
insb
into
dec
dec
arpl
push
inc
je
mov
push
scas
daa
enter
xor
daa
cld
push
add
push
or
jns
call
leave
int
movsb
mov
sbb
adc
leave
test
cltd
mov
push
dec
out
push
sub
cmp
hlt
gs
mov
mov
clc
jo
sub
pop
cmp
rorl
sbb
ret
jp
int
mov
xchg
pop
mov
push
insl
imul
cmp
push
rcrb
lcall
pop
push
shll
push
lea
movsb
loop
jne
or
mov
xchg
cli
enter
sti
in
adc
or
cmp
jecxz
clc
mov
seto
enter
xchg
shll
cmc
adc
fildll
hlt
xchg
call
jg
adc
in
ret
mov
out
push
dec
loope
add
jo
jb
mov
fsubrs
pop
sahf
movsl
aas
mov
icebp
xor
push
mov
and
nop
adc
push
je
mov
mov
cmpl
rcrl
pop
inc
cmp
jle
fsubs
outsb
in
inc
inc
pop
lock
bound
mov
rorb
xchg
shl
js
and
lahf
cwtl
cltd
decb
loope
push
out
or
shrb
and
or
pop
out
dec
lods
inc
inc
lret
fstps
push
lretw
cmp
loope
push
out
xchg
enter
fistps
pushw
in
push
push
xchg
pusha
aaa
negb
mov
xor
addr16
cld
cmp
fnstsw
jmp
mov
ja
lcall
jg
imul
jae
and
mov
lcall
insl
adcl
inc
fstl
mov
xchg
dec
in
out
mov
jns
and
push
sarl
mov
clc
sahf
scas
popa
sbb
sbb
imul
aas
mov
mov
call
mov
sti
xchg
sub
mov
pop
push
adc
fwait
rorb
push
or
mov
imul
mov
lods
and
xor
adcl
jnp
not
and
pop
cmp
add
loope
xor
inc
jnp
push
in
or
pop
mov
insl
jg
loope
daa
jge
adc
pop
mov
cmp
int3
inc
iret
adc
pop
gs
lcall
inc
sub
jecxz
adc
sub
lea
rorb
ret
lock
scas
nop
es
cmpsl
loope
adc
cmp
aad
scas
add
call
jl
jae
lods
movsb
mov
mov
stos
xchg
icebp
arpl
push
inc
lea
cmpb
push
lret
bound
imulb
stc
in
xchg
jg
mov
inc
daa
lahf
xor
ror
ja
xchg
cmp
leave
cmp
jbe
sbb
inc
enter
sub
pop
lock
add
ja
sub
fwait
mov
popf
cmp
into
xor
sub
lret
fstps
in
jmp
shlb
or
xchg
ljmp
adc
or
push
ss
jne
cli
add
jo
es
or
pushf
mov
fldl
shll
outsb
mov
ret
rorl
mov
cmp
mov
fists
adc
mov
mov
sti
out
cmp
data16
mov
insl
mov
in
call
ficompl
ljmp
cld
and
adc
push
cmp
mov
out
add
sbb
jae
pop
dec
loope
icebp
stc
or
int
fadd
inc
adc
in
jecxz
lret
dec
add
jge
loopne
leave
mov
cwtl
push
and
out
test
or
scas
sti
test
adc
push
in
pop
cwtl
and
mov
jge
icebp
lcall
push
mov
fisubs
jns,pn
mov
push
xor
repz
mov
das
fidivrs
js
sbb
dec
ljmp
mov
mov
fwait
sbbb
pop
mov
aaa
cmpsb
std
xor
fldl
jmp
jge
sbb
push
in
add
lret
sub
lods
scas
xchg
lret
aas
movsb
push
inc
fiadds
jae
jae
push
pop
cmpsb
int
cli
cmp
lret
mov
aad
out
loopne
and
aad
test
mov
addr16
adc
mov
jecxz
mov
add
sub
mov
cwtl
inc
movsl
xor
out
icebp
mov
mov
imul
mov
inc
xchg
imul
pop
cmpsl
inc
mov
loopne
pop
xor
sbb
inc
jbe
repz
fmul
pop
aam
aas
and
lret
pop
jmpw
adc
lds
jb
inc
xlat
mov
out
sarb
sarb
loopne
mov
jp
sub
sbb
out
push
outsb
add
inc
addl
repz
test
pop
mov
cwtl
jl
xor
stos
mov
fcoms
rclb
or
cmp
popa
lock
aas
dec
jo
repnz
out
xchg
dec
arpl
loopne
fsubl
inc
bswap
pushf
stos
inc
push
adc
stos
cwtl
das
enter
pop
out
jno
daa
mov
lahf
sbb
jp
imul
cltd
lcall
outsl
nop
dec
pop
mov
scas
comiss
sahf
movsb
dec
mov
adc
outsl
js
mov
pop
leave
pusha
dec
shrl
fsub
jle
leave
inc
scas
push
loopne
ja
inc
xor
outsl
push
push
imul
or
popa
mov
in
repz
cmp
test
imull
jg
mov
dec
dec
dec
ficomps
mov
ja
shrl
sbb
ret
or
push
xchg
add
arpl
xor
les
adc
xchg
cli
xchg
cli
pop
push
xchg
sbb
xor
add
sub
mov
mov
fcoms
inc
fucomp
ss
inc
subb
push
loopne
mov
fwait
ss
test
jmp
adc
fsubrl
jb
pop
icebp
push
cwtl
jecxz
out
stos
testl
mov
sub
adc
js
fidivrs
inc
fs
stos
inc
aad
test
enter
push
jnp
xchg
insl
enter
fwait
fs
mov
mov
pushf
mov
into
jo
pop
sahf
mov
sbb
out
call
sti
test
sbbb
and
mov
adc
sbb
xchg
fdivrl
dec
jg
jae
push
inc
sub
dec
dec
mov
dec
fcoms
neg
jb
mov
shrb
insl
mov
mov
jle
push
pop
adc
dec
daa
insb
ffreep
rorl
lahf
add
or
clc
fwait
xor
cmp
inc
and
mov
push
in
add
xchg
loop
je
mov
mov
jo
inc
sbb
mov
xchg
mov
xchg
ficoml
nop
int3
sbb
ret
sub
jnp
shrd
xlat
mov
js
cmp
mov
sub
lods
mov
fisttps
out
cmp
lret
mov
shrl
ror
push
pop
adc
mov
jb
iret
add
jne
test
ljmp
pop
jb
ss
imulb
addb
imul
adc
mov
mov
jnp
icebp
add
add
adc
in
add
shll
js
sbb
inc
mov
aaa
std
adc
jp
testb
adc
sub
cmp
pop
pop
imul
mov
das
xor
xor
icebp
pop
xchg
js
call
jmp
add
mov
and
flds
jne
cwtl
cs
cmp
hlt
xor
aaa
sbb
popf
adc
push
add
pop
lret
mov
test
sub
int3
pop
testb
stos
jno
or
cmp
out
pop
repnz
adc
push
jg
out
xchg
rorl
or
lret
mov
cli
jp
call
sbb
std
or
ret
int
jle
aam
shl
add
dec
pop
stos
sbb
inc
shrb
fsubrs
int
cwtl
jg
mov
xor
in
pop
cmc
sbb
pop
jge
dec
mov
mov
outsl
lahf
adcb
push
push
add
lock
xchg
add
jo
sub
xchg
adc
jns
nop
in
xorl
in
notl
enter
inc
data16
push
ret
add
and
dec
xor
jl
cmc
jl
dec
adc
pop
je
mov
push
jecxz
xchg
sub
xchg
lods
and
or
testb
jle
sbbl
int3
lret
and
lahf
cmpb
sti
xor
pop
aaa
push
xchg
movsb
add
mov
sbb
repz
insb
fisttps
cmpsl
jb
call
iret
or
dec
lret
iret
xor
test
push
int
xor
cmp
ss
inc
hlt
xchg
jb
mov
inc
cmpsl
repz
push
enter
aam
cs
cmpsb
cmp
js
les
cvtdq2ps
dec
jecxz
pushf
mov
pop
out
fidivrs
pop
lds
push
add
test
icebp
xchg
lods
mov
lret
and
ret
hlt
xchg
jb
mov
clc
lds
mov
mov
jno
add
int
xchg
dec
lock
daa
popf
sahf
stc
or
xor
and
test
mov
cltd
test
ret
ds
shlb
sarb
dec
sti
mov
sub
int3
dec
and
out
push
pop
rorl
loop
pop
sub
ret
sbb
shlb
fidivrl
ret
jp
int3
jnp
lds
cwtl
das
dec
fisubl
addr16
xor
adc
fcomip
dec
std
xchg
add
jne
adc
jle
push
xor
mov
aaa
rclb
andb
or
jb
rorl
xchg
dec
cmpsb
and
les
ficompl
jecxz
pushf
shlb
ljmp
push
dec
sbb
dec
add
ds
lods
das
stc
popf
add
popf
inc
fcoml
xchg
jmp
jecxz
xchg
hlt
jbe
andnps
mov
pop
push
mov
mov
cltd
aam
pop
popl
imul
adc
popa
imul
adcl
cmp
in
xchg
xlat
push
ret
ss
xchg
mov
mov
inc
jp
repz
fwait
enter
rorl
and
pop
jbe
adc
cmp
cmpsb
add
mov
jae
inc
inc
repz
adc
jecxz
push
bndstx
imul
testl
jns
xchg
cmp
fcmovu
mov
mov
cli
popa
mov
js
aas
sbbl
add
ss
adc
lcall
lcall
lds
mov
cli
inc
fcom
lret
idiv
pop
cmpsb
jmp
jle
xchg
push
mov
aas
cmp
xlat
sub
inc
stc
ret
divb
push
push
xlat
insl
test
gs
adc
cmp
cli
aad
mov
fbstp
jae
and
pusha
roll
add
jne
pop
adc
stos
adc
fmuls
and
mov
dec
neg
loope
push
jmp
cmp
stos
sbb
filds
push
jne
arpl
and
cmp
fwait
pop
mov
and
mov
pop
adc
mov
cmp
je
cmp
notb
cld
aaa
outsl
shl
addb
mov
fidivrl
nop
fsubrs
daa
and
pop
leave
stc
mov
sub
xchg
out
outsb
test
inc
sub
cmpsl
cmc
inc
mov
pop
mov
jo
scas
shl
lret
and
mov
fs
xor
push
je
fisubrl
mov
fimull
pop
add
cmpsb
andl
insb
enter
lea
mov
jmp
cmp
or
add
jp
sahf
and
decb
lock
xchg
add
outsl
and
push
out
sbb
and
movsb
jecxz
and
mov
arpl
mov
scas
inc
cmpsl
dec
mov
sub
pop
test
dec
xchg
push
push
cmp
clc
rcrl
cmp
jg
les
or
loopne
pop
cmpsl
cmp
push
pop
les
mov
fcmovnb
in
sub
pop
dec
add
repnz
jg
xchg
dec
cmp
or
shll
mov
clc
and
stc
mov
cmp
push
cmp
ljmp
cli
mov
shrl
or
iret
and
addr16
xor
inc
mov
enter
into
nop
add
imul
push
pop
sbb
gs
mov
fistpll
mov
adc
mov
mov
shll
xchg
mov
das
sub
add
lret
ljmp
mov
out
stos
push
fstp
dec
lods
xchg
jbe
test
push
inc
sub
sub
idivl
mov
test
push
sub
insl
pop
cld
jg
or
inc
or
shll
xchg
sub
sar
test
mov
adc
mov
jo
or
cmp
adcl
add
dec
mov
mov
ret
bound
aas
cltd
outsl
sub
push
adc
mov
mov
dec
aad
jmp
and
inc
mov
std
mulb
outsl
xchg
pop
jb
push
xchg
sub
jb
aam
out
adc
filds
cli
or
and
mov
daa
loopne
push
mov
gs
mov
ljmp
inc
gs
xor
test
sub
stos
daa
push
mov
and
repnz
mov
pop
add
sbb
rcrl
mov
jno
mov
scas
xchg
push
es
ret
outsl
fsubs
cld
pop
mov
xchg
out
stos
jge
sarb
push
mov
ja
lods
inc
push
mov
sti
bound
jge
jb
mov
sub
roll
sbb
cmp
test
pop
or
add
imul
jae
jg
mov
cmp
leave
cmp
punpcklbw
xchg
imul
mov
pop
pop
repz
ds
iret
and
and
addr16
lods
test
inc
pushf
jge
or
rorb
clc
lea
scas
imul
mov
lret
add
xchg
xchg
insl
push
xchg
in
inc
mov
xor
and
shrl
mov
jp
or
pop
notl
push
adc
aas
mov
push
scas
jnp
sub
push
cwtl
orl
and
inc
mov
testb
int
shlb
daa
jns
scas
subl
subl
or
xlat
xchg
mov
mov
inc
xchg
mov
push
push
repz
out
jp
adc
push
stos
jbe
push
stos
out
xor
sti
js
pop
test
mov
inc
imul
int3
and
mov
lods
test
or
push
clc
xchg
insl
lret
das
mov
fidivs
cld
pop
sub
jge
push
cmp
and
mov
inc
test
loope
repnz
xchg
cli
or
leave
inc
add
outsl
jecxz
fwait
jbe
out
sbb
inc
add
js
mov
pop
js
jle
outsb
pusha
out
dec
mov
add
mov
sbb
mov
jmp
scas
popa
fdivs
inc
xor
push
inc
adc
and
and
test
mov
in
rcrl
adc
insb
lds
jns,pn
inc
sub
clc
pop
mov
les
test
mov
push
jb
mov
inc
ret
push
inc
xchg
int3
and
leave
cmp
test
mov
in
pop
push
jmp
int3
insb
lds
mov
dec
movsl
xchg
jns
mov
xor
mov
gs
pop
xchg
lock
inc
or
loop
hlt
dec
and
dec
or
out
and
or
lret
stos
push
insl
xchg
aam
cmpsl
adc
mov
sub
pop
mov
mov
inc
out
pushf
adc
inc
insl
inc
ret
or
sbb
loop
cmp
cmp
fists
lea
leave
jns
add
inc
clc
les
subb
iret
fstpt
or
iret
sub
mov
lret
shlb
sbb
xchg
add
fwait
jns
and
fadds
inc
sbbl
xchg
dec
out
call
addr16
fmul
dec
push
sub
gs
sbb
add
pushf
mov
and
lret
sub
xlat
fldcw
jle
daa
enter
pop
scas
mov
cmp
scas
out
jle
icebp
daa
adc
cltd
imul
xlat
mov
pusha
dec
mov
adc
inc
inc
mov
xchg
dec
in
movsb
rcrb
jecxz
loopne
lret
cmp
add
call
xchg
push
push
pop
pop
or
xchg
xchg
lcall
lret
cli
test
push
and
fwait
xor
lock
test
fxtract
sbb
push
in
sub
pop
mov
inc
je
loopne
xor
mov
sahf
daa
popf
rcrl
push
cmpsb
bound
es
rorb
popl
xor
test
push
test
mov
sbb
dec
in
sbb
or
mov
ja
pushl
jbe
sarb
shlb
adc
mov
sahf
jecxz
mov
mov
mov
dec
jecxz
mov
push
push
lret
jne
mov
call
test
mov
mov
repnz
insl
cltd
mov
cwtl
jp
insl
jnp
jp
mov
xchg
push
inc
decb
and
push
push
jno
mov
mov
andl
shlb
es
xchg
loope
movl
sti
xchg
movsb
push
shrl
int
insl
mov
in
cwtl
pop
sbb
mov
notl
icebp
loope
and
lahf
mov
out
mov
and
repz
pushl
testb
push
cmp
mov
shrb
add
scas
fidivs
notb
cmp
out
lds
and
jbe
and
rcrb
xor
adc
pop
in
mov
mov
push
shl
stos
jb
popf
mov
clc
shrl
pop
aad
stos
test
add
scas
test
mov
sub
lea
gs
sbb
adc
pushf
cmp
cmp
xchg
mov
cmp
add
pop
mov
outsb
iret
dec
mov
inc
jb
jb
sbb
pop
addl
jecxz
dec
or
cmc
mov
lods
push
mov
scas
xor
sbb
in
cmc
mov
fistl
xchg
movsl
out
jb
subl
in
pop
lret
xlat
sub
stos
loop
inc
sbb
divb
add
inc
cvtps2pi
test
pusha
fstl
ds
jnp
mov
lock
test
enter
inc
or
mov
or
test
pop
jnp
dec
mulb
sarl
pop
jl
hlt
cmp
or
and
and
adc
mov
into
int3
mov
ljmp
jmp
push
out
pop
lock
gs
es
dec
jecxz
cld
lcall
mov
xchg
sbb
ficoms
arpl
cmpsb
fs
mov
jne
aas
push
dec
shll
add
std
and
fnstsw
xchg
jne
pop
jne
push
cmpsl
jl
repnz
icebp
and
inc
movsl
inc
repz
dec
xchg
inc
dec
adc
sarl
push
mov
jo
mov
mov
clc
lods
jo
mov
out
inc
fisubl
mov
dec
xchg
and
addr16
gs
jae
dec
jecxz
push
push
jl
mov
aas
mov
les
cwtl
jle
lret
test
ficoml
push
jb
pop
dec
xlat
nop
aaa
lds
call
cld
fbld
fnstenv
loopne
dec
xchg
pusha
mov
xchg
popf
sbb
stos
xchg
aaa
sbb
jl
cmp
fcmove
jbe
repz
lock
popf
std
enter
out
xor
int
jnp
xchg
lahf
sub
dec
pop
xchg
sub
push
nop
in
push
mov
mov
je
push
es
xor
xchg
xor
push
aaa
and
adc
mov
fwait
test
arpl
inc
cmp
or
push
sub
movsb
mov
lods
ror
mov
or
xchg
stos
inc
push
inc
scas
or
mov
dec
shrl
push
aad
mov
cmpsb
icebp
and
mov
push
inc
push
adc
and
aas
mov
shl
stos
test
ja
loop
xor
pop
loope
push
ja
add
xor
clc
jno
mov
xchg
pop
push
push
jecxz
call
jno
mov
loope
cmp
insl
popf
in
pop
dec
pop
pop
scas
cmp
jns
xor
push
fwait
dec
pop
dec
and
jge
jo
cld
dec
dec
adc
xchg
pop
scas
inc
sbb
cld
dec
xlat
cmp
jg
les
hlt
mov
inc
fildl
shll
jl
pop
push
push
dec
clc
clc
xor
call
js
mov
lret
mov
dec
pop
mov
nop
ret
sbb
add
rcll
in
or
xchg
xchg
fucomip
or
lahf
lods
cmp
or
sbb
cwtl
cmp
cmp
jb
aad
push
mov
xchg
adc
cmp
fldenv
mov
xchg
pusha
shlb
adc
repz
or
aaa
outsl
pop
cld
rclb
cmp
pop
cmp
ja
es
gs
xor
lret
movb
scas
test
ja
adcl
mov
mov
xor
pop
stos
or
ret
aas
lahf
jmp
out
xor
loop
pop
and
int3
jg
std
push
rcrl
mov
loope
inc
add
xor
push
jae
fsubs
cmp
and
or
scas
cmp
aaa
arpl
mov
repz
out
or
jbe
sahf
out
cli
push
cmp
daa
dec
hlt
inc
arpl
insb
scas
jge
scas
call
ds
sahf
mov
pop
pop
cmp
mov
fadd
dec
dec
outsl
inc
push
arpl
mov
shll
or
test
mov
mov
add
int3
xor
cmp
test
cmp
shll
loop
add
insb
mov
adc
sub
dec
push
in
imull
in
test
sub
jg
cmp
adc
cmpsl
adc
push
inc
jo
pop
xchg
gs
push
les
or
sub
sbb
cmp
mov
add
mov
inc
neg
aad
addb
or
in
lahf
mov
cmp
inc
sub
inc
into
xor
sbb
xchg
repz
adc
pop
rorb
xlat
insl
stos
pop
aaa
pop
in
mov
push
pop
dec
iret
add
inc
push
in
jbe
test
cmp
test
jge
jp
in
fiadds
es
popf
fsubs
or
add
xchg
dec
sbb
mov
push
shl
scas
jge
jb
cmc
mov
mov
fcomi
test
bound
repz
inc
sbb
int
leave
and
cwtl
push
ljmp
dec
jne
pop
lods
cmp
mov
ja
les
or
jmp
mov
xlat
mov
add
iret
fcmovnbe
or
dec
push
mov
nop
xchg
sub
jno
ret
out
mov
scas
dec
rolb
fsubl
dec
jne
out
inc
bound
adc
call
pop
andl
push
mov
mov
fdivl
dec
test
push
out
andb
sahf
mov
sub
jl
mov
pop
cmpps
fdivl
and
dec
cmp
iret
gs
add
in
out
push
mov
test
outsb
add
jp
mov
mov
push
push
mov
dec
mov
jae
fst
push
subb
data16
cmp
in
lea
dec
stc
inc
lock
scas
jmp
and
cld
add
mov
lret
insl
sahf
clc
fs
mov
push
je
ljmp
and
mov
xchg
mov
or
aam
dec
dec
mov
jbe
xchg
loopne
adc
mov
test
movsb
test
xchg
dec
add
xor
andl
add
cmp
fnsave
jmp
adc
stc
xchg
xchg
mov
movsl
scas
bound
add
mov
inc
dec
xchg
lds
popl
push
mov
jne
imul
int3
jp
jb
push
pushf
push
sub
cmp
jbe
mov
rorb
outsb
sarl
inc
arpl
sub
addr16
sub
cmp
add
outsb
fsts
push
imul
xchg
pushf
mov
push
ljmp
mov
adc
out
xchg
jns
mov
xchg
imul
cs
popf
insl
inc
cmc
enter
push
lret
jle
cmp
pop
jo
mov
mov
adc
add
imulb
repnz
iret
pop
pop
mov
std
lock
cmpsb
ds
call
sbb
lret
hlt
addr16
push
or
fidivrl
loope
cmpsb
xchg
fidivs
jp
sub
jl
mov
or
test
out
xchg
pop
cmp
lods
std
mov
je
test
lods
test
aaa
iret
je
stos
movsl
lods
mov
lock
fisubs
ret
pop
push
xchg
jg
xor
mov
adc
pop
dec
icebp
or
insl
scas
inc
aad
cmp
sbb
rclb
xchg
push
roll
xchg
xchg
arpl
mov
pop
inc
mov
mov
pop
mov
cltd
push
mov
stc
lret
das
les
add
aaa
sbb
xchg
pop
movsb
aaa
adc
push
push
mov
sub
iret
sbb
lret
push
jnp
xor
mov
jb
subl
outsl
xor
jmp
sbb
pop
xor
jge
and
or
sub
dec
pop
addr16
pop
cmp
or
xor
xor
add
lret
aaa
daa
inc
bound
es
mov
add
jbe
ja
and
subl
pusha
xchg
mov
and
sub
lds
jmp
adc
adc
cmp
xchg
dec
mov
mov
aas
flds
or
bound
out
jo
cmp
cwtl
pop
mov
pusha
idivl
push
shll
cmp
hlt
adc
dec
loope
add
fidivs
push
cltd
fs
push
in
xor
aaa
mov
push
dec
xor
out
fiadds
mov
pop
mov
sbb
xor
mov
jae
xchg
pop
insb
add
push
push
cmp
int3
das
stc
mov
ficoms
adc
outsl
add
ja
push
push
mov
mov
jecxz
dec
jp
stos
push
mov
mov
adc
cltd
adc
mov
ficoml
icebp
mov
lds
adc
outsb
dec
adc
jmp
filds
dec
cmp
jmp
add
loope
xor
leave
test
cmp
popf
orb
mov
xchg
arpl
inc
aad
mov
push
jnp
jecxz
mov
out
in
dec
inc
push
out
stc
sub
shl
outsb
add
loopne
lea
movsb
pop
test
lods
loopne
cwtl
or
int
inc
inc
pop
movsl
mov
mov
out
jle
loop
inc
fwait
dec
jle
sarb
repz
repnz
fistpll
jp
cwtl
pop
icebp
mov
cmpsl
adc
mov
cmc
xor
jge
sbb
or
xchg
mov
push
push
pop
dec
cmp
jns
lods
stos
xor
xchg
xor
mov
push
rcl
aaa
int3
outsl
shlb
out
clc
rcrb
fcoms
inc
arpl
fisubrs
fsubrs
inc
and
dec
loop
in
stos
xlat
mov
ficomps
adc
lea
dec
rclb
into
sub
out
insl
inc
fcomps
aaa
pop
imulb
lods
dec
cmp
in
mov
mov
lods
sbb
dec
push
jne
mov
icebp
cli
test
lods
aad
push
lret
inc
fs
icebp
out
stos
sahf
icebp
inc
lahf
lods
sti
adc
insb
jmp
mov
cmp
xor
mov
sbb
pop
scas
pop
or
xlat
jb
test
mov
sbb
pop
push
mov
fbstp
sub
bound
push
in
test
jbe
add
mov
mov
les
inc
jb
dec
add
and
push
ljmp
dec
gs
pop
in
xchg
sarb
inc
cli
cli
ds
flds
sub
ljmp
xor
jl
sbb
adc
lds
stos
cmp
jle
lret
outsl
push
push
sahf
sarb
pop
mov
jnp
gs
je
cmpb
pop
test
scas
mov
xchg
sub
mov
mov
xchg
rcll
arpl
mov
mov
cmp
mov
out
mov
hlt
jecxz
sub
insb
pop
addb
out
ret
shl
les
jecxz
push
sbb
jge
sub
xchg
sbb
decl
sti
inc
cli
ret
dec
loopne
sub
push
push
mov
mov
adc
fcmovne
hlt
repnz
push
into
mov
pop
pop
call
mov
out
add
aam
stos
add
pop
sub
rorl
cmp
mov
hlt
addl
imul
pushf
pusha
mov
das
out
aas
push
in
cmp
jmp
sarb
pop
into
idivb
xchg
xchg
ror
and
mov
dec
fstl
aam
add
test
pop
into
sub
jle
xchg
subl
jl
and
mov
mov
inc
adc
jno
shl
cmp
in
add
jo
push
lret
mov
jmp
mov
pop
mov
loop
mov
adc
inc
lea
add
bound
fidivrs
test
cld
mov
xchg
pushl
cmpsb
test
stos
inc
test
sar
push
ret
dec
fcoms
mov
jge
mov
pop
mov
mov
gs
or
push
cmp
mov
int
hlt
pop
sbb
or
repz
mov
pusha
fistpl
push
sbb
push
fidivl
das
xchg
movsb
data16
clc
sarl
data16
cwtl
xchg
sub
in
sub
mov
in
xchg
or
ss
push
mov
cmpsb
sub
lahf
dec
addr16
dec
jg
or
cmc
mov
push
cltd
add
out
xor
cmp
in
popf
fs
push
and
arpl
xchg
fdivr
orb
fistps
sub
dec
and
mov
pusha
dec
les
mov
fildl
jl
lods
in
push
cmpsb
in
into
push
pop
int3
std
mov
outsb
stc
sub
lods
push
addr16
sub
mov
rcrb
push
pushf
pop
mov
ja
es
xchg
int3
into
fucomip
testl
xor
push
out
mov
and
adcl
gs
xor
aas
jmp
sbb
outsl
leave
or
push
arpl
fbld
addl
into
stc
repnz
in
fs
dec
loopne
xor
push
and
sti
xchg
or
das
mov
sub
xor
mov
sub
std
pop
dec
fstpt
out
cmpsl
repnz
pop
ficoms
repnz
mov
cmpsl
jle
lret
sahf
and
inc
add
xchg
fs
xorb
cmp
sub
lock
or
call
aam
ret
hlt
std
cmc
inc
outsl
call
pop
sahf
mov
or
jo
repz
rcrb
out
xchg
mov
test
aaa
fcmovnb
mov
adc
lret
lret
and
add
pushf
sti
mov
in
push
cmp
jno
dec
out
clc
pop
adc
mov
dec
pop
sti
push
jge
cmp
dec
pushf
mov
lock
jnp
push
in
inc
fwait
jbe
movsl
lods
in
incl
sbb
jp
add
je
hlt
jmp
inc
call
dec
inc
lcall
xadd
leave
xlat
loop
jp
aad
and
add
cmpb
aas
fnstenv
or
rcr
mov
cmp
jl
xor
xchg
xchg
inc
lret
xchg
nop
push
cltd
dec
push
int
push
jmp
or
xorl
in
add
fdivrs
imul
je
pop
rcr
sbb
jg
test
popf
dec
push
and
mov
rclb
sahf
inc
pop
mov
jne
imul
inc
cmpsb
jp
fsubr
mov
and
push
cli
sub
push
xchg
mov
xor
inc
scas
shlb
sbb
adc
notl
gs
out
xchg
or
sbb
pop
ficompl
fmull
daa
adc
mov
pop
pop
movsb
mov
dec
or
outsb
pop
mov
out
mov
ret
or
pop
cmp
dec
movsl
push
mov
sarb
mov
add
movaps
inc
rcr
push
test
mov
mov
in
ret
adc
pop
lahf
cltd
dec
aam
push
ljmp
or
sahf
stos
cmp
in
add
jbe
mov
xchg
mov
sbb
or
inc
inc
mov
pop
xchg
insb
int3
mov
mov
ja
xor
adc
popa
movl
mov
xorb
push
xchg
loop
lods
sti
mov
stos
imul
movsl
ja
outsb
mov
adc
and
ss
sbb
push
jo
pushf
add
xchg
dec
jl
push
in
cmp
jne
jg
aad
pop
pop
scas
scas
cmp
arpl
jno
dec
adc
mov
pop
inc
pop
cmp
aas
inc
stos
inc
push
inc
or
aad
inc
push
rorl
imul
xor
inc
pop
xchg
je
and
dec
pop
add
fidivl
jp
in
aaa
inc
hlt
inc
in
push
mov
sbb
xor
dec
adc
aas
and
adc
xchg
pop
pop
aad
ret
push
pop
jp
mov
jnp
mov
and
fnsave
add
outsb
out
gs
inc
dec
fucomip
inc
and
cld
int
outsb
addb
subb
mov
or
out
aad
mov
dec
push
mov
ret
xchg
jne
lock
shr
out
and
clc
dec
jmp
test
in
nop
jb
push
cmp
decl
dec
aad
xchg
aas
dec
mov
ja
push
jle
mov
push
push
loop
shlb
add
xor
iret
repz
mov
adc
sub
jmp
loopne
sub
outsb
clc
test
sub
jb
inc
faddp
sbb
notb
gs
xor
cmp
push
inc
mov
in
cmc
outsl
xor
lret
xor
loopne
lret
push
test
daa
enter
xor
sub
push
movb
push
call
iret
xchg
outsl
jge
sbb
xchg
sub
and
mov
les
stos
pop
jbe
scas
adc
jb
pop
cwtl
bsf
xchg
out
cmp
lahf
jp
inc
or
push
out
lock
movsl
lds
adc
push
pushf
loop
dec
jle
mov
or
mov
xchg
or
pop
mov
push
ret
cmp
pushf
mov
dec
call
jl
mov
or
pusha
ret
daa
jmp
sbb
stos
js
xchg
mov
and
in
cmpb
adc
loopne
sub
test
stc
scas
mov
or
jb
add
int
cmp
and
cmp
cli
cmp
xchg
movsl
and
adc
out
and
jo
cmp
mov
mov
lahf
gs
outsb
cmp
test
xchg
sub
adc
inc
or
lods
cmp
lret
mov
jno
cmpsb
mov
cwtl
mov
popf
lods
sub
push
sahf
push
leave
mov
popf
jmp
push
decl
mov
jns
fists
ds
sti
stos
mov
inc
push
je
mov
cli
into
cmp
mov
push
aad
adc
mov
push
loop
movsl
lock
sub
out
jae
clc
andl
inc
sub
add
sub
cmpsb
mov
adc
aas
adc
xor
push
and
stos
daa
jl
lahf
adc
xor
mov
iret
cwtl
cmpl
mov
adc
push
inc
adc
adc
out
mov
cmp
scas
enter
cmc
adc
pop
out
mov
scas
ja
push
inc
dec
push
xchg
dec
inc
shr
pop
pop
add
mov
lret
repz
inc
clc
or
push
jne
jp
push
aam
in
mov
xchg
xchg
insl
shr
or
or
push
subb
push
fidivrs
fbld
xor
imul
and
shrb
lahf
call
inc
insl
pusha
cwtl
aaa
mov
and
ds
sbb
js
test
pop
fst
cmc
mov
pop
mov
or
sti
pop
sbb
dec
mov
out
xchg
insb
movb
lock
mov
rolb
cli
test
test
mov
jbe
leave
add
repnz
pop
and
inc
cmp
and
xlat
cwtl
mov
nop
aaa
popa
push
fstl
call
cmpsl
push
jae
nop
xchg
cmp
lods
movl
lret
rcrl
and
dec
pop
scas
cmpsl
jecxz
iret
pop
hlt
dec
je
ljmp
fldenv
adcb
mov
mov
mov
shrb
jge
sbb
sarl
gs
stos
mov
sbbl
push
jne
inc
stc
pop
out
or
sub
xchg
sub
sarb
sub
fdivrl
loopne
inc
rcr
clc
push
adc
ljmp
push
xor
push
lds
xor
and
push
das
arpl
push
pop
pop
rcrl
mov
add
rcrb
add
sub
mov
popa
xor
sub
mov
dec
or
xchg
mov
or
into
mov
outsl
rcrb
popf
sbb
outsb
or
int3
or
in
sti
or
push
mov
shrl
jne
lahf
lret
sub
dec
sti
xchg
lret
incl
push
repz
inc
rol
pop
mov
icebp
movsl
push
xchg
test
jmp
clc
rorl
idiv
adc
and
es
add
dec
pop
push
ret
ret
jns
jg
sub
and
les
cmpsl
sbb
and
jo
adc
xchg
lret
idivb
out
mov
lcall
adc
jb
loope
insb
cld
clc
in
cmp
movsb
mov
stos
fsqrt
shl
dec
lahf
xor
cwtl
and
jo
xor
sub
jge
push
leave
mov
inc
dec
test
mov
pop
fucomip
inc
mov
xchg
sbb
or
mov
into
out
popf
xor
sarb
imul
xchg
mov
bound
pop
movsl
mov
pop
cmc
stos
imul
mov
orl
add
sub
loope
mov
cs
test
or
iret
mov
arpl
cli
pop
mov
lds
aad
pop
jbe
std
mov
repz
rcl
cmpb
pop
shr
aam
bound
push
sbb
sub
push
lret
sbbl
sahf
fnstsw
pop
adc
xchg
mov
es
mov
arpl
bound
mov
or
imul
jo
cmc
mov
mov
movb
xchg
mov
jae
sar
adc
mov
enter
lock
inc
mov
sarb
inc
xlat
test
addr16
cmpsb
pop
popf
sbb
js
scas
fcmovbe
inc
sbbl
repnz
or
in
out
imul
orb
aam
mov
xchg
xor
lcall
std
inc
jge
push
test
adc
xchg
jl
xchg
cltd
and
stos
stos
sbb
sti
xchg
mov
sbb
adc
insl
xchg
inc
inc
push
adc
ljmp
or
add
dec
push
mov
dec
jo
xchg
adc
jb
mov
sahf
cwtl
cmp
iret
es
or
cltd
mov
nop
push
cmp
cli
xchg
loop
adc
cld
std
pop
cli
enter
mov
push
pop
mov
adc
sub
lcall
mov
mov
add
movsb
push
mov
sbb
push
push
adc
call
inc
and
push
jnp
push
or
and
xor
cltd
cmc
lea
xchg
adc
hlt
ret
pop
mov
pop
imul
xorb
lret
jmp
jg
jmp
imul
push
jg
add
into
sub
mov
cmp
inc
cmp
loop
nop
mov
mov
adc
data16
xor
sub
pop
xorl
or
mov
ljmp
add
scas
inc
add
mov
subl
outsb
pop
or
push
pushf
jg
dec
mov
jp
adc
add
jbe
sub
daa
mov
cltd
leave
scas
mov
jecxz
push
subl
sbb
loopne
movsl
shrb
mov
push
dec
xchg
inc
rclb
ja
add
and
cmp
pop
in
popf
repnz
lret
xchg
bound
mov
mov
push
push
leave
inc
mov
rcrl
cltd
setbe
dec
xchg
jmp
fcmovbe
mov
nop
mov
inc
enter
faddl
adc
mov
ds
xor
arpl
cmpsb
or
hlt
jl
call
aam
push
out
ljmp
adcb
mov
test
add
and
cld
or
xchg
imul
addr16
loope
rclb
adc
or
pop
es
subl
lods
scas
xchg
ficoms
mov
dec
jmp
fistpll
dec
push
jo
aad
out
push
or
cmp
pop
test
enter
xlat
pop
sbb
inc
fistpl
out
dec
dec
bound
outsl
mov
mov
lock
xor
mov
mov
xrelease
mov
lret
enter
repz
and
iret
push
fstps
jecxz
flds
shl
xor
xchg
out
scas
xchg
pop
sbb
lret
or
mov
push
aam
stos
add
in
cmpsl
mov
pop
mov
and
cltd
and
inc
iret
enter
int3
xor
gs
sahf
ret
lods
aas
imul
pop
cmp
pop
jl
jp
or
add
jp
push
int3
xchg
ret
pop
call
sbb
xchg
or
cs
sub
push
xchg
aaa
cs
push
outsl
pop
mov
or
ret
ds
adc
sbb
push
and
daa
shlb
dec
out
adc
xor
sti
mov
in
dec
bnd
sub
enter
je
and
sbb
scas
shlb
lods
inc
popf
ds
xlat
pop
jmp
fldl
sbb
xchg
ret
idivb
cmp
pop
jo
lret
jmp
in
inc
push
or
cmp
rol
and
andl
and
loop
jbe
jle
cltd
stos
test
je
inc
shrl
sub
mov
or
dec
dec
pop
call
cmp
xor
mov
jmp
loopne
xor
rorb
mov
jno
push
addr16
or
xchg
cs
cs
and
std
inc
inc
adc
adc
xor
push
cmpsb
xor
push
xchg
sbb
je
out
cmpsb
in
inc
and
test
or
insb
cwtl
das
out
pop
imul
xorl
push
pop
push
shrl
es
and
sarb
jmp
cs
scas
add
add
ljmp
inc
lret
shll
or
test
shrb
inc
arpl
pop
loopne
fldcw
ror
shr
lahf
sub
arpl
push
shlb
ljmp
in
dec
push
aas
pop
mov
addr16
push
insl
in
sbb
nop
fmul
fs
aad
pushf
mov
jmp
clc
cmpsl
jnp
mov
cmpsl
dec
aam
pop
and
ljmp
mov
push
sub
pusha
rcl
push
icebp
adcb
lret
xor
mov
pop
adc
iret
outsl
or
mov
pop
dec
test
xchg
sbb
sbb
and
cltd
enter
xor
inc
aam
cmpsl
cs
in
jmp
pop
mov
mov
add
cmc
add
mov
inc
jg
xor
bound
sub
cmp
xor
daa
dec
mov
adc
enter
jle
loope
dec
dec
xchg
sub
cmc
jecxz
pop
push
push
insl
mov
dec
add
addr16
sub
mov
push
jb
add
adc
pop
jge
aas
add
js
sub
ficoms
jnp
int3
lret
lret
pop
cmpsl
sbb
les
gs
xchg
sub
into
enter
mov
dec
push
pop
out
push
mov
mov
dec
pop
rclb
sub
gs
xchg
mov
lods
fcompl
mov
cmp
fisubrl
int
add
adc
mov
repz
dec
xor
ret
sbb
inc
push
repnz
mov
mov
rorl
push
sub
fildll
cs
pop
cmp
sti
jbe
call
fnsave
mov
in
xchg
cli
pusha
lcall
cvttps2pi
ja
cmpsb
xchg
fsubrs
ret
shlb
and
mov
push
sbb
js
loope
popa
imull
mov
in
sbb
or
popf
in
add
hlt
xor
les
adc
push
int3
cmp
sbb
push
mov
loopne
sbb
pop
dec
fwait
mov
push
fstpl
mov
mov
in
inc
adc
cwtl
mov
mov
fcomip
adc
push
xchg
xchg
sbb
mov
sub
clc
shl
sub
test
ds
mov
sub
fxch
arpl
cmpsb
jmp
xchg
sahf
push
mov
lret
pop
movaps
xchg
rclb
dec
mov
pop
xchg
and
sub
sub
fstpl
ficoms
aaa
add
sahf
pop
and
pop
lock
cmp
jmp
pop
inc
cmp
mov
lret
xchg
iret
pop
xchg
clc
imul
sub
cli
pop
clc
test
mov
jmp
subl
and
jb
enter
repnz
ss
movsb
jnp
ljmp
jo
inc
stos
inc
xchg
add
dec
push
cwtl
repnz
adc
push
pop
lods
fidivrl
xor
aaa
jmp
mov
mov
fisubrs
jae
aaa
pop
in
adc
int3
xchg
imul
xchg
pop
dec
mov
in
pop
pop
lahf
or
adc
movsb
push
pop
flds
gs
mov
add
outsl
xchg
in
test
sti
leave
pop
shrl
jno
out
into
loopne
add
and
lods
clc
push
cmpb
out
mov
mov
adc
imul
bound
imul
xchg
xor
xlat
push
add
jl
outsb
popf
jnp
and
sub
jbe
inc
cmp
adcb
mov
and
add
es
push
and
mov
sbb
hlt
adc
inc
push
bound
sub
jae
jno
pop
int3
xor
sbb
nop
in
mov
push
ljmp
divb
sahf
push
ficoms
push
insl
lock
or
cmp
out
mov
ja
rcrl
xor
xor
pop
mov
cmp
xor
push
mov
call
cmp
jg
nop
js
ret
fsub
imul
das
cltd
in
adc
insb
xor
and
and
sub
xchg
dec
jl
xchg
jo
and
or
cld
inc
dec
dec
add
mov
push
xchg
mov
lock
repnz
popa
or
cs
pop
push
push
fstpt
dec
repnz
icebp
and
clc
mov
pop
fcomps
icebp
mov
loopne
pop
inc
cmpxchg
cmpsb
in
push
imul
dec
cld
vunpcklps
jg
cmp
sub
cmpsl
jecxz
ret
pop
dec
jp
fwait
scas
ret
mov
lret
mov
stos
insl
jo
adc
add
mov
into
pushf
adc
ret
lret
popf
cmpsb
mov
cmp
pop
fwait
pusha
pusha
cmp
push
jb
xor
cmpsl
add
cltd
xchg
mov
push
sbb
fisubl
adc
hlt
xchg
cmp
lret
pop
in
mov
sbb
xchg
jo
cli
and
inc
dec
cmp
in
dec
pop
mov
dec
sub
inc
xchg
cmpsl
jae
es
ret
xchg
loopne
dec
push
mov
jae
mov
inc
arpl
int3
shrb
sbb
inc
or
es
sub
leave
or
cmc
lret
leave
fldenv
iret
and
clc
push
push
adc
pop
xor
aas
mov
jne
scas
mov
pop
fisubrs
cmp
in
iret
mov
loop
dec
pop
das
mov
sahf
push
mov
scas
inc
aaa
xchg
xchg
sub
fidivl
add
outsb
loopne
mov
cltd
dec
or
nop
data16
je
add
adc
hlt
mov
les
dec
xchg
in
mov
loop
or
xchg
push
ds
jo,pn
pop
addr16
les
das
insl
movsb
mov
popa
pusha
mov
rcrb
jl
fistl
shl
imul
in
and
addr16
movl
inc
and
cld
das
xor
fstps
or
sbb
add
ret
pop
sub
loope
jo
in
jnp
mov
add
fdivs
lock
repz
fwait
cwtl
xchg
jl
ret
ja
fiadds
and
fdivr
xchg
lss
pop
fisubrl
cs
aas
ret
mov
idivb
shrb
out
and
leave
out
mov
jmp
mov
insb
mov
enter
xchg
inc
ljmp
inc
pop
dec
push
icebp
ss
arpl
or
xchg
test
and
mov
es
jge
movsl
mov
iret
jo
loopne
adc
dec
jbe
xchg
call
fidivrl
or
ja
into
sub
cmpsb
jl
out
sbb
add
testb
sub
inc
cmc
and
mov
data16
jbe
shrl
es
xor
insb
pop
add
mov
cltd
inc
lods
xchg
mov
xor
mov
xchg
or
xor
push
cmpsb
and
jne
jne
jb
jge
push
add
dec
sbbb
mov
andb
ficomps
mov
mov
sbb
int
adc
xlat
sti
mov
dec
lds
daa
mov
inc
push
push
out
adc
cmc
dec
fcomip
cwtl
das
and
iret
mov
call
sbb
leave
fldenv
jp
and
movsl
mov
icebp
push
xchg
ds
mov
xchg
rol
hlt
lds
inc
jmp
push
dec
xor
icebp
mov
dec
push
push
push
dec
jle,pt
adc
xor
lcall
outsb
stos
cmp
sub
je
outsb
mov
fstpl
jle
in
sbb
jle
sbb
sbb
add
mov
push
push
test
ja
testl
dec
imul
push
mov
aam
jo
lods
xchg
je
aaa
adc
push
imul
push
mov
inc
mov
xchg
pause
sbb
out
add
inc
jecxz
mov
ficomps
push
mov
mov
cmp
sub
mov
push
mov
call
xor
fistps
std
mov
lret
mov
push
daa
jecxz
jmp
cmp
movsb
xchg
outsb
jl
shlb
mov
jns
addr16
cmpsb
mov
movsl
jae
jmp
pop
mov
adc
incl
stos
out
outsl
ficoms
or
pop
mov
fcoml
sub
out
mov
dec
inc
pop
ds
gs
mov
ja
sub
loopne
test
dec
adc
fmull
adc
mov
and
and
sub
xchg
mov
pop
xor
mov
xchg
shlb
cmp
xchg
shll
pop
outsl
in
inc
scas
lea
fdivs
mov
cmp
in
jo
pushf
aam
push
push
cli
xor
cli
jmp
in
sub
ret
sbb
and
pop
inc
aas
sbb
scas
jge
xor
int3
clc
outsl
add
sbb
and
cmp
les
sbb
sub
adc
int
cmp
dec
cmc
push
add
mov
subb
sahf
int3
iret
mov
sbb
jge
mov
out
decl
clc
scas
jns
bound
in
push
jne
add
ret
inc
jge
out
scas
pop
sub
bswap
gs
dec
lods
inc
jns
push
stos
gs
jge
mov
rcrb
pop
outsl
cmp
push
leave
cmp
loop
cmp
push
xor
jb
mov
adc
mov
in
dec
in
jnp
jae
cmp
in
adcl
clc
ljmp
xlat
and
xchg
xchg
ja
inc
lcall
lret
call
lcall
loope
stc
fnsave
sbb
sbbl
orl
sti
push
dec
jb
adc
fnstcw
shrl
es
mov
adc
jo
cmp
cmp
mov
sarl
std
fidivrl
jnp
pop
inc
test
repz
dec
arpl
call
xchg
rcrl
mov
shl
repnz
pop
cwtl
fs
mov
mov
std
xchg
jnp
test
mov
and
sub
std
lods
loop
push
adc
or
dec
xchg
mov
je
push
in
and
add
ret
pop
and
int
or
add
sub
inc
dec
cmp
or
fnstsw
and
pushl
in
repnz
test
jns
data16
inc
mov
ljmp
mov
jbe
push
fimull
gs
nop
sub
ss
fstpl
orl
out
lea
lds
pop
popf
xor
cmc
pushf
rcll
push
inc
mov
lock
fnop
mov
mov
js
mov
xchg
out
int3
and
lret
repz
out
stos
cltd
icebp
push
push
clc
sub
push
jg
in
inc
add
sahf
xorl
or
xlat
mov
ret
outsb
mov
in
mov
pop
xchg
insl
movsl
je
out
cmp
add
je
jle
xchg
lahf
inc
nop
cli
jge
cmp
enter
mov
mov
dec
sub
xchg
loop
lds
inc
fldenv
rorb
sub
addl
add
add
loopne
push
xlat
lea
push
stos
fsubrl
xor
enter
fisubl
lret
inc
mov
pop
add
rolb
mov
pop
inc
xchg
xchg
inc
push
sbb
pop
cwtl
inc
or
iret
adc
jmp
outsl
loope
dec
cmp
bound
gs
fs
xchg
test
or
sti
push
mov
xchg
pop
fsubs
test
jnp
mov
scas
popf
sbb
push
cmp
jbe
mov
out
mov
outsb
cmpl
test
push
outsb
xchg
dec
bound
cmp
ljmp
dec
dec
das
fstps
sub
call
mov
sub
nop
popaw
dec
test
push
adc
jne
leave
mov
jb
mov
lods
mov
add
add
loopne
inc
sub
xor
mov
mov
pop
or
cmp
jecxz
mov
mov
sbbb
sub
cmp
sbb
out
es
mov
jbe
das
ds
pusha
jge
sub
xor
fiadds
cs
dec
cli
addb
inc
ficoml
popa
or
push
jecxz
xor
popa
xor
push
fbstp
mov
mov
adc
mov
enter
sbb
mov
test
ljmp
pushf
xchg
cld
cwtl
dec
and
sbb
xor
sti
xor
jns
sbb
pop
jne
cmpsb
ja
fwait
jecxz
shrl
aaa
pop
cmp
pop
shl
ss
xor
mov
rcll
testb
xchg
adc
test
push
in
ret
lcall
xchg
xor
or
movsl
jns
test
pop
pop
jae
test
std
fmull
and
test
mov
dec
lret
mov
lcall
test
fiaddl
call
xchg
mov
out
ret
cli
jne
mov
ret
mov
xchg
adc
pop
cmp
test
enter
stos
mov
sbb
out
lock
push
cmpsb
xchg
outsb
add
cli
jecxz
repnz
aas
dec
data16
jnp
arpl
popf
pop
add
popa
test
outsl
add
ret
cltd
mov
cltd
xor
or
cli
cmp
mov
fwait
ljmp
fxch
loop
mov
adc
xlat
cmp
sub
and
jmp
js
cld
in
push
mov
fcmovnb
jb
in
stos
xchg
mov
and
jl
adc
adc
mov
pop
call
push
inc
repnz
pop
arpl
cmp
sub
add
fstpt
es
iret
out
jbe
dec
adc
pop
pushf
mov
inc
cmpsl
sbb
js
scas
lods
iret
subb
ljmp
aam
lcall
jmp
pop
add
add
cmpsb
gs
jb
xchg
and
jle
bnd
adc
adc
push
mov
xchg
dec
int
sbb
jo
test
mov
inc
pop
sub
in
sbb
mov
sub
pop
jne
sti
pop
bound
jmp
sub
popf
clc
xchg
in
inc
adc
mov
push
mov
outsl
sub
cmc
in
clc
mov
mov
cmp
loopne
push
test
testb
es
cmp
dec
int3
dec
outsl
daa
dec
push
aaa
push
jns
mov
add
adc
inc
jno
test
mov
mov
ret
sti
leave
insl
jbe
fidivs
iret
xorl
pop
inc
mov
pop
inc
adc
pop
or
bound
mov
sahf
pop
ljmp
sbb
cmp
jne
mov
pop
out
bound
jbe
add
fwait
pop
pop
inc
push
mov
pop
xor
lea
int
push
fcmovb
pop
test
movb
shl
pop
sti
rol
mulb
add
pop
mov
and
orb
push
and
cmp
mov
or
sbb
icebp
dec
out
inc
adc
aam
ljmp
lahf
add
in
and
xchg
push
dec
aad
jne
sub
cmpsl
mov
pop
jbe
xchg
movsl
mov
inc
pusha
xor
sbb
das
ss
cli
lcall
stc
js
icebp
mov
sbb
out
push
pop
and
lods
ficompl
mov
xchg
sub
cmp
je
jge
cltd
push
imul
in
jne
fistps
or
seto
push
aam
mov
cmc
cs
xchg
and
cli
or
iret
shrl
xchg
lahf
xor
sbb
loop
pop
xchg
lods
mov
ja
cmpsb
push
icebp
sbb
xchg
stos
adc
mov
popa
clc
subb
push
inc
out
mov
push
xlat
pop
xchg
sbb
pop
ret
mov
mov
mov
mov
pop
jno
or
cmp
xchg
xor
cmpsl
push
rcll
aam
jbe
mov
jmp
stc
xchg
loopne
jecxz
into
add
xchg
jbe
int3
sbb
fdivrl
popf
nop
divb
add
fs
addb
sub
inc
fldt
rorl
lcall
testl
mov
pop
xlat
outsb
or
xchg
shl
testb
jmp
das
pop
cmp
and
dec
stc
ja
loopne
sbbb
inc
je
lods
nop
addr16
into
inc
or
rorb
xor
cmp
jb
mov
xor
xor
test
icebp
xchg
inc
pop
mov
push
fbstp
cmpsb
mov
in
stos
xchg
sbb
mov
adc
push
out
or
movsb
les
jno
mov
fistl
add
push
sub
aam
mov
jmp
cmp
add
jb
ljmp
sahf
enter
dec
aad
mov
add
mov
dec
pop
aad
scas
push
push
ja
dec
pop
and
imul
js
cmp
jnp
arpl
fnstsw
push
cmp
jmp
lds
dec
jnp
dec
pop
std
push
icebp
mov
popf
scas
add
mulb
hlt
push
scas
mov
jmp
leave
inc
xchg
mov
fmuls
divl
push
jp
pop
movsl
test
adcl
mov
or
jne
mov
sahf
adc
outsl
mov
mov
je
push
jmp
mov
xchg
sti
pop
div
mov
and
lret
xor
lret
inc
mov
pop
mov
scas
push
and
adc
xor
mov
pop
jg
lret
mov
lahf
push
mov
daa
jecxz
shll
sti
dec
out
in
dec
mov
pop
repnz
imul
adc
insl
or
hlt
inc
mov
rorl
pop
and
int3
jg
cmp
lahf
or
ss
imul
jge
cli
xchg
cli
ja
or
mov
call
dec
add
sub
pop
mov
push
mov
sub
out
pop
cmpsb
sbb
jle
aad
mov
pop
stos
or
add
test
push
inc
push
push
xchg
push
jno
xchg
scas
mov
jg
adcl
shlb
inc
addr16
pop
xor
push
push
fdivrs
jg
push
xor
and
imul
inc
push
mov
cmp
out
arpl
leave
popf
xchg
xchg
dec
out
cld
cmp
jl
lret
pop
mov
idivl
mov
hlt
mov
sbb
cmp
jecxz
je
es
cmp
fsubl
in
js
push
jo
push
sar
andl
fxch
cmp
adc
push
mov
jns
jl
rcrb
or
jb
out
xchg
movsb
push
cmp
fdiv
add
loopne
call
ja
dec
cmp
cmp
xchg
add
xchg
xchg
add
jae
aaa
loopne
or
mov
adcb
dec
cmc
scas
sbb
dec
stos
cmpsl
fs
les
jge
jmp
call
cmp
xchg
icebp
lret
mov
sbb
mov
sub
mov
ss
cmpb
sub
dec
ds
into
jg
ds
ds
cmp
inc
push
int3
cld
ret
push
and
dec
fisubrl
jge
add
dec
sub
dec
xchg
xchg
mov
inc
dec
and
adc
movsb
bound
or
mov
xchg
mov
mov
xchg
adc
int
sub
push
test
jae
dec
mov
dec
cmp
xchg
cli
mov
in
add
daa
inc
js
jmp
jl
js
push
ljmp
pusha
cmpsl
xlat
mov
cs
lds
mov
inc
loopne
pop
fsubrs
shll
xchg
jecxz
stos
mov
rcr
stos
test
fildl
jae
and
in
pushf
shll
or
adc
ret
rol
mov
imul
les
push
scas
pop
daa
push
mov
or
iret
lcall
cmp
in
jge
out
daa
push
cli
pop
iret
insl
clc
mov
sbb
xorb
pop
sbb
pop
jmp
iret
adc
jg
push
jbe
stc
adc
add
push
shlb
sub
mov
test
nop
call
pop
testl
mov
es
sahf
xor
in
stos
in
aas
lea
inc
scas
pop
cmpsb
or
lret
mov
cmp
xor
inc
add
mov
sahf
xor
jo
inc
push
add
pop
mov
xchg
xor
dec
dec
xchg
mov
pusha
dec
push
mov
gs
fs
cld
pop
shrl
popf
cld
inc
into
incl
rolb
xchg
push
pushf
scas
int3
mov
xor
out
xchg
sbb
inc
bound
mov
ret
pop
je
and
jecxz
add
aas
adc
cmp
or
mov
mov
int
daa
cltd
push
mov
push
push
sub
mov
loopne
dec
movsl
xchg
fmul
shrl
cmp
das
sub
mov
sbb
sub
jge
cmp
sbb
cli
stc
push
outsb
and
mov
jne
or
stc
or
push
test
cs
push
push
out
xor
push
dec
fsts
pushf
xor
xlat
mov
int
mov
xchg
sub
adc
mov
pop
sbb
dec
mov
xor
clc
mov
add
scas
push
addr16
adc
push
cltd
pop
insb
mov
jmp
in
cmpsl
imul
pusha
int
mov
dec
shlb
jle
push
and
xor
mov
cmpsl
push
outsl
xchg
sbb
jecxz
fnstsw
pop
sub
mov
sbb
inc
sbb
loopne
pusha
stos
repnz
cwtl
ds
mov
leave
sbb
test
imul
lahf
adc
mov
addl
cmp
loope
fwait
xlat
imul
repnz
push
xlat
pop
aam
pslld
adc
lea
int3
jae
movsl
jg
pop
jp
xor
sbb
dec
inc
sbb
jb
xchg
sub
js
xchg
jecxz
nop
xlat
outsb
addl
cmc
mov
es
stos
jle
add
cmp
jae
xorb
or
mov
lret
mov
and
in
inc
mov
ljmp
sub
inc
in
sahf
dec
xor
loope
lds
nop
xchg
lahf
out
scas
ljmp
pop
mov
jmp
add
cmpsl
ret
add
inc
push
loopne
xchg
inc
jno
incb
cmp
pop
ja
and
pop
push
mov
repnz
adc
pop
movsl
dec
and
popa
fldcw
sbb
fwait
xor
pop
dec
inc
sbb
mov
inc
mov
dec
and
sahf
fistpl
repz
loope
repz
inc
ds
divl
jo
pop
lret
xchg
sti
mov
and
inc
sub
jg
or
mov
iret
outsl
inc
pop
fdivr
pop
and
aas
test
addb
pop
or
push
inc
repnz
fwait
mov
xchg
dec
outsb
scas
decb
mov
lret
addl
pusha
push
or
sbb
rcll
push
mov
popf
js
cmp
inc
push
inc
icebp
cmc
loop
fdivrs
dec
lock
or
mov
push
cmp
push
adc
mov
call
adc
jl
ss
mov
out
pop
cmp
xor
jl
xor
insl
call
adc
stc
das
inc
mov
das
mov
out
test
add
inc
sbb
cmp
or
lret
push
dec
arpl
movsl
push
lods
fidivrl
cmpsb
imul
xchg
stos
adcb
mov
sahf
arpl
sub
xchg
push
mov
pop
cmp
cmpsb
cmp
mov
add
sbb
jmp
add
daa
pushl
lea
xchg
and
mov
jns
inc
or
or
popf
dec
lret
lock
xorb
sbb
inc
mov
decb
fnstsw
mov
mov
and
insb
mov
sbb
movsb
adc
mov
pop
or
pop
lcall
or
jns
shll
mov
lret
pop
leave
pusha
push
popa
jns
mov
or
movsl
pop
push
jae
push
enter
leave
dec
add
xor
cwtl
xor
sahf
sbb
push
outsb
pop
arpl
ret
test
mov
xor
mov
mov
mov
pusha
ljmp
xor
pop
xchg
mov
pop
insl
mov
cmp
flds
call
mull
cld
lds
iret
rorl
push
lds
push
pop
mov
mov
addr16
push
test
into
push
mov
daa
movsl
aaa
aas
push
push
mov
call
fs
inc
jle
jbe
jmp
jbe
popf
lods
out
inc
mov
adc
loop
xor
inc
popa
repz
mov
not
movsl
in
test
sub
push
loop
in
jge
stc
test
jg
nop
loop
mov
scas
jmp
sbb
xchg
dec
popa
or
jecxz
jg
gs
sub
ja
xchg
ds
leave
test
mov
mov
aam
scas
fdivl
cmp
add
sub
mov
xchg
dec
aaa
mov
sbb
ljmp
pushf
cs
add
fwait
sbb
add
or
inc
scas
in
dec
and
ret
and
movl
sti
shr
call
add
cld
add
stos
stc
cwtl
std
cltd
xchg
jb
add
jo
adcl
shlb
fistps
mov
push
in
jae
test
xor
push
fs
inc
mov
ss
popf
ss
cmp
jecxz
icebp
dec
mov
popl
mov
shrl
sbb
scas
mov
and
test
aad
sbb
arpl
jne
mov
mov
adc
negb
out
jge
loopne
xchg
pop
sub
push
movsb
jg
pop
and
mov
xor
lods
cmp
push
lahf
xor
aaa
cs
lret
int3
inc
lock
mov
and
cmp
push
orl
mov
inc
mov
cmp
scas
sbb
daa
mov
pop
arpl
repz
xchg
mov
ret
push
jle
xchg
or
xchg
lahf
je
pop
jae
inc
lds
mov
inc
addr16
shlb
xlat
out
popa
jmp
scas
test
dec
fldcw
aas
je
jae
lahf
jbe
roll
mov
mov
cmp
shll
sub
lds
movnti
or
pop
or
mov
push
jp
xchg
xor
dec
lcall
cwtl
data16
dec
mov
or
lret
or
adc
push
jmp
push
jb
cmp
mov
sub
cmp
jecxz
shl
orb
or
ljmp
push
sub
xchg
jns
xchg
add
hlt
xchg
cmp
lret
lret
sub
imul
add
hlt
push
daa
add
std
stc
mov
scas
das
popf
lods
out
jge
jg
test
hlt
xor
insb
ja
mov
inc
lcall
lods
fdivrp
xchg
adc
ret
movsb
mov
rorl
mov
fnsave
pop
push
xor
or
push
cmp
mov
mov
sub
push
ret
ret
mov
xor
fwait
push
lcall
push
fimuls
sub
repz
fwait
mov
mov
push
lods
test
xchg
add
scas
jbe
pop
sub
add
sti
movsb
mov
push
popf
les
pop
out
jo
jbe
adc
scas
scas
test
mov
ret
movsl
or
sub
add
push
ss
pop
jo
mov
mov
inc
arpl
stos
mov
xchg
int
mov
xlat
adc
hlt
inc
mov
and
ja
stos
sub
leave
ss
test
mov
fcomps
adc
lret
mov
shr
adc
cs
xchg
dec
mov
in
cmpl
sub
adc
or
out
mov
aad
add
push
sub
out
push
adc
mov
clc
mov
jb
movl
imul
mov
test
fcomps
xor
mov
fucom
lods
pop
push
mov
pop
xor
and
cmp
lahf
dec
rcl
cmp
pop
leave
pop
xlat
mov
fsub
jp
or
cmp
push
lcall
and
push
xor
jnp
mov
mov
pusha
fisubrs
add
mov
sub
pop
stos
sbb
test
pop
lods
push
out
test
movsl
mov
ficoml
in
mov
jno
xchg
and
stos
lock
outsb
popa
repz
fsubs
inc
pop
cmp
sti
sub
pop
dec
jecxz
mov
inc
ficoml
mov
addb
mov
push
je
sahf
data16
mov
inc
in
xchg
add
push
mov
inc
stos
jbe
lcall
xor
faddp
das
push
jmp
sub
pushf
pop
mov
addl
cmp
mov
ret
scas
jo
cmp
inc
dec
loop
aaa
jle
cmpsb
mov
in
cmp
shl
cli
xor
push
pop
ljmp
xchg
icebp
mov
sbb
sti
mov
mov
cmp
cmc
test
cmp
mov
ret
sbb
aad
cmp
dec
mov
push
cmp
push
mov
adc
jbe
pushf
xor
mov
push
push
and
daa
xor
mov
movsb
pop
push
jae
mov
cld
xchg
pop
dec
sbb
or
mov
sbbl
mov
das
cli
out
test
jnp
rorb
mov
jl
and
mov
test
fcmovnbe
ret
adc
imul
pushf
arpl
je
pop
lds
pop
repz
jge
roll
test
or
add
jns
repz
push
dec
and
add
sub
or
jb
jbe
add
jle
loop
sbb
fcomps
xchg
loopne
repz
pop
mov
notb
jno
out
xchg
loop
outsb
or
or
sub
mov
mov
or
and
pop
aam
inc
mov
int
loopne
sbb
scas
inc
xchg
std
nop
cld
adc
sub
dec
push
cltd
ja
out
push
push
hlt
cmp
lods
jmp
outsl
add
xor
gs
mov
and
lods
inc
lea
int
fildll
mov
fs
test
lcall
hlt
or
pop
push
lock
xor
shlb
pop
in
cmpl
lcall
test
sar
add
inc
push
pusha
in
jnp
out
int
jmp
adc
and
inc
loopne
daa
cmp
inc
data16
adc
mov
ret
stos
push
sbb
and
pop
inc
sti
les
sahf
in
sub
push
xchg
mov
mov
mov
out
scas
pop
ss
daa
scas
cmp
and
aad
lods
mov
push
inc
jb
aas
in
jnp
mov
sbb
insl
sarb
adc
sbb
mov
sbb
mov
pop
xorb
dec
inc
mov
cmp
fs
lahf
jno
daa
cmp
push
dec
les
out
cmc
imul
mov
rol
lea
rcrl
movsb
in
test
pop
cmpsb
sbb
push
lret
loopne
mov
add
or
aam
mov
fwait
icebp
dec
in
pop
or
iret
rorl
out
cmp
imul
xor
pop
push
les
jae
in
jbe
aad
jl
cmp
repnz
mov
js
insl
add
movb
sub
dec
outsb
jmp
xor
push
jge
cmp
pop
data16
mov
jae
movsb
insb
add
mov
xor
sub
mov
fcompl
push
out
push
add
dec
mov
movsb
mov
loope
dec
fwait
push
push
sti
sbb
cmp
push
pop
dec
out
inc
ret
stc
xlat
scas
popf
in
mov
adc
sbb
add
fwait
inc
or
adc
and
into
xor
fnsave
fiadds
mov
popa
sub
scas
cmp
loope
mov
push
sarb
pop
in
mov
les
sub
pop
mov
push
inc
in
sti
xor
push
mov
dec
push
xchg
push
sbb
pop
aas
mov
xor
pop
pusha
jnp
xorl
mov
or
jno
ss
mov
in
leave
aas
jmp
out
fisttps
push
mov
aam
pop
lods
clc
movsl
or
inc
nop
dec
push
dec
cmp
jb
sahf
sbbb
in
std
inc
push
movsl
sbb
sbb
sbb
xor
rorl
cmpsb
js
lds
push
and
inc
pop
out
popf
test
pop
sub
xor
stos
mov
js
jo
mov
scas
xlat
fildl
scas
push
jmp
mov
cmp
fnsave
adc
ret
in
xchg
sub
les
loopne
or
mov
pushf
or
adc
add
arpl
sub
mov
push
idivl
push
pop
cmc
fwait
add
sbb
cmp
stos
sub
popa
push
cmpsb
gs
add
lea
stos
pop
cltd
xor
shlb
leave
xchg
test
and
imul
inc
mov
xor
jp
pop
push
iret
cmp
push
in
add
out
xchg
mov
lret
es
jle
pop
jmp
inc
sub
push
nop
loop
aam
test
outsb
clc
sahf
mov
orb
mov
lods
mov
and
mov
mov
iret
mov
dec
pop
push
mov
cwtl
jle
pop
jo
into
xor
subl
jle
out
pop
jb
outsb
sbbb
xor
xchg
inc
adc
fwait
cmpsl
into
jb
mov
pop
mov
mov
add
and
mov
adc
leave
subb
lahf
loop
fildll
fldl
mov
adc
rorl
push
aam
stc
pop
cmp
xchg
dec
je
push
mov
out
js
popf
in
xchg
mov
mov
push
and
mov
ljmp
sub
and
icebp
insb
xchg
push
push
or
stos
cli
les
dec
inc
cld
cmp
loope
call
test
data16
xchg
mov
cmp
mov
aad
dec
push
or
scas
xchg
jo
or
mov
ds
and
xor
xlat
push
add
ljmp
push
push
jle
movsb
push
test
popa
jne
ss
aad
jno
dec
cli
mov
daa
pop
data16
inc
mov
mov
je
pop
dec
in
jb
xchg
jb
pushf
dec
adc
mov
push
fdivl
lahf
push
test
out
stos
xchg
out
pop
hlt
rclb
mov
mov
cs
push
sysenter
into
sbb
mov
xchg
jle
and
movsl
icebp
xor
lods
cmc
pop
sub
mov
negl
xchg
xor
mov
or
ret
iret
push
std
cmp
cmp
xchg
pop
daa
loope,pt
push
imull
dec
outsb
dec
jmp
xor
ds
pop
fcmovne
fadds
inc
cltd
mov
inc
adc
jl
iret
data16
jne
lds
inc
xchg
out
xor
mov
or
js
push
mov
movsb
aas
lret
inc
shrb
gs
xor
add
es
es
jl
or
arpl
cmp
bound
loop
or
movsb
dec
into
inc
movsl
test
mov
inc
ja
cmc
adc
mov
rolb
ds
jle
stc
cmp
pop
or
inc
pop
and
adc
sbb
jecxz
sub
xor
xor
dec
mov
andl
mov
jg
jo
int3
popf
imul
add
in
inc
fldenv
xchg
sub
jns
push
mov
mov
cli
sub
inc
dec
pop
cwtl
jl
or
and
rclb
pop
lret
add
xor
cmpb
insl
mull
sbbb
push
mov
mov
pop
mov
mov
gs
imul
jo
bound
test
mov
mov
xor
lcall
jmp
in
cmpsl
mov
daa
sbb
pop
repz
mov
jp
scas
popl
outsb
cmp
mov
repz
cmc
mov
outsb
nop
daa
mov
add
call
es
aaa
inc
cmpsl
stos
push
sbb
mov
push
aam
scas
mov
cs
inc
out
repz
ja
sti
hlt
cltd
fcomip
push
insl
scas
inc
out
fildl
cld
push
shr
dec
sbb
lock
add
das
repnz
jl
pop
data16
fbstp
dec
and
lock
adc
sub
xor
popf
or
push
jl
xchg
ja
sbb
fsubrl
mov
fildll
mov
add
js
outsb
dec
push
cltd
das
pop
mov
shrb
xchg
dec
dec
jbe
cmpsl
adc
cmp
roll
adc
sub
hlt
jecxz
push
mov
mov
test
test
push
hlt
imul
push
sbb
xor
in
popa
mov
jnp
daa
pop
xchg
mov
addb
rcr
push
mov
mov
in
fsubrs
xorl
ds
add
and
xor
rclb
andl
pop
xor
iret
hlt
js
or
popf
and
adc
addr16
in
or
push
loope
xlat
insl
mov
dec
sarl
pop
leave
aam
and
cmpsb
push
or
cld
sbb
outsb
adc
fwait
jbe
data16
xchg
fxch
mov
jnp
ficoms
enter
sub
dec
es
in
add
cmp
dec
ret
add
add
sbb
xchg
or
lret
push
subl
loopne
inc
sbbb
jecxz
push
hlt
out
shlb
inc
or
cli
jl
jge,pn
jo
jnp
mov
add
sbb
pop
cwtl
daa
push
fistpl
out
mov
aad
xchg
cmp
dec
add
pushf
jl
das
mov
stc
or
ja
add
shlb
xchg
add
addb
lods
push
je
rolb
test
xchg
push
fcomi
and
push
and
imul
inc
es
flds
dec
mov
pusha
out
ret
imull
mov
push
sbb
cmpsb
mov
jg
or
test
pop
dec
imul
push
aam
sub
cmp
insl
xor
dec
xor
fdivp
jo
xlat
cmp
adc
add
mov
sbb
loopne
mov
mov
xor
in
std
and
pop
sar
imul
jbe
test
mov
jno
scas
fisubrl
lock
pop
bound
pop
sbb
movsl
push
and
add
decl
or
pusha
orb
adc
cwtl
les
enter
xchg
arpl
outsl
adc
or
inc
mov
in
int3
sub
adc
dec
mov
es
pause
adc
ljmp
mov
into
adc
ljmp
cmp
xor
pusha
pop
jle
jge
push
scas
xchg
add
xchg
into
loop
mov
mov
fsubr
and
lods
pusha
test
add
js
insb
lret
dec
in
dec
imul
xchg
adc
jmp
mov
je
je
insb
pop
mov
dec
push
addr16
rcll
xor
inc
pop
addl
inc
lea
in
push
adc
mov
clc
scas
jle
enter
imul
sbbl
sub
shll
adc
ds
pop
mov
pop
shlb
jle
pop
clc
stos
mov
push
xor
sahf
insl
popa
add
cmc
fistpl
add
mov
test
in
or
pop
insb
pop
je
jb
jle
int
inc
in
js
dec
xchg
pop
ja
enter
inc
jb
vpsraw
xor
push
in
negb
cmp
fsubrs
clc
xchg
mov
aad
sub
aad
popf
sbb
les
xchg
inc
pop
jge
inc
xor
mull
addl
imul
push
jnp
push
or
or
jmp
add
mov
mov
outsb
mov
pusha
cmpsl
shll
push
dec
push
sahf
sbb
out
rorb
loopne
call
dec
jnp
cmp
xor
sub
add
and
cmp
or
push
push
test
aaa
jae
push
aam
mov
xchg
xor
movsl
test
jle
adcb
push
adc
sbb
imull
add
clc
or
xor
or
fsubrp
sbb
xor
and
sbb
leave
fidivl
cltd
dec
jno
xchg
pop
stos
lcall
aas
fadds
repnz
popa
mov
xchg
dec
push
pushf
repz
test
clc
aas
dec
sub
mov
pop
and
cltd
adc
andb
and
and
mov
add
daa
lcall
popa
call
inc
int
inc
sbb
shlb
js
test
pop
push
leave
je
das
mov
jnp
jne
xor
sbb
js
cmp
xchg
adc
jl
aam
shrl
xchg
jmp
dec
dec
pop
gs
loopne
fdiv
dec
push
jecxz
dec
cmpsb
sub
lods
jo
and
mov
xchg
fistl
xchg
movsl
ret
inc
test
mov
xchg
cmpsb
xor
cli
or
sub
fildll
mov
or
loop
arpl
jnp
daa
lods
inc
jb
ss
cmc
mov
aad
iret
daa
adc
or
push
and
subl
inc
in
fs
cmpsl
mov
fmul
push
loope
hlt
jmp
dec
xor
roll
mov
push
inc
inc
loopne
sub
add
cmp
inc
mov
mov
push
cltd
out
rcrl
mov
in
jle
pop
adc
cli
jne
sub
sahf
fidivs
adc
adc
inc
sbb
lods
mov
aaa
jbe
aad
lret
push
inc
mov
mov
dec
fwait
into
mov
cli
xchg
mov
loopne
mov
pop
fdivl
clc
aaa
gs
sbb
mov
mov
mov
bound
dec
cmp
mov
inc
pop
cld
inc
push
das
icebp
xor
int3
xor
sti
scas
inc
lods
push
andl
xor
dec
popa
inc
rcll
js
dec
imul
jl
xor
push
ret
lahf
fwait
xor
mov
mov
leave
adc
push
in
stos
or
xor
outsb
ja
push
test
ficoml
mov
xor
aaa
js
dec
es
pop
jnp
mov
cmc
pop
or
push
dec
mov
imull
ja
les
jge
movsb
into
sbb
ret
push
mov
leave
loope
xchg
push
sbb
fsubp
or
fnstenv
xorl
xor
inc
in
or
xchg
xor
inc
jmp
fdivs
push
or
jle
push
movsl
mov
outsl
mov
sti
xchg
push
mov
and
hlt
movsb
shlb
push
imul
xor
stos
inc
test
jnp
loope
mov
jb
mov
fimuls
sbb
subl
sbb
lods
xor
cmp
scas
out
int3
arpl
mov
ss
xchg
jp
lock
pop
or
cwtl
xchg
sub
pop
xchg
xchg
push
add
cld
push
in
lods
mov
mov
mov
jp
loop
ss
sub
cwtl
xor
lret
jno
mov
sbb
xchg
add
xor
shrb
mov
imul
xchg
sub
sbb
lods
leave
orl
fstl
icebp
cli
mov
push
fsubrl
cld
fs
xor
sbb
out
fsubl
push
fidivrl
bound
mov
adc
xchg
xchg
mov
stos
jg
aam
or
pop
loope
imul
aam
outsb
jne
push
xor
jge
iret
scas
xchg
jns
adc
mov
mov
and
subb
xor
movsl
loope
int
mov
cmp
imul
push
loop
jno
call
xor
shrl
test
lock
push
test
in
sub
cmp
test
repnz
lods
in
bound
adc
xor
push
pushf
xor
mov
ja
mov
lods
dec
sbb
stos
push
cmp
add
mov
cwtl
sub
cs
pop
daa
inc
mov
pop
stos
ds
mov
out
xor
pop
rol
sbb
das
mov
and
fists
shrb
mov
loop
rcl
push
push
pop
hlt
dec
add
mov
adc
pop
pop
pop
fisubrl
and
nop
mov
icebp
fldl
dec
or
xor
aaa
in
stos
xchg
outsb
mov
test
cmp
stc
jecxz
popa
push
mov
inc
mov
pop
or
aaa
shrl
inc
cmp
sub
cmc
dec
jb
lea
mov
ss
fldt
xchg
cltd
test
out
dec
add
adc
pop
sub
stos
xchg
mov
std
inc
sbb
xchg
mov
in
mov
or
shlb
ret
jp
orl
mov
inc
mov
jns
imul
adc
lea
sub
repz
sti
mov
arpl
ds
xchg
and
add
inc
test
pop
into
das
pop
rcrb
xor
push
pushf
xor
sbb
cmp
add
sub
push
ror
dec
daa
sahf
inc
orb
andl
loop
rcl
pop
push
add
or
arpl
and
mov
mov
lahf
es
jecxz
xlat
inc
inc
lret
int
sbb
or
sub
mov
imul
mov
adc
cs
stos
loopne
fcompl
mov
mov
pop
mov
imul
iret
mov
out
movsl
loop
stc
je
pop
sbb
push
sahf
shrl
mov
adc
loope
xchg
pop
into
dec
add
stc
mov
push
jl
push
mov
lcall
cmp
push
in
cmp
pushf
lea
stos
rclb
ret
clc
xchg
loop
dec
fimuls
xor
outsb
adc
insl
add
mov
push
push
fildl
mov
arpl
cmp
cmpsb
pop
sbbl
cmpsl
roll
shll
cwtl
loope
rolb
in
mov
test
ret
ficomps
and
loop
aas
int3
xor
aaa
push
cmp
xlat
loop
or
lds
outsb
jp
ret
lock
gs
in
pop
int3
gs
pop
mov
repnz
pop
mov
mov
rcrb
add
sbb
lds
fistpl
shl
fs
inc
inc
jbe
fnstenv
sarb
aad
mov
pop
out
xor
sti
les
arpl
insb
mov
lret
cmc
rol
addr16
mov
jae
stc
jle
xor
loopne
or
lock
pop
cmpsb
push
jnp
test
adc
iret
pop
mov
iret
insl
rcrb
inc
fcompl
xchg
aad
ficoml
push
loop
fdivrs
sbb
mov
push
or
sbb
jno
jg
lea
clc
dec
cmp
not
inc
dec
xchg
lock
fistl
sbb
rcrl
add
les
add
andl
fiaddl
mulb
je
aaa
push
sub
mov
mov
aam
mov
aaa
into
and
pop
mov
push
jne
sbb
ret
jp
pop
stos
mov
rolb
lret
push
es
loopne
lcall
enter
jle
push
mov
mov
mov
jecxz
jg
cmp
xchg
mov
int3
fidivl
dec
fisubrs
pop
shld
xor
pop
mov
push
mov
dec
insl
test
js
mov
lock
dec
lahf
divl
push
fwait
insb
dec
cmp
imul
inc
mov
leave
jmp
daa
sarb
mov
push
push
fiaddl
subb
push
add
jp
pop
ret
pop
fstl
sbb
aas
push
aam
outsl
sub
in
xor
rcll
popf
aas
xor
fiadds
push
mov
je
into
xchg
xor
ljmp
push
fimull
mov
or
cmpsl
rolb
ds
mov
jae
jecxz
jecxz
pop
lcall
rcr
pop
in
decb
pusha
rclb
cld
fimuls
sbb
push
rep
lods
sahf
or
pop
xor
xor
mov
cmp
push
pop
dec
mov
insl
aad
inc
fdivr
decb
sahf
sbbb
add
mov
imul
jmp
aam
adcb
jne
mov
xor
mov
ret
jmp
jns
sbb
dec
inc
mov
clc
cmp
jne
mov
push
xchg
popa
mov
cwtl
and
lret
test
xlat
imul
outsb
sub
loopne
dec
sbbl
pop
mov
lods
jl
fdivp
dec
loope
jl
lds
push
mov
pop
cmp
sti
sbb
sbbb
jno
mov
jae
inc
xchg
and
out
inc
data16
repnz
stos
arpl
xchg
js
insl
or
subl
popa
pushf
pop
dec
mov
ret
out
inc
xchg
pop
dec
xchg
insl
test
shrl
adc
pop
mov
adc
jb
sbbb
sbb
jg
xor
scas
sub
aas
or
adcl
add
jb
mov
dec
leave
dec
pop
ret
addb
clc
insb
xchg
mov
mov
imul
add
jmp
out
imul
dec
in
cmp
adc
or
mov
mov
sahf
cli
aas
push
fnsave
repz
pusha
enter
out
mov
ret
sbb
ret
xchg
sub
xor
mov
jg
push
or
shl
and
aad
inc
push
enter
sub
dec
rolb
data16
xchg
in
lods
inc
pop
mov
ss
dec
mov
fcompl
pushf
hlt
jae
xor
popf
xor
push
pop
out
adc
sub
lret
mov
jno
mov
and
or
into
mov
in
inc
cwtl
add
push
dec
add
scas
inc
lea
push
in
pop
cs
nop
dec
mov
imul
cltd
xor
rcrl
sbb
mov
pop
das
push
add
pop
cwtl
pop
dec
push
sub
push
or
dec
adc
dec
jmp
fmull
push
mov
sahf
enter
sbb
jno
sbb
jno
mov
xchg
in
pop
add
pop
lret
into
fcmovbe
cmp
push
lods
mov
ret
pop
xor
mov
sbbl
ljmp
dec
mov
inc
loope
adc
add
fiaddl
jae
and
inc
xchg
sub
push
ret
pop
push
mov
mov
push
jmp
xor
loopne
sti
adc
sbb
sbb
and
daa
daa
jle
inc
bound
std
repnz
test
mov
adc
adc
mov
dec
loope
mov
rorl
sub
std
aas
movsb
fstp
xor
repnz
scas
pop
adcl
jmp
imul
repz
jmp
xchg
mov
and
popf
push
shrb
ljmp
cmp
iret
inc
inc
pop
fnsave
xorl
mov
xchg
add
xor
in
cmp
mov
fwait
mov
jp
popa
mov
sbb
leave
dec
pop
and
pop
jp
sub
test
xor
das
mov
test
adc
or
push
xchg
pushf
dec
sbb
add
xchg
push
stos
cmp
mov
add
inc
scas
stc
mov
pop
xor
fiaddl
push
xchg
and
cmpsb
cmp
cmp
loope
push
ds
mov
inc
lds
subb
push
mov
sti
xchg
xchg
jl
mov
sbb
sbb
notl
lret
cld
and
dec
iret
lods
jecxz
pop
pop
dec
int3
add
sbb
stos
dec
fisubs
inc
std
cmp
mov
and
and
push
jno
lods
lds
and
int
aad
leave
int
imul
shll
ret
pop
fdivl
sbb
mov
repnz
rcrb
popf
and
out
dec
cmpsb
xchg
adc
push
mov
or
out
mov
xor
add
pushf
add
outsl
stos
lcall
into
push
movsl
cmp
and
in
sbb
xor
sub
mov
push
or
mov
jmp
subl
xchg
sbb
les
inc
rorl
sahf
cmp
mov
imul
jmp
inc
cld
fwait
push
ret
mov
int3
outsb
cld
shl
cmp
jne
daa
sub
cmp
lret
stos
jb
lods
cmp
or
sbb
mov
mov
out
mov
dec
sub
xchg
lret
out
cmpsb
ljmp
adc
sbb
jns
xlat
lret
jo
push
mov
xchg
sbb
mov
stos
outsl
inc
cmc
das
fcmovb
pop
xor
pop
jne
aas
jns
outsb
inc
ret
rcl
outsl
inc
pop
cmp
pop
ret
inc
pop
loop
out
pop
das
xchg
xchg
sub
dec
mov
jge
inc
hlt
add
cmp
divl
testb
dec
leave
pushf
cmc
and
pusha
mov
fwait
adc
xor
xchg
stos
inc
push
adc
fucom
dec
and
lret
stc
or
aam
fwait
sub
pop
add
mov
les
inc
frstor
sbb
jl
outsl
cmp
add
or
aam
fwait
xchg
mov
hlt
pop
dec
insl
inc
add
shlb
push
inc
xchg
cmp
inc
jae
push
dec
daa
push
jle
mov
loopne
faddl
push
sahf
or
mov
insl
adc
cltd
and
jno
ret
and
leave
dec
jmp
in
icebp
xor
outsb
scas
sbbb
jmp
cmp
lcall
insb
lcall
fnstsw
pop
sbb
mov
xlat
jmp
sub
scas
push
jb
cmc
fdivs
cmc
mov
loopne
mov
cmp
dec
cwtl
inc
insl
dec
fs
sub
mov
sahf
sub
nop
sti
sub
addr16
ds
and
fidivrs
test
xchg
xor
pop
add
cmpsl
cmc
sti
jb
sub
dec
aaa
lret
loope
jp
sbb
aaa
pop
mov
rol
sbbl
lret
test
js
pop
ds
popf
and
fs
sahf
mov
in
pop
xchg
xlat
sub
push
imul
in
and
fdiv
push
shrb
jmp
dec
mov
fsubrl
add
imul
adc
movsl
ja
mov
es
arpl
repz
xchg
fnstcw
pop
aaa
mov
push
dec
popa
stos
lock
cmp
lret
int3
fimuls
movsb
fwait
mov
sbb
jle
sub
loope
cmpsb
rol
mov
imul
cmpsl
ret
aas
insl
stos
test
decl
and
or
sti
jge
xor
xchg
xor
and
mov
mov
sub
cmp
jno
shld
fildl
imul
cmp
addr16
hlt
sti
pop
aad
dec
push
push
incb
sbb
dec
pusha
cmp
pop
pushf
lds
movl
loopne
imul
fstpt
mov
jbe
mov
andl
sub
pop
or
push
pop
xchg
enter
adc
ljmp
shlb
mov
mov
lds
pop
mov
test
movsl
or
mov
jle
cmpsl
hlt
xchg
bound
out
push
sub
or
push
test
lcall
cmp
pop
fwait
add
addl
enter
push
icebp
sahf
lea
and
sbb
loopne
push
jl
aas
mov
pop
push
xchg
pop
push
out
adc
mov
sub
mov
pop
insl
adc
test
fisubrs
cmpsl
dec
jne
int
ljmp
dec
cs
push
mov
dec
not
push
leave
loope
dec
in
stc
stos
test
lret
xchg
fcmovnu
popa
push
faddl
cmp
adc
imul
cltd
test
sti
sbb
adc
cwtl
or
xchg
inc
mov
and
sub
movsb
cmp
jbe
pop
das
xchg
shrb
lahf
repz
push
das
inc
in
jne
das
jle
push
mov
push
dec
leave
add
fnstenv
and
jbe
sbb
pop
lret
out
std
pusha
sub
js
mov
push
sahf
pop
xchg
hlt
repz
pushf
mov
sbb
sti
ret
sub
dec
xchg
add
das
inc
inc
shlb
xchg
pop
sub
mov
ja
arpl
jnp
scas
mov
daa
mov
lcall
and
sbb
inc
xchg
clc
hlt
pushf
movsb
in
pop
repnz
das
lock
leave
dec
repz
adc
aaa
push
jecxz
and
imul
test
pushf
jge
add
mov
push
mov
xor
mov
push
aad
jge
dec
push
xchg
jo
mov
push
inc
movsl
sti
repnz
inc
leave
mov
les
sbbl
cmp
xchg
add
push
cmp
out
outsl
mov
scas
nop
mov
cmp
or
rcrb
sbb
ret
cmp
dec
movsl
hlt
les
cmp
xchg
dec
cwtl
dec
in
int3
jmp
pop
fstl
out
fcomps
lods
sbbl
lock
mov
insb
xchg
adc
lds
or
mov
mov
inc
popf
int
dec
and
rolb
xchg
xchg
cmpl
les
scas
shl
jb
pop
ss
lahf
push
sub
push
dec
repnz
scas
and
outsl
test
inc
mov
and
test
adc
mov
popf
xor
hlt
insl
adc
hlt
inc
out
test
shlb
push
or
jmp
cli
arpl
clc
xchg
push
cld
stos
sbb
push
push
dec
mov
xchg
movsb
pop
xor
addr16
xchg
adc
jp
or
addl
and
mov
dec
inc
test
add
sbb
and
pmaxsw
pop
cmp
and
aas
pop
jmp
aad
mov
push
in
push
lret
push
cwtl
lds
push
outsl
sbb
mov
outsb
lret
jo
pop
ss
jb
xchg
xorb
subb
inc
add
repz
icebp
xor
add
jmp
sbb
mov
es
dec
mov
cmp
sub
sub
pop
add
lock
test
pop
aas
addr16
xchg
lret
fs
cli
js
rcrb
xchg
in
pop
das
add
mov
add
test
add
cmp
mov
js
push
mov
pop
clc
insl
sbb
sbb
dec
popf
icebp
shll
test
add
and
jge
push
aad
popl
movsb
adc
arpl
out
adc
fucomi
std
or
fwait
ds
xor
pop
xor
lahf
daa
adc
sub
xchg
dec
sbb
or
sub
push
mov
adc
sub
push
pop
dec
loop
js
mov
out
mul
in
fs
mov
test
mov
mov
pop
out
and
pop
mul
cmpsb
push
inc
repnz
mov
arpl
sti
sbb
outsl
sti
mov
addr16
loope
lds
dec
andl
adc
push
sbb
js
sahf
test
mov
inc
in
hlt
mov
cmpb
mov
in
jne
mov
mov
test
and
ror
jne
mov
fsubrs
ja
shlb
pop
outsb
xor
nop
fdivrp
push
les
mov
int
lret
aam
out
aam
decb
scas
and
les
ret
jle,pn
lods
push
lods
sub
sti
arpl
fsubrs
and
fistpl
mov
jmp
cmp
cmpsl
cmpsb
addr16
sub
xchg
leave
call
leave
ds
out
lds
jg
push
clc
stos
fs
cld
jp
ud1
daa
mov
stc
loopne
sub
testb
repnz
testl
popf
aaa
cmp
je
mov
push
mov
push
xlat
mov
fsubs
jns
dec
xor
aad
jl
jbe
aam
int3
pop
outsb
cmc
xchg
cs
pop
add
mov
adc
cmp
pop
icebp
adc
sub
mov
ficompl
cmp
push
pop
ret
arpl
mov
push
adc
xchg
push
sar
and
enter
in
mov
lea
arpl
mov
fstpl
push
push
icebp
sti
mov
add
ret
or
xor
das
and
outsl
mov
testb
jns
dec
adc
popa
add
sub
adc
cltd
lds
mov
shrl
rcrb
aas
fwait
jge
pop
jno
js
push
xchg
fbstp
mov
stos
mov
xchg
adc
fdivl
enter
mov
xor
repz
cmpsl
sbb
inc
pop
lods
inc
mov
mov
sbb
lods
mov
clc
mov
std
or
or
or
adc
sbb
sub
push
sub
push
aad
not
and
notl
cmp
dec
sub
mov
add
idivb
inc
mov
jb
mov
das
push
inc
loope
orb
fiadds
dec
fistpll
mov
pop
jnp
mov
dec
movsb
pop
mov
add
xor
xchg
xchg
leave
pop
dec
shl
mov
cltd
repnz
mov
data16
cld
dec
xor
insb
rcll
popf
dec
xor
push
inc
test
rcrb
aas
mov
popf
xor
mov
sub
cmp
shlb
in
pop
movsl
inc
xlat
sbb
sbb
push
fwait
das
cld
inc
aad
call
roll
popa
dec
dec
xchg
mov
arpl
fistps
js
xchg
xchg
orb
orl
mov
les
or
int
test
fs
pop
adc
sub
ret
mov
mov
fdivrs
and
sahf
and
addb
call
adc
test
lret
sti
push
cli
push
and
clc
or
mov
enter
mov
sbbb
fisubs
inc
pop
lret
push
add
adc
out
add
dec
xor
and
sub
orl
or
fbld
fwait
and
cltd
insl
jnp
das
xor
push
cwtl
cs
pop
out
add
in
jbe
or
cmpsl
cmp
and
les
push
xor
push
lcall
inc
mov
sbb
fiaddl
jg
jmp
mov
call
jle
add
jl
inc
call
inc
les
ja
adc
or
dec
sahf
dec
imul
dec
aad
cwtl
repnz
stos
add
cmp
out
imul
mov
sub
cmp
jge
ss
stos
xchg
test
movsl
add
pop
test
mov
dec
or
dec
mov
enter
clc
sahf
and
xor
xor
jecxz
fsubrp
mov
movsb
mov
mov
aaa
push
cli
stc
mov
hlt
and
xchg
in
or
lret
into
je
push
jno
lahf
mov
xchg
pop
iret
dec
addl
mov
shrb
stc
jge
xor
aad
mov
push
mov
mov
pop
lret
cmpsl
sub
pop
jecxz
pop
pop
movsb
inc
sbb
dec
inc
cmp
inc
arpl
shlb
dec
es
or
cmp
mov
pop
xchg
add
mov
pop
pop
test
dec
insb
mov
push
lds
scas
negb
daa
add
bound
popa
push
ficoms
mov
mov
scas
sti
push
out
adc
push
inc
xchg
je
sub
movsb
xchg
leave
mov
add
push
mov
sub
sub
test
jb
xchg
imul
daa
push
xchg
dec
pop
sti
jne
jmp
mov
pop
in
sbb
outsl
mov
or
cwtl
pop
cmp
jp
loope
jmp
pop
jne
popa
and
hlt
xor
jo
mov
icebp
mov
in
add
sahf
mov
fcomps
or
push
or
push
ss
xchg
inc
mov
adc
adc
xchg
mov
dec
jecxz
rcll
jl
out
cmpsl
jmp
fbstp
mov
lret
xor
out
pop
inc
fmull
add
out
in
adcb
add
cmp
push
rcl
xor
and
and
lea
inc
gs
pop
xor
mov
dec
xor
jbe
or
add
sbb
lahf
lret
pop
sbb
fildll
rol
mov
fdivrs
gs
mov
mov
mov
hlt
sbb
jne
lahf
in
ss
jo
in
cmp
mov
out
pop
add
insb
or
stos
add
xchg
mov
sub
inc
pop
inc
in
pop
xlat
mov
xorb
sub
sbb
aad
jl
pop
outsl
xor
popf
jae
xor
clc
shlb
jo
and
inc
out
jmp
pop
or
inc
das
xchg
mov
mov
add
adc
shlb
inc
test
jge
mov
sahf
jne
sub
xchg
sub
sti
fcmovbe
sbb
scas
js
xchg
and
cs
dec
stos
inc
push
pop
jb
dec
cmp
cmc
dec
mov
cmp
sbb
mov
mov
stc
lret
xor
xchg
incb
mov
fisubrl
mov
or
sbb
dec
pop
xchg
add
movsl
inc
movsb
push
xchg
pop
rorl
add
es
push
adc
push
std
mull
test
adc
jge
dec
insl
add
rolb
cmc
sbb
sub
rolb
in
xor
and
sub
int
pusha
push
jp
inc
lods
adc
ljmp
sar
dec
out
in
sub
jnp
xchg
sub
insb
xor
sub
and
decb
add
div
lods
insl
loopne
and
ja
scas
out
movl
push
cmp
js
pusha
adc
or
adcb
inc
fsubrs
adc
add
scas
inc
cmp
and
call
add
int3
jae
hlt
mov
jnp
insl
or
sbb
and
dec
repz
aam
cwtl
and
loop
jle
in
ljmp
in
add
fwait
dec
lods
out
ljmp
cs
sbb
add
ljmp
cmp
incb
mov
adcb
pop
xchg
call
mov
push
aam
mov
jno
mov
mov
ror
fcoms
xor
jbe
clc
negl
push
cmc
push
sti
pop
jle
loopne
mov
fstl
lods
aaa
loop
aad
adc
pop
sbb
daa
add
cwtl
cmp
in
jp
data16
xchg
ja
add
ficompl
cmc
into
insl
add
imul
lods
ja
aam
ja
cmp
fsub
add
inc
cmp
iret
mov
rorl
fisttpll
xor
add
lea
adc
dec
and
mov
mov
inc
adc
and
lds
in
pop
adc
icebp
pop
add
stc
cmpsb
mov
rol
cli
and
sarl
cmp
add
imul
stos
leave
xor
jnp
inc
mov
orb
add
aaa
dec
shll
pop
or
xchg
loopne
fstpl
xor
or
incl
shl
mov
dec
jmp
fisubl
out
jo
cmp
pop
xchg
and
xchg
mov
cmc
push
adc
xor
in
sbb
cmpsl
and
pop
or
mov
jne
aas
scas
xchg
out
imul
ss
shll
bound
pusha
or
shrb
insb
inc
dec
dec
hlt
mov
rclb
or
sub
lea
or
sub
shrb
or
adcb
xchg
sub
outsl
pop
mov
cltd
cmp
lret
shr
cs
out
pop
jmp
pop
inc
cmp
sub
scas
add
inc
shl
adc
in
lahf
fwait
pusha
pmaxub
inc
shrl
sbb
pop
sahf
xor
popa
stos
dec
fstpl
mov
enter
and
stos
mov
ret
lds
sbb
cs
repz
outsb
sbb
add
fcoms
or
pop
mov
cs
jge
in
cld
push
fisubl
mov
sbb
jp
add
rcll
xor
scas
xlat
gs
push
in
mov
and
dec
insl
out
hlt
aam
cmpsl
mov
mov
xor
mov
inc
push
aam
shl
xor
or
xchg
ds
pop
cwtl
pop
lods
aas
cmp
jl
and
test
cltd
push
in
data16
fst
sbb
and
iret
rorl
fwait
or
adc
imul
clc
add
outsl
xchg
mov
psubsb
mov
jno
fisttps
cmp
pop
rol
stos
cmp
mov
xchg
mov
shrl
sbb
mov
insb
cmp
lret
dec
adc
xchg
jb
lahf
das
insb
iret
aad
add
loop
mov
mov
ljmp
mov
loopne
andb
fucomip
mov
or
daa
les
mov
push
add
cli
mov
push
je
mov
xor
mov
pop
int3
pop
jg
pop
push
jno
mov
mov
lods
pusha
sbb
adc
xorl
add
and
mov
xchg
shrb
or
in
mov
inc
mov
test
add
das
xchg
pop
aaa
pushf
xchg
adc
sbb
and
sahf
divl
test
in
mov
aas
xchg
hlt
push
in
ficomps
stc
popf
sbb
lcall
adcl
loopne
enter
mov
dec
sub
cmc
pushf
cmp
xchg
nop
daa
mov
popf
sub
or
iret
inc
lods
sbb
push
int3
cmp
xchg
out
jne
jecxz
inc
lods
jbe
lea
cmp
adc
negl
mov
jno
or
adc
mov
leave
dec
sub
ja
push
cmp
fcmovnu
mov
cmp
cmpsb
or
and
jl
pop
sub
jg
xchg
mov
jl
in
cmp
test
imul
idivl
test
cmp
jno,pt
in
push
in
pusha
cmc
outsl
loop
or
inc
inc
adc
lods
inc
popa
lcall
mov
mov
out
adc
inc
xchg
insl
loopne
lock
jbe
lds
repz
jo
dec
sahf
testb
scas
lock
jmp
dec
mov
jl
cmp
add
mov
cmpsb
aad
sub
push
push
or
loop
dec
pop
and
jo
aas
shll
pop
imul
or
divb
mov
cmp
les
mov
ret
sub
lret
jb
add
cwtl
clc
aad
incb
sbb
cmp
shlb
and
dec
int
enter
sbb
data16
test
dec
das
out
sahf
test
je
pusha
lods
pop
sub
mov
pop
repz
mov
das
loop
subb
sub
inc
loopne
rcll
inc
fisubs
rorb
add
mov
rcl
fiadds
or
filds
adc
adc
bnd
and
inc
xchg
jmp
pop
call
cwtl
sti
insl
or
jo
stos
in
dec
and
pop
jecxz
jl
cmp
xor
popf
aaa
sbb
test
mov
mov
xor
in
in
and
jo
push
movsl
mov
lods
jp
iret
pop
sub
test
scas
mov
mov
adc
ljmp
pop
cmc
xor
outsb
xor
and
mov
pop
out
adc
and
sub
add
add
dec
out
push
jp
movsl
js
dec
mov
inc
jecxz
jmp
push
adc
jnp
sub
jns
jge
stos
xor
icebp
inc
scas
dec
andl
arpl
push
movsb
mov
pop
scas
dec
movsb
push
mov
cmp
push
outsb
add
ljmp
or
mov
fistpl
addr16
xorl
adc
in
adc
xchg
pop
mov
xchg
jmp
cmpb
movl
or
hlt
mov
es
cmpsb
cmp
shll
push
mov
movsl
addl
pop
div
imul
cmp
loop
and
xchg
negb
mov
adcb
daa
fdivr
mov
jle
lods
jmp
ss
popf
movd
fnstenv
push
std
aas
cmp
pop
lahf
shl
ds
nop
pop
adc
mov
xor
push
inc
xorl
popa
imul
int3
jg
cmc
les
xor
mov
imul
add
imul
aam
add
sbb
jle
mov
mov
xor
pushf
mov
add
aaa
stos
mov
dec
loopne
ljmp
aad
xchg
sub
jb
add
add
xchg
cmp
cs
jne
cltd
dec
and
mov
hlt
in
repnz
lcall
push
out
fwait
xor
jmp
push
sub
stos
out
push
sbb
push
orb
sbb
nop
test
mov
clc
int3
mov
jg
int
in
inc
sub
inc
sbb
pop
out
xlat
mov
lock
jmp
std
rcrb
popf
jle
lcall
and
push
or
test
jbe
mov
int
jbe
push
xor
clc
jae
inc
xlat
insl
ja
fidivrs
fistl
lock
dec
out
fidivl
push
and
mov
lea
lret
push
imulb
cli
xchg
jne
fiadds
orb
pop
xor
xchg
push
xchg
adc
sbb
or
jno
sub
or
jl
jmp
nop
dec
mov
movsb
in
jmp
les
xchg
aam
sbb
ret
dec
push
add
adc
add
inc
cmpl
xor
mov
fwait
scas
outsb
mov
inc
lods
andl
outsb
push
fdivs
aam
enter
xor
nop
pop
cmp
into
lret
and
shll
daa
lds
mov
fdivr
xchg
fsubrs
sbb
out
shrl
push
mov
mov
aas
xor
xchg
dec
cmpsl
lret
mov
cmp
xor
loope
mov
aaa
ficomps
xor
mov
aaa
addb
push
inc
in
in
lea
mov
int
sbb
push
xlat
xor
out
jbe
popf
push
mov
fsubp
dec
xchg
push
shll
daa
sarb
inc
aaa
fs
cmp
inc
mov
ret
mov
ret
xchg
jmp
xchg
sbb
pop
lods
ljmp
in
imulb
sarl
pop
jno
shll
ret
mov
dec
jecxz
sub
decl
cltd
test
push
mov
inc
mov
jne
lahf
das
mov
dec
fisttps
mov
mov
adc
pop
jne
mov
xchg
mov
mov
adcb
fdivl
gs
out
add
push
dec
pop
testl
sbb
lds
shl
out
out
sahf
adc
push
lcall
js
xchg
pop
fcomi
rolb
mov
fnsave
or
ret
rep
pop
lcall
das
pop
das
shrl
in
stos
fprem
ljmp
push
push
out
cmp
jecxz
fwait
mov
add
xchg
lock
xor
mov
lret
dec
mov
cli
dec
cmpsb
mov
popa
cld
add
les
fwait
test
push
dec
or
or
popf
lock
inc
and
inc
push
push
movsb
and
xchg
lods
inc
les
cmp
ds
sub
cmp
test
cmp
addb
xchg
add
jae
into
mov
in
push
test
lret
lds
mov
shlb
mov
sub
push
mov
mov
loope
adc
stos
fsubrp
sub
movsb
jb
stos
sub
adc
and
lcall
lods
je
sub
inc
jb
cmpb
ror
loopne
cmc
cmpsl
shrl
cmp
adc
sbb
jg
xlat
pop
pop
mov
mov
and
test
jecxz
ficompl
adcl
outsl
lea
xchg
pop
hlt
xchg
jg
push
es
pop
movsl
sbb
add
adc
mov
frstor
push
dec
mov
imul
fsubp
movsb
adc
les
ss
pop
inc
fs
imul
mov
movsl
adc
mov
xchg
stos
fimuls
and
imul
fidivs
xchg
sub
dec
fwait
xor
arpl
test
dec
push
test
sti
enter
sbb
mov
add
jae
idivl
sub
xchg
sbb
sub
aad
in
clc
mov
addr16
jmp
and
mov
roll
aad
pushf
pop
insb
imulb
fdivl
xlat
sbb
mov
xchg
xor
out
push
push
cmp
test
push
or
pop
cmp
push
in
pop
sahf
dec
push
divb
fwait
nop
mov
into
packsswb
xchg
aam
and
dec
jae
stc
push
add
inc
andl
mov
xor
mov
in
xchg
adc
test
lods
mov
xor
ficoms
jns
stos
mov
imul
mov
mov
and
negl
inc
jbe
rol
hlt
shlb
push
add
rclb
xor
jbe
stos
and
cmp
call
in
insb
push
pop
cmp
movsb
cmpb
lds
mov
lods
cltd
xor
into
leave
push
std
inc
cmp
dec
xchg
fidivs
xor
and
or
cmp
test
lods
fwait
ret
jp
xor
pop
nop
loope
push
or
mov
rcll
sbbb
mov
push
insb
jne
cld
xchg
inc
mov
xorb
inc
popa
pop
add
xchg
ss
push
mov
add
iret
pop
push
cmc
stos
xor
arpl
adc
mov
inc
or
lret
push
cmp
stos
divb
cmpsl
push
gs
adc
loope
push
xor
out
or
out
loopne
inc
into
inc
fdivrp
cmp
sub
loope
stos
jo
cmp
push
inc
shrb
xor
adc
push
in
dec
ficoms
xor
inc
sbb
xor
pop
and
push
pop
jno
push
ds
jo
inc
es
adc
xlat
repz
rorb
aaa
dec
pop
jo
inc
rorb
adc
es
aas
into
lock
add
fistl
or
jnp
enter
es
pop
mov
push
repnz
mov
js
mov
dec
dec
sbb
aas
into
mov
nop
call
cld
pop
adc
lcall
xor
sub
aas
push
xchg
leave
and
clc
leave
pop
push
cmpsl
ds
popa
fsubl
lds
adc
push
lds
stos
test
sbb
jmp
and
mov
adc
test
enter
fwait
aaa
mov
sbb
xchg
mov
fadds
cmc
mov
jp
rol
repnz
mov
lret
mov
lahf
xor
sbb
inc
stos
mov
les
mov
or
mov
add
aas
insl
je
mov
das
jns
int3
outsl
sti
pop
sub
es
cmp
inc
clc
sahf
jl
jg
aam
das
inc
mov
pop
lcall
adc
add
pop
aaa
aad
icebp
mov
jg
mov
bound
push
cs
cli
sub
iret
mov
fstpt
out
push
jae
xlat
jno
mov
aas
test
push
jne
popf
cmp
fsubl
push
mov
jge
push
xor
dec
push
inc
sti
xchg
arpl
xor
mov
push
cli
push
inc
dec
dec
scas
dec
fst
ds
jg,pt
add
mov
sub
lods
fidivrs
ror
mov
push
arpl
dec
push
push
xchg
gs
fmull
pusha
mov
andl
testb
or
loopne
shr
cmp
mov
decb
dec
jmp
pusha
lea
out
dec
sbb
mov
into
add
in
add
xchg
xor
dec
adc
int
cmp
xor
shlb
in
insl
jbe
aas
xor
fiaddl
imul
inc
in
adc
test
xor
cmc
dec
in
add
imul
cmc
jno
sub
pop
dec
mov
loop
les
adc
cmp
xchg
push
out
les
iret
outsl
sub
jle
enter
rolb
fcmovnb
pop
out
jno
cmpsl
dec
rclb
popf
cli
inc
out
push
mov
jecxz
jns
rolb
fstp
jmp
inc
push
inc
lahf
push
xorb
dec
inc
fidivrs
push
inc
mov
add
jae
cld
pop
outsb
adc
out
inc
push
test
inc
inc
cmpsl
dec
lods
dec
mov
cld
xchg
insb
cmc
gs
jne
and
imul
bound
mov
add
jb
mov
dec
inc
mov
jo
sub
mov
inc
fidivs
scas
mov
cmp
rorb
jmp
dec
stos
add
inc
jb
incl
adc
and
sti
pop
jb
push
decl
push
rorb
jmp
xorb
enter
xor
aam
mov
outsl
push
and
ja
sbb
jl
inc
es
outsl
call
cli
in
sub
jecxz
addr16
mov
imul
pop
pop
cmp
mov
jno
rcrb
call
movsl
or
xchg
stos
add
sub
xor
repnz
push
jmp
adc
addr16
cmp
inc
ficoms
ret
mov
gs
or
arpl
jg
xchg
jl
les
movsl
cmc
adcb
sub
mov
stos
adc
lock
not
push
sub
jns
adc
pop
fcmove
mov
xor
sub
mov
cmp
outsb
inc
cli
and
aam
mov
rcr
test
dec
sbb
push
frstor
dec
pop
xchg
inc
jne
cltd
aam
cmp
int3
cwtl
jnp
mov
lea
bound
mov
scas
add
jne
xchg
lret
xchg
sub
hlt
mov
in
xor
enter
ret
cltd
sub
ljmp
lcall
or
loope
insl
fwait
imul
and
gs
sub
hlt
scas
xchg
mov
inc
in
int3
sub
mov
pusha
lock
xlat
pop
adc
je
imul
inc
sbb
xchg
stos
mov
addr16
jg
pushf
or
push
pop
push
mov
dec
je
jnp
pop
dec
lcall
jmp
aam
jle
fistps
push
not
adc
bound
jb
mov
ljmp
imul
dec
shl
sub
xchg
in
je
outsl
cmpsb
int
and
and
loopne
pop
pop
loopne
cwtl
jg
or
call
movsb
inc
popa
cld
mov
mov
mov
aam
call
or
jg
jl
pop
scas
mov
jno
int
ss
mov
xchg
adc
xchg
inc
dec
orl
mov
pop
jae
pop
jl
jne
jge
lds
pushf
loopne
cld
movsl
cmp
mov
iret
pop
sub
pop
cmp
cltd
or
insb
rcll
lods
mov
push
ljmpw
rolb
push
test
inc
paddsb
jmp
mov
mov
ret
pop
inc
push
jmp
push
xor
js
ss
cwtl
sub
leave
into
jae
mov
fildl
jae
enter
mov
mov
int3
rorb
lods
adc
enter
jns
shrb
pusha
push
jge
xor
add
or
jb,pn
push
mov
cwtl
sbbl
int
fidivl
push
enter
repz
or
aas
inc
mov
sub
scas
cmc
les
shll
push
or
dec
adc
flds
test
xor
hlt
fldenv
jnp
push
and
addr16
popf
mov
lods
arpl
xchg
mov
cltd
das
pop
add
mov
jbe
mov
sahf
mov
arpl
mov
sar
dec
jecxz
xchg
push
jno
cltd
out
addb
mov
jno
mov
fdivrl
daa
or
cmp
and
movb
arpl
test
sub
jnp
je
fwait
rol
das
cmc
sti
inc
aad
dec
pushf
inc
cmc
mov
cmp
out
cmpsl
inc
call
stos
fsubrs
push
or
add
jno
and
add
dec
jne
pusha
movsl
out
mov
adc
int
cwtl
sub
inc
addr16
jbe
mov
cmc
aaa
xor
mov
mov
stc
xorb
sub
js
pop
loop
stos
mov
sbb
pop
mov
std
dec
mov
lahf
or
and
and
adc
or
bound
push
cmovl
cmpsb
ret
xor
daa
rorb
sbb
out
push
lahf
adc
mov
sbb
xor
popa
adc
rol
push
xchg
dec
jbe
or
test
lret
mov
fisubrl
xchg
dec
dec
cmp
jb
fstpt
mov
xchg
hlt
jb
rcl
gs
mov
cli
xor
addb
mov
sbb
aam
into
pop
push
and
pop
inc
lds
jb
in
lods
push
lret
xchg
jle
bnd
mov
pushf
test
loope
xchg
jecxz
je
lahf
inc
push
icebp
jmp
stos
inc
test
fisubrs
nop
push
rsm
in
insb
negb
int3
loope
ret
bound
lcall
and
fldt
sti
cwtl
jle
imul
lods
xor
push
mov
icebp
push
cmp
loopne
inc
pusha
pushf
mov
jb
adc
int
push
cmovge
pop
addb
shrb
or
mov
out
test
add
sbb
cmc
mov
pop
sbbl
jnp
sbb
add
jo
movsb
scas
popa
jg
push
mov
fdivl
call
xchg
sub
mov
insl
or
test
adc
jecxz
mov
sbb
fsubs
xor
push
shl
jp
push
and
test
pop
mov
mov
pop
ljmp
mov
mov
mov
jne
mov
sti
or
imul
rolb
push
adc
or
or
ret
movsb
aad
out
xchg
shl
gs
dec
mov
mov
jbe
push
orb
leave
or
cli
fcmovne
shll
xchg
cmp
jmp
or
adc
jnp
push
iret
mov
test
mov
outsl
push
in
add
mov
push
stos
sbb
mov
jae
dec
test
adc
pusha
aaa
int
int3
add
xor
shlb
cmpsl
push
pop
roll
inc
lea
aam
lock
rclb
loopne
aaa
add
push
cmp
mov
into
fcmovnu
jmp
push
mov
or
insb
mov
adc
mov
jp
rcll
jl
dec
arpl
sbb
dec
inc
ret
repz
push
icebp
fistps
dec
in
leave
mov
aam
insl
fstl
movsb
aam
or
mov
sbb
and
dec
push
mov
mov
inc
inc
out
filds
out
adc
mov
jle
fwait
mov
jle
jecxz
in
idivb
lret
pop
lret
ret
mov
push
inc
mov
mov
stos
push
inc
and
gs
mov
or
xor
sub
inc
adc
mov
adc
xor
adcl
mov
push
les
push
xchg
popf
mov
test
gs
push
insb
add
push
xor
pop
sbb
pop
mov
mov
test
mov
mov
test
hlt
mov
ds
aam
adc
loope
add
setp
and
jae
fs
jmp
add
push
test
inc
mov
mov
movsb
int3
cmp
mov
push
sub
xchg
enter
sbb
sbb
cmpsb
and
lods
sbb
test
inc
imul
xor
sar
cmp
pop
int3
filds
movsb
out
popa
xor
cmc
cld
stos
loope
push
sbb
mov
enter
sbb
lret
xchg
hlt
sahf
dec
stc
pop
lcall
lcall
fwait
jbe
sahf
pushf
or
lds
xchg
inc
or
adcb
pop
out
lds
pop
and
add
aaa
into
pushf
mov
push
in
imul
gs
push
rcr
int3
adc
idivb
dec
mov
in
orl
nop
gs
es
vaddpd
xchg
fs
xor
out
mov
pop
cld
test
fiaddl
cmp
lcall
int
test
leave
daa
jo
xor
fbstp
andl
hlt
rclb
jmp
test
sbbl
xor
outsb
push
loopne
dec
add
xchg
aas
cli
shl
sub
mov
mulb
cmpsl
inc
sub
cmp
push
xchg
xlat
mov
ficompl
iret
add
imul
cmp
xchg
add
sbb
fldt
push
roll
ljmp
inc
sub
mov
aaa
movsl
xchg
xchg
test
mov
xlat
outsb
jl
xor
movsl
fnsave
sub
add
mov
cltd
test
push
mov
mov
stc
and
push
and
lds
lret
push
loope
or
xor
dec
push
mov
push
stos
inc
push
xor
shrl
jne
or
in
inc
in
int
ret
lret
inc
int
pop
dec
cld
inc
push
leave
xchg
mov
sub
idivb
sbb
outsb
add
mov
mov
or
mov
mov
cmp
subb
cmp
or
shlb
movb
mov
mov
lods
cmp
repz
sub
xchg
scas
orb
xor
adc
mov
dec
loop
xor
push
loopne
fidivs
and
sar
filds
mov
mov
std
mov
adc
xor
xor
or
aam
mov
popa
bound
push
push
jne
mov
ljmp
mov
frstor
lock
adc
xchg
jno
loope
xor
sbb
scas
in
mov
movsb
inc
bound
andl
or
je
mov
ret
mov
jbe
pop
test
jle
cmp
sub
nop
push
sub
pop
insl
mov
pop
sub
clc
xor
inc
nop
fbld
cmp
cltd
cmpsl
popa
inc
sbbb
or
xor
sbb
cmpsb
stc
adc
fistl
ds
inc
adc
adc
testb
push
jl
inc
jl
mov
inc
pop
imul
cmp
jb
xchg
push
push
mov
jmp
pop
rcl
xchg
mov
gs
scas
or
sbb
shl
mov
cs
pop
adc
jbe
fsubrl
inc
xchg
in
xchg
xchg
sub
mov
xor
jmp
cmp
add
cmp
mov
inc
jmp
pop
fs
cwtl
adc
rol
insl
mov
mov
sub
fneni(8087
pop
mov
adc
xor
xchg
insb
add
mov
cmp
xor
outsl
clc
je
cs
cld
mov
mov
mov
and
push
sub
mov
dec
pop
loopne
xchg
pop
dec
stos
sub
mov
ficomps
pop
mov
arpl
movsb
into
or
mov
sti
lock
lret
jg
or
adc
int3
shrb
stc
insl
loopne
sub
cli
cmp
movsb
xor
xchg
scas
nop
dec
mov
hlt
movsl
ficomps
lahf
adc
in
jne
mov
out
test
mov
fwait
out
mov
roll
mov
aam
cmp
jg
jne
fcomps
fsubl
jecxz
ds
lahf
xchg
cli
jp
sub
iret
enter
sbb
sub
mov
lods
sub
scas
cltd
add
lahf
mov
pop
sub
pop
mov
roll
mov
iret
das
mov
pop
sti
xchg
jp
pop
and
and
popl
icebp
pop
ds
inc
fwait
sub
sub
outsb
enter
pop
inc
jo
mov
jmp
xchg
lock
sbb
push
add
daa
and
lods
xor
lret
jmp
aaa
sbb
int
int3
mov
xor
adc
int
aaa
mov
mov
fs
les
xchg
push
sub
fisubrs
sbb
inc
push
out
ja
xor
pop
xchg
popa
sbb
mov
mov
cli
repnz
clc
mov
pop
cmp
dec
rolb
aad
sub
and
and
xor
and
pushf
xor
add
out
stos
cld
add
jbe
ret
cmp
lods
imul
lea
dec
mov
int3
xchg
sub
pop
mov
mov
jg
das
rep
jnp
push
rclb
into
scas
jmp
jl
fidivl
fisttpll
pop
nop
clc
pop
add
push
test
sbb
aas
fldcw
shll
sub
mov
dec
jge
in
sbb
cs
jne
je
pop
xor
mov
cmpsl
lods
inc
fistpl
xchg
inc
sbb
into
gs
fidivl
push
out
shr
pop
lea
mov
and
pop
cmp
clc
cmp
cmpb
dec
xchg
mov
leave
test
adc
aas
rorl
jp
and
or
pop
lcall
cld
add
sbb
mov
mov
popf
cmp
mov
add
rcl
sub
add
sub
jle,pt
or
xor
push
call
fisttpll
loop
jae
jne
sbb
hlt
xchg
sub
and
out
cld
repz
les
sbb
xchg
imul
pop
xor
xchg
jb
and
xor
cmp
fistl
out
fdivr
xchg
and
test
jns
inc
stos
insl
ljmp
imul
cmp
rep
aaa
hlt
lahf
sub
jnp
in
jnp
dec
mov
pusha
cmp
push
repz
das
inc
pop
push
dec
enter
inc
bound
mov
jo
ret
sbb
in
lds
dec
mov
in
sub
addr16
mov
fwait
push
outsl
lret
push
dec
pop
sbb
mov
mov
pusha
add
sbb
imul
jle
cmp
testl
in
inc
fcmovnbe
xor
je
xor
cmp
rclb
insl
mull
dec
pop
mov
jge
sbb
inc
imul
jecxz
push
inc
push
andl
sbb
insb
sub
iret
mov
loopne
push
adc
inc
jge
jae
popf
gs
dec
pop
jge
fisttpll
dec
jecxz
repnz
sbbb
out
lret
and
and
ret
jb
hlt
addr16
dec
dec
clc
repnz
adc
lret
cld
jbe
push
fstp
push
jne
jnp
cmpsl
cmc
test
fdivrl
xchg
ja
outsb
cmpsl
cli
mov
mov
mov
pop
cltd
push
inc
cmpsl
fstl
in
adc
outsb
sub
and
out
xor
pop
arpl
fnstenv
fdivl
in
std
jle
inc
fsubrl
and
mov
ljmp
pop
stc
je
push
stc
adcb
pop
icebp
aam
xchg
sub
xor
lods
nop
inc
cmpsb
call
pop
mov
fiadds
pop
sub
fsubrl
out
test
pushl
inc
lods
xchg
dec
pop
rcrb
push
hlt
enter
xor
push
fsubs
icebp
push
test
pop
stc
lods
scas
stos
es
mov
inc
push
aaa
test
cmp
xor
xor
mov
dec
addl
mov
cmp
jge
insl
jge
pop
xchg
and
mov
ret
cmp
mov
sti
and
jecxz
xor
js
xor
ret
sbb
shll
jmp
in
xchg
and
dec
dec
aam
in
or
cld
xchg
mov
xchg
popf
inc
sbb
add
sbb
cltd
inc
fucomp
mov
mov
nop
loope
inc
lcall
mov
cmpsb
xchg
mov
fs
int3
mov
pop
scas
inc
dec
mov
push
xchg
cmp
sbb
mov
dec
mov
leave
les
jge
dec
sbb
into
lea
adc
in
inc
aaa
sub
bound
and
xchg
lods
int3
out
rorl
mov
test
mov
inc
add
add
dec
in
js
jecxz
jb
sub
pop
scas
test
das
loop
ss
mov
fisttpl
out
mov
push
lcall
sub
bound
sub
dec
pusha
xchg
icebp
pop
idivl
leave
and
pop
mov
les
lds
mov
movsl
pusha
jecxz
jno
dec
and
insb
lock
inc
mov
sub
scas
notb
aas
sti
cwtl
imul
jmp
out
add
jle
lods
xor
lods
les
cmpsl
mov
push
push
or
mov
addr16
mov
pop
push
and
mov
ret
icebp
enter
inc
aad
push
jg
ss
and
xor
push
mov
mov
inc
jp
sub
loope
negb
push
mov
cmp
xchg
jo
bnd
adc
fwait
popa
or
mov
push
jb
pop
aad
fisttpll
scas
sub
leave
add
sub
std
rorb
das
add
jmp
jg
clflush
jnp
jo
mov
test
enter
and
inc
jmp
push
or
shlb
mov
cmpsb
mov
rol
clc
cld
outsb
or
inc
pop
insl
cltd
sub
out
jnp
xor
repz
out
mov
mov
push
cwtl
stos
xor
add
xchg
repz
insl
mov
mov
push
jmp
out
fldcw
add
movsl
xor
and
imul
lea
cmp
mov
lret
out
stos
mov
aaa
mov
inc
popf
dec
cld
mov
lret
sbbb
add
hlt
jo
aaa
mov
testl
js
mov
sub
and
dec
icebp
nop
aas
adc
fsubs
pushf
js
mov
lock
inc
fsts
imul
stos
xor
test
jbe
jae
scas
fadd
xchg
xchg
dec
sbb
mov
in
out
test
xchg
int
cmp
sbb
outsl
jnp
pop
faddl
xor
jle
dec
ljmp
dec
mov
insb
pushf
xchg
mov
pop
sbb
fucomp
xchg
mov
idivb
jne
lods
and
cmp
sbb
lcall
nop
sti
mov
arpl
sub
push
les
outsl
js
jl
pop
sub
adc
sbb
les
out
mov
lret
dec
or
pushf
iret
push
out
cmp
cmp
out
bound
jmp
call
out
movsb
add
es
ljmp
outsl
stc
pusha
negl
insl
imul
mov
mov
dec
inc
bound
lods
ja
adc
icebp
shll
dec
pop
mov
push
rcr
push
mov
or
and
add
popf
push
lock
inc
inc
jge
jg
jo
and
mov
sbb
data16
push
inc
idivl
push
popf
or
addr16
scas
test
mov
cmp
dec
int3
outsl
xchg
aaa
or
shlb
xor
mov
jae
sbb
lods
ljmp
and
mov
stos
mov
xor
pop
lock
popf
xor
fsubrl
mov
dec
sarb
sahf
loope
ficoms
pop
mov
repz
ja
jns
mov
sar
mov
js
mov
movntps
lret
xor
repnz
xchg
jb
dec
lock
scas
pop
adc
pop
adc
and
adc
push
adc
das
std
xor
lcall
cmp
icebp
fwait
mov
sub
pop
sub
call
adc
out
cmp
cmp
sub
sub
push
push
pushf
dec
js
int
cmpsb
insl
add
and
jb
add
ss
mov
mov
mov
fistl
insl
clc
iret
fs
je
xchg
jb
test
push
loopne
cmp
into
shll
inc
or
es
jl
cmp
daa
ljmp
jl
lds
insb
inc
and
je
movsb
lret
mov
xor
and
or
cli
popa
push
popa
dec
push
ret
imul
dec
xor
mov
jge
aad
test
add
adc
movsb
jns
jecxz
cmp
imul
jmp
mov
xchg
ret
sub
aas
repnz
testl
sti
sarb
mov
xchg
cmp
push
jno
mull
movswl
stc
or
mov
sub
adc
push
frndint
or
jmp
dec
jno
add
and
xchg
adc
shrb
mov
mov
aas
mov
jecxz
mov
push
lahf
stc
into
add
test
xchg
pop
stos
inc
inc
mov
jmp
enter
mov
loop
xchg
loopne
mov
clc
aaa
inc
pop
jns
cwtl
dec
or
cmp
nop
out
dec
inc
ljmp
xor
cmp
popa
movsb
jb
js
pop
aad
adc
shlb
aas
dec
loop
xchg
insb
out
shl
hlt
adc
sub
pop
cmp
or
jmp
inc
lds
ljmp
mov
lahf
mov
shll
inc
rcr
xchg
sub
push
jno
aaa
lret
sub
stc
push
sti
jmp
dec
std
or
arpl
add
mov
out
insb
xchg
push
mov
mov
in
jo
push
add
add
jg
push
inc
loope
cmp
xor
mov
pop
xchg
inc
data16
insl
cs
pusha
decl
rcl
add
outsb
addr16
fcmove
jb
adc
sbb
movsl
mov
int3
cmc
dec
pop
pcmpgtw
movsb
ja
xor
int
jl
inc
mov
push
mov
pop
fmul
jne
jno
xor
cmp
lods
and
or
sub
xor
aas
jecxz
mov
mov
xchg
lret
add
sbb
or
data16
imul
rorb
mov
pop
sete
fisttpl
shll
jb
lds
scas
inc
cld
stc
jo
dec
stos
push
mov
mov
mov
xchg
rol
loopne
or
mov
and
jecxz
push
loopne
mov
cmp
inc
loopne
xor
sbbl
cs
push
stc
popf
xor
dec
cwtl
dec
setp
cmp
dec
push
xor
in
adc
xchg
out
cmpsl
cmp
inc
pop
cs
lock
jle
pop
fbld
xchg
stos
fcmovbe
shlb
pusha
mov
inc
popa
aaa
xlat
test
or
jne
iret
mov
iret
data16
xchg
push
and
arpl
popa
sbb
ja
andb
inc
lcall
inc
clc
cmp
pop
jl
imul
pop
mov
jae
mov
scas
add
mov
test
inc
inc
mov
pushf
cli
jmp
mov
add
push
out
mov
sbb
int3
sbb
add
or
fstpl
sub
add
xchg
push
sti
in
jno
or
mov
xchg
pop
push
es
testl
cmp
fidivl
pop
xor
mov
scas
push
imul
vmread
or
mov
popf
lock
imul
xchg
cmpsl
je
sbb
sub
mov
and
loopne
push
sub
aad
js
sbb
add
jmp
pop
mov
popf
mov
xchg
popa
cmp
pushf
lods
push
and
jne
mov
rclb
bndstx
shrl
mov
icebp
mov
push
xchg
enter
sbb
pop
cmpsl
add
sub
std
fdivrl
pop
mov
inc
ret
mov
cmc
push
push
push
arpl
insl
sub
ret
pop
scas
call
push
lcall
dec
js
or
in
outsl
jg
icebp
xchg
sub
mov
xchg
lret
std
cmp
sbbl
gs
sbb
push
fxch
add
mov
popa
sub
xlat
icebp
xchg
push
scas
xchg
ljmp
cmp
gs
inc
push
push
test
hlt
icebp
dec
test
pop
imul
insl
call
sub
fwait
mov
or
das
ljmp
in
add
ja
scas
out
push
stc
xchg
sub
cmp
outsl
add
je
dec
pand
inc
jg
jecxz
shl
cmp
push
cmp
ss
mov
xor
jmp
arpl
je
mov
rorb
scas
and
cmpsb
dec
loop
rorb
xchg
lcall
sbb
addb
mov
aam
ds
inc
js
xchg
cld
ljmp
dec
mov
in
inc
lock
es
cmpsb
lea
test
daa
aam
dec
mov
iret
dec
pop
adc
in
mov
add
cmp
cmpl
pop
pop
mov
adc
push
and
xchg
arpl
mov
xchg
inc
cmc
sub
cmpb
lock
pop
fnstenv
lods
xchg
pushf
jbe
std
seto
push
out
cmp
ret
mov
stos
nop
push
popf
mov
cs
orl
shlb
aad
sbb
sub
jns
jns
pop
xlat
mov
shll
aas
xchg
xor
in
insb
push
jmp
mov
sahf
aaa
les
scas
dec
arpl
pusha
mov
rcrl
mov
lods
rclb
pop
je
inc
cmpsb
js
sub
int
cmpsb
rcl
testb
pop
push
call
cmp
push
push
lock
pop
addr16
movd
fdivl
mulb
push
pop
sahf
ficompl
insb
cmp
scas
push
add
in
cltd
lock
lret
sub
sysenter
decb
mov
sub
jge
or
cs
je
adc
ret
and
push
pop
in
insb
mov
xchg
cmp
mulb
mov
in
mov
push
movsb
dec
xchg
jo
sti
sub
ja
lret
lds
add
or
and
dec
repz
jns
cltd
mov
push
out
xchg
sbb
mov
pop
mov
insl
dec
lds
jb
mov
mov
dec
inc
xchg
add
pop
mov
and
jmp
pop
sbb
add
shr
jle
bound
pop
mov
popf
ss
outsl
enter
and
popf
sbb
xchg
clc
pop
fs
mov
lods
mov
out
loope
popa
in
shrb
mov
xchg
push
bnd
adc
stos
insb
dec
mov
repz
cwtl
add
sub
clc
insb
jae
popa
sub
fsubr
testb
test
iret
enter
stc
mov
xchg
insb
push
rcl
cmp
sbb
pop
imul
inc
enter
in
adc
ja
mov
mov
aas
dec
mov
pop
lock
divl
scas
stos
mov
xor
inc
inc
lcall
cmc
pop
fs
pop
rclb
insl
or
shrl
leave
xor
jae
popa
scas
inc
bound
and
icebp
or
data16
das
fldpi
data16
aam
mov
push
xchg
in
into
adc
sub
outsl
test
and
icebp
xchg
mov
jg
fsub
fnsave
clc
inc
faddp
test
or
arpl
std
outsl
sarl
inc
rorb
enter
mov
in
mov
pusha
add
fistpll
imul
in
pop
adcl
ja
jno
inc
arpl
pop
in
sbb
ja
mov
cmp
jge
add
aas
lahf
notl
cmp
cli
shll
pop
aad
push
sub
xor
adc
inc
lock
pop
sti
mov
xor
in
adc
cs
push
scas
mov
mov
shr
lcall
push
xor
sub
push
mulb
daa
inc
mov
push
push
sbb
arpl
lahf
or
clc
xor
ret
push
jg
dec
push
test
aas
ret
jp
cmp
dec
cwtl
mov
add
aas
sahf
or
pushf
add
testl
shrl
mov
dec
dec
imul
pop
pop
mov
les
mov
popa
inc
int3
xor
cli
leave
dec
pushf
or
xchg
ds
mov
js
dec
xchg
in
pop
sbb
push
fimuls
xlat
rcr
jl
movb
xor
js
jno
sub
jbe
movsl
xchg
mov
pop
ds
cmp
fsubr
sbb
and
mov
cmp
xor
pop
nop
outsl
push
sbb
imul
add
or
dec
or
scas
insl
push
rorl
bnd
push
pushf
xor
sahf
pusha
fisubl
clc
mov
mov
adc
ss
rclb
movsl
inc
loope
or
cmp
adc
addr16
shrb
xchg
adc
adc
test
dec
pop
push
addb
stc
shrl
gs
or
mulb
movsl
je
in
push
inc
stc
dec
mov
and
cli
ret
outsb
and
cwtl
addl
mov
add
jo
lds
divl
xchg
aam
dec
dec
xor
jbe
mov
add
fcomps
scas
inc
cmpsl
ljmp
push
add
dec
or
xlat
mov
add
fistps
xor
call
rcrb
imul
jne
xchg
addr16
inc
and
scas
sub
xor
push
inc
add
dec
cmpsb
lret
mov
sub
sbb
push
call
cs
add
sub
push
lahf
sahf
mov
xchg
lock
or
inc
fsubrs
sub
and
inc
xchg
cwtl
adc
mov
inc
sbb
repz
jecxz
xor
test
jecxz
mov
push
ds
sub
data16
aas
sbb
cmp
cmp
popa
fnstenv
cmp
mov
test
and
aam
xchg
mov
test
in
pop
js
jns
sub
mov
lods
test
jb
sub
insl
mov
enter
pop
adc
mov
dec
xchg
adc
scas
sub
hlt
or
pushf
mov
sub
push
ret
enter
mov
inc
pop
in
loopne
ljmp
cwtl
notl
test
sub
cmp
loope
xchg
cmp
cmpsl
mov
arpl
cli
mov
xor
in
lcall
lcall
out
lahf
push
jmp
and
pop
and
mov
lcall
sbb
fldenv
xlat
dec
mov
mov
mov
and
clc
leave
mov
adc
xchg
test
xorb
pop
in
outsl
idivb
mov
ficompl
xor
lods
sub
bound
mov
stos
xchg
jo
mov
loop
outsl
add
divl
pop
ret
jo
dec
faddp
sbb
addb
adc
jmp
cmp
movl
popa
jmp
test
leave
fcoml
jne
das
mov
insb
lods
and
push
jnp
sahf
insl
stc
pop
rolb
sub
mov
aas
add
mov
test
rep
hlt
loope
movsb
push
pop
aas
sub
jno
int
inc
mov
xchg
in
cmp
nop
iret
mov
dec
mov
jmp
mov
into
outsl
mov
mov
mov
mov
bound
add
adc
fimull
pop
push
hlt
mov
jbe
test
add
mov
and
imul
fldpi
xchg
loop
sub
cltd
push
out
or
jae
push
xorl
popa
lret
jle
inc
call
cltd
sbb
enter
or
enter
loope
cmp
ficoms
cmp
jne
ljmp
jecxz
hlt
iret
rorl
je
fimull
mov
dec
mov
push
xor
sub
and
int3
lcall
inc
fisttps
leave
fnstenv
mov
fimull
mov
and
bound
ret
or
sub
addl
xor
aad
and
cmp
and
imul
mov
inc
filds
sbbl
sub
xchg
sub
and
sarb
inc
das
loope
xchg
and
dec
loopne
inc
cmpsl
push
divl
mov
sbb
imul
int3
and
cmp
fcompl
add
push
test
cmp
xchg
bound
aaa
loop
outsb
rorb
dec
cmp
inc
fwait
jo
inc
rorb
and
adc
push
shll
sub
outsl
xor
pop
mov
pop
lret
movsb
ret
sub
shl
out
mov
popf
add
jns
test
int3
fdivrs
mov
in
ret
xlat
pop
push
push
call
test
cs
sbb
std
cltd
sahf
xchg
js
andb
mov
test
mov
jbe
inc
xlat
daa
cli
sub
cmp
pop
mov
sub
push
jno
roll
popf
jmp
sub
sbb
ret
pop
aaa
lret
bound
adc
mov
movsb
je
icebp
cmp
push
dec
jns
xor
imul
out
dec
dec
test
cmp
outsb
mov
inc
neg
jmp
push
inc
lcall
sbb
repz
cmp
lret
push
insl
aaa
cli
xchg
rcrb
cld
mov
push
or
hlt
popl
xchg
adc
cmc
stos
loop
adc
mov
fwait
push
mov
and
pop
xchg
aam
das
ret
xlat
push
rorb
rol
xlat
scas
mov
leave
int
mov
aam
repnz
ret
popa
jge
xchg
test
or
inc
stos
repnz
in
cmpsl
mov
mov
push
ficoml
jle
repnz
es
rorb
clc
adc
sbb
xchg
add
dec
arpl
pop
inc
xchg
fists
dec
jecxz
mov
sub
adc
sub
add
dec
and
add
subl
jne
mov
lods
fistpll
or
jno
xor
arpl
shufps
and
jmp
outsb
cmpsl
cli
and
imul
lds
fyl2xp1
xchg
dec
repz
add
jl
mov
cmc
push
adc
mov
sub
aaa
mov
cmp
sbb
push
bnd
mov
call
aaa
push
iret
xlat
jnp
faddl
inc
mov
mov
sub
push
in
adc
pop
hlt
mov
pop
pop
negb
in
adc
jl
aam
mov
pop
mov
or
and
leave
pop
and
testb
aad
imull
adc
clc
in
pop
jae
push
test
ds
xor
push
add
popf
or
lahf
imul
or
mov
pop
popa
pop
xchg
repz
sbb
jecxz
mov
test
test
dec
add
dec
fwait
leave
cld
dec
pop
fst
inc
inc
clc
sbb
pop
cmp
or
cmp
ret
ljmp
loop
insl
fists
jg
dec
xchg
xchg
xchg
iret
mull
imul
mov
cmp
dec
or
ficoms
scas
add
xor
add
push
cmpsl
mov
lock
sbbb
loope
mov
les
mov
inc
sti
daa
mov
in
popa
mov
loop
push
inc
cmpsl
ds
push
pop
aam
outsb
add
xchg
add
es
push
das
mov
cmp
pop
cli
xchg
xchg
push
cmc
mov
sbb
sbb
out
adc
rcrb
push
loope
mov
scas
sub
or
mov
scas
out
xor
jns
dec
fcmovbe
jmp
jg
dec
cs
aad
cs
pop
jg
repnz
push
gs
fs
sahf
push
pop
fsts
push
repz
pop
rcrb
cli
aad
pop
xor
inc
inc
ficoml
stos
fsubrs
inc
lods
clc
fsubr
push
imul
sub
shrl
testl
fsubrs
cmc
pop
sub
popl
or
fs
jo
lret
movsb
mov
adc
daa
push
lock
xchg
repnz
aam
sbb
adc
mov
xor
and
mov
adc
loope
fisttps
repz
mov
mov
dec
mov
sub
xchg
sbb
in
jo
sbb
sbb
cmp
mov
push
jecxz
pop
call
xor
cmp
testl
rcr
stos
mov
clc
fists
in
sarl
arpl
rclb
aas
jmp
je
xchg
out
imul
and
fsubl
xchg
inc
imul
cmp
jns
loopne
enter
mov
lret
out
test
sub
aaa
stos
imul
fstpt
les
loop
out
sub
aam
lret
xor
andl
cmp
sub
mov
jle
sti
mov
ja
sbb
jno
mov
gs
test
les
push
nop
jle
jmp
data16
cs
mov
movsl
jns
dec
movsl
addr16
aas
or
stos
xchg
scas
add
ja
rcrb
mov
daa
dec
mov
test
adc
lret
in
push
xchg
or
push
push
stos
and
xchg
je
mov
loopne
fldenv
rcrl
add
sub
shll
adc
sub
ja
inc
xor
dec
mov
mov
loopne
jmp
or
aad
sbb
add
xlat
outsb
push
addr16
jne
xor
cmp
or
xchg
int3
jnp
enter
mov
mov
push
imul
xchg
sub
add
das
fldt
dec
mov
push
inc
mov
jmp
dec
adc
mov
xor
inc
cmpsl
cmc
push
dec
add
out
push
jno
into
cmp
popa
out
xchg
or
sub
add
incb
int
and
mov
cmpsl
sbb
fdivl
sbbb
pop
sbb
shll
sub
xchg
lds
call
lock
imul
mov
jmp
mov
negb
xchg
pop
sub
dec
rcrl
push
cmp
mov
add
cmp
out
testb
data16
in
clc
bnd
mov
test
fadd
imul
pop
lahf
sub
enter
out
sbb
mov
js
mov
add
and
xchg
jb
es
dec
loopne
mov
jae
or
dec
ds
call
movsl
leave
and
testl
mov
scas
inc
pushf
mov
pushf
mov
mov
pop
xor
gs
push
mov
dec
adc
and
scas
enter
inc
sub
jg
lret
dec
sbb
xchg
adc
push
repz
xchg
add
sub
cmpsl
stos
add
fwait
inc
xor
std
push
adc
mov
icebp
movzwl
adc
pop
jo
lcall
outsb
adc
mov
sbb
sbb
lcall
imul
sub
xchg
imul
push
popf
int
ljmp
xchg
add
clc
sbb
mov
ret
daa
loopne
jno
and
lds
mov
dec
bound
repnz
es
xor
sbb
into
rol
sub
out
xor
xchg
sti
stos
or
lret
imul
outsb
cmc
pop
popf
rcrl
cmpsl
mov
mov
orb
cltd
andl
pop
je
sbb
push
lods
cs
pop
pop
mov
push
lea
ret
hlt
xchg
xor
shll
mov
das
dec
xchg
repnz
mov
push
loop
repz
lea
aam
repnz
pushf
negl
sti
and
jb
cmpsl
jb
jl
out
mov
insb
sub
sbb
or
mov
xchg
pop
jae
and
add
ljmp
mov
out
in
xchg
mov
shlb
ficompl
pop
or
lret
and
out
mov
sarb
hlt
jne
gs
cmp
mov
aaa
push
cmpsl
mov
mov
add
xor
loopne
stos
pop
cmp
cmp
imul
jnp
jecxz
repz
enter
push
xor
rcll
or
sbb
mov
es
mov
test
int3
xchg
pop
mov
imul
xor
sbb
sbb
push
jl
pop
cmp
sahf
xlat
and
sbb
mov
pop
fnstcw
push
addr16
loopne
or
xlat
outsl
adcl
addb
or
dec
inc
or
mov
loop
pop
cmp
divb
add
pop
push
mov
mov
pop
flds
stos
out
jp
in
inc
mov
pop
fs
push
cld
shll
cmp
aad
test
add
sar
xlat
cmp
dec
push
add
test
pushf
mov
in
arpl
jp
lret
sub
jbe
jle
into
add
nop
push
sbb
fidivs
std
popf
loop
inc
pop
sub
sub
pop
push
xlat
inc
push
mov
push
push
push
fstpl
and
popl
scas
mov
mov
mov
sti
pop
addr16
fisubrs
mov
repz
pop
add
nop
mov
loop
and
cmp
sbb
sub
add
and
jg
adc
test
es
repz
push
insl
sub
lahf
sti
xor
pop
jno
or
scas
cmp
into
mov
hlt
jo
out
aam
mov
mov
stos
loop
xchg
push
outsb
leave
push
stos
subl
or
mov
adc
pop
add
fwait
divl
sub
maxps
loopne
xchg
mov
sub
arpl
stc
subb
sbb
mov
and
adc
mov
xchg
inc
loopne
pop
and
dec
mov
xchg
popa
adc
or
mov
add
les
sbb
pop
pop
lahf
insl
sbb
scas
fisubl
jge
jne
jge
test
into
clc
mov
scas
and
push
xor
inc
hlt
leave
pusha
call
xor
mov
rclb
int3
arpl
shr
add
push
imull
and
lea
scas
xor
pop
stc
xchg
sub
mov
cs
xlat
xor
and
mov
xchg
orb
sub
fs
enter
or
lods
fcoml
sti
mov
test
mov
xor
or
jmp
je
jb
dec
xchg
pop
ljmp
mov
push
pop
mov
in
dec
lcall
lcall
pop
pop
mov
pop
dec
and
ret
enter
leave
insl
fsubs
sub
jmp
scas
inc
mov
dec
sar
js
lock
lcall
push
notl
adc
jno
cmp
xchg
pop
pop
push
cwtl
orl
mov
pop
inc
jbe
mov
adc
jp
jnp
or
push
xor
mov
pop
in
fs
jl
push
test
insb
add
pop
repnz
imul
mov
fs
cltd
pop
dec
add
iret
lahf
mov
and
push
cmpsl
in
xor
mov
xchg
out
push
mov
xor
sub
test
stos
sub
lods
ret
test
dec
sahf
lods
sbb
movb
adc
adc
ficompl
xor
mov
mov
cmp
or
adc
dec
pop
subl
popf
test
mov
into
cmp
or
test
out
pop
shrb
dec
mov
xchg
decl
shrl
mov
dec
sub
leave
in
cmp
ret
call
aam
sbb
out
xor
scas
push
mov
push
push
aad
je
stc
popf
xchg
stos
mov
in
test
iret
lahf
aam
mov
mov
aas
mov
lock
call
aaa
je
sub
xchg
out
cmc
test
xor
cmp
aad
hlt
pop
dec
push
mov
out
mov
stc
jbe
cld
cs
jb
test
testb
xchg
mov
xor
fsubl
mov
fidivs
in
and
aam
lret
and
fsts
pop
call
mov
lea
bnd
mov
rcrl
jnp
push
call
mov
rcrl
out
ret
in
inc
sub
mov
insl
sub
sub
aam
inc
xchg
mov
sti
jecxz
lods
mov
ds
inc
insl
ret
hlt
inc
mov
jb
push
scas
xor
mov
or
adc
pop
enter
ret
pop
or
rcr
mov
xchg
fstpt
popf
in
mov
shll
pop
cli
push
insl
daa
dec
xor
jp
sbb
je
cld
sahf
inc
mov
add
hlt
dec
sahf
cmp
in
mov
push
jno
decl
bound
add
mov
ret
shlb
add
shrb
shrl
inc
jns
enter
jl
shrb
fnsave
sti
in
jnp
sbb
dec
and
fdivs
in
mov
ficomps
push
js
fwait
inc
arpl
xchg
call
or
sti
jbe
mov
icebp
pusha
inc
lods
fldln2
les
test
shlb
adc
dec
jb
js
in
cmp
cmp
mov
adcl
into
inc
push
adc
fwait
mov
jb
cmpb
sub
adc
xchg
jb
pop
push
sbb
jmp
cmpsl
out
call
jb
mov
aam
xchg
push
sbb
mov
or
nop
adc
hlt
add
int3
sub
cld
push
push
pusha
addr16
inc
test
lock
pusha
xor
and
pop
out
dec
jecxz
lret
jl
lock
add
int
and
and
ja
xor
rorl
cmp
xchg
gs
mov
mov
xlat
jl
xchg
dec
dec
or
cmp
adc
dec
dec
outsl
lds
shl
mov
int3
cltd
sti
daa
bswap
mov
leave
sub
movsl
shl
ds
nop
xor
pop
mov
xchg
lods
cmovne
imul
in
cs
pop
stc
push
mov
daa
push
xor
dec
mov
int
loop
xchg
loope
aad
sbb
mov
inc
mov
iret
xor
xchg
push
inc
mov
sbb
sbb
or
cmp
cmp
data16
push
pop
inc
out
aas
fdivrs
add
lcall
out
fwait
cmp
mov
pop
jnp
jp
inc
push
mov
fcomp
out
ret
or
xchg
mov
stos
mov
pop
jno
pop
rorl
xchg
test
dec
nop
pop
hlt
addb
add
mov
mov
aas
insl
mov
movsw
xchg
push
inc
dec
or
int3
repz
stos
test
sbb
push
jmp
repz
mov
flds
mov
push
out
inc
cmc
fwait
dec
loope
push
int3
pop
fimuls
push
test
jmp
gs
cmc
xor
fcomps
test
cmc
and
push
xor
sub
xchg
fs
fs
icebp
outsb
push
xchg
sub
sarl
ret
clc
cmpsb
lds
cmp
repnz
adc
adc
mov
cs
out
decl
mov
pop
cmp
cmpsl
daa
pop
mov
add
loop
sub
pop
stos
cmp
fdivrs
pop
aaa
arpl
and
mov
leave
imul
mulb
addr16
and
sbb
mov
mov
xlat
jl
pop
dec
test
mov
gs
inc
mov
xchg
divl
xchg
daa
sub
and
cmp
mov
dec
mov
dec
loopne
xchg
rol
or
outsl
sub
add
in
int
sub
pop
sbb
sub
mov
mov
addb
stos
sub
testl
push
cmp
jl
cmp
outsb
add
mov
pop
sbb
jbe
dec
push
push
ja
mov
leave
lods
cs
sbb
adc
das
sbb
or
xor
xchg
sub
mov
mov
mov
push
or
sarb
add
mov
add
push
jb
mov
rcrl
fnstcw
jecxz
out
fdivr
xor
adc
faddl
lds
cmp
data16
adc
mov
test
or
cmpsl
hlt
mov
ja
dec
and
test
push
out
inc
out
xchg
loop
setl
jns
inc
xchg
sub
stc
cmp
mov
imul
xchg
mov
gs
cmc
sub
sbbl
mov
mov
dec
out
aas
hlt
shll
icebp
scas
cmp
mov
fsubrs
dec
movsb
jno
pop
sub
ljmp
aaa
xchg
notb
dec
sarb
sti
nop
shll
add
jg
xlat
imul
icebp
pushf
lcall
aam
icebp
clc
push
and
push
stc
xchg
xor
cli
sbb
data16
xor
lret
or
cmp
rorl
pusha
xchg
xlat
repz
imulb
lods
push
fistps
add
xor
inc
popa
mov
dec
outsb
and
out
and
sub
shll
pop
sbb
sbb
out
sub
outsb
sub
pop
sbb
les
mov
xchg
jae
push
or
enter
push
lea
adc
aaa
mov
cmp
jmp
jbe
pop
sbbb
cmp
dec
hlt
out
mov
pop
into
inc
jnp
bound
testb
sbb
lods
adc
cmp
dec
sbb
nop
call
mov
fcomps
cmc
mov
scas
in
fnstenv
and
int3
mov
cmpsl
push
fcoms
mov
cmpsl
aas
mov
jge
sub
inc
out
rorl
icebp
inc
dec
push
mov
cli
scas
xor
or
call
test
sbb
cmp
dec
xchg
push
lahf
sbb
popf
mov
popa
add
xor
fnstcw
xchg
jmp
clc
sbb
pop
cmp
inc
sbb
sbb
sub
out
ja
into
push
shlb
jle
mov
imul
xor
sub
push
ret
cmpsl
shlb
lock
add
inc
push
jne
pusha
ja
and
push
jb
xor
arpl
push
aas
gs
repnz
xor
jg
fstpt
rorb
inc
lret
fimull
mov
lret
cmp
sub
pop
push
and
jo
shrl
out
icebp
sub
icebp
scas
or
dec
jno
sahf
ss
adc
imul
loop
cli
cwtl
dec
push
outsl
jge
jns
jmp
mov
scas
cmp
xor
dec
mov
inc
xlat
cs
add
stos
xor
jecxz
push
stos
inc
test
stos
adc
sub
pusha
xor
or
lcall
pop
insb
sub
ss
ss
inc
testl
repz
lods
lret
push
and
xlat
lret
jl
pop
xor
sarb
es
shlb
mov
out
lods
movl
iret
fcmovnbe
adc
addr16
daa
ja
mov
rcrb
repnz
mov
push
push
xorl
sbb
leave
inc
jno
leave
scas
insb
int
sahf
leave
mov
xchg
add
mov
aaa
aam
push
out
add
daa
ds
inc
xchg
sbb
ljmp
mov
sub
int3
fcoml
adc
inc
jb
pop
mov
xor
stc
and
test
xchg
mov
mov
mov
popa
or
cld
pop
xor
mov
add
mov
mov
push
push
and
pop
push
mov
sub
xor
aas
ret
push
loope
aas
in
shl
jg
shlb
xor
test
push
mov
sub
jo
fdivrl
mov
fdivrs
push
push
lret
mov
jne
test
mov
loop
rcl
sub
pop
imul
xchg
and
or
je
imul
outsb
sahf
leave
in
insb
push
jmp
or
leave
ljmp
test
mov
insl
pop
daa
jae
mov
and
dec
mov
xchg
enter
leave
lods
and
pop
out
xchg
jle
imul
enter
dec
mov
into
ja
pop
in
dec
cmp
xor
jg
mov
leave
leave
pop
mov
jnp
mov
outsl
jns
int
mov
add
jmp
test
es
xor
sub
sub
or
cmpl
mov
add
aam
dec
pop
sbb
jp
pop
loope
sbb
add
and
push
jle
sub
xor
mov
fwait
test
scas
ret
pop
fidivrl
into
fs
inc
cmpsb
imul
in
stos
outsl
dec
inc
inc
subb
mov
int
xor
insb
shr
aam
mov
mov
cld
xor
and
jne
push
ds
in
xor
pushl
pusha
pop
cld
ret
stos
mull
lock
les
push
mov
xchg
sti
add
fnsave
scas
sbb
es
mov
imul
dec
lcall
mov
lods
icebp
pusha
testb
mov
jo
scas
xchg
mov
testb
jns
push
inc
or
std
inc
and
push
scas
jmp
sahf
clc
pusha
adc
pusha
dec
stc
or
addr16
fidivl
mov
insl
add
dec
pop
call
mov
jb
ffree
xchg
mov
ds
cmc
lds
and
repnz
adc
cs
loopne
mov
ljmp
xchg
sub
push
dec
pop
dec
pop
ds
movsb
lds
ret
je
sbb
or
adc
clc
push
push
jg
mov
dec
dec
bswap
jne
int
rorb
dec
into
ljmp
shll
lds
xchg
shl
lret
sub
ficoml
mov
push
push
fsubl
or
fiaddl
sub
std
fwait
call
pop
xchg
mov
jmp
sub
and
inc
pop
inc
and
xor
mov
mov
push
pop
jne
jge
xchg
daa
sub
cmp
jl
add
imul
or
add
popa
sub
push
mov
or
pop
xor
sahf
pop
dec
loop
std
mov
test
inc
mov
jnp
aam
xchg
adc
pop
cmp
mov
dec
hlt
pop
push
adc
mov
inc
and
cmp
dec
fbld
sub
clc
xchg
xor
mov
dec
cmp
cmp
xor
aad
ljmp
clc
repnz
cwtl
jg
sahf
aam
sti
mov
test
fcoms
sbbl
cld
in
or
jnp
xchg
in
sbb
xchg
or
stos
mov
sbb
xchg
stc
outsb
and
xor
dec
testl
mov
loope
mov
xor
or
fisubrs
insb
inc
mov
loop
sbb
movsb
repnz
int
adc
xchg
add
mov
push
mov
clc
out
mov
out
lods
add
cmp
mov
dec
and
push
cwtl
out
xchg
xor
nop
jl
fnstcw
rcl
jbe
mov
or
in
aad
fsubrl
ds
mov
pushf
mov
xor
mov
push
ljmp
dec
rcrl
hlt
movsl
xor
inc
inc
cltd
adc
pop
push
mov
add
cmp
xchg
xor
sti
ds
jmp
sub
pop
pop
jb
repnz
xor
into
and
fmuls
std
fiadds
sub
nop
fdivs
lret
nop
push
movsb
int
jne
sub
add
push
inc
decb
push
imul
sbb
xor
jge
rcr
stos
mov
nop
daa
sub
leave
push
ror
scas
inc
mov
js
pop
and
icebp
ds
cltd
repnz
aam
xchg
in
test
ds
test
dec
mov
lret
sub
adc
adc
lds
cs
xchg
out
faddl
add
sub
negl
decl
cmpsl
dec
and
cmc
and
xchg
sahf
mov
sahf
adc
shll
cmpsl
push
out
mov
jge
imul
pop
fiadds
ret
sarb
in
mov
aas
jbe
fdivs
push
or
push
loop
nop
js
insb
inc
cwtl
sbb
insl
cmpl
push
lock
adc
and
outsl
push
ljmp
call
xchg
int3
lods
andl
popf
imul
popl
mov
loope
lods
les
sub
outsl
push
inc
pop
jae
aam
scas
push
pop
in
xchg
setle
lods
xor
add
jae
mov
shlb
add
add
jecxz
sub
mov
sbb
and
outsl
cltd
outsb
and
xchg
xchg
jno
ficompl
int3
xchg
in
add
cltd
scas
outsl
mov
mov
aaa
rcl
pop
mov
jl
xor
push
mov
xor
mov
and
aad
imul
in
mov
dec
in
jmp
mov
jl
cmpsl
cmp
xchg
mov
adc
fsubrp
or
xor
out
imul
mov
lods
outsb
daa
ja
cmp
imul
call
push
test
cmp
xchg
sub
stos
lock
jp
cmp
stos
loope
fsubl
pop
loop
ja
bound
xor
fs
sbb
dec
xchg
push
movsl
loope
lods
fsubrs
rcll
shlb
dec
push
mov
call
aam
imul
mov
popa
icebp
js
jge
pushf
mov
ret
mov
ja
out
xor
sub
loopne
into
and
insb
or
xor
mov
or
hlt
incl
mov
sti
sarl
xor
or
and
adc
mov
hlt
pushf
les
shll
dec
sti
shlb
or
gs
jmp
shlb
outsl
push
inc
push
popa
inc
fcoml
or
fisubrs
ror
dec
in
inc
mov
loope
clc
repz
fs
push
and
hlt
xchg
flds
int3
cltd
in
test
push
or
ficompl
adc
aas
push
mov
mov
sub
mov
ds
pop
jne
cmpsl
fisubs
inc
fdivrs
push
jmp
jbe
aam
fisubs
test
push
sub
loopne
mov
pop
ss
movsl
add
jg
jb
adc
mov
insb
sub
test
out
test
cmp
test
popa
shrb
mov
iret
mov
test
jae
push
xor
mov
sub
mov
repz
xor
sub
mov
fsubrs
stos
xor
sbb
cs
adc
mov
xchg
mull
test
xchg
and
js
xchg
add
lea
insb
negl
in
mov
fwait
xor
xchg
mov
jle
sarl
out
pop
movsl
sub
mov
sub
fnsave
rolb
lcall
and
call
cs
push
xchg
lods
xchg
sbb
or
push
cmp
je
fisttpl
mov
stos
fadds
shlb
adc
in
pop
int3
push
repz
mov
in
movsb
repz
ficomps
fwait
sti
rcll
rcrb
fists
fidivs
je
iret
gs
adc
in
inc
or
int3
pop
repnz
inc
out
push
mov
add
xchg
lea
cwtl
xchg
bound
popf
mov
mov
aad
sbb
lcall
popl
sub
clc
adc
xor
lods
or
inc
pop
inc
popf
sbb
icebp
jmp
mov
cmp
push
das
push
cwtl
cs
mov
add
mov
dec
jecxz
cltd
pop
das
inc
cli
inc
mov
in
adc
inc
sbb
mov
xchg
sarl
mov
pop
push
cmpsb
test
pop
testb
sbb
lret
inc
jp
jne
mov
xlat
insl
repnz
out
test
xchg
fidivs
pusha
lret
xor
pop
ss
addr16
jecxz
mov
adc
dec
cmp
and
add
jl
xor
pop
stc
pop
jno
fadds
loopne
adc
or
xchg
jge
mov
push
popf
dec
or
xchg
lds
iret
dec
add
aad
mov
mov
imul
fs
ja
ret
sbb
ret
dec
pusha
push
lcall
mulb
shl
loopne
icebp
adc
xchg
mov
cmp
mov
fmuls
ljmp
mov
mov
xchg
jp
cmp
push
mov
adc
xchg
sbb
ljmp
js
or
fistl
cli
xor
popf
movsl
sub
movsl
lret
cmc
add
pop
inc
xchg
push
test
out
movsb
xchg
mov
sub
cmc
jmp
icebp
mov
jbe
lock
mov
ja
lds
leave
std
xor
cmp
cmp
jl
pushf
jo
pop
xchg
xchg
cltd
rolb
mov
je
stos
lods
mov
outsb
mov
gs
rol
fbstp
rcrl
xchg
adc
push
into
sbb
ret
nop
xor
addr16
out
imul
icebp
in
fsubl
xchg
cmp
xor
icebp
cmp
and
aam
mov
in
pop
out
push
cmp
mov
cmp
scas
jb
out
fwait
cltd
adc
or
and
divb
cmpsb
fwait
sub
movsl
push
cmp
stc
in
push
xor
adc
data16
sbb
sahf
xorl
inc
pop
lahf
cmpsb
hlt
sbb
lcall
insb
mov
stc
loopne
or
scas
mov
frstor
dec
iret
and
ds
lock
call
in
das
push
fwait
popa
je
cmpsl
loopne
mov
pop
lret
sti
das
dec
popa
orl
fidivrs
popa
stos
sbb
repnz
mov
sbb
lahf
lods
xor
cli
mov
cld
push
lds
ja
pop
ljmp
sub
inc
scas
cwtl
in
mov
pop
jl
xchg
ret
nopl
aaa
stc
mov
shlb
xchg
dec
pop
inc
nop
dec
pop
push
mov
insb
mov
scas
sub
daa
push
dec
aad
mov
mov
jp
and
ss
icebp
sbb
aam
or
and
imul
iret
add
stc
sub
inc
daa
lahf
push
push
sub
push
add
pusha
lcall
jge
xchg
hlt
ss
lds
mov
pop
pop
sub
mov
arpl
mov
mov
lods
cld
in
mov
xor
jp
xor
jns
fnstenv
testl
xchg
loope
sbbl
adc
mov
jle
mulb
or
nop
xor
pop
xor
pop
jge
mov
fdivl
jp
jnp
in
or
lret
mov
es
test
cwtl
pop
cs
pop
push
or
pop
mov
sarb
lret
sbb
xchg
push
xor
inc
push
dec
scas
out
jl
mov
xor
in
xchg
push
lahf
push
add
sbbl
ljmp
lods
cwtl
pop
scas
iret
mov
xor
mov
mov
outsb
or
idivb
cli
xor
movsb
cmp
mov
faddl
leave
mov
jne
popa
enter
mov
mov
orl
pop
shr
outsb
xchg
bound
cmc
loope
push
add
insb
sub
xchg
inc
mov
imul
push
xor
adc
push
dec
xlat
xchg
sub
push
push
jbe
pop
loope
dec
sbb
js
inc
xor
push
sbb
sahf
std
dec
dec
add
adc
lods
scas
cmpsb
cmp
stc
add
sub
sbb
push
sahf
jno
adc
sbb
inc
fsubrl
cld
cld
mov
sub
xchg
cmp
out
xchg
andl
addr16
imul
mov
es
jb
icebp
mov
test
push
mov
test
gs
ret
push
mov
dec
and
and
lods
shlb
push
mov
pop
loop
mov
or
outsb
shl
mov
daa
mov
sbb
cmc
dec
shll
aad
insb
jge
jp
mov
data16
jp
pop
cmp
jns
adcb
xchg
je
movsb
test
cmp
inc
jle
jbe
xor
xor
push
cmpb
mov
mov
mov
sub
ljmp
addr16
fiaddl
jne
cmp
cmp
pop
hlt
mov
inc
test
mov
mov
pop
xchg
adc
and
outsb
push
addr16
jb
add
mov
xchg
jp
push
jae
jae
sbb
loope
fdivl
inc
lret
pop
adc
and
add
push
inc
stos
ret
jmp
int3
sbb
cld
nop
add
iret
push
sub
sahf
jno
sbb
test
xchg
int3
fs
popf
into
das
iret
jg
mov
mov
mov
in
mov
hlt
ds
xchg
aaa
xorb
gs
jmp
cmpb
adc
aam
pusha
xchg
add
xor
out
sub
and
cmp
pop
lods
outsb
dec
mov
stos
ficoml
aad
cmp
cmp
int
pop
outsl
xchg
inc
pushl
stos
scas
ss
pop
adc
push
pop
negb
loope
xchg
add
sub
cmp
dec
adc
fistpl
int3
xor
pop
fsubrs
xchg
add
loope
aam
mov
je
jle
arpl
outsl
sbb
cwtl
xor
pop
mov
push
jmp
rol
or
shrl
cmpsl
loop
push
clc
add
lret
arpl
sub
into
andl
lret
cld
imul
adc
ret
aam
dec
add
inc
aaa
jno
ret
shlb
rcrl
ja
cmp
inc
in
inc
sub
xor
sub
inc
cltd
adc
imul
stc
popf
in
data16
loope
and
lods
outsl
lcall
gs
ljmp
add
jge
lret
cmpsl
aam
fdivl
inc
ficoml
adc
outsb
inc
fdivs
repz
inc
fistpl
stc
and
nop
mov
inc
or
fwait
sbb
jne
popf
xchg
and
sbb
lret
add
add
or
pushf
push
pop
or
dec
or
add
fcoms
mov
cmovp
lret
or
mov
xor
or
pushf
mov
movsl
adc
popl
vmwrite
jl
add
cmp
repnz
sbb
xchg
in
mov
sbb
xchg
mov
orb
test
daa
pop
insb
jle
xchg
shl
fdivl
outsb
adc
push
push
in
and
test
xor
cwtl
or
js
push
in
imul
test
jecxz
or
xor
loop
lret
jle
call
fcoml
cmp
pop
mov
cmp
adc
push
inc
lahf
or
sbb
shrb
cmp
push
arpl
xchg
push
imulb
sub
or
test
lea
mov
pop
sarl
fisubrs
push
fdivl
je
mov
push
add
push
outsl
imul
mov
lcall
and
rorb
add
dec
lock
mov
repnz
push
adc
cs
push
or
mov
add
pop
outsl
movsl
adc
sbb
mov
push
les
jmp
fnstsw
pop
mov
test
fcmove
lcall
and
int
out
sbb
xor
shrb
mov
push
mov
addr16
jle
push
mov
ss
inc
cwtl
ljmp
and
dec
test
or
rorb
inc
test
ret
and
sbb
test
aam
xchg
leave
adcb
sahf
add
fwait
jne
xor
decl
loopne
push
cmp
cld
clc
and
push
or
push
mov
out
rcr
bnd
cmp
faddl
mov
int
lods
aas
shrb
inc
arpl
sub
jnp
roll
jno
test
pop
stos
lret
cmp
or
mov
xor
sarb
lahf
ss
pop
jle
rcrb
lahf
in
dec
in
push
push
out
rclb
mov
jb
push
aad
mov
or
mov
xor
sub
dec
pop
andb
movsb
dec
mov
cmp
push
ret
jle
scas
jns
divb
jns
jns
mov
add
fstl
cli
or
fdiv
push
sub
shrl
scas
in
jns
push
imul
dec
xor
xor
pop
lea
xor
pop
and
test
inc
inc
lods
decl
mov
clc
adc
dec
jae
or
sub
cld
outsl
add
in
inc
aaa
jne
sub
jmp
xor
mov
sub
mov
jnp
or
movsb
mov
or
and
xchg
mov
cmc
fdivl
fucomp
dec
sub
test
mulb
insb
mov
pusha
pop
lret
fisttpll
lret
and
add
mov
dec
in
adc
and
jnp
add
pop
mov
mov
mov
bound
dec
adc
mov
js
test
sahf
clc
test
push
shlb
push
push
or
push
pop
out
jmp
imul
imul
cmp
incb
xchg
sub
int
subl
pushf
inc
jb
jae
push
pop
push
xchg
push
ljmp
inc
dec
dec
sub
add
xchg
push
jmp
fldt
sbb
push
bound
iret
inc
inc
imul
das
imul
stos
dec
out
sahf
or
lcall
in
pop
shr
mov
arpl
pop
inc
into
insl
in
sub
out
fbld
jge
out
add
jns
test
push
lods
lods
in
stos
gs
call
sub
and
ficoms
cmpsl
fildl
aaa
xchg
shr
cli
sub
lret
das
cmp
mov
roll
pusha
and
pop
jo
pushf
imul
arpl
aam
clc
aaa
jecxz
movsl
ja
mov
sahf
cmp
outsl
iret
in
pop
jmp
sbb
test
push
fldcw
mov
into
das
cmpsl
pop
xor
decl
push
cmp
stos
cmc
jnp
mov
ret
lcall
push
push
sub
pop
mov
push
and
mov
ficompl
fstpl
test
fdivr
fisubs
outsb
incl
stos
mov
adc
mov
pop
mov
out
or
daa
test
out
mov
xchg
fwait
mov
inc
mov
sbb
popa
scas
push
jmp
outsb
sbb
xor
pop
mov
push
fnsave
gs
xchg
sub
xchg
sahf
movsl
subb
xchg
das
stos
loope
sbb
adc
sbb
mov
pop
clc
and
pop
push
cli
out
jge
and
into
fimuls
ja
hlt
xchg
dec
sub
nop
jno
mov
sbb
jne
test
push
imull
int3
in
repnz
outsb
cmc
xor
xor
cmp
mov
mov
mov
popa
fdivrs
rolb
push
mov
ja
mov
fildl
sbbl
imulb
pop
test
bound
cmp
adc
push
das
mov
leave
sbbb
and
jg
call
mov
jg
push
push
inc
mov
mov
cmp
leave
call
mov
sub
sbb
imull
adc
nop
add
and
jae
jecxz
mov
inc
int3
sbb
mov
nop
es
pop
lret
jo
sbb
add
icebp
xor
mov
jnp
add
loop
es
jmp
sbb
loope
outsb
adc
lahf
stos
xchg
push
pusha
dec
fidivrl
cmp
add
rcll
mov
pop
cmp
push
and
add
add
leave
repnz
add
mov
inc
enter
sub
loop
lret
sbb
popf
xor
adc
mov
lret
mov
push
sub
bound
sub
cmp
cld
psubusw
mov
push
push
inc
lcall
adc
xor
faddl
inc
mov
add
lret
xchg
push
imul
repnz
imul
gs
jo
xor
pop
insb
test
mov
jbe
fsubr
clc
stos
adc
fcmovnu
andb
out
scas
add
ret
stos
imull
mov
call
lahf
lea
sub
shlb
add
push
mov
fwait
push
shlb
es
push
inc
fldcw
fiaddl
or
mov
add
js
repnz
mov
cld
sbbb
cmpsl
mov
or
add
mov
push
dec
and
aaa
cmp
or
sti
push
sbb
xor
xchg
mov
xor
sub
loopne
int
push
cwtl
dec
mov
jns
xchg
scas
mov
sbb
aaa
xchg
xchg
stos
stc
dec
push
mov
js
ds
push
dec
inc
arpl
and
imul
push
push
push
mov
in
in
lret
mov
adc
std
jo
or
pop
sub
das
push
nop
mov
jnp
jo
sub
mov
testb
iret
pushf
movsb
mov
cmpsl
jmp
fisubs
scas
mov
jmp
xor
xchg
aaa
mov
cmp
clc
cmp
jmp
push
lods
jo
fidivs
ljmp
inc
lret
shrl
call
rcr
jno
roll
mov
ja
fwait
es
rol
ds
aaa
cmp
xchg
insb
in
mov
push
int
je
fcoml
lret
fldcw
xor
or
push
push
pop
xchg
ja
mov
cmc
aaa
das
xor
add
cmp
fiadds
cmp
ja
pop
mov
data16
xchg
dec
or
les
push
xchg
mov
push
dec
mov
mov
cmc
fcomps
outsb
adcb
jmp
addr16
leave
xor
xor
push
ficoml
push
cs
jae
jne
std
test
pop
std
sbb
jmp
out
fs
jge
jmp
and
scas
cmp
nop
xchg
mov
icebp
and
divb
icebp
or
mov
out
sbb
les
push
or
cmp
lock
pushf
arpl
bound
scas
mov
mov
aam
pusha
add
lods
pop
and
add
or
xchg
icebp
dec
scas
inc
in
pusha
cmp
call
std
pop
jae
pop
shlb
stos
aad
inc
adc
cmp
gs
sbb
pop
loope
testb
ss
dec
push
ljmp
jb
dec
bnd
mov
nop
mov
add
notb
aad
nop
imul
idiv
xchg
dec
pop
mov
mov
dec
mov
mov
cs
into
sub
imul
mov
shll
insb
jo
outsb
mov
pop
shll
xor
cmpsb
cmpsl
mov
enter
xchg
hlt
rclb
jg
sbb
xchg
shrl
and
and
repnz
adc
bound
and
xchg
pop
adc
push
mov
jbe
cld
ds
scas
add
or
sahf
jb
cld
adc
dec
rcr
mov
inc
adc
cmp
hlt
outsb
sub
or
push
push
cmp
sub
cmp
sub
scas
xchg
adc
sbb
dec
adc
cmp
in
adc
ret
xchg
iret
push
in
mov
shlb
mov
and
mov
mov
lock
mov
and
insl
cmpb
arpl
cmpsb
lds
jne
gs
mov
cmp
adc
out
add
mov
and
std
lcall
adc
sti
adc
out
sub
insl
cmp
or
pop
cmp
call
dec
jmp
pop
iret
icebp
cmpsb
and
loopne
push
in
mov
mov
pop
add
add
out
pop
sbb
ja
js
mov
out
fbstp
or
cwtl
das
sahf
jno
test
cmp
fcomps
aas
imul
cmp
sub
cmpsl
scas
call
outsb
sahf
ja
pop
pop
cmc
mov
pushf
mov
lods
jl
test
rcrb
dec
stc
inc
push
adc
sbb
sub
mov
mov
pop
mov
dec
aam
rorb
push
jo
jp
pop
sub
mov
sub
gs
in
cmp
push
sub
jle
push
stos
push
cmp
mov
fbstp
mov
iret
cmpsb
cmp
fwait
add
push
sbbb
mov
loop
movsl
loopne
out
stos
addb
jae
adc
mov
movsl
jp
jno
mov
adc
cli
cmp
outsb
sub
and
imul
into
sti
cmp
fistpl
mov
adc
lret
int3
loop
sub
int
pop
xchg
mov
add
fwait
cmpsl
out
cmp
pop
xor
dec
cwtl
les
and
xor
lret
jg
movsb
in
mov
jnp
cmp
or
mov
mov
dec
and
cltd
jecxz
inc
gs
cltd
adc
ret
cmp
adc
xor
test
mov
sbb
push
lds
mov
lahf
insl
subl
sahf
sti
fwait
iret
jecxz
fistpll
xor
xlat
jb
add
jbe
sahf
inc
and
or
adc
xchg
xor
cmp
arpl
jo
mov
bnd
lcall
ret
movsb
imul
bound
lea
sub
stc
dec
sti
inc
cltd
or
push
dec
fcoms
cmp
loop
out
push
addb
mov
lods
mov
cwtl
clc
xchg
mov
mov
stos
les
xor
cmp
pop
add
or
subl
inc
cmp
imul
lock
dec
fcoms
pop
ja
jecxz
push
adc
pusha
sbb
mov
test
mov
cld
lcall
in
ret
ss
jbe
mov
mov
movsb
aam
sbb
xchg
icebp
insl
jge
mov
cli
sbb
inc
pusha
shll
lods
xor
pop
lds
test
push
ficoms
test
data16
pop
sbb
mov
insb
cmpsl
mull
lea
or
mov
scas
inc
push
in
rorl
sub
imul
in
outsb
std
and
imulb
or
mov
add
push
in
mov
push
or
stos
and
mov
outsb
loop
int3
pop
mov
fmuls
aam
mov
jge
pop
negb
jae
out
fs
inc
lcall
and
jge
insl
test
sub
in
inc
imul
cmpsb
xor
loop
xchg
xchg
test
and
mov
or
and
push
js
sub
pop
dec
xchg
sub
aaa
sarb
call
mov
lcall
lcall
xchg
pop
mov
xchg
subl
sbb
xchg
mov
jo
popa
sub
push
decl
fisubs
cmp
repnz
cmp
fldenv
sub
pop
xor
rol
adc
adc
loope
push
fucomp
pop
xor
enter
imul
push
cmc
decb
daa
leave
adc
repz
test
imul
xchg
pushf
xchg
ss
cmpl
fmul
rorb
daa
inc
xchg
cmpsl
popf
addr16
lret
rolb
mov
jmp
popa
xchg
call
and
sbb
jg
and
mov
scas
sbb
dec
stc
call
or
mov
jno
xchg
lret
ret
cmp
add
or
out
js
subl
or
xor
xor
jbe
js
sahf
out
rcl
add
add
or
push
out
outsl
and
cmp
mov
dec
in
jb
aaa
cmp
aas
cmp
in
ficoml
andb
pop
sub
jecxz
inc
enter
mov
and
cs
mov
sub
out
popa
sti
shrb
xchg
lods
mov
jmp
loopne
lods
pushf
cmp
mov
mov
shlb
mov
imul
mov
mov
aad
inc
iret
dec
mov
and
mov
xor
ja
in
mov
out
add
stos
xchg
lea
cmc
nop
packsswb
push
icebp
leave
mov
cmp
sti
or
lods
mov
stos
mov
sub
or
cmp
jbe
rorl
add
push
cld
lcall
jne
add
pusha
aaa
ss
insb
adc
jnp
jecxz
jbe
xchg
pop
push
pusha
xchg
add
outsb
adc
mov
sahf
clc
xchg
or
adc
sub
loop
popa
repz
xor
adc
inc
mov
fstpt
mov
add
add
test
test
or
mov
xchg
andl
ror
mov
std
nop
rcll
mov
shlb
dec
inc
dec
jl
in
loopne
repnz
gs
or
lret
addr16
in
xor
imul
jecxz
ret
icebp
push
pop
scas
push
lods
xor
pop
push
jne
xchg
cmp
in
jns
adc
out
or
inc
movsl
js
jae
orb
xchg
add
sti
inc
lcall
inc
loopne
inc
aam
lock
int3
and
imul
jmp
imul
pop
subl
imul
clc
scas
adc
jle
divb
daa
test
imul
xor
clc
jmp
lret
jg
adc
mov
stos
imul
addr16
jnp
in
mulb
adc
inc
out
xchg
mov
loopne
gs
jmp
and
fcmovbe
cmpsl
mull
pop
lods
fmulp
push
inc
push
fsubrs
faddl
lret
pop
icebp
add
xor
arpl
js
cmp
roll
mov
or
inc
adc
xchg
arpl
inc
test
pop
mov
nop
pop
outsb
mov
inc
lock
cli
call
daa
outsl
bound
add
outsl
mov
add
movzwl
lret
and
test
or
call
cld
enter
cmp
xchg
pop
and
pop
icebp
pop
mov
enter
jge
into
outsb
pushf
xor
loop
cmc
pop
subb
fwait
lods
mov
mov
or
pop
in
out
mov
sub
dec
sub
stos
pop
jle
mov
cmp
xor
xor
xchg
or
jg
push
test
fcoms
rcrl
mov
xor
lods
mov
into
cld
xchg
push
and
hlt
bound
mov
imul
adc
in
sarl
xchg
push
cwtl
and
mov
pop
es
mov
icebp
jnp
push
inc
fdivl
xchg
fchs
arpl
cmpsb
and
mov
pusha
aad
push
pop
sbb
mov
mov
movsb
cltd
jecxz
out
or
insb
mov
iret
test
mov
mov
fcmovnb
aad
push
pop
add
ret
cs
pop
pop
ljmp
mov
data16
push
in
bound
out
xchg
sub
fadds
push
jecxz
in
sub
in
jl
xchg
xchg
pop
stc
or
nop
rclb
add
push
inc
inc
cmp
lea
aam
sbb
into
mov
ret
lahf
adc
push
pop
stos
test
push
cs
jecxz
push
xlat
dec
pop
out
mov
xchg
les
mov
sub
dec
inc
fdivrs
push
mov
imul
mov
pop
cmpb
push
jge
subl
add
stc
addl
and
dec
jbe
or
mov
outsb
lret
pop
xchg
sbb
mov
cld
cmp
mov
in
fcmovu
dec
movsb
jge
lret
addb
xlat
shll
mov
fsubrs
cltd
cltd
cli
fwait
push
bnd
roll
adc
andl
jae
jo
add
xor
or
and
inc
pusha
jo
sub
mov
orl
or
and
jno
push
loop
testl
mov
iret
bound
mov
sti
mov
int3
mov
iret
aad
push
mov
repnz
enter
jg
imulb
mov
jg
or
mov
sbb
lods
imul
push
scas
imul
popf
mov
pop
pop
xor
ljmp
notl
fstps
adc
jle
xchg
cmc
ficoms
ss
int
stc
into
jne
test
cmpsb
xor
xchg
and
pop
mov
xchg
out
out
mov
mov
xchg
popf
hlt
inc
leave
aam
aad
pop
dec
push
testb
mov
add
inc
push
pop
mov
roll
sub
cmp
add
int
movsl
push
aaa
arpl
movsb
mov
mov
test
inc
popf
sbb
call
sahf
mov
xlat
movsl
sbb
fwait
and
nop
push
and
es
icebp
cmpsb
fisttpl
packsswb
lods
push
push
stos
sbb
dec
pop
iret
adc
adc
pop
xchg
xchg
or
dec
mov
stc
cmp
aaa
push
push
movsl
ja
leave
mov
stos
jmp
push
sbb
or
btc
jmp
mov
faddp
cmp
dec
ss
nop
push
fcomps
xchg
ret
cmc
and
lea
xor
imul
mov
inc
js
mov
mov
pushf
push
xchg
mov
jbe
aad
and
cmc
repnz
out
addb
sub
in
pop
push
push
pop
cli
xor
movsb
aaa
fstpt
inc
dec
in
xchg
mov
mov
and
fcmovu
fwait
sbb
aaa
fnstcw
sub
cmp
pop
mov
sbb
inc
test
ret
ret
mov
sub
imul
movsb
lods
stc
pusha
mov
cwtl
xor
fcmovnu
mov
cmp
mov
push
sbb
fidivl
lea
push
data16
iret
mov
fildl
mov
movsl
sbb
xchg
icebp
scas
mov
fsubrs
and
xchg
call
lods
out
sbb
pop
or
and
test
mov
sub
push
test
ret
stc
imul
shr
imul
aas
push
sub
adc
gs
icebp
xchg
ret
aas
xor
test
push
ret
cld
jbe
add
fldl2t
loope
adc
mov
push
and
icebp
jg
stc
adc
movsl
sbb
xor
push
jno
rolb
mov
sbb
repz
sbb
out
mull
leave
adc
and
in
adc
sub
mov
or
arpl
pop
jb
push
adc
mov
fcoml
mov
mov
imul
cmp
jle
ret
pushf
lds
sbb
sub
imulb
shl
das
or
stos
aam
ja
sbb
andb
mov
imul
das
add
adcb
dec
pop
outsl
jne
add
cmp
loope
ljmp
cli
inc
insl
add
dec
xchg
mov
add
pop
mov
sbb
les
xor
in
sub
addr16
shlb
testb
fdivrs
aad
fiadds
jb
push
mov
movsl
test
mov
add
push
mov
sub
xchg
inc
lret
cli
popa
insl
mov
dec
aad
jnp
inc
sbbl
jne
adc
std
xchg
jne
enter
adc
xchg
inc
call
xor
rcrb
imul
ljmp
jnp
out
shlb
mov
add
lds
divl
inc
into
orl
cmp
adc
pop
repnz
mov
cltd
mov
lret
xlat
adc
sbb
xor
jg
rorl
adc
dec
data16
jge
sbb
jo
xchg
jp
fisubs
loop
jne
movb
dec
bound
bound
mov
push
adc
xchg
sub
enter
push
lret
cmpsl
push
fisttpl
pop
lahf
lock
xlat
divb
jge
nop
pop
in
add
cld
push
mov
lahf
mov
js
sbb
cmp
mov
sahf
test
mov
mov
sub
and
cmc
sub
dec
test
mov
push
outsb
add
frstor
mov
repz
push
repz
sahf
ja
adc
dec
or
pushf
mov
outsb
in
shrl
cs
add
mov
fnstenv
cmp
scas
mov
jl
mov
add
hlt
fnsave
call
inc
xor
insl
add
adc
pop
lds
aam
test
out
das
pushf
mov
dec
out
add
rcl
rclb
push
orb
xchg
mov
dec
inc
dec
lret
repnz
push
cmp
and
fs
popa
and
mov
dec
fbld
mov
dec
and
les
cmpsb
inc
dec
movsl
cld
dec
loop
cwtl
fsubr
xchg
or
mov
mov
shlb
mov
pop
push
push
mov
stc
adc
sbb
lock
mov
movsl
cmp
mov
shrl
sbb
adc
rcrb
sub
jb
lods
mov
pop
push
sbb
loop
adc
sahf
or
test
jge
fiadds
or
mov
stos
xchg
cmp
nop
dec
shll
imul
pand
push
xchg
cltd
icebp
cmp
add
ds
mov
cmpsl
xchg
insb
pusha
arpl
cmp
mov
std
and
cmp
mov
imul
addr16
das
fld
loopne
aam
arpl
stc
cmp
and
adc
lcall
jecxz
aad
push
lret
mov
mov
add
fildl
mov
shll
outsb
aam
out
or
cmc
mov
push
stc
sub
mov
pop
test
adc
push
ret
mov
mov
cmp
xchg
dec
loope
int3
sub
mov
add
adc
lods
imul
stc
jl
negb
sbb
jmp
and
inc
dec
arpl
push
out
lret
addr16
sahf
insl
sarl
movsl
mov
mov
divl
cmp
sbb
add
imul
aaa
sub
cli
ret
fildll
and
sub
xor
jne
jge
pop
fsub
daa
lods
sbb
into
jae
cmpb
stos
mov
inc
sbb
test
adc
ficoml
mov
fwait
cmpsl
mov
inc
rcrb
dec
lds
push
xor
loope
stc
jb
scas
lods
mov
leave
test
popf
sbbl
ds
sbb
fwait
push
test
mov
and
pop
push
in
pop
repz
push
addr16
mov
xchg
and
push
xchg
dec
sbb
movsb
jno
or
sub
mov
outsl
es
stc
push
mov
jecxz
fiadds
push
mov
cltd
imul
orl
jecxz
or
mov
push
mov
add
in
neg
jae
xor
dec
lock
jo
rorl
icebp
test
inc
push
add
sub
inc
pushf
mov
test
mov
add
sbb
jnp
jmp
ret
pop
mov
dec
lret
int3
fistpl
inc
gs
add
in
popa
stos
xchg
popa
xchg
pusha
ds
ds
sub
mov
bt
dec
mov
xchg
cmc
xor
xchg
ds
in
add
xor
loop
sub
cmpsb
shrl
xor
sub
pop
popf
movsl
mov
fisubs
dec
and
sbb
inc
shrb
scas
insl
xor
sbb
mov
xor
out
add
fs
orl
inc
or
push
ljmp
daa
dec
mov
mov
push
cmpsb
mov
jl
mov
ss
pop
or
xor
xchg
insl
stos
cli
imul
inc
insl
inc
scas
rorl
adc
mov
xchg
sub
rolb
mov
and
cli
aam
jmp
xorl
xor
or
dec
adc
push
in
mov
pop
adc
insb
rclb
sbb
or
outsb
hlt
sarb
cmp
dec
bound
imul
jno
shlb
daa
je
add
and
push
xor
int3
movsl
jle
cli
mov
pop
js,pn
clc
lcall
sub
cmp
cmc
arpl
xchg
mov
cmp
fistpll
aad
imul
jno
addr16
cltd
mov
dec
sub
jo
mov
sbb
lds
adcl
or
test
jle
in
test
push
xchg
sub
dec
rep
inc
mov
pop
aaa
aad
adc
insl
jge
or
mov
mov
add
mov
fsubl
mov
mov
daa
sub
filds
into
jbe
mov
aam
jp
test
adc
sub
mov
inc
gs
call
cmc
inc
outsl
push
jne
push
sub
sti
cli
xchg
fcomip
fisttpl
scas
sbb
ljmp
xchg
mov
lock
or
nop
xor
dec
xchg
cmp
enter
sti
hlt
sub
sbb
dec
loop
mov
cltd
popa
imul
mov
xchg
stos
test
add
pop
out
mov
jnp
rcr
push
loop
dec
js
ljmp
jno
test
cmp
movsl
mov
adc
cli
or
xor
cwtl
xchg
inc
xorl
scas
inc
lods
subl
ja
shrl
or
outsb
dec
dec
scas
mov
ret
adc
test
sub
mov
push
les
add
clc
push
lahf
xor
adc
iret
js
pop
repz
lock
jno
arpl
xchg
into
pop
out
cmpl
push
jns
jbe
push
gs
rorb
das
imul
pop
movb
imul
imul
push
cmp
enter
inc
lret
mov
mov
fsts
dec
jo
or
inc
mov
xchg
mov
lds
popf
sub
pop
xchg
sbb
dec
sub
mov
lods
push
call
fdivl
jge
add
xor
jmp
sti
in
subl
jge
xchg
pop
dec
insb
xchg
mov
ja
mov
xchg
adc
pop
xchg
dec
xchg
lods
fdivrl
in
js
push
cmp
aad
lret
bound
in
xchg
sbb
lds
push
repz
cwtl
sub
xor
lret
outsb
mov
sahf
loop
inc
loop
mov
mov
repnz
pop
cmpsb
mov
icebp
fisttpl
psubb
cmpsl
mov
data16
jmp
and
rclb
sub
mov
in
or
add
adc
or
addb
mov
pop
scas
lea
jle
fldenv
mov
divl
mov
add
adc
rcl
ss
adc
adc
mov
mov
mov
add
sub
outsl
inc
jp
out
xchg
jp
adc
adc
xchg
sbb
pop
je
mov
dec
or
sub
sbb
xchg
sub
out
arpl
jecxz
sub
adc
fs
aaa
jbe
xorl
mov
outsb
inc
mov
push
cltd
xor
mov
lret
or
ljmp
in
es
rorl
mov
pop
sub
aam
imul
xchg
aaa
daa
loope
dec
mov
pop
mov
and
dec
fcomi
in
mov
clc
adc
jg
repnz
repz
idivl
pop
in
mov
cmp
or
aaa
add
leave
and
subl
push
push
jno
jl
mov
xchg
aad
sub
test
cli
xchg
inc
pop
loope
mov
push
jbe
and
cli
iret
mov
fistps
push
ss
and
fwait
loopne
testl
ljmp
and
aam
dec
xor
fucomp
cmp
icebp
add
and
xchg
lods
xor
daa
hlt
insl
and
inc
ficoml
jge
aaa
bound
lods
jo
sbb
jle
cmc
scas
insl
xchg
scas
insl
fs
mov
cmpsl
imul
popl
mov
jno
fxch
jns
push
mov
mov
xchg
mov
cs
inc
fbstp
loope
iret
xchg
xchg
add
add
push
out
add
sub
jne
push
je
js
ja
inc
test
push
push
in
mov
push
mov
mov
and
in
lret
sub
cmp
mov
pusha
cld
jb
jge
cwtl
out
lret
cwtl
iret
in
jmp
cmp
ss
insb
mov
jno
mov
out
xchg
inc
mov
vpcmpeqb
loopne
pop
pushf
sti
inc
sti
mov
inc
sbb
pop
fwait
xor
fidivrs
adc
pop
fwait
cld
push
inc
mov
popf
pushf
cmpb
lds
push
subl
dec
mov
imul
cmpsl
sarb
popa
addr16
jmp
jl
sbb
cwtl
adc
iret
adc
loope
push
insl
push
push
cmpsl
xchg
into
pop
popf
inc
shll
cmp
arpl
bnd
vmread
xor
pushf
ja
xchg
lods
mov
lock
test
lea
fnstenv
les
sub
jns,pt
or
and
lahf
push
cs
outsl
aas
fsubr
test
xchg
stc
pop
jnp
push
push
in
aaa
xor
leave
inc
xchg
in
stos
movsb
sbb
fmull
pop
dec
mov
jl
xchg
cmp
sub
jge
daa
dec
pop
dec
jle
inc
sub
aaa
pop
psrld
fwait
mov
lea
pop
loop
out
push
stos
inc
mov
dec
mov
mov
and
mov
xor
xchg
mov
out
inc
fxtract
out
dec
mov
cmp
ds
leave
lea
popa
rorb
jns
adc
sub
xor
adc
mov
outsl
je
daa
mov
and
cmp
xchg
jecxz
push
aaa
ja
mov
popf
ds
jp
push
jo
adc
inc
ret
or
shll
ja
rol
sbb
arpl
mov
ret
add
sbb
ds
xor
sbb
cld
pminub
mov
adc
nop
jne
jns
movsb
mov
mov
add
add
dec
shl
sub
and
mov
aad
fists
mov
sbb
add
into
hlt
or
and
inc
cmp
out
mov
jae
fsubl
add
fnstenv
sbb
cmp
add
les
push
aad
call
sub
inc
dec
je
aad
loopne
adc
push
imul
add
mov
inc
popf
nop
daa
iret
fidivs
cmp
std
xorb
dec
popl
ror
sbb
daa
bswap
jge
fists
das
xchg
jns
in
jmp
dec
ret
sarl
data16
xchg
pop
icebp
mov
ret
cli
sbb
mov
xor
and
pop
shlb
outsl
rol
jmp
nop
push
das
mov
push
int3
aam
aam
in
fsubrp
in
inc
dec
push
mov
daa
cmp
cmc
outsl
rcrb
or
add
jmp
iret
lahf
stos
hlt
and
cmp
icebp
loop
cmp
popa
insl
mov
cld
in
ror
pop
lds
fcmove
sbbl
int
dec
and
out
jno
xchg
int
or
in
test
pusha
ja
imul
insb
jmp
jb
pop
sbb
xor
movsl
movsb
lock
and
xor
jo
push
xor
pop
in
lock
idivl
mov
ljmp
jge
aad
add
mov
xchg
adc
shlb
out
mov
pop
ja
loop
xchg
adc
lds
mov
jno
stos
arpl
mov
je
repz
out
mov
inc
testb
inc
push
push
outsl
xchg
hlt
shll
jmp
xchg
xchg
test
inc
cltd
inc
test
or
cmp
pop
out
push
imul
decb
fcoml
and
xor
sub
add
lods
inc
mov
mov
mov
inc
rcr
adc
mov
data16
arpl
add
les
add
jne
movsb
adc
sbb
mov
in
push
xchg
adc
adc
xchg
xor
cmc
mov
fistpll
jecxz
sti
dec
pop
inc
jne
mull
xchg
mov
push
mov
adc
pop
xchg
popa
mov
cld
jno
fs
mov
pusha
movb
popf
cmp
ret
stc
nop
xchg
rcll
in
mov
rcll
mov
mov
push
jge
adc
jo
mov
std
sbb
pusha
dec
fsts
out
lahf
dec
add
jns
movsb
fwait
aas
lea
insb
mov
cmpb
sarb
imul
or
int
inc
popw
sub
ja
jo
out
sbb
pop
xchg
in
jbe
and
addl
jno
and
add
clc
adc
mov
pop
in
jecxz
arpl
sbb
adc
outsb
mov
addl
loopne
ss
mov
mov
stos
int
xchg
inc
stos
and
sub
jae
mov
ffree
es
mov
jbe
dec
push
or
or
and
mov
fldt
ja
incl
sbb
push
rcrb
fcomp
shrl
inc
mov
pop
dec
cmovp
sbb
sti
rolb
sbb
mov
jecxz
and
inc
jmp
jmp
push
fbld
mov
decb
mov
clc
les
mov
loopne
shrb
rcrl
stos
xlat
sbb
insb
dec
fbstp
mov
pop
inc
mov
lret
pop
lret
jae
mov
jnp
dec
push
out
lods
push
aam
pop
icebp
inc
add
aaa
out
cli
stc
aad
jmp
adc
adcl
adc
repnz
cmp
jg
jp
and
xchg
notl
mov
pop
jge
jae
inc
loop
pop
and
fcoml
and
dec
cld
mov
cwtl
movsl
or
repnz
xchg
cmc
jbe
jno
push
cwtl
jl
cwtl
push
and
loope
rcll
inc
stc
mov
push
cltd
outsl
shl
mov
cmp
and
mov
in
lcall
imul
cmp
mov
out
jbe
sbb
mov
xchg
in
pusha
and
xor
inc
sti
adc
stos
imulb
ret
ret
in
test
inc
or
lcall
popa
dec
jge
mov
arpl
ficoms
sbb
or
add
shlb
loopne
stos
fucomip
jl
ret
cmpsb
mov
cltd
mov
sbb
loope
fcoml
outsb
aad
mov
xor
push
out
and
fidivs
cltd
mov
inc
xor
inc
sbb
pop
push
fsubrl
cmpsw
ds
pop
arpl
aaa
cmp
pop
push
cmp
sub
stos
mov
push
ficompl
aad
scas
and
sub
xor
sbb
dec
cmp
xor
inc
xlat
outsb
jbe
mov
in
add
inc
sub
push
stc
nop
lods
fiaddl
loope
sbb
loopne
andl
jle
mov
mov
dec
popa
data16
gs
jne
dec
int3
pop
stc
scas
cmpsb
in
pop
ret
shrl
addr16
sub
and
dec
stos
xor
jle
shr
leave
jmp
push
sub
pop
out
jg
pop
adc
stos
mov
orl
dec
in
pop
aad
push
cwtl
data16
lret
icebp
pop
sub
imul
sbb
fdivl
das
mov
lds
iret
adcl
cmp
mov
add
push
aaa
fistps
subb
imul
add
cmp
or
jns
jl
lahf
mov
popf
xor
ret
sbb
inc
pop
paddd
xchg
jmp
ret
call
jg
fisubrs
mov
aam
mull
dec
inc
push
outsl
or
fsts
mov
xchg
jle
mov
adc
notl
dec
and
roll
es
cltd
xchg
cld
and
xor
push
call
xorb
insl
cmpsl
sub
je
loop
loopew
mov
jl
cmp
call
xor
mov
daa
jle
fidivl
jno
push
mov
insb
movsl
cld
sbb
bndstx
fst
jnp
pop
popf
pop
movsl
mov
mov
and
pushf
rol
into
jecxz
leave
jmp
test
call
cmp
cmp
xor
rcrb
daa
imul
xor
mov
out
jae
inc
jle
testl
jle
rcrb
or
test
fildll
aam
push
add
or
cmp
out
inc
and
mov
adc
loope
lcall
cmp
imul
push
pop
stc
or
js
popa
and
xchg
jae
rep
mov
ss
bound
sahf
lret
mov
rcrl
mov
fwait
ja
dec
xor
xchg
dec
test
adc
cmp
xor
fsubl
mov
or
dec
jno
xchg
outsb
lods
rorb
inc
dec
sub
and
jae
notb
imul
in
sub
jl
add
sbb
pop
xor
sub
mov
into
xor
sub
jle
das
pushf
mov
mov
pop
sbb
in
dec
not
push
cmp
jae
sub
in
sbb
sbb
rol
mov
mov
lret
jmp
ljmp
inc
push
lods
sahf
pop
adc
adc
push
cmp
cmp
jbe
push
or
or
adc
andb
in
push
adc
xor
mov
inc
shll
add
cltd
sub
adc
leave
xchg
sub
leave
xor
cmp
loope
lock
push
cmp
ffree
mov
les
dec
cmp
add
or
into
cmp
lret
stc
lods
mov
stos
addr16
iret
popa
sbb
es
push
xchg
out
test
pop
adc
hlt
pushf
jp
xchg
enter
aas
push
mov
mov
jg
dec
lods
arpl
sbb
sbbb
rcrb
fucom
jnp
cmp
cmp
bound
pop
push
cmp
addl
mov
dec
loope
lret
sti
push
add
imul
xchg
xchg
test
or
rcrl
inc
dec
mov
mov
fisttpll
ljmp
sub
mov
xor
adc
mov
jns
mov
sbb
add
loopne
out
pusha
fidivs
push
xchg
enter
push
out
aam
in
andl
iret
mov
and
cmp
aam
add
int3
inc
or
cmp
lret
add
and
push
xor
xchg
dec
xchg
lds
loop
int
orb
jecxz
sbb
lds
lcall
mov
fisubs
and
clc
and
or
je
mov
aam
les
add
sbb
sbb
jmp
cmp
jae
jle
mov
fwait
lock
xor
xchg
or
adc
xchg
or
subb
dec
pop
popa
lcall
jb
in
push
dec
pop
loopne
fs
fisttpl
jnp
arpl
call
lret
lret
lods
add
lret
lock
pushl
lret
popa
shll
orl
inc
adc
mov
loope
nop
enter
xchg
call
mov
adc
fistpll
dec
js
push
jge
movsl
xor
and
add
fildl
inc
ficoms
lahf
and
push
mov
mov
mull
adc
pop
jl
and
mov
sub
jmp
dec
or
jnp
dec
mov
repnz
mov
jecxz
mov
mov
cmp
jne
jge
or
pop
push
inc
aas
sub
out
lret
mov
dec
xor
lock
pop
mov
pop
es
das
out
inc
fistpl
or
stos
jne
bound
push
mov
jb
pop
and
hlt
stc
andl
inc
pop
mov
movsb
cmp
or
and
es
ror
jns
jge
stc
adc
mull
pop
fwait
mov
xor
mov
lcall
push
enter
cs
mov
sbb
push
jle
inc
stc
dec
xor
fidivs
cmp
and
push
xor
test
push
stc
jns
mov
movsb
outsl
push
xlat
jecxz
lret
mov
push
frstor
inc
cli
mov
dec
lods
jo
lret
fistps
icebp
dec
ret
mov
or
outsl
popa
add
iret
xchg
sub
sub
insl
pop
sub
ss
cli
xlat
xor
xlat
mov
std
xchg
and
adc
call
inc
nop
sahf
jno
push
movsl
mov
call
push
pop
inc
inc
popl
pop
out
push
xchg
gs
rolb
jge
and
sti
sbb
adc
pop
add
outsl
shl
mov
fisubrs
cmp
push
pop
jae
xor
push
jae
inc
sbb
sbbb
dec
adc
ss
push
mov
push
mov
jno
xor
push
xchg
out
mov
jae
ret
ret
xchg
xor
cltd
push
cmp
loop
je
scas
repz
push
not
push
fdivs
icebp
aaa
xchg
scas
std
mov
jnp
popa
lods
cltd
daa
inc
mov
lods
mov
fldl
jo
sbb
pop
imul
mov
popa
addl
dec
adc
add
mov
cwtl
add
cmp
lret
scas
imul
sub
aad
cwtl
jge
or
jle
push
popa
mov
and
jnp
mov
push
cmpsl
mov
mov
rolb
mov
xor
cs
lock
xor
xchg
xor
mov
clc
or
mov
inc
and
iret
data16
js
arpl
js
js
lret
mov
push
sub
sahf
mov
cmpsb
popa
mov
repnz
sbb
fdivs
rcll
ljmp
ret
fisubl
mov
jno
nop
lahf
xor
mov
into
ficoml
mov
cmp
sub
xchg
inc
daa
lcall
lcall
insl
addr16
aam
fdivl
add
adc
or
cltd
std
mov
add
es
or
in
decb
mov
jecxz
cmp
pop
push
pop
mov
pop
cmp
shlb
stos
dec
dec
xchg
dec
and
mov
dec
inc
inc
std
aam
pusha
push
pop
xor
mov
fld
jg
or
cmpsl
push
lods
sbbb
inc
mov
out
popf
and
lret
bound
inc
daa
es
imul
lret
sbb
push
mov
andb
add
mov
lret
mov
out
sahf
ljmp
divb
pop
sub
add
int
lret
enter
pop
fdivrs
imul
inc
aad
cmp
addb
and
fisttpll
fnstsw
loop
dec
and
aam
repnz
and
shll
imul
call
fnstenv
fdivrl
add
ficoml
and
test
mov
mov
inc
cmpsl
pop
push
iret
lret
add
cwtl
dec
mov
repz
or
cmp
jle
iret
fldenv
cmpsl
and
mov
mov
jecxz
adcb
pushf
mov
fs
lods
aaa
mov
mov
sbb
data16
sbb
jne
icebp
fidivrl
mov
sub
mov
mov
test
mov
add
outsb
xor
ja
nop
cmp
mov
dec
fxch
jle
iret
inc
mov
inc
push
sbb
lcall
stc
xchg
dec
xchg
mov
push
aad
fisubrl
xor
inc
lods
pop
xor
push
add
xchg
popf
ja
mov
push
sbb
sub
jle
shrb
adc
push
mov
mov
xlat
out
insl
sbb
jge
in
mov
das
pop
lods
jp
mov
pop
mov
shrl
pop
cmp
cmp
add
dec
or
push
pop
pop
mov
stos
dec
xor
xor
sub
loopne
push
insl
faddl
pop
test
xor
jnp
sbb
sub
fbstp
dec
addr16
es
stc
fnstcw
mov
xchg
inc
imul
xchg
mov
data16
push
es
jae
adcb
sti
xor
cmp
arpl
jne
fisttpl
loop
test
in
out
stos
push
mov
inc
dec
movsb
stos
clc
pop
clc
mov
cli
jecxz
mov
cwtl
cmp
lret
push
outsl
xchg
lea
psraw
mov
or
mov
nop
stos
and
hlt
ja
jmp
arpl
mov
mov
mov
push
mov
jne
mov
mov
jmp
or
sub
mov
mov
dec
jecxz
icebp
out
call
mov
out
or
lods
mov
sahf
imul
inc
shrl
addr16
mov
xchg
jbe
or
aas
outsb
fnsave
sti
mov
cwtl
testl
sahf
push
push
jno
aaa
out
xor
push
inc
inc
mov
jae
loope
adc
sub
rorl
mov
adc
sub
daa
loopne
dec
pop
or
ljmp
into
scas
xchg
jne
test
cmp
pushf
mov
jbe
sti
mov
xchg
fdivs
adc
xchg
imul
push
jl
sbb
or
hlt
and
cltd
loopne
cmpsb
cmp
adc
cmp
sub
lds
lcall
cwtl
ret
mov
dec
cmp
and
stos
xchg
mov
cmp
in
jl
push
icebp
insb
push
sbb
mov
push
ja
xchg
repz
fadds
push
pop
adc
arpl
and
gs
and
loopne
aas
dec
cmp
test
mov
or
fsubl
test
inc
outsb
mov
movsl
js
adc
dec
movsl
mov
xchg
or
sbb
lods
aas
push
test
cmc
pusha
xor
scas
sub
mov
stos
incl
adc
mov
icebp
push
ficoml
or
xor
and
mov
xor
sub
into
fisttpll
inc
inc
add
rcrl
xchg
ret
loopne
and
inc
dec
rcrb
hlt
js
push
cs
sbb
inc
cmp
adc
adc
xchg
sub
lods
in
stos
sbb
cmp
cmp
filds
data16
xchg
into
cmpsl
imul
jge
cltd
daa
fistps
jnp
mov
or
jmp
out
fidivl
test
or
sahf
lods
sbb
adcl
mov
sub
adc
cmpsb
fidivrl
push
adc
cmc
pop
mov
adc
mov
jne
xchg
ljmp
push
add
jmp
loop
xor
inc
lock
mov
mov
xchg
xchg
dec
loop
rorl
int
cld
jae
fcmovbe
lea
add
test
dec
pushf
shl
pop
adc
mov
test
add
sub
in
xchg
test
dec
fstpl
xchg
push
mov
jg
mov
testl
stos
push
test
lods
pop
adc
rcrb
pop
cmpsl
sub
or
mov
jno
xchg
sub
push
out
push
mov
insb
adc
jecxz
mov
gs
insb
pop
mov
daa
xor
pop
fcomi
data16
jl
dec
imul
cmp
lret
loope
mov
stos
cmp
mov
ret
data16
inc
in
xchg
cmp
xchg
shll
ljmp
cltd
aam
xchg
lods
sbb
dec
add
mov
push
fnstcw
rcr
jne
in
fnstsw
push
gs
test
out
fwait
jecxz
and
xchg
scas
inc
scas
les
sbb
adc
xchg
mov
sub
xchg
dec
aas
xchg
data16
fists
test
in
lods
dec
cli
popa
sbb
push
aad
push
jbe
jnp
scas
fistpl
fwait
lcall
sub
mov
int
notb
cmp
inc
jecxz
out
data16
popf
push
sti
icebp
sub
adc
popf
inc
fildll
push
addr16
pop
inc
iret
sub
cmpsb
ficomps
movsb
icebp
mov
jle
cwtl
xchg
mov
pop
icebp
sbbb
cmp
test
fsubr
ret
lret
xor
gs
sub
ja
lret
dec
dec
aaa
repnz
cld
hlt
jb
dec
out
je
call
mov
out
push
rclb
and
int3
jns
adc
popa
xorl
idivl
ja
push
or
dec
cmp
sub
test
stc
jge
adc
movsb
cmp
xor
jmp
in
js
loopne
dec
dec
jmp
rcrb
rolb
inc
movsb
mov
mov
fcmovnb
push
dec
cmc
fidivrl
pop
push
xor
push
cmp
aad
shlb
iret
das
pop
xor
push
rorl
sbb
adc
int
or
inc
enter
in
pop
mov
not
sbb
lods
insl
and
sahf
sub
jno
movb
cmc
call
adc
xchg
fiaddl
mov
sahf
scas
cmp
lods
popa
xor
cwtl
sbb
push
and
sti
xchg
fldenv
mov
pushf
aaa
popf
cmpsb
sub
std
sbb
dec
lahf
jle
iret
rcll
leave
rcrb
mov
lock
jbe
mov
mov
add
pop
sbb
pop
dec
stc
xor
pusha
mov
mov
stc
xor
add
push
test
js
rcrb
out
mov
inc
popa
adc
push
loopne
jbe
xchg
adc
mov
jno
fstps
rorl
lea
lock
es
xchg
sbb
dec
and
ffree
cwtl
pop
xor
mov
sbb
jle
sub
dec
aaa
dec
push
fmull
ss
and
out
aas
push
pop
xchg
xchg
imull
cld
sbb
ljmp
jecxz
adc
test
xor
jmp
fs
push
adc
fsubl
fcompp
pop
sbb
cmp
cmpsb
movsb
mov
or
sti
xor
and
cwtl
fs
mov
pop
xchg
sub
fwait
jle
inc
mov
mov
popa
xchg
and
je
je
xchg
stos
sti
dec
cmp
test
xchg
daa
int
psubusb
xor
push
lods
push
xor
fwait
sti
push
int
dec
xor
sub
and
mov
out
insb
add
ds
out
inc
icebp
movzwl
shrb
ret
test
jo
cmp
xchg
push
mov
pop
lret
xor
test
lds
lcall
or
cmp
jecxz
cmp
jge
or
sub
adc
into
sbb
or
mov
shr
aas
mov
scas
nop
inc
das
sahf
clc
push
push
idivb
xchg
xchg
adc
das
aam
nop
ret
lds
adc
scas
push
scas
jle
push
daa
sub
inc
mov
das
jnp
inc
xor
jl
jae
mov
out
inc
push
or
xor
dec
shll
inc
popf
xor
pop
aad
out
mov
mov
cmp
push
mov
test
movsl
mov
mov
popa
inc
mov
lods
xchg
mov
sbb
jae
mov
lock
jo
lods
sub
xchg
add
cmp
adc
int
and
cmp
push
loopne
aas
arpl
add
aas
push
addr16
push
or
adc
ficompl
dec
and
ja
int3
inc
dec
jns
ficoml
mov
cmc
int
adc
pop
sub
es
stos
add
hlt
push
ud2
mov
lret
xchg
push
movsb
and
jne
jp
adc
sub
ret
pusha
mov
jo
sbb
movsl
int
xor
push
or
pop
hlt
push
test
xchg
cmp
jne
cld
fdivl
jo
adc
es
dec
jne
push
ret
and
push
xor
jb
and
dec
cld
mov
adc
dec
stos
movsl
inc
adc
pop
cmp
aad
mov
iret
les
push
mov
push
sbb
cli
pushf
or
push
add
jo,pt
pop
add
popf
cmp
ds
pushl
sbb
test
push
xor
jo
addr16
sbb
xchg
push
inc
leave
loopne
scas
jno
leave
je
addr16
fdivrl
xchg
push
cmp
loopne
mov
dec
mov
mov
adc
mov
inc
jg
cmpsb
add
pop
jmp
sti
xor
pop
cli
cmc
rorb
inc
lret
lahf
pop
push
pop
push
adc
xchg
mov
cmp
mov
mov
dec
pop
mov
mov
andl
imul
fistpl
push
les
fistpll
mov
fldcw
add
int3
mov
cmpb
mov
arpl
stos
cmp
add
cmp
outsb
stos
lcall
or
sbb
pop
mov
cltd
xchg
test
sub
cltd
push
call
in
sbb
xchg
fnstenv
popa
mov
sub
jl
sahf
fs
cwtl
lock
ficoml
sub
test
sbb
fstps
sub
mov
out
scas
add
push
sti
std
js
xor
inc
cmpsl
mov
mov
xor
imul
pop
in
insb
mov
js
in
cmp
and
iret
fisubs
push
pop
test
call
push
inc
movsb
push
jo
mov
sbb
pop
cmpl
pop
mov
add
sahf
pop
xchg
js
xor
popf
inc
and
mov
movsb
xor
dec
arpl
outsb
adc
arpl
mov
scas
ljmp
std
iret
addr16
sbb
sub
cmp
cmp
popa
js
ficoms
fisubrl
pop
scas
jp
adc
push
jns
xlat
loop
push
dec
dec
mov
jbe
js
xlat
outsb
cmp
xchg
pop
insb
pop
dec
stos
inc
cmpb
daa
shrb
fsubrl
xchg
or
adc
ja
cmp
sub
mov
pop
mov
dec
addl
and
xor
bound
jno
jae
jmp
lods
sbb
mov
loop
jb
xchg
bound
popf
push
loop
cmc
ja
aam
cs
sub
adc
and
std
and
jl
lcall
inc
adc
fstpl
mov
outsl
ret
outsl
loop
mov
idivl
cmp
fisttpll
xchg
adc
sbb
cmp
pop
push
inc
insl
fs
dec
lods
cmpsb
adc
jae
mov
add
lahf
mov
add
mov
lods
jecxz
dec
call
jno
mov
adcb
mov
jns
inc
add
das
loope
ja
push
xchg
ljmp
popf
stc
orb
test
adc
mov
fistpl
loop
and
test
outsb
stos
cmp
pop
mov
lahf
fisttps
sub
xor
inc
sbb
mov
insb
pusha
inc
rorb
push
aaa
adc
push
ljmp
ja,pt
sub
adcb
cmp
icebp
das
and
push
cmp
jbe
in
fbstp
push
adc
in
stos
mov
sub
or
das
out
cwtl
sahf
icebp
dec
pusha
pop
xor
inc
stos
cmpl
dec
mov
push
cmp
and
jo
stos
jo
xchg
add
sahf
cs
sub
mov
filds
mov
pusha
xchg
popa
adc
inc
mov
jo
push
mov
jo
xlat
cld
mulps
add
jecxz
ljmp
mov
adc
or
push
movsl
xor
xor
pop
cmp
jp
sbb
jbe
ds
loope
xchg
sub
imul
cmpsl
imul
sub
ja
mov
or
mov
outsb
jp
jnp
loopne
or
ds
in
pop
test
inc
ljmp
mov
int3
notb
push
imul
xlat
scas
loope
mov
ficoml
lahf
push
adcb
xchg
mov
sti
mov
fldt
jb
dec
rcrb
sub
inc
int
in
push
xchg
lods
pop
int3
ret
inc
cmp
roll
iret
jg
or
dec
std
fisttps
mov
movsl
jmp
mov
and
insl
ret
ret
dec
add
sbb
bound
add
add
shl
push
push
cwtl
out
mov
ds
cmp
jecxz
push
inc
pop
mov
in
ds
sbb
sbb
in
test
or
mov
popa
sahf
or
inc
scas
mov
push
mov
mov
aad
xchg
ja
dec
sbb
and
in
cld
movsb
mov
xor
cld
mov
mov
mov
or
shl
mov
pop
movsb
hlt
push
sub
mov
jp
fildl
add
in
repnz
dec
push
push
mov
push
xor
add
lods
lea
repz
and
push
fcmovu
add
ret
xchg
xchg
stos
jo
mov
ss
out
push
xchg
jmp
stos
sub
jbe
sub
add
mov
pop
jmp
push
inc
push
fcoml
adc
xor
enter
rcr
dec
int3
fmul
inc
or
iret
and
xchg
hlt
push
sub
pusha
ss
cli
lock
adc
xor
js
sti
sub
repz
xlat
ret
mov
push
jb
sbb
enter
fnstcw
inc
cmp
scas
mov
inc
cld
sbbl
sub
mov
dec
sub
mov
insl
dec
sub
adc
rorl
sahf
xor
lret
nop
inc
arpl
add
mov
enter
pop
add
jo
sbbb
in
stc
in
mov
mov
mov
ret
outsb
mov
adc
cmc
dec
movsl
icebp
loop
pop
icebp
pop
xor
mov
adc
or
jg
and
dec
je
sbb
lock
loope
pop
xor
xor
mov
ret
add
adc
ja
ljmp
leave
inc
add
fsubrp
je
inc
inc
mov
cmc
imul
int
xchg
insl
icebp
cwtl
fstpl
adc
loope
xor
mov
aam
or
mov
out
cmp
sbb
fiaddl
lods
mov
jo
xor
add
inc
sub
and
insb
inc
lcall
pusha
jl
mov
push
inc
out
inc
push
and
andb
inc
lcall
popa
jnp
lcall
xor
outsb
or
enter
call
mov
fmull
jecxz
push
push
mov
clc
sbb
sub
movsb
popf
ret
cmpsl
mov
mov
and
repz
stos
cmc
pop
xchg
lcall
std
dec
sub
xchg
stos
out
out
xchg
mov
push
imul
test
mov
push
sub
push
inc
mov
sarb
adc
push
mov
iret
ucomiss
fs
xor
jae
push
jne
pop
into
movsl
pushf
fisubrs
jecxz
stos
ror
fdiv
dec
dec
ds
std
aaa
push
pop
cs
mov
dec
shlb
push
test
inc
xor
in
and
ds
out
inc
popf
and
sahf
or
aas
and
sbb
cmc
inc
inc
mov
fnstcw
mov
orb
popf
adc
ficoml
je
dec
mov
test
push
sbb
hlt
cmp
out
push
sbb
push
movsl
movsb
mov
int
xchg
sbb
call
xor
hlt
ja
bound
daa
mov
pop
insl
dec
sbbb
xchg
jmp
popa
popa
mov
and
sub
fdiv
cmp
ficoms
idivl
lahf
call
jmp
add
jecxz
testl
dec
sbb
lods
inc
rcll
push
push
dec
iret
divl
and
xchg
stc
sub
pusha
int
repz
sub
mov
cmpsb
mov
fucomip
push
rolb
cli
mov
and
iret
jmp
lds
aaa
push
jns
aas
in
jmp
fwait
pop
popa
fidivs
mov
scas
ljmp
jno
or
inc
fpatan
inc
fs
in
or
addl
add
loop
dec
shrl
pop
lcall
mov
cwtl
lods
jnp
cmp
pop
add
mov
mov
mov
sub
out
pop
mov
and
stos
inc
jecxz
adc
pop
testl
aaa
or
or
movsb
pop
sbbb
xor
lds
fisubl
movsb
jns
lea
xor
test
adc
jmp
into
outsb
adc
leave
pusha
dec
xchg
cmp
sbb
push
mov
or
sub
mov
pop
out
movsl
add
out
push
repnz
cltd
sub
les
and
jecxz
les
pop
loope
mov
xchg
data16
movsl
pop
cmc
inc
iret
push
loop
mov
xor
in
imul
test
jg
pop
adc
pop
aam
or
and
pop
dec
mov
rol
dec
jno
pop
lret
aas
aad
ds
stos
mov
dec
fsubrl
mov
icebp
insl
sub
sti
lds
dec
outsb
psraw
sarl
add
push
push
out
or
sub
in
sub
mov
sbb
push
adc
xor
bound
inc
popf
and
adc
dec
jg
lods
inc
lahf
pop
cli
mov
mov
dec
stos
daa
jle
insl
jns
add
sbb
in
xchg
cs
jns
push
and
ja
and
push
sar
insl
fidivs
mov
lods
lret
jo
pop
mov
ret
loopne
repnz
out
test
sub
imul
lret
add
vpshlw
shrb
push
es
pop
pusha
mov
rcl
rcr
jp
mov
fadds
in
shrb
jae
mov
inc
ror
cmp
mov
gs
lea
jg
test
adc
and
and
cld
jnp
into
jo
test
inc
outsb
inc
inc
mov
ljmp
neg
sti
lret
cmp
ss
add
pop
hlt
imull
mov
std
hlt
mov
mov
rclb
sbbb
push
ds
js,pn
loop
outsb
push
mov
xchg
js
sbb
fildl
push
and
mov
cmp
push
lret
divb
sahf
mov
xchg
sub
mov
bound
fsubs
imul
shr
ss
roll
aam
inc
xchg
cmp
mov
mov
dec
fistpll
mov
or
test
mov
jle
sub
jo
sbb
pushf
shr
xchg
sub
fists
test
sub
and
ret
ficoml
cli
in
sti
mov
pop
jae
dec
popf
adcl
ds
fwait
push
inc
loope
aaa
movsl
addr16
inc
pop
dec
mov
push
icebp
jge
add
cmpsb
adc
lock
scas
inc
aam
mov
daa
jle
mov
xchg
pop
mov
sbb
sub
pushf
rcr
roll
inc
mov
fisubrl
xorl
loop
jge
aad
sub
mov
xlat
push
or
and
jae
in
arpl
cs
mov
xor
ds
jo
subl
mov
jle
dec
fbstp
xchg
inc
pop
ret
push
mov
in
sbb
sub
scas
divb
jae
fnstsw
xor
cwtl
pop
mov
push
movsl
jae
movsb
push
loopne
aas
neg
nop
mov
mov
dec
lea
mov
insb
mov
lahf
sbb
insl
sbb
mov
scas
jle
cmp
daa
loopne
out
arpl
sub
lds
notb
repz
xchg
stos
or
es
aam
sbb
out
stc
mov
xlat
push
or
scas
mov
lds
mov
sti
mov
push
clc
dec
lods
mov
fistpll
pop
cmp
jle
push
or
mov
aad
insl
fisubrs
xchg
and
xchg
adc
sti
and
adc
ljmp
dec
sbb
negl
sbbl
mov
addr16
xchg
xor
movsl
aaa
push
pop
mov
pop
jno
pop
xor
lea
pusha
das
in
ja
pop
dec
data16
enter
gs
or
pop
and
sbb
push
inc
jle
mov
stos
jecxz
pop
flds
xor
lahf
xor
cltd
inc
or
pop
test
dec
cmp
ljmp
fnclex
orl
or
push
adc
xor
sahf
xor
dec
fistl
push
fdivl
inc
test
popf
cmpsl
lods
xchg
inc
dec
push
pushf
loope
mul
mov
push
insb
jl
gs
dec
lock
add
dec
pop
fbstp
add
aas
popf
enter
test
loop
out
scas
xor
fs
dec
and
call
insb
or
fiadds
push
cltd
sti
push
mov
inc
lret
mov
cwtl
fnstcw
mov
sahf
xor
pop
call
adc
pop
icebp
push
cmp
push
in
mov
fs
mov
shll
push
sub
repz
xchg
adc
ss
es
loop
in
repnz
xchg
xlat
and
mov
loope
das
jmp
sbb
adc
jg
outsb
in
mov
jb
hlt
sub
and
sbb
sar
mov
sub
jns
repnz
mov
hlt
or
imul
shrb
rcrb
mov
enter
and
jmp
fbstp
sbb
pop
test
mov
push
ljmp
lock
push
cltd
insl
push
mov
push
cmp
mov
jno
insl
mov
push
xor
imul
cmovg
bnd
je
pop
push
dec
roll
jmp
lahf
ss
shll
sahf
stc
int
and
jmp
pushf
sbb
lock
and
out
mov
mov
std
pusha
fcomi
mov
fcompl
push
inc
dec
sti
xchg
inc
jae
dec
cmp
push
or
mov
fs
add
inc
adc
jno
xchg
adc
push
ret
add
pusha
push
mov
jne
dec
sarl
stos
jne
cltd
and
sbb
cmp
mov
gs
js
mov
imul
outsl
les
es
mov
addb
clc
cmp
pushf
push
movsl
sbb
popf
mov
dec
aad
ret
push
imul
andb
push
cmp
testb
imul
xchg
xchg
in
out
pushf
xor
inc
out
sbbb
dec
lcall
test
push
mov
iret
sub
xchg
roll
and
push
lds
xor
les
jecxz
cmpsb
jecxz
mov
xor
gs
int3
adc
jecxz
in
jl
mov
mov
cmpsl
popa
iret
iret
or
fcomp
jge
cltd
stos
mov
and
cmp
inc
push
clc
int3
jno
or
ljmp
mov
inc
sub
test
jnp
xor
les
pop
sub
sbb
or
rorb
mov
popl
xchg
pop
mov
push
test
stos
add
xchg
sti
fwait
sahf
aas
mov
xorl
outsb
cmp
and
aad
mov
push
fnstsw
aad
mov
cmp
pop
pop
push
push
aaa
into
xchg
sbb
aam
mov
cmp
into
pop
pop
into
and
dec
jecxz
cs
mov
js
sbb
or
daa
cltd
scas
cmp
imul
lea
mov
loopne
loop
sbb
std
dec
mov
inc
push
popf
xor
push
movsl
add
pop
mov
data16
add
pusha
lods
mov
out
mov
das
popf
data16
je
push
or
loope
mov
fnstenv
in
pop
xchg
and
jge
shrb
out
dec
aam
cmp
add
fcomps
dec
mov
mov
outsb
outsb
enter
fsubrl
aas
sbb
cld
mov
adc
fwait
dec
in
or
outsb
sub
ret
adc
push
test
pop
jnp
fmulp
enter
dec
push
jmp
mov
push
inc
push
dec
jl
and
fisubl
pop
lea
or
jl
aad
lea
negb
xchg
xchg
mov
jle
test
jno
lea
or
mov
cmpl
or
pop
loop
hlt
mov
cld
xchg
push
out
add
xchg
cmp
lcall
xor
add
hlt
push
loop
inc
mov
xchg
add
outsb
xbegin
jb
int3
jae
cmp
mov
popf
push
cmp
fldl
das
xor
shlb
sub
in
mov
pop
dec
jae
xchg
add
jmp
sbb
arpl
mov
push
cmc
cmp
cmpsb
xor
pop
push
jge
xor
mov
call
sub
xchg
dec
js
xchg
push
adc
mov
mov
adc
xlat
inc
sbb
dec
inc
mov
inc
and
shrl
aaa
scas
cld
push
sahf
es
xor
cs
shr
xchg
xor
ret
adc
out
and
sarl
adc
out
add
sbb
ljmp
fwait
scas
mov
pop
and
adcb
stc
sub
outsl
rcll
push
jecxz
pusha
stos
adc
fwait
jne
jb
leave
xor
xchg
lret
mov
jg
clc
and
cmp
pop
fld
repz
cmp
sahf
clc
mov
sti
mov
outsb
dec
popa
mov
xchg
mov
shlb
push
lea
fidivrs
add
mov
rorb
mov
imull
aad
popf
dec
loop
dec
xor
stc
jno
xlat
in
pop
mov
inc
push
mov
lock
in
mov
loope
leave
cmp
push
jne
pop
push
sahf
cmp
sub
loope
pusha
ret
jp
jnp
jno
mov
loopne
sti
dec
pop
addr16
addr16
xchg
fisubs
scas
lret
inc
pop
cld
in
insb
xor
adc
adc
dec
push
xor
fucomp
test
sti
or
into
repnz
test
add
arpl
cmpsb
repz
cmp
and
sub
sub
idivb
pusha
cmp
cmp
mov
aam
push
sahf
sbb
xor
and
arpl
push
xchg
js
adc
mov
xchg
std
aam
or
test
pop
jle
xchg
mov
mov
rclb
xchg
jmp
add
jg
iret
mov
lcall
and
es
lcall
frstor
inc
bound
push
mov
das
lds
je
push
iret
mov
cs
shrb
dec
orb
ficoms
les
cmp
mov
cmp
dec
out
dec
das
mov
inc
lods
xor
test
mov
and
and
bound
push
in
test
mov
mov
jbe
in
dec
adc
xor
mov
loop
and
mov
pop
aad
fildl
adc
mov
and
lahf
pushf
out
mov
pop
xor
dec
cltd
sub
xchg
xchg
in
add
pop
mov
loop
sbb
shrb
shll
push
push
insl
mov
insl
adc
gs
jmp
sub
xchg
jns
jge
mov
repnz
cltd
adc
or
addl
add
push
hlt
mov
mull
mov
inc
mov
xor
fdivl
sarl
pop
sub
icebp
adc
cmpb
out
dec
fs
jns
outsb
lret
sub
rclb
jp
test
xlat
scas
mov
fsubrl
sbb
adc
test
inc
repz
or
and
add
mov
jne
adc
call
in
xor
xchg
stos
cmp
push
shlb
negl
jecxz
cmp
sub
test
shl
pusha
xor
movsb
fidivrl
xchg
sub
cmp
inc
jne
jg
jl
mov
gs
and
push
dec
popa
cmp
iret
pop
aaa
or
xlat
jae
push
jle
clc
enter
xchg
xor
mov
inc
mov
cltd
daa
js
mov
sbb
xor
rorb
movsl
leave
stc
cvtps2pi
lods
mov
xlat
clc
jae
scas
push
popf
outsl
movnti
xor
jnp
pop
out
movsb
daa
fidivrs
lea
fistpll
imul
dec
loop
les
push
stos
pusha
mov
fwait
outsl
cmp
mov
cmp
cmpsb
push
sub
sahf
pop
jbe
clc
xchg
push
and
cvttps2pi
pop
jo
lret
pop
dec
and
testb
lcall
push
test
leave
shr
pop
arpl
mov
mov
hlt
sub
aad
pop
cmp
cmpsb
sarl
mov
sarb
lahf
pop
imul
push
and
mov
test
and
loopne
enter
cwtl
mov
jbe
jno
ret
xchg
cmpsl
lds
nop
aas
lds
pop
mov
insl
shll
std
mov
mov
pop
imul
imul
out
scas
add
push
mov
adc
add
inc
and
stos
sub
cld
repnz
mov
test
jle
mov
jnp
int
lahf
mov
xchg
popa
sbb
popf
lea
and
sbb
gs
adc
fdivrl
faddp
movsb
sbbl
pushf
fldl
stos
je
pop
mov
xchg
arpl
xchg
cmp
jg
xchg
outsl
lods
loopne
rclb
loopne
or
addr16
ret
sbb
xor
cwtl
stos
jo
xchg
pop
push
lea
movsb
and
jbe
sbbl
call
std
je
scas
mov
pop
cmc
pop
xchg
jg
lret
xlat
and
movsb
xchg
test
hlt
fistpll
jns
cmpsb
arpl
test
xchg
add
int3
and
mov
pusha
ss
lret
out
ret
push
add
mov
cld
cmpsb
aam
mov
pop
xor
push
ljmp
jmp
roll
shr
xchg
and
and
ret
in
subb
mov
aam
add
ds
push
dec
cmp
stos
data16
mov
arpl
ss
sbb
adc
mov
and
fstl
fldln2
xor
jno
xlat
aaa
pop
jae
or
ret
xchg
push
push
data16
push
inc
repz
and
fnstsw
addl
popf
scas
adc
int
xchg
test
lea
aam
stos
pop
inc
push
scas
jg
mov
pop
mov
sub
cli
subl
sbb
cwtl
mov
push
gs
jo
xor
insb
jb
rcrl
push
xchg
and
inc
js
cmp
mov
sbb
pop
js
in
fcmovnb
and
leave
movsl
imul
cmc
jle
pop
sahf
or
sbb
sahf
lods
aad
mov
mov
negb
dec
pop
add
es
dec
xchg
rcrb
repz
sbb
lea
out
jae
inc
pop
mov
pop
jg
add
loope
sub
pop
shlb
or
jnp
aaa
enter
add
inc
push
popl
dec
push
jno
repnz
rclb
mov
sub
cmp
dec
fnstcw
adc
dec
arpl
out
pop
sub
ret
sar
sbb
aam
in
aad
es
add
inc
add
push
sbb
or
rorb
std
inc
xor
jle
clc
lcall
mov
mov
adc
popl
and
pop
jo
or
mov
arpl
clc
cmc
or
cmc
or
mov
addr16
mov
mov
ret
cmp
fists
lea
xchg
daa
xchg
scas
jne
pushf
loop
pop
je
inc
mov
sahf
xorl
aas
in
enter
sub
and
inc
roll
test
sbb
adc
xor
scas
in
and
sbb
fwait
sub
mov
xor
icebp
inc
aas
mov
das
jecxz
push
lcall
mov
jge
push
jmp
mov
mov
push
pop
fcoml
shl
xchg
mov
push
clc
mov
cmp
sbb
aas
pop
cli
pop
pop
xor
adc
leave
sbb
pop
cmp
mov
lds
or
pop
sti
fs
enter
or
movb
ret
push
mov
sbb
mov
xchg
rorl
in
fbstp
push
push
popa
mov
xchg
idivb
xor
test
sub
mov
push
lret
xchg
in
testl
mov
jno
ficomps
out
lods
lea
sub
stc
sahf
popa
ret
lret
cmpsb
loop
dec
aad
mov
pop
jne
push
test
daa
cmp
mov
bound
imul
arpl
pop
mov
jmp
xchg
in
dec
lahf
je
jbe
test
aaa
jbe
inc
inc
dec
in
pop
push
push
dec
push
addr16
xor
add
lret
data16
add
icebp
sti
dec
mov
sbb
mov
jmp
push
xchg
scas
ret
movb
stc
pop
scas
dec
xchg
sbb
dec
xchg
jle
les
fnstenv
mov
mov
and
sub
int3
loopne
mov
cmpsl
jns
dec
or
push
arpl
mov
icebp
push
and
mov
xchg
jp
popf
aam
jl
aas
push
jge
andb
fisubrs
xchg
xchg
add
or
sbbl
inc
xor
fistl
rolb
lock
dec
insb
sub
fbstp
dec
cli
cmp
pop
ds
pop
imul
sub
insl
repnz
dec
or
and
adc
add
push
cmp
cmc
fbstp
jmp
out
mov
movsl
jno
jl
sbb
popf
fcomip
aad
cmp
enter
adc
sbb
mov
rcr
stc
xlat
jmp
and
or
push
int
mov
push
push
mov
andb
in
mov
cltd
bound
leave
test
mov
iret
rclb
cltd
push
push
lcall
and
cmp
and
daa
outsb
int3
fsubrp
push
xor
pxor
sbb
jb
mov
fstpt
inc
mov
xchg
and
ret
add
xor
or
negb
pop
jae
incb
inc
pop
lahf
jae
push
insl
inc
lods
push
test
jae
dec
mov
jg
mov
dec
aam
adc
xor
xchg
cmp
sbb
in
test
stos
dec
xchg
mov
sti
insl
lods
cmpl
mull
stos
sbb
add
js
loope
in
cmp
mov
cmp
jl
push
loopne
stos
cli
mov
lcall
daa
repnz
inc
jmp
hlt
push
test
sub
push
outsl
push
addl
scas
hlt
daa
lea
repnz
call
repz
les
pop
addr16
lea
pcmpgtw
cmp
int3
out
cltd
cld
add
sahf
call
inc
sbbb
sahf
pop
fwait
insl
push
shl
ret
and
shrb
lods
inc
jg
lods
and
leave
and
cmp
push
ret
in
push
xor
sub
pop
nop
jns
pop
add
sahf
scas
mov
add
outsb
push
stos
adc
sti
push
stos
gs
cld
faddl
stos
out
dec
flds
adc
jmp
push
cmpsb
jo
add
or
cmp
push
fs
inc
sbb
lds
push
cmpsb
ss
shll
adc
push
lds
jg
cmpsb
fnstcw
adc
pop
sbb
push
mov
fsubrs
cltd
push
push
push
push
rclb
stc
mov
int
rcll
mov
cmp
daa
cmp
pop
aaa
mov
cmp
lock
into
add
je
jae
fsts
rcl
movsl
sti
mov
mov
jl
aas
fldenv
leave
andb
mov
iret
outsl
cmp
jns
out
shl
dec
mov
inc
gs
mov
ret
push
adc
sub
inc
or
xor
mul
shrb
rcl
cli
push
jmp
mov
and
xchg
fadds
ret
push
sahf
fwait
scas
adc
imul
fiadds
pushf
pop
xchg
adc
push
testb
jle
loopne
js
je
xchg
inc
xchg
inc
adc
inc
popf
mov
nop
mov
std
adc
insl
fisubrs
inc
aas
in
incb
sti
dec
xchg
inc
inc
cmc
inc
cmp
subl
pop
loopne
jns
mov
lret
pusha
jne
push
popa
and
cmp
data16
dec
mov
ljmp
dec
scas
mov
fstpl
mov
sub
les
pusha
not
lods
insb
add
mov
stc
push
sub
push
enter
inc
mov
mov
xchg
rcl
shlb
sahf
pop
in
cltd
mov
inc
inc
pusha
adc
lods
mov
imul
insl
cmp
roll
or
xor
push
loop
jbe
fisubs
call
mov
vmovaps
scas
xchg
dec
pop
sbb
or
mov
stos
jb
mov
or
adcb
gs
push
mov
stc
popf
arpl
nop
cmpsb
mov
sub
jmp
dec
inc
jo
jne
push
shll
fstps
rcrb
ss
test
fists
aam
mov
inc
fdivl
js
push
rcr
fsubr
shl
jno
bound
pop
sbb
cmp
pop
mov
in
pxor
push
xchg
mov
xor
pop
dec
out
mov
lods
fwait
std
or
cmc
ret
pusha
xchg
lret
je
xor
imul
mov
mov
psrlw
gs
es
adc
into
jecxz
mov
cld
inc
inc
int3
mov
pop
dec
lods
ljmp
ds
out
pop
sub
repz
test
sbb
into
xchg
cs
push
lea
and
mov
dec
mov
rcll
add
dec
mov
cli
add
sbb
leave
lea
aam
loope
fnstcw
aaa
out
stc
out
or
mov
lret
and
dec
int
int
mov
jg
jg
sub
fimull
scas
cltd
push
or
jle
fnstenv
adc
jae
daa
test
push
std
inc
pop
sub
bound
outsb
out
sbb
imul
pop
mov
cld
aam
xchg
hlt
test
out
inc
xchg
pop
ljmp
push
scas
in
fs
adc
enter
sbb
cmpsb
mov
xor
icebp
jns
pop
repz
push
dec
jnp
push
inc
and
adcl
sub
xchg
loope
xchg
jl
adc
or
jge
lods
nop
push
pop
add
xchg
and
pop
ljmp
pop
jmp
push
cmpsb
lock
mov
popf
xchg
add
inc
push
jge
stos
xlat
mov
cmpsb
arpl
xlat
xchg
repz
dec
mov
cmpl
inc
popf
imul
stc
gs
std
xchg
das
push
data16
inc
icebp
in
mov
and
mov
popf
imul
test
test
xchg
dec
jb
push
call
clc
sahf
loop
jg
jge
call
cmp
inc
and
xor
push
out
sarl
iret
sbb
clc
pop
cmp
sbb
es
sub
push
mov
mov
xor
mov
mov
pop
add
pop
push
andb
lods
stos
inc
fisubs
mov
jbe
mov
mov
stos
xchg
mov
push
imul
ljmp
idivl
add
cmp
lods
repnz
mov
jecxz
xchg
mov
xchg
sbb
push
bound
mov
push
es
mov
push
push
dec
and
clc
mov
cwtl
test
out
cli
cmp
lds
lret
arpl
fnstsw
in
clc
mov
xchg
jmp
add
hlt
ja
sarb
cld
lret
jnp
xchg
xor
cmp
inc
fsubrl
xchg
outsb
add
cltd
mov
es
lock
fcoms
xchg
cs
lret
mov
cmc
and
mov
push
in
pushf
xor
fwait
out
shlb
lret
push
inc
fstpl
in
xchg
test
cmp
in
pop
mov
xor
jo
sub
rcr
mull
jnp
sarb
adc
scas
fisubl
lret
jae
mov
clc
xchg
inc
stos
negb
scas
mov
into
icebp
inc
fndisi(8087
loop
cltd
push
andl
mov
stos
rcrl
out
test
loop
mov
pop
dec
scas
cmp
sub
stc
sbb
sub
jb
das
les
adc
dec
lahf
lods
jl
pop
lock
xchg
pop
mov
mov
and
adc
inc
fdivrl
shlb
sti
push
push
inc
push
or
mov
sub
add
adc
frstor
xchg
fsubrs
mov
imul
rclb
or
stc
dec
ljmp
jno
inc
sub
popa
orl
add
mov
xor
rcr
das
lea
enterw
inc
jno
pop
int
xchg
mov
les
stos
dec
xor
inc
mov
stos
int
aad
sub
xlat
xlat
hlt
mov
cmp
add
popf
ltr
mov
xchg
xor
cmpsb
dec
cmp
inc
pop
inc
nop
mov
test
adc
xor
nop
xchg
das
mov
rclb
es
adc
nop
or
test
xor
sbb
lea
mov
lods
or
rorb
xor
mov
sub
push
push
jl
inc
or
mov
fwait
decl
testb
dec
movsl
enter
std
enter
test
int3
mov
xlat
sbb
xor
jo
cmp
push
out
scas
mov
mov
pop
xchg
lods
inc
les
dec
pusha
lcall
mov
lret
sbb
adc
repz
jae
stc
inc
jmp
pop
fists
or
sub
loopne
and
in
lds
lods
mov
or
push
test
push
inc
push
out
xchg
xchg
mov
and
sub
cli
scas
inc
sbb
inc
cmpsb
add
push
insb
scas
inc
dec
in
les
out
inc
imul
push
repz
in
das
cmp
outsb
add
and
pop
push
fxam
testl
bound
mov
arpl
dec
sahf
stos
pop
mov
mov
insl
aam
mov
fs
ret
filds
sub
pop
stos
std
sbb
mov
sub
push
lods
push
sarl
out
push
enter
insb
sbb
adc
adc
movsl
adcl
dec
jecxz
out
fisubs
inc
int3
jmp
mov
jns
xchg
jmp
dec
shlb
out
scas
dec
stos
out
stc
sub
adcl
push
inc
push
repnz
push
into
xor
movsl
roll
mov
aad
xchg
xor
les
dec
and
iret
ret
outsb
or
sbb
mov
mov
cmpsl
out
leave
push
cltd
mov
cs
pop
pusha
cli
push
sbb
add
inc
fcmove
jns
push
inc
inc
pop
jmp
imul
lcall
and
into
enter
push
jb
mov
fstpl
ds
or
aam
inc
pop
movsb
cmpsl
ljmp
fwait
sti
push
int
sti
iret
call
mov
mov
lgs
push
rcll
shrl
xor
hlt
ret
lcall
jne
mov
pop
cmpsb
dec
pop
lea
shll
mov
jno
lods
cmp
or
jle
xchg
je
jns,pt
push
and
xor
rcl
cld
inc
loopne
mov
fidivl
mov
mov
xchg
mov
and
pop
xor
dec
push
mov
and
xchg
das
addr16
mov
imul
adc
imul
mov
cmp
hlt
rol
xor
fcmove
mov
insl
mov
sbb
fildll
adc
push
jae
divb
push
dec
pop
cmp
pusha
mov
and
mov
dec
call
pop
cmp
push
inc
adc
cmp
movsl
cmovbe
adc
sbb
sbb
or
aas
data16
lods
jmp
push
push
mov
adc
loop
dec
sbb
sbb
pop
lea
in
xor
sbbb
cmpsb
inc
push
test
fstpl
pop
clc
mov
jne
sbb
jbe
or
sub
xor
cmc
add
div
int
or
sti
inc
push
inc
mov
or
mov
sbb
stos
mov
xchg
mov
mov
pop
dec
add
push
xor
jge
dec
mov
jns
sbb
int
dec
mov
in
iret
mov
mov
lock
lea
sub
pusha
jle
fwait
sti
mov
bound
xchg
scas
mov
mov
push
lcall
sub
adc
movsl
sub
add
test
mov
dec
and
repnz
in
mul
xchg
cs
xchg
aad
adc
xor
add
mov
arpl
and
xchg
and
mov
clc
cmp
leave
imulb
mov
xchg
into
mov
jp
push
clc
fdivl
push
push
dec
loope
fstps
jne
xor
xchg
jns
jecxz
lods
push
mov
xor
push
xchg
jmp
sbb
outsb
addr16
mov
fdivl
inc
scas
mov
lahf
stos
cmc
xchg
and
test
aad
inc
shrb
jbe
stos
sbb
lret
dec
mov
loopne
aam
or
das
addr16
lock
cmc
enter
sub
push
push
push
das
out
mov
cmp
mov
mull
xchg
push
add
pop
loope
fbld
adc
ret
inc
pusha
jae
ret
std
add
je
push
pushf
scas
inc
xlat
adc
and
sub
repz
or
cmc
int3
cmpsl
adc
ja
js
adc
inc
pushf
lods
xchg
cs
fsts
sbbl
loopne
dec
lahf
enter
cwtl
and
mov
xor
mov
fmul
sub
cld
test
dec
sbb
cmp
mov
lret
mov
fsubrs
xchg
loopne
xchg
sbb
aas
dec
xor
xchg
lods
sti
and
ss
xor
mov
cmp
es
sbb
dec
fisttps
inc
dec
xchg
fiaddl
sub
lods
divl
pushf
ret
sub
push
imull
ja
lods
sbb
add
mov
mov
adc
and
js
xor
push
movb
xchg
int
xlat
repz
push
cmc
js
int
adc
sbb
or
fwait
sbb
hlt
shrb
or
mov
cmp
inc
pop
adc
and
jp
ret
and
adc
cmp
ja
adc
addr16
flds
inc
jp
mov
mov
mov
pop
pop
mov
xchg
and
inc
pop
cmp
mov
cmp
ljmp
out
mov
push
cmc
push
imul
push
xor
mov
pusha
jns
xor
enter
mov
addb
mov
or
dec
scas
mov
in
loopne
aaa
mov
insl
xchg
mov
scas
adc
fs
js
xchg
xor
subl
popf
movsb
push
in
pop
cmp
pop
icebp
jle
or
xchg
loopne
inc
repz
xor
leave
push
push
xchg
lret
cmp
in
jl
cmp
ret
pop
pop
jb
inc
loopne
jns
insl
jnp
and
xchg
jle
adcb
adc
xor
cvtdq2ps
mov
and
sub
pop
in
sbb
add
sarl
mov
xor
setnp
iret
pop
xlat
xor
or
into
pop
inc
lods
push
sbb
dec
mov
mov
ficoml
movsl
mov
sub
inc
je
or
sub
insl
test
add
and
xchg
add
mov
push
pusha
mov
jae
ret
hlt
xchg
xor
or
or
push
jl
ja
push
je
sub
mov
scas
dec
inc
fcmovnu
cmp
xchg
cwtl
add
mov
mov
ja
pusha
add
inc
or
xchg
and
fwait
mov
add
push
jbe
xchg
outsb
sbb
cltd
xor
mov
fistl
out
leave
pop
daa
adc
sbb
pop
sbb
int
jae
push
sub
xor
scas
adc
popa
repz
xor
xor
inc
sbb
push
pop
adc
sbb
lcall
data16
cmp
scas
inc
jge
push
jp
mov
repz
or
push
ds
cld
and
inc
leave
aaa
in
out
sbb
cltd
fidivrl
jns
fs
and
incl
cltd
xor
movsb
inc
int
and
pop
pop
ds
jl
mov
sub
inc
int
or
es
jecxz
and
pusha
lods
inc
xchg
ja
hlt
in
lret
pop
mov
mov
mov
mov
cmp
out
xor
mov
add
xor
movsb
int
rcrl
mov
ljmp
or
pop
mov
inc
pop
hlt
xchg
fs
xor
mov
sbb
add
dec
sbb
lea
jae
adc
fwait
sbb
int3
lods
add
sub
imul
aas
lods
pxor
fldt
mov
imull
bound
sub
mov
shr
sub
icebp
jp
xor
push
xchg
inc
adc
xor
stc
mov
imul
ror
sahf
jmp
mov
pop
add
dec
mov
push
add
call
cmp
adc
in
stos
xchg
dec
cmp
mov
mov
and
fs
jb
insl
inc
sbb
dec
mov
daa
mov
xchg
jb
push
andl
sarb
add
out
add
cmp
dec
dec
pop
dec
mov
mov
bound
inc
fdivrs
inc
inc
xor
or
data16
jns
arpl
dec
sbb
repz
les
mov
pop
cmp
fldl
into
sbb
rclb
lods
mov
jle
cmp
ss
cwtl
and
call
adc
xor
pop
cmp
jno
push
test
js
std
inc
push
das
test
or
dec
test
and
out
mov
inc
xchg
lods
out
imul
or
pusha
in
out
pop
pop
inc
xor
mov
adc
sub
adc
jge
mov
in
das
insb
mov
inc
lods
inc
js
out
out
inc
mov
popa
out
jbe
mov
pop
loope
dec
and
nop
dec
repz
jecxz
ja
sbb
das
push
dec
jnp
mov
test
cmp
out
lahf
pusha
test
outsb
loop
xor
iret
jne
xor
fisttps
movsl
cmp
daa
push
repnz
dec
cmp
pop
inc
dec
xor
dec
shlb
xchg
push
fnsave
adc
inc
sti
inc
jns
mov
pop
jns,pn
in
or
xchg
rcrl
aas
call
lock
aad
pop
inc
insl
cmp
pop
push
and
jno
imul
into
jo
dec
bound
push
jmp
push
sti
mov
sub
push
shlb
ret
xorb
pop
push
dec
or
in
cmp
adc
into
punpckldq
mov
or
movsl
sub
pop
popf
xchg
xlat
mov
icebp
pop
inc
mov
adc
mov
lds
int3
dec
pop
divb
xchg
imul
mov
xchg
sub
dec
adc
mov
mov
pop
rolb
subl
adc
addr16
xchg
clc
sub
sub
mov
pusha
dec
mov
jle
sbb
or
in
leave
inc
adc
ljmp
sti
dec
shll
in
inc
icebp
adc
cmpsl
inc
push
or
xchg
ljmp
cs
bswap
push
add
popa
andb
mov
lret
xchg
jns
adc
insb
loop
ror
fisubrs
xchg
fiaddl
push
adc
add
sbb
push
xor
mov
mov
dec
sub
mov
pop
clc
fidivrl
cmp
mov
sub
xlat
and
sti
sbb
imul
sti
pop
arpl
int3
cld
mov
xlat
in
push
sub
sbb
mov
outsl
stos
mov
pushl
pop
scas
mov
aam
cld
jb
mov
add
ror
scas
call
sub
push
pushf
nop
jp
mov
xchg
movsb
inc
pop
xor
pop
call
mov
cmp
fnsave
mov
dec
xor
jge
movaps
rorb
ds
fs
loop
rcrb
xor
ja
movsb
mov
add
fiaddl
lcall
xlat
sbb
dec
cmc
dec
ljmp
ljmp
or
out
mov
inc
add
xor
sbb
or
xchg
or
pop
cmc
pusha
pop
jnp
sar
jl
fmuls
ds
arpl
lds
adc
cmp
xlat
push
out
movsl
jmp
dec
adc
inc
lods
dec
adc
jl
pushf
je
addl
sbb
lods
xor
out
xchg
adc
lret
ret
hlt
push
or
sbbl
jl
fwait
cmp
cmp
sbb
daa
mov
xor
pusha
inc
push
xchg
cmc
or
shlb
xor
nop
icebp
in
notb
pop
xor
aaa
adc
std
fsubl
in
jno
and
xor
insb
dec
dec
mov
movsl
das
inc
pusha
movsl
cmp
fcomip
repz
jbe
cmpsl
jle
sub
add
mov
adc
clc
add
jg
push
mov
jns
pop
call
adc
ss
and
cltd
dec
scas
mov
stos
sub
sahf
inc
add
xchg
in
xor
cmp
call
cs
rcrb
mov
dec
rol
dec
loopne
jl
outsb
mov
ret
loope
mov
cwtl
xchg
pop
insl
out
clc
fnstsw
pusha
in
int3
sub
ret
mov
adc
inc
xchg
pop
inc
pop
leave
xor
popa
stos
add
or
notb
adc
pop
subl
dec
mov
out
jae
pop
mov
push
cmp
inc
pop
and
fwait
mov
test
adc
or
add
movsb
les
inc
fcomi
push
dec
data16
movsl
cmp
pushf
cmp
hlt
jne
fisttps
insl
in
les
pop
mov
out
xchg
insb
sub
xchg
scas
mov
or
rorb
mov
out
sbb
shll
xorb
or
cmp
mov
gs
ret
pop
imul
lods
andb
lahf
push
jl
pop
xor
rcrb
pop
sbb
stos
sub
insb
push
iret
cmc
dec
pop
mov
adc
jl
push
icebp
adc
pop
sbb
sub
lods
mov
mov
in
mov
flds
add
cmpsl
out
or
movsb
sti
or
je
dec
pop
test
push
test
int
outsl
js
lock
jne
add
mov
inc
adc
jne
das
insb
sub
aad
loop
aas
es
lret
sbb
sbb
loopne
or
push
or
icebp
xchg
push
in
dec
mov
cmovl
nop
mov
mov
mov
jbe
jb
adc
push
clc
inc
out
out
lods
cmp
xchg
nop
sub
repnz
cmp
lock
and
dec
inc
cwtl
leave
jno
out
call
mov
imul
pusha
mov
xor
inc
or
cmpsb
mov
mov
pop
push
mov
add
test
push
push
sub
lea
mov
mov
int
stos
dec
xchg
adc
js
das
push
nop
je
push
into
out
xlat
sbb
out
lods
xchg
and
mov
xchg
or
mov
icebp
js
leave
sub
mov
incl
or
push
int
dec
adc
enter
aam
call
cmp
jo
mov
add
hlt
imul
lods
cmc
push
inc
pusha
or
sbb
mov
mov
pop
pop
repnz
inc
adc
data16
sarb
in
push
dec
cwtl
bound
sbb
sub
dec
testl
sbb
xchg
lods
fnsave
mov
mov
mov
stos
mov
cmc
push
jnp
xchg
popf
mov
gs
lods
cmp
ja
stos
mov
stos
sbb
out
lods
sbbl
sti
mov
fadds
in
mov
pop
pop
sbb
jge,pt
inc
pop
mov
clc
jle
hlt
pop
xchg
aad
dec
mov
icebp
pavgw
push
dec
int
mov
adc
dec
dec
and
cmp
into
sbb
push
dec
not
mov
add
popa
lahf
movsl
add
das
fsubrl
stc
cmp
roll
dec
pop
std
jo
fbstp
xchg
adcb
fmull
aad
jl
sub
sbbb
mov
xor
or
insb
fnstenv
add
push
mov
push
mov
and
jge
loope
outsb
xor
mov
fisubrs
stos
xchg
sbbb
add
stc
adc
xor
xor
outsl
repz
and
jne
insl
mov
les
cmpsl
cmp
push
dec
adc
push
mov
or
rorl
ja
andb
inc
xchg
cmp
inc
inc
lcall
cltd
adc
xor
stc
xchg
aaa
or
pop
jmp
inc
je
std
prefetch
adc
ss
dec
lods
inc
mov
das
xchg
pop
adc
add
or
or
ja
xchg
pop
add
sbb
scas
ds
into
adc
js
add
dec
aaa
xlat
xchg
adc
jp
mov
xchg
mov
mov
stos
rorl
pop
sbb
dec
andb
cmp
xchg
jbe
loope
rcrl
mov
dec
push
arpl
jbe
cwtl
mov
mov
icebp
fnsave
jns
in
outsb
pushf
mov
pop
ss
imul
sbb
add
adc
notl
add
aaa
xchg
mov
and
in
adc
xor
jns
jno
movsb
shll
daa
bound
scas
jg
pushl
push
adc
adc
subl
mov
repnz
cmp
xor
clc
sahf
pop
push
dec
xchg
mov
push
mov
push
popf
cmp
jns
mov
outsl
inc
enter
mov
ret
inc
call
jo
outsl
push
jecxz
push
adc
repnz
les
into
pop
scas
bound
mov
or
rol
pop
cmp
and
out
mov
mov
cmp
dec
adc
int3
scas
imul
enter
enter
insl
lods
add
and
jmp
and
call
sbb
lret
adc
imul
add
or
inc
std
pop
jno
gs
notb
inc
decl
lods
adc
inc
int3
lock
xchg
insb
lock
push
sbb
cmpsb
or
cs
cmp
push
out
jg
sub
dec
inc
lahf
rcr
sarl
add
lret
xchg
sti
es
push
cmp
inc
fnstsw
rcll
das
cmp
push
push
out
push
and
xchg
sbb
jge
mov
out
fs
sub
sbb
sub
popa
pop
pop
push
mov
test
add
test
imul
push
ja
rcl
mov
sbb
cmp
enter
pop
cmpsl
insl
fdivrs
mov
ret
mov
sbb
aad
sbb
clc
add
fisubrl
inc
or
xlat
cwtl
and
and
scas
ret
push
mov
pop
or
std
fldenv
subb
cmp
stc
insl
push
out
and
cs
in
aas
ja
insb
test
pop
sbb
add
das
sbb
mov
and
or
push
imul
cmpsb
cmp
cwtl
jnp
aaa
pop
xor
je
adc
inc
inc
lret
push
jne
or
popf
mov
inc
test
outsl
mov
cmp
inc
icebp
movq
aas
pop
cmpsl
inc
rolb
and
movsl
mov
jp,pt
jle
mov
inc
mov
cmpsl
hlt
test
dec
fcom
cli
insb
add
xor
sahf
lods
pop
movsl
test
pop
dec
mov
cmp
in
leave
push
in
fisubrs
adc
xor
pusha
mov
mov
out
shl
loope
ja
les
add
xchg
nop
sbb
xchg
dec
dec
mov
sahf
mov
mov
sub
cmp
pop
ds
cmp
pop
mov
fneni(8087
ja
sahf
pop
repnz
push
xor
or
jecxz
daa
xor
cwtl
insb
xchg
mov
mov
mov
pop
rorb
xchg
out
bound
jne
icebp
pop
push
orb
pop
pop
xor
adc
insl
repnz
scas
mov
test
inc
aam
inc
ljmp
push
test
sbb
cli
or
lods
shll
enter
inc
and
rcrb
pop
sub
cmp
sub
push
push
lock
dec
in
js
imulb
or
mov
lods
addr16
cltd
in
or
in
ja
test
add
fsubl
inc
iret
fs
addr16
loopne
stos
xchg
sbb
testb
dec
pop
mov
lock
stos
adc
push
aas
cmp
jecxz
fxch
popa
out
fsts
or
dec
pop
pop
jne
imul
popf
mov
jl
test
mov
in
xor
cmc
mov
or
out
stc
shl
jge
ja
dec
mov
mov
or
cwtl
mov
filds
push
mov
sub
cltd
icebp
mov
xchg
xor
dec
dec
scas
mov
or
jns
sahf
sub
jne
mov
xchg
frstor
outsb
mov
andl
jbe
push
push
xor
add
adc
sbb
and
mov
leave
lcall
push
mov
pop
ds
loope
repz
jl
inc
movsl
lds
icebp
mov
neg
push
cmp
nop
daa
popa
clc
bound
sbbb
dec
and
popf
jmp
inc
lahf
and
add
xchg
or
adc
stos
sti
cld
xor
sub
cmpsl
cmp
lret
je
sbb
sti
adc
sub
dec
sbb
push
xor
ja
es
nop
add
jbe
les
popa
jg
cmp
mov
popf
or
data16
or
fidivrl
je
adc
nopl
dec
mov
pop
aad
in
mov
push
dec
in
push
in
out
popa
fldenv
fsubrp
xor
call
loope
sahf
xor
add
shll
push
dec
stos
jbe
inc
pop
in
lock
pop
sub
fwait
pushf
push
jb
cmp
call
or
cmp
into
mov
int3
cmc
adc
pop
shrl
mov
pop
movsb
daa
aad
mov
fwait
std
movsb
sti
adc
int3
cli
jno
sub
adc
pop
inc
xor
cmc
xor
or
das
popa
clc
jmp
or
ljmp
das
stos
arpl
arpl
out
push
ds
push
outsb
and
xchg
dec
lea
outsl
ds
imul
push
xchg
jp
jb
mov
adc
xor
fcompl
int
repnz
dec
fnstcw
sbb
xor
andb
loope
and
out
addr16
subb
jnp
mov
or
in
cmpsl
cmp
loop
mov
mov
add
rcrb
mov
addl
mov
popl
add
or
add
xchg
mov
cmp
sbb
xchg
mov
cwtl
popa
dec
cmp
testl
or
pushf
adc
fs
xor
inc
mov
jae
gs
out
inc
sbb
ljmp
mov
push
shrb
pop
pop
jp
fidivrs
ret
insb
inc
adc
repz
mov
cmpsl
repnz
jg
push
mov
mulps
pop
lea
mov
stos
mov
outsl
popf
xor
adc
lock
mov
mov
lcall
and
notb
adc
mov
cmpsl
sbb
rorb
xchg
mov
xor
arpl
xlat
and
xor
stc
fsubr
aaa
dec
push
xor
mov
add
sbb
or
int
pop
repnz
adc
rcl
mulb
enter
fwait
adc
inc
pop
fadd
dec
int3
cmp
js
pop
mulb
aad
push
xchg
flds
mov
movsb
dec
lcall
xchg
sti
dec
arpl
outsl
xchg
mov
ret
repz
and
hlt
ds
dec
mov
sbbl
dec
xor
cmp
jmp
icebp
fsubrl
addr16
jno
loope
mov
call
addr16
pusha
repnz
arpl
into
add
sti
outsb
cmp
or
rcrb
orl
fdecstp
shl
daa
sti
scas
sub
xchg
xor
orb
rolb
ja
ljmp
push
mov
xchg
dec
mov
lahf
mov
sbb
sub
mov
push
bound
pop
cmp
cmp
jle
jmp
push
rolb
adc
rorl
filds
lahf
stos
push
popa
push
out
in
les
inc
outsb
outsb
int
mov
in
ja
xchg
adc
aas
aam
jl
popa
sbb
pusha
sbb
or
loope
shrl
and
jne
push
jmp
add
out
test
mov
repz
outsb
lret
jg
xchg
popa
sub
mov
mov
push
test
pop
insl
jl
sbb
push
in
push
adcl
sti
movsb
push
leave
and
movsl
cld
fs
add
mov
cmpsb
jecxz
aaa
into
nop
add
repnz
push
ljmp
call
sub
mov
jg
sbb
mov
movsl
mov
xlat
arpl
add
inc
out
cmpsl
jecxz
lock
cmpsl
cs
iret
cmpsb
mov
add
cmp
aaa
adc
sbb
mov
or
mov
sbbl
and
iret
js
push
xchg
push
dec
cmc
addr16
xor
add
cmc
push
xor
lods
pop
cmc
mov
test
scas
shrl
sub
movsb
xchg
mov
test
vsubsd
fwait
or
lds
sbb
and
fcomps
add
mov
push
xchg
cmc
rorb
and
fcomi
add
push
test
inc
movsl
mov
aas
xchg
adc
lret
xchg
icebp
or
and
stos
inc
push
cmp
andb
daa
sbb
or
test
or
xchg
lods
mov
sbb
mov
fdivl
lods
dec
in
lcall
xchg
jmp
xor
in
ja
inc
fwait
push
daa
clc
rcrb
jle
mov
ret
lret
xor
xor
or
push
push
dec
popa
mov
add
data16
sub
sbbl
pop
stc
nop
or
jnp
lahf
cmpsb
pop
xor
repnz
std
cmp
lcall
adc
pop
sub
xchg
push
pop
mov
inc
jb
movsb
stos
bound
push
sub
out
push
ljmp
sub
ret
xchg
stc
and
iret
gs
pop
mov
sub
popa
mov
sub
mov
add
mov
mov
sub
jg
mov
jle
repz
lret
lahf
in
dec
popa
xlat
repz
imul
test
pusha
fists
stos
inc
test
lret
fs
movsb
aaa
imul
push
fstl
fwait
mov
jecxz
adc
add
sub
pushf
xor
mov
icebp
popa
fmul
fwait
sarl
movsb
adc
int
sahf
push
mov
pop
insb
pop
stos
dec
pop
jmp
sbb
stc
mov
fisttps
jl
jmp
arpl
movsb
inc
or
leave
push
das
cmpb
push
add
cs
popw
fcomps
je
cmp
xor
movsl
mov
add
in
insl
add
jl
xchg
lcall
icebp
push
subb
iret
imul
jbe
aad
jge
adc
and
into
add
into
xchg
and
int
fidivs
xchg
jae
scas
test
xchg
push
xor
sbb
sbb
fstps
xchg
orl
repz
movsl
add
testl
or
cmpsl
fisubs
inc
lock
mov
xchg
xor
dec
mov
mov
push
dec
cmp
clc
bound
imul
repz
insb
cmp
mov
fbld
mov
jecxz
cmc
mov
icebp
pop
pop
mov
jmp
push
sbb
es
mov
sar
cltd
sub
mov
mov
mov
pop
test
fnsave
dec
shrl
mov
lret
outsl
fbstp
mov
cli
out
mov
push
negb
pop
popa
pop
ret
leave
arpl
mov
jge
mov
inc
fcomi
add
fadd
push
pop
or
dec
loope
rolb
insb
xchg
push
mov
or
jo
pop
xlat
testl
sbb
jae
mov
les
in
sbb
int
xor
dec
and
in
cwtl
sbb
push
and
stos
aaa
insb
dec
adc
je
jb
and
outsl
jg
movsb
out
jne
ret
in
cmp
push
mov
push
dec
pop
inc
mov
and
lahf
xchg
push
xor
lods
or
aad
inc
decl
add
inc
mov
pop
call
cmpsl
sarb
ss
mov
ficomps
mov
xlat
lret
adcl
inc
je
xor
aaa
mov
jns
sbb
xchg
mov
aam
cmpb
pop
mov
push
adc
je
scas
aas
fwait
mov
int3
pusha
negl
jle,pt
test
lret
notb
mov
test
dec
out
js
pop
pusha
sbb
aas
inc
pop
jmp
xor
dec
sti
xorb
out
lds
sub
xchg
add
pop
imul
xchg
cld
jb
iret
mov
lret
adc
clc
enter
xchg
bound
cmp
bound
or
lahf
mov
mov
push
dec
mov
fwait
je
adc
rcrl
adc
pop
fadds
imul
decb
push
in
das
fsubl
push
mov
cld
mov
push
jl
sub
jecxz
dec
loope
addl
mov
leave
scas
shl
mov
aam
xor
stos
rcrl
testb
pop
cmp
enter
test
es
js
into
out
sarb
scas
scas
stc
int3
insb
inc
pop
xchg
mov
bound
dec
cld
jle
std
popa
cwtl
lock
mov
lock
test
and
in
adc
push
aaa
push
mov
repz
mov
shrl
in
add
test
je
loopne
dec
fwait
es
ret
sub
das
sbb
aad
mov
in
movsl
pop
repnz
out
mov
btr
pop
out
cwtl
das
cs
jae
dec
mov
insb
adc
dec
xchg
ja
pop
repz
push
xchg
inc
test
sbb
insb
popa
xor
adc
add
mov
outsl
adc
in
sub
mov
fnstcw
fnsave
sbb
adc
adc
push
xor
push
arpl
in
pushf
xor
inc
mov
inc
addl
mov
jbe
adc
testl
test
js
pop
movhps
xor
mov
cld
mov
inc
adc
enter
inc
gs
push
icebp
ds
xchg
loop
or
mov
ljmp
dec
test
lods
aad
loopne
adc
dec
outsb
inc
xchg
sub
inc
jecxz
mov
aaa
lahf
int
js
jns
mov
ret
rorl
pop
outsb
mov
inc
mov
fyl2x
sub
push
mov
insb
push
ljmp
jno
jo
inc
fcomps
sbb
imul
scas
jb
add
shlb
notb
out
int3
sub
mov
imul
fcoml
push
call
jo
in
mov
ja
xorb
call
xor
xchg
sti
repz
pushf
gs
and
adc
mov
sub
test
fsts
mov
sti
xchg
sub
inc
xlat
repz
scas
add
cmp
xchg
lods
push
lahf
or
and
bound
into
gs
sahf
push
xor
fldcw
mov
out
jge
enter
fwait
in
enter
xchg
pop
jae
and
subl
clc
popl
pop
sub
xor
pusha
idivl
xchg
cmpsb
dec
sbb
cmp
fwait
mov
xchg
jge
push
and
ldmxcsr
jb
inc
push
push
adc
imul
pusha
lds
and
pop
push
jl
and
sahf
mov
or
pop
mov
in
repz
mov
dec
jecxz
pop
lcall
imul
sub
lcall
fs
mov
into
daa
sbbl
jbe
addr16
add
addb
jl
nop
sub
push
jge
arpl
push
sbb
mov
iret
mov
arpl
cld
pop
andb
pop
in
dec
imul
push
push
shrb
fs
mov
mov
shll
mov
fmul
dec
in
dec
iret
xchg
add
adc
sbb
xchg
test
dec
cmp
sahf
and
mull
push
rolb
or
jl
push
sub
movsb
jns
jge
popa
mov
fcomps
daa
fcomps
push
arpl
fistpl
popa
popa
cmp
push
imul
jl
xchg
push
insb
pushf
pop
cmpsl
mov
mov
inc
pop
test
aam
or
outsl
add
xor
lret
and
sar
jle
lods
mov
or
int3
push
inc
data16
lock
and
push
mov
xchg
dec
or
aam
xchg
cmc
mov
and
inc
cmpsb
push
scas
icebp
push
mov
leave
repnz
jg
push
mov
inc
lcall
in
xchg
into
scas
into
fsubr
mov
mov
dec
inc
into
gs
inc
jecxz
and
jae
imull
outsb
sbb
mov
int3
cmp
arpl
cmc
adc
sbb
loope
inc
push
mov
jmp
lret
xchg
std
fbstp
jne
adc
xchg
je
int
scas
and
add
xchg
and
out
mov
cli
mov
sub
jno
or
jns
bound
and
clc
cmc
mov
inc
jecxz
nop
push
call
clc
std
cwtl
xchg
arpl
test
icebp
pop
repz
xchg
mov
or
sbb
and
loopne
mov
mov
fs
and
inc
lds
sbb
outsl
dec
in
push
add
dec
jb
jmp
rclb
popw
iret
inc
xlat
or
addr16
sub
pop
fadd
test
fdivp
jno
fcoms
cmp
lret
je
cmpsb
in
scas
push
insb
ret
hlt
lea
cld
sahf
cmc
sbb
lret
push
fucom
push
cmpsl
in
movlps
pop
mov
jnp
inc
ficoml
cmp
push
push
repnz
lods
and
cli
xchg
xchg
cli
inc
insl
movsl
mov
scas
jecxz
insb
sti
adc
lock
arpl
loopne
xor
pop
mov
push
and
lods
add
push
stos
or
pop
insl
pop
jns
sub
imul
imul
imul
repnz
cld
dec
pop
repz
pop
jp
lds
mov
clc
jnp
or
filds
push
mov
inc
cmpsb
cmpsl
xchg
add
decl
dec
pop
add
lahf
call
mov
pushl
dec
mov
jbe
push
mov
fndisi(8087
or
mov
xor
jle
jmp
filds
inc
mov
pusha
fs
test
mov
or
push
fwait
mov
rol
jge
pusha
cmc
mov
dec
stos
std
mov
cvtps2pd
mov
xchg
fldt
xchg
push
stos
adc
push
lea
call
je
and
xor
or
stos
push
xor
cmp
pop
add
add
popf
lods
nop
xor
pop
movsb
das
mov
shr
jnp
sbb
mov
dec
fnstcw
fs
mov
sbb
loopne
add
xchg
mov
shlb
es
scas
jg
push
mov
xchg
xor
adc
xor
in
push
jp
in
mov
sub
jmp
push
xchg
adcb
aas
sub
cmp
imul
dec
jmp
sbb
out
add
test
xchg
popa
inc
nop
push
fs
hlt
jge
sbb
mov
in
push
or
lret
js
rclb
pop
mov
enter
imul
jbe
xchg
jb
mov
push
pop
movb
sbb
popl
rcr
mov
adc
rclb
sbb
prefetchnta
mov
push
insb
push
popf
lahf
push
add
jbe
loop
lods
ret
pop
sub
lahf
push
dec
sarl
lds
xchg
dec
dec
adc
dec
and
fidivl
ds
dec
and
testb
xlat
outsb
cmp
enter
xor
loopne
ret
daa
pushf
ljmp
movsb
mov
or
or
imul
xchg
repz
push
in
and
and
dec
push
divl
add
ljmp
shll
out
test
mov
into
lds
movsb
push
outsl
gs
shlb
inc
push
daa
divb
cltd
or
sbb
xor
dec
sub
cs
stos
mov
fdiv
push
lahf
arpl
stos
add
fwait
test
xchg
push
jae
or
cmpsl
loopne
pop
fdivp
pop
mov
mov
push
sub
roll
out
cmp
pop
or
pop
sbb
add
insb
xchg
js
daa
and
add
mov
stc
out
lcall
cmp
in
test
sub
rclb
push
testb
inc
or
inc
cwtl
adc
inc
xchg
mov
push
cmp
adc
xchg
jne
std
fs
and
adc
adc
les
push
add
jecxz
je
pushl
push
stc
subl
inc
xorb
lock
pushf
push
cltd
add
ss
and
adc
push
pop
cwtl
sub
rcrl
pop
mov
mov
xchg
lret
in
mov
push
sub
gs
insw
enter
inc
sarl
shrb
lea
insb
inc
cmp
ja
mov
into
in
shrl
rolb
mov
fdivs
cmp
daa
xchg
sub
lds
lock
scas
jnp
fsts
in
cmpl
pop
icebp
mov
jge
jns
and
jb
inc
movsb
inc
xchg
loopne
dec
dec
iret
outsb
push
loop
dec
cmp
in
pop
loope
lahf
into
cmp
das
loop
leave
adc
xchg
andl
outsl
xor
inc
scas
push
hlt
cmp
pushf
sbb
sub
mov
fstpl
mov
out
out
sub
xchg
call
sbb
data16
inc
push
lcall
in
sbb
cwtl
les
repnz
test
es
adc
mov
pop
ljmp
lock
push
in
or
dec
mov
push
xchg
push
out
sub
dec
or
cmp
pop
pop
cmp
clc
sbbb
mov
push
ljmp
inc
testl
pop
inc
sbb
mov
test
test
pop
add
jg
int
mov
ss
sar
mov
jo
add
xchg
inc
fdivrs
mov
push
ja
pop
cmp
arpl
movsl
sub
lods
push
fdivl
cltd
mov
pop
repnz
jns
shll
bound
cmpsb
jnp
or
cmp
sti
xchg
sub
movsb
pushf
nop
mov
jnp
sub
mov
adc
daa
test
aas
sti
test
mov
sub
push
pop
dec
xchg
add
adc
dec
icebp
icebp
mov
jg
jns
xchg
pop
inc
push
jle
jmp
lret
lcall
aas
push
imul
mov
mov
mov
cli
fwait
dec
pop
sub
repz
inc
sbb
cmc
push
cmc
lods
xor
jnp
jnp
shrd
add
jle
add
mov
cmpb
cld
pop
lcall
sahf
bound
cltd
or
pop
lods
or
ffree
shll
mov
lods
icebp
mov
mov
jg
scas
push
inc
add
in
ja
int
pop
cwtl
inc
mov
in
in
call
cmpb
xor
mov
stos
pop
pop
adc
add
data16
or
test
xchg
push
dec
cmp
jno
shlb
mov
outsl
jns
xlat
rcrb
adc
sub
fwait
push
jb
scas
mov
xor
sbb
das
mov
pop
pop
jnp
adc
jnp
lods
mov
test
in
loope
add
stos
fwait
sbb
mov
subb
ret
lock
inc
xor
imul
scas
aad
fnstenv
jg
or
xlat
cmc
mov
lret
xor
cli
and
outsl
scas
push
push
mov
jmp
sbb
aas
jnp
or
mov
aad
inc
or
jp
cmp
ss
dec
loopne
jl
push
cmp
roll
adc
and
and
cmc
sbb
pushf
in
sti
mov
cmp
int
cmp
and
je
popf
sarb
ss
stc
or
arpl
sub
stc
in
call
fstpt
lea
roll
call
fidivrs
pop
mov
push
je
mov
push
xlat
std
out
scas
fnstcw
cmpsb
mov
shrl
fsts
or
push
cmp
adc
dec
jecxz
inc
jno
inc
adc
cmp
or
out
mov
mov
pop
cmpsl
enter
lds
cmpsl
add
clc
hlt
enter
adc
adc
xor
sub
add
add
repnz
enter
cmp
mov
xchg
jno
imul
sarb
mov
js
sbb
or
sbb
sbb
nop
mov
iret
rcr
pop
pop
add
mov
inc
fnstenv
jle
cmc
test
add
outsl
xchg
rcr
and
push
jmp
mul
adc
cmc
jns
mov
xchg
shlb
push
cmp
sbb
and
and
shrb
xchg
push
aaa
ret
xor
arpl
testl
mov
or
fwait
mov
in
mov
xchg
fsubs
cmc
adc
and
cmp
movsl
or
jg
jo
xchg
xor
jns
ss
aas
shlb
push
dec
lods
pop
jae
cmp
push
xchg
clc
testl
dec
icebp
stc
shrl
call
mov
test
sti
pop
insb
sub
test
in
fnstenv
ret
imul
fwait
stos
cmp
push
icebp
fadds
xor
lahf
ss
popa
fwait
xor
ljmp
sbb
sub
scas
cmp
dec
imul
sbbl
sbb
mov
dec
dec
cmp
rcrl
arpl
mov
xlat
pop
mov
lock
mov
jp
sbb
and
loop
aam
roll
lock
je
pop
mov
rcrl
add
add
popf
insl
or
scas
mov
push
sub
sbb
mov
iret
clc
outsl
arpl
mov
mov
enter
jecxz
aaa
nop
inc
inc
out
add
lret
pop
dec
popa
mov
push
and
mov
xor
cmpsb
inc
fisttpl
stos
bound
je
sbb
pop
mov
fsubp
pop
lods
jle
fs
loopne
add
xor
sub
aad
int
sub
mov
cli
xchg
jge
imul
iret
in
cmpsl
popf
call
inc
sbb
scas
out
xchg
adc
or
in
pop
ljmp
jge
adc
aas
dec
cli
popa
cltd
xor
jecxz
insl
add
add
mov
jle
jmp
lret
nop
daa
push
fcom
jb
clc
scas
mov
int
pushf
mov
cmp
mov
mov
mov
add
jge,pn
sub
mov
daa
mov
sub
push
cmpsl
int3
adc
cmc
xor
lds
mov
fnstsw
fsubl
push
sub
sub
inc
enter
rclb
sbb
lods
add
xchg
js
adc
call
mov
sbb
adc
dec
adc
cli
fildll
pop
push
ss
addr16
enter
mov
sbb
loope
les
stc
and
mov
jl
fldt
movsb
mov
es
fwait
dec
push
ret
rcrl
leave
in
jge
or
test
aaa
push
mov
pop
jmp
mov
add
or
sub
ss
pushf
sbb
dec
pop
inc
cmp
std
loope
cmpsb
inc
sbb
dec
dec
sahf
pop
scas
inc
pop
cmp
cmp
push
aaa
mov
lahf
xchg
insl
dec
cmp
imul
je
iret
mov
and
sbb
nop
push
jbe
loopne
rclb
dec
std
inc
addr16
xchg
sarl
pop
mov
mov
sub
cmpsl
sbb
cltd
sbbb
mov
mov
mov
ret
inc
mov
dec
dec
cmp
dec
fiadds
aas
push
call
mov
test
jp
cmpsb
cmp
inc
add
rcrb
mov
xchg
jne
push
dec
gs
mov
adc
pop
push
xor
xorl
cmpsb
add
fstps
movsb
loopne
enter
pop
pop
insl
mov
mov
adc
daa
ljmp
insl
test
repnz
int3
cli
push
push
addb
dec
xlat
dec
and
testb
rcl
test
out
pop
mov
fcomps
imull
cmpsb
loope
xorb
sahf
sub
dec
push
jne
and
ret
clc
mov
or
divb
ljmp
adc
xlat
daa
ljmp
mov
add
dec
popa
mov
push
lcall
out
xchg
icebp
xor
dec
adc
popa
xor
mov
or
inc
fsubrp
mov
data16
jb
enter
nop
sbb
out
dec
enter
xchg
jmp
xchg
out
add
js
xchg
or
fwait
jo
icebp
mov
dec
bswap
pop
shll
push
adc
xchg
call
mov
jo
dec
dec
pop
add
and
inc
mov
mov
xchg
cmpb
push
icebp
sahf
add
cmp
inc
xlat
testl
in
mov
mov
xchg
dec
in
stos
dec
fmul
fmuls
inc
xor
pop
jmp
cld
or
cmpsb
clc
in
jo
mov
mov
jae
mov
and
or
mov
dec
add
inc
movsb
sbb
pop
repz
mov
sbb
mov
sub
mov
xchg
out
test
pop
cmp
fisttpl
insb
scas
frstor
lods
shlb
add
cmc
shrb
adc
and
inc
hlt
mov
jbe
notl
jno
mov
jmp
mov
cmc
mov
jge
cmc
or
push
mov
cwtl
cmp
leave
movsl
sbb
movsl
lock
push
push
xor
pushf
push
mov
cmp
push
ja
push
fs
cs
mov
xchg
std
inc
push
loop
jne,pt
dec
gs
push
les
mov
push
jle
pop
and
sub
push
cs
pop
mov
mov
leave
lret
cmp
test
sbb
xor
fs
shrl
out
ja
les
or
not
shrl
test
incl
jns
stos
inc
in
sti
rcr
pop
pop
push
inc
push
in
cmp
inc
inc
aam
cmp
pop
and
test
mov
and
mov
dec
arpl
fsubrp
movsl
outsl
mov
ret
pop
sbb
lods
iret
out
mov
cs
push
adc
push
lock
call
mov
push
scas
push
outsb
test
jno
dec
mov
inc
fsts
orl
pop
mov
xor
push
int3
fsubrl
leave
sbb
or
sub
sub
or
pop
mov
xchg
sub
movsb
fildll
pop
iret
mov
xlat
sub
jge
shrl
enter
sbb
enter
pop
imul
ret
sub
pushf
xchg
sub
mov
add
aam
sbbl
repz
out
mov
push
cmpsb
push
pop
mov
inc
lcall
loope
adc
cli
jge
jg
and
pusha
push
or
testb
mov
mov
push
in
push
in
push
jns
inc
dec
lea
aaa
mov
fs
out
dec
pop
scas
clc
sbb
push
sub
pop
mov
add
inc
mov
push
add
movsl
inc
pop
sub
shlb
mov
insl
sub
cltd
imul
push
sub
nop
lock
stos
mov
scas
aaa
jmp
lea
push
stos
jmp
inc
push
xchg
out
bound
ret
inc
xlat
sub
out
mov
and
daa
mov
mov
jge
cmp
or
lret
out
push
popa
sub
cltd
std
outsb
daa
arpl
or
add
popa
xlat
inc
push
jns
dec
ljmp
movsl
mov
shrl
mov
mov
setb
mov
fimuls
addl
sub
popa
roll
xchg
inc
and
jae
insl
sub
leave
clc
stc
dec
hlt
jecxz
sbb
stc
stc
test
notl
mov
dec
js
jno
sub
dec
mov
xor
aaa
sarb
arpl
and
or
in
aaa
ss
mov
sbb
pop
jbe
shll
mov
fsts
mov
es
out
sub
or
jno
out
and
lea
jns
gs
lahf
xor
push
cmp
dec
loopne
fstpl
cli
inc
test
push
scas
inc
mov
bswap
movsb
cmp
xchg
mov
dec
fisubrl
scas
add
ret
pop
sbbb
push
push
mov
pop
outsb
jl
jnp
add
cmp
xchg
adc
or
mov
aas
and
jnp
enter
mov
movntq
out
inc
shrb
jle
mov
dec
mov
mov
adc
movsb
mov
add
js,pt
loope
push
cltd
add
andl
rclb
or
or
int
sub
lret
add
lock
mov
outsl
lret
aaa
ret
push
hlt
stos
mov
in
jb
jo
fisttps
jae
add
mov
add
imul
and
nop
addr16
data16
cmp
push
or
fdivrl
loopne
push
fisubl
mov
or
and
or
lret
lock
push
jno
sbb
mulb
lods
fistpl
sbb
ljmp
add
aaa
inc
fildl
enter
fs
pop
mov
dec
call
enter
insl
jmp
leave
cmpl
ret
cmpsb
imul
neg
popa
push
dec
scas
out
jle
stos
fbld
push
jle
adc
mov
aad
stos
inc
mov
ret
ret
clc
or
insl
add
jle
pop
es
mov
adc
jmp
test
scas
add
xor
lds
push
call
and
outsl
push
jecxz
mov
into
mov
xcrypt-cfb
cmpsl
movsb
fwait
fsubl
mov
lock
cmc
imul
and
sub
jl
add
mov
push
insb
fwait
jae
cmpsl
push
cmc
outsb
ret
sub
jg
ds
push
mov
sbbb
out
loop
das
xor
cmpsl
ret
xor
push
xchg
sub
rcll
imull
daa
out
repz
ret
push
push
push
cmp
out
and
mov
rorb
div
mov
jmp
paddusb
mov
negb
cld
push
add
call
mov
and
cmp
sbb
inc
cmpsb
jmp
add
and
xor
cmp
pop
pop
xchg
enter
fwait
imul
inc
fmul
popa
pop
mov
das
ficompl
lea
xchg
add
add
int
rcll
pop
sahf
mov
ja
clc
clc
pop
ds
test
sysenter
movsb
push
shlb
ret
add
je
loopne
xchg
loope
cld
mov
jns
xchg
and
inc
movsl
lds
aad
xor
cmp
push
jge
loop
test
xorl
cmpsb
mov
cltd
mov
mov
pop
sbbl
cmc
push
jbe
arpl
or
shlb
cmpsb
push
push
in
jp
cmp
add
push
test
inc
movsb
adc
sbb
push
cmpsl
push
mov
cltd
jae
xor
push
inc
mov
lea
add
sahf
mov
stos
mov
adc
inc
mov
inc
pop
push
fildll
daa
mov
pop
pop
mov
shll
lret
dec
nop
enter
dec
jmp
sbb
arpl
mov
fsubl
sti
gs
ss
jge
cwtl
inc
xchg
xlat
sub
mov
jp
addr16
decl
jge
inc
cmp
push
adc
jmp
mov
adc
pop
jmp
or
ja
and
idiv
push
inc
jmp
rclb
xor
outsb
push
cli
jbe
cmp
dec
outsb
sar
xor
dec
pop
cmp
mov
dec
sub
or
cmp
xchg
stos
in
int3
sbb
pop
out
divl
adc
jl
jge
mov
outsb
inc
andb
pop
cmc
ja
add
sbb
std
dec
inc
mov
js
or
adc
daa
icebp
push
je
mov
xchg
sub
stos
xchg
add
or
in
cmp
jp
push
mov
mov
mov
fsubrl
jg
xchg
cltd
xor
mov
jbe
sub
adc
fxch
xchg
test
dec
aaa
adc
mov
add
jb
dec
sub
fadd
rol
int3
fdivrp
mov
sbb
add
aaa
jmp
cmpsl
sub
mov
lahf
sbb
jcxz
add
in
out
mov
inc
cwtl
jbe
adc
push
lcall
ljmp
mov
xor
mov
dec
sti
ret
jae
movsb
xchg
fistl
adc
xor
je
sub
sarb
push
fwait
in
inc
shrb
outsl
jecxz
dec
gs
add
pop
jno
add
pop
inc
imul
out
push
in
inc
dec
into
lcall
ja
std
sub
daa
mov
stc
sbb
cmp
xchg
movsb
cli
add
sub
xor
fwait
push
movsb
cmp
insl
jge
sub
aas
aad
mov
ljmp
cmp
mov
fidivl
iret
adc
pop
andl
jp
outsb
and
iret
in
in
or
xor
into
in
push
inc
fcoml
movsb
cmp
mov
scas
mov
xchg
cmp
xor
jno
ds
xchg
sub
push
push
movsb
add
cld
xchg
movsl
insl
add
sbb
ljmp
xorl
push
in
lock
inc
mov
mov
mov
pusha
data16
add
das
or
jae
xchg
mov
dec
or
mov
nop
daa
pop
xchg
sub
inc
es
insb
iret
loopne
mov
inc
shrb
xor
mov
pop
test
dec
jns
ljmp
daa
mov
or
lock
sub
and
dec
sar
xchg
ret
faddl
inc
xchg
sub
hlt
mov
scas
and
fldcw
cmp
and
test
fsubrl
sub
and
mov
adc
jp
lret
sti
loopne
fisttpl
mov
adc
and
ljmp
das
add
xor
inc
dec
addr16
std
insb
insb
popf
arpl
ljmp
sti
and
pop
sbb
mov
in
sbbl
adc
stos
dec
mov
mov
pop
mov
repnz
scas
mov
mov
jne
mov
lret
xor
aas
adc
push
mov
mov
jbe
xor
mov
cmp
mov
inc
xchg
inc
sub
inc
lods
imul
xchg
adcl
mov
dec
and
or
or
fimull
movsb
inc
xor
mov
popa
lahf
and
loopne
mov
and
sbb
adc
cli
adc
int3
lcall
fstpt
fimuls
stos
push
loopne
fdiv
xchg
ficompl
cmpsb
inc
mov
adc
mov
add
mov
decb
imul
in
movsl
imul
cmp
sub
adc
cmpl
mov
lds
dec
push
fldt
stos
fcom
pop
pop
jo
push
jge
sbb
lods
push
mov
xor
ja
sbb
aad
xor
ljmp
pop
cmp
sbb
jb
notb
leave
shl
icebp
mov
push
iret
les
xsha1
cmpsb
lea
mov
in
ret
xchg
xchg
xchg
loopne
mov
mov
ret
xchg
popa
sub
imul
lock
addl
loope
mov
and
mov
pop
sub
cs
outsb
cmp
movsb
shlb
xor
mov
fwait
mov
adc
incl
xchg
int
jnp
inc
or
test
out
cmpsb
sbb
scas
push
ret
push
mov
lods
fidivl
add
cmc
call
iret
data16
lret
lea
iret
add
mov
push
sub
and
pop
xchg
cld
adc
rorb
test
jae
xor
cmpsl
xchg
dec
adc
incl
mull
dec
loopne
sbb
mov
and
scas
enter
cmc
xchg
out
pop
mov
aad
pushf
pop
fdiv
cmpsl
jle
lcall
int3
or
popf
insb
pusha
dec
sbb
push
into
in
fidivrl
xchg
inc
add
sbb
mov
enter
mov
xchg
inc
jnp
jb
or
xchg
lcall
inc
xchg
and
push
pop
fdivrs
pop
mov
in
add
lds
jo
cmp
cltd
push
inc
out
or
test
xchg
pusha
jb
lret
mov
pop
push
push
je
mov
fbld
xor
xor
pop
sub
pop
lahf
push
dec
mov
lods
int3
lret
cwtl
stos
cld
in
xor
inc
lahf
je
leave
leave
into
gs
push
testb
jmp
sub
and
pop
mov
arpl
cmpl
or
mov
nop
call
xor
mov
bound
in
insl
add
mov
push
xor
lcall
pop
popa
cmc
cmpl
xchg
int
out
push
divb
push
and
scas
inc
popf
je
das
lret
ds
and
repnz
sbb
shll
loopne
mov
mov
int3
addr16
xor
in
es
sbb
mov
xor
cli
test
addr16
adc
fisttpl
sbb
mov
sbb
cmpsl
int3
xor
adc
test
pop
divb
fdivrs
or
jmp
repz
negb
daa
cmp
sbb
mov
cmp
aas
pusha
inc
pop
jnp
sahf
jmp
aam
inc
imul
lods
mov
imul
push
shrl
sar
mov
lods
inc
enter
test
ss
cmpsb
xor
push
jge,pt
jo
cmpsl
ds
stc
nop
mov
cmp
jecxz
int
mov
pop
jae
and
mov
leave
mov
je
les
mov
cmp
out
lods
insl
jae
arpl
xchg
add
lea
mov
rcrl
dec
popl
inc
jnp
sahf
mov
xlat
dec
xchg
cmc
adc
and
loope
out
sti
push
jp
pop
mov
fnstenv
inc
mov
jge
fdivs
push
mov
pop
mov
jmp
push
mov
shll
std
test
je
add
fisubl
adc
lahf
ss
imul
jbe
mov
vaddsubpd
pop
mov
ret
ss
sub
je
ja
cmpsb
cmp
inc
xchg
ljmp
loop
push
test
stc
in
xchg
gs
sti
sub
lods
sub
and
insl
iret
lcall
add
xchg
pop
mov
or
add
fsubr
push
decl
sbb
js
scas
and
inc
or
fldl
test
push
xor
xorl
test
fidivl
les
mov
mov
test
fs
jbe
pop
out
push
pop
cli
or
jb
or
in
arpl
dec
push
xor
add
cmpb
inc
mov
ljmp
fucom
sbb
lods
jne
and
sub
push
mov
pop
icebp
xlat
pusha
in
pop
stc
js
and
push
jns
into
xchg
sub
xor
out
aam
mov
or
popa
mov
pop
lock
das
adc
in
shl
fdivs
ret
mov
imul
inc
data16
xchg
arpl
jecxz
int
sbb
jo
and
je
fnsave
xor
roll
sub
sbb
and
rcrl
mov
aad
inc
bound
into
movsl
adc
insl
jmp
ds
mov
repnz
pop
fstl
mov
jae
mov
lds
out
and
popl
pop
insb
rcrl
jg
mov
stc
loopne
xor
aaa
adc
cmp
addb
push
in
scas
cmp
fistps
clc
outsl
ss
or
jg
mov
sbb
mov
adc
push
mov
push
fisttpll
push
cltd
clc
sub
mov
iret
gs
cs
jb
adc
fidivrl
fstpl
mov
xchg
out
iret
push
inc
jbe
push
repnz
cmc
idivl
int3
or
loope
popa
mov
insb
rorb
cmpsb
jb
inc
test
popa
pusha
or
stc
test
pop
inc
cmpsl
popf
mov
mov
pop
loope
cld
inc
lcall
insb
aas
add
xlat
repz
sbb
das
fnstsw
mov
sbb
pop
shrl
rolb
cmp
jle
das
cmp
pop
or
cmp
cmp
insb
xlat
outsb
sahf
jne
insb
arpl
pop
adc
cmpsb
es
ficoml
sbb
jnp
lds
addr16
cs
jg
cmpsl
jne
mov
dec
inc
repnz
hlt
inc
loope
outsl
mov
fcomi
lea
mov
ss
adc
movsb
xor
rorb
add
stos
sbbl
int
imul
test
aas
repz
and
leave
shrl
mov
test
sub
jnp
aam
sbb
jnp
xor
addr16
les
test
adc
push
xor
test
push
mull
dec
inc
cld
dec
and
in
mov
inc
cmpsl
fstl
aad
lods
jae
filds
fnsave
js
fnstcw
push
or
cltd
inc
mov
ret
int
mov
adc
xchg
mov
and
push
repz
xor
lock
fxam
adc
fs
and
test
mov
cltd
in
fstl
push
in
pop
dec
jl
scas
lods
or
aad
inc
xor
test
out
loope
pop
subb
shl
lods
push
mov
inc
int
sbb
pushf
jg
pop
push
int3
arpl
or
negl
dec
gs
xor
push
pop
jge
jecxz
fs
lods
push
dec
pop
xor
clc
dec
adc
into
in
and
jb
jns
icebp
fwait
sbb
pop
xchg
sub
enter
stos
add
pop
xor
scas
jbe
or
cmp
ja
test
sbbl
mov
adc
mov
sarb
cmp
inc
scas
scas
inc
icebp
lret
adcl
add
jecxz
bound
xchg
cli
push
jnp
sub
pushf
sub
aaa
push
sbb
pmaxub
xor
push
push
inc
pop
and
inc
mov
scas
pusha
inc
lea
aaa
movsl
mov
or
sbbl
out
and
repz
aas
mov
fdivs
ss
in
iret
mov
in
inc
mov
xchg
outsb
out
jl
cmp
pop
fiadds
adc
cmp
nop
mov
in
andl
jl
mov
push
jbe
popf
mov
push
mov
sub
ja
dec
xor
in
test
fdivs
push
mov
int3
jb
je
jge
notb
dec
lcall
xlat
pop
nop
and
cmp
dec
sahf
sub
or
insb
shll
pop
jp
or
cmp
repz
repnz
loope
dec
adc
push
xor
mov
pop
mov
scas
gs
mov
jbe
insb
xchg
add
cld
filds
in
xor
cs
sub
outsb
or
lahf
mov
out
dec
outsb
lahf
sbbl
adc
fildll
mov
pop
pushf
mov
pop
dec
cwtl
mov
and
stc
pop
xlat
xlat
hlt
mov
inc
mov
sbb
and
cmc
int
pushf
arpl
jl
mov
ret
jnp
nop
sbb
fwait
push
jo
mov
addr16
add
push
scas
cmp
aaa
jnp
xor
adc
jb
pop
nop
jmp
repnz
mov
push
pop
mov
xor
test
adc
scas
inc
cmp
es
addr16
shrl
mov
aaa
dec
bound
pop
jae
int3
adc
pop
push
xchg
mov
dec
push
out
sbb
push
push
jne
xchg
sub
mov
rolb
sub
jae
aas
rcr
data16
inc
cwtl
adc
cli
xor
inc
jmp
rcrl
addl
or
mulb
push
das
gs
xchg
mov
xlat
rcrb
mov
xchg
popf
cwtl
das
iret
push
ret
mov
cmp
and
pop
rclb
mov
pop
add
cli
fld1
sub
lcall
pop
cmc
test
fisubrs
lret
jmp
sub
cltd
pusha
or
pop
into
xchg
das
fcmovu
outsb
add
add
mov
pop
movsl
ljmp
cmc
sbb
adc
orb
out
pop
cmp
fbld
jge
icebp
mov
mov
in
nop
xchg
xchg
jbe
inc
dec
ficoms
mov
fsubrl
gs
mov
cld
mov
fiadds
xchg
adc
cmc
fwait
xor
xchg
popf
repnz
mov
xchg
jo
push
outsl
mov
cmpsl
push
mov
xor
popf
daa
cli
repz
gs
imul
in
adc
jmp
jb
mov
mov
mov
sub
sbb
aas
in
loopne
gs
add
in
andl
test
dec
jne
lea
xchg
ret
inc
aas
jmp
pop
jp
scas
cmpsb
cmp
xchg
je
je
xchg
add
jl
sbb
lcall
aaa
push
sbb
xor
push
movsl
xor
inc
push
xchg
mov
pop
mov
sbb
jle
adc
push
nop
scas
aaa
push
mov
dec
xor
insb
pop
mov
scas
out
push
fsubr
dec
sbb
inc
cmp
push
sbbl
mov
cmpsl
mov
movsl
push
dec
scas
pusha
xorl
cli
loop
dec
les
push
and
sbb
push
sub
cmp
mov
outsl
or
popa
insl
mov
outsl
insl
imul
outsb
add
xor
lds
jo
add
std
clc
iret
testl
cmp
push
out
int3
lcall
sbb
in
adcb
pusha
push
lcall
rcl
mov
dec
inc
hlt
cmp
out
xlat
pop
mov
loopne
repnz
mov
pusha
mov
out
cld
xchg
cld
ret
mov
xor
dec
pop
lock
test
adc
cmp
inc
out
jne
rolb
xchg
jne
or
es
sub
sbbl
sbbb
lret
popa
cmp
adc
enter
enter
cmp
jmp
and
fidivs
stos
cmpsb
daa
xchg
mov
movl
mov
inc
loop
push
adc
push
jne
xlat
jns
jecxz
mov
jmp
sbb
imul
inc
test
loope
add
frstor
mov
mov
jmp
inc
xor
jnp
ret
pusha
fsubrs
idivb
sub
cmp
or
adc
mov
dec
icebp
mov
ret
push
and
hlt
int
inc
sbb
dec
mov
fsubrs
sbbl
lea
insb
mov
cmc
push
mov
fdivrs
std
jnp
xchg
push
out
div
mov
pop
adc
add
cs
cwtl
je
inc
mov
xor
xlat
data16
mov
clc
dec
cmp
add
fadds
sbb
divb
shll
adc
xchg
ja
mov
cs
sub
jo
mov
adcb
push
aas
mull
in
ss
sti
call
fwait
jns
mov
mulps
out
in
lahf
ss
jle
xchg
mov
mov
ja
mov
inc
cmp
cmp
cmp
xchg
add
pop
jo
mov
inc
bound
inc
test
fucomip
loopne
or
in
xor
push
inc
jp
sub
pop
sbb
jl
leave
popa
in
and
inc
mov
stc
or
xchg
nop
sub
stos
in
or
pop
cmp
pop
jbe
jbe
cmp
dec
imul
xor
iret
mov
fst
or
popf
insl
gs
shll
and
jns
scas
pop
loope
xor
jne
mov
jmp
inc
fs
push
test
test
gs
lods
mov
mov
leave
cmc
xchg
mov
xchg
xchg
cmp
fadd
shl
mov
mov
cld
lock
test
lods
inc
pop
lret
out
shrl
jle
in
xchg
cmp
insl
pop
test
and
fiaddl
das
push
cmp
cmp
push
dec
jne
push
fiaddl
or
stc
jl
cmp
in
aas
shl
jo
jns
aam
inc
call
bnd
inc
mov
js
sbbb
movsl
mov
inc
xchg
xchg
push
lret
cwtl
int3
xchg
sbb
mov
xchg
xchg
clc
push
fidivl
and
add
int3
cmp
popa
xor
xor
push
xchg
pop
and
ljmp
rcrb
scas
dec
jo
mov
dec
int
xlat
push
jmp
xchg
cmp
dec
xor
sub
aaa
jmp
mov
add
jo
fwait
sbb
jnp
sbb
xor
cs
imul
in
outsl
daa
cltd
scas
xlat
jnp
sub
mov
hlt
add
imul
xchg
popf
cmc
loope
int
outsb
js
and
es
sbb
xchg
inc
pushf
xor
mov
insb
les
add
sub
jb
inc
mov
hlt
out
hlt
sti
pop
mov
sub
and
or
jno
mov
mov
outsl
adc
imul
rolb
add
adc
mov
xchg
popa
pop
xchg
sbb
imul
mov
xchg
pop
add
into
cmc
push
push
and
ljmp
jl
xchg
mov
inc
aas
rol
adc
cmpsl
cmp
xchg
std
xchg
les
sahf
hlt
stc
cmpsb
les
data16
ss
xchg
pop
fwait
lret
mov
dec
inc
jp
push
fistpll
popf
lods
outsb
xlat
movsb
inc
jecxz
insb
add
jl
mov
in
mov
pop
setb
test
mov
mov
mov
cmp
xchg
xchg
imul
inc
shr
xor
scas
push
adcb
leave
loop
sbb
mov
jnp
xor
das
adc
dec
cwtl
or
rcr
jp
das
lods
sbb
mov
adc
fmull
push
lock
rcrl
insl
stc
push
int
out
lods
fwait
aad
pop
inc
jmp
das
jnp
popa
lods
push
sbb
insb
mov
in
pop
mov
mov
xlat
gs
or
add
xor
dec
and
sti
inc
jb
rcll
sbb
in
inc
repnz
xor
jbe
ret
das
mov
pop
and
push
fdivl
fldt
fwait
xor
lock
or
and
mov
inc
cmp
out
sub
imul
jge
jecxz
sub
mov
daa
lds
call
add
ds
popf
pop
repz
in
pushf
mov
fnstenv
xchg
jle
shll
in
pop
es
inc
call
mov
mov
aas
std
xchg
fisttps
push
lea
jne
mov
lcall
mov
call
pop
add
mov
sbb
lods
aad
sub
ja
sub
adc
mov
pop
pop
lock
test
or
mov
jae
adcb
sbb
push
xchg
cmpsb
push
ret
neg
push
test
sub
jo,pn
pop
add
adc
shlb
bound
repnz
inc
or
test
xchg
fidivs
mov
pop
lahf
push
data16
jge
outsl
xorb
xor
inc
shrl
scas
jnp
or
out
ljmp
jno
push
in
jb
push
mov
nop
daa
jb
adc
std
and
mov
repz
dec
in
inc
fidivrs
adc
mov
jno
pop
mov
pop
scas
mov
sbb
pop
mov
mov
mov
sbb
es
into
push
fnstsw
inc
sti
mov
push
add
repz
pop
mov
rcrb
sub
dec
add
or
fsubl
mov
jae
cmpsb
call
cmpsl
cmp
dec
outsb
insl
hlt
aas
pop
and
xor
xor
pop
nop
and
mov
cmp
xor
push
aam
nop
xchg
or
cmp
mov
les
jg
pop
fisttpll
pop
push
popf
and
pop
outsl
andb
dec
stos
sbb
aad
xchg
mov
fcomps
sub
stc
rcrb
movsb
or
or
int3
cwtl
das
sbb
mov
cmovl
out
sbb
pop
cmp
aad
cmp
test
les
addr16
jg
lea
jle
and
lea
loope
add
int3
pop
imul
mov
test
sbbl
or
arpl
cmp
ljmp
test
stos
shlb
mov
xor
jge
sub
jl
shll
push
pop
mov
jne
std
mov
add
inc
fisubs
or
cli
fsubr
notl
shlb
and
dec
arpl
jb
cmp
repnz
sub
adc
lock
test
in
nop
loop
test
loop
cmp
int
scas
std
jmp
push
bnd
mov
or
in
adc
xchg
mov
add
xchg
xor
cmpsl
adc
in
mov
aaa
and
shlb
stos
mov
jns
mov
sub
ja
lahf
pop
add
and
es
inc
xchg
or
jecxz
daa
inc
fwait
ret
push
iret
mov
and
push
into
int
int
lock
fwait
dec
enter
jno
lahf
jae
dec
or
nop
xor
sbbl
jg
mov
ret
mov
or
add
clc
shlb
inc
cli
inc
out
inc
cld
adc
push
jbe
shll
push
lock
adc
call
scas
jmp
pushf
cwtl
mov
lret
jno
jmp
push
fisubrl
jno
dec
popa
cmc
adc
jg
push
cli
inc
testl
add
xchg
hlt
pop
inc
pop
xchg
jmp
movsb
pop
sub
xchg
scas
sahf
push
inc
or
call
sub
mov
jnp
pop
inc
inc
or
rcl
pop
lret
nop
fisubl
cmp
jmp
dec
aaa
idiv
xchg
jle
aad
mov
dec
cmc
sbb
sbb
popa
sub
add
jecxz
xchg
stos
xchg
add
xor
lea
and
loop
ja
repnz
lock
push
jnp
push
jmp
in
out
or
lahf
push
add
fbstp
sti
loopne
xchg
adc
sbb
mov
js
mov
push
movsl
push
stos
jp
sub
dec
mov
ja
ficoms
sbb
in
mov
fisttpll
sbb
scas
call
inc
sbb
or
popf
mov
push
movsl
jge
and
xchg
subl
movsl
vmovsldup
jle
cmpsl
shl
push
rolb
dec
test
mov
dec
jl
adc
cmp
xor
aaa
mov
sub
cmp
dec
loop
es
mov
aam
xchg
mov
out
sbb
inc
fcomp
repnz
pop
lret
test
push
mov
mov
iret
ds
cmp
cwtl
mov
bound
fwait
imul
out
push
fdivl
scas
sti
xchg
iret
mov
lret
decb
mov
jb
aas
cmp
mov
adc
into
cltd
or
cmpsl
push
in
fnsave
shrl
jb
mov
sub
xchg
jle
pop
mov
adc
cmp
push
gs
xor
cmp
push
xor
push
fsubrs
adc
div
sbb
jge
pusha
imul
xorl
into
gs
aas
sahf
jl
in
xchg
imul
sbb
mov
sbb
mov
loope
lahf
aam
mov
mov
movsl
sub
outsb
ds
hlt
sub
shlb
aam
scas
leave
fwait
add
inc
jmp
mov
mov
repz
and
ret
call
into
fstpt
or
insl
mov
fisubrs
adc
seta
in
cmp
movsl
fstl
xchg
test
lcall
adc
clc
or
push
fs
mov
dec
sbb
jne
sub
gs
pusha
or
cmovs
dec
or
out
inc
cmp
cmp
jg
fld1
or
mov
adc
add
test
dec
dec
add
test
imul
mov
iret
gs
xor
adc
roll
push
jne
xor
cmp
cmp
call
mov
cmp
and
sub
cmp
shrl
js
add
mov
pushf
out
add
fcomps
jge
addr16
aaa
and
cli
leave
mov
gs
fstp
out
xchg
test
cmp
or
mov
or
adc
stc
iret
dec
dec
jle
and
xchg
int
lret
inc
cli
inc
std
in
stc
mov
xchg
fdivl
xchg
adc
into
xlat
pop
mov
or
mov
sub
sbb
arpl
add
add
pop
es
sub
fcmovnu
inc
xchg
xchg
jns
adc
xlat
test
xchg
sub
icebp
rcrl
aam
sbb
jo
test
fwait
stc
mov
test
sbb
ja
andl
push
push
hlt
jge
pop
and
push
pop
and
andl
sbb
fldl
mov
sbb
ds
or
mov
mov
cmp
test
lock
out
and
aaa
pop
xchg
std
iret
sub
arpl
lds
or
sbb
insb
aaa
scas
sti
test
push
lds
js
sarb
mov
mov
scas
insb
pop
scas
sbb
pop
cmpsb
cmp
sub
pop
and
or
divl
cs
sub
pop
pop
mov
xchg
sbb
fstp
xchg
mov
jg
pop
leave
rol
loope
push
imul
leave
sbb
fstps
jl
push
jne
and
test
out
ficomps
je
outsb
data16
xchg
xchg
ret
pusha
push
aas
ret
sbb
pop
push
fdivp
cmpl
push
lret
mov
std
ja
sti
test
lret
test
inc
aad
leave
jmp
int
dec
mov
repnz
push
dec
xchg
sub
mov
repz
push
test
sti
js
fldt
adc
pop
lret
pop
adc
fidivrl
mov
clc
mov
push
aaa
mov
xorb
xchg
pop
lret
inc
jp
fsubrs
mov
test
hlt
dec
sbb
hlt
adc
nop
mov
in
jp
sbb
stos
xor
aam
aas
pop
int
push
cld
cmp
cwtl
icebp
mov
imul
ja
stos
and
xchg
push
inc
mov
sub
ret
inc
xlat
jno
popa
jne
cmp
xchg
or
int3
inc
das
pop
test
jno
adc
sub
dec
call
ret
or
or
sbb
mov
dec
out
xchg
xchg
mov
pop
mov
adc
decb
frstor
out
incb
add
mov
sub
lds
loop
push
les
xor
dec
shl
pop
das
es
dec
bnd
cmp
lds
add
movsb
inc
rcrl
mov
mov
cmp
and
movsl
loop
dec
dec
inc
stos
out
jo
cmc
je
insl
jb
cltd
aaa
dec
test
jmp
push
lds
sahf
leave
push
aas
push
fsubrp
and
inc
mov
fcmovu
lcall
pop
shr
into
daa
inc
arpl
rcrb
sub
repz
xchg
xor
std
and
imul
out
test
adc
push
pop
ret
mov
outsb
pop
xor
cmp
sub
les
mov
gs
nop
aam
nop
out
test
mov
add
cmp
xchg
mov
scas
pop
jmp
aas
lea
fcompl
jmp
mov
add
orb
movl
dec
mov
out
sub
dec
daa
aaa
clc
ret
sub
loop
imul
divb
inc
push
jmp
push
in
stos
inc
inc
es
call
xchg
ljmp
imul
cli
push
out
sub
inc
es
shrl
ret
add
movsl
xchg
push
inc
addr16
jmp
add
stos
inc
dec
and
sub
arpl
test
inc
jmp
mov
in
jns
add
jbe
cmp
dec
lea
data16
out
addl
lahf
adc
pop
mov
pop
cmp
dec
sub
dec
in
adc
insb
nop
push
ljmp
fsincos
in
test
fildll
fldt
into
popa
into
test
lret
push
pushf
scas
adc
imul
es
stos
xor
ret
mov
pop
nop
sub
aam
inc
xchg
push
addr16
fidivrl
mov
addl
mov
sub
fcmovne
add
mov
xor
aaa
mov
ret
jle
adc
and
mov
or
xchg
pop
test
rcrb
cmp
stc
jg
lods
dec
rcr
add
ss
adc
addr16
fisubl
or
ss
fldcw
addr16
mov
xchg
gs
fistps
mov
loopne
ss
mov
add
rolb
int
lock
jle
jne
lods
ja
jb
cmpsl
mov
push
sub
aad
inc
repz
xchg
stc
xchg
fimuls
cmp
out
pop
xchg
push
clc
push
adc
jecxz
icebp
inc
or
lock
cli
int
pop
mov
ret
ja
jb
mov
xlat
ret
mov
or
pop
dec
dec
outsb
idivb
fdivl
pop
push
int
iret
dec
mov
fnstcw
daa
sahf
arpl
fadd
pop
push
cmp
jp,pt
pop
imul
dec
jg
sahf
xor
aas
inc
fmull
cs
loopne
cli
es
movsb
scas
xchg
fs
or
add
movsl
das
adc
sub
ljmp
ds
push
dec
lahf
pop
fxch
adc
xor
and
cwtl
in
mov
push
lods
pop
push
push
pop
jg
lret
scas
sub
xchg
js
mov
insb
jmp
out
scas
sub
or
fisttps
imulb
in
sub
xor
inc
mov
add
push
xchg
lcall
mov
shlb
jge
or
fwait
test
out
data16
popa
sbb
dec
inc
inc
inc
arpl
test
std
fdivl
ficompl
call
addr16
jle
mov
outsb
mov
sbb
outsl
adc
roll
xor
sbb
xor
imul
push
cmc
inc
ljmp
push
mov
arpl
or
loopne
test
mov
fsubrl
pushl
jmp
pop
sbb
out
leave
pop
lcall
pop
test
xlat
pop
mov
pop
je
xor
sbb
inc
add
pop
popf
mov
cmp
jge
clc
hlt
pop
cmc
out
xchg
fwait
xor
test
mov
fwait
xor
fnstenv
jb
dec
movsb
arpl
xchg
xchg
vdivsd
mov
test
sbb
orb
idivb
imul
pushf
pop
nop
daa
mov
jmp
neg
push
pop
sahf
dec
loop
daa
adc
call
idivb
arpl
jg
mov
mov
pop
sahf
ja
nop
daa
subl
notb
nop
sub
jg
ljmp
pushf
cmp
out
aaa
dec
pop
dec
dec
rcl
dec
mov
cmpsb
movsb
jnp
pop
mov
pop
sbb
stos
xchg
idiv
or
test
fs
xchg
outsb
pause
scas
xchg
dec
add
push
mov
add
mov
mov
pop
cmp
xchg
cs
out
pop
jmp
cld
inc
pop
sub
cmp
push
test
push
pusha
add
sub
bound
pop
mov
push
jae
insl
and
mov
jle
fwait
cwtl
inc
push
lret
sub
push
scas
sbb
std
dec
in
adc
or
repz
inc
xchg
push
xchg
push
arpl
outsl
fisttps
lds
movsb
xchg
out
mov
or
mov
jmp
dec
and
or
lea
xchg
scas
add
ds
push
mov
fdivp
scas
push
test
int3
mov
iret
dec
pop
jge
mov
inc
sahf
out
pushl
dec
icebp
test
mov
add
aas
push
and
xchg
adc
add
mov
imull
lret
ljmp
jb
js
mov
arpl
dec
dec
mov
in
push
push
inc
push
popl
mov
dec
lock
push
ljmp
sub
mov
sbb
dec
iret
fisttpl
pusha
daa
call
sub
add
inc
stc
sbb
js
add
sti
call
rorb
rclb
push
jo
arpl
filds
test
test
mov
jne
or
lret
xchg
adc
fsub
sub
pusha
xchg
cmp
incb
push
mov
adc
out
pop
pushf
fsubl
mov
imulb
aam
jae
andb
shl
cld
out
pop
hlt
leave
ret
ficompl
sub
mov
rcrl
and
mov
in
pushf
push
dec
inc
push
mov
aad
mov
nop
lea
cmp
pop
insb
adc
hlt
inc
mov
lahf
mov
push
addr16
gs
dec
or
imul
leave
loop
jmp
std
jl
js
jo
xor
mov
jp
mov
fimuls
dec
pop
pop
outsb
mov
icebp
int
scas
shl
dec
push
push
xchg
cmp
push
mov
cmpsb
jb
inc
push
pushf
sbb
cmpsb
fnsave
fs
cmp
movb
sahf
sub
or
addr16
cwtl
fisttpll
dec
std
cmpsl
cld
das
push
xchg
sbbb
mov
fwait
mov
in
in
pop
fidivs
aas
dec
cltd
adc
cld
aad
testl
sub
mulb
mov
mov
adc
mov
sub
popa
test
inc
leave
std
mov
divl
push
mov
or
xchg
repnz
mov
movsb
std
cs
lods
in
cmp
xlat
mov
push
es
mov
mov
dec
sbb
xor
xchg
iret
inc
cld
outsb
lahf
fidivl
push
out
sub
sub
in
std
stos
add
nop
and
xchg
push
test
cmp
sub
sbb
jecxz
mov
jp
jp
push
inc
inc
xor
fwait
push
rol
and
fwait
sub
xor
imul
and
push
xchg
or
aaa
aas
cltd
in
mov
xchg
jno
in
ret
clc
popf
mov
dec
fnop
xchg
movsl
adc
ja
jl
outsl
sub
jb
jns
jmp
nop
pop
and
xchg
pop
push
daa
xchg
ret
rcll
sub
or
mov
daa
mov
cmp
les
sub
mov
xor
leave
xchg
int3
movsb
cld
push
mov
push
mov
push
push
repz
add
push
pop
push
test
nop
ss
cs
divb
sub
xor
loopne
jns
dec
or
lea
mov
lods
inc
mov
loope
and
add
xchg
popa
pop
inc
data16
cwtl
sub
lea
sbb
sub
push
rcrl
sub
cmp
add
fadds
pushf
andl
popf
repnz
js
xorl
nop
lret
in
faddl
enter
push
push
pop
scas
cmp
lea
popf
mov
adc
mov
sub
mov
test
push
jmp
inc
xchg
std
jbe
out
lret
mov
inc
icebp
movsl
add
iret
loope
bound
push
xchg
das
call
ljmp
adc
xlat
rol
dec
cmp
je
aam
fisttpll
arpl
clc
sub
add
jmp
pop
repnz
dec
loope
sahf
inc
add
mov
jg
push
es
mov
dec
mov
aad
stos
out
fisttpll
lcall
mov
stos
lds
arpl
pop
dec
lock
sbb
loope
push
loope
outsl
fucomi
mov
xchg
adc
xchg
hlt
xchg
fadds
lock
and
fwait
aaa
push
rorl
sbb
insl
jge
adc
adc
popf
mov
sbb
fiaddl
push
adc
add
mov
mov
call
test
imul
lret
pop
mov
movsb
mov
sub
popf
pop
push
lods
sub
std
xchg
push
inc
pusha
jno
je
mov
xchg
add
icebp
or
addr16
outsl
sub
popf
fsubs
inc
xchg
inc
sub
jns
push
sbb
outsb
dec
pushf
sbb
sbb
nop
jae
mov
incb
std
or
mov
dec
std
loopne
cmp
into
inc
xchg
cmp
adcl
shr
jbe
divb
jge
pop
mov
mov
testl
popf
xor
lret
jnp
cmp
xchg
mov
and
inc
leave
add
loope
je
enter
ds
mov
xchg
jmp
mov
addr16
mov
mov
xchg
sub
sti
sub
mov
dec
aam
push
push
insb
test
and
mov
xchg
popf
dec
jmp
aas
pop
movsb
fsubrs
mov
test
adc
add
mov
bound
jne
mov
imul
sub
mov
mov
jo
mov
mov
or
in
or
jmp
pushf
pusha
mov
outsb
jmp
sbb
in
xor
shrl
mov
push
rcrb
into
stc
cmp
das
rcrb
les
psraw
mov
ja
xchg
ljmp
fidivl
addl
enter
out
cmp
mov
mov
jle
sbbl
xchg
cmp
orl
cmp
sub
xchg
pop
xchg
xchg
or
mov
call
cmp
xor
push
xchg
pop
or
sub
in
xor
andb
adc
call
mov
insl
lock
mov
mov
fimuls
fildl
mov
add
fsubr
push
aam
stc
dec
je
outsb
das
push
rclb
outsl
incb
cli
add
cld
nop
lret
cmp
bnd
and
push
scas
mov
mov
mov
hlt
out
sbb
and
mov
pop
mov
jno
imul
in
inc
cltd
jo
ret
loope
rcl
adc
mov
lret
lock
test
das
test
testb
mov
xchg
call
xchg
push
stc
loop
push
adc
bnd
lods
arpl
insl
add
addl
clc
jmp
add
shll
and
insb
jl
fistpll
test
rorb
mov
out
jbe
push
mov
sub
mull
aam
and
dec
pop
and
sub
mov
cli
xchg
and
pop
mov
ja
sub
sbb
sahf
gs
xor
lret
gs
test
pop
or
fiadds
decl
shlb
cwtl
arpl
loopne
rcrl
lock
ret
or
xor
xor
sub
out
bound
loope
cmp
jns
shll
dec
sbb
nop
loop
jb
mov
cmp
pop
js
cmpsb
test
mov
xchg
testl
jge
cmp
mov
or
cmp
mov
mov
ret
pushf
cmc
sbb
add
insb
lock
lahf
fildl
imul
and
xchg
outsb
dec
pop
out
subl
repz
mov
repnz
and
sarl
push
mov
cld
sbb
jle
or
and
xor
jb
mov
xorl
xlat
dec
nop
dec
sub
add
es
and
adc
xchg
mov
and
in
clc
push
add
shlb
aaa
jge
icebp
stos
xchg
cld
shll
sub
ret
adc
jecxz
jmp
xchg
mov
jne
call
and
insl
xor
xchg
jbe
hlt
adc
xchg
xchg
pop
push
xor
lea
pusha
das
jge
js
dec
sub
test
pop
insb
das
dec
mov
mov
shrb
cs
mov
sbb
add
jbe
fadd
dec
push
int
mov
jne
mov
and
cmp
cmp
jle
jbe
lcall
cltd
sti
push
mov
or
mov
and
xlat
in
mov
outsl
xor
int3
jp
add
cmp
add
fimull
mov
pop
jg
pop
mov
and
jg
out
mov
cmp
testb
xchg
test
adc
pop
arpl
ret
mov
push
xchg
dec
in
hlt
mov
movsw
sub
xchg
mov
scas
call
inc
fs
clc
int3
fprem
jne
and
shll
xorb
repz
pop
cmp
ljmp
int
fdivrs
xchg
sub
pop
mov
out
fimull
sub
jnp
jbe
test
sub
add
mov
inc
jmp
jns
out
nop
rorl
jl
out
adc
xchg
or
fbstp
sbb
stos
gs
cltd
out
pop
loop
mov
cwtl
icebp
std
sub
jns
dec
cmp
fstpt
dec
mov
loop
out
cmp
jns
lds
mov
xchg
add
xchg
cmpsb
pop
sub
insb
aaa
out
pop
cmp
mov
or
add
movsb
imul
arpl
sub
xchg
xchg
lods
out
addb
outsb
mov
iret
data16
shll
not
je
pop
enter
add
leave
scas
push
int
dec
xchg
leave
push
xchg
xchg
lret
cmp
sbbb
add
pop
dec
sub
sbb
insl
stc
test
add
enter
jecxz
out
xchg
les
std
jnp
cmpsb
divb
push
jbe
outsl
add
pop
sbb
xor
xchg
xor
sub
pop
loopne
jl
js
and
jbe
push
inc
xchg
pop
jl
mov
jae
inc
nop
push
xchg
imul
xchg
call
push
pusha
adc
out
sub
sub
jnp
sub
stos
cwtl
mov
shrb
clc
mov
push
xor
bound
push
add
mov
pop
pop
mov
mov
mov
addr16
out
sbb
mov
cwtl
aas
int
mulb
andl
inc
or
in
lret
sub
ss
subl
stos
jecxz
adc
and
mov
dec
mov
jg
stos
nop
stos
xchg
cmc
adc
mov
xor
add
fs
and
jns
in
outsl
pop
sarb
pop
pop
xchg
pop
adc
cmpsb
hlt
bound
int3
pop
cmp
inc
pop
arpl
mov
cmp
ret
xchg
pop
pushf
dec
sbb
jo
mov
rolb
mov
cmpsb
lock
sub
push
add
mov
push
sub
lods
outsl
or
mov
mov
sbb
je,pt
ss
xlat
push
bound
movsb
imul
fsubrl
cmp
repz
jae
movsb
xchg
push
xchg
pop
lods
jo
sub
xchg
scas
sbb
add
pop
mov
adc
cmp
enter
and
and
xor
aas
std
pusha
fldt
or
dec
xor
fs
fxam
daa
cmp
daa
dec
dec
or
cwtl
or
mov
lcall
adc
mov
adc
cmpsl
xor
push
dec
jo
imul
jno
insl
mov
popf
xor
jl
push
sahf
cmpsb
cmc
lea
or
sbb
xchg
jmp
loop
scas
lcall
test
xlat
inc
jne
outsl
inc
mov
leavew
push
jae
dec
cmp
add
mov
fstpl
test
add
push
mov
inc
pusha
stos
pop
ret
test
aas
dec
pop
sbb
or
mov
sbb
push
sbb
sti
mov
cmp
xchg
adcb
jmp
inc
ja
xchg
enter
fwait
shl
adc
cmp
and
stc
leave
nop
mov
daa
xchg
add
mov
adc
pop
ja
and
cmovge
repz
add
outsl
es
cmp
bound
pop
push
aaa
in
jecxz
pop
fisubs
dec
stos
jae
jo
mov
testl
mov
lods
mov
sbbl
xchg
fimull
enter
hlt
jnp
or
adc
cmp
mov
adc
shlb
mov
es
fwait
dec
movsb
inc
jmp
or
daa
stc
fidivl
lcall
sti
mov
pusha
inc
aas
ljmp
gs
xchg
pop
cmp
loopne
or
xchg
inc
jge
sub
push
sahf
xlat
dec
xor
addb
inc
mov
gs
movsl
callw
mov
jle
push
mov
fisttpl
adc
dec
xor
mov
sub
aad
ror
popa
imul
cld
stos
lock
pop
pop
xor
in
mov
xchg
stos
rol
ret
scas
lock
lahf
adc
mov
mov
adc
xor
xchg
outsl
push
int3
inc
and
pop
jmp
loop
mov
push
mov
pop
ss
jp
popf
and
cs
jb
push
mov
dec
jecxz
xchg
leave
pop
adc
push
jmp
jb
jg
or
add
pop
adc
sbb
jo
pushf
sbb
adc
mov
pop
jle
mov
jae
sbb
sbb
sbb
popa
repnz
and
inc
imul
sub
es
orb
int3
mov
jle
lods
hlt
xchg
jle
test
shlb
ret
dec
xlat
dec
dec
pop
fidivrl
sbb
pop
sub
inc
push
add
ja
dec
mov
stc
or
xor
and
mull
insl
cmp
popa
mov
add
call
fildl
call
in
test
ret
outsb
mov
jl
lret
and
repnz
adc
ss
xor
xchg
and
jecxz
jbe
sub
or
dec
mov
xor
sbb
or
mov
mov
and
add
and
sbb
in
loopne
ss
jle
icebp
xchg
push
sbb
dec
sahf
sahf
sub
mov
ljmp
jb
lea
adc
add
lods
pop
and
lea
loop
and
jecxz
fsts
test
mov
cmpb
repnz
or
ja
pop
aaa
fsubrs
jmp
or
into
enter
adc
ret
mov
jmp
xchg
das
das
mov
adc
cmp
xchg
popa
call
repz
sub
push
adc
rcrl
fwait
loop
inc
add
lahf
push
jns
pop
testb
test
stc
dec
fwait
iret
into
enter
lock
test
inc
aam
and
shrb
cmp
clc
out
mov
inc
sub
pushf
cli
jno
dec
xchg
add
subb
test
or
mov
lcall
adc
lea
rcll
mov
pop
add
loop
sbb
mov
and
adc
fs
mov
lds
pop
das
jmp
xor
dec
dec
lods
mov
mov
sbb
push
push
sub
mov
xor
mov
test
dec
out
inc
ljmp
inc
xorb
sbb
dec
jae
out
stc
adc
movsb
inc
bound
inc
fldl2t
orl
jb
lds
jl
test
outsl
ret
adc
iret
enter
adc
mov
jae
fldenv
notl
pop
into
arpl
jns
mov
adc
dec
rcrl
enter
test
xor
xchg
xor
add
push
loop
or
or
fdivs
cmp
popf
mov
fwait
cmp
mov
out
lea
cmp
popa
insl
enter
psubsw
push
repz
jle
xor
mov
sbbl
push
outsl
rorl
rcrl
mov
or
out
sbb
cmp
insl
jmp
addr16
jo
inc
shlb
jno
jae
pop
pop
shl
mov
and
sbb
fs
andb
jbe
test
ja
ret
rol
loop
into
pop
orl
add
cmc
cmpl
dec
movsb
dec
xchg
dec
jns,pn
mov
push
pop
add
in
xchg
les
dec
or
das
jl
jmp
test
jo
mov
push
adcb
mov
fstps
push
add
or
push
pop
popf
add
inc
int3
fmulp
xchg
ja
mov
and
pop
insl
jge
mov
mov
xor
push
pop
clc
add
or
cmp
lcall
mov
push
push
lods
jle
pop
sarl
fldt
stos
es
outsb
inc
enter
pop
sub
push
in
dec
lret
cmp
xor
lret
xchg
sub
aas
mov
call
sbb
sub
mov
test
mov
mov
repz
fistpl
mov
xlat
pop
dec
add
cwtl
imul
loopne
in
mov
mov
mov
loopne
test
shrl
popa
imul
xchg
mov
sbbl
push
insb
add
mov
sahf
arpl
iret
hlt
ds
andb
dec
or
xchg
mov
sbb
arpl
out
repnz
lods
sub
sub
xor
inc
mov
test
jae
movsb
mov
das
rcll
imul
popa
dec
fists
mov
into
into
leave
stc
shll
out
adc
sbb
xchg
dec
push
sbb
orb
adc
mov
repz
mov
inc
and
or
xor
mov
bndcl
or
lcall
notl
cld
jno
notl
ds
pop
or
add
gs
adc
bound
leave
sahf
aad
cmpsb
push
fcoml
sub
stc
stos
pop
dec
sub
mov
popf
jmp
xchg
sbb
mov
add
adc
push
rclb
mov
sar
addb
stc
js
ss
push
stc
pop
movsb
fisttps
lods
lret
xor
sub
mov
cmp
jb
dec
sub
xchg
cmc
pop
or
loop
sub
imul
addr16
xchg
fdivp
fcoms
in
test
imul
out
mov
mov
cmc
aas
cmp
lret
call
inc
mov
mov
fldcw
mov
pop
out
push
mov
divps
add
inc
cmp
add
mov
dec
mov
xchg
and
loopne
cmp
lods
lock
in
or
pop
xchg
stc
sar
daa
cmp
adc
inc
jecxz
mov
lret
xchg
lds
in
roll
mov
xchg
jle
aas
cltd
iret
fistps
or
or
mov
test
sbb
mov
sbb
insl
push
stos
pop
cli
sbb
sub
into
mov
lret
cmp
pop
jge
mov
insl
scas
lods
ja
jb
into
xor
sub
out
and
dec
in
jg
sarl
mov
cmp
in
xchg
mov
or
xor
imul
inc
in
mov
mov
mov
shll
cmp
inc
out
jmp
sub
adc
push
sarb
aaa
sbbl
xor
cltd
std
and
add
out
adc
loop
dec
xor
sbb
push
inc
add
jne
pop
fwait
lcall
pop
xchg
in
les
sahf
pop
loopne
fucom
mov
mov
mov
outsb
jg
cmp
jno
outsl
loope
push
mov
cmp
shrl
mov
pop
icebp
aad
xchg
sub
cmc
xchg
mov
and
mov
xchg
mov
and
add
stos
pop
movsb
je
adc
push
mov
fmulp
scas
xorl
add
mov
pop
sub
xchg
imul
xor
mov
xchg
sbb
aaa
mov
imul
adc
pop
add
mov
dec
xor
outsl
icebp
fimuls
dec
mov
jne
cmpsl
lock
add
jb
jg
push
or
mov
xor
dec
inc
insl
push
jge
aam
hlt
and
pop
js
je
fdivs
pop
add
sub
mov
repz
data16
in
rol
and
cs
xchg
adc
je
xchg
push
dec
jne
and
in
out
xor
cmp
arpl
adcl
scas
popa
ja
xchg
sarb
pushf
mov
dec
cmp
not
aas
or
pop
jg
sbb
nop
clc
aad
icebp
cmp
cwtl
mov
xchg
sub
pusha
test
inc
flds
ds
gs
ss
test
not
pop
test
mov
call
cmp
shrb
lock
and
into
iret
jl
icebp
outsl
fwait
xor
push
jmp
cmpl
jno
repnz
mov
lret
std
enter
sub
pop
mov
dec
mov
dec
loopne
push
mov
dec
icebp
ljmp
std
add
aaa
gs
stos
push
sub
dec
cli
sub
and
cmc
ret
jp
adc
adc
mov
pop
ljmp
jo
mov
negl
data16
xchg
insb
add
in
test
dec
pop
mov
dec
negl
mov
jo
sar
insl
jmp
pop
scas
jo
mov
popa
mov
pop
int3
arpl
imul
mov
inc
lret
bound
push
jmp
push
dec
xor
mov
ret
pop
cmp
push
jmp
ret
add
add
in
mov
ljmp
mov
jae
push
movsl
lods
dec
out
lea
push
pop
sahf
test
hlt
mov
lea
mov
loopne
es
es
in
push
inc
adc
test
jno
fsubs
insb
dec
int3
arpl
stc
nop
out
cmpsl
push
movsl
fcomps
sbb
xchg
int
cmpsl
out
cmp
mov
lods
inc
pop
or
popa
push
out
or
mov
inc
pop
mov
jno
jns
arpl
ss
lcall
data16
dec
loope
mov
pop
je
jno
andb
mov
clc
cmc
shlb
push
ss
pop
cmp
fnstenv
pop
fbstp
test
xchg
sub
push
dec
loop
push
mov
dec
cmpsb
imul
pushf
in
mov
xchg
mov
les
cmp
imul
stc
nop
mov
jbe
outsb
test
shlb
leave
cmc
mov
aam
repz
bswap
bound
pop
cmc
nop
jmp
pop
out
sub
loopne
cli
xchg
bound
dec
loope
sbbl
mov
leave
insl
cld
xchg
mov
cmc
mov
dec
loope
insl
insl
add
cmp
push
pop
mov
mov
mov
fstpt
sub
pop
cs
cmpl
insl
or
pop
icebp
dec
adc
hlt
mov
fldl
cwtl
mov
sbb
dec
loope
lret
sti
aad
jmp
pop
sbb
scas
inc
std
int3
sub
add
mov
leave
push
xchg
sub
int3
push
lods
add
mov
aam
mov
test
or
push
lds
sub
and
rclb
push
int3
cmp
add
sub
cli
sbb
movsl
dec
and
mov
or
inc
fdivr
adc
inc
and
push
or
adc
inc
push
xor
dec
addr16
popf
xchg
push
iret
lahf
mov
sbb
mov
ret
pop
jns,pt
lret
jnp
mov
call
in
in
xorl
pop
repz
adc
stos
enter
sbb
xor
ss
pop
or
jmp
cltd
lea
lods
fidivl
pop
jae
mov
xor
popa
sahf
xchg
sub
mov
std
loope
xchg
nop
xor
test
jo
mov
cmpsl
loope
jns
lcall
sarb
push
cmp
xor
arpl
xchg
sub
jo
adc
jb
push
mov
js
xor
jp
jbe
mov
pop
in
imul
bound
into
xchg
mov
stc
jecxz
mov
xor
mov
pop
in
std
xchg
sarb
lea
popa
clc
xchg
and
imul
mov
pop
lock
cmp
mov
pop
mov
xchg
cmpsb
shlb
mov
bound
insb
fbstp
cmpsb
pushf
xor
js
dec
lods
inc
loop
jae
rcrl
xchg
pushf
inc
ss
mov
dec
fsubrs
fcompl
mov
mov
insb
fnstenv
push
les
ja
dec
cmpsb
xchg
mov
push
mov
jne
loop
mov
loope
movsb
inc
xor
jno
xor
test
rclb
inc
fisubs
jl
add
testl
shlb
out
xorl
fwait
xor
mov
incb
int
cwtl
aad
int
hlt
mov
pop
imul
jne
stc
nop
mov
clc
fsubs
ficoms
test
test
push
scas
lcall
jp
mov
std
call
cmp
arpl
mov
insb
xchg
sub
jb
insb
mov
je
dec
test
jp
mov
data16
xchg
xchg
adc
inc
cltd
std
xchg
int3
lret
pop
repnz
inc
aaa
leave
pusha
data16
or
stos
jae
fldt
std
xchg
pop
push
in
test
mov
mov
jne
clc
cmpsl
cmc
stc
daa
push
push
fwait
jmp
outsl
push
adc
inc
dec
inc
fdivrs
shrl
mov
jb
or
aaa
cmp
imul
pop
mov
mov
les
pop
das
xor
adc
jnp
pushf
or
into
add
xor
mov
and
xchg
mov
in
xchg
iret
data16
scas
stos
inc
fistps
mov
add
pusha
xor
jmp
add
xchg
sub
scas
jnp
ficoms
add
cltd
std
xchg
int3
stos
imul
addb
ja
sbbl
fisttpl
fidivrs
pop
lock
repz
test
lea
inc
xchg
sub
mov
shlb
mov
jg
cmp
sarb
repz
mov
xchg
cs
cmp
inc
mov
pop
mov
mov
inc
sahf
cltd
mov
cmp
gs
xor
lahf
mov
mov
push
int
xchg
clc
cltd
mov
addr16
mov
stc
nop
jg
stc
nop
mov
jp
push
stos
inc
sbb
test
repz
leave
sub
incb
stc
xor
jb
push
pop
dec
in
jb
daa
test
cli
xchg
loope
loop
cli
add
dec
push
pop
fbstp
je
andb
or
cmp
add
inc
pop
fidivl
bound
or
mov
mov
adc
dec
mov
mov
and
fcomip
mov
and
fnsave
inc
test
push
push
sbb
ret
test
adc
dec
fildll
xor
cmp
jns
add
mov
fcmovb
push
adc
pushf
xor
xor
jge
dec
push
jmp
mov
cmpsl
mov
loopne
or
clc
add
sub
or
inc
fnstenv
aam
inc
push
repnz
and
fcomi
pop
inc
jo
jbe
jp
lods
xchg
outsl
xchg
int
add
ljmp
dec
cmp
lock
cwtl
mov
loopne
and
or
jl
xor
scas
push
jmp
pop
fnstsw
jmp
push
std
cmp
mov
adc
mov
cmp
cs
and
jge
mov
pop
mov
push
jmp
dec
ret
pop
jg
adc
pop
mov
int3
arpl
hlt
pop
mov
sub
pop
dec
cmp
xchg
cmp
push
dec
jbe
outsb
and
adc
xchg
jb
cmovne
mov
inc
jmp
fs
mov
xchg
stos
pop
outsl
mov
js
mov
pop
shlb
cli
cmp
rclb
cmp
stos
icebp
xor
ret
push
sarb
lock
mov
int3
ljmp
in
pop
lock
sbb
aam
mov
cmc
jecxz
lret
cwtl
mov
lret
cld
xchg
sahf
xchg
pop
mov
test
and
cwtl
bound
out
and
aas
cmp
cmpb
inc
adc
fistl
fidivl
pop
cmp
cmp
orb
mov
adc
mov
push
dec
pop
lds
pop
mov
imul
inc
pop
mov
sub
rorl
or
pop
js,pt
push
pop
pop
fbstp
pop
mov
mov
pop
imul
sub
lock
jb
mov
cmc
dec
mov
ss
arpl
jae
jno
imul
sbb
sub
orb
imul
imul
mov
lret
inc
lret
sbb
sub
dec
mov
or
dec
xor
push
ss
cmc
mov
pushl
pop
cwtl
and
int3
cmp
loope
pop
fsub
jb
mov
repnz
lret
fbstp
mov
negb
frstor
jnp
jmp
out
add
imull
xchg
push
dec
inc
sbb
inc
mov
cmpsl
xchg
test
sbb
push
adc
jb
mov
imul
cmp
lret
ljmp
lods
out
leave
out
xor
hlt
enter
cld
daa
xchg
into
std
xchg
sbb
leave
and
lcall
xor
mov
inc
jae
lds
pop
fdivrs
xor
ficompl
sub
dec
cmp
pop
mov
pop
xor
or
addb
sbb
mov
inc
cwtl
push
jmp
inc
std
xor
out
push
fsubrp
orl
pop
aad
imul
les
cmp
loop,pt
xor
mov
jbe
add
popa
fwait
rcll
jl
mov
cmp
into
adc
int3
xor
out
out
mov
xor
xchg
adc
scas
fwait
mov
mov
jbe
push
int
pop
orb
jle
adc
mov
lods
push
jnp
xchg
cmp
xor
nop
gs
rclb
maskmovq
negl
push
and
xchg
pop
xor
mov
and
outsb
mov
imul
ret
sub
dec
imull
loop
inc
sub
pop
jecxz
lahf
adc
adc
cmp
and
cmc
lret
or
dec
xchg
inc
pop
rcll
pusha
mov
pop
incl
popf
mov
push
sbb
bound
pop
mov
pop
push
dec
xchg
pop
cmc
cmp
add
fucomip
out
inc
ror
adc
mov
cld
cli
popa
les
out
sub
mov
and
out
inc
ljmp
sbb
cmp
pop
pop
cltd
test
pop
into
pop
out
push
mov
push
repz
setge
mov
mov
insl
add
decl
pextrw
adc
add
and
mov
mov
sbb
push
out
cmp
jg
daa
in
cs
out
mov
stos
movsbl
jecxz
xchg
jg
hlt
mov
stc
adc
inc
mov
mov
cld
shlb
lret
and
pushf
jb
aad
fidivl
ds
shrl
cmp
push
push
add
add
insb
pushf
xor
das
outsb
je
scas
dec
cmp
dec
mov
sbb
mov
das
push
leave
cltd
jo
bound
inc
mov
dec
fisubrs
in
dec
test
push
mov
scas
xchg
inc
mov
fcompl
push
ja
xchg
xor
orb
add
addl
iret
cmp
xlat
mov
inc
mov
lret
out
enter
and
es
add
xor
stc
lret
inc
out
jb
pop
mov
pop
aad
jb
fistpll
mov
dec
ds
mov
outsl
sub
xor
dec
lds
add
xor
test
jl,pt
mov
out
mov
ljmp
mov
cmpsl
ds
jmp
ret
dec
pop
lods
push
scas
stc
pop
mov
pop
mov
xchg
mov
outsb
mov
inc
test
sbb
popf
pop
mov
repnz
or
jle
xor
rcll
sub
jecxz
add
in
mov
cwtl
sub
js
xchg
insl
jae
aaa
sbb
xchg
push
int3
sbb
dec
mov
sbb
data16
add
cmpsb
pop
pop
cmovbe
adc
daa
cmpsl
aad
std
addr16
bound
jge
addb
dec
popa
dec
ja
jg
mov
mov
add
test
lcall
repz
fdivs
lds
lret
dec
dec
sub
push
jnp
ret
pop
lods
jbe
stos
rcll
cmp
and
int3
pop
mov
orb
iret
cmp
in
sbb
scas
jmp
mov
clc
loope
cli
sub
push
loopne
cmpsb
add
add
xlat
mov
ds
lret
mov
popf
pusha
lret
pop
xchg
enter
sbb
inc
stos
sarl
cmp
sub
popf
and
cltd
xchg
test
adc
xchg
cmp
icebp
mov
or
repz
jae
movl
push
call
in
dec
inc
fwait
push
lods
push
repz
jle
xchg
lods
insb
lcall
jo
inc
jb
jb
xor
mov
push
adc
jae
call
int
ss
xor
pop
sbb
push
stos
jo
ret
mov
les
inc
mov
push
lods
pop
jle
mov
test
mov
pop
xchg
daa
xchg
cs
in
pusha
call
iret
fwait
xchg
sub
ret
pop
cmp
ret
cmc
daa
adc
cmp
dec
and
fldenv
mov
pop
sbbb
push
les
xorl
ret
ljmp
bswap
fildl
icebp
lods
jbe
lea
jno
stos
jno
shlb
lret
cmp
mov
inc
adc
fildl
pop
imul
mov
dec
movsb
push
pusha
cwtl
xchg
inc
pop
dec
loope
arpl
testb
rcll
inc
or
jno
clc
sbb
xor
out
and
lahf
fsubrl
and
mov
das
arpl
ljmp
xchg
lods
js
push
in
es
sahf
addl
into
push
jg
jno
andl
inc
popf
mov
push
adc
mov
arpl
sahf
xor
stc
sar
sub
mov
jmp
and
jne
test
and
rcll
xlat
les
mov
decl
xor
push
mov
sub
int
fwait
xchg
inc
xor
jbe
adc
push
inc
std
xor
jp
stos
sub
arpl
in
jg
movsb
lods
repz
mov
jno
xchg
sub
dec
xchg
adc
mov
inc
mov
cwtl
xchg
push
lcall
mov
call
pushf
xor
xlat
cmp
cs
les
cld
fcomps
orb
dec
mov
fmuls
pop
lock
cli
jmp
repz
out
leave
outsb
add
fmulp
arpl
outsb
add
push
in
xchg
inc
out
push
pop
add
adc
std
cld
nop
cwtl
lcall
pushf
xchg
mov
cmc
aam
mov
int3
dec
inc
insb
push
jne
cmp
xorl
cmp
pushf
add
push
xchg
mov
cwtl
mov
add
lahf
lahf
pop
int3
and
not
inc
push
lcall
outsl
mov
and
sub
stc
bound
pcmpeqw
push
pushf
int
das
pop
je
cmp
jo
pusha
sti
xor
mov
mov
mov
scas
sub
add
nop
mov
push
pop
hlt
test
jnp
les
pop
lret
jmp
pop
mov
or
xlat
sahf
push
addb
outsb
mov
cmp
adc
add
add
insl
and
imul
popl
mov
or
push
hlt
jmp
or
cmpsb
out
loope
xchg
imul
js
cmp
sahf
jge
sbb
inc
dec
add
imul
into
je
lret
xchg
pop
or
daa
mov
mov
mov
push
iret
leave
mov
sub
mov
sbb
in
iret
clc
add
imulb
rcl
aas
out
mov
jmp
test
xchg
stc
sbb
xor
hlt
out
int3
test
insb
int3
xchg
add
sub
movsl
js
outsl
and
dec
fsubl
insb
add
adc
jge
std
sub
out
loope
mov
fcmovne
push
loope
mov
mov
push
std
inc
ret
cmp
or
ss
xchg
sbb
pop
pop
cwtl
jge
das
push
std
dec
xor
xchg
xchg
and
inc
sbb
popa
shrb
mov
aam
sti
lock
mov
xchg
ror
aaa
ret
add
frstor
rolb
mov
les
les
repz
shl
and
mov
sub
int3
xchg
rcrb
icebp
add
jmp
mov
or
jno
and
subb
push
fwait
in
ficomps
fldt
pusha
fwait
xlat
mov
sub
data16
adc
cmp
repnz
pop
and
insl
jnp
adc
and
dec
cmp
fwait
xchg
pusha
add
cmc
xchg
sub
ficomps
sysexit
out
lea
mov
push
xchg
insb
jb
shll
ja
jp
sub
push
dec
dec
shll
sbb
dec
test
and
pop
daa
rorl
xchg
sub
stos
ss
xchg
out
inc
mov
jmp
outsl
loop
fiadds
scas
xchg
mov
scas
inc
cmp
pop
stc
and
dec
mov
push
fsubrs
iret
arpl
sti
adc
mov
mov
loope
cwtl
lea
es
pop
std
jle
rolb
xchg
ret
jno
adc
inc
pop
movsl
insl
andb
push
ret
jne
sub
aad
mov
dec
sar
and
inc
jno
pop
push
inc
xlat
mov
aad
inc
rcrb
or
insl
add
push
out
and
sub
and
and
dec
xchg
jl
xchg
sbb
cmpsb
mov
fwait
dec
lret
sbb
and
pop
mov
dec
cmp
cmp
adc
cld
inc
loope
xor
cld
call
dec
adc
aaa
cmpsb
jns
subb
mov
out
imul
aas
icebp
cmp
xchg
es
adc
mov
repnz
xchg
xor
cld
mov
add
dec
adc
out
movsb
dec
jnp
push
icebp
adc
lds
sti
ja
sbb
shlb
bound
push
mov
aaa
call
clc
sub
add
mov
and
adc
push
mov
dec
test
out
test
or
inc
insl
sub
bound
scas
jmp
js
outsb
lret
dec
xor
mov
mov
jb
jnp
xor
andl
push
push
or
out
jbe
movsl
xor
fimuls
add
mov
out
dec
mov
sub
jp
sbb
mov
lret
dec
mov
jb
repnz
test
leave
sbb
or
pop
mov
lds
cli
and
sub
sub
ja
cmp
in
cmp
aaa
lret
mov
int3
inc
jb
sahf
mov
and
adcl
imul
repnz
mov
ret
imul
mov
and
lock
push
mov
jbe
aas
add
xchg
jl
imul
jge
scas
inc
add
jnp
and
dec
mov
push
inc
popa
lods
pop
inc
jnp
push
aas
pop
ret
xchg
outsb
or
repz
push
mov
cmpsl
push
jno
insl
idiv
inc
mov
jae
je
sub
xor
jns,pt
aad
loopne
fiadds
mov
push
repnz
cmp
movsb
mov
push
negb
push
sbbb
pop
jg
cmp
popl
dec
inc
fcoml
dec
cmpsb
imul
xchg
xchg
jne
xchg
addl
pop
int3
cmc
xor
dec
nop
test
push
or
xchg
sbbb
std
inc
repnz
dec
rolb
mov
aaa
cmc
inc
mov
push
jecxz
or
dec
add
cmp
push
rorb
call
and
ret
test
jg
decl
sub
test
repnz
mov
daa
in
pop
fcom
dec
fisubs
or
mov
sub
nop
daa
clc
filds
sbb
stc
mov
repz
lock
test
mov
out
mov
jmp
popf
xor
mov
sbbl
dec
mov
in
test
sbb
mov
mov
hlt
xor
xor
stos
and
idiv
stc
xor
rcrb
ffreep
add
in
add
cmp
sub
sti
xchg
sub
mov
dec
inc
jne
pop
inc
push
adc
or
sbb
inc
fsts
lcall
adc
push
inc
jmp
jno
mov
xchg
sbb
lea
cltd
test
inc
inc
leave
lea
push
loope
jp
push
pop
cmp
jo
push
pop
mov
xchg
pop
sbbl
addr16
lds
sub
pop
xorl
inc
jne
out
xor
lea
aas
jecxz
inc
addl
ds
call
iret
cmpsl
sub
shl
cwtl
or
jmp
push
movsl
xlat
add
sub
idivl
in
loope
jnp
icebp
cmp
mov
scas
test
add
xor
or
jge
push
in
push
xor
mov
ljmp
push
jmp
mov
jle
pop
and
sub
ss
or
xchg
out
jne
xchg
insl
pushf
fs
pop
into
xor
pop
mov
cmp
pop
out
pop
pop
xor
pop
pop
inc
lcall
imul
or
js
lret
add
lds
loope
adc
or
or
iret
sub
lods
enter
stc
jp
lret
fistpll
iret
push
xor
fistpl
mov
mov
mov
jnp
pop
aad
add
ret
fldl
test
sarl
subl
cli
xchg
std
out
bound
mov
push
addl
and
arpl
cmpsb
mov
out
insb
mov
popf
push
jmp
mov
or
mov
fcompl
lds
cmp
fmuls
xchg
movsb
inc
mov
mov
clc
bound
xor
adc
loopne
stc
mov
arpl
aad
jno
lahf
shll
pop
arpl
sbb
xor
sbb
adc
into
lahf
std
and
rep
fisttpll
adc
call
xchg
fisubl
pop
mov
jg
insl
inc
les
ret
and
je
mov
pop
xchg
stc
xor
imul
push
jbe
out
xor
cmp
inc
stc
pcmpgtw
idivl
add
add
xchg
test
fstps
push
cmpsb
outsw
mov
mov
lret
popf
mov
or
shlb
inc
lds
cmova
lods
in
insl
jmp
fisubl
frstpm(287
lds
in
xchg
push
jmp
jg
and
movsb
cmp
and
jmp
insl
fisttpl
ror
addr16
xor
push
xchg
xchg
stos
or
mov
ja
pop
jae,pt
scas
sub
aaa
mov
test
popf
fdivl
iret
sbb
sub
int3
scas
lds
cwtl
xor
das
loope
mov
or
hlt
sub
fmuls
dec
aam
ficoms
or
push
mov
daa
sub
mov
cmp
adc
into
cmpsl
pop
in
pop
mov
pop
leave
pop
inc
leave
push
mov
std
sub
mov
sbb
jp
shrb
sbbb
xchg
sarl
jnp
scas
repnz
icebp
mov
das
hlt
or
bound
sbb
pop
gs
cmp
dec
jbe
push
dec
inc
or
push
push
xor
mov
repnz
mov
in
xor
icebp
lods
stos
or
stc
lcall
push
int3
stos
negl
or
lret
std
mov
mov
lods
fwait
mov
shll
xor
mov
inc
repz
jmp
testl
push
xchg
imul
pop
xor
imul
mov
inc
and
cmp
addr16
test
pop
pop
sbb
fwait
push
sbb
fisttpll
pop
push
ljmp
and
stc
mov
mov
dec
loop
xchg
test
clc
ljmp
in
sbb
leave
lahf
movsb
cmp
repnz
cmp
aas
repnz
iret
push
xor
or
add
inc
daa
inc
ret
dec
fisttps
cli
invlpg
out
lret
das
ljmp
pop
in
adc
mov
test
sbb
jl
cmp
add
mov
push
aas
push
into
jl
pop
push
cmp
test
pop
bound
idivl
mov
cld
xor
scas
mov
paddq
jg
mov
mov
cmp
sbb
cmp
mov
hlt
mov
and
jge
xlat
pop
sub
in
lcall
jmp
xchg
or
in
push
mov
add
push
mov
push
add
outsb
arpl
mov
jns
add
pop
test
mov
push
in
stos
jg
mov
mov
ja
jle
jp
add
test
jns
and
and
pop
aam
sub
sub
or
xchg
fdivs
out
push
insb
mov
mov
pop
repnz
rorb
sarb
xorb
lahf
test
or
jb
cmp
or
inc
lahf
clc
aas
adc
mov
jmp
insl
ror
aam
fwait
xor
mov
lds
xlat
mov
ljmp
pop
mov
nop
xchg
inc
lcall
outsb
mov
mov
fwait
sbb
das
loope
imul
sbb
cmp
sahf
insb
test
xor
mov
push
cs
lret
inc
std
jnp
arpl
jae
sub
adc
adc
call
xor
add
add
cmpsl
inc
inc
int
int3
push
mov
jmp
clc
pop
xchg
in
mov
push
sahf
jmp
add
or
sbb
icebp
sub
repz
iret
push
loopne
repz
push
sub
xor
add
cmp
add
fmuls
sub
repz
popa
scas
xchg
idivw
shlb
mov
lret
mov
test
add
xchg
xor
pusha
push
scas
push
push
sub
push
push
in
test
xor
dec
dec
push
cli
mov
fimuls
cmc
pop
repnz
cmp
sub
inc
mov
push
outsb
dec
mov
aaa
lds
cltd
xor
shrb
and
sbb
push
add
dec
mov
pop
std
jno
rcrb
pop
dec
rcr
pop
xchg
mov
mov
out
jle
jp
inc
sbb
push
dec
mov
xor
xchg
sbb
cmp
and
cltd
xor
aad
scas
cmp
inc
pop
clc
ss
movb
add
shrb
imul
shl
pop
or
xchg
pusha
insl
add
or
mov
mov
sbb
std
mov
jo
fsubrl
aad
std
push
pop
rol
psubsb
testl
scas
fwait
int
and
rcrl
leave
push
pusha
cld
lea
cmp
xchg
rclb
jbe
fbstp
popa
aaa
jmp
dec
rorb
pop
and
jns
add
testl
and
cmpb
inc
insb
xchg
ja
push
lods
aas
jne
and
xchg
dec
xlat
sbb
rcll
testb
lahf
imul
dec
test
push
ficompl
xchg
inc
add
or
out
xor
std
into
push
ret
sub
mov
mov
mov
jb
inc
adc
cmpsb
pop
sbb
jg
push
push
out
aas
mov
cmp
inc
cmpsb
jb
stc
inc
sbb
fucomip
orb
incb
push
push
bound
pop
pop
mov
cmp
jp
cmp
cmp
les
pop
loopne
lea
jecxz
push
scas
xchg
loopne
add
xor
pop
mov
push
cmp
test
ds
movsl
pop
lock
imul
mov
xchg
sub
setns
inc
popf
mov
iret
bound
push
call
or
cmp
jp
dec
and
test
mov
mov
mov
xor
aaa
shr
test
xchg
repnz
out
mov
sbb
sub
push
aas
insl
mov
std
lods
pop
repnz
add
jns
daa
push
call
jp
sbb
xor
std
cmp
push
mov
mov
test
ljmp
icebp
movsl
xor
push
inc
fisttpl
test
popf
xor
cld
mov
xchg
sub
sbb
cmp
aaa
into
add
mov
lods
pop
xchg
fnstenv
jg
lret
testl
cmp
insb
imul
pop
sti
add
cmp
mov
adc
xlat
xchg
xor
jge
sub
pop
pop
jne
mov
cwtl
cmp
movsb
aaa
nop
lods
adc
inc
jle
clc
or
loopne
icebp
fstpt
mov
js
or
rorb
lock
jbe
data16
add
cmpsl
or
shl
add
in
scas
xchg
fadd
jbe
cmpsl
jle
movsl
es
mov
test
jle
loopne
bound
scas
xchg
xchg
or
mov
cmp
dec
sub
jno
ds
lcall
mov
lahf
insl
adc
fimull
xchg
mov
shrb
inc
je
mov
rolb
scas
ss
push
insl
movsl
inc
lods
ret
loop
ja
mov
fwait
push
stc
shll
pop
lret
sub
mov
addl
bound
sbb
jns
std
and
push
movsb
inc
sbb
xor
fbstp
popa
or
mov
push
lcall
sbbl
ja
pop
daa
test
xchg
mov
out
es
jo
adc
jno
or
in
sbb
cmp
in
adcl
stc
adc
xlat
or
xchg
popa
in
adc
dec
mov
cmpb
out
cli
jg
dec
fildll
testl
aad
push
jb
mov
stos
cmp
and
push
fbstp
ss
lds
sti
mov
mov
xchg
inc
int
mov
ds
sub
sbb
add
mov
mov
adc
stos
cltd
or
aaa
cld
scas
movl
cmp
xlat
addr16
add
fcomip
fidivrs
insb
sub
and
test
inc
loop
push
jmp
gs
mov
outsb
in
int3
mov
mov
mov
cmp
dec
mov
fnstsw
imul
cmpb
hlt
push
insl
mov
decb
stos
add
mov
test
fstps
es
inc
jmp
jg
mov
dec
lret
call
pop
mov
fs
mov
jl
jg
add
lret
sub
ficomps
int
cmp
jp,pt
in
cmp
push
gs
ss
sub
mov
iret
mov
rcll
or
push
stos
push
sbb
mov
pop
icebp
mov
sahf
xor
mov
push
sub
pushf
mull
lods
scas
mov
iret
sti
dec
mov
jno
jecxz
adc
scas
fs
and
push
or
cmpsl
inc
sbb
adc
out
insl
fsubrs
addr16
mov
inc
jge
xor
inc
fidivrs
es
pop
adc
addl
xor
insb
push
call
addb
pop
cli
xchg
xchg
imul
inc
aaa
sbb
cmp
fwait
scas
push
mov
mov
cmp
fnstenv
lods
enter
push
add
fwait
test
or
mov
mov
pop
clc
nop
das
add
pop
mov
loop
add
lock
pop
mov
xor
mov
aam
mov
xlat
jg
jns
faddl
outsb
hlt
add
addr16
pop
mov
mov
cmp
test
lea
xchg
xchg
mov
scas
push
aad
xchg
mov
movsb
push
clc
aam
inc
or
and
stos
mov
ss
out
mov
scas
pusha
out
jns
adc
les
in
mov
xor
xchg
cmp
loope
nop
cmp
repnz
or
inc
repz
pop
repnz
pop
rorb
mov
scas
sarl
test
inc
or
sub
enter
mov
jns
cmp
dec
push
dec
scas
insb
cmc
adc
flds
pop
loop
test
dec
adc
mov
or
mov
addb
in
jne
mov
sub
outsb
mov
xchg
mov
lcall
enter
stos
insb
negb
aaa
mov
popf
dec
sub
in
dec
push
inc
clc
lret
xchg
or
jo
mov
jbe
shlb
or
mov
mov
lret
xchg
jnp
mov
aam
out
mov
enter
aas
sbb
lods
das
cmpb
popf
jl
fiaddl
or
and
jle
jbe
and
test
inc
mov
mov
test
in
sbb
add
cmp
cmp
jle
xor
ret
mov
jg
xor
mov
pop
pop
pop
leave
cld
dec
mov
fldl2e
mov
dec
or
mov
cld
cmp
adc
lret
xchg
fsubl
xor
cmc
mov
scas
call
push
lds
adc
cli
dec
dec
adc
inc
push
imul
mov
lods
mov
sub
add
mov
jb
mov
inc
test
xor
ss
inc
out
das
leave
mov
fstpt
xchg
mov
in
or
and
xor
xor
dec
arpl
dec
pop
scas
jnp
dec
push
mov
jb
mov
inc
stos
daa
sub
mov
data16
scas
xchg
and
jg
and
testl
add
mov
test
push
push
fnstsw
inc
mov
sub
mov
jo
call
adcl
imul
fisubrl
fnstsw
add
hlt
dec
loopne
jl
fnstsw
imul
push
push
das
fnstsw
nop
movsl
xor
loopne,pt
in
out
jge
clc
test
shrb
adcb
fnstsw
mov
sub
popf
sbb
mov
rcll
sbb
addr16
dec
test
xchg
jne
sub
and
test
sbb
jno
inc
cs
daa
dec
mov
cmp
insl
sbb
adc
sub
fwait
in
cmp
push
jne
and
fists
data16
sti
pop
test
rcll
bound
daa
jnp
rcll
add
pusha
mov
mov
or
jl
rolb
test
adc
adc
dec
jo
cmp
xor
jle
push
add
sub
lds
cmp
mov
aas
lock
xor
movsl
add
rolb
test
mov
jo
mov
xor
jle
push
push
xchg
bound
lds
shl
mov
xor
je
shlb
insl
sahf
xor
mov
fwait
std
pop
or
cmp
push
mov
adc
adc
push
mov
jb
sub
cmp
mov
push
and
cmp
scas
jecxz
add
pop
jns
clc
inc
lcall
or
sub
xor
ds
ret
push
lcall
xor
gs
inc
or
jbe
sahf
sub
cmp
mov
push
sbb
sub
mov
in
pop
inc
or
sub
xchg
mov
mov
rcr
mov
lcall
sbb
stos
aad
clc
xchg
sub
push
cwtl
cmp
dec
adc
enter
loop
imulb
in
je
sbbb
adc
lret
xchg
cmovne
lcall
jmp
lret
mov
adc
xchg
lret
mov
js
lcall
xorl
and
test
popf
sub
adc
xor
mov
mov
lods
xor
out
and
addb
shlb
mov
scas
xor
fs
xor
mov
int3
stos
pop
jnp
mov
lahf
inc
xchg
aaa
fwait
or
fstpt
pop
push
mov
add
mov
inc
inc
push
aam
xchg
cli
pusha
and
imul
lahf
mov
sarb
ja
and
push
pop
call
cld
push
xor
jnp
imul
sbb
dec
adc
data16
pop
sti
xlat
jp
mov
xchg
pop
sub
mov
xchg
pop
out
out
jno
mov
pandn
repz
out
adc
lahf
inc
sub
sub
int
push
imul
sahf
out
arpl
popa
sti
popa
jmp
jne
xchg
pop
mov
inc
mov
mov
bound
mov
addr16
in
loopne
mov
adc
inc
jo
jnp
fildl
jle
es
imul
dec
and
into
jbe,pn
scas
sbb
jl
mov
das
scas
sbb
inc
xor
inc
inc
push
mov
mov
mov
dec
imul
sbb
or
bswap
pop
pop
fnstsw
pop
adc
inc
xchg
mov
imul
int
enter
fwait
adc
dec
lods
adc
add
lahf
cmp
mov
outsl
in
jbe
imul
insl
dec
lret
lea
sahf
inc
mov
sbb
mov
mov
imul
cmp
bswap
cltd
shrb
ffreep
inc
adc
mov
lahf
lods
in
rep
mov
scas
sub
lret
push
adc
add
mov
andb
stc
fs
movsl
out
hlt
das
mov
outsl
call
fwait
insb
and
inc
mov
push
loopne
jne
pop
cmp
xor
rolb
pop
add
jg
out
push
xor
lcall
ror
xchg
fisttps
mov
ja
inc
scas
sti
xchg
loopne
data16
adc
jmp
mov
addb
orb
gs
push
clc
pop
inc
pop
lods
xor
xchg
sahf
inc
cmc
jmp
mov
scas
mov
in
stc
les
adc
mov
inc
add
shll
ja
jmp
pop
icebp
push
or
pop
add
test
mov
les
int
sub
lcall
jl
out
add
ja
mov
insb
adc
mov
into
dec
xchg
pop
cli
inc
xchg
and
aaa
in
fxtract
sub
cwtl
mov
scas
sahf
inc
adc
jnp
inc
mov
or
nop
rorl
add
call
xchg
ret
push
sti
xchg
mov
mov
retw
clc
jge
push
ds
sahf
das
daa
inc
adc
mov
ds
adc
mov
xor
xchg
movsl
cmp
xor
insl
xchg
cs
imul
int
xchg
cmp
mov
mov
push
subl
lods
sub
imul
loope
mov
movsb
mull
test
pop
add
mov
arpl
lods
enter
mov
pop
add
or
in
lock
cmc
hlt
pop
push
dec
in
repz
cltd
outsl
out
mov
mov
add
pop
push
mov
sub
stos
xor
cmp
cmc
adc
call
ret
insl
int3
sbb
push
push
xchg
and
sbb
or
xor
xor
sarb
rorl
pop
xchg
inc
jne
out
les
dec
push
and
mov
xor
adc
gs
jp
mov
lcall
arpl
or
xchg
inc
aam
mov
pop
mov
cld
pop
into
scas
adcb
adc
shlb
jp
adcb
push
fcmovnu
clc
pop
push
add
in
call
stc
stc
pusha
mull
lods
xor
push
out
push
fiadds
and
inc
or
xlat
imul
sbb
dec
test
mov
xchg
or
mov
lods
sub
loopne
movsb
and
arpl
popf
inc
stos
mov
out
outsl
inc
movsl
orb
pop
jmp
mov
dec
adc
dec
scas
sub
orl
add
fistl
addr16
and
lret
push
call
push
incl
in
idivb
pop
cmpsb
xor
fadd
xchg
sbb
jns
inc
xor
inc
rcll
es
inc
sbb
ja
inc
or
into
enter
out
sbb
je
imul
jne
fnstsw
daa
ss
mov
lods
outsb
repnz
repz
sub
fnstcw
movsb
jp
adcb
add
popf
mov
stos
or
and
leave
xchg
xor
mov
roll
sahf
dec
je
add
popa
popf
cmp
enter
cwtl
pop
sbb
dec
gs
rolb
lock
jbe
stos
ret
inc
imul
and
sub
push
stc
pop
mov
cltd
sub
aaa
fidivrs
push
in
filds
push
or
subl
jns
cmp
fwait
inc
insw
test
test
xchg
aaa
dec
sahf
xchg
lcall
mov
scas
stos
xor
xlat
sbb
aam
xor
lahf
mov
rolb
jle
xor
mov
ret
es
jns
mov
test
outsl
xor
sub
pop
xchg
insl
add
int
in
jmp
pop
add
stos
orb
psrlq
pop
mov
cmp
mov
aaa
inc
adc
adc
decl
inc
adc
jmp
add
xor
sub
test
sbb
aas
arpl
xchg
inc
jmp
xor
mov
enter
push
into
fidivs
mov
test
das
int3
xchg
adc
outsl
out
mov
test
addr16
outsb
push
into
dec
clc
mov
xchg
cwtl
cmp
mov
inc
imul
les
shlb
mov
jbe
adcl
in
stos
mov
shlb
mov
roll
in
push
mov
sti
addr16
clc
sub
push
pop
and
stos
negb
jle
ret
loope
push
cltd
add
and
mov
cmp
mov
rclb
outsl
push
or
sahf
inc
pop
and
jecxz
inc
xchg
aad
jmp
jmp
sub
mov
jns
pop
add
test
arpl
repnz
mov
out
int
loop
mov
mov
shl
test
loop
and
pushf
je
push
inc
inc
adc
call
and
pop
xor
adcb
icebp
aam
and
testb
or
ja
pop
in
fidivl
dec
mov
sbb
loopne
cmp
fldt
fistpll
jecxz
mov
lods
js
xor
jae
mov
cmc
pusha
push
lods
mulb
nop
adcb
aad
xadd
outsb
in
arpl
sub
xor
test
sub
sahf
inc
xor
dec
cmpsb
pop
sbb
jmp
inc
fmull
ficoml
mov
push
mov
cmc
lret
addr16
out
mov
es
jns
or
pop
adc
mov
inc
xor
mov
sbb
ja
mov
pop
daa
test
mov
in
jmp
imul
jge
jno
jmp
testb
jns
push
pop
repz
jg
scas
mov
mov
into
sti
aam
fisubrl
ljmp
xor
jbe
rclb
jb
orb
jecxz
fnstsw
mov
mov
scas
lods
xor
mov
jmp
ss
sbb
dec
pop
mov
cmp
mov
fstpt
lods
cltd
cmp
xchg
aad
repnz
test
pop
pop
fistpll
dec
pop
cld
dec
jo
cmp
jmp
mov
xor
push
inc
and
cmp
dec
adc
imul
sbb
in
insl
jle
jno
adc
jmp
sbb
adcl
xchg
inc
daa
mov
jmp
mov
xor
aaa
into
sub
xchg
cmp
movsl
lret
xchg
push
mov
sub
xor
and
jl
shrl
dec
rclb
xchg
sbb
mov
mov
scas
or
mov
mov
dec
mov
lods
lahf
inc
or
or
pop
pop
add
movsl
ja
dec
mov
orb
sub
xchg
sahf
orb
pushf
inc
cld
cmp
cs
jge
aas
cmp
cmp
cmp
push
aad
xchg
inc
lods
sub
pop
fidivrl
lret
jmp
pop
mov
pop
stc
in
sub
jbe
scas
daa
xchg
imul
mov
clc
or
sbb
lret
dec
jne
je
psrlq
push
mov
aam
mov
jp
mov
mov
xchg
sbb
dec
adc
fimuls
jp
or
or
test
std
sub
mov
sbb
dec
jns
cmpl
shrl
mov
dec
cmp
cmpsl
xchg
and
int3
xchg
into
cmp
push
ret
nop
loopne
ret
cmp
mov
in
inc
cli
jle
mov
cmp
mov
movsb
insl
sub
rolb
lds
xchg
xchg
mov
mov
cmpsl
sub
test
test
mov
push
pop
frstor
mov
inc
fidivrs
out
dec
or
or
pop
xchg
lret
test
nop
in
pop
mov
lea
jno
mov
mov
adc
dec
push
flds
mov
shlb
mov
test
dec
test
js
pop
mov
mov
mov
cmp
mov
ja
cld
lock
lret
imul
xchg
inc
mov
movsb
sti
pop
daa
jmp
mov
icebp
lock
lcall
fnsave
cs
aaa
movsb
lods
sub
pop
mov
bswap
or
push
jnp
aam
stos
data16
jmp
or
test
inc
rorb
ljmp
xchg
push
std
jmp
decl
sub
add
xlat
test
xor
je
cmp
xor
cli
xor
and
insl
dec
cmp
jp
inc
pop
inc
adc
into
addr16
xor
leave
movsb
sub
mov
mov
mov
and
push
mov
test
movsb
or
popl
push
add
stc
push
mov
add
xchg
pop
int
xchg
lret
add
jbe
push
pushl
jo
iret
leave
sub
out
arpl
test
std
mov
ljmp
gs
push
repz
pop
pop
push
enter
fwait
xor
sub
push
pop
cmp
movsl
sub
ret
cwtl
ds
add
test
sti
mov
jno
dec
cmpsl
inc
push
inc
mov
cmp
iret
popa
je
and
ljmpw
iret
mov
or
add
ret
lds
jmp
adc
jecxz
stos
daa
ret
stc
imul
push
clc
iret
xchg
jp
movsl
stos
fnstsw
cmc
push
std
pop
jnp
jns
sbb
clc
jo
cld
pop
out
or
mov
and
xor
push
ret
sbb
adc
orl
adc
movsl
pop
popf
cmp
mov
loopne
popf
out
jmp
xchg
or
cld
fildll
sti
in
adc
fcoml
push
push
pop
fnstsw
mov
adc
aad
dec
out
addr16
lcall
push
mov
fisubl
mov
lea
int
lea
sub
pop
xchg
inc
push
mov
test
std
inc
or
and
scas
sub
lcall
jl
mov
adc
in
insl
or
mov
dec
jecxz
shl
mov
push
push
es
test
xchg
sbb
ss
and
test
cmp
sub
aam
mov
pop
jns
test
stos
fidivrs
lret
inc
pop
jg
mov
cmpsl
aad
cmp
rorb
or
cmpl
mul
mov
dec
push
xorl
add
loopne
sub
es
ljmp
fldenv
mov
xchg
es
add
inc
popa
adc
xor
shll
fs
movb
xor
sbb
xchg
in
repnz
push
loop
shlb
movsl
sub
pusha
mov
cmpsb
sub
mov
sub
cli
pop
mov
scas
dec
adc
mov
and
inc
jo
or
mull
cmpsl
and
pop
call
cmp
mov
add
xchg
in
or
pop
and
cmp
inc
or
add
xor
mov
aaa
lcall
jl
sub
sub
or
test
outsb
sub
pop
add
inc
or
out
js
loope
mov
jmp
push
inc
orl
sbb
sahf
inc
fs
leave
xchg
cmpsl
jb
int3
push
mov
in
icebp
xorb
in
rorb
inc
outsb
lcall
jo
dec
adc
addr16
sbb
out
outsl
mov
lods
jg
cmp
js
adc
daa
push
movsb
ja
push
dec
mov
popl
push
fdivrs
lcall
fdivrs
repnz
and
inc
adc
jns
ljmp
mov
fsubl
out
fstl
into
out
addr16
xchg
aas
mov
pop
stc
into
test
mov
push
aam
lret
pop
inc
cmpsb
cmp
jns
lea
fnstcw
pop
inc
or
lret
movsl
sub
cmp
bound
dec
adc
mov
fs
mov
sub
movsl
sub
aas
adc
sbb
fidivrs
inc
insb
in
adc
pop
mul
dec
pop
scas
jl
jle
inc
popf
cmp
imul
insb
sbb
daa
mov
ret
mov
adc
cmp
adc
cmp
jae
mov
daa
ja
push
stc
xor
test
and
cmp
sarl
sub
cmpsb
daa
hlt
mov
loope
push
fiaddl
xchg
aad
adc
aad
gs
cs
loopne
cmpsl
mov
leave
xchg
inc
mov
repnz
rolb
or
dec
or
test
dec
adc
xchg
pop
mov
sti
sbb
repz
rorl
les
aad
scas
in
loope
and
sti
dec
adc
push
faddl
pop
pop
dec
rorb
in
ljmp
jle
push
push
cld
dec
push
jo
int
rorb
xlat
loop
push
adcb
sbb
pop
clc
imul
enter
lret
cs
xchg
int
loopne
popf
cmp
stc
cwtl
aaa
subb
mov
xchg
mov
inc
aaa
fidivrs
xor
inc
lods
inc
mov
cmpsl
js
dec
or
fnstenv
aaa
jnp
outsl
int
push
push
js
stc
xchg
pop
leave
xchg
int3
imul
sbb
mov
adc
mov
inc
add
add
fildl
cmp
adc
pop
xor
pop
clc
mov
imul
sahf
loopne
dec
lods
inc
or
popf
movsl
sub
pop
mov
js
fildll
mov
add
mov
adc
cmp
scas
leave
cmp
outsb
repnz
mov
jmp
sub
mov
push
cwtl
or
push
roll
movhps
lods
in
adc
mov
mov
add
stc
jae
adc
scas
xchg
cmp
xchg
fs
or
pop
stos
ss
sarl
mov
fs
rol
out
pop
sbb
adc
lcall
dec
push
jno
test
mov
xchg
andl
mov
jmp
fs
jb
push
rorl
pusha
xchg
aaa
int3
icebp
pop
and
mov
jl
orb
idiv
clc
vinsertf64x2
in
sbb
rcll
xor
push
les
clc
decb
ret
sub
lods
das
insb
aas
gs
popa
mov
add
sub
repnz
cmp
lock
test
push
clc
add
and
xchg
jns
std
outsl
icebp
push
lret
add
sbb
repnz
fcmovnb
pop
lret
xchg
mov
test
filds
cmp
fiaddl
adc
and
xlat
inc
adc
xchg
je
jge
fisubl
push
push
add
xchg
pushf
cmp
fdiv
lret
mov
and
jmp
cmc
dec
pop
or
loopne
push
rolb
mov
stc
pop
sbb
inc
jmp
sbb
xor
cltd
inc
sbbb
pminsw
mov
stc
mov
stos
into
xchg
movsb
and
push
mov
jle
test
movsb
inc
inc
mov
cwtl
mov
loope
push
adc
adc
in
jecxz
xchg
dec
das
shl
pop
sbb
dec
lahf
aas
outsb
lret
jp
mov
dec
out
mov
insl
and
jb
adc
mov
push
outsl
lods
push
ret
lea
lret
arpl
cmp
xchg
sub
dec
in
add
iret
out
test
dec
push
jmp
mov
dec
adc
mov
stos
add
pop
xor
push
mov
mov
mov
jbe
and
cmp
popf
inc
das
mov
loope
leave
xchg
xchg
cmc
filds
jnp
orb
out
test
mov
icebp
pop
in
inc
adc
std
jecxz
loope
lods
daa
clc
std
xchg
aas
mov
rolb
les
shll
sbb
rcrb
and
and
sti
push
mov
aas
mov
rcr
nop
pop
into
rorb
push
clc
mov
test
sbb
push
xchg
or
in
enter
ret
mov
lahf
pop
loope
call
add
lods
xor
shrb
mov
xchg
mov
pop
aam
pop
add
add
int3
and
dec
adc
scas
data16
adc
jle
push
rolb
dec
mov
testb
int
xchg
inc
sbb
mov
fwait
roll
pop
add
ljmp
je
adc
dec
push
add
icebp
pop
lcall
xchg
jp
test
loop
leave
pusha
xchg
jae
cmp
mov
and
push
jmp
pop
jmp
das
mov
cli
ret
stc
mov
mov
adc
push
clc
insb
dec
cmp
repnz
loope
jmp
hlt
pushf
cmp
rcl
adc
aas
or
pop
loopne
pop
rol
std
adcb
lahf
cmp
jbe
fwait
gs
mov
testl
roll
aaa
cwtl
or
leave
pop
inc
push
lcall
outsb
repnz
mov
jns
jne
pop
insb
adc
lods
push
mov
rol
mov
push
xchg
xor
push
sub
sbb
ffree
flds
xor
fnstenv
sub
jnp
dec
and
adc
and
imul
adc
add
rcr
inc
cmp
mov
scas
aaa
cltd
aas
mov
fldz
sub
insb
mov
jge
xchg
fstpt
mov
mov
andl
js
mov
inc
adc
xor
sbb
sti
cmp
lds
push
add
dec
or
mov
movsl
xor
dec
or
popf
dec
test
cmp
adcb
outsb
mov
je
scas
or
fidivrs
ljmp
jecxz
scas
daa
cld
stos
sub
loopne
mov
clc
sub
sub
pop
lcall
sbb
je
dec
stos
xor
mov
mov
sti
push
add
cli
and
xchg
lock
xor
cs
inc
test
dec
or
xchg
cld
pop
xor
and
mov
mov
sub
mov
sbb
das
std
popa
jmp
cmp
or
jle
xchg
and
out
rorl
fcomip
insb
out
mov
mov
fdivrs
test
insb
popa
icebp
icebp
mov
pop
jo
enter
insb
out
roll
or
xlat
call
hlt
xchg
xor
mov
mov
in
jge
pusha
fwait
repnz
pop
leave
lcall
inc
gs
adc
xor
jl
stos
lods
sub
scas
mov
and
mull
cmp
mov
fdivrl
rcll
pop
cld
pop
mov
pop
clc
loop
imul
std
push
ljmp
flds
mov
mov
clc
jl
lock
inc
jo
andb
rolb
dec
rclb
add
movsl
mov
fstpt
shlb
std
icebp
mulb
call
xchg
inc
aam
mov
xlat
ds
xor
test
mov
imul
and
sbb
test
inc
sahf
cmp
in
inc
adc
xchg
je
fiadds
fcompl
mov
ja
popf
aaa
xlat
imul
xchg
mov
sub
mov
ret
xchg
or
pushf
cmp
mov
push
xchg
in
ss
mov
mov
in
jbe
mov
inc
inc
pop
jns
roll
les
inc
pop
mov
sbb
scas
lds
adc
icebp
mov
and
imul
clc
jnp
insb
add
nop
cmp
mov
ss
mov
sub
adc
stc
popa
ret
dec
pop
adc
mov
jmp
std
into
xchg
push
or
pusha
inc
cmp
push
pushf
orl
jb
ficoms
or
stos
mov
mov
lret
adc
dec
lods
jns
cli
xchg
gs
push
jecxz
cltd
stos
mov
imul
nop
inc
nop
gs
jno
loope
lods
push
and
mov
scas
mov
test
push
shr
jmp
inc
std
roll
adc
adcl
pop
push
ret
mov
loopne
dec
add
mov
dec
adc
fildll
or
xor
mov
mov
inc
adc
in
outsb
inc
mov
add
or
leave
lea
mov
scas
test
jnp
shlb
jle
push
cs
cmp
jge
push
mull
mov
scas
cmp
nop
cmp
mov
jbe
pop
das
mov
push
jge
and
mov
mov
std
pop
xchg
addr16
adc
mov
add
xchg
cmpsl
mov
cmp
loop
dec
pop
jle
or
orb
rcrb
fwait
test
lods
dec
les
pushf
shrb
xchg
dec
lcall
jo
sbb
or
lret
cwtl
rcll
pushf
aaa
cmp
es
daa
mov
jmp
add
jecxz
xor
cmc
pop
lcall
das
add
jbe
dec
test
in
loop
lods
xor
repz
or
stc
popa
jne
iret
xchg
or
pop
les
xchg
lret
xchg
sbb
test
mov
cltd
inc
popf
pop
jae
cli
leave
push
outsl
lock
ds
xor
mov
pop
mov
lret
xchg
xchg
cmp
push
pop
add
fnsave
push
callw
jbe
in
rcr
jnp
sti
cwtl
aaa
xchg
add
add
orl
out
roll
mov
rcll
pop
ror
bnd
xchg
sub
pop
add
cmp
shl
push
filds
xchg
in
flds
lret
adc
or
orb
pop
add
mov
jno
loope
mov
clc
popa
out
outsb
push
leave
xchg
js
xchg
dec
std
lock
xchg
cmpsb
cmp
imul
xor
jl
pop
xlat
cmp
cwtl
pop
mov
bnd
cltd
jns
lret
fisubs
pop
pushf
sbb
jae
in
daa
mov
cli
loop
outsl
int3
lds
sti
xchg
and
jg
jbe
stos
sub
cmp
pop
sbbb
aam
fs
stc
pmaxsw
in
pop
cmpsb
movsb
outsb
jmp
mov
pop
add
jle
adc
imul
cs
mov
mov
sub
sbb
pop
es
leave
mov
cmp
pop
prefetch
or
xor
xchg
add
cli
sub
dec
fbstp
xchg
add
pop
sbb
mov
jge
jae
in
sbb
mov
xor
cmpsl
arpl
dec
or
mov
xlat
outsb
repnz
shrl
push
cmc
mov
aad
mov
dec
test
popf
es
pop
mov
int
or
sahf
aad
shlb
mov
fs
arpl
cmp
mov
stos
outsl
icebp
sub
inc
adc
pop
iret
mov
pop
arpl
aaa
into
add
xchg
shlb
and
jl
int
sub
into
gs
sti
sbb
ja
jmp
negb
cld
push
into
jl
jne
mov
lods
popf
inc
jbe
pop
int
push
mov
bound
mov
daa
aam
jo
ss
cmovp
inc
push
cmpl
testb
pop
enter
dec
mov
pop
add
test
jbe
stos
mov
mov
add
jl
imul
sub
cmp
jmp
lock
lods
inc
push
jg
mov
subb
fwait
xlat
addr16
int
dec
pop
icebp
sbbb
xor
insb
arpl
lret
jge
repz
sahf
outsb
data16
addr16
std
gs
aaa
fwait
dec
xrelease
sahf
jle
pop
test
xor
decb
jl
cltd
mov
jmp
jns
sar
xchg
into
xchg
popa
ljmp
in
nop
cmp
pop
arpl
gs
pop
mov
mov
fidivs
fsubrl
xchg
dec
das
lret
bound
sbb
mov
cmp
repnz
sahf
push
adc
out
inc
daa
and
or
stos
mov
popa
clc
cld
or
dec
ds
shrl
jo
xor
in
mov
movsl
ss
push
sub
mov
nop
fwait
test
pop
scas
in
sti
push
int
dec
xchg
xchg
mov
jb
in
ret
pop
xchg
sub
inc
loopne
js
scas
inc
mov
int
fucomip
sbb
sbb
ds
outsl
push
or
shll
or
sub
xchg
sub
fs
jl
mov
mov
addr16
icebp
mov
test
mov
mov
leave
aad
roll
cli
xchg
sbb
sbb
stos
nop
ss
int3
test
loop
jmp
and
or
rcrl
nop
daa
mov
fisubrl
xchg
dec
sub
sbb
sahf
sub
mov
cmp
lock
lahf
add
pop
lock
and
ja
xchg
ja
fldt
leave
stc
cli
or
dec
pop
shrb
outsb
lahf
mov
sarl
xor
fdivl
push
sub
xchg
cltd
cmpsl
dec
loop
mov
imul
ds
xchg
jle
push
in
nop
lahf
movsl
cmp
mov
or
bnd
pop
and
xchg
sub
inc
loope
ja
mov
mov
into
gs
sbb
xorl
cmp
outsl
push
or
shll
adc
inc
ss
sub
dec
fs
jp
mov
mov
push
and
out
xchg
mov
movsb
mov
fdivl
aad
ret
cli
xchg
sbb
dec
loopne
cmp
scas
insl
jp
stos
mov
int
int3
test
loopne
jmp
and
fs
pop
movsl
test
ja
fsubrs
xchg
dec
sub
arpl
sbb
xorl
adc
inc
and
mov
xchg
jne
stc
clc
or
sbb
shrl
insb
lahf
ss
mov
mov
mov
adc
inc
push
lds
cmpsl
dec
jecxz
mov
push
sub
aaa
into
cmp
mov
jle
push
in
mov
jae
loope
les
add
jns
push
mov
mov
into
gs
push
mov
std
in
subl
cmp
outsb
push
or
shlb
cmc
inc
frstor
xor
fs
js
mov
mov
fcmovnbe
imul
inc
mov
movsl
mov
fdivl
aam
ret
add
daa
dec
loope
cmp
scas
imul
stos
mov
int
lret
xchg
nopl
or
ret
pop
movsb
adcl
not
scas
inc
or
add
pop
imul
pushf
jl
subl
adc
inc
and
mov
xchg
jae
stc
testb
dec
cmp
sbbl
lea
ss
scas
repnz
mov
adc
inc
push
das
movb
in
mov
scas
out
imul
or
into
cmp
and
in
mov
jae
fcomip
lds
xchg
sub
inc
jecxz
jne
mov
xchg
into
gs
pop
mov
sti
in
subl
or
mov
fistpll
adc
inc
frstor
xchg
cs
fs
jbe
mov
mov
push
jmp
aaa
sbb
ds
cmpsb
mov
fdivl
shrb
xchg
pop
and
sbb
test
lret
cld
fcoml
push
cmpsb
cmp
pusha
jno
pop
mov
aam
inc
push
sbb
cwtl
dec
daa
int3
arpl
pop
mov
jp
subl
pop
repz
pop
daa
mov
xchg
jno
fsubl
ret
arpl
hlt
push
mov
cmp
aad
mov
aaa
lcall
push
in
call
test
paddusw
das
movb
dec
in
mov
mov
cmc
imul
or
iret
cmp
and
push
in
mov
je
fsubrp
lds
xchg
sub
inc
jecxz
jae
mov
test
data16
pop
mov
cli
in
test
cmp
mov
mov
fnstsw
pslld
and
xchg
arpl
jne
mov
mov
sbbl
xlat
shrl
ljmp
pop
cmp
scas
nop
fnsave
sub
xchg
push
and
push
aaa
sbb
cmpsl
mov
into
mov
fistl
or
cmpsb
cmp
pop
outsl
les
adcb
hlt
shrl
cwtl
inc
es
pop
push
jmp
stos
mov
or
cmp
pop
jp
nop
jo
frstor
ret
repz
dec
ss
sbb
aad
mov
cmp
mov
adc
inc
dec
das
movb
dec
in
mov
mov
repz
pop
cmp
cmp
and
push
out
mov
jne
fucomp
lds
xchg
sub
inc
jecxz
jb
mov
test
iret
data16
in
mov
stc
in
test
cmp
mov
mov
fdivrl
push
icebp
inc
fisubs
xor
cld
je
mov
mov
sbbl
shrl
jmp
icebp
mov
push
outsb
jge
cmpsb
scas
fnsave
sub
xchg
adc
sbb
cmpsb
mov
into
mov
ficoml
or
cmpsb
cmp
pop
outsb
les
jg
sub
shrb
cwtl
inc
and
pop
mov
js
subb
or
cmp
sub
outsl
inc
frstor
shll
mov
xor
push
aad
mov
cmp
mov
adc
aas
dec
das
jg
cld
xchg
xchg
mov
sbb
and
cmp
aaa
inc
mov
ja
push
out
mov
jne
fsubr
lds
xchg
sub
aas
jecxz
jno
mov
adcl
data16
in
mov
clc
in
test
aaa
cmp
mov
mov
fstpt
or
das
xchg
cs
inc
gs
jae
mov
mov
sbbl
aad
push
call
icebp
mov
mov
cmpsb
lods
mov
je
into
sub
xchg
adc
dec
jecxz
xor
mov
jae
add
mov
clc
fcoms
or
cmpsl
ds
sub
pop
insl
lds
xchg
sub
shrb
cltd
inc
and
fs
data16
test
ds
leave
or
cmp
sub
mov
fstpl
mov
mov
sbb
insl
xchg
xchg
test
mov
mov
push
jmp
or
jne
dec
xor
jle
cld
xchg
nop
lahf
dec
in
mov
mov
icebp
insb
add
add
shlb
push
push
out
xchg
jne
pop
sbb
xchg
sub
ds
jo
mov
adcl
and
sub
ds
dec
or
mov
fidivrl
or
inc
ficomps
cs
das
pusha
inc
gs
jno
mov
mov
sbbl
aam
imul
mov
mov
mov
cmpsl
lods
mov
je
int
sti
xchg
adc
dec
in
xor
mov
jb
add
mov
not
push
in
pop
sbb
or
pop
sahf
jnp
sub
into
scas
inc
add
add
push
and
cmpsb
mov
call
or
cmp
sub
lea
fstpl
fs
out
add
sbb
xlat
outsb
xchg
cmp
mov
stos
sub
fidivs
dec
xor
jge
cld
xchg
mov
sbb
and
cmp
xor
and
push
out
test
jne
fsubr
pop
sbb
xchg
sub
mov
jg
add
shl
and
es
or
mov
fnstcw
or
inc
ficomps
ds
outsl
xorb
ret
insb
add
daa
repz
mov
test
mov
je
int3
das
std
xchg
nopl
push
xor
mov
jno
add
les
in
add
es
pop
imul
popf
jns
sub
int3
scas
inc
adc
inc
pop
into
gs
arpl
mov
movsb
mov
xlat
out
or
cmp
sub
dec
pop
jge
mov
ficomps
mov
mov
sbb
xlat
outsb
test
cmp
mov
push
out
adc
cmp
enter
xchg
lea
mov
out
insl
add
add
shll
inc
mov
jae
pop
out
test
or
sbb
xchg
sub
cmp
jl
dec
mov
jle
add
shl
and
and
inc
or
ja
pop
hlt
mov
sub
leave
xlat
jnp
or
dec
fistps
cltd
xor
data16
outsb
jle
dec
mov
test
rcl
insb
add
mov
mov
rclb
adc
mov
fdivr
xchg
push
sbb
sbb
mov
ret
hlt
rcll
add
test
or
pop
fwait
js
sub
lret
mov
std
fwait
inc
push
iret
push
popa
and
mov
les
mov
ss
sub
inc
push
jge
mov
fistps
mov
mov
sbb
push
xlat
outsb
andb
xchg
mov
rcrl
adc
cmp
enter
xchg
mov
sbb
fsubrp
insl
add
add
shlb
aas
mov
jno
pop
lock
push
in
pop
pop
clc
xchg
sub
cmp
jl
dec
mov
jge
add
rcr
and
and
aas
bound
movsb
jbe
pop
hlt
mov
sub
enter
pop
ljmp
pop
cmp
insl
jl
dec
scas
mov
insb
add
mov
mov
rcrl
adc
mov
xchg
or
sbb
lahf
cmpb
mov
mov
repnz
add
inc
inc
and
or
addr16
pop
cltd
ja
sub
lret
cld
or
shlb
pop
and
mov
ret
or
hlt
add
xor
sub
inc
push
jge
xchg
loopne
test
xor
mov
mov
sbb
sbbb
xchg
mov
ret
hlt
adc
cmp
enter
xchg
mov
sbb
add
cmp
xor
mov
jo
pop
lock
push
aad
pop
push
notl
jl
dec
mov
jl
add
iret
frstor
mov
and
aas
popa
inc
or
hlt
mov
sub
aam
adc
jmp
cltd
xor
addr16
insb
jnp
dec
lods
lea
insb
add
mov
mov
pop
data16
test
xchg
jbe
das
xabort
std
xchg
or
dec
in
sub
insb
add
mov
push
out
add
test
or
data16
pop
cwtl
jbe
sub
leave
mov
sti
or
fwait
cmp
pop
and
mov
ret
repz
xor
ret
jge
xchg
loopne
cmpsl
fwait
xor
mov
mov
sbb
jg
movsb
cmp
mov
pop
jecxz
adc
aaa
inc
xor
jbe
call
enter
fsubr
insl
add
cmp
das
cmp
pop
lock
pop
adc
aaa
in
imul
lcall
and
and
aas
pusha
inc
or
hlt
mov
sub
sarl
add
daa
cltd
xor
addr16
imul
lods
mov
insb
fbld
mov
rcrl
adc
mov
xor
neg
std
xchg
or
dec
out
sub
mov
imul
jge
shrb
iret
push
out
add
stos
inc
inc
and
push
gs
xchg
sub
mov
stc
or
addr16
pop
and
lahf
scas
inc
fsub
rorb
add
xor
sub
inc
push
jle
test
xchg
cmpsb
pushf
xor
mov
out
mov
sbb
jle
movsb
cmp
scas
ret
repnz
and
loope
xor
push
call
test
outsb
add
sub
dec
pop
lock
stos
inc
shll
pop
adc
xchg
sub
ss
push
mov
mov
mov
and
inc
xlat
pop
inc
or
cmc
mov
sub
sarb
out
loopne
es
jns
dec
stos
mov
insl
frstor
mov
rcrl
adc
mov
xor
not
std
xchg
or
push
out
sub
mov
push
add
lods
mov
push
out
adc
or
xchg
jb
sub
mov
testl
shrl
pop
and
mov
xchg
mov
pusha
divl
adc
inc
push
jle
andl
xchg
movsb
pushf
xor
mov
jmp
idivl
push
cmp
outsl
jl
movsl
cmp
popf
testb
lock
and
loop
xor
xor
jae
add
lds
outsb
add
sub
mov
insb
dec
pop
icebp
jge
stos
inc
mov
loopne
pop
adc
xchg
sub
inc
mov
ja
add
mov
fldenv
mov
push
sub
xlat
pop
aas
push
movsl
jo
pop
cmc
scas
xchg
sub
ret
adc
in
loope
and
xor
push
dec
test
lret
cld
push
cs
jno
stos
mov
ret
xor
hlt
aam
xchg
push
push
push
out
daa
sbb
pop
push
cmp
stos
mov
pop
out
cld
push
stos
inc
inc
sbb
leave
pusha
xchg
jo
sub
mov
jle
ret
mov
cmc
pop
push
popf
cmp
shrb
pop
and
mov
xchg
mov
pusha
imull
cvtps2pi
inc
dec
jle
andl
xor
mov
add
cmc
mov
pop
cmp
outsl
jp
cmpsb
cmp
int
les
out
adc
pop
add
jp
inc
xor
jno
add
ret
cmpsb
pop
mov
in
add
sub
mov
push
pop
bnd
stos
inc
mov
fmulp
pop
adc
xchg
and
out
fs
mov
jbe
add
mov
shrl
xlat
and
sbb
ds
outsl
jl
cmc
lods
nop
sub
adc
jecxz
loop
and
add
mov
push
mov
mov
ret
pop
pusha
outsl
adc
mov
xor
repnz
xchg
push
adc
out
daa
sbb
add
stos
mov
pop
lock
or
inc
ds
leave
pusha
xchg
jo
sub
in
mov
cmc
add
shrl
push
and
mov
mov
mov
pusha
imull
lds
jle
jg
dec
jecxz
mov
push
in
mov
and
inc
fsubrs
pop
cmpsl
mov
lds
adc
sbb
ds
outsl
push
add
shll
add
sub
mov
push
mov
adc
fmul
pop
push
icebp
cwtl
das
and
out
bound
jbe
add
mov
aam
leave
aad
mov
sbb
adc
stos
nop
cs
jl
loop
jecxz
and
add
mov
pop
mov
fisubl
lea
pop
pop
insl
adc
sahf
and
mov
xor
lock
xchg
add
push
call
push
outsl
push
xchg
ja
shrl
leave
pop
icebp
cli
or
dec
pop
lret
outsb
xchg
mov
shll
xor
aam
inc
push
and
mov
mov
popa
clc
sub
jg
jge
dec
in
sahf
popf
xor
mov
add
icebp
mov
and
inc
fnstenv
pop
test
mov
pop
fucomp
adc
jnp
cmp
add
shlb
adc
ds
xor
pop
repz
stos
inc
mov
fcmovne
pusha
or
das
out
popa
inc
mov
je
add
imul
and
sbb
inc
fcomps
adc
stos
mov
lds
loopne
jecxz
pop
pushf
xor
push
fs
push
movsb
test
outsl
neg
cmpsb
cmp
dec
sub
das
sub
push
adc
mov
sub
std
adc
arpl
cmp
add
cmc
gs
ja
mov
mov
jle,pn
inc
adcl
jecxz
adc
repnz
mov
cld
push
or
cmc
inc
cmp
mov
insb
adc
and
fs
test
repz
mov
movsb
addr16
jo
adc
mov
inc
cmpsl
mov
sbb
fxch
lods
hlt
lds
adc
cld
cltd
mov
dec
fildll
aad
icebp
sub
lret
pop
mov
cmp
cmp
inc
cmpsb
jl
xor
adc
ljmp
scas
jae
mov
iret
ret
inc
loope
xchg
mov
or
movsb
rcll
mov
jecxz
fwait
lcall
sbbb
popf
or
sbb
xor
add
dec
rorb
fadds
cmpsl
add
test
sbb
cmp
pop
pushf
sub
fldl
pop
jge
lret
lret
mov
ds
sbbb
mov
add
rolb
mov
dec
ss
sub
pop
outsl
and
mov
adc
mov
fnstsw
dec
xchg
enter
jns
cld
dec
into
inc
fsts
fldt
add
stos
outsl
or
in
fstpt
mov
cmc
int3
dec
xchg
jmp
adc
mov
and
jp
test
faddp
pop
adc
jmp
lods
mov
sbb
mov
or
push
or
dec
push
mov
movsb
xchg
clc
push
pop
leave
sub
lds
xchg
aam
into
rorl
jge
ret
or
in
nop
rorl
sahf
repnz
outsl
cmpsb
xchg
cmp
negl
bnd
repz
dec
push
pusha
js
lds
xchg
mov
ja
pusha
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
mov
stc
test
lock
lods
mov
int3
push
jg
int
push
xchg
jp
fldcw
loope
push
orb
mov
loope
rcll
adc
aad
adc
outsl
xchg
rorb
insl
inc
insl
xchg
mov
inc
imul
cmp
sbb
or
cmpsb
mov
jnp
loopne
stos
xchg
jns
int3
cmpsl
pop
mov
psubb
push
cmp
or
cld
cmp
dec
ljmp
or
push
adc
addr16
sti
push
ss
andb
sbb
outsl
xor
aam
loopne
push
insb
xchg
push
test
xchg
insb
push
dec
or
loope
enter
jp
cmpb
jge
adc
cmp
mov
ljmp
je
or
mov
push
in
dec
sub
mov
sub
or
xor
lock
cli
inc
loope
pop
into
mov
add
push
sbb
dec
iret
mov
or
mov
stc
outsb
outsl
iret
xor
test
push
adc
add
mov
pop
pop
inc
inc
xor
stc
psadbw
lret
mov
divb
pusha
nop
lret
sub
jns
cmp
into
and
repz
clc
and
pop
mov
es
push
gs
sub
out
sahf
aaa
scas
pop
lds
dec
dec
add
lcall
jmp
dec
int3
pop
popa
push
outsb
push
mov
test
cmpsl
mov
test
scas
xor
pop
cmp
loope
xchg
test
cmc
lods
adc
add
xor
mov
mov
fbstp
mov
push
cmpsl
xor
and
pop
scas
enter
xchg
add
and
sub
insl
clc
add
ds
hlt
lcall
inc
pop
jp
imull
out
jl
adc
fstpt
jno
daa
push
out
leave
mov
sub
inc
into
cltd
mov
mov
shll
xlat
mov
stos
dec
in
dec
xchg
insl
push
aaa
add
lret
stc
xchg
int3
iret
mov
cwtl
dec
xchg
mov
xor
ret
mov
lret
hlt
or
aaa
out
mov
ss
lret
cmp
std
les
lret
ja
jmp
cltd
push
fldenv
out
adc
add
lds
lea
insl
sbb
std
jp
jmp
or
cmpsb
lock
stos
pop
lods
xchg
jo
notl
adc
stos
lea
jae
insb
shll
pop
incl
adc
in
out
mov
loopne
pop
and
push
icebp
xor
xor
aad
imulb
shrb
mov
ljmp
test
add
cmp
in
sbb
loop
push
mov
jmp
cmpsl
in
mov
call
nop
jno
mov
mov
dec
mov
dec
mov
mov
cmp
shll
aaa
orb
fbld
pop
les
inc
mov
mov
mov
sti
into
xor
std
icebp
jbe
xchg
cmp
je
cmp
fnstenv
adc
out
fidivs
test
cs
scas
mov
sub
mov
ljmp
daa
mov
cmp
daa
mov
push
cmpsl
xor
mov
movsl
cld
mov
ja
pop
mov
pop
mov
cli
out
cli
lock
mov
das
add
aam
das
pop
pusha
fcoms
sahf
bound
cmp
xchg
cli
and
fldl
dec
mov
cmp
mov
stos
xchg
dec
cmp
push
jo
jmp
cmp
pop
lods
lods
das
je
aad
rcrl
sub
daa
mov
xor
cmpsl
std
jl
add
mov
cmpb
mov
outsl
js
adc
test
pop
in
inc
ret
and
mov
sub
cmpsl
pop
icebp
int3
daa
lea
xor
cmp
inc
add
mov
mov
mov
jp
sub
xlat
cmpsl
xor
sahf
pop
mov
add
icebp
test
inc
push
js
adc
jo
jno
pop
or
iret
mov
push
mov
xlat
dec
scas
push
mov
lods
repz
inc
std
and
add
or
dec
sub
sbb
rorb
mov
pop
bound
cli
repz
xchg
add
cwtl
into
clc
jg
insb
sarb
sub
xor
dec
push
inc
mov
push
push
inc
repnz
pop
arpl
adc
psrld
xor
jns
mov
pop
insb
xchg
mov
out
shlb
jno
and
fdivl
lods
add
adc
iret
mov
jbe
mov
fst
in
lahf
daa
cmpsb
mov
pop
dec
fs
sub
mov
pusha
pop
and
sub
push
std
pop
xchg
sub
scas
lods
add
jno
gs
out
jne
arpl
xor
add
xchg
add
mov
mov
cmpsl
add
add
fs
mov
sti
lock
cmpsl
pop
fmulp
jns
test
testl
sub
inc
cld
insl
pop
movsl
bound
scas
xor
pop
mov
mov
push
mov
cli
int3
lods
mov
out
aam
lret
cli
jno
push
je
mov
xchg
fiadds
inc
or
mov
sub
sarl
pop
notb
pop
inc
sbb
lea
in
mov
sbb
xchg
mov
sub
inc
add
in
lahf
sbb
incl
cmp
enter
std
mov
lods
xchg
aad
les
inc
sti
pop
mov
mov
dec
push
or
mov
idivl
ret
lret
and
fnstcw
mov
out
out
rol
dec
es
sbb
dec
cmp
and
xor
xchg
mov
mov
push
fwait
inc
dec
popa
adc
out
sahf
push
inc
popa
addr16
ficomps
mov
pop
mov
jnp
negb
mov
mov
dec
cltd
jno
adc
mov
ljmp
int3
dec
call
movsb
sahf
pop
ljmp
jbe
push
mov
daa
fildll
xor
imul
stc
add
fcomp
cwtl
mov
push
std
and
into
cmpsl
lods
outsb
fnstcw
dec
int
cltd
xchg
xchg
addr16
pop
loope
xlat
sarb
jns
jge
popfw
outsb
ret
dec
add
dec
add
lahf
dec
add
mov
mov
lret
lods
add
lods
lret
stos
sub
push
pop
cld
adc
mov
out
sahf
stos
mov
pop
fwait
scas
roll
fisubl
jge
andl
fadds
repz
mov
hlt
jns
inc
push
aam
