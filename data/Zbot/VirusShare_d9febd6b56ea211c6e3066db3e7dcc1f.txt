pop
roll
xchg
fwait
out
add
data16
add
sub
std
ljmp
enter
add
leave
ret
not
or
push
call
lea
push
push
lea
push
call
and
dec
mov
mov
push
sysenter
or
sbb
mov
fs
jbe
pop
push
push
cmp
and
repnz
les
dec
adc
adc
sub
sti
dec
sbb
adc
inc
movl
jmp
fldcw
mov
je
add
xchg
adc
aas
imul
inc
inc
pop
arpl
insl
cmp
dec
mov
enter
push
cld
lea
push
push
clc
sbb
mov
test
neg
sbb
mov
jmp
xor
push
jle
enter
sbb
fdivs
call
pop
ret
lock
push
or
push
push
mov
mov
les
inc
add
sbb
push
clc
push
xchg
push
out
dec
dec
adc
movsl
push
std
xor
sbb
pop
not
add
jmp
ret
push
dec
neg
inc
push
emms
push
icebp
inc
mov
push
div
rcrl
xlat
pushl
sbb
ret
and
icebp
sub
fcomip
jg
mov
dec
adc
sub
push
sbb
push
repz
ljmp
sbb
pop
inc
cmp
add
lods
std
pop
mov
push
jnp
sbb
ret
push
ret
lock
or
push
push
push
push
push
lock
mov
add
inc
out
sbb
ret
dec
lret
in
lcall
and
adc
out
mov
dec
aam
in
out
push
ljmp
fildl
sti
mov
je
dec
cmp
lret
add
ss
and
or
add
pop
dec
daa
pushf
jecxz
inc
xor
push
pop
mov
dec
jb
insb
push
pop
mulb
into
jne
lods
push
inc
pop
mov
aam
push
jle
adc
pop
pop
adc
lock
addr16
sub
push
push
or
ret
test
jecxz
inc
mov
js
push
inc
arpl
fcmovnu
fnstenv
enter
in
xchg
adc
cli
mov
adc
jbe
cwtl
lret
or
xchg
clc
mov
jge
xlat
test
push
adc
cmp
fdivs
push
fmuls
push
push
into
mov
rdmsr
lret
dec
add
mov
add
clc
in
negl
push
xor
maxps
cwtl
mov
loopne
push
pop
inc
lret
and
insl
jmp
loope
dec
xor
and
push
sub
pop
mov
sub
xchg
loopne
jne
jae
xor
jnp
or
xchg
or
adc
movsl
or
or
dec
mov
xor
rorl
int3
sub
adc
cmp
fucomip
xchg
or
and
pop
xlat
cmp
rolb
mov
int3
push
cmpsl
call
push
jno
arpl
mov
flds
mov
lea
fisttpl
ljmp
xchg
push
adc
jl
notb
sub
add
add
insl
fadds
fistpll
inc
imul
out
push
into
lcall
or
repz
dec
push
popf
lea
cmp
icebp
add
shl
pop
hlt
lods
jo
or
addr16
data16
cwtl
sbb
or
xorl
fstps
mov
pusha
rclb
sbb
rorb
sub
dec
cli
sahf
sbb
adc
hlt
jmp
inc
aaa
insl
xor
imul
rorb
outsl
add
daa
addl
clc
jle
loope
fdivrs
jne
push
fs
aaa
jb
xor
push
pop
adc
lock
dec
or
adc
add
xor
dec
push
test
lock
push
xor
inc
mov
mov
add
xchg
pop
pop
sbb
pop
jmp
fs
in
push
xor
mov
pop
fisubs
aaa
xor
arpl
or
cmp
lock
rolb
enter
repz
sbb
lock
jno
push
adcl
in
lea
lock
lock
cmp
gs
lods
ja
pop
mov
iret
cmc
add
push
cmp
push
add
sbb
push
aam
jo
jle
add
idivl
sub
cld
push
daa
repz
add
push
out
loopne
testb
inc
add
shrb
pop
inc
icebp
push
push
dec
inc
dec
addps
inc
xor
pop
dec
adc
or
fidivrl
ret
inc
push
add
xchg
loopne
andl
xor
dec
push
or
xor
pop
aaa
lock
jmp
mov
jae
push
into
xor
shlb
popl
adc
mov
dec
inc
add
inc
jo
cld
push
sbb
add
push
in
and
sbb
dec
cmpsb
mov
imul
rol
xor
leave
outsl
sub
dec
ss
add
cmp
mov
mov
sub
pop
clc
incl
or
dec
sub
mov
pop
roll
or
mov
sub
push
dec
mov
inc
add
lret
fimull
adc
popa
mov
dec
xchg
outsl
xchg
xor
outsl
das
push
add
inc
dec
push
or
icebp
popa
jnp
sbb
pop
dec
push
in
test
fstps
sub
jnp
fs
repz
cld
clc
mov
xchg
int3
call
mov
insl
mov
subl
cmp
cli
mov
subb
ds
mov
mov
xchg
adc
or
es
cmp
sti
push
xor
jl
push
push
fstpt
dec
mov
mov
dec
mov
orb
fildl
lock
sub
dec
dec
sbb
inc
dec
inc
add
pop
mov
inc
dec
add
hlt
or
jne
sbb
stc
dec
pop
pop
xchg
test
cld
xor
pusha
jl
outsl
repz
outsb
arpl
push
sub
pushf
mov
gs
dec
dec
addr16
in
cmp
test
mov
add
lahf
leave
dec
rcrb
lods
mov
xor
lock
les
testl
repnz
inc
loopne
jbe
add
xor
cmp
sub
add
adc
mov
shrb
and
stc
lret
cwtl
push
xor
mov
jb
roll
rorb
daa
xlat
cld
jne
add
adc
cmp
adc
pusha
push
cmc
arpl
sub
jnp
and
xor
pop
mov
popf
insl
addr16
mov
movsb
add
adc
and
mov
aam
inc
dec
dec
punpckhdq
mov
hlt
clc
popf
sbb
xchg
sbb
js
int
lods
push
push
aas
xor
sbb
pop
push
pop
aaa
cs
mov
orb
stc
pop
iret
fsubl
jmp
in
daa
mov
push
stos
rcl
pushf
pop
clc
mov
inc
jae
push
scas
dec
xor
mov
fnstsw
stc
add
sahf
or
jmp
inc
fisubrl
outsl
inc
shll
jno
movsl
adc
shll
enter
push
stc
shlb
push
pop
clc
in
add
jecxz
test
test
push
sbb
mov
pop
or
sub
inc
add
in
leave
adc
mov
sbb
mov
pop
stos
add
addr16
bound
out
sbb
or
imul
inc
out
pusha
in
inc
leave
xor
xor
and
xor
rcrb
das
jecxz
sbb
dec
push
and
loopne
outsl
mov
adc
jbe
call
aas
mov
cmp
mov
and
mov
sahf
fwait
and
mov
cmpsl
daa
das
iret
and
aam
orl
arpl
sub
outsl
add
push
and
dec
outsb
mov
jo
jbe
push
aam
mov
aas
sub
dec
shlb
or
sbb
add
pop
divl
mov
cwtl
in
push
fs
rorl
adc
arpl
fprem1
push
inc
fdivrs
push
daa
icebp
push
jns
cmp
ret
ljmp
dec
popf
test
into
fsubrs
popa
shl
hlt
shlb
popa
pop
xor
fs
mov
cmp
dec
push
jae
inc
mov
mov
xor
imul
jnp
pop
nop
mov
pop
fsubrs
cld
push
push
jno
xor
sbb
sar
add
inc
sub
pushl
int
adc
pushl
adc
in
iret
adc
loope
push
je
out
push
cmc
push
loopne
sbb
and
dec
fcomps
sbb
pop
jg
push
test
ficompl
cmp
pop
dec
clc
adc
clc
aad
jo
pop
bound
sbb
or
int
popf
or
lret
js
roll
js
jne
das
lret
pop
frstor
fwait
xchg
into
dec
test
js
add
dec
insl
add
dec
jne,pt
test
rcl
lea
jo
outsl
cwtl
ret
aam
popa
push
push
adc
mov
arpl
inc
test
xchg
sbb
cmpsl
add
or
jle
testl
test
mul
shl
aam
push
jl
fs
int3
dec
outsl
add
ds
leave
out
ficoms
lods
clc
das
sbb
fdivs
pop
adc
or
popf
or
jl
push
jmp
mov
inc
iret
out
sbb
push
ds
dec
fucomip
sbb
or
inc
xchg
aaa
sbb
push
es
dec
fdivs
mov
gs
jne
sbb
dec
outsb
inc
mov
lock
cld
xchg
xor
jo
mov
inc
mov
dec
fisubl
cmp
in
mov
dec
in
dec
je
aas
idivb
adc
repz
sub
dec
adc
mov
imul
hlt
adc
repz
fcmovnbe
push
js
loopne
inc
add
or
shrb
pop
cmp
jb
addb
or
aam
xor
mov
xor
inc
push
sbb
fiadds
or
mov
sti
dec
xor
insl
or
mov
mov
mov
pop
or
add
int
fisubs
xchg
pop
mov
push
add
mov
cmp
sarb
int3
or
dec
add
add
iret
fcom
mov
xchg
sub
add
mov
push
pop
sti
push
or
xor
shrb
or
fistl
pop
and
add
push
add
dec
lar
inc
inc
xor
mov
xchg
jbe
jbe
mov
outsl
pushf
lock
inc
push
andl
or
jo
cltd
adc
push
inc
fwait
add
mov
adc
dec
push
shlb
lock
popf
pushf
movsb
push
insl
add
sub
pop
add
mov
pop
push
push
dec
dec
inc
add
in
insl
add
jne
mov
adc
xchg
ror
aaa
mov
cmp
push
bswap
cli
dec
outsl
mov
hlt
das
jb
push
addr16
mov
shl
imul
push
fs
bound
jne
fisttpl
inc
mov
popf
pusha
jbe
xchg
mov
inc
call
and
fidivs
subl
mov
leave
nop
or
pop
stos
adc
cwtl
fcmovnbe
or
lret
add
xor
fs
lret
push
push
popf
in
frstor
xor
rol
adc
mov
and
jl
aad
cmp
jno
adc
mov
rolb
sbb
xchg
outsb
adc
mov
mov
daa
mov
adc
sbb
or
cmpb
mov
sub
and
dec
pop
aad
add
ss
push
add
inc
insb
test
mov
repz
addr16
pushf
test
or
stos
mov
fmul
stc
js
gs
pusha
xchg
pop
loopne
sahf
test
mov
push
add
mov
imul
xchg
mov
enter
psubsw
test
es
icebp
xchg
rolb
xchg
sahf
add
pusha
icebp
insl
leave
xor
mov
xchg
or
shl
pop
mov
les
inc
jns
test
cmp
mov
enter
cmp
cmp
dec
bound
cld
jne
jmp
mov
pop
repnz
xchg
loopne
xorl
movsb
jne
add
rorl
jge
je
lret
fisubrl
iret
xchg
sti
adc
add
outsl
insl
movl
add
imul
aaa
jle
inc
xchg
aad
add
insb
dec
stos
adc
and
inc
int
or
in
ficompl
loop
ljmp
pop
insl
movsb
or
fadd
and
jnp
loopne
aas
pop
mov
xor
lea
das
pop
jle
push
push
mov
adc
jl,pt
addr16
inc
clc
dec
and
fdivrl
mov
jbe
in
mov
test
or
mov
cli
jmp
pop
xchg
in
sbb
popa
lahf
sub
xchg
pop
lahf
add
cwtl
mov
fcmovnb
sub
jne
or
fldenv
push
movsb
and
fcmovb
jae
mov
shl
lcall
and
outsb
mov
pop
nop
dec
push
or
pop
out
mov
pop
lret
inc
add
add
push
jbe
mov
jecxz
in
jg
sahf
adc
sbb
pop
das
je
jmp
dec
ljmp
add
stos
popf
lods
sbb
and
push
test
push
negl
arpl
arpl
sti
ret
loopne
daa
outsl
mov
out
push
cwtl
cmp
out
add
adc
pop
push
mov
sub
nop
out
mov
cld
jno
cld
movl
movl
xchg
pop
add
add
or
daa
mov
sbb
call
or
xchg
inc
lcall
jmp
adc
into
dec
xor
outsl
mov
mov
mov
xor
je
in
add
call
or
sbb
sbb
sbb
fildll
sbb
inc
xor
insl
leave
lods
popf
cmp
clc
in
or
pop
jbe
jge
hlt
dec
aad
sub
jmp
mov
push
jo
inc
sbbb
addr16
or
movl
dec
add
in
sbb
shr
or
mov
idivb
jbe
xchg
lds
bound
nop
jmp
lcall
push
scas
xor
cs
or
test
sbb
jl
sub
aaa
in
or
shr
adc
insb
divl
fwait
lea
xchg
les
mov
lahf
cltd
sbb
fucom
jnp
inc
mov
fnstcw
or
fwait
and
addb
iret
aam
je
das
jg
jns
gs
cmpsb
or
pop
sbb
ret
out
mov
ffree
shr
sti
mov
mov
aad
lret
scas
jecxz
sub
clc
mov
lock
adc
mov
xchg
scas
xchg
out
sub
imul
cmp
out
cmpb
in
mov
call
call
inc
rorl
push
sub
xor
or
or
mov
cmp
in
shr
movsl
pand
or
mov
xlat
movl
dec
es
adc
xor
lea
adc
jecxz
je
rclb
scas
inc
pop
mov
enter
out
insl
xchg
dec
into
mov
imul
cmpsl
ds
lret
dec
in
cmp
dec
push
and
in
cs
test
movl
adc
in
or
scas
mov
cmp
jge
mov
dec
xor
cmc
and
cmp
outsb
lods
lds
js
cmp
sarl
or
aas
xlat
adc
inc
clc
pusha
and
add
xchg
aas
aam
popf
sbb
mov
mov
inc
sbbb
pop
movsl
sbb
ret
icebp
mov
in
std
out
pop
xchg
call
std
mov
dec
xor
cmp
inc
sub
adc
aad
mov
sbb
push
test
mov
cmc
ds
daa
jb
mov
imul
pop
in
ss
cld
xchg
out
jo
push
add
repnz
and
fldcw
fsubrs
outsl
add
mov
add
jnp
xchg
movsb
or
ret
ljmp
sahf
pop
js
cmp
cmpsl
imull
adc
bound
lock
mov
xor
clc
cmp
inc
mov
int
insl
mov
inc
xor
mov
jo
pop
jno
sbb
popl
push
or
cmp
inc
xlat
jno
sbb
sbb
pop
cli
pop
mov
test
pop
cmp
mov
imul
xlat
paddusb
jo
pop
lret
call
jl
outsl
add
jo
out
and
outsb
hlt
push
in
cwtl
hlt
aaa
out
mov
adc
adc
scas
loope
jle,pt
xlat
add
in
dec
test
or
lret
shlb
pop
inc
popf
int
sbb
fdivrl
addr16
jo
jle
and
dec
xor
inc
xchg
cwtl
sahf
mov
arpl
inc
cli
icebp
mov
rcr
cmp
data16
subb
push
xor
sahf
adc
lods
add
cmp
aaa
push
movsb
out
roll
loopne
fwait
jo
insl
xorl
test
cmp
mov
or
test
jmp
out
lock
pop
sti
jp
popa
cmp
js
mov
cmpsl
fiadds
cmp
outsb
sub
cmc
mov
xchg
xchg
pop
imul
icebp
xor
jg
mov
jo
fsubp
mov
xchg
push
popa
test
fidivs
adc
adc
push
xchg
and
mov
das
data16
movsl
std
loopne
gs
inc
loopne
pop
mov
mov
scas
fidivl
jbe
and
lods
mov
mov
and
and
int
mov
mov
push
sbb
jne
inc
pop
stos
mov
xchg
dec
mov
inc
test
xor
popf
arpl
test
or
mov
adc
mov
outsb
add
and
ret
jnp
push
mov
dec
xlat
icebp
jl
xor
xlat
or
jp
imul
pop
jl
pop
clc
aam
cltd
sbb
push
adc
iret
loopne
push
addr16
shlb
add
inc
mov
sbb
out
cmp
sub
mov
out
icebp
xchg
add
ret
stos
mov
sub
fisubs
push
cmp
add
xor
pop
xchg
jmp
sbb
xor
xchg
lods
hlt
pop
mov
or
push
sbb
dec
inc
mov
adc
aas
adc
lock
lret
push
and
jge
ds
inc
inc
jae
cmp
pop
dec
shlb
scas
dec
inc
push
push
cmpsl
dec
mov
and
bound
adc
jmp
popa
sub
mov
hlt
xchg
call
stos
das
subb
push
cmp
or
fstl
mov
mov
cmp
or
aam
xor
into
jle
cmpsb
inc
and
cmp
adc
mov
adc
mov
cmp
pop
add
test
in
jecxz
sti
roll
aad
pop
xchg
pop
js
imul
cmp
dec
jge
mov
xchg
iret
repz
xchg
sbb
ja
ffree
mov
loope
pop
mov
shr
adc
mov
sbb
push
jp
in
or
lahf
sub
pop
pop
xor
lods
add
shll
das
push
hlt
scas
inc
out
mov
push
shrb
inc
mov
dec
pushf
push
inc
fbstp
mov
sbb
fwait
ss
or
cmc
pop
jnp
lds
sti
pop
xchg
nop
jmp
cmp
ss
sub
ret
dec
loopne
cmp
sub
xchg
mov
pop
sarl
jle
mull
das
mov
push
out
pop
fmull
inc
inc
daa
mov
daa
rclb
hlt
les
outsl
and
popa
jb
pop
nop
xchg
cmp
adc
mov
inc
jp
mov
fiaddl
cs
push
pop
or
add
sbb
jns
sarb
cmp
or
push
fistl
add
outsl
popa
xchg
sahf
sbb
icebp
sbb
test
mov
lock
clc
shlb
es
or
or
xchg
shl
mov
or
mov
adc
and
ss
repz
mov
pop
imul
dec
jg
cmp
das
push
subb
adc
lahf
aad
dec
push
xor
xchg
lds
and
in
les
xchg
test
dec
out
mov
dec
scas
loope
mov
jnp
sub
or
std
mov
loop
dec
mov
dec
loopne
jae
pushf
mov
daa
les
mov
repz
xor
inc
cmp
scas
mov
dec
dec
movsl
nop
shlb
rorb
mov
fbstp
inc
add
jns
js
mov
in
in
ss
out
sbb
xchg
adc
pop
es
test
repz
jo
movlps
inc
gs
lahf
pop
fdiv
test
mov
cmp
loopne
add
push
pop
leave
jge
fwait
jge
imul
into
imulb
mov
inc
int3
jne
insb
xor
lret
mov
out
dec
jecxz
mov
cmp
sbb
aaa
mov
lods
inc
adc
testl
add
pop
inc
sbb
mov
push
bound
sti
subb
ds
cmp
aas
push
sbb
mov
or
xchg
sbb
scas
cmp
dec
in
xchg
mov
movsb
rcl
push
ds
sbb
sbb
and
inc
pop
outsl
scas
xchg
repnz
push
test
test
test
cmp
ljmp
and
pop
xchg
cld
ret
movd
push
je
and
jmp
mov
or
out
pusha
jnp
jecxz
mov
xor
xchg
push
rclb
push
sahf
lods
mov
in
or
lock
add
inc
sti
jle
js
lods
mov
sbb
or
aas
lea
test
scas
jmp
adc
jecxz
clc
in
fcoml
lahf
cwtl
aam
ja
sub
add
fisttpl
push
cmp
inc
leave
inc
mov
rol
ss
cmpsb
xor
jl
inc
jae
in
inc
rcrl
addr16
jne
mov
sbb
sbb
xchg
fsubr
xor
mov
mov
icebp
cli
sub
mov
mov
inc
pop
fdivs
mov
inc
divl
sbbl
pop
adc
cli
push
hlt
sbb
data16
fstpt
xor
fsubs
sbb
jge
push
sbb
testl
fwait
std
xor
loop
push
fcomps
xor
and
push
inc
mov
sbb
jo
add
orb
in
mov
sahf
movsb
jg
jbe
loope
sbb
and
and
fwait
mov
jl
jns
push
jmp
mov
pop
push
insb
adc
lcall
mov
call
ss
jmp
and
pop
jge
add
sbb
push
pop
insb
cmpsl
jnp
pusha
mov
push
stc
popa
sbb
pop
lods
lcall
cs
add
aaa
adc
in
xchg
inc
pusha
cmp
repz
ret
inc
dec
lock
nop
aas
or
mov
cmpsl
arpl
mov
outsl
cmpsl
and
dec
mov
in
sbb
iret
push
mov
insb
dec
incl
jns
cmp
test
pop
loop
adc
push
vaddsd
std
jb
adc
insb
in
xchg
loopne
shrl
and
lods
mov
pop
mov
loopne
js
imul
gs
icebp
icebp
rolb
sbb
jmp
push
add
aad
ljmp
pop
mov
dec
and
xlat
notb
frstor
cmp
mov
adc
inc
cmp
test
add
mov
sbb
loope
mov
sbb
femms
xor
sbb
sbb
jbe
popf
sbb
fisubrl
jl
nop
mov
push
xchg
jne
xor
lret
mov
test
mov
xchg
jle
mov
stos
or
adc
cmp
fsubl
jle
mov
jl
mov
out
mov
shr
mov
je
sub
stc
xchg
fcmovnb
xchg
cli
in
lret
push
ss
mov
fwait
js
add
pop
in
testb
or
mov
mov
jbe
test
push
push
inc
fdivs
mov
mov
aam
iret
jecxz
push
popa
outsl
sbb
mov
ds
or
mov
add
sbb
cmp
bnd
xor
sahf
imul
in
outsl
ss
dec
sbb
into
xchg
xchg
adc
je
addl
imul
sub
mov
lods
xchg
mov
or
fistpl
mov
add
jmp
imul
movsb
mov
into
int3
adc
dec
addb
nop
test
mov
insb
fistpl
clc
mov
stos
rolb
mov
bound
jg
push
popl
lods
jmp
dec
pushf
cmp
popf
add
rolb
shlb
sbb
inc
jne
sub
add
dec
dec
movsb
inc
xor
popf
mov
shll
xchg
popa
mov
jmp
mov
nop
lods
jp
push
inc
xor
andb
out
idivb
sbb
rolb
or
xlat
mov
adcl
std
push
ss
shr
pop
stos
decb
push
test
xor
vpunpcklbw
cmp
xchg
cmpsb
push
mov
arpl
inc
cmpsb
xchg
push
push
or
std
shlb
out
jne
ja
cld
jae
inc
jge
out
lods
add
push
into
loop
xchg
sub
jp
fnstsw
mov
jp
inc
pop
xlat
gs
inc
or
pop
jnp
je
add
push
jecxz
add
ficoml
cmp
out
aaa
insl
jne
call
mov
test
das
lahf
in
incb
adc
subl
cld
sbb
pop
add
stos
mov
xor
and
dec
lods
lret
in
mov
ss
mov
iret
mov
inc
loopne
mov
push
pop
pop
ficoml
jno
jno
and
pop
fsubrs
lods
orl
dec
mov
and
cmc
pop
or
and
xlat
jge
mov
insb
andb
aas
loop
inc
add
mov
cmp
jl
inc
loop
push
sub
subb
leave
and
out
or
into
loopne
outsl
in
outsl
lea
fneni(8087
daa
rorb
sub
fistpl
push
fcmovne
ss
fists
ds
outsb
inc
or
leave
add
fcmovnu
data16
fsubl
fs
int3
add
loop
sbb
mov
leave
pop
rcrl
arpl
fisttpll
mov
sbb
test
jnp
jne
clc
test
test
icebp
adc
xor
cltd
mov
scas
push
xchg
arpl
or
hlt
cmp
jle
or
sub
cmp
jmp
test
or
ja
ljmp
fwait
mov
jp
and
jg
addr16
fnstsw
movlps
jo
fs
pop
stos
in
adc
add
lret
call
sahf
mov
mov
pop
inc
shlb
add
out
insl
enter
pop
lock
adc
adc
js
jmp
insb
int3
jp
mov
xchg
cmp
jnp
jnp
and
jnp
sub
ljmp
cmp
add
xlat
sub
popf
jp
or
arpl
ret
iret
dec
movsl
xor
mov
shrb
clc
test
jb
ret
adc
mov
add
push
mov
xor
add
sti
dec
test
sbb
or
cmpsb
scas
iret
push
sbbl
adc
in
cmp
jnp
out
cmpsb
add
addr16
ret
and
push
xchg
dec
cli
notb
xchg
js
pop
nop
add
adc
sarl
outsb
push
xchg
pop
xor
lcall
je
inc
fisttps
outsl
sbb
cs
jno,pt
shlb
js
int
gs
and
cld
push
leave
inc
mov
cmp
aad
mov
ja
pop
push
pop
pop
rcll
imul
in
scas
mov
adc
mov
push
out
mov
imul
pop
pop
nop
and
xchg
pop
xchg
or
push
iret
sub
decb
mov
jo
cmp
add
cmpsl
mov
pop
sub
outsl
popf
stc
aaa
or
loopne
xor
mov
inc
xlat
mov
out
pop
insl
cmp
imul
pop
lcall
xchg
and
and
or
jb
cli
cli
cmpsb
insl
and
or
xchg
mov
mov
xor
and
mov
add
sarl
push
jg
cmp
hlt
fidivs
mov
push
jmp
popf
inc
cmpsb
xchg
sub
add
jno
cmpsl
movq
mov
cs
clc
push
add
fidivrl
dec
cmp
lock
cmp
jbe
mov
imul
dec
test
sbb
inc
pop
stos
or
pop
clc
call
fwait
cmc
lahf
jl
mov
inc
cmp
orl
xor
xchg
stos
sbb
mov
js
mov
dec
lock
outsl
nop
pslld
pop
and
jne
jmp
cld
filds
pop
stos
add
xor
shrl
mov
mov
lds
mov
loope
icebp
xlat
imul
mov
cli
jg
pop
jmp
cmp
pop
dec
pop
xorl
das
repz
cmp
dec
pop
jo
loop
lds
repz
push
xor
rorb
int
and
lock
adc
xlat
mov
or
movsb
jp
das
mov
outsl
bound
adc
insb
sbb
mov
mov
pushw
rorb
cmp
sbb
int3
test
cltd
adc
mov
jmp
iret
dec
out
sub
add
pop
xor
sub
sbb
fstps
mov
jge
cs
imul
stc
push
dec
out
sbb
test
adc
repz
idiv
bound
call
lods
test
fcoms
in
xchg
mov
pop
dec
push
cmpsl
or
aad
sti
xchg
data16
cmp
push
decb
shl
movsl
data16
mov
jg
mov
ret
mov
push
lahf
lds
es
push
push
jnp
inc
jbe
jns
xor
jle
or
daa
mov
xor
sbb
inc
frstpm(287
scas
je
mov
orb
pushf
push
and
rolb
jno
std
sub
sub
xor
stos
arpl
cli
insl
loope
bound
ret
rol
xchg
xor
jno
adc
pop
je
mov
or
cmp
xchg
xor
sti
loopne
pop
xor
sahf
rep
nop
pop
or
mov
call
jnp
aam
sub
rcll
insl
sub
or
jno
lea
sub
aaa
pop
daa
cltd
jmp
lret
mov
mov
shrl
sbb
adc
push
movsb
inc
dec
out
cmp
jl
nop
pop
push
cli
jecxz
pop
inc
orb
popf
mov
inc
addr16
mov
adc
test
mov
adc
out
dec
mov
rol
mov
lock
into
bound
in
movhps
add
inc
inc
imul
sbb
jl
out
icebp
mov
cmp
push
rcll
xchg
push
mov
aad
add
mov
xchg
loop
in
adc
jge
aam
push
jmp
dec
push
cmp
jo
into
xor
cwtl
inc
xor
mov
test
jb
aam
icebp
shlb
xor
push
and
jge
mov
movsb
and
test
mov
loopne
mov
daa
xchg
mov
popa
mov
clc
cs
dec
mov
call
imul
inc
gs
loop
in
insb
or
and
sbb
loop
jo
in
sub
sbb
pusha
dec
sbb
lods
icebp
call
mov
ret
push
sbb
lcall
sbb
sub
sbb
pop
adc
repnz
insb
cltd
fcomi
xchg
roll
pop
rcrb
jnp
add
sbb
rol
pop
pop
int3
ret
and
mov
xchg
dec
add
aam
mov
gs
push
out
lods
push
sbb
mov
pop
and
adc
dec
jnp
adc
jp
in
jp
gs
cmp
inc
mov
jg
fwait
stos
and
jo
xlat
push
fstl
leave
dec
mov
pop
iret
inc
add
jl
jg
pop
adc
in
aad
mov
sbb
outsl
ss
cltd
lods
stos
mov
ja
aaa
les
cmp
or
push
cmp
das
sarb
jl
xlat
mov
pop
arpl
arpl
push
or
rcrb
mov
arpl
out
mov
xchg
pop
sbb
sub
cmp
mov
xchg
sub
mov
loope
pop
cld
test
fistps
inc
aad
and
pop
sub
sbb
and
push
inc
dec
sahf
add
cmp
pop
fsubl
js
or
add
jmp
rol
cld
lods
sbb
mov
test
mov
add
dec
cwtl
insl
lcall
leave
jmp
dec
or
inc
or
jno
adc
push
adc
push
mov
xor
xchg
xor
mov
inc
or
xlat
leave
leave
xor
cmpsl
out
xor
xchg
pop
jmp
rcrb
sub
inc
pop
call
sbb
cmp
pop
outsb
cmp
sbb
ds
ret
mov
mov
xchg
sahf
sub
xchg
ffreep
inc
pop
sbb
add
faddp
or
movb
sbb
test
mov
sarb
mov
sub
add
xor
ror
fdivr
jae
icebp
mov
pop
out
leave
xchg
movsb
jge
mov
insl
nop
fs
daa
push
push
insl
jecxz
das
mov
movsb
ljmp
dec
daa
nopw
fdivrl
mov
hlt
out
rcl
jg
outsl
fwait
dec
xor
xor
pushf
xchg
or
inc
rol
pop
add
adc
loope
insl
test
jle
and
pop
mov
mov
mov
arpl
and
pop
and
xor
rorl
jmp
nop
leave
inc
add
negb
sbb
xor
test
mov
lock
rolb
mov
mov
shll
test
jge
add
cli
mov
cmp
out
les
inc
xchg
mov
pop
push
lret
pop
pop
add
shll
subl
jg
xchg
insb
or
and
cmpsb
mov
mov
mov
mov
cld
test
pop
call
fwait
xor
iret
es
jbe
aas
add
xor
cltd
cmpsl
and
jl
cmp
jae
call
insl
jl
jo
add
jle
out
sub
lahf
mov
lods
subb
pop
sbb
in
imul
iret
xor
mov
test
popa
sub
push
inc
stos
jb
xor
mov
mov
mov
xor
out
sbb
test
jmp
xor
mov
adc
xchg
add
mov
inc
xorb
push
jge
dec
movb
jno
jnp
mov
loope
xor
add
icebp
imul
outsl
je
and
shrl
push
mov
test
aad
inc
lret
mov
pop
lods
push
pop
sahf
mov
xor
dec
mov
adc
insb
push
popf
push
data16
loopne
and
jge
mov
mov
fistl
dec
and
cs
jge
and
scas
movsl
fucomip
jbe
lea
and
and
lcall
xlat
lahf
pop
pop
sub
push
inc
mov
roll
sbb
push
sbbl
sub
mov
cmpl
loopne
xchg
sbb
iret
inc
data16
xchg
jmp
lock
push
fmuls
cmc
mov
je
outsl
jo
arpl
xchg
mov
or
cmp
rclb
jne
mov
pop
out
stos
push
popf
jnp
mov
out
enter
and
sbb
mov
and
stos
cmpsb
repnz
jecxz
sbb
leave
add
lock
rorl
or
cwtl
or
enter
ret
dec
je
clc
ljmp
adc
scas
xor
sbb
popa
add
sub
mov
pop
push
xchg
add
add
xor
push
divb
jo
cmpsl
pop
push
jle
add
inc
mov
enter
insl
ret
repz
leave
inc
aam
mov
adc
xchg
mov
data16
inc
xor
jae
mov
dec
inc
fimuls
push
cmp
jmp
push
add
mov
inc
in
in
jmp
fs
sbb
mov
pop
ss
inc
push
jnp
jl
lcall
mov
sub
inc
jmp
xchg
into
cmp
xor
and
js
cli
mov
sub
loopne
pop
js
jl
push
aad
sbb
stc
fildl
xor
cmp
inc
repnz
pop
push
mov
arpl
cmpsb
das
xchg
loope
push
and
adc
xor
out
les
inc
sarb
mov
mov
loope
cmp
fcompl
mov
push
mov
jno
ret
pop
fistps
push
lods
sbb
push
xchg
pop
and
mov
jle
ret
gs
lret
inc
dec
movsb
sbb
jle
and
jmp
pusha
mov
sbb
inc
mov
arpl
clc
inc
mov
clc
hlt
jns
mov
dec
mov
and
mov
lds
fisubs
xchg
lea
pop
rcrl
jno
sub
jecxz
and
jns
test
push
push
out
add
loopne
mov
js
rorl
fsubrs
cwtl
or
mov
pop
mov
cmp
ss
mov
std
or
test
in
arpl
mov
inc
stos
sub
xchg
aaa
xor
and
fmull
out
sti
scas
mov
mov
cmp
call
or
pop
inc
inc
scas
outsb
jg
fistps
mov
xor
push
sbb
rorl
xor
or
in
dec
sbb
push
imul
mov
out
aas
xchg
test
movb
fimuls
rol
add
out
mov
and
adc
jg
pop
sbb
push
lods
lods
xchg
leave
mov
or
pop
insl
jg
mov
lods
gs
xor
inc
xchg
xchg
lock
cli
lret
in
and
mov
stos
loopne,pt
adc
xor
mov
subl
rcr
mov
push
sahf
sub
cmpsb
jge,pn
rep
sbb
loop
nop
and
sub
loope
outsl
loop
mov
mov
xor
lea
fadds
fs
or
push
mov
sub
out
or
adc
ja
xchg
setb
loop
add
sbb
test
in
dec
push
mov
mov
xor
mov
das
xchg
pop
or
sbb
push
mov
clc
pop
adc
sbb
cmp
inc
adc
stos
mov
mov
subb
dec
in
pop
jbe
adc
mov
pop
push
xchg
add
jge
stos
mov
mov
push
ret
imul
xor
movlhps
popa
push
xchg
cmp
rcll
cmc
outsl
push
sarb
adc
sti
aam
mov
dec
jl
sub
nop
mov
inc
xchg
jno
adc
lds
ret
sbb
pop
ret
mov
imul
out
cmc
sub
scas
push
add
add
inc
and
fadd
inc
stos
or
movsl
dec
mov
imul
ret
jbe
adc
sahf
xchg
add
lods
cmp
push
incb
cmp
mov
aaa
cmp
pop
mov
ret
sbb
out
cmp
mov
cli
pop
xchg
xor
adc
mov
mov
je
and
push
mov
mov
addr16
inc
pop
cmc
mov
loope
add
sub
pop
test
xchg
dec
and
mov
push
and
xchg
ja
adc
mov
lods
insb
cmp
jo
stc
sbb
les
adc
unpckhps
lock
fwait
xchg
mov
pop
dec
icebp
cmp
stos
in
adc
mov
lea
jl
fisttpll
mov
les
ja
lea
in
adc
pop
xor
mov
sub
mov
fwait
insl
add
or
push
fldt
loopne
leave
ret
fwait
xor
shl
dec
test
inc
or
shll
mov
dec
pop
push
add
fwait
mov
out
push
push
cmp
jbe
dec
xchg
int3
lods
xchg
lds
dec
je
loope
bound
rolb
rcl
sub
decl
and
pop
imul
iret
shll
bound
push
mov
cmp
push
jle
xchg
pop
iret
mov
mov
add
mov
mov
sub
lock
add
sbb
jne
ss
jle
and
cli
pop
insb
rorl
xchg
jae
xchg
js
js
ret
push
mov
jmp
add
out
test
imul
sub
inc
sub
mov
inc
adc
or
jge
mulb
stos
cmp
push
data16
lcall
jbe
enter
fsubrl
in
push
push
js
add
mov
jl
aaa
and
add
pop
xor
push
mov
add
and
jno
cmp
in
sbb
outsb
jmp
rcrb
sbb
das
cmp
or
lea
xchg
ds
out
add
out
aaa
rcrl
cmp
ret
mov
test
add
dec
scas
outsl
pop
mov
jg
outsl
sub
and
jg
in
sub
sbb
divb
inc
cmc
or
jnp
dec
stos
les
lock
out
dec
in
jbe
mov
lods
jne
sbb
jp
push
push
pop
or
ds
and
mov
ror
pop
loope
test
mov
cmp
cmc
pop
daa
lods
xchg
ljmp
roll
testb
jns
mov
jg
xchg
mov
cmpsl
add
mov
jns
or
ja
push
mov
arpl
jg
clc
dec
aaa
addr16
and
add
adc
or
movsl
mov
push
int3
or
ret
je
cmp
stos
stc
dec
inc
es
and
sub
addb
pop
js
int3
int
adc
in
push
jbe
movsl
jnp
sub
sub
push
jno
fwait
jmp
andl
and
mov
adc
and
std
fstpt
adc
lock
repz
pusha
fbstp
add
push
loope
sub
pop
jmp
push
xchg
loopne
adc
inc
and
je
in
out
inc
shl
sbb
pop
jne
adc
lahf
sbb
inc
in
ljmp
xor
rclb
gs
mov
and
inc
or
pop
scas
stc
fs
enter
xor
cld
scas
arpl
fsubs
pop
in
repnz
pop
jle
lds
jbe
clc
or
mov
scas
mov
jno
stc
pusha
mov
sti
fsubr
cmp
cmp
out
jae
lret
sub
adc
bound
scas
imul
fdiv
out
loop
cld
mov
cltd
inc
cli
cmp
subb
scas
xor
mov
inc
xchg
decb
std
clc
and
push
mov
xchg
loope
nop
mov
nop
pop
sub
inc
cmc
cmc
aam
popa
and
jmp
mov
adc
pop
filds
xor
std
movsl
pop
sbb
pushf
std
dec
pop
fcomp
incl
cmp
sahf
xor
lea
lcall
inc
sbb
jo
data16
out
pop
jecxz
cmp
push
mov
mov
test
std
fiadds
pop
lock
add
jg
mov
lret
or
push
mov
sbb
cmp
cmp
jmp
jnp
mov
repnz
inc
and
loope
scas
lret
pusha
and
dec
std
sub
in
mov
xchg
addl
push
xor
push
cmp
inc
dec
inc
mov
mov
or
cmpsl
and
dec
push
js
shrb
mov
js
arpl
cmp
mov
test
adc
ss
es
rorl
call
push
std
mov
xor
xor
out
adc
rorb
push
dec
inc
test
in
sbb
arpl
insl
fadds
inc
divl
call
sub
inc
addl
testb
cmp
pop
sub
xchg
mov
mov
cmpsb
ret
mov
mov
lcall
addb
ficompl
shll
pop
cli
or
or
stos
ret
mov
add
inc
push
mov
or
push
jle
fadds
inc
subb
out
mov
add
lcall
popf
jmp
movsb
cmp
ficoms
sbb
jl
lock
pushf
lods
mov
dec
or
fdivrl
cld
es
jp
xchg
dec
mov
mov
sbb
xor
jne
sbb
cld
test
mov
aam
aad
mov
cmpsl
adc
xchg
jbe
ja
adcl
jne
popa
leave
pop
xchg
inc
fimull
lret
leave
sbb
and
jg
lret
sbb
clc
sbb
jle
inc
inc
cmp
mov
das
sbb
roll
xchg
xor
jecxz
mov
and
sub
testb
adc
jne
negb
adc
mov
lcall
push
mov
push
xor
cmpsl
ljmp
cmp
mov
push
mov
sub
sub
jns
repnz
scas
cli
orb
inc
popa
sub
sub
decb
call
and
lock
jl
xchg
das
neg
or
push
pop
stos
in
cmp
mov
pop
and
or
push
nop
mov
adc
into
insb
call
pop
aaa
xchg
fsubrl
mov
fdivrs
jl
aaa
call
or
jne
idivb
stc
sti
loop
add
dec
mov
jbe
loopne
xor
mov
sub
adc
cmp
push
fidivrl
xlat
ljmp
fidivs
or
jb
adcb
out
sbb
mov
mov
test
jne
leave
fbstp
rol
out
in
pop
outsl
jmp
mov
xor
cwtl
push
add
mov
pop
aam
js
test
lock
sbb
orl
jne
push
mov
mov
ds
add
push
aas
jle
and
and
add
daa
cld
pop
shll
daa
jbe
push
es
pop
pop
or
sbb
xchg
je
movsl
lods
mov
sbb
jg
ja
repz
xor
popw
and
js
fucom
sbb
shrb
insb
inc
inc
lods
testl
pop
push
addr16
out
push
and
or
and
cmp
inc
ret
test
jne
shlb
inc
stos
les
aas
cmovno
jbe
out
rcrb
inc
movsl
insl
inc
maxps
aam
mov
xchg
cmp
dec
cltd
scas
lea
jl
outsb
inc
les
sbb
mov
and
push
add
vpcomud
push
mov
lret
inc
ficoml
push
mov
sub
lds
mov
sub
sbb
aas
loopne
je
pop
aad
andb
lret
test
mov
ja
in
jno
mov
sbbl
outsl
rorl
adc
mov
fnstsw
mov
adc
call
pop
rorb
or
pop
mov
lahf
gs
xor
mov
or
ja
in
jb
test
arpl
adc
pavgb
inc
pop
jne
loopne
in
fdivrl
sbb
rorb
and
icebp
int3
insb
out
ret
push
subb
pop
or
push
pop
pop
and
aad
xchg
and
loopne
mov
push
dec
test
pop
mov
scas
out
scas
outsb
inc
enter
mov
inc
mov
fisttpl
sbb
jne
call
shlb
add
pop
jp
ret
mov
inc
in
mov
ja
mov
cmp
aad
cld
dec
pushf
mov
dec
xchg
push
fsubr
pop
lock
mov
scas
push
dec
add
cmc
push
ficompl
gs
js
daa
cltd
ja
mov
pop
in
adc
sarl
jne
xchg
xor
mov
ret
aas
mov
pop
xor
jecxz
repz
rcrl
jp
add
imulb
push
cmp
lods
adc
test
ja
test
cwtl
fstpl
xchg
sti
xchg
sbb
mov
mov
out
je
mov
arpl
aas
sbb
xchg
pop
stc
push
lcall
cmpsl
adc
adc
or
bound
mov
inc
mov
leave
aaa
es
ret
lahf
arpl
enter
cmp
xor
gs
sti
push
or
notl
fcom
sub
sub
ret
cs
jle
inc
dec
clc
adc
pusha
stos
sbb
xchg
sti
fcompl
cmc
repnz
xchg
cmp
sbb
stc
imul
enter
cmp
cmp
mov
movsl
jnp
xchg
push
cmp
std
scas
jg
push
inc
cld
mov
mov
xor
test
push
dec
and
jmp
xchg
les
pushf
mov
lea
insb
inc
ffreep
test
adc
clc
ss
adc
sbb
dec
mov
in
pop
xor
xor
clc
add
jge
cmp
icebp
sbb
mov
jecxz
mov
mov
push
ja
add
xor
call
in
sbb
rcrl
push
icebp
mov
pop
out
xor
insl
adcl
push
mov
aaa
jle
lods
enter
loopne
jp
xchg
xchg
mov
mov
scas
cmpsb
inc
imul
push
js
mov
fnstenv
hlt
shr
jno
mov
mov
add
push
dec
cmp
int
ret
mov
and
cltd
xchg
pop
je
hlt
in
cld
mov
into
fnstsw
mov
aas
add
clc
sub
or
lock
icebp
scas
imul
mov
fs
aam
push
sbb
aad
push
mov
cs
cmp
ret
nop
mov
jbe
lahf
adc
pusha
sbbl
add
ljmp
cld
adc
cmc
xchg
enter
add
lods
adc
xchg
out
jmp
cld
outsb
cmp
jge
test
lret
dec
out
scas
pop
faddl
in
stos
lcall
adc
sbb
mov
jne
call
xchg
js
pop
test
aad
loope
dec
stc
sub
loopne
test
fcomip
dec
fiadds
int
rcll
mov
cmpsl
sub
xor
xchg
inc
and
mov
jne
jp
cmp
xorb
pop
test
add
repnz
clc
push
pop
pop
mov
dec
mov
movsb
adc
jno
mov
ljmp
dec
dec
jl
outsb
rcrb
pop
sbb
sbb
ljmp
mov
add
dec
jmp
xchg
pop
push
nop
cmpsb
add
or
out
mov
or
and
call
jb
mov
lcall
cld
fnsave
es
push
mov
xor
cli
in
or
xchg
subl
lcall
adcl
call
sets
es
in
ror
aam
mov
jno
popa
rorb
mov
add
push
mov
fists
adc
mov
sarb
das
addl
ret
fwait
jle
push
pop
xchg
jecxz
cld
sub
mov
je
out
cmp
ljmp
mov
dec
mulb
dec
popa
lods
cli
ja
mov
mov
add
repz
in
clc
cmovbe
and
clc
clc
mov
and
cld
or
jns
scas
popf
dec
cmp
add
ljmp
aas
lock
sar
loop
pop
dec
jno
push
idivl
push
xchg
outsl
mov
dec
mov
sbb
dec
jge
popf
jae
cmp
jmp
and
and
stos
dec
lock
xlat
lcall
nop
int3
add
scas
mov
daa
jp
jne
aaa
mov
mov
jg
dec
sti
inc
sbb
adc
orl
scas
inc
mov
out
loop
test
jbe
and
push
xor
loopne
and
mov
lahf
xorl
shl
pop
sbb
jecxz
or
jb
movsb
test
adc
add
mov
data16
cmp
outsb
jge
sbb
shrb
das
cmpb
outsl
fcoml
clc
jb
push
push
jl
dec
mov
loopne
shlb
mov
repz
add
ljmp
icebp
jmp
dec
cmp
xchg
mov
sub
lahf
dec
fisubs
cli
icebp
sbb
adc
xor
or
and
inc
clc
sbbl
add
int
xchg
adc
ljmp
pop
lret
lahf
aad
decl
jl
adc
xor
xchg
and
and
push
in
mov
cli
fwait
arpl
icebp
sbb
lods
enter
adc
mov
in
inc
outsl
lret
cmp
ja
add
mov
cmp
xor
out
ja
lcall
push
inc
incl
sbb
outsb
ret
adc
call
shll
inc
in
cmpsb
push
pop
incl
mov
test
mov
fst
mov
xchg
add
add
lahf
cmpsb
jmp
mov
inc
pop
aaa
mov
mov
adc
add
clc
push
add
lds
dec
es
cli
lods
outsl
jecxz
into
jmp
push
xor
mov
push
sub
xchg
xorl
loopne
ja
cltd
lcall
dec
dec
fidivrs
mov
add
jne
fwait
mov
cwtl
lcall
aam
out
dec
bnd
dec
or
lock
ds
fcmovne
pop
pop
ret
xor
test
incb
sbb
dec
out
push
pop
xor
sub
mov
dec
cmp
pop
mov
fisubrl
mov
ds
popa
lea
sbb
roll
aas
add
insl
mov
clc
mov
fildl
xchg
push
or
or
dec
adc
sbb
sti
rolb
cld
mov
push
mov
sti
and
daa
mov
loop
aaa
ja
mov
test
push
insl
je
mov
fisubs
mov
je
ljmp
push
sbb
jmp
push
ret
ljmp
lahf
xor
sbb
cmpsb
or
mov
dec
and
aaa
inc
int3
mov
icebp
jge
pop
jg
stos
pop
addr16
cmc
and
adc
xchg
in
jnp
pop
scas
push
cld
mov
stos
stos
insl
adc
push
cltd
call
mov
rolb
stos
cli
push
out
pop
lods
sbb
mov
inc
xor
icebp
push
loop
mov
or
loope
out
add
inc
stos
xchg
push
cwtl
mov
inc
cwtl
or
sbb
das
mov
jg
mov
lret
rcrl
push
test
mov
or
add
or
adc
inc
std
push
cltd
jmp
sbb
inc
pushf
in
pop
pop
dec
jbe
add
mov
std
pop
sbb
cs
fadds
ret
pop
jp
sahf
adc
cmp
sbb
stc
aaa
xchg
fstpt
pusha
pusha
push
roll
pop
inc
cli
xchg
lcall
and
and
add
push
jnp
loopnew
mov
dec
push
nop
mov
stos
orl
clc
mov
adcl
adc
out
stos
imul
jg
popa
shrl
xor
push
fistl
xchg
cs
clc
pop
lcall
sub
outsl
ljmp
cmp
xor
dec
inc
fdivl
ds
inc
jnp
shrb
int3
inc
jg
cmp
les
je
sarl
cmc
std
data16
or
cwtl
js
and
popa
push
sahf
jo
cli
rcl
mov
js
test
adc
mov
aaa
mov
cmp
cmp
mov
push
in
sub
jno
mov
cwtl
bound
sub
jecxz
dec
jge
pop
jo
xor
cmc
mov
gs
jge
idivb
cmp
cmp
ss
pop
cltd
push
sahf
push
fninit
mov
imul
mov
cmp
and
fmull
in
xchg
or
push
adc
shr
loop
jge
fst
clc
mov
or
pop
or
test
loop
lahf
and
js
mov
cmp
add
adc
mov
xor
and
test
mov
and
sub
cwtl
lock
out
mov
push
jns
call
push
mov
sub
mov
cmp
in
daa
outsl
aas
shll
enter
cwtl
aaa
push
fldcw
mov
loopne
pop
jge
mov
sbb
cld
rcr
or
mov
repz
pop
cmp
cmp
sbb
shlb
lods
inc
fdivl
sub
mov
fisubrs
add
inc
jnp
push
fildl
cwtl
mov
inc
jge
mov
and
ficoml
pop
xor
lock
xchg
testl
sbb
sub
jp
sub
adc
mov
dec
mov
adc
add
sti
and
loope
ja
dec
in
test
sub
lods
push
sbb
int
frstor
xchg
lret
inc
imull
mov
and
inc
xlat
cmc
and
sub
icebp
or
pop
mov
add
dec
cmpsl
mov
sti
ljmp
adc
arpl
hlt
pop
jg
adc
mov
mov
mov
popa
movb
adc
inc
bound
ds
and
bound
popa
int
fwait
sub
jle
outsl
fistpll
or
jns
enter
lods
adc
pop
lcall
sbb
push
pop
add
sub
inc
xchg
in
fidivrl
adc
pushf
cmc
test
jmp
sbb
jae
fwait
movsl
int
push
jbe
sti
jg
nop
push
add
mov
pop
enter
aaa
mov
imul
lods
enter
and
outsb
or
sbb
gs
sbb
in
cltd
push
dec
gs
into
aam
and
push
sti
shrl
pop
push
push
std
rcrb
and
pop
or
dec
bound
in
daa
outsb
xor
movsl
loopne
and
jne
or
mov
scas
inc
push
lds
xor
cmp
mov
insl
das
inc
adc
sub
pusha
jge
clc
push
add
ret
mov
aam
insb
xchg
imul
dec
test
mov
nop
test
lock
mov
or
mov
scas
inc
push
mov
sub
aam
dec
inc
aaa
mov
shlb
andb
aas
mov
cmp
dec
and
cmpsb
mov
lea
aad
imull
bound
fidivrl
adc
and
sti
pop
jno
sub
out
int3
je
decl
cltd
daa
mov
push
call
hlt
add
ficompl
scas
adc
xchg
jbe
mov
add
adc
sbb
out
mov
add
pop
adc
push
ret
push
cmc
fdivrs
xor
pop
rorl
lahf
push
mov
clc
or
cmp
mov
xor
sbb
out
xchg
push
pusha
pop
ds
jecxz
pop
cmc
outsb
or
out
sub
test
pop
mov
fldl
aas
imul
push
fdivrl
push
and
fadd
fxam
mov
jae
js
add
push
jnp
inc
stos
das
xor
push
js
add
dec
lea
scas
in
xchg
mov
mov
ror
inc
scas
cltd
sahf
mov
sarb
fiadds
push
lahf
loopne
stos
imul
outsb
mov
pop
repnz
out
aas
jle
rclb
sbb
repz
add
data16
sbb
es
in
xor
test
sub
pop
js
adc
ja
data16
or
inc
sbb
or
lret
loopne
jo
push
mov
adc
cli
pop
cmp
adc
xchg
mov
pop
mov
popl
inc
scas
mov
pop
mov
cmp
orb
jno
sbb
inc
sbb
mov
rcll
fists
roll
ja
mov
jg
jp
cmc
dec
adc
aad
fstpt
pop
inc
cmovp
iret
loope
add
sub
jnp
push
loop
aam
or
pop
mov
jae
lods
inc
clc
and
jbe
sti
and
mov
and
fstl
adc
jge
sahf
cmpl
fbld
fcoms
pushl
adc
pusha
push
loopne
mov
xor
pushf
mov
xchg
bnd
mov
fcompl
test
dec
jo
mov
mov
pop
sbb
jg
mov
sti
and
add
stos
flds
arpl
incl
jg
and
lds
shrl
and
xor
push
test
sbb
mov
dec
sbb
daa
jecxz
mov
ret
jno
into
ljmp
inc
and
add
mov
icebp
jbe
sbb
icebp
jecxz
xchg
mov
push
movsl
adc
xchg
aad
push
or
jbe
adc
pop
ffreep
sbb
dec
or
imul
cmp
fmull
ret
mov
add
aas
pop
insl
pop
inc
sub
jmp
aam
faddl
xor
cmpb
cmpl
push
ja
scas
and
mov
fucom
jns
in
sti
test
and
mov
inc
in
stos
jo
inc
pop
or
stos
inc
in
pop
test
es
or
fwait
shll
and
nop
int
icebp
jo
inc
mov
fistpll
outsb
mov
or
jl
rorb
mov
in
aas
xor
insl
xlat
adc
add
or
xchg
icebp
xor
leave
test
movd
inc
shll
std
rorb
mov
fwait
xchg
pushf
cli
out
adc
fdivs
leave
rorl
jmp
loope
pop
and
in
push
pop
dec
jmp
lods
call
push
lods
aas
cmp
cs
stos
jmp
cmp
ss
test
mov
xchg
ret
stos
std
cmp
mov
sti
arpl
xchg
mov
or
cs
mov
cmc
jnp
imul
inc
fwait
ljmp
aad
cmp
scas
jae
sbb
insl
out
loopne
pop
cwtl
pop
enter
inc
pop
mov
jne
mov
les
inc
shrl
sbb
cli
dec
mov
enter
pop
cwtl
std
cmp
jne
inc
outsl
data16
jle
adc
adc
xor
addb
xchg
or
rcrb
out
cld
rclb
sub
lahf
std
xchg
outsb
xchg
mov
xor
xchg
sahf
xchg
mov
adc
and
push
scas
jno
cmp
decb
or
mov
aas
pop
cmp
mov
jg
inc
push
in
sub
pop
pop
jno
pop
dec
push
in
adc
enter
sbb
jl
jbe
stos
adc
mov
xlat
jmp
inc
sub
push
mov
shlb
mov
adc
imul
lret
repz
cmc
and
out
pop
cmp
addb
mov
mov
and
cmpl
ret
add
mov
addl
filds
sub
mov
roll
push
pop
sahf
jb
stc
adc
xchg
mov
fists
loopne
cli
push
push
sub
push
cs
ja
jmp
and
xchg
adc
bound
lret
mov
mov
add
insb
mov
inc
mov
inc
pop
mov
mov
add
or
jbe
filds
add
scas
lret
movsl
add
and
lcall
xchg
jo
push
mov
push
inc
out
dec
cmpsb
shrl
pop
arpl
scas
fwait
rcll
nop
aam
mov
cmp
inc
lods
addl
rolb
pushf
push
jmp
sbb
push
and
cltd
movsl
inc
pop
fsubr
fistpl
ljmp
clc
push
aas
mov
loopne
test
mov
mov
jns
mov
xlat
fcoms
and
inc
lret
fst
jne
mov
cmp
sub
push
js
scas
fstps
outsl
cli
test
repnz
mov
pop
arpl
adc
pop
loopne
je
maskmovq
notl
mov
jmp
sbb
loop
and
hlt
loopne
insl
lods
in
push
out
add
mov
outsl
loopne
sub
xchg
pop
xor
mov
mov
adc
cwtl
mov
pop
dec
aam
mov
push
cmc
pop
mov
fcomi
sbb
or
jno
std
pop
sbb
lods
mov
popf
mov
mov
ljmp
sbb
ror
or
and
adc
lret
icebp
or
les
call
jecxz
mov
add
pop
imul
dec
and
mov
pop
sti
mov
jbe
adc
add
jbe
rcr
pop
pop
stos
or
loopne
aas
jae
cmp
orl
mov
subl
testl
ret
jg
das
std
or
pop
push
xchg
popa
xchg
jle
xor
or
xchg
rep
jne
dec
mov
cmpsl
xchg
gs
ss
push
out
cwtl
mov
xor
xor
jne
inc
in
cwtl
fcoms
test
add
or
loop
fidivrl
sub
cwtl
incl
fistl
sbb
lods
addr16
dec
or
jo
sbb
push
subb
outsb
or
lock
sbb
add
int3
push
lret
add
fcmovu
jmp
adc
pop
ja
ja
adc
add
in
adc
outsb
inc
cld
xor
jg
mov
xchg
xchg
pop
xlat
inc
xchg
int
pusha
xor
fwait
xchg
out
stos
mov
add
cmpsl
aaa
mov
pop
xor
roll
jge
mov
idivl
xor
xchg
loop
inc
pop
adc
sbb
lahf
call
push
add
js
rorl
inc
test
std
mov
sub
call
loop
mov
mov
aam
sarl
mov
adc
dec
cld
cpuid
dec
xchg
jnp
pop
cmc
bound
and
add
lds
inc
int
xor
cltd
jle
stos
inc
arpl
cli
orb
xor
mov
fistpll
pop
sbb
cmp
and
inc
test
scas
lret
cmp
and
ja
jle
or
pop
and
jo
lret
mov
outsl
cmp
or
shl
daa
xor
or
shrb
xor
hlt
stos
mov
mov
in
icebp
gs
cmpsw
scas
cmp
and
pop
cli
aad
notl
dec
test
add
roll
jg
push
mov
nop
aam
fdivrs
test
and
and
movl
roll
or
ret
js
adc
and
pop
stos
int3
pop
fcompl
lods
pop
and
xlat
daa
sbb
push
jg
bound
popf
xchg
pop
lret
sub
aam
cmpsb
or
jp
insb
push
and
jne
in
inc
dec
fwait
inc
sbbb
cmp
jmp
fadds
in
pop
jbe
divb
nop
mov
pop
cmpl
jmp
mov
sbb
push
xorb
push
les
jns
std
out
push
ss
mov
adc
inc
xor
popa
cld
movb
mov
jno
fwait
in
ret
mov
ret
push
pop
es
loope
mov
cld
and
push
mov
mov
je
cmpb
jbe
out
mov
ret
repz
fnsave
std
popa
inc
lods
push
cs
or
add
daa
outsb
pop
push
jae
or
xchg
mov
sahf
mov
outsl
ret
pushf
xor
and
test
push
ret
sbb
icebp
mov
dec
shll
or
in
push
stos
repnz
das
or
pop
xchg
push
ljmp
ja
cmp
inc
loope
xchg
bnd
sub
lea
aam
aas
mov
push
daa
outsb
fwait
mov
pop
mov
mov
xorl
add
jne
adc
clc
sub
jle
inc
sub
inc
adc
push
insl
inc
mov
sbb
mov
in
call
movsb
lods
nop
in
imul
test
loopne
cmp
incl
nop
shll
or
cld
push
dec
dec
adc
pop
or
pop
mov
pop
sbb
sub
dec
stos
inc
loope
fmuls
pop
fisttps
ret
loop
cli
push
sub
out
mov
hlt
mov
dec
add
mov
ljmp
in
and
mov
shlb
or
sub
ljmp
lods
mov
or
adc
cmp
shll
mov
inc
sub
movsb
mov
pop
push
xor
or
lret
xor
push
mov
fsub
sub
pop
out
xor
add
cmp
fisttpl
pop
dec
lea
aas
mov
sub
clc
mov
or
pop
lret
ret
dec
sahf
stos
xchg
mov
sbb
dec
insl
jge
test
jmp
loope
adc
pop
cli
rolb
aaa
xor
pop
hlt
in
push
das
lds
scas
mov
mov
addr16
mov
cwtl
ss
test
int3
cmp
mov
mov
scas
shll
push
xchg
rorl
ds
int
xchg
ss
pop
sti
aad
and
or
sbb
imul
mov
mov
dec
js
cli
fstpt
and
cmpb
push
and
lods
xlat
int
inc
mov
mov
sub
mov
fnstenv
hlt
sbb
mov
dec
sbb
jmp
xchg
add
inc
int3
mov
mov
mov
xchg
bound
iret
lods
lock
cs
mov
push
cmp
fsubrs
dec
xor
xlat
push
enter
arpl
int3
ficoms
hlt
inc
daa
dec
sbb
mov
jg
mov
jecxz
stos
mov
loopne
int3
xor
mov
ror
insl
add
mov
clc
add
jnp
fdiv
adc
in
mov
leave
imul
nop
mov
jge
lds
adc
rorb
into
mov
in
xor
xchg
test
xchg
fidivrs
shrl
mov
mov
mov
mov
clc
lahf
roll
push
lea
or
shll
mov
add
std
add
lret
pop
fnstcw
push
xor
mov
sub
arpl
lock
or
cld
jg
push
popa
push
add
mov
lds
ret
in
and
loope
les
mov
out
and
xor
mov
adc
sub
mov
push
popa
mov
xor
gs
push
push
loop
mov
sub
data16
cmpsl
mov
push
or
xor
imul
ljmp
sub
test
loope
repnz
out
decb
fs
dec
lock
mov
jno
testl
sub
cmpsb
push
movsl
inc
inc
ficomps
jl
testl
adc
fldenv
stc
shl
adc
sahf
or
pop
fnsave
daa
movb
popf
mov
dec
dec
xchg
aas
ja
inc
cmp
insl
aam
mov
mov
xchg
out
test
mov
mov
pop
imul
pop
loope
sbb
fwait
clc
cmp
rorb
mov
mov
cli
sbb
add
jo
enter
ljmp
rolb
push
jmp
lods
dec
lret
or
mov
clc
jl,pn
fwait
mov
ss
add
fnsave
sbb
xchg
jne
mov
xchg
fcmovnbe
jmp
daa
loope
mov
mov
mov
jae
inc
inc
jo
out
mov
arpl
and
lods
dec
loopne
add
sub
push
enter
pop
enter
mov
push
daa
add
aam
push
jle
loopne
mov
and
int3
sub
cltd
adc
add
and
scas
mov
jg
add
inc
xor
mov
movsb
sahf
adcb
pop
fwait
jmp
xor
mov
les
jns
das
fwait
inc
test
popa
inc
cmp
push
mov
in
add
test
mov
mov
frstpm(287
sbb
add
inc
and
xchg
and
and
shlb
in
pop
fcmovne
shr
push
das
popa
xor
push
dec
fstl
insl
sbb
in
das
sub
dec
mov
fiadds
pop
into
je
xchg
pop
xchg
jp
out
mov
mov
ss
icebp
cmpsb
in
test
add
clc
sti
add
test
xor
xor
xor
fsts
add
insl
mov
aaa
xlat
sub
aad
std
mov
push
mov
pop
fsubrs
xor
fst
mov
aaa
inc
mov
popa
sbb
jbe
daa
lahf
cwtl
lds
out
fwait
pusha
adc
inc
sbb
imul
add
cltd
jl
push
jae
jbe
dec
jge
movb
mov
jo
mov
jb
hlt
mov
jno
jg
add
addb
jb
popf
nop
sarb
aas
call
dec
roll
mov
fldl
cmc
adc
add
dec
cs
sbb
jo
mov
dec
push
cmc
fnsave
adc
mov
xchg
lods
mov
dec
jo
negb
scas
lods
xor
lcall
clc
inc
jg
add
pop
cltd
movsl
jge
repnz
fdivs
sub
cmpsb
adc
push
ds
xchg
mov
inc
jo
push
add
aaa
mov
clc
mov
mov
xor
xor
jecxz
cmp
or
xor
pop
jmp
test
cmp
sub
in
and
jl
adc
insb
pusha
sub
sarb
in
lret
shll
ret
pop
div
mov
movsl
rcll
test
xor
mov
pop
sbb
clc
lds
adc
push
adc
std
mov
adc
scas
pop
dec
cs
repnz
sub
ja
or
subb
outsl
call
pop
icebp
js
sbb
inc
pop
xor
icebp
shlb
jb
mov
rcl
inc
loopne
cmpsl
push
rclb
fbstp
cmp
shrl
push
repz
adc
xchg
jno
bound
fstpt
addr16
cmp
dec
xor
dec
dec
or
stos
scas
sub
mov
sbb
adc
push
pop
inc
cmpsb
sub
aaa
cmp
pop
das
je
in
jno
xor
data16
inc
lcall
arpl
insb
outsb
pop
mov
into
mov
out
ds
push
arpl
mov
pop
ficoml
or
and
ret
int3
dec
aam
jbe
push
mov
mov
insl
xchg
idiv
jne
stos
and
inc
dec
sar
loopne
gs
mov
xchg
enter
push
mov
dec
out
jmp
xlat
xorl
cmp
nop
or
xchg
inc
mov
aas
push
ret
pop
je
stos
pusha
cli
push
addr16
sbb
mov
inc
lea
jmp
sbb
cld
sub
rcr
sub
call
cmp
mov
or
mov
xchg
mov
cwtl
jbe
mov
cmc
sbb
pop
outsl
pusha
add
adc
cmpsl
les
mov
enter
pop
sub
fsts
and
testl
movsl
push
sub
stc
add
arpl
ljmp
and
ret
push
dec
cmp
lret
sub
add
ret
stos
adcl
mov
shll
rcl
xchg
xor
and
inc
mov
outsl
scas
int
add
lahf
push
nop
mov
jne
hlt
into
shl
shll
stc
addr16
adc
xor
faddp
daa
ljmp
gs
inc
shll
rorl
jno
aaa
loopne
orb
inc
mov
xchg
das
repnz
sbb
sub
or
and
and
test
or
jo
cld
push
sbb
std
shll
jbe
fcom
clc
out
add
pop
out
add
jnp
inc
pop
push
call
test
xchg
iret
scas
addl
xchg
pop
lock
mulb
add
pop
imul
or
sub
push
xchg
cmpsl
sahf
add
in
leave
mov
clc
jnp
cli
pop
fdivp
lret
lret
push
pop
add
adc
cmp
jmp
mov
add
and
pop
mov
ljmp
add
xchg
dec
sub
pop
xorb
es
mov
jmp
add
cmpsb
cmp
outsl
mov
das
scas
fstl
cwtd
cmp
add
xchg
dec
in
cmp
cmc
push
fimuls
jecxz
push
mov
fnstenv
pop
in
std
in
loopne
cmc
inc
out
js
adc
dec
xchg
sahf
xchg
or
xchg
cmp
sbb
inc
sub
pop
xorb
inc
mov
inc
push
adc
push
jl
orl
out
test
pop
add
mov
mov
ljmp
xor
out
pop
repz
dec
shll
adc
pop
dec
icebp
sbb
push
mov
ja
mov
test
mov
adc
mov
cmp
lret
outsb
xchg
lcall
sub
cmpxchg
test
les
punpckhbw
jle
rclb
pop
ljmp
sub
repnz
push
clc
sbb
iret
out
push
jo
push
push
pop
mov
mov
inc
jecxz
adc
dec
xchg
lods
xchg
fidivl
adc
jmp
mov
jbe
inc
sub
and
push
loope
dec
xchg
xchg
test
iret
add
jnp
cmpsb
fsubr
sbb
push
add
adc
and
loope
idivb
pop
push
lods
lret
mov
loope
add
xchg
mov
mov
xlat
ret
dec
add
ja
pandn
insb
sarl
inc
add
push
fdiv
sbb
lcall
out
jp
clc
out
rcrb
enter
fldt
shlb
dec
jmp
adc
xor
bound
test
into
inc
or
sub
cli
stos
jg
shlb
push
sarb
add
push
ljmp
fwait
push
loopne
test
dec
mov
xor
inc
repz
nop
mov
lock
ljmp
sub
fsubrl
das
cmp
sbb
jnp
js
push
inc
fdivr
shlb
sbb
xchg
pusha
int3
mov
adc
mov
fwait
pop
sbb
dec
add
add
sbb
mov
int3
loop
gs
mov
icebp
and
dec
sub
icebp
xchg
and
jg
stc
aaa
push
mov
xor
call
adc
push
pop
lds
push
push
in
sub
push
les
inc
xor
test
adc
xchg
add
loopne
xchg
xor
daa
push
loope
dec
orl
mov
adc
xor
add
roll
cmp
cmpsb
shlb
mov
add
pop
mov
dec
or
faddl
inc
or
jp
lahf
push
adc
ja
les
mov
sub
jbe
pop
in
xchg
ret
mov
cmp
or
pop
stc
js
aam
dec
dec
xchg
inc
pop
cltd
cmp
mov
cmpb
loopne
aam
adc
roll
jno
movsl
aad
and
mov
adc
pop
out
outsl
sub
aad
lret
nop
xorb
xchg
test
rolb
jae
repnz
mov
jg
sub
mov
xchg
xchg
inc
mov
and
std
test
and
bound
lods
popf
iret
lcall
mov
push
jnp
cmpsb
mov
out
mov
sbb
mov
jmp
cmpsb
mov
fnstenv
sbb
mov
adc
sub
and
lock
rol
jne
push
inc
outsl
fistpll
addb
jae
or
lahf
or
mov
sti
aas
add
xor
pop
xor
pop
mov
sti
and
sbb
pop
and
pop
popa
and
mov
ret
repnz
in
xor
mov
mov
lds
sbb
add
lods
clc
adc
mov
jae
loope
cmp
jo
mov
push
push
push
jo
in
push
and
jno
jne
inc
mov
cmpsb
aas
imul
popa
add
scas
jecxz
aam
ret
pop
sbb
xchg
xchg
clc
inc
idivl
xor
mov
lds
mov
sbb
mov
cmpsl
sbb
ret
dec
aas
sar
dec
nopl
testl
or
aad
inc
jmp
pushf
xlat
icebp
inc
ljmp
jge
and
in
cmpsb
insl
stc
test
mov
mov
push
mov
pop
push
jecxz
and
sub
pusha
fisttpl
pusha
mov
xlat
pop
negb
adc
jnp
push
repz
or
sub
aam
mov
cli
pop
pop
cld
and
mov
mov
inc
mov
inc
jp
adc
fsts
cld
movsl
pop
aad
push
ss
ljmp
mov
mov
sbb
jmp
mov
fdivrl
repz
icebp
push
adc
daa
mov
pop
adc
pop
das
lahf
cmc
inc
mov
lea
loopne
nop
iret
aaa
dec
xor
adc
rol
or
dec
lahf
shlb
lock
cmpsl
loopne
dec
xor
inc
movsb
inc
mov
stos
ss
mov
mov
sub
xchg
mov
icebp
nop
popa
xor
pop
out
test
jns
add
xor
cwtl
and
stos
icebp
stc
inc
inc
mov
add
xor
cmovo
int3
sbb
popl
jnp
jmp
test
mov
jmp
cld
lods
mov
ret
adcb
dec
jl
xchg
aas
push
push
iret
push
repz
inc
adc
in
sbb
inc
fcmovnb
push
and
clc
mov
mov
inc
sbb
cmp
in
jns
js
ret
adc
fiadds
add
sub
adc
jno
pop
out
xchg
cmp
adc
mov
and
sahf
push
mov
pop
sarl
rclb
lods
cli
xchg
mov
fnstsw
mov
sbb
and
jg
dec
mov
add
pop
dec
and
push
add
jnp
cs
sub
and
pop
negl
cmp
jmp
dec
lock
mov
das
add
and
fcmovu
push
pop
mov
arpl
xchg
ret
push
je
fimuls
mov
jmp
push
cli
inc
and
or
pop
dec
repnz
push
ja
sub
cwtl
add
mov
imul
xor
sub
sbb
and
int
ret
or
mov
es
insl
fldl
insl
mov
testl
jl
bound
adc
mov
out
aaa
cmp
cmpsl
stc
xor
jno
insl
movsb
add
dec
ffreep
addr16
jnp
push
adc
jg,pt
sub
movsb
jo
das
dec
mov
movsb
xlat
int3
xchg
sarb
adc
mov
adc
mov
xor
sbb
add
and
daa
lods
test
adc
adc
cmp
jb
daa
loopne
ss
inc
and
cltd
inc
dec
adc
add
push
fcmovnb
ja
cltd
and
push
data16
inc
push
push
push
std
and
pop
sbb
bts
dec
leave
and
sbb
push
das
mov
cmp
fisubs
push
enter
jle
inc
push
sub
mov
pop
mov
sub
inc
sti
hlt
adc
adc
rolb
fcoml
mov
add
sub
adc
xor
adc
cwtl
dec
fwait
sbb
jecxz
sbb
jns
push
xchg
xchg
push
sub
dec
test
ds
adc
outsb
outsl
jno
mov
inc
mov
jnp
xor
and
and
jo
add
cld
ljmp
inc
or
outsl
add
loope
hlt
insb
je
adc
push
push
sbb
ss
mov
mov
inc
lcall
pop
addr16
fldl2e
aam
jne
xor
mov
sahf
cmc
addb
jl
and
outsl
frstor
gs
jne
add
call
pop
daa
mov
ljmp
mov
mov
dec
shr
pop
in
ja
js
xchg
mov
mov
outsl
fadd
test
lret
add
loop
fdivs
in
pop
lock
loope
int
repz
cmp
xchg
call
pop
xor
inc
pop
push
imul
call
inc
cmp
dec
jge
and
xchg
mov
repz
xchg
mov
pop
pop
ss
or
enter
mov
pop
or
fistps
in
xor
int
mov
add
aas
mov
mov
call
fwait
imull
xor
sbb
insb
std
iret
inc
push
jno
loopne
jmp
lds
pop
add
xor
and
fwait
dec
push
test
sbb
pop
hlt
aaa
mov
sbb
cmc
mov
jne
or
inc
imul
call
xchg
sbb
inc
pusha
jg
iret
and
loop
rclb
add
pop
addl
outsb
ja
jle
loopne
sub
adc
and
loope
jl
bound
fwait
mov
and
adc
loopne
es
dec
mov
jno
mov
sbb
outsb
push
mov
mov
or
movsb
pop
xchg
pop
nop
sub
fwait
dec
popa
lret
jmp
les
xor
loope
int
arpl
fwait
sub
xor
cmp
push
and
xor
outsl
mov
mov
xor
cmp
shlb
xchg
cli
fs
adc
mov
cltd
sbb
sub
sahf
sbb
cmp
mov
cli
sbb
push
imul
mov
lods
sub
mov
adc
add
dec
mov
lock
adc
jno
cld
add
jo
and
dec
cmc
jecxz
pop
fcomi
lods
push
xchg
xlat
cli
out
sbb
imul
sub
or
jp
inc
jmp
ljmp
pop
jnp
push
jl
push
inc
lcall
enter
inc
mov
xor
icebp
rcrb
movsl
shr
les
cmp
mov
jmp
cltd
outsb
clc
iret
pop
cmp
mov
push
loopne
lret
jl
xchg
stos
mov
inc
and
pusha
mov
xchg
call
in
test
mov
jl
and
jecxz
arpl
outsb
in
pop
push
add
fldenv
andl
ss
sub
lahf
loope
push
sub
jo
jne
adc
js
ja
mov
mov
insb
jae
sarl
aas
js
lods
das
mov
cs
in
mov
sbb
pop
ljmp
imul
fidivrl
fidivrs
add
dec
sbb
inc
and
fisttpl
pop
rol
xchg
in
jl
cli
mov
adc
mov
ja
out
rorb
jmp
cli
aam
js
lea
icebp
daa
lret
bound
lcall
sub
xchg
or
or
std
or
clts
mov
sbb
pop
ja
fwait
rcl
pop
sysret
fst
in
jo
inc
jmp
std
rcrl
xchg
int3
or
cmp
les
xchg
inc
jg
insl
mov
std
pop
xor
sbb
mov
sub
mov
addl
fistl
cmp
jp
push
inc
jo
enter
push
sub
jnp
cmp
jmp
or
and
sub
jp
lock
gs
cmpsl
mov
sub
imul
std
push
xor
sbb
jle
inc
aaa
jmp
scas
or
pop
scas
js
stos
js
test
insl
mov
shrb
dec
or
sbb
shrb
das
mov
push
hlt
cmc
flds
mov
mov
jl
push
xor
pop
in
call
xor
popa
repnz
or
or
and
xchg
or
mov
neg
mov
insl
or
pop
pop
nop
mov
popf
sub
lea
rolb
or
xchg
mov
and
insb
push
push
aaa
out
mov
jecxz
add
ss
xchg
es
stos
dec
aaa
mov
mov
outsb
dec
adc
out
xchg
pop
mov
pusha
imul
nop
xor
adc
adc
or
fsubr
xchg
int3
or
test
mov
dec
sbb
mov
addl
mov
pop
insb
int
gs
int3
sub
jnp
mov
mov
dec
ret
mov
mov
pop
fnstsw
in
ret
inc
xor
mov
sbb
mov
fsub
xchg
and
and
mov
sbb
loopne
or
ss
inc
xchg
ret
mov
mov
fstpt
or
inc
add
jmp
pushf
rcl
add
subb
in
aas
mov
je
jmp
insl
mov
test
adc
add
adc
dec
pop
rolb
repnz
adc
add
pop
in
je
lsl
ffreep
sbb
xchg
inc
xchg
xchg
outsl
and
sub
in
hlt
int
push
pop
icebp
idivb
movsb
mov
loopne
fisttpl
daa
add
mov
bts
sub
hlt
jecxz
rolb
cmpb
call
arpl
aas
andb
push
rcrb
dec
fists
addr16
pop
or
das
xchg
or
mov
inc
loop
or
mov
lods
inc
pop
mov
push
cld
and
jg
push
outsl
cmp
shr
je
cmp
shl
cmp
pop
fidivrl
adc
xchg
push
gs
notb
push
mov
push
jb
dec
sbb
sbb
sbb
ret
lret
mov
sub
sbb
negb
xor
clc
xor
add
pop
test
das
xor
lods
stos
mov
adc
ret
jne
pop
loope
cltd
movsb
mov
ret
mov
rcrl
lret
jecxz
xor
orb
bound
xor
xorb
sti
or
inc
int
jae
call
imul
lea
sbb
outsb
pushf
mov
xor
aam
push
iret
mov
shll
mov
int
les
mov
mov
test
lcall
pop
mov
dec
or
cmp
fs
fists
sbbl
adc
imul
jecxz
test
sbb
or
rcr
add
imulb
pop
xlat
xchg
loop
mov
cmp
jo
fldenv
inc
inc
fisttpll
sub
inc
imulb
nop
xchg
mov
sbb
pop
jno
xchg
sti
fistpll
vfnmadd231ps
in
add
test
fistpl
pop
and
pop
mov
mov
adc
enter
mov
or
fsubrs
repnz
pop
mov
ret
andb
and
subl
out
inc
mov
push
outsl
cli
add
inc
mov
lcall
and
lods
xor
or
mov
sub
cli
je
dec
pop
in
sbb
mov
ret
jge
sti
enter
std
jg
dec
stc
aaa
sub
iret
adc
repnz
cmp
sbbl
pop
pop
fs
jl
shrl
push
lcall
mul
mov
sbb
out
dec
mov
aas
nop
adc
inc
and
sbb
icebp
les
insl
sbb
loope
or
aaa
ret
int3
xor
and
xlat
jp
sbb
add
adc
xchg
jg
mov
fisttps
std
add
gs
int
xorb
mov
test
push
mov
scas
push
mov
lods
xor
xorl
mov
outsb
std
xchg
fst
mov
inc
in
mov
inc
mov
jmp
push
shll
and
cld
sbb
pop
pop
mov
push
inc
popa
aam
outsl
mov
cmpsb
push
in
cltd
icebp
mov
xchg
pop
in
inc
mov
sub
cmp
incb
fwait
clc
xor
aaa
cmp
jecxz
xchg
xchg
aas
loope
sti
inc
cwtl
pop
js
enter
les
fimull
cmp
sbb
mov
adc
jmp
jae
pop
popa
and
push
into
xor
les
sub
sbb
fdivl
add
rorl
pop
mov
inc
mov
mov
in
imulb
lea
fstpl
mov
inc
jnp
shrl
clc
clc
push
loop
or
pop
sti
inc
dec
lods
add
sbb
loope
lahf
test
ficomps
dec
xchg
outsl
jp
ret
cmp
inc
pop
xchg
or
cli
scas
ja
test
je
mov
imul
lret
aad
orb
lods
mov
sub
je
insb
in
mov
inc
sbb
xchg
fisttps
mov
mov
out
das
test
pop
lret
push
add
fwait
pusha
stos
add
xor
push
lret
addl
cmp
add
notl
push
xchg
and
mov
call
stos
enter
and
push
push
xor
dec
push
adc
jb
lahf
jg
fcompl
mov
pushf
gs
xorl
sbb
mov
into
orl
cmp
rorb
or
adc
push
fcoml
shrl
add
in
test
add
sarl
loopne
or
xor
add
inc
jmp
cmpsb
jns
mov
and
adc
test
subl
fistpl
mov
dec
inc
into
and
jne
inc
push
xchg
inc
and
test
or
mov
sbb
sahf
mov
sub
lret
inc
imul
pushw
rcl
add
inc
add
imul
fidivrl
ret
sub
in
les
insl
add
daa
cmp
inc
out
in
push
jne
cmc
dec
and
rol
ret
inc
mov
std
inc
imul
cld
nop
inc
mov
addl
pushf
mov
cs
mov
mov
sbbl
jae
lods
lods
ljmp
add
push
cmp
fstl
adc
sarl
or
dec
shrl
xchg
and
int3
rorb
test
outsb
add
out
push
fcoms
pop
ret
mov
dec
test
test
frstor
push
mov
loopne
sub
aaa
jl
inc
dec
dec
jle
aaa
jmp
sbb
mov
std
mov
cli
mov
cmp
push
jb
inc
gs
inc
lods
pop
sbb
loopne
adc
loope
or
orl
cwtl
jge
lret
cli
mov
mov
xor
aas
mov
sbb
addb
test
fidivl
out
insl
fstps
popf
dec
xorl
sub
pop
fs
mov
cltd
test
jg
cmp
lock
dec
std
pop
push
mov
int3
cmpb
inc
div
movsl
jbe
xchg
ljmp
pop
mov
loope
bound
mov
mov
adcb
test
inc
xlat
pop
or
or
decb
nop
or
leave
inc
lock
sarb
and
xchg
shrl
aam
xchg
and
imul
aaa
std
stc
or
adc
mov
xchg
jg
inc
imul
push
mov
test
push
mov
sahf
or
dec
je
sbb
xchg
xor
arpl
inc
inc
jmp
je
cmpsl
push
mov
or
push
mov
subl
add
lea
mov
sub
aad
jae
pop
fisttps
jg
push
xchg
push
jp
filds
add
adc
ret
mov
cmp
pushl
inc
das
jno
loopne
sahf
mov
xor
lret
movsb
lock
neg
fwait
popa
push
ljmp
mov
pop
stos
dec
in
mov
cwtl
lds
pop
mov
push
mov
push
xor
adcl
pusha
mov
lock
cmpsl
jecxz
sub
std
mov
jmp
jmp
or
dec
mov
mov
jp
aad
stos
adc
lea
ror
in
inc
adc
imul
or
pop
idivb
es
dec
mov
pop
pop
and
lcall
lock
call
push
jle
xor
and
test
popa
aaa
cmp
mov
out
les
mov
arpl
frstor
in
cmp
movsl
mov
loopne
andnps
add
lea
popf
loopne
add
icebp
jle
sbb
inc
mov
int3
xchg
sbb
lret
ret
sub
outsb
aaa
xchg
inc
pavgw
xor
mov
inc
push
mov
inc
xlat
in
adc
pop
faddp
xadd
aaa
std
pop
pop
push
test
in
into
daa
cmp
movsb
inc
rcll
or
push
or
popf
js
sbb
jbe
sub
ffreep
sti
jne
cmp
sarl
sub
mov
and
add
mov
into
dec
sub
icebp
scas
inc
pop
in
jl
sbb
test
aad
adc
and
jecxz
adc
rol
inc
ljmp
ja
push
pop
insb
adcl
jae
dec
pop
loop
insb
outsl
sub
or
movsl
arpl
inc
mov
inc
stc
sbb
outsl
cld
jge
or
fsubrs
jo
repz
mov
push
add
sub
mov
lret
bound
sbb
mov
xor
int
imul
fcmovnu
test
jne
xchg
pop
lds
fcomps
test
in
fdivl
std
andl
addb
int
cltd
lcall
fmuls
ficoms
insb
rcl
and
repz
divb
cmp
test
ljmp
bound
std
inc
std
mov
mov
sub
dec
or
xor
sti
adc
dec
aas
adc
cmp
hlt
jl,pn
fistl
and
push
std
je
icebp
testb
rcrl
jne
pop
cs
mov
sbb
push
and
in
outsl
nop
push
bound
push
hlt
dec
sub
jg
das
sbb
dec
xor
push
xchg
sbbl
subb
mov
jl
lea
sbb
push
in
lret
lock
cmp
rcrl
loopne
or
mov
inc
sbb
in
inc
pop
arpl
cmp
icebp
mov
mov
dec
test
push
mov
pop
stc
in
dec
lock
movsb
jne
push
mov
sbb
outsl
scas
mov
arpl
dec
call
lahf
add
mov
lret
icebp
scas
test
stos
mov
or
jmp
push
pop
mov
adc
cld
mov
mov
addb
pop
stos
xor
mov
mov
test
repnz
or
mov
shll
and
xchg
ret
clc
cmp
jne
aas
dec
xchg
mov
clc
dec
cmp
dec
xor
fsubrl
pop
and
cmc
ja
sbb
cmp
movsb
movsb
aam
ja
data16
and
mov
sahf
mov
inc
jl
sti
out
or
out
mov
outsl
sti
test
add
and
in
test
push
xor
daa
stos
call
loop
adcl
xchg
fistpl
xchg
in
loope
push
adc
insb
jecxz
pop
xchg
repnz
enter
pusha
xchg
cmp
movsl
mov
sub
mov
out
jno
xchg
clc
xchg
lods
mov
cmp
imul
mov
or
add
cltd
mov
mov
mov
movsb
dec
mov
xchg
repnz
scas
into
inc
pop
mov
jo
roll
push
lea
stos
iret
loope
xor
adc
adc
xchg
inc
and
aad
pop
or
aas
push
test
ss
call
sbb
xchg
stos
stc
stc
mov
lahf
push
push
xor
jle
cmp
loopne
pop
addb
inc
jl
sbb
dec
test
aad
rorl
push
mov
fwait
mov
sti
test
insb
ljmp
xchg
push
jecxz
inc
mov
insl
dec
xor
into
jnp
call
fildll
imul
push
out
lcall
aaa
inc
cmp
pop
cmp
loope
imul
mov
call
adc
pushf
push
sub
dec
dec
push
pop
sbb
push
sbb
bound
cmp
mov
call
sub
push
sti
add
stos
fdivl
mov
mov
jno
dec
and
pusha
add
or
mov
push
pop
jno
fneni(8087
or
mov
arpl
fwait
and
mov
add
add
mov
aas
mov
pushf
jns
in
mov
repz
pop
xor
mov
and
js
xorb
jb
push
push
and
xor
pop
xor
push
sub
and
orb
mov
in
adc
nop
push
scas
imul
sbb
outsl
inc
or
enter
sub
jg
xchg
gs
pop
cmpl
mov
cwtl
es
push
mov
adc
in
movsl
ja
loopne
mov
sub
pop
mov
in
adc
fadd
scas
clc
xchg
movsl
dec
clc
sahf
pop
cmp
mov
add
lods
popf
pop
outsl
mov
jmp
repz
dec
jb
mov
cli
int
loop
jb
xor
inc
xchg
jecxz
rolb
ds
aam
shlb
aas
xchg
inc
fcmovbe
pop
cmc
push
adc
mov
jmp
in
push
and
scas
push
test
lods
inc
fsubl
fiaddl
mov
test
in
in
fmull
ljmp
push
dec
mov
lock
xchg
test
cltd
dec
stos
aas
ljmp
cmp
mov
fdivs
push
cmp
filds
in
mov
mov
push
cmpsl
sbb
jg
inc
out
fldt
icebp
dec
and
adc
push
ja
lds
test
adc
xor
push
pop
mov
test
das
mov
pop
add
das
out
sbb
sub
movsl
outsl
jl
out
push
ss
dec
push
or
sub
push
adc
cmpsl
cmp
imul
mov
jae
ror
clc
fcom
icebp
xlat
pop
stos
leave
inc
jns
stc
pop
cmp
adc
shlb
repz
mov
lods
sbb
cmp
push
addb
push
stc
mov
test
cltd
stc
xchg
popa
cmp
jne
mov
sahf
mov
inc
js
arpl
pop
adc
or
xor
inc
cmp
in
cmp
pop
loopne
sbb
sbb
jb
sbb
jae
mov
cmpsb
int3
lcall
aad
cld
cmpsb
repnz
inc
loop
stos
fistpll
pushf
xchg
into
mov
or
ds
mov
sbb
pop
ja
mov
sub
pop
push
cmpsl
scas
in
call
inc
push
mov
jl
fwait
ja
es
inc
stc
test
outsb
cmp
rcl
rorl
loope
outsl
cmc
push
xchg
adc
or
sbb
mov
ds
scas
icebp
addl
mov
adc
inc
add
cmc
sbb
repnz
popa
and
jne
pop
ja
xchg
mov
cmp
es
jbe
or
mov
mov
inc
insl
std
int3
pop
ficompl
arpl
sti
sub
mov
ljmp
pop
and
jb
jge
adc
mov
std
pushf
in
xchg
mov
jg
lock
mov
ds
sbb
pop
lods
mov
test
dec
adc
push
and
loopne
out
inc
lods
pop
mov
dec
xchg
stos
cmp
bound
addb
cmp
arpl
add
scas
repnz
imul
decl
jne
and
xor
push
push
pop
or
push
pop
ret
xor
aaa
jae
daa
mov
sub
add
cmp
pop
ss
and
clc
inc
jle
inc
fdivs
sbb
push
cmp
daa
popa
call
test
mov
scas
pop
data16
add
xor
cli
xchg
pop
fstps
or
sub
ljmp
sbb
cmp
mov
int3
push
inc
mov
sub
cltd
jnp
sbb
adc
mov
in
and
nop
pop
cwtl
ret
loopne
ja
cmp
jle
cmp
ss
orl
xchg
mov
sbb
shl
or
pop
sahf
xchg
cmc
or
fidivrl
and
aam
cmp
in
fnsetpm(287
xor
rcl
fs
shl
das
xchg
ljmp
outsb
cld
rcrl
call
fisubl
lods
fisubrs
pop
inc
xor
and
decl
pop
cmp
pop
dec
inc
into
ror
xchg
lods
movsb
cmp
mov
xor
mov
mov
iret
testb
xor
pop
adc
jl
and
add
loope
pop
add
aas
insb
icebp
scas
or
mov
xchg
push
dec
inc
mov
push
loopne
or
mov
jecxz
in
cmp
or
mov
clc
outsl
fadd
pop
aas
inc
stos
inc
les
pop
mov
and
mov
push
call
mov
jno
fnstcw
dec
and
and
movsb
test
mov
movsl
push
inc
ret
icebp
icebp
idivl
jecxz
mov
sub
pop
sti
cmp
daa
mov
or
sbb
int
fcmovnbe
xlat
or
sbb
aas
jns
adc
pop
lahf
popa
cmp
outsb
mov
cmpsb
add
add
mov
popf
ljmp
aas
push
dec
jecxz
test
cmc
and
nop
jno
mov
aaa
mov
ljmp
adc
xchg
negl
cli
ret
rorl
int3
pop
mov
push
xchg
or
add
aas
out
dec
icebp
out
or
and
dec
jge
popf
inc
jne
jecxz
dec
mov
cmc
jns
mov
loopne
js
jp
add
call
adc
and
les
jl
not
clc
cmp
pop
sbb
loopne
mov
sbb
mov
lods
xor
push
std
jno
negb
or
pop
outsb
dec
outsl
mov
shll
jg
cmp
jp
inc
inc
je
pop
test
pop
pushf
push
es
dec
pop
sub
mov
call
aas
mov
xchg
shll
outsl
stos
xchg
sbbl
pop
mov
fstpt
subb
add
bound
sub
test
pushf
int
fdivs
dec
jp
cmp
or
jl
mov
lahf
jmp
popa
mov
lcall
scas
mov
jae
pop
inc
das
dec
jns
pop
or
or
popf
jne
inc
mov
lcall
leave
cmp
add
movsl
mov
inc
pop
adc
sbb
out
pop
sbb
push
sub
sub
lods
daa
dec
sub
add
xlat
sahf
jecxz
fsubr
sub
fdivr
out
pop
ljmp
push
jb
bound
out
loop
mov
inc
or
pop
test
repz
add
fs
adc
cmp
xchg
shl
arpl
aad
sahf
jg
insl
into
cmc
mov
inc
into
xchg
xchg
mov
clc
test
push
aad
ja
mov
jbe
sbb
mov
scas
mov
add
je
jnp
bound
jo
inc
scas
dec
mov
test
out
cmp
xor
mov
and
jmp
dec
cltd
leave
mov
push
xor
leave
popf
xchg
mov
rolb
addr16
inc
sbb
jl
pop
add
pop
and
mov
shll
sbb
mov
mov
adc
mov
and
ds
pop
cld
pop
mov
test
and
mov
cwtl
and
in
dec
xchg
sub
dec
jne
mov
push
cld
iret
fisubs
cmpl
mov
das
or
inc
mov
mov
mov
xchg
into
test
push
js
mov
jnp
ret
cmp
addb
outsl
push
xor
fcomip
les
push
aad
cmp
out
fwait
insb
aam
jp
das
in
xor
dec
adc
popa
addr16
push
popa
adc
mov
test
xchg
pop
ret
rcrb
sbb
push
aam
jo,pt
shll
pop
dec
cmp
inc
cmc
cmpsl
xchg
sbb
insb
mov
jle
sbb
xchg
icebp
inc
inc
add
jo
jnp
jmp
jecxz
inc
into
mov
in
and
sub
ficoml
rol
and
sbb
dec
push
ja
repnz
and
mov
stc
lds
jg
mov
inc
push
mov
mov
cmp
test
clc
push
outsb
cmp
sbb
sbb
dec
out
fimuls
push
into
loop
test
adc
pop
cmp
hlt
mov
ljmp
jnp
js
push
xor
call
sub
mov
or
cli
rolb
gs
out
test
shlb
mov
dec
pop
cmp
mov
dec
nop
outsl
sbbl
gs
fnstenv
jno
test
sub
pushl
outsl
mov
jecxz
and
sbb
xchg
inc
push
in
jae
jbe
pop
jp
and
test
mov
inc
and
test
mov
mov
cmp
ja
inc
jnp
sbb
orb
jmp
push
mov
out
mov
or
adc
sbb
sub
fldcw
adc
lea
hlt
sbb
lods
ljmp
in
mov
fwait
mov
orl
mov
add
sbb
push
mov
stos
call
push
xchg
sub
dec
pusha
inc
cs
clc
pop
adc
xor
xlat
xchg
ljmp
ret
cli
testb
cs
pop
sub
adc
dec
cld
jo
cltd
orl
pop
clc
push
pop
mov
sbb
pop
mov
aas
test
mov
aas
push
jbe
scas
addr16
inc
data16
imul
dec
lds
inc
mov
loopne
mov
or
dec
dec
push
call
js
push
shrb
or
xchg
xchg
jb
jl
cltd
das
mov
insb
scas
cmp
cmc
pop
mov
imul
mov
lock
test
nop
icebp
xchg
inc
clc
cmc
adc
dec
jecxz
xchg
pop
js
loopne
xor
in
iret
insl
dec
xchg
ret
mov
das
sbb
daa
insb
sbbb
cmp
mov
cld
shll
out
test
lock
pop
aas
in
jp
adc
adc
mov
cld
adc
daa
pusha
add
dec
loope,pn
and
cmp
daa
mov
mov
mov
imul
mov
fisubrl
xor
jl
mov
popa
jae
cmpsl
lods
or
and
pop
pop
push
std
fstpt
sub
xor
lock
je
cltd
mov
aam
es
and
imul
outsb
sbb
mov
dec
enter
pop
popf
ss
pushf
iret
push
mov
mov
sbbb
mov
mov
dec
mov
and
std
in
jbe
or
stos
cmp
xor
inc
pop
enter
lock
xchg
add
pop
mov
stos
into
push
arpl
jbe
mov
sbb
push
jno
mov
adc
sub
and
pop
mov
lret
jno
dec
shrb
call
mov
and
mov
fadds
push
icebp
movsl
cmc
sbb
push
fwait
push
dec
adc
pop
js
rcll
cmp
sub
adc
mov
fs
fstps
adc
fldt
leave
sbb
in
loope
test
out
xor
out
adc
mov
mov
mov
push
or
es
push
das
xlat
test
mov
ds
mov
push
xchg
or
pusha
mov
icebp
testl
xor
out
add
adc
push
push
call
out
jmp
sbb
jg
sbb
dec
inc
es
dec
inc
mov
mov
mov
shlb
outsb
mov
jne
mov
and
in
enter
pop
add
decl
push
imul
xchg
out
add
loope
sub
cltd
sbb
inc
adc
leave
add
popf
loope
divb
enter
pushf
icebp
mov
pop
pop
popf
arpl
js
insl
adc
popa
ret
adc
adc
test
lahf
popa
pop
push
jns
inc
addb
adc
pop
insb
je
inc
push
and
pop
jmp
adc
sub
nop
arpl
cli
outsl
clc
ret
cmpsb
jl
xchg
adc
vpunpckldq
adc
pop
mov
and
push
sbb
jns
mov
xchg
add
enter
and
aam
cmp
pop
or
and
push
xchg
test
out
cltd
es
icebp
scas
cmp
lds
mov
adc
xchg
fidivs
out
loop
inc
pop
mov
cwtl
pop
sarl
and
sbb
repnz
xchg
cmp
mov
inc
cwtl
sub
hlt
jno
pop
jns
movsb
push
mov
lods
repz
or
fs
lock
adc
add
loop
out
lret
mov
test
sub
pop
jg
in
xchg
in
adc
jg
cmpsb
movsb
out
mov
lret
mov
cld
out
or
mov
test
inc
ret
ret
loop
outsb
xor
test
pusha
cmp
outsb
jl
imul
lcall
xchg
mov
push
shr
mov
mov
cmpsl
ds
dec
das
inc
push
into
outsl
sub
sub
push
fdivr
imul
loopne
and
mov
icebp
enter
decl
mov
adc
pop
inc
ljmp
jae
adc
xor
sbb
dec
jns
push
add
adc
add
mov
sub
cwtl
lcall
test
out
mov
ljmp
mov
add
cmp
fmuls
fcoms
pop
and
add
mov
and
sbb
xchg
lea
mov
jbe
push
sti
jb
cmpsb
daa
insl
pop
call
ss
andb
pop
dec
outsl
aaa
mov
mov
in
daa
or
aad
jb
lock
push
and
inc
push
stos
push
mov
xchg
sbb
push
andb
xor
pop
repnz
jne
ljmp
sbb
pop
dec
jnp
daa
jp
or
cltd
add
loope
or
je
jne
adc
jmp
inc
fistps
mov
xchg
jno
daa
sub
fwait
call
in
loopne
sub
mov
cmc
mov
out
pop
call
push
fnstenv
fidivrl
nop
iret
inc
aaa
adc
and
inc
jmp
add
push
adc
ja
or
or
dec
mov
or
and
or
cmp
cmpsb
mov
ret
sub
loop
xor
add
add
jmp
mov
lahf
loopne,pt
jnp
xorb
sub
mov
hlt
cmc
xchg
inc
in
pop
inc
sub
punpckhbw
fisubs
lods
decl
jo
sub
mov
mov
push
mov
mov
sbb
mov
add
push
push
imul
xlat
jbe
and
cltd
and
movsl
xor
pushf
xchg
pop
adc
insb
mov
xchg
and
add
add
dec
nop
jno
insl
nop
xchg
lds
jmp
clc
push
cmpsb
test
ja
xor
and
mov
out
sbb
fistpl
jmp
jno
push
int
decl
aam
push
push
movsl
cmpsb
sbb
andb
jecxz
push
push
gs
es
push
stos
hlt
arpl
and
cmp
add
orl
jp
mov
mov
push
enter
xchg
subb
pusha
sbb
stos
addl
addl
pop
and
aam
xlat
adc
xor
shrl
je
pop
imul
loopne
mov
scas
mov
pop
xchg
pusha
sbb
stc
add
push
movsb
es
aaa
xchg
popa
mov
repnz
jg
loope
sbb
insb
aad
loopne
pusha
adc
lds
lcall
jl
jmp
mov
jb
scas
aaa
icebp
nop
dec
jl
pop
mov
cmpl
out
sub
test
testb
jo
jl
inc
mov
orb
or
out
cmp
loope
cltd
add
and
sbb
lcall
sub
outsl
push
push
data16
sbb
mov
mov
xor
lret
jns
loopnew
add
pop
shll
jle
cwtl
test
or
cmp
add
std
xchg
add
inc
cld
push
jno
ret
sbb
loopne
push
adc
pop
rcrl
fs
and
add
mov
out
into
sub
inc
decl
loope
fisttpll
je
test
out
push
andl
es
add
jge
les
rol
mov
jno
enter
cmp
xbegin
jmp
rol
mov
icebp
call
sbb
inc
pop
testl
mov
pop
or
cmc
aaa
jge
cs
enter
das
push
push
and
jae
dec
push
ret
outsb
lods
push
mov
movsb
rcll
pop
mov
fimuls
stos
push
popf
test
xchg
or
push
popa
mov
dec
ljmp
and
iret
mov
pop
stos
jbe
in
decb
sub
std
pop
dec
lcall
ljmp
ds
cmp
push
pop
cs
pop
les
jbe
jne
subb
mov
push
and
lret
jg
or
rcl
adc
xchg
mov
inc
jbe
dec
xchg
mov
das
inc
mov
rcrb
pop
mov
mov
sbb
sbb
rcr
push
mov
rcl
jl
and
divb
jmp
jo
lahf
lock
fcomi
movsb
int3
and
xlat
arpl
lods
es
icebp
sbb
je
sub
and
pop
mov
add
ret
outsb
xchg
loopne
dec
cmpsb
pushf
pop
mov
push
mov
ja
cmpsl
iret
adc
cmpsl
mov
jbe
ss
incb
loopne
fsubl
das
push
aaa
cmp
bound
jne
orl
push
scas
xchg
adc
jmp
push
faddp
std
aam
popa
iret
push
enter
pushf
push
outsb
pop
aaa
sbb
sbb
fiadds
xor
cld
ljmp
loop
mov
test
xor
shl
loope
stos
iret
jns
data16
icebp
pop
push
fwait
pushf
test
jae
push
das
add
fnsave
mov
xchg
adc
xchg
arpl
int3
or
mov
mull
sbb
mov
and
stos
inc
clc
pop
adc
mov
sahf
shl
movsl
inc
xor
rorb
mov
adc
aam
nop
roll
ljmp
mov
mov
mov
inc
mov
pop
outsl
lcall
sbb
mov
add
push
mov
out
sub
loop
outsb
test
mov
dec
push
mov
mov
rcr
mov
sub
fstp
dec
push
lret
pop
inc
fs
inc
jecxz
fistpl
sub
mov
lahf
fistpll
dec
rcll
fdivs
cld
and
mov
lahf
push
std
lock
add
cli
jg
lds
lcall
sub
testb
mov
jae
mov
sahf
lea
xchg
imul
into
jl
mov
xor
andb
sub
adc
out
mov
jo
inc
inc
mov
bndldx
inc
mov
adc
jmp
stos
std
pop
aad
wbinvd
mov
pop
cmp
push
dec
and
jmp
orl
test
inc
inc
inc
push
daa
ret
lods
nop
arpl
push
and
add
jb
add
js
sbb
je
outsl
adc
das
lock
rclb
sbb
jno
or
lret
mov
pop
cwtl
insl
fiaddl
test
mov
pop
or
jmp
sbbb
dec
jg
lcall
xchg
decb
xor
mov
addb
inc
push
adc
std
dec
adc
das
ljmp
mov
xor
jbe
push
sbb
xchg
sbb
fcomip
push
add
mov
or
inc
jp
pop
cmp
jo
stos
loopne
popa
loope
pop
loopne
div
xchg
fisttpll
jbe
call
or
loope
loop
fcomip
mov
repz
xor
movsb
mov
add
sti
push
outsl
fcomip
push
outsl
sbb
ficompl
hlt
mov
jnp
imul
adc
add
std
push
popa
jmp
mov
or
fsub
insl
sbbb
dec
push
rorl
inc
mov
mov
test
add
cmp
test
fwait
or
cwtl
lock
or
and
prefetcht2
loopne
test
xor
fcomip
mov
imul
jle
or
jge
xlat
push
inc
bound
mov
jbe
fsubrl
inc
cs
shlb
sbb
pop
mov
jno
loope
cmc
std
insl
mov
mov
popa
ret
pop
stc
ljmp
or
and
xor
or
xor
push
rorb
es
pop
clc
cs
lret
mov
adc
bound
cmpsb
xor
and
sub
in
or
bnd
cli
in
mov
mov
mov
sbb
sbb
xchg
lcall
outsl
shrl
mov
and
sub
inc
popa
jg
fisttpl
xor
lea
inc
jo
icebp
rorb
es
adc
and
insb
sbb
jle
repz
xlat
movsl
clc
lods
stos
jno
movsl
cli
inc
je
mov
jl
mov
pop
cmc
jo
adc
cmp
les
call
mull
xchg
push
mov
or
mov
xchg
and
pop
adc
dec
jg
int
js
inc
sub
mov
lahf
outsb
cmp
sbb
or
fldcw
push
dec
sub
popa
or
cwtl
mov
cmp
inc
pop
test
pop
mov
jmp
lock
andl
adc
incl
mov
pop
fldcw
outsb
in
sahf
pop
sub
xlat
or
xor
clc
cmp
lret
addr16
pop
ret
lods
xlat
inc
jecxz
mov
sbb
mov
sar
cmp
inc
jo
sbb
and
adc
shl
mov
jne
test
fcmovnbe
pop
rol
push
lds
fwait
popf
mov
loope
jl
fadd
sbb
nop
leave
jno
cmpsl
jmp
jg
sbb
push
aaa
pop
cli
cmp
xchg
rcll
and
rcl
stos
mov
aaa
lds
xlat
cmpsl
or
inc
loop
jns
add
fcmovb
outsl
mov
cmpsl
and
xchg
ja
imul
xor
cmpl
mov
jno
ds
inc
popl
mov
shlb
cmp
xor
jl
aas
sbb
xor
push
dec
mov
or
movsl
pop
scas
push
add
push
aaa
hlt
mov
int3
les
mov
pop
adc
or
ljmp
fcmovb
movsl
cmc
sti
dec
lret
ret
cmc
ret
mov
lret
pop
mov
push
cmpsb
imulb
test
add
cmp
push
cmp
xchg
sbb
jecxz
lods
and
mov
pop
pop
movsl
arpl
push
inc
test
or
data16
sti
repnz
and
mov
out
shrb
stos
cmp
dec
inc
and
inc
add
pop
xchg
dec
mov
incb
mov
imul
push
dec
sahf
loope
mov
push
mov
add
cmpsb
call
jnp
adcb
dec
adc
sub
jae
out
test
aad
inc
outsb
mov
mov
push
jns
or
mov
xchg
sarb
outsl
cmovo
jle
jg
mov
add
divl
and
fstl
push
sub
sti
dec
push
mov
push
jge
test
stos
dec
mov
and
xchg
insl
cmp
dec
fdivp
mov
push
mov
push
lret
xor
cmc
jecxz
lock
inc
jmp
or
in
pop
xchg
loope
lahf
stos
out
cmc
add
cmc
mov
mov
sub
cmp
in
dec
xchg
fisubrl
push
add
es
ja
xchg
fs
add
pop
pushf
add
cmp
inc
clc
loope
mov
lcall
mov
mov
daa
in
lock
xor
fidivs
or
add
and
adc
cltd
in
mov
adc
sti
pop
outsb
arpl
lret
sub
leave
cmp
lock
mov
test
cld
call
test
subl
cwtl
scas
pop
adcl
ret
mov
dec
addl
jge
xchg
dec
shll
push
stos
das
pop
andb
cli
pop
jecxz
push
inc
adc
and
lret
int3
and
push
imul
lahf
jo
mov
cmp
inc
push
leave
xchg
or
mov
jmp
adc
adc
call
ljmp
push
in
xor
arpl
cmp
fidivl
jmp
into
sbb
sarl
lcall
inc
xor
xchg
adc
mov
fmuls
sub
add
test
xor
mov
push
jb
add
inc
mov
cmp
mov
jnp
mov
or
or
adc
sub
test
dec
mov
mov
les
inc
dec
push
inc
mov
mov
add
mov
and
push
loop
lds
push
push
rep
xor
mov
push
loope
sahf
enter
and
mov
dec
mov
fldl
inc
call
sbb
icebp
xor
leave
xchg
or
inc
jns
push
pop
sbb
mov
jae
sbb
adc
pop
mov
push
dec
push
push
sbb
dec
sub
neg
cmp
jne
xor
test
arpl
jno
push
inc
mov
and
push
xor
adc
push
cld
push
adc
or
in
and
fsubr
addr16
pop
jns
mov
inc
pop
add
loopne
and
xchg
out
int
pop
insb
inc
push
pop
dec
mov
mov
xor
inc
mov
enter
xchg
fsts
jecxz
xor
push
or
inc
incb
les
mov
lret
push
and
pushf
int3
mov
inc
call
pop
cld
fdivrs
clc
test
rolb
or
pop
in
mov
fldcw
jno
add
add
push
push
mov
jle
mov
inc
fs
sbb
idivb
rolb
int3
adc
cltd
imul
fiadds
mov
sub
fsubr
or
and
mov
cld
adc
or
adc
sarl
aam
test
xor
das
hlt
shrb
cmp
test
sti
nop
les
inc
add
shlb
imul
add
dec
and
mov
xchg
add
loope
rorl
jl
and
or
jmp
push
daa
adc
jno
jo
ja
addr16
andb
or
cmc
fsubr
je
hlt
push
jno
push
icebp
push
push
mov
mov
pop
push
sub
cld
sbb
cli
and
cmp
lock
testb
cmpsl
test
inc
das
imul
dec
icebp
lods
loop
cs
xlat
les
out
and
pop
mov
outsl
dec
fnstenv
xchg
jns
scas
sbb
or
sti
mov
xchg
fdivrp
mov
inc
cmp
aaa
cmp
lock
js
movsb
push
popa
ds
fcoml
call
and
rcrb
mov
arpl
int3
int3
add
mov
js
cmpsb
call
in
adc
push
sub
mov
mov
cld
addr16
sar
sahf
xor
xor
in
fldt
sbb
add
xchg
adc
or
mov
fst
je
lock
pop
xchg
or
ficompl
mov
int
das
cld
lcall
cmovle
out
sub
push
mov
outsl
sahf
push
lds
or
mov
rolb
push
sbb
aam
mull
and
add
mov
xchg
sub
push
subl
push
ret
loop
and
add
fcmovnb
int
pop
out
fwait
aas
lcall
nop
dec
test
pop
fimuls
inc
and
mov
pop
sti
push
mov
aaa
jl
sbb
into
in
outsb
loope
scas
dec
adc
movl
mov
push
adc
dec
sbb
push
sbb
pushf
jmp
sub
roll
dec
pop
fisttpl
push
add
out
and
mov
mov
mov
cmpb
in
repnz
mov
clc
jnp
dec
pop
fists
fstl
inc
mov
jne
inc
mov
ds
add
adc
aam
pop
sub
jle
sahf
xchg
fcmovnu
push
ret
inc
sbb
xlat
pop
and
lds
sti
rcrb
mov
jae
add
mov
out
fistpl
adc
sbb
xchg
out
and
test
sbb
xor
mov
and
cmpsb
out
nop
in
sbb
test
jg
stc
test
adc
addl
repnz
inc
or
mov
sub
pop
jnp
in
out
ficoms
xchg
push
mov
repz
push
mov
mov
fbld
mov
incl
add
sub
mov
mov
mov
les
dec
test
repnz
mov
xor
and
sahf
loope
push
pop
sub
outsl
sub
push
cltd
dec
push
in
jg
add
pop
incl
add
inc
mov
test
push
cmp
pushf
push
insb
outsl
mov
lds
xchg
mov
sub
add
scas
cmp
mov
bound
div
sahf
xor
ljmp
mov
jae
test
push
rorb
loope
cmp
or
jb
cmpb
jge
loope
mov
mov
xchg
sbb
sub
mov
adc
aam
popa
jle
imul
pop
jo
xor
aas
cmp
or
mov
stos
xor
dec
jns
push
loope
jp
sbb
push
das
mov
push
jge
insb
or
push
jbe
mov
lcall
movsl
movsl
xchg
push
cmc
jge
fnstsw
or
cmp
ljmp
ret
movsb
xchg
push
aas
lret
pop
sahf
fsubr
test
push
inc
push
orl
outsl
std
adc
gs
push
testl
xchg
mov
in
cmp
push
jp
and
sbb
loop
push
test
mov
or
mov
jnp
jg
pushf
sbb
cmp
lret
cmpsb
bound
push
push
mov
pop
sub
xchg
pop
hlt
divb
incb
cli
xor
lcall
mov
push
mov
or
xor
adc
inc
jecxz
scas
scas
ret
sub
cmpsb
les
pop
mov
imul
mov
mov
in
addb
sarb
pop
mov
shlb
sub
out
sub
scas
js
test
ror
dec
imul
adc
dec
adc
cmp
mov
loope
pop
mov
jp
sub
cmc
dec
cs
and
aad
imul
test
movsb
push
out
outsl
incl
inc
sub
xlat
imul
mov
fldt
cmp
insb
push
sub
into
dec
lea
shlb
xor
loopne
aam
push
cmp
fdivp
repnz
ss
ret
jo
daa
and
mov
jmp
int
add
movswl
stc
popa
loopne
sbb
sbb
test
sbb
pop
pop
cmp
dec
scas
pusha
fisubrs
dec
aaa
adc
push
lods
lcall
pop
xor
inc
jge
jo
ja
cmpsl
mov
cld
mov
sub
fisttpll
or
jne
out
loopne
loope
out
aam
push
cmc
into
fists
ss
sub
pop
cld
sbb
jmp
cld
add
jl
ljmp
push
hlt
aaa
mov
std
adc
std
mov
std
call
scas
lods
in
sub
fstps
xor
inc
mov
dec
sbb
lahf
lea
iret
sti
hlt
pop
inc
mov
dec
add
push
pop
dec
adc
sub
push
and
xlat
fs
mov
sbb
mov
mov
jno
fsubp
xor
add
js
ret
mov
mov
add
cmpsl
push
cmc
mov
iret
idivl
adc
lret
sahf
xorb
ja
pop
or
dec
sarl
in
inc
std
cmpsw
sub
rcrl
das
cld
ret
mov
scas
sbb
orb
jmp
sub
test
ret
cmp
mov
xchg
insb
and
or
jg
ljmp
cs
js
imul
ret
addb
or
push
sub
shrl
push
mov
cmp
out
push
pusha
fldenv
f2xm1
inc
push
cmpsb
cmp
lods
push
or
cmpsl
out
imul
cwtl
iret
rorb
inc
and
jg
arpl
xor
mov
js
xchg
push
movsb
and
test
mov
and
movsb
fs
inc
jns
loopne
add
fadd
pop
add
divl
jle
decl
in
jmp
ja
dec
sub
add
icebp
jns
sub
push
push
adc
js
test
popa
mov
xchg
and
pop
in
mov
sub
mov
inc
mov
pop
stc
push
xchg
add
mov
mov
rorb
ljmp
and
cli
cvtps2pd
push
mov
test
loope
aad
adc
sbb
or
les
cmp
pop
clc
xchg
or
js
das
out
xor
in
mov
lret
or
pop
shlb
pop
jp
cmp
mov
dec
fistpll
aaa
sub
lock
dec
mov
inc
xchg
xor
ja
test
daa
mov
cld
fs
or
loope
jle
loope
outsl
inc
push
adc
and
add
ret
mov
jp
mov
fisttps
gs
or
scas
loope
stos
xor
popf
add
mov
mov
mov
outsb
push
xor
iret
arpl
outsb
aam
das
xor
mov
fisubs
xor
sbb
ficoms
push
add
dec
push
jmp
cmp
andb
sub
push
inc
xor
sbbl
rol
insl
dec
int
out
rolw
mov
scas
add
jg
ljmp
insl
jo
aaa
scas
test
add
xlat
hlt
fistps
xor
loop
stc
mov
ret
pusha
leave
fcomp
push
cmp
rcr
mov
mov
fsts
sbb
test
sub
xchg
and
and
push
xchg
pop
push
test
adc
xor
fcomps
fdivs
ja
inc
fiaddl
sbb
bound
add
mov
cmp
roll
pop
test
jp
es
push
call
xchg
testb
scas
andb
paddw
dec
xorb
gs
push
loop
cmp
arpl
andb
jbe
repz
xchg
or
push
or
mov
cld
and
insl
inc
scas
sbb
pop
jmp
mov
adc
ficoms
push
cpuid
adc
inc
enter
push
ja
add
push
sti
lea
mov
call
jl
adc
inc
das
jge
jp
pushl
mov
loope
test
and
sbb
sarl
or
xchg
adc
stos
aam
ljmp
mov
cmp
cmp
nop
call
push
mov
sub
or
or
adc
pop
pop
inc
mov
in
outsl
cmp
icebp
cmp
fdivrl
stc
pop
aas
mov
adc
sbb
sbb
ja
ljmp
cmp
and
pop
shlb
popa
sub
push
push
adc
or
mov
mov
inc
cmpsl
jne
sbb
out
adc
mov
scas
jle
jbe
push
xor
jl
push
roll
xchg
scas
pusha
rcrb
into
outsl
std
pop
lea
test
mov
icebp
or
les
mov
jne
popf
rcrl
sub
out
cli
push
sub
mov
es
and
and
fildl
es
stc
push
dec
dec
test
mov
push
ja
hlt
jmp
mov
out
xchg
test
lods
cmc
mov
mov
addb
in
ret
adc
mov
test
push
cmp
loope
or
idivl
lea
push
stc
leave
adc
mov
outsl
mov
fimull
je
scas
iret
mov
or
push
or
testb
sub
fcom
mov
mov
adc
call
xchg
cld
push
test
mov
vcvttss2si
and
in
cmp
sahf
lods
ds
lds
inc
icebp
lret
dec
dec
push
rcrb
jnp
clc
jecxz
add
std
inc
cli
movsl
sbb
xchg
mov
mull
adc
push
subb
repz
or
ja
stos
jo
jmp
loope
xor
ss
cmpsb
fisttpl
in
jne
out
or
pop
jne
jo
sub
leave
mov
dec
inc
cmc
or
or
sub
pusha
les
xor
adc
adc
in
in
subb
mov
mov
push
cmc
pop
addr16
sub
mov
dec
and
popf
clc
lds
clc
dec
and
mov
fwait
mov
jb
bnd
lahf
adc
outsb
cli
push
lock
mov
iret
pop
and
mov
cmp
mov
mov
or
add
fsubr
stos
or
xor
pop
sub
jp
sub
pop
sub
in
in
add
fldt
iret
xchg
add
and
scas
test
test
push
clc
jle
and
push
test
fmull
mov
cmc
add
mov
push
insl
cs
out
das
int
jg
loopne
dec
jns,pt
aad
cmp
jmp
pop
pop
and
int3
sbb
jp
pop
xchg
js
cmp
mov
pusha
sub
xor
or
hlt
int
aam
jbe
mov
sub
push
or
bndstx
loop
lods
cmp
cmp
mov
shrl
mov
pop
mov
call
jae
mov
mov
xchg
xor
pop
mov
movsb
sbb
icebp
add
cltd
lds
pop
test
pop
adc
loop
cltd
in
dec
jmp
or
adc
adc
sti
loopne
mov
test
ja
cmp
xor
in
pop
jp
and
jnp
lea
sub
adc
lock
call
clc
push
jbe
sub
jp
test
sbb
ss
inc
addb
push
add
push
out
pushf
out
scas
pop
pop
pop
in
cmp
sbb
test
into
adc
mov
pop
mov
mov
mov
mov
or
mov
insb
and
and
xlat
jecxz
rcr
sbb
fsubrs
sbb
adc
lret
lock
add
mov
leave
in
mov
cmp
nop
ljmp
pop
pop
das
mov
jp
and
data16
push
stos
sbb
pop
dec
out
jmp
das
xchg
loop
shll
test
fcompl
sub
push
jb
inc
loop
std
ffreep
out
mov
lea
aas
mov
testl
push
pop
sti
mov
das
cmp
inc
arpl
sub
push
ficoml
inc
insb
jnp
repz
cld
fildll
pushf
cmp
orb
je
pop
push
mov
mov
mov
cmp
and
loop
cmc
inc
into
add
push
test
fwait
stc
scas
stc
in
push
cmc
mov
xor
inc
cmpl
fstpl
insb
push
jge
pop
adc
mov
jns
lret
flds
add
fidivs
mov
pusha
shrb
or
lcall
shll
inc
std
pop
fwait
inc
loopne
imul
xchg
faddl
in
dec
push
mov
cmc
fwait
jecxz
mov
xchg
mov
in
and
xchg
jae
lock
add
stos
aad
fists
push
es
push
jnp
push
negb
fidivl
adc
hlt
inc
daa
loop
das
inc
inc
jo
jmp
inc
movsl
fisubrs
adc
test
sahf
add
pop
repnz
sahf
mov
inc
jmp
mov
icebp
xor
sbb
mov
cltd
jo
inc
ficoml
pusha
mov
and
xor
test
jns
push
xchg
xchg
mov
repz
lods
lcall
insl
mov
out
rcll
push
mov
call
adc
mov
aaa
aam
and
mov
jg
sub
cmpb
cmpsb
dec
repnz
std
fidivl
mov
lret
xchg
dec
jno
pop
mov
fmull
cmp
xchg
jne
mov
cmp
pop
pop
cmp
xor
test
cmp
cmp
or
sub
add
push
lods
push
das
xor
daa
mov
mov
cmp
stos
aaa
inc
shlb
inc
push
stos
xchg
jmp
add
stos
pushf
sub
ficoml
fadd
call
push
mov
inc
jmp
xor
mov
call
xchg
scas
popf
lret
outsl
in
mov
push
ret
cld
decl
bound
rorl
mov
div
xchg
sbb
pop
mov
dec
das
mov
inc
xchg
movsl
pop
lds
data16
xor
ss
push
pop
and
mov
jl
pop
mov
js
mov
bound
jb
jnp
loopne
lock
mov
cmc
pop
xchg
inc
jmp
lcall
or
xchg
mov
inc
pop
push
loop
pusha
add
jmp
or
mov
notl
outsb
mov
push
cmpb
shrb
xor
push
dec
adc
mov
nop
push
jnp
mov
sbb
pop
and
addl
push
jecxz
das
jge
aaa
popa
sbbb
rcrl
es
ja
push
adc
mov
mov
fdivrp
mov
pop
and
fwait
dec
stos
lret
popf
aam
cmp
cmpsb
imul
clc
push
cmovle
mov
xorb
sbb
pop
jge
iret
std
outsl
mov
inc
loopne
mov
and
fld
movsb
cs
fs
outsl
jo
and
or
mov
lods
pop
xchg
mov
das
icebp
inc
out
inc
paddd
jg
add
xorb
hlt
mov
jecxz
in
adc
data16
lret
fmul
xor
cmpsl
xchg
sbb
call
icebp
mov
lret
sub
adc
js
xor
popa
jnp
and
leave
add
mov
add
mov
outsl
cwtl
fbstp
mov
mov
adc
xchg
pop
cli
sbb
mov
dec
and
jno
sbb
scas
mov
adc
add
push
sub
adcb
or
insl
push
sahf
push
outsl
push
jp
mov
sub
inc
test
mov
test
mov
ret
stos
mov
cmp
or
xchg
cmp
cmpb
dec
xchg
cltd
and
push
adc
cs
xchg
jo
mov
std
push
lea
xchg
cltd
sbb
orb
aas
cmp
mov
aam
jle
mov
or
ds
fwait
jmp
repz
xor
lea
mov
jne,pt
fmuls
inc
je
mov
pop
test
mov
andb
and
in
mov
mov
xchg
inc
sbbl
gs
adc
in
insb
loop
shlb
enter
aaa
sub
sbb
jne
lret
clc
sar
pop
lea
mov
adc
es
test
inc
out
sbb
ret
int3
push
pop
aaa
jne
pop
aam
bound
mov
shlb
push
adc
xor
fiaddl
int3
popf
jge
incb
push
mov
iret
adc
lahf
ss
dec
ja,pn
je
mov
sub
xchg
mov
dec
adcl
test
js
data16
cmp
sub
and
les
es
inc
sub
push
cmp
or
or
sbb
xchg
fwait
pop
andb
inc
in
test
xchg
hlt
inc
movsb
lods
xchg
stc
jbe
or
aas
dec
fcoml
arpl
push
mov
hlt
lock
xchg
and
sbb
dec
gs
mov
aaa
fcmovu
and
dec
iret
cmc
mov
sub
popa
loop
movsl
jno
xchg
int3
mov
jge
ss
fisubrl
jg
int3
and
dec
insb
mov
pop
in
sbb
jmp
mov
dec
adcl
sbb
test
jo
rep
in
popa
int3
sub
sbb
jg
fwait
pop
insl
sbb
and
into
mov
fwait
dec
les
sarl
adc
adc
pop
adc
outsb
push
jecxz
std
in
pop
repz
xchg
jae
les
sub
loopne
mov
aad
xor
mov
push
mov
fstpl
cmp
mov
add
in
stos
pop
fsub
lock
inc
insb
xor
aad
fcomps
test
sahf
hlt
stos
lods
loopne
inc
cmp
out
xchg
daa
test
sub
das
add
add
cmpsl
clc
or
aam
imul
and
pop
insl
mov
push
pop
push
adc
mov
nop
loope
arpl
call
bound
mov
in
clc
jg
pop
int3
dec
test
and
add
outsb
add
in
scas
xor
lcall
stc
lcall
jge
nop
and
cmpsl
push
lock
sub
push
pop
mov
add
mov
sbb
sub
pop
ret
add
leave
je
mov
loopne
push
xor
stc
xchg
mov
dec
pop
and
sbb
fisubrs
mov
cmp
cwtl
cwtl
scas
test
push
xor
adcl
and
mov
dec
sbb
ret
ljmp
mov
sub
ret
push
cmpsl
aam
xchg
icebp
out
and
adc
or
cwtl
into
inc
loope
lods
jmp
ret
arpl
xchg
insl
sbb
mov
sub
rcr
mov
push
mov
cmp
push
cmpsl
push
and
cwtl
inc
mov
sbb
fistpll
ljmp
add
pop
jne
dec
xor
or
xchg
lcall
ficoml
push
flds
sbb
inc
adc
mov
add
ds
fistps
popf
push
movsl
movsb
jle
mov
xchg
shl
push
cmp
push
pop
pusha
subl
dec
cld
push
dec
add
mov
and
scas
sti
lea
pop
cmc
adc
push
mov
clc
out
pushf
aad
mov
loope
movsb
rol
scas
mov
mov
push
jnp
icebp
or
mov
das
mov
or
mov
aad
xchg
stos
out
mov
fnstcw
test
inc
movsl
das
xchg
pop
aaa
outsb
and
pop
addr16
xchg
push
and
enter
dec
imul
loope
nop
and
ret
lods
shll
mov
stc
pusha
adc
call
sub
pop
loopne
dec
xor
add
icebp
fisttps
in
loopne
push
dec
add
jge
loopne
mov
and
loopne
ret
mov
ret
aam
mov
dec
inc
mov
dec
aam
stc
repz
mov
sbbl
jle
dec
mov
mov
jl
push
popf
addb
mov
outsb
mov
jl
and
gs
jle
loope
out
pop
paddw
xor
jle
pop
mov
push
adc
lods
xchg
incl
int
negb
mov
and
mov
or
or
enter
sbb
repz
std
or
aad
mov
or
adc
outsb
xor
xor
add
and
sbb
loope
mov
jl
jp
jmp
popf
pop
sub
aad
jne
sub
clc
inc
push
jecxz
sub
ret
inc
add
shll
cmp
or
mov
push
jo
mov
adc
jecxz,pt
inc
mov
xor
icebp
std
test
inc
mov
pop
dec
sbb
sahf
ss
jnp
ret
jne
pop
call
or
sub
jmp
or
movsb
pop
loop
mul
xchg
inc
xchg
xchg
popf
add
adc
int
mov
in
js
fidivrs
loopne
mov
jns
je
mov
adc
cli
call
fimull
fwait
jg
pop
fwait
in
and
mov
fs
sbb
and
cmp
mov
mov
cmp
stos
mov
add
hlt
sbbl
adc
rorb
pop
roll
xchg
fwait
out
add
data16
add
sub
std
ljmp
enter
add
leave
ret
not
or
push
call
lea
push
push
lea
push
call
and
dec
mov
mov
push
sysenter
or
sbb
mov
fs
jbe
pop
push
push
cmp
and
repnz
les
dec
adc
adc
sub
sti
dec
sbb
adc
inc
movl
jmp
fldcw
mov
je
add
xchg
adc
aas
imul
inc
inc
pop
arpl
insl
cmp
dec
mov
enter
push
cld
lea
push
push
clc
sbb
mov
test
neg
sbb
mov
jmp
xor
push
jle
enter
sbb
fdivs
call
pop
ret
lock
push
or
push
push
mov
mov
les
inc
add
sbb
push
clc
push
xchg
push
out
dec
dec
adc
movsl
push
std
xor
sbb
pop
not
add
jmp
ret
push
dec
neg
inc
push
emms
push
icebp
inc
mov
push
div
rcrl
xlat
pushl
sbb
ret
and
icebp
sub
fcomip
jg
mov
dec
adc
sub
push
sbb
push
repz
ljmp
sbb
pop
inc
cmp
add
lods
std
pop
mov
push
jnp
sbb
ret
push
ret
lock
or
push
push
push
push
push
lock
mov
add
inc
out
sbb
ret
dec
lret
in
lcall
and
adc
out
mov
dec
aam
in
out
push
ljmp
fildl
sti
mov
je
dec
cmp
lret
add
ss
and
or
add
pop
dec
daa
pushf
jecxz
inc
xor
push
pop
mov
dec
jb
insb
push
pop
mulb
into
jne
lods
push
inc
pop
mov
aam
push
jle
adc
pop
pop
adc
lock
addr16
sub
push
push
or
ret
test
jecxz
inc
mov
js
push
inc
arpl
fcmovnu
fnstenv
enter
in
xchg
adc
cli
mov
adc
jbe
cwtl
lret
or
xchg
clc
mov
jge
xlat
test
push
adc
cmp
fdivs
push
fmuls
push
push
into
mov
rdmsr
lret
dec
add
mov
add
clc
in
negl
push
xor
maxps
cwtl
mov
loopne
push
pop
inc
lret
and
insl
jmp
loope
dec
xor
and
push
sub
pop
mov
sub
xchg
loopne
jne
jae
xor
jnp
or
xchg
or
adc
movsl
or
or
dec
mov
xor
rorl
int3
sub
adc
cmp
fucomip
xchg
or
and
pop
xlat
cmp
rolb
mov
int3
push
cmpsl
call
push
jno
arpl
mov
flds
mov
lea
fisttpl
ljmp
xchg
push
adc
jl
notb
sub
add
add
insl
fadds
fistpll
inc
imul
out
push
into
lcall
or
repz
dec
push
popf
lea
cmp
icebp
add
shl
pop
hlt
lods
jo
or
addr16
data16
cwtl
sbb
or
xorl
fstps
mov
pusha
rclb
sbb
rorb
sub
dec
cli
sahf
sbb
adc
hlt
jmp
inc
aaa
insl
xor
imul
rorb
outsl
add
daa
addl
clc
jle
loope
fdivrs
jne
push
fs
aaa
jb
xor
push
pop
adc
lock
dec
or
adc
add
xor
dec
push
test
lock
push
xor
inc
mov
mov
add
xchg
pop
pop
sbb
pop
jmp
fs
in
push
xor
mov
pop
fisubs
aaa
xor
arpl
or
cmp
lock
rolb
enter
repz
sbb
lock
jno
push
adcl
in
lea
lock
lock
cmp
gs
lods
ja
pop
mov
iret
cmc
add
push
cmp
push
add
sbb
push
aam
jo
jle
add
idivl
sub
cld
push
daa
repz
add
push
out
loopne
testb
inc
add
shrb
pop
inc
icebp
push
push
dec
inc
dec
addps
inc
xor
pop
dec
adc
or
fidivrl
ret
inc
push
add
xchg
loopne
andl
xor
dec
push
or
xor
pop
aaa
lock
jmp
mov
jae
push
into
xor
shlb
popl
adc
mov
dec
inc
add
inc
jo
cld
push
sbb
add
push
in
and
sbb
dec
cmpsb
mov
imul
rol
xor
leave
outsl
sub
dec
ss
add
cmp
mov
mov
sub
pop
clc
incl
or
dec
sub
mov
pop
roll
or
mov
sub
push
dec
mov
inc
add
lret
fimull
adc
popa
mov
dec
xchg
outsl
xchg
xor
outsl
das
push
add
inc
dec
push
or
icebp
popa
jnp
sbb
pop
dec
push
in
test
fstps
sub
jnp
fs
repz
cld
clc
mov
xchg
int3
call
mov
insl
mov
subl
cmp
cli
mov
subb
ds
mov
mov
xchg
adc
or
es
cmp
sti
push
xor
jl
push
push
fstpt
dec
mov
mov
dec
mov
orb
fildl
lock
sub
dec
dec
sbb
inc
dec
inc
add
pop
mov
inc
dec
add
hlt
or
jne
sbb
stc
dec
pop
pop
xchg
test
cld
xor
pusha
jl
outsl
repz
outsb
arpl
push
sub
pushf
mov
gs
dec
dec
addr16
in
cmp
test
mov
add
lahf
leave
dec
rcrb
lods
mov
xor
lock
les
testl
repnz
inc
loopne
jbe
add
xor
cmp
sub
add
adc
mov
shrb
and
stc
lret
cwtl
push
xor
mov
jb
roll
rorb
daa
xlat
cld
jne
add
adc
cmp
adc
pusha
push
cmc
arpl
sub
jnp
and
xor
pop
mov
popf
insl
addr16
mov
movsb
add
adc
and
mov
aam
inc
dec
dec
punpckhdq
mov
hlt
clc
popf
sbb
xchg
sbb
js
int
lods
push
push
aas
xor
sbb
pop
push
pop
aaa
cs
mov
orb
stc
pop
iret
fsubl
jmp
in
daa
mov
push
stos
rcl
pushf
pop
clc
mov
inc
jae
push
scas
dec
xor
mov
fnstsw
stc
add
sahf
or
jmp
inc
fisubrl
outsl
inc
shll
jno
movsl
adc
shll
enter
push
stc
shlb
push
pop
clc
in
add
jecxz
test
test
push
sbb
mov
pop
or
sub
inc
add
in
leave
adc
mov
sbb
mov
pop
stos
add
addr16
bound
out
sbb
or
imul
inc
out
pusha
in
inc
leave
xor
xor
and
xor
rcrb
das
jecxz
sbb
dec
push
and
loopne
outsl
mov
adc
jbe
call
aas
mov
cmp
mov
and
mov
sahf
fwait
and
mov
cmpsl
daa
das
iret
and
aam
orl
arpl
sub
outsl
add
push
and
dec
outsb
mov
jo
jbe
push
aam
mov
aas
sub
dec
shlb
or
sbb
add
pop
divl
mov
cwtl
in
push
fs
rorl
adc
arpl
fprem1
push
inc
fdivrs
push
daa
icebp
push
jns
cmp
ret
ljmp
dec
popf
test
into
fsubrs
popa
shl
hlt
shlb
popa
pop
xor
fs
mov
cmp
dec
push
jae
inc
mov
mov
xor
imul
jnp
pop
nop
mov
pop
fsubrs
cld
push
push
jno
xor
sbb
sar
add
inc
sub
pushl
int
adc
pushl
adc
in
iret
adc
loope
push
je
out
push
cmc
push
loopne
sbb
and
dec
fcomps
sbb
pop
jg
push
test
ficompl
cmp
pop
dec
clc
adc
clc
aad
jo
pop
bound
sbb
or
int
popf
or
lret
js
roll
js
jne
das
lret
pop
frstor
fwait
xchg
into
dec
test
js
add
dec
insl
add
dec
jne,pt
test
rcl
lea
jo
outsl
cwtl
ret
aam
popa
push
push
adc
mov
arpl
inc
test
xchg
sbb
cmpsl
add
or
jle
testl
test
mul
shl
aam
push
jl
fs
int3
dec
outsl
add
ds
leave
out
ficoms
lods
clc
das
sbb
fdivs
pop
adc
or
popf
or
jl
push
jmp
mov
inc
iret
out
sbb
push
ds
dec
fucomip
sbb
or
inc
xchg
aaa
sbb
push
es
dec
fdivs
mov
gs
jne
sbb
dec
outsb
inc
mov
lock
cld
xchg
xor
jo
mov
inc
mov
dec
fisubl
cmp
in
mov
dec
in
dec
je
aas
idivb
adc
repz
sub
dec
adc
mov
imul
hlt
adc
repz
fcmovnbe
push
js
loopne
inc
add
or
shrb
pop
cmp
jb
addb
or
aam
xor
mov
xor
inc
push
sbb
fiadds
or
mov
sti
dec
xor
insl
or
mov
mov
mov
pop
or
add
int
fisubs
xchg
pop
mov
push
add
mov
cmp
sarb
int3
or
dec
add
add
iret
fcom
mov
xchg
sub
add
mov
push
pop
sti
push
or
xor
shrb
or
fistl
pop
and
add
push
add
dec
lar
inc
inc
xor
mov
xchg
jbe
jbe
mov
outsl
pushf
lock
inc
push
andl
or
jo
cltd
adc
push
inc
fwait
add
mov
adc
dec
push
shlb
lock
popf
pushf
movsb
push
insl
add
sub
pop
add
mov
pop
push
push
dec
dec
inc
add
in
insl
add
jne
mov
adc
xchg
ror
aaa
mov
cmp
push
bswap
cli
dec
outsl
mov
hlt
das
jb
push
addr16
mov
shl
imul
push
fs
bound
jne
fisttpl
inc
mov
popf
pusha
jbe
xchg
mov
inc
call
and
fidivs
subl
mov
leave
nop
or
pop
stos
adc
cwtl
fcmovnbe
or
lret
add
xor
fs
lret
push
push
popf
in
frstor
xor
rol
adc
mov
and
jl
aad
cmp
jno
adc
mov
rolb
sbb
xchg
outsb
adc
mov
mov
daa
mov
adc
sbb
or
cmpb
mov
sub
and
dec
pop
aad
add
ss
push
add
inc
insb
test
mov
repz
addr16
pushf
test
or
stos
mov
fmul
stc
js
gs
pusha
xchg
pop
loopne
sahf
test
mov
push
add
mov
imul
xchg
mov
enter
psubsw
test
es
icebp
xchg
rolb
xchg
sahf
add
pusha
icebp
insl
leave
xor
mov
xchg
or
shl
pop
mov
les
inc
jns
test
cmp
mov
enter
cmp
cmp
dec
bound
cld
jne
jmp
mov
pop
repnz
xchg
loopne
xorl
movsb
jne
add
rorl
jge
je
lret
fisubrl
iret
xchg
sti
adc
add
outsl
insl
movl
add
imul
aaa
jle
inc
xchg
aad
add
insb
dec
stos
adc
and
inc
int
or
in
ficompl
loop
ljmp
pop
insl
movsb
or
fadd
and
jnp
loopne
aas
pop
mov
xor
lea
das
pop
jle
push
push
mov
adc
jl,pt
addr16
inc
clc
dec
and
fdivrl
mov
jbe
in
mov
test
or
mov
cli
jmp
pop
xchg
in
sbb
popa
lahf
sub
xchg
pop
lahf
add
cwtl
mov
fcmovnb
sub
jne
or
fldenv
push
movsb
and
fcmovb
jae
mov
shl
lcall
and
outsb
mov
pop
nop
dec
push
or
pop
out
mov
pop
lret
inc
add
add
push
jbe
mov
jecxz
in
jg
sahf
adc
sbb
pop
das
je
jmp
dec
ljmp
add
stos
popf
lods
sbb
and
push
test
push
negl
arpl
arpl
sti
ret
loopne
daa
outsl
mov
out
push
cwtl
cmp
out
add
adc
pop
push
mov
sub
nop
out
mov
cld
jno
cld
movl
movl
xchg
pop
add
add
or
daa
mov
sbb
call
or
xchg
inc
lcall
jmp
adc
into
dec
xor
outsl
mov
mov
mov
xor
je
in
add
call
or
sbb
sbb
sbb
fildll
sbb
inc
xor
insl
leave
lods
popf
cmp
clc
in
or
pop
jbe
jge
hlt
dec
aad
sub
jmp
mov
push
jo
inc
sbbb
addr16
or
movl
dec
add
in
sbb
shr
or
mov
idivb
jbe
xchg
lds
bound
nop
jmp
lcall
push
scas
xor
cs
or
test
sbb
jl
sub
aaa
in
or
shr
adc
insb
divl
fwait
lea
xchg
les
mov
lahf
cltd
sbb
fucom
jnp
inc
mov
fnstcw
or
fwait
and
addb
iret
aam
je
das
jg
jns
gs
cmpsb
or
pop
sbb
ret
out
mov
ffree
shr
sti
mov
mov
aad
lret
scas
jecxz
sub
clc
mov
lock
adc
mov
xchg
scas
xchg
out
sub
imul
cmp
out
cmpb
in
mov
call
call
inc
rorl
push
sub
xor
or
or
mov
cmp
in
shr
movsl
pand
or
mov
xlat
movl
dec
es
adc
xor
lea
adc
jecxz
je
rclb
scas
inc
pop
mov
enter
out
insl
xchg
dec
into
mov
imul
cmpsl
ds
lret
dec
in
cmp
dec
push
and
in
cs
test
movl
adc
in
or
scas
mov
cmp
jge
mov
dec
xor
cmc
and
cmp
outsb
lods
lds
js
cmp
sarl
or
aas
xlat
adc
inc
clc
pusha
and
add
xchg
aas
aam
popf
sbb
mov
mov
inc
sbbb
pop
movsl
sbb
ret
icebp
mov
in
std
out
pop
xchg
call
std
mov
dec
xor
cmp
inc
sub
adc
aad
mov
sbb
push
test
mov
cmc
ds
daa
jb
mov
imul
pop
in
ss
cld
xchg
out
jo
push
add
repnz
and
fldcw
fsubrs
outsl
add
mov
add
jnp
xchg
movsb
or
ret
ljmp
sahf
pop
js
cmp
cmpsl
imull
adc
bound
lock
mov
xor
clc
cmp
inc
mov
int
insl
mov
inc
xor
mov
jo
pop
jno
sbb
popl
push
or
cmp
inc
xlat
jno
sbb
sbb
pop
cli
pop
mov
test
pop
cmp
mov
imul
xlat
paddusb
jo
pop
lret
call
jl
outsl
add
jo
out
and
outsb
hlt
push
in
cwtl
hlt
aaa
out
mov
adc
adc
scas
loope
jle,pt
xlat
add
in
dec
test
or
lret
shlb
pop
inc
popf
int
sbb
fdivrl
addr16
jo
jle
and
dec
xor
inc
xchg
cwtl
sahf
mov
arpl
inc
cli
icebp
mov
rcr
cmp
data16
subb
push
xor
sahf
adc
lods
add
cmp
aaa
push
movsb
out
roll
loopne
fwait
jo
insl
xorl
test
cmp
mov
or
test
jmp
out
lock
pop
sti
jp
popa
cmp
js
mov
cmpsl
fiadds
cmp
outsb
sub
cmc
mov
xchg
xchg
pop
imul
icebp
xor
jg
mov
jo
fsubp
mov
xchg
push
popa
test
fidivs
adc
adc
push
xchg
and
mov
das
data16
movsl
std
loopne
gs
inc
loopne
pop
mov
mov
scas
fidivl
jbe
and
lods
mov
mov
and
and
int
mov
mov
push
sbb
jne
inc
pop
stos
mov
xchg
dec
mov
inc
test
xor
popf
arpl
test
or
mov
adc
mov
outsb
add
and
ret
jnp
push
mov
dec
xlat
icebp
jl
xor
xlat
or
jp
imul
pop
jl
pop
clc
aam
cltd
sbb
push
adc
iret
loopne
push
addr16
shlb
add
inc
mov
sbb
out
cmp
sub
mov
out
icebp
xchg
add
ret
stos
mov
sub
fisubs
push
cmp
add
xor
pop
xchg
jmp
sbb
xor
xchg
lods
hlt
pop
mov
or
push
sbb
dec
inc
mov
adc
aas
adc
lock
lret
push
and
jge
ds
inc
inc
jae
cmp
pop
dec
shlb
scas
dec
inc
push
push
cmpsl
dec
mov
and
bound
adc
jmp
popa
sub
mov
hlt
xchg
call
stos
das
subb
push
cmp
or
fstl
mov
mov
cmp
or
aam
xor
into
jle
cmpsb
inc
and
cmp
adc
mov
adc
mov
cmp
pop
add
test
in
jecxz
sti
roll
aad
pop
xchg
pop
js
imul
cmp
dec
jge
mov
xchg
iret
repz
xchg
sbb
ja
ffree
mov
loope
pop
mov
shr
adc
mov
sbb
push
jp
in
or
lahf
sub
pop
pop
xor
lods
add
shll
das
push
hlt
scas
inc
out
mov
push
shrb
inc
mov
dec
pushf
push
inc
fbstp
mov
sbb
fwait
ss
or
cmc
pop
jnp
lds
sti
pop
xchg
nop
jmp
cmp
ss
sub
ret
dec
loopne
cmp
sub
xchg
mov
pop
sarl
jle
mull
das
mov
push
out
pop
fmull
inc
inc
daa
mov
daa
rclb
hlt
les
outsl
and
popa
jb
pop
nop
xchg
cmp
adc
mov
inc
jp
mov
fiaddl
cs
push
pop
or
add
sbb
jns
sarb
cmp
or
push
fistl
add
outsl
popa
xchg
sahf
sbb
icebp
sbb
test
mov
lock
clc
shlb
es
or
or
xchg
shl
mov
or
mov
adc
and
ss
repz
mov
pop
imul
dec
jg
cmp
das
push
subb
adc
lahf
aad
dec
push
xor
xchg
lds
and
in
les
xchg
test
dec
out
mov
dec
scas
loope
mov
jnp
sub
or
std
mov
loop
dec
mov
dec
loopne
jae
pushf
mov
daa
les
mov
repz
xor
inc
cmp
scas
mov
dec
dec
movsl
nop
shlb
rorb
mov
fbstp
inc
add
jns
js
mov
in
in
ss
out
sbb
xchg
adc
pop
es
test
repz
jo
movlps
inc
gs
lahf
pop
fdiv
test
mov
cmp
loopne
add
push
pop
leave
jge
fwait
jge
imul
into
imulb
mov
inc
int3
jne
insb
xor
lret
mov
out
dec
jecxz
mov
cmp
sbb
aaa
mov
lods
inc
adc
testl
add
pop
inc
sbb
mov
push
bound
sti
subb
ds
cmp
aas
push
sbb
mov
or
xchg
sbb
scas
cmp
dec
in
xchg
mov
movsb
rcl
push
ds
sbb
sbb
and
inc
pop
outsl
scas
xchg
repnz
push
test
test
test
cmp
ljmp
and
pop
xchg
cld
ret
movd
push
je
and
jmp
mov
or
out
pusha
jnp
jecxz
mov
xor
xchg
push
rclb
push
sahf
lods
mov
in
or
lock
add
inc
sti
jle
js
lods
mov
sbb
or
aas
lea
test
scas
jmp
adc
jecxz
clc
in
fcoml
lahf
cwtl
aam
ja
sub
add
fisttpl
push
cmp
inc
leave
inc
mov
rol
ss
cmpsb
xor
jl
inc
jae
in
inc
rcrl
addr16
jne
mov
sbb
sbb
xchg
fsubr
xor
mov
mov
icebp
cli
sub
mov
mov
inc
pop
fdivs
mov
inc
divl
sbbl
pop
adc
cli
push
hlt
sbb
data16
fstpt
xor
fsubs
sbb
jge
push
sbb
testl
fwait
std
xor
loop
push
fcomps
xor
and
push
inc
mov
sbb
jo
add
orb
in
mov
sahf
movsb
jg
jbe
loope
sbb
and
and
fwait
mov
jl
jns
push
jmp
mov
pop
push
insb
adc
lcall
mov
call
ss
jmp
and
pop
jge
add
sbb
push
pop
insb
cmpsl
jnp
pusha
mov
push
stc
popa
sbb
pop
lods
lcall
cs
add
aaa
adc
in
xchg
inc
pusha
cmp
repz
ret
inc
dec
lock
nop
aas
or
mov
cmpsl
arpl
mov
outsl
cmpsl
and
dec
mov
in
sbb
iret
push
mov
insb
dec
incl
jns
cmp
test
pop
loop
adc
push
vaddsd
std
jb
adc
insb
in
xchg
loopne
shrl
and
lods
mov
pop
mov
loopne
js
imul
gs
icebp
icebp
rolb
sbb
jmp
push
add
aad
ljmp
pop
mov
dec
and
xlat
notb
frstor
cmp
mov
adc
inc
cmp
test
add
mov
sbb
loope
mov
sbb
femms
xor
sbb
sbb
jbe
popf
sbb
fisubrl
jl
nop
mov
push
xchg
jne
xor
lret
mov
test
mov
xchg
jle
mov
stos
or
adc
cmp
fsubl
jle
mov
jl
mov
out
mov
shr
mov
je
sub
stc
xchg
fcmovnb
xchg
cli
in
lret
push
ss
mov
fwait
js
add
pop
in
testb
or
mov
mov
jbe
test
push
push
inc
fdivs
mov
mov
aam
iret
jecxz
push
popa
outsl
sbb
mov
ds
or
mov
add
sbb
cmp
bnd
xor
sahf
imul
in
outsl
ss
dec
sbb
into
xchg
xchg
adc
je
addl
imul
sub
mov
lods
xchg
mov
or
fistpl
mov
add
jmp
imul
movsb
mov
into
int3
adc
dec
addb
nop
test
mov
insb
fistpl
clc
mov
stos
rolb
mov
bound
jg
push
popl
lods
jmp
dec
pushf
cmp
popf
add
rolb
shlb
sbb
inc
jne
sub
add
dec
dec
movsb
inc
xor
popf
mov
shll
xchg
popa
mov
jmp
mov
nop
lods
jp
push
inc
xor
andb
out
idivb
sbb
rolb
or
xlat
mov
adcl
std
push
ss
shr
pop
stos
decb
push
test
xor
vpunpcklbw
cmp
xchg
cmpsb
push
mov
arpl
inc
cmpsb
xchg
push
push
or
std
shlb
out
jne
ja
cld
jae
inc
jge
out
lods
add
push
into
loop
xchg
sub
jp
fnstsw
mov
jp
inc
pop
xlat
gs
inc
or
pop
jnp
je
add
push
jecxz
add
ficoml
cmp
out
aaa
insl
jne
call
mov
test
das
lahf
in
incb
adc
subl
cld
sbb
pop
add
stos
mov
xor
and
dec
lods
lret
in
mov
ss
mov
iret
mov
inc
loopne
mov
push
pop
pop
ficoml
jno
jno
and
pop
fsubrs
lods
orl
dec
mov
and
cmc
pop
or
and
xlat
jge
mov
insb
andb
aas
loop
inc
add
mov
cmp
jl
inc
loop
push
sub
subb
leave
and
out
or
into
loopne
outsl
in
outsl
lea
fneni(8087
daa
rorb
sub
fistpl
push
fcmovne
ss
fists
ds
outsb
inc
or
leave
add
fcmovnu
data16
fsubl
fs
int3
add
loop
sbb
mov
leave
pop
rcrl
arpl
fisttpll
mov
sbb
test
jnp
jne
clc
test
test
icebp
adc
xor
cltd
mov
scas
push
xchg
arpl
or
hlt
cmp
jle
or
sub
cmp
jmp
test
or
ja
ljmp
fwait
mov
jp
and
jg
addr16
fnstsw
movlps
jo
fs
pop
stos
in
adc
add
lret
call
sahf
mov
mov
pop
inc
shlb
add
out
insl
enter
pop
lock
adc
adc
js
jmp
insb
int3
jp
mov
xchg
cmp
jnp
jnp
and
jnp
sub
ljmp
cmp
add
xlat
sub
popf
jp
or
arpl
ret
iret
dec
movsl
xor
mov
shrb
clc
test
jb
ret
adc
mov
add
push
mov
xor
add
sti
dec
test
sbb
or
cmpsb
scas
iret
push
sbbl
adc
in
cmp
jnp
out
cmpsb
add
addr16
ret
and
push
xchg
dec
cli
notb
xchg
js
pop
nop
add
adc
sarl
outsb
push
xchg
pop
xor
lcall
je
inc
fisttps
outsl
sbb
cs
jno,pt
shlb
js
int
gs
and
cld
push
leave
inc
mov
cmp
aad
mov
ja
pop
push
pop
pop
rcll
imul
in
scas
mov
adc
mov
push
out
mov
imul
pop
pop
nop
and
xchg
pop
xchg
or
push
iret
sub
decb
mov
jo
cmp
add
cmpsl
mov
pop
sub
outsl
popf
stc
aaa
or
loopne
xor
mov
inc
xlat
mov
out
pop
insl
cmp
imul
pop
lcall
xchg
and
and
or
jb
cli
cli
cmpsb
insl
and
or
xchg
mov
mov
xor
and
mov
add
sarl
push
jg
cmp
hlt
fidivs
mov
push
jmp
popf
inc
cmpsb
xchg
sub
add
jno
cmpsl
movq
mov
cs
clc
push
add
fidivrl
dec
cmp
lock
cmp
jbe
mov
imul
dec
test
sbb
inc
pop
stos
or
pop
clc
call
fwait
cmc
lahf
jl
mov
inc
cmp
orl
xor
xchg
stos
sbb
mov
js
mov
dec
lock
outsl
nop
pslld
pop
and
jne
jmp
cld
filds
pop
stos
add
xor
shrl
mov
mov
lds
mov
loope
icebp
xlat
imul
mov
cli
jg
pop
jmp
cmp
pop
dec
pop
xorl
das
repz
cmp
dec
pop
jo
loop
lds
repz
push
xor
rorb
int
and
lock
adc
xlat
mov
or
movsb
jp
das
mov
outsl
bound
adc
insb
sbb
mov
mov
pushw
rorb
cmp
sbb
int3
test
cltd
adc
mov
jmp
iret
dec
out
sub
add
pop
xor
sub
sbb
fstps
mov
jge
cs
imul
stc
push
dec
out
sbb
test
adc
repz
idiv
bound
call
lods
test
fcoms
in
xchg
mov
pop
dec
push
cmpsl
or
aad
sti
xchg
data16
cmp
push
decb
shl
movsl
data16
mov
jg
mov
ret
mov
push
lahf
lds
es
push
push
jnp
inc
jbe
jns
xor
jle
or
daa
mov
xor
sbb
inc
frstpm(287
scas
je
mov
orb
pushf
push
and
rolb
jno
std
sub
sub
xor
stos
arpl
cli
insl
loope
bound
ret
rol
xchg
xor
jno
adc
pop
je
mov
or
cmp
xchg
xor
sti
loopne
pop
xor
sahf
rep
nop
pop
or
mov
call
jnp
aam
sub
rcll
insl
sub
or
jno
lea
sub
aaa
pop
daa
cltd
jmp
lret
mov
mov
shrl
sbb
adc
push
movsb
inc
dec
out
cmp
jl
nop
pop
push
cli
jecxz
pop
inc
orb
popf
mov
inc
addr16
mov
adc
test
mov
adc
out
dec
mov
rol
mov
lock
into
bound
in
movhps
add
inc
inc
imul
sbb
jl
out
icebp
mov
cmp
push
rcll
xchg
push
mov
aad
add
mov
xchg
loop
in
adc
jge
aam
push
jmp
dec
push
cmp
jo
into
xor
cwtl
inc
xor
mov
test
jb
aam
icebp
shlb
xor
push
and
jge
mov
movsb
and
test
mov
loopne
mov
daa
xchg
mov
popa
mov
clc
cs
dec
mov
call
imul
inc
gs
loop
in
insb
or
and
sbb
loop
jo
in
sub
sbb
pusha
dec
sbb
lods
icebp
call
mov
ret
push
sbb
lcall
sbb
sub
sbb
pop
adc
repnz
insb
cltd
fcomi
xchg
roll
pop
rcrb
jnp
add
sbb
rol
pop
pop
int3
ret
and
mov
xchg
dec
add
aam
mov
gs
push
out
lods
push
sbb
mov
pop
and
adc
dec
jnp
adc
jp
in
jp
gs
cmp
inc
mov
jg
fwait
stos
and
jo
xlat
push
fstl
leave
dec
mov
pop
iret
inc
add
jl
jg
pop
adc
in
aad
mov
sbb
outsl
ss
cltd
lods
stos
mov
ja
aaa
les
cmp
or
push
cmp
das
sarb
jl
xlat
mov
pop
arpl
arpl
push
or
rcrb
mov
arpl
out
mov
xchg
pop
sbb
sub
cmp
mov
xchg
sub
mov
loope
pop
cld
test
fistps
inc
aad
and
pop
sub
sbb
and
push
inc
dec
sahf
add
cmp
pop
fsubl
js
or
add
jmp
rol
cld
lods
sbb
mov
test
mov
add
dec
cwtl
insl
lcall
leave
jmp
dec
or
inc
or
jno
adc
push
adc
push
mov
xor
xchg
xor
mov
inc
or
xlat
leave
leave
xor
cmpsl
out
xor
xchg
pop
jmp
rcrb
sub
inc
pop
call
sbb
cmp
pop
outsb
cmp
sbb
ds
ret
mov
mov
xchg
sahf
sub
xchg
ffreep
inc
pop
sbb
add
faddp
or
movb
sbb
test
mov
sarb
mov
sub
add
xor
ror
fdivr
jae
icebp
mov
pop
out
leave
xchg
movsb
jge
mov
insl
nop
fs
daa
push
push
insl
jecxz
das
mov
movsb
ljmp
dec
daa
nopw
fdivrl
mov
hlt
out
rcl
jg
outsl
fwait
dec
xor
xor
pushf
xchg
or
inc
rol
pop
add
adc
loope
insl
test
jle
and
pop
mov
mov
mov
arpl
and
pop
and
xor
rorl
jmp
nop
leave
inc
add
negb
sbb
xor
test
mov
lock
rolb
mov
mov
shll
test
jge
add
cli
mov
cmp
out
les
inc
xchg
mov
pop
push
lret
pop
pop
add
shll
subl
jg
xchg
insb
or
and
cmpsb
mov
mov
mov
mov
cld
test
pop
call
fwait
xor
iret
es
jbe
aas
add
xor
cltd
cmpsl
and
jl
cmp
jae
call
insl
jl
jo
add
jle
out
sub
lahf
mov
lods
subb
pop
sbb
in
imul
iret
xor
mov
test
popa
sub
push
inc
stos
jb
xor
mov
mov
mov
xor
out
sbb
test
jmp
xor
mov
adc
xchg
add
mov
inc
xorb
push
jge
dec
movb
jno
jnp
mov
loope
xor
add
icebp
imul
outsl
je
and
shrl
push
mov
test
aad
inc
lret
mov
pop
lods
push
pop
sahf
mov
xor
dec
mov
adc
insb
push
popf
push
data16
loopne
and
jge
mov
mov
fistl
dec
and
cs
jge
and
scas
movsl
fucomip
jbe
lea
and
and
lcall
xlat
lahf
pop
pop
sub
push
inc
mov
roll
sbb
push
sbbl
sub
mov
cmpl
loopne
xchg
sbb
iret
inc
data16
xchg
jmp
lock
push
fmuls
cmc
mov
je
outsl
jo
arpl
xchg
mov
or
cmp
rclb
jne
mov
pop
out
stos
push
popf
jnp
mov
out
enter
and
sbb
mov
and
stos
cmpsb
repnz
jecxz
sbb
leave
add
lock
rorl
or
cwtl
or
enter
ret
dec
je
clc
ljmp
adc
scas
xor
sbb
popa
add
sub
mov
pop
push
xchg
add
add
xor
push
divb
jo
cmpsl
pop
push
jle
add
inc
mov
enter
insl
ret
repz
leave
inc
aam
mov
adc
xchg
mov
data16
inc
xor
jae
mov
dec
inc
fimuls
push
cmp
jmp
push
add
mov
inc
in
in
jmp
fs
sbb
mov
pop
ss
inc
push
jnp
jl
lcall
mov
sub
inc
jmp
xchg
into
cmp
xor
and
js
cli
mov
sub
loopne
pop
js
jl
push
aad
sbb
stc
fildl
xor
cmp
inc
repnz
pop
push
mov
arpl
cmpsb
das
xchg
loope
push
and
adc
xor
out
les
inc
sarb
mov
mov
loope
cmp
fcompl
mov
push
mov
jno
ret
pop
fistps
push
lods
sbb
push
xchg
pop
and
mov
jle
ret
gs
lret
inc
dec
movsb
sbb
jle
and
jmp
pusha
mov
sbb
inc
mov
arpl
clc
inc
mov
clc
hlt
jns
mov
dec
mov
and
mov
lds
fisubs
xchg
lea
pop
rcrl
jno
sub
jecxz
and
jns
test
push
push
out
add
loopne
mov
js
rorl
fsubrs
cwtl
or
mov
pop
mov
cmp
ss
mov
std
or
test
in
arpl
mov
inc
stos
sub
xchg
aaa
xor
and
fmull
out
sti
scas
mov
mov
cmp
call
or
pop
inc
inc
scas
outsb
jg
fistps
mov
xor
push
sbb
rorl
xor
or
in
dec
sbb
push
imul
mov
out
aas
xchg
test
movb
fimuls
rol
add
out
mov
and
adc
jg
pop
sbb
push
lods
lods
xchg
leave
mov
or
pop
insl
jg
mov
lods
gs
xor
inc
xchg
xchg
lock
cli
lret
in
and
mov
stos
loopne,pt
adc
xor
mov
subl
rcr
mov
push
sahf
sub
cmpsb
jge,pn
rep
sbb
loop
nop
and
sub
loope
outsl
loop
mov
mov
xor
lea
fadds
fs
or
push
mov
sub
out
or
adc
ja
xchg
setb
loop
add
sbb
test
in
dec
push
mov
mov
xor
mov
das
xchg
pop
or
sbb
push
mov
clc
pop
adc
sbb
cmp
inc
adc
stos
mov
mov
subb
dec
in
pop
jbe
adc
mov
pop
push
xchg
add
jge
stos
mov
mov
push
ret
imul
xor
movlhps
popa
push
xchg
cmp
rcll
cmc
outsl
push
sarb
adc
sti
aam
mov
dec
jl
sub
nop
mov
inc
xchg
jno
adc
lds
ret
sbb
pop
ret
mov
imul
out
cmc
sub
scas
push
add
add
inc
and
fadd
inc
stos
or
movsl
dec
mov
imul
ret
jbe
adc
sahf
xchg
add
lods
cmp
push
incb
cmp
mov
aaa
cmp
pop
mov
ret
sbb
out
cmp
mov
cli
pop
xchg
xor
adc
mov
mov
je
and
push
mov
mov
addr16
inc
pop
cmc
mov
loope
add
sub
pop
test
xchg
dec
and
mov
push
and
xchg
ja
adc
mov
lods
insb
cmp
jo
stc
sbb
les
adc
unpckhps
lock
fwait
xchg
mov
pop
dec
icebp
cmp
stos
in
adc
mov
lea
jl
fisttpll
mov
les
ja
lea
in
adc
pop
xor
mov
sub
mov
fwait
insl
add
or
push
fldt
loopne
leave
ret
fwait
xor
shl
dec
test
inc
or
shll
mov
dec
pop
push
add
fwait
mov
out
push
push
cmp
jbe
dec
xchg
int3
lods
xchg
lds
dec
je
loope
bound
rolb
rcl
sub
decl
and
pop
imul
iret
shll
bound
push
mov
cmp
push
jle
xchg
pop
iret
mov
mov
add
mov
mov
sub
lock
add
sbb
jne
ss
jle
and
cli
pop
insb
rorl
xchg
jae
xchg
js
js
ret
push
mov
jmp
add
out
test
imul
sub
inc
sub
mov
inc
adc
or
jge
mulb
stos
cmp
push
data16
lcall
jbe
enter
fsubrl
in
push
push
js
add
mov
jl
aaa
and
add
pop
xor
push
mov
add
and
jno
cmp
in
sbb
outsb
jmp
rcrb
sbb
das
cmp
or
lea
xchg
ds
out
add
out
aaa
rcrl
cmp
ret
mov
test
add
dec
scas
outsl
pop
mov
jg
outsl
sub
and
jg
in
sub
sbb
divb
inc
cmc
or
jnp
dec
stos
les
lock
out
dec
in
jbe
mov
lods
jne
sbb
jp
push
push
pop
or
ds
and
mov
ror
pop
loope
test
mov
cmp
cmc
pop
daa
lods
xchg
ljmp
roll
testb
jns
mov
jg
xchg
mov
cmpsl
add
mov
jns
or
ja
push
mov
arpl
jg
clc
dec
aaa
addr16
and
add
adc
or
movsl
mov
push
int3
or
ret
je
cmp
stos
stc
dec
inc
es
and
sub
addb
pop
js
int3
int
adc
in
push
jbe
movsl
jnp
sub
sub
push
jno
fwait
jmp
andl
and
mov
adc
and
std
fstpt
adc
lock
repz
pusha
fbstp
add
push
loope
sub
pop
jmp
push
xchg
loopne
adc
inc
and
je
in
out
inc
shl
sbb
pop
jne
adc
lahf
sbb
inc
in
ljmp
xor
rclb
gs
mov
and
inc
or
pop
scas
stc
fs
enter
xor
cld
scas
arpl
fsubs
pop
in
repnz
pop
jle
lds
jbe
clc
or
mov
scas
mov
jno
stc
pusha
mov
sti
fsubr
cmp
cmp
out
jae
lret
sub
adc
bound
scas
imul
fdiv
out
loop
cld
mov
cltd
inc
cli
cmp
subb
scas
xor
mov
inc
xchg
decb
std
clc
and
push
mov
xchg
loope
nop
mov
nop
pop
sub
inc
cmc
cmc
aam
popa
and
jmp
mov
adc
pop
filds
xor
std
movsl
pop
sbb
pushf
std
dec
pop
fcomp
incl
cmp
sahf
xor
lea
lcall
inc
sbb
jo
data16
out
pop
jecxz
cmp
push
mov
mov
test
std
fiadds
pop
lock
add
jg
mov
lret
or
push
mov
sbb
cmp
cmp
jmp
jnp
mov
repnz
inc
and
loope
scas
lret
pusha
and
dec
std
sub
in
mov
xchg
addl
push
xor
push
cmp
inc
dec
inc
mov
mov
or
cmpsl
and
dec
push
js
shrb
mov
js
arpl
cmp
mov
test
adc
ss
es
rorl
call
push
std
mov
xor
xor
out
adc
rorb
push
dec
inc
test
in
sbb
arpl
insl
fadds
inc
divl
call
sub
inc
addl
testb
cmp
pop
sub
xchg
mov
mov
cmpsb
ret
mov
mov
lcall
addb
ficompl
shll
pop
cli
or
or
stos
ret
mov
add
inc
push
mov
or
push
jle
fadds
inc
subb
out
mov
add
lcall
popf
jmp
movsb
cmp
ficoms
sbb
jl
lock
pushf
lods
mov
dec
or
fdivrl
cld
es
jp
xchg
dec
mov
mov
sbb
xor
jne
sbb
cld
test
mov
aam
aad
mov
cmpsl
adc
xchg
jbe
ja
adcl
jne
popa
leave
pop
xchg
inc
fimull
lret
leave
sbb
and
jg
lret
sbb
clc
sbb
jle
inc
inc
cmp
mov
das
sbb
roll
xchg
xor
jecxz
mov
and
sub
testb
adc
jne
negb
adc
mov
lcall
push
mov
push
xor
cmpsl
ljmp
cmp
mov
push
mov
sub
sub
jns
repnz
scas
cli
orb
inc
popa
sub
sub
decb
call
and
lock
jl
xchg
das
neg
or
push
pop
stos
in
cmp
mov
pop
and
or
push
nop
mov
adc
into
insb
call
pop
aaa
xchg
fsubrl
mov
fdivrs
jl
aaa
call
or
jne
idivb
stc
sti
loop
add
dec
mov
jbe
loopne
xor
mov
sub
adc
cmp
push
fidivrl
xlat
ljmp
fidivs
or
jb
adcb
out
sbb
mov
mov
test
jne
leave
fbstp
rol
out
in
pop
outsl
jmp
mov
xor
cwtl
push
add
mov
pop
aam
js
test
lock
sbb
orl
jne
push
mov
mov
ds
add
push
aas
jle
and
and
add
daa
cld
pop
shll
daa
jbe
push
es
pop
pop
or
sbb
xchg
je
movsl
lods
mov
sbb
jg
ja
repz
xor
popw
and
js
fucom
sbb
shrb
insb
inc
inc
lods
testl
pop
push
addr16
out
push
and
or
and
cmp
inc
ret
test
jne
shlb
inc
stos
les
aas
cmovno
jbe
out
rcrb
inc
movsl
insl
inc
maxps
aam
mov
xchg
cmp
dec
cltd
scas
lea
jl
outsb
inc
les
sbb
mov
and
push
add
vpcomud
push
mov
lret
inc
ficoml
push
mov
sub
lds
mov
sub
sbb
aas
loopne
je
pop
aad
andb
lret
test
mov
ja
in
jno
mov
sbbl
outsl
rorl
adc
mov
fnstsw
mov
adc
call
pop
rorb
or
pop
mov
lahf
gs
xor
mov
or
ja
in
jb
test
arpl
adc
pavgb
inc
pop
jne
loopne
in
fdivrl
sbb
rorb
and
icebp
int3
insb
out
ret
push
subb
pop
or
push
pop
pop
and
aad
xchg
and
loopne
mov
push
dec
test
pop
mov
scas
out
scas
outsb
inc
enter
mov
inc
mov
fisttpl
sbb
jne
call
shlb
add
pop
jp
ret
mov
inc
in
mov
ja
mov
cmp
aad
cld
dec
pushf
mov
dec
xchg
push
fsubr
pop
lock
mov
scas
push
dec
add
cmc
push
ficompl
gs
js
daa
cltd
ja
mov
pop
in
adc
sarl
jne
xchg
xor
mov
ret
aas
mov
pop
xor
jecxz
repz
rcrl
jp
add
imulb
push
cmp
lods
adc
test
ja
test
cwtl
fstpl
xchg
sti
xchg
sbb
mov
mov
out
je
mov
arpl
aas
sbb
xchg
pop
stc
push
lcall
cmpsl
adc
adc
or
bound
mov
inc
mov
leave
aaa
es
ret
lahf
arpl
enter
cmp
xor
gs
sti
push
or
notl
fcom
sub
sub
ret
cs
jle
inc
dec
clc
adc
pusha
stos
sbb
xchg
sti
fcompl
cmc
repnz
xchg
cmp
sbb
stc
imul
enter
cmp
cmp
mov
movsl
jnp
xchg
push
cmp
std
scas
jg
push
inc
cld
mov
mov
xor
test
push
dec
and
jmp
xchg
les
pushf
mov
lea
insb
inc
ffreep
test
adc
clc
ss
adc
sbb
dec
mov
in
pop
xor
xor
clc
add
jge
cmp
icebp
sbb
mov
jecxz
mov
mov
push
ja
add
xor
call
in
sbb
rcrl
push
icebp
mov
pop
out
xor
insl
adcl
push
mov
aaa
jle
lods
enter
loopne
jp
xchg
xchg
mov
mov
scas
cmpsb
inc
imul
push
js
mov
fnstenv
hlt
shr
jno
mov
mov
add
push
dec
cmp
int
ret
mov
and
cltd
xchg
pop
je
hlt
in
cld
mov
into
fnstsw
mov
aas
add
clc
sub
or
lock
icebp
scas
imul
mov
fs
aam
push
sbb
aad
push
mov
cs
cmp
ret
nop
mov
jbe
lahf
adc
pusha
sbbl
add
ljmp
cld
adc
cmc
xchg
enter
add
lods
adc
xchg
out
jmp
cld
outsb
cmp
jge
test
lret
dec
out
scas
pop
faddl
in
stos
lcall
adc
sbb
mov
jne
call
xchg
js
pop
test
aad
loope
dec
stc
sub
loopne
test
fcomip
dec
fiadds
int
rcll
mov
cmpsl
sub
xor
xchg
inc
and
mov
jne
jp
cmp
xorb
pop
test
add
repnz
clc
push
pop
pop
mov
dec
mov
movsb
adc
jno
mov
ljmp
dec
dec
jl
outsb
rcrb
pop
sbb
sbb
ljmp
mov
add
dec
jmp
xchg
pop
push
nop
cmpsb
add
or
out
mov
or
and
call
jb
mov
lcall
cld
fnsave
es
push
mov
xor
cli
in
or
xchg
subl
lcall
adcl
call
sets
es
in
ror
aam
mov
jno
popa
rorb
mov
add
push
mov
fists
adc
mov
sarb
das
addl
ret
fwait
jle
push
pop
xchg
jecxz
cld
sub
mov
je
out
cmp
ljmp
mov
dec
mulb
dec
popa
lods
cli
ja
mov
mov
add
repz
in
clc
cmovbe
and
clc
clc
mov
and
cld
or
jns
scas
popf
dec
cmp
add
ljmp
aas
lock
sar
loop
pop
dec
jno
push
idivl
push
xchg
outsl
mov
dec
mov
sbb
dec
jge
popf
jae
cmp
jmp
and
and
stos
dec
lock
xlat
lcall
nop
int3
add
scas
mov
daa
jp
jne
aaa
mov
mov
jg
dec
sti
inc
sbb
adc
orl
scas
inc
mov
out
loop
test
jbe
and
push
xor
loopne
and
mov
lahf
xorl
shl
pop
sbb
jecxz
or
jb
movsb
test
adc
add
mov
data16
cmp
outsb
jge
sbb
shrb
das
cmpb
outsl
fcoml
clc
jb
push
push
jl
dec
mov
loopne
shlb
mov
repz
add
ljmp
icebp
jmp
dec
cmp
xchg
mov
sub
lahf
dec
fisubs
cli
icebp
sbb
adc
xor
or
and
inc
clc
sbbl
add
int
xchg
adc
ljmp
pop
lret
lahf
aad
decl
jl
adc
xor
xchg
and
and
push
in
mov
cli
fwait
arpl
icebp
sbb
lods
enter
adc
mov
in
inc
outsl
lret
cmp
ja
add
mov
cmp
xor
out
ja
lcall
push
inc
incl
sbb
outsb
ret
adc
call
shll
inc
in
cmpsb
push
pop
incl
mov
test
mov
fst
mov
xchg
add
add
lahf
cmpsb
jmp
mov
inc
pop
aaa
mov
mov
adc
add
clc
push
add
lds
dec
es
cli
lods
outsl
jecxz
into
jmp
push
xor
mov
push
sub
xchg
xorl
loopne
ja
cltd
lcall
dec
dec
fidivrs
mov
add
jne
fwait
mov
cwtl
lcall
aam
out
dec
bnd
dec
or
lock
ds
fcmovne
pop
pop
ret
xor
test
incb
sbb
dec
out
push
pop
xor
sub
mov
dec
cmp
pop
mov
fisubrl
mov
ds
popa
lea
sbb
roll
aas
add
insl
mov
clc
mov
fildl
xchg
push
or
or
dec
adc
sbb
sti
rolb
cld
mov
push
mov
sti
and
daa
mov
loop
aaa
ja
mov
test
push
insl
je
mov
fisubs
mov
je
ljmp
push
sbb
jmp
push
ret
ljmp
lahf
xor
sbb
cmpsb
or
mov
dec
and
aaa
inc
int3
mov
icebp
jge
pop
jg
stos
pop
addr16
cmc
and
adc
xchg
in
jnp
pop
scas
push
cld
mov
stos
stos
insl
adc
push
cltd
call
mov
rolb
stos
cli
push
out
pop
lods
sbb
mov
inc
xor
icebp
push
loop
mov
or
loope
out
add
inc
stos
xchg
push
cwtl
mov
inc
cwtl
or
sbb
das
mov
jg
mov
lret
rcrl
push
test
mov
or
add
or
adc
inc
std
push
cltd
jmp
sbb
inc
pushf
in
pop
pop
dec
jbe
add
mov
std
pop
sbb
cs
fadds
ret
pop
jp
sahf
adc
cmp
sbb
stc
aaa
xchg
fstpt
pusha
pusha
push
roll
pop
inc
cli
xchg
lcall
and
and
add
push
jnp
loopnew
mov
dec
push
nop
mov
stos
orl
clc
mov
adcl
adc
out
stos
imul
jg
popa
shrl
xor
push
fistl
xchg
cs
clc
pop
lcall
sub
outsl
ljmp
cmp
xor
dec
inc
fdivl
ds
inc
jnp
shrb
int3
inc
jg
cmp
les
je
sarl
cmc
std
data16
or
cwtl
js
and
popa
push
sahf
jo
cli
rcl
mov
js
test
adc
mov
aaa
mov
cmp
cmp
mov
push
in
sub
jno
mov
cwtl
bound
sub
jecxz
dec
jge
pop
jo
xor
cmc
mov
gs
jge
idivb
cmp
cmp
ss
pop
cltd
push
sahf
push
fninit
mov
imul
mov
cmp
and
fmull
in
xchg
or
push
adc
shr
loop
jge
fst
clc
mov
or
pop
or
test
loop
lahf
and
js
mov
cmp
add
adc
mov
xor
and
test
mov
and
sub
cwtl
lock
out
mov
push
jns
call
push
mov
sub
mov
cmp
in
daa
outsl
aas
shll
enter
cwtl
aaa
push
fldcw
mov
loopne
pop
jge
mov
sbb
cld
rcr
or
mov
repz
pop
cmp
cmp
sbb
shlb
lods
inc
fdivl
sub
mov
fisubrs
add
inc
jnp
push
fildl
cwtl
mov
inc
jge
mov
and
ficoml
pop
xor
lock
xchg
testl
sbb
sub
jp
sub
adc
mov
dec
mov
adc
add
sti
and
loope
ja
dec
in
test
sub
lods
push
sbb
int
frstor
xchg
lret
inc
imull
mov
and
inc
xlat
cmc
and
sub
icebp
or
pop
mov
add
dec
cmpsl
mov
sti
ljmp
adc
arpl
hlt
pop
jg
adc
mov
mov
mov
popa
movb
adc
inc
bound
ds
and
bound
popa
int
fwait
sub
jle
outsl
fistpll
or
jns
enter
lods
adc
pop
lcall
sbb
push
pop
add
sub
inc
xchg
in
fidivrl
adc
pushf
cmc
test
jmp
sbb
jae
fwait
movsl
int
push
jbe
sti
jg
nop
push
add
mov
pop
enter
aaa
mov
imul
lods
enter
and
outsb
or
sbb
gs
sbb
in
cltd
push
dec
gs
into
aam
and
push
sti
shrl
pop
push
push
std
rcrb
and
pop
or
dec
bound
in
daa
outsb
xor
movsl
loopne
and
jne
or
mov
scas
inc
push
lds
xor
cmp
mov
insl
das
inc
adc
sub
pusha
jge
clc
push
add
ret
mov
aam
insb
xchg
imul
dec
test
mov
nop
test
lock
mov
or
mov
scas
inc
push
mov
sub
aam
dec
inc
aaa
mov
shlb
andb
aas
mov
cmp
dec
and
cmpsb
mov
lea
aad
imull
bound
fidivrl
adc
and
sti
pop
jno
sub
out
int3
je
decl
cltd
daa
mov
push
call
hlt
add
ficompl
scas
adc
xchg
jbe
mov
add
adc
sbb
out
mov
add
pop
adc
push
ret
push
cmc
fdivrs
xor
pop
rorl
lahf
push
mov
clc
or
cmp
mov
xor
sbb
out
xchg
push
pusha
pop
ds
jecxz
pop
cmc
outsb
or
out
sub
test
pop
mov
fldl
aas
imul
push
fdivrl
push
and
fadd
fxam
mov
jae
js
add
push
jnp
inc
stos
das
xor
push
js
add
dec
lea
scas
in
xchg
mov
mov
ror
inc
scas
cltd
sahf
mov
sarb
fiadds
push
lahf
loopne
stos
imul
outsb
mov
pop
repnz
out
aas
jle
rclb
sbb
repz
add
data16
sbb
es
in
xor
test
sub
pop
js
adc
ja
data16
or
inc
sbb
or
lret
loopne
jo
push
mov
adc
cli
pop
cmp
adc
xchg
mov
pop
mov
popl
inc
scas
mov
pop
mov
cmp
orb
jno
sbb
inc
sbb
mov
rcll
fists
roll
ja
mov
jg
jp
cmc
dec
adc
aad
fstpt
pop
inc
cmovp
iret
loope
add
sub
jnp
push
loop
aam
or
pop
mov
jae
lods
inc
clc
and
jbe
sti
and
mov
and
fstl
adc
jge
sahf
cmpl
fbld
fcoms
pushl
adc
pusha
push
loopne
mov
xor
pushf
mov
xchg
bnd
mov
fcompl
test
dec
jo
mov
mov
pop
sbb
jg
mov
sti
and
add
stos
flds
arpl
incl
jg
and
lds
shrl
and
xor
push
test
sbb
mov
dec
sbb
daa
jecxz
mov
ret
jno
into
ljmp
inc
and
add
mov
icebp
jbe
sbb
icebp
jecxz
xchg
mov
push
movsl
adc
xchg
aad
push
or
jbe
adc
pop
ffreep
sbb
dec
or
imul
cmp
fmull
ret
mov
add
aas
pop
insl
pop
inc
sub
jmp
aam
faddl
xor
cmpb
cmpl
push
ja
scas
and
mov
fucom
jns
in
sti
test
and
mov
inc
in
stos
jo
inc
pop
or
stos
inc
in
pop
test
es
or
fwait
shll
and
nop
int
icebp
jo
inc
mov
fistpll
outsb
mov
or
jl
rorb
mov
in
aas
xor
insl
xlat
adc
add
or
xchg
icebp
xor
leave
test
movd
inc
shll
std
rorb
mov
fwait
xchg
pushf
cli
out
adc
fdivs
leave
rorl
jmp
loope
pop
and
in
push
pop
dec
jmp
lods
call
push
lods
aas
cmp
cs
stos
jmp
cmp
ss
test
mov
xchg
ret
stos
std
cmp
mov
sti
arpl
xchg
mov
or
cs
mov
cmc
jnp
imul
inc
fwait
ljmp
aad
cmp
scas
jae
sbb
insl
out
loopne
pop
cwtl
pop
enter
inc
pop
mov
jne
mov
les
inc
shrl
sbb
cli
dec
mov
enter
pop
cwtl
std
cmp
jne
inc
outsl
data16
jle
adc
adc
xor
addb
xchg
or
rcrb
out
cld
rclb
sub
lahf
std
xchg
outsb
xchg
mov
xor
xchg
sahf
xchg
mov
adc
and
push
scas
jno
cmp
decb
or
mov
aas
pop
cmp
mov
jg
inc
push
in
sub
pop
pop
jno
pop
dec
push
in
adc
enter
sbb
jl
jbe
stos
adc
mov
xlat
jmp
inc
sub
push
mov
shlb
mov
adc
imul
lret
repz
cmc
and
out
pop
cmp
addb
mov
mov
and
cmpl
ret
add
mov
addl
filds
sub
mov
roll
push
pop
sahf
jb
stc
adc
xchg
mov
fists
loopne
cli
push
push
sub
push
cs
ja
jmp
and
xchg
adc
bound
lret
mov
mov
add
insb
mov
inc
mov
inc
pop
mov
mov
add
or
jbe
filds
add
scas
lret
movsl
add
and
lcall
xchg
jo
push
mov
push
inc
out
dec
cmpsb
shrl
pop
arpl
scas
fwait
rcll
nop
aam
mov
cmp
inc
lods
addl
rolb
pushf
push
jmp
sbb
push
and
cltd
movsl
inc
pop
fsubr
fistpl
ljmp
clc
push
aas
mov
loopne
test
mov
mov
jns
mov
xlat
fcoms
and
inc
lret
fst
jne
mov
cmp
sub
push
js
scas
fstps
outsl
cli
test
repnz
mov
pop
arpl
adc
pop
loopne
je
maskmovq
notl
mov
jmp
sbb
loop
and
hlt
loopne
insl
lods
in
push
out
add
mov
outsl
loopne
sub
xchg
pop
xor
mov
mov
adc
cwtl
mov
pop
dec
aam
mov
push
cmc
pop
mov
fcomi
sbb
or
jno
std
pop
sbb
lods
mov
popf
mov
mov
ljmp
sbb
ror
or
and
adc
lret
icebp
or
les
call
jecxz
mov
add
pop
imul
dec
and
mov
pop
sti
mov
jbe
adc
add
jbe
rcr
pop
pop
stos
or
loopne
aas
jae
cmp
orl
mov
subl
testl
ret
jg
das
std
or
pop
push
xchg
popa
xchg
jle
xor
or
xchg
rep
jne
dec
mov
cmpsl
xchg
gs
ss
push
out
cwtl
mov
xor
xor
jne
inc
in
cwtl
fcoms
test
add
or
loop
fidivrl
sub
cwtl
incl
fistl
sbb
lods
addr16
dec
or
jo
sbb
push
subb
outsb
or
lock
sbb
add
int3
push
lret
add
fcmovu
jmp
adc
pop
ja
ja
adc
add
in
adc
outsb
inc
cld
xor
jg
mov
xchg
xchg
pop
xlat
inc
xchg
int
pusha
xor
fwait
xchg
out
stos
mov
add
cmpsl
aaa
mov
pop
xor
roll
jge
mov
idivl
xor
xchg
loop
inc
pop
adc
sbb
lahf
call
push
add
js
rorl
inc
test
std
mov
sub
call
loop
mov
mov
aam
sarl
mov
adc
dec
cld
cpuid
dec
xchg
jnp
pop
cmc
bound
and
add
lds
inc
int
xor
cltd
jle
stos
inc
arpl
cli
orb
xor
mov
fistpll
pop
sbb
cmp
and
inc
test
scas
lret
cmp
and
ja
jle
or
pop
and
jo
lret
mov
outsl
cmp
or
shl
daa
xor
or
shrb
xor
hlt
stos
mov
mov
in
icebp
gs
cmpsw
scas
cmp
and
pop
cli
aad
notl
dec
test
add
roll
jg
push
mov
nop
aam
fdivrs
test
and
and
movl
roll
or
ret
js
adc
and
pop
stos
int3
pop
fcompl
lods
pop
and
xlat
daa
sbb
push
jg
bound
popf
xchg
pop
lret
sub
aam
cmpsb
or
jp
insb
push
and
jne
in
inc
dec
fwait
inc
sbbb
cmp
jmp
fadds
in
pop
jbe
divb
nop
mov
pop
cmpl
jmp
mov
sbb
push
xorb
push
les
jns
std
out
push
ss
mov
adc
inc
xor
popa
cld
movb
mov
jno
fwait
in
ret
mov
ret
push
pop
es
loope
mov
cld
and
push
mov
mov
je
cmpb
jbe
out
mov
ret
repz
fnsave
std
popa
inc
lods
push
cs
or
add
daa
outsb
pop
push
jae
or
xchg
mov
sahf
mov
outsl
ret
pushf
xor
and
test
push
ret
sbb
icebp
mov
dec
shll
or
in
push
stos
repnz
das
or
pop
xchg
push
ljmp
ja
cmp
inc
loope
xchg
bnd
sub
lea
aam
aas
mov
push
daa
outsb
fwait
mov
pop
mov
mov
xorl
add
jne
adc
clc
sub
jle
inc
sub
inc
adc
push
insl
inc
mov
sbb
mov
in
call
movsb
lods
nop
in
imul
test
loopne
cmp
incl
nop
shll
or
cld
push
dec
dec
adc
pop
or
pop
mov
pop
sbb
sub
dec
stos
inc
loope
fmuls
pop
fisttps
ret
loop
cli
push
sub
out
mov
hlt
mov
dec
add
mov
ljmp
in
and
mov
shlb
or
sub
ljmp
lods
mov
or
adc
cmp
shll
mov
inc
sub
movsb
mov
pop
push
xor
or
lret
xor
push
mov
fsub
sub
pop
out
xor
add
cmp
fisttpl
pop
dec
lea
aas
mov
sub
clc
mov
or
pop
lret
ret
dec
sahf
stos
xchg
mov
sbb
dec
insl
jge
test
jmp
loope
adc
pop
cli
rolb
aaa
xor
pop
hlt
in
push
das
lds
scas
mov
mov
addr16
mov
cwtl
ss
test
int3
cmp
mov
mov
scas
shll
push
xchg
rorl
ds
int
xchg
ss
pop
sti
aad
and
or
sbb
imul
mov
mov
dec
js
cli
fstpt
and
cmpb
push
and
lods
xlat
int
inc
mov
mov
sub
mov
fnstenv
hlt
sbb
mov
dec
sbb
jmp
xchg
add
inc
int3
mov
mov
mov
xchg
bound
iret
lods
lock
cs
mov
push
cmp
fsubrs
dec
xor
xlat
push
enter
arpl
int3
ficoms
hlt
inc
daa
dec
sbb
mov
jg
mov
jecxz
stos
mov
loopne
int3
xor
mov
ror
insl
add
mov
clc
add
jnp
fdiv
adc
in
mov
leave
imul
nop
mov
jge
lds
adc
rorb
into
mov
in
xor
xchg
test
xchg
fidivrs
shrl
mov
mov
mov
mov
clc
lahf
roll
push
lea
or
shll
mov
add
std
add
lret
pop
fnstcw
push
xor
mov
sub
arpl
lock
or
cld
jg
push
popa
push
add
mov
lds
ret
in
and
loope
les
mov
out
and
xor
mov
adc
sub
mov
push
popa
mov
xor
gs
push
push
loop
mov
sub
data16
cmpsl
mov
push
or
xor
imul
ljmp
sub
test
loope
repnz
out
decb
fs
dec
lock
mov
jno
testl
sub
cmpsb
push
movsl
inc
inc
ficomps
jl
testl
adc
fldenv
stc
shl
adc
sahf
or
pop
fnsave
daa
movb
popf
mov
dec
dec
xchg
aas
ja
inc
cmp
insl
aam
mov
mov
xchg
out
test
mov
mov
pop
imul
pop
loope
sbb
fwait
clc
cmp
rorb
mov
mov
cli
sbb
add
jo
enter
ljmp
rolb
push
jmp
lods
dec
lret
or
mov
clc
jl,pn
fwait
mov
ss
add
fnsave
sbb
xchg
jne
mov
xchg
fcmovnbe
jmp
daa
loope
mov
mov
mov
jae
inc
inc
jo
out
mov
arpl
and
lods
dec
loopne
add
sub
push
enter
pop
enter
mov
push
daa
add
aam
push
jle
loopne
mov
and
int3
sub
cltd
adc
add
and
scas
mov
jg
add
inc
xor
mov
movsb
sahf
adcb
pop
fwait
jmp
xor
mov
les
jns
das
fwait
inc
test
popa
inc
cmp
push
mov
in
add
test
mov
mov
frstpm(287
sbb
add
inc
and
xchg
and
and
shlb
in
pop
fcmovne
shr
push
das
popa
xor
push
dec
fstl
insl
sbb
in
das
sub
dec
mov
fiadds
pop
into
je
xchg
pop
xchg
jp
out
mov
mov
ss
icebp
cmpsb
in
test
add
clc
sti
add
test
xor
xor
xor
fsts
add
insl
mov
aaa
xlat
sub
aad
std
mov
push
mov
pop
fsubrs
xor
fst
mov
aaa
inc
mov
popa
sbb
jbe
daa
lahf
cwtl
lds
out
fwait
pusha
adc
inc
sbb
imul
add
cltd
jl
push
jae
jbe
dec
jge
movb
mov
jo
mov
jb
hlt
mov
jno
jg
add
addb
jb
popf
nop
sarb
aas
call
dec
roll
mov
fldl
cmc
adc
add
dec
cs
sbb
jo
mov
dec
push
cmc
fnsave
adc
mov
xchg
lods
mov
dec
jo
negb
scas
lods
xor
lcall
clc
inc
jg
add
pop
cltd
movsl
jge
repnz
fdivs
sub
cmpsb
adc
push
ds
xchg
mov
inc
jo
push
add
aaa
mov
clc
mov
mov
xor
xor
jecxz
cmp
or
xor
pop
jmp
test
cmp
sub
in
and
jl
adc
insb
pusha
sub
sarb
in
lret
shll
ret
pop
div
mov
movsl
rcll
test
xor
mov
pop
sbb
clc
lds
adc
push
adc
std
mov
adc
scas
pop
dec
cs
repnz
sub
ja
or
subb
outsl
call
pop
icebp
js
sbb
inc
pop
xor
icebp
shlb
jb
mov
rcl
inc
loopne
cmpsl
push
rclb
fbstp
cmp
shrl
push
repz
adc
xchg
jno
bound
fstpt
addr16
cmp
dec
xor
dec
dec
or
stos
scas
sub
mov
sbb
adc
push
pop
inc
cmpsb
sub
aaa
cmp
pop
das
je
in
jno
xor
data16
inc
lcall
arpl
insb
outsb
pop
mov
into
mov
out
ds
push
arpl
mov
pop
ficoml
or
and
ret
int3
dec
aam
jbe
push
mov
mov
insl
xchg
idiv
jne
stos
and
inc
dec
sar
loopne
gs
mov
xchg
enter
push
mov
dec
out
jmp
xlat
xorl
cmp
nop
or
xchg
inc
mov
aas
push
ret
pop
je
stos
pusha
cli
push
addr16
sbb
mov
inc
lea
jmp
sbb
cld
sub
rcr
sub
call
cmp
mov
or
mov
xchg
mov
cwtl
jbe
mov
cmc
sbb
pop
outsl
pusha
add
adc
cmpsl
les
mov
enter
pop
sub
fsts
and
testl
movsl
push
sub
stc
add
arpl
ljmp
and
ret
push
dec
cmp
lret
sub
add
ret
stos
adcl
mov
shll
rcl
xchg
xor
and
inc
mov
outsl
scas
int
add
lahf
push
nop
mov
jne
hlt
into
shl
shll
stc
addr16
adc
xor
faddp
daa
ljmp
gs
inc
shll
rorl
jno
aaa
loopne
orb
inc
mov
xchg
das
repnz
sbb
sub
or
and
and
test
or
jo
cld
push
sbb
std
shll
jbe
fcom
clc
out
add
pop
out
add
jnp
inc
pop
push
call
test
xchg
iret
scas
addl
xchg
pop
lock
mulb
add
pop
imul
or
sub
push
xchg
cmpsl
sahf
add
in
leave
mov
clc
jnp
cli
pop
fdivp
lret
lret
push
pop
add
adc
cmp
jmp
mov
add
and
pop
mov
ljmp
add
xchg
dec
sub
pop
xorb
es
mov
jmp
add
cmpsb
cmp
outsl
mov
das
scas
fstl
cwtd
cmp
add
xchg
dec
in
cmp
cmc
push
fimuls
jecxz
push
mov
fnstenv
pop
in
std
in
loopne
cmc
inc
out
js
adc
dec
xchg
sahf
xchg
or
xchg
cmp
sbb
inc
sub
pop
xorb
inc
mov
inc
push
adc
push
jl
orl
out
test
pop
add
mov
mov
ljmp
xor
out
pop
repz
dec
shll
adc
pop
dec
icebp
sbb
push
mov
ja
mov
test
mov
adc
mov
cmp
lret
outsb
xchg
lcall
sub
cmpxchg
test
les
punpckhbw
jle
rclb
pop
ljmp
sub
repnz
push
clc
sbb
iret
out
push
jo
push
push
pop
mov
mov
inc
jecxz
adc
dec
xchg
lods
xchg
fidivl
adc
jmp
mov
jbe
inc
sub
and
push
loope
dec
xchg
xchg
test
iret
add
jnp
cmpsb
fsubr
sbb
push
add
adc
and
loope
idivb
pop
push
lods
lret
mov
loope
add
xchg
mov
mov
xlat
ret
dec
add
ja
pandn
insb
sarl
inc
add
push
fdiv
sbb
lcall
out
jp
clc
out
rcrb
enter
fldt
shlb
dec
jmp
adc
xor
bound
test
into
inc
or
sub
cli
stos
jg
shlb
push
sarb
add
push
ljmp
fwait
push
loopne
test
dec
mov
xor
inc
repz
nop
mov
lock
ljmp
sub
fsubrl
das
cmp
sbb
jnp
js
push
inc
fdivr
shlb
sbb
xchg
pusha
int3
mov
adc
mov
fwait
pop
sbb
dec
add
add
sbb
mov
int3
loop
gs
mov
icebp
and
dec
sub
icebp
xchg
and
jg
stc
aaa
push
mov
xor
call
adc
push
pop
lds
push
push
in
sub
push
les
inc
xor
test
adc
xchg
add
loopne
xchg
xor
daa
push
loope
dec
orl
mov
adc
xor
add
roll
cmp
cmpsb
shlb
mov
add
pop
mov
dec
or
faddl
inc
or
jp
lahf
push
adc
ja
les
mov
sub
jbe
pop
in
xchg
ret
mov
cmp
or
pop
stc
js
aam
dec
dec
xchg
inc
pop
cltd
cmp
mov
cmpb
loopne
aam
adc
roll
jno
movsl
aad
and
mov
adc
pop
out
outsl
sub
aad
lret
nop
xorb
xchg
test
rolb
jae
repnz
mov
jg
sub
mov
xchg
xchg
inc
mov
and
std
test
and
bound
lods
popf
iret
lcall
mov
push
jnp
cmpsb
mov
out
mov
sbb
mov
jmp
cmpsb
mov
fnstenv
sbb
mov
adc
sub
and
lock
rol
jne
push
inc
outsl
fistpll
addb
jae
or
lahf
or
mov
sti
aas
add
xor
pop
xor
pop
mov
sti
and
sbb
pop
and
pop
popa
and
mov
ret
repnz
in
xor
mov
mov
lds
sbb
add
lods
clc
adc
mov
jae
loope
cmp
jo
mov
push
push
push
jo
in
push
and
jno
jne
inc
mov
cmpsb
aas
imul
popa
add
scas
jecxz
aam
ret
pop
sbb
xchg
xchg
clc
inc
idivl
xor
mov
lds
mov
sbb
mov
cmpsl
sbb
ret
dec
aas
sar
dec
nopl
testl
or
aad
inc
jmp
pushf
xlat
icebp
inc
ljmp
jge
and
in
cmpsb
insl
stc
test
mov
mov
push
mov
pop
push
jecxz
and
sub
pusha
fisttpl
pusha
mov
xlat
pop
negb
adc
jnp
push
repz
or
sub
aam
mov
cli
pop
pop
cld
and
mov
mov
inc
mov
inc
jp
adc
fsts
cld
movsl
pop
aad
push
ss
ljmp
mov
mov
sbb
jmp
mov
fdivrl
repz
icebp
push
adc
daa
mov
pop
adc
pop
das
lahf
cmc
inc
mov
lea
loopne
nop
iret
aaa
dec
xor
adc
rol
or
dec
lahf
shlb
lock
cmpsl
loopne
dec
xor
inc
movsb
inc
mov
stos
ss
mov
mov
sub
xchg
mov
icebp
nop
popa
xor
pop
out
test
jns
add
xor
cwtl
and
stos
icebp
stc
inc
inc
mov
add
xor
cmovo
int3
sbb
popl
jnp
jmp
test
mov
jmp
cld
lods
mov
ret
adcb
dec
jl
xchg
aas
push
push
iret
push
repz
inc
adc
in
sbb
inc
fcmovnb
push
and
clc
mov
mov
inc
sbb
cmp
in
jns
js
ret
adc
fiadds
add
sub
adc
jno
pop
out
xchg
cmp
adc
mov
and
sahf
push
mov
pop
sarl
rclb
lods
cli
xchg
mov
fnstsw
mov
sbb
and
jg
dec
mov
add
pop
dec
and
push
add
jnp
cs
sub
and
pop
negl
cmp
jmp
dec
lock
mov
das
add
and
fcmovu
push
pop
mov
arpl
xchg
ret
push
je
fimuls
mov
jmp
push
cli
inc
and
or
pop
dec
repnz
push
ja
sub
cwtl
add
mov
imul
xor
sub
sbb
and
int
ret
or
mov
es
insl
fldl
insl
mov
testl
jl
bound
adc
mov
out
aaa
cmp
cmpsl
stc
xor
jno
insl
movsb
add
dec
ffreep
addr16
jnp
push
adc
jg,pt
sub
movsb
jo
das
dec
mov
movsb
xlat
int3
xchg
sarb
adc
mov
adc
mov
xor
sbb
add
and
daa
lods
test
adc
adc
cmp
jb
daa
loopne
ss
inc
and
cltd
inc
dec
adc
add
push
fcmovnb
ja
cltd
and
push
data16
inc
push
push
push
std
and
pop
sbb
bts
dec
leave
and
sbb
push
das
mov
cmp
fisubs
push
enter
jle
inc
push
sub
mov
pop
mov
sub
inc
sti
hlt
adc
adc
rolb
fcoml
mov
add
sub
adc
xor
adc
cwtl
dec
fwait
sbb
jecxz
sbb
jns
push
xchg
xchg
push
sub
dec
test
ds
adc
outsb
outsl
jno
mov
inc
mov
jnp
xor
and
and
jo
add
cld
ljmp
inc
or
outsl
add
loope
hlt
insb
je
adc
push
push
sbb
ss
mov
mov
inc
lcall
pop
addr16
fldl2e
aam
jne
xor
mov
sahf
cmc
addb
jl
and
outsl
frstor
gs
jne
add
call
pop
daa
mov
ljmp
mov
mov
dec
shr
pop
in
ja
js
xchg
mov
mov
outsl
fadd
test
lret
add
loop
fdivs
in
pop
lock
loope
int
repz
cmp
xchg
call
pop
xor
inc
pop
push
imul
call
inc
cmp
dec
jge
and
xchg
mov
repz
xchg
mov
pop
pop
ss
or
enter
mov
pop
or
fistps
in
xor
int
mov
add
aas
mov
mov
call
fwait
imull
xor
sbb
insb
std
iret
inc
push
jno
loopne
jmp
lds
pop
add
xor
and
fwait
dec
push
test
sbb
pop
hlt
aaa
mov
sbb
cmc
mov
jne
or
inc
imul
call
xchg
sbb
inc
pusha
jg
iret
and
loop
rclb
add
pop
addl
outsb
ja
jle
loopne
sub
adc
and
loope
jl
bound
fwait
mov
and
adc
loopne
es
dec
mov
jno
mov
sbb
outsb
push
mov
mov
or
movsb
pop
xchg
pop
nop
sub
fwait
dec
popa
lret
jmp
les
xor
loope
int
arpl
fwait
sub
xor
cmp
push
and
xor
outsl
mov
mov
xor
cmp
shlb
xchg
cli
fs
adc
mov
cltd
sbb
sub
sahf
sbb
cmp
mov
cli
sbb
push
imul
mov
lods
sub
mov
adc
add
dec
mov
lock
adc
jno
cld
add
jo
and
dec
cmc
jecxz
pop
fcomi
lods
push
xchg
xlat
cli
out
sbb
imul
sub
or
jp
inc
jmp
ljmp
pop
jnp
push
jl
push
inc
lcall
enter
inc
mov
xor
icebp
rcrb
movsl
shr
les
cmp
mov
jmp
cltd
outsb
clc
iret
pop
cmp
mov
push
loopne
lret
jl
xchg
stos
mov
inc
and
pusha
mov
xchg
call
in
test
mov
jl
and
jecxz
arpl
outsb
in
pop
push
add
fldenv
andl
ss
sub
lahf
loope
push
sub
jo
jne
adc
js
ja
mov
mov
insb
jae
sarl
aas
js
lods
das
mov
cs
in
mov
sbb
pop
ljmp
imul
fidivrl
fidivrs
add
dec
sbb
inc
and
fisttpl
pop
rol
xchg
in
jl
cli
mov
adc
mov
ja
out
rorb
jmp
cli
aam
js
lea
icebp
daa
lret
bound
lcall
sub
xchg
or
or
std
or
clts
mov
sbb
pop
ja
fwait
rcl
pop
sysret
fst
in
jo
inc
jmp
std
rcrl
xchg
int3
or
cmp
les
xchg
inc
jg
insl
mov
std
pop
xor
sbb
mov
sub
mov
addl
fistl
cmp
jp
push
inc
jo
enter
push
sub
jnp
cmp
jmp
or
and
sub
jp
lock
gs
cmpsl
mov
sub
imul
std
push
xor
sbb
jle
inc
aaa
jmp
scas
or
pop
scas
js
stos
js
test
insl
mov
shrb
dec
or
sbb
shrb
das
mov
push
hlt
cmc
flds
mov
mov
jl
push
xor
pop
in
call
xor
popa
repnz
or
or
and
xchg
or
mov
neg
mov
insl
or
pop
pop
nop
mov
popf
sub
lea
rolb
or
xchg
mov
and
insb
push
push
aaa
out
mov
jecxz
add
ss
xchg
es
stos
dec
aaa
mov
mov
outsb
dec
adc
out
xchg
pop
mov
pusha
imul
nop
xor
adc
adc
or
fsubr
xchg
int3
or
test
mov
dec
sbb
mov
addl
mov
pop
insb
int
gs
int3
sub
jnp
mov
mov
dec
ret
mov
mov
pop
fnstsw
in
ret
inc
xor
mov
sbb
mov
fsub
xchg
and
and
mov
sbb
loopne
or
ss
inc
xchg
ret
mov
mov
fstpt
or
inc
add
jmp
pushf
rcl
add
subb
in
aas
mov
je
jmp
insl
mov
test
adc
add
adc
dec
pop
rolb
repnz
adc
add
pop
in
je
lsl
ffreep
sbb
xchg
inc
xchg
xchg
outsl
and
sub
in
hlt
int
push
pop
icebp
idivb
movsb
mov
loopne
fisttpl
daa
add
mov
bts
sub
hlt
jecxz
rolb
cmpb
call
arpl
aas
andb
push
rcrb
dec
fists
addr16
pop
or
das
xchg
or
mov
inc
loop
or
mov
lods
inc
pop
mov
push
cld
and
jg
push
outsl
cmp
shr
je
cmp
shl
cmp
pop
fidivrl
adc
xchg
push
gs
notb
push
mov
push
jb
dec
sbb
sbb
sbb
ret
lret
mov
sub
sbb
negb
xor
clc
xor
add
pop
test
das
xor
lods
stos
mov
adc
ret
jne
pop
loope
cltd
movsb
mov
ret
mov
rcrl
lret
jecxz
xor
orb
bound
xor
xorb
sti
or
inc
int
jae
call
imul
lea
sbb
outsb
pushf
mov
xor
aam
push
iret
mov
shll
mov
int
les
mov
mov
test
lcall
pop
mov
dec
or
cmp
fs
fists
sbbl
adc
imul
jecxz
test
sbb
or
rcr
add
imulb
pop
xlat
xchg
loop
mov
cmp
jo
fldenv
inc
inc
fisttpll
sub
inc
imulb
nop
xchg
mov
sbb
pop
jno
xchg
sti
fistpll
vfnmadd231ps
in
add
test
fistpl
pop
and
pop
mov
mov
adc
enter
mov
or
fsubrs
repnz
pop
mov
ret
andb
and
subl
out
inc
mov
push
outsl
cli
add
inc
mov
lcall
and
lods
xor
or
mov
sub
cli
je
dec
pop
in
sbb
mov
ret
jge
sti
enter
std
jg
dec
stc
aaa
sub
iret
adc
repnz
cmp
sbbl
pop
pop
fs
jl
shrl
push
lcall
mul
mov
sbb
out
dec
mov
aas
nop
adc
inc
and
sbb
icebp
les
insl
sbb
loope
or
aaa
ret
int3
xor
and
xlat
jp
sbb
add
adc
xchg
jg
mov
fisttps
std
add
gs
int
xorb
mov
test
push
mov
scas
push
mov
lods
xor
xorl
mov
outsb
std
xchg
fst
mov
inc
in
mov
inc
mov
jmp
push
shll
and
cld
sbb
pop
pop
mov
push
inc
popa
aam
outsl
mov
cmpsb
push
in
cltd
icebp
mov
xchg
pop
in
inc
mov
sub
cmp
incb
fwait
clc
xor
aaa
cmp
jecxz
xchg
xchg
aas
loope
sti
inc
cwtl
pop
js
enter
les
fimull
cmp
sbb
mov
adc
jmp
jae
pop
popa
and
push
into
xor
les
sub
sbb
fdivl
add
rorl
pop
mov
inc
mov
mov
in
imulb
lea
fstpl
mov
inc
jnp
shrl
clc
clc
push
loop
or
pop
sti
inc
dec
lods
add
sbb
loope
lahf
test
ficomps
dec
xchg
outsl
jp
ret
cmp
inc
pop
xchg
or
cli
scas
ja
test
je
mov
imul
lret
aad
orb
lods
mov
sub
je
insb
in
mov
inc
sbb
xchg
fisttps
mov
mov
out
das
test
pop
lret
push
add
fwait
pusha
stos
add
xor
push
lret
addl
cmp
add
notl
push
xchg
and
mov
call
stos
enter
and
push
push
xor
dec
push
adc
jb
lahf
jg
fcompl
mov
pushf
gs
xorl
sbb
mov
into
orl
cmp
rorb
or
adc
push
fcoml
shrl
add
in
test
add
sarl
loopne
or
xor
add
inc
jmp
cmpsb
jns
mov
and
adc
test
subl
fistpl
mov
dec
inc
into
and
jne
inc
push
xchg
inc
and
test
or
mov
sbb
sahf
mov
sub
lret
inc
imul
pushw
rcl
add
inc
add
imul
fidivrl
ret
sub
in
les
insl
add
daa
cmp
inc
out
in
push
jne
cmc
dec
and
rol
ret
inc
mov
std
inc
imul
cld
nop
inc
mov
addl
pushf
mov
cs
mov
mov
sbbl
jae
lods
lods
ljmp
add
push
cmp
fstl
adc
sarl
or
dec
shrl
xchg
and
int3
rorb
test
outsb
add
out
push
fcoms
pop
ret
mov
dec
test
test
frstor
push
mov
loopne
sub
aaa
jl
inc
dec
dec
jle
aaa
jmp
sbb
mov
std
mov
cli
mov
cmp
push
jb
inc
gs
inc
lods
pop
sbb
loopne
adc
loope
or
orl
cwtl
jge
lret
cli
mov
mov
xor
aas
mov
sbb
addb
test
fidivl
out
insl
fstps
popf
dec
xorl
sub
pop
fs
mov
cltd
test
jg
cmp
lock
dec
std
pop
push
mov
int3
cmpb
inc
div
movsl
jbe
xchg
ljmp
pop
mov
loope
bound
mov
mov
adcb
test
inc
xlat
pop
or
or
decb
nop
or
leave
inc
lock
sarb
and
xchg
shrl
aam
xchg
and
imul
aaa
std
stc
or
adc
mov
xchg
jg
inc
imul
push
mov
test
push
mov
sahf
or
dec
je
sbb
xchg
xor
arpl
inc
inc
jmp
je
cmpsl
push
mov
or
push
mov
subl
add
lea
mov
sub
aad
jae
pop
fisttps
jg
push
xchg
push
jp
filds
add
adc
ret
mov
cmp
pushl
inc
das
jno
loopne
sahf
mov
xor
lret
movsb
lock
neg
fwait
popa
push
ljmp
mov
pop
stos
dec
in
mov
cwtl
lds
pop
mov
push
mov
push
xor
adcl
pusha
mov
lock
cmpsl
jecxz
sub
std
mov
jmp
jmp
or
dec
mov
mov
jp
aad
stos
adc
lea
ror
in
inc
adc
imul
or
pop
idivb
es
dec
mov
pop
pop
and
lcall
lock
call
push
jle
xor
and
test
popa
aaa
cmp
mov
out
les
mov
arpl
frstor
in
cmp
movsl
mov
loopne
andnps
add
lea
popf
loopne
add
icebp
jle
sbb
inc
mov
int3
xchg
sbb
lret
ret
sub
outsb
aaa
xchg
inc
pavgw
xor
mov
inc
push
mov
inc
xlat
in
adc
pop
faddp
xadd
aaa
std
pop
pop
push
test
in
into
daa
cmp
movsb
inc
rcll
or
push
or
popf
js
sbb
jbe
sub
ffreep
sti
jne
cmp
sarl
sub
mov
and
add
mov
into
dec
sub
icebp
scas
inc
pop
in
jl
sbb
test
aad
adc
and
jecxz
adc
rol
inc
ljmp
ja
push
pop
insb
adcl
jae
dec
pop
loop
insb
outsl
sub
or
movsl
arpl
inc
mov
inc
stc
sbb
outsl
cld
jge
or
fsubrs
jo
repz
mov
push
add
sub
mov
lret
bound
sbb
mov
xor
int
imul
fcmovnu
test
jne
xchg
pop
lds
fcomps
test
in
fdivl
std
andl
addb
int
cltd
lcall
fmuls
ficoms
insb
rcl
and
repz
divb
cmp
test
ljmp
bound
std
inc
std
mov
mov
sub
dec
or
xor
sti
adc
dec
aas
adc
cmp
hlt
jl,pn
fistl
and
push
std
je
icebp
testb
rcrl
jne
pop
cs
mov
sbb
push
and
in
outsl
nop
push
bound
push
hlt
dec
sub
jg
das
sbb
dec
xor
push
xchg
sbbl
subb
mov
jl
lea
sbb
push
in
lret
lock
cmp
rcrl
loopne
or
mov
inc
sbb
in
inc
pop
arpl
cmp
icebp
mov
mov
dec
test
push
mov
pop
stc
in
dec
lock
movsb
jne
push
mov
sbb
outsl
scas
mov
arpl
dec
call
lahf
add
mov
lret
icebp
scas
test
stos
mov
or
jmp
push
pop
mov
adc
cld
mov
mov
addb
pop
stos
xor
mov
mov
test
repnz
or
mov
shll
and
xchg
ret
clc
cmp
jne
aas
dec
xchg
mov
clc
dec
cmp
dec
xor
fsubrl
pop
and
cmc
ja
sbb
cmp
movsb
movsb
aam
ja
data16
and
mov
sahf
mov
inc
jl
sti
out
or
out
mov
outsl
sti
test
add
and
in
test
push
xor
daa
stos
call
loop
adcl
xchg
fistpl
xchg
in
loope
push
adc
insb
jecxz
pop
xchg
repnz
enter
pusha
xchg
cmp
movsl
mov
sub
mov
out
jno
xchg
clc
xchg
lods
mov
cmp
imul
mov
or
add
cltd
mov
mov
mov
movsb
dec
mov
xchg
repnz
scas
into
inc
pop
mov
jo
roll
push
lea
stos
iret
loope
xor
adc
adc
xchg
inc
and
aad
pop
or
aas
push
test
ss
call
sbb
xchg
stos
stc
stc
mov
lahf
push
push
xor
jle
cmp
loopne
pop
addb
inc
jl
sbb
dec
test
aad
rorl
push
mov
fwait
mov
sti
test
insb
ljmp
xchg
push
jecxz
inc
mov
insl
dec
xor
into
jnp
call
fildll
imul
push
out
lcall
aaa
inc
cmp
pop
cmp
loope
imul
mov
call
adc
pushf
push
sub
dec
dec
push
pop
sbb
push
sbb
bound
cmp
mov
call
sub
push
sti
add
stos
fdivl
mov
mov
jno
dec
and
pusha
add
or
mov
push
pop
jno
fneni(8087
or
mov
arpl
fwait
and
mov
add
add
mov
aas
mov
pushf
jns
in
mov
repz
pop
xor
mov
and
js
xorb
jb
push
push
and
xor
pop
xor
push
sub
and
orb
mov
in
adc
nop
push
scas
imul
sbb
outsl
inc
or
enter
sub
jg
xchg
gs
pop
cmpl
mov
cwtl
es
push
mov
adc
in
movsl
ja
loopne
mov
sub
pop
mov
in
adc
fadd
scas
clc
xchg
movsl
dec
clc
sahf
pop
cmp
mov
add
lods
popf
pop
outsl
mov
jmp
repz
dec
jb
mov
cli
int
loop
jb
xor
inc
xchg
jecxz
rolb
ds
aam
shlb
aas
xchg
inc
fcmovbe
pop
cmc
push
adc
mov
jmp
in
push
and
scas
push
test
lods
inc
fsubl
fiaddl
mov
test
in
in
fmull
ljmp
push
dec
mov
lock
xchg
test
cltd
dec
stos
aas
ljmp
cmp
mov
fdivs
push
cmp
filds
in
mov
mov
push
cmpsl
sbb
jg
inc
out
fldt
icebp
dec
and
adc
push
ja
lds
test
adc
xor
push
pop
mov
test
das
mov
pop
add
das
out
sbb
sub
movsl
outsl
jl
out
push
ss
dec
push
or
sub
push
adc
cmpsl
cmp
imul
mov
jae
ror
clc
fcom
icebp
xlat
pop
stos
leave
inc
jns
stc
pop
cmp
adc
shlb
repz
mov
lods
sbb
cmp
push
addb
push
stc
mov
test
cltd
stc
xchg
popa
cmp
jne
mov
sahf
mov
inc
js
arpl
pop
adc
or
xor
inc
cmp
in
cmp
pop
loopne
sbb
sbb
jb
sbb
jae
mov
cmpsb
int3
lcall
aad
cld
cmpsb
repnz
inc
loop
stos
fistpll
pushf
xchg
into
mov
or
ds
mov
sbb
pop
ja
mov
sub
pop
push
cmpsl
scas
in
call
inc
push
mov
jl
fwait
ja
es
inc
stc
test
outsb
cmp
rcl
rorl
loope
outsl
cmc
push
xchg
adc
or
sbb
mov
ds
scas
icebp
addl
mov
adc
inc
add
cmc
sbb
repnz
popa
and
jne
pop
ja
xchg
mov
cmp
es
jbe
or
mov
mov
inc
insl
std
int3
pop
ficompl
arpl
sti
sub
mov
ljmp
pop
and
jb
jge
adc
mov
std
pushf
in
xchg
mov
jg
lock
mov
ds
sbb
pop
lods
mov
test
dec
adc
push
and
loopne
out
inc
lods
pop
mov
dec
xchg
stos
cmp
bound
addb
cmp
arpl
add
scas
repnz
imul
decl
jne
and
xor
push
push
pop
or
push
pop
ret
xor
aaa
jae
daa
mov
sub
add
cmp
pop
ss
and
clc
inc
jle
inc
fdivs
sbb
push
cmp
daa
popa
call
test
mov
scas
pop
data16
add
xor
cli
xchg
pop
fstps
or
sub
ljmp
sbb
cmp
mov
int3
push
inc
mov
sub
cltd
jnp
sbb
adc
mov
in
and
nop
pop
cwtl
ret
loopne
ja
cmp
jle
cmp
ss
orl
xchg
mov
sbb
shl
or
pop
sahf
xchg
cmc
or
fidivrl
and
aam
cmp
in
fnsetpm(287
xor
rcl
fs
shl
das
xchg
ljmp
outsb
cld
rcrl
call
fisubl
lods
fisubrs
pop
inc
xor
and
decl
pop
cmp
pop
dec
inc
into
ror
xchg
lods
movsb
cmp
mov
xor
mov
mov
iret
testb
xor
pop
adc
jl
and
add
loope
pop
add
aas
insb
icebp
scas
or
mov
xchg
push
dec
inc
mov
push
loopne
or
mov
jecxz
in
cmp
or
mov
clc
outsl
fadd
pop
aas
inc
stos
inc
les
pop
mov
and
mov
push
call
mov
jno
fnstcw
dec
and
and
movsb
test
mov
movsl
push
inc
ret
icebp
icebp
idivl
jecxz
mov
sub
pop
sti
cmp
daa
mov
or
sbb
int
fcmovnbe
xlat
or
sbb
aas
jns
adc
pop
lahf
popa
cmp
outsb
mov
cmpsb
add
add
mov
popf
ljmp
aas
push
dec
jecxz
test
cmc
and
nop
jno
mov
aaa
mov
ljmp
adc
xchg
negl
cli
ret
rorl
int3
pop
mov
push
xchg
or
add
aas
out
dec
icebp
out
or
and
dec
jge
popf
inc
jne
jecxz
dec
mov
cmc
jns
mov
loopne
js
jp
add
call
adc
and
les
jl
not
clc
cmp
pop
sbb
loopne
mov
sbb
mov
lods
xor
push
std
jno
negb
or
pop
outsb
dec
outsl
mov
shll
jg
cmp
jp
inc
inc
je
pop
test
pop
pushf
push
es
dec
pop
sub
mov
call
aas
mov
xchg
shll
outsl
stos
xchg
sbbl
pop
mov
fstpt
subb
add
bound
sub
test
pushf
int
fdivs
dec
jp
cmp
or
jl
mov
lahf
jmp
popa
mov
lcall
scas
mov
jae
pop
inc
das
dec
jns
pop
or
or
popf
jne
inc
mov
lcall
leave
cmp
add
movsl
mov
inc
pop
adc
sbb
out
pop
sbb
push
sub
sub
lods
daa
dec
sub
add
xlat
sahf
jecxz
fsubr
sub
fdivr
out
pop
ljmp
push
jb
bound
out
loop
mov
inc
or
pop
test
repz
add
fs
adc
cmp
xchg
shl
arpl
aad
sahf
jg
insl
into
cmc
mov
inc
into
xchg
xchg
mov
clc
test
push
aad
ja
mov
jbe
sbb
mov
scas
mov
add
je
jnp
bound
jo
inc
scas
dec
mov
test
out
cmp
xor
mov
and
jmp
dec
cltd
leave
mov
push
xor
leave
popf
xchg
mov
rolb
addr16
inc
sbb
jl
pop
add
pop
and
mov
shll
sbb
mov
mov
adc
mov
and
ds
pop
cld
pop
mov
test
and
mov
cwtl
and
in
dec
xchg
sub
dec
jne
mov
push
cld
iret
fisubs
cmpl
mov
das
or
inc
mov
mov
mov
xchg
into
test
push
js
mov
jnp
ret
cmp
addb
outsl
push
xor
fcomip
les
push
aad
cmp
out
fwait
insb
aam
jp
das
in
xor
dec
adc
popa
addr16
push
popa
adc
mov
test
xchg
pop
ret
rcrb
sbb
push
aam
jo,pt
shll
pop
dec
cmp
inc
cmc
cmpsl
xchg
sbb
insb
mov
jle
sbb
xchg
icebp
inc
inc
add
jo
jnp
jmp
jecxz
inc
into
mov
in
and
sub
ficoml
rol
and
sbb
dec
push
ja
repnz
and
mov
stc
lds
jg
mov
inc
push
mov
mov
cmp
test
clc
push
outsb
cmp
sbb
sbb
dec
out
fimuls
push
into
loop
test
adc
pop
cmp
hlt
mov
ljmp
jnp
js
push
xor
call
sub
mov
or
cli
rolb
gs
out
test
shlb
mov
dec
pop
cmp
mov
dec
nop
outsl
sbbl
gs
fnstenv
jno
test
sub
pushl
outsl
mov
jecxz
and
sbb
xchg
inc
push
in
jae
jbe
pop
jp
and
test
mov
inc
and
test
mov
mov
cmp
ja
inc
jnp
sbb
orb
jmp
push
mov
out
mov
or
adc
sbb
sub
fldcw
adc
lea
hlt
sbb
lods
ljmp
in
mov
fwait
mov
orl
mov
add
sbb
push
mov
stos
call
push
xchg
sub
dec
pusha
inc
cs
clc
pop
adc
xor
xlat
xchg
ljmp
ret
cli
testb
cs
pop
sub
adc
dec
cld
jo
cltd
orl
pop
clc
push
pop
mov
sbb
pop
mov
aas
test
mov
aas
push
jbe
scas
addr16
inc
data16
imul
dec
lds
inc
mov
loopne
mov
or
dec
dec
push
call
js
push
shrb
or
xchg
xchg
jb
jl
cltd
das
mov
insb
scas
cmp
cmc
pop
mov
imul
mov
lock
test
nop
icebp
xchg
inc
clc
cmc
adc
dec
jecxz
xchg
pop
js
loopne
xor
in
iret
insl
dec
xchg
ret
mov
das
sbb
daa
insb
sbbb
cmp
mov
cld
shll
out
test
lock
pop
aas
in
jp
adc
adc
mov
cld
adc
daa
pusha
add
dec
loope,pn
and
cmp
daa
mov
mov
mov
imul
mov
fisubrl
xor
jl
mov
popa
jae
cmpsl
lods
or
and
pop
pop
push
std
fstpt
sub
xor
lock
je
cltd
mov
aam
es
and
imul
outsb
sbb
mov
dec
enter
pop
popf
ss
pushf
iret
push
mov
mov
sbbb
mov
mov
dec
mov
and
std
in
jbe
or
stos
cmp
xor
inc
pop
enter
lock
xchg
add
pop
mov
stos
into
push
arpl
jbe
mov
sbb
push
jno
mov
adc
sub
and
pop
mov
lret
jno
dec
shrb
call
mov
and
mov
fadds
push
icebp
movsl
cmc
sbb
push
fwait
push
dec
adc
pop
js
rcll
cmp
sub
adc
mov
fs
fstps
adc
fldt
leave
sbb
in
loope
test
out
xor
out
adc
mov
mov
mov
push
or
es
push
das
xlat
test
mov
ds
mov
push
xchg
or
pusha
mov
icebp
testl
xor
out
add
adc
push
push
call
out
jmp
sbb
jg
sbb
dec
inc
es
dec
inc
mov
mov
mov
shlb
outsb
mov
jne
mov
and
in
enter
pop
add
decl
push
imul
xchg
out
add
loope
sub
cltd
sbb
inc
adc
leave
add
popf
loope
divb
enter
pushf
icebp
mov
pop
pop
popf
arpl
js
insl
adc
popa
ret
adc
adc
test
lahf
popa
pop
push
jns
inc
addb
adc
pop
insb
je
inc
push
and
pop
jmp
adc
sub
nop
arpl
cli
outsl
clc
ret
cmpsb
jl
xchg
adc
vpunpckldq
adc
pop
mov
and
push
sbb
jns
mov
xchg
add
enter
and
aam
cmp
pop
or
and
push
xchg
test
out
cltd
es
icebp
scas
cmp
lds
mov
adc
xchg
fidivs
out
loop
inc
pop
mov
cwtl
pop
sarl
and
sbb
repnz
xchg
cmp
mov
inc
cwtl
sub
hlt
jno
pop
jns
movsb
push
mov
lods
repz
or
fs
lock
adc
add
loop
out
lret
mov
test
sub
pop
jg
in
xchg
in
adc
jg
cmpsb
movsb
out
mov
lret
mov
cld
out
or
mov
test
inc
ret
ret
loop
outsb
xor
test
pusha
cmp
outsb
jl
imul
lcall
xchg
mov
push
shr
mov
mov
cmpsl
ds
dec
das
inc
push
into
outsl
sub
sub
push
fdivr
imul
loopne
and
mov
icebp
enter
decl
mov
adc
pop
inc
ljmp
jae
adc
xor
sbb
dec
jns
push
add
adc
add
mov
sub
cwtl
lcall
test
out
mov
ljmp
mov
add
cmp
fmuls
fcoms
pop
and
add
mov
and
sbb
xchg
lea
mov
jbe
push
sti
jb
cmpsb
daa
insl
pop
call
ss
andb
pop
dec
outsl
aaa
mov
mov
in
daa
or
aad
jb
lock
push
and
inc
push
stos
push
mov
xchg
sbb
push
andb
xor
pop
repnz
jne
ljmp
sbb
pop
dec
jnp
daa
jp
or
cltd
add
loope
or
je
jne
adc
jmp
inc
fistps
mov
xchg
jno
daa
sub
fwait
call
in
loopne
sub
mov
cmc
mov
out
pop
call
push
fnstenv
fidivrl
nop
iret
inc
aaa
adc
and
inc
jmp
add
push
adc
ja
or
or
dec
mov
or
and
or
cmp
cmpsb
mov
ret
sub
loop
xor
add
add
jmp
mov
lahf
loopne,pt
jnp
xorb
sub
mov
hlt
cmc
xchg
inc
in
pop
inc
sub
punpckhbw
fisubs
lods
decl
jo
sub
mov
mov
push
mov
mov
sbb
mov
add
push
push
imul
xlat
jbe
and
cltd
and
movsl
xor
pushf
xchg
pop
adc
insb
mov
xchg
and
add
add
dec
nop
jno
insl
nop
xchg
lds
jmp
clc
push
cmpsb
test
ja
xor
and
mov
out
sbb
fistpl
jmp
jno
push
int
decl
aam
push
push
movsl
cmpsb
sbb
andb
jecxz
push
push
gs
es
push
stos
hlt
arpl
and
cmp
add
orl
jp
mov
mov
push
enter
xchg
subb
pusha
sbb
stos
addl
addl
pop
and
aam
xlat
adc
xor
shrl
je
pop
imul
loopne
mov
scas
mov
pop
xchg
pusha
sbb
stc
add
push
movsb
es
aaa
xchg
popa
mov
repnz
jg
loope
sbb
insb
aad
loopne
pusha
adc
lds
lcall
jl
jmp
mov
jb
scas
aaa
icebp
nop
dec
jl
pop
mov
cmpl
out
sub
test
testb
jo
jl
inc
mov
orb
or
out
cmp
loope
cltd
add
and
sbb
lcall
sub
outsl
push
push
data16
sbb
mov
mov
xor
lret
jns
loopnew
add
pop
shll
jle
cwtl
test
or
cmp
add
std
xchg
add
inc
cld
push
jno
ret
sbb
loopne
push
adc
pop
rcrl
fs
and
add
mov
out
into
sub
inc
decl
loope
fisttpll
je
test
out
push
andl
es
add
jge
les
rol
mov
jno
enter
cmp
xbegin
jmp
rol
mov
icebp
call
sbb
inc
pop
testl
mov
pop
or
cmc
aaa
jge
cs
enter
das
push
push
and
jae
dec
push
ret
outsb
lods
push
mov
movsb
rcll
pop
mov
fimuls
stos
push
popf
test
xchg
or
push
popa
mov
dec
ljmp
and
iret
mov
pop
stos
jbe
in
decb
sub
std
pop
dec
lcall
ljmp
ds
cmp
push
pop
cs
pop
les
jbe
jne
subb
mov
push
and
lret
jg
or
rcl
adc
xchg
mov
inc
jbe
dec
xchg
mov
das
inc
mov
rcrb
pop
mov
mov
sbb
sbb
rcr
push
mov
rcl
jl
and
divb
jmp
jo
lahf
lock
fcomi
movsb
int3
and
xlat
arpl
lods
es
icebp
sbb
je
sub
and
pop
mov
add
ret
outsb
xchg
loopne
dec
cmpsb
pushf
pop
mov
push
mov
ja
cmpsl
iret
adc
cmpsl
mov
jbe
ss
incb
loopne
fsubl
das
push
aaa
cmp
bound
jne
orl
push
scas
xchg
adc
jmp
push
faddp
std
aam
popa
iret
push
enter
pushf
push
outsb
pop
aaa
sbb
sbb
fiadds
xor
cld
ljmp
loop
mov
test
xor
shl
loope
stos
iret
jns
data16
icebp
pop
push
fwait
pushf
test
jae
push
das
add
fnsave
mov
xchg
adc
xchg
arpl
int3
or
mov
mull
sbb
mov
and
stos
inc
clc
pop
adc
mov
sahf
shl
movsl
inc
xor
rorb
mov
adc
aam
nop
roll
ljmp
mov
mov
mov
inc
mov
pop
outsl
lcall
sbb
mov
add
push
mov
out
sub
loop
outsb
test
mov
dec
push
mov
mov
rcr
mov
sub
fstp
dec
push
lret
pop
inc
fs
inc
jecxz
fistpl
sub
mov
lahf
fistpll
dec
rcll
fdivs
cld
and
mov
lahf
push
std
lock
add
cli
jg
lds
lcall
sub
testb
mov
jae
mov
sahf
lea
xchg
imul
into
jl
mov
xor
andb
sub
adc
out
mov
jo
inc
inc
mov
bndldx
inc
mov
adc
jmp
stos
std
pop
aad
wbinvd
mov
pop
cmp
push
dec
and
jmp
orl
test
inc
inc
inc
push
daa
ret
lods
nop
arpl
push
and
add
jb
add
js
sbb
je
outsl
adc
das
lock
rclb
sbb
jno
or
lret
mov
pop
cwtl
insl
fiaddl
test
mov
pop
or
jmp
sbbb
dec
jg
lcall
xchg
decb
xor
mov
addb
inc
push
adc
std
dec
adc
das
ljmp
mov
xor
jbe
push
sbb
xchg
sbb
fcomip
push
add
mov
or
inc
jp
pop
cmp
jo
stos
loopne
popa
loope
pop
loopne
div
xchg
fisttpll
jbe
call
or
loope
loop
fcomip
mov
repz
xor
movsb
mov
add
sti
push
outsl
fcomip
push
outsl
sbb
ficompl
hlt
mov
jnp
imul
adc
add
std
push
popa
jmp
mov
or
fsub
insl
sbbb
dec
push
rorl
inc
mov
mov
test
add
cmp
test
fwait
or
cwtl
lock
or
and
prefetcht2
loopne
test
xor
fcomip
mov
imul
jle
or
jge
xlat
push
inc
bound
mov
jbe
fsubrl
inc
cs
shlb
sbb
pop
mov
jno
loope
cmc
std
insl
mov
mov
popa
ret
pop
stc
ljmp
or
and
xor
or
xor
push
rorb
es
pop
clc
cs
lret
mov
adc
bound
cmpsb
xor
and
sub
in
or
bnd
cli
in
mov
mov
mov
sbb
sbb
xchg
lcall
outsl
shrl
mov
and
sub
inc
popa
jg
fisttpl
xor
lea
inc
jo
icebp
rorb
es
adc
and
insb
sbb
jle
repz
xlat
movsl
clc
lods
stos
jno
movsl
cli
inc
je
mov
jl
mov
pop
cmc
jo
adc
cmp
les
call
mull
xchg
push
mov
or
mov
xchg
and
pop
adc
dec
jg
int
js
inc
sub
mov
lahf
outsb
cmp
sbb
or
fldcw
push
dec
sub
popa
or
cwtl
mov
cmp
inc
pop
test
pop
mov
jmp
lock
andl
adc
incl
mov
pop
fldcw
outsb
in
sahf
pop
sub
xlat
or
xor
clc
cmp
lret
addr16
pop
ret
lods
xlat
inc
jecxz
mov
sbb
mov
sar
cmp
inc
jo
sbb
and
adc
shl
mov
jne
test
fcmovnbe
pop
rol
push
lds
fwait
popf
mov
loope
jl
fadd
sbb
nop
leave
jno
cmpsl
jmp
jg
sbb
push
aaa
pop
cli
cmp
xchg
rcll
and
rcl
stos
mov
aaa
lds
xlat
cmpsl
or
inc
loop
jns
add
fcmovb
outsl
mov
cmpsl
and
xchg
ja
imul
xor
cmpl
mov
jno
ds
inc
popl
mov
shlb
cmp
xor
jl
aas
sbb
xor
push
dec
mov
or
movsl
pop
scas
push
add
push
aaa
hlt
mov
int3
les
mov
pop
adc
or
ljmp
fcmovb
movsl
cmc
sti
dec
lret
ret
cmc
ret
mov
lret
pop
mov
push
cmpsb
imulb
test
add
cmp
push
cmp
xchg
sbb
jecxz
lods
and
mov
pop
pop
movsl
arpl
push
inc
test
or
data16
sti
repnz
and
mov
out
shrb
stos
cmp
dec
inc
and
inc
add
pop
xchg
dec
mov
incb
mov
imul
push
dec
sahf
loope
mov
push
mov
add
cmpsb
call
jnp
adcb
dec
adc
sub
jae
out
test
aad
inc
outsb
mov
mov
push
jns
or
mov
xchg
sarb
outsl
cmovo
jle
jg
mov
add
divl
and
fstl
push
sub
sti
dec
push
mov
push
jge
test
stos
dec
mov
and
xchg
insl
cmp
dec
fdivp
mov
push
mov
push
lret
xor
cmc
jecxz
lock
inc
jmp
or
in
pop
xchg
loope
lahf
stos
out
cmc
add
cmc
mov
mov
sub
cmp
in
dec
xchg
fisubrl
push
add
es
ja
xchg
fs
add
pop
pushf
add
cmp
inc
clc
loope
mov
lcall
mov
mov
daa
in
lock
xor
fidivs
or
add
and
adc
cltd
in
mov
adc
sti
pop
outsb
arpl
lret
sub
leave
cmp
lock
mov
test
cld
call
test
subl
cwtl
scas
pop
adcl
ret
mov
dec
addl
jge
xchg
dec
shll
push
stos
das
pop
andb
cli
pop
jecxz
push
inc
adc
and
lret
int3
and
push
imul
lahf
jo
mov
cmp
inc
push
leave
xchg
or
mov
jmp
adc
adc
call
ljmp
push
in
xor
arpl
cmp
fidivl
jmp
into
sbb
sarl
lcall
inc
xor
xchg
adc
mov
fmuls
sub
add
test
xor
mov
push
jb
add
inc
mov
cmp
mov
jnp
mov
or
or
adc
sub
test
dec
mov
mov
les
inc
dec
push
inc
mov
mov
add
mov
and
push
loop
lds
push
push
rep
xor
mov
push
loope
sahf
enter
and
mov
dec
mov
fldl
inc
call
sbb
icebp
xor
leave
xchg
or
inc
jns
push
pop
sbb
mov
jae
sbb
adc
pop
mov
push
dec
push
push
sbb
dec
sub
neg
cmp
jne
xor
test
arpl
jno
push
inc
mov
and
push
xor
adc
push
cld
push
adc
or
in
and
fsubr
addr16
pop
jns
mov
inc
pop
add
loopne
and
xchg
out
int
pop
insb
inc
push
pop
dec
mov
mov
xor
inc
mov
enter
xchg
fsts
jecxz
xor
push
or
inc
incb
les
mov
lret
push
and
pushf
int3
mov
inc
call
pop
cld
fdivrs
clc
test
rolb
or
pop
in
mov
fldcw
jno
add
add
push
push
mov
jle
mov
inc
fs
sbb
idivb
rolb
int3
adc
cltd
imul
fiadds
mov
sub
fsubr
or
and
mov
cld
adc
or
adc
sarl
aam
test
xor
das
hlt
shrb
cmp
test
sti
nop
les
inc
add
shlb
imul
add
dec
and
mov
xchg
add
loope
rorl
jl
and
or
jmp
push
daa
adc
jno
jo
ja
addr16
andb
or
cmc
fsubr
je
hlt
push
jno
push
icebp
push
push
mov
mov
pop
push
sub
cld
sbb
cli
and
cmp
lock
testb
cmpsl
test
inc
das
imul
dec
icebp
lods
loop
cs
xlat
les
out
and
pop
mov
outsl
dec
fnstenv
xchg
jns
scas
sbb
or
sti
mov
xchg
fdivrp
mov
inc
cmp
aaa
cmp
lock
js
movsb
push
popa
ds
fcoml
call
and
rcrb
mov
arpl
int3
int3
add
mov
js
cmpsb
call
in
adc
push
sub
mov
mov
cld
addr16
sar
sahf
xor
xor
in
fldt
sbb
add
xchg
adc
or
mov
fst
je
lock
pop
xchg
or
ficompl
mov
int
das
cld
lcall
cmovle
out
sub
push
mov
outsl
sahf
push
lds
or
mov
rolb
push
sbb
aam
mull
and
add
mov
xchg
sub
push
subl
push
ret
loop
and
add
fcmovnb
int
pop
out
fwait
aas
lcall
nop
dec
test
pop
fimuls
inc
and
mov
pop
sti
push
mov
aaa
jl
sbb
into
in
outsb
loope
scas
dec
adc
movl
mov
push
adc
dec
sbb
push
sbb
pushf
jmp
sub
roll
dec
pop
fisttpl
push
add
out
and
mov
mov
mov
cmpb
in
repnz
mov
clc
jnp
dec
pop
fists
fstl
inc
mov
jne
inc
mov
ds
add
adc
aam
pop
sub
jle
sahf
xchg
fcmovnu
push
ret
inc
sbb
xlat
pop
and
lds
sti
rcrb
mov
jae
add
mov
out
fistpl
adc
sbb
xchg
out
and
test
sbb
xor
mov
and
cmpsb
out
nop
in
sbb
test
jg
stc
test
adc
addl
repnz
inc
or
mov
sub
pop
jnp
in
out
ficoms
xchg
push
mov
repz
push
mov
mov
fbld
mov
incl
add
sub
mov
mov
mov
les
dec
test
repnz
mov
xor
and
sahf
loope
push
pop
sub
outsl
sub
push
cltd
dec
push
in
jg
add
pop
incl
add
inc
mov
test
push
cmp
pushf
push
insb
outsl
mov
lds
xchg
mov
sub
add
scas
cmp
mov
bound
div
sahf
xor
ljmp
mov
jae
test
push
rorb
loope
cmp
or
jb
cmpb
jge
loope
mov
mov
xchg
sbb
sub
mov
adc
aam
popa
jle
imul
pop
jo
xor
aas
cmp
or
mov
stos
xor
dec
jns
push
loope
jp
sbb
push
das
mov
push
jge
insb
or
push
jbe
mov
lcall
movsl
movsl
xchg
push
cmc
jge
fnstsw
or
cmp
ljmp
ret
movsb
xchg
push
aas
lret
pop
sahf
fsubr
test
push
inc
push
orl
outsl
std
adc
gs
push
testl
xchg
mov
in
cmp
push
jp
and
sbb
loop
push
test
mov
or
mov
jnp
jg
pushf
sbb
cmp
lret
cmpsb
bound
push
push
mov
pop
sub
xchg
pop
hlt
divb
incb
cli
xor
lcall
mov
push
mov
or
xor
adc
inc
jecxz
scas
scas
ret
sub
cmpsb
les
pop
mov
imul
mov
mov
in
addb
sarb
pop
mov
shlb
sub
out
sub
scas
js
test
ror
dec
imul
adc
dec
adc
cmp
mov
loope
pop
mov
jp
sub
cmc
dec
cs
and
aad
imul
test
movsb
push
out
outsl
incl
inc
sub
xlat
imul
mov
fldt
cmp
insb
push
sub
into
dec
lea
shlb
xor
loopne
aam
push
cmp
fdivp
repnz
ss
ret
jo
daa
and
mov
jmp
int
add
movswl
stc
popa
loopne
sbb
sbb
test
sbb
pop
pop
cmp
dec
scas
pusha
fisubrs
dec
aaa
adc
push
lods
lcall
pop
xor
inc
jge
jo
ja
cmpsl
mov
cld
mov
sub
fisttpll
or
jne
out
loopne
loope
out
aam
push
cmc
into
fists
ss
sub
pop
cld
sbb
jmp
cld
add
jl
ljmp
push
hlt
aaa
mov
std
adc
std
mov
std
call
scas
lods
in
sub
fstps
xor
inc
mov
dec
sbb
lahf
lea
iret
sti
hlt
pop
inc
mov
dec
add
push
pop
dec
adc
sub
push
and
xlat
fs
mov
sbb
mov
mov
jno
fsubp
xor
add
js
ret
mov
mov
add
cmpsl
push
cmc
mov
iret
idivl
adc
lret
sahf
xorb
ja
pop
or
dec
sarl
in
inc
std
cmpsw
sub
rcrl
das
cld
ret
mov
scas
sbb
orb
jmp
sub
test
ret
cmp
mov
xchg
insb
and
or
jg
ljmp
cs
js
imul
ret
addb
or
push
sub
shrl
push
mov
cmp
out
push
pusha
fldenv
f2xm1
inc
push
cmpsb
cmp
lods
push
or
cmpsl
out
imul
cwtl
iret
rorb
inc
and
jg
arpl
xor
mov
js
xchg
push
movsb
and
test
mov
and
movsb
fs
inc
jns
loopne
add
fadd
pop
add
divl
jle
decl
in
jmp
ja
dec
sub
add
icebp
jns
sub
push
push
adc
js
test
popa
mov
xchg
and
pop
in
mov
sub
mov
inc
mov
pop
stc
push
xchg
add
mov
mov
rorb
ljmp
and
cli
cvtps2pd
push
mov
test
loope
aad
adc
sbb
or
les
cmp
pop
clc
xchg
or
js
das
out
xor
in
mov
lret
or
pop
shlb
pop
jp
cmp
mov
dec
fistpll
aaa
sub
lock
dec
mov
inc
xchg
xor
ja
test
daa
mov
cld
fs
or
loope
jle
loope
outsl
inc
push
adc
and
add
ret
mov
jp
mov
fisttps
gs
or
scas
loope
stos
xor
popf
add
mov
mov
mov
outsb
push
xor
iret
arpl
outsb
aam
das
xor
mov
fisubs
xor
sbb
ficoms
push
add
dec
push
jmp
cmp
andb
sub
push
inc
xor
sbbl
rol
insl
dec
int
out
rolw
mov
scas
add
jg
ljmp
insl
jo
aaa
scas
test
add
xlat
hlt
fistps
xor
loop
stc
mov
ret
pusha
leave
fcomp
push
cmp
rcr
mov
mov
fsts
sbb
test
sub
xchg
and
and
push
xchg
pop
push
test
adc
xor
fcomps
fdivs
ja
inc
fiaddl
sbb
bound
add
mov
cmp
roll
pop
test
jp
es
push
call
xchg
testb
scas
andb
paddw
dec
xorb
gs
push
loop
cmp
arpl
andb
jbe
repz
xchg
or
push
or
mov
cld
and
insl
inc
scas
sbb
pop
jmp
mov
adc
ficoms
push
cpuid
adc
inc
enter
push
ja
add
push
sti
lea
mov
call
jl
adc
inc
das
jge
jp
pushl
mov
loope
test
and
sbb
sarl
or
xchg
adc
stos
aam
ljmp
mov
cmp
cmp
nop
call
push
mov
sub
or
or
adc
pop
pop
inc
mov
in
outsl
cmp
icebp
cmp
fdivrl
stc
pop
aas
mov
adc
sbb
sbb
ja
ljmp
cmp
and
pop
shlb
popa
sub
push
push
adc
or
mov
mov
inc
cmpsl
jne
sbb
out
adc
mov
scas
jle
jbe
push
xor
jl
push
roll
xchg
scas
pusha
rcrb
into
outsl
std
pop
lea
test
mov
icebp
or
les
mov
jne
popf
rcrl
sub
out
cli
push
sub
mov
es
and
and
fildl
es
stc
push
dec
dec
test
mov
push
ja
hlt
jmp
mov
out
xchg
test
lods
cmc
mov
mov
addb
in
ret
adc
mov
test
push
cmp
loope
or
idivl
lea
push
stc
leave
adc
mov
outsl
mov
fimull
je
scas
iret
mov
or
push
or
testb
sub
fcom
mov
mov
adc
call
xchg
cld
push
test
mov
vcvttss2si
and
in
cmp
sahf
lods
ds
lds
inc
icebp
lret
dec
dec
push
rcrb
jnp
clc
jecxz
add
std
inc
cli
movsl
sbb
xchg
mov
mull
adc
push
subb
repz
or
ja
stos
jo
jmp
loope
xor
ss
cmpsb
fisttpl
in
jne
out
or
pop
jne
jo
sub
leave
mov
dec
inc
cmc
or
or
sub
pusha
les
xor
adc
adc
in
in
subb
mov
mov
push
cmc
pop
addr16
sub
mov
dec
and
popf
clc
lds
clc
dec
and
mov
fwait
mov
jb
bnd
lahf
adc
outsb
cli
push
lock
mov
iret
pop
and
mov
cmp
mov
mov
or
add
fsubr
stos
or
xor
pop
sub
jp
sub
pop
sub
in
in
add
fldt
iret
xchg
add
and
scas
test
test
push
clc
jle
and
push
test
fmull
mov
cmc
add
mov
push
insl
cs
out
das
int
jg
loopne
dec
jns,pt
aad
cmp
jmp
pop
pop
and
int3
sbb
jp
pop
xchg
js
cmp
mov
pusha
sub
xor
or
hlt
int
aam
jbe
mov
sub
push
or
bndstx
loop
lods
cmp
cmp
mov
shrl
mov
pop
mov
call
jae
mov
mov
xchg
xor
pop
mov
movsb
sbb
icebp
add
cltd
lds
pop
test
pop
adc
loop
cltd
in
dec
jmp
or
adc
adc
sti
loopne
mov
test
ja
cmp
xor
in
pop
jp
and
jnp
lea
sub
adc
lock
call
clc
push
jbe
sub
jp
test
sbb
ss
inc
addb
push
add
push
out
pushf
out
scas
pop
pop
pop
in
cmp
sbb
test
into
adc
mov
pop
mov
mov
mov
mov
or
mov
insb
and
and
xlat
jecxz
rcr
sbb
fsubrs
sbb
adc
lret
lock
add
mov
leave
in
mov
cmp
nop
ljmp
pop
pop
das
mov
jp
and
data16
push
stos
sbb
pop
dec
out
jmp
das
xchg
loop
shll
test
fcompl
sub
push
jb
inc
loop
std
ffreep
out
mov
lea
aas
mov
testl
push
pop
sti
mov
das
cmp
inc
arpl
sub
push
ficoml
inc
insb
jnp
repz
cld
fildll
pushf
cmp
orb
je
pop
push
mov
mov
mov
cmp
and
loop
cmc
inc
into
add
push
test
fwait
stc
scas
stc
in
push
cmc
mov
xor
inc
cmpl
fstpl
insb
push
jge
pop
adc
mov
jns
lret
flds
add
fidivs
mov
pusha
shrb
or
lcall
shll
inc
std
pop
fwait
inc
loopne
imul
xchg
faddl
in
dec
push
mov
cmc
fwait
jecxz
mov
xchg
mov
in
and
xchg
jae
lock
add
stos
aad
fists
push
es
push
jnp
push
negb
fidivl
adc
hlt
inc
daa
loop
das
inc
inc
jo
jmp
inc
movsl
fisubrs
adc
test
sahf
add
pop
repnz
sahf
mov
inc
jmp
mov
icebp
xor
sbb
mov
cltd
jo
inc
ficoml
pusha
mov
and
xor
test
jns
push
xchg
xchg
mov
repz
lods
lcall
insl
mov
out
rcll
push
mov
call
adc
mov
aaa
aam
and
mov
jg
sub
cmpb
cmpsb
dec
repnz
std
fidivl
mov
lret
xchg
dec
jno
pop
mov
fmull
cmp
xchg
jne
mov
cmp
pop
pop
cmp
xor
test
cmp
cmp
or
sub
add
push
lods
push
das
xor
daa
mov
mov
cmp
stos
aaa
inc
shlb
inc
push
stos
xchg
jmp
add
stos
pushf
sub
ficoml
fadd
call
push
mov
inc
jmp
xor
mov
call
xchg
scas
popf
lret
outsl
in
mov
push
ret
cld
decl
bound
rorl
mov
div
xchg
sbb
pop
mov
dec
das
mov
inc
xchg
movsl
pop
lds
data16
xor
ss
push
pop
and
mov
jl
pop
mov
js
mov
bound
jb
jnp
loopne
lock
mov
cmc
pop
xchg
inc
jmp
lcall
or
xchg
mov
inc
pop
push
loop
pusha
add
jmp
or
mov
notl
outsb
mov
push
cmpb
shrb
xor
push
dec
adc
mov
nop
push
jnp
mov
sbb
pop
and
addl
push
jecxz
das
jge
aaa
popa
sbbb
rcrl
es
ja
push
adc
mov
mov
fdivrp
mov
pop
and
fwait
dec
stos
lret
popf
aam
cmp
cmpsb
imul
clc
push
cmovle
mov
xorb
sbb
pop
jge
iret
std
outsl
mov
inc
loopne
mov
and
fld
movsb
cs
fs
outsl
jo
and
or
mov
lods
pop
xchg
mov
das
icebp
inc
out
inc
paddd
jg
add
xorb
hlt
mov
jecxz
in
adc
data16
lret
fmul
xor
cmpsl
xchg
sbb
call
icebp
mov
lret
sub
adc
js
xor
popa
jnp
and
leave
add
mov
add
mov
outsl
cwtl
fbstp
mov
mov
adc
xchg
pop
cli
sbb
mov
dec
and
jno
sbb
scas
mov
adc
add
push
sub
adcb
or
insl
push
sahf
push
outsl
push
jp
mov
sub
inc
test
mov
test
mov
ret
stos
mov
cmp
or
xchg
cmp
cmpb
dec
xchg
cltd
and
push
adc
cs
xchg
jo
mov
std
push
lea
xchg
cltd
sbb
orb
aas
cmp
mov
aam
jle
mov
or
ds
fwait
jmp
repz
xor
lea
mov
jne,pt
fmuls
inc
je
mov
pop
test
mov
andb
and
in
mov
mov
xchg
inc
sbbl
gs
adc
in
insb
loop
shlb
enter
aaa
sub
sbb
jne
lret
clc
sar
pop
lea
mov
adc
es
test
inc
out
sbb
ret
int3
push
pop
aaa
jne
pop
aam
bound
mov
shlb
push
adc
xor
fiaddl
int3
popf
jge
incb
push
mov
iret
adc
lahf
ss
dec
ja,pn
je
mov
sub
xchg
mov
dec
adcl
test
js
data16
cmp
sub
and
les
es
inc
sub
push
cmp
or
or
sbb
xchg
fwait
pop
andb
inc
in
test
xchg
hlt
inc
movsb
lods
xchg
stc
jbe
or
aas
dec
fcoml
arpl
push
mov
hlt
lock
xchg
and
sbb
dec
gs
mov
aaa
fcmovu
and
dec
iret
cmc
mov
sub
popa
loop
movsl
jno
xchg
int3
mov
jge
ss
fisubrl
jg
int3
and
dec
insb
mov
pop
in
sbb
jmp
mov
dec
adcl
sbb
test
jo
rep
in
popa
int3
sub
sbb
jg
fwait
pop
insl
sbb
and
into
mov
fwait
dec
les
sarl
adc
adc
pop
adc
outsb
push
jecxz
std
in
pop
repz
xchg
jae
les
sub
loopne
mov
aad
xor
mov
push
mov
fstpl
cmp
mov
add
in
stos
pop
fsub
lock
inc
insb
xor
aad
fcomps
test
sahf
hlt
stos
lods
loopne
inc
cmp
out
xchg
daa
test
sub
das
add
add
cmpsl
clc
or
aam
imul
and
pop
insl
mov
push
pop
push
adc
mov
nop
loope
arpl
call
bound
mov
in
clc
jg
pop
int3
dec
test
and
add
outsb
add
in
scas
xor
lcall
stc
lcall
jge
nop
and
cmpsl
push
lock
sub
push
pop
mov
add
mov
sbb
sub
pop
ret
add
leave
je
mov
loopne
push
xor
stc
xchg
mov
dec
pop
and
sbb
fisubrs
mov
cmp
cwtl
cwtl
scas
test
push
xor
adcl
and
mov
dec
sbb
ret
ljmp
mov
sub
ret
push
cmpsl
aam
xchg
icebp
out
and
adc
or
cwtl
into
inc
loope
lods
jmp
ret
arpl
xchg
insl
sbb
mov
sub
rcr
mov
push
mov
cmp
push
cmpsl
push
and
cwtl
inc
mov
sbb
fistpll
ljmp
add
pop
jne
dec
xor
or
xchg
lcall
ficoml
push
flds
sbb
inc
adc
mov
add
ds
fistps
popf
push
movsl
movsb
jle
mov
xchg
shl
push
cmp
push
pop
pusha
subl
dec
cld
push
dec
add
mov
and
scas
sti
lea
pop
cmc
adc
push
mov
clc
out
pushf
aad
mov
loope
movsb
rol
scas
mov
mov
push
jnp
icebp
or
mov
das
mov
or
mov
aad
xchg
stos
out
mov
fnstcw
test
inc
movsl
das
xchg
pop
aaa
outsb
and
pop
addr16
xchg
push
and
enter
dec
imul
loope
nop
and
ret
lods
shll
mov
stc
pusha
adc
call
sub
pop
loopne
dec
xor
add
icebp
fisttps
in
loopne
push
dec
add
jge
loopne
mov
and
loopne
ret
mov
ret
aam
mov
dec
inc
mov
dec
aam
stc
repz
mov
sbbl
jle
dec
mov
mov
jl
push
popf
addb
mov
outsb
mov
jl
and
gs
jle
loope
out
pop
paddw
xor
jle
pop
mov
push
adc
lods
xchg
incl
int
negb
mov
and
mov
or
or
enter
sbb
repz
std
or
aad
mov
or
adc
outsb
xor
xor
add
and
sbb
loope
mov
jl
jp
jmp
popf
pop
sub
aad
jne
sub
clc
inc
push
jecxz
sub
ret
inc
add
shll
cmp
or
mov
push
jo
mov
adc
jecxz,pt
inc
mov
xor
icebp
std
test
inc
mov
pop
dec
sbb
sahf
ss
jnp
ret
jne
pop
call
or
sub
jmp
or
movsb
pop
loop
mul
xchg
inc
xchg
xchg
popf
add
adc
int
mov
in
js
fidivrs
loopne
mov
jns
je
mov
adc
cli
call
fimull
fwait
jg
pop
fwait
in
and
mov
fs
sbb
and
cmp
mov
mov
cmp
stos
mov
add
hlt
sbbl
adc
rorb
rcll
out
test
call
mov
sbb
jmp
jle
or
mov
cwtl
ja
pop
sub
movsl
mov
cmp
xchg
cmp
shlb
cmpsl
mov
ds
andb
or
and
sub
mov
mov
xchg
add
mov
hlt
or
iret
cwtl
movsl
clc
add
sbb
fistpll
sub
push
add
outsl
dec
mov
mov
jbe
addb
pop
adc
popf
cli
mov
mov
jle
data16
in
out
or
jns
out
push
pushf
pop
jmp
mov
jne
dec
mov
into
xchg
add
or
and
inc
ljmp
test
in
inc
insl
inc
pop
sti
dec
xchg
xchg
test
mov
clc
sub
fnstcw
mov
xor
mov
clc
popf
push
pushf
inc
je
xlat
js
dec
jb
fsub
std
xlat
dec
hlt
cmp
fldcw
ret
adc
add
outsl
inc
cmp
fwait
std
xor
inc
fistl
push
xor
xchg
mov
pop
jp
inc
add
jg
cmp
inc
sbbb
and
mov
mov
icebp
pop
js
mov
loope
pop
outsb
repz
sub
lods
mov
jnp
xor
sarl
subl
sbb
mov
push
jns
mov
addr16
mov
pop
out
sub
and
add
call
inc
push
mov
std
ja
pop
out
cmpsl
fwait
jb
les
push
insb
xchg
aaa
es
xor
out
or
xchg
mov
xor
nop
pop
mov
cmp
loope
test
jbe
test
fisubrl
outsl
cwtl
ficompl
in
sub
daa
sbb
imul
hlt
lcall
pusha
lret
out
mov
idivl
inc
jb
cvtdq2ps
lds
adc
test
shlb
jp
inc
arpl
jg
into
les
fdivrs
jo
inc
cmp
ds
mov
pop
pushf
test
push
jp
lahf
add
xor
adc
fdivl
sbb
or
fildll
mov
test
dec
mov
std
orl
aad
loopne
outsb
aaa
and
mov
sub
shll
adc
psrlw
inc
jb
insl
and
mov
sbb
out
gs
push
pop
push
and
cmp
add
imulb
insb
mov
in
add
loop
inc
cmp
fstps
inc
fidivl
lret
mov
addr16
xorb
sbb
loopne
lods
cld
fsqrt
imull
pop
int3
inc
pop
cltd
loope
pusha
mov
das
adc
jbe
pushf
add
mov
sub
cli
popf
push
cmp
dec
jb
cwtl
dec
push
das
std
scas
mov
test
xchg
adc
xchg
xor
jge
adc
jae
ljmp
mov
movsb
jge
rorb
pop
data16
ss
inc
dec
dec
cmp
sub
scas
sbb
pop
jecxz
in
jp
lea
add
or
mov
popa
pop
adc
lcall
in
subb
adc
fnop
dec
inc
push
jb
pushf
xchg
inc
push
jmp
xor
push
and
adc
mov
add
lds
pop
add
mov
adc
xlat
push
das
jne
xlat
std
popf
lahf
push
ljmp
add
lods
mov
sar
and
loop
enter
adc
cmc
pop
clc
or
adc
adc
ds
cwtl
push
jns
iret
addr16
pop
push
std
outsl
loopne
and
aaa
dec
mov
inc
and
xchg
mov
mov
jbe
clc
jg
shr
outsl
jg
iret
invd
nop
mov
lea
loop
mov
dec
sbb
mov
mov
out
mov
js
orb
mov
xlat
cmp
aad
adc
ret
nop
popf
cli
imulb
loope
mov
icebp
xor
loop
pop
clc
and
and
pusha
cmc
mov
adc
and
mov
sub
stc
mov
data16
aas
mov
out
std
pushf
xchg
and
into
es
push
mov
cld
into
rclb
jmp
dec
imul
sbb
adc
loopne
add
xor
cmpl
ret
dec
ljmp
lds
cmp
jg
sub
cmpsl
pop
dec
and
add
aaa
movsb
cmpsl
add
push
bound
jne
push
mov
mov
jbe
inc
je
dec
and
loopne
jl
pcmpeqd
push
imul
adc
rolb
fisubs
outsl
xor
adc
leave
xor
fsubrs
mov
ljmp
mov
imul
push
call
repnz
mov
stc
dec
test
add
xor
aaa
sbb
fs
xor
cwtl
add
andl
sbb
jbe
cmpsl
ljmp
or
test
pop
lea
mov
test
add
mov
nop
xchg
add
icebp
and
rcll
mov
insb
sbb
push
sub
push
push
insl
jns
dec
inc
jno
in
cmpb
mov
xor
mov
cmpl
pop
ja
xor
xchg
mov
and
orb
sub
mov
mov
test
push
in
fdivrl
shlb
push
push
ljmp
xchg
add
pop
jo
pop
or
dec
fisubs
jbe
sahf
mov
pop
popf
rclb
scas
add
add
cmp
xlat
addr16
hlt
clc
test
xor
shl
pop
cld
inc
cmp
or
negl
pusha
and
pop
lcall
aad
xor
clc
pop
inc
xor
imul
push
and
stos
mov
lds
inc
aam
mov
fidivrl
and
mov
mov
push
data16
and
inc
or
outsl
clc
scas
je
mov
push
dec
mov
mov
call
in
or
inc
jecxz
jns
xchg
hlt
adc
sbb
or
fsubrs
out
mov
cwtl
cmp
inc
fwait
out
aas
daa
int3
or
cs
mov
test
or
mov
push
and
mov
popf
push
sub
icebp
push
dec
push
sbb
hlt
aaa
aas
or
fisttpl
mov
jne
sarb
cmp
push
xorl
cli
or
xchg
aaa
jle
fiaddl
adc
adc
dec
sbb
xor
je
scas
popa
fbstp
adc
shl
add
jl
mov
mov
enter
xchg
std
fwait
push
jecxz
les
ljmp
push
sbb
xchg
push
add
or
cmc
mov
cmp
in
les
xchg
mov
int3
mov
adc
xchg
jl
dec
push
cmpsl
sub
mov
lock
testl
sub
push
add
fiadds
or
into
sbb
fidivrs
mov
pop
fbstp
xchg
fildl
sbbb
lahf
inc
jo
call
movsb
inc
ds
roll
add
dec
mov
adc
mov
ret
jmp
jmp
std
lret
jmp
insl
fdivr
ret
cmp
lea
loope
pop
aaa
aaa
cmpl
std
insl
xor
sahf
xor
and
mov
test
and
or
sub
sbb
sbb
sub
pop
ret
mov
sbb
mov
inc
icebp
pop
mov
mov
lods
dec
or
lret
lahf
mov
ret
mov
pop
push
call
adc
add
data16
dec
add
out
inc
push
out
cltd
push
fs
or
xlat
jnp
andl
mov
mov
mov
fsubrl
or
pusha
inc
inc
cmovs
in
inc
sti
jg
incl
mov
push
xor
push
mov
pop
fwait
pop
lea
adc
dec
mov
jmp
cli
je
xchg
js
mov
pop
jmp
xor
in
outsl
mov
add
dec
cmc
jns
movsb
adc
pusha
jge
lret
sbb
inc
das
mov
movsb
sahf
sbb
in
testl
cmp
in
mov
loop
fnsetpm(287
sbb
pop
aas
mov
out
push
adc
push
shlb
pushl
insb
scas
mov
inc
ret
or
and
movsb
add
les
adc
dec
scas
sti
aaa
cmp
mov
xor
inc
adc
pop
inc
cmp
mov
les
xchg
fisubrs
fidivrs
adc
lahf
cmp
cmc
aad
lock
xchg
inc
dec
xor
subl
xor
cltd
loopne
push
jae
in
push
adc
loope
into
pop
fistpll
mov
jmp
mov
adc
mov
inc
popa
sub
scas
and
mull
pop
test
xchg
loop
add
lcall
or
and
xchg
xchg
and
fnsave
and
mov
daa
jle
pop
pop
sub
add
aas
jae
mov
mov
push
jbe
insl
testb
mov
adc
fidivrs
push
push
inc
in
push
imul
imul
sbb
cmp
sub
dec
push
xchg
xchg
jnp
jle
mov
cmp
xchg
adc
mov
inc
push
mov
xchg
mov
sub
lock
mov
jno
sub
adc
jne
repnz
out
or
mov
add
push
and
dec
call
cmpb
xor
or
repnz
xorl
add
mov
adc
pop
sti
popa
or
mov
mov
shrb
data16
mov
dec
mov
cmp
insl
repz
or
cmp
pop
jge
mov
mov
lods
sbb
sbb
cmpsb
and
or
notl
lahf
push
aad
pop
fcomps
pop
fdiv
inc
aas
xchg
mov
rolb
aas
mov
shrl
push
outsl
sbbl
push
ds
pop
dec
and
push
or
adc
xchg
mov
xlat
inc
call
mov
ja
ret
insl
adc
jno
mov
mov
fisubl
vprotw
or
fldcw
mov
icebp
inc
add
adc
inc
ret
out
xchg
data16
xor
mov
mov
shl
and
mov
xor
pop
mov
mov
jg
adc
push
dec
insl
ret
notb
and
fistpll
jl
push
dec
fisubs
sub
sub
cmc
inc
clc
inc
or
sub
sbb
cmp
adcl
dec
inc
sbb
add
inc
je
test
pop
and
enter
int3
les
test
jl
push
scas
dec
filds
xor
and
or
mov
cltd
mov
sarb
sbb
fs
std
pop
adc
movsl
jno
or
jg
pop
pop
xchg
je
lods
cmp
mov
pop
outsb
fsubs
arpl
test
icebp
cmpsl
mov
fwait
je
fdivrl
fistpl
outsl
jg
out
arpl
pop
rcll
jl
popf
inc
sub
or
mov
jmp
mov
xor
mov
imul
mov
push
in
mov
push
ljmp
aam
xor
mov
pcmpeqb
movsb
pop
mov
mov
leave
test
xor
add
push
inc
stos
icebp
or
out
call
ja
push
push
sti
in
mov
adc
test
insl
jge
leave
mov
xor
and
shll
das
jle
scas
mov
add
sub
mov
xchg
add
mov
inc
mov
inc
mov
insl
add
push
ficomps
clc
mov
add
push
lods
dec
push
jmp
or
fisubs
dec
int3
shrl
or
lea
testl
jnp
sub
out
cmp
adc
aam
in
loop
push
sahf
pop
xchg
inc
jbe
or
inc
out
icebp
inc
into
int3
lret
pop
adc
test
testb
cmp
add
mov
add
mov
test
sbb
cmp
add
ja
mov
sub
cwtl
inc
dec
out
hlt
mov
sarl
dec
lds
push
pushf
cmp
cmpsb
test
out
pop
into
sub
lret
cmpb
repnz
orl
ja
in
and
or
dec
and
fsubl
int
shll
lea
mov
nop
push
adc
test
or
rcrb
sub
lret
inc
mov
aad
push
inc
cmpsb
pop
adc
mov
test
dec
sbb
in
jmp
jns
mov
lahf
ljmp
jle
sub
imul
call
popa
mov
adc
dec
or
decl
adc
les
jge
cmp
mov
add
mov
scas
pop
jl
out
insl
or
add
inc
pop
mov
add
mov
sbb
dec
add
cmc
xor
int
dec
inc
inc
lods
hlt
pop
xor
and
fildl
nop
pop
sub
cli
call
push
les
xlat
inc
sti
rcll
stos
int
test
loopne
loopne
shll
jo
stos
xchg
and
rcrl
mov
push
outsb
xchg
jp
mov
hlt
add
clc
xchg
mov
pop
and
xchg
mov
sub
icebp
not
add
mov
adc
adc
sbb
xchg
sub
or
pop
je
ret
inc
lahf
push
jmp
xor
lods
sbb
loop
push
adc
ret
outsl
cld
std
stc
sti
pushf
sub
popf
sarb
and
push
ret
jg
xor
mov
das
or
xchg
adc
fs
testb
xchg
mov
arpl
pop
mov
clc
adc
jbe
lret
out
sbb
js
addr16
add
push
adc
cld
in
or
jo
mov
lds
mov
or
in
stos
aam
outsl
loope
sbb
cmpsb
adc
adc
mov
push
xor
push
and
jg
ror
adc
cmc
dec
jbe
sub
in
and
out
adc
in
pop
aaa
sub
das
mov
mov
imul
or
or
xchg
or
sub
push
mov
out
xchg
add
add
gs
jmp
sbb
repz
jl
mov
jno
push
add
jge
rorb
mov
ljmp
fbstp
mov
push
mov
jnp
incl
popa
pop
inc
or
test
sarb
lret
pop
adc
add
hlt
adc
cwtl
xchg
mov
push
orl
push
ds
mov
pop
mov
enter
out
ret
lds
add
lods
cli
jmp
cmp
jns
jb
cmpsb
cmp
mov
clc
or
enter
fs
add
jae
mov
inc
cmpsl
arpl
call
shrl
pop
mov
push
inc
xchg
outsb
ljmp
test
mov
xchg
dec
loop
fisubrl
mov
cmpsb
sbb
pushf
fsubp
sar
xor
mov
popa
sbb
or
stos
arpl
xchg
call
inc
add
mov
sti
test
inc
aad
xor
pop
fwait
call
and
and
shlb
and
mov
das
fldt
lock
aaa
pusha
idiv
pop
in
out
cmp
sbb
scas
lods
push
loopne
mov
je
adc
push
inc
test
ljmp
js
std
ss
test
enter
xor
aas
jl
adc
mov
aaa
cs
lods
sub
sahf
iret
iret
aas
push
in
adc
inc
outsb
std
aaa
lock
add
imul
std
push
mov
loop
sbb
add
dec
sbb
jbe
clc
test
les
push
test
or
add
mov
das
clc
in
sahf
rorb
cld
add
je
out
mov
lds
cmpb
pop
aaa
insl
pop
in
adc
mov
mov
mov
push
sbb
mov
pop
dec
xchg
out
or
hlt
or
adc
out
adc
pop
subb
push
add
std
les
xorl
ret
and
push
fcompl
adc
add
sbb
inc
clc
callw
add
push
andl
sahf
int3
icebp
xor
push
adc
fcom
fadds
xor
and
cmp
xchg
and
or
hlt
mov
pop
fistpl
in
loopne
sub
mov
incb
pop
scas
xor
jge
ja
mov
bound
dec
hlt
pop
jnp
add
pop
in
test
push
insl
cmp
ss
mov
jecxz
mov
mov
in
addr16
mov
cmc
add
ljmp
and
cmp
push
lds
test
sub
push
test
mov
and
mov
add
or
arpl
arpl
or
sbb
and
fbstp
jmp
fld
cmpsb
and
push
mov
lret
mov
mul
insl
outsl
loopne
mov
and
lcall
and
lea
scas
add
cmp
cwtl
into
loope
pop
sub
cld
cmp
js
fsts
in
lahf
rclb
push
mov
sbb
shl
push
pushl
stc
popf
sub
xchg
andb
xchg
flds
adc
adc
enter
hlt
scas
bound
xlat
invd
cmp
sahf
jbe
jmp
sarl
fbstp
pushf
mov
mov
rcrl
sbb
aam
push
cltd
lds
sub
loop
adc
mov
pop
les
jge
cltd
mov
xor
mov
sbb
or
in
std
xor
mov
cmp
clc
leave
pusha
mov
popf
stos
aaa
add
inc
or
inc
mov
pop
xchg
push
add
mov
sarl
sbb
xor
leave
mov
mov
in
leave
jmp
add
popa
adc
loopne
sub
std
test
sub
dec
lods
xchg
andb
inc
fistpll
loope
imul
mov
and
and
pop
jne
jmp
jle
jl
and
pop
aam
shl
mov
dec
sbb
in
xchg
dec
mov
xchg
pushf
mov
stos
ss
sar
fcomps
lret
inc
xchg
cld
xor
mov
fnsave
inc
or
inc
push
jecxz
or
das
sti
shl
and
rolb
clc
lcall
xchg
push
cli
or
mov
dec
out
sub
jne
dec
pop
mov
mov
cltd
and
inc
push
loop
stc
movsl
aas
cmp
gs
jae
fisubrs
or
push
add
cmp
mov
mov
mov
iret
adc
sub
clc
popa
das
outsb
xchg
mov
add
test
fildl
pop
and
or
inc
loop
dec
pop
mov
loop
inc
cmpsb
fdivrp
mov
inc
pop
cmp
inc
repz
or
cs
xchg
or
push
mov
cld
mov
fnstenv
mov
call
cmp
mov
cmpl
xorb
shrb
jg
push
adc
cmpsb
cwtl
pop
adc
cmp
in
cmc
aad
pop
adc
loope
cmp
xor
fidivrl
popl
imul
ret
mov
je
sbb
mov
push
or
mov
mov
or
rcrb
ret
dec
sbbl
mov
lea
sub
sbb
popa
or
insb
jge
xor
repz
mov
sbb
push
add
dec
mov
icebp
test
xchg
fdivrs
dec
mov
mov
insl
sub
or
je
adc
cwtl
imul
lods
push
lock
in
cmp
je
jge
addl
dec
fdivl
cltd
mov
pop
sbb
loope
bound
lahf
insb
decb
cltd
movsb
mov
add
xchg
push
lods
xlat
mov
jg
pop
dec
pop
idivl
jb
fcomi
jno
incb
pushf
jnp
mov
sbb
cmpxchg
mov
outsb
in
pop
mov
out
sbb
push
or
sub
mov
mov
js
scas
xchg
cmp
dec
icebp
mov
bound
adc
shl
xchg
xchg
shll
pop
jle
push
outsl
or
lret
enter
dec
psadbw
lods
push
fstpl
sbb
cltd
ret
xchg
nop
inc
fs
pushl
rorl
cli
jmp
bound
clc
or
popa
clc
outsl
andb
add
mov
jecxz
or
outsl
cld
test
ja
fisubrs
out
inc
fidivl
push
ljmp
mov
ss
aas
call
scas
xchg
fistpl
frstor
clc
jg
push
popl
push
shll
xor
inc
or
movsb
dec
popa
mov
repz
or
idivb
andb
movsb
shlb
add
scas
test
sarb
call
subl
adc
inc
jnp
dec
push
outsl
cwtl
subb
shlb
mov
sti
cmpsb
mov
movsl
or
sub
fcmovne
aam
icebp
sbb
push
data16
cmp
cld
addl
add
or
lahf
mov
pop
inc
mov
xchg
mov
sub
loope
push
inc
sbb
cmp
imul
cmpb
stos
jp
mov
call
mov
and
adc
dec
inc
incl
pop
int
xchg
loopne
mov
and
icebp
pop
or
mov
ret
fsubs
stos
std
loopne
mov
scas
andl
shrb
clc
aam
dec
sub
aam
decl
push
jnp
lcall
mov
ret
add
pop
out
loope
incl
mov
jmp
adc
xchg
lret
xor
jge
inc
sub
dec
ljmp
orb
bnd
push
and
sub
mov
popa
arpl
dec
xor
popa
jp
or
cmpsl
das
add
jp
movsl
rcll
inc
push
outsl
into
roll
ds
or
or
mov
test
jno
aam
andb
and
je
dec
mov
xchg
pop
cltd
mov
pushf
or
lods
push
fiadds
es
push
xchg
inc
repz
addr16
std
dec
std
cmp
pop
mov
push
pop
aad
lods
mov
imul
mov
clc
scas
shl
add
xor
mov
fbld
ljmp
jne
call
in
test
or
mov
stos
cmp
jne
incl
je
jno
enter
inc
in
sbb
repnz
mov
enter
test
lds
push
rcr
push
shl
cmpsb
cmp
rolb
sbb
lock
sbb
push
outsl
push
adc
jo
push
fcoms
cmp
enter
push
inc
adcb
mov
outsl
dec
sub
mov
movb
js
cmp
pop
pop
xor
ljmp
sbb
repnz
xlat
testl
inc
ja
hlt
ficoml
lock
fstpl
shrb
mov
insb
mov
cld
add
nop
lahf
or
inc
ja
aam
dec
mov
mov
outsb
orl
mov
xorb
adc
shlb
testb
jo
push
sti
sbb
push
jecxz
mov
pop
jg
loope
or
cltd
sbb
push
jne
andps
repz
mov
xchg
cmp
sbb
shlb
je
mov
sub
adc
mov
lcall
adc
mov
popl
or
push
jmp
sti
cltd
sub
lahf
mov
adc
mov
jb
mov
xor
cmpsb
or
push
push
cs
mov
lock
inc
int3
mov
int3
cld
add
cli
pop
jecxz
inc
ret
xor
or
jle
mov
push
sbb
mov
add
dec
jge
push
popa
dec
cli
xchg
jle
xlat
or
mov
rep
xchg
pushf
push
pushl
into
cmp
das
and
in
mov
mov
jae
fs
and
add
or
jg
sbb
and
notl
insl
ja
fs
scas
in
push
mov
inc
jl
aad
mov
test
inc
adc
xchg
sub
ss
lcall
pusha
pop
jno
testl
push
mov
shlb
lods
sbb
mov
push
xorl
adc
aaa
daa
js
xchg
push
and
push
mov
or
adc
lock
inc
xor
and
and
mov
pop
inc
fdivrl
ja
dec
push
flds
cld
hlt
sbb
mov
or
ds
mov
lcall
and
xlat
loope
push
aaa
cli
mov
jecxz
inc
mov
mov
nop
mov
test
leave
inc
push
push
faddl
sub
jp
enter
clc
or
enter
inc
add
hlt
incb
mov
mov
sbb
cwtl
leave
test
sbb
cmpl
jge
leave
dec
xchg
fistpll
xchg
adc
ds
pop
pop
je
xchg
movlps
inc
es
sub
push
xlat
jmp
cmp
jmp
inc
xchg
call
mov
pushf
das
xchg
xchg
fildll
mov
push
cmpsl
mov
or
arpl
ret
adc
inc
jecxz
les
pop
decb
or
push
push
pop
add
add
rorb
and
push
jb
and
in
sbb
rclb
cmc
add
leave
stos
push
insb
cmpsl
in
in
es
addr16
shld
cmp
rorb
xor
outsl
pop
mov
in
dec
sbb
cwtl
js
test
push
mov
pop
sub
inc
aas
cmp
mov
jmp
xor
stos
cmc
pop
push
mov
inc
jae
es
add
je
lcall
mov
lret
and
in
sbb
add
loope
ret
pop
in
sub
adc
out
cmp
insl
cwtl
jecxz
cld
mov
int
dec
test
iret
cmp
push
cmp
xchg
insb
sbb
jno
xor
xlat
push
push
enter
adc
faddp
out
jle
cmc
cltd
xor
rcrb
cmp
inc
cmp
mov
cs
test
cli
movsl
and
lods
push
and
mov
call
pop
cmp
aad
dec
and
adc
cmp
mov
inc
push
faddp
xor
and
pusha
pop
or
dec
cmp
rcrb
add
les
dec
ret
dec
cmpsb
mov
sahf
fs
dec
daa
xchg
cli
bsf
ror
add
cmc
popa
lret
pushl
inc
out
cmpsl
mov
adc
add
jnp
cs
jp
inc
dec
xchg
mov
loope
mov
dec
shlb
jg
dec
lahf
mov
por
push
and
mov
std
or
mov
repnz
out
xor
mov
sbb
cmpsb
jbe
xor
or
xchg
inc
cmpsb
outsl
pop
mov
inc
cmp
inc
aad
adc
lcall
add
pop
jne
filds
lahf
add
out
sbb
pushf
ftst
fldt
push
inc
stc
out
pop
or
lcall
cmp
pop
push
scas
lret
ret
xor
xchg
aas
and
or
incb
mov
ljmp
pop
stos
pminsw
shll
insb
js
adc
mov
push
and
scas
sbb
nop
jecxz
mov
inc
cmpsb
or
rcrb
or
fildl
in
xor
loop
push
shlb
shrl
add
adc
and
mov
jb
stos
gs
mov
ss
fisttpll
rclb
mov
call
leave
out
pop
or
imul
inc
lds
lcall
aas
pusha
xchg
mov
imul
xchg
jle
ret
jns
and
in
and
sub
mov
insl
or
loopne
add
xchg
fsubr
jg
push
push
nop
jle
test
enter
dec
or
or
inc
lods
xor
mov
xlat
pop
pop
ljmp
inc
mov
inc
adc
mov
pushf
xchg
call
repnz
inc
jne
mov
rcrl
pop
or
pop
xchg
js
sub
xor
fisttpl
mov
push
sub
add
sub
sahf
outsb
insb
ja
je
jmp
in
adc
mov
mov
lea
cs
cmpsb
xor
in
in
cmp
sahf
jp
rol
dec
lds
add
das
xor
cwtl
sub
daa
add
push
and
adc
xchg
das
incb
jl
gs
add
push
adc
jmp
xchg
cs
push
mov
pop
push
jg
push
enter
sbb
mov
fimuls
push
rorb
test
mov
dec
lds
int
mov
ljmp
sbb
fcoml
out
test
into
pusha
mov
mov
and
add
push
jne
pop
xchg
add
inc
adc
and
outsb
loopne
insl
jp
sbb
add
inc
sub
sub
std
push
xchg
pusha
test
or
das
adc
cmp
sbb
mov
push
adcb
cmc
clc
or
repnz
ret
push
and
add
push
pop
icebp
mov
cmp
mov
jno
repnz
lret
xor
daa
xor
sbb
cmp
loopne
inc
push
stos
iret
leave
lds
in
mov
mov
movntps
call
push
fsubp
ja
stos
ljmp
cmp
sbb
jg
mov
cld
and
add
loopne
ficompl
xchg
sbb
ret
js
decl
adc
dec
gs
mov
hlt
and
xchg
pusha
ret
adc
sbb
xchg
cwtl
inc
lahf
into
mov
or
sub
mov
or
pop
shl
adc
out
fsubrl
fistps
jge
into
es
cmc
shrl
add
mov
pop
les
mov
ss
cmp
cmp
orb
and
aaa
lock
testb
daa
sarb
or
in
inc
scas
in
add
aas
das
mov
lret
ret
add
mov
and
and
jg
pop
stc
leave
inc
pusha
shlb
and
leave
and
je
mov
fs
fadds
mov
sbb
es
pop
rorb
std
dec
pushf
shl
mov
subb
and
popf
or
adc
pop
cs
dec
dec
arpl
stos
rolb
or
xchg
pop
xor
push
xchg
incb
mov
cli
jl
addb
jp
and
mov
movd
dec
iret
xchg
push
in
pop
ja
gs
jmp
out
xchg
rol
fadds
cmp
fistpll
inc
frstor
in
popf
mov
sbb
insl
fstpt
jl
orl
inc
aaa
sarl
rcl
xor
mov
sti
push
dec
xor
and
cmp
pop
sti
adc
xchg
jb
adc
rcl
push
scas
push
and
addl
sarl
shrl
xchg
mov
fsubs
adc
data16
ss
ja
in
mov
push
mov
icebp
jg
add
fmuls
push
mov
hlt
les
xchg
add
push
js
ficoms
pushl
shl
inc
sarl
jno
out
ja
cmp
cltd
imul
and
test
clc
jg
loopne
and
shr
mov
cld
repz
mov
pop
add
dec
mov
stc
dec
mov
push
or
je
mov
mov
mov
in
lahf
std
mov
pop
mov
in
and
inc
cs
aam
add
and
outsb
sub
push
cltd
pop
dec
adc
popf
mov
insb
pop
jle
xchg
mov
ret
push
dec
fsts
cmpl
rcrl
stos
clc
inc
jmp
fstpt
sub
fstpt
lahf
mov
sarl
loope
lock
in
pop
js
and
aam
add
out
imul
xor
mov
lock
mov
iret
rolb
jbe
xor
js
addb
js
std
push
arpl
inc
dec
call
mov
xchg
mov
mov
jmp
xlat
xchg
cmp
or
fcmovbe
xchg
testb
incl
cmp
mov
push
fiaddl
mov
shll
xchg
sbb
jl
clc
mov
dec
xchg
mov
push
add
jmp
movsl
sbb
sub
mov
sub
push
fadd
ret
jns
pop
mov
icebp
out
pop
mov
in
inc
fwait
dec
adc
ss
cmp
dec
adc
dec
stos
sub
call
imul
mov
rcll
outsb
bound
sbb
fistpll
mov
bound
sbb
incb
dec
jmp
in
mov
scas
push
push
call
inc
mov
push
in
push
push
sbb
fldenv
inc
hlt
inc
xchg
adc
icebp
ret
sbb
sbb
jecxz
aad
daa
popa
pop
sbb
fidivrl
pop
inc
mov
inc
sbb
iret
std
sti
jecxz
mov
lds
mov
jecxz
adc
orl
in
clc
pop
call
call
and
dec
mov
mov
push
fcoms
mov
ds
add
mov
sub
xor
repz
rcll
cmpsb
inc
sbb
movsl
add
jle
arpl
sbb
ret
mov
insl
dec
out
daa
aaa
mov
not
fisubrl
xor
adc
aaa
aam
or
lcall
xchg
sub
mov
or
cli
daa
icebp
repz
add
mov
repz
gs
mov
add
mov
push
call
cs
push
das
sbb
rorl
cmp
cmc
xchg
popa
add
imulb
loop
nop
mov
dec
subb
lret
lock
fwait
xchg
int
jl
adc
xor
xor
lds
xor
daa
add
lcall
jle
fpatan
lret
mov
and
sbb
dec
inc
aad
stc
fisubrs
mulb
pusha
or
sti
lret
fistpl
lods
inc
shlb
and
incl
push
ljmp
shll
outsb
loope
int
ret
sub
dec
fsubl
push
sbb
jg
in
repz
jns
mov
fcomps
add
movsl
or
pop
andb
outsb
lcall
lea
imulb
push
inc
cld
xchg
bound
push
clc
pop
xor
aam
xchg
pop
xor
mov
and
cmpsl
std
lock
dec
lret
inc
cmp
push
sar
leave
sub
xchg
pop
jno
xlat
cmp
push
fsubl
cmc
xchg
pop
cs
jg
movsl
pop
scas
dec
push
adc
scas
jecxz
in
adc
pop
pop
std
jge
loope
or
rolb
divl
cld
repz
jb
xor
mov
jo
loopne
shll
lcall
inc
aas
or
popf
je
pop
test
call
aaa
cli
lret
push
inc
fisttps
add
adc
xchg
out
push
or
faddl
jb
jno
cmp
test
loopne
mov
inc
mov
cmp
pop
lods
mov
outsb
lcall
add
jne
jno
cld
shlb
dec
hlt
inc
aaa
sub
ja
pop
cmp
inc
movsb
cltd
sbb
push
icebp
cmc
push
sub
in
push
adc
add
mov
arpl
jbe
daa
orb
jnp
mov
decl
cmp
pop
out
dec
mov
push
fwait
cmp
lahf
sbb
shlb
push
loope
rcll
fsubr
pop
and
outsb
sub
add
xchg
xchg
fcmovnbe
inc
mov
and
out
add
xor
inc
int
scas
cli
das
std
adc
pop
xlat
lret
xchg
xor
hlt
mov
dec
arpl
aaa
cmp
push
xchg
push
dec
push
inc
rcrb
push
jmp
movsb
sti
ja
clc
xor
test
data16
adc
loopne
loopne
jg
iret
xor
mov
xchg
mov
pop
in
in
or
or
adc
and
pop
sbb
loopne
and
pop
scas
fcmovb
outsb
mov
hlt
sahf
and
push
xor
mov
orb
stc
mov
rcl
movsl
cld
call
lret
mov
cmp
push
dec
sbb
dec
and
jbe
inc
cmpsl
sbb
cmp
clc
fildl
shll
and
roll
test
sub
fistpll
testb
sti
bound
cli
cmpsb
mov
test
cmp
push
insb
nop
scas
jle
mov
pop
stos
mov
idiv
or
xchg
adc
adc
and
jmp
xchg
lret
jmp
insb
clc
bound
and
xchg
sub
pop
jmp
mov
jno
push
ss
loope
push
fcomi
mov
mov
shlb
pop
test
ljmp
enter
loope
cmpsb
icebp
scas
adc
inc
rcrl
cmp
daa
cmpsb
jg
ret
inc
pushf
je
add
shll
gs
cmp
jmp
push
or
and
push
das
and
ja
testb
adc
jne
pop
dec
mov
pop
adc
hlt
mov
push
adc
and
add
clc
mov
mov
pop
push
inc
popl
push
jne
mov
add
lock
cs
inc
adc
pop
dec
mov
out
xor
mov
add
push
lahf
rcrb
fists
js
cmp
outsb
and
xorb
addb
mov
jge
ret
sbb
pop
std
add
cmp
outsb
stc
pop
and
out
xlat
mov
fwait
enter
or
mov
or
adc
enter
or
push
add
xchg
js
inc
xlat
pop
cmp
daa
stos
imul
dec
fnstenv
imul
ficomps
mov
lods
int
cmp
sub
adc
pop
mov
mov
jp
pop
pushf
push
dec
mov
cmp
les
jmp
dec
scas
push
loop
dec
aam
in
cmp
xchg
fnsave
mov
orl
mov
cwtl
outsb
or
sub
repnz
lcall
cmp
cs
test
scas
das
pop
mov
mov
or
pop
swapgs
out
sbb
jo
cmp
es
and
mov
and
fwait
adc
pop
mov
dec
add
push
add
and
add
std
sub
aaa
jb
sarl
jg
adc
push
mov
dec
dec
adc
insb
aaa
decl
mov
adc
mov
add
push
xor
es
inc
stc
imul
and
scas
fbstp
ret
out
mov
or
test
jbe
fcmovnb
adc
xchg
cltd
xor
add
mov
test
cli
enter
sbbb
add
mov
xchg
fucomip
xor
out
out
mov
mov
jecxz
mov
cmp
sub
aam
sub
cltd
add
xchg
push
jp
hlt
popa
orl
add
mov
cli
fldt
inc
adc
or
inc
unpcklps
std
neg
pop
pop
push
fdivrl
dec
xchg
dec
lods
sub
popa
xor
mov
and
ret
mov
aaa
or
jecxz
mov
stos
mov
sub
xchg
push
ss
sbb
sub
scas
dec
or
lea
addb
stos
loope
xchg
out
call
enter
cmpsl
pushf
out
push
mov
jbe
je
mov
test
fisubrl
pop
aas
incb
cmpl
clc
adc
jmp
pop
xor
addb
aam
mov
and
sahf
adc
addl
xchg
sbb
out
fcmovu
lcall
cmpsl
xor
loopne
in
pop
fdivl
mul
push
inc
xchg
add
and
push
sub
clc
jl
sar
in
push
je
inc
stos
out
lods
add
pop
loope
mov
push
lcall
cmp
aas
sub
xor
mov
mov
jmp
push
and
inc
pop
push
push
add
pusha
in
xor
not
stos
and
or
scas
stos
dec
cmp
cmpsb
add
inc
and
movsl
sbb
data16
in
cwtl
and
cld
mov
dec
sbb
cli
dec
inc
int
sahf
push
scas
jnp
lea
push
and
xor
adc
dec
mov
mov
push
lcall
adc
lods
scas
xor
out
mov
add
jo
jg
push
xchg
cmp
mov
shl
mov
sti
jg
mov
pop
orb
cltd
and
aad
adc
clc
xchg
mov
out
jno
and
in
decb
loopne
cs
sbb
and
dec
aaa
rolb
sbb
inc
xlat
xchg
xchg
dec
jne
hlt
adc
inc
dec
adc
lock
add
and
outsl
addr16
jmp
xchg
lods
addr16
add
insb
jge
jle
dec
inc
int
push
orl
push
add
bound
push
sbb
xor
test
pushl
daa
sub
imul
in
addb
pop
push
pop
inc
push
push
pop
pusha
lret
mov
dec
call
test
rcrl
push
lods
les
mov
jle
inc
inc
xchg
fsubrs
incb
in
pop
sub
hlt
add
cli
add
cwtl
hlt
outsl
inc
mov
testl
enter
test
xchg
outsb
movsb
or
mov
sbb
jmp
clc
scas
popa
aaa
arpl
mov
pop
sub
inc
inc
push
clc
aaa
push
sbbb
pop
in
adc
mov
movlps
fisubrl
pop
lret
andl
shrl
roll
push
xor
xor
std
jg
insb
or
fwait
xchg
mov
bound
lods
jb
dec
lock
ja
push
cmp
ja
adc
cmp
xchg
sbb
cltd
and
push
sub
js
and
xor
or
jp
mov
jnp
sub
aaa
mov
jge
lods
sbb
and
mov
std
mov
and
in
or
sahf
addr16
aas
sbb
pop
mov
xor
cli
add
insl
test
sahf
xor
lret
adc
jne
push
lret
jns
addr16
mov
xlat
addl
test
mov
xor
xor
mov
nop
mov
jbe
fisubrs
adc
xor
out
xchg
inc
xor
mov
andb
sbb
jnp
inc
xlat
sahf
and
xor
lock
fistpll
xor
push
add
add
push
data16
pop
mov
push
pop
mov
pop
lock
test
mov
ss
movsb
mov
ljmp
pop
lahf
mov
dec
outsl
add
sahf
pop
push
lcall
jne
and
xlat
pop
jae
xchg
jecxz
das
jl
push
ret
xchg
push
mov
pop
mov
adc
mov
fstps
jno
incl
add
pop
and
and
aad
movsl
incl
xor
std
loope
sub
dec
push
xor
sbb
or
pushf
and
inc
sti
add
sbb
xchg
pop
movsb
mov
sub
push
xchg
data16
inc
insb
iret
sti
jge
dec
hlt
mov
jg
xor
xchg
rcrb
popa
inc
push
loopne
repz
xchg
aas
add
js
loope
or
push
or
rorb
and
sbb
scas
pop
push
rol
and
jmp
dec
and
jge
jp
clc
divb
mov
adc
sub
jecxz
push
mov
pop
lods
pop
mov
xchg
ljmp
inc
mov
loopne
cwtl
icebp
shr
bound
cwtl
imul
cli
jbe
aam
mov
popa
jno
mov
mov
inc
pusha
popa
les
sbb
mov
pusha
sbbb
loope
cli
aam
sahf
inc
fwait
pusha
es
fistl
sbb
pop
mov
and
dec
insb
xor
ficomps
or
scas
xlat
std
mov
or
inc
sbb
rcrl
pop
sbb
and
sbb
adc
loop
decb
rcr
int3
mov
or
xchg
mov
rcrb
mov
mov
sbb
loopne
push
or
ret
jbe
insb
incb
popa
ret
rcr
inc
lret
fmull
pusha
shrl
and
add
cmpsl
xchg
les
pop
loopne
jge
fisttpll
dec
xchg
sub
adc
shlb
jg
push
in
push
jp
cmp
jbe
stos
into
and
fwait
stos
cmpl
mov
xchg
je
add
adc
ljmp
xor
subb
xor
std
mov
push
js
pop
mov
mov
insl
sbb
mov
pop
cmp
inc
adcb
cld
dec
add
xchg
or
mov
mov
xchg
cmp
and
jns
setns
shlb
mov
stos
movsl
xor
inc
loope
or
cmp
mov
xlat
push
inc
or
push
loope
imulb
in
mov
scas
test
mov
xor
sbb
push
imul
repnz
icebp
aaa
mov
sbb
test
lds
dec
cmpb
cmp
or
push
pop
das
je
rclb
stos
rolb
cmp
sbb
add
stos
outsl
add
aaa
inc
jmp
mov
bound
int3
mov
xchg
repz
test
mov
imul
jnp
mov
in
pop
movsl
mov
lock
mov
insb
enter
mov
mov
es
test
and
nop
inc
add
ja
ja
push
fildll
fcoms
lahf
call
pop
lods
je
mov
xor
xchg
stos
mov
sbb
pop
and
andl
sub
fnstsw
dec
insl
ljmp
adc
jnp
xor
xchg
aaa
test
dec
dec
push
dec
repnz
or
or
lds
mov
xchg
mov
repnz
sbb
cmp
mov
filds
aad
inc
push
shr
pop
cld
mov
mov
jle
outsb
adc
lahf
outsl
cs
fadd
lds
lcall
or
xchg
adc
jb
addl
pavgw
push
dec
mov
mov
add
jno
bound
mov
dec
mov
nop
jmp
test
mov
icebp
test
mov
fwait
movsb
stos
push
je
cmpsb
insb
push
add
fwait
xor
dec
out
and
xchg
inc
sbb
lds
test
fiadds
pushf
pushf
aas
jo
inc
xchg
ret
pushf
pop
clc
mov
daa
out
pop
or
sbb
cmpb
jo
sub
cli
or
mov
out
jl
mov
xor
inc
in
sub
push
xorb
loopne
push
inc
movsl
mov
jg
rcl
jp
push
repnz
into
ret
adc
stos
or
cmp
les
sbb
sbb
mulb
and
fldcw
fdivs
pop
and
fdivs
subb
jg
adc
push
fdivs
push
jnp
notb
out
leave
and
mov
cmp
cmp
lea
lret
push
add
outsl
jno
cld
ja
xchg
add
fcmove
aaa
mov
loope
int3
notl
cmpsb
outsb
ret
or
add
fidivrl
dec
dec
outsl
out
mov
ljmp
dec
adc
cmp
aaa
jo
cwtl
mov
aaa
push
mov
testb
out
pusha
int
push
stos
aaa
add
outsb
adc
mov
add
push
mov
pop
inc
dec
orb
push
icebp
mov
and
insl
push
jl
push
loopne
int3
repnz
lret
jle
sub
and
inc
xor
leave
sub
call
je
adc
or
xchg
enter
shll
push
popa
jp
inc
dec
lret
xchg
push
sub
push
or
inc
shrb
es
incl
jecxz
push
imul
pop
ljmp
and
dec
cwtl
sub
js
adc
popf
mov
call
outsb
scas
ss
pop
inc
mov
push
fsubrl
adc
inc
std
inc
int
daa
mov
mov
sub
aam
xlat
les
push
mov
fnstsw
cmpsb
lret
sbb
pushl
jns
pop
ja
inc
lods
adc
sub
pushl
hlt
lret
cmp
hlt
movl
sets
xchg
sbb
adc
inc
dec
cmp
bound
add
inc
adc
push
test
decl
ss
insl
pop
ss
data16
outsl
xchg
mov
es
or
fistpl
pop
sbb
xchg
jle
inc
cli
pop
testb
and
xchg
outsl
andb
mov
sbb
cld
and
mov
cs
incl
xchg
lea
fisttps
add
lods
push
jb
mov
xchg
jo
mov
sub
bound
call
loopne
repnz
jp
das
sub
cld
orb
das
mov
cmp
fsubrp
nop
aam
imul
mov
xor
xor
or
mov
lock
int
aam
sub
mov
and
call
push
lret
nop
ljmp
test
jg
adc
xor
adc
jbe
js
fistpl
mov
adc
push
outsl
add
xchg
bound
xchg
xchg
fnstenv
inc
jne
lahf
addb
push
mov
xor
shl
out
sub
mov
addr16
jg
leave
mov
daa
cmpl
loop
push
xor
repz
jmp
out
stos
mov
cmp
movsl
mov
mov
shrl
and
call
pop
sbb
or
adc
sbb
subl
imul
inc
popl
ficompl
jge
mov
sar
jl
jbe
rcl
sub
lock
add
jmp
mov
call
aam
xor
movsl
and
sbb
pop
clc
mov
jl
jecxz
pop
daa
jmp
ror
sbb
add
leave
xchg
cmc
mov
xor
jns
fiadds
mov
sub
jg
lcall
lock
xor
cld
adc
and
addb
inc
jl
sub
lahf
mov
sub
jg
scas
test
loopne
outsl
mov
push
mov
popa
jnp
cli
push
mov
mul
aas
pop
aas
mov
lock
lcall
push
jmp
fmuls
adc
movsl
outsb
adc
adc
loopne
sbb
les
sbb
lret
fldl
sahf
andb
or
xor
sbbb
shr
fdiv
orl
in
ljmp
push
movsl
push
mov
inc
inc
mov
sbb
sub
ror
mov
mov
lock
fildll
sub
arpl
mov
lcall
les
mov
lods
icebp
pop
icebp
add
lret
pop
outsl
hlt
xor
adc
aam
int
jg
or
adc
sahf
push
das
aam
cmp
jg
adc
js
pop
std
cmp
rcl
negb
leave
lds
sbb
dec
pop
mov
mov
jmp
pop
lods
pop
loopne
dec
addr16
sbb
popa
pop
or
jns
jp
mov
popa
sbb
das
rcrl
pushf
push
push
sti
push
arpl
xor
mov
lock
push
loope
rcr
fisttps
fdivrl
push
xchg
nop
fwait
ljmp
dec
and
or
std
aam
xor
mov
jo
adc
inc
mov
inc
sti
int
xchg
mov
or
mov
ljmp
sbb
pop
shlb
xor
inc
in
adc
jns
pop
loope
mov
cmc
dec
jo
clc
aas
es
inc
dec
sub
push
out
int3
pop
lock
add
insb
pop
mov
or
lock
stos
adc
and
mov
dec
cli
iret
jmp
mov
adc
push
or
add
test
notb
inc
ja
shll
dec
push
xor
pop
push
cld
dec
add
ja
push
ds
mov
adc
dec
stos
xchg
xchg
stc
test
or
mov
dec
es
aaa
jne
int
sub
scas
or
clc
ss
rorl
lods
aam
mov
dec
ss
or
inc
inc
arpl
das
adc
jae
loopne
or
push
ljmp
inc
xchg
push
out
sbb
inc
gs
lock
xchg
roll
dec
fdivrl
jle
inc
fwait
mov
xchg
cmp
xchg
xchg
faddl
sti
fucomip
psllw
test
or
sub
sub
sbb
mov
shlb
mov
adc
cli
aas
adc
jp
in
enter
jle
filds
or
inc
xor
outsl
push
scas
out
push
sbb
adc
clc
mov
push
cltd
mov
and
nop
pop
pushf
sti
push
xlat
shl
jle
inc
mov
xchg
inc
mov
dec
and
xor
lea
adc
xor
divb
fnstenv
lret
inc
in
sub
cmp
add
lods
scas
jae
lock
mov
cmc
cltd
orb
or
xchg
mov
inc
and
fidivl
cwtl
mov
cmp
in
fucomp
dec
sarb
rep
popa
test
in
test
sub
xchg
filds
adc
mov
sub
pusha
fisubs
int3
adc
pop
test
ret
or
nop
sub
add
jne
mov
add
xchg
sti
cmp
mov
int
xchg
outsl
sub
pop
dec
inc
inc
out
mov
shrl
sbb
jge
test
aas
into
add
stos
jg
mov
lret
and
fisubs
mov
outsl
jp
ret
gs
mov
mov
sub
jl
mov
push
lret
xchg
nop
inc
xor
ss
jmp
movsl
jg
xchg
adc
das
test
push
hlt
fnstsw
dec
and
mov
cmp
sbb
jmp
ret
push
movsb
inc
xchg
mov
bound
and
pinsrw
stos
int3
and
mov
cmp
rclb
jo
cltd
outsb
mov
subl
decl
pop
repnz
mov
mov
or
jg
dec
insb
fiaddl
sub
mov
cmpsl
jo
and
push
adc
repz
fisttpl
mov
mov
test
pop
int3
sbb
cld
leave
jne
mov
adc
ss
dec
adc
xor
push
outsb
insl
push
inc
mov
xchg
mov
mov
cmpsl
xchg
xor
or
pop
add
test
push
or
push
movsl
outsl
jo
imul
lcall
mov
addb
xchg
and
cli
push
sbb
int3
icebp
push
push
test
call
jg
push
jge
clc
rcrb
dec
mov
mov
pop
add
scas
cmp
pushf
mov
call
decb
fldl
shrb
xchg
adc
or
adc
jno
mov
mov
cmp
int
sti
fnstsw
mov
mov
je
and
mov
add
jae
hlt
xchg
add
dec
inc
jl
xchg
fnstsw
mov
xor
dec
ficomps
call
pop
sub
test
ret
orb
push
das
pop
dec
sub
stos
adc
or
sbb
dec
inc
mov
dec
in
jmp
test
cmpb
push
xor
adc
mov
push
push
xchg
inc
or
push
jle
test
pop
outsb
sbb
mov
test
js
jbe
cmc
in
add
test
sbb
mov
sbb
inc
inc
cs
mov
fildl
daa
loopne
push
or
fldt
xor
lahf
scas
push
cmc
movsl
add
xchg
aad
push
pop
mov
push
fdiv
aaa
fwait
cmp
dec
lahf
mov
mov
inc
jb
aaa
adc
dec
popf
and
inc
jp
pop
repz
push
cmc
test
out
sub
nop
xchg
mov
rcrb
bound
mov
fildl
push
shrb
xchg
enter
fstp
pop
jmp
sub
rcrb
mov
xchg
push
mov
push
jge
adc
sub
fcomps
add
outsb
xlat
data16
adc
cmp
mov
mov
cmp
mov
es
cs
dec
xor
pusha
mov
xchg
sub
push
push
lea
jle
fmuls
je
cli
in
in
mov
dec
mov
std
mov
add
add
pop
push
cmp
add
inc
push
rol
fst
mov
incb
mov
inc
aam
repz
jmp
insb
and
jg
int3
xchg
xchg
xor
fidivs
xchg
sub
add
sarb
and
into
lret
mov
push
rorl
lock
and
loope
js
aam
in
addr16
fs
aas
adc
je
gs
and
enter
inc
fisttpll
mov
out
pusha
jl
mov
fmul
mov
rcrb
insb
and
out
jbe
scas
cmc
jnp
test
out
pop
movsb
push
dec
adc
mov
leave
inc
out
inc
push
cld
jg
fs
aam
pop
enter
leave
stos
jmp
js
pop
inc
sub
mov
loopne
dec
pop
add
out
jg
jb
push
mov
mov
ret
jae
xchg
mov
out
pushf
loopne
inc
repz
push
sahf
mov
dec
xchg
push
pop
shll
outsb
pushf
clc
repnz
sub
or
xchg
push
jl
cmpsl
pushf
loope
and
shr
add
clc
jge
and
push
aas
xchg
bound
addb
cld
test
jg
add
ljmp
pop
pop
push
les
sbb
push
je
jbe
movsl
cli
jb
ret
add
inc
push
nop
push
cmpsl
repnz
frstor
mov
pop
faddl
divl
ret
adc
jl
inc
add
loope
lods
inc
test
pop
push
push
aaa
ret
xchg
inc
push
xchg
loope
insl
or
mov
jle
ja
in
xchg
dec
mov
lcall
test
je
or
sub
pop
cmpsl
mov
push
dec
xor
inc
xor
jge
xor
imul
cltd
test
mov
stc
test
cld
cld
sbb
jne
test
icebp
or
pusha
add
mov
dec
fsubl
stc
das
in
mov
iret
shrl
push
inc
and
sbb
mov
and
div
aad
xor
setge
dec
jl
stc
xor
andl
mov
in
fwait
loopne
in
lcall
ficoms
cmp
dec
mov
cmp
dec
hlt
ret
mov
cmp
hlt
jge
xchg
pop
call
xchg
mov
dec
leave
outsl
mov
lock
sub
push
mov
mov
test
stos
loop
pop
fcoml
sub
xor
into
fcmovnbe
lahf
cmp
add
xchg
arpl
sbb
leave
ds
out
lret
or
clc
mov
lods
or
cmp
test
mov
sti
jbe
lock
fistpl
jge
out
pusha
xchg
mov
fmuls
aaa
cmpsb
shr
int3
lock
mull
add
jnp
jp
push
adc
aaa
jbe
mov
adc
push
test
pop
jno
push
and
adc
pop
and
lods
mov
movsb
stos
adc
sbbb
and
repz
push
and
dec
mov
js
dec
lcall
addb
sbb
inc
mov
or
lock
pop
or
push
or
sub
outsl
xor
jns
or
sar
mov
mov
lock
cwtl
xorl
das
mov
pop
stos
mov
testl
or
in
sbb
jmp
pop
sub
call
cmp
inc
adc
mov
fidivs
cli
fildll
jne
and
mov
jns
push
mov
std
xor
xchg
xchg
fstps
mov
insl
inc
stos
iret
insl
loope
aad
add
aam
movsl
aaa
loope
and
aam
inc
jmp
xchg
outsb
lahf
ss
daa
pop
xchg
xchg
icebp
aas
clc
ljmp
sub
dec
adc
and
xchg
xchg
addl
data16
mov
mov
inc
sbb
aas
and
fdivs
shrl
push
clc
fwait
ljmp
inc
out
and
imul
mov
jecxz
mov
add
adc
cmpsl
in
cld
mov
cmp
ret
les
jg
cli
sbb
inc
std
or
or
and
add
mov
xlat
imul
scas
jnp
jae
jle
sub
int
out
cli
push
xchg
ljmp
insb
insb
xchg
adc
repnz
mov
push
roll
rorb
fisttpl
in
dec
sbb
dec
xor
aaa
xor
ret
sub
insb
pop
in
cmp
jmp
roll
cmpl
jmp
fcmovnbe
pop
adc
mov
sbb
addl
test
pop
shrl
or
xchg
hlt
das
faddp
cli
stos
jle
icebp
out
scas
inc
pop
jo
push
out
push
mov
jle
push
pop
push
xor
mulb
push
popf
cmp
dec
mov
dec
daa
popf
sbb
call
add
fdivrp
outsl
rcl
nop
out
inc
int
jecxz
popf
test
adc
scas
aaa
and
outsl
mov
dec
push
inc
cmc
aas
andb
adc
gs
loope
stos
push
dec
or
adc
sub
arpl
sarb
mov
pop
insl
xor
dec
ljmp
jo
xor
insl
xor
stc
mov
fdiv
inc
mov
push
cmpsb
mov
pop
mov
out
xor
sub
fidivrs
mov
add
pushl
pop
mov
stos
sahf
test
cmc
sbb
popa
jp
aad
rorb
das
add
adc
icebp
or
xchg
rcrl
mov
les
sub
stc
ss
and
push
dec
push
mov
data16
dec
mov
cwtl
mov
insb
or
aas
subb
movsb
mov
fildll
push
jbe
cld
pop
sti
sub
push
clc
ret
xchg
cmp
xchg
lods
test
ss
das
outsl
cmp
or
inc
cmpsb
lcall
pushf
pop
push
push
mov
push
mov
ret
sub
es
shrd
lret
or
lahf
in
adc
notb
mov
fcomi
cmpsb
add
mov
cs
fs
or
sub
inc
pushf
ja
in
test
jmp
mov
inc
sbb
mov
divb
bound
inc
lret
pop
adc
adc
mov
hlt
out
movb
std
xor
mov
mov
lret
or
push
inc
dec
out
ss
rorl
adc
imul
jne
popa
mov
es
sbb
ds
pop
adc
call
mov
xchg
addb
and
int3
mov
int
mov
and
sub
fisttpl
lcall
scas
inc
pop
or
bound
lahf
dec
loop
and
int3
push
mov
lret
outsl
lds
mov
mov
roll
lcall
aaa
jecxz
aad
js
imul
sbb
mov
cwtl
fcoml
ss
fadd
outsl
aas
add
popa
push
sbb
xor
xor
outsl
xorb
in
je
mov
fstpt
xor
mov
sub
inc
js
or
mov
jnp
out
imul
lret
mov
jl
dec
cs
mov
sbbl
nop
stc
leave
fidivrs
and
imul
notl
pop
mov
cmc
sbb
push
push
imul
adc
and
dec
xor
ss
push
pop
jo
mov
mov
not
jmp
add
daa
into
popf
test
add
scas
adc
loope
mov
imul
lcall
lds
jmp
cli
arpl
negb
mov
push
xchg
push
repnz
pop
scas
and
jmp
movsl
pop
inc
pop
mov
mov
jg
pop
pop
mov
inc
out
jg
push
mov
lods
pop
dec
lcall
je
push
cwtl
pop
data16
dec
clc
loope
lods
mov
out
pop
xor
mov
xchg
adc
loop
jp
mov
icebp
das
xor
or
data16
cld
adc
mov
mov
mov
or
mov
pop
jbe
jl
pop
cmp
in
mov
stc
lcall
sbb
or
test
sbb
cmp
daa
pop
mov
mov
mov
popf
loopne
lods
inc
inc
xor
ffree
dec
xchg
add
dec
aas
fs
ja
fnstcw
sti
sbb
movsb
popf
fiaddl
sub
inc
sub
cs
sbb
inc
or
cmpsb
xchg
repnz
inc
insb
inc
pop
incb
inc
push
popf
pop
push
fsubs
adc
sbb
daa
xchg
xor
cmpl
xchg
stos
mov
popl
jbe
inc
jmp
loop
mov
pop
or
cltd
mov
cmp
jge
lret
in
push
decb
sbb
daa
push
xor
xlat
and
sbb
inc
jge
xor
mov
lea
faddl
loope
loope
dec
xor
push
pop
lea
aas
and
lods
imul
cld
push
cmc
fldpi
adc
fdiv
dec
les
dec
ljmp
add
xchg
or
test
pop
xchg
pushf
gs
popa
sub
jg
adc
ss
daa
sarl
lds
mov
xchg
sbb
inc
adc
leave
fwait
arpl
add
aad
mov
jo
add
stc
pop
lods
mov
shll
cwtl
cld
push
popa
inc
or
mov
push
test
dec
dec
imul
aaa
pop
pop
lahf
inc
cmp
add
dec
popf
xorb
ror
or
les
addr16
ljmp
dec
pop
push
cmpb
mov
mov
incl
dec
mov
xor
stos
jne
sbb
inc
mov
mov
xor
aas
jl
mov
sbb
pusha
push
inc
pop
adc
int3
dec
or
jb
cmc
push
pop
stos
movsl
outsb
cld
mov
int3
adc
test
rclb
mov
lods
test
fcom
and
jne
fcmovb
jbe
iret
roll
test
repz
ss
inc
ds
outsl
movsl
mov
push
cwtl
mov
jb
movb
jp
or
jns
mov
lods
pusha
sub
and
lods
xorb
push
dec
push
mov
movsl
mov
push
xchg
mov
cli
jg
mov
mov
ja
movsl
mov
sbb
xor
ja
test
mov
inc
and
cld
fsubs
inc
cvtpi2ps
enter
pusha
cwtl
fiadds
lods
sbb
inc
in
loope
push
mov
pop
pop
jbe
test
lret
fistpll
sub
jo
lea
inc
xchg
insl
insl
aam
cmp
xchg
cmpsb
ss
jge
push
mov
add
sbb
mov
lock
fldenv
fs
xchg
lret
or
adc
mov
sbb
mov
mov
lods
cmp
cmp
push
je
monitorx
mov
dec
test
or
or
mov
inc
xchg
outsl
loope
mov
adc
sbb
lahf
lret
and
in
loope
or
scas
out
in
in
mov
mov
pop
js
mov
jne
mov
pop
test
sarl
adc
jge
or
mov
mov
fcompl
mov
ret
xlat
int
xchg
cmpsb
das
fs
lock
idiv
test
pop
or
pusha
pop
mov
out
xchg
ds
and
bnd
xchg
sbb
lret
das
dec
xchg
andl
inc
out
mov
test
cmp
scas
xchg
pop
add
mov
out
adc
xor
jge
and
nop
add
in
loop
insb
lcall
mov
inc
leave
pop
push
les
lcall
aaa
xor
mov
xchg
out
mov
lea
loopne
xchg
out
call
insb
jae
dec
cli
aaa
pop
nop
imul
add
inc
or
mov
sub
jl
push
add
xchg
jle
xchg
and
test
adc
loop
adc
ljmp
rcrb
popf
mov
das
inc
pcmpeqw
lcall
inc
and
sbbb
cmc
das
xor
sub
mov
loop
loopne
jp
inc
push
adc
and
aas
fldenv
cli
mov
test
repnz
or
push
jl
add
push
sub
or
clc
or
rcl
adc
pop
fs
insb
inc
in
rclb
jns
inc
aaa
cmpsl
lods
mov
add
data16
sub
dec
pop
test
sub
in
cmp
adc
pop
adcl
insl
adc
mov
lahf
dec
call
sbb
xchg
call
and
stc
cli
pop
sbb
fs
scas
lcall
xchg
fcomps
leave
sbb
mov
test
orb
xlat
pop
jl
mov
adc
lods
pop
mov
cmpsl
cmpsl
pop
pop
add
mov
jae
push
iret
iret
xor
hlt
xchg
cmp
mov
mov
fnstenv
add
pop
mov
or
jecxz
and
mov
mov
leave
dec
mov
addb
push
les
pop
fstpt
mov
stc
sahf
adcb
movsb
and
dec
pop
push
inc
insl
xor
mov
dec
dec
pusha
lar
push
mov
xor
or
xorl
cmp
stos
inc
rcll
movsl
dec
mov
xchg
enter
pop
adc
enter
jb
sub
cmp
jmp
or
push
push
and
sbb
push
aas
leave
add
test
push
cwtl
insl
popa
sub
jg
ljmp
orl
mov
je
arpl
mov
mov
xchg
test
mov
lods
fnsave
icebp
push
in
jp
cs
shll
dec
jmp
iret
or
jnp
sbb
pop
test
fidivs
xchg
inc
std
repz
mov
out
je
popa
mov
push
mov
adc
xchg
adc
test
nop
sub
or
lods
aas
shlb
cwtl
insl
push
stos
and
jne
jge
cmp
mov
divl
ljmp
ret
xchg
aam
jle
mov
add
mov
iret
loop
cld
ffree
sub
push
dec
adc
inc
cmove
scas
xchg
in
loopne
lcall
jnp
pop
jae
add
mov
mov
cmpsl
pop
jb
mov
and
dec
popa
add
sbb
dec
call
movsl
fwait
xchg
cmpsl
pop
pusha
mov
aas
push
subb
addb
rol
jmp
sbb
sub
rcl
pop
mov
nop
xchg
icebp
loop
pop
push
movsb
lret
daa
push
add
adc
inc
sbb
sbb
jnp
or
and
inc
ret
jmp
or
sbb
push
or
stos
mov
mov
jg
arpl
and
nop
add
cltd
clc
jmp
mov
add
in
aaa
inc
or
xor
add
jle
enter
mov
movsb
aad
mov
shrl
scas
shrb
sbb
mov
xor
sub
mov
dec
pop
jecxz
push
adc
out
jnp
mov
ja
dec
ffreep
dec
xchg
movsl
pop
inc
scas
cmp
cltd
shll
es
cld
adc
mov
aas
xlat
and
shll
jge
xorb
outsb
jmp
into
mov
outsl
xchg
aaa
pop
xor
mov
adcl
inc
fildl
in
out
in
pop
stos
dec
or
mov
sbb
pop
xchg
mov
movsb
xchg
ds
sub
mov
add
xchg
sbb
cmc
xor
mov
or
mov
shl
and
aas
hlt
adc
mov
inc
addb
clc
dec
ds
sbb
insb
leave
stos
sub
sti
lret
lods
adc
add
pop
insl
inc
pop
sbb
mov
sbb
jmp
clc
cs
es
dec
dec
cmp
mov
cmp
and
pop
adc
or
jecxz
mov
sbb
add
ja
js
jae
push
outsl
scas
jo,pn
xchg
cmc
jnp
adc
xchg
rolb
aad
and
js
dec
dec
dec
arpl
movsb
xlat
xor
push
mov
cli
sbb
push
fisubrl
mov
pop
mov
xor
dec
sbb
jg
sbb
into
aam
or
sub
shll
xchg
mov
or
mov
mov
rcrl
mov
movsl
repz
cltd
es
lds
hlt
call
fs
ret
dec
mov
adc
or
inc
push
sbb
loop
movsl
pop
sub
ds
test
adc
fisubrs
push
sub
push
jbe
testl
loopne
dec
inc
cmp
pusha
cmpsb
test
clc
pop
mov
xor
insl
jb
cmpsb
es
fwait
clc
and
mov
mov
call
xchg
insl
adc
adc
out
stos
push
mov
lock
push
mov
pop
pop
loopne
fs
push
incb
test
call
or
nop
adc
or
mov
fldl
mov
outsb
data16
loop
dec
mov
clc
sub
pusha
lahf
mov
mov
mov
test
inc
mov
int3
mov
add
nop
and
mov
and
sub
add
fucom
loopne
push
leave
scas
mov
sub
ss
push
mov
jae
inc
mov
lea
insb
aaa
lock
push
arpl
mov
mov
je
iret
sub
aad
or
lahf
lret
dec
mov
xor
push
inc
out
movsl
mov
aaa
hlt
dec
pop
movsb
andb
xor
std
push
bound
adc
iret
inc
mov
or
push
sub
adc
cmpsb
mov
mov
test
pop
mov
xor
pop
shl
addr16
fdivl
mov
mov
inc
mov
mov
xchg
mov
xchg
daa
out
lock
in
xchg
dec
jb
mov
ret
shrb
cld
int
imul
mov
lcall
pop
mov
add
aad
pop
xor
popa
dec
cmp
mov
dec
ret
and
paddq
cmp
push
out
push
test
pop
js
js
int
add
push
aas
mov
adc
imull
ret
jbe
pop
stos
repnz
push
adc
push
test
jo
orb
movsl
loopne
inc
loop
arpl
and
xchg
jmp
mov
dec
jno
stos
mov
jge
fildl
call
add
jl
or
or
test
inc
add
imul
lahf
add
push
clc
ss
sub
icebp
xor
mov
add
test
cmp
sub
clc
pop
dec
movsl
out
ret
pushf
pop
inc
push
lret
jbe
or
stos
push
xor
cmp
adcl
scas
rolb
fidivrl
clc
out
cmp
ds
insb
daa
push
xchg
pop
and
dec
andl
loope
test
popa
aam
rclb
mov
fiadds
or
cmp
mov
inc
pop
ror
jg
das
stc
adc
sti
adc
ja
and
or
imul
adc
iret
sbb
xchg
xchg
push
adc
sub
mov
fistpll
rcrl
test
je
push
jbe
xchg
popa
lahf
mov
or
mov
pusha
xor
jns
xor
push
arpl
fadd
and
push
lock
pop
jmp
insb
int3
mov
bound
add
dec
push
sub
pop
mov
std
icebp
add
lcall
adc
or
aas
pop
and
pop
inc
adc
add
incb
rorl
inc
xchg
add
push
out
mov
inc
mov
enter
clc
push
push
jne
and
call
cs
mov
or
add
and
mov
add
shlb
popf
dec
dec
notb
ss
mov
cld
add
outsl
ljmp
and
pusha
xchg
sub
mov
scas
pslld
mov
inc
dec
popf
scas
mov
jp
sti
shr
jns
push
jecxz
mov
xor
dec
aam
adc
pop
xchg
xor
xchg
mov
shll
std
in
dec
sub
das
fidivs
rcrb
or
mov
test
jecxz
jmp
int
cltd
mov
xchg
adc
xor
cmc
inc
sub
pop
mov
inc
push
dec
mov
jb
mov
das
pop
loop
dec
dec
adc
cld
and
loop
push
cmp
call
cmp
xchg
mov
inc
shll
sti
repz
sbb
jmp
sub
sarb
mov
cli
pop
mov
lods
pop
nop
fidivrs
jg
jbe
out
ljmp
iret
cmp
fs
xlat
hlt
fucomip
imul
icebp
pop
mov
mov
jo
das
inc
dec
shlb
mov
nop
push
pop
lcall
xor
jae
stc
insb
outsl
loopne
arpl
xor
out
adc
fildl
or
xchg
fisttpl
mov
jecxz
and
adc
adc
sbb
je
and
lds
inc
cs
sub
out
add
fstl
push
mov
int
jle
scas
pop
test
fisubl
xchg
lods
xor
mov
sbb
inc
repnz
jne
dec
adc
imul
rol
xchg
xchg
mov
sub
push
scas
add
push
mov
pop
or
add
adc
loope
lds
sub
jno
xor
mov
test
test
mov
adc
aaa
rorb
movsb
inc
sbb
or
fninit
sub
pop
push
fmuls
mov
sbb
or
cmc
pusha
cmp
xchg
cli
xor
dec
test
inc
or
stos
mov
push
pusha
add
dec
hlt
rcrb
dec
cld
das
cmp
xchg
pop
lea
or
arpl
fiadds
jecxz
sarb
in
leave
in
xor
inc
fists
das
mov
sahf
test
ss
popf
inc
pop
mov
and
jg
xor
insb
dec
js
pop
pop
jo
loop
xchg
add
pop
test
data16
jmp
orb
clc
adc
mov
rolb
dec
add
lcall
inc
inc
inc
in
and
mov
mov
and
andb
dec
and
arpl
mov
push
mov
xchg
out
out
dec
mov
out
clc
and
test
aaa
mov
shrb
fwait
aad
or
jbe
fldl
shll
push
inc
popa
push
ljmp
daa
inc
add
popf
add
jmp
test
mov
mov
jo
mov
xor
sbb
test
xor
inc
shr
cmp
or
sbb
cmpsb
cli
outsl
sub
xchg
sbb
pop
ljmp
adc
fwait
mov
adc
icebp
test
pop
in
xor
push
jge
outsl
mov
xor
pop
cvtps2pd
pop
fsts
or
push
xchg
dec
lret
out
clc
pop
add
cwtl
jmp
push
push
int
pop
xchg
daa
mov
je
mov
jg
or
cmp
pop
out
orb
fbld
mov
push
call
shrb
mov
test
pop
popa
sbb
push
out
mov
xor
inc
rorb
xchg
or
jp
sbb
loope
lahf
fs
and
xor
stos
outsl
mov
divb
fnstcw
pusha
inc
in
jns
push
cmpsb
jle
pushl
pop
filds
gs
clc
pop
data16
or
sbb
push
xorb
outsl
push
bsr
popa
or
sbb
aad
ljmp
scas
mov
sbb
in
and
and
dec
mov
pop
lds
adc
inc
fs
pop
add
sbb
out
xchg
add
jmp
xchg
jne
sub
loop
xlat
inc
sbb
push
inc
movsb
les
ret
adc
xor
mov
dec
aam
jns
add
rolb
jne
or
mov
call
xchg
cmpsb
mov
adc
scas
addb
outsl
sub
push
lea
sub
int
mov
imul
imul
outsb
mov
push
pop
dec
jnp
or
std
jbe
mov
xchg
out
scas
jecxz
pop
mov
mov
mov
inc
lcall
pop
icebp
pop
dec
mov
nop
es
push
int
adc
sahf
fcomp
vcvtsi2ssl
loopne
jl
add
add
andb
leave
push
ja
pop
test
cli
xchg
loopne
inc
outsl
mov
sub
pop
and
lock
lods
loopne
push
jb
cmp
pop
cmc
repnz
or
mov
movsb
popf
adc
mov
call
adc
jno
mov
popf
pop
mov
pusha
add
inc
aam
push
lods
or
lahf
fisubrs
mov
cld
sarb
sbb
xchg
les
mov
adc
bound
cmp
andnps
jne
test
add
loopne
fisubs
daa
push
stos
hlt
pop
mov
hlt
fcmovnu
cli
popf
cltd
ja
add
arpl
enter
fistpll
push
ret
xor
jge
ret
and
clc
or
mov
pop
std
and
movsb
adc
cmp
test
mov
rolb
cltd
clc
ds
movsb
sahf
clc
sbb
loope
add
dec
jmp
cmp
out
lock
adc
inc
mov
mov
pop
adc
ljmp
xor
inc
ss
sub
loop
fistpll
mov
add
lea
inc
icebp
lds
loope
inc
aam
clc
or
xor
mov
mov
hlt
xchg
add
mov
jle
and
bound
mov
cs
inc
shlb
push
pop
es
xorb
push
ret
add
xchg
jmp
gs
ficompl
mov
jo
fbstp
push
cmp
aad
mov
inc
sbb
lds
pop
pop
cmp
sbb
hlt
jns
and
cwtl
cmpsb
pop
xchg
jp
adc
je
in
js
loop
test
lret
ret
cmpsl
push
jle
mov
xor
xor
pop
sar
addr16
loopne
lods
xor
sti
stos
fsubrs
xchg
push
jge
js
pusha
sub
pop
pop
popa
push
data16
pop
orl
pop
ss
push
pop
inc
insb
shrl
dec
adc
mov
push
fiadds
inc
or
icebp
pop
test
cmc
fnsave
or
insl
inc
jge
cmpsl
xchg
in
stc
or
xchg
outsb
mov
cltd
test
mov
add
xchg
adc
sub
push
shrl
roll
xchg
in
xchg
xchg
jbe
imul
adc
orl
lret
cmpsl
clc
cmp
and
aad
mov
xor
and
rclb
lock
jne
sub
popa
pop
ss
shll
cmpsb
or
roll
ret
iret
sbb
mov
rcrl
lds
mov
test
in
jecxz
insl
and
jecxz
push
ljmp
inc
and
push
mov
lret
ljmp
rcll
jg
mov
push
sbb
cltd
dec
mov
pop
pop
clc
jg
inc
add
push
les
and
test
ss
test
push
stc
pop
and
inc
clc
ja,pn
out
mov
shll
or
push
aaa
rcrl
push
or
repz
inc
mov
icebp
fistpl
cmp
inc
cmpsl
jle
std
xchg
pop
dec
xchg
add
leave
sti
and
adc
aad
sbbl
and
popa
jle
mov
jge
sub
cwtl
sub
or
or
jle
mov
cmp
mov
scas
adc
or
ret
outsl
gs
adc
mov
push
push
popa
dec
inc
xor
add
jmp
xchg
outsb
mov
fistl
inc
mov
or
sbb
in
adc
js
mov
cmp
enter
mov
popa
add
in
leave
cmc
pop
lock
loop
imul
outsb
lcall
test
les
fcompl
push
and
inc
repz
pop
add
sbb
roll
cmpsb
bound
and
mov
mov
ss
in
inc
xor
add
mov
daa
sbb
push
jae
aam
mov
rcrl
cmpsl
mov
or
sbb
push
or
inc
pop
adc
jg
in
push
out
push
daa
lods
inc
stos
xchg
adc
inc
sub
adc
outsb
jmp
aam
cld
mov
mov
or
inc
icebp
fisttpl
ret
mov
push
outsl
sbb
pop
adc
and
sub
and
mov
lret
clc
dec
stos
add
mov
lahf
jnp
jecxz
pop
mov
inc
cltd
jno
mov
sub
test
mov
shrb
inc
push
rolb
push
adc
jmp
pop
xlat
cmpsl
mov
lds
pushf
dec
xor
mov
pop
out
ds
mov
jmp
mov
jne
pop
fistpll
loope
xor
adc
pushf
push
ljmp
cmp
aaa
cmp
adc
bound
sub
inc
mov
int3
cli
jg
sbb
push
test
mov
sbb
pop
into
pop
adc
rcrb
adc
mov
or
jae
mov
lock
push
or
add
test
xor
pop
mov
pop
lea
or
mov
pop
bound
mov
lahf
dec
cmpl
test
mov
jmp
cmp
mov
inc
adc
mov
adc
jne
adc
jg
add
xchg
movsl
in
sub
shl
mov
push
jge
scas
mov
xchg
xlat
jmp
insb
or
iret
inc
dec
and
and
ljmp
adc
add
fidivs
test
hlt
inc
rcll
cmp
outsl
xor
cmp
xchg
movsl
and
enter
add
mov
fnstcw
fistl
ss
ja
pop
xlat
test
or
js
push
fisubl
mov
push
jmp
inc
push
movsl
mov
mov
test
ds
sub
pop
mov
jbe
bound
icebp
inc
push
and
pop
lds
cld
and
mov
js
cs
push
outsb
fdivl
outsb
adc
je
pop
xor
dec
jg
pop
dec
xor
out
fadd
adc
stos
add
fldt
ret
push
mov
xor
and
call
push
cmp
loope
and
or
arpl
insl
inc
and
and
mov
jmp
push
pushf
sbb
pop
sbb
je
scas
jle
mov
and
hlt
sbb
test
or
xor
cmpsb
add
mov
out
sarb
pop
adc
add
cmpsl
into
in
mov
pop
popa
xor
sbb
les
pop
inc
cmpsb
lods
stos
aad
fildll
push
jle
and
xchg
jl
mov
xor
sbb
in
mov
mov
add
aas
mov
mov
ja
mov
add
ret
test
push
out
fs
add
dec
imul
outsl
jle
adc
push
xchg
jae
out
add
loopne
int3
xchg
sbb
mov
xchg
cwtl
sbb
cmp
loopne
ja
pop
cmp
xchg
mov
mov
shlb
dec
push
mov
gs
adc
andb
inc
sub
sti
aad
das
inc
fwait
xchg
int3
dec
das
adcb
int
sahf
pop
addl
adc
fistps
pusha
mov
mov
ret
imul
or
js
lods
dec
dec
xchg
and
lcall
lds
loopne
mov
out
rorl
and
negl
fistpll
mov
outsb
mov
sub
inc
xchg
shll
jl
adc
ficoms
inc
mov
std
fldt
mov
out
and
push
int3
xor
xor
sbb
fistpl
and
adc
pop
ret
push
cs
adcb
testb
and
sar
sbb
push
test
push
dec
test
dec
aas
repz
sbb
sbb
pushf
xchg
push
in
and
xchg
cld
lock
loop
lret
jo
add
outsl
clc
repz
lea
pop
pop
ja
cltd
orl
outsl
dec
jle
or
pop
sub
cmc
in
push
cld
dec
adc
dec
push
test
fimull
in
push
xor
add
push
ret
test
add
inc
iret
cwtl
adc
mov
clc
out
add
push
add
sub
popa
xlat
jmp
aas
ss
addr16
sbb
jle
pop
push
push
subb
xchg
push
xor
mov
pop
or
inc
loop
adc
jge
cmpsb
enter
insl
aaa
lock
fdivl
and
ja
inc
pop
sub
jg
mov
orb
xchg
inc
out
lea
lods
sub
das
add
push
add
add
test
and
mov
ss
pusha
testl
fistpl
xchg
push
adc
stos
daa
or
jmp
loopne
es
and
mov
call
sbb
sub
mov
xchg
and
pop
xchg
adc
ss
and
and
cmpsl
stc
or
push
lret
xchg
andb
jle
xchg
or
faddl
dec
cltd
jecxz
xchg
clc
inc
stos
fdivl
or
inc
mov
mov
xchg
cwtl
es
or
jbe
roll
xor
sbb
mov
gs
imul
pop
das
sti
jg
mov
xor
scas
mov
or
xorl
fpatan
sbb
testb
mov
and
adc
js
hlt
stos
pushf
ss
testb
fiaddl
cmp
jecxz
mov
aad
and
sbb
pop
mov
iret
jo
es
adc
add
cmpsb
aas
faddl
inc
pop
cmp
sbb
cmpsb
push
subb
lods
inc
loopne
movsb
or
mov
mov
aad
xor
in
insb
sar
adc
mov
inc
add
test
das
cs
pusha
shll
fwait
mov
pop
xchg
cmp
xchg
and
inc
push
dec
cmc
or
pop
xor
adc
orb
scas
faddl
push
jmp
inc
fwait
les
sub
mov
push
mov
fs
inc
push
pop
mov
mov
mov
dec
pop
lcall
bound
push
xchg
push
cmp
sti
pop
loop
dec
mov
add
and
ficoms
dec
mov
inc
and
addr16
in
cmp
test
sub
addr16
ds
sub
loopne
fwait
loopne
cld
mov
hlt
or
call
and
xor
loope
and
adc
addr16
mov
fdivr
cmp
je
aaa
les
es
sub
imul
sar
xor
roll
insl
orl
test
sbb
mov
enter
mov
mov
leave
rclb
ljmp
imul
cwtl
fs
jb
mov
test
xchg
les
dec
mov
lahf
insl
emms
lret
adc
mov
inc
cmp
es
dec
fs
inc
rol
mov
push
fs
hlt
adc
cmp
sbb
push
push
xlat
aaa
decb
jb
add
sbb
in
xor
arpl
push
addl
sbb
jp
xchg
stos
push
inc
jns
pop
ljmp
xchg
lcall
ds
fwait
pop
loopne
loop
cmp
repnz
and
pop
imul
xor
std
add
or
inc
js
cmpsb
loopne
adc
aam
ja
mov
loop
in
adc
mov
pop
pop
orl
inc
icebp
loopne
loope
popa
stos
add
push
divl
xlat
jmp
mov
stos
popf
aas
bound
std
inc
mov
adc
and
inc
out
and
push
test
bound
adc
and
sub
cltd
xor
decb
insl
jnp
ror
fisubrs
lahf
fsubrl
aam
mov
cmp
fidivl
lock
out
push
ja
inc
adc
call
out
and
lods
mul
fcomi
dec
pop
out
popl
push
imul
fnsave
push
ret
mov
ljmp
stos
jge
test
out
xor
sbb
fstpt
test
push
mov
add
mov
inc
mov
pop
je
into
push
loop
pushl
mov
pusha
xor
stc
fdivr
push
insl
clc
mov
jne
cmp
or
pop
movsl
ljmp
xor
mov
jno
sbb
push
mov
sub
mov
mov
data16
push
icebp
scas
lcall
daa
push
fxch
xor
mov
popa
cltd
sbb
jno
cmp
pop
pop
shlb
and
loop
sbbl
cmp
mov
fdivrp
mov
leave
and
rolb
jnp
lcall
jp
ret
xor
inc
adc
inc
sub
jno
fildll
lahf
cmp
clc
stc
popa
xchg
cltd
das
mov
lock
pusha
inc
jbe
pop
outsl
imul
ret
ret
fisttpll
pop
pop
andb
sub
push
cmpsb
xchg
dec
cmpsl
xchg
imulb
pop
insl
or
add
dec
shlb
aam
std
fucomp
pusha
aam
outsb
mov
notb
or
gs
imul
popf
cld
add
dec
out
mov
adc
adc
mov
dec
xchg
addr16
outsl
jp
push
push
dec
insb
aaa
lret
in
fidivl
xlat
ja
in
outsb
insb
sbb
add
test
mov
mov
loope
sub
outsl
mov
fsubs
mov
lock
adc
push
dec
or
ret
dec
mov
hlt
aam
xchg
stos
mov
test
pop
call
inc
mov
mov
cld
ret
jle
inc
add
cmp
imul
mov
xchg
xchg
mov
sub
icebp
ss
test
xor
sbb
leave
xchg
call
pop
adc
in
fisttpll
pop
xor
mov
mov
dec
lock
adc
shlb
jae
aam
lods
clc
fistps
mov
sub
or
test
loop
arpl
dec
jnp
in
ffreep
pushl
loopne
js
les
test
mov
scas
ret
outsl
sub
cs
shl
xchg
inc
leave
adc
and
mov
pusha
cli
mov
xorb
jno
pop
lods
push
addr16
pop
popa
testb
cmp
add
test
je
and
cs
outsb
mov
loopne
leave
mov
mov
mov
and
sub
mov
dec
outsl
xor
jge
mov
out
and
loopne
rol
shll
arpl
shlb
or
shl
test
out
push
jmp
and
aaa
outsl
add
sbb
pop
inc
adc
add
mov
test
push
xor
inc
xchg
fists
jo
rolb
rcrl
test
mov
xchg
cmp
mov
bound
sub
loop
outsb
pushf
xchg
and
pop
cwtl
lcall
hlt
mov
jge
mov
lock
loope
push
xor
pop
jmp
jns
in
les
into
test
cmp
out
testl
xchg
not
jle
les
cmp
jg
lcall
cmpl
xor
iret
les
insl
dec
lods
aaa
aas
adc
cs
insl
inc
arpl
nop
xchg
mov
pop
ljmp
cmp
arpl
iret
imul
ljmp
sbb
ja
cltd
and
jnp
inc
jb
and
jno
sub
push
mov
jno
shll
inc
mov
inc
lret
clc
dec
jecxz
pop
addl
daa
inc
lcall
adc
jge
int3
xor
aam
xchg
int3
sbb
ljmp
xchg
or
pusha
test
es
xor
jle
or
sub
pop
sub
mov
movsl
cmc
add
inc
dec
push
insl
pop
js
pop
sub
inc
jmp
sti
adcb
dec
aad
rol
mov
push
dec
adc
mov
fbstp
fstl
movsl
fistpll
xchg
or
shr
and
cwtl
fcoms
mov
xchg
jecxz
std
loopne
inc
jmp
cld
mov
hlt
cmpsb
fwait
es
inc
ss
jb
push
clc
mov
std
xchg
pop
test
fs
mov
pop
xchg
inc
iret
daa
js
jge
adc
aas
testb
movsb
mov
push
adc
scas
adc
pop
and
pusha
imul
and
imul
xchg
and
das
mov
shll
jp
ljmp
mov
and
pop
jno
aas
push
pop
shrb
sub
into
inc
inc
popa
xchg
lret
add
dec
test
pop
outsb
je
lcall
or
imul
jnp
out
lcall
or
jnp
ficoms
add
icebp
pop
loopne
fdivp
lock
pushf
lea
push
stos
mov
jb
lcall
xor
out
xor
mov
popf
mov
jmp
icebp
out
leave
pop
adc
mov
xchg
and
jle
rcr
cli
sbbl
mov
jae
fists
sbb
movsb
dec
inc
popf
push
in
outsl
cli
ret
and
ret
xchg
repnz
outsb
jl
jl
out
inc
test
scas
xchg
mov
mov
xor
push
sub
adcl
in
xchg
loope
out
movsl
pusha
das
inc
sub
int3
jb
ljmp
cld
push
add
sub
icebp
push
jl
jmp
push
mov
cmp
cltd
sbb
loop
pop
adc
push
ds
jnp
pop
pop
in
out
xchg
and
in
lods
sti
ljmp
jbe
cmp
adc
or
jecxz
jg
outsl
mov
ds
jns
sbb
cmp
push
test
lock
jno
inc
daa
mov
rcr
inc
pop
push
test
lret
faddl
sbbb
jmp
jecxz
sbb
mov
scas
fstl
jp
sbb
faddp
ficoml
sub
mov
cli
and
aad
or
sbb
and
sub
adc
or
xchg
loop
mov
outsl
xor
push
inc
sub
inc
push
add
xor
mov
dec
mov
stos
inc
add
inc
push
push
pop
test
pop
cmp
sbbl
pop
cmpsl
sti
fdivrl
insl
lods
mov
sbb
dec
push
pop
mulb
je
addr16
test
fidivrl
mov
pop
jg
ds
sub
cmp
scas
rorb
mov
stc
inc
cld
jg
out
js
push
jge
je
adcb
mov
test
adc
sti
lret
cltd
das
dec
cld
repnz
adc
adc
test
into
add
cld
push
bsr
sbb
enter
arpl
int3
xor
fcmovnbe
adc
push
mov
punpcklbw
inc
pop
loop
mov
adc
dec
outsl
and
lds
add
mov
stos
pop
pusha
mov
loope
xchg
jbe
sbb
es
and
add
cli
ret
lret
pop
dec
cmpsl
sub
sahf
ja
pop
pop
dec
es
xlat
daa
fisttpl
pushf
pop
lret
sahf
sub
rcr
sbb
and
daa
push
xchg
mov
aad
mov
cwtl
insl
fucomip
mov
push
jmp
mov
frstor
pop
cmpsl
dec
test
add
leave
int
les
xchg
fisttpl
rcll
add
adc
add
lret
aas
shrl
add
lret
push
xchg
mov
incb
and
outsl
inc
arpl
mov
test
or
icebp
shl
outsb
xor
ss
ja
xchg
test
mov
loopne
jns
jecxz
mov
popf
dec
inc
adc
call
cmp
mov
mov
repz
fdivrs
repz
aam
cmp
rorl
inc
mov
push
mov
inc
jl
adc
in
rcll
aaa
movl
xor
ljmp
cli
cwtl
clc
ss
adc
cld
cmp
stos
iret
pop
mov
pushf
dec
insb
mov
and
dec
icebp
dec
out
cli
out
pop
aas
rorl
push
and
add
xor
fists
jb
pop
test
and
jbe
call
push
mov
dec
pop
fwait
test
mov
jle
dec
fisttps
mov
mov
clc
pop
jb
movsb
stc
cmp
adc
jbe
dec
lock
sarl
xchg
mov
fildl
dec
sub
fnstcw
shll
scas
xchg
or
add
arpl
cwtl
inc
int
out
icebp
mov
lea
jo
and
push
adc
pop
jge
in
cld
stos
stos
insl
test
adc
pop
mov
push
adcb
sub
sub
push
add
xchg
loopne
mov
sub
and
pop
aaa
sub
pop
clc
insl
mov
pop
sub
icebp
xchg
sbbb
sbb
andb
pop
adc
jl
ja
add
outsl
cmp
mov
or
and
jns
jl
aaa
cmp
sbbl
sbb
and
push
das
bnd
inc
push
movsl
and
push
inc
jl
shll
pop
push
mov
mov
or
sbb
loopne
xor
xchg
jnp
mov
mov
cmp
jg
jl
nop
jb
add
sti
testb
and
mov
pop
sub
insb
xorb
xor
lcall
jecxz
nop
cmp
repz
test
daa
addl
rcr
ret
inc
bound
rorl
clc
push
mov
adc
outsl
pop
cltd
outsl
jp
cs
popf
dec
popa
dec
pop
inc
inc
out
jle
call
adc
rorl
es
stos
scas
inc
insb
adc
in
imul
xchg
je
scas
es
das
mov
ljmp
cmp
sub
mov
es
or
add
push
jge
sbb
or
pop
sub
cmc
mov
cwtl
iret
sbb
rorl
ljmp
sub
loope
add
pushl
es
adc
mov
cmovg
mov
loopne
cmpsb
mov
jo
dec
imul
inc
xchg
or
dec
mov
inc
lcall
push
and
sbb
adc
stos
stc
adc
push
dec
xor
daa
repz
mov
ret
xor
or
push
inc
and
fadd
js
sub
inc
adc
test
jp
movsb
or
jne
movsl
aas
shrb
cmpsb
sbb
pop
repz
add
shll
mov
dec
or
fidivl
fsubrl
push
sub
out
xor
std
sarb
stc
ja,pt
mov
out
out
push
ret
addb
adc
int3
jmp
mov
loope
loope
lods
loop
push
test
popf
jae
jno
decb
movsb
movb
mov
lock
mov
xlat
daa
imul
ss
loopne
fwait
pcmpgtw
std
ret
lea
pop
mov
mov
test
pop
and
inc
dec
add
pop
fmulp
adc
sbb
sbb
push
inc
cmpsl
inc
test
fucomip
pop
mov
mov
daa
cmp
andb
sbb
xor
cld
adc
nop
and
xor
add
cwtl
sub
jnp
call
or
dec
aaa
pop
int3
loopne
pushf
push
sbb
int3
or
inc
pop
pop
arpl
stc
pop
mov
aaa
mov
and
mov
in
ja
cld
pop
rcrb
shll
jno
pop
and
loop
sarl
sub
mov
xchg
pop
pop
cwtl
mov
lock
int3
pop
icebp
inc
cmp
enter
push
lock
hlt
outsl
insl
jl
sub
add
mov
and
jmp
rorl
lret
add
mov
pop
lock
lret
cmp
jge
add
inc
mov
mov
fadd
dec
das
fildl
mov
ret
push
lock
add
lret
sbb
fsubl
or
pop
int
rep
cwtl
mov
cli
repnz
fwait
or
data16
scas
gs
pusha
dec
das
lds
inc
xchg
dec
pusha
lret
movsl
inc
add
fs
mov
mov
mov
and
daa
scas
jne
pop
sub
loop
xor
loopne
pop
sbb
and
mov
inc
mov
sub
jmp
mov
mov
dec
ss
dec
pop
clc
das
jno
cmp
xor
xor
insb
int3
mov
lds
dec
inc
add
dec
es
hlt
adc
mov
mov
jb
outsb
push
test
mov
hlt
pushf
inc
les
mov
push
ja
loopne
fisubrs
sbb
outsb
insb
jg
in
push
filds
in
pop
add
lods
mov
fiadds
mov
pop
dec
insb
dec
in
je
jg
stos
test
adc
mov
add
xchg
mov
adc
sub
mov
sbb
push
faddp
rcrl
gs
loop
mov
push
pop
adc
push
add
adc
xchg
mov
pop
ret
xchg
lds
cmp
add
sarb
subl
pop
push
mov
mov
adc
inc
add
stos
inc
rolb
inc
cli
xchg
cld
mov
push
in
or
hlt
stc
jo
out
mov
push
xchg
mov
mov
add
clc
add
cmp
sbb
arpl
scas
adc
js
inc
jg
fbld
rorb
jnp
nop
cmp
push
mov
pop
ds
jge
in
jns
lds
test
cmp
jle
pushl
and
xor
pop
push
push
ret
call
jecxz
mov
aam
push
mov
fnstsw
and
cmp
insb
add
and
out
test
movsb
mov
aaa
loopne
push
pop
and
xchg
rorb
dec
push
mov
fs
jle
cmpsl
es
mov
and
mov
mov
xchg
sbb
fucomip
shl
jg
sar
inc
adc
inc
dec
cmp
mov
stc
inc
in
stos
jle
sahf
outsb
mov
mov
stos
je
xor
out
mov
mov
pop
or
jo
or
push
pop
test
dec
cld
mov
xchg
mov
mov
shll
add
sti
push
mov
fsubr
cmp
loop
cli
aas
push
jbe
pop
dec
sbb
cwtl
xor
pop
mov
mov
and
mov
mov
sbb
fildll
lods
cmp
in
sbb
sub
call
or
pusha
mov
mov
mov
mov
popa
ljmp
mov
add
sbb
lret
push
aas
test
mov
and
push
jmp
and
loope
add
movsb
dec
mov
out
loopne
outsl
clc
push
push
bound
jae
sub
sub
repnz
xchg
lret
js
xor
out
lcall
in
inc
enter
sbb
mov
jle
sub
out
notl
xor
mov
imul
xchg
xor
aas
scas
cmp
mov
sub
xor
mov
adcb
cmp
es
jl
fisubrl
imul
pop
dec
or
cmpb
test
sbbl
inc
in
incl
jl
in
mov
dec
cmp
and
mov
roll
cmp
sbb
inc
dec
ja
jg
outsl
outsl
push
jp
xchg
and
pop
sahf
fcom
or
push
or
dec
push
push
pop
outsl
fildl
insb
pushf
test
cs
push
test
mov
out
push
cld
stos
mov
xor
xchg
mov
int
js,pt
mov
mov
cmp
ja
pop
push
dec
out
clc
fisttpl
insl
lea
rcrb
fdivrl
sub
add
rcrb
mov
or
add
adc
xchg
arpl
xor
cmpsl
mov
ret
xlat
mov
adc
push
fmulp
jecxz
inc
cmp
shlb
stos
leave
inc
sbb
mov
or
gs
mov
fnstsw
nop
daa
mov
sub
jae
xor
sarb
and
dec
or
push
dec
and
mov
jecxz
xor
add
cli
push
mov
pop
je
add
test
jg
jbe
push
movups
incb
imul
insb
test
sbb
pop
sti
dec
jl
fwait
je
lds
repz
sbb
aam
loopne
or
mov
pushf
fldcw
pop
ljmp
dec
mov
lcall
push
or
and
mov
inc
jmp
sbb
adc
aad
dec
cld
test
xchg
pop
mov
and
sbb
lahf
scas
fstpt
adc
rol
jb
sub
sbb
out
mov
xchg
mov
cmpsb
mov
rorb
je
std
push
clc
fsubr
and
push
bound
add
xor
mov
add
xor
andl
jbe
lods
mov
imul
inc
ret
mov
subb
pop
and
popa
mov
jno
adc
mov
sahf
push
enter
push
dec
or
push
or
aaa
std
or
leave
and
in
add
pop
jg
push
mov
xor
in
mov
stc
mov
rcrb
push
aad
fistpll
xchg
xchg
loop
addr16
cwtl
pop
pushf
push
add
stos
sbb
jne
inc
in
mov
jno
and
add
adc
out
mov
pop
mov
dec
pop
test
shr
inc
das
test
fwait
mov
and
add
in
pop
cmp
and
dec
or
xor
stos
push
mov
adc
and
add
or
xchg
push
scas
mov
lahf
scas
lock
and
enter
adc
adc
in
mov
fmuls
or
lods
pop
pop
dec
inc
sti
aas
sub
mov
jmp
dec
inc
decl
pop
xor
aas
xchg
loop
xor
push
adc
lahf
orl
stc
inc
inc
xchg
sub
addr16
rcrl
divb
inc
test
adc
icebp
fwait
jecxz
push
outsl
or
fmuls
jmp
test
shlb
daa
mov
into
sbbl
mov
aam
mov
mov
lcall
sbb
or
mov
stc
leave
mov
jo
rclb
mov
aam
jbe
inc
out
add
call
outsl
rolb
jnp
lods
or
pop
mov
sbb
xchg
rol
mov
mov
push
mov
cltd
adcl
mov
jg
inc
mov
pop
call
sbb
dec
push
ds
xor
sarl
inc
out
jne
and
mov
sub
jmp
aad
and
popa
cmp
pop
stos
in
pop
stos
mov
sarl
shlb
and
mov
dec
xchg
jmp
adcb
or
add
rorb
add
cs
cmp
push
adc
imul
cmp
sbb
loope
pop
enter
sbbl
sub
pop
or
or
loope
outsb
mov
push
jl
xor
cmpsb
je
fwait
pop
add
xchg
sub
out
or
mov
test
mov
lea
mov
jb
fsubs
out
dec
bound
and
out
mov
or
xchg
mov
pop
fs
call
clc
ja
stc
push
sbb
dec
sub
pop
sbb
add
mov
push
pop
repnz
or
mov
aad
mov
lahf
into
fmuls
out
mov
insl
lods
cli
das
and
mov
cmp
mov
lahf
sub
xchg
or
imul
loopne
icebp
adc
xor
shrb
subb
inc
pop
push
lea
adc
or
lret
js
call
int3
jl
mov
pop
stc
jmp
in
cmpsb
icebp
movsl
lods
arpl
dec
jecxz
jo
popa
cmp
ror
jp
sbb
mov
imul
out
pop
fldenv
xlat
sbb
mov
lods
negl
and
push
xchg
push
lcall
dec
js
rolb
push
pop
popa
repz
jb
push
jmp
pop
addr16
add
pop
cmp
push
jns
test
cld
dec
and
mov
pop
js
repz
inc
mov
test
pop
inc
dec
sahf
jmp
cmp
ds
lds
loopne
pop
xchg
aaa
inc
ret
jle
cmc
outsl
in
leave
fs
mov
pop
imul
push
fwait
adc
outsl
jo
cmp
out
fldt
shlb
fidivs
sbb
rclb
idivb
xlat
sti
mov
or
dec
pop
or
movsb
jle
ret
mov
push
insl
pop
push
adc
inc
adc
sbb
mov
xor
fisubrl
add
out
jge
cmp
clc
xchg
add
cmc
jl
push
cltd
mov
cmp
dec
xor
mov
xchg
mov
test
add
mov
cmp
shr
jecxz
mov
insl
das
orb
outsl
cld
mov
sbb
adc
cli
rcrb
sub
push
ret
sub
in
jle
cld
inc
inc
xchg
pop
les
ret
lds
mov
adc
or
pop
cmp
or
pop
sbbb
inc
xor
or
loop
xchg
int
mov
dec
adc
fs
ret
or
push
inc
adcl
fstps
jno
fcomp
xor
mov
sbbb
adc
inc
adc
cmp
aaa
test
xorb
fwait
inc
ret
out
and
ss
xchg
pop
fimull
jle
xor
or
adc
dec
test
mov
stos
outsl
mov
xlat
dec
insb
out
inc
adc
sbb
add
leave
data16
test
out
sbb
mov
test
insb
sbb
sbbb
fdivrs
push
and
rol
mov
hlt
and
clc
or
icebp
mov
aaa
pop
mov
iret
outsl
mov
jmp
insl
mov
jp
out
pop
adc
jmp
sub
lcall
xor
cmpsb
fcom
xlat
in
and
dec
pushl
aas
sub
or
test
adc
sub
xor
fptan
jg
sti
testb
cli
sbb
aam
mov
xchg
int
pop
cld
add
cli
push
jle
xchg
sbb
mov
adc
push
sbb
pop
mov
loopne
cmpsl
test
sub
jo
mov
push
sbb
cs
jge
push
mov
push
loopne
in
mov
jmp
jle
adc
sub
call
cwtl
add
adc
jecxz
stos
loopne
enter
dec
push
mov
shll
stc
iret
adc
push
test
adc
pop
pop
test
inc
dec
jb
push
sub
or
sbb
loopne
and
popf
jl
pusha
clc
push
xchg
mov
lods
jae
jne
mov
mov
cmp
fiaddl
cmp
mov
pusha
scas
xor
jg
out
lds
test
sbb
sbb
jl
cmpsl
ret
gs
decb
cmp
testb
cltd
int
popa
inc
jg
movsl
scas
xchg
fs
adc
das
xor
loopne
test
nop
out
pop
or
das
xor
in
cmpb
mov
xchg
fstpl
xchg
add
pop
xor
loop
push
or
loope
jp
adc
jo
fmull
sbb
mov
push
pushl
or
add
in
push
lret
dec
nop
dec
inc
pop
call
lock
add
fs
cmpsl
mov
jb
jnp
sbb
sub
fistpl
inc
cwtl
inc
inc
cmp
and
push
jle
pop
and
ficomps
mov
cmpsl
or
xor
inc
add
hlt
jg
lods
lahf
mov
cli
cmp
and
jmp
cmp
out
sbb
mov
dec
inc
mov
imul
push
sub
mov
sarb
imul
je
add
push
add
pusha
sub
rcll
push
pop
push
push
shr
bound
clc
cmpsb
test
push
xor
add
add
ljmp
repnz
dec
decl
js
jb
sub
std
es
imul
pop
push
cmp
pop
jo
icebp
cmpsl
pop
push
loop
lock
mov
mov
aas
sbbb
sti
mov
jbe
add
lret
stos
std
arpl
mov
dec
cmp
push
call
or
jbe
push
dec
je
jb
sub
and
add
out
outsl
sbb
sbb
cmp
inc
scas
popa
xchg
add
das
je
scas
jmp
xchg
ljmp
jmp
jo
add
xchg
push
or
out
or
sub
jle
fst
scas
movsl
dec
dec
pop
mov
inc
mov
jl
es
lods
mov
loop
test
mov
pop
mov
jae
mov
icebp
xlat
mov
mov
mov
cmp
ret
xchg
call
insb
xchg
mov
hlt
xor
mov
rclb
insb
stos
or
push
repz
stos
xor
jmp
sbb
fwait
or
hlt
inc
loope
sbbb
lret
jg
and
pusha
dec
cs
sub
mov
sahf
xor
adc
and
xchg
mov
mov
push
adcl
sbb
mov
shrb
shlb
xor
pop
fs
aas
dec
cli
mov
mov
sub
jle
gs
xor
imul
frstor
sbb
into
ret
cmpsb
rclb
pop
push
push
sbb
lret
pop
fiaddl
repz
or
bound
in
scas
xor
je
sti
in
sbb
insb
pop
jp
dec
sub
push
rcr
fbld
lock
and
dec
or
aam
or
lods
push
stc
add
test
das
add
mov
cs
pusha
fcomip
mov
cwtl
adcb
mov
mov
sahf
decb
out
icebp
imul
lods
imul
clc
inc
pop
mov
adc
mov
pop
sahf
fwait
cltd
lods
pop
mov
sbb
fs
insl
adc
orl
inc
and
adc
xchg
lcall
pop
jo
mov
scas
dec
pop
popf
sti
addb
cltd
dec
mov
cs
sbbb
imull
lea
sbb
jl
out
xchg
call
ja
add
push
out
ljmp
mov
movb
shlb
jg
stos
and
jle
daa
sub
in
mov
rcrl
xor
repnz
jle
in
fdivrs
mov
mov
pusha
jne
mov
test
jmp
pop
cld
je
shlb
pop
xchg
in
mov
jmp
add
fidivrs
push
pop
mov
cmp
push
mov
sbb
adc
sarb
insb
les
enter
mov
lret
push
loopne
ljmp
std
pop
and
add
cmpsl
adc
pop
pop
xor
cmp
jl
cmp
inc
loop
dec
das
push
add
mulb
jecxz
sbb
push
jecxz
add
and
enter
xor
in
push
cmpsb
jle
scas
cmp
test
stos
test
mov
or
js
clc
fwait
lret
mov
add
and
insl
push
call
into
adc
shl
adc
in
push
and
xchg
in
fistpll
sub
aad
jmp
sbb
inc
mov
cmpb
push
lahf
add
pop
arpl
in
add
je
dec
dec
stc
pop
loop
clc
fs
sub
mov
pop
aam
lock
sub
mov
popf
mov
test
pop
sub
mov
imul
push
mov
mov
shrb
addb
mov
xchg
jo
into
clc
pusha
mov
or
dec
inc
xchg
and
sbb
cs
mov
cwtl
mov
imul
mov
fdivrs
adc
in
push
data16
or
fdivrs
add
sti
push
sub
cmpsb
std
xchg
sahf
icebp
stc
adc
jecxz
mov
inc
push
push
cmp
dec
pop
sub
mov
dec
loopne
cmp
leave
outsl
pop
or
ja
xchg
cmp
adcl
scas
cmpsb
fnstsw
or
pop
stc
push
andl
jae
lock
mov
pushl
or
dec
fisttps
addr16
xchg
in
push
jle
daa
add
push
or
pop
and
jg
sbb
gs
js
sub
push
and
sub
cmc
adc
sbb
sub
popf
outsb
les
js
cmpsb
mov
jle
push
fcoml
push
mov
fwait
push
test
pop
fdivrp
sub
pop
or
sbb
ja
inc
mov
notl
pop
push
loop
fcmovb
sbb
sub
ljmp
arpl
bound
sbb
mov
ficoms
mov
lret
dec
aaa
mov
icebp
dec
sbb
or
or
cmpl
enter
rorb
xor
loope
ss
stc
fldl
lock
push
adc
cld
push
into
sbb
loop
lret
clc
je
outsb
mov
out
pop
outsb
mov
inc
in
or
mov
xchg
mov
stos
jp
sar
jb
mov
sbb
push
pop
ljmp
xor
push
sbb
fildll
pop
montmul
cmpsb
inc
pop
adc
inc
stos
out
push
xor
ret
clc
test
lret
push
push
or
xchg
cmpsl
and
icebp
das
jl
push
sbb
jecxz
xor
pop
mov
loopne
mov
mov
and
daa
fs
lahf
int
cmp
pop
xor
mov
xor
jle
cmpsl
sbb
and
int
mov
add
jns
ficoms
insb
mov
sbb
inc
dec
or
mov
lods
hlt
add
movsb
and
and
jo
call
xor
mov
aas
sti
xor
std
cld
mov
iret
sub
out
insl
add
enter
rorb
sub
movsb
adc
clc
repnz
and
push
jle
and
jmp
adc
rcll
stc
fs
cld
sub
sti
inc
mov
mov
arpl
jo
sarb
pop
mov
dec
mov
push
sahf
adc
jbe
push
add
fcomps
cwtl
inc
cmpsb
lea
jnp
lds
int
jnp
or
sbb
inc
in
ljmp
in
es
in
mov
sahf
add
daa
movsb
dec
and
icebp
mov
xor
and
bound
push
add
insb
or
sub
dec
je
aam
push
cld
jnp
in
aas
cli
sub
outsl
clc
fucomi
pop
rolb
dec
filds
and
adc
add
js
cmpl
scas
jns
push
mov
xor
sub
inc
test
xchg
or
jg
or
and
rorb
lock
xchg
mov
jecxz
stos
outsl
jg
ja
jmp
ret
mov
xor
jl
mov
mov
inc
movb
ja
test
push
in
not
push
sbb
das
jge
mov
adc
adcb
js
ret
fdivrl
js
add
inc
rorb
mov
call
mov
out
lds
into
push
add
aam
mov
imul
mov
nop
cwtl
sub
inc
aas
sbb
std
movsl
push
xor
outsl
int3
aas
sub
sub
xor
mov
into
punpcklwd
inc
add
mov
or
fstpt
xor
adc
mov
inc
pusha
shll
or
stos
mov
sti
xchg
gs
inc
fstpl
inc
mov
dec
clc
aas
test
or
loop
out
mov
std
int3
icebp
dec
lock
add
cmpb
push
mov
sahf
sub
xor
in
enter
dec
inc
xchg
adc
sbb
daa
dec
dec
aas
sti
pop
jp
push
jb
mov
test
dec
fsub
or
xor
xlat
inc
ja
insb
daa
jmp
loope
das
push
testb
dec
cmp
cmp
orb
in
pop
mov
loope
inc
ljmp
mov
xor
mov
ret
dec
aad
mov
ret
mov
pop
xor
rol
sub
aaa
and
insb
xlat
inc
hlt
idivb
add
jo
les
push
sbbl
cmpsl
add
arpl
push
roll
pop
fidivs
push
rol
incb
in
and
insl
fnsave
adc
and
out
mov
jge
pop
test
push
xor
nop
lret
or
inc
std
mov
fdivr
movsb
add
inc
test
adc
lret
incl
bound
hlt
inc
mov
fsubrl
insb
in
jne
int3
sbb
shlb
or
nop
test
sbb
or
push
xchg
mov
outsb
sbb
hlt
sub
mov
fdivp
pop
pop
fbstp
das
rcrl
jae
mov
sti
mov
mov
inc
shll
jmp
push
test
push
scas
ss
stos
inc
pop
xchg
cmp
jecxz
push
mov
jl
sbb
mov
lret
out
xchg
dec
jmp
cmpsb
mov
notl
pop
rol
dec
push
mov
ljmp
mov
ss
xor
jbe
pushl
rcrb
push
xchg
rclb
mov
shlb
inc
cmp
loope
jb
xor
sbb
sarl
jecxz
lods
clc
cmp
inc
add
mov
je
test
and
jp
lcall
add
jge
sbb
sbbl
jl
adc
es
xchg
icebp
xchg
aad
ljmp
test
repz
fidivrl
insl
sub
sbb
stos
cs
clc
sbb
or
cs
test
test
adc
icebp
or
push
out
mov
aas
cwtl
in
mov
incl
adc
sub
sub
aad
mov
cwtl
adc
mov
or
adc
call
inc
push
sbb
xchg
mov
adc
xchg
dec
xchg
cmpl
movsl
loopne
xor
xchg
insl
ret
or
lods
in
aam
nop
and
and
sub
inc
ret
test
nopl
and
push
add
repnz
or
push
push
sbb
sbb
ror
nop
pushw
inc
aam
xor
mov
lahf
decl
jns
aad
outsb
pop
clc
pop
test
adc
out
mov
in
test
or
sti
push
sbb
lret
ljmp
pop
daa
mov
call
shrb
sub
xchg
mul
dec
and
roll
sbb
pop
les
xchg
psllq
loopne
push
fistpll
pop
lock
out
pop
mov
jge
jnp
je
sbb
adc
pop
ss
xchg
loopne
fldt
and
pop
mov
cmp
adc
aam
jle
pop
sub
xor
lock
sbb
and
and
jne
inc
dec
or
out
mov
lock
sub
lcall
add
dec
sar
sub
lret
addl
test
push
loopne
jp
push
int
sub
loope
rol
sub
gs
jb
and
nop
int
xchg
lret
jnp
fimull
jle
and
sub
mov
sub
pop
xchg
add
outsb
aam
mov
or
and
lods
push
sbb
jg
adc
or
sbb
xchg
leave
add
mov
mov
mov
mov
push
mov
and
testl
mov
insb
decl
mov
addl
int3
adc
fcoml
mov
shr
jae
hlt
mov
mov
jle
mov
jne
cmp
nop
ret
inc
mov
sub
ja
ret
fisttps
in
sbb
mov
xor
inc
test
mov
push
rclb
or
fnstenv
mov
test
movsb
fnsave
mov
mov
sbb
cmp
pop
push
test
dec
mov
lods
imul
inc
mov
and
dec
adc
insb
sbb
sub
pop
test
mov
xchg
shlb
or
nop
outsl
adc
ret
ss
int
gs
cmp
cli
das
cmp
in
or
ret
mov
scas
jno
cli
mov
mov
inc
popa
rcrl
xchg
jge
dec
adc
add
aaa
push
cmc
adc
lret
adc
fimuls
out
xchg
xchg
mov
sub
out
das
pop
pop
mov
sti
pop
xlat
test
out
add
adc
js
repz
mov
pop
outsb
jecxz
mov
insb
outsl
mov
sub
mov
test
or
in
subl
or
in
jns
inc
pop
mov
sbbb
lcall
mov
and
in
in
lods
pop
adc
mov
fildl
cmpb
std
clc
inc
xchg
fidivrs
mov
insb
cld
fildll
or
shll
inc
push
in
and
fdivs
stos
aaa
push
loop,pt
jbe
xchg
cmp
stc
push
xchg
or
xor
add
jecxz
fdivrs
popf
cs
mull
jns
clc
xlat
arpl
js
filds
inc
mov
sbbb
and
push
jl
inc
jle
ja
es
in
test
adc
addr16
cmp
test
mov
mov
and
ficomps
sbb
aam
hlt
mov
je
cmc
inc
and
lds
pop
jb
cmpb
popa
enter
mov
movsl
sarl
cmc
jmp
xor
mov
lock
mov
js
pushf
fwait
inc
call
ret
cmp
jge
jle
pushl
cmp
jle
xchg
lcall
and
pop
mov
mov
in
cmp
out
pop
mov
fidivrl
adc
repz
dec
add
sub
std
dec
add
xchg
sbb
lcall
mov
inc
subb
push
mov
jbe
imul
push
adc
mov
mov
mov
adc
iret
in
jge
jmp
inc
push
add
adc
rcr
fucomip
adc
pop
imul
xchg
dec
inc
test
adc
or
pop
stos
lret
jp
jno
pop
jge
xchg
lahf
add
ja
jmp
sub
cld
sbb
lea
popa
adc
test
cli
add
lds
pop
jge
insl
xor
xchg
imul
mov
mov
fsubrs
mov
sbb
arpl
xor
add
lea
xchg
aaa
je
vaddsd
dec
icebp
ljmp
test
dec
or
cmp
inc
dec
mov
stos
pop
clc
mov
lahf
and
or
sub
jp
test
insl
or
dec
sub
xchg
mov
pop
push
rcll
out
in
and
mov
cmp
push
push
inc
cmpsl
mov
into
dec
xchg
mov
and
mov
outsl
jge
in
inc
lock
jns
outsb
dec
pusha
add
inc
cmc
cwtl
adc
and
jmp
lock
in
add
xor
lods
push
cli
mov
arpl
lock
xor
and
loopne
push
pop
mov
arpl
sarl
cli
fldt
iret
popa
out
add
and
pushf
addl
out
sub
icebp
movsl
aaa
adc
ficomps
xor
subl
mov
test
mov
leave
mov
mov
cmp
add
jnp
cltd
add
loop
cmp
ss
ja
jecxz
cwtl
add
mov
inc
loop
mov
jo
pushl
push
es
mov
lret
rolb
sbb
push
sbbb
sbb
push
mov
or
add
shll
jecxz
and
or
xor
xor
cld
sbb
nop
xor
bound
cmpsl
mov
and
rcrb
fwait
add
xor
andl
mov
add
pop
adc
and
cli
jl
pop
cli
out
sahf
cs
aam
push
push
or
aaa
outsb
sub
lds
pop
ljmp
dec
jnp
movsl
add
test
push
pop
ds
push
out
ds
jmp
int3
and
jno
or
xchg
js
shlb
add
subl
pop
xchg
and
add
fisubl
je
sbb
sbb
adc
jno
js
sub
enter
xchg
adc
ja
shll
dec
dec
mov
outsl
jnp
test
sbb
cmovo
and
mov
shl
orl
das
bound
test
mov
mov
or
adc
aaa
jl
js
and
pop
add
sar
arpl
adc
shrd
outsl
nop
or
add
clc
das
lcall
dec
jecxz
mov
lea
and
push
dec
scas
inc
mov
loop
mov
adc
pop
push
mov
add
stos
mov
imul
push
mov
mov
inc
sar
aaa
push
jg
inc
mov
or
or
popf
aaa
out
ret
out
or
add
fsubl
lret
or
mov
into
xor
sbb
push
fldl
or
pusha
pop
sbb
sbb
rol
jns
xor
mov
cmpsb
jp
dec
das
xchg
in
in
lock
sar
lods
fiadds
cmp
inc
xlat
repnz
fdivl
and
sbb
push
hlt
pop
call
mov
push
insb
or
icebp
cmp
data16
and
fcoml
jae
mov
pop
jge
fstpt
cli
or
and
loopne
pop
mov
insl
leave
inc
jae
daa
jle
icebp
jno
outsb
xchg
cmp
bound
call
cmp
clc
lea
mov
sub
xor
cmp
cmp
std
dec
pop
fcom
lahf
and
sbb
cld
insb
inc
shll
cli
ja
and
or
xchg
roll
call
mov
push
outsl
cmp
xor
movsl
outsl
pop
cmp
or
mov
sarb
push
outsb
xor
aas
pusha
push
jbe
popa
adcb
icebp
in
ljmp
adc
iret
sub
outsl
loop
xor
insb
adc
xor
xor
or
jb
pop
lcall
adc
adc
push
cmpsb
adc
mov
in
pop
and
pop
and
jmp
popa
jecxz
or
popa
scas
jno
jl
mov
jge
and
mov
push
adc
icebp
addr16
lods
lods
mov
sub
call
and
loop
mov
and
stos
test
adc
outsl
jl
loop
inc
jle
pop
mov
mov
jge
xor
push
xchg
jmp
inc
or
les
je
xor
jmp
dec
mov
mov
lret
int
jns
inc
or
or
test
fcomps
add
aam
dec
dec
mov
mov
mov
out
fistps
iret
inc
mov
cmpl
dec
push
push
sbb
push
in
daa
add
in
fisubl
push
adc
js
scas
mov
jb
vmread
push
stos
pop
rolb
fsubrs
cmp
in
incb
jns
outsl
lds
test
inc
xchg
adc
sub
mov
dec
jmp
lret
jmp
popf
jmp
jae
cs
addb
cwtl
inc
test
lcall
cmp
push
das
adc
mov
stos
xlat
mov
addr16
push
dec
add
cmp
cltd
cltd
stos
negl
sbb
cs
fisttpll
cmp
movsl
push
mov
ljmp
xor
scas
xchg
mov
push
jle
sbb
pop
adc
xchg
fs
adc
jns
adc
ss
jg
fcomps
insb
out
outsl
ljmp
mov
nop
jge
fdivrl
fisubrl
insl
and
jnp
inc
xchg
je
push
and
and
xchg
jb
inc
sbb
cs
add
test
xlat
or
clc
fcoml
jecxz
pop
pop
push
je
mov
loop
test
sub
add
or
ljmp
sbb
dec
xor
mov
mov
test
dec
out
ss
cmpl
cs
movsl
sub
mov
push
jge
nop
and
nop
pusha
loope
arpl
mov
mov
inc
push
test
icebp
incl
sub
adc
xchg
jnp
xor
outsl
pop
test
or
inc
pop
ret
add
lcall
xchg
or
clc
das
adc
xchg
adc
cmp
xor
rclb
mov
cs
mov
daa
in
add
mov
mov
aad
adc
ds
xor
mov
cmp
inc
adc
pop
mov
test
aaa
sbb
adcb
jne
lock
dec
test
dec
add
dec
in
add
aaa
mov
btc
pop
push
vmaxss
jle
insl
dec
ja
push
inc
sysexit
outsl
fistps
push
mov
int3
fimuls
or
hlt
aad
adc
orl
jnp
mov
out
sbb
in
and
bound
pop
mov
push
sbb
sbb
and
xchg
adc
inc
push
ret
pusha
jb
jg
xor
shll
push
sub
or
out
cmp
cmp
and
call
xor
mov
push
popl
push
pop
test
mov
fwait
loopne
cmp
mov
in
and
push
mov
fmul
test
sbb
fs
jge
push
inc
inc
xchg
clc
outsl
sub
cmp
mov
unpckhps
adc
adc
mov
lcall
push
jge
dec
xchg
jae
daa
mov
outsl
add
push
sbb
loopne
cwtl
mov
push
out
jae
xorb
fs
cmp
xchg
mov
sbb
lds
add
test
push
mov
std
out
cmp
jne
arpl
lds
mov
ret
cli
add
pop
pop
arpl
push
dec
jae
and
lods
mov
or
pushl
xchg
adc
mov
imul
mov
xor
aas
mov
mov
aas
popf
jp
sar
dec
jbe
mov
sub
jbe
inc
repnz
push
cmp
adcl
jle
ss
mov
les
inc
pusha
cmp
jg
add
or
cmp
cmpb
test
push
adc
cs
cmpsb
call
push
lea
inc
lea
or
add
sub
adc
push
mov
jmp
stos
jge
fsubs
pusha
mov
aad
mov
mov
psubsb
adc
lds
icebp
pop
insb
mov
addr16
call
icebp
nopl
inc
mov
sub
or
mov
inc
incl
inc
jmp
cmpsb
lods
mov
rcrb
mov
dec
cmpsb
fistpll
pushl
scas
mov
fnstenv
dec
adc
cmp
pop
and
pop
jbe
mov
cmovb
mov
jo
inc
sub
xchg
jmp
insl
sti
mov
clc
jo
cld
and
icebp
mov
add
mov
cwtl
fs
mov
fs
add
movsl
or
fisubs
lock
ljmp
push
or
repnz
pop
xchg
mov
or
call
push
push
adc
jmp
mov
cmp
inc
adc
inc
ret
push
data16
fiaddl
mov
into
addb
stc
mov
add
and
xchg
xor
ja
pushf
cs
fstpt
ret
pop
adc
int
out
inc
mov
jge
pop
mov
das
addr16
add
pop
push
sahf
lahf
andb
sbb
dec
mov
or
xor
fstl
dec
movsl
push
pop
jae
je
movsl
sub
fistpl
rcll
jmp
sub
sbb
loope
push
je
pop
dec
cld
sar
pop
inc
dec
xchg
xorl
xchg
push
or
out
mov
rclb
push
out
push
in
fsubs
and
ja
in
test
or
xchg
pusha
push
imul
cmpsl
ret
fisubrl
mov
roll
mov
xor
xchg
pop
jg
jae
push
inc
scas
sub
dec
aam
hlt
jo
cmp
sarl
test
imul
cmp
dec
jl
imul
fildl
inc
lods
sbb
and
clc
test
mov
sbb
jne
dec
into
jp
clc
insl
push
aad
sbb
cmp
pop
aam
mov
add
mov
cmc
cmpsl
fistpl
cmpsl
cmp
mov
pop
mov
cmpsb
dec
sbbl
nop
cmpsb
into
pop
stos
cmp
rclb
push
nop
sarl
sbbl
out
pop
inc
sti
inc
cli
mov
or
add
xor
cmp
mov
cs
loopne
mov
adc
sub
loopne
push
outsl
cmp
add
inc
out
inc
sbb
dec
int
test
aam
adc
ret
adc
fcom
stos
pop
cmp
push
imul
icebp
es
sbb
inc
outsl
outsl
rorb
mov
and
jmp
mov
mov
add
lods
lock
pop
pusha
dec
push
sti
nop
cmp
into
outsl
sbb
jmp
inc
or
mov
ja
sub
and
daa
js
push
push
jnp
lea
cwtl
mov
mov
mov
arpl
clc
fisubl
add
push
jne
lods
and
ret
sub
and
lock
leave
add
dec
popa
rorb
pop
jb
scas
aas
lcall
mov
scas
dec
outsb
shr
jb
out
mov
adc
lea
inc
mov
mov
xor
sbb
mov
icebp
xor
pop
int3
mov
mov
push
add
pop
outsl
dec
pop
adc
mov
lea
lahf
add
fbld
in
add
insl
mov
inc
add
jbe
jmp
daa
jb
in
inc
jo
jl
mov
sub
rcrb
push
cli
in
icebp
cmc
push
cmp
adcb
push
mov
sahf
outsb
xchg
jnp
pushf
pop
lret
push
add
pop
insl
ret
outsb
or
cmc
int3
cmp
shll
test
cmpsb
lds
or
jmp
outsl
sti
hlt
mov
into
or
sub
or
fstp
cli
push
in
pop
jae
test
int3
push
sbb
and
cli
mov
loope
inc
lret
fsub
adc
jno
or
or
or
lea
cmp
mov
pop
dec
adc
out
adc
stc
xor
rcll
dec
aam
fdivrs
inc
mov
shlb
rcll
aas
add
test
or
adc
mov
loopne
cmc
mov
cwtl
ja
push
mov
lods
jge
and
rcll
icebp
or
cmp
aam
lea
inc
inc
mov
sbb
ja
pop
pop
je
addb
and
sub
lods
mov
push
insl
adc
fsin
pop
mov
xchg
sarb
xchg
andl
adc
lea
daa
fidivrl
jp
adc
fisttpl
scas
cld
add
nop
fists
inc
inc
cwtl
mov
cmp
scas
mov
cwtl
adc
sub
mov
or
aam
push
xor
sub
test
sarl
add
inc
dec
and
ret
scas
bswap
or
gs
sbb
loope
xchg
sbb
movzwl
pop
mov
les
push
push
call
mov
inc
dec
in
xor
push
cmp
push
pop
pop
lods
adc
add
pop
push
inc
dec
mov
enterw
and
inc
push
push
adcl
cli
or
in
lahf
or
add
jmp
fisubs
add
pop
or
mov
xor
jno
pop
add
mov
lds
rcrl
or
out
inc
jns
fimull
cmpsb
mov
pusha
shll
mov
pop
lds
push
xchg
shl
outsl
cmp
jne
and
pop
sub
dec
mov
stos
decb
daa
mov
mov
push
lret
adc
not
mov
add
sub
pop
clc
pop
stos
or
mov
jb
cmp
xor
loopne
orl
leave
mov
pusha
pop
repz
outsl
xor
push
shl
adc
push
cld
dec
mov
add
cmp
minps
jg
lcall
icebp
imul
or
ffreep
repz
push
inc
or
mov
push
rcll
jge
sub
mov
mov
movsl
dec
pusha
bound
sbb
ljmp
js
xchg
pop
test
jp
xchg
in
xchg
mov
inc
xchg
test
mov
sbb
cmpsb
push
and
pop
mov
dec
lock
sahf
mov
clc
cmp
aas
xchg
icebp
mov
clc
sbb
push
push
or
xor
inc
dec
bound
sbb
je
nop
dec
push
adc
test
outsb
in
fbstp
and
xchg
scas
and
sub
shll
push
pop
jno
insl
or
popf
cwtl
out
ds
cmp
mov
rclb
mov
pop
push
mov
scas
or
lahf
bound
xchg
pop
jg
pop
dec
cmp
pop
mov
push
sbb
sbb
cmpsl
mov
pop
aam
inc
xor
and
mov
sub
and
mov
aaa
ss
xchg
xchg
inc
mov
jno
aaa
in
shll
clc
pop
stos
lret
adc
sub
dec
pop
push
push
sbb
jno
icebp
sub
nop
sti
rcr
aas
insb
aas
arpl
adc
adc
push
out
jo
adc
add
insl
jno
mov
aas
test
popa
cmp
inc
pop
mov
fisubs
daa
xor
pop
fidivs
xchg
test
inc
imul
dec
repnz
jns
push
mov
hlt
scas
std
fsubr
and
lret
mov
or
pop
push
out
pop
and
jnp
movsb
cmpsb
mov
adc
jge
adc
pushf
jne
pusha
sub
clc
pop
jl
sbb
test
mov
jne
mov
aad
push
push
sub
push
cmp
mov
push
pop
test
inc
jmp
aad
nop
dec
inc
pop
subl
inc
pop
sub
lahf
sbb
add
jp
iret
sbb
mov
mov
inc
sbb
loope
cmp
popa
add
in
xchg
sub
mov
sbb
xchg
mov
lea
or
xlat
stos
leave
call
pop
test
cwtl
push
aas
pop
fisubrs
push
and
push
popa
mov
dec
sub
adc
jnp
xchg
pop
js
dec
push
decb
in
mov
xchg
lahf
xchg
fcoml
or
int3
push
test
push
icebp
mov
shlb
icebp
push
lcall
leave
das
or
mull
fldl
fidivrl
mov
mull
std
fwait
or
cwtl
jecxz
sub
xchg
add
icebp
cs
std
sbb
cmp
push
cld
or
je
mov
adc
data16
inc
add
adc
in
lahf
aad
and
mov
pop
jb
test
ret
dec
pop
mov
mov
cmpsb
popf
xchg
pop
ret
in
bnd
mov
outsb
adc
jae
add
loop
enter
ret
sbb
inc
sahf
jne
pop
and
into
jg
outsl
cli
lea
dec
gs
mov
mov
stc
jle
pop
xor
mov
push
fcomps
lcall
mov
push
hlt
cmc
xchg
je
mov
loopne
lahf
mov
out
je
cld
fisttpll
mov
xor
nop
iret
sbb
cs
jl
or
in
push
xor
pop
ret
notl
cld
and
mov
pushl
adc
xchg
add
fs
mov
fwait
dec
pop
jbe
push
jl
movsb
pop
sahf
mov
jp
outsl
mov
pop
inc
xchg
cmc
scas
add
insb
nop
arpl
rcr
adc
xchg
sub
push
test
aas
xchg
push
stos
mov
xchg
mov
inc
test
ss
insl
adc
iret
divb
scas
fs
stos
dec
or
imul
mov
mov
mov
fisttpl
test
inc
mov
ja
sub
popf
jnp
ljmp
cmpb
jge
pop
mov
popf
jle
cmp
adcl
cmp
sbb
clc
popa
dec
sti
testb
enter
mov
inc
in
push
fstpl
cmc
ret
and
sub
push
and
hlt
pusha
imul
or
fistl
nop
mov
sbb
sbb
int3
mov
adc
mov
inc
jbe
fwait
lcall
out
mov
jbe
add
add
cs
fsubrl
loop
sub
subb
mov
xor
testl
sbb
orb
popf
jb
jmp
sub
sbb
lret
fldl2t
aas
mov
pop
xchg
push
sti
lret
cli
dec
mov
movsl
imul
jne
loopne
lret
scas
fsubrp
movsl
subb
test
mov
cmp
out
jg
outsb
stos
inc
push
out
shl
cmpsl
rolb
push
fld1
xor
add
test
ret
in
fistpl
sub
xchg
vphsubdq
jns
and
jmp
or
mov
loopne
ficoml
fldt
hlt
popf
rcll
dec
mov
push
nop
or
mov
mov
stos
icebp
jmp
test
ret
scas
fimull
pusha
loopne
xor
jge
outsb
imul
outsb
jmp
sub
sub
dec
or
imul
push
jbe
cwtl
js
mov
sar
mov
sub
mov
sbb
sbb
cld
stc
xor
mov
test
mov
iret
loope
shl
fiadds
inc
push
pop
pop
lahf
test
inc
bound
jge
arpl
mov
fnstsw
cmpsb
sti
mov
xor
and
xchg
test
push
or
push
push
mov
nop
negl
or
or
lahf
mov
push
fisubl
mov
enter
pusha
mov
mov
ret
rcll
sbb
shrb
add
cmpsb
push
jno
pop
aam
lods
negb
dec
push
sti
jmp
pop
inc
lcall
js
pop
sahf
lds
ljmp
test
adc
dec
test
jo
sbb
add
cmp
ret
sbb
pop
mov
test
stos
clc
inc
es
xchg
dec
xchg
mov
sub
xor
mov
or
or
fildll
xchg
rol
and
pop
stos
mov
mov
push
fisubrs
jb
rcrl
mov
arpl
outsb
sub
xor
loopne
popl
aas
adcb
dec
push
mov
ja
jno
out
bound
in
hlt
sbbb
xchg
daa
adc
int3
pushf
mov
stos
pop
push
and
in
ljmp
in
sub
cmp
jecxz
push
add
movsl
outsb
lds
loope
out
xchg
xor
jg
in
pop
and
in
in
lahf
xchg
or
aam
mov
dec
cmpsb
adcl
mov
and
lcall
test
fidivrs
outsl
clc
adc
insb
mov
push
xor
cltd
cmp
mull
inc
add
sbb
sahf
mov
inc
lcall
movsb
inc
pop
jnp
icebp
hlt
xchg
mov
add
aas
lea
add
dec
mov
push
dec
lcall
cmpsb
mov
vpor
ret
sub
ja
lods
pop
adcb
xchg
push
mov
orb
pop
icebp
and
dec
and
add
mov
xchg
loopne
adc
sti
cmpsl
pop
add
add
pop
mov
shrb
stos
mov
lods
mov
add
inc
repnz
mov
in
and
movsl
jp
sbb
cmp
cmc
scas
xchg
popf
mov
lret
jl
test
add
pop
addr16
push
int
fnstsw
mov
jo
outsb
cmc
or
in
mov
hlt
cmp
mov
mov
call
inc
pop
cmp
ret
js
test
push
jmp
xor
lods
scas
inc
jg
les
sbb
ss
clc
stos
jg
movsl
xor
pop
add
mov
mov
pop
xchg
andb
adc
jne
sbb
cli
add
or
lods
push
sbb
call
js
mov
inc
loop
enter
cmpl
cwtl
push
pop
fucom
mov
sub
cmp
ljmp
je
loopne
sub
add
shlb
cmpsl
pop
nop
adc
outsb
mov
sahf
mov
rol
dec
xchg
clc
sbb
ja
inc
jge
inc
cmp
leave
push
cmc
and
cmp
divb
out
jmp
sub
sub
and
mov
lock
lock
int
xchg
xlat
into
jp
in
jmp
add
outsb
hlt
test
lcall
ljmp
cld
mov
sbb
loop
pop
or
mov
xchg
xchg
or
mov
les
xor
filds
int
popa
inc
lock
jmp
gs
cld
sub
xor
jae
daa
mov
dec
add
cmp
push
push
aas
mov
and
into
xchg
data16
sub
cmp
stc
rolb
je
out
pop
and
cmp
in
push
pop
jp
popa
mov
shlb
movsb
lods
cwtl
pop
outsb
fcmovnbe
sub
daa
mov
mov
add
sarl
movsb
cltd
mov
movsb
fs
or
add
xor
sub
jbe
aam
stos
dec
push
mov
pop
mov
cli
cmpsb
or
xchg
outsl
sub
cmp
sbb
lcall
das
sti
add
les
jne
lea
mov
sbb
shl
mov
lahf
sti
add
repz
ss
shll
sti
dec
dec
mov
insb
xchg
push
hlt
loop
adc
loopne
cmp
cmp
negl
pop
daa
mov
xchg
shrl
jp
je
jl
decb
mov
xor
mov
add
mov
pop
add
add
dec
adcl
scas
dec
jge
pop
popa
jae
pushf
xchg
js
mov
push
out
incl
pop
mov
push
push
cld
xchg
movsl
ss
daa
test
rolw
int
adc
jle
add
push
ja
or
fildl
or
xor
jmp
mov
lea
mov
xor
pop
jle
pushf
mov
and
mov
lods
cmpb
push
add
test
xor
and
cwtl
fldt
cmpsl
outsb
fs
lahf
mov
or
push
in
sbb
mov
fcomi
adc
test
jmp
je
repnz
fcomi
mov
incl
add
sbb
mov
cmp
mov
movsl
fiaddl
ljmp
add
ljmp
xchg
mov
xor
mov
jbe
adc
in
push
loopne
xor
inc
std
fildl
fxam
mov
iret
hlt
xlat
mov
nop
mov
dec
jne
inc
lret
inc
divb
lock
add
sub
adc
jb
push
jae
lahf
movb
jne
mov
sbb
mov
pop
add
insb
fs
jno
xchg
mov
inc
lret
pop
mov
cli
outsl
cmpsb
ficomps
xchg
mov
adc
xchg
push
pop
scas
push
imul
inc
mov
push
jmp
inc
add
cmp
fistps
add
das
lea
or
loope
add
insb
xchg
push
ds
adc
clc
pop
add
nop
jmp
and
daa
jmp
xor
push
pop
push
dec
scas
std
push
aas
jle
adc
mov
pop
push
cmp
fistl
cmp
dec
lahf
sub
mov
cmpsb
sub
repz
sbb
jnp
test
cmpsl
mov
xchg
movsl
sub
xchg
mov
push
jg
pop
xor
in
cmpsl
cmpsb
in
mov
pop
mov
add
movsb
stos
sarb
pop
and
mov
aad
mov
adc
outsl
cmp
cmp
mov
stc
mov
sbb
test
pushf
cltd
mov
lods
and
inc
mov
mov
mov
inc
lcall
jbe
mov
dec
mov
cmpsb
dec
imul
enter
mov
int3
iret
jb
pop
mov
imul
mov
mov
push
cmc
je
or
repnz
in
push
jno
xchg
out
subl
mov
or
rcr
sti
xor
aad
mov
xchg
pop
cmp
fstl
push
clc
shrl
inc
aam
and
mov
xchg
lods
cmp
jns
call
fnsave
pop
mov
xchg
add
inc
and
fstpt
cmp
ss
sub
and
push
ljmp
jmp
fs
scas
pop
addr16
mov
cmc
dec
cmp
scas
cmp
xchg
pop
jno
and
xchg
jle
pop
pop
xchg
cmp
loop
push
mov
mov
jae
jecxz
ljmp
call
out
fs
adc
in
in
popf
jp
es
add
add
addl
or
adc
jg
jo
inc
movsb
movsl
loopne
filds
mov
adc
sbb
int3
sbb
shlb
jbe
rcl
and
cmc
testl
xlat
decl
xchg
push
iret
mov
pop
push
ds
xor
in
sub
adc
push
call
sbb
mov
mov
or
fcmovnb
or
ljmp
sub
bound
imul
std
cmp
mov
fsubr
or
lcall
push
xchg
sbb
stc
push
jns
mov
mov
icebp
incl
jae
xor
pop
in
clc
jg
pop
and
test
arpl
into
jno
insl
imul
cmp
imul
rcll
addr16
push
fcomps
mov
rorl
sbb
add
jle
jnp
and
adc
mov
loop
or
sbb
adc
pop
push
mov
pop
mov
mov
push
or
mov
push
inc
fcomps
cmp
cld
loop
jmp
jg
cmp
ljmp
sbb
arpl
jbe
mov
fs
es
cmp
in
or
aas
adc
ret
jmp
test
xor
or
call
push
xor
fnstsw
inc
dec
rorl
mov
ss
mov
fwait
outsb
sub
les
pop
sub
jb
ja
or
mov
sub
lcall
mov
faddp
inc
mov
sbb
or
scas
push
out
pop
xor
das
loop
add
jg
fwait
mov
mov
out
add
je
sbb
sbb
add
sarb
cli
cmpsl
es
in
popf
rcll
and
roll
and
repnz
and
cmp
add
bound
into
sbb
push
loopne
fstl
sti
xchg
std
mov
scas
jge
adc
lret
imul
xchg
cmpl
inc
in
insl
out
test
hlt
and
jb
inc
xor
or
outsl
filds
sbb
subl
push
push
inc
push
fildll
and
sbb
clc
scas
mov
js
push
mov
daa
repz
add
sar
add
aas
pop
dec
arpl
incl
pop
outsl
jle
mov
mov
das
xlat
mov
jl
mov
test
push
in
and
jae
xchg
sbb
mov
and
sar
lea
add
cmp
push
dec
ret
jne
jecxz
ret
cmp
inc
leave
adc
mov
lcall
dec
cmp
dec
mov
in
push
adc
and
inc
cmp
fdivs
in
mov
mov
lret
add
mov
rolb
sbb
jp
adc
and
cmpsb
jo
mov
cmp
call
mov
js
sub
cwtl
add
lea
adc
imul
test
aaa
xor
fistpll
add
push
sbb
hlt
dec
arpl
inc
sub
and
mov
dec
push
xchg
cs
add
nop
mov
mov
and
cmp
and
ret
dec
jb
inc
sbb
test
aad
in
pop
sbbl
sub
gs
loop
fnsave
addr16
and
lods
xor
popf
mov
scas
mov
dec
dec
dec
cmp
call
scas
push
ljmp
rcrl
and
jp
std
in
mov
jp
push
push
aaa
add
and
nop
rolb
push
mov
jle
jle
test
jp
push
and
aad
add
inc
mov
outsl
lock
popf
push
mov
pop
shlb
xor
mov
dec
xchg
push
add
inc
jp
sbb
add
lods
pop
mov
xchg
mov
popf
mov
testb
cmp
push
add
jecxz
mov
sub
and
cs
mov
inc
pop
ljmp
push
sarl
inc
sub
ss
sbb
adc
and
ja
cmp
inc
adc
mov
pop
dec
pop
ljmp
jmp
imul
in
cmp
std
xchg
lret
leave
or
adc
jle
dec
inc
popa
cmpsb
test
out
mov
pop
and
mov
mull
inc
and
mov
out
pop
sbb
add
fadds
in
push
out
push
push
sbb
outsl
adc
test
fisttpll
mov
sub
jmp
fisubs
sbb
daa
pushf
xchg
xchg
ret
int3
lea
sbb
adc
xchg
mov
and
ret
push
add
lock
and
jp
fstpl
pushl
dec
or
inc
int
xor
pop
jae
pushf
aad
out
outsb
aas
ds
js
xchg
rcrl
xchg
popa
xchg
sbb
cmpb
inc
rcrb
loope,pt
mov
mov
sbb
out
lcall
mov
aas
adc
lock
stc
stos
and
outsb
xchg
pop
pop
cli
and
in
lahf
cli
mov
imul
xchg
mov
loop
mov
lea
out
push
inc
mov
movb
fstpl
test
in
pushl
daa
xchg
lds
mov
jl
rcll
inc
fiaddl
and
inc
ja
jbe
jo
adcb
push
dec
inc
xchg
xchg
mov
jecxz
mov
scas
cltd
xchg
insb
add
ret
test
out
mov
inc
addr16
daa
sub
pop
jmp
pop
inc
int3
sub
jns
addb
mov
rcrl
ljmp
fwait
and
clc
pop
lcall
xor
or
xchg
imul
jae
jb
ret
dec
mov
fsubrl
ss
mov
es
ret
bound
push
or
test
cmp
out
ret
mov
xor
iret
xchg
push
mov
xor
inc
icebp
mov
xor
jmp
into
pop
push
push
arpl
push
mov
xchg
push
push
xchg
adc
es
pop
icebp
fucomip
sbb
cmp
push
jecxz
sub
add
in
aad
ja
jbe
rclb
in
pop
popa
ret
repnz
gs
rorb
lcall
sbb
sub
je
mov
push
insb
pop
pop
push
scas
pop
dec
push
dec
pushf
mov
xor
jne
cmc
pop
xchg
rcrl
test
mov
orb
pop
jae
or
je
sbb
std
das
fnsave
imul
xchg
sbb
xchg
xchg
jl
pop
adc
aas
out
lds
lock
idiv
data16
test
adc
gs
push
das
or
out
mov
int
lock
nop
pop
loopne
push
aam
push
jge
xor
rcrl
std
mov
mov
loop
insl
push
mov
dec
jae
insl
insl
icebp
mov
push
lock
push
add
incb
in
push
push
cwtl
pop
adc
add
js
mov
pop
mov
and
dec
xchg
int
das
adc
jmp
out
das
push
les
jbe,pn
outsl
out
xor
push
test
shll
mov
repnz
mov
mov
daa
dec
xchg
dec
mov
outsl
xor
adc
out
cmp
add
outsl
rclb
into
jns
and
iret
mov
sub
frstpm(287
lock
mov
cld
loope
movsb
test
mov
inc
je
push
divl
data16
cmp
fbstp
jno
adc
inc
ret
mov
mov
push
les
pop
pop
mov
sub
or
adc
xchg
xor
ret
or
mov
adc
adc
clc
cwtl
xchg
mov
sub
outsb
aaa
or
jecxz
and
mov
imul
lods
sbb
sub
adc
insl
push
inc
adc
push
mov
mov
mov
lret
pop
push
dec
movsl
outsl
out
test
mov
jl
xchg
in
aam
cmc
call
mov
scas
pop
push
js
mov
and
cmp
push
push
add
ja
test
inc
cld
call
shrl
sbb
cs
pushf
rcrb
sub
outsb
mov
test
pop
jb
cmp
js
fwait
and
mov
or
or
pop
in
xor
ljmp
lds
mov
ret
gs
sbb
bound
add
adc
mov
mov
sub
adcb
outsb
movsl
mov
dec
mov
loopne
xchg
into
test
mov
dec
lcall
lock
inc
and
jmp
adc
aaa
jne
pop
pop
xor
sbb
mov
clc
insb
mov
hlt
test
fisubrs
icebp
push
push
jl
outsb
aam
inc
ljmp
xlat
cmp
aad
and
add
int3
dec
into
shrb
pushf
jae
pop
adc
std
inc
neg
mov
or
push
lea
aam
fsubrl
xorb
mov
imul
adc
add
jns
cld
jp
sub
dec
pop
mov
test
pop
inc
lea
mov
imull
or
lcall
movsl
scas
and
jbe
pushl
iret
pushf
sbbb
xlat
shll
push
sbb
stos
inc
cmc
and
lret
or
aam
mov
sub
pop
nopl
mov
aam
sti
mov
xchg
and
scas
stos
shl
mov
rcrl
pop
stos
sbb
add
mov
insb
dec
cmp
cmp
xchg
adc
daa
jnp
mov
outsl
incb
fbld
das
sub
push
inc
push
mov
and
jno
pop
sub
sarl
in
div
xchg
cld
or
add
jns
test
nop
xchg
xchg
mov
mov
mov
xlat
outsl
in
daa
mov
push
icebp
push
adc
pop
in
icebp
or
sahf
mov
jno
add
int3
lcall
adc
inc
rcl
adc
mov
and
leave
xorb
clc
mov
test
mov
pop
imul
jno
notb
insb
testb
push
jp
adc
cmpsb
push
faddp
xor
lahf
cmp
and
jo
add
mov
mov
cmp
loopne
das
sub
mov
fnstenv
repnz
hlt
fistl
call
rorb
mov
iret
out
std
scas
add
cmpsb
lea
les
add
stc
jecxz
or
jmp
sar
pop
add
dec
or
jmp
mov
adc
push
wrmsr
mov
lret
ja
clc
out
adc
add
mov
mov
jo
sub
cmp
lahf
insb
lret
push
sarb
sar
mov
add
fcomip
icebp
mov
leave
inc
loopne
or
mov
mov
inc
int3
or
out
jle
add
sbb
stos
mov
add
inc
jo
sub
fdiv
cmpsb
js
add
jne
dec
mov
sbb
pop
orl
mov
ss
add
and
cli
clc
inc
in
int
jge
cli
pop
mov
aas
dec
sarl
rcll
popa
test
ss
jns
aam
adc
sbb
mov
xor
push
outsb
push
push
fdivrs
outsl
adc
add
loopne
sarb
xor
imull
jle
xor
lahf
cmc
fildll
sub
ljmp
out
faddl
repnz
aaa
mov
dec
and
pop
or
out
lods
mov
sbb
fdivr
adc
aaa
dec
insb
popf
cmpsl
xor
cs
cmp
outsl
subb
cmp
and
sub
test
icebp
test
daa
sahf
sti
pop
push
xchg
into
cmc
or
loope
mov
and
cmpsl
rolb
call
fwait
int3
cld
cmpb
repz
or
dec
xchg
ret
add
mov
shrl
xchg
nop
pop
fstpt
and
dec
daa
push
add
mov
inc
je
loope
shlb
test
lret
xchg
call
xlat
sbb
sub
jnp
stc
push
fmull
jno
push
sbb
stc
pop
cs
push
mov
push
out
arpl
insl
jg
mov
lock
jo
sub
std
in
rcll
dec
movsl
mov
jl
cs
jg
sbb
add
mov
cltd
psadbw
and
mov
stos
jno
int
jecxz
push
aaa
pop
in
jmp
cmp
jl
pop
rcrb
pop
pop
cmpsl
mov
pop
icebp
cs
inc
int
mov
decl
out
int
mov
pop
jp
fwait
pop
mov
add
stos
sbb
pop
std
inc
push
xchg
push
loop
cmp
mov
ss
testb
cltd
or
mov
mov
push
ljmp
std
or
icebp
pop
test
dec
sbb
js
sbb
mov
lods
cld
cmpsl
and
sarb
bound
fisubl
andb
xlat
into
sbb
add
cmp
pop
jg
ret
xor
sub
push
mov
or
loopne
xchg
aas
inc
cmp
push
cli
mov
push
pop
leave
popa
xchg
lods
mov
ret
cmpsl
insb
int3
cli
or
dec
movsb
movsb
jle
or
hlt
lods
int3
loope
inc
mov
lcall
inc
pop
mov
or
js
adc
repz
dec
push
pop
inc
das
cld
scas
test
and
sbb
push
loope
ljmp
add
pop
lcall
lret
push
sub
daa
outsl
adc
outsl
scas
call
push
repz
cs
das
fdivr
adcb
inc
iret
inc
or
mov
lret
into
rolb
push
in
inc
add
xchg
mov
in
punpckhbw
and
mov
mov
sub
pusha
mov
mov
mov
mov
lods
pop
sbb
cmp
xor
inc
outsl
push
xchg
push
shrl
sbb
cmp
mov
fstps
push
sbb
stos
sub
aad
call
insb
dec
call
pop
add
mov
insl
pop
loope
jnp
push
push
ficomps
xchg
mov
cmp
and
clc
xor
lds
les
add
sbb
adc
data16
adc
sub
outsl
add
sbb
dec
fs
adc
push
les
pop
xlat
out
dec
and
loop
cmp
mov
cld
sbb
adc
and
add
lea
out
js
mov
mov
pop
sub
sarb
jb
dec
fistps
or
mov
movsb
test
pop
notb
pop
mov
nop
insl
inc
push
cmpsb
dec
xor
add
inc
inc
pop
test
imul
mov
call
lcall
add
jno
nop
sarl
xor
jp
jl
adc
mov
mov
movsl
loope
lock
aaa
mov
push
hlt
fsubr
call
mov
mov
jne
push
popa
push
push
mov
inc
int3
and
pushl
aad
shrb
mov
and
outsl
aam
sub
add
pop
push
push
cmc
ret
mov
mov
adcl
pop
jno
pop
sub
xor
arpl
lahf
adc
pop
jg
stos
jg
mov
xor
push
inc
clc
push
fisubl
ret
test
and
hlt
cmp
shrl
jecxz
nop
pop
jecxz
mov
stc
dec
jns
andl
jge
incl
aas
fistpll
popl
test
jbe
dec
lds
add
flds
fsubrl
inc
icebp
xchg
cli
sub
cmp
loopne
jg
xor
cmp
lar
mov
into
hlt
push
fsubl
in
sbb
adc
outsl
dec
inc
lret
icebp
mov
daa
cmp
fcmovu
sbb
call
dec
ss
mov
lock
mov
xchg
xlat
pop
in
inc
into
inc
mulb
xchg
iret
cmp
inc
mov
add
jmp
loopne
je
sbbl
outsb
in
inc
push
mov
or
inc
add
cld
cmp
jmp
cli
or
inc
clc
pushf
cs
in
jle
movsl
dec
inc
iret
and
repnz
jo
lret
xchg
jg
mov
lahf
mov
dec
push
adc
xchg
sbb
in
inc
or
xchg
ret
es
movsb
add
aas
sahf
cmp
pop
sar
dec
in
jns
or
pop
jle
sbb
mov
daa
add
fs
aaa
fisttpll
lcall
mov
aas
jno
or
clc
push
mov
or
mov
rorb
mov
movsl
cmp
in
xor
ds
sub
jo
bound
add
xor
fstp
xchg
jne
and
sahf
mov
jp
sbb
mov
cmp
test
sbb
mull
cmp
into
loopne
pushf
in
and
jp
and
xor
and
mov
std
or
sahf
xor
sbb
jns
cmpb
out
rcr
push
push
outsb
xchg
push
fs
nop
test
aam
fildll
lock
rorl
push
ret
stos
ljmp
or
xor
jl
mov
js
fidivrs
push
adc
mov
pop
rclb
pop
imulb
inc
or
and
testb
mov
adc
mov
in
sbb
and
ja
pusha
mov
loop
shlb
inc
lock
mov
jp
xchg
test
adc
inc
aam
test
add
sub
xchg
xchg
mov
mov
cmp
fsubr
push
sub
in
loopne
and
xor
rorb
jo
jg,pn
sbb
ret
mov
iret
mov
mov
test
jp
clc
decl
dec
fwait
dec
inc
data16
test
add
movsl
or
lds
stos
sub
scas
adc
add
and
es
pop
mov
dec
adc
rcrl
inc
cld
pusha
leave
pop
or
mov
add
cmpsb
and
xchg
mov
pop
clc
incb
jg
mov
pop
cwtl
icebp
fcoms
jecxz
jbe
adc
xchg
mov
or
xor
and
outsl
push
movsb
cmp
lods
xchg
ds
adcb
jnp
xchg
loopne
mov
inc
push
sub
insb
test
in
lds
sbb
mov
lcall
jo
mov
jg
and
sub
fwait
add
test
shrb
adc
adc
out
stos
dec
xchg
popa
jnp
cmpsl
iret
scas
add
cmpsl
cmp
mov
out
xchg
and
jmp
shrl
xchg
data16
xor
xchg
jo
sahf
mov
insb
pop
daa
nop
aam
mov
or
andb
fs
sbbb
std
adc
fnsave
cmpsl
adc
orl
dec
inc
cmc
dec
cs
sbb
jno
sbb
or
sbb
call
jbe
adc
sub
or
outsl
inc
mov
inc
loop
addl
lds
sti
jmp
mov
and
fisubs
adc
sub
adc
cld
xchg
aad
push
add
jns
popa
out
pop
fistpl
outsl
sti
dec
mov
inc
lret
jae
fs
push
pop
incl
jb
ror
pop
push
and
jecxz
xlat
arpl
fildll
or
and
or
movsb
or
jge
les
xor
cmpb
ljmp
or
fs
cwtl
mov
daa
sbb
add
mov
enter
sub
jmp
xchg
scas
add
add
cs
inc
outsl
hlt
push
cwtl
and
enter
jecxz
mov
mov
sub
mov
inc
aam
outsl
jmp
cli
scas
aaa
or
inc
cmp
movsb
pop
jne
adc
jmp
sub
loope
clc
fwait
mov
xchg
cmp
out
mov
pop
pop
mov
inc
fs
pop
add
xchg
jbe
clc
mov
cltd
pop
push
sub
xor
test
enter
in
test
dec
add
outsl
outsl
fcomp
aam
push
repnz
rcr
mov
or
imul
pop
sbb
mov
shrb
rclb
push
je
add
cmp
dec
aas
ljmp
adcb
movsb
sbb
jmp
lock
addl
in
jle
push
dec
pop
xor
jmp
jl
ja
jecxz
test
cmc
add
lahf
mov
sbb
inc
push
pop
sbb
add
mov
inc
fsubrl
sbbl
push
stos
leave
add
sbb
fisttpll
xor
jle
ljmp
insb
sub
inc
dec
ret
aad
xchg
add
dec
pop
mov
hlt
mov
stos
jl
or
mov
in
popa
mov
sbb
inc
mov
xor
jno
ds
enter
sar
or
mov
mov
and
out
adc
loopne
lock
inc
fwait
subl
movsl
lret
lcall
mov
aas
movsb
dec
imul
dec
jge
out
daa
decw
mov
or
adc
nop
sbbb
incl
add
shll
jl
xchg
xchg
aas
or
and
pop
add
test
or
and
fistpl
adc
test
imul
push
xor
and
sarl
jmp
rclb
sbb
or
mov
cmp
push
mov
shlb
fbstp
fs
fcomip
mov
xchg
loopne
mov
iret
adc
push
sti
fimull
push
movsb
fcmovnu
mov
cmp
and
adc
inc
icebp
sarb
inc
jle
xlat
push
out
arpl
xor
test
aas
bound
imul
jge
jecxz
jmp
nop
push
fcom
lods
add
pop
jo
bound
icebp
xor
in
ljmp
xor
hlt
int3
push
loopne
inc
fwait
shlb
outsb
cmp
sub
or
gs
stc
aas
push
fucomp
xchg
jne
test
fwait
add
sub
mov
ss
rclb
adc
hlt
mov
dec
mov
push
in
add
xor
xlat
rcrb
cld
jg
add
push
jmp
inc
shlb
sub
in
xchg
or
push
sub
pusha
in
stc
mov
push
fildll
stos
inc
pusha
or
in
sub
fistpll
cmp
or
or
stc
and
mov
ss
lock
es
rorb
jnp
jno
adcl
fldenv
inc
pop
cmp
adc
xchg
push
loopne
aam
outsl
outsb
sub
loope
mov
cs
and
arpl
push
push
pop
hlt
jae
xchg
outsb
insb
dec
sbb
pop
jne
jmp
sub
fs
pop
jbe
imul
cmp
js
push
not
fnstsw
andl
push
sub
aam
enter
push
loopne
cmp
xchg
jg
mov
pop
xchg
sbb
jb
pusha
jnp
mov
leave
push
test
aaa
in
jne
sbb
inc
sti
insb
mov
jle
or
stc
mov
into
ret
std
push
inc
jmp
out
dec
test
push
lahf
inc
mov
fbstp
popa
jmp
sub
out
xchg
pop
add
add
movsl
or
inc
pop
jnp
push
rcr
lcall
inc
pop
sub
aaa
xor
sub
fiaddl
mov
outsb
mov
cmp
push
pop
add
aam
jmp
loope
fisubs
aad
push
jl
in
xchg
pusha
test
and
mov
sub
call
ret
xor
push
outsl
pop
or
rolb
imul
repnz
icebp
mov
cld
dec
pop
nop
mov
jge
xor
sub
and
loope
ja
jecxz
sub
sub
std
inc
test
or
cld
ret
adc
mov
pop
ret
repnz
add
aaa
fmuls
ja
xor
out
stos
jmp
jae
lcall
je
pop
or
fdivl
lock
sbbb
fldt
inc
or
sub
hlt
aaa
mov
data16
mov
ret
push
ds
mov
inc
popa
or
lret
adc
int
push
cwtl
test
ljmp
xor
mov
les
outsl
lods
loopne
push
inc
test
jo
mov
mov
testb
test
and
sarb
aad
xor
pop
clc
xchg
mov
dec
pop
popa
fcmovnu
fadds
mov
ljmp
fisttpl
ja
fdivrl
push
sbb
stc
push
in
mov
sbb
pop
cli
pop
roll
xlat
and
lock
mov
addr16
incl
lods
mov
sub
and
imul
ret
fidivs
mov
in
pop
mov
xchg
jge
imul
mov
mov
push
shlb
inc
into
out
jbe
pushl
int
dec
inc
inc
and
xor
outsb
out
mov
and
cs
mov
aas
cmc
mov
popa
cmp
jmp
lcall
xor
imul
hlt
add
pop
xor
addb
imul
xor
mov
addr16
subl
das
cmpsl
xchg
insl
mov
push
in
incb
xor
aad
pusha
and
pop
js
push
pop
scas
bound
inc
adc
inc
mov
lock
xchg
push
ljmp
xorb
sbb
bound
pop
lcall
pop
or
sbb
mov
lds
xor
inc
fnstenv
insl
cmp
popa
aas
enter
stc
call
sti
fucomp
mov
add
lret
jne
push
jl
sbb
jl
mov
or
jne
sbb
test
push
in
jmp
jecxz
pop
call
pop
icebp
sbb
sarl
push
fs
sbb
and
jmp
pop
and
fdivrp
xor
lds
jb
addr16
inc
sahf
inc
rorl
imul
xor
mov
mov
rcrl
and
jne
or
mov
scas
lds
cmp
mov
or
outsl
fwait
mov
movsb
jb
inc
cld
adc
fdivr
adc
sbb
jl
sbb
inc
mov
pop
sbb
add
or
fldcw
sbb
mov
adc
std
xchg
mov
xchg
pop
lahf
pusha
data16
add
iret
test
outsl
jo
xchg
push
imul
repnz
pop
insl
pop
orb
cmpl
aas
popl
ljmp
loope
ficoms
or
call
sbb
std
push
cmc
inc
jns
imul
aas
mov
add
mov
pop
lock
add
pop
sub
shrb
clc
dec
lods
iret
or
mov
fwait
jmp
xor
jb
scas
add
dec
push
adc
xor
lahf
int3
imul
inc
xor
mov
jg
insl
or
movsb
scas
push
push
mov
jmp
xchg
loope
out
dec
lea
adc
fildll
dec
addr16
daa
icebp
pop
adc
dec
mov
push
adc
es
lret
jo
adc
bound
stos
pop
add
add
sub
loopne
stc
aaa
jmp
and
ja
fnsave
push
leave
xor
and
das
jge
fwait
test
jbe
mov
dec
and
insl
jg
adc
hlt
xchg
xchg
or
xor
add
push
iret
out
adc
fimull
and
gs
push
sub
sbb
xchg
sub
add
mov
call
dec
mov
inc
stos
adc
mov
jno
call
mov
push
mov
jle
pop
stos
ljmp
insl
idivl
sbb
pop
sub
cmpsb
and
add
xor
or
sub
loop
push
scas
test
mov
aam
ja
lods
mov
or
outsl
pop
jns
mov
lahf
jg
add
mov
je
subl
in
mov
dec
push
or
loop
stos
fcmovnbe
sbb
xlat
push
popa
xchg
lret
in
jg
inc
popa
ds
mov
lock
aaa
cli
jno
sbb
in
push
mov
out
sub
push
insl
jg
cli
call
imul
aaa
hlt
int
fld
mov
fcoml
cli
or
and
xchg
leave
inc
dec
cltd
sub
dec
out
cmp
mov
or
insb
in
cli
cwtl
daa
sbb
pop
cmp
or
add
xchg
movsb
push
add
pop
dec
fucom
inc
mov
aad
inc
jno
dec
pop
hlt
outsb
push
sub
mov
jl
jge
jno
xchg
test
into
adc
dec
dec
movsl
inc
mov
lods
cmc
sbb
mov
adc
jg
sub
pop
sarl
push
mov
pop
scas
fnstenv
or
cs
cld
pop
test
insl
fistpl
mov
push
fcomp
pusha
lahf
or
gs
xor
hlt
pop
faddp
outsb
pop
jae
loopne
and
and
sub
shll
xlat
dec
xchg
jo
and
mov
faddl
inc
mov
cli
pop
lods
ds
adc
ret
inc
pop
mov
fwait
movsl
call
out
push
lea
or
jbe
mov
sub
xchg
inc
ja
jne
bound
inc
imul
pop
xor
push
mov
sbb
pusha
or
mov
or
aas
mov
mov
pusha
jg
ret
enter
out
pop
ds
pop
ljmp
dec
xchg
cmp
scas
add
cmp
push
mov
mov
movsb
je
addr16
xor
gs
pop
pusha
rcl
xchg
xchg
dec
xchg
jnp
jl
aad
outsl
adc
add
push
inc
aas
cmp
fcmovnu
loope
dec
sti
scas
sub
popa
imul
dec
jecxz
add
daa
adc
fcmovnu
call
jb
in
sbb
aaa
shll
jl
xchg
int
adc
pop
std
movsl
mov
jo
rcrl
call
add
jg
xlat
sbb
pop
xor
pop
jmp
out
sbb
mov
inc
or
aam
movsl
icebp
sbb
cmp
icebp
push
push
or
mov
push
cld
mov
inc
xor
into
shll
js
cmp
sbb
call
insb
stos
in
pop
mov
scas
jp
pusha
xchg
xor
repnz
push
je
cli
add
and
lahf
jge
and
hlt
adcl
std
mov
and
movsl
or
inc
push
insb
sub
cld
lods
mov
addb
push
push
jge
sahf
sub
in
out
jecxz
mov
jg
xchg
sbb
pop
mov
incl
les
pop
jge
aam
mov
repnz
xor
imul
mov
lods
std
mov
jno
sbb
es
call
jns
ja
pop
out
sub
add
data16
jmp
inc
push
cs
cld
ljmp
test
hlt
inc
sub
scas
fcmovu
push
loop
decb
inc
adc
std
idivl
push
jl
jecxz
cmc
jg
je
lret
dec
sbb
sbb
dec
ret
lret
bts
fcmovnu
ja
jo
push
push
nop
inc
push
sti
and
dec
cmp
iret
cmc
lds
cmc
xchg
call
aam
daa
mov
outsl
mov
dec
shr
fdivrs
or
push
push
or
mov
ja
xchg
mov
sti
out
sbbb
cmp
jns
clc
mov
jp
cmp
jno
lret
or
sub
dec
mov
and
daa
fdivrp
jg
mov
jmp
aaa
cmpsl
cwtl
enter
mov
and
mov
mov
lret
maskmovq
divl
pop
mov
addl
xlat
cmp
jbe
xchg
mov
mov
addr16
stos
mov
or
fimull
test
xchg
and
adc
jne
lret
cmpb
push
mov
sbb
adc
xor
jbe
and
fcom
sbb
fsubl
mov
ja
dec
and
pop
xchg
xor
pop
add
sub
dec
lods
std
cld
cmc
mov
jl
enter
or
imul
stc
cmp
out
mov
xchg
addb
pop
push
jae
inc
inc
dec
inc
insl
adc
stc
inc
je
lahf
test
sbb
adc
mov
std
pop
inc
xchg
daa
sti
push
cld
in
mov
ret
fxch
and
std
mov
loope
in
and
rorl
or
inc
cmc
outsl
inc
xchg
sbb
pop
mov
mov
aaa
icebp
fdivl
scas
adc
stos
sub
cmp
test
inc
sbb
xchg
daa
pop
out
iret
out
sbb
mov
cmpsl
dec
icebp
test
mov
in
push
sub
out
mov
sbb
jecxz
outsb
inc
push
scas
lock
sbb
xchg
dec
test
mov
or
jl
inc
sbb
divl
mov
or
into
push
add
push
xchg
xor
cli
xchg
stos
enter
lret
cmp
dec
enter
adc
les
loopne
push
mov
dec
mov
dec
push
xchg
adc
test
cltd
dec
movb
je
xor
pop
xchg
xor
xchg
jno
and
mov
imul
mov
test
dec
cmp
adc
cmp
fbstp
xchg
ret
or
ja
or
ss
push
andl
xchg
fwait
and
add
movsl
pop
pop
outsl
sub
andl
mov
cld
mov
jg
sub
push
out
mov
rorl
jge
inc
stos
add
push
adc
ss
fldt
repnz
adc
sahf
es
inc
add
das
sar
outsb
pop
adc
jo
add
jmp
jno
loop
mov
mov
loopne
aas
mov
insl
test
shlb
jmp
ss
insb
cld
lods
push
push
adc
mov
in
cli
or
jne
js
shrl
push
movsb
inc
lcall
push
dec
es
mov
jb
fsubrl
sbb
adc
ret
xor
mov
test
mov
mov
mov
lods
sbb
jno
scas
loopne
arpl
or
mov
shlb
negl
pop
les
cmpb
xchg
cli
inc
jne
xchg
mov
out
cmp
dec
ss
push
stc
pop
xchg
pop
dec
leave
xor
addr16
push
ljmp
stc
jmp
pop
sub
adc
lret
push
fisttps
adc
imul
shll
jecxz
popf
mov
inc
dec
mov
cli
jbe
inc
push
test
in
ljmp
mov
add
sub
jl
scas
mov
inc
jne
fsubrs
jnp
push
adc
xchg
inc
lods
mov
dec
jb
enter
loop
or
mov
adc
lock
mov
into
test
dec
aas
adc
in
jg
fwait
mov
jno
ret
loop
push
cmp
or
shl
stc
lods
inc
or
fiaddl
push
mov
xor
mov
jge
jp
dec
or
inc
pop
xorl
xchg
test
dec
inc
inc
lods
hlt
sahf
mov
lods
fstl
and
popf
or
dec
lock
les
repz
sub
stc
aam
daa
cmpsl
fsub
rorl
fists
mov
mov
clc
jno
rcll
insl
fadd
das
daa
sahf
and
dec
xchg
cmp
inc
mov
fdivrs
push
js
inc
loope
xorb
and
pop
cli
pop
inc
cli
inc
ficomps
js
cmp
jg
adc
fcmovb
or
subb
iret
cmpl
jbe
stc
add
add
aaa
push
jae
lret
clc
or
lds
or
xchg
fdivs
xchg
in
into
sbb
out
cmp
je
cmp
xchg
pop
sub
insb
cmpb
mov
xor
cmp
inc
loop
sub
mov
jo
test
mov
inc
popl
dec
fstl
mov
bnd
jo
call
jo
add
jo
fisubl
mov
add
sub
lds
aas
push
mov
dec
adc
pop
adc
mov
add
andps
jp
sub
push
outsl
and
pop
sti
adc
and
addb
aaa
aas
sbb
xchg
adc
xchg
xchg
stos
cmpsl
xchg
ret
addb
fstl
push
pop
lahf
pop
enter
in
jb
in
addb
push
repnz
insl
lods
cmp
loope
decl
cld
aaa
add
nop
dec
inc
lahf
nop
fdivp
lcall
jo
xchg
testl
cmc
push
jno
xchg
jae
imul
mov
js
add
add
mov
inc
dec
jl
mov
mov
aaa
test
add
test
sbb
cld
push
ds
aam
mov
xor
dec
hlt
sub
xchg
mov
inc
pusha
inc
imul
lahf
scas
xor
jg
pop
decl
xor
add
fwait
jns
je
push
xchg
jbe
cld
bswap
xor
fdivrs
mov
loope
mov
movsb
jo
fs
xchg
lahf
jp
loop
lods
mov
ja
jl
push
jge
ljmp
rorl
pop
push
xorb
aaa
mov
mov
adc
sub
roll
sub
push
mov
push
repz
xchg
and
test
sub
shrb
push
or
adc
sti
inc
xchg
call
cwtl
push
mov
pop
adc
in
test
adc
and
arpl
cmc
testb
mov
vrsqrtss
cmpsl
cmpsl
fcmovb
jg
pop
aad
inc
mov
mov
mov
int3
dec
push
cmp
arpl
mov
mov
test
fs
inc
push
xor
cmp
dec
adc
shll
push
lret
icebp
fldt
lret
call
call
or
stos
lahf
test
xchg
jl
sub
pop
ljmp
scas
xchg
into
sub
int
fcomps
stos
dec
mov
mov
shrl
cmp
icebp
lcall
movnti
xchg
es
inc
aas
push
movsl
pop
mov
popf
pop
mov
repnz
lods
sti
inc
loop,pt
jo
mov
and
ds
outsb
mov
jle
push
nop
ss
adc
mov
add
push
pop
call
rcr
daa
ljmp
lcall
js
sbb
inc
cwtl
cmpsl
sbb
xchg
or
pop
mov
push
xor
add
inc
jge
outsl
xchg
mov
jl
fildll
mov
test
mov
pop
adc
pop
push
mov
jno
out
ffreep
mov
insb
sahf
cmp
sub
stos
cmp
sahf
std
std
mov
ret
daa
imul
mov
pop
push
pop
xor
std
jbe
jns
mov
nop
mov
adc
stos
sarl
jo
adc
sub
adc
insb
jae
movsl
mov
lods
subl
loopne
je
sbb
inc
sub
outsl
add
mov
push
push
ljmp
pop
out
push
adc
in
lds
int
mov
push
pop
repnz
fwait
push
mov
mov
jecxz
call
loope
add
ss
lcall
aam
push
rep
adc
or
fs
pop
xor
loop
inc
jmp
mov
mov
std
jne
mov
push
pop
shlb
loopne
mov
xchg
inc
test
rolb
fwait
adc
enter
mov
orb
in
pop
push
test
cmp
dec
or
pop
mov
cmpb
mov
cs
test
pop
adc
pushf
xor
add
inc
mov
fcompl
inc
xchg
mov
mov
push
orb
dec
int3
add
add
incb
add
push
rol
add
adc
pop
outsl
rcr
data16
rcr
push
ds
mov
gs
lret
add
and
in
mov
cmpsl
push
andb
lea
sub
test
mov
and
and
test
test
push
mov
lahf
lds
test
outsl
fs
ret
or
fsubl
pop
push
pop
out
call
je
addr16
ja
ret
cwtl
jecxz
mov
cwtl
repz
adc
jns
dec
xorl
mov
lods
in
cmp
pusha
inc
std
negb
call
mov
leave
in
xor
jg
fst
sbb
lret
push
cwtl
icebp
xchg
repz
dec
mov
add
add
scas
test
out
loop
push
rorb
stc
or
mov
imul
loopne
xchg
iret
sub
push
pop
and
mov
push
pop
in
ss
mov
mov
add
sbb
or
testb
aas
sbb
pop
sbb
sub
addl
mov
mov
mov
jl
jbe
decl
sub
mov
filds
mov
stos
lret
cmpsl
add
popf
jg
pop
clc
xchg
or
cmp
xor
insl
push
mov
cmp
das
rclb
fdivrl
inc
dec
xor
in
cmp
das
das
mov
cmc
mov
insb
mov
jns
mov
repnz
loop
fs
or
loopne
je
fcomi
outsl
inc
mov
xchg
sub
jb
daa
adc
inc
or
or
push
push
icebp
ds
inc
fwait
test
mov
push
jbe
dec
xchg
dec
pusha
ljmp
jl
fwait
mov
sbb
sub
mov
dec
add
movsb
jbe
mov
add
sub
aad
sub
test
or
push
arpl
and
inc
push
pop
lcall
and
in
inc
sbb
adc
jp
mov
pop
xchg
nop
adc
mov
or
xchg
mov
stc
std
xchg
aam
and
popa
lods
mov
sbb
and
in
lret
add
and
cmp
cmp
pop
das
add
sbb
pop
mov
jbe
jle
xchg
cmpsb
stos
push
cli
imull
bound
test
jmp
xlat
dec
hlt
push
mov
dec
adc
test
leave
sbb
xchg
add
stos
add
out
imul
enter
std
and
divb
loop
sub
mov
mov
mov
pop
mov
xchg
xchg
sbb
sbb
out
fildl
xor
repnz
sbb
jle
inc
jmp
fnop
ret
push
incb
adc
jmp
imul
cld
lcall
test
mov
xchg
dec
lahf
or
xor
js
inc
ffreep
stos
ja
push
leave
mov
movsb
imul
fldt
push
pusha
add
test
xchg
int3
inc
mov
mov
lcall
or
sbb
mov
adc
stos
test
pusha
sub
popa
les
imul
push
les
and
ljmp
loope
add
test
js
mov
or
popa
add
inc
leave
or
fadds
gs
push
fmull
inc
in
test
mov
rcll
mov
mov
je
mov
into
sbb
in
push
jg
xor
cmpsb
push
push
lods
cmp
mov
sbb
add
xor
scas
fiadds
rorl
rcr
mov
jbe
cmp
mov
mov
mov
gs
jecxz
lock
or
cmp
and
call
ja
sub
fldl
repnz
pushf
fdivl
outsl
or
imul
and
outsl
mov
mov
in
or
xor
mov
xor
pop
dec
data16
scas
dec
cmp
lods
call
int3
cmp
dec
push
iret
jmp
adc
jecxz
icebp
jp
nop
add
out
lahf
or
movsb
inc
and
jge
push
mov
mov
add
pop
fsubrs
rcll
mov
cmpsb
xchg
dec
sbb
hlt
scas
enter
xor
mov
push
push
fcomip
add
xchg
lret
mov
fiaddl
aas
jbe
fidivl
call
jp
inc
cmc
xchg
ficoms
push
xchg
cwtl
xchg
sbb
and
clc
mov
add
xor
cli
push
fwait
movsl
add
aas
push
sub
add
sbb
jne
cwtl
and
push
enter
add
das
insb
lcall
dec
add
rcl
pop
lahf
bound
cmpsb
ret
cmp
mov
mov
or
rcrb
sub
std
mov
in
dec
pop
hlt
push
xchg
int
fst
mov
lret
ds
or
and
movsb
pop
popf
les
jle
push
aam
mov
jg
mov
loop
pop
fcoml
adc
int3
jo
test
test
xchg
clc
mov
sbb
push
cmp
mov
pop
push
and
cltd
outsl
and
or
xor
dec
dec
nop
sub
je
or
xlat
filds
add
adc
xor
jb
push
sub
rorb
cmpsb
sbb
iret
push
into
out
ret
testb
lock
nop
cmpsl
or
lods
test
sub
jne
pop
hlt
enter
ss
mov
sub
in
stos
jno
xchg
or
push
sub
jge
dec
lcall
pop
loopne
fistl
xchg
inc
sub
sbb
xchg
aaa
jae
fiaddl
or
or
shlb
push
sbb
dec
mov
jo
in
push
nop
movsl
or
mov
ror
push
mov
pop
inc
mov
sarl
add
aam
and
mov
jle
add
push
xlat
inc
aas
ljmp
fldenv
ret
movsl
inc
je
shrb
add
and
jb
mov
std
sub
dec
bound
sub
cmp
outsl
xchg
cltd
sbb
push
pop
data16
mov
into
and
es
out
repz
xchg
fsubrs
xchg
out
sbb
es
outsl
mov
test
jne
cmp
jle
mov
cli
push
clc
dec
jecxz
sbb
and
stc
xor
or
mov
add
sub
mov
fsubr
cmpsb
sub
shl
stos
rcrl
adc
dec
cld
sbb
mov
rcr
movl
cmp
add
mov
cli
inc
aad
cltd
push
pusha
mov
fdivr
sti
xchg
jp
repz
lea
es
pop
sub
fcoml
add
dec
mov
push
push
stc
test
out
pop
mov
push
xor
testl
push
fldenv
and
es
dec
sub
lock
orb
sub
adc
sbb
push
rcll
mov
dec
jb
xchg
xor
or
adc
sbb
sbb
xor
mov
pushf
xchg
pop
xchg
xchg
fisubrl
mov
mov
sub
sub
sbb
jb
sbb
clc
mov
mov
ljmp
daa
xor
xor
push
jno
pop
subb
addl
sub
or
xchg
add
or
in
mov
mov
std
rol
push
ss
dec
fmuls
mov
test
out
scas
fs
or
inc
mov
clc
pushl
in
add
and
fs
sub
std
sub
mov
xchg
mov
mov
outsl
lret
cli
xor
dec
mov
push
in
cld
xor
call
jbe
stos
in
fmulp
jp
incb
cmp
adc
jge
dec
ss
cltd
fwait
mov
or
rorl
pop
sub
sub
dec
sbbb
mov
or
nop
das
add
ret
sar
pop
push
bound
cmp
dec
ret
jle
int3
or
mov
jns
int
mov
xchg
cmp
data16
mov
lods
xor
pop
xchg
pushl
inc
push
or
adc
mov
arpl
lock
aaa
jno
dec
push
jbe
inc
adc
add
rorl
xor
dec
ss
jbe
inc
mov
es
inc
adc
xor
pop
jbe
adc
mov
andb
xor
jbe
test
mov
out
inc
jmp
adc
xchg
and
cld
jge
mov
adc
adc
pop
pop
into
xchg
leave
mov
mov
sbb
fs
sbb
inc
mov
xchg
iret
push
push
dec
mov
and
jp
cmp
mov
enter
clc
insl
mov
or
sbb
pop
arpl
push
mov
fisttps
pushf
aas
pusha
clc
add
scas
add
mov
shll
shll
in
adc
aaa
push
loope
jne
xchg
add
cwtl
adc
insb
ja
mov
or
pusha
xchg
xlat
mov
mov
call
sbb
call
mov
lea
imul
stc
or
por
out
adc
push
fcmove
adc
mov
inc
nop
ss
mov
fcmovu
jle
jne
lret
pop
ja
outsl
or
mov
loope
pop
cli
movsl
xor
dec
add
nop
xlat
xor
add
icebp
dec
aas
bound
or
es
mov
pop
mov
insb
jg
add
mov
xchg
pop
outsb
and
mov
jo
repnz
xor
fdivrl
sbbl
in
stc
jl
sti
dec
adc
xor
dec
and
int
dec
jno
sub
fildll
mov
cmp
rclb
in
ss
push
and
or
std
cmp
inc
bound
lock
xchg
pop
iret
ja
mov
fdiv
ds
push
mov
adc
cmp
sbb
pop
or
addr16
subl
pop
push
dec
shll
mov
mov
aas
add
push
nop
xchg
pushf
jle
xchg
fnstenv
les
xor
sub
das
or
scas
out
cmp
inc
mov
cld
addr16
add
inc
incl
hlt
js
aaa
xlat
pop
mov
cmpsl
or
out
and
inc
loop
mov
mov
push
pop
jnp
imul
mov
push
lret
sbb
sbb
sub
push
add
mov
stc
adc
lcall
int
xchg
data16
fdiv
push
dec
cltd
mov
mov
mov
movsb
jp
aas
sti
jg
sbb
mov
push
sbb
mov
mov
clc
sub
shl
adc
mov
lret
pop
mov
add
dec
test
sbb
out
mov
into
add
rcrb
push
movsb
jmp
dec
inc
push
mov
leave
mov
ret
mov
scas
fldt
fst
sub
cmpb
lds
jp
rcll
xchg
xchg
gs
imul
mov
int3
jmp
rclb
lods
cmp
rorl
push
dec
out
adcl
pop
fsubrs
cld
inc
fldcw
ret
mov
inc
and
pop
pop
mov
aaa
push
js
sbb
dec
lcall
push
mov
bound
imul
xchg
movsl
pop
mov
mov
push
insl
mov
les
mov
push
inc
sub
add
test
loopne
or
pop
push
popa
pop
sub
fidivl
lcall
inc
or
lock
ret
sbb
popf
jno
sub
mov
sbb
push
push
jecxz
daa
mov
xchg
fwait
js
fdivs
xlat
cmpsl
lea
outsb
fadds
enter
mov
pop
test
lcall
inc
add
xchg
xor
rcrb
lahf
aas
xchg
lcall
enter
sub
push
les
loopne
mov
int3
pop
xchg
sub
xor
add
sar
and
jg
sbb
xor
mov
clc
jle
lret
xchg
loopne
dec
cmp
inc
aad
pushf
add
das
in
call
pmullw
sub
pop
jecxz
fistl
decb
lcall
lea
loope
or
push
inc
lock
and
or
js
cmp
adc
inc
jnp
inc
xchg
test
mov
call
in
push
test
jnp
sbb
xchg
dec
pusha
in
sub
push
sbb
xchg
dec
mov
xchg
push
sbbl
das
insb
cmp
inc
jmp
addr16
cmp
push
gs
mov
jmp
add
cmpl
rol
add
test
mov
sbb
cmp
into
and
call
sti
jns
push
scas
in
cmp
push
or
mov
mov
movsl
lahf
dec
and
mov
sub
mov
mov
jg
add
xor
xor
cmp
and
jnp
cmp
cwtl
call
lods
jb
jne
mov
mov
xchg
and
clc
inc
push
push
dec
andl
add
adc
jecxz
adc
lods
shrl
jge
testl
dec
mov
scas
inc
xchg
call
aas
add
push
jg
push
adc
mov
aad
push
aam
sbb
jle,pn
lods
or
lahf
cmpsb
outsl
or
mov
ret
cmp
cmp
mov
fldt
movsb
push
pushf
cmp
fistpll
jl
jo
or
test
test
outsl
add
xor
dec
inc
cli
loopne
shl
xchg
mov
push
andb
xor
dec
adc
add
fiaddl
lods
and
mov
aas
cwtl
stos
pusha
inc
or
add
int3
mov
subl
mov
dec
into
cmp
and
pop
push
icebp
sub
fisttpll
ret
jge
aaa
xchg
fadds
js
mov
call
xor
adc
js
mov
sub
clc
add
les
loopne
popa
mov
inc
sbb
fdivrp
cmp
and
mov
andl
aam
jg
rolb
sub
cltd
or
and
aad
ljmp
aad
out
das
jg
sub
lods
out
ds
jo
or
shlb
cmc
scas
jle
ja
jnp
imul
lock
push
or
push
loopne
movsb
insb
pop
add
jmp
or
pop
add
insb
vdivpd
pop
cmp
mov
das
adc
pop
pushf
add
inc
bound
imul
nop
pop
and
shl
scas
lods
jmp
mov
outsl
inc
push
ss
int3
add
or
fists
fldt
ljmp
repz
idivb
mov
push
call
sbb
sbb
adc
adc
mov
inc
mov
leave
add
push
in
pop
inc
sbb
nop
pop
test
fldl
mov
arpl
dec
flds
push
hlt
test
mov
adc
adc
inc
push
sarl
xor
setbe
push
ss
jecxz
pop
pop
inc
mov
je
fsubs
cmpb
js
mov
mov
sbb
nop
push
jae
xchg
cli
outsl
pop
fcoms
cld
ja
push
push
sbb
shll
imul
icebp
or
inc
insb
fistpl
in
jne
sub
cmp
inc
pop
xor
push
adc
mov
ja
call
sbb
cmp
test
ffree
das
mov
lcall
pop
cs
jbe
jp
sub
xchg
sub
aam
enter
clc
clc
outsl
add
jno
xchg
rorb
pop
add
mov
adc
icebp
aas
rol
je
pop
jo
mov
jmp
inc
outsl
fsubrl
xchg
inc
ljmp
add
fimull
mov
pop
test
ret
sub
inc
cmp
jecxz
mov
sub
lret
pop
stos
fisttpll
testb
xor
or
jg
lcall
cmp
or
aam
pop
add
daa
jbe
sbb
enter
cmpsb
je
and
loop
cmp
popaw
add
cmpsb
pop
ja
fisttpl
mov
mov
inc
pop
push
add
andb
ljmp
xor
xchg
add
adc
xchg
xchg
loope
xlat
or
pop
cmp
add
pop
or
cmp
test
mov
mov
mov
cmpl
jp
mov
jmp
cs
push
or
and
cmp
cli
fsts
fsubrl
jl
xor
pop
dec
add
dec
or
divl
sti
stos
inc
mov
ret
lea
pop
pop
js
sbb
adc
clc
decl
push
xchg
rorw
jp
and
dec
cmc
inc
into
filds
stos
cld
mov
push
mov
add
in
ret
jp
gs
icebp
xchg
cmp
and
xchg
lret
sub
or
stos
out
pop
jle
shrb
sbb
jmp
jns
das
insb
mov
dec
jg
jo
mov
ret
cli
inc
or
adc
cmc
cmpsl
outsl
sbb
in
shll
push
stc
push
ljmp
mov
add
enter
incb
movq
cli
mov
pop
adc
push
sub
push
jbe
popf
in
xchg
jae
jg
adc
aad
pop
mov
cmpsb
jae
jbe
out
pop
mov
mov
enter
jmp
movsb
test
mov
test
xor
insl
xchg
test
and
mov
fnstsw
mov
int
js
outsl
mov
jbe
imul
aad
stos
mov
xor
adc
nop
rolb
fdivs
xlat
fwait
cli
push
inc
mov
lea
pop
inc
jb
jge
cmp
ret
sbb
lahf
dec
cmpsb
mov
mov
xchg
fistps
pop
jae
adc
arpl
push
pop
jp
cmp
xor
test
sub
adc
cmp
or
outsb
xchg
mov
mov
adc
out
mov
jns
mov
imul
jl
mov
loopne
ljmp
add
cmp
pushf
dec
pop
aas
mov
je
aaa
mov
neg
inc
or
out
mov
js
jg
fnstsw
mov
add
lock
stos
inc
stos
pop
repnz
test
outsl
stos
outsl
mov
mov
push
xchg
lret
daa
pop
loop
es
inc
lret
test
adc
sub
loop
add
xor
stos
test
adc
lcall
dec
iret
dec
shl
in
jbe
iret
jne
popa
jbe
test
test
sub
sub
or
call
push
je
int3
lea
hlt
adc
sub
out
loop
push
pop
add
int3
xchg
add
push
sbb
or
outsl
stos
cmp
filds
push
mov
sub
int
jnp
sbb
jp
inc
and
xlat
mov
jl
subl
xor
test
mov
loop
xchg
lret
ljmp
mov
mov
dec
adc
mov
addr16
mov
mov
add
push
cmc
incl
ficoms
cmp
xor
push
adc
jae
clc
and
sbb
mov
stos
mov
ficoml
dec
xor
ds
popf
mov
pop
je
inc
lods
push
cmp
sub
jns
mov
pushf
inc
insl
xchg
add
sarb
movb
enter
pop
fistl
pop
add
mov
shr
pusha
cwtl
gs
add
mov
cmp
mov
in
clc
jmp
or
dec
insb
out
sub
orb
push
mov
dec
or
stc
cmp
jle
mov
mov
xchg
sub
mov
mov
test
repnz
xor
or
push
dec
daa
dec
mov
stc
jae
into
push
in
mov
cmpb
leave
test
pop
js
mov
push
cld
lret
mov
fldt
dec
int3
pop
sub
inc
push
fstpt
fisttps
ss
xlat
jg
jp
pop
lgdtl
inc
jns
loope
add
in
inc
mov
psrld
imul
orb
and
mov
jo
mov
ljmp
add
inc
fdivrs
dec
rcrl
sub
push
lds
leave
jmp
and
jmp
testb
or
mov
ret
lods
hlt
fcoms
test
outsb
push
ds
push
fstps
movsl
add
inc
outsb
sub
div
xor
jge
aam
aam
bound
inc
pop
movsl
outsb
cmp
loop
subl
push
mull
xor
mov
push
les
bound
xlat
xor
fcomi
cli
mov
movsl
mov
cmpsb
xor
test
pusha
or
xor
pop
or
adc
push
xor
pushf
mov
call
dec
jg
jno
jo
rorb
ljmp
stos
stc
push
or
add
scas
jno
jmp
leave
push
pop
dec
xchg
mov
mov
or
inc
jbe
cs
sub
push
mov
lcall
orb
pop
xchg
mov
xchg
bswap
xchg
xor
aam
dec
xor
push
stos
mov
xchg
xor
pushf
add
inc
cmp
ljmp
mov
mov
lcall
rorb
mov
pop
xor
xor
push
push
sti
sbb
rorl
hlt
sbb
pop
cld
pushl
dec
imulb
sbb
call
or
out
int3
lgdtl
les
xor
mov
inc
sbbl
imul
inc
adc
push
cltd
inc
test
or
cmc
jbe
xor
jge
xchg
mov
xchg
xor
pop
fldcw
cmp
pushf
int3
xchg
pop
mov
xchg
mov
dec
in
mov
ljmp
pusha
cmp
pop
push
outsl
cmp
sbb
xor
clc
inc
sub
mov
sahf
adc
inc
dec
mov
and
scas
out
or
lods
sbb
sahf
or
gs
test
dec
iret
sbb
jg
out
shlb
adc
gs
jmp
nop
in
nop
leave
push
mov
xchg
pusha
jecxz
xor
add
lds
cmp
mov
lds
clc
mov
ffree
aaa
jl
clc
imul
stos
sbb
adc
inc
xlat
cmp
insb
or
and
mov
xor
push
xlat
mov
imul
frstor
add
hlt
int
decl
inc
sub
add
mov
push
std
pushl
mov
pop
mov
sbb
inc
inc
das
icebp
pusha
jne
jnp
mov
sub
movsb
repnz
mov
mov
in
mov
sbb
inc
es
jo
cmp
jle
cmp
std
call
sbb
jbe
and
sbb
in
and
cs
inc
cltd
inc
fisttpl
aaa
es
and
cmp
mov
je
sub
xchg
xchg
loope
int3
rcr
mov
sbb
add
fwait
or
stc
subl
jmp
adc
popa
sbb
das
add
cmp
test
cmp
in
jle
sbb
hlt
mov
cs
add
aaa
movsb
or
push
adc
add
pop
stos
movsb
std
lcall
or
addl
mov
inc
into
or
cld
aas
add
or
iret
or
mov
and
adc
adc
xor
mov
and
jg
outsl
scas
jno
mov
mov
mov
inc
inc
and
rclb
test
adc
mov
inc
pop
into
lret
pop
xor
shrb
and
les
cwtl
divl
aaa
rclb
test
xchg
lcall
outsl
mov
mov
xor
test
inc
pop
mov
xchg
sbb
das
sbb
jge
decl
sbb
cwtl
icebp
fadd
mov
add
push
arpl
dec
cwtl
push
jmp
aaa
mov
push
int
lock
repnz
out
inc
or
jne
and
mov
and
scas
repz
cmp
sbb
outsl
ljmp
sarb
mov
adc
shl
cld
inc
rcrl
xchg
and
lods
rep
mov
cmpb
adc
pusha
sbbb
add
jno
stos
and
icebp
std
sbb
xchg
mov
test
cwtl
bound
xor
aas
jns
aam
ljmp
sub
repz
cltd
ret
call
fsub
pop
stc
pop
sub
xchg
clc
mov
mov
cwtl
fcompl
inc
jmp
or
sbb
sub
cmpsl
sub
sub
shr
dec
imul
imul
cmpsb
push
inc
adc
dec
sbb
pop
push
adc
or
fidivs
dec
fistl
sbb
enter
dec
mov
aaa
sub
mov
ljmp
shlb
jno
push
int3
hlt
mov
and
popa
jecxz
movsb
shrl
ficompl
pop
sub
je
mov
insl
jecxz
mov
roll
and
adc
clc
pop
adc
adc
push
and
loop
inc
lret
pushf
cmp
dec
incl
dec
call
cmpsb
or
addb
cmpsl
cmp
ret
mov
mov
pop
inc
pop
ljmp
lods
icebp
pop
cmpsl
xchg
cmp
jecxz
cmp
dec
nop
mov
inc
in
sbb
xlat
bound
mov
push
std
in
scas
cwtl
xor
fs
jmp
inc
mov
pop
insl
out
arpl
mov
add
fstpt
in
movsl
adcl
mov
mov
lds
scas
inc
mov
enter
out
mov
sub
hlt
rcr
inc
stc
out
call
outsl
and
pusha
or
inc
sbb
xchg
or
add
loop
je
in
call
stos
lea
aad
mov
push
int3
dec
enter
dec
push
inc
ja
add
push
iret
xchg
jg
add
push
jge
pop
dec
dec
scas
cwtl
dec
xchg
sbb
fsubrs
ds
dec
and
and
orl
les
inc
sbb
rcrb
inc
jecxz
inc
jno
push
jl
push
fcomip
jg
inc
xorb
add
pop
mov
rcll
or
negb
outsl
xchg
sbb
jae
in
cld
std
lods
add
fistpll
fcmovbe
cmpsb
fists
outsl
mov
and
mov
jle
outsl
or
push
pop
xlat
add
movsb
or
cmpsb
scas
cmc
xor
xchg
ljmp
mov
hlt
or
xorl
loope
divb
adc
push
dec
inc
add
test
insb
and
xchg
sbb
test
mov
lock
sbb
and
subb
pusha
and
ss
mov
mulb
adc
and
and
adc
cltd
adc
push
daa
imul
incl
mov
adcb
out
inc
jb
mov
and
xor
push
shrl
add
mov
ja
leave
add
mov
xor
andl
bound
or
xchg
into
jg
fiaddl
mov
push
or
xchg
mov
sarb
xchg
push
push
jbe
sar
outsl
pop
dec
out
je
sbb
add
aas
clc
repnz
fisttps
inc
xchg
mov
jmp
hlt
dec
bound
pop
push
jge
dec
and
outsl
xchg
movsl
xor
dec
in
sahf
iret
clc
jle,pn
inc
mov
cs
adc
adc
rcr
sub
and
call
lea
loop
call
mov
call
add
xor
mov
and
leave
pop
sub
fwait
js
jecxz
lods
outsb
outsl
inc
lods
mov
add
in
sbbl
std
das
and
jns
pop
or
idivb
cwtl
aas
and
push
adc
or
adc
cltd
xorb
xchg
out
test
imul
push
repnz
lods
sahf
sub
sbb
bound
insl
insl
xchg
inc
xor
and
pop
addb
cmp
aam
das
int
xchg
jmp
std
into
stos
fbstp
pop
inc
sub
xor
out
mov
outsl
aam
adc
dec
loopne
pop
inc
mov
sub
decl
dec
into
stos
pop
dec
dec
xchg
pop
and
mov
pop
test
into
jbe
push
cwtl
lods
mov
sbb
push
lret
mov
xchg
test
xor
and
jg
aam
insl
les
mov
movsl
push
and
or
and
mov
inc
xlat
ret
aaa
shrl
push
loop
pop
imul
jo
xchg
jmp
and
mov
jl
mov
dec
dec
inc
data16
jecxz
push
push
mov
fidivrs
stos
mov
dec
in
dec
xchg
loope
repz
add
add
xchg
mov
mov
adc
mov
insl
insl
mov
mov
add
add
adc
jmp
fstl
daa
adc
lret
xor
xchg
sti
lcall
or
jo
mov
adc
xchg
adc
and
lods
jb
sbb
ja
ret
push
std
mov
and
xchg
fiadds
push
sub
mov
xchg
hlt
outsl
xchg
pop
adc
xchg
ss
loope
push
into
inc
push
sub
push
idivb
jnp
mov
mov
xchg
daa
mov
xor
out
in
enterw
in
cmp
call
cmp
imul
dec
cld
testb
arpl
mov
daa
mov
mov
ret
cld
clc
jbe
xor
stc
push
jl
jl
aaa
jb
clc
in
and
mov
push
adc
jge
shlb
rorl
cwtl
sub
nop
movsl
insl
aad
sub
aad
add
sub
aas
add
loopne
sbb
adc
cmpsl
sar
test
jg
add
mov
fwait
xlat
test
fldl2t
pop
push
test
mov
aad
push
jo
sub
hlt
or
inc
xchg
xor
sahf
js
shl
mov
mov
sub
out
xor
pop
lret
rolb
push
pop
adc
push
adc
aaa
cmc
hlt
mov
inc
adcb
in
mov
mov
int3
and
jp
ja
test
add
and
mov
je
addb
xorl
mov
shll
dec
xor
or
icebp
negb
cmp
or
inc
inc
fwait
mov
clc
add
pusha
push
fldt
inc
lret
mov
hlt
fildl
xor
sti
pop
pop
or
pushl
xor
insl
idivb
sub
stos
inc
xor
subb
dec
imul
mov
and
cmp
out
mov
sbb
dec
or
sub
pop
repz
sub
in
rolb
or
mov
adc
xchg
adc
subb
je
test
das
ljmp
lods
aad
outsb
ror
into
push
stc
loopne
scas
sbb
test
rorb
outsl
mov
sub
mov
pop
add
mov
mov
mov
cs
lret
pusha
push
adc
push
pop
mov
push
das
and
sbb
or
mov
or
adc
sbb
outsl
stos
addb
nop
sub
pushl
lcall
incl
dec
aad
or
adc
xchg
insb
dec
xchg
mull
mov
incb
insb
lods
or
push
pop
cld
testl
div
push
in
orl
mov
test
subb
fidivrs
mov
mov
cmp
add
aad
dec
sarl
xchg
jg
adc
cmp
mov
lods
jno
sbb
mov
lds
lods
or
lods
jp
inc
stos
popf
mov
or
pop
fsubr
xlat
push
rcrb
les
sbb
push
adc
das
lock
push
rorl
and
pop
fs
sbb
or
and
out
and
or
aad
out
into
icebp
push
adcl
adc
xchg
cld
shrb
mov
cmp
push
mov
lods
push
fisubl
jle
mov
add
push
mov
push
lods
pop
into
adc
adc
inc
cmp
mov
test
fstl
cmpsb
push
shll
jp
cld
or
les
jg
icebp
icebp
add
sahf
push
repz
jae
in
xchg
andb
ja
jl
jns
sbb
inc
ret
adc
xor
rcrb
clc
pop
push
adc
fdiv
mov
lods
lods
or
xor
ret
dec
fldt
std
cmpsb
jmp
mov
shlb
sbbb
adc
and
or
rorl
cs
mov
lods
fisttpl
in
dec
xchg
and
sahf
jl
xchg
aas
test
and
mov
jb
dec
mov
mov
pop
sub
cmovae
adc
adc
sbb
mov
and
mov
test
xor
test
xor
or
add
cli
sub
ljmp
iret
mov
dec
mov
fldl
fcmovnb
sub
lcall
seto
outsl
das
cld
jg
jecxz
pusha
lock
imul
loop
imul
sahf
loop
enter
adc
repnz
ss
mov
sti
or
in
lea
sbb
adc
sbb
and
pop
xor
dec
lods
jo
xchg
mov
test
out
enter
pop
clc
and
pop
icebp
push
xchg
sbb
mov
push
pop
adc
mov
adc
ficomps
or
mov
xchg
imul
icebp
dec
jno
stc
add
mov
cmp
mov
into
orb
push
or
ljmp
xor
insb
mov
inc
inc
or
xor
mov
cmp
inc
loope
push
mov
pop
jg
pusha
lahf
mov
dec
inc
lds
or
sbb
mov
clc
pop
and
and
cmc
lock
mov
push
dec
pushl
addl
aad
sub
outsl
fistpll
mov
call
push
mov
inc
inc
mov
mov
add
mov
mov
and
pop
xchg
adc
jno
sbb
jle
jl
xchg
cwtl
push
ds
repz
xor
and
or
int3
jo
cltd
cs
xorb
iret
dec
std
push
mov
jecxz
sbb
cmpsb
test
mov
movsl
or
jns
inc
mov
lock
push
xchg
sbb
in
mov
add
cli
xchg
mov
add
pop
xorb
dec
mov
push
into
adc
mov
icebp
call
xchg
sub
mov
ljmp
mov
mov
mov
add
or
pop
aad
lcall
pop
enter
sbb
cmpsb
movl
pusha
stos
or
nop
dec
mov
test
cs
or
cmp
js
test
xchg
push
call
scas
mov
ljmp
mov
push
mov
add
or
pop
sub
xchg
ja
xchg
loopne
aam
sbb
xor
jo
pop
cld
or
in
mov
fcmovu
in
call
and
inc
add
pop
cli
dec
rcll
movsl
xchg
insl
jo
loope
sarb
addr16
and
das
aam
test
add
repz
dec
add
dec
call
fisttpll
pop
mov
mov
lahf
or
add
ja
cmc
fxch
loope
xchg
or
sbb
fistps
mov
fwait
imul
popa
or
mov
or
xor
test
das
mov
cmp
sahf
inc
in
enter
les
pop
mov
add
stc
test
push
add
mov
pop
mov
lret
or
mov
stos
add
mov
aaa
fsubrs
add
push
jnp
pop
insb
aad
out
inc
xchg
int
xchg
jg
mov
notl
push
jl
add
ret
and
icebp
shlb
rcr
or
movsb
lock
add
jae
into
sbb
push
jge
dec
leave
sarb
imul
xor
adc
cmp
mov
and
pop
mov
aam
scas
cmc
inc
imull
adc
jg
sub
insb
loopne
pop
xor
hlt
push
aaa
jle
mov
cmp
mov
nop
fcoms
add
lahf
lock
aad
xchg
dec
insb
or
cmp
add
mov
cld
inc
or
scas
inc
push
dec
fstps
push
leave
mov
xchg
int3
xor
jnp
mov
mov
sti
scas
or
mov
jns
pop
mov
add
cmp
sub
mov
sub
movsl
jmp
mov
lret
fildll
add
cli
mov
jp
jbe
xchg
movsl
hlt
sbb
insl
bound
fwait
clc
push
test
or
push
jbe
negb
bswap
add
cli
fisttpl
jecxz
lock
push
icebp
lds
mov
lods
xchg
cmp
xor
pop
or
xor
shl
pop
mov
shl
pop
scas
inc
inc
call
push
rorl
icebp
insl
fsubs
rcrl
adc
or
rcrb
mov
and
xor
mov
jnp
scas
aad
test
jbe
push
arpl
push
pop
cwtl
and
inc
push
sub
jmp
cwtl
shl
sub
cs
pop
les
inc
inc
test
pop
push
add
jl
push
das
add
daa
out
push
cli
push
add
or
mov
sarl
adcl
inc
rorl
jbe
dec
mov
filds
aam
or
mov
mov
adc
call
das
jae
push
fs
fisubrl
insb
ja
cmp
loope
mov
sub
lcall
fucomi
lods
mov
inc
and
cmp
test
jne
push
call
push
js
mov
adc
mov
bound
mov
add
cmc
jno
rorl
pop
loope
ljmp
push
rorb
push
jo
lods
outsl
out
push
mov
add
lret
imul
in
pop
out
stc
dec
mov
adc
xchg
add
ds
addb
shrb
dec
sub
lds
push
test
inc
xchg
loope
or
cld
add
mov
adc
or
pop
and
pop
into
add
sbb
jnp,pt
or
popf
aad
cmpsb
mov
lret
xchg
jle
leave
rcrl
adc
mov
insl
lods
or
jo
aaa
pusha
gs
rcrb
push
dec
lret
and
mov
insl
or
repnz
movsl
mov
daa
inc
and
xor
or
fwait
xchg
cmp
sti
push
xchg
dec
popa
mov
aaa
test
addb
inc
negb
xchg
outsb
je
add
incl
push
dec
xor
ljmp
adc
pusha
lret
insb
xor
inc
lods
xchg
mov
xor
mov
std
das
jo
fnstcw
daa
loope
fisttpl
std
push
repnz
hlt
mov
inc
adc
loop
sbb
lods
xlat
add
push
or
pop
movsb
inc
or
sarb
imul
nop
mov
loopne
jmp
cmp
lock
jne
jp
loopne
test
pop
xchg
jmp
sbb
inc
pop
sbb
out
dec
clc
xor
and
xchg
pop
lds
jecxz
jmp
imul
mov
sub
pushf
mov
dec
test
shll
in
mov
fisubrl
and
ss
test
jecxz
fildl
addr16
repnz
mov
or
sahf
and
rcrl
jecxz
jg
and
idivl
dec
cld
inc
sbbb
ret
repnz
mov
leave
mov
mov
stos
or
call
out
stos
fwait
stos
jg
movsb
imul
sbb
mov
dec
jge
nop
push
js
dec
sbb
loopne
ret
or
add
adc
push
pop
ret
movsl
and
lds
or
mov
movsl
cli
add
push
das
adc
out
xor
pop
hlt
sbb
jnp
cmp
test
xlat
sbb
push
push
int
mov
xchg
lods
and
mov
xchg
ret
jmp
mov
mov
inc
mov
pop
cmp
pop
loope
loop
jmp
sub
test
pop
mov
shl
outsb
movsl
outsl
mov
cmpsb
out
cmp
cltd
test
in
sti
mov
scas
icebp
push
add
dec
adc
test
sbb
test
hlt
andl
add
fwait
jns
jmp
jp
aam
stos
mov
icebp
xor
jg
popf
fidivrl
mov
cmpsl
adc
mov
in
pop
jecxz
or
jp
cwtl
test
outsl
xchg
in
sbb
cmp
push
mov
mov
out
loopne
mov
dec
xchg
adc
gs
jecxz
fldt
mov
aam
xchg
sbb
imul
cmp
pop
call
add
pusha
adc
push
push
xlat
xor
cli
sbb
sarl
add
cld
ret
ret
push
lahf
push
stc
dec
inc
sbb
mov
test
loope
add
pop
cmc
imul
fnstsw
mov
or
in
mov
fisubrs
aad
jecxz
test
pop
push
add
dec
nop
mov
adc
or
sub
icebp
sub
mov
dec
add
setp
loop
insb
sub
jle
or
inc
inc
rcll
cmp
mov
lea
imul
mov
not
movsl
aaa
shll
or
push
push
lea
push
dec
sbb
gs
or
ja
aam
xor
ror
les
pop
sbb
pop
cs
dec
mov
movsl
mov
fwait
shll
jbe
rcll
stos
mov
add
push
daa
popa
mov
into
aaa
insb
aaa
jp
rorb
icebp
jge
or
outsb
cwtl
push
aaa
ficoms
ret
sub
out
fsubrl
add
mov
sbbb
mov
sti
push
dec
out
repz
pusha
pusha
loop
pusha
fistpll
push
movsl
adc
add
mov
hlt
das
lock
shrb
push
inc
mov
jp
ja
cmp
dec
jne
pop
xor
add
dec
jg
mov
movsl
sub
imul
stos
adc
cmpsb
insb
add
loopne
das
adc
fldt
rcll
mov
sub
push
sub
pop
lea
lock
mov
repnz
sub
cmpb
sti
test
lea
int3
jno
push
xchg
insl
outsl
lahf
ljmp
cmpsb
mov
or
jbe
scas
stc
les
data16
cmp
pop
sbb
jge
cld
pop
mov
jg
push
mov
cltd
std
ret
mov
stos
sub
ret
dec
cs
adc
jae
test
inc
rol
pop
inc
cld
and
in
add
std
lret
cmp
fimull
pop
inc
shll
cmpsb
xchg
out
enter
rcrb
sbb
push
cli
test
adc
lcall
xor
sbb
sub
sbb
aam
cmp
cmpsb
icebp
cmp
mov
sub
pop
mov
das
adc
adc
lahf
test
inc
jg
cmp
clc
rolb
jge
aaa
mov
js
sbb
andl
and
iret
outsb
jnp
lea
test
push
dec
mov
lods
imul
test
xor
adc
clc
fnstsw
add
fsubl
cmp
sub
xor
cwtl
cmp
faddp
jmp
or
adc
ljmp
mov
cltd
or
jg
dec
push
cltd
icebp
mov
dec
dec
lret
lods
mov
testl
add
mov
inc
std
js
in
pop
xchg
jl
xchg
pop
xor
jle
inc
rcll
out
jg
adc
out
clc
cmpsl
dec
lods
incl
sub
lods
test
mov
inc
ljmp
ljmp
sub
jns
dec
andl
ret
pop
xor
or
jno
call
fucom
cltd
jl
adc
cmp
gs
pop
sbb
cmpl
or
fimull
jno
std
jo
jp
mov
xchg
add
dec
rcrl
test
adc
sbbb
dec
lret
push
dec
shl
xchg
dec
jbe
nop
repz
jo
inc
dec
jg
inc
aaa
sbb
daa
sbb
out
push
fwait
outsb
movsb
jnp
adc
cmp
sti
movsl
inc
movsl
xorl
incl
test
addr16
clc
add
xchg
sbb
push
lcall
shll
hlt
mov
inc
add
icebp
mov
cmp
cmp
and
fists
aam
dec
movzwl
adc
ficoms
stos
xor
mov
es
push
inc
inc
lahf
dec
and
sub
ret
jg
rclb
adc
bnd
les
sub
sbb
test
decl
adc
dec
bound
arpl
arpl
xor
add
dec
push
dec
inc
inc
dec
inc
dec
dec
inc
push
dec
setno
pushl
data16
jae
bound
jb
jb
dec
cld
or
inc
jne
push
jae
xor
xor
cmp
in
push
test
jb
gs
xor
cs
insb
scas
std
scas
or
xor
ss
ljmp
imul
shr
xchg
hlt
stos
sbb
dec
lods
and
fldt
pushf
push
enter
movsb
sbb
push
stos
into
mov
shll
mulb
lcall
dec
popa
push
int3
inc
mov
or
adc
outsb
xlat
dec
aam
xor
jge
push
imul
roll
popf
clc
icebp
int
fsub
cmp
fcoml
sub
cmp
mov
cmp
adc
cmpsb
push
push
pop
mov
rorl
out
enter
incl
pop
jg
mov
pop
shll
adc
pop
imul
add
cmp
data16
dec
lds
mov
push
jge
ja
pop
mov
jmp
jmp
sub
sarb
cs
mov
mov
ret
adc
sbb
std
jg
test
pop
mov
mov
inc
popf
cmpsl
pop
cmp
test
sub
or
shl
sub
inc
jecxz
repnz
call
stos
fisttpl
pop
mov
aaa
rolb
sub
jl
sbb
jmp
in
push
test
mov
fwait
pushf
js
mov
into
fistpll
cmp
cs
cmpsl
orb
ljmp
cmp
adc
js
xchg
iret
inc
mov
xchg
out
jne
in
sbb
pushf
shl
ljmp
add
adc
rcrb
cwtl
mov
popf
xchg
dec
push
bound
ficoms
idiv
pop
cli
xchg
jecxz
lds
cmp
inc
fwait
push
jle
leave
cmpsb
negb
aaa
jecxz
and
adc
cmp
dec
fbstp
lea
imul
out
in
mov
sbb
sar
push
or
clc
fldcw
add
or
sub
mov
push
dec
movsb
pop
mov
or
adc
sar
fnstsw
cmp
jmp
lahf
mov
es
fisttpl
push
jg
movsl
push
push
mov
scas
pop
pop
and
mov
mov
sahf
out
pop
push
pop
incl
int
and
loop
lods
clc
nop
add
aad
fistl
inc
cmp
out
pushf
test
mov
adc
lcall
mov
int3
inc
add
sbb
sti
jno
in
fisttpl
mov
pop
decl
jle
bound
push
loopne
ljmp
push
fwait
sub
clc
call
gs
mov
dec
mov
jmp
xchg
in
movsl
dec
pop
cltd
or
lret
insb
fsts
mov
sub
fwait
jecxz
ljmp
stc
lret
mov
mov
testl
das
inc
fisubl
jg
repnz
xlat
aaa
push
ds
mov
xchg
lcall
idivb
mov
cli
or
in
out
ss
push
xchg
ret
mov
mov
stc
outsl
out
bound
xchg
data16
xor
inc
dec
adc
mov
pop
xchg
add
popa
outsl
cli
dec
or
inc
sbb
insl
into
rorb
inc
xor
mov
aas
sbb
xor
jp
iret
mov
shlb
jecxz
outsl
mov
imul
inc
mov
dec
jecxz
bound
sarb
cmpsb
insb
decb
ljmp
aad
pop
mov
add
inc
inc
dec
mov
ljmp
mov
aam
fstpt
inc
ja
call
pusha
outsb
int
aad
jg
lcall
or
xchg
add
mov
push
and
cmpsl
adc
sti
sti
mov
std
outsl
mov
test
mov
jecxz
inc
test
pop
ds
fisubrs
fldl
adcb
xchg
in
dec
call
jg
ret
test
fs
xchg
lret
test
call
or
push
dec
shrb
adc
insb
jecxz
mov
lea
clc
mov
ds
jno
and
sub
adc
jg
add
aad
imul
inc
add
dec
inc
jbe
test
frstor
adc
loop
xlat
or
or
jno
je
pop
and
jg
cld
jnp
push
int
mov
jo
add
dec
fsub
add
dec
das
std
lcall
loope
outsl
test
cmp
ret
repz
dec
xchg
repnz
pushl
cmp
call
cwtl
roll
pop
add
push
andl
popl
or
bound
pop
adc
jmp
pop
clc
in
aad
test
ds
call
push
lahf
sbb
add
mov
test
mov
cmp
les
mov
push
rcrb
dec
sarb
sbb
lock
in
incl
xor
call
push
mov
mov
shl
rcl
xchg
shl
and
call
xchg
inc
mov
pop
outsl
sub
jae
mov
adc
jecxz
aaa
jno
sar
xchg
sbb
inc
adc
es
outsl
push
js
bound
cltd
inc
mov
push
pop
cli
mov
insb
jae
cmpsb
or
ret
lcall
add
sti
shl
pop
std
incl
shr
jne
insl
out
jmp
sub
mov
xchg
mov
sub
pushf
call
push
out
push
jmp
xor
cli
inc
xchg
inc
ret
daa
pusha
les
fcoml
das
pop
clc
int
or
add
outsl
lea
push
faddp
jnp
daa
add
jg
jg
icebp
sub
insl
in
adc
ret
les
sub
xchg
decl
sbb
sbb
jl
dec
stos
lahf
lods
gs
dec
jns
hlt
ljmp
imul
ficomps
outsb
mov
movsl
test
repnz
ja
ljmp
pop
aam
dec
jg
stos
pop
adc
out
push
mov
mov
test
cld
pop
cli
lods
push
inc
icebp
pop
daa
jnp
sbb
jecxz
pusha
mov
mov
push
xlat
aam
sahf
in
push
fdivs
fisttpl
mov
pop
push
fbstp
push
leave
fwait
movl
movsl
add
jmp
outsl
movsb
sbb
add
je
out
insb
pop
test
into
inc
shrb
cs
cmp
jecxz
hlt
fistl
pop
lea
incl
cmp
test
and
pushf
adc
jne
gs
arpl
sbb
call
cs
loopne
shl
cmp
adc
push
mov
mov
aad
dec
stos
xchg
sar
test
jne
arpl
leave
mov
push
hlt
sbb
jl
in
in
cmp
add
int
push
sbb
fld
jbe
loope
test
mov
icebp
in
sub
call
push
push
pop
xor
mov
popa
test
decl
cld
xchg
inc
mov
cmp
movsb
rorl
mov
mov
jmp
stos
sbb
push
or
call
sbb
push
das
cmpsb
sbb
fisubrl
insb
out
pop
enter
icebp
xchg
insl
add
dec
sbb
pushf
ss
jg
adcl
add
lret
daa
dec
daa
mov
pop
push
sbb
xor
and
test
push
sbb
cmp
push
jne
incl
mov
mov
fs
jl
mov
inc
lock
add
pushl
xchg
mov
add
popf
ret
pop
cmp
pop
ficomps
femms
jns,pt
lcall
hlt
push
dec
in
rcrb
cmpsl
and
xchg
jmp
clc
mov
push
ljmp
sbb
push
imull
or
leave
sahf
sbb
or
pop
mov
ljmp
xchg
scas
sbb
jl
push
sub
or
mov
pusha
sbb
mov
insl
jl
fucomi
sbb
and
ljmp
mov
imulb
jnp
xchg
inc
xchg
loope
arpl
icebp
xchg
ljmp
cli
pop
mov
or
or
repz
mov
into
frstor
dec
jbe
xchg
mov
sti
add
rorb
lcall
cmp
js
push
push
jo
jno
xchg
dec
xchg
adc
inc
data16
or
repz
pop
jbe
cld
sbb
mov
das
leave
out
inc
mov
xchg
subb
pushl
pop
bound
sbb
insb
pop
xchg
xor
and
lds
lret
data16
dec
rorb
ljmp
mov
jg
mov
sub
mov
xchg
cmp
lret
daa
int
arpl
cmp
lcall
push
ds
inc
jne
add
sbb
pop
inc
cli
ljmp
cmp
mov
in
movsl
pop
mov
xor
in
xchg
jb
in
push
dec
push
mov
jno
inc
pop
rcr
add
call
sarb
daa
xchg
mov
je
mov
jg
ret
mov
push
sahf
sub
je
imul
mov
ljmp
pop
insl
xchg
jbe
mov
clc
mov
jae
pop
push
inc
xchg
cmp
jns
repz
outsl
std
lret
out
mov
xor
mov
sbb
adc
cmp
jae
mov
or
push
shl
int3
mov
lret
inc
jg
cmp
dec
or
mov
mov
push
aas
loope
dec
outsl
js
fbstp
xlat
arpl
mov
cmpsb
loop
cmpsb
js
push
outsl
std
outsl
jge
pop
aam
in
pop
cmc
mov
mov
sbb
std
mov
sbb
cmpsl
sub
jne
cmp
mov
cmc
movsl
stc
sbb
cmp
add
decl
adc
push
in
xchg
rorb
std
pop
insb
shlb
hlt
call
stos
in
xchg
dec
test
movsb
pop
rolb
adc
decl
daa
lret
inc
mov
cmpsl
fsubr
test
xor
jecxz
ljmp
inc
mov
fdivs
insb
sub
ljmp
jmp
xchg
jg
aaa
repz
dec
shlb
movaps
add
aaa
and
shll
test
call
call
bswap
fsubs
sub
rcll
jmp
jno
adc
jae
and
sbb
ljmp
xor
adcb
adc
sti
incl
push
fidivrs
mov
pusha
mov
jg
insl
in
pop
popa
sub
ds
cs
xor
popf
mov
stos
in
hlt
cmp
mov
push
pop
jno
mov
jecxz
in
jnp
fucomp
fcompl
shlb
jno
incl
or
inc
cmp
cmpsl
sub
jnp
outsl
mov
ret
nop
jbe
test
push
das
pushl
jno
or
jge
movb
imul
dec
or
jnp
sub
mov
and
imul
out
fisttpl
decl
and
sub
pop
adc
mov
repnz
repz
add
mov
ljmp
movsl
test
dec
jge
and
icebp
jg
pop
dec
in
push
negl
int3
out
lret
mov
lcall
xchg
jl,pn
jb
sarb
ds
push
arpl
jle
mov
mov
xchg
mov
stc
negb
decl
or
scas
gs
loope
or
test
xchg
aaa
cmpsl
cmp
pop
push
adc
jecxz
aad
fstl
lret
cld
adc
popa
xor
sti
pop
es
mov
ret
mov
adc
fimull
mov
xchg
repz
test
push
pop
mov
jg
or
call
gs
jae
test
mov
adcl
scas
sub
dec
mov
adc
pop
and
ljmp
mov
jecxz
mov
inc
sbb
out
xchg
dec
sub
jmp
mov
dec
push
or
push
sahf
adc
subl
xor
iret
lods
insb
imul
pop
cld
test
clc
mov
out
lret
add
inc
pop
inc
pop
loopne
das
push
mov
and
adc
lret
xor
das
icebp
sbb
jo
mov
hlt
xchg
pop
mov
mov
ja
sub
cld
or
xchg
je
out
and
ss
subl
imul
push
ljmp
test
mov
push
xor
and
imul
in
out
fdivrs
out
jecxz
rcll
gs
rcrl
clc
xchg
xor
call
xchg
dec
mov
pop
push
inc
hlt
mov
je
clc
dec
adc
push
scas
rep
sub
gs
pop
loope
es
mov
scas
addr16
lock
xchg
clc
or
mov
rcll
adc
sbb
addr16
mov
xchg
andb
cmp
in
in
lcall
jle
clc
and
cmovns
aaa
scas
xor
into
jle
sbb
jecxz
pop
mov
cmpsl
sbb
fidivs
jmp
outsl
lock
jmp
pop
sub
cli
in
shlb
push
xor
dec
xor
pop
cmp
aaa
pushl
cmp
ljmp
repz
pop
xchg
mov
inc
out
aaa
test
xorl
sbb
or
int
jae
mov
cmp
jg
jg
mov
push
lds
pop
scas
sti
fwait
enter
push
int
mov
lcall
ja
push
mov
pop
call
dec
add
add
jo
fisttps
dec
pop
sbb
adc
test
pop
inc
lret
test
sahf
outsl
jne
jno
jecxz
or
push
mov
loope
aaa
scas
cwtl
lcall
dec
xchg
inc
sbb
pop
pop
fistpll
loope
dec
or
arpl
mov
fcompl
nop
cmp
sub
xchg
jb
std
icebp
decl
mov
loope
xlat
cmp
rorl
inc
enter
xor
pop
push
rol
cmpsb
and
pop
in
cmp
lcall
icebp
ja
mov
jmp
push
mov
decl
nop
pop
out
xlat
pop
fsubl
xor
push
mov
push
imulb
out
lret
stos
mov
cmp
jecxz
pushf
adcb
inc
xor
mov
pop
and
or
les
mov
xchg
or
jg
cld
aam
ret
and
jno
mov
mov
inc
mov
bnd
ds
mov
push
ds
adc
jno
cwtl
mov
jg
add
lahf
int
inc
stos
adc
jns
ljmp
adc
stc
lcall
mov
mov
jno
inc
fimuls
pop
pop
pop
mov
adc
faddl
fwait
sub
call
stc
push
mov
call
xor
add
add
lods
pop
pusha
sbb
mov
into
int3
xorb
push
cld
sub
ja
mov
ljmp
inc
out
pop
dec
pop
jno
and
sbb
arpl
sub
push
loopne
xchg
jp
jbe
mov
out
fimull
jecxz
xchg
ljmp
popf
in
outsb
in
mov
sarl
inc
mov
clc
jmp
pop
mov
or
out
inc
fdivr
add
xchg
adc
xor
push
imul
insb
insb
outsl
arpl
jno
push
js
jg
cld
mov
pop
bound
ss
data16
ja
jg
jne
push
insl
jbe
jae
jb
xor
jbe
popa
xor
je
incl
nop
outsb
jbe
dec
insl
imul
dec
gs
lret
add
js
pop
fs
inc
push
js
cmp
pop
imul
dec
jb
xor
adc
bound
jne
xor
aaa
or
aas
xchg
rcll
inc
dec
push
push
push
dec
push
dec
dec
pop
inc
jae
fdivrs
insl
inc
js
addr16
inc
dec
insl
jno
dec
imul
xor
outsb
popa
je
cmp
stc
add
jne
arpl
cmp
cmp
or
arpl
imul
mov
jecxz
subb
je
sub
pop
loop
imul
insb
jno
push
mov
je
push
inc
jo
mov
adc
jl
das
lret
ljmp
add
je
outsl
arpl
push
imul
idivb
idiv
gs
je
jb
bound
gs
and
jb
outsb
je
jb
push
fdivl
fs
or
sti
mov
inc
js
push
and
jb
popa
out
fisubrl
adc
push
imul
pop
mov
insl
dec
adc
jo
xlat
cmp
jo
push
insl
push
push
stc
mov
mov
popa
jb
push
jns
jb
ja
aaa
insl
push
outsw
xor
or
mulb
outsl
and
adc
sti
jg
push
imul
dec
jne
je
inc
jns
lcall
aas
inc
inc
push
rorb
out
xlat
fiaddl
inc
mov
inc
jb
ds
mov
inc
inc
jae
mov
notl
sbb
push
jecxz
xlat
push
outsb
lahf
xchg
dec
outsl
fs
dec
sub
add
cmp
push
imul
mov
outsl
inc
or
push
cwtl
rcrb
push
xor
lret
in
push
or
jo
pop
add
leave
adc
lods
fcmovnu
or
inc
xchg
dec
or
sub
in
popa
dec
push
das
jne
addr16
adc
int
inc
jo
ljmp
jp
insl
arpl
sbb
dec
imul
fcoms
adc
sbb
push
inc
push
outsl
imul
imul
push
js
outsb
insl
lcall
aas
jg
in
js
or
fs
pop
mov
jae
cmp
popa
insl
dec
inc
dec
inc
adc
cmp
mov
push
outsl
cmp
insl
out
xchg
jno
outsl
divl
imul
jne
push
data16
lret
mov
sarl
je
imul
dec
das
jmp
cmp
inc
sbb
lcall
cmp
pop
ja
sbb
pop
cmc
xor
adc
rolb
inc
inc
fstl
jp
inc
je
fisttpll
lods
in
call
outsb
xchg
xchg
fsts
dec
push
loope
sbb
push
inc
dec
inc
dec
push
popa
bound
int
sti
lcall
mov
push
insl
jno
push
bnd
dec
ret
jns
jnp
bound
js
js
inc
loopne
gs
arpl
inc
dec
insl
xchg
fisubrs
jo
sbb
icebp
inc
scas
mov
xchg
ret
and
mov
imul
jb
dec
push
subb
data16
and
xor
jae
lds
xor
jns
outsl
sub
dec
xor
inc
cmp
popa
ret
dec
or
jae
xchg
xchg
mov
xor
push
out
xchg
pop
sti
inc
adc
scas
inc
cltd
fucomi
xor
xchg
jbe
js
or
inc
cwtl
push
mov
popa
jbe
xor
jae
sbb
scas
sbb
addl
pop
mov
fildl
lods
insb
jns
stos
aaa
aaa
sbb
xchg
cwtl
roll
cmpsb
insl
sbb
inc
jb
mov
fwait
movsb
add
popa
in
add
push
outsb
sub
xchg
pusha
jae
outsb
jne
push
cmp
dec
ret
insb
pop
dec
imul
dec
outsl
pop
jae
in
inc
jb
pop
mov
pop
or
ja
sub
mov
xchg
adc
and
pop
mov
mov
inc
outsb
or
jmp
dec
arpl
xor
cmp
mov
add
ret
mov
rorb
div
push
shlb
jae
arpl
shll
or
pushw
xlat
inc
pop
cmp
jo
mov
xlat
shl
jl
pusha
outsb
jmp
in
jb
sbb
sbb
inc
shrd
push
dec
inc
push
jbe
or
loope
dec
jae
clc
mov
or
mov
dec
filds
ret
xor
cltd
or
pop
mull
pop
mov
xchg
outsl
test
xor
cmp
inc
or
xor
outsl
add
mov
mov
je
loop
gs
dec
cmpsb
push
mov
imul
pop
jno
adc
cwtl
cwtl
add
fsubrl
loope
inc
mov
lret
loopne
sbb
push
bound
ds
insb
sbb
imul
cmpsl
and
sbb
data16
shlb
sbb
out
stos
adc
push
addr16
mov
ret
xchg
mov
inc
jge
pusha
mov
popa
dec
dec
mov
test
xchg
xor
or
stos
sbbb
xor
pop
mov
icebp
and
add
xor
test
xor
dec
adc
test
into
ja
xor
es
or
int
daa
mov
shrb
outsl
out
mov
daa
push
dec
les
cmp
pusha
das
push
in
jb
push
inc
pop
rcll
in
mov
mov
jp
pop
lret
push
movsb
out
gs
mov
push
jne
dec
or
inc
dec
test
pop
adc
roll
cs
fnstenv
scas
and
mov
cwtl
jb
pop
pop
cmp
inc
and
inc
lea
mov
outsb
pop
adc
insl
lea
mov
mov
xchg
xchg
cmp
repnz
push
test
push
notl
iret
call
add
or
add
add
add
out
fsubs
add
add
or
jb
add
add
add
insb
ss
xor
pop
lret
out
xchg
push
or
subl
orb
je,pn
popf
int
jae
nop
rol
or
mov
jmp
adc
xlat
sub
mov
das
xor
les
gs
jp
daa
rorb
lods
test
push
add
loope
push
inc
adc
lea
add
add
or
jmp
adc
mov
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
sub
add
enter
adc
add
or
add
add
add
add
add
push
add
addb
add
js
add
mov
add
add
add
add
add
dec
mov
add
add
sbb
add
mov
add
add
sbb
add
mov
add
add
add
loopne
add
add
add
sbb
add
add
add
add
add
add
add
add
addb
add
sbb
add
add
add
mov
add
dec
jno
add
add
add
add
add
add
add
add
into
in
jecxz
into
out
add
out
add
in
testl
iret
std
ret
add
in
add
std
fildl
sti
in
add
in
add
ja
add
jge
add
jg
add
gs
add
in
add
in
inc
or
ja
fsubrl
mov
je
adc
inc
ficoml
lea
outsb
add
sub
das
iret
lret
mov
pop
pop
and
sbb
addr16
loope
stc
inc
jns
and
xor
jbe
jmp
outsb
sub
push
lcall
pop
movsb
inc
pop
ret
cli
mov
and
xchg
push
sahf
dec
lock
test
fsubrl
mov
notl
mov
mov
fistl
out
iret
pop
cmpsl
sbb
lods
cmp
mov
fcomp
cmp
fidivrl
ja
jo
or
stos
mov
dec
ja
ret
jo
add
rol
pop
clc
cmp
sub
jg
add
and
dec
cmp
jns
pop
into
imul
jp
jae
add
xor
ror
jge
inc
rcll
fwait
xor
cmp
fs
das
pop
repz
add
cmp
icebp
push
in
jge
mov
call
mov
and
and
and
or
xor
cmp
pop
xchg
sub
mov
scas
popf
sti
and
lret
loope
pop
push
js
in
xchg
movsb
adc
mov
mov
mov
cltd
jmp
gs
sbb
mov
or
jae
cmp
sbb
scas
sub
out
xor
inc
mov
test
pop
ss
xor
ds
stos
add
pop
out
leave
or
jp
shll
xchg
and
aad
ret
fs
mov
dec
mulb
sub
mov
mov
out
push
arpl
or
inc
aaa
or
pop
xor
push
sub
lock
adc
jae
filds
push
dec
imul
push
lret
xor
int
out
cmp
xchg
sbbb
pushf
dec
int
aaa
sahf
rclb
shlw
sbb
mov
fsubrs
or
scas
or
add
cli
mov
push
push
cmp
inc
int
xchg
cmp
mov
push
jns
xchg
sbb
xor
ljmp
in
inc
loope
push
mov
xchg
out
dec
mov
ficoml
imul
leave
sbb
jp
adc
and
ss
rep
nop
sub
jne
icebp
mov
jbe
neg
imul
inc
or
sbb
sbb
xor
test
sub
jmp
mov
jecxz
leave
test
rcl
scas
loope
and
call
adc
es
lea
mov
addr16
mov
or
xchg
xor
cmp
hlt
xorb
sub
push
mov
xchg
sub
mov
jle
mov
pusha
cld
xchg
dec
jg
add
into
cmpsb
cmp
sub
imull
xor
lcall
jmp
xchg
mov
test
stos
mov
pop
dec
daa
divl
icebp
jl
sahf
xchg
ss
sbb
sbb
fnstsw
int3
dec
jmp
and
out
jo
and
xchg
xor
pop
call
or
and
push
mov
movsl
push
mov
in
hlt
stos
or
imul
cmpsl
pop
or
pop
mov
shrb
std
xchg
inc
push
mov
je
jge
adc
add
pop
mov
dec
in
push
push
mov
dec
mov
clc
xor
mov
cmpsl
call
dec
sub
cmp
mov
lret
mov
lods
ss
pushf
or
jmp
addb
xor
ret
mov
dec
les
pop
mov
jbe
jg
fxch
mov
xor
lock
adc
or
popa
jecxz
rorb
xchg
aad
ds
outsb
cmc
ja
pop
stc
mov
adc
sub
loopne
call
imul
fsubr
and
sub
jl
mov
xor
mov
adc
clc
xor
xchg
nop
push
lret
add
add
add
add
add
add
add
add
add
out
scas
sti
add
out
iret
add
scas
filds
mov
scas
jmp
scas
fildl
ljmp
out
add
scas
out
add
out
jmp
mov
mov
sti
add
fsubl
pop
inc
cli
xchg
dec
cli
shlb
scas
and
mov
dec
arpl
or
and
xor
add
ffreep
mov
in
cltd
cmp
add
sahf
xchg
insl
cmp
pop
int
lock
sbb
jge
pop
test
push
push
pushf
xor
mov
push
mov
mov
jnp
inc
jnp
enter
adc
pushf
and
cmp
push
out
ret
dec
test
in
pop
xorb
mov
mov
inc
movsb
lret
loopne
mov
push
stc
and
push
leave
or
jnp
incb
decl
jbe
iret
or
push
jae
shll
cmp
xor
enter
cmp
inc
or
jle
sbb
push
negb
mov
inc
daa
rol
push
mov
call
jg
dec
jle
out
xor
daa
in
mov
es
loop
movsl
ja
cli
add
jg
and
fs
and
loop
cmpsb
fnsave
aad
dec
sbb
frstor
and
cmpsl
lahf
xchg
mov
rcr
into
pop
sbb
sbb
in
pop
jmp
clc
aaa
push
mov
mov
inc
movsb
hlt
add
lcall
adc
push
pusha
insb
push
xor
cmpsl
or
cmpsb
mov
and
cmp
jg
mov
out
cwtl
bound
jnp
aaa
mov
insb
pop
int
or
mov
add
pop
push
ss
pop
shlb
repz
mov
xchg
dec
sub
cmp
bound
mov
or
pop
mov
mov
out
sub
lretw
imul
inc
movnti
imul
xchg
xlat
cmp
imul
adc
bound
int
or
add
add
jnp
add
add
add
add
add
add
add
add
jg
popf
add
jmp
add
stc
mov
add
jmp
add
popf
add
add
incl
jl
mov
add
jmp
fldl
cltd
pushf
jp
das
rep
pop
sbb
addr16
testb
dec
outsl
pop
sbb
in
iret
and
push
mov
add
mov
mov
dec
cltd
icebp
or
cltd
mov
mov
mov
dec
imul
repz
fsts
ror
dec
jmp
fsubrp
push
fstps
lahf
add
dec
pusha
sbb
mov
lods
and
cmpb
add
add
add
xor
add
add
push
add
and
add
add
push
add
adc
add
add
push
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
bound
pop
add
xor
add
add
add
add
add
add
add
add
mov
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
imul
add
and
push
add
insb
add
imul
outsl
add
add
add
sbb
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
imul
add
and
push
add
jns
jb
jb
outsl
add
jno
push
and
pop
add
add
jne
je
jae
je
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
sub
and
xor
xor
xor
add
add
add
and
cmp
cmp
add
add
sub
push
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
data16
jne
jne
add
outsb
add
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
imul
add
and
push
add
insb
add
imul
outsl
add
add
add
add
add
add
add
add
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
imul
add
add
js
add
add
sbb
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
imul
add
and
push
add
jns
jb
jb
outsl
add
jno
push
and
pop
add
add
jne
je
jae
je
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
and
xor
xor
cmp
sub
and
xor
xor
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
cmp
add
jne
add
pop
rolb
jg
add
pusha
rolb
mov
add
cwtl
rolb
test
add
mov
rolb
aam
add
add
add
loop
add
add
add
ljmp
add
push
dec
inc
dec
xor
cs
dec
dec
add
imul
insb
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
dec
imul
dec
jae
outsb
jne
