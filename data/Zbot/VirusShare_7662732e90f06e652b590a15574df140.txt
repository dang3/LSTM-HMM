push
mov
sub
mov
xor
mov
mov
mov
mov
push
push
push
mov
xor
mov
mov
mov
mov
xor
add
mov
inc
mov
mov
cmp
jl
xor
lea
mov
mov
xor
mov
divl
mov
mov
movzbl
add
add
mov
mov
and
jns
dec
mov
mov
or
inc
mov
mov
mov
mov
mov
mov
movzbl
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
divl
movzbl
add
mov
mov
add
and
mov
mov
jns
dec
or
mov
mov
inc
mov
mov
mov
mov
mov
mov
movzbl
mov
mov
mov
mov
xor
mov
mov
mov
divl
movzbl
add
mov
mov
add
and
jns
dec
or
mov
mov
inc
mov
mov
mov
mov
movzbl
mov
mov
mov
mov
xor
lea
divl
mov
mov
movzbl
add
add
mov
mov
and
jns
dec
mov
mov
or
inc
mov
mov
mov
mov
mov
mov
mov
movzbl
mov
mov
add
add
mov
mov
mov
cmp
jl
mov
mov
mov
xor
test
mov
mov
je
lea
inc
and
mov
mov
jns
dec
or
mov
mov
inc
mov
add
mov
mov
and
jns
dec
mov
mov
or
inc
mov
movzbl
mov
mov
mov
mov
mov
add
mov
mov
and
jns
dec
mov
mov
or
inc
movzbl
mov
xor
inc
cmp
jb
pop
mov
pop
pop
mov
xor
call
mov
pop
ret
mov
mov
pop
pop
xor
pop
call
mov
pop
ret
cmpw
mov
je
jmp
lea
add
cmpw
jne
sub
sar
ret
cmpb
mov
je
inc
cmpb
jne
sub
ret
mov
test
je
push
mov
sub
add
mov
mov
inc
dec
jne
pop
mov
ret
test
je
push
mov
sub
lea
movzwl
mov
add
test
je
dec
jne
pop
mov
ret
dec
je
xor
movzwl
mov
shl
or
shr
rep
adc
rep
pop
mov
ret
test
je
push
push
push
call
add
mov
ret
movzwl
test
je
cmp
je
movzwl
add
test
jne
xor
mov
cmp
setne
dec
and
ret
mov
cmp
jne
test
je
mov
inc
inc
cmp
je
movzbl
movzbl
sub
mov
setns
lea
ret
xor
ret
push
mov
sub
movzwl
mov
add
test
jne
pop
ret
push
mov
sub
mov
mov
inc
test
jne
pop
ret
push
mov
sub
mov
xor
mov
push
mov
mov
cmp
je
xor
pop
mov
xor
call
mov
pop
ret
mov
add
cmpl
mov
jne
mov
mov
add
push
mov
add
mov
mov
mov
test
jne
pop
xor
pop
mov
xor
call
mov
pop
ret
mov
add
xor
push
mov
test
jle
mov
mov
mov
mov
mov
add
cmp
jne
test
je
mov
inc
inc
cmp
je
inc
cmp
jge
mov
jmp
mov
cmp
je
mov
mov
movzwl
movzwl
mov
add
cmpl
jne
mov
mov
add
cmp
jb
sub
cmp
ja
mov
lea
mov
add
cmp
jb
mov
add
cmp
jae
movzwl
mov
test
je
add
cmp
je
movzwl
add
test
jne
mov
cmp
jne
push
lea
push
push
call
mov
sub
mov
add
sar
lea
call
mov
mov
mov
mov
push
mov
mov
mov
call
mov
mov
test
je
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
pop
mov
mov
mov
pop
pop
mov
xor
call
mov
pop
ret
mov
pop
pop
xor
xor
pop
call
mov
pop
ret
cmpw
mov
je
nop
add
cmpw
jne
sub
sar
cmpw
push
push
mov
mov
je
lea
add
cmpw
jne
sub
sar
mov
xor
xor
test
jle
push
jmp
lea
mov
and
xor
inc
cmp
jne
xor
inc
cmp
jl
pop
pop
pop
ret
cmpb
mov
je
mov
inc
cmpb
jne
sub
cmpb
mov
mov
je
inc
cmpb
jne
sub
push
mov
xor
xor
test
jle
push
lea
mov
and
xor
inc
cmp
jne
xor
inc
cmp
jl
pop
mov
pop
ret
push
mov
sub
mov
xor
mov
mov
push
push
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
lea
push
push
movl
mov
mov
call
add
lea
call
lea
sub
lea
mov
mov
inc
test
jne
lea
push
mov
call
add
push
push
push
call
mov
mov
test
je
mov
mov
mov
push
mov
mov
mov
mov
mov
lea
push
push
mov
mov
call
add
lea
call
lea
sub
mov
mov
inc
test
jne
mov
mov
lea
push
mov
mov
mov
mov
mov
call
mov
mov
add
push
push
mov
mov
call
mov
mov
mov
mov
mov
mov
test
je
mov
mov
mov
push
mov
mov
mov
lea
push
push
mov
mov
call
add
lea
call
lea
sub
nop
mov
mov
mov
mov
inc
mov
mov
test
jne
mov
mov
lea
push
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
push
mov
mov
mov
lea
push
push
mov
mov
call
add
lea
call
lea
sub
mov
mov
inc
test
mov
mov
jne
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
add
push
push
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
test
mov
mov
mov
je
mov
mov
mov
push
mov
mov
mov
lea
push
push
mov
mov
call
add
lea
call
lea
sub
lea
mov
mov
mov
mov
mov
inc
test
jne
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
push
push
mov
mov
mov
push
push
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
test
je
mov
mov
mov
push
mov
mov
mov
lea
push
push
mov
mov
call
add
lea
call
lea
sub
mov
mov
inc
test
jne
lea
mov
mov
mov
push
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
mov
mov
call
test
mov
mov
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
je
nop
mov
mov
inc
mov
mov
mov
inc
dec
jne
mov
mov
mov
movl
mov
mov
mov
push
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
pop
xor
pop
call
mov
pop
ret
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
mov
mov
lea
test
je
mov
cmp
jne
mov
mov
add
mov
je
mov
cmpl
jne
push
lea
push
push
call
mov
mov
xor
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
lea
push
push
mov
mov
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
mov
mov
jne
cmpb
mov
je
add
inc
cmpb
mov
mov
jne
sub
cmpb
mov
lea
je
mov
inc
cmpb
jne
lea
sub
mov
xor
mov
mov
xor
test
jle
lea
mov
and
mov
mov
xor
inc
cmp
mov
mov
jne
xor
inc
mov
mov
cmp
jl
xor
mov
mov
mov
mov
mov
mov
mov
inc
test
mov
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
mov
call
add
lea
mov
mov
mov
push
lea
push
push
push
push
mov
mov
mov
push
push
push
mov
mov
mov
push
push
call
mov
mov
mov
test
je
mov
mov
mov
push
mov
mov
mov
lea
push
push
mov
mov
call
add
cmpb
mov
je
inc
cmpb
jne
sub
cmpb
mov
lea
je
nop
inc
cmpb
jne
lea
sub
mov
xor
xor
test
jle
lea
mov
and
xor
inc
cmp
jne
xor
inc
cmp
jl
xor
mov
mov
mov
inc
test
jne
mov
lea
push
call
add
push
push
push
push
call
mov
movl
mov
mov
mov
push
mov
mov
mov
mov
mov
lea
push
push
mov
mov
mov
call
add
cmpb
mov
je
inc
cmpb
jne
sub
cmpb
mov
lea
je
inc
cmpb
jne
lea
sub
mov
xor
xor
test
jle
lea
mov
and
xor
inc
cmp
jne
xor
inc
cmp
jl
xor
mov
mov
mov
inc
test
jne
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
push
call
mov
mov
mov
add
mov
mov
push
push
mov
mov
call
mov
mov
test
je
mov
mov
mov
push
mov
mov
mov
mov
mov
lea
push
push
mov
mov
call
add
cmpb
mov
je
lea
inc
cmpb
jne
sub
cmpb
mov
lea
je
mov
inc
cmpb
jne
lea
sub
mov
xor
xor
test
jle
lea
mov
and
xor
inc
cmp
jne
xor
inc
cmp
jl
xor
mov
mov
mov
inc
test
jne
mov
mov
mov
mov
mov
lea
mov
mov
push
mov
mov
call
mov
mov
mov
add
mov
mov
push
push
mov
mov
lea
mov
mov
push
mov
mov
mov
add
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
mov
jne
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
lea
push
push
mov
mov
call
add
cmpb
mov
je
inc
cmpb
jne
sub
cmpb
mov
lea
je
inc
cmpb
jne
lea
sub
mov
xor
xor
test
jle
lea
mov
and
xor
inc
cmp
jne
xor
inc
cmp
jl
xor
mov
mov
mov
inc
test
jne
mov
mov
mov
push
mov
mov
mov
mov
mov
lea
push
push
mov
mov
call
add
lea
call
lea
sub
mov
movzwl
mov
add
test
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
mov
call
mov
mov
mov
push
mov
mov
mov
mov
mov
lea
push
push
mov
mov
call
add
cmpb
mov
je
inc
cmpb
jne
sub
cmpb
mov
lea
je
nop
inc
cmpb
jne
lea
sub
mov
xor
xor
test
jle
lea
mov
and
xor
inc
cmp
jne
xor
inc
cmp
jl
xor
mov
mov
mov
inc
test
jne
mov
lea
push
call
mov
mov
mov
mov
mov
mov
mov
add
push
mov
mov
mov
mov
push
push
mov
push
mov
mov
mov
mov
push
call
mov
test
jne
mov
mov
mov
push
mov
mov
mov
mov
mov
lea
push
push
mov
mov
call
add
mov
cmp
je
lea
inc
cmpb
jne
sub
cmpb
mov
lea
je
mov
inc
cmpb
jne
lea
sub
mov
xor
xor
test
jle
lea
mov
and
xor
inc
cmp
jne
xor
inc
cmp
jl
xor
mov
mov
mov
inc
test
jne
mov
lea
push
call
mov
add
push
push
call
jmp
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
lea
push
push
mov
mov
call
add
lea
call
lea
sub
nop
mov
mov
inc
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
push
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
push
mov
mov
push
mov
mov
push
mov
mov
push
push
mov
mov
call
mov
mov
mov
xor
xor
mov
mov
cmp
jae
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
push
mov
mov
lea
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
add
mov
push
add
mov
mov
mov
mov
push
push
call
mov
mov
mov
movzwl
addl
inc
mov
mov
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
add
mov
mov
push
add
mov
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
mov
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
lea
push
push
mov
mov
call
add
lea
call
lea
sub
mov
mov
inc
test
jne
mov
mov
mov
mov
mov
lea
mov
mov
push
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
push
mov
mov
mov
push
mov
mov
mov
mov
mov
call
mov
mov
mov
push
mov
mov
mov
lea
push
push
mov
mov
call
add
lea
call
lea
sub
mov
mov
inc
test
jne
mov
mov
mov
lea
mov
mov
mov
push
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
push
mov
mov
call
mov
mov
mov
push
mov
lea
push
push
mov
mov
call
add
lea
call
lea
sub
mov
mov
inc
test
jne
mov
lea
push
call
mov
add
push
push
push
call
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
sub
mov
xor
mov
push
push
push
mov
mov
lea
rep
push
lea
push
push
movsw
call
add
lea
call
lea
sub
movzwl
mov
add
mov
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
push
mov
mov
mov
mov
call
mov
lea
push
mov
lea
mov
call
lea
push
lea
mov
call
mov
mov
push
mov
push
mov
call
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
lea
push
push
mov
mov
call
add
lea
call
lea
sub
mov
mov
inc
test
jne
lea
push
mov
call
add
push
lea
push
push
call
push
mov
lea
call
mov
add
pop
pop
xor
pop
call
mov
pop
ret
mov
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
pushl
mov
push
push
push
call
add
mov
ret
push
push
call
xor
mov
mov
lea
push
call
movl
movl
mov
mov
mov
mov
push
push
push
call
cmp
je
cmp
jne
xor
inc
mov
jmp
push
call
jmp
xor
inc
mov
cmp
jne
push
call
pop
jmp
mov
test
jne
mov
push
push
call
pop
pop
test
je
jmp
mov
mov
cmp
jne
push
push
call
pop
pop
movl
cmp
jne
push
push
call
cmp
je
push
call
pop
test
je
push
push
push
call
mov
cmp
je
mov
mov
movzwl
cmp
ja
cmp
je
cmp
jne
movzwl
cmp
je
cmp
ja
inc
inc
mov
jmp
testb
je
movzwl
jmp
push
pop
push
push
push
push
call
mov
cmp
jne
push
call
cmp
jne
xor
cmp
sete
mov
inc
inc
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
xor
cmp
jne
push
call
cmp
jne
call
movl
mov
jmp
xor
inc
ret
mov
movl
mov
call
ret
mov
cmp
je
xor
jmp
mov
lea
cmpl
jne
movzwl
cmp
je
cmp
jne
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
mov
call
push
call
orl
orl
pop
pop
call
mov
mov
call
mov
mov
call
cmpl
jne
push
call
pop
call
xor
ret
call
jmp
int3
int3
int3
int3
int3
cmp
jne
ret
jmp
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
push
mov
push
mov
xor
push
mov
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
lea
mov
mov
mov
mov
mov
cmp
je
jmp
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
jl
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
call
mov
cmp
je
mov
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
mov
push
push
mov
call
jmp
jmp
mov
push
mov
mov
mov
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
je
cmp
je
cmp
jne
call
xor
pop
ret
push
call
xor
ret
int3
jmp
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
jbe
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
push
push
call
andl
mov
push
call
pop
test
je
mov
sub
push
push
call
pop
pop
test
je
mov
shr
not
and
movl
jmp
mov
mov
mov
xor
cmp
sete
mov
ret
mov
movl
xor
call
ret
jmp
jmp
push
pushl
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
mov
push
mov
pushl
pushl
pushl
pushl
push
push
call
add
pop
ret
push
push
call
pop
pop
ret
xor
ret
push
push
call
xor
mov
test
je
cmp
je
and
mov
cmp
jne
mov
test
jl
cmp
jae
lea
mov
cmpl
je
jmp
xor
inc
ret
mov
xor
mov
movl
call
ret
mov
push
mov
push
call
test
je
push
call
test
je
movzwl
cmp
jne
push
pop
pop
ret
cmp
jne
xor
inc
pop
ret
mov
pop
ret
mov
push
mov
sub
mov
andl
andl
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
cmp
je
test
jne
mov
mov
not
mov
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
push
call
push
call
push
call
push
call
leave
ret
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
jmp
pop
inc
add
dec
inc
add
xor
add
sbb
add
add
out
inc
add
fiadds
add
inc
add
mov
add
xchg
inc
add
xchg
add
add
add
dec
inc
add
cmp
add
inc
add
sbb
add
add
add
inc
add
mov
inc
add
fiaddl
clc
inc
add
or
add
mov
test
jl
add
outsb
inc
add
inc
add
pop
inc
add
dec
inc
add
inc
inc
add
xor
inc
add
inc
add
inc
add
add
add
add
add
add
movsb
inc
add
movsb
add
add
add
dec
insl
je
outsl
insb
jge
insl
inc
imul
add
add
dec
add
inc
add
add
dec
add
add
add
dec
add
inc
add
add
add
add
data16
insb
add
add
add
add
add
add
imul
addr16
arpl
inc
addr16
fs
insl
jnp
jge
arpl
dec
jp
gs
insl
jnp
jge
arpl
pop
popa
jp
outsl
outsb
pop
insl
jnp
jne
imul
popa
outsb
fs
insl
jnp
jge
arpl
add
jb
jne
fs
jp
add
jae
insl
insl
pop
pusha
jp
popa
insb
add
je
push
inc
outsl
data16
js
add
imul
jae
inc
gs
outsl
jp
add
insl
imul
imul
add
jb
jne
fs
outsb
outsl
imul
data16
add
add
add
add
add
push
outsb
insl
imul
outsb
push
arpl
data16
popa
fs
jp
imul
inc
insl
insl
outsl
jb
add
je
push
inc
outsl
data16
js
add
jb
jne
fs
outsb
outsl
imul
jp
popa
je
pop
jp
popa
gs
push
add
popa
je
insl
jns
imul
push
inc
add
add
add
addb
add
add
adc
add
test
xor
or
sub
cmp
addb
add
xor
push
push
mov
add
and
orb
pusha
pusha
pusha
push
pop
js
jo
jo
or
add
or
or
pop
or
add
push
push
inc
push
and
pop
cltd
dec
clc
cltd
sbb
add
add
pop
push
jae
jb
pop
inc
outsb
pop
inc
outsl
arpl
outsb
je
pop
push
imul
je
imul
pop
push
jb
push
arpl
addr16
outsb
and
insl
pop
push
gs
gs
jae
pop
addr16
outsb
and
insl
jo,pn
bound
add
add
incl
add
add
add
ljmp
sub
inc
add
fsubrl
add
sub
add
incl
add
add
incl
add
add
ljmp
xor
xor
add
add
incl
add
add
incl
add
add
pushl
xor
cmp
inc
add
inc
add
in
inc
add
dec
inc
add
mov
add
add
add
add
add
add
add
add
add
xor
add
sbb
add
add
out
inc
add
fiadds
add
inc
add
mov
add
xchg
inc
add
xchg
add
add
add
dec
inc
add
cmp
add
inc
add
sbb
add
add
add
inc
add
mov
inc
add
fiaddl
clc
inc
add
or
add
mov
test
jl
add
outsb
inc
add
inc
add
pop
inc
add
dec
inc
add
inc
inc
add
add
add
out
add
gs
jae
je
add
add
ja
gs
popa
imul
add
pop
arpl
imul
js
je
push
pop
pop
arpl
inc
imul
gs
je
add
add
arpl
insb
outsb
add
add
outsb
imul
add
insl
jae
pop
gs
je
add
add
jae
je
jae
jb
popa
je
gs
add
mov
pop
pop
arpl
insl
outsl
fs
mov
pop
pop
insw
outsl
fs
rolb
pop
pop
jae
je
popa
jo
pop
je
jo
add
insl
jae
arpl
cs
insb
add
aaa
add
je
jb
imul
pop
inc
pop
pop
pop
add
add
outsl
outsb
je
outsl
insb
data16
add
add
gs
imul
inc
add
fs
imul
add
sbb
gs
outsl
arpl
fs
js
push
add
push
insb
gs
sbb
dec
outsb
je
jb
outsl
arpl
fs
outsl
insl
jo
jb
inc
js
push
add
scas
add
je
je
jb
jne
dec
outsb
outsw
push
add
add
insb
push
outsb
ja
outsb
add
add
je
outsb
push
gs
js
gs
imul
gs
jbe
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
xchg
add
gs
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
aam
inc
gs
imul
je
add
add
je
jne
jb
outsb
je
push
dec
add
cmp
inc
gs
jne
jb
outsb
je
jb
arpl
jae
fs
add
je
jns
je
insl
push
imul
insb
gs
imul
gs
imul
outsl
arpl
jae
add
add
je
jne
jb
outsb
je
jb
arpl
jae
pop
add
push
gs
js
gs
imul
gs
add
push
dec
inc
dec
xor
cs
insb
dec
out
mov
incl
add
add
add
add
add
add
add
add
cld
pushl
add
add
add
incl
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cli
or
add
add
add
add
or
push
ret
cmovo
add
add
add
add
adc
add
add
add
adcb
add
add
add
mov
add
add
add
leave
sbb
add
ret
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
js
roll
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
and
add
int3
int
int3
int3
int3
int3
int3
int3
sti
aas
jno
or
mov
mov
cmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
aas
and
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
in
ficomps
frstor
add
add
add
pop
add
add
add
add
push
add
add
add
add
add
add
add
add
add
sbbb
add
loopne
add
add
add
add
add
add
add
cmp
add
dec
add
adcb
add
add
add
add
add
add
add
pusha
add
subb
add
add
add
add
add
add
add
jbe
add
add
add
add
add
mov
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
fadds
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
clc
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
add
add
add
add
or
add
add
add
bound
add
scas
add
in
add
add
add
rclb
add
sldt
add
add
add
add
add
adc
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
adc
add
add
in
add
add
add
or
push
add
add
add
dec
add
or
push
add
add
add
dec
add
dec
add
or
push
add
add
add
dec
add
dec
add
or
push
add
add
add
dec
add
dec
add
or
push
add
add
add
dec
add
dec
add
or
push
add
add
add
dec
add
dec
add
or
push
add
add
add
dec
add
dec
add
add
ss
jne
mov
jge
scas
pop
push
pop
mov
cmp
xchg
outsb
cltd
icebp
push
into
dec
setp
add
jb
fwait
or
sbb
inc
mov
rorl
mov
lds
mov
and
adc
adc
xchg
shr
dec
cmp
pop
mov
xor
push
xorl
mov
jbe
pop
cmp
dec
in
cs
dec
mov
sahf
and
fucomip
out
fidivs
or
xor
pop
shrb
mov
lock
pop
mov
fisubl
or
pop
dec
movl
aam
jne
fwait
or
fs
adcl
rorb
fadds
lds
xor
sbb
sbb
aaa
mov
fdivrl
loop
inc
outsb
cmp
xchg
fldt
test
mov
hlt
movsb
or
jle
shl
jg
push
xor
jb
push
mov
push
mov
pop
lret
dec
les
stc
lods
insl
xor
push
xchg
add
push
jle
adc
add
inc
jnp
adc
out
xchg
js
loopne
push
jo
dec
aam
ljmp
out
mov
lcall
int
and
sub
scas
jle
mov
sub
daa
es
jg
or
jmp
sbb
inc
in
je
jns
inc
out
fxtract
adc
fdivrs
cmp
jae
popf
dec
adc
cmp
fwait
pop
or
stos
test
leave
cmp
cld
xlat
movd
pop
test
lods
mov
das
imul
ljmp
mov
mov
pop
dec
out
mov
clc
das
or
fs
push
cmp
jbe
fnstenv
push
xchg
xor
jle
jmp
add
push
cld
xor
xchg
pusha
adc
fnsave
sub
pop
jae
subb
fbstp
pushf
fldcw
sub
dec
imul
idivl
aas
fdivrl
mov
mov
and
addr16
movsl
icebp
xchg
and
push
sub
mov
pop
test
add
and
hlt
sahf
xchg
sub
mov
test
xchg
inc
int
inc
mov
icebp
rorb
adc
frstor
jl
test
lock
mov
jnp
jle
mov
jns
jae
aam
ljmp
inc
outsl
jmp
jo
inc
jnp
cmp
mov
mov
mov
icebp
out
sub
scas
out
pop
mov
adc
fmuls
adc
mov
adc
add
mov
stos
jg
lcall
lea
adc
cmp
lods
xor
inc
mov
add
xchg
or
and
addr16
cmp
shlb
loope
mov
pusha
mov
mov
je
test
pop
scas
lahf
outsl
js
repnz
in
add
or
sub
movsb
addr16
aaa
push
mov
push
add
mov
adc
push
je
data16
jns
jmp
mov
cmp
pop
rclb
aad
add
je
pop
cld
jmp
stos
mov
ljmp
stos
inc
xor
inc
add
cmpsb
popa
jge
les
adc
or
in
lret
cmc
or
sub
insb
jmp
cmp
cld
xchg
adc
test
sti
cli
insb
dec
cmpb
mov
mov
adc
fmuls
shrb
insl
cmp
mov
inc
xor
stos
mov
in
movsb
adc
lret
jmp
lea
psubw
notl
loopne
imulb
jl
mov
inc
inc
out
xchg
add
dec
scas
in
lahf
sub
popf
mov
or
add
xor
aam
dec
sbb
xchg
sub
aas
cmpsb
pop
shrb
cmp
test
push
push
pop
xchg
stc
adc
dec
push
in
into
mov
fsts
shll
fistpl
jnp
imul
jo
sub
arpl
cmp
inc
cld
dec
adc
inc
mov
sbb
and
inc
cmc
popf
int
addr16
pop
or
fst
test
mov
inc
out
jo
jmp
pop
fistpll
mov
bound
sbbb
mov
xchg
xchg
cmp
mov
and
push
inc
lahf
dec
jg
mov
sbb
and
lahf
jno
or
pop
xchg
int
cmp
push
push
les
sarb
mov
sbb
js
jge
inc
bound
test
xchg
call
xchg
inc
lret
add
or
push
test
mov
nop
xor
push
xlat
mov
insb
into
js
inc
sub
ficoms
pop
daa
push
or
hlt
sbb
in
shlb
or
mov
dec
xchg
test
cltd
outsb
subps
loope
cmp
xchg
outsb
inc
add
out
mov
hlt
insb
xchg
mov
iret
rcl
adc
or
aaa
out
cs
shl
mov
jmp
lods
adc
stc
inc
ds
jns
xchg
call
push
js
inc
or
or
into
sti
loope
fwait
mov
or
xor
mov
mov
mov
data16
jns
fs
jg
insb
ret
in
mov
out
rcrb
pusha
and
mov
ds
stos
dec
pop
pop
cld
scas
cltd
xchg
xorb
inc
jne
hlt
call
adc
or
sarb
xchg
mov
ret
xchg
sub
popf
pushf
cmc
sti
xchg
mov
jl
cmp
push
adc
mov
int3
insl
aas
roll
pop
lret
mov
mov
imul
and
imul
jmp
cltd
repz
add
pop
mov
lahf
add
aas
pusha
out
sti
push
jl
ljmp
jno
popf
in
mov
je
sub
mov
stos
mov
sbb
mov
daa
add
mov
mov
insb
mov
dec
sbb
or
into
outsl
cltd
adc
jecxz
mov
cmp
fistps
in
or
shll
outsb
push
push
ja
rclb
icebp
mov
mov
lods
push
pop
jl
xor
pusha
mov
cmp
cmpsl
mov
cmpsl
lret
mov
test
std
and
adc
mov
ret
xchg
std
mov
sub
leave
cmpb
mov
jg
mov
cld
or
enter
pop
cwtl
dec
mov
jge
loopne
adc
inc
loope
jg
leave
push
or
rorl
ds
mov
adc
cs
das
shll
iret
movsb
pop
xchg
jae
jg
mov
xchg
push
cltd
mov
shlb
cmp
cmpsl
adc
xchg
sub
jae
loop
mov
loop
fldl
xchg
stos
std
pop
test
dec
cwtl
cmp
mov
leave
sub
dec
test
xchg
add
push
sahf
and
sub
cmpsl
mov
dec
out
lret
jmp
push
xor
loope
and
repz
loope
jns
lret
mov
lret
xchg
inc
outsl
cmc
inc
movsb
jp
adc
sub
or
ljmp
das
add
test
fldt
ss
adc
int3
in
jmp
fidivl
mov
xchg
mov
jo
mov
mov
loopne
mov
mov
cmpsl
in
cmp
mov
sbb
xchg
mov
aaa
sbb
sahf
int
mov
pop
call
gs
sbb
jbe
mov
outsl
xchg
xor
pop
adc
insb
imul
jae
aas
data16
and
adc
jnp
mov
xor
dec
or
or
in
inc
lods
mov
sti
sbb
test
mov
xchg
mov
sub
into
adc
sti
pusha
add
mov
fcomi
arpl
add
mov
psrld
sub
cltd
jl
mov
scas
and
adc
push
jno
xor
xor
pop
and
dec
or
dec
in
sbb
mov
and
loop
jb
enter
data16
xchg
or
imul
jb
out
in
insb
mov
test
mov
mov
sbb
mov
push
clc
push
imul
das
rorb
inc
aaa
sahf
cld
scas
inc
add
xchg
test
shlb
xchg
jb
fcoml
fstps
addr16
mov
icebp
sbb
insl
adc
daa
test
dec
lods
pusha
adc
je
sub
rolb
or
inc
sbb
cmp
test
dec
movsl
cmpsl
mov
mov
mov
inc
inc
jo
sbb
cmp
sbb
mov
mov
pop
sub
lret
dec
enter
xchg
lahf
cmp
xchg
sarb
mov
mov
sub
jb
xlat
iret
xlat
dec
mov
lahf
cmp
fisttps
lods
testl
lods
and
push
daa
mov
out
and
cmp
mov
je
call
adc
sub
jg
cmp
mov
xor
mov
fidivrl
nop
mov
add
out
xchg
cltd
cmpb
imul
xchg
test
int3
insb
loopne
shrb
mov
mov
adc
mov
sbb
gs
lcall
inc
shlb
test
jge
and
sub
cmp
inc
mov
bound
popa
xchg
fs
les
stos
aad
adc
jns
lret
lock
int3
dec
sarl
jmp
jne
insb
pop
enter
sub
test
test
mov
inc
pop
popa
ret
or
jb
and
gs
jg
loop
push
mov
insl
lea
mov
sbb
cmp
push
mov
xchg
ss
sbb
xor
inc
loopne
mov
mov
jno
and
xor
push
push
scas
ljmp
mov
sbbb
or
xchg
scas
lods
dec
pop
in
inc
jmp
data16
fldenv
nop
adc
pop
stos
in
addb
cmp
adc
dec
int3
dec
mov
and
fbld
dec
orb
outsb
jbe
sub
ret
test
data16
fcmovne
add
in
push
subl
jns
inc
shr
add
inc
ds
jno
push
mov
jg
test
pop
lcall
int
aad
loope
lcall
cmp
xor
stos
rol
xor
push
data16
sti
mov
cmp
xchg
stc
lods
dec
xchg
movl
and
add
out
test
mov
or
xor
or
out
push
orb
iret
or
fnstcw
lret
and
sub
and
jecxz
pop
dec
jo
pushf
fcomip
enter
dec
leave
sub
add
daa
test
dec
test
sarl
lods
cmp
in
jo
xchg
repnz
ja
push
out
jge
cs
jge
cli
movsl
and
sub
sub
or
inc
add
popa
xor
pop
pop
pushf
aam
add
push
adc
push
mov
ljmp
clc
popf
repnz
pop
add
mov
jge
cmp
adc
scas
inc
mov
jmp
xchg
or
bound
or
lods
sbb
mov
ret
push
lods
popa
push
arpl
lds
push
sub
ljmp
jp
add
addr16
je
sbbb
int3
sub
hlt
movsl
cld
and
movsl
mov
js
pop
dec
xchg
or
dec
stos
xchg
inc
dec
lret
in
jle
push
fdivrs
std
insl
or
or
daa
repnz
xor
out
sbb
mov
fstpt
and
cltd
add
dec
dec
sbb
sbb
in
sti
pop
rorl
in
xchg
outsl
push
mov
jb
iret
shlb
xchg
clc
daa
repz
lock
mov
into
stc
ds
pop
mov
popa
inc
ret
mov
mov
shrb
pop
push
ljmp
xchg
ljmp
rcrb
insl
cld
push
dec
pop
sarl
jo
lret
stos
fsubs
sub
add
mov
inc
rcl
xchg
sbb
cltd
insb
arpl
cmp
icebp
daa
dec
cwtl
push
xchg
mov
mov
push
add
loopne
add
das
jmp
jp
jp
xor
mov
sbb
mov
add
dec
xchg
in
jae
sbb
sbb
sbb
mov
push
jp
rcll
fstps
add
jns
popf
sbb
movsb
dec
mov
inc
jmp
daa
jb
fisubl
xlat
pop
jecxz
or
jp
inc
inc
cmp
test
jbe
cmp
add
mov
mov
or
cmp
mov
jecxz
push
xchg
shl
and
cmp
add
mov
fstps
filds
fnstcw
roll
or
mov
mov
and
inc
loope
bound
cmpsl
in
fimuls
fcmove
aaa
les
mov
test
or
mov
movsb
pop
inc
mov
jmp
orb
nop
or
repz
clc
imul
mov
fdivrp
or
insb
xor
insl
cs
cmpl
aaa
hlt
inc
sub
ds
cmpsl
jne
and
iret
iret
and
sbb
xchg
mull
mov
push
pusha
lods
fldt
pop
call
push
icebp
xchg
daa
movsb
sub
les
xor
je
mov
daa
adc
sahf
cld
je
les
test
in
or
testb
test
jp
jmp
xchg
sub
loop
cmp
jnp
fbstp
pop
shlb
push
addr16
jnp
outsl
testl
fstps
push
sub
dec
out
sti
xor
and
inc
sbb
pop
shl
movsl
fisubrs
repz
mov
leave
out
pop
mov
mov
add
out
fldcw
fisubrl
movl
cmp
jle
inc
jns
jge
pop
mov
mull
dec
popa
je
sbbl
gs
push
push
cli
call
lods
jl
mov
cs
cwtl
loop
dec
pop
cmp
pop
and
dec
jno
movsl
jo
test
xor
ljmp
fstl
and
jl
fldt
jg
ds
push
sub
movsb
pop
rcll
cltd
cmp
es
leave
cmp
add
test
mov
sbb
shl
or
sbb
lods
push
cmp
xor
sbb
popa
outsl
sub
push
popa
daa
xchg
cmp
into
mov
mov
fldt
mov
cmpsb
into
push
inc
in
fmul
lret
pop
out
movsl
jo
fsub
into
inc
xchg
in
leave
ja
nop
pop
cmc
jns
dec
mov
cmp
jg
stos
sar
add
rcl
stc
pop
aaa
stos
stc
xorb
call
add
adc
sahf
lock
pop
jp
cmpl
push
xchg
mov
jne
xchg
xchg
outsb
addl
fs
mov
mov
adc
sub
cmp
shr
ljmp
pushf
jb
xor
xchg
dec
add
push
pushw
nop
push
inc
imul
pop
aaa
xchg
out
push
sahf
or
add
ret
mov
cs
ficoms
shlb
lcall
pushf
cltd
arpl
into
out
mov
aas
std
jo
xchg
mov
lcall
leave
cmp
mov
mov
divb
and
adc
push
rclb
push
cmp
jle
test
push
sarl
mov
roll
jg
pop
repz
shrl
jo
lea
fs
sub
aaa
cmpsl
repnz
push
into
ds
jl
jnp
mov
pop
inc
xor
lods
in
movsl
jmp
push
inc
ret
adc
xor
push
push
lea
xchg
aam
jo
pop
andb
test
jb
push
das
pusha
mov
jne
xchg
lock
incl
add
lods
aad
mov
aaa
pop
les
in
hlt
mov
rolb
mov
cmpsl
sub
jae
stos
mov
fucomip
push
jmp
mov
pop
loopne
and
les
mul
pop
xor
xchg
mov
xchg
test
jp
inc
add
icebp
xlat
mov
sub
jle
shrb
movsl
jge
xchg
mov
adc
lock
and
rclb
fsts
mov
out
jge
pop
fiaddl
movsl
pop
xor
cmp
xor
sti
cmp
fwait
daa
mov
push
negb
mov
push
mov
std
xchg
mov
mov
push
cld
push
icebp
sbb
mov
cwtl
idivl
hlt
pop
lret
shl
mov
adc
call
in
mov
jl
dec
pop
ja
inc
lahf
daa
in
adc
push
ljmp
lret
xchg
dec
divb
adc
pop
pop
enter
addr16
dec
push
adc
movsb
xchg
cmp
out
adc
out
lods
inc
call
adc
jp
mov
push
push
mov
popa
cmp
add
hlt
cmpsl
cmp
rolb
mov
cmp
loopne
mov
mov
test
aas
insb
xchg
cmp
popf
cs
pop
xchg
pop
fidivl
sbb
lcall
mov
push
xchg
cmpsl
xor
xor
leave
movsl
outsl
dec
xor
sub
mov
jg,pt
mov
xor
loopne
xchg
and
xchg
mov
add
call
push
sub
sbb
leave
in
std
std
jecxz
cmp
xchg
jns
pop
jg
pop
or
call
cmp
cmp
rorb
jbe
pop
mov
mov
rcrl
loopne
imul
dec
filds
flds
in
and
mov
mov
fidivrl
es
add
push
out
sub
insb
lahf
pushf
fisubl
jp
fidivrs
or
hlt
call
rol
cmp
xor
mov
adcl
push
out
enter
jnp
aam
jno
cmpb
aam
inc
sbb
out
cmp
inc
enter
dec
add
inc
enter
pop
cmpb
lds
out
call
cmp
jae
mov
loope
or
sub
out
shrd
jg
es
mov
jne
adc
mov
stos
pop
push
lcall
fldcw
jne
jns
or
push
cs
add
shll
mov
ret
fwait
test
icebp
pop
push
xchg
xchg
dec
je
or
cmpsl
mov
out
jmp
jge
adc
jge
mov
ret
jbe
and
hlt
cltd
pushf
add
in
stos
insl
and
mov
stc
sbb
xor
int
in
or
bound
out
adc
shll
divl
outsl
mov
mov
add
std
rcll
cmp
pop
ljmp
xchg
fwait
sub
data16
jmp
sbbl
and
imul
je
into
mov
stos
and
mov
dec
push
mov
mov
push
lea
test
bound
test
movsb
es
shrl
dec
not
sbb
fcomip
cmpsb
lods
cli
mov
adc
adc
xchg
push
inc
loop
jns
add
inc
mov
cmp
outsb
in
sbb
cs
cmp
rolb
mov
les
jmp
psubusb
inc
inc
out
fdivl
mov
repnz
mov
loop
negl
enter
xchg
cmp
push
inc
bound
adc
loope
lods
mov
lcall
push
cmp
imul
clc
ret
jae
clc
addr16
lret
imul
in
jae
xchg
and
cmp
pusha
cmpl
clc
mov
jg
inc
pop
out
push
je
xor
jo
mov
movsb
cli
jp
jl
fwait
shlb
mov
adc
enter
jne
mov
adc
cs
or
adc
mov
arpl
or
adc
js
xchg
cmp
inc
ret
pop
sbb
jle
adc
insb
sti
add
mov
mov
sbb
xchg
sbb
dec
pop
pop
cmp
mov
push
xchg
ret
xlat
scas
shlb
outsl
mov
add
mov
add
xor
lahf
mov
push
sti
inc
or
cmp
sbb
sbb
mov
nop
stos
push
pop
int
test
cmp
fldt
stc
cmp
clc
loope
pop
enter
lods
lret
ljmp
lcall
push
mov
clc
mov
inc
cmc
out
lock
movsb
mov
fadds
js
pop
mov
or
inc
stos
adc
xchg
scas
dec
jl
mov
cmpsb
testb
fistps
adc
or
mov
sti
mov
xor
xor
out
stos
lock
and
jb
mov
in
inc
cmpsl
and
sub
fnstenv
add
dec
mull
mov
mov
imulb
add
scas
cltd
cmp
push
fnstenv
fiaddl
cmc
lret
into
outsb
lahf
xor
sbb
push
cmp
fstpl
jne
lret
clc
fildll
and
dec
ja
aas
cwtl
jge
aaa
popf
inc
xchg
xor
push
jae
ficoml
enter
mov
mov
enter
repnz
inc
jge
sti
or
pop
pop
push
outsl
xchg
repz
mov
jg
sub
ret
jb
push
rcrb
add
and
xchg
pop
sub
mov
lods
jae
mul
das
out
nop
pop
ljmp
mov
push
inc
xor
sbb
test
add
jecxz
mov
mov
popf
mov
sub
or
mov
addr16
mov
insl
out
xchg
ss
mov
jnp
adc
xor
add
xor
sub
hlt
shll
dec
test
cwtl
or
mov
insl
xchg
js
loop
ljmp
outsl
add
popa
sub
ljmp
cld
cmpl
test
out
scas
outsb
ds
xlat
push
jge
jp
pop
mov
pop
in
orb
jl
mov
adc
out
lret
in
add
int3
jb
pusha
jmp
iret
adc
hlt
add
movsl
cmpsb
mov
adc
pop
cmc
xorb
enter
pusha
loop
xchg
xor
cmpsl
cmp
aam
imul
mov
dec
mov
ret
out
xchg
movsl
xor
sbb
pop
xor
inc
jecxz
xor
jns
pop
add
add
xchg
adcb
dec
decb
out
sub
imul
stc
je
mov
mov
xlat
xor
insl
adc
sti
pop
sub
sbb
icebp
jb
mov
lret
jns
mov
push
add
stos
mov
push
in
and
sub
add
movb
sub
xchg
int3
push
inc
push
rolb
popa
out
cmpsb
inc
in
loope
gs
in
pop
roll
shll
dec
inc
popa
imul
jl
int3
mov
sbb
imul
dec
cmpsb
sti
sub
mov
mov
sbb
clc
ret
movsb
sti
add
sbb
jae
or
lret
cmp
js
inc
leave
or
popf
mov
pop
out
insl
jp
mov
mov
xchg
xchg
in
mov
mov
or
stos
pop
or
popa
dec
dec
jo
jnp
or
sub
dec
add
add
sbb
mov
jl
jle
mov
xorb
sbb
loopne
test
in
mov
pop
or
adc
pop
fdivrl
sub
adc
push
sbb
clc
je
pop
mov
movsb
mov
int3
int3
xor
or
sub
cmpsb
adcb
jnp
xchg
adc
fistl
hlt
pop
test
sbb
cmp
mov
push
dec
or
or
test
xor
mov
ja
repnz
adc
rclb
or
pop
mov
std
mov
stos
dec
sahf
scas
cwtl
fsts
test
xchg
sbb
xorb
jne
dec
popf
std
push
movl
bound
test
sbb
scas
pusha
fprem
jno
pop
repnz
pushaw
hlt
push
or
mov
mov
xor
push
sub
mov
nop
sub
out
cmp
in
fwait
insl
dec
js
pop
imul
mov
aaa
push
mov
rcrb
scas
ja
jnp
dec
xor
and
sbb
arpl
adc
jne
out
fcomi
scas
sub
loopne
fdivrl
or
cmc
icebp
fisttpl
mov
insl
sbb
int3
jnp
lcall
mov
jge
scas
mov
negl
push
or
adc
dec
loope
xchg
cs
mov
rcll
adc
test
rclb
in
ja
mov
xor
das
mov
fwait
movsb
lods
mov
or
lcall
sub
jp
jge
aad
sub
jge
cmc
js
push
mov
pop
pop
push
push
push
mov
xor
or
cmp
das
or
pop
iret
push
xor
or
mov
jp
xor
inc
shrb
mov
sub
xor
inc
push
pop
or
pop
xor
int
mov
jge
or
cltd
push
inc
fcmovnu
push
pop
push
or
cmc
jns
mov
or
fidivrs
loope
fidivrl
pop
xchg
test
push
test
xor
sti
sub
syscall
dec
lock
daa
mov
cmpl
int3
xchg
dec
xlat
push
or
mov
addr16
dec
in
add
sbb
and
push
jbe
mov
or
shl
outsb
add
pop
and
inc
fmuls
xchg
jbe
jns
ljmp
ljmp
imul
mov
mov
or
sub
xlat
push
ret
or
sbb
mov
mov
xchg
jno
cmp
xor
jo
cmp
add
push
insl
cmpsb
icebp
and
sbb
ret
xor
lahf
sub
sbb
scas
pop
jnp
pop
test
mov
sarb
sbb
push
mov
inc
stos
jb
mov
jmp
cmpb
sbb
insb
std
xor
sbb
addr16
dec
and
add
xchg
inc
flds
es
xor
ds
aas
add
clc
dec
pop
mov
cmp
mov
adc
std
sub
ret
cmp
testl
mov
pop
outsl
inc
pop
cmp
xchg
cmpsl
popa
loop
cmc
mov
in
scas
and
sbb
icebp
xchg
sbb
push
cmpsl
out
popa
arpl
cmp
mov
and
orl
daa
aas
inc
movsl
negl
mov
in
test
sub
and
inc
fdivr
or
loop
rcrl
cltd
lock
pop
sbb
jge
sub
out
inc
pop
jae
inc
jns
stos
inc
mov
and
leave
pop
mov
adc
or
inc
cmp
sbb
jnp
push
mov
or
sbb
popf
ja
movsb
frstor
jne
mov
sbb
sbb
inc
sub
xchg
push
lods
mov
clc
inc
out
xchg
stos
or
scas
sbb
push
push
in
jmp
shl
jnp
lahf
test
fmull
pop
lock
sub
outsl
icebp
mov
divl
mov
mov
daa
mov
repz
ljmp
xor
jo
fimuls
jle
push
add
icebp
push
incb
outsb
and
mov
enter
inc
testl
mov
repnz
fisttpll
out
das
or
push
das
cmp
adcl
jb
ss
mov
movd
lahf
sahf
jp
mov
mov
push
and
je
out
xorb
mov
lods
pusha
repz
fs
xor
add
lods
cmp
ret
lea
inc
std
not
xchg
sub
insl
addr16
cmpsb
mov
negl
xor
outsl
into
xor
cmp
xor
push
lods
dec
mov
mov
sahf
fdivl
mov
mov
jnp
inc
add
jb
push
imul
sbb
cs
and
sub
xchg
cs
es
rolb
or
push
loopne
hlt
das
out
aaa
stc
ret
daa
fs
cmpsl
sub
adc
jg
loopne
add
lret
test
movsb
mov
sub
mov
mov
insl
lock
xchg
xchg
jecxz
xchg
aam
cwtl
lahf
stos
mov
aam
cmp
sbb
int3
ret
aas
out
insb
daa
cmp
fcmovnu
scas
fcomp
sbb
adc
out
mov
push
sub
stos
mov
jb
fstpt
fdivs
cmp
int3
xchg
mov
popf
pop
test
js
fcoms
mov
sub
cmp
add
fbld
jl
bound
inc
test
pop
push
testl
pop
mov
cmpsl
ss
fadd
enter
push
xchg
adc
shll
mov
lock
or
inc
or
inc
jl
xchg
sbb
subl
inc
mov
mov
loop
xor
mov
add
mov
xor
jecxz
jae
mov
imul
ret
sbb
test
cld
inc
pop
pop
mov
std
aad
pop
jbe
fcompl
mov
sahf
mov
fistl
lahf
mov
push
in
loop
stc
pop
addr16
lret
jno
pop
inc
sub
push
ror
stos
sbb
test
ss
cmp
sbb
cmp
int3
cmp
xchg
insl
xchg
adc
mov
jecxz
inc
mov
inc
mov
push
pop
fidivrs
insl
mov
test
xchg
xor
in
or
sbb
nop
cwtl
and
rol
lods
pop
add
pop
inc
sub
lods
stos
adc
mov
inc
aad
ss
outsb
xor
dec
jge
mov
rcr
ljmp
cmp
adc
sbb
cmp
outsl
rclb
pop
mov
leave
sbb
pop
bound
adc
dec
push
outsl
pop
push
rcr
or
lods
popa
add
inc
xchg
fmuls
push
rcrl
and
cmovns
xor
dec
in
fwait
jmp
dec
add
arpl
addl
or
mov
sub
mov
push
cmc
mov
mov
addr16
mull
lahf
in
xor
adc
scas
daa
push
pop
fs
and
adc
in
orl
shlb
push
lock
push
dec
scas
sbb
cmp
xchg
pop
push
out
insb
popf
arpl
sub
mov
or
mov
pop
lahf
jmp
mov
and
icebp
enter
pop
aaa
or
ret
pushf
loope
xor
xchg
pop
push
xor
aaa
mov
iret
inc
push
sbb
fnstsw
mov
pop
xchg
jmp
mov
pop
fdivrs
popf
test
dec
rorb
xchg
mov
fld1
insl
push
pop
cmpl
repz
adc
idiv
push
fwait
mov
xchg
mov
add
dec
popa
inc
adc
lahf
inc
popa
jae
das
cmp
into
addb
add
outsb
mov
int
lret
or
pop
sub
roll
int
adc
ret
enter
or
sub
jno
imul
sahf
xor
sub
push
fwait
iret
and
rclb
sub
insb
stos
enter
sbb
in
push
sbb
rorl
cwtl
jmp
inc
sbb
mov
clc
lods
pusha
jnp
or
std
push
adcl
lds
xor
cmc
adc
xor
fcompl
dec
push
push
stc
jge
jns
mov
mov
dec
cmp
adc
push
xor
pop
aas
movsb
mov
popa
jns
sbb
scas
pop
imul
sub
mov
scas
jg
xchg
lods
sbb
decl
mov
add
lahf
ret
fnsave
push
adc
push
ret
test
scas
push
insl
adc
daa
push
dec
jecxz
cmp
out
test
sub
ja
jne
push
mov
movsb
or
mov
fwait
test
dec
fnsave
test
pop
in
add
dec
mov
jmp
mov
call
hlt
shll
mov
inc
adc
inc
pushf
nop
jo
and
sub
or
add
mov
pop
aam
mov
aas
mov
mov
dec
inc
cmp
into
cmp
push
inc
imul
jne
and
adc
dec
add
xor
lods
dec
leave
cs
out
outsb
mov
int3
sarb
out
test
insl
mov
pop
sbb
cmp
call
pop
ret
aad
jg
addr16
cmp
pop
sbb
add
or
sub
xchg
call
test
data16
inc
iret
or
loope
inc
sbb
cmc
arpl
xchg
cmp
adc
xorl
inc
sahf
leave
mov
pop
cs
xor
push
in
mov
int3
jmp
jbe
movzbl
inc
add
clc
into
and
xor
pop
shrl
mov
mov
mov
std
lock
rclb
push
xchg
arpl
sbb
fbstp
and
mov
fwait
pop
mov
rol
fcmovu
out
jns
jno
pop
cwtl
pusha
xchg
xor
xor
push
mov
or
pop
and
iret
insb
in
or
clc
mov
in
lds
data16
clc
or
les
mov
cmp
leave
stos
cli
mov
xchg
lret
and
scas
ret
fistps
pop
faddp
add
jmp
push
jno
and
push
data16
push
cmp
xchg
scas
das
lret
ficoms
inc
outsl
mov
pop
pop
sbb
cmp
sbb
xchg
add
inc
mov
xchg
das
or
imul
or
push
mov
push
rcrb
push
std
int3
ss
lock
mov
jl
insl
add
loopne
push
in
inc
scas
pop
mov
xor
mov
dec
jb
mov
stos
shll
adc
iret
mov
adc
and
test
mov
push
int3
dec
xor
inc
addr16
jno,pt
jp
xor
dec
push
and
mov
scas
push
int3
clc
fbld
test
xor
xchg
cmp
push
lds
ds
mov
aas
cmp
js
mov
in
dec
out
mov
aas
rcll
sub
mov
xchg
fcmovb
rcl
xchg
std
mov
jmp
or
jbe
repnz
jae
loop
sbb
lahf
lea
adc
cmp
lock
stos
sti
lock
pop
subb
lock
roll
add
push
lret
in
ljmp
jns
mov
ret
mov
or
and
mov
data16
sahf
or
dec
negl
and
jmp
ss
mov
push
fisttpl
and
mov
or
adc
ljmp
mov
vcomiss
mov
mov
leave
cmp
ffreep
mov
push
xor
stc
outsb
xor
in
pop
test
adc
aad
fcoms
inc
ja
test
mov
push
int
cmpsl
dec
push
es
jp
not
test
dec
or
cmp
stos
outsb
fdivrs
clc
in
in
mov
adc
fs
mov
push
fisttpll
icebp
dec
mov
and
xor
ljmp
dec
enter
adc
cmp
sub
shll
inc
add
roll
jmp
nop
es
or
cmp
add
leave
adc
mov
xor
shl
leave
cmp
dec
mov
repz
mov
mov
or
dec
repnz
xorl
mov
mov
jbe
mov
jecxz
mov
dec
jnp
jb
jae
pop
out
adcb
lret
and
jno
lods
adc
sub
loop
pop
dec
jg
cmpsl
imull
add
mov
adc
mov
pop
jecxz
lea
pop
pushf
adc
fs
xor
cmp
jp
xor
dec
push
fcomps
outsb
xor
cltd
jle
mov
xor
scas
inc
adc
push
jmp
clc
fcom
mov
mov
aad
sahf
inc
std
xor
in
add
pop
arpl
mov
repnz
sub
inc
lahf
cld
ror
mov
test
sti
sti
aaa
mov
je
cmp
sahf
pop
pop
rorl
mov
mov
pop
jp
cli
jns
pushf
add
adc
out
pop
jno
cmp
xor
pop
pop
jo
pop
jno
jl
ss
jnp
push
xchg
adc
call
pop
xchg
push
and
fisubs
mov
int
mov
lahf
xlat
sbb
mov
sahf
nop
ss
add
stos
outsl
stc
inc
or
ret
stc
or
add
xor
in
pop
out
sbb
pop
aas
fcoms
in
sub
and
xlat
dec
stos
sahf
repz
add
push
lods
aam
cltd
mov
or
push
sahf
adc
mov
in
cmpsl
addl
dec
fidivs
cld
xor
daa
lahf
lret
cmp
jb
orb
in
cmpsb
inc
fstl
and
fbstp
mov
hlt
int
jl
or
rolb
mov
jp
mov
push
in
mov
cmp
xor
mov
inc
inc
xor
or
or
test
lret
pusha
mov
iret
mov
imul
cmp
test
xchg
cmpsl
inc
sysret
test
imul
push
scas
test
jg
dec
xchg
and
xchg
push
mov
test
pop
inc
jmp
jmp
or
adc
fs
lret
add
iret
and
outsb
sar
insb
cmp
dec
push
dec
incb
dec
push
sti
jo
cmpsb
dec
xchg
hlt
inc
add
cmp
xchg
cmc
or
shll
fwait
mov
push
push
int
mov
mov
dec
les
cmpsb
jmp
pop
popf
xchg
inc
jmp
push
xor
pusha
sbb
push
imul
or
cs
leave
adc
jb
mov
xchg
shlb
pop
call
inc
orl
gs
mov
icebp
fdivrp
fmuls
pop
insl
mov
cltd
cmp
dec
mov
and
and
sub
out
xchg
xchg
insl
rorl
sarl
lret
shll
adc
pop
adc
enter
inc
mov
pop
or
push
dec
imul
cmp
popf
mov
cmp
sub
mov
or
dec
or
sub
movsb
adc
loop
aad
in
pop
add
cltd
out
xchg
jne
add
hlt
and
shrl
inc
stos
inc
dec
andl
dec
cmp
jl
mov
add
dec
ja
iret
and
xchg
and
es
mov
ret
inc
mov
movsl
cmp
xchg
push
std
jge
inc
ret
fstpt
clc
fistps
cmp
xchg
or
ret
jo
std
in
jmp
jne
push
xchg
add
cli
cmp
movsl
dec
adc
or
jne
push
push
and
inc
cld
test
cwtl
cmpsb
jno
pop
adcb
arpl
pop
lds
mov
test
cmp
jl
jle
out
and
jno
icebp
mov
lret
je
stos
call
jmp
jmp
test
jb
jno
in
fdivrl
xor
mov
ja
jmp
gs
and
fidivs
insl
lahf
sbbb
push
mov
dec
inc
dec
pop
fwait
sarl
jbe
xchg
aaa
iret
sbb
lock
sahf
cmp
sub
leave
inc
pop
push
sub
bound
adc
dec
dec
sbb
ret
ret
pop
xor
sub
ror
inc
sbb
push
xor
int3
pop
ud2
sub
inc
jl
inc
jl
inc
int3
xor
decb
outsb
jno
cwtl
pop
add
in
scas
rolb
jae
adc
fcomip
and
sub
mov
ficomps
mov
pop
sbbb
mov
xchg
idivb
xchg
cli
push
lds
inc
gs
test
mov
fldt
jne
in
add
and
mov
cmp
or
loop
push
jge
jecxz
and
inc
fwait
mov
pop
popa
pop
push
mov
lock
lds
aas
cmp
add
repz
sbb
xor
mov
aas
bound
xlat
adc
xchg
push
fcomp
jp
sarb
jp
in
inc
pop
out
jmp
jl
les
mov
dec
xor
sub
daa
adc
pop
dec
inc
sbb
sbb
pop
jg
popa
push
dec
and
xchg
and
add
mov
xchg
imull
loope
das
lret
cmp
cld
mov
pop
fucompp
in
mov
adc
inc
ja
arpl
dec
cltd
ret
and
and
popf
scas
jmp
test
lret
jge
nop
and
push
sbb
inc
cs
sti
pop
stos
loop
roll
or
dec
imul
cmp
repz
dec
loope
in
outsb
test
sub
jl,pt
push
testl
mov
les
lock
push
lret
dec
call
sub
jns
mov
push
ljmp
add
sub
dec
and
push
in
rcr
or
push
xchg
cmp
xchg
mov
push
push
addr16
popa
lret
popa
outsl
dec
mov
ret
adc
cmpsb
or
xchg
call
dec
dec
dec
sbb
mov
adc
xchg
jle
xor
mov
jnp
adc
push
les
mov
adcl
sub
jbe
cmc
adc
pop
push
das
jns
jo
adc
lods
dec
pop
cli
fnstenv
push
jp
fisttpl
daa
push
add
ds
cmpsb
mov
xchg
mov
aam
sbbb
and
sbb
outsl
push
movsl
subl
imul
bound
sub
jg
pop
sahf
imul
insl
inc
xlat
cmp
stos
aad
dec
mov
mov
outsl
and
jmp
lret
les
fistpl
lds
mov
test
shl
sub
jp
cmp
push
jmp
cmpsb
xor
xor
aaa
pushf
adc
nop
subl
ret
rcrl
sbb
pop
pusha
dec
dec
xchg
or
sub
push
fildl
and
push
cs
mov
enter
rclb
pop
mov
lcall
aad
divb
cmpb
jecxz
leave
cmp
mov
ljmp
nop
jmp
lcall
bound
js
or
aad
test
ljmp
push
pop
fsts
loopne
fstpl
aas
sahf
sbb
push
mov
loop
push
popf
fisubrs
out
leave
je
and
cmp
js
or
aas
inc
ret
repnz
sub
sub
mov
xchg
pop
dec
outsl
mov
insl
push
inc
out
stc
aaa
test
or
pop
mov
push
aam
mov
ret
xchg
adc
lea
or
aas
jns
addr16
insl
xchg
pop
xchg
cmpsb
cmp
push
repz
jle
pop
mov
arpl
push
xor
outsb
mov
dec
or
and
xlat
and
mov
push
cmc
dec
ss
sub
scas
jo
test
ret
add
enter
cmp
add
mov
mov
rorl
pop
or
cltd
imul
jp
movsl
mov
sub
or
nopl
inc
popa
mov
cmpxchg
lret
push
jmp
push
xchg
push
xchg
pop
insl
nop
addr16
pushf
lret
mov
sbb
insb
gs
es
or
popa
mov
repz
ret
mov
mov
dec
lods
dec
inc
lret
sub
mov
hlt
out
cmp
jae
out
pop
add
nop
ja
mov
mov
lret
insb
and
jge
daa
lds
xchg
outsl
mov
enter
fmulp
mov
lahf
test
sbb
addl
lea
inc
mov
inc
push
push
sub
xlat
outsb
loop
inc
jmp
xchg
push
pop
cmpl
jle
and
and
xor
xor
std
rcll
dec
inc
rorb
aas
dec
add
xchg
out
mov
and
mov
xor
mov
pop
shlb
jp
push
xchg
pop
stc
cmp
lods
sbb
lahf
jge
hlt
mov
xchg
enter
sub
mov
push
cwtl
and
cltd
int
es
insl
xlat
or
mov
jbe
inc
into
in
mov
js
mov
pop
lea
pop
fwait
lcall
lods
mov
dec
mov
test
add
outsb
add
out
pushf
sti
jl
inc
push
adc
push
pushl
jle
add
arpl
filds
add
arpl
test
movsl
orl
jnp
lret
jp
shlb
inc
mov
jp
mov
inc
push
pop
mov
fsubl
or
pop
inc
jns
cld
in
clc
sub
ret
push
daa
dec
mov
test
sbbb
jg
inc
sbb
xchg
sti
mov
push
stos
pop
fdivrl
xchg
jae
xchg
jnp
test
ss
aas
push
inc
out
cmp
dec
inc
mov
push
add
add
sbb
jnp
fdivl
aam
sub
test
mov
xchg
hlt
test
daa
cmp
xor
mov
outsl
or
xchg
or
pop
aam
pushf
adc
js
mov
es
xchg
mov
xor
inc
push
inc
addr16
outsb
in
adc
inc
int
sub
xchg
dec
pushl
xor
das
int
inc
mov
pop
xchg
jl
adc
pop
sti
fisubrs
fists
cmp
stos
mov
loopne
mov
add
lret
pop
aam
add
lea
fsub
add
jecxz
xor
cwtl
sub
ja
xchg
push
dec
movsl
testb
fcoms
fcoml
fdiv
xor
mov
movsl
add
fidivrl
cmp
in
jb
js
outsb
popf
mov
pop
sub
cs
push
mov
add
add
std
dec
lcall
sub
aam
popa
loop
cmp
cwtl
cmp
mov
jno
iret
sbb
mov
jecxz
mov
stos
mov
out
mov
daa
cmp
sub
and
mov
pop
pop
mov
dec
mov
popf
push
jle
sahf
in
push
and
bound
jmp
test
repnz
add
call
cmp
test
sbb
pushf
xchg
clc
sub
xor
mov
jo
push
ror
mov
scas
push
lds
cs
leave
insb
sarb
in
or
add
pop
fstps
xorl
insl
nopl
lea
imul
mov
fwait
movsb
mov
rorl
pop
aaa
movsb
divb
push
and
lahf
push
leave
or
cmp
loop
ret
cli
lret
cmp
lea
jae
out
cmp
ret
and
call
pop
mov
add
in
mov
ljmp
popa
mov
mov
or
dec
pop
mov
or
jb
push
aaa
lods
in
in
dec
xor
push
xor
mov
stos
aaa
or
cmpsl
lods
and
ficoms
sbb
orb
nop
int3
test
adcl
pop
adc
pusha
sub
cmp
add
mov
and
fwait
cmp
cmp
sbb
mov
cmpl
add
lock
into
out
movl
movsb
lods
lcall
clc
or
xchg
iret
jae
add
or
xlat
js
adc
movsb
iret
push
sub
sbb
or
dec
outsl
call
and
lret
push
in
daa
mov
les
mov
pop
xor
push
sub
insb
cli
pop
mov
fists
in
add
inc
cmp
fldcw
popf
mov
les
mov
pop
mov
mov
cmp
cmp
jl
dec
jl
jbe
popa
mov
mov
cmpsl
pop
ljmp
jge
jne
cwtl
adc
inc
push
loopne
jae
sbb
ret
mov
or
and
lcall
cmp
and
cmp
shll
cwtl
lcall
popf
xchg
loop
rol
dec
sti
xlat
push
int
jg
inc
test
fnstsw
fwait
icebp
pop
mov
rcrb
or
nop
mov
pop
pop
scas
insl
movsl
imul
mov
inc
add
xor
int3
jg
adc
xchg
xor
mov
or
jae
stc
push
out
shr
jmp
inc
rol
shrl
adc
xor
jno
test
ja
sub
xchg
sarl
movsl
jle
or
jnp
lods
jge
and
movsb
imul
mov
aam
pop
push
lds
mov
cli
loop
pop
aaa
pusha
inc
cmp
aas
jle
mov
imull
inc
pusha
mov
cmp
and
fsubrl
pop
and
enter
scas
jbe
and
stos
or
lcall
fistl
sub
leave
mov
push
pop
ret
dec
fisttps
fmul
xchg
bound
sub
fs
in
xchg
jl
add
mov
mov
iret
les
inc
sbbb
add
ds
add
jmp
jns
xchg
test
faddl
out
out
in
cmpsl
pop
shrb
sub
and
repz
mov
daa
pop
mov
dec
fsubrl
fcomp
dec
lret
repz
nop
and
push
cmpsl
xchg
xchg
pop
cld
mov
sarb
outsb
fidivl
scas
and
icebp
or
loope
rolb
es
clc
xchg
jbe
int
pop
push
das
rol
inc
jne
aas
lret
cwtl
inc
repnz
adc
and
dec
les
jae
cmp
shl
pop
add
and
jp
push
xchg
mov
ret
incb
add
daa
jge
test
movsb
das
mov
mov
je
xchg
push
clc
repz
add
andl
dec
xchg
movsb
jmp
jne
insb
inc
pop
fadds
sti
dec
mov
ljmp
lods
cmpl
xor
aad
push
stos
inc
movsl
inc
cwtl
stos
scas
mov
call
push
adc
adc
into
cltd
in
or
dec
jb
add
test
imul
outsl
or
dec
fldcw
cltd
loop
sub
adc
js
pop
sub
jnp
ror
out
movsb
iret
xchg
imul
andl
sbb
pop
sbb
pop
mov
mov
add
and
pop
xchg
xor
pop
xchg
aas
dec
out
add
mov
add
sub
es
test
push
mov
adc
jp
lcall
lcall
stos
int
jg
lock
icebp
and
ja
cmpsl
push
jb
int
loopne
adc
add
add
aam
movsb
ljmp
hlt
test
and
mov
in
ljmp
fs
into
jle
dec
mov
xor
aas
repz
insl
sub
push
mov
movntq
out
out
push
xor
mov
cmp
inc
and
int
and
push
in
aaa
lcall
push
push
lahf
mov
xchg
mov
into
ljmp
insb
loope
addl
add
out
repnz
add
fnstcw
jge
add
sub
mov
sbb
jb
jle
pop
mov
js
dec
sti
sub
sub
jb
mov
movsl
adc
jne
pop
cli
repz
sti
and
mov
xor
sub
jo
xchg
int
push
rolb
add
imul
or
lock
sarb
sub
imul
das
mov
or
fdivr
mov
jl
imul
fidivrs
mov
dec
fadds
xlat
gs
loopne
fwait
adc
dec
or
addr16
xchg
daa
icebp
xchg
inc
xor
imul
jns
pop
ja
imul
pusha
mov
lahf
ljmp
les
dec
or
dec
mov
sub
push
adc
loop
js
enter
jnp
cmp
je
daa
call
and
mov
roll
sub
aaa
fists
push
xchg
addl
repz
loop
sub
jge
mov
pop
sub
dec
lock
je
repz
in
sbb
insl
pcmpeqw
xor
fwait
jge
ds
sti
dec
and
fcoms
shrl
dec
adc
cs
inc
mov
jns
shl
mov
push
aam
push
js
int3
lock
mov
in
xchg
and
mov
cli
ljmp
sub
xor
in
outsb
jp
lea
aam
xchg
mov
ljmp
cmp
test
dec
fwait
mov
cmc
push
cmp
and
js
jbe
clc
jbe
xorl
xlat
jno
outsl
outsb
adc
jge
iret
fisubs
pop
dec
cs
fwait
jle
shlb
xchg
push
push
cmp
je
cmp
imul
or
mov
sub
popa
bound
insl
xor
mov
inc
xor
mov
xchg
out
dec
cli
test
add
int3
dec
rcrl
pop
push
sbb
mov
mov
and
mov
bound
push
pop
hlt
pop
sub
sub
lret
hlt
dec
push
jle
add
cmp
inc
pop
mov
xor
or
inc
shl
jbe
xorl
xlat
fcomip
jne
and
xchg
dec
mov
in
adc
sbb
mov
mov
mov
cmp
cwtl
sti
xchg
js
cs
mov
jne
jge
xchg
cmc
dec
loope
shll
xor
iret
mov
loop
fiadds
les
xchg
in
int
rcll
xor
nop
adc
gs
pop
in
sbb
ljmp
mov
fldcw
xchg
or
jmp
cmp
xchg
push
leave
jecxz
jbe
jl
sub
mov
fsts
jle
out
in
aam
and
outsl
fmuls
mov
push
cld
loopne
mov
xchg
or
in
xchg
sbb
inc
or
loop
mov
adc
cmpb
inc
and
jne
mov
xlat
stos
sub
dec
lcall
lds
or
out
je
lea
add
xchg
in
dec
cmc
xchg
mov
shlb
push
cmc
out
pop
jg
add
jle
jg
sbb
insb
add
xchg
hlt
int3
pop
push
filds
push
popf
mov
lds
xchg
mov
push
ss
sub
ret
rcr
push
xor
jns
dec
stos
das
popa
ljmp
push
scas
pop
cmp
push
or
push
jae
push
movsb
dec
fwait
pop
outsb
std
nop
ficoml
cmp
call
mov
jae
mov
push
das
xor
cmp
cltd
dec
js
sahf
ja
insl
push
pop
add
hlt
push
mov
into
clc
addr16
outsl
dec
mov
push
inc
incb
hlt
jle
clc
repz
xchg
adc
inc
and
sbb
in
enter
pop
pop
insl
ja
ja
jns
ficoml
xchg
sbb
pop
inc
pmaxub
call
add
neg
xor
dec
ret
insb
and
mov
lret
dec
cvtdq2ps
scas
fucom
repnz
inc
movsb
add
cli
mov
sub
or
loop
out
stos
push
das
inc
psllq
jae
mov
popf
mov
dec
repnz
adc
pop
push
xchg
sub
xchg
dec
popa
dec
pop
pushf
sub
adc
pop
js
mov
adc
rcrl
call
cmpsl
sub
gs
xchg
clc
xchg
decb
mov
inc
dec
or
sub
stos
sbbl
pop
xor
pop
mov
nop
popf
mov
pop
int3
test
push
xchg
popa
pop
jg
adc
mov
mov
jl
dec
mov
mov
jg
in
xor
mov
cmpsb
xor
jbe
cmp
repnz
aam
fdivrs
lahf
ds
xchg
daa
in
xor
mov
cmp
lea
inc
cli
aad
ljmp
jo
sub
jno
mov
out
das
xlat
sub
xchg
mov
jg
icebp
adc
dec
pop
test
xchg
imul
outsb
cmp
loopne
jl
xchg
addr16
xchg
cmpsb
sub
cmp
pop
push
adc
mov
fdivr
out
ljmp
fwait
in
dec
mov
out
push
pop
jmp
xor
add
mov
jne
repnz
mov
jnp
aad
addb
ret
cmpsl
or
filds
sbbb
xor
imul
lret
dec
jns
push
stos
out
addl
dec
and
pusha
mov
fnstcw
in
pop
dec
push
pusha
jmp
pusha
xlat
pop
icebp
jge
xlat
push
dec
jb
jbe
lods
pop
pop
adc
add
orb
push
bound
nop
add
xchg
mov
mov
xchg
leave
jbe
loop
jo
iret
jle
jp
lcall
dec
lods
cmpsl
andl
mov
stos
addr16
ret
andl
shlb
xor
pusha
mov
enter
sub
dec
mov
cwtl
xchg
or
sub
dec
pusha
test
stos
push
xchg
jle
outsb
pop
stos
mov
mov
mov
mov
cltd
cli
mov
test
cmp
es
xchg
xchg
fsubrp
mov
xchg
movsb
sarl
dec
test
call
scas
cmp
mov
cmp
xchg
clc
fiaddl
add
adc
cli
lock
pop
lret
xchg
adc
xor
cmp
cmp
pop
ja
fidivs
ret
add
outsb
idiv
jnp
jne
es
push
push
xor
movsl
incl
clc
cltd
xchg
arpl
lcall
jno
cmp
sbb
jmp
jnp
aam
jnp
int
stc
push
lea
xchg
mov
cmp
sahf
sub
rcrl
or
mov
shll
stos
sub
ror
add
mov
sahf
jno
popa
dec
pop
jp
or
xchg
adc
scas
jbe
stc
aam
xchg
mov
jp
andl
adc
sbb
mov
mov
incb
scas
fistps
xchg
mov
stos
push
mov
cmp
jbe
leave
fs
ret
clc
outsl
mov
mov
mov
adcl
or
test
xchg
mov
int
sub
cltd
cmpsl
and
mov
dec
mov
loopne
ret
cmp
scas
mov
dec
xchg
push
les
rolb
mov
jmp
loope
mov
outsl
nop
ret
mov
mov
inc
cltd
flds
pop
mov
pop
mov
ds
test
dec
loop
cmpl
sub
out
dec
outsb
hlt
mov
sub
pusha
xchg
cmp
jmp
lods
xor
adc
inc
out
mov
sahf
xorb
dec
inc
push
or
fldt
in
lea
xor
rclb
es
test
pop
mov
inc
insb
js
lds
mov
inc
push
popf
mov
pop
mov
fmuls
mov
dec
jae
scas
mov
push
mov
lods
shr
out
loope
mov
dec
data16
mov
into
push
pop
loop
rdtsc
lods
test
test
add
push
cld
xchg
std
dec
icebp
inc
cwtl
pop
repnz
add
mov
lods
dec
cwtl
loop
aaa
ljmp
mov
pop
adc
cld
gs
sbb
inc
xchg
adc
xlat
dec
sub
cld
sub
daa
mov
cmpsb
ja
push
mov
sbbb
mov
or
pop
test
repz
pop
add
xchg
sbb
scas
sbb
jge
inc
into
roll
pop
dec
mov
roll
ja
or
adc
roll
stos
and
mov
pop
cmp
bound
in
xor
cmp
xchg
in
sbb
repnz
jmp
lret
ds
shlb
xchg
xchg
and
push
push
xor
sbb
add
mov
cs
arpl
xchg
pop
pop
imul
aas
in
pushf
rclb
test
nop
and
cmp
and
push
mov
rcll
sbb
jmp
int3
insl
and
out
out
pop
xor
sub
xchg
ror
jae
js
inc
xchg
and
fisubl
in
jns
pop
jmp
gs
out
and
daa
add
gs
lods
jb
dec
loope
push
mov
cltd
push
mov
xchg
pop
push
neg
lds
inc
mov
sbb
jle
fcos
sahf
outsb
and
mov
test
adc
or
into
mov
pop
sub
in
fnstsw
ljmp
aad
or
mov
pop
mov
int
cmc
adc
js
xchg
inc
popa
sbb
xchg
xchg
clc
push
pop
push
ret
shrl
jp
jle
cmp
addr16
lret
adc
inc
adc
ret
popf
iret
int
inc
stos
bound
or
int
lods
adc
les
mov
lods
jge
test
jle
scas
mov
push
jbe
and
arpl
inc
sbb
and
xchg
push
aaa
pop
outsl
in
cmpsl
dec
lds
ss
add
pop
fildl
jb
cmpsb
pusha
cltd
xor
jl
lock
fs
push
add
inc
loopne
cmpb
push
loopne
jns
dec
call
mov
and
rclb
repnz
mov
adc
mov
pop
xchg
in
in
or
pusha
test
dec
sub
ds
std
ss
loope
jae
push
inc
mov
lods
xchg
pop
pop
xchg
pop
dec
sub
xchg
add
sahf
stos
loopne
imul
xlat
addl
adc
test
aad
jecxz
testl
aad
pusha
sub
push
fstl
fbstp
fldt
sahf
push
or
scas
or
ss
sbb
sub
jnp
mov
in
mov
pop
lcall
stos
cmc
das
out
cmpsb
xchg
pop
xor
mov
pusha
push
push
sub
repnz
andl
mov
add
cmp
mov
push
sub
adcb
mov
loop
sub
cmp
jbe
mov
sti
push
jno
insb
fistpll
stos
push
sbb
test
ss
cli
xchg
push
inc
jbe
mov
lea
cli
mov
leave
mov
popf
cli
out
inc
insb
mov
scas
mov
bswap
dec
pusha
subl
cmp
push
cwtl
xor
push
cli
pop
lock
std
andb
sbb
xchg
xor
out
xor
lods
push
push
adc
and
sub
and
outsl
or
push
cmp
movsb
xor
mov
lds
ljmp
mov
fdivrs
out
jge
insb
xchg
stos
movsb
sub
mov
xchg
test
push
les
push
sub
or
pop
test
mov
mov
aad
out
rorl
test
mov
cmp
push
test
mov
or
jbe
negl
pop
andl
sub
sbb
cwtl
ds
sbb
sub
or
mov
scas
push
mov
pop
xor
popa
xchg
inc
mov
mov
mov
xchg
hlt
lock
push
sbb
jb
xchg
ja
push
or
fucomp
adc
mov
jmp
stos
dec
inc
xorb
mov
xchg
loope
adc
and
mov
sbb
outsl
mov
dec
sbb
lods
fs
pop
rcrb
push
adc
or
test
ljmp
xor
mov
cmc
fbstp
jns
add
jl
dec
stc
imul
xor
imul
adc
sbb
or
jae
into
das
outsb
ret
out
dec
stos
test
movsl
adc
repz
repnz
xor
mov
push
jbe
scas
dec
mov
pushf
mov
cmp
dec
dec
lock
sbb
xchg
pop
sub
ret
sub
pop
inc
dec
rcrb
test
inc
xchg
add
mov
jo
pop
jne
les
jns
push
mov
pop
out
or
push
cmp
ds
icebp
sbb
in
xchg
xchg
test
mov
add
cltd
data16
cld
cmp
lcall
xchg
shlb
int3
aad
sbb
mov
xchg
mov
popa
out
movsb
daa
hlt
daa
push
sahf
mov
cmp
lcall
cmp
mov
or
aaa
fadd
add
rcrl
mov
adc
add
clc
and
inc
test
mov
outsl
pop
pop
and
push
fwait
push
dec
xor
sbb
movsb
fs
add
and
enter
stos
and
cmp
push
scas
mov
aaa
fistl
push
xor
mov
pusha
xor
and
and
adc
xor
stos
or
jl
imul
mov
mov
fisubrs
call
cmc
adc
add
out
push
bnd
dec
je
mov
inc
sbb
call
mov
lcall
vcvtps2dq
xlat
pop
sbb
jns
adc
nop
inc
pop
pop
dec
jae
test
dec
sbb
jns
dec
rcrl
arpl
stos
mov
or
stos
sahf
ds
mov
lods
push
pop
cli
mov
xchg
aad
add
mov
in
imul
xor
xlat
cmp
pmullw
and
sub
cmp
test
rorb
or
inc
cmp
cmpl
stos
jge
movups
mov
pop
pop
jno
cmp
mov
shrl
bound
jge
lahf
pop
into
bound
cs
jge
data16
mov
cmpsb
cmp
cmp
push
cli
orl
fwait
push
stc
sub
aad
xor
imul
scas
iret
lret
sub
mov
xor
stos
mov
lea
pop
mov
sbb
cwtl
push
add
mov
jmp
inc
loop
loopne
test
cmpsl
jne
mov
mov
or
xchg
dec
andl
cmp
dec
sub
sub
and
lcall
fsub
nop
xchg
or
ja
cmp
lock
xchg
mov
gs
testl
into
aam
incl
dec
jns
xchg
mov
jns
pop
sti
mov
dec
and
push
push
lahf
and
push
hlt
mov
and
cmpsb
lret
and
jg
jne
and
jge
sahf
pusha
imulb
or
jmp
in
ljmp
mov
push
xlat
aaa
cmp
pushf
push
jmp
popf
pop
dec
mov
jge
cmp
stos
sti
pop
inc
and
sub
call
sarl
sar
xlat
fs
imul
pushf
jmp
out
jo
pop
add
int
jne
inc
inc
es
mov
dec
mov
sbb
sahf
sub
imul
jecxz
pushf
and
insl
sahf
loopne
jl
ret
imul
scas
xor
loopne
push
sahf
shlb
inc
mov
std
cmp
push
xor
cmc
ret
adc
sub
sbb
mov
fisttpl
inc
in
adc
lret
adc
or
and
inc
sbb
mov
inc
xor
inc
loope
mov
mov
push
mov
shlb
sbb
cmpsl
inc
stos
pop
movsb
sbb
mov
hlt
repnz
dec
pop
daa
lock
popa
dec
fcmovbe
idivl
int
pushf
stos
mov
jmp
adc
imul
sbb
gs
and
dec
mov
adc
push
add
mov
outsl
nop
jl
cmp
sbbb
pop
mov
cmp
and
pop
das
idivb
inc
jp,pt
and
repnz
out
mov
lret
xor
test
stc
arpl
push
xchg
mov
test
fcmovb
dec
into
ljmp
push
rcl
push
hlt
push
cmp
mov
iret
call
jle
push
aam
incl
out
incb
sbb
cmp
pop
repnz
insb
jmp
unpckhps
nop
es
inc
pop
mov
and
mov
shl
adc
pop
clc
jle
push
shrb
lods
cmc
mov
jmp
or
xchg
mov
loop
add
mov
mov
push
mov
push
xor
loop
pop
cmc
mov
push
or
insl
test
add
cmp
sbb
pop
pushf
in
cmp
xor
cmc
mov
popa
rorb
adc
pop
or
imul
jnp
int3
in
imul
pop
jl
in
xor
sbb
jmp
pop
mov
inc
movl
shll
add
stos
xor
inc
jecxz
cwtl
out
jmp
jb
cmp
pop
enter
push
fld
dec
cmp
inc
popf
mov
int
adc
xchg
mov
xor
adc
icebp
or
dec
movsl
xchg
lcall
dec
xor
jl
push
into
jmp
mov
sbb
dec
daa
jg
pop
inc
xchg
mov
loope
or
js
mov
test
or
mov
les
outsb
hlt
cmp
testb
cmc
cld
rolb
xor
icebp
jg
jbe
outsb
scas
mov
xor
cmc
push
out
divl
popf
leave
push
mov
mov
pop
setp
rcll
loop
mov
inc
pop
int3
lcall
inc
or
xor
outsb
xor
cwtl
dec
push
lahf
push
push
jl
pop
jo
adc
stc
iret
sub
movsb
inc
inc
fxch
jbe
cmp
insl
imul
repz
out
dec
imul
jmp
sub
add
mov
orl
jmp
lcall
mov
ss
outsl
aad
mov
jp
mov
leave
adc
popa
xor
iret
jmp
inc
lea
mov
dec
mov
filds
push
add
stos
shlb
sbb
inc
push
sbb
sub
jbe
fstpl
mov
add
rcrl
xor
rolb
cmp
or
sub
repnz
mull
cwtl
scas
out
clc
add
xor
std
movsl
sbb
mov
sti
int
mov
hlt
mov
pop
stos
mov
cltd
daa
scas
mov
cmp
adc
inc
sbb
add
mov
xor
into
mov
sahf
sbb
shl
out
xchg
cmp
cwtl
fucomp
add
test
jecxz
cmovb
in
add
jne
jbe
out
push
lods
insb
pop
add
dec
pop
cmp
das
sub
ret
dec
ret
popf
rcrb
and
jmp
jle
inc
jmp
jp
add
setge
push
jne
sbb
fst
sti
repz
push
pop
or
dec
mov
addl
sub
gs
paddw
cld
pop
outsb
push
pop
add
and
sub
cmpsb
inc
imul
aad
sub
mov
push
sbb
or
sub
shll
loopne
mov
shll
adc
pop
imul
mov
jp
mov
inc
leave
pop
xchg
shrl
daa
and
loop
adc
mov
icebp
mov
jle
and
sbbb
pop
lds
int
xor
or
test
cmp
cmp
cmp
jge
mov
std
out
stos
push
repnz
and
and
sbb
jnp
dec
in
lcall
cmp
stc
pop
mov
daa
les
sbb
lahf
stos
jnp
add
jge
xchg
lods
xchg
orl
fcmovnb
jge
scas
pop
das
jmp
adc
into
xchg
out
push
ret
lods
jnp
jnp
fs
test
jo
mov
out
nop
flds
sar
in
lea
add
addr16
lea
aad
sti
dec
mov
pushf
mov
push
adc
addl
push
and
xchg
lret
xor
iret
ljmp
push
aam
push
push
test
fmul
add
jmp
sbb
enter
jp
or
in
int3
dec
movsb
inc
and
sahf
fbstp
cwtl
xchg
mov
and
add
daa
iret
loop
adc
aad
in
aas
dec
dec
mov
cmp
cs
repz
jno
cli
sub
or
xchg
lock
sbb
sbb
mov
jne
add
push
push
arpl
jl
xchg
outsl
stc
fwait
sub
xchg
push
inc
xor
add
sbb
sarb
pop
dec
or
aas
push
testl
outsl
testl
icebp
pop
adc
sub
andb
notb
xchg
xor
xchg
in
pop
jle
fmuls
clc
aad
xchg
pop
sbb
mov
adc
xor
enter
addr16
xor
lods
test
into
xorl
inc
push
sbb
pop
jne
xlat
cwtl
push
push
int
fdivp
pop
cmc
rcrb
je
popf
cmp
sub
adc
xchg
test
dec
adc
jnp
cmp
dec
push
lea
iret
das
mov
out
popa
dec
or
adc
loop
dec
mov
add
mov
daa
sbb
je
and
fiaddl
popa
gs
push
psrld
mov
hlt
dec
dec
ror
fbstp
mov
clc
xor
call
insl
cld
xchg
mov
jecxz
mov
sub
cli
int
imul
jnp
xor
insb
fs
sarl
xchg
adc
adc
aad
mov
mov
test
js
icebp
icebp
sub
lods
mov
daa
shlb
lcall
loopne
jae
cld
pusha
lods
cld
jb
aam
and
fstps
sub
jmp
aam
xor
xor
test
cli
mov
into
test
xlat
cltd
sbb
or
shrb
inc
bound
jmp
int
sub
xchg
and
fldenv
rcl
test
xchg
shrb
and
mov
push
notl
push
xorb
insb
int3
mov
add
jno
cltd
push
fsubl
adcl
xchg
lret
loop
pusha
sub
and
pop
sti
hlt
xchg
int
bound
test
mov
push
jecxz
sub
and
test
dec
add
or
xchg
fcmovb
sti
shl
add
adc
outsl
xorl
adc
pop
test
ja
ret
ds
enter
pop
nop
insl
push
jbe
sti
inc
pop
cmp
in
xchg
outsb
insl
nop
mov
mov
xor
aaa
cmpl
out
das
xchg
mov
push
outsb
fiadds
xlat
flds
sbb
mov
inc
or
xor
jno
lods
mov
xor
push
pushf
dec
bound
or
psrlq
test
cld
icebp
je
xchg
fsubl
or
jno
cmc
loopne
pop
mov
mov
pushf
pop
mov
push
pop
cmp
int3
xor
je
aaa
dec
daa
cmpb
jne
pop
cmpsb
aam
mov
fldcw
dec
test
xchg
jnp
and
ss
adc
mov
ds
aas
sbb
outsl
xor
pop
cmp
xchg
adc
push
in
fdivrl
mov
les
mov
outsl
dec
jae
iret
or
inc
das
mov
xchg
mov
pop
add
imul
add
lar
and
call
push
loope
js
add
int3
icebp
mov
and
mov
sbb
stc
add
dec
ss
fnstenv
xchg
pop
imul
lock
adc
je
sbb
sbb
pop
scas
or
jl
mov
das
pop
inc
leave
push
loop
mov
add
fisttps
adc
xchg
mov
mov
insl
js
inc
push
jnp
push
xor
shll
add
jnp
cmp
push
movsl
pop
push
pop
sub
mov
lods
add
add
jae
cmpsb
mov
int
and
repnz
pusha
inc
iret
inc
in
push
cmp
ret
mov
pshufw
mov
rclb
fsubrl
scas
jns
rorl
loopne
cwtl
pop
xor
lds
fucomip
add
sbb
es
cwtl
or
lea
sub
add
pop
jle
mov
lods
push
sahf
pushl
test
jbe
push
push
repnz
fidivrl
rclb
mov
dec
mov
movswl
inc
push
sbb
and
push
mov
cmp
cmp
or
mov
testb
sbb
lods
clc
ja
jp
dec
add
frstor
and
dec
sub
adc
sbb
ljmp
jae
sbb
ret
and
stc
insb
push
sti
mov
stos
pusha
rcl
jle
mov
pushf
push
ja
lods
sub
xchg
out
mov
mov
repnz
sub
pop
movsl
icebp
loop
bound
leave
sarl
adc
repnz
insl
pop
push
and
sub
stc
ret
and
insb
pushf
jmp
aam
mov
pop
insl
repnz
je
dec
jbe
cmp
mov
push
jbe
and
sub
xchg
jge
cltd
fs
xchg
ret
insl
xor
lods
out
jge
xlat
flds
in
cmp
cmc
std
pop
xor
cltd
jb
jo
cmpsb
pop
in
mov
js
inc
mov
sub
repz
movsb
or
int3
sub
inc
aam
aad
scas
js
mov
nop
aad
lods
mov
xlat
jmp
hlt
adc
dec
mov
or
fidivl
inc
pusha
popf
popf
pop
or
xorl
movsl
pop
push
pop
dec
jmp
mov
or
frstor
sub
adc
adc
inc
cmpsl
xlat
aam
stos
jp
imul
mov
push
lea
add
jno
push
jmp
adc
out
add
stos
cmp
add
dec
jns
shrl
adc
add
negb
ja
xlat
sub
mov
mov
mov
xchg
dec
mov
insb
in
inc
or
sbb
inc
pop
mov
repz
bound
or
out
add
cld
and
lret
mov
mov
pushf
mov
fs
and
repz
scas
mov
roll
mov
sahf
out
push
popa
mov
lahf
or
cmc
adc
cmp
outsb
sub
xchg
scas
lret
xchg
inc
std
dec
movsb
shl
cld
push
es
sbb
lea
das
fisubrl
dec
adc
lea
insb
std
out
dec
lcall
leave
dec
mov
repz
or
std
addr16
pusha
pushf
sti
js
adc
and
xor
in
pop
jne
lcall
mov
enter
or
pop
push
data16
loop
in
xchg
sbb
ret
sub
lret
insb
xor
clc
loop
int3
std
testb
sub
outsb
std
cmpsb
jne
xlat
cld
jnp
pop
sub
pop
out
mov
bound
add
mov
mov
xchg
jl
inc
sbb
xor
xchg
jb
fwait
stos
daa
les
ss
inc
in
mov
mov
or
std
push
xor
lds
adc
or
inc
lods
xor
dec
and
lods
lea
int3
jle
out
lea
into
jb
imul
pop
pop
mov
or
fucomi
push
dec
aaa
out
mov
test
rcll
xchg
or
sahf
shlb
int
loop
dec
mov
or
sahf
push
shll
nop
clc
or
xor
xor
scas
in
insb
sbb
dec
jbe
fisubl
inc
dec
xchg
ret
or
outsl
lock
cmp
pushl
fdivrl
pop
push
mov
mov
xchg
es
adc
jno
and
mov
leave
cld
movsb
and
lea
cwtl
cmp
mov
add
jge
bound
lahf
sub
xchg
inc
loopne
jl
jmp
jp
mov
sbbl
dec
mov
bound
fs
cs
stos
xor
xor
push
mov
es
xor
dec
outsl
rcrl
xor
jbe
fisubs
mov
sub
xchg
out
sbb
adc
inc
ret
mov
push
je
xor
mov
imulb
aas
pop
xor
aas
or
int
push
repz
and
insl
xorl
int3
hlt
in
cwtl
mov
xor
in
jp
xor
int3
xor
jle
clc
and
add
scas
push
insb
mov
loopne
fstps
das
stc
push
push
insl
adc
push
pop
mov
outsb
and
xchg
pop
leave
icebp
aaa
fmul
jle
adc
sarb
shll
sub
mov
xor
into
andl
aaa
addr16
jne
outsb
shrl
push
mov
jae
jb
ss
jmp
shl
xchg
lcall
pop
ret
clc
cmp
push
adcb
jge
mov
popa
dec
mov
leave
sbb
insb
sti
repz
mov
cld
andl
nop
xchg
sbb
mov
mov
popa
cmpsl
mov
and
leave
sti
xchg
mov
sbb
push
cltd
ret
fwait
push
dec
cs
jge
and
andl
leave
xor
mov
lret
or
jge
dec
rcrb
shlb
cmp
mov
mov
mov
or
adc
in
adc
imulb
inc
xor
ret
insb
xor
clc
xchg
or
test
loopne
lret
jnp
outsb
sub
clc
xor
mov
mov
or
arpl
pop
cwtl
test
xlat
popf
rcl
adc
mov
ds
or
shr
push
mov
std
xchg
mov
std
cli
xor
mov
push
pop
movsl
ljmp
cmpsl
adc
mov
imul
add
mov
scas
imulb
lret
das
jecxz
mov
add
das
jl
xor
push
shrb
pop
sbb
orb
rcr
xchg
cmp
xor
pop
add
gs
inc
lcall
mov
adc
testb
lods
es
lret
outsl
sub
mov
mov
das
add
rcrb
adc
xor
cmp
pop
xor
stos
mov
lahf
jbe
mov
pushf
mov
dec
mov
pushf
pop
jno
orl
ror
aad
shll
adc
scas
repz
paddsb
es
clc
pop
mov
std
xor
or
sub
pusha
je
in
loop
in
mov
xchg
adc
mov
ljmp
nop
push
inc
push
pop
xlat
add
scas
aaa
push
enter
xor
cmp
roll
fisubs
dec
fdivrs
add
ret
loop
mov
and
mov
sbb
cmp
push
les
mov
mov
cli
in
adc
hlt
xchg
fcompl
inc
aaa
lock
repnz
outsl
inc
mov
andl
testl
hlt
add
push
js
cmp
xchg
ficoms
mov
addr16
decb
cmp
push
pop
sub
xchg
clc
jo
divb
cmp
sub
shl
mov
test
stos
push
xor
xchg
sti
xchg
pop
cmpsl
mov
lret
addl
into
inc
pop
inc
mov
rorl
push
in
add
scas
aas
mov
stc
shll
fmuls
and
push
adc
push
ret
mov
dec
adc
icebp
testl
divl
mov
push
stc
push
subb
pop
rcrl
sub
push
rol
fld1
push
rcl
and
mov
or
fs
cmp
mov
inc
fwait
enter
push
inc
and
mov
pop
into
jns
xchg
xlat
or
jns
adc
icebp
cmpsb
cld
mov
add
testl
jns
xchg
stos
lret
xor
pop
push
les
jle
test
inc
ror
dec
push
adc
mov
push
pop
mov
xchg
aas
inc
lret
lcall
push
movsb
adc
es
popa
leave
jno
or
cmp
sub
cli
movsl
rorb
or
fcoml
jl
mov
dec
add
outsb
adc
add
jnp
xlat
add
mov
dec
lahf
dec
pop
adc
cmp
cwtl
fisttpll
lods
mov
and
stos
or
lds
xchg
sbb
cs
test
sbb
xchg
sbb
mov
frstor
in
xchg
enter
outsb
xchg
test
stos
dec
mov
notb
or
push
mov
das
push
xchg
jl
icebp
sub
in
mov
cltd
mov
inc
dec
sub
add
repz
addr16
lret
fst
or
popfw
xchg
or
xor
shrl
adc
sub
push
mov
pusha
and
lret
adc
mov
pop
push
lret
clc
add
push
mov
add
xor
jae
movsb
sbb
sub
jp
jp
mov
cmp
repnz
lock
cmp
add
xor
lahf
outsb
mov
lahf
jb
push
mov
cmp
fucomp
sub
loopne
jb
ret
cmp
push
cmp
dec
insl
mov
jle
sbb
pop
adc
mov
movsl
stos
cmp
xchg
cmp
data16
sub
out
fwait
loop
jnp
xor
sbb
jne
jb
scas
lock
sbb
push
out
jecxz
push
or
imul
stos
xchg
mov
sbb
push
push
fwait
subb
sbb
xor
lds
lock
js
jle
push
insb
cli
pop
mov
test
stos
mov
mov
lcall
push
push
or
mov
jmp
sub
cwtl
repz
cmpsb
sbb
mov
and
mov
jo
push
ffree
inc
xchg
pop
movsb
jmp
ret
cmp
xchg
pop
ret
push
push
or
xchg
in
fcoml
mov
shrb
jmp
add
mov
lods
mov
xchg
jge
repz
lea
jecxz
flds
sbb
scas
jb
dec
pop
sub
jl
cltd
loope
out
mov
pusha
insb
pop
jg
jne
insl
ret
int
daa
fs
push
add
xor
shlb
jg
jmp
iret
sbb
cmpsl
fwait
jp
insl
jecxz
mov
cmc
or
in
ljmp
enter
cld
je
ss
mov
dec
mov
xchg
subb
sbb
jbe
add
cli
cwtl
adc
popl
int
lods
sti
cmp
add
stos
and
std
and
or
ret
aam
pop
bound
mov
imul
fbld
or
in
sub
subl
js
jl
cmp
push
sbb
loope
sarl
hlt
mov
fucomp
xor
xor
mov
xor
sbb
push
dec
fiadds
je
sbb
shrb
push
into
test
mov
pop
in
adc
or
add
ljmp
jmp
push
cmpsl
sbb
and
push
into
out
push
sbb
popa
inc
mov
fmull
cmp
fcmovnu
push
add
sahf
loope
pop
push
mov
or
ficomps
jns
sub
in
jg
jnp
ljmp
xchg
in
fwait
clc
jp
xor
int
cmp
cmp
repz
or
jns
pushf
sbb
sub
xchg
add
sahf
aaa
scas
ja
cs
push
call
dec
lea
adc
xchg
mov
scas
mov
lea
das
lods
fbstp
xchg
aaa
pop
shlb
xor
add
ret
imul
jecxz
xchg
lds
sub
xchg
insl
xchg
xchg
dec
fiadds
mov
stc
fstpt
popf
stos
jp
dec
in
enter
pop
fstpt
pop
movsb
sbb
mov
aam
pop
addl
inc
sub
cwtl
enter
movsl
inc
cmpsl
fdivr
scas
and
sub
out
mov
push
or
push
arpl
jge
fnstsw
pop
or
sub
loopne
mov
mov
ds
call
mov
shl
xor
push
popf
int
out
mov
jno
mov
hlt
stos
fsubrs
in
pop
lcall
fidivrl
mulb
sbb
lret
dec
call
addl
das
sub
xor
in
ss
lods
mov
xor
push
inc
and
lcall
cltd
mov
jb
cltd
xor
imull
mov
sub
jo
int3
data16
out
scas
push
cmpsb
jb
adc
cmpsl
pushf
lea
inc
jp
add
fldenvs
bound
les
fcomps
add
jo
fstps
fisubs
push
js
push
adc
push
lods
imul
dec
into
xchg
inc
push
shrb
popf
imul
in
jge
pop
dec
dec
xchg
ret
fldl
xor
popa
cmp
cmp
jecxz
fadd
or
js
or
lret
outsb
cmp
mov
mov
clc
mov
aad
xor
adc
fnstenv
mov
mov
push
xor
jae
cld
inc
mov
add
lods
test
cmp
or
int
aam
xorl
sbb
mov
subb
mov
sub
jmp
nop
test
inc
into
ret
or
into
movsb
jge
cmpsl
mov
inc
bnd
scas
clc
icebp
ret
cwtl
xchg
out
mov
jo
inc
mov
mov
ja
loope
lds
or
or
pop
outsb
inc
popa
jecxz
xrelease
inc
es
lock
fisttpl
mov
mov
in
in
adc
lods
cmp
or
adc
inc
cmpsb
insl
scas
cwtl
popf
or
jmp
je
mov
lahf
in
pop
cmp
fnstcw
pushf
inc
add
push
pop
jne
jb
cmp
cmp
xchg
insl
nop
xchg
inc
add
repnz
sbb
inc
jbe
push
test
cwtl
shll
add
jns
in
mov
sbb
inc
mov
jl
mov
jle
into
or
std
int3
push
shll
loop
sbb
push
push
popf
xlat
loopne
push
cltd
outsb
jl
push
ret
mov
sbb
out
std
vphaddwd
repnz
add
cli
cli
in
test
dec
and
xor
es
stos
lods
pop
addl
popa
and
loopne
pushf
int
call
cmp
in
lds
mov
fwait
and
dec
push
xchg
xor
push
or
in
in
inc
ss
cmpb
xor
out
iret
mov
push
cld
call
test
sbb
xor
xchg
out
pop
mov
fsts
fcmovb
dec
fs
xor
popa
ljmp
out
add
jne
push
pushf
or
rcrb
das
fmull
cmp
and
xlat
mov
sbb
in
hlt
leave
arpl
out
jbe
add
fiadds
loop
imul
rcll
call
or
out
sbb
or
dec
stos
mov
push
sub
dec
ja
icebp
ja
and
jnp
mov
push
push
into
cltd
and
pop
adc
in
dec
and
inc
inc
ret
imul
lds
add
stc
and
jge
push
insl
mov
dec
orb
mov
push
imul
arpl
adc
pop
in
lahf
insb
cmp
fisubrl
ljmp
mov
outsb
or
stos
mov
gs
cmp
ljmp
push
push
jne
sar
sub
dec
mov
shlb
lcall
sbb
das
mov
icebp
push
lret
or
stc
adc
iret
mov
xor
arpl
int
adc
xor
repz
mov
subl
popf
je
adc
pop
or
shll
popf
inc
lea
inc
orl
sub
add
imul
push
or
in
stos
or
or
cmpsl
mov
add
cli
repnz
xchg
ljmp
repz
arpl
jnp
ret
ljmp
and
bndldx
cmp
in
dec
ja
mov
insl
jge
leave
add
cmc
pop
scas
xor
mov
cmpsb
rolb
push
addb
scas
and
insl
sub
data16
mov
gs
or
js
leave
push
or
push
dec
aam
stos
cmp
mov
sub
inc
mov
mov
cmpsl
xchg
lret
bnd
rclb
jb
ror
lds
cli
cmp
adc
and
dec
push
xor
mov
xchg
mov
push
fisttpl
mov
adc
ret
lret
sub
fwait
xchg
sub
sub
aaa
push
pop
pop
lret
outsl
sub
sub
mov
fsubrl
or
mov
popa
stos
iret
cmp
lods
sbbb
ljmp
outsl
repz
sub
xchg
adc
or
xlat
or
xor
mov
push
mov
push
pop
xchg
push
lahf
data16
or
jne
inc
dec
jp
stos
xor
addr16
fsubr
dec
jecxz
fdivs
dec
outsl
adcb
mov
push
outsb
mov
xchg
sbb
shlb
cmp
or
lds
stos
aad
mov
xchg
sbb
mov
sub
icebp
imul
mov
movsb
and
pop
jmp
je
sub
enter
stc
cmp
sub
sti
xchg
test
jae
dec
pushf
fld
push
jne
cmp
aad
push
fists
subb
push
and
sub
sbb
sti
add
push
jnp
jne
or
pushf
pushf
lret
fists
and
hlt
mov
enter
pop
mov
or
popa
jne
xor
lock
lods
jne
adc
sarb
pop
stc
pcmpgtd
test
mov
or
pop
daa
sbb
inc
pop
fldcw
mov
dec
xchg
orl
jl
sub
and
ret
jnp
loope
es
clc
mov
push
leave
js
adc
push
sbbl
xchg
xchg
adc
mov
mov
test
lock
stos
into
hlt
or
test
or
dec
loopne
scas
dec
sbb
add
mov
inc
aaa
lahf
xor
movsl
dec
mov
fistps
sbb
and
pusha
cmp
sub
rcr
sarb
add
les
repz
mov
daa
test
jne
into
pop
test
test
mov
cwtl
jl
and
pushf
in
out
push
inc
ror
sbb
mov
fisttps
pop
sub
int3
sbb
leave
cmp
stos
xor
pop
cmp
loope
shlb
adc
adc
mov
movsb
jecxz
pop
add
xchg
popw
lock
jl
xor
js
cli
test
or
jnp
das
ja
les
xchg
repnz
ljmp
jae
cmpsl
pop
jge
jp
aaa
lds
lret
xchg
add
pop
inc
add
loop
push
push
or
sbb
cmp
and
push
insb
jae
orb
xor
cmp
es
insb
cli
push
push
mov
sbb
outsl
and
or
out
ds
rol
pop
imul
mov
fcomps
repz
daa
sbb
and
orl
push
mov
dec
loopne
push
jge
mov
loope
jmp
mov
xor
movsb
enter
xchg
mov
and
xor
int3
sbb
adc
xchg
mov
xchg
add
mov
bound
sub
mov
shll
sbb
imulb
xor
push
or
pop
rcrb
stos
adc
cmp
test
pop
jecxz
fisttps
jnp
iret
clc
repnz
in
dec
addr16
push
out
jge
popa
repnz
push
enter
stc
js
dec
pop
mov
push
or
or
cmp
jl
and
push
add
sub
push
test
aas
push
aaa
inc
cmp
pop
xchg
push
repz
or
inc
sub
stc
aaa
leave
pop
test
ss
roll
mov
add
das
sbb
cmp
xchg
and
mov
mov
add
ret
add
aaa
daa
and
mov
adc
adc
int3
test
insb
mov
jecxz
lea
inc
dec
mov
pop
jnp
iret
test
or
push
push
mov
je
into
jae
fisubl
add
mov
and
cmp
outsb
adc
fcoml
push
sub
cmp
fidivrl
or
in
sbb
ret
sbb
inc
adc
push
call
aad
stc
movsb
jle
nop
call
xor
mov
mov
out
push
mov
cs
in
cmp
xor
in
inc
stc
xchg
nop
fcom
divl
mov
test
lods
in
cmp
lret
adc
rcr
add
xor
xchg
popf
xchg
shr
push
inc
cmp
mov
insl
bound
jmp
and
dec
in
out
jle
xchg
adc
add
push
mov
and
stc
push
gs
or
mov
pop
push
or
pop
pop
arpl
push
std
imul
jg
aam
sbbl
testb
sub
fwait
dec
iret
xchg
fists
xorl
data16
lods
test
sahf
mov
xor
cvtdq2ps
cli
mov
arpl
imul
icebp
cmp
pop
cltd
into
adc
sahf
outsb
sti
call
iret
in
aam
fs
mov
ljmp
lock
sub
adc
std
push
dec
mov
xchg
cs
clc
and
mov
pop
dec
das
cltd
repnz
fnstsw
popf
cld
mov
test
test
push
ss
dec
popf
push
sbbl
adc
and
inc
and
mov
daa
stos
xchg
stos
bound
loopne
push
popa
repnz
jecxz
sti
int3
insl
in
rolb
xchg
adc
inc
push
sbb
shrb
mov
mov
addr16
stos
push
fdivr
adc
fs
bound
sub
addr16
cmp
cld
xchg
adc
sub
sub
aad
mov
fidivrs
cmp
repz
adc
cld
inc
dec
and
adc
loop
pusha
ljmp
adc
lock
jecxz
push
fs
notb
or
jg
aas
sbb
aaa
cmp
adc
fstl
push
pop
push
xor
and
ret
xor
fwait
mov
gs
mov
mov
cmpsl
sub
mov
notl
shrl
sub
mov
add
cmp
lds
push
push
imul
jmp
cmp
mov
lret
movsw
fstpl
nop
dec
insl
js
pop
add
lods
pop
rcrb
iret
mov
inc
scas
dec
jg
ljmp
push
jmp
jno
aam
adc
xor
mov
or
movsl
les
clc
push
adc
dec
xchg
dec
fcmovne
sub
jle
lret
cli
xor
dec
cmpsb
repz
cmc
gs
xchg
jbe
add
xchg
and
mov
mov
daa
popf
stc
push
cmc
mov
movsb
cmp
daa
mov
or
out
ja
mov
shlb
inc
xor
ror
int3
xor
adc
dec
cltd
xchg
dec
jmp
ds
cli
pop
push
dec
add
pop
lcall
bnd
ss
and
ds
sub
cmp
xor
hlt
cmp
shl
aaa
divl
adcl
clc
movsb
scas
bound
psllw
loopne
popa
cwtl
in
pop
mov
mov
hlt
imul
sbb
fists
arpl
dec
dec
inc
insb
fs
daa
call
into
xor
pop
jae
or
pop
faddl
addl
ret
lods
ss
test
aas
mov
or
or
dec
inc
or
push
jge
addr16
or
mov
mov
orl
sarb
das
movsl
adc
call
mov
xor
xchg
and
jo
decb
adc
mov
xchg
inc
les
and
push
jb
jg
mov
nop
or
mov
clc
push
ja
push
add
jg
adc
test
scas
add
sbb
and
xchg
or
xchg
imul
sarl
sbb
loope
jl
sbb
pop
pop
xchg
mov
pop
lock
sbb
iret
mov
icebp
into
lock
sub
ds
sub
jle
and
fwait
mov
lcall
and
xchg
push
sbb
daa
cmp
mov
mov
lahf
je
pop
xchg
mov
push
add
or
pop
adc
out
loope
int3
rcll
fadd
rclb
decb
push
pop
pop
sti
dec
push
ljmp
sbb
imul
mov
je
fwait
stc
cwtl
xor
push
aad
sub
push
xor
xor
shr
or
fiaddl
xchg
dec
mov
leave
mov
repz
push
add
jb
lea
xchg
out
push
es
ds
sar
mov
imul
mov
stc
gs
sbb
xchg
push
add
scas
ja
adc
clc
push
loop
pop
pop
into
rcrl
xlat
scas
shrl
xchg
shrl
or
in
inc
adc
fs
sbb
mov
out
mov
sub
loopne
sbb
divb
mov
mov
sub
cmp
mov
nop
fldcw
mov
xor
sbb
xorb
aad
and
loope
sbb
mov
jae
out
repz
sub
std
cmp
dec
jmp
mull
arpl
dec
daa
or
sarb
gs
dec
orl
cmp
vorps
pop
inc
cmp
jae
call
xchg
mov
jge
loopne
pop
sbb
ja
out
adc
sbb
int3
lods
push
mov
push
out
stos
pop
lock
fcoml
ret
add
mov
mov
outsl
shr
jge
movsb
je
test
sbb
mov
cmpsl
mov
add
cwtl
jge
call
les
adc
sbb
lods
into
mov
pushf
aam
sahf
int3
arpl
outsl
push
loopne
lea
mov
dec
inc
inc
orb
cld
repnz
dec
cltd
test
in
adc
rcrl
inc
xchg
xchg
mov
out
into
xchg
mov
arpl
and
mov
sbb
sbb
xchg
dec
cmp
add
jge
pop
cld
in
mov
cmp
inc
fnstcw
adc
popf
sti
xor
call
ror
cmp
or
ja
push
call
xchg
and
das
push
iret
sub
mov
mov
or
mov
push
sub
xor
outsb
mov
add
jae
xchg
stc
jp
push
stos
ss
xchg
add
mov
inc
ljmp
cmpsb
loop
leave
jns
mov
add
fldcw
stc
sbb
mov
addr16
stos
mov
outsb
scas
pop
xchg
jl
mov
jae
mov
call
jmp
push
mov
or
push
xchg
jle
xor
add
aam
pop
dec
pop
movsb
adc
xor
jp
or
sbb
cmp
outsl
jmp
lret
sbb
out
lret
add
negb
cmp
inc
jns
pushf
xlat
adcb
xchg
jl
pushf
pop
mov
loopne
xor
rcrl
cmpsl
enter
jle,pn
movsl
loopne
jp
xchg
in
pushf
inc
outsl
mov
or
push
iret
rcr
imul
stc
dec
negl
movsl
clc
jecxz
in
push
and
mov
cmpsb
mov
fcoms
fists
shll
nop
adc
mov
adc
cmp
sbb
sub
and
push
cmpl
adc
fbstp
xchg
jp
mov
or
dec
shlb
fnstenv
ffreep
mov
fmulp
roll
mov
into
xor
pop
loop
mov
dec
lods
cmpsl
and
push
ss
ja
enter
mov
mov
push
popa
mov
fwait
xor
out
enter
mov
inc
iret
add
jo
scas
in
imul
pop
inc
jbe
jo
sbb
je
sahf
dec
mov
inc
jecxz
dec
lock
pusha
jnp
out
xchg
mov
push
jmp
ja
cmc
in
pop
push
nop
scas
dec
cmp
shll
push
sub
pop
fwait
adc
pop
mov
jecxz
sub
syscall
cmp
js
push
add
adc
aam
arpl
sbb
jbe
cwtl
out
mov
push
aad
in
sub
in
scas
in
or
aad
pop
sub
fucomi
mov
adc
lods
pop
fildl
and
jecxz
scas
dec
lods
test
in
mov
xchg
jns
inc
jp
cmp
ret
in
into
cmp
insb
fsubrl
sbbl
or
push
insl
pop
lret
pop
fldl
xchg
imul
sti
add
inc
ds
int3
add
negb
mov
xchg
gs
divb
pop
mov
or
jno
push
and
sbb
jp
cwtl
xchg
ret
imul
mov
insb
inc
jg
sbb
cmc
test
lods
int3
and
xor
sbb
xchg
xchg
roll
mov
sbb
jl
fmulp
jo
jne
pop
iret
mov
mov
mov
sahf
ds
fsts
xchg
cmpb
int3
popa
jno
and
inc
mov
cmpsl
es
inc
iret
mov
mov
push
lods
mov
cmpsb
or
mov
sub
jo
jne
add
cs
xor
pop
mov
ret
cmpsb
fmull
push
pop
mov
cmp
mov
lret
jmp
outsb
jb
ss
aad
loope
lahf
shrl
fwait
outsl
out
lods
cmp
jae
imul
inc
out
test
push
push
jns
testb
xchg
es
lods
divl
ret
in
cwtl
inc
xor
cld
add
int3
test
je
rcll
sub
xlat
clc
or
lahf
xchg
in
dec
push
mov
and
mov
xchg
sbbb
rolb
loope
xchg
test
repz
test
mov
sub
pop
adc
inc
mov
inc
dec
sub
cmp
adc
push
add
jae
or
mov
rolw
dec
xlat
outsl
mov
and
mov
mov
push
xor
roll
hlt
cmp
sahf
sub
cmpsb
add
fimuls
lcall
push
ret
loop
push
aas
fldcw
jp
out
cmp
add
pop
call
pop
mov
and
lods
pop
cmp
inc
add
pop
mov
in
outsl
stc
pop
jge
imul
in
inc
les
jo
pop
jl
pop
roll
filds
dec
lods
mov
fmuls
lods
adc
mov
negb
in
sbb
dec
inc
hlt
ret
int
pop
sub
cmp
jno
cmpsb
in
daa
ss
loope
lret
scas
mov
cmpsl
movsb
jg
mov
cs
outsl
and
outsb
push
cld
jbe
hlt
jb
sbb
movsb
lock
sub
inc
and
out
jae
das
push
ja
enter
jb
outsb
test
popf
pusha
jl
jne
mov
or
pop
lods
daa
cs
jb
shll
xor
in
xchg
mov
add
jnp
xchg
jmp
jne
add
sub
gs
out
sbb
xor
mov
and
xor
test
sahf
arpl
and
loopne
lret
mov
jb
test
push
dec
adc
bound
pop
insb
lea
jae
and
mov
dec
lods
xchg
sbb
jle
adc
pushw
fbstp
pop
jae
insl
in
push
jecxz
mov
mov
enter
sub
xor
lods
jl
and
call
outsl
fldcw
imul
adc
lods
mov
in
mov
dec
je
xor
loopne
stos
xchg
ret
mov
sub
fistpll
cld
pop
cmc
popf
mov
out
lds
xor
push
sbb
outsb
sub
fildl
lods
hlt
mov
push
cmpsl
aas
inc
add
scas
rcrb
sbb
lret
inc
sub
mov
mov
sbbb
dec
mov
icebp
aad
clc
push
aam
aaa
or
or
loope
je
hlt
mov
test
lds
ss
sub
ret
iret
mov
add
repz
decl
cmpsl
mov
inc
mov
or
in
scas
xchg
in
mov
xor
push
push
xchg
pop
dec
je
mov
cmp
inc
cltd
inc
fidivs
and
jnp
test
jmp
jnp
int3
stos
into
rcll
aaa
cmp
xchg
mov
jb
cltd
push
scas
scas
enter
push
xor
repz
push
jnp
pusha
jne
ds
and
psubq
pop
sub
and
sbb
mov
sbb
mov
fldl
xchg
ljmp
mov
pop
loop
mov
push
xchg
int3
in
push
ljmp
mov
outsl
and
ds
mov
adcb
pushf
fxch
mov
pop
xchg
inc
out
hlt
aam
pop
es
subl
std
jo
and
push
pop
daa
outsl
inc
iret
sbb
ds
fs
mov
jno
outsb
and
mov
jmp
cld
or
test
filds
dec
jae
push
mov
mov
lods
insl
jl
jo
lahf
mov
jnp
stc
les
jnp
rol
fimull
add
popa
adc
xlat
shll
jne
inc
push
xor
xor
cmpsl
mov
mov
subb
xchg
push
adc
mov
cmpsl
push
xchg
mov
dec
std
pop
idivb
rcrb
fisubrs
dec
adc
mov
and
push
push
cmpsb
push
sub
jecxz
iret
cmp
ret
ret
or
mov
xchg
imul
test
xchg
xor
repnz
pop
pop
test
repz
shr
xchg
addr16
fildll
sbb
movb
fwait
pop
sti
mov
jnp
pop
repnz
adc
sbb
loopne
mov
lahf
or
ja
insb
es
jb
arpl
xchg
lahf
push
je
inc
sub
push
hlt
movsl
shlb
mov
cmp
lods
leave
push
lods
adc
sbb
dec
int
adc
lret
xorb
je
addr16
cmpsl
rorb
pop
cli
aad
xor
bound
pop
popl
enter
sub
arpl
loop
jecxz
dec
cmp
cli
fcoml
xchg
arpl
ret
lret
test
and
mov
jno
push
out
lcall
or
mov
cmpsl
mov
xchg
xor
inc
out
mov
inc
dec
inc
pusha
js
jecxz
mov
shlb
add
cli
into
lea
dec
or
push
in
pop
cmp
int
mov
loopne
fldenv
mov
jg
ljmp
mov
cmp
dec
sub
add
hlt
jae
inc
mov
add
cwtl
mov
xor
mov
dec
lods
movb
sbb
adc
inc
repz
sti
mov
outsl
pusha
cmp
adcb
mov
je
das
rorb
mov
jb
ret
inc
lds
xlat
mov
fisttpl
sub
push
shlb
fidivl
shrb
pop
add
pop
enter
hlt
cmp
mov
mov
xchg
add
lea
and
rol
inc
notb
sarl
jno
mov
nop
fistl
or
or
sub
jns
fidivrs
xchg
aaa
or
sbb
xor
in
stos
lds
mov
jg
jle
xchg
loope
add
inc
xchg
test
xor
sub
mov
xchg
fldt
xchg
stos
sbb
mov
sub
cmp
mov
pop
cmp
push
lock
jno
call
xor
mov
scas
sbb
scas
lds
xchg
dec
xor
and
mov
or
lret
jecxz
mov
xsha1
cmpsb
mov
add
dec
pop
add
inc
push
stos
cli
pop
pop
mov
jmp
rorb
push
stc
std
xor
mov
xor
in
jg
adc
pushf
sbb
js
mov
iret
sbb
mov
or
lret
repz
add
push
cmp
push
fwait
or
inc
jae
xor
mull
inc
mov
sub
cmp
dec
rorb
pop
int3
mov
jmp
pop
scas
lret
iret
adc
dec
dec
lock
clc
dec
sti
add
dec
popa
scas
lods
sahf
fildll
mov
test
out
mov
push
and
xchg
and
in
movsb
dec
push
xchg
xchg
stos
decl
add
fdivrs
cmp
jl
pop
adc
ja
mov
add
or
int
mov
sbb
popf
push
xor
mov
xor
jb
xchg
xor
sarl
inc
and
and
push
mov
dec
fcmovnb
pop
call
mov
test
dec
add
cld
xchg
into
xlat
shr
cltd
imul
flds
pop
repz
jp
sti
int3
imull
aas
je
sbb
sub
adc
push
pop
sub
mov
loopne
es
in
shll
lahf
pop
arpl
push
shl
push
sbb
test
mov
xorb
pushf
jae
add
test
pop
repnz
cltd
xchg
dec
dec
pop
jg
enter
push
ss
testl
mov
scas
jp
pop
aas
pop
adc
adc
add
or
insb
mov
add
in
jle
aam
lret
fistps
inc
jge
shl
faddl
push
mov
mov
fsubs
sbb
das
and
pusha
cmpsb
jmp
popa
gs
dec
nop
fidivl
mov
lock
imul
shrl
cmp
cwtl
xchg
and
pop
inc
xor
push
lahf
pop
jns
inc
sbb
push
mov
into
data16
xchg
shlb
xlat
inc
fdivr
scas
push
push
or
std
fs
jb
and
stc
fldenv
sbb
dec
loop
adc
sub
xor
adc
mov
mov
lods
mov
jmp
stc
fidivl
insb
dec
push
mov
inc
xor
dec
rdpmc
je
call
jl
gs
or
lock
ds
dec
popf
pop
sti
fldcw
fs
mov
inc
cmpl
push
roll
xchg
aam
add
fwait
mov
out
addr16
fwait
xchg
testb
sbb
sub
or
mov
fsubrl
jecxz
add
fcmovnb
xchg
jge
in
arpl
push
adc
mov
jb
sti
mov
adcb
test
mov
add
pop
push
cwtl
inc
test
add
jge
push
jo
jge
or
jle
sbb
sbb
dec
xor
dec
mov
rcll
cltd
mov
mov
sahf
add
hlt
and
stos
dec
xor
lea
adc
adc
pusha
fisttps
push
outsb
pop
movsl
shlb
call
ret
in
insb
aas
pop
insl
xchg
cmp
dec
inc
xor
in
les
cmp
push
fidivs
into
stos
push
push
fwait
pop
ss
jns
jl
fsubs
sbb
xchg
sub
enter
dec
ss
push
mov
xchg
scas
negl
clc
clc
fisttpll
sbb
aaa
xchg
ret
imul
pushf
add
jmp
mov
inc
repz
int3
inc
xor
loop
mov
jp
gs
ror
and
push
popa
xor
jno
inc
pop
lea
xchg
cmpsb
sbb
sahf
cmp
stos
jae
imul
mov
fists
daa
and
xor
test
inc
in
mov
sub
cs
add
insl
outsb
insl
ret
xchg
enter
insl
add
mov
ret
jnp,pn
sbb
jp
jbe
in
jae
mov
sub
xorb
xchg
dec
lock
test
jmp
test
mov
dec
sbb
dec
jg
decl
and
or
xlat
push
mov
adc
mov
mov
into
mov
lret
test
or
aas
clc
call
adc
rclb
imul
mov
int
loope
xchg
jp
mov
cwtl
xlat
pop
or
inc
sti
adc
cli
ret
jns
int
mov
and
pusha
repnz
mov
in
outsl
mov
dec
out
cmp
or
popf
stc
aas
jo
repnz
sbb
in
sub
loopne
push
pop
sbb
pusha
pop
and
cmpsl
pushf
call
and
fbld
cmp
aam
popa
cmpl
ror
pop
and
test
cmc
sbb
mov
int3
push
dec
xchg
and
into
sub
fildl
ja
push
mov
cltd
jecxz
mov
jae
and
iret
jle
mov
out
pop
mov
xor
lret
iret
xchg
test
daa
cmp
es
and
cmp
rolb
std
add
inc
es
dec
jge
add
pop
pop
loop
mov
and
lret
out
mov
or
aas
mov
add
scas
cmp
adc
inc
ja
aas
mov
push
fmuls
cwtl
std
idivb
pop
mov
and
in
jle
insl
xchg
js
or
push
lahf
inc
mov
xchg
stc
outsl
leave
push
bound
mov
mov
adc
in
cli
lods
xchg
fsubrs
inc
mov
mov
loope
fdivr
out
xchg
jl
movsb
xor
fwait
adc
out
stos
dec
fidivrs
dec
das
mov
dec
rcr
lcall
cwtl
outsb
dec
pop
aam
xchg
icebp
sbb
lea
and
repz
push
mov
popf
dec
int3
push
sub
loop
scas
popa
sarb
xchg
sbb
mov
dec
and
ss
lods
in
cmp
mov
lea
lds
shlb
repz
fstpt
test
lds
inc
inc
movsb
inc
hlt
call
jl
adc
xchg
and
xchg
enter
ljmp
stos
jns
xor
xor
sbbb
mov
add
dec
mov
int
jno
mov
loope
or
pop
loopne
mov
pop
xchg
gs
adc
mov
nop
pop
aam
sbb
inc
cld
sbb
pop
lret
data16
data16
ja
push
and
jns
xchg
std
daa
fdivs
leave
lea
pop
and
dec
stc
jge
in
mov
cwtl
jl
or
outsl
test
ss
inc
test
add
sub
faddp
rcrb
sbb
ss
xlat
in
push
lods
sbb
fistpll
add
and
or
in
shrl
add
mov
lods
popf
cli
into
js
lret
mov
sub
lcall
ret
or
sarl
out
les
insl
inc
inc
jg
jecxz
mov
dec
imul
in
sub
cmc
pop
push
pop
jmp
mov
sbb
out
adc
je
mov
fldenv
popf
inc
push
imul
sti
sbb
scas
sub
test
mov
add
inc
inc
jge
das
jg
mov
test
sub
pop
sub
dec
xchg
push
loop
jo
and
mov
hlt
adc
movb
into
jl
fldenv
dec
mov
fldl
inc
dec
or
xor
jle
cmc
sti
cmc
lret
cwtl
xchg
jge
sub
mov
cwtl
jmp
jge
or
jg
mov
jecxz
add
scas
mov
pop
fwait
lds
sub
ja
mov
adc
mov
inc
jp
cmp
js
out
in
ljmp
sahf
lahf
jns
sbb
pop
jmp
das
pushf
sub
mov
mov
mov
jno
popf
jnp
inc
inc
fsubrl
sub
push
out
or
lds
jnp,pn
and
lea
aas
aaa
in
clc
lods
stos
and
scas
leave
ja
mov
inc
fiaddl
cwtl
or
xlat
insl
fstpl
jno
jg
jb
inc
sahf
or
xchg
sbb
sbb
add
jle
out
addb
sahf
addb
repz
out
mov
sub
xor
inc
mov
jmp
fbstp
setge
bound
xor
in
lods
jae
scas
lret
mov
mov
int
roll
lods
popf
and
subb
and
sarl
movsb
cmp
mov
push
push
jge
lock
xchg
mov
push
inc
pop
stos
push
mov
test
xchg
push
jns
jle
mov
adc
sahf
xchg
adcb
xchg
dec
pop
pop
iret
fnstsw
xrelease
mov
pop
push
pop
xor
fisttps
ljmp
int3
mov
bound
sub
dec
jno,pt
adc
imul
sbb
cmp
adc
jbe
mov
adc
mov
cmc
dec
arpl
lret
fsubp
push
dec
xchg
xchg
mov
push
push
lea
test
xchg
push
stos
or
mov
mov
clc
scas
in
sbb
lcall
xchg
lcall
pop
dec
enter
imul
sub
mov
ja
jo
lds
inc
mov
and
adc
lea
push
roll
sbb
add
mov
mov
add
andl
jnp
adc
jge
lock
fstp
pushf
or
pusha
inc
mov
pop
xor
shlb
cld
mov
stos
fwait
jg
push
shrb
sub
pop
cmpsl
push
test
aas
add
inc
mov
pop
aad
mov
mov
fildl
test
int3
and
int
jnp
rorb
stos
lock
and
xor
stos
lea
fs
mov
jo
insb
pop
arpl
inc
stos
out
pop
clc
aas
roll
out
stos
push
repnz
scas
jle
xor
fwait
push
jge
mov
pushf
adc
bound
popf
xchg
enter
sbb
and
cmp
mov
jb
imul
pop
inc
movsl
gs
je
jg
cmp
inc
push
dec
mov
pop
jae
push
mov
inc
int3
aaa
xchg
sbb
jbe
xor
sbb
sti
mov
inc
mov
shlb
or
mov
dec
dec
jmp
cltd
shrb
mov
xor
or
add
int3
mov
inc
jns
push
pop
ret
icebp
add
jo
loope
or
pop
mov
stos
cli
out
sub
cltd
rcl
mov
in
ljmp
lea
xchg
sub
inc
jmp
pop
mov
dec
push
data16
insl
insb
addr16
test
bswap
dec
push
cwtl
pop
and
push
add
cmp
stc
mov
and
outsl
jae
mov
jecxz
fists
arpl
and
js
adc
insb
push
adc
fistpll
stos
dec
fiadds
repz
mov
xchg
sbbb
in
push
aad
out
jbe
bound
call
or
imul
mov
sub
or
popf
test
fwait
sbb
xor
ss
xchg
cld
xchg
shr
sahf
cmp
jb
cli
push
addb
push
daa
dec
inc
popa
call
add
inc
pop
xor
push
xchg
inc
adc
lds
xor
xlat
ja
movsl
fwait
pop
scas
cmp
or
punpcklwd
stos
enter
sbbb
push
or
testl
std
xor
mov
cs
and
mov
sub
cmp
les
ds
inc
leave
imul
outsl
test
shl
repnz
pop
ror
filds
rclb
cwtl
dec
pop
push
mov
and
sahf
jecxz
xlat
mov
stos
negl
and
in
movb
out
xchg
das
push
sarb
nop
pop
arpl
or
test
cltd
adc
or
les
mov
inc
std
cmp
xor
xchg
add
push
and
pop
push
lret
mov
icebp
and
jecxz
or
mov
sub
push
inc
stos
rolb
cs
dec
movsl
xchg
int3
dec
je
or
add
xchg
daa
pop
inc
enter
and
mov
or
mov
pop
adc
sub
mov
mov
mov
dec
push
jae
add
pop
test
daa
jb
cld
cmp
fsubrs
lahf
push
test
sbb
lods
cwtl
lods
int
mov
inc
int3
inc
cld
sbb
pop
dec
push
and
add
fbstp
cmpsb
fiaddl
repz
sub
and
cltd
mov
adc
mov
loope
mov
mov
js
addr16
mov
push
cmpb
pop
sub
mov
push
nop
xchg
pop
aad
rcrl
imul
mov
imul
pop
cmp
fdivrp
ja
mov
movsl
pop
in
shll
enter
push
adc
pushl
add
cmp
sbb
push
jecxz
xchg
sti
aad
sbb
mov
out
cmp
jnp
jne
cmp
andl
cmp
rorl
aaa
lret
scas
and
iret
mov
adcb
sub
icebp
mov
inc
push
dec
inc
or
movsl
insb
mov
inc
adc
call
ficomps
jecxz
test
mov
and
rorb
cmp
dec
rcr
xchg
mov
nop
ja
ljmpw
loop
cs
popf
fiadds
inc
arpl
fdivr
jnp
f2xm1
sub
pop
xor
inc
in
cmpsl
insl
cmp
add
mov
jecxz
fldl
leave
xchg
or
test
ljmp
inc
mov
xor
mov
aam
dec
lock
adc
aam
icebp
or
xor
add
cli
ret
jp
popf
xchg
mov
cwtl
pusha
adc
adc
addl
lds
std
in
jecxz
aaa
or
repnz
fistpll
mov
push
repnz
mov
into
repnz
sahf
xorb
aaa
aad
pop
cmpsl
pop
andb
jg
sti
cmpsb
mov
push
jo
in
mov
ret
pop
pop
fisttpl
push
inc
jnp
dec
fucomp
or
aad
fistps
xchg
sahf
push
push
jl
dec
cs
push
sbb
ds
add
jmp
jno
incb
movsl
pop
and
leave
mov
mov
xor
xchg
cs
ja
jne
mov
shrb
ljmp
push
mov
jb
gs
cmpsb
stc
lods
xor
in
cmp
cmp
and
les
mov
dec
dec
push
mov
movsl
add
xor
cmpl
add
mov
fisubl
daa
cmp
and
cmpsb
repnz
inc
sub
mov
xchg
mov
mov
push
sub
jno
popa
imul
xor
call
pop
push
mov
cmc
mov
push
xor
jbe
sbb
mov
pop
stc
jge
aas
xlat
mov
rcrb
mov
push
mov
or
xchg
cwtl
or
repnz
pushf
stos
inc
ss
xor
and
hlt
push
cmp
mov
sub
mov
pop
lret
jg
add
jp
ret
in
jecxz
cmc
xor
lods
xchg
push
nop
dec
jo
xor
cmp
and
loop
bound
inc
sbb
int
adc
and
imul
jb
pop
stos
aad
sbb
call
pop
mov
xchg
sbb
inc
jmp
fcoms
stc
xchg
push
lahf
jmp
sbb
jb
sti
adc
sti
dec
cmp
lods
fwait
xchg
mov
ud0
sbb
inc
xchg
mov
idivl
mov
fisubs
and
xor
adcb
sub
out
xor
or
dec
cwtl
fsubs
add
cwtl
lds
stc
and
jmp
mov
ds
je
and
xchg
jo
sub
jle
xchg
jnp
sbb
sbb
xor
mov
push
adc
mov
ljmp
stos
mov
push
and
cmpsl
and
test
std
jl
or
stos
mov
sahf
adc
out
daa
dec
push
cmp
jmp
ret
add
and
dec
fcompl
push
test
inc
pop
daa
push
jle
mov
xchg
cmp
inc
int
push
loopne
test
push
fucompp
imull
add
pop
lahf
lret
jbe
sub
dec
fcmove
in
pop
or
call
addb
push
xchg
cwtl
xchg
pop
outsl
cli
jbe
movsb
test
and
cmp
cs
movsl
sub
lret
mov
or
mov
daa
cmpsl
dec
lahf
mov
rcll
xor
das
mov
pushf
jbe
or
popf
aaa
rorl
stos
xchg
lea
push
pop
lret
filds
pop
in
out
ljmp
dec
sub
pop
cmp
add
popf
cld
pop
popaw
and
or
push
dec
and
sub
rcrl
imul
mov
psubsw
jns
roll
out
xchg
jle
adc
fimull
adc
in
nop
insb
dec
ja
cmp
pop
push
movsb
clc
jae
sbb
rcrb
add
out
fsubs
mov
mov
stos
add
mov
nop
adc
call
mov
pop
adc
pusha
push
pop
subl
mov
jge
mov
out
push
jecxz
jp
in
lea
jge
dec
cwtl
and
iret
dec
inc
cmp
jmp
mov
test
pop
pop
or
or
or
ret
ror
or
cmpsb
add
cmp
mov
adc
push
xchg
mov
iret
aam
adc
je
mov
mov
or
insl
test
jge
jbe
push
gs
iret
scas
xlat
daa
cs
xchg
mov
pop
lahf
xchg
mov
rorb
xchg
adc
cmp
fs
pop
cmp
stos
dec
push
mov
adc
jge
daa
scas
xchg
test
ret
mov
and
fs
movsb
push
repz
xchg
in
popf
sub
cltd
pop
or
sbb
mov
xlat
add
push
punpckhdq
int3
imul
sahf
cmp
add
mov
fildl
scas
test
push
aad
add
mov
inc
dec
js
xchg
mov
mov
icebp
cmpl
ficompl
jl
push
rclb
push
andl
insb
or
repz
sbb
xor
xchg
push
sub
mov
mov
fstps
and
mov
lret
je
insb
js
into
ja
and
rorl
imul
add
sbb
adc
pusha
xchg
xchg
std
nop
pop
out
test
shrb
pop
out
test
mov
jae
test
leave
jns
mov
push
xor
jecxz
insb
and
xchg
es
xor
stos
xor
mov
out
cmp
xchg
ja
pop
iret
jmp
xor
call
sub
imul
pop
cmp
bswap
scas
ret
out
insb
cmc
imul
sub
mov
iret
sub
jge
xchg
sub
sub
aam
pop
cs
dec
sbb
addb
sbb
loope
fists
hlt
mov
and
and
and
mov
inc
repz
mov
call
mov
mov
out
sub
scas
lock
ljmp
scas
inc
ret
cmc
cmp
push
lret
xchg
adc
add
jecxz
dec
inc
out
sti
or
mov
lods
push
imul
arpl
xor
js
push
inc
int3
cmp
mov
rcr
je
clc
lahf
lea
adc
pop
inc
int3
jp
mulps
jmp
stos
xor
fsubrs
in
fistps
mov
test
xchg
dec
inc
xchg
lods
or
cs
into
frstor
xor
cmpsb
xchg
shl
pop
mov
and
adc
cmp
or
shlb
xlat
xor
inc
aam
lret
mov
stc
cmp
push
xchg
in
mov
jge
adc
push
mov
push
mov
fcmovb
sahf
xor
scas
je
lcall
insl
cld
das
or
jp
cli
and
ret
mov
adc
bound
mov
xchg
andl
loopne
cli
ja
pop
push
ret
pop
mov
push
jns
mov
push
inc
xchg
loop
xchg
sti
hlt
rorb
mov
push
dec
push
mov
cs
lret
ss
test
incb
or
pop
stos
push
push
mov
sarl
mov
cwtl
push
mov
jns,pn
dec
cmp
in
mov
xchg
es
xchg
je
arpl
jp
data16
mov
or
inc
fs
sbb
pop
push
test
ljmp
sbb
subl
xlat
rcrl
aad
loopne
mov
jae
mov
xor
repz
ljmp
rol
sbb
lahf
xchg
cmp
jb
stos
imul
addl
mov
and
cmp
movsl
repnz
arpl
xor
lret
movsb
outsb
push
pop
cli
pushf
imul
push
jae
rcr
into
mov
sub
rcl
aam
lods
dec
std
into
inc
out
mov
mov
dec
adc
pop
mov
jnp
add
mov
xchg
sbb
insb
mov
push
rcrb
adc
icebp
pusha
pop
fimuls
xchg
sub
mov
push
jge
out
imul
int3
jo
inc
mov
pop
loop
adc
mov
pop
mov
inc
leave
sahf
mov
mov
in
enter
iret
jp
pop
inc
mov
mov
sbb
sbb
cmp
inc
add
sub
and
arpl
dec
mov
jns
iret
in
mov
jnp
cmp
cmp
xchg
push
or
ret
push
rcll
jo
incl
arpl
ret
aas
cmp
adc
dec
sbb
cmp
xor
lret
and
cli
aam
pop
orl
sub
jb
popf
push
into
pusha
xchg
out
xor
mov
mov
test
lahf
arpl
jge,pt
pop
sbb
in
out
rcrl
test
jnp
dec
pop
cmp
dec
imul
leave
lock
imul
jmp
cmp
jb
mov
sbb
test
sbb
daa
dec
js
jecxz
jp
out
push
daa
inc
push
imul
imul
sbb
sbb
push
rcr
jl
add
cmp
add
or
push
enter
jae
insl
inc
jno
push
enter
cmp
xchg
sub
loopne
and
mov
lahf
sti
int3
and
test
daa
mov
filds
arpl
popw
jp
mov
lods
aas
adc
jbe
and
aaa
push
or
adc
call
cmpsb
dec
sub
idiv
sbb
dec
int
lods
mov
imul
call
and
inc
pop
mov
je
mov
jne
inc
ss
mov
ss
test
xchg
xchg
pop
cmp
test
nop
push
dec
add
popl
pop
sub
ficoml
pop
jne
test
xchg
clc
jbe
movsb
pusha
scas
test
add
or
test
aas
adcl
pop
add
pop
je
or
inc
adc
bound
adc
push
aaa
fists
adc
bsf
mov
pop
pop
sahf
ja
repnz
fistpl
ja
mov
adc
std
push
pop
sti
stc
ja
mov
jl
aaa
add
mov
sar
xchg
je
xchg
rorl
xor
jnp
int
and
cmp
jnp
dec
aaa
xor
rcrl
inc
mov
ja
mov
jae
shll
dec
adc
lret
gs
pop
cmpsb
popf
mov
popf
adc
loopne
mov
mov
aad
pop
inc
cmp
sbb
shr
stc
adc
push
ds
or
ret
fsubr
inc
iret
bound
adc
xor
fnstsw
xor
push
insb
arpl
cmp
sub
mov
shl
es
dec
dec
xchg
imul
es
jmp
dec
adc
imul
hlt
mov
add
jge
dec
sbb
icebp
pop
clc
sbb
cmpsl
loop
mov
pop
arpl
stos
sub
ret
jb
leave
in
enter
sahf
push
repnz
or
insl
lods
mov
jns
xor
push
adc
nop
das
out
cmp
push
xchg
aas
sub
xchg
mov
and
jnp
mov
fucom
mov
out
push
add
jge
sahf
outsb
cmp
sub
dec
push
mov
mov
cmpsb
mov
mov
in
mov
loop
out
out
stc
cs
repnz
pop
sub
lcall
mov
jne
xchg
stc
stos
jbe
push
lock
hlt
xchg
add
jns
in
and
sub
sbbb
test
pop
mov
and
fsubs
loopne
xchg
lock
aam
out
movsb
movb
cmp
ret
jo
lcall
sbb
inc
mov
ret
push
hlt
pop
sahf
push
stos
fs
arpl
and
dec
leave
hlt
cmc
popf
push
sbb
ss
inc
dec
in
adc
cltd
xor
jmp
stos
lret
push
adc
into
dec
arpl
cmp
cmc
jb
decl
or
aaa
sub
stos
push
lahf
loopne
rcll
pop
pop
xorb
loope
sub
add
jmp
jmp
pop
out
out
les
icebp
add
ret
push
xchg
cli
jle
addr16
fidivrs
and
mov
rcrb
push
adc
mov
pusha
cmpsb
outsb
mov
cli
mov
mov
mov
into
in
dec
and
cmp
sti
lock
sti
and
jmp
xchg
xor
push
mov
push
es
std
xlat
push
roll
pushf
push
xchg
jb
or
test
xchg
push
gs
dec
lods
xchg
loope
outsl
xlat
sbb
call
xchg
mov
adc
int
movsb
xor
int3
fs
dec
push
sbb
movsb
xchg
fmuls
pop
fisubrs
fadds
rclb
mov
and
sub
inc
pop
lcall
pop
addr16
mov
out
jo
add
out
inc
sbb
mov
icebp
cwtl
adc
shrl
mov
cld
and
hlt
pop
xor
das
andl
fwait
fwait
je
std
hlt
aad
orb
lahf
aas
je
nop
test
pop
cmp
mov
xchg
push
cmp
and
xor
rcrl
gs
clc
pusha
dec
jnp
push
dec
push
lcall
or
addl
xor
mov
cmpsl
filds
push
test
sub
xor
mov
jnp
mov
mov
sub
sub
and
xor
scas
xor
je
push
stos
ret
iret
pop
pop
call
aam
ja
sbb
ja
cwtl
repz
sub
fcmovne
lods
cmpsb
inc
sti
mov
pop
and
cmpsl
dec
sub
or
fs
and
rolb
dec
mov
inc
mov
aam
ds
pushf
rcrl
or
mov
fcompl
cmp
aam
mov
pop
testl
push
nop
mov
mov
popa
fisubrl
inc
fadd
push
cwtl
rcl
andl
clc
leave
cmc
mov
xor
dec
and
cli
xchg
mov
hlt
inc
jmp
sbb
icebp
enter
pop
cmp
dec
jno
xchg
int3
repnz
cmp
and
lods
xchg
rcr
imul
mov
scas
ret
sbb
mov
cmp
imul
lea
xor
gs
std
pop
shrb
inc
lret
xchg
lods
jg
adc
lds
sbb
pushf
lods
out
rorb
sub
fnstenv
lea
out
mov
add
cmpsl
bound
jb
cmp
stc
hlt
mov
icebp
mov
sbb
fcoml
sbb
call
sub
dec
xchg
xor
lods
add
jecxz
divl
je
fs
xchg
xchg
adc
adc
jo
dec
inc
fyl2xp1
dec
clc
xchg
cmp
aam
ss
add
xchg
cmp
fdivrl
mov
sbb
cmp
fisubl
dec
xor
decl
js
jnp
std
mov
jg
inc
jnp
out
adc
jno
repz
xchg
fsubrl
jb
movsl
rclb
xchg
ljmp
add
dec
rcl
cmpsl
mov
or
aaa
push
sbb
test
into
pop
je
rcrb
dec
pop
out
xchg
stc
dec
in
iret
sbb
or
inc
cmp
test
scas
fisubl
fnstsw
out
sbb
mov
in
sahf
ds
loope
xchg
cs
push
sbb
orb
mov
ret
ret
push
sbb
test
mov
push
pop
nop
jns
les
jno
loop
fmul
sbb
pop
daa
inc
test
xlat
mov
or
jae
shll
mov
xor
jg
in
iret
or
popa
ds
inc
loope
dec
shrb
enter
sbb
push
pop
enter
lods
movsl
js
in
add
popa
clc
inc
jmp
in
std
gs
int3
push
std
mov
inc
mov
das
push
imul
inc
lret
test
clc
out
icebp
jbe
jle
xor
adc
int
ds
inc
dec
mov
add
jge
in
pop
push
pop
pop
xchg
jecxz
inc
in
fsubl
aad
xchg
jmp
popf
ds
dec
stc
cmp
mov
inc
stos
arpl
mov
jle
mov
shl
xchg
push
fwait
addl
lock
call
sbb
jp
pop
inc
xchg
inc
pop
mov
cli
xor
sbb
xchg
mov
jbe
leave
xor
inc
and
xchg
xor
lcall
dec
adcb
cs
mov
hlt
dec
andl
jae,pn
mov
out
pop
dec
pop
lahf
push
dec
xor
pop
dec
dec
lret
stos
jp
mov
insl
pop
adc
mov
add
pop
fistl
mov
push
cmc
adc
push
pop
or
int3
cmp
fidivrl
pop
jecxz
cmc
movsb
and
pop
decb
dec
lea
imul
xchg
jnp
shrl
mov
ds
mov
adc
ds
shrb
jmp
fistl
push
jg
and
sti
js
test
xor
mov
cmp
roll
sub
mov
pushl
xchg
mov
mov
and
dec
scas
cmp
jno
leave
mov
orl
popf
aad
push
movsl
inc
aam
ds
aad
call
jl
mov
and
mov
pop
cmp
sub
push
inc
out
adc
stos
fmul
mov
fsts
data16
mov
pushf
ret
xorb
xchg
push
jbe
dec
pop
loope
and
push
inc
sub
mov
adc
xchg
and
mov
push
sub
lea
jnp
add
into
les
ds
xor
fsubrl
std
mov
push
leave
in
shlb
dec
into
fcomps
in
sysret
mov
inc
inc
bound
mov
rorl
fldcw
mov
or
and
cmpsb
ret
push
mov
shrl
movsb
xchg
cmp
push
mov
xchg
inc
sbb
sbb
fldt
push
jl
negl
js
dec
sub
out
pop
adc
pop
inc
push
push
or
out
lds
jnp
lret
or
sub
add
pusha
xchg
movsl
test
jbe
pushf
mov
sub
xchg
lahf
cmp
dec
or
clc
pop
xchg
fisubrs
mov
imul
out
cltd
mov
cmpsb
mov
mov
jmp
sbb
test
ds
push
jnp
data16
fistps
push
xchg
fstpt
and
push
out
lret
decb
add
and
sbb
and
xor
jno
lahf
adc
daa
movsb
dec
lds
mov
jmp
out
mov
daa
dec
dec
icebp
jno
fldcw
fcmovbe
sub
pop
mov
dec
imul
outsb
aaa
adc
or
int3
imul
pop
xchg
dec
popa
jmp
popa
push
bound
mov
inc
or
xchg
jbe
xchg
mov
adc
adc
jb
subl
push
bound
sbb
fdivrs
cmp
in
scas
call
mov
clc
inc
jbe
push
xchg
inc
je
push
es
mov
push
mov
cmpb
add
popf
inc
dec
imul
stos
loope
adc
pop
gs
loopne
out
xchg
and
ds
and
ja
jae
int
test
stos
jne,pt
inc
pop
xchg
mov
xor
cwtl
xchg
sub
adc
scas
dec
ljmp
mov
xor
xor
push
lret
pop
mov
lret
and
mull
ja
lea
in
and
xor
movsb
ffree
jg
test
mov
mov
or
fmull
movb
sbb
mov
scas
subl
jecxz
xchg
pushf
stos
sub
std
jne
xchg
lds
pop
dec
jge
adc
mov
call
sbb
inc
mov
jne
push
adcb
and
push
repnz
das
lods
aaa
push
push
xor
loop
inc
adc
add
cmp
inc
mov
aaa
mov
cmp
push
and
xor
js
xor
jo
lods
int3
rcrb
mov
mov
jp
lret
cmpsl
dec
mov
int3
sbb
std
jl
mov
lahf
ret
negb
ljmp
cmp
stos
adc
inc
stc
mov
test
insl
insl
jbe
jle
imul
sub
mov
sbb
inc
enter
xchg
dec
lods
test
inc
stos
push
shl
cltd
ss
add
repz
xor
push
add
push
add
jbe
sbb
jp
jbe
inc
mov
and
xchg
push
cmp
xchg
and
mov
mov
sahf
sub
inc
movsl
fwait
scas
inc
int3
cmpsb
inc
jno
outsl
cmp
test
mov
loop
cli
cltd
jnp
and
sub
or
mov
inc
dec
lock
adc
ja
cld
adc
cmpb
or
int3
xor
pop
loop
and
vcvtps2dq
ret
cmp
mov
mov
xchg
adc
pop
cmp
pop
lock
outsb
jmp
pop
fisttpl
out
mov
xchg
or
decl
lods
xchg
frndint
in
inc
jecxz
daa
xor
fs
test
aad
out
mov
mov
add
sbb
packsswb
and
jmp
dec
mov
call
fidivl
jl
inc
push
push
xchg
hlt
out
cmp
jp
imul
lock
cwtl
out
sub
push
dec
inc
sub
xchg
xacquire
sbb
push
jl
pushf
icebp
insl
push
dec
mov
test
dec
sbb
cli
int3
js
rorl
mov
movsl
lock
pushf
sub
sub
pop
mul
push
ljmp
int3
shlb
cmc
adc
shlb
fiaddl
push
leave
pop
loope
out
bound
adc
test
add
test
je
or
out
aam
pop
out
mov
lods
inc
xchg
pop
mov
or
dec
insl
insb
in
adc
dec
fprem1
clc
sub
xchg
add
adc
aas
decl
fdivrs
push
test
cmp
dec
stos
sub
add
mov
cmp
scas
dec
cmp
xor
test
je
cltd
and
insl
stos
mov
xor
ret
lahf
push
fs
sub
mov
cwtl
insl
sbb
movl
lea
cmpsb
push
push
sbb
fwait
jo
push
scas
int
xchg
push
sbb
mov
fadds
push
lods
mov
mov
inc
repnz
mov
pushf
mov
pop
cwtl
scas
lods
movsl
into
mov
sete
mov
clc
lcall
out
push
xchg
inc
mov
adc
mov
dec
xchg
add
adc
sub
call
mov
xchg
in
cmp
pop
jb
ja
sub
xor
cld
xchg
stos
das
mov
out
sbb
stos
and
aad
sub
out
pop
dec
mov
icebp
dec
ucomiss
mov
jb
fiadds
xor
jmp
or
mov
lock
mov
lods
inc
fisttpl
popf
aad
and
hlt
xlat
xor
or
daa
je
jbe
or
hlt
mov
add
imul
mov
repz
mov
push
pop
or
jbe
cwtl
scas
mov
add
push
mov
mov
mov
jns
add
sbb
out
xchg
adc
sbb
sbb
xchg
popf
pop
std
mov
loopne
fs
mov
pop
xor
mov
or
push
dec
jl
dec
dec
or
aaa
stos
mov
pop
sbb
cmpsb
sbb
push
mov
jl
leave
sti
in
inc
mov
and
push
ja
push
sub
mov
push
scas
sbb
ds
inc
loopne
loop
or
leave
mov
imul
jae
mov
out
jmp
push
fldl
aaa
cltd
sub
mov
fs
repz
ret
cmpl
pop
mov
dec
or
push
sub
pusha
outsb
popa
xchg
or
or
mov
loop
dec
pusha
repz
je
sahf
xchg
pop
insb
in
mov
cmpb
cmp
scas
mov
xor
xor
pop
data16
ficoms
nop
in
cli
cltd
das
dec
xchg
inc
into
test
cltd
clc
loop
cmp
fstpt
pop
arpl
or
xlat
jae
scas
pop
inc
sub
outsl
add
adc
out
sbb
ds
jmp
nop
mov
jp
subl
cmp
decb
mov
pop
cmp
xor
mov
inc
movsl
push
sti
sub
and
or
xor
jno
sub
mov
pushf
lea
int3
in
cld
dec
push
repz
inc
and
push
xchg
sbb
lret
mov
xor
jns
addb
fs
jl
push
xchg
jge
cwtl
push
daa
jl
sub
stos
add
push
or
data16
orl
loopne
mov
pushf
lret
add
icebp
cli
outsb
or
xchg
and
jns
and
movsl
or
mov
mov
cmp
adc
js
mov
hlt
in
mov
push
jb
inc
mov
push
dec
mov
xchg
outsl
pop
sbb
or
lret
push
nop
rorb
push
scas
cmpl
dec
outsl
adc
addr16
push
dec
pop
jl
sbb
and
imul
fidivl
fwait
addl
or
in
loopne
je
mov
in
push
mov
add
jnp
cmp
cwtl
notrack
fld
dec
add
idivl
jns
imul
cltd
mov
mov
mov
icebp
gs
mov
xor
jno
add
mov
mov
xor
xchg
insb
stc
inc
divl
aam
cmp
sbb
sbb
fidivrs
insb
mov
loopne
xchg
fsubl
inc
div
push
bound
notl
mov
ret
dec
and
lods
mov
mov
icebp
in
not
mov
xor
pop
lods
dec
aaa
push
pop
pop
mov
sbb
push
leave
ss
bound
loopew
call
mov
jmp
aaa
cmpsl
fimuls
sbb
mov
inc
aam
xchg
hlt
jl
pusha
scas
movsl
push
lock
sub
ds
daa
sti
inc
loopne
in
lock
insl
inc
insb
dec
ds
jge
cmp
jne
jle
or
cmp
xchg
xor
jo
scas
aad
xor
fsubl
pop
pop
ja
popf
adc
or
jb
cmpsl
ds
adc
insb
xor
sbb
aas
jno
sub
mov
out
push
ret
cmc
or
inc
mov
loope
add
push
insl
dec
xor
jecxz
push
lds
cmpsl
test
pop
cltd
stos
addr16
fildll
cli
push
pusha
shll
imul
in
xchg
jecxz
and
add
loope
xchg
or
jmp
in
jne
add
sub
sti
jns
push
insl
int
shrl
xchg
repz
lret
iret
mov
lret
push
test
out
daa
imul
fisttps
movsb
cld
sbb
sbb
es
mov
jmp
mov
mov
add
and
add
push
jecxz
jp
movsl
and
sbb
mov
cltd
cmp
andps
xchg
mov
int3
lahf
adc
es
cli
movsl
enter
js
dec
cmp
jge
jo
mov
pop
call
jmp
cltd
arpl
icebp
adc
push
mov
js
enter
cmp
mov
dec
and
mov
dec
lahf
into
nop
imul
insl
mov
insl
xlat
cmp
xor
pushf
pop
scas
dec
scas
sub
jle
adc
jo
filds
movsl
push
popa
stos
mov
and
xor
movntq
out
fstpl
test
adc
cmpsb
cmpsb
cmp
lret
int3
push
lock
gs
cmp
and
cmp
pusha
sahf
mov
in
pop
scas
in
push
movsb
dec
gs
cmc
sbb
jg
or
mov
fadds
frstor
test
jne
xorl
cmpl
test
pop
test
inc
push
add
jle
movsb
dec
inc
stos
xor
pop
inc
mov
aam
hlt
inc
not
fwait
daa
cs
pop
mov
add
popf
int
mov
cmp
fsubr
std
mov
jb
dec
xor
push
push
push
jge
lahf
mov
mov
pushf
sbb
push
jbe
xchg
dec
sub
add
out
hlt
std
pop
pop
fsubrs
lock
lods
jbe
sahf
lds
in
mov
sub
addr16
mov
int
sub
xor
xor
pop
repnz
inc
xchg
and
push
dec
clc
testb
mov
lret
out
fs
sub
xchg
jne
adc
cmp
xchg
cmp
stc
and
popa
cmp
stos
xchg
aam
dec
in
sub
xor
aam
in
mov
pop
mov
arpl
jmp
jg
pop
pop
popa
push
shll
test
jge
ret
loopne
push
sub
test
jmp
aam
repnz
ja
cmp
fwait
iret
mov
xchg
cmc
lcall
pop
pop
mov
fidivs
lret
push
movsb
inc
push
aad
dec
and
in
out
fucomi
dec
and
movb
aam
test
jo
ss
rcll
and
cld
mov
jl
daa
call
mov
in
pop
sbb
mov
push
add
inc
enter
xlat
or
pushf
insl
ss
mov
mov
xorl
add
scas
aad
adc
rep
divl
out
in
jl
stc
movl
jns
add
inc
xchg
inc
daa
scas
mov
dec
push
imul
adcl
xor
cmpsb
pop
add
in
xchg
in
jne
xchg
mov
pop
mov
lods
fwait
push
xchg
ficoml
cmp
sbb
lahf
fs
add
lea
and
add
jbe
aad
aaa
jne
lahf
mov
scas
aam
repnz
sub
mov
mov
fcomps
pop
fcoml
xchg
cmc
add
loop
psrld
mov
in
fwait
cld
addr16
loope
push
inc
jge
nop
xor
sub
leave
aad
hlt
sbb
mov
mov
sub
or
adc
jp
cmp
xor
test
jnp
add
or
test
sbb
int
push
jno
test
mov
pop
stos
cltd
ret
sahf
insb
sub
mov
orb
setb
jg
dec
js
mov
arpl
pop
outsl
daa
lods
scas
mov
xchg
push
push
mov
mov
das
lret
jns
decl
xchg
out
jae
cmp
stos
les
iret
out
lds
xchg
popa
rol
ret
cli
xchg
adc
or
mov
jns
cmp
fs
pop
jae
outsb
mov
lret
xor
int
pop
call
dec
inc
or
adc
cmp
aad
jns
xor
inc
les
insb
pop
sub
pop
cmp
shl
in
out
aaa
push
rclb
pop
stos
pop
test
mov
lcall
cmp
arpl
nop
xor
push
push
dec
mov
call
inc
iret
test
or
repz
jns
mov
je
xorb
sub
cld
cmpsb
sub
insl
inc
imul
inc
in
sarl
sbb
pop
imul
cld
stos
inc
outsl
jnp
push
jb
pop
loopne
inc
cmp
sub
les
push
lret
pusha
and
inc
out
xor
imul
fidivrs
cmpsb
mov
jp
add
in
fs
mov
inc
xchg
stc
lahf
out
dec
jmp
out
lret
ljmp
sub
xor
push
lret
jecxz
sbb
jns
xlat
in
push
in
mov
pop
js
push
mov
nop
cmp
pop
popa
push
je
pushf
pop
push
cld
pop
jo
jle
je
mov
mov
ja
dec
push
and
xor
scas
ret
sarb
jmp
mov
inc
xchg
push
adc
out
mov
icebp
jge
stos
and
sub
arpl
cmp
cltd
inc
scas
cmp
push
lahf
mov
into
mov
lahf
or
fists
ret
push
jb
stc
cmpsl
push
dec
xorl
mov
cltd
outsb
xchg
in
sbb
sub
and
inc
es
out
jne
or
xor
jecxz
pop
test
pop
adc
lea
inc
mov
and
xchg
cmp
sbb
cltd
jp
iret
sbb
mov
adc
adcl
jae
cltd
jl
mov
shlb
pop
bound
ffreep
or
push
xor
adc
inc
es
adc
lock
int3
mov
lcall
stos
add
bound
inc
flds
std
mov
xor
push
push
stc
push
subl
adc
aam
sar
popa
pop
lock
sub
sub
icebp
xchg
lods
push
pop
dec
daa
dec
cli
mov
pop
and
adc
mov
and
and
add
shll
idivl
aas
pop
sbb
repnz
ret
loope
jae
mov
inc
xchg
test
jle
push
jg
arpl
or
lds
cmp
jns
js
jne
hlt
std
cmp
sbb
shll
cwtl
les
repz
push
xchg
lods
push
fs
mov
out
adc
inc
arpl
aas
adc
mov
push
ret
pop
jae
int
mov
jmp
test
std
adc
mov
xchg
ficomps
fnstcw
or
out
test
aam
sbb
push
and
in
loopne
outsl
and
js
pop
in
mov
push
mov
sub
jp
xorl
lea
shlb
inc
xchg
mov
ds
push
aaa
jg
cld
xor
call
insb
mov
in
jp
iret
jae
sub
mov
xor
cmp
jne
dec
dec
add
lods
fstpt
pop
jbe
push
push
cmp
and
jecxz
mov
imul
jmp
ds
jecxz
jle
mov
adcl
mov
call
adc
fnstsw
mov
js
and
jge
in
cmp
xor
or
push
lahf
mov
or
jecxz
jp
loope
es
pop
push
out
lods
in
into
subl
iret
xlat
inc
mov
insl
sbb
xchg
dec
cld
call
mov
xchg
repnz
xchg
cmp
mov
imul
mov
int
sbb
sub
aas
lods
arpl
nop
xorb
addr16
cmpb
sbb
sub
cld
mov
outsb
call
dec
pusha
mov
jae
loop
mov
mov
push
pusha
cmp
dec
scas
mov
outsb
pop
cwtl
rclb
xorl
dec
pop
or
notb
xor
or
mov
dec
sti
cltd
lods
pop
inc
sbb
and
lcall
fsubr
aam
iret
xor
mov
or
cmp
pusha
loope
ljmp
notb
dec
insb
jecxz
fstpt
xorl
das
stc
mov
insb
stos
push
incb
mov
mov
or
fidivs
inc
outsl
stos
fiadds
addr16
jno
or
cwtl
add
mov
sar
ljmp
lods
call
mov
mov
icebp
sub
daa
mov
clc
xchg
rorb
pop
aas
int3
imul
in
pop
mul
ljmp
mov
mov
test
imul
sbb
out
clc
mov
mov
lods
mov
sbb
jp
and
lea
mov
push
pop
push
sbb
inc
sbb
inc
enter
mov
and
pop
into
aam
stos
pop
jae
movsb
mov
sub
xor
pop
test
xor
enter
cmp
imul
je
lods
shll
or
mov
sbb
stos
jbe
popa
outsl
fwait
push
call
inc
inc
cmpsl
stos
movsb
sub
div
dec
cmp
mov
pop
leave
xor
add
ja
push
dec
push
mov
mov
imul
jae
mov
ror
cwtl
in
mov
das
test
cmp
call
repz
add
add
orl
sbb
in
inc
pop
lea
ljmp
xor
cltd
sti
push
push
push
mov
push
sbb
mov
std
int
cmpb
stos
int
iret
and
cmp
sub
inc
popa
je
es
jle
cmpsb
or
pusha
push
fs
in
test
pop
icebp
pop
scas
sub
divb
and
scas
sbb
jae
mov
add
shr
rcrl
pushf
or
or
push
dec
jb
xor
out
filds
cmpsl
adc
push
arpl
imul
rol
ss
jge
mov
jnp
lds
or
fdivrl
adc
mov
aaa
dec
mov
in
fisttpl
push
outsl
add
mov
sub
push
inc
adc
test
xor
sub
cmpsb
xchg
xlat
scas
lea
scas
xchg
xor
pushf
and
cmpsb
mov
jge
mov
loopne
push
adc
stos
xchg
cmpsb
fisubl
in
in
dec
cmp
cmp
xchg
ret
or
mov
push
dec
mov
je
shll
sbb
adc
repz
mov
jecxz
adc
and
inc
insl
pop
lock
arpl
xchg
popf
sbb
daa
popf
sbb
pop
nop
inc
lods
stc
mov
mov
dec
repz
mov
and
imul
dec
clc
out
push
jae
sahf
outsl
pop
push
test
lock
imul
jle
out
and
push
hlt
and
leave
inc
stos
or
shrl
jecxz
mov
out
push
jns
pop
or
xor
cltd
pop
cmp
into
adc
pop
jp
add
mov
movsl
cmp
adc
inc
movl
ljmp
fbstp
decl
lea
repz
lods
mov
inc
pop
push
test
xchg
jmp
mov
int3
xlat
xor
sub
ja
inc
dec
add
hlt
push
push
cmpl
dec
mov
icebp
mov
mov
add
push
test
nop
pop
jns
addr16
mov
cmpsl
pushf
repz
mulb
inc
inc
mov
loopne
xchg
or
adc
roll
inc
fimull
push
arpl
inc
sub
add
loope
push
or
fbld
fmuls
in
imul
out
pushf
enter
test
subb
out
movl
cltd
sbb
stc
or
xchg
call
pop
out
outsl
sbb
nop
cmp
push
repnz
leave
rclb
jle
and
pop
mov
mov
mov
jge
xlat
push
scas
push
xchg
clc
stos
iret
stos
popa
je
xor
outsl
sarb
cs
lods
sbb
jle
mov
pop
movsb
loop
push
mov
test
cmp
lret
lods
frstor
xchg
push
push
sbb
mov
fisttps
imul
or
cltd
xor
jbe
popf
mov
ret
jecxz
stos
sbb
xor
mov
aas
test
sahf
jp
int3
in
push
fidivrl
jge
sbb
push
in
sbb
fs
imul
ja
pop
sub
sbb
pop
repz
nop
xchg
pop
shrl
add
ret
or
push
add
callw
ss
jl
lock
inc
adc
and
mov
lods
arpl
pop
ret
dec
mov
aad
mov
test
adc
cwtl
sbb
adc
pop
add
outsb
scas
dec
aam
mov
pop
pop
and
fnsave
inc
subb
mov
mov
es
ret
shlb
dec
push
in
sub
sbb
mov
xor
cmc
dec
lret
ret
les
inc
sbb
rol
int
push
or
and
aaa
push
inc
ds
push
lret
movsb
jmp
fcompl
es
lods
jae
int
daa
lds
dec
lods
lock
inc
inc
lahf
data16
or
lcall
and
ret
ds
fcmovb
enter
js
outsb
push
fnstsw
cs
jl
adc
fmulp
fcmovu
jecxz
sub
nop
negl
mov
out
scas
push
xor
sti
mov
in
jb
pop
clc
aaa
rcrl
push
adc
popf
xor
mov
hlt
out
or
jae
in
or
dec
cmp
mov
push
lock
jmp
dec
cltd
push
aaa
pop
mov
push
flds
xchg
lock
add
push
add
add
out
push
push
cmp
fadds
je
mov
inc
pop
and
popf
add
dec
push
sahf
jp
pop
in
cmp
sub
add
mov
fdivrs
cmp
inc
les
jmp
cmp
mov
in
iret
sarl
cmpl
pop
movsb
or
push
xor
pop
xor
test
leave
and
push
stos
addr16
push
fwait
or
mov
mov
jne
mov
mov
hlt
sarb
shrb
loope
push
mov
imul
pop
push
xor
test
sub
mov
cltd
jge
in
inc
adc
fdivl
ss
shlb
add
push
mov
pop
pop
bound
popl
dec
jle
loop
xor
test
jb
cmp
cmpsl
scas
loop
jb
imul
dec
or
clc
rcll
movsl
adc
out
cmc
lcall
jl
or
pop
ret
xor
inc
js
xor
dec
xchg
add
into
mov
in
iret
sub
and
hlt
sarl
inc
mov
sbb
les
adc
cmpsb
lods
test
iret
test
rclb
sbb
lcall
sbb
and
enter
fwait
xor
pop
sbb
lods
cs
sbb
cmc
fucom
and
int
mov
mov
popa
aaa
add
dec
mov
push
shl
mov
xchg
nop
roll
cltd
out
fdivr
xor
mov
push
mov
imul
es
adc
mov
dec
mov
xor
sbb
or
pop
jne
fdivl
sub
imul
mov
adc
mov
xor
xchg
xor
leave
cltd
push
lods
or
ljmp
shl
dec
ja
outsl
xor
mov
ret
and
sub
pop
lret
stos
mov
push
lret
sar
lods
sbb
pusha
mov
lcall
sub
and
push
maskmovq
mull
or
lods
add
xor
sbbb
dec
popf
inc
repz
mov
cmp
into
mov
popa
pop
sti
lods
daa
sti
dec
mov
dec
pop
dec
pop
mov
js
in
mov
jns
movsb
fisubrl
push
stos
test
sbb
int3
pop
cmp
jae
or
out
mov
popf
lahf
or
push
mov
ret
xchg
adc
cmpsl
dec
mov
roll
insb
inc
sub
daa
xorl
test
fwait
dec
adc
ret
ljmp
popa
mov
xchg
push
stos
push
in
cwtl
or
arpl
je
mull
lret
mov
cmp
and
pop
xchg
out
mov
jne
mov
test
scas
sahf
inc
adc
sbb
test
mov
bound
inc
pop
ret
mov
or
sbb
imul
cmp
je
mov
sbb
push
xchg
pushf
sub
lret
push
xchg
mov
addw
fistpll
add
cli
sbb
orl
idivb
mov
xor
pop
enter
jns
mov
xor
int3
rcll
test
lcall
lods
sahf
stc
mov
cmp
pop
push
sub
add
dec
pop
insl
dec
pop
shll
add
loopne
push
lret
jbe
xchg
fs
jmp
out
mov
js
es
icebp
add
sti
sub
in
jnp
scas
dec
jo
insb
outsb
loopne
pop
and
cld
xor
cmp
je
pop
adc
sbb
js
repz
dec
fwait
loop
sti
das
xchg
js
fsubrs
inc
pop
lcall
cmpsb
sarb
je
nop
xchg
cld
leave
xchg
pop
pop
xor
sub
sbb
movsl
inc
xchg
mov
pop
lret
cmp
mov
lea
gs
jmp
es
cmp
sahf
leave
jp
jnp
dec
shlb
subl
rolb
mov
lods
shlb
xchg
es
sub
rorl
leave
mov
xor
decb
mov
test
xchg
dec
jb
incl
int
pop
adc
and
mov
and
test
pop
mov
lret
or
sahf
shlb
add
movsb
pop
hlt
mov
loope
or
scas
cmp
cmp
and
jns
xor
insl
and
push
lds
or
mov
cmp
movsl
fs
pop
repz
xchg
roll
cmp
bound
sarb
fdivs
ret
push
inc
mov
sub
xchg
pop
or
mov
test
lret
xchg
inc
mov
movsb
lcall
and
push
inc
nop
rclb
cltd
out
or
cmp
pop
mov
push
icebp
jne
xchg
addb
cwtl
push
mov
pop
ja
movsl
sbb
test
jl
ret
sbb
dec
jle
jnp
les
sbb
ja
ds
jnp
imul
pop
int
repz
xchg
xchg
add
inc
call
and
daa
into
subb
xor
out
ljmp
push
mov
pusha
inc
adc
push
dec
adc
sub
lods
ja
fcoml
dec
push
lds
inc
cld
into
add
js
sub
out
push
les
outsb
add
adc
test
jmp
repz
in
and
sarl
cmc
xchg
mov
xchg
xor
sub
mov
lods
outsl
leave
pop
ljmp
data16
push
fldcw
sbbb
push
arpl
push
push
iret
jbe
jmp
mov
push
sbb
jl
pop
adc
in
inc
xor
pop
shrb
xor
into
mov
adc
push
xor
dec
adc
sub
xor
in
inc
adcl
push
sahf
mov
lcall
in
jl
stc
adc
sbb
dec
mov
add
mov
dec
sub
iret
xchg
xchg
or
test
ficomps
inc
lretw
and
iret
out
sahf
pop
stc
gs
xor
mov
jo
pop
sub
jle
pop
bound
std
pop
push
out
mov
mov
push
mov
mov
lods
insb
cmpsb
mov
mov
fcomi
push
jne
fcmovne
push
push
cmp
out
je
fisubs
cmp
into
sbb
das
sbb
repz
cmp
push
xor
aas
subl
xchg
bound
push
dec
mov
dec
movsb
gs
cmp
ja
cs
dec
arpl
add
pop
ds
ja
pop
lea
xchg
xor
add
arpl
cwtl
popf
jns
or
shr
ret
les
xchg
sbb
scas
jp
mov
push
dec
mov
pop
mov
divb
fnsave
inc
push
sahf
cmp
out
inc
cmp
inc
mov
sbb
aaa
jle
shrb
push
int3
push
out
mov
int3
inc
imul
xchg
sbb
pushf
pushf
test
lcall
mov
je
dec
btr
gs
lods
daa
test
aam
rorb
inc
jo
pop
add
roll
clc
andl
or
fnstsw
divl
sbb
jns
push
add
iret
addr16
jecxz
and
dec
loope
xlat
xchg
mov
mov
iret
lcall
push
lods
leave
lock
adc
jle
das
repz
in
loope
imul
rcl
iret
in
and
inc
mov
xor
fistpl
jmp
cltd
mov
pop
hlt
ljmp
xchg
fisttpll
sbb
push
cmp
dec
in
jmp
mov
pop
divb
adc
icebp
mov
inc
inc
psrad
xchg
mov
lahf
cmp
mov
pop
lcall
xorb
ljmp
cs
push
mov
pushf
add
scas
sub
jg
xor
arpl
aam
jecxz
sub
mov
aad
mov
test
mov
sahf
pop
pminub
pop
addr16
daa
push
xor
cmpsb
jge
mov
pop
mov
div
dec
xchg
jne
or
jne
leave
in
imul
addl
or
or
pushf
push
addr16
xchg
outsb
jle
mov
jno
cli
out
iret
adcb
pop
mov
outsb
cltd
jp
mov
mov
rcll
cmp
cltd
cmp
mov
data16
loop
andl
push
ja
fwait
cwtl
inc
jae
add
mov
sbb
and
fsubs
shrl
lret
stos
pusha
test
in
mov
xchg
inc
cltd
sti
stos
mov
inc
nop
repz
fldcw
hlt
js
or
ljmp
cwtl
pop
mov
jp
push
lods
mov
in
or
loope
dec
mov
mov
xchg
std
inc
xchg
inc
mov
pusha
mov
push
aas
sub
sbb
push
push
imul
pop
and
jmp
pop
and
mov
test
fistps
loop
adc
pop
fstp
in
movsb
mov
lret
lds
ljmp
xchg
mov
mov
andb
repz
sbb
ja
daa
loopne
test
adc
xchg
xchg
inc
cld
stc
fldcw
adcl
jg
xsha1
cmpsb
or
xchg
gs
pop
lock
ja
adc
ljmp
xor
and
or
shll
int3
mov
call
out
fcomps
jp
pop
xchg
fucomi
mov
test
ret
add
or
repnz
fwait
sbb
dec
jne
xchg
adc
mov
inc
push
and
mov
sub
cmp
cmp
mov
xchg
push
rcrb
pop
pop
mov
push
test
mov
lahf
sbb
test
sub
push
and
mov
incl
clc
addb
call
scas
mov
arpl
imul
pop
xchg
aad
xchg
test
xor
loope
fcom
testl
scas
fucomip
rorl
test
pop
push
rclb
dec
mov
dec
daa
inc
je
movsl
jmp
lds
les
ss
in
dec
jbe
out
or
mov
adc
data16
and
mov
dec
add
xchg
ja
fwait
or
aam
jns
push
mov
adc
or
mov
into
xchg
gs
iret
dec
add
aaa
or
push
or
dec
mov
xchg
insl
jne
xchg
push
fdivp
pop
pop
jge
push
cli
xlat
fwait
out
mov
ret
push
mov
or
rolb
mov
mov
push
hlt
data16
cs
push
xor
xlat
pop
add
push
leave
out
mov
sub
add
lahf
xor
jne
movsb
daa
jb
negl
inc
xlat
movsl
add
ja
mov
pop
mov
sub
clc
ds
scas
mov
add
mov
shlb
loope
mov
repz
in
fisubl
aam
and
dec
sbbb
jb
cmpsb
sub
loopne
ljmp
loopne
cmp
pop
stc
daa
stos
xchg
or
add
xchg
push
xchg
in
int
call
sbb
lcall
jmp
adc
jbe
push
outsl
enter
pop
cmpb
fcom
jno
sbb
loopne
lea
addr16
insb
lahf
fldl2e
and
js
xor
xor
hlt
cmp
divl
pushf
sbb
iret
dec
sub
xor
mov
jecxz
psllw
icebp
in
js
lea
nop
dec
jae
jle
and
lods
or
leave
push
aam
adc
inc
and
repnz
scas
out
push
arpl
fists
shll
pop
rorl
stos
push
ss
sub
adc
lds
cvtps2pi
mov
push
adc
in
repnz
sbb
xchg
lahf
mov
les
inc
jmp
out
cmp
int3
and
lock
jg
inc
mov
push
xchg
int
or
xchg
movsl
xchg
push
sub
lret
imulb
sbb
movsb
xor
fimuls
addl
insl
cmp
or
subb
movb
notb
popf
lock
decb
repnz
outsb
insl
ljmp
idivb
in
xchg
mov
xlat
ss
dec
in
xor
mov
es
mov
or
dec
stos
and
jle
mov
scas
cmp
in
mull
fcomi
xchg
inc
push
stos
es
mov
adc
enter
rorl
cld
loope
dec
mov
sbb
loope
cmp
inc
cmp
push
mov
ss
adcl
inc
and
into
int
push
mov
icebp
outsb
in
loopne
in
sbb
popf
pushf
sub
lea
push
subb
fs
cli
and
sbb
nop
jnp
rep
xor
xor
adc
jo
xor
dec
xchg
mov
pop
je
adc
or
fsts
scas
test
pop
push
test
shlb
addr16
cld
push
jp
jno
xor
in
lods
sub
jp
jecxz
in
sbb
out
pop
pop
cmp
ret
pop
push
mov
dec
insb
xchg
push
fldl
jno
movsb
std
lods
leave
or
adc
out
mov
push
sub
in
dec
in
scas
xchg
mov
sbb
mov
gs
daa
lds
mov
and
xchg
add
sub
repnz
mov
pop
bound
cli
xchg
and
jb
mov
xchg
push
stc
cmp
cld
clc
dec
mov
test
dec
lret
mov
cli
inc
addb
je
loope
ljmp
sbb
push
and
or
lods
sub
jbe
sbb
sub
mov
rcr
cmp
mov
add
ds
lcall
repnz
sti
cli
ss
cwtl
shlb
int3
dec
or
adc
sti
inc
aam
inc
xchg
rcll
xchg
aaa
pop
pop
xorb
imul
imul
call
sbb
test
sbb
and
repz
mov
mov
mov
push
dec
or
in
movsl
ffreep
shll
stos
mov
movsl
and
icebp
jb
or
popa
stc
mov
int
sub
test
dec
add
push
popf
pop
call
outsb
inc
inc
jno
rclb
mov
call
mov
arpl
icebp
repnz
mov
mov
inc
in
in
data16
repnz
out
aaa
cmpb
gs
cmp
imul
popa
sub
dec
push
in
mov
outsb
ret
inc
popa
and
push
mov
out
shll
adc
adcl
into
jnp
or
scas
mov
popf
push
push
inc
mov
scas
hlt
sbb
sahf
rorb
pop
pop
popa
test
xchg
dec
stos
ljmp
movsb
sub
lret
push
cmp
lret
cwtl
sub
lcall
add
ja
adc
je
fwait
daa
js
inc
hlt
sub
sub
push
int3
sub
ja
scas
shrb
fcompl
aas
add
sub
popa
adc
pop
fstpt
in
leave
and
mov
pop
stos
cmpsl
stc
imul
adc
jl
fsubrp
repz
mov
loopne
lods
cmp
cld
cmc
jo
out
xchg
andl
jbe
mov
or
sbb
sub
xor
hlt
addb
mov
ret
test
and
faddp
inc
mov
lock
faddl
and
lock
inc
jle
pop
imul
fsubl
daa
pop
sub
cmp
sub
push
mov
int3
cmpsl
inc
imul
inc
mov
popa
and
aaa
push
loopne
adc
rol
sahf
push
xchg
lret
sub
scas
adc
int
pop
mov
add
add
mov
cmp
or
jl
cmpsb
lret
fs
add
daa
pop
adc
ret
cmp
push
sbb
sub
iret
aaa
cmp
pop
pop
push
xchg
adc
cwtl
test
mov
or
push
loop
mov
cmp
mov
sub
cli
cs
sbb
jmp
ret
enter
je
push
sub
dec
adc
outsl
dec
ret
inc
in
mov
sub
movsb
pop
push
pop
xor
xlat
andb
sbb
lcall
hlt
aas
inc
jl
push
jae
pop
push
popf
int3
imul
mov
in
sub
sti
cmp
cltd
add
je
int3
sahf
jge
xlat
out
cmpl
ljmp
add
notb
pop
loopne
add
test
out
mov
sbb
add
cmp
cmp
xchg
push
bound
iret
dec
stos
add
jns
test
into
sub
adc
sbb
xchg
and
ljmp
pop
ljmp
rcrb
cmp
loope
ffree
mov
es
xchg
popa
cmp
dec
dec
mov
mov
aad
and
in
lea
stos
out
gs
lret
int3
mov
mov
mov
out
jnp
pop
push
mov
jecxz
out
call
es
and
repz
nop
in
pop
scas
jns
nop
insb
mov
xor
or
inc
movsb
int3
ficoml
push
lcall
pop
sbb
xchg
sbb
inc
dec
aam
orl
imul
addr16
ret
xor
cli
in
adc
js
xchg
pushf
add
shrl
mov
lea
bound
fdiv
xchg
addr16
dec
sti
pop
sub
arpl
jl
into
xchg
mov
cmp
leave
movsb
mov
call
dec
nop
xchg
mov
push
outsl
pop
les
movsl
dec
push
inc
outsb
cmc
movsb
je
inc
lods
pop
adc
lods
imul
ss
jno
inc
push
jmp
pop
sti
mov
lcall
add
loope
sbb
xchg
push
das
test
sbb
mov
and
inc
daa
cmp
mov
sbb
dec
stc
pop
sahf
push
sarb
jmp
mov
inc
jg
out
sub
adc
sbb
mov
std
out
push
add
out
int
fimuls
in
xorb
xchg
fs
clc
xchg
into
leave
cmp
insb
in
pop
xor
out
clc
nop
xchg
popf
icebp
push
mov
lahf
cli
rclb
xchg
xchg
pushf
mov
mov
push
jns
xor
lret
or
pop
or
test
lods
or
push
outsl
hlt
lcall
and
adc
inc
sarb
pop
pop
pop
js
je
loope
or
sub
pop
loop
ds
in
jbe
out
push
jmp
dec
or
stc
std
aaa
jns
mov
inc
testb
push
imull
inc
push
ficompl
sub
mov
cs
sti
jb
add
xchg
jo
pop
cltd
pop
rol
idivb
loope
and
mov
jmp
lods
mov
jle
adc
lods
mov
data16
jmp
shl
stos
lods
fdiv
pop
daa
outsl
imul
jbe,pn
adcl
pop
and
mov
or
call
adc
loope
pop
xor
mov
xchg
or
in
dec
jle
imul
cmpsl
mov
mov
sbb
inc
pop
adc
cmovs
sub
lcall
fdivr
ret
test
in
ja
mov
dec
or
test
inc
or
decb
adc
push
rcrb
mov
push
cmp
enter
sub
lds
xchg
insl
jl
inc
push
or
aam
adc
repnz
shl
push
imul
push
cmpsb
mov
push
inc
fdivl
jmp
push
dec
xchg
cltd
push
jo
jae
stos
push
fdivl
je
outsb
fisubrs
js
dec
push
adcb
outsb
sub
mov
pushf
jbe
mov
sbb
and
mov
and
pop
mov
aam
mov
nop
fists
icebp
jae
jbe
pop
add
clc
inc
fnstsw
cmp
aaa
jns
cmpsb
and
shlb
xor
mov
aad
std
ror
dec
popf
je
mov
repz
mov
lcall
pop
add
adc
and
fstpl
ret
pop
enter
mov
mov
je
loopne,pn
cmp
pop
push
inc
addr16
xorb
jnp
repz
mov
mov
mov
fmuls
mov
or
pop
shll
jns
pop
and
xor
jge
jb
sbb
das
and
jne
sbb
ficompl
shll
fdivrl
mov
insb
stos
test
mov
mov
rclb
dec
mov
cmp
dec
pop
fdivrp
ss
hlt
sarb
mov
sub
stc
cmp
fcmove
mov
int
mov
arpl
mov
add
sahf
lods
ret
psrlq
imul
sub
fs
mov
movsl
loope
jp
or
pop
popf
or
jae
test
aam
or
dec
sbb
and
cmc
adc
and
push
xor
push
dec
adc
movsb
mov
out
jne
rorb
mov
lret
repnz
bound
cmp
lcallw
shrb
inc
pop
push
mov
out
movsl
jl
mulb
rclb
cwtl
insb
xchg
loop
lock
sti
xchg
popf
mov
hlt
mov
outsl
lret
mov
mov
cmp
jne
jno
mov
rolb
mov
mov
jnp
push
jo
aam
xor
test
sahf
aam
pop
push
adc
add
pop
add
jecxz
ds
or
jnp
mov
ret
cmp
push
add
fimull
or
loop
mov
stos
lcall
mov
enter
movsb
add
pop
notb
cmp
ret
sti
push
and
pusha
aad
mov
insl
cwtl
adc
push
mov
and
insl
fidivl
pop
xor
fwait
mov
mov
sub
push
lahf
inc
outsb
or
mov
aam
cli
nop
cltd
loop
mov
shl
pop
fistpl
outsl
jbe
int
xor
inc
adc
push
mov
cmp
ss
cmp
jecxz
push
push
in
pusha
xor
cmp
sub
pop
lahf
imul
jecxz
xor
dec
push
repz
call
mov
mov
and
call
cmpl
loop
fidivrl
mov
pop
pop
test
xchg
aad
jns
xchg
bound
push
push
hlt
popf
sub
arpl
gs
mov
mov
idivl
out
or
xchg
add
push
in
inc
inc
pop
adc
adc
mov
stc
jae
or
outsb
jno
mov
xchg
jmp
jmp
sahf
cmp
les
pop
jnp
mov
dec
daa
lret
push
es
aad
add
je
out
aam
cmp
jnp
aam
loopne
mov
inc
xchg
aad
fildl
fnstsw
fiaddl
out
push
mov
sub
mov
mov
xor
lods
xchg
xchg
mov
adc
clc
xchg
in
pusha
push
pushf
add
loop
cld
jg
mov
or
int
loop
sub
adc
and
xor
cmp
les
cld
shll
movsl
or
lea
or
mov
repnz
or
push
scas
fdivp
in
cmpsb
daa
add
sbb
mov
mov
jecxz
mov
rorl
cmp
mov
leave
popl
aaa
adc
cmpsb
lcall
jb
cmp
test
loop
insl
xorl
push
jns
mov
push
dec
jle
mov
icebp
push
out
xchg
jno
xrelease
push
cmpsl
outsb
je
fadd
mov
add
jl
scas
lcall
inc
cmpsl
imul
shlb
add
push
cmp
lock
aam
cmp
sbb
jbe
add
sti
rorb
mov
mov
adc
fs
or
pop
inc
mov
sub
pop
arpl
jg
and
fstpt
xchg
jns
add
lahf
and
orb
lret
and
push
sbb
cmp
icebp
in
inc
ja
test
je
subl
cmp
sar
jg
test
push
xor
scas
aad
push
repnz
push
fisttpll
jno
shl
test
cmc
lret
push
in
inc
add
lahf
pop
scas
cmpsl
cmpsl
int3
leave
lahf
xor
inc
dec
les
pop
cld
lcall
jle
insl
icebp
add
and
frstor
loop
fnsave
popf
sub
movsb
lds
mov
mov
imul
or
shl
dec
sti
xlat
cld
mov
fnsave
mov
rorb
sub
ljmp
add
loope
push
dec
pop
jo
xlat
or
jle
inc
ret
popa
loop
out
int
fs
pusha
outsb
lahf
mov
jno
lods
les
cmp
faddl
or
data16
add
js
pop
in
aam
je
inc
test
adc
stos
cmp
pop
sbb
mov
call
dec
jno
push
out
cwtl
cmpsl
push
imul
cmpsl
mov
or
mov
jp
or
mov
adc
cmp
pushf
ret
int
or
mov
test
enter
jns
test
mov
cmp
sbb
or
mov
inc
sub
out
mov
loop
xor
push
cmp
in
mov
fcmovbe
xor
push
es
sub
in
lock
sahf
and
pop
xor
stos
out
add
je
sbb
cld
jnp
xor
call
int3
adc
jge,pt
xchg
pop
cld
mov
movsl
cli
inc
and
jmp
xchg
sub
sub
ret
mov
mov
mov
and
push
dec
sbb
push
cmp
fsubs
jle
mov
inc
xchg
mov
adc
fwait
insl
dec
xor
pop
jno
jmp
dec
lods
fisubrs
scas
fwait
mov
iret
sbbl
pop
or
mov
mov
cltd
and
fistl
mov
fnstsw
sbb
xlat
or
push
xchg
push
ds
inc
xchg
divl
xor
aad
xchg
adc
cmp
push
lods
sub
jmp
jl
xor
icebp
out
adc
jae
sbb
ljmp
sub
pushf
mov
jbe
imul
js
mov
pop
and
fs
cmpsb
mov
in
outsb
xor
test
ret
mov
les
test
adc
sub
and
mov
or
dec
ja
dec
inc
mov
test
sarl
loope
out
lea
pop
and
mov
cltd
inc
pop
and
cwtl
jbe
adc
movsl
aaa
or
mov
sub
das
push
add
call
xchg
shl
sbb
dec
push
push
std
pop
mov
movsb
pushf
xchg
add
mov
xor
sub
push
sti
pop
xchg
cmp
xchg
int
iret
xchg
jl
pop
xchg
cmp
in
inc
daa
stc
out
gs
mov
or
ja
les
int
add
sarb
out
add
arpl
loopne
pop
push
sub
sub
or
test
xchg
pop
lahf
cwtl
leave
arpl
sbb
iret
cmpsl
mov
into
mov
insb
cmp
inc
lret
mov
mov
pop
mov
sub
push
loopne
popa
jnp
sub
lea
mov
imul
dec
scas
cld
lcall
les
cmp
fs
orl
or
jecxz
orb
mov
dec
push
or
xchg
add
xor
lock
pop
xlat
sub
mov
loop
test
or
lret
mov
cmp
sub
xchg
stos
insl
imul
lds
cmp
xchg
sub
dec
mov
nop
inc
adc
pusha
push
inc
jge
or
adc
xchg
rcll
dec
jg
cmpsl
testl
cmp
push
lods
cmp
lock
and
xor
rol
mov
or
mov
inc
push
mov
sub
fwait
mov
es
sub
or
test
bound
mov
push
and
aas
mov
cltd
dec
int3
pusha
pop
jmp
cmpsb
push
push
xchg
ds
das
fbstp
mov
pop
jns
dec
dec
fisttpl
aas
fs
sbb
or
push
jmp
shll
leave
push
in
pop
stc
cwtl
mov
ret
lock
inc
add
cld
jp
fidivl
movsb
inc
in
imul
xchg
aas
push
decb
loop
and
mov
ss
pusha
out
jae
lret
nop
scas
jge
jmp
adc
and
xchg
jecxz
sar
outsb
add
insb
push
pop
xchg
mov
fdivrl
dec
fs
jge
mov
mov
rclb
inc
mov
out
pusha
repz
add
sub
xor
jo
in
jecxz
lds
mov
dec
lods
cmp
add
push
sbb
std
push
rcl
in
jle
lods
mov
mov
or
inc
icebp
cmp
arpl
loop
test
xchg
jns
gs
pop
leave
jge
add
xor
lods
mov
sbb
cli
int
lea
out
push
dec
fdivrp
or
sbbl
mov
dec
mov
or
fdivl
or
std
and
xchg
addr16
data16
jle
cmpsl
push
test
pop
rclb
mov
push
arpl
dec
pop
xor
das
jb
fucomp
shrd
loope
or
inc
loope
daa
scas
pop
dec
dec
int3
jno
jp
cmpsb
mov
cwtl
lea
pop
pop
fldenv
dec
movsb
pop
iret
sub
leave
pop
and
pop
jecxz
lret
sbb
jmp
pop
adc
roll
pop
sbb
stos
add
jge
or
in
mulb
es
movsl
sbb
aam
dec
out
sub
in
xchg
into
in
mov
rorb
sub
and
pushf
fcoml
ss
mov
mov
mov
dec
sbb
aaa
pop
call
repz
das
and
cmp
xlat
enter
lock
jbe
mov
clc
cmp
mov
rorl
sbb
test
mov
mov
pop
test
cmp
dec
sbb
jmp
orl
xchg
lock
gs
sub
xchg
aam
push
in
xchg
dec
test
jae
pop
push
cmpsb
jp
shrb
sbbb
pop
mov
loope
clc
mov
insb
pop
mov
add
pop
cmpl
push
scas
test
int3
xchg
pop
cmc
sub
or
fistps
add
es
push
insb
adc
push
iret
dec
push
out
mov
in
push
dec
leave
repnz
xor
mov
lock
inc
sub
out
sbb
mov
and
mov
jo
outsl
sti
xor
lods
xchg
jb
inc
rolb
mov
out
aad
jl
xor
out
push
in
cmp
inc
hlt
leave
dec
push
pop
xchg
cld
sub
mov
outsl
push
pop
cmp
xchg
aam
jge
and
cwtl
push
xor
fstl
adc
int
xor
mov
mov
in
inc
daa
fistps
mov
inc
xor
popa
dec
icebp
jg
lock
std
loope
cltd
mov
lahf
test
mov
jg
out
fstpl
js
sub
mov
je
and
repz
xor
loop
mov
mov
push
cmp
mov
pop
test
pusha
or
jmp
sbb
movsl
jns
push
leave
roll
daa
and
mov
sub
push
ret
push
leave
inc
orl
pushf
sbb
xchg
mov
cmpsb
popf
data16
jo
jns
cmc
mov
pop
dec
rcr
mov
adc
sbb
mov
aas
pop
test
sti
add
push
negl
ds
mov
add
mov
insl
testb
xchg
or
sbb
cs
aad
mov
mov
inc
cs
xchg
xor
aam
cmp
test
aad
stos
leave
negb
xchg
repz
mov
into
or
lods
dec
mov
cmp
or
test
pop
xchg
adc
popfw
mov
je
inc
aad
and
fs
aam
fs
nop
jbe
add
add
lods
imul
sbb
scas
loop
lret
mov
sbb
mov
cmpsl
add
divb
dec
das
mov
mov
xchg
add
mov
jns
pop
popf
xor
dec
dec
pusha
fwait
xor
dec
add
fwait
mov
push
sub
test
cmp
popa
imul
jl
sub
shr
in
js
gs
out
jae
scas
mov
jl
test
mov
jb
dec
rorl
cmc
lds
mov
push
lds
nop
mov
mov
mov
shll
enter
dec
cmp
xlat
xadd
adc
lea
lcall
or
stos
lds
into
adc
fistpl
js
int
inc
pop
pop
enter
xchg
pop
push
mov
cs
push
adc
xchg
jbe
mov
mov
or
push
push
xchg
sub
jo
rolb
pop
xor
jg
mov
xchg
andl
nop
nop
data16
add
push
js
sub
mov
in
loope
es
adc
aad
inc
js
and
fiaddl
sub
sbb
cld
setb
xor
inc
sbb
or
push
adc
iret
outsl
pop
cltd
and
adc
sti
adc
xchg
mov
shr
movsb
inc
cmp
inc
jg
ja
mov
dec
mov
push
xchg
or
jo
and
test
xchg
cld
or
dec
ja
movsb
dec
rolb
subl
mov
sbb
push
mov
out
xchg
inc
lods
and
inc
nop
push
and
js
or
out
cld
dec
sbb
lret
jbe
mov
ljmp
out
xchg
shlb
cwtl
aas
or
push
scas
adc
in
out
jmp
xchg
mov
imul
jno
push
scas
jno
cmp
or
insl
fcmovu
aaa
adc
in
pop
cmp
dec
push
adc
out
adc
fisttps
dec
popf
sbb
fs
nop
std
push
fwait
test
loopne
push
ret
fcmovu
mov
adc
xchg
mov
js
ret
dec
lock
push
aas
push
ret
aas
ljmp
mov
test
sbb
das
sbb
sbb
xchg
fldt
cmpsb
push
push
dec
loopne
loope
mov
pop
sub
in
or
jns
daa
pop
mov
sub
je
nop
lahf
sbb
push
lret
jb
add
pop
out
movb
ret
stos
add
push
das
inc
or
mov
inc
ficomps
push
inc
test
stc
fcoml
pop
or
jnp
xor
pop
pop
add
out
xchg
sub
aad
adc
or
mov
lock
mov
jge
leave
iret
outsb
sub
sbb
xchg
push
fs
jl
loope
mov
cmp
inc
into
xchg
lock
xor
not
dec
push
mov
xlat
add
push
jns
pop
pop
popa
push
fadds
or
lods
popf
pop
repnz
leave
out
fwait
test
mov
pop
pop
jb
mov
negb
mov
push
sub
shrl
rol
push
xchg
inc
add
stos
jae
xchg
mov
dec
xchg
cmpsb
or
add
add
jle
inc
enter
pop
jne
in
rcrl
pusha
mov
mov
out
bound
dec
data16
cltd
dec
int
popf
xchg
dec
aas
push
lret
mov
xchg
push
sub
rcrb
enter
and
push
outsb
xor
and
push
and
and
jne
mov
mov
xchg
jge
enter
mov
std
xchg
fnstenv
jb
lcall
mov
clc
je
pusha
mov
mov
or
mov
ss
fs
cmp
and
pop
fsts
or
into
xlat
and
mov
mov
or
mov
adc
enter
int3
inc
or
or
or
shll
mov
pop
push
call
cmp
js
out
and
mov
mov
mov
out
lods
enter
mov
mov
mov
inc
mov
mov
xor
fwait
dec
lcall
sub
outsb
dec
inc
into
pushl
mov
data16
sbb
dec
xor
pushf
mov
imul
mov
dec
test
mov
mov
add
inc
inc
js
js
jl
lcall
jno
xor
sub
mov
subb
roll
data16
imul
inc
mov
mov
cli
dec
cli
mov
pop
enter
movsb
imul
inc
cltd
and
cs
push
lret
or
mov
xchg
and
aas
adc
jb
cmp
rcr
push
arpl
mov
loope
imul
sub
jmp
leave
sbb
stos
dec
sub
sub
loope
testl
shlb
stos
imul
loop
ret
fidivrs
test
add
mov
xorb
jecxz
enter
push
aaa
cmpsl
adc
xor
or
or
or
das
xor
jl
jge
mov
push
rcr
push
sub
or
cmc
mov
fcoms
fidivrs
cli
outsb
imulb
jmp
xor
cmpsb
dec
push
jne
cs
mov
stc
movsl
test
inc
addr16
cmpsb
and
push
xchg
inc
mov
inc
ret
inc
outsb
lcall
mov
jge
fists
fs
outsl
sahf
mov
jl
adc
cld
lods
mov
push
mov
adc
lea
ret
mov
subl
mov
and
neg
jae
iret
or
add
pushf
xor
outsl
xor
movsl
mov
xlat
jns
add
pop
push
leave
sub
jne
mov
jnp
or
movb
dec
leave
icebp
adc
pop
fwait
mov
stos
shl
jmp
dec
pushf
in
cltd
outsb
xchg
movsl
addr16
push
dec
sbb
sahf
xor
sbb
divb
aam
inc
sub
in
inc
push
repnz
or
test
push
or
fwait
dec
xor
dec
int
into
xor
dec
jnp
mov
xor
pop
imul
or
pop
int3
pop
test
mov
mov
fsubs
mov
cmp
ja
push
xor
mov
jp
mov
add
into
pop
movsl
pop
mov
sbb
pop
mov
push
imul
mov
das
sbb
mov
lea
and
xor
bnd
add
pusha
int
xor
outsb
mov
mov
imul
movsb
add
sub
mov
add
addb
xor
or
leave
and
out
push
xchg
movsl
push
scas
xor
leave
das
sar
inc
mov
xchg
ror
test
push
imul
dec
cmpsb
test
scas
subb
or
aam
mov
dec
stc
inc
mov
lods
cwtl
loop
popf
sbb
sbb
mov
mov
mov
add
xchg
rolb
enter
orl
daa
inc
jb
notl
sti
ret
push
push
mov
sbb
or
arpl
jp
jmp
add
es
aas
je
xor
into
cmc
pop
stos
mov
mov
push
gs
outsb
push
inc
mov
ja
cmpsl
fldenv
scas
push
inc
adc
pop
jne
fwait
jg
cmpsl
sbb
sbb
sbb
xchg
ds
cmp
pop
jno
cmp
pusha
cltd
push
or
xchg
or
cmp
test
inc
inc
subb
sbb
shrb
stc
jecxz
pop
mov
daa
dec
push
sarl
jbe
add
cmpsl
mov
cwtl
stos
fisubrs
inc
mov
sbb
scas
xor
sbb
inc
je
orl
xchg
and
fwait
addr16
leave
sub
lods
in
mov
cld
rcll
mov
add
sbb
xchg
cld
in
sub
and
sarb
pop
leave
sub
shrl
lahf
cmp
inc
and
jne
xchg
jmp
pop
sbb
fbld
mov
fsub
into
repz
aaa
add
mov
jb
test
and
xor
sub
xchg
rcll
mov
ret
cs
dec
and
cmpsl
xchg
lret
add
mov
dec
cmp
jmp
jae
and
in
outsb
cmp
ja
pop
addr16
daa
rorb
and
and
push
xchg
fcomps
pop
push
in
cld
xchg
in
cmp
lcall
inc
outsl
enter
cwtl
sub
push
cmp
push
xor
mov
sub
iret
adc
fisttpll
arpl
mov
mov
ds
mov
cmp
shlb
push
xor
mov
cwtl
cld
pop
fimull
das
or
or
fstl
and
les
mov
sahf
mov
cli
and
mov
popa
mov
xor
imul
negl
cs
fisubs
and
sbb
cmp
stos
jge
cmpsb
xchg
adc
push
dec
test
test
mov
mov
sti
ja
fnstcw
cmp
dec
sub
out
lret
ret
mov
int
cmp
ds
adc
adc
mov
dec
adc
xor
div
and
pop
negb
repz
shlb
add
adc
insb
stos
mulb
movsl
xchg
mov
repz
jo
adc
mov
push
fisttpl
sbb
push
adc
data16
imul
into
fisubs
rcrb
in
or
xchg
cwtl
test
inc
addr16
lret
sub
sbb
jae
mov
sbb
inc
leave
jl
dec
fcoml
popa
shlb
sti
push
stos
push
shll
push
lret
sbb
or
mov
mov
sbb
mov
in
cs
dec
pop
hlt
xchg
add
pop
jo
jmp
and
lods
or
mov
out
pop
inc
or
cltd
clc
imul
xor
push
cmp
inc
rcr
push
mov
push
ja
loop
cli
ljmp
push
xchg
ss
mov
sbb
lods
cmp
lret
cltd
xchg
cmpl
add
xchg
fcoml
aad
adc
in
dec
inc
jns
mov
loopne
xchg
jp
sub
sarb
mov
xor
or
mov
sarb
movsl
dec
or
std
imul
lods
add
movsb
mov
xchg
adc
dec
enter
aad
ret
xchg
or
mov
addr16
mov
fs
dec
leave
das
fimull
add
dec
ds
jmp
hlt
cmp
pop
sarl
inc
jl
cmc
movsb
jns
xchg
lds
stos
inc
xchg
ret
push
xchg
sbb
shll
lcall
dec
xchg
jp
dec
xchg
loopne
pop
enter
leave
jge
mov
jno
or
add
dec
lcall
cwtd
data16
mov
stos
shll
decb
and
cmp
mov
lcall
jle
xchg
sbb
movsb
mov
push
iret
jbe
dec
fisttpl
jecxz
inc
test
fists
aaa
ret
jbe
cwtl
adc
jge
sub
add
push
aaa
dec
or
inc
sbb
and
inc
jmp
xlat
inc
int
xor
nop
mov
adc
mov
adc
sbb
mov
and
into
loope
sub
in
test
sti
outsl
es
gs
lret
xor
mov
xor
imul
icebp
mov
xlat
xor
mov
push
aas
mov
lret
cmp
rclb
and
fstps
mov
into
std
pop
pop
mov
fidivrs
addr16
pop
shlb
pop
dec
mov
stos
cmpsb
in
inc
cmp
sbbl
loope
idivb
test
jne
imul
lahf
lahf
xchg
cmp
nop
out
clc
lahf
nop
sbb
shlb
mov
jb
repz
xor
pop
pop
cld
inc
fwait
jp
loopne
adc
add
das
out
test
lds
rcr
xchg
inc
dec
adc
add
or
adc
adc
jl
ja
aad
and
jge
vlddqu
mov
lcall
pop
jmp
mov
arpl
xchg
or
lret
mov
lret
pusha
sub
jno
cmp
or
mov
lock
sub
aaa
sbb
mov
movl
pop
scas
jecxz
cmp
imul
add
pop
mov
xchg
aas
dec
jae
ljmp
push
filds
jp
mov
lods
fwait
and
pop
stc
xchg
push
je
xchg
pop
push
test
jle
jle
jo
pushf
bound
inc
jns
cmp
xlat
pop
cmp
xchg
daa
cmc
cmc
jno
adc
loopne
ja
outsl
fildl
adcl
test
lahf
or
cmpsb
in
insb
mov
loopne
sbb
aas
jne
adc
pop
xor
adc
jmp
pop
in
icebp
scas
pop
xor
insb
pop
pop
nop
inc
aaa
and
ret
rcr
sub
mov
push
jle
mov
mov
xchg
aam
jmp
mov
aas
sbb
push
mov
nop
aas
inc
push
dec
or
inc
push
rcrb
or
push
fisubrl
ljmp
out
cmpsl
xchg
mov
cmp
xor
mov
test
jge
jns
ret
in
dec
sti
sahf
push
popa
ja
add
mov
icebp
inc
xchg
std
cmp
mov
cmp
iret
mov
xorb
and
adc
popa
out
inc
xchg
scas
sti
fs
das
popa
sbb
test
xchg
loop
test
sti
rcll
xchg
push
testb
xor
bound
jp
and
stos
pop
iret
addr16
push
sbb
sub
hlt
cltd
nop
fxam
stos
add
popf
dec
inc
xchg
cld
add
cs
cltd
std
push
iret
clc
sub
add
out
add
inc
xor
mov
sbb
cmp
stos
lock
mov
outsb
call
lods
pop
call
loope
fisubl
inc
aam
out
inc
ljmp
push
ficompl
and
adc
adc
loop
adc
stos
ret
pop
sbb
cs
mov
push
and
push
mov
out
fmull
mov
adc
push
pop
mov
cmp
xor
pop
mov
lret
jbe
jecxz
iret
sahf
inc
xorb
jno
mov
mulb
push
ljmp
pop
decb
pop
je
mov
mov
lods
sub
out
push
cmpsb
mov
lea
movsb
push
andl
neg
mov
out
arpl
jb
sub
xlat
bnd
out
mov
loope
popf
jge
push
ds
xor
inc
rcl
xchg
cmp
cmp
mov
pop
jge
xchg
push
cld
jo
mov
in
mov
mov
xchg
ljmp
mov
loopne
hlt
scas
cmp
adc
adc
stos
test
xor
sbb
idivl
jmp
fisubrs
adc
jnp
pop
xor
out
and
push
push
cmp
add
dec
mov
pop
push
inc
push
push
rcrl
mov
mov
push
pop
sub
adc
lret
cmp
mov
jo
sahf
sub
fsubr
or
xchg
lret
pop
lea
mov
sub
push
and
in
les
push
xor
mov
imul
fisubl
cmp
cli
mov
ds
jge
push
mov
mov
or
mov
mov
lea
jl
mov
pop
sbb
lret
popa
shlb
int3
xchg
repz
cmpl
xchg
into
ljmp
adc
pop
lds
add
cltd
inc
push
adc
sbb
call
loopne
sub
push
outsb
mov
cmp
add
and
icebp
jbe
insb
jns
mov
cmp
repnz
xor
pop
push
loope
je
ss
mov
shll
sarb
pop
mov
adc
inc
insl
and
mov
outsb
das
push
imul
lock
mov
xor
movsb
out
push
addr16
sbb
sub
dec
add
sbb
or
mov
dec
into
adc
xlat
in
ds
xchg
and
imul
shrb
fstps
ficoms
adc
ja
mov
out
xor
cld
inc
mov
jae
push
push
in
mov
movsb
mov
push
dec
mov
int
sarb
gs
inc
mov
ficoms
jbe
cmpsb
in
in
scas
dec
data16
cltd
addl
add
xchg
xchg
es
and
and
or
add
ja
mov
mov
shrb
add
xchg
mov
call
or
rolb
inc
or
add
pusha
or
ds
movsb
and
push
mov
imulb
jp
adc
xor
and
and
loope
xchg
sub
mov
jns
xchg
cmpl
sti
sbb
mov
outsl
fadds
cli
push
das
sub
in
clc
aas
addr16
jecxz
lods
mov
lcall
add
jns
pop
cld
jg
lods
fcmovnbe
iret
sub
push
insb
sub
add
add
push
sbb
sti
add
mov
je
xlat
mov
xor
cmpsl
sbb
imul
fiaddl
imul
or
push
xor
sbb
ret
push
popa
into
fisttpll
mov
sbb
out
jae
ljmp
xchg
mov
js
or
sub
mov
jge
and
daa
mov
mov
push
bound
ja
jl
sub
mov
sbb
test
dec
imul
in
xchg
rcll
mov
mov
add
std
cwtl
jb
shlb
jbe
or
sti
daa
push
ds
xchg
aam
xor
ljmp
shl
sbb
insb
ja
push
lcall
add
je
and
and
mov
sub
mov
scas
or
addr16
mov
dec
push
xchg
xchg
dec
pop
and
popf
fs
xchg
jmp
stc
rolb
sbb
mov
ret
inc
iret
imul
mov
jne
enter
sub
push
int
pop
or
pushf
cmpsl
xchg
xor
arpl
loopne
mov
into
push
rcl
jl
mov
pop
mov
popf
push
mov
loope
bnd
int
add
sub
mov
ja
xchg
mov
jp
push
sbb
les
mov
jg
stos
jnp
jg
mov
out
sbb
xorl
mov
mov
mov
cld
div
xchg
sub
int3
xor
pop
sahf
insb
sbb
dec
xchg
outsl
popf
std
pop
pop
fsubs
arpl
popa
and
dec
xor
lods
ja
push
push
add
mov
inc
hlt
das
sbb
push
nop
and
pop
sub
repz
xchg
add
and
dec
shlb
arpl
push
jns
outsb
imul
add
adc
fsubr
sbb
xor
jo
pop
clc
lock
pop
cmp
dec
push
sbb
mov
push
push
pop
lcall
push
xorb
scas
sbb
jle
mov
push
mov
adc
movl
xchg
add
sbb
push
inc
mov
dec
shr
jge
lahf
es
pop
insb
fneni(8087
add
popf
jle
push
jb
les
sti
cmpsb
and
int3
mov
test
sub
mov
call
sub
popf
out
leave
adc
call
mov
add
mov
mov
ja
clc
inc
push
popf
rcrl
mov
cmp
fwait
cmp
add
repnz
ja
rorb
adc
add
xor
cmp
ret
pop
test
cmp
inc
insl
sub
lods
cmp
mov
add
insb
or
enter
and
push
mov
sub
push
xchg
push
subb
mov
loopne
iret
cwtl
lods
inc
cltd
xchg
jb
mov
cs
jnp
movsb
out
sbb
in
mov
nop
jle
jle
imul
mov
ljmp
imul
test
mov
jae
in
dec
xchg
mov
jg
or
jne
pop
shl
in
ja
dec
jns
les
arpl
jl
pusha
stc
insb
test
movsl
inc
xor
adc
fs
xchg
ja
inc
and
rclb
pop
call
mov
or
dec
in
sarb
lret
stos
cmp
mov
xchg
scas
call
sub
mov
mov
ss
mov
test
repz
xor
mov
enter
push
adc
sti
insb
xor
inc
cmp
mov
lock
imul
cld
inc
mov
mov
lods
addl
xchg
jmp
lret
push
icebp
aad
adc
lock
xor
ds
nop
imul
inc
sarl
push
dec
shll
cmpsb
dec
setg
fisubrl
cmp
mov
gs
repnz
add
push
repz
js
or
inc
dec
shlb
sbbl
mov
stos
lcall
test
cmp
or
ja
jo
jmp
cmp
push
dec
pop
and
stos
fldl
push
addb
jae
lcall
xchg
int
das
inc
and
mov
mov
jmp
mov
push
or
xchg
jne
pushf
pop
push
ret
sbb
aad
insb
mov
and
repz
jae
inc
xchg
sbb
pusha
ljmp
jmp
ds
leave
xlat
and
fcompl
cs
movb
add
lahf
jg
inc
push
in
jbe
add
ss
fcomip
mov
add
stos
mov
std
lds
xor
in
in
iret
cs
xor
js
rclb
imul
in
sbb
jg
loop
pop
movb
xchg
jbe
lret
in
test
jb
cmp
adc
stos
pop
sub
push
addr16
fdivrl
add
jnp
in
sub
lahf
idivl
jb
push
jge
data16
pop
ficoms
mov
and
out
dec
or
and
lcall
enter
cs
push
fadds
adc
xchg
das
add
mov
std
pop
mov
lret
push
pop
sbb
mov
jmp
pop
rcr
and
dec
hlt
mov
ret
or
out
or
shlb
fcoml
push
out
jle
movsl
lcall
sti
lret
out
mov
and
cmpsb
lea
cltd
dec
pop
es
ret
shlb
addr16
push
mov
inc
lods
sbb
mov
icebp
es
push
std
lds
adc
push
mov
test
int
gs
bound
lret
clc
int3
cld
aas
dec
negl
jl
sub
or
inc
aas
push
adc
out
icebp
and
pop
jbe
mov
sbb
aad
stos
enter
jno
push
rorl
adc
jbe
stos
mov
test
adc
pusha
jge
testb
mov
mov
and
into
inc
xor
mov
add
loop
jp
pop
fidivrl
dec
fwait
nop
sahf
jg
subl
aas
int
imul
or
data16
test
orb
mov
jmp
jo
aam
and
and
lahf
pop
mov
xchg
insl
mov
mov
xor
sahf
cmp
lahf
push
ret
addr16
out
ret
mov
fs
inc
adc
add
mov
inc
xchg
mov
lock
inc
popf
in
pop
rorl
jg
mov
in
sub
or
data16
add
jmp
gs
add
outsb
scas
sub
or
mov
int
inc
xchg
mov
cmp
or
mov
sub
push
fs
and
pop
cmpl
lea
into
xchg
daa
and
lock
mov
scas
pop
or
popa
and
addr16
test
xlat
or
dec
sti
or
jl
push
jle
inc
xor
sbb
sub
imul
mov
movsb
dec
adc
pusha
add
rcl
fdiv
jecxz
xchg
cmp
pop
xor
or
mov
or
sub
cmc
push
sub
xlat
and
stos
das
jns
and
push
inc
and
das
mov
hlt
jns
out
into
fisttps
cmp
mov
popw
fstp
add
jl
dec
ja
mov
add
sbb
xor
subb
cwtl
int3
lret
jne
and
into
xor
inc
add
cmp
push
pop
movsb
xor
sbb
mov
push
and
sub
xchg
lea
xchg
pop
insl
dec
jae
std
lock
jns
push
ret
sbb
xchg
scas
mov
std
test
xchg
std
test
data16
dec
sbb
in
lds
cltd
aaa
stos
mov
in
jno
arpl
clc
lods
mov
outsl
pop
cwtl
fists
xchg
hlt
mov
mov
sahf
das
adc
jg
fnsave
enter
sub
test
sbb
fdiv
jne
sarl
xorb
pop
inc
icebp
inc
mov
ds
fcomp
inc
cmpsl
leave
lahf
pop
mov
out
mov
push
jb
arpl
mov
or
xor
sbb
scas
and
call
push
pop
push
dec
inc
icebp
into
jo
mov
mov
lods
and
or
insl
stc
bound
movsl
in
xorb
or
sub
and
mov
mov
loop
cmpsl
push
push
mov
or
cltd
dec
clc
inc
pushf
je
popf
xchg
dec
in
test
cmp
pop
pushf
movl
jmp
adc
push
or
pop
ret
xlat
in
lds
jmp
pop
xor
gs
jno
dec
cmp
pop
pop
mov
out
mov
xchg
gs
pop
cltd
orb
out
loope
adcb
sub
fbld
lret
xor
test
cmc
addr16
insl
cwtl
fmull
test
jne
int
adc
pop
cmc
sarl
addl
push
jecxz
repnz
data16
mov
push
adc
dec
adc
icebp
repnz
xor
sub
mov
cmc
ret
mov
sub
arpl
xchg
cmp
sbb
mov
imul
mov
jmp
jp
ret
sahf
clc
in
ss
lods
mov
dec
push
jne
pop
iret
mov
or
cmp
cwtl
outsb
mov
jno
or
std
mov
push
xchg
sbb
ret
sub
fcoms
pusha
sbb
xchg
mov
sbb
and
and
leave
and
arpl
or
push
adcl
in
adc
imul
jns
xor
ficompl
lods
mov
pop
lods
jae
lcall
in
mov
jno
lea
push
dec
imul
loop
loope
inc
push
into
dec
push
cltd
sub
adc
std
sarl
adc
test
xor
xchg
fwait
xor
mov
fcoms
es
movsb
fnstenv
test
aad
pusha
lahf
or
jge
and
inc
movsb
ret
mov
mov
outsl
sub
pop
pushf
add
je
mov
push
cmp
subb
in
jbe
mov
and
imul
cmc
jecxz
lret
xor
addr16
nop
rcrl
cmpsb
mov
dec
ret
addl
ljmp
aaa
test
in
dec
gs
jb
aas
push
adc
mov
push
fisttps
add
lods
adc
repz
xchg
pop
mov
enter
pop
cmp
mov
frstor
into
dec
jl
movsl
xlat
jbe
inc
xor
and
dec
adc
dec
aaa
fs
lea
xor
dec
fsubl
hlt
out
push
inc
mov
push
and
fdivrs
adc
pop
xchg
mov
mov
icebp
pop
sti
es
imul
int
cmpsb
xchg
into
das
xor
movsl
push
adc
in
test
add
or
cmp
cwtl
mov
inc
fimull
push
cmp
cmpsl
pop
adc
rorb
mov
cmp
mov
stos
push
jmp
push
or
fildll
dec
cmp
gs
xchg
xchg
test
adc
push
sub
fldt
jmp
mov
in
add
inc
jge
mov
rcl
and
sbb
mov
cli
cmp
pushl
cs
dec
in
mov
mov
fstp
sbb
dec
or
mov
stc
or
shlb
or
xchg
add
mov
enter
loope
incb
xorl
ljmp
stc
dec
divb
pushf
pop
in
xchg
xchg
jge
pushf
dec
pushf
popa
fnstsw
jle
js
je
aam
roll
mulb
adc
fs
add
jl
sub
jmp
fsubl
jae
pop
mov
push
mov
in
and
sbbb
sub
or
insl
jl
adc
sahf
sti
loope
call
out
aam
push
push
cwtl
add
fstps
mov
xchg
cmpsl
movsl
or
hlt
aas
jbe
dec
iret
jl
cmp
add
push
dec
bound
cmp
dec
popf
sbb
push
cmpsb
or
into
mov
scas
sbb
jo
movsb
testl
ljmp
fdivrs
cmp
inc
xchg
shl
sub
sahf
lgs
insl
dec
jo
insl
in
inc
insl
or
or
loop
insl
arpl
inc
movsl
push
mov
dec
push
fwait
stos
add
cmp
movsl
sub
inc
notb
xchg
cmp
mov
mov
test
fnstenv
xchg
xlat
out
test
mov
jl
jl
mov
dec
fimull
mov
sub
sbb
xchg
scas
add
sbb
xor
test
dec
mov
pop
push
sub
ja
pop
xchg
and
out
mov
dec
cmp
push
push
inc
test
fucomip
sbb
jae
jle
lock
addr16
pop
sub
loop
and
or
jnp
stos
mov
je
pop
sub
int3
or
jecxz
xchg
mov
mov
jae
pop
sub
xchg
aad
mov
aas
mov
fs
outsl
or
push
insl
jo
rorl
cmpsb
stos
dec
and
notl
imul
popa
cmpsb
lock
aad
vandnps
insl
pop
and
aas
loopne
sahf
adc
imul
imul
jno
pushf
add
push
lret
pop
mov
in
and
adcl
mov
repnz
sbb
cwtl
lcall
out
shll
push
lcall
or
push
enter
add
cs
repz
inc
outsl
bound
mov
xchg
imul
push
lds
out
lret
out
push
mov
ret
adc
jl
out
sub
jecxz
xchg
popa
cmpsl
inc
call
xchg
mov
cltd
out
dec
sarb
sub
enter
mov
mov
mov
adc
pop
imul
out
mov
jecxz
dec
push
jmp
pop
xor
stos
push
or
cmp
xchg
add
push
pop
mov
mov
addr16
cs
repnz
divl
dec
pop
pop
test
or
or
sbb
mov
pusha
jnp
jl
push
out
jl
arpl
jecxz
push
push
ja
shrl
adc
or
cmp
out
jnp
lret
test
sub
popa
cs
in
mov
push
pop
jmp
inc
adc
cmp
sub
out
mov
xor
clc
jbe
in
movsl
enter
filds
cmp
push
lahf
jns
pop
mov
xchg
xlat
bound
sub
fcoms
shll
int
scas
sarl
xlat
inc
sub
push
xor
mov
jbe
insl
cmp
enter
ret
sbbb
inc
xor
mov
jg
int3
xor
imul
andl
pop
rcrb
cmp
inc
adc
jne
sub
dec
jle
imul
ret
dec
push
lret
sub
pop
repz
add
daa
insl
push
pop
sbb
adc
testb
rclb
rcll
call
dec
fisubrs
inc
cmp
fwait
xor
jnp
cmp
divb
pop
pushf
es
loopne
aad
shl
aad
iret
cmp
test
cmp
and
xchg
adc
sub
fstps
add
pop
mov
popf
inc
aas
lcall
roll
popa
jb
mov
test
je
xor
mov
in
xor
inc
ss
int
imul
sbb
ja
cmp
mov
out
call
bound
enter
inc
cmc
rorl
int3
pusha
mov
xor
outsl
stos
pop
inc
shll
mov
outsb
jno
fldenv
jg
cmp
and
pop
aad
inc
ds
jge
stc
movsl
mov
or
push
or
or
mov
fdivl
xor
cwtl
xchg
pop
mov
mov
xor
jbe
cmp
cmp
lds
mov
movsl
test
lret
fdivs
xchg
jl
mov
ficoms
das
inc
jge
idivl
rolb
sbb
and
mov
lret
xor
xchg
repz
jae
sbb
sub
jp
in
test
js
fmuls
shrb
pushl
bound
mov
lret
dec
jns
fdivrs
mov
xor
mov
in
dec
ror
in
pop
clc
mov
and
push
movsb
or
add
mov
adc
es
cmp
test
mov
xchg
pop
adc
dec
repz
or
adc
lret
sub
fcoms
xchg
cmp
adc
xchg
loopne
std
stc
pop
jbe
add
add
out
mov
mov
push
sub
mov
or
xor
lcall
dec
mov
lret
or
xor
inc
add
push
push
imul
pop
sbbl
addr16
aaa
add
pop
cmp
shr
out
sub
add
int
pusha
xchg
inc
cmpsb
adc
popf
mov
loop
mov
sub
pusha
int3
cld
xor
fwait
lret
dec
xlat
or
imul
shlb
inc
jnp
imul
xchg
fidivrs
xchg
pop
lahf
add
imul
xor
cmp
inc
popf
inc
loope
nop
fistps
mov
scas
sbb
inc
adcb
adc
dec
xchg
insl
push
aas
push
jnp
xor
shl
xchg
sbb
pop
repz
lahf
aam
inc
mov
xchg
jmp
dec
outsl
test
jle
int3
mov
cmp
xor
scas
ss
xchg
mov
int3
jp
pushf
cmp
jmp
arpl
imul
xchg
pop
cmc
jg
dec
aad
lret
fs
adc
jmp
outsb
xchg
inc
jae
mov
inc
rcrb
push
push
xor
scas
test
push
cltd
jnp
ljmp
adc
pop
sub
push
add
fsubl
sbb
mov
js
leave
inc
addr16
lds
stos
mov
sbb
cwtl
out
push
xor
pop
xor
jp
xor
adc
add
push
aaa
ret
fistl
xor
bound
cltd
cmp
mov
shlb
add
dec
or
rclb
bound
pavgb
and
ret
push
mov
xor
js
pop
jnp
and
cmpsl
xor
mov
scas
push
ss
pop
push
add
pop
push
push
add
je
das
stos
mov
fstps
jg
repnz
sbb
lods
jg
mov
das
pop
stos
popf
push
pushf
jne
adc
or
or
enter
or
add
xchg
sbb
xchg
dec
rcr
scas
jmp
lcall
inc
and
in
mov
popa
add
mov
loop
notl
repz
lret
rcll
daa
jbe
push
or
ret
das
cli
xor
jecxz
and
add
rorb
inc
sahf
adc
bound
cwtl
jecxz
mov
sbb
inc
lcall
in
mov
in
jne
jo
rorb
mov
decl
std
push
inc
shrb
int
adc
pop
pop
jp
mov
mov
lods
pop
aas
sahf
fcomps
dec
jg
jl
aas
mov
popl
xchg
lock
jne
pop
cwtl
nop
pop
call
ret
xchg
dec
cmp
sbb
xor
inc
mov
jae
add
ds
mov
mov
cmc
inc
ss
pop
aas
dec
outsb
ds
popa
pop
xor
mov
test
clc
aad
cmp
std
push
clc
mov
jecxz
inc
lcall
iret
fsub
sbb
mov
enter
and
out
fcmovbe
jle
lock
add
ja
iret
jge
sbb
and
movsb
out
loop
cmc
mov
test
dec
xor
imul
mov
dec
icebp
push
sub
shll
or
xor
sub
aaa
dec
addr16
mull
add
or
je
lcall
dec
pop
xchg
ljmp
sbb
sbb
in
popf
mov
ret
xchg
les
test
idivb
mov
mov
out
cmp
and
cs
lock
fwait
xor
orl
les
ret
lahf
jb
sub
rcrl
cs
mov
mov
fidivrs
sahf
push
inc
in
xchg
cmp
cmp
sbb
lret
fcmovne
stc
inc
push
loopne
je
or
jbe
aam
fisttpl
repnz
fisubrs
cmp
adc
loope
stos
inc
push
jno
fdivrs
sub
pop
out
fs
mov
js
push
aas
movsl
pop
xchg
dec
cmpsb
push
arpl
inc
mov
add
inc
pop
sbb
add
out
push
or
xchg
fisubs
pop
and
pop
dec
mov
out
pop
sbb
leave
ljmp
mov
scas
lock
outsb
mov
sub
jmp
mov
imul
fistl
enter
lea
outsl
orl
sahf
cmp
push
cld
pop
sarl
les
jp
les
pop
push
xchg
leave
or
xlat
and
xor
add
mov
repz
xor
jns
jecxz
mov
in
stos
jbe
or
cmp
xor
pop
outsl
movsb
mov
cld
inc
lods
rorl
out
andl
add
jp
pushf
sub
stos
jo
imul
jle
mov
or
mov
orb
sub
aas
push
mov
lea
je
mov
das
jne
add
loop
cli
push
push
cmp
cmp
inc
repnz
mov
stos
int3
fildll
out
imul
iret
sub
repnz
jnp
adc
push
mov
pop
scas
xchg
repnz
aam
shll
xor
inc
mov
dec
cli
inc
lods
cmpsb
loopne
xchg
icebp
sbb
sbb
arpl
ficoml
sbb
pusha
test
data16
ret
int
lock
push
repnz
xchg
ret
gs
push
or
add
mov
xchg
lret
dec
notl
xor
pushf
out
iret
jg
cltd
bound
jnp
scas
sbb
adc
es
sub
popa
sub
pushf
lahf
lea
jne
sbb
test
add
xchg
pop
movsl
cmp
das
xor
out
rolb
push
or
mulb
mov
mov
scas
popf
call
dec
pop
mov
cltd
repnz
sbbb
lods
shll
xchg
testb
push
jle
inc
sbb
push
jb
xchg
sbb
inc
outsb
out
dec
lods
enter
les
imul
cmp
xlat
arpl
out
stos
fidivs
mov
call
adc
leave
and
xchg
adc
insl
sub
push
mov
dec
adc
lds
ret
addr16
shll
xlat
add
aad
int
shrl
or
imul
out
movsb
push
sbb
jp
cmc
xor
mov
ret
mov
inc
pop
lret
xor
es
shl
movsb
and
call
jnp
cmp
rcrl
fbld
mov
shrb
loopne
sti
jmp
mov
ret
cmp
push
dec
mov
sub
enter
dec
mov
icebp
les
enter
popf
and
repz
movsl
int
mov
lock
mov
sbb
fcomps
fwait
dec
sub
jno
push
inc
xorb
dec
test
or
les
movb
xchg
jmp
test
jmp
mov
pop
mov
outsb
je
imul
adc
loop
shrb
imul
jle
fsubrs
pop
xchg
test
loop
push
lds
jne
cmc
ja
ds
es
adc
mov
adc
ret
cmp
enter
xor
enter
xor
test
adc
stos
inc
shlb
pop
mov
xor
xchg
arpl
loope
stos
adc
outsb
icebp
sbb
mov
stc
lret
jl
insb
pop
popa
aaa
es
mov
push
inc
int
cmp
in
fisubs
xchg
ret
notl
jbe
mov
leave
and
mov
ja
outsb
inc
xor
mov
aas
add
rolb
add
mov
mov
cmp
or
sbb
movl
inc
cmp
orl
sub
and
inc
cwtl
mov
push
in
xor
ficomps
icebp
fcos
sub
push
adc
stos
cltd
mov
orb
pop
pop
call
mov
or
push
mov
push
cwtl
xor
xchg
push
iret
pop
xor
std
and
cmp
lcall
mov
add
or
xchg
push
mov
into
outsl
sub
adc
mov
adc
jae
mov
mov
jb
sbb
cli
xchg
push
rorb
sbbb
jle
jg
push
aad
aas
and
or
scas
sub
xchg
mov
movsb
adc
jbe
xor
mov
ss
ds
aas
cmc
fs
cmp
inc
push
push
add
or
ja
jo,pt
stos
mov
out
repnz
sub
ds
jg
pop
xor
push
iret
mov
sub
mov
repz
shl
push
in
jp
imul
jl
cmpsl
mov
arpl
sub
jne
aaa
mov
pop
cld
aad
repnz
gs
test
fsubrp
cmpb
jecxz
jp
test
sub
sub
xchg
xchg
pop
mov
scas
jae
pop
stos
js
dec
cwtl
push
aad
roll
and
mov
insl
int3
xchg
lret
ljmp
mov
sub
mov
add
bound
inc
insb
push
mov
push
int3
and
in
outsb
push
outsb
pop
dec
cwtl
push
pop
lods
inc
out
stos
cltd
jmp
out
xor
iret
xor
mov
ret
fildl
jno
adc
fcmovnb
mov
popf
jecxz
popa
jg
mov
mov
das
int
jae
add
mov
push
fidivrl
mov
pop
clc
sbb
and
movsb
mull
imul
or
mov
ljmp
in
jb
jge
aad
jge
and
or
mov
jbe
inc
mov
mov
push
xchg
cmp
gs
xor
xchg
sbb
dec
mov
dec
cmpb
sti
dec
sbb
xor
xchg
jns
and
mov
rorl
push
jl
mov
out
adc
mov
mov
leave
ljmp
mov
jp
fisubrl
adc
repnz
or
ret
fwait
and
xchg
outsl
mov
sbb
scas
gs
jbe
pop
lcall
andb
dec
inc
xlat
mov
jge
pop
ds
imul
adc
jecxz
cmc
jg
fdivrl
sub
push
fs
mov
xchg
xchg
xchg
add
mov
unpcklps
add
sbb
sub
dec
sub
pop
out
out
pop
sub
xchg
rcl
jmp
pop
ret
mov
js
xchg
nop
gs
out
adc
mov
ret
push
dec
scas
jmp
out
jmp
std
sbb
aaa
int
lods
repz
repnz
icebp
sub
addr16
cmp
cld
lods
inc
mov
mov
pop
ficoml
les
repz
or
cmp
dec
fnstcw
pushf
ret
and
negl
dec
in
int
ds
pop
aad
scas
enter
and
fs
push
pop
loop
inc
add
addr16
add
and
movsl
aas
mov
pop
jl
xchg
xchg
ret
push
mov
aas
shrb
in
mov
cmp
ds
sbb
inc
lock
test
call
pop
jnp
xor
notb
adc
xchg
and
jl
cmp
sub
jne
gs
stos
xchg
notb
lea
ret
pop
je
and
push
jae
mov
inc
enter
push
pop
inc
aad
outsb
push
or
ficoml
mov
je
loop
sar
push
jecxz
cmp
in
gs
test
repnz
push
mov
ljmp
mov
rcrb
ret
push
mov
or
adc
or
cld
lahf
pop
mov
add
sub
add
test
lahf
into
rolb
js
bound
adc
mov
pop
pop
fsubs
pop
or
lahf
dec
pop
inc
sti
inc
scas
jbe
push
aas
lods
and
push
movsl
aad
mov
sub
fcomi
xor
pop
jnp
inc
repnz
push
hlt
ficoml
popa
add
insb
adc
cmc
jge
insl
cmp
jle
sahf
mov
jns
into
aaa
sbb
dec
xor
pusha
jo
in
loope
add
push
mov
push
inc
mov
mov
test
sub
pop
popa
push
mov
in
repz
arpl
push
xor
jno
push
fdiv
pop
cmpsl
or
mov
dec
inc
leave
out
inc
mov
stc
lods
fiadds
push
or
sub
out
xchg
jne
cmp
daa
hlt
test
add
pop
rcl
lods
jge
mov
mov
dec
xor
lret
jne
pop
fsts
mov
mov
cs
sub
pop
nop
dec
lahf
inc
ja
lods
sahf
xchg
sar
int
sbb
jns
mov
bound
add
lds
mov
inc
out
sarl
sbb
or
mov
inc
test
lds
cmp
inc
jge
sub
xchg
mov
or
pop
lret
cmpsb
movsl
mov
test
stos
inc
cltd
inc
fstps
jecxz
xor
fwait
ss
adc
sbb
jae
mov
lcall
pop
inc
sub
xchg
jmp
push
push
xlat
lea
push
cmp
pop
xchg
mov
out
sub
in
pop
push
ss
ret
pushf
dec
cwtl
push
jo
mov
mov
push
push
xor
dec
push
jns
shl
rcll
xor
add
sub
int
and
insb
je
cld
inc
xchg
add
outsl
std
pop
out
loop
shlb
mov
mov
call
outsb
js
loope
ret
movsl
mov
out
repnz
dec
inc
xor
xchg
ljmp
cwtl
in
mov
sbb
sub
jecxz
sbb
mov
pop
ljmp
sti
pop
or
jg
scas
mov
xor
mov
xor
sahf
sub
jl
mov
std
sub
aas
arpl
inc
notl
in
lret
inc
mov
mov
lret
xchg
dec
fildl
in
dec
fiaddl
out
mov
clc
push
sbb
sub
adc
jb
mov
jmp
jne
imulb
xor
inc
mov
mov
repnz
in
mov
xlat
test
xlat
into
pop
mov
rcrb
pusha
jae
mov
jb
gs
loope
push
pop
scas
cmpsl
lea
mov
inc
mov
loope
dec
dec
add
gs
and
fnstsw
test
sbb
cmp
jge
dec
cli
pop
push
add
jo
and
dec
pop
bndstx
jge
cmc
xchg
icebp
and
fstps
inc
xor
in
lahf
xor
push
ss
push
inc
adc
aas
push
xor
ds
add
jp
inc
in
jno
mov
cld
dec
rcrb
sbbb
hlt
jp
or
stos
or
mov
shll
call
or
mov
xor
and
mov
jbe
xchg
xorb
pop
in
aas
popf
addr16
mov
shlb
or
mov
xchg
loop
sahf
sti
xchg
cmc
repnz
sbb
out
and
int
push
sub
cmp
inc
in
jecxz
fs
cmp
outsl
leave
sbb
or
adc
std
push
xor
movsb
push
fiaddl
mov
cmp
jecxz
sti
jae
sbb
pop
je
test
aas
mov
imul
sbbl
xchg
pop
les
scas
lcall
dec
add
sar
ja
add
xchg
movsl
jecxz
stos
jmp
xorb
push
xor
imul
daa
sub
rdtsc
lret
repz
insl
jl
dec
lahf
pop
adc
repz
push
test
mov
sbb
lret
test
fstps
rcrb
in
cwtl
fcoms
inc
jns
xor
inc
pop
shld
clc
pop
out
and
mov
repz
jb
jbe
mov
sbb
lds
cmp
icebp
push
or
sub
jge
pop
aaa
inc
mov
gs
mov
mov
popf
or
and
cmp
sub
dec
pop
lods
outsb
pop
movsb
pop
mov
shr
nop
sarb
in
aam
adc
js
int
push
pushf
call
xchg
jns
sub
mov
jne
clc
nop
ret
mov
pop
fcomps
mov
mov
ret
add
rol
sahf
daa
test
or
sub
in
sahf
mov
hlt
mov
addr16
cs
test
jl
jecxz,pt
mov
cmp
in
iret
adc
mov
add
rol
in
daa
inc
mov
addr16
nop
fsts
popf
repnz
scas
pop
call
and
imul
mov
mov
mov
fildll
inc
mov
inc
shl
mov
std
je
ljmp
push
leave
adc
lods
test
pop
movsl
xchg
outsb
mov
adc
push
out
mov
pop
outsl
pop
popl
xchg
sbb
arpl
call
push
dec
jns
rorl
push
mov
test
sbb
pusha
xchg
jl
fwait
lea
mov
mov
mov
jb
or
push
shl
lret
in
movsb
mov
es
or
cltd
mov
push
je
mov
push
rorb
cmc
insb
inc
jbe
stos
cmp
bound
data16
std
aam
hlt
xchg
daa
inc
mov
push
mov
cmp
cli
mov
xchg
fcmove
adc
push
push
test
stc
cmpsb
loope
xchg
popa
xor
ja
andl
cld
xchg
out
test
jl
sbb
outsb
imul
cmpl
ss
inc
js
outsb
into
push
or
decb
mov
mov
xchg
into
rol
jp
jecxz
mov
sub
imul
inc
mov
push
xchg
gs
xchg
out
fnsave
imul
xchg
cmp
cwtl
push
es
int3
inc
imulb
push
dec
or
dec
scas
test
ja
push
pop
les
scas
aad
repnz
cltd
sub
and
ror
ret
shrb
and
ja
lds
push
repz
int3
mov
and
insl
packssdw
push
pop
push
xor
hlt
mov
gs
dec
fcomip
ja
int3
popa
push
lods
not
fwait
pop
xor
adc
and
or
and
add
push
decl
and
or
push
scas
sbb
mov
stos
mov
pop
sbb
fdivp
inc
pop
mov
pop
inc
add
loop
es
orb
add
imul
jbe
fildll
das
jg
test
loop
repnz
roll
insl
pop
lock
push
sbb
jg
add
sub
sbb
js
and
int
sub
pushf
loop
xor
jmp
xchg
inc
aaa
loope
sub
outsl
decl
jmp
fs
icebp
xchg
sbb
int
repz
jge
pop
jmp
and
jecxz
movsl
mov
mov
mov
mov
gs
sarb
loop
je
out
or
xchg
imull
sbb
cmp
mov
imul
lods
enter
aad
adc
clc
sbb
mov
imul
adc
and
xor
insl
mov
fisubrl
and
into
insl
in
andb
sub
rcr
pop
sbb
test
inc
sbb
fidivs
cmp
roll
shlb
rsm
sbb
aad
bound
jne
in
popa
daa
out
lahf
jp
add
aad
mov
js
cli
xchg
mov
lea
movsl
mov
pushw
in
leave
jns
cwtl
and
push
add
call
out
and
pop
mov
jle
test
xchg
xor
or
ljmp
insl
scas
repz
inc
test
mov
subb
fistps
jb
xchg
pop
jl
test
fnstcw
stos
popf
dec
dec
jbe
inc
xchg
or
or
mov
popa
arpl
sub
pop
add
mov
out
cmp
xlat
pop
pop
xor
cmpsb
xchg
adc
cli
clc
lods
sbbb
mull
and
inc
movsb
cwtl
adc
aaa
test
int3
cmp
popa
outsb
cs
xchg
inc
xchg
xor
mov
inc
imul
mov
lods
leave
xor
out
push
cmp
push
pop
clc
jg
mov
stos
pop
dec
imul
and
lcall
imul
mov
mov
inc
inc
popa
or
cmp
push
test
jo
inc
dec
mov
in
mov
dec
arpl
mov
xchg
and
es
mov
xchg
stos
or
add
mov
cmc
sti
mov
cmpsl
cmp
shll
mov
imul
test
ss
aaa
lret
add
mov
addr16
es
sub
pop
sbbl
pop
andb
lock
cmp
je
jbe
push
dec
rclb
jae
mov
adc
test
cli
aaa
dec
lods
rcr
out
push
fwait
lret
in
enter
push
sub
addr16
stos
jae
jge
outsl
addr16
mov
pop
sbb
sbb
nop
add
iret
pop
inc
fldt
push
jp
stos
jno
std
push
stc
enter
pop
mov
lahf
pop
into
sub
push
add
and
mov
or
push
imul
rclb
out
daa
inc
sbb
loope
mov
test
push
leave
cmp
in
sub
outsl
dec
xchg
jle
mov
movsb
mov
mov
ret
xchg
scas
rorl
or
dec
fsubr
in
mov
in
dec
ss
or
pop
dec
push
pop
xor
fsubrl
add
push
sahf
jne
loope
aas
cltd
inc
mov
clc
insl
inc
xchg
lea
movsb
test
js
mov
scas
mov
jge
push
mov
arpl
das
jne
les
iret
push
mov
pop
ffreep
out
dec
sub
dec
mov
pop
pop
pop
xor
das
call
push
daa
scas
pop
fldt
add
fidivl
and
das
sbb
add
pop
cmpsl
cmp
cmp
cmp
leave
inc
popf
or
xchg
out
inc
cmp
adc
mov
fadds
stos
jmp
jne
mov
testb
je
int
dec
movsl
push
xor
and
push
push
fldenv
jge
sub
stos
cmp
add
out
ds
xor
adc
aaa
and
outsl
jne
lcall
lret
dec
les
xor
aad
and
push
jle
in
cmp
sbb
push
dec
out
loopne
sub
rcll
or
fisubl
push
or
ret
roll
add
mov
jne
xor
cmp
sbb
shll
push
cli
outsl
inc
push
js
sti
mov
adc
out
jg
sub
pop
adc
cmpsb
repnz
sbb
dec
imul
mov
dec
imul
daa
out
jecxz
incb
cmp
fnstsw
or
dec
std
ret
arpl
mov
test
jecxz
mov
loopne
dec
divl
cmp
loope
xchg
mov
ficomps
popf
sub
out
ret
icebp
mov
repnz
cs
jae
imul
mov
jnp
mov
cld
out
mov
mov
insl
enter
rclb
mov
sub
mov
add
jne
adc
cmpsl
ror
dec
jp
lret
sub
mov
hlt
xchg
icebp
mov
xor
mov
imulb
sub
aam
push
mov
and
movb
ret
ljmp
faddl
mov
jmp
sub
fdivs
notl
cmc
mov
jecxz
das
lods
aaa
mov
outsl
insw
jno
sbb
mov
roll
sti
leave
jo
gs
cwtl
xlat
sarb
push
or
fldenv
push
inc
dec
inc
loop
test
push
sub
insb
out
repnz
shll
adc
xchg
cmc
addr16
movsl
pop
add
adc
xchg
daa
xor
jbe
adc
loopne
adc
out
jge
js
mov
lods
std
push
jns
xchg
fs
add
movsl
mov
dec
xchg
rcrl
lods
fdivrs
xor
lret
lcall
pop
adc
pusha
scas
in
insb
cmp
call
push
cltd
lods
sti
aas
jae
or
ror
xchg
push
pop
inc
mov
jmp
out
jg
adc
xorb
subb
inc
pop
fs
lds
push
cmpsl
jo
outsb
repz
mov
mov
jmp
in
jp
mov
xchg
lea
mov
mov
lods
ret
xor
out
sbb
lds
and
fldenv
sbb
dec
shrl
jl
dec
inc
cmp
test
jg
xor
push
mov
fimuls
incb
adc
dec
add
stos
mov
jne
imul
aad
add
lods
dec
adc
or
test
enter
test
loop
js
stos
lret
sbb
adc
mov
or
repz
lods
popa
rorb
cmpsb
jle
or
filds
icebp
adc
inc
mov
dec
xor
add
adc
mov
arpl
mov
call
pop
imul
mov
and
xchg
dec
test
fs
xor
aam
xchg
arpl
inc
lods
jmp
std
mov
and
pushf
push
jge
fcoms
cwtl
nop
loop
inc
cltd
xchg
cmpsl
and
pop
or
mov
imul
inc
cli
fmuls
mov
test
arpl
negb
psubq
sub
pop
pop
mov
xchg
js
jmp
push
pop
mov
jg
pop
lcall
popf
add
xor
sahf
sti
popa
mov
dec
cltd
ret
jl
mov
shrd
xor
imul
imul
jmp
or
jo
roll
sub
fidivs
or
cmp
out
xchg
jl
inc
or
call
adcb
or
cmpb
lcall
mov
push
jge
imul
pusha
mov
xchg
adc
clc
icebp
pop
test
mov
or
sbb
dec
pushf
out
pop
lods
xor
sub
cmp
xchg
push
iret
sub
sti
stc
add
sti
cmp
xor
xchg
loop
loope
lods
xchg
sub
pop
nop
repnz
push
mov
mov
int3
inc
mul
int3
lret
and
sbb
outsl
inc
popf
xchg
cmpxchg
push
mov
or
lods
xchg
imul
sbb
bound
mov
dec
mov
loop
lret
das
jae
mov
sahf
xor
cmp
pop
xor
mov
lret
xlat
jno
scas
sub
add
dec
outsb
fiaddl
inc
mov
mov
and
ja
push
aaa
sbbb
out
test
loopne
inc
into
or
inc
call
lret
and
incl
dec
dec
loopne
mov
or
pop
xor
fcmovu
pop
fcomi
push
aad
cwtl
outsl
cmova
sub
fwait
push
pop
jb
in
pop
add
call
sahf
icebp
add
mov
mov
nop
adc
mov
dec
movsb
and
sbb
je
push
iret
scas
add
sub
jnp
mov
jl,pt
pop
jb
push
pop
lcall
into
mov
mov
xor
sbb
xchg
mov
mov
or
roll
sbb
ficoms
and
ret
xlat
jp
jne
mov
xchg
leave
inc
cmpsl
test
xorl
lcall
loopne
push
arpl
xchg
xchg
inc
rol
pop
or
or
add
pop
fmul
stc
movsl
jge
cmp
mov
mov
cli
cmpb
fiaddl
std
pop
repz
rorb
mov
jne
sbb
cli
lahf
jns
or
mov
mov
in
push
mov
int3
loop
lods
xor
stos
or
nop
enter
dec
nop
mov
iret
push
outsl
je
pop
icebp
add
es
jmp
in
mov
add
jg
push
cwtd
pop
mov
adc
lret
lret
jp
and
push
scas
and
mov
mov
dec
clc
mov
or
mov
ror
scas
push
mov
imul
out
xor
iret
pop
and
rolb
xchg
outsl
jg
cmp
nop
movsl
inc
dec
or
dec
push
mov
sti
lret
pop
or
lods
cmpsl
jmp
xor
loope
add
sbb
add
enter
arpl
xor
js,pn
ja
out
push
cmc
hlt
into
in
in
scas
es
pop
and
pop
stc
push
out
cmp
xchg
lcall
in
cmc
lret
mov
dec
adc
sahf
hlt
in
fwait
lahf
xor
jmp
push
inc
movsb
adc
mov
cmpsb
in
mov
nop
mov
aad
push
jns
pusha
iret
cmpsb
mov
cs
negl
jmp
jae
and
and
loop
loopne
or
lcall
filds
inc
mov
add
sti
jge
sub
div
and
jecxz
lods
push
xchg
out
jmp
ds
loope
inc
data16
subl
call
mov
sub
loopne
cmp
add
fistl
mov
in
repnz
or
test
andl
sbb
jnp
pop
mov
fsubr
jae
insb
adc
mov
xchg
push
js
mov
lods
js
into
pusha
sbb
or
mov
cmp
and
push
in
mov
adc
das
mov
mov
out
xor
or
xor
out
lods
ss
mov
daa
lea
push
add
dec
jbe
insb
push
sbb
test
sbb
pop
jno
inc
mov
adc
cmp
movsb
ficoms
int
jg
nop
out
pop
arpl
test
push
sti
dec
and
mov
pop
aas
js
lret
dec
dec
jnp
cmc
mov
loopne
ret
js
or
loopne
mov
lcall
call
scas
jne
pop
std
cmp
and
and
dec
repz
daa
movsl
sbb
mov
or
adc
filds
cli
mov
data16
jg
and
pop
int3
ljmp
sbb
mov
or
test
mov
xor
dec
rcll
mov
adc
jecxz
pop
and
popa
cmpsb
add
add
pushf
testl
pop
add
sti
mov
dec
push
adc
dec
inc
flds
mov
jle
push
add
fisttpll
dec
jp
inc
ljmp
push
and
dec
mov
clc
dec
xorb
into
aaa
mov
mov
ret
inc
add
xchg
hlt
mov
jb
cmp
dec
movsb
cltd
les
jle
insl
mov
das
cmp
lea
mov
mov
aad
shll
cmp
mov
loope
pop
pop
and
pusha
shl
ds
in
cwtl
bound
mov
lcall
cmp
cld
jne
cmc
push
mov
and
rclb
sti
ss
bound
mov
shrl
pop
repnz
sti
xchg
and
ss
aaa
sbb
pop
mov
hlt
jne
ret
push
dec
add
lcall
iret
inc
data16
xchg
jno
sbbb
xchg
loopne
mov
adc
jbe
shrb
or
xchg
repnz
sti
push
and
cmp
shl
xchg
xor
and
stos
cmpsl
mov
mov
insb
or
or
enter
adc
inc
inc
jmp
jae
mov
cwtl
lea
push
and
leave
std
aas
pop
stos
add
sub
stc
icebp
inc
jo
sub
cmp
adc
sarb
fs
cltd
pop
adc
jo
push
cmp
jnp
popa
daa
pop
in
adc
dec
inc
pop
add
push
stc
xchg
jnp
sbb
sbb
mov
sbb
fistl
testb
dec
mov
or
popf
mov
test
add
insb
out
xchg
lahf
je
push
xchg
xchg
cmc
jge
jecxz
rorl
lds
mov
sbb
int
dec
sbb
je
stos
jp
ljmp
inc
outsb
lds
lock
ficoms
mov
std
and
and
hlt
cmp
int
jb
mov
ljmp
mov
inc
jle
mov
cwtl
cmpsl
dec
sbb
sub
and
add
pop
into
mov
gs
sahf
lea
scas
jnp
xor
test
or
pop
mov
std
ljmp
cltd
stos
insl
in
add
daa
mov
xchg
popf
push
xor
add
test
movsl
lret
pop
mov
jmp
stos
aaa
cwtl
jne
cmpl
dec
pop
xchg
sub
movl
sbb
mov
dec
mov
pop
jg
push
lea
scas
loop
cwtl
jno
aam
stc
mov
repnz
xlat
add
mov
cmp
rcr
imul
test
dec
pop
or
adc
jl
sub
adc
jns
and
sar
outsl
mov
repz
jne
int3
gs
add
outsb
adc
push
jle
pop
dec
aaa
xchg
mov
dec
inc
out
dec
jmp
sbb
cwtl
lahf
xor
mov
imul
lahf
dec
cli
out
mov
js
iret
xchg
xor
push
mov
cwtl
lds
loopne
sub
inc
ficoms
repz
icebp
cmp
pop
outsl
pop
jg
xor
ljmp
jmp
or
pop
dec
inc
insb
mov
mov
sub
mov
pop
or
pushf
pop
scas
mov
dec
mov
repz
pop
ss
fisubrs
movsb
push
sub
das
mov
adc
inc
mov
sbb
ds
inc
fdivs
test
xchg
cs
jbe
es
adc
loopne
mov
in
test
jle
ds
xchg
cmp
fcmovu
fdivs
negl
fmull
mov
jnp
loopne
pop
mov
ljmp
test
inc
cmp
xchg
imul
xchg
jnp
insl
scas
mov
inc
and
pop
sub
pop
inc
or
hlt
inc
cld
dec
je
stc
mov
inc
hlt
cmp
cli
ret
pop
mov
sub
aam
xchg
xor
mov
xor
shrl
mov
aam
mov
inc
cmc
mov
cmpsb
enter
repz
jge
ds
pop
lods
pop
mov
cmc
pop
stos
inc
adc
xor
inc
mov
es
mov
mov
cmpsb
rolb
and
inc
lock
push
mov
xchg
pop
jb
xchg
lret
shl
or
shll
jmp
shll
divb
mov
pop
out
shl
repz
popf
pop
jmp
orl
xor
or
stos
sbb
aam
sbb
mov
cmp
clc
jnp
add
pop
fwait
jae
nop
sbb
mov
mov
xchg
and
sarl
stos
test
add
in
sbb
sbb
sbbb
js
dec
jb
inc
aad
adc
push
fcoms
xor
mov
fbstp
fildll
jne
xchg
cmp
int3
cwtl
lock
jge
jbe
rcl
aas
jge
pop
jae
jmp
fcomps
sahf
ret
push
das
sub
push
out
enter
aam
mov
cmp
divl
jmp
cmpsb
dec
jno
inc
in
and
mov
cmp
mov
shll
cli
xor
mov
lea
gs
jp
sahf
dec
int3
testl
mov
lahf
sub
jae
into
sub
dec
fstl
fwait
pop
hlt
push
in
arpl
push
and
fbstp
popa
dec
into
outsl
insb
mov
iret
sub
btc
test
out
iret
popf
xlat
lods
fstpl
mov
cmpsl
out
clc
test
xlat
iret
jnp
jle
les
lea
ss
out
push
sub
or
fsubp
pusha
les
push
and
gs
cmp
sub
sbb
add
add
shr
mov
jnp
es
mov
xchg
push
loopne
subb
xchg
add
mov
pusha
mov
adc
mov
imul
fwait
lods
push
jo
pop
xor
jae
test
movsl
sub
jo
lock
pop
rol
outsb
test
stos
add
stc
adc
jns
inc
and
xor
mov
stc
ficoms
int
fcomps
rcll
and
leave
div
sbb
fdivl
mov
into
sahf
rorb
fnsetpm(287
add
xor
adc
mov
mov
lods
mov
iret
mov
popa
mov
cltd
jnp
xchg
or
dec
test
mov
mov
dec
adc
mov
nop
hlt
fistpll
sbbb
inc
mov
div
jecxz
pop
rcll
cmpsb
xor
sub
les
mov
jl
jne
jge
enter
push
xor
adc
jl
je
repnz
movsb
jnp
xchg
mov
int
mov
lds
ffree
adc
call
sub
jb
icebp
pushf
fisttpll
fwait
sbb
sahf
mov
mov
or
outsb
cmp
or
push
dec
inc
or
sub
jae
rcrl
sub
or
imul
mov
cld
cs
dec
xor
jnp
jne
sahf
scas
push
loopne
inc
mov
xchg
add
and
sbb
mov
xor
in
cmp
dec
cmp
add
xor
lret
call
jno
js
out
and
mov
pusha
movsl
and
lds
jns
pop
cmp
add
and
pop
xchg
adc
xchg
lods
push
repnz
dec
lret
adc
cs
dec
mov
imul
xlat
fsubrs
int3
mov
inc
adc
aam
or
call
sahf
nop
loop
ds
fs
addr16
adc
jae
scas
scas
int
push
fidivrs
xor
out
adc
inc
sub
mov
mov
mov
xchg
std
cs
rol
arpl
cld
mov
pop
sbb
repnz
cmp
mov
sbb
or
lcall
dec
cmp
or
mov
out
test
inc
xchg
pop
jl
enter
push
jo
leave
enter
repz
xor
pop
mov
mov
pop
push
movsl
mull
enter
sbb
ljmp
jecxz
xorb
cmp
fsubrl
fadds
repnz
pop
mov
iret
add
movsl
outsb
adc
or
adc
mov
lahf
scas
cmp
pop
push
push
mov
adc
xchg
cmp
push
pop
cmc
lds
lea
loop
loop
sub
jg
stc
jno
enter
push
mov
xchg
or
adc
rol
xchg
or
test
sub
insl
inc
loop
lock
adc
cmp
fsubr
aas
and
pop
out
mov
jmp
mov
lods
xchg
push
pushf
or
mov
rcl
pop
ja
add
push
and
test
ffree
bts
ja
pop
inc
scas
les
pop
and
inc
arpl
cmp
pop
cmp
sbb
sub
jecxz
jnp
out
sbb
jnp
iret
outsb
loope
adc
in
aaa
adc
int3
sbb
aam
jo
ds
clc
sbb
jge
add
cmp
dec
push
jo
mov
rcrl
add
jns
addl
out
js
stos
icebp
inc
das
jae
lock
or
mov
and
cwtl
rol
push
jnp
gs
push
push
push
sbb
mov
xor
call
arpl
leave
imul
jae
imul
adc
bnd
outsl
inc
hlt
and
ret
sbb
scas
sub
stc
push
xchg
mov
push
data16
xchg
dec
inc
or
sub
cmp
push
test
loope
push
aam
inc
push
stos
cmp
lret
jno
mov
add
mov
push
xchg
xor
test
ja
jno
jbe
es
jbe
push
in
and
pop
scas
outsl
pop
repz
into
bound
mov
stos
or
test
xchg
test
stc
dec
mov
inc
mov
int3
and
or
cmp
loopne
testb
loopne
rcll
and
inc
push
test
insb
sbb
cmpsl
mov
mov
jp
nop
jnp
adc
sub
sub
push
test
dec
loopne
sbb
pop
leave
fwait
ss
push
sbbl
mov
movsb
pop
lcall
dec
pushf
addr16
jae
mov
pop
cli
mov
dec
add
and
mov
push
sarb
dec
xor
sbbb
mov
jo
pop
mov
jo
ja
adc
popa
inc
bound
inc
dec
ret
outsb
cli
push
jg
movsl
rolb
out
vmovaps
push
jmp
aas
xchg
lahf
adc
push
pop
fxch
sbb
mov
push
out
inc
ja
and
ss
mov
push
pop
push
inc
mov
xor
stos
adcl
inc
loope
sub
sub
xor
into
push
jb
jno
ds
pop
pop
ja
jmp
inc
fldl
or
push
inc
or
out
test
jp
add
lock
add
popw
lahf
lock
inc
lret
loope
jmp
es
adc
js
stc
aaa
and
iret
mov
sub
enter
cmpsb
imul
int
imulb
ljmp
shl
ret
test
loop
mov
mov
and
jnp
repnz
pop
xor
in
sub
imul
xor
out
arpl
sub
pop
push
or
out
add
bound
sbb
cld
outsb
ficomps
sbb
bound
jecxz
test
xchg
cmp
shlb
mov
in
and
xor
lock
and
jle
shlb
repnz
ss
inc
popf
test
popl
ss
inc
adc
mov
jecxz
dec
inc
shlb
push
repz
inc
dec
fistps
in
imul
xchg
jae
pop
sub
push
jo
jl
pop
repz
inc
mov
fwait
fldenv
sbb
mov
aam
adc
lret
movl
cltd
ljmp
pop
adc
gs
cltd
sub
mov
dec
jne
and
mov
movsl
outsl
xchg
cmp
inc
push
mov
xchg
popa
lret
sbb
lods
out
ss
mov
scas
dec
sub
loop
fisubl
fs
push
jo
sub
enter
inc
stos
pop
push
cmp
cmpsl
in
pop
push
mov
js,pt
lods
pop
imul
push
mov
pop
sti
cmp
sbb
sbb
fwait
icebp
cltd
dec
mov
push
cwtl
mov
and
es
mov
pop
jmp
cvtps2pi
flds
leave
pusha
loopne
add
sub
jnp
ljmp
push
jecxz
xchg
xchg
sbb
or
xor
scas
sub
adc
cmp
int
add
subb
dec
push
mov
flds
or
insb
push
enter
loope
or
loop
das
adc
es
mov
or
test
push
bound
loope
sub
testb
pop
jecxz
pop
cmp
jns
out
insw
fimull
gs
imul
inc
pop
mov
hlt
xchg
in
sub
xlat
mov
adc
xchg
bound
fcompl
or
push
popf
adcb
and
sub
xchg
inc
cmpsb
mov
in
fiadds
sub
scas
sbbl
and
xor
outsb
je
pop
mov
mov
sti
mov
gs
mov
pop
push
xor
repz
hlt
mov
shrb
gs
push
jg
jae
pop
popa
imul
fdivp
or
test
push
fcomps
add
das
mov
pop
xor
lahf
push
pop
cmpsl
xchg
adc
sub
sub
outsb
out
xchg
adc
gs
sub
inc
inc
push
sub
pop
mov
std
and
push
xor
loopne
mov
push
push
aaa
cli
iret
pop
movsb
mov
test
repnz
mov
lods
push
enter
idivl
fstpl
cwtl
add
jg
in
cwtl
xchg
push
fstl
loopne
push
repnz
ss
jl
arpl
xchg
arpl
sub
int3
hlt
inc
loop
clc
mov
xor
xchg
sbb
push
data16
and
adcl
std
xchg
xor
xlat
inc
dec
fsub
je
test
jle
or
dec
mov
pop
sti
movsl
sbb
popa
sub
pop
outsb
test
lcall
xchg
pop
mov
adcl
out
test
fmuls
push
xor
es
and
mov
mov
and
add
add
ds
and
add
cwtl
sub
movsl
jno
pop
jbe
sti
mov
sbb
or
adc
adc
mov
call
pop
jp
sub
insb
repz
cmpsl
testl
or
inc
pushf
testb
fnsave
add
fistpl
mov
mov
popf
out
outsb
jnp
and
mov
daa
add
sbb
sar
xorl
ja
aam
cmp
pop
enter
jne
aam
adc
lea
ljmp
ret
push
xchg
aaa
xor
dec
shrb
nop
jnp
test
fsts
inc
xor
lret
rorl
jg
loope
mov
push
xchg
jo
lret
mov
and
es
xchg
inc
jmp
test
mov
clc
push
icebp
add
pop
fsubr
call
paddusb
inc
inc
in
jo
dec
popf
enter
sar
cs
movsl
and
mov
cltd
mov
inc
dec
test
pop
jnp
mov
aad
jmp
dec
pushl
movsb
in
xchg
pop
jge
xor
adc
dec
mov
push
xor
insl
push
pushf
push
xchg
fimull
mov
lds
popf
add
mov
lret
ret
daa
idivl
push
cmp
mov
cmp
in
rcrl
add
mov
dec
sti
push
jns
sub
or
push
sbbb
clc
aam
aam
popa
fsubl
js
jno
fdivl
jg
add
xorb
jnp
add
and
lds
outsb
xor
call
push
push
or
roll
pop
dec
dec
repnz
cmp
ret
roll
ds
cmp
fwait
pop
dec
xlat
addr16
cmc
jge
dec
bound
enter
out
cmp
bound
jns
std
jne
pop
add
mov
rclb
mov
cmp
push
add
xchg
leave
and
xlat
scas
xchg
lret
mov
fstl
inc
movsl
gs
push
fsts
adc
mov
cld
pop
sub
sbb
cmpsb
xlat
mov
call
add
add
dec
xchg
mov
mov
adc
ja
cs
in
mov
jo
sub
adc
xchg
mov
lea
sbb
shrb
dec
xor
rclb
jge
dec
dec
push
cmpsl
cmp
adc
rcl
in
cmp
sbb
cltd
lret
hlt
rdmsr
dec
push
popf
roll
inc
push
std
lea
mov
mov
adc
jp
mov
js
pop
or
xor
lock
fsubl
lock
jno
pop
in
mov
adc
xchg
rorb
or
cmc
mov
jg
sub
insl
xchg
mov
xchg
je
jae
popf
rorb
xchg
fidivrs
in
push
inc
test
loope
xchg
xorb
mov
insb
mov
movsl
jno
adc
fucomip
jno
inc
sahf
fcmovbe
mov
bound
nop
clc
scas
aam
xor
pop
and
xor
sbb
fcmovb
pop
mov
movsb
push
lods
jmp
jbe
std
stos
enter
jbe
outsb
pop
pop
lods
pop
dec
add
dec
push
adc
mov
dec
cmp
fs
stos
ds
inc
xchg
aad
sub
insl
pop
and
mov
push
repz
xor
mov
adc
gs
mov
dec
add
inc
xlat
imul
mov
adc
push
cmpsl
push
pusha
or
jno
sbb
repz
or
add
incl
xor
daa
mov
scas
add
xlat
or
xor
cmp
mov
icebp
xchg
sbb
movsl
push
mov
clc
cmp
jmp
popa
cmpsl
sub
mov
xor
adc
jmp
pop
aaa
add
mov
dec
cli
add
push
xchg
stos
or
jle
xchg
dec
pop
or
xchg
xchg
inc
popf
idivb
or
in
div
xor
push
adc
aad
push
or
pop
sbb
mov
xchg
ret
fdivrp
inc
push
or
int
shlb
add
popl
dec
imul
xchg
scas
cvttps2pi
test
xor
add
or
jmp
and
adc
push
mov
shlw
and
xor
sbb
arpl
lret
leave
int
call
inc
shrb
dec
das
mov
mov
jns
xchg
frstor
jno
lods
jno
lahf
xchg
or
xlat
cmp
adc
xchg
or
cmp
jp
sbb
daa
stos
shl
cld
das
insb
inc
pushf
jnp
pop
ss
adc
jbe
or
push
add
dec
xor
sbb
or
dec
sub
ss
sub
inc
pop
arpl
adc
sti
mov
cmpsl
xor
bound
add
leave
pop
aaa
mov
rorb
push
xchg
add
add
cld
scas
inc
mov
cmp
cltd
fsubrl
mov
in
jne
test
cmc
ja
orl
dec
xor
add
or
mov
xor
nop
mov
ds
or
lock
cmp
xchg
mov
mov
add
xchg
fisttpll
dec
pop
divb
lret
cld
xor
jb
xlat
and
lret
lea
cmp
or
incb
int3
pop
in
sbb
out
pop
loop
xchg
mov
scas
xchg
xchg
or
pop
popa
in
mov
mov
stos
sub
jecxz
sub
fcom
fwait
test
jp
out
push
jnp
and
test
xchg
xor
push
cmpsl
sbb
out
jns
pusha
nop
push
nop
cmp
shll
cbtw
sub
push
jnp
dec
add
popa
dec
ret
shlb
jbe
jno
sbb
and
add
test
mov
in
xor
lods
cmp
out
pop
jb
pop
push
notl
and
inc
push
jns
jge
mov
loop
mov
sti
repnz
xchg
cli
in
adc
leave
stc
inc
idivl
mov
inc
fneni(8087
inc
and
or
in
mov
dec
fsubrl
mov
mov
jno
and
leave
inc
xchg
mov
andb
stos
or
pop
mov
add
sbb
inc
sub
sbbb
inc
js
stos
div
mov
les
xchg
or
je
xlat
into
jmp
inc
inc
lds
out
push
jle
frstor
sub
shll
xchg
mulps
push
dec
push
push
rcrl
dec
xchg
daa
jbe
mov
lret
mov
cld
sbb
xchg
movsb
gs
cmp
imul
adc
ja
mov
cmp
sti
xor
cmc
cwtl
dec
stos
cmp
test
mov
xchg
jge
adc
mov
mov
push
lcall
cmpsb
sub
inc
das
pop
push
push
lea
les
fidivrs
pop
andb
hlt
stc
fsubs
inc
outsb
jp
inc
mov
jecxz
das
and
test
cmpsl
pop
xchg
mov
xor
dec
xor
xor
sbb
inc
cmp
inc
mov
mov
pop
stos
leave
mov
movsl
adc
jae
cmp
cmp
lahf
mov
xchg
jnp
inc
or
test
das
aaa
sarb
push
push
jmp
pushf
mov
out
lret
mov
or
out
jp
pop
fnstcw
rorl
add
mov
out
pusha
adcb
adc
rcrb
and
mov
or
cmpsl
into
je
repz
arpl
loope
inc
shrl
jno
add
mov
adc
push
repnz
mov
leave
or
cli
test
sbb
inc
je
movsb
fs
fadd
push
fisubl
lret
loopne
cmp
inc
ret
cwtl
shll
shrl
sub
lret
sub
cmpsl
ret
add
aas
mov
pop
in
nop
jl
or
stos
outsb
or
popf
cmp
dec
dec
js
loop
mov
dec
or
loopne
popa
xchg
aam
movl
mov
xchg
adc
xchg
push
jmp
sub
scas
fldenv
mov
inc
push
out
mov
stos
mov
rorl
xchg
lds
xor
sbb
cli
outsb
fcompl
xchg
mov
pop
xor
outsb
pop
mov
push
ljmp
jbe
push
mov
ror
fwait
lods
xor
test
cli
and
or
xor
push
mov
clc
mov
pop
cwtl
dec
cmp
xchg
xor
test
mul
mov
push
cmp
into
add
add
adc
pop
ljmp
pop
jecxz
xor
inc
xchg
movsl
push
cmpsl
xchg
adc
test
pushf
cmp
test
sub
mov
push
mov
das
aad
cmpsl
cmp
dec
inc
xlat
inc
jne
testb
add
jne
nop
inc
dec
jg
lcall
loopne
bound
shr
push
jo
mov
cmp
test
movsb
push
korw
es
jne
fcoml
jb
jmp
int
pop
daa
outsl
inc
xchg
adc
pushl
dec
inc
nop
xor
movsl
and
xor
stos
std
test
es
xor
out
sub
or
repz
push
dec
jnp
mov
push
out
jmp
xor
or
jb
pop
repnz
jmp
aam
pop
push
adc
out
sub
mov
arpl
inc
lcall
mov
mov
jp
ret
push
or
dec
ss
loopne
into
mov
push
and
xorb
das
mov
ret
mov
daa
stc
fs
or
in
ljmp
dec
pop
xor
pusha
or
inc
and
mov
cmpsb
sbbb
inc
popf
mov
repnz
fnstcw
inc
mov
mov
movsb
test
or
mov
mov
imul
pop
push
or
inc
xor
xchg
and
call
pusha
mov
repnz
lods
mov
sub
cld
jns
lock
mov
out
pushf
pop
add
jae
pushf
push
out
out
mov
rorl
imul
jle
hlt
imul
push
fsts
cmp
arpl
jp
pushf
dec
ljmpw
sbb
mov
push
mov
sbb
sahf
fmulp
movsb
cs
stc
push
inc
fsubl
inc
jl
in
fistpl
sub
aaa
cwtl
sub
mov
outsb
pop
ja
jno
addr16
imulb
or
jl
pop
push
in
mov
hlt
mov
cwtl
add
pop
ds
rcll
or
lret
add
hlt
inc
inc
insl
rol
cmpsl
loopne
pop
mov
out
jb
jmp
pop
push
addb
xchg
movsl
push
clc
leave
aam
lods
and
into
sbb
fstl
jmp
les
mov
xchg
and
pop
scas
movsb
fcomps
mov
test
std
adc
inc
fsubl
jne
mov
test
in
inc
das
mov
iret
pop
ret
inc
mov
scas
pop
fsubs
mov
pop
movsb
fldt
notl
fisttps
movsl
pusha
and
aam
sbb
enter
pop
jne
insl
jecxz
xacquire
fidivrl
mov
ret
pop
test
and
fidivrl
mov
popf
rorl
cli
test
mov
lret
mov
pop
lahf
call
pop
push
fiaddl
cltd
sti
fdivl
push
insl
dec
mov
in
adc
stc
jl
adc
das
sub
or
gs
imul
arpl
in
push
pop
jno
xor
arpl
into
aam
repz
push
lea
out
dec
rorb
add
xchg
xor
and
mov
push
insl
cwtl
outsb
ret
pushf
fs
imul
and
jb
cmp
push
cmp
or
mov
movsl
xchg
inc
inc
lahf
aas
cmp
or
jb
mov
pop
mov
cmc
sbb
xchg
sbb
xor
mov
push
jmp
in
out
bound
jo
add
lods
daa
in
jg
ror
aas
xor
nop
cmp
and
sub
ljmp
and
jle
es
cmp
ficomps
fstps
xlat
inc
fmuls
std
and
popf
pop
and
aam
mov
int3
lods
inc
or
jmp
js
dec
jbe
test
inc
leave
cli
stos
daa
pop
lahf
arpl
mov
or
mov
fdiv
mov
ficompl
or
stos
add
xor
mov
fwait
pop
and
ret
jne
jle
cmp
sbb
cmp
adc
add
in
xchg
addb
push
pop
sbb
std
shrl
fsubs
mov
push
addb
into
bound
mov
jecxz
std
ss
xor
fcomps
dec
addl
mov
sbb
push
sti
iret
fwait
in
cmp
cmc
jle
cmp
iret
or
shll
adc
testl
mov
scas
je,pn
rcr
mov
mull
cmp
jecxz
lcall
popa
ficompl
cmp
loope
sub
cmpl
sahf
jg
add
lret
pop
movsb
xchg
mov
mov
push
jns
or
xlat
cwtl
fwait
xor
ljmp
dec
or
negb
or
sub
int
mov
or
pop
add
push
jb
aam
dec
mov
lret
lahf
push
adc
sub
negb
inc
fidivl
dec
push
push
xchg
in
or
lods
ror
push
ret
or
movsb
insl
dec
push
sbbl
rclb
push
outsb
cltd
loope
xchg
inc
or
call
add
leave
add
jae
mov
scas
pop
in
inc
pop
repz
jae
cmp
sub
lods
into
jle
test
rorl
adc
mov
orb
jecxz
cmp
pop
lahf
xchg
scas
negl
adc
sub
movsb
bound
push
arpl
ffreep
cld
inc
xor
ficoml
add
xchg
fscale
bswap
push
js
push
dec
ljmp
ficoms
push
mulb
mov
jns
jo
sub
adc
or
hlt
adc
aam
popaw
stos
sub
inc
push
gs
pop
xchg
xor
ds
adc
out
dec
sbb
push
push
sub
pop
pop
outsl
into
mov
inc
mov
jb
sbb
push
adc
cltd
sqrtps
sub
std
pop
sti
inc
cmp
fldt
adc
out
ja
cmp
mov
cs
sbb
or
loop
mov
pop
inc
ret
outsb
jo
push
leave
jnp
adc
fucom
les
add
je
sarb
mov
jne
imul
les
enter
stc
jge
lcall
xchg
mov
imulb
mov
in
and
sbb
push
imul
push
int
adc
cmp
xchg
clc
mov
sbb
outsb
imul
pop
test
stos
out
sub
sbb
lods
inc
fmul
jmp
or
mov
sub
movsl
push
mov
pop
shll
sub
aas
jge
stc
mov
inc
lods
sar
std
xor
rorl
call
cltd
repz
mov
movsl
xor
and
xchg
mov
pop
cmpsl
addr16
cmc
fldenv
add
aaa
push
cmp
test
mov
xchg
and
stc
dec
mov
in
aaa
xor
and
xchg
loopne
sbb
sbb
cwtl
pop
in
insb
mov
cmp
xchg
jle
je
cmpsl
pop
and
sbb
loop
mov
cmp
outsb
rorb
shll
cs
orl
sbbl
inc
test
mov
push
dec
push
bound
jge
cmp
sbb
push
shl
popf
push
xchg
ljmp
cmpl
push
imul
pop
xor
movsl
rcr
cmp
mov
fsubs
sbb
shrb
xor
push
and
ljmp
jmp
cwtl
outsl
inc
ret
cmpsb
adc
movsl
dec
dec
in
adc
fists
adc
inc
xchg
ljmp
leave
xchg
std
je
push
mov
les
cmp
jg
das
xlat
aas
repnz
cmp
aad
in
sub
and
dec
push
jns
das
cmpsl
aam
inc
xchg
shlb
sub
imul
notl
add
imul
lds
fdivp
xchg
dec
cmp
inc
adc
scas
jmp
push
cmp
cwtl
jl
xor
jp
add
cltd
add
sbb
daa
hlt
push
mov
xchg
push
dec
nop
cmp
out
cmp
ljmpw
push
sbb
sub
adc
cmp
mov
ds
jne
out
andl
out
in
jecxz
bound
jmp
xor
ja
fadd
cmp
or
dec
and
and
imul
adc
in
cmp
int
enter
mov
sub
dec
addl
fistps
inc
or
push
inc
fistpll
inc
add
mov
sti
add
icebp
push
pop
or
mov
and
xchg
loop
mov
rcl
sub
stc
std
adc
pop
mov
fs
mov
xchg
cmp
cmp
push
mov
add
add
xor
out
fsubs
adc
sub
call
xor
pmuludq
mul
int3
or
sub
or
repnz
xchg
dec
inc
mov
dec
push
mov
cmpb
in
roll
adc
inc
ja
inc
repnz
shll
pop
fdivrs
rolb
jb
cmp
stos
dec
jnp
pop
add
push
inc
sbb
jne
addr16
inc
daa
mov
push
sub
xor
mov
mov
test
cmp
cmpsl
xchg
in
dec
fmull
cmp
push
mov
sbb
sub
pop
jp
xlat
jp
and
push
push
mov
lods
xor
subb
ror
negl
sti
mov
sub
jo
cmp
pop
jle
or
push
dec
push
stc
mov
popa
jno
mov
ljmp
addl
popf
stc
sub
pop
jecxz
shl
out
mov
and
inc
mov
fistps
daa
and
je
jno
cmp
cmp
enter
mov
inc
cli
sti
sahf
or
and
inc
hlt
inc
fs
gs
xchg
jg
dec
pusha
mov
pushf
lods
xchg
mov
push
out
adc
lret
mov
out
lret
adc
popf
loop
leave
ret
push
dec
push
ret
pop
hlt
xchg
mov
sub
or
add
push
ficoml
mov
lea
sets
inc
jnp
lods
aad
and
cmpsb
mov
enter
lahf
pushf
ja
add
pop
inc
sbb
pop
push
lret
cmpsb
outsb
repnz
inc
xorb
inc
fisubrl
jo
jmp
add
clc
scas
sub
mov
lds
pop
loop
mov
ss
popa
mov
leave
cs
das
outsl
xchg
lret
cli
sbb
rorb
or
push
adc
arpl
or
dec
xor
cmpsl
xor
lret
mov
or
cmp
ja
lds
push
push
ja
push
lret
or
test
jo
dec
or
push
mov
faddl
push
adc
pop
loop
push
or
loopne
fldt
sub
push
add
ret
data16
loopne
ss
pop
cmp
mov
mov
sbb
dec
push
in
xchg
ds
sbb
sub
add
lahf
std
imul
cmc
fimull
push
inc
iret
into
inc
test
js
xchg
outsb
xor
xchg
cwtl
push
bound
push
or
or
xor
jo
cmp
pushf
mov
inc
fwait
cmp
jae
or
or
addr16
mov
jnp
xchg
in
mov
fstps
in
add
and
leave
out
shl
addb
push
mulps
sbb
mov
pop
repz
lods
popa
ret
in
out
lea
pop
cmp
sbb
loop
decb
leave
cmpsb
add
push
adc
pop
push
faddl
push
addr16
jo
xor
divb
inc
cs
enter
mov
cltd
mov
daa
addr16
popf
sbb
fldl
mov
cltd
cmp
outsb
popa
pop
out
cltd
daa
pop
call
fucomip
movzwl
js
cli
rorl
cmc
js
fstpt
mov
jl
sbb
mov
fdivp
dec
into
sub
mov
jns
outsb
push
jg
fcomps
insl
scas
adc
lahf
mov
out
pop
jle
addl
scas
push
in
cmc
cld
add
outsb
inc
jge
mov
adc
sub
lea
cmp
adc
push
stos
add
pop
lock
imul
dec
out
xchg
mov
cwtl
cmp
xlat
xchg
fisttpll
pop
mov
add
mov
int3
arpl
jne
xlat
mov
int3
inc
adc
dec
movsb
testl
movsb
jne
repnz
subw
jmp
aad
cwtl
or
rclb
xorl
imul
rclb
incl
fidivs
dec
shrb
repnz
jecxz
insl
rolb
loop
lods
inc
pop
test
inc
scas
in
cmp
mull
jb
mov
xor
ud0
test
jo
cmpsl
xchg
pop
aas
push
push
jle
dec
in
aam
push
push
pop
and
ret
ljmp
and
scas
xor
xchg
ja
scas
xchg
inc
out
mov
mov
mov
out
inc
stc
jne
lock
test
or
cli
nop
mov
in
test
xchg
and
aaa
stos
cmp
push
mov
out
lods
xor
ljmp
nop
mov
gs
loop
mov
inc
jecxz
dec
notl
mov
jo
jo
aad
inc
xchg
jb
pushf
sarb
in
mov
cli
cs
jno
rcrb
shll
rol
imul
cltd
sbb
mov
adc
in
js
imul
jp
movsl
mov
cmp
shl
loopne
push
sahf
aaa
mov
mov
fcoml
push
xor
repz
inc
inc
cwtl
iret
cmp
jecxz
rcll
jnp
lock
lods
icebp
test
dec
repnz
cwtl
fstl
int
jp
movsb
jne
fadds
lret
xchg
fsubr
adc
aaa
pop
enter
jg
pop
mov
mov
push
inc
xchg
repnz
fcomip
push
shrb
dec
clc
ficompl
mov
jbe
dec
rorl
rcl
jg
es
adc
and
mov
cmp
dec
insb
mov
filds
dec
test
idivl
movsl
add
scas
test
xchg
fbstp
dec
push
xchg
sbb
inc
push
mov
bswap
mov
xlat
loop
imul
cwtl
xchg
mov
jge
jmp
sub
cli
daa
xor
adc
xchg
or
push
xchg
jb
mov
movsb
test
cmp
mov
and
mov
mov
cltd
cmp
xor
leave
daa
mov
jmp
rcll
cmpsl
mov
scas
idivb
mov
insb
pushf
enter
ja
js
jg
xchg
sub
scas
mov
out
jmp
add
jmp
data16
sub
cld
xor
pop
jnp
xchg
loopne
popa
and
lods
popf
repz
dec
mov
cmpsl
xchg
clc
xchg
jno
test
xchg
sub
rcll
jl
add
lahf
add
sbb
sub
jge
sub
mov
and
idivl
imul
movsl
cmp
jbe
mov
add
pop
dec
adc
iret
mov
std
mov
pop
fmull
push
enter
mov
xor
xor
popa
jle
jle
xor
nop
adc
pop
or
notb
adc
dec
mov
xor
jg
push
adc
dec
ror
mov
mov
inc
push
cmp
xor
xchg
movsb
jle
data16
inc
fwait
mov
mov
loop
dec
mov
add
cmp
jp
jmp
movsb
insb
cmp
or
popf
xchg
lds
pop
lock
cmp
pusha
xchg
lret
mov
or
mov
mov
lods
lret
fnsave
sub
pop
call
int3
cwtl
repz
pop
test
cmp
aas
xor
pusha
jo
add
loope
xor
mov
jmp
mov
dec
push
inc
cld
sub
std
push
arpl
scas
dec
mov
jp
xchg
cs
sbb
add
sub
sbbb
mov
xchg
movsl
add
xor
adc
xor
lret
mov
daa
xchg
mov
xchg
pop
xor
pop
fsubs
out
sub
mov
pop
daa
loopne
mov
out
or
ljmp
fidivl
std
mov
mov
sub
nop
inc
sub
pop
adc
add
sbb
pop
mov
ret
jae
ss
xchg
jg
jmp
lds
out
ljmp
sub
xor
or
mov
pop
ja
jo
or
mov
sub
lret
pop
ret
pop
aas
xor
aaa
cmp
cmp
jns
jge
ja
mov
jnp
sub
sbb
xchg
cmpsb
push
pop
in
in
popa
xchg
je
ficomps
ja
pop
dec
and
subl
dec
sub
xor
lods
mov
sysenter
mov
add
add
lret
mov
mov
jmp
stc
mov
xchg
lock
lret
fadd
outsb
icebp
add
cmp
cs
mov
push
shl
fsubrp
cwtl
movsb
and
sbb
lret
std
sbb
punpckldq
push
into
mov
or
push
cmp
jne
sbb
push
call
pushf
call
lods
mov
push
dec
mov
adc
and
pop
pusha
pop
add
in
arpl
outsl
adc
sub
std
push
jae
lahf
out
iret
and
fidivs
data16
outsb
push
movsb
mov
cmp
mov
sub
push
rcl
in
ret
sbb
and
adc
push
mov
cmp
imul
cld
insl
add
mov
add
add
inc
xchg
jo
mov
mov
outsb
in
sbb
cwtl
mov
push
add
popa
or
imul
mov
pop
clc
sub
dec
cmp
sbb
mov
test
mov
negl
or
jle
and
xchg
scas
sub
mov
and
xorb
xor
push
or
scas
jmp
icebp
adc
mov
fcoms
adc
mov
fninit
lds
sub
mov
faddl
in
mov
mov
or
inc
test
sbb
push
pop
insb
pop
mov
rcrl
leave
sbb
adc
lahf
adc
inc
adc
or
inc
add
leave
inc
add
dec
inc
pushf
sbb
mov
cmp
sub
shll
cmp
fsubrs
cmp
push
push
shr
stos
xchg
pop
push
mov
loop
or
inc
mov
arpl
inc
neg
push
push
ret
or
js
popa
int
pushl
movsl
std
add
and
jmp
call
mov
push
test
sbb
ja
test
imul
adc
dec
aam
adc
bound
decb
fprem
bound
adc
sbb
rorb
push
outsl
repz
lahf
dec
xor
lods
fdivrp
sarb
addr16
fistpll
pop
fdivrl
xlat
push
gs
icebp
scas
jne
xor
test
sub
cwtl
inc
stc
add
xor
iret
xor
mov
mov
into
push
adc
mov
xor
daa
xor
fdivr
mov
pop
pop
pop
test
stos
stos
jecxz
scas
lods
gs
jns
mov
fistl
mov
inc
std
aaa
mov
xor
inc
dec
inc
repnz
and
mov
or
add
mov
sarl
xor
fisttpll
xor
bound
cli
dec
dec
out
cltd
jae
aam
ss
xor
jae
sub
scas
mov
dec
js
out
aas
or
cld
inc
mov
xorl
movsl
push
or
inc
hlt
sub
mov
xor
fsubs
push
pop
jmp
das
clc
mov
sbb
clc
addr16
push
pop
rorl
lea
pop
xor
movsb
aam
loop
lds
stos
jae
lret
add
and
scas
pop
xchg
cs
xchg
shlb
test
call
sub
adc
push
sbb
add
adcb
or
mov
test
je
pop
in
fiadds
push
sub
in
jecxz
movsl
incb
hlt
add
dec
enter
pop
ja
pop
hlt
pop
pop
push
repnz
xor
ljmp
adc
and
scas
imul
into
or
movsl
inc
movb
xor
cltd
lret
mov
sbb
sbb
sub
fwait
mov
cltd
lcall
inc
sub
out
stc
fwait
adc
fucomi
out
pop
getsec
jno
jnp
mov
sbb
pop
sub
or
cmp
adc
stos
movsb
jb
add
and
jnp
aad
outsb
sub
pushf
jmp
pop
pop
dec
out
lret
xchg
cli
js
xchg
and
adc
repnz
into
out
inc
mov
push
mov
rorb
or
pop
mov
out
leave
mov
shl
and
cmpsb
dec
mov
push
mov
daa
lds
scas
les
das
mov
pop
mov
into
sbb
mov
sbb
lock
sub
jbe
shlb
popf
pop
pop
test
call
lcall
dec
add
outsb
adc
leave
add
aas
dec
adc
and
xchg
adc
inc
jne
adc
inc
cltd
dec
pop
cmpsl
mov
imul
and
test
or
adc
sahf
js
test
insb
push
xchg
pusha
pop
or
xor
rorb
adc
pop
xor
adc
or
mov
dec
dec
lret
inc
and
pop
cmp
dec
xor
cmp
fisttps
or
and
shlb
xlat
jmp
sbb
mov
mov
xor
cwtl
cmpsl
pop
stc
lock
neg
sbb
xchg
dec
and
xchg
je
push
mov
inc
sub
mov
enter
sar
test
dec
mov
add
mov
ret
push
out
jle
imul
cmp
addl
push
sbb
xchg
ljmp
rcrl
sbb
scas
mov
push
leave
pushf
add
or
xchg
ljmp
lret
lret
pop
and
mov
popl
dec
jae
lods
imul
data16
push
mov
mov
pushf
add
push
add
or
fdivrs
inc
ljmp
and
pop
lds
xchg
shrl
les
stc
cmp
mov
inc
inc
lds
push
or
adc
mov
dec
pop
imul
lahf
into
lcall
shlb
aaa
mov
push
xchg
jmp
add
psubusb
sub
jno
jg
add
enter
lds
and
mov
repz
jnp
cmp
lahf
jle
cwtl
mov
pop
and
rcrl
les
or
imull
test
idivl
xlat
mov
jno
fsts
xchg
push
push
xchg
mov
xchg
pop
mov
hlt
push
jns
ret
mov
mov
out
std
stc
scas
into
sti
mov
cmp
cmp
mov
into
cmp
jae
in
lods
int
adc
outsl
notb
mov
gs
dec
or
or
outsl
pop
sbb
mov
or
icebp
mov
xchg
in
enter
xor
mov
lea
into
xor
or
xchg
jecxz
inc
push
add
shll
adc
mov
sub
sub
mov
sbb
and
inc
in
mov
xor
push
pop
and
mov
pusha
or
out
pop
dec
push
leave
pop
call
push
outsl
sbb
sub
test
jae
mov
shr
pop
clc
push
mov
addr16
mov
in
fimull
ds
pop
in
lods
jns
js
stc
imul
sbb
in
leave
push
sbb
mov
or
or
inc
jo
cmp
pusha
jl
cmp
repnz
dec
mov
sbb
ljmp
adc
ss
out
xchg
rclb
std
dec
jnp
mov
push
mov
jecxz
es
inc
scas
cmp
xchg
data16
mov
scas
cmc
mov
leave
decb
test
stc
add
cmp
sbb
pop
insb
into
sub
stc
mov
push
mov
iret
into
ror
aad
addb
mul
aaa
xor
mov
or
mov
mov
bound
out
divb
and
mov
les
mov
push
push
mov
adc
cmpsl
notb
subl
mov
sbb
out
pop
lret
sub
leave
pusha
inc
inc
cmp
jb
and
mov
outsl
out
out
fcoml
clc
and
pop
xor
repnz
xchg
push
push
es
nop
aam
fs
lds
add
daa
cwtl
or
jne
cwtl
int3
cmp
lcall
imul
xchg
mov
sarb
fwait
aam
mov
test
push
jb
or
pop
fidivl
mov
and
je
mov
test
aaa
mov
aam
mov
andb
push
jg
sub
inc
shll
pushf
scas
inc
push
lea
add
imul
mov
rol
fwait
sbb
mov
pop
push
ds
inc
daa
add
movsl
arpl
popf
jbe
push
cwtl
adc
push
mov
inc
jge
test
scas
cmp
es
dec
jne
arpl
adc
inc
je
ljmp
mov
stc
mulb
add
adc
sbb
outsl
adc
jmp
push
inc
xchg
sub
dec
sub
xchg
sub
pop
ret
jmp
movsb
lret
mov
sbb
sbb
insl
pop
sbb
fwait
cli
cmp
cs
lahf
inc
loopne
clc
mov
cmp
fcom
mov
sub
mov
call
mov
leave
cmpsl
xor
js
fwait
ss
bound
iret
enter
pop
insl
sbb
sbb
outsb
push
ret
sub
fnstsw
sti
sub
gs
les
popf
push
mov
jb
fdivrs
pop
mov
pop
or
xor
pop
push
cmp
xchg
inc
icebp
pop
pusha
lret
jg
mov
pop
cmpsb
inc
cmpsb
shll
pop
std
cli
push
fs
and
fiaddl
shlb
xchg
pop
sub
iret
aad
pop
push
pop
or
dec
pop
dec
and
inc
mov
daa
lods
loopne
rcl
jno
sub
xchg
pop
and
pop
lret
push
mov
mov
out
dec
cmc
dec
imul
cmc
mov
shlb
mov
or
subb
icebp
addb
push
aam
jno
push
call
xlat
adc
and
ficomps
movsb
lahf
pop
mov
cmpsb
add
xor
aaa
js
dec
and
addr16
mov
aam
cmp
adc
jecxz
push
and
mov
fists
xlat
mov
imul
jae
and
movsl
lcall
cmc
jle
pop
push
adc
mov
add
addr16
int
test
jns
in
imul
cmp
and
push
aaa
inc
mov
pop
ja
cmpb
mov
hlt
pop
sub
inc
add
test
cmp
mov
jp
mov
sub
mov
in
push
cli
pop
iret
mov
imul
or
orb
dec
fldenv
subb
std
cmp
sbb
ljmp
iret
jl
enter
fisttpl
loopne
push
mov
repz
push
sbb
sbb
fildl
inc
sahf
cli
add
les
enter
ljmp
test
mulb
stc
cmpsb
cmpsl
je
outsl
pop
inc
sbb
mov
pop
jbe
or
pop
movsb
and
lock
sbb
sti
movsb
movsl
pop
jle
jo
stos
daa
xor
inc
mov
mov
mov
sub
and
stc
pushl
jmp
mov
xchg
hlt
sub
in
roll
inc
icebp
pushf
pop
movb
insl
in
out
add
xlat
pop
xlat
fsubl
sub
mov
or
xor
shll
scas
cmp
subb
mov
cli
jl
out
cmp
mov
jbe
cmp
mov
mov
jmp
push
nop
or
test
fadds
mul
xchg
ror
sub
xchg
stos
adc
jmp
ss
adc
add
pop
pop
shll
bnd
jmp
jge
pop
inc
jnp
shlb
pop
pop
enter
pop
sbb
or
xor
lds
hlt
cld
dec
repz
flds
ret
or
xchg
adc
sbb
mov
push
ret
adc
push
xor
cmpb
in
cmpl
icebp
pushf
movsb
loopne
push
cmp
outsb
ret
and
sbb
loopne
mov
movsl
stos
dec
inc
jnp
sbb
mov
aas
bound
push
repz
cmp
hlt
daa
sub
xor
stc
repz
push
sbb
imul
lea
pop
inc
jecxz
mov
jmp
iret
sbb
jnp
mov
dec
mov
test
jl
pop
cmp
imul
mov
pusha
loope
cwtl
mov
adcl
sub
ja
bound
xchg
xor
jno
pop
push
xor
and
push
jno
jnp
fdivrs
data16
out
xchg
fcom
aaa
ret
xchg
out
sbb
inc
xchg
push
or
inc
xchg
push
stos
stos
jle
jne
xchg
cmp
mov
ret
insl
sbb
subl
adc
iret
add
adc
mov
data16
fstpt
sub
mov
cmp
push
cmp
inc
ljmp
xchg
mov
dec
loope
mov
aaa
adc
fdivrl
xchg
mov
mov
push
out
dec
rcrb
fucomi
arpl
fisubrl
out
push
in
push
pop
lods
outsl
sti
add
or
pop
std
pop
lods
testl
fmull
mov
ljmp
lret
sti
add
xor
sbb
dec
push
je
push
add
push
xor
bnd
ret
out
in
and
mov
add
leave
or
and
nop
ds
f2xm1
addr16
dec
stos
enter
jp
xor
dec
insl
imul
push
mov
jecxz
sbb
movsl
xchg
roll
xchg
mov
cli
dec
push
lods
mov
sbb
jmp
adc
and
pop
arpl
lret
mov
addb
sarl
dec
testb
bound
xor
and
adc
xor
or
iret
int
inc
cmp
or
mov
jbe
imul
fists
lcall
repnz
orl
and
jo
adc
xor
test
adc
and
adc
push
rorl
dec
icebp
clc
mov
aam
lods
push
iret
or
xlat
sbb
inc
and
and
jmp
cli
sbb
loopne
pop
in
lea
xor
imul
fistps
outsl
cli
test
sub
cmpsl
jle
jns
leave
adc
pop
repnz
mov
add
and
xchg
cmp
xchg
jns
jb
mov
aad
jno
jae
std
mov
xor
mov
fisttps
jecxz
fildll
jns
popf
cs
sub
ljmp
in
lea
dec
xlat
es
push
rcrb
aam
or
lods
jae
imul
lcall
pop
outsl
xchg
in
sbb
jg
mov
fcoms
mov
mov
ja
dec
sbb
pusha
in
xchg
xchg
cli
push
jnp
or
sbb
scas
popa
pushf
lock
out
mov
cmp
rclb
xchg
cmp
inc
cmp
sbb
cmp
jp
lret
jp
jg
or
mov
adc
mov
lcall
icebp
xchg
sub
add
movsl
aam
movq
pop
ljmp
cltd
aad
dec
mov
lcall
push
jmp
stos
and
in
mov
fwait
icebp
cli
push
xchg
ljmp
imul
cwtl
or
ficoml
mov
dec
or
cmp
aad
pop
sub
inc
clc
stos
xor
jne
push
out
inc
loopne
lcall
mov
in
not
pop
outsb
lods
pop
nop
push
dec
into
ja
enter
xor
xor
and
cmp
adc
rcr
ret
ja
fcmove
es
mov
xchg
dec
test
xchg
xchg
das
xchg
inc
fs
repnz
jl
jno
call
and
ret
xor
add
jmp
cwtl
push
mov
push
rorb
jae
icebp
xor
imul
mov
mov
adc
sbb
test
and
mov
and
push
inc
mov
ret
aaa
mov
outsb
inc
mov
push
test
imul
ss
dec
add
xchg
imul
pop
dec
push
mov
pop
cs
ret
xor
subl
lret
sti
adc
cmp
xor
cs
insb
shl
xchg
cs
add
fstpt
leave
mov
inc
mov
pop
xchg
cmp
fldt
stc
jne
and
mov
out
outsl
mov
dec
sti
push
insb
sub
pop
rcrl
addb
imul
negb
test
ds
xchg
ret
mov
ds
mov
stos
mov
xor
iret
outsb
push
sub
jno
call
and
adc
je
xor
push
pop
xorl
ja
mov
outsl
lea
daa
jle
push
dec
push
jnp
mov
cld
outsb
or
push
cmc
xchg
sub
cmp
dec
fsubrs
lods
lods
mov
cmpsb
fcoms
xlat
adc
and
fldt
xchg
add
je
and
popf
lock
jmp
cmp
inc
cwtl
mov
test
push
jnp
lahf
shlb
pop
aas
ret
shll
daa
inc
lods
inc
add
xor
int3
pop
fldt
and
adc
cli
cmpsl
cmp
push
imul
bound
add
push
imulb
mov
xor
adc
pop
rorl
jl
jns
cs
jb
insb
pop
jb
dec
fistps
sub
repz
cwtl
xor
jecxz
hlt
mov
fisubs
adc
dec
mov
add
mov
aad
rcrl
or
push
fs
addl
mov
mov
inc
sbbb
fidivs
dec
leave
std
fmulp
or
jp
cli
mov
or
lret
fcoml
pop
outsl
in
adc
fidivrs
pusha
cmpsb
test
mov
loope
ret
in
cmovl
iret
movsl
xchg
loope
jae
lea
dec
inc
jnp
cli
push
out
pushf
lret
leave
fs
imul
xchg
pop
inc
jae
cltd
cmc
fidivs
push
pop
xorb
add
das
mov
jne
jns
sbb
adc
sbb
je
ds
je
and
xor
jmp
dec
cmp
dec
push
ds
cmc
dec
pop
or
ficomps
adc
mov
loopne
int
imull
xchg
out
in
xor
mov
ja
bnd
cmp
mov
adc
lods
mov
pop
in
test
mov
roll
call
inc
scas
icebp
xor
pop
popf
popa
mov
in
fimuls
daa
jl
stos
cmpsb
xor
push
into
dec
leave
add
jns
mov
cmpsl
adc
stc
pop
mov
inc
push
jmp
xchg
daa
inc
out
or
int3
jp
xchg
cli
leave
xlat
cmp
add
pushf
aas
clc
xor
xor
mov
insb
xor
clc
stos
mov
lret
mov
sahf
xchg
mov
jnp
push
xchg
xchg
fistpll
pop
aas
dec
sub
shlb
scas
xchg
fldl
cwtl
lahf
xor
or
shrb
jge
sbb
aaa
dec
mov
cs
push
movsb
shrb
addr16
lds
cld
or
xor
ljmp
xchg
pop
shll
adc
loope
dec
sbb
pop
imul
sti
icebp
dec
mov
loopne
fwait
inc
xchg
pop
push
cmp
lods
xor
lock
aad
xchg
jle
mov
add
rcrl
iret
jnp
loopne
data16
and
insl
lret
js
enter
xor
add
gs
popf
pop
jmp
iret
xlat
pop
lret
push
sub
push
lods
lret
xchg
jp
dec
mov
sarl
mov
gs
popa
das
test
mov
test
pop
jg
aas
pop
push
push
cli
int3
into
dec
cmp
js
loope
clc
enter
or
dec
inc
les
lret
sub
adc
xor
pop
pop
sub
outsb
xor
or
mov
pop
mov
mov
fsts
push
dec
xor
dec
and
push
inc
bound
insb
out
fcomps
xchg
and
push
jns
mov
shr
pop
jb
fldt
or
ljmp
ds
cmp
dec
dec
push
adc
and
lea
pop
mov
cld
sbbb
xlat
jno
faddl
mov
call
aam
test
xchg
jnp
jmp
jbe
push
mov
cmp
jp
gs
sub
mov
inc
xor
or
ret
lods
inc
loop
or
cltd
push
ret
pushf
mov
mov
jle
or
and
xchg
test
sub
xchg
loopne
lcall
mov
adc
cmpsb
or
rorb
pop
sbb
or
aad
loop
addl
int
jo
ret
pusha
mov
sbb
mov
das
cmp
push
or
int
and
sti
or
mov
test
sbb
scas
pushf
mov
cmp
mov
rcrb
je
movsb
xchg
and
cmc
leave
ds
lret
push
jmp
jl
orl
out
insb
inc
mov
rol
dec
ret
leave
mov
xor
stos
and
pop
call
test
xchg
push
ret
call
mov
xor
add
add
cmpsb
cltd
inc
mov
aam
loop
in
push
stos
adc
sub
adc
add
mov
mov
into
jecxz
mov
int3
aad
sti
sbb
sub
cwtl
addr16
push
jbe
xor
dec
loop
sub
mov
pushf
push
daa
xor
and
mov
mov
push
paddq
pop
sbb
cli
mov
dec
fldcw
ret
insl
pop
dec
mov
sbb
and
mov
fdivrl
and
adcb
cmp
jg
shl
pop
mov
push
fdivr
inc
and
pop
fidivrl
test
movsl
les
out
xchg
movsb
cmp
mov
xor
aam
and
xor
dec
scas
lds
repz
jle
test
es
and
inc
dec
mov
ret
bound
xchg
and
jle
push
push
pop
in
sbb
lods
lret
sub
pop
aaa
inc
hlt
sub
insl
cmp
adc
mov
fadd
jno
les
jg
cmp
inc
xchg
in
divl
lcall
out
xchg
dec
lock
sahf
or
mov
xchg
mov
shlb
test
mov
rcrb
psrad
fs
out
cs
jmp
loop
or
cmpb
pushf
pop
and
aas
out
add
mov
popf
add
inc
add
in
dec
push
pop
divl
fisubl
adc
mov
sub
jmp
pop
push
xchg
jb
push
loopne
sub
sub
gs
hlt
pop
cmpsl
lock
lock
aad
sahf
sub
daa
out
fnsave
aas
stos
hlt
jge
push
dec
test
mov
push
mov
shrd
jae
lea
dec
sahf
inc
movsl
xchg
jo
inc
lock
daa
stos
ret
jl
or
jmp
jb
xor
adc
ss
cmp
dec
xchg
push
rolb
enter
in
sub
cmpsl
push
test
jo
pop
xor
add
lret
fstpt
push
push
sbb
or
or
adc
cli
icebp
pop
adc
lods
ljmp
push
adc
mov
push
cs
inc
push
inc
movsl
popf
hlt
sbb
and
fdivl
sbb
mov
mov
mov
scas
push
cmc
daa
or
sbb
fs
std
dec
in
mull
sub
movl
xchg
xchg
adc
add
sbb
push
lods
dec
rclb
inc
aam
sbb
sarb
push
and
lods
push
std
sub
std
test
push
sub
mov
in
data16
call
popa
xorl
clc
filds
rcrb
call
or
pop
xchg
push
mov
aaa
shlb
les
add
andps
in
ror
add
push
loop
adc
imul
xchg
mov
pop
imul
dec
testb
push
xchg
cmpb
mov
std
ret
xor
mov
jne
mov
lods
xchg
push
or
lret
cmp
pop
jl
stos
in
adc
push
js
and
add
jno
sbb
mov
sahf
cmpsb
xor
sub
mov
mov
or
popf
dec
xchg
lds
dec
ret
shlb
bound
loopne
mulb
call
lds
mov
lret
sbb
dec
lcall
pop
pop
cltd
xchg
cli
leave
jge
push
pop
sahf
cmc
shrb
inc
das
sbb
mov
add
xlat
sbb
pop
ficoml
jmp
js
rcll
mov
fucompp
or
push
xor
fs
jae
outsb
adc
dec
sbb
dec
je
je
jae
dec
fcoms
popa
decl
fmuls
das
sub
or
sbb
test
jmp
data16
jp
sub
cmp
arpl
hlt
call
pusha
into
aam
loopne
das
xchg
and
test
push
push
add
dec
mov
push
inc
or
test
ss
and
push
pushf
lock
jbe
dec
mov
lahf
fstpl
ret
scas
jo
sub
push
mov
subb
mov
gs
outsl
test
push
enter
jmp
jno
lahf
mov
lret
pop
sbb
jno
push
or
sbb
sub
inc
popf
jmp
hlt
aaa
jne
pop
bound
add
pop
or
dec
lret
mov
aas
mov
loop
ljmp
jp
adc
dec
ret
add
dec
insb
mov
mov
mov
mov
test
pop
neg
mov
sbb
mov
and
push
xlat
jmp
add
xchg
sbb
dec
mov
adc
fsubs
mov
repnz
mov
mov
pop
push
cmp
add
clc
in
emms
mov
adc
cmpsl
push
cld
imul
sarl
bound
jnp
push
or
inc
fadd
xchg
mov
push
and
lock
cmp
xchg
xchg
pop
je
jmp
xor
mov
fdivrl
adc
loop
jp
dec
enter
leave
adc
push
bound
pop
xchg
js
hlt
ret
or
popf
push
mov
xlat
ret
cmp
aam
sarl
xchg
jns
mov
std
inc
loope
or
xchg
push
xchg
xchg
mov
push
int3
jbe
jecxz
jnp
mov
adc
loope
jns
fsubrp
popf
or
and
or
dec
test
lret
out
jo
pop
cld
fwait
arpl
push
cmc
cmp
fwait
add
loop
xchg
sbb
inc
mov
neg
sbb
or
rcrb
mov
aad
mov
push
shl
mov
jp
cmp
mov
ret
fnstsw
rcrb
imul
dec
dec
add
mov
sbb
cmc
mov
pop
loopne
add
mov
daa
jl
ret
mov
dec
cmp
and
test
rol
xchg
fadd
mov
cmpsb
sub
jne
adc
repnz
xor
cwtl
mov
sarb
cmpsb
inc
arpl
loope
sbbb
or
jno
pop
scas
aam
mov
sub
push
popf
push
stos
xor
sub
stc
jbe
mov
int3
dec
and
push
movsl
int3
mov
int3
in
sbb
daa
std
push
aam
xchg
imul
fcoml
push
xchg
mov
test
mov
loope
inc
rcrl
inc
mov
jne
sti
and
aas
jge
iret
adc
les
mov
xchg
dec
aam
sti
push
stos
dec
mov
mov
pop
jb
mov
aam
loop
sarl
mov
pop
shrl
or
lcall
push
insb
cltd
dec
xchg
rorb
daa
mov
shlb
add
dec
mov
cmp
rcrb
cltd
or
lahf
fiadds
pop
mov
jle
lea
test
nop
mov
push
movsl
sub
sub
in
sub
ds
gs
rolb
cltd
mov
inc
inc
lcall
jns
cmp
sti
dec
xchg
sub
push
mov
movsl
leave
rorb
cltd
pop
xchg
insl
jl
pop
adc
aad
sub
rclb
lcall
or
pop
xchg
aas
adc
out
out
push
sub
dec
lcall
lahf
mov
and
mov
or
xor
adc
loopne
cmp
mov
and
push
xlat
out
jno
push
lock
nop
enter
icebp
scas
push
mov
dec
sub
inc
ret
pop
cmp
adc
sub
add
ret
rorl
xor
jo
popf
fbld
dec
push
popf
cli
mov
push
xor
test
leave
jnp
rcll
mov
add
imul
jo
pop
out
mov
xor
sbb
xchg
or
lret
xchg
popa
cmp
mov
lcall
mov
inc
mov
aas
cmpsl
mov
inc
out
pop
lahf
inc
adc
rclb
mov
jae,pn
inc
xchg
jle
test
pop
insb
push
add
dec
insl
fistpl
out
leave
in
push
xchg
xor
sbb
daa
and
stos
sbb
xorl
arpl
dec
ret
outsb
pop
pop
rcrb
dec
outsl
pop
stc
gs
inc
icebp
adc
add
and
inc
jecxz
dec
mov
pop
pushf
addr16
in
xor
xchg
bound
hlt
decl
xor
cs
inc
mov
add
pop
jg
push
ljmp
frstor
popw
inc
add
ror
fisubrl
cmpsb
ds
aas
ret
fwait
pop
mov
popf
mov
fsubrl
jl
jl
insl
pushf
cmp
cld
add
xor
mov
cli
lds
nop
lret
cmp
rorb
lret
arpl
rcl
cmp
rol
rcrl
clc
adc
dec
addr16
jmp
cmp
movsl
jne
adc
mov
sbb
mov
lods
mov
pop
out
outsb
scas
movsl
mov
jmp
xchg
fists
in
fnstsw
aas
push
movsl
test
jo
aam
sbb
stos
xchg
aaa
mov
mov
rcrb
jge
sbb
out
mov
mov
lahf
push
or
adc
int3
fs
outsl
cltd
iret
sub
nop
daa
sbb
fsubl
xor
jmp
sub
cwtl
pop
jg
sub
push
ja
jns
push
sbb
lret
mov
inc
cs
xlat
lea
aad
mov
pop
adc
cltd
mov
push
mov
xchg
mov
pop
adcb
jge
movsb
xor
aas
pop
cmp
and
dec
xchg
lret
add
stos
push
inc
outsb
inc
pop
mov
fcmovnbe
mov
dec
dec
iret
sbb
fs
jmp
pop
cmp
xchg
add
cmpsb
nop
dec
in
mov
mov
nop
inc
ss
outsb
insb
maskmovq
testl
push
aaa
scas
push
pop
dec
icebp
loopne
out
ja
data16
jle
jge
fldcw
jnp
loop
repnz
cmp
pop
cmp
stos
dec
lret
cmp
stos
xchg
ret
jbe
pop
dec
push
in
in
mov
lods
gs
adc
mov
repnz
testl
pushl
inc
mov
scas
dec
xchg
fdivrl
fistpl
into
cmp
outsb
into
xchg
adc
ljmp
dec
xor
test
push
out
insb
jmp
mulb
inc
lret
and
outsb
ficoml
cmpsb
add
lods
daa
or
push
fldenv
cmp
xor
pop
ffree
push
pop
in
cmp
adc
fmull
xrelease
frstor
mov
pop
fcmovu
sbb
jecxz
jmp
jecxz
jbe
imul
fldenv
mov
rcrb
mov
into
xchg
daa
adc
and
mov
mov
jl
jo
gs
popa
out
mov
movsl
call
lods
mov
fs
test
and
iret
cmc
pop
ret
mov
popf
xor
lods
fadds
mov
lock
sbb
div
pop
outsl
adc
jnp,pn
xchg
fnstcw
in
icebp
loop
aad
xor
call
cmp
pop
and
sbb
or
inc
mov
jne
cmc
imul
inc
dec
mul
inc
adc
scas
loop
aaa
pop
add
cmc
jne
pushf
jnp
aas
mov
movsl
pushw
xchg
pusha
xchg
mov
cmc
push
popa
or
gs
fldenv
imul
and
dec
xor
sbb
stos
lret
mov
test
rclb
es
std
loop
or
cmp
movsl
mov
adc
loop
das
pop
inc
dec
inc
fcmovnu
roll
mov
adc
mov
mov
lea
sti
dec
push
icebp
and
pop
pusha
lcall
test
iret
mov
xchg
jecxz
ja
in
int
pop
push
sub
sbb
fists
rcrl
sub
xor
cmp
das
out
mov
push
addr16
xchg
push
cld
in
cmp
test
daa
adc
in
and
loopne
inc
nop
popa
lret
pusha
cs
cmp
cmpsl
and
shll
fcomi
jge
test
add
lret
pop
in
dec
imul
pop
xor
xchg
out
les
lea
push
and
add
daa
stos
test
jmp
mov
in
xchg
into
add
leave
mov
xchg
into
push
fisubl
xchg
dec
xchg
in
ffree
jg
mov
sub
xorl
sub
sbb
add
imul
mov
lret
dec
adc
mov
fdivl
cwtl
mov
ficompl
das
loopne,pt
sbb
jnp
scas
xchg
push
cmp
mov
jnp
dec
iret
sarb
cmp
sbb
scas
insl
cmp
pop
and
mov
cmpsb
xor
leave
xor
ljmp
xchg
iret
sub
mov
leave
mov
fdiv
mov
arpl
scas
fs
xchg
adc
push
xchg
inc
lods
cmp
adc
stos
mov
jmp
cmp
fnstsw
xchg
adc
cmp
jae
jmp
ss
sbb
lea
pushf
dec
inc
jns
rcl
shlb
dec
arpl
jge
rcll
jmp
jle
adc
push
movsb
loop
mov
mov
mov
add
test
mov
clc
mov
inc
sbb
leave
mov
mov
loop
jae
cmpsb
in
js
and
ret
imul
xchg
gs
cwtl
mov
and
and
iret
sub
shrb
loop
mov
mov
push
je
das
popf
fcoms
mov
or
pusha
mov
add
setne
push
fwait
cmp
lret
test
mov
lods
adc
sbb
push
mov
ds
mov
sbb
dec
fldl
addr16
outsl
andl
into
push
xorb
ficoms
dec
xor
test
and
fucompp
out
push
jne
sbb
pop
scas
daa
rclb
repnz
dec
adc
xchg
mov
xorb
cmp
dec
cmp
jp
and
mul
lods
iret
das
movsb
xor
cmc
sbb
push
fisubrs
xchg
enter
sub
movsl
mov
inc
enter
jo
push
or
xchg
shrl
subl
fs
xor
orl
sbb
or
nop
sbb
cs
ds
sub
fs
aam
mov
lods
in
jbe
push
movsw
test
mov
int
sahf
mov
test
lret
pop
xchg
xchg
cmpsl
das
pop
outsl
mov
stos
arpl
dec
pop
sub
mov
pushf
jne
icebp
xchg
inc
cltd
outsb
cltd
aad
push
mov
push
jb
sbb
dec
mov
cmpl
sti
pop
dec
xchg
mov
lcall
loop
clc
hlt
jnp
jnp
jns
and
xchg
adc
dec
dec
push
icebp
mov
scas
xor
push
xlat
xchg
sbb
and
testb
inc
or
and
mov
out
lret
push
xchg
leave
push
adc
jl
dec
dec
dec
imul
mov
int
jbe
mov
xchg
pop
mov
jg
aam
inc
xchg
fisubrl
bnd
pop
fidivs
nop
adc
mov
rolb
inc
notb
addr16
testb
mov
popa
lret
test
mov
add
cli
mov
cld
mov
add
pop
outsb
mov
fs
outsl
ljmp
mov
daa
or
mov
pop
push
int
std
cmp
cmp
pop
mov
dec
xchg
js
ljmp
lcall
xor
inc
pop
push
mov
addr16
mov
jne
in
xor
mov
sub
mov
ficoml
inc
int3
imul
jne
and
sub
test
jne
dec
jmp
cltd
push
cwtl
jae
scas
pop
or
xchg
jae
push
iret
inc
shlb
jno
cmp
and
sub
lret
fiadds
cmc
pop
and
fs
loope
test
rclb
subl
mov
out
push
shlb
fwait
or
push
jle
jb
sub
mov
and
lret
add
add
scas
stos
mov
sarl
or
push
stc
jl
cmpsl
mov
dec
sbb
sbbb
jecxz
scas
jno
or
sub
push
xor
pop
popa
loop
push
add
sub
gs
sarl
cmpsb
fs
and
or
mov
ffreep
mov
push
sub
ja
or
and
push
call
lock
gs
sbb
out
and
leave
dec
mov
inc
icebp
js
pop
pop
push
pop
jp
mov
rcr
pushf
jle
adc
fnstsw
dec
mov
arpl
out
xchg
insb
lret
and
lcall
les
sub
mov
push
xor
out
icebp
popl
adc
mov
test
and
orl
in
push
adc
push
mov
xor
adc
popa
jp
mov
fs
cmp
xor
dec
repnz
adc
push
cmp
neg
mov
icebp
and
sub
push
cld
dec
adc
cmpsb
jbe
adc
mov
in
mov
cmpsl
aam
outsb
or
adc
scas
jne
or
shl
pop
arpl
pop
subb
loopne,pt
lea
in
and
outsb
jb
ss
int
loope
xor
aad
push
scas
lret
subl
out
add
fcmovnu
psrlq
sub
jae
daa
add
ljmp
or
add
ret
fdivl
jno
mov
mov
in
fs
xor
aam
mov
pop
fs
dec
das
or
mov
dec
inc
int
out
gs
movsl
cli
adc
dec
test
sbb
xchg
js
push
push
bound
xchg
xor
fwait
outsl
cmp
xor
cmp
mov
adc
mov
dec
mov
outsl
inc
loop
add
and
sub
pushf
fsubl
test
lahf
stos
cmp
inc
icebp
faddl
stos
sahf
xorb
pop
cmp
mov
mov
push
loope
fimuls
or
repnz
cltd
cmp
add
shl
sub
pop
leave
int3
or
popa
add
cmp
in
mov
mov
xchg
mov
pushf
cmp
lcall
fwait
test
and
leave
hlt
xchg
mov
rcr
daa
mov
push
in
jo
pop
cmpsb
and
jmp
imul
adc
repnz
jp
push
lds
jmp
adc
jmp
in
fisubrl
lods
dec
xchg
loop
cmpsb
les
pop
shll
push
xchg
scas
xchg
mov
xor
and
sahf
int
adc
int3
or
movsb
inc
in
fcomip
addr16
outsb
sbb
in
lods
add
rolb
test
add
mov
shll
add
dec
sub
push
cli
imul
mov
sbb
pop
shrl
xchg
push
fs
xlat
cmp
add
fildll
push
xchg
push
loop
adc
xchg
fincstp
push
addl
push
mov
ja
nop
test
or
daa
orb
pop
or
add
xchg
cmp
iret
test
repnz
xor
pop
push
sti
clc
sahf
ss
ret
push
jl
outsl
inc
leave
or
mov
in
add
out
jo
xchg
adc
push
mov
mov
stos
pop
push
popf
cmpsl
mov
inc
and
jg
xchg
dec
in
mov
loop
inc
pusha
mov
add
shlb
sbb
cltd
add
aas
ret
ret
test
scas
inc
jl
pop
mov
and
sub
adc
addr16
adc
fwait
loopne
lcall
jb
and
or
mov
jle
push
xchg
gs
push
call
mov
xchg
mov
sbb
inc
mov
push
mov
jmp
and
xchg
sub
sbb
into
lret
in
sbb
in
dec
or
or
dec
repz
adc
fstps
aam
xchg
push
cmpsl
pop
mov
jae
add
insl
clc
hlt
mov
push
xor
mov
dec
or
popl
dec
xchg
push
aaa
mov
pushf
mov
insl
lods
jecxz
mov
or
or
aad
nop
aad
mov
xchg
imulb
lock
push
mov
cs
xor
outsb
aas
dec
mov
loopne
shll
adc
jne
movsl
lods
imul
jle
add
stc
fwait
shll
call
ja
fistps
lds
fst
xor
repnz
stos
ljmp
jbe
lret
mov
icebp
add
push
cmp
cs
stc
xchg
xchg
iret
fistps
sub
add
int
jns
out
push
xchg
fs
bound
aas
cli
pop
loop
push
pop
inc
fisubs
push
mov
cli
lret
gs
jp
js
imul
cs
jno
pop
jecxz
int
out
add
adc
in
enter
fcoms
cltd
push
out
push
inc
xchg
sbb
jb
js
data16
xor
sub
cld
add
xchg
mov
dec
mov
pop
movb
sub
ja
andl
push
out
adc
jl
mov
int3
mov
sbb
pop
xchg
iret
push
jle
icebp
data16
inc
std
imulb
mov
inc
mov
int3
mov
lods
cld
xlat
out
mov
hlt
cs
inc
xchg
mov
xchg
mov
push
stc
cmp
mov
test
push
push
movsl
jae
xchg
repz
roll
sbb
mov
xor
xchg
mov
lret
mov
mov
cmp
ret
out
xor
mov
pop
sbb
cmc
mov
push
cmp
sbb
xlat
jns
jnp
add
sbb
mov
aaa
fcomps
xchg
mov
aad
xorl
test
push
movl
outsb
ss
lea
dec
cs
orb
jmp
adc
fcompl
inc
jl
mov
or
in
cmpsl
cmc
mov
out
aad
jbe
pop
add
sar
sahf
mov
jnp
js
pop
es
inc
dec
cmpsb
jo
movb
inc
cli
adc
out
push
inc
mov
lea
and
pop
and
cmp
repz
rolb
ljmp
in
adc
dec
and
into
pop
mov
test
call
or
cmp
inc
xchg
test
pop
mov
insb
orl
lret
daa
pop
adc
jg
test
imul
xor
call
and
andl
pop
inc
mov
test
test
jge
leave
pop
mov
and
imul
push
cli
sbb
jno
es
add
stos
xchg
sbbb
rorb
mulb
and
inc
jecxz
js
adc
mov
adc
xchg
push
in
outsb
inc
jmp
shl
ret
or
or
adcl
enter
popa
fisttpl
pusha
fsubrs
movsb
out
insb
lret
fs
xchg
clc
pop
nop
cmp
dec
xor
and
rep
daa
mov
adc
push
mov
scas
xlat
xor
add
dec
aad
sbb
mul
adc
adc
arpl
call
pop
repnz
jmp
jle
sub
daa
cmp
in
mov
stc
push
std
mov
jecxz
ljmp
or
in
push
subl
mov
and
mov
jb
outsl
cmpsl
pusha
in
hlt
xchg
fcmovnbe
xchg
jp
cmp
mov
fcmove
push
cld
push
sahf
add
inc
mov
daa
ret
inc
mov
cmp
jl
add
push
loopne
jns
inc
popa
mov
mov
mov
das
cmova
ret
mov
subb
outsl
out
subb
lods
shrl
xchg
sarl
iret
sti
pop
fistl
adc
xchg
rcrb
push
leave
std
and
adc
jo
sbb
and
leavew
mov
jmp
xor
out
fiaddl
dec
inc
ja
nop
xchg
aad
arpl
xor
jb
outsb
push
add
inc
push
add
gs
add
rol
lret
push
push
je
sbb
shlb
mov
ss
push
jl
jl
cld
mov
int
mov
add
dec
cli
mov
add
cmpsb
mov
nop
sub
push
dec
mov
jmp
jl
sbb
jae
inc
ret
lea
aaa
mov
lods
call
iret
icebp
into
push
rolb
mov
jge
cmp
xchg
pushf
jns
ror
adc
mov
jns
and
add
sbbb
xchg
pusha
and
jecxz
mov
xchg
rorl
or
stos
push
fisubrs
xor
adc
inc
leave
dec
dec
sahf
push
jnp
mov
push
xchg
mov
fs
mov
jmp
movsb
in
loope
adc
or
or
jns
jns
rcrb
mov
mov
orb
cmp
ficomps
dec
add
mov
int
repz
sbb
dec
sub
lods
push
jnp
pop
push
lahf
and
test
loop
test
jp
aad
sub
mov
negb
xchg
jne
call
push
test
in
and
je
daa
xor
or
sbb
aad
pop
lahf
xor
or
sub
lret
lahf
movsb
aaa
stos
push
stos
and
fs
sub
sbb
inc
int
mov
push
jno
inc
jp
and
sbb
into
or
sub
std
shl
jbe
inc
sbb
push
mov
sub
jmp
add
dec
add
outsb
addr16
cltd
mov
push
xor
xchg
sbb
adc
lock
ret
xchg
fucomip
pusha
and
mov
fdivl
ror
fbld
icebp
adc
cmp
push
mov
insb
lods
sub
cmp
into
sbb
aas
pop
sbb
jle
push
mov
pop
cltd
cmp
cwtl
cltd
jnp
shrl
adc
mov
ja
sti
into
scas
sub
xor
push
cmp
push
icebp
loop
not
xchg
sub
lods
mov
dec
test
out
js
out
scas
and
sub
hlt
pop
cmp
adc
push
nop
adc
pop
mov
dec
add
push
push
push
or
dec
inc
pushf
jns
loope
sbb
insb
push
jmp
fwait
cwtl
jmp
ds
dec
or
loope
cmpsb
sbb
mov
xchg
xchg
imul
xchg
xor
cmp
ljmp
cmp
sbb
adc
cmp
add
in
push
push
ror
sub
jb
cmpsl
push
lret
mov
jp
stos
jmp
adc
enter
mov
stos
mov
adc
out
push
or
enter
cmp
fmull
push
dec
sub
aam
mov
and
rcrl
imul
jnp
jl
xchg
xchg
xor
sti
sub
movb
push
push
adc
mov
inc
call
int3
mov
icebp
pop
dec
jp
popa
sub
pop
mov
jnp
or
imulb
out
add
jns
pushf
scas
fwait
add
sahf
jg
jb
testb
repz
mov
mov
jae
std
fisubrl
fs
sub
sti
pusha
push
adc
setp
fsub
movl
inc
push
scas
mov
mov
pop
ljmp
lods
jo
jne
imul
loopne
push
addl
sbb
out
add
cmp
cmpsb
push
xchg
les
cmp
add
sbb
push
sub
fwait
push
popa
iret
jae
je
sbb
inc
daa
dec
stos
push
push
bnd
les
test
fidivrl
leave
lret
notb
jle
mov
movb
cs
mov
mov
xchg
push
aaa
iret
and
lcall
icebp
inc
aaa
pop
ds
lods
in
lods
xor
in
mov
mov
inc
push
rorb
mov
jbe
aas
or
cmp
push
sub
mov
lods
xchg
sub
mov
imul
in
sbb
std
lock
leave
int3
jle
push
inc
push
jmp
cmp
xchg
movsb
clc
aas
sub
fcomi
stos
push
or
cmp
push
inc
xchg
lods
mov
js
faddl
pop
fists
cli
pop
jo
inc
xor
iret
jns
cmp
xchg
adc
ds
lcall
push
xor
dec
rol
dec
dec
push
or
push
mov
and
push
lock
cmp
xchg
mov
cwtl
lock
mov
cmpsb
cwtl
mov
sub
xchg
sbb
not
push
ret
loopne
mov
sub
loopne
stos
push
cmp
add
inc
xchg
addr16
cmpsl
sbb
xchg
jb
and
popf
lret
or
cli
cmp
sbb
or
sbb
jne
sbb
lea
xor
cs
and
fld
adc
pop
jmp
repz
jg
mov
and
push
mov
inc
add
ficompl
popf
lret
pop
mov
in
inc
out
or
pushf
lahf
mov
pop
pushf
in
push
mov
rcrb
push
cs
mov
adc
shll
dec
dec
or
insb
mov
imul
rcrl
faddl
popa
push
scas
push
push
jae
push
add
dec
dec
push
lock
mov
inc
hlt
inc
push
test
popa
cmpsl
mov
cmp
js
adc
pop
dec
push
sub
xor
mov
scas
add
shr
add
das
or
pop
lods
mov
test
mov
lcall
mov
clc
or
flds
add
mov
orb
lcall
enter
test
ljmp
or
inc
push
into
aam
and
ffree
or
lods
shl
jb
xchg
dec
in
push
out
rclb
out
xor
xchg
push
pop
jno
addr16
jle
test
arpl
jae
fstps
ret
test
fs
xchg
es
sahf
cmp
je
push
sub
pop
fcmovnbe
outsb
xor
cmp
ror
mov
mov
call
mov
jae
or
pop
inc
lock
inc
and
fimuls
jno
divl
sub
jl
xchg
stos
pushf
mov
idivl
loopne
jmp
pushf
push
and
div
fnstsw
cltd
pusha
repz
push
out
bound
pop
in
add
lret
mov
mov
icebp
push
je
xor
inc
in
fdivr
test
push
mov
adc
cmpl
xchg
dec
enter
nop
adc
aam
packuswb
sti
jle,pn
sbb
cmpb
dec
pop
cli
enter
jecxz
mov
or
xchg
jo
or
repz
xchg
into
pop
or
fs
rorb
or
adc
xchg
test
ss
pop
adc
push
xchg
push
push
xchg
lahf
cli
int
int
scas
lahf
pop
sbb
fsubl
or
aaa
mov
xchg
out
fimull
daa
dec
insl
outsl
mov
cmovp
xchg
imul
daa
push
pop
fwait
xchg
jae
jns
cmp
loop
lret
xchg
inc
sbb
shl
add
cmp
jo
or
into
pop
jo
mov
jmp
insb
movups
jge
stos
pop
pop
addr16
cmp
sbb
shr
lods
pop
lcall
or
stos
push
bound
mov
test
ss
dec
pop
dec
test
mov
mov
xor
push
mov
xchg
adc
rcll
imul
and
cmp
xchg
ss
cmp
or
sub
stc
xor
jp
dec
xor
add
mov
stc
push
cmp
xchg
cmc
rolb
cs
mov
rcl
adc
jl
sub
jg
fxch
call
mov
mov
jle
jp
js
ja
out
cmc
jns
adc
mov
sbb
repz
sbb
mov
jno
pop
xchg
cltd
xchg
jne
sarb
mov
in
pop
push
es
jge
sbb
loop
xor
jo
repnz
mov
cmp
into
pop
inc
loop
lods
pop
les
lods
stc
jo
shrb
lock
cmp
stos
sub
ljmp
xchg
sahf
fiaddl
mov
test
icebp
jns
xlat
mov
inc
add
pop
sahf
sti
mov
sub
xor
das
bound
leave
or
inc
out
cmpsb
add
movsb
jno
jno
cmp
shll
gs
add
test
mov
pop
fstl
gs
scas
pop
push
fiadds
cmpl
decb
mov
xor
lods
xor
lea
and
pop
xor
roll
mov
or
jae
mov
bound
aas
lea
sahf
push
pop
pop
inc
xor
out
je
repz
add
loop
stos
adc
adc
pop
pusha
xor
stc
fsubrl
aam
sbb
cmp
jg
and
pop
out
mov
mov
jle
outsl
jb
dec
xlat
das
ret
mov
mov
stc
and
xor
jno
lds
scas
dec
dec
xor
mov
mov
stc
jmp
dec
xchg
push
test
int3
addl
inc
clc
mov
inc
shrb
inc
bound
jb
mov
mov
push
and
mov
mov
sub
nop
outsl
fdivp
ds
test
inc
mov
aad
pushf
gs
lds
xchg
sub
xchg
lahf
push
cmp
imul
xlat
addr16
insl
fnstcw
ret
iret
sbb
cmp
sub
adc
fisubrs
jb
jp
cmp
in
mov
loopne
pop
mov
xchg
push
outsl
inc
notl
or
leave
xor
fidivs
xchg
ljmp
sbb
mov
inc
inc
and
dec
jecxz
add
pushl
aad
sub
and
call
sub
in
jae
es
pop
fwait
daa
push
sub
xchg
xchg
xor
mov
adc
adc
sbb
stos
fcompl
out
sti
or
out
mov
loop
dec
scas
sbb
scas
lcall
sbb
adc
into
and
fildll
pop
mov
jl
lahf
cmp
or
jmp
dec
scas
std
out
dec
stos
rcll
push
rol
and
lret
clc
mov
adc
cmp
rolb
and
sbb
rol
push
jp
push
mulb
loop
clc
cmpsl
or
ds
add
fmuls
int3
pop
arpl
dec
cltd
and
pop
adcb
aam
lods
jg
out
xchg
adc
inc
jg
out
pop
aaa
test
jp
pop
aaa
xlat
cmpsb
fdivs
data16
mov
add
rcll
orl
fsubr
fadds
leave
aaa
pop
orb
or
cltd
in
fisubs
mov
enter
sbb
xor
push
fsts
adc
jmp
add
push
movsl
or
dec
ret
or
jle
add
xchg
enter
xchg
dec
mov
or
pop
push
arpl
cmp
sbb
outsb
add
and
mov
xor
cs
fisubrs
fimuls
or
scas
xor
xchg
jo
nop
pop
in
fmull
imul
add
mov
or
dec
push
add
adc
push
js
pop
pushf
or
inc
xor
mov
mulb
fmull
pop
mov
mov
push
xchg
movsb
fiaddl
imul
dec
pop
popa
or
sti
fdivr
or
enter
pop
sti
test
and
jle
pop
test
jo
xchg
lods
pop
scas
popf
lahf
shll
xor
cmp
jbe
jmp
jno
or
fs
cmp
popl
pop
add
popl
dec
stos
mov
xor
jge
sbb
movsb
mov
mov
rclb
xchg
in
mov
xchg
mov
jno
in
push
jno
cltd
inc
and
jnp
sub
cltd
xor
push
in
cmpl
es
je
mov
mov
jle
insl
jnp
jg
stos
mov
jl
les
and
test
lds
dec
nop
mov
fdivr
pop
pop
sub
loopw
arpl
stos
popf
sub
mov
out
or
inc
ss
aad
dec
ret
inc
popf
imul
push
xchg
push
pop
out
lea
pusha
jne
jmp
dec
jnp
sub
inc
cmp
xchg
lock
jmp
mov
xor
in
add
add
push
xorl
mov
cmp
xor
enter
push
pop
adc
sbb
push
testl
inc
outsb
test
rcrb
xor
popa
xchg
xchg
daa
lods
dec
inc
div
insb
add
pop
je
cmp
sbb
test
lret
jo
mov
es
or
pushf
andb
dec
gs
dec
pop
push
cld
loopne
or
popa
push
jmp
pushf
cld
mov
hlt
sbb
mov
adc
test
dec
push
pop
sbb
inc
popf
lods
push
sbb
lea
inc
mov
cmp
sbb
adc
imul
mov
mov
cltd
cmp
inc
in
adc
push
mov
outsb
movsl
and
push
xchg
lahf
imull
cmc
orb
and
jbe
mov
movsl
inc
mov
mov
movsl
push
mov
push
stc
cld
and
pop
or
dec
jmp
dec
std
cmp
lock
fcmovu
outsb
mov
dec
test
jge
test
mov
loope
daa
mov
iret
cs
in
cld
leave
push
jae
pop
sar
fucomi
arpl
pop
xchg
dec
push
jb
ljmp
dec
lret
sub
lea
insl
add
andb
aaa
call
dec
leave
mov
pushf
push
xor
mov
testb
mov
sbb
cmp
and
jge
or
xlat
das
xor
inc
sahf
cmp
xchg
jbe
mov
add
push
inc
int
push
cmp
dec
pop
mov
inc
dec
int
fists
daa
nop
inc
mov
je
pop
mov
ss
jg
repnz
push
push
jg
cs
in
into
jns
arpl
xchg
push
mov
rorl
mov
cmp
mov
and
shll
lds
xchg
inc
xor
es
clc
in
shrb
pop
jl
shr
sbb
mov
push
mov
xor
sub
cmp
or
std
in
xor
test
adc
dec
cs
and
push
fs
stos
or
rolb
xor
mov
arpl
fidivs
sub
mov
test
xor
adc
xchg
or
or
dec
imul
rcll
mov
aas
cmc
dec
xor
mov
mov
mov
lds
mov
lret
cmc
xchg
pushf
sbb
shrl
inc
mov
mov
clc
sarl
xchg
in
xor
sub
inc
inc
pushf
aaa
sub
dec
sub
js
ja
fcomi
rcl
cmpsl
jae
clc
or
xchg
cmp
mov
jb
mov
fbstp
xlat
inc
push
pop
xchg
mov
cli
mov
pop
mov
movsb
mov
and
xor
jle
addb
les
and
push
addr16
pop
daa
cld
mov
out
stc
add
jmp
aaa
inc
mov
imul
sbb
or
and
or
dec
fisttps
add
je
jp
out
inc
repz
rolb
ss
lret
pop
test
xchg
repz
or
fnsave
or
dec
mov
int3
je
sbb
fs
adc
outsb
mov
cltd
mov
shrl
mov
sub
and
mov
jno
iret
sbb
pop
and
fstpt
int
add
cmp
ljmp
fmul
xor
imul
sbb
pop
hlt
outsb
add
push
lds
in
int3
jno
dec
xor
loope
bound
lds
sti
mov
push
xchg
addr16
cmp
pop
dec
lock
mov
mov
in
out
cmp
jno
aaa
pop
and
mov
vfmsubpd
or
shlb
push
fnstenv
hlt
push
xor
aaa
cld
shlb
lds
pop
lret
clc
add
stos
inc
call
repnz
loop
inc
jae
out
pushf
cmp
jb
cltd
daa
out
jge
outsb
je
sub
cmp
insb
dec
cli
xchg
iret
mov
mov
sti
loopne
test
mov
stos
sbb
jg
mov
stos
outsb
sti
xchg
inc
insl
shl
mov
std
sbb
fldcw
shll
imul
jno
mov
ret
or
fs
push
lock
dec
sub
js
sbb
aaa
or
pop
rol
fwait
pop
mov
pop
test
cmp
add
scas
out
or
mov
adc
cmp
je
fildll
pop
rcr
xchg
inc
out
push
xor
ja
outsb
nop
sbbl
stos
insl
xor
dec
dec
add
in
sbb
xor
pop
fiaddl
in
xor
out
xchg
adc
add
adc
mov
mov
lds
int
cmpsb
sub
jnp
push
orl
ss
and
lock
cmp
dec
pop
sbb
je
sub
lret
test
and
ljmp
sbb
jb
and
lock
fildl
mov
xor
lods
xchg
out
push
add
ljmp
inc
push
mov
leave
adc
jne
add
pop
pop
icebp
cwtl
and
jg
cwtl
pop
repnz
cmp
faddl
ficoml
loopne
inc
dec
lahf
mov
xor
mov
cmpl
test
dec
fldenv
cmp
mov
adc
lds
xchg
iret
packsswb
mov
fcom
jp
cmp
test
add
sub
inc
pop
mov
scas
xor
test
and
jp
rclb
cmp
push
into
sub
andb
cmp
and
sbb
mov
test
jo
lret
in
stos
xchg
mov
cmp
dec
icebp
or
loopne
popf
push
jecxz
mov
mov
loopne
scas
mov
pop
int
sub
mov
and
out
sbb
aas
push
enter
sbb
pop
add
imul
aad
stc
xchg
sub
cwtl
insl
jbe
in
pusha
mov
icebp
insb
data16
dec
pushf
mov
mov
lret
inc
or
sbb
fsub
repnz
cmpsl
sbbl
mov
pop
addr16
add
cltd
std
or
mov
jp
xor
in
scas
mov
hlt
jnp
or
sahf
pop
out
or
xchg
jle
je
cmc
les
iret
push
test
sti
push
stos
fcomps
mov
and
repnz
icebp
insl
pop
js
push
push
lods
ffreep
in
stos
dec
jae
mov
xor
aaa
adc
xchg
stos
push
pushf
jns
fsubl
shr
dec
lds
adc
mov
add
inc
mov
fbstp
cmp
xor
aad
sub
in
stc
or
adc
add
je
mov
mov
mov
push
adc
adc
xlat
test
shr
sub
out
mov
in
adc
fistl
cli
mov
je
test
xor
or
xchg
pop
fstpt
lods
bound
push
xchg
cli
dec
push
pop
mov
sbb
xchg
mov
repnz
lahf
inc
xlat
loopne
enter
nop
pop
pop
cs
fwait
cmp
adc
push
sub
test
lea
aad
sub
push
jb
out
mov
mov
addb
loop
mov
lahf
test
and
cmp
enter
sti
loopne
das
pop
fwait
lea
add
cltd
sbb
mov
idiv
sub
mov
fwait
lcall
xchg
cmp
sub
iret
out
test
in
in
popa
pop
movsb
dec
aad
push
pushf
jecxz
lea
push
mov
jo
mov
aaa
arpl
pushf
aam
test
insb
jl
pop
fwait
sbb
mov
adc
inc
pop
cwtl
fdivrl
or
xor
sbb
mov
add
in
test
dec
scas
jbe
je
inc
or
mov
lds
dec
push
incb
inc
outsb
mov
mov
movsb
mov
jae
cs
xchg
lods
push
sub
fwait
pushf
orb
lret
test
sbb
pop
push
xchg
push
dec
cmpsb
fwait
test
loope
js
adc
call
cmpsb
shlb
fdivrs
loopne
cmp
lds
aaa
hlt
add
add
pop
subb
loop
ds
pop
je
ds
sub
sbb
in
das
push
xor
lods
and
cmp
nop
lret
jbe
and
push
mov
inc
into
jle
cmp
mov
cld
jnp
push
bound
cmp
xchg
ljmp
imul
test
xor
cmp
mov
add
mov
aas
and
jnp
jmp
mov
pop
cmpsl
mov
xchg
jae
pop
dec
mov
inc
adc
cld
mov
sub
or
je
mov
push
push
fcmovbe
sub
jb
and
lcall
inc
add
test
lods
decl
out
pop
and
aam
and
jle
ja
mov
popf
js
lret
popf
daa
adc
out
out
aam
mov
dec
inc
movsl
add
add
int3
daa
cmc
mov
pop
jmp
mov
push
cli
popf
lahf
into
xor
xor
in
test
cmp
sbb
imulb
and
out
repz
push
mov
in
mov
and
push
sub
jmp
pop
sahf
adcb
pusha
cmp
jne
adc
pop
sbb
xchg
sbb
or
dec
add
push
shlb
inc
sbb
insl
pop
insl
xor
adc
sub
xchg
sub
add
adc
sbbl
addr16
cwtl
dec
xlat
add
inc
jo
dec
lahf
sub
mov
dec
jmp
enter
adc
cltd
ficompl
sub
outsb
sbb
adc
mov
setno
call
xchg
sub
push
sbb
lret
icebp
js
in
dec
jb
add
out
cmp
les
std
imul
ss
push
idivb
orl
daa
repz
xchg
sub
es
out
sub
jmp
pop
adc
scas
sbb
xchg
push
arpl
repz
int
add
sbb
data16
iret
inc
sub
fwait
xor
out
xor
jb
jecxz
cmp
popf
shl
pop
push
or
mov
orl
xor
push
jbe
dec
rcll
mov
call
inc
adc
and
or
adc
test
out
lods
cmp
sub
sbb
push
stc
add
pop
in
orb
xor
push
push
test
xor
xor
pop
mov
out
push
das
mov
ljmp
fnsave
pop
pop
mov
ljmp
jb
cmp
movsl
cmp
mov
xlat
inc
addb
int
pop
add
inc
push
stos
rcrb
lods
shll
or
cmp
mov
inc
stos
mov
sub
jne
or
in
call
inc
shll
iret
cmc
int3
and
pop
outsb
mov
mov
fwait
jo
popf
pop
sub
jg
nop
hlt
or
ja
mov
jmp
insl
inc
jno
stc
cmp
lret
lods
clc
ds
leave
fistpll
jecxz
mov
dec
aaa
xchg
dec
mov
push
mov
mov
ret
mov
pop
fnstenv
dec
xchg
test
inc
fsubl
outsb
repz
notb
ds
xlat
mov
adc
pop
mov
and
push
push
mov
dec
xor
insb
bound
enter
push
test
aad
cwtl
scas
lcall
aaa
rclb
loopne
cltd
xor
loope
sub
lds
out
and
mov
cmp
das
adc
in
pusha
es
cmc
fs
sti
xor
pop
mov
imul
arpl
lods
mov
imul
sub
adc
xor
mov
pushf
mov
mov
mov
cltd
repnz
sub
inc
mov
mov
out
icebp
xchg
ja
cmpsl
mov
pop
xchg
add
xorl
mov
jne
adc
pcmpgtd
lods
and
push
and
jge
adcl
dec
cmp
jge
sbb
jae
fcoms
lds
sbb
inc
ss
popf
data16
insl
fadds
inc
mov
mov
sub
rcrl
dec
test
iret
pushf
int
call
imul
loop
leave
int3
inc
test
daa
mull
xchg
shrb
ss
mov
and
fsub
xlat
jl
fidivl
dec
insl
dec
pop
test
loop
mov
jnp
jmp
jle
pop
aad
or
hlt
cmp
xchg
stc
in
push
aaa
int
ja
mov
xchg
pop
into
daa
adc
lahf
sub
cmpsl
cmp
lret
sub
or
lock
xchg
cltd
xor
lret
adc
mov
aas
xchg
in
or
xchg
fisubrs
stos
push
fs
pushf
int3
xor
stc
aam
jl
mov
in
ja
dec
adc
outsb
adc
xchg
and
nop
out
cmp
fsubl
adc
dec
shlb
cmp
pushf
cmpsl
adc
lret
aaa
or
mov
jmp
inc
cmpb
jl
cmp
and
imul
jecxz
stos
ss
arpl
add
mov
leave
sbb
pop
xor
dec
lods
inc
inc
cmp
mov
sbb
mov
aad
lds
inc
sbb
jnp
push
mov
xchg
pop
xor
sub
jge
inc
into
lahf
sub
cmp
mov
add
mov
jg
mov
pop
xor
pop
sbb
filds
push
adc
aad
xchg
jl
xor
loopne
rolb
mov
dec
in
or
inc
xchg
icebp
hlt
mov
dec
ret
pop
cld
and
xlat
loopne
fwait
push
sbb
pop
jmp
push
or
mov
idivb
mov
fsubrp
scas
dec
into
gs
in
hlt
mov
mov
aas
out
or
dec
mov
hlt
adc
or
decb
xchg
jae
inc
jecxz
in
gs
adc
jns
subl
insb
jns
inc
ss
imul
mov
lock
mov
inc
sub
sbb
popa
push
stos
lock
fwait
xor
fdivrs
fldl
loop
jb
test
cmp
fdivs
aas
lea
mov
iret
dec
lahf
cmpl
hlt
or
in
jbe
movsl
mov
mov
clc
dec
scas
jno
sbb
adc
fcmovne
popf
jne
sub
scas
mov
cs
int3
and
loopne
andb
or
and
cmc
lret
icebp
je
sbb
xchg
out
inc
mov
outsb
cmp
in
and
sti
or
mov
mov
popa
mov
cmp
sti
icebp
mov
loopne
cld
es
mov
nop
lds
aaa
jns
ljmp
es
stos
cld
std
shrl
or
nop
addr16
stc
push
jne
pop
ja
pop
imul
xchg
sbb
and
sar
push
jbe
mov
mov
xor
jg
out
ljmp
push
stc
imul
shll
and
movsb
lods
sbb
add
pop
cli
jns
stc
int3
pop
pop
cli
insb
shl
bound
xor
mov
pop
cmc
je
es
fsubl
popa
xor
out
push
adc
adc
xor
jbe
pop
jmp
pushf
lea
jmp
call
lea
jp
inc
mov
gs
cmpsl
and
out
cwtl
dec
pop
ss
pop
femms
dec
adc
iret
and
js
stos
loope
and
mov
dec
xor
push
adc
sbb
jnp
sub
lcall
loop
mov
stos
cmc
out
xlat
or
out
cwtl
sub
xchg
dec
call
inc
xchg
and
sti
push
cmc
jmp
add
int3
aad
lret
addr16
lea
es
push
lcall
cmp
ret
lods
daa
rcl
sbb
mov
stos
xchg
aaa
sbb
or
lahf
dec
and
sbb
lods
sbb
add
push
out
xchg
sub
or
inc
ret
add
cltd
adc
je
push
sub
test
inc
push
nop
inc
jecxz
inc
out
pop
inc
adc
shl
add
xchg
push
icebp
mov
cld
repnz
mov
dec
mov
imul
rol
mov
into
push
dec
dec
pandn
pushf
jo
dec
test
sbb
jecxz
mov
out
mov
dec
inc
mov
es
mov
loope
jnp
out
lea
push
jb
adc
xchg
adc
or
addr16
insb
into
std
push
cli
wrmsr
sti
call
sbb
and
and
mov
cld
pmaxub
jb
aaa
or
jge
cmpb
sub
testl
popa
lret
jecxz
or
insl
das
fistpll
mov
rorb
and
out
sub
pop
xor
out
in
xor
sub
xlat
test
jp
and
push
push
push
and
scas
pop
push
pop
in
in
push
inc
jno
jo
xlat
xchg
leave
addr16
mov
rorb
xor
push
inc
xlat
pmuludq
lea
popf
aam
mov
pop
nop
cltd
std
push
loop
fxch
pop
push
mov
lret
and
jno
push
mov
lods
push
imul
jmp
ljmp
jge
stc
push
sub
xchg
dec
fistpll
sub
movsl
popf
sub
adc
fdivs
xorl
andl
mov
pop
jbe
or
xor
cmpb
sbb
testb
inc
push
pushf
stos
and
push
ds
scas
in
xchg
js
outsl
inc
lea
and
push
xchg
popf
pop
les
cli
push
mov
push
xchg
loop
cmp
mov
jb
sbb
fldt
out
pop
pop
sarl
xor
sahf
xor
icebp
scas
mov
cmp
scas
xchg
jp
dec
int
jne
stos
xor
or
jb
push
outsl
xor
mov
cmp
fndisi(8087
iret
or
shll
mov
dec
ja
fdivr
subl
shlb
mov
dec
shl
lods
jo
push
add
and
lahf
sbb
roll
jbe
jmp
push
aam
jge
jae
and
rcrl
lea
push
incb
xchg
jno
in
add
sub
mov
lahf
pop
loopne
fwait
data16
fs
push
pop
mov
mov
cwtl
das
xchg
cmp
pop
repz
push
lock
jl
loopne
fwait
stos
lcall
dec
jmp
fnstenv
lret
or
jne
mov
pop
gs
jmp
faddl
in
inc
inc
lds
out
arpl
lods
std
int
das
sbb
jo
adc
fsubr
movsb
repz
ret
mov
les
arpl
fwait
mov
fincstp
jbe
mov
sbb
imulb
ljmp
addr16
inc
push
sbb
in
stos
ds
inc
pop
dec
or
das
lret
es
cvtdq2ps
jle
mov
or
add
mov
int
andb
pop
seto
pop
sbb
repnz
pop
or
jo
aas
dec
bound
push
aas
mov
arpl
dec
inc
adc
mov
pop
pushf
int
mov
daa
testl
mov
imul
sub
pop
mov
shll
mov
in
jns
lods
xor
xor
sub
add
mov
jge
xchg
xor
movsb
push
out
pop
add
xacquire
jbe
add
xchg
lock
jne
push
pop
xor
or
sar
xchg
dec
mov
add
loopne
ret
repnz
dec
fcoms
popa
push
mov
mov
adc
das
js
xchg
and
std
in
cmc
and
fldenv
inc
adc
into
cmp
pushf
mov
mov
mov
inc
loope
mov
push
mov
sub
mov
push
mov
aaa
adc
aaa
or
push
sbbb
push
pop
adc
mov
add
lock
adc
rcrb
cmp
das
enter
clc
push
cwtl
xchg
lret
mov
popf
jns
test
or
inc
pop
fmuls
mov
sbbl
mov
icebp
sahf
jge
push
or
mov
scas
pop
jae
sbb
leave
xchg
xor
mov
xchg
push
sub
xor
or
icebp
and
mov
pop
iret
fsubl
movsl
cs
mov
adc
rclb
jmp
fsubs
scas
xchg
or
test
ss
rolb
imul
outsl
cmp
in
mov
sahf
jmp
cwtl
out
in
adc
lcall
xor
imul
pop
enter
es
icebp
adc
mov
push
push
stc
cld
sarl
xchg
jmp
stos
movb
inc
sti
clc
xchg
sub
inc
imul
les
push
push
dec
filds
xchg
push
movb
jae
add
mov
cmp
test
sub
add
add
xor
pop
insb
fmul
out
ret
cmpsl
sub
ja
sub
dec
nop
ja
cld
lret
std
xor
sub
stc
rcrl
cli
rcll
aas
arpl
into
add
cltd
sub
stc
insl
adc
mov
jo
mov
movsb
mov
int
mov
mov
pop
mov
sub
das
sbb
nop
out
and
fs
call
shrl
or
loopne
xor
pushf
or
inc
shll
add
addr16
dec
aas
and
mov
pop
cmp
inc
fstl
pop
call
sbb
push
icebp
mov
sub
sbb
cmc
dec
lret
inc
xor
in
mov
adc
pop
xor
adc
js
cltd
adc
xchg
push
cmpsb
or
add
and
mov
je
or
jae
addr16
mov
mov
mov
test
sbb
push
test
test
outsb
inc
xor
add
inc
xchg
sub
sahf
adc
insb
cmpsl
mov
rcl
and
mov
fs
adc
mov
dec
leave
cmc
mov
xor
and
into
xchg
and
arpl
mov
mov
nop
jno
add
test
test
mov
test
jb
aad
repz
fnstsw
ror
out
cmp
int
or
pusha
andb
addr16
fidivs
orl
xchg
xchg
inc
mov
dec
cmc
mov
or
js
lods
fimull
add
aas
sbb
mull
jb
dec
mov
scas
lahf
jnp
sahf
pop
pushf
push
std
sub
cld
out
xchg
sub
dec
or
xor
jp
adc
loope
pop
cmp
insb
xchg
insb
ljmp
pop
push
dec
xchg
jnp
or
orl
or
adc
outsl
aad
xchg
xor
cmpsb
xchg
fs
jp
js
sub
xor
int3
mov
inc
sub
je
out
adc
push
mov
fadd
loope
add
xchg
xor
xchg
xchg
cmp
cmpsl
push
clc
cmpsb
lods
outsb
add
cmp
mov
imul
push
les
xchg
andl
pushf
fwait
orl
sub
fcompl
je
adc
out
xchg
push
imul
movsl
dec
pop
sbbb
sub
cmpl
push
shlb
daa
push
test
inc
shlb
mov
push
popf
cmp
push
mov
mov
call
xchg
ja
sub
xor
xchg
outsl
jg
cmpsb
pop
sar
push
cmpsb
mov
add
cmp
sub
push
bound
or
dec
adc
cmp
or
orl
scas
leave
movl
jae
lods
push
sti
cltd
test
cmp
mov
ficomps
fidivs
mov
shr
cmp
enter
and
cmp
or
dec
mov
shrb
iret
adc
and
fcmovne
lods
sete
pushf
sahf
push
orb
mov
pop
xchg
lods
xchg
and
test
repz
xor
sbb
arpl
sbb
or
mov
aam
xor
mov
repz
imul
push
in
adc
mov
sahf
loopne
andl
out
rcll
pop
adc
jge
repnz
ds
xor
imul
lods
inc
loopne
pop
or
mov
lea
sub
fs
and
mov
stos
xor
push
mov
filds
push
push
and
subb
std
mov
push
mov
jg
adc
stc
in
rorw
and
pop
sub
xor
jmp
pushf
push
adc
fidivrs
lods
cwtl
sahf
scas
push
lea
sbb
or
add
ret
int3
arpl
pop
dec
and
sbb
push
ljmp
mov
stc
ror
push
inc
pop
and
sub
jbe
cld
adc
dec
sbb
popf
pop
dec
inc
test
or
xchg
imulb
loope
rclb
xchg
cmc
and
sahf
in
sub
mulb
mov
push
out
xlat
pop
in
outsb
add
lds
rcl
cwtl
shll
fiadds
jnp
xchg
insb
jle
scas
repz
cmpsl
rcrl
or
sub
jp
mov
pop
adc
ljmp
imul
pop
mov
pop
mov
add
test
xchg
bound
in
lahf
stos
jge
fwait
movsb
mov
loope
imul
loop
cmp
in
mov
mov
xchg
data16
icebp
rcll
xchg
popf
dec
ja
hlt
pop
scas
dec
lahf
loopne
push
inc
in
adc
fldcw
out
push
int
bound
es
lahf
adc
mov
pop
mov
mov
into
popf
push
sahf
cld
cmp
xchg
mov
lods
mov
mov
sub
stos
or
xchg
xchg
pop
push
dec
stos
dec
call
ds
call
cmp
rcrb
xchg
stos
insl
cwtl
push
xchg
mov
dec
cmp
test
arpl
jnp
jb
push
push
rorb
cld
pop
test
fs
ret
and
test
cmpps
icebp
lret
aaa
xor
pop
in
lock
or
dec
cmp
xor
fcoms
mov
mov
scas
mov
scas
es
mov
adc
push
adc
fsts
aad
outsl
repz
mov
jl
in
shlb
adc
scas
cmp
adc
add
rorb
imull
push
ljmp
mov
and
mov
pushf
movsl
sbb
push
iret
jmp
mov
push
push
add
stos
fmuls
xchg
cli
mov
xor
push
pusha
pushf
push
loopne
inc
jns
nop
add
mov
pop
cmpsb
push
adc
or
sbb
adc
or
mov
jb
pushf
test
mov
push
aad
xor
aaa
push
adc
rorb
fnstenv
xchg
sbb
shrl
jmp
hlt
mov
xchg
lret
jne
pusha
xor
mov
mov
mov
xor
fwait
mov
add
lahf
in
mov
call
popf
loopne
fsubl
jbe
cmp
and
add
pop
push
inc
xchg
mov
mov
in
scas
scas
mov
out
aad
movsl
add
push
sbb
mov
push
cmpsb
and
jo
mov
adc
xchg
mov
sbb
test
jecxz
xchg
outsb
mov
dec
dec
cwtl
js
bswap
imul
jp
adc
push
dec
push
outsb
dec
pusha
and
sub
lret
sar
sbb
sahf
xchg
cwtl
rclb
or
imul
das
repz
jae
repz
rcrb
out
dec
cmpb
jp
add
add
sub
mov
rolb
cmpsl
test
loopne
mov
inc
sub
xchg
and
inc
jns
jmp
dec
outsl
and
cmp
cmp
out
roll
mov
movsb
imul
imul
loope
jg
dec
insb
iret
pop
jl
bound
adc
loop
add
cmp
daa
stos
jg
push
stos
popa
cli
add
out
push
clc
xchg
cmp
sub
jge
mov
jg
dec
push
iret
push
lods
pop
push
loope
lcall
push
and
push
push
mov
arpl
out
push
outsb
sub
movsb
inc
dec
jnp
fstpl
push
das
dec
jp
lcall
mov
imul
repnz
call
movsl
loop
shl
repz
mov
in
je
or
xchg
and
or
data16
dec
inc
push
cltd
pop
lods
add
sub
ss
push
add
xor
xchg
arpl
dec
fdivrp
and
hlt
loopne
cs
add
pop
rolb
cmp
mov
test
pop
mov
js
jle
popf
scas
les
push
nop
je
jo
xchg
aaa
pushf
je
dec
in
gs
mov
sbb
ss
fisubrl
xchg
fnsave
push
in
jle
cmp
push
frstor
sarl
jl
aad
gs
push
rorb
stc
adc
mov
ljmp
mov
dec
out
pop
jne
out
es
jmp
scas
pop
pop
sbbl
mov
cmp
aas
sbb
push
push
ja
inc
lahf
hlt
mov
gs
mov
das
push
pop
hlt
insl
dec
and
adcl
imull
mov
iret
lea
add
cmp
mov
repz
fucomi
add
je
push
mov
adc
jns
cmp
imul
inc
fimuls
sarb
pop
jl
test
fistpl
gs
dec
cld
mov
mulb
adc
cmp
cmp
lds
nop
push
sub
sbb
mov
les
cld
push
rcrl
lret
subb
cmc
aam
icebp
out
push
clc
test
cmp
mov
and
aaa
lea
clc
add
jnp
mov
xchg
in
cmp
aam
add
mov
mov
aad
and
adcb
aam
or
enter
cmpsl
clc
adc
push
add
push
sub
lods
adc
dec
push
clc
mov
cmp
pop
xchg
adc
shrl
mov
shrl
sahf
ror
push
adc
pusha
sub
fisttps
sahf
add
cwtl
mov
and
cmp
mov
push
mov
data16
adc
cmpsb
pop
fadd
xchg
inc
imul
lret
nop
cmp
or
jae
push
mov
lret
insb
mov
mov
and
mov
jg
mov
aaa
mov
adc
ficompl
and
cltd
add
xchg
aas
pusha
sahf
mov
mov
loope
gs
movsb
inc
nop
sub
ficoms
jns
test
aaa
roll
jg
insb
mov
roll
and
add
into
lods
sbb
fs
fistl
pusha
loope
pop
loopne
mov
mov
sub
stos
xlat
adc
repnz
mov
insl
ljmp
inc
loop
jno
loope
or
enter
or
out
lret
xchg
xorb
mov
in
jbe
adc
js
stos
xchg
jl
add
lahf
sahf
lret
pop
push
stos
cmpsb
out
imul
and
aad
push
outsl
mov
sub
sub
sbb
lods
inc
adc
std
arpl
iret
outsl
aaa
jbe
and
lret
mulb
int
inc
xchg
or
and
js
fists
pop
sbb
nop
push
scas
jl
out
lock
sbb
scas
loope
out
mov
in
js
pop
scas
cmp
xchg
adc
mov
dec
push
cmp
hlt
jnp
push
lea
out
inc
rcll
xchg
dec
lret
daa
inc
jge
push
stc
push
es
std
daa
out
inc
sbbb
push
ljmp
jne
mov
popf
sbb
sub
insb
cs
inc
and
sbb
test
cwtl
xor
or
fbstp
cmp
movb
mov
testb
dec
xchg
scas
pusha
adc
adc
fstpl
lret
dec
dec
fsubrl
adc
je
xchg
lret
out
sti
pop
push
test
stos
and
and
es
xorl
punpckhwd
fwait
mov
icebp
xchg
or
into
js
xor
xchg
jo
xchg
dec
cmp
test
mov
fldcw
xor
nop
insl
sub
and
fcoml
jo
mov
dec
inc
pop
pop
dec
dec
xor
pop
arpl
jne
pusha
leave
stc
push
xchg
add
shlb
and
xor
inc
sub
sbb
mov
sbb
push
test
loope
cmp
sub
or
push
jns
add
and
push
in
sub
stos
mov
xchg
xchg
dec
sub
enter
in
inc
or
out
mov
in
push
clc
inc
scas
lcall
aam
jae
arpl
sbb
jb
fldl
pusha
pop
call
push
jp
cmpsl
dec
xchg
push
inc
sub
lret
int3
leave
inc
cwtl
mov
adc
mov
adc
adc
inc
mov
cmpsl
dec
dec
sub
popl
pop
or
lret
ss
test
cmp
jns
jmp
int3
pop
cmp
dec
insb
mov
cmp
mov
fwait
mov
lret
dec
add
jecxz
mov
jne
pusha
sub
insl
jle
imul
add
and
arpl
pop
fistpl
xor
les
cmp
or
jp
and
repz
push
imul
mov
push
aaa
jno
cmp
jns
mov
std
mov
stc
aaa
mov
ja
dec
in
sbb
cld
cmp
sahf
sbb
stos
aam
fisubrs
fsubp
sti
jns
xor
cmc
outsb
cwtl
sbb
cmp
mov
clc
insl
push
pop
out
jno
sbb
aam
pop
imul
xchg
jecxz
movsb
add
iret
dec
pop
movzbl
mov
mov
iret
ljmp
call
bnd
fsubr
mov
nop
shrl
pop
mov
inc
inc
xchg
push
pop
mov
pop
scas
push
adc
clc
movsb
mov
sbb
ret
push
pop
mov
clc
pop
sub
movsl
mov
out
inc
imul
or
sarl
pop
push
rcrb
fstl
sbb
pusha
pop
addb
jp
mov
hlt
cmp
clc
adc
jle
or
jge
int3
into
mov
fcom
out
mov
inc
jo
subl
jg
lahf
hlt
or
ret
shl
bound
pop
rorl
jnp
fs
and
jns
inc
xchg
stc
repnz
mov
mov
cli
loope
stos
add
subl
ret
rcll
std
pop
in
ret
inc
in
cmc
jne
stos
cmp
and
inc
cmpsl
jne
lcall
xor
test
inc
and
add
call
adc
mov
mov
sub
mov
insl
gs
jle
xchg
cmp
cmp
leave
loopne
sub
add
add
ret
mov
push
or
inc
cmp
xchg
dec
mov
in
push
xchg
sub
add
sub
cmp
xor
and
int3
mov
xchg
mov
inc
push
cli
inc
xchg
mov
pop
mov
or
mov
mov
sub
sti
jecxz
sbbl
sbb
pop
pop
and
xchg
dec
hlt
dec
push
pop
and
inc
addb
movsl
das
push
mov
imul
push
insb
pop
lret
xchg
jp
mov
xchg
or
or
stos
data16
sbb
pop
fwait
out
and
enter
sbb
cli
and
pop
push
mov
mov
mov
push
jno
test
lea
dec
andb
cmp
movsb
call
out
jnp
out
push
addr16
jno
jns
in
rclb
imul
ss
xchg
add
sbb
push
outsb
mov
rcr
add
inc
xor
mov
mov
test
icebp
mov
cmc
fistpll
xor
out
add
fxch
jb
aaa
adc
sbb
mov
cmp
mov
and
add
mov
jne
mov
rcrl
lret
lcall
push
dec
rorb
mov
ror
scas
mov
pop
adc
dec
shl
jecxz
in
jno
test
pop
ljmp
jmp
idivl
push
fstl
jb
pushf
adc
push
outsb
push
dec
xchg
dec
orl
mov
pop
cmp
sahf
xchg
shll
test
add
mov
mov
into
lret
jecxz
shlb
mov
xchg
sbb
pop
mov
or
fiaddl
scas
inc
scas
or
add
pusha
mov
sub
and
and
adc
scas
xchg
pushf
push
and
sub
add
pop
fwait
loope
data16
xchg
cwtl
stos
or
shlb
cmpsl
fdivrl
jnp
sub
addl
pop
dec
into
aaa
jp
sub
mov
lods
daa
mov
lret
inc
xchg
and
jmp
out
ret
mov
add
push
cmp
lea
pop
cs
pusha
hlt
dec
dec
dec
sbb
repz
out
xor
push
fcoml
sub
mov
inc
mov
icebp
aad
btr
jg
xchg
adc
pop
test
cltd
jle
lea
adc
sbbb
repz
dec
or
outsb
les
push
test
sbb
mov
jae
mov
pop
inc
jmp
adc
lret
cmp
popa
or
sub
fidivrl
cltd
loop
adc
out
inc
insb
lea
adc
leave
adc
pop
mov
jo
outsl
sbb
sub
cmpsl
mov
enter
es
lds
cmp
adc
mov
popa
in
adc
sub
inc
jmp
xor
jecxz
insl
arpl
dec
inc
mov
jmp
jae
lss
rcrl
and
ljmp
and
sti
aas
es
gs
pop
shlb
mov
mov
add
sbb
or
je
mov
negb
dec
mov
adc
add
pop
cmp
mov
std
sbb
cmp
mov
pop
mov
sbb
push
mov
pop
out
adc
xor
jmp
out
aas
cmp
cs
sti
xchg
inc
ss
out
push
stos
aad
jl
movb
xchg
or
xor
outsl
outsl
loop
fs
sbb
outsb
inc
push
jge
adc
xchg
insl
or
pop
fdivrs
xchg
xorl
fimull
lock
rclb
push
divb
jb
push
sarb
dec
lahf
lret
jne
pop
pop
mov
adc
rdpmc
cmp
inc
fldt
pop
in
out
sub
adc
pop
rorb
and
mov
in
jae
jnp
adc
test
jne
cmp
lods
sub
stc
cmp
loope
mov
add
or
in
sub
or
fnclex
cmp
leave
int3
xchg
fstpt
jmp
or
sarb
or
or
dec
inc
push
push
dec
fdivs
add
cmpsw
stos
sub
sub
and
inc
or
mov
sbb
push
ljmp
ljmp
or
inc
loope
xorl
sti
es
pop
push
jge
xchg
aaa
cmp
loope
fldcw
mov
in
mov
mov
pop
xchg
pop
call
pop
cli
pusha
jp
scas
adc
std
pop
lds
arpl
mov
dec
movsb
jecxz
ret
xchg
sub
sbb
es
divb
lret
fmull
inc
mov
sti
dec
pop
out
push
pop
loop
call
imul
adc
arpl
fistps
push
aaa
xor
dec
movsb
mov
cwtl
gs
fdiv
daa
les
popa
xor
imul
mov
cmp
cmp
add
cmp
fcmovnbe
mov
mov
ret
call
popa
xor
int
mov
mov
fwait
cltd
xchg
sahf
in
into
adc
push
adc
add
push
popf
arpl
adc
test
adc
xor
bound
inc
jns
pop
outsb
pop
ss
repnz
xchg
cmp
and
clc
push
mov
or
ja
dec
pop
insb
jmp
shrb
sti
stos
loopne
mov
push
mov
loop
fmull
or
hlt
and
inc
out
jmp
sbb
aam
cmp
sub
jne
adc
mov
inc
dec
decb
pop
fmull
aas
xor
jns
out
push
mov
jg
loop
cmc
fs
mov
testl
add
ds
or
pop
arpl
loopne
icebp
pusha
sub
xor
lock
jge
mov
dec
mov
lea
sub
jle
mov
cmpl
ja
minps
add
add
mov
mov
in
je
and
xor
mov
aas
xchg
sbb
jo
jge
or
cmp
out
lds
icebp
fdivrs
into
push
mov
dec
mov
mov
mov
outsb
dec
repnz
aad
nop
or
or
in
pop
xor
fdivrs
xor
xorl
pop
out
sbb
sub
push
fxch
push
or
cltd
leave
insl
mov
sti
push
mov
pop
hlt
stos
push
pop
and
dec
mov
pop
inc
pushl
and
notl
dec
mov
lds
pop
sub
mov
testl
lods
sbb
pusha
mov
popa
int3
push
cmp
and
xor
sbb
dec
iret
aam
push
icebp
int3
fadd
dec
jne
mov
cs
mov
test
mov
push
add
jge
push
nop
iret
fisubs
pop
into
adc
gs
and
scas
or
jecxz
pushf
aad
adc
and
out
jno
mov
popf
sub
push
push
or
pushf
notb
ja
xchg
cltd
leave
cmp
or
stos
push
fsub
push
push
mov
sub
decl
rorb
call
mov
xchg
or
orb
inc
icebp
mov
sub
negl
fs
mov
add
js
fiadds
ss
aam
cmp
pop
jg
push
push
xor
in
and
push
jmp
pop
arpl
sbb
sbb
sbb
sar
mov
pop
adc
jns
loop
rcrl
arpl
dec
mov
sbb
inc
out
addr16
movsb
fists
jnp
cmpb
shrb
sub
cmp
je
and
jns
out
cltd
push
in
xchg
xchg
push
add
clc
mov
fldl
fstpl
xor
leave
jle
sub
ja
push
lret
nop
mov
and
inc
jmp
inc
mov
and
push
scas
jb
not
test
mov
jo
fcompl
jecxz
sub
bound
int3
push
pop
loope
add
daa
mov
sub
idivl
sub
cmp
push
loope
enter
pusha
stc
xor
dec
out
adc
and
stc
je
out
add
outsb
inc
mov
push
in
add
sbbb
jns
js
pop
insl
out
int3
jle
mov
push
lods
mov
sti
loopne
xchg
shl
cmp
sub
out
pop
pop
rcll
or
inc
cmp
mov
pop
or
mov
xchg
repz
mov
cmp
pop
insl
mov
push
cmp
sar
out
push
add
pop
cmp
push
dec
aad
test
or
and
pusha
imul
mov
sbb
fiadds
and
orl
dec
stc
xchg
clc
push
lret
mov
rcrl
outsl
lahf
mov
pop
je
mov
in
pop
test
rclb
jno
in
cmpl
dec
mov
sbb
xor
adc
mov
lods
push
jno
mov
test
shrl
lods
into
xor
add
mov
cmpsb
xor
jns
ret
test
sbb
out
sbb
sub
ss
bound
mov
out
in
lahf
in
lret
xchg
pop
enter
xchg
mov
gs
fmull
enter
aad
jl
fnstenv
push
dec
push
sub
and
aas
mov
movsl
xor
mov
and
inc
jge
sbb
cwtl
inc
or
push
sub
aas
or
pop
jne
mov
call
jecxz
repnz
inc
adc
lock
mov
fbld
cmp
cwtl
xor
lcall
imul
outsl
test
les
arpl
rorb
jle
jmp
cli
sub
subb
shlb
js
push
mov
adc
lds
push
leave
sub
dec
jl
xchg
mov
loopne
dec
add
stos
lcall
mov
arpl
ret
mov
xchg
je
dec
mov
neg
subl
divb
xchg
insl
adc
lock
push
int3
xlat
ss
mov
lahf
sub
sbbb
inc
cmove
pop
ljmp
ret
scas
xchg
notb
ja
into
and
push
sub
sbb
int3
jg
xor
pop
push
in
lret
jo
push
repz
adc
add
jmp
jle
push
test
adc
cwtl
push
inc
cwtl
push
int3
adc
lods
xchg
pop
test
add
adc
and
repz
nop
cmp
mov
loop
mov
cs
fs
lds
jle
mov
and
jmp
cltd
cmp
dec
inc
mov
dec
imul
dec
int
add
xchg
rclb
shrb
icebp
dec
mov
mov
and
push
hlt
xchg
scas
stos
lcall
xchg
cmp
push
push
adc
das
dec
mov
mov
cmp
aas
dec
add
dec
stc
add
pop
out
pop
xchg
lock
nop
popa
or
rclb
mov
ljmp
and
pop
ret
in
into
cld
and
and
cs
xchg
mov
jg
adc
into
mov
aam
aam
daa
out
xchg
mov
fldenv
out
or
pushf
test
and
jns
orb
jns
sbb
mov
mov
in
or
mov
adc
jecxz
xlat
mov
imul
std
mov
pusha
shlb
pop
test
cmp
addr16
cmc
jno
add
and
test
cmp
sbb
jnp
outsl
mov
clc
cwtl
mov
out
sbb
jle
lds
mov
lock
mov
inc
clc
pop
sub
mov
arpl
adc
testl
or
leave
addr16
lds
sbb
pop
sarb
cmp
scas
jae
sti
lahf
inc
sub
test
jae
sbb
repz
je
sub
shll
push
cmpsl
inc
mov
icebp
push
xor
cs
aam
lret
fucomip
repz
and
int
xchg
dec
sub
jae
shll
or
leave
in
repnz
insb
cmp
xor
push
scas
and
adc
or
mov
fadds
push
or
jb
imul
adc
pop
test
jne
and
decl
imul
sbb
std
or
sbb
and
sub
shlb
dec
lods
pusha
repz
test
lahf
mov
cmp
sbb
push
adc
inc
xor
xchg
mov
push
mov
jo
repnz
push
xor
add
mov
push
jmp
xor
mov
cld
mov
sbb
loop
pop
lcall
jl
in
push
aad
pop
enter
test
cmp
dec
push
fdivs
xor
lds
loop
hlt
sub
addl
aad
jnp
inc
pop
push
mov
sti
cmp
cs
mov
mov
incb
cmpsb
jno
addr16
or
testb
pushf
imul
xor
insb
lods
shll
aad
out
std
sub
popa
jmp
push
in
sub
pusha
jb
int3
jo
in
jno
test
gs
cmpsl
cmc
out
int
jbe
rcl
js
pop
and
mov
xchg
pusha
jg
jne
imul
xor
xor
and
cwtl
push
fmuls
pop
out
fidivl
mov
lds
dec
out
or
leave
dec
xor
outsl
xor
out
mov
mov
mov
inc
push
dec
out
push
dec
arpl
dec
jo
or
mov
and
add
fistl
aam
push
insb
xlat
lock
popf
orl
dec
push
out
fstps
sbb
shlb
jae
mov
jl
lcall
lods
adc
xchg
sbbb
daa
fisttpll
push
aaa
iret
in
clc
xchg
aaa
xchg
mov
push
push
test
mov
adc
shrl
in
push
jmp
clc
mov
testl
shl
std
insb
scas
scas
push
jnp
pop
decl
pop
jb
mov
test
sub
jnp
std
sub
mov
mov
cmp
and
or
divl
cmp
insb
rolb
xor
stc
loopne
mov
sahf
jns
xchg
fistps
cmp
mov
push
jnp
adc
mov
aad
insl
inc
inc
xchg
xor
inc
ret
data16
fucomi
push
push
sbb
out
sarl
stc
lock
dec
cmc
inc
lods
pop
jle
lea
lds
xor
adc
cmp
fldenv
adc
dec
mov
out
or
mov
jl
jae
or
sub
sub
cli
mov
jb
jmp
inc
test
xchg
loope
aad
or
mov
pop
jno
insl
int
cmp
mov
lds
inc
push
adc
fdivrs
dec
call
pop
mov
inc
shl
or
neg
add
mov
loope
int
lock
aad
popa
add
dec
sbb
fbstp
inc
stos
and
cmp
sub
imul
adc
jo
mov
mov
popf
push
inc
mov
or
mov
xorl
test
mov
out
adcb
popa
sarl
iret
insl
out
fidivs
sbb
aaa
ret
or
mov
xlat
pop
mov
lahf
stc
pop
insb
and
mov
mov
sarb
ljmp
lret
xor
mov
scas
or
and
inc
orl
and
adc
stos
lods
mov
xchg
in
cmp
mov
pop
and
jge
cmp
sti
lret
push
mov
enter
sbb
data16
cmpsb
mov
push
xchg
imul
sub
add
xchg
xlat
sub
gs
sbbl
sbb
xor
fstps
or
add
cmc
fadd
sbb
sub
ret
shl
pop
subl
sbb
add
mov
push
out
cli
mov
lock
xchg
cli
insb
adc
inc
and
jle
ds
and
jl
out
imul
xor
cmpsl
in
ret
cli
fstpt
test
push
pop
xchg
pop
pop
mov
xchg
mov
adc
or
loope
mov
cmp
add
sub
or
pop
sub
push
repz
push
js
sbb
jb
nop
pop
repz
popf
inc
mov
or
mov
out
loopne
dec
and
xchg
xchg
cmp
push
adc
lahf
inc
fnsave
mov
jnp
ljmp
enter
incb
dec
sbb
imul
adc
fs
test
inc
fwait
pop
out
pop
dec
sti
je
jno
pop
loope
loope
stos
or
pop
lock
push
xor
rorl
aas
push
pop
ss
mov
out
scas
mov
mov
mov
and
mov
cld
xor
pusha
mov
daa
xor
out
and
mov
loope
pusha
inc
dec
rcrl
mov
cld
js
or
add
ret
cmpsl
in
je
addl
in
fs
stos
cwtl
pop
push
pop
ds
jmp
pop
adc
sub
xchg
push
adc
call
mov
in
icebp
push
and
stos
jge
push
push
je
xor
mov
dec
out
sub
inc
mov
jmp
mov
adc
xchg
imul
mov
mov
xchg
adc
dec
adc
shll
aad
loope
pop
adcl
dec
lods
push
jge
and
push
out
mov
cmc
xchg
ficompl
ret
lods
pop
rorl
mov
mov
push
mov
cmp
std
call
inc
flds
sub
ja
dec
clc
pop
adc
cmp
adc
es
inc
jae
int
imul
sbb
sbb
and
mulb
push
pop
lret
dec
sbb
dec
jmp
aaa
jmp
jge
mov
xor
fiaddl
mov
subb
scas
jl
mov
shrl
data16
les
dec
pop
dec
jl
out
sub
mov
inc
dec
cmpsb
shlb
push
stos
fnsave
test
push
push
scas
insb
data16
add
or
nop
xchg
add
aam
jge
out
jecxz
movsb
lcall
ss
subb
mov
popf
mov
pop
or
mov
icebp
fidivrs
aam
outsb
cmp
sbb
mov
xor
arpl
sbb
rcr
loop
mov
pop
inc
fimuls
addb
repnz
ret
xor
xor
sub
orl
icebp
orb
in
mov
mov
mov
test
sahf
fmull
sahf
icebp
push
or
lahf
dec
popa
jb
mov
fsubrl
mov
cwtl
loope
mov
push
loopne
fsubl
movsb
pop
cmc
lret
pop
jmp
pop
push
lahf
leave
aad
out
sbb
test
add
outsl
add
in
add
insl
cmpsb
jmp
ret
call
pop
dec
sysexit
shrb
popa
addr16
and
mov
and
popf
push
and
sti
lret
mov
shrl
mov
mov
and
sub
aas
icebp
loope
and
lea
inc
jns
mov
push
pop
cmp
adcl
mov
jb
jmp
adc
adc
xchg
sbb
dec
sbb
xchg
imul
orb
sti
and
cld
and
inc
insb
mov
cmp
test
jb
or
aaa
mov
mov
call
icebp
xor
jmp
push
stos
push
adc
pushf
subl
filds
fs
dec
mov
xor
lock
jno,pn
xchg
addr16
clc
lods
out
push
xchg
cwtl
cmp
jns
inc
push
add
push
jmp
xchg
sub
movsb
mov
inc
shrl
and
divl
das
stos
js
push
push
roll
jne
jecxz
xchg
sbb
push
insl
movsl
xchg
push
jae
loope
sbb
rorb
repnz
loope
push
jge
jg
loop
push
scas
add
sbb
pop
repnz
xor
movsb
mov
sub
lea
mov
mov
mov
xchg
movsl
mov
in
mov
lret
push
inc
inc
and
sbb
dec
call
inc
repnz
add
rol
jo
push
dec
mov
and
jp
popa
sbb
stos
push
loope
cmpsb
and
cmpsb
xor
inc
jns
push
mov
xchg
and
popa
negl
lock
mov
stc
pop
fwait
jns
mov
dec
shrl
lock
loope
sub
stos
push
and
mov
xor
pop
out
ja
inc
or
inc
insl
flds
cmp
xor
xor
pop
pop
aad
sbb
mov
nop
pushf
xor
ljmp
stos
pushf
cmp
pusha
push
in
sbb
nop
negl
les
bnd
aaa
nop
lret
xlat
and
imul
sub
popf
scas
and
lahf
xor
pop
lahf
imul
test
mov
jnp
pop
inc
fisttps
lods
int
int
fcoms
xchg
push
jae
dec
subb
fldenv
mov
dec
sbb
or
jnp
jg
add
cld
mov
jp
rcrl
adcl
xchg
cmpsb
and
sub
repz
mov
and
out
mov
adc
and
test
inc
pop
cmp
mov
sti
ja
lock
je
and
stos
lret
cmp
rcrb
jne
inc
jmp
cmp
mov
leave
lcall
je
push
adc
sub
inc
mov
bound
ds
dec
enter
cli
xchg
test
lds
dec
cli
add
add
adc
mov
xchg
xchg
jg
xchg
cs
sub
xchg
adc
iret
gs
sarb
mov
dec
movsb
cmp
and
pop
leave
pop
mov
push
cmc
xchg
out
mov
fcomps
mov
mov
scas
mov
and
xor
mov
popa
sbbb
hlt
cli
js
out
in
mov
scas
jp
and
add
mov
test
cwtl
sub
mov
cltd
cmc
inc
cld
pop
je
ja
neg
negb
inc
sbb
sbb
cld
mov
jmp
and
mov
cmp
stos
mov
insb
adc
lds
popa
xchg
push
dec
push
xchg
jle
inc
sbb
popf
fwait
sbb
or
lret
lcall
xchg
pop
gs
add
ss
outsb
fnstenv
cmp
int
jbe
push
je
push
rcll
push
leave
add
aam
lods
mov
leave
push
xlat
pop
and
nop
divb
repnz
call
jp
pushf
int3
xchg
arpl
out
or
cmp
ror
mov
mov
scas
ss
popf
mov
imul
mov
pushf
jge
xor
cltd
push
lea
add
pop
inc
add
sbb
iret
mov
cmpb
mov
cmpsb
add
aaa
imul
mov
jnp
ds
lods
jl
mov
and
fmuls
mov
lahf
and
cmpsb
adc
loopne
mov
or
inc
cmp
inc
xchg
dec
add
mov
jmp
cmp
cwtl
xor
push
mov
cli
push
int3
pop
leave
cmp
dec
loopne
aaa
jecxz
aas
push
add
imul
dec
and
xlat
mov
xchg
jae
jge
push
sub
leave
ljmp
mov
stc
lea
mov
rcrb
outsb
mov
inc
and
mov
xchg
push
out
pop
fstpt
dec
mov
and
aad
mov
test
sarl
addb
mov
jl
lea
movsb
mov
xchg
test
shlb
sarl
sub
mov
or
cmpsl
hlt
add
mov
cld
and
inc
lods
jmp
mov
outsl
clc
loop
cmp
aaa
or
out
enter
sbb
sbb
add
inc
push
and
and
xchg
loope
or
outsl
sbb
add
mov
movsb
adc
lahf
jns
out
imul
bound
inc
pusha
dec
cmp
pop
and
inc
cmp
into
or
jne
repz
out
leave
andl
ljmp
or
mov
xchg
inc
cmpsl
or
in
add
mov
pop
add
and
gs
jmp
jae
imull
jecxz
cmp
lret
push
in
test
push
adc
loope
scas
out
aad
push
mov
inc
jg
jp
pop
mov
xor
mov
out
pop
jecxz
shl
sub
mov
js
sub
rol
subl
mov
les
out
add
aaa
xchg
mov
fistpl
data16
xorl
shrl
imul
mov
jno
out
xorb
mov
dec
outsl
icebp
sub
scas
pop
loopne
lret
sbb
scas
bnd
popa
xor
out
lea
arpl
nop
jae
inc
sbb
cmp
dec
aad
and
pop
rcrb
scas
cmp
pop
sti
cmpb
test
repnz
js
jno
push
sbbl
call
jp
jns
inc
adc
outsb
and
xor
pop
xchg
dec
push
sub
cli
adc
and
ljmp
cld
out
scas
mov
cmpl
js
push
add
arpl
rep
clc
sbb
push
or
push
test
stos
orb
fwait
inc
xor
mov
lcall
adc
pop
adc
aaa
mov
testl
stos
idivb
sbb
pop
and
clc
xlat
lods
mov
cli
lcall
mov
data16
adc
sub
test
jg
cmc
es
cltd
and
jae
out
mov
fbstp
adc
int3
jl
fsubrl
jno
sub
dec
xchg
jmp
or
add
or
jae
sub
sub
fwait
or
sahf
pop
xor
xchg
or
pop
cld
daa
fisubrl
insb
mov
xor
cmc
les
pop
inc
lahf
xor
subl
icebp
test
lahf
jnp
pop
pop
iret
jge
sbb
out
rcrl
orl
cmp
sbb
add
push
aaa
cmc
pop
mov
cmp
pop
shll
pushf
daa
add
cmpsl
loop
pop
pop
fsub
adc
xlat
mov
mov
cli
pop
mov
out
xor
std
cmp
das
les
jle
lahf
add
jno
push
and
sbbb
pop
fcompl
popa
pop
or
jl
and
dec
sar
gs
cmp
xor
add
sahf
mov
bound
lods
jp
sbb
pop
imul
dec
mov
push
pop
push
mov
jae
fucomp
xchg
cltd
test
aad
adc
std
mov
fadds
sub
pop
inc
xchg
sub
stos
out
push
cmpsb
mov
sbb
adc
push
sbb
lret
out
daa
adc
in
loopne
jo
xor
xlat
in
push
mov
sub
in
sbb
insl
int
pop
mov
fdivs
pop
mov
push
pushf
movsb
loop
push
in
sub
inc
inc
pop
xchg
jl
mov
lahf
xchg
fwait
divl
cmp
sbb
andl
pop
or
jge
xor
fldl
pop
sarb
mov
cld
dec
xlat
xchg
push
test
js
mov
les
loope
fs
aas
shll
mov
or
jne
mov
mov
mov
jb
mov
push
push
mov
pop
and
into
lcall
shll
xor
incl
jl
mov
psrlw
add
pushl
lret
mov
mov
test
cmpsb
ss
jle
cltd
inc
pop
iret
or
mov
testl
sti
fsubrp
int3
mov
enter
or
ret
cmp
pop
data16
add
mov
or
scas
mov
mov
loop
mov
setl
popf
out
inc
push
dec
daa
sbb
rcrl
ds
sbb
jp
sbb
andb
or
jno
pushf
sub
test
jae
lret
sub
rorl
pop
push
xchg
adc
push
into
fcoml
pop
lcall
mov
dec
or
jnp
add
push
mov
push
lcall
fwait
fs
lret
icebp
dec
or
jb
sbb
dec
bound
pusha
pop
push
add
mov
inc
outsl
notb
sub
add
or
sbbb
push
and
movsl
sub
sbb
jo
dec
movhlps
pop
inc
inc
leave
in
sbb
mov
jne
jge
dec
mov
mov
insl
xchg
outsb
xor
inc
lock
cli
pop
pop
mov
and
inc
fwait
sub
int
test
aam
shll
mov
inc
ljmp
xchg
and
jecxz
sub
outsl
xlat
xchg
mov
aas
mov
adc
push
test
icebp
dec
or
icebp
je
in
push
jne
call
out
and
or
fisttps
push
in
pop
mov
add
xchg
inc
mov
mov
movsl
clc
inc
push
or
mov
sahf
sbb
lret
insb
cmp
pop
ja
adc
lret
mov
adc
stc
mov
adc
pop
xlat
mov
popa
xor
jmp
lahf
jno
mov
rolb
int
xchg
sub
in
lahf
lret
push
xchg
enter
stos
or
pop
xchg
add
nop
sub
cli
les
jmp
cli
mov
cmpsl
push
jbe
arpl
pop
mov
das
push
jb
test
push
mov
xchg
fs
fstps
cld
jbe
clc
leave
fdiv
lock
pop
inc
adc
pop
jge
out
cmp
inc
or
pushf
adc
mov
ja
pop
xor
popf
mov
test
pop
ja
and
outsl
outsb
mov
hlt
test
stos
in
sahf
adc
data16
dec
cmpxchg
jecxz
aad
xor
mov
js
and
sub
mov
mov
jno
pop
into
loopne
iret
js
xchg
call
sub
jle
push
cmp
jmp
pop
pop
sub
insb
scas
or
lock
and
sahf
int
and
jns
aad
dec
and
xchg
sub
aam
fwait
push
ja
push
cltd
ret
inc
scas
gs
stc
mov
xchg
xor
xor
movsb
leave
imul
push
stos
xchg
adc
das
roll
push
mov
lret
add
cmp
cli
cmp
fwait
or
mov
imul
inc
fldcw
mov
aaa
sub
mov
lods
movsb
xchg
mov
dec
jg
loope
cmp
int
cmp
ljmp
jae
mov
subb
lods
fcoml
mov
icebp
incb
mov
cmpb
aad
mov
js
pop
cmc
jg
pop
sub
xlat
testb
mov
mov
dec
scas
push
ja
mov
sarl
or
fsubs
mov
repnz
dec
adc
sti
fisubrl
sbb
imul
sub
lods
outsb
fidivs
cmp
fucom
mov
popf
outsl
or
inc
add
test
inc
repnz
mov
pop
testb
xor
test
adcl
xor
adc
roll
push
xchg
dec
xchg
and
dec
aas
sahf
cmp
dec
bound
daa
cmp
rdpmc
in
sti
clc
jne
push
je
xor
pop
cmp
loope
ljmp
lahf
call
sahf
add
dec
cmp
scas
xchg
mov
cmp
ret
dec
sbbb
jae
lds
aad
jns
test
stos
fisubrl
xor
xchg
mov
or
mov
mov
mov
lds
xchg
dec
add
pop
js
rorb
jnp
inc
cli
mov
dec
roll
mov
xor
call
and
cmp
xchg
and
mov
xchg
xor
jecxz
sbb
cmpsb
pop
dec
cmpsl
inc
fsubs
dec
sub
into
outsl
movsl
mov
inc
data16
ret
push
and
out
mull
sub
jb
mov
inc
lock
loope
or
pop
jnp
fistpl
dec
out
mov
les
fstl
cmp
inc
fsubr
enter
arpl
stos
fisubl
dec
mov
inc
cmpsl
inc
mov
dec
dec
xchg
cmp
sahf
lods
fcmovnb
add
out
or
nop
xlat
orb
out
add
mov
fmuls
cmpsb
adc
fisubrl
jecxz
shlb
dec
and
dec
pop
repnz
or
sub
test
scas
sbbl
aam
xchg
bound
int3
inc
xor
jne
outsl
mov
adc
or
jmp
jecxz
mov
adc
or
lea
mov
out
mov
cmp
sub
add
in
mov
mov
inc
and
inc
outsl
cmpsl
scas
push
mov
push
jecxz
push
mov
mov
xchg
fs
gs
out
inc
mov
test
fxch
std
je
cli
jmp
push
mov
mov
pushf
inc
cli
pop
pop
popw
mov
popa
cmp
lcall
fs
ss
jl
and
fs
cltd
add
mov
mov
in
popf
cld
sbb
jo
sub
sub
icebp
inc
test
mov
cld
or
rolb
mov
push
mov
add
scas
arpl
mov
ljmp
or
and
sbb
xor
dec
int
adc
cmp
or
sarl
in
shrb
mov
lret
jp
xor
fsub
je
out
jae
comiss
jp
push
mov
push
test
outsl
xchg
inc
cwtl
or
xor
lea
imul
enter
xchg
inc
test
bound
sbb
stos
dec
cltd
pop
dec
push
fwait
popa
lret
push
and
testb
in
imul
stos
dec
or
add
xchg
inc
mov
sbb
imul
ret
xor
dec
cmp
xor
or
in
pushf
bound
adc
stos
add
dec
add
fbstp
and
inc
aad
cmp
xor
and
jne
and
clc
and
loop
inc
jmp
orb
sub
xor
mov
les
scas
push
add
dec
mov
xadd
jbe
xchg
lret
movsl
ret
and
dec
push
fstpt
sbb
jbe
repnz
add
mov
pop
mov
push
inc
subl
ja
cmp
fs
lods
push
push
insl
jo
xor
stos
lret
sbb
or
inc
rcll
add
filds
roll
cmp
aaa
inc
ja
aaa
insl
add
inc
jmp
ja
cmp
sub
mov
mov
insl
xchg
sbb
jmp
outsl
mov
mov
js
jb
lods
repz
mov
xor
js
fstl
dec
jbe
shlb
cmpsb
mov
push
mov
dec
sub
mov
mov
gs
fsubl
scas
mov
or
out
lock
mov
fldcw
mov
negl
pushf
cmpsl
fisttps
pop
xchg
bound
fists
jo
adc
jecxz
decl
and
fiaddl
sahf
loope
add
pop
dec
scas
add
mov
dec
stos
push
cmp
fmul
lret
testl
aad
mov
scas
sub
loop
les
mov
enter
cmc
add
rcll
cltd
mov
int
repz
cmp
sbb
mov
jle
push
inc
insb
or
lcall
inc
xchg
jae
stos
lret
loopne
stos
jmp
jno
aad
and
xor
or
int3
mov
test
sub
xchg
xchg
data16
jnp
into
push
out
lods
pushw
outsb
xchg
sbb
mov
add
pop
mov
fimull
fisttps
jb
adc
mov
ss
xchg
sub
repz
add
lods
xor
arpl
ret
mov
cmp
ret
mov
das
jp
or
fldenv
and
inc
dec
jmp
jne
out
adc
mov
dec
cmp
sub
xchg
and
and
sbb
mov
popa
push
fadds
je
loop
xchg
push
add
rclb
mov
adcl
andb
xchg
bound
daa
and
jae
xchg
pushf
xor
popw
pop
push
stos
cli
int
call
pop
gs
std
sahf
add
jns
or
addr16
pop
outsb
jb
sub
push
lods
adc
jo
jo
lock
roll
add
cmp
add
scas
jecxz
cmp
mov
inc
test
sbbb
inc
mov
inc
or
bound
or
sbb
mov
and
jns
mov
lahf
das
pusha
xchg
inc
inc
push
mulb
or
push
enter
mov
inc
sub
or
mov
xchg
out
push
in
push
dec
fcomps
mov
cld
inc
jo
or
scas
mov
sarl
shrb
mov
in
ljmp
fucomip
add
or
test
mov
cmp
inc
cmp
scas
mov
arpl
and
leave
mov
pushf
mov
jbe
inc
mov
sub
pop
mov
jg
xchg
push
stos
pop
sbb
ret
push
or
call
fs
jmp
mov
jmp
mov
pop
or
lds
sub
xor
out
jg
test
push
mov
mov
fbld
fisubl
pop
rclb
jne
jbe
test
sub
push
fiaddl
bound
sub
lret
cs
cmp
call
xchg
testl
loopne
fdivrs
pop
adc
sarb
dec
or
imul
scas
add
jne
ja
xor
movsb
adc
clc
ret
xor
mov
xor
pop
cmpsl
xchg
adc
movsl
ret
mov
mov
fldcw
ds
jne
clc
xor
cld
in
lods
je
pop
lret
jmp
rolb
outsb
test
pop
mov
adc
jae
cmp
jnp
test
push
cmpsb
addr16
xchg
mov
mov
outsb
xor
add
out
fwait
or
inc
xor
adc
in
stos
jmp
stc
sbb
cwtl
sarb
or
loopne
jb
xchg
dec
xor
push
in
inc
shll
cmp
add
psubsw
jg
sbb
cmp
and
xlat
add
dec
movsl
scas
push
xchg
push
sbb
sbb
pop
mov
add
pop
pop
xchg
lea
xchg
jnp
scas
and
mov
push
cmp
sub
stos
popf
dec
pushf
hlt
insl
test
fnstenv
xor
add
enter
xchg
add
dec
xor
pop
sub
jmp
dec
dec
cmpsl
push
push
lea
mov
dec
and
cmc
jmp
xor
and
mov
mov
jae
sbb
clc
mov
mov
push
pop
and
xchg
jl
mov
stc
out
xlat
loop
cmp
push
ljmp
adc
adc
imul
or
jno
cmpsl
add
ss
push
popa
out
ds
jg
ljmp
fmuls
xchg
cmpsl
into
repnz
aam
push
test
ja
or
int3
mov
inc
movsb
xchg
mov
js
xchg
jmp
pop
adc
push
adc
lea
dec
pop
xchg
cmc
lahf
dec
out
xchg
flds
xor
ljmp
repnz
pop
stos
inc
pop
mov
fwait
xor
push
insl
or
pop
fcoml
fdivrs
adcb
pushf
imul
pop
adc
or
cld
adc
ret
and
jmp
cmp
jp
sub
mov
sub
daa
jns
jne
std
rcrl
adc
mov
push
cmp
sahf
and
sub
sbb
pop
xchg
aaa
inc
cmp
mov
cmpb
fldcw
cmp
or
dec
mov
jmp
push
fs
mov
sub
fistps
mov
decl
stos
jmp
adc
inc
std
inc
jno
sarb
lret
sub
push
in
jmp
push
lods
out
ds
and
cld
mov
pop
sbb
mov
es
xchg
dec
inc
faddl
sahf
jge
cld
mov
xchg
mov
jbe
mov
fdivs
fcoml
addr16
sbb
and
mov
in
movsl
sub
push
imul
inc
adc
and
jbe
dec
fstl
xchg
and
int
and
dec
in
call
adc
aaa
addl
xchg
jns
sub
movsl
push
mov
and
ss
into
sbb
or
je
shlb
sub
out
scas
aaa
mov
mov
aam
fstl
fsubl
sbb
cs
xchg
adc
insb
inc
jmp
or
jge
clc
pop
push
sub
scas
loop
lods
aaa
shll
add
sbbl
xchg
adc
or
fadds
adc
in
push
jns
xchg
xor
cld
sbb
out
ret
cltd
jb
mov
ret
mov
xor
aaa
xchg
movsb
push
gs
loopne
shlb
xor
lds
pop
mov
aas
ljmp
andb
stos
inc
jmp
incb
cmp
xchg
sub
fsubrl
movsb
sarb
scas
mov
mov
or
xchg
mov
mov
xchg
adc
orl
jae
stos
inc
gs
lret
leave
inc
xchg
leave
mov
es
dec
xor
leave
pop
ret
dec
xor
or
idivl
fs
rcr
adc
adc
xchg
cmp
xchg
pusha
pop
imul
arpl
loope
mov
ret
adcb
data16
fisubs
add
iret
es
insb
sub
arpl
daa
fdiv
mull
xchg
mov
jmp
aas
xchg
sub
icebp
jbe
inc
mov
fstps
push
jne
repz
lahf
xchg
out
sub
repnz
push
push
popa
int3
mov
jecxz
mov
cltd
into
pop
xor
inc
and
mov
addr16
xor
mov
lods
outsl
cli
je
dec
daa
and
nop
jmp
jl
xor
xchg
sbb
cmp
sbb
push
ret
cmpsb
mov
mov
movsl
jae
adc
scas
testb
pop
cmp
cmp
xchg
mov
sub
cmp
pop
add
push
inc
mov
ret
clc
inc
pushf
in
movsb
loope
push
push
add
test
pop
pop
imul
add
mov
adc
out
xchg
jne
cwtl
shl
mov
rcrb
xor
cmpsl
les
adc
sub
aas
lods
push
js,pt
inc
mov
vmread
sub
test
xchg
mov
inc
mov
fdivs
out
daa
test
loope
int
mov
flds
xchg
mov
jne
push
nop
pushf
ds
scas
repnz
mov
pop
cmp
inc
jo
incb
nop
nop
jne
sahf
rcrb
mov
daa
jns
in
fwait
xor
lret
cltd
das
in
mov
hlt
cmpsl
inc
out
push
mov
shrl
aam
jne
lret
aad
repnz
sbb
fimuls
mov
stos
lods
push
add
iret
mov
sub
call
add
popf
cmp
mov
mov
add
hlt
sub
inc
lds
repz
cltd
inc
mov
xor
push
insb
test
enter
cmpsl
fisubrl
je
mov
out
addr16
out
add
jne
out
mov
lahf
xor
stc
in
fmull
mov
fbld
loope
cmc
xor
fldl
jecxz
stos
aad
subb
inc
dec
scas
lock
aam
push
cmp
fwait
xchg
loope
cmpsl
jmp
jae
dec
xchg
adc
gs
jb
pop
mov
sub
aas
pop
or
adc
cmp
sti
xor
inc
lea
jp
xor
imul
add
push
inc
and
ja
lret
jo
sarb
cmp
popa
fcmovb
mov
shrb
jnp
mov
ret
fcoms
test
jne
negl
pop
cs
mov
aam
pop
rcl
add
inc
cmc
dec
mov
jmp
push
mov
mov
jle
adc
push
aaa
aas
mov
and
xchg
inc
mov
insb
pusha
sti
es
mov
add
fwait
lahf
xchg
xchg
sahf
sub
add
or
lret
sub
pop
mov
adc
sub
pushf
xchg
pop
shlb
mov
mov
orl
adc
xchg
loopne
add
mov
ret
add
mov
data16
or
fcmovnbe
jg
mov
add
cmp
mov
gs
dec
and
cmp
fiadds
sbb
push
adc
xor
cmp
xchg
mov
mov
cmp
xor
xchg
jmp
inc
push
js
mov
cld
repnz
pushf
sub
pusha
loop
test
repnz
and
jno
xor
cli
outsb
xchg
mov
xchg
and
dec
orl
mov
out
stc
jns
repz
sbb
pop
andb
push
sbb
pop
push
jnp
xchg
test
mov
rorb
cltd
pushf
dec
idivl
cmp
jno
int
in
stc
sbb
insl
xchg
xchg
aaa
mov
cmp
mov
inc
push
cmp
test
pop
out
test
push
mov
sbb
jge
adc
ret
jecxz
lret
out
cwtl
inc
in
rol
mov
xlat
cmpsl
daa
cmc
dec
mov
mov
and
js
xor
xchg
out
push
push
or
jecxz
mov
fildll
fs
in
cmp
divl
jae
push
inc
fidivl
gs
cmpsl
adc
sti
pusha
inc
and
mov
push
test
in
pop
cwtl
jns
mov
push
pop
cs
ss
xchg
addr16
cmc
wbinvd
cmp
push
enter
push
and
mov
mov
in
pop
and
or
xchg
imul
faddl
test
cs
shlb
cs
cmp
xchg
adc
out
adc
xchg
dec
add
pop
clc
bound
lea
adc
mov
std
loopne
mov
sub
mov
mov
dec
int3
loopne
iret
push
adc
lea
adc
enter
rcrb
js
jle
aas
pop
cmpsb
hlt
ss
sti
test
mov
mov
or
shll
xor
cltd
sbb
adcl
pop
and
popa
cld
test
addr16
cmpsb
xchg
test
pop
pop
aad
or
inc
mov
sahf
mov
pop
dec
aaa
test
pop
and
add
lea
ret
mov
or
mov
outsb
ret
scas
dec
test
dec
mov
sahf
mov
jecxz
dec
or
das
icebp
dec
nop
mov
add
sarb
push
movzwl
test
aas
test
xorb
dec
push
sub
push
test
xor
xlat
jecxz
xor
fcoms
pop
int
jge,pt
pop
push
adc
mov
cmpsb
inc
xchg
addr16
iret
popa
loop
nop
bnd
lcall
mov
push
push
push
inc
sbb
test
cwtl
pop
pop
cmpsb
pop
or
shl
sub
scas
arpl
shrb
adc
pop
out
mov
xor
xor
cltd
popa
idivl
jns
mov
push
jmp
mov
inc
popa
jb
jmp
sbb
sti
add
mov
xor
out
cld
add
pushf
pushf
lods
mov
aas
dec
out
sbb
add
lods
nop
in
in
iret
inc
mov
sbb
add
sbb
into
scas
pop
dec
in
rcrl
rcll
lcall
xor
xor
loop
insl
add
das
std
insb
mov
dec
fbld
and
subb
dec
xor
pop
fcmove
cmp
pushf
int3
inc
add
mov
add
xor
mov
push
aam
jns
or
mov
dec
xor
insb
ds
pop
cld
mov
sbb
outsl
fsubrl
mov
aas
aas
std
mov
repz
inc
mov
insb
push
pop
pop
sahf
xlat
cmp
push
jle
sbb
mov
xor
hlt
lea
test
or
push
pop
jnp
inc
mov
pop
scas
pop
xchg
sbb
or
xchg
out
insb
gs
xor
mov
loope
insb
pusha
pop
mov
pop
scas
add
push
jle
pop
adc
sub
or
sub
ret
jno
and
lods
adc
rcll
cmpsl
out
cli
cld
imul
aad
sub
cwtl
stos
mov
pop
pop
xchg
push
mov
pop
outsl
xchg
andb
xor
dec
and
pop
sbb
cs
fmuls
pop
shrb
jp
cmp
in
fdivp
fwait
push
cmpsl
xor
and
xchg
icebp
jno
aaa
cmp
adc
cmp
mov
inc
mov
sbb
fs
test
xor
cmc
sahf
jns
xchg
xchg
lea
sbb
mov
imul
addl
inc
jnp
je
add
imul
imul
mov
je
cmpl
push
es
dec
or
rorb
mov
jecxz
testl
mov
dec
std
xorb
lcall
lret
ss
sbb
es
dec
lret
aam
pusha
loop
inc
xor
adcb
mov
cwtl
push
sarb
cmc
lods
sbb
push
xchg
pop
push
inc
xor
and
jno
lds
inc
ds
cmp
mov
sbb
push
outsb
rcll
and
mov
xor
pop
pop
clc
stc
rcl
out
mov
mov
sbb
pushf
imul
inc
mov
push
mov
data16
mov
mov
scas
push
jmp
push
pop
iret
mov
bound
stc
adc
jl
sbb
out
mov
aad
stos
jge
test
pop
inc
push
scas
cmp
fiaddl
loopne
call
or
bnd
hlt
stos
and
bnd
cli
jae
dec
fldcw
jg
rorl
das
cmp
push
fcmovb
and
daa
fadds
sub
mov
pop
ljmp
add
gs
stos
into
mov
repnz
xchg
cmp
mov
ret
dec
xor
aas
lret
loop
out
enter
lods
in
lods
loop
xchg
push
shr
adc
xchg
insb
sub
sub
pop
sarb
ds
pop
mov
xlat
inc
test
push
lods
cltd
mov
mov
and
mov
pop
aad
pushf
cmp
sbbl
or
stos
jb
sbb
push
insb
out
nop
dec
dec
cmpsl
jecxz
in
lret
jno
scas
push
dec
adc
or
ds
out
shll
ljmp
mov
scas
dec
xor
and
mov
adc
das
adc
xor
cmp
xchg
je
pop
outsl
outsl
inc
aam
inc
pop
cmp
sub
mov
cmp
int3
xchg
sbb
fidivs
ss
jmp
push
mov
mov
cmp
pop
ret
jae
and
popa
mov
fmulp
shufps
cmp
daa
cmp
enter
in
xor
mov
jmp
ja
clc
int3
js
rol
push
adc
ds
cltd
repnz
pop
mov
sub
hlt
je
jmp
lods
push
rcl
arpl
int3
mov
dec
sbb
out
cmpsl
testl
test
jnp
jae
mov
clc
push
and
loop
fnstcw
sub
data16
scas
insb
cmp
mov
js
imul
sbb
mull
cs
inc
jns
fmull
sbb
pop
in
sarb
fwait
mov
cmp
jnp
dec
pop
pop
inc
adc
lcall
and
mov
mov
mull
dec
mov
jmp
inc
pusha
bound
stos
fcoml
mov
xchg
rsm
sbb
xchg
jmp
sbb
jmp
incb
push
push
scas
cmp
inc
loop
fstp
call
inc
stos
int
rcr
mov
sub
mov
pop
cmpsb
push
push
jae
or
out
xchg
imul
repnz
mov
pop
gs
jb
mov
idivl
mov
sbb
mov
aas
push
mov
fsts
popa
jmp
xor
push
pop
xor
fidivs
rcr
xor
repz
cmpsb
jmp
pop
enter
stc
dec
cwtl
pop
aas
scas
cmp
add
dec
push
adc
loope
sub
das
sbb
aaa
jne
xor
ds
add
push
or
cmp
push
xchg
mov
push
adc
outsl
adc
icebp
leave
icebp
arpl
push
jl
in
mov
cmpsb
stc
lcall
insb
push
cmpsl
push
outsl
push
gs
stos
nop
lock
or
xchg
and
test
adc
mov
sub
sub
mov
add
ret
aad
adc
jmp
dec
sbb
pop
mov
subl
xchg
or
and
sbb
sub
aam
xor
xor
jno
in
dec
das
shl
rcrb
add
push
jne
cltd
es
data16
loopne
lods
out
icebp
into
cmc
mov
fnstcw
stos
sub
add
lahf
push
test
stos
xchg
pop
mov
cltd
outsl
xchg
mov
rorb
into
adc
mov
in
lret
ret
fsubl
int3
pop
xor
mov
in
push
sbb
pop
jbe
cs
and
xchg
int3
xor
mov
push
ljmp
xchg
gs
mov
push
aas
and
cwtl
push
cmpsb
mov
pop
ds
push
push
sub
lods
push
cld
xor
mov
shll
fistpll
repnz
scas
mov
mov
sbb
xlat
inc
aas
test
jns
jo
out
mov
xchg
es
push
cld
fsubrl
push
cmp
repnz
jecxz
movsl
mov
push
adc
bound
repnz
mov
mov
mov
movsl
add
pop
mov
popf
shll
mov
pop
inc
imul
shlb
cmc
imul
movl
idiv
push
repnz
mov
sbb
pop
pop
outsb
sbb
inc
fdivrs
sbb
mov
sub
mov
cmp
imul
mov
cmp
popa
inc
repz
ljmp
or
ljmp
jmp
das
sub
jge
je
cwtl
adc
stc
cmp
pop
xor
stos
jle
cld
mov
or
dec
lds
push
cli
push
sub
test
mov
std
or
mov
inc
adc
not
jo
sbb
dec
fucomi
in
imul
mov
push
and
or
sub
movsb
sub
mov
mov
movsl
cmp
xchg
popa
xchg
cld
xor
scas
rcrb
inc
dec
cs
or
stos
dec
orb
lock
aam
lret
sbb
aad
iret
andb
sbb
popa
stos
stc
xor
loop
xchg
mov
test
popf
out
inc
out
scas
jnp
mov
jns
inc
roll
aam
mov
mov
mov
push
movsl
xchg
push
mov
stc
shlb
fildll
lods
loope
leave
fidivrs
xchg
mov
mov
ds
shll
xor
test
or
add
mov
or
add
sub
mov
loop
push
enter
loop
fwait
add
inc
loop
jge
int
shll
xchg
ds
rcrl
aas
cmp
jecxz
jne
fcomps
nop
lods
push
sbb
or
rcrb
and
movsb
test
or
add
loopne
lea
test
repnz
aam
daa
out
add
aas
inc
mov
outsl
imul
xor
bnd
hlt
insl
arpl
or
testl
call
ljmp
jmp
sbb
in
stos
mov
je
in
leave
fwait
adc
mov
mov
and
add
lcall
orb
stc
out
jno
cs
rorb
and
mulb
addr16
jb
jg
enter
popf
movl
xor
cmp
sbb
std
add
jg
hlt
rcl
mov
jle
and
mov
orb
sub
das
pop
clc
pop
xor
mov
loope
scas
mov
scas
and
sbb
inc
insb
dec
test
aad
mov
mov
or
aas
clc
mov
pop
push
push
stos
ljmp
mov
xlat
sbb
pop
repz
mov
fildl
push
cld
push
cmp
mov
mov
enter
push
aad
push
pop
mov
jo
sub
out
inc
call
xlat
xor
lcall
push
adc
aad
movsl
cltd
push
jb
into
adc
daa
test
lret
push
xchg
out
jae
popf
ret
outsb
scas
aad
inc
ret
dec
push
push
call
lret
ss
mov
sahf
pushf
inc
imul
rorb
lret
and
les
or
popa
cmp
adc
cmpsl
lods
cmp
jns
mov
fidivrs
mov
or
inc
pop
int
lods
mov
negl
xchg
pop
pushf
adc
sub
cmp
into
xor
movsl
popf
sub
xchg
sub
inc
adc
xchg
insl
mov
mov
or
push
test
mov
jmp
adc
fnstenv
pushf
jb
add
popf
jmp
in
push
push
test
or
jecxz
cmp
das
jle
push
mov
inc
insl
incl
and
stc
mov
popf
push
mov
mov
dec
outsl
sub
sub
xlat
sahf
inc
das
mov
push
sbb
push
test
cmpsl
rclb
xchg
ds
add
adc
stos
sub
test
dec
jno
ror
stos
in
adc
cs
insb
stc
mov
lods
jl
sbb
inc
clc
sub
divb
iret
and
cmp
sbb
jbe
cli
mov
inc
inc
subl
cmp
enter
ror
not
daa
and
sysexit
inc
pop
lret
xchg
xlat
sub
push
or
xor
out
xchg
shr
imul
fnsave
adc
inc
leave
pop
shrl
cwtl
lds
inc
call
sub
pop
into
dec
cmpsl
enter
mov
jl
sub
mov
and
cltd
or
sar
nop
pop
jb
lret
sbbl
adc
or
das
xor
pop
and
test
mov
inc
jae
mov
std
cmp
jnp
or
ljmp
sbb
arpl
pop
int3
mov
xchg
xchg
leave
daa
xor
in
lcall
xor
fidivrl
inc
mov
pushf
sub
stos
in
pop
add
daa
dec
jge
xchg
fcoml
je
stc
adc
dec
insl
mov
cmp
testl
mull
mov
cmp
das
jnp
xor
mov
rcl
cli
ficoms
and
cli
inc
mov
retw
mov
pop
mov
sar
dec
rcl
out
imul
cmp
idivl
push
jb
mov
cmp
mov
sub
stc
pushf
pop
imul
xchg
dec
lods
hlt
fs
adc
adc
adcb
push
popa
mov
and
sbb
mov
lds
mov
xor
mov
dec
fisubl
test
int
adc
dec
xchg
arpl
dec
jmp
jnp
shrl
rorl
orl
frstor
lods
or
mov
mov
adc
xor
das
push
gs
shl
or
xchg
jne
cmp
xchg
pop
icebp
jbe
ljmp
xlat
and
push
dec
rcrl
push
push
add
cs
out
pop
push
imul
or
sub
dec
test
pop
repz
inc
sti
outsl
test
mov
adc
and
lea
push
loop
in
or
add
jg
jge
mov
ds
fistpl
push
lret
mov
inc
leave
push
in
test
ret
cli
pop
fisttps
xchg
dec
and
test
into
cmp
mov
scas
or
xor
pop
add
push
flds
sarb
jg
push
pop
mov
pop
ja
scas
out
ds
xchg
push
mov
cmc
or
xchg
pop
iret
adc
mov
loop
push
and
xlat
pop
xor
lea
sbb
push
stc
push
push
addr16
ja
ret
dec
or
push
js
sahf
int3
xchg
xchg
cli
mov
sbb
pop
in
dec
sbb
jnp
clc
lods
dec
test
inc
fimuls
sbb
dec
into
out
aad
stos
pop
or
push
pop
mov
repz
pop
cmpsl
inc
jg
fldenv
add
shrb
mov
insl
inc
mov
cmc
and
cmp
jp
jl
add
jno
push
sahf
push
roll
sub
mov
sarl
and
in
pop
sub
repz
cmp
add
push
movsb
inc
aad
add
sbb
inc
popf
sbb
leave
pop
movsl
cmp
lret
mov
and
xchg
out
sbb
inc
or
sub
cmpsl
add
jle
aad
and
adc
icebp
jmp
mov
add
and
xor
ja
xchg
fildll
dec
cmp
or
iret
cmp
test
push
mov
sbb
mov
cwtl
dec
inc
stos
xchg
insb
dec
adc
les
imul
mov
push
dec
cmp
aas
cmp
jmp
les
add
inc
cmpsb
push
mov
je
push
xchg
in
adc
dec
or
mov
popl
xchg
adc
lea
add
cmp
mov
outsl
insb
rcrb
push
sbb
stc
imul
cmp
add
aaa
loope
adc
fnstsw
sar
sub
mov
pop
mov
shll
xchg
jno
adc
lock
jne
xlat
mov
dec
out
repnz
and
jnp
aam
bound
xchg
lret
lcall
cmpl
mov
adc
loope
mov
xchg
negb
add
mov
inc
pop
aam
jge
loope
roll
pop
out
lret
imul
jg
push
inc
lret
push
insb
sti
push
aad
out
cmc
int3
xchg
stc
adc
rcrb
jp
mov
adc
pop
stc
in
or
jb
adc
lds
dec
cltd
in
cmp
scas
cmpsb
sub
cmpsl
cmp
jmp
adc
fdivs
les
mov
jnp
xchg
fs
out
xor
lahf
push
inc
pop
xlat
mov
adc
sub
cmp
test
and
cmp
test
repnz
addr16
cli
jmp
insb
sub
and
sub
push
sub
xchg
or
mov
jmp
sti
pushf
adc
mov
jne
stc
mov
add
mov
pop
adc
xchg
cmpsl
mov
mov
fadds
cmp
jo
sarb
sbb
leave
insb
mov
push
cmpsl
pop
ja
call
pop
xor
and
call
mov
cmpl
pop
pop
jp
mov
ret
rcrl
aad
bound
pop
mov
add
lods
dec
clc
mov
fistps
xor
cltd
inc
nop
mull
jecxz
sbb
xchg
sub
fwait
inc
sbb
hlt
xor
inc
es
hlt
mov
shlb
add
mov
push
mov
icebp
sub
push
lret
mov
lahf
sarl
in
sbb
aam
je
and
add
lock
pop
xor
repz
fdivr
pushl
or
aas
cmp
cmpsl
out
push
sub
xchg
push
stos
cmc
stc
ret
pop
ds
lret
jb
notl
leavew
addr16
and
inc
popf
ret
push
ds
addr16
add
dec
lods
test
jge
xchg
fcmovu
cmp
jno
in
sub
pop
cltd
pop
xchg
out
push
and
fwait
inc
out
lods
int
sbb
adc
mov
and
scas
lock
lret
lods
movsl
xchg
dec
rcrl
lods
outsl
cli
decl
lret
cmpsl
sarb
xor
jl
lods
mov
mov
or
cmpsb
out
xor
fldl
or
mov
xchg
dec
insl
sbb
in
aas
icebp
int3
cmp
xor
mov
mov
into
and
push
out
daa
les
mov
jl
xor
test
or
sub
or
mov
enter
cwtl
notb
jb
inc
iret
lea
not
mov
jl
in
outsb
mov
dec
int3
daa
sub
dec
mov
inc
jmp
lods
repz
mov
mov
gs
push
movsb
mov
pop
movsl
cmpl
jecxz
jle
loop
popa
es
and
mov
push
lods
es
movsl
inc
ret
int3
add
jl
mov
push
sub
test
cwtl
aas
push
pop
lea
stc
inc
cmp
add
movsl
and
je
gs
out
add
sub
in
pop
jmp
mov
push
fiadds
test
mov
cld
inc
adc
aas
mov
xor
insl
mov
push
shll
mov
aad
int3
dec
xor
xchg
fsubrs
or
adc
ss
pop
cmc
cmp
dec
jmp
inc
out
sub
int3
aam
test
push
fldenv
push
push
sarb
xor
sbb
xchg
fucomp
mov
xchg
idivl
popa
xor
jbe
loop
xor
dec
fmull
nop
mov
pop
sub
xor
lods
jno
mov
mov
hlt
jbe
jae
add
mov
sbb
sub
sbb
or
adc
test
and
add
fimuls
je
scas
ficompl
xor
jg
xor
ss
pusha
je
sub
pop
xor
sbbl
into
bound
jmp
inc
push
ss
jo
and
nop
jge
mov
ljmp
inc
dec
ret
scas
test
lcall
or
jb
movl
cmp
nop
cmpsb
sbb
movsl
jecxz
andl
mov
push
sarb
xchg
int3
cltd
shll
inc
sub
sar
mov
bound
cmp
mov
lods
leave
add
sub
aaa
mov
mov
popf
xor
push
icebp
sub
out
jle
mull
push
mov
push
mov
pop
push
lock
cmp
fninit
mov
pop
push
mov
lds
adc
cmp
sarb
stos
sbb
add
and
arpl
in
rclb
pop
sti
sub
fucomi
sub
jno
repnz
cli
adc
fwait
hlt
mov
insl
test
mov
add
rclb
adc
lods
out
mov
rorb
mov
add
bnd
loope
inc
mov
out
inc
mov
adc
inc
gs
sbb
cmp
lods
scas
or
in
mov
ror
cmp
xor
inc
test
xchg
pop
pusha
xchg
inc
dec
aad
cmpsb
shrb
cmp
pop
or
test
rclb
mov
arpl
shrl
leave
rcll
hlt
sbb
sbb
rorb
sub
xor
mov
punpckldq
cs
adc
leave
cmc
lret
ret
cmc
std
mov
repnz
xor
ret
push
cli
sbb
xchg
lahf
imul
mov
sub
and
sti
mov
and
pop
dec
sub
push
enter
mov
push
cmpsl
fstl
ljmp
scas
adc
cmp
cmp
mov
or
push
mov
rol
jg
xor
repz
pop
movsl
jle
int3
mov
in
adc
xor
inc
in
inc
sarb
jb
push
rcrl
ja
sbb
pop
insb
mov
inc
insb
jae
cwtl
or
dec
std
popa
xchg
andl
push
iret
jb
jbe
bound
movsl
jmp
inc
fwait
jp
mov
sub
stos
and
cmp
test
dec
test
jl
ret
addr16
mov
scas
std
dec
das
hlt
add
or
lea
or
sub
add
xor
ja
sbb
jmp
fistps
enter
mov
leave
adc
xchg
lods
addr16
ja
sbb
in
xor
sub
add
xchg
sbb
inc
xchg
das
sbb
mov
mov
cmpsb
jmp
jecxz
mov
loop
scas
inc
ret
lahf
daa
add
mov
and
inc
pop
cmc
pusha
ss
cwtl
xor
ret
enter
push
inc
mov
addb
jmp
ret
ds
sbb
les
shrb
sub
jns
hlt
push
out
pop
int3
mov
fwait
push
and
lahf
ljmp
lret
cwtl
push
lods
mov
and
lods
call
adc
rorl
sub
das
mov
test
adc
mov
cmp
and
xor
xor
pusha
dec
fisttps
fsub
adc
add
add
pushf
popa
clc
adcb
aam
sub
test
adc
jmp
dec
sub
jge
and
outsl
sbb
mov
pushf
xor
xchg
and
and
sub
adc
lea
jae
js
rorl
test
push
daa
sahf
sub
cmp
sbb
ljmp
sbb
cmp
ret
sbb
cwtl
push
sar
ja
out
or
lcall
lcall
adc
add
call
dec
xchg
pop
scas
sbb
les
jae
push
cmpsb
inc
inc
dec
jbe
int3
ficoml
mov
xchg
ret
pushf
fs
mov
adc
sub
add
and
adc
in
mov
sbb
ret
movsl
lds
lcall
jb
pop
fwait
dec
xor
inc
xor
cwtl
sbb
dec
add
mov
lds
inc
ljmp
mov
mov
inc
mov
inc
sub
pop
and
ljmp
mov
inc
push
jne
xchg
or
loopne
ret
and
imul
xlat
xor
scas
jno
ss
cmp
xchg
mov
into
mov
std
imul
test
movsl
fwait
jb
xchg
xor
xchg
notl
cld
adc
push
mov
jle
addb
sbb
addr16
fadd
pop
pop
sbb
dec
bound
lea
sub
jbe
movsl
in
insl
mov
adc
daa
int
sbb
shll
arpl
dec
mov
adc
stc
adc
jl
ret
flds
and
mov
xchg
test
cli
aas
subb
lds
movb
jecxz
cmp
add
test
jmp
mov
out
inc
lahf
jmp
call
mov
ret
fsubr
aaa
sbb
inc
lea
inc
shll
sub
aas
decb
shll
pop
orl
aad
sub
add
push
aad
in
mov
rcrb
int3
daa
and
pop
lock
into
fdivrs
cwtl
mov
or
hlt
push
in
shll
lret
mov
or
jp
jo
cmp
sub
aaa
fisubl
dec
jmp
cli
dec
pop
inc
mov
mov
clc
pop
jae
and
xor
xor
xchg
cli
outsl
and
gs
stos
cwtl
sub
xlat
mov
adc
iret
fldcw
jne
flds
mov
data16
mov
repz
push
sub
cmp
mov
es
insl
iret
dec
fsubr
mov
sti
add
lahf
pop
decb
jmp
mov
mov
sbb
dec
and
movsl
imul
test
push
mov
pop
cmpsl
mov
push
out
cmpsb
add
insl
jg
ss
js
nop
or
movsl
lret
loop
xor
xchg
daa
xchg
xor
fiaddl
lret
adc
cmc
sbb
in
int3
add
iret
js
cmp
inc
lret
push
data16
aas
and
mov
fistps
pop
xchg
adc
inc
dec
cmpsl
push
test
sahf
pop
jne
cld
stos
in
sbb
jmp
popf
cmp
sbb
mov
decb
xchg
pushf
lock
inc
inc
pop
fwait
mov
repnz
mov
sub
sub
scas
jmp
repz
shll
loopne
pushf
push
jmp
add
aam
bound
ret
sbb
mov
and
das
aaa
mov
mov
ja
aas
mov
test
dec
ret
xchg
inc
cmpb
mov
test
pop
hlt
cmpsl
cwtl
adc
cmp
cmp
push
in
mov
inc
orl
fs
inc
lea
das
out
test
in
mov
adc
and
pop
popa
cwtl
gs
or
sbb
popf
je
in
dec
idivl
cmc
pop
sub
cmp
mov
jnp
repz
fwait
hlt
movsl
rcr
sbb
mov
mov
dec
jbe
pop
adc
pop
mov
or
pop
test
stos
dec
and
xchg
stc
mov
fs
cmp
and
mov
fiadds
cmp
jmp
pop
fwait
popf
mov
pop
xchg
adc
jnp
sarb
rorl
xor
dec
out
lods
inc
out
nop
lret
movsl
es
das
sbb
dec
pop
popa
loop
xor
imul
call
push
adc
sbb
mov
mov
aam
lea
sub
nop
ds
andl
imul
dec
fldt
and
nop
les
movsl
sub
and
push
rol
in
and
out
push
lods
pushf
insl
pop
or
mov
cmc
aaa
shl
mov
push
jbe
pop
bound
pop
adc
scas
lret
das
fsubrs
movsl
sarl
dec
sbb
xchg
dec
flds
pop
test
adc
loop
cmpsb
push
adc
or
sbb
je
cmp
jp
pusha
movsb
inc
mov
cmp
dec
ja
xor
jb
mov
pusha
xor
and
cli
fs
adc
stos
cwtl
xchg
es
push
cmpl
mov
ljmp
into
pop
mov
cs
aad
pop
aam
push
xor
mov
jle
sub
mov
fisttps
rol
negb
jnp
fs
sbb
or
int
mov
add
sub
and
sub
xchg
lcall
mov
scas
cmp
sub
ficoms
mov
mov
cmp
adc
fdivrp
popa
mov
dec
xchg
ret
push
data16
sub
push
xchg
sbb
shrb
popf
aad
and
in
mov
xor
mov
jp
ja
pop
fstpt
imul
mov
xor
loope
adc
xchg
pop
and
sub
fwait
jnp
xor
nop
mov
lahf
mov
jmp
ficoms
hlt
repnz
lea
mov
mov
outsl
lock
pop
inc
or
sbb
jo
mov
jno
adc
aam
and
mov
enter
sub
xor
push
aad
cmp
xor
sub
aam
xchg
cmpsl
sub
sub
push
add
push
jae
add
sbb
xchg
or
cmp
jecxz
pop
sbb
cld
jp
sub
int
xor
sbb
mov
mov
inc
jns
sbb
ss
js
aam
lret
fs
mov
push
mov
cmp
cmpsl
xlat
inc
sti
lods
into
fcoms
jmp
iret
lcall
sbb
add
scas
sub
adc
xor
rolb
inc
sub
inc
pusha
mov
in
dec
scas
in
aam
mov
je
lea
lahf
mov
pusha
adc
xchg
sbb
mov
jbe
lea
shl
fcoms
mov
jbe
mov
add
xor
cmpsl
jae
rcll
jl
into
sbb
jo
clc
pop
orb
aad
push
icebp
xchg
and
int3
arpl
jl
jb
in
cs
es
cmp
fs
jo
sub
popa
fdivl
lods
lret
mov
add
pop
std
insb
push
out
fisubrl
sbb
popa
xor
xor
pushf
push
xor
add
push
call
out
adc
sub
rcll
mov
cmpsb
addb
add
mull
dec
in
repz
jmp
push
push
or
pop
sbb
mov
lds
adc
ljmp
int
mov
xor
push
sbb
loope
inc
mov
in
lods
jecxz
jo
movsb
inc
xchg
add
lds
adc
fisttpll
mov
jmp
and
cmp
xor
js
imul
xor
adc
xor
inc
sub
aas
aaa
add
mov
mov
mov
push
push
insl
loopne
mov
cld
pop
mov
sub
ds
add
add
cltd
mov
jmp
movsb
xchg
ljmp
push
or
dec
movsl
mov
mov
inc
mov
mov
xor
xor
rcrb
iret
cwtl
and
ds
lret
add
sub
inc
and
outsl
sbb
orb
mov
fbstp
sbb
pop
push
mov
mov
lcall
push
jae
insb
in
out
and
jp
push
fwait
xchg
sub
fxam
mov
push
out
sahf
xchg
push
and
and
movsl
dec
inc
pushf
add
iret
movsb
dec
push
mov
add
out
xchg
mov
mov
and
cwtl
or
jbe
int
sub
adc
lds
xchg
pop
test
sub
in
xchg
in
movsb
cmpsl
inc
ss
cmp
jl
lcall
bswap
cmp
into
push
ret
hlt
insb
aam
jl
ret
and
ss
inc
in
xchg
jp
imul
dec
inc
and
pusha
push
mov
adc
cmpsb
jb
imul
aad
ja
insl
fwait
xor
jecxz
popf
imul
shlb
movsb
jle
popf
enter
sbb
fdivrl
leave
pushf
sti
xor
mov
or
imul
jge
mov
lods
dec
fdivl
jbe
lock
or
sub
js
in
ljmp
fists
sub
dec
push
fwait
adc
ds
into
inc
loope
and
pop
add
dec
scas
cmp
into
ljmp
popf
mov
paddw
inc
sbb
adc
cmp
cltd
popa
jb
call
data16
add
cmp
addr16
jmp
shl
or
cmp
dec
mov
xchg
in
mov
dec
fmulp
fs
fwait
outsl
sbb
xor
aam
inc
cmp
arpl
outsl
jmp
push
rcrb
push
push
shr
jnp
adc
sahf
enter
mov
xor
add
fdivrl
lock
rorl
nop
andb
push
and
test
nop
iret
scas
mov
pop
repz
mov
hlt
push
mov
mov
data16
dec
sub
dec
cwtl
into
pop
adc
sbb
add
ret
dec
dec
bound
xchg
int3
or
fldcw
adc
into
ljmp
test
addl
xchg
fidivs
mov
nop
loope
add
or
dec
xchg
xor
pop
test
arpl
push
lock
ss
pop
or
fwait
lds
lret
add
inc
mov
jne
addb
push
adc
push
sub
xor
mov
aaa
push
mov
and
rorl
and
or
icebp
pop
pop
das
loop
sbb
in
out
adc
and
popf
call
dec
out
enter
daa
out
mov
mov
adc
stc
pop
sub
pop
cmp
hlt
subb
dec
fst
stc
xchg
mov
mov
lcall
pop
push
xor
repz
lods
aad
mov
addr16
cld
daa
and
xchg
call
pop
test
insb
jge
std
and
andl
sub
movsl
scas
sahf
push
jnp
neg
mov
lahf
xorb
jmp
clc
adc
int
mov
add
std
addr16
xor
in
mov
sub
inc
outsb
cltd
lret
in
jbe
subl
std
fnstsw
ja
ja
lret
or
push
pop
inc
enter
xchg
and
jbe
stos
movsl
xlat
inc
sbb
adc
mov
mov
sub
pop
scas
sub
call
ficoms
jo
test
mov
movsb
popa
push
and
pop
mov
sbb
inc
mov
jp
cmp
pusha
or
push
mov
jp
mov
dec
repnz
cmp
adc
cld
lahf
lock
cmpl
adc
dec
mov
inc
pmullw
jl
nop
push
hlt
test
push
xor
and
mov
cmc
insb
xlat
push
or
ds
into
inc
out
sarb
sub
sub
adc
sub
int
decl
ljmp
popf
loope
push
sub
aad
add
mov
push
sbb
ret
cltd
jecxz
mov
lods
fwait
pushw
dec
xchg
mov
adc
or
fsts
jae
sub
popf
xlat
add
sub
jns
cwtl
lahf
lods
jecxz
lods
cmpsl
jle
scas
pop
insl
lcall
andb
out
mov
fsubl
xor
cmp
push
push
shll
loopne
sbb
dec
or
leave
mov
jno
fmul
mov
daa
dec
pop
add
sbb
cs
lret
test
pop
daa
add
adcb
inc
out
es
fadds
loopne
or
mov
sub
rcll
fidivrs
mov
sbb
loope
pop
sti
call
pusha
adc
mov
or
gs
cmp
pop
int3
xchg
sbbl
scas
xor
lret
mov
insb
aaa
dec
lret
stos
fsubrs
dec
push
stc
lcall
sbb
mov
shll
mov
dec
insl
add
and
sub
lea
sub
xchg
jmp
inc
fstpl
jo
pop
dec
dec
adc
pop
push
push
insl
sbb
inc
pop
idivl
inc
repz
mov
sbbb
xorb
cmp
jg
insl
sahf
push
adc
repnz
out
or
bound
test
popa
shl
in
cltd
push
int3
arpl
push
inc
dec
mov
xchg
adc
mov
add
cmp
jl
lret
cmp
xchg
sarb
mov
lds
lods
cld
jmp
sahf
orl
fcoml
xor
sbb
cltd
pop
popf
add
rcll
or
addl
cli
int
daa
je
fisubrs
mov
test
dec
icebp
scas
or
test
mov
insl
add
std
jl
add
in
inc
in
mov
sbb
ja
outsl
adc
iret
sbb
dec
ror
inc
mov
xchg
pusha
add
ret
lahf
popf
out
lds
icebp
cmp
xchg
inc
mov
loopne
jmp
dec
insl
scas
add
rcrl
mov
test
cmc
fs
sbbl
mov
pop
add
stc
jno
in
mov
mov
sub
mov
adc
fstl
mov
jnp
pop
push
out
pop
pop
jae
xlat
mov
mov
adc
cltd
add
pop
lret
push
nop
popa
insb
ss
sbb
dec
aas
movsb
nop
jne
mov
mov
adc
imulb
mov
jge
sbb
mov
inc
pop
in
stos
mov
mov
sub
mov
stos
dec
aaa
dec
imul
icebp
ret
push
adc
mov
and
pop
in
js
mov
js
sub
xor
imul
mov
and
out
aad
pop
mov
cld
rcrl
int
or
subb
inc
push
dec
cwtl
out
sahf
lret
mov
aas
mov
jle
js
hlt
xchg
xchg
push
addr16
sub
add
mov
into
and
popa
mov
pushf
fisttps
pop
and
push
shll
and
xchg
add
stos
or
jmp
pop
cmpsl
sbb
int3
loop
nop
into
adc
cmc
pop
pop
push
sbb
and
xchg
shrb
or
add
iret
add
pop
jl
dec
pop
and
inc
ljmp
dec
bound
idivb
xchg
mov
inc
xchg
mov
inc
lahf
mov
inc
push
daa
sub
fs
scas
jns
pop
pop
add
jge
leave
xor
lahf
ss
fisubrs
daa
jae
adc
mov
notb
sbbb
mov
xchg
add
arpl
cmp
mov
mov
ljmp
lods
mov
inc
xchg
cwtl
mov
jge
dec
cmp
fsubr
clc
or
shr
out
xorl
inc
ss
outsb
das
mov
mov
push
pop
aas
pop
ficompl
mov
roll
lret
xchg
das
mov
fnstcw
xchg
outsb
sub
cmp
and
sub
xchg
je
xchg
cs
xchg
mov
cli
add
fmul
stc
clts
mov
pop
ret
cmp
pop
pop
mov
fstps
xlat
subl
fisubrs
ret
lock
lods
std
sub
add
jno
sub
int
int3
mov
add
stos
adc
or
or
sahf
cli
lret
jle
lret
adc
lret
repnz
cld
jle
xor
and
sbb
stos
fisubrs
testl
lret
push
loope
push
mov
pop
or
sbb
mov
mov
insb
cmpl
push
jp
iret
xchg
loope
and
mov
push
mov
add
xlat
and
in
xchg
jne
mov
int3
dec
arpl
mov
cld
sbb
imul
dec
fwait
push
sbb
out
dec
and
push
stc
push
inc
scas
pop
imul
jg
fldcw
in
push
xchg
sbb
xchg
lret
mov
popa
pop
ret
mov
std
dec
dec
or
inc
xchg
jmp
mov
mov
xchg
inc
sarl
out
xchg
ljmp
jo
push
xchg
push
xor
mov
jmp
mov
cli
mov
dec
test
sbb
push
repz
movsl
cwtl
pop
cmpsl
inc
pop
mov
jge
pop
cwtl
mov
jne
in
add
xor
mov
cwtl
jl
dec
outsl
mov
xchg
nop
jne
mov
jge
sarl
adc
dec
test
jge
stos
in
sbb
shlb
cwtl
jb
cs
addb
cs
cwtl
mov
and
jae
add
insl
cwtl
add
jp
mov
xor
add
sub
ljmp
mov
or
fs
aaa
pop
jo
push
dec
fidivl
mov
les
push
cwtl
jle
mov
nop
js
rcr
pop
cmpsb
cmp
add
leave
xchg
aam
inc
pusha
addr16
push
mov
mov
xlat
cmp
loope
sbb
rol
xor
cmp
aaa
bound
pop
out
fdivr
cmpsl
lods
pusha
pushf
mov
insl
mov
sbb
push
inc
add
test
insl
xchg
sahf
sub
jge
jb
or
fcmovb
add
into
imul
fisubs
jns
andb
iret
jle
pop
sbb
and
das
dec
outsl
ja
inc
in
andb
xor
xor
sbb
andb
sbb
sub
sbb
sbb
pop
xchg
pop
into
inc
fmulp
pop
jae
ja
andb
addr16
sbb
test
jo
div
je
sub
sbb
insl
mov
mov
neg
stc
pop
dec
sbb
jbe,pn
lods
jb
filds
incb
test
xlat
in
xchg
ljmp
cmp
outsl
dec
cld
cli
nop
jg
inc
addr16
mov
pop
stos
in
xchg
mov
xlat
push
fs
inc
sub
jnp
xor
cld
in
xchg
pusha
jmp
out
lods
jg
call
xchg
jb
mov
subl
pop
js
je
int
push
sub
cmp
mov
test
mov
iret
sbb
or
or
mov
add
movsl
incl
imul
out
ljmp
push
cmp
ljmp
sub
fwait
or
mov
mov
mov
add
imul
add
mov
icebp
xchg
leave
mov
sub
push
push
cwtl
icebp
lock
mov
xchg
insl
mov
bswap
movb
ds
cld
inc
sbb
fisttpl
mov
mov
lock
loop
mov
jmp
jp
lea
ja
mov
dec
and
mov
jge
imul
mul
mov
lds
mov
daa
sub
roll
jecxz
aad
xor
cmp
push
inc
popa
push
cld
and
inc
test
push
cmpsl
dec
mov
inc
cmp
cli
cs
lods
notl
or
xchg
xchg
cmpsl
pop
dec
mov
inc
ja
xchg
and
mov
xchg
sub
add
adc
icebp
push
imul
mov
sub
adc
ds
and
stos
mov
cmpsl
and
cltd
jl
xchg
and
mov
das
push
daa
aaa
in
nop
mov
push
mov
xchg
cmpsl
into
cmpsb
mov
sti
ja
cmc
push
pop
pushl
jmp
int3
push
lret
and
inc
leave
andb
inc
js
jne
inc
cmpsl
push
test
mov
in
lods
xchg
or
mov
or
mov
or
pop
iret
lret
mov
dec
pop
adc
seto
xor
daa
and
icebp
add
inc
subb
inc
lods
inc
test
sti
adc
add
adc
fmuls
mov
fimuls
bound
rcrb
orl
testl
leave
les
push
mov
addl
icebp
xor
enter
pop
aas
out
stc
loope
in
hlt
sub
mov
loop
add
push
jbe
pop
pop
cmp
xor
push
jbe
add
mov
sahf
mov
ret
ja
mov
scas
push
mov
jl
adc
pop
movsl
iret
fadds
jns
stos
sub
lods
or
jmp
call
dec
roll
mov
sub
bound
scas
xorb
jb
cmp
pop
pop
pop
lods
test
outsl
or
shll
hlt
xor
jge
push
sbb
xlat
test
or
lods
mov
aaa
ja
mov
lods
insl
jmp
inc
test
jo
sbb
push
cmp
dec
dec
test
cli
fisubs
dec
xor
add
cmpsb
and
mov
mov
std
jo
fwait
mov
jo
dec
iret
dec
mov
lea
les
pop
ss
mov
sub
inc
jno
aam
imull
push
or
mov
mov
xor
lahf
inc
or
cmp
icebp
jno
adc
mov
jb
pushf
repz
adc
and
pusha
push
pop
shll
pop
mov
outsl
add
sub
pushf
dec
cli
fsub
push
pop
push
jg
test
sub
inc
imul
inc
aad
in
xchg
xchg
in
pusha
icebp
sbb
jnp
and
push
xor
xchg
jnp
sub
lcall
out
inc
mov
jmp
dec
pop
pop
mov
stc
daa
pop
jae
shll
loope
jp
pop
or
adc
push
push
repz
jno
cmpsl
lea
idivl
bsf
cmp
in
int
test
push
mov
inc
cmp
imul
aas
add
push
add
cmc
neg
sti
mov
out
push
pop
mov
fistpl
je
ja
in
jle
cmp
mov
push
fisubrl
xchg
sbb
jns
xchg
jmp
sbb
add
xchg
jae
dec
cmp
movlps
insb
adc
adc
int3
push
lcall
in
loopne
movsl
dec
insb
add
cmpsl
fstl
bound
cmpsb
push
je
fsts
add
loope
dec
lods
sub
outsl
fprem1
xchg
jp
sbb
push
dec
daa
xor
and
mov
arpl
lock
jp
push
stos
dec
cmp
push
insl
mov
push
incb
mov
rol
jmp
ja
lock
mov
mov
ror
cmp
push
icebp
cltd
into
icebp
mov
cwtl
movsl
xor
jnp
mov
dec
pop
mov
mov
and
add
rclb
xchg
adc
sub
or
int
popa
sub
and
lcall
jp
jo
enter
add
in
mov
imul
fucomip
rclb
out
xchg
gs
jmp
sub
cmp
dec
or
lock
xor
popf
inc
cltd
jp
xchg
pushw
sahf
leave
lds
test
jg
mov
test
jg
rolb
and
mov
cmpsb
lcall
out
inc
adc
cvttps2pi
adc
inc
outsl
mov
lcall
jb
xor
push
mov
stc
js
mov
das
and
lods
xchg
jmp
xchg
push
mov
adc
or
shlb
adc
loopne
cld
push
pop
mov
mov
dec
add
mov
fs
hlt
nop
scas
sub
push
mov
mov
mov
fwait
mov
iret
jmp
xor
pop
add
inc
sbb
jno
dec
imul
jl
sub
cld
ret
outsl
dec
cmc
pusha
dec
ljmp
pop
loope
sub
mov
popa
xor
int3
jno
push
inc
arpl
lock
aad
ljmp
lock
sti
movsl
mov
xchg
ror
dec
mov
mov
xchg
push
fldl
pop
aad
cld
mov
ret
leave
xor
es
xchg
fsubs
pop
into
mov
xor
stos
fistl
cli
bound
and
pop
xlat
sub
jp
popa
std
or
ficoml
sahf
sbb
test
and
jns
pop
mov
mov
push
pop
into
pop
sbb
push
nop
xor
out
data16
popa
push
sub
test
dec
ss
and
test
push
push
xor
mov
or
test
mov
lret
imul
mov
or
mov
xlat
fcomip
push
cmp
xor
dec
stos
push
push
ljmp
or
mov
repz
mov
enter
pop
pop
xlat
jp
jle
jae
ljmp
cmp
adcb
mov
cli
jno
add
js
pop
xor
pushf
mov
shrl
adc
cmpb
mov
jl
sahf
mov
leave
mov
cmpb
or
ds
sub
and
inc
or
mov
inc
out
sbb
xchg
jmp
aad
jae
lret
insb
mov
inc
add
cmpsb
jae
in
xor
push
add
push
jecxz
lds
insl
mov
xor
es
mov
add
xchg
mov
mov
out
inc
mov
add
mov
fs
loope
loope
jl
adc
cmp
mov
xor
xor
jmp
adc
add
es
xor
mov
pop
lahf
ljmp
jne
jo
in
leave
insl
test
insl
jno
add
add
dec
pushf
mov
sarb
pusha
add
jb
js
pop
push
shll
cltd
fmuls
cltd
out
mov
pop
or
pop
xchg
and
mov
jecxz
sbb
add
push
cmpsb
add
pop
sbb
lock
mov
cli
repnz
inc
aad
inc
movsl
xor
test
and
and
dec
iretw
push
repnz
pop
mov
fcoml
clc
ljmp
int3
fdivl
sar
pop
fmulp
push
popa
jl
sti
ja
pop
mov
mov
lahf
lret
outsl
or
xor
push
mov
dec
pop
in
jnp
pusha
push
daa
pop
jne
inc
jno
xlat
pop
rorb
inc
xor
push
sub
inc
sub
xchg
sub
or
lock
adc
fdivs
mov
push
cld
xor
int
inc
leave
ljmp
ficoml
inc
nop
mov
out
pop
repz
fbld
int
stc
mov
sbb
pop
push
push
cld
pushf
pop
mov
divb
or
mov
mov
add
nop
repnz
mov
fimull
push
gs
mov
mov
pop
or
inc
jmp
xor
aad
push
pop
add
lods
sahf
test
jg
lea
lret
mov
popf
cmp
sub
cmp
popa
add
dec
or
mov
or
data16
mov
lock
lcall
enter
sub
test
cld
cmp
cmp
xchg
iret
mov
inc
adc
mov
mov
ds
mov
repz
ret
nop
adc
ret
cwtl
cmp
adc
lahf
int3
pop
jnp
push
xor
mov
aas
xchg
pusha
mov
jp
outsb
rorb
jbe
push
push
call
outsl
les
sbb
ror
adc
fcomip
mov
lods
mov
inc
xor
sbbb
aas
xchg
xchg
inc
sub
jne
ja
cltd
test
mov
inc
ja
adc
inc
icebp
cs
icebp
xchg
mov
test
push
xchg
fcomps
ja
repz
test
push
pusha
xchg
insb
jle
and
mov
lret
or
adc
push
lcall
mov
mov
fistl
dec
push
xchg
shl
sti
loope
jae
xchg
xor
fwait
outsl
mov
ss
cmp
insl
mov
cltd
fs
dec
sbb
bound
inc
test
ret
sub
jns
nop
push
mov
fisttps
sbbb
cmpsb
cltd
ds
mov
shll
cs
push
adc
adc
clc
add
lods
dec
jl
pop
out
in
sbb
orb
dec
cmp
dec
mov
imul
pop
jl
bound
mov
sub
jo
adc
pop
inc
lret
imul
in
int3
inc
jl
test
pushf
std
xchg
mov
adc
pushf
sbb
lods
repnz
cmp
clc
push
out
lea
jae
cmp
test
mov
dec
cmp
pop
lret
add
push
scas
sbb
inc
ljmp
mov
popa
add
roll
sti
or
mov
or
sbb
ljmp
jmp
les
push
cmpsl
dec
sub
cmp
jb
into
mov
adc
jmp
xlat
stos
xor
dec
movsb
dec
add
push
mov
imul
ljmp
push
ljmp
popf
daa
aam
movsb
push
sahf
test
mov
stos
sub
testl
push
shrl
int3
es
or
push
mov
xchg
jle
ds
cmp
lcall
sahf
inc
out
imul
sub
xor
sub
leave
imul
jl
imul
movsl
std
repnz
push
ljmp
cmc
out
mov
pusha
jns
jo
jg
fucomi
nop
dec
icebp
dec
popa
cmp
push
loopne
sahf
cmp
xchg
pop
outsl
adc
int3
ds
jl
loope
and
or
xor
sub
lock
xchg
sub
incb
mov
out
mov
jno
mov
jg
jp
and
push
lret
cs
mov
call
jns
mov
js
shll
add
lods
enter
cwtl
or
movsb
dec
sbb
call
aaa
test
inc
xchg
rorb
into
in
cmp
jge
outsb
jg
cltd
xchg
movsl
xor
sahf
and
stc
es
jg
mov
scas
mov
insl
imul
cmc
out
cltd
sarb
push
lret
cli
push
cmp
popa
lahf
incl
outsl
inc
jmp
and
xchg
sub
in
mov
or
sub
xchg
mov
sbb
outsb
lock
subb
out
mov
int
xorb
sbb
pop
or
mov
jo
dec
xchg
push
leave
mov
jmp
dec
filds
ds
jge
push
scas
xchg
xlat
daa
inc
in
jmp
pop
loope
imul
int
shr
out
insb
pusha
in
in
sbb
xlat
es
ds
lds
adcb
test
inc
aad
out
fbstp
popf
mov
mov
sar
push
mov
test
loop
hlt
popf
cwtl
dec
in
and
mov
aad
mov
xchg
imul
and
mov
inc
lret
inc
mov
xchg
adc
pushf
bnd
mov
mov
mov
imulb
fistpl
inc
fdivrl
mov
xacquire
jno
cmc
popfw
mov
sub
mov
xchg
mov
cmp
popa
xchg
or
jecxz
movsb
cmp
test
lret
je
rorl
pop
dec
mov
out
lock
outsb
xor
in
into
cmp
repnz
dec
dec
lods
shl
ret
hlt
xchg
cltd
adc
sub
cs
jae
icebp
repz
add
mov
xor
jae
adc
fadds
adc
adc
mov
in
out
arpl
ficoms
and
and
push
add
jns
and
sub
push
mov
pop
mov
xor
or
mov
add
sub
pop
xor
ror
push
xor
mov
aam
addr16
bound
scas
dec
cmp
das
mov
shl
sub
add
mov
cld
adc
push
icebp
in
dec
repnz
outsl
sarl
scas
lahf
aad
scas
mov
or
rcrl
sbb
scas
or
ret
pop
js
pop
mov
inc
insb
in
mov
popf
and
shll
cmpsl
int
stos
pop
adc
mul
lods
repnz
or
fcomps
lcall
jmp
mov
pushf
sub
and
mov
jl
jmp
iret
cmp
jge
dec
fs
outsb
jmp
inc
inc
pusha
fsubs
test
out
sahf
dec
loopne
add
fwait
stos
pop
adc
pop
dec
into
movb
or
mov
mov
jnp
mov
sahf
aas
bound
push
inc
aad
enter
lods
fsubrs
jl
iret
and
icebp
out
push
in
pop
pop
int3
outsb
xchg
ret
dec
sub
hlt
pop
inc
outsb
aam
insb
adc
jo
xchg
or
aaa
addl
js
xchg
sbb
cmpsl
repz
enter
aad
mov
and
xchg
dec
inc
adc
shlb
and
stc
adc
lock
aaa
dec
jge
mov
xorl
clc
mov
pop
jge
mov
andb
loope
shrb
and
hlt
movsl
rcrb
add
ret
inc
ljmp
jb
sub
fimull
cwtl
jmp
cmc
loope
iret
xchg
and
ja
jmp
sbb
push
sbb
dec
enter
orb
les
mov
inc
int
dec
or
ss
fcompl
in
mov
idivb
pop
jns
adc
lret
push
insb
popf
aaa
mov
push
cli
sarl
enter
fdivl
xor
jg
pop
rdmsr
fcoml
dec
shrb
js
std
imul
sbb
aaa
cs
dec
ja
loop
lea
rcll
daa
mov
outsb
push
ss
inc
sub
xor
les
xor
mov
cs
aaa
cmp
bound
out
iret
cmp
xchg
dec
das
add
adc
dec
loop
jo
adcb
mov
cmp
daa
das
mull
pop
std
cs
ret
xor
aad
xor
xor
xor
inc
inc
add
aas
cmc
cmp
sub
sahf
js
mov
loopne
mov
sbb
sub
and
hlt
das
arpl
add
insl
bound
push
in
scas
je
mov
pop
mov
aad
out
daa
mov
mov
daa
cmp
dec
arpl
mov
fstpt
ror
cmp
scas
fists
xor
xchg
sbb
lcall
push
pop
sub
push
adc
fnsave
mov
pop
inc
cmp
cli
movsl
dec
cmpsb
test
nop
fs
icebp
jno
lret
bnd
loop
lret
in
inc
xor
add
pop
lea
aad
xchg
xchg
shlb
dec
jecxz
adc
xchg
pop
mull
cmp
adc
adc
das
or
sbb
das
add
out
inc
lret
mov
cmp
int
popf
add
cltd
lds
cmp
sbb
sahf
sbb
lahf
lea
idivl
jne
fdivl
stos
bound
mov
out
xor
shll
stos
xor
adc
out
dec
shrl
leave
popa
addb
push
cwtl
add
into
mov
jmp
ret
jl
hlt
push
xchg
mov
arpl
std
out
test
dec
fidivl
adc
push
les
or
ljmp
pop
pop
sti
movsl
test
dec
fmuls
dec
dec
call
adc
pop
jno
or
fisttpl
push
xlat
test
dec
mov
es
lods
cmp
cmc
addl
sahf
repz
test
sbb
fwait
push
stc
mov
inc
clc
sti
dec
mov
shrb
cltd
ja
mov
xchg
dec
xchg
insb
pop
pop
mov
inc
cmp
xorl
jae
call
mov
push
loop
push
mov
inc
inc
pop
mov
sarb
testl
xchg
ror
inc
jecxz
cmpsl
add
mov
push
pop
ficomps
popa
xor
popf
or
movsb
xchg
adc
pop
sbb
adc
push
lds
add
negl
cltd
pushf
aaa
dec
pop
add
xor
mov
xchg
mov
pop
dec
mov
sbb
mov
stc
out
mov
test
stos
lahf
mov
cmp
xchg
cmc
ljmp
scas
or
mov
ret
ljmp
sub
pop
cmp
adc
adc
cmp
jo
aaa
dec
outsb
dec
xor
jle
rorl
roll
mov
inc
cmp
mov
push
push
inc
cmp
stos
loope
and
push
fs
in
mov
and
repnz
cmpsl
xchg
mov
lcall
lds
push
out
push
out
inc
lods
scas
insb
rcr
in
stos
xchg
lret
jbe
and
mov
add
leave
sbb
lods
adc
push
jae
movsb
cmp
inc
pop
std
inc
in
sub
ret
push
lretw
add
mov
ret
pop
pop
pushf
data16
in
fs
insb
adc
adc
pushl
mov
sub
jle
mov
mov
ja
xor
ljmp
mov
mov
icebp
scas
jl
loopne
movsl
mov
mov
lahf
in
movsl
or
or
mov
mov
dec
mov
push
push
and
movsb
stos
jbe
daa
shrl
xor
or
pop
push
or
orb
mov
push
and
out
mov
and
cltd
fldcw
cli
je
push
mov
and
adc
addl
lret
push
cld
dec
xor
jo
inc
jb
arpl
sub
fldlg2
cli
test
cmc
cmp
movsl
fnsave
stos
inc
jge
orl
insl
roll
or
cmpsb
aas
fdivp
add
out
scas
jl
or
ljmp
les
pop
shlb
mov
stos
test
jno
xchg
js
add
jno
push
popf
push
pop
dec
cmp
scas
inc
jmp
mov
daa
ffree
and
jp
and
xchg
test
and
sbb
pusha
add
pop
and
and
jp
mov
std
push
and
lods
in
icebp
cs
shlb
fildl
nop
adc
ret
rcrl
xchg
lock
shrl
sub
inc
xchg
jb
sbb
outsb
lahf
or
mov
dec
loop
test
xor
mov
lcall
pop
pushf
dec
cmp
push
pop
and
jo
std
ret
sti
test
lods
mov
cmp
cmp
fmuls
fimull
push
xlat
fdivs
dec
push
mov
mov
add
sub
adc
in
pop
mov
fwait
mov
js
cmc
xchg
push
and
mov
fbstp
stc
and
sub
lds
cltd
mov
ja
lahf
pop
cli
xchg
out
jle
das
or
jnp
lea
dec
jns
out
push
jbe
inc
data16
movsb
mov
test
out
add
scas
pop
push
and
dec
mov
enter
std
add
push
dec
js
push
inc
leave
and
aam
dec
push
aad
push
mov
lsl
mov
mov
cwtl
xor
aad
pushf
iret
mov
movsl
jae
and
mov
lock
scas
jle
cmc
int3
ret
fcmovu
push
pop
mov
imul
mov
mov
cld
repz
sbb
inc
and
xor
ja
cmpsb
in
inc
fsts
mov
mov
loop
push
and
aas
mov
push
out
jg
sbb
shlb
inc
ficoms
push
lods
xchg
or
iret
push
out
mov
sbb
mov
pop
sbb
sbb
sbb
lock
loopne
xor
and
lret
mov
fs
fcomip
and
mov
add
arpl
sbb
sbb
clc
push
mov
sbb
dec
cltd
stos
insl
xchg
or
pop
xor
sub
inc
xchg
fwait
xchg
adc
inc
aaa
xor
push
lea
push
pop
out
push
iret
fnstcw
push
test
push
mov
mov
pusha
push
enter
lret
xchg
dec
pop
inc
iret
mov
movsl
mov
stos
mov
jecxz
cmp
lods
loope
add
pop
je
jnp
jmp
mov
je
mov
mov
sar
shll
inc
pusha
add
test
popa
and
cmp
in
add
add
dec
sub
jbe
pop
mov
loop
addr16
or
js
xor
and
fadds
cli
iret
or
sarb
out
int
mov
push
int
stos
stos
xlat
in
and
mov
or
mov
sbb
add
or
adc
inc
push
mov
nop
popa
dec
push
imul
jnp
int3
mov
pop
lock
mov
out
mov
or
and
pop
hlt
imul
lods
jb
sub
jmp
sbb
aaa
xchg
fimull
shrb
sbb
mov
outsl
jne
jne
sbb
mov
insl
cmp
push
mov
push
lock
pushf
testl
mov
mov
data16
push
push
xor
xorb
lea
or
int
das
test
xor
leave
ffree
mov
add
jo
jle
test
xchg
add
pop
loop
mov
imul
push
push
or
lret
jo
xor
sbb
xor
jle
les
aad
jne
dec
jg
adc
dec
cli
mov
mov
push
dec
inc
lock
or
inc
imul
loope
out
jbe
jmp
shrb
shll
nop
sti
mull
es
fwait
mov
rorl
push
cli
sub
cmpsb
pop
jl
sarl
fcoml
fsubs
adc
mov
lods
add
pop
adc
imul
pop
mov
mov
sbb
pop
push
pop
pop
in
call
fisubrs
xchg
xor
mov
mov
stos
out
mov
mov
push
test
dec
sbbb
sbb
mov
add
or
mov
mov
sbb
aam
adc
aad
pop
adc
nop
mov
pop
orl
outsb
jl
sti
pop
pop
mov
mov
int3
ljmp
add
mov
mov
lock
xor
pop
xor
out
scas
xchg
dec
mov
xchg
les
inc
cmpb
fisttps
add
mov
ret
rol
addr16
frstor
subl
loopne
pop
mov
out
aaa
out
test
mov
int3
ret
push
mov
inc
fidivrs
mov
jns
in
xchg
cmp
shrb
mov
je
sub
lret
lds
outsb
mov
pop
test
xor
mov
daa
in
das
hlt
pop
jecxz
adc
shlb
cwtl
addr16
andl
mov
scas
jae
fs
rorl
or
dec
jno
mov
js
loope
imul
sub
sbb
adc
fildll
daa
pop
les
xchg
push
cld
dec
jg
out
sbb
lods
or
sahf
outsb
push
sub
lss
inc
or
je
push
jecxz
shrl
mov
stos
fwait
aam
pop
push
mov
mov
lods
mov
add
dec
in
jnp
jae
adc
movsl
adc
jle
test
mov
mov
mov
ss
add
xor
ret
imul
shl
popa
mov
scas
cmp
rcll
sub
sub
lods
fsubr
jl
and
loop
data16
mov
inc
pop
movsb
iret
push
test
popf
popa
arpl
fldz
jmp
cmp
add
icebp
cmpl
stos
cli
pushf
int
ljmp
jle
andb
jo
and
jl
xchg
or
ljmp
xor
and
sbb
test
push
dec
dec
mov
pop
add
sbb
and
xchg
push
leave
and
sahf
arpl
mov
pop
cs
xchg
cli
notl
es
fwait
jge
inc
rorb
xlat
aaa
loopne
idivl
cmp
add
mov
cmp
imull
sub
dec
or
arpl
sbb
pop
pop
or
repnz
xchg
pop
push
xchg
and
xor
test
sbb
mov
xchg
jp
lea
or
out
sbb
dec
arpl
sbb
xchg
fincstp
and
add
loope
mov
lahf
jmp
bound
lret
push
aam
sub
stc
pusha
test
in
stos
mov
or
dec
mov
jmp
repz
aad
in
popf
dec
mov
mov
dec
mov
insl
lcall
dec
out
xchg
jno
sahf
jae
daa
sar
cmpsl
dec
xor
popf
ja
fcomps
rorb
and
mov
or
iret
push
cltd
mov
mov
sbb
pop
clc
add
jg
dec
into
sub
add
cmp
stc
xchg
add
and
into
pushf
mov
push
adc
lret
mov
mov
and
pop
sub
inc
xchg
mov
push
movb
hlt
outsb
movsl
dec
and
mov
iret
outsb
xchg
sti
add
inc
pop
xchg
push
xor
push
clc
sbb
insl
imul
out
mov
enter
insb
pop
sarb
or
mov
movsb
xor
xchg
in
xchg
push
mull
les
dec
aad
aaa
xchg
cwtl
lods
mov
movsb
xchg
inc
pop
pop
or
jbe
inc
or
cmp
mov
jecxz
sbb
out
fstpl
std
inc
andb
movsl
cwtl
incl
adc
imul
inc
repnz
xchg
mov
dec
push
or
daa
xor
stc
std
out
mov
mov
in
out
add
pop
push
mov
mov
lds
iret
std
xchg
sbb
fdecstp
xchg
sbb
iret
imul
sbb
out
xchg
loope
out
jnp
ret
rorb
pop
mov
jno,pn
and
gs
mov
mov
and
sub
out
adc
mov
add
jl
mov
dec
insb
pop
pop
pop
rolb
fsubl
daa
pop
jp
mov
rolb
mov
addr16
stos
repz
jle
out
xchg
sahf
jp
jno
cltd
xor
inc
and
jns
insl
std
fs
xchg
popl
out
roll
imul
mov
adc
ret
inc
int
xchg
mov
mov
sub
clc
xchg
mov
adc
push
test
call
inc
sahf
or
bound
mov
mov
xor
mov
pop
leave
outsl
fidivs
subb
xorb
inc
and
enter
cmc
ss
aad
addr16
push
sbb
jp
repz
imul
cmp
rclb
repnz
popf
mov
lock
xchg
mov
mov
push
retw
inc
inc
jae
mov
mul
inc
add
std
jbe
pop
int
ja
andl
mov
jae
sbb
ret
das
pop
mov
and
mov
out
popf
inc
add
mov
ja
mov
pop
sahf
xor
iret
adc
movsl
pop
inc
cmpb
pop
das
cmpl
aad
jmp
mov
sub
and
push
xor
pop
ret
fiadds
jmp
sub
cmp
push
fsubrs
cmp
hlt
js
xchg
xchg
fs
setae
lea
inc
xchg
pop
test
xchg
xchg
dec
popf
sub
pop
arpl
sbb
add
fwait
cmp
lds
dec
in
incb
sbb
sbb
cmpsl
push
jne
icebp
cld
pop
roll
xchg
cmp
jp
movsl
lret
cmp
sub
mov
pop
sub
insb
xor
les
stos
pop
jne
xchg
jmp
sbb
mov
jle
test
adc
sti
fdiv
xor
pop
shll
jno
mov
mov
push
jmp
lret
jmp
cmp
std
mov
xchg
sbb
lods
arpl
pusha
mov
sub
mov
out
imul
xor
out
iret
repnz
and
cs
adc
daa
rclb
xchg
rclb
out
or
mov
xchg
jo
jmp
pop
mov
or
jg
pop
lods
cwtl
sbb
ss
aaa
mov
sub
les
add
imul
frstor
or
in
pushf
and
sarb
cmp
and
and
lea
pop
lret
fiaddl
xor
xor
cs
cltd
arpl
js
clc
sbb
adc
xchg
pop
ret
mov
mov
test
mov
je
mov
and
cld
add
into
cmc
push
sub
pop
aam
mov
shl
insl
sahf
in
test
jp
and
ret
mov
cmp
mov
pop
push
outsl
push
cmpsb
pop
pop
dec
sbb
call
cltd
nop
fwait
dec
aad
cwtl
ljmp
in
jg
add
cld
lods
mov
xchg
pusha
cmp
or
mov
outsb
iret
cmp
jo
outsb
leave
dec
mov
cmp
movsl
push
xchg
jle
orb
lea
and
out
aas
cmp
add
add
mov
fimull
rclb
push
aad
data16
jp
pop
shrb
test
jo
xchg
mov
pop
jle
daa
xchg
jo
pop
cmp
dec
push
adc
testl
in
lret
jae
mov
aad
lcall
or
shl
pop
rolb
mov
add
int
pop
dec
outsb
dec
imul
cmpsb
xor
cmc
sub
and
pop
jmp
fisubrl
aad
shl
jecxz
gs
inc
inc
sub
push
stos
sub
test
cmpsl
loopne
sub
jg
aas
pop
dec
and
mov
xchg
pop
in
mov
rclb
or
and
ficoms
lock
jb
sbb
aam
add
repz
mov
std
sub
test
inc
fs
add
or
das
loopne
movsb
push
aaa
sarb
dec
xor
cmp
sbb
fisttps
arpl
rolb
imul
pushf
pop
and
mov
outsb
mov
int
inc
or
ficomps
mov
ja
add
mov
sub
jge
or
dec
stos
dec
sar
testb
jae
fwait
imul
xchg
mov
jnp
adc
repnz
fcompl
push
dec
sub
in
imulb
imul
pop
adc
inc
xlat
loope
inc
mov
fwait
and
dec
jmp
fs
pop
adc
push
cmp
popa
and
add
push
fidivrl
addr16
bound
sbb
mov
mov
mov
call
push
cmp
inc
rcrb
jmp
adc
addr16
andb
jl
ja
pop
push
mov
gs
rol
xchg
xor
pop
push
lods
pusha
sub
cmpsl
sbb
in
mov
mov
jb
push
loop
shlb
push
insb
fldl
push
sbb
sti
add
jmp
aam
mov
jmp
lods
xor
sbb
sub
mov
cmc
js
daa
adc
insb
mov
pop
sub
sbb
test
inc
dec
push
out
sub
jg
cmp
into
cwtl
dec
mov
dec
sbb
sub
push
cmp
adc
inc
or
jae
je
outsl
out
mov
shr
cwtl
sub
push
aad
push
arpl
adc
mov
mov
lods
aas
inc
xor
pop
push
cs
or
es
xchg
mov
jnp
nop
and
shrb
insl
aam
out
or
inc
adc
out
repz
jecxz
mov
push
fs
daa
inc
lret
adc
ss
repz
cld
mov
shll
or
push
jne
cli
mov
mov
je
lods
nop
movb
sbb
inc
cmp
mov
mov
gs
test
inc
testb
xchg
scas
ja
push
xor
cmc
dec
icebp
sub
loope
addr16
jae
fldenv
andb
sub
push
test
sahf
mov
mov
fdivs
jb
gs
dec
pop
ljmp
pop
adc
imul
int
pop
mov
cmpsb
scas
add
lds
rclb
nop
in
orb
dec
rolb
cmp
test
xchg
xchg
test
lds
fidivs
cltd
bound
arpl
mov
cmp
pop
inc
mov
out
cli
rcrb
cli
push
adc
aam
and
divl
sahf
movsb
push
dec
addr16
aaa
xchg
inc
pop
mov
add
repnz
loope
sbb
addr16
cli
popf
pop
add
xchg
jmp
fistpl
fmuls
leave
mov
mov
mov
test
xchg
and
ret
pop
repnz
push
insb
movswl
add
xchg
outsb
and
pop
adc
pop
aad
aad
fwait
dec
jecxz
subb
loop
in
dec
or
dec
sbb
mov
ret
insb
int3
pop
sub
push
imul
push
lock
dec
add
imul
lret
adc
mov
xchg
mov
lds
cs
pop
repnz
test
lcall
gs
leave
das
and
push
sbb
mov
and
jo
and
ljmp
js
mov
shrl
imul
or
or
add
loop
loopne
add
mov
push
into
push
cmp
icebp
xchg
cmp
xchg
sub
cmp
mov
roll
xchg
xorb
arpl
pop
inc
es
stos
out
jge
fdivs
stos
gs
movl
add
add
dec
fidivs
add
mov
or
ret
adc
xor
cmp
sahf
jmp
pop
xchg
add
sbb
push
dec
mov
js
and
cmp
mulb
mov
js
std
outsb
push
int
xchg
add
inc
inc
daa
push
imul
sub
insb
push
push
in
xchg
repnz
sbb
inc
es
mov
mov
sub
ljmp
push
insl
divl
ja
push
loopne
mov
adc
or
add
jnp
push
sahf
inc
jb
icebp
adc
jle
jmp
xchg
lods
xchg
push
mov
xor
or
out
adc
out
in
xor
xlat
jno
jmp
pop
sbb
xor
ret
dec
mov
fcmovb
dec
loop
lock
sbb
out
mov
pop
in
push
push
addr16
decl
mov
mov
shlb
sbb
and
stos
jmp
shrl
jg
cmpsb
mov
insb
push
shl
mov
jg
mov
in
out
addr16
movsb
mov
cwtl
fimull
aam
sub
imul
cld
mov
sub
addr16
gs
loopew
pushl
xor
cltd
sbb
cld
in
pop
mov
fistpl
enter
mul
cli
or
sbb
ret
mov
inc
push
stos
andb
mov
insb
fidivrs
jecxz
and
arpl
push
cmp
aam
mov
mov
popf
inc
pusha
jnp
rcl
imul
test
sub
jb
and
sub
or
and
cmp
and
int
mov
jb
add
test
or
outsb
cmp
xchg
pop
lods
das
inc
insb
xchg
je
sahf
stos
xor
sub
outsl
dec
mov
call
test
imul
push
sbb
pop
arpl
dec
fadds
mov
std
sub
in
scas
insb
cmpsb
imul
out
pop
scas
xchg
dec
xlat
cwtl
fistl
adc
inc
dec
out
mov
es
pop
push
mov
cmp
pop
inc
aaa
jno
addb
mov
mov
popf
test
arpl
cmpsl
mov
enter
fs
jo
mov
cmc
cli
adc
lret
sub
out
inc
mov
les
and
xchg
lods
jns
push
cmp
std
and
push
xchg
insb
pop
fucomi
jp
add
daa
dec
stos
cmp
mov
outsb
ror
dec
decl
popa
icebp
sbb
fisubrl
lahf
arpl
sti
inc
push
shrl
imul
insb
sbb
in
roll
in
or
xchg
arpl
cld
pop
jns
ja
or
icebp
lods
adc
cmp
sbb
sti
mov
xchg
stos
dec
call
enter
rcll
push
adc
subl
decl
jnp
mov
pop
int
sbb
outsl
pop
movsb
mov
daa
xchg
int
enter
aas
je
pushl
and
movsl
sub
test
and
inc
movsl
add
cmp
push
inc
lea
or
pushf
cmpsl
mov
sahf
in
stos
cltd
xor
jbe
js
sub
mov
pushl
sbb
or
pop
mov
outsb
out
fs
push
dec
xor
or
push
sub
xor
popf
mov
pop
mov
pop
jno
and
arpl
mov
lret
and
sbb
out
lea
ljmp
push
stc
and
dec
les
cmpsb
popa
mov
jno
xor
lret
rcl
jne
fstpt
push
sbb
xor
inc
dec
xchg
or
jns
fldl
push
mov
lcall
rorb
movsb
mov
xor
mov
sbb
cli
iret
and
fsubs
clc
pop
inc
in
out
pop
dec
enter
pushf
out
mov
mov
cmp
add
sub
insl
aam
xor
shll
inc
insl
inc
arpl
lods
pop
dec
mov
mov
push
aad
cmpsb
xchg
push
movaps
cltd
xchg
out
sub
inc
lods
lret
mov
push
inc
xor
icebp
xor
mov
call
icebp
shlb
andb
cli
cmpsl
xchg
in
xchg
lods
js
mov
das
mov
mov
cmp
xor
insb
or
pop
pop
or
pop
mov
xor
inc
call
push
ljmp
scas
loop
pop
fndisi(8087
cli
std
cmc
pop
xchg
sub
lock
xor
add
and
out
cmpsb
pop
push
cmpsb
mov
pop
aaa
adc
mov
out
cmp
mov
mov
divl
loope
cmp
popf
cltd
add
mov
in
sahf
mov
mov
push
adc
or
jns
loop
jo
orb
mov
shrl
lds
push
data16
inc
or
sub
jecxz
popa
pop
cs
in
lret
fldl
aaa
push
sub
push
and
fmulp
aad
and
inc
loopne
es
xchg
movsl
xor
test
out
jecxz
add
add
mov
mov
pop
in
ret
xlat
hlt
imul
or
cmpsl
push
iret
xchg
or
cmc
test
mov
les
mov
pop
xor
pop
xor
cli
push
repnz
iret
add
mov
xchg
jg
hlt
lods
cld
jb
sbb
popf
fadds
inc
data16
gs
cmp
sbb
out
mov
scas
or
pop
add
sbb
xchg
add
xchg
or
ret
push
test
mov
imul
in
push
mov
int3
add
test
xchg
adc
in
fsubs
nop
jnp
sbb
push
es
ret
and
loopne
and
xchg
mov
ret
cld
out
push
cmpsb
shlb
in
dec
sub
ja,pn
push
sbb
cwtl
and
stc
add
adc
pop
cltd
sub
stos
push
aas
mov
inc
ljmp
fnstcw
mov
push
ljmp
pop
ds
aam
jae
imul
add
inc
or
lret
add
adc
lret
lret
out
dec
xor
mov
push
dec
sub
cld
jns
lahf
jne
les
dec
repz
xchg
or
icebp
pop
inc
sbb
lods
inc
loope
daa
dec
rcrb
test
cmp
pop
sub
mov
or
inc
int3
mov
fisubs
sti
js
dec
adc
xchg
inc
popa
mov
push
dec
and
in
shll
lahf
add
push
sbb
push
int3
mov
mov
mov
inc
jne
ss
imul
cmp
push
outsl
jnp
cmp
xchg
in
rclb
pop
sbb
xchg
and
jecxz
mov
sub
aam
fmulp
movsb
mov
sub
sub
push
lret
cmpsb
push
ja
stos
stc
jo
cmp
push
adc
mov
test
outsb
xorl
jns
fsubrl
mov
push
outsb
mov
jecxz
cs
out
repnz
hlt
mov
push
xor
test
pop
or
mov
xchg
xchg
movsb
pop
pop
cmpsb
mov
ret
fcompl
decl
lods
mov
adc
fdivr
sbb
inc
mov
dec
or
sarb
mov
lods
std
ret
cmp
mov
dec
cwtl
ret
xchg
in
je
add
xlat
and
xor
int3
ljmp
jnp
ljmp
mov
outsl
and
test
push
mov
pop
mov
sub
mov
adc
sbb
add
xor
enter
push
mov
xchg
add
xlat
adc
scas
je
mov
add
or
xchg
adc
mov
mov
or
dec
int3
clc
inc
pop
popa
mov
fadds
pop
pushf
daa
jge
xor
data16
lock
lret
mov
lcall
push
sbb
lods
cmp
gs
mov
sarb
jno
jp
or
mov
push
stos
dec
mov
subl
push
cmp
daa
mov
dec
adc
orb
imul
in
test
iret
push
pop
pop
stos
xor
ljmp
push
add
cmp
pushl
push
fwait
jnp
lcall
insb
out
ljmp
cltd
dec
inc
or
xchg
push
push
fdivrs
sti
movsl
and
push
pop
xchg
inc
andl
in
lcall
loope
stc
mov
jecxz
mov
and
daa
or
mov
xchg
and
push
pop
aas
loopne
push
push
lods
in
movsl
mov
jb
mov
push
mov
adc
ljmp
adc
mov
mov
mov
xor
movsl
sbb
out
push
icebp
jae
repnz
arpl
pop
sub
aas
imul
push
and
jge
pop
xor
cwtl
push
sbb
stc
mov
pop
cwtl
je
xchg
inc
cltd
cmp
add
lock
xchg
mov
add
push
mov
mov
cli
loope
sub
scas
jae
imul
and
scas
test
data16
mov
and
out
cmp
sub
mov
cmp
inc
sub
or
mov
fimuls
mov
or
push
lods
mov
aad
push
in
pop
mov
dec
test
mov
inc
bnd
int
mov
ret
sbb
or
cli
pop
sbb
pop
ret
imul
sbb
vpaddw
insb
cmpsb
ljmp
inc
cltd
mov
out
int
and
js
loope
mov
popa
pop
ds
xchg
or
and
mov
std
xchg
cwtl
into
or
out
clc
sub
aam
or
push
in
es
in
xchg
cmp
sub
fst
or
jno
dec
xlat
lret
test
iret
out
sub
mov
pop
int
push
js
mov
xchg
pop
stos
pop
in
call
lret
dec
sahf
scas
andb
jmp
aaa
sahf
pop
aaa
inc
rorb
jmp
adc
xchg
imul
adc
sub
out
adc
lock
xchg
syscall
pushf
adc
or
push
scas
sub
xchg
sahf
push
bound
pop
shll
sub
pushf
or
int3
ret
sub
movsb
sbb
jl
and
pop
xchg
cmpsl
dec
mov
push
jnp
xchg
leave
into
fcompl
fbld
mov
daa
movsl
mov
inc
cmc
shlb
add
and
mov
sbb
xchg
sbb
into
lods
pusha
sub
int3
enter
adc
sti
enter
loopne
jae
movsb
sub
popf
mov
add
cmp
cmc
and
in
or
xchg
push
insb
dec
xchg
xchg
jo
jae
shll
mov
and
mov
stos
lret
mov
bswap
jmp
imul
push
adc
enter
pop
outsl
or
or
aas
sbb
mov
in
adc
add
xchg
fcoms
mov
popf
js
das
sbb
stos
xlat
scas
xchg
inc
out
jae
inc
leave
lcall
cmp
pop
repz
mov
leave
lds
inc
or
fcoml
fcmovu
out
sbb
mov
mov
jmp
pop
sub
cmp
lods
add
push
ret
decl
and
addb
push
mov
cmp
xchg
pop
leave
mov
nop
inc
jle
iret
ret
dec
imulb
inc
pop
outsb
aam
add
test
fistps
xorl
pop
das
push
push
rcl
into
xlat
fs
leave
clc
or
push
lea
aam
aaa
inc
mov
fdivrp
out
pop
clc
fnstsw
imul
cmpsb
push
loop
mov
or
mov
cmp
add
enter
sub
add
push
sbb
orl
insb
and
nop
aad
inc
in
and
cmp
fwait
xchg
mov
lods
xchg
or
mov
adc
or
jp
andl
repnz
insb
sub
lea
lock
dec
jge
mov
or
mov
test
testl
inc
xor
dec
gs
pop
les
cmp
cwtl
mov
out
or
rcl
in
adc
clc
adc
mov
repz
inc
push
xchg
pushf
xor
cli
loope
adc
pop
imul
arpl
cmp
fldl
dec
inc
jne
mov
lock
add
shll
dec
or
and
in
or
and
sub
aas
out
pusha
into
sub
pop
nop
mov
and
fs
lret
xchg
push
jmp
pop
push
sbb
clc
mov
or
enter
push
and
cs
js
xchg
inc
push
aad
jo
cwtl
xchg
pushf
pop
pop
xor
nop
pusha
mov
in
je
and
xchg
ret
adc
adc
jne
inc
mov
sbb
cmp
jge
mov
inc
daa
pushf
movsb
add
or
pop
mov
jg
adc
mov
inc
xor
pop
adc
daa
pop
sub
pop
jno
sti
and
test
mov
mov
pusha
lahf
gs
jge
sarb
outsl
arpl
xchg
mul
jne
push
jle
xor
dec
pop
movsb
xchg
in
mov
lret
jge
and
pop
mov
pop
rorb
pop
pop
call
cmpsb
cmp
add
jbe
movsl
loopne
jmp
and
cmp
cs
repz
in
imul
mov
sub
pop
mov
outsb
inc
imul
or
push
test
out
fs
lret
cmp
or
lods
lods
shrb
add
fcomps
xchg
push
test
in
in
xor
pop
mov
mov
out
pop
ret
negl
cs
and
enter
mov
ljmp
insl
dec
repnz
and
add
int
jbe
rcrl
pushf
pop
pop
mov
sub
mov
aad
and
shrl
fsubl
das
adc
mov
ds
pop
push
repnz
flds
xor
inc
int3
out
fiadds
adc
mov
mov
jb
cwtl
adc
or
fildl
add
and
lock
pop
dec
dec
das
xor
cmc
and
fdivrl
imul
aas
repz
mov
mov
ljmp
xchg
cmp
jb
aam
add
aad
insl
jb
and
aad
stc
gs
sbb
rorb
inc
sbb
hlt
cwtl
pushf
das
aas
mov
push
lods
mov
dec
lcall
int3
jmp
ret
add
addl
xor
cwtl
pop
fbld
mov
loop
add
jbe
or
dec
sub
fnsave
int3
mov
sbb
into
mov
movsb
testb
inc
arpl
pushl
add
mov
fs
xor
filds
adc
int
mov
cld
jae
mov
dec
cmp
mov
and
inc
jmp
xchg
dec
mov
call
js
xchg
cmpsb
sahf
xor
repz
mov
out
adc
mov
int3
xchg
je
test
inc
out
ret
mov
cmp
add
orl
roll
pop
xor
gs
in
mov
sub
fst
adc
xor
icebp
lods
dec
jle
lret
pushl
xor
ljmp
mov
pop
pop
pop
fnstcw
dec
dec
in
insl
adc
pop
jge
repz
test
lcall
popf
add
jnp
cmp
ss
mov
sbb
mov
pushf
push
lret
rcrb
inc
xchg
xchg
mov
sbb
dec
push
mov
mov
xchg
push
arpl
aam
mov
in
sarb
push
mov
mov
popf
clc
aas
dec
movsl
xchg
xchg
xor
pop
xchg
sbb
insb
add
mov
mov
push
jbe
push
xor
out
or
add
and
in
jg
jae
sub
jo
inc
adc
or
out
mov
xor
adc
mov
mov
daa
mov
divl
adc
adc
loope
inc
lock
dec
daa
sub
test
std
mov
jl
sarl
sbb
scas
mov
push
push
push
lcall
mov
push
sbb
mov
cli
sbb
dec
xor
push
jne
mov
and
pop
or
lret
jns
jnp
fiaddl
movsl
mov
loopne
jl
push
add
leave
jae
and
js
mov
mov
les
clc
xor
mov
mov
ss
loop
xlat
out
jmp
xchg
roll
pop
leave
ja
int
adc
or
daa
xor
mov
lods
jmp
push
in
pop
cli
cltd
add
inc
xor
sbb
dec
mov
sub
pop
inc
adc
iret
sub
xor
out
mov
pop
dec
xchg
movsl
mov
cmp
mov
js
mull
and
jo
pop
psubw
ret
cmp
mov
jno
and
ja
jg
sbb
sahf
xchg
aaa
addb
js
xchg
or
mov
jmp
and
add
inc
nop
inc
popf
lods
push
fbld
inc
mov
cmpl
enter
pop
mov
add
and
inc
inc
stos
enter
push
mov
jbe
adc
jp
insl
into
fldcw
out
add
push
insl
shr
pop
xlat
push
leave
inc
outsl
push
int
push
cmpsb
in
movsl
rcr
push
sahf
ror
dec
mov
sbb
out
icebp
mov
mov
mov
lret
mov
scas
and
cmp
xchg
aam
jge
and
xor
push
fstps
popa
fs
sbb
lods
jns
pushl
inc
dec
aad
and
dec
and
mov
aam
inc
inc
fwait
pop
xlat
cld
or
push
sarl
cmp
dec
fnstcw
movsb
cmp
push
out
pop
push
xor
stc
mov
push
into
sbbb
adc
aam
js
dec
and
aam
mov
fists
js
es
or
sub
fnstsw
insb
cs
pusha
sbb
pop
nop
push
rcr
popf
cwtl
pop
scas
adc
xor
xchg
mov
out
enter
and
je
lods
pop
pop
in
std
in
les
inc
cmpsb
mov
mov
lret
xlat
fcmovnu
mov
mov
mov
jnp
mov
and
jns
test
mov
jmp
or
stos
insb
mov
add
sbb
inc
add
dec
mov
xchg
int3
stos
sbb
sbb
leave
jne
jg
test
mov
aad
nop
test
xchg
dec
out
ficompl
push
data16
xchg
pop
sub
pop
dec
pop
repnz
and
arpl
out
dec
cmp
fwait
pop
mov
dec
shl
dec
pop
jae
adc
and
or
aam
jmp
or
cld
imulb
jne
push
andl
mov
cmp
mov
fistps
dec
push
int
jmp
adc
sbb
insb
mov
insl
adc
enter
mov
inc
jge
push
pushf
stos
mov
loop
ljmp
cld
inc
push
out
mov
call
push
dec
rorl
xor
cmpsl
add
jae
repz
clc
xchg
je
jnp
mov
xlat
mov
mov
pop
or
cltd
pusha
repz
push
movsb
int
mov
inc
jae
mov
cld
pop
adc
loopne
outsl
test
cmp
xor
lcall
test
pop
repz
les
sub
iret
fstl
sbb
jmp
push
lcall
inc
lret
cmp
fwait
push
xor
or
xchg
and
jno
mov
inc
stos
repnz
dec
dec
jae
bound
into
add
std
adc
pushf
mov
sbb
cld
in
dec
loop
shr
inc
pop
loopne
test
jo
orl
mov
cmp
les
jecxz
imul
push
loopne
mov
daa
push
xor
jns
pusha
cmp
dec
fstpt
mov
sbb
fs
add
cwtl
sbbb
lods
stos
cli
mov
xchg
and
jmp
imul
pop
insl
jnp
dec
jle
mov
pop
test
jecxz
inc
lahf
adc
shll
inc
fldl
roll
adc
pop
xor
test
les
or
dec
arpl
aaa
repnz
adc
cmp
jbe
divl
and
loope
cld
in
push
adc
jae
in
loopne
std
add
adc
jl
mov
and
sub
arpl
xchg
inc
in
jle
in
cmp
push
push
movsl
or
fld
aaa
stos
icebp
xchg
out
xlat
imul
mov
movsb
sub
sbb
mov
lret
rclb
call
frstor
adc
pmaxsw
mov
inc
fucomip
lock
xor
incl
fcomi
nop
lds
jns
sarb
mov
arpl
pop
out
stc
std
sahf
pop
xor
popa
mov
es
nop
out
fwait
cmc
lods
sbb
ds
hlt
out
icebp
mov
cwtl
xlat
andb
loop
pop
xchg
xchg
clc
and
dec
call
rcll
and
sbb
inc
std
lds
xchg
jecxz
xchg
mov
icebp
push
inc
stos
lds
mov
pop
popa
stc
ret
out
dec
flds
jb
stc
lret
jbe
lcall
mov
call
and
mov
icebp
xchg
lret
dec
xor
call
loop
xchg
mov
jle
dec
data16
cld
insb
lret
mov
mov
mov
pop
inc
gs
sub
xor
mov
xchg
inc
lock
fdivs
mov
stos
adc
xchg
frstor
dec
rcll
push
pop
mov
cmp
repnz
es
outsb
jecxz
in
sbb
sbb
inc
cltd
lretw
jbe
hlt
std
mov
cmp
xlat
nop
es
mov
cltd
fs
mov
add
mov
mov
nop
push
fucom
mov
mov
mov
cli
add
in
aad
push
leave
cmp
imul
push
inc
jg
stc
pop
jge
and
sbb
popf
cwtl
mov
aaa
js
push
pop
int
popl
add
pop
sahf
lret
mov
add
addl
movsl
sbb
and
push
mov
stos
dec
jmp
lret
mov
iret
cmp
nop
push
outsb
or
movaps
bnd
aaa
pop
fs
pop
ret
incb
fsub
sbb
div
pop
mov
inc
sub
inc
int
test
xor
mov
loopne
sub
jg
js
mov
push
cmp
std
cmp
adc
popf
fldl
cmpb
and
test
test
xor
jl
xor
mov
fidivl
sbb
push
sub
lahf
xlat
and
mov
popfw
inc
sti
jno
pop
inc
lods
mov
push
adc
push
mov
jp
loope
movsl
or
and
outsb
ss
cmp
adc
push
xor
adc
outsl
orl
insb
lds
cltd
push
adc
lea
jae
leave
mov
fsubrl
js
repz
sbb
insl
ss
xor
cmp
pop
rcr
leave
test
ret
fmuls
scas
int3
ljmp
loop
mov
xor
xchg
inc
jge
mov
lcall
fiaddl
mov
pop
jnp
cltd
add
inc
mov
jno
sarb
cli
cmpsl
push
adc
hlt
inc
leave
mov
inc
test
es
or
test
int3
pop
ret
add
pop
stos
add
pop
xchg
movsb
dec
je
dec
adc
or
mov
ljmp
clc
gs
bound
testb
jno
mov
push
lcall
imul
insb
movsb
data16
sub
jne
cmc
push
sahf
or
addb
xchg
adc
out
jg
lods
aad
adc
iret
mov
jne
xchg
outsb
add
and
in
pop
cltd
shl
sbb
fiaddl
xchg
jge
jl
xor
mov
fstp
test
xchg
jp
mov
scas
mov
push
xchg
pop
bound
push
bound
inc
in
ret
jbe
or
ljmp
xchg
jno
cwtl
pusha
daa
sarl
ficoms
dec
sahf
mov
out
sub
repz
add
lret
mov
mov
push
mov
and
cmp
int
incb
jmp
scas
mov
lret
lcall
repz
sub
jecxz
fsubrp
jecxz
movsb
int
das
shlb
xor
xchg
xor
jae
dec
cltd
aam
mov
push
xchg
ss
mov
fildll
lods
jae
repnz
imul
int3
repz
ja
sub
pusha
dec
mov
add
scas
out
subl
pop
xchg
test
rcll
popa
ret
out
pop
jecxz
and
lods
mov
xchg
leave
xchg
cmp
out
pop
lcall
jle
je
or
mov
sub
dec
push
mov
pop
inc
sub
cli
inc
dec
sbb
das
push
push
roll
movb
push
dec
lods
mov
adc
xchg
push
push
mov
aas
cmp
stc
shrb
cmpl
jno
pop
mov
cmpsl
sub
dec
jno
mov
loope
inc
leave
mov
fdivr
fsubrl
dec
hlt
stos
and
insb
lods
add
out
jnp
sbb
pop
jl
sbb
incl
xchg
inc
inc
xor
mov
xor
in
cld
insl
jle
xchg
in
push
jnp
out
jg
sahf
jb
icebp
xor
jne
ror
adc
push
and
and
pop
lods
sub
adc
dec
dec
dec
jmp
sub
xor
inc
andb
push
test
cmpsl
loope
sti
inc
pop
jno
test
scas
daa
mov
mov
mov
lea
pop
xor
sbb
jb
rorb
adc
mov
cmpsb
mov
js
popa
push
popf
xor
test
std
nop
jnp
push
les
dec
jecxz
pop
and
cmp
pushf
dec
dec
mov
out
sub
push
imul
pusha
fwait
sbb
jl
icebp
flds
out
in
outsl
dec
sbb
loope
sti
out
xor
out
lods
adc
fidivrl
data16
pop
sbbb
shll
push
das
jo
mov
mov
sbb
or
repnz
subl
or
movsb
and
sub
mov
mov
in
push
adc
jbe
mov
incb
fucom
mov
pop
lret
stos
insl
cwtl
out
jg
push
pop
mov
lret
push
jo
push
xchg
xchg
shrl
cmp
push
stos
pop
jbe
push
sub
inc
xor
fldl
xor
cmp
dec
or
inc
arpl
jae
inc
xor
sbb
int
push
cmp
adc
inc
adc
popf
lcall
mov
inc
shl
xor
lock
les
out
pop
cld
into
daa
loope
leave
jmp
out
sub
dec
je
mov
mov
pop
jecxz
sub
mov
pop
fisttps
mov
flds
jbe
lds
aas
sub
jno
mov
outsl
mov
inc
jb
sub
call
lds
dec
and
and
aam
inc
out
int3
xor
push
daa
lahf
mov
fwait
nop
cmp
dec
cmc
loopne
mov
cwtl
in
popa
lcall
daa
std
push
movsb
and
xor
clc
mov
inc
outsl
xchg
in
adc
pusha
lret
inc
dec
pop
xchg
enter
jle
or
enter
or
fiadds
sub
sti
xor
jnp
mov
push
pop
push
test
push
cwtl
inc
dec
mov
outsb
cmp
sbb
push
sub
ret
sub
adc
jle
call
cmpsl
jmp
jg
sub
insb
enter
mov
mov
mov
xchg
jge
add
out
mov
xchg
ror
xchg
xorl
pop
and
push
jno
pop
div
arpl
fbstp
ds
mov
leave
xor
add
es
inc
es
lcall
out
ja
test
mov
fisubl
je
mov
aam
and
jp
push
push
push
dec
loopne
sahf
and
mov
jecxz
pushf
sahf
or
es
mov
in
rorb
orb
bound
jge
mov
popf
cmp
outsb
inc
pop
cmc
inc
xor
inc
jns
dec
jle
sbbb
rcrl
and
inc
jb
aad
sub
ss
inc
loope
push
jle
movsb
sub
xlat
jle
push
or
inc
ror
xor
jo
mov
inc
sub
adc
mov
xor
imul
aas
or
push
mov
adc
cld
or
je
lcall
shll
inc
popl
fnstsw
lods
mov
mov
push
enter
adc
scas
icebp
mov
fcomip
xchg
popa
and
dec
pop
outsb
outsl
mov
cld
mov
jae
and
lahf
aaa
test
or
jl
xchg
or
hlt
mov
push
inc
mov
int3
adc
lods
cmc
imul
adc
loop
push
std
shrb
sti
in
imul
out
in
inc
nop
push
mov
xchg
jns
mov
mov
int
mov
out
push
orl
fdivr
mov
jmp
pop
js
pop
js
jge
nop
or
movsb
loope
or
adc
pop
pop
enter
subl
inc
addr16
les
xor
xchg
cmp
xchg
add
mov
cmc
sbb
xchg
out
decb
mov
pop
xchg
cmpsb
jmp
sbb
jne
xchg
adc
push
cmp
sbb
adc
or
mov
and
jp
jns
cltd
sbb
imul
mov
insl
xchg
pop
sub
mov
pop
mov
daa
adc
lods
test
sahf
lock
inc
inc
lahf
fs
hlt
sti
cltd
ficoms
mov
aaa
cli
testb
pusha
clc
adc
das
mov
mov
xlat
nop
push
in
mov
sbb
cs
mov
mov
adc
mov
pop
outsl
push
in
lods
push
cmp
idivb
cmp
cmp
dec
pop
stc
jge
xor
mov
xor
loop
push
add
pop
fsts
insl
mov
jns
out
push
adc
lds
jmp
sub
jbe
idiv
cwtl
adcb
into
cli
dec
cmpsl
sub
adc
pop
ds
fstpt
cmc
cld
int3
test
jb
xchg
pop
pop
inc
mov
into
xor
push
filds
leave
cmpsb
inc
jmp
xchg
pop
xchg
adc
fisubs
repz
mov
mov
outsl
add
pusha
popf
adc
xlat
dec
andl
push
mov
in
aas
push
popf
aaa
cmpb
test
and
or
xlat
sbb
decl
sub
cmp
fisubl
cwtl
ret
dec
std
xchg
fdivl
xchg
xor
sub
ficoms
arpl
fucomp
fs
pop
sbb
pop
and
test
or
mov
add
rcrb
repnz
jle
fstp
or
push
ja
mov
sahf
pop
lods
pushw
outsb
loop
add
mov
cmp
popf
push
pop
pop
insb
add
pop
aaa
sub
sahf
and
sub
fs
adc
mov
adc
adc
xlat
int
xor
sbb
rol
std
inc
shll
inc
and
popf
pusha
addr16
xchg
sub
mov
and
jg
inc
mov
xor
push
js
sbb
out
aas
lods
mov
add
pop
sub
add
mov
mov
mov
sbb
and
dec
lahf
jnp
ret
xchg
mov
cmc
sbb
ja
cltd
xchg
jne
cmp
sub
pop
adc
or
icebp
int
mov
pushf
fisubl
mov
mov
xor
xchg
imul
int
sbb
lea
cs
dec
push
xor
or
movsl
in
sub
inc
push
sbb
movsl
loopne
aas
inc
jb
sahf
and
arpl
js
inc
inc
jmp
adc
push
repz
xor
stos
jb
rcl
jp
in
shrb
mov
outsl
int
repz
sbb
mov
adc
inc
aas
dec
mov
fistpll
jo
repz
mov
arpl
lods
gs
outsb
addb
repnz
push
mov
test
mov
jnp
cmc
mov
push
pushf
push
sub
mov
add
xor
in
xchg
jnp
mov
fdivr
adc
js
xor
popa
dec
cmpl
or
jmp
ret
loop
lods
jl
das
mul
int
out
rcr
cltd
cmpsl
and
scas
xchg
pop
cmc
js
pop
lods
in
dec
sub
or
sbb
push
shlb
push
fxtract
inc
loope
ficoml
out
sub
out
push
add
repz
cmp
addr16
push
cmpsl
fisubrl
jne
dec
cmp
jo
out
inc
sbb
lods
cmp
push
stos
iret
std
adc
faddp
int
or
shll
inc
or
pushf
xor
cmp
mov
pop
jo
jmp
push
repz
mov
jecxz
xor
stc
fld
inc
cld
pushf
sub
pushf
xchg
nop
out
jo
mov
loope
es
dec
pop
push
enter
pushf
rolb
mov
xor
das
pop
pop
dec
cwtl
mov
sub
push
mov
xor
fs
inc
jnp
push
push
frstor
xor
inc
jmp
lods
sbb
je
clc
inc
dec
add
add
jne
mov
xor
pop
push
in
mov
loopne
jae
pop
and
repz
dec
cmp
push
adc
push
data16
cmp
out
clc
mov
sbb
stc
cltd
in
into
sub
push
das
test
test
adc
inc
pop
aam
and
cmc
iret
popa
xlat
test
adc
mov
xor
push
xchg
fcmovbe
cmp
push
xlat
fcoms
stos
in
xchg
dec
fisttps
mov
sti
mov
or
das
fildll
mov
xor
xchg
jnp
cmc
xlat
add
or
cmp
xor
jno
sahf
jmp
inc
dec
mov
xor
cmp
nop
je
stos
push
sub
or
jg
sbb
adc
xchg
pushf
fld
or
xor
jns
cltd
inc
push
imul
jnp
sub
adc
sahf
mov
cli
inc
movsl
je
push
push
push
push
fsubs
movl
push
jge
xchg
jbe
xchg
mov
push
mov
jp
cmp
add
popf
enter
cld
loop
lcall
and
int
pop
xor
int
ret
adc
repz
or
inc
dec
mov
leave
nop
imul
std
inc
adcl
ja
in
sbb
xor
add
add
push
add
mov
cmp
xchg
sahf
inc
in
loopne
mov
mov
mov
movsb
mov
and
mov
xorb
add
pop
lea
dec
bound
aas
stos
sbb
insl
fs
call
fmull
loope
sbb
out
mov
in
jp
jns
in
push
pop
mov
daa
push
push
jae
in
sbb
pop
or
orb
jbe
adc
andb
xor
lea
daa
jae
mov
adc
mov
xor
loopne
sarb
in
dec
pop
arpl
sbb
ds
mov
xorl
cmpsb
insb
in
inc
adc
push
mov
dec
or
sbbb
jp
jae
mov
pop
and
shrb
xor
jp
dec
and
xchg
popf
ficompl
enter
xchg
scas
jg
cli
fwait
jae
adc
ljmp
pop
dec
in
inc
incl
mov
jbe
sub
lods
int3
push
roll
adc
popf
insl
sub
fnsave
lods
aad
je
gs
pop
notb
xchg
ret
loopne
dec
sub
faddl
dec
sbb
and
insl
adc
mov
inc
call
sub
xor
xor
call
lret
jmp
loope
pop
push
movsl
in
sub
inc
sbb
mov
movsb
dec
cmpl
dec
push
int
xor
fdivs
mov
insl
movsl
aam
orb
test
divb
mov
into
out
test
or
mov
int3
mov
dec
nop
sub
pop
adc
and
js
mov
test
mov
jle
xchg
aad
push
adc
mov
leave
scas
icebp
lret
xchg
mov
hlt
push
push
jmp
sub
jecxz
fsts
insb
stos
lock
or
push
sbb
stc
sti
sub
cmpl
pop
push
addr16
test
or
loopne
jmp
and
jno
loop
jne
push
dec
mov
sub
dec
jne
daa
loope
lods
lods
test
imul
int3
cmp
insb
inc
movsl
stos
push
push
aam
pop
push
xchg
les
lods
jno
out
xor
and
or
roll
dec
jne
adc
loopne
mov
or
dec
mov
mov
sbb
jns
mov
in
xor
cmc
push
lea
fisttps
xor
pop
push
push
push
pop
call
push
jge
push
adc
hlt
lahf
outsb
sbbl
imul
ffree
out
jp
xchg
fimull
aad
mov
das
arpl
mov
add
imul
out
mov
jmp
sub
xchg
mov
sub
sbb
call
nop
push
dec
pop
call
pop
in
xlat
lds
cmpsl
stos
push
subb
loop
stos
xchg
mov
push
sbbl
mov
aas
pusha
call
xlat
adc
sub
sahf
cmp
pop
push
ss
inc
aad
imul
cmc
fnstcw
dec
adc
xor
lods
sub
mov
sahf
sub
pop
push
shll
scas
out
mov
jb
push
stos
add
xor
jmp
jl
pop
mov
cmp
xchg
popf
dec
test
cld
mov
and
jne
imul
stos
fldenv
repnz
add
and
aas
push
sub
daa
sbb
push
and
insb
cs
popa
mov
int
enter
mov
adc
mov
fwait
inc
sti
in
movsl
pop
sub
cmp
out
xor
lock
jl
aaa
cmp
add
mov
sbb
sbb
ror
and
cli
insl
mov
scas
icebp
push
dec
and
rcr
or
fs
icebp
pop
lcall
sarb
insl
mov
inc
call
or
cmp
adc
jmp
out
xchg
aas
pushf
dec
ja
ds
mov
mov
inc
push
xchg
mov
mov
iret
jb
aad
cmc
in
scas
cmp
xlat
mov
jge
add
pop
xor
cmpsl
push
ret
shlb
dec
mov
ds
cmc
lods
push
mov
mov
pop
imul
js
mov
jp
cmc
fisubrl
xor
mov
pop
mov
stos
and
adc
jp
sub
inc
ljmp
je
push
or
clc
lods
jp
js
cmpb
xor
cli
imul
shll
xchg
mov
jns
push
hlt
insl
inc
dec
dec
pop
or
nop
cmp
or
add
jne
adc
lahf
push
divb
dec
jg
inc
sub
add
dec
add
and
jecxz
daa
inc
lret
mov
je
popa
js
ljmp
sti
cmp
fcmovu
les
add
fsubs
add
popf
jle
daa
mov
dec
jecxz
sbb
push
jp
xchg
xchg
mov
or
sarb
js,pt
xor
rorb
pop
insl
pop
pop
cmp
mov
orb
inc
loope
imull
je
or
or
mov
push
arpl
pop
insl
inc
pop
imul
lods
jo
push
hlt
adc
lds
cmp
push
lret
nop
mov
cltd
call
gs
inc
sub
loopne
popa
aas
push
mov
sahf
imul
inc
enter
rcrl
das
sbb
push
pop
cmp
pop
adc
push
std
int
dec
paddb
ret
dec
mov
call
inc
push
fsubs
cmp
cltd
rorl
lahf
adc
lea
pushf
mov
aas
adc
sbb
cmp
push
and
xor
sbb
cmp
test
xchg
mov
fcmovnbe
push
out
mov
xchg
or
add
insl
icebp
jae
pop
ret
outsb
popa
scas
out
mov
or
cmc
xor
and
shl
or
jle
shr
mov
cmpsb
add
aad
int3
xchg
xor
fldenv
mov
or
mov
sub
divl
fdivp
adc
xchg
push
lahf
mov
mov
cmp
inc
adc
push
into
pushl
cmp
pushf
xchg
popa
out
iret
xchg
sub
inc
imul
sbbb
xchg
cmp
mov
add
mov
fcmovnb
outsb
xchg
testl
xor
jnp
stos
dec
rolb
aaa
out
movsb
scas
imul
pop
pushf
lret
aad
mov
cmpsl
jno
pop
sbb
add
in
dec
and
shrl
fdiv
psubb
or
icebp
xchg
data16
movsl
movsl
sbb
push
test
out
jle
or
xchg
fisubrs
cmpsl
sbb
or
aas
in
inc
sub
or
cmp
popa
punpcklwd
std
arpl
sbb
xchg
arpl
add
mov
loop
mov
sbb
leave
scas
adc
xor
icebp
out
ret
stc
sbb
push
in
pop
push
repz
push
mov
sbb
xor
lods
int3
repnz
xor
xchg
outsb
xor
inc
xorl
lock
mov
shl
inc
mov
fs
or
mov
cld
dec
mov
shrb
js
insb
add
xor
clc
fistl
dec
cmp
push
int
in
jbe
xchg
sti
pop
xor
int3
inc
dec
aaa
iret
scas
sbb
cmp
and
xchg
int
jp
add
popf
jmp
insl
xchg
xor
test
aad
ljmp
or
sub
cmpsb
loopne
xchg
fisttpl
xchg
cs
jmp
out
push
jno
xchg
orb
or
iret
jl
cmpsl
pop
data16
cmpsb
jp
fcomps
push
lahf
jle
repnz
jnp
rcrb
aam
or
sub
jg
aas
pusha
pop
gs
fldt
int3
sbb
in
pop
popfw
adc
das
inc
and
push
jb
xchg
mov
add
mov
inc
hlt
das
and
push
pop
lods
test
sbb
leave
jno
jns
mov
jge
mov
cmp
xor
add
xchg
aas
sbb
incb
lret
scas
dec
xor
aam
sub
fimuls
test
je
ret
sub
inc
fiadds
movsb
pop
in
cmp
jmp
pop
mov
imul
out
int3
jno
mulb
xchg
inc
imul
pop
shlb
sbb
outsl
movsl
imul
add
mov
pop
mov
xchg
or
ljmp
lds
xor
jae
and
push
xor
popf
incb
jle
dec
cmp
lret
inc
pop
sub
inc
xchg
push
cmpsl
popf
cs
push
jbe
inc
in
and
loop
add
sbb
mov
call
ss
jg
push
inc
lds
push
enter
out
mov
andb
pop
and
out
push
cmp
mov
int
clc
repnz
xchg
aaa
adc
pop
add
dec
mov
or
shr
mov
inc
adc
dec
jae
xchg
xchg
or
jge
cmp
fmuls
sbb
int
adc
pop
ret
jle
aam
aam
dec
shll
inc
jno
imul
xlat
mov
inc
clc
lahf
pop
hlt
sbb
in
mov
sti
inc
dec
push
stc
loop
sbb
jp
mov
sbb
sbb
jle
leave
add
cmp
and
cmp
repnz
mov
mov
dec
jns
dec
in
scas
mov
bound
es
imul
pusha
add
jns
jmp
inc
pop
shlb
divb
enter
push
xchg
cmc
cmp
mov
jns
jae
cmp
test
xchg
bound
repnz
repnz
mov
cmp
adc
into
mov
shlb
addr16
insl
add
mov
cli
pop
stc
xchg
int
jge
mov
xchg
test
aas
pop
clc
out
sub
pop
jecxz
xor
adcl
xchg
push
inc
dec
jl
ss
add
outsl
imul
mov
popa
ret
sbb
dec
inc
cmp
sub
push
out
sarb
les
stc
pop
xor
lcall
lock
rol
or
or
in
xchg
xchg
adcl
sbb
ds
data16
popf
cmc
jle
mov
and
dec
mov
ds
fstpt
inc
ret
xor
inc
imul
iret
mov
lahf
iret
fsubrs
cwtl
fcomps
mov
repnz
cmpsl
repz
jo
jmp
mov
cmpsb
fcomip
test
dec
fsubl
xlat
sar
fistl
lock
std
stos
xchg
in
dec
lock
insb
jl
cmp
test
ror
sub
push
idivl
xor
push
ret
cmp
lock
sahf
mov
xor
xlat
ljmp
add
daa
mov
mov
or
lock
popa
leave
cmp
insb
fdivs
fwait
enter
fmuls
cltd
daa
ret
ss
clc
pop
repz
lcall
push
fcomi
inc
and
inc
inc
dec
mov
out
cmc
dec
push
adc
xor
dec
clc
ret
xor
loop
mov
push
inc
filds
or
sub
stos
lds
ret
xchg
pop
lods
fnsave
repz
xorb
out
scas
xchg
sub
notl
imul
adc
cmpsb
sub
mov
loop
outsl
xor
lods
push
jle
mov
lret
sub
and
pop
pop
mov
repnz
cmpsl
and
out
idivl
xchg
stos
xlat
lret
aas
mov
inc
test
inc
sub
into
push
and
div
adc
push
sub
mov
aaa
push
push
fdiv
cltd
int
rcrb
mov
add
mov
cld
cmp
xchg
mov
test
mov
push
cmp
test
fdivrl
mov
dec
int
movsl
dec
cmp
cli
out
in
mov
in
mov
jno
rcll
mov
and
daa
jbe
dec
mov
jl
or
inc
cltd
adc
xchg
cmpsl
sbb
mov
xor
ss
pop
mov
xchg
dec
add
sbb
out
shll
lea
shrb
jb
mov
mov
cmpsb
cli
and
push
jbe
mov
jbe
loopne
rcrl
mov
fucomi
call
sub
fidivrs
dec
imul
gs
pop
pop
repz
xor
or
loop
mull
ret
les
popf
ret
inc
mov
jecxz
ret
pushf
sub
pusha
cltd
hlt
in
push
adc
les
addl
icebp
push
dec
mulb
jae
in
ja
in
adc
fldt
aas
outsb
dec
leave
imul
xchg
push
inc
cmc
shrl
hlt
jge
xchg
mov
jl
aad
xchg
add
out
mov
mov
add
inc
cmc
fsubrl
es
out
dec
mov
outsl
inc
mov
lea
mov
gs
xchg
movsl
shrb
add
inc
jge
jle
pop
lods
and
out
xchg
push
fstps
push
push
rcrl
aad
mov
neg
or
sbb
pop
enter
es
addl
data16
shrl
inc
pop
pop
or
pop
out
cmpsl
movsl
jp
adc
xor
adc
jb
mov
jl
outsl
add
clc
pop
push
bound
ja
out
push
jbe
inc
xchg
inc
jnp
pop
insb
pusha
push
test
dec
mov
aas
hlt
ror
test
js
inc
xor
and
xor
pop
mov
jns
pop
xorb
jmp
mov
cltd
push
call
insl
add
cmp
and
enter
shr
push
sub
gs
push
dec
xchg
mov
adc
or
and
mov
hlt
lret
pop
insb
in
cmp
push
call
fcomps
push
iret
lods
aaa
test
inc
dec
out
data16
inc
dec
das
mov
cmp
out
cs
in
dec
cmc
fcom
add
in
popf
adc
lret
mov
mov
or
std
cld
nop
mov
inc
xchg
insl
mov
add
lds
rcll
hlt
int
jp
cwtl
leave
xor
jnp
mov
jbe
push
inc
ficompl
enter
cmp
fstpl
leave
mov
inc
or
dec
pop
je
repnz
and
subb
pop
xchg
add
ret
xchg
inc
aad
addb
sbb
xchg
outsb
pop
jmp
adc
cltd
pop
fsubs
popf
int
or
orb
repz
ror
lret
outsl
imul
mov
jmp
outsb
mov
outsb
inc
ljmp
inc
push
out
sbb
nop
sub
lret
dec
inc
mov
scas
jle
lods
fbstp
nop
add
out
inc
mov
outsl
call
aaa
shlb
clc
sub
mov
jo
push
je
adc
loope
movsl
mov
mov
push
jge
fwait
outsb
mov
mov
scas
push
and
js
add
add
pop
insb
insl
shr
out
or
xchg
and
pop
out
mov
pop
inc
mov
add
mov
daa
xor
mov
dec
das
mov
scas
outsb
fidivl
in
mov
aad
pop
ds
jne
bound
cmp
aas
jmp
iret
inc
test
adc
cmp
inc
jecxz
jecxz
push
mov
mov
roll
jle
cs
dec
lcall
ss
fwait
nop
dec
jne
inc
xlat
inc
in
idiv
loop
cmp
lds
in
pop
jnp
scas
mov
add
sbb
addb
jnp
fistpl
xor
jno
inc
xor
ljmp
movsb
bound
ficompl
ss
cld
fwait
push
push
xchg
stos
shrb
movsb
push
lea
in
fiadds
lcall
sar
aas
daa
scas
cmpb
inc
gs
sbbb
rol
sbb
movsl
mov
sbbb
scas
dec
dec
cmp
and
jnp
jbe
call
dec
test
ds
pop
push
or
lcall
dec
lahf
push
mov
mov
cmp
cmp
mov
mov
arpl
ss
mov
dec
sub
test
and
addr16
adc
dec
lcall
or
sbb
xchg
inc
popa
mov
or
jge
xor
xchg
inc
add
push
inc
ret
pop
fsubl
scas
loop
shll
mov
inc
push
repz
or
add
ret
adc
jl
adc
ds
in
lods
cmp
jl
mov
push
leave
iret
fisubrs
cmp
test
mov
add
ficoml
lcall
jb
daa
pusha
mov
cmp
insb
push
push
xor
mov
jge
add
sub
mov
lock
push
xor
xor
add
testl
or
add
inc
push
bound
jno
mov
xor
fs
pop
mov
adc
jnp
mov
rorb
cs
jne
repz
ds
movsb
hlt
int
inc
sbb
les
cmp
ds
mov
mov
mov
pushf
jns
ret
push
jnp
and
daa
xchg
dec
pusha
mov
cwtl
ja
popa
dec
jnp
cld
stos
cmp
jns
xchg
or
arpl
mov
jbe
mov
in
and
iret
mov
mov
dec
inc
pop
or
in
cmc
mov
out
xor
push
std
outsb
xor
out
push
mov
hlt
pushf
or
pop
das
push
insb
dec
inc
jb
pop
int3
sbb
adc
push
leave
pop
adc
subb
int
dec
add
bound
fnsave
jp
and
inc
sub
lahf
xor
ja
fimuls
aam
lret
jle
pop
pop
adc
sbb
jno
mov
fimull
andl
inc
inc
dec
mov
ret
mov
test
mov
xor
rcrb
outsb
adc
and
or
dec
mov
adc
mov
repnz
fcomps
ljmp
in
orl
sub
cmp
mov
jle
push
pop
mov
daa
push
pop
inc
fs
insl
fcoms
xorb
cmp
jb
mov
adcb
cmp
nop
mov
cmp
in
dec
fists
cmp
std
sbb
pop
adc
popl
xor
inc
sbb
into
orl
mov
mov
lret
and
aas
shlb
push
pop
cltd
popa
push
dec
jb
lret
stos
lcall
in
push
ss
ljmp
jbe
add
or
cmp
shl
inc
mull
mov
or
add
out
add
test
or
xchg
sub
lret
jecxz
mov
cld
fistl
icebp
xchg
test
shrl
sbb
sub
mov
lods
fmull
scas
xor
jmp
cmp
movntq
inc
jp
test
mov
sub
sahf
and
test
lds
mov
es
imul
inc
testl
imul
pusha
push
adc
mov
pop
adc
cmp
int
movsl
xor
pop
int3
ljmp
stc
cmp
push
daa
mov
jp
push
add
divl
adc
repz
loope
mov
ss
cmp
pusha
call
sub
pop
pop
les
mov
push
push
pop
mov
xchg
out
scas
inc
pop
dec
sbb
xchg
dec
outsb
mov
mov
sub
xchg
xor
ficoml
pop
xlat
adc
ret
xchg
ret
mov
pusha
or
cmp
cmpsl
gs
push
push
cmpsl
pop
jle
sub
scas
std
jne
std
dec
fucomi
push
push
mov
mov
and
mov
xor
pop
imul
icebp
loope
or
mov
addr16
aas
stos
fisttps
insb
pop
into
cmp
mov
stos
negb
in
pop
push
stos
sbb
pushf
pop
lea
sbb
mov
and
push
out
dec
leave
mov
mov
popf
lcall
push
fnsave
xchg
ss
mov
call
or
inc
mov
xchg
xchg
jp
push
nop
pop
sbb
ljmp
push
ds
mov
add
mov
and
pushf
or
ljmp
or
jmp
cli
jl
mov
push
pop
inc
pusha
add
jl
push
mov
cli
lret
adcl
jmp
pop
sub
jp
jl
sbb
scas
xor
cmp
test
mov
ljmp
cmp
imul
aaa
xchg
popa
jle
and
mov
jne
mov
xchg
cmpsb
fistpl
lea
andl
sub
push
sbb
fnstenv
fisttpll
cmp
mov
pop
mov
push
or
stos
ss
outsl
sub
inc
test
or
push
sahf
inc
cmp
scas
insb
mov
pop
push
jb
pop
mov
mov
cmp
push
or
nop
pop
push
jle
cmc
xchg
mov
dec
js
cmpsb
jo
xchg
ja
aas
nop
sbb
loopne
sarl
jns
lds
push
out
lahf
pop
loop
scas
mov
repnz
cli
sub
outsb
out
mov
jb
push
bound
faddl
lods
enter
add
rorb
shlb
popa
or
or
pop
or
and
or
cltd
xor
mov
ss
add
subl
jns
mov
or
push
fistpl
xorl
dec
push
sub
jne
adc
lret
fwait
mov
sar
xchg
test
scas
pop
out
adc
xchg
mov
int3
xchg
push
mov
push
scas
push
sbb
movsl
idivb
xor
mov
add
cmp
xchg
jl
lahf
loop
adc
xchg
cmp
orb
or
pop
sahf
mov
cli
jmp
inc
cli
xor
in
dec
mov
das
or
push
fiadds
mov
push
adc
test
lock
xchg
lret
test
testb
mov
push
ljmp
xor
push
cmc
es
repnz
sar
popa
aas
jno
xor
test
or
xchg
icebp
cmp
push
rorl
in
imul
dec
outsl
mov
mov
add
insl
or
push
leave
outsb
call
mov
cltd
xor
popf
ss
mov
lds
push
or
addr16
mov
repnz
mov
imul
sub
sbb
push
ljmp
iret
mov
sbb
add
mov
pop
xchg
cltd
mov
dec
mov
lds
fidivrs
sub
pop
pop
rcrl
ficoml
xor
sub
fs
or
fldenv
fimuls
add
adc
dec
fistpl
leave
fadds
push
dec
push
sahf
lret
push
pushf
ja
push
movl
movsb
add
and
enter
mov
in
inc
xlat
xchg
push
movsb
leave
fwait
inc
jb
xchg
repnz
push
jne
fs
push
push
add
pop
pop
pop
mov
lea
push
sbb
inc
cmp
push
aad
sub
movsl
and
mov
pop
push
js
ret
fidivl
pop
jge
std
daa
lods
pop
and
sub
add
cld
out
stos
cmpl
mov
adc
shrb
xor
mov
push
jecxz
aas
cmp
in
xor
shlb
adcl
scas
and
test
sbb
push
mov
cltd
push
push
pop
xor
cmp
js,pt
cli
push
lret
js
mov
inc
inc
mov
mov
jb
sti
nop
add
xor
jbe
xchg
add
ret
add
add
lock
ffree
out
arpl
cli
mov
add
cltd
mov
sub
sbb
cli
pop
iret
int
sarb
xor
or
xor
mov
mov
aas
mov
and
mov
mov
fwait
mov
fcoml
out
insb
mov
or
cmc
jae
and
loopne
pop
mov
outsl
mov
add
cmc
sti
pop
and
sti
push
sbb
xor
sbb
adc
es
inc
testb
mov
xor
mov
add
dec
push
lock
test
pop
outsb
leave
mov
cmp
int
xchg
gs
and
pop
cs
and
stos
and
leave
leave
mov
pop
fisubrs
repz
sbb
hlt
and
xor
mov
leave
xor
jmp
mov
pop
je
pop
loope
ja
or
fs
iret
jl
xor
mov
imul
insl
jae
sahf
pop
jecxz
inc
aad
push
sub
xchg
ret
xchg
adc
mov
cli
sbb
fs
mov
xor
cmp
aad
mov
aaa
adc
call
lds
movsl
sub
outsl
data16
adc
ret
push
pop
mov
fldcw
adc
ret
mov
xchg
jecxz
aaa
dec
test
jmp
mov
sbb
mov
add
mov
shll
or
mov
es
jo
fs
repz
push
jg
cmp
lock
mov
cmpsb
jecxz
in
out
xor
xchg
mov
mov
inc
shll
jnp
clc
test
mov
ljmp
sub
dec
stos
inc
ret
mov
inc
cmp
jle
imul
lods
inc
fxtract
lahf
scas
adc
push
imul
mov
adc
out
inc
dec
je
mov
and
pop
leave
lods
jno
shrl
cmp
xchg
mov
xchg
pusha
push
stc
call
inc
outsl
lret
cmpsb
and
in
fsubrs
cmp
cltd
cmp
xor
add
pop
pop
adc
bound
pusha
and
stos
dec
and
gs
jns
xchg
add
movsl
enter
add
inc
cmpb
cmpsb
ja
sbb
adc
out
mov
and
imul
sahf
sub
into
pop
adc
jg
cld
rorb
jmp
push
jne
pop
dec
dec
push
push
pop
enter
divl
cmp
cmc
lock
xchg
test
ficoml
iret
or
aaa
fnstsw
inc
push
imul
mov
lds
and
push
pop
testl
jg
scas
mov
test
mov
sub
xor
cmc
outsb
lcall
addb
xor
add
hlt
fsub
adc
xor
mov
lods
mov
test
and
push
dec
inc
jl
and
shrl
lret
imul
adc
jp
lcall
in
in
inc
and
sbb
pop
jmp
addl
test
out
inc
scas
jae
adc
sbb
repnz
dec
mov
movsb
ds
lods
and
xchg
xchg
cmp
jge
les
cmc
dec
cs
stos
push
loope
andl
cmc
xor
push
pushf
inc
lock
insl
fdivrp
mov
loop
inc
lods
mov
fisubrl
arpl
lock
sub
loope
push
adc
inc
aad
pop
push
out
ret
dec
negl
xchg
xor
add
jmp
dec
loop
mov
cmp
jnp
dec
sbb
pusha
aas
js
mov
xchg
inc
inc
fildll
and
cltd
jae
pop
inc
aaa
sarb
cmp
push
popa
inc
inc
xchg
sbb
mov
mov
mov
cmp
sub
jp
nop
or
mov
test
rcl
rcl
jmp
inc
imul
fnstenv
pop
push
xor
popf
bound
add
inc
fucomp
adc
mov
outsb
and
cmpsb
cmp
jns
mov
cli
in
lcall
iret
scas
mov
jle
mov
fxch
dec
jecxz
inc
fucomp
pop
std
fimuls
fs
les
fwait
add
and
iret
mov
jno
push
imulb
sbb
pop
jno
jecxz
inc
add
nop
jnp
push
test
das
sbb
mov
sbb
xchg
cmp
or
push
movsb
xor
aad
rolb
nop
mov
movsb
fsubs
and
mov
mov
aas
xor
or
sahf
sbb
dec
push
scas
fistpl
cld
pop
or
mov
xchg
rolb
xchg
es
sarl
jp
mov
bound
mov
out
loopne
cmpl
insl
jns
lods
js
pop
fdivl
fldcw
xchg
dec
push
js
xor
xchg
pop
in
test
pop
lock
jg
loop
mov
movsl
cmp
das
cld
fisttps
jl
push
js
xchg
sbb
repz
or
cmp
arpl
fcomp
xor
mov
inc
sbb
int3
and
sub
test
shll
out
and
jo
je
push
bound
aad
inc
ja
cmp
push
imul
push
clc
push
jbe
pop
bound
add
push
mov
sub
outsb
xchg
mov
xor
and
lds
and
mov
hlt
jmp
mov
pop
mov
push
inc
addr16
sti
iret
mov
pop
and
cwtl
adc
pandn
iret
hlt
xor
cmp
sub
test
adc
push
jb
or
push
repnz
xchg
lods
je
int
jmp
repnz
ljmp
ds
outsl
push
loopne
cmp
js
cli
clc
mov
adcb
xchg
arpl
add
test
pop
jnp,pt
push
sub
dec
xor
outsb
iret
lret
jge
and
jmp
push
leave
orb
popa
mov
jo
adc
push
and
sub
xchg
shl
sbb
int
add
lret
mov
mov
pop
mov
pushf
ret
rcr
sbb
movsl
das
jl
movsb
hlt
jno
pushf
nop
aaa
adc
xchg
xchg
shrl
and
aam
mov
sub
add
jg
fnstcw
mov
mov
xchg
in
enter
sub
adc
jnp
inc
pop
cs
and
in
cmp
adc
fisubrs
mov
out
sub
push
cmp
jp
adc
xor
out
lock
xchg
mov
loop
push
iret
mov
int
js
hlt
push
inc
leave
lods
addl
mov
mov
cmp
mov
mov
jnp
push
dec
push
mov
xchg
jne
sub
loop
scas
fsubrl
jp
shlb
mov
orb
inc
dec
movsb
inc
cmpsl
pop
insb
xlat
add
inc
cwtl
cmp
mov
mov
ss
lcall
bound
pop
pop
xchg
movsb
xor
fimuls
mov
push
jge
mov
jmp
mov
aas
xchg
xchg
dec
js
and
shll
bnd
add
and
bound
and
jmp
inc
imul
mov
repz
xchg
std
dec
pusha
push
shll
incb
adc
repz
mov
movsb
sub
out
les
insl
loop
fildll
repz
mov
decl
ds
loope
nop
adc
mov
insb
sbb
inc
or
and
ds
sub
xlat
sarl
dec
xor
std
daa
les
ret
or
out
jp
in
jp
push
cmp
xbegin
inc
jmp
sbbb
rcrb
jns
inc
roll
pop
fisubs
dec
xchg
test
push
jne
dec
dec
pop
test
jne
scas
ror
mov
in
in
add
data16
pop
pop
push
xchg
xchg
add
push
cmp
stos
mov
into
pop
push
mov
dec
sub
data16
pop
mov
mov
sti
aad
je
movl
sti
fisttps
cltd
push
roll
rcr
mov
dec
push
sub
mov
mov
ss
int
or
push
pop
dec
sbb
popa
sub
pop
fists
jns
sub
cmpsl
cltd
mov
inc
popa
dec
arpl
mov
pop
or
ret
adc
shlb
leave
pop
rorl
or
ja
mov
add
sbb
std
lcall
je
push
fiaddl
sub
mov
ficomps
push
mov
andb
mov
das
push
and
pop
ss
push
xchg
jae
mov
in
cltd
jns
mov
lahf
ret
xchg
out
cmpsl
fs
mov
inc
add
xchg
mov
push
nop
push
jp
add
jle
setnp
sbb
push
sarb
or
adc
mov
sub
mov
push
cmpsb
sbb
outsb
jae
or
jecxz
das
adc
dec
dec
xor
inc
xor
sti
or
repz
sbb
lcall
movsl
cmc
dec
inc
sub
jg
adc
daa
outsb
sub
push
mov
adc
or
es
call
mov
xlat
xchg
pop
lds
outsb
and
pop
pop
mov
mov
push
mov
xchg
mov
scas
inc
pop
lret
jno
les
call
cld
imul
ljmp
sbb
or
test
out
jo
aam
jecxz
mov
mov
inc
fwait
in
mov
lcall
idiv
push
les
je
xor
xor
push
cmp
in
fmuls
sub
les
or
push
fstpl
ja
test
fistl
push
ljmp
sub
lds
rolb
inc
popf
mov
fdivp
xchg
subb
push
sbb
dec
mov
test
imul
add
inc
movsl
add
pop
inc
cmp
push
xchg
rorb
repnz
into
mov
jp
imul
clc
or
xchg
sub
cmp
push
aas
sar
push
test
ja
mov
lahf
add
jmp
popf
test
scas
cli
stc
ds
or
sbbb
mov
push
or
std
xchg
inc
cmp
xchg
stos
ds
dec
sti
xor
jb
mov
sub
lods
sbb
lods
out
iret
push
mov
andb
push
dec
std
dec
inc
jle
jne
js
push
ss
lea
xchg
push
into
cmp
xchg
sub
sub
shlb
mov
xchg
xchg
xchg
lcall
or
imul
daa
cmpb
data16
fcmovnu
cmp
push
sub
inc
and
outsl
and
outsb
sahf
sbb
in
adc
mov
nop
add
inc
ror
sub
pop
mov
xor
pop
sub
jb
xor
test
push
mov
jae
jne
pop
adc
ljmp
jle
and
sub
into
sbb
mov
cmp
rcrl
push
mov
ds
mov
xchg
dec
add
test
cmpsb
addr16
cmpsb
lret
push
dec
mov
sub
add
hlt
rolb
xchg
in
xor
and
sub
xor
cld
data16
jbe
mov
mov
mov
push
dec
ret
inc
jno
push
or
cld
pop
push
inc
mov
xadd
inc
jbe
es
mov
ss
mov
xchg
mov
mov
addb
mov
add
fwait
and
mov
sub
push
xor
popa
inc
push
mov
repnz
call
or
inc
mov
insb
lea
add
loop
inc
push
xor
cmpsb
push
jge
cmp
sbb
inc
pop
lods
mov
sub
insl
mov
mov
pop
rorb
adc
imul
idiv
pop
inc
or
in
prefetch
arpl
push
add
mov
mov
dec
dec
lahf
ja
cmp
xor
aam
sbb
scas
mov
test
addr16
out
lds
lret
mov
pop
lock
mov
mov
out
add
dec
add
cmp
sbb
shl
in
adc
mov
push
test
ljmp
test
xchg
es
sub
cli
sub
into
in
int3
jge
sbb
cmp
and
mov
loope
aad
addr16
and
push
in
adc
sub
lret
pop
inc
dec
push
xchg
xlat
sbb
mov
sub
loopne
inc
mov
imul
adc
mov
pop
pop
popa
cltd
xor
stos
in
bound
js
popl
cmp
cltd
xor
aam
or
idiv
imull
jns
sub
and
movsb
and
push
adc
or
inc
mov
sbb
ss
pop
sbb
sti
int
repnz
mov
iret
mov
xor
js
pop
cwtl
add
push
xchg
test
mov
xchg
jp
sti
sub
sub
lock
pusha
dec
std
adc
insb
xlat
in
sub
lock
pusha
dec
std
adc
insb
xlat
in
sub
lock
pusha
dec
std
adc
insb
xlat
in
sub
lock
pusha
dec
std
adc
insb
xlat
in
sub
lock
pusha
dec
std
adc
insb
xlat
in
sub
lock
pusha
dec
std
adc
popa
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
jo
insb
imul
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
imul
gs
imul
jae
ja
outsb
outsl
ja
push
gs
imul
imul
js
insb
outsb
jae
insl
jae
ja
outsb
outsl
ja
push
gs
imul
je
jo
das
das
jae
push
cs
imul
je
arpl
das
push
dec
dec
das
xor
xor
outsl
ja
push
gs
imul
insl
insb
outsb
jae
and
je
cmp
das
jae
push
cs
imul
je
arpl
das
push
dec
dec
das
xor
xor
outsl
ja
push
gs
imul
jb
gs
insl
jae
ja
outsb
outsl
ja
push
gs
imul
imul
cmp
ja
outsb
outsl
ja
push
gs
imul
popa
jo
insb
imul
ds
popa
jae
gs
bound
push
add
add
xchg
add
add
xor
xor
scas
xor
sti
xor
pop
ss
ss
ss
jmp
clc
ss
jbe
jl
xchg
aaa
lahf
aaa
and
daa
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
leave
cmp
or
ds
mov
mov
or
adc
push
aas
push
aas
lret
aas
aas
out
aas
cld
aas
add
add
add
add
and
sub
cmp
je
sbb
xor
xor
xor
xor
xor
or
and
das
xor
xor
xor
xor
xor
arpl
jo
stos
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
ds
inc
aaa
dec
aaa
arpl
outsl
aaa
and
sub
das
cmp
aam
fnstcw
fistpll
outsl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
dec
cmp
push
cmp
cmp
pushf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
pop
cmp
mov
mov
cmp
out
out
cmp
xor
aas
add
add
addb
add
jo
mov
add
inc
xor
xor
xor
xor
pop
xor
jp
xor
xor
xor
xor
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
add
mov
cwtl
xor
sub
xor
cmp
cmp
push
xor
je
js
