nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
shl
add
lock
add
lock
add
inc
add
lock
add
lock
add
inc
add
inc
add
inc
add
inc
add
lock
add
add
lock
add
add
inc
add
add
inc
add
lock
add
lock
add
inc
add
lock
add
lock
add
lock
add
inc
add
inc
add
add
lock
add
inc
add
add
inc
add
inc
add
lock
add
inc
add
jb
and
sub
test
adc
loope
data16
scas
add
shll
add
scas
add
shll
add
mov
pop
outsb
xchg
stos
add
data16
mov
daa
add
adc
cmpsl
adc
data16
pop
test
outsl
inc
mov
imul
pop
inc
jb
data16
mov
pop
outsb
push
stos
add
data16
add
ret
add
ret
add
ret
add
mov
add
mov
cmpsl
pop
fs
mov
inc
add
data16
stos
push
xor
data16
adc
mov
fs
stos
data16
or
mov
add
mov
arpl
mov
fs
stos
data16
mov
data16
or
stos
or
data16
nop
pcmpgtw
xchg
inc
fldt
adc
movsl
or
shlb
add
stos
or
data16
stos
push
xor
insb
jb
data16
cmpsl
add
gs
mov
add
dec
add
bound
add
add
add
add
add
add
add
add
add
add
add
jb
add
add
add
add
bound
jb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popl
jb
popl
jb
popl
jb
popl
jb
popl
jb
popl
add
popl
jb
popl
jb
popl
jb
popl
jb
popl
jb
popl
jb
popl
jb
popl
jb
popl
jb
popl
jb
popl
jb
popl
jb
popl
jb
popl
jb
popl
jb
popl
jb
popl
jb
popl
jb
popl
jb
popl
jb
popl
jb
popl
jb
popl
jb
popl
jb
jmpw
add
add
add
add
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
cwtd
xor
popfw
outsb
leave
pop
jge
aaa
jmp
jno
leavew
outsb
enter
mov
jmpw
jmpw
data16
jmpw
jmpw
jmpw
jmpw
jmpw
data16
jno
callw
add
add
add
add
data16
jno
jmpw
jmpw
jmpw
cltd
add
data16
or
add
xlat
data16
jbe
fcmovnbe
data16
data16
data16
sbb
add
enter
data16
data16
data16
data16
bound
jmp
data16
pop
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
add
add
jne
jb
cwtl
fstpl
add
add
add
add
add
or
mov
mov
jb
jne
jb
addl
add
add
add
cltd
jge
add
add
add
bound
ror
push
popa
fidivrs
add
inc
add
gs
pop
cltd
pushl
pop
add
add
add
bound
xor
jno
mov
insl
jb,pn
xor
cmp
out
jno
popl
jb
popl
jb
popl
jb
iret
add
jb
popl
jb
popl
jb
popl
jb
popl
jb
popl
jb
popl
jb
popl
jb
popl
jb
popl
jb
popl
jb
popl
jb
popl
jb
popl
jb
popl
jb
popl
jb
popl
jb
popl
jb
popl
jb
popl
jb
popl
jb
jmpw
jmpw
jmpw
jmpw
jmpw
add
add
add
add
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
add
add
add
add
data16
les
or
data16
les
sbb
data16
les
or
data16
les
fcmovnb
data16
ret
data16
ret
data16
ret
data16
ret
data16
ret
data16
ret
data16
ret
data16
ret
data16
ret
data16
ret
data16
ret
data16
data16
pop
ret
data16
data16
data16
data16
data16
data16
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
xchg
add
xchg
add
jb
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
push
cmc
jno
xchg
jno
lods
hlt
jno
mov
hlt
jno
loope
jno
cmp
repz
shl
jno
iret
repz
cltd
repz
outsl
hlt
jno
mov
add
add
add
jno
push
jecxz
and
jecxz
dec
jecxz
and
jno
popl
jb
addr16
jno
popa
sti
jno
inc
sti
jno
mov
jno
inc
in
jno
psubd
sbb
jno
sbb
jno
popl
jb
inc
cli
jno
data16
dec
leave
out
dec
leave
data16
leave
lretw
cmp
data16
sub
mov
leave
test
leave
jmpw
push
add
leave
jmpw
sbbw
sbb
sub
sub
cmp
data16
mov
shrw
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
or
mov
add
xchg
or
add
or
add
or
add
or
add
or
add
or
add
or
lret
or
xor
add
or
mov
add
or
stc
or
cltd
or
jnp
add
add
or
orl
add
or
mov
dec
es
add
xchg
jb
xchg
jb
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
xchg
add
xchg
jb
xchg
jb
xchg
jb
xchg
jb
mov
add
mov
fdivl
jnp
jno
arpl
jno
lahf
movsl
out
sti
out
mov
jno
iret
out
xor
jno
sbb
jno
add
jno
jne
jno
jae
jno
outsl
out
jnp
jno
inc
out
jge
jno
insl
out
jno
xchg
jno
cmp
out
sub
jno
jg
jno
in
jno
add
jno
dec
out
and
out
or
jno
adc
jno
data16
pop
xchg
xchg
lds
mov
add
out
lds
push
lds
dec
lds
pop
lds
pop
lds
dec
lds
dec
lds
sbb
popaw
add
lds
or
data16
or
or
lds
sbb
sub
lds
or
add
les
fcmovb
jmpw
push
int
and
les
int
data16
les
int
cmp
les
xchg
les
jmp
pop
add
les
or
add
dec
les
arpl
data16
adcb
orb
orb
add
cs
les
mov
xor
add
xor
add
add
xor
add
cs
das
gs
das
add
inc
xchg
add
xchg
add
jb
xchg
add
xchg
add
gs
inc
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
xchg
add
xchg
add
nop
add
xchg
add
add
mov
add
mov
add
mov
add
add
add
jb
mov
add
mov
fnsave
paddusb
sbb
jno
sub
fnsave
sbb
jno
sbb
fnsave
rcr
jno
movsl
fidivl
popl
jb
int
jno
in
jno
mov
jno
popl
jb
xor
jno
mov
jno
xchg
in
jno
icebp
in
jno
sbb
jno
iret
in
add
and
jno
or
jmp
fucomi
jno
popl
jb
mov
bnd
or
jno
data16
jno
out
ror
out
jno
out
jno
out
jno
out
jno
out
or
cltd
or
test
jno
out
jbe
out
arpl
sbb
add
testw
inc
leave
data16
inc
leave
data16
out
and
data16
out
jno
out
jno
out
jbe
out
jno
out
jno
out
jno
out
jno
out
jecxz
fnstenvs
out
jno
out
test
data16
data16
data16
data16
xor
mov
xor
lret
xor
shll
add
iret
xor
movsl
xor
add
xor
add
xor
add
xor
add
data16
add
add
add
add
add
enter
xor
xorl
add
add
xor
jb
mov
jb
mov
jb
mov
jb
add
mov
add
mov
jge
push
not
mov
xor
jge
fwait
cmpsl
out
xor
cmp
mov
mov
lahf
lahf
lods
sbb
pushf
pop
mov
jno
in
rcrl
pop
mov
xchg
xor
in
les
iret
lods
jbe
mov
lock
dec
pop
or
add
stc
add
enter
jge
insl
sbb
mov
jb
daa
or
in
test
in
xchg
insb
shlb
pop
cmpsb
das
sub
es
sar
test
out
lcall
mov
fmuls
mov
inc
psrlq
das
fimuls
std
mov
xchg
push
dec
xchg
sub
mov
clc
add
cli
push
sub
mov
clts
shrl
xchg
push
add
sub
and
pushf
out
jmp
popa
in
and
jne
jl
push
mov
das
ret
jbe
add
cmpsb
scas
iret
dec
inc
call
add
ja
dec
int3
jmp
aam
mov
jno
int3
jmp
add
lret
inc
jg
hlt
jbe
mov
jbe
jne
adc
sbb
or
cmpsb
cs
in
divl
sahf
xor
fwait
jmp
jnp
adc
inc
data16
and
add
inc
xor
add
jp
imul
cmpsl
enter
int
leave
insl
add
data16
out
and
sub
jmp
mov
std
pop
data16
mov
adc
adc
xorb
xchg
mov
mov
adc
scas
lahf
clc
jb
arpl
add
icebp
enter
clc
adc
xor
iret
adcl
cs
push
sahf
mov
into
rolb
arpl
bound
in
mov
outsl
add
inc
sti
lods
sarl
add
xor
jae
sahf
dec
hlt
mov
add
sarl
dec
aad
mov
arpl
adc
xor
stos
std
xor
push
stos
into
add
dec
jb
popl
jb
push
movsb
cmp
xorl
add
add
jb
xor
mov
push
ret
add
insb
cmp
add
mov
mov
add
leave
addr16
mov
mov
push
push
enter
cli
popf
fimuls
das
addr16
enter
push
loop
xor
xor
icebp
int
push
dec
lcall
and
and
dec
lcall
add
add
out
outsb
fdivrs
ja
ret
int3
jmp
xor
jae,pn
pusha
sbb
cwtl
fwait
adc
stc
andb
cs
mov
inc
add
lods
jmp
jno
jmpw
in
ret
jno
pop
push
ret
data16
jno
data16
mov
jno
leavew
jno
pop
cmp
add
add
add
add
fnstenvs
test
data16
jno
or
test
data16
jbe
lret
leave
out
fcmovnu
and
add
fldenv
add
ret
lret
fldenv
add
shll
fisubl
add
enter
iret
data16
shlb
add
shlb
lahf
rclb
add
fwait
rclb
add
leave
cmpsb
add
rolb
add
leave
movb
shlb
pop
shl
add
add
xchg
jb
outsb
push
jb
insl
pop
jb
insl
sbb
insb
nop
jb
outsb
cmp
insl
js
sub
insb
shlb
outsb
adc
insl
push
jb
insb
mov
sub
insl
mov
jb
insl
dec
jb
insb
lock
outsb
add
sub
insl
adc
repnz
jecxz
add
jb
insl
je
sub
insb
enter
or
jb
insl
and
sub
insl
add
sub
or
lahf
or
or
mov
or
push
popf
or
or
or
or
lds
or
lds
or
or
mov
rol
mov
or
or
sahf
or
or
or
jmpw
jmpw
jmpw
jmpw
add
add
add
add
data16
insb
shll
jl
jmp
jle
data16
jmp
imul
gs
insb
mov
jmp
imul
jmpw
jmpw
jmpw
jmpw
data16
insb
ret
jmpw
jmpw
test
data16
jmp
imul
data16
add
jmp
mov
inc
add
lret
int
add
loopne
dec
int
add
mov
dec
shrb
int
add
js
sbb
cli
add
add
add
int
add
lret
or
jge
or
or
or
dec
add
leave
fiaddl
fcmovne
push
add
int3
sub
fcmovne
lcall
lret
int3
aaa
add
int3
ja
int3
in
leave
mov
pop
add
leave
movsb
add
pusha
or
insl
popa
jb
insl
and
push
jb
insl
add
insl
xorl
insb
loop
sbb
insl
pop
jb
insl
sbb
insb
xchg
jb
popa
cmp
insl
jns
sub
insb
shlb
bound
jb
insl
imul
add
add
jb
insl
sub
insb
mov
sub
insl
mov
insl
dec
jb
insb
bnd
bound
sub
insl
adc
jae
popa
sub
insl
jne
or
sahf
add
or
or
or
or
lds
or
lahf
add
or
pop
mov
or
popf
add
or
or
or
lds
or
lds
or
or
lds
jbe
jmpw
jmpw
jmpw
data16
jbe
jmpw
jmpw
jmpw
add
add
add
add
jmpw
jmpw
jmpw
jmpw
data16
jo
jmpw
jmpw
jmpw
fnsaves
jmpw
jmpw
jmpw
gs
jo
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
data16
jo
jmpw
data16
shll
mov
rcll
fwait
rcll
ret
jp
imul
pop
roll
ret
dec
shll
shl
pop
shll
pop
ret
cmp
outsl
add
cmp
sbb
jns
sbb
clc
add
enter
rcrl
sbb
pop
add
ret
stc
jge
or
or
fcmovnb
dec
add
rcr
lret
shrb
lret
shr
fcmovnb
sub
fcmovnb
cwtl
add
arpl
jb
insl
push
jb
insl
adc
insb
jae
icebp
arpl
jb
insl
jo
pop
insl
xor
push
jb
or
insl
pusha
jb
insl
and
push
jb
insl
add
insl
xorb
inc
jb
insb
loope
or
insl
pop
jb
insl
sbb
insb
xchg
jb
cmp
insl
js
jb
insl
cmp
insb
shll
adc
insl
push
jb
insb
mov
sbb
insl
mov
or
lahf
add
or
or
mov
xchg
mov
or
or
sahf
add
or
or
or
or
lds
add
add
add
scas
lahf
add
or
or
lds
or
popf
add
or
or
jmpw
jmpw
jmpw
jmpw
data16
jb
jmpw
jmpw
data16
data16
jmpw
jmpw
jmpw
add
add
add
add
data16
jb
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
data16
xor
jmpw
jmpw
jmpw
data16
jmpw
jmpw
gs
hlt
mov
jmp
fstpt
roll
lret
mov
in
add
mov
xchg
add
mov
mov
jo
lret
mov
push
add
mov
stos
add
push
add
inc
add
lret
add
pusha
add
loopne
pop
mov
mov
cmp
outsb
add
mov
js
or
sti
add
adc
sbb
pop
add
ret
jb
cwtl
sbb
jb
insl
outsb
jb
insl
jb,pn
push
jb
insl
push
jb
insl
mov
insl
dec
jb
push
jb
xchg
ljmp
pop
insl
adc
insb
xorl
push
jb
insl
jno
pop
insl
xor
push
jb
cwtl
or
insl
popa
jb
insl
and
push
jb
insl
add
insl
xorl
insb
jecxz
or
insl
pop
add
insl
sbb
insb
xchg
jb
cltd
cmp
insl
jns
or
sahf
cld
add
or
or
or
or
or
lahf
cld
jno
or
or
lds
inc
or
sahf
cld
jle
or
or
xchg
or
or
lds
or
lahf
cld
jne
or
or
data16
je
jmp
imul
gs
out
mov
jmp
imul
jmpw
jmpw
jmpw
jmpw
data16
scas
ret
jmpw
jmpw
data16
imul
jmpw
jmpw
jmpw
data16
outsb
shll
test
jmpw
jmpw
jmpw
jmpw
jmpw
data16
js
jmpw
data16
adc
or
add
shll
or
pop
add
or
add
adc
lret
adc
or
add
fistl
insb
add
adc
add
adc
lret
or
add
adc
lret
adc
add
adc
mov
test
push
imul
dec
adc
dec
or
add
pusha
add
loopne
dec
adc
add
mov
jb
insb
or
popf
pop
jb
popf
push
jb
lcall
jb
popf
jle
pop
popf
jb,pt
lcall
pop
popf
outsb
jb
popf
jb,pn
lcall
pop
popf
mov
popf
dec
jb
lcall
adc
add
insl
adc
outsb
add
insl
add
jbe
outsb
inc
jb
outsb
add
adc
insl
and
insl
add
imull
add
cltd
push
repz
dec
pop
jb
lahf
push
jo
nop
push
repz
jae
mov
push
jae
lcall
cmpsb
lahf
push
outsb
xchg
push
jae
mov
push
jae
mov
push
jae
cltd
push
mov
iret
push
jb
lahf
add
xchg
add
xchg
add
add
test
jbe
xchg
add
jno
mov
jo
addl
jb
popl
jb
popl
jb
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
callw
callw
callw
callw
data16
data16
data16
data16
ljmpw
jno
ljmpw
jno
in
jno
in
jno
in
jno
in
data16
jno
data16
data16
jno
data16
jmpw
data16
pusha
mov
pusha
jecxz
mov
imul
lds
pop
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
lds
add
lds
lds
vpcmpgtd
aad
data16
lds
aam
data16
lds
mov
lds
xchg
lds
mov
lds
nop
lds
nop
lds
jg
data16
data16
add
add
add
add
add
add
add
add
add
jb
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
or
or
bound
jb
or
or
or
arpl
sbb
jp
roll
push
dec
add
push
mov
add
adc
push
mov
push
lea
jp
or
add
int
push
insl
add
in
add
sub
add
popf
add
sbb
add
fldl
fldl
jp
pop
add
popf
add
sbb
add
adc
add
inc
add
jne
add
cmc
add
retw
jno
inc
outsb
mov
subw
mov
mov
retw
jno
inc
outsb
mov
data16
out
jno
data16
data16
jbe
cmpsw
jno
pcmpeqd
dec
jbe
data16
jno
pushw
data16
mov
data16
mov
data16
add
pushw
data16
mov
outsw
jno
cmpsw
jno
popw
jno
data16
outsb
add
ret
mov
outsb
add
lret
in
outsb
add
leave
outsb
add
leave
outsb
add
leave
outsb
add
outsb
add
lret
lcall
add
lret
jp
outsb
add
lret
add
lret
outsb
add
leave
outsb
add
outsb
add
lret
outsb
add
lret
mov
outsb
add
lret
mov
lret
jb
or
bound
jb
bound
jb
bound
jb
or
bound
jb
bound
jb
bound
jb
or
bound
jb
or
bound
jb
or
jb
or
or
or
bound
jb
or
bound
jb
or
bound
jb
or
or
or
bound
jb
or
or
or
or
or
xchg
add
or
push
ret
jp
jp
jb
jp
ljmp
pop
add
jp
bound
sbb
push
rolb
push
dec
add
mov
add
adc
push
mov
jp
pushf
add
pushf
add
sbb
imul
add
jl
jnp
jl
imul
add
cld
add
mov
add
cmp
imul
add
pushf
add
pushf
add
data16
int
jp
int
repnz
add
add
add
add
data16
bound
bound
data16
int
mov
int
and
data16
data16
data16
inc
outsb
int
inc
jno
xchg
jno
xchg
jo
data16
data16
data16
data16
data16
int
jb
int
and
data16
xchg
jno
xchg
jo
data16
int
loop
jo
push
jno
push
jo
data16
outsl
add
outsl
add
outsl
add
enter
outsl
add
outsl
add
outsl
add
outsl
add
outsl
add
add
outsl
add
outsl
add
outsl
add
les
lds
je
outsl
add
outsl
add
outsl
add
xchg
lret
test
outsl
add
add
add
lret
add
outsl
add
lds
lret
jb
bound
jb
arpl
jb
or
popa
or
bound
jb
arpl
jb
or
popa
or
bound
jb
arpl
jb
or
bound
jb
bound
jb
arpl
jb
or
bound
jb
bound
add
arpl
jb
or
bound
jb
bound
jb
bound
jb
bound
jb
bound
jb
or
bound
jb
bound
jb
arpl
jb
or
bound
jb
addb
mov
add
sub
pusha
add
cwtl
add
adc
jnp
or
popl
jne
iret
add
outsl
add
scas
add
insl
mov
add
lahf
add
filds
insl
xchg
add
xlat
add
cmpsl
add
out
insl
movb
insl
xlat
add
pop
add
mov
jne
inc
add
imul
mov
add
data16
jno
xor
ljmpw
outsb
into
data16
data16
outsb
into
lretw
add
add
add
add
dec
outsb
into
data16
data16
jmpw
data16
jno
data16
leave
data16
jno
in
jno
data16
leave
in
leave
data16
leave
data16
leave
data16
jno
data16
leave
data16
out
jno
data16
jno
out
leave
iretw
jno
callw
data16
jno
data16
leave
data16
data16
ret
arpl
add
ret
arpl
ret
mov
arpl
enter
fadd
arpl
rol
arpl
rol
add
ret
pushf
ret
fwait
ret
add
add
mov
pusha
pop
xchg
cli
pusha
or
sti
insl
or
add
push
add
popa
add
popa
add
push
ljmp
push
ljmp
inc
ljmp
inc
ljmp
add
imulb
imulb
into
push
pop
into
push
jb
push
or
repz
or
loop
or
outsl
bnd
addr16
ja
jbe
outsl
bnd
addr16
je
ja
insb
cmc
jbe
fs
jbe
jl
jbe
je
ja
insb
cmc
jbe
fs
jbe
jl
jbe
add
push
insb
cmc
jbe
fs
jbe
jl
jbe
je
ja
insb
cmc
jbe
fs
jbe
jl
jae
jne
je
insl
nop
adc
mov
jge
adcb
int
adc
nop
adc
mov
jge
adcb
int
adc
nop
adc
mov
jge
adcb
int
adc
nop
adc
mov
jge
popl
adc
adc
add
add
add
rclb
sbb
sbb
sbb
mov
test
mov
mov
mov
jp
addr16
fisubs
push
xchg
sbb
fstl
sbb
fldl
roll
loopne
add
add
repz
repz
loopne
jecxz
loopne
jecxz
loopne
rolb
fistpll
add
jge
outsl
fistpll
data16
pop
fistpll
push
fistpll
mov
jge
test
jp
jge
jp
push
fidivrl
insl
fidivrl
fidivrl
pop
fidivrl
push
fidivrl
fidivrl
test
jp
jge
jp
xchg
fidivrl
insl
fidivrl
fidivrl
pop
fidivrl
dec
fstpt
dec
fstpt
fdivrl
fdivrl
outsb
fstpt
add
fdivrl
fstpt
push
fdivrl
push
fdivrl
into
fstpt
mov
fstpt
outsb
fstpt
into
fstpt
mov
fstpt
into
fstpt
into
fstpt
fwait
add
into
outsl
or
lret
sahf
lret
imul
xlat
imul
cmp
jbe
pop
aad
adc
ja
add
jb
pusha
std
jb
pusha
sbb
adc
sbb
xchg
jno
jle
jo
data16
pop
cli
jge
addr16
pop
sbb
xchg
jle
jg
jae
test
jae
jl
jb
fs
jb
pop
clc
outsl
pop
lock
pop
pop
sbb
test
jo
jge
jge
jp
jge
jp
jp
push
jp
push
jl
add
jl
pop
out
sbb
push
jp
jnp
jp
jnp
sbb
sbb
xchg
sbb
fists
sbb
filds
sbb
mov
js
sbb
sbb
xchg
sbb
xchg
sbb
test
mov
test
mov
mov
jns
mov
jns
sbb
sbb
xchg
sbb
xchg
sbb
pop
fldl
mov
popl
jb
mov
jb
lea
jb
mov
jb
mov
jb
addb
mov
jb
addb
data16
data16
data16
jno
out
jno
data16
jno
data16
jno
data16
fnsaves
leavew
jno
shlw
sbb
and
sub
cmp
dec
add
cmp
imul
outsb
test
mov
jmpw
jmpw
jmpw
callw
data16
ljmpw
jno
out
data16
fnsaves
data16
data16
data16
data16
data16
ret
data16
ret
lret
ret
mov
data16
les
add
lds
or
data16
mov
data16
lret
data16
data16
shlb
fcmovnu
data16
loop
dec
repnz
fildl
data16
ret
cmp
mov
outsl
cltd
ret
pop
xor
or
outsb
pop
add
sahf
jb
ljmp
in
lret
aad
js
rolb
add
bound
int3
in
mov
outsl
js
loop
jne
push
roll
mov
idivb
fidivrl
rcr
scas
pop
aam
sub
shl
mov
insb
popa
pop
or
mov
out
stos
gs
push
dec
push
push
rcrb
out
daa
subb
jb
ds
and
icebp
push
rorb
add
push
lods
mov
cmp
add
push
mov
jns
sub
iret
mov
cmp
push
or
cmpsb
clc
and
and
sbb
push
cmp
xor
lods
mov
enter
mov
sahf
xchg
jbe
arpl
inc
movsl
mov
add
add
add
pop
mov
push
pop
mov
inc
xchg
jnp
xor
and
ret
dec
mov
in
pusha
repnz
into
add
mov
xor
sbb
int3
push
adc
fnstcw
xchg
pusha
sbb
dec
arpl
lea
call
sahf
pop
or
and
imul
jno
xchg
add
int
jb
lds
add
mov
xchg
scas
sbb
add
sbb
shll
in
cmp
jge
add
aad
jae
mov
ljmp
cmp
lahf
inc
cmp
fisubl
dec
xchg
mov
cmp
adc
mov
mov
cmovae
aas
add
sbb
fs
mov
xor
insb
stos
add
mov
fs
dec
xlat
insl
mov
es
push
dec
jae
and
add
mov
or
add
mov
pop
mov
mov
rcrl
int3
shrb
rcrb
fadd
jb
loope
lahf
lcall
jno
mov
push
ss
mov
shl
icebp
xchg
jbe
ja
add
out
imul
leave
dec
insl
outsl
push
cmp
in
push
push
sbb
loope
verw
incl
mov
repnz
add
in
push
roll
jl
mov
bound
mov
push
xchg
jge
in
decl
andb
fisttpll
mov
lret
sarl
fcmovbe
xchg
addr16
add
sbb
ret
daa
lret
ret
jge
mov
push
pop
leave
pop
pusha
dec
sub
inc
mov
in
ret
jle
jmp
push
sti
sbb
pop
dec
jno
scas
cmp
dec
cmpsl
rclb
repnz
int
jo
int3
mov
jne
mov
jae
std
xchg
orb
mov
jle
mov
jns
or
outsb
fwait
icebp
cli
sub
or
daa
xor
pop
es
subl
xchg
data16
movsb
clc
lods
adc
dec
cld
dec
adc
jecxz
mov
pop
adc
add
inc
mov
lea
adc
and
arpl
das
repz
stos
test
jns
push
notl
fdivrl
adc
enter
cmp
rcrl
xchg
add
mov
or
and
xor
xchg
daa
das
nop
enter
push
aaa
aaa
jle
dec
mov
cltd
add
out
bound
mov
add
clc
cmp
push
andl
and
inc
bound
jne
cmp
add
mov
dec
xor
mov
xchg
mov
inc
add
push
fstp
adc
aam
bound
shll
daa
xor
fmul
fistl
push
lods
shlb
loope
mov
bound
mov
and
popa
mov
jge
aaa
cltd
mov
lock
cmp
mov
sbb
add
add
xchg
sbb
inc
ss
sbb
sub
add
add
add
xlat
insb
push
stos
ja
pop
cmp
test
inc
mov
daa
push
ret
int
pop
mov
and
pop
jbe
adc
jno
cmc
ja,pn
mov
rclb
lcall
scas
push
adc
mov
fdivrs
lret
icebp
ret
push
mov
push
les
test
jb
add
in
lahf
repz
sbb
dec
sti
sub
icebp
push
in
sbb
cmp
cmp
sub
movsl
lcall
xchg
in
mov
mov
ja
leave
pop
mov
ret
pop
subl
cld
insb
shr
mov
jl
scas
or
push
push
mov
repnz
mov
xor
les
out
adc
push
dec
jno
repnz
push
add
cmp
xchg
stc
adc
jns
or
or
in
xor
and
xchg
jnp
cmpsl
jge
mov
sub
test
sub
scas
ftst
cmp
pop
popf
and
push
insb
das
jmp
jne
jno
cmp
add
in
mov
jge
lds
jne
jmp
xchg
jmp
mov
sbb
xchg
push
or
pop
imul
sub
aam
push
mov
mov
and
xchg
xor
fwait
gs
jl
jl
lock
push
ja
test
cmp
add
push
in
sbb
shll
cmp
sub
es
lods
popf
adc
jle
je
aas
jno
xchg
frstor
leave
mov
xor
sti
add
dec
aas
dec
xchg
pop
and
imul
outsb
out
or
mov
dec
mov
into
jle
adc
out
cmp
shlb
ss
mov
ja
xchg
fsubs
cmpsl
add
cmpsl
ljmp
ss
mov
jne
scas
bound
hlt
sub
xchg
fcomp
pop
addr16
jae
popa
fiadds
insb
xor
ja
sbb
sub
jb
add
mov
aam
mov
test
xchg
mov
xor
jecxz
mov
popf
add
cli
das
pop
cmc
lock
and
push
call
or
lds
sbb
xchg
lret
lock
jne
daa
xorl
mov
pop
inc
loop
or
pop
cmp
adc
push
idivb
pusha
out
pop
das
imul
add
test
pop
jge
push
inc
push
xchg
dec
dec
push
mov
in
fwait
ret
int
scas
add
test
pop
pop
out
stos
xor
daa
out
inc
aam
inc
int
aad
dec
fdivrs
push
sti
aaa
pushf
js
jge
popa
jge
jbe
mov
pop
aaa
fcomip
jg
push
and
lods
fmulp
out
mov
cli
sahf
insb
in
adc
loop
cmp
xor
sub
scas
ret
out
scas
jl
add
jmp
sub
mov
jle
sbb
add
and
pop
add
pusha
push
stos
and
xor
loope
daa
cld
repnz
add
mov
pop
into
fsubrl
pushf
push
cs
mov
stos
bound
pop
lock
dec
fstpl
jmp
lds
divl
add
push
cs
add
jbe
xor
outsl
and
inc
or
jns
cmpsl
cld
inc
pop
mov
push
sarb
ds
sbb
stos
std
xor
stc
out
xchg
lds
add
mov
xchg
cmp
cmc
outsl
lret
pop
movsb
and
xor
std
cmp
gs
das
jle
out
push
aam
mov
lds
or
sub
adc
or
aas
clc
lret
add
add
jg
jae
mov
inc
jo
cmp
lret
je
std
das
test
notl
aam
call
fst
cs
cmpsl
shrb
nop
dec
iret
xchg
fiadds
sarl
pusha
dec
ret
push
les
push
xchg
les
clc
add
and
ror
sbb
mov
mov
jmp
cmp
mov
hlt
scas
mov
dec
mov
daa
sahf
rcr
cld
lahf
adc
imul
pop
mov
ror
mov
test
lcall
call
leave
jge
jp
inc
cmp
test
push
cmp
mov
jns
jo
inc
mov
inc
pop
push
inc
xor
push
inc
or
jmp
hlt
and
inc
add
dec
out
mov
loop
cmp
dec
stos
arpl
dec
sub
inc
dec
pop
popf
dec
test
sarb
add
fdivrl
xor
add
add
add
add
jno
push
push
mov
inc
or
jle
push
sub
jge
lods
test
jns
int
js
bound
and
insb
xchg
mov
pop
outsl
bound
pushf
outsb
out
inc
shrl
cmp
push
jns
push
shrl
or
orl
xlat
cmc
mov
fs
inc
data16
add
add
add
add
mov
fcmovbe
cmp
add
sub
dec
xchg
sub
fidivrs
pop
pop
pop
scas
dec
mov
les
pop
inc
mov
xchg
mov
sub
dec
mov
adc
cmpsb
dec
arpl
lahf
or
jne
mov
pushf
imul
jl
sbb
add
mov
sub
and
jae
sbb
movsb
sbb
repz
lock
sub
and
fld
orb
inc
in
xor
lock
add
jb
scas
call
jl
sbb
xor
xchg
icebp
mov
push
icebp
clc
mov
rep
scas
shl
sub
pop
lock
enter
mov
jle
add
aas
aad
jecxz
pop
in
xor
adc
fisttpll
fbstp
push
fiadds
jb
daa
xorl
mov
pop
aaa
iret
xchg
mov
or
mov
int
nop
or
pop
mov
idiv
loope
rcl
mov
in
adc
cmp
mov
xor
mov
add
jg
icebp
mov
shlb
cli
fbld
mov
imul
cmc
inc
mov
mov
mov
movsb
repnz
movsl
mov
hlt
cmpsb
je
mov
andl
lods
add
mov
and
pop
mov
movsl
iret
cmpsb
jno
into
pop
push
leave
xchg
pop
or
add
add
add
cld
lea
mov
add
mov
xchg
mov
jle
sahf
popf
mov
pushf
ljmp
cwtl
dec
adc
idiv
xchg
lcall
sub
mov
pop
test
mov
fwait
bound
jb
inc
lcall
adc
add
lods
fdiv
rcr
out
mov
push
mul
insb
pop
in
repnz
aad
lea
and
pop
data16
sbb
dec
jmp
movsb
je
or
lret
push
aad
icebp
or
pop
sub
xorb
fwait
daa
cmp
jb
jl
popa
jmp
rcrb
push
movb
addb
add
add
add
add
adc
mov
sub
pop
stc
adc
dec
cmp
sbb
lods
and
sahf
xchg
sbb
or
jle
movsl
inc
cmp
ljmp
bound
imul
daa
mov
fnsave
leave
mov
and
add
mov
jae
push
add
add
add
add
add
push
mov
mov
adc
jbe
repz
out
mov
stos
push
mov
mov
mov
sub
adc
orl
hlt
mov
and
out
loope
or
les
add
mov
pusha
outsb
xlat
add
jle
dec
mov
aam
inc
lea
add
jle
leavew
jecxz
cmp
inc
add
mov
cwtl
adc
jmp
xor
fldl2e
and
dec
out
xchg
and
and
inc
pop
sbb
clc
loop
xchg
das
jg
lret
dec
jno
aad
add
xor
push
loope
lahf
sti
cmpsl
dec
daa
ret
mov
add
cmp
test
mov
shlb
pop
jnp
or
mov
unpcklps
lods
lods
stos
rcrb
mov
mov
jl
adc
jae
xchg
xor
sbb
adc
jb
je
sub
stos
add
sub
outsl
ss
rcl
arpl
add
enter
mov
and
push
ljmp
lods
fbld
pop
jp
pop
xor
loope
std
es
adc
add
xchg
fwait
mov
outsb
clc
data16
dec
insb
daa
mov
or
cmpsl
xchg
cmp
cmp
lods
or
lcall
sub
mov
mov
test
scas
adc
outsl
jbe
icebp
divb
adc
pop
inc
fnstcw
loop
xor
jns
mov
fcmovbe
cmp
mov
inc
lock
sbb
mov
mov
es
mov
sbb
dec
mov
jo
and
xor
jecxz
xchg
cld
daa
stos
orb
xchg
hlt
push
pop
addl
add
add
dec
scas
lcall
sarl
dec
roll
jns
xor
mov
xchg
sub
fisubl
fmuls
enter
push
push
loopne
in
popa
sub
cld
push
xor
scas
rcrb
test
dec
xchg
mov
sub
cmp
fbld
sub
add
ja
adcl
push
adc
mov
push
popf
dec
sbb
in
pop
jl
push
add
cmp
lcall
addr16
enter
orl
sbb
setbe
jbe
xor
sub
mov
sbbb
mov
pusha
add
or
push
dec
push
jle
and
leave
std
xlat
lcall
push
loope
faddl
sbbl
pop
inc
mov
inc
push
in
cld
jmp
xchg
inc
jns
imul
loopne
dec
rorl
fwait
push
mov
es
sbb
dec
push
cmp
fucomi
or
jno
add
push
xchg
loopne
lahf
mov
arpl
in
stc
ja
loopne
fdiv
pop
dec
add
cmp
push
mov
mov
test
lods
sub
jg
stos
add
pushf
in
jbe
das
enter
rcrb
push
sub
popa
rorl
sub
mov
push
movsl
sub
bound
sbb
add
add
add
add
and
mov
jmp
testb
mov
push
stos
pop
shll
subb
cmpsb
or
cltd
in
add
lcall
in
loopne
adc
or
jle
sbb
lret
pop
incb
jb
jo
mov
mov
data16
add
call
jg
cmp
out
ds
shr
push
ret
fbstp
jecxz
in
loopne
orb
push
fisttpl
test
mov
hlt
sahf
mov
addl
cli
dec
push
cs
xchg
jl
jmp
fldl
sbb
push
dec
mov
inc
pop
push
cmpsb
les
jae
decl
dec
add
mov
insb
outsb
ret
xchg
rorb
scas
sbb
push
stos
daa
in
test
adc
mov
mov
shrl
ja
cli
fnstcw
insb
push
jne
out
insl
lahf
inc
sbb
or
scas
sbb
mov
adc
sub
data16
sbb
push
stos
test
and
cld
jb
cltd
adc
int3
ficomps
aad
mov
and
mov
sub
fisubrl
dec
cmp
add
xlat
jno
shll
push
inc
adc
jmp
mov
dec
cmp
pop
jbe
aam
cmc
arpl
shl
fs
pop
jae
test
jle
cwtl
jp
dec
or
push
dec
jns
add
lret
inc
pop
jae
dec
push
out
inc
popa
push
bound
mov
dec
addr16
popa
movsl
dec
pop
push
mov
outsb
les
iret
xor
mov
push
jg
sbb
cmp
adc
imul
ret
add
pop
jb
repz
mov
test
mov
ss
pop
mov
ds
lret
sub
pusha
jae
dec
shl
and
mov
lret
push
pushf
add
jmp
pop
pop
jbe
fdivrp
bound
and
xchg
dec
clc
sub
test
and
xor
stos
ret
mov
pop
mov
cmpsl
shlb
xchg
jno
xor
jb
test
add
inc
inc
jae
adc
imul
sbb
pop
dec
lcall
in
test
mov
je
test
pop
ret
inc
insb
into
dec
jnp
insl
pop
js
cli
repz
inc
pushf
jb
xlat
sbb
and
and
or
xchg
jns
imul
dec
mov
adc
add
popf
xchg
mov
cvttps2pi
ret
outsl
and
sbb
imul
sub
sbb
jle
or
xchg
push
ljmp
addr16
ja
fldl
ja
dec
arpl
jge
sbb
rcrb
pusha
fs
mov
repz
push
sbb
fdivrs
stos
aad
aaa
mov
sbb
scas
cmpsl
mov
stc
pushf
test
xchg
mov
and
imul
inc
das
jb
aas
cmp
sub
or
ss
add
enter
aad
inc
sti
fstps
push
jns
and
repnz
rorb
neg
dec
xchg
js
push
sbb
ss
xchg
out
ljmp
lock
jp
add
sub
dec
imul
jmp
sub
out
mov
pop
aam
mov
xor
fiadds
mov
cmp
sbb
xor
dec
xor
call
sub
pop
cld
mov
pop
in
and
pop
outsb
sub
nop
daa
cmp
dec
rolb
inc
loopne
add
jns
add
add
sbb
xlat
aad
lods
cmpl
cwtl
jl
scas
mov
push
in
aam
imul
dec
mov
push
loopne
inc
pop
mov
cld
push
add
xor
xchg
arpl
enter
jbe
or
data16
push
jl
and
stos
adc
bnd
jp
push
stos
jne
movl
fucomp
jmp
pop
xchg
daa
mov
push
jns
or
outsb
shlb
mov
mov
mov
cmp
adc
inc
into
fsubrp
dec
std
out
lods
test
sub
imul
jbe
repz
daa
xchg
lods
arpl
add
add
add
add
adcb
rcl
xchg
inc
loop
sbb
lock
and
iret
sbb
out
fnclex
lock
lcall
or
sbbl
pushf
push
mov
movsb
je
and
sub
out
sbb
and
call
ficoms
stc
jmp
lods
stos
sub
mov
or
add
shrb
fcoml
jb
sub
loope
push
pop
and
ja
sbbb
sar
mov
pop
int3
adc
mov
xor
dec
nop
icebp
jns
mov
dec
mov
scas
sbb
test
sub
inc
inc
jle
pop
and
cmc
sub
sub
sahf
mov
addr16
add
sub
fdivs
mov
lds
sub
cmpsb
xlat
push
cmpsl
std
lock
xor
flds
imul
xor
aas
lock
inc
add
arpl
pop
orb
jno
fidivl
mov
test
mov
mov
push
or
inc
inc
out
sub
notb
stos
lret
mov
add
add
add
mov
push
leave
and
mov
mov
mov
daa
mov
aad
jnp
movsl
jne
daa
data16
adc
repz
cwtl
add
ret
pop
data16
mov
mov
addb
ret
xlat
int
shl
enter
mov
or
push
in
adc
into
add
xchg
iret
in
fstps
and
pushf
push
add
fstpl
jb
push
fisubl
shl
cs
lock
int3
scas
std
in
push
adc
ficompl
aam
mov
pop
dec
mov
inc
mov
add
push
rcll
sbbb
push
ds
inc
test
test
sbb
repz
scas
mov
sahf
call
sbb
fisttpll
test
jp
add
adc
inc
push
push
add
nop
sub
shl
mov
push
add
rcll
fucompp
mov
repz
sub
lods
pop
in
fdivs
jge
mov
stc
lret
clc
lods
pop
add
sub
push
xchg
sbb
gs
fnsave
repz
cmp
push
out
loopne
dec
testb
xchg
mov
enter
cmc
int3
mov
cmp
jne
pop
scas
sub
or
cmp
mov
adc
inc
loopne
jbe
cmpsl
jb
mov
movsb
and
in
out
xlat
movsb
or
out
inc
fnstenv
add
add
add
rolb
out
jns
loop
mov
cmp
xchg
lret
cltd
mov
ja
outsl
inc
test
fiaddl
or
push
lret
and
cmpsl
pop
loop
push
xor
aaa
jb
mov
adc
inc
mov
or
and
push
xor
add
add
add
pop
repnz
jg
mov
jne
je
dec
pop
xor
push
push
popa
fidivrl
daa
xor
jae
jecxz
xchg
xor
xchg
data16
xchg
mov
sub
iret
icebp
or
bound
dec
sbbb
ret
lea
pushf
inc
cmp
cmp
sub
out
inc
adc
inc
std
and
negb
mov
add
mov
sahf
sub
jg
inc
in
dec
sbb
dec
pop
shll
mov
adc
sbb
mov
xchg
jae
xchg
push
jp
ret
adc
call
pop
dec
mov
dec
or
pop
inc
rol
adc
inc
sbb
or
jns
cmp
paddw
add
add
add
add
add
jno
push
loope
dec
or
cmc
pop
cmp
fisubrs
inc
int3
daa
adc
popf
jmp
insl
lods
shll
and
shl
cltd
xchg
xchg
enter
ljmp
fsubrl
xchg
xchg
lea
adc
dec
push
and
jmp
dec
jb
pop
inc
push
xchg
sbb
xchg
in
mov
out
outsb
jne
test
jns
mov
push
in
pop
stos
fmull
jge
ret
inc
mov
push
mov
and
xchg
add
mov
or
mov
dec
ds
add
sub
les
jg
push
pop
enter
out
pusha
xor
lods
or
lret
retw
xor
scas
nop
add
popa
test
outsb
incl
popf
jmp
sbbl
xor
out
mov
mov
or
ds
mov
pushw
inc
test
std
nop
shl
pushf
jbe
or
dec
icebp
lret
mov
lods
in
hlt
xor
adc
enter
pop
stc
sub
into
sub
pop
add
sub
fwait
mov
addr16
rcrb
test
push
enter
sub
inc
and
jo
xchg
sub
sarl
fsubs
fwait
pop
sbb
stos
mov
jnp
lods
mov
jmp
mov
xchg
movsl
out
jmp
and
cwtl
lods
dec
stos
push
push
jp
add
sub
lcall
and
fwait
mov
fdivrl
push
test
sub
aam
mov
mov
mov
xchg
loopne
xchg
xor
popf
popf
add
sbb
cli
nop
jge
sti
push
push
mov
adc
out
call
mov
pop
in
dec
mov
xor
cmpsl
cmp
inc
popa
inc
xcrypt-ofb
cmpsl
sub
push
cmpsb
in
popa
xor
out
roll
fdivrl
mov
ja
mov
jne
or
mov
insb
sbb
inc
xchg
out
enter
arpl
cmp
out
dec
jle
push
addl
sub
pusha
push
xchg
pop
pop
push
aas
jbe
pop
shlb
aaa
add
mov
cmc
out
xor
jmp
add
or
stc
cmp
jecxz
fdivrs
inc
movsb
outsb
fiadds
into
mov
std
xchg
das
repnz
jmp
xchg
xchg
icebp
int3
sub
mov
cmp
inc
push
mov
adc
mov
arpl
hlt
xchg
pop
lds
aad
les
pusha
mov
add
add
add
xchg
cli
xorb
jge
add
ret
inc
ffree
add
repnz
push
faddl
push
sbb
cmp
mov
cmp
pop
fnsave
pop
bound
pop
imul
or
adc
mov
add
pusha
pop
cmp
push
ljmp
sbb
add
cmp
sbb
and
mov
stc
sub
mov
mov
jo
or
shrl
sub
imul
imul
xor
add
inc
xlat
pop
addr16
xchg
movl
lret
xchg
xor
ds
sub
mov
loope
jg
and
test
jmp
add
add
add
imul
mov
dec
push
int
xor
cli
pop
mov
mov
mov
or
mov
imul
cmp
sti
addr16
jmp
add
jno
push
repz
nop
push
repnz
xor
arpl
mov
movsl
mov
fisubrl
lret
mov
shlb
mov
out
push
add
arpl
fmull
or
sub
test
filds
adc
cltd
fistpll
xor
jg
push
ffree
cmp
mov
jno
clc
and
outsb
shrb
xchg
pop
xor
outsl
dec
cmp
jg
mov
into
mov
and
rolb
xor
mov
mov
sub
inc
cmp
push
scas
jl
test
mov
in
add
mov
mov
pop
data16
xchg
in
mov
xchg
ljmp
dec
je
sub
pusha
mov
jo
lret
add
jle
mov
add
mov
or
inc
jns
pop
fcmovnb
add
cmp
xorb
cmp
mov
andl
mov
mov
jne
sahf
ja
pop
ss
dec
mov
pop
lcall
and
jne
movsb
sbb
xor
lret
add
addb
shlb
pop
jae
lods
sub
lret
cli
data16
mov
xchg
add
add
lret
les
jne
dec
and
sub
aas
mov
sbb
and
jnp
mov
push
dec
lea
stos
mov
push
dec
xchg
sbb
cmpsl
idivb
fcoml
push
push
add
sti
out
sar
sbb
xor
cltd
ret
push
pop
cmp
mov
push
add
lcall
cvtps2pd
aaa
in
push
add
aaa
das
mov
xor
out
clc
addl
js
mov
pop
repnz
push
lret
out
aaa
scas
inc
sahf
cltd
inc
popf
jmp
jge
xchg
pop
inc
daa
clc
out
inc
popf
push
js
ret
inc
shlb
lret
sarb
add
mov
pop
xchg
sbb
imul
and
inc
repz
out
pop
jmp
sahf
push
inc
mov
and
add
lds
or
mov
aam
out
sarl
cmpsb
dec
adc
mov
lods
sub
adc
jge
jbe
and
dec
mov
pop
pop
pop
leave
sub
lods
add
mov
pop
jbe
dec
cmp
add
xchg
fldl
icebp
inc
loop
sbb
xor
dec
test
hlt
xlat
cmp
shlb
add
push
pop
inc
lods
jle
inc
dec
insb
push
jmp
add
inc
mov
or
or
push
lock
or
xchg
icebp
daa
pop
and
mov
add
add
add
add
mov
xor
mov
insl
inc
sbb
add
aad
or
cs
jb
pop
dec
adc
aam
sub
arpl
fcomps
in
ret
insl
inc
adc
inc
shl
sti
and
dec
dec
bound
addr16
cmp
push
mov
fistl
mov
mov
enter
lods
cs
cmc
clc
adc
mov
iret
mov
outsl
sbb
jne
push
rorb
inc
pop
call
int3
ljmp
inc
lret
adc
push
mov
xor
sbb
incb
mov
and
xchg
mov
mov
cmp
outsl
mov
mov
or
add
add
add
adc
outsl
cli
or
push
cmp
mov
mov
add
pop
lret
cmp
imul
movsl
bound
dec
out
outsb
inc
mov
push
ret
mov
dec
xchg
mov
adcl
dec
adc
dec
inc
movsb
aas
sub
jp
mull
add
jno
xchg
std
int3
pusha
icebp
jb
fs
stos
fs
jb
or
or
fs
jb
fs
jb
bound
jb
bound
jb
bound
jb
fs
jb
fs
and
loopne
jecxz
mov
add
adc
adc
adc
adc
adc
adc
jb
adc
adc
adc
adc
fs
fwait
fs
xchg
fs
jb
popf
add
movb
mov
jo
mov
outsb
mov
jne
xchg
add
mov
add
into
add
mov
mov
jb
mov
jae
mov
jae
mov
jae
mov
add
mov
jb
popf
add
mov
add
mov
pop
lcall
cwtl
add
movb
js
data16
data16
shlb
jbe
sub
and
cmp
std
push
sub
push
ss
or
cmp
sti
push
ss
cli
cld
sub
or
and
add
add
add
add
adc
fstpl
or
xchg
sub
xlat
aam
push
into
lret
loope
jmp
lds
addr16
jno
out
icebp
inc
loope
out
inc
addr16
repz
out
jb
and
mov
sbb
inc
aaa
imul
jmp
add
sbb
dec
dec
xor
sub
and
or
data16
jnp
cmp
mov
or
mov
or
data16
mov
data16
data16
data16
data16
data16
data16
data16
data16
add
data16
add
daa
add
xchg
adc
or
push
sbb
lea
into
rorl
js
lahf
add
bound
bound
add
add
bound
jmp
bound
int
inc
jb
bound
bound
lea
mov
andl
xchg
outsb
jb
outsl
jb
fs
mov
fs
jb
fs
dec
fs
dec
outsb
add
fs
jb
fs
sub
imul
and
cmp
pop
add
push
add
pop
add
jno
pop
pop
add
pop
add
push
add
bound
jb
xchg
pusha
add
jge
xchg
xchg
add
lea
jb
fdivs
push
fistps
push
lea
add
add
add
push
jne
push
aam
hlt
icebp
mov
int3
les
mov
fdivrs
out
sarb
cmp
cmpsl
cmp
and
loopne
cmpsb
adc
es
sub
mov
lea
cmp
inc
jbe
out
shlb
lret
adc
outsb
or
clc
push
add
mov
loopne
add
mov
xor
sub
jmp
std
and
or
pop
and
insb
stos
jg
insb
in
mov
hlt
je
cmpsb
cld
xor
jl
jnp
lcall
jbe
ffree
das
aaa
cmpsl
cs
stos
lcall
xchg
mov
cwtl
cmp
popa
jns
scas
inc
mov
mov
add
add
add
add
clc
mov
mov
in
movsb
xchg
pushl
jno
cmpb
stos
lahf
cs
dec
cmc
cmovne
testb
lahf
ficomps
ficoms
mov
dec
jecxz
jae
inc
in
lret
ret
mov
data16
les
jb
add
bound
jb
popa
add
add
bound
add
popa
add
bound
jb
add
data16
bound
jb
add
data16
bound
jb
add
data16
add
add
arpl
jb
add
add
mov
inc
jb
clc
and
jb
mov
sbb
inc
jb
bound
jb
leave
leave
dec
sti
sub
icebp
in
sti
fstl
xabort
rolb
divl
mov
sar
divl
push
shlb
mov
mov
std
cwtl
idiv
pushf
lock
push
sarl
mov
aas
lret
push
push
mov
rcll
fcomp
mov
mov
int3
rorl
xor
mov
aaa
imul
adc
lret
add
add
add
add
mov
xor
mov
pop
xor
ljmp
sbb
push
mov
mov
mov
inc
jbe
mov
xor
loope
push
addr16
jb
mov
addb
dec
loope
adc
pusha
push
add
push
or
rorl
or
pop
das
xor
jg
xor
cli
dec
repnz
add
daa
clc
js
daa
aas
outsb
push
daa
rep
lods
daa
dec
outsb
cmp
es
outsb
cmp
es
outsb
inc
daa
insb
dec
in
jg
cmp
mov
cmc
ret
into
jae
inc
xor
jbe
add
das
sub
inc
sub
adc
leave
cwtl
inc
xor
adc
inc
add
adc
les
inc
jmp
adc
mov
inc
mov
adc
loopne
inc
mov
in
inc
fwait
pop
push
inc
push
in
inc
stos
xchg
js
mov
in
inc
int3
sbb
in
inc
fs
cmc
in
inc
jb
bound
jb
add
bound
jb
add
add
add
add
add
add
jb
cmpsb
decl
sahf
add
add
xchg
ljmp
add
lcall
or
in
jb
or
in
jb
fs
xchg
inc
jb
bound
jb
in
jb
fs
lahf
loop
jb
adc
loop
jb
fs
and
jb
push
add
mov
insl
mov
add
mov
jo
std
test
filds
outsb
icebp
test
cmp
add
test
mov
addr16
std
test
mov
test
sub
outsl
cmp
add
ja
push
jmp
add
aad
mov
insl
add
std
xorb
movsl
xorb
in
xorb
add
add
add
add
jmp
shll
data16
add
in
lock
data16
lock
adc
add
data16
lock
mov
fidivs
data16
add
test
add
data16
push
addr16
jno
push
icebp
push
addr16
jno
imul
xchg
jno
push
add
push
addr16
mov
push
addr16
mov
addr16
jno
pop
lock
add
les
aas
inc
daa
add
ret
imul
inc
daa
add
add
inc
daa
add
ret
je
popl
mov
aas
daa
add
ret
addr16
aas
daa
add
push
lahf
aas
daa
add
aas
daa
add
ret
insb
add
das
ret
bound
pop
aas
daa
add
add
ret
ds
add
ret
idivl
imul
ds
add
shll
ds
add
adc
out
inc
jb
bound
jb
out
inc
jb
arpl
jb
out
inc
jb
adc
loope
jb
bound
jb
filds
cmp
jb
loope
jb
adc
jb
loope
jb
bound
jb
loope
jb
sbb
loope
jb
arpl
jb
loopne
jb
bound
jb
loopne
jb
fs
push
loope
jb
fs
imul
jb
arpl
jb
loope
jb
fs
jb
loope
jb
leave
add
mov
addr16
lods
test
movsl
test
cltd
test
xor
and
imul
test
add
or
add
popl
je
dec
test
outsb
add
push
test
jp
jo
push
test
jmp
test
and
mov
popa
test
movb
jne
mov
add
mov
mov
data16
add
addr16
add
data16
add
sbb
jcxz
lret
icebp
add
adc
add
leavew
lock
shl
and
data16
add
imul
outsb
jbe
data16
add
data16
in
loopne
lret
icebp
add
push
icebp
push
cwtd
add
push
addr16
lret
mov
add
add
dec
daa
add
enter
dec
daa
add
and
add
movl
ss
and
add
popa
add
daa
add
enter
pop
daa
add
insl
add
pusha
add
daa
add
popa
add
daa
add
arpl
repz
daa
add
mov
pop
daa
add
pop
add
pop
daa
add
and
add
pusha
add
and
add
bound
jb
sbb
or
sbb
add
jne
inc
jb
or
sbb
push
jb
sbb
add
adc
bound
jb
sbb
dec
arpl
jb
sbb
jb
arpl
add
sbb
xchg
fs
jb
sbb
pop
or
sbb
xor
jb
sbb
xchg
fs
insl
sbb
mov
cmp
fs
negl
inc
jb
cwtl
add
in
jge
incl
js
in
mov
insl
add
adc
std
add
jge
fldl
outsl
loope
mov
mov
jge
mov
xchg
add
adc
mov
jge
adc
add
popf
jl
sbb
outsl
insl
jge
movb
pop
jne
xor
movl
xor
addb
in
jl
in
in
xor
movl
mov
data16
data16
addr16
outsb
icebp
data16
push
addr16
outsb
mov
addr16
add
mov
data16
rorw
loope
xchg
outsb
mov
popaw
outsb
shll
loope
dec
outsb
ljmp
outsb
int3
popaw
leave
loopne
sbb
fchs
dec
outsb
lret
leave
loopne
mov
cltd
loopne
push
outsb
mov
jne
loopne
iret
jno
xor
shlb
mov
data16
je
add
ret
js
dec
lods
pop
add
ret
push
add
pop
add
les
jnp
pop
add
scas
pop
add
ret
push
pop
scas
pop
add
les
outsl
scas
pop
add
jb
xchg
cmpsl
pop
add
bound
dec
cmpsl
pop
add
les
aaa
cmpsl
pop
add
bound
jmp
pusha
add
cmpsl
pop
add
les
das
cmpsl
pop
add
push
ret
pusha
add
pop
add
ret
bound
inc
cmpsl
pop
add
fs
jb
jg
jb
adc
jg
jb
sbb
cmpl
jb
cmpl
jb
jg
jb
arpl
jb
arpl
jb
jg
jb
arpl
jb
cmpb
arpl
cmpb
or
jb
cmpb
cmp
add
add
add
add
add
cmpb
jne
add
imul
aas
jb
bound
lea
push
jb
cmpb
pop
add
in
inc
int3
add
xor
add
insl
out
mov
ja
es
pop
in
cmp
dec
in
xor
movb
jne
push
fwait
add
fucom
inc
sub
imul
int3
add
jmp
add
adc
add
movb
outsb
popf
xorl
cmp
test
sub
cwtd
icebp
push
addr16
jno
mov
addr16
jno
cwtd
icebp
push
addr16
jno
data16
add
popaw
icebp
add
add
add
add
add
data16
add
test
add
lods
out
add
data16
out
add
xchg
out
add
in
add
data16
add
data16
addr16
jbe
movsw
out
add
mov
add
push
add
enter
inc
daa
add
push
add
inc
daa
add
enter
inc
daa
add
insl
add
ret
fwait
inc
daa
add
add
inc
daa
add
add
inc
daa
add
enter
enter
das
sub
push
xchg
dec
shlb
and
inc
adc
cwtl
push
sbbl
out
push
sbb
mov
add
add
xchg
xor
pushf
xchg
ss
push
sub
dec
fdivs
jg
shll
orl
inc
and
lcall
sub
or
insb
mov
dec
je
mov
sub
adcb
pushf
orb
push
jp
arpl
mov
test
int3
notb
mov
pushf
cmpsb
pop
movb
or
cltd
jb
add
jb
mov
loope
mov
sti
nop
movsb
mov
into
or
adcl
mov
mov
mov
push
out
inc
push
scas
xlat
jns
mov
and
sahf
xlat
jns
xchg
dec
cmp
das
hlt
mov
inc
testl
aad
adc
aad
adc
aad
adc
pop
in
inc
call
cmp
sbb
into
add
imul
js
mov
mov
shlb
pop
cmpsb
rolb
shlb
jp
push
add
adc
add
push
xchg
in
mov
sbb
ficompl
lret
mov
stos
bound
push
inc
gs
push
sbb
fs
pop
jge
dec
push
ds
add
add
push
repnz
mov
fwait
movsb
and
jb
and
mov
gs
dec
push
jge
cmp
mov
jge
pop
push
movsl
jnp
nop
loopne
sbb
testl
lret
das
loop
xorl
ss
cmp
ja
or
cmpsl
mov
ss
test
push
pop
ret
dec
add
cmp
add
std
setns
xchg
scas
push
ja
jp
aaa
mov
aaa
daa
neg
jmp
nop
repz
push
jge
adc
mov
mov
aaa
divl
fidivl
xlat
mov
aaa
divl
dec
mov
fldl
sub
out
push
shl
jmp
dec
dec
add
jp
mov
jp
mov
jl
and
sbb
rolb
push
adc
cli
xor
lret
in
stos
xchg
sub
jg
aas
push
jg
cmpsl
sbb
lahf
inc
jg
cmpsl
sub
lahf
das
stos
rclb
fnsave
clc
pushf
or
repnz
cli
addb
cs
inc
lcall
test
jb
add
xor
movb
mov
ja
xchg
xor
fs
add
in
aam
mov
push
mov
dec
push
sahf
iret
push
push
xchg
iret
pop
push
sahf
iret
and
mov
fiaddl
push
addr16
inc
jns
popf
xchg
es
xchg
lock
sbb
orl
adc
fucom
adc
fisttpll
adc
push
ficomps
add
pushf
jnp
xor
or
pusha
mov
lea
cmpsb
or
cs
lret
add
pop
std
imul
pop
sub
mov
pop
ds
cmc
inc
std
shlb
sbb
mov
xchg
sbb
push
and
sub
stos
pop
cmp
jns
pop
in
js
pop
aad
rcrb
and
popl
sub
xchg
cmp
movsl
add
lret
out
lods
pop
insl
js
pop
push
push
pop
pop
movsl
pop
mov
push
mov
popa
out
flds
dec
cmc
rclb
bound
sbb
pop
mov
cmp
xor
cmpsl
mov
cmp
mov
cmp
loop
inc
mov
cmp
mov
cmp
mov
cmp
xchg
cmp
xchg
cmp
mov
cmp
mov
cmp
jns
cmp
sbb
sbb
mov
lahf
sub
outsb
imul
loopne
leave
dec
sub
dec
aaa
std
cs
lret
jb
mov
test
jns
push
add
jl
jle
inc
in
jle
ds
jle
ss
inc
add
dec
outsl
fdiv
mov
mov
into
ja
and
push
data16
cld
andb
in
inc
out
or
jae
rcr
test
fwait
js
data16
jmp
pop
aas
mov
aas
push
mov
pop
mov
in
shll
jns
shlb
mov
stos
jbe
or
clc
jge
mov
sbb
and
mov
movsb
icebp
sbb
add
and
inc
adc
psubsw
ret
gs
push
fbld
lret
jmp
sahf
xchg
out
in
popf
std
stos
xor
aam
aam
xchg
mov
mov
mov
bound
incl
and
jns
int
and
pop
add
sub
addr16
mov
xor
lods
stc
jg
test
mov
out
mov
repz
sub
aas
lds
lret
cmp
lods
mov
cld
sbb
inc
mov
inc
insb
fidivs
xchg
xor
and
out
mov
ss
addb
inc
lahf
add
rclb
or
cli
jg
mov
out
lea
push
hlt
cmp
cmpsb
add
xor
cmpsb
pop
dec
mov
push
pop
stc
mov
iret
je
xchg
or
hlt
jp
fsubl
shlb
int
mov
cmpsb
ficomps
push
pusha
in
and
gs
std
add
dec
sbb
ret
inc
popf
pusha
dec
shl
jbe
out
insb
push
fs
xor
mov
push
les
and
roll
xor
ds
mov
rorb
fbstp
lahf
sahf
mov
xchg
mov
jb
dec
or
add
xor
das
push
nop
jns
add
or
add
add
add
jb
add
arpl
jb
add
add
add
add
add
add
add
add
inc
add
inc
es
popf
sub
dec
jb,pn
jae
inc
cltd
ja
cmp
popf
add
in
and
loopne
daa
out
lret
sbb
call
ret
adc
sarb
mov
out
sub
fisttps
sbb
xchg
pop
roll
pop
push
fstpt
dec
add
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
jmpw
jmpw
add
add
add
add
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
data16
inc
lea
xchg
inc
lea
xchg
lea
jbe
lea
data16
add
add
add
add
cwtl
pop
lea
dec
lea
add
rclb
xchg
mov
incl
jmp
pushl
incl
incl
incl
call
insl
or
incl
xchg
jmp
xchg
pushl
xchg
inc
clc
xchg
inc
clc
xchg
inc
clc
xchg
fcmovne
data16
fcmovne
data16
enter
enter
enter
enter
enter
enter
enter
enter
lahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
add
add
add
add
add
add
add
xor
call
cmp
decl
add
add
add
add
lea
movl
add
hlt
arpl
mov
pop
scas
test
and
out
sub
add
add
add
add
fcmovnu
adc
xlat
rcrl
test
aad
js
leave
adc
jecxz
daa
and
xchg
and
fisttpl
sbb
adcl
xlat
xchg
push
lret
jnp
imul
push
and
dec
pop
lcall
pop
xchg
inc
adc
test
sbb
mov
inc
in
cmc
inc
loopne
sbb
pop
add
cmp
push
add
xor
dec
clc
dec
adc
inc
adc
pop
int3
cmp
loope
aam
in
shlb
jmp
dec
fsubrs
mov
mov
popf
dec
js
cltd
inc
je
xchg
inc
jo
xchg
dec
insb
mov
mov
test
cmp
add
dec
hlt
xchg
repz
lock
testl
cwtl
lcall
shlb
mov
scas
mov
stos
xchg
jbe
cmpsl
nop
jb
mov
cwtl
jp
cmp
inc
and
loopne
daa
xor
das
or
aaa
add
aas
pop
mov
add
imul
dec
cmpsl
or
jae
jae
inc
outsl
adc
jnp
pop
jg
cmp
andl
xchg
jg
inc
jb
stos
movsl
dec
xor
mov
push
sbb
fwait
mov
and
and
xchg
sbb
cmc
out
adc
or
add
add
cmpsb
or
lret
adc
sar
mov
std
aad
mov
in
and
xor
sub
sub
into
xor
xor
sbb
cmp
shlb
out
fcomps
push
push
rclb
dec
test
or
xchg
add
lea
jb
lea
jb
lea
jb
lea
jb
lea
add
lea
jb
lea
jb
lea
push
ret
out
add
out
jb
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
lea
adc
lea
jb
lea
jb
lea
jb
jmpw
jmpw
jmpw
jmpw
xchg
aas
xchg
jno
jmpw
jmpw
jmpw
jmpw
add
add
add
add
jmpw
jmpw
jmpw
dec
aaa
xchg
jno
jmpw
jmpw
jmpw
jmpw
jmpw
fs
mov
test
jno
jmpw
jmpw
jmpw
jmpw
data16
test
add
lret
or
data16
leave
data16
leave
data16
lret
leave
data16
adc
push
adc
add
leave
data16
leave
data16
adc
lcall
js
leave
data16
leave
data16
data16
data16
data16
data16
add
data16
leave
data16
leave
data16
or
data16
arpl
jb
arpl
jb
add
add
add
add
add
bound
jb
loop
repnz
xorb
sbb
sbbb
fwait
cmp
outsb
fs
outsb
mov
js
mov
pusha
adcl
adc
xchg
adc
in
bound
js
mov
add
xchg
adc
xchg
adc
xchg
adc
xchg
adc
in
bound
jb
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
lea
add
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
jmpw
jmpw
jmpw
data16
pop
addr16
pop
pop
addr16
lds
mov
addr16
addr16
loopne
cwtl
lods
push
sbbb
add
add
add
addr16
pop
push
mov
addr16
mov
pop
addr16
dec
data16
pop
loopnew
data16
pop
repz
add
push
jp
addr16
pusha
sbbb
pop
data16
add
data16
fisubs
add
fs
fisubs
add
lods
add
lods
add
sbb
add
stos
add
and
xlat
stos
add
and
stos
add
and
xchg
stos
add
and
les
and
jae
add
fldenv
add
fbld
add
fbld
add
cwtl
jg
and
outsl
jne
lcall
jp
cmp
imul
add
sub
cwtl
inc
add
jo
jb
inc
add
jle
jb
inc
add
jle
jb
inc
add
jg
jb
inc
add
jg
jb
xchg
dec
xor
jb
xchg
mov
xchg
xchg
ljmp
nop
xchg
lcall
xlat
inc
add
jle
jb
inc
add
jle
jb
inc
add
jg
add
inc
add
jg
jb
mov
jae
adc
mov
mov
sbb
xor
mov
mov
sbb
adc
mov
jle
jb
adc
mov
fwait
and
xor
xor
pushf
and
xor
xor
mov
pop
xor
mov
pop
xor
xlat
hlt
lods
jg
adc
add
movb
jg
adc
jge
jp
xor
arpl
insl
jg
adc
data16
sbb
inc
jg
sub
inc
jg
sbb
es
sub
es
sbb
push
lds
push
sub
data16
add
nop
lds
mov
sub
push
add
addr16
push
addr16
lds
pop
add
push
lds
mov
addr16
lds
jp
addr16
lds
push
addr16
data16
add
and
and
adc
and
pop
test
add
test
add
cmpsl
add
cmpsl
add
dec
test
add
and
cmp
and
mov
and
js
add
aad
add
aad
add
add
aad
add
aad
add
add
aad
add
aam
add
inc
add
outsl
inc
jb
inc
add
jo
jb
inc
add
jo
jb
inc
add
jb
outsl
inc
jb
inc
add
outsl
inc
jb
inc
add
jo
jb
inc
add
jo
jb
addl
jb
addl
jb
addl
jb
addl
jb
addb
repnz
inc
jb
addb
repnz
inc
jb
addb
adc
add
xchg
inc
jb
mov
jb
adc
add
cmpsb
in
adc
mov
mov
jb
xor
mov
movsb
in
xor
mov
icebp
in
adc
mov
loop
jb
adc
mov
out
in
xor
mov
loopne
jb
xor
mov
cmp
out
mov
divl
adc
xor
pop
divl
xor
xor
pop
divl
xor
xor
jns
jb
adc
xor
jp
add
adc
xor
xchg
in
xor
xor
data16
or
pop
sub
rcrb
sbb
addr16
jle
sub
addr16
sbb
movsl
pop
sub
addr16
pop
sbb
xchg
push
or
push
sbb
lret
add
addr16
add
pop
addr16
push
loop
addr16
lret
ret
insl
mov
pop
insb
mov
pop
add
jae
add
and
add
jbe
add
jae
add
jbe
add
jae
add
jbe
add
jno
add
jbe
add
jno
add
jno
add
jbe
add
jno
add
popf
jno
add
jbe
add
and
add
arpl
imul
imul
add
add
and
add
xchg
sbb
inc
jb
addb
adc
add
xchg
testb
jb
addl
add
add
add
mov
adc
add
mov
inc
addb
xacquire
repnz
jb
addl
jb
addb
adc
std
icebp
xchg
inc
jb
test
in
icebp
xchg
inc
jb
test
fstl
xchg
inc
jb
test
jb
xchg
inc
jb
sub
jb
adc
xor
sub
jb
adc
xor
daa
adc
add
sub
xor
cmc
loop
js
lock
out
insl
js
lock
repz
js
lock
in
jb
xor
mov
xor
jb
adc
mov
and
jb
adc
mov
das
loop
xor
mov
and
jb
xor
mov
std
loope
adc
mov
loope
adc
xor
sbb
jb
xor
xor
data16
rol
push
aad
addr16
rol
data16
add
pop
xchg
data16
add
aas
xchg
push
test
ds
push
xchg
add
mov
xchg
nop
xchg
sbb
andl
push
inc
add
jb
push
push
add
gs
data16
add
push
adc
data16
add
inc
adc
push
add
push
add
data16
add
test
lds
loop
add
add
add
add
add
jne
add
jbe
add
je
add
jbe
add
je
add
jbe
add
arpl
push
jbe
add
cwtl
jne
add
jbe
add
jbe
add
jbe
add
xchg
mov
push
and
mov
push
and
add
arpl
add
xchg
push
xchg
jb
mov
push
xchg
jb
mov
xor
inc
jb
xchg
jb
xchg
push
xchg
jb
mov
push
xchg
jb
mov
pop
xchg
add
xchg
mov
add
xchg
test
mov
fadds
inc
jb
xchg
jb
xchg
mov
xchg
lods
test
jb
mov
faddl
inc
jb
lods
out
adc
xor
scas
out
adc
xor
stos
out
xor
xor
lods
out
xor
xor
jmp
call
add
add
add
ljmp
out
jb
xor
xor
call
call
jb
adc
mov
es
adc
mov
xor
jb
xor
mov
and
jb
xor
mov
jno
jb
adc
mov
out
adc
mov
outsl
out
xor
mov
pushw
or
push
or
fstps
lods
fisttpl
fadds
iret
data16
or
iret
push
aad
addr16
aad
addr16
iret
data16
or
pop
data16
or
pop
push
xchg
or
pop
push
xchg
or
pop
data16
or
dec
data16
or
dec
push
push
or
dec
push
push
or
dec
data16
or
shufps
adc
imul
cld
data16
and
add
data16
data16
xchg
cwtl
dec
data16
data16
data16
data16
data16
data16
data16
cwtl
lcall
add
add
dec
lds
pop
lds
pop
lds
dec
lds
dec
lds
sbb
add
add
add
add
add
add
add
add
add
cwtl
add
cwtl
add
cwtl
add
cwtl
add
cwtl
add
cwtl
add
cwtl
add
cwtl
add
cwtl
add
cwtl
add
cwtl
add
jbe
cwtl
add
cwtl
add
cwtl
add
cwtl
add
cwtl
add
add
add
add
add
add
add
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
lea
jb
loope
adc
xor
mov
jb
xor
add
mov
jb
xor
xor
mov
jb
adc
xor
mov
popf
jo
call
lea
call
jb
xor
xor
mov
adc
mov
test
jb
adc
mov
xchg
loope
xor
mov
data16
push
dec
add
data16
add
cwtl
je
add
cwtl
push
sbb
add
add
add
add
push
or
data16
add
stc
rol
data16
add
fcom
push
int
addr16
push
int
addr16
xchg
data16
add
std
xchg
outsl
cwtl
je
add
faddl
add
fbld
push
lea
incb
add
icebp
push
data16
add
add
add
add
add
sahf
addr16
add
gs
lcall
jbe
lcall
fisubl
sahf
addr16
add
and
add
and
add
pop
and
add
pop
and
add
pop
and
lcall
pop
and
lcall
pop
and
add
addr16
add
add
add
jl
data16
pop
and
add
mov
test
jb
popl
leave
test
jb
popl
cwtl
xchg
jb
mov
addl
jb
mov
add
test
jb
jg
jb
jae
jb
jg
jb
test
jb
jg
jb
xchg
jb
addb
xchg
jb
addb
xchg
add
jg
jb
xchg
xchg
bnd
jb
mov
test
addb
jne
jb
addb
js
jb
adc
mov
jne
jb
adc
mov
data16
xor
mov
xchg
loope
xor
mov
test
jb
adc
mov
mov
adc
mov
out
iret
adc
add
adc
add
dec
adc
xor
dec
adc
xor
dec
adc
xor
dec
adc
xor
dec
adc
xor
dec
adc
xor
data16
pop
push
push
or
jle
data16
or
jle
data16
or
pop
push
push
or
pop
push
adc
addr16
data16
or
add
data16
or
pop
push
adc
cmpsl
pop
push
rorb
addr16
data16
or
jg
data16
or
pop
push
popf
or
pop
push
int
cmp
data16
or
jg
data16
or
shlw
mov
add
mov
add
mov
add
mov
add
shll
mov
add
shll
xchg
data16
shll
inc
mov
add
and
add
and
add
and
add
and
add
and
mov
mov
add
jae
jb
mov
jb
jae
jb
xchg
js
add
xchg
xchg
inc
jb
scas
add
xchg
test
inc
jb
xchg
add
xchg
inc
jne
jb
xchg
push
jne
jb
xchg
inc
jne
jb
xchg
adc
repnz
jb
orl
jb
orb
jb
mov
fnstcw
out
aaa
fidivs
jns
jge
daa
fidivs
lcall
xchg
in
movb
mov
fidivs
out
mov
cmpsb
in
pop
fidivs
movb
mov
in
aaa
fidivs
daa
fidivs
push
fiadds
mov
pmulhw
inc
fidivs
movb
insl
mul
xor
or
loopne
push
jb
xor
xor
imul
addr16
lds
xchg
add
nop
lds
xchg
add
nop
lds
xchg
add
push
push
push
add
data16
add
data16
add
push
push
add
add
add
add
add
push
adc
data16
add
data16
add
push
adc
push
rolb
jbe
data16
add
jns
data16
add
add
shlb
push
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
shlb
fiadds
data16
shlb
sahf
xchg
movsbl
data16
shlb
jle
and
add
shlb
xchg
add
and
jmp
xchg
ds
call
xchg
cmp
inc
add
pushl
xchg
stc
jae
jb
xchg
cli
jae
jb
xchg
adc
xchg
push
je
jb
xchg
inc
test
inc
fildl
pushl
dec
je
jb
xchg
clc
jae
jb
xchg
or
fiaddl
add
xchg
or
xchg
lock
jb
adc
xor
std
loope
gs
xor
push
loope
gs
xor
sbb
movsl
gs
xor
cmp
xchg
gs
xor
cmp
test
fbstp
pop
loope
gs
mov
push
loope
gs
mov
clc
loope
gs
mov
cmc
testb
fbstp
gs
mov
adc
and
movb
gs
add
gs
mov
and
cmc
fs
xor
data16
fsubl
mov
fs
je
pop
addr16
lcall
push
lret
stos
popf
fs
push
mov
data16
pop
lods
mov
data16
pop
lods
mov
push
dec
or
pop
gs
cmp
addr16
bound
and
xor
sbb
xor
push
dec
or
sbb
or
jg
jbe
sub
addr16
sbb
add
cmovbe
add
jle
add
data16
and
add
and
add
and
add
and
add
jnp
add
imul
add
push
jnp
add
imul
add
jl
add
and
add
jnp
add
jnp
add
jnp
add
jnp
add
addl
jb
addl
jb
addl
jb
addl
jb
orl
add
orl
jb
orl
jb
orl
jb
cmp
jb
cmp
jb
cmp
jb
cmp
jb
mov
jb
mov
cli
mov
ljmp
mov
out
aaa
xlat
mov
popa
adc
adc
mov
jb
add
xor
xor
pop
adc
xor
xor
mov
jb
adc
xor
mov
xor
ficoms
jb
leave
fnstenv
fistl
jb
add
adc
adc
adc
adc
xor
sbb
jb
xor
mov
pop
add
scas
fdivs
stos
fdivs
adc
mov
adc
xor
add
push
cmp
data16
add
adc
sbb
push
mov
lds
mov
data16
jmpw
callw
gs
jbe
gs
jbe
gs
jae
gs
les
les
les
add
jmp
les
lret
jae
fs
jae
fs
les
pop
pusha
data16
pusha
add
lret
add
movl
sbb
arpl
or
arpl
or
arpl
fadd
arpl
lret
add
les
fcmovb
gs
les
lret
das
push
sbb
das
push
sbb
add
mov
mov
ret
add
ret
data16
ret
push
add
data16
or
pop
ret
data16
jmp
daa
add
fs
outsb
jb
fs
jb
xor
bound
fs
jb
add
jae
inc
lock
outsb
pusha
cmp
jae
push
repnz
pop
and
movb
add
add
add
dec
insl
add
divl
push
jmp
clc
outsb
and
ret
jae
adc
inc
sbb
idiv
lea
pop
inc
jb
pop
inc
jb
pop
inc
jb
pop
inc
jb
pop
inc
jb
pop
inc
jb
pop
inc
jb
pop
inc
jb
cmp
mov
fnstsw
mov
roll
cld
add
leave
add
cld
add
mov
add
mov
movsb
fildl
cmp
clc
add
lds
cltd
aam
cltd
stc
add
and
xor
push
and
movb
xor
sub
xor
jns
xor
das
and
mov
sbb
jnp
xor
add
xor
popa
sbb
sti
dec
mov
js
mov
and
addr16
imul
lds
pop
push
add
addr16
testl
inc
jmp
divl
leave
jno
data16
jno
shlw
jmpw
data16
push
addr16
push
push
addr16
popa
pop
addr16
enter
mov
add
addr16
push
push
addr16
cltd
add
mov
addr16
push
addr16
add
and
add
data16
xor
jp
movq
and
lcall
enter
bound
add
and
add
imul
call
push
daa
add
push
daa
add
and
add
imul
int3
insb
daa
add
push
daa
add
pop
ret
cmp
adc
push
ret
das
ret
push
ret
jne
pop
add
ret
jb
bound
pop
fs
mov
popa
jb
imul
add
fs
jb
fs
xchg
test
jbe
insb
jb
fs
jb
fs
fs
jb
xor
fs
mov
jno
js
jb
fs
jb
lods
inc
jb
lock
jb
scas
inc
jb
stos
inc
jb
stos
inc
jb
lods
inc
jb
sti
inc
jb
jae
push
xchg
cs
jo
adc
adc
vpcmpgtd
mov
nop
cwtl
xchg
data16
test
mov
test
imul
jb
enter
add
add
add
add
scas
add
roll
in
add
lea
jb
jmp
add
loope
push
push
add
cs
and
repz
jmp
cmpsl
xor
cli
lods
xor
lretw
addr16
jno
fnstenvs
data16
jmpw
jmpw
jmpw
add
add
add
add
data16
add
fildl
addr16
add
adc
sub
add
cwtd
and
xor
jno
data16
xor
data16
hlt
ss
push
jmp
push
in
jns
test
adc
jbe
data16
aam
ds
inc
add
or
mov
add
dec
xor
insl
inc
sub
addr16
cwtl
incl
popa
jb
xor
xor
outsb
sub
pop
movd
add
add
les
rorb
sbb
data16
ret
add
inc
add
sub
ss
ret
or
add
ret
add
in
ret
add
fcmovnb
data16
ret
add
lret
ret
data16
push
add
out
ret
or
daa
ret
pop
ret
jb
arpl
bound
jb
stos
inc
setno
inc
adc
popf
shll
add
add
add
add
add
add
fs
lret
jb
bound
mov
add
bound
ret
jb
fs
insl
add
jb
or
jb
or
pop
xchg
push
inc
jo
add
pusha
pop
aas
test
jb
bound
jno
xchg
mov
mov
lock
popf
add
adc
jmp
jge
inc
or
hlt
sbb
jb
aam
push
push
cmc
xor
ret
adc
inc
pop
adc
sub
adc
cmp
and
add
and
cmp
push
inc
inc
mov
test
sub
jne
es
push
push
pop
dec
iret
das
inc
xlat
pop
mov
jb
fdivp
fs
data16
push
cwtl
xchg
data16
mov
jmp
sahf
mov
loop
lret
das
hlt
mov
mov
inc
pop
ffree
add
pushf
mov
data16
cld
xor
cmp
pop
and
or
and
mov
dec
lret
cmp
jmp
lahf
inc
out
push
cmpsb
inc
idivl
sub
pusha
cltd
lods
ljmp
hlt
mov
arpl
jecxz
cmp
mov
jp
scas
jle
push
lds
cwtl
jmp
std
cmpsb
mov
nop
stos
orb
shr
loopne
xlat
fstl
lock
test
and
mov
cld
cmpsb
lock
ret
add
fstp
mov
xlat
testb
jbe
adc
insb
inc
sub
enter
inc
ret
inc
ljmp
enter
ror
mov
add
test
jo
test
xchg
adc
sbb
cmp
test
add
sahf
add
add
in
xchg
mov
sub
movsl
pop
add
push
fstl
push
popf
pop
jmp
mov
add
dec
lret
cmp
sub
jb
xchg
maxps
add
into
xor
dec
testb
add
add
add
add
std
dec
jmp
or
inc
loope
add
test
aaa
les
imull
enter
les
add
in
rclb
dec
ret
inc
ret
pop
leave
jno
dec
std
sub
push
mov
std
mov
jle
cmp
xor
xor
mov
dec
clc
mov
inc
or
add
add
add
cmp
and
pop
dec
inc
es
inc
adc
repnz
addl
adc
hlt
xor
cmp
sbb
stc
orl
or
data16
push
aam
jl
xchg
add
faddl
sub
push
es
jno
data16
mov
pop
push
pusha
test
data16
pop
push
call
xchg
jle
xchg
xchg
inc
jmp
pop
ret
xchg
push
int3
inc
lock
ja
outsb
stos
dec
out
mov
pushf
jl
pop
test
dec
test
in
lds
cmp
cwtl
cld
jge
xchg
imull
out
jo
fwait
lahf
inc
fisttpll
cmpsb
outsl
lods
and
add
add
add
xchg
sbb
fists
daa
repz
fidivl
pop
ffree
mov
lock
jecxz
icebp
mov
jo
adc
data16
pop
dec
xor
push
js
add
mov
inc
add
cmp
shll
mov
cmp
mov
add
pop
add
xchg
pop
orb
pop
aaa
fwait
or
test
adcb
or
test
jp
mov
lods
fists
fwait
add
pop
repz
popf
rcl
mov
inc
add
loop
add
cltd
or
imul
or
jg
xor
lea
add
add
add
lea
jb
lea
jb
inc
cmp
arpl
or
jl
jge,pn
dec
enter
mov
and
int3
pop
dec
cmp
jae
inc
mov
ja
inc
test
ss
inc
mov
xlat
xor
sahf
push
out
ss
pop
push
fimull
in
imul
in
push
arpl
add
add
add
sub
loope
out
pop
fdivs
repz
notb
dec
popa
xchg
ret
fstl
mov
inc
cltd
dec
push
xor
mov
cli
push
mov
xor
or
ja
sub
pusha
ljmp
jle
push
aas
leave
mov
sbb
mov
enter
mov
data16
jae
jl
add
adc
cli
jbe
imul
lods
jno
jbe
push
in
outsl
lret
dec
loop
cmpsl
inc
ret
push
mov
idivb
test
cmp
popa
xchg
jl
leave
data16
mov
pop
add
xchg
les
insl
test
inc
adc
push
mov
pop
out
sub
add
in
mov
lcall
data16
xchg
mov
fmuls
xchg
clc
lods
mov
lock
scas
mov
call
xor
and
das
push
inc
shrl
sbb
daa
pop
add
add
icebp
ss
jb
aas
mov
add
inc
sub
lds
add
enter
xchg
outsl
jbe
xchg
jnp
push
sbb
mov
push
jb
jmp
mul
or
push
out
jmp
repz
sub
loop
icebp
lret
jb
xor
movsb
shl
stos
leave
cmc
daa
stos
sub
add
pop
adc
cmp
sbb
adcl
add
add
add
add
sub
jb
pop
test
xlat
push
push
mov
lea
jb
mov
xchg
fcmovb
mov
cmc
lods
mov
mov
roll
jb
push
or
pop
and
cmp
jno
add
arpl
pop
push
xor
subl
jb
push
mov
sub
call
insl
add
aas
cmp
sti
and
repz
loopne
mov
xor
jg
pop
lods
mov
jbe
xchg
outsb
andw
lods
jb
bound
mov
cmp
inc
rorl
mov
into
adcl
aad
mov
jno
movsb
sahf
dec
cwtl
pop
cmp
add
add
add
inc
ja
sub
inc
in
jno
popw
mov
les
jno
popw
mov
and
outsb
cmp
data16
xchg
test
fildl
cmpsl
data16
shr
add
das
inc
insb
jg
inc
xchg
jg
pop
mov
popf
out
mov
data16
fucomi
lcall
data16
xor
or
data16
out
jne
mov
imul
jge
int3
pop
cwtl
pushl
inc
loope
push
inc
inc
jge
testb
mov
adcb
xchg
mov
add
jb
xchg
mov
outsb
or
jb
sub
adc
pop
add
sbb
bound
jb
mov
jbe
adc
add
add
add
and
pop
add
push
fwait
or
dec
hlt
push
aam
lahf
bound
jb
mov
and
jge
add
lock
in
insb
cmp
arpl
jb
dec
popf
flds
add
sub
adc
sub
stc
enter
int
xchg
scas
fbld
xchg
jmp
push
xchg
add
dec
add
pop
mov
jmp
stos
mov
lea
jb
je,pt
sub
xchg
dec
stos
mov
pop
mov
or
hlt
iret
in
jne
lea
jb
imul
push
movb
cs
mov
fmul
cmp
ret
lock
jb
pop
pop
mov
jge
add
cwtl
sahf
add
mov
mov
jbe
mov
lods
xchg
lods
or
jg
pushfw
mov
pop
xchg
mov
scas
inc
mov
mov
scas
lcall
xchg
outsl
js
addr16
in
mov
pop
inc
xchg
xchg
jmp
inc
cwtl
adc
or
cmp
jbe
push
and
jb
dec
fildl
daa
pushf
rorb
fwait
leave
data16
mov
add
in
jg
xchg
outsb
add
sbb
cmp
xchg
pop
repz
rorb
data16
push
adc
cs
adc
jnp
and
insb
adc
data16
cwtl
in
shrb
add
add
add
add
ret
mov
mov
add
rorb
ret
mov
int3
xchg
data16
scas
aaa
sub
cltd
adc
jb
loopne
repz
in
loop
push
xchg
out
lods
sbb
rcll
rcrb
xor
add
int3
inc
mov
fisubs
jb
jae
push
pop
inc
lock
pop
jge
add
pop
fisubrl
sub
fs
scas
aam
add
and
xor
dec
mov
gs
adc
pop
dec
inc
mov
xor
cld
or
lret
dec
out
xchg
sub
mov
xchg
dec
mov
cmpsb
movsl
push
cmpsb
mov
add
jo
sahf
in
jle
push
std
sbb
out
inc
add
add
add
add
loop
cmp
sbb
insb
or
repz
xor
daa
cmp
cmp
sbb
cs
pop
imul
jbe
jp
pop
rol
inc
xchg
mov
stos
mov
mov
cltd
hlt
arpl
pushf
jns
xchg
sti
test
data16
loopne
jmp
and
je
jo
jno
jge
inc
sub
daa
mov
popa
enter
mov
mov
pop
jmp
lea
dec
xor
cmp
jbe
mov
cmpsb
mov
xchg
scas
test
data16
push
add
adc
push
fists
jmp
inc
add
jl
xchg
xchg
jno
ja
imul
cmpsb
add
in
add
jns
push
adc
pusha
and
and
push
or
jl
in
push
fistps
repnz
cli
data16
fnstcw
loope
cmpsb
add
xlat
or
mov
xor
mov
lret
test
add
mov
mov
mov
add
cwtl
xchg
sbb
data16
outsb
sbb
xchg
push
gs
das
cltd
sbb
dec
adc
cld
dec
sbb
stc
inc
add
out
lods
xor
jb
xor
pop
mov
fsubl
mov
dec
sbb
jb
int
add
fcmovne
push
fucom
mov
dec
add
and
xchg
loop
sbb
ljmp
nop
in
cwtl
es
xchg
or
pushf
push
cmp
popa
add
es
cs
je
das
xchg
test
push
jge
pop
sbb
pop
jns
jb
push
xor
js
inc
out
pop
sub
ss
in
dec
addl
mull
jbe
pop
out
fisttps
fildl
push
push
inc
inc
sbb
dec
and
pusha
push
jns
pop
or
adc
jb
pop
mov
sahf
push
mov
aas
xor
adc
cmp
addr16
arpl
clc
jmp
stos
data16
std
fnstenv
jno
and
mov
imul
inc
push
dec
in
xor
mov
data16
cmpsl
cmp
data16
jmp
cs
notb
and
mov
rcrb
mov
jmpw
jno
push
mov
jp
ds
inc
inc
loopne
arpl
jno
data16
push
in
mov
and
add
mov
add
push
add
lret
es
adc
add
add
add
lret
mov
lret
cmp
mov
sahf
fimull
add
xchg
iret
mov
sbb
add
adc
jp
mov
mov
data16
dec
sbb
leave
data16
mov
mov
xchg
sahf
repz
and
jmp
aas
xchg
out
dec
leave
data16
mov
fistps
xor
add
add
add
add
dec
cwtl
in
outsl
dec
faddl
imul
in
cs
lds
ret
jb
sbb
repz
push
add
in
jns
or
fs
cmp
jl
pop
std
xor
push
call
dec
dec
outsb
fiaddl
pop
fstpt
push
roll
arpl
sub
ds
and
add
jb
mov
dec
arpl
jb
shrl
inc
jbe
mov
cmp
cmp
in
imul
sub
in
je
aad
jo
xchg
loopne
xor
in
out
pop
fcoml
mov
jb
inc
leave
ljmp
int3
out
pop
inc
mov
or
popf
dec
out
mov
mov
outsl
repnz
add
jb
cmp
xchg
cmp
cmpb
add
js
push
and
test
call
int3
sbbl
enter
push
xor
mov
loop
pushf
popf
ss
std
jae
jg
xchg
adc
mov
lahf
cmp
jns
dec
mov
push
and
pop
loope
fstpl
aas
addb
add
add
add
add
push
cmc
pop
jno
data16
js
xor
andb
cwtl
mov
xchg
inc
leave
es
data16
insl
xlat
add
data16
mov
ljmpw
jno
data16
pop
imul
jno
repnz
and
sub
dec
data16
data16
xor
xor
test
mov
xor
in
xchg
stos
outsl
add
rcrb
call
imul
cmp
icebp
popf
popf
out
sub
in
xor
in
mov
rol
push
stc
xchg
and
fisubs
call
fisubrs
mov
jno
data16
shlb
lds
popf
cli
push
and
aam
cmp
jb
push
sbb
push
mov
sub
xchg
adc
pop
adc
add
mov
sbb
pop
xchg
lcall
push
mov
les
mov
out
cli
scas
aam
mov
mov
fdivs
in
stc
test
xlat
int3
xchg
in
push
imul
and
jb
inc
adc
outsl
add
mov
add
and
call
dec
jns
in
xor
xor
lret
hlt
and
add
push
js
mov
arpl
movsl
lea
jb
pusha
push
stos
mov
stos
cwtl
mov
xchg
xchg
lret
pop
xor
into
inc
sub
cld
push
pop
mov
fldt
mov
add
add
add
inc
mov
dec
adc
mov
sbb
pop
fwait
ret
insl
push
mov
insb
jmp
aas
lock
jmp
mov
dec
jmp
xor
sahf
lret
push
pop
lret
mov
mov
data16
push
loope
cwtl
js
push
int3
mov
jl
inc
xor
sub
add
add
add
add
popa
shll
cmp
aaa
cwtl
je
rclb
xchg
and
pushw
fiaddl
addr16
out
shll
add
mov
roll
and
test
or
jbe
incb
data16
and
sti
sub
add
lret
es
es
enter
out
pop
es
out
add
fldcw
stc
push
jge
data16
xchg
das
add
pop
or
sarb
jnp
addr16
int3
jne
lret
leave
data16
data16
mov
inc
aas
fs
inc
cs
das
pop
sbb
icebp
das
inc
iret
repz
push
add
icebp
cmp
cmp
orl
pop
xchg
in
or
mov
add
xorl
pop
xor
jno
jo
jno
jb
stos
inc
jb
lods
inc
jb
lods
inc
jb
lods
aas
jb
stos
inc
jb
stos
inc
jb
stos
inc
jb
lods
aas
jb
stos
inc
jb
stos
inc
jb
mov
jb
loop
gs
into
cli
add
or
xor
ljmp
or
xor
nop
cli
xor
xchg
add
xchg
add
xchg
add
sub
movb
jge
pop
adc
ljmp
movsl
scas
jbe
cltd
ljmp
inc
repz
inc
mov
inc
inc
lods
mov
dec
cmp
dec
xor
fstl
rcll
cmp
imul
sub
cmp
adc
add
or
or
mov
jmp
jno
data16
xchg
movsb
xor
sub
xorl
les
and
add
popf
or
lret
push
cmpsb
mov
sbb
lods
sbb
pop
clc
push
mov
add
add
add
dec
roll
jmp
pop
repz
mov
mov
add
dec
add
data16
andb
lcall
clc
movb
cmc
movb
inc
dec
add
or
test
sub
je
lret
lea
and
xchg
data16
mov
adc
movsl
add
jne
adc
pop
mov
jb
lods
data16
add
pop
add
and
mov
pop
add
ljmp
fcmove
bound
jb
fs
jo
push
jb
fs
arpl
imul
pop
inc
jb
mov
inc
jb
mov
inc
jb
pop
inc
add
adc
cmpsb
pop
inc
jb
adc
sub
jb
adc
outsb
lods
aas
jb
push
inc
jb
stos
aas
jb
adc
inc
jb
aaa
imul
enter
insl
subb
jae
xor
js
daa
in
jb
je
mov
mov
je
imul
faddl
nop
lea
add
imul
cld
add
lods
add
cld
add
bnd
mov
imul
int3
jne
cmpsl
adc
mov
daa
imul
lahf
sub
jb
dec
popa
sarl
outsb
lret
mov
data16
test
push
pop
addr16
stos
and
test
leave
xchg
scas
or
add
add
add
pop
out
or
in
push
mov
lretw
jno
mov
test
push
xchg
lahf
add
jp
inc
lcall
inc
scas
push
in
lcall
data16
jno
leavew
jno
les
or
data16
inc
outsb
xchg
pop
jbe
dec
outsb
data16
jno
mov
inc
test
add
test
cli
test
call
push
es
dec
es
push
add
dec
es
dec
es
dec
add
ret
pop
sti
push
add
and
lods
add
test
add
lahf
and
lcall
add
ret
xchg
ret
inc
lret
pop
lret
add
data16
data16
data16
add
in
data16
and
add
xor
jb
and
loop
push
jb
xor
and
lret
xor
xor
bound
jb
and
pop
add
and
pop
add
das
inc
sub
bound
push
aaa
pop
add
ss
inc
gs
add
add
add
cs
add
ss
and
push
xor
add
pop
inc
shlb
jb
and
sub
push
mov
repnz
push
stos
lret
cmp
jb
sub
push
inc
xchg
lea
jb
inc
aas
mov
push
daa
mov
jle
add
ja
jg,pt
pop
jb
fmull
cltd
int3
push
add
mov
add
cli
inc
and
movb
std
inc
ds
add
fisttpll
test
add
in
fs
ljmp
sbb
rcrl
xor
pushf
lea
jb
sub
aam
sub
fldcw
imul
xor
or
mov
add
lcall
add
add
add
outsb
data16
andl
or
pop
mov
push
or
lcall
and
xchg
mov
data16
test
or
mov
test
popf
push
jge
mov
jge
mov
data16
aad
push
jge
mov
push
data16
add
add
add
add
jg
and
jg
add
insl
push
test
add
jo
mov
jo
mov
dec
mov
data16
adc
mov
add
popf
adc
or
data16
or
dec
out
jmp
add
popf
adc
fwait
data16
mov
adc
ret
addr16
xchg
pop
push
fbstp
data16
push
cmp
sub
fwait
cmpsl
pop
add
pop
out
das
add
mov
jb
mov
jb
mov
jb
mov
inc
jb
mov
inc
jb
adc
jb
adc
jb
adc
jb
add
jb
cmp
add
push
add
push
add
push
add
jb
push
add
pop
add
cmp
jb
dec
adc
jb
add
add
add
lcall
and
mov
jo
mov
jge
sti
fnstenv
cmp
mov
repz
mov
pop
ds
mov
iret
mov
enter
push
iret
mov
mov
xor
push
call
add
add
add
popa
push
enter
mov
ja
cwtl
lahf
pusha
jb
sub
xchg
add
jb
out
sub
jo
or
push
leave
lret
sub
xchg
jns
imul
adc
ret
sbb
inc
lcall
cmpsb
cs
shrl
mov
push
imul
push
add
daa
js
cmp
jnp
fsubs
jbe
daa
fsubrs
mov
mov
jbe
sti
daa
fsubrs
lock
mov
imul
cmpsb
scas
mov
out
sbb
andl
test
pushf
test
mov
shll
add
and
rcl
and
dec
ret
data16
dec
ret
data16
data16
imul
push
add
pop
add
jecxz
add
push
add
push
add
aaa
pop
add
arpl
cmpb
add
ret
cmpsl
ret
movsb
ret
or
adc
mov
adc
mov
ret
mov
data16
ret
add
xor
and
inc
jb
cmpsl
inc
jb
cmpsl
inc
jb
es
jb
cmpsl
inc
jb
es
jb
es
jb
add
bound
jb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fs
add
add
add
add
add
pop
nop
subb
pop
mov
int3
xor
pop
xchg
mov
add
ss
jbe
dec
stos
and
lea
data16
enter
inc
add
cmp
adc
sahf
inc
jb
mov
add
or
data16
inc
jb
clc
ja
push
dec
or
stos
jae
add
js
or
sbb
fidivs
out
pop
enter
out
inc
jb
iret
shlb
push
js
ljmp
jb
addr16
hlt
xor
mov
gs
pop
push
or
sub
jno
sub
dec
mov
add
jno
cmpsb
cmp
dec
and
pop
mov
lea
add
add
add
popw
lds
jb
jle
data16
mov
out
pop
sahf
cmpb
cwtl
jne
cmp
xchg
dec
popf
fs
fcomps
push
nop
jle
or
test
mov
mov
and
lea
ss
iret
xchg
je
ret
arpl
mov
lret
data16
fadds
jo
loop
jp
sbb
jle
jo
fs
pop
adc
push
pop
sub
add
push
mov
out
lea
fbstp
decl
and
sbb
insl
mov
jae
lret
xchg
test
xor
sbb
dec
add
fistpl
roll
sbb
test
and
add
add
add
add
aam
iret
mov
mov
fisubl
jae
jae
inc
inc
pop
aam
push
mov
adc
cmp
jle
ljmp
test
mov
sbb
int
mov
jmp
adc
add
sbb
xor
push
out
adc
jb
or
sub
add
add
add
add
mov
jmp
sub
mov
cmc
roll
movsl
lods
and
push
push
out
mulb
mov
add
push
lret
add
jb
mov
imul
add
add
xchg
fstpt
add
cmpsb
or
mov
mov
icebp
mov
popa
adc
mov
add
pop
jmp
jb
push
ja
ljmp
xchg
push
popl
jb
in
jo
sbb
dec
adc
xor
adc
inc
push
jecxz
sbb
jmpw
push
jmp
and
aaa
icebp
sbb
loopne
rclb
testb
jmp
dec
mov
mov
lock
jmp
popf
inc
sbb
push
ljmp
mov
loope
mov
int
sub
repnz
jmp
pop
test
mov
adc
adc
lret
fnstsw
imul
fcmovnb
mov
lods
sbb
sbb
jbe
fnstenv
inc
add
jae
iret
jae
cltd
jl
xchg
push
arpl
cmp
push
ret
xor
xchg
inc
adc
inc
adc
sub
decl
add
ret
jecxz
or
adc
cwtl
sub
imul
inc
jb
sbb
arpl
imul
inc
lcall
xchg
pop
and
pop
je
xor
out
add
mov
mov
push
add
xchg
test
mov
pusha
daa
insl
mov
enter
lds
mov
mov
dec
repz
and
int
adc
add
adcl
or
clc
sub
pop
jmp
jno
jmp
mov
in
sub
xchg
addb
jo
je
mov
gs
push
outsl
ds
dec
enter
jl
cli
shrl
xor
add
and
and
jg
xchg
scas
pop
jo
loop
xor
mov
add
sahf
jle
popf
mov
mov
adc
fistpl
add
add
add
add
add
fmul
inc
xor
jg
xchg
mov
cmp
cmp
je
test
mov
iret
mov
fnstenv
mov
jle
inc
jo
ja
fs
pop
lods
jno
push
test
data16
mov
lods
jno
lock
dec
xor
je
ja
jno
mov
loope
cwtl
inc
loope
dec
xchg
outsb
push
rol
and
mov
dec
addr16
outsb
xchg
pop
bound
push
insb
jmp
int
movsb
add
fucomip
in
cwtl
push
insb
mov
xor
dec
cli
ljmp
xlat
xchg
jne
dec
lahf
mov
and
inc
fisttpl
cld
and
sub
lret
dec
fdivs
nop
add
ss
nop
add
mov
jmp
mov
inc
mov
dec
imul
xorb
out
pop
xchg
add
add
dec
mov
dec
jnp
dec
andl
test
or
cmc
lods
cmc
jae
loopne
xchg
or
cwtl
cs
push
cwtl
test
ficoms
xchg
mov
dec
aas
or
inc
aas
or
cmp
pop
adc
push
incw
testl
cmp
test
xor
out
lcall
divl
jmp
je
mov
or
enter
jmp
pop
mov
stos
shll
mov
push
mov
jne
scas
dec
lea
xchg
push
in
stos
adc
push
add
lods
mov
sbb
push
orb
pop
lret
data16
loope
mov
enter
in
sbb
inc
push
add
mov
inc
jbe
mov
sbb
lret
sub
adc
pcmpeqw
xlat
loopne
mov
enter
cmp
add
add
xorl
jmp
jno
cmpsl
pop
and
adc
out
or
jmp
jo
xchg
xor
sbb
cmc
cmp
stos
jns
andb
xchg
std
lea
xchg
std
lea
cwtl
sub
loope
movsl
jno
pop
sbb
xchg
xchg
inc
fsts
cwtd
ss
add
add
imul
xchg
xchg
mov
popf
lea
mov
inc
daa
cltd
lcall
les
and
stc
adc
stc
adc
sub
sub
movsb
mov
int3
jb
incl
outsb
call
enter
xchg
ret
notl
and
sub
in
mull
outsl
shll
push
push
stc
jg
add
cwtl
test
and
fsubp
mov
callw
add
push
fimull
xor
xchg
mov
adc
mov
add
sub
add
mov
and
loopne
jb
fs
les
out
inc
fs
insb
aas
push
out
mov
add
stc
cmp
cmc
pop
dec
out
cmc
insl
mov
testl
testl
and
inc
js
aas
subl
test
sub
pop
call
jae
lea
fs
mov
mov
jbe
jp
lea
jns
mov
and
add
mov
xor
or
shl
in
mov
add
push
or
popa
lds
int
or
or
call
jle
mov
dec
adc
mov
cmpsl
jmp
jecxz
add
mov
xor
mov
add
add
lods
inc
xchg
jmpw
mov
hlt
orl
add
daa
enter
push
cmp
gs
jle
mov
mov
fs
fadds
inc
xor
in
gs
cld
insl
mov
std
mov
cmp
add
fdivrp
push
out
sub
jbe
and
test
cmpsl
leave
xchg
cmp
jno
iret
popa
or
jmp
pop
shll
add
add
add
in
xchg
add
ret
mov
data16
pop
aaa
push
loopne
sbb
mov
add
shlb
add
jmp
mov
enter
clc
push
add
mov
data16
xlat
xchg
aad
lea
test
add
in
jne
pop
inc
lods
cmp
and
iret
in
dec
adc
add
or
pop
jb
pop
add
sbb
imul
jnp
in
xor
ficoml
sub
push
lds
add
jmp
add
popa
enter
pop
out
roll
dec
push
loope
jb
mov
cli
fucomp
dec
push
sbb
or
sbb
in
sbb
inc
outsb
cwtl
addr16
and
pop
dec
jmp
add
xor
inc
push
or
cmp
inc
jle
inc
inc
jbe
dec
mov
je
sbbb
inc
pop
lcall
pop
lcall
xchg
mov
xchg
lcall
mov
add
add
add
add
xor
push
fwait
or
bound
aaa
jp
mov
add
ja
mov
jge
xchg
lcall
push
add
ds
loope
add
push
idivl
out
mov
lretw
inc
sub
aas
movsb
inc
insl
aad
test
out
sbbb
add
sub
xor
inc
mov
mov
jmp
call
cwtl
push
ficomps
jno
addr16
jmpw
inc
out
data16
das
jmpw
xchg
cmp
dec
es
xor
jbe
xor
int3
data16
imul
add
das
sbb
fcmovnb
ss
out
ljmp
rcrb
mov
sub
jne
cmp
lcall
mov
call
rorb
add
add
sbb
add
jmp
inc
and
or
mov
fcmovnb
loop
or
mov
fcompl
fstpt
movsb
add
push
mov
icebp
in
inc
adc
rorb
fisubl
stos
mov
popa
in
inc
push
xchg
and
fcoms
pop
and
mov
or
out
int
add
fcompl
es
dec
pop
mov
in
jbe
sub
clc
iret
sbb
jb
lahf
xchg
jb
out
jne
or
add
and
icebp
push
pusha
lea
fsubl
ret
outsl
arpl
negl
stc
lds
or
add
std
jl
cmc
outsb
in
lea
jle
cmpb
inc
xor
out
jl
lcall
adc
jb
dec
push
sub
mov
insl
mov
dec
mov
jne
add
lea
jbe
mov
jb
push
out
rcrl
sbbb
jb
into
dec
jle
fsub
jb
add
add
inc
add
push
addr16
out
data16
fimull
or
mov
scas
mov
fs
dec
out
pop
mov
pop
add
outsb
bound
mov
mov
popa
pusha
lods
ret
jns
and
cmpsl
or
mov
mov
aas
es
dec
xlat
jmp
imul
es
enter
xchg
jns
jmp
jecxz
jae
frstor
clc
add
or
cltd
enter
mov
pop
or
or
cmp
xor
add
add
add
dec
sbb
jl
push
clc
icebp
pop
jle
jp
mov
and
outsb
mov
pop
cmp
cmp
or
mov
add
inc
add
pop
shlb
call
cltd
or
mov
inc
je
pop
enter
xchg
or
or
push
inc
mov
mov
add
add
add
add
cs
xchg
outsb
xchg
stc
fistpl
dec
push
push
ret
pop
mov
int3
loop
jbe
sbb
adc
or
fldt
jle
mov
push
jmp
sbb
outsb
add
sbb
adc
lock
jb
popf
xor
jb
lahf
push
jmp
cwtl
cwtd
pop
jns
add
imul
popf
cwtl
movsb
out
sbb
mov
inc
dec
ret
add
cmp
mov
xorb
mov
inc
ret
dec
enter
fmul
xchg
mov
in
add
xchg
cltd
mov
inc
insb
lret
pop
jb
fisubl
outsb
iret
fdivrp
add
add
stos
cltd
mov
add
ret
lea
mov
mov
adc
cmp
stos
std
jle
jno
push
push
fisubs
inc
mov
jne
outsb
inc
cmpsl
push
push
pushf
inc
jp
and
push
jbe
mov
outsb
inc
cmpsl
xor
fstpl
cmp
adc
xchg
jo
mov
jmp
add
outsl
jmp
push
mov
jmp
test
addb
push
sub
int
lods
ja
inc
sub
mov
out
xchg
dec
sub
add
adc
mov
out
jo
call
xchg
add
dec
pop
push
ret
push
mov
pop
inc
fucomi
ja
add
andb
jo
xor
xlat
mov
mov
add
lret
add
les
mov
les
pop
or
pop
add
xor
pop
mov
data16
in
adc
ret
jb
fs
xor
jmp
mov
add
mov
push
add
lods
gs
bound
out
pop
ds
pop
fcmovb
mov
cmp
dec
add
loopne
pop
xor
add
sbb
mov
mov
ljmp
mull
mov
test
sbb
mov
jmp
sbb
sub
mov
lea
add
enter
mov
divl
add
xchg
adc
ja
add
xor
into
adc
mov
push
lds
into
cld
jne
add
mov
add
sar
cltd
mov
add
add
mov
js
or
into
and
adc
negb
adc
add
xchg
xorb
andb
into
lock
ret
jmp
mov
lret
push
out
mov
mov
push
mov
lods
jno
data16
roll
mov
out
cmp
icebp
icebp
dec
in
jmp
mov
cmp
jmp
jno
jmp
cmpsb
mov
add
add
add
jno
mov
adc
xchg
xor
arpl
data16
mov
push
js
and
sbb
jecxz
jp
inc
add
add
push
cmp
and
movb
in
lret
mov
repz
add
add
mov
sbb
jmp
call
sahf
adc
mov
mov
dec
inc
fwait
jmp
xchg
adc
test
xor
das
push
mov
jmp
jecxz
cltd
decl
enter
ds
decl
jge
xorl
jae
cmp
inc
outsb
pop
stos
je
jae
pop
mov
nop
dec
pusha
sub
and
inc
stos
adc
add
add
enter
sti
xlat
add
leave
jbe
xchg
jbe
pop
cmp
lods
jmp
in
mov
mov
in
pop
stos
xor
jo
notl
push
gs
jb
mov
push
pop
mov
bound
jae
push
rcl
gs
jb
xor
jg
dec
jae
insl
mov
sub
jae
lea
dec
dec
pop
push
sbbb
add
mov
fisttps
adc
or
inc
cmp
out
icebp
adc
adc
mov
dec
add
adc
lea
roll
in
jb
lea
in
push
pop
jo
or
je
xchg
add
movb
mov
pop
pop
jo
lea
movsl
fadds
out
add
data16
aam
fisubrs
add
sub
loope
and
push
mov
mov
bound
jne
jno
push
dec
xchg
or
imul
jno
daa
out
gs
jecxz
sub
sub
outsb
mov
jo
data16
cs
xchg
jbe
data16
pop
add
out
data16
and
mov
xchg
fsubr
jb
data16
pop
insb
fs
sahf
loop
call
std
xchg
add
inc
fdivs
jae
mov
add
push
adc
dec
mov
shll
frstor
or
addb
pop
pop
shll
xchg
inc
iret
cmpsb
movb
lds
lea
lds
push
repz
add
add
add
add
push
push
cmp
shll
jns
test
js
inc
fistpl
test
ret
dec
pushf
lcall
xlat
je
push
movsl
add
mov
or
jb
xor
push
ljmp
mov
pop
aaa
aam
in
sub
mov
xchg
dec
or
push
mov
mov
jmp
add
bound
jb
dec
and
test
jno
jo
sbb
enter
push
into
add
adc
sbb
lcall
in
ljmp
shll
jb
and
push
push
inc
xchg
cmc
push
push
test
ss
mov
inc
jb
incb
xchg
pop
add
xchg
cld
aas
mov
adc
add
add
add
add
add
jmp
and
push
leave
lea
les
imul
jno
lea
test
jo
jp
push
xor
fiaddl
jne
lea
repz
jnp
mov
add
lock
and
insb
aad
fld
aam
addr16
push
mov
outsb
sub
jge
xchg
hlt
add
es
sub
insl
into
lds
rorl
iret
add
imul
dec
xchg
fstl
xchg
das
je
mov
or
xor
into
ds
inc
push
bnd
jb
and
adc
movsl
fs
repnz
mov
cwtl
enter
mov
fidivl
add
or
adc
mov
sub
cwtl
inc
daa
test
sub
pop
ret
loopne
and
or
or
jle
add
or
xchg
mov
push
dec
pop
pop
leave
dec
or
dec
or
push
xchg
sub
cwtl
ret
fcompl
inc
push
rolb
inc
add
fisubrs
or
add
xor
outsb
jge
jne
add
inc
or
and
iret
cmp
ja
bound
aad
sbb
or
out
push
push
mov
cmp
jg
bound
popf
inc
sbb
notb
je
bound
inc
inc
push
insl
sti
iret
adc
pop
test
pop
lods
push
dec
ret
cmp
or
in
mov
add
cmpsb
cmpsb
addb
add
adc
sbb
imul
mov
ret
mov
cmp
call
jb
cmc
xor
xchg
add
jbe
dec
add
fimull
add
add
add
jb
fdivrl
test
lea
sti
pop
xchg
decb
jo
cli
lea
jb
mov
arpl
sbbl
stos
mov
jns
lea
cmp
jb
std
ret
addr16
xchg
jmp
jno
pusha
or
jmp
mov
rolw
or
gs
es
repz
sti
xchg
jmp
jno
xor
mov
in
and
push
lds
xor
lds
insb
cmc
movsl
into
jmp
jno
out
mov
dec
sub
dec
stc
jno
popa
xchg
xor
lods
mov
xor
daa
imul
dec
aaa
out
ja
xor
loope
jmp
inc
mov
je
inc
fdivs
xor
dec
xor
jnp
mov
mov
sub
inc
mov
jmp
int3
mov
mov
inc
call
push
dec
inc
clc
mov
push
mov
loope
pop
mov
xchg
add
and
imul
push
ja
ds
add
add
add
inc
dec
mov
pop
and
aas
jmp
push
pop
int3
lods
fucomp
arpl
dec
ret
add
add
ljmp
pop
fcomps
scas
ljmp
cmc
pop
popa
add
jmp
inc
jb
movsl
adc
sbb
stc
jmp
bound
add
stos
sub
je
xor
nop
push
pop
xor
jmp
mov
jb
call
pushf
fmuls
testb
mov
jne
mov
dec
or
jmp
insb
mov
jb
into
cmp
neg
push
sbb
dec
mov
add
add
and
add
out
dec
test
div
push
push
les
pop
sbb
int
jmp
lds
mov
jmp
cmp
or
data16
es
jno
loop
in
xchg
mov
mov
jmp
push
dec
xor
loop
lahf
out
mov
xor
mov
sbb
jmp
imul
test
imul
jmpw
xor
repz
jno
jmp
or
sbb
cld
jmp
mov
inc
mov
sub
hlt
mov
jecxz
insl
mov
and
inc
out
inc
inc
pop
loop
xor
mov
ljmp
add
add
add
add
rorb
cmp
ja
ljmp
dec
das
mov
sbb
jae
sbb
add
jecxz
jg
pop
jge
dec
pop
xchg
jmp
push
hlt
leave
data16
scas
js
pop
inc
fs
imul
mov
leave
loop
jg
jmp
xor
jb
call
add
add
add
mov
lret
sub
arpl
cmp
jmp
add
pop
subl
out
lds
stos
sahf
add
cmpsb
adcb
pop
add
xor
jb
dec
and
xor
mov
fcmovnbe
negl
push
push
stc
ss
add
sahf
adc
add
jecxz
add
cwtl
shll
bound
add
jp
jb
add
jne
bound
jge
or
lea
int3
lea
fidivrs
sub
xchg
scas
pop
mov
aaa
jge
mov
mov
hlt
add
adc
add
or
lea
lret
dec
add
cmpsl
xor
out
subb
inc
stos
mov
add
testb
lea
pop
mov
push
inc
aas
xchg
iret
je
lea
test
inc
jb
in
outsl
lds
add
xchg
push
pusha
push
jbe
push
push
dec
xchg
inc
xor
fidivs
ret
jns
in
add
mov
jmp
std
fnstenv
xor
push
dec
jmp
pusha
push
jno
push
adc
add
dec
cmpsl
jge
inc
pop
loope
cmp
shlb
cmpsb
bound
aas
scas
sarl
fs
outsb
dec
cmpsl
xor
or
ret
xor
and
leave
mov
add
mov
je
inc
stos
call
loopne
cmp
dec
movsb
clc
push
jmpw
fs
cmp
add
add
add
or
mov
mov
data16
cmp
repnz
adc
add
sub
gs
popf
cmpsb
dec
mov
jmp
jmp
adc
enter
fndisi(8087
rcrb
lea
ss
cld
lcall
stc
das
sbb
jb
jecxz
fdivr
arpl
out
pop
push
sub
icebp
jbe
jae
jp
repz
nop
fisttpll
repnz
adc
mov
movsl
pop
xor
pop
ret
jo
jb
loope
and
shll
adc
in
and
movsl
sub
ret
mov
jecxz
inc
arpl
jno
jae
int
out
add
and
jb
fs
in
mov
out
rol
mov
dec
pop
lea
jb
jnp
mov
xchg
dec
clc
repnz
push
mov
lea
push
lret
ret
dec
mov
push
push
pop
mov
jno
repnz
inc
jb
rcrl
sub
in
int
out
cltd
add
mov
xorl
add
add
add
testb
fsubrp
ret
inc
xchg
pushf
aad
movsl
mov
inc
addr16
call
loop
arpl
popa
sbb
fsubl
nop
cmp
icebp
jecxz
xor
jmpw
dec
ljmp
xor
clc
rcll
jge
jmp
lods
dec
insl
ss
jb
mov
inc
bound
stos
jb
mov
jb
movsl
jmp
idiv
jb
aad
notb
repnz
jmp
sub
jno
mov
ret
cmp
lahf
cmp
iret
dec
lcall
out
add
and
test
lds
mov
jge
pop
mov
sbb
divl
add
add
add
add
ss
xor
jae
sbb
xchg
jg
xor
cmp
data16
shlb
push
mov
or
mov
jmp
xchg
and
and
cltd
xorb
inc
jb
loope
mov
arpl
jb
push
ja
fists
mov
dec
daa
add
push
cli
add
sti
roll
out
push
in
add
sbb
out
mov
incl
es
dec
rcll
push
and
jno
fists
jmp
add
xchg
rol
pop
pop
sbb
sbb
leave
add
in
add
fbld
dec
cltd
mov
mov
add
mov
hlt
add
mov
add
subl
or
rorb
xlat
dec
add
fisttpll
cmpsb
add
inc
jb
sbb
push
clc
jmp
jb
in
add
dec
shr
adc
lea
cltd
lds
cmp
or
inc
syscall
stos
mov
fwait
add
mov
add
add
add
jb
or
aad
jmpw
pushf
in
push
mov
jns
data16
std
or
add
add
jle
data16
push
jmp
out
jmpw
cmp
pop
jno
jle
mov
and
and
push
add
jmpw
inc
pop
jbe
data16
cmpsb
mov
add
mov
inc
adc
sbb
sub
movsb
jmp
stc
aas
push
mov
push
push
inc
daa
add
pop
add
inc
in
and
data16
outsb
and
fsubs
fwait
inc
and
scas
xchg
push
rcrb
pop
push
ret
push
imul
callw
addr16
add
add
add
add
add
outsb
and
inc
fdivs
jmp
aas
or
cltd
mov
icebp
xlat
push
or
sub
xlat
lds
add
popw
and
push
and
push
aad
mov
lcall
pop
pop
xor
pop
fst
adc
in
and
icebp
orl
sbbb
add
add
add
je
pop
and
and
pushf
push
pop
and
cmp
into
jae
mov
or
or
or
bound
fisubs
xor
fistps
inc
mov
sbb
pushf
das
mov
dec
xor
ja
cmp
jo
mov
inc
mov
in
sarb
xor
add
xchg
fmul
add
shlb
mov
xchg
mov
scas
dec
mov
lahf
add
call
pusha
or
pop
jae
add
push
jno
lock
cltd
ss
aad
pop
les
jno
aam
push
imul
shlb
adc
jne
mov
add
out
mov
xor
fs
ds
add
add
add
add
call
sbb
icebp
popa
mov
popf
or
mov
and
xchg
shrl
jmpw
inc
loope
jb
jb
fistps
scas
sub
arpl
aas
cmp
out
jo
jmp
clc
lds
pop
out
cmpsl
lods
fnsave
jb
xchg
xor
add
add
add
enter
cmp
adc
rol
add
add
sbb
mov
add
sub
test
push
mov
inc
and
or
fdivs
imul
pop
sub
inc
ret
cmpsl
xchg
xor
dec
mov
mov
fldt
clc
xchg
jge
mov
in
or
aaa
or
shll
add
ljmp
outsl
iret
in
inc
arpl
xor
xchg
lods
ret
jle
mov
mov
cs
mov
out
and
ret
pop
sbb
test
in
cs
fcmovb
movsb
imul
fs
fs
stc
cmc
pop
daa
xor
adc
inc
jb
lret
jnp
mov
incl
and
fistpll
cs
jb
insb
mov
loopne
pop
leave
leave
jae
fistpl
add
out
das
push
or
hlt
jge
mov
cs
or
in
xor
mov
jge
pop
cmpb
dec
xor
repnz
lds
pushf
mov
dec
lods
clc
subl
pop
out
fcomi
add
add
add
add
add
mov
dec
xchg
mov
lods
popa
stos
movsl
cld
add
pop
push
lds
jns
stos
popf
lock
adc
aas
dec
mov
add
call
in
or
int3
jae
and
pop
push
jmp
in
cld
mov
cmp
cli
mov
mov
fidivrs
mov
sti
add
icebp
inc
jb
jmp
aaa
in
xor
in
add
xchg
inc
idivb
push
ja
insb
pop
aad
sub
inc
fstpl
xor
and
in
sub
sub
xor
jecxz
jle
and
jl
pop
dec
mov
jno
data16
jp
test
jne
and
xchg
xor
adc
mov
jmp
jecxz
and
jno
in
pop
inc
cmpsl
sub
inc
repnz
dec
mov
dec
cmp
inc
add
and
jle
adc
push
pop
jne
or
fisttpl
add
cwtl
fdivl
jecxz
fisttpl
add
add
cwtl
jmp
test
out
pop
jmp
loopne
xor
xor
xchg
jmp
in
jns
stc
cli
cmp
mov
int3
aad
das
push
pop
mov
out
arpl
sbb
lea
out
xor
add
cwtl
mov
aad
scas
inc
loopne
jecxz
decl
mov
jbe
arpl
fs
push
or
loope
les
loope
add
test
add
add
add
stc
movsb
sti
mov
sub
add
out
arpl
and
arpl
inc
adc
xchg
dec
inc
inc
sbb
add
loop
test
jb
adc
dec
mov
push
jb
sbb
jb
adc
loop
test
mov
stc
pop
test
jb
popf
sti
or
idiv
aas
test
jae
or
out
lds
jp
lea
mov
icebp
or
add
xor
mov
mov
xor
or
jns
push
test
in
mov
stos
push
push
sti
mov
sub
notb
or
cs
movsb
in
jns
test
jmp
in
xor
add
add
add
fcoml
dec
fimull
jns
popa
jmp
fnstsw
xchg
ret
jno
xchg
cld
add
add
sbb
loop
cmpsb
insb
and
lods
sub
gs
xor
mov
rol
pushaw
imul
inc
into
fucomip
add
daa
mov
jae
adc
add
jecxz
add
push
testb
jle
pop
pop
mov
daa
adc
jno
push
mov
aam
ficoms
or
loope
dec
shr
dec
divps
fadd
outsl
bound
or
jne
pop
and
mov
adc
int
adc
xlat
sbb
push
je
adcb
ret
jecxz
imul
test
lods
xchg
les
add
ret
add
arpl
cmp
stc
addl
ja
arpl
push
fdiv
ds
sbb
arpl
vpunpckldq
leave
pop
roll
movss
arpl
cld
jb
xor
sub
out
in
outsb
push
out
adc
rclb
push
movl
sar
in
mov
add
add
add
mov
fs
cld
aad
push
fmul
pop
mov
pop
addr16
jb
ljmp
aad
scas
out
jge
jb
adc
cwtl
mov
dec
test
movsl
retw
jb
ret
movl
jb
lds
fstl
mov
adc
enter
repnz
add
dec
fs
mov
add
dec
sbb
es
out
stos
daa
or
mov
ds
repnz
dec
in
inc
shlb
mov
mov
mov
push
shrb
aad
pop
repz
jb
cmp
dec
mov
xor
and
jno
jmp
inc
jmpw
mov
jno
mov
add
add
add
test
and
int3
sbb
das
push
shlb
jo
mov
xchg
hlt
xor
sbb
adc
lods
ja
push
leave
mov
pop
add
add
cmpb
mov
jmp
pushf
aas
ds
loope
int3
dec
fadds
mov
pop
push
jbe
inc
mov
add
inc
js
mov
add
and
data16
add
jne
icebp
mov
or
sahf
inc
sbb
cmc
jg
pop
data16
mov
jmp
lea
dec
stos
call
hlt
xor
push
pushf
adc
jno
or
pop
jbe
inc
jb
popa
add
cmp
stc
call
sub
in
daa
mov
jmp
in
arpl
icebp
mov
push
cmp
shll
int
xchg
incl
test
and
pop
adc
jbe
pop
and
lds
enter
jb
imul
rcrb
cmp
pusha
sahf
jg
das
mov
outsl
and
std
jae
cmp
cwtl
out
dec
push
pushf
nop
sahf
mov
pusha
das
mov
push
repz
mov
mov
cmp
nop
mov
pop
jge
enter
add
xchg
call
sbb
lea
icebp
add
cs
add
sbbb
mov
ffree
cli
mov
mov
mov
sub
dec
dec
mov
imul
ja
mov
mov
cwtd
cmp
and
xchg
andb
fnstenv
in
data16
loop
adc
xchg
pop
mov
jb
adc
xchg
out
sbb
out
rclb
shll
jecxz
rclb
sti
xlat
adc
jg
data16
add
fsts
lds
mov
mov
xchg
mov
jmp
jmp
xor
outsl
push
xchg
xchg
lds
dec
mov
loopne
int3
jno
loope
addb
jno
popl
fstpt
adc
nop
lret
jecxz
cli
mov
test
mov
jmp
jae
or
fildl
jne
inc
xchg
je
sti
cmp
mov
adcl
push
add
mov
jg
push
ret
lret
dec
xchg
je
xor
fmul
cmp
xor
and
dec
mov
ja
jnp
es
dec
add
jbe
sbb
stc
cltd
call
mov
jb
imul
fs
iret
cmp
clc
stos
lret
add
push
pop
xchg
xor
ret
xchg
arpl
mov
repz
add
add
add
add
arpl
sqrtps
inc
out
xchg
pop
jb
push
add
mov
mov
inc
xchg
notl
shlb
add
cli
ljmp
and
jp
or
pop
mov
and
icebp
push
mov
inc
mov
and
lods
pop
push
inc
iret
dec
sbb
or
adc
lret
jb
add
std
aad
sub
add
in
aad
xor
dec
push
add
fstpl
decl
add
cmc
add
lea
out
jbe
jb
pop
popf
mov
pop
in
sti
mov
jb
adc
mov
ret
add
dec
into
or
jb
mov
out
jb
add
incl
push
add
addr16
jno
jmp
jmp
jae
inc
lsl
in
adc
jno
aad
jmp
jno
ss
test
call
mov
ss
test
mov
push
cwtl
js
out
test
pop
in
jo
pop
dec
cltd
lods
dec
jmp
test
call
add
add
add
in
addr16
jmp
jmp
jno
jmpw
mov
xor
enter
mov
add
mov
faddl
enter
dec
addl
or
jge
or
loope
es
data16
jl
lret
add
push
shlb
and
add
inc
and
xchg
aas
push
xor
cmp
dec
movsb
hlt
mov
retw
dec
inc
mov
leave
add
or
dec
jne
ror
jb
loopne
lret
orl
add
and
ret
arpl
rclb
mov
iret
sbb
out
inc
mov
jge
mov
enter
inc
std
dec
mov
loope
pusha
mov
shl
popf
pusha
jmp
inc
out
dec
inc
push
mov
and
and
push
sub
lret
bound
fbld
ljmp
mov
xchg
pop
mov
push
xor
das
mov
add
add
shl
testb
mov
rolb
ret
jle
adc
push
ret
cmc
lds
mov
mov
jmp
lret
jecxz
and
stos
mov
repz
rcll
or
insl
loopne
jb
mov
mov
mov
mov
out
in
cmp
push
bound
xor
inc
out
jmp
xor
inc
mov
inc
rcll
pop
cmpl
pop
or
jecxz
sti
push
sbb
cmp
ja
jb
leave
push
jbe
mov
leave
push
outsl
jmp
test
in
jo
data16
in
loopne
push
jmp
inc
sbb
out
xchg
incb
nop
pop
push
into
ffree
add
shrw
gs
ljmp
inc
mov
jmp
decl
test
or
jnp
pop
dec
jecxz
loopne
cltd
push
pop
sub
lea
sbb
or
les
mov
sub
sarb
pop
sti
sarl
xchg
call
add
add
add
add
les
pushl
jmp
jae
pop
aad
lods
ret
jecxz
lret
lcall
xchg
cltd
jmp
jb
xchg
inc
jb
push
and
push
dec
and
cmc
dec
in
jb
pop
mov
mull
jbe
push
mov
xchg
inc
mov
lret
lock
out
mov
inc
shr
jb
int3
dec
jmp
stc
sub
clc
lods
cmpsb
leave
xchg
mov
test
cmc
data16
dec
out
jae
arpl
xchg
jmp
fidivl
mov
and
fs
cmp
aad
xchg
into
adc
xor
lea
sbb
repz
lea
inc
push
dec
add
cs
add
dec
loopne
insl
jno
call
enter
insl
lret
jmp
loop
orb
fsubrl
sti
out
rorb
pop
aas
fcmovu
test
repnz
testl
ljmp
add
ja
xor
ja
rol
cltd
data16
mov
call
mov
inc
and
add
mov
pop
push
movsl
in
xor
push
mov
movsb
test
xor
loope
stos
jb
or
in
push
bound
cmc
push
inc
mov
stos
cmpsb
add
push
out
mov
or
mov
fwait
data16
cli
js
std
outsb
adc
outsl
mulb
add
cs
les
hlt
insb
mov
add
add
add
add
inc
ss
mov
in
push
pcmpgtb
push
add
pop
aam
fwait
rcl
dec
inc
sub
jae
jl
mov
jmp
sbb
sbb
and
mov
enter
fsub
shlb
jne
ret
iret
inc
pop
cltd
jmp
mov
lea
push
call
xchg
pop
adc
push
not
mov
jmp
pop
add
loop
mov
addr16
addr16
xor
stos
mov
in
imul
jmp
add
pop
and
pushf
push
and
lods
jl
jb
xchg
mov
fucomp
jae
rcll
push
lds
inc
dec
int
enter
jne
pop
lock
rorl
push
lea
bound
jb
lods
add
jmp
lcall
adcb
popf
bound
lods
mov
sahf
std
fdivr
inc
dec
aad
je
pop
movsb
out
and
jmp
lea
stc
aam
adc
dec
or
mov
mov
addl
andl
lret
push
inc
jb
int3
ss
mov
cld
out
jl
fadd
jl
add
aas
dec
cld
testb
pop
sub
push
lock
xchg
add
ret
push
dec
add
dec
pop
jb
jl
cmp
pop
gs
adc
leave
mov
addl
call
mov
iret
test
inc
lahf
lds
push
sub
cmpsl
adc
sbb
jecxz
add
jmp
mov
mov
sub
data16
lret
js
fcoml
or
cmc
push
adcb
jbe
and
mov
data16
gs
sbbl
or
sbb
movsb
loope
jmp
xor
loop
fwait
scas
inc
push
inc
and
sti
inc
sub
xor
mov
add
inc
fdivs
xor
add
test
js
mov
iret
imul
adcb
movsb
iret
arpl
push
dec
sub
inc
inc
mov
dec
xchg
lods
ret
js
das
mov
dec
xchg
call
push
outsb
xlat
cltd
movsb
ss
lcall
das
cltd
call
xor
xlat
cltd
lods
ss
inc
add
in
cmp
jb
push
add
pop
arpl
mov
addr16
fstpl
push
jae
xchg
imul
sub
subb
pusha
call
or
sti
sub
call
in
outsb
nop
dec
pop
mov
arpl
icebp
lds
push
mov
jg
xchg
aas
jb
pop
mov
into
testl
add
add
jmp
jmp
out
cwtl
fstl
cmpsl
jmp
call
sbb
mov
cld
mov
icebp
xor
push
mov
and
scas
lea
repnz
push
inc
lods
or
mov
orl
jb
dec
pushf
mov
lea
loop
out
xchg
push
adc
and
dec
add
test
insb
fmull
movsl
movb
out
fwait
ret
dec
xlat
add
jp
dec
mov
adc
ds
dec
or
enter
jp
sbb
out
or
jnp
add
addr16
lds
add
insb
xor
arpl
mov
jbe
stos
into
jmp
add
mov
xor
ljmp
add
les
movsl
sbb
mov
stos
jb
xor
push
or
cmp
cmp
jge
xchg
clc
out
fldcw
inc
lods
cmpsb
in
test
clc
dec
movsl
mov
addr16
xchg
add
lret
lcall
inc
sbb
xchg
adc
jmp
addr16
addr16
rol
mov
jo
inc
lret
aas
pop
fsubrl
addr16
lret
es
adc
leave
xor
cmpsb
push
or
test
dec
push
mov
loope
pop
mov
addr16
sub
dec
adc
or
test
frstor
sbb
push
push
adc
rcll
push
shl
dec
test
add
add
add
add
in
ret
push
push
inc
xor
add
mov
cmc
je
subb
jge
arpl
mov
add
xorb
jae
mov
jae
test
mov
lcall
jno
mov
inc
mov
arpl
test
je
add
in
adc
lahf
and
imull
add
cltd
je
jb
jmp
mov
fwait
inc
jb
movsl
sti
mov
or
cmpsb
lret
sbb
jae
sbb
mov
mov
mov
mov
lahf
dec
and
stc
cmp
xchg
popa
xor
movb
ljmp
dec
inc
pushf
out
ret
push
add
jbe
xchg
ret
add
into
lea
lret
jb
xchg
cs
rcrb
sahf
pop
mov
into
mov
xchg
shlb
jge
xor
cmpsb
test
jp
adc
ljmp
shrl
mov
ss
jne
ja
mov
xchg
fisubs
rclb
ss
test
add
add
add
cmpsb
popf
inc
dec
nop
xchg
mov
das
outsl
mov
shll
add
aad
call
scas
shll
ljmp
aas
out
mov
add
lcall
dec
in
sub
push
frstor
sbb
lea
dec
cwtl
test
aad
xor
stc
ss
pop
cmp
cld
add
inc
xlat
je
aaa
sub
xor
pushf
pushl
addr16
aaa
sub
xor
xlat
pop
mov
movsl
or
out
jmp
sbb
andl
xor
dec
adc
sub
fwait
mov
pop
cmc
jmp
push
jb
pop
xchg
out
imulb
jns
add
adc
lods
addr16
mov
je
push
pop
and
std
in
aad
imul
incb
xchg
push
jmp
xchg
jmp
jns
in
xchg
mov
roll
ret
jle
fwait
aas
cltd
adc
xchg
push
lcall
dec
inc
and
out
lret
mov
imul
aam
add
gs
xchg
ret
pop
sahf
dec
es
outsl
jnp
cs
add
outsl
xchg
fwait
inc
jb
stc
icebp
pop
aam
add
sahf
xchg
ret
and
aas
ret
mov
or
push
mov
push
add
mov
pop
ret
movsl
add
or
jnp
lods
push
mov
mov
rcrl
out
or
out
jp
mov
jo
add
test
sub
lcall
shll
in
mov
and
dec
mov
pmaxsw
fucomi
das
jb
dec
jb
cmpsb
add
jo
in
out
bnd
add
adc
xchg
cld
pop
fsubs
jmp
cwtl
add
pusha
inc
ret
fadd
jmp
and
jno
sub
fwait
dec
add
dec
mov
sub
mov
retw
jae
movsl
cmc
jno
and
lods
xor
test
insb
push
add
mov
aam
mov
movsb
add
imul
in
add
push
aas
mov
push
testb
push
loopne
adc
shr
sbbl
daa
lea
pop
dec
iret
sbb
loope
xchg
jmp
pop
nop
adc
add
fists
lea
mov
fdivs
pop
ja
subl
xor
pop
push
fildl
fcomps
scas
xlat
cmpl
shlb
pop
stos
lock
aaa
pop
or
lods
loop
dec
mov
dec
jp
xor
movsb
pop
insl
loop
mov
jo
incl
subb
jbe
dec
mov
sub
sub
lods
sbb
sahf
stos
push
add
xor
stc
imul
mov
aaa
add
push
add
mov
sti
inc
xor
arpl
cs
sahf
add
lods
inc
je
sub
out
mov
jb
inc
and
ret
inc
dec
jbe
sub
xchg
fwait
daa
test
add
add
add
out
xchg
call
xchg
mov
loop
lea
jns
test
add
or
insl
inc
aad
mov
lods
inc
push
jb
int
mov
hlt
jnp
mov
jp
or
jl
test
adc
adc
add
jmp
push
sti
add
stc
add
add
pop
inc
in
xor
jmp
testb
in
loope
lahf
insl
dec
xor
popa
dec
gs
lock
ss
pop
out
jge
jb
xor
out
pusha
xor
dec
jmpw
jo
jno
fsubp
jno
mov
add
cmp
repnz
in
sub
xlat
es
jno
rcrb
cmc
mov
xchg
imul
add
add
jae
data16
cmp
test
in
rcll
into
test
outsb
jb
movsb
in
dec
lahf
sub
jecxz
pop
jecxz
xchg
lds
ret
in
dec
xchg
push
sbb
push
adc
jmp
pop
dec
jno
jg
cwtl
push
push
sahf
in
into
xor
cmp
dec
lds
push
rol
inc
or
xor
add
add
add
add
mov
addb
in
fists
inc
push
cwtl
adcb
pop
sbbb
mov
dec
test
pushl
test
outsb
scas
mov
add
inc
scas
add
lea
jb
lea
jb
and
loope
subb
jae
mov
clc
jne
cmpsl
jge
push
fstpt
dec
imul
pop
arpl
add
mov
sbb
jb
arpl
jb
ljmp
jge
iret
sbb
pop
push
cld
in
push
mov
adc
jbe
adc
push
fwait
cltd
cs
jbe
or
xor
add
les
addb
adc
xchg
out
push
mov
lcall
add
add
add
jb
mov
subl
jecxz
and
mov
push
sahf
ret
pop
dec
mov
mov
jg
or
push
dec
add
rcrb
cmc
mov
mov
in
jmp
cs
mov
stos
sub
pop
sbb
in
push
icebp
mov
jmpw
add
add
add
add
sbb
jbe
xor
adc
and
add
mov
outsl
popf
mov
icebp
jae
cwtl
pusha
lcall
jg
dec
sub
loop
inc
inc
gs
jle
sbb
jo
ja
sub
jmp
cmp
data16
ljmp
pop
into
mov
mov
jl
cmp
sub
add
in
add
fiadds
inc
ret
inc
enter
mov
data16
push
cmp
xlat
leave
xor
dec
outsb
add
fwait
xor
ljmp
dec
or
outsb
add
or
pop
xchg
cld
add
push
sub
jae
add
xlat
jne
inc
cmp
rclb
and
add
xchg
xchg
mov
pop
jmp
mov
push
enter
mov
add
inc
jns
xor
aam
pop
sub
add
pop
push
icebp
test
mov
mov
inc
bound
jb
lcall
lahf
arpl
mov
pop
fildl
jb
outsl
nop
sbbl
subb
jae
cmp
add
add
add
mov
xor
jbe
mov
add
aam
jmp
rclb
test
mov
mov
fs
lahf
mov
lahf
add
jb
add
or
enter
into
imul
mov
ret
insl
enter
call
ljmp
fs
inc
jmp
inc
add
lea
sti
or
mov
movb
and
fwait
ret
test
push
jb
aas
jl
clc
dec
fadd
inc
jno
add
jmp
add
or
lea
mov
jmp
mov
sahf
inc
and
fbstp
data16
icebp
adc
and
xchg
ret
iret
call
jp
sahf
sbb
xlat
addr16
mov
jecxz
bound
sbb
in
jne
sub
jecxz
jno
outsl
shrl
xor
jge
xchg
js
gs
bnd
jns
cwtl
das
in
inc
sahf
mov
ss
bound
sbb
in
aaa
add
xor
cmp
lods
cli
jmp
add
add
add
or
pop
shr
ljmp
insl
add
into
mov
shr
ljmp
dec
add
mov
inc
repnz
adc
movsb
dec
aaa
cmp
enter
inc
mov
pop
dec
clc
cmpsb
push
cmpsl
out
add
nop
movsb
push
add
jecxz
jmp
loop
fists
add
add
add
add
jmp
popa
pop
pop
stos
loop
mov
popa
xorl
test
fimull
adc
mov
push
pop
insl
mov
sbb
add
arpl
push
jecxz
rcll
pop
pushf
loop
jae
sub
mov
in
insl
mov
lret
aaa
into
jmp
push
dec
fcoml
sbb
mov
add
add
add
inc
xor
test
popf
test
insb
adc
pop
icebp
mov
jne
adc
dec
lret
cwtl
cmp
lahf
fwait
mov
icebp
xchg
fmuls
fstl
mov
subb
add
jg
mov
inc
jmp
insl
or
mov
add
add
add
add
dec
test
or
call
sbb
xchg
scas
std
in
jb
inc
rolb
pop
movb
mov
int3
adc
jne
loopew
xchg
hlt
or
shrl
xchg
mov
lock
push
mov
cmp
sbb
sbb
mov
add
add
add
add
enter
pushf
jmp
mov
cmp
and
pop
ret
gs
cs
in
cmp
icebp
xor
pop
push
repz
jno
sahf
fs
lds
scas
pop
cwtl
add
inc
xlat
jne
dec
lods
call
add
mov
and
adc
add
add
add
add
xchg
in
in
cwtl
and
fwait
push
mov
push
notb
add
dec
xor
mov
cltd
adc
push
or
pop
push
xchg
pop
push
ds
sbb
and
or
sub
xor
data16
and
xorl
sbb
mov
scas
ret
xor
and
and
adc
dec
mov
lock
xor
icebp
jecxz
imul
xchg
lss
popa
inc
mov
pop
jae
jb
pop
pop
les
add
sub
push
rcll
dec
mov
lock
jb
jecxz
inc
mov
rdmsr
lahf
sbb
data16
pextrw
mov
mov
add
adc
push
mov
je
pusha
bound
jl
and
pop
push
sahf
ret
jge
dec
fldcw
pop
repz
cmp
pop
adcb
insl
mov
aas
mov
clc
lea
addb
ljmp
adc
or
add
inc
xchg
adc
sbb
add
jno
out
cmp
add
mov
daa
out
add
out
xchg
out
add
stos
jl
data16
ret
mov
dec
out
jns
rcrl
aas
data16
in
stc
or
jmp
sbb
pop
jmp
stos
push
push
insb
push
ja
jno
lahf
cmpsb
inc
or
mov
pushw
jmp
xchg
daa
adc
pop
out
data16
out
sbb
lods
jno
pop
push
addr16
out
fs
mov
add
add
add
add
inc
out
cmp
jmp
pop
push
scas
sub
dec
call
loop
push
jo
out
pusha
loop
pop
fs
data16
incb
cmpsl
cmp
add
mov
add
mov
jae
mov
mov
add
cwtl
adc
rorb
jecxz
add
mov
pop
push
inc
fcmovnb
push
jl
gs
mov
xchg
mov
jb
lret
mov
lea
pop
push
dec
xor
xchg
test
mov
lea
into
bound
ret
faddp
in
jl
into
jmp
add
fwait
push
mov
sbb
mov
mov
mov
aas
adc
and
jle
bound
mov
jo
incb
mov
jae
inc
inc
add
fistpll
and
lock
lss
sbb
xchg
loopne
xchg
dec
dec
jnp
dec
push
fistpll
stc
fimull
cltd
jecxz
inc
dec
lahf
mov
gs
dec
and
fidivl
pop
rclb
clc
xchg
out
rclb
pop
mov
push
clc
push
out
jo
xchg
pop
mov
test
mov
rcrb
mov
add
xchg
loop
adc
xor
inc
shlb
adc
add
testl
rclb
pop
aam
add
xchg
add
std
xchg
lock
call
add
jg
sarb
or
sub
adc
push
out
fwait
jbe
fwait
adc
push
xchg
das
bound
test
movsl
addl
sbb
ret
jo
cwtl
cld
mov
adc
and
pop
xor
jmp
xor
jmp
and
imul
sub
mov
ds
xchg
shlb
fnstenv
cmpsl
loop
sbb
xchg
xor
test
mov
shrb
stc
xor
jmp
xchg
lea
lods
fwait
pushl
inc
lahf
call
adc
xchg
shrb
ret
xchg
sub
or
push
sar
cmp
dec
in
in
ljmp
push
mov
push
add
adc
lret
out
xchg
adc
fdivs
push
jne
and
cld
loop
sub
xchg
pop
add
and
lea
sub
push
push
xor
jge
adc
xchg
or
jb
and
jnp
pop
out
mov
mov
jo
push
xchg
stos
push
sar
sbb
push
mov
test
jne
and
shlb
outsb
mov
arpl
outsb
sub
xor
push
mov
icebp
pop
add
inc
or
dec
or
scas
arpl
xor
dec
adc
sbb
frstor
lea
jb
int
jno
int
xchg
cld
call
xor
add
add
add
sbb
insl
lretw
lds
add
xor
dec
rolb
stc
mov
int3
inc
add
cld
lock
push
iret
pop
jno
bound
sbb
movb
dec
mov
push
jno
mov
lret
xor
lea
ljmp
mov
das
sub
adc
jae
into
fcoms
xchg
mov
or
bound
stos
lcall
lret
out
jae
cs
jmp
mov
cmpsb
subb
add
movsb
icebp
jno
jmp
sub
mov
xor
jo
in
scas
mov
movsb
ret
push
cs
inc
mov
jg
outsl
bound
adc
insb
mov
pusha
mov
add
push
adc
mov
cmp
mov
pop
ljmp
add
add
dec
pop
push
pop
lret
mov
add
jb
add
movl
test
leave
data16
pop
addr16
andb
data16
jnp
adc
adc
out
jge
inc
cwtl
cmovae
mov
adc
cmpsl
push
add
adc
xchg
gs
std
xchg
xor
ds
pop
adc
rorb
dec
cmpsb
sbb
out
dec
jb
sbb
sti
ljmp
mov
cmp
mov
jmp
xchg
dec
andb
shrl
outsb
sbb
pop
mov
inc
push
sar
sub
add
add
add
pusha
mull
pop
mov
xchg
xchg
shr
jb
mov
jnp
inc
mov
stos
jbe
jb
pop
pop
jmp
inc
mov
fwait
fwait
sub
call
xchg
adc
and
out
mov
jb
int
icebp
lcall
sbb
cmc
pushf
push
clc
nop
movsl
mov
lea
rorb
dec
add
mov
dec
dec
dec
fnstsw
add
xor
mov
jno
jnp
xchg
gs
sti
jl
sti
cli
adc
jge
ljmp
jb
mov
lea
mov
ret
jne
data16
cwtl
inc
push
mov
data16
mov
push
movsb
adc
mov
xchg
jmp
add
add
add
adc
push
mov
in
jno
sub
iret
loope
sbb
jecxz
std
lods
jno
cmp
bound
mov
fs
in
xchg
inc
scas
sub
xchg
xor
jb
pop
jmp
movsl
les
sti
mov
in
jo
and
mov
and
test
jmp
sbb
xor
out
test
dec
and
inc
and
je
sbb
mov
dec
sbb
out
pop
fwait
incl
push
rcrb
gs
mov
dec
iret
es
jge
inc
mov
je
sbb
call
push
add
ret
dec
ja
sbb
push
push
scas
insl
js
xor
and
sub
add
and
jg
lcall
ss
decl
add
inc
jb
jnp
mov
fs
sbb
movsb
sbb
cld
fisubl
mov
mov
gs
inc
adc
scas
sbb
adcb
dec
sub
and
sub
insb
in
push
add
addr16
and
mov
subl
lret
outsb
xor
and
mul
nop
dec
ret
jae
jo
pop
push
dec
mov
ret
inc
mov
test
mov
xchg
ljmp
repz
idiv
jb
into
insl
sbb
jp
mov
mov
dec
icebp
pop
adc
rcrl
adc
add
add
add
inc
into
adc
dec
loope
repnz
push
jns
jns
shlb
mov
cmc
xor
mov
leave
lock
pop
xlat
enter
and
add
js
js
scas
sub
sti
inc
xchg
inc
clc
and
inc
xchg
movsb
adc
mov
movsb
in
jno
xor
clc
ds
and
add
add
add
dec
push
imul
loop
jno
pushw
jmp
jmp
or
inc
mov
lds
loop
incb
addl
insb
aad
cmp
jno
and
jne
xor
shlb
mov
dec
sub
mov
ja
lret
arpl
jb
mov
js
bound
cld
push
lea
add
add
add
pop
add
ljmp
mov
ja
pop
mov
jecxz
pop
inc
mov
sarb
pop
je
dec
xor
sub
xor
sub
or
ds
xor
push
pop
dec
adc
fdiv
in
ljmp
loope
jle
push
shl
xchg
fisttpl
and
dec
xor
stos
ret
mov
lea
cwtl
push
and
and
jae
mov
aas
sbb
outsl
mov
ljmp
les
jno
push
xor
test
subb
mov
icebp
outsl
cmp
or
arpl
sti
jmp
and
jae
mov
push
sub
add
add
arpl
jne
sub
mov
jae
test
jbe
outsb
or
imull
or
pop
popa
jne
adc
push
mov
add
push
out
mov
loop
pop
loop,pn
mov
lds
xchg
jb
xlat
sarb
mov
dec
mov
mov
ret
cltd
lcall
add
add
addl
pop
inc
mov
pop
mov
repz
sub
mov
ljmp
add
dec
aam
in
dec
xchg
aad
add
negb
lea
testl
or
out
mov
sub
jmp
cmc
test
cltd
ljmp
arpl
fidivs
push
jmp
dec
mov
add
add
add
lahf
adc
rclb
inc
cmc
push
cltd
jno
cmp
pushw
lret
loope
push
call
xor
jo
loope
pop
loop
inc
push
addr16
rorl
outsb
xorl
dec
push
cmpsb
fadd
jno
jbe
mov
in
jmp
sbb
jb
pop
out
jbe
push
fnstsw
pop
adc
cmp
adc
add
cmp
pop
ds
and
xlat
add
sub
pop
ret
push
rcrb
in
addl
scas
dec
inc
push
sar
dec
dec
sub
std
sbb
loop
sbb
in
or
jmp
sbb
push
mov
addb
call
out
into
bound
scas
and
inc
inc
lcall
cmpl
xor
cli
mov
push
cmc
nop
inc
jb
out
mov
push
int
lcall
and
outsl
mov
lret
lcall
das
pop
ud0
loop
xchg
sub
ljmp
out
mov
arpl
out
jecxz
pop
or
cmp
or
mov
fisttpl
jmp
xchg
ljmp
ljmp
pop
ljmp
testb
mov
movsb
lahf
add
jb
adc
push
repnz
push
mulb
shr
sbb
out
push
stc
popa
and
aas
stc
daa
scas
aas
shll
sahf
shlb
xchg
ficoms
add
or
daa
cmpsb
sahf
hlt
les
fiadds
push
mov
xor
push
push
sub
or
mov
xchg
xchg
insl
ss
bound
inc
xor
pop
out
mov
inc
xchg
xchg
sbb
or
loope
and
dec
sbb
fs
mov
jb
add
xchg
mov
divb
xchg
insl
inc
and
sub
and
data16
pop
aaa
jb
call
cs
fwait
mov
sub
jmp
xchg
gs
data16
push
inc
je
shr
inc
outsl
mov
pusha
lea
mov
add
adc
aam
or
and
add
mov
xor
repnz
jmp
add
inc
mov
jmp
add
sub
sub
fs
and
addl
mov
xlat
je
inc
sbb
bound
js
cwtl
je
rcrl
xchg
stos
pop
mov
nop
and
out
imul
sar
push
mov
dec
pushf
out
dec
mov
or
adc
cltd
mov
cmpl
icebp
loop
adcl
fwait
cltd
bound
jb
and
nop
pop
push
jmp
and
repnz
and
lahf
inc
push
sti
pop
ja
sub
lahf
arpl
xor
lahf
loopne
jae
outsb
mov
scas
imul
lea
jl
add
repnz
aad
jb
mov
pop
mov
es
adc
stos
and
inc
inc
and
loop
dec
cli
repnz
add
cmp
mov
ljmp
pop
notb
loopne
add
cmp
or
add
push
inc
dec
push
iret
mov
mov
pop
popa
push
data16
cmp
in
cmc
out
test
and
cmpsl
pop
mov
jb
test
jmp
je
in
cmp
hlt
inc
mov
xchg
xchg
jb
dec
nop
hlt
cli
sarl
fxtract
add
and
cmp
add
add
add
mov
push
adc
call
in
jo
in
pusha
sub
es
sub
pop
adc
addr16
inc
icebp
fldenv
jmp
cmp
add
insb
jg
jmp
mov
scas
sbb
mov
xchg
and
add
dec
cmp
inc
sbbb
in
in
pop
daa
xor
xchg
divb
push
fsubr
xor
hlt
in
dec
ret
push
jg
add
ret
data16
mov
mov
out
inc
mov
and
jp
and
test
jmp
push
adc
jg
out
mov
inc
xchg
decl
and
fidivrs
push
cmp
mov
xchg
mov
push
mov
pop
sti
sbb
mov
popf
arpl
and
stos
test
add
enter
rorb
popf
arpl
loope
dec
jmp
push
out
jns
add
pop
mov
dec
xchg
lea
jmp
test
add
daa
adc
fdivl
mov
sub
cmpsb
fcmovnb
sbb
add
and
cmp
inc
movsb
in
inc
inc
jno
fdivl
add
add
add
fwait
repnz
pop
lcall
cmp
mov
dec
dec
repz
lea
aas
scas
mov
fimuls
jb
jl
rclb
mov
std
ljmp
in
aas
ja
cli
or
push
inc
adc
and
xchg
mov
and
mov
mov
add
add
add
add
mov
mov
push
addr16
sahf
int
xchg
and
jo
leave
loope
sub
mov
insl
jmp
in
cmp
sti
mov
mov
jmp
ret
enter
mov
jmp
dec
movq
cmp
add
sbb
cwtl
mov
scas
fstl
xchg
cld
gs
jmp
int3
jb
jno
nop
add
fsubr
dec
sbbl
cs
enter
and
cs
enter
sub
dec
push
cmp
pop
enter
pop
in
insb
das
pushf
xor
out
push
xchg
mov
data16
jp
decb
mov
adc
and
mov
push
in
inc
mov
addl
jp
add
scas
pusha
jne
ret
arpl
dec
sahf
jecxz
adc
dec
pop
jmp
popf
arpl
jb
fs
jne
xchg
adc
popf
out
jbe
pop
sbb
shll
xorl
mov
sahf
adcl
mov
jns
mov
movsl
mov
add
sbb
jb
out
nop
jb
arpl
jb
mov
stc
fwait
mov
dec
jbe
insb
push
sub
and
xor
enter
mov
je
pop
scas
and
pop
fidivl
in
dec
sbb
popf
subb
xor
jmp
mov
lret
in
bound
adc
mov
popa
frstor
add
adc
push
lret
gs
lahf
in
ret
cmp
notb
leave
jb
mov
add
cmpb
jge
lea
jb
int
aaa
jmp
lods
sub
jg
loop
push
cltd
and
dec
push
fcoml
fdivp
data16
leave
addr16
cmp
sub
es
ror
sbb
sbbl
mov
iret
in
mov
orb
mov
inc
cwtl
push
mov
aad
stos
loopne
cmp
in
movsb
loope
lock
lret
cmp
icebp
das
sbb
std
jl
jmp
out
adcb
jb
adc
dec
add
lods
arpl
add
jnp
lcall
add
test
inc
xchg
pop
and
adc
add
or
mov
imul
add
sbb
arpl
inc
adc
or
aaa
sbb
jbe
add
xor
xlat
je
imull
or
xchg
in
iret
jae
dec
add
push
cmp
pop
jmp
add
pop
push
shll
mov
inc
cmpsb
add
rorl
add
mov
cmp
fldt
jp
inc
icebp
pop
pop
cmp
das
xor
mov
adcb
rclb
sub
sbb
popf
arpl
inc
aas
and
popf
arpl
dec
push
flds
or
bound
add
xor
inc
mov
add
mov
and
pop
mov
addr16
inc
xor
rcll
loopne
and
scas
pop
inc
xchg
mov
sbb
lea
adc
lds
add
inc
repz
dec
jle
mov
into
sbb
add
rorb
xchg
jnp
int3
and
stos
add
mov
cld
push
lock
stos
test
popa
push
mov
scas
stos
mov
add
stc
jp
icebp
jg
fmul
jecxz
mov
push
mov
dec
mov
subl
mov
mov
sbb
mov
add
cmpsb
sbb
dec
fldenv
jmp
sub
add
add
add
add
jmp
stos
cltd
sbb
push
repz
sarl
xchg
sbb
push
push
jb
jno
cmpsb
mov
mov
test
push
push
leave
fs
xor
xor
test
jg
fldt
mov
lock
sub
jmp
add
add
push
mov
xlat
mov
scas
jbe
add
jecxz
adc
cwtl
je
std
test
inc
mov
cltd
call
sbb
fistpl
popf
push
shrb
imul
in
lock
jg
jno
mov
enter
xor
pop
loop
xor
pop
push
push
inc
pop
popa
push
cmp
add
sahf
push
data16
fs
daa
xor
enter
mov
loopne
pop
mov
nop
jmp
lods
bound
pop
and
xor
jp
adc
insl
sar
jg
aas
jb
pop
jmp
out
aaa
pop
outsl
insl
arpl
inc
jbe
pop
cmp
mov
mov
clc
mov
and
out
and
lcall
ret
pop
sub
cmpsl
jnp
lock
and
xor
inc
xchg
shlb
imul
push
lds
rclb
dec
add
insl
or
jb
inc
or
mov
cmpsb
mov
jb
shlb
cmc
lock
movsb
inc
push
mov
fiadds
push
fidivrl
js
stos
insl
mov
mov
pop
mov
lea
jb
fstps
sahf
dec
icebp
pop
addb
xchg
and
scas
repnz
mov
jb
pop
jno
jmpw
in
je
sbb
das
outsl
dec
popf
push
rcll
vpcmpgtb
dec
mov
das
sbb
fisubl
mov
in
add
dec
mov
mov
int
insb
xchg
adcb
add
push
int
pop
ret
sbb
insb
bnd
push
mov
test
jno
cmpsb
mov
jmp
xchg
aam
aad
jmp
fisttpl
sahf
push
sub
push
ljmp
sub
jne
xchg
incb
ficompl
cmpsl
jmp
xor
in
inc
lds
push
cld
push
cltd
addl
adc
cmp
or
pop
add
jbe
add
je
add
adc
mov
cwtl
adc
or
mov
lahf
pop
sbb
pusha
push
sti
push
jae
daa
test
add
add
add
jb
loope
sbb
push
xchg
push
jne
pop
push
movsl
push
cs
andb
cmp
mov
xchg
into
mov
inc
add
ficompl
fldl2t
push
sbb
lcall
js
cmp
ljmp
jb
and
sub
dec
sarl
jg
xchg
aas
add
and
in
lahf
and
lods
adc
cmp
jb
popf
cmp
lret
sbb
inc
jmp
enter
xchg
add
in
lea
stos
mov
xor
jge
stos
xchg
pop
idivb
inc
call
lret
fadds
scas
clc
mov
jp
dec
not
bound
and
pop
scas
pushf
stc
mov
add
add
add
jmp
insl
js
test
inc
add
add
lea
dec
pop
jns
leave
pop
jle
dec
shlb
test
and
cmpsb
cmpsb
pop
sub
movsl
push
ret
test
jmp
repz
mov
sarb
insb
mov
bound
mov
inc
sarl
inc
add
sbb
loop
jbe
outsb
inc
cmpsb
inc
add
mov
outsl
dec
outsl
sbb
scas
movsl
int
sub
addb
pusha
popf
add
and
xchg
mov
lock
movsl
test
mov
test
xchg
dec
fdivs
add
es
imul
jno
add
add
mov
fsubrl
fsubrl
cwtl
je
test
add
add
add
add
add
or
jg
insb
enter
pop
insb
mov
xchg
gs
std
mov
pop
or
push
and
in
pop
sub
leave
xchg
cld
test
jne
sti
xchg
sysret
cwtl
decl
xchg
je
repz
cmp
or
stc
mov
enter
sti
add
bound
jb
xlat
pop
icebp
movsl
xchg
push
in
std
bound
jb
inc
test
mov
and
inc
pop
and
negl
inc
outsb
enter
insl
jo,pt
push
movsb
bswap
push
xchg
mov
jg
bound
movsb
or
jo
add
leave
shlb
out
lock
std
cltd
stos
in
popf
dec
xor
ljmp
hlt
ds
add
add
add
add
movsb
sbb
jle
sbb
lcall
dec
pop
nop
addl
pop
lret
sbb
imul
ret
jne
or
orb
insl
add
ret
faddl
ret
jecxz
or
jecxz
inc
sbb
inc
insl
or
fldl
aad
mov
lds
test
mov
mov
add
add
add
lods
test
les
popf
call
les
arpl
les
data16
jp
push
jp,pn
inc
ss
call
cmp
xchg
es
repnz
inc
mov
cmpl
push
xor
push
ljmp
outsb
mov
ja
jmp
gs
gs
add
insb
jl
mov
gs
fs
sbb
hlt
cli
xor
xor
gs
movsb
cmc
jno
in
hlt
gs
cmp
out
data16
cmp
int
in
mov
addr16
jbe
dec
sub
jg
ret
cld
les
fwait
xor
std
enter
lds
mov
arpl
mov
and
mov
lds
pop
xchg
jg
scas
ret
push
ds
int3
fmull
mov
les
popf
repnz
push
mov
in
dec
xlat
lods
popa
mov
ja
in
add
mov
aad
xor
fwait
add
and
jbe
ljmp
insl
arpl
pop
sub
jae
ljmp
add
add
sub
insl
iret
add
inc
mov
jb
sub
xor
pmulhuw
pop
sbbl
iret
or
lods
sbb
xor
and
jp
scas
mov
in
dec
div
jns
add
mov
mov
imul
push
xlat
enter
dec
ljmp
test
pop
jmp
cltd
lret
arpl
and
xchg
jnp
pop
popl
adc
lea
jb
mov
lret
jb
lea
pop
add
xchg
lea
stc
lea
push
les
add
lods
add
or
xchg
lds
sti
scas
add
jb
cmc
jnp
and
or
add
mov
add
xchg
dec
sub
ljmp
jbe
jbe
inc
cmpsb
popa
mov
ss
ss
jp
lds
jbe
sub
outsb
mov
dec
fldenv
je
mov
jmp
jae
data16
test
mov
xor
mov
pushw
or
movsl
jno
loop
add
or
add
inc
int
inc
sub
loop
jmp
bound
or
lret
push
jmp
push
enter
lea
int3
lea
pop
xor
add
add
int
inc
mov
or
pusha
sub
fidivl
adc
loop
pop
ljmp
push
pop
push
and
inc
and
jae
and
cltd
ljmp
insl
mov
inc
aas
popa
xchg
iret
insb
dec
pushf
xchg
data16
inc
adc
push
add
inc
adc
out
jne
and
ja
cli
cmp
mov
addr16
addr16
jb
outsl
fadds
pop
arpl
jge
add
test
pop
sbb
aas
pop
mov
in
lock
add
add
add
add
pop
call
mov
mov
je
sarl
jb
bound
jo
out
outsb
add
mov
add
mov
mov
jb
mov
lds
add
push
cmp
aad
inc
dec
mov
jg
jo
jb
or
imul
add
insl
cmp
jb
or
push
fimull
add
add
add
cmp
mov
out
mov
and
lea
cs
dec
lods
lds
aam
enter
into
cmpsb
sub
and
adc
mov
jmp
mov
jb
xchg
inc
movsb
mov
push
fdivrs
lret
std
inc
dec
cmpps
add
adc
and
add
add
add
lret
inc
std
push
inc
in
out
pop
push
jno
xor
jns
jmp
inc
jmp
push
test
inc
sbb
mov
jno
outsb
or
data16
jmp
mov
jmp
insl
push
shlb
jno
and
or
jmp
sarl
outsb
fs
or
mov
add
add
add
push
dec
ja
jecxz
adc
adc
daa
lods
shll
lret
pop
es
adc
sub
popf
adc
fcmovb
jmp
add
lds
mov
cmc
pop
jge
cmp
xlat
leave
add
test
xor
lds
xchg
in
icebp
xor
push
jno
push
xchg
std
int3
lods
fs
sub
mov
add
add
add
add
jmp
shlb
inc
adc
popa
cwtl
mov
data16
dec
add
daa
lea
mov
mov
mov
mov
stc
and
push
das
adc
add
loopne
xchg
ja
mov
arpl
sti
or
xchg
loop
je
test
add
add
add
add
cmc
xchg
mov
scas
xchg
bound
jb
data16
pop
dec
out
in
addb
inc
dec
sub
mov
enter
mov
fwait
pop
adc
xor
dec
push
adc
pop
mov
lods
outsl
out
ljmp
push
clc
addb
loope
das
cs
jl
clc
xchg
add
or
add
mov
jns
cmp
mov
jmp
or
cmp
cld
mov
outsb
add
test
das
clc
adc
sar
jg
fimull
or
jb
rolb
adc
cwtl
jge
or
dec
mov
inc
subl
in
jno
jmpw
jbe
add
outsb
repnz
test
bound
cmp
jmp
cltd
jle
test
adc
mov
popw
lods
fsubrl
jns
mov
jb
into
xchg
inc
jo
sub
sub
cltd
dec
xchg
jle
ds
je
sub
call
xchg
jmp
scas
jecxz
add
fadd
addr16
fldpi
rorl
and
xchg
add
add
xlat
jmp
dec
lcall
loopne
add
idivb
pop
and
add
mov
mov
pop
and
add
mov
addr16
lret
lret
and
add
mov
cwtl
lret
xchg
shr
rorl
pop
and
add
mov
jge
std
dec
outsl
mov
sahf
dec
pop
push
mov
and
pop
outsl
test
push
xchg
mov
ss
hlt
stc
push
movsb
stc
sbb
mov
pop
in
dec
jbe
and
lds
lahf
daa
lret
lods
cmc
movsl
daa
stc
lret
add
fdivrs
push
stc
xchg
jmp
ss
dec
sub
pop
arpl
mov
movsb
pop
cmc
in
or
xlat
push
push
mov
imul
push
insb
sub
ja
jns
outsl
mov
pop
push
fs
adc
cmpsl
cmovl
jb
fmuls
in
arpl
jb
adc
sbb
add
lea
insb
add
xor
mov
out
movsb
pop
jg
and
fnstsw
repnz
dec
mov
jmp
ret
pop
lea
jb
jo
cmpsb
ret
xor
bound
inc
clc
jmp
adc
enter
mov
adc
in
incb
add
cmp
int
adc
jb
jno
cmpsb
xchg
mov
push
cwtl
pop
jmpw
and
adcl
cmp
push
enter
inc
lahf
fiadds
jmp
or
repnz
inc
sub
cli
mov
sahf
sbb
ljmp
cmpsb
push
add
mov
sbb
int
scas
add
jmp
lea
bound
push
jle
and
mov
push
mov
dec
sti
inc
and
xchg
cwtl
cwtl
outsl
jmp
dec
jnp
popa
ja
fistl
add
imul
pop
mov
je
jmp
and
rcrl
fwait
lds
pop
mov
and
mov
jecxz
fcmovnb
data16
add
outsb
lea
lcall
xchg
pop
sub
lcall
lahf
and
pop
or
sahf
pop
push
pushl
jg
stc
scas
jnp
and
and
out
sbb
movsl
xorl
push
push
add
mov
inc
push
sbb
xchg
jnp
repz
arpl
mov
sbb
add
add
add
add
add
jne
ss
and
cs
negb
gs
lds
call
imul
mov
jb
push
call
rclb
cwtl
xchg
mov
jb
xorl
push
roll
mov
mov
nop
jno
mov
jb
roll
fldl
jb
jbe
lea
jne
dec
sahf
jae
push
inc
xor
leave
out
enter
xor
popa
xor
cltd
ret
lods
lods
rolb
rorl
mov
fs
jmp
outsl
ljmpw
test
in
xor
sub
jmp
or
xchg
push
loop
jo
imul
add
add
add
aad
and
jb
cmpsl
call
adc
or
repz
inc
mov
mov
in
xchg
aad
push
fdivl
jne
jno
lods
jb
fnsave
cli
mov
loop
outsl
data16
adc
loopw
lcall
sbb
inc
repz
shll
cmp
sldt
add
add
add
add
sbb
dec
inc
ja
push
mov
in
cmp
xchg
int
jecxz
sbb
pushw
xchg
daa
lea
lret
xchg
test
inc
add
jo
or
xor
push
inc
xor
rcrl
aam
jecxz
aam
aas
add
leave
in
inc
outsl
mov
jnp
jb
arpl
mov
fcom
and
jbe
in
push
addr16
add
jbe
jge
fistpll
insl
outsl
cwtl
mov
mov
sub
pop
add
arpl
pushl
mov
not
data16
outsl
mov
mov
out
inc
jb
and
loopne
jmp
inc
cmpsb
sbb
dec
out
xchg
iret
adc
mov
jmp
cmp
jae
pop
jmp
mov
out
dec
add
lahf
jno
dec
pop
call
cmp
dec
addl
jle
stc
push
mov
push
rorl
push
mov
cmp
pop
jl
jmp
fincstp
icebp
adc
or
sbb
testb
ret
out
popa
mov
and
dec
mov
insl
arpl
sub
sbb
pop
jnp
stos
addl
test
cltd
jae
out
outsl
push
shl
lock
mov
fs
pop
push
addr16
iret
jmp
lcall
and
imul
fs
les
jl
jno
cmpsb
ss
cmp
mov
jmp
cmc
jg
insb
mov
pop
push
and
jae
shrb
cmc
jmp
push
jmp
mov
lea
icebp
bound
lods
pop
pop
inc
add
jecxz
and
jbe
inc
mov
daa
incl
ja
mov
jae
fwait
inc
xlat
movhps
and
jp
test
add
push
adc
add
add
add
es
or
ds
data16
and
and
insb
aaa
adc
rolb
orb
mov
orb
filds
cwtl
call
into
jecxz
dec
pop
jecxz
push
pushw
gs
pop
cwtl
xor
jb
xor
imul
add
fwait
xchg
add
mov
mov
nop
loopne
jae
out
jbe
arpl
icebp
add
fsubrs
enter
adcl
xlat
and
sbb
jb
sbb
add
mov
mov
fimuls
cmpsb
rorl
add
dec
adc
jnp
out
lds
std
addl
add
add
add
cwtl
leave
call
cmp
sbb
jb
sub
test
or
pusha
lea
cmp
mov
nop
jns
lret
idivl
imul
inc
lea
jb
jns
pop
pusha
add
iret
push
jb
or
xchg
scas
jge
mov
cltd
roll
pusha
lea
mov
xor
push
cwtl
push
incb
pop
je
data16
pushw
leave
addr16
jmpw
sub
stc
jmp
arpl
jno
loope
insb
xorw
mov
fisubrl
sub
pop
sub
rcrb
and
pminsw
dec
arpl
jno
xchg
hlt
cmpl
add
add
add
add
imul
out
lahf
fs
sbb
addr16
jmpw
inc
add
iret
jle
iret
jle
push
xchg
filds
or
push
xchg
shlb
sbb
jecxz
xlat
and
mov
ret
fldt
xor
and
enter
filds
cltd
ret
dec
data16
mov
inc
xor
inc
pop
add
fwait
ret
dec
popw
push
les
mov
leave
jecxz
push
and
dec
ret
data16
cmp
dec
push
inc
mov
std
sbb
lret
sub
xchg
dec
out
mov
mov
jnp
add
sbb
adc
jbe
mov
imul
jmp
push
add
in
add
or
out
cwtl
cmp
lret
stos
push
hlt
cmc
popa
add
sbb
adcl
add
aas
adc
jp
push
and
and
ljmp
jb
add
mov
aaa
push
dec
mov
cltd
ret
and
cwtl
mov
jb
pop
jp
mov
mov
add
add
add
movl
pushf
jp
mov
outsl
inc
push
pusha
mov
jb
adc
insl
testb
xchg
stos
mov
adc
mov
add
cmpl
inc
ljmp
jp
mov
dec
and
push
jno
orb
jne
lea
enter
add
adc
in
movsl
cmp
add
mov
and
in
push
addr16
iret
or
mov
jmp
mov
in
fs
pop
pop
inc
jg
enter
pop
adc
outsb
cwtd
and
inc
jno
cmp
push
mov
add
cmpsl
adc
inc
inc
insl
jae
data16
sbb
movsl
add
ljmp
pop
inc
fnstsw
mov
ret
sub
lods
cwtl
xsaves
adc
inc
arpl
mov
pop
in
adc
and
insl
stos
jle
push
rolb
pop
inc
mov
adc
jl
inc
sub
inc
insb
or
push
mov
jno
push
mov
jmp
add
jmp
ja
in
mov
lea
outsb
popl
mov
jmp
mov
mov
sbb
xlat
add
and
ja
inc
xchg
xchg
mov
das
shlb
pop
rorb
ret
mov
aas
jb
dec
test
xorl
and
jge
in
mov
add
mov
xor
pop
imul
lods
ljmp
adc
je
cmc
xchg
push
inc
ljmp
jo
mov
mov
repnz
out
outsb
push
insl
jb
adc
xor
jae
mov
call
dec
xchg
push
mov
pop
mov
xchg
lret
push
mov
add
mov
inc
mov
leave
out
lds
mov
dec
clc
imul
add
xchg
stos
mov
adc
test
add
jno
lea
popa
pop
mov
test
mov
mov
jb
inc
call
jno
lea
and
insl
pop
les
jno
xor
call
add
pop
addr16
pop
xchg
jle
ret
jmp
sbb
mov
lods
mov
pop
xchg
inc
add
dec
fnstsw
inc
or
push
sub
dec
jmp
xchg
sub
jno
test
jmp
outsb
mov
in
cmpsl
outsl
loopne
movl
push
test
loope
jno
test
add
add
add
add
jb
mov
jmp
xor
mov
adc
and
inc
incl
add
xchg
je
jae
leave
pop
dec
sub
dec
cmpsl
call
nop
mov
xor
jg
sbb
inc
mov
xchg
mov
dec
sub
dec
jg
add
cwtl
je
dec
stos
call
push
jg
xor
loope
cmp
and
adc
dec
mov
add
in
jb
decb
stc
mov
dec
mov
aas
mov
mov
mov
xchg
ja
icebp
xor
push
idivb
incb
ja
lods
mov
call
sub
ja
sbb
ja
lahf
push
xor
cli
sbb
sbb
in
into
or
clc
incl
cmc
fdivs
and
xchg
dec
inc
fbstp
or
xor
jmp
push
js
and
pop
addr16
ljmp
ror
inc
mov
mov
in
jl
adc
iret
mov
add
mov
cmp
scas
rclb
mov
xchg
xchg
stos
or
cmp
out
xor
add
jl
enter
in
sbb
fimull
cmpsl
inc
orb
mov
pop
or
repz
push
lea
inc
inc
shlb
inc
clc
js
pop
mov
icebp
cmc
lock
sub
inc
data16
dec
add
jb
outsb
popa
xorb
in
sub
jmp
and
pusha
pusha
push
pop
data16
mov
in
sub
jl
and
or
jge
outsb
insb
xor
or
fnsave
push
in
jle
mov
mov
bound
xor
jb
adc
rol
addr16
xor
retw
jbe
xor
sarl
sub
int
daa
pop
pop
push
loop
mov
ja
push
test
add
pop
jnp
fwait
push
ljmp
mov
test
cmp
xor
adc
pop
addb
dec
retw
loopne
inc
sub
dec
in
rcl
or
add
mov
or
cmpsb
and
dec
test
or
mov
or
or
add
xchg
data16
mov
add
add
add
add
inc
xor
pop
dec
iret
xlat
ret
jp
mov
add
mov
xorl
jnp
lea
cltd
out
enter
pop
and
scas
dec
sti
stos
xchg
pop
jnp
adc
push
xor
mov
out
mov
out
negl
imulb
imul
je
in
sbb
icebp
cmc
repz
add
add
add
add
push
and
mov
mov
jp
adc
pop
call
ret
data16
fstpl
data16
ret
lds
nop
sti
cmp
fistps
ret
nop
pop
fdivrl
lods
popf
add
add
sbb
inc
inc
leave
pop
adc
pop
loopne
nop
jg
lea
mov
stos
mov
call
add
add
add
add
sahf
push
jns
pop
inc
ret
sbb
fistps
sub
int
incl
sbb
rcr
pop
pop
sbb
add
add
push
stos
push
mov
in
fiaddl
rcrl
mov
mov
cltd
jnp
push
pop
cmp
rcrb
cwtl
cli
add
leave
loope
mov
ljmp
out
cmp
add
add
dec
xchg
cmp
clc
lret
jmpw
inc
int
mov
mov
testb
js
jge
push
xchg
bound
xchg
cld
jle
sub
sbb
imul
or
jg
pop
inc
cwtl
dec
loop
pop
add
lods
cwtl
xor
lods
add
inc
xchg
push
xchg
add
jle
xor
xchg
xorl
test
cwtl
incl
std
jg
daa
lret
aaa
inc
mov
adc
xor
incl
movsb
jne
inc
sub
inc
mov
push
movsl
cwtl
push
mov
pusha
dec
outsw
pop
lock
std
jg
mov
les
jb
jle
cmc
fsubr
and
mov
outsb
test
mov
ljmp
dec
jbe
pop
jle
dec
pop
mov
mov
dec
adc
arpl
shrl
addr16
int
pusha
xchg
add
pop
pop
xor
stc
push
jecxz
jbe
pop
add
rcrl
outsb
pop
testb
dec
fistl
pop
in
jbe
rol
add
xchg
xor
mov
mov
test
lds
shlb
testl
fdecstp
sti
stos
jb
mov
pop
ficoms
pop
ljmp
insb
inc
ret
xchg
add
push
inc
lock
mov
fildll
pop
roll
aas
mov
mov
aad
jb
adc
add
data16
inc
fisttpll
shlb
test
mov
push
push
mov
arpl
jae
int
jle
aam
add
filds
outsb
jmp
cwtl
cwtl
jecxz
jl
adc
jno
jmp
xlat
lds
popa
ds
lds
popf
xchg
cmp
lds
mov
add
and
popf
cmp
mov
std
mov
and
outsb
dec
ja
jno
jmp
jmp
mov
fisttpl
scas
mov
data16
cmpsl
inc
adc
loopne
stos
push
or
loop
or
pushf
add
enter
push
in
into
mov
aas
xor
ds
call
pusha
jle
adc
add
xchg
shl
fcmovnb
callw
add
inc
and
add
xor
data16
xor
adcl
jmp
mov
and
sub
inc
and
loopne
inc
and
jle
mov
xor
mov
and
push
in
push
xchg
jmp
push
out
and
inc
mov
or
mov
add
add
add
dec
push
lret
hlt
mov
xor
pop
mov
lcall
lea
mov
inc
mov
fs
arpl
push
jns
add
arpl
mov
aas
jb
mov
lods
bnd
jno
rorl
jb
cli
mov
sahf
bound
sti
add
dec
or
arpl
les
sbb
cmc
pop
icebp
jns
jg
mov
mov
jmp
les
mov
inc
dec
hlt
mov
lea
dec
cmp
shll
mov
push
shl
jle
sahf
or
push
mov
mov
lret
rcl
je
lcall
add
add
add
add
and
jns
pop
loopne
jmp
xchg
mov
pop
addl
outsl
in
xchg
xor
jmp
dec
mov
jbe
xor
in
sbb
aas
cmp
mov
outsb
bound
cltd
or
clc
ret
pop
add
add
les
jno
mov
ss
test
aas
test
shrb
pushw
lea
jmp
imul
repnz
push
add
inc
or
cmp
dec
push
mov
fs
jmp
jg
inc
insb
outsl
pop
in
jl
insb
in
jl
push
in
pop
jae
mov
outsl
mov
mov
in
pop
sub
adc
inc
or
or
add
inc
add
dec
add
pusha
inc
test
es
sbbl
inc
pop
add
dec
in
mov
pop
mov
mov
add
sarl
ret
add
dec
out
jns
int3
es
mov
arpl
sbb
and
jne
xorb
sbb
xchg
dec
stos
insl
mov
xchg
push
inc
sldt
add
add
add
add
shll
pop
icebp
sbb
mov
fdivrl
div
clc
xchg
push
inc
pop
sbb
cmp
lcall
jg
pop
arpl
sti
sbb
stc
push
stos
mov
jns
push
dec
pop
sbb
jge
imul
arpl
push
data16
jae
loopne
jb
lea
out
adc
sbbl
add
add
add
add
xchg
mov
jnp
out
xor
fcomip
out
enter
push
inc
in
mov
stc
aam
dec
repnz
inc
jb
es
ret
cmc
dec
and
or
mov
jb
dec
cwtl
cwtl
mov
mov
adc
jno
inc
lea
inc
ljmp
sbb
jecxz
xchg
shr
add
or
add
add
add
arpl
data16
xor
cmc
test
addr16
stos
shl
iret
fs
insb
test
ss
inc
mov
sbb
cmp
leave
sub
stos
pop
jecxz
call
jne
je
je
push
test
fcompl
bound
jne
sbb
inc
ljmp
iret
fs
lods
iret
fs
ja
and
add
add
add
cmp
push
jmp
outsl
and
insb
ds
fcmovne
aaa
pop
loopne
out
aas
lret
cmp
mov
in
push
mov
in
test
data16
push
inc
sub
mov
cwtl
call
mov
insb
mov
push
inc
xor
str
pop
data16
pop
imul
add
rclb
and
ret
sub
loop
insl
lret
xor
sub
je
les
and
loop
jo
loop
push
sbb
scas
and
push
int
shrl
mov
and
scas
and
jmp
jb
sbb
sub
data16
fisubs
pop
mov
int
ss
add
fwait
call
jae
arpl
ret
stos
xlat
and
adc
xlat
mulb
adcl
arpl
or
add
fs
inc
jl
push
test
lret
jb
arpl
ret
cmpsb
add
sbb
gs
out
jmp
leave
out
dec
add
lods
lds
mov
dec
push
sbb
mov
add
add
shl
mov
add
mov
fmulp
jl
xlat
dec
inc
loopne
cmpsl
lahf
dec
inc
or
xchg
fidivrl
icebp
ljmp
sub
or
jge
lea
jb
lcall
adc
dec
add
push
adc
jb
jg
sbb
int
inc
inc
mov
push
arpl
cs
cmp
sub
adc
jle
gs
outsb
cwtd
ret
je
jmp
sti
mov
pop
push
psubsw
ljmp
sbb
push
jbe
and
pop
lcall
or
lds
adc
cld
jno
in
stos
outsb
sbb
in
jae
data16
lcall
faddl
bound
gs
out
in
add
and
push
lds
add
addl
fwait
bound
jae
adc
jne
sbb
jmp
adc
xchg
mov
and
push
xchg
inc
and
mov
dec
data16
lods
jmp
hlt
add
xlat
je
rcrl
daa
ret
adc
shll
add
out
inc
add
sub
rolb
add
jmp
pop
scas
int
sub
pop
outsl
push
mov
data16
sbb
stc
idivl
sub
insl
jae
movsb
xor
mov
daa
jbe
stos
sub
jp
push
sub
cwtl
cmp
and
adc
xchg
mov
sub
lods
outsl
add
lahf
push
stc
jno
fstpt
js
mov
add
mov
push
lcall
xchg
or
adc
arpl
pop
sub
jb
arpl
xchg
add
into
xor
jl
sub
adc
int
xchg
add
and
adc
enter
dec
or
mov
lds
add
jne
dec
test
mov
jg
jb
xchg
add
cltd
push
jnp
mov
jl
loop
sbb
mov
stc
stos
popa
lock
dec
dec
add
xchg
inc
mov
or
pop
mov
cld
movsb
data16
aaa
mov
pop
jno
jmpw
aad
jns
adc
jno
xchg
insb
je
sub
jge
and
mov
shlb
out
loop
push
adc
or
jmp
faddl
or
mov
pop
jb
jmp
outsb
pusha
or
shrl
jg
adc
pop
ljmp
bound
pop
popa
pop
data16
push
and
add
leave
jmp
push
lret
adc
xchg
add
cs
arpl
sarb
fidivrs
jo
mov
adc
mov
jb
cmpsb
or
shl
and
out
cmc
in
into
arpl
add
outsb
cmp
sbb
mov
enter
aam
push
gs
xchg
mov
inc
popl
add
leave
addl
mov
stos
jg
push
jecxz
jnp
mov
sbb
xchg
add
scas
insb
or
mov
fsubr
out
gs
and
out
gs
xor
cld
dec
sbb
lcall
cmp
cmp
stc
test
mov
push
adc
subl
add
add
add
js
mov
jo
cwtl
xor
or
mov
repz
jae
sahf
mov
jno
xor
mov
mov
test
jp
jl
fidivrs
out
int3
enter
jns
jnp,pn
in
cmp
inc
popa
sti
js
jg,pn
xchg
pushf
mov
xchg
mov
dec
aas
fdivs
out
js
cs
jns
ja
mov
mov
mov
add
or
jno
xchg
pusha
dec
aas
sbb
int
mov
sti
add
xchg
xchg
mov
cmp
xchg
add
test
scas
out
in
and
jno
xor
out
xchg
jb
push
stos
xchg
inc
cmp
aad
push
adc
xor
shr
add
dec
pop
idivb
push
jo
jmpw
in
jbe
ljmpw
jno
push
or
sub
adc
cwtl
pusha
cmp
ss
jno
ja
xchg
dec
scas
ret
push
pop
and
push
imul
sub
out
ss
inc
scas
call
nop
xchg
inc
adc
or
clc
add
inc
add
sbb
and
stos
xor
xorb
mov
push
add
jmp
lea
not
lea
sub
stos
pushw
lods
lods
add
shll
fucomp
iret
sub
add
int
add
cltd
inc
push
mov
inc
sbb
jg
sbb
cmpsb
inc
adc
int
incb
inc
call
cmp
jb
xchg
insb
mov
mov
and
shll
sbb
out
and
sub
dec
nop
jb
arpl
jb
in
inc
mov
jmp
add
cs
mov
push
mov
and
movsb
sub
lds
or
jb
arpl
pop
sbb
add
scas
sbb
inc
imul
aas
adc
sub
and
lea
jb
int
inc
xor
mov
mov
xchg
jbe
in
subb
rorw
repz
pop
repz
pop
jb
fiadds
jo
lea
aas
lods
mov
fstpl
mov
pop
and
add
add
jmp
jne
pop
lea
inc
dec
jnp
lods
xchg
mov
or
push
pop
xchg
cld
add
loope
repz
and
mov
repnz
mov
and
lods
jo
out
lods
jmp
push
in
jmp
ljmp
test
add
xchg
jmp
add
add
add
dec
mov
shll
lea
arpl
mov
lea
pushw
xor
add
xchg
jmp
inc
lods
sub
and
jmp
xor
enter
negl
add
cmpsb
inc
sub
cli
lcall
and
cmpsb
jne
mull
add
in
lock
test
ret
lea
aad
inc
push
add
inc
and
inc
mov
push
fiadds
not
add
test
add
popf
inc
xor
enter
in
push
mov
push
data16
jmp
in
dec
cmpsl
xchg
xor
add
arpl
call
daa
and
mov
arpl
add
and
push
out
dec
and
leave
in
int
loopne
add
xchg
xchg
repnz
jg
leave
inc
jbe
sbb
test
mov
add
push
jmp
dec
sub
rcrb
mov
push
mov
sub
fwait
push
arpl
mov
pop
add
sub
jb
push
and
jecxz
mov
cmpsl
js
imul
inc
outsb
out
push
sub
or
daa
ret
inc
jb
icebp
daa
mov
push
ljmp
dec
rolb
jb
add
mov
mov
jb
mov
jbe
dec
ljmp
push
dec
lods
divl
push
inc
jb
mov
or
lea
jmp
and
popa
mov
push
inc
push
into
add
push
sahf
bound
lret
add
mov
sub
xor
cmc
push
adc
xchg
ljmp
mov
xchg
xor
mov
adc
jo
xor
add
or
jmp
pop
aas
or
add
and
mov
aam
jmp
jp
and
sbbb
bound
jp
fstpt
xchg
push
out
test
outsl
and
jg
in
insb
outsl
shr
int
jns
add
lret
add
add
xlat
shll
call
into
xor
test
lret
mov
adc
jg
cltd
incl
iret
add
data16
sbb
in
fmuls
lret
xor
imul
add
mov
cltd
maxps
add
sub
and
mov
bound
jo
pushf
je
das
mov
jnp
arpl
add
imull
arpl
or
call
add
mov
cmpsb
or
ficompl
pusha
push
test
jb
popf
je
leave
fisttps
mov
xor
je
jb
es
in
daa
std
xchg
dec
std
jle
dec
std
xchg
jo
jb
cs
inc
mov
jo
loopne
xchg
gs
mov
das
mov
mov
add
add
add
lea
or
outsl
and
cmp
adc
lea
jmp
xchg
add
xchg
loop
clc
xchg
or
xchg
gs
pop
das
mov
mov
inc
in
aam
scas
clc
out
add
imul
or
dec
xchg
mov
ljmp
in
loopne,pn
add
scas
mov
ljmp
jno
test
ss
fs
jno
sub
xor
out
add
xchg
cmp
in
cmp
jmpw
data16
push
jmp
insl
inc
cmpsb
xchg
jae
mov
sarl
xchg
and
loop
fmul
cmp
scas
sub
bound
call
add
xchg
shrb
gs
push
and
popa
leave
ja
data16
ret
push
add
inc
push
xchg
dec
push
lcall
push
xor
in
imul
inc
fwait
inc
cmpsb
je
dec
push
sub
les
push
addb
andb
inc
xchg
loopne
bound
lds
jne
cmp
call
and
and
dec
inc
push
lcall
pop
enter
cwtl
hlt
data16
mull
xchg
jb
nop
std
stc
dec
out
pop
fmull
push
xlat
or
sub
mov
jae
gs
lcall
add
pop
or
std
push
mov
add
add
add
add
lcall
sub
sbb
in
into
dec
es
call
mov
add
sbb
lea
push
std
and
jae
cmp
inc
or
xchg
cwtl
pusha
pop
outsl
or
add
lock
jne
xchg
push
add
movb
add
push
sub
jb
lea
mov
loope
popf
sub
add
add
repz
adcb
lea
xchg
jecxz
fdivrs
scas
hlt
push
sub
imull
cs
push
cmp
cmc
ret
jbe
dec
add
cmpb
setge
stc
xorb
mov
js
shlb
pop
sub
mov
mov
cmp
mov
cmp
jecxz
vpavgw
test
mov
jmp
mov
xchg
xchg
mov
pushf
lcall
cmp
loope
andl
mov
jbe
xchg
mov
das
pusha
xchg
mov
les
add
push
jmp
add
xchg
cmp
add
mov
nop
in
icebp
int3
mov
adc
lret
test
pop
or
bound
add
ret
mov
and
mov
lahf
test
jecxz
xchg
movsl
push
mov
clc
mov
add
add
add
outsl
popf
es
xchg
outsb
mov
mov
inc
pop
lea
sbb
jmp
aas
lods
cmp
xchg
inc
mov
dec
xchg
xor
mov
xchg
std
jg
jae
jb
sbb
stc
push
lret
pop
arpl
or
dec
xchg
lods
inc
jle
lods
inc
xchg
add
lods
pop
and
lahf
push
jmp
pop
arpl
ss
add
add
add
add
and
into
mov
xchg
call
sbb
and
out
and
add
inc
jb
adc
push
jmp
stc
jb
stc
and
cmpl
jl
sti
jle
add
pop
insb
icebp
pop
sub
lret
orb
jmp
cld
sbbl
dec
rclb
sub
js
cmp
mov
mov
fxch
lds
lock
mov
add
push
xor
daa
adc
push
mov
add
xchg
push
scas
int
int3
push
les
fists
pop
xchg
aam
mov
jmp
mulb
outsb
jmp
add
push
in
sub
inc
cmpsb
xor
je
lcall
inc
sahf
mov
call
fldl
std
pop
cmp
pop
loope
mov
mov
and
sub
mov
pushf
sub
push
mov
dec
test
mov
call
add
fdivs
add
dec
lret
shlb
fildl
and
inc
int
pop
inc
jmp
addr16
add
rol
lret
pop
fdivrs
mov
add
daa
fxch
imul
inc
int3
jecxz
int3
dec
jp
lret
leave
jmp
addr16
mov
inc
pop
adc
pop
je
loop
sub
sahf
push
incl
test
sbb
mov
test
add
xor
add
xor
xchg
outsl
inc
jb
cwtl
and
arpl
int3
cmpsb
popa
jmp
pop
lret
jle
jb
lcall
out
bound
fs
and
arpl
std
sbb
adc
and
icebp
push
xorb
sub
jae
in
jb
inc
add
outsl
jecxz
add
in
mov
mov
rcll
add
das
arpl
cs
xor
test
loopne
jecxz
xor
and
jl
push
or
loope
scas
add
les
icebp
and
cli
cli
pcmpgtw
lea
xor
lods
or
stos
mov
aad
push
xor
jmp
adc
add
add
add
stc
fstpt
mov
mov
mov
xor
or
jbe
dec
sub
cmp
ljmp
cmp
jl
inc
in
and
xchg
js
orb
inc
jnp
sub
pop
and
test
mov
or
sub
or
test
add
jo
jmp
mov
xchg
and
sbb
adc
repnz
gs
mov
cli
sub
xchg
jp
aam
test
inc
lods
out
imul
repnz
jmpw
bound
cmp
push
in
arpl
out
movsb
mov
fidivrl
rcl
sub
xchg
adc
pusha
sbb
fidivl
push
xchg
jl
mov
push
jg
add
cwtl
and
jecxz
lds
inc
mov
and
dec
and
sar
jecxz
mov
mov
lahf
jle
jnp
je
mov
push
pop
mov
pushf
add
inc
cmpsb
jne
mov
lea
iret
mov
mov
in
push
outsl
add
incl
flds
jb
fwait
andb
mov
stc
push
out
fmuls
sar
mov
xor
cld
jo
mov
dec
icebp
dec
ja
jb
ss
popf
xor
and
xchg
dec
and
mov
and
pop
scas
cmp
pop
sarb
add
push
dec
push
add
xorl
arpl
mov
out
inc
cmp
lcall
jo
out
gs
rolb
jb
lea
ljmp
aad
sub
popl
icebp
add
lea
add
push
in
jb
loopne
ja
adc
jb
fidivrs
ljmp
icebp
push
adc
xchg
test
add
mov
jge
ljmp
add
lea
add
test
add
lods
cltd
mov
insl
add
mov
in
xor
adc
sub
mov
push
mov
or
adc
push
xchg
inc
frstor
js
fimull
dec
test
pop
push
gs
cmp
mov
add
add
add
je
sub
insl
xchg
sub
out
and
push
push
mov
sub
je
aaa
pop
lods
dec
mov
stos
jmp
js
fisubl
jne
add
jp
add
inc
cltd
je
rcr
dec
mov
in
sti
and
cltd
adc
adc
in
cmp
and
jns
add
fdivs
or
jecxz
push
and
jmp
je
dec
sti
dec
mov
mov
xor
call
xchg
je
sbb
js
push
out
mov
jbe
stos
loop
call
orl
xor
mov
cltd
je
mov
inc
jb
mov
cmp
and
std
add
je
jb
and
lock
pop
arpl
test
std
addr16
inc
jb
mov
inc
and
loopne
jecxz
daa
int3
adc
ret
jne
icebp
out
and
cmpsb
popa
std
pop
mov
inc
jb
mov
mov
xchg
pop
subl
in
jnp
cmc
pop
adc
aam
orb
mov
xor
arpl
add
add
add
ret
sahf
mov
fwait
jl
ret
jbe
enter
lea
jb
pop
xor
pop
add
cli
jns
sahf
dec
loope
and
fmull
xchg
orl
mov
add
lea
in
lea
sti
pop
jmp
mov
adc
jae
aaa
mov
or
add
int
test
aam
mov
lea
repz
subb
sbb
inc
movsl
insb
jle
pushw
jle
fadds
sub
orl
sub
mov
jno
and
dec
sbb
outsb
repnz
adc
and
inc
stc
es
lods
inc
shll
call
mov
data16
ljmp
mov
pop
push
jb
jb
jmpw
nop
call
cmp
scas
sbb
jecxz
lret
js
sub
lcall
or
mov
int3
add
sbb
dec
ficompl
movsb
add
mov
icebp
mov
mov
inc
shll
in
sub
add
addb
add
fldcw
pop
cmpsl
gs
jl
mov
enter
in
addr16
and
fstl
pop
cltd
sbb
dec
das
push
out
inc
adc
pusha
lock
bound
add
popa
cmp
xor
mov
aas
mov
xor
push
push
ror
int
fidivrl
ret
call
dec
jp
jne
inc
daa
or
adc
decl
fistl
jmp
imul
icebp
shrl
ja
cmpsl
call
jmp
sub
aas
adc
out
cmp
jae
arpl
icebp
lds
sub
push
xchg
into
push
cmp
sti
sahf
addl
push
mov
in
cmp
lea
jmp
mov
div
jno
sub
lods
add
jle
cltd
outsl
jbe
xchg
addr16
test
add
xchg
jle
push
xchg
nop
xor
or
jno
mov
xchg
fsubl
cmc
lcall
xchg
xchg
mov
sbb
fprem1
lcall
add
je
jmp
mov
int
xchg
outsl
bound
dec
movsl
jo
loop
bound
add
sub
int
bnd
pop
fimull
ja,pn
addr16
jmpw
insb
fdivp
pop
jmpw
cltd
out
cmc
push
jmpw
mov
adc
sbb
jmpw
and
add
data16
jno
push
jmp
addb
jno
mov
add
sbb
add
jb
mov
jmp
inc
dec
jo
fiadds
dec
xchg
test
data16
fiadds
fadds
fbstp
aas
nop
jmp
pop
cli
insl
jb
dec
and
aas
cmpsb
je
mov
out
inc
jne
shr
lret
inc
filds
fwait
aas
cmpsb
jne
dec
sub
dec
xlat
inc
add
inc
dec
dec
dec
sti
add
in
dec
daa
sbb
std
jb
loope
cmp
xchg
xor
pop
leave
mov
bound
mov
fucomi
pop
push
pmulhuw
pop
in
int
call
xor
sti
sbb
push
outsb
push
fldl
jb
in
mov
fs
fdivrs
cmp
mov
dec
inc
es
sbb
jnp
inc
add
sub
and
scas
jmp
jmp
bound
and
sbb
dec
inc
mov
mov
jp
mov
xor
into
pop
addl
inc
jbe
cmp
or
pop
inc
or
scas
adc
push
xorb
sti
mov
mov
inc
push
add
cmpsb
out
setle
aas
pop
jg
int
mov
xchg
inc
jnp
jnp
lret
mov
xchg
push
mov
pop
ret
xchg
addr16
dec
sbb
pop
mov
hlt
ljmp
inc
in
enter
lret
add
jb
stc
clc
mov
cwtl
test
popf
ljmp
jge
adc
xchg
bound
lods
xchg
push
pop
mov
xchg
fs
sti
mov
ja
sub
jmp
call
ds
jb
inc
icebp
hlt
test
and
gs
push
adc
stos
jp
jecxz
cmpsb
inc
lds
or
add
or
cli
sti
lea
adc
add
lret
cld
cmp
cltd
jns
sub
pop
insb
outsb
pop
in
clc
sarb
and
push
jecxz
push
inc
sub
adc
cmpsl
repz
mov
mov
or
and
loope
lahf
xchg
inc
jecxz
in
je
adc
iret
frstor
fnstsw
xor
in
jae
mov
cltd
je
mov
xor
mov
lds
and
inc
mov
inc
push
repnz
adc
dec
lods
mov
std
jg
nop
aas
jb
lahf
or
fadds
lds
fcoms
repz
arpl
icebp
jecxz
sarl
mov
popf
xchg
out
mov
mov
out
pop
add
std
jb
call
negb
inc
stc
mov
call
pop
into
shr
cmp
hlt
mov
or
fcoms
xchg
xchg
aas
jb
cmpsb
or
mov
pop
pop
test
cmp
push
stos
xchg
ja
add
jle
lea
decl
jb
add
repz
xor
jecxz
add
fwait
test
daa
adc
les
rolb
cmp
adc
jbe
dec
aam
dec
pop
jb
mov
ds
inc
and
pushf
ret
inc
pushf
mov
inc
ljmp
pushw
adc
mov
add
jg
pop
add
adc
push
ljmp
jno
xchg
insb
mov
sub
jmp
add
jmp
test
pop
mov
jp
and
ljmp
stc
lds
jb
ficomps
icebp
in
add
add
push
adc
mov
out
jns
fs
jmp
jle
test
xor
xchg
cmpsl
xchg
jno
aam
pushw
ret
xchg
mov
adc
add
shrb
test
xor
cmpsl
scas
push
add
cltd
adc
fadds
push
sbb
fistps
nop
lahf
je
aam
call
pusha
enter
fdivrs
pop
enter
sub
pop
in
inc
les
mov
xor
rorb
dec
xchg
mov
mov
repz
int3
mov
add
out
lds
pushw
inc
mov
jg
add
jo
jae
sbb
jne
movb
sbb
fimull
clc
sbb
outsl
pop
mulb
outsl
or
sub
xor
mov
add
imul
dec
dec
iret
mov
sti
movsl
inc
push
add
jb
mov
and
add
fwait
mov
scas
dec
jns
add
pop
in
clc
out
hlt
xor
adc
push
in
outsb
fnstsw
mov
jle
pop
xor
hlt
add
jmp
out
sti
xor
xor
enter
push
in
mov
jmp
aaa
xlat
jmp
imul
gs
push
or
add
add
add
add
fwait
ret
cmpsl
insb
mov
add
dec
or
jae
call
movl
or
add
add
orb
fidivrl
xor
adcb
movsl
xchg
push
xchg
ret
movsb
dec
cmpsb
out
jne
outsb
ss
dec
cmp
mov
xor
push
stc
adc
jmp
add
add
add
xchg
outsb
push
rorl
andl
mov
outsb
push
mov
gs
cmpl
gs
xchg
push
pop
ret
cmp
cmpsb
negb
lcall
mov
jecxz
push
inc
mov
icebp
jle
mov
jno
add
shll
push
lret
inc
andb
add
add
add
dec
add
pop
shlb
je
scas
adc
jle
xor
xor
mov
inc
and
push
add
adc
push
push
add
cli
cwtl
jmp
loopne
bound
test
lea
ss
jge
and
push
push
or
jmp
and
icebp
scas
mov
mov
les
inc
and
mov
cmpb
add
iret
pushl
mov
stos
push
fiaddl
ss
sbb
push
and
test
or
fadds
jmp
stc
mov
out
fadds
inc
mov
stc
loope
xchg
add
xor
add
daa
jae
jmp
inc
faddp
sub
bound
fsubs
pop
push
inc
repz
in
jne
xchg
sub
sti
push
dec
out
mov
jp
jb
mov
or
pop
out
lock
jg
jae
lea
or
clc
inc
or
in
ficoms
lea
testb
mov
mov
dec
add
mov
push
add
xchg
inc
fldl
cmpl
push
mov
dec
jge
aas
fdivs
add
nop
aad
out
xor
push
xor
cs
and
lds
inc
popa
int3
repz
inc
mov
lea
mov
in
mov
bnd
je
xchg
addr16
jae
gs
sub
xchg
push
test
inc
sbb
jmp
cmp
jno
stos
enter
mov
push
xchg
int
ljmp
xchg
jmp
jno
jbe
lods
loop
jmp
jno
loope
jno
data16
lods
loop
call
jno
sbb
jno
and
cmpsb
mov
pushf
lea
inc
jg
sub
jnp
add
outsl
inc
xor
ret
mov
pop
push
ret
data16
pusha
test
mov
cmc
cwtl
jg
int
mov
inc
mulps
cmpl
fidivrs
ja
jb
test
lock
add
mov
and
jmp
pop
cmpl
sbb
inc
add
dec
xor
data16
filds
jb
arpl
stc
jp
add
pusha
aas
sbb
cmpsb
lods
push
xchg
dec
and
hlt
popa
push
aad
mov
dec
sub
jne
inc
out
je
in
dec
jmp
pop
lds
lcall
ficomps
xor
sub
jb
mov
adc
sbb
bound
jb
pop
std
inc
jno
push
jb
or
pop
dec
and
dec
jle
and
add
xchg
xor
addr16
push
jmp
iret
das
cmc
xchg
movsl
shlb
lcall
stos
mov
rcrl
xchg
add
decl
push
aam
insb
repnz
dec
test
and
dec
add
fistpl
test
jo
sbb
xor
mov
add
push
fiadds
stos
jmp
jp
add
mov
faddl
sbb
mov
jmp
or
loope
jnp
pop
imul
xchg
into
mov
add
jmpw
loopne
lcall
jno
and
cwtl
mov
xchg
mov
mov
ss
into
in
ja
add
inc
push
jp
xchg
aaa
inc
jle
sub
adc
lahf
add
rol
fs
je
cld
in
loop
add
jmp
leave
outsl
mov
jno
cmpsb
xorb
das
inc
mov
xor
or
std
test
bswap
pushw
shlb
scas
fidivl
das
mov
gs
lret
movb
inc
dec
dec
add
andl
orl
pop
fmul
push
andb
push
xor
push
iret
xor
add
in
les
jb
movsb
sti
adcb
lret
fstpt
call
insb
jge
lcall
cmpsb
test
add
rclb
push
pop
jge
and
jle
test
sahf
adc
jb
test
mov
xchg
aas
jb
arpl
cmp
sbb
pop
pop
mov
aaa
aad
push
jae
sbb
and
dec
aas
sbb
jp
cmp
jmp
push
push
in
dec
and
sub
mov
jno
je
js
adc
or
cmp
mov
popf
mov
push
std
xchg
aas
jb
test
add
js
pop
mov
jne
adc
fiadds
add
dec
ss
test
test
inc
mov
fwait
fwait
test
fsubl
rep
adc
rcr
int3
cmpsb
stos
xchg
jle
lret
push
loop
insl
mov
jnp
js
lret
xchg
rclb
cmp
pop
add
add
pushf
inc
jb
adc
sub
mov
push
or
push
mov
cmp
jno
push
cltd
jp
add
andb
push
stos
mov
insb
mov
mov
pop
int
mov
adc
insb
gs
mov
in
sub
insb
sub
xchg
cmp
int
dec
mov
popf
jne
xor
mov
sti
xchg
divb
stc
leave
and
mov
or
add
mov
xor
xchg
mov
xor
push
mov
aas
dec
add
jmp
cmp
inc
nop
movhps
add
cli
imul
add
pop
les
ja
imul
stos
xor
jmp
and
sbb
jmp
add
jl
and
sarl
push
ja
pop
ja
nop
imul
xchg
cmp
adc
xchg
add
jge
pop
or
inc
and
push
jae
test
xchg
je
jb
dec
mov
in
bound
inc
jmp
add
push
testl
fmul
xchg
and
sub
in
sbb
jb
or
add
add
add
stos
mov
sub
loope
sarb
bound
mov
int
aas
jb
mov
and
clc
es
lock
mov
lods
push
mov
dec
pop
das
mov
sbb
sbb
repz
mov
in
inc
add
jecxz
lret
fnstsw
pop
cld
cli
test
mov
lret
add
add
std
pop
enter
shl
ss
add
stos
jb
adc
std
push
enter
enter
dec
jbe
push
stos
jb
push
lds
dec
popa
lret
repz
sahf
push
xchg
jne
add
sti
xchg
cld
aad
push
or
das
sub
int3
ffreep
push
xor
shlb
ja
loop
inc
test
out
sbb
arpl
or
push
movsb
jns
push
cld
cmp
into
xor
stc
into
mov
lods
mov
push
sti
xchg
push
adc
imul
jb
rorb
fwait
cmp
push
std
jmp
push
lret
shlb
out
add
cmpsl
cmp
stc
xchg
test
jecxz
scas
dec
and
outsl
in
dec
outsl
repnz
ret
lcall
idivb
es
hlt
xchg
jbe
aam
adc
repz
and
jg
or
fistps
jnp
or
xchg
inc
dec
cmpsb
adc
jb
pop
and
push
rclb
in
inc
mov
in
icebp
sub
jmp
add
cmp
mov
or
pop
je
lcall
data16
add
or
in
pushl
mov
jae
arpl
sbb
movsl
pop
stos
das
sahf
clc
flds
out
pop
daa
psubsw
in
jle
xor
sub
sub
and
icebp
sub
fwait
mov
aam
jmp
xor
insl
dec
jp
fdivrl
sub
xor
pop
movsl
add
pop
dec
push
push
mov
rolb
sbb
repz
add
insb
inc
mov
adc
lret
iret
dec
fnstsw
jo
adc
adc
fwait
bnd
xchg
inc
mov
xor
adc
add
js
lret
push
or
jo
rcr
gs
add
pop
addb
mov
clc
sti
push
mov
pop
jp
mov
sarl
popf
sub
mov
ffree
aas
out
sub
stc
adc
dec
rcrl
dec
lods
test
ss
iret
mov
ljmp
add
add
fcmovbe
jmp
push
stc
sub
inc
cwtl
call
cmc
subl
lret
in
mov
mov
cmp
in
in
stos
push
xor
sti
dec
bound
xor
xor
ljmp
dec
pop
in
andb
dec
mov
xchg
xor
adc
pop
repz
push
xor
insb
xor
mov
in
push
mov
daa
add
jmp
jecxz
addr16
in
push
mov
jecxz
aaa
iret
in
dec
fisttps
pop
push
or
sbbw
push
test
nop
test
xchg
decl
mov
push
lock
cs
in
jle
cmp
jne
inc
cmp
dec
rclb
pop
les
add
stc
push
add
add
add
adc
and
jbe
data16
clc
mov
add
les
out
fildll
jb
call
std
cmc
je
add
mov
mov
loope
add
bound
mov
jbe
movsl
std
ret
inc
outsb
adc
xchg
leave
lcall
sbbl
std
aas
inc
addb
outsl
nop
arpl
add
add
add
add
pop
and
push
or
jb
sub
sub
add
jmp
mov
je
mov
test
mov
rorb
pop
scas
mov
lea
sti
jno
pop
out
add
lea
jmp
cltd
mov
mov
dec
dec
or
test
inc
jp
es
jb
dec
adc
test
or
jle
push
stc
test
push
xor
or
jle
sbb
lea
fildll
push
notb
mov
sti
mov
add
xchg
or
xchg
fs
and
imul
andl
pop
leave
xor
call
fxtract
xchg
jmp
add
add
add
sbb
popf
mov
sub
jno
loope
jp
das
aaa
jecxz
inc
or
mov
or
add
inc
std
fsts
mov
jno
xchg
adc
ret
xchg
pop
sbb
call
data16
dec
push
push
ja
test
xor
fs
aad
cmp
decl
pop
push
add
lcall
ja
and
nop
adc
add
jecxz
pop
mov
fs
cmp
push
push
xor
imul
mov
inc
pusha
test
mov
push
add
or
pop
xchg
jbe
shll
add
mov
in
into
add
pop
addb
mov
dec
mov
pop
enter
inc
xchg
push
jb
bound
sbb
arpl
jb
push
or
shlb
lds
loope
fucomp
lock
push
add
jp
add
fdivs
pusha
jmp
les
add
push
mov
lret
frstor
movsl
mov
out
xchg
and
call
add
pop
outsb
add
out
xor
popa
lret
jl
push
aas
frstor
mov
cltd
clc
jns,pn
xorb
fisttpll
shl
lret
cmpsl
add
dec
cmp
mov
mov
lcall
add
std
mov
jb
mov
jge
lea
add
push
add
es
lcall
int
je
add
int
and
shrl
or
pop
sbb
jmp
jb
sbb
ret
mov
or
push
mov
or
shll
in
push
adc
repnz
push
jae
cmpsb
xor
pusha
and
or
push
sub
xor
popw
xor
aas
xchg
es
push
test
jle
fs
jb
xor
inc
sbb
je
jl
insb
cmp
push
sub
adc
mov
adc
mov
sbbb
lds
sub
xchg
and
lds
rep
sar
xor
mov
push
add
lret
inc
lret
jmp
negl
jno
sbb
jecxz
lock
shlb
je
enter
sub
and
add
push
fld
data16
xor
pop
fnstcw
in
ja
in
icebp
or
or
jle
push
jb
push
add
mov
add
add
add
add
mov
jmp
cmpsb
ret
outsb
mov
es
sub
lds
fucomp
inc
push
ja
call
jb
out
inc
push
cs
inc
push
cs
dec
push
dec
in
in
shl
pop
push
call
jle
fs
call
sti
lahf
push
mov
sbb
inc
fstl
incl
roll
add
add
add
add
sahf
dec
add
shrl
fldl
add
lds
push
stos
xchg
test
mov
fistpll
jp
jae
fmull
add
inc
add
outsb
int
sbb
iret
pop
or
mov
add
xchg
xor
addr16
jne
adc
add
jmp
les
mov
jmp
pop
push
aas
out
pop
adc
hlt
xlat
cmp
jle
psraw
ja
xchg
int
jmpw
insl
inc
jmpw
jmp
movsb
jl
add
jmpw
inc
shll
addl
outsb
es
ljmp
lods
xor
lods
jmp
cs
push
inc
mov
mov
in
lods
lds
gs
fsubrp
xlat
ja
loope
xchg
je
sub
outsb
dec
test
addb
inc
sbb
xchg
xor
push
cmp
and
ret
add
test
callw
data16
add
adc
inc
inc
test
mov
rcr
pushf
outsl
inc
data16
jne
push
sbb
repnz
xchg
decl
lret
pop
ror
out
pop
ret
pusha
fldenv
push
xor
data16
out
sahf
sbb
aas
sub
and
ret
xor
cmp
or
fbstp
hlt
ja
bound
js
or
push
in
dec
jp
jmp
add
ja
subl
xor
dec
mov
push
push
idivl
jne
dec
jp
popa
mov
jb
std
xor
stos
lret
in
sub
xorl
and
gs
mov
ret
sub
jb
enter
popa
je
push
bound
jmp
mov
push
in
jle
enter
add
add
add
add
outsb
dec
add
jmp
push
sti
mov
lea
jmp
inc
jge
pop
mov
jb
int3
dec
sti
test
xchg
ja
inc
xchg
adc
jle
adc
je
mov
add
cli
xor
dec
lds
fprem1
mov
add
arpl
dec
lret
push
fisubrs
add
mov
jbe
addr16
xor
test
and
aas
and
and
sbb
fimuls
xor
insl
inc
cmpsb
cmp
lcall
pop
cmc
jle
jo
mov
xor
jae
jmp
jmp
mov
sub
arpl
lds
sahf
mov
xor
mov
add
add
add
add
push
sub
mov
data16
pop
jp
inc
cli
xor
clc
mov
jecxz
and
bound
add
mov
adc
inc
xchg
pop
cmp
lds
sub
outsb
insb
fcomps
pop
clc
cmp
in
test
shlb
pushf
inc
sub
int3
jb
ljmp
add
add
xchg
in
shlb
ret
pop
jmp
jle
jmp
inc
negb
inc
ficompl
inc
out
pop
int3
xlat
icebp
pop
inc
mov
adc
pandn
adc
out
adc
out
adc
adc
je
sti
je,pt
add
jle
dec
inc
imul
jno
mov
roll
std
xchg
jb
add
sahf
aaa
jl
bound
push
int3
pop
add
bound
fdivr
das
push
pop
repz
adc
push
bound
push
add
sbb
fistps
add
test
sbb
repz
arpl
or
out
jb
lcall
out
dec
lret
mov
jne
push
call
add
add
add
add
pop
add
popl
xor
sub
xchg
jno
xchg
cmp
lea
add
add
inc
add
adc
icebp
add
jno
jmp
mov
xor
ss
dec
xor
inc
pop
jnp
mov
inc
jb
dec
add
pushl
inc
std
adc
add
add
add
gs
jno
mul
jno
data16
xchg
xor
push
outsb
xchg
xchg
and
push
xor
jecxz
jb
and
cmp
xchg
mov
xorl
inc
cmc
inc
rcrb
scas
adc
out
jb
f2xm1
or
and
push
mov
outsl
xchg
jmp
add
xchg
inc
dec
jno
jo
data16
inc
aam
mov
data16
and
adc
jg
or
fildl
or
lea
data16
xchg
dec
mov
and
jae
add
dec
prefetch
adc
sbb
push
dec
out
pushw
jns
lcall
dec
cmpsb
jo
or
imul
cmp
cwtl
pop
bsf
loop
jg
in
je
mov
dec
enter
dec
das
aad
je
mov
push
add
cmp
adc
stc
xchg
or
jg
sbb
sbb
arpl
cltd
les
mov
lret
lahf
mov
push
add
sub
add
jb
rcrb
bound
sti
xchg
mov
sub
fldl
jbe
shll
call
pop
cmp
lods
jp
jb
bound
xchg
outsb
std
addr16
lahf
or
movb
xchg
dec
dec
mov
lahf
dec
push
cmpsl
dec
sbb
jl
movsl
jb
dec
scas
out
mov
add
add
add
add
adc
jbe
dec
in
mov
dec
mov
adc
icebp
fcompl
dec
pop
xchg
mov
int3
inc
lods
and
or
sbb
test
pushf
shl
lods
testb
loope
xchg
movsb
or
mov
stc
cltd
out
jno
jle
inc
add
or
push
enter
sub
push
or
adc
cltd
pushl
jno
mov
ss
ret
jno
push
in
xchg
test
cmpsb
xchg
jbe
mov
test
xchg
and
sub
shlb
jmp
xor
aam
jmp
sub
shlb
jmp
pop
adc
xor
add
add
add
sub
push
add
sbb
out
add
cltd
adc
push
leave
pop
push
xlat
lds
pop
add
jbe
sbb
in
cmp
clc
push
jecxz
daa
bnd
mov
mov
cltd
ja
loop
inc
movsl
jne
ja
xor
cltd
test
fmul
adc
adc
outsb
call
adc
add
add
add
add
call
add
divb
push
fistps
add
pop
sub
jmp
push
sbb
xchg
cld
jcxz
inc
jb
xchg
mov
out
pop
idivl
call
pop
add
sti
jmp
mov
fidivrs
jne
subl
aaa
outsl
sti
pushf
inc
jb
cltd
mov
cmpsl
bound
lret
mov
add
lea
jl
arpl
push
aad
xor
in
bound
daa
cltd
pop
xor
fsts
and
jl
out
sbb
nop
jno
cwtl
pop
jns
cmpsb
pop
stos
shr
adc
dec
add
mov
lock
mov
cmp
lret
add
inc
add
sti
mov
add
add
add
xor
adc
cmp
dec
push
pop
adc
shl
les
inc
bound
sti
hlt
lds
lock
mov
mov
pop
jg
iret
add
imul
dec
loopne
jbe
xor
sub
gs
jno
es
iret
xchg
push
filds
push
add
add
add
add
jmpw
or
push
ret
sbbl
adc
adc
jmpw
sub
push
cmpsb
pop
lahf
fstl
xor
arpl
movsb
lods
sub
cmp
sub
imul
out
lret
mov
gs
std
test
mov
nop
jne
cli
pop
pop
test
jecxz
adc
cltd
lcall
addr16
pop
pop
pop
xor
sahf
mov
pop
cltd
je
push
and
jp
inc
dec
das
adc
pop
es
adc
int3
push
fcmovne
in
inc
sbb
rolb
jns
ja
jb
adc
sarb
sub
pop
and
or
lcall
in
iret
jae
mov
add
add
add
fwait
pop
cwtl
test
push
ja
or
mov
mov
inc
jb
in
out
mov
jl
scas
bound
push
sbb
add
dec
in
aaa
pop
pop
jmp
scas
or
data16
push
add
out
loope
and
bound
xor
sub
pop
test
pop
sti
xor
adc
jle
and
fwait
loop
or
or
pop
add
add
sub
mov
in
jo
lea
icebp
add
cld
sbb
push
popf
inc
enter
sarb
icebp
push
push
neg
les
test
in
in
add
adc
sti
sti
in
inc
fsub
jp
mov
imul
daa
faddl
roll
add
add
add
add
int3
leave
add
std
add
ss
fisttpl
fldenv
sbb
lret
cmc
jp
out
lock
sti
dec
into
rcrb
add
rcll
std
adc
adc
imul
shlb
xchg
jmp
insb
inc
xor
inc
dec
mov
int
dec
and
add
xor
xchg
mov
in
xchg
call
mov
inc
ret
movsl
call
dec
mov
sub
rcr
xchg
imul
loopne
push
int
shlb
pop
dec
cmp
aad
popf
in
lcall
mov
adc
inc
and
ja
dec
addr16
test
imul
hlt
mov
in
rolb
fwait
inc
and
sbb
lret
inc
sbb
or
dec
aaa
into
in
push
cwtl
scas
mov
out
jbe
adc
inc
aaa
lret
aaa
mov
je
into
dec
enter
dec
ja
daa
mov
jmp
shrb
inc
fnstenv
fistpl
and
inc
mov
jbe
mov
sar
mov
test
cmp
jmp
inc
and
inc
pushf
pop
pop
jbe
pop
stc
mov
mov
jmp
xchg
xchg
add
push
sub
mov
xchg
jmp
out
leave
xchg
hlt
stos
jno
hlt
mov
add
lret
in
bound
push
mov
pop
xchg
and
add
nop
aas
jb
mov
pop
subb
mov
lds
xchg
mov
loope
enter
iret
lock
pop
jne
test
xchg
mov
push
mov
xchg
fcoms
aas
push
stos
push
add
dec
add
add
cli
push
popa
clc
in
addl
mov
push
push
jbe
jl
cli
subb
jle
dec
add
cmc
ret
push
add
dec
add
push
addr16
mov
or
pop
add
add
ljmp
scas
mov
push
aaa
mov
and
sub
jmp
int
loope
nop
ret
or
jns
or
jbe
push
shr
leave
mov
out
roll
pop
dec
dec
and
out
or
insb
ss
and
add
dec
cli
fsubrs
cltd
jb
enter
arpl
insb
xchg
aam
mov
jmp
jp
sbb
cld
jp
push
insb
dec
xchg
adc
pop
lods
inc
jne
rolb
fdivl
xchg
enter
out
in
movl
jbe
movnti
and
sub
jl
scas
fsubrp
pop
scas
loop
inc
jg
loop
xchg
ds
add
ret
outsb
subb
dec
nop
bswap
push
data16
lahf
mov
popf
in
jmp
into
adc
sbb
insl
je
cltd
or
mov
es
mov
dec
mov
and
sti
lahf
test
outsl
and
dec
std
stc
mov
push
std
add
popw
and
bound
pop
mov
jg
jae
test
mull
jg
inc
fsubrl
pop
push
call
jmp
stos
mov
stc
sbb
cli
inc
fisubs
scas
ret
mov
arpl
popa
add
stos
mov
jb
jle
jmp
stos
mov
les
std
jg
sahf
aas
jb
xchg
cld
sahf
or
add
add
add
xchg
imul
push
sahf
add
repnz
popa
pop
mov
aas
inc
inc
cmp
hlt
mov
lea
sti
loope
xor
jl
fstps
roll
add
inc
inc
mov
jno
add
ret
movb
push
xchg
add
jne
dec
outsb
ja
sbb
pop
test
push
in
sti
and
or
add
aas
dec
mov
cmc
inc
mov
data16
mov
adc
in
outsb
pop
cmp
popa
inc
loope
gs
scas
or
mov
ret
sbb
call
clc
pop
jp
pop
jb
jmp
xor
mov
mov
add
stos
push
and
loop
stos
pop
popa
shrl
jp
jmp
test
xchg
and
jmp
mov
data16
lret
pop
les
test
data16
pusha
inc
ljmp
adc
xchg
lcall
push
daa
push
clc
cwtl
in
xor
add
add
add
shll
jae
xor
test
pop
call
adc
cs
push
lret
daa
in
inc
lahf
xchg
jmp
inc
xchg
or
ror
jne
mov
data16
add
lcall
call
nop
fistpll
jmp
adc
xor
add
lret
pop
std
push
mov
add
jb
push
mov
ja
push
jae
in
fdiv
mov
sub
adc
std
mov
mov
stos
push
mov
in
ror
jne
fisubs
mov
push
and
push
stos
call
insl
jnp
or
out
mulb
jbe
dec
and
dec
movsb
pop
test
jnp
test
js
rcrl
sbb
xchg
out
jmp
movups
xchg
pop
pop
pop
xchg
lcall
arpl
xor
test
aad
or
inc
mov
lcall
js
push
lea
lcall
cmp
jae
hlt
lea
fs
dec
add
jnp
xor
mov
push
add
jb
dec
loopne
orb
out
and
jno
mov
rcll
out
mov
jmpw
and
inc
aas
sbb
inc
aas
adc
or
inc
sahf
call
insl
ja
cmp
fcoms
in
into
mov
inc
std
repnz
cwtl
mov
jbe
xor
je
es
stos
inc
mov
or
cmpsb
jge
ds
add
iret
or
inc
ret
out
call
bound
xchg
into
testl
outsb
mov
rorb
in
inc
das
out
xor
push
pop
lahf
ss
hlt
mov
xor
xchg
inc
xor
stc
in
pop
outsl
imul
jl
cli
in
je
fsubrp
insb
outsl
loop
mov
out
inc
push
std
lahf
cltd
je
jg
xor
out
inc
adc
jne
adc
mov
push
les
dec
mov
test
and
dec
sbb
ret
adc
jb
data16
xchg
push
push
roll
sahf
pop
stos
std
mov
fidivl
jl
shlb
ja
cmpsl
push
jae
jmp
pop
mov
pop
push
xor
bound
stc
dec
push
push
jmp
popl
std
pop
shr
fcomp
or
jae
xchg
aad
ret
je
pop
cmc
jle
mov
jae
fists
rcrb
push
std
daa
shr
enter
jae
dec
fs
mov
mov
mov
add
xor
inc
lcall
xchg
jb
cmc
addb
add
add
add
add
push
mov
xchg
icebp
add
mov
test
inc
lds
xchg
popa
call
aas
fidivrs
adc
lcall
inc
mov
test
cmpsl
push
mov
out
repz
in
jne
loope
add
jecxz
jbe
js
std
push
inc
std
call
mov
xchg
cmp
insl
mov
adc
jno
mov
cmp
aaa
jb
insb
cmp
xor
jmp
icebp
mov
icebp
mov
gs
adc
push
jo
inc
cld
inc
cmpsb
mov
sbb
mov
cmpsl
jmp
add
adc
vmovss
mov
es
incl
aaa
lea
adc
inc
sbb
xor
and
fwait
cltd
je
out
je
out
loopne
loop
xchg
jle
xchg
test
mov
orl
cltd
je
out
enter
and
inc
adc
sbb
je
pop
lds
cmp
cltd
xchg
addb
add
add
add
add
stos
xor
inc
shlb
jmp
push
push
aaa
push
movsb
add
adc
xor
jb
and
icebp
mov
jae
pop
pop
and
shll
insb
push
icebp
mov
mov
ret
sahf
xor
shlb
cmpl
jb
mov
mov
in
mov
jge
movsb
push
lcall
add
add
add
jb
bound
inc
scas
lret
fbld
ss
pop
sarb
inc
xchg
mov
sahf
dec
out
and
cld
addr16
aas
jb
sti
incl
in
je
gs
mov
jecxz
jmp
je
adc
lea
push
mov
cmp
int
je
push
pop
xor
insl
or
fiaddl
add
jmp
mov
int
fmuls
jb
jl
movsb
jno
hlt
ljmp
jl
mov
xchg
inc
jb
leave
add
in
xchg
into
cli
adc
mov
push
jbe
mov
or
jmp
xor
pop
leave
push
jg
inc
data16
jmp
xor
enter
inc
nop
pushf
sub
jmpw
add
add
add
add
mov
jl
adc
in
mov
cmp
or
jno
jmp
cli
rclb
xchg
les
fnstsw
or
add
mov
bound
filds
outsb
mov
jp
loope
in
jbe
cmp
lds
jmpw
jmp
mov
fimuls
add
push
ret
in
add
jp
faddp
adc
and
jle
push
ret
push
sub
lcall
add
test
push
fwait
ret
push
dec
xor
mov
xchg
dec
adc
mov
call
rolb
cmp
cltd
pop
les
mov
xchg
push
nop
xor
dec
pop
sub
add
xor
push
jae
fildl
or
add
mov
loope
mov
lock
inc
push
outsl
or
push
stos
mov
sbb
iret
cmp
cmp
pushf
inc
daa
jecxz
inc
push
cli
add
sbb
jae
or
mov
lods
cli
sbb
lods
testl
scas
jg
mov
push
cmp
xor
imul
mov
mov
adc
or
call
pop
xor
ret
jg
sti
mov
xor
mov
adc
jl
pop
sub
cmpl
jg
testb
jl
xchg
cmp
sti
adc
subb
add
lds
cld
cli
dec
add
mov
dec
jmp
test
xor
push
aam
push
mov
shll
les
testl
stc
les
jns
in
ja
into
jmp
jmp
mov
and
inc
or
in
fmuls
ja
into
push
popf
add
or
fs
jmpw
outsl
bound
sub
cltd
xor
loope
jne
mov
mov
xor
add
inc
sar
and
icebp
mov
je
sub
out
scas
dec
mov
ljmp
dec
cmp
mov
enter
data16
fisttpl
fsts
push
add
lret
mov
lods
jp
in
add
sbb
push
test
pop
push
xchg
push
inc
sub
idivl
call
cwtl
scas
adcl
incl
stos
jp
xchg
addr16
pop
cwtl
lods
call
enter
dec
inc
nop
add
lds
push
sar
test
gs
xchg
jmp
inc
and
bound
add
add
add
jb
in
jl
lret
bswap
or
push
sub
and
inc
lods
fnsave
xadd
jns
or
jle
inc
mov
addr16
gs
pusha
in
icebp
lods
jb
push
and
xchg
mov
pop
mov
and
jb
adc
push
stc
movsb
adc
jecxz
dec
shrb
add
loope
cmpl
lcall
scas
push
sub
inc
call
rcll
mov
mov
jmp
rcll
jb
test
cmc
and
nop
jno
jb
aas
cwtl
xor
std
sbb
sub
jg
mov
mov
ss
hlt
out
sbb
add
jg
mov
mov
out
sub
jle
ljmp
jb
fdivrs
scas
cmpb
and
popf
test
jno
cmp
arpl
loop
popa
dec
sbb
arpl
jl
push
add
dec
ljmp
and
pop
pushl
sub
fdivrl
push
movsb
leave
shr
or
xor
jns
add
cmp
adc
fwait
adc
scas
sti
xor
push
jmp
data16
ret
pop
incb
inc
jbe
xor
jmpw
pop
int
add
inc
push
js
outsb
dec
popl
into
dec
test
les
mov
xchg
je
stos
cmp
push
sarb
inc
sub
fsub
add
fiadds
aas
sub
add
in
outsl
daa
dec
jp
mov
mov
jmp
inc
outsl
cmpsb
arpl
or
cvtps2pi
outsb
sarl
or
dec
mov
cmpsl
mov
lahf
dec
call
add
inc
add
cmp
pop
mov
fadd
jb
cmpsl
or
je
je
cmc
jbe
lret
add
jb
sub
fstp
adc
sub
icebp
push
daa
and
adc
xor
add
xor
repnz
out
lods
push
aaa
lods
adc
inc
dec
stc
and
inc
lods
push
push
dec
lods
push
jb
insb
xorl
shlb
mov
mov
lods
adc
pop
fists
xchg
pushf
sub
int
dec
mov
xor
push
xor
fwait
add
inc
rorb
fcoms
setbe
add
jbe
push
cs
add
cmp
enter
sub
add
mov
aaa
push
add
lret
add
aad
push
sti
jb
add
jbe
mov
inc
cmp
mov
mov
sbb
add
and
xchg
mov
rolb
pop
sbb
jmpw
bound
cmp
ja
loope
push
int
mov
sahf
sbb
repnz
loope
adc
jno
cmpsl
xor
inc
lret
add
inc
dec
lahf
sbbl
inc
mov
jb
int
outsl
xor
sub
jb
cmp
push
cmp
movsl
jno
pop
mov
loopne
repnz
sbb
in
cmp
arpl
xlat
call
cmc
mov
ja
arpl
xchg
add
rclb
out
jle
adc
mov
mov
cmp
xchg
sahf
push
xchg
jle
arpl
jmpw
loopne
int3
jbe
jbe
xchg
jne
add
mov
cmp
jne
inc
sbb
negb
adc
decb
push
and
mov
mov
push
push
push
call
add
mov
xchg
xor
insb
mov
adc
push
hlt
subl
jle
xchg
cld
jg
test
jb
stos
pop
xor
pop
xor
jmp
add
adc
ljmp
popf
popa
inc
jb
push
adc
sub
or
scas
push
jmp
mov
jb
shufps
aas
sub
call
fsubrl
pop
jae
xchg
mov
shufps
add
mov
enter
in
nop
mov
add
xchg
add
add
add
sbb
cwtl
jg
sti
sbb
xor
xor
fcmovnbe
mov
mov
or
jg
dec
pop
adc
add
or
sahf
enter
push
add
jb
call
adc
jg
stc
or
in
pop
js
jb
aad
mov
jg
daa
mov
add
add
add
add
daa
test
loop
fwait
mov
jmpw
xchg
fs
jno
push
out
push
clc
cld
scas
sbb
inc
mov
es
push
iret
jmp
popl
push
lcall
cmc
lock
cltd
clc
inc
jmp
cwtl
cmp
jmp
les
rcrb
test
pushw
sarb
jb
inc
scas
mov
outsb
jmp
fcmove
cmp
outsb
jb
scas
and
and
xor
aam
lods
pop
pop
push
adc
sahf
negb
push
test
ret
push
sbb
jmp
jne
inc
lahf
pushl
cmp
dec
inc
add
loope
inc
ret
data16
mov
add
in
dec
add
aam
adc
cmp
inc
sbb
dec
mov
add
ret
mov
stos
cs
ret
nop
and
and
dec
inc
add
push
jmp
lods
push
leave
ja
std
in
insb
add
aaa
push
lea
sbb
add
in
pop
les
insl
cmp
pop
xor
add
jb
mov
push
scas
mov
adc
jae
and
mov
and
mov
fidivrs
std
imulb
shll
jb
push
icebp
popf
test
fucomp
sbb
jb
in
mov
cmp
mov
icebp
add
jg
mov
xor
jecxz
lds
cli
xchg
lods
loope
jg
sahf
jo
push
add
or
xor
jb
fldcw
gs
xchg
fisubrl
fidivl
mov
jg
mov
inc
mov
xor
or
ret
dec
add
mov
addb
inc
add
jp
outsb
mov
add
lea
fbld
jmp
add
or
repnz
sub
adc
pushf
sbb
sub
mov
jle
or
addr16
cmp
pop
jg
test
cmp
sub
xchg
sub
or
shlb
push
test
data16
adc
mov
sbb
jnp
mov
pop
or
and
bound
push
dec
sub
fistpl
add
mov
je
dec
dec
inc
mov
leave
lods
add
sub
push
mov
mov
les
jp
jnp
xchg
xor
mov
out
push
imul
loope
xor
push
xor
lcall
cmc
loopne
mov
add
add
add
jns
cmp
aad
call
mov
sbb
add
dec
cmpsl
je
sahf
xchg
mov
aaa
push
arpl
data16
adc
clc
in
mov
xor
jbe
mov
adc
inc
mov
mov
adc
stos
push
loope
aaa
icebp
imul
das
jmp
sub
xchg
add
scas
push
mov
test
andl
cmp
and
lahf
push
dec
loope
ljmp
pop
push
add
lahf
and
in
dec
arpl
jb
dec
jge
out
ret
in
aas
call
pop
dec
lret
mov
repnz
and
ret
jb
jg
add
daa
cmpb
roll
lock
icebp
test
or
lods
jg
ret
add
add
mov
int3
daa
xchg
push
or
or
jb
shl
cmp
pop
jge
mov
faddp
insl
cmp
sub
in
inc
dec
add
adc
jmpw
add
add
add
add
xchg
lret
xor
rol
jmpw
movsl
push
nop
mov
pop
ljmp
push
jo
or
les
lahf
ljmp
add
mov
cmp
add
push
fisttps
pop
in
gs
movsl
repnz
ljmp
sbb
cld
mov
ss
mov
sbb
xchg
xchg
adc
mov
fs
sub
pop
xor
or
mov
aas
xchg
test
mov
push
mov
mov
sub
stos
test
adc
ffreep
in
xor
push
das
add
les
and
inc
cmpsl
jne
jmp
adc
fucomi
inc
add
daa
or
or
add
sbb
mov
movsl
pop
xor
push
mov
lcall
xchg
add
into
jp
mov
imul
popf
sub
jb
and
sub
jle
adc
mov
aas
data16
and
stos
shrd
jbe
jb
push
push
in
jl
mov
xchg
add
add
jmp
inc
out
inc
decb
jae
jne
inc
cmp
jbe
and
or
out
jp
jg
jge
jb
sub
addr16
jne
xor
jecxz
sarl
or
mov
scas
js
push
mov
or
cmp
or
push
jns
dec
shr
repz
fnstcw
test
add
je
add
sbb
out
test
push
roll
jl
cmp
cmp
xor
out
jb
jno
ljmp
mov
scas
addb
xchg
insb
rorl
into
cld
pushw
mov
fs
mov
jmp
jno
sbb
and
mov
lcall
and
andl
retw
add
add
add
add
test
xchg
pop
xorb
sub
test
inc
adc
ja
push
daa
or
lods
insl
inc
ja
fincstp
cmpsb
mov
mov
cmp
out
ret
lods
push
pop
xchg
aam
xor
ds
rcrb
cmpsb
xchg
es
xchg
add
jg
fdivs
popa
je
scas
addb
mov
add
popf
jns
jecxz
xchg
decl
inc
sub
shll
leave
jg
nop
xchg
ret
adc
push
inc
push
mov
lret
shll
pop
js
mov
xchg
or
aad
sub
repnz
ror
xor
lahf
enter
xchg
and
xor
push
loope
aaa
push
add
xor
imul
sbb
stos
push
fstl
mov
fwait
addb
mov
imul
loop
push
out
bound
pop
push
mov
pop
xchg
sti
cmc
stos
xchg
xor
sbb
push
dec
inc
imul
push
scas
fsubrp
jo
imul
or
add
add
add
sbb
sub
fistpll
daa
sbb
shlb
push
out
aaa
js
stos
ror
mov
pop
rol
and
mov
mov
das
enter
rcrl
inc
jbe
or
inc
lret
cld
sub
sbb
test
jne
stos
mov
arpl
addb
adc
aas
add
icebp
test
inc
cmp
stos
jo
popa
push
mov
mov
and
xchg
pop
xor
adc
mov
mov
inc
sarl
or
mov
or
je
xchg
push
jne
jnp
jno
cmpsl
xchg
in
ja
adc
adc
outsl
call
dec
mov
aaa
jb
stos
jl
insb
push
sbb
add
mov
iret
popa
and
mov
fldl
pop
mov
add
add
mulb
sub
jns
xorb
xor
xchg
pop
push
cmp
xchg
inc
dec
pop
add
lock
sbb
adc
push
mov
dec
dec
inc
push
jne
cmp
js
lds
pop
jo
sarb
test
or
xor
imul
filds
mov
xchg
jg
push
into
and
and
ja
sahf
sub
add
mov
icebp
push
inc
xchg
inc
xor
lea
push
xchg
incl
mov
mov
mov
std
lea
sub
add
add
add
or
jne
vpmacsdd
push
add
xor
rol
jb
stos
inc
mov
push
data16
adc
add
mov
or
das
std
adc
xor
add
in
jnp
sahf
sahf
adc
fisubrl
push
inc
xor
push
inc
dec
aad
out
rolb
jmp
jbe
push
add
inc
jmp
rcrb
aam
popf
cmpsl
fwait
pop
addl
jle
cmp
imul
ret
imul
add
daa
push
xor
or
ret
pop
rcrl
mov
jnp
mov
sarb
inc
enter
clc
push
cmp
cmp
inc
sahf
xchg
in
cmpsl
pop
or
or
cmpsl
lods
aam
roll
push
mov
or
add
add
add
lds
mov
inc
scas
sbb
rcll
jg
pop
sahf
push
pop
mov
jg
adc
lcall
sbb
les
push
mov
xchg
cltd
cltd
cmpsb
xchg
jmp
sbb
inc
sti
jp
es
lea
add
das
vpsubb
cmpsb
cmp
sarb
jno
stos
fldl
data16
sbb
pop
in
cmpsb
dec
jne
cltd
or
rcr
addr16
or
in
or
mov
imul
jmp
jno
cmpsl
add
mov
fcmovnbe
add
fs
add
lahf
data16
call
push
fs
call
push
or
push
add
hlt
testl
add
add
dec
leave
loope
jg
sbb
pop
leave
jmp
dec
aas
movsl
fcmovnbe
loopne
fs
in
lahf
data16
jne
ljmp
lret
and
add
dec
cmpsl
je
inc
adc
lret
xchg
push
loop
mov
xor
or
push
shl
mov
jb
mov
add
scas
push
add
push
fs
shlb
sti
inc
dec
dec
test
adc
data16
out
in
mov
out
jno
xor
sub
mov
popf
imul
in
out
push
pop
mov
les
outsl
in
sub
mov
faddl
mov
sub
and
pop
push
jmp
clc
jbe
mov
mov
jns
inc
sub
outsl
outsl
lahf
inc
clc
or
push
idivb
and
mov
add
mov
or
xchg
ljmp
sbb
repz
shlb
xchg
out
lock
jnp
inc
push
les
lret
push
cli
dec
jg
ljmp
add
fisubrs
divl
addr16
lcall
push
push
lds
jmp
outsb
jo
loope
sub
dec
or
xor
jae
dec
add
sub
ljmp
scas
loop
jno
loope
in
jg
cmpsb
mov
addr16
dec
bound
add
int
repnz
dec
and
sahf
mov
fdivs
mov
fistps
sub
sub
jp
add
lods
in
inc
pop
lods
filds
or
cwtl
mov
inc
bound
bound
cltd
dec
xor
xor
add
mov
stos
or
xor
and
jp
xchg
pop
sub
sbb
arpl
test
push
xor
dec
sub
aaa
jge
stos
or
popa
dec
xor
and
and
std
cli
out
dec
das
jmp
mov
call
aas
pop
mov
jae
add
sub
insb
scas
xor
push
scas
push
sub
sbb
or
das
or
pop
push
js
out
push
add
jp
jb
xchg
adc
jmp
lcall
sub
lods
bound
add
xor
push
jne
or
mov
mov
xlat
push
test
decl
test
adc
cmp
adc
jle
lcall
stos
repnz
mov
insl
in
lds
xor
mov
push
jb
mov
add
cli
les
shlb
or
gs
leave
out
adc
jg
sub
adc
data16
add
dec
dec
aas
add
ljmp
mov
jg
and
hlt
jl
ljmp
gs
int3
pop
sahf
dec
inc
lock
sarl
pop
jbe
jg
fadd
fistpl
lds
enter
push
out
lods
add
adc
jge
jl
addl
popf
pop
mov
jmp
ss
es
dec
outsb
aaa
cmpsl
jo
fbstp
xchg
mov
jmp
inc
dec
dec
popa
outsb
sbb
mov
fidivl
ret
mov
data16
mov
dec
mov
mov
jecxz
push
test
jbe
inc
mov
mulb
dec
loope
fcoms
das
xor
inc
call
sti
loop
add
and
and
and
and
roll
int
sub
inc
ja
arpl
pop
dec
sbb
sahf
fadd
fsubrs
xchg
inc
lret
rorb
dec
and
dec
and
sub
leave
xchg
adc
push
pop
sbb
push
xchg
je
add
popa
sbb
push
pop
dec
push
xchg
cli
ja
mov
lods
inc
ja
addr16
pop
sub
lods
inc
jb
js
sub
fldz
out
mov
lcall
and
scas
push
mov
or
jb
imul
jno
push
xor
pop
rorb
add
mov
add
sub
jb
push
mov
bound
scas
jmp
xor
imull
sti
out
inc
mov
add
mov
inc
jb
sub
and
je
jmp
sbb
jae
mov
bound
inc
pop
fstl
pop
jg
inc
and
push
or
std
dec
dec
and
lods
adc
mov
add
xchg
add
add
jge
les
mov
imul
ss
dec
idivb
mov
sub
loop
icebp
ja
pop
cmp
jle
loope
gs
add
out
mov
gs
imul
xchg
fadds
dec
ror
or
fidivrs
add
cltd
xchg
bound
xor
cmp
pushf
mov
loope
lock
cmp
repnz
test
dec
add
dec
sbb
scas
mov
loop
xchg
loop
test
jno
loope
xchg
out
out
imul
sbb
and
xchg
inc
add
jo
cmp
add
loope
ret
xlat
scas
mov
mov
ljmp
pop
lcall
sbb
fildl
add
xchg
ljmp
pop
xchg
push
sahf
std
data16
stc
mov
cltd
popf
fwait
inc
jae
xchg
pop
cmp
subl
pop
frstor
fcmovnbe
cmpsb
push
jnp
inc
scas
in
cmp
add
add
add
ja
pop
repz
aas
loopne
mov
sahf
jmp
jg
mov
sbb
call
or
mov
out
out
sbb
dec
ljmp
inc
pop
out
bound
inc
adc
dec
test
push
push
push
rcrb
lcall
jo
add
push
mov
in
add
or
mov
aad
push
push
adc
aaa
dec
push
lahf
and
xorl
adc
ds
or
jb
mov
add
test
in
sbb
into
movsl
mov
lods
mov
dec
int3
daa
lcall
rclb
xchg
jne
xor
test
loop
mov
bound
pop
cwtl
or
push
mov
xchg
rol
xchg
add
or
nop
cmp
sti
stos
add
add
jno
pop
or
inc
rcl
sub
xchg
loop
nop
loop,pt
imul
insl
cwtl
sub
push
add
jns,pn
inc
fldl
movsl
inc
lods
push
push
jae
scas
dec
or
loope
add
sbb
cld
lods
push
pop
push
aad
lahf
jne
push
in
xor
inc
cmpsl
jge
sub
idivb
push
pop
cmp
sbb
fdivp
test
in
xchg
add
mov
scas
icebp
xchg
adc
cli
xchg
xchg
inc
jle
sub
xchg
idivb
insb
mov
loop
subl
and
dec
sub
dec
sbb
mov
xchg
ljmp
lods
mov
ret
sbb
xor
sub
addl
mov
xchg
push
pop
popf
bound
dec
inc
sub
push
into
inc
or
jmpw
mov
sbb
je
inc
and
outsl
or
ret
popf
jmp
stc
sbb
imul
add
add
add
inc
and
jb
lods
movl
push
aaa
xor
gs
cmp
fs
jmp
insl
mov
psllw
and
push
out
cmp
mov
lahf
push
pop
push
cwtl
incl
lods
out
out
pop
sbb
add
in
sbbl
add
mov
inc
jns
mov
push
lods
je
mov
sahf
push
mov
push
jb
pop
cmpsl
mov
sub
icebp
inc
and
adcl
jg
inc
fxch
mov
push
std
xor
push
cli
sbb
icebp
imul
imul
imul
repnz
hlt
repnz
repnz
mov
dec
push
and
inc
sbb
out
jg
in
addb
mov
daa
cmpsb
repnz
add
cmp
sub
xchg
xor
bound
add
shlw
dec
push
jno
cmp
add
push
ret
jno
movsb
xchg
xchg
add
insl
jno
sbb
add
or
cmpsl
out
cmc
fisubl
jno
add
jle
sub
xchg
dec
sub
xchg
aas
sub
sub
push
aas
sub
and
push
movl
jno
or
insb
aas
sti
add
pop
inc
add
jno
test
sahf
fwait
push
push
xor
ja
fstpt
ljmp
fisubrs
add
add
add
fwait
mov
outsb
mov
cmp
inc
mov
ljmp
push
pop
aaa
push
pop
cmp
push
mov
ljmp
push
add
dec
das
lcall
sbb
adc
dec
xchg
je
ds
jmp
dec
sub
lahf
xchg
addr16
ljmp
jb
sub
sbb
and
dec
sahf
mov
sub
and
push
idivl
addb
into
lcall
lret
jo,pt
lcall
mov
scas
or
icebp
in
std
mov
lahf
in
mov
cld
addr16
xchg
aas
jb
scas
and
dec
bound
jp
scas
and
out
add
movsl
and
in
incl
xor
ljmp
and
sahf
and
enter
inc
in
nop
fisttpll
ss
dec
ljmp
testb
pop
stc
stc
mov
mov
negb
mov
lcall
cmp
jo
inc
xorb
jg
add
push
mov
stc
dec
pop
jmp
lods
mov
jae
lods
mov
mov
mov
lahf
addr16
xchg
bound
inc
mov
mov
cmpsb
sub
vcvtsd2ss
and
loop
data16
loopne
xchg
or
sub
sub
add
out
pop
test
dec
sbb
ljmp
aaa
mov
imul
add
add
js
sub
rcll
aaa
js
sub
and
fsubrl
push
lods
cltd
test
ljmp
sahf
lret
jecxz
sarb
xchg
xchg
pop
xor
sbb
and
dec
in
sub
inc
mov
push
cmp
add
repz
xsaveopt
xchg
imul
add
add
lret
andl
pop
add
mov
xchg
decl
ret
pop
lret
pop
pop
cmp
add
push
rcr
dec
cmp
xchg
mov
scas
add
and
and
mov
sahf
jle
dec
test
push
add
iret
and
and
jecxz
push
das
in
test
push
jmp
jbe
add
sbb
or
push
ds
jp
es
inc
mov
jecxz
sbb
sub
inc
and
and
and
iret
addb
lahf
push
lea
add
xorl
lahf
push
xchg
xchg
jb
sub
ljmp
jp
test
pop
push
xor
jo
jg
add
adc
push
lea
cmpsb
loop
lea
jg
sub
cmp
cli
xchg
cmp
xchg
sub
and
mov
movsl
mov
add
xchg
add
cmpsl
shrb
out
shlb
jg
outsb
fnstcw
pop
dec
lea
lods
jbe
and
lods
or
add
in
rclb
mov
addr16
sub
push
jno
out
adc
mov
sub
mov
add
add
test
sti
cmp
push
mov
loope
dec
stos
js
jno
scas
cli
xor
scas
fs
ljmp
out
insb
add
adc
mov
jecxz
push
fidivl
adc
notb
xor
dec
push
mov
out
aad
jmp
inc
mov
movsb
jno
cmp
mov
pop
notl
cmp
and
inc
sub
ret
fisttpl
into
adc
data16
lcall
sbb
imul
fidivrl
mov
decl
sbb
push
ja
add
sbb
lret
dec
add
or
add
add
repnz
xor
cmp
lea
out
add
lcall
xchg
cmp
and
ret
and
add
jb
imul
lahf
mov
sub
imul
loope
and
mov
inc
mov
push
iret
and
filds
mov
jae
push
or
jb
aad
out
jecxz
xor
sarb
push
lcall
std
push
xchg
and
push
shrb
or
loop
xor
dec
filds
imul
mov
push
pop
movb
mov
sahf
aas
jmp
mov
add
add
add
scas
stos
xchg
mov
add
cmp
pop
mov
pop
pop
add
inc
repz
in
jle
testl
movsb
iret
movsl
cmp
pop
dec
sahf
pop
mov
mov
rclb
cmp
outsl
mov
push
loop
jge
loop
jle
loop
jle
loop
xchg
loop
add
jbe
mov
adc
cmc
add
pop
inc
and
pop
or
pop
rorl
movsb
jno
xchg
cltd
dec
xlat
cmpsb
jo
in
jmp
cmp
addr16
outsb
callw
addr16
btc
data16
call
lock
jmp
ja
push
jp
jecxz
mov
xor
jmp
lds
addr16
push
inc
out
jbe
data16
cmp
add
dec
sbb
xchg
je
push
es
into
jg
pusha
or
jns
adcl
addr16
add
sahf
cmp
add
mov
jl
xor
rolb
hlt
or
retw
aad
xchg
add
ret
jae
es
fwait
cmc
jns
leave
adcb
lret
aas
cmpsl
jne
mov
pop
fdivs
xchg
pop
fadds
sbb
sahf
dec
or
popf
fistl
rclb
imull
popf
push
jmp
jo
inc
mov
adc
jmp
dec
sub
in
jbe
inc
jo
cld
or
xorb
add
loopne
jae
push
in
inc
imul
pusha
outsl
adc
ljmp
jb
push
call
imulb
andl
push
addb
mov
addr16
out
and
movb
outsl
dec
cmc
add
mov
mov
test
inc
addr16
in
jb
mov
ret
ficompl
mov
add
add
add
adc
test
div
test
add
adc
stc
mov
imulb
push
lods
add
ds
inc
addb
aad
js
jg
mov
jg
icebp
dec
addb
dec
cmpsl
divb
icebp
add
movb
data16
data16
or
sub
jae
add
lahf
xchg
xchg
cmp
jg
xchg
xchg
fsubl
adc
fdivr
dec
cmc
fistpl
dec
cli
lret
or
mov
fildll
xor
push
ss
idivl
xchg
cmp
add
pushw
sti
xchg
jns
jno
or
pop
push
sub
aam
sub
add
sbb
bound
dec
add
sbb
pop
ret
adc
mov
dec
scas
mov
js
pop
scas
jp
leave
cmp
and
test
fwait
jae
pusha
xchg
xchg
mov
cld
xchg
call
dec
cmp
pop
out
jecxz
jg
fstpl
mov
cmp
call
mov
add
sbb
loope
aaa
lret
fistl
jp
lret
xchg
orl
cmpsl
push
lcall
jl
jno
out
jmp
jae
add
push
sub
inc
imul
imull
scas
inc
outsb
push
daa
cmc
sahf
and
aas
std
xchg
aas
jb
add
jae
push
icebp
dec
imul
in
push
jae
push
add
ss
sbb
sub
lods
outsl
jmp
dec
adc
scas
scas
xor
popa
dec
cli
lods
adc
ss
sahf
xorb
sbb
jnp
mov
jge
aas
add
mov
es
mov
or
pop
stc
xor
adc
insl
mov
test
sbb
add
xchg
add
insl
fwait
pop
notb
dec
popa
xchg
xchg
ret
inc
dec
jae
mov
inc
cld
add
add
or
cwtl
insl
mov
das
mov
jb
repz
addb
lods
data16
cmpsl
jne
dec
add
sbb
mov
adcl
jmp
add
add
add
cmpsl
cmp
ja
ds
inc
call
xchg
loop
push
dec
imul
and
stos
jb
pop
test
push
adcl
call
pop
dec
push
repz
stos
xor
data16
scas
and
pusha
xchg
push
shll
mov
add
add
add
jb
mov
push
xchg
lcall
movb
jp
xchg
lret
aam
mov
push
adc
push
add
leave
data16
mov
or
inc
outsl
add
mov
sbb
inc
inc
add
aaa
push
int3
mov
les
sub
sti
repz
callw
xchg
incl
xor
add
ret
fbstp
sahf
inc
push
add
push
std
mov
test
testb
jae
push
std
push
imul
idiv
pop
jae
push
pushf
jecxz
and
out
jae
push
cmc
dec
push
jb
adc
jmp
out
lea
cli
insl
push
jmp
push
pushl
adc
sti
adc
lcall
adc
add
add
add
outsb
push
dec
mov
lds
outsl
fmuls
sub
imul
aaa
add
dec
stos
xor
jg
cmpsl
adc
inc
add
add
add
cmp
add
clc
jl
inc
xlat
iret
ja
jg
les
mov
dec
iret
mov
jg
jb
mov
add
pushf
mov
icebp
jl
cmc
adc
jb
mov
add
arpl
push
pop
fdivrs
add
inc
les
jb
iret
dec
daa
push
push
scas
inc
jge
pop
mov
jg
jmp
int3
add
or
lds
stos
fxch
jge
outsl
sub
sarl
repz
xchg
push
outsb
dec
pop
call
stc
jl
mov
lret
jl
inc
add
adc
bound
lock
outsb
pop
fildll
jmp
ret
pop
push
jge
jmp
mov
xchg
xchg
repnz
fwait
loope
into
arpl
inc
cmpsl
std
dec
dec
in
outsl
shlw
jg
cmp
insl
mov
insl
sbb
enter
in
add
enter
fstpt
push
jne
adc
adc
add
add
add
ret
ret
add
insb
ss
addl
je
add
pop
fcmovb
inc
and
cmp
lret
ret
pop
int
fwait
sti
cmpsb
je
std
sub
add
mov
xchg
decl
ret
fdivrp
lods
and
pop
dec
data16
ds
inc
pop
mov
xor
adc
filds
bound
lcall
call
xlat
push
stc
fnstsw
inc
or
mov
popf
sbb
jae
push
cs
flds
into
pushf
stos
incl
outsb
push
inc
or
push
stc
jo
cmpl
xchg
jae
sbbb
jge
aas
pop
insb
rorl
out
outsb
mov
add
add
add
add
in
es
das
cmpsb
sbb
sbb
decb
jg
jbe
cmp
loopne
jg
in
adc
jb
jg
dec
cmpb
rcrl
cli
mov
jns
ja
mov
insl
out
add
sbb
jns
sbb
mov
jns
adc
xlat
xchg
fisubs
js
mov
mov
pop
in
jg
sti
cli
mov
cmp
icebp
jns
idiv
or
pop
dec
addr16
jne
loope
lds
jmp
jno
jmp
das
pop
pop
cmp
enter
mov
jmp
jb
xchg
mov
push
xchg
popf
gs
adc
addr16
insb
xchg
iret
push
dec
loope
and
divl
jnp
popf
insl
rcrb
popa
xor
sub
inc
and
cmpsb
pusha
bound
jmp
jns
jle
sbb
jb
outsb
mov
loopne
pop
aam
add
arpl
in
push
aaa
push
rcrb
mov
es
decl
adc
xchg
lea
xor
sub
add
dec
cmpsl
je
add
or
lea
jmp
sti
js
inc
mov
sbb
and
sub
int3
bound
lahf
popf
loope
ret
xchg
add
lods
fmulp
adc
push
add
inc
movsl
jmp
lret
push
leave
dec
ja
test
inc
es
sub
push
mov
sub
add
clc
test
je
cmp
xchg
inc
sbbb
adc
icebp
lods
jno
mov
outsb
call
out
lods
fldl
lods
inc
aaa
jae
push
inc
xorl
jae
rorb
subb
fstp
mov
arpl
cmp
cs
adc
sahf
and
pop
out
rolb
sarb
mov
jno
adc
mov
fs
jbe
fsubrs
or
jle
sbb
cmpsb
xlat
aas
add
xchg
sub
jbe
cmp
cmpsb
out
mov
clc
inc
or
mov
orb
loopne
shlb
xor
add
xchg
sti
test
or
jg
add
stos
xchg
sub
loopne
sarb
xor
add
or
les
sub
testb
mov
cmp
mov
sbb
cmp
imul
ljmp
in
fcoml
shll
cltd
mov
mov
xor
lods
adc
jae
jmp
add
test
test
fadd
pop
xchg
jno
and
insl
add
cwtl
movsb
ja
loopne
xchg
and
insl
aas
cmpsb
pusha
lods
enter
icebp
xchg
jmp
cs
adc
dec
incl
fwait
enter
aas
test
xor
mov
mov
add
xchg
data16
ds
js
sbb
dec
aad
add
enter
incb
add
leave
data16
inc
addl
mov
loope
jecxz
data16
jbe
mov
insb
jle
mov
inc
shlb
dec
movsb
aas
outsl
add
loope
sub
data16
movsl
and
pop
imul
adc
or
jb
scas
and
pop
iret
or
add
add
add
test
push
icebp
les
gs
add
pop
inc
mov
push
add
xchg
mov
add
add
sbb
divl
pushf
movsb
outsb
loopne
sbb
imul
scas
adc
insl
pop
push
jecxz
testb
xorl
jb
push
stos
mov
jg
xchg
xor
pop
enter
add
add
add
push
fisubrl
stc
or
cmp
add
dec
mov
or
jno
or
xor
xabort
addb
mov
scas
cmp
xorb
jg
or
fdivrs
pop
xor
push
push
stos
add
or
jb
mov
fstpl
lock
push
xor
testb
adc
data16
mov
sarl
in
dec
jno
data16
clc
pusha
xchg
mov
jae
add
popa
push
addr16
or
stos
dec
inc
stos
and
outsb
jae
pop
jo
data16
mov
jbe
scas
add
aam
adc
inc
mov
popa
pop
repnz
add
add
add
add
cmp
jo
jb
jae
xor
movsl
jb
bnd
loope
mov
loope
mov
data16
or
and
loop
inc
fwait
inc
call
call
and
adc
out
ja
xchg
decl
dec
xchg
lcall
loope
aaa
fsubl
dec
inc
call
xlat
pushw
add
pop
les
xlat
data16
add
mov
fcmovnb
xchg
nop
insl
bound
or
lea
les
add
lods
mov
add
ret
out
jb
jecxz
out
pop
push
out
xchg
mov
out
xchg
mov
outsl
sti
mov
cmp
xchg
adc
jb
imul
jb
inc
jo
sub
mov
ret
in
push
jb
and
pop
push
scas
xorl
and
jecxz
dec
leave
jecxz
push
vsubsd
push
cwtl
jne
inc
dec
sub
ljmp
fwait
mov
stos
iret
lods
jne
jg
ficoms
pushf
mov
stos
mov
lahf
hlt
or
add
add
add
repnz
cmp
cmp
orb
cmp
fsubr
mov
movlps
rol
inc
cmp
in
push
test
mov
daa
add
or
mov
scas
jp
dec
sub
insb
and
inc
stc
and
jb
data16
inc
dec
call
add
sbb
push
insl
jns,pn
jno
popl
add
push
jmp
data16
mov
xchg
jmp
idivb
orl
pop
in
mov
jle
stos
insl
xchg
ret
sti
push
insb
xchg
jmp
jno
gs
stc
insb
xchg
jmp
jno
push
cltd
adc
jmp
or
or
sbb
mov
mov
ljmp
or
add
sbb
jp
xchg
insl
sbb
jb
xchg
dec
mov
out
fcmove
test
enter
cmp
data16
movsl
lcall
ljmp
enter
data16
out
dec
fcompl
data16
push
push
cmpsl
test
jmp
jmp
inc
loopne
dec
enter
aas
jmp
xchg
ret
jmp
jb,pn
adc
test
xchg
pop
dec
stc
clc
ljmp
mov
xchg
jb
push
stc
fwait
inc
nop
jne
push
pop
jae
imul
mov
push
jae
push
lea
push
out
mov
push
pop
push
push
rolb
add
add
add
add
out
add
loope
sbb
in
and
bound
ret
repnz
and
pop
push
ret
call
out
int3
mov
out
add
fisttps
aaa
mov
lds
and
scas
mov
into
adc
test
adc
add
inc
jle
or
jae
mov
dec
jg
jb
jg
add
mov
out
sub
cmc
pushf
xor
inc
aas
fldcw
jbe
xor
jmp
jg
mulb
addl
inc
add
inc
jg
jb
sbb
lea
push
mov
dec
dec
push
jbe
jg
ja
imul
inc
cmp
jmpw
xor
add
adc
xchg
aam
jmp
aaa
repz
add
and
aad
pop
pop
jg
loop
pop
aam
jmp
push
lods
movsl
push
shr
xchg
in
cmp
jno
shr
xchg
scas
hlt
inc
dec
jns
cmp
frstor
dec
push
add
and
add
add
add
into
jmp
push
pushf
cli
fisttps
stos
ljmp
ds
add
inc
jecxz
repz
xor
ds
cmp
sub
push
sbb
fistpl
pop
fimuls
popf
add
lcall
inc
mov
es
mov
xchg
je
mov
ljmp
aam
add
and
mov
mov
call
push
xor
adc
jg
out
imul
loop
and
test
pop
pop
adc
xchg
stos
cld
aad
shlb
aas
pop
mov
jg
xchg
in
jle
mov
mov
or
cmp
insl
xor
add
push
mov
shll
add
xor
mov
add
push
jle
jb
mov
rep
cmc
jl
ret
xor
inc
inc
pushf
cmp
dec
je
les
pop
fidivs
das
addr16
push
mov
add
jns
int3
out
movb
jg
inc
push
cmc
jle
jle
push
add
sbbb
lds
faddl
movsb
sti
int3
repnz
pop
mov
adc
test
inc
cmp
jb
pop
jge
push
lds
mov
pop
scas
xor
push
cld
call
push
in
popa
mov
leave
inc
jmp
jbe
rcll
mov
and
jbe
cmpsl
cmc
jle
jecxz
add
gs
sarb
jno
stos
cmc
mulb
mov
inc
arpl
xchg
inc
mov
cmp
popa
mov
or
call
andb
jno
pushw
int
jo
leave
fisubs
jb
loop
mov
loope
pop
outsb
push
dec
into
in
inc
pop
loop
or
and
loop
outsb
mov
mov
out
push
leave
fiadds
jecxz
or
mov
imul
jecxz
adcl
sub
pusha
mov
and
cmpsl
jmp
jg
adc
push
outsb
test
insl
bound
xchg
sbb
fs
jmp
jle
fcoms
or
out
mov
jb
movsb
shrl
mov
lcall
gs
adc
insl
inc
jbe
inc
jo
lods
push
mov
inc
cmpl
or
insl
jmp
sarb
mov
std
test
adc
jp
push
lods
into
add
jae
pop
out
dec
dec
stc
stos
inc
push
add
sub
loope
cld
pop
xchg
outsb
inc
jb
cltd
and
insl
iret
fistpl
int3
aaa
adc
jg
cmp
dec
lcall
or
xchg
enter
or
pop
dec
js
xlat
xor
mov
arpl
mov
jle
sbbb
adc
cwtl
add
fidivrs
add
ret
das
mov
bound
dec
lret
jb
dec
jb,pn
into
inc
xor
add
fs
mov
sbb
sti
push
addr16
imul
jmp
dec
test
xor
sbb
mov
test
cmp
and
sbb
jmp
push
push
cmc
add
aad
xor
pop
test
mov
jbe
mov
fucomp
leave
or
in
outsb
jl
jb
cmpsb
sub
mov
sub
dec
cwtl
adc
out
pushw
std
leave
fbld
mov
arpl
es
xchg
jbe
mov
js
test
inc
dec
popf
test
mov
in
add
xor
add
or
outsb
mov
mov
arpl
es
xchg
jbe
mov
jo
test
inc
int
test
sbb
add
inc
add
fistpl
test
lret
inc
subl
sar
iret
in
sarb
lock
mov
ret
add
add
add
add
fidivl
or
pop
in
cli
jo
push
or
cmc
sbb
in
inc
adc
ret
xor
add
ljmp
jno
decl
mov
pop
adc
jg
jle
push
or
aas
xor
push
js
push
call
cmpsl
adc
std
pop
xchg
jbe
jb
jg
lea
jae
mov
mov
sub
stos
mov
fbstp
jge
stc
adc
nop
popf
roll
imul
and
scas
push
ret
inc
xchg
repnz
jne
lret
ret
gs
in
xchg
or
jle
jbe
lock
pop
in
out
test
jo
sbb
roll
add
add
add
add
stc
arpl
jle
lcall
mov
push
imul
sub
iret
lods
xor
cmp
and
xchg
cld
cmp
test
icebp
loopne
call
int
xchg
jbe
popa
jl
insl
push
addr16
push
jno
outsl
fidivs
jnp
jbe
cmpsb
bound
outsb
xchg
lds
data16
jbe
cmpsb
push
sub
add
add
add
add
subl
addr16
mov
mul
js
inc
or
jno
and
push
mov
xchg
pop
pop
fldenv
js
out
jbe
pop
add
loopne
adcb
push
push
mov
xchg
pop
addb
dec
mov
aaa
push
or
scas
loope
scas
mov
push
adc
jg
cmp
data16
inc
pop
out
xchg
rcrl
scas
ret
out
jbe
dec
leave
or
data16
xchg
inc
cltd
or
adc
cmp
pop
data16
mov
fistpl
lcall
int3
sahf
adc
das
push
mov
push
addr16
cmp
inc
jp
jb
popl
add
cmp
push
mov
add
add
add
add
outsb
lahf
pop
dec
sub
out
outsb
push
mov
push
jmp
pushf
jb
xchg
xor
mov
sahf
inc
xor
faddl
push
jae
adc
insl
adc
icebp
cmp
je
addb
dec
adc
jns
lcall
inc
mov
in
ja
arpl
mov
stc
cmpsb
dec
dec
sbb
pusha
and
cs
cmpsl
mov
ficompl
xorb
cmpsb
es
mov
lods
push
pop
jnp
pop
mov
xor
lret
cld
es
mov
xchg
mov
add
pop
fwait
and
sti
jne
xor
test
enter
xchg
lret
xchg
lret
jno
xchg
das
pop
push
addb
add
add
add
add
add
push
idivl
ljmp
in
sub
push
sbb
mov
pop
jmp
scas
popf
fwait
mulb
aaa
xchg
pop
lea
scas
iret
lds
xchg
mov
jl
gs
addr16
mov
call
ljmp
and
sti
mov
push
xor
add
sbb
dec
push
dec
add
lret
inc
inc
adc
insl
sbb
mov
sbb
cmpsb
pop
xor
adc
test
or
pop
jmp
jp
jmp
sbb
or
xchg
adc
jmp
filds
lcall
in
inc
pop
shrl
cld
int3
sbb
push
insb
sub
add
push
xchg
jno
mov
xchg
enter
imul
mov
jle
mov
test
dec
inc
subl
cmp
addr16
push
shlb
inc
jb
and
jb
push
jmp
ficompl
mov
loopne
maskmovq
imull
scas
out
fnstenv
push
adc
outsl
lea
add
test
and
aam
std
inc
sbb
mov
sbb
leave
movsl
bound
mov
push
popa
addl
jo
stos
ret
pop
iret
xchg
in
les
xchg
jle
push
jnp
adc
insl
mov
sub
pop
cmc
and
in
jg
sahf
mov
xchg
test
sbb
add
lea
sbb
sbb
jg
cli
push
xor
xchg
push
stc
lods
mov
add
rcl
and
sbb
dec
jbe
add
repz
xor
push
lock
lock
xacquire
jl
inc
inc
leave
cltd
shrl
movsb
push
xor
cli
mov
push
or
idivb
jb
push
xor
add
jp
hlt
xchg
mov
jmp
ljmp
push
push
rcrl
dec
xchg
xchg
outsb
fdivrl
jl
std
xchg
data16
xor
pop
push
pop
xorb
data16
mov
sub
push
push
jmp
in
fbld
pop
loopne
jns
sbb
add
xchg
fiadds
xchg
fsubrl
mov
jmp
add
mov
bound
push
aaa
in
xchg
add
sub
jb
and
lea
ljmp
decb
imul
mov
adcw
clc
xchg
cmp
sbb
xchg
jae
cmpsl
jns
out
mov
pop
in
xchg
test
adc
lret
lea
add
add
add
add
xchg
out
stos
jp
push
stc
inc
sub
sti
sbb
push
inc
sub
jmp
push
mov
and
pushl
push
scas
jnp
and
pop
pop
inc
pop
xlat
lcall
lahf
push
sbb
sub
and
call
mov
push
mov
les
add
pop
outsl
fcomps
test
add
add
add
mov
das
push
imulb
push
imul
out
sub
dec
dec
in
push
ret
pop
push
jg
popf
aas
jb
sub
mov
mov
inc
adc
push
mov
outsb
mov
rcrl
sub
call
push
aad
dec
mov
or
push
int
jno
mov
add
add
add
add
add
xorb
scas
outsl
mov
mov
jp
addr16
jg
sahf
aas
cmp
ret
inc
cmp
popa
pop
sub
add
fstps
mov
aaa
jg
sti
push
or
cmpsl
repnz
cmp
scas
cmp
mov
cmp
pop
ja
movsl
roll
add
add
add
add
xor
ds
outsb
cmp
xor
mov
cmp
cmc
cmp
fstl
xchg
jmp
loopew
loope
out
stc
dec
std
and
lods
aad
jle
arpl
std
cmpsb
jbe
xor
dec
insb
mov
jp
cld
fsubl
iret
notl
jmp
aam
jbe
xor
add
mov
popa
mov
push
jmp
sbb
sbb
add
jg
call
sbb
add
or
outsb
pop
sbb
mov
sub
test
sbb
sub
test
inc
sbb
sub
xchg
test
dec
ret
cmpsl
push
mov
cmp
in
scas
xchg
jle,pt
or
sbb
add
mov
lds
push
push
dec
and
jmp
mov
mov
cmp
push
gs
insb
dec
jg
adc
jnp
out
pop
decb
cmc
push
gs
adc
dec
sub
jo
push
shlb
clc
pop
inc
pop
sbb
lds
popa
sarl
or
scas
iret
roll
add
sar
lock
or
push
mov
int3
xchg
faddl
arpl
movntq
out
les
inc
inc
rorl
push
xchg
pop
addl
js
sti
or
xor
mov
mov
mov
mov
inc
dec
mov
push
iret
jae
jg
mov
dec
inc
repz
clc
je
add
imul
bound
or
cmp
mov
mov
dec
add
sbb
xchg
aas
sub
jmp
cwtl
mov
stos
arpl
ja
sub
add
or
ljmp
fs
je
fbld
popf
scas
xchg
jne
xchg
out
sub
pop
inc
xor
pop
data16
dec
xchg
jmp
jno
jmp
in
jmp
xlat
outsb
bound
cmp
int
pop
imul
fs
mov
loope
mov
push
xor
ljmp
cmovp
fidivrl
cmp
outsb
push
sldt
add
add
add
add
ret
fwait
aas
insl
push
fdivrl
movsl
jmp
in
inc
scas
dec
jmp
push
scas
xor
sbb
and
int
je
cmp
ja
jle
insb
sbb
ss
add
ret
data16
push
dec
adc
filds
jmp
add
add
test
dec
insb
nop
add
es
add
nop
pushl
out
gs
add
jecxz
pop
pop
bound
jb
jecxz
mov
bound
mov
push
xorl
xchg
aas
jb
mov
sub
push
jl
mov
xchg
jmp
ss
jb
call
nop
jb
stc
imul
imul
xor
imul
add
add
add
push
imul
aad
inc
mov
cld
jle
mov
xchg
cmc
movsl
jb
fisttpll
lahf
inc
aam
xchg
inc
aam
xchg
pop
inc
sbb
scas
sub
les
add
dec
orb
outsl
imul
lcall
pop
lods
add
mov
jg
jmp
test
add
jg
sub
test
jge
or
xchg
mov
add
mov
ljmp
mov
inc
addr16
repz
sbb
cltd
sub
jno
scas
mov
stc
xchg
fnsave
add
aad
dec
loope
out
jle
cmc
dec
xchg
loopne
fsubrs
xor
adcl
add
add
add
add
inc
cs
dec
pop
mulb
mov
cld
ret
mov
cmp
idivl
into
std
cmpsb
push
cmc
cmpsb
push
mov
inc
mov
out
jmp
add
loope
dec
mov
iret
pop
jbe
xor
dec
push
adc
sbb
icebp
repz
fildl
add
cmp
lds
adc
pop
sub
add
xchg
jae
mov
call
inc
dec
add
dec
adc
jmp
mov
push
add
sub
fldl
push
in
inc
ret
data16
ret
xchg
dec
xlat
pop
fistps
sbb
cmpl
roll
cld
mov
pushf
test
xchg
lcall
dec
fcomip
xchg
iret
jb
push
jb
cmp
add
push
lahf
imul
inc
sub
cs
jnp
xchg
cmpsl
imul
xor
sti
dec
pop
push
push
les
lock
push
cs
and
jnp
inc
dec
stos
cli
and
mov
xchg
xor
pop
lds
ljmp
ret
and
js
xor
push
ljmp
add
add
add
jmp
pop
cmp
arpl
jp
or
js
jb
rorb
testb
push
lahf
outsl
cmp
in
adcb
xchg
ret
aad
inc
mov
and
rclb
scas
cmp
stc
add
addl
mov
mov
stos
test
pop
fiadds
add
add
add
lods
out
adc
ret
pop
cmp
les
stc
add
cmp
mov
sub
sub
and
lods
ss
call
or
jbe
jmpw
cmp
mov
xchg
popf
lret
jmp
pusha
jno
push
outsl
rcll
sarl
xlat
mov
aam
xchg
add
rclb
lea
int
dec
xchg
jmp
jbe
xchg
jno
data16
xchg
aam
mov
jmp
push
cmpsl
ret
movsl
sar
xchg
add
pop
push
adc
sbb
add
pop
pandn
cmp
das
dec
adc
cwtl
into
add
jecxz
cmovg
test
fs
jecxz
xchg
push
xor
bound
cmpsl
sub
in
fidivs
xchg
mov
mov
fwait
ret
negl
add
dec
add
je
dec
and
ds
add
data16
lds
and
cmp
mov
pop
push
mov
cmpsb
cmpsb
and
sahf
push
xchg
push
add
mov
fsubrl
jne
stos
jo
and
adc
lret
call
stos
sub
out
and
pusha
add
iret
dec
mov
outsb
adc
das
adc
jmp
outsb
mov
int
xchg
out
test
daa
call
testl
out
lds
mov
test
push
inc
jbe
add
outsb
cltd
jne
sbb
jg
jae
sub
mov
jg
mov
jl
pop
dec
dec
call
arpl
push
adc
and
pushf
fst
jg
inc
inc
jnp
xchg
mov
popa
push
pop
mov
mov
xchg
scas
push
out
fcomi
inc
inc
hlt
out
inc
fwait
sub
jg
add
jg
add
jl
ljmp
jno
xchg
pop
push
inc
jl
dec
add
insb
scas
mov
jbe
scas
mov
xchg
jmp
ds
jecxz
or
aaa
cmp
cltd
xchg
cld
rcl
jmp
js
dec
fnstcw
pusha
and
inc
jl
jecxz
addr16
push
add
add
add
add
es
cmpsb
dec
and
fs
xor
sub
mov
out
lea
jecxz
push
add
popf
mov
inc
mov
leave
data16
pop
cmp
sahf
shrb
cmpsb
and
add
sbb
sti
fcompl
mov
rcrl
clc
int3
pop
cmp
inc
mov
rcll
je
adc
jne
mov
aaa
push
js
sbb
inc
push
xchg
ljmp
cmpsl
je
xchg
xchg
mov
loop
cmp
jle
adc
data16
xor
bound
push
xor
stos
jl
sahf
adc
sub
std
addr16
outsl
push
mov
cmp
out
jmp
call
push
add
mov
std
xchg
jp
add
mov
div
jle
mov
das
push
jb
and
cmp
xor
test
jne
push
call
dec
pop
arpl
push
push
stos
call
cmpsb
inc
and
mov
inc
jecxz
jb
fdivrl
int
add
mov
add
mov
andl
xchg
jecxz
xchg
cmp
ret
cmpsl
mov
and
xchg
pop
lods
jg
mov
push
mov
fcomps
mov
call
mov
gs
ret
or
cmp
cli
movaps
jmp
jg
mov
cmovb
movsl
xchg
pushw
xchg
in
lcall
loope
jbe
jbe
mov
loope
mov
in
mov
and
xchg
shlw
std
xor
test
push
es
loope
and
xor
sub
ja
loope
repz
sub
cmp
fcoml
shll
jmp
push
and
data16
shll
std
mov
jmp
add
jle
sbb
add
push
adc
dec
adc
leave
ffreep
pusha
inc
arpl
pop
lds
pop
cltd
inc
xchg
push
loopne
jle
dec
ret
data16
outsb
add
inc
out
add
lods
pop
or
xchg
push
mov
test
or
mov
sbb
push
add
or
int3
sbb
in
inc
adc
loope
jns
int3
and
push
or
je
push
cwtl
xlat
mov
xchg
push
xchg
xorl
imul
and
mov
mov
insl
lds
out
cmp
add
sub
and
xchg
add
push
sbb
nop
push
sub
jmp
sub
jb
into
and
fcoms
cmc
fcoms
cld
pop
push
data16
push
stc
mov
pop
adc
mov
rorb
mov
aad
xchg
iret
popf
jb
xorb
loop
or
inc
inc
jge
loop
insl
push
cwtl
mov
jle
xchg
dec
lret
sti
sbb
xchg
std
jl
stc
xchg
mov
aas
inc
mov
jge
mov
jle
mov
xorb
movsl
or
inc
fimuls
mov
loop
sbb
jg
jmp
add
jp
or
popa
loope
xchg
andl
std
out
aam
jno
out
mov
sub
add
add
add
add
xchg
aad
aam
lods
mov
aam
push
loope
mov
jmp
cld
cmp
ljmp
xor
jmp
mov
cmpsb
xchg
into
inc
loop
mov
inc
mov
jb
xchg
push
cs
push
aaa
jo
pushf
insb
fs
cmp
adc
lds
loope
add
xor
add
or
and
dec
push
mov
pop
pop
or
cmp
test
sub
inc
daa
xchg
je
sub
inc
addr16
je
sub
xlat
lret
rcrb
adc
jg
ret
sbb
dec
fs
std
insl
das
ret
cmp
ror
notb
insb
xchg
push
lret
inc
xchg
jne
inc
mov
add
add
add
and
fadd
adc
rolb
dec
es
xchg
rcrl
jb
popf
inc
add
jae
add
insb
jae
test
jmp
je
jo
and
cld
inc
pusha
lds
movsb
sti
xchg
pop
jg
push
mov
and
sub
xorl
xchg
jae
movsb
inc
jmp
add
push
pop
push
out
lret
and
inc
xchg
sub
cmp
and
add
mov
xchg
jmp
lods
ljmp
jle
mov
jle
mov
sbb
adc
js
inc
push
mov
fcmovnu
pop
jle
mov
mov
xchg
inc
jb
andl
add
add
mov
sub
ret
fwait
xchg
or
sbb
dec
cli
add
xchg
lock
fidivrl
hlt
add
jg
lds
mov
int3
mov
test
sub
mov
ja
mov
push
pusha
mov
jb
in
fs
arpl
sub
imul
dec
lods
pop
add
pop
jnp
dec
xchg
dec
in
cmp
sbb
add
aad
jbe
push
bound
push
jmp
in
pop
sub
rclb
mov
lret
jmp
stc
roll
cld
sub
comiss
cmp
les
adc
ljmp
stos
jp
loope
pop
ret
sbb
jmp
push
test
xchg
incl
push
inc
fwait
data16
sbb
mov
push
notb
fcoml
int3
out
popl
jmp
rol
aas
incb
jg
inc
fdivs
pop
xor
into
push
fwait
int3
out
dec
mov
push
add
lock
test
mov
xchg
incl
imul
rcrb
faddp
stos
add
es
adc
add
ret
or
cmpsb
test
push
or
sbb
iret
push
repnz
jae
jbe
jae
adc
jb
mov
ret
das
mov
fnsave
xor
mov
sarl
cmp
pop
cmp
inc
div
repz
test
outsb
and
mov
jmp
push
add
add
add
add
sarb
and
lds
in
push
mov
pop
cmp
add
movl
leave
ljmp
jp
cmpsb
xchg
mov
mov
and
aas
mov
mov
pop
dec
cmp
or
pusha
mov
daa
jle
int
xor
lods
push
adc
andb
mov
add
add
add
cmc
neg
lds
fimull
lret
mov
or
xchg
daa
scas
jg
dec
lea
xor
into
outsb
dec
inc
adc
or
mov
or
ror
mov
mov
aaa
sarl
xchg
fdivrp
jg
push
xor
test
xor
adc
and
pop
stos
notl
jmp
fs
add
xchg
jb
xchg
push
pop
enter
je
mov
push
mov
jmp
decb
in
cmp
dec
adcl
or
scas
sbb
xchg
cmpsb
sbb
icebp
rcrl
push
jb
and
adc
mov
pop
loopne
test
dec
popf
fucomip
pop
or
leave
rcrl
sub
add
inc
pop
add
jb
ja
lret
inc
ret
xchg
ret
leave
lea
in
xor
ljmp
push
data16
orb
lcall
xlat
fisttps
pop
lods
cld
sub
xor
out
orb
xchg
xchg
jne
lcall
jb
orb
les
add
add
add
xor
loope
stc
ss
xchg
or
rclb
ljmp
sarb
sbb
loope
out
jb
add
repnz
push
xor
cmpsb
sub
lds
push
repz
cld
lds
push
or
mov
sub
adc
and
test
pop
add
out
mov
push
leave
loope
jne
repz
xchg
xchg
into
push
sti
std
addr16
pop
dec
insl
jns
leave
pushl
inc
sbb
data16
sbb
sbb
std
mov
cmc
mov
add
inc
sbb
or
cmp
sub
jb
in
adc
or
ljmp
out
add
push
push
jb
ljmp
imul
fs
sahf
xor
hlt
lock
add
sbb
loopne
dec
fildll
sub
addr16
imul
xchg
idivb
mov
movsl
fisubl
inc
cmp
add
jo
loope
dec
ljmp
ljmp
add
add
add
mov
add
mov
xor
xchg
lock
jmp
icebp
lods
dec
aad
mov
bound
inc
xchg
fdivrl
xor
bound
and
scas
data16
cmp
call
pop
in
xor
pop
aas
cmp
aas
and
inc
sub
xchg
xchg
je
aam
jns
sub
ret
rclb
add
add
add
add
jg
add
xchg
imul
and
sbb
jmp
cmpsl
push
sbbb
in
sub
data16
sub
stos
cltd
jg
ret
push
lret
inc
cwtl
push
inc
movsl
pop
jecxz
out
add
inc
je
mov
xchg
call
xchg
adc
jb
stos
jae
ja
dec
sbb
push
jns
sbb
xchg
cld
add
sbb
idivl
lods
imulb
mov
dec
xchg
into
negl
stc
loope
push
or
std
adc
icebp
and
jg
xchg
xor
mov
out
data16
std
pop
and
jp
test
fistpll
jb
adcb
push
mov
out
xor
in
jmp
or
add
sbb
xchg
pop
cmp
jb
repz
sbb
xchg
clc
incb
jb
fcomi
outsb
aam
adc
xor
rclb
xchg
sbb
in
jp
sbb
xchg
mov
add
or
pop
push
pop
cmp
dec
mov
stc
pusha
lcall
cltd
loop
jg
mov
addb
ret
jg
lret
add
sarl
pusha
xchg
xor
adc
xchg
xchg
xchg
cmc
cltd
dec
sbb
jno
sub
jbe
jecxz
gs
dec
movsl
sub
addr16
mov
jecxz
insl
xorb
dec
adc
jge
shlb
ds
sbb
lea
data16
ljmp
add
add
jno
add
data16
mov
jno
jl
addl
cmp
add
fmulp
jecxz
xchg
cmp
sub
cwtl
loope
ja
ss
icebp
pushf
push
aad
cmp
lods
aad
mov
stos
aad
jle
xor
cmp
pop
test
bound
sbb
sarb
pushl
sbb
sbb
cmp
filds
sub
aam
dec
lock
std
ficomps
xchg
je
loop
push
ja
aaa
jmp
mov
lret
xchg
xor
jb
jmp
lahf
mov
push
shll
fwait
mov
lahf
mov
jb
dec
rol
cmp
rorl
cmp
insl
cmp
add
xor
adc
inc
cli
sub
and
imul
jl
inc
adc
sub
cmp
scas
mov
shll
aas
stc
sub
iret
jl
and
test
js
pop
add
dec
push
jb
xor
arpl
sub
mov
loop
add
in
outsl
add
mov
out
in
les
xor
fwait
imul
jg
and
aaa
outsl
jmp
loop
push
stc
jp
pusha
pop
in
sbb
pop
rcrb
push
pop
dec
sub
inc
mov
jg
loope
out
add
jmp
pusha
or
data16
push
imul
jo
cmpb
or
bound
sub
test
jp
sub
cltd
xchg
loope
jmp
jle
out
xchg
pop
cmc
test
ds
repnz
xchg
hlt
xchg
aam
jmp
repnz
jmp
ss
jle
lcall
jl
mov
sub
arpl
mov
stos
aas
mov
sbb
in
add
cmp
jno
aaa
push
cli
mov
push
mov
jmp
lea
xor
add
aas
jmp
push
xchg
decb
mov
inc
stos
or
or
loope
mov
pop
popf
pushl
aad
rcrl
and
pushl
es
or
jns
add
test
nop
sub
out
mov
dec
xor
or
inc
adcl
lea
or
jb
push
xor
out
mov
inc
pop
add
in
push
jo
fldcw
out
cmp
cltd
adc
sub
add
pop
inc
sbb
jmp
adc
add
outsl
psubd
rol
daa
movsb
xchg
imul
and
mov
sbb
mov
lcall
std
addr16
jnp
jb
lcall
sbb
ret
aad
sbb
je
jb
dec
mov
dec
aam
add
add
rcll
call
lret
xor
test
jb
hlt
roll
mov
xor
xchg
outsb
pop
scas
fwait
test
daa
mov
mov
mov
xor
cmp
xchg
mov
push
stc
dec
loopne
data16
dec
repnz
ja
sbb
mov
sti
push
jmp
imul
mov
mulb
inc
xchg
out
cs
add
xchg
stos
test
jl
popa
xchg
daa
shr
aas
jno
data16
mov
or
jbe
or
outsb
push
sub
es
sub
push
push
sub
es
je
and
adc
add
jl
xchg
xchg
aad
movsb
xchg
inc
outsb
data16
sub
jno
and
cmc
or
xor
push
pushf
pop
shr
pop
jbe
data16
add
add
add
add
and
jp
incw
ja
sbb
xchg
aas
xchg
decl
mov
arpl
loopne
lea
add
sbb
ljmp
xor
std
fcoml
hlt
add
enter
loope
xor
push
imulb
mov
shll
push
add
enter
mov
add
cmp
std
mov
push
leave
xor
add
je
adc
out
lcall
sbb
jbe
and
test
clc
out
loop
or
inc
insb
call
cmc
loop
cld
xchg
jns
jb
daa
cld
xor
pmuludq
sub
int
cmp
pop
sbb
jb
test
add
push
testb
movsl
stos
fistps
or
xor
sbb
incl
sarl
jb
stos
jb
mov
xchg
imul
dec
ret
xor
fimull
inc
jb
adc
cs
les
cmp
in
push
and
adc
shl
lret
sub
add
push
mov
dec
cmp
popf
add
add
mov
jns
fcoml
push
lods
xchg
jae
jg
jecxz
add
adc
mov
mov
xchg
arpl
jbe
xchg
ss
push
xchg
iret
push
and
call
and
add
add
add
jbe
jne
mov
repnz
out
jle
jae
fs
test
mov
in
out
jecxz
lcall
cld
add
dec
dec
cmp
xchg
pop
sbb
and
xchg
ss
cli
in
jmp
ss
fimuls
adc
sub
push
cltd
pop
cmp
test
dec
loope
das
mov
mov
cmpsb
inc
dec
cld
sbb
callw
data16
dec
jne
cmpsb
xchg
dec
dec
clc
or
lea
mov
fcmovnb
ss
mov
inc
popa
xor
mov
in
xchg
or
sti
mov
add
sbb
fwait
inc
sahf
lcall
jnp
jns
mov
pushl
adc
add
popa
add
adc
add
popa
add
adc
add
pushf
cld
xor
inc
adc
push
out
mov
fidivs
push
mov
insl
add
push
inc
cmp
xchg
cmp
xchg
dec
ss
push
add
sar
lds
push
or
incl
push
out
adc
jb
mov
jo
jg
icebp
push
test
push
dec
fs
jg
icebp
jmp
lock
dec
pop
addb
or
dec
mov
add
dec
movsb
add
push
jmp
jg
psubb
jg
push
push
addb
jbe
jg
and
sar
cmp
push
subb
mov
jb
or
ret
add
push
or
jbe
jg
inc
push
or
lcall
gs
shrb
jbe
gs
push
addr16
ljmp
jno
ss
push
insb
xor
add
add
add
vmovd
jno
jle
and
xchg
push
adc
sbb
mov
xchg
sub
dec
jmp
jle
pop
cmp
jnp
jns
jg
lods
push
lret
mov
cmp
jg
pushf
in
mov
jmp
sbb
pop
sub
test
jns
mov
mov
sbb
add
pop
sub
rol
pop
adc
leave
enter
push
pushf
int
adc
leave
aas
repz
and
out
and
xor
sbb
pushf
movsb
add
leave
shll
mov
aaa
cli
ds
mov
dec
jns
fstpt
jmp
insl
notb
mov
rol
cmpsb
mov
outsl
sti
push
cmp
add
fs
add
mov
test
jns
das
jg
lcall
sbb
inc
add
jb
jg
stos
ljmp
add
in
mov
push
mov
mov
mov
adc
aad
mov
outsl
sbb
push
mov
jg
imul
add
add
jmp
imul
add
add
add
add
add
add
out
fst
inc
or
cli
or
xor
movsl
out
loop
out
push
xchg
inc
jb
jg
mov
xchg
pop
jp
movb
jg
and
pusha
ficoml
fistpl
jg
shrl
push
ret
jno
dec
jmp
arpl
fdivrs
lret
test
ds
xchg
pop
jge
repnz
add
in
sbb
jo,pn
push
sbb
faddl
test
sti
or
jp
dec
inc
and
sbb
jmp
inc
into
jmp
movsb
inc
int
jno
jmp
and
push
jp
mov
in
sub
jmpw
cmp
xor
jmp
hlt
and
jg
add
xchg
fs
test
mov
jno
xorw
xchg
jo
loop
out
add
dec
movsl
gs
cmpsl
ljmp
sbb
fwait
pop
sbb
mov
lret
fwait
ret
outsl
into
fists
out
mov
jb
jg
add
in
push
or
lea
lahf
shrb
fwait
lds
push
mov
test
lahf
push
cmp
pop
push
ja
dec
sahf
stos
jmp
cmpsb
pop
in
das
pop
loop
push
pop
sbb
adc
lds
in
inc
fldenv
je
mov
lret
pop
sub
data16
test
subl
inc
or
bound
jb
xchg
pop
and
cld
add
call
and
gs
out
push
mov
and
mov
adc
imul
push
nop
add
or
outsl
push
scas
out
xchg
stc
dec
subl
pop
mov
sub
inc
mov
adc
push
and
xchg
push
or
imul
jp
push
and
xchg
lcall
cmpsb
pop
and
jmp
pop
sub
jg
out
fwait
dec
inc
sub
lahf
mov
in
jg
mov
loop
mov
into
or
mov
dec
sub
subb
push
mov
inc
sub
add
movhps
ljmp
movsl
movb
mov
pop
movsl
jo
push
mov
inc
in
jg
leave
mov
jle
add
lcall
jg
xor
mov
notb
add
pop
bound
jns
xchg
in
daa
ljmp
mov
sti
xor
fbld
mov
cmp
loop
fcompl
out
jmp
sbb
iret
adc
dec
mov
daa
push
iret
jb
cmp
loope
nop
xchg
pop
cwtl
fildl
xchg
ret
mov
push
push
adc
aam
lcall
cmp
cmpsl
xchg
jne
push
scas
aaa
lret
testb
rcr
icebp
cld
sbb
out
or
je
inc
mov
shlb
data16
mov
and
mov
sbb
lret
dec
or
lret
dec
or
fwait
inc
push
call
add
add
add
xchg
call
bnd
inc
pminub
lcall
fsubl
add
lea
fsubl
xchg
mov
mov
sub
shlb
mov
je
leave
add
xchg
mov
pop
jecxz
mov
cwtl
mov
test
pop
push
out
hlt
jbe
sub
push
stc
fs
add
mov
jno
ljmp
xchg
mov
mov
notl
add
push
addl
cmp
mov
out
in
sar
sub
inc
push
negl
add
imul
pop
cmpsl
xor
les
dec
or
imul
add
stos
ret
mov
ds
inc
lock
pusha
sub
pop
mov
pushf
cmpsb
mov
pushf
xchg
mov
fiaddl
mov
add
arpl
or
or
fnsave
stos
mov
mov
jmp
mov
mov
add
cli
sbb
scas
add
aas
ret
aas
les
mov
sbb
jg
xor
inc
mov
jb
pop
insb
cli
icebp
data16
jno
call
mov
sub
mov
cmp
push
xchg
neg
movsb
mov
dec
mov
push
js
call
adc
in
stos
jno
data16
sbb
pop
mov
mov
cli
loopne
jle
gs
xchg
xor
mov
xchg
jmp
add
enter
movb
fcmovnb
cmp
loope
sbb
mov
add
lret
push
xor
fists
les
sbb
test
push
mov
sub
push
jnp
imul
out
mov
repz
test
mov
mov
aad
fadds
xor
pop
testb
add
add
add
add
cmp
scas
insl
gs
fwait
dec
jne
cmp
adc
jns
cmp
sahf
cmpsb
adc
aam
adc
into
or
sbb
jmp
loope
jbe
and
subl
pop
cmpsl
mov
mov
jae
jb
bound
icebp
ret
jmp
dec
or
jnp
sbb
xchg
ret
bound
mov
inc
add
fisttps
lret
push
xor
xchg
add
and
mov
test
add
jge
pushf
mov
std
and
ljmp
push
jnp
addb
pusha
ret
lcall
out
inc
adc
xor
add
mov
cli
call
inc
push
mov
inc
dec
out
inc
push
ljmp
jle
jg
out
push
jg
jb
push
and
inc
and
jbe
in
mov
lods
fcomi
push
test
lds
jmp
imul
xchg
inc
jne
jb
jmp
stos
inc
mov
out
jb
negb
packuswb
in
dec
mov
pop
loopne
add
mov
movsl
test
aas
cmpb
jno
cmpsl
mov
rcr
jns
inc
insb
ljmp
jno
ljmp
xchg
jmp
jno
loope
xchg
loop
test
gs
mov
aad
jb
mov
and
jle
into
cmp
add
add
add
add
xchg
sbb
push
out
add
fimuls
in
add
or
leave
data16
sbb
dec
icebp
xchg
je
and
ja
incl
scas
mov
mov
jmp
ret
or
lahf
add
lret
daa
sbb
sbb
sub
fsts
shll
lea
add
add
add
leave
data16
cmp
and
inc
pop
add
repz
leave
jmp
in
xchg
loope
jb
je
add
cli
gs
jge
xchg
adc
pop
jmp
jle
mov
jnp
stos
jecxz
mov
scas
xor
or
sbb
int
call
xchg
push
and
push
jnp
or
and
add
cwtl
es
cwtl
call
stc
bound
lods
push
mov
jb
subl
loop
sbb
jp
cmp
pop
inc
std
test
ljmp
lds
jmp
xchg
jle
sti
subl
add
andb
inc
jb
inc
cmp
scas
inc
sti
dec
jns
xor
sti
or
push
out
push
mov
add
or
aas
int
sarl
pop
data16
dec
jnp
add
jno
cld
adc
jnp
xor
jbe
ret
in
outsl
xchg
jle
add
inc
cs
mov
hlt
jge
je
call
popw
xchg
leave
cmpsb
adc
je
fcoml
mov
add
add
add
add
jmp
and
loope
pop
seto
ds
jo
jle
movsl
jno
popf
fnstsw
pop
outsb
ljmp
dec
adc
xchg
and
call
mov
xchg
fs
cli
sub
mov
xchg
and
xchg
insl
mov
pop
add
push
xor
test
jg
cmp
push
add
xchg
push
add
aas
and
int3
or
dec
ret
jg
xchg
lcall
and
dec
out
push
add
dec
sbb
fcomp
icebp
sub
or
dec
inc
movsl
push
cmp
and
cmp
and
dec
sub
ret
fidivs
out
push
outsl
adc
xor
sbb
cmp
adc
data16
jle
sldt
add
add
add
add
xchg
fldt
in
add
jb
out
jb
dec
sub
repnz
sub
pop
jg
lods
jecxz
push
jb
xchg
xor
and
xchg
bound
jle
and
push
push
insl
movsb
addr16
scas
ret
insb
add
or
jb
push
add
sbb
jbe
add
pop
es
or
xor
mov
adc
mov
dec
daa
addl
andl
jb
nop
ret
mov
jg
jb
je
dec
aad
jg
xchg
mov
jne
filds
call
jg
xchg
lea
add
cmp
lret
add
inc
mov
add
jne
ds
fwait
aas
adc
or
mov
fimuls
fnstsw
sbb
push
push
mov
dec
jo
inc
sub
or
jo
fbld
jmp
sbb
dec
orl
pop
outsb
jmp
xchg
inc
push
imul
das
sbb
add
add
add
loop
jmp
sbb
inc
push
lret
cmp
cmc
xchg
loop
fisttpll
insb
loope
es
dec
and
add
int3
jp
fwait
aas
insl
pushf
orl
aas
sub
push
ret
add
je
aaa
add
or
filds
push
xchg
popa
subl
pop
pop
xchg
shll
pop
push
dec
sub
cmp
and
ret
adc
lods
inc
cmpsl
fisubs
pop
or
lea
scas
lret
add
sbb
and
mov
mov
decl
and
movsb
jnp
and
lea
mov
add
int
push
add
inc
add
mov
sbb
mov
and
jns
or
scas
test
xchg
shll
mov
fwait
adc
cmp
push
out
scas
aas
jp
xor
inc
push
je
jo
das
and
jecxz
and
bound
add
cmove
iret
test
and
sbb
jbe
data16
xor
add
data16
jmp
jb
enter
push
icebp
lods
pop
push
adc
xchg
jb
int3
daa
inc
push
sar
or
cli
xchg
mov
outsb
lock
repz
add
andl
mov
jp
ficompl
inc
dec
mov
and
mov
test
inc
in
repz
add
add
add
and
sub
mov
stos
cmc
pop
sbb
mov
push
aas
xchg
fimuls
mov
jle
mov
stos
data16
inc
cmpsl
div
aaa
addr16
jb
icebp
jmp
in
jmp
jno
data16
scas
gs
add
push
add
or
sbb
lock
jnp
add
sub
push
retw
sub
popl
and
dec
shl
loope
push
jb
rcr
or
mov
popf
test
into
jmpw
loope
das
xchg
jno
es
ja
add
add
sbb
xor
ficoms
fwait
rcrl
push
notb
aam
daa
stos
jbe
add
inc
mov
push
inc
out
filds
add
lea
and
or
xor
and
je
loop
leave
pop
sbb
or
enter
add
loope
lahf
lods
dec
fbstp
sbb
loopne
arpl
dec
popf
cmpsb
dec
pop
ds
jl
add
add
sub
xor
imul
add
add
add
cmpsb
cs
sub
xor
out
mov
repnz
dec
adc
push
add
imul
arpl
xchg
sub
jb
imul
lods
out
jbe
bnd
adc
fwait
push
push
mov
ds
pop
sub
insl
loope
mov
das
push
push
fsubs
pop
std
out
dec
std
add
or
fadd
jnp
sti
adc
xor
call
mov
jp
push
lods
jp
les
inc
jp
inc
or
inc
dec
cld
inc
add
js
dec
int3
daa
mov
or
addr16
dec
sub
pop
add
aad
push
or
lds
stos
imul
add
add
add
add
sbb
call
lea
cwtl
in
push
mov
data16
call
xchg
jge
dec
ret
ds
or
ja
loope
dec
fsub
in
fadd
jmpw
and
mov
push
push
jp
loopne
xchg
stos
loopne
jmp
ret
add
pop
mov
jnp
xor
or
adc
xor
stos
mov
xchg
aaa
adc
mov
cmpsb
jp
add
inc
add
lds
movsb
xchg
and
inc
add
or
cmpsb
dec
push
stos
or
push
filds
or
pop
mov
out
pop
mov
movb
xchg
adc
add
dec
add
shl
inc
adc
or
or
call
mov
sahf
jb
inc
xorl
adc
ret
loopw
add
xchg
jp
push
cmpsb
inc
subl
sarl
sbb
retw
cmp
jb
adc
icebp
das
es
mov
cmp
jae
leave
insb
pop
pop
pop
outsb
sub
cmpsb
and
add
rcll
bound
fstpt
call
test
int
js
hlt
sbb
or
ret
mov
ficoms
sub
testl
shl
jg
inc
mov
push
js
imul
or
jo
sub
jns
mov
xchg
enter
stc
add
sbb
and
mov
stc
icebp
jo
and
mov
int3
pop
xchg
imul
xchg
enter
inc
jb
inc
stc
icebp
inc
addb
dec
cld
pop
mov
sti
inc
repz
jmp
jae
jl
mov
or
mov
and
mov
mov
add
add
add
mov
sbb
aad
lcall
outsb
jp
lds
out
jno
jmp
cmpsb
xchg
loope
cmp
cmpsl
cmc
mov
or
xchg
mov
push
mov
sbb
sub
jmp
fdivp
bound
rcrl
fwait
xchg
push
mov
dec
sub
add
insl
cwtd
test
add
fists
cmc
mov
xchg
hlt
fsubs
jmp
addb
add
das
or
cmpsb
push
adc
out
aam
popa
adcl
xchg
adc
shlb
fistl
xchg
mov
ffreep
jne
push
clc
test
push
mov
jbe
sbb
jns
add
xchg
dec
inc
pushf
je
dec
decl
mov
lcall
jbe
pop
pushf
jp
bound
test
xchg
push
fwait
pop
jge
add
add
pushl
test
int
outsl
lods
cld
xchg
pop
xchg
mov
adc
icebp
push
orb
mov
mov
fld
push
les
dec
jno
imul
push
mov
jb
imul
mov
mov
or
pusha
adc
or
jae
fs
sbb
jne
sbb
jle
pusha
das
push
das
negl
pop
jno
dec
sarb
inc
rclb
sub
jo
gs
jb
inc
hlt
add
stc
mov
mov
mov
in
mov
cmpsb
add
xchg
sbb
lcall
fcomps
sub
das
jae
jns
stc
mov
les
stc
popf
les
mov
jb
repz
adc
dec
inc
and
jns
add
adcl
bound
add
add
add
add
jecxz
xchg
fidivs
push
lods
dec
sub
mov
and
xor
jmp
cmp
shrb
push
cmp
lea
dec
leave
orl
xchg
jb
fistps
jno
cmp
push
inc
and
mov
iret
loope
mov
lret
ss
cmpsl
mov
push
fwait
xor
mov
test
pusha
cmpsl
lret
flds
add
les
ljmp
cmp
fisttps
dec
cmp
add
orb
push
inc
mov
iret
mov
outsl
dec
dec
je
inc
sbb
xor
in
add
into
repz
or
dec
dec
mov
test
lds
jns
sbb
aaa
mov
sbb
fucomip
add
xchg
je
loop
jb
movsl
out
imul
sti
in
fidivrs
enter
lret
ljmp
mov
push
mov
imul
sbb
in
push
int
les
in
icebp
daa
test
add
add
add
out
jnp
add
sub
lret
test
xor
in
mov
imul
cmc
pop
imul
sahf
lret
mov
lock
xor
or
mov
imul
inc
pusha
jg
xor
sbb
cmpsb
out
ret
mov
pusha
xchg
cmc
jp
test
stos
popl
and
add
add
add
add
jno
jp
inc
call
sti
lcall
inc
call
dec
xchg
fiaddl
les
iret
add
sbb
fwait
and
adc
or
mov
push
jb
mov
or
dec
into
callw
jmp
lahf
sbb
clc
lcall
add
push
or
sbb
cwtl
bound
mov
fiadds
pop
mov
repz
mov
pop
shll
fstl
aaa
pop
inc
sub
shll
lods
cli
ss
pop
repz
jl
data16
xor
push
repnz
inc
and
jb
cli
pop
mov
inc
mov
sbb
mov
bound
adc
mov
cmp
test
mov
inc
iret
cwtl
xchg
ss
fnstenv
adc
enter
fsub
jge
mov
xchg
dec
jae
jns
cltd
xchg
lcall
leave
enter
pop
fwait
push
fldt
movl
mov
mov
cmp
add
add
add
xor
sbb
xchg
decl
call
pop
jb
jb
jl
testl
leave
mov
mov
push
mov
push
adc
out
sub
repnz
imul
out
out
cld
sbb
push
xor
jbe
mov
mov
cld
cmp
xchg
imul
imul
add
push
js
jb
sub
icebp
daa
aad
loop
ss
ret
scas
aad
mov
sub
out
pop
pop
pop
jnp
shll
fs
hlt
sti
mov
icebp
push
mov
repnz
cmpsl
add
jg
lahf
icebp
mov
mov
inc
aaa
mov
xchg
je
jbe
jl
push
lcall
jnp
mov
repnz
outsb
jnp
jae
fsubl
jb
addb
icebp
jne
adc
inc
jb
push
or
fucomi
adc
xchg
ret
push
nop
mov
push
mov
add
shll
lds
jb
aad
pusha
shlb
imull
sbb
out
jp
data16
jns
jno
test
cmp
hlt
inc
xchg
inc
mov
pop
pushf
jmp
add
add
add
loope
daa
aam
clc
xor
push
aam
icebp
xchg
jmp
push
sub
andl
cmp
xchg
inc
push
xchg
jmp
jo
jmp
mov
test
sbb
cmp
mov
in
push
xchg
xchg
push
repz
sbb
xchg
add
add
and
jg
les
sbb
add
add
add
add
pushf
data16
add
jne
xor
or
adc
inc
xchg
enter
jb
cmc
aad
lods
cld
cmpsl
add
xchg
xchg
adc
sub
jg
out
addb
inc
jmp
push
fs
shrl
mov
xor
cmp
mov
arpl
pop
ret
ss
add
fstp
orb
cld
push
jb
ret
ss
mull
fs
cld
adc
xchg
sar
stc
mov
stc
or
pop
push
pop
rcll
pop
out
sub
negl
arpl
pushf
mov
add
testl
xchg
arpl
add
add
add
add
lods
insb
imulw
inc
or
mov
outsb
mov
xor
mov
push
push
movl
adc
fnstcw
add
testb
outsb
sbbb
les
mov
sbb
inc
inc
xor
sub
int
lods
mov
mov
pusha
xchg
std
in
rolb
inc
xchg
inc
adc
mov
add
add
jp,pn
push
jmp
idivl
jg
dec
mov
dec
or
mov
mov
jb
pop
lea
jg
lahf
cmp
push
sarl
ljmp
repnz
jmp
ss
mov
bound
sti
xlat
inc
fdivs
jmp
jecxz
sbb
jmpw
xchg
push
lret
dec
cmpsl
aam
or
adc
lods
adc
ljmp
repnz
jmp
jbe
cmp
jecxz
sti
jmp
outsl
imul
aas
jmp
or
xchg
hlt
mov
sbb
and
jnp
outsl
fldenv
add
inc
xchg
lcall
xchg
adc
popf
sub
test
arpl
add
shrb
add
popf
push
push
push
and
or
es
scas
jbe
sbb
je
inc
dec
dec
add
enter
lds
add
push
imul
data16
jns
fwait
xchg
pop
xchg
cmp
stos
and
je
xor
add
mov
sub
cmp
add
cld
fwait
jb
imul
jb
clc
aas
jb
cld
lahf
jb
imul
jb
cld
jb
imul
mov
cmp
insb
gs
inc
jb
ja
pusha
sbb
push
jb
stos
jae
dec
fstl
or
sub
out
jb
call
fadd
and
rcr
mov
les
cmc
push
add
lods
out
cmp
add
vandnpd
fmulp
mov
push
mov
dec
add
push
fstl
sarb
jae
sbbl
mov
jb
jle
imul
adc
cmp
test
sarl
push
ja
fisttpll
mov
jne
dec
add
xor
cmp
mov
cmp
mov
xor
cmp
jg
fwait
pushf
data16
xorl
out
mov
and
jno
xor
bound
movsl
mov
jp
sbb
or
push
jno
mov
and
imul
push
sbb
icebp
out
imul
push
mov
add
add
add
add
in
imul
stos
add
inc
int3
inc
and
xchg
loope
cmp
into
xor
mov
mov
push
mov
fiadds
decl
ja
mov
adc
mov
data16
dec
inc
dec
imull
int
fists
or
mov
push
sbb
je
xor
incl
les
xchg
push
xor
xchg
or
test
ret
or
push
lret
mov
add
xor
inc
addr16
rcr
jg
fcmovnb
loope
push
les
bound
adc
insl
loope
jb
imul
mov
in
inc
es
and
and
data16
adc
push
lock
leave
jle
jmp
jle
pushl
and
sarb
mov
push
ret
fucomp
mov
xchg
icebp
out
mov
cmp
incb
add
sarb
jmp
xor
push
stc
and
out
mov
dec
repnz
cmp
adc
addr16
iret
jno
sldt
add
add
add
add
andl
inc
jb
cld
out
cmp
jmp
jns
jecxz
add
adc
movsb
sbb
aas
add
jmp
add
mov
shrl
mov
inc
mov
jnp
mov
in
fsqrt
mov
sub
stos
nop
add
jg
add
out
lcall
mov
movsl
stos
sub
popf
stos
sub
test
ljmp
in
cmpsb
inc
xorl
shll
loope
jecxz
outsb
out
mov
sbb
ret
cmp
mov
test
jno
orl
jns
rcl
dec
pop
loope
dec
movsl
lods
and
add
add
add
sub
and
jno
pushf
stos
jno
je
sbb
icebp
fwait
call
and
and
ror
rorl
fisubrl
xor
push
mov
enter
lock
idiv
ja
inc
mov
mov
push
jle
push
adc
mov
jno
dec
out
push
mov
out
jge
add
out
push
jmp
shlb
aaa
lea
mov
jnp
inc
push
fmull
data16
sbb
push
enter
push
adc
push
inc
das
dec
stc
mov
dec
xchg
imul
xchg
inc
mov
cmp
push
in
imul
addr16
imul
gs
jle
imull
imul
insl
jo
movsb
push
es
sahf
adc
dec
cmp
add
es
and
lret
jle
jmp
jle
cwtl
jle
stc
mov
lods
jo
push
lahf
jne
rcl
mov
jb
jle
add
mov
call
jo
push
pop
jne
rcl
xchg
add
in
test
out
dec
sbb
pop
jbe
aaa
dec
stos
push
dec
push
mov
aaa
dec
xchg
add
lcall
loope
call
pop
pop
arpl
movsl
insb
mov
pop
stos
aas
add
dec
test
sbb
daa
out
pop
dec
sub
orb
dec
addr16
add
add
add
ret
mov
stos
dec
push
mov
addr16
cmp
xchg
jb
xorb
inc
stos
or
in
jmp
jge
mov
xchg
xchg
jns
mov
push
fistps
and
jns
xlat
loop
fprem1
fistpl
out
andl
or
data16
jbe
jmp
test
jg
add
jmp
loope
out
call
cmp
icebp
ja
or
call
ja
fiadds
xchg
je
mov
xchg
jne
mov
xchg
call
jmp
into
arpl
dec
add
pop
mov
pushl
filds
lret
jp
iret
adc
jle
pinsrw
mov
inc
idivb
mov
xor
mov
pushl
rclb
pop
out
or
inc
jb
jp
nop
ret
xchg
mov
daa
jle
jb
pop
and
sbb
inc
insl
aaa
cmpsl
mov
add
call
out
mov
and
jo
add
sub
call
icebp
mov
xorl
imul
pop
icebp
rclb
lods
call
cmp
jb
shlb
pushf
fsubs
jg
dec
leave
mov
jb
push
jns
dec
jg
jb
out
adc
or
lds
sti
push
cmp
mov
jg
add
ret
mov
inc
jnp
mov
inc
dec
cld
fbld
nop
ret
xor
mov
addr16
popf
dec
insl
xor
aas
popf
repnz
and
pop
sub
in
pop
push
jne
or
cli
or
jg
adc
dec
sbb
inc
inc
or
jmpw
add
add
add
add
cmp
push
mov
addr16
fcomp
jmp
inc
mov
flds
pop
push
sbbb
push
mov
data16
lock
jmp
test
lods
ljmp
data16
call
jmp
sub
jg
std
jno
sub
ret
xchg
mov
add
loop
sbb
leave
jle
mov
xchg
mov
pop
xchg
jne
rcl
jmp
xchg
push
mov
iret
hlt
push
leave
add
leave
jle
jno
mov
pop
xorb
mov
pushl
negl
ret
pop
loopne
inc
sbb
and
cmp
popa
xor
jb
int
gs
add
inc
aam
add
sbb
push
mov
fisttps
add
fiadds
fimuls
jmp
xchg
xor
push
xchg
imul
xchg
lds
inc
mov
adc
sti
in
inc
dec
or
xchg
mov
out
repnz
mov
bnd
mov
inc
jb
adc
data16
jmp
jge
cld
lds
and
push
jb
mov
imul
jmp
or
fidivl
inc
loopne
inc
shlb
out
ror
fisttpl
jmp
sbb
jb
jnp
xchg
push
mov
jmp
stos
jecxz
jle
xor
or
dec
jae
add
mov
sbbl
adc
jg
sti
or
mov
lds
jae
inc
pushf
mov
jle
clc
push
in
sbb
adc
fs
inc
jno
jp
mov
stos
dec
jmp
test
jl
cmpsl
xorl
inc
jge
test
fistps
pop
mov
lea
fucomi
fisubs
push
mov
test
add
add
add
jae
jno
loope
push
mov
loope
cmpsb
jne
cmc
cwtl
pop
inc
stos
inc
js
cmc
dec
mov
clc
mov
sub
int
ss
out
xchg
inc
pop
push
dec
std
dec
add
movsl
mov
dec
aad
insl
dec
sti
cs
dec
test
sbb
daa
adc
xchg
outsb
mov
sarl
push
cltd
dec
sub
mov
push
rclb
mov
and
and
ja
push
push
mov
inc
sbb
insb
aaa
mov
push
aaa
leave
ljmp
int
cmp
test
addb
xchg
jae
out
movsl
jne
inc
popf
add
lret
xchg
lds
ja
out
jns
out
jge
pop
sahf
xchg
incl
mov
ds
clc
jbe
jb
aaa
push
inc
inc
imul
out
movsl
push
or
jmp
jmp
xchg
mov
imul
jmp
mov
push
cmp
stc
lret
test
xchg
sbb
and
cmpsb
add
cld
xchg
mov
popf
sub
ret
add
mov
inc
sbb
cmp
notl
lret
dec
popa
test
and
test
and
dec
das
push
cmpsb
je
dec
cmpsb
jl
push
cmpsb
fs
dec
cmpsb
js
and
fildll
or
push
mov
js
mov
insb
mov
pusha
xchg
cmp
jmp
cmp
fcmovb
jg
adc
mov
cmp
mov
sti
imul
push
stos
xlat
push
push
mov
add
push
arpl
inc
jne
ror
mov
xor
push
inc
sub
nop
mov
xchg
in
jmp
int
jo
pushf
mov
enter
rcrb
out
pop
push
pop
mov
xchg
insl
xor
fimuls
pop
rcrl
cmc
fwait
rcrl
cmc
adc
rol
aad
jmp
inc
inc
sub
and
je
add
xchg
hlt
gs
arpl
stos
jbe
lods
jl
outsb
cli
leave
jnp
jno
stos
in
in
push
dec
cmc
jno
push
push
stos
outsb
add
mov
sbb
enter
add
data16
sub
and
sub
and
stos
sub
or
sbb
clc
lcall
add
lods
dec
sbb
dec
or
lret
addr16
sub
sbb
sbb
sbb
mov
xchg
jne
lcall
add
fcomip
repz
add
inc
lods
pop
gs
data16
add
cmp
shl
dec
aad
pushw
popf
cld
pop
iret
jb
jle
jge
lds
mov
cld
pop
mov
cld
pop
or
and
pop
fcmovnb
jb
int3
jge
test
std
add
ret
jecxz
pop
xor
imul
ds
scas
ffree
jb
or
adc
jbe
in
outsl
jbe
xor
sub
fstpl
cmp
js
jb
jge
add
jmp
jns
fcmovb
out
out
rol
add
sub
repnz
xor
aas
fwait
dec
insb
mov
sub
sbb
in
fwait
mov
jle
cli
repz
mov
jl
jg
clc
rorl
xchg
ret
repnz
xchg
roll
mov
mov
xor
rcrb
jle
ror
sahf
xor
mov
xor
mov
add
imul
dec
dec
lcall
inc
jns
bound
loopne
call
jbe
fcomip
or
into
je
lods
mov
xchg
call
xchg
mov
out
jo
ss
rcll
fstps
out
add
pop
out
xor
or
hlt
call
jecxz
pop
ret
ss
push
xchg
xor
jnp
bound
ljmp
dec
outsb
dec
out
test
loope
or
dec
add
sbb
xor
test
mov
xchg
je
repnz
mov
add
push
add
pop
ja
lea
xor
mov
xchg
incl
fwait
inc
and
cmp
call
jl
dec
adc
mov
call
xchg
loope
cmpsl
jmp
dec
sub
lret
cmp
push
jmp
xor
sbb
jp
xchg
cmp
gs
fdivs
mov
pop
lods
pop
add
add
outsl
and
inc
outsl
and
dec
outsl
and
push
outsb
and
scas
ret
pop
repz
add
add
add
add
sbb
jae
fistpll
and
mov
iret
cmp
jae
iret
loopne
push
lret
pop
mov
pop
dec
fdivp
idivl
xorl
jbe
jmp
ja
cld
gs
sub
outsl
fs
or
or
mov
les
push
imul
mov
mov
add
add
add
adc
cmp
xchg
pop
inc
mov
lahf
xor
mov
add
out
mov
in
mov
xchg
imul
ljmp
xchg
pop
lcall
addb
cli
add
and
jg
test
mov
insl
iret
in
ficomps
cmp
mov
pop
pop
inc
movsb
pushf
repnz
hlt
cmp
sub
mov
cmp
pop
sub
inc
cmp
push
mov
fbld
jle
cmpsl
fucom
inc
adc
push
pusha
scas
loope
jmp
mov
sbb
cmp
jle
dec
iret
xchg
addl
add
add
add
add
sbb
mov
sub
arpl
xchg
jne
lcall
test
xchg
jmp
add
pop
rorl
filds
call
add
lret
add
lret
repz
hlt
sbb
cmp
xchg
decl
cmp
pop
add
mov
loope
outsl
out
lock
dec
loop
add
leave
push
lret
leave
jle
sahf
xor
iret
in
bound
add
push
and
lea
leave
data16
jo
imul
bound
call
cmp
push
mov
dec
and
xchg
pushl
jecxz
mov
imul
lahf
lock
or
fistpll
mov
lcall
add
add
add
imul
inc
lods
push
push
mov
mov
inc
pop
es
cmovb
jb
mov
inc
mov
outsb
and
xchg
pop
pop
popa
mov
jp
push
add
sbb
inc
add
push
and
das
pop
push
jne
mov
ret
push
imul
cmpl
dec
jg
mov
arpl
add
push
arpl
mov
imulb
jmp
stos
out
cli
mov
lock
aas
sub
xor
mov
or
jg
test
sub
sti
cld
daa
inc
and
jg
mov
cmp
dec
inc
inc
pop
mov
jg
jmp
sbb
data16
mov
push
push
lret
cli
idivl
xchg
outsb
push
data16
mov
je
lret
or
xchg
push
inc
lret
fdivr
xor
dec
js
or
mov
mov
jno
cmpsl
sbb
lret
mov
leave
sbb
test
leave
sbb
cmp
sbb
cmp
sbb
sub
sbb
push
ss
push
fucom
xlat
jmp
test
sbb
add
add
add
cmp
scas
cld
leave
loope
repz
sbb
jno
loope
cmp
xlat
movsb
pop
callw
xchg
call
xchg
movb
xchg
pusha
ret
mov
inc
xchg
je
inc
iret
mov
add
xchg
xchg
je
xchg
xchg
pop
data16
cmp
xchg
call
sbb
je
add
lret
inc
mov
add
cmp
call
sub
dec
push
sub
dec
push
insb
mov
dec
push
dec
mov
dec
push
insb
mov
gs
push
loope
mov
stc
out
scas
imul
mov
sbb
dec
mov
lds
negl
ja
imul
add
jb
es
in
inc
dec
rcrl
dec
cmp
stos
push
jbe
lcall
add
inc
pusha
jmp
imul
and
push
and
das
filds
cmc
mov
and
cli
push
or
jmp
jle
jb
out
dec
outsl
inc
jl
jb
cmpsb
jo
jg
sti
jp
aas
cmc
xor
add
sbb
add
push
jns
mov
ja
mov
mov
mov
pop
mov
mov
xchg
mov
ja
mov
push
or
jb
addb
sbb
inc
leave
xchg
jg
inc
mov
xor
jo
orps
mov
lret
xchg
push
cmp
jno
gs
add
add
add
add
xchg
jmp
inc
cmp
addr16
ljmp
aam
mov
and
fsubl
jmp
mov
xchg
jo
mov
jmp
jno
lahf
jb
mov
and
cmp
jmp
mov
sbb
mov
cld
xor
jmp
mov
add
add
add
es
call
jg
jmp
xor
and
outsb
xor
jg
add
cmp
scas
dec
push
fs
dec
push
je
dec
push
fimuls
fimuls
inc
fimuls
mov
and
sti
xor
xchg
jmp
loope
sbb
lea
pop
xchg
xor
stc
ljmp
jge
pop
scas
jge
pop
scas
jge
add
fisttpll
cmp
add
std
inc
pop
cmpsl
adc
pop
sbb
pushf
aad
jb
lea
and
std
rcll
add
jg
dec
lcall
jl
lea
inc
out
clc
jae
lahf
pop
push
ret
and
push
push
push
scas
scas
clc
jae
lret
imull
repnz
pushf
test
add
mov
nopl
jg
ret
std
xchg
sub
dec
or
in
jo
ds
dec
inc
in
mov
aaa
cli
mov
jg
inc
or
mov
jl
lods
jl
xchg
les
mov
repz
jl
add
lea
add
aas
sbb
js
mov
add
mov
in
lret
inc
les
cmp
xchg
rcl
xchg
icebp
lahf
push
pop
or
testb
and
leave
cmpsl
pop
xlat
lds
push
jge
les
or
sahf
inc
jb
lcall
cmp
fs
xchg
fstps
ret
scas
xlat
data16
scas
xchg
mov
add
ret
loop
arpl
pop
into
xchg
cltd
dec
adc
loop
xchg
lods
aaa
xlat
pushfw
out
jmp
add
dec
xchg
inc
out
insl
jmp
mov
jecxz
push
adc
mov
ljmp
ret
outsl
adc
push
cmp
jno
jecxz
xchg
and
ja
inc
add
dec
aad
sti
fistps
push
arpl
lret
add
adcl
mov
aad
call
xor
xor
add
sti
xchg
rcll
or
test
inc
cmp
adc
add
dec
idivb
decl
inc
sub
test
xchg
mov
loopne
out
bnd
push
lea
and
inc
add
aad
xchg
int
pop
lea
push
fidivl
pop
add
pop
in
inc
fsub
shr
icebp
push
xorl
in
js
dec
call
jb
out
lcall
dec
out
out
xchg
orl
sbb
pop
outsl
scas
imul
ret
or
in
dec
inc
movsl
mov
lahf
xchg
inc
call
out
mov
xchg
pop
std
adc
fsqrt
push
sbb
mov
inc
add
push
ret
sub
test
dec
add
aaa
ret
cld
jo
jg
xor
push
inc
dec
dec
aas
std
icebp
mov
jle
scas
negb
stc
or
add
rcll
es
jle
push
mov
stc
inc
jmp
xchg
addl
push
lret
pop
lea
cmc
iret
add
shlb
scas
push
pop
jb
data16
ss
notl
cmpsb
out
in
ss
xchg
sub
das
xchg
gs
jmpw
jg
xchg
mov
sub
out
add
or
imul
dec
sub
sbb
fs
ljmp
dec
cmp
cwtl
scas
xor
jno
jecxz
stc
push
incb
cmp
xor
xor
jmp
add
dec
out
add
nop
je
cltd
aad
or
fbstp
sbb
testb
add
add
add
add
ret
hlt
xchg
andl
sub
sbb
inc
orb
dec
pop
mov
fwait
bswap
xchg
decl
pop
data16
dec
cmp
jl
mov
xchg
test
lret
sbb
iret
andb
ret
data16
pop
popa
lea
add
jb
jp
add
xchg
imul
jmp
mov
sahf
sub
or
jnp
cmc
and
add
decb
out
cmc
mov
add
pop
jnp
lds
stos
or
arpl
jb
decb
jmp
mov
mov
stos
or
dec
imul
out
jne
mov
pop
dec
jp
and
add
add
add
divl
push
jb
decb
jmp
mov
sub
dec
push
adc
mov
add
fdivrs
inc
jb
fwait
adc
mov
add
mov
scas
lahf
adc
mov
add
or
mov
mov
cli
add
call
scas
daa
adc
xchg
mov
add
mov
scas
imul
add
loopne
add
sbb
sbb
xchg
fs
jo
movsb
jo
adc
outsb
inc
mov
or
and
test
and
sub
jo
addr16
pop
dec
arpl
mov
gs
inc
arpl
add
add
add
pop
addr16
loopne
ljmp
dec
movsb
inc
mov
sbb
xchg
mov
sahf
imul
jmp
jno
pop
add
lret
jo
aam
xchg
decl
cmp
mov
xchg
sbb
lcall
add
rclb
mov
nop
sbb
data16
and
aaa
push
int3
mov
adc
ret
push
andb
ret
popa
mov
xchg
dec
inc
js
mov
inc
xorb
and
cmp
mov
dec
xchg
jne
cmc
aaa
call
xchg
lcall
js
jb
sub
dec
outsl
or
xlat
rolb
in
adc
sub
add
arpl
xchg
mov
add
scas
adc
jmp
and
mov
pusha
in
xorb
imul
and
sar
vpaddsw
rcrb
mov
jp
jmp
jle
push
jmp
mov
daa
or
sbb
cld
add
stc
add
dec
shl
adc
andb
out
repnz
enter
dec
dec
fwait
sbb
xor
clc
add
mov
pop
jnp
lret
xchg
inc
mov
mov
scas
pop
dec
vcvttss2si
dec
pop
cld
in
mov
loopne
jo
sub
scas
cs
xchg
repz
les
test
add
nop
js
and
mul
or
sub
bound
inc
bound
outsb
fisubrl
inc
and
dec
dec
sub
push
inc
mov
pop
or
je
loop
cltd
xchg
adc
cwtl
xchg
xchg
mov
cmp
cmc
insl
or
jmp
mov
fsubl
jae
dec
add
add
lds
lahf
mov
pusha
xchg
loop
insb
mov
dec
insb
jge
jb
or
add
aaa
mov
cmpsl
or
mov
jmp
and
pop
pop
inc
mov
push
shl
xor
lahf
xchg
xorl
jno
cltd
dec
sbb
ds
jmp
and
sub
cmp
mov
inc
jmp
pushf
fsubrp
add
popa
mov
xor
cmp
mov
sub
add
ret
loope
add
add
sbb
push
adc
xor
rcr
fisttpl
sbb
push
ljmp
sbb
mov
or
sbb
sub
mov
dec
mov
mov
mov
mov
sub
add
pop
imul
jnp
push
adc
add
push
outsb
xlat
push
lods
pusha
mov
push
inc
pop
pop
std
jmp
push
lret
dec
xor
push
mov
add
movsb
jns
add
push
lahf
and
push
popa
push
jmp
popf
mov
jmp
add
ret
dec
repnz
movsl
sub
xor
lds
popa
push
mov
mov
adc
xor
xchg
pop
jbe
mov
shll
jb
js
orb
mov
js
dec
or
hlt
addr16
or
cli
iret
int3
pop
lret
add
enter
cmp
loop
mov
add
inc
inc
or
hlt
cmp
insl
jb
and
xchg
out
inc
es
push
jnp
call
mov
mov
jmp
push
cwtl
mov
fldenv
addr16
decb
pop
cli
jns
jno
cmpsb
pop
jp
cmpsb
shlb
insb
cltd
jo
test
sub
int
stos
add
or
push
data16
mull
cld
jno
es
aad
sub
jge
mov
inc
test
or
push
jbe
inc
sub
sti
into
incl
jle
ds
pop
pop
inc
pop
loope
pop
xchg
xchg
adc
sbb
cmpsb
push
add
ret
sub
add
adc
sbb
xor
je
jg
sub
push
iret
add
add
mov
vmread
cmp
sub
in
into
pushl
int
xor
aas
mov
and
loopne
jmp
pop
xchg
xor
and
loope
mov
push
sbb
jge
mov
jne
or
add
insl
scas
push
jmp
jb
adc
test
pop
push
xchg
ss
cmpl
and
mov
imul
jae
in
mov
mov
adc
jae
mov
adc
or
mov
xor
movsb
daa
inc
jns
and
imul
add
add
ds
jle
pop
xchg
ret
xchg
dec
aas
clc
inc
mov
and
adc
mov
mov
outsb
fucomi
adc
movsb
adcl
mov
push
sbb
cmp
fidivl
fidivrl
ja
inc
or
aas
jae
push
enter
aam
add
mov
jae
inc
data16
sbbb
aam
shll
add
pop
ss
aam
stc
mov
pop
test
pop
cmp
fs
sbb
or
cmp
add
jle
stos
xor
xchg
hlt
leave
es
repz
ret
jo
push
iret
arpl
xchg
hlt
int
es
aam
fnstenv
mov
lahf
jmp
xor
jp
pop
adc
add
aaa
add
add
and
adc
jno
loope
xor
jns
sbb
je
xchg
mov
mov
call
xchg
test
mov
push
lret
xchg
ss
sahf
sbb
ss
fnsave
jns
lcall
je
fwait
gs
mov
cmp
sahf
or
pop
lcall
mov
ret
out
add
xchg
jne
cltd
xchg
adc
fnsave
jns
dec
adcl
loop
push
mov
add
imul
outsl
pop
fstps
cmpsl
and
shrl
jo
ja
arpl
push
fimull
jno
mov
bound
call
sub
int
add
adc
add
lods
test
test
imul
out
out
test
imul
mov
pusha
test
imul
mov
movsb
adc
inc
pop
mov
and
push
mov
outsb
inc
enter
aam
xchg
imulb
add
mov
jb
xchg
stos
fs
orb
jae
add
jb
jae
mov
imul
jg
sti
mov
bound
or
push
jg
jb
repz
push
icebp
lcall
lods
nop
jp
sub
cmp
xor
push
pop
das
outsl
add
jp
mov
sub
inc
adc
push
inc
jp
jb
jmpw
daa
call
add
add
add
sbb
xchg
aas
sub
mov
sub
imul
lds
loope
xchg
repnz
push
or
lds
subl
ss
dec
in
push
leave
loope
push
loope
fidivs
call
sbbb
jb
call
lret
lods
loop
pop
int3
ds
add
das
jns
dec
mov
aam
das
xchg
mov
mov
jmp
sub
mov
push
add
cmp
and
lea
pop
xor
dec
fld
retw
dec
and
push
cwtl
cmp
mov
xchg
decl
dec
and
orl
sbb
icebp
scas
push
inc
cmp
fdivrp
loopne
fucomip
add
sbb
jns,pn
dec
xchg
adc
pop
jne
jmp
orl
jp
dec
mov
mul
cmc
jg
push
ja
adc
add
jbe
inc
cltd
cwtl
push
jmp
xor
mov
xchg
push
cmpsb
and
leave
inc
and
rolb
and
cmc
add
in
jns
adc
jo
xchg
mov
aaa
sti
mov
inc
jmp
cmc
add
loop
jbe
lods
pop
dec
scas
mov
into
rorb
ds
mov
inc
inc
insl
ja
in
insl
jns
adc
mov
into
sbb
push
push
std
clc
inc
in
std
test
inc
or
enter
adc
test
add
add
add
add
adc
or
inc
sub
pop
mov
jg
pop
adc
je
test
xorb
cmp
mov
jg
int
ja
int
jae
jo
jle
mov
adc
jmp
dec
xchg
jp
mov
xchg
cld
popa
aad
jmp
mov
and
pop
add
push
cli
dec
imul
mov
and
fwait
aad
das
pop
mov
gs
mov
popa
lods
jecxz
scas
sbbb
ret
insb
add
imul
xor
jnp
xchg
addr16
mov
lds
cli
xchg
cmp
ret
jecxz
and
lds
mov
jg
fsubrs
add
add
add
add
jl
or
sub
add
xchg
je
aam
ds
inc
or
or
imul
adc
cmp
sub
and
sub
xor
popa
imul
cmp
fsubrs
lea
jle
mov
data16
cmc
cmpsb
test
xchg
pushl
fists
sahf
mov
add
mov
add
imul
jb
cmpsb
and
mov
dec
push
aaa
or
fstl
add
cltd
imul
dec
out
jp
mov
lds
mov
xor
xor
in
add
popf
imul
popf
sbb
add
mov
stc
je
xor
mov
and
add
add
add
add
dec
mov
stc
out
pop
call
negb
popa
das
mov
stc
je
jnp
ljmp
jae
loope
sti
jecxz
syscall
mov
add
or
sbb
mov
add
sahf
push
jbe
mov
add
xor
mov
and
out
push
jg
jb
das
cld
ljmp
add
add
add
jno
outsl
cld
sub
fisttpl
jge
les
fsubp
inc
add
mov
or
pushf
jnp
sti
or
pushf
ret
popf
dec
popw
jb
xor
cmp
pop
popf
data16
stos
mov
sub
pop
push
in
leave
mov
add
lods
push
sub
inc
shl
insb
leave
mov
movsb
adc
popf
fwait
xchg
lahf
xchg
fists
jbe
jmp
or
fisubs
js
outsb
push
addr16
insb
push
jno
movsb
mov
sar
stos
jp
cmp
inc
mov
jno
cmp
das
sbb
test
mov
sbb
or
push
push
mov
mov
mov
jmp
add
add
add
daa
sub
inc
addr16
es
jbe
pop
and
xchg
adc
nop
xor
xchg
aaa
fsubrs
or
fisttpl
in
lods
je
and
stc
insb
sahf
data16
xor
out
jno
push
add
jne
push
leave
out
fld
fildl
and
jb
subb
sti
scas
adc
push
jge
stos
add
imul
divl
dec
xor
imul
rclb
divl
dec
inc
jbe
imul
add
ljmp
push
scas
and
xchg
adcb
and
lods
and
imul
push
xor
inc
in
fsub
inc
jp
out
xchg
movsl
xor
add
enter
jg
sub
pop
push
test
ljmp
xorl
mov
jg
repnz
mov
test
pop
and
inc
or
sbb
inc
dec
cld
or
fcompl
mov
mov
add
insl
movb
jmp
jmp
add
into
pop
pop
movntq
adc
sub
repz
addb
enter
aam
ja
lods
jae,pt
lret
jne
loopne
jo
fisubrs
mov
cmp
jo
lcall
repnz
dec
std
out
adc
fisubrs
shlb
cli
mov
ljmp
add
add
cmp
mov
jno
cmp
dec
add
imul
jmp
je
jg
icebp
xchg
imul
sbb
in
cmpsb
decb
and
push
mov
pop
sub
fcmovnb
aad
out
or
sbb
sub
jne
mov
lods
add
ret
add
xor
add
xor
iret
into
hlt
sbb
mov
sbb
out
pop
ljmp
mov
nop
lcall
ret
or
out
or
es
out
push
mov
ret
stos
add
push
push
jb
mov
mov
xor
jb
push
imul
push
lods
and
pushf
pop
lods
scas
mov
add
lods
cs
shrd
or
movsb
mov
test
ret
out
mov
xchg
and
inc
mov
cmp
fadds
xorl
xchg
mov
mov
add
cmpsb
lods
and
mov
sbb
lods
xor
xlat
lods
imul
jb
or
into
mov
add
add
add
mov
iret
je
cmpb
int
addl
je
pop
jb
jg
mov
out
jns
ljmp
mov
push
imul
or
push
sub
mov
popf
jg
dec
mov
std
scas
pop
aaa
pop
jb
cwtl
jae
gs
inc
sahf
cld
stos
into
repnz
jne
das
add
add
dec
jnp
adc
jg
cmpsb
xor
cmp
cmp
push
int3
sub
and
addr16
sarl
sub
mov
mov
movsl
cwtl
sub
loope
lret
out
in
popf
into
xchg
pop
repnz
xchg
inc
outsb
sub
sbb
sbb
addr16
xor
xchg
and
add
add
add
xchg
xchg
orb
jno
pushf
mov
dec
and
mov
pop
mov
push
popf
xchg
bound
jae
xor
mov
sub
jae
xchg
decl
sbb
hlt
stc
mov
add
pushw
sub
or
xor
enter
xchg
and
add
push
or
adcb
mov
push
add
mov
add
in
inc
stos
pop
push
adc
mov
lret
inc
xchg
pop
push
and
xchg
or
in
inc
jg
push
xor
xchg
sbb
in
inc
out
push
dec
rolb
push
call
sub
cld
xchg
inc
add
popf
test
stc
mov
pop
jae
lods
xchg
add
insl
xor
imul
fimull
add
add
add
lds
cmpsl
add
insl
mov
jmp
push
jb
mov
aas
lods
imul
inc
cmp
push
mov
sar
in
xchg
imul
jb
sbb
scas
leave
jp
pop
es
jmp
std
sti
hlt
sti
sbbl
jle
adc
mov
jb
add
add
popf
jp
lods
jae
out
or
aad
ja
jb
pop
add
add
pop
jg
jb
jge
ret
lock
lcall
lock
and
into
push
mov
mov
or
dec
clc
add
lock
outsl
rol
pop
dec
clc
push
addr16
scas
data16
fwait
adc
add
add
add
add
xchg
fadd
mov
idiv
xor
sbb
mov
fildll
jbe
jae
cltd
fs
adc
loope
mov
ljmp
inc
cmpsb
xor
mov
cwtl
xchg
sbb
out
cmpsb
addr16
enter
mov
insb
pusha
test
add
add
add
add
mov
test
mov
add
xor
mov
push
shlb
arpl
or
jae
pop
add
sbb
or
or
pop
cmovbe
call
pusha
rorl
mov
in
pop
ret
cld
ss
fistpll
sbb
push
andb
xchg
arpl
add
add
add
stc
outsl
enter
iret
repz
sub
ret
pop
pop
test
ret
mov
mov
add
aaa
jns
pop
inc
inc
incl
mov
ss
adc
mov
loop
cld
adc
test
mov
inc
or
repz
add
push
addl
add
add
add
add
fsubl
mov
adc
xor
and
jbe
jae
imul
icebp
mov
add
jp
cmc
push
imul
jb
jg
xchg
or
xchg
jg
xchg
lret
aaa
lds
cmp
mov
outsl
inc
sbb
jb
lods
jle
movl
jbe
loope
add
jb
addr16
jg
adc
xchg
mov
loop
jae
pushf
int
fcoml
pop
xchg
into
xchg
add
incl
jb
sub
call
notb
inc
xchg
lcall
pop
imul
dec
add
addr16
pop
jg
pusha
inc
or
outsl
out
push
push
cmp
iret
push
add
push
xchg
xchg
xchg
jecxz,pt
dec
xchg
out
sub
sbb
stos
jmp
iret
cmp
add
xchg
push
jecxz
dec
xor
data16
cmp
jmp
mul
insl
xchg
mov
jmp
push
xchg
jmp
pusha
cmp
cli
xor
loopne
push
scas
addr16
jno
jecxz
dec
call
outsb
add
pop
sbbl
add
out
dec
pop
loopne
pop
pop
loopne
ja
push
leave
mov
cmpsl
add
aad
xlat
iret
xchg
decl
stc
and
leave
data16
orl
add
xchg
adc
inc
addr16
in
jbe
icebp
leave
aaa
lea
dec
add
enter
loop
add
enter
inc
and
ja
mov
adc
jmp
inc
mov
and
sbb
rcr
mov
sbbb
jge
frndint
incb
cltd
aas
jb
sub
out
lcall
fwait
orl
jbe
jns
xchg
movsl
mov
std
and
popa
dec
sbb
scas
aas
ljmp
aas
xorb
push
out
sub
sbb
jae
imul
lods
pushf
stos
sbb
mov
jb
jg
test
mov
enter
xchg
jle
add
ret
add
jae
jle
daa
icebp
sbb
lret
add
jg
jno
outsb
pop
lret
ret
stc
fnstsw
dec
inc
es
xchg
mov
insl
push
orb
add
add
add
add
or
packuswb
add
mov
ja
cld
add
popf
jno
adc
adc
jno
popl
jb
lea
addr16
inc
or
jg
ds
cmp
loope
sbb
add
arpl
sti
push
pandn
imul
ret
call
add
sahf
and
outsl
loope
fiadds
push
dec
enter
ret
sub
mov
aaa
mov
cmpsb
xchg
das
and
and
jb
sar
lcall
ljmp
add
mov
shr
pop
mov
xchg
out
leave
outsb
jns
fidivs
mov
add
and
and
sbb
sbb
push
sbb
mov
mov
data16
aam
call
ss
and
lds
mov
fists
loopne
outsl
xchg
and
add
lds
mov
sar
popl
or
blcfill
vpmaxsw
lds
pop
jmp
ficomps
mov
cli
add
out
jb
es
mov
add
pop
scas
inc
idivl
inc
mov
out
outsb
sbb
cmp
or
imul
sti
jmp
in
mov
fisubrl
sub
and
popf
imul
xchg
sahf
imul
and
popf
imul
add
popf
fbld
imul
push
pop
divl
imul
dec
popf
aad
pop
adc
popl
es
rorb
inc
lock
repz
or
cmp
adc
push
subb
in
ljmp
or
mov
xchg
lds
jb
jg
movb
pop
add
push
mov
jle
jge
mov
mov
or
add
test
and
fcomps
jmp
or
in
clc
cwtd
inc
mov
aam
mov
out
outsb
ret
add
or
add
jmp
push
out
sub
dec
mov
fnstenv
lock
out
test
jno
add
jbe
data16
cmp
xchg
jmp
and
insb
scas
mov
pushw
ret
movsb
lea
or
push
test
sub
mov
fldpi
xchg
fld1
xor
add
popa
mov
cmc
sar
cmp
mov
leave
ljmp
leave
arpl
add
add
add
inc
lea
pushf
or
push
movhps
decl
shr
fwait
leave
data16
add
data16
pop
popa
lea
cmp
xchg
pop
inc
aad
imull
and
ret
sbb
cmp
and
rcr
ja
dec
adc
xchg
lea
jb
jne
or
ret
sbb
jb
cmp
jecxz
xchg
movsb
aad
out
insb
mov
and
test
fildll
sub
add
sbbb
lcall
push
in
push
push
xchg
jp
or
test
std
test
loope
push
cmp
fbld
push
js
cmpsl
cmp
data16
mov
push
adc
pop
popa
call
jmp
sbb
std
sub
cmp
ret
dec
sahf
imul
sti
add
mov
mov
test
enter
add
add
jb
sbb
jne
sbb
jb
or
repz
add
ret
xchg
jle
jb
daa
pop
and
dec
or
and
and
adc
jb
or
inc
add
jb
jo
scas
mov
inc
imul
jg
testb
add
cmp
or
and
out
js
and
insw
mov
ljmp
ret
lcall
push
lods
mov
les
data16
out
cmp
jne
outsb
sahf
push
rcrb
inc
fs
push
stos
fiadds
in
insl
adc
sub
cmp
and
test
out
mov
cmp
inc
mov
jmp
sbb
add
js
cmp
jo
lret
je
fnsave
push
fsubr
jle
nop
mov
inc
fnstsw
sub
inc
jle
push
jle
sub
pop
inc
add
dec
add
fiadds
in
dec
outsl
fucompp
shrb
inc
outsl
fidivrs
adc
fmulp
mov
das
add
cmp
and
and
repz
pop
cmp
and
cmp
mov
out
mov
test
ja
jb
jne
jmp
jne
stc
pop
jne
sti
bound
or
dec
ret
add
add
cmp
jb
scas
and
adc
and
and
jbe
and
sbb
clc
mov
call
pop
movsl
xor
fsubrs
mov
cmp
sbb
cld
xchg
ds
push
out
insb
inc
cmp
les
lahf
and
sbb
int
pop
inc
mov
enter
add
add
add
ljmp
sar
arpl
clc
cli
imul
ljmp
jb
int
add
mov
enter
cmp
aaa
testb
call
lds
xor
adc
insb
xlat
lods
push
bound
mov
adc
inc
lret
adc
and
pop
scas
cli
adc
cmp
xchg
loop
lcall
dec
cli
repnz
out
in
jmp
mov
xchg
js
cli
clc
push
mov
sub
std
int
jmp
jno
data16
xchg
sbb
insw
jl
arpl
aaa
xchg
stos
add
data16
or
cmp
mov
sbb
mov
pop
push
leave
sbb
fwait
dec
lea
addr16
call
pop
lret
test
insl
shufps
sbb
seta
or
imull
and
xchg
ret
sbb
cmpb
adc
imul
add
add
add
add
inc
jmp
add
adc
jns
jns
adc
sahf
insl
testl
sahf
arpl
jb
aad
imul
je
add
or
mov
fiadds
ss
mov
inc
pop
xchg
push
rcr
dec
jle
inc
fadds
mov
outsb
outsl
imul
mov
scas
lret
sub
xchg
jnp
adcl
xor
pop
jo
fnstenv
stc
sub
xor
les
mov
incl
mov
iret
mov
into
mov
js
add
lahf
dec
jo
in
pushl
jg
inc
mov
mov
repz
add
shrb
jg
inc
aad
das
cmp
fstpt
icebp
xchg
jge
test
daa
sbb
jg
adc
jg,pn
jb
lret
fcoml
xchg
cmpl
test
cli
xchg
mov
jne
mov
mov
or
cli
xchg
cmpsl
in
jle
jg
sub
add
adc
fcompl
fdiv
clc
xor
pop
mov
lret
fbstp
push
push
loope
or
outsl
mov
jo
paddsb
sbb
dec
cltd
aad
insl
imul
leave
ljmp
shl
mov
dec
lods
shrb
fisubl
icebp
shlb
or
pop
icebp
shlb
dec
and
add
inc
jge
jno
xchg
fs
jmp
cmp
push
loop
dec
xchg
rcrb
js
adc
mov
pop
shlb
pop
sbb
push
shl
out
pop
cmp
mov
and
shlb
add
add
movb
call
shll
inc
sbb
decl
popa
lret
pop
mov
add
lds
push
mov
mov
dec
xor
mov
push
add
insb
push
mul
push
out
add
jmp
push
and
jno
frndint
add
out
xchg
mov
outsl
scas
mov
push
std
call
shll
pop
pop
int3
cld
inc
insb
sub
mov
add
add
add
add
outsb
imul
cmp
add
sub
add
popa
xchg
mov
jae
pushf
sub
xor
ds
bound
inc
pop
test
inc
push
xor
mov
add
mov
add
fisubrl
repz
or
add
jno
add
jne
les
push
aas
add
pop
lds
inc
loope
sbb
call
push
sbb
add
pushf
aad
dec
mov
sub
lds
cli
call
cmp
inc
xchg
lods
sub
mov
jge
xchg
add
shlb
mov
adc
imul
bound
movsb
dec
shll
xchg
fisubrs
add
add
jnp
cmpsb
dec
cmp
loop
sbb
or
ret
test
lds
add
xchg
mov
lds
ljmp
hlt
pop
mov
shll
and
lds
dec
arpl
outsl
or
pop
repz
cwtl
mov
dec
sub
hlt
xchg
sbb
repz
mov
addr16
add
ret
data16
int
nopl
loope
mov
cmp
and
and
and
add
arpl
pop
pop
inc
ja
adc
push
popa
inc
fmuls
dec
je
inc
pushf
sub
lds
or
orb
jb
loopne
loopne
inc
sahf
ss
sub
and
in
adc
or
sahf
ds
sub
ss
sub
and
dec
adc
pop
pop
ds
sub
xor
inc
outsb
imul
jb
push
out
mov
movsl
xor
dec
push
imul
xchg
test
cld
add
jae
jb
mov
and
aad
sahf
rcr
pushf
or
cld
jmp
ss
ret
add
sub
inc
mov
out
rolb
fwait
pop
pop
loopne
sbb
inc
idivl
jne
mov
add
dec
mov
pop
jecxz
js
imul
cli
xchg
scas
xchg
mov
inc
mov
jae
dec
cli
add
out
push
hlt
leave
in
push
xorb
inc
stc
xor
ja
clc
adc
and
jo
jge
fiadds
lret
adc
cwtl
mov
sbb
add
inc
lret
sbb
sahf
clc
add
repnz
repz
mov
xor
daa
outsl
pop
sbb
jl
mov
push
lds
test
scas
jle
sti
mov
out
addr16
aaa
push
call
jmp
add
jg
dec
clc
dec
fs
ljmp
add
add
jno
data16
clc
jmp
stos
inc
sub
fimull
ficoms
inc
push
in
leave
in
jno
bound
pop
mov
adc
lret
jno
pushw
iret
sbbl
outsb
jne
shll
repnz
add
dec
xchg
jg
inc
mov
inc
lret
add
test
clc
jge
xor
mov
push
dec
sub
aas
fldt
aas
fildl
scas
jbe
inc
fwait
inc
test
inc
adc
dec
adc
add
stc
jo
sbb
adc
jo
xchg
add
cmp
rolb
and
jp,pn
inc
pop
inc
test
aas
pop
push
add
xor
decb
cmc
iret
dec
sbb
cltd
std
out
and
sub
cmp
ss
fucom
and
aam
xor
arpl
jle
fldt
jb
xlat
push
cmp
mov
cmpsb
cli
fildl
sti
stos
inc
sub
sbb
xor
inc
xchg
xchg
out
add
pusha
ja
dec
adc
jb
frstor
sahf
inc
call
mov
mov
mov
mov
push
mov
mov
mov
push
pop
mov
add
mov
out
jmp
cltd
mov
repz
mov
sarl
mov
mov
xor
jg
jno
ret
pop
mov
pop
lods
scas
enter
xchg
sbb
add
dec
int
xor
insb
sbb
icebp
arpl
jmp
or
xchg
mov
lods
add
inc
and
mov
add
sarb
mov
dec
jo
sahf
push
shll
arpl
jmp
jbe
data16
add
addr16
mov
xchg
es
add
mov
jne
ss
jge
lods
jno
aas
adc
jmp
je
dec
and
ss
mov
sbb
add
jle
mov
mov
push
fs
inc
je
mov
jle
outsb
pop
int
rolb
pop
ret
push
into
das
dec
pop
repz
sub
cld
sub
std
sub
sti
sub
imul
and
std
jmp
nop
aaa
dec
dec
push
add
xor
out
dec
call
rcll
in
fcmovnb
push
dec
das
dec
dec
jae
pop
add
ret
ja
xchg
decl
mov
stc
add
dec
push
adc
dec
sub
mov
jne
and
lea
jle
jb
imul
add
add
pop
xchg
dec
cld
cmp
inc
push
cmp
sahf
cmpsl
jns
mov
into
dec
out
jle
jb
imul
loop
and
pop
imul
jecxz
sub
icebp
stos
outsb
xorl
mov
mov
popa
pushf
mov
negl
mov
imul
push
clc
pushf
sub
andb
inc
mov
mov
sbb
jmp
idivl
xchg
jg
or
stos
mov
out
shrl
mov
mov
arpl
cmp
out
aas
gs
xchg
mov
stos
mov
mov
stos
inc
sub
cli
or
mov
xor
add
sbb
pop
inc
or
ret
xchg
inc
ret
adc
or
mov
bound
loop
xchg
dec
dec
call
jns
cmpsb
bound
test
fsubrp
mov
push
push
test
bound
dec
push
xchg
mov
mov
lods
or
jo
dec
idivl
test
jne
jb
test
inc
add
addr16
mov
sub
push
xor
xor
out
pop
jp
decb
dec
sarl
push
outsb
sbb
adc
dec
and
outsl
cmpsb
addr16
mov
inc
push
and
dec
loopne
dec
inc
pushf
xor
add
out
xor
jmp
dec
cmpw
add
jge
mov
push
mov
sub
mov
out
outsb
cmp
push
dec
jo
sbb
lods
mov
fidivrl
jno
lret
sbb
mov
add
inc
xchg
mov
fwait
data16
jg
and
mov
data16
and
pop
inc
stos
mov
fstl
add
call
nop
dec
xchg
xchg
pop
imul
jmp
and
test
or
mov
sbb
jae
loopne
out
mov
pop
testl
imul
fiaddl
orl
mov
sub
inc
mov
loopne
stc
loopw
dec
xchg
loopne
mov
push
add
add
add
xchg
jno
inc
add
or
push
mov
add
fs
jbe
pop
sti
sbb
bound
ljmp
add
or
xchg
into
dec
add
in
sbb
aas
add
mov
jno
pop
addl
or
pop
popa
add
popa
incb
hlt
in
pushf
or
lds
int
mov
add
sub
pop
adc
mov
mov
sub
arpl
jno
sbb
stos
movsb
pop
cmp
movsb
es
je
and
mov
loope
pop
ja
std
dec
jbe
icebp
daa
in
cmpsl
sub
xor
lods
sbb
sbb
sbb
xor
sub
add
add
add
xchg
add
loope
in
insl
adc
inc
cmp
mov
pusha
push
leave
loope
xchg
mov
jno
scas
add
dec
adc
dec
inc
adc
push
add
das
dec
and
xchg
push
push
sbb
jle
inc
inc
movsb
lcall
add
cmp
xorb
inc
xchg
incl
dec
sbb
cmp
sub
lcall
mov
dec
inc
sbbb
stos
sahf
mov
mov
sub
ret
scas
push
jmp
cmp
out
mov
insl
psrad
mov
push
lea
dec
aad
and
mov
mov
sub
add
into
and
mov
jb
frstor
lcall
mov
test
fs
inc
mov
ret
sti
mov
in
push
xchg
in
pop
pop
in
in
or
inc
test
pop
imul
jb
imul
outsb
xchg
ret
int
sti
fisttps
add
add
subb
insl
jl
sub
aas
xchg
ret
push
cmpsb
js
jb
insb
loopne
push
or
push
lds
fldenv
mov
insb
in
mov
sbb
push
scas
push
or
stc
mov
mov
into
jle
popl
mov
inc
lea
clc
mov
add
add
add
add
imul
mov
gs
add
in
dec
mov
lock
mov
shr
sub
mov
or
ljmp
les
cmp
push
addr16
cmp
imul
imul
out
jle
push
insl
xchg
jae
test
addb
add
add
add
add
xchg
outsb
out
pop
inc
mov
adc
dec
or
sbb
sub
dec
jb
mov
mov
in
sub
inc
std
xchg
jbe
inc
sbb
scas
sbb
add
jle
test
mov
mov
into
subw
dec
add
lea
lds
mov
data16
sbb
add
ret
pop
mov
cmp
mov
punpcklqdq
neg
mov
data16
push
xchg
lcall
inc
aad
jb
stos
or
adc
in
pop
ret
pop
dec
xchg
popa
divb
sahf
ljmp
pushf
in
push
xchg
jne
imul
cmpsb
aaa
sbb
outsl
jbe
jns
sub
xchg
add
lods
aaa
jmp
shll
pop
loop
mov
inc
xchg
mov
mov
lods
pop
jae
lahf
mov
aam
cmp
xor
sti
jae
adc
mov
jge
or
jg
lock
fdivr
cli
cli
arpl
pushf
cld
mov
jne
jg
int
sbb
add
add
add
add
in
push
insl
mov
cmp
addr16
movsb
push
xchg
mov
cmp
aaa
jbe
push
cmp
add
pop
imul
mov
mov
dec
mov
icebp
mov
adc
jg
sbb
xor
repnz
sbb
lock
push
push
stos
add
leave
loope
sbb
xor
push
call
jnp
stc
imul
jmp
js
sbb
clc
adc
pop
pop
xchg
imul
add
sar
dec
adc
jmp
cld
dec
std
push
pop
div
add
or
dec
xchg
scas
or
rcrl
stos
lds
mov
loop
aas
aas
and
and
dec
cmp
dec
jnp
lahf
push
or
fisttps
lcall
sbbl
dec
fistpl
arpl
and
sbb
ljmp
jle
call
mov
incl
add
mov
xor
add
ret
mov
xchg
dec
lahf
add
js
mov
inc
xchg
decl
in
push
jb
jge
mov
inc
pop
cld
popf
pop
adc
jo
imul
out
xor
pop
xchg
test
inc
mov
loopne
mov
inc
push
push
jns
imul
pop
mov
adcb
add
add
add
pop
in
dec
dec
jmp
pop
xorb
imul
out
push
insb
add
xchg
mov
xor
adc
aas
add
mov
xorb
aam
dec
mov
rorl
push
push
gs
mov
imul
jg
sbb
add
add
add
add
or
dec
cld
add
xor
add
xchg
fisubl
pop
gs
stos
mov
fst
or
jae
jg
sub
addl
push
mov
ja
clc
adc
mov
push
dec
sub
jmp
jo
outsb
jmp
loope
dec
mov
jmp
movb
repnz
dec
sbb
add
add
add
dec
xor
sbb
adc
jmpw
aaa
pop
lods
test
cltd
repnz
jns
inc
orb
mov
loop
cmc
fs
jmp
xor
in
pop
pusha
div
xchg
jno
and
adc
loop
dec
and
inc
jmp
jae
ret
jecxz
jg
pop
lea
iret
pop
xchg
dec
or
mov
xchg
dec
cmp
dec
loopne
sbb
out
das
jo
jl
sahf
sub
leave
sbb
and
push
jne
push
and
fcmovnb
bound
test
add
lea
arpl
add
dec
orb
and
decl
ret
test
add
add
add
add
jle
je
outsb
data16
jb
push
adc
test
das
icebp
sub
sub
imul
mov
jb
mov
adc
jo
imul
lods
push
dec
add
sbb
push
mov
rcr
jmp
insb
mov
inc
inc
repnz
inc
add
adc
add
sub
or
or
orl
jge
cltd
inc
insl
mov
mov
push
jbe
add
jb
dec
xorl
pop
push
inc
push
or
mov
xchg
sti
and
jl
stos
add
or
mov
push
nop
push
inc
jg
jb
jmp
add
jg
stc
or
push
lret
out
negb
rclb
pop
mov
insl
xchg
jp
stos
stos
jp
stos
lahf
inc
popa
sti
out
dec
pop
popa
pop
call
jno
fcmovb
loope
xchg
jmp
push
sti
loope
pop
popf
cmp
and
movsl
ss
dec
jle
outsb
bound
sbbl
movsb
xchg
add
mov
jle
imul
loop
loope
push
add
lock
sub
pusha
call
leave
orl
cmp
dec
cmc
dec
flds
dec
aad
lcall
pop
mov
stc
mov
fwait
in
shrb
add
adc
jl
aad
lcall
add
or
add
lret
movsb
gs
pop
fists
and
inc
xchg
stos
xchg
decl
xor
inc
scas
jge
inc
adc
into
sbb
orb
setbe
xchg
decl
ds
inc
int
jl
jp
orps
sub
inc
pop
inc
int3
dec
roll
lret
ret
push
in
push
ds
in
jb
lods
incl
pushf
pop
stc
push
xor
mov
lcall
call
fs
jae
imul
repz
imul
jmp
gs
sub
xchg
jns
pushf
gs
jnp
int
pop
jle
insl
je
in
and
shll
inc
jae
xchg
jmp
jns
add
dec
jp
in
sub
imul
lds
repz
push
xor
in
loopne
mov
negb
sub
sub
or
into
mov
insl
idivb
adc
idivb
dec
lret
repnz
push
ficompl
jle
pop
loopne
jmp
or
in
cltd
mov
add
add
add
add
loopne
divb
dec
lret
clc
lock
pushf
test
lcall
mov
in
mov
data16
mov
sbb
xchg
jo
sub
jbe
jmpw
dec
inc
sub
int
loope
xchg
in
fildll
push
dec
sub
and
pop
jle
xor
add
test
push
pop
fbld
dec
gs
sub
sub
cmp
mov
sbb
out
lds
pop
sub
aaa
mov
pop
cwtl
dec
movsb
mov
mov
add
ret
inc
ja
push
scas
sbb
cltd
lea
pop
sub
addr16
adc
xchg
mov
lea
add
xchg
push
test
xchg
fwait
ret
inc
mov
and
shlb
xchg
mov
enter
nop
xor
push
pop
ret
aaa
push
pop
jne
jl
int3
fcomip
sahf
lods
sbb
orb
pop
mov
mov
sub
jb
adc
or
in
sub
aad
call
lods
aas
xorl
and
inc
inc
outsl
les
imulb
popa
incl
jle
cld
jns
jl
insl
xlat
add
sub
dec
je
push
push
push
dec
lss
inc
mov
adc
jge
xchg
xchg
xor
out
inc
jno
adc
sbb
repz
fidivl
add
call
ds
add
ds
jle
sub
mov
push
jl
insl
or
mov
inc
cld
ror
mov
jg
ljmp
out
and
cld
jl
inc
cltd
daa
jbe
add
negb
jg
jb
dec
cld
repnz
add
jecxz
add
dec
inc
and
add
adc
lahf
movsl
add
add
add
add
add
inc
mov
add
clc
jb
add
pop
jg
or
fs
ljmp
in
xchg
inc
cmpsb
fsubl
dec
cmp
dec
or
push
pop
lds
repnz
iret
fcmovnb
jecxz
popa
lock
aas
pop
xchg
mov
sbb
mov
movsb
xchg
clc
push
jmp
je
inc
pushf
data16
xchg
sbb
mov
imul
rcr
xchg
push
dec
sub
and
and
mov
dec
cmpsb
dec
inc
cmpsb
adc
bnd
in
sbb
ret
push
fs
lret
repz
xchg
fstpt
xor
pop
outsb
add
jbe
push
push
and
inc
xchg
call
dec
addr16
xor
sub
and
add
imul
out
js
test
mov
js
mov
in
inc
jnp
adc
add
fildll
pop
jle
sub
add
fmulp
fsubl
popa
incl
inc
pushl
out
xchg
lret
dec
cld
std
ljmp
inc
popa
fiaddl
mov
jg
sub
scas
add
stos
pop
sub
outsb
add
mov
dec
jge
push
stc
and
aaa
out
xchg
add
adc
std
std
pusha
sbb
pop
lds
push
cmpsb
aam
mov
jno
inc
insl
imul
sahf
and
repnz
inc
mov
scas
jb
addb
sti
xchg
adc
pop
adc
lahf
xchg
or
fprem1
mov
add
mov
jle
rorl
add
add
insb
ret
mov
lea
das
hlt
or
xchg
mov
in
insl
cmc
in
fs
inc
imul
mov
mov
add
add
add
add
shrl
fistpl
push
and
aas
leave
fldt
mov
nop
leave
push
xchg
jmp
std
xchg
and
push
ss
add
shrb
fsubrl
fidivrl
imul
xchg
xor
pop
fstps
sub
push
in
movsl
sbb
add
jns
mov
idivl
leave
push
cwtl
sahf
movsl
ljmp
sub
mov
mov
pop
test
sub
inc
dec
inc
push
add
jnp
ret
ds
addl
push
jle
mov
inc
and
dec
add
push
xchg
inc
sub
mov
add
leave
leavew
pop
lds
and
sub
push
loopne
mov
ljmp
mov
popa
add
and
sbb
lahf
add
push
inc
jae
insl
frndint
pop
imul
stos
pop
loopne
push
test
jbe
iret
mov
jmp
mov
push
add
or
pusha
pop
pop
pop
imul
mov
cltd
cld
cmp
loop
jp
pop
pop
jmp
pop
imul
sbb
jno
flds
fldcw
inc
sbb
lret
mov
mov
adc
push
lea
ret
add
add
add
add
iret
xchg
jle
add
lcall
xchg
mov
add
add
inc
inc
cld
sbb
dec
xchg
jg
outsb
cwtl
aas
sub
jg
and
sbb
sbb
or
lea
and
xchg
aas
xchg
sbb
mov
stos
data16
lea
jmp
add
roll
fs
jmp
je
enter
push
xchg
pusha
jno
cmpsb
xor
jne
push
xor
lods
bound
in
lahf
loope
push
mov
sahf
xchg
mov
cmpsb
ffree
imul
sti
cmp
mov
call
in
clc
add
jno
push
jno
sub
add
add
jno
push
jno
sub
xchg
xchg
ljmp
cs
add
shlb
loopne
cmpsl
insb
out
dec
xor
fildl
cld
xchg
jle
cmp
and
data16
inc
adc
sbb
sbb
mov
cli
rcrb
push
push
push
jmp
je
inc
mov
call
add
mov
retw
ficompl
ss
and
dec
adc
mov
je
mov
push
shlb
and
jb
call
add
lods
and
test
mov
xor
and
cmp
cmp
mov
sbb
out
neg
push
jmp
xor
pop
jns
or
add
add
add
add
pop
fmulp
ss
jle
out
sbb
std
add
xchg
imul
les
insl
jmp
lock
add
rcrl
stos
mov
cli
insb
add
add
add
xchg
popf
mov
dec
fucomi
loopne
jmp
fistps
xchg
jbe
arpl
mov
add
add
add
adc
jbe
adc
fisttps
test
cmpb
sbb
jbe
cmp
orl
cmp
add
fstp
xchg
xchg
lret
and
or
jmp
jg
jb
sbb
jmpw
cmpsl
mov
popf
stos
jo
mov
gs
bound
gs
add
leave
push
popa
gs
gs
mov
mov
sahf
push
jno
push
in
dec
loope
lret
xor
mov
stos
jp
mov
fiadds
stc
or
jno
xor
jmp
vmulpd
dec
sbb
sbb
xor
jb
pop
in
mov
or
jge
add
mov
cs
in
bound
lret
push
add
dec
adc
add
inc
scas
loopne
call
add
loope
das
pop
ds
xor
and
or
lcall
adcl
inc
push
aaa
jle
lods
test
adc
cmp
cmp
shl
out
fdivrs
fstl
add
dec
faddp
or
and
cmp
nop
jb
test
subb
sub
jo
inc
add
loop
test
cmp
mov
jbe
push
aaa
mov
ljmp
scas
fucomp
and
in
insl
sub
gs
pop
mov
cld
loope
jo
aaa
rcll
add
add
add
shrl
gs
fwait
push
or
jae
fadds
cli
xchg
imul
fisubl
inc
xchg
mov
mov
fidivrl
cltd
mov
mov
cmp
cmp
dec
fldl
dec
jg
inc
pop
mov
stos
push
adc
loopne
add
add
addb
ds
jns
cmp
jg
mov
ret
sbb
inc
pusha
inc
arpl
popa
movb
xor
stos
or
add
arpl
insw
sub
insl
and
test
mov
mov
adc
decb
testl
dec
insb
push
xor
testl
dec
leave
out
cmpsb
add
xchg
ja
cmpsb
or
cmp
pop
inc
and
push
xchg
lahf
xor
cmc
dec
or
pop
adc
jmp
arpl
inc
sub
mov
push
imul
xchg
scas
stc
cmc
dec
add
sahf
nop
jb
ljmp
jle
loopne
fidivrl
imul
pusha
cld
loopne
add
imul
xchg
or
jne
adc
repnz
cmp
and
insb
mov
push
pop
push
imul
sti
sbb
loope
inc
lcall
dec
inc
dec
mov
xchg
subb
aaa
push
jne
sbb
je
mov
gs
xchg
cld
or
sbb
mov
in
xchg
add
jb
imul
jmp
dec
mov
jge
sub
xchg
mov
loope
push
dec
insb
mov
add
mov
loope
ljmp
rorl
mov
insl
icebp
and
movsl
aam
dec
in
and
daa
into
pop
icebp
cltd
insl
ret
roll
pop
imul
mov
frndint
add
fsubl
or
bound
jo
imul
add
inc
lcall
mov
jle
aad
fwait
lock
mov
sbb
xchg
mov
mov
fs
push
ret
dec
inc
pop
adc
cli
pop
sbb
repz
jg
inc
repz
repnz
orb
add
add
jno
aas
sub
rorl
push
inc
inc
mov
adc
ret
jne
cmp
sti
je
ja
inc
aam
cmp
jb
and
rorl
ljmp
pop
jo
test
jno
loope
sbb
ljmp
test
mov
add
sbb
mov
in
jmp
xchg
mov
pop
ss
pop
dec
and
jo
cmp
cli
nop
pop
mov
mov
push
xchg
adc
inc
sbb
cli
nop
pop
out
loop
loope
inc
pushf
jle
bound
ret
and
xacquire
mov
loop
sti
into
nop
mov
pop
leave
push
xor
mov
sbb
scas
cmp
sbb
mov
sbb
pop
adc
sbb
lods
shrl
jg
mov
push
shl
inc
sub
pop
fcmovnu
enter
call
adc
call
push
push
pop
dec
sbb
add
xchg
test
sub
mov
stos
jmp
les
pushl
sub
sub
jb
adc
out
jb
mov
out
jecxz
xor
pop
mov
aas
daa
js
jbe
pop
out
dec
js
leave
or
outsb
jp
cli
add
loope
cld
inc
cmp
lret
cld
lods
xchg
dec
push
js
mov
xchg
clc
js
ret
shrl
mov
test
sbbb
xor
fmuls
xor
lods
inc
add
push
cwtl
mov
mov
mov
inc
lods
adc
outsb
sbb
mov
pushf
neg
stc
inc
hlt
jge
das
movsl
adc
or
jmp
scas
mov
das
scas
jl
into
sbb
jno
cmp
inc
and
scas
dec
ds
or
mov
add
rcrb
or
mov
add
jns
jg
dec
dec
xchg
xchg
jbe
xchg
xchg
jns
data16
xchg
out
sbbb
scas
nop
jbe
push
dec
lods
rcrb
dec
movsb
shr
into
addr16
int
jmp
mov
jle
jb
xchg
bound
inc
xchg
push
lret
pushw
iret
data16
cwtl
loope
add
mov
out
addr16
in
lret
fistpl
nop
jmp
loope
jge
xor
outsb
sbb
sbb
popf
dec
leave
call
pcmpgtw
enter
pop
les
pop
sub
push
call
mov
sbb
arpl
mov
pop
or
je
or
imul
call
add
add
add
fcmovnb
data16
xor
or
push
or
sbb
xchg
add
lds
jns
mov
fnsave
xchg
adc
lcall
nopl
add
loop
repz
incb
pop
lds
jb
in
dec
jo
imul
inc
das
imul
jmp
stos
test
add
adc
or
in
popa
or
out
out
and
add
xchg
or
rclb
or
ljmp
lds
cmovae
mov
or
cltd
push
jb
bound
and
mov
push
xor
jge
pusha
out
sub
jo
inc
inc
mov
jecxz
aam
cld
add
lret
aam
pushf
dec
or
adc
aaa
mov
sbb
jg
out
adc
xchg
lds
repz
lea
movsb
xchg
dec
cwtl
dec
add
lods
lcall
inc
mov
stos
jecxz
aam
cli
dec
lret
aas
int3
mov
cmc
add
add
mov
add
add
add
add
mov
jb
add
jo
imul
xchg
jmp
inc
cld
or
sub
pop
mov
jo
data16
ret
push
leave
in
push
loopne
ret
call
gs
mov
xchg
jmp
xor
mov
repz
mov
sub
repnz
orl
inc
jge
jno
jmp
insl
add
aas
xchg
jmp
xor
ljmp
dec
sub
call
lea
popa
add
inc
fcmovne
push
ja
inc
xor
sub
jb
test
mov
aaa
mov
data16
adc
lret
adc
xlat
add
lret
outsl
mov
jne
shr
rolb
add
sbb
out
sbb
and
and
addb
push
mov
pop
lahf
fcmovne
jmp
cmp
push
sbb
or
push
dec
sbb
push
inc
dec
imul
jb
push
and
imul
pop
test
cld
gs
mov
jle
imul
add
push
pop
mov
out
push
shrl
add
or
mov
hlt
mov
jge
jne
test
dec
das
repz
das
in
ret
xchg
mov
pusha
cld
leave
sub
arpl
push
test
mov
add
mov
cmpl
mov
and
sbb
mov
rorl
push
aas
add
mov
dec
jns
pop
cmp
test
int3
add
fwait
enter
jg
mov
sbb
pop
lods
or
subb
xchg
or
push
imulb
cmp
cmp
inc
insl
inc
mov
aam
jg
jb
sbb
sub
xchg
cmp
add
xchg
mov
mov
test
or
adc
imul
cmp
xor
outsb
xchg
lahf
iret
jmpw
and
sub
inc
cmpb
sub
fwait
loope
adc
xlat
jle
les
xchg
jb
out
add
and
sub
idivb
shrl
add
add
dec
std
push
mov
outsb
movsb
inc
add
ljmp
adc
jne
mov
pop
or
aad
xchg
pop
fisubrl
sbb
jae
xchg
decl
jae
sbb
jmp
cmpsb
pop
sbb
pusha
cmpsb
orl
push
ja
mov
inc
imul
ja
stc
mov
mov
outsb
dec
sub
outsb
dec
sbb
outsb
dec
and
outsb
dec
dec
push
outsb
dec
cmp
enter
mov
add
imul
imull
and
and
inc
jg
dec
push
ret
jb
jne
imul
icebp
subl
jb
cmpsb
and
mov
and
jg
xchg
mov
bound
jae
pop
dec
cld
xor
add
jmp
sbb
mov
imul
push
iret
jb
push
imul
jo
jg
icebp
loope
add
push
mov
rcrb
xchg
dec
je
sbb
sbb
out
cmp
add
in
iret
pop
cmpsl
push
shlb
fidivs
jg
pop
dec
jecxz
xchg
dec
sti
filds
cmp
mov
jb
scas
mov
lods
mov
xchg
sub
rclb
add
add
mov
fmuls
cmp
ficomps
mov
xor
filds
lds
mov
xor
add
in
jo
bound
cmpsb
aad
orl
fistpll
xchg
jmp
loope
jge
das
lds
ljmp
loope
cmp
mov
jmp
cmc
repnz
sbb
iret
jecxz
sub
lds
dec
mov
xchg
cmp
sub
stos
fldl
add
add
add
add
jns
lds
push
xchg
jb
mov
add
adc
call
xor
xor
int
ret
scas
push
cmp
frstor
lea
pop
inc
inc
push
scas
sub
fstpt
lods
push
movsb
and
adc
addr16
pop
mov
and
mov
and
mov
and
daa
mov
and
rcr
and
lret
and
cmp
or
in
into
jb
or
jae
in
shrb
add
xor
lea
push
negb
test
imul
mov
testl
imul
gs
add
in
dec
lret
in
jbe
fiaddl
add
imul
insl
pop
imul
mov
lods
mov
imul
xlat
fwait
mov
in
clc
jae
in
jb
jg
sbb
push
xchg
inc
inc
sub
cmp
cmc
test
add
inc
sub
aas
dec
sub
xor
jg
cs
add
out
cmpsl
sbb
lret
push
fst
add
inc
jb
stos
daa
popa
sbb
xchg
loop
push
js
dec
aas
ja
aas
ret
daa
mov
out
add
lret
hlt
cmp
jle
in
fs
inc
jno
jecxz
dec
idivb
push
lds
adcb
cmc
add
dec
je
jno
cmpsb
adc
in
enter
mov
jo
pushf
cmc
subb
int
dec
movsb
andl
push
pmaddwd
orb
fdivs
jno
sub
cli
jmpw
dec
shr
cltd
dec
mov
mov
int
mov
shr
cltd
dec
add
aas
sbb
repnz
mov
mov
ljmp
add
add
add
xor
and
mov
dec
sbb
mov
add
inc
sub
aas
sub
inc
sub
stc
lahf
mov
mov
dec
dec
inc
mov
push
mov
mov
or
or
dec
sub
xchg
dec
push
sbb
dec
sub
xchg
dec
pop
inc
mov
pop
push
add
pop
adc
and
lds
add
movsb
and
add
pop
loop
push
jae
pop
dec
pop
in
shrb
and
int3
mov
add
jmp
sbb
and
jb
mov
add
jecxz
adc
arpl
add
cmpsl
or
loope
icebp
dec
xchg
jg
daa
cmp
fsub
fldenv
pop
loop
dec
cmpsl
mov
add
and
and
imul
addb
clc
out
lds
pushf
jg
jb
dec
in
mov
add
stc
add
mov
mov
or
xor
lahf
jae
jg
xchg
mov
jb
mov
xor
aam
sbb
aas
add
jmp
stos
sbb
test
mov
rorb
xchg
xor
ss
jb
jg
push
ljmp
pop
dec
shlw
jmp
fst
jmp
xchg
je
push
bound
ds
xchg
push
jae
jbe
xor
jo
mov
pop
nop
or
loope
in
xor
xor
add
add
sub
sbb
sti
mov
pushw
jmp
scas
clc
outsl
call
xchg
xor
cli
sti
jge
jo
data16
jge
xchg
test
je
ljmp
call
or
inc
rolb
push
sar
jge
mov
ret
data16
add
inc
les
movntq
adc
add
negb
pop
xor
sahf
xor
cmp
and
jmp
add
inc
xchg
or
inc
mulb
dec
adc
jle
call
dec
add
add
data16
xchg
lds
dec
sbb
jnp
call
lsl
sbb
mov
add
inc
cmpb
or
mov
dec
push
mov
sub
add
add
add
sbbl
flds
mov
icebp
shlb
inc
adc
mov
shlb
dec
dec
xchg
je
xlat
xorb
xchg
push
xchg
mov
and
sub
pop
or
cmp
inc
es
mov
popl
test
sbb
inc
mov
push
add
sub
mov
xchg
out
repz
dec
mov
dec
lret
jbe
aas
inc
xor
arpl
in
mov
adc
mov
jne
loop
sti
sub
decl
mov
jl
mov
inc
sub
outsl
jno
hlt
jmp
aam
add
mov
add
inc
inc
leave
rolb
aas
xchg
into
mov
jno
xchg
jns
in
add
xor
adc
movb
hlt
add
or
xchg
insl
mov
popa
ret
jno
push
inc
pop
xor
jmp
cmc
mov
bound
pop
inc
call
and
imul
popa
xchg
scas
ret
fcmovb
jmpw
add
jno
mov
jmp
cs
jmp
test
push
gs
pop
sub
add
xchg
les
jnp
mov
xchg
cmp
notb
enter
insl
orb
cmp
inc
or
dec
addr16
adc
mov
add
add
add
out
adc
add
addr16
push
in
inc
sbb
test
add
push
add
xchg
xchg
adc
cmp
inc
sbbb
jl
push
test
stos
inc
cs
mov
out
fs
lret
inc
sub
jb
jb
cmp
mov
pop
rorb
dec
lea
mov
call
add
add
add
mov
out
test
adc
cmp
filds
push
inc
push
andl
sarl
sti
mov
popa
cmp
push
lcall
or
out
popf
jb
or
shlb
and
lret
lret
sti
aad
daa
hlt
and
sub
aam
xor
or
add
cmp
call
sub
cltd
cmp
inc
sub
xor
pop
negb
gs
ss
jmp
outsl
sub
out
orb
mov
mull
aas
int
out
add
je
int3
loope
push
and
insb
mov
ficompl
xor
mov
dec
cmp
add
idivb
xchg
aam
xchg
data16
repnz
sti
test
and
push
test
pushw
inc
data16
sub
jbe
mov
das
insb
mov
insb
test
jae
cmpsb
and
ret
lcallw
jno
xchg
mov
sbb
xchg
mov
lods
nop
add
mov
out
jno
lods
ds
gs
push
insl
pop
add
dec
jp
add
aad
fcmovnb
test
out
ljmp
adc
pop
scas
xlat
cmp
lahf
movl
dec
ret
sbb
repz
dec
mov
push
sbb
jle
add
pop
sbb
inc
fsub
push
jg
das
call
loope
jecxz
das
lret
in
int
scas
cli
add
test
jne
inc
and
seto
inc
aas
jmp
dec
das
inc
outsl
loop
inc
outsl
into
lea
inc
dec
inc
clc
add
sub
and
std
in
inc
jb
cmp
fnstenv
out
jb
dec
dec
es
and
or
jne
shll
add
push
lcall
sbb
lcall
mov
sti
pop
sub
inc
xchg
and
sbbb
push
icebp
jmp
mov
inc
pop
fidivs
mov
je
jp
das
adc
push
sbb
test
add
aam
add
sub
mov
fisttpl
push
or
add
fdivrl
push
mov
push
rolb
mov
jg
inc
and
je
mov
int3
jg
loope,pn
jb
cmp
jns
movsb
sbb
ret
add
mov
pop
jbe
xchg
rcrb
hlt
pop
dec
faddl
jb
dec
push
push
mov
aaa
add
jl
push
pop
dec
inc
add
xor
add
sbb
sbb
sbb
js
hlt
jecxz
xchg
insl
mov
sub
outsb
fs
jbe
add
cltd
cmp
mov
cltd
inc
mov
mov
hlt
stc
iret
sub
sbbb
jmp
inc
lods
addr16
xor
and
push
fcoml
jle
ss
push
gs
sbb
push
outsl
movsl
add
sbb
fwait
pop
ss
or
and
cwtl
jno
loope
inc
js
adc
jbe
mov
sub
or
bound
jnp
adcl
xor
js
mov
fstpt
mov
jp
xchg
bound
fwait
test
mov
callw
data16
or
sbb
data16
sub
mov
mov
mov
movl
test
ds
ljmp
sahf
fildll
jb
mov
xchg
sub
js
jb
adc
mov
push
out
insb
push
add
fwait
jl
pop
xchg
cs
add
fsubl
and
pop
jl
in
push
in
sti
add
or
fisubrl
sub
push
inc
mov
or
xor
and
mov
jmp
das
xchg
je
sbb
push
pop
pop
cmp
sbb
pop
test
fcomps
and
dec
ja
shlb
sub
jl
dec
xchg
addl
cmc
pop
cmc
sbb
repnz
ret
mov
jns
cltd
add
jb
add
callw
out
mov
out
leave
lods
fcoml
mov
sbb
dec
xlat
fsubrl
aaa
jg
testl
jg
adc
jns
mov
jmp
movb
mov
add
adc
or
pop
or
jl
repnz
jo
pushf
fs
ljmp
sub
add
add
add
add
inc
std
jmp
xchg
insw
ss
arpl
pushw
shl
das
sahf
pop
jle
xor
fists
lret
sub
test
dec
cmpsb
cmp
mov
pop
arpl
dec
xchg
mov
adc
mov
dec
inc
xchg
int3
sub
cltd
dec
dec
outsb
test
fcompl
mov
repnz
jmp
add
add
add
cltd
dec
add
adc
push
rcll
inc
sbb
pop
and
jle
add
data16
insl
push
ljmp
jo
adc
add
sti
test
lret
ret
in
push
xor
in
into
mov
inc
shlb
dec
testb
ret
cmp
sahf
mov
repz
in
sub
jae
xor
add
rclb
inc
outsl
ret
jb
push
push
jmp
xchg
pop
jae
imul
push
mov
fistpll
jno
out
dec
js
cwtl
mov
imul
out
in
xchg
subl
dec
test
imul
sub
add
add
add
add
das
in
push
jae
imul
loopne
pop
dec
xor
adc
dec
lds
sub
test
sub
inc
mov
xor
push
jns,pn
into
cmc
rol
lret
daa
stos
jbe
jle
loop
pop
jne
daa
dec
rcrb
ret
jns
dec
add
or
jb
stc
in
testl
add
add
jbe
adc
in
push
add
fxch
add
mul
das
add
outsl
pop
jbe
jg
out
imul
dec
jns
loop
push
out
stos
xor
sbb
jg
mov
add
popf
rol
jmp
dec
ljmp
mov
dec
push
ret
enter
test
loope
in
add
sbb
jns
ljmp
dec
cli
int
jmpw
dec
push
jo
add
inc
xchg
out
add
dec
jno
retw
loop
inc
sbb
jmp
push
jmpw
sbb
fwait
pop
add
cs
xchg
xchg
cwtl
lcall
fucomi
test
nop
or
mul
mov
add
add
add
sub
xor
dec
add
mov
mov
pop
enter
jns
mov
mov
vhaddps
sub
aad
mov
mov
inc
mov
mov
sub
xorb
out
mov
out
inc
fcmovnb
mov
out
add
add
xchg
decl
jbe
cmp
pop
pop
lcall
adc
and
xor
imull
imul
test
les
stos
jne
mov
imul
or
in
jb
stos
je
int3
addr16
pop
mov
call
clc
out
pop
pop
dec
cwtl
mov
add
push
cmp
dec
mov
mov
mov
test
push
stc
outsl
ljmp
mov
outsl
push
mov
cmp
mov
mov
add
jae
jg
jb
jg
jb
fwait
add
cli
add
aas
fdivl
jg
jb
cmp
test
add
dec
inc
lods
jb
jg
jge
push
add
outsb
jg
xor
aas
outsl
pop
fstpt
jb
adc
jb
push
sub
jg
pop
outsl
sub
aad
sub
int
cmp
sbb
jmpw
popa
in
jno
jmpw
push
stos
and
xchg
dec
mov
pop
xchg
push
andb
ss
jbe
xchg
fs
xchg
jno
mov
jb
cs
jns
jbe
data16
into
jmpw
jmp
jno
add
dec
push
add
lret
xchg
faddl
sub
or
idiv
mov
jmp
add
icebp
adc
push
ljmp
xor
repnz
dec
cmc
repnz
pop
add
les
mov
add
jne
je
in
enter
in
cmpsb
je
fwait
test
movsl
fwait
adc
inc
xchg
je
and
dec
test
dec
popf
push
test
and
iret
mov
popf
mov
add
cmp
test
push
andl
cmp
lahf
dec
add
pushf
pop
jge
jge
fs
lret
pop
pushl
inc
add
add
add
add
add
add
and
es
mov
or
xchg
pop
cltd
pop
push
inc
dec
and
rolb
sbb
mov
dec
pop
and
divl
dec
icebp
xchg
je
lods
or
jb
pushf
xchg
data16
imul
stc
es
jne
inc
imul
add
add
add
cmp
stos
je
movb
nop
mov
sub
aas
lret
inc
scas
lods
push
xchg
mov
add
mov
mov
mov
test
inc
in
js
shrl
jns
je
dec
cmc
pop
add
fisubs
stos
js
mov
mov
mov
lds
ss
push
outsl
add
jg
mov
orl
inc
inc
push
in
les
push
mov
adc
data16
filds
icebp
inc
push
ret
xchg
rclb
ljmp
sub
jmp
sbb
es
in
mov
scas
lcall
jno
sahf
mov
jmp
js
std
xchg
insb
add
dec
mov
lcall
stos
shl
push
push
mov
push
aad
jmpw
jge
dec
data16
xor
sub
add
out
adc
jmp
cmp
add
ret
xchg
push
int3
insl
pop
call
push
or
adc
insl
jp
push
mov
lea
icebp
xchg
fsubl
mov
add
daa
lahf
ret
and
test
jl
fwait
iret
data16
or
push
aaa
les
dec
addr16
and
jnp
adc
fisttpl
lods
jnp
adc
cmpsl
nop
decl
push
daa
shr
aaa
int3
jg
jb
mov
std
cmp
jmp
cltd
dec
adc
imul
add
pusha
pop
xchg
cwtl
and
mov
or
or
test
in
xor
call
negb
add
pop
mov
leave
xor
imul
mov
add
pop
or
adc
add
loopne
notl
dec
cmpsl
sarl
mov
push
dec
add
sbb
jb
testl
bound
or
scas
out
jmp
jae
add
inc
dec
sub
or
and
mov
jl
jg
mov
dec
ss
dec
sbb
testl
mov
mov
jmp
add
aad
or
test
fsts
cmp
xor
out
xor
jbe
xor
adc
fnstenv
adc
hlt
stc
adc
icebp
xchg
insl
push
jno
pop
shrb
xchg
jo
jne
xchg
outsl
sahf
andb
cmp
ffreep
jnp
jbe
cmpsb
push
ret
jo
cmpsb
je,pn
xor
mov
jmp
ss
cmp
xchg
and
dec
xor
aas
jne
xchg
add
scas
pop
mov
push
pop
jg
or
jp
cmp
add
or
jecxz
xor
mov
test
popa
mov
or
into
mov
xchg
call
jmp
jecxz
arpl
jecxz
inc
ficoml
add
sbb
in
jbe
push
in
nop
jne
aam
adc
push
jle
mov
push
push
adc
jl
filds
sbb
pop
xchg
inc
adc
insl
pop
or
insl
inc
addr16
iret
xor
add
orb
les
rol
sahf
adc
les
mov
mov
in
jb
loopne
sub
es
push
xchg
std
adc
sbb
ret
xchg
imul
add
add
out
sub
cmp
xlat
test
and
into
data16
xchg
mov
sbb
xchg
aas
jb
stos
jne
pushf
lods
call
pusha
mov
mov
pop
mov
push
imul
ja
mov
ret
repnz
in
sub
out
pop
xor
aam
inc
cwtl
scas
sbb
fnstsw
lcall
cmp
add
add
add
add
cmp
or
xorb
or
rcll
add
and
aas
or
aas
cmp
jp
push
xor
jnp
orl
jg
jb
cmpsl
xor
aam
or
or
jns
adc
jb
ja
imul
imul
jg
jg
scas
inc
add
data16
cmpsb
cmc
fistpll
sbb
mov
jecxz
jno
pop
dec
out
and
test
ficoml
xchg
pop
cmp
jmp
pop
adc
hlt
xchg
xor
loopne
jns
fildll
mov
outsl
push
mov
das
loope
mov
and
jbe
pop
mov
loop
mov
push
jno
pop
outsl
and
jmpw
pop
mov
adc
loop
inc
sarb
shl
cmp
push
leave
push
fadd
add
fcoms
add
or
sbb
mov
std
ret
push
pop
jle
out
nop
test
ror
add
out
adc
lret
cmp
or
fidivs
mov
dec
push
mov
in
inc
xchg
mov
mov
mov
add
mov
cwtl
mov
imul
repnz
jb
imul
jmp
and
jb
in
jp
loop
ret
add
arpl
cli
das
add
daa
or
outsl
dec
push
adc
stc
arpl
jno
mov
dec
push
imul
sbb
in
addl
sbb
push
jno
sub
sbb
cmp
pop
mov
lods
scas
inc
add
inc
xchg
inc
jb
and
lahf
ja
jg
jg
mov
addr16
cmp
add
add
add
add
jne
mov
cmp
nop
ret
pop
lods
enter
cld
cmp
mov
sbb
jle
add
xchg
xchg
mov
mov
fsubs
addl
add
jno
xor
sbb
out
gs
add
or
data16
sbb
xor
push
scas
out
add
inc
in
jno
loope
outsb
or
cmpsl
fucomip
ret
jno
mov
sbb
jmp
movsb
xchg
cmp
pop
lods
loop
push
jmp
jmpw
dec
mov
jbe
jmpw
loope
loop
mov
jge
mov
xchg
jb
mov
jp
js
sub
call
jmp
add
loope
jbe
add
jl
mov
mov
lcall
add
pop
orl
jmp
fs
aad
aad
imul
mov
shlb
pop
xchg
add
aam
or
in
in
mov
mov
data16
repz
incl
je
mov
je
ljmp
cmp
nop
iret
xorl
add
iret
xor
idivl
sti
sub
js
sub
cmpsl
or
loope
icebp
xor
sbb
jns
fsubs
fiadds
int
xchg
mov
pop
cmpsl
dec
fadds
insb
adc
lcallw
sub
add
frstor
dec
and
adc
jp
lcall
cs
add
pop
mov
adc
sti
bound
or
xor
xor
addl
shlb
pop
adc
in
andl
inc
jb
in
adc
pop
jbe
xorb
add
mov
cmpl
xchg
pop
and
mov
dec
adc
js
in
aam
jg
jge
dec
add
mov
xchg
pop
addl
cmp
sbb
jbe
lcallw
dec
aas
cwtl
jb
cmp
or
pop
push
fcoml
add
jmpw
fiaddl
ljmp
test
jnp
adc
and
out
cmpsl
ret
loope
cmp
imul
jmpw
and
jmp
xchg
cltd
or
mov
jno
pushf
lods
push
fiaddl
ja
sub
aad
sbb
ror
sbb
or
xor
fidivrs
data16
iret
push
push
dec
dec
aam
leave
push
ds
dec
pop
mov
aam
jne
test
and
scas
adc
jb
adc
jb
xchg
test
fiadds
aam
leave
push
rorb
xchg
push
push
test
jmp
inc
jp
sbb
inc
daa
or
sbb
pop
dec
aam
leave
mov
adc
jecxz
daa
cmc
xor
pushl
addl
xchg
add
cmp
or
jmp
aas
push
adc
data16
mov
jae
push
adc
cmp
insl
gs
rcr
jp
dec
subl
jb
cli
mov
je
or
enter
jbe
fsts
popf
in
shlb
dec
or
xchg
cmp
mov
sbb
xchg
cmpsb
je
outsb
out
ss
jb
xor
into
push
inc
xchg
cmpsb
ja
jb
jg
mov
fwait
sbb
rorb
ss
xchg
adc
jl
into
or
push
dec
sub
int3
push
add
jmp
rcrl
cmp
push
jg
call
cltd
add
mov
aad
pop
inc
add
or
repz
push
jb
lock
add
jmp
movsl
loope,pt
pop
push
fbld
mov
jmp
sbb
jecxz
add
in
xor
jno
ljmp
dec
and
jno
and
push
data16
push
sub
lods
add
insb
or
push
and
scas
xchg
jmp
cmc
push
sbb
cmpsb
fwait
xchg
inc
push
inc
jmpw
lcall
lds
push
movsb
and
push
xchg
mov
sbb
ja
lea
push
ljmp
je
iret
cmp
mov
or
test
fildl
xchg
lea
xor
add
mov
les
adc
mov
and
repz
add
cmpsb
test
add
inc
lret
dec
addb
adc
xchg
lcall
inc
loope
pop
jb
inc
leave
add
cmp
in
repz
movsl
pop
mov
xlat
inc
push
pop
sti
xchg
lea
jb
sahf
or
sbb
mov
lret
cli
lods
jns
mov
je
imul
jb
bswap
lcall
js
test
push
mov
cmp
jp
test
arpl
cmp
jl
cmp
sti
rorl
push
ficoml
jb
cmp
dec
sub
dec
fildl
pushf
js
dec
aas
pop
push
aas
gs
popl
cmp
add
ljmp
loop,pn
sub
in
rorb
mov
add
jg
push
jge
and
popl
lds
jns
xor
xchg
in
notl
aas
add
leave
and
andl
aam
icebp
ss
xchg
gs
imul
sub
inc
sti
jp
mov
ja
jno
lods
jbe
pushw
fisttpll
ja
jno
cmpsb
jge
inc
sahf
adc
out
mov
ljmp
les
aaa
mov
loope
repnz
jns
insb
mov
jbe
cmp
cmp
loope
les
sub
cmpsb
add
popa
mov
jbe
xchg
ret
and
in
mov
cld
adc
or
dec
sbb
jnp
sub
jecxz
add
leave
jecxz
imul
add
enter
mov
and
inc
mov
mov
data16
xchg
in
mov
sbb
fwait
fwait
jp
inc
cli
jne
adc
xchg
mov
pop
loope
lcall
fwait
jne
leave
xor
jb
data16
jp
add
out
jmp
xchg
imull
ja
xchg
inc
add
pop
push
mov
popf
cmp
pusha
scas
mov
jb
push
add
mov
out
push
dec
stc
mov
push
jb
jg
int
adc
mov
bound
and
pop
xor
jae
push
rdmsr
out
mov
push
fucomip
fs
xlat
push
test
add
jb
jg
out
mov
lret
jae
stos
xchg
jo
adc
adc
repz
jle
jb
popf
cmp
and
andb
inc
div
mov
aaa
inc
aam
push
jnp
mov
mov
out
mov
aas
mov
cmp
jae
jg
mulb
dec
add
test
push
stos
fwait
in
cmp
jbe
jg
outsb
jo
or
push
cmp
sbb
adc
dec
imul
push
mov
jmp
ret
dec
sub
pop
mov
lds
sbb
cli
mov
jle
int3
xchg
jb
inc
xchg
fldl
sbb
sti
inc
add
sub
loopne
into
sub
jno
cmpsb
adc
nop
loope
add
loope
push
jno
cmp
mov
addr16
mov
sahf
jmp
jmp
popa
inc
mov
call
mov
mov
xor
mov
add
out
shl
sub
mov
and
jge
and
insb
sbb
jno
dec
cmpsb
bound
mov
cmp
jg
and
push
test
outsl
jmp
xor
adc
lcall
jl
in
gs
jo
and
mov
push
inc
jno
pop
cwtl
lds
psubusw
add
lds
jb
lods
sti
stc
pop
adc
mov
mov
jb
lods
xchg
lret
xchg
mov
ret
mov
or
out
inc
lock
push
add
add
add
neg
inc
pop
dec
ss
bound
mov
or
scas
test
add
ljmp
or
jb
rolb
jb
push
jne
jae
pop
xor
adc
das
lods
push
xchg
cmp
push
cld
xor
mov
lods
out
in
push
sbb
jge
lds
jnp
in
add
jb
or
add
add
add
jle
add
mov
jnp
xchg
push
das
int3
les
int3
call
in
cmp
inc
jae
jp
cli
adc
jae
mov
fldenv
dec
fistl
and
cmc
or
or
jg
jae
test
out
mov
jb
mov
cmp
imul
sarl
and
fimull
imulb
dec
and
mov
call
add
sbb
xor
cmpsb
aas
movsb
rcll
xchg
scas
in
dec
icebp
mov
pusha
cmp
shll
mov
jmp
test
aaa
sbb
cmp
sbb
ds
mov
adc
pushw
lret
push
add
add
cli
loopne
pop
hlt
sbb
pop
orb
add
add
cmp
mov
push
xchg
andb
jmp
jae
mov
mov
pop
sub
stos
aad
adc
adc
push
push
outsl
cmp
inc
sahf
add
jle
push
or
je
outsl
cmp
nop
addr16
outsl
mov
jmp
es
repz
test
pop
pop
movsb
in
in
mov
cli
xor
add
leave
jle
mov
nop
pushw
fidivs
test
fdivrs
aas
sti
push
mov
mov
cmpsb
sti
lea
cld
clc
aaa
ret
fildll
mov
mov
push
rcl
data16
add
add
add
add
fldcw
dec
cli
fs
outsb
xchg
das
cld
enter
pop
jb
sti
stc
outsb
fcomip
cmpsl
jmp
mov
push
test
or
test
pop
pop
imul
jb
add
imul
test
or
loop
mov
xchg
sbb
xchg
xchg
sbb
mov
nop
add
adc
call
push
sbb
sub
ficoms
mov
in
fnstsw
insb
jge
pop
lea
shrb
mov
xchg
push
pop
mov
nop/reserved
rorl
out
arpl
sbb
aas
adc
sub
jb
pop
stos
cs
push
ret
or
sahf
pusha
sub
xor
xchg
push
hlt
bound
in
mul
xor
add
out
xchg
gs
popa
jno
loope
jmp
cmp
mov
fbld
stos
mov
sbb
mov
xor
test
sub
pop
jmp
ss
out
jp
addl
inc
subl
push
out
cmp
mov
push
xchg
add
cmpsb
je
add
cmp
inc
and
push
stos
cli
fs
dec
and
sbb
je
and
push
jecxz
movsb
add
xor
or
sbb
inc
push
ds
in
repnz
sbb
and
call
into
das
sbb
fdivs
xchg
incl
repnz
add
mov
mov
sub
popa
test
lds
xchg
cltd
dec
sbb
movsb
call
stc
push
lea
stc
mov
pop
xchg
loope
mov
filds
loopne
mov
rcll
in
xorb
push
cli
push
lea
popf
adc
xor
jecxz
push
xlat
cmp
addl
add
add
add
add
testl
jle
shll
rcl
stc
mov
pop
mov
pop
movsb
sti
xor
shl
dec
dec
add
push
ja
push
dec
xor
ret
out
int
out
andl
jb
daa
mov
jp
mov
stos
mov
inc
stos
imul
stos
mov
mov
test
subl
out
fdivrp
mov
sbb
xchg
ret
mov
mov
stos
mov
into
mov
cwtl
pop
dec
fimull
mov
pop
push
clc
xor
add
fcompl
lock
fwait
dec
sar
jge
lret
jmp
jb
stos
sbb
dec
sahf
popa
dec
stos
jbe
add
stos
outsb
pusha
xor
cld
xchg
es
push
sbb
or
xchg
popf
int
loope
inc
cltd
jle
inc
jmp
jb
inc
movsb
add
xchg
out
hlt
push
sbb
hlt
orb
ja
mov
xchg
fs
mov
insb
ret
rorl
scas
clc
cs
movsl
pop
xor
repnz
cmp
xchg
loope
add
mov
add
add
add
mov
dec
and
pop
cltd
lcall
addr16
pushf
jp
pop
out
push
sti
xor
mov
adcw
xchg
lea
out
mov
adc
sub
cmp
sbb
cmp
and
jmp
mov
add
lret
loopne
cltd
cmc
pop
popa
test
stc
leave
data16
inc
and
aas
mov
jb
push
inc
in
jo
and
mov
outsb
sti
sahf
sti
mov
out
jnp
jb
lods
or
lahf
pop
push
stc
and
push
sbb
jmp
push
mov
subl
push
lea
add
pop
add
dec
lea
sti
arpl
add
stos
je
push
sar
in
in
mov
les
lret
stc
lds
xchg
scas
xorb
mov
xchg
mov
iret
sbb
dec
add
stos
dec
sbb
lea
addr16
cmpsl
cltd
xor
outsb
sarl
lea
mov
js
mulb
xchg
fisubs
add
add
add
leave
in
dec
mov
jle
pop
adc
in
sti
jbe
xchg
lds
mov
inc
subb
cmc
or
inc
cs
jb
mov
popa
in
rorl
sbb
jmp
fiadds
stos
enter
in
add
xchg
cmp
cmp
jecxz
adc
add
add
add
jno
push
out
xchg
push
cld
notb
repnz
sbb
xchg
pop
sbb
add
mov
fsub
lock
sbb
int3
add
call
xchg
fcom
jbe
xor
jmp
pop
imul
lret
pop
in
xlat
call
aaa
and
loope
xor
mov
pop
sbb
jmp
add
jmp
sbb
shll
push
jne
icebp
aam
xor
data16
pop
mov
xchg
sub
jle
cmp
data16
icebp
mov
add
cld
xchg
call
in
in
ljmp
push
ja
out
add
sub
cwtl
je
cmp
cld
and
inc
rolb
jb
xlat
icebp
out
sub
into
outsb
outsb
jbe
out
fs
call
orl
mov
and
je
pop
xlat
je
aam
adc
dec
rorl
pop
into
jne
int
out
sub
shrl
ja
add
aaa
repnz
loop
clc
xlat
shrl
fildll
bound
das
mov
ffreep
cmp
add
add
add
das
xchg
ret
cmp
push
loop
out
push
mov
jb
push
scas
imul
push
sbb
aas
das
clc
add
notl
jb
jnp
repz
test
cmp
jg
inc
lock
xor
jl
or
push
xor
cmp
jg
add
fstl
jb
sbb
or
push
jge
lds
lcall
mov
js
adc
mov
lock
ret
jae
mov
xor
sbb
xchg
jo
jmpw
pushf
cmpsb
cld
aas
xchg
fbstp
bound
cli
jle,pn
fiadds
hlt
jle
and
ret
enter
leave
xorb
clc
add
and
xchg
cmp
fwait
xor
xchg
xchg
nop
or
es
aas
xchg
fbstp
bound
ljmp
xchg
xor
rolb
mov
push
xchg
sbb
mov
ret
inc
negb
cmp
add
cmp
xor
leave
xchg
jmp
notb
ds
add
out
fneni(8087
in
push
cmp
lcall
sbb
push
mov
or
fcoms
call
push
or
pop
push
add
aad
sysret
imul
xor
adc
push
fists
jne
ja
push
add
insb
inc
cmp
sub
pop
mov
add
scas
bound
dec
jo
inc
jmp
mov
cmpsb
or
ljmp
in
lahf
repz
mov
stc
sub
scas
fwait
je
xchg
jb
or
jecxz
es
pop
push
inc
inc
ficoml
fwait
and
xchg
and
movb
jae
test
jb
add
xchg
in
call
jp
jb
dec
add
push
jg
stos
mov
mov
jg
jb
ficoml
jg
stos
scas
fidivs
mov
mov
call
out
imull
or
or
push
or
mov
add
leave
xor
pop
add
pop
icebp
daa
add
lret
sbb
xor
int3
in
lods
pop
and
adc
movb
in
jno
add
mov
cmp
call
std
enter
shl
pop
mov
in
in
dec
jmp
lods
stos
pop
loop
loopne
cmpsb
lods
stos
push
mov
loopne
in
stos
xor
add
xchg
out
mov
hlt
lea
jno
jmp
jmp
mov
mov
stos
mov
addr16
es
xor
jg
fisttps
filds
fs
fcmovne
data16
mov
cmp
fnsave
in
inc
scas
push
scas
mov
jmp
sldt
add
add
add
add
dec
push
arpl
shlb
fmuls
fadds
or
jge
jp
dec
das
add
ror
add
pusha
sub
dec
cmpsb
jg
bound
push
por
jb
sub
arpl
xor
xchg
sub
aas
jae
push
add
add
add
mov
push
and
data16
pop
stos
daa
mov
push
dec
ja
push
and
add
inc
je
enter
data16
out
mov
fmuls
dec
insl
cs
adc
inc
mov
inc
sub
inc
push
mov
push
jg
out
push
add
adc
add
ret
out
dec
add
add
jg
leave
jp
adc
push
test
imul
lds
jecxz
jns
rolb
sbb
xchg
fsubp
add
clc
jge
jb
xchg
ficoms
lods
xlat
pop
sub
sbb
pop
add
xor
xchg
sub
lds
in
dec
stos
dec
jae
jg
ret
inc
add
cmpb
dec
data16
cmp
sbb
jbe
push
pop
stos
xor
jno
jle
pop
fstl
mov
add
jbe
jmp
push
push
dec
fcoml
jno
add
movsl
in
mov
aas
sbb
gs
mov
leave
mov
inc
cwtl
cli
or
adc
add
add
add
add
add
pop
pop
cmp
icebp
jmp
fbstp
pop
lret
jmp
jo
bound
inc
add
pop
mov
mov
dec
jle
pop
xchg
mov
push
int3
pop
sub
mov
pop
or
les
and
in
lcall
ljmp
fildll
jmp
mov
in
dec
mov
fnsave
jmp
mov
inc
divb
push
add
cmp
push
pop
fisubs
jl
xchg
out
fstl
loope
pop
jae
jmp
lret
jnp
dec
mov
test
xchg
pop
mov
inc
pextrw
mov
stos
imul
jno
jg
push
xchg
imul
xor
xlat
adc
jae
push
aaa
and
sbb
dec
add
lds
mov
adc
mov
in
push
mov
adc
inc
dec
add
cmp
jg
jge
jb
and
jae
push
or
xchg
mov
out
cmpsl
loope
call
mov
mov
jb
mov
lret
in
int
xorb
js
mov
add
add
add
add
push
stos
adc
andb
test
out
jle
jb
lret
out
push
mov
xor
xor
jb
aas
cld
icebp
mov
lods
cltd
int
push
outsb
int
inc
ja
popa
sti
insb
notb
test
fnstsw
jns
fldl
jb
sbb
popf
jbe
cli
icebp
movsb
jle
jb
push
loopne
dec
cmpsb
and
data16
pushw
pop
cmpsb
data16
scas
loope
xchg
jb
rorl
loope
sbb
push
pusha
out
pushf
addr16
into
popa
xor
push
sbb
insb
jns
lods
fsubrl
int
dec
add
push
sub
stos
pushf
loop
cmpsb
gs
or
jmpw
push
mov
push
cs
fcmovnu
xchg
xchg
mov
cmpsb
dec
dec
and
cmp
rorl
mov
xchg
loope
xchg
inc
bsr
popa
mov
shll
mov
add
std
and
in
or
pop
pop
cmp
loope
xchg
enter
out
cmp
dec
and
mov
sbb
and
jmp
and
pop
and
ret
cmp
mov
adcl
add
xor
mov
cmpsb
jne
pop
cmp
loopne
add
add
pop
jmp
sub
repz
iret
inc
jmp
xchg
mov
leave
adc
sub
lods
or
pop
add
push
xor
push
sub
xchg
cs
adc
jb
cmp
out
jg
sarl
jge
or
jb
mov
fildll
jb
push
push
jae
push
inc
jo
int3
or
adc
out
call
gs
mov
dec
pop
mov
movb
les
cmc
orl
adc
ret
jbe
or
dec
enter
push
aaa
add
xchg
add
xor
jae
jg
xor
testb
jg
sbb
jg
jb
cmp
icebp
fstl
js
xor
jb
sbb
jb
or
jb
jg
das
mov
mov
data16
testl
dec
cli
sti
ljmp
jmp
testb
jo
mov
jg
outsl
data16
iret
andl
mov
add
mov
mov
xchg
sahf
mov
xor
jg
dec
frstor
mov
jecxz
jno
xchg
popf
sarb
jno
es
mov
mov
push
dec
in
outsb
ficoml
inc
rcll
fcoml
add
ret
popa
mov
cmpsl
loope
xchg
push
add
in
inc
addr16
popf
mov
notl
les
subb
seta
dec
add
pop
loop
push
shll
inc
xor
fcmovnb
popa
mov
shll
cmpsl
loope
fsubrl
pop
test
mov
add
fwait
pop
ljmp
jno
add
ret
jb
adc
cmp
rolb
idivl
push
pop
jae
push
add
aaa
xchg
add
xchg
int
les
lcall
and
add
int3
sti
std
mov
cmp
inc
lret
sti
add
add
dec
lret
je
bound
cld
int
fwait
test
pop
add
push
mov
xchg
push
mov
in
and
push
sbb
xchg
jb
ret
fbld
hlt
ret
mov
and
mov
jb
xor
jae
jg
idiv
push
jb
ret
bound
sbb
add
add
add
add
sbb
ds
fdivrp
insb
cmpsl
lret
addr16
ja
mov
sub
std
add
bound
mov
out
push
mov
jg
in
test
jg
ss
gs
fildll
cmp
jno
sub
jno
data16
bound
call
bound
aad
es
testl
pusha
loop
bnd
adc
aam
or
fsubl
fs
stos
lret
fbstp
sbb
jmp
push
xchg
fs
loopne
fimull
sub
into
fisubs
and
fwait
enter
lret
adc
dec
mov
enter
sbb
data16
lret
push
ss
nop
pop
enter
add
xchg
push
das
fsubr
rolb
pop
enter
aad
dec
addr16
mov
enter
mov
dec
adc
nop
xchg
mov
xchg
addr16
cmp
fs
pop
lret
push
inc
jnp
pop
fcmovb
incw
fucomip
xor
jb
push
xchg
movsl
mov
das
mov
into
ffree
push
call
enter
xchg
jge
cs
jae
cs
jo
lret
xchg
insb
jmp
fcomip
jecxz
xchg
popf
imul
mov
call
xchg
push
popf
imul
push
shrl
jb
loop
jb
push
je
icebp
pop
or
divl
cs
jae
cs
jo
leave
or
imul
loope
push
inc
cmp
inc
jg
jb
les
sti
dec
arpl
jg
negb
jecxz
jge
add
mov
jae
das
movl
fimull
mov
add
xchg
or
stos
dec
add
sbb
add
lcall
out
pop
xchg
jb
fcoml
jb
add
xor
test
shll
out
jg
jmp
jg
cmc
mull
cmpsb
fmulp
ja
into
ljmp
loope
int
fists
jno
jecxz
jno
gs
gs
shlb
ljmp
addl
add
add
add
rcll
jo
data16
mov
cmp
movsb
stos
xor
jno
loope
fstpl
dec
xor
or
mov
xor
jno
aaa
bound
fisubrs
lahf
in
ljmp
gs
inc
add
shrl
and
jge
cwtl
sbb
and
sbb
fildll
in
aad
jp
add
pushf
jp
add
pop
or
mov
sbbl
inc
mov
nop
add
aam
pop
js
pop
dec
les
nop
xchg
xchg
mov
xchg
dec
xor
and
leave
data16
dec
pop
sbb
callw
xchg
incl
rclb
fdivrl
mov
stos
imul
stos
push
enter
add
add
add
jno
jmp
out
xor
sti
dec
jae
cmp
sahf
lret
movsl
loopne
pop
scas
loop
push
in
fdivrp
pop
jbe
stc
jno
push
jae
push
dec
dec
add
mov
push
bound
jb
mov
and
ret
push
jbe
arpl
mov
push
add
add
add
push
mov
test
push
or
jb
pop
sbb
popa
or
jb
pop
xor
cmp
jge
loope
jns
mov
jne
lds
dec
xchg
fdivs
mov
mov
hlt
xchg
shr
xchg
mov
push
or
inc
int3
paddsw
mov
mov
jbe
in
icebp
mov
xor
mov
orl
push
jg
jmp
or
lahf
xor
fs
loope
call
loope
fiadds
xchg
mov
pop
bound
leave
jnp
outsb
inc
add
ljmp
lea
sub
jb
ljmp
add
add
ds
jmpw
cltd
push
inc
cmp
popa
dec
adc
pushf
inc
sub
cmp
ljmp
inc
div
jmp
test
xchg
notb
lahf
add
add
test
add
mov
jge
cwtl
fisttps
cwtl
popa
test
xlat
xchg
jge
fisubl
ret
data16
xchg
mov
sbbb
add
shll
jbe
pop
mov
callw
xchg
decl
add
jle
xchg
incl
push
dec
pop
pop
enter
mov
mov
jmp
jmp
add
das
push
jb
push
add
push
xchg
push
dec
mov
nop
incl
cmc
pop
pop
sbb
pcmpgtw
test
in
add
sub
scas
in
fucompp
cltd
cli
mov
nop
ljmp
add
enter
lahf
nop
decl
addr16
xor
int3
push
aaa
inc
xor
mov
mov
xchg
in
insl
pop
outsl
repz
cmp
mov
add
add
add
add
mov
add
jb
jg
mov
cwtl
mov
jmp
mov
lods
int3
roll
loopne
lds
fcoml
lea
pop
test
pop
mov
xor
icebp
adc
inc
push
jbe
mov
lret
cltd
lret
sub
popf
clc
test
or
out
xchg
xchg
add
aas
inc
add
cmp
add
xchg
cwtl
dec
nop
data16
fistps
out
fcmove
dec
pop
scas
mov
xchg
adc
test
add
mov
xchg
bound
jmp
insl
test
shrl
pushl
cmp
cmp
jle
imul
fs
ljmp
stos
adcl
jno
scas
out
cli
jae
add
imul
mov
jmpw
es
bound
push
cmpsb
push
mov
xchg
bound
ljmp
add
jo
dec
sbb
inc
scas
in
mov
ljmp
sbb
add
xchg
pushl
xchg
in
lret
repz
popa
in
inc
cmpsb
sldt
add
add
add
add
inc
add
cmp
loope
scas
xor
jmp
mov
inc
sub
mov
inc
rcr
gs
ds
add
hlt
inc
add
sub
push
cmp
in
xchg
icebp
sti
sti
mov
inc
jne
or
xchg
rcrl
mov
insb
bound
sti
jmp
jb
fcoml
add
add
add
mov
imul
add
aas
push
or
popf
jle
mov
je
hlt
sbb
xor
push
inc
es
push
jl
push
cltd
lret
imul
das
insl
or
stos
jmp
clc
sbb
jmp
mov
movb
das
mov
ret
push
mov
fwait
jo
inc
aas
push
add
sub
xchg
cmp
pop
sub
rorb
xchg
pop
sbb
sbb
mov
add
inc
in
add
xor
subl
inc
js
mov
xchg
jb
or
fisubrl
dec
push
inc
ss
inc
push
jg
jle
inc
add
addb
scas
loop
inc
ja
loope
inc
rcll
adc
jmp
sbb
inc
imulb
lods
cmc
bound
push
push
es
shr
cmp
rcll
mov
lods
imulb
je
jno
cmpsb
sub
and
cli
call
fsub
ljmp
add
add
add
in
gs
fsubrs
pop
std
xor
orb
add
lds
add
xchg
call
pusha
mov
dec
sub
ja
inc
fbstp
nop
incl
cli
add
lret
mov
or
lret
cmp
jae
leave
fmuls
adcb
inc
mov
add
add
add
add
add
or
mov
inc
sub
pusha
imul
arpl
cmp
sbbl
jmp
insl
xor
cld
xchg
adc
lods
push
jb
xor
or
jb
push
pop
jb
imul
inc
mov
sbb
mov
int3
push
add
das
in
sbb
xor
or
mov
imul
stc
aas
or
idiv
in
test
insb
jne
cmc
cli
fstpl
jno
data16
sub
or
pop
xchg
pushl
movb
mov
jge
lcall
add
jle
jb
or
jge
cmc
fstpt
jns
xor
gs
ja
add
jge
push
jecxz
add
mov
dec
ret
sar
pop
jge
lock
movsb
add
jge
and
jecxz
add
pop
add
roll
xchg
jge
std
bnd
or
roll
and
ret
and
aaa
add
jge
test
out
lea
int3
arpl
mov
inc
out
cmc
jle
push
add
add
jmp
sub
jge
jno
jne
add
xchg
out
div
je
jno
popa
leave
jno
arpl
mov
inc
jmp
mov
jmpw
adc
jmp
jmp
sbb
xchg
scas
add
fsubr
cs
repz
xor
xchg
add
int3
in
add
mov
decb
add
ljmp
stos
xchg
decl
push
sub
unpckhpd
inc
sti
cmp
pop
pop
das
adc
vrcpss
mov
xchg
fmuls
pmullw
jmp
sbb
pop
test
dec
nop
js
push
fcoml
inc
pusha
test
add
pop
popf
mov
mov
xchg
loopne
xchg
enter
cli
loop
pop
sti
fidivrl
jns
jg
jae
push
or
mov
test
and
cwtl
cmp
jbe
or
fcoms
je
shr
push
stc
pop
je
inc
insb
adc
push
inc
jb
pop
and
xchg
sub
lock
push
add
push
jb
jns
or
fsubrs
jb
cmp
fsubrl
dec
jge
test
adc
xchg
mov
stos
xchg
jge
pop
pushl
or
or
stos
repz
or
call
xchg
jmp
jo
out
push
enter
push
aas
push
fidivl
jb
adc
add
add
add
mov
inc
scas
ljmp
cmpsb
ljmp
xor
add
cmc
add
fdivrs
push
push
jg
jb
dec
call
xor
mov
addr16
jecxz
xchg
bound
ljmp
sbb
fisubs
insb
xchg
loopne
lret
mov
add
add
add
mov
data16
in
inc
jns
jno
jmp
inc
lds
xor
xchg
jge
push
jmpw
cmp
scas
repnz
dec
dec
jo
jno
movsl
push
ljmp
mov
out
adc
or
fwait
xchg
inc
sbb
push
daa
pop
cmp
add
lret
inc
aam
cmp
rcrl
sldt
add
add
add
add
xchg
xor
dec
mov
adc
add
xor
cmpsl
loop
inc
sub
mov
lods
minps
or
nop
pushl
pop
inc
dec
inc
cmp
inc
stos
add
outsl
mov
insb
jg
push
jmp
mov
loop
roll
je
sar
dec
and
or
bound
dec
or
mov
cmpsb
mov
dec
test
jbe
lret
sti
jge
daa
and
cwtl
mov
shl
push
mov
adc
jmp
xchg
jmp
xchg
mov
cmp
mov
punpcklwd
icebp
dec
push
dec
dec
test
add
pushf
adc
pop
scas
push
xchg
popa
mov
cltd
out
pusha
enter
add
add
add
jmp
in
adc
loope
icebp
inc
mov
jb
adc
subb
add
jge
or
nop
add
inc
sbb
imul
jmp
push
addl
mov
add
lods
gs
leave
mov
iret
fdivrp
or
imulb
push
jge
push
ret
add
mov
out
mov
sub
aaa
dec
pop
mov
jg
and
add
into
cwtl
mov
popl
rolb
std
add
test
lds
ret
add
xlat
int
mov
adc
dec
enter
jns
dec
or
ss
movsl
jae
mov
dec
rcll
loopne
add
test
test
mov
pop
fwait
sub
lahf
lret
aam
and
jmp
mov
dec
push
lods
hlt
mov
ds
mov
fs
sub
repnz
call
and
pusha
jp
outsb
add
push
dec
and
cmp
or
jmp
jnp
cmp
mov
cmp
sti
cmp
and
xchg
aam
stc
dec
sub
jge
xor
out
add
dec
mov
add
dec
adc
mov
shll
lds
loop
dec
and
jmp
ja
push
mov
cltd
inc
cmp
mov
push
rorb
pop
cltd
dec
add
outsl
adc
jmp
ret
and
xchg
rorb
out
adc
add
jb
aas
insb
jge
sbb
jb
mov
and
xor
addr16
xacquire
dec
jmp
pop
xchg
pop
sub
xchg
ret
xchg
mov
out
dec
mov
sbb
adc
out
adc
pop
push
xchg
pop
xchg
scas
push
and
scas
push
and
into
scas
push
pop
jae
push
pushf
jb
jne
lods
inc
ds
int3
mov
jb
sbb
insl
lds
in
add
filds
jge
mov
jle
out
loop
add
movsl
popf
pop
adcb
xchg
ds
sbb
leave
mov
pushf
or
dec
stos
inc
jae
jge
sbb
add
add
add
add
jge,pt
loop
lret
lret
sub
test
imul
in
inc
adc
bound
add
cmp
fs
loope
xchg
push
lock
jno
jmp
bound
dec
sub
and
mov
jmp
pop
cmp
jmp
jae
sub
add
out
mov
int
lds
dec
add
repnz
jno
jmp
ret
call
loope
call
xor
pop
mov
dec
lds
pop
das
mov
add
aaa
fbld
mov
out
add
jmp
jae
jg
je
jmp
or
lret
add
or
sbb
sub
jg
and
shr
or
xchg
lcall
adc
pusha
cmp
data16
jle
jbe
xchg
aam
inc
repnz
mov
nop
incl
sub
and
leave
data16
rorl
insb
xchg
inc
lods
divl
jmp
mov
pusha
adc
adc
xchg
dec
imul
add
sahf
push
add
and
ljmp
or
adc
call
mov
in
lds
xchg
and
sahf
and
fimull
push
add
sahf
std
mov
arpl
mov
lahf
add
add
popf
std
mov
arpl
ret
adcb
pop
das
stc
lds
add
test
enter
pusha
inc
xchg
subl
enter
outsb
test
jle
jno
xchg
outsl
dec
les
fnstenv
cmp
sub
ret
add
cmp
int
in
inc
pop
dec
cwtl
inc
adc
push
push
loope
push
iret
xchg
ljmp
int
add
mov
addb
add
add
add
add
ret
inc
push
imul
inc
lds
jae
addr16
pop
into
push
shlb
xor
push
push
jo
out
out
sbb
jbe
cmp
out
fidivl
loop
and
shl
add
out
daa
fmulp
leave
dec
jb
ljmp
add
arpl
xlat
jmpw
dec
or
mov
sti
mov
sahf
repz
int
arpl
data16
fidivs
rcl
loope
fwait
cmp
data16
jp
in
dec
mov
fisubs
add
dec
inc
ja
sbb
sbb
in
mov
xchg
add
inc
sub
dec
adc
pop
test
push
nop
inc
or
data16
inc
push
mov
mov
add
inc
mov
add
lds
jmp
jmp
push
add
mov
loop
cmp
sarb
push
jb
jecxz
push
pop
imul
cmpsb
fs
pop
add
xor
jb
addr16
and
and
sahf
push
fnstcw
lahf
pop
imul
in
cmp
sti
adc
mov
imul
cmc
xchg
pop
shlb
lahf
and
and
mov
gs
or
lahf
gs
movb
ljmp
jb
dec
sub
pop
enter
add
add
add
push
fisubrl
dec
jns
and
mov
add
jge
out
into
mov
jb
inc
lea
rolb
jb
jge
test
jge
imul
divl
mov
mov
ljmp
push
add
dec
fidivrs
notl
lods
jle
jmp
push
insb
mov
add
lds
add
cmp
ss
inc
jp
inc
ja
data16
stos
fcmovne
int
jmpw
fcmovne
mov
jp
adc
stc
xchg
or
jmp
cmc
jmp
fbld
sub
popf
jno
out
xor
push
jmpw
ffreep
mov
push
fisubrs
add
add
add
cmp
out
stos
jle
jp
xchg
bound
ljmp
inc
xor
add
js
add
and
or
hlt
cmpsb
mov
inc
inc
adc
and
pop
xchg
call
test
add
sub
dec
fiadds
fldl
inc
xor
sub
fs
cmpsl
jmp
mull
inc
add
into
call
inc
rcr
mov
mull
sub
or
mov
in
paddusw
inc
jb
dec
or
push
xchg
icebp
subl
hlt
das
rcrb
arpl
jb
jmp
gs
and
lods
and
fiaddl
jb
loope
dec
scas
loope
xchg
mov
insb
mov
out
push
lahf
out
dec
and
or
sbb
out
sub
inc
imul
push
adc
arpl
push
sub
or
jge
xor
jns
outsl
lods
popf
mov
lods
add
pop
pop
jb
sbb
add
std
cltd
ds
xor
lea
into
rolb
out
inc
sbb
jge
jb
pop
jb
int3
sub
leave
push
jb
or
xchg
rol
ljmp
cwtl
pop
mov
add
mov
jbe
lods
sbbl
idivl
int
repz
cmc
jl
jmp
add
pop
fisubrl
fs
je
out
xor
sti
test
fnstsw
xor
repnz
jmpw
jg
jno
dec
xchg
shr
addr16
data16
sub
add
xor
adc
jmp
fs
out
xor
sub
sub
in
pop
imul
add
lret
scas
add
push
xorl
test
das
inc
ja
xrelease
pop
test
add
dec
adc
aas
sub
jmp
inc
add
movb
aas
sub
jmp
xchg
decl
inc
cmp
mov
adcl
or
add
dec
mov
mov
lret
rolb
adc
bound
data16
repz
inc
jb
cmpsl
and
mov
scas
imul
out
std
cwtl
pop
mov
fsubr
clc
js
ja
ljmp
add
cwtl
adc
arpl
jbe
jmp
inc
adc
pop
mov
fwait
pop
imul
add
fildl
dec
dec
pop
mov
sahf
push
or
out
sbb
insl
cwtl
pushl
or
adc
jmp
jg
arpl
insl
and
adc
jge
mov
cltd
ret
cli
add
inc
or
jg
jb
cmp
cmovne
jge
movsl
or
pop
gs
xchg
jb
sti
or
add
add
add
add
test
add
jge
loop,pn
ret
cli
add
pop
mov
jle
jb
mov
xchg
lea
cmp
and
add
repz
jns
out
ret
jbe
or
arpl
jmpw
dec
aad
aas
sub
jge
test
leave
popf
jle
jno
push
sub
aas
sub
jge
mov
add
nop
addr16
cmp
add
lock
xchg
ficomps
loop
add
aad
push
mov
call
xchg
fnstenv
fbld
in
jecxz
loop
sub
cmp
jmpw
daa
jo
jecxz
ret
loop
jno
mov
push
push
mov
xchg
out
mov
imul
hlt
popf
inc
sbb
movsl
sldt
add
add
add
add
insl
ja
dec
cmp
and
sbb
das
mov
ret
mov
add
mov
jp
imul
xorl
insb
mov
dec
adc
jmp
outsl
mov
mov
jmp
cmc
cmpsb
inc
and
adc
rclb
add
imul
add
add
add
gs
lret
ljmp
jae
adc
cmpsl
and
sub
sbb
and
scas
push
and
mov
sbb
mov
idivl
pop
add
sub
jmp
je
icebp
xchg
imul
jecxz
add
je
fcoms
test
ss
pushf
out
jb
push
je
sub
add
add
add
inc
sbb
sbb
ffree
mov
sub
sbb
sub
jnp
ljmp
mov
inc
mov
les
fidivrs
les
mov
stc
popa
adc
cli
imul
push
jg
jb
cli
pop
dec
mov
sbb
insl
je
add
add
or
add
add
pop
enter
fcmovu
pop
push
jb
jge
lahf
movsb
sbb
push
jge
and
jge
test
jge
in
nop
out
xchg
movsb
in
mov
cmp
jmpw
jecxz
xor
jmpw
dec
adc
pop
arpl
jo
pushw
and
repnz
pop
jge
outsl
pop
xchg
jo
sub
dec
scas
add
lahf
xchg
adc
mov
dec
leave
je
add
scas
jmp
and
das
subb
lahf
xchg
jb
call
xor
pop
fs
and
loop
das
fs
lahf
xchg
mov
xchg
mov
or
insl
je
repnz
pusha
dec
dec
jno
int3
sbb
pusha
fwait
addl
add
add
add
add
mov
add
jmp
inc
or
mov
mov
sbb
dec
aaa
out
sub
add
cwtl
js
ljmp
add
sub
fmull
and
dec
mov
mov
push
add
push
cmp
xchg
mov
pop
sbb
and
jmp
adc
add
imul
inc
dec
je
pop
enter
test
sub
sti
mov
inc
rcl
das
mov
xchg
les
cli
sub
sub
push
insl
sub
clc
jns
in
push
leave
adc
test
xchg
xchg
or
or
sti
ffree
jmp
jb
test
xchg
pop
sti
add
in
inc
sarl
and
inc
mov
pop
xchg
lret
dec
out
mov
or
add
rol
imul
jp
cltd
push
cmc
popf
mov
jge
push
loope
dec
xchg
jge
out
mov
shrb
pop
pop
je
push
jo
add
jo
shll
cld
hlt
or
add
xchg
arpl
add
add
add
add
add
scas
bound
mov
add
and
or
sbbl
aad
ja
sbb
adc
or
pop
dec
xchg
sbb
inc
sub
pop
lret
je
lret
fwait
sub
cltd
cli
dec
or
jle
jecxz
xchg
adc
mov
pusha
jb
sub
lds
adc
loop
mov
out
ss
xor
xchg
cld
and
aas
jmp
lret
fmull
faddl
sub
jl
add
popl
jae
mov
pop
testb
xchg
jmp
test
aas
out
inc
jl
add
hlt
das
adc
add
pop
test
push
nop
jmp
pop
dec
inc
dec
ret
jmpw
nop
jmp
and
pop
sub
adc
inc
or
xchg
and
xchg
call
adc
or
pop
movsb
fildll
pop
test
data16
dec
pop
lret
jmp
jb
imul
scas
push
mov
dec
shll
jb
add
cmp
and
scas
push
and
xor
in
shlb
add
mov
das
adcl
pop
jae
push
and
dec
imul
mov
push
pop
jae
push
sti
out
out
xchg
test
scas
push
jmp
add
add
add
mov
mov
jno
lahf
sti
je
pop
mov
jnp
inc
sbb
cmp
popf
add
jb
mov
adc
daa
sbb
jge
aam
jne
mov
mov
mov
bound
push
jp
loope
add
std
cs
shr
in
inc
push
jb
jge
cli
add
ret
movb
add
add
add
add
cli
jle
jb
cmp
stc
push
stos
iret
jb
jmpw
cmp
and
xor
jno
fbstp
outsl
data16
add
xor
jno
jle
cmp
insb
in
imul
push
lret
lds
mov
loope
push
gs
insb
test
imul
jmp
movsl
pop
repnz
add
add
add
add
inc
push
add
sbb
insb
pushf
iret
jmp
out
add
jecxz
aas
lahf
xor
cmc
test
dec
cmpsb
std
shr
add
add
in
enter
xchg
cs
add
sub
retw
jmp
ja
addr16
xchg
leave
and
daa
mov
jmp
int3
imul
push
in
imul
lcall
and
shll
imul
callw
nop
inc
pop
pop
fldenv
rorb
pop
mov
cmp
mov
adc
xchg
inc
xor
sahf
ja
sbb
and
imul
es
xchg
adc
jb
adc
dec
scas
adc
and
cli
add
es
jae
jmp
cli
stc
insl
xor
imul
out
mov
and
and
scas
push
sbb
xchg
je
pop
leave
std
cli
pop
and
push
add
adc
push
sahf
jae
pusha
cwtl
call
jmp
mov
pop
leave
add
insb
jge
loop
add
jb
sbb
pop
loop
jl
scas
or
cltd
add
inc
addb
movb
mov
jle
jb
dec
and
outsb
rcrb
jge
cmpsl
cltd
cmp
es
jge
cmc
lea
mov
adc
mov
jle
jb
pop
pop
mov
jge
pop
cmp
push
in
scas
out
cmp
add
add
add
add
push
ss
ss
insl
mov
jg
scas
popf
xchg
fs
jl
mov
in
ljmp
dec
sub
sub
sbb
mov
add
jle
repnz
lret
push
test
pop
add
jge
adc
int
or
xchg
jb
repnz
call
xor
pop
mov
cmp
jmpw
xchg
xchg
xchg
cli
add
jmp
cld
and
and
ret
data16
pop
sbb
lcallw
les
inc
pop
nop
test
and
mov
mov
jp
adc
popa
or
ret
adc
ret
cwtl
lcall
add
sub
repnz
shll
sub
in
adc
call
jmp
sbb
and
ljmp
inc
ret
cmp
add
jno
or
adc
sub
jno
adc
js
adc
jp
push
add
or
dec
cmp
lds
scas
push
add
add
add
jmp
add
jb
dec
push
mov
lods
push
add
or
test
fmuls
sbb
dec
jg
or
cmp
mov
es
aad
das
xor
push
jg
movl
xor
sbb
push
mov
ret
ljmp
sbb
mov
push
test
mov
add
popf
xor
iret
out
inc
jnp
leave
xchg
dec
enter
subl
push
jb
jge
cli
or
inc
cld
fsubrl
jb
shll
push
add
or
and
jge
imul
jmp
jno
push
add
outsb
xchg
pop
mov
xchg
xchg
dec
stos
or
ljmp
inc
lret
enter
adc
jmp
jno
dec
xor
inc
mov
sahf
int
cmp
cmp
mov
push
dec
jmp
mov
jmpw
dec
jb
call
jbe
add
jmp
adcl
sub
lods
mov
add
add
add
add
sub
push
shr
jns
data16
ds
pop
dec
enter
dec
dec
sbb
fidivs
add
jmp
pushf
cs
pop
sbb
mov
xchg
mov
xchg
or
lret
dec
cs
pop
or
callw
call
sbb
inc
jmp
dec
data16
and
outsb
cmp
dec
shll
mov
insb
pushf
dec
fs
fsubrl
pusha
mov
mov
ja
pop
test
mov
dec
pop
jb
push
and
jae
push
and
sahf
push
cli
inc
cmpsb
add
or
aam
and
sahf
push
sti
add
mov
div
mov
add
add
add
add
pop
add
adc
repnz
pop
dec
movsb
jmp
mov
push
or
cmpsl
jecxz
loopne
mov
sahf
jno
dec
mov
push
sub
lds
xor
push
sub
pop
mov
mov
xchg
push
sub
jge
pusha
push
jmp
add
cmp
push
bnd
add
adc
mov
mov
ds
lahf
xchg
pop
stc
xchg
sbb
jb
imul
movsb
add
or
fadd
pop
roll
mov
movb
ljmp
jb
or
ss
jmpw
ficomps
mov
jmpw
xchg
push
bnd
add
add
add
mov
adc
fucomp
xor
jno
xchg
xchg
bnd
xchg
ljmp
lea
xchg
loopne
push
bnd
jo
bound
in
out
in
push
jno
and
outsw
fs
xchg
xchg
fsubrp
or
lock
mov
adc
xchg
les
push
add
pop
jl
push
mov
push
lods
call
push
or
jo
data16
dec
dec
adc
jmp
lods
ja
ds
cmp
daa
cmp
popa
test
mov
addr16
pop
test
data16
cmp
in
push
adcl
xchg
lock
pushl
cmp
test
add
data16
adc
jns
xorl
je
push
xor
out
push
insb
add
mov
add
popf
add
int
arpl
popf
push
or
std
add
add
cmp
push
or
out
add
xor
mov
or
jle
jmp
cmp
add
cli
jg
mov
jbe
in
out
imul
push
xor
and
add
mov
jge
stos
sarb
repnz
add
mov
push
outsb
lds
pop
in
push
mov
push
pusha
ret
jle
dec
and
sbb
jle
add
sbb
adcl
lds
addb
mov
jge
out
loop
add
mov
ret
cmp
ljmp
push
jecxz
add
bound
stc
xchg
xor
jno
fildl
inc
push
dec
sub
pusha
jb
mov
mov
xchg
scas
or
cmpsb
add
inc
cmp
cli
adc
cli
mov
imul
push
jb
mov
dec
mov
shl
sub
inc
addr16
jp
test
das
and
loopne
cmc
loope
call
repnz
shl
arpl
xchg
mov
add
in
push
jmp
fisubl
data16
dec
pop
add
adc
jbe
ret
pop
out
add
xor
mov
lock
shll
test
mov
stc
jbe
xor
jne
mov
inc
add
rcr
sbb
fadds
add
call
xchg
in
inc
ja
in
dec
daa
in
pusha
add
push
add
das
sti
jmp
jns
lea
jecxz
cli
sub
cmp
add
add
fcompl
lret
inc
adc
mov
orl
shll
push
popf
push
gs
xchg
js
add
in
mov
imul
cld
pop
push
pop
jae
push
add
add
add
in
inc
jb
popf
xor
mov
je
jae
jge
cmc
jle
pop
push
loop
add
shlb
or
add
jle
jb
xor
mov
orb
add
dec
pop
fsubp
dec
add
test
push
ljmp
lcall
mov
jge
add
jecxz
add
push
mov
fisubrl
add
jle
aaa
clc
xorb
jge
sti
sub
and
mov
mov
fwait
adc
and
cmp
fnsave
sub
pusha
sbb
iret
in
lea
out
add
pop
push
repz
inc
xchg
xchg
call
jge
add
lea
jno
sbb
push
dec
inc
jno
data16
add
addr16
in
loope
call
rcr
sub
fcmovne
add
jae
data16
loope
call
jge
gs
inc
sbb
jmp
testb
xchg
out
data16
dec
pop
lret
inc
jmp
fisubl
out
data16
sub
les
dec
pop
lcall
jbe
ret
outsl
dec
add
push
les
data16
jmp
xor
pop
les
rolb
jmp
div
out
rcrb
out
vphaddbw
rolb
pop
sbb
paddw
inc
jb
cmp
add
loop
jb
mulb
sahf
sahf
push
sub
sti
push
sbb
jb
imul
cs
push
mov
xor
jb
loope
lcall
or
call
add
lea
imul
mov
popf
insl
mov
popf
cmp
add
loop
lcall
pop
jae
push
add
add
add
push
mov
mov
test
push
ljmp
sbb
outsl
push
or
push
mull
push
push
stc
cmp
shrl
stos
dec
push
jmp
or
ljmp
jb
out
push
push
loop
add
mov
aaa
mov
jb
repz
ds
push
bound
mov
fcoml
add
int
push
stos
push
add
dec
mov
xchg
inc
jns
aas
dec
cmp
fbld
inc
jb,pt
mov
adcl
sahf
cmp
jo
data16
or
add
arpl
scas
sbb
jno
fcmovnb
add
fwait
cmp
in
stos
xor
jno
xchg
xor
add
loopne
or
cmpsl
fimuls
fwait
push
inc
jne
es
jmp
jno
data16
outsl
movsl
popf
mov
and
pop
leave
pop
mov
leave
es
mov
leave
data16
inc
xchg
incb
in
add
leave
pop
mov
mov
inc
sbb
data16
les
jmp
xor
fcmovne
xchg
iret
add
pop
lret
push
push
push
jg
imul
test
sbb
push
sbb
xchg
lret
adc
cwtl
mov
fadds
or
push
ja
cmp
mov
pusha
mov
je
inc
jno
out
jbe,pt
or
jns
adc
adc
add
add
add
insl
push
inc
divl
dec
inc
jmp
push
add
out
jno
sahf
and
clc
lahf
por
dec
push
icebp
aad
jp
and
and
insl
push
dec
leave
lea
sti
jg
imul
mov
shll
data16
adc
loopne
fnsave
jae
dec
push
xchg
lcall
cmpsb
lds
in
icebp
mov
jecxz
adc
ss
dec
xchg
fistpll
push
mov
test
mov
jl
stos
mov
cmp
lds
imul
add
mov
loop
adc
mov
and
jb
jp
fisubrs
sbb
jb
jge
add
xchg
lods
push
dec
lea
jnp
stos
add
fs
jmpw
xchg
sahf
ret
int
jb
data16
cli
imul
jle
jle
or
sub
stos
jmpw
dec
mov
mov
cmc
bound
jns
jno
fsubl
xchg
adc
mov
or
sti
inc
jb
stos
movsl
pop
jb
movsl
jp
loop
xchg
out
adc
sbb
data16
rcrb
xchg
add
jmp
jg
jge
sub
nop
mov
scas
and
pop
add
and
lds
xor
nop
call
jge
mov
nop
mov
test
mov
test
mov
add
add
add
add
add
and
lds
loopne
sbb
xchg
js
add
lds
push
xchg
addr16
loope
jle
mov
sbb
repnz
adc
cmp
jb
push
inc
lods
push
cmp
push
xor
stos
push
movsl
stos
push
mov
push
mov
push
mov
push
test
push
jne
push
add
stos
push
mov
push
out
mov
push
adc
push
xchg
scas
sub
cmpsl
sub
sub
sub
xor
sub
aaa
sub
sub
aaa
sub
das
sub
aaa
aas
add
or
in
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
fmull
inc
add
push
inc
add
or
mov
or
iret
or
mov
or
add
inc
add
add
add
rolb
out
add
mov
add
mov
mov
add
mov
add
mov
rolb
adc
add
mov
stos
jno
xor
add
add
add
xor
outsb
sbb
sub
xor
jbe
xor
outsb
aas
xor
jbe
xor
outsb
xor
jbe
pop
sub
push
sub
or
outsb
gs
ret
outsl
leave
pop
lock
in
add
and
js
and
jns
push
insl
repz
outsl
repnz
jb
add
jae
xchg
fmull
nop
fmull
xchg
mov
add
add
add
add
scas
cmp
mov
add
dec
loope
sub
fldcw
pop
xor
rorl
popa
iret
push
cmp
sub
inc
inc
sub
cltd
xchg
inc
xchg
adcl
ret
cltd
ret
mov
test
dec
pop
ret
pop
ret
dec
ret
leave
enter
fxch
xchg
pop
fxch
xchg
pop
leave
enter
enter
leave
pop
dec
sbb
adc
leave
stos
dec
or
pop
push
sbb
aas
push
jb
push
ja
xor
inc
xor
inc
xor
sub
mov
lea
mov
lock
push
and
push
ret
scas
push
ret
scas
push
ret
scas
push
test
test
scas
push
cltd
scas
push
leave
scas
push
leave
scas
push
mov
das
push
lock
das
push
xchg
das
push
cmp
push
add
push
add
or
jb
xor
lds
and
inc
repnz
bound
mov
stos
mov
push
adc
popl
push
adc
jb
enter
sbb
fnstsw
dec
bound
mov
and
dec
pop
and
dec
jp
mov
fidivrl
lock
jge
idivl
jg
int
add
test
add
dec
push
jb
jmpw
dec
leave
outsb
pushfw
leave
inc
sahf
out
dec
cld
pop
jmp
add
xchg
adc
aaa
sub
je
call
sub
mov
mov
frstor
addr16
scas
dec
ss
and
out
or
cmp
add
out
push
sub
jno
sub
in
sub
loope
xor
and
push
pop
repnz
shll
sti
or
jbe
jg
add
cli
nop
jmp
fisubrs
jmp
push
or
bound
add
cli
cli
and
lds
push
xor
jnp
roll
sub
jle
inc
xchg
add
in
mov
flds
mov
push
xchg
shlb
dec
cmp
and
pop
lahf
setl
jl
adc
movsl
mov
fld
add
add
sub
loop
jnp
data16
lds
jb
jae
jae
push
and
outsl
push
sbb
sbb
outsl
push
call
xchg
mov
add
aam
mov
xchg
push
lods
in
and
out
imulb
add
test
dec
ret
sti
jmp
push
add
add
add
mov
sub
jnp
push
mov
mov
add
adc
sub
insl
push
call
out
adcl
jp
test
cli
pop
jg
orb
add
inc
inc
fcmovu
pusha
aas
jmp
bound
test
xchg
inc
xchg
jge
push
jg
js
pop
adc
ja
jl
out
dec
add
push
mov
push
and
jb
loop
push
jge
sti
cmp
jb
jge
mov
push
jnp
cmp
mov
add
jle
jnp
jge
jb
cltd
sbb
jmpw
sub
mov
jg
jns
pop
fs
cwtl
test
mov
cmpsl
pusha
push
mov
add
add
add
add
jg
pusha
mov
int
jno
data16
pop
icebp
imul
cmp
mov
push
mov
jmpw
sbb
jne
data16
jno
aas
cld
jno
es
jno
addr16
in
push
or
dec
movsl
jbe
data16
cmp
inc
bswap
sbb
pop
jle
adc
add
jmp
enter
out
scas
mov
push
xorl
mov
lcall
fs
leave
data16
dec
je
cs
jne
inc
test
mov
add
dec
mov
lea
stos
jb
test
add
ljmp
xchg
pop
adc
pusha
mov
js
mov
add
pushf
data16
daa
je
call
gs
mov
jnp
lea
clc
pop
rcll
sub
clc
push
adc
adc
cmc
lret
adc
and
shll
mov
add
mov
jb
adc
sbb
sub
into
ret
jb
push
add
add
add
out
add
sub
fmulp
mov
scas
roll
outsb
movb
jge
icebp
stos
popa
add
xor
add
adc
popa
xchg
imul
lahf
mov
xchg
xor
jb
mov
xchg
outsb
inc
add
jbe
and
inc
dec
arpl
push
stos
fisttpll
add
stos
xchg
xchg
stos
int
daa
popf
fwait
les
adc
js
mov
inc
mov
push
call
mov
cltd
mov
fisubl
sbb
mov
arpl
aad
pop
mov
gs
cmpsl
inc
jb
cmpsl
jbe
cmp
dec
pop
jmp
sub
stos
xor
add
jmpw
fists
ss
xchg
cmp
adcb
jmpw
jmp
ljmp
mov
sub
jo
mov
arpl
bound
push
bound
cmpsb
cmp
loopne
dec
mov
mov
pop
pop
add
in
push
mov
sbb
cs
and
cmpsb
jle
push
nop
pop
jg
clc
add
mov
push
test
inc
mov
fadds
fcmovnb
mov
pusha
xchg
dec
fs
or
lods
pop
push
push
mov
sbb
dec
lods
gs
inc
sub
rorl
cmp
xlat
mov
imul
add
dec
cwtl
add
push
test
pop
lods
cmp
mov
je
or
jge
add
xor
cld
pusha
jecxz
push
xlat
jne
outsb
pop
xchg
mov
jb
sahf
ss
pop
push
aaa
xor
mov
pop
push
out
lret
pop
push
and
pop
push
fwait
jb
push
add
imul
pop
or
cmc
add
jb
dec
outsl
sbb
xor
dec
js
ss
jb
dec
aas
fisubrs
xor
jl
jge
xor
fs
aas
in
adc
repnz
or
jb
inc
call
adc
pushf
dec
mov
lods
leave
out
stc
mov
hlt
add
stc
xor
cltd
add
add
add
add
add
cwtl
xchg
adc
jb
loop
inc
inc
cld
ja,pt
cltd
andb
cmpb
imul
das
jmp
adc
cli
jg
push
pop
push
dec
lods
jno
data16
dec
cmp
or
shrb
adc
and
sbb
scas
outsl
mov
cmp
adc
add
xchg
lds
clc
icebp
dec
or
fdivs
sbb
leave
sbbl
enter
mov
dec
xor
call
outsb
add
dec
add
cwtl
jmp
sbbl
mov
fisttpll
in
xchg
ja
data16
adcl
xchg
mov
push
add
sub
xchg
or
xchg
in
into
add
out
dec
fcomps
lret
pop
mov
or
mov
stos
mov
ret
pop
fsubr
inc
ja
jmp
int3
test
and
ret
bound
and
jl
jl
pop
test
stos
jnp
mov
inc
cld
popf
mov
arpl
repz
cld
jge
rclb
arpl
add
add
add
push
lods
xchg
push
push
jne
fcmovb
add
sarb
jmp
pop
push
and
mov
cmp
xchg
and
cli
xchg
rorb
xchg
or
shlb
add
fistps
fists
or
cs
mov
inc
gs
sbb
add
add
add
ret
mov
push
repnz
adc
testb
add
mov
inc
into
add
sbb
stos
ljmp
jb
sbb
xchg
push
add
std
mov
fs
jno
movsl
jmp
or
push
into
adc
jns
lcall
inc
sbb
jle
add
in
mov
add
jge
pop
mov
addr16
xchg
inc
clc
inc
xchg
fisubl
push
pop
loop
in
jg
xchg
push
jecxz
fbld
out
jmp
mov
pop
push
ret
sti
shl
test
xchg
cmp
add
in
test
std
inc
dec
push
outsl
pushw
mov
jns
jbe
stos
in
hlt
inc
dec
imul
add
add
add
add
mov
fildll
mov
jmp
icebp
lds
test
ss
jmpw
xor
inc
push
mov
xchg
dec
adc
dec
push
dec
xor
fwait
sbb
mov
push
mov
xchg
imul
pop
clc
ljmp
jo
in
push
scas
data16
iret
fs
add
adc
push
dec
push
add
mov
data16
dec
dec
pushf
outsl
xchg
add
cmp
mov
cli
jmp
cmp
and
ret
xchg
pop
rcl
addl
push
push
lds
in
mov
data16
orl
hlt
mulb
pop
push
mov
xchg
in
and
pop
push
out
inc
dec
pop
sub
repz
sub
jb
ds
stos
loope
mov
mov
or
and
jb
cmp
addr16
push
pop
cmovle
stc
ss
jb
and
lea
jmp
stc
pop
mov
add
jecxz
jb
loope
inc
or
xchg
jge
cmc
add
in
mov
jle
jb
lret
add
sub
push
scas
add
sbb
test
fwait
ret
clc
insb
adc
test
fldz
add
filds
push
jle
je
and
scas
mov
sbb
xchg
into
sub
je
lds
testb
sbb
cmp
aaa
xchg
cmp
sbb
xchg
imul
ja
data16
mov
xchg
mov
bound
stc
pusha
push
insb
mov
jb
jl
fidivl
insb
sbb
fucom
popf
mov
dec
fs
mov
clc
add
xor
clc
out
cmpl
push
mov
and
test
fistpll
add
add
add
add
ds
jp
addb
insb
inc
icebp
pop
pop
icebp
jmp
sbb
mov
cs
addb
cltd
mov
xor
dec
aas
cmp
push
in
ss
xchg
inc
cmpsl
mov
cmp
cld
jl
insb
mov
scas
xor
pop
inc
xorl
push
out
cmp
pop
lret
add
mov
and
enter
fimuls
push
lret
cmp
call
adc
into
xchg
xchg
add
jg
jb
push
xchg
add
xlat
push
jb
loope
jb
in
mov
divl
imull
in
dec
xchg
iret
mov
out
xchg
jo
push
adc
add
add
add
scas
fsubrl
push
jnp
and
hlt
mov
shrl
sbb
pusha
inc
jb
jmp
jno
add
mov
cmp
cs
cmpsl
imul
add
add
popf
enter
gs
insl
push
jle
sahf
stos
inc
stos
push
jmp
push
dec
gs
xlat
add
mov
in
xchg
stos
rcl
or
pop
mov
jle
sbb
lea
lds
testl
cmp
add
jge
call
mov
jge
mov
mov
out
xchg
add
aaa
add
jbe
test
dec
jns
cmp
push
sti
add
fs
in
pusha
xchg
cld
push
popa
jp
pop
push
addr16
negb
adc
dec
std
mov
sub
jno
arpl
popa
xchg
inc
pop
or
insb
stos
cmpsl
outsb
cltd
enter
mov
js
jno
cmpsl
xchg
xchg
test
int
lds
lea
dec
ficompl
push
addr16
mov
arpl
and
or
loope
add
push
dec
jle
pop
cwtl
mov
mov
in
inc
das
mov
in
ret
mov
inc
jecxz
mov
data16
mov
pop
jbe
out
mov
lret
xorw
add
jnp
push
faddl
and
data16
jnp
sbb
xlat
movl
xchg
enter
dec
outsl
pushl
test
dec
das
push
push
inc
and
jnp
iret
imul
push
cwtl
xchg
jns
jb
test
out
das
fldcw
jl
data16
test
and
rorl
mov
inc
jb
out
jle
push
cli
in
repnz
ljmp
ffreep
addr16
fwait
mov
dec
insl
push
ja
outsl
push
add
add
add
mov
sbb
xor
mov
sbb
icebp
mov
mov
test
push
das
fstpt
push
out
mov
ret
and
inc
jl
dec
loope
jb
add
inc
mov
jns
xor
jb
sbb
xchg
out
jg
stos
pop
push
jb
xor
dec
addb
outsb
ss
popa
add
dec
xchg
add
sbb
add
or
jb
or
xchg
mov
add
insl
or
adc
jb
ret
popa
or
jb
sbb
jb
or
icebp
leave
jge
mov
mov
add
andb
push
jno
addr16
jbe
imul
jns
sbb
adc
mov
ss
push
dec
cmpsl
fdivp
adc
jno
sub
adc
loop
sbb
ss
pop
xchg
gs
ljmp
movsb
inc
jb
sub
outsb
data16
sub
jmp
push
mov
jmp
outsb
data16
int3
popa
jmp
lret
xchg
call
adc
insb
jmp
loop
or
add
adc
mov
and
ret
sub
sub
dec
nop
or
callw
add
sbb
lods
fnsave
aad
dec
pop
or
out
jl
out
inc
lret
inc
and
scas
out
ja
data16
inc
jecxz
dec
data16
jo
insb
dec
nop
jne
inc
and
mov
add
add
add
add
loope
mov
push
push
jge
mov
xor
sarb
cli
gs
outsb
sbb
test
or
outsl
push
and
outsl
test
mov
aad
sub
jle
decl
jb
neg
xor
out
cli
outsl
push
inc
jg
push
ret
dec
mov
daa
or
daa
xchg
sbb
add
dec
imul
iret
and
daa
push
lods
adc
popf
loop
je
sub
inc
into
jge
hlt
push
or
jb
fwait
xchg
into
jle
jo
xor
push
flds
jb
or
mov
adcb
lcall
inc
enter
hlt
jl
and
lds
inc
outsb
iret
push
jb
gs
jge
mov
xchg
xchg
xchg
jle
xor
js
mov
les
shl
add
inc
push
int
push
andl
in
test
jmpw
dec
std
cld
add
mov
cmp
sbb
test
lds
jge
and
fnsave
dec
inc
roll
add
add
add
add
addr16
inc
data16
cmpsl
inc
insb
pusha
iret
ljmp
test
pusha
cwtl
jmpw
pop
adc
add
xchg
insb
add
int
outsb
push
jb
xchg
pop
dec
dec
dec
push
jbe
inc
scas
daa
add
jl
xchg
std
ja
test
add
inc
scas
jae
iret
jnp
push
add
js
je
stos
sbb
add
mov
addb
loope
jg
data16
add
stc
iret
icebp
sbb
push
mov
je
pop
pop
dec
inc
outsl
lret
add
je
ret
jle
or
je
out
mov
dec
jecxz
sbb
mov
pop
mov
cmp
jb
popf
or
stos
je
add
movsl
xchg
sarl
mulb
mov
icebp
xor
push
mov
gs
add
inc
jne
ljmp
push
rorl
add
das
mov
daa
imul
or
test
outsl
push
jg
outsl
push
add
fwait
mov
sti
jmp
xchg
jb
push
add
adc
xor
jge
inc
cmp
ss
mov
cmp
push
jl
mov
jl
pop
into
sti
in
enter
and
add
dec
je
or
jle
out
jl
ficomps
addb
dec
pop
loopne
outsb
add
cmp
leave
jo
mov
sbb
or
xor
add
sbb
test
jge
imul
jle
dec
clc
pop
inc
cmp
lret
ret
pop
sbb
lds
xchg
jb
movsb
bound
lds
xor
call
jno
cmpsl
mov
cmpsl
cmpsb
repnz
outsl
sub
xor
jb
flds
aam
lret
sub
inc
pusha
or
jno
xchg
jl
cmpl
bound
repz
mov
push
jmp
add
fwait
sub
jmpw
dec
insb
dec
rolb
adc
fldt
int
add
jnp
xchg
xor
lahf
jne
fdivl
xchg
jmp
leave
data16
fsubrl
or
mov
icebp
push
sbb
pop
enter
adc
add
add
add
add
nop
jle
mov
xchg
push
out
jne
jmp
adc
inc
pop
sbb
pop
cmpl
pushw
daa
imul
inc
addr16
push
xchg
push
test
adc
test
es
dec
jmp
aaa
in
pop
jb
js
js
push
je
test
js
pop
js
icebp
sub
add
add
add
stos
push
mov
push
test
sbb
jo
sub
xchg
adc
and
cmovne
aam
sti
jmp
insl
lds
aam
xor
data16
inc
push
inc
mov
and
dec
test
negb
xlat
or
sub
xchg
out
dec
imul
in
jg
add
cltd
js
cld
or
ljmp
sbb
lock
hlt
lods
cmp
mov
lock
cld
jbe
jne
nop
js
lret
sbb
push
add
xchg
mov
sbb
sahf
jae
in
add
daa
lret
hlt
push
std
sbb
jge
into
stos
mov
insb
inc
inc
add
mov
add
add
add
add
push
push
clc
hlt
or
js
mov
data16
mov
mov
jb
imul
xchg
push
push
sbb
repnz
imul
pop
ss
pop
imul
push
xor
xor
data16
aas
bound
sbb
jbe
jno
data16
push
call
xor
fucom
fstl
jo
xchg
in
fnstsw
add
add
add
add
les
jmp
push
les
jmp
jno
arpl
jmpw
cmp
sbb
daa
iret
ficoml
dec
lret
scas
cli
jne
sbb
xor
iret
adc
jmp
pop
stos
gs
jnp
test
int3
sub
sbb
stc
in
mov
mov
stos
data16
inc
pop
xchg
decl
data16
mov
mov
test
inc
str
adc
pop
lcall
inc
xchg
mov
decl
or
pop
fdivr
push
push
and
dec
xor
mov
test
xchg
inc
jb
and
jg
xchg
inc
jb
jecxz
icebp
cmp
rorl
jo
test
jb
adc
ss
jecxz
inc
push
das
mov
test
aas
pop
adcl
inc
add
in
dec
loope
sti
lea
popf
xchg
jns
adc
pushf
into
xchg
outsb
lods
decl
lss
inc
cmp
dec
and
pop
sub
push
fwait
pop
insl
push
jle
add
pop
orl
jg
lods
loope
dec
add
mov
rcrb
scas
lods
aad
jo
hlt
fwait
loope
test
lcall
hlt
xor
mov
jle
xchg
and
mov
push
push
leave
add
cmp
or
ljmp
hlt
popf
sub
or
add
addr16
dec
xchg
out
out
push
cmp
cmp
ja
jbe
lods
aaa
out
cmp
shlb
sbb
incb
sub
xchg
gs
in
sahf
xchg
dec
pop
mov
xor
sbb
cmp
mov
xchg
cmc
mov
movsb
jp
push
jmpw
jg
push
dec
xchg
jno
pushf
sub
imul
xchg
add
out
cmp
and
gs
andl
cmp
and
pushf
cmc
cmp
jmp
jae
xchg
decl
add
les
adc
jle
adc
xor
dec
sbb
xor
test
lea
cmpsl
inc
mov
aam
fwait
lret
sbb
adc
and
inc
sub
ds
sldt
add
add
add
add
addr16
cmp
cmpl
fisttps
adc
call
loop
add
addr16
decb
jo
jb
stos
decl
sub
lea
jns
lea
push
loope
push
mov
icebp
sti
lock
or
je
rcr
xchg
fistpll
jae
xchg
add
es
sub
add
sub
mov
xchg
gs
movsl
push
stos
pop
jb
mov
add
loope
push
dec
add
push
lods
fst
daa
imul
push
mov
pop
pop
test
gs
jp
mov
pop
daa
jl
pop
mov
ds
aas
lret
popa
hlt
mov
adc
clc
add
inc
mov
testl
dec
shrl
pop
push
push
or
or
ljmp
repz
leave
jno
divl
or
cmpsb
mov
jb
ds
in
mov
or
pop
xchg
dec
jle
adc
leave
mov
push
inc
lret
inc
movsl
xchg
mov
dec
int
jo
imul
add
add
add
add
add
sbb
xchg
jne
cmp
testl
repnz
and
insb
push
dec
and
inc
jmp
enter
sbb
jmp
int
and
enter
call
lods
cs
out
rorl
jmp
xchg
dec
call
or
imul
add
add
add
jmp
stc
dec
add
adc
mov
in
test
mov
mov
inc
push
push
xchg
mov
clc
or
or
jg
repnz
nop
je
inc
adc
enter
push
in
xlat
mov
scas
jmp
mov
jmp
xor
pop
jne
xor
jmp
jno
lea
ja
js
call
add
pop
pusha
cmp
push
call
mov
loopne
dec
push
in
jbe
jno
mov
xchg
jecxz
push
ret
xchg
jecxz
pop
xlat
sar
call
jno
cmp
jb
leave
outsb
sti
jmp
jle
sti
cmpsb
ret
sahf
fadds
mov
xchg
jae
jne
xchg
jb
pop
inc
add
cmc
out
xchg
pop
in
lret
add
sbb
add
pop
rcrl
mov
mov
jbe
sbb
mov
cmp
cltd
pop
adc
xchg
add
dec
xchg
push
outsl
sub
dec
dec
sbb
scas
inc
sbb
jge
fisubs
dec
add
mov
push
sbb
dec
inc
pushl
xchg
mov
je
sub
dec
mov
sbbb
jg
jb
jl
mov
or
insl
dec
jg
lock
jb
dec
add
stos
mov
leave
inc
mov
add
popw
pop
shrl
outsb
dec
jp
sahf
mov
jle
arpl
jmpw
push
mov
jb
add
adcb
xchg
jmpw
dec
rorl
cmpsl
jge
inc
and
inc
popa
pop
xchg
jno
lods
push
sbb
in
icebp
dec
adc
aas
mov
into
mov
aaa
sbb
clc
out
insl
cmp
add
leave
cmp
rorb
call
sbb
add
test
ja
aaa
push
push
orl
cmp
scas
lea
lds
xor
ret
lea
push
data16
or
pop
les
pop
push
push
inc
sbb
sbb
data16
repz
and
sarb
subl
lea
jle
add
ret
mov
inc
cltd
je
sbb
fldl
fmuls
inc
xchg
inc
popa
popf
push
mov
loope
jne
jae
data16
push
and
sub
jb
out
insl
repnz
xchg
fiaddl
mov
cwtl
mov
dec
pop
es
sub
in
mov
sub
sbb
cli
add
icebp
and
jb
and
cmp
xchg
jmp
lods
les
ljmp
sub
mov
dec
dec
shll
cmp
or
xchg
mov
pop
jg
mov
popf
inc
ds
jo
cmp
shll
sub
cmc
mov
add
dec
add
out
icebp
lods
push
popf
xor
movsb
pop
inc
movsl
cmovo
inc
inc
adc
jno
push
mov
enter
inc
test
mov
movsb
clc
iret
sub
inc
movsl
adc
hlt
xor
daa
push
lret
jno
loop
mov
cmp
fistps
jno
iret
pop
jno
data16
cs
repz
inc
pop
xchg
sub
fabs
mov
xchg
ss
loop
xchg
cld
inc
es
xor
ficoml
add
sub
aaa
push
ljmp
add
inc
jg
inc
inc
xchg
insb
mov
stc
sub
add
or
data16
call
mov
fwait
pushl
lcall
les
incl
into
cwtl
fs
fildl
or
push
jb
or
ret
push
jp
adc
push
adc
enter
lds
std
xor
jle
popa
fisttpl
shlb
orb
mov
push
shr
adc
arpl
or
or
fsubr
mov
and
sarb
xchg
fmuls
call
add
push
jo
inc
lea
cli
js
clc
jo
xchg
mov
jb
pop
ja
sub
push
add
das
sub
jecxz
icebp
sbb
aas
jb
sub
ljmp
mov
das
xor
xchg
sub
push
mov
inc
jns
jb
repnz
add
sbb
sub
imul
dec
mov
loop
sti
add
fcoms
out
imul
jne
jge
ss
addr16
ss
insl
movb
pop
adc
pop
inc
dec
das
mov
dec
rcll
pop
push
ret
jge
inc
mov
shufps
jg
scas
ret
pop
dec
ds
outsl
xchg
je
adc
mov
aad
add
les
xacquire
pop
mov
jmpw
jg
and
xlat
sub
pop
call
mov
jmp
xor
data16
xor
aaa
or
xchg
adc
lock
xchg
rcll
add
add
add
lods
cmp
loope
lock
jmp
jae
call
sub
daa
or
testb
and
lods
sub
frstor
push
rolb
jmp
cmpsl
fucomp
sbb
leave
jb
and
sub
loopne
outsl
insl
enter
inc
nop
or
inc
addb
or
or
rcll
push
xlat
jns
movb
add
inc
or
subl
ret
push
xor
sahf
sub
jne
xchg
gs
lods
push
mov
daa
pop
jnp
fisttps
aad
add
add
adcb
addr16
jbe
pop
cltd
aaa
xchg
push
rcr
xor
clc
dec
pop
mov
sub
clc
gs
insb
das
xor
pop
xchg
inc
push
add
add
add
cmpsl
sbb
adcb
xchg
movsl
push
call
fwait
ljmp
jae
push
outsl
sub
jle
sti
jmp
jle
jae
push
add
test
push
fdivrl
dec
fiaddl
cs
sub
lret
pop
inc
mov
gs
ret
jne
in
add
jecxz
mov
jmp
mov
push
scas
int
cmpb
insl
cwtl
xor
imul
in
jb
jge
or
mov
cmp
xor
sbb
jmp
mov
ret
aad
push
lds
dec
jne
divb
jp
in
push
divb
outsl
inc
adc
jp
mov
cmp
or
add
add
add
mov
pushf
jp
lods
jle
test
sahf
lret
mov
inc
dec
divl
jmpw
outsw
or
dec
dec
loope
push
add
sbb
cmp
sbb
repnz
lahf
jmp
dec
inc
test
dec
mov
sub
fldt
pushf
shrl
mov
xor
popf
fidivrs
push
es
adc
xchg
sahf
add
dec
shll
data16
cmp
adc
rcr
mov
imul
stc
hlt
push
fs
add
cmpsl
je
pop
fs
mov
sub
xor
adc
push
mov
cmpsl
je
pop
jo
xchg
add
push
and
push
les
mov
data16
and
dec
sub
leave
lea
mov
es
mov
inc
jne
ficompl
mov
and
inc
rcrb
lea
lcall
mov
mov
and
pop
adc
mov
sbb
pushf
add
ret
jb
push
ret
jb
out
xchg
jae
adc
add
loope
or
loopne
add
sub
sti
gs
stos
adc
sub
testl
icebp
xchg
jecxz
pusha
sti
jge
cmpsb
and
testb
ficoml
jle
sbb
push
cltd
cmp
inc
ss
jmp
jo
push
mov
aas
add
fidivl
popa
dec
xor
pop
inc
sub
nop
cmpsl
in
push
mov
dec
fldl
push
mov
push
addl
jge
rorl
daa
les
jg
sbb
or
add
mov
push
jae
jns
les
jge
xchg
mov
sbb
cltd
sti
or
add
xchg
and
iret
cs
push
addr16
add
ja
xchg
sub
jmp
add
adc
add
adc
add
push
inc
mov
mov
dec
add
and
outsb
xchg
and
sub
or
jb
adc
mov
cmp
xchg
xchg
aam
jns
es
ss
cmpsl
sbb
loop
fistpll
xor
inc
pop
sbb
ret
pop
outsl
cs
add
rorb
push
ss
fidivrs
push
inc
cmp
xchg
jmp
jns
inc
pop
mov
and
jae
and
jl
xchg
test
dec
jno
add
int3
ss
jbe
or
dec
nop
incl
gs
or
mov
add
jne
into
jns
test
xchg
leave
or
in
jb
jnp
inc
icebp
aad
pushf
fdiv
add
gs
adc
clc
mov
enter
je
stos
aam
and
inc
push
sub
jb
test
subl
xorl
out
add
cmpsb
mov
xor
sub
cli
jg
cltd
aas
jb
and
mov
push
cmp
inc
cld
les
fdivrl
dec
pop
int
icebp
in
test
xor
cwtl
aas
jb
sub
sbb
mov
aaa
std
icebp
xor
cmp
decl
stc
mov
pop
aaa
jl
add
add
push
xchg
ret
gs
ds
jl
lock
subb
mov
sarl
inc
mov
aam
add
dec
xorl
mov
push
bound
dec
shll
dec
stos
mov
xchg
xor
fstl
xchg
sub
shlb
mulb
xor
ljmp
add
add
jno
data16
mov
aaa
cmp
mov
xchg
es
je
inc
mov
jb
cmp
and
stos
cmp
bound
jmp
in
loope
jne
xchg
mov
cwtl
add
jne
mov
inc
xchg
jbe
jno
cmpsl
xchg
cmp
pop
push
and
jbe
jno
cmpsl
jge
dec
addr16
imulb
outsl
clc
xchg
cld
mov
es
mov
lret
fists
dec
add
mov
jle
or
inc
pushf
mov
scas
rcrl
xchg
mov
jns
gs
lret
dec
or
dec
mov
je
push
mov
lcall
add
dec
mov
je
mov
add
add
add
add
dec
xchg
ljmp
cmpsb
jne
pop
aam
dec
inc
adc
sbb
sti
rclb
in
mov
mov
pop
mov
cmp
loop
or
jl
sbb
sbb
ret
dec
mov
pop
out
jle
aam
push
jmp
add
shll
or
bnd
xchg
jne
push
push
jge
mov
out
mov
movl
add
add
lds
push
scas
in
xlat
push
dec
adc
mov
adc
imul
sbb
cli
cmpsb
add
cli
jg
test
jb
push
or
adc
push
xchg
mov
push
inc
jb
aam
pop
ljmp
jp
xorb
xchg
jnp
inc
or
imul
pop
aaa
mov
sbb
add
cmc
xchg
push
insl
in
cld
insl
jle
add
cwtl
into
imul
add
push
mov
insl
dec
cmpb
adc
cwtl
pop
add
push
push
push
cs
outsb
in
pop
dec
jle
cmc
or
int3
xlat
sarl
xchg
lcallw
mov
fnsave
jo
jp
xor
fbstp
add
xor
mov
es
outsb
adcl
sbb
in
jbe
xchg
lahf
in
loopne
pop
fucompp
test
jno
jmp
jmp
cmp
mov
sub
cmpsb
or
lods
sub
add
xchg
add
ret
add
dec
test
mov
sub
lcall
les
jge
jbe
push
lret
shlb
leave
dec
mov
lret
xchg
aaa
push
je
sub
sub
xchg
aaa
push
les
push
push
lret
adc
pop
or
pop
adc
inc
iret
je
out
xor
lods
or
je
rorb
add
add
add
rolb
and
inc
dec
adc
mov
jp
jb
cmp
xchg
inc
jb
xor
jg
pop
stos
adc
jecxz
mov
xchg
push
pop
daa
cmp
pop
addr16
negl
or
js
movsb
pusha
fildll
das
imul
outsb
pop
cmp
outsl
jno
push
sti
test
aaa
sti
add
jnp
jb
in
sti
insb
xchg
push
ret
mov
mov
fiaddl
push
jb
andb
xchg
xchg
mov
mov
push
jp
sbb
mov
jb
add
or
rol
sub
mov
inc
mov
nop
out
jbe
fcomps
ds
xor
fisttpll
add
or
and
xchg
out
bound
js
jnp
xor
push
pop
enter
inc
dec
adc
cs
add
addr16
cmp
pop
xchg
es
sub
movsb
sbb
scas
jmpw
xor
in
inc
addr16
jae
xchg
cmp
pop
inc
in
outsb
inc
ljmp
lds
and
divb
out
popa
scas
mov
jbe
data16
cli
pop
xchg
xchg
pushf
jle
insb
out
data16
jbe
outsb
jle
jmp
data16
test
mov
ss
jp
jns
jno
stos
add
cmpsb
push
sub
jle
push
xor
loope
stos
das
xchg
incl
xchg
push
std
test
jne
add
in
lret
arpl
xchg
incl
mov
jmp
cmp
mov
sub
jns
cs
sbb
add
cmp
insl
sub
stos
mov
mov
inc
mov
sbb
jecxz
data16
dec
arpl
pushf
vmovss
adc
leave
xchg
xchg
add
push
lss
xor
and
push
or
sbb
add
or
jle
sub
icebp
loop
sti
addr16
jbe
jb
fimull
ss
add
pop
ja
jb
pop
cmp
mov
bound
pop
inc
fs
mov
bound
pop
inc
insb
fldt
add
bound
pop
sub
jecxz
mov
bound
push
dec
imul
cld
data16
scas
inc
jb
sti
mov
sub
or
mov
cmp
fwait
in
jne
pop
sub
scas
dec
into
push
or
movsl
adc
inc
push
movsl
xchg
rcr
inc
aas
shlb
xchg
push
inc
xchg
into
push
dec
mov
jbe
add
enter
ret
jns
out
or
jge
addl
push
push
dec
shlb
add
xor
xchg
in
jno
mov
xor
bound
xor
mov
gs
gs
rolb
bound
call
add
add
add
add
pop
lods
jno
adc
jno
lds
mov
addb
das
xchg
hlt
xor
mov
jno
aam
shr
xchg
inc
lds
in
jmp
aam
xlat
call
add
xchg
dec
mov
add
push
int3
pop
xchg
add
add
dec
cmp
sbb
and
add
insb
mov
or
jle
jge
xchg
mov
xchg
seta
add
jo
dec
sbb
adc
lret
mov
mov
jbe
or
imul
push
ret
fwait
lds
ffreep
data16
stc
lea
loop
out
inc
pop
test
mov
and
jb
stos
xchg
dec
adc
scas
jb
push
inc
jb
mov
sbbl
jb
xchg
xor
jb
push
inc
jb
push
aaa
mov
cmpl
stos
arpl
dec
pop
aaa
xor
subl
xchg
xor
into
jecxz
fisubrs
dec
movsb
pop
call
add
add
add
lds
lea
xchg
inc
jb
stos
cmp
xabort
cmc
ljmp
scas
test
test
dec
jo
xchg
in
mov
ss
sarb
inc
jb
arpl
jb
xchg
pop
js
in
jmp
and
xchg
je
rcll
in
mov
add
add
add
in
andb
sbb
lea
in
cmc
idivb
cmp
push
daa
and
lcall
push
into
jge
mov
push
sub
jmp
push
out
jp
imul
sub
jne
sti
insl
mov
shll
mov
jne
movb
mov
dec
pop
mov
cmp
add
sbb
mov
in
pop
mov
sub
sub
sub
sub
cld
je
mov
xor
fs
rcrl
mov
xlat
inc
test
push
test
inc
test
test
add
xchg
push
dec
ret
sahf
push
fs
pop
xor
movsb
aad
jmp
aas
sarl
incl
pop
sub
fsubs
pop
mov
mov
jne
or
adc
sub
or
call
nop
sbb
and
sub
fldenv
shl
and
push
pushf
dec
orb
add
xorl
dec
sti
push
lret
jp
les
lcall
add
add
stc
aas
adc
add
xor
xor
jle
testb
cli
dec
mov
je
xchg
cli
cmp
cmp
icebp
bound
sarl
add
mov
cltd
xorl
aas
xchg
insb
inc
jb
cli
data16
sti
jg
js
jb
add
pop
mov
in
add
add
add
add
movsb
push
ds
add
add
xorb
jnp
push
pop
mov
push
pop
int
push
cmc
pop
out
inc
jb
push
jmp
mov
xchg
sbb
rorl
mov
add
pop
fwait
adcl
mov
mov
or
push
dec
dec
sub
pop
sarb
popf
adc
fs
add
add
add
add
aam
add
mov
data16
fidivrs
xor
in
das
inc
cmp
js
pop
lcall
sbb
test
cli
mov
lds
mov
jl
repz
xor
sub
lahf
and
arpl
or
lods
jbe
push
lcall
cmp
fucomip
mov
jno
loope
mov
fmull
mov
stos
ljmp
mov
es
lret
jmp
mov
pop
mov
ficomps
je
dec
mov
mov
mov
data16
mov
jo
fwait
jmp
ja
inc
rclb
mov
dec
inc
sbb
adc
js
add
dec
aam
jnp
addr16
ret
adc
add
lea
and
jge
call
mov
adc
lcall
dec
xorl
inc
jb
sbb
jmp
push
push
jb
sub
icebp
jno
push
int
ds
dec
int
mov
call
sahf
pop
add
punpckhbw
jb
cmp
jb
mov
or
jmp
mov
jbe
jne
test
mov
std
incl
subb
stos
xchg
je
sbb
cmp
call
jl
sub
out
inc
push
das
inc
jecxz
imul
mov
jge
mov
les
loop
xchg
jl
dec
xchg
ja
mov
repnz
jbe
sbb
aad
fyl2x
enter
movsl
sub
mov
jb
jge
cs
ret
es
out
or
ljmp
jb
push
inc
xchg
mov
or
bnd
jmp
popa
and
mov
or
inc
dec
ljmp
lods
and
in
add
push
pop
subl
add
add
test
pushfw
mov
mov
cmpsl
xchg
inc
lahf
adc
or
pop
fstpt
lds
add
xor
jmp
inc
orl
ret
mov
loope
scas
jle
cld
pop
xchg
insb
mov
bound
cmp
xor
jmp
xchg
push
xlat
and
fmuls
int
jmpw
cmp
adc
jno
movsb
push
add
cwtl
jmpw
dec
stc
ljmp
add
pushf
aas
inc
sbb
inc
test
sub
lret
das
jnp
incb
loope
mov
push
mov
in
push
or
adc
movl
dec
lods
leave
or
test
sbb
inc
into
loope
scas
jb
inc
out
adc
jge
sub
add
pop
pusha
data16
or
inc
adc
loope
idivb
inc
dec
jp
adc
cmp
add
std
iret
cmpsb
sub
xchg
fs
ds
cmp
icebp
lods
les
gs
add
imul
cli
dec
cmpsb
sub
icebp
insl
je
lods
out
or
mul
cmp
cmpsb
cs
adc
inc
pop
cmpb
jge
cmpsl
mov
xlat
push
repnz
pusha
or
cmp
cmp
ret
mov
add
loope
call
dec
push
xchg
xchg
js
loop
push
cmc
into
xor
jns
push
jbe
xor
pop
sbb
add
inc
dec
add
and
mov
inc
push
repnz
push
shl
mov
test
int3
repz
mov
lret
ja
mov
push
mov
jnp
inc
js
dec
cmpsb
pop
pop
mov
add
push
jnp
jge
xlat
gs
push
mov
outsl
fdivrl
and
xchg
push
jle
sub
cmp
inc
sbbl
add
add
jo
data16
stos
xchg
pop
xchg
lcall
call
std
jbe
in
inc
movsl
add
cli
xchg
push
cmc
pop
fs
and
jmpw
loope
frstor
ss
mov
sub
stos
in
pop
fs
lds
inc
shl
mov
ss
arpl
stos
in
repnz
fs
pop
lds
in
enter
stos
dec
add
sub
jp
inc
push
shlb
insl
mov
pop
call
push
sahf
sub
or
jnp
xchg
adc
lret
xor
das
xchg
add
lea
nop
ljmp
push
das
or
test
push
cs
push
dec
das
mov
das
das
xchg
sbbb
xchg
push
pop
mov
add
mov
jmp
push
js
lea
and
jb
orl
aaa
push
push
xchg
nop
mov
call
mulb
jo
push
arpl
or
mov
sahf
push
je
xor
adc
jb
push
mov
inc
xchg
nop
xchg
mov
add
add
add
add
jle
int3
sub
cmpb
push
out
xchg
push
jb
aaa
xchg
jae
stc
addb
jb
sbb
and
xchg
jb
jge
mov
dec
fdivrl
in
jmp
aad
bound
in
outsl
fimull
sti
push
ret
push
cmp
jp
push
xchg
jb
jge
or
jbe
neg
inc
jmp
adc
inc
jo,pt
dec
xor
jmp
and
cmc
rorb
sbb
dec
push
jnp
jge
adc
ds
dec
jg
es
or
and
data16
cmp
jmp
and
jle,pn
xor
sub
jmp
cmp
pop
xchg
jmp
add
add
lahf
loope
push
mov
adc
sbb
loope
jge
xchg
idivl
push
mov
sbb
fs
jo
gs
popa
aas
and
loope
cs
das
mov
dec
and
leave
pop
aaa
cwtl
aam
pop
test
mov
data16
cmp
and
mov
add
int3
mov
xchg
mov
mov
cwtl
mov
add
add
pop
jnp
cmp
lahf
je
pushf
sub
ljmp
dec
ficompl
hlt
out
pop
jnp
sub
add
test
jp
push
xchg
cmp
add
dec
out
jae
fistpl
jnp
mov
mov
mov
inc
xchg
je
jl
mov
add
inc
sbb
mov
jecxz
jb
and
add
sub
test
mov
mov
jae
test
xchg
imul
test
jmp
or
jnp
dec
lahf
pop
pop
xlat
lds
cmpsl
jae
xchg
push
and
ja
fimuls
imul
cmovae
cmp
add
imul
cmp
rcrb
cli
stc
unpcklps
inc
sub
inc
ljmp
dec
mull
in
mov
addr16
ljmp
cmc
add
cmpsl
dec
adc
pop
in
push
xchg
jno
inc
inc
adc
add
clc
add
jge
push
testl
test
xor
add
ret
xchg
jb
jge
or
loop
or
fdivl
test
add
or
inc
xchg
jno
sarb
add
adcb
sbb
loop
pop
inc
scas
leave
test
movsl
pop
scas
ss
in
xchg
cmp
xor
xchg
sete
lods
jb
cmp
adc
and
loope
dec
mov
add
add
add
add
scas
insb
sub
push
bound
or
and
pop
jo
pop
bound
orl
push
jb
lods
add
push
rcr
je
sbb
dec
loope
cmp
pop
xchg
fs
lcall
jle
insl
mov
cmpsb
sub
test
xchg
call
movl
add
add
cwtl
in
and
bound
mov
pop
or
outsl
ret
cmp
cmpsb
dec
adc
and
pop
pop
mov
int
in
inc
aaa
pop
call
shlb
das
sbb
xor
rorb
add
adc
jmp
add
sbb
mov
jmp
and
add
cmp
inc
jb
in
ficomps
jp
jb
push
xchg
in
out
pop
cmp
stc
call
mov
cmpsl
pop
and
pop
push
enter
mov
in
pop
aas
cmpsb
stc
inc
movsb
cmpsl
je
movsb
mov
insb
cmc
push
subb
mov
pop
dec
xchg
das
in
add
push
mov
mov
jns
lret
loope
dec
ds
popf
cmp
adc
movq
adc
xor
lcall
xchg
adc
hlt
adcl
js
mov
in
push
lcall
sub
add
sbbb
outsb
aas
iret
xchg
add
jmp
daa
jbe
out
xorb
mov
fwait
jge
xchg
lret
dec
lock
adc
fidivrs
icebp
jno
popf
xchg
jns
cmpsb
mov
sbb
and
pop
leave
negb
adc
mov
in
outsl
sub
jno
jmpw
call
mov
fwait
jo
ss
mov
add
add
add
add
cmp
test
jp
popa
shlb
xor
cmpsb
xchg
ja
pushw
mov
loopne
mov
cmp
and
sub
lock
in
push
lret
stos
add
add
pop
popa
inc
fcmovne
adc
push
adc
les
call
dec
add
adc
jp
add
data16
ficomps
pop
out
jp
stos
andl
cmp
push
adc
in
inc
arpl
je
inc
push
add
ja
jge
adc
fdivs
data16
std
out
jp
sub
jmp
jb
pop
xchg
pop
loope
jp
and
insl
sti
std
xlat
fidivrs
fldenv
jns
outsb
in
sarb
jge
inc
xchg
and
test
jb
addl
jb
pop
dec
inc
int
xor
sbb
jecxz
mov
sti
push
mov
jp
jge
jg
cwtl
aas
jb
mov
out
cwtl
popa
das
and
dec
or
cmc
loopne
push
stc
add
jo
dec
or
add
add
add
add
daa
or
or
cmpb
jae
push
pop
inc
mov
dec
or
xor
ja
xor
inc
test
jmp
inc
ret
int3
lds
pop
scas
and
sahf
dec
aaa
or
imul
inc
loopne
or
fcoml
or
jge
cmp
mov
add
jg
cmp
jmp
je
loopnew
sbbl
jno
popf
sub
cmp
mov
je
adc
cmp
push
ss
cmp
xor
cmp
sete
cwtl
js
xchg
and
fldenv
cmpsl
jge
pop
data16
scas
je
adc
mov
outsb
das
mov
add
add
add
dec
ja
cmpsl
mov
jo
fistpll
mov
sbb
dec
cmpsb
sbb
jno
lods
das
xor
data16
add
data16
pop
xchg
inc
jae
addr16
in
xchg
cmpl
xchg
mov
sar
inc
xor
jle
hlt
jmp
push
fwait
leave
rorl
mov
add
addr16
mov
cmp
or
adc
jg
and
enter
cmpb
inc
push
add
nop
call
add
add
pop
lea
loop
ss
and
jns
sub
sbb
clc
pushl
push
push
mov
insb
mov
jns
mov
lods
pop
push
mov
add
cwtl
sub
gs
and
fisttps
xor
mov
outsb
int3
mov
jp
leave
jmp
push
and
xchg
sbb
or
cmpl
repz
push
mov
rcrb
adc
push
jne
inc
or
dec
adc
jge
lret
add
dec
xor
shrl
orl
xchg
rcrl
mov
jb
sbb
mov
cmp
jge
add
mov
jb
or
dec
add
add
outsl
mov
jb
add
cmp
add
mov
out
jge
in
jae
out
sbb
or
pop
add
cmp
mov
dec
push
add
add
jmpw
data16
push
loopne
jb
sub
outsb
or
adcb
dec
sbb
mov
lods
mov
xlat
sbb
and
sub
xchg
inc
jge
sbb
pop
push
sub
xor
mov
push
adc
bound
inc
mov
xor
loope
xchg
cmp
pop
jbe
data16
gs
addr16
sbb
add
jge
jo
bound
filds
pop
adc
sbb
mov
jmp
xor
mov
dec
sub
xchg
mov
jmp
mov
bound
or
scas
mov
bound
or
mov
rcrl
dec
pop
push
dec
add
jecxz
or
dec
inc
add
test
xor
push
sbb
sbb
sbb
sbb
adc
cmp
adc
cmp
mov
adc
iret
adc
dec
adc
clc
pushl
pop
incl
xor
aas
jb
and
call
negl
push
mov
xchg
cmp
call
negb
icebp
mov
pop
add
add
add
add
push
fs
bound
or
pop
insb
sti
gs
jg
mov
xor
mov
sbb
out
gs
fwait
cli
lods
psubsw
push
cmp
lds
xor
mov
and
fdivp
jge
imul
sub
jmp
ret
scas
ret
dec
cli
pop
mov
pop
lcall
lods
push
pop
and
int
test
in
es
add
jae
push
jle
cmp
add
mov
xor
cli
movsb
mov
test
testl
and
pop
out
mov
add
jbe
ljmpw
pop
fisubrs
xchg
dec
cmc
leave
jbe
data16
add
add
add
add
pop
xor
jmp
bound
dec
loope
jp
jb
in
jge
jbe
fildll
dec
xchg
jb
fisubrl
jmp
jno
in
outsb
push
mov
xchg
push
in
mov
addl
mov
ss
xor
mov
dec
and
loope
jle
xchg
bound
stos
outsb
bound
into
in
xchg
add
xchg
mov
in
test
cmp
push
mov
test
add
or
inc
adc
push
dec
lret
mov
cmp
cmpsl
cmpsb
jb
or
xchg
cld
loopne
dec
sbb
sbb
and
mov
adc
dec
mov
sbb
cmpsl
pop
ds
adc
or
adc
dec
jnp
push
sbb
mov
shl
cmp
repz
subb
orb
pop
cs
jb
push
mov
jo
div
shll
lret
add
inc
mov
rcrl
cli
stc
mov
ret
or
mov
push
and
fnsave
out
test
and
xlat
push
stc
mov
add
sub
js
enter
jb
cmp
sub
callw
mov
imull
sub
inc
pop
cli
cmc
ja
test
cmp
ja
addr16
jb
cmp
xchg
fisubl
xor
sbb
test
ds
push
inc
xchg
add
cmpsb
js
ss
dec
add
cmp
inc
jb
mov
jno
jge
loope
nop
mov
adc
dec
push
add
push
shll
nop
inc
jb
jae
cmp
cmp
cmpsb
ficoml
addb
lcall
jl
rol
stos
insl
jg
dec
sub
out
xchg
loop
add
jle
mov
aas
and
addr16
or
jmp
push
movsl
jno
jle
sar
xchg
push
frstor
fisubs
add
addr16
mov
xchg
jmp
jbe
data16
fisubl
xchg
jne
fisubl
jno
fiaddl
and
xchg
fisubl
test
jno
fists
fisubl
jno
rorl
ds
xchg
aas
jg
jmp
add
les
dec
scas
pop
add
les
add
xchg
fildl
cmovg
mov
lcall
sbb
inc
mov
cvtps2pi
pop
into
nop
call
mov
push
add
data16
add
jno
pop
jnp
dec
test
jg
jp
push
test
setge
and
sbb
add
das
in
ljmp
sbb
pop
inc
jb
sub
out
dec
sbb
mov
lods
ja
aas
jb
sub
in
add
pushf
jmp
push
xchg
or
ljmp
out
sub
daa
cmp
sub
bound
cmpsb
jge
out
dec
icebp
push
sti
mov
in
add
mov
and
in
push
dec
add
mov
fidivrs
repnz
addr16
das
and
cmpb
sub
and
or
rcl
mov
cwtl
push
fiaddl
sub
jge
fsts
or
push
subb
jb
fstpt
je
sbb
inc
vhsubps
in
jge
mov
jg
jb
cli
jp
out
inc
jb
mov
add
test
adc
ret
push
or
ror
add
cmp
mov
je
jmp
data16
cmp
jo
data16
mov
jns
jno
cmpsl
sarb
mov
rcr
out
dec
inc
cmpsl
mov
inc
mov
lea
in
jmp
gs
add
add
add
xchg
xchg
jne
and
test
xchg
or
aaa
mov
sub
jp
cmp
cmpsl
cmp
jo
data16
sbb
inc
xchg
push
ljmp
mov
adc
xor
dec
sub
aaa
icebp
and
jl
data16
out
nop
mov
fstl
outsl
enter
or
and
out
data16
dec
bswap
xchg
imul
inc
add
pop
mov
test
leave
enter
enter
cmpsb
jmp
jl
les
lods
or
and
mov
incl
sbb
jnp
dec
mov
inc
mov
testb
popa
inc
adc
sti
daa
jb
test
jb
shlb
push
push
jae
jo
and
in
and
or
mov
add
hlt
push
push
in
repnz
xor
scas
adc
inc
icebp
movsl
mov
ret
pop
insl
and
test
jns
jle
add
jecxz
jae
loope
push
test
pop
rdmsr
in
mov
and
daa
add
push
das
add
push
push
or
xlat
sti
mov
push
jno
mov
push
test
hlt
mov
andb
mov
push
xor
jmp
jge
adc
lock
hlt
cld
mov
sub
adc
jg
enter
testb
xchg
lods
cli
jge
test
lret
cwtl
in
xchg
jb
or
inc
repz
mov
jge
repnz
mov
inc
cld
decb
xchg
scas
pushf
inc
mov
inc
jbe
test
jbe
push
jno
lahf
sub
sbb
popa
dec
and
sub
std
mov
adc
push
dec
lods
sub
mulb
jno
sbb
mov
cli
jle
lret
call
add
add
add
mov
dec
xchg
mov
jmp
mov
mov
xchg
adc
inc
movsl
add
jmpw
loop
stos
loope
hlt
cmp
sarb
out
xchg
std
adc
cmpsb
add
sub
add
pop
mov
popf
ret
fldl
sbb
lahf
lds
js
jmp
cwtl
mov
add
mov
mov
adc
xchg
call
dec
cmpl
push
mov
and
sti
mov
cli
movsb
push
xchg
mov
es
xchg
or
sbb
or
cmp
push
cmp
jecxz
jb
lahf
jle
sbb
cmp
mov
xchg
das
lahf
xchg
add
add
add
add
imulb
jle
in
pop
leave
es
add
adc
repz
mov
or
iret
push
xchg
jb
in
cwtl
sahf
mov
lcall
jb
ljmp
test
fidivrs
xor
and
push
inc
cmp
xlat
inc
pop
lahf
adc
sbb
sbb
inc
movsb
xor
add
std
cltd
dec
xchg
mov
pop
sti
mov
out
add
sbb
xchg
aas
jb
int3
fcoml
add
mov
adc
mov
jge
imul
sbb
or
inc
stos
jno
jnp
xchg
shrl
mov
inc
sub
bnd
lock
into
repz
mov
int
jno
imul
sbb
add
push
mov
add
inc
ds
push
jle
jb
movsl
fisubrs
jge
jmpw
into
fnsave
bound
mov
pop
jge
jbe
push
test
xor
sbb
sbb
inc
and
add
out
add
icebp
ljmp
rcr
leave
xchg
jmp
add
add
add
movsl
inc
je
jmpw
fnsave
repz
loope
mov
xor
bound
mov
bound
and
and
lret
mov
in
iret
mov
inc
jle
pop
leave
loope
ja
movsl
add
sbb
pop
lahf
jmp
outsb
or
jbe
jg
testl
cmp
fs
call
xorb
and
jne
ja
jnp
and
outsl
pop
and
adc
rcr
addl
enter
cmpsb
jle
and
xlat
aam
push
push
mov
aas
pop
xor
test
adc
jne
sbb
xchg
in
scas
sub
sbb
xorl
adc
add
lea
out
inc
stos
cli
negb
addr16
mov
stc
stc
sbb
repnz
xchg
cwtl
xchg
jae
hlt
insb
push
lret
scas
inc
dec
frstor
mov
cld
adc
rcrl
jmp
jp
les
stos
lea
ficompl
ficoms
add
add
add
mov
sbb
jge
pushf
jp
xchg
mov
xor
imul
aam
sbb
dec
add
cmp
cmp
fdivp
jne
repz
jp
adc
add
mov
outsl
jle
add
sub
lods
mov
jge
out
push
mov
cmc
ret
and
mov
jb
data16
sti
dec
lods
mov
das
jb
xchg
cmpsl
mov
fsubp
or
insl
pushw
jmpw
cmp
xchg
fisttpll
pop
arpl
jmpw
mov
xor
sarl
inc
xchg
mov
pusha
dec
or
jno
loope
sbb
jle
mov
xchg
xor
data16
mov
jb
add
pop
xchg
outsb
out
dec
add
xor
adc
pushl
shll
add
mov
nop
call
dec
sbb
mov
xor
ljmp
jmp
pop
call
syscall
popa
test
data16
mov
pushw
xchg
pushl
sbb
incb
aam
iret
adc
add
add
add
push
pop
fidivrs
or
add
mov
jl
push
call
add
lds
jge
lds
sbb
mov
sbb
pop
push
jae
xchg
es
lds
or
xchg
push
jb
mov
subl
out
pop
cmpsb
cli
out
sahf
jne
lock
icebp
jno
add
push
cmpsl
je
dec
inc
data16
add
add
add
add
aaa
rorb
cmpsl
xorl
inc
lea
push
jae
inc
xor
dec
xchg
mov
sar
sub
and
add
aas
push
add
jmp
cmp
add
dec
dec
cmp
call
call
lds
out
push
iret
out
jge
jb
mov
add
subb
jle
rolb
add
add
add
add
push
add
add
push
jge
fldt
daa
jb
or
push
shll
jb
mov
popa
adc
jge
cmc
loope
mov
inc
inc
jl
cwtl
je
mov
daa
add
push
or
push
bound
cmp
jge
rol
nop
cmp
fstpl
lret
fistps
jmp
sbb
jge
xchg
mov
es
jnp
xchg
mov
lahf
mov
xchg
jae
jle
mov
xchg
arpl
jmpw
loopne
sbb
test
jno
lock
push
ljmp
or
out
loope
xor
mov
test
fadds
sub
add
add
add
bound
add
adc
dec
mov
cs
inc
mov
hlt
inc
mov
push
push
in
dec
shrl
adc
dec
xchg
decl
mov
sbb
data16
popf
ret
out
addb
inc
adcb
lcall
iret
nop
inc
add
and
cmp
mov
dec
test
mov
sub
jmp
aaa
ret
fstl
jns
push
sub
pop
add
adc
jb
out
cmp
fisubs
stc
mov
lock
fdivr
movsl
ficomps
out
popa
sar
xchg
sarl
dec
sbb
in
add
jmp
jns
rorb
or
mov
in
mov
pop
or
cli
dec
insw
cli
dec
bound
xchg
cmp
sar
jmp
sbb
xorl
jno
cmc
xchg
mov
idivb
or
in
mov
out
adc
rolb
mov
inc
std
inc
or
jg
jb
ficoml
aas
inc
stos
add
stc
push
mov
dec
repz
orb
mov
jo
subl
fistpll
test
add
pushf
ror
push
out
mov
mov
aaa
ljmp
xor
sahf
insl
push
mov
jmpw
loope
adc
popf
xchg
xlat
bound
cld
bnd
test
add
cmp
roll
subl
sbb
xchg
add
and
jns
bound
cmp
xor
mov
jmp
testb
jmp
cmpsl
pushl
ja
jno
sbb
movsl
cmp
and
sub
out
mov
add
pusha
inc
dec
bound
add
ljmp
ret
sbb
xchg
pop
ret
pop
cmp
add
test
pusha
mov
inc
test
mov
adc
sub
mov
nop
cmp
cmp
je
cmp
sub
mov
aas
or
jmp
add
add
add
fistpll
cmp
xor
mov
add
mov
add
cmp
mov
lahf
push
popf
loope
xor
fistpll
xchg
dec
inc
jb
mov
push
inc
xor
push
stc
adc
xchg
unpckhps
arpl
add
ljmp
jae
addr16
mov
call
stc
and
pop
lahf
jae
push
xchg
je
arpl
and
xor
jge
fiadds
js
xchg
je
cmpl
mov
jb
and
sub
jne
jge
push
popl
cmp
jle
mov
jge
cmp
test
das
add
scas
jbe
lea
data16
mov
nop
fsubl
jg
mov
ret
jle
jb
dec
or
or
add
pop
inc
xchg
lret
sbb
addr16
in
lods
sub
dec
inc
test
mov
push
mov
cmp
jmpw
sbb
jmp
daa
fisubs
push
mov
xchg
adc
mov
xchg
faddl
es
call
mov
out
ja
push
in
out
bound
fldl
stc
push
loopne
mov
cmp
bound
xchg
mov
insb
mov
mov
repnz
xor
pop
dec
lret
jg
data16
sbb
push
add
or
adc
xchg
mov
xor
pop
sbb
jmp
xor
rcrl
jg
pop
fxch
mov
xor
and
jnp
inc
iret
js
pop
mov
aaa
mov
add
ljmp
dec
pop
xlat
mov
inc
dec
or
or
add
xor
adc
ret
ja
add
mov
out
mov
add
add
add
sbb
sti
pop
add
fdivl
push
jmp
out
xchg
pop
pop
jb
cmp
xor
pop
mov
jg
bound
jb
inc
push
or
je
inc
mov
hlt
dec
adc
addr16
mov
and
outsl
add
fnstenv
inc
adc
dec
inc
icebp
xchg
je
inc
fistpll
out
lds
push
inc
lods
inc
js
mov
adc
xchg
sbb
jge
adc
cld
test
dec
ds
push
cltd
mov
add
jns
daa
mov
lods
push
push
mov
add
vcomiss
or
sbb
pop
sbb
mov
push
idivb
rorl
jne
jecxz
addl
add
add
add
add
lods
add
inc
mov
aad
sbb
jge
int
or
std
or
jge
inc
stos
jne
mov
insw
add
xchg
jmp
jbe
test
jmp
test
push
push
jmp
push
pushf
test
imul
aaa
into
pop
lret
jbe
and
add
add
add
fs
in
lds
cmpsb
imul
sub
sub
sbb
iret
add
and
dec
sar
xchg
outsb
and
frstor
insb
pop
enter
and
jns
pop
xchg
sbb
pusha
mov
ljmp
ljmp
push
mov
jmp
and
cmp
mov
das
pop
add
or
add
pusha
das
and
sub
into
adc
adc
data16
sbb
andw
add
in
inc
aas
shr
rclb
add
xor
cwtl
push
fistl
and
adc
and
cmp
jg
fcmovnb
andw
fimuls
xchg
jl
jb
mov
jl
cmp
jb
jae
insb
pop
adc
je
jne
lret
out
jno
fsubr
fdivs
sti
adc
dec
sub
stos
jae
outsl
push
and
out
cmp
adcb
jp
addr16
lcall
decb
sbb
xchg
or
in
adc
jbe
cmp
xchg
jl
jb
es
xchg
sbb
inc
dec
add
imul
js
pop
xchg
mov
add
cmp
jne
sti
pop
cmc
mov
ljmp
add
adc
sub
or
lds
out
push
mov
jb
dec
pop
xchg
lds
sbb
jno
jge
mov
dec
pop
add
cld
mov
stos
lea
xchg
out
out
adc
and
xor
scas
data16
jmp
mov
loopne
xchg
mov
jno
or
mov
mov
xchg
cld
int
es
and
jb
out
repnz
sahf
fistpll
pop
push
add
fists
cmpsl
mov
push
sbb
xchg
bnd
outsl
cmpsl
mov
fists
mov
data16
fimuls
push
pop
mov
cmp
jne
adc
jge
in
dec
es
in
outsb
cli
sub
inc
fcmovnb
cli
and
xchg
je,pt
fwait
das
jnp
mov
xchg
je
cmpb
pop
pop
sub
adc
lret
pop
mov
jmp
ret
ja
aad
adc
sub
test
xchg
inc
push
jo
mov
inc
leave
jecxz
lods
fsubl
test
inc
or
push
movsb
cli
in
push
xor
adc
or
cmpsl
je
ja
fstpt
sbb
mov
add
add
add
out
jmp
push
fwait
out
xchg
inc
mov
scas
lods
les
mov
inc
jb
cmpsl
jae
push
out
add
addr16
enter
jmp
popf
cmp
iret
test
icebp
leave
or
scas
out
addr16
loope
out
mov
daa
add
lds
mov
push
negb
divb
sbb
push
lds
add
and
mov
xor
or
outsl
and
mov
fmull
les
sbb
call
stos
in
sbb
js
add
js
ds
enter
fists
daa
lea
pop
cld
js
dec
or
jb
xchg
lods
ret
lret
jp
cmp
fwait
add
in
lods
rorb
jmp
inc
cmpsl
sbb
jb
push
jmp
push
mov
fnstenv
out
int
data16
shll
jmp
jo
pop
jge
jb
cmpsb
loopne
fldl
push
insb
or
inc
jae
data16
ss
jmp
and
in
pop
sub
movsl
test
jmp
add
add
add
adcb
imul
pop
cmp
jns
popa
xchg
ss
popa
push
fisubrl
pop
jmp
xor
je
aam
shll
popf
ret
cmp
jmp
add
das
and
jmp
je
rcl
jmp
pop
pop
and
je
shl
fstpt
add
pop
addl
cmp
call
pop
lea
pop
xchg
pusha
mov
cltd
pop
pusha
mov
cltd
jb
mov
sbb
js
jne
sub
data16
jecxz
cltd
or
into
push
add
jb
and
xchg
lods
or
cmp
repnz
or
sub
jb
les
out
out
js
adc
jae
addr16
nop
adc
add
repnz
fwait
or
xchg
jb
mov
jg
in
xorb
mov
mov
inc
sbb
movsb
mov
pop
outsl
aam
repnz
or
test
jb
les
pusha
pop
add
jno
pop
in
jno
lcall
jge
leave
pop
call
cmpsl
push
test
adc
lods
aas
leave
or
jae
jge
pop
in
cmpsl
test
test
jle
jge
push
mov
mov
frstor
jb
mov
inc
imul
lods
pop
push
in
test
cmp
fnstsw
pushf
fisttpll
clc
push
lcall
xlat
inc
jns
fld
std
lods
lcall
jge
inc
nop
mov
sbb
fisubs
adc
pop
inc
nop
adc
out
adc
lahf
sbb
icebp
sarb
les
push
inc
imul
rorb
push
mov
mov
outsb
imul
rolb
stos
push
mov
int
inc
sub
jmp
ret
jns
inc
cs
pop
sahf
inc
mov
add
add
add
adc
fildll
mull
add
pop
js
cmp
adc
sub
pusha
test
test
jmp
sbb
movsb
mov
inc
xchg
nop
pop
movsl
loopne
cmp
inc
mov
sti
mov
fistps
pop
lock
mov
pop
test
movl
add
add
push
push
adc
xchg
mov
xchg
decl
sub
pop
jle
decl
mov
into
jmp
pop
ror
push
lahf
lock
icebp
popa
add
fistps
repnz
mov
negb
cli
adc
imul
add
loope
mov
mov
add
jb
push
cmp
add
add
add
pop
cmp
jb
adc
cmp
jb
push
cmp
jb
add
jb
add
jb
sti
pop
icebp
add
jmp
mov
jmp
test
xlat
cmc
subl
add
or
gs
cmp
in
cmpl
pop
xchg
addl
add
add
add
add
enter
iret
mov
adc
adc
pop
push
les
or
popa
pop
ds
stos
adc
or
imul
addb
inc
int3
add
popa
popa
lock
icebp
xchg
fnstcw
data16
jo
or
mov
lds
scas
int
dec
sub
add
sub
leave
outsl
dec
int
scas
bound
popf
jg
movsl
jg
jmp
add
iret
sub
lock
push
mov
data16
jne
jno
fsubl
jno
out
enter
add
xchg
out
shr
jae
imul
gs
xchg
jmp
pop
mov
incl
add
adc
rcr
out
mov
data16
lods
jne
dec
jg
inc
dec
flds
cmp
data16
push
push
into
pop
xchg
decl
add
mov
test
mov
push
sahf
mov
lcall
dec
adc
test
or
pop
andb
test
lods
push
mov
jecxz
and
inc
sahf
push
inc
or
add
add
add
add
ljmp
and
xorb
mov
leave
fwait
or
shrb
pop
dec
and
pusha
ds
ffree
das
jae
subb
test
out
ss
jmp
outsb
fbld
mov
sub
loopne
cli
repnz
or
pop
xchg
lcall
fdivrp
push
jge
popa
add
fistps
push
add
out
test
jnp
mov
pop
sub
shr
popa
sar
popl
inc
lock
mov
in
out
mov
cmp
or
insl
jge
imul
push
mov
pop
and
andb
dec
inc
mov
add
mov
or
mov
cld
jne
lret
add
sbb
push
mov
lcall
repnz
pop
popa
add
pop
imul
cli
jg
lea
stos
nop
mov
mov
hlt
jns
idivl
xor
pushw
stos
jb
mov
dec
xor
lret
ffreep
cltd
dec
adc
inc
cmp
sub
ss
ja
sub
out
jmp
mov
or
push
jne
push
stos
pop
bound
fistpll
call
or
jg
out
dec
cmc
mulb
in
inc
add
ror
lods
daa
jno
loopne
in
nop
out
std
xchg
mov
incl
pusha
add
ja
int
loope
cmp
and
mov
inc
add
out
inc
pusha
cmpsb
dec
sub
std
cmp
in
dec
addr16
pop
dec
mov
sub
cmc
nop
rcl
add
or
jge
and
mov
xchg
inc
and
pop
test
shlb
jbe
sbb
add
adcb
mov
cmpsb
mov
lcall
add
pusha
xchg
mov
push
sub
xor
frstor
rorl
stos
lock
sub
mov
and
inc
arpl
adc
sbb
je
out
push
add
ss
pop
mov
and
pop
push
sbb
or
sbb
rolb
add
add
add
add
push
pop
xchg
pusha
xchg
filds
repz
orl
add
subb
cmp
mov
inc
pop
dec
xchg
fnstsw
jge
sub
jmp
push
mov
jge
mov
mov
push
imul
pop
push
mov
add
add
dec
popf
sub
ret
inc
sbb
mov
sbb
mov
stos
lret
popf
xor
mov
shrb
cld
iret
xchg
out
aas
xchg
add
leave
repnz
imul
sti
jmpw
ljmp
int3
fs
lock
xchg
pop
dec
mov
ljmp
gs
xchg
pcmpgtd
adc
aam
out
outsb
xchg
push
out
push
mov
pop
mov
dec
fdivp
fs
jmp
mov
add
out
push
bound
xor
sbb
add
fadds
enter
xlat
mov
test
data16
pop
sarl
mov
or
stos
andl
popa
test
cltd
bound
lds
jle
sub
dec
pop
inc
popl
sbb
pusha
mov
in
jecxz
fildl
cmp
inc
popl
sarl
inc
inc
mov
and
cmpsb
inc
sbb
jle
push
das
xchg
dec
les
jb
in
divl
jg
shll
icebp
sbb
jle
ljmp
cli
jmp
pop
bound
jb
sub
sti
stos
imul
xchg
test
aas
jb
cmpsb
xchg
xchg
jg
loopne
dec
push
shlb
push
jp
cli
mov
push
mov
out
cli
insl
xchg
sub
sti
sub
pop
js
gs
xor
jb
pop
xchg
daa
mov
clc
and
add
add
add
and
sbb
fisttps
add
add
dec
scas
jge
mov
jnp
cli
mov
jle
ficompl
fsubrl
testl
subb
mov
rol
gs
les
mov
jge
stos
leave
insl
xorb
pop
lea
imul
mov
lret
mov
icebp
xchg
cltd
sub
scas
and
ljmp
push
pusha
arpl
xchg
fnsave
insl
rolb
nop
and
inc
loop
out
cli
push
sub
ljmp
repnz
fcmovne
out
outsb
dec
and
or
in
dec
jecxz
inc
xor
sti
lret
out
jne
ljmp
andb
shlb
xchg
sbb
mov
jno
lods
scas
jo
jge
in
xchg
add
sub
setbe
add
push
add
adc
dec
mov
data16
push
ret
pop
jmp
pop
sub
push
mov
pop
pop
arpl
add
add
add
add
xorb
rol
pushfw
insl
aam
jmp
or
enter
fwait
add
addr16
sbb
adc
jge
pop
mov
imul
sub
cmp
ret
data16
bound
jb
jecxz
bound
inc
leave
js
pop
mov
mov
jne
mov
jno
bound
and
addr16
cwtl
xchg
fstpt
lock
rclb
shlb
dec
loopne
mov
mov
inc
jae
ret
push
sti
jg
mov
imul
add
mov
mov
mov
in
xor
jb
jecxz
mov
shl
push
add
mov
add
xor
cmp
adc
stos
notl
mov
iret
xor
xchg
aad
ret
pop
push
push
mov
lea
aam
rcr
in
mov
mov
int3
xchg
testl
add
or
xlat
jp
mov
in
adc
sbb
imul
int3
lds
add
add
add
add
pop
inc
xchg
int3
loopne
inc
das
rclb
pop
inc
nop
in
jne
out
push
cmp
daa
ja
arpl
fistpll
popa
jl
mov
and
out
js
jmp
cmpsl
xor
cmp
mov
pop
mov
jmp
fmuls
icebp
inc
test
inc
mov
xchg
cltd
add
mov
jl
repz
push
mov
popa
out
inc
xchg
dec
filds
popa
lret
ljmp
lds
dec
push
pop
adc
inc
pop
jmp
popa
push
inc
fmuls
dec
enter
inc
rorl
enter
test
add
inc
fwait
dec
movsb
adc
inc
mov
je
adc
cs
outsl
xchg
jae
js
sbb
dec
outsl
addr16
punpcklbw
or
call
and
inc
mov
add
lock
inc
mov
add
jb
sub
sub
test
test
mov
pop
je
arpl
mov
sub
pop
movsb
mov
add
fwait
roll
test
orl
pop
mov
add
nop
add
imul
in
les
mulb
sub
jge
stos
xchg
inc
pushl
lods
out
xchg
fimull
mov
sub
ret
sub
pushf
call
jb
mov
into
pop
mov
mov
jge
repnz
pop
add
add
add
add
sar
mov
fmuls
add
ret
jg
neg
xchg
add
push
cld
adc
into
mov
add
int3
xor
bnd
jle
cmpsb
inc
test
pop
iret
lret
dec
or
mov
sarl
jb
inc
mov
inc
cli
fs
mov
jb
test
xchg
xchg
add
out
ja
jmp
imul
leave
jmpw
cs
stos
aam
pop
jno
imul
add
shll
pop
pop
jmp
jo
div
jno
lods
scas
sbb
jg
icebp
shll
inc
mov
fs
sarb
insl
cmpsl
cmp
mov
les
divb
add
add
add
add
and
jmp
leave
cmpsl
sub
ret
mov
rcll
jns
pop
push
mov
mov
cmpsb
mov
dec
adc
inc
xchg
add
dec
lods
pop
dec
out
das
jmp
adcb
data16
jns
insl
xchg
outsb
or
cli
sbb
adc
cmp
ljmp
push
scas
inc
test
sub
pop
aad
add
cmpsb
into
test
lret
mov
ret
in
shl
bound
add
push
cli
movsl
xor
adc
xchg
or
sub
call
jg
int
in
loop
idivb
xchg
jg
mov
pop
xacquire
sbb
xor
inc
add
nop
push
repnz
pop
in
imul
outsb
push
pushl
repnz
lahf
andnps
shlb
dec
and
xor
es
bswap
aad
fnstsw
pop
mov
inc
popa
dec
dec
imull
ljmp
jb
jno
popa
inc
imul
cmpb
xchg
out
mov
in
aad
idivb
add
ret
add
scas
test
dec
mov
or
jge
mov
sahf
pushf
lret
popf
sar
out
dec
addl
test
add
scas
inc
xchg
clc
mov
add
jo
jge
xor
pusha
popf
cmpsb
mov
mov
pushw
int
jmp
jno
lods
das
ja
jge
fadd
xchg
xor
add
add
add
add
or
daa
jl
mov
dec
dec
sub
mov
data16
fwait
push
cld
cmp
jmp
inc
in
mov
jge
out
xchg
pop
mov
push
lock
pop
out
or
mov
sub
push
dec
sub
das
pop
data16
out
mov
fs
lods
daa
jno
jge
add
xchg
imul
dec
xchg
pushf
call
cmp
sarl
nop
mov
mov
pop
enter
xchg
mov
in
add
andl
test
es
inc
fwait
or
cli
mov
nop
and
and
add
dec
add
sahf
orb
dec
enter
out
movsl
mov
inc
add
subb
sbb
add
dec
mov
aam
jb
mov
add
sub
jno
pop
test
loope
jno
pop
cmp
or
cli
lods
movsb
cmp
xor
loop
clc
loope
push
sbb
pop
and
lods
in
add
xchg
jecxz
lods
mov
push
add
fimuls
jne
xchg
cmp
cmpsl
lar
or
mov
push
and
sub
mov
jne
into
hlt
std
lds
jmp
cmpl
lret
add
loopne
aam
add
cmp
xchg
mov
xlat
std
lea
pop
loopne
lret
add
mov
xchg
add
add
divb
cmpl
cld
dec
sti
lock
mov
adc
lahf
dec
cltd
jae
mov
testl
lea
loop
cli
out
sbb
sbb
lock
or
fstl
clc
inc
adc
clc
mov
fisubs
data16
data16
sub
mov
cmp
dec
std
mov
mov
jge
add
ja
cld
fldenv
mov
imul
clc
cmp
cmpsl
jbe
out
xor
decb
sbb
mov
dec
leave
lods
test
sub
movsb
push
in
cmpsb
add
cltd
out
pop
cmp
ja
add
iret
fimuls
pop
adc
loop
lret
cmc
lods
dec
jmp
add
testb
out
and
pop
lret
dec
adc
mov
push
jmp
inc
pushf
or
jmp
mov
movsl
inc
mov
lahf
clc
mov
cmp
sub
inc
pushf
and
push
mov
or
xor
inc
hlt
sbb
movsl
adc
jge
cmpsb
mov
scas
mov
sub
fs
dec
push
adc
sub
push
bound
ret
jae
and
and
xor
es
imull
push
call
test
adc
sub
mov
jge
lahf
cli
add
adc
mov
arpl
cld
fdivrp
repnz
je
fbld
pop
js
lret
add
jge
gs
mov
push
sbb
out
or
add
mov
test
cmpsl
inc
int3
mov
test
and
loopne
stos
cwtl
sbb
int
les
mov
add
jb
and
dec
test
jge
into
push
jbe,pn
or
or
xchg
mov
cmp
mov
mov
inc
lahf
data16
mov
imul
mov
jmp
filds
mov
jbe
sbb
sbb
dec
shr
loopne
xchg
imul
mov
imul
mov
imul
add
add
jge
loopne
xchg
imul
mov
jmp
incl
jl
pushf
dec
out
jno
loopne
sbb
jae
inc
cmc
xchg
dec
movsb
cmpl
jne
insl
add
addr16
adc
sbb
inc
jae
add
repnz
push
xor
sarb
sti
bound
dec
repz
bound
mov
jg
in
into
jae
xchg
aam
loop
and
hlt
movsb
dec
in
into
mov
xor
cmovg
fwait
incl
mov
jmp
push
dec
sbb
mov
int3
adc
das
sub
stc
jge
stc
dec
nop
xchg
adcb
add
enter
xchg
sub
add
cmovno
jne
sub
pop
nop
shll
cli
jge
movsl
test
add
ljmp
mov
notb
popf
addr16
mov
cli
stc
jecxz
xchg
lcall
inc
test
outsb
mov
dec
or
pop
lods
add
bound
dec
jecxz
or
lock
push
push
xor
add
jb
jge
stos
mov
push
nop
dec
mov
xchg
add
lock
dec
stc
js
lahf
add
or
or
mov
lods
mov
mov
cmp
loop
mov
sub
add
out
push
lahf
jnp,pt
test
add
add
add
add
dec
sbb
sbb
sbb
push
rolb
jno
or
int3
test
addr16
dec
add
movsl
aas
and
idiv
dec
cli
out
pop
arpl
scas
dec
cmp
mov
pop
inc
inc
mov
idivb
jmpw
adc
jne
lods
cmpsl
jbe
arpl
mov
in
sbb
xchg
xor
add
add
add
add
in
jb
call
movsb
cmp
sub
das
imul
sub
out
jnp
push
sub
xor
nop
lods
xchg
xchg
in
dec
cmc
hlt
and
jge
cli
inc
nop
addb
sbb
lahf
addr16
rcll
addr16
pop
or
inc
and
push
mov
xchg
lcall
inc
and
add
add
add
mov
dec
pop
pop
jb
xchg
lcall
inc
and
pop
bound
decl
inc
and
push
arpl
mov
inc
jmp
or
and
mov
lret
mov
jl
and
jmp
inc
and
or
xchg
in
mov
jno
pop
pop
fsubrs
add
add
add
add
mov
sub
out
dec
adc
sub
and
or
std
adc
adc
and
outsb
jmp
call
xchg
outsl
out
xor
push
ljmp
jp
and
popf
lcallw
out
movsl
lret
mov
add
cwtl
mov
inc
xchg
mov
aaa
aaa
mov
cmpsl
cmp
mov
pop
fcmovnb
xchg
xor
jg
dec
shll
shrb
shlb
rcrb
inc
push
cmovb
pop
inc
inc
jno
aas
jns
aaa
jno
scas
push
cmpsl
mov
inc
xchg
mov
add
add
add
pop
stos
inc
xchg
mov
inc
ja
data16
icebp
xor
icebp
data16
icebp
data16
icebp
inc
xor
test
mov
icebp
data16
icebp
data16
jmp
ljmp
data16
in
retw
stc
jmp
mov
jmp
lcall
adc
pushw
lods
jmp
jle
jmp
cmp
add
add
add
data16
jmp
es
in
sub
and
xchg
adc
jmp
dec
xor
data16
or
cmp
push
add
add
push
add
add
push
add
add
push
add
add
in
icebp
ror
cwtl
ret
dec
mov
paddb
push
rolb
or
cwtl
incl
adc
fwait
add
fcmovne
int3
sbb
data16
sbb
adc
sbb
pop
jmp
addr16
inc
sbb
and
sbb
leave
cmc
cmpsb
pop
jb
and
inc
in
bound
js
jp
adc
shlb
add
stos
mov
aas
mov
bound
mov
mov
cmp
addr16
xchg
xor
cmc
mov
imul
test
mov
cmp
outsl
imul
xchg
scas
xchg
add
out
jp
sbb
out
movsl
push
mov
inc
repnz
pop
pop
out
mov
xor
repnz
clc
addl
ds
std
js
xor
mov
repnz
testl
xor
xchg
jno
repnz
imull
out
mov
add
adc
pop
btc
aam
aad
out
xchg
pop
jbe
fcoml
repnz
ljmp
push
cmp
xor
loope
aad
testl
addr16
popa
sub
jecxz
xor
enter
push
sbb
xchg
add
in
add
leave
imul
lret
ss
imul
dec
pop
pusha
inc
test
push
ljmp
addr16
nop
ret
pop
ret
out
cwtl
xor
jno
test
arpl
imul
push
test
mov
cmpsl
movsb
movsb
jmp
pushf
mov
jmp
cmc
add
jmp
into
mov
iretw
lods
jmp
mov
jmp
add
add
or
cltd
xor
xlat
inc
jecxz
xlat
ja
fwait
addr16
xchg
imul
lret
rcrl
cmp
xchg
mov
daa
and
jmp
xchg
decl
ret
add
and
pop
test
fcmovnb
data16
sarb
cltd
push
sub
fisttps
out
adc
adc
test
mov
fwait
addr16
test
add
in
imulb
insb
jg
mov
inc
ret
cmpsb
pop
dec
nop
movsl
add
ds
loop
pop
popa
mov
adc
pop
inc
or
cmpsb
sbb
adc
movsl
sbb
and
ss
subl
ret
or
push
test
xor
jns
sbb
add
cwtl
ljmp
pop
lods
pop
cltd
sub
jb
daa
aas
sbb
mov
rcll
sahf
mov
out
je
inc
fldl2e
mov
fstps
xchg
cmp
rclb
popa
adc
fadd
jge
hlt
adc
test
test
jnp
cmpsl
mov
pusha
xor
jge
inc
sbb
jb
add
xor
add
adc
call
xor
cld
cli
adc
in
jnp
push
lea
and
ret
cmp
cmc
jle
imul
sub
bound
aaa
lcall
rcll
jg
add
ret
push
cmp
push
push
mov
out
out
stos
sub
lahf
jo
xchg
loopne
dec
incl
in
clc
push
fidivs
push
out
lock
add
push
shlb
xchg
dec
stc
pop
lds
insl
push
loopne
jmp
mov
pop
mov
call
push
pop
rcr
scas
jne
popa
ljmp
add
add
sbb
xchg
orb
incl
ja
test
inc
sbb
cmpsb
pop
lds
pop
ret
add
into
mov
mov
add
xor
jne
push
es
or
and
add
push
addb
pop
movsl
pop
add
push
sbb
in
push
js
mov
add
add
add
and
jle
inc
and
les
jmp
fsubs
call
xor
fwait
push
xor
mov
clc
jns
xchg
push
lahf
xlat
icebp
push
sbb
call
xchg
xlat
ljmp
xor
mov
jb
sbb
popf
cmpsl
call
xor
add
add
add
adc
movsb
fucomip
imul
push
scas
mov
mov
mov
or
and
push
xchg
sbb
stc
mov
outsb
data16
test
movsl
shll
xor
adc
cmp
test
pop
in
add
ss
or
mov
jge
std
stc
jl
sbb
push
jle
loopne
sbb
pop
adc
pop
popf
xchg
subb
mov
or
ror
xchg
sbb
insl
mov
imul
jge
in
xchg
cmc
xchg
cmp
jge
xor
test
out
sbb
std
roll
jb
scas
aas
popa
push
repnz
jbe
xor
fbld
mov
xor
arpl
scas
cmp
jno
cmpsb
cli
ret
dec
sub
add
add
add
cmp
push
lret
sbb
sbb
adc
es
loope
and
lds
fidivl
fdivrp
test
mov
cmc
cmp
mov
out
push
jb
xor
adc
jle
fcompl
test
dec
ljmp
jno
data16
adc
setne
call
add
add
add
jno
fiadds
xchg
pusha
inc
mov
pop
and
decb
scas
mov
mov
adc
jae
sub
icebp
decl
cld
dec
adc
pop
mov
push
fs
xor
mov
out
fs
fstpt
and
inc
lret
adc
push
jge
nop
pop
lret
and
nop
cwtl
pop
in
clc
push
sbb
adc
sub
decb
nop
je
xchg
dec
sti
inc
sub
je
mov
adc
push
mov
add
pushf
and
sbb
sbb
jb
pop
lret
in
xchg
push
adc
dec
mov
jge
lcall
test
hlt
jg
inc
xchg
arpl
jb
sbb
dec
shl
aas
jb
dec
xchg
scas
outsb
push
stos
incl
mov
pusha
adc
sti
cli
ds
jns
test
addr16
xor
xor
addr16
neg
jle
jb
mov
jp
ljmp
mov
mov
or
iret
or
jae
jge
mov
rolb
sbb
jge
scas
ljmp
jb
ljmp
jb
sbb
add
add
add
add
lahf
mov
inc
lahf
adc
xchg
lahf
sbb
jbe
jo
sahf
lret
lds
idivb
mov
stc
arpl
xor
shrl
fidivs
xor
mov
xor
sbb
faddl
dec
int
sete
jecxz
jmp
mov
jle
add
pushw
jecxz
jmp
jno
loope
push
mov
cmp
jno
jns
pop
push
insb
xor
jmp
jb
loop
xor
add
aad
dec
jmp
jbe
sub
push
sub
scas
sahf
and
mov
in
inc
outsl
mov
cmpsl
inc
pop
and
pop
sub
into
data16
adc
add
add
add
fmuls
pusha
mov
and
sbb
nop
inc
outsl
ljmp
jg
xor
push
sti
sub
and
sub
sub
and
jns
push
add
cmpsb
pop
and
pop
rorl
jg
imul
jns
push
lahf
and
and
add
in
jb
add
mov
add
add
add
jmp
adc
add
push
je
push
fcos
jge
xor
icebp
mov
out
xchg
dec
add
dec
cli
push
stc
push
sbb
pop
ljmp
dec
sti
inc
sub
dec
out
imul
test
hlt
add
cs
fidivrs
jb
lea
data16
in
add
test
add
insl
inc
mov
xchg
adc
imul
mov
add
scas
mov
jnp
rclb
jno
inc
add
mov
adc
aad
pop
jns
xor
add
lds
jb
jne
insl
pushf
jge
pop
stc
jecxz
icebp
xchg
adc
adc
ror
mov
jb
loope
cmp
decb
div
fldt
jge
add
dec
out
insl
or
clc
push
dec
ret
fwait
lcall
divb
cmc
div
fldt
addr16
push
mov
fildll
jmp
sub
ret
jg
bound
pop
cmc
xchg
sbb
sbb
jle
pop
bound
adc
mov
test
aas
cmp
fistps
scas
lds
xor
add
add
add
add
or
mov
jmp
jo
insb
lea
jbe
movsb
inc
inc
aam
jmp
mov
popaw
clc
cmp
push
repnz
pop
cmpsl
mov
dec
sti
pop
push
out
cmp
pop
jecxz
mov
sbb
and
pop
sub
out
cmc
inc
mov
sub
inc
loop
fwait
movsb
fiadds
add
add
add
add
fstpl
fstpl
and
in
data16
lods
pop
adc
add
cmp
int
in
clc
sub
mov
mov
sub
sbb
and
test
rol
in
inc
pushl
call
jb
ret
scas
addr16
stc
out
aas
mov
bound
jmp
inc
sub
ret
mov
and
adc
popa
sti
jmp
sub
adc
and
scas
pop
xlat
sar
and
or
cli
adc
add
jb
mov
scas
mov
mov
test
out
or
lret
bound
cmpsb
mov
add
add
add
sti
stc
test
push
inc
cmp
aam
cwtl
sarb
mov
pop
pop
pop
pop
rclb
cmp
lea
insb
lods
imul
lods
fstpt
jge
lss
enter
mov
add
or
imul
xchg
pop
add
add
fcmovb
mov
add
add
add
jmp
pinsrw
sbb
push
mov
imul
call
jne
jbe
jno
jne
jb
bound
movsb
mov
fdivrl
or
dec
or
xor
scas
inc
mov
or
jb
inc
xchg
rorl
sbb
inc
inc
mov
xchg
add
inc
cmpsb
adc
inc
pushf
std
xor
mov
jbe
cmpsl
jmp
sub
or
pop
inc
push
add
fs
fcmovnb
jmp
add
xor
xchg
xchg
addr16
sbb
test
cli
jno
lret
ret
arpl
dec
add
stc
stos
mov
ret
dec
cltd
and
cltd
adcb
add
add
add
cli
xchg
scas
lcall
icebp
int3
xchg
sub
add
xchg
testb
in
into
repz
cmpsb
pop
sbb
xor
add
cmp
push
inc
sbb
lret
jb
and
jge
pop
incl
mov
cmp
in
lahf
out
pop
xchg
pushf
mov
lahf
call
jle
lret
test
mov
jae
outsb
lahf
addr16
jne
push
cmp
or
std
dec
test
dec
lahf
adcl
sar
out
in
ss
mov
add
lahf
or
dec
jg
call
adc
adc
dec
and
lods
aaa
mov
mov
notb
add
add
add
in
jnp
cmp
and
adc
test
cmc
hlt
int3
out
in
test
xchg
sbb
int3
aam
pop
inc
in
in
mov
jge
and
aaa
add
xchg
lcall
rorl
xchg
in
data16
jp
js
orl
jns
mov
aam
mov
add
lahf
sub
xor
jae
add
jmpw
mov
dec
icebp
sub
jge
fcmovnb
cmp
xlat
aad
jmp
xor
or
mov
or
mov
out
add
addr16
jge
sbb
mov
push
addr16
lret
fists
inc
nop
jns
jl
addr16
push
sub
fwait
xchg
and
add
add
add
sub
stos
int
repnz
stos
pop
xchg
cmp
adc
int
dec
jno
aas
les
add
or
push
cmpsl
push
ja
cli
mov
or
fiadds
adc
hlt
adcb
shlb
push
insl
xchg
push
xchg
push
cmpsl
cmp
jmpw
fidivrs
lret
adc
jne
aam
jmp
loope
or
aam
movsl
mov
push
in
dec
out
cmpsl
or
fiaddl
add
insl
lods
mov
out
in
push
mov
inc
pop
das
cmpsb
rcrb
cmpsb
cli
mov
jb
cmpsb
sti
jno
cmc
jo,pt
sub
adc
out
push
addr16
mov
xchg
sub
je
and
call
sbb
xor
jp
jmp
mov
add
add
add
add
adc
repz
das
aas
jno
imul
jecxz
outsb
sbb
pop
mov
pop
xchg
sahf
xchg
jae
mov
pop
jge
xor
sbb
incb
mov
mov
ret
fwait
add
imul
add
lock
dec
add
sbb
mov
jo
inc
sahf
in
popa
sub
add
add
add
add
cmp
rorb
add
jle
sub
icebp
pop
inc
inc
push
in
jge
jb
jge
aad
xchg
xchg
push
jle
lock
xchg
mov
xchg
sbb
cmp
sahf
mov
vmread
rol
jmpw
and
add
and
jno
cmpsl
and
in
push
test
les
scas
icebp
int
aam
add
mov
dec
data16
mov
dec
jae
int3
ljmp
mov
lock
push
push
stos
push
iret
popf
ret
push
movsb
ret
call
mov
test
jno
cmp
cli
cmp
fucom
jbe
add
and
fnstcw
cwtl
mov
mov
add
test
jbe
andb
push
jne
cmpb
ret
data16
push
cmp
dec
fwait
add
ret
jmp
into
inc
rorl
mov
xchg
lcall
inc
and
jo
xchg
cmpb
jae
inc
adc
mov
stc
int3
mov
mov
ret
rcl
pop
test
ret
data16
mov
loope
cmp
aaa
adc
add
call
rorl
paddsw
into
cli
fdivrs
push
mov
xor
in
fsubs
mov
push
data16
cli
negb
pop
add
add
fstpt
sbb
mov
cmp
daa
xchg
inc
push
xchg
fnstsw
push
stos
incl
insb
or
nop
xchg
mov
test
pop
addr16
mov
stc
int
fidivrs
xchg
cmpsl
fldl
jo
mov
imul
xchg
je
lahf
js
inc
sub
std
mov
push
jle
jno
dec
mov
loop
mov
pushf
adcl
adc
mov
mov
in
dec
mov
add
add
add
xchg
pop
mov
mov
xor
mov
clc
dec
test
pop
jbe
pop
ljmp
push
ret
aad
dec
mov
mov
repnz
or
mov
add
mov
jae
and
or
ret
icebp
cmp
sbb
cmp
pushf
push
jmp
dec
loope
clc
pop
dec
fldlg2
lcall
mov
push
ret
out
sbb
cltd
ficompl
in
mov
or
sub
out
jns
jbe
xor
in
push
ret
out
mov
adc
or
cmp
dec
sub
jmp
stc
mov
jbe
mov
mov
cmp
add
das
mov
push
dec
xor
push
push
mov
sahf
sahf
add
outsb
call
loopne
ljmp
lods
call
rolb
add
pop
xor
add
ljmp
mov
add
pop
sbb
or
xchg
mov
fcmovne
scas
ljmp
xor
mov
add
add
add
mov
je
cmp
and
jb
xor
inc
test
icebp
ds
fmulp
lcall
data16
and
addb
sub
data16
cmp
loop
dec
imull
ficoml
popa
push
cmp
cmp
ja
inc
xor
xlat
dec
mov
mov
lods
jmp
add
xor
mov
add
add
add
add
pop
stc
mov
das
psubsb
rcrl
sub
lock
mov
jg
mov
divb
mov
add
mov
pop
ds
sbb
mov
inc
cmp
inc
mov
lcall
popf
iret
pop
or
ret
push
out
jb
arpl
jb
dec
mov
mulb
addb
add
add
add
add
mov
lcall
mov
adc
mov
sahf
xchg
pop
jb
arpl
aas
or
incb
jb
jge
pop
sbb
and
data16
dec
fsubrp
jno
popfw
leave
mov
lds
cmpsb
cltd
sbb
pushf
add
inc
cmpsb
je
fisubl
sub
stos
push
add
aad
jmp
sbb
cmc
loope
mov
pop
jmp
xchg
aas
adc
out
mov
mov
mov
bound
loope
movsl
neg
das
xchg
push
pusha
jmp
ss
add
sahf
ret
inc
shlb
cmp
inc
inc
push
inc
jmp
pop
add
ret
mov
xchg
jle
lods
sbb
jg
or
hlt
or
cld
xchg
js
jle
jp
mov
or
xor
add
add
nop
pop
gs
rorl
pop
push
in
je
mov
jp
in
jns
mov
ret
nop
cli
nop
adc
ljmp
jb
inc
je
dec
into
xchg
loop
icebp
clc
das
jle
push
xchg
sbb
jb
sub
aad
mov
push
fidivl
addr16
mov
rolb
icebp
movsb
push
or
pop
imul
pop
mov
out
outsl
add
add
loopne
jbe
cmp
sub
scas
mov
add
add
add
imul
imul
out
and
add
xchg
xorb
jge
sub
loop
sbb
dec
or
cwtl
inc
dec
rolb
pop
movl
xchg
cmc
jge
movsb
push
lret
pop
mov
sub
in
xchg
mov
push
jge
sub
jge
mulb
add
jb
pop
pop
cmc
dec
or
jb
cwtl
inc
leave
lret
add
add
jg
stc
pusha
scas
sub
xchg
mov
andl
inc
sbb
or
test
mov
pop
ljmp
push
pop
push
test
in
test
insl
addr16
jle
jno
pushw
dec
jmpw
pop
loop
push
or
fbld
xchg
test
xchg
test
cmp
mov
imul
arpl
test
jmp
and
adcl
in
jmpw
pop
imulb
enter
dec
in
or
cmp
sahf
xor
addb
or
jge
fcmovnb
mov
jmp
add
data16
nop
pop
inc
add
imul
xchg
pop
call
addb
sbbl
lcall
or
cmpsb
pop
test
xchg
pop
sbb
xchg
decl
sbb
dec
mov
jnp
sbb
or
push
ss
mov
push
cmpsl
mov
add
cmp
dec
mov
test
cli
lods
out
xorl
xchg
popf
and
nop
mov
add
mov
pop
sub
xor
mov
addr16
jmp
inc
rcll
fiadds
int3
mov
xchg
adc
jb
fistpl
xchg
insb
sti
inc
lock
mov
addr16
insl
in
test
repnz
insb
xchg
cmpsb
lcall
add
add
fadd
jge
sub
clc
cmp
mov
sub
pop
inc
mov
add
sbb
mov
jge
mov
outsl
push
sti
call
jge
pop
add
add
or
dec
jmp
add
or
jl
push
mov
dec
ret
popf
std
dec
movsb
hlt
inc
add
test
mov
aaa
es
test
push
jnp
aaa
add
or
mov
adc
push
cltd
pop
bound
retw
sub
sbb
push
or
or
and
jno
ja
dec
jae
jno
fisttps
sub
jmpw
sbb
repnz
adc
dec
jmpw
push
daa
sub
jnp
and
div
data16
add
add
add
add
aam
jno
data16
adc
insb
mov
add
or
frstor
push
sub
cmp
add
std
pop
and
and
repnz
les
les
dec
shll
mov
jp
repz
hlt
xor
inc
das
fdivs
push
xchg
mov
imul
and
and
cmp
xor
shll
push
pusha
mov
xchg
std
xchg
add
push
adc
mov
rcrb
dec
imul
fisubrs
sbb
repnz
push
in
ja
mov
adc
cli
insl
add
pop
add
stos
pop
mov
insl
addr16
out
jb
jmp
pop
add
jb
das
daa
and
mov
hlt
push
add
fadds
negl
xor
xchg
jb
adc
mov
and
insl
addr16
and
ret
push
cmp
push
int3
jmp
aad
cmp
adc
divl
xor
lds
push
movsb
xchg
add
jge
in
or
pop
nop
mov
nop
inc
test
fldl
sti
inc
add
scas
mov
dec
loope
mov
xor
sbb
jb
add
pop
add
nop
dec
test
jge
and
shrl
pop
mov
push
push
pop
lcall
add
jg
add
and
add
cmpsw
xchg
jecxz
bound
sub
clc
add
loope
mov
fimuls
sub
mov
sbb
sub
or
cmp
cmpsl
adcb
jo
jecxz
shl
and
or
xchg
stc
jle
cmpsb
jge
push
fldl2t
test
repnz
push
xor
gs
stos
insb
ss
pushf
jle
add
xchg
cmc
outsb
repnz
ss
loope
and
dec
sbb
sub
cmpsb
add
jae
push
and
mov
call
xlat
add
adc
xchg
pop
and
std
sub
imul
loopne
jno
decb
movsb
dec
enter
xor
pop
dec
mov
xor
movb
add
add
add
add
jb
push
aaa
and
cmc
into
and
call
sti
mov
pusha
div
add
jmp
je
jp
in
subl
jo
ss
xchg
es
insl
addr16
sbb
jb
push
sub
jb
aad
mov
mov
jae
pop
pop
pop
addr16
add
add
add
jb
ret
and
pop
and
jo
das
xchg
sbb
jb
mov
ljmpw
stos
and
adc
cmpsb
lds
cltd
fdivrl
ss
rorl
pusha
das
mov
in
adc
jb
mov
jle
in
lds
dec
mov
jge
lds
lea
add
add
lret
insb
insl
jp
push
addr16
cwtl
orb
jg
adc
aas
dec
xlat
add
or
xchg
cmpsb
sahf
sbb
out
cld
dec
sbb
and
inc
and
sbb
mov
and
sbb
aad
push
dec
call
pop
jg
push
push
lds
test
sub
xchg
inc
movsb
adc
or
push
repnz
icebp
std
dec
in
jno
outsb
insb
pop
jp
cmp
dec
cmc
dec
mov
mov
std
dec
ljmp
sub
jno
jmpw
push
test
jno
arpl
sbb
xor
sbb
push
mov
jmp
clc
lahf
lods
pusha
repz
jmpw
hlt
jne
jno
inc
mov
dec
pop
lds
inc
inc
sti
add
les
test
push
fisubrl
cmp
testl
pop
icebp
mov
mov
fadds
test
fwait
call
js
sti
pop
and
sti
xor
sbb
add
jmp
lahf
ret
into
adc
pop
rolb
add
les
adc
test
add
and
psubusb
push
js
inc
or
daa
and
inc
cmpsl
or
shr
xchg
data16
cmp
inc
mov
sbb
jb
std
mov
addr16
jge
aas
fwait
adc
testb
out
xchg
jb
addr16
in
and
pop
data16
sub
cs
cmpsb
std
xchg
jb
addr16
xchg
add
jg
inc
inc
jb
test
cmc
inc
add
daa
je
ret
jmpw
addr16
pop
or
add
fwait
adc
stc
in
jge
lret
pop
fwait
dec
icebp
pop
lcall
add
movb
dec
jle
adc
jl
pop
jge
add
push
jle
cmp
push
sbb
jo
jge
mov
jbe
js
stos
nop
mov
sbb
aaa
dec
xor
inc
cmp
jge
stos
mov
jnp
push
cld
lds
mov
jb
sbb
ja
jmpw
jecxz
jbe
in
repz
pushaw
dec
push
jmpw
sbb
add
add
add
test
xchg
sub
out
and
jmp
aad
ja
add
dec
pushf
out
mov
out
mov
sub
shlb
pop
sbb
inc
fisubl
jmp
jno
fbld
cmpsb
dec
cli
jmp
push
mov
jg
and
add
leave
addw
add
add
add
add
jl
xor
jmp
add
enter
in
testl
sub
add
enter
lahf
push
mov
aad
mov
adc
decb
pop
mov
pop
push
push
add
adc
enter
leave
data16
pop
jecxz
pop
enter
cmpsb
fisttpll
inc
leave
nop
cmp
xchg
push
pushf
sub
pop
xchg
pop
rcll
dec
and
add
add
add
addr16
icebp
xor
pop
add
nop
xchg
add
enter
mov
stos
decl
aad
adc
sbb
bound
out
in
or
mov
int3
rorb
sub
push
inc
push
fcoml
sub
mov
pop
addr16
jecxz
call
pop
add
addr16
jecxz
pushl
adc
add
add
add
pop
add
or
clc
add
sbb
in
in
add
sbb
sub
sub
pop
jns
pop
xchg
add
sti
mov
jo
ret
pop
mov
mov
jno
sarl
ds
scas
mov
in
jb
and
cmpb
jle
insb
aas
or
jb
pop
add
jge
cmc
add
pop
push
lods
jge
cmc
add
pop
imul
xor
sbb
push
arpl
add
jle
outsb
cmp
jo
les
adc
mov
ljmp
call
cmp
loopne
pop
cmc
jmpw
gs
ret
adc
lods
inc
sub
jmp
xor
push
add
push
jmpw
sbb
in
out
or
sti
rcll
enter
mov
addr16
mov
xchg
jmp
mov
data16
insl
sbb
in
or
sub
es
jns
jp
addr16
mov
jle
jno
data16
pop
pop
add
xchg
add
jno
xchg
ljmp
or
mov
cli
aas
sbb
add
inc
daa
and
dec
add
push
push
mov
push
jg
pop
mov
dec
push
pop
xor
push
inc
cmp
dec
scas
pop
or
mov
add
nop
fiadds
adc
inc
add
or
ret
jmp
scas
enter
aas
es
and
xchg
imul
rolb
jb
mov
js
pop
es
hlt
stos
or
cmp
add
mov
imul
push
and
or
loope
icebp
mov
out
inc
push
cli
call
pop
cltd
inc
xchg
gs
or
mov
jae
fldl
andl
jb
add
jb
loopne
jb
addr16
mov
addr16
xchg
mov
jnp
insl
lea
xor
jb
cmpsb
mov
ss
xor
jge
out
pusha
test
out
ja
xchg
les
xchg
jo
mov
fmull
ficoml
inc
dec
call
call
movb
imul
add
pop
lods
add
leave
out
cmp
add
stc
gs
addb
jge
jbe
stos
outsl
jl
xor
insl
push
fnstcw
in
sub
jmpw
jg
dec
pop
sbb
sbb
sarl
nop
xchg
mov
add
dec
rorl
out
insb
shr
jbe
add
cmp
pop
movq
add
test
xchg
aam
shll
jmp
ss
outsb
retw
jae
aaa
je
test
push
mov
sahf
test
jle
lcall
and
data16
push
ljmp
aaa
jns
jbe
ret
and
orb
loopne
decl
dec
js
inc
add
inc
daa
and
cmp
add
sbb
push
shlb
sbb
fldl
addr16
or
or
test
sub
mov
mov
aas
and
mov
sub
fstl
fimuls
mov
mov
aaa
call
and
imul
jb
mov
mov
xchg
lods
psubq
mov
add
imul
mull
jmp
popa
mov
mov
mov
dec
mov
push
sbb
sub
js
jae
clc
into
and
mov
sti
pushf
call
add
xchg
mov
mov
jle
mov
aam
loopne
fnstenv
jb
call
cltd
out
std
push
cli
movsl
movsl
insl
rcrb
add
add
add
add
pop
out
jp
aas
adc
sbb
and
outsb
push
outsb
sub
xchg
cmp
adc
sub
mov
test
add
jb
imul
sub
and
pop
xchg
jnp
imul
jle
xor
sub
mov
fnstsw
aas
cltd
out
loopne
test
add
add
add
adc
xor
mov
jbe
mov
mov
ret
push
dec
push
cmp
stc
or
popf
mov
inc
dec
rol
mov
sbb
subb
pusha
scas
mov
mov
mov
inc
mov
sbb
fsub
cmp
nop
push
add
out
push
repz
jb
popa
xor
in
jns
imul
add
add
add
add
popf
pop
test
out
pop
repz
imul
inc
lahf
or
aas
sub
test
cwtl
pop
add
xor
adc
lds
mov
outsl
movsb
sub
inc
fwait
inc
dec
lods
jp
xchg
decl
push
pusha
mov
add
inc
sub
inc
dec
inc
push
jo
xchg
add
add
add
lahf
enter
sub
push
xor
ljmp
sub
fcoms
outsl
add
lds
add
xor
inc
lret
xchg
sbb
test
nop
sbb
sbb
aas
jne
js
call
mov
jp
outsl
aas
ja
jb
sub
outsb
sar
sti
mov
add
add
add
add
jbe
bound
addr16
fs
cmp
nop
sar
push
repz
xchg
add
cmp
adc
mov
jmp
sbb
dec
cli
or
xor
xor
fucomi
leave
add
popa
leave
ret
insb
pop
push
not
out
sub
fnsave
aam
and
sarb
pop
inc
xchg
mov
add
or
sbb
cmp
cwtl
pop
mov
mov
push
push
xor
xor
or
pushf
mov
jge
jle
and
hlt
fsubrl
xor
dec
inc
imul
movzbl
mov
jge
and
les
push
js
mov
scas
loopne
dec
xchg
in
sti
data16
add
data16
fisttps
psubsw
dec
dec
jmp
ja
or
fisubs
cmpsl
and
push
mov
and
lods
mov
adc
jno
jle
inc
push
bound
dec
jmp
mov
fucomip
test
stc
adc
jle
andb
data16
movb
add
add
add
add
out
jno
fbld
inc
divb
jb
pusha
fucomip
inc
gs
ss
mov
xor
xor
mov
ss
push
popf
call
push
or
dec
push
leave
int
cmp
data16
pop
mov
pop
mov
cmc
pop
popf
mov
loope
or
push
jbe
pop
jae
test
jl
shll
daa
and
dec
pop
push
push
push
popf
call
and
push
add
gs
into
xor
pop
cmp
popf
call
mov
xchg
mov
mov
neg
fwait
in
iret
jecxz
xchg
std
fmull
call
jb
mov
in
xor
jle
ljmp
sbb
pop
cli
incl
sub
xlat
pop
add
adc
rorl
repz
jb
loopne
dec
pop
fidivrs
out
and
insl
icebp
cmp
dec
cli
inc
adc
push
test
sub
or
pop
cli
sti
test
pop
je
sbb
jb
mov
add
cltd
in
pop
scas
cld
bswap
mov
jle
jb
or
add
lds
in
mov
shll
dec
leave
filds
arpl
enter
cld
dec
jge
xor
dec
xchg
stos
movsl
sub
jge
hlt
jge
pop
loope
insb
mov
scas
fwait
std
jb
adc
xchg
dec
icebp
fbld
jle
cmp
roll
adc
push
pop
loopne
push
lds
or
jmpw
test
add
loope
adc
lods
jmp
test
xchg
jmpw
adc
loope
sarb
xchg
jb
cmpsl
bound
ja
jmp
shll
cs
in
testb
jle
inc
bound
xchg
je
or
sub
int
lods
cmp
cmpsb
inc
bound
pop
fbstp
add
add
add
daa
and
test
popf
mov
arpl
pop
or
sbb
lret
mov
mov
leave
sbb
inc
sub
lock
hlt
inc
pop
push
xchg
pop
in
mov
xor
fwait
test
inc
mov
imul
mov
cmpsl
push
add
test
fwait
lds
add
scas
incb
mov
add
xchg
jae
jb
pop
dec
nop
bswap
xchg
call
jb
adc
sbb
cld
sbb
repnz
add
push
out
mov
in
dec
jg
addr16
xor
jb
add
xchg
out
mov
outsl
clc
lcall
push
add
adc
jmp
cmp
push
cmp
jmp
outsl
stos
movsl
test
jne,pn
sahf
pushl
imul
out
imul
mov
stc
movsb
outsl
inc
or
mov
out
fisubrl
mov
xor
push
mov
mov
xlat
pop
fdivrl
or
aam
cli
mov
adc
cld
jg
xor
mov
popa
stos
mov
inc
stos
mov
testb
xlat
push
cmpsb
int
xchg
movd
sub
mov
jge
out
push
cmp
leave
add
dec
adc
sbb
mov
pop
mov
sarb
pop
jmpw
aaa
out
sub
outsb
inc
mov
mov
jmp
add
add
add
add
inc
sub
pusha
push
bound
xchg
xor
pop
push
adc
in
rcll
rcrl
lods
pop
fsubp
out
cwtl
loope
push
loope
pop
notb
and
fistpl
dec
scas
imul
and
push
mov
pop
jmp
mov
push
add
cmpb
add
lods
call
pop
add
pop
outsb
xchg
adc
or
mov
dec
xchg
mov
cmp
testl
and
insl
pop
call
push
mov
push
add
push
mov
or
cmp
jp
mov
pushl
shl
lods
out
mov
leave
jge
add
arpl
xchg
mov
and
jle
int3
xchg
orl
addr16
inc
mov
jb
mov
mov
scas
gs
jb
push
outsl
xchg
jle
jnp
cld
outsb
lcall
pusha
scas
push
cli
into
int
jmp
adcl
mov
or
or
rolb
add
add
add
add
out
stos
notl
cmp
pop
xorb
popl
insl
scas
dec
add
push
js
icebp
cli
fcomi
jg
out
add
jecxz
jge
in
hlt
test
ret
ret
lret
and
mov
movsb
sub
adc
dec
jno
add
in
scas
clc
pop
add
movsb
sub
pop
or
xchg
mov
in
jns
inc
sbb
gs
add
jge
sub
or
or
push
scas
cmpsl
add
mov
dec
jns
lods
xchg
xchg
add
mov
mov
jmp
xor
xchg
push
repz
cld
sbb
pop
dec
jo
add
push
pop
jbe
xchg
adc
lret
dec
mov
sti
xor
jmp
xor
and
inc
pusha
push
test
imul
jne
out
lods
or
pop
cmpsl
dec
sub
jns
xchg
std
aad
jle
jle
xchg
sbb
dec
and
jp
xchg
adc
fldl
fbld
test
arpl
pop
test
dec
outsl
lret
add
nop
mov
bound
inc
fisttps
adc
sbb
and
sar
dec
shll
sub
push
lods
imul
data16
aas
insb
sub
mov
or
movsl
cmp
and
jne
push
scas
int
dec
scas
and
jle
jno
test
pop
push
jp
jb
mov
popa
popf
push
icebp
stc
adc
mov
nop
aas
test
mov
sbb
push
dec
xchg
pop
outsl
cwtl
test
aas
test
and
inc
xor
push
jmp
in
jnp
rcll
cs
outsb
aam
mov
push
inc
cli
jmp
jmp
add
adc
add
mov
adc
fcmovu
push
cli
mov
in
xchg
popa
pop
sti
icebp
imul
out
test
in
lea
jl
mov
sbb
test
fists
mov
test
add
mov
sub
mov
or
add
mov
rol
jge
nop
inc
adc
icebp
jge
jb
mov
jg
push
jge
lcall
clc
testb
jb
dec
loopne
mulb
xor
dec
mov
lds
es
lsl
mov
pop
jns
pop
push
addr16
sub
push
xor
add
push
or
lds
sbb
mov
dec
int
inc
mov
jmp
xchg
repz
or
ljmp
pop
add
mov
jne
jge
xor
dec
cli
jo
bound
mov
inc
and
inc
sbb
pop
inc
sbb
adcb
inc
test
and
inc
sbb
repnz
addb
add
add
add
add
pop
inc
adc
push
in
shl
mov
push
lahf
nop
mov
ret
mov
dec
inc
cmp
aam
std
sub
scas
or
rcrl
mov
shll
mov
xor
mov
sbb
cmp
das
xorl
pop
and
popa
lea
das
jle
add
sub
outsb
bound
lea
sub
add
push
sub
outsb
test
in
or
add
jnp
call
mov
insl
cld
cmp
mov
push
rcrl
mov
insl
pop
lods
mov
push
ret
mov
movsl
inc
aaa
sbb
pop
addr16
add
push
aaa
sbb
pop
dec
adc
lds
div
add
jg
mov
test
rcrb
mov
push
daa
pop
push
movb
jbe
xchg
fs
mov
add
test
divl
jle
or
jge
fisttpll
scas
insl
popl
divb
cmp
jle
in
jge
add
inc
jge
jb
movsl
add
xchg
inc
add
pop
and
cmp
test
outsl
or
jp
dec
stos
add
mov
jmp
jae
push
jb
cmp
mov
jmp
orb
fdivl
or
pop
cltd
out
je
pop
bound
jae
add
popf
pushf
pop
test
outsl
or
push
out
jno
pop
das
cmp
jg
es
addr16
push
stc
dec
mov
pop
test
jmp
xlat
leave
sub
clc
out
pop
lret
adc
xchg
jmp
adc
inc
fcmovnu
nop
add
or
into
mov
inc
lret
and
loop
test
dec
lret
add
mov
inc
mov
lahf
pop
ffreep
mov
adc
iret
loope
push
js
adc
sub
int3
into
push
adc
xor
out
pop
shufps
cld
int
enter
xchg
add
jb
mov
cld
jb
adc
jle
daa
pop
inc
mov
mov
add
pop
push
xchg
push
mov
pop
insl
add
outsl
stos
pushl
nop
out
jmp
out
or
ret
cs
subb
inc
jb
int
xchg
lcall
and
pop
push
push
mov
push
jg
add
push
xor
pop
insl
add
outsb
stos
pushl
xor
or
or
xchg
jnp
push
insl
or
bnd
xor
jle
call
sub
dec
add
sti
or
and
imul
add
fwait
jnp
cltd
rolb
push
mov
sbb
lds
and
cmp
jo
or
repnz
mov
jle
pop
mov
fildl
add
add
add
push
jge
sbb
mov
data16
mov
dec
sbbl
jns
add
data16
scas
sarl
pop
sub
ret
mov
ret
stos
dec
cmpsb
mov
dec
pop
mov
xchg
xor
fildll
jle
sbb
mov
cmp
mov
sahf
mov
arpl
add
add
add
pop
cmp
xor
add
dec
mov
xchg
ficoml
int
cmpl
mov
push
add
inc
adc
and
adc
pop
inc
stos
sub
inc
shrl
or
shll
jne
sbb
inc
push
jp
lret
dec
cmpsl
or
add
sbb
cs
int3
in
cwtl
cmp
cs
add
movsl
xchg
decl
insb
add
test
cmp
xor
or
and
inc
outsl
leave
cmpsl
pmulhuw
ja
mov
add
imul
jb
loop
fs
inc
pop
jae
mov
stc
and
std
ljmp
add
fwait
jle
jae
fcomip
sub
xor
add
or
pop
mov
addr16
stc
fisttpl
cmp
test
dec
pop
xchg
cwtl
xchg
call
imul
fsubrs
push
stc
fildl
test
nop
out
je
dec
inc
inc
sub
jl
pop
out
lea
add
jge
aad
xchg
push
xchg
js
dec
mov
pop
sub
jge
inc
pop
shll
or
int
dec
repz
sbb
ficoms
dec
inc
jge
in
pop
add
movsl
inc
loope
jo
jge
inc
pop
jge
cwtl
dec
add
cmp
and
icebp
test
pop
cmp
add
add
add
add
fists
call
shrl
mov
or
xchg
push
loop
je
cmpsl
jbe
pop
cmp
lds
lea
sbb
push
jg
test
xor
jno
out
jne
inc
lahf
xor
sbb
cltd
gs
mov
push
insb
ret
sbbl
inc
insb
jne
jno
and
dec
xchg
push
xchg
mov
das
push
inc
leave
inc
ret
loope
outsl
push
es
bound
pushf
pop
nop
call
jbe
adc
rorb
fs
rcl
mov
mov
insb
inc
or
sbb
dec
adc
adc
push
cmp
nop
adc
pusha
mov
negb
push
add
mov
rcrb
push
in
repz
cmp
mov
or
andl
loop
dec
adc
icebp
jb
jmp
mov
ret
dec
and
mov
jno
out
lahf
sti
adc
sbb
stc
xchg
fmulp
dec
cmp
stc
xor
or
aas
sbb
mov
jmp
fistpll
dec
add
lea
mov
fiaddl
pop
stc
in
cmpsb
and
and
pop
loop
mov
ret
xor
dec
mov
outsl
xorl
xchg
jmp
mov
rcr
cmp
in
out
imul
outsl
jge
jmp
hlt
xor
push
jb
jge
xor
stos
sti
add
dec
jge
dec
jle
sbb
cmp
sbb
repnz
test
add
xchg
mov
clc
inc
mov
sbb
dec
lods
sub
rcrl
stos
test
daa
jns
jp
pop
mov
test
mov
divl
test
jge
jb
bound
adc
mov
or
dec
dec
xchg
jmp
add
add
add
loope
dec
mov
shll
es
js
ds
jmp
jb
mov
inc
bound
add
xlat
stos
ss
mov
inc
cmpsb
fdivp
inc
jmpw
sub
push
push
bound
movsb
jb
mov
add
fiaddl
xor
imul
test
add
dec
filds
add
sahf
call
adc
in
dec
ja
or
add
data16
addr16
push
jmp
jle
pop
ret
mov
adc
sub
aaa
arpl
mov
mov
cs
sbb
bound
push
sbb
dec
mov
ja
push
mov
add
add
add
add
cmp
test
cmp
lods
pop
and
adc
push
xchg
rorl
jb
fwait
cli
lods
aaa
outsb
jae
insl
loop
inc
enter
push
mov
stc
pop
gs
outsb
dec
outsb
loop
je
mov
pop
in
push
loop
idivb
movnti
outsb
pusha
outsb
dec
mov
daa
je
mov
push
cmpsb
adc
jb
pusha
outsb
dec
add
daa
je
cmp
and
pop
push
lahf
sub
and
mov
jnp
stc
jmp
das
inc
mov
loopne
cmp
mulb
data16
dec
movb
inc
push
hlt
nop
xchg
or
cmp
movsb
dec
mov
gs
jb
cltd
inc
adc
push
mov
mov
test
pop
inc
sub
hlt
xor
add
add
add
add
xor
nop
push
mov
rcr
lods
cmp
fimuls
ret
add
inc
in
out
testb
ret
std
jge
je
movsl
push
call
dec
lods
push
dec
sbb
aas
xchg
scas
add
pop
add
mov
insb
mov
and
repnz
xchg
jle
frstor
add
lods
insb
pop
inc
fucomip
int3
aas
ss
call
lret
xchg
mov
test
xchg
ss
inc
outsl
sub
jns
data16
adc
mov
cmpsb
out
cmpsl
push
jno
cmp
jl
call
cli
out
jmp
mov
inc
pushf
enter
or
push
add
ja
adc
shll
sub
jb
incl
inc
cwtl
mov
xor
repnz
push
fldlg2
call
mov
add
es
add
cmp
cli
xor
rcrb
in
fbstp
dec
mull
data16
nop
mov
fistl
push
xchg
xchg
sbb
push
adc
inc
lods
add
push
adc
ja
jb
in
cmp
rcll
std
aad
mov
ficoml
outsl
xchg
and
jns
push
mov
jns
cmpb
test
loopnew
push
cmp
fdivr
es
gs
cli
ret
dec
mov
mov
imul
push
cmp
ret
and
xchg
aas
sahf
cmp
jp
adc
add
mov
and
lret
add
sbb
adc
pop
mov
mov
sbb
sbb
pop
call
mov
push
call
cmp
dec
adc
aaa
adc
and
mov
mov
clc
add
cmp
cwtl
xor
add
add
add
mov
jge
xor
or
sbbl
add
jge
in
adc
mov
mov
addb
add
add
xor
add
mov
push
es
outsb
cs
shll
dec
or
cmp
mov
xchg
jmp
pushf
ss
aas
mov
leave
pusha
xchg
es
jmp
add
add
add
outsl
bound
and
test
ss
andb
inc
xchg
jmp
repnz
dec
stc
in
cmp
mov
jmp
cli
pusha
dec
sub
dec
dec
pop
mov
cli
jg
fs
add
adc
and
sbb
mov
daa
arpl
lds
pusha
inc
loop
ja
xchg
incl
lret
jns
lock
or
ja
sbb
mov
loope
push
popa
aad
xchg
mov
xchg
lcall
out
jmp
loop
dec
mov
or
lcall
and
ret
sub
add
aaa
ljmp
cmp
push
mov
data16
cld
mov
iret
nop
mov
adc
and
add
add
add
addr16
out
ds
adc
jae
xor
push
jne
jne
sub
in
jne
sub
push
in
repnz
mov
and
std
sar
xchg
xchg
aas
jb
adc
adc
push
icebp
push
ja
mov
call
xchg
add
add
add
add
add
mov
cli
jne
sub
jo
icebp
into
xchg
test
add
push
dec
sbb
sbb
push
shr
fwait
add
aaa
cmc
lea
subb
add
fldenv
fwait
repnz
mov
outsb
adcl
jb
in
mov
in
jnp
loop
addb
add
add
add
add
loop
mov
xor
inc
fs
sub
sbb
fwait
dec
leave
inc
repz
addb
shl
cs
bound
bound
jmp
dec
insb
ljmp
jmp
jge
cmp
add
int
divb
jp
xchg
cmc
or
addr16
fisubl
mov
add
add
xchg
scas
cmp
dec
stc
loope
pop
xchg
out
fbld
lcall
sbb
cmpsb
fsubrp
aam
data16
adc
bound
add
les
jmp
fsts
sar
mov
nop
pop
in
cmp
dec
dec
xchg
decl
mov
mov
jg
sbb
push
fadd
orl
add
mov
cmpsl
call
push
add
je
leave
nop
push
jb
or
rdpmc
ljmp
jnp
push
push
mov
ss
hlt
mov
add
cmp
out
aam
mov
mov
sub
jb
inc
mov
sub
push
mov
loope
add
aas
push
add
mov
and
jecxz
or
nop
push
jb
push
xchg
mulb
lcall
into
dec
dec
add
push
mov
leave
and
jl
cli
jmp
sub
outsl
out
pop
cli
jmp
sub
stos
and
mov
cli
jmp
adc
add
add
add
xchg
aad
inc
push
jo
hlt
xor
xchg
out
push
xchg
xchg
fiadds
push
ror
mov
ficomps
ds
dec
icebp
out
jmp
out
mov
jle
loop
dec
in
jge
or
or
cltd
cmp
loopne
xchg
or
xchg
xchg
daa
clc
cmp
cmp
inc
insl
dec
jno
lea
loopne
cs
cmp
xchg
fdivr
icebp
inc
jge
jb
in
clc
mov
bound
inc
test
jno
out
jb
out
push
loopne
cmp
sub
mov
imul
jmp
jno
add
cmp
insb
xor
outsb
cltd
rclb
jmp
sar
cmp
add
stc
mov
call
jb
in
std
in
roll
xchg
adc
jne
es
lret
fdivrl
or
pop
into
lahf
pop
les
sahf
orb
add
ret
lods
int3
in
push
ja
into
pusha
add
mov
nop
test
mov
mov
lea
xlat
pop
daa
test
ret
data16
stos
push
fmull
xor
push
inc
je
push
inc
xor
push
inc
dec
mov
push
jmp
jae
call
sbb
mov
mov
jmp
jb
mov
inc
sbb
pop
sarl
mov
jne
ret
cli
inc
test
and
out
adc
mov
pop
scas
je
ret
add
sub
addl
push
and
sub
popa
in
lsl
out
into
sub
icebp
in
scas
mov
mov
addr16
imull
xchg
add
lcall
and
sbb
and
adc
mov
jg
les
cmc
mov
outsb
mov
js
pop
add
add
dec
adc
jb
sbb
xchg
lret
mov
dec
cmp
add
or
and
or
in
lcall
push
cli
jne
inc
jge
sub
js
mov
xchg
adc
add
jge
add
mul
push
add
add
add
mov
mov
sub
mov
dec
pop
cmp
cltd
dec
mov
add
sbb
call
mov
pop
insl
dec
mov
call
cmpsb
jb
sub
dec
cltd
int
outsb
adc
jae
push
cltd
mov
mov
cmp
cs
shrl
pop
add
fs
and
lods
xchg
push
cltd
dec
add
sub
lret
enter
les
and
mov
add
imul
je
pop
mov
in
sbb
xchg
je
mov
mov
inc
orb
xchg
test
loop
outsl
mov
decl
loop
outsl
sub
call
add
int3
pop
and
lret
jp
or
xchg
push
je
inc
adc
movl
in
sbb
test
lret
inc
jbe
and
xor
lds
imul
movsl
stc
xchg
out
ljmp
lcall
or
cmpsw
xorl
xchg
sub
add
add
add
add
into
rclb
xchg
sub
orb
pop
cli
sub
jecxz
mov
add
add
add
stc
add
dec
push
dec
and
ret
aaa
push
test
xlat
xor
jg
mov
lea
lret
add
dec
loopne
push
dec
popf
xor
movsl
add
dec
loopne
xchg
or
mov
js
pushf
adc
jne
rolb
or
jb
aas
sti
push
fwait
sbb
repnz
add
sarb
notb
sbb
cmp
cltd
or
xor
mov
out
jge
xor
add
push
inc
sti
xor
scas
and
add
xchg
out
addr16
jecxz
sub
cmp
jecxz
mov
outsl
imul
cmp
xchg
jb
push
fsubrl
dec
popf
jmp
jno
ljmp
cmp
jmpw
sbb
andl
mov
inc
push
push
jno
ss
lods
xchg
jo
cs
aam
es
add
cmp
add
xchg
push
or
out
mov
data16
or
jg
push
fwait
lds
movb
cmp
add
les
sub
nop
lea
jmp
mov
daa
in
and
lea
popf
faddl
aam
jle
mov
filds
mov
rclb
scas
add
push
and
lcall
movsl
inc
add
sbb
inc
insl
les
adc
dec
lcall
sbb
callw
lcall
fucomp
in
sbb
notl
inc
inc
pop
sub
add
loop
les
jecxz
xchg
lods
push
jb
cmp
dec
fxch
popf
sbb
xchg
stc
icebp
gs
in
add
stos
or
out
fsubrl
mov
addr16
mov
test
push
and
mov
insb
add
cs
inc
loope
jb
jg
mov
cltd
je
dec
aam
add
add
jge
aas
xchg
add
shr
mov
ljmp
jnp
mov
jb
or
ljmp
add
jns
xor
add
add
jnp
sub
jb
or
ljmp
mov
cwtl
addr16
sub
mov
mov
inc
cmp
add
test
xchg
jmpw
sub
push
inc
pop
mov
jno
xchg
mov
hlt
in
gs
add
add
add
sub
xchg
inc
cmp
sub
cmp
xchg
xchg
cmp
iret
gs
push
inc
cmp
inc
das
sbb
and
out
cli
sub
jno
sbb
dec
inc
xor
movsl
cmc
je
out
sbb
pusha
shl
inc
and
negl
out
arpl
jno
cmpsl
pusha
stos
loop
add
and
pop
add
jmp
add
stc
sbb
ret
lods
add
sub
or
adc
leave
out
pop
cmpsl
jmp
mul
jb
neg
data16
lods
pop
mov
cmp
aaa
or
lea
shlb
popa
sub
call
jno
jmp
sbb
pushf
cmp
and
inc
lahf
call
add
add
add
data16
orl
pop
sbb
jb
push
inc
scas
daa
add
jno
sbb
ja
add
sub
mov
daa
xor
mov
inc
test
popa
xchg
stc
in
sub
xor
xor
pop
push
int
jb
rorl
mov
jbe
ss
in
popf
je
test
shll
push
stc
test
add
jmp
xor
test
aaa
or
fdivrs
xor
test
stc
mov
loop
cld
loop
mov
and
mov
shll
xchg
sbb
cwtl
test
not
dec
push
jp
push
add
into
mov
push
pop
out
jmp
repnz
andl
dec
nop
int3
sub
add
aas
mov
add
cmp
push
inc
insl
sbb
lods
test
les
out
lods
jle
jb
push
fdivrl
push
lret
sub
push
dec
jo
addr16
andw
data16
jp
movsb
sbb
dec
movl
fs
jmp
bound
and
add
cmpsb
out
iret
gs
out
xchg
inc
out
jmpw
shr
leave
inc
sub
push
inc
pop
fisubs
mov
test
jbe
scas
mov
bound
sub
adc
inc
pop
cmp
das
xor
insb
lods
jmpw
xchg
add
xchg
lcall
test
out
cmp
repz
roll
dec
ja
push
into
inc
push
ljmp
lcall
push
mov
pop
add
inc
stos
adc
xchg
push
cmp
lea
cmp
xchg
push
or
lret
jmp
push
iret
inc
cmpsb
jne
cwtl
lea
jge
fcoml
add
add
fists
add
push
clc
pop
sarl
je
ret
imul
cwtl
mov
in
clc
test
data16
pop
push
add
mov
in
or
leave
aaa
test
cmp
jmp
and
es
inc
mov
stc
inc
or
js
lds
loope
mov
movsb
jp
inc
and
add
add
add
add
cmp
fcomps
loope
lcall
pop
daa
std
mov
stc
imul
jne
hlt
in
jmp
jg
stc
dec
sbb
stc
dec
pop
or
cmp
sub
sub
out
add
mov
stc
sbb
add
cmpl
stos
add
repz
jbe
mov
insl
add
xchg
cmpb
push
scas
inc
jb
clc
sbbb
jb
lcall
mov
xor
clc
ret
call
addb
push
fs
call
push
jmp
jbe
pop
jge
mov
insb
ss
jno
jbe
arpl
lods
jno
jns
add
data16
xor
cmpsl
jo
push
gs
inc
lods
pop
push
xchg
xor
jno
jns
addb
ljmp
xchg
adc
out
jmp
xor
cmpsl
add
adc
mov
decl
sbb
xchg
jp
retw
cmp
sbb
jg
out
pop
shll
mov
jle
add
sbb
orl
in
rcll
xchg
jmp
iret
ret
push
incl
test
xchg
lea
pop
push
bound
xor
jns
pop
scas
int3
cmp
and
icebp
push
aad
shlb
movsb
cmpsb
je
push
loopne
jno
aaa
stc
shll
xchg
stc
xchg
adc
das
call
add
add
add
jbe
jl
mov
gs
xor
addr16
mov
sahf
push
jl
stc
adc
cltd
sbb
cmpl
pushf
je
sbb
stc
xchg
rorl
in
add
mov
push
flds
xor
or
enter
shlb
add
mov
aaa
dec
and
add
insl
addr16
mov
cltd
mov
xor
mov
addl
push
pop
add
dec
mov
xchg
and
cmc
notl
cmc
enter
rorb
xchg
jge
pusha
mov
mov
cs
idivb
and
mov
rorb
push
and
cmp
insl
push
ja
aad
mov
add
or
gs
jmp
fs
pop
rorb
fbld
dec
cmpsw
jns
stos
cmpsl
mov
cmpb
sbb
cmp
cmp
jmp
dec
loope
and
jbe
dec
and
outsb
lcall
or
jmpw
xor
test
ret
jmp
jno
mov
jmp
add
add
add
add
add
imul
ljmp
jne
aas
daa
popf
je
insb
cmp
popf
xchg
mov
gs
inc
rcr
sbb
sbb
add
jmp
divb
loope
sub
lret
cmpsb
and
fwait
dec
dec
add
push
dec
inc
and
call
scas
add
movsb
jp
adc
add
add
add
es
push
bound
inc
sbb
or
mov
jbe
pop
loop
bound
out
addb
lds
push
in
mov
add
dec
fcmovnb
ljmp
pop
out
mov
stc
xchg
adc
das
adc
push
sahf
or
push
cwtl
shll
push
jb
scas
dec
add
test
sbb
lea
jno
jb
push
adc
icebp
mov
fbld
fdivp
out
adc
jmp
mov
push
loopne
ret
mov
jb
jge
fldenv
push
stos
cmpsl
je
mov
je
stos
shlb
push
add
pop
lahf
test
shl
cmp
add
jmp
xorl
add
add
add
sbb
lret
dec
lret
mov
icebp
mov
int
icebp
stos
aam
push
cmp
movb
mov
icebp
add
nop
int3
out
sbb
cmc
jnp
cs
ja
cmp
jb
add
jmp
dec
clc
dec
addr16
jb
mov
testb
jl
pop
mov
fildl
sbb
push
icebp
or
jg
jle
add
jle
loop
xchg
mov
dec
cmpsl
mov
pusha
jbe
sub
xchg
inc
je
stos
push
adc
pop
xor
jle
mov
xchg
imul
mov
insl
jb
into
ljmp
pop
out
xchg
sbb
jl
jns
jbe
stos
fst
mov
mov
add
add
add
add
xor
jne
cmp
inc
inc
and
movb
pop
mov
ret
cmp
imul
sub
inc
rorb
adc
or
mov
sub
add
lcall
dec
sbb
push
xchg
andb
xor
push
add
es
lahf
jno
adc
mov
fldenv
sbbb
adc
jmp
test
push
leave
popa
inc
dec
jg
push
inc
leave
lea
jb
xchg
mov
faddp
jg
adcl
add
add
fimull
jb
pop
jecxz
arpl
leave
sub
add
dec
data16
test
loop
add
jmp
into
cmp
jg
js
jb
push
sbb
mov
xor
xor
and
xchg
adc
das
call
sub
insl
jmp
sub
addr16
inc
jb
sub
xchg
test
dec
int3
jge
roll
jno
lods
inc
jge
or
cli
in
or
fbstp
xchg
mov
or
add
sub
add
or
addl
iret
ret
sbb
ret
mov
insl
sbb
adc
pop
in
popa
adc
faddl
add
ret
push
push
ret
xlat
sti
lods
push
cmp
in
dec
inc
mov
js
xlat
data16
pop
inc
scas
insb
add
popf
bound
xchg
xchg
push
in
lock
and
test
sbb
sbb
insb
pop
jno
cmpsb
xchg
fadds
jmp
push
xor
sbb
mov
dec
sbb
dec
push
outsb
movsb
mov
bound
jle
sbb
cmp
sbb
and
test
test
add
add
add
add
jmp
xor
inc
xchg
add
je
into
lea
nop
mov
filds
xor
lea
orb
lret
xor
pushf
decl
cmp
jae
inc
loope
inc
fildl
add
ljmp
icebp
push
mov
lcall
add
add
add
cli
jb
scas
sub
dec
sub
add
mov
arpl
das
out
es
adcl
call
sbb
pop
add
push
and
ja
fwait
adc
mov
sahf
add
push
and
outsl
addr16
fnsave
scas
je
dec
enter
cltd
callw
cmp
mov
cli
lods
mov
cmp
inc
jge
xchg
fdivrs
xchg
push
daa
add
bound
icebp
add
stc
push
ss
jg
loope
mov
sbb
loop
aaa
xchg
out
cltd
cli
sbb
jg
xchg
je
sahf
loop
jle
loop
fistpl
or
testb
cmp
and
add
sub
fidivl
or
lret
loop
cmp
jmp
or
clc
pop
insb
dec
icebp
push
sbb
out
jb
pop
lcall
xor
imul
and
mov
jmp
mov
xor
mov
cmp
pushw
loop
mov
mov
icebp
xor
int3
les
in
jb
adc
sbb
pop
jmp
loope
pop
mov
cltd
imul
adc
shl
dec
lds
jmpw
xchg
push
xchg
loop
jmp
mov
xchg
jmp
xor
jmp
xchg
jne
push
add
and
incl
mov
cmpsb
out
mov
add
jle
sub
test
movsl
insl
decl
fs
pop
dec
mov
dec
mov
lret
adc
roll
cmp
js
fisttps
jle
xchg
pop
rorb
adc
leave
retw
and
add
add
push
lea
mov
adc
inc
leave
adc
jle
sub
test
jb
das
adc
addr16
jae
push
jno
adc
ja
jbe
sub
jae
cmp
popa
data16
ljmp
mov
loop
or
jmp
add
and
mov
push
add
shlb
mov
dec
dec
lahf
cmp
jae
add
es
dec
push
inc
mov
aaa
test
cmpsl
mov
popf
sarl
neg
fwait
adcl
add
xchg
xchg
test
mov
or
cmp
inc
jp
or
out
outsl
push
mov
mov
in
add
or
jb
dec
fmul
adc
out
leave
pop
ret
pushf
jg
jge
gs
add
and
out
outsl
push
ljmp
jge
jge
push
fistps
mov
jb
out
enter
push
icebp
insl
jge
test
std
jl
test
notb
inc
fisttpl
movsl
jmp
les
sbb
sub
xor
xor
add
fdivrl
int
movsb
jno
ret
push
mov
mov
mov
pop
or
sbb
jp
dec
lods
je
sbb
repnz
xchg
jns
sub
ljmp
iret
or
push
ljmp
mov
jbe
je
fimull
add
sbb
lea
jbe
cmp
mov
sub
les
bound
xchg
popl
lcall
cmp
mov
ljmp
jmp
test
data16
pop
cmp
sbb
mov
mov
nop
lea
cwtl
out
mov
lea
rclb
sbb
out
add
cmpsb
je
ja
add
aaa
data16
xchg
addr16
addr16
out
stos
scas
sti
xchg
sub
aas
repz
mov
sbb
insl
fidivrl
mov
mov
call
negb
push
icebp
mov
in
jnp
dec
sub
inc
push
scas
xchg
mov
xorl
lcall
mov
out
aad
in
stos
stos
je
fsubrs
push
xor
jge
cmp
je
xor
xchg
xchg
outsl
xchg
mov
xchg
imul
pushf
loop
xor
sbb
pop
pop
outsl
les
jo
int
mov
cmp
and
jb
into
imul
dec
add
setb
popa
xchg
cs
or
dec
jp
add
jb
ret
inc
out
inc
loope
sarl
or
jge
sarb
insl
jb
xor
jns
mov
nop
stos
lret
fisubrl
lods
xchg
into
loope
icebp
jmpw
adc
xlat
rcll
mov
mov
mov
xchg
fs
jbe
adc
add
nop
or
xchg
jmp
add
add
add
mov
mov
mov
fistpll
outsl
push
xchg
push
mov
pop
scas
push
and
sti
and
jno
and
adc
popf
jb
into
movsl
dec
push
daa
push
leave
adc
imul
lret
ret
in
das
sbbl
cmp
adc
dec
int3
jmp
incl
mov
inc
adc
mov
and
add
mov
lea
pop
cmp
mov
mov
sahf
add
ss
enter
dec
fimull
lcall
cmp
push
mov
testb
lret
cmp
je
in
jno
addr16
jnp
add
in
add
test
call
lds
jb
in
jb
add
fdivrp
jno
addr16
jmp
pop
addr16
or
jb
ffreep
mov
push
mov
add
add
push
arpl
dec
fs
mov
mov
dec
aam
stc
xor
pop
loope
or
addr16
fwait
data16
jb
push
xchg
lds
add
mov
jns
xor
jle
and
notl
cmpsl
pop
cmp
xor
jbe
dec
ss
add
or
inc
ss
addb
xchg
repz
jb
lods
nop
lock
jge
jb
sbb
and
jge
stc
inc
sub
xchg
repz
jl
jb
les
add
add
add
add
clc
cmp
jb
sbb
xor
pushf
jmp
out
fyl2x
repz
mov
cmpsb
icebp
pop
sahf
push
jno
aaa
mov
jno
ss
mov
jp
scas
test
movsl
xor
sbb
xchg
ret
jno
push
out
mov
gs
jo
xchg
imul
cwtd
loop
mov
add
fiadds
mov
call
or
scas
das
inc
cmpsb
and
aaa
cmp
inc
fsubr
jno
ss
push
ss
pushf
push
out
sbb
scas
and
outsb
imul
iret
test
xchg
inc
pop
push
lret
or
cs
test
fcmovnb
lea
push
ret
lret
lea
sbb
popa
lea
cmp
adc
callw
nop
call
pop
push
sub
mov
ss
aad
xchg
decl
inc
sarb
aad
add
pop
cmp
and
add
pop
addr16
mov
jmp
xchg
sti
pop
add
push
pop
cltd
add
daa
push
clc
fmul
mov
out
pop
add
push
mov
out
stc
mov
mov
jnp
pop
cmp
movsl
mov
out
mov
xchg
adc
or
push
lods
or
jecxz
icebp
sti
mov
pop
sti
add
jecxz
out
lcall
int3
push
stc
icebp
lds
push
add
add
xor
mov
adc
or
jge
mov
push
clc
or
mov
imul
jno
fucomp
jns
hlt
call
and
xorl
jo
fisubl
loop
ss
or
xorb
test
inc
test
clc
loopne
divl
test
out
xchg
mov
repz
jle
jb
aam
jno
sub
sub
jbe
pushw
mov
push
test
jne
aaa
pop
popa
inc
lea
loop
pop
loopne
gs
sbb
jmp
xor
xchg
mov
loop
lcall
jmp
mov
hlt
push
jp
push
jb,pt
add
mov
loope
mov
xchg
jmp
mov
data16
loop
pusha
repz
fs
xor
mov
pop
gs
aam
pop
sarb
lea
cmp
and
sbb
cmc
in
out
jae
inc
fstpt
or
insl
rorb
push
xchg
pop
mov
rol
pop
pop
int
sbb
dec
ljmp
add
add
add
cmp
dec
ret
mov
leave
add
pop
mov
push
cmp
and
mov
push
adc
out
hlt
mov
push
in
add
xor
push
xchg
jbe
sub
add
addr16
xchg
xchg
aas
jb
scas
orl
mov
sub
popl
sarl
rcl
sti
add
lods
adc
and
add
mov
inc
dec
ss
loop
scas
cs
insb
mov
filds
sti
or
idiv
sbb
pop
push
mov
push
stc
fsubp
dec
dec
out
push
or
scas
xorl
imul
jae
jmp
add
addl
test
mov
dec
add
jge
add
pop
adc
bnd
push
ret
rclb
push
add
push
dec
xchg
cmc
popf
add
jge
inc
repnz
aas
jb
xchg
jae
xchg
xor
outsl
xlat
loope
out
fidivrl
or
mov
lock
add
push
inc
in
jo
jge
loop
ret
shll
cs
imulb
stc
jl
in
sbb
cmp
add
dec
sub
movsb
fisubrs
jmp
cltd
jmpw
cmp
es
imul
int3
out
data16
sbb
addb
cli
icebp
orb
jp
jle
mov
fdivrl
es
xor
data16
sti
fisubs
xchg
cwtl
fistpll
mov
push
xor
fildll
add
add
add
jbe
mov
xor
xor
int3
or
mov
lret
mov
stc
mov
mov
mov
cmp
adc
pushf
sub
fs
loopne
pop
mov
sub
dec
push
shlb
inc
jmp
xchg
mov
out
mov
inc
aaa
lret
jmp
dec
enter
bound
fcmovnb
test
pop
lds
lret
cmp
data16
adc
imul
inc
lahf
dec
sub
add
inc
xorb
xor
pop
add
mov
hlt
xor
add
xchg
loopne
push
addr16
imul
sub
or
add
inc
enter
dec
mov
popa
in
dec
add
pop
cli
sbb
mull
je
sbb
add
ljmp
xchg
incl
pop
and
cmp
and
xor
data16
sbb
jbe
jg
jb
jg
pop
jp
cmp
mov
mov
or
jnp
lods
adc
pop
mov
movb
add
add
add
add
outsl
les
jb
sbb
mov
cmp
negl
out
dec
mov
dec
rorb
cmc
mov
mov
mov
aad
push
jl
mov
in
xor
idivl
mov
mov
add
daa
jle
sbb
jno
insb
repnz
je
stos
hlt
add
call
andl
add
outsl
data16
or
xchg
cltd
insl
pushf
das
xchg
mov
xchg
hlt
lock
out
adc
jmp
inc
dec
movsb
cmpsb
imul
sub
inc
xchg
and
fisubs
push
insb
loope
xchg
dec
imul
sti
xchg
xchg
dec
in
sub
jg
dec
and
jne
xor
and
cmpsl
in
jno
adc
hlt
push
xchg
sub
jge
add
orl
add
add
lret
lea
sbb
add
test
push
xchg
insb
mov
dec
or
mov
jmp
dec
outsl
jmp
or
jle
mov
adc
data16
sub
sbb
and
xchg
pop
andl
call
add
xchg
insb
mov
inc
loope
fstpt
or
loop
add
jp
sub
rorl
or
loopne
add
push
and
fs
call
mov
mov
in
jb
dec
out
dec
adc
js
test
sbb
jb
cmove
cmc
ljmp
xor
test
pop
mov
mov
inc
xorl
pop
stc
xchg
jmp
stc
adc
push
sbb
mov
add
jne
cmp
jb
jg
fidivl
ror
push
shll
mov
xchg
pushl
jb
pop
jle
aad
pop
out
out
fdiv
andb
inc
out
adc
add
dec
inc
jnp
mov
lea
out
cwtl
fisttps
pop
inc
mov
add
jbe
push
inc
mov
xor
rol
cmpsl
mov
iret
sbb
stos
jp
add
aas
mov
add
jle
adc
push
stos
bound
mov
ds
inc
cmpsb
jb
mov
aad
jno
fldl
test
xchg
test
add
add
add
add
loop
push
adc
lods
mov
enter
data16
jle
cmp
jp
shll
adc
cmp
push
adc
clc
and
fldpi
mov
and
xchg
xchg
fsubrl
es
mov
fdivrl
out
add
and
jmp
add
data16
repnz
pop
orl
add
std
fisubrl
hlt
pop
mov
xchg
out
call
pop
or
data16
xchg
jmp
adc
sarb
sbbl
push
add
inc
notb
xchg
dec
adc
xchg
push
fstpl
dec
mov
fistl
dec
adc
mov
sbb
mov
inc
data16
cmp
add
or
jne
sti
pop
test
in
or
inc
icebp
inc
bound
xor
dec
stc
xchg
pop
pop
jbe
and
test
mov
scas
xor
bound
or
pop
stc
jg
fwait
aas
jb
sahf
or
lods
cmp
push
data16
jo
cmp
jo
cmp
jne
and
je
and
jbe
sub
xor
test
in
jp
cmp
inc
and
push
inc
push
push
pop
dec
sarb
pop
or
jmp
cmpsl
cltd
jae
xlat
shlb
dec
push
js
out
ja
jb
add
inc
cmpsb
xor
xchg
sbb
inc
cmp
mov
jb
cmp
inc
add
cwtl
aas
pop
jb
sbb
and
mov
lret
idiv
or
fimuls
mov
cld
xlat
aam
inc
cmpsb
sub
js
pop
mov
pushf
adc
hlt
arpl
and
push
jg
repz
je
fnsave
or
xchg
data16
jnp
call
test
mov
inc
lods
push
mov
mov
jge,pn
xor
dec
add
sbb
inc
fs
ret
and
in
jns
mov
imul
fbld
scas
cmp
shlb
call
nop
cmp
mov
hlt
sbb
sbb
movsb
mov
add
xchg
je
scas
pop
test
pop
sbb
and
mov
push
pusha
xchg
push
push
lret
iret
pushl
xor
inc
cwtl
jle
js
sbbl
cmp
ret
mov
inc
sarl
lds
jmp
add
js
xor
cmpsl
cmp
jb
data16
mov
imul
jmp
aaa
add
insb
stos
and
sbb
ss
pop
orl
lods
push
sbb
xchg
and
sub
xor
pop
cmp
push
mov
push
and
ds
pop
pop
adc
lret
stc
lods
imul
lret
popf
stc
lea
jns
sbb
in
cmp
inc
adc
jb
es
push
inc
and
cmp
add
std
dec
popf
leave
mov
aaa
add
push
bound
pusha
xchg
enter
adc
sub
add
shr
inc
pop
and
pop
and
sbb
mov
fidivl
mov
jge
dec
lret
inc
enter
dec
cmp
es
icebp
pop
xchg
add
add
add
out
pushf
mov
lret
pop
fsubp
loopne
cmc
add
jnp
cmp
jb
sbb
dec
jmp
push
lret
popf
stos
jbe
filds
jno
popf
cmp
orb
dec
dec
ljmp
pop
cli
out
cmp
sahf
orb
enter
imul
xchg
cmp
outsb
jae
in
repnz
dec
leave
add
jae
and
dec
or
pop
adc
stos
outsb
int
xchg
fbstp
xchg
cmc
xchg
ds
cmpsb
mov
sbb
das
repz
xchg
jns
cmp
or
add
enter
jno
and
jno
and
mov
rcll
dec
adc
mov
sbb
mov
push
in
or
pop
nop
mov
jmp
add
add
add
add
in
push
xchg
pop
inc
inc
stos
or
out
xchg
test
jg
push
movsb
aaa
mov
mov
bound
jae
jmp
mov
push
adc
jle
dec
or
test
push
pop
adc
cmp
movsb
aad
loop
hlt
adc
faddp
adc
push
or
fsubs
push
add
cli
xchg
adc
insl
addr16
les
xchg
push
xor
mov
adc
mov
stc
cmpl
js
and
push
push
jle
push
cmp
sub
es
pusha
cmpsb
sbb
lcall
jecxz
sbb
stc
ljmp
add
add
lret
popa
xchg
xor
mov
sbb
jge
inc
clc
sarl
leave
pop
mov
shrl
or
popf
xor
xlat
xor
push
mov
lds
or
xchg
aas
inc
and
stos
xchg
xor
std
in
cli
icebp
jmp
dec
xchg
dec
subl
ja
icebp
pop
dec
mov
sarl
stos
aas
lret
dec
call
cmp
lods
jge
ljmp
imul
ss
xchg
lds
jno
stos
fucom
icebp
xor
mov
stos
jp
daa
scas
fildll
mov
jb
stos
stos
jbe
adc
mov
inc
cmp
popa
shl
das
push
xchg
ss
imul
sub
stos
fldl
ljmp
lds
jle
mov
xchg
fs
mov
sbb
cli
out
sbb
push
xchg
add
push
fcmovnb
adc
xchg
ja
push
sbb
inc
xchg
jle
je
dec
lea
sahf
jmp
stos
ja
xor
mov
std
and
add
test
xadd
rcrb
add
add
add
add
jbe
inc
test
cmpsb
shld
shrb
lcall
or
xchg
jge
push
cmp
ja
into
andl
rol
aam
and
xor
shr
sahf
or
jae
add
push
mov
push
jmp
in
inc
jbe
mov
sarb
pop
xor
decl
out
push
lret
dec
fistpl
adc
pop
test
mov
stc
int3
sbb
icebp
add
je
popf
sub
test
bound
and
ret
outsb
and
xchg
mov
in
test
imul
ret
lods
mov
pop
mov
push
sbb
prefetchnta
jb
cmp
leave
adc
sbb
in
mov
mov
scas
add
ret
mov
mov
lods
sub
imul
lcall
push
and
sbb
jae
aas
aad
aad
fwait
mov
ja
lods
lds
sbb
iret
clc
outsl
pop
inc
inc
data16
fdivp
dec
divb
dec
jb
inc
imul
add
outsb
sub
dec
mov
jns
jno
stos
in
push
sbb
cmp
loope
jbe
popf
popf
imul
jne
fildll
push
clc
push
sbb
push
dec
addr16
cwtl
push
js
dec
inc
jl
push
pop
inc
nop
std
cmpb
imul
mov
add
add
add
add
pushf
cmpsb
stos
icebp
fnstcw
sbb
push
mov
dec
into
pusha
sub
fidivrs
push
or
fiadds
test
jne
push
and
sahf
jp
gs
pop
and
push
lds
hlt
mov
filds
ss
xlat
in
push
pop
iret
jbe
sbb
adc
pop
lea
pop
adc
sub
ss
add
data16
push
push
sbb
and
enter
stc
mov
hlt
xor
std
fcoml
or
sub
push
fmul
adc
push
sub
inc
aam
inc
pop
ss
lret
stc
int
xlat
and
fucomp
rolb
adc
pop
jmp
lods
jl
mov
test
aam
mov
popa
dec
and
ss
lcall
add
add
add
jge
cmpsl
jae
inc
jnp
jb
aam
jbe
daa
add
or
sar
mov
ljmp
sbb
hlt
sbb
inc
stc
and
fucom
mov
sar
xor
data16
mov
inc
rcrb
repz
inc
dec
add
jno
push
sbb
addl
sbb
aad
add
ror
ss
jle
add
imul
mov
leave
add
mov
cmpb
jmp
mov
mov
add
mov
ret
push
add
inc
cwtl
add
daa
cld
push
fistl
mov
sbb
in
xchg
fs
jbe
popf
loopne
loope
add
outsb
adc
loope
xchg
xchg
lcall
stos
add
bound
cwtl
push
fsubl
ftst
test
cld
xchg
sti
or
call
or
adc
pop
xor
enter
subl
xchg
stc
cli
or
call
or
add
add
add
mov
or
jecxz
jmp
jnp
xor
add
mov
inc
sbbb
cmp
cmp
mov
xchg
jle
aas
aaa
shlb
jne
cmp
test
mov
mov
pop
jmp
idivl
push
test
insb
push
sub
test
mov
push
cmp
fisttps
scas
sub
add
xor
in
rorl
xchg
and
rcl
push
jb
jecxz
stc
or
mov
sahf
hlt
jmp
jbe
inc
push
xor
imul
pop
xchg
decl
push
stos
ljmp
stos
fildll
rcrb
aaa
stos
out
add
test
sub
pop
leave
or
in
jo
push
and
lock
add
pop
xchg
fstpl
mov
jno
decl
adc
inc
xchg
stc
loopne
jo
mov
sahf
ficoml
call
popf
inc
add
mov
mov
add
sbb
popa
in
sbb
in
or
orl
push
cmpsb
add
inc
mov
sub
out
filds
mov
jge
out
jp
mov
mov
cltd
mov
out
add
jb
mov
pop
sbb
les
jb
flds
testl
fistl
jg
lds
lock
out
pop
test
jne
mov
dec
add
std
jge
jmp
xchg
fs
in
fisubs
lcall
add
js
inc
cwtl
jnp
in
jno
cmp
xchg
stos
jp
imul
call
sarb
cmp
jbe
fdivr
fsub
pop
fistps
fs
stos
call
xor
fildll
jno
inc
or
out
dec
out
jne
fisubrs
jbe
fldl
or
jmp
add
leave
pop
add
or
push
mov
gs
sbb
push
shll
jmp
ljmp
inc
xchg
sbb
int3
dec
jp
lock
pop
mov
fcompl
ds
xchg
push
out
nop
add
leave
mov
sub
sub
mov
jne
adc
das
mov
mov
data16
adc
jb
fstl
test
mov
cltd
jle
out
out
xor
add
mov
in
data16
cld
ficoms
jo
cmpb
divb
popa
test
fst
pushl
data16
test
adc
pop
push
and
lods
test
jb
and
shll
add
add
je
aad
xlat
mov
into
stc
lea
jmp
in
add
call
and
xchg
shll
mov
lds
jb
data16
jecxz
mov
jb
mov
sub
mov
aas
addb
add
push
or
fldt
mov
add
add
add
mov
add
mov
test
shlb
mov
int3
stos
arpl
xor
inc
dec
push
mov
mov
test
fdivrl
dec
rcrb
fidivl
loope
movsl
loop
lds
in
je
lcall
ss
stos
jno
sub
shr
fstp
fistps
add
add
add
cmp
xchg
xor
jb
dec
sub
add
movsb
sbb
rcrb
push
icebp
into
push
leave
test
push
rcrl
pop
jbe
leave
fbld
jo
and
cli
fucomp
aaa
fistps
in
test
add
sbb
movsl
inc
inc
push
inc
inc
mov
xor
cltd
leave
mov
add
add
add
shlb
std
inc
sub
jae
cwtl
call
adc
ja
add
rcll
and
pop
mov
filds
jns
hlt
xchg
mov
data16
lret
jle
inc
lret
pop
mov
adc
stos
ja
ret
sub
dec
cmpsb
rcr
jnp
dec
jb
mov
shr
data16
jge
or
test
in
jbe
jnp
mov
fcoms
sbb
add
mov
xorl
jmp
jae
callw
aad
jmp
mov
subl
adc
repnz
sub
dec
mov
pop
jmp
leave
sbb
adc
mov
jb
je
xchg
or
mov
pop
jmp
xchg
xchg
lret
fwait
mov
add
jle
cmp
out
xchg
jl
stos
gs
imul
insl
jl
push
fistpll
pop
fistpll
dec
fwait
mov
pop
repnz
mov
stc
pop
mov
ret
cmp
inc
call
jne
jle
test
add
fwait
aas
xorl
shll
ret
dec
repz
cli
jge
jb
jno
popa
push
xor
fwait
add
add
hlt
jae
and
jecxz
jl
outsb
bound
stos
jp
cmp
jno
pushfw
sbb
js
test
inc
fidivl
pop
stos
in
mov
cmp
sub
insl
inc
sub
add
push
sub
les
cld
insl
mov
bound
fstpl
sub
xchg
inc
inc
lahf
xchg
fwait
loopne
sahf
mul
jns
shlb
jo
data16
filds
jns
xchg
pop
lcall
mov
stos
or
or
pop
mov
pop
pop
jg
pop
or
add
popa
sub
pop
test
call
test
ret
and
popf
dec
sub
fildl
and
inc
xchg
xor
mov
pop
pusha
dec
stos
and
int
sbbl
and
pop
and
fdivrs
adc
dec
sbb
pop
cltd
jb
psubb
dec
dec
add
out
out
js
lret
jmp
in
add
push
and
stc
jp
push
lret
bound
shll
xor
out
outsb
bound
and
and
jae
xchg
inc
popf
in
inc
jae
data16
inc
or
outsb
pop
push
imul
out
push
mov
lret
mov
add
bound
stc
stc
cmp
cwtl
jmp
hlt
pop
mov
lret
dec
jno
pop
out
outsl
mov
fistl
ret
jp
das
add
push
inc
je
aas
dec
mov
icebp
out
dec
icebp
out
dec
icebp
out
out
mov
push
call
jge
out
andl
ret
imul
jb
or
dec
cmpsb
sbb
jbe
pop
add
add
inc
jge
enter
repnz
mov
das
imul
pop
adc
jb
push
jb
mov
fs
fsubrl
jb
bound
ljmp
xchg
jmp
stos
fcoml
mov
frstor
dec
jg
popf
add
xor
lret
loope
or
xchg
arpl
inc
mov
out
mov
negb
xlat
fiadds
cs
das
add
pop
adcb
pop
cld
mov
pushf
adc
cmpsb
jne
push
xchg
enter
call
dec
test
add
add
and
pop
mov
test
add
nop
push
pop
jge,pt
add
add
add
loope
call
add
jmp
jmp
jb
test
or
adc
push
and
ficoml
das
mov
fistpl
fwait
imul
pop
jae
mov
xchg
cwtl
out
sbb
or
and
push
je
fs
add
leave
das
aam
fwait
xor
adc
out
popl
fwait
push
dec
and
aaa
icebp
ret
lods
dec
or
shr
repnz
mov
nopl
push
test
push
jmp
fwait
jb
add
dec
mov
stc
mov
icebp
sbb
out
mov
repnz
insb
jne,pn
es
mov
out
mov
fisubrs
inc
iret
das
decl
fadds
out
or
cli
and
pop
shl
or
mov
fpatan
xorb
cltd
add
mov
push
and
xlat
jl
inc
out
adc
push
ds
push
mov
shr
or
xor
mov
inc
gs
cmp
test
xor
js
ret
add
push
dec
dec
iret
test
add
add
add
push
callw
xor
cli
sbb
jno
cmp
mov
and
sbb
fidivs
pop
frstor
add
xchg
jmp
inc
jmp
gs
xchg
jmp
mov
mov
ljmp
inc
xchg
pusha
inc
mov
sbb
or
cwtl
aaa
add
dec
cmpsb
mov
dec
sbbl
and
mov
adcw
shlb
xchg
decl
jecxz
jb
push
sub
pop
push
adc
jnp
lret
fcmovne
data16
pop
and
xor
jle
data16
pop
sub
aad
or
push
rorl
ror
out
add
fisubl
push
cmpsl
jmp
ja
cmp
pop
leave
add
leave
data16
dec
xor
cmp
add
sub
mov
jnp
xorb
dec
and
pop
imul
push
call
sub
push
xorl
pop
sub
jb
data16
fnsave
jg
inc
add
mov
fbld
jo
je
or
or
mov
popa
mov
xchg
popa
jns
or
dec
out
sub
aaa
int3
fwait
andl
jmp
rcr
insb
sbb
jge
xor
test
push
cwtl
mov
xorb
push
xchg
in
sbb
add
mov
mov
stos
jne
cs
aaa
add
jmp
adc
inc
inc
xor
cmc
jge
fidivl
movsl
lret
aas
dec
loopne
pusha
andb
inc
add
rol
jge
cmc
mov
movsl
mov
fistps
lock
inc
popa
mov
jge
or
jle
dec
int
insl
xor
push
add
stos
mov
flds
mov
ss
stos
mov
jl
rclb
subb
jne
mulb
jno
fucomip
cmp
outsb
cmp
jbe
gs
mov
bound
stos
dec
shrl
sbb
iret
dec
cmpsb
fisttpll
push
jno
sbb
add
add
add
pushl
repnz
fcomps
nop
fisttps
sbb
loope
filds
cmp
shll
lds
les
push
cmpsb
jne
ja
data16
cmp
cld
cmp
and
mov
loop
push
lds
ret
pop
pop
and
sub
pop
jp
fcmovnb
data16
xchg
dec
sbb
mov
test
dec
adc
nop
incl
test
imul
pushf
pushl
insl
and
sub
adc
es
mov
and
adc
stc
pop
jmp
inc
jb
rorl
xor
cli
and
fisubs
loope
out
dec
jge
movb
adc
stc
jmp
fimull
int
in
stos
in
fs
jecxz
stc
sbbb
pop
daa
test
mov
dec
inc
mov
stc
push
or
stc
jg
cltd
aas
jb
sbb
pop
jg
jb
inc
jb
jge
in
jge
jb
sahf
jb
fldl
xchg
sbb
sarb
xor
mov
add
scas
or
lcall
inc
jb
mov
mov
out
xlat
pop
dec
jb
sub
ret
mov
jg
mov
imul
ds
mov
movsl
iret
mov
ja
jge
mov
rclb
jmp
jecxz
bound
int
sub
xchg
mov
push
mov
cmp
sub
js
cmp
xor
mov
fdivp
cmp
pop
jmp
shrb
jns
aaa
aas
hlt
lcall
cmp
test
subl
testl
and
jns
and
je
and
jbe
cmp
mov
jle
xchg
mov
lock
add
add
add
add
and
shlb
sbb
orl
add
fmul
xor
xor
pop
enter
pop
or
mov
les
ret
sarb
clc
xor
xorl
pop
add
ja
cmp
cmp
daa
ja
push
mov
mov
jmp
int
cmp
xlat
leave
xor
test
sbb
push
sbb
pop
pop
jb
lds
xor
add
xchg
incl
and
out
es
inc
push
ret
ror
jge
testl
outsb
ljmp
sub
push
pop
xor
loop
pushf
pop
stc
sbbl
imul
mov
pushf
jo
bound
jae
outsb
mov
in
mull
idiv
insl
or
mov
stc
xchg
lea
jb
sahf
or
and
sub
shlb
je
mov
push
dec
mov
mov
scas
inc
jb
sbb
mov
int
mov
mov
add
jge
sub
push
mov
int3
add
scas
or
stc
mov
add
add
add
add
ret
mov
xchg
cs
iret
ret
mov
ret
mov
push
mov
mov
add
or
jb
jo
dec
cmpsb
data16
add
scas
xor
data16
xor
data16
pop
push
dec
out
cmp
and
test
xchg
test
movsl
add
xchg
sub
mov
movsb
mov
jge
loope
in
mov
in
push
or
cmp
cmp
or
mov
jp
insl
andb
outsb
das
and
pop
ja
add
arpl
add
lea
pop
popa
xor
movsb
jmp
pop
mov
pop
xor
add
add
add
add
das
xor
inc
mov
xor
hlt
stos
push
inc
sub
mov
jle
cmp
cmp
mov
adc
inc
insb
cmpsb
cmp
out
pushf
jl
filds
lcall
mov
pop
cmp
stos
push
push
lods
andnps
pop
ret
sahf
mov
cmp
jb
jns
add
icebp
jo
inc
lods
pop
stc
jg
fwait
aas
jb
stos
or
jecxz
lcall
movsl
dec
sbb
inc
add
cs
inc
call
fisubl
inc
pusha
jno
loopne
enter
aas
mov
out
cmp
add
jecxz
std
clc
lods
rcr
out
sbb
jnp
push
and
sbb
push
loope
in
add
sub
or
mov
add
fnstsw
cmp
jae
sub
into
xchg
jmp
test
in
dec
imul
inc
mov
addb
outsl
xchg
idiv
mov
in
jns
sti
clc
mov
add
jge
test
mov
fwait
imul
popf
cmp
filds
addr16
fistpll
cld
cwtl
dec
enter
cmp
stc
stc
testb
int
shll
enter
lret
gs
inc
lods
mov
imul
sub
data16
inc
mov
into
hlt
xchg
rolb
js
sbb
jp
roll
into
fsub
int3
fisubl
adc
jmpw
stos
sub
add
xor
mov
xchg
fiaddl
xchg
cmp
cmp
sbb
in
add
andb
test
ficoml
xchg
adc
ss
cli
push
clc
dec
mov
inc
jne
cltd
insb
pop
cmc
jmp
fbstp
inc
jp
xlat
ret
mov
mov
lods
inc
cmpsb
je
inc
jg
sarb
and
cmpsl
cmp
incl
dec
sbb
jg
mov
icebp
jmp
add
out
fiaddl
xchg
pop
std
or
jmp
push
std
pop
repz
add
in
ljmp
or
push
add
push
mov
shlb
out
jge
aad
jecxz
cmp
and
pusha
inc
push
popf
sub
sub
add
add
add
pop
mov
fisttpll
mov
jne
int
jb
in
xchg
iret
jbe
mov
jo
insl
xor
data16
stos
daa
xor
lahf
movsb
jmp
jb
data16
ja
add
das
repz
dec
jecxz
pop
fsub
add
cmpsb
jp
xchg
mov
cmpsb
cmp
data16
and
add
in
movsb
pop
out
stc
mov
or
adc
fadds
add
aad
test
inc
mov
test
jb
add
mov
adc
xchg
movsl
mov
xorb
xchg
sarb
push
subb
lods
cmp
dec
add
testl
push
lock
add
add
add
add
dec
dec
adc
or
pop
scas
outsl
xchg
pop
les
inc
mov
bound
dec
pop
inc
xor
xchg
adc
test
addr16
cs
iret
pushw
fidivs
enter
popf
adc
push
std
out
rclb
add
lret
add
jno
sub
jno
cmp
add
fldenv
jno
fldz
outsl
stc
movsl
cmc
andb
mov
ljmp
inc
fistpl
out
lock
sti
xor
orl
push
clc
cmp
imul
nop
pop
in
fadds
push
add
icebp
cli
das
retw
and
lea
and
pop
cmp
ds
pop
xchg
lcall
insb
outsl
stos
or
fs
rolb
pop
adc
cltd
popf
xchg
jb
dec
adc
dec
cmp
dec
and
popf
xchg
jne
inc
addb
jl
mov
add
shlw
ret
add
cld
test
test
sub
sub
outsb
sub
in
mov
cmpsl
je
push
scas
inc
add
js
xchg
test
pop
cmp
bound
jae
pop
jle
out
jo
loope
xchg
and
shll
insl
xchg
sti
stc
stc
or
psubsw
add
mov
popl
hlt
cmp
out
fs
leave
cli
test
push
push
lahf
fistpll
fisttps
pop
lahf
lds
std
lret
jle
adc
ret
cmpsl
inc
inc
sti
pop
into
jg
dec
in
mov
rcll
cmc
or
hlt
inc
movsb
out
lock
add
ret
aad
sahf
js
jne
pop
in
xchg
into
dec
or
test
inc
fstps
xchg
jb
jg
mov
daa
xchg
jecxz
popa
mov
mov
jbe
adc
out
fdivl
shll
jmp
dec
aam
in
dec
jnp
pop
rclb
loope
cmpsl
mov
dec
adc
sub
inc
rcrl
xchg
stos
inc
adc
sbb
push
loope
loopne
popl
sbb
cmp
push
repz
shll
mov
out
lret
push
jo
inc
and
sub
cmpsb
dec
aaa
lret
gs
dec
ljmp
loopne
stos
add
pop
or
dec
adc
add
jmp
std
aaa
mov
inc
addl
adcl
orl
andl
cmp
mov
pop
jne
cwtl
test
adc
mov
xlat
push
mov
push
adc
xchg
inc
dec
dec
pop
jl
pusha
pushw
lock
ror
andb
add
ror
add
movsb
and
inc
rcrl
mov
jb
adc
pop
test
xchg
lcall
aaa
hlt
aas
aam
jl
mov
je
mov
outsl
data16
mov
inc
xchg
iret
pop
push
mov
stos
mov
cmp
scas
popf
clc
jge
aad
pop
movsl
int3
cltd
aas
arpl
in
or
jmp
pop
pop
dec
dec
inc
mov
xor
jl
mov
jmp
lds
jle
sbb
xchg
xchg
adc
jg
mov
add
fimull
and
testb
aas
add
add
nop
jb
sbb
add
mov
leave
outsb
idivb
stos
and
test
mov
mov
sub
mov
aaa
dec
fisttpl
sbb
xchg
aas
xchg
js
sub
lret
sti
testb
jns
dec
ret
mov
inc
push
xor
jge
add
fsubrp
add
mov
fstl
add
mov
mov
imul
xchg
pop
vpxor
xchg
sahf
jbe
fildl
push
gs
test
push
std
sbb
sub
sbbl
dec
sub
popa
mov
xchg
adc
xchg
push
mov
fnsave
mov
pop
bound
mov
xor
add
add
add
sarb
or
or
pop
dec
jbe
into
pop
addr16
xor
pop
aas
adcl
fisubrs
hlt
mov
jmp
push
push
or
mov
or
sub
push
nop
mov
mov
cmpsl
je
imul
ja
dec
jbe
dec
pop
addr16
mov
inc
rcl
rolb
sbb
sub
std
xor
cli
lock
inc
pop
mov
fs
cmpsb
fldl
cmp
mov
adc
jb
sub
orl
and
ljmp
push
cmp
adc
adc
or
mov
inc
in
mov
xchg
cmp
rcrl
adc
mov
scas
decb
cmove
mov
addr16
lods
cmpsl
lcall
lcall
sub
jp
xor
aaa
mov
data16
bswap
jmp
mov
stc
imul
addr16
xchg
enter
dec
aad
addb
cld
jno
imul
jb
fs
xorb
xchg
xor
mov
xor
adc
call
xor
xchg
add
mov
adc
cmp
inc
sahf
fbstp
cltd
xchg
leave
stc
ret
fwait
add
cmp
or
dec
out
mov
cmpb
mov
cld
inc
pop
cmpsb
mov
out
inc
add
sti
mov
data16
cmp
cmp
int
sbb
mov
dec
xor
add
add
add
mov
jge
icebp
scas
pop
div
rclb
in
inc
ja
jmp
int
out
mov
dec
adc
in
xchg
pop
mov
fidivrs
mov
loopne
adc
iret
jmp
clc
mov
cwtl
scas
or
xor
fcmovb
icebp
adc
clc
push
test
addl
add
add
jmp
jmp
add
xchg
or
mov
xchg
cmp
add
nop
pushl
mov
cmp
mov
adc
mov
adc
lahf
lcall
add
cmpsl
mov
mov
fsubrp
dec
sbb
testl
lods
cmp
and
rcrb
add
add
add
stos
out
cmp
add
dec
dec
sub
in
mov
into
jb
push
cli
std
testl
jae
mov
inc
jb
fstl
into
mov
fwait
inc
jb
data16
sub
iret
gs
cmpsl
add
pushf
push
add
xor
inc
jb
fists
xchg
mov
inc
test
rolb
pop
and
stc
add
gs
xchg
mov
sti
inc
sub
addl
dec
push
out
adcl
in
adc
mov
jne
orb
add
or
inc
jb
jle
jb
mov
aad
or
int
dec
add
fcmovnb
cmc
insl
fs
mov
xchg
mov
fwait
stc
mov
sahf
sub
loopne
jne
insl
xor
dec
mov
hlt
xor
fstpt
mov
popl
js
dec
cmp
jp
xchg
inc
sub
cmp
mov
inc
call
test
jne
push
push
int
push
fstps
pop
add
inc
jecxz
sti
mov
jmp
in
inc
xlat
jnp
ja
data16
popf
or
hlt
scas
in
test
sub
dec
fstps
cmp
popa
scas
jl
sahf
hlt
data16
mov
push
pop
mov
sub
insl
ret
subb
mov
mov
jecxz
push
shlb
add
jmp
outsb
inc
jno
xchg
dec
xrelease
into
mov
rcr
inc
shrb
data16
sbb
jmp
gs
mov
fiadds
testl
hlt
fcmovnb
push
movsb
mov
adc
out
xor
in
cmpsl
je
cmc
fstl
fld
fwait
callw
call
xchg
mov
enter
push
in
orb
lds
lea
nop
incl
jb
dec
out
mov
jb
push
cwtl
sahf
je
jb
andps
out
xor
shr
push
std
xchg
testb
popf
jmp
add
ret
jmp
rcrb
dec
push
repz
test
jb
push
push
stc
mov
or
popf
mov
inc
into
pop
push
and
fld1
dec
and
stc
call
and
pop
push
ret
call
out
push
dec
push
mov
mov
std
shl
push
xlat
rol
cmp
push
xchg
addb
adc
xor
mov
test
sahf
push
es
mov
das
or
add
ja
pop
mov
jnp
mov
add
pushl
divb
ficoml
pop
test
andl
push
inc
push
aam
jb
shr
aam
add
or
xor
dec
ja
dec
push
cs
cmp
test
dec
addr16
addl
insb
and
sbb
out
aam
stc
mov
frstor
out
xor
ss
ss
ja
jno
cmpsb
popf
pop
dec
xor
divl
call
cli
les
add
add
add
pop
loopne
lahf
mov
xchg
dec
mov
addl
adc
ds
cmp
jbe
jl
jle
addr16
inc
cltd
cmp
xor
jmp
pushw
addr16
push
cmp
pop
dec
ljmp
inc
movsb
test
scas
xchg
test
les
push
push
cmp
xchg
inc
mull
add
add
add
pop
xchg
jmp
inc
ja
fldl
ss
xlat
out
push
mov
jbe
jmp
xchg
test
call
call
inc
sbb
sbb
and
inc
and
push
sub
lcall
mov
cmpsl
je
push
sub
lcall
jb
aas
add
in
stc
clc
sbb
pop
stc
add
xor
sbb
stc
fcomps
jbe
jb
sbb
test
push
push
jmp
push
add
dec
pushf
jo
inc
push
lods
mov
out
sub
jb
mov
jmp
insb
test
loopne
and
imul
test
shlb
push
mov
pusha
jge
leave
jp
pop
mov
aas
test
push
add
lds
jb
jg
movsb
jb
xorl
testl
dec
pop
loopne
les
or
xchg
idivb
sub
lods
mov
mov
vmread
jnp
jno
ret
add
xchg
loopne
adc
add
xchg
push
addb
jb
sbb
xchg
adc
loop,pn
fidivrl
lods
std
inc
push
inc
shl
clc
test
addr16
popa
pop
xchg
hlt
push
shlb
jmp
lcall
ljmp
fstl
dec
jecxz
out
das
inc
mov
xchg
dec
hlt
add
inc
push
xchg
aam
mov
sbb
testb
add
add
add
push
rcr
movsl
dec
lret
jns
outsl
push
fadd
jecxz
xchg
into
jle
ds
xchg
xor
js
stos
call
std
ljmp
xchg
add
nop
call
std
jle
fsubrs
mov
mov
pop
add
cs
xor
mov
enter
and
les
nop
jne
ds
lcall
mov
add
add
add
add
mov
pop
jmp
bndstx
xor
sbb
lret
inc
cmp
jne
inc
lahf
push
sub
jle
out
sub
call
pusha
add
pop
out
ss
cwtl
cmp
lret
pop
mov
stc
pop
lods
loopne
popf
ljmp
icebp
pop
bound
push
sbb
pop
push
push
push
add
add
add
ffreep
fisubrs
enter
jp
push
sub
ret
xor
jb
test
lea
out
fsubl
xor
stos
clc
xor
mov
add
popf
mov
out
fsubl
mov
stos
clc
mov
test
xchg
les
stos
lds
inc
imul
insl
stos
mov
add
add
add
sub
ret
and
jo
pop
jge
inc
jnp
mov
or
push
sbb
xor
ret
dec
out
xchg
jge
ret
jg
mov
adc
cmp
pushf
xor
mov
ret
sbb
fsubl
jbe
jg
or
mov
or
ljmp
mov
or
jnp
addr16
jmp
fldl
mov
jecxz
jle
cmpsb
jo
cmc
sub
xor
cli
xor
dec
sar
aam
cld
mov
loopne
jbe
movsl
int
imulb
jmp
std
test
xlat
sub
and
sar
or
sbb
jne
gs
mov
sub
add
and
imul
adc
xchg
dec
scas
jl
pop
push
addr16
into
test
jmp
or
lcall
mov
push
cmp
jns
add
adcb
adcl
inc
inc
lcall
or
add
add
sbb
data16
aaa
add
sub
inc
add
gs
rolb
inc
je
mov
mov
sub
add
repnz
cmp
daa
pop
cmp
xchg
adc
loop
xchg
adcb
out
xor
jb
decl
stc
jns,pt
jge
decb
mov
data16
int
add
mov
jmp
popf
push
add
push
add
jns
jmp
mov
jl
mov
or
push
data16
shlb
data16
add
mov
sub
mov
mov
test
or
fisttps
mov
pop
stc
add
stc
mov
cmp
dec
mov
clc
adc
in
fisubl
push
xchg
loop
out
jno
mov
add
add
add
dec
ljmp
adc
mov
movsl
mov
imul
cmp
jns
mov
mov
jnp
add
jle
ret
insl
jecxz
and
jb
pop
pop
lods
insl
jg
jo
pop
and
adc
cmp
mov
movsl
and
xchg
fsubrs
xlat
data16
movsb
fldl
jno
sahf
adc
xchg
push
lahf
xchg
int3
mov
push
decb
push
mov
jecxz
ror
push
addr16
adc
addr16
jp
addr16
sti
mov
loopne
xchg
mov
jmp
jns
push
test
pop
aad
les
sub
jno
sahf
call
add
movsb
cmp
cmpsb
ja
jno
or
jno
sub
pop
jns
inc
call
in
mov
leave
mov
xor
mov
in
jne
dec
inc
add
mov
clc
or
xchg
push
cmpsl
call
fld
pushw
mov
fmull
jle
pop
lret
push
es
leave
xor
xor
add
mov
mov
adc
out
in
inc
incl
add
sub
add
or
repnz
inc
sbb
stc
mov
enter
stc
push
arpl
std
add
jmp
xor
mov
mov
and
lods
imulb
data16
add
jb,pt
std
add
add
adc
data16
aad
inc
xchg
xor
mov
and
lods
sub
xchg
sti
mov
ret
filds
mov
stos
pushl
sub
cmp
fwait
stos
dec
ret
arpl
pushf
add
dec
xor
clc
insl
dec
jno
notb
add
jb
mov
pop
popa
push
addb
dec
ljmp
sub
mov
jmp
sub
mov
jae
inc
pushf
in
or
mov
cmc
or
gs
inc
lods
in
or
adc
sub
dec
dec
sub
inc
dec
sub
cmp
sub
xor
sub
add
add
add
sub
and
sub
sbb
sub
adc
sub
sti
add
dec
sub
mov
adc
jmp
sti
stos
jge
cld
in
mov
cmp
in
or
cld
call
scas
mov
cmpsb
sub
cmp
pusha
adc
out
lret
add
je
add
mov
mov
pop
lret
mov
sbb
jp
or
lds
ret
addb
inc
aaa
inc
push
cld
mov
shrl
lods
stos
fcompl
lds
inc
lds
lds
cld
mov
int
xor
push
cmpsl
js
pop
push
adc
lret
mov
add
mov
add
daa
ret
adc
jmp
cld
cld
pop
movsl
call
jb
add
int3
jb,pn
int3
es
adc
shll
aad
and
jae
andb
jp
movsl
int
cmp
je
es
sti
push
mov
mov
popf
pop
sti
addr16
sub
adc
test
jnp
outsl
mov
adc
adc
icebp
mov
ss
xchg
mov
add
test
pop
jbe
jb
dec
xor
dec
pop
sbb
cmp
les
fwait
add
inc
lahf
add
lods
sub
ds
jb
sarb
into
fdivrs
mov
cwtl
jnp
loopne
jmp
jne
jg
jb
jle
orl
add
mov
pop
aas
scas
xchg
inc
aas
cmpsb
xchg
in
jle
ret
lea
add
dec
sub
test
les
icebp
xchg
pop
sbb
add
out
packsswb
ds
xchg
call
popfw
sbb
push
lret
pop
sbb
inc
fistps
add
sub
mov
std
jae
movsl
jmp
jge
cmpsl
fsubrp
push
addr16
insl
sbb
push
lods
sbb
inc
add
jge,pn
sbb
out
sbb
and
cs
mov
sub
mov
popf
jmp
add
jns
inc
inc
jns
rcr
add
jmp
popl
je
sbb
sub
mov
push
inc
sahf
or
or
orb
rcrl
xor
test
in
mov
inc
stos
or
outsb
mov
jb
decl
add
add
popf
cmc
shlb
inc
scas
data16
sarb
mov
cli
gs
add
outsl
pop
add
push
int3
sub
xor
cmp
add
pusha
es
xor
or
out
andb
cmp
mov
in
data16
jmp
or
dec
lret
call
scas
inc
incl
dec
movsl
adc
sub
pop
mov
add
ds
or
dec
lcall
lds
jno
or
add
sub
fdivrl
cmpsb
mov
aas
mov
shl
inc
add
dec
dec
xor
adc
jp
or
std
sub
outsl
pop
lods
sub
add
add
mov
aas
incb
ret
loope
push
addb
dec
add
and
mov
xchg
out
jg
jnp
or
pop
push
cmpb
add
pop
xchg
adc
stos
loope
xchg
jmp
data16
push
loopne
xchg
inc
sub
in
push
jns
jno
and
jmp
and
das
push
mov
mov
cmp
mov
std
xchg
xchg
jne
xchg
bound
jecxz
fstpl
in
jecxz
or
add
shll
cltd
cmp
jno
cmp
mov
inc
scas
popf
sbb
pop
push
ss
mov
decb
std
nop
cmp
xchg
sub
nop
xor
pop
or
add
jmp
ficomps
push
dec
cld
nop
cmp
xchg
sub
nop
xor
pop
or
mov
into
data16
add
push
xor
decb
nop
adc
nop
add
nop
jmp
daa
push
fdivs
ret
enter
add
jmp
jb
cmovns
test
cld
stos
ja
add
or
pop
and
inc
cmp
adc
inc
jmp
lea
loop
mov
movsl
push
stc
mov
xchg
out
dec
out
int3
push
insl
stc
call
test
ficoms
xlat
adc
adc
lods
dec
ds
push
push
jbe
sub
and
jle
je
data16
fwait
jle
inc
inc
enter
xchg
popa
jg
xchg
daa
pop
test
push
and
inc
inc
pop
call
ljmp
jg
add
in
insl
xchg
cmpb
jl
scas
mulb
xchg
into
jl
test
sbb
jg
out
mov
jle
jb
aam
add
cmpb
je
aas
xchg
mov
notl
sarl
nop
fsubp
xchg
addr16
into
addr16
mov
jmp
mov
stos
cmp
mov
in
adc
test
jmp
jbe
adc
bound
adc
js
fisttpl
cmpsl
fiadds
aad
addr16
movl
fidivs
sbb
jmpw
addr16
sbb
jmp
jo
sbb
cmpsl
sbb
dec
cmp
outsl
test
mov
push
stc
ja
cmp
jle
ds
push
ja
adc
pop
nop
mov
dec
sbb
fwait
movsl
sub
pop
adc
add
add
add
pusha
stc
cmp
cmp
push
nop
test
mov
xchg
shlb
inc
shlb
andb
jmp
ja
dec
orl
jmp
sti
movsb
push
in
push
mov
and
xor
jmp
jb
sub
data16
sbbb
data16
data16
xchg
jb
sbb
pop
add
aad
add
fs
mov
imul
sahf
jae
inc
das
mov
add
in
test
adc
in
out
js
stc
stc
fwait
push
shrb
sub
pop
test
test
sub
sub
aaa
jno
cs
pusha
lods
decl
mov
shll
mov
mov
mov
jo
fcoms
jb
or
lret
std
lds
jb
add
sbb
pop
cmp
xor
xchg
stc
jp
mov
addb
xchg
add
add
dec
and
xchg
mov
jp
sbb
repnz
inc
jae
cmp
aaa
xchg
addb
xchg
addb
dec
sub
mov
das
jb
pop
dec
addl
cli
cs
xchg
pop
add
or
cmp
dec
lret
ds
lcall
inc
lahf
pop
dec
cmp
sbb
pop
bound
push
or
or
test
lcall
add
add
add
mov
shll
jmp
inc
clc
jle
sub
fbld
push
adc
or
in
jo
data16
sbb
jo
inc
push
sbb
call
movsb
add
int
mov
sub
push
shlb
push
inc
add
pop
add
push
add
lcall
mov
xchg
add
add
add
add
add
lds
pop
inc
out
add
lds
rorl
decl
mov
and
add
cwtl
pop
mov
add
shlb
test
cmp
data16
and
adc
push
dec
pop
cmp
add
pusha
xchg
out
insb
inc
jle
std
test
aas
xor
data16
gs
divl
mov
daa
cmp
push
dec
adc
inc
jmp
ja
mov
popf
push
inc
popa
faddl
es
xor
loopne
or
stos
stos
sbb
and
aas
aam
pop
push
jne
popf
imul
mov
xchg
add
add
add
jle
cltd
cmp
pop
cli
arpl
add
add
add
jg
jb
icebp
push
cmc
or
ss
icebp
into
in
aam
daa
xor
push
lret
repz
add
add
mov
mov
ljmp
mov
cmp
lea
jmp
adc
xchg
add
jb
adc
mov
add
dec
outsl
add
jmpw
ds
cmp
divl
popa
jge
lea
adc
and
in
jnp
jbe
dec
and
in
add
scas
test
cmp
daa
cmp
in
jmpw
add
adc
adc
xchg
push
cld
mov
popa
insb
and
xchg
mov
push
sub
jmp
bound
mov
lea
insl
push
gs
add
add
jne,pn
dec
jne
mov
in
cmpl
jmp
mov
push
xor
push
pop
sbb
push
cmp
fists
aad
xchg
daa
in
push
pop
add
jmp
pop
xchg
lcall
ret
dec
push
data16
cmp
add
add
add
dec
aam
pop
inc
js
add
xchg
xor
xchg
sub
and
das
add
call
xor
pushl
jecxz
icebp
negb
clc
push
dec
cmpsl
pop
stc
pop
rcrl
sub
int3
cs
and
es
and
ds
rcl
jae
lods
repz
sub
std
sahf
mov
add
add
add
jmp
repz
test
in
je
data16
jmp
jle
ja
xchg
mov
jbe
pushf
mov
ljmp
push
jecxz
cmp
shrb
adc
int
daa
mov
shlb
inc
popl
mov
hlt
aas
lea
add
add
sbb
hlt
aas
sldt
add
add
add
add
ret
mov
and
fimuls
aas
dec
in
hlt
sahf
cld
mov
mov
pop
fiadds
inc
fdivs
iret
sbb
aas
repnz
out
cld
xchg
sub
mov
mov
sahf
cmp
popf
mov
inc
push
lret
mov
pushf
lods
dec
dec
out
jmpw
in
jo
js
add
pop
ds
inc
or
jmp
jno
adc
pop
punpckhdq
mov
out
and
jno
ficomps
and
sub
dec
jns
xchg
mov
jmp
sti
pop
pmaxub
ficomps
mov
arpl
jno
fnstsw
mov
ljmp
clc
mov
popf
cmp
not
mov
xchg
mov
cmc
cwtl
push
data16
xlat
adc
add
adc
sub
data16
ret
pop
movsb
pop
enter
mov
mov
es
mov
mov
sbb
adc
and
in
adc
mov
xor
lds
add
aas
movsb
sub
xor
dec
add
dec
mov
sahf
aam
jmp
or
push
fisttps
and
xor
nop
cld
dec
sbbl
test
sti
add
mov
mov
lods
mov
dec
mov
es
fstps
movsb
ja
xchg
fs
xchg
sbb
pop
jb
lods
imul
shrw
add
arpl
xor
andb
addr16
leave
lds
mov
subb
cmc
into
mov
pop
les
jb
test
inc
bound
lret
mov
in
jg
icebp
pop
mov
pop
xor
dec
inc
iret
or
add
jnp
sub
ret
pop
sbb
add
repnz
mov
add
push
inc
cmc
add
fidivl
loopne
in
xchg
add
movsb
add
or
ja
add
xor
jb
data16
jmp
sub
outsl
mov
jmp
lds
jo
sub
add
add
add
jmp
xchg
aas
pop
and
lahf
clc
ss
into
shlb
jno
sub
lret
in
inc
inc
sub
cwtl
inc
popa
call
inc
or
stc
jno
cmp
sbb
jg
mov
call
int
sub
in
add
in
movl
sbb
scas
data16
add
add
add
add
sub
fwait
aaa
fstpl
xchg
xchg
popf
cmp
cmpsl
data16
in
mov
data16
fisttps
add
jmp
insb
rclb
adc
pop
pushf
gs
enter
rclb
push
sbb
adc
test
mov
xchg
leave
loopne
inc
leave
push
cmp
mov
and
push
ja
jb
or
xor
stc
movsl
jnp
mov
xchg
pop
insl
and
pop
sbb
sub
dec
mov
mov
jb
outsb
test
adc
or
dec
jo
in
inc
sbb
push
ret
lds
push
leave
outsl
test
xchg
xchg
das
test
movsb
adc
sub
pop
add
clc
sub
xor
int3
arpl
int3
cmp
int3
xor
int3
loop,pn
in
mov
lds
stc
pusha
addb
movb
inc
and
xchg
push
push
imul
pop
pop
out
add
subb
xchg
test
into
jg
out
cwtl
jg
jb
imul
jb
ret
test
push
in
addb
jb
inc
call
jecxz
jg
out
sbb
add
aam
lret
ds
das
mov
rcrl
rol
adc
mov
inc
addr16
or
data16
push
push
stos
insb
cmp
call
imul
mov
mov
test
cmp
ds
out
push
push
add
add
add
js
sbb
je
das
call
into
fcoms
inc
shlb
sub
adc
fs
push
cmp
jno
dec
cmpsb
aas
leave
fbld
push
push
bound
jmpw
push
ljmp
data16
dec
and
push
fcmovnb
inc
add
add
mov
jo
incl
push
icebp
out
push
fcmovnb
fiadds
leave
in
mov
and
mov
inc
mov
push
fwait
dec
jmp
adc
data16
in
mov
je
dec
dec
and
shlb
push
dec
cmpsl
inc
stos
lret
sbb
cli
ret
push
add
jmp
jb
ret
sbb
add
data16
icebp
adc
ja
push
out
dec
stc
stc
lret
outsl
fists
cli
imul
dec
cmp
dec
outsb
sbb
div
add
sti
cmp
test
sub
outsl
or
scas
cmp
outsb
fsubrl
xor
cmp
jmp
pop
xchg
test
add
add
add
add
ja
jmp
les
ret
insb
or
addb
pop
insb
mov
int3
repz
pop
dec
insb
cmp
adc
cld
fnstcw
mov
jo
or
aas
mov
jne
dec
jge
xlat
jg
jb
jg
inc
roll
dec
ret
test
inc
xchg
xor
repnz
addb
out
pop
in
mov
or
dec
ja
push
out
shrb
add
shrb
inc
addr16
aam
jmp
xor
mov
jle
cmpsl
subb
mov
xor
adc
sub
fildll
and
div
divl
jo
or
add
xor
sbb
xor
mov
push
repz
dec
xchg
adc
jo
div
sti
sbb
jo
lret
jmp
push
dec
and
int
divl
test
decl
call
movsb
cmp
insb
jmp
mov
jge
je
or
push
add
mov
fcmovb
data16
fiaddl
lret
ret
inc
std
cli
add
ret
pop
adc
je
inc
cmc
xchg
lret
ret
dec
out
je
fwait
jmp
sarb
out
dec
in
push
xlat
dec
mov
cmp
mov
aaa
push
popf
sbb
push
dec
lret
jb
adc
icebp
and
fiadds
cmp
jb
jmp
add
add
add
sbb
mov
xchg
xorb
cs
mov
cmc
outsl
data16
and
sub
dec
ds
jno
xor
subb
and
lcall
imul
jmp
xor
pop
lcall
sub
adc
scas
push
mov
add
inc
jge
sbb
cmp
lds
test
mov
jl
ljmp
ret
outsb
hlt
mov
cltd
push
mov
leave
cltd
outsb
inc
popa
sti
jl
add
scas
add
pop
push
fstpt
jb
jg
sub
add
pop
adc
push
push
idivl
push
and
add
jns
xor
fwait
jl
dec
add
sbb
inc
outsb
jae
scas
mov
mov
mov
out
cmp
ljmp
jmp
movsb
int
cld
cmp
xor
in
jnp
jmp
push
shlb
cmc
ficomps
jno
push
jmp
push
popa
fs
ret
jmpw
imul
in
jp
jmp
add
pushw
lret
mov
sub
aas
cmc
es
sub
pop
movsl
icebp
jno
cmp
rolb
jg
add
andw
test
lds
pop
lret
dec
dec
lea
dec
or
mov
fsubrl
xor
jp
add
insb
xchg
pop
pop
add
add
add
add
nop
xor
pop
ja
add
lcall
adc
sub
adc
stc
sbb
test
data16
xor
xchg
jno
pop
jmp
and
push
xchg
jle
add
lcall
stos
imul
stc
sub
add
outsl
gs
data16
test
stc
mov
incw
xchg
fwait
jb
stc
mov
mov
in
in
loopne
jb
data16
jle
out
jo
pop
sub
outsb
outsl
data16
rcll
pop
data16
test
stc
and
pop
fwait
sub
data16
pop
lcall
adc
pop
jno
ljmp
xchg
cmp
addr16
add
lahf
mov
repnz
and
lahf
cmp
data16
sub
pop
cwtl
cld
add
mov
into
jle
orl
cld
ret
push
test
into
pop
jmp
dec
clc
testb
cld
and
js
rolb
int3
sbb
xor
dec
repnz
cmc
leave
scas
add
dec
shlb
out
popa
ja
test
icebp
or
pop
call
in
lds
ljmp
out
jmp
popa
jp
clc
dec
addr16
hlt
jle
dec
jb
cmpsb
shlb
imul
fstpl
push
inc
imul
sbb
jb
fcmovnu
daa
add
in
adc
popa
cli
addr16
loop
sub
in
jbe
add
cmc
mov
std
dec
adc
jno
addr16
inc
and
aaa
jnp
and
or
ret
adc
mov
pop
adc
ret
sbb
adc
push
or
and
ret
jmp
and
data16
jmpw
data16
cmp
shl
pop
inc
rolb
adc
cmp
mov
mov
mull
or
sarb
popl
jbe
jmp
add
dec
or
ds
inc
fsts
xchg
xor
fs
jge
cmp
jno
push
and
loope
cmp
test
xor
outsb
insb
sub
dec
movsl
adc
xor
pop
callw
sbb
icebp
in
incl
shll
mov
xor
std
aam
call
cwtl
pop
mov
mov
jbe
pop
xchg
stos
popl
jmp
or
add
add
testl
jl
pusha
aad
push
add
mull
mov
cmpsb
pop
jb
mov
aad
mov
ret
add
add
add
add
jge,pt
mov
mov
add
rcll
inc
jne
pop
inc
ret
jge
mov
mov
clc
shll
hlt
out
sbb
jle
adc
insl
ds
testb
mov
or
pop
lds
lds
dec
and
dec
adc
sbb
data16
or
xor
jnp
xor
fisubs
add
add
add
movsb
ss
jno
sub
push
sbb
mov
dec
stos
popf
mull
mov
jmpw
test
jmp
sub
bound
shl
jo
je
insl
lret
jmpw
jnp
hlt
xlat
dec
daa
sub
push
jb
iret
in
jp
sbb
push
std
push
shlb
jb
cmp
mov
filds
xchg
fidivrl
add
mov
xor
jnp
sbb
inc
sub
mov
insb
pop
mov
jo
mov
cmpsl
jmp
mov
xor
test
leave
jmp
inc
xchg
decl
dec
cvttps2pi
outsb
mov
jbe
dec
push
rcl
push
pop
lods
jmp
imul
call
shlb
test
loopne
insb
mov
cmpsl
inc
pop
and
add
jnp
mov
push
pop
adc
andl
jb
ret
adc
pop
cmova
rcll
mov
fistpl
icebp
gs
jbe,pt
mov
fsubs
jmp
dec
fwait
push
data16
and
arpl
sub
jmp
xchg
aam
add
jg
dec
xchg
hlt
lret
sbb
push
jb
add
lea
sti
mov
push
sbb
cwtl
rcll
divl
cmpsb
sbb
lcall
fwait
out
pop
pop
mov
lock
test
out
add
cmp
sbb
mov
pop
xor
dec
cmc
iret
jb
ret
jg
aaa
lock
syscall
mov
add
js
inc
mov
jno
jno
jns
fimull
mov
lods
fincstp
loop
adc
sti
in
flds
add
jg
test
adc
popa
cmp
adc
scas
add
mov
fbld
pop
xchg
in
and
jmp
mov
outsl
xchg
push
shlb
jbe
xchg
outsb
sbb
push
sub
dec
mov
les
out
sub
orb
sub
data16
les
or
mov
test
mov
pop
dec
test
repnz
pusha
rorb
repz
xor
fcoms
xchg
insl
insl
xchg
into
adc
add
pop
add
push
mov
data16
adc
les
sbb
sub
xchg
repnz
call
mov
gs
fisttpl
add
jl,pn
xchg
aaa
xchg
je
cmpsl
pfsub
lcall
data16
ret
push
or
cwtl
divl
les
inc
xorl
or
xchg
incl
push
dec
stos
add
int
mov
ret
data16
jns
stc
push
push
adc
fmull
subl
shrl
shlb
fstpl
jo
ljmp
pop
data16
je
icebp
pop
data16
and
mov
popa
push
mov
sub
daa
jmp
add
add
add
add
add
data16
ds
jmp
xor
sbb
cltd
mov
cmp
adc
test
adc
cmp
jg
cs
push
adc
pop
lret
inc
loopne
inc
cmp
jb
out
shrl
test
jg
adcb
dec
xor
int
sbb
filds
idivl
addb
jmp
pop
imul
fwait
insl
adc
shrl
fstpl
or
daa
sbb
jle
icebp
inc
addb
inc
repnz
in
add
mov
mov
fdivrs
inc
inc
sub
lcall
jge
addr16
jp
fcomps
sbb
sub
lcall
pop
mov
fdivrs
incl
cmc
add
lcall
jge
addr16
jp
fcomps
inc
sub
lcall
pop
mov
fdivrs
lcall
jge
scas
test
sub
lcall
pop
mov
fdivrs
incb
pop
popa
jge
scas
test
add
xor
std
jle
jne
nop
je
movsl
incl
test
add
and
add
adc
cmp
cmp
push
cmpsl
pop
sbbb
jg
pop
test
add
cmpsl
inc
mov
ja
pop
push
popf
sub
inc
jae
pop
inc
fwait
mov
sub
pop
and
mov
push
adc
xor
es
pop
data16
sub
add
popa
push
or
imul
jp
fucomip
jae
push
stc
or
sub
bound
jp
sub
mov
cli
std
sbb
jmp
pop
in
jbe
iret
add
pop
dec
stc
leave
outsb
xor
das
fstps
leave
jae
cmc
jge
ja
das
adc
jb
in
add
sbb
icebp
mov
or
in
add
cld
mov
call
adc
cwtl
xchg
jg
std
mov
repnz
inc
and
jb
cld
mov
jg
xchg
insl
cwtl
mov
aas
inc
sbb
popl
dec
pusha
jg
in
push
icebp
push
out
jbe
inc
outsb
inc
cli
or
add
inc
sbb
adc
inc
lret
test
dec
and
sti
xchg
sbb
push
into
and
add
jno
xchg
shl
sub
push
jo
std
push
pusha
xor
iret
inc
enter
nop
jns
es
jmpw
fisttps
sti
jb,pt
leave
cld
ljmp
dec
jb
popf
add
inc
cmp
enter
aaa
js
das
mov
sub
enter
notl
jo
add
test
cs
dec
fcmovnb
test
jmp
call
les
aam
and
pop
fstpl
jae
jle
fstl
ret
data16
and
je
push
inc
or
adcl
cmpsl
je
aaa
mov
push
xchg
push
add
aaa
push
or
push
lret
push
or
jmp
ja
jmp
add
jmp
lret
ret
jmp
add
aaa
xchg
incl
pop
and
cmpsl
inc
jb
hlt
xchg
pop
mov
xor
pop
ds
add
add
add
add
cmc
dec
stc
insl
mov
sub
jb
push
cli
push
mov
scas
mov
cmp
cmp
jb
sub
sbb
int3
cs
loope
jmp
daa
xchg
leave
jle
loope
pop
je
je
out
sbb
int
xchg
jecxz
jp
mov
cltd
das
ret
cmp
and
data16
sub
jo
jbe
push
mov
cmp
ja
and
incl
jb
fsubs
sub
dec
xorl
jg
data16
inc
inc
push
jb
pusha
cmp
int
test
ds
cmp
data16
out
lret
ss
les
xchg
push
lea
push
jae
pop
js
dec
jle
adc
pop
mov
push
aam
dec
push
call
add
add
add
imulb
cmp
mov
lret
add
sbb
jb
sbb
imul
xor
loopne
dec
xchg
adc
fst
jmp
leave
push
and
jle
out
test
jb
in
pop
loopne
push
iret
jmp
and
imul
adc
sbb
into
idivl
xchg
mov
jmp
add
test
mulb
dec
sub
testl
and
jecxz
loope
pop
pop
jmp
jmp
test
xchg
add
shll
cmp
jge
or
or
orl
add
jne
dec
push
adc
xor
push
add
pop
mov
arpl
je
popa
xor
shrb
sbb
jge
adc
push
sbb
sbb
enter
fwait
mov
xor
or
mov
or
pop
sahf
or
jb
mov
and
fcomps
sbb
mov
stc
mov
xor
sub
fisttpll
sbb
clc
ret
lock
mov
jp
jb
pop
sbb
and
add
xchg
pop
stc
mov
int3
es
dec
push
push
cmpsb
ljmp
shlw
push
inc
lret
add
sub
mov
lock
jb
jg
fisttpll
call
jle
jb
int3
and
push
test
int3
adc
add
faddl
in
jg
jb
adc
inc
pop
or
mov
dec
repnz
ja
mov
xchg
push
mov
mov
test
les
mov
push
aam
outsb
nop
shlb
inc
dec
pop
in
or
or
jb
jg
int
add
mov
add
add
add
dec
cmp
mov
in
dec
adc
sti
xchg
xor
cmp
jb
push
cmp
mov
cmp
dec
and
repz
push
int
mov
idivb
jne
popa
xchg
bound
adc
sahf
dec
cmp
test
movsl
jb
test
sub
sbb
test
jmp
add
xchg
push
in
jb
loopne
or
dec
mov
xchg
mov
and
jecxz
add
xchg
in
add
int3
adc
jmp
mov
cmovg
arpl
lret
inc
fcmovne
ljmp
les
add
adc
mov
enter
dec
pop
or
mov
dec
and
adc
test
add
jp
mov
cwtl
jmp
push
loopne
dec
mov
xchg
jmp
loopne
and
andl
pop
xchg
data16
in
mov
xchg
xorb
xchg
shlb
add
pop
insl
jmp
jl
sub
out
push
jl
jb
adc
lods
cmp
ds
daa
xchg
xchg
imul
add
add
add
out
jp
mov
jns
jle
pop
adc
jb
nop
gs
data16
lds
insl
adc
subl
mov
push
push
mov
add
inc
ds
popa
pop
sbb
add
dec
adc
insl
xchg
jb
jg
icebp
test
push
nop
xor
pop
fnstcw
xor
jle
add
xor
add
cmp
data16
test
sti
mov
mov
js
scas
inc
push
add
pop
cwtl
mov
dec
ret
sti
out
clc
aaa
dec
xor
cmp
mov
push
xchg
dec
aas
sti
lock
in
hlt
or
addb
data16
xorw
std
add
and
jno
and
xchg
mov
out
jnp
push
jbe
sub
pop
mov
orb
rorb
push
sbbb
data16
lds
sub
cmp
jns
ja
jno
nop
stc
mov
popa
insl
and
gs
and
into
fbstp
add
add
cltd
pop
mov
das
mov
stos
pop
setbe
roll
imul
je
fisubl
movsb
adcb
orb
mov
or
mov
popf
daa
adc
ret
addr16
mov
popa
fstl
loopne
in
adc
fs
mov
jmp
adc
daa
sbb
push
into
nop
decl
xchg
inc
jae
inc
push
cld
dec
ljmp
rorl
and
stos
jl
push
or
jge
mov
fldl2t
and
xorb
xchg
insl
push
xchg
inc
sub
jp
insl
adc
rcrb
mov
inc
adc
int
rcll
and
test
aad
inc
jp
sbb
std
lea
in
lock
adc
iret
in
jbe
xchg
orl
add
fs
scas
test
pop
ret
cwtl
jl
pop
jge
mov
dec
shl
test
sbb
jg
in
or
adc
lds
jl
lret
add
jge
jb
mov
dec
push
sbb
jge
inc
push
rcr
dec
dec
or
mul
or
jg
and
movb
addl
xor
mov
mov
inc
mov
int
jg
and
data16
pop
shlb
mov
fbstp
mov
das
mov
cmp
jmp
fstpl
xchg
test
fnstenv
xchg
jmp
push
sbb
fistpl
sbb
dec
xor
imul
sbb
popa
les
xchg
add
jb
xchg
imul
cs
inc
cmpsl
adc
jno
jmpw
imul
cltd
es
push
jno
ljmp
cltd
fstpl
outsl
shll
dec
mov
xchg
in
xor
add
pop
cmp
je
fisubrs
adc
sbb
mov
fs
aas
jle
inc
nop
je
mov
xchg
push
pushf
adc
jo
xchg
mov
and
push
jnp
sub
jmp
out
fnsave
testl
xchg
mov
jmp
add
jbe
push
repz
fsave
mov
pop
daa
das
or
fwait
sub
jns
insl
xchg
cmpb
cmpsb
incl
shlw
add
stos
push
data16
ljmp
outsb
xchg
addl
add
adc
pusha
sbb
lods
adc
aam
pop
sti
stos
inc
xorl
add
add
add
add
mov
dec
cmpsb
ljmp
jns
mov
mov
clc
stos
inc
mov
cmp
div
push
add
xchg
jle
push
inc
sarl
xor
mov
add
out
or
pop
add
rcll
aam
jb
fldt
cmc
xchg
jle
push
cmpsl
shrb
outsl
xchg
pop
mov
add
enter
inc
shrb
jg
mov
aas
add
jg
jae
jg
jb
dec
adc
mov
add
sbb
jb
cld
cmpsl
mov
leave
jg
push
xchg
lahf
push
data16
lret
lsl
lods
pop
inc
cmpsl
fisttpll
add
jb
xchg
dec
mov
and
lods
add
imul
pop
daa
bound
pop
out
sbb
movsb
or
ss
pop
ja
ja
pop
arpl
aad
stc
mov
mov
fdivl
outsb
fstl
dec
sub
push
or
mov
cmp
mov
xor
arpl
jno
popa
add
xchg
lret
push
addr16
dec
xchg
lcall
leave
data16
and
bound
mov
data16
dec
lea
sub
fwait
dec
leave
data16
sub
mov
mov
sahf
sbb
loopne
dec
movsl
or
dec
lea
cltd
lcall
in
rcrb
rcrl
fistpl
jmp
jnp
cmpsb
je
rcrl
adc
mov
jmp
and
inc
add
enter
jb
hlt
lcall
pop
outsb
adc
pop
test
push
adc
in
pop
sti
popf
lcall
negb
cli
xchg
jo
jl
or
imulb
lcall
xor
xor
inc
ds
stos
lea
icebp
ret
test
fsts
xor
gs
jb
imul
and
push
dec
or
dec
add
jb
sub
jp
and
aas
adcb
mov
jg
aaa
rorl
sti
movsl
push
jbe
adc
jne
mov
inc
add
aas
jnp
in
or
cmp
adc
jge
cmp
jmp
jno
add
fcomi
jae
or
jg
mov
aas
dec
orl
sbb
dec
push
inc
incl
lock
jb
addb
mov
addb
cld
cmpsl
jmp
mov
jle
sub
bound
xchg
mov
dec
sbb
sahf
mov
push
push
in
jo
and
lock
data16
and
cs
mov
sub
jle
pop
jmp
enter
lock
out
jl
jne
jno
sbb
mov
gs
push
jg
sbb
sub
test
jmp
cmpsb
enter
add
nop
push
scas
push
test
add
add
add
xchg
call
inc
cwtl
adc
int3
outsb
adc
mov
test
add
add
add
add
dec
xchg
call
jmp
cmp
jmp
xorl
jmp
pushf
cmc
inc
incl
pop
roll
push
stos
inc
fisttpl
adc
push
jmp
push
or
data16
push
ud2
lds
dec
mov
inc
jb
adc
jne
pop
add
cmovnp
ret
and
add
add
add
ja
and
aaa
sbb
dec
ret
jb
aam
xchg
xor
shlb
push
jb
cmovnp
mov
jb
sub
test
sti
fs
push
sar
fwait
sub
mov
push
push
pop
fstl
fwait
and
add
cmpsl
fwait
insb
mov
icebp
and
enter
adc
push
pop
dec
dec
push
in
int
adc
ret
push
mov
call
jnp
and
test
add
movb
lcall
inc
xlat
leave
adc
aaa
xchg
xchg
mov
mov
adc
dec
orb
add
jl
xor
xchg
dec
and
xor
mov
dec
jae
jg
jb
icebp
stos
add
pop
jge
mov
cld
and
aam
xchg
adc
aas
insb
dec
and
in
jnp
leave
das
shrb
ljmp
fisubrs
push
mov
inc
sub
sahf
push
lds
jo
add
frstor
movd
hlt
pop
retw
adc
sub
jmpw
sub
in
jge
add
sub
jno
bound
out
xchg
insl
stc
push
or
dec
push
sbb
inc
cmp
push
pop
lcall
jp
fs
loop
call
sahf
rclb
aam
and
leave
add
lret
pop
jg
push
xor
jle
jl
mov
adc
roll
fcoms
pusha
test
mov
or
add
sub
xor
inc
sbb
clc
leave
data16
ja
mov
cmp
jae
shlb
jg
pop
out
cmpsb
mov
mov
movb
pop
test
add
nop
jb
jb
sub
dec
test
push
imul
pop
data16
dec
test
xchg
mov
add
add
stc
in
mov
or
and
sarl
xchg
xchg
or
jl
dec
sti
adc
in
pop
in
into
loop
sbb
fldl
inc
inc
or
jne
stc
push
jp
xor
icebp
popf
imul
pop
data16
lock
jb
ljmp
adc
and
das
addr16
dec
jp
inc
adc
cmp
sbb
push
cs
int
xchg
push
or
sysret
jb
adcb
sub
aaa
xchg
xchg
enter
cmp
jle
rol
jg
adc
adc
cmc
stc
jecxz
xor
mov
in
out
dec
std
mov
add
adc
push
mov
jns
bound
outsl
and
inc
add
dec
sbb
je
adc
or
or
cmpsb
ljmp
mov
shlb
pop
push
push
icebp
into
xchg
jmp
jno
popa
jg
dec
and
call
mov
icebp
xchg
pop
aas
sub
out
mov
add
scas
lcall
in
push
arpl
xchg
push
dec
or
call
jle
add
mov
xchg
rolb
pop
enter
add
adc
lds
sbb
jle
jmp
aaa
sub
nop
js
call
mov
mov
sbb
jge
ret
push
addl
pushf
and
add
mov
popl
dec
shlb
inc
shlb
lds
mov
in
fwait
lret
shlb
jnp
mov
rcll
mov
mov
pop
pop
add
fmuls
jae
sbb
jb
out
mov
test
adc
jae
stc
daa
ret
cmp
push
add
pop
dec
call
mov
add
filds
scas
loope
xor
xchg
dec
jb
out
mov
test
out
push
arpl
icebp
mov
jb
insl
insb
data16
ljmp
xchg
add
cld
popf
pop
shrl
dec
dec
adcb
stc
daa
mov
mov
cmp
sbb
mov
shl
out
icebp
arpl
in
out
mov
jg
xor
pop
hlt
mul
ja
arpl
mov
xor
cld
aas
push
cltd
push
in
stc
iret
lea
pop
shrl
jg
repz
mov
add
bound
jno
data16
inc
xchg
jmp
push
or
xor
add
jb
fisubs
scas
pop
pop
faddp
jg
lods
jne
mov
push
dec
fimuls
jmp
pop
sti
xchg
bound
repnz
xor
xchg
jmp
mov
incb
in
shl
sub
and
adc
jo
mov
dec
scas
add
jmp
push
mov
mov
roll
mov
rorb
mov
add
rcl
enter
mov
dec
add
shrw
sub
push
hlt
pop
bnd
dec
push
lahf
mov
or
aam
addr16
es
dec
icebp
pop
sysexit
mov
pop
ror
fwait
add
leave
data16
mov
lods
lds
fcmovne
pop
mov
push
popf
shrl
or
pusha
mov
push
es
sub
jno
xor
test
data16
mov
arpl
xor
inc
or
test
dec
stc
sub
xchg
xor
shlb
xor
fdivrl
test
dec
mov
cmp
stc
mulb
jae
es
cltd
push
fisttpll
mov
mov
xor
addr16
jb
out
xor
fcmove
notb
lods
lds
aas
xchg
jg
fwait
inc
stc
inc
jae
jg
jb
lahf
jge
cmp
add
add
jne
inc
cld
imul
jb
icebp
dec
add
and
inc
add
jg
out
mov
jle
mov
mov
ljmp
or
mov
inc
lret
imul
inc
add
test
cmpsl
sub
pop
lds
add
out
stos
ja
es
xchg
jb
add
fldenvs
add
jmp
mov
push
mov
loop
jb
dec
sub
mov
js
jo
aaa
dec
das
in
imull
aas
fisubs
jmp
jl
xchg
bound
and
cmp
and
adc
cmp
mov
call
addl
add
xchg
cmp
lret
in
fwait
mov
mov
cvtps2pi
aam
mov
into
add
sar
dec
push
in
and
push
hlt
lcall
mov
jmp
ret
enter
push
es
pop
in
pop
bsr
adc
add
push
add
pop
mov
or
sarl
push
or
mov
dec
es
sub
jno
xor
mov
mov
jecxz
jno
xchg
ja
sbb
jl
or
repnz
std
mov
stos
dec
stc
sub
xchg
ret
and
shlb
xor
and
pop
test
sahf
mov
xor
add
mulb
movl
add
add
jae
es
dec
dec
push
xchg
stos
jae
movsb
roll
sub
outsl
out
sub
imul
lds
mov
mov
cld
jg
testl
pop
subl
push
jle
jb
cmp
mov
loopne
incb
cwtl
mov
jge,pt
cmpsl
mov
xchg
add
jno
and
adc
call
inc
mov
xor
sbb
pop
jg
jae
jg
jb
ret
adc
add
pop
inc
orb
dec
leave
mov
dec
add
data16
int
arpl
push
outsb
jmp
and
xchg
jmp
aaa
mov
adc
dec
and
je
ds
mov
jge
fnsave
mov
out
inc
and
std
mov
jo
sbb
or
jle
sahf
jb
fildll
sbbl
fadd
scas
sbbl
popf
mov
adc
adc
pushf
pop
inc
and
push
fistps
fadds
add
mov
mov
ret
mov
xchg
mov
push
push
add
cmpsl
pop
mov
xchg
decl
ret
ljmp
loop
dec
dec
ret
in
push
orb
lret
ret
lcall
adc
pop
leave
ljmp
sub
es
gs
add
inc
and
or
pop
mov
sbb
sbb
int
jb
ret
into
divl
call
test
iret
mov
loop
roll
jae
mov
sub
or
je
mov
orb
in
jns
das
aad
push
sub
sahf
dec
das
in
inc
hlt
ss
adc
mov
addb
das
adc
mov
out
stc
sbb
das
ja
jb
push
mov
stc
mull
add
xchg
add
push
push
inc
or
test
sti
mov
xchg
arpl
je
jecxz
sub
dec
into
jg
testb
jb
sub
lods
lret
or
cwtl
in
out
mov
adc
pop
add
adc
or
and
pop
add
dec
add
sbb
mov
mov
jl
into
inc
ret
mov
out
sub
inc
xor
iret
call
popa
arpl
xor
lahf
movsb
loope
inc
sub
outsb
jle
sub
frstor
inc
loopne
movb
mov
aaa
aas
popf
dec
xor
es
jmp
jecxz
pop
jmp
sub
test
jmp
stos
adc
inc
and
fisttps
loopne
enter
push
lret
fistpll
outsb
inc
xor
jae
pop
cmp
sub
dec
stos
cvtpi2ps
fistps
insl
jge
dec
sbb
rclb
pop
ret
sbb
add
mov
push
aas
mov
mov
fsubrl
xchg
fldt
mov
test
xchg
mov
jmp
sti
pop
sub
jbe
sub
shrl
imul
cmp
xor
in
sbb
js
popa
mov
sbb
outsb
divb
in
mov
or
stc
push
jle
sub
out
xor
sti
push
or
jae
loopne
pop
jb
data16
xchg
jb
call
data16
lock
icebp
stos
les
mov
pop
nop
or
outsb
push
fdivp
das
data16
push
iret
jb
fsubrs
pop
sub
aad
and
jnp
sub
push
stc
loope
addl
add
add
add
add
and
mov
test
cmp
lods
mulb
fildl
movb
cwtl
les
pop
push
sbb
inc
lods
mulb
stos
inc
jp
nop
xchg
ds
fsts
scas
fists
sahf
in
nop
xchg
mov
xchg
push
xchg
jle
sahf
xchg
jbe
popa
xchg
outsb
and
pop
xchg
xchg
add
cmp
xabort
ds
insb
mov
mov
xrelease
cli
data16
cli
data16
idiv
pop
out
cli
xchg
icebp
stc
data16
stc
data16
data16
stc
lods
repz
dec
repz
inc
cli
in
cli
data16
push
sti
xor
mov
pushf
pop
sub
bound
in
jmp
loop
frstor
lret
pop
mov
lcall
push
and
mov
sbb
pop
out
xchg
std
cld
xchg
bound
push
out
pop
cmp
add
rcrb
subb
int3
lcall
mov
int3
pop
mov
int3
divb
outsb
mov
lds
or
mov
rcrb
jbe
jae
adc
call
push
fimull
rorb
test
jmp
ret
jae
jmp
stos
or
ljmp
jbe
adcb
aaa
mov
mov
ss
jb
pop
add
callw
pop
stc
jmp
and
rol
cmovnp
outsb
mov
cmp
and
shlb
into
pop
mov
sarb
jecxz
loopne
push
push
rol
pop
data16
adc
inc
loopne
int3
scas
jecxz
int3
cmpsb
push
adc
and
push
stc
daa
sbb
mov
pop
add
callw
pusha
stc
jmp
and
xlat
negl
or
pop
or
jnp
add
add
push
mov
jg
mov
jo
pusha
xor
xor
add
jg
mov
out
sbb
xor
or
mov
adc
es
dec
stos
in
les
cmp
inc
mov
jg
jb
and
rcll
push
jge
sahf
dec
aam
ss
jo
lcall
sbb
mov
xchg
xor
sub
pop
out
gs
scas
jo
cmp
mov
mov
jle
jnp
xchg
push
lret
mov
xchg
jo
push
mov
push
mov
sbb
test
nop
es
stos
in
das
pop
pushf
imul
and
mov
jle
je
xchg
push
lret
sub
movsl
add
ljmp
movsl
scas
sbb
aam
adc
pop
mov
mov
ret
pop
cmp
push
js
sbb
lret
popl
rolb
or
mov
add
add
add
add
cmp
inc
push
jp
std
inc
lret
popl
addb
or
mov
fisttpll
jns
loope
lret
mov
icebp
adc
cltd
inc
imul
inc
jb
mov
jns
sub
jp
xlat
divl
int3
test
pusha
or
shlb
add
cmpsb
add
data16
jmp
int3
cs
pop
int3
es
int3
jae,pt
in
icebp
repz
jmp
mov
pop
inc
icebp
out
std
lahf
pop
aad
xor
pop
xchg
adc
cmpsb
mul
lret
call
pushf
push
adc
add
inc
mov
add
push
inc
aas
cltd
cmpsl
mov
jg
movsb
inc
cld
out
push
pop
cmpsl
add
xor
movsbl
or
addb
mov
arpl
cmp
outsb
jg
dec
lahf
jg
popa
out
mov
in
mov
jg
mov
mov
jb
fs
jb
add
add
sbb
jg
jg
add
or
lcall
lods
cmp
lods
add
movsb
jmp
add
scas
add
sbb
sbb
jle
or
fisubs
dec
xchg
shl
sbb
mov
lods
xchg
ret
test
pop
mov
in
xor
in
jge
sbb
fisubs
xor
mov
cmpb
das
xchg
push
sub
mov
add
add
add
add
sub
ret
jb
enter
dec
aaa
in
das
mov
dec
out
jbe
cwtl
inc
xor
rorb
dec
iret
and
mov
inc
pop
add
pop
subb
nop
add
mov
fs
sarb
pop
pop
cltd
pop
std
xlat
sarb
or
inc
xor
inc
repz
dec
ret
pop
or
rclb
sbbb
call
ret
adc
nop
jge
mov
sbb
les
movsb
sub
pusha
sbb
loope
icebp
xor
jmp
mov
or
das
add
daa
push
sub
clc
lods
sbb
xchg
adc
push
call
jb
test
add
inc
imul
add
test
inc
jb
jmp
xchg
fwait
mov
jg
movsl
add
pop
xchg
mov
push
sbb
data16
or
mov
jmp
dec
out
inc
inc
ja
cli
inc
mov
lahf
cld
cwtl
mov
jg
out
adcl
aaa
sbb
mov
sub
add
mov
xchg
mov
inc
jle
mov
test
js
lahf
push
jb
cmc
adcb
loopne
cmc
or
xchg
jecxz
mov
inc
dec
in
cmp
push
inc
push
sbb
xchg
rorb
lea
mov
jb
mov
imul
jge
sahf
adc
movsb
jne
and
add
cmp
aaa
pushw
fsubr
sub
fstl
jl
jb
mov
aaa
in
das
mov
mov
dec
stos
cld
cwtl
jecxz
jge
cmpsl
das
cmp
movsl
mov
mov
imul
shl
jle
insb
hlt
jp
adc
jbe
sbb
in
imul
push
mov
mov
sub
call
leave
jmp
mov
and
incl
or
jl
cmp
sbb
and
call
bound
fcmovnb
jne
aad
mov
and
dec
ret
aas
mov
rcll
jmp
sbbl
call
or
jne
sbb
lea
aas
mov
add
add
add
pop
xor
test
mov
out
and
jb
clc
adc
fsubl
scas
jmp
clc
cmp
or
aaa
xchg
clc
in
mov
faddl
test
cmc
aad
in
jbe
stos
or
call
cld
and
adc
ret
jbe
movsl
or
daa
xchg
clc
lea
add
add
add
add
jg
xchg
test
std
fmull
lock
jns
pop
data16
xor
mov
inc
test
ffree
jmp
or
cmpsb
add
sbb
and
rolb
out
andl
cmp
rol
test
cmp
adc
jbe
adc
add
das
mov
in
push
nop
mov
mov
push
adc
push
mov
stos
ret
cld
in
jns
jp
cmp
leave
or
and
xor
add
call
mov
xchg
sbbb
xor
pop
mov
add
in
dec
stos
xchg
jb
xor
ret
add
cld
mov
sub
ljmp
sahf
cli
sbb
adcb
cmp
jecxz
or
xor
ljmp
pop
adc
push
push
and
sub
jno
stos
std
in
addr16
repnz
xchg
mov
aas
mov
dec
jmp
add
scas
andl
push
mov
nop
jae
outsl
stc
ljmp
sbb
call
pop
jmp
mov
jmp
stos
cmp
call
dec
jmp
pop
scas
xchg
and
fldl
xchg
jmp
jnp
mov
lcall
push
test
mov
adc
jmp
imul
cwtl
add
sub
add
pop
pop
std
lock
test
loope
sbb
xchg
clc
and
fcoml
std
lock
test
dec
stos
out
out
clc
jmp
cmp
stc
neg
jmp
jae
pushf
mov
mov
sub
lods
pop
jmp
jae
jno
mov
mov
stc
loop
into
mov
xor
mov
xchg
inc
jle
push
lea
addl
es
mov
push
inc
xor
adc
push
push
push
fwait
mov
add
cli
sub
push
push
mov
mov
ja
leave
adc
dec
inc
push
push
faddl
adc
xor
add
push
jns
leave
aad
jns
lret
push
push
sbb
aaa
adc
mov
adc
xchg
aaa
mov
add
push
cmp
pop
adc
inc
scas
ja
bound
sub
out
jb
cmpsl
adc
incl
xor
jbe
push
out
jb
cmpsl
cmc
outsb
mov
xchg
mov
add
sub
out
jb
cmpsl
mov
mov
xchg
pusha
pop
fisubs
lahf
xchg
insb
scas
int
dec
outsb
data16
mov
sub
frstor
dec
jae
call
dec
and
or
sbb
add
push
xor
push
shlb
push
rolb
mov
inc
out
xchg
addb
add
add
add
add
pop
dec
jge
push
or
jne
pushf
outsb
add
scas
jmp
rcll
sbb
add
adc
sbb
and
mov
xlat
or
inc
jns
push
std
das
sub
lret
adc
fbld
cld
jo
adc
je
or
andl
data16
push
xor
mov
aaa
push
jb
and
ficomps
add
add
add
icebp
jno
sub
je
cmpsb
xor
fldenv
sub
sbb
pop
cld
pop
and
aaa
cld
jmp
mov
and
mov
call
cmpsb
das
hlt
jle
fldl
movsl
cld
mov
cmp
data16
lock
movsl
ret
out
inc
xor
inc
mov
test
movsl
and
jp
sub
adcb
inc
xor
nop
scas
push
notl
test
andb
xorb
adc
testb
mov
das
hlt
lock
and
mov
inc
dec
roll
fists
ja
lcall
mov
cmp
cld
in
or
std
mov
hlt
dec
jno
add
rcrl
addr16
popa
mov
ret
lahf
cmp
dec
jmp
sbb
or
lret
je
xchg
jae
sbb
addr16
addr16
sub
cmc
je
cmp
movq
push
xchg
push
loop
fstl
xchg
dec
sub
mov
push
jg
push
push
xchg
push
lds
ljmp
out
fwait
aaa
sbb
in
bound
fnsave
mov
cmp
dec
sub
in
inc
sub
stos
test
fdivp
mov
scas
out
dec
cmp
adc
jno
pop
add
rorb
sub
jmp
stos
bound
mov
hlt
mov
inc
or
mov
stc
push
jbe
mov
xor
cmpsb
adc
add
add
push
popl
outsb
out
jbe
dec
or
mov
xchg
and
pushf
hlt
adc
sti
fisubs
lret
lods
jns
ret
add
pop
mov
or
mov
pop
mov
sub
jmp
or
in
add
add
cmc
adc
sti
aad
pop
and
test
mov
jno,pt
lret
ss
jmp
or
adc
ficoms
dec
data16
push
bound
cmp
mov
ds
adc
bound
movsb
movsb
invd
out
fimuls
or
data16
inc
jmp
add
data16
jb
jg
jb
jg
jb
lret
sbb
xor
add
pop
pop
inc
cs
dec
push
jb
jg
mov
pop
add
jg
aas
and
repnz
push
ret
fiadds
pusha
mov
adc
in
dec
fs
je
jg
jl
jno
fstpt
cmp
jae
or
js
inc
xor
dec
lret
stos
jnp
pop
jb
lret
test
repnz
jmp
dec
lahf
push
push
jno
push
rcrb
scas
cmp
or
mov
cwtl
popa
and
inc
xchg
cmpl
push
fnsave
sbb
ret
jmp
negb
jmp
les
add
add
add
add
add
pushw
jp
push
jbe
add
pushw
jb
je
hlt
jmpw
jecxz
negb
jmp
inc
mov
jmp
cmpsb
and
pop
xchg
fwait
ja
mov
cltd
rcrb
add
addr16
sahf
int3
push
push
sahf
int3
cltd
jge
into
and
dec
mov
or
vpshaq
add
icebp
jmp
mov
xchg
xchg
add
data16
lea
adc
or
xor
push
jge
pop
cmp
enter
inc
shlb
stos
jmp
pop
pop
lcall
jb
cmpsl
out
adcb
mov
imul
push
dec
cmp
push
outsl
jl
clc
mov
pop
adc
bound
cmp
jmp
push
mov
stos
daa
clc
and
cmp
xor
gs
push
push
inc
mov
cwtl
shl
ret
aas
cmp
push
pop
jge
inc
scas
sbb
jmp
sub
mov
lock
mov
inc
cmp
popa
shr
add
sbb
xor
lock
add
aad
outsb
out
lret
or
add
popa
jnp
sbb
jbe
jp
sub
push
push
mov
pop
icebp
add
mov
js
dec
jae
sahf
xor
jb
push
cli
arpl
mov
pop
out
dec
sbb
dec
ja,pt
inc
orb
mov
jmp
mov
fstl
xchg
subb
lock
fsubl
cmpsb
adc
jmp
hlt
cmp
pop
aaa
mov
sbb
adc
xchg
push
int3
inc
sub
repnz
in
mov
vmovaps
and
jb
sbb
loopne
xchg
inc
insb
xchg
mov
data16
shr
lea
outsb
xor
cmpsb
icebp
mov
push
xchg
bound
fldl
xor
pushf
sub
pop
mov
add
add
cli
aas
jne
out
in
test
les
imul
inc
rol
outsb
lea
sub
jmp
arpl
cmpsb
add
add
add
pop
mov
sbb
push
mov
cmp
mov
fmull
lret
pop
popf
jns
mov
lahf
sbb
rol
xchg
add
cmpsb
pop
shlb
ret
addps
jmp
cltd
jns
scas
adc
xchg
xor
sbb
loop
jmp
jmp
sub
xchg
mov
addl
aaa
fs
xchg
mov
out
cmp
xchg
mov
and
stc
push
xor
popa
in
and
jb
sub
out
xchg
inc
xchg
out
sub
adc
lcall
sbb
fwait
ja
decl
pop
pop
stc
lds
test
mov
jg
into
lods
ret
out
push
jge
lcall
adc
mov
xchg
add
into
add
push
pop
jge
mov
imul
cwtl
xchg
jnp
in
jb
adc
ss
lret
add
cltd
jg
lds
fcmovnb
mov
jae
xchg
subl
xchg
xchg
jle
popf
add
jp
or
adc
sbb
mov
int
stos
jmp
mov
stc
push
add
add
cmp
ss
mov
or
xor
data16
dec
stc
popf
jno
data16
imul
pop
inc
addr16
sahf
xchg
stos
stc
mov
bound
xchg
jmp
outsb
nop
es
lret
cltd
les
lods
outsb
nop
push
shlb
xchg
adc
bound
out
adc
lahf
add
data16
push
out
pop
leave
mov
jae
mov
and
cmp
and
xchg
pop
jmp
js
dec
adc
movsl
addr16
into
adc
pop
jecxz
cmpsb
mov
mov
hlt
pusha
push
jnp
ficompl
jmp
insb
inc
aad
push
jmp
jle
add
dec
xchg
decl
mov
sbb
mov
hlt
add
pop
add
jle
push
add
pop
add
jns
inc
jp
movsl
jb
test
js
jae
cwtl
call
imul
add
or
sbb
test
add
stc
jne
lods
or
inc
shll
inc
subb
add
add
add
inc
adc
dec
arpl
cmp
fcmovnb
push
mov
or
xorl
daa
sbb
insl
jp
push
add
jae
xchg
incb
cmc
fs
cld
gs
movb
out
mov
loope
or
stos
aas
stos
dec
cld
sarl
inc
fsub
lret
aas
jecxz
in
jg
sub
fdivrl
add
add
add
add
mov
sbb
jnp
mov
mov
mov
jno
add
adc
mov
jg
icebp
sbb
stc
clc
mov
shll
jle
jg
outsl
dec
or
jb
adc
pop
xor
add
data16
dec
and
sbbb
jno
das
jbe
mov
inc
outsb
add
adc
mov
jmpw
jecxz
jb
jle
dec
setb
enter
pop
jmpw
jl
pop
xchg
cmpsb
jl
jmpw
jmpw
cmp
in
add
sub
dec
sbb
xchg
jmp
mov
jecxz
lea
xchg
add
mov
or
add
add
add
add
mov
hlt
lea
push
pop
call
pushl
call
popl
ja
incl
pop
test
cltd
in
or
fiadds
mov
inc
cmpsb
or
pop
jmp
xchg
or
mov
decl
push
sub
push
test
mov
fcmovnb
callw
data16
dec
push
jbe
mov
jmp
jb
mov
popf
jno
cld
inc
lcall
pop
lret
icebp
ljmp
cmp
push
orb
scas
dec
out
cmp
push
pop
mov
adc
sub
movsb
adc
sbb
xchg
mov
or
cltd
out
jbe
movsl
jae
jno
into
clc
stc
stos
jno
in
sbb
dec
sbb
fcmovu
mov
add
fldl
std
lock
push
in
dec
lods
in
ud2
dec
mov
adc
xchg
lds
mov
push
push
sbb
idiv
mov
lock
xor
pop
pop
in
das
and
jecxz
or
unpckhps
add
add
add
icebp
jecxz
inc
lods
loop
cmovg
or
jo
or
std
jno
rcrb
push
jecxz
dec
insb
jecxz
push
or
fidivl
xchg
loope
sub
aad
and
lret
sub
insb
xchg
popf
es
orl
xchg
xchg
jnp
inc
adc
or
sub
dec
je
xchg
imul
xor
add
add
add
add
in
or
fisubrl
jecxz
sbb
and
scas
push
mov
ljmp
xchg
mov
jle
insb
push
setb
inc
fwait
ja
movq
mov
jmp
cmp
inc
aam
rorl
xchg
add
xchg
nop
fstpt
push
push
mov
call
add
repz
cmp
lret
test
cmc
and
daa
push
lods
shlb
into
out
incl
jge
sbb
pop
leave
adc
pop
inc
shlb
stos
call
inc
inc
call
fisttpll
jmp
push
decb
add
add
add
fimuls
lock
clc
add
cmp
lahf
sahf
add
fisubrs
std
lock
mov
rcrl
idiv
xchg
movsl
cltd
loope
pushf
mov
out
enter
ficompl
mov
push
test
sbb
clc
call
xchg
lcall
dec
std
xchg
jmp
les
loop
dec
stc
lcall
es
clc
jmp
inc
stc
add
mov
clc
cmc
mov
aas
push
out
push
loopne
cmpl
das
lret
or
push
je
add
mov
int
xlat
and
xchg
xchg
mov
inc
lods
loopne
or
dec
xchg
mov
or
les
icebp
add
mov
dec
dec
jbe
mov
xchg
or
fucomip
cmp
fidivrs
or
jns
or
fucomip
dec
js
sbb
call
xorl
add
add
addr16
inc
in
xchg
je
xlat
xchg
pop
mov
or
fwait
inc
movsl
or
xchg
ss
sarb
mov
ljmp
xchg
push
lods
inc
aam
movsb
or
add
add
add
add
lcall
cmp
jmp
inc
setb
inc
pushf
popa
bound
dec
adc
mov
lea
xchg
scas
clc
cmp
cmpsb
inc
getsec
cmp
movsl
jns
xor
enter
testb
mov
call
cmc
push
sub
data16
test
add
add
add
add
inc
pop
call
jl
aad
jl
mov
push
call
mov
cmpsb
or
dec
push
adc
dec
cmp
hlt
cmp
xlat
andl
lret
or
jmp
jle
sahf
int3
fcomip
popf
int3
iret
cmc
popf
int3
jb
fucomip
icebp
mov
stc
or
xor
jae
test
pop
add
mov
mov
jmp
scas
xchg
jae
inc
jp
out
inc
push
mov
mov
jns
iret
mov
mov
push
pop
stc
mov
fisttps
dec
out
decb
mov
cmc
jge
out
outsb
xor
loop
ss
mov
lret
es
fucomip
movsb
movsb
cmp
out
inc
cmp
out
fisttps
xchg
pop
push
icebp
xchg
test
add
rcrb
or
fdiv
subb
data16
frstor
jno
add
mov
or
insl
sarl
cmp
mov
cli
pop
iret
test
cli
repnz
rorl
sbb
adc
shll
mov
mov
add
sarb
sub
add
add
pop
pop
mov
mov
mov
sbb
addb
xchg
mov
dec
test
in
es
cmp
jns
and
ja
and
xor
xor
push
xchg
jbe
inc
mov
mov
mov
jno
addr16
test
frstor
cmc
add
stc
xchg
and
jmp
mov
jno
and
std
jae
pusha
xor
aas
ss
in
jp
xor
fucomip
testb
jno
data16
jns
add
adc
cwtl
inc
push
jne
cli
call
and
mov
mov
and
cmp
xchg
pop
mov
push
push
xchg
pop
iret
mov
leave
data16
push
inc
ljmp
dec
mov
incl
adc
cltd
xchg
pop
xorl
adc
decl
lret
fwait
leave
mov
dec
lret
mov
jmp
iret
leave
data16
movsb
push
mov
jb
jnp
push
push
je
push
gs
inc
imul
js
xor
outsl
idiv
and
loopw
adc
out
gs
add
and
ja
push
out
loop
ds
scas
xchg
sub
jb
xor
jmp
out
ljmp
inc
add
icebp
mov
add
add
loop
jb
xchg
daa
jecxz
out
out
gs
aas
cmp
jb
jecxz
jb
test
mov
jb
adc
push
dec
or
adc
enter
cmp
and
stc
jbe
pop
pop
push
push
inc
in
xchg
dec
mov
out
add
push
fwait
adc
jg
cwtl
mov
cmp
jmp
cld
fnstenv
in
ret
jns
mov
mov
jb
ja
cs
ficomps
push
jnp
add
xchg
pop
lret
and
mov
push
enter
roll
ds
sbb
testl
data16
xchg
xchg
cld
shrb
jmp
jmp
out
stos
and
sahf
popf
sub
mov
lods
cmp
mov
and
dec
and
inc
insb
adc
data16
pop
xchg
outsb
lds
mov
mov
call
jmpw
add
add
add
add
lods
movsl
add
ljmp
imul
add
lret
data16
cmpsl
add
data16
xchg
lcall
sub
je
inc
xchg
decl
cmpsb
sbb
data16
mov
sbb
lret
sbb
cmpsl
add
data16
sahf
int3
mov
or
add
add
add
sub
in
out
adc
dec
xchg
dec
push
add
outsl
xchg
push
sub
jno
pop
jmp
sbb
test
bound
test
lret
vshufps
rorl
cmp
dec
mov
ds
lret
ss
fucomp
jmp
incl
ljmp
mov
dec
ss
mov
clc
stc
test
add
add
add
add
jmp
sahf
enter
push
jae
fs
clc
movsl
mov
fists
xlat
push
push
inc
js
inc
subb
stc
int
pop
pop
stc
xchg
pop
mov
cmpsb
mov
sahf
lret
mov
fucomip
inc
pop
fbstp
lods
ret
hlt
mov
cmpl
imul
dec
dec
repz
mov
dec
ret
repz
xchg
out
aam
adcb
dec
call
cmpb
pop
cmp
mov
adc
cmp
cmp
push
mov
xchg
pop
mov
mov
jle
jp
mov
dec
dec
shr
cmp
dec
ret
repz
xchg
into
aam
xchg
lods
inc
jb
inc
dec
cmp
fcoml
es
add
cmpsb
jo
lret
movsl
popf
fldl
inc
mov
sub
ljmp
pop
jb
push
fsubrp
push
xchg
push
std
dec
lcall
inc
jmp
sub
cmp
xchg
jl
jo
add
jmp
es
sbb
insb
mov
xchg
sahf
jmp
sbb
rclb
xor
mov
dec
mov
jg
cld
add
jmp
push
or
int3
inc
push
sahf
int3
push
push
sahf
int3
mov
popf
bound
mov
dec
and
add
add
dec
inc
inc
mov
scas
sub
adc
add
imul
mov
push
es
sbb
xchg
adc
add
add
add
push
add
sbb
leave
mov
into
adc
inc
mov
ret
push
cmp
adc
sbb
adc
jo
clc
out
mov
fidivrs
mov
and
adc
sub
icebp
stos
lea
movsb
push
pop
xor
jmp
pop
xchg
jl
in
mov
mov
lret
add
pop
cmpsl
lret
xor
lret
ficoml
jmp
mov
push
cmp
and
add
je
add
mov
shll
xchg
lahf
xor
sahf
aas
subb
jb
inc
inc
pop
out
inc
jb
shr
daa
mov
add
jg
fadd
jg
test
or
or
or
xchg
lds
add
xchg
add
int3
dec
rolb
dec
jp
jg
pop
jg
pop
hlt
and
inc
rolb
jno
jle
jp
add
lea
jb
add
lods
fsts
ret
push
push
loope
jg
jb
mulpd
in
push
sub
ret
fildll
aad
jmp
add
fildll
aad
jmp
int
mov
sub
imul
aaa
mov
jno
cmp
into
fstl
lahf
pop
jmp
mov
loope
outsb
dec
mov
jno
shll
pop
fists
in
fdecstp
icebp
pop
imul
fdivl
sahf
jp
fcmovnb
jmp
add
imul
int3
cli
push
arpl
xchg
jmp
sub
push
aas
sti
adc
sti
sbb
fs
rcr
xchg
mov
cs
pop
pushf
test
cmp
push
call
add
loope
daa
mov
lds
lret
jmp
aas
jnp
mov
std
xchg
jge
jmp
add
jmp
fistpll
lods
jnp
mov
std
xchg
pushl
or
fwait
and
test
shlb
lret
mov
ror
scas
stos
ror
cmpsb
cmp
test
push
test
push
or
pop
scas
test
dec
fdivr
ds
jmp
xchg
pushl
pop
mov
and
int
add
cmp
cmp
gs
scas
pushl
out
gs
mov
lcall
out
gs
fimuls
jl
int
add
dec
pop
stc
in
clc
add
inc
sarb
notl
xor
jg
mov
push
inc
test
jg
xchg
mov
dec
cmpsb
dec
ror
sbb
xchg
add
mov
jg
add
push
sbb
ja
jg
and
xor
sbb
ljmp
inc
dec
scas
cld
add
inc
jns
xchg
rorb
dec
push
int3
xchg
dec
inc
jno
mov
sub
loop
cmpsb
cmc
jg
bnd
push
lahf
jp
adc
push
cmp
jb
xor
data16
mov
add
add
add
cmp
jns
jno
and
hlt
add
stc
cmpsb
cmp
stc
mov
pop
in
aad
jmp
and
in
popf
ret
xchg
movsb
dec
je
fs
into
ljmp
outsb
push
loop
fstpl
jle
bnd
data16
sbb
cmp
and
ret
data16
aas
pop
add
or
add
add
add
ret
hlt
or
dec
pop
clc
xchg
call
or
movsb
aas
addb
adc
mov
mov
test
std
mov
jns
hlt
push
or
push
adc
sub
fwait
mov
data16
mov
incl
sbb
out
dec
jae
loopne
scas
jle
xor
jl
int3
fnsave
pop
cli
lahf
jecxz
fiaddl
jb
mov
fsubrs
cltd
test
mov
incl
mov
adc
bound
icebp
pop
insb
inc
jmp
mov
push
stc
dec
aas
mov
cmpsb
mov
adc
icebp
mov
dec
inc
push
adc
jmp
loope
into
lods
sub
xchg
iret
push
inc
jne
cmp
out
sahf
or
jns
add
xor
incl
adc
lds
je
cmc
jg
xor
cmp
cwtl
repnz
push
jae
notb
arpl
push
gs
aas
pop
jae
cmpsl
or
sbb
push
xor
xlat
movsb
add
inc
ds
dec
or
jg
stos
dec
in
add
lock
dec
jne
pop
add
int3
loope
repnz
jnp
out
or
push
hlt
jg
ffreep
data16
movsl
je
cmp
jecxz
xor
jmpw
xchg
push
repnz
inc
cli
sbb
nop
sub
mov
jmp
cmp
jge
cmpb
add
mov
test
data16
dec
xor
and
imul
jno
jmp
and
iret
jae
cs
out
gs
jp
pop
in
in
jae
fists
inc
xchg
lcall
jmp
rorb
jne
mov
jge
jno
cld
cmpb
or
pop
test
lds
add
xchg
decl
outsb
lds
data16
inc
into
mov
lock
jmp
int
fcmovnb
fcoms
fcmovnb
sub
mov
mov
jle
add
aaa
mov
jecxz
pop
or
inc
js
fwait
sti
xlat
cwtl
add
xchg
incl
mov
mov
repz
mov
xchg
cmp
jne
adc
dec
mov
add
add
add
or
add
lock
sub
rep
xchg
sub
mov
outsl
fstl
jb
or
push
add
cmc
jnp
fbld
sarl
call
es
jae
xchg
adc
insl
push
stc
mov
mov
jbe
sbbl
xor
fcomp
add
sbb
add
add
add
in
add
mov
in
xorb
xor
inc
fcmovb
pop
outsl
adc
aas
sti
xlat
rcll
push
aas
push
push
jg
out
xchg
mov
lea
mov
repnz
dec
xchg
aaa
out
pop
lock
xor
dec
loop
sub
mov
add
pop
ja
mov
lcall
aas
call
jmp
ljmp
cmp
fists
lock
xchg
iret
fbstp
lods
cmp
xor
add
in
aaa
fistps
and
xchg
jmp
ds
fistpll
lock
repnz
insl
or
out
shl
add
fbstp
gs
pop
xchg
xchg
ljmp
jno
aaa
fnstsw
outsl
into
xlat
jno
fsubrp
mov
mov
sub
frstor
repnz
incl
fistps
sbb
add
fwait
jp
imul
cbtw
sbb
dec
cmpl
dec
insl
loope
sbb
push
or
sbb
jl
add
ret
add
sub
imul
xchg
inc
js
or
mov
sbb
xor
stc
sub
inc
jge
data16
push
lret
ret
scas
inc
adc
jb
jp
das
mov
data16
adc
mov
adc
loopne
push
outsb
or
outsl
out
jb
loopne
add
sub
aad
xor
loop
decb
adc
ret
add
or
mov
std
fbld
call
fisubs
insl
mov
mov
lret
jbe
clc
stc
ja
adc
nop
enter
mov
aas
or
mov
add
jle
mov
loop
or
cs
pop
in
inc
sbb
jb
pop
pop
jne
lret
cmpsl
pop
xchg
xchg
mov
rolb
jp
xor
jg
popa
mov
jg
imull
add
shr
adc
add
aad
inc
jae
clc
xchg
xchg
mov
push
adc
jb
add
mulb
jl
aam
add
movsl
imul
add
cmp
imul
jno
gs
inc
fbld
out
xor
jno
movsb
dec
div
arpl
and
sti
test
mov
pop
jns
aad
jmp
out
xor
jno
imul
mov
jno
inc
divl
mov
data16
mov
notl
dec
fisubl
add
ja
sub
mov
out
sub
jmp
pop
aad
jmp
jno
mov
stc
popf
imul
lret
add
sub
sbb
push
fwait
pop
iret
mov
add
inc
xor
mov
mov
imul
add
outsl
ja
dec
aas
adc
into
jmp
daa
inc
sub
xchg
push
fsts
sbb
ficoms
aas
loop
and
ss
push
jno
sub
movsb
mov
lea
pop
lock
insb
out
jb
fcoml
ret
cli
or
cltd
cld
dec
test
cwtl
pop
add
mov
jmp
fisttpll
lret
add
ss
add
fs
jb
faddl
icebp
popf
iret
jl
out
push
sti
xor
popa
and
pop
in
out
mov
fbld
ret
jg
icebp
gs
fstpt
mov
imul
dec
adc
adc
jb
faddl
addr16
stc
movq
fidivrl
data16
nop
jmp
ds
mov
sub
add
add
add
jb
push
jnp
sarb
xchg
aad
shlb
sarb
pop
pop
orl
adc
cmp
push
cmp
push
add
inc
dec
dec
lds
jb
mov
dec
jae
jl
jg
xor
jg
imul
rolb
jg
jb
inc
mov
lahf
jb
push
addr16
sub
xchg
push
add
mov
cld
mov
bound
jmpw
xchg
ja
in
cmp
jno
jmpw
pop
fistpll
fnstsw
push
sti
test
rcr
lods
mov
jmpw
pop
arpl
das
jns
jno
imul
mov
in
jns
jno
adc
ljmp
fnstsw
stc
sub
add
add
mov
clc
push
roll
sbb
inc
ficoml
fcmovnb
mov
sub
inc
ficoml
lret
ret
adc
fidivrs
mov
mov
jmp
ja
data16
cltd
or
mov
jp
fisubs
or
std
push
add
inc
ficoml
pop
ret
fiadds
les
loope
fsts
add
jmp
dec
and
rolb
jmp
ja
data16
mov
dec
ret
clc
mov
mov
mov
frstor
popa
jg
fists
mov
frstor
mov
loop
push
out
gs
cltd
jp
hlt
js
add
stos
sti
icebp
inc
pop
jp
mov
iret
or
leave
test
loop
xchg
bound
add
add
add
out
add
cs
xchg
inc
jne
jb
data16
cmp
je
jb
dec
adc
xor
loop
jne
hlt
mov
xchg
sti
sbb
pop
test
test
jmp
adc
jg
cmc
dec
clc
adc
movsb
push
nop
stc
lahf
and
call
ret
jno
xor
jg
ficompl
sbb
add
add
stc
mov
cmpb
aad
xchg
test
sbb
jg
adc
and
insb
xchg
xchg
mov
sbb
jnp
jg
ret
into
pop
pop
gs
sbb
jl
jg
stos
mov
mov
idivl
addr16
subl
call
add
data16
mov
jmp
jno
jge
imul
movsl
shll
pop
je
popw
cmpsl
add
lock
jns
jno
cmpsl
ljmp
bound
adcb
sub
pop
outsb
data16
in
and
sub
fstpl
int3
jmpw
jg
or
xchg
scas
sahf
dec
mov
add
or
int3
push
push
jle
pop
mov
inc
leave
inc
jne
mov
mov
add
fiaddl
or
mov
pop
ret
dec
add
lcall
into
xlat
adc
push
ret
data16
repz
inc
inc
mov
add
stc
pop
test
push
or
add
adc
push
add
mov
push
mov
dec
arpl
data16
pop
xchg
cli
fisubl
jmp
dec
aas
jle
pop
xchg
gs
xchg
jbe
mov
push
gs
mov
fstpl
pop
jp
mov
rorb
in
gs
rcr
adc
lret
mov
dec
cmc
mov
in
gs
add
test
orl
stc
jge
imul
jl
gs
out
add
rolb
ret
inc
loop
push
add
cmp
loop
mov
insb
mov
jne
pop
push
jb
cwtl
insl
in
lcall
ret
xor
and
adc
divl
mov
adc
or
xchg
je
lods
lds
fs
jo
in
and
jae
mov
adc
sub
inc
jb
adc
jb
fnstenv
data16
dec
cmp
clc
jae
loop
pop
pop
out
xor
xchg
jo
or
rorl
loope
leave
divb
add
data16
fnstsw
bound
clc
mov
cmp
xlat
jno
frstor
orb
jmp
sbb
jmp
pop
mov
pushf
jmp
cmp
loope
imull
clc
cmp
divl
jge
pop
dec
sti
xchg
jb
data16
mov
mov
negb
jmp
add
add
add
xlat
shlb
sarb
mov
pop
jmp
je
out
push
mov
nop
push
into
push
sbb
iret
adc
les
and
sahf
jle
shr
cmp
rolb
arpl
add
lret
push
shll
inc
fwait
jp
fmull
cwtl
xor
data16
mov
mov
dec
cli
mov
add
iret
rcll
ret
lahf
popa
mov
pop
sub
sbb
add
je
push
dec
pop
mov
xlat
add
faddl
mov
ret
sbb
xchg
pop
iret
push
lods
push
jbe
sarb
ret
sbb
aas
jb
daa
or
pop
push
scas
jo
adc
in
add
ret
jns
fs
or
mov
lods
popa
rorl
push
xchg
add
stc
mov
mov
add
jne
jnp
mov
inc
jle
fcoms
imul
add
jle
into
pop
adc
adc
jg
jne
cs
adc
sbb
mov
jb
mov
ss
sbb
adc
push
gs
imul
jg
add
rolb
fs
pop
gs
cmpsb
push
iret
aaa
imul
sbb
jg
jns
nop
in
movb
inc
jmp
mov
mov
fstpl
test
movsl
imul
lahf
popa
jmpw
dec
pop
jo
xor
or
addr16
aam
pop
dec
sub
popa
push
jmp
inc
pop
cmc
add
mov
aaa
jmp
inc
pop
aad
test
rcr
addl
movsb
popf
dec
mov
adc
cmp
add
icebp
dec
dec
shl
jno
jg
add
xchg
pop
das
dec
add
data16
and
or
push
add
pop
jmp
pop
adc
sahf
int3
add
push
sahf
int3
loope
cmpsb
decl
ds
decl
sub
push
add
jae
scas
adc
sbb
shlw
lcall
outsl
xchg
decl
enter
inc
sarb
cld
pop
sbbl
dec
adc
fistpl
lret
nop
jb
jmp
jb
fs
icebp
cs
add
add
inc
fwait
mov
jb
stos
lret
scas
test
stos
push
stc
jge
loope
fcomps
shr
push
lock
ror
cs
or
dec
icebp
lds
gs
seta
cli
gs
cmp
test
cld
sub
in
test
stc
or
push
jbe
add
lods
outsb
sub
or
xchg
add
sbb
jg
out
inc
idiv
sub
pop
sbb
cmp
pop
adc
xchg
les
xchg
sub
lcall
push
mov
sarb
je
cmp
pop
shrb
inc
shrb
add
add
movsb
xorb
mov
add
lock
out
mov
inc
pop
dec
dec
sbb
jbe
and
out
jb
mov
icebp
packuswb
pusha
inc
pop
loope
mov
jmp
dec
jae
fcompl
fbstp
mov
jmp
jno
sub
xor
mov
mov
mov
lock
stc
dec
xchg
ds
adc
jno
and
add
inc
jae
add
jp
ror
bound
fnsave
ss
jno
mov
test
mov
mov
jb
xchg
sub
mov
pusha
pop
xchg
rorl
cmp
popl
mov
fistpl
fcompl
adc
sub
and
mov
and
add
add
jge
push
cmpb
jmp
andb
xchg
inc
pop
inc
or
inc
leave
xchg
inc
push
or
les
decl
les
add
or
les
dec
ret
pop
fstl
aaa
jns
sub
push
jmp
std
adc
or
push
lock
cmpsl
ljmp
add
add
lcall
out
fcmovb
sub
test
in
scas
shl
adc
jmp
in
aam
jno
xchg
mov
decl
mov
and
in
xchg
call
mov
js
andl
jl
in
cmp
stc
movsb
and
loopne
mov
or
in
jl
stos
dec
out
loopne
movl
add
add
mov
inc
aam
testb
jg
into
add
jbe
mov
ret
in
jo
jge
fcmovb
xorb
jg
mov
jl
jb
fiaddl
sti
mov
das
mov
add
jg
add
add
or
test
mov
icebp
xchg
cmpsl
jg
xor
aaa
insl
push
push
repz
into
adc
jne
data16
test
loopne
push
imul
adc
jmp
adc
jmpw
aaa
aad
fildll
jno
jmp
jno
or
inc
test
jmp
cmp
sbb
mov
sub
lods
call
push
test
jno
or
add
add
add
fiadds
fbstp
jne
push
sbb
fiadds
and
ja
movsb
pop
jg
add
dec
cmpsb
add
and
jl
push
and
xchg
xchg
and
enter
dec
and
enter
jle
add
push
out
pusha
ror
dec
push
dec
and
enter
or
mov
xchg
push
push
jge
add
push
out
or
adc
xchg
xchg
addr16
add
push
xor
pushf
int
imul
leave
hlt
push
aaa
enter
jbe
add
in
out
rclb
xchg
lret
jb
pop
clc
xchg
data16
call
frstor
mul
sbb
ret
outsb
cmpsl
mov
and
pop
std
je
mov
das
cmc
mov
push
add
gs
cs
xchg
insb
imul
cli
arpl
jb
and
jae
cmpsl
xchg
inc
out
sub
scas
loope
mov
jo
sbb
hlt
adc
jb
out
jle
gs
cld
xchg
incl
pop
or
js
pop
imul
js
sbb
js
mov
mov
xchg
cmpsl
add
jae
jl
jno
mov
add
mov
mov
or
outsl
jg
sti
cmp
pop
lret
rol
jnp
popf
xchg
add
add
jg
mov
cmpsl
lcall
push
lcall
clc
mov
fnstsw
mov
rcrb
jb
cld
addr16
push
xchg
add
mov
add
add
add
add
fcomps
mov
jmp
dec
enter
push
dec
fiadds
or
aas
adc
jno
data16
mov
es
xchg
enter
push
push
push
jo
test
jns
jno
movsl
xor
jge
clc
jbe
mov
stos
lock
ja
pop
sub
add
movsl
push
shl
lods
mov
addr16
adc
int3
xchg
sbb
mov
int
mov
and
bnd
mov
rolb
mov
loop
lea
adc
pop
mov
popa
ja
fisttpl
adc
mov
fsts
fcmovnb
popl
dec
sub
jp
mov
pop
shlb
mov
fwait
out
stos
data16
jmp
stos
inc
aam
add
into
push
mov
jmp
xchg
mov
mov
shll
jg
add
aas
cmc
push
and
popa
stc
cmp
and
jno
adc
mov
jae
add
add
and
fsubrp
dec
or
lret
loop
mov
mov
mov
fcmove
scas
xchg
por
stos
xchg
pop
fcmove
scas
mov
jmp
stos
xchg
test
imul
jb
jae
nop
mov
mov
or
cmc
mov
frstor
jnp
dec
dec
jge
icebp
mov
jne
js
mov
iret
sbb
push
jg
lods
mov
insb
adc
xor
add
add
add
add
jle
jle
adc
add
jg
das
rolb
xor
jg
in
or
pop
scas
insb
inc
mov
cli
vunpcklps
hlt
sub
fnsave
xchg
sub
jg
out
jne
mov
mov
fadds
in
test
add
int
cmp
xlat
fstps
cmp
pop
sti
subb
fistpll
mov
jmp
or
xchg
cmpsl
inc
jno
jns
into
xchg
push
xor
adc
jno
xor
xor
xchg
movsl
add
mov
add
sbb
loope
sbb
jo
aas
cmc
pop
pop
push
dec
addr16
add
lret
fwait
leave
data16
cmp
xchg
je
and
clc
int3
sub
inc
outsl
aaa
call
push
mov
lcall
leave
push
mov
lcall
decl
mov
cmp
lods
and
mov
mov
lcall
lret
mov
dec
jnp
mov
cmp
add
add
add
add
pop
sbb
bound
pop
into
ss
imul
xorl
out
fisubs
icebp
test
jge
imul
jb
movsb
or
xor
jb
hlt
mov
iret
shl
push
outsb
pusha
in
or
fcmovu
stc
sub
adc
jbe
hlt
jne
decl
loope
stc
add
mov
in
push
bound
push
int3
gs
mov
mov
mov
test
gs
sti
adc
jg
data16
movsl
adc
jg
mov
mov
add
addb
sti
popf
xchg
add
sbb
outsb
jg
mov
fdivp
xchg
cmp
add
add
add
add
mov
xor
lret
jg
testl
js
xor
jg
jmp
mov
idiv
cmpb
mov
shlb
cmpsl
out
dec
data16
mov
add
xor
jmpw
pop
popa
jb
xchg
das
lcall
jmp
cmp
fsubp
xchg
cmp
add
or
push
dec
movsb
pop
out
sar
jno
or
adc
jno
jne
add
or
notl
jns
jno
cmpsl
ljmp
mov
mov
leave
stos
es
loopne
xchg
push
rcr
push
call
xchg
push
insl
inc
test
into
test
inc
push
sub
int3
mov
add
add
add
add
shlb
mov
add
sbb
lcall
scas
inc
mov
pop
mov
les
add
fs
les
add
andl
or
sub
mov
mov
fldl
mov
pop
push
pop
add
bound
ds
add
add
add
fnstenv
and
les
jb
cmp
jno
sub
mov
add
ja
repz
sub
lock
sbb
cmpsb
fbstp
cmpsl
cld
lods
test
filds
mov
out
scas
jg
gs
mov
jb
add
int3
pop
sti
fdivl
je
xchg
loope
in
repnz
add
add
jb
ds
loopne
adc
arpl
jno
arpl
jno
arpl
ffree
aad
add
add
jno
add
jo
add
jo
add
jo
add
lds
jo
add
aad
and
add
lds
jo
add
push
or
add
add
jo
add
outsl
mov
sbb
outsl
cwtl
add
inc
inc
rep
mov
adc
push
and
data16
mov
xchg
out
add
pop
test
ficoms
or
mov
popa
jmp
or
repnz
xchg
scas
stc
inc
scas
notb
dec
stc
add
sti
jmp
scas
fisubrs
xchg
ljmp
imul
xor
cmp
insb
mov
cmp
insb
mov
cmp
insb
mov
cmp
insb
mov
cmp
insb
mov
cmp
add
cltd
add
int3
cltd
add
int3
cltd
add
rcl
push
ror
cltd
add
adc
aam
ror
add
rcl
push
int3
cltd
add
rcl
push
sahf
int3
cltd
add
rcl
push
int3
cltd
add
rcl
push
jl
cltd
add
dec
mov
pop
bound
cmp
pusha
test
pusha
mov
test
add
xchg
mov
fs
ljmp
mov
inc
and
xorb
lock
mov
pop
add
ret
imul
repz
mov
mov
pop
mov
mov
in
lds
icebp
ds
mov
jb
movsl
cld
and
aad
nop
arpl
jb
ret
stos
add
mov
xor
pop
insl
das
fs
push
scas
loop
xor
test
out
rorb
in
in
jp
int3
clc
jb
gs
cmc
push
jb
adc
loopne
mov
jbe
idivl
lods
test
mov
add
notl
add
adc
cmpsl
pause
ret
jg
jb
mov
repz
add
mov
fcompl
jno
mov
mov
jno
mov
add
add
add
movsl
movsb
pop
jg
xchg
adc
addb
aam
into
add
cld
scas
mov
cmpsl
push
add
pushw
jmpw
jp
xor
es
add
mov
repz
add
cli
ret
mov
add
jg
ffree
xchg
jmp
lea
bound
fadds
xchg
jmp
or
lods
test
ficoml
ljmp
jbe
mov
cmpsb
push
mov
push
test
dec
mov
or
fnsave
das
stos
pop
add
jmp
mov
dec
mov
sbb
xor
shlb
lret
dec
insl
jns
iret
shrb
sbb
inc
dec
lds
add
lret
mov
mov
dec
lds
lahf
inc
shrl
pop
lret
lret
subl
xchg
push
add
jg
jmp
xchg
gs
sbb
add
inc
add
test
pop
inc
shlb
push
or
mov
jp
enter
test
cmpsb
sub
mov
ljmp
ret
push
mov
lret
pop
mov
outsl
gs
scas
add
out
push
and
lcall
stos
adc
mov
dec
sti
incl
outsb
mov
jb
int
pop
cmpsb
mov
pop
outsb
jg
jb
lods
gs
add
dec
cmp
jno
lock
xor
add
xchg
test
add
mov
dec
inc
ret
into
into
mov
xchg
and
sahf
push
orb
add
ret
mov
sbb
jg
push
add
ret
bound
addb
cmp
xor
dec
stc
sldt
add
add
add
add
dec
fs
orb
add
testl
xor
es
testb
mov
jne
lahf
mov
xor
bound
movsb
jns
dec
and
mov
mov
bound
pushl
lods
imul
fyl2xp1
shlb
xor
lcall
xor
inc
lahf
cmp
repnz
scas
outsb
and
xor
mov
mov
push
ljmp
scas
dec
mov
ret
nop
test
inc
addr16
shr
sbb
shl
dec
mov
ljmp
in
sbb
mov
nop
mov
cmp
add
add
add
add
dec
add
faddl
lea
xchg
mov
jno
xchg
popa
mov
inc
ja
ljmp
leave
dec
call
and
jns
lret
cmp
and
enter
in
dec
adc
sub
stos
dec
adc
mov
jne
cmp
inc
jb
rorl
std
mov
xor
jb
gs
scas
incl
and
scas
gs
push
clc
dec
lock
push
add
push
cmp
packuswb
adc
mov
jp
jbe
bound
mov
test
sbbl
out
pop
mov
mov
ficoms
add
imul
inc
mov
adcl
dec
mov
adc
mov
add
loope
cld
lds
out
cltd
inc
dec
or
cmp
cmpl
mov
repz
dec
repz
cmp
jg
insl
dec
lds
sbb
cmp
movsb
jmp
add
push
cmp
jl
loop
add
dec
cmp
insl
lret
lock
push
add
xor
call
add
fstl
mov
fs
xchg
lds
inc
xor
dec
inc
and
es
adc
into
jp
movsl
dec
adc
mov
sub
lods
add
jmp
pushf
add
jmp
jno
callw
ljmpw
jno
data16
data16
jno
data16
jno
data16
data16
add
add
add
add
data16
jae
data16
data16
data16
lods
mov
xchg
add
data16
dec
xchg
call
dec
nop
call
dec
xchg
call
dec
data16
pop
add
dec
outsb
add
dec
dec
add
dec
push
add
dec
mov
aam
mov
aam
mov
xchg
dec
mov
les
lfs
pop
mov
mov
push
dec
mov
dec
mov
add
repz
inc
push
cmp
adc
lock
int
mov
cmpl
ljmp
cmp
or
repz
lods
in
jle
scas
push
jb
int3
xchg
lret
mov
push
ret
mov
mov
dec
ret
and
es
and
pop
imul
scas
or
cmpsb
pop
lds
mov
add
add
add
add
gs
addr16
inc
dec
mov
push
xor
dec
mov
xchg
mov
pop
scas
and
and
and
and
test
jo
sub
add
loope
or
gs
mov
lods
push
xchg
imul
push
ficoml
sbb
mov
cmpb
jb
pop
hlt
dec
xchg
add
add
add
xor
subl
scas
in
idivb
movsb
iret
stc
aas
add
jge
icebp
dec
jge
jb
mov
cmpsl
adc
arpl
push
or
rep
sbb
inc
push
inc
xchg
sub
push
cmp
push
and
push
mov
and
push
mov
add
data16
js
loope
xchg
popa
push
lds
testl
add
add
push
jp
jmp
cli
lret
test
jmp
ljmp
jmp
fwait
ucomiss
or
imul
ja
dec
lret
and
inc
mov
or
adc
add
mov
sub
mov
fdivp
sbb
jno
sbb
in
stos
add
sahf
ret
pop
xchg
enter
test
ret
data16
pop
je
mov
xor
jecxz
mov
inc
rclb
clc
popa
push
add
add
stc
dec
fldcw
jp
push
aaa
mov
pop
xor
jmp
rclb
call
testb
out
dec
or
ja
add
xor
add
add
add
add
pop
mov
adc
les
or
out
cld
lds
mov
mov
repnz
int3
sarb
imul
lahf
fcomp
sub
ret
sbb
jo
cld
mov
xchg
lret
scas
test
enter
adc
jb
pop
and
cmp
and
and
cld
sti
movsb
or
xchg
mov
aaa
and
jge
mov
mov
sbb
in
cmpsb
inc
mov
mov
cmp
push
gs
mov
pop
inc
in
dec
enter
adcl
mov
inc
jnp
addl
jb
jg
xchg
std
pop
mov
dec
mov
cmc
mov
jnp
popf
push
jb
pop
add
jg
xchg
std
pushf
mov
mov
add
fcompl
adc
testb
iret
inc
mov
xchg
out
aam
push
sub
jb
jl
cmpsb
xor
cmp
dec
jge
ljmp
push
jne
test
cmp
sub
push
jge
dec
pop
dec
mov
add
add
add
cmp
outsb
mov
fmul
mov
and
and
test
fnstsw
xchg
sti
arpl
cmp
sahf
dec
mov
cmp
icebp
es
icebp
je,pn
inc
mov
jnp
mov
adc
cli
dec
xchg
out
mov
popa
add
imul
add
add
add
xchg
pinsrw
mov
push
nop
aam
rolb
int3
xchg
pmaddwd
iret
lods
cmp
je
xadd
fstpt
lret
mov
popl
mov
mov
in
mov
pop
jl
mov
xchg
data16
dec
adc
cld
mov
pop
mov
mov
test
jmp
data16
mov
jnp
subl
add
cltd
int3
xor
cwtl
imul
loope
or
shl
xchg
mov
mov
insl
aam
or
cltd
js
xor
jl
pop
flds
xchg
or
inc
add
or
xlat
cltd
int3
add
mov
stos
and
jl
andb
add
adc
orl
jecxz
daa
jns
cwtl
jge
lds
jb
push
jp
or
add
cmp
jg
jl
mov
pop
cs
inc
inc
add
imul
mov
push
mov
cmpsl
paddusb
adc
add
add
add
out
enter
dec
inc
add
or
xor
cld
mov
sbb
xchg
imulb
roll
cld
mov
jp
mov
ret
jle
ljmpw
or
out
dec
xchg
xchg
mov
jmp
outsb
pushw
mov
adc
adc
bound
ljmp
add
fcoms
bound
dec
sub
mov
scas
jb
ljmp
jbe
ljmpw
scas
sbb
mov
sbbb
stos
adcb
dec
cwtl
jg
ds
cmp
dec
fnstcw
xchg
add
sbb
xchg
sub
rorl
push
lds
add
mov
dec
sarl
push
lds
sbb
xchg
sub
lea
sub
lods
repz
cs
and
sub
inc
mov
push
addr16
shl
and
flds
fwait
ret
add
add
xchg
add
shr
je
fcompp
in
jb
test
add
add
add
or
push
mov
lods
subb
push
aas
xchg
jnp
jb
sub
pop
incb
pop
dec
pop
jmp
fiadds
cld
cwtl
out
sub
jno
xor
xchg
sub
mov
xorl
jnp
jae
cwtl
sbb
mov
call
and
push
mov
lahf
add
mov
fildll
jb
mov
jge
sub
in
ret
jmp
add
xchg
shlb
mov
ret
push
mov
xchg
mov
je
cmpl
add
push
mov
out
pusha
test
aas
adc
mov
loop
jp
dec
add
jns
mov
adc
dec
out
xchg
add
mov
pop
push
leave
ds
inc
sub
or
jo
jo
and
fisubl
fs
aaa
insl
xchg
push
data16
mov
and
in
jmp
test
rep
fildl
mov
popa
jmp
add
add
add
test
das
sub
outsb
aaa
imul
jle
in
or
je
inc
sub
mov
push
stc
call
inc
jbe
ja
add
push
mov
data16
xor
ror
data16
shll
popf
adc
xchg
je
sbbb
xor
add
ret
xchg
imul
add
adc
sub
ja
mov
pop
jbe
cmp
dec
adc
adc
push
add
rorl
das
mov
shlb
mov
xchg
lcall
pop
inc
add
sti
fisttpll
and
jl
sahf
mov
add
xchg
out
ljmp
sahf
mov
cltd
pop
insl
call
mov
mulb
sbb
jbe
mov
lahf
dec
mulb
pop
testl
insl
push
xor
sar
in
adc
ja
or
bound
aas
ds
shrl
ljmp
aam
mov
push
popf
add
jb
push
enter
iret
dec
push
test
jg
jb
mov
testl
enter
jg
jb
dec
notb
xchg
mov
mov
enter
push
idiv
sbb
das
cmpsb
push
fmuls
test
lret
cli
pop
cmp
fiaddl
test
popf
test
add
mov
jg
and
push
fadd
pushf
mov
jb
fstl
xor
popa
lods
mov
xchg
jno
sahf
add
pop
cmpsl
xor
add
ret
jno
sub
inc
and
imul
mov
sti
ret
pop
psubw
das
sub
clc
cld
je
mov
inc
adc
test
jmp
mov
mov
jmp
jle
lods
jg
aad
cmpsl
xchg
jmp
bound
add
rcr
fwait
fwait
ret
data16
jmp
clc
push
jle
mov
enter
mov
cmp
and
ret
data16
sbb
shll
fstl
in
add
or
clc
lock
sbb
lock
decl
ret
add
movl
stos
add
ret
jmp
cmp
pop
pcmpgtb
ss
es
xchg
sub
and
or
jae
scas
jmp
test
test
fimuls
xor
loope
lcall
add
add
add
out
mov
and
gs
std
inc
inc
or
cmp
mov
mov
mov
stos
ds
insl
push
jmp
dec
loope
sbb
mov
and
and
jae
pop
jg
cmp
jb
je
dec
sahf
jge
insl
inc
jne
mov
dec
push
jno
and
das
imul
in
or
add
int3
adc
icebp
movl
pop
std
mov
imul
inc
loope
mov
inc
fxch
loope
cli
lea
gs
sbb
jl
inc
adc
sar
lea
push
fwait
orb
xchg
add
push
lret
add
add
add
add
add
add
mov
data16
cld
cmpsl
xor
sub
mov
movsb
imul
jb
aam
test
insl
adc
out
and
and
dec
cmp
mov
dec
or
mov
mov
xor
mov
mov
sbb
dec
daa
fldcw
add
add
add
add
clc
outsb
bound
shlb
mov
xor
xor
xchg
in
jmp
xor
loop
adc
movsl
adc
xchg
jnp
mov
mov
mov
int3
ss
out
and
mov
adc
or
int3
or
int3
ds
jge
dec
rclb
js
jmp
push
push
and
jp
adc
decl
dec
movsl
or
push
mov
clc
hlt
mov
or
dec
stos
incl
or
dec
push
jge
mov
xchg
pushl
les
imul
sti
sub
cli
fstp
fmull
sti
and
cli
lcall
xor
mov
adc
loope
add
sbb
stc
test
psubb
filds
int3
xor
mov
out
iret
cli
dec
imul
clc
cmp
sub
cli
sub
push
sbb
adc
xor
mov
inc
enter
adc
mov
add
jb
add
jg
lods
test
and
fxch
adc
stos
xchg
push
add
lret
add
lds
or
add
and
cmp
sbb
sbb
mov
sbb
dec
stc
lock
std
pop
inc
sub
fildl
xchg
ret
inc
sub
fnstsw
dec
cmp
add
mov
js
add
int
in
adc
lods
pop
idivl
ljmp
adc
fs
jmp
stos
mov
mov
popf
cmp
lock
xor
bound
mov
sbb
sti
or
lods
enter
test
bound
fnsave
jbe
jp
stc
mov
es
add
add
add
add
adc
bound
jmp
pop
movsb
jge
cs
ja
int3
out
push
sahf
int3
aas
push
sahf
int3
dec
push
sahf
int3
nop
sbb
add
ret
push
pusha
ja
push
push
xchg
pop
test
dec
test
jne
lret
lods
xchg
imul
shll
mov
mov
pushf
sbb
les
js
push
add
mov
test
subl
jbe
jne
adcl
pop
lods
xchg
imul
add
stc
sbb
and
shrb
or
cwtl
lret
and
inc
lods
add
mov
mov
lods
add
push
and
fwait
aaa
lock
cmp
xchg
fimuls
xchg
push
inc
adc
out
sahf
adc
out
lods
gs
loope
iret
mov
adc
loopne
clc
mov
and
jns
sub
mov
cmp
dec
aam
hlt
fwait
xchg
lret
add
adc
gs
enter
inc
jb
sahf
adc
gs
cli
repz
xchg
imul
fldcw
inc
jg
scas
imul
xchg
jbe
sarl
push
mull
rorb
inc
stc
int
inc
mov
inc
imul
cli
push
sti
xchg
pusha
push
dec
or
stc
dec
jae
mov
inc
jns
mov
subb
scas
dec
int
xor
clc
cmp
sar
push
shr
test
add
aam
adc
inc
test
ret
loopne
or
cmp
jo
jbe
jge
pusha
jg
rcr
push
clc
xchg
test
xchg
xchg
popa
insb
mov
stos
jg
and
dec
cmpsl
out
ljmp
dec
out
mov
cmp
add
jp
mov
movsl
dec
add
add
add
add
add
sub
jo
popa
mov
mov
dec
jae
ss
add
jne
iret
in
pop
cs
xchg
sbb
divl
fisttpl
push
pop
push
sub
add
dec
sbb
pushl
incl
mov
clc
inc
xchg
popa
mov
sub
cmp
je
adc
pushf
add
stos
mov
xchg
and
lea
pop
sbb
insb
je
mov
xchg
test
dec
push
push
test
xor
ljmp
clc
and
inc
push
clc
jmp
adc
xchg
pop
and
cli
cmc
data16
in
repz
aas
sub
dec
inc
cmp
out
mov
mov
add
add
add
add
gs
pop
xchg
data16
add
cmp
jle
js
pop
in
movsl
ss
test
add
test
out
lds
jb
dec
adc
xchg
repnz
sti
stos
jnp
loopne
sbb
mov
shrl
mov
jmp
lcall
out
add
adc
add
or
test
add
sbb
xor
add
jl
sarb
shll
subl
lret
xchg
mov
jne
mov
outsl
dec
in
jl
dec
outsb
pop
mov
mov
ljmp
mov
sub
rcrl
xchg
xchg
fimuls
xor
or
cmp
jg
enter
mov
mov
data16
hlt
fisttpll
outsb
lahf
sbb
mov
xchg
sarl
sahf
xchg
adc
inc
xchg
adc
lods
in
cmc
or
rorl
jmp
aam
stos
jmp
xchg
std
outsb
popa
insb
iret
sti
sub
int3
jle
sbb
add
mov
sarb
and
jmp
add
and
mov
sbb
pop
test
outsb
pop
pop
add
lea
dec
les
xor
incl
je
call
xchg
xchg
mov
cwtl
or
shl
and
xchg
jg
rcr
push
pusha
push
lea
sbb
pop
add
hlt
pop
or
pop
popa
jb
sbb
add
add
add
add
rorb
and
hlt
lea
xchg
test
imul
adc
pop
clc
pushf
wbinvd
ljmp
inc
push
sub
pushf
and
cmc
xor
push
push
dec
rcr
dec
or
push
adc
pop
mov
add
daa
mov
jp
jae
stc
pop
xchg
add
xchg
cltd
or
pop
out
add
and
cmp
daa
orb
jle
lret
daa
jp
int
and
testl
jb
push
jne
xorb
inc
dec
and
pop
and
jg
out
or
out
xchg
jle
ljmp
mov
leave
lock
pop
and
cmc
push
lret
add
inc
jae
jne
test
cld
out
jno
mov
push
jle
jb
mov
add
jle
jb
adc
insl
sahf
data16
inc
sub
in
jno
jmpw
outsb
mov
cli
movsl
fucompp
push
mov
push
call
cmp
sub
pushf
jle
xchg
xor
sub
add
add
add
add
xchg
cmp
push
fstpl
adc
lds
dec
cmp
orl
jmp
push
mov
jae
mov
jnp
pop
mov
sub
jno
cmp
in
jnp
ljmp
inc
idivb
jg
pop
pop
adc
mov
shrl
lock
enter
enter
mov
and
aaa
push
ror
add
jns
mov
enter
subl
push
jp
decl
and
pop
leave
xchg
xchg
lret
into
popf
int3
xlat
into
popf
int3
nop
sbb
jge
pusha
push
imul
sub
je
sar
jb
shl
add
gs
pop
jne
stos
jmp
add
arpl
aaa
xchg
pop
cltd
test
adc
mov
push
data16
pcmpgtb
bound
jl
pop
popf
sbb
es
stc
out
xchg
es
icebp
push
pushl
cmp
or
bound
mov
adc
loopne
psubq
sbb
out
adcl
insl
xchg
xor
or
add
test
mov
lds
inc
add
out
add
mov
jbe
leave
call
xchg
repnz
add
inc
ret
rol
shll
lret
imulb
mov
pop
cmp
dec
adc
into
sbb
enter
add
jg
jge
test
out
push
xchg
jg
xor
or
bound
mov
mov
addr16
leave
frstor
mov
lods
jne
cs
int
fstpl
dec
sahf
adc
xchg
push
sbb
fistpl
push
repnz
push
cmp
bound
add
mov
mov
xor
dec
sub
lods
test
int3
scas
xchg
mov
gs
xchg
xchg
cwtl
cld
pop
cmp
mov
inc
jl
and
dec
out
adc
adc
and
cmp
es
mov
jge
dec
ljmp
call
fcomps
cmpsl
adc
and
or
and
mov
jge
dec
ljmp
std
adc
pop
adc
and
or
and
shll
nopl
and
xlat
mov
mov
or
mov
mov
inc
adc
jmp
xor
xlat
imul
out
fldl
cmovae
mov
xchg
or
xchg
xchg
add
jno
and
fldt
adc
dec
daa
test
aad
aad
aad
push
stos
pop
mov
test
push
jmp
leave
jb
insl
popf
ljmp
push
outsl
jno
inc
jb
popa
clc
jbe
push
addr16
xchg
inc
jb
inc
lock
loope
xchg
xchg
inc
jb
popa
js
scas
mov
add
dec
add
inc
mov
or
pushl
imul
sub
mov
ret
add
mov
jno
cmpb
fdivr
jo
cmpb
fdivr
jo
xorb
sbb
jno
cmpb
arpl
adc
or
mov
pop
mov
mov
outsb
add
dec
add
add
jg
jb
sub
addr16
sti
jne
cmpsb
xchg
sub
jmp
mov
xchg
mov
nop
faddl
mov
and
jbe
jnp
fmul
shrw
sub
clc
mov
and
xchg
je
jno
movsl
sub
cld
or
je
sbb
in
add
in
dec
in
jl
sbb
jne
lods
add
cltd
clc
in
leave
sub
hlt
test
scas
mov
jge
cs
test
sub
pop
fisubs
ficomps
xor
mov
or
insl
xchg
idiv
cmp
mov
cmp
add
jb
cmp
jb
cmp
in
jbe
jbe
inc
jg
jp
outsl
mov
pusha
jle
or
rclb
insb
lret
xchg
fcomps
lret
xchg
mov
mov
mov
rcll
fwait
cld
popf
int3
fcoms
push
mov
mov
loopne
inc
or
jns
mov
pop
xchg
imul
pop
fwait
call
pop
mov
cs
ss
es
ss
sub
push
stc
or
dec
push
mov
add
add
add
add
add
imul
repz
inc
jb
mov
add
popf
bound
lea
push
loopne
mov
scas
shll
lret
cmpsb
fnstenv
lret
mov
mov
inc
push
mov
mov
imul
add
add
std
out
or
mov
negb
pop
sbb
sbb
sbb
adc
jmp
mov
mov
cmp
jb
cld
in
lds
jb
cmpb
in
add
leave
add
jne
inc
mov
sahf
das
pusha
stos
mov
mov
testl
jle
xor
je
out
add
cmp
push
in
jno
cmpsb
neg
dec
lods
add
iret
popf
mov
jmp
cmp
pop
bound
jbe
test
adc
push
xchg
dec
jbe
rclb
int
xchg
or
in
mov
push
push
mov
adc
int
pop
jmp
mov
in
je
mov
cli
cmp
jno
sub
outsl
mov
push
loop
mov
out
ljmp
call
cltd
lea
lds
or
lock
pop
add
lds
insb
dec
das
pop
mov
cmp
jne
call
pop
jmp
mov
xchg
addr16
ret
inc
je
incl
sub
movsl
sbb
add
add
les
fwait
pushf
xchg
lcall
aad
add
sbb
add
add
and
and
andb
sbb
dec
les
faddl
pop
mov
mov
fildl
clc
cmp
test
inc
and
enter
gs
jmp
add
int3
pop
add
ss
es
ss
mov
lods
fadds
push
test
rorl
mov
adc
and
xor
test
adc
push
mov
enter
imul
dec
loopne
cwtl
push
out
xchg
nop
out
scas
add
out
add
mov
je
add
mov
pop
add
call
fisttpl
jp
dec
cmp
sub
stos
mov
mov
xchg
dec
inc
mov
adc
in
shll
popl
jb
jg
xchg
jns
cmpsb
mov
test
and
mov
xor
mov
add
add
add
jno
popw
into
jle
rep
ret
fwait
ret
jno
data16
jle
dec
lret
lds
mov
data16
leave
jle
mov
data16
jmpw
data16
test
lds
loopne
jmpw
data16
xchg
adc
lds
jno
data16
incl
lds
jno
data16
xor
call
jne
add
and
add
fsts
mov
data16
fldl
add
add
add
data16
and
add
push
add
data16
mov
adc
leave
data16
pop
pushl
andps
push
push
add
leave
data16
pop
incl
mov
push
add
cmp
lret
enter
and
add
pushf
cmp
outsl
add
sub
cmp
or
add
sub
test
cmp
outsl
add
sub
gs
cmp
into
lahf
cmp
insl
add
das
clc
inc
dec
pushf
cmp
cld
pushf
cmp
insl
add
das
clc
and
jb
popf
cmp
insl
add
das
clc
add
jo
cmp
dec
or
in
insl
add
add
push
cld
aad
cmp
movb
movb
add
stos
imul
cmpl
jg
jb
sbb
cmc
jge
sub
jbe
jg
jb
jg
jb
das
push
pop
cmpl
push
adcl
jb
jg
jb
cmp
xorl
xorl
jb
jg
jb
mov
hlt
add
cmpb
jg
jb
mov
or
fldl
xchg
jmp
jno
inc
sub
xchg
mov
push
xchg
jmp
jno
data16
adcb
add
add
add
adcb
jno
xchg
ret
lea
xchg
mov
adcb
jno
cmp
adcb
jno
jmpw
sub
adcb
jno
jmpw
and
xchg
shl
xchg
add
in
xchg
dec
lds
lret
lds
sub
jae
xchg
lcall
lds
fwait
lds
daa
and
jnp
xchg
lcall
lds
xchg
pop
xchg
jmp
in
lcall
data16
data16
jno
lcall
data16
data16
data16
lds
sbb
data16
pop
xchg
call
xchg
mov
adc
incl
aaa
pop
xchg
pushl
aaa
cld
in
outsb
aaa
cld
in
cmp
frstor
cmp
aad
cmp
int
cmp
lds
cmp
mov
xchg
cmp
lods
and
cld
movsl
cmp
popf
int3
cmp
xchg
push
cmp
test
xor
cld
jne
xor
cld
gs
xor
cld
push
mov
cld
inc
jle
cld
cmp
xor
ds
and
push
or
adc
xor
loope
jg
dec
idivb
pop
out
jg
pop
out
decl
cmp
jg
dec
into
jg
add
movsl
dec
mov
jg
dec
scas
jg
dec
cmpsb
jg
dec
sahf
jg
dec
xchg
jg
dec
mov
dec
xchg
add
adc
jg
add
jb
pop
insb
data16
insb
pop
jg
insb
push
jg
insb
dec
jg
imul
push
jg
imul
imul
ja
es
imul
aaa
imul
xor
xchg
pop
cwtl
adcb
mov
xchg
xchg
xchg
xchg
xchg
aad
adcb
pop
adcb
dec
adcb
add
adcb
or
xchg
or
or
xchg
iret
fidivrl
test
lret
test
jp
jns
jp
outsl
fidivrl
jnp
jp
mov
jp
mov
sub
xchg
jmp
sbb
xchg
lcall
xchg
dec
sbb
xchg
incl
movsl
out
pushl
xchg
pushl
xchg
decl
xchg
cmp
xchg
out
out
decl
out
incl
xchg
decl
out
jge
xchg
dec
out
pushl
in
incl
out
jmp
out
ljmp
out
decl
in
ljmp
out
pushl
push
cld
and
gs
cld
add
stos
add
add
fdivs
cld
cmc
fidivl
cld
in
mov
xor
fldl
sub
cld
sti
mov
lods
cld
sti
lods
scas
cld
sti
movsl
cld
cld
sti
popf
in
sti
xchg
in
cld
sti
lea
cld
sti
test
cld
sti
jge
cld
sti
jne
cld
sti
insl
sub
sti
mov
cld
sti
push
jbe
sti
add
sti
inc
ret
cmp
jl
push
jl
dec
es
dec
push
jl
push
jl
push
jl
push
jl
push
jnp
push
jnp
push
jnp
push
jnp
imul
jnp
imul
jnp
addr16
jnp
scas
jnp
cmpsb
jnp
addr16
jnp
addr16
jnp
mov
data16
add
add
add
add
jnp
data16
jnp
data16
pop
jnp
push
jnp
dec
jnp
jmp
aad
xchg
ret
int
xchg
movsl
xchg
jp
test
jp
fwait
cmpsl
jp
imul
jp
cmpsl
jp
jmp
jp
jmp
sub
adc
cmp
jmp
add
out
jno
out
jno
out
jno
out
jno
addr16
jno
jp
jnp
jp
jmp
push
jp
push
jp
sub
jp
add
adc
decl
xchg
pushl
adc
incl
push
xchg
call
xchg
jmp
adc
xchg
incl
imul
xchg
decl
xchg
ljmp
adc
dec
adc
decl
xchg
lcall
adc
jmp
xchg
std
adc
stc
adc
jmp
lds
cmp
xchg
incl
xchg
incl
push
xchg
pushl
add
xor
push
das
xor
dec
mov
cld
inc
xchg
xor
cmp
cltd
xor
add
or
cld
sbb
out
xor
or
dec
xor
std
sbb
cld
cmc
mov
xor
in
xor
fstpl
cld
aad
xor
int
add
and
mov
adc
cld
lods
outsb
add
sbb
cld
xchg
lcall
test
push
cld
jge
sbb
dec
outsb
js
dec
add
std
dec
pop
js
dec
push
js
dec
dec
js
add
jecxz
js,pt
push
ss
push
js,pn
add
push
push
push
js
add
mov
jb
mov
jb
dec
add
inc
inc
push
divb
push
out
ja
push
out
mov
jb
mov
push
into
ja
push
ja
push
mov
ja
push
scas
ja
push
cmpsb
ja
add
jb
dec
push
xchg
ja
add
scas
add
data16
out
jno
out
jno
out
jno
out
jno
out
jno
out
cmpsl
jp
jns
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
or
jp
shrl
jp
fnstcw
jp
jecxz
jp
sub
add
jp
and
jp
pop
cmp
std
sub
out
sub
jno
jp
jmp
adc
jp
add
xchg
jmp
ret
ret
setae
loope
xchg
jmp
sbb
call
sbb
xchg
decl
sbb
in
sbb
lcall
lret
mov
cs
pusha
scas
xchg
imul
add
add
add
add
lret
push
add
xchg
and
outsb
jg
add
pop
lret
sbb
lcall
gs
cld
pusha
mov
pushf
bound
add
lds
or
gs
jno
mov
dec
adc
cmp
rcrw
push
pop
inc
push
rcrw
jne
iret
and
pop
push
xchg
scas
imul
mov
mov
mov
add
or
data16
mov
mov
pop
data16
lods
imul
test
inc
jno
imul
mov
add
enter
test
fistpll
fistpll
add
xor
sarl
sar
fcompp
shl
ljmp
jecxz
in
or
loopne
loop
mov
out
movsl
clc
adc
nop
imull
pop
lret
dec
fbld
clc
jb
xchg
jmp
js
xchg
cli
inc
flds
loop
mov
popa
in
xor
jnp
pop
loope
into
inc
jmp
data16
add
jb
or
in
or
lods
jae
xchg
clc
pop
aad
loope
les
add
dec
jecxz
lret
or
and
adc
cmp
add
add
or
sub
cmp
mov
cmp
pop
push
sub
idivl
jmp
adc
sbb
add
loopne
sbb
idiv
sbb
out
adc
cmpsl
les
jae
cwtl
xor
ss
les
jae
cwtl
xor
xor
pop
jo
mov
mov
adc
add
addl
xor
je
sub
add
int
push
insb
int3
lcall
test
add
divb
add
add
add
add
addr16
outsb
mov
and
xchg
add
addr16
cld
fs
cltd
daa
imul
les
gs
pop
lret
push
ret
push
shlb
pop
gs
xchg
addb
pop
gs
jo
xchg
xchg
fisttps
mov
les
jo
inc
shll
dec
lea
mov
iretw
lock
inc
mov
cmp
scas
mov
xchg
or
int
pushf
mov
xchg
mov
inc
pop
mov
dec
push
outsl
aam
loopne
scas
aad
xor
aas
jmp
rcrl
jae
dec
jmp
loopne
jo
add
jmp
scas
adc
scas
mov
add
mov
add
loope
loopne
fbld
add
or
xlat
rolb
fst
shr
scas
inc
jo
ljmp
jecxz
xchg
fisttps
fistps
cmp
mov
lret
dec
filds
call
jmpw
imul
repz
mov
fstpl
or
mov
ret
popf
repz
lcall
js
push
adc
sarb
add
movsl
add
xchg
pop
outsb
mov
int3
push
repz
jno
cmpsl
cmp
call
or
jno
gs
dec
repz
sub
sub
aad
cmp
and
sub
cmp
add
xor
add
xchg
xchg
decl
xor
insb
outsb
or
lret
pop
std
fs
daa
imul
les
gs
xor
insb
scas
sub
movsb
xchg
cld
pusha
mov
subl
fs
lret
sbb
add
fistpll
imul
add
add
jmp
sbb
js
push
pop
imul
adc
mov
fsts
sbb
push
stos
mov
popa
mov
insl
pusha
aam
call
std
pop
push
pop
ror
jb
imul
outsl
aad
insl
es
imul
shrl
shlb
pop
push
and
pop
add
jbe
pop
gs
add
ret
sub
imul
aam
xlat
inc
fcos
push
imul
dec
fldt
in
stos
cmp
inc
lret
dec
mov
lcall
fildll
test
mov
repnz
jl
sub
enter
repnz
fs
fmuls
ja
push
or
push
and
jecxz,pn
mov
add
fistps
sbb
and
mov
add
fdivl
lods
add
pushf
movsb
or
stos
cmpsb
loope
test
gs
leave
add
fstp
sti
loop
int
ljmp
loope
lahf
frstor
ficoml
adc
push
addr16
insb
add
or
or
and
mov
ficoml
add
add
add
sbb
pop
xor
pop
add
adc
jmp
sbb
jno
push
aad
stc
fucomp
adc
shl
sbb
ret
out
int3
mov
mull
outsb
add
adc
adc
and
mov
je
or
adc
and
repz
imul
add
add
cltd
xor
mov
das
xchg
js
daa
cmpsl
adcl
mov
bound
xor
add
shrl
ja
add
or
cmp
xchg
xor
cmp
gs
movb
and
gs
and
fs
mov
jae
jge
jb
xor
arpl
sbb
add
add
add
add
and
add
enter
fldt
push
fsts
in
enter
leave
lcall
adc
jae
push
xlat
bound
cltd
ret
imul
push
jae
ret
imul
ret
imul
sub
mov
jb
ret
pop
mov
shrl
mov
add
add
add
sbb
add
push
xor
jo
mov
data16
jbe
xor
movsl
fcmovb
jbe
mov
repz
cmc
sti
test
add
movsl
int3
repz
sar
movsb
mov
sbb
les
adcl
sub
mov
scas
add
fisttpl
aad
push
pop
cmc
jnp
add
imul
xor
js
dec
fiaddl
sbb
lea
cmc
ret
push
mov
push
jecxz
adc
sahf
mov
mov
cmc
pop
or
fnsave
or
sub
fimull
test
fadds
mov
add
xchg
jno
gs
lret
jle
hlt
add
or
faddl
pop
add
fiadds
outsb
inc
imul
in
sub
loope
inc
adc
add
adc
fisubs
jo
or
cmpsb
or
or
int3
ficoms
shl
std
addr16
pushl
adc
shlb
ficoml
jo
sbb
jecxz
and
and
jb
ret
movsb
add
xor
add
add
add
add
pop
and
je
xor
push
or
roll
negl
xor
xor
xor
push
or
aam
cmp
and
cs
arpl
sbb
jb
ss
jle
add
sbb
fs
ret
jg
add
cs
popa
ja
add
mov
and
push
lahf
xor
pushl
push
bound
out
les
mov
ja
shrl
push
outsl
sbb
insb
mov
enter
inc
xchg
jecxz
bound
inc
mov
dec
xchg
cli
mov
insl
xchg
adc
push
in
lcall
dec
or
dec
push
into
fiaddl
lret
mov
into
fiaddl
pusha
shrl
add
add
add
add
cmpsl
pop
and
mov
test
add
jmp
test
hlt
sahf
scas
sar
mov
shl
stos
add
mov
mov
shr
stos
iret
jmp
lahf
xor
loop
mov
loopne
nop
dec
lret
lcall
ret
sub
mov
fdivrs
cmpsl
push
adc
mov
je
cmp
push
out
mov
dec
jmp
mov
cwtl
insb
stos
inc
mov
jno
fs
ss
pop
aad
adc
shr
add
inc
fcoms
sbb
cmp
jno
fs
adc
ss
adc
mov
out
sbb
out
or
add
pop
add
add
dec
and
add
addr16
and
cmp
jmp
add
add
push
or
fisubs
or
xchg
cld
xchg
std
inc
jb
add
mov
lret
cmpsb
sub
xor
call
push
jo
sub
add
add
add
add
inc
sbb
testl
sbb
sbb
push
add
inc
adc
jb
sub
aaa
popa
cltd
das
xor
inc
add
xor
fcomps
imul
inc
xor
pop
gs
ljmp
popa
mov
or
cmpsb
decl
add
mov
push
fstpt
jb
jnp
imul
lret
outsl
gs
lock
aaa
dec
mov
lret
dec
ss
jno
mov
push
mov
cli
imul
std
mov
arpl
or
insl
dec
or
imul
push
mov
add
add
add
dec
mov
dec
xor
rorl
icebp
pop
mov
sub
jg
fmul
int
push
jmp
rolb
test
shlb
popa
mov
pushf
mov
ljmp
mov
icebp
fidivs
mov
lret
ficoml
mov
and
add
add
add
dec
mov
dec
icebp
dec
aam
aad
jmp
adc
pop
or
in
cmpsw
jno
adc
push
aam
xchg
mov
shl
stc
shl
cmp
jno
data16
leave
call
xor
xchg
or
cmc
or
in
in
jmp
adc
xor
test
cmp
sbb
jno
cmpsb
rcl
and
rcl
xor
in
jmp
push
add
add
xchg
lcall
sub
sbb
je
xor
outsb
xchg
xchg
pushl
ss
sub
xor
xchg
xchg
inc
cmp
sub
insb
stos
das
add
scas
push
add
inc
xchg
incl
sub
sbb
imul
xor
jae
adc
fs
or
add
xor
daa
incl
pusha
cltd
aas
and
pushl
ret
push
push
pushf
aas
add
insl
gs
inc
stos
mov
mov
insl
gs
jae
xlat
push
dec
mov
ret
imul
mov
sahf
bound
or
addr16
mov
decl
pop
ret
bound
xorl
imul
outsl
gs
jo
lock
mov
lock
mov
sub
push
jb
addr16
xchg
dec
mov
popl
push
xchg
xor
bound
out
dec
popl
xchg
cmp
inc
push
push
xor
sub
dec
in
dec
test
add
add
add
jecxz
add
leave
insl
test
and
jnp
push
add
lods
pop
push
fmuls
icebp
bound
pop
jmp
mov
jmp
shlb
test
jecxz
mov
mov
int3
cmpsb
fucomip
iret
mov
fdivrs
pop
enter
stc
ljmp
add
mov
fdiv
mov
in
or
add
add
add
lods
jmp
data16
shr
sbb
xor
dec
mov
in
inc
stos
out
dec
add
push
cmp
movsl
out
sbb
jecxz
and
jecxz
adc
jno
addr16
xor
add
stc
adc
and
add
cmp
add
lcall
adc
add
aam
les
adc
add
add
jno
movsb
out
pop
add
je
fs
pusha
add
pop
add
fistl
bound
cmp
fcmovnb
or
xchg
and
jne
xchg
xor
xchg
pushl
xor
fs
add
push
and
jne
imul
push
outsl
inc
and
push
jb
sub
bound
adc
inc
clc
jae
fnstcw
mov
inc
bnd
sbb
icebp
bound
fcmove
push
jb
gs
mov
fldcw
fs
add
imul
insb
jb
gs
xor
push
shl
adc
gs
xor
aad
sbb
cmp
ret
into
cli
push
scas
pushl
cmp
aad
rorb
cmp
jno
lret
mov
ret
insl
iret
fidivs
movb
aam
mov
add
mov
aam
stos
lods
out
fwait
std
pop
ja
aaa
aam
mov
popa
push
pop
mov
add
mov
xchg
aam
mov
lock
push
loope
movsl
inc
shrl
inc
fiaddl
aam
mov
add
jecxz,pn
aam
aam
mov
aas
aam
mov
btc
rcr
jg
xor
mov
rcl
or
pop
outsl
add
nop
in
pop
xchg
add
or
lcall
sbb
fprem1
data16
mull
cltd
mov
push
pop
sbb
add
jno
cmp
aad
es
or
out
in
or
paddsb
push
jbe
addr16
ljmp
jno
cmp
aam
cmp
jmp
fiaddl
add
shl
data16
pop
fisttpll
or
add
or
add
add
add
sti
std
fprem1
clc
adc
inc
ret
and
das
std
ljmp
aaa
popa
pop
pop
add
sbb
into
add
sbb
shrb
push
sbb
loopne
adc
pusha
inc
pop
and
aas
pop
pushl
cmp
push
lret
ret
and
imul
push
mov
adc
outsl
test
lcall
ret
jg
sbb
add
or
and
push
fwait
ret
pop
add
adc
inc
cmp
or
and
push
jb
les
sub
jae
sbb
jno
pop
fsubrs
adc
jb
fs
sahf
cmp
push
jb
push
xchg
fldln2
dec
cltd
ss
lea
push
jb
imul
repnz
push
fldcw
or
insb
add
mov
fisttpl
insl
gs
popf
lds
xchg
xlat
push
inc
mov
fs
push
pop
mov
sbb
jge
fs
pop
cmpsb
push
aam
push
xchg
add
fcomp
add
in
mov
or
add
fnstcw
ret
fwait
cmpsl
jmp
pushf
sub
stos
add
in
aam
push
or
inc
fdivrs
rcrl
sub
cmp
and
aad
pop
add
out
pushf
sub
dec
popf
dec
jmp
mov
fcoms
lods
push
mov
inc
out
pushf
pop
ljmp
push
fistpll
and
add
popw
mov
mov
and
adc
aad
xchg
insw
outsb
testb
add
add
add
icebp
or
flds
cmp
in
out
jno
add
jmp
test
xlat
cmp
jno
data16
push
or
mov
add
jecxz
dec
add
cmp
jno
sbb
adc
jecxz
or
outsb
add
and
add
leave
outsb
add
add
inc
daa
adc
dec
cmp
add
push
jns
lcall
sub
daa
adc
jne
xor
jae
and
gs
push
add
call
enter
sub
adc
popa
xor
xchg
lcall
pop
inc
cs
cs
call
push
outsl
mov
popa
ja
sub
push
xor
outsl
jb
in
data16
adc
gs
jb
out
inc
fadd
sarw
jne
adc
pop
fildll
jae
pop
gs
jb
out
inc
int3
jbe
rorw
mov
cmp
lods
das
out
push
cmp
xchg
inc
gs
xor
insl
mov
inc
pusha
aam
inc
add
xchg
cmpsb
sub
inc
nop
icebp
jae
out
out
ja
lahf
out
pop
dec
clc
icebp
jae
xchg
push
sbb
pop
lahf
or
lahf
adc
pop
add
push
add
insb
mov
jmp
inc
rcr
pop
mov
rclb
stos
add
out
sahf
jle
mov
movsl
cltd
jmp
lcall
add
add
add
add
aam
mov
cwtl
fisubrs
mov
addb
in
sahf
pop
jmp
mov
in
mov
jno
dec
mov
sub
xor
jmp
loopne
pop
sbb
outsb
imul
aad
add
call
push
cli
jno
sub
or
adc
stos
add
aam
lds
or
daa
in
int
xor
or
add
out
jmp
rcl
pop
test
loop
xchg
mov
xor
sahf
pop
in
push
pop
loope
inc
adc
or
add
sbb
jno
data16
push
jg
or
jbe
inc
das
add
adc
aaa
push
add
add
jae
cmp
je
xor
lcallw
jae
inc
cmp
xor
pop
gs
les
push
or
and
daa
xor
dec
add
je
inc
in
cld
dec
pop
push
outsl
jmp
cmp
add
add
adc
add
pop
hlt
push
add
push
and
out
ljmp
sahf
cmpsl
imul
clc
jae
pusha
gs
ud1
imul
push
rcrl
dec
jb
mov
mov
pop
gs
rolb
inc
pushf
jg
push
jb
mov
mov
inc
stc
decl
adc
add
add
add
add
dec
xlat
jae
sar
insl
dec
pop
gs
cmp
pop
cmp
pop
sub
mov
in
mov
outsl
jmp
push
lahf
and
cmp
pop
fidivl
adc
pop
mov
or
or
xchg
xchg
pop
jmp
cmp
xlat
shlb
rcr
int3
stos
shrb
mov
cmc
jg
insb
mov
add
add
add
sarb
mov
dec
mov
scas
mov
repnz
inc
jecxz
scas
xchg
in
mov
xor
lcallw
jno
data16
fcompl
and
or
call
decl
sub
fistps
inc
fldenv
outsl
imulb
inc
mov
fldenv
std
rcr
and
push
dec
xchg
sub
ss
add
sbb
loope
sbb
out
pop
xlat
or
daa
jmp
jecxz
or
loopne
add
mov
ret
fmuls
add
add
or
xor
std
fs
enter
sbb
je
pop
adc
outsl
sbb
ret
add
push
jo
sbb
gs
add
adcl
push
je
xor
addr16
jno
pop
add
xor
add
enter
xor
jo
pop
jmp
push
add
xor
int
rclb
add
fdivl
add
fcmovb
filds
jb
xlat
jae
das
xlat
bound
shrl
popf
pop
push
cmp
bound
jb
gs
inc
jmp
out
dec
aas
cli
clc
jbe
in
out
inc
rep
ljmp
mov
insl
or
out
cmp
mov
jb,pt
popf
dec
sub
imul
inc
mov
into
sub
or
imul
gs
enter
enter
stc
inc
les
ljmp
or
add
ljmp
loope
mov
loope
pop
shl
add
add
ret
int3
aad
loop
mov
dec
inc
add
loope
ret
push
in
cwtl
push
fmuls
loop
cmpsl
push
xlat
and
sub
std
mov
add
dec
cmpsl
add
mov
lock
fildll
mov
imul
add
add
add
jecxz
lcall
jg
jae
enter
addr16
cmp
xchg
ret
add
xchg
cli
call
sub
xor
test
out
or
filds
jmp
sbb
add
int
out
push
cmp
in
dec
loop
data16
push
or
in
jmp
add
faddl
jge
fisttpll
adc
ficomps
add
mov
cli
add
dec
xchg
aaa
jno
sbb
pop
push
fisttpl
fistps
jno
gs
xor
outsb
jmp
or
and
jne
xor
jbe
lds
fdivs
add
std
incl
and
jb
std
jb
and
je
push
std
imul
pushf
add
jns
std
push
jne
or
ret
mov
adc
push
push
sbb
jae
xor
jg
pop
jne
xor
dec
pop
xor
adc
inc
dec
incl
sbb
xor
add
jl
insb
rcrl
ja
ret
addr16
ja
imul
cmc
jae
xor
inc
fwait
cmp
bound
outsl
or
jae
das
mov
bound
in
pop
dec
int
pop
out
test
push
icebp
leave
insl
jb
gs
dec
cmc
bound
mov
addr16
mov
call
pop
add
add
add
add
add
add
add
add
jg
jb
jg
jb
jg
jb
jg
add
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
add
jg
jb
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
xor
push
addr16
rolb
data16
data16
xchg
add
addr16
jno
data16
jmpw
data16
xchg
add
data16
data16
jno
jmpw
callw
popw
nop
add
into
inc
dec
leave
data16
jecxz
pop
leave
data16
data16
data16
xchg
lcall
fisttpll
add
leave
data16
enter
int
add
loope
incl
leave
data16
enter
enter
leave
data16
lret
enter
enter
test
aas
lret
enter
enter
nop
fs
fwait
enter
enter
loop
inc
fwait
enter
enter
mov
add
add
sub
mov
add
add
popa
or
jb
gs
ret
or
add
add
das
push
mov
add
jb
xchg
mov
mov
gs
lret
mov
pop
dec
xor
andb
cli
adc
jl
sahf
adc
pop
icebp
pop
add
lcall
cs
or
xor
or
mov
jecxz
inc
xchg
test
and
jg
cltd
test
add
cmp
aaa
jmp
ss
das
mov
and
repz
bound
push
daa
dec
inc
decl
js
les
ljmp
data16
out
lcall
mov
push
xchg
push
fisubl
out
mov
xor
inc
mov
add
add
add
add
push
sub
mov
cmpb
in
testb
test
jb
in
pusha
push
cmp
mov
mov
inc
aaa
leave
pop
in
jmp
mov
mov
xor
sbb
mov
ss
cmp
std
cli
mov
in
push
add
divb
sub
or
nop
cltd
jns
add
push
mov
test
mov
xlat
imul
ret
mov
cwtl
push
int
push
out
xchg
lock
sbb
mov
push
pusha
ja
lods
test
xor
cmp
data16
xchg
mov
xchg
cmp
pushf
adc
mov
fistl
mov
aas
outsl
and
pop
xor
dec
sbb
add
jne
shl
and
cs
jl
ds
fstpl
and
jmp
jb
add
xchg
dec
icebp
jnp
pop
dec
push
dec
mov
add
sbb
mov
lds
mov
and
into
lcall
rorb
les
out
test
cld
push
mov
and
pop
cmp
sbb
int
sub
cmp
dec
mov
mov
nop
xlat
cwtl
data16
sahf
adc
dec
and
stc
inc
dec
jmp
mov
sub
loopne
sbb
dec
jg
andl
lret
outsl
mov
aad
out
pop
icebp
xor
xor
int3
jg
jb
sub
es
jge
jnp
jne
pop
fwait
insl
jae
gs
das
fwait
pop
imul
mov
inc
out
test
filds
out
test
or
out
push
idiv
mov
xchg
idiv
popfw
out
test
data16
out
xchg
idiv
xchg
out
shl
popfw
out
popfw
idiv
test
jmpw
jmpw
data16
mov
std
sbb
std
mov
shlw
leavew
mov
std
rolw
std
mov
popfw
cmp
mov
loope
xchg
in
jno
data16
and
add
add
add
pop
and
cmp
and
cmp
int
add
mov
fwait
or
add
push
cltd
cmp
pop
adc
movhps
aas
fistps
xchg
aas
nopl
incl
ret
data16
pop
xor
sbb
aaa
sbb
xor
sbb
xor
sbb
das
inc
sbb
xor
notl
mov
xor
adc
cmp
or
add
cmp
mov
pop
pusha
cmpl
inc
mov
mov
stos
inc
fwait
mov
lret
mov
inc
mov
sti
andb
or
addl
mov
dec
popa
jns
pop
popa
add
jnp
mov
mov
stos
inc
xor
sub
dec
mov
imull
leave
notl
xlat
jns
mov
pop
repnz
xlat
mov
jae
imul
push
fdivrs
repnz
or
push
fmuls
repnz
stc
repnz
fptan
jmp
add
repnz
sub
lret
fdivrs
repnz
cmp
jmp
dec
repnz
dec
repnz
jns
mov
pop
icebp
stos
mov
jae
imul
rcl
mov
icebp
rcl
mov
or
stc
lock
and
outsl
pop
pop
lds
and
lds
pop
add
movsb
ds
in
into
pop
fstpl
out
pop
sbb
add
add
add
pop
and
mov
scas
pop
cmp
stos
dec
pop
pop
fwait
pop
pop
test
jle
movsl
dec
push
pop
mov
cmp
pop
jge
ds
in
into
pop
fstpl
ficomps
sbb
pop
sbb
dec
mov
cmp
pop
add
push
or
aaa
lahf
push
in
aaa
out
push
mov
aaa
add
push
lods
aaa
outsl
push
jge
iret
adc
cmp
or
dec
cmp
sbb
cmp
or
aaa
dec
or
cmp
or
cmp
or
fcmovnb
data16
inc
xor
aaa
push
and
xor
aaa
push
adc
xor
add
scas
mov
inc
inc
scas
ret
aas
jmp
roll
scas
jecxz
sti
scas
repz
jecxz
add
mov
xor
mov
arpl
jae
mov
mov
mov
inc
inc
mov
roll
jecxz
jnp
rep
popa
mov
adc
popf
jns
xor
jmp
mov
jae
mov
icebp
out
add
add
sbb
shr
adc
shr
xor
inc
and
jnp
adc
push
loope
dec
jno
or
fwait
lret
xchg
ror
cmp
ret
lret
and
sti
lret
push
adc
and
or
icebp
incb
int3
add
sbb
sar
adc
add
jmp
mov
ret
int3
mov
ror
popa
dec
int3
jno
or
std
fwait
lret
ror
cmp
inc
lret
mov
mov
dec
in
inc
dec
insl
sub
jne
arpl
cmp
test
add
sub
dec
adc
mov
ret
stos
rorb
loop
mov
add
xchg
dec
xchg
stos
mov
dec
gs
push
dec
jne
bound
jb
test
adc
and
cmp
lret
sub
dec
cmc
sub
dec
mov
das
jmp
pushl
pop
incl
das
call
ud0
cmp
inc
cmp
movsb
cmp
dec
mov
pop
incb
fs
add
inc
cmp
push
push
cmp
add
xor
cmp
add
in
paddd
cmp
inc
cmp
aam
out
movsb
cmp
mov
test
xchg
cmp
fs
jb
lahf
sub
pushf
dec
jl
pushf
pop
add
imul
mov
pushf
fwait
push
inc
pushf
stos
dec
pop
pushf
mov
cmp
pushf
pushf
jmp
sti
pushf
sti
movsb
and
xchg
add
test
dec
jge
pushf
pop
jne
pushf
imul
jnp
mov
pushf
fwait
push
inc
pushf
stos
dec
pop
pushf
mov
cmp
add
add
add
add
jg
pop
xor
push
jb
adc
negb
rorl
testb
idivb
leave
mulb
rcrl
negb
shr
mul
ror
negb
sarl
idivb
leave
mulb
leave
idivb
fdecstp
adc
cmc
fwait
aam
cmc
mov
aam
cmc
ret
aam
cmc
sti
aam
dec
cmc
and
or
cmp
sbb
add
stc
cmc
sbb
jmp
cmc
sbb
mov
call
inc
xorps
inc
das
push
in
daa
mov
push
int
fists
out
push
sub
cmp
push
int
lahf
push
aad
scas
push
insl
and
push
jne
dec
push
lea
push
jne
outsl
push
sub
mov
les
push
adc
cmpsb
mov
push
int
ficoms
sahf
out
push
lods
jle
xchg
mov
sahf
push
push
mov
ds
jne
dec
push
add
sbb
xor
sbb
xor
sbb
lcall
lea
pop
add
aas
add
das
add
xor
push
sbb
xor
add
xor
aas
add
xor
add
xor
add
xor
add
xor
add
jg
lea
add
mov
add
xor
incl
sub
xor
pop
or
mov
mov
mov
aas
mov
mov
lahf
pop
mov
cmpsl
inc
mov
lahf
pop
mov
add
cmp
sarl
cmp
mov
dec
pop
outsl
mov
pop
cmp
aas
mov
stos
movsl
scas
mov
mov
popf
mull
sarl
mov
jecxz
xlat
mov
punpckhdq
popf
pop
pop
imul
out
imul
out
imul
push
out
jnp
inc
out
imul
out
dec
int3
shr
daa
int3
aad
pop
int3
in
dec
int3
aad
or
cmc
out
or
cmc
out
sbb
in
or
aad
scas
int3
sub
lahf
int3
push
in
ja
mov
in
jmp
aad
dec
int3
and
inc
int3
sbb
pop
int3
shr
daa
int3
dec
in
push
leave
jg
aad
lsl
dec
lret
push
lret
add
add
add
add
jmp
lret
data16
mov
das
dec
in
lods
push
in
mov
push
std
lods
out
std
mov
push
std
lods
adc
cmp
push
leave
cmp
push
shrl
push
xor
xchg
push
xor
scas
push
insl
sub
aas
push
pop
sub
dec
push
lea
pop
push
popf
sub
jae
addl
add
add
sub
push
sub
dec
sbb
push
or
push
adc
xchg
mov
adc
xor
adc
push
adc
pop
adc
xor
adc
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
or
add
add
add
fwait
pop
in
xchg
pop
fnsave
mov
pop
leave
xor
pop
shll
pop
fnstenv
out
pop
shll
inc
pop
test
xor
push
gs
push
pop
xor
push
jne
jae
sub
je
mov
mov
popa
lea
lods
popa
int
aam
sbb
dec
pop
ds
dec
mov
aas
out
lods
cmpsl
dec
dec
pop
add
dec
mov
dec
testb
cmp
jge
dec
scas
gs
dec
mov
gs
ficomps
dec
out
xchg
dec
push
dec
mov
push
sarb
push
in
stos
sbb
push
iret
cwtl
mov
mov
ds
lock
inc
test
sbb
jmp
inc
mov
into
inc
add
in
incb
jmp
inc
fsubr
movb
int3
inc
movsb
jmp
inc
jp
addb
jne
xchg
jmp
inc
lods
jmp
mov
jb
lds
je
test
xor
idivb
xor
cmc
xlat
xor
notb
xor
clc
cmpsl
xor
xchg
add
cs
push
xor
in
clc
mov
mov
add
pop
enter
mov
jge
pop
insl
gs
pop
pop
pop
add
gs
cmc
pop
xor
inc
mov
pop
push
inc
ficompl
cmp
movsb
pop
cmp
gs
fstps
xchg
mov
pop
dec
js
pop
in
push
pop
mov
hlt
pop
pop
pop
mov
pop
stos
pop
addb
add
add
add
add
pop
xchg
dec
je
dec
cmp
dec
add
out
or
xor
cmpsb
cmp
xchg
cmp
call
add
aas
jmp
int
pop
jmp
cmp
ljmp
xor
fidivrs
ljmp
push
jmp
pop
cmp
sbb
nop
cmp
add
add
add
mov
ds
xchg
loopne
pop
aas
aas
xchg
mov
xchg
aas
cmc
xchg
add
lds
jb
push
xor
push
pop
mov
inc
push
repnz
mov
push
test
repz
in
daa
pop
adc
pop
addr16
mov
stc
pusha
xor
popa
cmp
inc
cmc
dec
jne
cltd
dec
xchg
add
dec
mov
cmpsb
add
lahf
aas
dec
stc
cmpsl
or
pushf
xor
test
pop
cmpsb
test
loope
xor
gs
pop
pop
jnp
leave
cmp
pop
xor
dec
mov
sub
sub
cmp
out
sti
cmp
cmp
jmp
inc
enter
adc
jg
jb
aas
add
jb
mov
xor
in
xor
cmc
add
cmc
dec
xor
cmc
xchg
xor
dec
xor
xchg
divb
adc
out
inc
cmc
cltd
xor
repz
shl
push
xor
repz
xor
adc
fdiv
sbb
fdiv
cmp
xor
hlt
xchg
push
jmp
cmp
in
push
cmp
pop
push
add
xor
icebp
lcall
testb
pop
mov
pop
sub
and
imul
dec
adc
dec
cld
dec
lret
dec
dec
push
cmp
push
call
pushf
int
add
scas
push
push
xchg
push
jmp
outsb
data16
into
push
add
aaa
repz
xor
repnz
and
ljmp
repnz
xor
sub
xor
ljmp
repz
xor
xor
hlt
imul
cli
hlt
adc
sub
into
xor
testb
adc
xchg
out
test
shl
outsl
cmp
in
int3
cmp
fistpll
cmp
add
add
add
jecxz
ds
mov
dec
jecxz
aas
jns
repz
mul
data16
test
jb
add
push
fldenv
push
aas
arpl
inc
push
push
lea
push
mov
xchg
push
es
scas
push
xchg
mov
dec
push
mov
sahf
addr16
insl
xchg
pop
in
xchg
push
jg
pop
jnp
pushf
pop
mov
fs
jmp
add
add
add
dec
and
dec
sub
push
xor
mov
push
inc
stos
in
push
dec
stos
fcoml
lcall
popa
mov
push
orb
lret
loopne
ds
loope
ds
loope
aas
jno
inc
cmp
in
cmp
in
cmp
jg
jb
mov
jb
test
ljmp
add
add
add
pusha
fsubr
xor
push
aaa
pop
fidivl
xor
fnsave
out
xor
adc
aad
js
pop
fisttpll
push
fstl
xor
pop
cmp
cmp
cmp
fbld
icebp
push
cmp
lahf
push
jg
sbb
jnp
push
sub
push
jnp
notl
pop
sbb
jno
add
out
inc
mov
push
mov
push
pop
mov
jge
sub
and
pop
pushf
xchg
push
sbb
js
mov
cli
pop
fsubl
pop
push
arpl
dec
insl
pop
pusha
dec
out
push
jmp
mov
dec
bound
sub
mov
cmp
push
and
jnp
add
loopne
ds
frstor
pop
mov
add
outsl
lret
adc
xor
xor
or
jno
jmp
scas
xlat
icebp
xor
adc
xor
fcmovnb
xor
mov
xor
or
ss
aad
aaa
pop
aad
cmp
fimull
sti
fndisi(8087
cmp
fnstsw
aas
icebp
fnstsw
add
pop
lret
jb
push
cmp
sbb
cs
push
or
pop
and
mov
pop
pop
fbld
pop
sti
pusha
add
popa
or
popa
outsl
pop
mov
ds
inc
jl
outsl
dec
ds
dec
je
mov
xchg
test
push
ja
cwtl
push
lea
sub
xchg
mov
or
ja
pop
sbb
insl
hlt
dec
jl
orl
jb
push
add
add
push
stos
inc
mov
lods
shlb
xlat
bound
adc
repz
outsl
aam
xor
aam
xor
ror
xor
aam
xor
aad
xor
aam
xor
aam
xor
aam
xor
aad
xor
aad
das
inc
fidivl
ficompl
add
add
add
mov
repnz
xor
pop
xor
fstpt
rcr
jnp
xchg
cmpsl
sub
inc
fadd
sub
hlt
xlat
data16
sti
dec
push
pop
aam
int
push
scas
xchg
dec
push
cmpsb
cmp
cltd
or
xchg
cwtl
dec
nop
mov
dec
mov
js
dec
das
imul
addl
add
add
pop
test
pop
std
push
rolb
push
cli
cmp
push
test
mov
xorw
mov
cmpsl
push
call
addb
pop
lea
pop
dec
test
cmp
pop
fisubs
pop
bound
pop
add
icebp
lock
cwtl
ss
lock
aaa
add
fstpt
sbb
lahf
cmp
fidivl
add
add
add
adc
mov
cmp
fsubrl
cmp
cmp
fildl
cmp
sub
fdivrp
cmp
fdivrs
ds
fdivrs
aas
jp
pop
aas
sbb
add
or
jb
add
lret
rcl
xor
sarb
or
popa
push
xchg
push
add
add
add
add
add
push
lahf
inc
rcll
scas
push
jg
pushf
push
popf
mov
in
push
inc
cmpsb
in
push
pop
sahf
jb
jae
mov
inc
lahf
xchg
inc
dec
inc
push
pop
pop
inc
xor
pop
rolb
inc
or
cmp
inc
stos
inc
adc
cmp
dec
xchg
test
dec
sub
add
mov
dec
cmp
xchg
je
ja
aam
jns
push
fsubrl
xor
jb
jg
jae
testl
push
xlat
adc
jl
dec
ss
xlat
xorb
fstps
aaa
inc
fnstenv
cmp
adc
cmp
push
cmp
aam
cmp
fisubs
sub
and
adc
add
push
das
and
or
mov
jne
dec
ficompl
xor
xor
cmp
cmpsb
fsubl
inc
adc
callw
push
cld
popa
mov
push
stos
popa
fstl
inc
mov
addl
and
push
lret
test
cmpsl
and
lahf
int3
push
sbb
aam
cmp
push
out
dec
push
push
test
push
lcall
add
add
loopne
mov
push
pop
nop
gs
out
pop
in
cmpsl
dec
jmp
pop
pop
cmp
pop
mov
jp
jp
jo
inc
cwtl
aad
add
out
or
inc
out
mov
cmp
ljmp
lret
cmp
cmp
in
cmp
addr16
jmp
cmp
mov
repnz
jmp
cmp
mov
in
scas
fcom
ds
xchg
ds
and
stos
aad
aas
mov
sbb
lods
aad
aas
loopne
fwait
aas
or
add
xlat
popa
xor
dec
xor
jecxz
xor
shlb
mov
push
aad
nop
push
cmc
cmp
inc
xorb
std
pusha
pop
pop
sbb
popa
or
popa
inc
pop
popa
mov
inc
les
ds
pop
dec
inc
xor
cmpsl
jecxz,pt
fisubs
lds
cmpsl
sbbb
pop
dec
push
test
int
sbb
push
mov
imul
add
pop
addb
notb
dec
adcb
mov
push
cmp
mov
lods
movb
fnstcw
add
aas
add
mov
pushf
mov
xor
imul
xlat
sbb
mov
mov
xor
jle
mov
xor
aad
xor
aad
xor
aad
cmp
rcll
cmp
rcrl
cmp
or
fcmovbe
fidivrs
fcom
sub
mov
cmp
adc
call
cmp
shlb
cmp
push
mov
pushf
pushf
pop
push
dec
pop
popfw
aas
pop
mov
push
pop
and
or
mov
dec
pop
push
sub
dec
mov
dec
adc
inc
cmc
push
cmovae
push
test
fsts
lahf
mov
push
jmp
jno
pop
add
stos
pop
cmp
pop
sub
inc
rcrb
lahf
pop
inc
mov
dec
fistps
dec
add
adc
cld
in
ret
in
mov
in
inc
cmp
sbb
cmp
loopne
cmp
data16
dec
cmp
out
cmp
out
cmp
out
cmp
inc
ret
stos
cmp
add
jge
xchg
lea
push
jmp
push
ds
call
mov
aas
xchg
data16
add
data16
mov
jmp
stos
inc
mov
dec
mov
cmp
cmp
sub
push
jb
push
leave
addb
add
int3
push
and
pop
dec
pop
pop
pop
fwait
data16
lret
pop
int3
dec
sti
inc
sbb
pop
aas
add
inc
inc
dec
pop
outsl
aas
movsb
pop
xchg
cmpsl
into
pop
mov
pop
pop
cmc
cmpsl
jmp
pop
mov
pop
popf
test
cmp
jle
jnp
xchg
push
push
sub
iret
int
bswap
lock
sub
shrl
cmp
outsl
sub
xchg
iret
add
test
sub
iret
subb
sarb
sub
rolb
shlb
sub
rolb
sub
loop
daa
rorl
sub
roll
mov
rcll
das
cmp
fsubrl
out
push
das
xor
rolb
sub
shlb
sub
shll
cmp
sub
add
add
add
add
push
pop
pop
jmpw
imul
inc
in
push
push
ds
push
mov
out
push
fistpll
je
cld
cmpsb
inc
push
loopne
call
pop
jge
xor
xchg
addb
xor
lret
cmpb
gs
pop
or
arpl
dec
fistpl
dec
test
dec
es
pop
dec
push
inc
and
pushf
lcall
add
add
add
pop
dec
lcall
dec
in
mov
insl
cmp
ficoms
dec
fistpll
dec
frstor
or
add
enter
fcmove
xor
xor
fldl
xor
and
lds
cli
aad
ss
fsubrs
shl
cmp
jmp
cmp
fwait
pop
add
out
data16
fidivl
xor
faddl
fcompl
xor
fcoml
xor
pusha
xor
jg
inc
popf
xchg
inc
cltd
push
pop
adc
dec
jbe
or
xor
jb
push
jb
inc
cmpb
push
mov
adcl
loop
jecxz
lcall
stos
mov
mov
ja
dec
inc
outsl
cmp
addr16
dec
jb
imul
dec
xchg
dec
xchg
inc
jbe
mov
xor
mov
add
jne
jb
mov
xor
pop
xor
adc
sub
int
xlat
jne
nop
xlat
or
xor
mov
ret
add
add
add
add
add
aam
xor
pop
aad
xor
aad
xor
fiaddl
sub
xlat
xor
xchg
inc
fmuls
fnstenv
loop
cmc
xor
iret
dec
sub
mov
sub
xchg
int3
je
test
subb
fsubrs
int
sub
int
and
sbb
loopne
mov
push
test
lcall
or
fcoml
pop
loop
lock
fcoms
dec
jle
xor
adcl
fists
dec
aad
rcll
push
ljmp
push
adc
les
jno
mov
push
rolb
push
push
ljmp
push
cltd
pusha
movsb
push
shlb
lahf
pusha
lcall
inc
push
push
daa
add
push
add
xor
ss
xor
dec
xor
cwtl
filds
aaa
aam
pop
cmp
loope
cmp
fnstsw
cmp
fistpll
or
add
les
std
fidivl
push
xchg
aam
xor
fbld
add
andl
data16
push
xor
add
add
add
fcmovnbe
cmp
cmp
stc
aas
mov
add
filds
xor
mov
dec
cmp
inc
ds
dec
outsb
movsb
loopne
and
sbb
add
pop
mov
xorl
into
arpl
push
push
pusha
repz
push
pusha
mov
push
es
jmp
cs
repz
ss
fistl
rcll
mov
mov
push
mov
repz
data16
outsb
xor
jbe
fwait
push
jle
xchg
push
xchg
push
mov
push
xchg
pusha
cmp
xor
xor
shll
xor
insl
xor
jne
inc
fstps
xor
mov
push
fldcw
xor
xor
xchg
xor
xor
je
mov
test
pop
xor
xor
xor
xor
xor
aad
lods
fldln2
xor
sbb
xor
fldcw
xor
xchg
das
insb
shlb
dec
mov
pop
lret
pop
lods
pop
rcll
pop
fisttpl
pop
roll
pop
stos
popf
int3
pop
mov
test
add
je
dec
push
pop
push
push
pop
pop
pop
pushf
pop
pop
cmc
pop
jg
icebp
push
mov
push
leave
push
rclb
push
sbb
push
pop
push
xchg
push
jne
call
mov
mov
push
incl
mov
test
pop
cmp
cmp
pop
cmp
mov
xor
or
add
add
add
add
scas
jns
aaa
mov
aaa
data16
aaa
xchg
mov
cmp
mov
cmp
scas
or
int
out
cmp
scas
fnstcw
push
mov
cmp
scas
fwait
cmp
ja
adc
cmp
cmp
cmp
test
xchg
stos
in
cmp
stos
dec
cmp
test
idivl
cmpsb
lods
cs
add
add
add
out
jb,pt
inc
loop
xchg
insb
incb
gs
inc
rcrl
add
in
jb
push
jb
jne
inc
mov
jne
mov
adc
in
jns
mov
iret
js
xorb
xorb
jp
jnp
popa
add
sbb
jns
addr16
mov
sub
ljmp
add
add
add
add
outsb
xor
arpl
insb
mov
push
insb
shll
insl
inc
test
test
daa
shll
sbb
shlb
sbb
sub
add
int
sbb
int
sbb
int
sbb
int3
sub
sbb
add
push
push
int
sbb
int
sbb
add
int
sbb
movsl
int
sbb
int
sbb
int
sbb
int
sbb
int
sbb
int
sbb
into
ficomps
lret
sub
data16
inc
push
andl
push
es
cli
push
cs
ljmp
jl
push
sti
je
push
xchg
insb
jae
xchg
mov
push
popa
add
jno
xor
test
jl
push
ss
push
sbb
xchg
lock
xchg
sbb
push
jmp
xchg
push
je
push
inc
insb
popf
push
push
fs
push
push
pop
lea
push
inc
push
data16
cmc
ds
test
ds
lds
xor
mov
ds
int
test
add
add
add
add
mov
data16
aas
mov
test
lock
and
test
lcall
ret
data16
push
cmp
xor
mov
xor
mov
xor
mov
xor
mov
xor
scas
loope
push
mov
mov
cli
aaa
arpl
fidivrl
jb
jb
stos
cmp
add
add
cwtl
test
popf
mov
outsl
fisttpll
subb
jo
outsb
sbb
sbb
pop
fnstenv
push
add
sahf
dec
sbb
add
jne
inc
sub
jne
mov
ret
jne
mov
mov
jne
orb
or
pop
pusha
nop
je
pusha
add
ja
popa
cli
jbe
inc
mov
xchg
adc
lret
add
add
xchg
pop
pop
lret
add
add
and
lret
or
cmp
and
negb
jg
sub
out
sbb
jo
iret
add
mov
adc
aad
adc
mov
adc
mov
adc
jle
add
mov
xor
idivb
mov
push
mov
cmp
in
mov
stos
adc
bound
pop
loope
mov
pop
pop
pop
push
pop
lods
xchg
pop
popf
jg
pop
popf
xchg
pop
popf
jg
push
lea
push
mov
pop
xchg
push
imul
sbb
data16
mov
addb
add
pop
mov
dec
pop
popa
pop
cmp
mov
and
adc
js
dec
or
dec
add
dec
fstps
dec
loope
cli
dec
jmp
xchg
dec
add
jecxz
cmp
jecxz
cmp
jb
jae
dec
cmp
jecxz
cmp
jecxz
cmp
in
cmp
and
xchg
in
cmp
xor
add
or
fwait
loop
cmp
loop
cmp
in
cmp
in
cmp
in
cmp
in
cmp
jecxz
cmp
jecxz
cmp
in
cmp
in
cmp
in
cmp
in
cmp
fistl
cmp
fisttpl
cmp
cmp
fcmovnu
cmp
loopne
jb,pt
outsl
icebp
fs
imul
insb
mov
in
aam
jb
push
jb
jne
add
jne
inc
sub
mov
ret
jp
mov
add
addl
and
stos
ja
jg
jbe
lea
pop
popf
jbe
pushl
pop
stos
ja
inc
sbb
sub
je
cmp
dec
insl
in
cli
jno
fwait
stc
jb
cwtl
push
jae
mov
outsl
sub
movb
vbroadcastss
sarl
pop
add
sub
lock
mov
cmp
adc
out
mov
rol
ds
popa
ret
inc
ret
jecxz
cmp
in
cmc
sbb
rcll
shrl
shll
rorl
sub
lahf
push
cli
ror
test
add
add
add
add
push
add
fcoms
cmpsl
mov
adc
jle
popa
popa
push
push
pusha
sub
xor
cmp
jg
jg
fs
push
sbb
jbe
mov
pop
jbe
push
pop
mov
xor
loopne
ficompl
xorb
sbb
bound
arpl
pop
mov
pop
cltd
cmpb
and
adcb
sbbb
dec
xor
inc
int3
dec
fisubrs
dec
or
dec
loopne
test
mov
dec
cltd
jns
dec
add
fcoml
cmp
cmp
cmp
loop
cmp
loope
cmp
loop
cmp
loop
cmp
loop
cmp
loop
cmp
loop
cmp
hlt
cmp
fdiv
cmp
fnstsw
add
add
add
inc
fst
cmp
fnstsw
mov
or
and
cli
ds
les
mov
and
sbb
loopne
adc
clc
xor
fcmovbe
xor
xor
mov
aad
xor
jb
pusha
mull
insl
fwait
mov
jbe
outsl
insb
popf
js
insb
mov
insb
movsb
imul
outsb
xchg
add
outsb
int3
dec
and
inc
or
aas
and
xor
jnp
lods
sbb
movsb
mov
pushf
sti
ja
xchg
lahf
js
jb
xchg
add
add
jne
cmpb
arpl
je
pusha
ja,pt
pusha
or
pusha
inc
ja
inc
insb
ja
inc
cltd
ja
inc
outsl
ja
inc
push
adc
jno
xchg
mov
adc
jno
add
mov
jg
or
cmovs
mov
or
repz
icebp
sbb
mov
repz
sbb
shll
loope
xchg
push
cmp
daa
pop
rol
adc
push
shlb
mov
mov
sbb
jno
scas
add
push
adc
mov
adc
mov
ret
pusha
jle
xlat
jge
pop
fbstp
scas
outsl
jl
les
pop
fwait
jle
pop
mov
pop
cmp
dec
imul
dec
jp
dec
and
dec
and
dec
cmp
dec
ss
pop
dec
jns
sub
sbb
mov
inc
test
dec
iret
jle
push
push
addr16
push
js
jmpw
add
add
add
add
and
data16
push
mov
aam
add
cli
ss
lret
sbb
lahf
cmp
fbld
cmp
fistps
cmp
ficoms
mov
pop
ds
mov
rol
data16
xor
rol
xor
shlb
xor
mov
insb
xor
aam
xor
xchg
xor
frstor
fnsave
movsb
fstl
mov
pop
xor
push
fucomip
xor
pop
fildll
dec
pop
jae
mov
cmp
imul
add
inc
insl
scas
movsl
mov
insl
sub
mov
popa
mov
arpl
add
pop
add
pusha
adc
pusha
pop
push
ret
jbe
dec
stc
pusha
dec
inc
hlt
jne
aas
dec
jbe
aaa
xorb
xor
cmpsl
cmp
pushf
mov
ja
lea
xchg
test
add
push
add
add
jge
mov
mov
icebp
mov
sbb
mov
push
ds
mov
jb
jg
jno
addr16
jb
loop
jns
ret
or
mov
cld
adc
mov
mov
adc
mov
adc
mov
sbb
jmp
jl
jae
jb
or
adc
add
add
add
sbb
cmp
push
sub
jg
push
sub
add
add
add
push
push
sub
pop
out
push
dec
notb
pop
push
sub
jge
pop
lea
dec
out
jmpw
data16
inc
pop
add
data16
jge
push
xchg
jne
push
shrb
or
xchg
push
pop
bound
push
notl
rol
data16
jno
data16
lea
orl
add
add
mov
add
aad
xor
mov
jecxz
test
mov
idivb
mov
add
aad
xor
mov
psrld
xor
rolb
ss
cmp
lret
push
cmp
lods
enter
enter
enter
lret
ds
xlat
outsb
jg,pt
pop
ds
enter
enter
xchg
enter
fidivrl
ret
mov
aas
int
insb
aas
mov
leave
das
aas
jb
popa
lea
pop
popa
add
movsb
add
add
jne
popa
pop
jne
lods
js
pop
pop
js
dec
clc
pop
aaa
dec
and
cmp
pop
jge
pusha
pop
xchg
test
ja
movsb
push
arpl
xchg
andb
in
aam
add
push
jb
js
jle
outsb
cmp
pop
pop
cmp
outsl
js
pop
dec
js
inc
ja
lods
cmp
ss
cmp
add
popf
repnz
out
xchg
or
mov
movsb
or
mov
js
dec
mov
inc
or
mov
dec
or
mov
add
add
add
add
scas
divps
setle
iret
movsbl
out
movsbl
das
pmaxub
dec
pmaxub
iret
adc
mov
scas
adc
mov
scas
push
pop
mov
push
stc
je
push
sub
jmpw
nop
or
popa
cli
inc
frstor
push
int
popa
xchg
push
sbb
andl
subb
xorb
bound
int
inc
push
insl
arpl
insl
arpl
pop
orl
andl
dec
sbbl
dec
xorl
pop
arpl
push
dec
arpl
push
sbb
push
and
push
or
ljmp
cmp
jmp
jno
data16
lret
or
data16
fcmovne
data16
leave
data16
leave
data16
leave
data16
leave
data16
leave
data16
leave
data16
leave
data16
leave
data16
leave
data16
leave
data16
leave
data16
data16
data16
data16
data16
data16
data16
data16
data16
leave
data16
sbb
data16
leave
data16
leave
data16
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
add
add
add
add
add
add
add
add
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
add
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
add
add
add
add
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
data16
data16
data16
data16
data16
data16
data16
sbb
data16
data16
data16
lds
fcmovnb
data16
lds
lret
lds
fcmovnb
data16
lds
lret
lds
lret
lds
fwait
lds
fwait
lds
mov
data16
lds
fwait
lds
mov
data16
lds
pop
lds
dec
lds
dec
lds
pop
lds
jb
add
jb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
add
add
add
add
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
add
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
add
add
add
add
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
data16
data16
data16
data16
data16
data16
data16
data16
data16
lret
sbb
data16
or
data16
lret
sbb
data16
lret
or
data16
lret
fcmovne
data16
leave
data16
leave
data16
leave
data16
leave
data16
leave
data16
leave
data16
leave
data16
leave
data16
leave
data16
leave
data16
add
add
add
add
add
jb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
add
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
add
add
add
add
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
dec
data16
data16
data16
data16
data16
data16
data16
data16
data16
lds
fcmovnb
data16
lds
lret
lds
fcmovnb
data16
lds
lret
lds
jb
add
add
add
add
add
add
add
add
add
jb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jg
jb
jg
jb
jg
jb
jg
add
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
add
jg
jb
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
add
add
add
add
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
data16
ret
lret
ret
fcmovnb
data16
ret
lret
ret
lret
ret
fwait
ret
fwait
ret
mov
data16
ret
fwait
ret
mov
data16
lret
pop
lret
dec
lret
dec
lret
add
data16
data16
data16
data16
lret
sbb
data16
lret
or
data16
lret
sbb
data16
lret
or
data16
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
add
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jmpw
jmpw
jmpw
add
add
add
add
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
add
add
add
add
jmpw
jmpw
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
pop
data16
data16
data16
data16
data16
data16
data16
data16
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
add
add
add
add
add
add
add
add
add
add
add
add
add
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
add
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
add
add
add
add
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
data16
data16
pop
ret
data16
data16
data16
ret
data16
ret
data16
ret
data16
ret
data16
ret
data16
ret
data16
ret
data16
ret
data16
ret
fcmovnb
data16
ret
lret
ret
fcmovnb
data16
ret
lret
ret
lret
ret
fwait
ret
fwait
ret
mov
data16
ret
fwait
ret
add
ret
pop
lret
pop
lret
jb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
add
add
add
add
add
add
add
add
add
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
add
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
add
add
add
add
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
data16
data16
data16
data16
dec
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
jb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
add
add
add
add
add
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
add
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
add
add
add
add
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
data16
ret
data16
ret
data16
ret
data16
ret
data16
ret
data16
mov
data16
data16
data16
data16
data16
data16
data16
data16
data16
ret
data16
ret
data16
ret
data16
ret
data16
ret
data16
ret
data16
ret
data16
ret
data16
ret
fcmovnb
data16
ret
lret
ret
jb
add
add
add
add
jb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
add
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
add
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
add
add
add
add
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
data16
enter
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
fwait
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
add
add
add
add
add
add
add
add
jb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jg
jb
jg
jb
jg
add
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
add
jg
jb
jg
jb
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
add
add
add
add
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
data16
les
sbb
data16
les
or
data16
les
sbb
data16
les
or
data16
ret
data16
ret
data16
ret
data16
ret
data16
ret
data16
ret
data16
ret
data16
ret
data16
fwait
ret
data16
ret
data16
ret
data16
ret
data16
data16
data16
data16
data16
data16
data16
add
add
add
add
add
add
add
add
add
add
add
add
jb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
add
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jg
jb
jmpw
jmpw
add
add
add
add
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
data16
ja
mov
dec
add
cmp
ja
jp
dec
pop
rclb
into
push
jp
jp
arpl
clc
roll
enter
lret
push
mov
lods
inc
cmp
out
adc
add
inc
push
mov
scas
inc
xor
pop
mov
pop
andl
stc
subl
hlt
aas
out
inc
insb
data16
mov
push
subl
fmull
and
sbb
mov
jb
lods
dec
adc
imul
add
add
push
repz
jb
fisubrl
lcall
xchg
cmp
adc
cmc
jb
sbb
negl
mov
mov
xchg
sti
sahf
cmpsb
mov
mov
adc
inc
jmp
mov
and
lcall
dec
fwait
aaa
les
daa
cmpsl
mov
call
add
add
add
add
in
test
push
cmp
adc
stc
dec
aam
or
or
js
push
xor
xor
ja
jmp
add
insl
push
xor
mov
test
mov
pop
pop
sub
add
jmp
ds
pop
push
and
pusha
jns
popa
sub
out
lcall
add
mov
iret
cld
sub
fwait
stos
mov
ret
cmp
scas
call
arpl
movsl
fiaddl
mov
ss
push
xchg
loopne
out
xchg
aas
das
push
adcl
mov
pusha
push
xchg
cli
andl
das
jmp
pusha
insl
cmpsb
sbb
or
sub
negl
jmp
dec
mul
xlat
shll
jge
jle
stos
xor
cmpsl
xchg
mov
out
mov
in
scas
pop
jnp
sahf
mov
push
stc
sbbb
ds
jmp
cmp
push
leave
push
cmp
bound
jp
sub
add
inc
inc
mov
imul
out
cmp
jmp
push
movsl
int3
cmp
inc
push
sub
jmp
out
push
xchg
mov
jp
and
stc
jno
mov
cmp
mov
push
cmp
jmp
stos
gs
jp
and
mov
lcall
add
add
jb
data16
cmp
hlt
icebp
add
mov
rcr
inc
mov
jle
jae
cmp
lock
cmp
stos
jno
mov
ljmp
icebp
add
xor
mov
rcr
inc
dec
mov
or
cmp
orb
ret
sbb
cmpsl
add
js
jmp
xchg
cmpsb
mov
pop
imul
int3
es
mov
adc
jle
ffree
nop
mov
inc
fidivl
sub
nop
xorl
pushw
es
js
push
popf
mov
inc
cs
aaa
andb
pop
pushw
add
jle
mov
fldl
mov
cld
jb
data16
fistl
dec
movsl
add
sti
sbb
jae
push
sub
stc
shr
mov
addr16
jmp
fmull
dec
push
push
imul
xchg
fsub
dec
mov
int3
scas
xchg
mov
int3
daa
push
andl
push
daa
xor
adc
sti
push
pop
pop
mov
mov
int3
cmpsb
xchg
mov
mov
shlb
mov
das
into
xor
inc
jb
movsb
int3
ss
mov
int3
es
mov
adcl
dec
incl
inc
jb
sub
mov
sub
mov
push
sub
jmp
sbb
stc
or
fstpl
xchg
mov
and
lods
or
jmp
imul
icebp
test
das
ret
sahf
add
adc
in
push
jp
cmp
jne
mov
shlb
jbe
fcoms
test
data16
imul
clc
cmpsb
mov
movsb
int3
ss
mov
int3
es
mov
mov
xchg
dec
pop
mov
sub
movsb
int3
ss
mov
int3
es
mov
add
add
add
inc
dec
addl
inc
jb
ljmp
into
fistl
inc
jge
mov
dec
sub
icebp
xchg
aaa
mov
inc
xchg
data16
pop
mov
ret
jae
and
jmp
mov
xchg
mov
add
lea
mov
dec
and
gs
inc
repz
nop
sldt
add
add
add
add
fstl
dec
sub
jmp
dec
cmp
stc
leave
jne
mov
fisttpl
dec
cmp
aad
dec
ljmp
push
push
sub
jno
imul
ret
iret
and
xchg
jmp
sub
jmp
stos
fs
inc
dec
cmp
jmp
inc
add
and
icebp
inc
xchg
add
insl
dec
mov
jb
fistl
lds
lock
sbb
js
pop
test
data16
adc
push
jle
nop
adc
jmp
xchg
mov
cmp
aaa
cmpsb
fcoml
lds
aas
mov
and
jno
ja
das
mov
pop
jmp
into
arpl
dec
sub
jmp
aas
into
arpl
sti
sbb
add
fildl
inc
movups
pusha
mov
cmp
scas
mov
fistl
inc
dec
add
daa
faddl
dec
pop
adcl
cmp
mov
nop
decl
pop
jg
inc
nop
subl
fldl
lods
jae
aas
mov
pop
lea
into
fs
add
or
mov
or
push
dec
jbe
aaa
mov
sub
stc
adc
dec
mov
ret
cmp
pop
rorl
pop
xor
addl
push
lcall
sub
sub
lcall
clc
ret
std
or
jp
sub
jmp
sbb
stc
or
in
xchg
mov
and
daa
dec
andl
decb
jb
aaa
add
sbb
ja
movsb
int3
cmpsb
xchg
mov
adcl
mov
ds
add
mov
jmp
dec
and
stc
or
dec
add
dec
cmp
jmp
xchg
mov
out
test
inc
icebp
inc
popl
lahf
lret
sbb
fmull
dec
sbb
sbb
pop
dec
sub
stc
adc
cmp
fistl
dec
sub
jmp
outsl
mov
fisttpl
dec
jbe
pop
mov
sub
pop
lret
mov
jnp
popa
xchg
in
andl
scas
xchg
mov
add
add
add
cmpsb
xchg
mov
mov
cmp
scas
into
jnp
pop
lret
jbe
movsb
int3
mov
int3
push
addl
push
add
push
sub
sti
add
push
push
xor
mov
cmpsb
pusha
mov
rcr
push
rorb
or
sub
pop
ret
jb
bound
xor
addr16
lret
incl
lods
dec
stos
or
add
xor
incl
ret
jb
cmp
jmp
mov
push
fmull
pop
fcoml
sbb
push
mov
cmpsl
inc
ds
data16
pop
mov
dec
sub
stc
or
cmp
add
mov
data16
push
and
icebp
ja,pt
data16
fistl
ficoml
adc
or
inc
bound
mov
inc
cli
fistl
int3
mov
inc
lcall
push
jmp
mov
jg
jl
nop
subl
cmpsb
sub
or
add
in
scas
mov
les
jnp
mov
lds
lods
add
sbb
mov
and
jmp
mov
push
loop
inc
jb
sbb
stc
leave
jb
mov
xor
cmp
jb
jae
xor
xor
fistl
sbb
inc
rorb
xor
mov
sub
jp
xor
xor
fistl
sbb
decl
add
add
stc
push
cs
data16
xor
push
jmp
enter
inc
imul
fisttpl
dec
and
jmp
sahf
fs
dec
sub
jmp
push
xor
mov
sub
jg
idivl
fistl
inc
int
jb
data16
fildl
dec
and
jno
movl
dec
cmp
rol
sub
and
shl
sub
bound
add
addr16
stc
shrb
ss
xor
das
stos
aaa
call
icebp
andb
cmpsb
fcoml
jno
aas
mov
sub
push
and
add
cmpsl
ljmp
jmp
xor
inc
jb
jg
mov
lds
add
fcmovb
mov
fldl
add
jmp
jbe
mov
ja
sub
jg
mov
into
fldl
dec
jp
xor
addr16
jmp
ret
jb
push
sub
dec
jp
sub
addr16
pop
lods
xchg
jmp
stos
or
fisubrl
inc
jb
inc
jbe
ret
dec
lods
add
scas
mov
imul
inc
scas
vunpckhps
mov
sbb
add
add
add
jb
mov
int3
inc
dec
orl
sbb
daa
dec
adcl
fdivrl
jmp
cmp
mov
push
sbb
push
jb
aas
inc
cs
ss
icebp
sbbb
mov
std
stc
shrl
inc
scas
xor
cmpsl
mov
add
add
add
add
dec
addl
data16
sub
mov
data16
data16
scas
mov
cmpsl
inc
into
data16
and
jmp
jb
ss
jle
lret
mov
mov
add
arpl
outsl
loop
inc
jb
data16
pop
ja
sub
data16
push
sbb
add
add
int3
cmpsl
add
jb
data16
clc
dec
inc
mov
data16
sub
jmp
sub
jae
mov
fisttpl
jmp
jg
jg
sub
sub
jno
push
mov
dec
bound
add
xor
es
rclb
sub
addr16
outsl
sub
imul
aaa
add
fistl
add
add
add
sub
inc
scas
in
xchg
mov
les
pop
inc
cs
adc
roll
sub
dec
inc
scas
ss
icebp
mov
mov
fmull
sbb
cmp
nop
subl
ret
and
xor
inc
scas
ss
icebp
mov
scas
mov
dec
adc
cld
test
inc
sub
add
and
inc
sahf
sar
mov
les
inc
inc
ss
fistl
inc
addr16
inc
cs
arpl
push
fmull
jno
xchg
push
lcall
or
sbb
push
dec
aas
cmp
jmp
xchg
fiadds
inc
and
cltd
ret
inc
inc
mov
fisttpll
mov
add
jnp
jmp
xor
fstl
inc
sub
dec
or
and
fcoml
jno
mov
jno
and
xrelease
jb
fistl
jno
xor
inc
inc
ss
arpl
ds
jmp
ds
adc
or
aas
sub
popf
mov
negl
inc
jb
popa
clc
add
fmull
mov
mov
shlb
icebp
mov
dec
ljmp
ror
sub
sub
sahf
in
fcoml
inc
xchg
test
data16
data16
data16
data16
data16
data16
data16
data16
jb
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
jb
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
jb
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
movl
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
cmpl
jne
mov
mov
mov
push
mov
push
mov
push
call
add
mov
push
call
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
mov
push
mov
push
call
add
mov
pop
ret
int3
push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
push
call
add
mov
movl
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
mov
add
mov
pop
ret
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
push
push
call
movl
movl
movl
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
movl
mov
mov
add
mov
mov
sub
shr
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
push
call
lea
push
call
lea
push
call
push
push
call
mov
movl
movl
push
push
call
mov
mov
push
call
mov
mov
movl
movb
movb
movb
movb
movl
movl
movl
movl
movl
movl
mov
movzbl
movzbl
cmp
je
mov
movzbl
movzbl
cmp
je
mov
movzbl
movzbl
cmp
je
mov
movzbl
movzbl
cmp
je
push
call
add
mov
mov
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
mov
push
push
call
push
call
mov
lea
push
mov
push
push
call
test
je
xor
jmp
lea
push
mov
push
mov
push
call
test
je
xor
jmp
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
pusha
mov
mov
movl
movl
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
push
push
call
movl
mov
mov
mov
mov
add
mov
push
mov
push
mov
push
call
add
call
mov
mov
sub
push
mov
push
mov
push
call
add
mov
add
mov
popa
push
mov
mov
push
mov
sub
mov
pop
add
jmp
jmp
ret
sub
mov
movl
add
ret
push
call
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
push
call
add
movzwl
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
xor
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
movl
mov
test
je
movl
mov
cmp
jb
jmp
movl
movl
movl
movl
cmpl
jne
push
push
call
test
je
xor
jmp
movl
mov
add
mov
movl
mov
add
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
movl
movl
movl
movl
mov
push
mov
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
push
mov
push
call
add
mov
mov
mov
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
movl
mov
push
call
add
movl
mov
test
je
mov
cmp
jb
jmp
mov
add
mov
mov
push
mov
push
call
add
mov
mov
shr
cmp
jne
movl
mov
sub
mov
mov
mov
add
mov
add
and
mov
add
mov
add
and
mov
mov
add
mov
mov
add
mov
jmp
pop
mov
pop
ret
int3
int3
int3
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
mov
mov
movl
movl
movl
movl
movl
movl
movl
mov
test
je
mov
mov
mov
cmp
jb
jmp
mov
add
mov
add
mov
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
mov
mov
movl
movl
movl
movl
mov
push
mov
push
mov
push
push
call
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
mov
pop
ret
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
ret
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
mov
cmpl
je
mov
mov
mov
push
mov
push
push
call
add
mov
jmp
mov
pop
ret
cmp
add
add
add
add
or
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
je
jb
popa
arpl
add
inc
icebp
inc
add
xor
xor
xor
xor
xor
sub
sub
xor
ss
xor
add
push
icebp
inc
add
add
andb
add
xor
add
xor
xor
push
gs
jo
outsb
dec
gs
add
jbe
jo
xor
xor
je,pt
sub
pop
jno,pn
negl
dec
adc
jmp
push
sti
xor
lcall
int
mov
rolb
out
neg
xor
mov
inc
sarl
pop
imul
add
push
pushl
add
xorl
ret
lret
repnz
icebp
outsl
pusha
and
add
rol
gs
mov
call
test
aaa
addr16
inc
daa
mov
cmpsl
push
outsb
fidivs
cmp
or
or
xor
mov
outsl
ror
fldenv
cmpsl
test
inc
push
ret
iret
ss
cmpsb
mov
xor
dec
iret
cmp
scas
loop
adc
adc
pop
xchg
xlat
icebp
jns
lds
mov
scas
lods
mov
int3
aam
xlat
jb
sbb
push
inc
cwtl
mov
das
fdivrs
xchg
cld
shrb
imul
or
or
in
in
stos
xor
daa
inc
mov
mov
sarl
in
lea
fwait
loope
rcrl
mov
xchg
mov
or
sub
mov
and
mov
lahf
clc
sbb
pop
mov
jnp
nop
mov
push
push
add
inc
adc
repnz
adc
mov
out
xor
aas
icebp
mov
cltd
ss
sub
jbe
pop
xchg
sub
inc
dec
add
fbld
cmc
adc
jo
cmc
inc
mov
inc
sub
pop
jnp
xor
xor
xorl
mov
bound
data16
int3
mov
test
push
stos
notl
aad
dec
add
ffree
sbb
jnp
add
add
or
add
add
add
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
add
sub
add
add
or
add
add
add
or
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
inc
jb
popa
je
inc
jbe
outsb
je
add
stos
add
je
jne
jb
outsb
je
jb
arpl
jae
fs
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
outsl
fs
gs
imul
add
dec
add
je
jns
je
insl
push
imul
insb
gs
imul
gs
imul
je
add
add
outsb
inc
jbe
outsb
je
add
roll
push
gs
jbe
outsb
je
add
push
outsb
push
gs
js
gs
imul
gs
sub
insl
imul
outsl
arpl
jae
add
add
outsb
push
gs
js
gs
imul
gs
add
jb
popa
je
add
lods
add
jae
jb
insl
jo
push
add
jb
jo
push
add
mov
insb
jae
jb
outsb
push
add
and
inc
gs
jb
arpl
fs
jae
add
push
add
imul
insb
insb
outsl
arpl
add
add
fs
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
cmpsb
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
popa
bound
imul
roll
inc
outsb
fs
imul
add
je
gs
je
jo
imul
pop
add
je
insb
addr16
je
insl
add
mov
insb
addr16
jne
je
outsb
inc
push
add
in
dec
outsl
popa
fs
je
imul
dec
gs
popa
addr16
outsl
js
add
push
gs
outsl
arpl
add
rolb
dec
outsl
popa
fs
jne
jae
jb
add
ja
imul
jmp
popa
je
push
imul
add
fs
arpl
inc
add
imul
popa
jae
inc
js
add
xlat
add
fs
arpl
push
add
inc
push
xor
cs
insb
add
hlt
add
je
je
arpl
bound
arpl
inc
inc
dec
xor
cs
insb
add
dec
outsb
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
dec
inc
push
dec
xor
cs
insb
add
sbb
pop
pop
arpl
inc
imul
pop
pop
addr16
popa
imul
cmp
pop
pop
jo
pop
arpl
insl
outsl
fs
aas
add
jo
pop
insw
outsl
fs
push
add
jae
je
popa
jo
pop
je
jo
add
push
add
jae
je
jae
jb
popa
je
gs
add
pop
add
arpl
insb
outsb
add
pop
popa
fs
jae
pop
imul
add
pop
gs
je
jp
pop
arpl
imul
outsl
outsb
je
outsl
insb
data16
add
arpl
je
push
gs
add
movsb
add
js
je
out
pop
imul
insl
add
gs
je
add
jbe
jb
cs
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
data16
data16
cmc
divb
fdivp
xor
cmc
xor
cmc
into
xor
bound
sahf
data16
or
cmp
cli
out
cmp
stc
aad
in
stc
scas
cmp
cli
imul
sti
fstpt
xlat
clc
sarl
push
stc
mov
jb
bound
push
data16
xchg
aad
shlb
neg
xor
add
add
add
add
mulb
push
hlt
pop
xor
hlt
sbb
in
repz
xor
repz
loope
fdivl
mov
test
xor
cmc
jg
xchg
repz
xor
repz
out
jecxz
call
hlt
mov
aas
hlt
addr16
bnd
push
repnz
xor
repnz
xor
repnz
repnz
mov
add
repnz
repnz
add
bnd
loopne
leave
xor
repz
xchg
xor
repnz
xor
pop
icebp
adc
jecxz
pushl
mov
scas
xor
jb
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
jb
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
jb
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
jb
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
jb
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
jb
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
jb
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
jb
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
jb
data16
data16
data16
data16
data16
data16
add
add
adc
add
sub
add
inc
add
xor
add
pop
add
addb
add
add
add
jo
add
add
add
add
add
mov
add
add
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
mov
add
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
or
add
or
add
add
add
add
add
add
add
out
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
ret
add
add
add
xor
cmp
xor
xor
inc
add
add
add
pop
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
sbb
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
sbb
add
add
add
add
add
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
and
and
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
and
and
and
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
and
and
and
cmp
arpl
imul
and
and
and
and
and
and
gs
gs
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
and
and
and
cmp
jae
arpl
imul
and
and
and
and
je
jne
je
outsb
outsw
ds
and
and
popa
jae
gs
bound
