sti
outsl
mov
push
mov
add
pushl
add
call
leave
ret
pop
jg
mov
xor
add
push
pop
sub
mov
mov
pop
push
xor
add
add
rcrl
push
or
add
in
in
incl
movsb
movsb
pop
xor
push
pop
push
mov
jno
add
in
jl
jno
add
rcrl
rcll
sbb
sbb
roll
mov
rcl
mov
jno
add
mov
fiaddl
pop
sub
add
das
aaa
idivl
push
push
adc
outsl
sub
mov
insl
mov
dec
jno
push
sub
fistpl
or
shrl
dec
mov
movsb
mov
mov
insl
adc
mov
movsb
add
xor
mov
sbb
lods
mov
xchg
mov
stos
inc
mov
jl
jl
imul
insl
mov
sbb
pop
adc
inc
lahf
push
mov
pop
mov
xor
pop
imul
outsl
insl
movsb
dec
jle
sbb
pop
xlat
pop
sbb
xor
mov
test
subb
into
sbb
pop
jmp
dec
sbb
roll
pop
imul
jno
dec
xchg
movsb
shrl
dec
lods
insl
int
mov
or
xlat
pop
imul
adc
lcall
sub
xor
fcoml
ret
das
sbb
loope
xchg
jl
mov
inc
xor
pop
cmp
pop
lret
cmp
mov
or
xor
xor
pop
imul
imul
cs
sbb
test
push
sub
cmpsb
pop
sbb
mov
mov
xor
insl
sub
rorl
test
inc
fimuls
adc
mov
jne
jbe
jnp
or
jl
lods
pusha
sub
lods
mov
or
pop
adc
insl
cltd
pop
test
sbb
fldcw
fmull
push
sbb
push
jl
jl
dec
test
insb
outsl
adc
inc
cs
fmuls
les
test
xorb
scas
stos
jns
in
push
jg
push
push
pop
fidivrs
add
lea
adc
pop
imul
inc
int3
dec
sbb
xchg
push
bound
mov
pop
jno
mov
sbb
push
sahf
adc
pusha
sub
dec
aaa
mov
cli
shll
pop
mov
xchg
out
imul
js
icebp
sbb
insl
imul
das
pop
movsb
loopne
ret
push
push
or
inc
mov
popa
mov
adc
movsl
push
mov
mov
addr16
pop
aaa
sbbb
imul
std
mov
shrl
pop
imul
cmpl
fcmovbe
pop
mov
sub
lods
sarl
or
ret
rcrl
and
shll
cmp
mov
imul
mov
inc
outsl
sbb
pop
adc
scas
mov
mov
mov
push
push
lods
in
shll
loopne
push
loopne
xlat
or
mov
ja
pop
xlat
sub
rcl
inc
xor
xchg
pop
xlat
xchg
push
popf
mov
push
insb
push
orl
xchg
push
cli
sbb
mov
cmpsb
int
or
and
mov
pop
imul
lods
mov
js
jmp
mov
cmp
les
pop
push
ret
mov
pop
je
push
dec
mov
sub
adc
int
iret
xor
push
imul
sbb
pop
bnd
loopne
fdivl
sar
subl
icebp
shl
jae
scas
mov
movsb
jecxz
rolb
aaa
jne
aam
cli
cli
jl
mov
mov
cwtl
mov
push
pop
lcall
adc
clc
lea
push
push
xchg
pop
rcrb
data16
push
nop
add
push
lea
push
lea
pop
inc
rorb
pop
repz
insl
jo
or
jl
sbb
nop
inc
mov
lcall
pop
xor
es
and
or
and
outsl
inc
imul
testl
fiadds
cmp
aas
inc
imul
sbb
andl
xor
jg
inc
sub
sbb
insl
imul
xchg
add
or
push
and
xchg
jno
mov
pop
xlat
or
add
jl
push
out
cmp
ja
jno
pop
sub
or
shll
test
daa
movsb
dec
int
lret
ds
pop
jl
divb
sbb
ret
andb
sbb
outsb
aaa
test
mov
pop
leave
out
mov
jl
jae
movsl
xchg
andl
das
adc
sub
out
rclb
loopne
aaa
pop
mov
out
das
in
sbb
jno
leave
rorb
pop
and
pop
pop
lcall
xor
and
fiaddl
jge
jmp
cmp
dec
mov
rcr
push
add
jecxz
mov
dec
add
jo
aam
fdivl
in
cmp
xchg
loopne
push
mov
sbb
adc
dec
dec
xchg
pop
repz
pop
jae
movsb
sbb
lcall
jg
xlat
jo
mov
addl
fcoml
pop
xchg
ret
inc
sbb
ja
adc
push
xor
fcomp
pop
std
nop
mov
jge
in
add
push
repz
ja
and
stc
mov
div
mov
inc
push
inc
mov
jno
add
idivl
inc
sub
jg
jg
inc
pop
add
add
mov
out
pop
push
inc
sbb
inc
push
or
xlat
xor
rolb
jmp
mov
push
add
push
out
xor
sbb
lock
jmp
call
jp
xchg
nop
cmp
push
data16
jmp
sarl
push
or
mov
loop
subb
push
sbb
in
and
jno
rcl
sbb
shl
call
stos
mov
dec
in
mov
mov
imulb
mov
xchg
push
push
xor
dec
shll
mov
loop
push
sbb
cmp
rcrb
push
and
cs
jae
ja
cmp
pushf
mov
call
stos
pop
sbb
mov
cmp
or
rcl
push
mov
mov
roll
andb
pop
push
aad
push
ret
pop
jae
rorl
push
rolb
inc
loopne
mov
push
mov
sti
push
out
pop
outsl
in
cmp
stos
loope
xor
iret
mov
pop
scas
push
mov
jmp
lods
xor
jae
mov
mov
adc
pop
ret
mov
add
jnp
or
xor
pop
int
push
add
xchg
jo
mov
xor
push
xchg
cmp
lock
adc
pop
xlat
dec
xor
jae
mov
lock
mov
scas
inc
ficoms
pop
add
test
mov
loope
rcl
push
xchg
rcrl
jo
fdivr
rcl
sub
mov
lcall
mov
mov
insl
shl
add
push
movsb
jo
loopne
std
push
mov
pop
lret
push
mov
push
inc
sub
scas
imul
sti
out
popa
stc
fbstp
test
pop
arpl
lods
cmp
test
fistpl
jp
jne
cmp
xor
inc
jp
cmp
jno
sub
cltd
sbb
sbb
call
sarl
out
xor
xor
aaa
mov
push
ret
repz
jae
pop
pop
jge
clc
mov
or
test
sbb
cltd
xchg
adc
ss
xchg
es
xor
sub
sub
pop
aad
cmp
xor
mov
pop
sbb
jmp
dec
push
pop
add
sbb
ds
or
pop
push
pop
push
push
xor
mov
sbb
shll
inc
jnp
mov
sbb
pop
xchg
dec
push
into
cmp
and
or
add
shlb
sbb
push
and
adc
push
xchg
jno
mov
les
ja
in
dec
sbb
mov
push
jecxz
gs
jmp
and
xor
add
shl
jno
hlt
add
jo
inc
shl
movsl
daa
cwtl
push
xchg
sti
sbb
dec
sub
andb
pop
push
jecxz
popa
push
imul
push
in
sub
sbb
pop
add
or
dec
addb
aam
adc
sti
pusha
dec
pushl
aam
test
and
inc
lods
add
sbb
push
scas
shrl
xor
loope
xor
mov
sbb
pop
push
mulb
mov
loope
sbb
test
sets
movl
and
out
hlt
adc
push
outsl
push
sub
das
js
add
test
or
sub
es
cltd
push
ja
es
imul
movsl
mov
stos
insl
xchg
ret
push
sub
add
mov
movsb
mov
sbb
lcall
scas
pop
rclb
sbb
xchg
adc
scas
pop
jnp
data16
lret
add
push
jle
cmp
xor
mov
sahf
cmc
out
pop
pop
xor
test
stos
es
jl
add
pop
push
cmp
cs
add
lods
xor
adc
cwtl
mov
lcall
cltd
sub
js
cltd
inc
add
int
or
addb
pop
das
jbe
sbb
fisubrs
mov
stos
test
aad
into
or
aad
into
push
xor
sub
or
inc
gs
mov
and
sbb
lcall
pushf
leave
loopne
inc
sarb
cmp
leave
dec
mov
mov
mov
mov
add
pop
mov
xorb
and
dec
sbb
mov
adc
sub
ljmp
xor
ljmp
test
dec
into
xor
sbb
in
sbb
or
into
push
push
xor
push
adc
fnstenv
js
xor
fcomp
push
andl
jnp
sbb
ret
sbb
push
les
jbe
xchg
mov
scas
sbb
and
jle
push
push
push
mov
daa
aas
or
nop
cld
pop
std
lods
dec
mov
jle
frstor
xchg
leave
push
mov
rorl
pop
stc
inc
add
push
pop
es
or
in
xor
push
xchg
bound
ret
popa
ljmp
jb
xchg
jp
scas
bound
stos
pop
jne
bound
idivb
sub
ja
or
sbb
rcrl
xor
mov
add
sub
ds
std
dec
cwtl
jp
pop
xchg
repz
test
jb
dec
inc
fisubs
out
leave
in
cwtl
or
les
xor
aad
mov
jae
mov
ret
nop
cmp
ret
popa
xor
or
add
addb
adc
pop
cmc
lret
int
add
icebp
bound
and
sub
cmp
sbb
dec
movsb
aaa
shlb
sahf
mov
int
push
cld
inc
cld
push
dec
lock
mov
ljmp
rcrl
sbb
les
mov
or
lcall
popf
data16
xor
ja
add
scas
sbb
test
popf
mov
scas
mov
insl
jns
aaa
mov
inc
xor
mov
mov
push
or
pop
int
xor
data16
or
push
mov
cmp
lcall
pop
inc
sti
fbstp
sbb
push
ret
adc
and
fcompl
popa
mov
dec
movsb
sub
insb
pop
push
popa
ret
adc
adc
loope
bnd
adc
les
mov
and
adc
pop
std
pop
mov
mov
inc
or
xor
icebp
negb
ret
mov
movsb
xor
sbb
or
xchg
daa
jne
mov
mov
sub
imul
jns
sbb
and
cmp
xor
mov
pusha
push
mov
aad
stos
cmp
and
sub
out
adc
or
test
pushf
ret
outsw
pop
imul
adc
gs
xor
dec
sbb
mov
and
sti
imul
mov
lea
icebp
mov
jl
lcall
lock
fdivrp
pop
cmp
aas
pop
fdivl
and
jno
pop
add
or
xor
andb
into
inc
imul
mov
lds
jb
add
lcall
adcl
cs
xor
xchg
add
daa
mov
sub
jmp
icebp
pop
js
das
sbb
pop
cs
sub
out
jns
jbe
pushw
dec
mov
das
sbb
cltd
sbb
out
addb
lods
sbb
movzbl
sbb
push
mov
movsb
rcll
jb
inc
lea
pop
sbb
add
pop
pusha
out
insb
dec
lock
pushf
call
in
test
gs
sub
dec
lock
fdivrs
lods
outsl
out
pop
std
iret
dec
add
cmpb
xor
incl
dec
sbb
sub
sbb
ds
cmp
push
mov
in
cwtl
xor
pop
push
arpl
repnz
xchg
iret
add
punpckhbw
rcll
jb
or
cmp
shll
loop
rcrl
addb
xchg
mov
jg
in
push
push
sbb
adc
push
push
xchg
add
adcb
or
test
roll
push
jae
or
fsubr
addl
ret
rolb
sbb
push
jbe
jecxz
mov
pop
imul
xchg
mov
adc
xlat
pop
pop
sbb
test
push
pop
scas
xorb
cmpb
mov
push
push
fwait
loope
loopne
out
sub
push
push
jl
push
cs
jle,pt
sub
bswap
pop
not
or
sbb
or
fsubrl
sbb
nop
flds
aad
mov
mov
aam
mov
dec
imul
xchg
sbb
cwtl
or
and
inc
sbb
mov
js
sbb
stos
xchg
rcl
lcall
ljmp
xor
sbb
xor
mov
dec
stos
sbb
pop
jno
sbb
sbb
jge
ss
stos
sub
push
insb
and
int
test
xchg
mov
inc
cmpb
adc
jmp
bound
push
scas
push
movsb
push
sbb
sbb
jg
pop
iret
popa
addl
test
mov
inc
mov
inc
sub
add
movl
inc
imul
mov
sub
pop
jno
sbb
adc
imul
dec
test
add
pop
movsb
adc
dec
es
or
or
mov
outsl
xlat
cmp
cmp
stos
inc
pop
jae
lea
pop
imul
xor
pop
add
insl
stos
pusha
call
xchg
pop
sahf
pop
push
xor
xor
lock
adc
lods
sbb
push
andl
xor
sub
and
sub
movsb
pop
loope
lock
cs
rcrl
mov
cmp
jbe
cmp
jge
xchg
test
mov
aad
mov
int
lods
dec
cwtl
xchg
adc
or
inc
daa
mov
dec
sbb
sub
hlt
in
mov
sbb
es
or
cmp
loopne
inc
push
test
add
inc
test
sub
test
test
subb
clc
loopne
pop
cltd
or
int
cmc
aaa
add
loop
repz
push
orb
cmp
dec
add
pop
pop
jge
cltd
jo
or
pop
push
add
das
lds
test
jb
and
adc
and
adc
orl
in
pop
movsl
sbb
cs
out
push
fistpl
rcrl
cs
pop
loopne
stos
push
add
rorb
subl
adc
sub
cmp
insb
icebp
mov
xor
sar
mov
rclb
ljmp
mov
lock
fmull
inc
cmp
add
adc
and
sti
fiaddl
pop
mov
addl
popa
adc
out
cld
lea
push
push
push
stos
and
jo
call
push
arpl
and
mov
mov
test
mov
inc
cmp
data16
mov
rcrb
ljmp
inc
jno
add
dec
adc
push
in
mov
pop
cmp
and
aam
pop
loopne
dec
inc
mov
adc
test
pop
push
inc
xor
or
cli
and
int3
or
inc
jae
fwait
outsl
sbb
dec
mov
enter
sbb
jae
fsubs
sub
sbb
sahf
xchg
in
push
sbb
ret
dec
daa
cmp
es
mov
pop
fdivrl
inc
jae
test
popf
sahf
rorl
shlb
push
cmpsb
and
mov
push
add
mov
int
sbbb
or
xor
lcall
or
and
das
jo
out
pop
cld
out
add
insb
sbb
sub
sbb
loop
jl
repz
xchg
pop
adc
enter
andb
int
movsl
add
repnz
mov
test
rcrl
jne
add
ja
cmpb
div
cltd
lcall
addb
pop
or
outsl
adc
sbb
fld
pusha
push
in
mov
aas
push
push
and
or
or
cmpb
mov
xor
sbb
pop
sbb
push
ss
aam
mov
enter
push
decl
into
cmp
push
xchg
and
rcl
test
fstpt
dec
xor
xor
jb
cltd
jg
mov
xor
outsb
movsb
cmpsl
cmc
ret
addr16
addb
scas
jbe
jl
inc
fidivs
pop
rclb
push
mov
or
jl
xchg
pusha
jo
sbb
data16
push
xor
mov
sbb
push
insl
cs
aad
add
push
xchg
test
aad
and
sbb
jb
les
test
jo
sbb
push
push
push
add
xor
xchg
sub
add
push
fwait
sub
sahf
mov
jo
sbbb
shll
adc
cmp
insl
imul
rcrl
in
mov
sub
ret
lock
sbb
xorl
loope
xchg
push
les
xor
mov
inc
loope
cmp
pop
pusha
push
outsl
cltd
mov
clc
sub
jb
bound
jecxz
xor
add
andl
filds
xor
les
add
add
cmpsb
xor
pop
enter
mov
popa
adc
push
jmp
push
mov
test
push
pushf
pop
scas
dec
adc
push
adc
mov
rcrl
dec
mov
pop
xor
sbb
xlat
push
add
push
cld
jno
addr16
add
fsubrl
subl
jo
addr16
jne
push
loopne
mov
add
ja
push
pop
cmp
in
cmpsb
or
cmp
out
push
addb
stos
cld
in
nop
sbb
lock
leave
mov
jg
push
push
push
adc
adc
fildl
shl
push
call
mov
cs
adc
call
lea
inc
test
mov
addr16
jbe
lock
addr16
pop
hlt
push
dec
and
sbb
mov
pop
sarl
sub
mov
pop
outsl
push
outsl
movsl
lret
lcall
jb
adc
loopne
icebp
enter
fwait
mov
in
mov
aad
mov
scas
and
add
or
push
adcl
cmp
adc
scas
lcall
cmp
mov
push
rcrl
cld
sub
mov
pop
and
sub
cwtl
dec
rclb
cmp
push
sbb
add
lahf
push
push
pop
call
loopne
mov
outsw
xchg
lret
aam
push
mov
and
jnp
sbb
lcall
pop
inc
roll
jns
sub
in
int
loop
enter
cmp
dec
shrb
add
js
bound
jno
inc
jl
and
pop
cmp
jb
jo
dec
dec
adcl
cmp
shrl
add
dec
ret
jae
push
lea
mov
pop
jae
xchg
sarl
popa
cmp
or
aam
fistps
sbb
pop
mov
jae
test
and
addl
hlt
pop
inc
xor
cmp
leave
outsb
scas
sub
push
shrl
mov
insl
mov
cltd
lds
add
iret
jle
popa
or
push
mov
xor
lods
mov
in
and
or
xchg
leave
dec
mov
icebp
pop
outsl
push
clc
in
lea
push
cmpsl
push
outsb
cld
aam
adc
cwtl
or
jg
sahf
jle
adc
sub
xor
inc
sub
dec
xor
ffree
mov
xor
stos
icebp
cmp
mov
xchg
push
add
sub
insl
jl
repnz
enter
hlt
enter
push
xor
lret
je
xor
or
mov
xor
jnp
xor
mov
sbb
sbb
int3
mov
push
icebp
sub
pusha
sub
cmp
pop
leave
call
sub
xor
orl
ss
or
sbb
in
push
add
aam
mov
xor
es
add
jbe
ret
add
lds
xchg
xor
iret
xor
dec
rorb
lea
rorl
inc
xlat
xor
ljmp
mov
test
rorl
jg
cs
xchg
lret
int3
imul
shlb
test
aad
sarl
mov
addb
dec
pushf
add
dec
mov
jbe
jo
pop
addb
mulb
add
shr
or
push
in
sub
sbb
pop
cmp
mov
int
imul
pop
dec
xchg
sbb
push
iret
cmp
add
shll
and
sub
pop
pop
rcrl
popa
js
xor
je
cmp
es
jae
dec
sub
fs
pushf
and
sub
or
pop
sbbl
shll
roll
sbb
push
mov
xchg
sbb
nop
ss
inc
roll
mov
loopne
jno
cs
fdiv
aaa
lahf
or
mov
movlps
jmp
xchg
gs
insl
lret
mov
xor
xchg
xchg
leave
nop
aad
les
sub
lcall
dec
jne
xor
push
and
xlat
sub
imul
int
icebp
xor
push
mov
push
sbb
mov
outsl
jo
pushf
shl
mov
add
arpl
pushf
cmp
sub
push
cld
mov
fcomps
xor
push
aad
mov
mov
add
or
enter
and
flds
lock
shr
sbb
push
cmpsb
or
dec
nop
mov
insl
pop
mov
pop
stos
pop
mov
push
xor
push
aaa
or
and
imul
xor
repz
inc
stos
push
pop
daa
inc
pusha
fadds
imul
stc
jns
loopne
in
push
xorl
adc
mulb
sub
push
std
test
xor
pop
and
mov
xor
add
adc
jne
aad
xlat
stos
sbb
jo
xor
rolb
icebp
sub
jl
pushf
push
out
add
call
ret
xor
mov
subb
jae
xchg
and
test
xchg
push
pop
push
cmp
ret
adc
mov
mov
loopne
xchg
repz
pop
jae
mov
mov
sbb
mov
mov
in
jecxz
mov
shll
lahf
outsl
aam
push
cmp
jl
sbb
int
cmp
test
js
adc
out
fs
mov
adcb
sub
lahf
push
xchg
mov
xchg
or
push
jb
xchg
push
sbb
jg
scas
cmpsb
mov
sbbl
ror
xchg
pop
cltd
shlb
icebp
push
dec
cs
outsb
outsl
lret
push
mov
int3
xchg
push
ss
or
add
xchg
insb
mov
mov
int
int
or
push
inc
je
shrl
cs
pop
push
cmp
and
call
fidivl
dec
sbb
pop
mov
in
aad
sub
jge
adc
sti
sti
jo
sbb
add
jae
or
fstpt
shll
cs
movb
or
dec
inc
movsb
add
mov
cmp
in
pusha
movsl
iret
cld
fstl
push
mov
mov
and
pop
push
imul
jge
sbb
inc
push
add
and
pushf
jo
hlt
cmovno
into
adc
dec
repnz
loopne
add
or
add
rorl
pop
imul
ja
divb
add
jae
test
cmp
stc
insl
add
dec
aas
mov
mov
or
dec
int3
cwtl
scas
sbb
addl
push
sub
loope
adc
pop
xor
mov
sbb
sub
xor
and
dec
or
cltd
sub
xchg
mov
ret
rcrl
lret
pop
xchg
sbb
into
fs
scas
arpl
and
push
and
mov
sbbb
cmp
mov
cmpb
push
mov
scas
add
in
jecxz
cltd
dec
push
push
cmc
mov
xlat
or
ja
orl
imul
fsubs
xchg
pop
in
scas
out
ficoms
js
cs
inc
rcll
sub
loop
into
xor
cld
aad
cmp
mov
movsb
aas
pop
mov
ret
push
mov
ret
repnz
call
ret
lret
sub
loop
inc
stos
pop
jae
scas
out
push
mov
pop
push
sysret
cmp
lret
shll
fldcw
fs
aas
mov
jl
and
sub
push
test
in
das
mov
add
lcall
push
adc
shll
push
sbb
ds
mov
pop
pop
hlt
push
jmp
pop
dec
popf
add
pop
push
xor
dec
dec
cltd
add
faddl
cs
ss
rolb
and
fmuls
sub
push
jae
sbb
popa
adc
aas
jbe
outsb
jecxz
pop
cs
aad
and
movl
shrb
or
mov
stos
shl
into
movsb
cmp
test
xchg
mov
and
iret
popf
ret
push
pop
mov
in
mov
loopne
inc
int3
pushw
roll
mov
enter
rcrl
xchg
mov
leave
jb
xchg
mov
test
cmp
lahf
into
in
pushf
adc
dec
ret
inc
mov
pop
cmp
insb
push
mov
incb
outsl
and
out
xor
xchg
jnp
xor
das
pop
jle
sbb
xor
xorl
mov
inc
xor
popa
and
inc
ret
imul
scas
adc
push
jl
pop
das
sbb
pop
lcall
add
test
push
jae
xchg
mov
cmp
adc
add
push
into
test
jmp
push
dec
in
xor
sarb
ret
int
test
cmp
in
jno
daa
adc
clc
out
nop
stos
mov
cmp
lret
test
cs
mov
pop
add
xor
inc
add
xchg
or
adc
push
lret
mov
push
loope
push
scas
lods
or
in
jbe
xchg
or
sub
mov
jb
loope
insl
andb
sbb
fsubrs
push
test
pop
cmpsb
sbb
mov
mov
xchg
movsb
cmpsb
call
fcoml
push
cmp
lods
xchg
pop
out
mov
shl
inc
out
rclb
jno
outsb
pop
dec
sbb
inc
push
out
push
mov
sub
dec
cwtl
push
or
rorl
fs
test
pop
fs
push
sbb
sub
and
jl
xor
fidivl
add
test
add
bound
add
rcl
push
shll
push
sbb
andb
jg
into
adc
cmpb
dec
stc
push
cli
push
in
inc
cmp
mov
adc
test
mov
fisubl
jno
out
loopne
out
push
hlt
data16
pop
fwait
cmp
fwait
pop
loopne
or
sub
cmp
pop
push
lods
push
push
loopne
xchg
shll
movsb
sbb
xchg
xchg
mov
enter
adc
data16
out
ljmp
std
adc
push
aas
xchg
mov
divl
inc
mov
sbb
mov
test
mov
pop
in
cmp
xor
stos
data16
aam
sahf
or
push
pop
cs
mov
addl
out
aam
xor
jecxz
pop
pop
or
sbb
xorb
mov
or
mov
int
push
into
lds
push
and
xchg
push
loopne,pn
push
cmp
mov
lods
popf
out
fucom
cwtl
jo
jae
rclb
xor
addb
sub
jmp
sub
xchg
cmpsl
adc
outsb
cwtl
push
into
cmp
push
hlt
andl
xchg
push
mov
push
xchg
call
push
mov
stc
aaa
aaa
sarb
mov
or
or
push
leave
loopne
cmc
push
cs
aad
mov
jne
xor
mov
sub
add
data16
in
inc
pop
nop
leave
cwtl
push
js
cmp
jo
outsb
pop
js
inc
cmp
push
xor
cwtl
dec
xor
data16
or
jns
fs
push
dec
test
inc
testb
shll
inc
cmp
or
pusha
adcb
inc
cmp
mov
mov
and
cs
dec
clc
push
loope
adc
mov
xchg
loopne
mov
pusha
push
pop
cmp
inc
lret
outsl
mov
les
xchg
and
or
jbe
cltd
xor
subb
dec
es
cmpsb
adc
push
add
cmp
cli
push
scas
out
sub
add
mov
sub
adc
push
movsb
roll
push
or
stc
mov
cmpsl
push
adc
mov
dec
loop
or
push
add
mov
xor
sub
pop
je
mov
pop
adcb
les
push
pop
adc
push
xchg
imul
sub
dec
cmp
or
inc
out
call
sub
add
pop
test
pop
popa
push
daa
xor
sbbb
inc
pop
pop
rclb
inc
jo
pop
cmpsb
loopne
out
adcl
or
stos
lahf
or
cmp
test
sbb
mov
push
pop
jno
das
jg
cmp
loop
cli
int
sbb
lods
ret
cs
lret
inc
rolb
icebp
xor
shrb
movsl
mov
mov
xchg
in
or
mov
mov
sub
data16
fsubrs
leave
ret
cmpsb
sub
sub
jae
adc
mov
aaa
gs
aas
mov
out
out
bound
mov
lods
xchg
or
sahf
sub
cmp
xlat
test
pusha
rclb
add
sahf
jp
cwtl
pop
pusha
jns
lea
es
iret
mov
add
cmp
push
jbe
mov
dec
xor
add
xlat
stos
pop
or
add
ffreep
test
lahf
aam
xor
jo
rol
adcb
adc
aam
outsb
sbb
and
ror
or
cltd
sti
pop
nop
test
lods
adc
or
add
mov
jl
mov
mov
shll
push
cmp
sub
push
cmp
loope
mov
push
mov
mov
jle
xchg
lret
imul
push
int
add
inc
les
inc
out
xor
lcall
jae
pop
xor
xlat
add
jnp
lcall
fdivrs
ret
push
or
popa
imul
test
push
pop
aad
xor
jne
push
aad
jb
jmp
movsl
pop
push
into
in
push
inc
sbb
mov
popf
enter
in
mov
push
jo
dec
pushf
int
push
xor
push
jnp
and
hlt
or
or
mov
mov
adc
jecxz
mov
test
mov
imul
jecxz
sbb
jb
dec
mov
inc
stos
leave
imul
loopne
call
jnp
and
stos
lret
sbb
cmp
scas
jno
mov
mov
mov
sbb
pop
int
fs
inc
cli
mov
inc
xor
adc
push
xchg
test
jae
sub
out
fcomps
int
and
jg
push
adc
mov
test
and
xchg
call
ret
push
loopne
push
push
push
mov
xchg
mov
mov
push
and
arpl
adc
bound
mov
mulb
push
push
pop
mov
aas
and
rcrb
sbb
inc
test
pop
sbb
xchg
or
xchg
push
shlb
test
pop
mov
sub
test
ljmp
popf
scas
push
and
xor
pop
cmp
xor
sub
push
dec
sbb
or
aad
cli
js
jle
xor
sbb
pop
jae
shll
jo
inc
xchg
or
lcall
aaa
push
xor
sbb
adc
xor
jb
sub
lds
test
push
mov
cltd
sbb
out
in
pop
jne
inc
and
add
mov
ljmp
popa
and
ret
fiadds
lret
fidivs
insl
int
mov
and
mov
push
inc
scas
mov
mov
xor
icebp
aas
out
shlb
sub
mov
out
push
dec
mov
xor
adc
mov
push
fcoml
jo
or
decl
loopne
mov
in
fisttps
mov
mov
sarb
rclb
les
xor
and
cmp
rcll
jns
fwait
sbb
xchg
adc
push
pop
roll
push
and
loop
mov
push
push
shl
xor
xor
pop
push
pop
mov
xor
lcall
jo
cmc
jge
jle
adc
and
sbb
cmp
dec
rorb
call
inc
mov
cmp
orl
enter
xlat
mov
test
cmpsb
rcl
push
mov
mov
in
test
add
js
or
sbb
sbb
sub
xlat
sbb
and
mov
xchg
cmp
bswap
sbb
xchg
or
repz
cli
ret
jl
into
mov
xor
les
testl
jo
mov
sub
fsubrl
xor
pushf
leave
orl
adc
lret
shll
rorb
dec
sahf
test
sbb
je
mov
lret
dec
rclb
add
call
cmp
xchg
xor
leave
pop
mov
adc
mov
lock
arpl
shll
jmp
clts
addl
push
lods
ljmp
xchg
jmp
or
push
loop
add
fimuls
push
das
popa
mov
ror
push
push
xchg
stos
adc
pop
fst
movsb
push
mov
mov
or
daa
push
dec
bound
mov
add
fldcw
jae
enter
insl
aad
test
lock
cmp
stc
lock
mov
push
loope
mov
or
les
imul
sub
rorl
scas
cmpsb
movsb
mov
hlt
sub
sub
xchg
pop
xchg
subl
sti
cmp
loop
mov
and
loopne
add
loope
orb
fs
pop
push
pop
lcall
popf
xor
mov
push
add
pop
xor
cmp
lret
cs
add
out
lock
xlat
pop
pop
mov
in
loop
rorb
xor
sbbb
cmp
xorl
cmp
je
push
push
or
pop
ret
in
add
cmp
sbb
nop
cmpb
push
cmp
out
push
js
jae
adc
cmp
jnp
add
cmp
push
addr16
jge
loope
loope
push
insb
lcall
jno
movsb
push
xor
xor
data16
lret
ret
test
inc
push
push
movsb
cwtl
pop
mov
xchg
addr16
push
push
ret
divl
ret
cltd
jne
bound
arpl
push
cmpsb
xchg
adcl
stos
jnp
or
xchg
rcrb
rcll
jae
enter
movsl
in
and
xchg
mov
push
ds
dec
push
inc
sub
imul
jnp
int
xchg
mov
dec
sub
push
popf
sub
xorl
add
clc
outsl
in
sbb
add
jns
lock
jp
subl
popa
andb
add
fwait
lcall
incb
iret
or
jne
clc
mov
pop
sub
push
adc
mov
mov
and
dec
hlt
jcxz
test
lret
sub
fbstp
xor
inc
movsb
and
dec
xchg
ret
lret
xchg
movsl
orb
jmp
arpl
and
stc
and
mov
push
mov
roll
sti
loope
cmp
fcomip
loope
jo
insb
outsl
cmp
push
cmp
mov
mov
xor
enter
subl
cltd
dec
and
mov
cs
fs
jne
test
push
sub
jne
pop
mov
xor
jl
mov
ret
lahf
sarl
push
mov
push
es
rorl
iret
or
mov
or
pusha
xor
adc
daa
sbb
add
into
subb
stos
add
loopne
pop
je
or
jo
lcall
lods
pop
scas
enter
mov
or
pop
test
cmp
aas
lods
cmpsl
ljmp
ret
add
loope
push
add
dec
popa
sbbb
inc
leave
subl
add
sub
sbb
or
out
scas
sti
sti
mov
adc
xor
add
jae
dec
jnp
mov
pushf
mov
lahf
mov
xchg
push
loopne
in
mov
sub
mov
shlb
mov
lret
xchg
imul
ret
dec
pushf
test
sarb
in
add
xor
xor
imul
out
inc
add
inc
mov
mov
movsb
repz
out
sbb
cmp
data16
sub
sub
stos
inc
jg
cld
bound
push
push
jge
roll
test
testl
stos
push
xchg
dec
push
in
adc
data16
xor
sbb
enter
push
mov
je
xor
push
inc
jae
test
daa
mov
push
mov
pop
xchg
test
fisttpl
xchg
leave
insb
xor
sbb
mov
jg
les
test
jbe
or
add
hlt
sti
pop
imul
or
or
ljmp
cltd
mov
cli
xor
or
jo
pushf
fisttps
cmpsb
testb
sub
xor
xlat
xor
leave
pop
or
addb
jnp,pn
sbb
sbb
or
das
cmp
push
pop
push
inc
scas
and
out
nop
sbbl
xchg
cmp
and
or
pop
es
jp
mov
popa
xor
pop
sub
loopne
gs
mov
xchg
cwtl
stos
add
lcall
mov
inc
int
mov
cmp
jp
sub
pushf
cs
test
add
mov
adc
sbb
xchg
mov
xchg
scas
inc
cmp
cmpsl
pop
mov
faddp
dec
dec
popf
add
jno
push
dec
push
sbb
das
add
pop
popf
push
push
ret
rcrl
jge
push
mov
ss
roll
jg
ret
or
mov
xor
fsubl
out
ljmp
mov
aaa
aaa
xchg
mov
lcall
loopne
cwtl
inc
fstl
dec
rcrl
int3
test
xlat
dec
cwtl
xchg
lcall
aad
pop
out
inc
bound
or
inc
push
push
xlat
pop
jnp
push
sti
ja
inc
xchg
cmp
in
cltd
mov
test
xor
mov
in
mov
fcmovbe
jb
fstps
test
aam
leave
cltd
test
daa
jno
xchg
jo
add
ret
add
aaa
mov
es
xchg
push
mov
into
mov
int3
arpl
mov
ljmp
mov
mov
add
cmp
subb
xor
in
adc
cmp
cmpsb
adc
ret
dec
mov
add
push
cs
iret
xchg
mov
lret
xor
sub
adc
enter
test
mov
hlt
mov
test
pop
or
imul
cmp
frstor
dec
test
out
push
ds
mov
jno
push
out
add
push
pop
pop
scas
push
call
push
pop
loopne
add
push
xchg
pop
js
or
in
add
shl
dec
cmpsb
dec
js
and
in
inc
shll
pop
cmp
push
lret
fisubl
adc
sbb
cmp
faddp
lock
imul
orl
aam
push
arpl
mov
adc
sbb
mov
outsl
push
jg
add
push
and
add
lea
loope
pushf
mov
cltd
or
push
xor
sbb
daa
inc
inc
xchg
inc
jnp
push
xor
push
cli
pop
sub
sub
xor
insl
in
dec
mov
or
jg
or
ret
nop
adc
xchg
add
inc
xchg
mov
mov
jo
sbbl
jne
or
pop
cmp
or
push
rcrb
out
pop
push
pop
fs
arpl
xor
das
xor
sarb
enter
jle
xorl
mov
push
add
pop
xchg
add
mov
add
pop
stc
sbb
imul
and
fs
sbb
or
cmp
mov
js
inc
xchg
leave
fidivs
scas
movl
pop
mov
ja
add
insl
and
mov
jne
adc
fsubrs
add
aad
add
test
sub
and
xchg
pop
and
cs
clc
pop
loope
jae
xchg
push
cmp
mov
orb
jno
dec
out
rorb
sbb
pop
xchg
sarl
xor
sub
fimull
add
dec
sbb
test
inc
mov
inc
sbb
and
loopne
push
xchg
sub
or
or
dec
sbb
dec
sub
add
sbb
pop
adc
inc
mov
stos
mov
mov
aas
ret
nop
add
add
outsl
cs
call
xor
enter
cmc
hlt
mov
add
jb
subl
push
push
mov
rcl
jns
scas
lea
sbb
testl
inc
xchg
cmp
add
or
orl
addl
into
add
push
pop
add
mov
loop
scas
sti
push
xchg
jp
or
mov
notb
jb
dec
mov
sub
mov
pop
leave
add
adc
pop
aad
mov
adc
pop
xor
sbb
test
push
xor
add
inc
stos
add
dec
test
cwtl
jb
lahf
xor
insl
dec
and
cmp
aam
mov
mov
dec
test
xor
mov
aam
sbb
cmp
and
test
xor
test
pusha
outsl
fidivrs
adcl
add
sti
xor
xchg
adc
push
push
stc
out
adc
dec
lods
mov
add
inc
lods
inc
cmp
jo
lds
push
xchg
rorl
xchg
mov
outsl
in
dec
cmp
hlt
test
jae
jb
leave
ljmp
sbb
scas
stos
push
in
mov
pop
xchg
into
push
adc
cmp
sbb
push
enter
inc
ss
push
or
sbb
je
es
cwtl
rclb
or
mov
push
add
push
inc
outsl
outsl
jne
add
jp
mov
sbb
pop
std
or
add
mov
or
fistpl
fimull
lea
push
sbb
xchg
mov
fcmovb
aad
mov
jnp
mov
adc
shl
mov
cmpsb
push
and
mov
aam
das
jb
in
adc
adc
lcall
cmp
push
movsb
dec
or
add
push
ret
adc
mul
aam
push
sub
cmpsb
xor
enter
sub
aam
mov
sahf
add
jnp
pop
rclb
push
pop
shrb
push
test
outsb
pop
jnp
loope
xor
pop
and
jnp
mov
scas
sbb
mov
inc
es
push
lea
pusha
jo
or
sbb
call
mov
cmp
sarb
xor
lea
cltd
sbb
movsb
psubusw
in
add
out
xor
dec
in
outsb
leave
add
cwtl
mov
inc
sbb
pushl
movb
cmp
cmpsb
ljmp
ja
xchg
cmp
rclb
push
rorb
mov
dec
out
jo
std
addr16
push
daa
sbb
cmp
ljmp
inc
cmp
adc
dec
xchg
ud2
fnstsw
push
mov
adc
xor
pop
sbb
test
lcall
outsl
xor
leave
cmpsb
sbbl
and
loopne
sub
or
orb
sbb
push
dec
push
or
dec
inc
adc
push
push
loop
cmc
inc
aam
pop
lods
mov
lock
adc
mov
sbb
dec
inc
push
jnp
sbb
mov
out
mov
xor
mov
mov
push
push
push
push
notb
cmc
add
push
xchg
fldcw
adc
mov
incl
jo
mov
into
push
popa
add
gs
stos
mov
jne
mov
push
dec
cmp
xor
and
or
mov
movsb
ja
imul
pop
xor
mov
sub
lock
pop
addps
pop
into
and
rorl
sbb
dec
push
scas
jae
out
sub
test
jbe
mov
push
sbb
pop
in
fstl
mov
mov
xchg
or
xchg
pushf
push
xchg
dec
sbb
enter
movzbl
mov
or
xchg
push
orb
into
hlt
adc
pop
jne
data16
popf
adc
mov
dec
addb
test
loopne
insl
andb
xchg
in
and
sub
inc
mov
nop
sub
sub
mov
sub
jae
add
push
cltd
or
inc
sub
addb
xchg
cmovl
pop
cmp
andl
push
add
mov
lret
mov
insb
rclb
add
ds
mov
push
mov
scas
popf
out
subb
sarl
xor
enter
data16
pushf
popf
lcall
add
and
enter
into
xor
inc
rorl
sub
inc
xor
xor
std
ja
jo
jl
mov
adc
sbb
xor
adcl
hlt
inc
mov
sbb
hlt
adc
or
mov
sbb
mov
pop
dec
mov
inc
ret
cmp
mov
sbb
sarb
cltd
lret
xchg
in
push
pop
or
fisubrl
sub
push
enter
push
pusha
ljmp
lret
pop
push
push
movsl
xor
insb
push
lret
mov
xor
cltd
cwtl
arpl
sbb
sub
or
call
xor
jo
pop
xchg
jb
xor
gs
mov
scas
mov
nop
mov
rcrl
or
xor
sbb
pop
push
stc
aas
or
insb
lea
dec
loope
jnp
xchg
add
lret
pushf
mov
mov
nop
enter
xor
fdivs
mov
cmp
inc
scas
xor
add
sub
cltd
cltd
out
inc
xor
sub
pop
jb
sub
sbb
inc
popa
jb
and
mov
arpl
lret
cs
mov
jmp
add
jae
sub
mov
and
inc
jmp
or
cmp
std
lea
loopne
sub
inc
test
test
rcrb
pusha
mov
jl
xor
add
pop
or
sub
push
cltd
cmp
pop
arpl
es
cwtl
cmp
mov
aad
xor
movsb
cmp
xor
xor
sarb
andb
das
dec
test
mov
xchg
and
jg
lock
cld
add
mov
lods
push
xchg
lock
fadd
push
sbb
add
sub
adc
sub
inc
jb
filds
push
bound
rcl
jg
movsl
xchg
xor
xchg
subl
dec
mov
cmp
js
jno
enter
cmp
or
fmul
push
and
mov
xchg
xor
add
add
sahf
sub
lods
push
xchg
call
adc
inc
add
cmp
push
adc
adc
mov
into
test
inc
mov
sub
adc
jl
lods
js
xchg
into
sbb
xorb
bound
xchg
xchg
test
sbb
aas
inc
loopne
dec
inc
loope
popf
mov
cs
hlt
pop
mov
sub
sbb
and
inc
xchg
out
mov
fdivrs
dec
in
adc
cmp
jle
cwtl
jo
int
movsb
arpl
loopne
xor
sbb
and
or
jl
std
in
inc
popf
lret
icebp
lds
cli
out
mov
sbb
push
sbb
sub
mov
ss
push
sub
add
lahf
or
push
aam
sub
push
imul
push
arpl
add
mov
xor
adc
sbb
movsl
dec
popa
push
cltd
mulb
movsb
xchg
inc
xor
dec
mov
xchg
jmp
add
subb
push
cs
xor
dec
cmp
jo
inc
icebp
push
pop
mov
mulb
imul
push
inc
and
xchg
ja
loop
daa
pop
push
out
mov
decl
adc
cs
dec
out
add
sbb
mov
mov
push
int
icebp
in
adc
fs
fisubrs
mov
mov
jmp
mov
xor
and
and
inc
test
movsb
mov
jae
or
mov
scas
or
scas
and
pop
pop
and
dec
push
cmpb
std
mov
add
mulb
xchg
or
sbb
pop
inc
dec
xchg
sub
sbb
push
dec
imul
gs
sahf
pop
pushf
or
lahf
dec
rcrl
lret
mov
push
add
adc
pop
inc
icebp
out
push
scas
pop
pusha
jmp
in
sub
jne
jb
clc
inc
jl
add
dec
cmpsb
inc
scas
adc
shlb
pop
jge
or
push
int3
add
xchg
roll
pop
stos
fistpl
movsb
or
add
jno
push
lcall
loopne
inc
imul
push
mov
arpl
adc
cmp
push
je
cltd
cmp
pop
cmp
std
push
mov
pop
mov
cmp
daa
inc
outsl
jbe
add
ret
xchg
fwait
mov
roll
stc
out
push
push
xor
lret
push
sub
lcall
fnstenv
push
cmpsb
scas
sarb
pop
push
jo
or
mov
loope
push
pop
pop
xor
pop
xchg
adc
shll
or
inc
lea
add
shrb
dec
mov
adc
jno
push
les
push
sbb
mov
stc
repz
pop
sbb
xor
mov
push
mov
and
int3
sub
pusha
mov
mov
stos
pop
das
pop
lea
lea
shlb
mov
mov
cmpps
xor
mov
out
push
jo
icebp
mov
jb
mov
lods
les
int
fsubrs
or
mov
lods
xor
mov
dec
scas
daa
dec
shl
les
inc
sub
ret
xchg
or
cmp
sbb
sub
and
rcl
sbb
adc
aad
adc
rclb
shr
loop
push
mov
movsb
testl
pop
push
jecxz
lahf
adc
repnz
ret
xchg
in
pop
prefetcht2
mov
or
cltd
sbb
xchg
cmp
int
mov
adc
cmp
dec
dec
cmp
imul
xchg
xorl
pop
push
mov
inc
outsl
mov
sbb
or
mov
insb
rcrb
add
jnp
xlat
mov
xchg
mov
test
push
call
sbb
cmp
mov
pop
push
xchg
negb
sub
aam
ss
aad
loopne
jne
pop
jo
pop
ret
outsl
lods
out
ja
or
cmp
js
clc
leave
fisubrs
movsb
dec
ret
mov
add
dec
aad
es
lods
push
adc
inc
scas
in
adc
sbbb
daa
jnp
rolb
mov
xchg
mov
cmp
xchg
fs
jo
shlb
int
mov
and
adcb
xchg
mov
or
xor
push
dec
scas
dec
adc
cld
adc
test
push
xorb
popf
sub
xor
sub
lret
add
fnstsw
ret
inc
lock
inc
pop
jg
xor
add
cmp
push
sbb
xor
pop
loope
adc
and
sbb
mov
mov
das
addb
je
test
and
mov
jae
mov
xchg
dec
add
pop
push
lods
push
jo
jo
add
xchg
addl
test
insb
or
aad
adc
push
xchg
mov
inc
cs
rolb
in
pushf
in
push
pop
fiadds
outsl
mov
rcl
fldenv
mov
jnp
and
sub
cmpsb
xchg
ret
push
setge
or
xor
dec
dec
negb
addl
sub
je
pop
out
das
push
add
mov
mov
lods
je
sbb
sbb
push
cwtl
mov
dec
int
mov
pop
daa
jo
sub
bound
pop
xchg
mov
push
andl
int
in
scas
stc
scas
or
sub
lret
lcall
and
jo
and
lods
inc
ret
rcll
pop
scas
adcb
inc
jae
jo
mov
inc
int
adc
xchg
stos
fwait
sub
or
inc
pop
imul
mov
push
jo
or
ja
pop
ss
sti
lea
roll
sub
jmp
sbb
shll
lock
in
loop
jl
mov
cltd
or
jae
xchg
xchg
or
in
in
rolb
loope
out
push
ret
jae
into
les
jno
popf
xor
aam
push
xchg
sbb
dec
mov
xchg
pop
adc
inc
cs
lea
xor
adc
sbbl
adc
and
inc
iret
push
lret
mov
xchg
add
or
pop
inc
shll
es
cmp
pop
mov
sbb
sbb
ret
mov
mov
stos
xor
mov
xchg
cmp
cmpsb
add
cmp
xor
lret
cmpsl
test
jo
out
sub
pop
lcall
mov
xchg
lret
mov
fs
pusha
jmp
xor
jp
sbb
shll
pushf
mov
adc
jge
jl
dec
int
ljmp
loope
data16
adc
jne
test
xor
cld
fistpl
jb
jns
inc
add
aad
add
xchg
out
shll
cmp
cmpsl
sbb
in
push
and
out
sbb
mov
push
stos
pop
bswap
loope
imul
xor
pop
adc
push
call
mov
out
negl
enter
sbb
inc
pop
mov
daa
mov
and
inc
xor
cmp
cmp
loop
imul
add
inc
in
jno
inc
push
inc
movsl
push
enter
lcall
int3
call
loope
add
es
mov
push
sahf
adc
outsb
es
cmp
mov
cmp
pop
adc
sbb
cmpsb
fiaddl
call
fstps
fcmovb
or
inc
loopne
and
add
cmp
std
scas
add
inc
xchg
test
cmpl
mov
jle
xchg
fistpll
sub
dec
mov
mov
int
in
push
xor
sarl
mov
je
adc
fcompl
push
and
roll
aad
push
add
xchg
jae
adc
jl
out
inc
mov
pushf
jae
divl
xor
sahf
pop
mov
add
mov
outsl
push
push
adc
mov
inc
into
subb
add
dec
inc
pop
loopne
jb
sti
sub
jno
js
sbb
mov
pop
sbb
and
std
sar
dec
sbb
subb
sub
pop
in
andb
sbb
ror
syscall
rolb
mov
push
mov
mov
and
loope
jge
push
mov
std
lret
cwtl
mov
ret
loopne
or
adc
dec
andnps
or
hlt
std
mov
cmpsb
mov
or
mov
loopne
or
inc
mov
leave
sbb
mov
std
lods
incl
fs
dec
cmc
sbb
mov
mov
and
or
sbb
repnz
pop
or
push
lock
nop
fcompl
je
inc
sub
mov
mov
aad
mov
or
lea
loop
mov
cmp
pusha
test
call
je
lret
icebp
xor
push
add
dec
lret
jnp
push
xor
or
push
cmc
push
or
sbb
xor
cmpsb
or
mov
lcall
add
or
mov
add
lret
sbb
cmpsl
or
adcb
jecxz
or
sbb
cli
jnp
inc
sub
inc
cmpsb
add
sbb
push
xor
test
es
mov
push
fwait
das
ljmp
fs
or
push
pop
enter
sbb
push
jmp
or
mov
jbe
int
cmp
fnstcw
push
mov
xor
sbb
pop
shlb
mov
mov
add
pop
or
jl
lods
es
xchg
pop
aad
dec
dec
out
in
enter
push
push
add
leave
push
pop
cmpsl
call
mov
sbb
adcb
xor
call
xchg
lods
lcall
icebp
insb
dec
cmpsl
lcall
pop
cmp
add
into
sbb
inc
inc
mov
pusha
pop
mov
clc
leave
cmp
push
jp
rorb
xor
mov
and
inc
scas
add
dec
xor
push
xchg
cmp
pop
inc
and
sbb
pop
adc
addb
pop
mov
add
dec
nop
push
aas
add
sbb
sub
jg
lcall
sub
mov
cli
adc
sbb
adc
mov
jo
lock
cmp
push
or
pop
lret
or
shll
pop
push
rcll
out
mov
cmpsl
mov
aam
jo
sbb
dec
rcrl
inc
cmp
pushf
mov
cmp
sbbb
ret
popf
mov
mov
push
xor
xlat
jg
gs
test
mov
lahf
pop
jb
cwtl
sub
adc
xor
mov
and
enter
cmp
das
xchg
mov
mov
push
add
bound
cmpsb
push
push
shl
cs
sub
addb
and
lret
in
jno
hlt
dec
aas
aad
fsubs
push
mov
mov
out
pop
movsb
jno
imul
jl
inc
fadds
jnp
out
push
bound
movsb
sbb
ret
xchg
sub
lds
inc
andl
inc
out
jnp
cmpsl
pop
ret
push
or
sbb
dec
sbb
jae
js
mov
pop
inc
jae
dec
testb
pop
scas
lds
lods
cmpsl
mov
ret
jl
out
xlat
and
shrb
inc
iret
sbb
pop
cmc
je
xor
aas
inc
xchg
push
inc
xor
xor
sbb
insb
sbbl
cmp
pop
aam
adc
xchg
roll
xor
repz
leave
nop
cwtl
mov
mov
rorb
call
cmp
inc
ret
pop
mov
cmpsb
popa
les
or
add
sub
sbb
test
lahf
mov
cwtl
fisttpll
or
or
sbb
mov
leave
subl
test
push
push
push
add
cmp
jne
push
cltd
loop
test
push
mov
fld
test
xor
mov
push
jno
add
adc
pop
lock
sbb
and
push
and
in
mov
push
stc
or
rclb
push
sbb
ret
shlb
test
pushf
sub
adc
adc
sbb
ret
mov
les
cwtl
pop
aam
dec
call
pusha
inc
pop
dec
inc
inc
sub
mov
sub
cltd
jge
push
xor
fwait
movsb
push
imul
sbb
dec
iret
push
dec
sub
and
outsl
and
add
scas
subb
xor
dec
adc
mov
mov
adc
scas
cmp
mov
and
cmp
push
clc
pushf
cmpsb
rclb
pop
aam
cwtl
cmp
adc
or
adc
cmp
ljmp
sbb
addl
sbb
mov
rolb
cmp
sbb
jmp
sbb
sahf
les
jo
pop
mov
das
jnp
mov
outsb
mov
pushf
and
shlb
pop
stos
loope
cmp
mov
lret
jg
mov
or
fsubl
jo
and
mov
inc
loop
mov
roll
notb
test
add
inc
dec
jo
ret
xchg
mov
iret
push
xorl
and
push
push
decl
sbb
or
cmp
add
sbb
push
adc
cmpsl
cmpsb
push
mov
xchg
sub
ret
xchg
jmp
xchg
shll
mov
lret
pop
gs
shll
mov
add
cmp
ja
add
or
push
xor
jbe
mov
sbb
ss
cmpb
and
stos
pop
xchg
popa
daa
adc
or
cld
inc
pop
pop
adc
sbb
mov
rol
sbb
pop
rorl
in
inc
jae
insl
sbb
or
andl
hlt
lock
and
sub
xlat
push
inc
cmpsb
pop
imul
out
add
push
out
stos
jl
jo
lret
lds
loopne
or
add
cs
shlb
adcb
mov
xor
pop
scas
shlb
in
dec
pop
aam
add
push
sbbl
out
inc
or
test
test
test
xor
jp
aaa
add
mov
cmpsb
into
xor
rorl
in
subl
jne
push
in
jo
xor
jg
shll
mov
or
xor
nop
stos
pop
cmpsl
add
enter
mov
addl
into
rorl
sub
pop
and
dec
shl
pop
int
push
adc
stc
cwtl
and
jle
lcall
outsb
leave
mov
adc
add
inc
xor
adc
push
sbb
xchg
or
inc
mov
scas
mov
icebp
lods
sti
rolb
jae
mov
addl
sbb
inc
mov
sub
lret
call
cmpsl
adc
pop
aam
push
orb
jo
imull
sbb
iret
xorl
jo
dec
test
rcll
fmull
xchg
enter
push
and
pop
cmp
icebp
addb
fs
pusha
test
mov
test
popf
cmp
icebp
mov
nop
adc
push
addb
cmp
sub
mov
jo
and
xchg
mov
xor
xor
mov
jmp
cmpsl
rolb
xchg
xor
pop
add
insl
mov
das
and
push
testl
inc
mov
loope
and
xor
xchg
add
int
adc
jle
push
int
mov
or
cmp
sub
inc
and
sbb
adc
adc
and
xor
sbb
mov
lahf
dec
sbb
pop
lahf
popf
add
add
inc
add
sbb
bound
cmpl
cli
push
or
inc
popf
jmp
pushf
jo
push
popa
mov
sbbl
cmp
test
jb
call
ss
dec
mov
xor
pop
sub
sbb
sub
jmp
movl
inc
mov
loopne
loopne
clc
mov
xchg
lcall
bound
clc
push
mov
clc
lret
loope
xor
pop
add
jnp
ret
in
pop
fiadds
mov
aam
add
adc
and
test
popf
push
mov
sbb
adc
jo
in
roll
push
popa
jo
mov
mov
mov
jne
push
mov
jnp
add
mov
jb
dec
push
push
jp
mov
push
pop
xor
aad
int3
sti
or
push
mov
lret
push
lcall
hlt
lret
pop
and
sahf
mov
out
dec
in
mov
leave
sbb
push
mov
xor
mov
adc
scas
inc
cmpsb
or
mov
and
add
iret
xor
mov
cmp
jmp
mov
jno
push
lret
inc
push
pop
in
roll
rcl
sbb
test
es
mov
mov
scas
xchg
imul
pop
jb
cmpsb
and
adc
pop
cltd
pop
cmpsl
imul
or
pushf
sub
rorb
fimuls
loopne
pop
outsl
add
sbbb
push
sbb
add
in
lahf
pusha
mov
das
xchg
orl
push
inc
and
push
sub
fcmovnb
or
kmovb
sbb
xor
push
pop
loope
sbb
mov
pop
icebp
fildll
pop
mov
notb
push
mov
dec
shll
jbe
adc
inc
sbbb
pop
mov
sub
add
inc
stc
adc
js
mov
inc
movsb
lret
ljmp
inc
popf
jne
cmp
mov
and
xor
cmc
jl
pushf
mov
sub
push
add
push
or
xchg
mov
rcll
push
push
loopne
and
cmc
enter
cli
push
push
jo
movsb
mov
ds
mov
cltd
add
mov
scas
movsb
pop
xchg
or
out
jge
cmc
loop
inc
or
sbb
xchg
jo
sub
push
pop
xor
jnp
add
lcall
jno
loopne
cltd
sbb
or
arpl
pop
inc
je
mov
pop
fistpl
cmp
daa
fistl
out
mov
jo
cs
jb
xor
jl
in
in
in
popa
mov
add
jnp
mov
ret
test
xchg
js
inc
sahf
test
sbb
cs
xor
add
dec
test
mov
mov
xchg
dec
aaa
jns
or
or
ds
sbb
mov
inc
push
xor
xor
push
cltd
cmpsl
lds
push
add
xlat
mov
jg
push
jo
push
pop
push
inc
subb
es
mov
dec
and
gs
push
xlat
pusha
or
push
pop
outsl
push
or
xchg
mov
stos
mov
inc
adc
ljmp
pusha
rorb
or
sarb
fwait
iret
and
aam
into
sub
jo
or
mov
inc
arpl
jnp
push
mov
sbb
mov
into
dec
int3
std
add
push
dec
pushl
add
movsl
jmp
mov
mov
jg
stos
adc
add
jnp
test
jnp
push
mov
push
imul
imul
lret
in
loopne
fisttpl
je
add
xor
pop
cmp
inc
lret
mov
jle
or
add
and
adc
sub
dec
mov
or
inc
loopne
int3
add
lcall
add
mov
aas
imul
pusha
ret
push
push
mov
push
adc
pushf
dec
add
call
xor
xorl
and
jo
mov
push
in
aad
pop
push
dec
or
rorl
push
mov
sbb
rcrb
lret
and
test
sub
xor
xchg
xor
mov
test
pop
add
mov
outsl
and
jb
push
or
or
out
popl
jbe
out
cmp
pop
rorl
mov
lods
dec
lds
out
pop
push
push
call
insb
mov
fidivl
sbb
push
cltd
jb
push
fs
or
mov
jb
stos
xor
lcall
and
js
div
popf
and
test
mov
mov
mov
sbb
add
sahf
mov
add
xor
jge
icebp
aaa
pop
mov
cld
and
xor
mov
andl
cld
push
push
push
sub
jne
inc
inc
jl
cmc
sbb
mov
sti
popl
pop
push
sub
cs
mov
imulb
or
push
ds
aaa
pop
loopne
push
add
xchg
adc
int3
xchg
and
xchg
stc
add
jp
ret
pop
aaa
or
nop
xchg
sbb
pop
cmp
stc
sbb
mov
pop
push
mov
xchg
dec
cmp
jl
sbb
sbb
in
xchg
add
sub
adc
or
test
pop
push
xor
push
jo
subl
sbb
daa
rcrb
in
negb
fwait
rol
nop
stos
push
xchg
shl
pop
cs
or
outsl
adc
jae
jmp
adc
inc
mov
jne
es
popa
mov
cmp
or
jge
dec
sbb
pusha
sbb
xor
mov
xor
jp
push
push
xorb
dec
mov
ret
cltd
cwtl
test
pop
leave
aad
or
and
pushl
add
pop
fs
cmp
les
out
mov
push
and
test
and
mov
sub
sbb
and
pop
pop
mov
rclb
pop
les
loope
inc
roll
ja,pn
lock
pushf
lds
ret
adc
stos
inc
rorl
lods
shl
mov
sbb
sbb
stc
cli
data16
mov
sbb
mov
sbb
popa
push
adc
xchg
jg
lahf
or
push
cmp
jl
mov
das
dec
jp
and
scas
lahf
loope
inc
stos
sbb
pushf
out
ljmp
scas
mov
pop
rcl
pop
push
cmpsb
xchg
add
gs
pop
add
sub
inc
xchg
sbb
xor
fsubs
in
cmp
inc
negb
inc
pusha
cmp
push
mov
in
adc
mov
lret
jns
push
or
js
xor
xchg
and
nop
and
cli
jae
push
push
xor
in
add
push
jno
in
adc
les
addl
aas
nop
push
sub
mov
nop
and
cmp
lcall
movsb
inc
mov
fwait
rorl
scas
shrb
lcall
mov
cmp
inc
mov
adc
adcl
jle
lea
adc
test
push
subl
adc
xor
jo
cltd
sub
pop
mov
addl
rol
push
fcomps
xchg
jb
test
jg
pusha
lret
push
push
mov
xor
push
sbb
jge
dec
mov
jns
dec
int
test
rcl
xchg
sar
cmp
inc
lods
mov
movsb
enter
or
xchg
decb
or
gs
sbb
aad
and
xor
and
sbb
lds
xchg
xor
xor
movsb
std
jl
xchg
mov
lock
or
xchg
xor
push
mov
gs
pusha
pop
xor
and
push
in
mov
movb
sbb
adc
add
add
clc
push
add
lods
dec
xor
stos
clc
push
push
push
sahf
and
pop
js
adc
inc
mov
pop
ss
or
add
add
mov
sbb
shll
dec
add
push
add
xchg
mov
gs
ret
or
lret
nop
and
cwtl
inc
xchg
lret
popa
xor
aad
repz
pushf
add
sbb
and
addb
push
stos
mov
mov
and
sbb
xlat
mov
xchg
sbb
inc
movsb
and
scas
pop
inc
es
inc
sub
mov
jo
xor
movsl
sub
push
jae
or
adcb
js
je
enter
jns
outsl
push
fldl
adc
add
dec
push
scas
ret
insb
inc
mov
pusha
sahf
add
cmpsb
jb
cmp
inc
aad
sbb
inc
dec
cmp
pop
scas
shlb
rolb
loopne
jnp
mov
insb
shlb
loope
xor
mov
xchg
sub
sbb
cmp
int3
icebp
mov
aad
add
hlt
shrl
popa
mov
int
jno
adc
dec
addr16
pushf
and
int3
js
loop
rolb
popa
clc
add
mov
push
jns
or
out
ss
data16
shl
ja
pusha
sub
int
lods
aaa
popa
popa
xor
and
mov
lods
push
cld
cmp
pop
in
mov
or
ret
out
sub
mov
or
xor
xor
push
fxam
lret
cmp
pop
xchg
leave
pop
cs
jnp
cltd
andl
cmpsb
in
and
jae
pusha
xor
repnz
push
js
ffreep
push
inc
jg
rolb
incb
idivl
or
jecxz
pop
dec
sub
pop
adc
mov
inc
adc
punpckhbw
arpl
xor
push
xor
jecxz
mov
add
push
inc
add
in
inc
xchg
xchg
iret
maskmovq
imull
and
add
push
mov
sahf
push
fildll
popf
xchg
jl
ret
rcrb
aad
pop
cwtl
xchg
push
filds
test
je
jge
ja
mov
loopnew
mov
mov
add
mov
xor
mov
xchg
cmp
jno
enter
xlat
ret
out
and
aam
adc
mov
pusha
mov
aam
add
imul
pop
mov
push
cltd
mov
ret
ljmp
pop
jb
or
and
nop
sub
cmp
add
rcrb
dec
gs
out
pusha
pop
mov
pop
pusha
push
fldt
fldcw
addb
popa
popa
ljmp
scas
mov
pop
mov
adc
or
adc
sbb
sahf
or
testl
dec
fidivs
xor
in
adc
imul
inc
adc
hlt
dec
into
shl
mov
fwait
pusha
pop
inc
test
aad
pushl
orl
mov
test
mov
add
jae
adc
mov
mov
xor
icebp
cli
test
mov
icebp
aam
lea
pop
hlt
adc
bound
pop
in
imul
and
mov
scas
add
and
mov
loop
xor
dec
mov
xor
pop
loope
cmp
add
pop
xchg
pop
sub
repnz
popf
xor
sub
mov
jecxz
in
cs
test
lcall
adc
fcoml
jp
cmp
and
fdivrl
jo
xor
fsubrl
xchg
imul
popa
adc
loope
dec
xchg
fwait
or
push
or
push
fisubrl
movsl
cmp
loope
mov
loopne
rorb
pushf
sti
test
ror
dec
jp
xor
sbb
es
test
loopne
lods
outsl
and
cli
xlat
daa
sahf
add
into
out
mov
sub
shll
lea
push
ljmp
lds
cltd
fisubrl
ret
xchg
cli
cwtl
xor
js
cs
jo
add
sti
jae
or
pop
lds
js
cmp
cld
dec
sbb
or
jno
mov
xor
es
pop
pop
stc
mov
xchg
cmp
leave
dec
mov
cmp
push
cmp
inc
stos
shl
push
test
add
cmp
xchg
adc
xor
enter
xchg
push
add
cmp
adc
jl
cmp
loopne
dec
imul
sbb
mov
clc
mov
sbb
bound
push
jae
insl
sbb
inc
mov
cmp
xor
jl
std
and
or
sbb
int
xchg
sbb
loop
in
rorb
imul
scas
add
push
push
dec
mov
call
adc
xchg
clc
dec
dec
aam
pop
js
js
pop
sub
pop
push
add
andb
or
stc
popa
imul
sub
imul
xlat
repz
cs
nop
cld
test
hlt
test
inc
je
jbe
cmp
bnd
xchg
cli
jo
jb
stos
nop
call
mov
inc
dec
add
add
pop
and
push
xor
scas
add
xchg
xor
pop
cltd
and
cmp
aad
jo
or
test
aas
outsl
imul
jb
lahf
mov
xor
je
mov
stos
push
mov
push
or
lret
push
loop
adcb
pop
push
push
mov
fisttpll
test
shll
sbb
in
dec
fcoms
xor
sahf
cwtl
pop
xor
mov
nop
fbstp
mov
test
or
xchg
lods
stos
add
add
jo
test
in
sbb
adc
xor
cmp
pusha
sbb
cltd
push
in
adcb
xchg
pop
mov
pop
gs
cs
sahf
mov
cld
call
es
cmp
je
mov
add
andb
loopne
imul
sti
jne
jae
cmp
inc
dec
cmpsb
mov
andb
sahf
hlt
jae
pushf
or
fwait
dec
and
imul
adc
jae
jb
fstpt
push
mov
cmp
ds
jge
rorb
stos
dec
loop,pn
clc
sub
push
mov
cmp
insl
push
ret
pop
nop
bound
add
stos
aaa
cmp
push
xor
shrl
xchg
xor
enter
aaa
jmp
stos
leave
and
pushf
orl
inc
mov
mov
mov
insb
jmp
hlt
jecxz
lds
cmp
dec
inc
es
cld
in
mov
push
pop
push
sarb
call
xor
pop
xchg
and
add
repnz
imul
ficoms
stos
out
stc
test
lahf
cltd
mov
adc
push
stos
xor
sub
xor
mov
lds
dec
inc
mov
repnz
js
dec
adc
lahf
ss
pusha
cmp
cwtl
test
pop
loopne
or
jo
adc
sub
enter
add
in
dec
cmpsb
scas
xor
pop
je
inc
cmp
cltd
insb
push
test
push
xchg
and
pop
cmp
add
push
and
sub
add
cmpsb
or
sbb
ret
cmp
xor
dec
xor
or
cs
adc
push
gs
mov
insb
mov
xor
es
jae
inc
mov
mov
dec
inc
mov
lods
ret
jb
lcall
test
sub
xor
sbb
adc
int
jb
push
push
shrl
jbe
push
xor
inc
je
sbb
push
cwtl
lcall
cmp
mov
add
out
cmp
push
js
xchg
or
mov
push
cmp
sbb
sbb
lcall
test
sbb
icebp
add
nop
inc
add
inc
scas
enter
outsl
cmp
rorb
inc
cmpsl
mov
leave
scas
jo
pop
adc
lods
lock
addb
pop
shll
mov
mov
inc
jl
clc
in
fcmove
xor
lock
push
cmp
in
pushl
out
mov
mov
call
adc
clc
in
mulb
mov
sub
sbb
jb
data16
sbb
mov
es
and
pop
inc
or
push
mov
push
popf
imul
adc
add
xchg
out
popa
bound
mov
jae
sub
cmp
xor
jg
ljmp
sahf
jo
stc
cs
scas
std
pop
adc
jae
daa
clc
sub
imul
into
and
jge
push
dec
xchg
popa
test
jne
mov
addr16
mov
enter
loope
enter
xor
inc
adcl
aam
addr16
and
jg
pop
lds
mov
out
mov
pushf
ret
cmp
cmp
xor
addr16
sbb
iret
std
fisttpl
jb
sahf
les
imul
outsl
into
std
into
inc
leave
mov
sarb
mov
fstp
in
iret
and
push
xor
sbb
cmp
dec
aas
daa
scas
fcompl
and
jecxz
xchg
dec
xchg
sub
mov
jno
repnz
pop
inc
ret
lret
push
lods
push
xchg
out
outsl
jo
jle
cmp
mov
fidivs
rcrb
int
cmpsl
push
hlt
sti
pop
dec
ljmp
out
jge
push
adc
pop
adcb
out
pop
call
cli
call
aaa
sbb
xor
out
cmp
or
hlt
fisubrs
inc
add
xor
fidivrs
test
push
insb
je
mov
outsb
mov
fsubrp
mov
mov
xchg
xor
cltd
sbb
aas
mov
or
ret
xchg
mov
imul
aaa
jg
mov
jo
mov
add
push
aad
cmpsl
pop
inc
ss
push
mov
leave
xchg
cmp
push
arpl
ret
std
inc
mov
mov
std
jg
sti
shlb
pop
sbb
incl
lea
stc
sub
mov
xor
push
stc
jns
out
call
xor
jae
sbb
stc
pop
ds
dec
mov
cmp
jbe
into
sbb
mov
scas
lods
dec
mov
mov
fistpll
cld
xchg
mov
popf
pop
stc
and
ja
or
ja
inc
dec
repz
or
or
mov
sbb
sti
jle
jb
call
mov
jg
fistl
rcl
mov
inc
loop
adc
fsubrl
inc
jmp
push
test
sti
out
stc
aaa
lea
movsb
fscale
sbb
shrl
inc
aas
sbb
cwtl
mov
test
dec
inc
sbb
aas
std
jns
dec
dec
cmp
mov
lea
out
mov
mov
gs
je
dec
test
pop
sbb
pushf
push
cs
lods
xlat
cmp
xchg
pushf
jne
bound
dec
testl
inc
jmp
add
cmp
cltd
ljmp
mov
idivl
ret
mov
and
mov
shr
lret
inc
inc
mov
sbb
adc
inc
jnp
clc
and
out
rcrl
add
jno
in
mov
lea
aaa
or
loope
jmp
std
fistpl
je
jno
pop
sti
add
adc
jns
cmp
xchg
dec
out
mov
out
js
cmpsb
test
loope
popf
sti
jo
jb
cmp
push
jle
sbb
dec
push
div
incl
mov
inc
xchg
movsl
cmp
and
push
jg
jl
inc
mov
push
mov
mov
lock
shrl
xchg
aas
negl
jp
in
xor
lret
pop
adc
add
fs
jg
filds
or
aam
movsl
jmp
xor
xor
pushl
das
imul
hlt
notl
cmpsb
stos
mov
idiv
jnp
mov
pop
push
jne
mov
cmp
mov
cltd
xor
sbb
lret
test
lock
sti
adc
cmp
lock
lret
jl
cltd
add
out
lock
inc
js
xor
cmp
aad
sti
mov
jae
lock
std
addr16
pop
mov
or
ljmp
mov
sbb
insl
mov
cmp
lcall
loope
out
or
cld
jnp
in
aam
xchg
mov
mov
ss
xor
fldt
sbb
xlat
ret
iret
std
pop
je
outsb
hlt
inc
dec
or
jb
stos
xchg
sar
pop
mov
xchg
pop
mov
mov
testl
call
cmp
sub
ret
call
jg
cmp
loope
xor
dec
sbb
aaa
insb
std
xor
jnp
pop
xchg
adc
pusha
stc
mov
mov
fimull
sub
rclb
xor
jmp
xor
call
mov
jg
push
jmp
imul
loopne
setnp
or
xchg
mov
pop
cs
jmp
add
push
hlt
orb
inc
push
jg
loopne
jbe
jmp
mov
and
lahf
stc
mov
xchg
scas
loopne
in
lcall
mov
jae
add
test
mov
std
xlat
and
cmpb
xor
or
pop
fistps
push
cmpsl
fldt
outsb
lret
std
std
inc
jmp
add
xor
mov
jg
int3
inc
inc
jae
fs
jo
pop
loopne
fimuls
aam
xchg
hlt
outsl
ljmp
sahf
lods
stos
out
jne
fistps
sti
ror
arpl
dec
fwait
mov
cmpsl
lret
jns
push
call
add
mov
sub
mov
imulb
jecxz
int
dec
inc
out
sti
mov
pop
clc
mov
ja
push
fcmovnb
mulb
fdivrl
std
mov
repz
fistpl
xchg
shrb
fmull
add
dec
lods
pop
cmp
addr16
mov
inc
dec
sbb
mov
inc
xchg
jbe
call
out
inc
jmp
mull
std
add
enter
sub
sti
lcall
into
es
rol
push
lcall
nop
xchg
pusha
mov
adc
repz
push
int3
out
adc
xbegin
pushf
rcr
lahf
call
in
jle
out
lock
and
xorb
push
ror
lret
neg
jo
scas
inc
jmp
or
sti
dec
jmp
push
mov
adcl
mov
fsubrp
std
sbb
pop
ja
add
cmp
mov
call
fstl
sub
clc
and
les
adc
fcompl
mov
sub
fstpt
adc
cmp
jmp
xor
xor
cmp
push
and
pop
sub
and
xor
xchg
jmp
inc
stos
adc
sbb
adc
leave
sahf
cmova
scas
or
aas
int
xchg
xor
neg
sti
jg
insl
xor
out
aad
xchg
loop
ret
loope
out
mov
mov
xlat
dec
fimuls
pop
in
aas
xchg
mov
dec
pushf
scas
call
outsl
loopne
xchg
popa
dec
mov
cmp
fidivrs
jle
decl
sub
xchg
lock
fidivs
mov
or
pop
lcall
in
lock
aam
cmp
cmpsb
or
pop
loope
mov
in
xor
mov
das
dec
pop
mov
sbb
std
pop
js
pop
lods
outsl
mov
loop
rcl
sub
jle
out
cmp
xchg
mov
sarl
jmp
dec
ds
cli
dec
fsubrs
lret
pushl
xchg
rcrb
cli
jl
and
cmp
neg
loope
cmp
ljmp
adc
sbb
sub
inc
inc
dec
in
clc
adc
fcoml
xor
cs
pushf
repnz
lods
lds
clc
dec
cmp
stos
and
idiv
paddusb
pop
mov
rcll
pop
cld
and
or
fisubs
sub
xchg
pushf
xchg
mov
sbb
fcmovu
dec
jge
and
or
loope
sbb
divl
movsb
incb
fwait
sbb
add
jge
out
and
ja
cli
or
test
jne
jnp
or
adc
in
pop
aam
loope
ja
mov
es
inc
mov
idivb
or
or
or
sbb
ffreep
les
mov
inc
adc
out
mov
out
arpl
mov
push
and
nop
cmp
mov
fldl
in
mov
dec
or
push
cli
pop
fimuls
andl
cmp
xchg
jno
push
mov
das
add
scas
dec
adc
push
data16
mov
pop
xlat
jae
xchg
sti
adc
lahf
jb
jl
stc
rorl
dec
cld
xbegin
jg
add
sub
jecxz
or
test
outsb
cmp
add
imull
xchg
adc
cwtl
and
sahf
cmp
or
ja
hlt
lea
aam
out
fdivrl
loopne
sub
mov
jge
sarb
cli
ja
jecxz
push
jl
addr16
dec
jg
pop
mov
outsl
xor
mov
repnz
fdivl
movsl
fsubrl
pop
mov
ja
jmp
cmp
dec
pop
out
sbb
inc
ror
out
icebp
pop
test
fsubl
test
jmp
jnp
pop
fimull
push
mov
cmp
jae
lea
xchg
pop
or
imul
mov
sub
shl
aas
pop
and
mov
dec
mov
aas
fisubs
cmpb
out
mov
icebp
out
negl
mov
jp
inc
cli
aad
rclb
sarl
std
insl
or
jg
sar
push
mov
jg
aam
mov
mov
loope
push
or
inc
mov
scas
mov
aam
mov
fwait
cli
xor
pop
push
sti
fldenv
mov
adc
stos
pminsw
push
add
inc
or
stos
cli
and
fildll
push
out
in
adc
ja
aas
mov
mov
les
dec
add
inc
ja
addl
hlt
pop
jmp
mov
and
or
insl
inc
cmpl
inc
cmpsl
das
test
test
inc
pop
xor
jno
test
mov
dec
inc
push
sbb
aad
leave
sub
add
jg
fistpl
and
sbb
loopne
pop
pushl
and
mov
dec
sbb
add
ret
push
pop
das
xchg
sub
mov
aad
jnp
mov
add
sub
dec
xchg
cs
in
mov
mov
or
loop
jo
jp
and
mov
dec
jnp
imul
xor
imul
push
insb
iret
mov
daa
jmp
hlt
stos
and
lock
pop
lcall
jmp
cs
pop
push
icebp
sbb
test
call
call
sarb
cmpsl
pushf
fcomps
outsl
fucomi
adc
push
adc
or
mov
lods
outsl
or
out
jne
lret
adc
xchg
mov
cmp
push
adc
jnp
mov
adc
inc
xchg
fdivr
adc
filds
or
notb
enter
mov
sbb
mov
xchg
inc
scas
lock
mov
mov
jg
fiadds
jmp
mov
pushf
popf
lea
push
or
clc
push
cli
pop
add
mov
and
inc
jg
mov
jno
ret
inc
mov
or
pop
cmc
cmp
mov
jp
push
mov
dec
jl
mov
mov
mov
shrb
fwait
pop
xor
out
rcr
mov
or
sub
sarb
bound
push
jecxz
push
std
fdivrs
pop
shrb
sahf
xor
inc
test
sar
sub
aam
adc
outsb
dec
jno
in
decl
and
out
movsl
cmp
pop
mov
push
fidivs
outsb
pusha
dec
xlat
sbb
test
outsl
fbstp
repnz
lods
sbb
inc
xchg
aas
pop
jge
lods
or
or
adc
test
aas
and
in
pop
lret
xor
mov
pop
std
dec
dec
xchg
xor
test
sub
push
loopne
incb
sti
stos
jecxz
sub
pusha
sbb
stos
mov
mov
cs
jg
bound
icebp
pop
dec
sahf
stc
push
xchg
or
dec
call
jb
adc
pop
lret
pushl
aaa
or
mov
test
fs
mov
dec
cld
outsl
int
jo
xor
nop
mov
test
ret
sub
dec
add
cli
es
insl
lods
pop
pusha
sbb
jecxz
pop
out
sbb
jmp
imull
in
jecxz
or
insb
xchg
out
ja
lods
pop
mov
lret
jecxz
jg
stos
dec
or
jecxz
pop
loop
fisubrl
sub
dec
lahf
aas
out
pop
pop
mov
mov
push
cmc
xchg
dec
cmpsb
pop
fwait
and
xlat
dec
scas
inc
nop
xor
jmp
shl
or
adc
sub
add
sbb
or
xorl
in
and
rolb
mov
lcall
lret
mov
scas
mov
cld
std
test
aas
cmp
in
daa
inc
and
and
add
jecxz
shr
scas
mull
lock
mov
add
lcall
sarb
out
fs
add
sub
jae
push
jne
hlt
jg
out
iret
mov
scas
or
es
divl
pop
sub
fsts
dec
in
push
pop
add
pop
in
sbb
sub
jle
insl
xchg
addr16
mov
inc
cmp
and
push
mov
pushl
adc
aad
les
mov
clc
bound
andl
or
js
mov
out
add
sub
sbb
adc
enter
push
cmp
add
outsb
push
cmpsb
adc
mov
loope
mov
mov
stc
in
push
std
cmpsl
call
loop
jp
gs
shll
test
sbb
icebp
mov
mov
incl
bound
mov
cwtl
clc
xchg
inc
jmp
in
dec
sub
and
sarb
push
insb
fsub
sbbl
pushf
xor
pop
adc
mov
push
xchg
ret
mov
inc
in
jmp
scas
scas
std
out
call
popa
and
pop
jno
out
fdivrp
into
sbb
and
xchg
sbb
shrb
dec
pop
sub
adc
lods
fistpll
out
insb
pop
sbb
and
cld
mov
cmc
mov
and
or
mov
out
nop
inc
pop
mov
pop
cmpsb
fidivl
fsub
sub
imul
rolb
sbb
mov
mov
mov
incl
pop
shlb
hlt
ja
cli
mov
adc
mov
push
aas
repnz
js
cmp
add
push
and
lahf
cld
and
push
incl
fisubs
mov
jb
xor
pushf
insl
add
mov
leave
jmp
hlt
jmp
mov
fld
sub
in
push
test
dec
dec
xor
cmp
fstps
pop
add
cmpsl
cmpsb
mov
inc
test
rcl
adc
out
push
outsl
xchg
sbb
dec
pop
cwtl
mov
jb
mov
filds
fst
test
push
pop
dec
fcmovnb
int
aas
mov
frstor
stc
sub
divb
xor
lea
outsl
cltd
push
mov
mov
pop
and
pop
rorl
inc
in
mov
in
inc
lahf
sbb
jne
clts
cli
addr16
xchg
fst
or
cmc
mov
call
jns
dec
push
jge
cli
dec
cmp
push
or
aam
dec
jbe
inc
mov
mov
mov
and
enter
jmp
in
outsb
fwait
ja
cld
imul
lcall
popf
mov
push
mov
out
lods
push
xchg
call
or
lret
mov
mov
clc
adc
sahf
xlat
movsb
out
xchg
jb
fimuls
inc
clc
jg
dec
inc
dec
scas
cwtl
cmp
adcb
les
stos
mov
mov
jge
and
loope
lcall
cld
iret
push
ret
mov
insl
cltd
mov
fs
ror
push
adc
xchg
ljmp
in
loop
sbb
adc
dec
xlat
gs
iret
and
movsl
jecxz
xchg
push
and
cli
loop
idivb
add
idiv
sbb
adc
aad
stos
les
push
rorb
or
add
and
jp
jbe
add
and
aas
inc
into
stos
cli
int
pop
mov
pop
out
push
clc
xchg
add
enter
in
das
pop
fld
ljmp
adc
mov
sti
or
pop
add
pop
sub
or
in
std
ja
stc
mov
sbb
or
pop
pop
mov
jne
loope
aaa
int
fucompp
and
outsl
adc
pushl
xor
pop
sub
lcall
jl
insl
int
je
sub
daa
cmp
ljmp
cli
adcb
xor
mov
fiaddl
jmp
hlt
aas
mov
jle
rorb
rolb
mov
xor
sti
pushl
int
inc
daa
jge
xchg
mov
scas
ret
hlt
lock
xchg
mov
inc
lods
rsqrtps
es
mov
flds
lret
mov
push
cmp
addr16
enter
test
out
add
lds
out
pop
call
mov
add
jmp
inc
sbb
shrb
into
in
or
decl
inc
in
add
jns
rcll
test
icebp
mov
xor
adc
jl
mov
jno
out
aaa
shr
push
or
xor
add
sbb
lret
pop
lcall
pop
popa
mov
or
and
pusha
jg
cli
shr
aas
data16
insb
cli
test
rcrl
out
jo
in
std
das
xor
iret
pop
jl
sahf
push
xchg
pop
subl
dec
lcall
dec
std
ja
shll
icebp
inc
ja
iret
ret
inc
sbb
cs
sahf
pop
dec
mov
test
jmp
or
xchg
inc
fwait
call
add
rorl
lods
mov
stos
jns
mov
aas
loope
pop
xchg
lods
push
mov
xor
mov
jns
or
icebp
test
movsl
lea
adc
xchg
in
imul
std
ljmp
inc
cmc
cmpsl
repz
repnz
aas
enter
mov
std
inc
scas
inc
add
sub
mov
decl
sti
push
or
or
push
aas
fdivl
xchg
das
jp
imul
in
clc
jg
loop
pusha
cmc
and
in
stos
adc
decb
call
test
std
fstl
cli
pushf
lods
loop
out
inc
mov
orl
test
jp
sub
lock
ret
xchg
xchg
sbb
mov
or
rorb
mov
add
outsl
mov
cmp
add
aas
jp
pop
int3
xor
stos
add
xchg
mov
jmp
cmp
lea
add
mov
push
movb
xchg
xchg
inc
idivl
mov
pusha
and
mov
mov
xchg
clc
flds
clc
daa
movsl
vprotb
aad
add
in
xchg
test
inc
or
bound
pop
and
incl
cltd
push
loopne
aas
lods
push
je
cmp
fwait
inc
imul
pop
jno
lret
dec
push
or
jle
cmp
inc
popa
push
or
lock
cmpb
fucomp
incl
and
enter
dec
sbb
sub
imul
out
nop
add
cld
xchg
sbb
imul
scas
and
std
dec
rolb
das
ss
jae
lods
jns
orl
aas
sbb
cmpsb
dec
icebp
arpl
repnz
mov
cmp
daa
fdivrp
arpl
mov
mov
icebp
mov
cmp
ja
mov
cmp
aad
inc
in
pop
sub
pop
jecxz
shlb
lcall
jp
and
xchg
stos
push
mov
iret
icebp
inc
test
outsb
push
mov
fldl
xchg
dec
mov
dec
sub
xchg
cld
sbb
or
mov
ja
pop
cld
mov
xchg
rclb
push
cmp
shlb
decl
out
jns
imulb
outsb
arpl
cs
inc
loope
std
xchg
lcall
sbb
addr16
cmp
jmp
mov
bnd
add
popf
sti
push
mov
sbb
add
xchg
stc
dec
fdivrl
mov
addl
sbb
faddl
out
push
lods
fistps
inc
lret
pop
or
cld
ljmp
jg
sahf
loope
cltd
fldlg2
insb
clc
xchg
int
cltd
mov
cld
pop
jge
inc
gs
xor
pop
xor
cs
mov
push
sub
mov
clc
incb
outsb
inc
lcall
mov
jmp
incl
inc
xor
cmpsb
sub
scas
lock
sahf
pusha
cmp
jnp
and
adc
mov
add
push
or
lahf
loopne
add
idiv
cmp
xchg
cmp
jb
cmp
mov
cmp
cmc
jbe
and
push
and
cmp
out
lock
mov
dec
mov
sbb
fcmovne
imul
js
xchg
sub
jbe
sarb
push
test
add
std
inc
out
mov
push
xor
adc
ja
lods
push
mov
scas
ljmp
cmc
dec
call
push
cmp
push
sbb
dec
ret
fstpt
xor
lds
jp
cmc
cmpsl
cmpl
xchg
rcrb
aas
fucomp
and
sub
cmpsb
push
xchg
jmp
mov
add
add
mov
cmp
cmp
cli
xor
out
ja
dec
lcall
clc
leave
mov
lds
cmp
std
jbe
data16
mov
sti
icebp
lahf
jnp
jae
out
or
clc
lea
mov
loope
cltd
sub
lock
icebp
shrl
adc
out
sarl
pop
push
out
popa
loopne
and
scas
push
out
and
clc
jae
push
cmp
jb
sbb
mov
clc
mov
mov
fwait
sahf
sbb
add
xor
stos
loopne
insl
inc
out
jne
pop
cmpb
popf
dec
test
je
fistpll
jp
aad
fs
pop
test
or
add
or
pop
push
mov
fs
inc
mov
adc
xchg
cld
outsb
rcrb
sarb
and
dec
mov
repnz
loop
js
lret
fsubrl
mov
repnz
testl
push
stos
sub
sbb
clc
pop
jbe,pn
xchg
xlat
dec
sbb
add
jne
rolb
mov
mov
pushf
jg
or
testb
ja
inc
mov
mov
test
sti
fsubs
push
or
xlat
push
pop
mov
inc
jp
adc
out
andl
decb
stos
test
fdivl
mov
ficoms
dec
test
pop
shlb
out
lock
mov
insb
mov
test
data16
mov
lods
leave
and
ss
popl
inc
jg
mov
push
arpl
lods
stos
test
icebp
mov
or
inc
subl
pop
cmp
lods
outsb
decl
fistps
out
test
in
lods
or
fdivl
sub
push
roll
mov
adc
jns
stos
mov
mov
jecxz
pop
or
mov
xor
jmp
cs
int
cmpsl
mov
pop
scas
dec
pop
or
addl
mov
jmp
out
cs
ljmp
sbb
and
scas
jne
cld
int
dec
loopne
adc
mov
mov
adc
dec
nop
fdivl
stos
cmc
sbb
mov
loopne
ret
mov
dec
imul
pop
cmpl
or
adc
and
mov
lret
push
je
je
jecxz
mov
cld
into
jb
fwait
inc
out
mov
and
dec
call
xor
sbb
std
mov
jae
rcll
xchg
xchg
mov
aas
mov
mov
shll
fbld
sub
shlb
lds
ja
mov
push
loope
cmp
outsb
mov
cmpsl
icebp
stc
pusha
pop
arpl
adc
iret
std
sbb
jns
test
insl
add
inc
in
ffreep
cli
xchg
add
sub
ficomps
jno
aas
shr
movsl
mov
out
push
popa
mov
std
or
mov
lahf
pusha
repz
fdivrp
xor
mov
dec
jg
nop
out
pusha
lods
pop
jp
mov
test
out
cmc
pop
sub
pop
mov
xorb
push
sub
idivl
xor
cli
in
jl
mov
lods
mov
hlt
mov
mov
sub
ret
mov
sbb
cmp
xchg
data16
imul
pop
cld
lods
cli
pop
fdivs
xor
mov
jge
in
and
add
xchg
pushf
fucomi
pop
sar
xlat
std
dec
sti
mov
xcrypt-ofb
cmpsl
in
adc
pop
sti
lahf
sub
ret
xor
xchg
lods
xchg
adc
std
jmp
pop
aas
das
rcl
add
repnz
add
cmp
cmp
sti
ds
mov
loopne
test
out
mov
mov
mov
jle
jnp
stos
repz
sub
xchg
clc
mov
dec
fstpt
movsl
sub
mov
cli
scas
mov
imul
and
mov
loop
push
fsubl
or
pop
cld
lahf
lret
add
stc
xchg
add
dec
das
pop
out
xor
lock
movsl
lret
pop
in
popa
pop
or
push
inc
xlat
pop
mov
daa
xlat
adc
pop
sti
scas
mov
test
jb
fs
loopne
fst
imul
xor
jne
sarl
fimuls
or
xor
fisttpl
sbb
out
mov
xchg
movsb
and
mov
push
bound
add
push
lods
xchg
mov
aas
mov
jb
cmp
or
inc
or
pop
mov
adc
outsb
inc
push
cmp
cltd
inc
adc
aas
fidivrs
push
lods
inc
adc
lock
add
ja
cmp
leave
xor
fisubrl
imul
in
sub
cmp
sbbl
hlt
mov
ss
push
jl
pop
xchg
cmp
sbb
xchg
shrb
cmp
mov
adc
ja
jg
pop
and
dec
inc
adc
stc
mov
mov
pop
mov
ja
fidivrs
aas
rclb
xchg
fldt
and
push
dec
movsl
inc
xchg
jae
push
sbb
mov
cmp
sbb
push
mov
mov
out
mov
pushf
inc
xor
test
lock
out
mov
push
lea
or
repz
out
clc
cmpsl
popa
mov
adc
testl
jg
jmp
fidivrl
mov
inc
repz
jg
decl
or
scas
hlt
push
mov
or
dec
cld
add
xlat
in
test
mov
std
pop
pop
repnz
mov
aas
mov
and
ljmp
notb
adc
cmp
jo
mov
pop
pop
or
xor
int
sub
lods
mov
loope
clc
push
jnp
dec
adc
inc
test
ljmp
test
and
or
dec
xchg
fs
aaa
inc
lretw
push
insl
call
aad
sub
jno
iret
in
lea
loop
mov
aas
cmp
cs
sub
and
cmp
bound
ja
jmp
and
addr16
pop
mov
or
in
sahf
cmp
repnz
idiv
sbb
push
sub
mov
mov
ficompl
cmp
adc
mov
jg
aam
mov
pop
loopne
ficoms
les
fsubrs
xchg
dec
jo
inc
or
fstl
sbb
imul
lock
out
ss
cwtl
adc
push
aam
pop
pop
outsl
jp
iret
and
push
inc
xlat
lret
rcrl
fldl
daa
nop
sbb
fdivrp
in
lcall
rorb
sti
push
enter
mov
pop
and
fmuls
ret
cmpsl
sbb
adc
xchg
jle
or
xchg
xorl
sbb
daa
jb
jge
sbbl
or
dec
nopl
jle
pop
repz
scas
dec
push
sbb
ja
inc
out
pushf
sti
aam
jg
xor
aas
push
add
clc
or
pop
mov
rorb
cs
jbe
cmpsb
pushf
cmp
fs
aam
inc
sarb
xor
xchg
adc
cmc
inc
in
adc
adc
dec
scas
cwtl
sub
sub
std
add
and
inc
add
scas
push
les
decb
and
pop
jae
push
sbb
arpl
cmp
mov
mov
ljmp
adc
and
stos
sub
push
lret
xor
jecxz
mov
fcompl
imul
ss
dec
sbb
leave
cld
popl
ljmp
jb
cmp
xchg
and
cmpsl
adc
jg
fimuls
xor
mov
mov
sti
popf
adc
push
jbe
pop
pushf
divb
movsb
das
xor
cmp
mov
xor
pop
imul
mov
movsb
out
aam
incb
adc
sbb
enter
repz
outsl
clc
mov
sti
push
dec
jbe
leave
mov
pop
aas
mov
out
pop
ljmp
xchg
test
sbb
lahf
jbe
push
mov
test
lods
add
in
imulb
inc
or
das
test
ret
rcrl
jne
loope
push
xchg
movsb
sub
push
mov
sahf
test
xor
mov
test
out
jle
xor
clc
push
dec
mov
in
mov
popf
in
decb
xchg
ret
cli
cmc
jmp
cmpsl
mov
sahf
loope
cltd
push
fcompl
lock
out
mov
xor
adc
sbb
pop
xchg
push
mov
mov
sbb
push
push
inc
cmc
cmc
ret
mov
adc
push
add
lods
sub
test
cmc
and
and
jg
jle
pop
mov
outsb
shrl
js
adc
mov
insl
outsb
pop
lcall
daa
loop
add
icebp
mov
xchg
rcrl
sbb
cs
xor
daa
jae
dec
cltd
push
inc
test
pmaxub
in
cmp
cmp
mov
ja
es
sbb
push
icebp
out
sahf
cmp
aad
das
inc
loopne
fdivr
pop
jne
lods
cmp
pop
std
push
mov
iret
and
jg
into
sub
add
mov
jno
frstor
push
jo
out
cmp
data16
jl
cmp
push
dec
mov
jg
stos
jmp
jb
in
ss
fists
call
popf
loope
or
or
aam
test
sbb
mov
inc
mov
sbb
xchg
push
fsubp
mov
inc
hlt
in
xor
fucomi
mov
fisubrs
dec
inc
repz
hlt
sub
test
mov
ret
mov
filds
lods
psubb
adc
cmp
mov
sbb
sti
jg
dec
sub
lea
inc
and
pop
mov
imul
dec
cli
call
cmpl
mov
or
fistps
jecxz
roll
or
jno
out
pushf
cld
fnstsw
aaa
add
inc
lods
pop
fstl
push
cmp
sti
hlt
pusha
lods
loope
mov
dec
sub
pop
mov
cmc
xchg
dec
nop
cmp
dec
aad
mov
mov
xor
and
or
inc
mov
outsl
sub
and
inc
mov
dec
clc
pop
fidivs
inc
push
mov
sub
dec
insb
sub
or
in
rcll
loopne
xchg
cltd
cltd
push
std
cwtl
loope
in
lcall
pusha
fldt
sahf
clc
lea
and
pop
mov
rorb
bnd
shlb
orl
push
pop
fildl
movsl
jg
incl
jl
pop
inc
test
mov
sbb
lods
fmull
push
leave
inc
aaa
mov
and
cmp
xchg
mov
sub
xor
rcl
daa
lret
push
cs
cmp
mov
in
fsubrp
pop
stos
das
mov
pop
push
jmp
push
aas
sub
mov
jp
pushl
mov
ljmp
add
sbb
fs
dec
aad
sbb
stos
inc
cld
pop
dec
les
push
call
sti
cmc
xor
mov
mov
inc
inc
or
dec
push
mov
push
loopne
push
mov
scas
mov
jmp
fidivrl
lods
aas
or
das
sub
loopne
sbb
xchg
pop
testl
jb
icebp
jmp
std
bound
cmp
sub
subl
lods
jle
lods
inc
mov
sub
sbb
fiadds
loopne
jbe
ficoms
or
and
push
enter
mov
stc
cld
sub
pop
hlt
std
or
jb
lahf
loope
es
out
jbe
jle
inc
push
push
xor
and
je
xchg
mov
in
adc
jg
and
mov
mov
xchg
adc
adc
xchg
int
xchg
addl
push
repnz
arpl
mov
aas
test
xchg
out
pop
in
ss
mov
repnz
sbb
repnz
cmpsl
adc
pop
cld
pop
add
test
sub
lock
push
cmp
jecxz
lds
insb
fmul
lods
fcoml
int3
popa
movsl
cmc
out
pop
mov
pop
clc
andl
mov
lret
sahf
jg
adc
outsb
push
jp
ljmp
outsl
pushf
mov
leave
pop
pop
and
push
adc
dec
js
std
xchg
sbb
sbbb
or
stos
aaa
xlat
cmp
inc
or
sti
xchg
ja
aaa
xor
lret
sbb
fs
jge
push
ffreep
clc
pop
mov
adc
and
add
xor
cli
cmp
aaa
daa
xlat
mov
mov
cmp
lock
pop
add
inc
popa
add
das
jg
arpl
inc
cmp
fmull
xor
enter
lock
fnsave
js
inc
adc
mov
fstps
mov
inc
add
shll
jp
xorl
inc
mov
sub
int
add
pop
and
sti
icebp
es
aas
dec
bound
cli
add
inc
jl
xorl
shlb
data16
mov
pop
sub
xchg
inc
xor
out
sbb
xchg
mov
in
outsb
or
mov
push
pop
dec
call
loope
jl
in
sub
cmovb
mov
lock
mov
test
test
jle
cmp
pop
movsl
and
ds
loope
cmp
xchg
push
mov
mov
out
sub
sbb
popa
inc
int
enter
inc
xchg
xchg
add
int
dec
subl
fnstsw
jge
xor
test
dec
jp
and
aaa
neg
and
sbb
lods
pop
inc
pushf
mov
jge
ret
inc
push
mov
mov
sub
mov
insb
mov
jge
int
aas
xor
cmp
mov
mov
pop
test
pop
sti
aas
lock
popa
push
mov
ret
jg
ret
xchg
xchg
or
push
ds
and
hlt
dec
hlt
push
fcomp
mov
call
cmp
shl
jmp
call
testl
jg
std
cltd
cmpb
and
iret
mov
cmp
incl
mov
or
push
mov
outsb
add
das
call
out
adc
push
pop
inc
add
add
dec
add
jmp
lret
inc
jnp
cmp
das
jg
mov
or
mov
xchg
add
ja
ret
fisttpl
mulb
outsb
cmp
mull
aas
stos
xor
cmpsl
in
aad
push
pop
xchg
mov
enter
add
ds
mov
dec
sub
andl
idivb
lods
push
arpl
push
push
jge
xor
fwait
loop
mov
insl
into
cwtl
xor
stos
div
pop
mov
xchg
incl
mov
ljmp
mov
push
das
jbe
mov
orb
arpl
fcom
popw
push
push
xchg
jne
dec
rorl
inc
sbb
sub
popa
sub
ret
add
jns
shll
sub
add
out
push
add
xor
cld
jnp
xchg
movsl
loop
imulb
clc
xor
sbb
jae
in
jge
aas
push
mov
cld
test
adcl
jle
repz
jmp
nop
js
test
xchg
push
add
pop
scas
sbb
arpl
mov
or
hlt
fbstp
cmp
mov
xor
pushl
push
cmp
jg
cld
xchg
inc
inc
sbb
mov
pop
jbe
imul
ds
into
dec
dec
sar
push
pop
push
ret
sub
in
pushl
lret
popf
into
push
jnp
out
sub
stos
mov
mov
push
dec
and
mov
adc
jmp
std
loop
fidivrs
mov
sub
sub
lods
cmpsb
repz
mov
lock
pop
xchg
sbb
les
add
cld
test
add
out
sbb
addr16
das
arpl
jp
stos
pop
push
jbe
jb
fdivr
and
mov
ja
jnp
jl
cld
mov
out
rorb
adc
mov
fs
and
mov
xlat
and
mov
call
loope
jg
sbb
mov
cmc
inc
push
and
and
movsb
rcrb
sub
shll
ficomps
xchg
orb
mov
dec
pop
fistpll
dec
fwait
mov
lods
rol
int3
aas
stos
ds
mov
pusha
call
jmp
cmp
fdivl
sbb
adc
xchg
sti
imul
inc
fsubl
sti
xor
sbb
cmpl
jp
or
pop
incl
neg
sub
sbb
sub
dec
jnp,pn
mov
jl
xchg
mov
pop
jecxz
ds
jl
jns
loop
incl
sarl
mov
sbb
stc
mov
insl
daa
hlt
out
outsl
jo
cli
xor
sub
pop
jb
xchg
rorl
adc
and
sti
ja
adc
lds
mov
jae
mov
fscale
int
and
inc
call
out
ljmp
shlb
rorb
push
pop
xlat
shlb
cmpsl
clc
fldt
or
mov
out
mov
icebp
mov
nop
xor
mov
pop
pop
int3
mov
pop
jnp
imul
fdivr
adc
insl
in
rcl
cli
and
cmc
and
xlat
lods
jns
idiv
jmp
andb
iret
xchg
fnsave
lahf
cld
hlt
cmc
lcall
mov
mov
stos
negb
les
icebp
mov
pop
daa
ret
lret
cli
cmp
adc
ja
jg
aam
push
cltd
out
pop
adc
sbb
lock
jmp
pusha
call
cwtl
sbb
in
or
mov
pop
jge
pop
mov
insb
roll
pop
ss
sarb
mov
push
mov
xchg
lcall
outsl
xchg
lds
adc
pop
push
jmp
js
jno
pop
xlat
pop
dec
out
mov
out
push
lcall
dec
stos
es
out
inc
movsb
sbb
pushf
cmp
imul
add
inc
repnz
xchg
rep
dec
mov
arpl
js
push
and
outsb
stc
aam
pushl
or
int3
inc
ds
pop
pop
push
imul
out
jg
shrl
inc
lods
xorb
jp
inc
inc
lods
lahf
lock
mov
lea
add
fistpl
mov
cmp
hlt
pop
mov
push
pop
fimuls
mov
jbe
testb
pushl
sub
xchg
loope
dec
mov
and
pop
adc
fmuls
paddd
ficomps
es
and
mov
icebp
push
xor
inc
mov
sarb
loopne
lret
mov
xor
pop
add
and
repz
cmp
add
fidivs
mov
leave
shrl
out
ret
std
out
inc
sub
inc
outsl
sti
fdivrl
negb
dec
les
out
dec
mov
jle
decl
sbb
out
mov
aam
idiv
sub
out
push
mov
outsb
mov
fsub
lret
incl
cmpsb
ret
jb
sti
adc
int
jecxz
pop
adc
adc
adc
arpl
cmp
sub
dec
cmpsl
jb
cwtl
test
pop
bound
fmul
push
sub
jbe
or
jmp
cmpsl
or
fidivs
je
or
icebp
fisttps
xchg
inc
dec
lods
or
pop
mov
rorl
lds
fwait
jl
adc
ret
mov
push
popf
iret
sub
xor
mov
xor
incl
pop
mov
sahf
cmp
push
cmp
jo
int3
out
fnstsw
mov
xchg
loopne
das
add
idiv
cmp
hlt
pop
inc
out
pusha
cpuid
fucomi
mov
xchg
inc
mov
repz
into
mov
sub
add
xchg
fdivrl
das
jb
scas
jle
push
jnp
sub
shll
inc
subb
ljmp
inc
lcall
sbb
mov
movsb
fildl
inc
mov
fsts
mov
pop
mov
iret
test
rorb
hlt
inc
jp
sbb
imul
pop
jp
push
push
xchg
adc
ja
mov
jno
jg
scas
adcl
and
dec
in
mov
or
cmpsb
mov
out
mov
daa
push
icebp
int3
push
insb
dec
push
or
pusha
js
fcoms
std
adc
push
imul
adc
sahf
mov
cmp
mov
sarb
push
jae
repnz
mov
pop
xchg
xor
xor
mov
enter
outsl
ret
je
sbb
xchg
cmp
push
das
lock
push
sbb
adc
scas
fisttpll
pop
push
lret
lret
add
sbb
adc
and
dec
sbb
mov
and
pop
jp
enter
std
jo
mov
aad
fs
mov
fucom
adc
cmp
push
leave
push
std
add
sbb
decb
jmp
dec
rcl
cmpsl
adc
hlt
cld
incl
jno
lret
les
scas
imul
cmp
out
bound
cmpsb
adc
loop
cwtl
or
mov
mov
sub
pop
and
add
divl
icebp
out
add
mov
jmp
repnz
push
cmp
mov
pop
aaa
fcmovu
cmp
scas
bound
and
mov
or
add
negl
popf
jnp
data16
jns
inc
lcall
jo
test
sbb
loopne
sbb
xor
or
lret
add
test
shlb
mov
xor
fucomp
mov
loopne
xor
gs
pop
sbb
pop
dec
mov
add
lcall
ja
cmpsb
and
gs
cmpsb
adcb
lea
dec
out
iret
std
and
push
iret
pop
aam
cmp
mov
jae
sbb
push
mov
dec
jge
int
pop
std
push
aas
push
jne
movsb
fsubl
mov
dec
adc
mov
mov
cmp
outsl
out
loope
aas
inc
pop
pop
je
lods
shlb
pop
icebp
mov
popf
push
aad
arpl
mov
decl
cmc
mov
mov
xchg
inc
push
rcl
mov
pop
mov
cmpsl
loopne
and
fdivp
pop
les
cmp
sbb
sbb
jo
in
jmp
and
ret
xlat
jmp
test
push
inc
cmp
mov
sbb
inc
push
cld
jg
jbe
into
fbstp
shlb
pop
or
cmp
imul
push
lods
jb
mov
lret
sub
daa
adc
ja
sub
jp
xchg
mov
xor
call
in
stos
dec
xchg
add
lcall
test
outsl
in
outsb
ret
stos
cli
jne
xor
mov
out
sub
lock
dec
inc
mov
call
loope
sub
js
pop
cmp
fwait
xchg
fucomp
dec
movsl
sbb
in
cmpsb
push
xlat
jmp
push
outsl
movsb
sub
out
add
sub
aad
nop
inc
push
adc
jg
fs
ja
add
or
add
sub
in
mov
mov
lods
shrb
js
mov
mov
fucomp
dec
mov
mov
pop
or
or
stos
mov
cli
cmp
fwait
inc
jb
lcall
dec
push
xchg
clc
lahf
adcl
dec
ret
test
incl
xor
scas
hlt
pop
sub
jb
add
mov
fcmovb
out
iret
loopne
mov
loop
mov
das
in
test
cld
sbbl
jmp
adc
cmp
daa
xchg
leave
mov
scas
jmp
dec
mov
push
out
inc
popf
je
out
adc
mov
out
push
mov
xchg
adc
sarl
cltd
xor
mov
cwtl
cs
enter
jo
sbb
fcom
jae
int3
add
stos
push
jae
cli
in
pop
outsb
push
adcl
repnz
dec
pusha
fidivs
pop
and
adc
push
hlt
xchg
mov
popf
clc
add
mov
aaa
loop
inc
add
pop
dec
std
fildll
xchg
lret
repnz
cmpsb
jmp
aaa
jg
jnp
sbb
sub
mov
int3
mov
pmaxub
push
ljmp
push
outsl
lret
adc
cld
pusha
aaa
mov
aas
movsl
lods
mov
fwait
pminsw
jl
outsb
adc
push
ret
sahf
bound
jmp
inc
cld
xor
or
mov
add
xchg
out
jge
mov
mov
inc
fists
cli
sub
popa
sahf
xor
lea
add
cli
stos
push
imul
cld
xlat
jecxz
mov
push
or
fs
hlt
fidivrs
push
cmp
mov
mov
mov
movsb
clc
push
mov
loope
jecxz
or
fstps
popl
inc
sbb
sbb
lea
mov
sahf
mov
add
or
ret
fistpl
mov
lahf
pusha
pop
jno
pop
mov
jp
dec
xchg
mov
jmp
sbb
hlt
pop
jo
cmp
adc
rolb
pop
sahf
mov
incl
dec
xor
mov
jl
repnz
push
aad
xchg
sub
xlat
data16
xchg
adc
testb
inc
mov
xor
pop
inc
psubw
mov
pop
ret
fisttpl
lods
cli
jg
fcomp
shr
enter
imul
mov
fs
pop
push
pop
cmpsl
testb
in
xor
and
jns
cli
inc
aas
iret
cltd
test
adc
out
or
je
mov
fildl
cwtl
stc
in
pop
sbb
pop
cld
aas
bound
sbb
xor
jle
and
sub
and
add
mov
aam
jp
shll
loope
pop
cwtl
loopne
adc
mov
aad
jg
adc
ret
and
in
and
rcrb
les
mov
cmp
clc
jg
mov
mov
mov
cmpsl
lds
adcl
add
mov
inc
leave
xor
rorb
ss
cmpsl
out
cmp
incl
or
out
and
lock
cld
and
and
and
xchg
xor
mov
insl
outsb
sbbb
loopne
sbb
test
mov
push
rorb
cwtl
pop
lea
xchg
jg
mov
xor
push
pop
clc
jge
cmp
mov
mov
add
xchg
sbb
sbb
jg
cmp
aam
jns
frstor
mov
out
or
hlt
mov
xchg
xchg
jg
call
mov
jno
xchg
dec
sub
jle
sbb
or
fisubs
pop
inc
mov
cli
jmp
out
rolb
push
sub
leave
add
mov
xor
lds
add
iret
pop
sbb
scas
jo
test
lret
sub
decb
subb
arpl
mov
push
sbb
js
jb
cli
ja
pop
xor
sbb
das
inc
insb
inc
sarl
in
dec
pop
xor
cmp
push
jecxz
jp
outsb
incl
stc
jle
jb
inc
sti
ficompl
aad
sar
mov
pop
out
arpl
outsl
scas
sbbb
push
xor
int
cmpl
popa
call
mov
pop
lea
mov
sub
mov
cmp
ret
inc
mov
adc
inc
sti
ljmp
mov
stos
push
xor
andl
out
jge
and
pushf
xlat
sbb
push
clc
shrb
jb
cmp
mov
hlt
fbld
sbb
jo
les
dec
out
lcall
or
sarl
out
mov
movsl
clc
xchg
test
or
rclb
mov
add
add
aas
mov
jnp
fiaddl
pop
dec
inc
shll
pop
push
jae
push
inc
out
bound
lcall
shl
lds
ss
xor
sarl
jnp
pop
gs
add
mov
mov
mov
cmp
out
pop
aas
ret
mov
xchg
sub
mov
gs
decl
test
repz
sbb
leave
test
xchg
xchg
inc
scas
jg
and
ljmp
std
and
or
inc
xorb
mov
incl
cmp
jno
es
mov
sub
jne
adc
imul
sub
push
xlat
cmp
lret
popa
dec
stc
push
cmp
pop
cmp
and
cmp
aad
jecxz
mov
xor
loope
stos
push
clc
daa
jl
pop
push
sub
call
data16
out
in
pop
subl
xchg
push
hlt
mov
sub
data16
dec
jle
jns
or
repz
loopne
andl
in
jnp
daa
mov
popl
dec
ret
sbb
dec
xchg
adc
ret
pop
lods
pop
in
imul
ja
pop
add
adc
or
add
push
and
dec
fistpll
clc
not
roll
adcb
scas
enter
dec
sbb
pop
push
loope
jnp
andb
push
pusha
sbb
xor
ror
call
aam
frstor
sub
inc
es
and
mov
fwait
ljmp
mov
shlb
sahf
or
outsb
and
adc
push
adc
jb
scas
sbb
arpl
rcrb
addr16
rcll
jl
xor
int
cmp
push
js
push
sti
pop
pop
cmp
jp
xor
pop
sbb
pop
dec
or
push
mov
fwait
jl
aas
adc
movsl
sub
lret
push
pop
push
lcall
and
jbe
stc
add
jnp
fldenv
addl
lea
in
enter
rcrl
fsubrs
cli
aas
idivl
xchg
push
fs
clc
sbbb
std
xor
test
inc
mov
xchg
mov
push
inc
push
out
in
outsl
icebp
loopne
dec
mov
jno
xor
lds
fcmove
pop
popa
push
jnp
cld
shl
iret
push
cmp
sbb
or
js
into
push
cli
push
push
push
mov
sbb
add
push
mov
loope
incl
fistpll
scas
leave
jb
cmp
mov
push
pop
popf
int
and
or
and
cltd
mov
jp
sub
push
lock
jecxz
jnp
flds
lock
add
or
aas
inc
hlt
xchg
scas
xchg
repnz
mov
mov
cmp
hlt
es
push
loope
stc
mov
adc
mov
inc
mov
cmc
jne
adc
mov
sarb
pop
loope
in
hlt
cmpsl
test
movsl
cmp
dec
icebp
call
sbb
add
xorl
add
jbe
xchg
cwtl
hlt
and
mov
out
test
ffree
inc
jg
cmpb
pop
gs
arpl
mov
pop
push
mov
push
add
pop
cmc
jle
call
pop
popf
inc
lods
repz
or
jg
lea
movsb
addb
popf
pop
shl
into
std
gs
and
cmp
add
shll
pop
in
int
push
bound
hlt
push
adc
push
int
orl
mov
je
inc
push
xlat
pop
leave
ja
aas
mov
sti
into
lahf
add
jecxz
sti
or
jo
decl
testl
fdivrs
aas
mov
out
mov
xchg
push
nop
mov
mov
cmc
push
and
or
and
mov
in
arpl
adc
ss
stos
test
dec
mov
xor
push
xor
jnp
or
cs
xor
ljmp
adc
or
add
cld
out
out
and
adc
loop
aas
sbb
frstor
aad
mov
in
inc
ds
add
out
std
outsl
adc
xchg
sub
lds
and
jg
clc
scas
cmp
push
jo
sbb
jae
dec
sbb
das
test
rclb
jbe
sti
repnz
push
jecxz
add
inc
jnp
sti
movsl
pop
lahf
and
out
in
sarb
dec
hlt
sub
pop
push
ss
arpl
add
or
mov
mov
shlb
in
call
jae
xchg
jmp
xchg
add
pop
scas
mov
sar
cmp
jle
push
aas
popf
push
xchg
fldt
mov
mov
aam
les
daa
loopne
xchg
cli
mov
sbb
adc
outsl
xor
and
and
push
int3
pop
push
lret
repz
stos
xor
and
pop
outsb
loop
inc
rcrb
sub
lock
call
sbb
in
sub
adc
inc
ret
loope
dec
jg
mov
idivl
jecxz
sbb
jg
jg
lea
les
or
cli
add
ds
jl
inc
data16
xchg
pop
cltd
insb
sbb
inc
ss
in
xchg
push
loope
sbb
mov
xor
test
ja
pop
cmp
dec
gs
mov
push
xor
sete
daa
popa
pop
outsl
repnz
aas
int
lahf
insb
or
pop
and
push
icebp
popl
sbb
mov
aas
outsl
fisttps
sar
xor
mov
inc
xor
icebp
inc
jb
sbb
and
psubsw
mov
aas
frstor
inc
cwtl
or
jle
mov
out
je
notb
ljmp
xchg
jecxz
ljmp
cli
cmp
mov
sub
roll
test
and
ret
in
stos
scas
stc
jl
push
sub
push
addr16
das
add
nop
addb
lahf
dec
addb
push
or
stos
jae
fnstsw
push
sub
out
ret
add
fdiv
or
cmpsl
ja
push
std
fbstp
inc
push
loopne
add
loop
cwtl
xchg
sub
mov
mov
xchg
xchg
xchg
sub
ljmp
inc
push
fiaddl
loopne
mov
dec
stos
dec
or
xor
pop
aas
jle
and
fsubrl
das
and
fimull
add
xchg
les
pop
jg
ret
out
inc
dec
cwtl
iret
adc
mov
or
loope
pop
jnp
jmp
mov
lcall
mov
or
lret
push
xor
cmp
in
xchg
add
inc
lock
fimuls
sbb
rcll
aad
or
sbb
aam
out
lock
pop
mov
dec
sub
and
les
lods
add
mov
jmp
decl
pop
sbb
pop
sub
lock
mov
mov
pop
xchg
adc
cli
out
xchg
adc
pop
les
cs
aas
sbb
fsincos
xchg
loop
mov
inc
inc
or
fs
jnp
jecxz
cmpsl
pop
jnp
cli
fdivrs
sbb
shrb
fcoml
sbb
popf
clc
addr16
imul
out
mov
out
xchg
ja
or
aas
adc
mov
dec
inc
and
inc
mov
sbb
clc
mov
int3
inc
sbb
popa
xchg
popf
sbb
sbb
aas
hlt
push
push
mov
mov
into
fistpll
xor
loop
stos
dec
bound
std
add
clc
pusha
adc
lods
test
mov
xor
push
mov
jg
loop
fadd
jecxz
xchg
ret
pop
push
xchg
xor
stos
push
fistpll
mov
and
inc
loop
int3
mov
je
cmpsl
jb
xor
sub
sbb
sub
xchg
adc
jge
mov
fucomip
imul
cli
fnstcw
shr
push
mov
loopne
cmp
xchg
bound
out
test
ret
inc
dec
data16
call
dec
cmpb
loop
xchg
mov
cmp
bound
and
mov
aas
out
mov
js
test
sub
jno
inc
loope
movsl
mov
cs
std
in
mov
cmc
push
and
and
rorl
arpl
imul
sub
outsl
cmpsb
pushf
popa
cwtl
js
cld
mov
xchg
fidivrs
shrl
das
rcrl
pop
fmull
js
data16
jo
nop
dec
lock
out
ss
cmc
lahf
xchg
aad
add
daa
test
add
int3
incl
jg
mov
lahf
das
sub
cmp
repnz
test
push
aas
out
std
pop
test
push
stc
sbb
jmp
cld
data16
pop
pop
mov
cltd
jg
mov
in
popf
cltd
adc
xchg
mov
ljmp
pop
xchg
fiaddl
dec
dec
lret
or
xchg
es
aas
cmp
test
and
lahf
clc
mov
and
gs
jae
aas
jp
out
mov
mov
outsb
loop
jecxz
out
js
fildl
fbstp
add
sub
or
xchg
scas
adc
in
int
pop
jmp
icebp
outsb
addr16
xchg
test
cmc
push
ret
pop
ret
cmc
fcomip
mov
rorl
mov
sbb
sub
sub
add
pmaddwd
push
cmp
jo
sub
lock
mov
sbb
cltd
loopne
dec
cli
repnz
popa
xchg
cli
mov
out
fdivrp
hlt
cmp
es
leave
cmp
dec
jmp
and
sub
xchg
and
or
repnz
mov
out
inc
sbb
idivl
ret
xor
nop
dec
xchg
test
out
mov
stos
and
daa
ljmp
jg
lret
ret
jle
clc
mov
hlt
enter
ja
pop
and
mov
add
sbb
xor
jmp
scas
movb
cmp
psubb
adc
stos
adc
ljmp
ja
cli
ja
fidivrl
orb
cmc
fdivrl
in
icebp
or
stos
push
and
ja
out
xchg
inc
shlb
lods
ficomps
sbb
decl
lock
or
sbb
cmp
in
lods
and
xchg
pop
fdivl
and
bound
mov
push
mov
mov
cmp
out
ljmp
jb
jecxz
jns
js
pop
jecxz
mov
xchg
loop
xlat
loope
mov
cld
mov
insl
pop
push
test
clc
daa
xchg
outsl
sbb
or
cmp
xor
and
inc
cmp
decb
hlt
mov
dec
popa
push
add
test
lock
int
adc
mov
fisttps
mov
push
stc
mov
jl
outsl
jb
hlt
lahf
sti
adc
clc
mov
cli
jns
xchg
inc
lahf
push
std
sbb
pop
rcll
push
add
push
mov
xchg
inc
push
fcomi
sbb
jbe
jle
lret
push
mov
push
sti
fbstp
inc
xchg
les
inc
imul
lret
outsb
mov
sbb
cmc
xchg
jg
mov
mov
lcall
sub
das
push
hlt
js
test
aaa
lret
lock
jg
jmp
test
jl
scas
enter
outsl
cmp
aaa
add
inc
scas
xor
shlb
pop
pop
dec
sar
sub
pop
mov
adc
shrb
fimuls
or
ret
lods
ljmp
or
movsl
xor
jae
rorl
lods
jg
sti
call
xchg
mov
loopne
mov
pop
push
adc
push
mov
fdivr
roll
lds
call
outsl
jno
jae
nop
arpl
mov
imul
mov
lea
pushf
inc
jmp
adc
lcall
jg
mov
cmc
dec
inc
fnstsw
push
pop
cmpsl
movsb
mov
popf
push
setns
mov
cmc
fstpl
cmp
aam
testl
fwait
nop
mov
adc
pop
mov
pop
stos
clc
cltd
sbb
add
sbb
cmpsl
imul
ljmp
cld
or
lcall
inc
icebp
sbb
dec
add
insl
xchg
push
sahf
mov
imul
fildll
lods
and
push
mov
xor
xchg
xchg
cmc
jg
pushl
mov
das
repz
dec
das
mov
mov
loopne
ficoms
adc
cmp
xor
lcall
std
out
je
test
sub
sbb
ret
and
xchg
and
insl
push
lds
in
sbb
stc
pop
xor
mov
mov
cs
mov
inc
cmp
sbb
popf
cmpsl
out
and
push
push
dec
in
insb
jnp
inc
loopne
ja
jo
hlt
inc
dec
leave
out
into
dec
movsl
adc
ret
sti
in
es
fwait
xorl
das
push
mov
hlt
pop
add
loope
or
jno
out
mov
addr16
inc
movsb
out
and
jp
fsubrs
inc
stos
fisubrl
add
lods
enter
push
push
push
cwtl
mov
mov
mov
push
fisubs
lcall
mov
cmpsb
out
pushf
jo
pop
xor
fcmovne
out
shll
decl
aad
mov
jb
dec
shrb
mov
int
jge
orl
fistps
and
mov
pop
push
mov
repz
std
mov
loope
js
test
ret
adc
mov
push
or
jnp
mov
and
and
jl
decb
andb
cld
pop
mov
insb
jp
leave
in
mov
movsb
sub
sbb
pushf
lods
hlt
mov
sti
ljmp
push
cmpsl
imul
jge
test
mov
stos
fstl
or
mov
push
cmp
lods
or
fidivrs
push
lods
lods
adc
or
lahf
std
cmpsl
jbe
fcmove
movsl
jmp
bound
sbb
fs
fsubl
add
add
ffree
sub
addl
aam
clc
mov
call
sub
repz
xchg
inc
clc
setl
xor
inc
pop
sbb
sub
dec
and
stos
ljmp
jb
ret
ret
mov
adc
xchg
sub
popf
cmp
clc
cmc
fwait
into
push
gs
imul
andb
daa
push
fistpll
add
mov
jmp
icebp
aas
call
test
fcmovu
dec
or
test
cld
sub
mov
mov
xchg
sti
sbb
cld
fcoml
sub
mov
and
shrb
push
std
fistps
jmp
ss
lock
es
lahf
mov
push
or
sbb
into
das
inc
enter
lahf
xchg
jl
rorl
push
arpl
pop
sub
outsl
fisttpll
or
jle
pushl
in
xor
icebp
mov
push
mov
std
out
pop
into
js
lcall
in
out
ja
jmp
or
mov
xor
inc
and
push
mov
iret
cli
mov
inc
xchg
inc
lds
loopne
inc
lcall
sbb
movsb
dec
lods
test
movsl
mov
das
inc
cmp
and
pop
xchg
jp
dec
imul
imul
aad
jns
adc
aam
cli
out
add
mov
mov
inc
xor
push
int
push
clc
cld
outsb
adc
xchg
xchg
loop
sbb
pop
jne
mov
loopne
in
mov
cs
mov
das
clc
pop
xchg
cmp
jg
inc
or
cli
jb
and
or
arpl
pop
or
es
mov
jmp
jg
inc
loopne
pop
adc
jnp
mov
pop
mov
lcall
rclb
insl
loopne
mov
ja
punpckhbw
les
imul
jno
les
pop
mov
mov
sbb
jmp
loopne
cmpsl
shl
and
sbb
test
mov
aam
mov
decb
xchg
cmc
dec
out
imul
ffreep
jecxz
ljmp
rcrl
mov
in
lods
popa
mov
jg
cs
lret
sub
lahf
ja
clc
aas
in
dec
fldl
ror
insb
inc
jnp
arpl
dec
in
or
xor
jne
daa
mov
add
or
add
icebp
movsl
lock
pop
cwtl
jnp
popa
xchg
xor
addr16
add
call
ficomps
xor
sub
fcomps
pusha
lods
cmpb
jnp
aaa
ss
jbe
pop
sub
sub
sub
sbb
xchg
push
fildll
xchg
iret
jp
inc
sub
mov
popf
or
jns
arpl
add
rolb
ret
jg
decl
in
push
mov
mov
push
sbb
sbb
add
xor
repz
pop
lret
jmp
test
and
ja
hlt
mov
fistps
mov
pop
xchg
test
and
add
loope
push
jg
mov
or
mov
aaa
mov
pop
and
sahf
jle
adc
subb
jmp
mov
pop
loope
mov
out
std
cmpsb
sbb
loopne
mov
pushf
or
mov
rcl
jae
mov
mov
mov
jne
jmp
mulb
stos
mov
aam
jmp
jbe
incl
nop
lods
popf
pop
dec
test
add
pushw
std
or
fmul
lock
cmp
sarb
jle
nop
inc
fwait
insl
xorl
sbb
testb
and
popf
lcall
jge
jp
xor
incl
into
push
mov
fldt
or
ja
outsl
mov
pop
xor
xchg
daa
mov
imull
dec
jge
fstpt
sti
dec
inc
insb
repnz
xchg
pop
cli
aaa
shlb
push
std
jg
or
mov
ds
pop
fldcw
fstl
adc
mov
or
pushw
lahf
push
incl
js
pop
xchg
sub
outsl
cwtl
cmc
adcl
jno
dec
pop
and
popl
popf
js
stc
mov
or
mov
enter
inc
ds
scas
nop
stc
sub
sub
icebp
mov
je
cmpsl
out
inc
aad
or
lcall
rolb
mov
xor
movsb
xchg
dec
xor
sub
cmpsb
xchg
cld
inc
testl
sbb
insb
popl
ljmp
add
shl
cs
lock
subl
mov
or
bndstx
aaa
jo
jle
out
repnz
jns
mov
divl
xor
jge
enter
gs
add
lods
aaa
pop
rcl
xor
in
xor
adc
arpl
cld
sahf
stos
mov
rorb
imul
sbb
xor
jnp
pop
test
popa
xor
fadd
pop
mov
and
inc
std
out
stos
jg
cs
popa
or
cld
out
imul
adc
aas
in
shr
data16
stc
xor
int
jnp
xchg
out
sti
adc
daa
sbb
cld
xor
sti
mov
lods
mov
stos
add
out
rcrl
pop
out
jb
gs
jne
sub
or
lcall
out
mov
sbb
mov
dec
sbb
jmp
aaa
jnp
out
sub
mov
inc
xchg
std
das
push
sub
fiaddl
xor
mov
or
imul
gs
mov
adc
fdivrl
negl
out
hlt
es
inc
sar
pop
loopne
or
or
push
sbb
popf
clc
pop
ljmp
addr16
cwtl
jo
iret
lock
jbe
xlat
ficomps
out
imul
xor
cmpsb
jp
cmp
mov
movsl
out
sub
arpl
pop
pop
dec
xchg
adc
xor
mov
insl
and
push
push
stos
loope
sarb
pop
fwait
dec
mov
cmp
cltd
sbb
dec
mov
aad
pushf
mov
cmp
mov
clc
ja
mov
fs
fsubl
add
mov
testb
pop
inc
mov
adc
jb,pn
in
push
fistpll
lods
addr16
aam
mov
dec
icebp
and
outsb
repnz
mov
ds
jno
mov
and
push
cmpsl
loop
fwait
lea
movsb
enter
stos
aad
add
insl
sbb
inc
mov
cmp
push
jo
and
lea
sbb
mov
dec
add
out
dec
in
push
shll
jecxz
mov
loopne
sub
jg
push
sbbl
inc
mov
clc
clc
or
inc
mov
into
mov
ss
icebp
imul
sbb
leave
cmpsb
jecxz
pushf
jo
xchg
clc
dec
mov
decl
sub
or
add
xor
fistpll
in
into
icebp
movsl
test
and
and
decl
aas
mov
es
ljmp
scas
iret
xchg
and
repz
dec
jae
add
add
jg
clc
aaa
rcr
jo
pop
movsbl
xchg
push
pop
jo
fdivr
mov
imul
in
mov
add
hlt
repz
loop
jl
ja
pop
mov
rcl
push
hlt
cmp
shrb
sbb
je
rorb
inc
fbstp
movq
mov
popf
inc
es
inc
lock
std
ja
adc
dec
jae
insb
leave
or
dec
xchg
clc
int3
lret
xchg
mov
add
or
gs
les
dec
cmp
lods
clc
pop
test
fwait
pushf
repnz
repz
pop
ljmp
lcall
les
mov
test
jno
push
cli
pop
inc
jb
out
push
sub
add
mov
orb
sar
sti
mov
mov
pop
jb
and
push
push
clc
fldl
ficomps
xor
mov
mov
sbb
push
jbe
xchg
jl
out
jg
stc
mov
pop
mov
mov
fdivrs
jg
aas
sub
aas
mov
pop
stc
mov
aaa
jb
mov
das
loop
inc
fimull
and
js
popf
and
testb
loop
and
rcrl
inc
mov
push
repnz
loop
cld
add
cmp
push
out
mov
sti
ja
push
cmp
jmp
or
lea
push
inc
cld
out
mov
mov
xchg
test
lods
mov
xchg
addb
jl
in
dec
es
std
aas
loope
and
add
jg
pop
insb
xchg
add
jg
adc
dec
lods
out
push
pop
cld
xchg
cs
xchg
lret
pop
movsb
sti
sbb
mov
sti
pop
mov
xchg
popl
adc
lahf
sti
fildll
fmull
xor
push
jecxz
pop
clc
adc
inc
lcall
ja
jo
xor
cmp
scas
push
lds
enter
in
mov
dec
call
push
push
aad
fstl
cmp
inc
insb
dec
dec
lret
pop
xchg
popa
sbb
out
push
out
imul
mov
xchg
stos
rcl
jmp
lahf
mov
clc
stos
pop
fistpll
sub
adc
push
clc
sub
dec
mov
jae
dec
jns
das
jle
push
push
imul
call
lock
sti
aad
out
int3
inc
inc
popa
mov
cs
sbb
inc
daa
insl
or
cmp
lock
adc
dec
shr
test
sub
pop
and
sub
xchg
xor
cmp
out
or
sbb
or
jl
xchg
add
mov
arpl
pop
push
mov
call
adc
push
or
out
sbb
add
ljmp
mov
push
rcl
dec
sbb
mov
incl
xchg
pop
psrlw
lret
dec
adc
xchg
pop
or
lahf
ror
imul
rorl
mov
mov
pmullw
std
inc
mov
or
adc
adc
rclb
js
and
out
and
lcall
cmc
sbb
out
cmc
adc
add
lret
addr16
and
xchg
jl
testl
mov
push
pop
pop
out
lods
inc
in
or
and
out
sti
fdivr
sar
mov
jne
loope
out
sub
sbb
inc
jg
pop
pop
cmp
sub
insb
loop
aas
test
fdiv
js
mov
sbb
gs
sbb
mov
inc
pop
imul
and
nop
sbb
hlt
push
add
mov
jecxz
icebp
loope
test
pop
mov
or
inc
mov
icebp
imul
nop
clc
adc
lahf
mov
xchg
arpl
cmp
sub
cs
sti
jae
movsl
push
sti
lmsw
mov
repz
fdivr
fdiv
test
ljmp
out
inc
iret
mov
insl
mov
dec
jp
inc
stos
mov
mov
lock
test
mov
push
into
cmpsl
push
rep
push
dec
xor
jmp
push
jbe
sub
dec
add
push
cld
aam
test
lods
mov
add
cmp
inc
xor
pop
mov
jbe
dec
jno
pop
cltd
daa
dec
xchg
sbb
lock
aaa
call
add
int3
js
stos
loopne
insb
pushf
daa
into
cwtl
nop
push
icebp
lahf
cld
mov
sbb
mov
mov
push
das
mov
inc
daa
js
push
das
jae
pop
push
cmc
loopne
lock
jge
fstp
insl
int
je
pusha
aas
lret
xchg
push
adc
test
add
dec
dec
test
icebp
pop
mov
ljmp
int
pushf
out
cmc
fistpll
pop
idivl
sub
mov
ja
add
clc
out
add
sub
mov
test
aas
lds
mov
mov
jo
mov
hlt
es
nop
add
lock
inc
sbb
aad
push
out
jae
enter
sub
adc
mov
and
ret
stc
sbb
adc
mov
push
ret
sbb
shl
mov
mov
std
dec
les
cmp
mov
jne
cld
xchg
in
xchg
pop
lahf
mov
cli
mov
push
imul
jnp
or
cmpsl
sbb
in
insl
mov
cltd
cmp
mov
dec
cli
and
mov
cmc
addr16
mov
dec
pusha
cli
mov
fdivr
adc
push
lret
cmpl
imul
negb
cmp
je
sub
sbb
sub
mov
iret
xlat
mov
push
bound
ja
push
pushf
cmp
movsl
and
std
add
lea
arpl
pop
mov
adc
push
cmpsl
mov
imul
and
rorl
adc
xchg
push
popa
and
jmp
mov
cmp
cmpsb
jo
stos
push
scas
pop
loop
cli
fistpll
jno
jne
das
fwait
loopne
push
aas
ret
sub
fdiv
pusha
punpckhwd
fistpll
pusha
mov
aaa
clc
outsl
cmp
hlt
rcrl
ret
inc
ret
pushf
stos
mov
and
call
int3
push
iret
ficoms
dec
scas
ret
in
js
sub
imul
lods
add
jg
mov
scas
aas
das
cmp
rol
dec
jne
ja
and
ja
mov
add
mov
fcoml
imul
test
fildll
test
clc
sbb
ret
movsl
sbb
test
loope
mov
fwait
dec
dec
push
or
mov
fidivrs
incl
lea
cmp
add
pop
scas
push
ljmp
adc
out
push
jmp
mov
jg
push
mov
mov
fcompl
and
pop
mov
popf
cmp
add
dec
and
fstps
adc
lcall
hlt
shll
cmc
and
jge
and
jno
js
add
fdivr
cmc
daa
adc
mov
adc
xchg
ja
aam
dec
pusha
ret
testb
push
ljmp
inc
pop
bsf
push
roll
aad
aas
mov
je
imul
clc
test
lods
dec
push
dec
and
jb
cwtl
jg
jle
jmp
and
mov
xchg
sub
pop
add
aad
xor
adc
mov
sbb
call
cli
js
aas
mov
lret
scas
xor
cmp
jg
loope
cmp
mov
pop
jne
adc
roll
xor
xchg
mov
xchg
stos
or
inc
lock
fcomp
add
gs
dec
js
cmp
xlat
and
mov
jns
and
rcl
cmp
cmp
inc
popf
or
adc
out
ds
pop
ret
pcmpgtw
push
shrb
jnp
in
and
xor
add
rdtsc
clc
in
stos
mov
sub
out
mov
call
push
jge
lret
xchg
mov
out
std
int3
jecxz
mov
dec
pop
ja
xchg
or
xor
decl
scas
cmp
add
cmc
int3
shl
cmp
rcrl
ret
stc
mov
daa
adc
pop
cmp
repz
int3
aad
sbb
stc
fdivr
outsb
add
test
sbbb
adc
xor
ljmp
pop
loop
inc
adc
daa
mov
xchg
mov
add
mov
daa
cld
bound
call
stc
in
xchg
pop
popf
jge
jo,pt
stos
xchg
in
mov
aas
je
push
pop
data16
loop
cmpl
mov
sbb
fisubs
inc
in
mov
out
fsincos
icebp
std
xor
orl
or
cmp
pop
lret
stos
insl
int
dec
mov
mov
push
jb
out
clc
aas
les
mov
dec
push
lods
movsb
out
xor
mov
call
xchg
arpl
aad
inc
cld
pop
out
inc
cmp
jno
mov
lods
scas
cld
repnz
lahf
jne
inc
dec
cmpsl
mov
inc
inc
insl
mov
ret
push
aas
push
icebp
jbe
add
ss
xorl
jg
test
xchg
std
xchg
scas
mov
xchg
cmpl
cmp
fstpl
jbe
lcall
pusha
lea
pop
fs
jno
add
cmp
push
add
cmc
jg
jmp
fmulp
imul
push
sbb
cmpsl
pop
mov
aad
dec
inc
dec
leave
loope
sti
out
repnz
mov
aaa
inc
mov
jbe
jmp
mov
mov
fs
cmp
mov
loopne
cmp
mov
adc
ljmp
mov
rorb
inc
pushf
add
incl
push
loope
inc
scas
adc
jg
jg
cmp
dec
pushf
push
dec
mov
inc
gs
pusha
xlat
test
dec
mov
clc
scas
leave
cltd
cld
in
mov
icebp
xorb
cwtl
mov
adc
or
xorb
add
add
add
scas
mov
test
jno
add
mov
push
rcll
adc
xor
sti
mov
jno
pop
push
xor
shll
rcll
add
fstl
add
push
and
inc
push
es
adc
push
in
andl
js
mov
loopne
in
in
outsb
mov
inc
push
scas
clc
adc
pop
scas
sbb
xor
movsl
or
icebp
xchg
adc
inc
sub
add
jnp
jmp
mov
mov
sbb
dec
fcmovnu
jle
cmp
mov
pop
sbb
jo
dec
leave
xchg
data16
xor
and
add
jb
push
xchg
adc
ljmp
ljmp
push
sbbb
roll
inc
pop
push
jns
pop
or
jmp
push
daa
jno
push
pusha
add
adc
pop
jnp
mov
dec
out
or
cmp
cmc
mov
mov
mov
xchg
add
or
mov
mov
es
mov
iretw
pop
jno
jb
mov
lret
or
shrl
in
add
inc
inc
inc
push
xchg
cmp
popa
mov
xchg
out
ss
loopne
cmp
inc
inc
jmp
mov
cwtl
add
or
adc
rcrl
enter
pusha
and
adc
or
xchg
mov
inc
xor
mov
jno
cmpsb
xor
push
jo
hlt
fwait
and
dec
aas
pop
fdivr
outsl
add
push
out
stos
sbb
sub
mov
inc
push
sub
mov
xor
jno
shrl
inc
jno
add
push
outsb
jae
mov
sub
rcrb
test
cltd
mov
xor
sbb
aas
repz
les
mov
dec
int
aad
or
sbb
xchg
jns
jp
cmp
sbb
or
daa
cmp
xor
push
jle
comiss
mov
xor
xchg
push
mov
sub
push
inc
push
imul
add
or
and
sbb
rolb
inc
mov
xor
pop
mov
cmp
aad
cmp
ja
inc
mov
repnz
push
xchg
mov
pop
jl
mov
imul
cmp
dec
push
into
sbb
jnp
push
pop
add
imulb
cwtl
sub
dec
aas
push
adc
add
push
xor
jb
insl
push
cmp
pop
xlat
dec
push
mov
rcl
inc
jno
sbbb
push
sub
pop
repnz
cmpsl
or
push
add
mov
dec
pop
arpl
scas
jmp
sbb
loopne
cs
sbb
clc
mov
push
and
pop
push
sbb
adc
imul
ss
mov
xor
imul
sbb
and
gs
mov
mov
inc
or
or
insl
inc
push
pop
inc
and
clc
loope
xor
inc
pushl
sub
mov
inc
outsb
clc
push
test
push
bound
call
mov
xlat
decb
jmp
fidivrl
inc
mov
insl
pop
in
xor
fcomps
mov
push
dec
adc
push
dec
add
fidivrs
mov
adc
arpl
in
idivl
mov
mov
adc
mov
push
test
jle
add
or
ljmp
add
inc
add
sub
in
aam
adc
cli
stos
mov
pop
mov
push
daa
xor
cmp
cld
push
lods
push
add
jnp
or
xchg
out
int3
sub
add
push
pop
cwtl
and
sbb
dec
cli
or
push
dec
or
mov
cmc
add
cwtl
mov
shl
mov
lret
cmp
xchg
test
mov
mov
mov
movsb
pusha
sbb
sbb
sbb
in
aad
stos
sub
inc
inc
enter
subl
mov
mov
sub
adc
add
push
inc
data16
push
push
push
shrl
push
push
pop
pop
adc
fs
add
add
sbb
or
test
pop
ret
jne
xchg
rcrl
lods
loope
test
jo
cmp
jo
adc
pop
mov
adc
out
inc
aam
xorb
sbb
and
inc
popa
push
push
cltd
dec
add
and
cmpsl
mov
adc
fisubl
stc
jp
push
hlt
inc
xchg
leave
jne
mov
adc
xchg
ret
push
int3
jo
push
call
ljmp
cltd
and
push
mov
push
fildl
dec
push
adcl
rcrb
or
enter
mov
add
jecxz
fstl
lcall
xchg
add
cmp
mov
int
sarb
lret
and
pop
scas
or
andl
xor
daa
pop
es
pextrw
insb
mov
xor
add
push
shll
sbb
mov
dec
loope
cltd
sub
sub
popf
stos
jb
movsb
outsl
pushf
mov
mov
pop
xor
std
mov
hlt
pop
ljmp
sub
sarl
sbb
fcomp
add
test
mov
adc
pop
or
mov
xchg
or
jne
mov
or
pushf
mov
add
adc
stc
adc
icebp
mov
add
push
into
in
and
inc
ss
outsb
pusha
mov
push
mov
mov
sbb
shll
or
add
xor
lahf
sahf
push
sarb
sub
push
adc
xor
cmc
orl
add
mov
ljmp
pop
movsb
sbb
sbb
loope
roll
repz
inc
in
rcll
or
mov
pushf
orl
inc
pop
scas
or
mov
xchg
and
add
inc
add
mov
sbb
or
jo
pop
pop
int
aaa
stos
cmp
test
or
jmp
add
mov
mov
sub
add
pop
xchg
cmp
outsl
mov
add
or
add
mov
fisubrl
scas
mov
push
cmpsb
mov
adc
add
sarl
out
dec
or
sarb
inc
xchg
insl
mov
mov
in
subl
aam
push
call
add
inc
push
dec
inc
cmp
cmp
mov
dec
dec
cmpsb
sub
dec
add
dec
xchg
das
xor
mov
scas
pop
scas
lods
cltd
mov
jo
or
pop
mov
dec
lret
out
mov
outsb
lcall
movsb
push
jo
enter
jb
pop
jnp
aaa
push
cltd
push
and
mov
mov
pop
add
push
rorb
out
and
into
loope
insl
add
shrb
pop
dec
andb
jb
fsub
push
adc
stos
sub
mov
pushw
lds
dec
mov
jg
jp
fcmovnu
in
outsl
push
leave
mov
dec
outsb
inc
sub
mov
inc
in
mov
popa
sbb
outsb
mov
arpl
testl
push
push
ret
pop
cmp
leave
or
pop
imul
sbb
lcall
gs
sub
push
and
repz
pop
xor
lret
add
call
push
jae
push
add
push
stc
popa
cmpsb
jns
or
mov
xor
and
xchg
dec
jne
add
or
inc
jge
retw
loop
cmp
sbb
int3
jle
mov
loopne
and
test
test
push
add
lods
jae
push
pop
scas
add
sarb
mov
add
push
test
mov
test
pop
mov
xchg
xlat
mov
pop
subb
movsb
or
int
add
cwtl
jmp
aad
lock
ret
inc
inc
push
dec
mov
movsb
jno
imul
mov
cmpsb
push
jae
aas
std
push
cvtpi2ps
adc
cmc
call
pushf
xor
andl
loopne
jo
xlat
negl
mov
mov
pop
shll
sbb
mov
pushf
mov
pusha
sbbl
dec
es
rclb
add
jb
bound
push
stos
nop
int
jb
out
test
sub
adc
pop
xor
push
jne
add
push
jne
pop
sub
adc
xor
lcall
ss
stos
clc
and
jns
out
das
jle
push
jo
or
jae
xor
in
sbbl
sbb
inc
mov
ret
sbb
popf
add
push
rcll
push
xor
addl
add
insb
fdivrl
mov
sti
mov
sbb
mov
scas
mov
sbb
jae
ja
pop
popa
neg
mov
pop
sub
sahf
sbb
push
push
lea
jne
or
sub
add
inc
sbb
xchg
jmp
or
or
enter
outsl
fwait
jecxz
xchg
rolb
or
fwait
dec
roll
pop
xlat
or
adc
popa
mov
stos
testl
addl
lcall
in
push
adc
imul
or
aad
pop
jl
pop
and
scas
stos
lock
and
push
xor
mov
mov
pop
aad
and
push
movsb
sysret
addr16
xchg
mov
call
mov
sbb
mov
icebp
add
mov
cli
push
xor
mov
add
leave
inc
mov
jns
mov
mov
pop
je
jno
or
xor
adc
mov
imul
or
lcall
mov
jp
aam
push
add
jae
call
sbb
sbb
xchg
loope
dec
mov
shll
int
push
push
insb
inc
or
sbb
out
pop
stos
nop
pushf
or
and
or
mov
inc
jmp
fcoml
add
add
loopne
push
pushl
sub
pop
ret
ljmp
rorb
jns
mov
inc
mov
outsl
sbb
adc
add
sbb
push
clc
sbb
jl
data16
or
in
mov
and
push
jae
and
stc
push
stos
pop
into
push
scas
xchg
inc
add
adc
mov
pop
jo
push
pop
sub
sbb
insl
and
sub
inc
xor
adc
enter
or
aam
push
xor
clc
pop
jo
push
xor
add
jb
test
mov
sbb
lock
xor
mov
push
inc
mov
cmp
lock
sahf
ret
jne
mov
mov
pop
mov
inc
les
lock
cli
ficompl
jb
rolw
pop
shlb
add
pushf
push
inc
and
or
add
ljmp
and
push
inc
adc
inc
cmpsb
push
dec
stos
jmp
stos
add
push
xor
jae
jp
or
cmp
xor
popa
cmp
jp
push
mov
mov
imul
inc
jae
rcrb
jns
mov
in
ja
push
xchg
push
or
push
cltd
divb
sub
stos
add
cmp
jge
add
ja
mov
aad
pop
divb
shlb
test
xor
mov
pushf
stos
les
cmpsl
push
es
fwait
popa
dec
or
adc
xor
adc
adc
sbb
and
mov
ss
loopne
add
int
mov
leave
sub
push
add
add
sbb
jecxz
jg
cmpb
testl
mov
and
lret
into
mov
pop
push
rcrl
cwtl
sub
loopne
add
push
mov
mov
and
sub
cli
cmp
int
nop
sub
mov
mov
push
jo
in
shrb
movsl
or
lret
loope
and
push
push
xchg
imul
sahf
pop
add
sbb
and
push
add
cmp
addr16
push
out
pusha
js
adc
add
dec
or
subb
nop
add
xchg
pop
test
or
inc
sub
push
dec
scas
push
or
into
inc
add
add
incl
pop
daa
dec
cmp
inc
pop
test
or
jo
mov
push
mov
pop
push
lcall
xchg
jl
lds
inc
or
push
xchg
pop
cmp
sysexit
out
inc
loope
jmp
int
adc
popa
fsubp
fisubl
sbb
xor
push
mov
movsb
jle
push
pop
push
sarb
push
mov
jmp
push
loopne
cmp
scas
sub
cmovle
out
jb
imul
xchg
push
push
aam
mov
inc
jne
mov
jne
or
in
push
push
in
dec
mov
rcrb
jl
xchg
xor
push
and
xor
dec
add
jno
push
ja
orb
enter
popf
sarb
rcrb
push
les
add
outsl
mov
fisttps
lods
ljmp
sbb
adc
out
cmpb
pop
test
loope
jb
sub
or
je
outsl
mov
leave
insl
das
xchg
movsb
adc
inc
leave
xchg
cwtl
mov
or
ret
in
cmp
gs
xchg
push
pop
xor
pop
adc
jno
push
inc
xor
xor
mov
adc
subb
jnp
int
add
lret
inc
jae
in
jp
int3
aaa
pop
fcmovne
test
mov
jae
xchg
jge
cltd
dec
dec
cmp
pushf
dec
cmpsb
call
xor
loopne
inc
sub
out
dec
push
icebp
adc
push
mov
cltd
and
mov
ljmp
rcrl
popa
bound
test
dec
sbb
sbb
jnp
mov
xor
jae
scas
mov
sbb
pop
inc
mov
subl
jae
cmp
adc
jb
cmp
mov
add
push
xchg
daa
sbb
stos
mov
xor
inc
out
mov
pop
sub
testl
mov
lret
xor
lcall
into
sbb
je
inc
cmp
loope
pop
push
push
push
pop
mov
adc
cmpsl
xlat
test
out
push
add
and
mov
int
xchg
push
stos
pushf
and
xor
dec
xchg
push
shl
icebp
adc
adc
sbb
xor
mov
in
loopne
fcompl
stos
sub
cmp
push
std
aaa
shrb
add
dec
jle
mov
mov
cld
inc
or
dec
xor
jno
popf
push
daa
cmpb
pop
enter
sbbb
or
mov
lods
or
cld
pop
mov
lock
mov
cmp
push
cmp
daa
xor
and
aas
in
sbb
pop
jns
rolb
movsb
pop
fiadds
push
sbb
mov
adc
sub
xchg
and
in
and
jae
shlb
lcall
aam
push
into
jmp
jbe
addr16
jo
lret
xor
adc
push
xor
mov
add
mov
adc
dec
sbb
mov
js
mov
sbb
mov
scas
pop
add
push
or
jae
rcl
push
imul
cmp
inc
cmpl
enter
mov
inc
sbb
lds
aam
jnp
or
push
cmpsb
lea
xor
adc
pop
cltd
pop
ljmp
push
push
jo
push
mov
xchg
leave
rcrl
xchg
rolb
xor
inc
mov
push
aam
fisubl
sub
inc
jl
inc
add
shll
xchg
sub
inc
push
and
stos
adc
cmp
or
int
filds
mov
mov
xchg
sbb
sub
mov
xor
add
or
mov
mov
movsb
dec
cmpb
mov
test
mov
into
add
sbb
sbb
mov
adc
movb
adc
cmpsb
push
out
xchg
mov
sub
les
cld
fcmovbe
push
xor
cmpl
enter
inc
fisttps
mov
faddp
mov
lock
push
out
mov
aam
mov
xchg
adc
gs
repz
pop
lret
push
js
xchg
push
dec
test
lcall
mov
xlat
and
test
mov
xchg
cmp
pop
push
je
push
dec
mov
and
mov
dec
cwtl
and
push
xchg
andl
pop
jo
pop
lods
jp
mov
push
jo
xor
cltd
mov
inc
add
ljmp
adc
outsb
jmp
push
sub
pop
jo
push
xor
xor
dec
sbb
mov
xlat
sbb
jg
xchg
lods
sbb
mov
test
cmp
mov
pop
loop
imul
push
adc
mov
pop
jae
push
add
adc
xchg
int
test
xor
jecxz
lcall
data16
in
jl
cltd
jb
ss
dec
into
lds
jmp
fs
jne
sbb
or
js
push
sub
mov
lret
sbb
dec
adc
fsub
clc
push
andl
loopne
or
or
sbb
jl
inc
in
sub
and
sahf
aad
push
push
lcall
sbb
stos
rcll
xchg
sbb
faddl
stos
mov
mov
rolb
pop
mov
sbb
add
loop
int
stos
sbb
xor
out
jo
push
add
int
cmp
dec
lea
imul
sti
mov
jb
notb
add
dec
push
out
mov
mov
das
pop
jo
lock
jge
push
push
mov
push
adc
in
pop
dec
push
into
insl
das
sbb
insl
imul
cmp
orl
mov
nop
jo
mov
pop
pop
cmp
ror
xchg
or
xchg
std
sub
xor
dec
repnz
roll
sbb
push
or
movsl
sub
repnz
aam
jge
push
lock
gs
out
push
jo
xchg
fadds
imul
cmpb
or
mov
adc
es
outsb
fisubl
push
add
sbb
aam
xor
xchg
mov
fwait
ljmp
mov
pusha
and
xor
je
mov
in
es
pop
xchg
adc
pop
or
push
mov
adc
xchg
loop
ret
mov
add
aaa
jo
pop
push
add
test
lea
in
sub
inc
dec
xchg
xlat
push
dec
shll
pop
cmp
inc
jae
push
sub
mov
stos
pushf
lret
subb
and
rcrl
cmp
sub
outsl
cmpsb
jmp
sub
mov
ret
xchg
pop
sub
xor
add
pop
jmp
mov
pusha
jae
in
push
xor
fcmovb
sbb
fs
cmp
mov
xor
aad
xchg
ret
cmp
mov
les
cli
idivb
addr16
hlt
mov
or
ljmp
nop
aaa
scas
test
fsub
or
js
notb
or
cmp
dec
cmp
sub
sub
lret
xor
fldenv
add
sub
pop
mov
add
mov
jno
push
int
mov
jns
call
add
inc
cmp
test
add
sub
lcall
loop
jb
push
and
movsl
cmp
push
and
ss
or
inc
and
xor
add
lret
aad
inc
cmp
xor
jns
push
out
stos
stos
dec
int
mov
enter
jns
or
mov
xor
nop
push
shlb
dec
dec
loopne
pop
out
sbb
jne
xor
frstor
mov
mov
cmp
push
jl
sub
or
int3
push
adc
leave
xor
pop
adc
xchg
inc
mov
mov
test
sub
push
xchg
rolb
cmpsb
add
mov
mov
or
dec
xor
mov
scas
int
int
xorb
xchg
push
sub
mov
leave
mov
add
xchg
dec
inc
sbb
lock
cmp
test
das
mov
and
test
mov
and
mov
xchg
cmp
orb
sub
cmpsb
cmpb
add
cld
push
stc
sub
adc
push
outsb
sbb
ds
cmpsb
dec
fs
ficoml
and
outsl
cli
ss
movsl
jmp
loop
mov
fimull
or
xchg
push
jg
mov
sbb
inc
mov
lret
xchg
lret
adc
push
inc
mov
movsl
xchg
pop
push
xchg
or
xor
sbb
mov
into
cmc
add
cmp
mov
aam
ret
test
push
lcall
dec
arpl
test
aas
pop
dec
aam
cltd
push
in
sub
add
pop
in
push
ficomps
test
out
ror
jmp
mov
inc
cmp
popa
mov
popa
test
mov
jl
call
pusha
add
pop
loope
adc
ret
mov
and
sbb
pop
mov
or
cltd
movl
sub
mov
pushf
mov
popa
jo
mov
fidivs
adc
loopne
orl
or
push
movsb
sbb
jne
lret
lea
jb
inc
cli
rcll
lcall
test
mov
mov
sbb
xchg
shll
ja
rcrb
clc
int
ret
mov
aaa
lret
pop
lea
fs
test
les
shll
push
jle
movsb
push
xchg
inc
adc
lret
push
add
gs
inc
dec
sbb
nop
stos
fidivrs
mov
cmpsl
push
sbb
xchg
aad
imull
test
pop
les
dec
push
xchg
xchg
push
adc
scas
push
jo
sbb
cld
fimull
inc
inc
mov
and
cs
lcall
jecxz
in
and
lret
xlat
movsb
out
xchg
xor
aas
sbb
scas
shll
jae
addr16
jecxz
sbbl
leave
push
in
push
jecxz
data16
xor
in
sub
in
inc
call
shrb
jg
adc
push
das
aad
loopne
and
push
sub
xchg
jae
lret
adc
jo
adc
fildll
jo
xchg
push
jnp
or
sbb
sbb
add
or
sub
mov
push
movsl
pop
lret
outsb
adc
iret
push
lds
aad
push
cmpsb
aam
pop
sub
mov
jo
stos
push
int
sub
imulb
imul
jo
push
push
mov
test
and
push
inc
pusha
ljmp
cmp
mov
inc
pop
imul
repnz
insb
add
scas
dec
out
shll
adc
jno
or
stos
sbb
jl
pop
into
aam
loope
stos
les
jle
push
dec
subl
inc
inc
mov
jns
loope
inc
xor
push
cmp
daa
lock
push
das
add
fxch
lea
js
xor
andl
sub
fisubl
xchg
sti
push
lds
test
pop
dec
sbb
movsb
pushl
inc
mov
lods
movsb
push
mov
jl
pop
scas
sbb
addr16
repz
push
movsl
add
aad
mov
jae
movsl
mov
outsb
das
push
sbb
insl
pop
jmp
jl
pop
mov
jl
jl
cmpsl
loopne
imul
mov
sub
lea
inc
cmpsb
out
ret
int3
lea
push
sub
ffreep
push
add
stos
sbb
pop
jl
mov
mov
ret
or
xor
mov
shl
adc
cmp
test
in
push
add
cmp
adc
adc
add
jbe
shll
xor
jnp
sub
pop
inc
add
outsl
int3
pop
push
sub
cwtl
push
incl
pushf
orl
lret
lahf
loope
push
mov
jb
or
daa
jl
bound
negl
or
push
jo
mov
mov
xor
and
loope
das
nop
adcl
test
lods
push
xchg
or
mov
call
dec
jg
int
sub
xor
pop
cmp
std
mov
push
int
push
pop
push
fstps
test
pop
jl
pop
loope
adc
jbe
adc
test
cltd
add
rcll
add
mov
mov
xchg
sbb
les
pusha
rclb
or
movsb
test
pop
int
mov
xchg
call
pushf
push
popf
stc
add
cwtl
ret
and
mov
jno
dec
repnz
push
loopne
jecxz
aaa
dec
push
movnti
inc
cwtl
sub
or
push
mov
mov
cmp
mov
pop
cwtl
es
and
aam
stos
std
cwtl
cld
dec
cld
lahf
or
jns
xor
testb
or
push
push
adc
hlt
and
lret
jno
subl
mov
les
sbb
out
dec
loope
xchg
insb
fmul
cmpsb
test
aad
mov
mov
loop
inc
sbb
or
inc
movsb
or
cltd
enter
jmp
jno
sub
mov
push
sbb
imul
divb
cmp
xchg
jo
repz
or
add
scas
add
dec
enter
mov
jmp
adc
je
mov
xor
rcrl
and
push
jecxz
aad
mov
cmova
popa
lret
adc
enter
mov
dec
es
stos
shll
sarl
jp
aas
sbb
jno
jecxz
mov
cmp
dec
jo
jb
push
jmp
sbb
push
addr16
adc
sub
jns
xor
and
lret
pop
iret
imul
outsl
jg
dec
cltd
or
mov
adc
push
or
pusha
lcall
add
push
cmp
cmp
xor
xchg
xor
add
sahf
popf
lcall
push
dec
scas
sbb
loope
jae
imul
int
xor
enter
add
or
cmp
jne
loopne
xchg
push
fsub
arpl
mov
mov
test
jbe
sbb
cmpsb
loopne
lds
std
mov
push
xchg
lcall
ret
test
cwtl
sbb
rclb
jmp
and
xor
sbb
rcrb
sub
aam
jb
int
push
sub
andl
add
out
push
or
das
ret
push
inc
mov
lahf
xor
sub
in
dec
daa
stos
push
inc
cmp
xchg
add
pop
rcl
stos
bound
std
int
add
push
jae
jbe
inc
xchg
mov
mov
sub
arpl
int
int
add
subl
mov
push
test
mov
mov
push
pop
xchg
movl
es
das
adc
pop
sub
push
pop
scas
inc
sbb
ja
ljmp
imul
xchg
mov
dec
add
adc
lretw
arpl
cltd
pop
push
cmp
retw
sub
test
mov
out
popf
push
inc
add
into
xchg
icebp
stos
pusha
sub
pop
and
and
adc
ljmp
fnstenv
xor
cs
cld
pop
mov
or
in
aam
popf
mov
in
subb
dec
popf
lock
and
jb
or
leave
rclb
shll
loopne
push
or
std
xchg
or
inc
ljmp
mov
fwait
cs
adc
push
cmpsb
xchg
ret
loope
xchg
in
dec
sub
sbb
in
push
push
cmpsl
clc
std
push
jmp
loop
cmpl
in
mov
sbb
decl
lret
mov
pop
shlb
cmp
hlt
addl
xor
ljmp
gs
xchg
test
jmp
mov
inc
test
xor
mov
rclb
repz
test
scas
push
cmp
cwtl
fldcw
movl
leave
subb
cmpb
sbb
sub
in
adc
push
push
inc
push
stos
out
xor
adc
adc
push
mov
dec
pusha
xor
insb
test
popa
inc
loop
in
xchg
sbb
loopne
mov
push
loopne
in
lea
orb
pop
out
xor
xchg
push
pop
dec
and
movsl
outsl
xor
push
add
sbb
mov
dec
inc
loopne
arpl
jmp
adc
and
imul
push
dec
sub
add
add
sbb
ret
das
adc
loope
lock
inc
sbb
push
test
or
or
les
lcall
sub
adc
inc
inc
stos
lret
rcr
push
mov
xchg
mov
mov
out
jo
xor
data16
or
pop
sub
sbb
out
mov
sbb
xchg
lds
lcall
cmp
mov
cwtl
leave
inc
scas
test
sbb
push
out
sbbl
js
movsb
mov
cmp
xor
in
loop
lret
inc
testb
xlat
inc
sbb
adc
cmp
xchg
movsb
aaa
lret
inc
mov
ss
and
mov
mov
addl
lret
in
push
aas
xor
sbb
push
push
cwtl
cmp
movsb
fisubl
lods
jl
imul
scas
andb
stos
out
in
add
xor
mov
pop
ret
dec
push
popa
fcomps
je
mov
jb
mov
dec
aam
fadds
adcb
or
lret
add
test
sarl
or
stc
dec
xlat
or
mov
xor
lcall
lods
loope
or
inc
or
aad
and
jnp
rcr
adc
push
pop
jbe
mov
mov
iret
scas
adc
sbb
cmp
or
push
mov
pop
cmp
jb
fadds
loope
push
outsl
xor
pop
cwtl
jb
es
adc
jge
jo
jo
clts
rcrb
and
je
in
or
test
fs
hlt
rolb
or
jp
push
adc
mov
stc
aam
mov
push
daa
cmp
push
adc
cmp
icebp
xchg
adc
or
adc
add
cli
fcompl
sub
inc
and
fwait
add
cmc
xchg
sbb
lcall
or
stos
cmpsb
mov
push
add
ret
in
ja
sbb
test
dec
fs
jae
mov
push
sub
outsl
dec
push
aas
mov
dec
fsts
sub
jecxz
call
mov
xchg
stos
dec
push
loopne
fcoml
stos
xchg
clc
daa
mov
push
insl
add
push
dec
mov
or
push
add
push
ja
xor
or
icebp
dec
cli
aas
mov
push
push
ss
pop
pushf
outsl
sub
or
das
cmp
pop
sub
sub
fsubs
add
or
aad
out
mov
or
popl
ss
sub
sub
push
sbb
hlt
pop
scas
sbb
scas
pusha
jmp
sub
pushf
jo
jo
xor
or
mov
xor
stos
dec
mov
sub
mov
and
mov
add
inc
xor
mov
pop
jno
sbb
mov
xchg
push
dec
cmp
leave
pop
imul
popa
pop
popa
push
sub
das
subl
popa
mov
pop
and
cmpsb
gs
imul
lahf
scas
xchg
jge
push
sbb
jb
iret
mov
mov
daa
mov
stos
je
xlat
pop
jnp
outsl
mov
ret
loope
in
dec
mov
xor
pop
mov
mov
les
lret
push
int
andb
jns
iret
stos
xor
fidivs
ret
jno
jge
sub
cmpsl
jmp
push
sbb
fdivrl
orb
or
mov
jnp
sub
jae
xchg
enter
insb
and
fwait
push
inc
xor
pop
sbb
loope
idivb
movsb
mov
xor
mov
in
sar
mov
inc
mov
push
dec
sbb
and
inc
mov
and
dec
jb
xchg
jp
push
and
adc
sub
add
sbb
or
out
popf
push
and
clc
enter
sbb
stos
jp
mov
add
shlb
dec
in
mov
add
add
test
jo
mov
pop
add
jnp
inc
or
scas
xor
clc
pushf
xchg
ret
jno
gs
push
add
sub
fwait
add
pop
addr16
fwait
test
scas
pop
xorb
sbbl
lock
mov
xchg
sbb
push
loopne,pt
or
cs
and
jno
add
xor
cmp
xorl
sbb
iret
sbb
adc
cmpl
mov
and
ret
gs
inc
inc
enter
mov
rcl
sub
sarl
xlat
xchg
sub
mov
sbb
pop
movsl
mov
jae
push
jno
fsts
ret
push
push
pop
mov
or
push
or
test
aas
cwtl
jle
push
or
mov
adc
repz
dec
sbb
cmc
add
movsb
ja
enter
mov
daa
mov
sbb
or
add
decl
mov
add
popa
sbb
xchg
or
push
cmpsb
out
xchg
sbb
cwtl
shrl
jae
stos
scas
lcall
sbb
inc
or
cmp
mov
push
pop
cmp
jo
daa
stos
jae
scas
adc
jno
jbe
mov
mov
mov
cmp
into
test
or
inc
push
test
pop
xchg
mov
nop
push
stos
cltd
sbb
push
adc
cltd
stos
jo
hlt
xchg
ja
popa
and
jnp
addb
xchg
or
push
addr16
test
cwtl
add
js
into
fwait
stos
cli
in
mov
push
sub
adc
adc
idiv
add
dec
sub
inc
dec
adc
mov
jne
mov
sub
sti
sub
pop
pop
incl
cmpsb
mov
cmp
push
roll
or
xor
in
andb
mov
imul
cmp
aad
adc
xor
pop
xor
pop
pop
imul
in
int
cmpsl
pop
pop
cmpsl
stos
mov
or
push
pop
cltd
fucomi
dec
adc
xor
push
data16
add
shlb
rolb
push
mov
orb
das
cli
mov
cmp
insl
sbb
orl
push
pop
cmc
cmp
fwait
fstl
sbb
and
aam
mov
ret
outsl
mov
ja
stos
and
into
jne
shll
and
xchg
xor
push
pop
mov
lret
sbb
push
lock
mov
rclb
rclb
popa
or
ret
add
in
pop
dec
inc
imul
iret
mov
loopne
add
mov
push
add
scas
push
int3
sub
inc
lret
sbb
inc
loope
cmp
push
mov
sbb
in
in
int
jb
sarb
dec
gs
dec
arpl
mov
sbb
jb
and
rclb
pushf
xor
rolb
jl
inc
rcl
add
push
fnstsw
mov
test
adc
add
mov
dec
adc
dec
in
pop
xchg
int
adc
jo
jo
mov
add
idivl
pushl
in
fs
jo
test
xor
ret
std
clc
sbb
bound
jle
push
dec
sub
add
in
retw
in
mov
clc
push
add
adc
sbb
adc
filds
adc
push
mov
push
push
test
push
mov
addb
dec
mov
ss
sbb
cltd
sub
push
pushf
outsl
shlb
push
popa
stos
add
fidivrs
repz
dec
outsl
test
cmp
adc
scas
test
mov
in
cwtl
inc
fisubrs
add
sub
push
sub
sbb
mov
and
add
cmp
cmp
sbb
adc
push
mov
xchg
nop
or
sbb
add
pop
inc
cld
push
cmp
and
lahf
mov
pop
add
lcall
xchg
movsb
stos
sbb
in
stos
pop
mov
andl
sbb
jnp
sbb
es
rorl
mov
jne
and
rorl
push
or
mov
int
or
adc
adc
cmp
movsl
mov
cmp
inc
imul
pop
jno
xchg
loope
push
mov
outsl
xor
aad
and
mov
cmpsl
sbb
fwait
xor
add
sub
ja
inc
or
pop
loope
push
inc
jae
ljmp
mov
dec
mov
js
nop
stos
mov
les
add
adc
or
mov
push
pop
int
inc
loope
xchg
stos
pop
sbb
test
fstps
jb
cwtl
dec
imul
decl
xchg
movsb
adcl
add
call
push
sbb
mov
cmpsb
dec
push
fmul
pop
ss
sub
movsb
push
add
stos
mov
push
gs
push
cmp
xchg
outsl
dec
fildl
add
jne
push
mov
jbe
add
lcall
adc
aas
lret
pop
sub
jo
xor
or
jb
mov
faddl
inc
add
popa
mov
xchg
lret
pop
cmp
sbb
pop
sarl
sbb
inc
das
push
lods
xor
pop
sub
cmp
mov
loope
das
mov
mov
jge
pop
subl
xchg
add
aas
mov
dec
mov
jae
push
sub
inc
into
adc
in
ret
adc
pushf
dec
xabort
push
xchg
lcall
cmp
and
cmpsb
adc
dec
mov
mov
rcrl
jo
fldenv
cmp
add
and
push
stc
mov
jae
push
mov
ret
xchg
mov
xchg
xor
in
adc
aam
cld
adc
xor
cs
std
dec
popf
sbb
shrl
cs
jne
add
dec
gs
pop
inc
movsl
push
cmpsb
out
push
sub
add
add
mov
mov
ret
sbb
push
adc
cmp
jno
mov
xlat
aam
cmp
add
pop
lods
pusha
movsb
aaa
das
into
subl
mov
aam
mov
add
pop
nop
mov
push
dec
and
ret
add
pop
jecxz
bound
cmp
sti
and
add
or
pop
mov
mov
shlb
cmp
faddl
mov
xorb
inc
popa
jae
jnp
ss
add
dec
sub
loope,pt
mov
sbb
fisubl
lcall
dec
test
stos
jo
xchg
lods
lret
inc
int
sbb
jp
je
mov
inc
addb
pop
xchg
mov
push
mov
dec
int
xor
lods
inc
movl
cwtl
pop
mov
pop
adc
jo
xchg
mov
push
das
mov
mov
mov
jae
mov
lret
cmp
mov
cmc
scas
xchg
or
xor
dec
into
test
xor
add
add
add
sbb
xchg
mov
inc
xor
cltd
dec
xor
and
pop
and
cmp
subb
add
rdtsc
sbb
sbb
inc
int
mov
imul
jmp
js
inc
scas
or
and
push
xchg
test
js
shll
cmp
int
iret
xor
jae
sbb
xor
out
lcall
fldenv
inc
jnp
pop
adc
es
sub
aam
or
dec
daa
add
mov
inc
add
and
sbb
addb
mov
sbb
adc
and
inc
into
fadds
shrb
add
xor
dec
mov
push
dec
aad
in
test
ret
mov
maxps
xchg
push
jae
mov
xchg
movsl
mov
leave
test
lahf
push
call
cmpsl
in
pop
xor
mov
add
dec
push
stos
lcall
aam
sbb
loopne
push
inc
push
imul
sub
sub
push
inc
es
jne
push
and
in
lods
movsl
shrb
ret
inc
daa
pop
movsl
pop
es
add
push
es
push
hlt
xor
loopne
enter
mov
rorb
test
adc
nopl
cmc
daa
dec
popf
push
rolb
jl
sbb
cs
adc
xor
mov
mov
hlt
push
adc
sbb
dec
push
into
lcall
scas
ja
or
mov
xchg
mov
push
push
mov
xlat
adc
inc
add
pushf
mov
and
test
cmpsb
and
cmpsb
sbb
xor
push
stos
pop
and
mov
cmp
sbb
or
xchg
in
mov
xchg
jge
and
unpcklps
sbb
sahf
scas
int3
or
mov
mov
mov
out
idiv
pop
xlat
push
imul
int
shl
scas
sub
out
sbb
jno
sbbl
xchg
mov
stos
cmc
pop
stos
inc
xchg
add
push
xorl
or
jge
mov
sbb
or
movsl
leave
push
push
cmp
rcll
cmpsb
pop
or
xchg
shll
fsubs
aad
cmp
in
inc
test
loope
popa
call
jno
in
imul
add
jge
or
or
or
data16
sbb
loopne
add
pop
orb
sarl
xchg
and
xor
xchg
stos
add
push
sbb
mov
lret
sub
jo
push
loope
enter
and
pushf
pop
add
or
cltd
insl
add
sbb
roll
xchg
add
xor
andl
xlat
lods
out
push
int
movsb
sbb
add
lock
xchg
sbb
inc
jmp
mov
ljmp
add
shrb
add
and
lret
and
push
mov
std
jnp
push
in
push
lret
cltd
jo
sarl
out
xor
inc
bound
sbb
jle
mov
dec
scas
mov
adc
faddl
sbb
cmp
rcrl
daa
inc
push
rcrl
and
out
push
jnp
xor
sub
jno
add
push
icebp
pop
sub
movl
mov
cwtl
stos
sub
sbb
xor
daa
and
mov
rolb
nop
lea
iret
cmp
mov
or
movb
cmp
aad
movsb
jle
cwtl
lcall
mov
aas
test
sub
mov
aas
insb
scas
test
pop
test
mov
xchg
test
push
adc
fisttpll
mov
sbb
icebp
mov
mov
pusha
jmp
dec
push
int
mov
out
push
daa
test
mov
add
adc
mov
or
negb
insl
loop
push
popf
stos
dec
in
mov
or
jle
push
pushf
adcl
push
xchg
loopne
mov
mov
inc
cmp
jp
add
insb
in
jb
cli
pop
outsl
or
xor
lret
cmp
push
movsb
iret
sub
mov
jbe
inc
push
adc
xchg
lret
jb
sahf
mov
xor
call
ret
aam
pop
and
xchg
jae
scas
lret
stos
sbb
push
lods
fwait
inc
in
add
daa
ds
rcl
loopne
push
lret
leave
inc
add
nop
sarl
pop
sbb
adc
lods
enter
insb
outsl
jl
inc
or
pop
stos
pop
or
mov
mov
fldenv
pop
cmpb
daa
and
and
stos
pop
imul
gs
add
clc
push
pop
jl
lds
lods
ljmp
shl
sub
xorb
mov
xor
xlat
dec
push
inc
fnstcw
nop
es
or
outsb
inc
hlt
add
sbb
not
icebp
filds
cmp
cmpsl
rcrl
mov
test
xor
add
data16
mov
movsl
stos
xor
pop
push
jb
mov
imul
enter
jmp
add
mov
popf
xor
jo
jne
xlat
pop
pusha
jo
mov
enter
scas
and
mov
push
mov
rorl
sbb
sub
and
push
les
nop
mov
jae
in
lcall
xchg
pop
jmp
pop
xchg
data16
mov
adc
or
push
jne
xchg
sub
dec
stos
aad
xor
mov
enter
sbb
xor
out
mov
cmpsb
pop
ret
inc
adc
or
mov
sub
in
inc
outsl
inc
repz
pushf
ret
notb
dec
push
cs
scas
inc
jg
ljmp
jg
xlat
inc
scas
data16
pop
xor
jl
cs
push
lcall
add
clc
xchg
and
rorl
out
sbb
cmp
sbb
jmp
sbb
cmpsb
pop
cli
lcall
xor
mov
jnp
jns
gs
jae
push
cld
cmp
movsb
sub
mov
pushf
movl
push
push
incb
push
pop
mov
push
sub
add
inc
inc
sbb
sub
loopne
add
push
test
and
out
imul
xor
jo
enter
daa
pop
popa
xor
lcall
pop
shl
xchg
dec
mov
add
pop
mov
push
or
mov
or
inc
aad
in
sbb
xor
jb
mov
pop
jno
in
and
inc
push
jb
mov
xor
decb
mov
add
and
test
enter
arpl
test
test
dec
inc
cwtl
cmp
dec
in
mov
push
jne
jb
adc
sbb
subl
mov
sbb
in
inc
xor
xor
stos
add
push
push
inc
lcall
push
out
aad
sub
push
and
imul
jge
push
inc
pop
add
es
add
add
mov
icebp
cmpsl
aas
pop
pop
push
ret
add
dec
and
push
pop
and
or
es
cwtl
or
out
jno
orb
or
cs
cmpsl
dec
xchg
addr16
add
addr16
out
es
lcall
xor
ret
or
ljmp
jbe
pop
ret
mov
scas
adc
call
andl
sub
mov
pop
stc
subb
mov
out
xchg
xchg
inc
push
pop
xlat
add
or
test
push
inc
lahf
in
pop
fwait
add
mov
lock
cwtl
adcb
lods
aaa
add
push
sarb
test
xchg
add
bound
or
movsb
adcb
add
inc
pop
dec
push
scas
pushl
cmp
cmp
es
ret
ss
add
popa
test
cmp
shrl
shll
adc
xchg
sub
cli
mov
fldenv
fistpl
push
jp
sbb
rcr
mov
add
cmpsl
outsl
aad
inc
movlps
jns
inc
cs
mov
mov
or
pop
add
pop
adc
test
xlat
push
clc
and
es
add
push
imul
inc
cmp
fs
cs
adcb
pop
movsb
pop
xchg
enter
cmp
xorl
jl
call
les
push
call
je
sbb
sub
mov
xchg
lcall
add
imul
sbb
orb
push
lcall
repnz
daa
mov
push
cmp
sbb
push
cmp
sbb
aas
sbb
dec
or
inc
jmp
xchg
add
xor
mov
dec
sub
jno
and
mov
mov
cmp
adc
into
mov
test
add
mov
mov
sbb
int
xor
and
stos
repnz
cmp
jb
mov
jne
popl
pop
add
mov
or
rcrb
cld
fwait
xor
xor
pop
xchg
xor
or
push
cmpsl
outsl
jb
push
xor
adc
and
cmp
or
inc
push
sbb
inc
mov
and
adc
add
sahf
rorl
mov
or
in
jo
adc
outsb
mov
jl
iret
add
fcoml
pushf
jmp
popa
mov
adc
or
push
dec
mov
adc
mov
jp
and
add
push
push
adc
xor
jb
add
das
lret
jae
ret
add
inc
sbb
inc
push
push
out
inc
mov
push
test
insl
push
pop
push
mov
inc
std
pop
ret
sub
jecxz
in
inc
mov
inc
sbb
push
icebp
mov
sbb
jo
divl
rol
add
xchg
inc
loopne
and
js
stos
add
outsl
add
stos
rolb
inc
add
sub
and
pop
inc
and
push
add
mov
mov
inc
inc
mov
push
jle
xlat
jo
jo
mov
cmp
xor
xchg
or
aad
rcll
je
sbb
mov
popa
lods
call
in
xor
jae
dec
popa
adc
cmp
xchg
jg
xor
pop
scas
out
pop
test
ret
mov
fsub
pop
or
test
or
notl
fsubrs
into
push
int
shr
fwait
into
je
push
push
adc
add
rcrl
xchg
lock
push
in
push
cmp
pop
xor
pop
push
into
mov
dec
into
nop
lods
int
icebp
popa
add
rolb
stos
adc
push
int
sub
inc
cmp
cmp
popf
or
xor
jo
pop
mov
es
popa
cmp
js
data16
adc
push
add
dec
test
sbb
sbb
push
jge
xor
shrl
lcall
sub
xchg
lods
pop
mov
adc
scas
xor
shrl
sub
gs
sbb
push
rcrb
sub
push
and
ja
enter
push
push
push
xchg
cmpb
and
inc
cmp
xchg
sarl
jo
call
ss
and
out
clc
mov
clc
ds
jb
adc
push
add
inc
pusha
stos
push
add
mov
mov
push
cs
push
xor
and
pop
adc
cmp
xlat
out
scas
cmpsb
jb
or
sbb
push
sbb
cmp
push
das
inc
jg
sbb
stos
xor
sahf
xor
or
lea
add
jl
lods
stos
push
cmpsb
jb
dec
std
cwtl
mov
mov
push
mov
xlat
andb
push
loope
lods
repz
popf
sub
andl
add
inc
jmp
pop
test
pop
addr16
xor
xor
std
sarl
es
inc
loope
ret
lret
ljmp
mov
inc
mov
out
add
cli
xor
sub
add
xor
lods
test
inc
add
xchg
pushf
and
push
je
into
sub
xchg
push
js
and
stos
add
add
mov
test
loopne
scas
out
insl
sub
or
push
mov
jae
lahf
sbb
cld
pop
mov
fiaddl
pop
adc
sbb
mov
test
ret
dec
movsb
jecxz
loope
push
cltd
or
cmpsb
js
sub
jg
cmp
adc
negb
dec
out
jecxz
push
test
push
scas
xor
and
das
or
lock
hlt
rorb
test
imul
rcrl
movsb
ljmp
adc
or
shl
sti
daa
js
push
dec
xor
add
xchg
test
lcall
inc
out
out
xchg
mov
push
fwait
sbb
aad
sbb
scas
neg
add
push
pop
popf
cmp
orb
stos
int
sbb
jnp
sbb
cltd
pop
leave
ljmp
inc
jne
jo
pop
add
inc
sbb
add
add
lods
dec
sbb
mov
adcb
fmul
push
xchg
add
popa
add
pushl
subl
sub
adc
sub
ret
add
dec
gs
adc
inc
and
rcrl
jne
add
inc
and
pop
shll
je
scas
inc
pop
mov
lds
push
adc
add
add
lods
xchg
stos
test
jne
sbb
push
xor
lods
dec
push
cmp
mov
adc
rcr
xchg
pop
in
popl
dec
adc
imul
or
rcrb
push
dec
test
lock
jo
rcrb
clc
icebp
or
imul
mov
sub
mov
or
push
cmp
icebp
push
adc
dec
mov
cmp
sbb
jl
pop
inc
movsb
mov
or
orl
jecxz
outsl
add
call
lret
pop
movsb
add
das
jne
mov
pop
push
es
ljmp
adc
xchg
stos
pop
mov
imul
xchg
xchg
out
push
jl
add
push
addb
decb
pusha
add
test
cmp
mov
xor
inc
sub
xor
add
pop
in
mov
xor
lret
lea
jbe
sbb
jb
icebp
ffreep
or
call
jb
mov
rcl
cmp
ret
jge
rcrb
jnp
shlb
aas
je
xor
xchg
sbb
add
ret
popf
mov
outsb
pop
int
sbb
loopne
cmp
mov
sbb
in
inc
add
fsubs
outsl
push
adc
rclb
jae
es
imul
mov
fidivl
xor
shlb
adc
in
mov
fimull
mov
ds
cs
lea
xchg
test
scas
or
jl
out
jo
mov
cld
add
cmp
cmp
nop
cwtl
orb
mov
pop
aad
mov
xchg
stos
cmp
pusha
pop
inc
xor
jno
test
fldenv
test
add
es
mov
cmp
stos
fwait
and
and
test
orl
mov
repz
push
and
cmp
popa
orb
add
gs
lret
cli
jecxz
xchg
scas
mov
inc
inc
mov
ljmp
mov
cld
fisttps
xchg
lds
jo
sub
mov
push
mov
pop
push
dec
sub
adc
lea
mov
push
dec
cmpsl
inc
pusha
clc
sub
xlat
dec
decl
jne
cwtl
push
les
cmp
sub
call
cmp
test
mov
xchg
into
sbb
or
gs
test
movsb
pushf
pop
xchg
mov
pop
fdivrs
scas
xor
adc
dec
enter
sbb
mov
push
sub
loope
sub
in
stos
inc
mov
stos
cmc
add
pop
adc
stos
ret
imulb
sbb
mov
sub
adc
xor
loop
pop
es
pop
sbbl
push
loopne
xor
cmp
cmp
jno
mov
rclb
mov
sub
das
push
xor
xor
jnp
mov
hlt
je
jo
jne
add
sahf
and
mov
sbb
pop
pop
mov
cmp
jo
mov
push
push
test
call
xchg
adc
inc
jae
adc
push
femms
or
mov
mov
pop
ljmp
in
cmp
mov
dec
pop
pop
rorl
inc
sbb
pop
cmp
dec
cmp
sbb
jb
sub
cmp
mov
and
or
jb
pop
sbb
pop
movb
sbb
mov
add
xchg
mov
jo
or
out
jnp
outsl
mov
cmp
sbb
jae
mov
subl
pusha
inc
xor
xor
jb,pt
pushl
es
in
call
mov
add
sbb
mov
dec
or
rcrl
rcl
xchg
xor
dec
push
int
push
in
cs
mov
jl
pop
nop
add
ret
subl
aaa
inc
cmp
nop
xchg
mov
or
int3
inc
inc
xorl
xchg
jl
push
cmp
xor
out
add
xor
pushf
inc
push
clc
jmp
xlat
add
inc
add
push
stos
or
shrl
enter
add
mov
jbe
out
pop
shlb
mov
inc
shr
lock
push
mov
cmpl
adc
sbb
xchg
xor
mov
test
push
mov
das
or
dec
xorl
cwtl
mov
addr16
xor
mov
rorl
pop
xor
adc
mov
xlat
push
cmp
mov
es
mov
int
mov
sbb
shrl
arpl
and
test
cmp
gs
pop
movsb
popa
cmp
and
insl
dec
inc
xchg
imul
cltd
xor
outsb
gs
cltd
pop
sbb
sub
andb
scas
rorb
jp
rclb
roll
popf
popf
push
test
test
push
or
or
mov
xor
or
xchg
mov
mov
xchg
loop
push
andl
dec
scas
cltd
jo
push
sahf
push
aam
pushl
pop
mov
jne
mov
iret
daa
mov
push
inc
cs
sbb
mov
dec
or
aad
cmp
loope
or
xor
mov
out
outsl
adc
int
adc
xchg
jecxz
rorb
nop
push
ja
pop
sbb
fs
rolb
nop
or
pop
in
imul
pop
stos
sbb
add
rorb
pop
cltd
jb
lahf
sbb
sbb
adc
cmp
out
adc
push
jo
mov
pushf
cmpl
icebp
hlt
mov
enter
outsl
adc
scas
sub
mov
mov
or
or
fs
mov
loope
mov
mov
mov
cs
mov
clc
xlat
test
pop
mov
sbb
out
add
cwtl
insl
ljmp
xorl
push
out
or
mov
add
andb
insb
fsubl
test
or
push
mov
rcrl
jo
lcall
inc
loopne
inc
das
hlt
xchg
gs
pop
cmp
jp
ljmp
jb
push
pop
add
or
sbb
add
jge
push
lret
sbb
into
adc
andl
into
andb
cmp
loop
pop
scas
lods
add
cli
outsl
test
jle
push
cmpsl
inc
sub
pop
add
popf
cltd
push
ss
idivb
sbb
add
mov
sbb
pop
push
jne
ret
pop
push
and
loop
dec
jbe
int
push
orb
push
push
std
push
push
push
fxch
movl
rorl
add
jg
inc
adc
insb
jno
add
mov
sti
sub
add
cmc
and
add
mov
test
adc
sarl
sbb
pop
out
out
xchg
out
pop
mov
dec
mov
push
fimull
test
sbb
and
int
inc
mov
cltd
pop
daa
mov
cltd
add
shlb
inc
div
lret
lret
icebp
push
dec
push
mov
dec
dec
dec
adc
jle
es
sbb
sub
cwtl
into
cltd
pusha
mov
xor
add
and
sbb
push
or
or
data16
sub
sbbb
push
je
pop
imul
add
cmp
int3
sbb
inc
mov
cmp
inc
rcll
add
adc
in
sbb
sbb
lret
sub
jo
sti
mov
pop
stc
and
push
jae
add
mov
inc
jl
call
dec
mov
pop
loope
push
adc
pop
xchg
cmpl
cwtl
add
rorb
pop
pop
test
jb
or
sbb
or
pop
mov
lret
push
pushf
and
mov
cs
xchg
xor
mov
xorb
je
fbld
add
or
inc
cwtl
lcall
sarb
cwtl
ljmp
adc
filds
movsb
sahf
dec
in
sub
mov
adc
jecxz
xchg
insl
fdivl
jo
testb
xchg
ss
jg
mov
inc
aam
mov
js
cli
or
lahf
xlat
or
or
sbb
int3
add
sbb
jp
xchg
jmp
add
repz
push
je
pop
call
cwtl
mov
jb
lcall
sbb
xchg
pop
imul
popf
add
dec
clc
dec
or
xor
xchg
rclb
lea
push
mov
add
mov
or
sub
mov
mov
jne
loopne
popl
push
mov
add
dec
cmp
mov
dec
adc
shlb
pop
push
nop
mov
jae
test
sbb
loopne
push
jae
dec
inc
leave
adc
and
dec
insb
pop
sbb
cwtl
arpl
jb
sbb
add
sbb
scas
js
repz
movb
sub
arpl
andb
add
mov
cmp
pop
add
mov
into
in
mov
movsl
je
xchg
sbb
outsb
sti
push
inc
rcll
jg
scas
push
inc
out
lea
adcl
imul
insb
or
push
jb
add
xor
je
loope
add
movb
add
insl
out
repnz
clc
fstpl
push
sub
push
or
adc
push
stos
sbb
das
mov
outsl
jbe
in
jo
add
xchg
imul
pop
and
push
mov
add
add
test
sbb
adc
lods
andl
cmp
lcall
mov
out
pushf
push
add
andb
pop
push
xchg
fistpll
out
inc
jl
fmull
push
inc
push
add
les
popa
or
push
sbb
jmp
int
adc
sub
ss
inc
add
aas
pop
jns
jno
push
cmp
jne
add
adc
clc
pop
add
or
push
add
ljmp
rorb
lods
bound
add
lds
inc
int
aad
lret
push
test
movsb
inc
subb
or
cmp
stos
sub
sub
insb
rorl
mov
or
push
sbb
test
icebp
jbe
int3
push
cmp
pop
cmp
jb
out
pusha
xor
daa
sub
inc
ret
push
orl
and
mov
push
scas
ret
add
sub
movsb
sbbl
and
push
cmp
faddl
sub
mov
sub
push
jl
xor
insl
pop
add
jo
xchg
iret
test
pushf
andb
pop
dec
inc
cmp
mov
sbb
pop
incb
sub
sahf
mov
mov
cmp
popf
cmp
push
push
into
gs
push
aad
push
pop
into
aaa
inc
std
push
pop
sbb
nop
and
adc
mov
or
and
rcrb
and
mov
mov
or
pop
popa
inc
lods
or
pop
and
cwtl
xor
mov
push
insb
orb
xor
cmp
aad
aam
and
in
aam
dec
rcrb
call
cmp
test
mov
rclb
cmpsb
scas
add
sbb
push
sbb
inc
int
movsb
add
sbb
xchg
push
xor
pusha
mov
dec
add
or
dec
je
sbb
dec
xchg
loope
shlb
es
or
ljmp
stc
xchg
out
sub
js
loop
push
xor
subl
and
inc
cs
rcrb
shll
xor
mov
mov
fwait
inc
lds
sub
xchg
push
nop
fnsave
je
jbe
lods
rol
outsl
add
cmp
sbb
cs
lret
cmpsb
or
xchg
les
add
pop
adc
dec
mov
rolb
jb
add
and
dec
adc
inc
lds
jmp
enter
or
mov
or
stos
popa
and
js
lret
mov
sbb
shrl
adc
jg
push
cmp
inc
pop
cwtl
cs
add
inc
das
loope
add
sbb
aam
pop
dec
mov
pop
jne
pop
xchg
rcl
jnp
jo
test
pop
xor
lret
ljmp
pop
add
aad
xchg
xor
imulb
mov
pop
movsb
shlb
int
inc
outsl
frstor
push
xor
lret
push
addr16
push
pop
or
stos
xlat
inc
jae
xchg
mov
cmc
xchg
dec
ss
movsb
adc
aam
pop
lret
stos
test
sub
push
add
push
mov
js
lcall
nop
test
lods
xor
mov
jg
subb
sbb
xor
mov
or
stos
sbb
imul
sub
fs
mov
pushf
pop
enter
xor
xorb
or
sbb
sbb
int
xor
pop
add
mov
fldl
jae
icebp
lcall
push
or
mov
sbb
jb
jmp
out
sub
add
xchg
mov
fucom
loop
push
add
or
mov
or
add
mov
mov
xchg
mov
dec
fs
adc
xor
addr16
cmp
lcall
jo
fldenv
sub
jecxz
and
lods
loopne
mov
mov
jno
xlat
test
cmpsb
pop
jmp
test
insb
add
or
add
jne
and
adc
inc
mov
add
shl
pop
pop
dec
imulb
loop
lods
jp
push
repz
pusha
jp
fmuls
sbb
pop
int
lahf
in
inc
dec
pop
gs
and
push
push
mov
xchg
loopne
sahf
push
xor
movsb
nop
xchg
insb
lcall
pop
loopne
test
jb
jo
pushf
lock
push
pusha
addb
push
pop
outsl
sub
jl
cmp
enter
insb
push
js
xchg
mov
sub
in
mov
xchg
add
icebp
add
xor
dec
add
into
rclb
cmpsb
jmp
je
mov
push
add
mov
das
xchg
add
outsl
ds
mov
sti
int
xlat
loopne
mov
xor
add
push
mov
lock
sub
subb
pop
xor
enter
adc
cmp
fs
sub
pop
rclb
push
icebp
xor
loope
push
xor
mov
je
mov
ja
ss
or
jne
sbb
push
dec
add
cld
jg
ljmp
xlat
addr16
enter
xchg
xor
mov
push
pop
cmpsl
retw
cmp
pop
aam
mov
or
jb
pop
cmc
loop
mov
xchg
add
fs
clc
add
adc
add
rclb
outsl
pusha
enter
and
fbld
push
icebp
pop
xorb
push
sbb
xchg
fisttps
cmp
push
push
or
cmp
or
mov
sub
pop
sahf
push
hlt
outsb
cmp
adc
mov
inc
sbb
xchg
dec
xchg
or
aaa
ror
add
in
sub
push
lods
aam
adc
pop
les
inc
xor
fsubrs
pusha
ret
sar
sub
in
sbb
inc
or
jnp
cmc
push
sub
cmp
cmovo
lret
push
sar
lret
out
sbb
out
xchg
and
mov
pop
mov
jno
dec
jne
jb
je
loope
adc
fcmove
in
dec
outsb
xor
in
in
add
inc
add
js
out
adc
out
pop
sbb
leave
adc
movsb
rorb
or
out
jno
and
rorb
add
push
push
arpl
out
add
cmp
aad
sbb
sbb
cmp
sbb
leave
cmp
xor
xchg
cmpsb
ljmp
cmp
mov
pushf
jmp
push
jmp
je
adc
push
cld
scas
add
test
aas
pop
adc
inc
test
mov
in
lock
ret
icebp
loop
pop
mov
sbb
dec
lahf
push
and
push
es
push
mov
adc
mov
stos
xchg
mov
dec
es
sub
adc
adc
add
pop
lcall
sbb
push
js
push
jp
mov
mov
jo
ljmp
push
push
add
ret
sub
int
cmp
add
pop
mov
nop
sub
jp
enter
call
and
cmp
pop
jmp
inc
cmpsb
bound
in
cmp
push
cmp
cmp
dec
scas
mov
adc
inc
inc
pop
rcrl
push
loopne
insb
mov
int
inc
ja
mov
xor
cmp
cmpsl
cs
rolb
push
sub
adc
hlt
sub
es
add
add
pop
and
stc
mov
pop
adc
xor
sbb
into
icebp
pop
int3
inc
mov
xor
pop
jnp
mov
or
inc
and
or
popa
xor
fldenv
les
add
rcrl
sub
push
cltd
push
scas
pop
add
fldcw
data16
jo
dec
imul
cmp
fstpl
test
into
mov
in
jne
xor
or
ds
loopne,pn
nop
cld
mov
rcrl
dec
push
dec
mov
nop
test
aam
and
cmp
xchg
dec
sbb
cltd
add
adc
mov
add
or
or
dec
dec
xor
adc
jno
cs
inc
jae
dec
or
inc
in
movb
setae
pushf
xor
xor
in
shll
add
mov
mov
add
jecxz
stos
or
mov
jb
rorl
and
push
rorb
jb
inc
mov
add
push
addr16
push
xchg
add
pop
jmp
popa
mov
xor
test
nop
xorl
cmc
xor
inc
push
insl
cmp
mov
jo
retw
adc
inc
cwtl
add
scas
cmpsb
adc
out
jno
ret
xchg
leave
mov
shlb
adc
mov
mov
xor
mov
hlt
clc
ret
scas
out
sbb
cmp
sub
sbb
push
inc
or
mov
outsl
ffree
shll
pop
xchg
mov
bound
aaa
in
int3
ljmp
fmul
inc
or
call
in
mov
or
mov
sbb
push
fs
add
rcll
cmp
inc
cmp
inc
jecxz
cmp
andb
sbb
leave
adc
adc
out
mov
add
mov
and
sub
push
or
push
hlt
jmp
push
lock
dec
push
sbb
je
mov
pop
xor
dec
jno
popf
push
cmp
push
std
push
xchg
sub
add
call
mov
sbb
mov
fs
mov
fstpl
or
and
xchg
push
lods
xlat
pop
inc
int
pop
nop
and
cmp
inc
pop
jno
push
cmp
fiaddl
in
xchg
fs
js
cmp
cmovge
out
jl
add
leave
inc
jne
xchg
les
int
imul
push
dec
add
es
es
push
mov
cwtl
sbb
pusha
out
adc
jp
outsl
jmp
lods
loope
imul
mov
cmpsl
dec
arpl
dec
das
or
dec
push
cwtl
in
lods
cmp
adc
test
mov
sub
pop
nop
ret
xorb
xor
mov
and
test
cltd
jb
lods
test
sbb
test
rorb
outsl
dec
sbb
and
iret
xchg
stos
pop
mov
faddl
lahf
sti
adc
in
adc
pop
sbb
aad
shl
mov
or
inc
or
jb
or
sub
xor
push
adc
test
and
sbb
aam
and
add
ret
push
int
fs
add
in
aam
or
nop
jae
cmpsl
or
inc
add
mov
pop
add
sbb
xchg
fldcw
dec
cmp
and
adc
jns
push
pop
xchg
test
mov
int
in
dec
orb
call
mov
dec
enter
das
push
test
loope
fbld
lret
les
adc
xchg
mov
and
mov
sub
or
sub
lods
jg
cmp
test
push
lods
dec
cmp
mov
out
push
cmpsb
stos
cmp
push
es
cmp
bound
cmp
test
es
push
fs
daa
adc
jb
nop
mov
xor
sahf
ret
fsubs
mov
inc
add
mov
inc
pushf
stos
push
push
push
imul
mov
push
mov
pusha
mov
xchg
mov
movsb
movsb
outsl
jb
xor
ja
push
or
leave
sbb
outsb
add
or
testb
pusha
js
jmp
pop
ljmp
adcb
lret
popf
jge
dec
add
insb
out
pop
lds
xor
punpcklbw
outsl
or
push
popa
cmp
push
sub
cs
pop
clc
sbb
mov
push
test
or
push
cmp
in
shl
fcoms
addr16
sub
inc
mov
addb
mov
mov
ficoms
sbb
stos
pop
arpl
ret
jmp
push
mov
xchg
out
mov
mov
mov
test
xchg
or
inc
lock
mov
stos
insl
arpl
fsubrl
push
in
add
js
pop
mov
leave
mov
inc
and
push
int3
push
ret
or
jg
jle
mov
push
mov
and
leave
mov
stos
jo
stos
mov
push
push
mov
pop
stc
fisubl
mov
inc
aam
in
hlt
mov
add
mov
xchg
or
adc
in
lret
pusha
jb
ficoml
sub
icebp
or
cwtl
sbbb
mov
sub
outsl
inc
das
pop
sbb
outsl
fdivs
or
jbe
mov
xor
mov
inc
push
ret
xchg
ds
adc
in
int3
adc
or
imulb
add
es
pop
inc
aad
or
push
lods
lcall
pop
out
cltd
sub
lods
sub
push
je
mov
dec
mov
loopne
jns
add
js
cmp
test
add
pop
loope
insb
outsl
dec
cmp
or
mov
sbb
push
xor
xor
int
pop
test
pop
push
adc
or
sub
shlb
push
rol
cmp
pop
xchg
adc
xor
jae
or
lea
xchg
add
push
and
test
sub
cmp
push
or
pop
jb
dec
push
dec
push
sub
xchg
rcrb
test
aaa
outsl
xor
xor
stos
pop
std
aaa
loope
cmpsb
or
das
pop
xchg
lret
inc
pop
push
jl
gs
xor
adc
or
loopne
test
stos
inc
pushf
sub
imul
xlat
hlt
aas
mov
es
mov
insb
jno
imul
insl
dec
cld
add
pop
adc
pop
popl
jae
addb
sub
adc
loopne
sbb
add
mov
inc
aad
cmc
filds
cli
xor
cmpb
cmp
cmp
int
pop
and
js
push
insl
lret
lock
jge
add
mov
mov
push
add
or
inc
mov
sub
jge
out
ss
shl
push
lock
add
rcll
mov
push
cmpb
and
push
lds
loopne
pop
push
mov
add
popf
stos
add
es
xor
nop
and
mov
daa
lea
sahf
add
push
sub
iret
lret
aad
movsb
repnz
add
int
pushf
xor
xor
in
adc
adc
pop
jge
pop
push
push
and
sbb
pop
mov
shrb
mov
inc
mov
dec
cmp
fsts
pop
es
out
adcb
test
cmp
enter
call
pop
sbb
cmp
inc
call
out
add
push
out
sub
push
push
enter
out
jo
sub
push
xorl
das
push
orb
out
jo
push
jae
inc
inc
pop
movsb
dec
sbb
fadd
negl
loope
pop
or
jae
adc
add
lods
test
sarl
jne
rclb
add
and
daa
add
movsb
insb
dec
add
sub
aaa
pop
add
mov
inc
or
push
and
and
loop
aas
mov
data16
and
dec
inc
add
adc
pop
mov
adcl
aaa
fcmovu
lea
ret
loop
imul
sbb
push
int3
inc
jbe
test
mov
or
cmp
popa
mov
in
mov
and
mov
xchg
shll
in
pop
xchg
enter
sub
mov
and
mov
and
stos
xor
and
push
insb
xor
jns
scas
add
rcll
addb
call
rcl
adc
pop
push
mov
stos
sti
pop
sbb
stos
sub
mov
out
pop
and
add
jb
call
int
add
jle
sbb
out
mov
out
pop
cmpb
mov
jp
sub
scas
adc
mov
add
out
sbbb
add
js
inc
cmp
popf
dec
pop
push
xorb
roll
jno
jb
or
clc
xchg
sbb
xor
and
mov
rol
mov
or
scas
or
imul
ljmp
stos
dec
adc
pop
or
or
mov
mov
fldenv
add
das
xor
xor
jbe
dec
pop
push
sub
imul
pop
inc
sbb
fs
xchg
push
adc
ja
or
inc
into
insb
das
jg
cltd
sbb
icebp
sbb
cmp
lock
out
xor
lcall
and
or
std
test
push
push
lcall
mov
popa
ss
push
loope
mov
aaa
in
cmp
add
sbb
jb
loop
xchg
mov
loopne
cmp
test
loop
mov
jp
add
inc
sarl
js
mov
add
mov
fldenv
pop
data16
push
mov
inc
sub
xchg
jae
mov
add
inc
test
push
andl
dec
in
mov
mov
push
in
add
xor
loope
shlb
adc
stos
sbb
jae
sub
inc
xor
mov
stc
mov
adc
sub
lcall
cwtl
fs
push
jb
inc
or
push
cmp
jae
jge
pop
scas
push
shl
cmpsb
push
mov
pop
jp
sbb
push
xlat
in
mov
pop
addr16
sbb
inc
xor
jo
push
cmp
and
add
fwait
jb
fcoml
or
pusha
movsb
mull
mov
xchg
xchg
push
jae
mov
repz
mov
cs
mov
cmp
cmp
inc
rorb
sub
orl
inc
cwtl
inc
cli
mov
jp
repnz
add
or
pop
adc
jbe
dec
ret
cmp
xchg
inc
decl
repz
xor
dec
inc
adc
andl
jae
orl
pop
fdivr
xchg
in
andb
stc
adc
inc
add
add
mov
dec
fstpt
mov
andl
mov
adc
mov
jbe
bound
inc
stos
inc
cwtl
mov
pop
outsb
lret
mov
mov
push
dec
mov
idivb
arpl
sub
cs
fistpl
sbb
jne
cmp
cmpsl
add
push
mov
std
or
test
out
inc
mov
sub
lret
push
subb
mov
lret
push
lods
ja
sbb
iret
jne
in
enter
cmpsb
sub
int
mov
data16
lea
out
mov
or
jo
mov
lcall
dec
mov
bound
test
mov
cs
mov
incb
ret
inc
inc
dec
add
sub
mov
jne
adc
gs
and
loopne
pop
cmp
rcl
insl
popa
mov
test
add
repnz
mov
test
inc
pop
xchg
fldt
cmp
jge
push
sub
fsubrl
cwtl
xchg
xchg
and
mov
push
sbb
jmp
jmp
sbbb
das
shlb
sbb
mov
jmp
gs
sub
pop
fldcw
outsb
fnsave
add
dec
sbb
insl
sti
mov
or
pop
gs
push
mov
pusha
mov
jno
pop
imull
fistpll
daa
mov
outsl
ja
inc
push
mov
test
addr16
arpl
xchg
ret
insb
push
push
cmp
xchg
in
mov
in
pop
xor
hlt
rorl
lret
sbb
cmp
sbb
mov
cmp
adc
jno
lds
cmp
jecxz
pusha
jb
jmp
push
cs
test
out
fldt
jno
add
test
add
cmp
adc
call
fisttps
sub
aas
xor
hlt
orl
xchg
test
pop
je
xchg
xor
lods
frstor
popf
add
in
mov
sbb
pop
pusha
mov
mov
rolb
icebp
jl
cld
sub
cs
add
pushf
jl
popa
cmp
inc
fdivrl
in
js
daa
arpl
rol
outsb
movsb
imul
push
movsb
loopne
xorb
jg
push
lds
mov
jnp
fldcw
arpl
pop
ja
cltd
testb
xchg
and
sbb
mov
aam
enter
adc
aas
cmp
add
or
adc
mov
dec
sbb
addr16
sub
enter
xchg
and
out
adc
pushf
notl
xor
pop
sub
jmp
sbb
lock
jmp
cld
cwtl
loopne
ja
out
bound
inc
mov
sub
xchg
call
sub
inc
add
mov
add
sbb
aam
sbb
pushf
dec
jns
pusha
and
sbb
mov
cmp
xchg
pop
pusha
mov
xor
cmp
in
xchg
popf
mov
xor
mov
add
xchg
pop
inc
xor
sbb
jg
arpl
mov
loope
adc
movsb
cmp
lcall
movsb
daa
scas
addl
cmp
cmp
jg
jb
cs
cmc
jmp
lahf
enter
pop
das
sbb
lcall
dec
int
sbb
movsb
pusha
sbb
cmp
jge
sbb
inc
xchg
je
pop
jle
add
add
mov
xor
mov
insb
aam
roll
ret
shll
mov
push
push
mov
mov
les
ret
pop
and
popa
xlat
shll
add
fcomps
out
mov
xor
sbb
mov
mov
xchg
sub
cwtl
pop
sbb
sbb
inc
cmp
insb
pslld
add
lret
xor
or
test
add
pop
mov
arpl
pop
orb
sbb
sbb
lcall
add
in
jns
inc
repnz
inc
ret
clc
cmp
inc
push
cltd
inc
into
xchg
fstpt
inc
xchg
adc
in
ds
in
cmc
adc
add
add
or
outsb
jl
fsubr
in
inc
fcoml
jp
insb
xor
cmp
cmp
dec
mov
insb
inc
jo
mov
inc
xchg
lahf
shrb
sub
and
sub
je
mov
jbe
and
dec
inc
mov
pop
ljmp
aad
mov
orb
sbb
xor
dec
add
test
repz
mov
sahf
add
or
lcall
jge
pop
pop
add
ds
mov
add
or
mov
inc
or
in
sahf
dec
arpl
add
mov
push
jno
cmp
pop
iret
jmp
add
cwtl
lods
popa
and
les
mov
insb
mov
in
daa
test
cmp
mov
int
dec
aas
inc
sub
cmp
xchg
enter
lods
ret
rorb
jbe
mov
fdivs
sub
dec
pop
xor
mov
sbb
rcll
pop
test
arpl
in
leave
dec
fisubl
fnstcw
push
in
insb
fstpl
sbb
jl
and
dec
pop
arpl
je
mov
fdivrs
repnz
shl
sti
xor
mov
adc
cmpl
sbbl
sub
jg
call
mov
push
adc
cmp
cmpb
dec
mov
cmp
imul
mov
mov
push
call
cmp
lret
mov
xor
mov
scas
ret
xor
adc
ret
sbb
cmpsl
and
test
jno
xchg
sbb
push
pop
xorb
xor
jo
nop
rcr
movb
cld
insb
xchg
les
inc
call
xor
enter
fucomi
cwtl
stc
fstps
push
flds
mov
xchg
sbb
and
call
xchg
lods
dec
out
push
inc
sbb
mov
mov
enter
outsb
pusha
call
or
xchg
loop
and
adc
pop
gs
mov
dec
lock
arpl
jmp
jge
int
mov
push
stc
cs
mov
sub
cmp
rolb
hlt
lock
test
xor
and
cwtl
xchg
mov
xchg
movsl
cmp
aaa
cltd
push
lock
pop
jle
inc
in
mulb
testl
xor
incb
test
and
adcl
ljmp
jb
outsb
aaa
pop
jle
mov
mov
out
in
cmp
rclb
scas
jp
mov
and
inc
mov
pop
push
std
stc
fnstenv
int
sbb
fstl
xor
mov
push
mov
push
lea
mov
daa
das
arpl
outsl
cmp
arpl
xor
shlb
cmp
inc
clc
push
ss
inc
or
add
inc
pop
mov
shll
push
inc
and
push
push
scas
pusha
mov
dec
adc
rorl
adc
add
ss
push
jle
scas
and
test
imul
mov
dec
mov
cmc
or
jbe
enter
cmp
aam
push
outsl
xchg
ss
inc
cmpsl
or
and
popf
add
stos
nop
lea
dec
push
mov
dec
xchg
test
cltd
adc
rorl
sbb
popf
jbe
mov
or
jp
test
mov
orl
jo
and
notb
sub
stos
adc
dec
pop
dec
mov
xchg
sbb
cmp
sub
lods
lret
dec
addb
lds
out
jb
movsb
fcoml
mov
or
jmp
mov
mov
adc
inc
adc
cs
or
lret
pop
inc
shll
sub
sub
mov
stc
pushf
mov
adc
push
enter
dec
sbbb
inc
add
xorps
lea
xchg
cld
xor
loope
pushf
je
add
mov
mov
sti
cmp
or
es
dec
cmp
push
stos
rcr
push
pop
loope
adc
add
aad
cwtl
add
push
push
push
or
mov
or
mov
lahf
leave
dec
shrl
and
add
cmp
int3
sub
jo
insl
ss
inc
lods
cmp
shr
sub
cld
aaa
int3
push
mov
sub
stos
xchg
mov
loop
sub
xor
mov
add
sahf
push
mov
push
cld
pop
pop
scas
adc
jne
fidivl
mov
or
sub
pop
push
aad
scas
mov
fprem1
nop
ret
add
xor
mov
and
data16
xor
out
and
and
add
and
inc
pop
xchg
sub
and
enter
loopne
xlat
test
or
rorb
insl
int
and
mov
lods
add
mov
daa
inc
cs
inc
stos
mov
inc
push
mov
push
in
in
xor
adcb
cmp
adc
leave
cwtl
daa
je
inc
or
lcall
jo
ret
scas
mov
imul
mov
xor
jno
dec
ljmp
add
int
out
bound
sub
scas
sub
nop
hlt
sbb
sub
sub
data16
xor
pop
pushf
jae
jo
stos
jno
jae
pop
or
sub
sub
movsl
push
into
aam
cli
pop
mov
jne
mov
or
push
or
lock
jb
xor
sub
loope
xchg
mov
dec
es
jl
adc
or
sbb
mov
sub
xor
and
stos
fisttps
add
aam
add
cmp
cmp
jp
push
cmp
adc
stos
mov
xor
push
xchg
mov
bound
sub
int
sub
xchg
push
jbe
aas
inc
pushl
jae
sub
negl
push
and
sbb
or
cmp
imul
adc
or
inc
or
aam
andl
loopne
stos
pushf
xor
inc
das
scas
adc
add
ss
loopne
xor
xor
adc
test
cmp
jb
and
mov
add
push
imul
dec
stos
xlat
scas
adc
movsb
xchg
or
or
add
jno
inc
mov
repz
adc
xchg
test
push
lods
rolb
push
pop
scas
add
mov
pop
inc
lods
cmpsl
and
dec
in
xlat
sbbl
into
inc
rcrl
push
mov
add
inc
icebp
or
and
add
dec
pusha
sbb
scas
push
into
andl
pop
orl
popa
jp
inc
fwait
pop
mov
and
push
xor
sbb
aad
jmp
push
fdivrl
sub
xchg
movsb
pop
out
rolb
test
dec
dec
push
xor
push
jo
jmp
int
or
jbe
pop
jg
pop
subb
pusha
ja
cmp
addb
mov
or
push
adc
cmpb
hlt
adc
jb
or
add
xor
push
imulb
data16
sub
int3
push
pop
inc
adc
mov
mov
mov
xchg
xchg
add
adc
xchg
cmp
data16
sbb
scas
xlat
dec
lods
loopne
cwtl
orb
adcb
mov
sub
add
test
dec
cmpsb
rclb
sub
xor
jmp
cmpsl
scas
push
sbb
mov
cmp
pusha
mov
xchg
and
enter
sbb
mov
xchg
add
push
cmc
fisttpl
mov
mov
or
daa
loopne
movl
orb
hlt
loop
push
out
jp
mov
out
rolb
cmp
arpl
and
leave
scas
out
cmp
add
xchg
mov
lret
pop
test
cltd
andb
or
cmp
push
mov
add
mov
inc
int
add
adc
call
adc
movsb
mov
addr16
daa
hlt
sub
int
mov
leave
sub
orb
mov
sbb
out
sub
imul
call
mov
push
in
add
or
fnstsw
pop
cwtl
stos
hlt
adc
aam
inc
sbb
repnz
popl
test
popf
loopne
mov
pop
mov
xchg
mov
pop
bound
add
pop
fiadds
adc
roll
sbb
inc
xor
lahf
xchg
sub
out
add
push
cltd
cmp
aaa
sbb
xchg
mov
cmc
sub
test
loope
shrl
or
cmp
ds
mov
lret
xor
mov
push
rclb
orl
ror
push
cltd
lret
mov
pop
out
iret
mov
and
mov
hlt
push
mov
mov
outsl
jmp
lds
roll
inc
cmp
jbe
pusha
lds
cs
addb
mov
ja
sbb
inc
pop
test
fcoms
cmp
subl
pop
scas
std
mov
adc
mov
mov
xchg
outsb
or
add
stc
int3
push
mov
jno
cli
pop
ror
dec
add
ja
aaa
mov
sbb
cmpsl
sub
push
pop
aad
xchg
sub
cs
jg
fwait
fwait
dec
mov
adc
sub
xor
push
call
les
and
add
adc
bound
jo
cmpsl
movsl
add
sbbb
std
mov
sub
mov
adc
mov
in
adc
movsb
add
lds
sbb
nop
into
ljmp
lods
pushf
and
xlat
push
xor
inc
aaa
mov
push
aam
lock
cmp
je
mov
add
and
sub
js
push
sbb
or
popa
outsl
pop
push
and
outsb
dec
mov
adc
mov
or
inc
pushf
jle
aam
adc
xor
lods
nop
or
out
or
ror
loopne
mov
pop
and
pop
push
insl
adc
pop
dec
sbb
or
daa
sbb
xor
push
arpl
pop
push
mov
test
mov
enter
test
mov
dec
sbb
lcall
and
lods
stos
ret
fisttpll
or
jo
inc
stos
lret
or
push
pop
movsb
sub
or
add
enter
insl
test
jo
shrl
rcll
cmp
enter
loopne
imul
xchg
xor
rolb
loope
or
mov
mov
ror
inc
inc
cmc
xor
aaa
push
into
mov
xchg
clc
mov
stos
sub
sub
jge
add
shlb
outsl
stos
inc
adc
js
mov
push
aad
adc
in
jmp
cmpl
dec
push
pop
sub
add
dec
outsb
mov
add
mov
push
push
dec
mov
push
mov
ret
adc
inc
add
popa
add
inc
pop
jb
mov
fcos
xor
dec
adc
test
dec
ret
sub
leave
ret
adc
test
push
ret
insb
jl
and
pop
and
inc
icebp
ljmp
xor
push
jp
cmp
mov
adc
xlat
iret
jmp
scas
add
or
or
sub
xchg
out
inc
jbe
inc
mov
xor
sbb
push
loopne
outsb
push
xchg
jo
cli
mov
and
or
add
adc
data16
sub
push
es
cmpsl
fldt
pop
pop
flds
inc
push
dec
nop
xchg
xchg
add
pushf
mov
mov
pop
xchg
jl
push
mov
xor
add
sub
shrl
xchg
mov
rorl
inc
stos
dec
into
mov
push
push
dec
call
popa
sbbb
inc
nop
stos
andb
test
mov
mov
test
or
jp
notb
sbb
scas
push
testb
sbb
add
movsl
pop
scas
and
xor
sbb
movsb
xchg
mov
or
xchg
push
call
sbb
mov
insb
push
call
adc
cmpsb
sub
leave
xor
pop
jb
add
aad
andl
push
and
add
push
orl
ljmp
icebp
scas
or
push
xor
icebp
call
pusha
lret
aaa
movsb
mov
pop
lcall
cmpsb
push
push
push
aam
shr
push
aaa
mov
icebp
scas
mov
clc
sets
push
or
push
or
sbb
cmpsb
pop
cli
lea
fldt
enter
add
inc
loope
add
mov
inc
sub
mov
and
ficoms
shl
test
fildl
jo
xor
sbb
push
or
xchg
loopne
xchg
nop
push
cmp
xor
nop
out
pop
cmp
out
push
jne
add
xchg
mov
add
lcall
pop
pop
pop
out
inc
xlat
bound
daa
je
sbb
sbb
xchg
sub
ss
test
mov
push
call
out
add
out
jb
movsb
cmp
loope
mov
fwait
mov
push
mov
shll
pop
test
sbb
sub
xchg
cs
lcall
movsl
inc
subps
mov
roll
enter
add
xchg
push
sub
inc
and
jge
ficompl
adcl
loope
sbb
sbbl
pop
push
xor
add
and
test
push
stos
inc
push
xor
jp
andb
daa
or
js
cmp
cmp
pop
add
into
push
insl
fadds
or
mov
xor
lcall
xchg
xor
lret
mov
or
hlt
outsb
lret
enter
mov
call
pop
add
pop
pop
push
pusha
rolb
fisubl
sbb
inc
or
in
push
test
sub
lahf
mov
pop
mov
sti
loop
inc
xor
call
mov
mov
add
push
push
fbstp
mov
add
aam
test
decl
jp
sub
inc
xor
fmull
ret
sarl
mov
pop
mov
ficompl
adc
inc
test
repz
xchg
les
xchg
sahf
add
lcall
fimull
inc
out
cmp
mov
mov
dec
push
pop
cwtl
jo
inc
jns
sub
xchg
imul
enter
jo
jmp
or
dec
lret
xchg
out
ljmp
add
invd
lcall
flds
in
gs
mov
xchg
loope
loopne
in
and
inc
xchg
push
lds
push
loopne
add
adc
pop
add
js
ja
loope
dec
push
push
rol
nop
add
stos
or
cmpsb
xchg
mov
mov
addb
or
pop
arpl
mov
push
aad
push
sbb
incb
lcall
aam
cwtl
sbb
push
pop
add
jo
mov
inc
leave
add
push
mov
xchg
xor
sub
cmpsb
add
pop
mov
jg
ret
sahf
jae
nop
xorb
data16
gs
pop
push
iret
xchg
jmp
cmp
sbbb
add
mov
out
ja
pop
into
push
shll
cld
mov
nop
mov
sub
mov
rcl
mov
fldl
outsb
stos
ud2
add
mov
emms
and
gs
popa
jp
outsb
shrl
notl
out
fisttps
jbe
ret
roll
push
nop
orb
push
insb
add
jb
xchg
cmp
mov
mov
add
addl
mov
pop
orb
sbb
dec
jl
dec
lods
inc
cmp
cld
loope
mov
outsb
sbb
cltd
or
cmp
jo
out
dec
ret
sbb
cmpsb
imul
jo
mov
fnstenv
or
sub
lods
cltd
pop
push
rcll
dec
stc
or
ret
pop
or
mov
sti
mov
icebp
xchg
enter
movl
pop
adc
adc
or
in
pop
out
enter
mov
push
int
addb
cmp
and
test
mov
inc
cmpsb
test
rcrl
cmpsb
fadds
inc
es
or
sbb
cs
daa
pop
or
scas
mov
stos
popa
mov
lods
xor
sbbb
inc
cwtl
incb
lcall
sub
aam
push
add
inc
cs
pop
leave
push
sbb
adc
add
ret
push
loope
sbb
clc
mov
push
fiadds
or
pop
sarl
popa
xor
push
cmc
mov
pushf
leave
and
add
loope
adc
push
scas
lds
mov
dec
inc
arpl
andb
mov
inc
into
popa
loop
fistpll
mov
mov
cmp
adc
pop
add
lcall
push
mov
rolb
popa
xor
sbb
out
add
push
int
xor
adc
int
sbb
dec
mov
xchg
mov
push
jb
push
jne
ror
mov
inc
movsl
inc
insl
lods
mov
inc
mov
or
xchg
mov
xchg
and
jmp
mov
mov
fisubrl
mov
fnsave
xchg
movsl
cmp
add
imul
jo
or
into
xchg
add
std
xlat
sub
push
inc
adc
les
ficomps
cmp
roll
adc
mov
add
add
fcmovb
mov
test
cmp
adc
cmp
xor
call
mov
inc
cwtl
sbb
xchg
xchg
add
pop
pop
add
ret
push
sub
enter
push
imul
je
dec
rcrb
sbb
fsubl
test
add
test
lret
xchg
mov
push
movsb
jo
subl
jo
jae
cmp
mov
lds
shll
pop
adc
jo
add
push
inc
mov
jbe
out
outsl
push
pushf
push
mov
xlat
jb
es
test
dec
sbb
pushf
jae
mov
sbb
or
dec
dec
xor
xchg
imul
pop
imul
cmp
mov
stos
fisttps
enter
or
mov
xor
push
inc
or
sbb
mulb
fiadds
push
and
in
cmp
xchg
pusha
sbb
leave
push
xchg
mov
push
bound
sub
jo
or
add
adc
ret
std
fsubrl
fs
cmpsl
rcrl
jmp
pushf
xlat
dec
sbb
sub
xor
jb
adc
mov
pop
sbb
xor
mov
sub
cwtl
repnz
jle
push
pop
cmp
sub
imul
ja
cs
xor
inc
add
inc
push
xchg
ljmp
pushf
jae
or
xchg
bound
shrl
and
push
aam
sub
jo
jae
xor
fcmovbe
sbb
test
andl
jnp
sbb
shll
repz
dec
mov
jp
xchg
fs
sbb
pop
ficoml
in
xor
fs
loopne
test
pop
popf
pop
lcall
mov
cwtl
cwtl
stc
and
or
cmpsb
fnsave
sbb
bound
xchg
push
test
cs
push
lcall
sbb
insl
icebp
cmp
inc
es
pop
addr16
jle
aam
pop
scas
ljmp
add
mulb
or
cltd
fcoms
iret
push
inc
mov
inc
sub
dec
and
or
insl
notl
enter
inc
hlt
add
sbb
daa
cwtl
in
out
inc
nop
mov
sub
or
and
sbb
imul
cmp
or
cld
popl
add
fs
jecxz
sbb
add
add
aam
add
sub
cs
add
dec
push
mov
rolb
xor
stos
clc
lea
jnp
add
cmp
ror
add
stos
daa
add
mov
add
fwait
adc
lock
dec
inc
mov
icebp
movsl
jmp
fiadds
enter
xor
inc
sbb
das
adc
push
ret
cmp
iret
cmpsb
inc
out
xchg
sub
inc
push
insl
adcb
stos
adc
jp
es
adc
jne
xchg
xor
pop
push
sub
sbb
push
or
orl
sbb
adc
subl
shl
ja
add
jecxz
xor
daa
push
and
or
and
add
hlt
mov
popa
add
jo
and
pop
lcall
pop
in
mov
pusha
mov
mov
push
pushf
inc
loopne
sub
dec
pushf
sbbb
jo
mov
mov
xor
pop
jecxz
cmpsb
jo,pn
cmp
cs
movsl
sbbl
je
lods
mov
or
push
lock
or
test
and
cmp
pushf
mov
mov
push
push
roll
xchg
sbb
push
jg
cpuid
mov
pop
inc
jge
out
sub
add
xchg
mov
sbb
xor
enter
mov
data16
sbb
xor
aaa
mov
jno
pop
mov
sbb
xor
xorb
pop
cmc
xor
lret
jb
lods
andl
inc
jge
or
sub
pop
stos
js
roll
scas
mov
ret
pop
imul
lods
clc
ljmp
add
jge
das
mov
push
dec
xlat
in
subl
es
in
icebp
add
test
hlt
add
add
bound
mov
adc
iret
push
rcrl
xor
and
rorl
pop
incb
icebp
add
inc
xor
sub
dec
inc
sbb
dec
push
or
cld
fisttps
in
rcrb
push
loopne
out
push
dec
aad
mov
ret
xchg
push
orb
add
add
sub
mov
push
mov
push
enter
inc
adc
rcll
sti
mov
stos
fcoml
sbb
xor
jmp
xorb
test
mov
faddl
enter
jo
lret
mov
dec
jo
push
or
xchg
xchg
or
aad
fldl2t
push
push
popf
cmp
or
lods
outsb
out
push
or
jno
lcall
sbb
push
js
aad
push
dec
push
xchg
adc
cmp
add
xor
mov
dec
pop
idivb
push
xor
sar
fs
loopne
push
xchg
lret
loope
jne
mov
cmp
add
inc
and
mov
fildll
push
pop
btc
dec
jo
xor
mov
xor
add
push
loop
push
push
inc
sbb
dec
fs
sub
cltd
cmp
or
cmp
push
xor
sub
sahf
in
or
add
cmp
rolb
scas
and
dec
ss
fimull
adc
shrb
data16
push
mov
mov
or
mov
dec
push
inc
lret
cwtl
rclb
lcall
jbe
sbb
xor
rol
jp
hlt
cs
int
andb
add
inc
dec
inc
add
mov
cmp
and
mov
push
push
lock
inc
adc
cmp
jno
mov
cmpsb
sub
ss
hlt
icebp
sub
sub
add
pop
mov
xchg
mov
iret
out
push
push
nop
es
call
jmp
lods
and
insb
icebp
lret
call
lret
inc
inc
jae
xor
std
jo
lock
inc
adc
push
and
aaa
cmp
and
sbb
mov
pusha
lret
mov
xor
xchg
loopne
and
add
sahf
subb
xchg
js
cltd
test
pop
in
xor
adc
lds
push
movsl
mov
and
rolb
mov
fisubrl
inc
push
or
inc
aas
mov
or
sbb
sub
mov
push
rclb
xlat
xchg
lods
jnp
in
leave
adc
ss
and
push
xor
push
jge
or
loope
or
mov
pushf
add
or
icebp
das
imul
test
bound
cmp
mov
pop
dec
sbb
pop
xor
mov
pop
mov
push
pop
gs
pop
push
mov
stc
aas
dec
imulb
mov
xchg
mov
outsl
push
pusha
cmpb
dec
jo
pop
xor
xor
adc
hlt
mov
adc
int
push
shll
rclb
dec
shll
add
mov
xchg
lret
add
rolb
sbb
mov
cmpsb
test
pusha
js
pop
lds
into
add
push
dec
cltd
pop
test
std
test
andb
mov
add
and
aaa
sub
jo
in
stos
adc
neg
xor
clc
xchg
xchg
aam
dec
loop
ffreep
incl
stc
sub
sub
inc
hlt
dec
jbe
fdivs
pushf
push
xor
add
test
fwait
lock
pusha
loop
imul
mov
and
movsl
xor
fisubl
mov
sbb
push
add
or
xor
js
int3
sub
mov
cwtl
fnsave
scas
sub
cmp
xor
push
pop
cmp
loopne
dec
push
add
loopne
push
add
rorl
je
or
cmpsb
out
xchg
test
dec
or
sub
mov
lret
sbb
loop
fiaddl
push
movsl
pop
lds
jae
sti
popa
js
nop
sti
sbbl
adc
rorb
xchg
imul
mov
or
test
xchg
ret
shr
inc
outsl
inc
adc
jmp
or
and
xlat
pop
out
cwtl
mov
jge
mov
fwait
push
ljmp
push
insl
add
jae
loopne
or
and
mov
aaa
jl
add
cmp
rorb
jge
lcall
movsb
inc
test
sub
fisubs
add
dec
xchg
movl
addb
js
aaa
test
es
sbb
sarb
pop
add
gs
shll
call
adc
loopne
gs
insb
lock
xor
push
add
sub
ffree
aad
add
mov
cmp
cmp
icebp
or
pop
sbb
cmpsb
jb
cmpb
scas
mov
in
roll
adc
jb
jb
popa
or
xchg
cmp
popf
daa
loopne
xor
outsb
ret
pop
xchg
and
jle
rolb
mov
cmp
push
ds
add
pusha
cmp
stc
setl
mov
data16
inc
mov
addl
or
push
loopne
lea
sbbb
mov
mov
add
stos
cmp
cmp
sarl
loope
sbb
sbb
ss
push
and
mov
inc
stos
or
xorb
pop
movsl
rcrb
cmp
movsb
orb
ret
push
adc
sub
ret
leave
inc
mov
mov
adc
xchg
mov
sub
adc
les
jmp
push
sbb
jb
in
push
sbb
stos
sbb
push
pop
fmull
mov
sub
push
xor
jl
adc
stos
dec
cld
jmp
loopne
xchg
cld
jae
stos
loopne
or
mov
leave
jne
inc
mov
pop
sbb
aam
leave
mov
sub
nop
mov
cmp
sub
jnp
jb
or
adc
xchg
and
test
loope
pop
sarl
rol
pop
mov
add
xchg
cwtl
xor
sub
lock
adcb
mov
mov
les
pcmpeqb
push
mov
inc
lcall
insl
int3
push
sub
cmp
and
mov
push
fs
fwait
add
jo
adc
and
stc
add
xacquire
push
add
sbb
mov
cmp
in
scas
jecxz
xor
mov
xor
mov
cmp
adcl
mov
sbb
jo
subl
aad
fidivrs
jbe
sub
dec
lret
jo
enter
icebp
inc
and
sbb
mov
and
and
jbe
test
cwtl
mov
ret
pop
xchg
jp
popa
int
inc
mov
lds
sbb
dec
xchg
or
enter
adcl
adc
pop
mov
xchg
sbb
scas
sbb
bsf
or
mov
sbb
xchg
dec
loop
xchg
mov
pop
jl
push
lea
push
xor
cwtl
lea
xchg
jp
rolb
loope
sub
cmp
pushf
les
loop
mov
test
jno
and
adc
cs
loopne
fadd
loop
xchg
inc
add
add
stos
and
js
push
xorl
mov
adc
adc
and
push
lcall
es
mov
inc
push
in
xchg
lcall
mov
clc
addl
push
and
push
xchg
stos
push
sbb
jnp
xchg
cmp
push
lods
or
inc
repnz
xor
dec
push
pop
test
push
push
push
or
xor
pop
push
into
xchg
jge
inc
adc
loop
mov
jle
incl
adc
addl
lahf
imul
push
pop
or
mov
test
add
sbb
inc
negb
pop
or
movsl
cmp
xchg
add
pushf
sbb
icebp
xorb
lods
mov
jnp
imul
and
push
push
ss
adc
cld
insl
cmp
add
addl
xor
mov
imul
fiaddl
rolb
scas
data16
mov
and
fldcw
pop
cmp
sub
sub
loope
add
inc
inc
data16
test
and
mov
pop
mov
inc
xor
xchg
clc
lret
mov
mov
dec
or
mov
enter
jl
lock
sarb
jle
push
sbb
stos
pop
inc
cltd
rcl
shll
mov
push
sbb
sub
cmpsl
roll
inc
pop
inc
mov
push
lds
mov
xchg
add
cwtl
add
cmpsl
rolb
xor
test
and
push
shlb
sub
mov
push
cmp
in
push
in
aam
jno
nop
xor
jl
mov
gs
push
pop
andb
fcoml
mov
ljmp
or
and
sub
ret
push
roll
adc
mov
loopne
jb
lock
test
pushf
cmp
sbb
push
xchg
or
outsb
mov
mov
xchg
jnp
idiv
add
pop
or
pop
cltd
push
push
jl
xor
sbb
sbb
or
pop
mov
add
jne
jbe
jl
or
addl
cmp
xchg
jg
cmpsb
inc
in
lods
mov
mov
clc
add
add
mov
mov
ficoml
adc
cmc
lea
pop
pusha
enter
and
adc
dec
push
sub
mov
xor
cli
call
push
xchg
pop
mov
mov
cmpsb
dec
jle
sbb
sub
mov
mov
enter
or
inc
or
or
mov
ljmp
gs
jl
pop
adc
jecxz
cltd
call
add
jo
clts
jo
stos
pop
jecxz
orb
flds
xor
push
xor
test
ret
jns
insl
roll
cmpsl
shrl
jno
into
add
pusha
jo
into
xchg
mov
jo
cmp
addl
rorb
sbb
loopne
pop
push
sahf
mov
xor
sub
cwtl
and
sldt
loopne
and
push
sbb
push
add
andb
rolb
sub
cltd
in
in
mov
xor
xlat
test
out
push
add
add
rcl
cmc
push
add
ret
int3
adc
cmp
sbb
rcr
push
stos
pop
xor
and
adc
add
shr
sub
pop
cmp
xor
shlb
fisubrl
orps
outsl
adc
popf
sub
rolb
mov
enter
pop
rcll
jnp
push
iret
test
xchg
stos
pop
in
das
loopne
enter
cmpsl
push
andl
add
push
xor
lret
push
loope
adc
jns
sbb
mov
sub
scas
pop
xor
xchg
daa
movsb
xor
data16
push
mov
shll
hlt
roll
pop
mov
test
ja
cwtl
mov
jg
add
push
shll
add
test
push
or
mov
dec
rolb
js
jecxz
push
jb
mov
jle
mov
and
ljmp
mov
out
inc
test
aam
or
mov
mov
sub
adc
jb
leave
cmpsl
or
push
jnp
inc
cmc
loopne
test
and
imul
and
dec
inc
shrb
test
push
pop
out
les
pop
mov
mov
or
or
add
add
loope
cmpsl
arpl
sub
jg
adc
xor
and
into
insb
sahf
inc
adc
inc
push
mov
xor
in
cmpsl
xchg
add
fistl
push
subl
sbb
dec
adc
call
arpl
fimull
dec
lea
scas
push
pusha
mov
insb
out
xor
push
pusha
jb
test
mov
je
inc
ret
mov
push
test
pop
inc
loopne
bswap
in
push
ror
sbb
add
adc
ret
out
arpl
xor
sub
inc
mov
sbb
subl
jno
fistl
mov
scas
ret
jae
stos
cmp
xor
scas
cmp
lcall
in
adc
sbb
xchg
mov
mov
sub
lcall
pop
pop
icebp
loop
out
mov
cld
lret
adc
sbb
sbb
loopne
imul
enter
and
addr16
and
pop
std
pop
sub
sbbb
daa
add
ljmp
push
jne
lret
les
lret
xchg
ret
dec
push
or
jae
add
push
mov
sub
push
sub
and
hlt
imul
mov
pushf
stos
mov
out
pop
mov
xchg
xor
ds
mov
sbb
push
and
cmp
pop
xchg
rolb
fcoms
push
mov
xor
addb
ret
mov
push
mov
cmp
push
push
test
jb
xchg
into
addl
mov
ret
mov
adc
or
enter
lds
test
lds
sbb
outsl
sbb
int3
pop
push
jnp
push
das
mov
mov
pop
mov
sub
loope
inc
aam
lods
pop
xor
into
movsb
sub
push
loopne
jp
inc
int
bound
cmp
add
mov
mov
push
pop
cmp
cmp
bound
out
idivb
mov
std
adc
sub
push
add
and
ret
dec
or
fidivrs
xor
and
adc
mov
shl
test
cltd
js
add
or
add
xchg
ja
or
jae
dec
rcll
outsl
push
jle
subb
in
lret
loop
jmp
add
out
push
xchg
filds
sbb
repnz
adc
cmp
inc
xchg
cmp
cmp
xchg
pusha
sub
sub
dec
inc
or
push
lcall
imul
cmp
ret
sbb
sub
mov
rclb
add
adc
in
sub
xchg
and
int3
ljmp
movsb
lcall
sub
and
into
adc
test
push
xor
xor
rcrl
add
sbb
pmullw
adc
ljmp
imull
or
pop
cmp
push
pop
inc
xor
xor
inc
lcall
in
cltd
xor
loop,pn
jmp
sar
test
hlt
repz
inc
inc
loopne
cli
push
sti
hlt
mov
adc
xchg
in
cltd
test
repz
or
hlt
test
mov
mov
fmuls
icebp
pusha
push
pop
push
xchg
or
data16
cli
rolb
hlt
sub
enter
jae
inc
pushf
and
jmp
cvtps2pd
ret
mov
push
add
fmul
inc
enter
dec
push
adc
bound
xchg
jg
mov
mov
cmp
mov
fildll
xchg
or
xor
lret
rcrb
in
pop
mov
fistps
push
cmp
cltd
pop
rep
jo
push
mov
xor
jl
lret
popa
push
int3
pop
adc
pop
das
mov
shll
pop
or
xchg
push
ret
inc
sbb
xor
jns
ret
fidivrl
mov
push
jno
add
sti
mov
xchg
dec
jo
and
cmpsl
adc
cmp
nop
adc
orb
adc
add
or
add
lret
push
sahf
or
fmull
pusha
mov
dec
enter
hlt
pop
xchg
and
out
jne
add
adc
or
insl
and
sbb
scas
inc
xchg
pusha
mov
and
jmp
aam
xchg
ret
sti
in
movsb
popa
mov
adc
lcall
xchg
lret
nop
or
adc
hlt
xor
xlat
push
adc
push
nop
add
int
pop
arpl
pop
push
enter
xchg
jl
jo
popf
mov
jo,pn
shrl
jl
and
inc
or
mov
xor
sbbb
enter
xor
scas
sub
movsb
mov
ret
loopne
fmuls
mov
loopne
or
mul
test
lock
adc
cltd
add
dec
int
sbb
add
jno
cmp
loopne
mov
je
movsb
add
mov
mov
or
xchg
mov
add
mov
inc
arpl
pop
inc
or
pop
inc
push
mov
xchg
loop
jb
movsb
pop
xor
idiv
shrl
add
clc
and
pop
inc
and
cmpsb
xchg
mov
pushf
or
jmp
pushf
rcrb
or
ss
cltd
mov
cmp
subb
mov
mov
or
or
cmc
stos
stos
fcompl
pop
sub
or
or
add
pop
mov
pop
lcall
negl
aad
jae
out
jo
xlat
push
lods
aam
inc
push
xchg
loope
das
pop
push
sub
push
mov
fisubrs
pop
lret
xchg
ret
ss
pop
mov
orb
or
sbb
sub
nop
push
push
out
scas
lret
popa
hlt
rcll
push
push
sub
push
cmpsl
mov
and
lea
ljmp
jno
push
xor
inc
sub
add
test
daa
or
rorl
jb
jno
mov
movl
popf
xor
add
stos
xor
mov
sbb
loopne
cltd
mov
cmp
adc
pop
into
gs
dec
add
xchg
jecxz
mov
add
inc
jo
cmp
xor
outsb
mov
or
inc
int
sbb
add
das
mov
sbb
adc
xor
je
roll
into
loopne
rclb
clc
outsl
cmpsb
outsb
push
repnz
sbb
and
mov
imul
adc
lods
movl
push
push
inc
std
les
lds
cli
aas
pop
xchg
mov
fs
mov
adc
into
xor
mov
cmpb
popa
in
enter
pop
push
sbb
hlt
cmpb
xor
pop
mov
xor
inc
sub
pop
sbb
jno
fimull
popa
sbb
loope
cld
mov
dec
addb
out
add
cmc
dec
jecxz
sbb
xor
shlb
lds
ret
adc
and
sub
xchg
inc
or
dec
jg
jo
and
mov
adc
cmpsb
adc
push
mov
popf
sbbb
push
cmp
orl
stos
xchg
shll
mov
addl
mov
mov
or
mov
add
push
adc
push
adc
inc
add
mov
adc
lret
test
adc
out
out
or
pop
xor
addr16
insl
movsb
sti
loope
add
lds
push
orb
add
mov
std
xchg
lods
sbb
int
jmp
cvtpi2ps
es
out
imul
jg
and
std
sbb
push
sbb
push
adc
push
push
cmpsb
push
fidivl
mov
sbb
adc
add
lock
test
gs
jae
add
or
cld
inc
or
and
cmp
fwait
outsl
add
decl
enter
adc
add
insb
jae
lock
stos
dec
adc
push
sbb
add
or
rorb
add
bnd
pushf
sub
push
mov
xchg
movsl
cmpsl
sbbb
jo
subb
test
inc
lea
push
or
push
pusha
or
or
ss
push
sub
movsb
daa
push
jne
mov
scas
xor
inc
mov
or
push
mov
sti
push
mov
adc
loope
add
jmp
sub
jns
pop
inc
or
je
cmpsb
dec
in
scas
fildl
mov
push
xor
push
das
sbb
in
jp
xor
or
inc
lret
imul
xor
and
or
arpl
pop
loope
lds
data16
sbb
dec
ret
add
std
pop
scas
setae
subb
cmc
push
dec
iret
dec
gs
dec
imul
out
lods
mov
jo
xorl
fsubrl
sbb
les
ror
inc
int
mov
popa
xor
push
or
sbb
add
or
mov
jmp
inc
add
loopne
popf
call
loopne
jg,pn
cmp
test
lock
inc
jge
pusha
mov
jl
cwtl
mov
xchg
mov
out
add
test
pop
inc
jb
sbb
sti
leave
loope
mov
and
rorb
pop
pop
inc
movsb
ficomps
movsl
aad
sbb
inc
std
fistpll
pop
ljmp
mov
mov
jl
sub
push
pop
out
pop
mov
inc
js
add
push
adc
push
adc
sarl
xor
iret
dec
fbld
das
add
sbb
and
arpl
filds
enter
cwtl
add
sub
cld
ja
and
pop
shrl
filds
mov
pop
dec
rcrl
push
rclb
sub
sub
repz
or
add
cwtl
clc
or
xchg
lea
add
aad
add
sbb
jmp
addb
and
push
xor
fwait
add
lret
popa
mov
or
xchg
scas
adc
and
bound
and
lret
bound
mov
mov
add
mov
add
adc
mov
pop
jae
dec
mov
jno
inc
jo
push
push
jae
cmp
or
or
dec
mov
sti
jns
sbb
movsl
pop
rorl
pop
pushf
jge
or
dec
push
mov
ret
lret
xor
pushf
test
inc
jae
icebp
fildll
inc
and
dec
dec
mov
and
add
ret
and
jge
inc
lret
sbb
nop
push
or
xor
and
add
mov
aam
cmp
sarb
cs
push
jae
jno
call
lret
shll
xor
pop
add
loopne
push
or
roll
add
inc
call
jb
push
out
out
cmp
jne
xor
das
insl
hlt
xlat
or
popf
dec
pop
adc
add
and
mov
xchg
in
lret
adc
push
jb
test
inc
addl
cmp
lea
jae
push
mov
lds
add
test
jo
push
outsl
add
sbb
aas
and
push
mov
cltd
jb
test
inc
gs
fwait
jae
hlt
imul
pop
int
mov
push
adc
add
adc
pushf
inc
adc
jle
push
sub
call
adc
push
pushf
clc
call
nop
sbb
push
sbb
push
iret
int
push
xor
or
sbb
rorl
sbb
xor
pusha
lcall
or
xor
or
movsl
mov
loope
inc
in
inc
nop
in
mov
mov
push
mov
xchg
cmp
or
repz
rclb
filds
int
mov
mov
ss
xor
adc
int
jnp
xchg
and
push
dec
pop
cmp
push
mov
jl
in
xor
or
lock
pusha
jo
test
mov
andl
cmpsl
or
add
mov
arpl
insl
sbb
xor
jmp
rolb
jo
and
jl
jecxz
daa
pop
sub
enter
andl
or
push
jne
dec
orl
mov
inc
cwtl
jg
popa
ja
adc
inc
je
es
xchg
icebp
or
and
pop
cmpsl
sub
jns
add
les
xor
stos
cmp
divl
scas
or
inc
cltd
stc
xor
jbe
scas
add
jae
push
push
mov
ficomps
inc
std
stc
int3
sub
inc
cmpsl
pop
push
cmp
shll
jne
add
mov
daa
inc
cmp
pop
and
and
lods
cmp
stos
or
adc
or
and
xchg
cmp
mov
inc
fwait
sub
les
rclb
pop
dec
arpl
cmp
cltd
inc
push
add
inc
fcomps
stos
insb
xor
in
sub
sbb
sub
and
movsb
into
xchg
or
icebp
pop
scas
sbb
or
mov
jb
sahf
outsl
push
jl
into
add
sub
adcl
test
xorb
mov
add
stos
stc
leave
mov
push
imul
sub
test
sbb
clc
mov
sub
mulb
push
xor
push
shl
adc
aad
test
push
scas
push
scas
add
sbb
or
daa
loope
xlat
sub
popa
shlb
xor
pop
enter
add
stos
push
cmp
or
sbb
pop
loope
push
fwait
and
push
int
push
mov
icebp
test
xchg
aaa
xorb
ja
cmp
pop
sub
aad
xchg
jo
in
add
cs
jnp
dec
jg
add
enter
inc
rcr
add
cltd
xor
or
push
test
cmpb
movsb
mov
mov
in
add
pop
adc
push
orb
fisubrl
js
pop
xchg
lods
pop
and
test
push
mov
pop
and
mov
loope
pushf
mov
outsb
gs
and
adc
adc
shll
rorb
aad
and
xchg
and
jmp
andl
test
push
xchg
scas
push
in
outsl
xchg
and
cmp
pop
leave
xor
cwtl
ds
outsl
and
mov
fdivs
jo
sub
add
inc
sbb
dec
jl
aaa
or
int3
cmovno
call
add
inc
mov
fwait
sub
dec
insl
or
call
sahf
inc
loopne
adc
add
mov
push
into
pop
fistpl
add
les
adc
cmp
pushf
sub
icebp
sar
mov
mov
or
fiadds
and
push
push
push
push
in
fildll
push
icebp
push
sbb
adc
loopne
loopne
add
add
mov
jecxz,pn
pop
cmp
sbb
rolb
mov
or
movsl
fsubrs
loope
cltd
loop
xchg
push
in
push
xchg
sbbb
cwtl
or
mov
ljmp
push
mov
xchg
sbb
push
push
sub
int
negl
xor
add
or
test
loopne
cmp
add
jo
lcall
xor
pop
je
fcomi
jne
adc
out
inc
xor
and
or
or
shll
idivl
add
dec
add
jo
bndldx
pop
add
test
je
xchg
push
pop
icebp
and
xor
scas
mov
jb
xchg
ret
add
pop
in
stos
push
jmp
sub
sub
adc
adc
inc
pusha
inc
mov
in
add
and
jo
fisttpll
xchg
lods
jb
fimull
cmp
mov
cltd
mov
push
out
mov
test
inc
sbb
sub
sbb
jmp
sbb
add
push
sbbb
and
xchg
xchg
add
dec
outsl
add
in
xchg
add
fcom
in
aam
push
aaa
inc
sarb
add
idiv
add
push
sbb
push
js
cmp
in
mov
or
push
inc
dec
movsl
int
aaa
filds
inc
andb
adc
inc
subl
lahf
mov
or
fiadds
mov
fimull
mov
pusha
or
into
lcall
jno
ret
mov
sbb
mov
add
cmpsb
inc
mov
rol
dec
insb
mov
cmpsl
sub
inc
sub
sbb
mov
sbb
xor
push
adc
popl
pushf
mov
mov
out
ds
xchg
ret
rolb
cmp
xor
xor
mov
and
add
xchg
fistpl
dec
sub
leave
pop
cmp
jecxz
cmp
aam
xchg
xchg
xorl
cmpsl
fisubs
add
mov
mov
and
cmpsb
push
inc
push
roll
mov
push
cmovne
gs
dec
push
sahf
imul
pop
aad
pop
outsb
dec
ja
js
adc
and
pop
sbb
lods
xlat
stc
shrl
or
mov
addl
test
and
rorl
in
std
mov
ljmp
mov
dec
pop
xchg
roll
stos
add
loopne
xlat
xchg
sbb
xchg
mov
rclb
andl
in
pop
add
mov
dec
or
pop
sbb
mov
sti
mov
ljmp
ljmp
pop
cmp
adc
xlat
es
lods
call
push
decl
ja
outsb
int3
mov
cmp
xor
jbe
add
xchg
add
cmpsb
in
andl
jae
mov
and
cmp
jp
push
jmp
sbb
mov
mov
mov
push
ret
mov
push
or
jb
or
or
pushf
sub
rorb
sbb
mov
and
push
mov
out
pusha
stos
cltd
mov
push
or
dec
pop
pop
add
mov
imul
sub
fildl
sbb
add
pop
inc
cmp
leave
add
or
xor
pop
pusha
rolb
cwtl
dec
jae
dec
jns
push
mov
stos
or
pop
int
add
loop
pop
mov
mov
popa
jp
inc
sarb
jg
adc
lcall
inc
xor
push
mov
int
sbb
add
icebp
add
push
cmp
sbbb
leave
aas
sahf
mov
lret
imul
inc
daa
mov
dec
xchg
daa
enter
pushf
rcll
sbb
and
and
addr16
popf
xchg
lret
cmc
loop
mov
or
and
adcb
xchg
xorl
dec
pusha
mov
inc
push
adc
adc
xlat
push
or
xor
add
mov
add
xchg
sub
add
movsb
dec
xor
xorb
add
cmp
pop
mov
inc
ds
ds
add
xchg
repz
push
push
adc
add
pop
or
ljmp
push
push
je
push
pop
inc
hlt
loopne
pop
adc
outsl
rcl
adc
dec
mov
dec
cpuid
mov
xor
cmp
ss
call
mov
push
aas
test
repnz
lcall
xchg
xchg
dec
sub
cmc
in
mov
mov
inc
movsb
xchg
pushf
mov
add
cmp
subb
es
sbb
adc
inc
push
add
je
into
push
or
movsb
std
subb
sahf
movsb
fldl
push
add
and
sub
fwait
add
sbb
push
jno
or
mov
xchg
out
data16
inc
add
stos
sub
negl
cmpb
push
add
test
add
inc
push
add
and
add
push
into
push
les
shrb
mov
cmp
xor
inc
rcll
aas
inc
rorl
xchg
cmp
rcrl
push
stc
xor
cmp
xorb
sbb
in
call
je
mov
inc
mov
xchg
jae
rol
ljmp
and
mov
stc
adc
inc
inc
jle
xor
lcall
xor
loopne
push
push
popa
lds
mov
cmp
push
inc
out
add
pop
jbe
push
test
inc
sub
scas
jne
rcrb
add
jo
xor
pop
and
pop
scas
ret
inc
loopne
pop
aas
add
add
mov
jno
adc
mov
sbb
mov
jnp
sbb
and
ljmp
sbb
sub
jge
icebp
mov
push
adc
pushf
in
stos
jo
test
pop
inc
xorl
out
inc
int
adc
ret
add
inc
add
inc
jno
mov
es
adc
rolb
sqrtps
fs
into
adc
in
cmpb
adc
or
testb
push
inc
jae
add
adcb
je
sbb
and
in
push
inc
rolb
add
loope
psubusb
xchg
inc
mov
dec
orl
xor
or
fnstsw
cmp
iret
popf
mov
call
xchg
add
pop
inc
cmp
repnz
inc
jae
fcomi
mov
das
test
add
ja
pop
adc
mov
sub
jne
xor
shlb
jo
pusha
jb
cmp
aad
push
lods
inc
sub
add
lea
adc
pop
push
jge
push
mov
push
orb
je
sbb
adcb
cmpsl
sub
xchg
test
xchg
push
mov
inc
jge,pt
cwtl
test
icebp
sub
pop
roll
push
or
fadd
or
xorb
inc
adc
test
int
xchg
ret
cmp
push
mov
lcall
arpl
add
xchg
xor
mov
sbb
inc
xor
add
stos
cmpsb
stos
cmp
rclb
mov
jae
xor
add
and
inc
andb
incl
scas
sbb
pushf
pushf
aam
bound
lret
and
push
imul
inc
adcb
pop
mov
add
adc
pop
cmp
adc
add
or
push
in
aaa
mov
sub
add
mov
inc
adc
enter
mov
imul
faddl
push
jne
cli
cli
ret
jb
adc
sub
sahf
int
in
pusha
xorb
aam
add
jne
sbb
mov
mov
push
inc
aad
fisubrs
add
test
push
cmp
sbb
jnp
scas
add
iret
xchg
test
jp
xchg
xchg
insl
faddl
xlat
push
lret
push
sub
jle
scas
hlt
add
sbb
add
jo
int3
or
lcall
jne
add
inc
add
jno
jl
push
push
shrl
ret
xchg
and
movsb
lods
ljmp
jns
shl
subb
pop
test
cmp
mov
daa
test
xor
add
or
add
adcl
sub
scas
or
adc
hlt
xchg
add
loope
dec
ficompl
rol
push
push
ret
pusha
sbb
jbe
dec
pop
aad
or
jae
cmp
mov
dec
pop
shlb
xchg
lods
and
mov
lcall
adc
mov
mov
mov
sub
int3
adc
sub
scas
mov
or
ja
inc
adc
testl
lods
sbb
dec
cmpsb
push
aad
jb
push
sub
xchg
mov
fsub
push
adcb
data16
xchg
pop
lods
adc
push
jbe
addl
dec
add
push
cwtl
jo
push
fldcw
sub
push
and
push
sbb
inc
lcall
orl
movsb
outsl
or
in
cmp
stos
fisubrl
xchg
xorb
hlt
icebp
jo
int
cmp
cmpsl
and
test
mov
cmp
cs
cmp
mov
dec
mov
test
inc
pushf
pop
mov
mulb
stos
sbb
ret
mov
icebp
andb
mov
cmc
or
inc
mov
shll
mov
xor
mov
sti
outsl
mov
push
mov
add
pushl
add
call
leave
ret
pop
jg
mov
xor
add
push
pop
sub
mov
mov
pop
push
xor
add
add
rcrl
push
or
add
in
in
incl
movsb
movsb
pop
xor
push
pop
push
mov
jno
add
in
jl
jno
add
rcrl
rcll
sbb
sbb
roll
mov
rcl
mov
jno
add
mov
fiaddl
pop
sub
add
das
aaa
idivl
push
push
adc
outsl
sub
mov
insl
mov
dec
jno
push
sub
fistpl
or
shrl
dec
mov
movsb
mov
mov
insl
adc
mov
movsb
add
xor
mov
sbb
lods
mov
xchg
mov
stos
inc
mov
jl
jl
imul
insl
mov
sbb
pop
adc
inc
lahf
push
mov
pop
mov
xor
pop
imul
outsl
insl
movsb
dec
jle
sbb
pop
xlat
pop
sbb
xor
mov
test
subb
into
sbb
pop
jmp
dec
sbb
roll
pop
imul
jno
dec
xchg
movsb
shrl
dec
lods
insl
int
mov
or
xlat
pop
imul
adc
lcall
sub
xor
fcoml
ret
das
sbb
loope
xchg
jl
mov
inc
xor
pop
cmp
pop
lret
cmp
mov
or
xor
xor
pop
imul
imul
cs
sbb
test
push
sub
cmpsb
pop
sbb
mov
mov
xor
insl
sub
rorl
test
inc
fimuls
adc
mov
jne
jbe
jnp
or
jl
lods
pusha
sub
lods
mov
or
pop
adc
insl
cltd
pop
test
sbb
fldcw
fmull
push
sbb
push
jl
jl
dec
test
insb
outsl
adc
inc
cs
fmuls
les
test
xorb
scas
stos
jns
in
push
jg
push
push
pop
fidivrs
add
lea
adc
pop
imul
inc
int3
dec
sbb
xchg
push
bound
mov
pop
jno
mov
sbb
push
sahf
adc
pusha
sub
dec
aaa
mov
cli
shll
pop
mov
xchg
out
imul
js
icebp
sbb
insl
imul
das
pop
movsb
loopne
ret
push
push
or
inc
mov
popa
mov
adc
movsl
push
mov
mov
addr16
pop
aaa
sbbb
imul
std
mov
shrl
pop
imul
cmpl
fcmovbe
pop
mov
sub
lods
sarl
or
ret
rcrl
and
shll
cmp
mov
imul
mov
inc
outsl
sbb
pop
adc
scas
mov
mov
mov
push
push
lods
in
shll
loopne
push
loopne
xlat
or
mov
ja
pop
xlat
sub
rcl
inc
xor
xchg
pop
xlat
xchg
push
popf
mov
push
insb
push
orl
xchg
push
cli
sbb
mov
cmpsb
int
or
and
mov
pop
imul
lods
mov
js
jmp
mov
cmp
les
pop
push
ret
mov
pop
je
push
dec
mov
sub
adc
int
iret
xor
push
imul
sbb
pop
bnd
loopne
fdivl
sar
subl
icebp
shl
jae
scas
mov
movsb
jecxz
rolb
aaa
jne
aam
cli
cli
jl
mov
mov
cwtl
mov
push
pop
lcall
adc
clc
lea
push
push
xchg
pop
rcrb
data16
push
nop
add
push
lea
push
lea
pop
inc
rorb
pop
repz
insl
jo
or
jl
sbb
nop
inc
mov
lcall
pop
xor
es
and
or
and
outsl
inc
imul
testl
fiadds
cmp
aas
inc
imul
sbb
andl
xor
jg
inc
sub
sbb
insl
imul
xchg
add
or
push
and
xchg
jno
mov
pop
xlat
or
add
jl
push
out
cmp
ja
jno
pop
sub
or
shll
test
daa
movsb
dec
int
lret
ds
pop
jl
divb
sbb
ret
andb
sbb
outsb
aaa
test
mov
pop
leave
out
mov
jl
jae
movsl
xchg
andl
das
adc
sub
out
rclb
loopne
aaa
pop
mov
out
das
in
sbb
jno
leave
rorb
pop
and
pop
pop
lcall
xor
and
fiaddl
jge
jmp
cmp
dec
mov
rcr
push
add
jecxz
mov
dec
add
jo
aam
fdivl
in
cmp
xchg
loopne
push
mov
sbb
adc
dec
dec
xchg
pop
repz
pop
jae
movsb
sbb
lcall
jg
xlat
jo
mov
addl
fcoml
pop
xchg
ret
inc
sbb
ja
adc
push
xor
fcomp
pop
std
nop
mov
jge
in
add
push
repz
ja
and
stc
mov
div
mov
inc
push
inc
mov
jno
add
idivl
inc
sub
jg
jg
inc
pop
add
add
mov
out
pop
push
inc
sbb
inc
push
or
xlat
xor
rolb
jmp
mov
push
add
push
out
xor
sbb
lock
jmp
call
jp
xchg
nop
cmp
push
data16
jmp
sarl
push
or
mov
loop
subb
push
sbb
in
and
jno
rcl
sbb
shl
call
stos
mov
dec
in
mov
mov
imulb
mov
xchg
push
push
xor
dec
shll
mov
loop
push
sbb
cmp
rcrb
push
and
cs
jae
ja
cmp
pushf
mov
call
stos
pop
sbb
mov
cmp
or
rcl
push
mov
mov
roll
andb
pop
push
aad
push
ret
pop
jae
rorl
push
rolb
inc
loopne
mov
push
mov
sti
push
out
pop
outsl
in
cmp
stos
loope
xor
iret
mov
pop
scas
push
mov
jmp
lods
xor
jae
mov
mov
adc
pop
ret
mov
add
jnp
or
xor
pop
int
push
add
xchg
jo
mov
xor
push
xchg
cmp
lock
adc
pop
xlat
dec
xor
jae
mov
lock
mov
scas
inc
ficoms
pop
add
test
mov
loope
rcl
push
xchg
rcrl
jo
fdivr
rcl
sub
mov
lcall
mov
mov
insl
shl
add
push
movsb
jo
loopne
std
push
mov
pop
lret
push
mov
push
inc
sub
scas
imul
sti
out
popa
stc
fbstp
test
pop
arpl
lods
cmp
test
fistpl
jp
jne
cmp
xor
inc
jp
cmp
jno
sub
cltd
sbb
sbb
call
sarl
out
xor
xor
aaa
mov
push
ret
repz
jae
pop
pop
jge
clc
mov
or
test
sbb
cltd
xchg
adc
ss
xchg
es
xor
sub
sub
pop
aad
cmp
xor
mov
pop
sbb
jmp
dec
push
pop
add
sbb
ds
or
pop
push
pop
push
push
xor
mov
sbb
shll
inc
jnp
mov
sbb
pop
xchg
dec
push
into
cmp
and
or
add
shlb
sbb
push
and
adc
push
xchg
jno
mov
les
ja
in
dec
sbb
mov
push
jecxz
gs
jmp
and
xor
add
shl
jno
hlt
add
jo
inc
shl
movsl
daa
cwtl
push
xchg
sti
sbb
dec
sub
andb
pop
push
jecxz
popa
push
imul
push
in
sub
sbb
pop
add
or
dec
addb
aam
adc
sti
pusha
dec
pushl
aam
test
and
inc
lods
add
sbb
push
scas
shrl
xor
loope
xor
mov
sbb
pop
push
mulb
mov
loope
sbb
test
sets
movl
and
out
hlt
adc
push
outsl
push
sub
das
js
add
test
or
sub
es
cltd
push
ja
es
imul
movsl
mov
stos
insl
xchg
ret
push
sub
add
mov
movsb
mov
sbb
lcall
scas
pop
rclb
sbb
xchg
adc
scas
pop
jnp
data16
lret
add
push
jle
cmp
xor
mov
sahf
cmc
out
pop
pop
xor
test
stos
es
jl
add
pop
push
cmp
cs
add
lods
xor
adc
cwtl
mov
lcall
cltd
sub
js
cltd
inc
add
int
or
addb
pop
das
jbe
sbb
fisubrs
mov
stos
test
aad
into
or
aad
into
push
xor
sub
or
inc
gs
mov
and
sbb
lcall
pushf
leave
loopne
inc
sarb
cmp
leave
dec
mov
mov
mov
mov
add
pop
mov
xorb
and
dec
sbb
mov
adc
sub
ljmp
xor
ljmp
test
dec
into
xor
sbb
in
sbb
or
into
push
push
xor
push
adc
fnstenv
js
xor
fcomp
push
andl
jnp
sbb
ret
sbb
push
les
jbe
xchg
mov
scas
sbb
and
jle
push
push
push
mov
daa
aas
or
nop
cld
pop
std
lods
dec
mov
jle
frstor
xchg
leave
push
mov
rorl
pop
stc
inc
add
push
pop
es
or
in
xor
push
xchg
bound
ret
popa
ljmp
jb
xchg
jp
scas
bound
stos
pop
jne
bound
idivb
sub
ja
or
sbb
rcrl
xor
mov
add
sub
ds
std
dec
cwtl
jp
pop
xchg
repz
test
jb
dec
inc
fisubs
out
leave
in
cwtl
or
les
xor
aad
mov
jae
mov
ret
nop
cmp
ret
popa
xor
or
add
addb
adc
pop
cmc
lret
int
add
icebp
bound
and
sub
cmp
sbb
dec
movsb
aaa
shlb
sahf
mov
int
push
cld
inc
cld
push
dec
lock
mov
ljmp
rcrl
sbb
les
mov
or
lcall
popf
data16
xor
ja
add
scas
sbb
test
popf
mov
scas
mov
insl
jns
aaa
mov
inc
xor
mov
mov
push
or
pop
int
xor
data16
or
push
mov
cmp
lcall
pop
inc
sti
fbstp
sbb
push
ret
adc
and
fcompl
popa
mov
dec
movsb
sub
insb
pop
push
popa
ret
adc
adc
loope
bnd
adc
les
mov
and
adc
pop
std
pop
mov
mov
inc
or
xor
icebp
negb
ret
mov
movsb
xor
sbb
or
xchg
daa
jne
mov
mov
sub
imul
jns
sbb
and
cmp
xor
mov
pusha
push
mov
aad
stos
cmp
and
sub
out
adc
or
test
pushf
ret
outsw
pop
imul
adc
gs
xor
dec
sbb
mov
and
sti
imul
mov
lea
icebp
mov
jl
lcall
lock
fdivrp
pop
cmp
aas
pop
fdivl
and
jno
pop
add
or
xor
andb
into
inc
imul
mov
lds
jb
add
lcall
adcl
cs
xor
xchg
add
daa
mov
sub
jmp
icebp
pop
js
das
sbb
pop
cs
sub
out
jns
jbe
pushw
dec
mov
das
sbb
cltd
sbb
out
addb
lods
sbb
movzbl
sbb
push
mov
movsb
rcll
jb
inc
lea
pop
sbb
add
pop
pusha
out
insb
dec
lock
pushf
call
in
test
gs
sub
dec
lock
fdivrs
lods
outsl
out
pop
std
iret
dec
add
cmpb
xor
incl
dec
sbb
sub
sbb
ds
cmp
push
mov
in
cwtl
xor
pop
push
arpl
repnz
xchg
iret
add
punpckhbw
rcll
jb
or
cmp
shll
loop
rcrl
addb
xchg
mov
jg
in
push
push
sbb
adc
push
push
xchg
add
adcb
or
test
roll
push
jae
or
fsubr
addl
ret
rolb
sbb
push
jbe
jecxz
mov
pop
imul
xchg
mov
adc
xlat
pop
pop
sbb
test
push
pop
scas
xorb
cmpb
mov
push
push
fwait
loope
loopne
out
sub
push
push
jl
push
cs
jle,pt
sub
bswap
pop
not
or
sbb
or
fsubrl
sbb
nop
flds
aad
mov
mov
aam
mov
dec
imul
xchg
sbb
cwtl
or
and
inc
sbb
mov
js
sbb
stos
xchg
rcl
lcall
ljmp
xor
sbb
xor
mov
dec
stos
sbb
pop
jno
sbb
sbb
jge
ss
stos
sub
push
insb
and
int
test
xchg
mov
inc
cmpb
adc
jmp
bound
push
scas
push
movsb
push
sbb
sbb
jg
pop
iret
popa
addl
test
mov
inc
mov
inc
sub
add
movl
inc
imul
mov
sub
pop
jno
sbb
adc
imul
dec
test
add
pop
movsb
adc
dec
es
or
or
mov
outsl
xlat
cmp
cmp
stos
inc
pop
jae
lea
pop
imul
xor
pop
add
insl
stos
pusha
call
xchg
pop
sahf
pop
push
xor
xor
lock
adc
lods
sbb
push
andl
xor
sub
and
sub
movsb
pop
loope
lock
cs
rcrl
mov
cmp
jbe
cmp
jge
xchg
test
mov
aad
mov
int
lods
dec
cwtl
xchg
adc
or
inc
daa
mov
dec
sbb
sub
hlt
in
mov
sbb
es
or
cmp
loopne
inc
push
test
add
inc
test
sub
test
test
subb
clc
loopne
pop
cltd
or
int
cmc
aaa
add
loop
repz
push
orb
cmp
dec
add
pop
pop
jge
cltd
jo
or
pop
push
add
das
lds
test
jb
and
adc
and
adc
orl
in
pop
movsl
sbb
cs
out
push
fistpl
rcrl
cs
pop
loopne
stos
push
add
rorb
subl
adc
sub
cmp
insb
icebp
mov
xor
sar
mov
rclb
ljmp
mov
lock
fmull
inc
cmp
add
adc
and
sti
fiaddl
pop
mov
addl
popa
adc
out
cld
lea
push
push
push
stos
and
jo
call
push
arpl
and
mov
mov
test
mov
inc
cmp
data16
mov
rcrb
ljmp
inc
jno
add
dec
adc
push
in
mov
pop
cmp
and
aam
pop
loopne
dec
inc
mov
adc
test
pop
push
inc
xor
or
cli
and
int3
or
inc
jae
fwait
outsl
sbb
dec
mov
enter
sbb
jae
fsubs
sub
sbb
sahf
xchg
in
push
sbb
ret
dec
daa
cmp
es
mov
pop
fdivrl
inc
jae
test
popf
sahf
rorl
shlb
push
cmpsb
and
mov
push
add
mov
int
sbbb
or
xor
lcall
or
and
das
jo
out
pop
cld
out
add
insb
sbb
sub
sbb
loop
jl
repz
xchg
pop
adc
enter
andb
int
movsl
add
repnz
mov
test
rcrl
jne
add
ja
cmpb
div
cltd
lcall
addb
pop
or
outsl
adc
sbb
fld
pusha
push
in
mov
aas
push
push
and
or
or
cmpb
mov
xor
sbb
pop
sbb
push
ss
aam
mov
enter
push
decl
into
cmp
push
xchg
and
rcl
test
fstpt
dec
xor
xor
jb
cltd
jg
mov
xor
outsb
movsb
cmpsl
cmc
ret
addr16
addb
scas
jbe
jl
inc
fidivs
pop
rclb
push
mov
or
jl
xchg
pusha
jo
sbb
data16
push
xor
mov
sbb
push
insl
cs
aad
add
push
xchg
test
aad
and
sbb
jb
les
test
jo
sbb
push
push
push
add
xor
xchg
sub
add
push
fwait
sub
sahf
mov
jo
sbbb
shll
adc
cmp
insl
imul
rcrl
in
mov
sub
ret
lock
sbb
xorl
loope
xchg
push
les
xor
mov
inc
loope
cmp
pop
pusha
push
outsl
cltd
mov
clc
sub
jb
bound
jecxz
xor
add
andl
filds
xor
les
add
add
cmpsb
xor
pop
enter
mov
popa
adc
push
jmp
push
mov
test
push
pushf
pop
scas
dec
adc
push
adc
mov
rcrl
dec
mov
pop
xor
sbb
xlat
push
add
push
cld
jno
addr16
add
fsubrl
subl
jo
addr16
jne
push
loopne
mov
add
ja
push
pop
cmp
in
cmpsb
or
cmp
out
push
addb
stos
cld
in
nop
sbb
lock
leave
mov
jg
push
push
push
adc
adc
fildl
shl
push
call
mov
cs
adc
call
lea
inc
test
mov
addr16
jbe
lock
addr16
pop
hlt
push
dec
and
sbb
mov
pop
sarl
sub
mov
pop
outsl
push
outsl
movsl
lret
lcall
jb
adc
loopne
icebp
enter
fwait
mov
in
mov
aad
mov
scas
and
add
or
push
adcl
cmp
adc
scas
lcall
cmp
mov
push
rcrl
cld
sub
mov
pop
and
sub
cwtl
dec
rclb
cmp
push
sbb
add
lahf
push
push
pop
call
loopne
mov
outsw
xchg
lret
aam
push
mov
and
jnp
sbb
lcall
pop
inc
roll
jns
sub
in
int
loop
enter
cmp
dec
shrb
add
js
bound
jno
inc
jl
and
pop
cmp
jb
jo
dec
dec
adcl
cmp
shrl
add
dec
ret
jae
push
lea
mov
pop
jae
xchg
sarl
popa
cmp
or
aam
fistps
sbb
pop
mov
jae
test
and
addl
hlt
pop
inc
xor
cmp
leave
outsb
scas
sub
push
shrl
mov
insl
mov
cltd
lds
add
iret
jle
popa
or
push
mov
xor
lods
mov
in
and
or
xchg
leave
dec
mov
icebp
pop
outsl
push
clc
in
lea
push
cmpsl
push
outsb
cld
aam
adc
cwtl
or
jg
sahf
jle
adc
sub
xor
inc
sub
dec
xor
ffree
mov
xor
stos
icebp
cmp
mov
xchg
push
add
sub
insl
jl
repnz
enter
hlt
enter
push
xor
lret
je
xor
or
mov
xor
jnp
xor
mov
sbb
sbb
int3
mov
push
icebp
sub
pusha
sub
cmp
pop
leave
call
sub
xor
orl
ss
or
sbb
in
push
add
aam
mov
xor
es
add
jbe
ret
add
lds
xchg
xor
iret
xor
dec
rorb
lea
rorl
inc
xlat
xor
ljmp
mov
test
rorl
jg
cs
xchg
lret
int3
imul
shlb
test
aad
sarl
mov
addb
dec
pushf
add
dec
mov
jbe
jo
pop
addb
mulb
add
shr
or
push
in
sub
sbb
pop
cmp
mov
int
imul
pop
dec
xchg
sbb
push
iret
cmp
add
shll
and
sub
pop
pop
rcrl
popa
js
xor
je
cmp
es
jae
dec
sub
fs
pushf
and
sub
or
pop
sbbl
shll
roll
sbb
push
mov
xchg
sbb
nop
ss
inc
roll
mov
loopne
jno
cs
fdiv
aaa
lahf
or
mov
movlps
jmp
xchg
gs
insl
lret
mov
xor
xchg
xchg
leave
nop
aad
les
sub
lcall
dec
jne
xor
push
and
xlat
sub
imul
int
icebp
xor
push
mov
push
sbb
mov
outsl
jo
pushf
shl
mov
add
arpl
pushf
cmp
sub
push
cld
mov
fcomps
xor
push
aad
mov
mov
add
or
enter
and
flds
lock
shr
sbb
push
cmpsb
or
dec
nop
mov
insl
pop
mov
pop
stos
pop
mov
push
xor
push
aaa
or
and
imul
xor
repz
inc
stos
push
pop
daa
inc
pusha
fadds
imul
stc
jns
loopne
in
push
xorl
adc
mulb
sub
push
std
test
xor
pop
and
mov
xor
add
adc
jne
aad
xlat
stos
sbb
jo
xor
rolb
icebp
sub
jl
pushf
push
out
add
call
ret
xor
mov
subb
jae
xchg
and
test
xchg
push
pop
push
cmp
ret
adc
mov
mov
loopne
xchg
repz
pop
jae
mov
mov
sbb
mov
mov
in
jecxz
mov
shll
lahf
outsl
aam
push
cmp
jl
sbb
int
cmp
test
js
adc
out
fs
mov
adcb
sub
lahf
push
xchg
mov
xchg
or
push
jb
xchg
push
sbb
jg
scas
cmpsb
mov
sbbl
ror
xchg
pop
cltd
shlb
icebp
push
dec
cs
outsb
outsl
lret
push
mov
int3
xchg
push
ss
or
add
xchg
insb
mov
mov
int
int
or
push
inc
je
shrl
cs
pop
push
cmp
and
call
fidivl
dec
sbb
pop
mov
in
aad
sub
jge
adc
sti
sti
jo
sbb
add
jae
or
fstpt
shll
cs
movb
or
dec
inc
movsb
add
mov
cmp
in
pusha
movsl
iret
cld
fstl
push
mov
mov
and
pop
push
imul
jge
sbb
inc
push
add
and
pushf
jo
hlt
cmovno
into
adc
dec
repnz
loopne
add
or
add
rorl
pop
imul
ja
divb
add
jae
test
cmp
stc
insl
add
dec
aas
mov
mov
or
dec
int3
cwtl
scas
sbb
addl
push
sub
loope
adc
pop
xor
mov
sbb
sub
xor
and
dec
or
cltd
sub
xchg
mov
ret
rcrl
lret
pop
xchg
sbb
into
fs
scas
arpl
and
push
and
mov
sbbb
cmp
mov
cmpb
push
mov
scas
add
in
jecxz
cltd
dec
push
push
cmc
mov
xlat
or
ja
orl
imul
fsubs
xchg
pop
in
scas
out
ficoms
js
cs
inc
rcll
sub
loop
into
xor
cld
aad
cmp
mov
movsb
aas
pop
mov
ret
push
mov
ret
repnz
call
ret
lret
sub
loop
inc
stos
pop
jae
scas
out
push
mov
pop
push
sysret
cmp
lret
shll
fldcw
fs
aas
mov
jl
and
sub
push
test
in
das
mov
add
lcall
push
adc
shll
push
sbb
ds
mov
pop
pop
hlt
push
jmp
pop
dec
popf
add
pop
push
xor
dec
dec
cltd
add
faddl
cs
ss
rolb
and
fmuls
sub
push
jae
sbb
popa
adc
aas
jbe
outsb
jecxz
pop
cs
aad
and
movl
shrb
or
mov
stos
shl
into
movsb
cmp
test
xchg
mov
and
iret
popf
ret
push
pop
mov
in
mov
loopne
inc
int3
pushw
roll
mov
enter
rcrl
xchg
mov
leave
jb
xchg
mov
test
cmp
lahf
into
in
pushf
adc
dec
ret
inc
mov
pop
cmp
insb
push
mov
incb
outsl
and
out
xor
xchg
jnp
xor
das
pop
jle
sbb
xor
xorl
mov
inc
xor
popa
and
inc
ret
imul
scas
adc
push
jl
pop
das
sbb
pop
lcall
add
test
push
jae
xchg
mov
cmp
adc
add
push
into
test
jmp
push
dec
in
xor
sarb
ret
int
test
cmp
in
jno
daa
adc
clc
out
nop
stos
mov
cmp
lret
test
cs
mov
pop
add
xor
inc
add
xchg
or
adc
push
lret
mov
push
loope
push
scas
lods
or
in
jbe
xchg
or
sub
mov
jb
loope
insl
andb
sbb
fsubrs
push
test
pop
cmpsb
sbb
mov
mov
xchg
movsb
cmpsb
call
fcoml
push
cmp
lods
xchg
pop
out
mov
shl
inc
out
rclb
jno
outsb
pop
dec
sbb
inc
push
out
push
mov
sub
dec
cwtl
push
or
rorl
fs
test
pop
fs
push
sbb
sub
and
jl
xor
fidivl
add
test
add
bound
add
rcl
push
shll
push
sbb
andb
jg
into
adc
cmpb
dec
stc
push
cli
push
in
inc
cmp
mov
adc
test
mov
fisubl
jno
out
loopne
out
push
hlt
data16
pop
fwait
cmp
fwait
pop
loopne
or
sub
cmp
pop
push
lods
push
push
loopne
xchg
shll
movsb
sbb
xchg
xchg
mov
enter
adc
data16
out
ljmp
std
adc
push
aas
xchg
mov
divl
inc
mov
sbb
mov
test
mov
pop
in
cmp
xor
stos
data16
aam
sahf
or
push
pop
cs
mov
addl
out
aam
xor
jecxz
pop
pop
or
sbb
xorb
mov
or
mov
int
push
into
lds
push
and
xchg
push
loopne,pn
push
cmp
mov
lods
popf
out
fucom
cwtl
jo
jae
rclb
xor
addb
sub
jmp
sub
xchg
cmpsl
adc
outsb
cwtl
push
into
cmp
push
hlt
andl
xchg
push
mov
push
xchg
call
push
mov
stc
aaa
aaa
sarb
mov
or
or
push
leave
loopne
cmc
push
cs
aad
mov
jne
xor
mov
sub
add
data16
in
inc
pop
nop
leave
cwtl
push
js
cmp
jo
outsb
pop
js
inc
cmp
push
xor
cwtl
dec
xor
data16
or
jns
fs
push
dec
test
inc
testb
shll
inc
cmp
or
pusha
adcb
inc
cmp
mov
mov
and
cs
dec
clc
push
loope
adc
mov
xchg
loopne
mov
pusha
push
pop
cmp
inc
lret
outsl
mov
les
xchg
and
or
jbe
cltd
xor
subb
dec
es
cmpsb
adc
push
add
cmp
cli
push
scas
out
sub
add
mov
sub
adc
push
movsb
roll
push
or
stc
mov
cmpsl
push
adc
mov
dec
loop
or
push
add
mov
xor
sub
pop
je
mov
pop
adcb
les
push
pop
adc
push
xchg
imul
sub
dec
cmp
or
inc
out
call
sub
add
pop
test
pop
popa
push
daa
xor
sbbb
inc
pop
pop
rclb
inc
jo
pop
cmpsb
loopne
out
adcl
or
stos
lahf
or
cmp
test
sbb
mov
push
pop
jno
das
jg
cmp
loop
cli
int
sbb
lods
ret
cs
lret
inc
rolb
icebp
xor
shrb
movsl
mov
mov
xchg
in
or
mov
mov
sub
data16
fsubrs
leave
ret
cmpsb
sub
sub
jae
adc
mov
aaa
gs
aas
mov
out
out
bound
mov
lods
xchg
or
sahf
sub
cmp
xlat
test
pusha
rclb
add
sahf
jp
cwtl
pop
pusha
jns
lea
es
iret
mov
add
cmp
push
jbe
mov
dec
xor
add
xlat
stos
pop
or
add
ffreep
test
lahf
aam
xor
jo
rol
adcb
adc
aam
outsb
sbb
and
ror
or
cltd
sti
pop
nop
test
lods
adc
or
add
mov
jl
mov
mov
shll
push
cmp
sub
push
cmp
loope
mov
push
mov
mov
jle
xchg
lret
imul
push
int
add
inc
les
inc
out
xor
lcall
jae
pop
xor
xlat
add
jnp
lcall
fdivrs
ret
push
or
popa
imul
test
push
pop
aad
xor
jne
push
aad
jb
jmp
movsl
pop
push
into
in
push
inc
sbb
mov
popf
enter
in
mov
push
jo
dec
pushf
int
push
xor
push
jnp
and
hlt
or
or
mov
mov
adc
jecxz
mov
test
mov
imul
jecxz
sbb
jb
dec
mov
inc
stos
leave
imul
loopne
call
jnp
and
stos
lret
sbb
cmp
scas
jno
mov
mov
mov
sbb
pop
int
fs
inc
cli
mov
inc
xor
adc
push
xchg
test
jae
sub
out
fcomps
int
and
jg
push
adc
mov
test
and
xchg
call
ret
push
loopne
push
push
push
mov
xchg
mov
mov
push
and
arpl
adc
bound
mov
mulb
push
push
pop
mov
aas
and
rcrb
sbb
inc
test
pop
sbb
xchg
or
xchg
push
shlb
test
pop
mov
sub
test
ljmp
popf
scas
push
and
xor
pop
cmp
xor
sub
push
dec
sbb
or
aad
cli
js
jle
xor
sbb
pop
jae
shll
jo
inc
xchg
or
lcall
aaa
push
xor
sbb
adc
xor
jb
sub
lds
test
push
mov
cltd
sbb
out
in
pop
jne
inc
and
add
mov
ljmp
popa
and
ret
fiadds
lret
fidivs
insl
int
mov
and
mov
push
inc
scas
mov
mov
xor
icebp
aas
out
shlb
sub
mov
out
push
dec
mov
xor
adc
mov
push
fcoml
jo
or
decl
loopne
mov
in
fisttps
mov
mov
sarb
rclb
les
xor
and
cmp
rcll
jns
fwait
sbb
xchg
adc
push
pop
roll
push
and
loop
mov
push
push
shl
xor
xor
pop
push
pop
mov
xor
lcall
jo
cmc
jge
jle
adc
and
sbb
cmp
dec
rorb
call
inc
mov
cmp
orl
enter
xlat
mov
test
cmpsb
rcl
push
mov
mov
in
test
add
js
or
sbb
sbb
sub
xlat
sbb
and
mov
xchg
cmp
bswap
sbb
xchg
or
repz
cli
ret
jl
into
mov
xor
les
testl
jo
mov
sub
fsubrl
xor
pushf
leave
orl
adc
lret
shll
rorb
dec
sahf
test
sbb
je
mov
lret
dec
rclb
add
call
cmp
xchg
xor
leave
pop
mov
adc
mov
lock
arpl
shll
jmp
clts
addl
push
lods
ljmp
xchg
jmp
or
push
loop
add
fimuls
push
das
popa
mov
ror
push
push
xchg
stos
adc
pop
fst
movsb
push
mov
mov
or
daa
push
dec
bound
mov
add
fldcw
jae
enter
insl
aad
test
lock
cmp
stc
lock
mov
push
loope
mov
or
les
imul
sub
rorl
scas
cmpsb
movsb
mov
hlt
sub
sub
xchg
pop
xchg
subl
sti
cmp
loop
mov
and
loopne
add
loope
orb
fs
pop
push
pop
lcall
popf
xor
mov
push
add
pop
xor
cmp
lret
cs
add
out
lock
xlat
pop
pop
mov
in
loop
rorb
xor
sbbb
cmp
xorl
cmp
je
push
push
or
pop
ret
in
add
cmp
sbb
nop
cmpb
push
cmp
out
push
js
jae
adc
cmp
jnp
add
cmp
push
addr16
jge
loope
loope
push
insb
lcall
jno
movsb
push
xor
xor
data16
lret
ret
test
inc
push
push
movsb
cwtl
pop
mov
xchg
addr16
push
push
ret
divl
ret
cltd
jne
bound
arpl
push
cmpsb
xchg
adcl
stos
jnp
or
xchg
rcrb
rcll
jae
enter
movsl
in
and
xchg
mov
push
ds
dec
push
inc
sub
imul
jnp
int
xchg
mov
dec
sub
push
popf
sub
xorl
add
clc
outsl
in
sbb
add
jns
lock
jp
subl
popa
andb
add
fwait
lcall
incb
iret
or
jne
clc
mov
pop
sub
push
adc
mov
mov
and
dec
hlt
jcxz
test
lret
sub
fbstp
xor
inc
movsb
and
dec
xchg
ret
lret
xchg
movsl
orb
jmp
arpl
and
stc
and
mov
push
mov
roll
sti
loope
cmp
fcomip
loope
jo
insb
outsl
cmp
push
cmp
mov
mov
xor
enter
subl
cltd
dec
and
mov
cs
fs
jne
test
push
sub
jne
pop
mov
xor
jl
mov
ret
lahf
sarl
push
mov
push
es
rorl
iret
or
mov
or
pusha
xor
adc
daa
sbb
add
into
subb
stos
add
loopne
pop
je
or
jo
lcall
lods
pop
scas
enter
mov
or
pop
test
cmp
aas
lods
cmpsl
ljmp
ret
add
loope
push
add
dec
popa
sbbb
inc
leave
subl
add
sub
sbb
or
out
scas
sti
sti
mov
adc
xor
add
jae
dec
jnp
mov
pushf
mov
lahf
mov
xchg
push
loopne
in
mov
sub
mov
shlb
mov
lret
xchg
imul
ret
dec
pushf
test
sarb
in
add
xor
xor
imul
out
inc
add
inc
mov
mov
movsb
repz
out
sbb
cmp
data16
sub
sub
stos
inc
jg
cld
bound
push
push
jge
roll
test
testl
stos
push
xchg
dec
push
in
adc
data16
xor
sbb
enter
push
mov
je
xor
push
inc
jae
test
daa
mov
push
mov
pop
xchg
test
fisttpl
xchg
leave
insb
xor
sbb
mov
jg
les
test
jbe
or
add
hlt
sti
pop
imul
or
or
ljmp
cltd
mov
cli
xor
or
jo
pushf
fisttps
cmpsb
testb
sub
xor
xlat
xor
leave
pop
or
addb
jnp,pn
sbb
sbb
or
das
cmp
push
pop
push
inc
scas
and
out
nop
sbbl
xchg
cmp
and
or
pop
es
jp
mov
popa
xor
pop
sub
loopne
gs
mov
xchg
cwtl
stos
add
lcall
mov
inc
int
mov
cmp
jp
sub
pushf
cs
test
add
mov
adc
sbb
xchg
mov
xchg
scas
inc
cmp
cmpsl
pop
mov
faddp
dec
dec
popf
add
jno
push
dec
push
sbb
das
add
pop
popf
push
push
ret
rcrl
jge
push
mov
ss
roll
jg
ret
or
mov
xor
fsubl
out
ljmp
mov
aaa
aaa
xchg
mov
lcall
loopne
cwtl
inc
fstl
dec
rcrl
int3
test
xlat
dec
cwtl
xchg
lcall
aad
pop
out
inc
bound
or
inc
push
push
xlat
pop
jnp
push
sti
ja
inc
xchg
cmp
in
cltd
mov
test
xor
mov
in
mov
fcmovbe
jb
fstps
test
aam
leave
cltd
test
daa
jno
xchg
jo
add
ret
add
aaa
mov
es
xchg
push
mov
into
mov
int3
arpl
mov
ljmp
mov
mov
add
cmp
subb
xor
in
adc
cmp
cmpsb
adc
ret
dec
mov
add
push
cs
iret
xchg
mov
lret
xor
sub
adc
enter
test
mov
hlt
mov
test
pop
or
imul
cmp
frstor
dec
test
out
push
ds
mov
jno
push
out
add
push
pop
pop
scas
push
call
push
pop
loopne
add
push
xchg
pop
js
or
in
add
shl
dec
cmpsb
dec
js
and
in
inc
shll
pop
cmp
push
lret
fisubl
adc
sbb
cmp
faddp
lock
imul
orl
aam
push
arpl
mov
adc
sbb
mov
outsl
push
jg
add
push
and
add
lea
loope
pushf
mov
cltd
or
push
xor
sbb
daa
inc
inc
xchg
inc
jnp
push
xor
push
cli
pop
sub
sub
xor
insl
in
dec
mov
or
jg
or
ret
nop
adc
xchg
add
inc
xchg
mov
mov
jo
sbbl
jne
or
pop
cmp
or
push
rcrb
out
pop
push
pop
fs
arpl
xor
das
xor
sarb
enter
jle
xorl
mov
push
add
pop
xchg
add
mov
add
pop
stc
sbb
imul
and
fs
sbb
or
cmp
mov
js
inc
xchg
leave
fidivs
scas
movl
pop
mov
ja
add
insl
and
mov
jne
adc
fsubrs
add
aad
add
test
sub
and
xchg
pop
and
cs
clc
pop
loope
jae
xchg
push
cmp
mov
orb
jno
dec
out
rorb
sbb
pop
xchg
sarl
xor
sub
fimull
add
dec
sbb
test
inc
mov
inc
sbb
and
loopne
push
xchg
sub
or
or
dec
sbb
dec
sub
add
sbb
pop
adc
inc
mov
stos
mov
mov
aas
ret
nop
add
add
outsl
cs
call
xor
enter
cmc
hlt
mov
add
jb
subl
push
push
mov
rcl
jns
scas
lea
sbb
testl
inc
xchg
cmp
add
or
orl
addl
into
add
push
pop
add
mov
loop
scas
sti
push
xchg
jp
or
mov
notb
jb
dec
mov
sub
mov
pop
leave
add
adc
pop
aad
mov
adc
pop
xor
sbb
test
push
xor
add
inc
stos
add
dec
test
cwtl
jb
lahf
xor
insl
dec
and
cmp
aam
mov
mov
dec
test
xor
mov
aam
sbb
cmp
and
test
xor
test
pusha
outsl
fidivrs
adcl
add
sti
xor
xchg
adc
push
push
stc
out
adc
dec
lods
mov
add
inc
lods
inc
cmp
jo
lds
push
xchg
rorl
xchg
mov
outsl
in
dec
cmp
hlt
test
jae
jb
leave
ljmp
sbb
scas
stos
push
in
mov
pop
xchg
into
push
adc
cmp
sbb
push
enter
inc
ss
push
or
sbb
je
es
cwtl
rclb
or
mov
push
add
push
inc
outsl
outsl
jne
add
jp
mov
sbb
pop
std
or
add
mov
or
fistpl
fimull
lea
push
sbb
xchg
mov
fcmovb
aad
mov
jnp
mov
adc
shl
mov
cmpsb
push
and
mov
aam
das
jb
in
adc
adc
lcall
cmp
push
movsb
dec
or
add
push
ret
adc
mul
aam
push
sub
cmpsb
xor
enter
sub
aam
mov
sahf
add
jnp
pop
rclb
push
pop
shrb
push
test
outsb
pop
jnp
loope
xor
pop
and
jnp
mov
scas
sbb
mov
inc
es
push
lea
pusha
jo
or
sbb
call
mov
cmp
sarb
xor
lea
cltd
sbb
movsb
psubusw
in
add
out
xor
dec
in
outsb
leave
add
cwtl
mov
inc
sbb
pushl
movb
cmp
cmpsb
ljmp
ja
xchg
cmp
rclb
push
rorb
mov
dec
out
jo
std
addr16
push
daa
sbb
cmp
ljmp
inc
cmp
adc
dec
xchg
ud2
fnstsw
push
mov
adc
xor
pop
sbb
test
lcall
outsl
xor
leave
cmpsb
sbbl
and
loopne
sub
or
orb
sbb
push
dec
push
or
dec
inc
adc
push
push
loop
cmc
inc
aam
pop
lods
mov
lock
adc
mov
sbb
dec
inc
push
jnp
sbb
mov
out
mov
xor
mov
mov
push
push
push
push
notb
cmc
add
push
xchg
fldcw
adc
mov
incl
jo
mov
into
push
popa
add
gs
stos
mov
jne
mov
push
dec
cmp
xor
and
or
mov
movsb
ja
imul
pop
xor
mov
sub
lock
pop
addps
pop
into
and
rorl
sbb
dec
push
scas
jae
out
sub
test
jbe
mov
push
sbb
pop
in
fstl
mov
mov
xchg
or
xchg
pushf
push
xchg
dec
sbb
enter
movzbl
mov
or
xchg
push
orb
into
hlt
adc
pop
jne
data16
popf
adc
mov
dec
addb
test
loopne
insl
andb
xchg
in
and
sub
inc
mov
nop
sub
sub
mov
sub
jae
add
push
cltd
or
inc
sub
addb
xchg
cmovl
pop
cmp
andl
push
add
mov
lret
mov
insb
rclb
add
ds
mov
push
mov
scas
popf
out
subb
sarl
xor
enter
data16
pushf
popf
lcall
add
and
enter
into
xor
inc
rorl
sub
inc
xor
xor
std
ja
jo
jl
mov
adc
sbb
xor
adcl
hlt
inc
mov
sbb
hlt
adc
or
mov
sbb
mov
pop
dec
mov
inc
ret
cmp
mov
sbb
sarb
cltd
lret
xchg
in
push
pop
or
fisubrl
sub
push
enter
push
pusha
ljmp
lret
pop
push
push
movsl
xor
insb
push
lret
mov
xor
cltd
cwtl
arpl
sbb
sub
or
call
xor
jo
pop
xchg
jb
xor
gs
mov
scas
mov
nop
mov
rcrl
or
xor
sbb
pop
push
stc
aas
or
insb
lea
dec
loope
jnp
xchg
add
lret
pushf
mov
mov
nop
enter
xor
fdivs
mov
cmp
inc
scas
xor
add
sub
cltd
cltd
out
inc
xor
sub
pop
jb
sub
sbb
inc
popa
jb
and
mov
arpl
lret
cs
mov
jmp
add
jae
sub
mov
and
inc
jmp
or
cmp
std
lea
loopne
sub
inc
test
test
rcrb
pusha
mov
jl
xor
add
pop
or
sub
push
cltd
cmp
pop
arpl
es
cwtl
cmp
mov
aad
xor
movsb
cmp
xor
xor
sarb
andb
das
dec
test
mov
xchg
and
jg
lock
cld
add
mov
lods
push
xchg
lock
fadd
push
sbb
add
sub
adc
sub
inc
jb
filds
push
bound
rcl
jg
movsl
xchg
xor
xchg
subl
dec
mov
cmp
js
jno
enter
cmp
or
fmul
push
and
mov
xchg
xor
add
add
sahf
sub
lods
push
xchg
call
adc
inc
add
cmp
push
adc
adc
mov
into
test
inc
mov
sub
adc
jl
lods
js
xchg
into
sbb
xorb
bound
xchg
xchg
test
sbb
aas
inc
loopne
dec
inc
loope
popf
mov
cs
hlt
pop
mov
sub
sbb
and
inc
xchg
out
mov
fdivrs
dec
in
adc
cmp
jle
cwtl
jo
int
movsb
arpl
loopne
xor
sbb
and
or
jl
std
in
inc
popf
lret
icebp
lds
cli
out
mov
sbb
push
sbb
sub
mov
ss
push
sub
add
lahf
or
push
aam
sub
push
imul
push
arpl
add
mov
xor
adc
sbb
movsl
dec
popa
push
cltd
mulb
movsb
xchg
inc
xor
dec
mov
xchg
jmp
add
subb
push
cs
xor
dec
cmp
jo
inc
icebp
push
pop
mov
mulb
imul
push
inc
and
xchg
ja
loop
daa
pop
push
out
mov
decl
adc
cs
dec
out
add
sbb
mov
mov
push
int
icebp
in
adc
fs
fisubrs
mov
mov
jmp
mov
xor
and
and
inc
test
movsb
mov
jae
or
mov
scas
or
scas
and
pop
pop
and
dec
push
cmpb
std
mov
add
mulb
xchg
or
sbb
pop
inc
dec
xchg
sub
sbb
push
dec
imul
gs
sahf
pop
pushf
or
lahf
dec
rcrl
lret
mov
push
add
adc
pop
inc
icebp
out
push
scas
pop
pusha
jmp
in
sub
jne
jb
clc
inc
jl
add
dec
cmpsb
inc
scas
adc
shlb
pop
jge
or
push
int3
add
xchg
roll
pop
stos
fistpl
movsb
or
add
jno
push
lcall
loopne
inc
imul
push
mov
arpl
adc
cmp
push
je
cltd
cmp
pop
cmp
std
push
mov
pop
mov
cmp
daa
inc
outsl
jbe
add
ret
xchg
fwait
mov
roll
stc
out
push
push
xor
lret
push
sub
lcall
fnstenv
push
cmpsb
scas
sarb
pop
push
jo
or
mov
loope
push
pop
pop
xor
pop
xchg
adc
shll
or
inc
lea
add
shrb
dec
mov
adc
jno
push
les
push
sbb
mov
stc
repz
pop
sbb
xor
mov
push
mov
and
int3
sub
pusha
mov
mov
stos
pop
das
pop
lea
lea
shlb
mov
mov
cmpps
xor
mov
out
push
jo
icebp
mov
jb
mov
lods
les
int
fsubrs
or
mov
lods
xor
mov
dec
scas
daa
dec
shl
les
inc
sub
ret
xchg
or
cmp
sbb
sub
and
rcl
sbb
adc
aad
adc
rclb
shr
loop
push
mov
movsb
testl
pop
push
jecxz
lahf
adc
repnz
ret
xchg
in
pop
prefetcht2
mov
or
cltd
sbb
xchg
cmp
int
mov
adc
cmp
dec
dec
cmp
imul
xchg
xorl
pop
push
mov
inc
outsl
mov
sbb
or
mov
insb
rcrb
add
jnp
xlat
mov
xchg
mov
test
push
call
sbb
cmp
mov
pop
push
xchg
negb
sub
aam
ss
aad
loopne
jne
pop
jo
pop
ret
outsl
lods
out
ja
or
cmp
js
clc
leave
fisubrs
movsb
dec
ret
mov
add
dec
aad
es
lods
push
adc
inc
scas
in
adc
sbbb
daa
jnp
rolb
mov
xchg
mov
cmp
xchg
fs
jo
shlb
int
mov
and
adcb
xchg
mov
or
xor
push
dec
scas
dec
adc
cld
adc
test
push
xorb
popf
sub
xor
sub
lret
add
fnstsw
ret
inc
lock
inc
pop
jg
xor
add
cmp
push
sbb
xor
pop
loope
adc
and
sbb
mov
mov
das
addb
je
test
and
mov
jae
mov
xchg
dec
add
pop
push
lods
push
jo
jo
add
xchg
addl
test
insb
or
aad
adc
push
xchg
mov
inc
cs
rolb
in
pushf
in
push
pop
fiadds
outsl
mov
rcl
fldenv
mov
jnp
and
sub
cmpsb
xchg
ret
push
setge
or
xor
dec
dec
negb
addl
sub
je
pop
out
das
push
add
mov
mov
lods
je
sbb
sbb
push
cwtl
mov
dec
int
mov
pop
daa
jo
sub
bound
pop
xchg
mov
push
andl
int
in
scas
stc
scas
or
sub
lret
lcall
and
jo
and
lods
inc
ret
rcll
pop
scas
adcb
inc
jae
jo
mov
inc
int
adc
xchg
stos
fwait
sub
or
inc
pop
imul
mov
push
jo
or
ja
pop
ss
sti
lea
roll
sub
jmp
sbb
shll
lock
in
loop
jl
mov
cltd
or
jae
xchg
xchg
or
in
in
rolb
loope
out
push
ret
jae
into
les
jno
popf
xor
aam
push
xchg
sbb
dec
mov
xchg
pop
adc
inc
cs
lea
xor
adc
sbbl
adc
and
inc
iret
push
lret
mov
xchg
add
or
pop
inc
shll
es
cmp
pop
mov
sbb
sbb
ret
mov
mov
stos
xor
mov
xchg
cmp
cmpsb
add
cmp
xor
lret
cmpsl
test
jo
out
sub
pop
lcall
mov
xchg
lret
mov
fs
pusha
jmp
xor
jp
sbb
shll
pushf
mov
adc
jge
jl
dec
int
ljmp
loope
data16
adc
jne
test
xor
cld
fistpl
jb
jns
inc
add
aad
add
xchg
out
shll
cmp
cmpsl
sbb
in
push
and
out
sbb
mov
push
stos
pop
bswap
loope
imul
xor
pop
adc
push
call
mov
out
negl
enter
sbb
inc
pop
mov
daa
mov
and
inc
xor
cmp
cmp
loop
imul
add
inc
in
jno
inc
push
inc
movsl
push
enter
lcall
int3
call
loope
add
es
mov
push
sahf
adc
outsb
es
cmp
mov
cmp
pop
adc
sbb
cmpsb
fiaddl
call
fstps
fcmovb
or
inc
loopne
and
add
cmp
std
scas
add
inc
xchg
test
cmpl
mov
jle
xchg
fistpll
sub
dec
mov
mov
int
in
push
xor
sarl
mov
je
adc
fcompl
push
and
roll
aad
push
add
xchg
jae
adc
jl
out
inc
mov
pushf
jae
divl
xor
sahf
pop
mov
add
mov
outsl
push
push
adc
mov
inc
into
subb
add
dec
inc
pop
loopne
jb
sti
sub
jno
js
sbb
mov
pop
sbb
and
std
sar
dec
sbb
subb
sub
pop
in
andb
sbb
ror
syscall
rolb
mov
push
mov
mov
and
loope
jge
push
mov
std
lret
cwtl
mov
ret
loopne
or
adc
dec
andnps
or
hlt
std
mov
cmpsb
mov
or
mov
loopne
or
inc
mov
leave
sbb
mov
std
lods
incl
fs
dec
cmc
sbb
mov
mov
and
or
sbb
repnz
pop
or
push
lock
nop
fcompl
je
inc
sub
mov
mov
aad
mov
or
lea
loop
mov
cmp
pusha
test
call
je
lret
icebp
xor
push
add
dec
lret
jnp
push
xor
or
push
cmc
push
or
sbb
xor
cmpsb
or
mov
lcall
add
or
mov
add
lret
sbb
cmpsl
or
adcb
jecxz
or
sbb
cli
jnp
inc
sub
inc
cmpsb
add
sbb
push
xor
test
es
mov
push
fwait
das
ljmp
fs
or
push
pop
enter
sbb
push
jmp
or
mov
jbe
int
cmp
fnstcw
push
mov
xor
sbb
pop
shlb
mov
mov
add
pop
or
jl
lods
es
xchg
pop
aad
dec
dec
out
in
enter
push
push
add
leave
push
pop
cmpsl
call
mov
sbb
adcb
xor
call
xchg
lods
lcall
icebp
insb
dec
cmpsl
lcall
pop
cmp
add
into
sbb
inc
inc
mov
pusha
pop
mov
clc
leave
cmp
push
jp
rorb
xor
mov
and
inc
scas
add
dec
xor
push
xchg
cmp
pop
inc
and
sbb
pop
adc
addb
pop
mov
add
dec
nop
push
aas
add
sbb
sub
jg
lcall
sub
mov
cli
adc
sbb
adc
mov
jo
lock
cmp
push
or
pop
lret
or
shll
pop
push
rcll
out
mov
cmpsl
mov
aam
jo
sbb
dec
rcrl
inc
cmp
pushf
mov
cmp
sbbb
ret
popf
mov
mov
push
xor
xlat
jg
gs
test
mov
lahf
pop
jb
cwtl
sub
adc
xor
mov
and
enter
cmp
das
xchg
mov
mov
push
add
bound
cmpsb
push
push
shl
cs
sub
addb
and
lret
in
jno
hlt
dec
aas
aad
fsubs
push
mov
mov
out
pop
movsb
jno
imul
jl
inc
fadds
jnp
out
push
bound
movsb
sbb
ret
xchg
sub
lds
inc
andl
inc
out
jnp
cmpsl
pop
ret
push
or
sbb
dec
sbb
jae
js
mov
pop
inc
jae
dec
testb
pop
scas
lds
lods
cmpsl
mov
ret
jl
out
xlat
and
shrb
inc
iret
sbb
pop
cmc
je
xor
aas
inc
xchg
push
inc
xor
xor
sbb
insb
sbbl
cmp
pop
aam
adc
xchg
roll
xor
repz
leave
nop
cwtl
mov
mov
rorb
call
cmp
inc
ret
pop
mov
cmpsb
popa
les
or
add
sub
sbb
test
lahf
mov
cwtl
fisttpll
or
or
sbb
mov
leave
subl
test
push
push
push
add
cmp
jne
push
cltd
loop
test
push
mov
fld
test
xor
mov
push
jno
add
adc
pop
lock
sbb
and
push
and
in
mov
push
stc
or
rclb
push
sbb
ret
shlb
test
pushf
sub
adc
adc
sbb
ret
mov
les
cwtl
pop
aam
dec
call
pusha
inc
pop
dec
inc
inc
sub
mov
sub
cltd
jge
push
xor
fwait
movsb
push
imul
sbb
dec
iret
push
dec
sub
and
outsl
and
add
scas
subb
xor
dec
adc
mov
mov
adc
scas
cmp
mov
and
cmp
push
clc
pushf
cmpsb
rclb
pop
aam
cwtl
cmp
adc
or
adc
cmp
ljmp
sbb
addl
sbb
mov
rolb
cmp
sbb
jmp
sbb
sahf
les
jo
pop
mov
das
jnp
mov
outsb
mov
pushf
and
shlb
pop
stos
loope
cmp
mov
lret
jg
mov
or
fsubl
jo
and
mov
inc
loop
mov
roll
notb
test
add
inc
dec
jo
ret
xchg
mov
iret
push
xorl
and
push
push
decl
sbb
or
cmp
add
sbb
push
adc
cmpsl
cmpsb
push
mov
xchg
sub
ret
xchg
jmp
xchg
shll
mov
lret
pop
gs
shll
mov
add
cmp
ja
add
or
push
xor
jbe
mov
sbb
ss
cmpb
and
stos
pop
xchg
popa
daa
adc
or
cld
inc
pop
pop
adc
sbb
mov
rol
sbb
pop
rorl
in
inc
jae
insl
sbb
or
andl
hlt
lock
and
sub
xlat
push
inc
cmpsb
pop
imul
out
add
push
out
stos
jl
jo
lret
lds
loopne
or
add
cs
shlb
adcb
mov
xor
pop
scas
shlb
in
dec
pop
aam
add
push
sbbl
out
inc
or
test
test
test
xor
jp
aaa
add
mov
cmpsb
into
xor
rorl
in
subl
jne
push
in
jo
xor
jg
shll
mov
or
xor
nop
stos
pop
cmpsl
add
enter
mov
addl
into
rorl
sub
pop
and
dec
shl
pop
int
push
adc
stc
cwtl
and
jle
lcall
outsb
leave
mov
adc
add
inc
xor
adc
push
sbb
xchg
or
inc
mov
scas
mov
icebp
lods
sti
rolb
jae
mov
addl
sbb
inc
mov
sub
lret
call
cmpsl
adc
pop
aam
push
orb
jo
imull
sbb
iret
xorl
jo
dec
test
rcll
fmull
xchg
enter
push
and
pop
cmp
icebp
addb
fs
pusha
test
mov
test
popf
cmp
icebp
mov
nop
adc
push
addb
cmp
sub
mov
jo
and
xchg
mov
xor
xor
mov
jmp
cmpsl
rolb
xchg
xor
pop
add
insl
mov
das
and
push
testl
inc
mov
loope
and
xor
xchg
add
int
adc
jle
push
int
mov
or
cmp
sub
inc
and
sbb
adc
adc
and
xor
sbb
mov
lahf
dec
sbb
pop
lahf
popf
add
add
inc
add
sbb
bound
cmpl
cli
push
or
inc
popf
jmp
pushf
jo
push
popa
mov
sbbl
cmp
test
jb
call
ss
dec
mov
xor
pop
sub
sbb
sub
jmp
movl
inc
mov
loopne
loopne
clc
mov
xchg
lcall
bound
clc
push
mov
clc
lret
loope
xor
pop
add
jnp
ret
in
pop
fiadds
mov
aam
add
adc
and
test
popf
push
mov
sbb
adc
jo
in
roll
push
popa
jo
mov
mov
mov
jne
push
mov
jnp
add
mov
jb
dec
push
push
jp
mov
push
pop
xor
aad
int3
sti
or
push
mov
lret
push
lcall
hlt
lret
pop
and
sahf
mov
out
dec
in
mov
leave
sbb
push
mov
xor
mov
adc
scas
inc
cmpsb
or
mov
and
add
iret
xor
mov
cmp
jmp
mov
jno
push
lret
inc
push
pop
in
roll
rcl
sbb
test
es
mov
mov
scas
xchg
imul
pop
jb
cmpsb
and
adc
pop
cltd
pop
cmpsl
imul
or
pushf
sub
rorb
fimuls
loopne
pop
outsl
add
sbbb
push
sbb
add
in
lahf
pusha
mov
das
xchg
orl
push
inc
and
push
sub
fcmovnb
or
kmovb
sbb
xor
push
pop
loope
sbb
mov
pop
icebp
fildll
pop
mov
notb
push
mov
dec
shll
jbe
adc
inc
sbbb
pop
mov
sub
add
inc
stc
adc
js
mov
inc
movsb
lret
ljmp
inc
popf
jne
cmp
mov
and
xor
cmc
jl
pushf
mov
sub
push
add
push
or
xchg
mov
rcll
push
push
loopne
and
cmc
enter
cli
push
push
jo
movsb
mov
ds
mov
cltd
add
mov
scas
movsb
pop
xchg
or
out
jge
cmc
loop
inc
or
sbb
xchg
jo
sub
push
pop
xor
jnp
add
lcall
jno
loopne
cltd
sbb
or
arpl
pop
inc
je
mov
pop
fistpl
cmp
daa
fistl
out
mov
jo
cs
jb
xor
jl
in
in
in
popa
mov
add
jnp
mov
ret
test
xchg
js
inc
sahf
test
sbb
cs
xor
add
dec
test
mov
mov
xchg
dec
aaa
jns
or
or
ds
sbb
mov
inc
push
xor
xor
push
cltd
cmpsl
lds
push
add
xlat
mov
jg
push
jo
push
pop
push
inc
subb
es
mov
dec
and
gs
push
xlat
pusha
or
push
pop
outsl
push
or
xchg
mov
stos
mov
inc
adc
ljmp
pusha
rorb
or
sarb
fwait
iret
and
aam
into
sub
jo
or
mov
inc
arpl
jnp
push
mov
sbb
mov
into
dec
int3
std
add
push
dec
pushl
add
movsl
jmp
mov
mov
jg
stos
adc
add
jnp
test
jnp
push
mov
push
imul
imul
lret
in
loopne
fisttpl
je
add
xor
pop
cmp
inc
lret
mov
jle
or
add
and
adc
sub
dec
mov
or
inc
loopne
int3
add
lcall
add
mov
aas
imul
pusha
ret
push
push
mov
push
adc
pushf
dec
add
call
xor
xorl
and
jo
mov
push
in
aad
pop
push
dec
or
rorl
push
mov
sbb
rcrb
lret
and
test
sub
xor
xchg
xor
mov
test
pop
add
mov
outsl
and
jb
push
or
or
out
popl
jbe
out
cmp
pop
rorl
mov
lods
dec
lds
out
pop
push
push
call
insb
mov
fidivl
sbb
push
cltd
jb
push
fs
or
mov
jb
stos
xor
lcall
and
js
div
popf
and
test
mov
mov
mov
sbb
add
sahf
mov
add
xor
jge
icebp
aaa
pop
mov
cld
and
xor
mov
andl
cld
push
push
push
sub
jne
inc
inc
jl
cmc
sbb
mov
sti
popl
pop
push
sub
cs
mov
imulb
or
push
ds
aaa
pop
loopne
push
add
xchg
adc
int3
xchg
and
xchg
stc
add
jp
ret
pop
aaa
or
nop
xchg
sbb
pop
cmp
stc
sbb
mov
pop
push
mov
xchg
dec
cmp
jl
sbb
sbb
in
xchg
add
sub
adc
or
test
pop
push
xor
push
jo
subl
sbb
daa
rcrb
in
negb
fwait
rol
nop
stos
push
xchg
shl
pop
cs
or
outsl
adc
jae
jmp
adc
inc
mov
jne
es
popa
mov
cmp
or
jge
dec
sbb
pusha
sbb
xor
mov
xor
jp
push
push
xorb
dec
mov
ret
cltd
cwtl
test
pop
leave
aad
or
and
pushl
add
pop
fs
cmp
les
out
mov
push
and
test
and
mov
sub
sbb
and
pop
pop
mov
rclb
pop
les
loope
inc
roll
ja,pn
lock
pushf
lds
ret
adc
stos
inc
rorl
lods
shl
mov
sbb
sbb
stc
cli
data16
mov
sbb
mov
sbb
popa
push
adc
xchg
jg
lahf
or
push
cmp
jl
mov
das
dec
jp
and
scas
lahf
loope
inc
stos
sbb
pushf
out
ljmp
scas
mov
pop
rcl
pop
push
cmpsb
xchg
add
gs
pop
add
sub
inc
xchg
sbb
xor
fsubs
in
cmp
inc
negb
inc
pusha
cmp
push
mov
in
adc
mov
lret
jns
push
or
js
xor
xchg
and
nop
and
cli
jae
push
push
xor
in
add
push
jno
in
adc
les
addl
aas
nop
push
sub
mov
nop
and
cmp
lcall
movsb
inc
mov
fwait
rorl
scas
shrb
lcall
mov
cmp
inc
mov
adc
adcl
jle
lea
adc
test
push
subl
adc
xor
jo
cltd
sub
pop
mov
addl
rol
push
fcomps
xchg
jb
test
jg
pusha
lret
push
push
mov
xor
push
sbb
jge
dec
mov
jns
dec
int
test
rcl
xchg
sar
cmp
inc
lods
mov
movsb
enter
or
xchg
decb
or
gs
sbb
aad
and
xor
and
sbb
lds
xchg
xor
xor
movsb
std
jl
xchg
mov
lock
or
xchg
xor
push
mov
gs
pusha
pop
xor
and
push
in
mov
movb
sbb
adc
add
add
clc
push
add
lods
dec
xor
stos
clc
push
push
push
sahf
and
pop
js
adc
inc
mov
pop
ss
or
add
add
mov
sbb
shll
dec
add
push
add
xchg
mov
gs
ret
or
lret
nop
and
cwtl
inc
xchg
lret
popa
xor
aad
repz
pushf
add
sbb
and
addb
push
stos
mov
mov
and
sbb
xlat
mov
xchg
sbb
inc
movsb
and
scas
pop
inc
es
inc
sub
mov
jo
xor
movsl
sub
push
jae
or
adcb
js
je
enter
jns
outsl
push
fldl
adc
add
dec
push
scas
ret
insb
inc
mov
pusha
sahf
add
cmpsb
jb
cmp
inc
aad
sbb
inc
dec
cmp
pop
scas
shlb
rolb
loopne
jnp
mov
insb
shlb
loope
xor
mov
xchg
sub
sbb
cmp
int3
icebp
mov
aad
add
hlt
shrl
popa
mov
int
jno
adc
dec
addr16
pushf
and
int3
js
loop
rolb
popa
clc
add
mov
push
jns
or
out
ss
data16
shl
ja
pusha
sub
int
lods
aaa
popa
popa
xor
and
mov
lods
push
cld
cmp
pop
in
mov
or
ret
out
sub
mov
or
xor
xor
push
fxam
lret
cmp
pop
xchg
leave
pop
cs
jnp
cltd
andl
cmpsb
in
and
jae
pusha
xor
repnz
push
js
ffreep
push
inc
jg
rolb
incb
idivl
or
jecxz
pop
dec
sub
pop
adc
mov
inc
adc
punpckhbw
arpl
xor
push
xor
jecxz
mov
add
push
inc
add
in
inc
xchg
xchg
iret
maskmovq
imull
and
add
push
mov
sahf
push
fildll
popf
xchg
jl
ret
rcrb
aad
pop
cwtl
xchg
push
filds
test
je
jge
ja
mov
loopnew
mov
mov
add
mov
xor
mov
xchg
cmp
jno
enter
xlat
ret
out
and
aam
adc
mov
pusha
mov
aam
add
imul
pop
mov
push
cltd
mov
ret
ljmp
pop
jb
or
and
nop
sub
cmp
add
rcrb
dec
gs
out
pusha
pop
mov
pop
pusha
push
fldt
fldcw
addb
popa
popa
ljmp
scas
mov
pop
mov
adc
or
adc
sbb
sahf
or
testl
dec
fidivs
xor
in
adc
imul
inc
adc
hlt
dec
into
shl
mov
fwait
pusha
pop
inc
test
aad
pushl
orl
mov
test
mov
add
jae
adc
mov
mov
xor
icebp
cli
test
mov
icebp
aam
lea
pop
hlt
adc
bound
pop
in
imul
and
mov
scas
add
and
mov
loop
xor
dec
mov
xor
pop
loope
cmp
add
pop
xchg
pop
sub
repnz
popf
xor
sub
mov
jecxz
in
cs
test
lcall
adc
fcoml
jp
cmp
and
fdivrl
jo
xor
fsubrl
xchg
imul
popa
adc
loope
dec
xchg
fwait
or
push
or
push
fisubrl
movsl
cmp
loope
mov
loopne
rorb
pushf
sti
test
ror
dec
jp
xor
sbb
es
test
loopne
lods
outsl
and
cli
xlat
daa
sahf
add
into
out
mov
sub
shll
lea
push
ljmp
lds
cltd
fisubrl
ret
xchg
cli
cwtl
xor
js
cs
jo
add
sti
jae
or
pop
lds
js
cmp
cld
dec
sbb
or
jno
mov
xor
es
pop
pop
stc
mov
xchg
cmp
leave
dec
mov
cmp
push
cmp
inc
stos
shl
push
test
add
cmp
xchg
adc
xor
enter
xchg
push
add
cmp
adc
jl
cmp
loopne
dec
imul
sbb
mov
clc
mov
sbb
bound
push
jae
insl
sbb
inc
mov
cmp
xor
jl
std
and
or
sbb
int
xchg
sbb
loop
in
rorb
imul
scas
add
push
push
dec
mov
call
adc
xchg
clc
dec
dec
aam
pop
js
js
pop
sub
pop
push
add
andb
or
stc
popa
imul
sub
imul
xlat
repz
cs
nop
cld
test
hlt
test
inc
je
jbe
cmp
bnd
xchg
cli
jo
jb
stos
nop
call
mov
inc
dec
add
add
pop
and
push
xor
scas
add
xchg
xor
pop
cltd
and
cmp
aad
jo
or
test
aas
outsl
imul
jb
lahf
mov
xor
je
mov
stos
push
mov
push
or
lret
push
loop
adcb
pop
push
push
mov
fisttpll
test
shll
sbb
in
dec
fcoms
xor
sahf
cwtl
pop
xor
mov
nop
fbstp
mov
test
or
xchg
lods
stos
add
add
jo
test
in
sbb
adc
xor
cmp
pusha
sbb
cltd
push
in
adcb
xchg
pop
mov
pop
gs
cs
sahf
mov
cld
call
es
cmp
je
mov
add
andb
loopne
imul
sti
jne
jae
cmp
inc
dec
cmpsb
mov
andb
sahf
hlt
jae
pushf
or
fwait
dec
and
imul
adc
jae
jb
fstpt
push
mov
cmp
ds
jge
rorb
stos
dec
loop,pn
clc
sub
push
mov
cmp
insl
push
ret
pop
nop
bound
add
stos
aaa
cmp
push
xor
shrl
xchg
xor
enter
aaa
jmp
stos
leave
and
pushf
orl
inc
mov
mov
mov
insb
jmp
hlt
jecxz
lds
cmp
dec
inc
es
cld
in
mov
push
pop
push
sarb
call
xor
pop
xchg
and
add
repnz
imul
ficoms
stos
out
stc
test
lahf
cltd
mov
adc
push
stos
xor
sub
xor
mov
lds
dec
inc
mov
repnz
js
dec
adc
lahf
ss
pusha
cmp
cwtl
test
pop
loopne
or
jo
adc
sub
enter
add
in
dec
cmpsb
scas
xor
pop
je
inc
cmp
cltd
insb
push
test
push
xchg
and
pop
cmp
add
push
and
sub
add
cmpsb
or
sbb
ret
cmp
xor
dec
xor
or
cs
adc
push
gs
mov
insb
mov
xor
es
jae
inc
mov
mov
dec
inc
mov
lods
ret
jb
lcall
test
sub
xor
sbb
adc
int
jb
push
push
shrl
jbe
push
xor
inc
je
sbb
push
cwtl
lcall
cmp
mov
add
out
cmp
push
js
xchg
or
mov
push
cmp
sbb
sbb
lcall
test
sbb
icebp
add
nop
inc
add
inc
scas
enter
outsl
cmp
rorb
inc
cmpsl
mov
leave
scas
jo
pop
adc
lods
lock
addb
pop
shll
mov
mov
inc
jl
clc
in
fcmove
xor
lock
push
cmp
in
pushl
out
mov
mov
call
adc
clc
in
mulb
mov
sub
sbb
jb
data16
sbb
mov
es
and
pop
inc
or
push
mov
push
popf
imul
adc
add
xchg
out
popa
bound
mov
jae
sub
cmp
xor
jg
ljmp
sahf
jo
stc
cs
scas
std
pop
adc
jae
daa
clc
sub
imul
into
and
jge
push
dec
xchg
popa
test
jne
mov
addr16
mov
enter
loope
enter
xor
inc
adcl
aam
addr16
and
jg
pop
lds
mov
out
mov
pushf
ret
cmp
cmp
xor
addr16
sbb
iret
std
fisttpl
jb
sahf
les
imul
outsl
into
std
into
inc
leave
mov
sarb
mov
fstp
in
iret
and
push
xor
sbb
cmp
dec
aas
daa
scas
fcompl
and
jecxz
xchg
dec
xchg
sub
mov
jno
repnz
pop
inc
ret
lret
push
lods
push
xchg
out
outsl
jo
jle
cmp
mov
fidivs
rcrb
int
cmpsl
push
hlt
sti
pop
dec
ljmp
out
jge
push
adc
pop
adcb
out
pop
call
cli
call
aaa
sbb
xor
out
cmp
or
hlt
fisubrs
inc
add
xor
fidivrs
test
push
insb
je
mov
outsb
mov
fsubrp
mov
mov
xchg
xor
cltd
sbb
aas
mov
or
ret
xchg
mov
imul
aaa
jg
mov
jo
mov
add
push
aad
cmpsl
pop
inc
ss
push
mov
leave
xchg
cmp
push
arpl
ret
std
inc
mov
mov
std
jg
sti
shlb
pop
sbb
incl
lea
stc
sub
mov
xor
push
stc
jns
out
call
xor
jae
sbb
stc
pop
ds
dec
mov
cmp
jbe
into
sbb
mov
scas
lods
dec
mov
mov
fistpll
cld
xchg
mov
popf
pop
stc
and
ja
or
ja
inc
dec
repz
or
or
mov
sbb
sti
jle
jb
call
mov
jg
fistl
rcl
mov
inc
loop
adc
fsubrl
inc
jmp
push
test
sti
out
stc
aaa
lea
movsb
fscale
sbb
shrl
inc
aas
sbb
cwtl
mov
test
dec
inc
sbb
aas
std
jns
dec
dec
cmp
mov
lea
out
mov
mov
gs
je
dec
test
pop
sbb
pushf
push
cs
lods
xlat
cmp
xchg
pushf
jne
bound
dec
testl
inc
jmp
add
cmp
cltd
ljmp
mov
idivl
ret
mov
and
mov
shr
lret
inc
inc
mov
sbb
adc
inc
jnp
clc
and
out
rcrl
add
jno
in
mov
lea
aaa
or
loope
jmp
std
fistpl
je
jno
pop
sti
add
adc
jns
cmp
xchg
dec
out
mov
out
js
cmpsb
test
loope
popf
sti
jo
jb
cmp
push
jle
sbb
dec
push
div
incl
mov
inc
xchg
movsl
cmp
and
push
jg
jl
inc
mov
push
mov
mov
lock
shrl
xchg
aas
negl
jp
in
xor
lret
pop
adc
add
fs
jg
filds
or
aam
movsl
jmp
xor
xor
pushl
das
imul
hlt
notl
cmpsb
stos
mov
idiv
jnp
mov
pop
push
jne
mov
cmp
mov
cltd
xor
sbb
lret
test
lock
sti
adc
cmp
lock
lret
jl
cltd
add
out
lock
inc
js
xor
cmp
aad
sti
mov
jae
lock
std
addr16
pop
mov
or
ljmp
mov
sbb
insl
mov
cmp
lcall
loope
out
or
cld
jnp
in
aam
xchg
mov
mov
ss
xor
fldt
sbb
xlat
ret
iret
std
pop
je
outsb
hlt
inc
dec
or
jb
stos
xchg
sar
pop
mov
xchg
pop
mov
mov
testl
call
cmp
sub
ret
call
jg
cmp
loope
xor
dec
sbb
aaa
insb
std
xor
jnp
pop
xchg
adc
pusha
stc
mov
mov
fimull
sub
rclb
xor
jmp
xor
call
mov
jg
push
jmp
imul
loopne
setnp
or
xchg
mov
pop
cs
jmp
add
push
hlt
orb
inc
push
jg
loopne
jbe
jmp
mov
and
lahf
stc
mov
xchg
scas
loopne
in
lcall
mov
jae
add
test
mov
std
xlat
and
cmpb
xor
or
pop
fistps
push
cmpsl
fldt
outsb
lret
std
std
inc
jmp
add
xor
mov
jg
int3
inc
inc
jae
fs
jo
pop
loopne
fimuls
aam
xchg
hlt
outsl
ljmp
sahf
lods
stos
out
jne
fistps
sti
ror
arpl
dec
fwait
mov
cmpsl
lret
jns
push
call
add
mov
sub
mov
imulb
jecxz
int
dec
inc
out
sti
mov
pop
clc
mov
ja
push
fcmovnb
mulb
fdivrl
std
mov
repz
fistpl
xchg
shrb
fmull
add
dec
lods
pop
cmp
addr16
mov
inc
dec
sbb
mov
inc
xchg
jbe
call
out
inc
jmp
mull
std
add
enter
sub
sti
lcall
into
es
rol
push
lcall
nop
xchg
pusha
mov
adc
repz
push
int3
out
adc
xbegin
pushf
rcr
lahf
call
in
jle
out
lock
and
xorb
push
ror
lret
neg
jo
scas
inc
jmp
or
sti
dec
jmp
push
mov
adcl
mov
fsubrp
std
sbb
pop
ja
add
cmp
mov
call
fstl
sub
clc
and
les
adc
fcompl
mov
sub
fstpt
adc
cmp
jmp
xor
xor
cmp
push
and
pop
sub
and
xor
xchg
jmp
inc
stos
adc
sbb
adc
leave
sahf
cmova
scas
or
aas
int
xchg
xor
neg
sti
jg
insl
xor
out
aad
xchg
loop
ret
loope
out
mov
mov
xlat
dec
fimuls
pop
in
aas
xchg
mov
dec
pushf
scas
call
outsl
loopne
xchg
popa
dec
mov
cmp
fidivrs
jle
decl
sub
xchg
lock
fidivs
mov
or
pop
lcall
in
lock
aam
cmp
cmpsb
or
pop
loope
mov
in
xor
mov
das
dec
pop
mov
sbb
std
pop
js
pop
lods
outsl
mov
loop
rcl
sub
jle
out
cmp
xchg
mov
sarl
jmp
dec
ds
cli
dec
fsubrs
lret
pushl
xchg
rcrb
cli
jl
and
cmp
neg
loope
cmp
ljmp
adc
sbb
sub
inc
inc
dec
in
clc
adc
fcoml
xor
cs
pushf
repnz
lods
lds
clc
dec
cmp
stos
and
idiv
paddusb
pop
mov
rcll
pop
cld
and
or
fisubs
sub
xchg
pushf
xchg
mov
sbb
fcmovu
dec
jge
and
or
loope
sbb
divl
movsb
incb
fwait
sbb
add
jge
out
and
ja
cli
or
test
jne
jnp
or
adc
in
pop
aam
loope
ja
mov
es
inc
mov
idivb
or
or
or
sbb
ffreep
les
mov
inc
adc
out
mov
out
arpl
mov
push
and
nop
cmp
mov
fldl
in
mov
dec
or
push
cli
pop
fimuls
andl
cmp
xchg
jno
push
mov
das
add
scas
dec
adc
push
data16
mov
pop
xlat
jae
xchg
sti
adc
lahf
jb
jl
stc
rorl
dec
cld
xbegin
jg
add
sub
jecxz
or
test
outsb
cmp
add
imull
xchg
adc
cwtl
and
sahf
cmp
or
ja
hlt
lea
aam
out
fdivrl
loopne
sub
mov
jge
sarb
cli
ja
jecxz
push
jl
addr16
dec
jg
pop
mov
outsl
xor
mov
repnz
fdivl
movsl
fsubrl
pop
mov
ja
jmp
cmp
dec
pop
out
sbb
inc
ror
out
icebp
pop
test
fsubl
test
jmp
jnp
pop
fimull
push
mov
cmp
jae
lea
xchg
pop
or
imul
mov
sub
shl
aas
pop
and
mov
dec
mov
aas
fisubs
cmpb
out
mov
icebp
out
negl
mov
jp
inc
cli
aad
rclb
sarl
std
insl
or
jg
sar
push
mov
jg
aam
mov
mov
loope
push
or
inc
mov
scas
mov
aam
mov
fwait
cli
xor
pop
push
sti
fldenv
mov
adc
stos
pminsw
push
add
inc
or
stos
cli
and
fildll
push
out
in
adc
ja
aas
mov
mov
les
dec
add
inc
ja
addl
hlt
pop
jmp
mov
and
or
insl
inc
cmpl
inc
cmpsl
das
test
test
inc
pop
xor
jno
test
mov
dec
inc
push
sbb
aad
leave
sub
add
jg
fistpl
and
sbb
loopne
pop
pushl
and
mov
dec
sbb
add
ret
push
pop
das
xchg
sub
mov
aad
jnp
mov
add
sub
dec
xchg
cs
in
mov
mov
or
loop
jo
jp
and
mov
dec
jnp
imul
xor
imul
push
insb
iret
mov
daa
jmp
hlt
stos
and
lock
pop
lcall
jmp
cs
pop
push
icebp
sbb
test
call
call
sarb
cmpsl
pushf
fcomps
outsl
fucomi
adc
push
adc
or
mov
lods
outsl
or
out
jne
lret
adc
xchg
mov
cmp
push
adc
jnp
mov
adc
inc
xchg
fdivr
adc
filds
or
notb
enter
mov
sbb
mov
xchg
inc
scas
lock
mov
mov
jg
fiadds
jmp
mov
pushf
popf
lea
push
or
clc
push
cli
pop
add
mov
and
inc
jg
mov
jno
ret
inc
mov
or
pop
cmc
cmp
mov
jp
push
mov
dec
jl
mov
mov
mov
shrb
fwait
pop
xor
out
rcr
mov
or
sub
sarb
bound
push
jecxz
push
std
fdivrs
pop
shrb
sahf
xor
inc
test
sar
sub
aam
adc
outsb
dec
jno
in
decl
and
out
movsl
cmp
pop
mov
push
fidivs
outsb
pusha
dec
xlat
sbb
test
outsl
fbstp
repnz
lods
sbb
inc
xchg
aas
pop
jge
lods
or
or
adc
test
aas
and
in
pop
lret
xor
mov
pop
std
dec
dec
xchg
xor
test
sub
push
loopne
incb
sti
stos
jecxz
sub
pusha
sbb
stos
mov
mov
cs
jg
bound
icebp
pop
dec
sahf
stc
push
xchg
or
dec
call
jb
adc
pop
lret
pushl
aaa
or
mov
test
fs
mov
dec
cld
outsl
int
jo
xor
nop
mov
test
ret
sub
dec
add
cli
es
insl
lods
pop
pusha
sbb
jecxz
pop
out
sbb
jmp
imull
in
jecxz
or
insb
xchg
out
ja
lods
pop
mov
lret
jecxz
jg
stos
dec
or
jecxz
pop
loop
fisubrl
sub
dec
lahf
aas
out
pop
pop
mov
mov
push
cmc
xchg
dec
cmpsb
pop
fwait
and
xlat
dec
scas
inc
nop
xor
jmp
shl
or
adc
sub
add
sbb
or
xorl
in
and
rolb
mov
lcall
lret
mov
scas
mov
cld
std
test
aas
cmp
in
daa
inc
and
and
add
jecxz
shr
scas
mull
lock
mov
add
lcall
sarb
out
fs
add
sub
jae
push
jne
hlt
jg
out
iret
mov
scas
or
es
divl
pop
sub
fsts
dec
in
push
pop
add
pop
in
sbb
sub
jle
insl
xchg
addr16
mov
inc
cmp
and
push
mov
pushl
adc
aad
les
mov
clc
bound
andl
or
js
mov
out
add
sub
sbb
adc
enter
push
cmp
add
outsb
push
cmpsb
adc
mov
loope
mov
mov
stc
in
push
std
cmpsl
call
loop
jp
gs
shll
test
sbb
icebp
mov
mov
incl
bound
mov
cwtl
clc
xchg
inc
jmp
in
dec
sub
and
sarb
push
insb
fsub
sbbl
pushf
xor
pop
adc
mov
push
xchg
ret
mov
inc
in
jmp
scas
scas
std
out
call
popa
and
pop
jno
out
fdivrp
into
sbb
and
xchg
sbb
shrb
dec
pop
sub
adc
lods
fistpll
out
insb
pop
sbb
and
cld
mov
cmc
mov
and
or
mov
out
nop
inc
pop
mov
pop
cmpsb
fidivl
fsub
sub
imul
rolb
sbb
mov
mov
mov
incl
pop
shlb
hlt
ja
cli
mov
adc
mov
push
aas
repnz
js
cmp
add
push
and
lahf
cld
and
push
incl
fisubs
mov
jb
xor
pushf
insl
add
mov
leave
jmp
hlt
jmp
mov
fld
sub
in
push
test
dec
dec
xor
cmp
fstps
pop
add
cmpsl
cmpsb
mov
inc
test
rcl
adc
out
push
outsl
xchg
sbb
dec
pop
cwtl
mov
jb
mov
filds
fst
test
push
pop
dec
fcmovnb
int
aas
mov
frstor
stc
sub
divb
xor
lea
outsl
cltd
push
mov
mov
pop
and
pop
rorl
inc
in
mov
in
inc
lahf
sbb
jne
clts
cli
addr16
xchg
fst
or
cmc
mov
call
jns
dec
push
jge
cli
dec
cmp
push
or
aam
dec
jbe
inc
mov
mov
mov
and
enter
jmp
in
outsb
fwait
ja
cld
imul
lcall
popf
mov
push
mov
out
lods
push
xchg
call
or
lret
mov
mov
clc
adc
sahf
xlat
movsb
out
xchg
jb
fimuls
inc
clc
jg
dec
inc
dec
scas
cwtl
cmp
adcb
les
stos
mov
mov
jge
and
loope
lcall
cld
iret
push
ret
mov
insl
cltd
mov
fs
ror
push
adc
xchg
ljmp
in
loop
sbb
adc
dec
xlat
gs
iret
and
movsl
jecxz
xchg
push
and
cli
loop
idivb
add
idiv
sbb
adc
aad
stos
les
push
rorb
or
add
and
jp
jbe
add
and
aas
inc
into
stos
cli
int
pop
mov
pop
out
push
clc
xchg
add
enter
in
das
pop
fld
ljmp
adc
mov
sti
or
pop
add
pop
sub
or
in
std
ja
stc
mov
sbb
or
pop
pop
mov
jne
loope
aaa
int
fucompp
and
outsl
adc
pushl
xor
pop
sub
lcall
jl
insl
int
je
sub
daa
cmp
ljmp
cli
adcb
xor
mov
fiaddl
jmp
hlt
aas
mov
jle
rorb
rolb
mov
xor
sti
pushl
int
inc
daa
jge
xchg
mov
scas
ret
hlt
lock
xchg
mov
inc
lods
rsqrtps
es
mov
flds
lret
mov
push
cmp
addr16
enter
test
out
add
lds
out
pop
call
mov
add
jmp
inc
sbb
shrb
into
in
or
decl
inc
in
add
jns
rcll
test
icebp
mov
xor
adc
jl
mov
jno
out
aaa
shr
push
or
xor
add
sbb
lret
pop
lcall
pop
popa
mov
or
and
pusha
jg
cli
shr
aas
data16
insb
cli
test
rcrl
out
jo
in
std
das
xor
iret
pop
jl
sahf
push
xchg
pop
subl
dec
lcall
dec
std
ja
shll
icebp
inc
ja
iret
ret
inc
sbb
cs
sahf
pop
dec
mov
test
jmp
or
xchg
inc
fwait
call
add
rorl
lods
mov
stos
jns
mov
aas
loope
pop
xchg
lods
push
mov
xor
mov
jns
or
icebp
test
movsl
lea
adc
xchg
in
imul
std
ljmp
inc
cmc
cmpsl
repz
repnz
aas
enter
mov
std
inc
scas
inc
add
sub
mov
decl
sti
push
or
or
push
aas
fdivl
xchg
das
jp
imul
in
clc
jg
loop
pusha
cmc
and
in
stos
adc
decb
call
test
std
fstl
cli
pushf
lods
loop
out
inc
mov
orl
test
jp
sub
lock
ret
xchg
xchg
sbb
mov
or
rorb
mov
add
outsl
mov
cmp
add
aas
jp
pop
int3
xor
stos
add
xchg
mov
jmp
cmp
lea
add
mov
push
movb
xchg
xchg
inc
idivl
mov
pusha
and
mov
mov
xchg
clc
flds
clc
daa
movsl
vprotb
aad
add
in
xchg
test
inc
or
bound
pop
and
incl
cltd
push
loopne
aas
lods
push
je
cmp
fwait
inc
imul
pop
jno
lret
dec
push
or
jle
cmp
inc
popa
push
or
lock
cmpb
fucomp
incl
and
enter
dec
sbb
sub
imul
out
nop
add
cld
xchg
sbb
imul
scas
and
std
dec
rolb
das
ss
jae
lods
jns
orl
aas
sbb
cmpsb
dec
icebp
arpl
repnz
mov
cmp
daa
fdivrp
arpl
mov
mov
icebp
mov
cmp
ja
mov
cmp
aad
inc
in
pop
sub
pop
jecxz
shlb
lcall
jp
and
xchg
stos
push
mov
iret
icebp
inc
test
outsb
push
mov
fldl
xchg
dec
mov
dec
sub
xchg
cld
sbb
or
mov
ja
pop
cld
mov
xchg
rclb
push
cmp
shlb
decl
out
jns
imulb
outsb
arpl
cs
inc
loope
std
xchg
lcall
sbb
addr16
cmp
jmp
mov
bnd
add
popf
sti
push
mov
sbb
add
xchg
stc
dec
fdivrl
mov
addl
sbb
faddl
out
push
lods
fistps
inc
lret
pop
or
cld
ljmp
jg
sahf
loope
cltd
fldlg2
insb
clc
xchg
int
cltd
mov
cld
pop
jge
inc
gs
xor
pop
xor
cs
mov
push
sub
mov
clc
incb
outsb
inc
lcall
mov
jmp
incl
inc
xor
cmpsb
sub
scas
lock
sahf
pusha
cmp
jnp
and
adc
mov
add
push
or
lahf
loopne
add
idiv
cmp
xchg
cmp
jb
cmp
mov
cmp
cmc
jbe
and
push
and
cmp
out
lock
mov
dec
mov
sbb
fcmovne
imul
js
xchg
sub
jbe
sarb
push
test
add
std
inc
out
mov
push
xor
adc
ja
lods
push
mov
scas
ljmp
cmc
dec
call
push
cmp
push
sbb
dec
ret
fstpt
xor
lds
jp
cmc
cmpsl
cmpl
xchg
rcrb
aas
fucomp
and
sub
cmpsb
push
xchg
jmp
mov
add
add
mov
cmp
cmp
cli
xor
out
ja
dec
lcall
clc
leave
mov
lds
cmp
std
jbe
data16
mov
sti
icebp
lahf
jnp
jae
out
or
clc
lea
mov
loope
cltd
sub
lock
icebp
shrl
adc
out
sarl
pop
push
out
popa
loopne
and
scas
push
out
and
clc
jae
push
cmp
jb
sbb
mov
clc
mov
mov
fwait
sahf
sbb
add
xor
stos
loopne
insl
inc
out
jne
pop
cmpb
popf
dec
test
je
fistpll
jp
aad
fs
pop
test
or
add
or
pop
push
mov
fs
inc
mov
adc
xchg
cld
outsb
rcrb
sarb
and
dec
mov
repnz
loop
js
lret
fsubrl
mov
repnz
testl
push
stos
sub
sbb
clc
pop
jbe,pn
xchg
xlat
dec
sbb
add
jne
rolb
mov
mov
pushf
jg
or
testb
ja
inc
mov
mov
test
sti
fsubs
push
or
xlat
push
pop
mov
inc
jp
adc
out
andl
decb
stos
test
fdivl
mov
ficoms
dec
test
pop
shlb
out
lock
mov
insb
mov
test
data16
mov
lods
leave
and
ss
popl
inc
jg
mov
push
arpl
lods
stos
test
icebp
mov
or
inc
subl
pop
cmp
lods
outsb
decl
fistps
out
test
in
lods
or
fdivl
sub
push
roll
mov
adc
jns
stos
mov
mov
jecxz
pop
or
mov
xor
jmp
cs
int
cmpsl
mov
pop
scas
dec
pop
or
addl
mov
jmp
out
cs
ljmp
sbb
and
scas
jne
cld
int
dec
loopne
adc
mov
mov
adc
dec
nop
fdivl
stos
cmc
sbb
mov
loopne
ret
mov
dec
imul
pop
cmpl
or
adc
and
mov
lret
push
je
je
jecxz
mov
cld
into
jb
fwait
inc
out
mov
and
dec
call
xor
sbb
std
mov
jae
rcll
xchg
xchg
mov
aas
mov
mov
shll
fbld
sub
shlb
lds
ja
mov
push
loope
cmp
outsb
mov
cmpsl
icebp
stc
pusha
pop
arpl
adc
iret
std
sbb
jns
test
insl
add
inc
in
ffreep
cli
xchg
add
sub
ficomps
jno
aas
shr
movsl
mov
out
push
popa
mov
std
or
mov
lahf
pusha
repz
fdivrp
xor
mov
dec
jg
nop
out
pusha
lods
pop
jp
mov
test
out
cmc
pop
sub
pop
mov
xorb
push
sub
idivl
xor
cli
in
jl
mov
lods
mov
hlt
mov
mov
sub
ret
mov
sbb
cmp
xchg
data16
imul
pop
cld
lods
cli
pop
fdivs
xor
mov
jge
in
and
add
xchg
pushf
fucomi
pop
sar
xlat
std
dec
sti
mov
xcrypt-ofb
cmpsl
in
adc
pop
sti
lahf
sub
ret
xor
xchg
lods
xchg
adc
std
jmp
pop
aas
das
rcl
add
repnz
add
cmp
cmp
sti
ds
mov
loopne
test
out
mov
mov
mov
jle
jnp
stos
repz
sub
xchg
clc
mov
dec
fstpt
movsl
sub
mov
cli
scas
mov
imul
and
mov
loop
push
fsubl
or
pop
cld
lahf
lret
add
stc
xchg
add
dec
das
pop
out
xor
lock
movsl
lret
pop
in
popa
pop
or
push
inc
xlat
pop
mov
daa
xlat
adc
pop
sti
scas
mov
test
jb
fs
loopne
fst
imul
xor
jne
sarl
fimuls
or
xor
fisttpl
sbb
out
mov
xchg
movsb
and
mov
push
bound
add
push
lods
xchg
mov
aas
mov
jb
cmp
or
inc
or
pop
mov
adc
outsb
inc
push
cmp
cltd
inc
adc
aas
fidivrs
push
lods
inc
adc
lock
add
ja
cmp
leave
xor
fisubrl
imul
in
sub
cmp
sbbl
hlt
mov
ss
push
jl
pop
xchg
cmp
sbb
xchg
shrb
cmp
mov
adc
ja
jg
pop
and
dec
inc
adc
stc
mov
mov
pop
mov
ja
fidivrs
aas
rclb
xchg
fldt
and
push
dec
movsl
inc
xchg
jae
push
sbb
mov
cmp
sbb
push
mov
mov
out
mov
pushf
inc
xor
test
lock
out
mov
push
lea
or
repz
out
clc
cmpsl
popa
mov
adc
testl
jg
jmp
fidivrl
mov
inc
repz
jg
decl
or
scas
hlt
push
mov
or
dec
cld
add
xlat
in
test
mov
std
pop
pop
repnz
mov
aas
mov
and
ljmp
notb
adc
cmp
jo
mov
pop
pop
or
xor
int
sub
lods
mov
loope
clc
push
jnp
dec
adc
inc
test
ljmp
test
and
or
dec
xchg
fs
aaa
inc
lretw
push
insl
call
aad
sub
jno
iret
in
lea
loop
mov
aas
cmp
cs
sub
and
cmp
bound
ja
jmp
and
addr16
pop
mov
or
in
sahf
cmp
repnz
idiv
sbb
push
sub
mov
mov
ficompl
cmp
adc
mov
jg
aam
mov
pop
loopne
ficoms
les
fsubrs
xchg
dec
jo
inc
or
fstl
sbb
imul
lock
out
ss
cwtl
adc
push
aam
pop
pop
outsl
jp
iret
and
push
inc
xlat
lret
rcrl
fldl
daa
nop
sbb
fdivrp
in
lcall
rorb
sti
push
enter
mov
pop
and
fmuls
ret
cmpsl
sbb
adc
xchg
jle
or
xchg
xorl
sbb
daa
jb
jge
sbbl
or
dec
nopl
jle
pop
repz
scas
dec
push
sbb
ja
inc
out
pushf
sti
aam
jg
xor
aas
push
add
clc
or
pop
mov
rorb
cs
jbe
cmpsb
pushf
cmp
fs
aam
inc
sarb
xor
xchg
adc
cmc
inc
in
adc
adc
dec
scas
cwtl
sub
sub
std
add
and
inc
add
scas
push
les
decb
and
pop
jae
push
sbb
arpl
cmp
mov
mov
ljmp
adc
and
stos
sub
push
lret
xor
jecxz
mov
fcompl
imul
ss
dec
sbb
leave
cld
popl
ljmp
jb
cmp
xchg
and
cmpsl
adc
jg
fimuls
xor
mov
mov
sti
popf
adc
push
jbe
pop
pushf
divb
movsb
das
xor
cmp
mov
xor
pop
imul
mov
movsb
out
aam
incb
adc
sbb
enter
repz
outsl
clc
mov
sti
push
dec
jbe
leave
mov
pop
aas
mov
out
pop
ljmp
xchg
test
sbb
lahf
jbe
push
mov
test
lods
add
in
imulb
inc
or
das
test
ret
rcrl
jne
loope
push
xchg
movsb
sub
push
mov
sahf
test
xor
mov
test
out
jle
xor
clc
push
dec
mov
in
mov
popf
in
decb
xchg
ret
cli
cmc
jmp
cmpsl
mov
sahf
loope
cltd
push
fcompl
lock
out
mov
xor
adc
sbb
pop
xchg
push
mov
mov
sbb
push
push
inc
cmc
cmc
ret
mov
adc
push
add
lods
sub
test
cmc
and
and
jg
jle
pop
mov
outsb
shrl
js
adc
mov
insl
outsb
pop
lcall
daa
loop
add
icebp
mov
xchg
rcrl
sbb
cs
xor
daa
jae
dec
cltd
push
inc
test
pmaxub
in
cmp
cmp
mov
ja
es
sbb
push
icebp
out
sahf
cmp
aad
das
inc
loopne
fdivr
pop
jne
lods
cmp
pop
std
push
mov
iret
and
jg
into
sub
add
mov
jno
frstor
push
jo
out
cmp
data16
jl
cmp
push
dec
mov
jg
stos
jmp
jb
in
ss
fists
call
popf
loope
or
or
aam
test
sbb
mov
inc
mov
sbb
xchg
push
fsubp
mov
inc
hlt
in
xor
fucomi
mov
fisubrs
dec
inc
repz
hlt
sub
test
mov
ret
mov
filds
lods
psubb
adc
cmp
mov
sbb
sti
jg
dec
sub
lea
inc
and
pop
mov
imul
dec
cli
call
cmpl
mov
or
fistps
jecxz
roll
or
jno
out
pushf
cld
fnstsw
aaa
add
inc
lods
pop
fstl
push
cmp
sti
hlt
pusha
lods
loope
mov
dec
sub
pop
mov
cmc
xchg
dec
nop
cmp
dec
aad
mov
mov
xor
and
or
inc
mov
outsl
sub
and
inc
mov
dec
clc
pop
fidivs
inc
push
mov
sub
dec
insb
sub
or
in
rcll
loopne
xchg
cltd
cltd
push
std
cwtl
loope
in
lcall
pusha
fldt
sahf
clc
lea
and
pop
mov
rorb
bnd
shlb
orl
push
pop
fildl
movsl
jg
incl
jl
pop
inc
test
mov
sbb
lods
fmull
push
leave
inc
aaa
mov
and
cmp
xchg
mov
sub
xor
rcl
daa
lret
push
cs
cmp
mov
in
fsubrp
pop
stos
das
mov
pop
push
jmp
push
aas
sub
mov
jp
pushl
mov
ljmp
add
sbb
fs
dec
aad
sbb
stos
inc
cld
pop
dec
les
push
call
sti
cmc
xor
mov
mov
inc
inc
or
dec
push
mov
push
loopne
push
mov
scas
mov
jmp
fidivrl
lods
aas
or
das
sub
loopne
sbb
xchg
pop
testl
jb
icebp
jmp
std
bound
cmp
sub
subl
lods
jle
lods
inc
mov
sub
sbb
fiadds
loopne
jbe
ficoms
or
and
push
enter
mov
stc
cld
sub
pop
hlt
std
or
jb
lahf
loope
es
out
jbe
jle
inc
push
push
xor
and
je
xchg
mov
in
adc
jg
and
mov
mov
xchg
adc
adc
xchg
int
xchg
addl
push
repnz
arpl
mov
aas
test
xchg
out
pop
in
ss
mov
repnz
sbb
repnz
cmpsl
adc
pop
cld
pop
add
test
sub
lock
push
cmp
jecxz
lds
insb
fmul
lods
fcoml
int3
popa
movsl
cmc
out
pop
mov
pop
clc
andl
mov
lret
sahf
jg
adc
outsb
push
jp
ljmp
outsl
pushf
mov
leave
pop
pop
and
push
adc
dec
js
std
xchg
sbb
sbbb
or
stos
aaa
xlat
cmp
inc
or
sti
xchg
ja
aaa
xor
lret
sbb
fs
jge
push
ffreep
clc
pop
mov
adc
and
add
xor
cli
cmp
aaa
daa
xlat
mov
mov
cmp
lock
pop
add
inc
popa
add
das
jg
arpl
inc
cmp
fmull
xor
enter
lock
fnsave
js
inc
adc
mov
fstps
mov
inc
add
shll
jp
xorl
inc
mov
sub
int
add
pop
and
sti
icebp
es
aas
dec
bound
cli
add
inc
jl
xorl
shlb
data16
mov
pop
sub
xchg
inc
xor
out
sbb
xchg
mov
in
outsb
or
mov
push
pop
dec
call
loope
jl
in
sub
cmovb
mov
lock
mov
test
test
jle
cmp
pop
movsl
and
ds
loope
cmp
xchg
push
mov
mov
out
sub
sbb
popa
inc
int
enter
inc
xchg
xchg
add
int
dec
subl
fnstsw
jge
xor
test
dec
jp
and
aaa
neg
and
sbb
lods
pop
inc
pushf
mov
jge
ret
inc
push
mov
mov
sub
mov
insb
mov
jge
int
aas
xor
cmp
mov
mov
pop
test
pop
sti
aas
lock
popa
push
mov
ret
jg
ret
xchg
xchg
or
push
ds
and
hlt
dec
hlt
push
fcomp
mov
call
cmp
shl
jmp
call
testl
jg
std
cltd
cmpb
and
iret
mov
cmp
incl
mov
or
push
mov
outsb
add
das
call
out
adc
push
pop
inc
add
add
dec
add
jmp
lret
inc
jnp
cmp
das
jg
mov
or
mov
xchg
add
ja
ret
fisttpl
mulb
outsb
cmp
mull
aas
stos
xor
cmpsl
in
aad
push
pop
xchg
mov
enter
add
ds
mov
dec
sub
andl
idivb
lods
push
arpl
push
push
jge
xor
fwait
loop
mov
insl
into
cwtl
xor
stos
div
pop
mov
xchg
incl
mov
ljmp
mov
push
das
jbe
mov
orb
arpl
fcom
popw
push
push
xchg
jne
dec
rorl
inc
sbb
sub
popa
sub
ret
add
jns
shll
sub
add
out
push
add
xor
cld
jnp
xchg
movsl
loop
imulb
clc
xor
sbb
jae
in
jge
aas
push
mov
cld
test
adcl
jle
repz
jmp
nop
js
test
xchg
push
add
pop
scas
sbb
arpl
mov
or
hlt
fbstp
cmp
mov
xor
pushl
push
cmp
jg
cld
xchg
inc
inc
sbb
mov
pop
jbe
imul
ds
into
dec
dec
sar
push
pop
push
ret
sub
in
pushl
lret
popf
into
push
jnp
out
sub
stos
mov
mov
push
dec
and
mov
adc
jmp
std
loop
fidivrs
mov
sub
sub
lods
cmpsb
repz
mov
lock
pop
xchg
sbb
les
add
cld
test
add
out
sbb
addr16
das
arpl
jp
stos
pop
push
jbe
jb
fdivr
and
mov
ja
jnp
jl
cld
mov
out
rorb
adc
mov
fs
and
mov
xlat
and
mov
call
loope
jg
sbb
mov
cmc
inc
push
and
and
movsb
rcrb
sub
shll
ficomps
xchg
orb
mov
dec
pop
fistpll
dec
fwait
mov
lods
rol
int3
aas
stos
ds
mov
pusha
call
jmp
cmp
fdivl
sbb
adc
xchg
sti
imul
inc
fsubl
sti
xor
sbb
cmpl
jp
or
pop
incl
neg
sub
sbb
sub
dec
jnp,pn
mov
jl
xchg
mov
pop
jecxz
ds
jl
jns
loop
incl
sarl
mov
sbb
stc
mov
insl
daa
hlt
out
outsl
jo
cli
xor
sub
pop
jb
xchg
rorl
adc
and
sti
ja
adc
lds
mov
jae
mov
fscale
int
and
inc
call
out
ljmp
shlb
rorb
push
pop
xlat
shlb
cmpsl
clc
fldt
or
mov
out
mov
icebp
mov
nop
xor
mov
pop
pop
int3
mov
pop
jnp
imul
fdivr
adc
insl
in
rcl
cli
and
cmc
and
xlat
lods
jns
idiv
jmp
andb
iret
xchg
fnsave
lahf
cld
hlt
cmc
lcall
mov
mov
stos
negb
les
icebp
mov
pop
daa
ret
lret
cli
cmp
adc
ja
jg
aam
push
cltd
out
pop
adc
sbb
lock
jmp
pusha
call
cwtl
sbb
in
or
mov
pop
jge
pop
mov
insb
roll
pop
ss
sarb
mov
push
mov
xchg
lcall
outsl
xchg
lds
adc
pop
push
jmp
js
jno
pop
xlat
pop
dec
out
mov
out
push
lcall
dec
stos
es
out
inc
movsb
sbb
pushf
cmp
imul
add
inc
repnz
xchg
rep
dec
mov
arpl
js
push
and
outsb
stc
aam
pushl
or
int3
inc
ds
pop
pop
push
imul
out
jg
shrl
inc
lods
xorb
jp
inc
inc
lods
lahf
lock
mov
lea
add
fistpl
mov
cmp
hlt
pop
mov
push
pop
fimuls
mov
jbe
testb
pushl
sub
xchg
loope
dec
mov
and
pop
adc
fmuls
paddd
ficomps
es
and
mov
icebp
push
xor
inc
mov
sarb
loopne
lret
mov
xor
pop
add
and
repz
cmp
add
fidivs
mov
leave
shrl
out
ret
std
out
inc
sub
inc
outsl
sti
fdivrl
negb
dec
les
out
dec
mov
jle
decl
sbb
out
mov
aam
idiv
sub
out
push
mov
outsb
mov
fsub
lret
incl
cmpsb
ret
jb
sti
adc
int
jecxz
pop
adc
adc
adc
arpl
cmp
sub
dec
cmpsl
jb
cwtl
test
pop
bound
fmul
push
sub
jbe
or
jmp
cmpsl
or
fidivs
je
or
icebp
fisttps
xchg
inc
dec
lods
or
pop
mov
rorl
lds
fwait
jl
adc
ret
mov
push
popf
iret
sub
xor
mov
xor
incl
pop
mov
sahf
cmp
push
cmp
jo
int3
out
fnstsw
mov
xchg
loopne
das
add
idiv
cmp
hlt
pop
inc
out
pusha
cpuid
fucomi
mov
xchg
inc
mov
repz
into
mov
sub
add
xchg
fdivrl
das
jb
scas
jle
push
jnp
sub
shll
inc
subb
ljmp
inc
lcall
sbb
mov
movsb
fildl
inc
mov
fsts
mov
pop
mov
iret
test
rorb
hlt
inc
jp
sbb
imul
pop
jp
push
push
xchg
adc
ja
mov
jno
jg
scas
adcl
and
dec
in
mov
or
cmpsb
mov
out
mov
daa
push
icebp
int3
push
insb
dec
push
or
pusha
js
fcoms
std
adc
push
imul
adc
sahf
mov
cmp
mov
sarb
push
jae
repnz
mov
pop
xchg
xor
xor
mov
enter
outsl
ret
je
sbb
xchg
cmp
push
das
lock
push
sbb
adc
scas
fisttpll
pop
push
lret
lret
add
sbb
adc
and
dec
sbb
mov
and
pop
jp
enter
std
jo
mov
aad
fs
mov
fucom
adc
cmp
push
leave
push
std
add
sbb
decb
jmp
dec
rcl
cmpsl
adc
hlt
cld
incl
jno
lret
les
scas
imul
cmp
out
bound
cmpsb
adc
loop
cwtl
or
mov
mov
sub
pop
and
add
divl
icebp
out
add
mov
jmp
repnz
push
cmp
mov
pop
aaa
fcmovu
cmp
scas
bound
and
mov
or
add
negl
popf
jnp
data16
jns
inc
lcall
jo
test
sbb
loopne
sbb
xor
or
lret
add
test
shlb
mov
xor
fucomp
mov
loopne
xor
gs
pop
sbb
pop
dec
mov
add
lcall
ja
cmpsb
and
gs
cmpsb
adcb
lea
dec
out
iret
std
and
push
iret
pop
aam
cmp
mov
jae
sbb
push
mov
dec
jge
int
pop
std
push
aas
push
jne
movsb
fsubl
mov
dec
adc
mov
mov
cmp
outsl
out
loope
aas
inc
pop
pop
je
lods
shlb
pop
icebp
mov
popf
push
aad
arpl
mov
decl
cmc
mov
mov
xchg
inc
push
rcl
mov
pop
mov
cmpsl
loopne
and
fdivp
pop
les
cmp
sbb
sbb
jo
in
jmp
and
ret
xlat
jmp
test
push
inc
cmp
mov
sbb
inc
push
cld
jg
jbe
into
fbstp
shlb
pop
or
cmp
imul
push
lods
jb
mov
lret
sub
daa
adc
ja
sub
jp
xchg
mov
xor
call
in
stos
dec
xchg
add
lcall
test
outsl
in
outsb
ret
stos
cli
jne
xor
mov
out
sub
lock
dec
inc
mov
call
loope
sub
js
pop
cmp
fwait
xchg
fucomp
dec
movsl
sbb
in
cmpsb
push
xlat
jmp
push
outsl
movsb
sub
out
add
sub
aad
nop
inc
push
adc
jg
fs
ja
add
or
add
sub
in
mov
mov
lods
shrb
js
mov
mov
fucomp
dec
mov
mov
pop
or
or
stos
mov
cli
cmp
fwait
inc
jb
lcall
dec
push
xchg
clc
lahf
adcl
dec
ret
test
incl
xor
scas
hlt
pop
sub
jb
add
mov
fcmovb
out
iret
loopne
mov
loop
mov
das
in
test
cld
sbbl
jmp
adc
cmp
daa
xchg
leave
mov
scas
jmp
dec
mov
push
out
inc
popf
je
out
adc
mov
out
push
mov
xchg
adc
sarl
cltd
xor
mov
cwtl
cs
enter
jo
sbb
fcom
jae
int3
add
stos
push
jae
cli
in
pop
outsb
push
adcl
repnz
dec
pusha
fidivs
pop
and
adc
push
hlt
xchg
mov
popf
clc
add
mov
aaa
loop
inc
add
pop
dec
std
fildll
xchg
lret
repnz
cmpsb
jmp
aaa
jg
jnp
sbb
sub
mov
int3
mov
pmaxub
push
ljmp
push
outsl
lret
adc
cld
pusha
aaa
mov
aas
movsl
lods
mov
fwait
pminsw
jl
outsb
adc
push
ret
sahf
bound
jmp
inc
cld
xor
or
mov
add
xchg
out
jge
mov
mov
inc
fists
cli
sub
popa
sahf
xor
lea
add
cli
stos
push
imul
cld
xlat
jecxz
mov
push
or
fs
hlt
fidivrs
push
cmp
mov
mov
mov
movsb
clc
push
mov
loope
jecxz
or
fstps
popl
inc
sbb
sbb
lea
mov
sahf
mov
add
or
ret
fistpl
mov
lahf
pusha
pop
jno
pop
mov
jp
dec
xchg
mov
jmp
sbb
hlt
pop
jo
cmp
adc
rolb
pop
sahf
mov
incl
dec
xor
mov
jl
repnz
push
aad
xchg
sub
xlat
data16
xchg
adc
testb
inc
mov
xor
pop
inc
psubw
mov
pop
ret
fisttpl
lods
cli
jg
fcomp
shr
enter
imul
mov
fs
pop
push
pop
cmpsl
testb
in
xor
and
jns
cli
inc
aas
iret
cltd
test
adc
out
or
je
mov
fildl
cwtl
stc
in
pop
sbb
pop
cld
aas
bound
sbb
xor
jle
and
sub
and
add
mov
aam
jp
shll
loope
pop
cwtl
loopne
adc
mov
aad
jg
adc
ret
and
in
and
rcrb
les
mov
cmp
clc
jg
mov
mov
mov
cmpsl
lds
adcl
add
mov
inc
leave
xor
rorb
ss
cmpsl
out
cmp
incl
or
out
and
lock
cld
and
and
and
xchg
xor
mov
insl
outsb
sbbb
loopne
sbb
test
mov
push
rorb
cwtl
pop
lea
xchg
jg
mov
xor
push
pop
clc
jge
cmp
mov
mov
add
xchg
sbb
sbb
jg
cmp
aam
jns
frstor
mov
out
or
hlt
mov
xchg
xchg
jg
call
mov
jno
xchg
dec
sub
jle
sbb
or
fisubs
pop
inc
mov
cli
jmp
out
rolb
push
sub
leave
add
mov
xor
lds
add
iret
pop
sbb
scas
jo
test
lret
sub
decb
subb
arpl
mov
push
sbb
js
jb
cli
ja
pop
xor
sbb
das
inc
insb
inc
sarl
in
dec
pop
xor
cmp
push
jecxz
jp
outsb
incl
stc
jle
jb
inc
sti
ficompl
aad
sar
mov
pop
out
arpl
outsl
scas
sbbb
push
xor
int
cmpl
popa
call
mov
pop
lea
mov
sub
mov
cmp
ret
inc
mov
adc
inc
sti
ljmp
mov
stos
push
xor
andl
out
jge
and
pushf
xlat
sbb
push
clc
shrb
jb
cmp
mov
hlt
fbld
sbb
jo
les
dec
out
lcall
or
sarl
out
mov
movsl
clc
xchg
test
or
rclb
mov
add
add
aas
mov
jnp
fiaddl
pop
dec
inc
shll
pop
push
jae
push
inc
out
bound
lcall
shl
lds
ss
xor
sarl
jnp
pop
gs
add
mov
mov
mov
cmp
out
pop
aas
ret
mov
xchg
sub
mov
gs
decl
test
repz
sbb
leave
test
xchg
xchg
inc
scas
jg
and
ljmp
std
and
or
inc
xorb
mov
incl
cmp
jno
es
mov
sub
jne
adc
imul
sub
push
xlat
cmp
lret
popa
dec
stc
push
cmp
pop
cmp
and
cmp
aad
jecxz
mov
xor
loope
stos
push
clc
daa
jl
pop
push
sub
call
data16
out
in
pop
subl
xchg
push
hlt
mov
sub
data16
dec
jle
jns
or
repz
loopne
andl
in
jnp
daa
mov
popl
dec
ret
sbb
dec
xchg
adc
ret
pop
lods
pop
in
imul
ja
pop
add
adc
or
add
push
and
dec
fistpll
clc
not
roll
adcb
scas
enter
dec
sbb
pop
push
loope
jnp
andb
push
pusha
sbb
xor
ror
call
aam
frstor
sub
inc
es
and
mov
fwait
ljmp
mov
shlb
sahf
or
outsb
and
adc
push
adc
jb
scas
sbb
arpl
rcrb
addr16
rcll
jl
xor
int
cmp
push
js
push
sti
pop
pop
cmp
jp
xor
pop
sbb
pop
dec
or
push
mov
fwait
jl
aas
adc
movsl
sub
lret
push
pop
push
lcall
and
jbe
stc
add
jnp
fldenv
addl
lea
in
enter
rcrl
fsubrs
cli
aas
idivl
xchg
push
fs
clc
sbbb
std
xor
test
inc
mov
xchg
mov
push
inc
push
out
in
outsl
icebp
loopne
dec
mov
jno
xor
lds
fcmove
pop
popa
push
jnp
cld
shl
iret
push
cmp
sbb
or
js
into
push
cli
push
push
push
mov
sbb
add
push
mov
loope
incl
fistpll
scas
leave
jb
cmp
mov
push
pop
popf
int
and
or
and
cltd
mov
jp
sub
push
lock
jecxz
jnp
flds
lock
add
or
aas
inc
hlt
xchg
scas
xchg
repnz
mov
mov
cmp
hlt
es
push
loope
stc
mov
adc
mov
inc
mov
cmc
jne
adc
mov
sarb
pop
loope
in
hlt
cmpsl
test
movsl
cmp
dec
icebp
call
sbb
add
xorl
add
jbe
xchg
cwtl
hlt
and
mov
out
test
ffree
inc
jg
cmpb
pop
gs
arpl
mov
pop
push
mov
push
add
pop
cmc
jle
call
pop
popf
inc
lods
repz
or
jg
lea
movsb
addb
popf
pop
shl
into
std
gs
and
cmp
add
shll
pop
in
int
push
bound
hlt
push
adc
push
int
orl
mov
je
inc
push
xlat
pop
leave
ja
aas
mov
sti
into
lahf
add
jecxz
sti
or
jo
decl
testl
fdivrs
aas
mov
out
mov
xchg
push
nop
mov
mov
cmc
push
and
or
and
mov
in
arpl
adc
ss
stos
test
dec
mov
xor
push
xor
jnp
or
cs
xor
ljmp
adc
or
add
cld
out
out
and
adc
loop
aas
sbb
frstor
aad
mov
in
inc
ds
add
out
std
outsl
adc
xchg
sub
lds
and
jg
clc
scas
cmp
push
jo
sbb
jae
dec
sbb
das
test
rclb
jbe
sti
repnz
push
jecxz
add
inc
jnp
sti
movsl
pop
lahf
and
out
in
sarb
dec
hlt
sub
pop
push
ss
arpl
add
or
mov
mov
shlb
in
call
jae
xchg
jmp
xchg
add
pop
scas
mov
sar
cmp
jle
push
aas
popf
push
xchg
fldt
mov
mov
aam
les
daa
loopne
xchg
cli
mov
sbb
adc
outsl
xor
and
and
push
int3
pop
push
lret
repz
stos
xor
and
pop
outsb
loop
inc
rcrb
sub
lock
call
sbb
in
sub
adc
inc
ret
loope
dec
jg
mov
idivl
jecxz
sbb
jg
jg
lea
les
or
cli
add
ds
jl
inc
data16
xchg
pop
cltd
insb
sbb
inc
ss
in
xchg
push
loope
sbb
mov
xor
test
ja
pop
cmp
dec
gs
mov
push
xor
sete
daa
popa
pop
outsl
repnz
aas
int
lahf
insb
or
pop
and
push
icebp
popl
sbb
mov
aas
outsl
fisttps
sar
xor
mov
inc
xor
icebp
inc
jb
sbb
and
psubsw
mov
aas
frstor
inc
cwtl
or
jle
mov
out
je
notb
ljmp
xchg
jecxz
ljmp
cli
cmp
mov
sub
roll
test
and
ret
in
stos
scas
stc
jl
push
sub
push
addr16
das
add
nop
addb
lahf
dec
addb
push
or
stos
jae
fnstsw
push
sub
out
ret
add
fdiv
or
cmpsl
ja
push
std
fbstp
inc
push
loopne
add
loop
cwtl
xchg
sub
mov
mov
xchg
xchg
xchg
sub
ljmp
inc
push
fiaddl
loopne
mov
dec
stos
dec
or
xor
pop
aas
jle
and
fsubrl
das
and
fimull
add
xchg
les
pop
jg
ret
out
inc
dec
cwtl
iret
adc
mov
or
loope
pop
jnp
jmp
mov
lcall
mov
or
lret
push
xor
cmp
in
xchg
add
inc
lock
fimuls
sbb
rcll
aad
or
sbb
aam
out
lock
pop
mov
dec
sub
and
les
lods
add
mov
jmp
decl
pop
sbb
pop
sub
lock
mov
mov
pop
xchg
adc
cli
out
xchg
adc
pop
les
cs
aas
sbb
fsincos
xchg
loop
mov
inc
inc
or
fs
jnp
jecxz
cmpsl
pop
jnp
cli
fdivrs
sbb
shrb
fcoml
sbb
popf
clc
addr16
imul
out
mov
out
xchg
ja
or
aas
adc
mov
dec
inc
and
inc
mov
sbb
clc
mov
int3
inc
sbb
popa
xchg
popf
sbb
sbb
aas
hlt
push
push
mov
mov
into
fistpll
xor
loop
stos
dec
bound
std
add
clc
pusha
adc
lods
test
mov
xor
push
mov
jg
loop
fadd
jecxz
xchg
ret
pop
push
xchg
xor
stos
push
fistpll
mov
and
inc
loop
int3
mov
je
cmpsl
jb
xor
sub
sbb
sub
xchg
adc
jge
mov
fucomip
imul
cli
fnstcw
shr
push
mov
loopne
cmp
xchg
bound
out
test
ret
inc
dec
data16
call
dec
cmpb
loop
xchg
mov
cmp
bound
and
mov
aas
out
mov
js
test
sub
jno
inc
loope
movsl
mov
cs
std
in
mov
cmc
push
and
and
rorl
arpl
imul
sub
outsl
cmpsb
pushf
popa
cwtl
js
cld
mov
xchg
fidivrs
shrl
das
rcrl
pop
fmull
js
data16
jo
nop
dec
lock
out
ss
cmc
lahf
xchg
aad
add
daa
test
add
int3
incl
jg
mov
lahf
das
sub
cmp
repnz
test
push
aas
out
std
pop
test
push
stc
sbb
jmp
cld
data16
pop
pop
mov
cltd
jg
mov
in
popf
cltd
adc
xchg
mov
ljmp
pop
xchg
fiaddl
dec
dec
lret
or
xchg
es
aas
cmp
test
and
lahf
clc
mov
and
gs
jae
aas
jp
out
mov
mov
outsb
loop
jecxz
out
js
fildl
fbstp
add
sub
or
xchg
scas
adc
in
int
pop
jmp
icebp
outsb
addr16
xchg
test
cmc
push
ret
pop
ret
cmc
fcomip
mov
rorl
mov
sbb
sub
sub
add
pmaddwd
push
cmp
jo
sub
lock
mov
sbb
cltd
loopne
dec
cli
repnz
popa
xchg
cli
mov
out
fdivrp
hlt
cmp
es
leave
cmp
dec
jmp
and
sub
xchg
and
or
repnz
mov
out
inc
sbb
idivl
ret
xor
nop
dec
xchg
test
out
mov
stos
and
daa
ljmp
jg
lret
ret
jle
clc
mov
hlt
enter
ja
pop
and
mov
add
sbb
xor
jmp
scas
movb
cmp
psubb
adc
stos
adc
ljmp
ja
cli
ja
fidivrl
orb
cmc
fdivrl
in
icebp
or
stos
push
and
ja
out
xchg
inc
shlb
lods
ficomps
sbb
decl
lock
or
sbb
cmp
in
lods
and
xchg
pop
fdivl
and
bound
mov
push
mov
mov
cmp
out
ljmp
jb
jecxz
jns
js
pop
jecxz
mov
xchg
loop
xlat
loope
mov
cld
mov
insl
pop
push
test
clc
daa
xchg
outsl
sbb
or
cmp
xor
and
inc
cmp
decb
hlt
mov
dec
popa
push
add
test
lock
int
adc
mov
fisttps
mov
push
stc
mov
jl
outsl
jb
hlt
lahf
sti
adc
clc
mov
cli
jns
xchg
inc
lahf
push
std
sbb
pop
rcll
push
add
push
mov
xchg
inc
push
fcomi
sbb
jbe
jle
lret
push
mov
push
sti
fbstp
inc
xchg
les
inc
imul
lret
outsb
mov
sbb
cmc
xchg
jg
mov
mov
lcall
sub
das
push
hlt
js
test
aaa
lret
lock
jg
jmp
test
jl
scas
enter
outsl
cmp
aaa
add
inc
scas
xor
shlb
pop
pop
dec
sar
sub
pop
mov
adc
shrb
fimuls
or
ret
lods
ljmp
or
movsl
xor
jae
rorl
lods
jg
sti
call
xchg
mov
loopne
mov
pop
push
adc
push
mov
fdivr
roll
lds
call
outsl
jno
jae
nop
arpl
mov
imul
mov
lea
pushf
inc
jmp
adc
lcall
jg
mov
cmc
dec
inc
fnstsw
push
pop
cmpsl
movsb
mov
popf
push
setns
mov
cmc
fstpl
cmp
aam
testl
fwait
nop
mov
adc
pop
mov
pop
stos
clc
cltd
sbb
add
sbb
cmpsl
imul
ljmp
cld
or
lcall
inc
icebp
sbb
dec
add
insl
xchg
push
sahf
mov
imul
fildll
lods
and
push
mov
xor
xchg
xchg
cmc
jg
pushl
mov
das
repz
dec
das
mov
mov
loopne
ficoms
adc
cmp
xor
lcall
std
out
je
test
sub
sbb
ret
and
xchg
and
insl
push
lds
in
sbb
stc
pop
xor
mov
mov
cs
mov
inc
cmp
sbb
popf
cmpsl
out
and
push
push
dec
in
insb
jnp
inc
loopne
ja
jo
hlt
inc
dec
leave
out
into
dec
movsl
adc
ret
sti
in
es
fwait
xorl
das
push
mov
hlt
pop
add
loope
or
jno
out
mov
addr16
inc
movsb
out
and
jp
fsubrs
inc
stos
fisubrl
add
lods
enter
push
push
push
cwtl
mov
mov
mov
push
fisubs
lcall
mov
cmpsb
out
pushf
jo
pop
xor
fcmovne
out
shll
decl
aad
mov
jb
dec
shrb
mov
int
jge
orl
fistps
and
mov
pop
push
mov
repz
std
mov
loope
js
test
ret
adc
mov
push
or
jnp
mov
and
and
jl
decb
andb
cld
pop
mov
insb
jp
leave
in
mov
movsb
sub
sbb
pushf
lods
hlt
mov
sti
ljmp
push
cmpsl
imul
jge
test
mov
stos
fstl
or
mov
push
cmp
lods
or
fidivrs
push
lods
lods
adc
or
lahf
std
cmpsl
jbe
fcmove
movsl
jmp
bound
sbb
fs
fsubl
add
add
ffree
sub
addl
aam
clc
mov
call
sub
repz
xchg
inc
clc
setl
xor
inc
pop
sbb
sub
dec
and
stos
ljmp
jb
ret
ret
mov
adc
xchg
sub
popf
cmp
clc
cmc
fwait
into
push
gs
imul
andb
daa
push
fistpll
add
mov
jmp
icebp
aas
call
test
fcmovu
dec
or
test
cld
sub
mov
mov
xchg
sti
sbb
cld
fcoml
sub
mov
and
shrb
push
std
fistps
jmp
ss
lock
es
lahf
mov
push
or
sbb
into
das
inc
enter
lahf
xchg
jl
rorl
push
arpl
pop
sub
outsl
fisttpll
or
jle
pushl
in
xor
icebp
mov
push
mov
std
out
pop
into
js
lcall
in
out
ja
jmp
or
mov
xor
inc
and
push
mov
iret
cli
mov
inc
xchg
inc
lds
loopne
inc
lcall
sbb
movsb
dec
lods
test
movsl
mov
das
inc
cmp
and
pop
xchg
jp
dec
imul
imul
aad
jns
adc
aam
cli
out
add
mov
mov
inc
xor
push
int
push
clc
cld
outsb
adc
xchg
xchg
loop
sbb
pop
jne
mov
loopne
in
mov
cs
mov
das
clc
pop
xchg
cmp
jg
inc
or
cli
jb
and
or
arpl
pop
or
es
mov
jmp
jg
inc
loopne
pop
adc
jnp
mov
pop
mov
lcall
rclb
insl
loopne
mov
ja
punpckhbw
les
imul
jno
les
pop
mov
mov
sbb
jmp
loopne
cmpsl
shl
and
sbb
test
mov
aam
mov
decb
xchg
cmc
dec
out
imul
ffreep
jecxz
ljmp
rcrl
mov
in
lods
popa
mov
jg
cs
lret
sub
lahf
ja
clc
aas
in
dec
fldl
ror
insb
inc
jnp
arpl
dec
in
or
xor
jne
daa
mov
add
or
add
icebp
movsl
lock
pop
cwtl
jnp
popa
xchg
xor
addr16
add
call
ficomps
xor
sub
fcomps
pusha
lods
cmpb
jnp
aaa
ss
jbe
pop
sub
sub
sub
sbb
xchg
push
fildll
xchg
iret
jp
inc
sub
mov
popf
or
jns
arpl
add
rolb
ret
jg
decl
in
push
mov
mov
push
sbb
sbb
add
xor
repz
pop
lret
jmp
test
and
ja
hlt
mov
fistps
mov
pop
xchg
test
and
add
loope
push
jg
mov
or
mov
aaa
mov
pop
and
sahf
jle
adc
subb
jmp
mov
pop
loope
mov
out
std
cmpsb
sbb
loopne
mov
pushf
or
mov
rcl
jae
mov
mov
mov
jne
jmp
mulb
stos
mov
aam
jmp
jbe
incl
nop
lods
popf
pop
dec
test
add
pushw
std
or
fmul
lock
cmp
sarb
jle
nop
inc
fwait
insl
xorl
sbb
testb
and
popf
lcall
jge
jp
xor
incl
into
push
mov
fldt
or
ja
outsl
mov
pop
xor
xchg
daa
mov
imull
dec
jge
fstpt
sti
dec
inc
insb
repnz
xchg
pop
cli
aaa
shlb
push
std
jg
or
mov
ds
pop
fldcw
fstl
adc
mov
or
pushw
lahf
push
incl
js
pop
xchg
sub
outsl
cwtl
cmc
adcl
jno
dec
pop
and
popl
popf
js
stc
mov
or
mov
enter
inc
ds
scas
nop
stc
sub
sub
icebp
mov
je
cmpsl
out
inc
aad
or
lcall
rolb
mov
xor
movsb
xchg
dec
xor
sub
cmpsb
xchg
cld
inc
testl
sbb
insb
popl
ljmp
add
shl
cs
lock
subl
mov
or
bndstx
aaa
jo
jle
out
repnz
jns
mov
divl
xor
jge
enter
gs
add
lods
aaa
pop
rcl
xor
in
xor
adc
arpl
cld
sahf
stos
mov
rorb
imul
sbb
xor
jnp
pop
test
popa
xor
fadd
pop
mov
and
inc
std
out
stos
jg
cs
popa
or
cld
out
imul
adc
aas
in
shr
data16
stc
xor
int
jnp
xchg
out
sti
adc
daa
sbb
cld
xor
sti
mov
lods
mov
stos
add
out
rcrl
pop
out
jb
gs
jne
sub
or
lcall
out
mov
sbb
mov
dec
sbb
jmp
aaa
jnp
out
sub
mov
inc
xchg
std
das
push
sub
fiaddl
xor
mov
or
imul
gs
mov
adc
fdivrl
negl
out
hlt
es
inc
sar
pop
loopne
or
or
push
sbb
popf
clc
pop
ljmp
addr16
cwtl
jo
iret
lock
jbe
xlat
ficomps
out
imul
xor
cmpsb
jp
cmp
mov
movsl
out
sub
arpl
pop
pop
dec
xchg
adc
xor
mov
insl
and
push
push
stos
loope
sarb
pop
fwait
dec
mov
cmp
cltd
sbb
dec
mov
aad
pushf
mov
cmp
mov
clc
ja
mov
fs
fsubl
add
mov
testb
pop
inc
mov
adc
jb,pn
in
push
fistpll
lods
addr16
aam
mov
dec
icebp
and
outsb
repnz
mov
ds
jno
mov
and
push
cmpsl
loop
fwait
lea
movsb
enter
stos
aad
add
insl
sbb
inc
mov
cmp
push
jo
and
lea
sbb
mov
dec
add
out
dec
in
push
shll
jecxz
mov
loopne
sub
jg
push
sbbl
inc
mov
clc
clc
or
inc
mov
into
mov
ss
icebp
imul
sbb
leave
cmpsb
jecxz
pushf
jo
xchg
clc
dec
mov
decl
sub
or
add
xor
fistpll
in
into
icebp
movsl
test
and
and
decl
aas
mov
es
ljmp
scas
iret
xchg
and
repz
dec
jae
add
add
jg
clc
aaa
rcr
jo
pop
movsbl
xchg
push
pop
jo
fdivr
mov
imul
in
mov
add
hlt
repz
loop
jl
ja
pop
mov
rcl
push
hlt
cmp
shrb
sbb
je
rorb
inc
fbstp
movq
mov
popf
inc
es
inc
lock
std
ja
adc
dec
jae
insb
leave
or
dec
xchg
clc
int3
lret
xchg
mov
add
or
gs
les
dec
cmp
lods
clc
pop
test
fwait
pushf
repnz
repz
pop
ljmp
lcall
les
mov
test
jno
push
cli
pop
inc
jb
out
push
sub
add
mov
orb
sar
sti
mov
mov
pop
jb
and
push
push
clc
fldl
ficomps
xor
mov
mov
sbb
push
jbe
xchg
jl
out
jg
stc
mov
pop
mov
mov
fdivrs
jg
aas
sub
aas
mov
pop
stc
mov
aaa
jb
mov
das
loop
inc
fimull
and
js
popf
and
testb
loop
and
rcrl
inc
mov
push
repnz
loop
cld
add
cmp
push
out
mov
sti
ja
push
cmp
jmp
or
lea
push
inc
cld
out
mov
mov
xchg
test
lods
mov
xchg
addb
jl
in
dec
es
std
aas
loope
and
add
jg
pop
insb
xchg
add
jg
adc
dec
lods
out
push
pop
cld
xchg
cs
xchg
lret
pop
movsb
sti
sbb
mov
sti
pop
mov
xchg
popl
adc
lahf
sti
fildll
fmull
xor
push
jecxz
pop
clc
adc
inc
lcall
ja
jo
xor
cmp
scas
push
lds
enter
in
mov
dec
call
push
push
aad
fstl
cmp
inc
insb
dec
dec
lret
pop
xchg
popa
sbb
out
push
out
imul
mov
xchg
stos
rcl
jmp
lahf
mov
clc
stos
pop
fistpll
sub
adc
push
clc
sub
dec
mov
jae
dec
jns
das
jle
push
push
imul
call
lock
sti
aad
out
int3
inc
inc
popa
mov
cs
sbb
inc
daa
insl
or
cmp
lock
adc
dec
shr
test
sub
pop
and
sub
xchg
xor
cmp
out
or
sbb
or
jl
xchg
add
mov
arpl
pop
push
mov
call
adc
push
or
out
sbb
add
ljmp
mov
push
rcl
dec
sbb
mov
incl
xchg
pop
psrlw
lret
dec
adc
xchg
pop
or
lahf
ror
imul
rorl
mov
mov
pmullw
std
inc
mov
or
adc
adc
rclb
js
and
out
and
lcall
cmc
sbb
out
cmc
adc
add
lret
addr16
and
xchg
jl
testl
mov
push
pop
pop
out
lods
inc
in
or
and
out
sti
fdivr
sar
mov
jne
loope
out
sub
sbb
inc
jg
pop
pop
cmp
sub
insb
loop
aas
test
fdiv
js
mov
sbb
gs
sbb
mov
inc
pop
imul
and
nop
sbb
hlt
push
add
mov
jecxz
icebp
loope
test
pop
mov
or
inc
mov
icebp
imul
nop
clc
adc
lahf
mov
xchg
arpl
cmp
sub
cs
sti
jae
movsl
push
sti
lmsw
mov
repz
fdivr
fdiv
test
ljmp
out
inc
iret
mov
insl
mov
dec
jp
inc
stos
mov
mov
lock
test
mov
push
into
cmpsl
push
rep
push
dec
xor
jmp
push
jbe
sub
dec
add
push
cld
aam
test
lods
mov
add
cmp
inc
xor
pop
mov
jbe
dec
jno
pop
cltd
daa
dec
xchg
sbb
lock
aaa
call
add
int3
js
stos
loopne
insb
pushf
daa
into
cwtl
nop
push
icebp
lahf
cld
mov
sbb
mov
mov
push
das
mov
inc
daa
js
push
das
jae
pop
push
cmc
loopne
lock
jge
fstp
insl
int
je
pusha
aas
lret
xchg
push
adc
test
add
dec
dec
test
icebp
pop
mov
ljmp
int
pushf
out
cmc
fistpll
pop
idivl
sub
mov
ja
add
clc
out
add
sub
mov
test
aas
lds
mov
mov
jo
mov
hlt
es
nop
add
lock
inc
sbb
aad
push
out
jae
enter
sub
adc
mov
and
ret
stc
sbb
adc
mov
push
ret
sbb
shl
mov
mov
std
dec
les
cmp
mov
jne
cld
xchg
in
xchg
pop
lahf
mov
cli
mov
push
imul
jnp
or
cmpsl
sbb
in
insl
mov
cltd
cmp
mov
dec
cli
and
mov
cmc
addr16
mov
dec
pusha
cli
mov
fdivr
adc
push
lret
cmpl
imul
negb
cmp
je
sub
sbb
sub
mov
iret
xlat
mov
push
bound
ja
push
pushf
cmp
movsl
and
std
add
lea
arpl
pop
mov
adc
push
cmpsl
mov
imul
and
rorl
adc
xchg
push
popa
and
jmp
mov
cmp
cmpsb
jo
stos
push
scas
pop
loop
cli
fistpll
jno
jne
das
fwait
loopne
push
aas
ret
sub
fdiv
pusha
punpckhwd
fistpll
pusha
mov
aaa
clc
outsl
cmp
hlt
rcrl
ret
inc
ret
pushf
stos
mov
and
call
int3
push
iret
ficoms
dec
scas
ret
in
js
sub
imul
lods
add
jg
mov
scas
aas
das
cmp
rol
dec
jne
ja
and
ja
mov
add
mov
fcoml
imul
test
fildll
test
clc
sbb
ret
movsl
sbb
test
loope
mov
fwait
dec
dec
push
or
mov
fidivrs
incl
lea
cmp
add
pop
scas
push
ljmp
adc
out
push
jmp
mov
jg
push
mov
mov
fcompl
and
pop
mov
popf
cmp
add
dec
and
fstps
adc
lcall
hlt
shll
cmc
and
jge
and
jno
js
add
fdivr
cmc
daa
adc
mov
adc
xchg
ja
aam
dec
pusha
ret
testb
push
ljmp
inc
pop
bsf
push
roll
aad
aas
mov
je
imul
clc
test
lods
dec
push
dec
and
jb
cwtl
jg
jle
jmp
and
mov
xchg
sub
pop
add
aad
xor
adc
mov
sbb
call
cli
js
aas
mov
lret
scas
xor
cmp
jg
loope
cmp
mov
pop
jne
adc
roll
xor
xchg
mov
xchg
stos
or
inc
lock
fcomp
add
gs
dec
js
cmp
xlat
and
mov
jns
and
rcl
cmp
cmp
inc
popf
or
adc
out
ds
pop
ret
pcmpgtw
push
shrb
jnp
in
and
xor
add
rdtsc
clc
in
stos
mov
sub
out
mov
call
push
jge
lret
xchg
mov
out
std
int3
jecxz
mov
dec
pop
ja
xchg
or
xor
decl
scas
cmp
add
cmc
int3
shl
cmp
rcrl
ret
stc
mov
daa
adc
pop
cmp
repz
int3
aad
sbb
stc
fdivr
outsb
add
test
sbbb
adc
xor
ljmp
pop
loop
inc
adc
daa
mov
xchg
mov
add
mov
daa
cld
bound
call
stc
in
xchg
pop
popf
jge
jo,pt
stos
xchg
in
mov
aas
je
push
pop
data16
loop
cmpl
mov
sbb
fisubs
inc
in
mov
out
fsincos
icebp
std
xor
orl
or
cmp
pop
lret
stos
insl
int
dec
mov
mov
push
jb
out
clc
aas
les
mov
dec
push
lods
movsb
out
xor
mov
call
xchg
arpl
aad
inc
cld
pop
out
inc
cmp
jno
mov
lods
scas
cld
repnz
lahf
jne
inc
dec
cmpsl
mov
inc
inc
insl
mov
ret
push
aas
push
icebp
jbe
add
ss
xorl
jg
test
xchg
std
xchg
scas
mov
xchg
cmpl
cmp
fstpl
jbe
lcall
pusha
lea
pop
fs
jno
add
cmp
push
add
cmc
jg
jmp
fmulp
imul
push
sbb
cmpsl
pop
mov
aad
dec
inc
dec
leave
loope
sti
out
repnz
mov
aaa
inc
mov
jbe
jmp
mov
mov
fs
cmp
mov
loopne
cmp
mov
adc
ljmp
mov
rorb
inc
pushf
add
incl
push
loope
inc
scas
adc
jg
jg
cmp
dec
pushf
push
dec
mov
inc
gs
pusha
xlat
test
dec
mov
clc
scas
leave
cltd
cld
in
mov
icebp
xorb
cwtl
mov
adc
or
xorb
add
add
add
scas
mov
test
jno
add
mov
push
rcll
adc
xor
sti
mov
jno
pop
push
xor
shll
rcll
add
fstl
add
push
and
inc
push
es
adc
push
in
andl
js
mov
loopne
in
in
outsb
mov
inc
push
scas
clc
adc
pop
scas
sbb
xor
movsl
or
icebp
xchg
adc
inc
sub
add
jnp
jmp
mov
mov
sbb
dec
fcmovnu
jle
cmp
mov
pop
sbb
jo
dec
leave
xchg
data16
xor
and
add
jb
push
xchg
adc
ljmp
ljmp
push
sbbb
roll
inc
pop
push
jns
pop
or
jmp
push
daa
jno
push
pusha
add
adc
pop
jnp
mov
dec
out
or
cmp
cmc
mov
mov
mov
xchg
add
or
mov
mov
es
mov
iretw
pop
jno
jb
mov
lret
or
shrl
in
add
inc
inc
inc
push
xchg
cmp
popa
mov
xchg
out
ss
loopne
cmp
inc
inc
jmp
mov
cwtl
add
or
adc
rcrl
enter
pusha
and
adc
or
xchg
mov
inc
xor
mov
jno
cmpsb
xor
push
jo
hlt
fwait
and
dec
aas
pop
fdivr
outsl
add
push
out
stos
sbb
sub
mov
inc
push
sub
mov
xor
jno
shrl
inc
jno
add
push
outsb
jae
mov
sub
rcrb
test
cltd
mov
xor
sbb
aas
repz
les
mov
dec
int
aad
or
sbb
xchg
jns
jp
cmp
sbb
or
daa
cmp
xor
push
jle
comiss
mov
xor
xchg
push
mov
sub
push
inc
push
imul
add
or
and
sbb
rolb
inc
mov
xor
pop
mov
cmp
aad
cmp
ja
inc
mov
repnz
push
xchg
mov
pop
jl
mov
imul
cmp
dec
push
into
sbb
jnp
push
pop
add
imulb
cwtl
sub
dec
aas
push
adc
add
push
xor
jb
insl
push
cmp
pop
xlat
dec
push
mov
rcl
inc
jno
sbbb
push
sub
pop
repnz
cmpsl
or
push
add
mov
dec
pop
arpl
scas
jmp
sbb
loopne
cs
sbb
clc
mov
push
and
pop
push
sbb
adc
imul
ss
mov
xor
imul
sbb
and
gs
mov
mov
inc
or
or
insl
inc
push
pop
inc
and
clc
loope
xor
inc
pushl
sub
mov
inc
outsb
clc
push
test
push
bound
call
mov
xlat
decb
jmp
fidivrl
inc
mov
insl
pop
in
xor
fcomps
mov
push
dec
adc
push
dec
add
fidivrs
mov
adc
arpl
in
idivl
mov
mov
adc
mov
push
test
jle
add
or
ljmp
add
inc
add
sub
in
aam
adc
cli
stos
mov
pop
mov
push
daa
xor
cmp
cld
push
lods
push
add
jnp
or
xchg
out
int3
sub
add
push
pop
cwtl
and
sbb
dec
cli
or
push
dec
or
mov
cmc
add
cwtl
mov
shl
mov
lret
cmp
xchg
test
mov
mov
mov
movsb
pusha
sbb
sbb
sbb
in
aad
stos
sub
inc
inc
enter
subl
mov
mov
sub
adc
add
push
inc
data16
push
push
push
shrl
push
push
pop
pop
adc
fs
add
add
sbb
or
test
pop
ret
jne
xchg
rcrl
lods
loope
test
jo
cmp
jo
adc
pop
mov
adc
out
inc
aam
xorb
sbb
and
inc
popa
push
push
cltd
dec
add
and
cmpsl
mov
adc
fisubl
stc
jp
push
hlt
inc
xchg
leave
jne
mov
adc
xchg
ret
push
int3
jo
push
call
ljmp
cltd
and
push
mov
push
fildl
dec
push
adcl
rcrb
or
enter
mov
add
jecxz
fstl
lcall
xchg
add
cmp
mov
int
sarb
lret
and
pop
scas
or
andl
xor
daa
pop
es
pextrw
insb
mov
xor
add
push
shll
sbb
mov
dec
loope
cltd
sub
sub
popf
stos
jb
movsb
outsl
pushf
mov
mov
pop
xor
std
mov
hlt
pop
ljmp
sub
sarl
sbb
fcomp
add
test
mov
adc
pop
or
mov
xchg
or
jne
mov
or
pushf
mov
add
adc
stc
adc
icebp
mov
add
push
into
in
and
inc
ss
outsb
pusha
mov
push
mov
mov
sbb
shll
or
add
xor
lahf
sahf
push
sarb
sub
push
adc
xor
cmc
orl
add
mov
ljmp
pop
movsb
sbb
sbb
loope
roll
repz
inc
in
rcll
or
mov
pushf
orl
inc
pop
scas
or
mov
xchg
and
add
inc
add
mov
sbb
or
jo
pop
pop
int
aaa
stos
cmp
test
or
jmp
add
mov
mov
sub
add
pop
xchg
cmp
outsl
mov
add
or
add
mov
fisubrl
scas
mov
push
cmpsb
mov
adc
add
sarl
out
dec
or
sarb
inc
xchg
insl
mov
mov
in
subl
aam
push
call
add
inc
push
dec
inc
cmp
cmp
mov
dec
dec
cmpsb
sub
dec
add
dec
xchg
das
xor
mov
scas
pop
scas
lods
cltd
mov
jo
or
pop
mov
dec
lret
out
mov
outsb
lcall
movsb
push
jo
enter
jb
pop
jnp
aaa
push
cltd
push
and
mov
mov
pop
add
push
rorb
out
and
into
loope
insl
add
shrb
pop
dec
andb
jb
fsub
push
adc
stos
sub
mov
pushw
lds
dec
mov
jg
jp
fcmovnu
in
outsl
push
leave
mov
dec
outsb
inc
sub
mov
inc
in
mov
popa
sbb
outsb
mov
arpl
testl
push
push
ret
pop
cmp
leave
or
pop
imul
sbb
lcall
gs
sub
push
and
repz
pop
xor
lret
add
call
push
jae
push
add
push
stc
popa
cmpsb
jns
or
mov
xor
and
xchg
dec
jne
add
or
inc
jge
retw
loop
cmp
sbb
int3
jle
mov
loopne
and
test
test
push
add
lods
jae
push
pop
scas
add
sarb
mov
add
push
test
mov
test
pop
mov
xchg
xlat
mov
pop
subb
movsb
or
int
add
cwtl
jmp
aad
lock
ret
inc
inc
push
dec
mov
movsb
jno
imul
mov
cmpsb
push
jae
aas
std
push
cvtpi2ps
adc
cmc
call
pushf
xor
andl
loopne
jo
xlat
negl
mov
mov
pop
shll
sbb
mov
pushf
mov
pusha
sbbl
dec
es
rclb
add
jb
bound
push
stos
nop
int
jb
out
test
sub
adc
pop
xor
push
jne
add
push
jne
pop
sub
adc
xor
lcall
ss
stos
clc
and
jns
out
das
jle
push
jo
or
jae
xor
in
sbbl
sbb
inc
mov
ret
sbb
popf
add
push
rcll
push
xor
addl
add
insb
fdivrl
mov
sti
mov
sbb
mov
scas
mov
sbb
jae
ja
pop
popa
neg
mov
pop
sub
sahf
sbb
push
push
lea
jne
or
sub
add
inc
sbb
xchg
jmp
or
or
enter
outsl
fwait
jecxz
xchg
rolb
or
fwait
dec
roll
pop
xlat
or
adc
popa
mov
stos
testl
addl
lcall
in
push
adc
imul
or
aad
pop
jl
pop
and
scas
stos
lock
and
push
xor
mov
mov
pop
aad
and
push
movsb
sysret
addr16
xchg
mov
call
mov
sbb
mov
icebp
add
mov
cli
push
xor
mov
add
leave
inc
mov
jns
mov
mov
pop
je
jno
or
xor
adc
mov
imul
or
lcall
mov
jp
aam
push
add
jae
call
sbb
sbb
xchg
loope
dec
mov
shll
int
push
push
insb
inc
or
sbb
out
pop
stos
nop
pushf
or
and
or
mov
inc
jmp
fcoml
add
add
loopne
push
pushl
sub
pop
ret
ljmp
rorb
jns
mov
inc
mov
outsl
sbb
adc
add
sbb
push
clc
sbb
jl
data16
or
in
mov
and
push
jae
and
stc
push
stos
pop
into
push
scas
xchg
inc
add
adc
mov
pop
jo
push
pop
sub
sbb
insl
and
sub
inc
xor
adc
enter
or
aam
push
xor
clc
pop
jo
push
xor
add
jb
test
mov
sbb
lock
xor
mov
push
inc
mov
cmp
lock
sahf
ret
jne
mov
mov
pop
mov
inc
les
lock
cli
ficompl
jb
rolw
pop
shlb
add
pushf
push
inc
and
or
add
ljmp
and
push
inc
adc
inc
cmpsb
push
dec
stos
jmp
stos
add
push
xor
jae
jp
or
cmp
xor
popa
cmp
jp
push
mov
mov
imul
inc
jae
rcrb
jns
mov
in
ja
push
xchg
push
or
push
cltd
divb
sub
stos
add
cmp
jge
add
ja
mov
aad
pop
divb
shlb
test
xor
mov
pushf
stos
les
cmpsl
push
es
fwait
popa
dec
or
adc
xor
adc
adc
sbb
and
mov
ss
loopne
add
int
mov
leave
sub
push
add
add
sbb
jecxz
jg
cmpb
testl
mov
and
lret
into
mov
pop
push
rcrl
cwtl
sub
loopne
add
push
mov
mov
and
sub
cli
cmp
int
nop
sub
mov
mov
push
jo
in
shrb
movsl
or
lret
loope
and
push
push
xchg
imul
sahf
pop
add
sbb
and
push
add
cmp
addr16
push
out
pusha
js
adc
add
dec
or
subb
nop
add
xchg
pop
test
or
inc
sub
push
dec
scas
push
or
into
inc
add
add
incl
pop
daa
dec
cmp
inc
pop
test
or
jo
mov
push
mov
pop
push
lcall
xchg
jl
lds
inc
or
push
xchg
pop
cmp
sysexit
out
inc
loope
jmp
int
adc
popa
fsubp
fisubl
sbb
xor
push
mov
movsb
jle
push
pop
push
sarb
push
mov
jmp
push
loopne
cmp
scas
sub
cmovle
out
jb
imul
xchg
push
push
aam
mov
inc
jne
mov
jne
or
in
push
push
in
dec
mov
rcrb
jl
xchg
xor
push
and
xor
dec
add
jno
push
ja
orb
enter
popf
sarb
rcrb
push
les
add
outsl
mov
fisttps
lods
ljmp
sbb
adc
out
cmpb
pop
test
loope
jb
sub
or
je
outsl
mov
leave
insl
das
xchg
movsb
adc
inc
leave
xchg
cwtl
mov
or
ret
in
cmp
gs
xchg
push
pop
xor
pop
adc
jno
push
inc
xor
xor
mov
adc
subb
jnp
int
add
lret
inc
jae
in
jp
int3
aaa
pop
fcmovne
test
mov
jae
xchg
jge
cltd
dec
dec
cmp
pushf
dec
cmpsb
call
xor
loopne
inc
sub
out
dec
push
icebp
adc
push
mov
cltd
and
mov
ljmp
rcrl
popa
bound
test
dec
sbb
sbb
jnp
mov
xor
jae
scas
mov
sbb
pop
inc
mov
subl
jae
cmp
adc
jb
cmp
mov
add
push
xchg
daa
sbb
stos
mov
xor
inc
out
mov
pop
sub
testl
mov
lret
xor
lcall
into
sbb
je
inc
cmp
loope
pop
push
push
push
pop
mov
adc
cmpsl
xlat
test
out
push
add
and
mov
int
xchg
push
stos
pushf
and
xor
dec
xchg
push
shl
icebp
adc
adc
sbb
xor
mov
in
loopne
fcompl
stos
sub
cmp
push
std
aaa
shrb
add
dec
jle
mov
mov
cld
inc
or
dec
xor
jno
popf
push
daa
cmpb
pop
enter
sbbb
or
mov
lods
or
cld
pop
mov
lock
mov
cmp
push
cmp
daa
xor
and
aas
in
sbb
pop
jns
rolb
movsb
pop
fiadds
push
sbb
mov
adc
sub
xchg
and
in
and
jae
shlb
lcall
aam
push
into
jmp
jbe
addr16
jo
lret
xor
adc
push
xor
mov
add
mov
adc
dec
sbb
mov
js
mov
sbb
mov
scas
pop
add
push
or
jae
rcl
push
imul
cmp
inc
cmpl
enter
mov
inc
sbb
lds
aam
jnp
or
push
cmpsb
lea
xor
adc
pop
cltd
pop
ljmp
push
push
jo
push
mov
xchg
leave
rcrl
xchg
rolb
xor
inc
mov
push
aam
fisubl
sub
inc
jl
inc
add
shll
xchg
sub
inc
push
and
stos
adc
cmp
or
int
filds
mov
mov
xchg
sbb
sub
mov
xor
add
or
mov
mov
movsb
dec
cmpb
mov
test
mov
into
add
sbb
sbb
mov
adc
movb
adc
cmpsb
push
out
xchg
mov
sub
les
cld
fcmovbe
push
xor
cmpl
enter
inc
fisttps
mov
faddp
mov
lock
push
out
mov
aam
mov
xchg
adc
gs
repz
pop
lret
push
js
xchg
push
dec
test
lcall
mov
xlat
and
test
mov
xchg
cmp
pop
push
je
push
dec
mov
and
mov
dec
cwtl
and
push
xchg
andl
pop
jo
pop
lods
jp
mov
push
jo
xor
cltd
mov
inc
add
ljmp
adc
outsb
jmp
push
sub
pop
jo
push
xor
xor
dec
sbb
mov
xlat
sbb
jg
xchg
lods
sbb
mov
test
cmp
mov
pop
loop
imul
push
adc
mov
pop
jae
push
add
adc
xchg
int
test
xor
jecxz
lcall
data16
in
jl
cltd
jb
ss
dec
into
lds
jmp
fs
jne
sbb
or
js
push
sub
mov
lret
sbb
dec
adc
fsub
clc
push
andl
loopne
or
or
sbb
jl
inc
in
sub
and
sahf
aad
push
push
lcall
sbb
stos
rcll
xchg
sbb
faddl
stos
mov
mov
rolb
pop
mov
sbb
add
loop
int
stos
sbb
xor
out
jo
push
add
int
cmp
dec
lea
imul
sti
mov
jb
notb
add
dec
push
out
mov
mov
das
pop
jo
lock
jge
push
push
mov
push
adc
in
pop
dec
push
into
insl
das
sbb
insl
imul
cmp
orl
mov
nop
jo
mov
pop
pop
cmp
ror
xchg
or
xchg
std
sub
xor
dec
repnz
roll
sbb
push
or
movsl
sub
repnz
aam
jge
push
lock
gs
out
push
jo
xchg
fadds
imul
cmpb
or
mov
adc
es
outsb
fisubl
push
add
sbb
aam
xor
xchg
mov
fwait
ljmp
mov
pusha
and
xor
je
mov
in
es
pop
xchg
adc
pop
or
push
mov
adc
xchg
loop
ret
mov
add
aaa
jo
pop
push
add
test
lea
in
sub
inc
dec
xchg
xlat
push
dec
shll
pop
cmp
inc
jae
push
sub
mov
stos
pushf
lret
subb
and
rcrl
cmp
sub
outsl
cmpsb
jmp
sub
mov
ret
xchg
pop
sub
xor
add
pop
jmp
mov
pusha
jae
in
push
xor
fcmovb
sbb
fs
cmp
mov
xor
aad
xchg
ret
cmp
mov
les
cli
idivb
addr16
hlt
mov
or
ljmp
nop
aaa
scas
test
fsub
or
js
notb
or
cmp
dec
cmp
sub
sub
lret
xor
fldenv
add
sub
pop
mov
add
mov
jno
push
int
mov
jns
call
add
inc
cmp
test
add
sub
lcall
loop
jb
push
and
movsl
cmp
push
and
ss
or
inc
and
xor
add
lret
aad
inc
cmp
xor
jns
push
out
stos
stos
dec
int
mov
enter
jns
or
mov
xor
nop
push
shlb
dec
dec
loopne
pop
out
sbb
jne
xor
frstor
mov
mov
cmp
push
jl
sub
or
int3
push
adc
leave
xor
pop
adc
xchg
inc
mov
mov
test
sub
push
xchg
rolb
cmpsb
add
mov
mov
or
dec
xor
mov
scas
int
int
xorb
xchg
push
sub
mov
leave
mov
add
xchg
dec
inc
sbb
lock
cmp
test
das
mov
and
test
mov
and
mov
xchg
cmp
orb
sub
cmpsb
cmpb
add
cld
push
stc
sub
adc
push
outsb
sbb
ds
cmpsb
dec
fs
ficoml
and
outsl
cli
ss
movsl
jmp
loop
mov
fimull
or
xchg
push
jg
mov
sbb
inc
mov
lret
xchg
lret
adc
push
inc
mov
movsl
xchg
pop
push
xchg
or
xor
sbb
mov
into
cmc
add
cmp
mov
aam
ret
test
push
lcall
dec
arpl
test
aas
pop
dec
aam
cltd
push
in
sub
add
pop
in
push
ficomps
test
out
ror
jmp
mov
inc
cmp
popa
mov
popa
test
mov
jl
call
pusha
add
pop
loope
adc
ret
mov
and
sbb
pop
mov
or
cltd
movl
sub
mov
pushf
mov
popa
jo
mov
fidivs
adc
loopne
orl
or
push
movsb
sbb
jne
lret
lea
jb
inc
cli
rcll
lcall
test
mov
mov
sbb
xchg
shll
ja
rcrb
clc
int
ret
mov
aaa
lret
pop
lea
fs
test
les
shll
push
jle
movsb
push
xchg
inc
adc
lret
push
add
gs
inc
dec
sbb
nop
stos
fidivrs
mov
cmpsl
push
sbb
xchg
aad
imull
test
pop
les
dec
push
xchg
xchg
push
adc
scas
push
jo
sbb
cld
fimull
inc
inc
mov
and
cs
lcall
jecxz
in
and
lret
xlat
movsb
out
xchg
xor
aas
sbb
scas
shll
jae
addr16
jecxz
sbbl
leave
push
in
push
jecxz
data16
xor
in
sub
in
inc
call
shrb
jg
adc
push
das
aad
loopne
and
push
sub
xchg
jae
lret
adc
jo
adc
fildll
jo
xchg
push
jnp
or
sbb
sbb
add
or
sub
mov
push
movsl
pop
lret
outsb
adc
iret
push
lds
aad
push
cmpsb
aam
pop
sub
mov
jo
stos
push
int
sub
imulb
imul
jo
push
push
mov
test
and
push
inc
pusha
ljmp
cmp
mov
inc
pop
imul
repnz
insb
add
scas
dec
out
shll
adc
jno
or
stos
sbb
jl
pop
into
aam
loope
stos
les
jle
push
dec
subl
inc
inc
mov
jns
loope
inc
xor
push
cmp
daa
lock
push
das
add
fxch
lea
js
xor
andl
sub
fisubl
xchg
sti
push
lds
test
pop
dec
sbb
movsb
pushl
inc
mov
lods
movsb
push
mov
jl
pop
scas
sbb
addr16
repz
push
movsl
add
aad
mov
jae
movsl
mov
outsb
das
push
sbb
insl
pop
jmp
jl
pop
mov
jl
jl
cmpsl
loopne
imul
mov
sub
lea
inc
cmpsb
out
ret
int3
lea
push
sub
ffreep
push
add
stos
sbb
pop
jl
mov
mov
ret
or
xor
mov
shl
adc
cmp
test
in
push
add
cmp
adc
adc
add
jbe
shll
xor
jnp
sub
pop
inc
add
outsl
int3
pop
push
sub
cwtl
push
incl
pushf
orl
lret
lahf
loope
push
mov
jb
or
daa
jl
bound
negl
or
push
jo
mov
mov
xor
and
loope
das
nop
adcl
test
lods
push
xchg
or
mov
call
dec
jg
int
sub
xor
pop
cmp
std
mov
push
int
push
pop
push
fstps
test
pop
jl
pop
loope
adc
jbe
adc
test
cltd
add
rcll
add
mov
mov
xchg
sbb
les
pusha
rclb
or
movsb
test
pop
int
mov
xchg
call
pushf
push
popf
stc
add
cwtl
ret
and
mov
jno
dec
repnz
push
loopne
jecxz
aaa
dec
push
movnti
inc
cwtl
sub
or
push
mov
mov
cmp
mov
pop
cwtl
es
and
aam
stos
std
cwtl
cld
dec
cld
lahf
or
jns
xor
testb
or
push
push
adc
hlt
and
lret
jno
subl
mov
les
sbb
out
dec
loope
xchg
insb
fmul
cmpsb
test
aad
mov
mov
loop
inc
sbb
or
inc
movsb
or
cltd
enter
jmp
jno
sub
mov
push
sbb
imul
divb
cmp
xchg
jo
repz
or
add
scas
add
dec
enter
mov
jmp
adc
je
mov
xor
rcrl
and
push
jecxz
aad
mov
cmova
popa
lret
adc
enter
mov
dec
es
stos
shll
sarl
jp
aas
sbb
jno
jecxz
mov
cmp
dec
jo
jb
push
jmp
sbb
push
addr16
adc
sub
jns
xor
and
lret
pop
iret
imul
outsl
jg
dec
cltd
or
mov
adc
push
or
pusha
lcall
add
push
cmp
cmp
xor
xchg
xor
add
sahf
popf
lcall
push
dec
scas
sbb
loope
jae
imul
int
xor
enter
add
or
cmp
jne
loopne
xchg
push
fsub
arpl
mov
mov
test
jbe
sbb
cmpsb
loopne
lds
std
mov
push
xchg
lcall
ret
test
cwtl
sbb
rclb
jmp
and
xor
sbb
rcrb
sub
aam
jb
int
push
sub
andl
add
out
push
or
das
ret
push
inc
mov
lahf
xor
sub
in
dec
daa
stos
push
inc
cmp
xchg
add
pop
rcl
stos
bound
std
int
add
push
jae
jbe
inc
xchg
mov
mov
sub
arpl
int
int
add
subl
mov
push
test
mov
mov
push
pop
xchg
movl
es
das
adc
pop
sub
push
pop
scas
inc
sbb
ja
ljmp
imul
xchg
mov
dec
add
adc
lretw
arpl
cltd
pop
push
cmp
retw
sub
test
mov
out
popf
push
inc
add
into
xchg
icebp
stos
pusha
sub
pop
and
and
adc
ljmp
fnstenv
xor
cs
cld
pop
mov
or
in
aam
popf
mov
in
subb
dec
popf
lock
and
jb
or
leave
rclb
shll
loopne
push
or
std
xchg
or
inc
ljmp
mov
fwait
cs
adc
push
cmpsb
xchg
ret
loope
xchg
in
dec
sub
sbb
in
push
push
cmpsl
clc
std
push
jmp
loop
cmpl
in
mov
sbb
decl
lret
mov
pop
shlb
cmp
hlt
addl
xor
ljmp
gs
xchg
test
jmp
mov
inc
test
xor
mov
rclb
repz
test
scas
push
cmp
cwtl
fldcw
movl
leave
subb
cmpb
sbb
sub
in
adc
push
push
inc
push
stos
out
xor
adc
adc
push
mov
dec
pusha
xor
insb
test
popa
inc
loop
in
xchg
sbb
loopne
mov
push
loopne
in
lea
orb
pop
out
xor
xchg
push
pop
dec
and
movsl
outsl
xor
push
add
sbb
mov
dec
inc
loopne
arpl
jmp
adc
and
imul
push
dec
sub
add
add
sbb
ret
das
adc
loope
lock
inc
sbb
push
test
or
or
les
lcall
sub
adc
inc
inc
stos
lret
rcr
push
mov
xchg
mov
mov
out
jo
xor
data16
or
pop
sub
sbb
out
mov
sbb
xchg
lds
lcall
cmp
mov
cwtl
leave
inc
scas
test
sbb
push
out
sbbl
js
movsb
mov
cmp
xor
in
loop
lret
inc
testb
xlat
inc
sbb
adc
cmp
xchg
movsb
aaa
lret
inc
mov
ss
and
mov
mov
addl
lret
in
push
aas
xor
sbb
push
push
cwtl
cmp
movsb
fisubl
lods
jl
imul
scas
andb
stos
out
in
add
xor
mov
pop
ret
dec
push
popa
fcomps
je
mov
jb
mov
dec
aam
fadds
adcb
or
lret
add
test
sarl
or
stc
dec
xlat
or
mov
xor
lcall
lods
loope
or
inc
or
aad
and
jnp
rcr
adc
push
pop
jbe
mov
mov
iret
scas
adc
sbb
cmp
or
push
mov
pop
cmp
jb
fadds
loope
push
outsl
xor
pop
cwtl
jb
es
adc
jge
jo
jo
clts
rcrb
and
je
in
or
test
fs
hlt
rolb
or
jp
push
adc
mov
stc
aam
mov
push
daa
cmp
push
adc
cmp
icebp
xchg
adc
or
adc
add
cli
fcompl
sub
inc
and
fwait
add
cmc
xchg
sbb
lcall
or
stos
cmpsb
mov
push
add
ret
in
ja
sbb
test
dec
fs
jae
mov
push
sub
outsl
dec
push
aas
mov
dec
fsts
sub
jecxz
call
mov
xchg
stos
dec
push
loopne
fcoml
stos
xchg
clc
daa
mov
push
insl
add
push
dec
mov
or
push
add
push
ja
xor
or
icebp
dec
cli
aas
mov
push
push
ss
pop
pushf
outsl
sub
or
das
cmp
pop
sub
sub
fsubs
add
or
aad
out
mov
or
popl
ss
sub
sub
push
sbb
hlt
pop
scas
sbb
scas
pusha
jmp
sub
pushf
jo
jo
xor
or
mov
xor
stos
dec
mov
sub
mov
and
mov
add
inc
xor
mov
pop
jno
sbb
mov
xchg
push
dec
cmp
leave
pop
imul
popa
pop
popa
push
sub
das
subl
popa
mov
pop
and
cmpsb
gs
imul
lahf
scas
xchg
jge
push
sbb
jb
iret
mov
mov
daa
mov
stos
je
xlat
pop
jnp
outsl
mov
ret
loope
in
dec
mov
xor
pop
mov
mov
les
lret
push
int
andb
jns
iret
stos
xor
fidivs
ret
jno
jge
sub
cmpsl
jmp
push
sbb
fdivrl
orb
or
mov
jnp
sub
jae
xchg
enter
insb
and
fwait
push
inc
xor
pop
sbb
loope
idivb
movsb
mov
xor
mov
in
sar
mov
inc
mov
push
dec
sbb
and
inc
mov
and
dec
jb
xchg
jp
push
and
adc
sub
add
sbb
or
out
popf
push
and
clc
enter
sbb
stos
jp
mov
add
shlb
dec
in
mov
add
add
test
jo
mov
pop
add
jnp
inc
or
scas
xor
clc
pushf
xchg
ret
jno
gs
push
add
sub
fwait
add
pop
addr16
fwait
test
scas
pop
xorb
sbbl
lock
mov
xchg
sbb
push
loopne,pt
or
cs
and
jno
add
xor
cmp
xorl
sbb
iret
sbb
adc
cmpl
mov
and
ret
gs
inc
inc
enter
mov
rcl
sub
sarl
xlat
xchg
sub
mov
sbb
pop
movsl
mov
jae
push
jno
fsts
ret
push
push
pop
mov
or
push
or
test
aas
cwtl
jle
push
or
mov
adc
repz
dec
sbb
cmc
add
movsb
ja
enter
mov
daa
mov
sbb
or
add
decl
mov
add
popa
sbb
xchg
or
push
cmpsb
out
xchg
sbb
cwtl
shrl
jae
stos
scas
lcall
sbb
inc
or
cmp
mov
push
pop
cmp
jo
daa
stos
jae
scas
adc
jno
jbe
mov
mov
mov
cmp
into
test
or
inc
push
test
pop
xchg
mov
nop
push
stos
cltd
sbb
push
adc
cltd
stos
jo
hlt
xchg
ja
popa
and
jnp
addb
xchg
or
push
addr16
test
cwtl
add
js
into
fwait
stos
cli
in
mov
push
sub
adc
adc
idiv
add
dec
sub
inc
dec
adc
mov
jne
mov
sub
sti
sub
pop
pop
incl
cmpsb
mov
cmp
push
roll
or
xor
in
andb
mov
imul
cmp
aad
adc
xor
pop
xor
pop
pop
imul
in
int
cmpsl
pop
pop
cmpsl
stos
mov
or
push
pop
cltd
fucomi
dec
adc
xor
push
data16
add
shlb
rolb
push
mov
orb
das
cli
mov
cmp
insl
sbb
orl
push
pop
cmc
cmp
fwait
fstl
sbb
and
aam
mov
ret
outsl
mov
ja
stos
and
into
jne
shll
and
xchg
xor
push
pop
mov
lret
sbb
push
lock
mov
rclb
rclb
popa
or
ret
add
in
pop
dec
inc
imul
iret
mov
loopne
add
mov
push
add
scas
push
int3
sub
inc
lret
sbb
inc
loope
cmp
push
mov
sbb
in
in
int
jb
sarb
dec
gs
dec
arpl
mov
sbb
jb
and
rclb
pushf
xor
rolb
jl
inc
rcl
add
push
fnstsw
mov
test
adc
add
mov
dec
adc
dec
in
pop
xchg
int
adc
jo
jo
mov
add
idivl
pushl
in
fs
jo
test
xor
ret
std
clc
sbb
bound
jle
push
dec
sub
add
in
retw
in
mov
clc
push
add
adc
sbb
adc
filds
adc
push
mov
push
push
test
push
mov
addb
dec
mov
ss
sbb
cltd
sub
push
pushf
outsl
shlb
push
popa
stos
add
fidivrs
repz
dec
outsl
test
cmp
adc
scas
test
mov
in
cwtl
inc
fisubrs
add
sub
push
sub
sbb
mov
and
add
cmp
cmp
sbb
adc
push
mov
xchg
nop
or
sbb
add
pop
inc
cld
push
cmp
and
lahf
mov
pop
add
lcall
xchg
movsb
stos
sbb
in
stos
pop
mov
andl
sbb
jnp
sbb
es
rorl
mov
jne
and
rorl
push
or
mov
int
or
adc
adc
cmp
movsl
mov
cmp
inc
imul
pop
jno
xchg
loope
push
mov
outsl
xor
aad
and
mov
cmpsl
sbb
fwait
xor
add
sub
ja
inc
or
pop
loope
push
inc
jae
ljmp
mov
dec
mov
js
nop
stos
mov
les
add
adc
or
mov
push
pop
int
inc
loope
xchg
stos
pop
sbb
test
fstps
jb
cwtl
dec
imul
decl
xchg
movsb
adcl
add
call
push
sbb
mov
cmpsb
dec
push
fmul
pop
ss
sub
movsb
push
add
stos
mov
push
gs
push
cmp
xchg
outsl
dec
fildl
add
jne
push
mov
jbe
add
lcall
adc
aas
lret
pop
sub
jo
xor
or
jb
mov
faddl
inc
add
popa
mov
xchg
lret
pop
cmp
sbb
pop
sarl
sbb
inc
das
push
lods
xor
pop
sub
cmp
mov
loope
das
mov
mov
jge
pop
subl
xchg
add
aas
mov
dec
mov
jae
push
sub
inc
into
adc
in
ret
adc
pushf
dec
xabort
push
xchg
lcall
cmp
and
cmpsb
adc
dec
mov
mov
rcrl
jo
fldenv
cmp
add
and
push
stc
mov
jae
push
mov
ret
xchg
mov
xchg
xor
in
adc
aam
cld
adc
xor
cs
std
dec
popf
sbb
shrl
cs
jne
add
dec
gs
pop
inc
movsl
push
cmpsb
out
push
sub
add
add
mov
mov
ret
sbb
push
adc
cmp
jno
mov
xlat
aam
cmp
add
pop
lods
pusha
movsb
aaa
das
into
subl
mov
aam
mov
add
pop
nop
mov
push
dec
and
ret
add
pop
jecxz
bound
cmp
sti
and
add
or
pop
mov
mov
shlb
cmp
faddl
mov
xorb
inc
popa
jae
jnp
ss
add
dec
sub
loope,pt
mov
sbb
fisubl
lcall
dec
test
stos
jo
xchg
lods
lret
inc
int
sbb
jp
je
mov
inc
addb
pop
xchg
mov
push
mov
dec
int
xor
lods
inc
movl
cwtl
pop
mov
pop
adc
jo
xchg
mov
push
das
mov
mov
mov
jae
mov
lret
cmp
mov
cmc
scas
xchg
or
xor
dec
into
test
xor
add
add
add
sbb
xchg
mov
inc
xor
cltd
dec
xor
and
pop
and
cmp
subb
add
rdtsc
sbb
sbb
inc
int
mov
imul
jmp
js
inc
scas
or
and
push
xchg
test
js
shll
cmp
int
iret
xor
jae
sbb
xor
out
lcall
fldenv
inc
jnp
pop
adc
es
sub
aam
or
dec
daa
add
mov
inc
add
and
sbb
addb
mov
sbb
adc
and
inc
into
fadds
shrb
add
xor
dec
mov
push
dec
aad
in
test
ret
mov
maxps
xchg
push
jae
mov
xchg
movsl
mov
leave
test
lahf
push
call
cmpsl
in
pop
xor
mov
add
dec
push
stos
lcall
aam
sbb
loopne
push
inc
push
imul
sub
sub
push
inc
es
jne
push
and
in
lods
movsl
shrb
ret
inc
daa
pop
movsl
pop
es
add
push
es
push
hlt
xor
loopne
enter
mov
rorb
test
adc
nopl
cmc
daa
dec
popf
push
rolb
jl
sbb
cs
adc
xor
mov
mov
hlt
push
adc
sbb
dec
push
into
lcall
scas
ja
or
mov
xchg
mov
push
push
mov
xlat
adc
inc
add
pushf
mov
and
test
cmpsb
and
cmpsb
sbb
xor
push
stos
pop
and
mov
cmp
sbb
or
xchg
in
mov
xchg
jge
and
unpcklps
sbb
sahf
scas
int3
or
mov
mov
mov
out
idiv
pop
xlat
push
imul
int
shl
scas
sub
out
sbb
jno
sbbl
xchg
mov
stos
cmc
pop
stos
inc
xchg
add
push
xorl
or
jge
mov
sbb
or
movsl
leave
push
push
cmp
rcll
cmpsb
pop
or
xchg
shll
fsubs
aad
cmp
in
inc
test
loope
popa
call
jno
in
imul
add
jge
or
or
or
data16
sbb
loopne
add
pop
orb
sarl
xchg
and
xor
xchg
stos
add
push
sbb
mov
lret
sub
jo
push
loope
enter
and
pushf
pop
add
or
cltd
insl
add
sbb
roll
xchg
add
xor
andl
xlat
lods
out
push
int
movsb
sbb
add
lock
xchg
sbb
inc
jmp
mov
ljmp
add
shrb
add
and
lret
and
push
mov
std
jnp
push
in
push
lret
cltd
jo
sarl
out
xor
inc
bound
sbb
jle
mov
dec
scas
mov
adc
faddl
sbb
cmp
rcrl
daa
inc
push
rcrl
and
out
push
jnp
xor
sub
jno
add
push
icebp
pop
sub
movl
mov
cwtl
stos
sub
sbb
xor
daa
and
mov
rolb
nop
lea
iret
cmp
mov
or
movb
cmp
aad
movsb
jle
cwtl
lcall
mov
aas
test
sub
mov
aas
insb
scas
test
pop
test
mov
xchg
test
push
adc
fisttpll
mov
sbb
icebp
mov
mov
pusha
jmp
dec
push
int
mov
out
push
daa
test
mov
add
adc
mov
or
negb
insl
loop
push
popf
stos
dec
in
mov
or
jle
push
pushf
adcl
push
xchg
loopne
mov
mov
inc
cmp
jp
add
insb
in
jb
cli
pop
outsl
or
xor
lret
cmp
push
movsb
iret
sub
mov
jbe
inc
push
adc
xchg
lret
jb
sahf
mov
xor
call
ret
aam
pop
and
xchg
jae
scas
lret
stos
sbb
push
lods
fwait
inc
in
add
daa
ds
rcl
loopne
push
lret
leave
inc
add
nop
sarl
pop
sbb
adc
lods
enter
insb
outsl
jl
inc
or
pop
stos
pop
or
mov
mov
fldenv
pop
cmpb
daa
and
and
stos
pop
imul
gs
add
clc
push
pop
jl
lds
lods
ljmp
shl
sub
xorb
mov
xor
xlat
dec
push
inc
fnstcw
nop
es
or
outsb
inc
hlt
add
sbb
not
icebp
filds
cmp
cmpsl
rcrl
mov
test
xor
add
data16
mov
movsl
stos
xor
pop
push
jb
mov
imul
enter
jmp
add
mov
popf
xor
jo
jne
xlat
pop
pusha
jo
mov
enter
scas
and
mov
push
mov
rorl
sbb
sub
and
push
les
nop
mov
jae
in
lcall
xchg
pop
jmp
pop
xchg
data16
mov
adc
or
push
jne
xchg
sub
dec
stos
aad
xor
mov
enter
sbb
xor
out
mov
cmpsb
pop
ret
inc
adc
or
mov
sub
in
inc
outsl
inc
repz
pushf
ret
notb
dec
push
cs
scas
inc
jg
ljmp
jg
xlat
inc
scas
data16
pop
xor
jl
cs
push
lcall
add
clc
xchg
and
rorl
out
sbb
cmp
sbb
jmp
sbb
cmpsb
pop
cli
lcall
xor
mov
jnp
jns
gs
jae
push
cld
cmp
movsb
sub
mov
pushf
movl
push
push
incb
push
pop
mov
push
sub
add
inc
inc
sbb
sub
loopne
add
push
test
and
out
imul
xor
jo
enter
daa
pop
popa
xor
lcall
pop
shl
xchg
dec
mov
add
pop
mov
push
or
mov
or
inc
aad
in
sbb
xor
jb
mov
pop
jno
in
and
inc
push
jb
mov
xor
decb
mov
add
and
test
enter
arpl
test
test
dec
inc
cwtl
cmp
dec
in
mov
push
jne
jb
adc
sbb
subl
mov
sbb
in
inc
xor
xor
stos
add
push
push
inc
lcall
push
out
aad
sub
push
and
imul
jge
push
inc
pop
add
es
add
add
mov
icebp
cmpsl
aas
pop
pop
push
ret
add
dec
and
push
pop
and
or
es
cwtl
or
out
jno
orb
or
cs
cmpsl
dec
xchg
addr16
add
addr16
out
es
lcall
xor
ret
or
ljmp
jbe
pop
ret
mov
scas
adc
call
andl
sub
mov
pop
stc
subb
mov
out
xchg
xchg
inc
push
pop
xlat
add
or
test
push
inc
lahf
in
pop
fwait
add
mov
lock
cwtl
adcb
lods
aaa
add
push
sarb
test
xchg
add
bound
or
movsb
adcb
add
inc
pop
dec
push
scas
pushl
cmp
cmp
es
ret
ss
add
popa
test
cmp
shrl
shll
adc
xchg
sub
cli
mov
fldenv
fistpl
push
jp
sbb
rcr
mov
add
cmpsl
outsl
aad
inc
movlps
jns
inc
cs
mov
mov
or
pop
add
pop
adc
test
xlat
push
clc
and
es
add
push
imul
inc
cmp
fs
cs
adcb
pop
movsb
pop
xchg
enter
cmp
xorl
jl
call
les
push
call
je
sbb
sub
mov
xchg
lcall
add
imul
sbb
orb
push
lcall
repnz
daa
mov
push
cmp
sbb
push
cmp
sbb
aas
sbb
dec
or
inc
jmp
xchg
add
xor
mov
dec
sub
jno
and
mov
mov
cmp
adc
into
mov
test
add
mov
mov
sbb
int
xor
and
stos
repnz
cmp
jb
mov
jne
popl
pop
add
mov
or
rcrb
cld
fwait
xor
xor
pop
xchg
xor
or
push
cmpsl
outsl
jb
push
xor
adc
and
cmp
or
inc
push
sbb
inc
mov
and
adc
add
sahf
rorl
mov
or
in
jo
adc
outsb
mov
jl
iret
add
fcoml
pushf
jmp
popa
mov
adc
or
push
dec
mov
adc
mov
jp
and
add
push
push
adc
xor
jb
add
das
lret
jae
ret
add
inc
sbb
inc
push
push
out
inc
mov
push
test
insl
push
pop
push
mov
inc
std
pop
ret
sub
jecxz
in
inc
mov
inc
sbb
push
icebp
mov
sbb
jo
divl
rol
add
xchg
inc
loopne
and
js
stos
add
outsl
add
stos
rolb
inc
add
sub
and
pop
inc
and
push
add
mov
mov
inc
inc
mov
push
jle
xlat
jo
jo
mov
cmp
xor
xchg
or
aad
rcll
je
sbb
mov
popa
lods
call
in
xor
jae
dec
popa
adc
cmp
xchg
jg
xor
pop
scas
out
pop
test
ret
mov
fsub
pop
or
test
or
notl
fsubrs
into
push
int
shr
fwait
into
je
push
push
adc
add
rcrl
xchg
lock
push
in
push
cmp
pop
xor
pop
push
into
mov
dec
into
nop
lods
int
icebp
popa
add
rolb
stos
adc
push
int
sub
inc
cmp
cmp
popf
or
xor
jo
pop
mov
es
popa
cmp
js
data16
adc
push
add
dec
test
sbb
sbb
push
jge
xor
shrl
lcall
sub
xchg
lods
pop
mov
adc
scas
xor
shrl
sub
gs
sbb
push
rcrb
sub
push
and
ja
enter
push
push
push
xchg
cmpb
and
inc
cmp
xchg
sarl
jo
call
ss
and
out
clc
mov
clc
ds
jb
adc
push
add
inc
pusha
stos
push
add
mov
mov
push
cs
push
xor
and
pop
adc
cmp
xlat
out
scas
cmpsb
jb
or
sbb
push
sbb
cmp
push
das
inc
jg
sbb
stos
xor
sahf
xor
or
lea
add
jl
lods
stos
push
cmpsb
jb
dec
std
cwtl
mov
mov
push
mov
xlat
andb
push
loope
lods
repz
popf
sub
andl
add
inc
jmp
pop
test
pop
addr16
xor
xor
std
sarl
es
inc
loope
ret
lret
ljmp
mov
inc
mov
out
add
cli
xor
sub
add
xor
lods
test
inc
add
xchg
pushf
and
push
je
into
sub
xchg
push
js
and
stos
add
add
mov
test
loopne
scas
out
insl
sub
or
push
mov
jae
lahf
sbb
cld
pop
mov
fiaddl
pop
adc
sbb
mov
test
ret
dec
movsb
jecxz
loope
push
cltd
or
cmpsb
js
sub
jg
cmp
adc
negb
dec
out
jecxz
push
test
push
scas
xor
and
das
or
lock
hlt
rorb
test
imul
rcrl
movsb
ljmp
adc
or
shl
sti
daa
js
push
dec
xor
add
xchg
test
lcall
inc
out
out
xchg
mov
push
fwait
sbb
aad
sbb
scas
neg
add
push
pop
popf
cmp
orb
stos
int
sbb
jnp
sbb
cltd
pop
leave
ljmp
inc
jne
jo
pop
add
inc
sbb
add
add
lods
dec
sbb
mov
adcb
fmul
push
xchg
add
popa
add
pushl
subl
sub
adc
sub
ret
add
dec
gs
adc
inc
and
rcrl
jne
add
inc
and
pop
shll
je
scas
inc
pop
mov
lds
push
adc
add
add
lods
xchg
stos
test
jne
sbb
push
xor
lods
dec
push
cmp
mov
adc
rcr
xchg
pop
in
popl
dec
adc
imul
or
rcrb
push
dec
test
lock
jo
rcrb
clc
icebp
or
imul
mov
sub
mov
or
push
cmp
icebp
push
adc
dec
mov
cmp
sbb
jl
pop
inc
movsb
mov
or
orl
jecxz
outsl
add
call
lret
pop
movsb
add
das
jne
mov
pop
push
es
ljmp
adc
xchg
stos
pop
mov
imul
xchg
xchg
out
push
jl
add
push
addb
decb
pusha
add
test
cmp
mov
xor
inc
sub
xor
add
pop
in
mov
xor
lret
lea
jbe
sbb
jb
icebp
ffreep
or
call
jb
mov
rcl
cmp
ret
jge
rcrb
jnp
shlb
aas
je
xor
xchg
sbb
add
ret
popf
mov
outsb
pop
int
sbb
loopne
cmp
mov
sbb
in
inc
add
fsubs
outsl
push
adc
rclb
jae
es
imul
mov
fidivl
xor
shlb
adc
in
mov
fimull
mov
ds
cs
lea
xchg
test
scas
or
jl
out
jo
mov
cld
add
cmp
cmp
nop
cwtl
orb
mov
pop
aad
mov
xchg
stos
cmp
pusha
pop
inc
xor
jno
test
fldenv
test
add
es
mov
cmp
stos
fwait
and
and
test
orl
mov
repz
push
and
cmp
popa
orb
add
gs
lret
cli
jecxz
xchg
scas
mov
inc
inc
mov
ljmp
mov
cld
fisttps
xchg
lds
jo
sub
mov
push
mov
pop
push
dec
sub
adc
lea
mov
push
dec
cmpsl
inc
pusha
clc
sub
xlat
dec
decl
jne
cwtl
push
les
cmp
sub
call
cmp
test
mov
xchg
into
sbb
or
gs
test
movsb
pushf
pop
xchg
mov
pop
fdivrs
scas
xor
adc
dec
enter
sbb
mov
push
sub
loope
sub
in
stos
inc
mov
stos
cmc
add
pop
adc
stos
ret
imulb
sbb
mov
sub
adc
xor
loop
pop
es
pop
sbbl
push
loopne
xor
cmp
cmp
jno
mov
rclb
mov
sub
das
push
xor
xor
jnp
mov
hlt
je
jo
jne
add
sahf
and
mov
sbb
pop
pop
mov
cmp
jo
mov
push
push
test
call
xchg
adc
inc
jae
adc
push
femms
or
mov
mov
pop
ljmp
in
cmp
mov
dec
pop
pop
rorl
inc
sbb
pop
cmp
dec
cmp
sbb
jb
sub
cmp
mov
and
or
jb
pop
sbb
pop
movb
sbb
mov
add
xchg
mov
jo
or
out
jnp
outsl
mov
cmp
sbb
jae
mov
subl
pusha
inc
xor
xor
jb,pt
pushl
es
in
call
mov
add
sbb
mov
dec
or
rcrl
rcl
xchg
xor
dec
push
int
push
in
cs
mov
jl
pop
nop
add
ret
subl
aaa
inc
cmp
nop
xchg
mov
or
int3
inc
inc
xorl
xchg
jl
push
cmp
xor
out
add
xor
pushf
inc
push
clc
jmp
xlat
add
inc
add
push
stos
or
shrl
enter
add
mov
jbe
out
pop
shlb
mov
inc
shr
lock
push
mov
cmpl
adc
sbb
xchg
xor
mov
test
push
mov
das
or
dec
xorl
cwtl
mov
addr16
xor
mov
rorl
pop
xor
adc
mov
xlat
push
cmp
mov
es
mov
int
mov
sbb
shrl
arpl
and
test
cmp
gs
pop
movsb
popa
cmp
and
insl
dec
inc
xchg
imul
cltd
xor
outsb
gs
cltd
pop
sbb
sub
andb
scas
rorb
jp
rclb
roll
popf
popf
push
test
test
push
or
or
mov
xor
or
xchg
mov
mov
xchg
loop
push
andl
dec
scas
cltd
jo
push
sahf
push
aam
pushl
pop
mov
jne
mov
iret
daa
mov
push
inc
cs
sbb
mov
dec
or
aad
cmp
loope
or
xor
mov
out
outsl
adc
int
adc
xchg
jecxz
rorb
nop
push
ja
pop
sbb
fs
rolb
nop
or
pop
in
imul
pop
stos
sbb
add
rorb
pop
cltd
jb
lahf
sbb
sbb
adc
cmp
out
adc
push
jo
mov
pushf
cmpl
icebp
hlt
mov
enter
outsl
adc
scas
sub
mov
mov
or
or
fs
mov
loope
mov
mov
mov
cs
mov
clc
xlat
test
pop
mov
sbb
out
add
cwtl
insl
ljmp
xorl
push
out
or
mov
add
andb
insb
fsubl
test
or
push
mov
rcrl
jo
lcall
inc
loopne
inc
das
hlt
xchg
gs
pop
cmp
jp
ljmp
jb
push
pop
add
or
sbb
add
jge
push
lret
sbb
into
adc
andl
into
andb
cmp
loop
pop
scas
lods
add
cli
outsl
test
jle
push
cmpsl
inc
sub
pop
add
popf
cltd
push
ss
idivb
sbb
add
mov
sbb
pop
push
jne
ret
pop
push
and
loop
dec
jbe
int
push
orb
push
push
std
push
push
push
fxch
movl
rorl
add
jg
inc
adc
insb
jno
add
mov
sti
sub
add
cmc
and
add
mov
test
adc
sarl
sbb
pop
out
out
xchg
out
pop
mov
dec
mov
push
fimull
test
sbb
and
int
inc
mov
cltd
pop
daa
mov
cltd
add
shlb
inc
div
lret
lret
icebp
push
dec
push
mov
dec
dec
dec
adc
jle
es
sbb
sub
cwtl
into
cltd
pusha
mov
xor
add
and
sbb
push
or
or
data16
sub
sbbb
push
je
pop
imul
add
cmp
int3
sbb
inc
mov
cmp
inc
rcll
add
adc
in
sbb
sbb
lret
sub
jo
sti
mov
pop
stc
and
push
jae
add
mov
inc
jl
call
dec
mov
pop
loope
push
adc
pop
xchg
cmpl
cwtl
add
rorb
pop
pop
test
jb
or
sbb
or
pop
mov
lret
push
pushf
and
mov
cs
xchg
xor
mov
xorb
je
fbld
add
or
inc
cwtl
lcall
sarb
cwtl
ljmp
adc
filds
movsb
sahf
dec
in
sub
mov
adc
jecxz
xchg
insl
fdivl
jo
testb
xchg
ss
jg
mov
inc
aam
mov
js
cli
or
lahf
xlat
or
or
sbb
int3
add
sbb
jp
xchg
jmp
add
repz
push
je
pop
call
cwtl
mov
jb
lcall
sbb
xchg
pop
imul
popf
add
dec
clc
dec
or
xor
xchg
rclb
lea
push
mov
add
mov
or
sub
mov
mov
jne
loopne
popl
push
mov
add
dec
cmp
mov
dec
adc
shlb
pop
push
nop
mov
jae
test
sbb
loopne
push
jae
dec
inc
leave
adc
and
dec
insb
pop
sbb
cwtl
arpl
jb
sbb
add
sbb
scas
js
repz
movb
sub
arpl
andb
add
mov
cmp
pop
add
mov
into
in
mov
movsl
je
xchg
sbb
outsb
sti
push
inc
rcll
jg
scas
push
inc
out
lea
adcl
imul
insb
or
push
jb
add
xor
je
loope
add
movb
add
insl
out
repnz
clc
fstpl
push
sub
push
or
adc
push
stos
sbb
das
mov
outsl
jbe
in
jo
add
xchg
imul
pop
and
push
mov
add
add
test
sbb
adc
lods
andl
cmp
lcall
mov
out
pushf
push
add
andb
pop
push
xchg
fistpll
out
inc
jl
fmull
push
inc
push
add
les
popa
or
push
sbb
jmp
int
adc
sub
ss
inc
add
aas
pop
jns
jno
push
cmp
jne
add
adc
clc
pop
add
or
push
add
ljmp
rorb
lods
bound
add
lds
inc
int
aad
lret
push
test
movsb
inc
subb
or
cmp
stos
sub
sub
insb
rorl
mov
or
push
sbb
test
icebp
jbe
int3
push
cmp
pop
cmp
jb
out
pusha
xor
daa
sub
inc
ret
push
orl
and
mov
push
scas
ret
add
sub
movsb
sbbl
and
push
cmp
faddl
sub
mov
sub
push
jl
xor
insl
pop
add
jo
xchg
iret
test
pushf
andb
pop
dec
inc
cmp
mov
sbb
pop
incb
sub
sahf
mov
mov
cmp
popf
cmp
push
push
into
gs
push
aad
push
pop
into
aaa
inc
std
push
pop
sbb
nop
and
adc
mov
or
and
rcrb
and
mov
mov
or
pop
popa
inc
lods
or
pop
and
cwtl
xor
mov
push
insb
orb
xor
cmp
aad
aam
and
in
aam
dec
rcrb
call
cmp
test
mov
rclb
cmpsb
scas
add
sbb
push
sbb
inc
int
movsb
add
sbb
xchg
push
xor
pusha
mov
dec
add
or
dec
je
sbb
dec
xchg
loope
shlb
es
or
ljmp
stc
xchg
out
sub
js
loop
push
xor
subl
and
inc
cs
rcrb
shll
xor
mov
mov
fwait
inc
lds
sub
xchg
push
nop
fnsave
je
jbe
lods
rol
outsl
add
cmp
sbb
cs
lret
cmpsb
or
xchg
les
add
pop
adc
dec
mov
rolb
jb
add
and
dec
adc
inc
lds
jmp
enter
or
mov
or
stos
popa
and
js
lret
mov
sbb
shrl
adc
jg
push
cmp
inc
pop
cwtl
cs
add
inc
das
loope
add
sbb
aam
pop
dec
mov
pop
jne
pop
xchg
rcl
jnp
jo
test
pop
xor
lret
ljmp
pop
add
aad
xchg
xor
imulb
mov
pop
movsb
shlb
int
inc
outsl
frstor
push
xor
lret
push
addr16
push
pop
or
stos
xlat
inc
jae
xchg
mov
cmc
xchg
dec
ss
movsb
adc
aam
pop
lret
stos
test
sub
push
add
push
mov
js
lcall
nop
test
lods
xor
mov
jg
subb
sbb
xor
mov
or
stos
sbb
imul
sub
fs
mov
pushf
pop
enter
xor
xorb
or
sbb
sbb
int
xor
pop
add
mov
fldl
jae
icebp
lcall
push
or
mov
sbb
jb
jmp
out
sub
add
xchg
mov
fucom
loop
push
add
or
mov
or
add
mov
mov
xchg
mov
dec
fs
adc
xor
addr16
cmp
lcall
jo
fldenv
sub
jecxz
and
lods
loopne
mov
mov
jno
xlat
test
cmpsb
pop
jmp
test
insb
add
or
add
jne
and
adc
inc
mov
add
shl
pop
pop
dec
imulb
loop
lods
jp
push
repz
pusha
jp
fmuls
sbb
pop
int
lahf
in
inc
dec
pop
gs
and
push
push
mov
xchg
loopne
sahf
push
xor
movsb
nop
xchg
insb
lcall
pop
loopne
test
jb
jo
pushf
lock
push
pusha
addb
push
pop
outsl
sub
jl
cmp
enter
insb
push
js
xchg
mov
sub
in
mov
xchg
add
icebp
add
xor
dec
add
into
rclb
cmpsb
jmp
je
mov
push
add
mov
das
xchg
add
outsl
ds
mov
sti
int
xlat
loopne
mov
xor
add
push
mov
lock
sub
subb
pop
xor
enter
adc
cmp
fs
sub
pop
rclb
push
icebp
xor
loope
push
xor
mov
je
mov
ja
ss
or
jne
sbb
push
dec
add
cld
jg
ljmp
xlat
addr16
enter
xchg
xor
mov
push
pop
cmpsl
retw
cmp
pop
aam
mov
or
jb
pop
cmc
loop
mov
xchg
add
fs
clc
add
adc
add
rclb
outsl
pusha
enter
and
fbld
push
icebp
pop
xorb
push
sbb
xchg
fisttps
cmp
push
push
or
cmp
or
mov
sub
pop
sahf
push
hlt
outsb
cmp
adc
mov
inc
sbb
xchg
dec
xchg
or
aaa
ror
add
in
sub
push
lods
aam
adc
pop
les
inc
xor
fsubrs
pusha
ret
sar
sub
in
sbb
inc
or
jnp
cmc
push
sub
cmp
cmovo
lret
push
sar
lret
out
sbb
out
xchg
and
mov
pop
mov
jno
dec
jne
jb
je
loope
adc
fcmove
in
dec
outsb
xor
in
in
add
inc
add
js
out
adc
out
pop
sbb
leave
adc
movsb
rorb
or
out
jno
and
rorb
add
push
push
arpl
out
add
cmp
aad
sbb
sbb
cmp
sbb
leave
cmp
xor
xchg
cmpsb
ljmp
cmp
mov
pushf
jmp
push
jmp
je
adc
push
cld
scas
add
test
aas
pop
adc
inc
test
mov
in
lock
ret
icebp
loop
pop
mov
sbb
dec
lahf
push
and
push
es
push
mov
adc
mov
stos
xchg
mov
dec
es
sub
adc
adc
add
pop
lcall
sbb
push
js
push
jp
mov
mov
jo
ljmp
push
push
add
ret
sub
int
cmp
add
pop
mov
nop
sub
jp
enter
call
and
cmp
pop
jmp
inc
cmpsb
bound
in
cmp
push
cmp
cmp
dec
scas
mov
adc
inc
inc
pop
rcrl
push
loopne
insb
mov
int
inc
ja
mov
xor
cmp
cmpsl
cs
rolb
push
sub
adc
hlt
sub
es
add
add
pop
and
stc
mov
pop
adc
xor
sbb
into
icebp
pop
int3
inc
mov
xor
pop
jnp
mov
or
inc
and
or
popa
xor
fldenv
les
add
rcrl
sub
push
cltd
push
scas
pop
add
fldcw
data16
jo
dec
imul
cmp
fstpl
test
into
mov
in
jne
xor
or
ds
loopne,pn
nop
cld
mov
rcrl
dec
push
dec
mov
nop
test
aam
and
cmp
xchg
dec
sbb
cltd
add
adc
mov
add
or
or
dec
dec
xor
adc
jno
cs
inc
jae
dec
or
inc
in
movb
setae
pushf
xor
xor
in
shll
add
mov
mov
add
jecxz
stos
or
mov
jb
rorl
and
push
rorb
jb
inc
mov
add
push
addr16
push
xchg
add
pop
jmp
popa
mov
xor
test
nop
xorl
cmc
xor
inc
push
insl
cmp
mov
jo
retw
adc
inc
cwtl
add
scas
cmpsb
adc
out
jno
ret
xchg
leave
mov
shlb
adc
mov
mov
xor
mov
hlt
clc
ret
scas
out
sbb
cmp
sub
sbb
push
inc
or
mov
outsl
ffree
shll
pop
xchg
mov
bound
aaa
in
int3
ljmp
fmul
inc
or
call
in
mov
or
mov
sbb
push
fs
add
rcll
cmp
inc
cmp
inc
jecxz
cmp
andb
sbb
leave
adc
adc
out
mov
add
mov
and
sub
push
or
push
hlt
jmp
push
lock
dec
push
sbb
je
mov
pop
xor
dec
jno
popf
push
cmp
push
std
push
xchg
sub
add
call
mov
sbb
mov
fs
mov
fstpl
or
and
xchg
push
lods
xlat
pop
inc
int
pop
nop
and
cmp
inc
pop
jno
push
cmp
fiaddl
in
xchg
fs
js
cmp
cmovge
out
jl
add
leave
inc
jne
xchg
les
int
imul
push
dec
add
es
es
push
mov
cwtl
sbb
pusha
out
adc
jp
outsl
jmp
lods
loope
imul
mov
cmpsl
dec
arpl
dec
das
or
dec
push
cwtl
in
lods
cmp
adc
test
mov
sub
pop
nop
ret
xorb
xor
mov
and
test
cltd
jb
lods
test
sbb
test
rorb
outsl
dec
sbb
and
iret
xchg
stos
pop
mov
faddl
lahf
sti
adc
in
adc
pop
sbb
aad
shl
mov
or
inc
or
jb
or
sub
xor
push
adc
test
and
sbb
aam
and
add
ret
push
int
fs
add
in
aam
or
nop
jae
cmpsl
or
inc
add
mov
pop
add
sbb
xchg
fldcw
dec
cmp
and
adc
jns
push
pop
xchg
test
mov
int
in
dec
orb
call
mov
dec
enter
das
push
test
loope
fbld
lret
les
adc
xchg
mov
and
mov
sub
or
sub
lods
jg
cmp
test
push
lods
dec
cmp
mov
out
push
cmpsb
stos
cmp
push
es
cmp
bound
cmp
test
es
push
fs
daa
adc
jb
nop
mov
xor
sahf
ret
fsubs
mov
inc
add
mov
inc
pushf
stos
push
push
push
imul
mov
push
mov
pusha
mov
xchg
mov
movsb
movsb
outsl
jb
xor
ja
push
or
leave
sbb
outsb
add
or
testb
pusha
js
jmp
pop
ljmp
adcb
lret
popf
jge
dec
add
insb
out
pop
lds
xor
punpcklbw
outsl
or
push
popa
cmp
push
sub
cs
pop
clc
sbb
mov
push
test
or
push
cmp
in
shl
fcoms
addr16
sub
inc
mov
addb
mov
mov
ficoms
sbb
stos
pop
arpl
ret
jmp
push
mov
xchg
out
mov
mov
mov
test
xchg
or
inc
lock
mov
stos
insl
arpl
fsubrl
push
in
add
js
pop
mov
leave
mov
inc
and
push
int3
push
ret
or
jg
jle
mov
push
mov
and
leave
mov
stos
jo
stos
mov
push
push
mov
pop
stc
fisubl
mov
inc
aam
in
hlt
mov
add
mov
xchg
or
adc
in
lret
pusha
jb
ficoml
sub
icebp
or
cwtl
sbbb
mov
sub
outsl
inc
das
pop
sbb
outsl
fdivs
or
jbe
mov
xor
mov
inc
push
ret
xchg
ds
adc
in
int3
adc
or
imulb
add
es
pop
inc
aad
or
push
lods
lcall
pop
out
cltd
sub
lods
sub
push
je
mov
dec
mov
loopne
jns
add
js
cmp
test
add
pop
loope
insb
outsl
dec
cmp
or
mov
sbb
push
xor
xor
int
pop
test
pop
push
adc
or
sub
shlb
push
rol
cmp
pop
xchg
adc
xor
jae
or
lea
xchg
add
push
and
test
sub
cmp
push
or
pop
jb
dec
push
dec
push
sub
xchg
rcrb
test
aaa
outsl
xor
xor
stos
pop
std
aaa
loope
cmpsb
or
das
pop
xchg
lret
inc
pop
push
jl
gs
xor
adc
or
loopne
test
stos
inc
pushf
sub
imul
xlat
hlt
aas
mov
es
mov
insb
jno
imul
insl
dec
cld
add
pop
adc
pop
popl
jae
addb
sub
adc
loopne
sbb
add
mov
inc
aad
cmc
filds
cli
xor
cmpb
cmp
cmp
int
pop
and
js
push
insl
lret
lock
jge
add
mov
mov
push
add
or
inc
mov
sub
jge
out
ss
shl
push
lock
add
rcll
mov
push
cmpb
and
push
lds
loopne
pop
push
mov
add
popf
stos
add
es
xor
nop
and
mov
daa
lea
sahf
add
push
sub
iret
lret
aad
movsb
repnz
add
int
pushf
xor
xor
in
adc
adc
pop
jge
pop
push
push
and
sbb
pop
mov
shrb
mov
inc
mov
dec
cmp
fsts
pop
es
out
adcb
test
cmp
enter
call
pop
sbb
cmp
inc
call
out
add
push
out
sub
push
push
enter
out
jo
sub
push
xorl
das
push
orb
out
jo
push
jae
inc
inc
pop
movsb
dec
sbb
fadd
negl
loope
pop
or
jae
adc
add
lods
test
sarl
jne
rclb
add
and
daa
add
movsb
insb
dec
add
sub
aaa
pop
add
mov
inc
or
push
and
and
loop
aas
mov
data16
and
dec
inc
add
adc
pop
mov
adcl
aaa
fcmovu
lea
ret
loop
imul
sbb
push
int3
inc
jbe
test
mov
or
cmp
popa
mov
in
mov
and
mov
xchg
shll
in
pop
xchg
enter
sub
mov
and
mov
and
stos
xor
and
push
insb
xor
jns
scas
add
rcll
addb
call
rcl
adc
pop
push
mov
stos
sti
pop
sbb
stos
sub
mov
out
pop
and
add
jb
call
int
add
jle
sbb
out
mov
out
pop
cmpb
mov
jp
sub
scas
adc
mov
add
out
sbbb
add
js
inc
cmp
popf
dec
pop
push
xorb
roll
jno
jb
or
clc
xchg
sbb
xor
and
mov
rol
mov
or
scas
or
imul
ljmp
stos
dec
adc
pop
or
or
mov
mov
fldenv
add
das
xor
xor
jbe
dec
pop
push
sub
imul
pop
inc
sbb
fs
xchg
push
adc
ja
or
inc
into
insb
das
jg
cltd
sbb
icebp
sbb
cmp
lock
out
xor
lcall
and
or
std
test
push
push
lcall
mov
popa
ss
push
loope
mov
aaa
in
cmp
add
sbb
jb
loop
xchg
mov
loopne
cmp
test
loop
mov
jp
add
inc
sarl
js
mov
add
mov
fldenv
pop
data16
push
mov
inc
sub
xchg
jae
mov
add
inc
test
push
andl
dec
in
mov
mov
push
in
add
xor
loope
shlb
adc
stos
sbb
jae
sub
inc
xor
mov
stc
mov
adc
sub
lcall
cwtl
fs
push
jb
inc
or
push
cmp
jae
jge
pop
scas
push
shl
cmpsb
push
mov
pop
jp
sbb
push
xlat
in
mov
pop
addr16
sbb
inc
xor
jo
push
cmp
and
add
fwait
jb
fcoml
or
pusha
movsb
mull
mov
xchg
xchg
push
jae
mov
repz
mov
cs
mov
cmp
cmp
inc
rorb
sub
orl
inc
cwtl
inc
cli
mov
jp
repnz
add
or
pop
adc
jbe
dec
ret
cmp
xchg
inc
decl
repz
xor
dec
inc
adc
andl
jae
orl
pop
fdivr
xchg
in
andb
stc
adc
inc
add
add
mov
dec
fstpt
mov
andl
mov
adc
mov
jbe
bound
inc
stos
inc
cwtl
mov
pop
outsb
lret
mov
mov
push
dec
mov
idivb
arpl
sub
cs
fistpl
sbb
jne
cmp
cmpsl
add
push
mov
std
or
test
out
inc
mov
sub
lret
push
subb
mov
lret
push
lods
ja
sbb
iret
jne
in
enter
cmpsb
sub
int
mov
data16
lea
out
mov
or
jo
mov
lcall
dec
mov
bound
test
mov
cs
mov
incb
ret
inc
inc
dec
add
sub
mov
jne
adc
gs
and
loopne
pop
cmp
rcl
insl
popa
mov
test
add
repnz
mov
test
inc
pop
xchg
fldt
cmp
jge
push
sub
fsubrl
cwtl
xchg
xchg
and
mov
push
sbb
jmp
jmp
sbbb
das
shlb
sbb
mov
jmp
gs
sub
pop
fldcw
outsb
fnsave
add
dec
sbb
insl
sti
mov
or
pop
gs
push
mov
pusha
mov
jno
pop
imull
fistpll
daa
mov
outsl
ja
inc
push
mov
test
addr16
arpl
xchg
ret
insb
push
push
cmp
xchg
in
mov
in
pop
xor
hlt
rorl
lret
sbb
cmp
sbb
mov
cmp
adc
jno
lds
cmp
jecxz
pusha
jb
jmp
push
cs
test
out
fldt
jno
add
test
add
cmp
adc
call
fisttps
sub
aas
xor
hlt
orl
xchg
test
pop
je
xchg
xor
lods
frstor
popf
add
in
mov
sbb
pop
pusha
mov
mov
rolb
icebp
jl
cld
sub
cs
add
pushf
jl
popa
cmp
inc
fdivrl
in
js
daa
arpl
rol
outsb
movsb
imul
push
movsb
loopne
xorb
jg
push
lds
mov
jnp
fldcw
arpl
pop
ja
cltd
testb
xchg
and
sbb
mov
aam
enter
adc
aas
cmp
add
or
adc
mov
dec
sbb
addr16
sub
enter
xchg
and
out
adc
pushf
notl
xor
pop
sub
jmp
sbb
lock
jmp
cld
cwtl
loopne
ja
out
bound
inc
mov
sub
xchg
call
sub
inc
add
mov
add
sbb
aam
sbb
pushf
dec
jns
pusha
and
sbb
mov
cmp
xchg
pop
pusha
mov
xor
cmp
in
xchg
popf
mov
xor
mov
add
xchg
pop
inc
xor
sbb
jg
arpl
mov
loope
adc
movsb
cmp
lcall
movsb
daa
scas
addl
cmp
cmp
jg
jb
cs
cmc
jmp
lahf
enter
pop
das
sbb
lcall
dec
int
sbb
movsb
pusha
sbb
cmp
jge
sbb
inc
xchg
je
pop
jle
add
add
mov
xor
mov
insb
aam
roll
ret
shll
mov
push
push
mov
mov
les
ret
pop
and
popa
xlat
shll
add
fcomps
out
mov
xor
sbb
mov
mov
xchg
sub
cwtl
pop
sbb
sbb
inc
cmp
insb
pslld
add
lret
xor
or
test
add
pop
mov
arpl
pop
orb
sbb
sbb
lcall
add
in
jns
inc
repnz
inc
ret
clc
cmp
inc
push
cltd
inc
into
xchg
fstpt
inc
xchg
adc
in
ds
in
cmc
adc
add
add
or
outsb
jl
fsubr
in
inc
fcoml
jp
insb
xor
cmp
cmp
dec
mov
insb
inc
jo
mov
inc
xchg
lahf
shrb
sub
and
sub
je
mov
jbe
and
dec
inc
mov
pop
ljmp
aad
mov
orb
sbb
xor
dec
add
test
repz
mov
sahf
add
or
lcall
jge
pop
pop
add
ds
mov
add
or
mov
inc
or
in
sahf
dec
arpl
add
mov
push
jno
cmp
pop
iret
jmp
add
cwtl
lods
popa
and
les
mov
insb
mov
in
daa
test
cmp
mov
int
dec
aas
inc
sub
cmp
xchg
enter
lods
ret
rorb
jbe
mov
fdivs
sub
dec
pop
xor
mov
sbb
rcll
pop
test
arpl
in
leave
dec
fisubl
fnstcw
push
in
insb
fstpl
sbb
jl
and
dec
pop
arpl
je
mov
fdivrs
repnz
shl
sti
xor
mov
adc
cmpl
sbbl
sub
jg
call
mov
push
adc
cmp
cmpb
dec
mov
cmp
imul
mov
mov
push
call
cmp
lret
mov
xor
mov
scas
ret
xor
adc
ret
sbb
cmpsl
and
test
jno
xchg
sbb
push
pop
xorb
xor
jo
nop
rcr
movb
cld
insb
xchg
les
inc
call
xor
enter
fucomi
cwtl
stc
fstps
push
flds
mov
xchg
sbb
and
call
xchg
lods
dec
out
push
inc
sbb
mov
mov
enter
outsb
pusha
call
or
xchg
loop
and
adc
pop
gs
mov
dec
lock
arpl
jmp
jge
int
mov
push
stc
cs
mov
sub
cmp
rolb
hlt
lock
test
xor
and
cwtl
xchg
mov
xchg
movsl
cmp
aaa
cltd
push
lock
pop
jle
inc
in
mulb
testl
xor
incb
test
and
adcl
ljmp
jb
outsb
aaa
pop
jle
mov
mov
out
in
cmp
rclb
scas
jp
mov
and
inc
mov
pop
push
std
stc
fnstenv
int
sbb
fstl
xor
mov
push
mov
push
lea
mov
daa
das
arpl
outsl
cmp
arpl
xor
shlb
cmp
inc
clc
push
ss
inc
or
add
inc
pop
mov
shll
push
inc
and
push
push
scas
pusha
mov
dec
adc
rorl
adc
add
ss
push
jle
scas
and
test
imul
mov
dec
mov
cmc
or
jbe
enter
cmp
aam
push
outsl
xchg
ss
inc
cmpsl
or
and
popf
add
stos
nop
lea
dec
push
mov
dec
xchg
test
cltd
adc
rorl
sbb
popf
jbe
mov
or
jp
test
mov
orl
jo
and
notb
sub
stos
adc
dec
pop
dec
mov
xchg
sbb
cmp
sub
lods
lret
dec
addb
lds
out
jb
movsb
fcoml
mov
or
jmp
mov
mov
adc
inc
adc
cs
or
lret
pop
inc
shll
sub
sub
mov
stc
pushf
mov
adc
push
enter
dec
sbbb
inc
add
xorps
lea
xchg
cld
xor
loope
pushf
je
add
mov
mov
sti
cmp
or
es
dec
cmp
push
stos
rcr
push
pop
loope
adc
add
aad
cwtl
add
push
push
push
or
mov
or
mov
lahf
leave
dec
shrl
and
add
cmp
int3
sub
jo
insl
ss
inc
lods
cmp
shr
sub
cld
aaa
int3
push
mov
sub
stos
xchg
mov
loop
sub
xor
mov
add
sahf
push
mov
push
cld
pop
pop
scas
adc
jne
fidivl
mov
or
sub
pop
push
aad
scas
mov
fprem1
nop
ret
add
xor
mov
and
data16
xor
out
and
and
add
and
inc
pop
xchg
sub
and
enter
loopne
xlat
test
or
rorb
insl
int
and
mov
lods
add
mov
daa
inc
cs
inc
stos
mov
inc
push
mov
push
in
in
xor
adcb
cmp
adc
leave
cwtl
daa
je
inc
or
lcall
jo
ret
scas
mov
imul
mov
xor
jno
dec
ljmp
add
int
out
bound
sub
scas
sub
nop
hlt
sbb
sub
sub
data16
xor
pop
pushf
jae
jo
stos
jno
jae
pop
or
sub
sub
movsl
push
into
aam
cli
pop
mov
jne
mov
or
push
or
lock
jb
xor
sub
loope
xchg
mov
dec
es
jl
adc
or
sbb
mov
sub
xor
and
stos
fisttps
add
aam
add
cmp
cmp
jp
push
cmp
adc
stos
mov
xor
push
xchg
mov
bound
sub
int
sub
xchg
push
jbe
aas
inc
pushl
jae
sub
negl
push
and
sbb
or
cmp
imul
adc
or
inc
or
aam
andl
loopne
stos
pushf
xor
inc
das
scas
adc
add
ss
loopne
xor
xor
adc
test
cmp
jb
and
mov
add
push
imul
dec
stos
xlat
scas
adc
movsb
xchg
or
or
add
jno
inc
mov
repz
adc
xchg
test
push
lods
rolb
push
pop
scas
add
mov
pop
inc
lods
cmpsl
and
dec
in
xlat
sbbl
into
inc
rcrl
push
mov
add
inc
icebp
or
and
add
dec
pusha
sbb
scas
push
into
andl
pop
orl
popa
jp
inc
fwait
pop
mov
and
push
xor
sbb
aad
jmp
push
fdivrl
sub
xchg
movsb
pop
out
rolb
test
dec
dec
push
xor
push
jo
jmp
int
or
jbe
pop
jg
pop
subb
pusha
ja
cmp
addb
mov
or
push
adc
cmpb
hlt
adc
jb
or
add
xor
push
imulb
data16
sub
int3
push
pop
inc
adc
mov
mov
mov
xchg
xchg
add
adc
xchg
cmp
data16
sbb
scas
xlat
dec
lods
loopne
cwtl
orb
adcb
mov
sub
add
test
dec
cmpsb
rclb
sub
xor
jmp
cmpsl
scas
push
sbb
mov
cmp
pusha
mov
xchg
and
enter
sbb
mov
xchg
add
push
cmc
fisttpl
mov
mov
or
daa
loopne
movl
orb
hlt
loop
push
out
jp
mov
out
rolb
cmp
arpl
and
leave
scas
out
cmp
add
xchg
mov
lret
pop
test
cltd
andb
or
cmp
push
mov
add
mov
inc
int
add
adc
call
adc
movsb
mov
addr16
daa
hlt
sub
int
mov
leave
sub
orb
mov
sbb
out
sub
imul
call
mov
push
in
add
or
fnstsw
pop
cwtl
stos
hlt
adc
aam
inc
sbb
repnz
popl
test
popf
loopne
mov
pop
mov
xchg
mov
pop
bound
add
pop
fiadds
adc
roll
sbb
inc
xor
lahf
xchg
sub
out
add
push
cltd
cmp
aaa
sbb
xchg
mov
cmc
sub
test
loope
shrl
or
cmp
ds
mov
lret
xor
mov
push
rclb
orl
ror
push
cltd
lret
mov
pop
out
iret
mov
and
mov
hlt
push
mov
mov
outsl
jmp
lds
roll
inc
cmp
jbe
pusha
lds
cs
addb
mov
ja
sbb
inc
pop
test
fcoms
cmp
subl
pop
scas
std
mov
adc
mov
mov
xchg
outsb
or
add
stc
int3
push
mov
jno
cli
pop
ror
dec
add
ja
aaa
mov
sbb
cmpsl
sub
push
pop
aad
xchg
sub
cs
jg
fwait
fwait
dec
mov
adc
sub
xor
push
call
les
and
add
adc
bound
jo
cmpsl
movsl
add
sbbb
std
mov
sub
mov
adc
mov
in
adc
movsb
add
lds
sbb
nop
into
ljmp
lods
pushf
and
xlat
push
xor
inc
aaa
mov
push
aam
lock
cmp
je
mov
add
and
sub
js
push
sbb
or
popa
outsl
pop
push
and
outsb
dec
mov
adc
mov
or
inc
pushf
jle
aam
adc
xor
lods
nop
or
out
or
ror
loopne
mov
pop
and
pop
push
insl
adc
pop
dec
sbb
or
daa
sbb
xor
push
arpl
pop
push
mov
test
mov
enter
test
mov
dec
sbb
lcall
and
lods
stos
ret
fisttpll
or
jo
inc
stos
lret
or
push
pop
movsb
sub
or
add
enter
insl
test
jo
shrl
rcll
cmp
enter
loopne
imul
xchg
xor
rolb
loope
or
mov
mov
ror
inc
inc
cmc
xor
aaa
push
into
mov
xchg
clc
mov
stos
sub
sub
jge
add
shlb
outsl
stos
inc
adc
js
mov
push
aad
adc
in
jmp
cmpl
dec
push
pop
sub
add
dec
outsb
mov
add
mov
push
push
dec
mov
push
mov
ret
adc
inc
add
popa
add
inc
pop
jb
mov
fcos
xor
dec
adc
test
dec
ret
sub
leave
ret
adc
test
push
ret
insb
jl
and
pop
and
inc
icebp
ljmp
xor
push
jp
cmp
mov
adc
xlat
iret
jmp
scas
add
or
or
sub
xchg
out
inc
jbe
inc
mov
xor
sbb
push
loopne
outsb
push
xchg
jo
cli
mov
and
or
add
adc
data16
sub
push
es
cmpsl
fldt
pop
pop
flds
inc
push
dec
nop
xchg
xchg
add
pushf
mov
mov
pop
xchg
jl
push
mov
xor
add
sub
shrl
xchg
mov
rorl
inc
stos
dec
into
mov
push
push
dec
call
popa
sbbb
inc
nop
stos
andb
test
mov
mov
test
or
jp
notb
sbb
scas
push
testb
sbb
add
movsl
pop
scas
and
xor
sbb
movsb
xchg
mov
or
xchg
push
call
sbb
mov
insb
push
call
adc
cmpsb
sub
leave
xor
pop
jb
add
aad
andl
push
and
add
push
orl
ljmp
icebp
scas
or
push
xor
icebp
call
pusha
lret
aaa
movsb
mov
pop
lcall
cmpsb
push
push
push
aam
shr
push
aaa
mov
icebp
scas
mov
clc
sets
push
or
push
or
sbb
cmpsb
pop
cli
lea
fldt
enter
add
inc
loope
add
mov
inc
sub
mov
and
ficoms
shl
test
fildl
jo
xor
sbb
push
or
xchg
loopne
xchg
nop
push
cmp
xor
nop
out
pop
cmp
out
push
jne
add
xchg
mov
add
lcall
pop
pop
pop
out
inc
xlat
bound
daa
je
sbb
sbb
xchg
sub
ss
test
mov
push
call
out
add
out
jb
movsb
cmp
loope
mov
fwait
mov
push
mov
shll
pop
test
sbb
sub
xchg
cs
lcall
movsl
inc
subps
mov
roll
enter
add
xchg
push
sub
inc
and
jge
ficompl
adcl
loope
sbb
sbbl
pop
push
xor
add
and
test
push
stos
inc
push
xor
jp
andb
daa
or
js
cmp
cmp
pop
add
into
push
insl
fadds
or
mov
xor
lcall
xchg
xor
lret
mov
or
hlt
outsb
lret
enter
mov
call
pop
add
pop
pop
push
pusha
rolb
fisubl
sbb
inc
or
in
push
test
sub
lahf
mov
pop
mov
sti
loop
inc
xor
call
mov
mov
add
push
push
fbstp
mov
add
aam
test
decl
jp
sub
inc
xor
fmull
ret
sarl
mov
pop
mov
ficompl
adc
inc
test
repz
xchg
les
xchg
sahf
add
lcall
fimull
inc
out
cmp
mov
mov
dec
push
pop
cwtl
jo
inc
jns
sub
xchg
imul
enter
jo
jmp
or
dec
lret
xchg
out
ljmp
add
invd
lcall
flds
in
gs
mov
xchg
loope
loopne
in
and
inc
xchg
push
lds
push
loopne
add
adc
pop
add
js
ja
loope
dec
push
push
rol
nop
add
stos
or
cmpsb
xchg
mov
mov
addb
or
pop
arpl
mov
push
aad
push
sbb
incb
lcall
aam
cwtl
sbb
push
pop
add
jo
mov
inc
leave
add
push
mov
xchg
xor
sub
cmpsb
add
pop
mov
jg
ret
sahf
jae
nop
xorb
data16
gs
pop
push
iret
xchg
jmp
cmp
sbbb
add
mov
out
ja
pop
into
push
shll
cld
mov
nop
mov
sub
mov
rcl
mov
fldl
outsb
stos
ud2
add
mov
emms
and
gs
popa
jp
outsb
shrl
notl
out
fisttps
jbe
ret
roll
push
nop
orb
push
insb
add
jb
xchg
cmp
mov
mov
add
addl
mov
pop
orb
sbb
dec
jl
dec
lods
inc
cmp
cld
loope
mov
outsb
sbb
cltd
or
cmp
jo
out
dec
ret
sbb
cmpsb
imul
jo
mov
fnstenv
or
sub
lods
cltd
pop
push
rcll
dec
stc
or
ret
pop
or
mov
sti
mov
icebp
xchg
enter
movl
pop
adc
adc
or
in
pop
out
enter
mov
push
int
addb
cmp
and
test
mov
inc
cmpsb
test
rcrl
cmpsb
fadds
inc
es
or
sbb
cs
daa
pop
or
scas
mov
stos
popa
mov
lods
xor
sbbb
inc
cwtl
incb
lcall
sub
aam
push
add
inc
cs
pop
leave
push
sbb
adc
add
ret
push
loope
sbb
clc
mov
push
fiadds
or
pop
sarl
popa
xor
push
cmc
mov
pushf
leave
and
add
loope
adc
push
scas
lds
mov
dec
inc
arpl
andb
mov
inc
into
popa
loop
fistpll
mov
mov
cmp
adc
pop
add
lcall
push
mov
rolb
popa
xor
sbb
out
add
push
int
xor
adc
int
sbb
dec
mov
xchg
mov
push
jb
push
jne
ror
mov
inc
movsl
inc
insl
lods
mov
inc
mov
or
xchg
mov
xchg
and
jmp
mov
mov
fisubrl
mov
fnsave
xchg
movsl
cmp
add
imul
jo
or
into
xchg
add
std
xlat
sub
push
inc
adc
les
ficomps
cmp
roll
adc
mov
add
add
fcmovb
mov
test
cmp
adc
cmp
xor
call
mov
inc
cwtl
sbb
xchg
xchg
add
pop
pop
add
ret
push
sub
enter
push
imul
je
dec
rcrb
sbb
fsubl
test
add
test
lret
xchg
mov
push
movsb
jo
subl
jo
jae
cmp
mov
lds
shll
pop
adc
jo
add
push
inc
mov
jbe
out
outsl
push
pushf
push
mov
xlat
jb
es
test
dec
sbb
pushf
jae
mov
sbb
or
dec
dec
xor
xchg
imul
pop
imul
cmp
mov
stos
fisttps
enter
or
mov
xor
push
inc
or
sbb
mulb
fiadds
push
and
in
cmp
xchg
pusha
sbb
leave
push
xchg
mov
push
bound
sub
jo
or
add
adc
ret
std
fsubrl
fs
cmpsl
rcrl
jmp
pushf
xlat
dec
sbb
sub
xor
jb
adc
mov
pop
sbb
xor
mov
sub
cwtl
repnz
jle
push
pop
cmp
sub
imul
ja
cs
xor
inc
add
inc
push
xchg
ljmp
pushf
jae
or
xchg
bound
shrl
and
push
aam
sub
jo
jae
xor
fcmovbe
sbb
test
andl
jnp
sbb
shll
repz
dec
mov
jp
xchg
fs
sbb
pop
ficoml
in
xor
fs
loopne
test
pop
popf
pop
lcall
mov
cwtl
cwtl
stc
and
or
cmpsb
fnsave
sbb
bound
xchg
push
test
cs
push
lcall
sbb
insl
icebp
cmp
inc
es
pop
addr16
jle
aam
pop
scas
ljmp
add
mulb
or
cltd
fcoms
iret
push
inc
mov
inc
sub
dec
and
or
insl
notl
enter
inc
hlt
add
sbb
daa
cwtl
in
out
inc
nop
mov
sub
or
and
sbb
imul
cmp
or
cld
popl
add
fs
jecxz
sbb
add
add
aam
add
sub
cs
add
dec
push
mov
rolb
xor
stos
clc
lea
jnp
add
cmp
ror
add
stos
daa
add
mov
add
fwait
adc
lock
dec
inc
mov
icebp
movsl
jmp
fiadds
enter
xor
inc
sbb
das
adc
push
ret
cmp
iret
cmpsb
inc
out
xchg
sub
inc
push
insl
adcb
stos
adc
jp
es
adc
jne
xchg
xor
pop
push
sub
sbb
push
or
orl
sbb
adc
subl
shl
ja
add
jecxz
xor
daa
push
and
or
and
add
hlt
mov
popa
add
jo
and
pop
lcall
pop
in
mov
pusha
mov
mov
push
pushf
inc
loopne
sub
dec
pushf
sbbb
jo
mov
mov
xor
pop
jecxz
cmpsb
jo,pn
cmp
cs
movsl
sbbl
je
lods
mov
or
push
lock
or
test
and
cmp
pushf
mov
mov
push
push
roll
xchg
sbb
push
jg
cpuid
mov
pop
inc
jge
out
sub
add
xchg
mov
sbb
xor
enter
mov
data16
sbb
xor
aaa
mov
jno
pop
mov
sbb
xor
xorb
pop
cmc
xor
lret
jb
lods
andl
inc
jge
or
sub
pop
stos
js
roll
scas
mov
ret
pop
imul
lods
clc
ljmp
add
jge
das
mov
push
dec
xlat
in
subl
es
in
icebp
add
test
hlt
add
add
bound
mov
adc
iret
push
rcrl
xor
and
rorl
pop
incb
icebp
add
inc
xor
sub
dec
inc
sbb
dec
push
or
cld
fisttps
in
rcrb
push
loopne
out
push
dec
aad
mov
ret
xchg
push
orb
add
add
sub
mov
push
mov
push
enter
inc
adc
rcll
sti
mov
stos
fcoml
sbb
xor
jmp
xorb
test
mov
faddl
enter
jo
lret
mov
dec
jo
push
or
xchg
xchg
or
aad
fldl2t
push
push
popf
cmp
or
lods
outsb
out
push
or
jno
lcall
sbb
push
js
aad
push
dec
push
xchg
adc
cmp
add
xor
mov
dec
pop
idivb
push
xor
sar
fs
loopne
push
xchg
lret
loope
jne
mov
cmp
add
inc
and
mov
fildll
push
pop
btc
dec
jo
xor
mov
xor
add
push
loop
push
push
inc
sbb
dec
fs
sub
cltd
cmp
or
cmp
push
xor
sub
sahf
in
or
add
cmp
rolb
scas
and
dec
ss
fimull
adc
shrb
data16
push
mov
mov
or
mov
dec
push
inc
lret
cwtl
rclb
lcall
jbe
sbb
xor
rol
jp
hlt
cs
int
andb
add
inc
dec
inc
add
mov
cmp
and
mov
push
push
lock
inc
adc
cmp
jno
mov
cmpsb
sub
ss
hlt
icebp
sub
sub
add
pop
mov
xchg
mov
iret
out
push
push
nop
es
call
jmp
lods
and
insb
icebp
lret
call
lret
inc
inc
jae
xor
std
jo
lock
inc
adc
push
and
aaa
cmp
and
sbb
mov
pusha
lret
mov
xor
xchg
loopne
and
add
sahf
subb
xchg
js
cltd
test
pop
in
xor
adc
lds
push
movsl
mov
and
rolb
mov
fisubrl
inc
push
or
inc
aas
mov
or
sbb
sub
mov
push
rclb
xlat
xchg
lods
jnp
in
leave
adc
ss
and
push
xor
push
jge
or
loope
or
mov
pushf
add
or
icebp
das
imul
test
bound
cmp
mov
pop
dec
sbb
pop
xor
mov
pop
mov
push
pop
gs
pop
push
mov
stc
aas
dec
imulb
mov
xchg
mov
outsl
push
pusha
cmpb
dec
jo
pop
xor
xor
adc
hlt
mov
adc
int
push
shll
rclb
dec
shll
add
mov
xchg
lret
add
rolb
sbb
mov
cmpsb
test
pusha
js
pop
lds
into
add
push
dec
cltd
pop
test
std
test
andb
mov
add
and
aaa
sub
jo
in
stos
adc
neg
xor
clc
xchg
xchg
aam
dec
loop
ffreep
incl
stc
sub
sub
inc
hlt
dec
jbe
fdivs
pushf
push
xor
add
test
fwait
lock
pusha
loop
imul
mov
and
movsl
xor
fisubl
mov
sbb
push
add
or
xor
js
int3
sub
mov
cwtl
fnsave
scas
sub
cmp
xor
push
pop
cmp
loopne
dec
push
add
loopne
push
add
rorl
je
or
cmpsb
out
xchg
test
dec
or
sub
mov
lret
sbb
loop
fiaddl
push
movsl
pop
lds
jae
sti
popa
js
nop
sti
sbbl
adc
rorb
xchg
imul
mov
or
test
xchg
ret
shr
inc
outsl
inc
adc
jmp
or
and
xlat
pop
out
cwtl
mov
jge
mov
fwait
push
ljmp
push
insl
add
jae
loopne
or
and
mov
aaa
jl
add
cmp
rorb
jge
lcall
movsb
inc
test
sub
fisubs
add
dec
xchg
movl
addb
js
aaa
test
es
sbb
sarb
pop
add
gs
shll
call
adc
loopne
gs
insb
lock
xor
push
add
sub
ffree
aad
add
mov
cmp
cmp
icebp
or
pop
sbb
cmpsb
jb
cmpb
scas
mov
in
roll
adc
jb
jb
popa
or
xchg
cmp
popf
daa
loopne
xor
outsb
ret
pop
xchg
and
jle
rolb
mov
cmp
push
ds
add
pusha
cmp
stc
setl
mov
data16
inc
mov
addl
or
push
loopne
lea
sbbb
mov
mov
add
stos
cmp
cmp
sarl
loope
sbb
sbb
ss
push
and
mov
inc
stos
or
xorb
pop
movsl
rcrb
cmp
movsb
orb
ret
push
adc
sub
ret
leave
inc
mov
mov
adc
xchg
mov
sub
adc
les
jmp
push
sbb
jb
in
push
sbb
stos
sbb
push
pop
fmull
mov
sub
push
xor
jl
adc
stos
dec
cld
jmp
loopne
xchg
cld
jae
stos
loopne
or
mov
leave
jne
inc
mov
pop
sbb
aam
leave
mov
sub
nop
mov
cmp
sub
jnp
jb
or
adc
xchg
and
test
loope
pop
sarl
rol
pop
mov
add
xchg
cwtl
xor
sub
lock
adcb
mov
mov
les
pcmpeqb
push
mov
inc
lcall
insl
int3
push
sub
cmp
and
mov
push
fs
fwait
add
jo
adc
and
stc
add
xacquire
push
add
sbb
mov
cmp
in
scas
jecxz
xor
mov
xor
mov
cmp
adcl
mov
sbb
jo
subl
aad
fidivrs
jbe
sub
dec
lret
jo
enter
icebp
inc
and
sbb
mov
and
and
jbe
test
cwtl
mov
ret
pop
xchg
jp
popa
int
inc
mov
lds
sbb
dec
xchg
or
enter
adcl
adc
pop
mov
xchg
sbb
scas
sbb
bsf
or
mov
sbb
xchg
dec
loop
xchg
mov
pop
jl
push
lea
push
xor
cwtl
lea
xchg
jp
rolb
loope
sub
cmp
pushf
les
loop
mov
test
jno
and
adc
cs
loopne
fadd
loop
xchg
inc
add
add
stos
and
js
push
xorl
mov
adc
adc
and
push
lcall
es
mov
inc
push
in
xchg
lcall
mov
clc
addl
push
and
push
xchg
stos
push
sbb
jnp
xchg
cmp
push
lods
or
inc
repnz
xor
dec
push
pop
test
push
push
push
or
xor
pop
push
into
xchg
jge
inc
adc
loop
mov
jle
incl
adc
addl
lahf
imul
push
pop
or
mov
test
add
sbb
inc
negb
pop
or
movsl
cmp
xchg
add
pushf
sbb
icebp
xorb
lods
mov
jnp
imul
and
push
push
ss
adc
cld
insl
cmp
add
addl
xor
mov
imul
fiaddl
rolb
scas
data16
mov
and
fldcw
pop
cmp
sub
sub
loope
add
inc
inc
data16
test
and
mov
pop
mov
inc
xor
xchg
clc
lret
mov
mov
dec
or
mov
enter
jl
lock
sarb
jle
push
sbb
stos
pop
inc
cltd
rcl
shll
mov
push
sbb
sub
cmpsl
roll
inc
pop
inc
mov
push
lds
mov
xchg
add
cwtl
add
cmpsl
rolb
xor
test
and
push
shlb
sub
mov
push
cmp
in
push
in
aam
jno
nop
xor
jl
mov
gs
push
pop
andb
fcoml
mov
ljmp
or
and
sub
ret
push
roll
adc
mov
loopne
jb
lock
test
pushf
cmp
sbb
push
xchg
or
outsb
mov
mov
xchg
jnp
idiv
add
pop
or
pop
cltd
push
push
jl
xor
sbb
sbb
or
pop
mov
add
jne
jbe
jl
or
addl
cmp
xchg
jg
cmpsb
inc
in
lods
mov
mov
clc
add
add
mov
mov
ficoml
adc
cmc
lea
pop
pusha
enter
and
adc
dec
push
sub
mov
xor
cli
call
push
xchg
pop
mov
mov
cmpsb
dec
jle
sbb
sub
mov
mov
enter
or
inc
or
or
mov
ljmp
gs
jl
pop
adc
jecxz
cltd
call
add
jo
clts
jo
stos
pop
jecxz
orb
flds
xor
push
xor
test
ret
jns
insl
roll
cmpsl
shrl
jno
into
add
pusha
jo
into
xchg
mov
jo
cmp
addl
rorb
sbb
loopne
pop
push
sahf
mov
xor
sub
cwtl
and
sldt
loopne
and
push
sbb
push
add
andb
rolb
sub
cltd
in
in
mov
xor
xlat
test
out
push
add
add
rcl
cmc
push
add
ret
int3
adc
cmp
sbb
rcr
push
stos
pop
xor
and
adc
add
shr
sub
pop
cmp
xor
shlb
fisubrl
orps
outsl
adc
popf
sub
rolb
mov
enter
pop
rcll
jnp
push
iret
test
xchg
stos
pop
in
das
loopne
enter
cmpsl
push
andl
add
push
xor
lret
push
loope
adc
jns
sbb
mov
sub
scas
pop
xor
xchg
daa
movsb
xor
data16
push
mov
shll
hlt
roll
pop
mov
test
ja
cwtl
mov
jg
add
push
shll
add
test
push
or
mov
dec
rolb
js
jecxz
push
jb
mov
jle
mov
and
ljmp
mov
out
inc
test
aam
or
mov
mov
sub
adc
jb
leave
cmpsl
or
push
jnp
inc
cmc
loopne
test
and
imul
and
dec
inc
shrb
test
push
pop
out
les
pop
mov
mov
or
or
add
add
loope
cmpsl
arpl
sub
jg
adc
xor
and
into
insb
sahf
inc
adc
inc
push
mov
xor
in
cmpsl
xchg
add
fistl
push
subl
sbb
dec
adc
call
arpl
fimull
dec
lea
scas
push
pusha
mov
insb
out
xor
push
pusha
jb
test
mov
je
inc
ret
mov
push
test
pop
inc
loopne
bswap
in
push
ror
sbb
add
adc
ret
out
arpl
xor
sub
inc
mov
sbb
subl
jno
fistl
mov
scas
ret
jae
stos
cmp
xor
scas
cmp
lcall
in
adc
sbb
xchg
mov
mov
sub
lcall
pop
pop
icebp
loop
out
mov
cld
lret
adc
sbb
sbb
loopne
imul
enter
and
addr16
and
pop
std
pop
sub
sbbb
daa
add
ljmp
push
jne
lret
les
lret
xchg
ret
dec
push
or
jae
add
push
mov
sub
push
sub
and
hlt
imul
mov
pushf
stos
mov
out
pop
mov
xchg
xor
ds
mov
sbb
push
and
cmp
pop
xchg
rolb
fcoms
push
mov
xor
addb
ret
mov
push
mov
cmp
push
push
test
jb
xchg
into
addl
mov
ret
mov
adc
or
enter
lds
test
lds
sbb
outsl
sbb
int3
pop
push
jnp
push
das
mov
mov
pop
mov
sub
loope
inc
aam
lods
pop
xor
into
movsb
sub
push
loopne
jp
inc
int
bound
cmp
add
mov
mov
push
pop
cmp
cmp
bound
out
idivb
mov
std
adc
sub
push
add
and
ret
dec
or
fidivrs
xor
and
adc
mov
shl
test
cltd
js
add
or
add
xchg
ja
or
jae
dec
rcll
outsl
push
jle
subb
in
lret
loop
jmp
add
out
push
xchg
filds
sbb
repnz
adc
cmp
inc
xchg
cmp
cmp
xchg
pusha
sub
sub
dec
inc
or
push
lcall
imul
cmp
ret
sbb
sub
mov
rclb
add
adc
in
sub
xchg
and
int3
ljmp
movsb
lcall
sub
and
into
adc
test
push
xor
xor
rcrl
add
sbb
pmullw
adc
ljmp
imull
or
pop
cmp
push
pop
inc
xor
xor
inc
lcall
in
cltd
xor
loop,pn
jmp
sar
test
hlt
repz
inc
inc
loopne
cli
push
sti
hlt
mov
adc
xchg
in
cltd
test
repz
or
hlt
test
mov
mov
fmuls
icebp
pusha
push
pop
push
xchg
or
data16
cli
rolb
hlt
sub
enter
jae
inc
pushf
and
jmp
cvtps2pd
ret
mov
push
add
fmul
inc
enter
dec
push
adc
bound
xchg
jg
mov
mov
cmp
mov
fildll
xchg
or
xor
lret
rcrb
in
pop
mov
fistps
push
cmp
cltd
pop
rep
jo
push
mov
xor
jl
lret
popa
push
int3
pop
adc
pop
das
mov
shll
pop
or
xchg
push
ret
inc
sbb
xor
jns
ret
fidivrl
mov
push
jno
add
sti
mov
xchg
dec
jo
and
cmpsl
adc
cmp
nop
adc
orb
adc
add
or
add
lret
push
sahf
or
fmull
pusha
mov
dec
enter
hlt
pop
xchg
and
out
jne
add
adc
or
insl
and
sbb
scas
inc
xchg
pusha
mov
and
jmp
aam
xchg
ret
sti
in
movsb
popa
mov
adc
lcall
xchg
lret
nop
or
adc
hlt
xor
xlat
push
adc
push
nop
add
int
pop
arpl
pop
push
enter
xchg
jl
jo
popf
mov
jo,pn
shrl
jl
and
inc
or
mov
xor
sbbb
enter
xor
scas
sub
movsb
mov
ret
loopne
fmuls
mov
loopne
or
mul
test
lock
adc
cltd
add
dec
int
sbb
add
jno
cmp
loopne
mov
je
movsb
add
mov
mov
or
xchg
mov
add
mov
inc
arpl
pop
inc
or
pop
inc
push
mov
xchg
loop
jb
movsb
pop
xor
idiv
shrl
add
clc
and
pop
inc
and
cmpsb
xchg
mov
pushf
or
jmp
pushf
rcrb
or
ss
cltd
mov
cmp
subb
mov
mov
or
or
cmc
stos
stos
fcompl
pop
sub
or
or
add
pop
mov
pop
lcall
negl
aad
jae
out
jo
xlat
push
lods
aam
inc
push
xchg
loope
das
pop
push
sub
push
mov
fisubrs
pop
lret
xchg
ret
ss
pop
mov
orb
or
sbb
sub
nop
push
push
out
scas
lret
popa
hlt
rcll
push
push
sub
push
cmpsl
mov
and
lea
ljmp
jno
push
xor
inc
sub
add
test
daa
or
rorl
jb
jno
mov
movl
popf
xor
add
stos
xor
mov
sbb
loopne
cltd
mov
cmp
adc
pop
into
gs
dec
add
xchg
jecxz
mov
add
inc
jo
cmp
xor
outsb
mov
or
inc
int
sbb
add
das
mov
sbb
adc
xor
je
roll
into
loopne
rclb
clc
outsl
cmpsb
outsb
push
repnz
sbb
and
mov
imul
adc
lods
movl
push
push
inc
std
les
lds
cli
aas
pop
xchg
mov
fs
mov
adc
into
xor
mov
cmpb
popa
in
enter
pop
push
sbb
hlt
cmpb
xor
pop
mov
xor
inc
sub
pop
sbb
jno
fimull
popa
sbb
loope
cld
mov
dec
addb
out
add
cmc
dec
jecxz
sbb
xor
shlb
lds
ret
adc
and
sub
xchg
inc
or
dec
jg
jo
and
mov
adc
cmpsb
adc
push
mov
popf
sbbb
push
cmp
orl
stos
xchg
shll
mov
addl
mov
mov
or
mov
add
push
adc
push
adc
inc
add
mov
adc
lret
test
adc
out
out
or
pop
xor
addr16
insl
movsb
sti
loope
add
lds
push
orb
add
mov
std
xchg
lods
sbb
int
jmp
cvtpi2ps
es
out
imul
jg
and
std
sbb
push
sbb
push
adc
push
push
cmpsb
push
fidivl
mov
sbb
adc
add
lock
test
gs
jae
add
or
cld
inc
or
and
cmp
fwait
outsl
add
decl
enter
adc
add
insb
jae
lock
stos
dec
adc
push
sbb
add
or
rorb
add
bnd
pushf
sub
push
mov
xchg
movsl
cmpsl
sbbb
jo
subb
test
inc
lea
push
or
push
pusha
or
or
ss
push
sub
movsb
daa
push
jne
mov
scas
xor
inc
mov
or
push
mov
sti
push
mov
adc
loope
add
jmp
sub
jns
pop
inc
or
je
cmpsb
dec
in
scas
fildl
mov
push
xor
push
das
sbb
in
jp
xor
or
inc
lret
imul
xor
and
or
arpl
pop
loope
lds
data16
sbb
dec
ret
add
std
pop
scas
setae
subb
cmc
push
dec
iret
dec
gs
dec
imul
out
lods
mov
jo
xorl
fsubrl
sbb
les
ror
inc
int
mov
popa
xor
push
or
sbb
add
or
mov
jmp
inc
add
loopne
popf
call
loopne
jg,pn
cmp
test
lock
inc
jge
pusha
mov
jl
cwtl
mov
xchg
mov
out
add
test
pop
inc
jb
sbb
sti
leave
loope
mov
and
rorb
pop
pop
inc
movsb
ficomps
movsl
aad
sbb
inc
std
fistpll
pop
ljmp
mov
mov
jl
sub
push
pop
out
pop
mov
inc
js
add
push
adc
push
adc
sarl
xor
iret
dec
fbld
das
add
sbb
and
arpl
filds
enter
cwtl
add
sub
cld
ja
and
pop
shrl
filds
mov
pop
dec
rcrl
push
rclb
sub
sub
repz
or
add
cwtl
clc
or
xchg
lea
add
aad
add
sbb
jmp
addb
and
push
xor
fwait
add
lret
popa
mov
or
xchg
scas
adc
and
bound
and
lret
bound
mov
mov
add
mov
add
adc
mov
pop
jae
dec
mov
jno
inc
jo
push
push
jae
cmp
or
or
dec
mov
sti
jns
sbb
movsl
pop
rorl
pop
pushf
jge
or
dec
push
mov
ret
lret
xor
pushf
test
inc
jae
icebp
fildll
inc
and
dec
dec
mov
and
add
ret
and
jge
inc
lret
sbb
nop
push
or
xor
and
add
mov
aam
cmp
sarb
cs
push
jae
jno
call
lret
shll
xor
pop
add
loopne
push
or
roll
add
inc
call
jb
push
out
out
cmp
jne
xor
das
insl
hlt
xlat
or
popf
dec
pop
adc
add
and
mov
xchg
in
lret
adc
push
jb
test
inc
addl
cmp
lea
jae
push
mov
lds
add
test
jo
push
outsl
add
sbb
aas
and
push
mov
cltd
jb
test
inc
gs
fwait
jae
hlt
imul
pop
int
mov
push
adc
add
adc
pushf
inc
adc
jle
push
sub
call
adc
push
pushf
clc
call
nop
sbb
push
sbb
push
iret
int
push
xor
or
sbb
rorl
sbb
xor
pusha
lcall
or
xor
or
movsl
mov
loope
inc
in
inc
nop
in
mov
mov
push
mov
xchg
cmp
or
repz
rclb
filds
int
mov
mov
ss
xor
adc
int
jnp
xchg
and
push
dec
pop
cmp
push
mov
jl
in
xor
or
lock
pusha
jo
test
mov
andl
cmpsl
or
add
mov
arpl
insl
sbb
xor
jmp
rolb
jo
and
jl
jecxz
daa
pop
sub
enter
andl
or
push
jne
dec
orl
mov
inc
cwtl
jg
popa
ja
adc
inc
je
es
xchg
icebp
or
and
pop
cmpsl
sub
jns
add
les
xor
stos
cmp
divl
scas
or
inc
cltd
stc
xor
jbe
scas
add
jae
push
push
mov
ficomps
inc
std
stc
int3
sub
inc
cmpsl
pop
push
cmp
shll
jne
add
mov
daa
inc
cmp
pop
and
and
lods
cmp
stos
or
adc
or
and
xchg
cmp
mov
inc
fwait
sub
les
rclb
pop
dec
arpl
cmp
cltd
inc
push
add
inc
fcomps
stos
insb
xor
in
sub
sbb
sub
and
movsb
into
xchg
or
icebp
pop
scas
sbb
or
mov
jb
sahf
outsl
push
jl
into
add
sub
adcl
test
xorb
mov
add
stos
stc
leave
mov
push
imul
sub
test
sbb
clc
mov
sub
mulb
push
xor
push
shl
adc
aad
test
push
scas
push
scas
add
sbb
or
daa
loope
xlat
sub
popa
shlb
xor
pop
enter
add
stos
push
cmp
or
sbb
pop
loope
push
fwait
and
push
int
push
mov
icebp
test
xchg
aaa
xorb
ja
cmp
pop
sub
aad
xchg
jo
in
add
cs
jnp
dec
jg
add
enter
inc
rcr
add
cltd
xor
or
push
test
cmpb
movsb
mov
mov
in
add
pop
adc
push
orb
fisubrl
js
pop
xchg
lods
pop
and
test
push
mov
pop
and
mov
loope
pushf
mov
outsb
gs
and
adc
adc
shll
rorb
aad
and
xchg
and
jmp
andl
test
push
xchg
scas
push
in
outsl
xchg
and
cmp
pop
leave
xor
cwtl
ds
outsl
and
mov
fdivs
jo
sub
add
inc
sbb
dec
jl
aaa
or
int3
cmovno
call
add
inc
mov
fwait
sub
dec
insl
or
call
sahf
inc
loopne
adc
add
mov
push
into
pop
fistpl
add
les
adc
cmp
pushf
sub
icebp
sar
mov
mov
or
fiadds
and
push
push
push
push
in
fildll
push
icebp
push
sbb
adc
loopne
loopne
add
add
mov
jecxz,pn
pop
cmp
sbb
rolb
mov
or
movsl
fsubrs
loope
cltd
loop
xchg
push
in
push
xchg
sbbb
cwtl
or
mov
ljmp
push
mov
xchg
sbb
push
push
sub
int
negl
xor
add
or
test
loopne
cmp
add
jo
lcall
xor
pop
je
fcomi
jne
adc
out
inc
xor
and
or
or
shll
idivl
add
dec
add
jo
bndldx
pop
add
test
je
xchg
push
pop
icebp
and
xor
scas
mov
jb
xchg
ret
add
pop
in
stos
push
jmp
sub
sub
adc
adc
inc
pusha
inc
mov
in
add
and
jo
fisttpll
xchg
lods
jb
fimull
cmp
mov
cltd
mov
push
out
mov
test
inc
sbb
sub
sbb
jmp
sbb
add
push
sbbb
and
xchg
xchg
add
dec
outsl
add
in
xchg
add
fcom
in
aam
push
aaa
inc
sarb
add
idiv
add
push
sbb
push
js
cmp
in
mov
or
push
inc
dec
movsl
int
aaa
filds
inc
andb
adc
inc
subl
lahf
mov
or
fiadds
mov
fimull
mov
pusha
or
into
lcall
jno
ret
mov
sbb
mov
add
cmpsb
inc
mov
rol
dec
insb
mov
cmpsl
sub
inc
sub
sbb
mov
sbb
xor
push
adc
popl
pushf
mov
mov
out
ds
xchg
ret
rolb
cmp
xor
xor
mov
and
add
xchg
fistpl
dec
sub
leave
pop
cmp
jecxz
cmp
aam
xchg
xchg
xorl
cmpsl
fisubs
add
mov
mov
and
cmpsb
push
inc
push
roll
mov
push
cmovne
gs
dec
push
sahf
imul
pop
aad
pop
outsb
dec
ja
js
adc
and
pop
sbb
lods
xlat
stc
shrl
or
mov
addl
test
and
rorl
in
std
mov
ljmp
mov
dec
pop
xchg
roll
stos
add
loopne
xlat
xchg
sbb
xchg
mov
rclb
andl
in
pop
add
mov
dec
or
pop
sbb
mov
sti
mov
ljmp
ljmp
pop
cmp
adc
xlat
es
lods
call
push
decl
ja
outsb
int3
mov
cmp
xor
jbe
add
xchg
add
cmpsb
in
andl
jae
mov
and
cmp
jp
push
jmp
sbb
mov
mov
mov
push
ret
mov
push
or
jb
or
or
pushf
sub
rorb
sbb
mov
and
push
mov
out
pusha
stos
cltd
mov
push
or
dec
pop
pop
add
mov
imul
sub
fildl
sbb
add
pop
inc
cmp
leave
add
or
xor
pop
pusha
rolb
cwtl
dec
jae
dec
jns
push
mov
stos
or
pop
int
add
loop
pop
mov
mov
popa
jp
inc
sarb
jg
adc
lcall
inc
xor
push
mov
int
sbb
add
icebp
add
push
cmp
sbbb
leave
aas
sahf
mov
lret
imul
inc
daa
mov
dec
xchg
daa
enter
pushf
rcll
sbb
and
and
addr16
popf
xchg
lret
cmc
loop
mov
or
and
adcb
xchg
xorl
dec
pusha
mov
inc
push
adc
adc
xlat
push
or
xor
add
mov
add
xchg
sub
add
movsb
dec
xor
xorb
add
cmp
pop
mov
inc
ds
ds
add
xchg
repz
push
push
adc
add
pop
or
ljmp
push
push
je
push
pop
inc
hlt
loopne
pop
adc
outsl
rcl
adc
dec
mov
dec
cpuid
mov
xor
cmp
ss
call
mov
push
aas
test
repnz
lcall
xchg
xchg
dec
sub
cmc
in
mov
mov
inc
movsb
xchg
pushf
mov
add
cmp
subb
es
sbb
adc
inc
push
add
je
into
push
or
movsb
std
subb
sahf
movsb
fldl
push
add
and
sub
fwait
add
sbb
push
jno
or
mov
xchg
out
data16
inc
add
stos
sub
negl
cmpb
push
add
test
add
inc
push
add
and
add
push
into
push
les
shrb
mov
cmp
xor
inc
rcll
aas
inc
rorl
xchg
cmp
rcrl
push
stc
xor
cmp
xorb
sbb
in
call
je
mov
inc
mov
xchg
jae
rol
ljmp
and
mov
stc
adc
inc
inc
jle
xor
lcall
xor
loopne
push
push
popa
lds
mov
cmp
push
inc
out
add
pop
jbe
push
test
inc
sub
scas
jne
rcrb
add
jo
xor
pop
and
pop
scas
ret
inc
loopne
pop
aas
add
add
mov
jno
adc
mov
sbb
mov
jnp
sbb
and
ljmp
sbb
sub
jge
icebp
mov
push
adc
pushf
in
stos
jo
test
pop
inc
xorl
out
inc
int
adc
ret
add
inc
add
inc
jno
mov
es
adc
rolb
sqrtps
fs
into
adc
in
cmpb
adc
or
testb
push
inc
jae
add
adcb
je
sbb
and
in
push
inc
rolb
add
loope
psubusb
xchg
inc
mov
dec
orl
xor
or
fnstsw
cmp
iret
popf
mov
call
xchg
add
pop
inc
cmp
repnz
inc
jae
fcomi
mov
das
test
add
ja
pop
adc
mov
sub
jne
xor
shlb
jo
pusha
jb
cmp
aad
push
lods
inc
sub
add
lea
adc
pop
push
jge
push
mov
push
orb
je
sbb
adcb
cmpsl
sub
xchg
test
xchg
push
mov
inc
jge,pt
cwtl
test
icebp
sub
pop
roll
push
or
fadd
or
xorb
inc
adc
test
int
xchg
ret
cmp
push
mov
lcall
arpl
add
xchg
xor
mov
sbb
inc
xor
add
stos
cmpsb
stos
cmp
rclb
mov
jae
xor
add
and
inc
andb
incl
scas
sbb
pushf
pushf
aam
bound
lret
and
push
imul
inc
adcb
pop
mov
add
adc
pop
cmp
adc
add
or
push
in
aaa
mov
sub
add
mov
inc
adc
enter
mov
imul
faddl
push
jne
cli
cli
ret
jb
adc
sub
sahf
int
in
pusha
xorb
aam
add
jne
sbb
mov
mov
push
inc
aad
fisubrs
add
test
push
cmp
sbb
jnp
scas
add
iret
xchg
test
jp
xchg
xchg
insl
faddl
xlat
push
lret
push
sub
jle
scas
hlt
add
sbb
add
jo
int3
or
lcall
jne
add
inc
add
jno
jl
push
push
shrl
ret
xchg
and
movsb
lods
ljmp
jns
shl
subb
pop
test
cmp
mov
daa
test
xor
add
or
add
adcl
sub
scas
or
adc
hlt
xchg
add
loope
dec
ficompl
rol
push
push
ret
pusha
sbb
jbe
dec
pop
aad
or
jae
cmp
mov
dec
pop
shlb
xchg
lods
and
mov
lcall
adc
mov
mov
mov
sub
int3
adc
sub
scas
mov
or
ja
inc
adc
testl
lods
sbb
dec
cmpsb
push
aad
jb
push
sub
xchg
mov
fsub
push
adcb
data16
xchg
pop
lods
adc
push
jbe
addl
dec
add
push
cwtl
jo
push
fldcw
sub
push
and
push
sbb
inc
lcall
orl
movsb
outsl
or
in
cmp
stos
fisubrl
xchg
xorb
hlt
icebp
jo
int
cmp
cmpsl
and
test
mov
cmp
cs
cmp
mov
dec
mov
test
inc
pushf
pop
mov
mulb
stos
sbb
ret
mov
icebp
andb
mov
cmc
or
inc
mov
shll
mov
xor
mov
cmp
xchg
inc
push
jo
lcall
add
mov
repnz
xchg
stos
push
cltd
es
cmpsl
ret
cmp
add
add
pop
cltd
lcall
jo
subb
inc
mov
push
adc
adc
cmp
flds
loop
sub
cs
fistpl
and
cli
call
jge
pop
imul
lahf
cmp
ficompl
inc
add
adc
mov
pop
mov
int
in
push
jns
xchg
push
pop
mov
inc
pusha
jb
sub
int
mov
cmp
xchg
jg
outsb
add
adc
inc
mov
pop
add
cli
pop
loope
lcall
sbb
pop
or
inc
rorl
cltd
shll
xor
xor
inc
popa
mov
dec
push
cmp
push
inc
cmp
adc
pop
pushf
stos
cltd
jo
sahf
cmp
and
sbb
into
cmpsb
adc
inc
cs
rcrl
aam
mov
imul
dec
adc
nop
xchg
jb
std
add
sbb
pop
push
test
cwtl
jo
aaa
adc
mov
push
push
sarb
cmp
sbb
inc
sub
shrl
mov
scas
das
inc
ss
outsl
sbb
mov
add
sub
push
push
xchg
xor
add
push
adc
xor
mov
movsb
sbb
sbb
xor
mov
ret
pusha
inc
xchg
repz
sub
es
mov
and
sbb
or
xchg
pop
shll
mov
mov
jno
xchg
xorl
pop
xor
push
push
adc
or
fidivrs
dec
fiaddl
add
mov
sbb
or
cmp
or
imul
dec
sub
out
in
mov
dec
sbb
cmpsl
sbb
in
inc
add
cmp
ret
gs
push
sub
cwtl
sub
int
xor
inc
cmp
nop
or
cmc
cmp
push
jae
mov
inc
inc
mov
rcrb
ljmp
cli
lods
in
leave
xchg
fwait
addr16
es
mov
inc
xor
or
stos
movsl
jg
xor
and
mov
xor
cld
cs
cmpsl
sbbb
or
mov
sub
inc
adc
add
push
jg
test
jecxz
jbe
sbb
push
adc
ret
adc
mov
test
cltd
pop
inc
cmp
jb
jo
inc
fs
inc
scas
mov
push
gs
rorl
cmp
cli
mov
cltd
mov
cmp
mov
cld
dec
or
mov
aaa
and
xchg
cmpsl
xor
gs
push
into
aam
bound
int
adc
xor
xchg
mov
xor
jmp
push
imul
std
mov
imul
mov
scas
push
fs
pop
mov
inc
or
repz
xor
xchg
insb
jne
push
or
rcrl
push
add
lock
cmp
dec
inc
lcall
mov
push
jae
sbb
fcompl
cltd
inc
add
add
adcb
add
xchg
sahf
cld
icebp
push
aam
xchg
in
test
jns
dec
and
or
lcall
lock
sbb
dec
and
inc
je
inc
mov
push
mov
add
push
cmp
xchg
xorl
mov
lahf
xor
daa
call
icebp
sub
insl
addb
shrb
ret
xchg
jbe
shl
inc
push
push
es
jbe
xor
adc
inc
push
push
repnz
pop
shrl
mov
lds
mov
or
add
es
cwtl
inc
mov
jb
pop
xchg
or
mov
xchg
pop
mov
lcall
xor
lods
mov
inc
add
in
cld
jno
out
push
jae
ja
bound
inc
sbb
push
or
or
adc
mov
subl
inc
mov
nop
push
pop
lcall
movsl
jbe
cltd
or
or
popa
adc
aas
push
js
icebp
xor
xor
fwait
mov
or
adc
mov
add
gs
xor
xlat
scas
xlat
inc
sbb
daa
sbb
rorb
xchg
and
mov
cmpsb
in
fs
pop
mov
cwtl
movl
out
mov
sbb
mov
sub
push
and
add
inc
push
sbb
stos
jbe
mov
xchg
outsb
fistpll
cltd
lcall
gs
xchg
add
loopne
push
andl
or
lds
leave
mov
mov
fadds
mov
ljmp
xchg
sbb
pop
push
xorl
and
adc
ret
or
sbb
clc
or
sbb
ja
test
decl
fsts
inc
sbb
push
fcompl
or
mov
loopne
mov
fisubrl
xor
repz
or
cmp
jmp
out
inc
jmp
pop
mov
mov
stos
addr16
loopne
int
cwtl
stos
push
mov
and
sbb
sub
cmp
adc
mov
mov
ret
ret
push
xchg
xor
or
dec
sub
mov
cmpsb
pop
xchg
adc
or
pop
add
lret
inc
jne
js
shrb
stos
cmp
xchg
rol
and
loopne
mov
andl
orl
cmp
push
pop
push
insb
push
add
lret
jns
outsl
push
mov
sahf
mov
in
je
rcl
je
push
inc
pop
into
das
mov
lods
loopne
jb
and
popf
pop
jne
or
add
out
ljmp
xorb
mov
push
xor
add
xchg
dec
mov
shrl
into
inc
pusha
les
sbb
and
nop
leave
xor
fs
push
sub
stos
lret
cmpb
jl
rcrl
test
sbb
ljmp
andl
cmpsb
sbbb
gs
fisubrl
adc
or
stos
xor
roll
and
les
add
push
sub
mov
outsb
add
or
mov
or
inc
push
popa
xchg
mov
inc
dec
lds
cmp
lret
and
pushl
sbb
mov
enter
sub
sarb
xor
mov
sbb
push
call
std
pop
int
jb
lret
jbe
stos
sbb
xchg
push
cld
add
add
loopne
cmp
or
adc
xor
loop
push
push
aas
push
sbb
xchg
sbb
in
in
push
xchg
sub
xor
cltd
or
into
fs
sub
dec
sub
arpl
adc
add
pop
pop
pop
jno
mov
sbb
stos
out
pop
and
sub
loope
test
push
je
aad
scas
sub
inc
and
or
icebp
inc
aam
imul
dec
mov
int
or
shll
add
sbb
pop
aam
or
sbb
aad
data16
cmp
lret
data16
sub
mov
pop
or
jo
dec
ret
cmp
add
or
jo
aaa
test
xchg
cmp
push
icebp
dec
add
xor
add
jmp
and
or
enter
xchg
rcrl
rcll
adcb
or
dec
cmpsb
mov
cwtl
and
mov
aas
addr16
cmovno
and
or
jo
sbb
das
pushf
or
pop
inc
std
add
jg
jbe
or
test
dec
movsl
imul
xchg
and
inc
gs
or
out
roll
aaa
shrl
and
mov
out
mov
dec
je
lds
mov
adc
xor
xor
mov
cs
cmp
push
xor
cmc
js
scas
or
adc
xorl
pop
sbb
rcrb
cmovl
xor
outsl
movsl
js
add
pop
sub
sbb
or
or
push
sub
mov
sbb
sahf
push
mov
dec
and
pop
xchg
push
dec
and
lret
popa
fs
push
push
xlat
aad
xor
insl
ret
and
xor
xchg
leave
pop
ficoml
stos
sbb
jno
mov
inc
push
inc
inc
add
and
xorl
mov
popa
loope
aam
rol
jae
pop
lods
addb
mov
jnp
inc
xlat
pop
push
fistl
movsb
cmp
lret
mov
js
stc
fistps
data16
cli
jl
cmp
mov
adc
mov
or
pushf
or
sub
push
jne
add
cmpsl
mov
sub
sbbl
xchg
add
jo
stos
add
xchg
sub
js
dec
enter
stos
mov
push
push
sbb
dec
push
out
lret
mov
ret
test
ja
sbbb
roll
xor
mov
mov
jae
gs
or
andb
inc
pop
pop
inc
ret
add
pushl
add
movl
push
pop
xor
popf
adc
xchg
test
pop
fs
add
dec
mov
or
push
sbbb
subb
pop
cmp
sbb
cli
test
lret
cmp
or
xchg
or
add
js
jb
ja
add
mov
sbb
test
daa
nop
sub
scas
mov
adc
sbb
inc
dec
xor
loopne
jb
lcall
cmp
mov
jp
sub
cmp
sbb
jno
mov
pop
pop
gs
fildll
cmpsb
xlat
notl
adc
andb
scas
fdivrs
mov
test
in
adc
dec
adc
in
cmp
jmp
sbb
cmp
orb
xchg
jae
mov
xchg
cmpsb
jb
add
add
mov
push
xor
dec
push
dec
dec
xor
pop
xlat
inc
mov
xor
push
sub
mov
andb
cmp
sbb
xchg
mov
mov
inc
xor
pop
pop
jae
mov
push
and
dec
testb
pop
xor
adc
jno
add
and
and
cs
adc
xlat
or
or
mov
push
sbb
rorb
cmpsb
adc
inc
lds
add
aam
ret
mov
push
loopne
nop
sub
inc
push
xchg
fiaddl
imul
mov
sbb
dec
add
or
cmp
std
push
nop
test
sti
icebp
adc
lds
sbb
push
cs
mov
fst
mov
xor
add
push
in
cmp
repz
call
adc
mov
jno
rcrb
pushf
sarl
xchg
and
push
xchg
js
sbb
js
add
cwtl
adc
into
adc
xchg
ret
pop
leave
push
addl
or
cmp
sbb
dec
shll
pop
jb
or
popa
xor
push
mov
sub
adc
pop
popa
and
add
sbb
mov
mov
jl
xchg
lret
jno
bound
or
aam
test
mov
scas
mov
mov
jae
lret
or
repz
and
inc
pop
fadd
and
push
js
sub
dec
adcb
sbb
push
push
push
and
mov
mov
jne
stos
xor
sbb
sub
in
xor
sbb
dec
movsb
pop
popl
or
and
add
mov
sub
sub
jb
mov
fisubrl
push
mov
pop
mov
pusha
add
mov
sub
add
mov
pop
or
das
inc
test
lcall
into
sbb
nop
cli
outsl
mov
lds
pop
push
push
xorl
jmp
push
adc
call
js
mov
inc
mov
cli
inc
push
mov
add
je
lcall
test
arpl
and
pop
ret
lock
mov
cmc
mov
jb
and
mov
push
mov
adc
int
addb
loopne
popa
fsubl
int
lret
jnp
ret
jl
xor
xchg
sub
adc
inc
fisttpl
out
cmp
push
xchg
imul
pop
push
dec
inc
pop
lcall
aas
bnd
push
sbb
add
xor
pop
roll
je
enter
ret
out
pop
inc
sarw
jecxz
aam
pop
xor
jb
mov
mov
mov
inc
hlt
lods
add
cmp
aad
cmp
and
lods
sarb
xchg
pop
popf
cmpsl
jno
shrl
push
or
lret
pop
xchg
mov
dec
jmp
shll
ss
pop
pusha
clc
and
movsb
xorl
xor
inc
adc
popl
in
inc
xchg
lret
or
sbb
push
pop
sub
inc
mov
adcb
rolb
adc
int3
adc
lcall
jns
loop
aad
adc
mov
repnz
rorl
push
jns
pop
sbb
adc
ror
into
test
daa
push
cs
pop
sbb
adc
push
inc
lods
jae
xor
add
push
lahf
js
mov
cmc
jg
mov
or
mov
inc
adc
aam
mov
movsl
retw
cld
fidivrl
loope
xchg
iret
lret
cmp
aas
mov
lret
cmpsb
lea
cmp
inc
jmp
leave
addb
jp
inc
xor
mov
sub
rcll
add
in
pop
out
dec
inc
add
xor
sub
jle
pop
mov
dec
mov
sbb
inc
nop
jne
add
jl
ret
adc
insl
jbe
pusha
jb
in
inc
pushf
and
in
mov
xor
xchg
sbb
test
cli
mov
mov
adcb
or
xchg
mov
aam
push
mov
jno
add
cmp
aas
in
pop
mov
ds
jo
jb
stos
sahf
lret
add
push
out
pop
mov
cmp
pushf
add
shlb
lret
pop
xchg
inc
and
repnz
mov
push
xchg
push
subb
or
icebp
xlat
sub
cmp
into
inc
adc
push
xlat
push
imul
rorl
adc
test
lds
enter
sbb
enter
mov
or
jb
adc
push
repz
jo
add
cmp
or
cs
xor
jge
js
push
xchg
stos
dec
icebp
mov
cmpsl
push
sub
dec
cmp
sbb
mov
fidivrs
aad
enter
mov
push
test
fstl
cmp
ds
sahf
or
and
test
sbb
out
jo
cmpsl
stc
ret
loopne
ret
es
sbb
push
or
dec
inc
into
push
xchg
cmp
gs
xchg
imul
or
rorb
out
xchg
jae
jo
mov
in
inc
push
adc
jl
cli
imul
xchg
scas
dec
scas
jmp
cwtl
cmp
pop
xlat
pop
cmpsb
xor
jb
aad
mov
cmp
adc
cmp
xor
inc
sub
inc
lods
addl
adc
pop
xchg
filds
add
pop
mov
shrl
sbb
push
outsl
inc
jae
xchg
ret
test
test
inc
xchg
push
loopne
xchg
inc
adc
adc
in
push
add
pop
and
adc
or
insb
rclb
adc
rolb
clc
sbb
jle
or
mov
loope
xchg
mov
sbb
add
adc
adc
xor
dec
repz
mov
rolb
fstpl
cmp
cld
imul
xor
jbe
mov
orb
dec
inc
mov
adc
push
jecxz
cltd
push
jg
or
or
cmp
or
push
dec
jmp
les
fldt
mov
pop
xchg
std
jb
mov
mov
and
sbb
dec
es
and
xchg
enter
jbe
sbb
or
loopne
mov
insl
and
sub
sub
stos
out
aaa
nop
push
cli
test
add
jmp
subb
pop
cmp
loopne
lock
sbb
or
hlt
mov
out
push
jbe
xor
in
xchg
inc
push
mov
push
in
dec
popa
ljmp
mov
sbb
test
mov
leave
jecxz
addb
jle
xor
shl
mov
loopne
mov
lahf
adcb
push
mov
add
add
sbb
int
jb
push
xchg
dec
pop
jne
add
inc
int
xor
jge
push
daa
or
rcrl
or
push
or
inc
in
jb
aaa
add
js
test
adc
leave
lods
xor
adc
push
sbb
mov
sub
inc
cli
push
pushf
push
pop
mov
mov
inc
xor
test
cmp
out
fs
imul
fs
add
sar
xor
jo
pop
enter
movb
add
mov
or
xor
adc
add
cmp
add
les
test
inc
addr16
popf
mov
subb
int
dec
xor
dec
jno
jno
or
jb
xlat
divb
dec
add
lcall
pop
pop
outsl
push
cmp
pop
mov
xor
pop
test
sbb
sbb
and
or
mov
mov
or
cmp
pop
pusha
inc
lcall
imul
js
aad
mov
or
pop
adc
movsl
push
xor
lahf
pop
das
mov
call
push
cmc
mov
mov
or
push
pop
sub
cs
mov
rclb
mov
test
cli
mov
out
add
cs
loope
jecxz
and
sbb
pop
cmp
ds
mov
aad
ljmp
push
sub
scas
sub
pop
aad
ja
pushw
xor
add
adc
jo
loopne
shl
pop
and
cld
pop
stos
out
pop
push
cmpsb
cmc
xor
divb
addb
cmp
and
and
pushf
and
add
xlat
add
shrl
add
xchg
jb
out
je
mov
add
popa
sub
int
mov
push
loop
in
add
xor
inc
xchg
jne
sbb
cmpsb
into
push
mov
cmp
xor
insl
fs
dec
adc
insl
sub
and
inc
xor
sbb
mov
xchg
xor
inc
push
shll
and
mov
dec
sbb
cmp
mov
push
das
outsl
fisttpll
cli
seto
popa
mov
aaa
add
dec
cwtl
fsubs
ficomps
stos
or
test
xchg
adc
das
mov
jmp
and
push
or
pop
sti
mov
sbb
push
cmp
pavgb
cmp
xchg
cmp
xor
test
cmc
xorb
pop
out
leave
sub
inc
inc
mov
pop
cs
and
or
daa
int
pusha
mov
adc
jae
cltd
js
and
rorb
fucomp
nop
pop
icebp
ljmp
push
xorl
xor
rorb
sub
popa
xchg
cs
test
popa
mov
cmp
pusha
pushf
or
les
add
and
out
add
shll
icebp
xchg
adc
xchg
test
sbb
pop
sub
les
mov
ret
xchg
add
pop
push
int
mov
iret
jle
sbb
xchg
inc
and
jb
insb
dec
cwtl
or
gs
push
lds
dec
roll
add
ret
adc
adc
inc
icebp
pop
pop
mov
cmp
sub
mov
mov
orb
pop
inc
jae
shl
cmp
clc
push
scas
mov
shl
push
push
sti
and
xchg
and
jne
outsl
jo
mov
enter
sbb
adc
push
add
push
sbb
ret
jb
add
jp
sub
mov
adc
inc
mov
pop
sbb
sbb
pop
jae
jecxz
mov
cmc
cwtl
cmp
or
outsb
add
or
mov
adc
fldl
inc
pushf
mov
adc
dec
in
sub
xchg
in
jb
sub
addb
push
jne
test
in
ss
lods
mov
adc
add
inc
cmpsb
ficoml
mov
adc
push
sbb
push
shlb
out
add
or
inc
mov
enter
les
add
imul
adc
xchg
sbbl
xlat
int
dec
push
xchg
jo
repz
add
pop
mov
loope
scas
dec
mov
and
inc
xchg
ss
sbb
jno
loopne
add
push
mov
stos
mov
popf
xor
sub
into
fstps
ja
or
or
push
add
or
adcb
add
inc
lock
pop
lods
jno
loopne
gs
sti
sbb
add
lds
es
jp,pn
jnp
pusha
jb
js
dec
lea
mov
add
fwait
inc
push
cmpsb
push
push
cmpsl
rcrb
imulb
lea
sbb
push
testb
adc
mov
xchg
mov
pushw
test
or
lcall
sbb
jg
lods
arpl
and
cwtl
or
mov
xchg
fldt
sbb
adc
dec
roll
mov
inc
lret
add
mov
hlt
addr16
loopne
xlat
sbb
pop
sub
or
imul
das
mov
push
repz
in
mov
dec
icebp
das
xor
sbb
lcall
jp
rcl
mov
mov
cmpsl
repnz
pop
inc
test
stos
jne
push
add
stos
cmp
inc
mov
scas
es
pop
test
jb
js,pn
test
enter
cmc
mov
loop
mov
sbb
rorl
push
mov
ja
pop
adc
dec
aam
sbb
inc
aam
int
dec
test
lret
cmc
hlt
outsl
add
add
stos
out
sub
mov
or
inc
adc
mov
push
loopne
mov
stos
or
pxor
xchg
leave
loopne
cld
stos
xor
inc
rol
add
shll
push
nop
subl
insl
push
pop
push
pop
rcr
sub
mov
or
in
push
mov
mov
popf
stc
push
jo
jge
or
ret
add
cmovg
movsb
lret
cmpsb
push
push
xchg
jnp
sti
mov
add
ret
shl
xor
addr16
fsubl
cmpsb
lods
xor
sub
pop
jg
icebp
pop
inc
cmp
loopne
adc
mov
insb
xchg
rcll
daa
fildl
pop
adc
xor
mov
in
data16
sbbl
test
jp
loopne
mov
jo
cmp
shrl
lret
sbb
pop
push
jae
popa
xlat
cli
rcrl
add
adc
mov
mov
cs
sbb
fs
lret
mov
addr16
add
test
mov
movsb
bound
jns
cmp
dec
cltd
fimull
add
decl
in
and
cmp
mov
add
stc
pop
repnz
out
iret
mov
add
sahf
pop
or
add
mov
lret
outsl
add
push
xor
cmp
jae
push
test
shr
jo
dec
push
pusha
and
loopne
sbbl
scas
inc
add
outsl
dec
bound
sbbb
and
xorl
and
add
mov
ror
inc
mov
rolb
mov
cs
icebp
jo
xchg
xor
cmc
scas
or
jo
je
pop
sbb
push
jae
in
arpl
sbb
in
mov
sbb
mov
loope
sub
xor
push
xor
xchg
aas
pop
inc
icebp
call
test
xor
add
clc
aaa
fsts
addr16
xchg
jecxz
test
mov
mov
or
js
add
insl
jge
add
outsb
jno
push
push
xor
xor
inc
jp
mov
add
push
and
push
or
inc
clc
lock
scas
data16
mov
cmc
cmpsl
sbb
xchg
cmpl
push
add
add
sbb
cli
jo
andl
xchg
scas
arpl
jb
xor
dec
or
jne
repz
js
enter
adc
push
loop
stos
add
icebp
or
loopne
push
fwait
addb
stos
adc
ret
pop
movsb
shr
jp
push
and
mov
scas
dec
xchg
les
push
es
push
or
inc
cwtl
loope
cwtl
add
mov
xor
push
outsl
lds
mov
fildl
push
sub
sbb
jae
push
add
mov
cmp
sbb
ja
out
lret
inc
pushf
and
pop
push
ljmp
orl
cmp
cmpsl
fiaddl
loope
adc
push
mov
sub
icebp
ljmp
cmp
mov
adc
outsb
cmp
sub
loopne
fstl
sahf
and
xorb
mov
mov
pushf
ret
shr
add
repnz
int3
sub
add
roll
or
mov
mov
and
sub
mov
mov
std
pop
leave
rcl
stos
cmp
push
test
fidivrl
repnz
dec
adc
test
and
lods
movsb
outsl
jo
sub
out
or
pusha
js
dec
mov
out
adc
icebp
add
pop
inc
test
dec
pusha
and
cmp
add
and
or
imul
stos
es
lock
sbb
cmp
sub
mov
xorl
sbb
push
imul
mov
xor
dec
mov
pop
jmp
orl
enter
js
mov
mov
lods
into
pop
push
mov
pusha
inc
mov
inc
enter
orb
int
pushf
jl
test
int
sub
add
pop
adc
inc
cmp
fsts
jmp
jns
push
lret
cmpsl
mov
sbb
mov
adc
mov
pusha
and
xchg
add
inc
out
daa
sbb
xor
pushf
add
movl
add
pop
add
es
test
jo
jb
and
jo
add
xchg
jecxz
sbb
fdivrs
push
lock
and
sbb
jl
fwait
xchg
mov
in
xchg
shll
jge
pusha
jo
bound
xor
sbb
mov
inc
dec
xor
dec
sbb
es
shll
mov
dec
ret
sarb
setno
xor
add
push
jae
lret
or
mov
ret
and
data16
pop
test
pusha
push
or
outsl
popf
mov
and
mov
push
mov
push
shrl
cmpsb
sbbb
push
imul
jo
icebp
mov
test
dec
cmp
xchg
lret
inc
cmp
mov
mov
add
fcmovne
xchg
and
pop
lds
mov
loop
xchg
fcomps
pop
sub
subl
xor
push
mov
mov
shll
insb
xchg
xchg
jge
inc
cltd
lcall
xchg
fimull
add
aad
rcl
test
ja
pop
in
shlb
add
adc
cmp
mov
je
or
jmp
push
test
push
andl
fsin
xor
xchg
mov
add
dec
adc
js
subl
sbb
aas
xchg
mov
int
add
or
mov
and
mov
pop
pop
test
loope
cmp
jnp
xchg
add
addb
push
sbb
js
addr16
ja
dec
sbb
loopne
sbb
jecxz
hlt
push
push
sbb
push
insb
iret
jae
push
mov
add
mov
pusha
orb
and
and
mov
jb
lret
cli
pop
pop
decl
loopne
mov
pop
subl
jo
mov
push
and
out
add
in
push
pop
xor
pop
inc
mov
or
or
add
aam
pop
or
clc
dec
add
popa
ret
shrb
cwtl
das
or
and
movsb
and
fsubl
adc
dec
lods
push
xchg
repnz
rcrl
shrl
dec
pop
cltd
test
mov
jmp
es
or
mov
pop
divl
hlt
sub
cmp
xor
sub
push
push
mov
stc
sub
jo
loopne
adc
push
nop
cmp
xor
or
cmp
enter
in
fidivrs
dec
pop
cmp
push
ficomps
push
in
adc
lods
jnp
cs
mov
sbb
jo
gs
scas
cmp
imul
loopne
xchg
push
sub
mov
pop
rclb
sub
fiadds
mov
lea
sti
arpl
jb
xor
in
stos
add
jge
js
sbb
pushf
lock
into
imul
xor
push
adcl
loop
divb
inc
ret
xchg
jae
in
add
adc
mov
xchg
je
scas
jae
enter
addb
dec
push
mov
lock
fs
add
adc
test
jae
xor
cmp
aas
inc
push
outsb
adc
sti
adc
into
or
call
stos
jb
jge
lret
gs
pop
inc
mov
pop
mov
adc
insb
push
cs
sarl
pop
adc
or
sbb
leave
xor
mov
es
and
inc
push
mov
adc
aad
mov
inc
push
popf
sbb
sub
sti
adc
mov
bound
call
xchg
push
cmp
test
setl
xor
loope
cwtl
jo
push
and
mov
dec
sti
pop
adc
in
or
outsl
shrl
jb
dec
fidivrs
xor
popf
xor
cmp
fcom
lods
mov
add
xchg
gs
test
out
jbe
jl
into
xor
jnp
add
jo
or
cs
fcoms
dec
xchg
fldenv
outsl
lds
jl
mov
rcll
xchg
xorl
cs
js
dec
or
mov
adc
scas
sbb
test
test
ret
or
mov
loope
push
loope
daa
mov
enter
push
shrb
in
adcl
push
dec
shlb
inc
push
sbb
xor
addb
push
inc
loope
jo
loope
xor
addl
aad
jecxz
xor
push
bound
push
lret
push
popf
cmp
xor
pop
mov
decb
movups
add
mov
leave
loope
push
push
mov
add
jno
loope
shll
push
xor
sbb
xchg
cmp
and
and
xchg
repz
inc
out
jo
stos
movsb
negb
jne
ret
add
cwtl
mov
pop
inc
cmp
jnp
cmp
popa
push
sub
or
dec
jo
push
mov
ror
mov
jb
and
xor
pusha
out
jb
jo
adc
add
sbb
out
adc
ret
mov
cmp
add
mull
in
pusha
push
sbb
mov
orl
inc
imul
sbbl
add
jo
or
loope
or
in
jge
and
enter
cwtl
and
mov
jbe
jb
adc
jbe
sub
jo
push
andb
movl
cmp
sbb
fs
das
mov
xor
pop
push
ret
dec
xchg
ja
add
arpl
loope
pushf
rcl
icebp
sbb
sub
mov
test
not
cltd
pop
mov
pop
sub
dec
xor
ds
dec
addb
xchg
or
notl
mov
cmp
mov
in
pop
cmpsl
sub
pop
rclb
clc
sbb
data16
out
ja
pop
push
and
adc
adc
bound
jns
cmc
fistpll
push
dec
popa
add
cmp
fdivr
stos
iret
scas
cmp
and
add
scas
xor
daa
xor
lcall
or
out
dec
int
sub
loop
xor
push
in
sub
push
or
xorb
sbb
movsb
int
sbb
pusha
pop
lcall
mov
addr16
xchg
mov
in
sub
xchg
and
bound
push
push
add
and
xchg
jae
jne
add
add
mov
inc
xchg
test
xor
imul
imulb
add
or
inc
xchg
adc
xor
mov
data16
cmp
pop
fchs
add
or
xchg
mov
add
xor
push
addb
jae
xchg
add
bound
xchg
mov
and
stc
daa
sbb
xchg
mov
rolb
sub
nop
sbb
das
push
xorb
pusha
pop
daa
xchg
xchg
test
hlt
mov
xchg
mov
rolb
pop
bswap
rol
pop
cltd
fsubl
inc
jno
leave
adc
jle
shll
xor
cmp
aas
mov
pop
in
pop
push
stos
or
push
jae
lods
mov
pop
jecxz
stos
jo
mov
cwtl
xor
ja
push
mov
mov
xchg
cmpsb
jmp
incb
sti
mov
xchg
rolb
dec
popf
jo
stos
xor
les
push
push
jae
dec
sbb
sub
mov
dec
mov
and
pop
rolb
sbb
or
cmp
dec
dec
je
call
andl
add
enter
insb
ret
add
outsl
and
xor
jne
roll
xchg
xchg
mov
push
push
cltd
and
xorl
inc
xor
lahf
adc
jne
sbb
or
shl
pop
or
xor
xchg
adc
push
jne
add
mov
std
ds
or
sbb
cmp
mov
adc
mov
loopnew
lret
or
push
insb
adcb
xor
in
jne
mov
cld
pop
pop
jb,pn
js
and
mov
cwtl
adc
rorl
faddl
into
inc
in
adcb
add
sbb
add
push
inc
int3
cli
push
mov
lods
add
cmp
jl
pop
mov
and
sub
movsb
inc
cs
xorb
add
sahf
popa
sbbb
or
pusha
inc
les
or
gs
rolb
pushf
test
aam
push
push
add
push
mov
pop
add
dec
cmp
cmp
or
stos
xor
scas
jg
push
push
loop
loopne
mov
mov
andl
lock
mov
cwtl
sbb
inc
aaa
push
pop
push
and
mov
pop
cld
xchg
push
jb
idivl
or
add
xchg
iret
jl
jo
pushf
stos
outsb
jo
sarb
cmp
pop
test
divl
les
rcrl
jl
popf
sbb
sbb
sbb
lea
cmp
inc
and
jo
mov
adc
mov
addb
fstps
jecxz
cmp
lret
pop
or
fbstp
sti
es
push
sbb
pop
test
or
scas
in
or
xor
mov
mov
jl
into
inc
in
mov
testb
cwtl
or
in
push
iret
cli
add
jp
dec
pushf
clc
sub
mov
dec
xchg
push
xor
add
sti
jo
or
sti
out
sqrtps
sub
sub
adc
ss
xchg
jae
jno
iret
mul
push
jle
mov
out
jecxz
adcb
push
pop
arpl
mov
ret
popl
sub
daa
or
mov
push
dec
push
lret
sbb
mov
test
cltd
pop
push
repz
mov
mov
ljmp
pusha
mov
sub
inc
lods
jo
lcall
test
mov
add
mov
mov
xchg
inc
mov
mov
add
pop
jb
lds
mov
ror
xchg
or
xor
pop
xlat
and
sub
call
movsb
orb
inc
xchg
pop
rclb
lds
out
inc
into
add
pop
les
es
mov
out
sbb
xlat
jecxz
inc
icebp
mov
in
add
or
sub
enter
daa
lret
int
scas
data16
fsubrs
cwtl
jb
jg
lcall
std
or
sbb
stos
test
push
imul
jmp
aas
loop
add
push
adc
adc
inc
jo
mov
inc
cmp
les
in
jnp
or
addb
lcall
add
mov
addb
mov
xchg
pop
sub
scas
mov
rcrl
cs
jp
sub
pop
xor
scas
mov
incl
add
dec
mov
mov
loopne
add
enter
push
sbb
and
xor
shrl
arpl
mov
pushf
xchg
aas
daa
stos
ljmp
lock
test
test
pop
cmp
rcrl
fists
xchg
subl
jp
shrl
push
lret
adc
pusha
push
xor
jb
and
ret
xchg
push
test
dec
xor
sub
mov
mov
and
cld
popa
push
out
les
pop
hlt
xor
dec
pop
jnp
push
lock
push
es
aad
test
mov
sub
sub
mov
jne
scas
mov
int3
jo
push
push
adc
push
sbb
jb
jnp
test
or
sbb
xchg
adc
sub
sub
test
add
add
pop
mov
mov
adc
loope
mov
push
scas
cmp
xor
add
sbb
xor
add
sub
adc
loopne
in
popf
cltd
push
lods
xor
add
lock
mov
jae
orl
hlt
or
sub
into
lret
pop
sbbl
addl
and
adc
ret
in
daa
dec
daa
call
add
and
jmp
loope
inc
rclb
sbb
inc
add
jp
cmp
pop
divb
jmp
add
out
cmpsb
mov
fildll
add
adc
sbb
imul
mov
add
iret
mov
adc
ret
lcall
pop
fisttps
adc
loop
cwtl
jo
cmpsb
jmp
inc
add
fwait
and
pop
inc
movsb
or
push
mov
inc
into
inc
testl
mov
push
mov
add
push
mov
sub
xchg
mov
sbb
pop
pop
cli
and
hlt
cmp
test
mov
adc
xor
cmp
loope
loopne
mov
add
sysret
push
xor
loope
cmpsb
andb
sub
push
xor
and
add
sub
cmp
pusha
scas
fwait
cmpsb
sbb
and
mov
inc
push
dec
add
stos
lahf
out
jmp
add
in
loope
rolb
xchg
jl
fstl
and
addl
xchg
jnp
or
fidivs
dec
or
imul
cmpsl
in
add
jno
mov
push
dec
push
mov
mov
jne
shl
fs
sub
dec
test
sub
push
in
inc
shl
or
fsts
js
pop
xchg
aas
jae
rcll
insl
mov
dec
mov
cmp
subl
or
je
ret
xor
push
inc
push
test
aad
stos
lret
lods
rcll
cltd
sub
test
pop
and
lds
pop
les
xchg
inc
fidivl
insl
jl
xchg
fs
jno
mov
adc
ret
loope
sbb
jns
sub
jne
push
insb
pop
pop
mov
xchg
lret
sbb
cmpsb
jb
and
add
sbb
inc
and
gs
into
inc
xchg
outsl
int
push
mov
jmp
dec
add
loop
les
push
fwait
mov
cmp
leave
mov
xor
sub
cmp
pushw
or
mov
cmp
xor
add
push
pusha
sub
xchg
ret
popf
cli
or
repz
test
loope
mov
lock
leave
xchg
addl
cli
xor
xor
add
sub
lods
pop
mov
stos
cltd
dec
dec
sbbl
xchg
or
sub
test
add
or
mov
pop
mov
add
sbb
stos
inc
fwait
leave
lods
sbb
xor
sbb
ficoml
ljmp
adc
push
adc
add
mov
std
push
sub
addr16
adc
mov
sbb
xchg
add
test
test
out
gs
popf
jb
inc
add
xchg
mov
adc
sub
lret
cmp
les
lods
mov
pushl
pop
mov
push
negl
in
test
imul
and
sbb
sbb
xor
pusha
inc
add
lds
xor
cmp
sub
cmp
subb
movsb
or
cmp
sub
xchg
mov
dec
aam
push
cmpsb
push
cwtl
xor
std
arpl
mov
int3
xor
and
hlt
dec
xchg
mov
push
jmp
je
arpl
inc
test
sbb
hlt
cmp
mov
mov
push
jnp
jno
inc
mov
lcall
sbb
das
jno
dec
out
in
aam
sub
and
push
loope
jb
adc
xchg
cmp
lock
push
add
or
xlat
push
xor
aam
fimull
sub
pop
scas
cmp
jno
aad
sub
shrl
adc
pushf
stos
adc
jmp
out
jmp
jp
sbb
loope
into
pusha
lret
lods
repz
push
and
add
add
add
cmpsb
sub
insl
subl
inc
dec
cmp
popa
and
xchg
jecxz
repnz
subb
xchg
lds
jl
xor
and
inc
push
add
dec
cmp
test
test
enter
loopne
mov
add
mov
cmp
or
test
notl
into
jl
add
xorb
not
test
push
push
cwtl
mov
pop
stos
lret
data16
and
xchg
test
test
mov
jae
jo
xchg
mov
adc
movsl
jns
or
jg
sbb
xchg
jae
add
sbb
out
mov
mov
int3
add
sub
push
xor
mov
out
push
mov
xchg
dec
push
sub
lea
jo
add
out
pop
sbbl
mov
mov
js
pop
mov
pop
sub
dec
fmull
xor
add
jo
pushf
cmp
das
push
mov
push
add
sub
mov
jbe
popa
cmp
xchg
into
mov
pusha
xor
test
sbb
ret
filds
das
in
loope
fwait
dec
lock
lret
sbb
or
pop
lcall
push
pop
and
cmp
shll
loopne
hlt
inc
xchg
mov
daa
cmpsb
aam
into
rcl
jnp
int
add
or
int3
cmp
xorl
inc
inc
test
loope
ficomps
mov
mov
cmp
add
lcall
int3
sub
mov
enter
stos
push
stos
sbb
inc
les
je
and
sbb
add
adc
cmp
pop
push
pop
lock
jmp
adc
jb
xor
stos
push
push
imul
mov
add
xlat
dec
test
xchg
add
add
loope
cmp
repz
imul
jle
sbb
call
out
add
xchg
xchg
mov
data16
mov
sbb
repnz
inc
rcl
push
xchg
add
in
frstor
cmp
dec
mov
popf
adc
incl
scas
adc
into
cmp
dec
sbb
cmp
ljmp
enter
popa
xchg
mov
pop
aad
inc
test
xchg
jmp
into
mov
mov
insb
mov
mov
or
cld
iret
inc
out
cmp
fisttps
call
xor
and
daa
sub
mov
dec
loopne
pusha
sbb
repz
and
sbb
sti
sub
sbb
pop
inc
adc
add
adc
loopne
pop
mov
push
jae
or
add
and
cmp
dec
mov
loopne
xchg
stos
xchg
insl
pushf
cmp
gs
cmc
cmp
push
iret
addb
lcall
xlat
stos
push
xor
jecxz
lea
cmp
push
cmp
sub
aad
popa
add
add
enter
and
in
lret
add
push
push
jb
add
push
pop
pop
cltd
adc
jp
adc
push
cmpsb
push
xchg
movsb
sarb
cmp
orb
ds
dec
push
icebp
push
shl
jno
mov
adc
jae
and
mov
sub
add
jecxz
cmp
cmpsb
mov
and
xor
xor
mov
sbb
pop
xor
popa
jp
push
pop
add
add
sbb
loopne
in
add
and
incl
xlat
jecxz
mov
push
test
push
rcrb
and
mov
and
shll
jnp
in
push
jo
push
xor
inc
push
push
outsl
mov
imul
jnp
cmpsb
into
add
or
es
pushf
xchg
pop
dec
push
adc
fimull
ret
xchg
inc
ljmp
arpl
push
push
mov
test
movsb
in
add
lcall
loopne
mov
adc
mov
andb
cmp
dec
es
sbb
mov
lret
push
xchg
rolb
sbb
xchg
ljmp
and
popa
xorl
pushf
movsb
js
data16
sbb
pushf
nop
mov
scas
data16
in
out
sbb
loopne
fsubl
mov
adc
xlat
pop
pop
dec
xrelease
sub
outsl
lret
out
adc
mov
pop
xchg
test
cmp
loope
test
popa
js
jae
xlat
pop
lds
xchg
insl
add
xorb
push
inc
mov
adc
mov
and
cmp
jo
shlb
std
mov
cmp
stos
test
cmpsb
pop
adc
or
adc
adc
push
and
and
push
mov
lds
fstpt
or
pop
shr
push
jae
mov
hlt
or
inc
mov
addr16
push
push
movsb
push
and
jo
test
into
xchg
pop
inc
andnps
dec
xchg
mov
add
cmp
or
sbb
xorl
jno
xor
ljmp
sbb
rolb
xchg
or
inc
loopne
test
in
aad
sub
inc
jb
rcrl
cmp
cwtl
or
jne
roll
das
mov
inc
push
rolb
jne
nop
and
testl
pop
je
push
inc
mov
ja
dec
xor
inc
pusha
jo
mov
lods
sub
cmp
mov
push
jne
push
cwtl
mov
adc
je
lret
jle
test
shll
pushf
mov
jle
in
xchg
stos
rep
test
test
cmp
or
fsubrs
push
movsb
xor
mov
pop
subl
icebp
add
incb
xor
orb
xlat
pop
andb
fistpll
cmp
leave
sbb
stos
cltd
adcb
pop
test
push
jno
stc
into
shlb
pop
xchg
push
jne
and
xchg
ljmp
jo
mov
scas
or
outsl
inc
repz
pushf
or
push
es
xchg
rclb
shlb
cli
outsl
add
pop
or
push
dec
adc
ret
xchg
ret
rolb
pop
mov
or
enter
pop
xchg
shrb
add
add
jbe
shlb
mov
xor
adc
int
push
add
add
inc
into
inc
sub
js
repnz
or
or
aas
pusha
sub
daa
or
mov
pop
xchg
inc
lods
adc
inc
icebp
sub
int
pop
pusha
jb
inc
and
pop
call
or
adc
add
out
sub
push
not
ret
sub
shll
gs
dec
mov
and
lahf
int
mov
push
cmc
nop
or
adc
cmp
imulb
leave
mov
push
and
add
add
xchg
incl
enter
xchg
adc
stos
loope
jg
and
addr16
into
lock
mov
and
loopne
or
mov
pusha
or
sbb
adcl
imul
add
sub
lods
jle
mov
sbb
int
mov
nop
andb
sub
std
xor
or
mov
iret
inc
pop
mov
push
or
mov
stos
or
add
mov
test
aam
lret
push
insl
outsb
push
jl
push
sbb
pop
mov
fs
xorl
pop
je
cwtl
in
sar
pop
mov
int3
or
fcomps
add
add
sub
cwtl
jo
cs
rorb
ljmpw
in
xchg
cs
fstpt
in
jb
test
and
inc
adcl
add
add
xor
jns
sub
adcl
pop
cmp
mov
lret
lcall
xorb
sbb
sbb
orl
inc
push
mov
fadd
add
fstps
push
and
mov
js
ret
jno
lret
addr16
adc
jae
cmpsb
test
mov
push
push
adc
mov
sub
mov
cmp
shl
jp
jge
enter
and
in
push
andl
mov
dec
in
das
add
jns
hlt
and
push
xor
js
xor
sti
jbe
cmp
sbb
mov
fistps
mov
add
aad
das
rorb
xchg
pop
mov
push
mov
shl
test
rcrb
lds
and
enter
js
dec
mov
inc
pop
inc
fidivs
push
push
jno
adc
jp
pushf
sub
das
popa
push
shrb
test
add
jp
pop
mov
data16
into
sbb
roll
mov
repz
fwait
or
lcall
push
or
incl
lods
cmp
cmp
das
clc
cld
inc
out
iret
xor
orb
or
call
addr16
mov
mov
jb
daa
adc
lock
mov
add
inc
dec
stc
mov
inc
iret
into
pop
cmp
push
inc
imul
jb
jns
call
sub
lcall
repz
andl
arpl
xchg
push
insl
mov
loope
rcrb
inc
sub
ss
jmp
xor
inc
jb
mov
mov
aad
mov
test
divb
dec
stos
sub
push
insb
aas
sbb
outsb
push
pop
xorb
push
enter
daa
mov
add
xchg
test
mov
push
push
xor
rclb
clc
shl
jmp
insl
add
loope
push
clc
mov
gs
and
aad
pop
or
pop
sti
js
popf
imul
xchg
mov
mov
aam
jne
test
nop
loope
outsb
addr16
lret
add
mov
in
jo
daa
in
lret
inc
sbb
add
jo
sub
push
pop
popa
mov
popf
popa
pop
das
and
adc
jae
and
cmp
mov
mov
std
push
adc
xchg
mov
mov
or
std
push
ss
or
mov
subb
inc
test
add
add
ljmp
in
add
fisttps
mov
arpl
cld
insl
sbb
push
mov
xchg
mov
mov
loop
push
loopne
xor
sbb
add
outsl
inc
lods
xor
pop
mov
push
xchg
and
mov
stos
jl
cmp
inc
loopne
cmp
mov
adc
or
pop
in
aam
aad
pop
scas
jp
cmp
imul
cmp
ret
fwait
inc
cmp
push
orl
in
push
pushf
test
les
cmp
lret
mov
cs
xchg
mov
cwtl
add
mov
inc
pop
push
rcr
sbb
pop
sub
mov
and
dec
mov
push
ljmp
or
add
lcall
sbb
subl
lret
push
iret
adc
imull
stos
ss
lock
loopne
and
test
or
rclb
test
cltd
and
sub
fs
cltd
loopne
aad
movsb
mov
sub
loope
jl
mov
inc
sub
push
loope
cmp
sbb
sbb
push
dec
push
bswap
jne
sbb
ds
push
cmp
cmp
test
pop
add
pop
xchg
mov
inc
or
sarl
lret
in
clc
or
or
mov
xchg
addb
adc
cwtl
fstpt
rolb
pop
pop
ja
add
jno
or
or
add
sbb
ss
lds
mov
ficoml
lret
imul
lods
mov
hlt
xchg
cmp
push
add
mov
in
hlt
adc
in
fildll
or
lds
dec
in
shrl
ror
aam
jnp
push
and
mov
subb
cltd
or
addr16
and
outsb
sbb
mov
xchg
mov
ret
jo
inc
jae
jb
push
add
into
inc
shlb
xor
cmp
je
lret
mov
mov
jo
or
push
xor
xor
test
sub
xchg
or
arpl
inc
into
inc
test
shlb
push
les
orb
leave
fmull
mov
inc
mov
popf
xor
pop
mov
push
imul
add
roll
or
add
ret
push
sbb
pushf
or
sub
mov
js
mov
ja
inc
xchg
xchg
cltd
cmp
int
insb
into
inc
jnp
xor
fisubrl
sbb
enter
stos
in
inc
xor
push
cmp
dec
mov
sbb
jo
xchg
add
push
sbb
jb
add
inc
mov
popa
bound
inc
mov
lods
xor
shrl
xchg
enter
and
pop
popa
call
cmp
mov
sbb
rorl
xor
in
sbb
iret
icebp
or
mov
jmp
or
lea
fldt
call
pop
push
outsl
movsl
dec
sbb
ret
cli
nop
push
jp
data16
add
lret
les
mov
adc
mov
popa
and
or
outsb
add
pop
cwtl
xor
add
pop
mov
push
add
add
daa
aam
loope
xor
inc
push
loope
aam
fcomps
add
mov
add
sbb
or
rcrb
sbb
enter
aam
mov
xchg
movsl
and
data16
add
mov
inc
xor
cld
pop
add
lock
stos
sbb
push
mov
aam
addr16
orl
cmc
scas
xor
inc
aad
testb
orb
loopne
push
pop
cltd
sub
push
inc
cmc
rcrl
mov
adc
pop
jge
mov
adc
dec
add
or
out
adc
stos
cmpsl
inc
and
adc
rclb
outsb
or
dec
sbb
jmp
jb
or
jge
push
andl
sbb
ret
pop
cwtl
imull
testb
xchg
imul
lahf
in
and
add
mov
lds
inc
push
fidivl
adc
mov
add
orb
xchg
jmp
mov
xor
movsl
cmp
iret
ret
jl
add
inc
and
adc
scas
mov
jo
mov
jbe
dec
dec
int
mov
popa
lret
xlat
aaa
cld
dec
xchg
pop
ljmp
push
mov
add
xor
in
mov
xchg
inc
cmp
out
inc
sub
push
into
inc
mov
lods
bound
xor
mov
imull
nop
dec
add
add
inc
and
cwtl
fs
dec
lcall
dec
adc
inc
or
sub
cmp
mov
pop
mov
push
jae
into
int
push
das
add
xchg
adc
loop
pop
loope
push
addl
dec
roll
sbb
push
jnp
push
sahf
xor
push
addr16
xorl
icebp
pop
xor
sbb
adc
imul
out
enter
call
dec
inc
je
push
cmpb
cmp
jb
clc
jno
adc
es
orl
xor
inc
int
js
and
push
es
mov
jno
out
test
push
sub
loopne
nop
sub
loope
push
stos
jo
pusha
pop
pop
loopne
lcall
sub
push
mov
dec
test
xor
cmp
add
push
mov
push
or
outsb
cltd
nop
and
add
mov
in
mov
out
adc
sahf
in
loopne
scas
push
sbb
cmp
fldl
dec
les
adc
pusha
or
dec
add
and
sbbl
cmp
mov
add
jno
push
test
cli
cmp
mov
ficompl
xor
lods
enter
mov
roll
jae
mov
or
idivb
jns
cltd
inc
loope
jp
in
inc
adc
aas
test
push
xor
fcmovnbe
xor
xor
push
push
mov
fwait
inc
shl
push
adc
dec
sub
rolb
andb
sbb
enter
mov
xchg
dec
xor
out
cmp
jno
ja,pn
dec
xorb
imul
and
jp
sub
icebp
dec
add
push
aam
in
rclb
jmp
pop
aam
adc
cmp
pop
mov
loope
nop
stos
sbb
pop
test
pop
xor
scas
xor
adc
in
pop
outsb
icebp
lock
aad
fstpt
pop
lret
test
pop
cli
adc
cmp
mov
mov
mov
push
lea
ret
mov
xor
shlb
xor
mov
xorl
mov
insl
and
cwtl
sbb
xchg
leave
adc
pop
rclb
dec
and
scas
inc
lret
jno
and
mov
pop
popa
ljmp
xorb
es
pop
stos
mov
xor
shlb
inc
stc
pop
xchg
lds
push
jmp
loope
enter
push
mov
inc
add
mov
add
jnp
loope
add
jg
dec
pop
dec
sub
jns
int
mov
sbb
push
push
and
ljmp
mov
sbb
call
mov
sbb
lock
fcoms
roll
mov
xchg
push
cmp
addr16
addr16
cmp
push
in
sbb
mov
out
sub
adc
cs
add
add
pushf
stos
or
cmp
into
pushf
sub
pop
and
pushf
sbbb
gs
mov
jg
mov
mov
sub
mov
fildl
jo
push
loopne
lods
sub
fcompl
push
mov
xor
xchg
loopne
lock
out
push
add
fisttpl
loope
shll
sbb
add
cmp
stos
pop
fcoml
pop
int
sbb
sub
in
pushf
sbb
out
jo
push
inc
xlat
scas
mov
lret
scas
mov
dec
xlat
jno
push
adc
clc
pop
in
jno
ljmp
gs
negb
push
adc
add
enter
sub
jl
xor
cmc
sub
addb
fmull
enter
lock
lock
push
test
ljmp
loopne
notb
aad
lcall
and
ljmp
adcl
jns
add
dec
pusha
popa
xchg
mov
and
cwtl
xor
dec
sbb
testl
in
or
stos
icebp
and
push
add
add
and
es
cmp
adc
aaa
jne
xchg
sbb
xchg
sub
es
ja
or
jo
adc
rorb
out
adc
push
jae
mov
jl
xor
jae
hlt
push
std
rorl
xchg
xor
sbb
rcrb
push
subl
sub
sbb
jne
adcb
cwtl
data16
mov
mov
stc
add
pusha
cmp
pop
stos
dec
shrl
in
out
test
inc
rcrb
xchg
or
popa
push
sub
and
popa
jo
divl
mov
rolb
add
push
sarl
ret
idiv
clc
push
sub
dec
inc
add
scas
inc
adc
dec
add
adc
movsl
mov
insb
stc
mov
loop
add
xor
out
jo
popa
enter
icebp
push
sbb
inc
xor
jae
push
lods
andl
push
rcrl
sbb
mov
cmovae
fs
insl
popf
in
push
xor
add
jg
es
rcrb
outsl
call
add
mov
add
lock
cs
push
jno
insb
inc
pop
inc
jnp
jl
pop
xchg
orb
dec
and
xchg
shlb
ret
enter
sub
lcall
dec
into
imul
ror
cmp
pop
movb
rorl
sub
or
adc
sub
adc
cmp
hlt
sub
sbb
cs
testb
shll
adc
push
adc
ljmp
jno
ljmp
xchg
ret
pop
dec
sbb
cmovae
sub
jno
mov
loopne
push
pop
pop
adc
pop
xchg
or
scas
cmp
cmp
incl
push
push
push
cmp
lret
xor
rclb
sbb
test
xchg
mov
orl
adc
add
sbbl
dec
cwtl
mov
jno
outsl
jne
test
add
inc
ljmp
jb
add
clc
jl
mov
out
movsb
je
and
hlt
stc
leave
push
cmpb
scas
xor
or
mov
or
addr16
icebp
cwtl
fisttpll
push
sbb
adc
fdivrl
shl
bndstx
bndldx
push
push
mov
sbb
xchg
mov
xchg
mov
add
cs
stos
push
pusha
ret
shl
stc
and
xchg
jecxz
mov
push
inc
push
jge
sbb
scas
add
mov
cmp
jno
xchg
sub
dec
inc
xor
mov
push
scas
mov
jp
cmp
into
pop
push
or
xchg
repnz
xor
pop
cwtl
in
cmpsl
cli
add
out
xor
fcmovb
push
in
jno
push
enter
ljmp
cwtl
fwait
std
mov
adc
add
adc
dec
cwtl
xchg
ja
fwait
icebp
lods
in
inc
mov
mov
fwait
test
cmpsb
adc
xor
scas
inc
rol
cmp
sbb
push
aaa
adcb
mov
test
mov
and
xor
movsb
cmp
sub
sahf
enter
jnp
push
fwait
jne
sub
addb
jecxz
js
int
lret
inc
scas
inc
xchg
mov
xchg
push
arpl
test
fbld
scas
mov
push
push
mov
jae
push
xchg
adc
sbb
in
subl
mov
sub
les
addb
adc
hlt
xchg
adc
insl
add
add
pop
scas
dec
mov
and
sbb
push
rcrb
sbb
cmp
adc
addb
mov
xchg
jl
bound
adc
or
jecxz
xor
sub
add
jecxz
jmp
sbb
and
pop
sbb
lds
call
stos
mov
cmpb
sbb
sbb
xor
call
xor
add
sar
adcl
cs
push
cmp
out
mov
or
enter
stos
add
xchg
sub
data16
mov
into
xorb
dec
pop
pop
mov
ds
xchg
out
loopne
push
mov
xlat
shlb
lods
arpl
stos
xor
sub
dec
ror
cmpb
mov
adc
fs
in
inc
jg
sbb
sbb
add
mov
and
mov
push
test
dec
inc
sbb
mov
dec
mov
dec
cmp
xchg
push
pop
test
rorb
adc
cmp
sbb
cs
sti
dec
in
pusha
add
mov
xor
sbb
in
pop
cs
gs
insb
pop
inc
sbb
faddl
test
lcall
sahf
movsb
mov
and
shl
shl
lcall
adc
sub
sub
push
add
je
stos
mov
add
ret
pop
mov
inc
push
push
jbe
andl
scas
cmp
jae
pop
push
dec
xchg
stos
add
jo
adc
push
mov
ret
xor
sbb
xor
outsl
sbb
xchg
into
ret
push
das
pop
cmpsb
add
test
jl
lds
sbb
adc
mov
in
test
cmpsl
loopne
mov
mov
sub
cmp
cs
sbb
mov
xor
xchg
into
test
cmp
push
push
out
popa
jb
push
rcl
fbstp
icebp
loop
leave
mov
xor
add
push
sbb
sub
ss
stos
dec
xchg
std
aas
decb
pop
mov
inc
inc
imul
and
hlt
rcrb
inc
pop
inc
pusha
dec
fisttpl
test
inc
or
pushf
add
stos
jg
loop
xor
clc
xchg
ret
add
aad
xchg
jmp
adc
dec
sbb
ret
xor
iret
push
lods
cmp
mov
push
or
xor
mov
pop
pop
jae
push
mov
xlat
add
lods
cmp
or
das
adcb
push
mov
xchg
in
lret
dec
out
inc
test
pop
rorl
sbb
xor
pop
inc
cwtl
neg
cmp
enter
dec
xor
ljmp
sbb
mov
push
push
push
call
adc
pop
jb
add
call
or
pop
mov
cmp
and
rcrb
cmp
sahf
mov
add
stos
adc
cmp
mov
sbb
xor
fcmove
inc
lret
pop
and
loope
loopne
pop
adc
sub
repz
bound
or
sub
imull
out
adc
push
int
jp
push
les
xchg
mov
insb
mov
loopne
aaa
sbb
sbb
xor
sbb
in
nop
into
cmp
mov
sahf
mov
mov
pop
inc
sbbb
add
sbbb
push
add
jle
out
js
xor
and
sarl
aas
push
cmp
jge
add
loopnew
dec
mov
pop
scas
add
mov
xor
xor
loopne
outsb
push
jo
test
out
push
sbb
push
sbb
mov
or
xlat
push
jo
add
mov
movsl
js
cs
aam
pushf
mov
pusha
xchg
rcll
jl
push
pushf
cmpb
outsb
mov
and
sbb
push
or
cmp
xchg
or
outsl
jno
or
and
pop
daa
fisubrs
rorb
mov
cmpsl
loopne
or
iretw
xor
scas
xor
xor
cmp
dec
push
cmp
dec
outsl
ret
cs
xchg
adc
dec
xlat
sbb
or
aaa
mov
lods
sub
mull
or
push
pop
sbb
push
cwtl
jp
add
sub
sbb
mov
cmp
add
dec
ljmp
adc
mov
adc
or
rcr
adc
push
jnp
stos
movsb
or
loope
inc
dec
add
jl
sub
das
rolb
mov
cmpsb
ljmp
lret
xor
cld
push
sbb
add
cltd
nop
push
jbe
jb
jno
pop
sbb
scas
pop
xor
push
or
jo
and
in
rcrb
sbb
aam
sbb
dec
sbb
rep
add
push
xchg
inc
mov
scas
and
cmp
subl
rclb
addr16
pop
xor
sub
sbb
add
sub
push
scas
or
xchg
loope
insb
or
push
xchg
imul
pop
iret
add
pop
jl
jmp
ret
lret
stc
or
ret
stos
test
lcall
pop
mov
mov
pop
test
sub
fs
push
dec
add
mov
shlb
fcmovne
sub
push
test
jo
es
xor
addb
int
aad
add
loopne
imul
int
and
sbb
push
icebp
lret
sbb
stos
mov
xchg
rorb
cmpsl
ret
xor
lcall
sldt
icebp
jp
jle
pop
scas
push
pop
cmp
stos
pop
test
xchg
data16
inc
mov
push
loope
ljmp
xor
push
or
ds
mov
imul
jno
pop
xor
movsb
cld
push
push
dec
mov
add
push
cmpb
xor
sbb
shll
pop
sarb
xchg
shll
mov
push
mov
fiaddl
data16
jbe
call
adc
jbe
inc
xchg
fs
adc
jle
adc
adc
fs
mov
add
gs
rcrb
cmp
rorl
xlat
psubw
mov
enter
mulb
sbb
dec
rol
or
into
mov
cs
test
push
mov
adc
enter
mov
sar
push
mov
xchg
int
dec
mov
leave
shll
pop
jl
sbb
scas
stos
inc
jl
and
out
xor
mov
popa
add
stc
rorb
jnp
push
push
fs
sub
and
xchg
ret
ja
jle
popa
enter
movsb
adc
dec
add
dec
mulb
mov
int
xchg
adc
in
and
pop
cltd
and
mov
orb
mov
push
sbbl
add
dec
inc
pop
js
inc
add
popf
push
add
add
test
jo
stos
shll
adc
test
jmp
sub
sbb
pushf
jle
lods
push
into
cmpb
jl
cmp
dec
inc
xchg
fnsave
js
shrl
scas
sbb
out
adc
push
ds
daa
js
xor
push
add
scas
lcall
lahf
in
or
inc
out
mov
add
adc
arpl
aaa
not
popf
mov
dec
and
push
cltd
js
add
xor
mov
mov
pop
cmpsl
sbb
inc
imul
lcall
negb
loope
repnz
repz
int
mov
adc
adc
inc
movsl
cmp
cs
gs
outsl
mov
ret
pusha
filds
inc
out
adc
xchg
pop
cmpsb
ljmp
and
ds
mov
mov
cltd
dec
sub
sub
test
dec
cmpsb
insl
ja
or
sub
nopl
cmp
sbb
sbb
inc
and
push
inc
mov
mov
and
push
mov
sbb
jo
lods
push
add
bound
in
adc
das
add
popa
outsb
in
adc
or
icebp
enter
mov
mov
lock
inc
cs
js
stos
xchg
sbb
dec
cmp
xchg
call
popl
xor
test
mov
xor
mov
sbb
mov
je
add
inc
lea
mov
pop
mov
pop
clc
divl
and
dec
fildll
in
cmc
mov
int3
adc
xchg
mov
sti
dec
jp
popf
sub
sub
or
push
bound
lcall
sbb
adc
push
pop
sbb
and
cmp
inc
cs
push
push
add
pop
jns
cltd
xor
sub
and
sahf
mov
mov
push
pop
imul
push
pop
add
push
add
outsb
sahf
pop
les
push
jle
shll
std
xchg
pop
xchg
xchg
loop
or
mov
mov
xor
dec
sbb
fcomps
adc
jae
sbb
lret
dec
push
xchg
std
mov
mov
xchg
adc
or
pop
fnstenv
push
add
xchg
sub
sub
rolb
into
adc
push
mov
inc
out
adc
add
or
pop
out
mov
loope
add
pop
rcll
pop
rcrl
or
subb
ret
mov
inc
mov
test
xor
mov
sbb
jge
mov
jecxz
jnp
mov
nop
add
int
jle
pop
inc
xchg
and
add
sti
and
aam
loopne
not
sub
es
aaa
push
sbb
push
push
mov
loopne
add
and
mov
dec
les
xor
sbb
push
xor
cmp
cmp
loope
sbb
add
push
inc
scas
aam
jg
pop
loope
cwtl
mov
das
push
pop
shll
xchg
jmp
mov
push
jg
pop
sbb
xchg
in
mov
inc
cmpsb
pop
adc
lods
fadds
cs
adc
push
dec
push
push
dec
fstpl
push
rcrl
mov
xchg
sbb
test
sub
pop
test
in
jb
arpl
sahf
cmpsb
cmp
sub
mov
lds
std
mov
add
mov
arpl
push
jnp
insb
divl
into
shrl
js
push
xchg
push
add
add
and
or
jl
mov
sarl
adc
in
lret
or
push
add
or
sub
in
jp
test
fnstenv
mov
dec
sbb
and
iret
fbstp
push
cmp
dec
inc
adc
dec
xchg
cmc
inc
int
test
stos
inc
and
sub
and
es
shlb
mov
test
sti
cmpsl
xor
loop
or
sbb
jo
lahf
mov
mov
add
add
mov
xor
cmp
stc
mov
loope
out
cmp
adc
and
or
pusha
std
mov
std
push
mov
addl
cmp
push
les
mov
inc
xor
out
jle
or
adc
push
leave
rorl
hlt
js
dec
sti
cmp
jo
in
test
scas
mov
incb
inc
mov
xor
xchg
and
pushf
ret
xor
clc
out
addb
adc
xchg
ret
subb
ljmp
pop
add
stos
mov
enter
andb
pop
fs
adc
add
push
loopne
cmp
adc
jmp
adc
cltd
lret
fimuls
fwait
or
adc
xchg
inc
sbb
pushl
xor
shl
inc
sbb
push
es
filds
lret
test
ret
push
sbb
mov
aam
mov
nop
or
push
loope
mov
addl
ds
lret
mov
mov
mov
es
xor
and
jp
jb
push
and
add
aaa
into
ret
mov
sbbb
inc
inc
xor
mov
ret
xlat
push
push
xlat
sub
pop
mov
aas
jmpw
mov
push
je
jno
in
es
cmpl
bound
sub
hlt
or
jmp
and
test
sub
cs
pop
inc
cmpsb
gs
andl
mov
jo
ret
and
inc
xor
mov
push
sbb
rep
push
jo
sahf
push
repnz
inc
dec
cltd
sbb
lods
push
cli
cmpsb
shlb
or
mov
clc
insl
adc
rolb
mov
jp
push
add
cmp
test
pop
xchg
addl
addb
rclb
sub
and
fidivl
pop
out
push
add
adc
sbb
xorb
add
mov
mov
pop
sbb
adc
pop
sbb
dec
push
xchg
out
cs
out
or
add
pop
jbe
mov
mov
cmpb
jbe
add
xlat
mov
decb
fs
daa
call
scas
shll
cmp
mov
push
nop
shll
xchg
sub
and
loopne
adc
xor
jo
lods
add
sarl
cs
out
ja
jne
mov
daa
retw
pushf
leave
cltd
jp
ja
out
xor
xchg
mov
add
push
subb
add
scas
xchg
inc
xchg
jae
hlt
and
leave
lcall
pop
xor
jo
icebp
lret
pop
push
sub
fmuls
sub
adc
jo
jnp
push
lret
into
popf
ss
pop
test
lret
xchg
into
in
pop
lcall
add
pop
scas
push
mov
pop
shlb
and
lcall
dec
int
jae
jle
xor
mov
pop
out
xchg
sbb
ret
sbb
push
xchg
sahf
lods
jge
out
fsubrl
or
mul
mov
hlt
call
mov
inc
adc
ret
cmpsb
adc
adc
jo
adc
jle
scas
push
cmp
and
add
inc
cmpsb
pop
aad
stos
xchg
mov
and
inc
divl
bound
add
cmp
and
cmp
lret
jmp
ja
sub
pop
shlb
cmc
add
clc
jmp
push
int
sub
mov
xchg
arpl
cmp
pushw
dec
in
sbb
push
rorb
inc
scas
cmp
inc
stos
bound
pop
inc
or
xchg
test
das
xchg
test
or
aad
movsb
out
fistps
mov
fwait
popf
add
icebp
pop
adc
push
push
es
push
sbb
loope
mov
out
in
aam
add
cmpsl
mov
mov
mov
ret
icebp
decl
push
push
cmp
sub
jo
lret
or
sbb
xor
test
in
xor
jb
xor
sbb
cmp
repz
ret
lret
cmp
mov
pop
sbb
or
call
inc
leave
inc
shlb
mov
int3
inc
mov
cs
mov
cmp
test
sub
cltd
jle
or
adc
std
mov
sbb
adc
and
pop
mov
pushf
add
xchg
mov
imul
sub
mov
int
js
repnz
pushf
xor
popf
push
pop
or
cwtl
lds
push
lods
push
xor
mov
das
and
or
adcb
in
inc
sub
stos
leave
test
cmp
roll
popa
lret
ret
xchg
rclb
pusha
or
xor
pop
xor
lock
cmp
inc
rolb
negl
lcall
int3
xchg
lcall
or
add
add
imul
subl
subl
and
mov
or
pop
and
shl
inc
cmpsl
dec
cmp
and
xchg
pop
lret
jnp
or
outsl
mov
jno
push
insb
dec
mov
inc
pusha
inc
hlt
and
stos
jle
or
ret
es
xor
mov
cmp
push
sbb
sbb
push
mov
adc
inc
pushf
mov
jns
pop
push
add
movsl
pop
adc
xchg
jmp
inc
fwait
push
aad
shr
xchg
repz
mov
lods
fstl
or
mov
or
inc
imull
xchg
xlat
mov
or
dec
mov
out
daa
pop
fisttps
repz
mov
push
sarl
push
inc
gs
mov
lret
mov
push
mov
adc
sbb
subl
andl
inc
xchg
add
pop
mov
mov
mov
cltd
cmp
sbb
inc
bound
sbb
stos
aad
loopne
popa
jb
addr16
pop
out
or
dec
mov
jo
add
subl
add
popa
adcb
add
xor
loopne
dec
into
shl
jb
push
das
and
mov
aas
sbb
push
sub
or
lods
jecxz
add
pop
cmp
cld
pop
mov
clc
addps
iret
std
adc
or
push
negl
icebp
ret
gs
and
bound
push
sub
adc
in
add
imul
cltd
sub
xchg
or
cmp
mov
roll
ret
sti
andl
addb
inc
dec
mov
andb
xor
mov
or
sbb
adc
jb
adc
ja
lea
mov
sbb
or
jb
xchg
scas
fisubrl
sub
xor
sub
aam
xchg
add
leave
xor
jp
stos
mov
xor
and
lods
loop
mov
xchg
adc
lods
and
ret
push
add
test
lea
mov
ss
out
aad
inc
push
rclb
cmp
push
out
pop
nop
and
xchg
fmuls
mov
or
scas
pop
test
rclb
insl
ret
mov
stos
call
inc
std
movsl
fsts
mov
pop
repz
sub
test
pop
or
add
push
out
xor
ds
push
scas
jo
fcomi
stc
mov
jns
jae
push
gs
mov
loop
test
inc
jnp
pusha
or
mov
sbb
dec
daa
aad
loope
lods
add
in
sbb
lret
push
xchg
and
cli
sub
nop
jecxz
add
sar
mov
lret
dec
pop
out
push
jge
nop
xchg
cmp
mov
ja
shlb
jl
push
adc
aam
leave
mov
mov
add
pop
xchg
mov
orl
mov
icebp
jb
in
xchg
inc
add
iret
lds
cwtl
jae
or
mov
in
sub
test
pop
xor
xchg
enter
lods
xchg
fiaddl
xlat
addl
cs
add
in
push
inc
js
mov
out
popa
or
das
mov
add
cmp
cmpsb
pop
aaa
pop
push
adcb
adc
cld
mov
lcall
ja
divb
mov
push
cmp
xchg
mov
mov
cs
scas
sbb
cmp
call
fistps
xorl
in
dec
inc
xchg
pop
mov
les
shlb
enter
out
xchg
stos
es
and
push
jbe
ficoml
pop
mov
arpl
sub
loopne
push
out
fcomps
popa
push
fs
sbb
mov
orb
repnz
sahf
or
pop
cmp
inc
push
ret
mov
inc
cpuid
push
mov
outsl
jmp
nop
pop
sbb
sbb
sbb
inc
pushf
inc
mulb
push
or
insb
adc
jbe
mov
add
pushf
add
push
pop
shl
pop
push
xchg
out
test
and
and
adc
pcmpgtb
sti
imul
sub
or
jae
int3
or
pushf
and
notl
cs
sbb
popa
std
rcr
add
push
or
ja
loopne
loopne
sarl
pop
add
test
stos
ret
mov
adc
cmc
push
stos
out
and
es
push
mov
push
xchg
mov
rol
push
leave
add
adc
dec
scas
inc
add
xchg
pop
pop
inc
jnp
adc
test
add
es
test
or
add
mov
xorl
mov
cmp
andb
adc
stos
and
and
fidivl
cmp
mov
loop
jne
aam
outsl
xor
jl
mov
aam
adc
xor
loop
icebp
hlt
popf
add
push
test
xchg
jp
faddp
jno
and
push
add
mov
pop
add
cmp
test
mov
std
dec
mov
mov
pop
jmp
mov
add
xor
and
inc
cmc
loop
in
or
out
push
pusha
ljmp
push
cmp
test
mov
or
test
jp
or
inc
xor
cmp
sub
or
stos
add
push
adc
push
xchg
rcrl
mov
or
cmp
arpl
xchg
mov
lahf
mov
lahf
in
js
sahf
push
addb
pop
mov
dec
sarl
add
xchg
mov
mov
stc
pop
push
push
push
xor
adc
jne
mov
add
push
add
add
push
mov
pushf
and
add
lods
push
xor
and
cs
loopne
mov
and
inc
mov
andl
pop
push
loope
outsl
in
sbb
xchg
into
inc
xchg
lds
hlt
hlt
jne
or
jo
xchg
ret
xchg
jno
lret
pop
inc
test
mov
adc
cmpsb
or
xor
or
jb
add
les
insb
lahf
loope
jb
mov
push
out
inc
jmp
pop
push
mov
ja
cmc
sub
adc
adc
pushf
inc
add
mov
pop
pop
push
mov
add
popa
test
pop
inc
out
push
xor
sbb
fisubrs
sbb
push
inc
push
ret
cmp
mov
jge
jmp
xor
stos
xor
mov
loopne
in
popa
int
test
or
push
nop
lret
add
ja
xor
lods
xorb
popa
pop
xlat
push
in
sub
inc
jno
push
cwtl
push
mov
mov
sub
mov
cltd
pop
pop
cmp
mov
rcr
and
pop
push
mov
push
std
add
xchg
and
dec
add
add
lret
push
outsb
or
stos
xor
adc
push
test
scas
dec
cmp
ljmp
inc
fmuls
add
setno
and
shlb
sub
add
loop
inc
adc
rcrb
ret
push
pusha
shrb
push
and
sbb
lock
push
pop
lret
cmp
loopne
es
mov
inc
daa
or
inc
xor
ljmp
test
ret
adc
xchg
inc
in
dec
out
inc
cs
sbb
mov
mov
inc
iret
dec
pop
and
into
or
or
cmpsl
fdivrp
popa
lea
inc
xchg
sub
je
inc
adcb
xorb
pop
bound
adc
pusha
loope
xchg
xchg
add
cmp
sti
loop
sub
lea
popa
pop
xchg
negl
push
mov
rclb
in
imul
adc
jo
dec
icebp
in
sub
sbb
or
sbb
cltd
enter
sbb
xor
push
pushf
add
cmpsl
cmp
mov
push
dec
dec
or
pop
mov
mov
pop
add
inc
les
push
fadd
dec
adc
push
std
inc
mov
push
cmp
push
into
inc
loope
into
sahf
scas
adc
inc
iret
adc
cmp
pushf
or
lods
insl
add
push
scas
rol
or
sub
jo
stos
add
or
fs
jno
pop
push
jge
int
dec
xchg
add
jne
cltd
cmp
mov
les
pop
iret
fs
mov
pop
dec
sub
stos
mov
test
cs
aam
xchg
inc
out
outsl
hlt
mov
pusha
repnz
cmp
push
stc
dec
shll
add
mov
pop
stos
cmp
test
es
out
adc
push
je
add
add
rorb
cmp
ret
cmpsl
in
xor
jecxz
xor
sbbl
mov
inc
sbb
add
pop
or
les
add
sub
cwtl
out
imul
mov
push
mov
leave
out
push
xchg
mov
test
push
push
sub
pop
lcall
jecxz
int
and
into
xor
ljmp
lcall
and
push
mov
lret
ss
push
int
push
fadds
jo
mov
sbb
cltd
ss
insb
jo
andb
add
nop
hlt
mov
cld
out
or
xlat
dec
sub
dec
push
js
or
movsl
loopne
inc
and
adc
mov
loopne
test
jl
mov
or
cmp
pop
jbe
add
ret
into
xor
nop
bound
xchg
inc
mov
sbb
mov
push
and
lret
xor
mov
rol
mov
add
mov
fstps
xchg
add
xor
mov
or
push
lea
inc
cwtl
pop
pusha
cld
aaa
push
into
add
jnp
test
clc
pop
xchg
out
dec
das
push
xor
pop
pusha
jb
adc
dec
outsb
add
cmp
or
mov
cmc
xor
xor
aas
imul
hlt
mov
jb
push
daa
stos
and
loopne
outsl
iret
sub
push
scas
cmp
popa
xorb
call
push
shl
push
sub
mov
insb
aas
in
xor
sti
jl
in
mov
cmpsl
mov
push
adc
add
mov
arpl
add
ret
mov
pop
popa
add
popf
lcall
push
cmp
es
jnp
in
or
xor
add
push
adc
adcl
push
imulb
or
add
xchg
mov
add
stos
adc
xchg
xor
sbb
xchg
imul
out
and
es
lock
pop
cmpsb
add
lret
sti
cmp
add
lods
add
mov
test
push
loope
mov
enter
dec
sbb
add
mov
pushf
sbb
push
popf
mov
lret
add
jbe
leave
cmpsb
mov
jo
sub
xor
jns
into
cmc
pop
and
xor
lcall
cwtl
mov
adc
les
jb
or
jns
pop
push
add
ljmp
std
add
rclb
rcl
aam
xchg
cmpsl
cld
scas
mov
rorb
sbbb
movsb
xchg
loope
push
sub
inc
push
sbb
and
jne
orl
push
inc
mov
dec
into
adc
or
cld
mov
sub
push
dec
push
jo
or
out
insb
addl
push
pop
mov
punpckhbw
adc
push
pop
push
cmpsb
mov
jecxz
xchg
sbbb
push
and
test
pop
aam
rorb
pushf
sahf
sub
pusha
push
loop
pushf
push
jo
push
lea
push
jo
sbb
cmpsb
lcall
cmp
sub
cmp
hlt
xchg
xchg
push
dec
sub
scas
movsb
pop
or
inc
mov
imul
sub
inc
mov
je
mov
add
pop
jae
add
out
xor
add
dec
sub
lods
xor
pop
mov
stc
adc
sub
movsl
sub
maskmovq
idivl
mov
call
outsl
adc
add
inc
adc
add
icebp
call
lock
sub
sarl
mov
aad
pop
push
push
mov
stos
das
test
or
mov
push
mov
mov
ffreep
sbb
sbb
stos
sbb
aam
icebp
mov
sbb
mov
push
test
ret
dec
andb
mov
or
jne
arpl
pop
jecxz
fld
add
cld
add
enter
and
sbb
mov
loope
push
or
popf
push
mov
call
push
imul
jb
jl
push
mov
pop
and
push
push
scas
or
cmpsl
cmpl
rclb
sbb
lds
jo
outsl
mov
gs
cmpsb
add
jecxz
arpl
test
push
and
jl
add
adc
sub
lcall
loopne
push
es
pusha
and
mov
xchg
xchg
leave
inc
dec
xchg
xchg
jo
add
cltd
mov
iret
push
and
enter
pushf
cwtl
jb
call
pop
sub
xor
xor
or
xchg
ret
cltd
push
ljmp
xor
rolb
arpl
xchg
ret
mov
cmp
lahf
ret
mov
mov
dec
xor
rclb
fadd
inc
push
negl
and
pusha
popf
push
mov
out
cmp
leave
in
push
mov
cltd
sub
jmp
aad
xchg
test
mov
or
jmp
out
mov
push
mov
addb
stos
sub
ret
arpl
cmpsb
int
loopne
sub
xlat
jo
fdiv
sbb
dec
cltd
mov
popf
lahf
push
cwtl
or
pop
ds
jo
ja
adc
push
or
pop
jae
scas
fwait
mov
push
pushl
cmp
pop
mov
loop
sub
les
pop
add
push
or
in
xor
jae
dec
adc
cs
imul
cmp
lods
add
sub
xor
xor
loop
push
mov
ret
and
add
jo
jnp
cmp
enter
movsl
mov
pushf
aad
xor
in
iret
push
lock
add
cltd
rcll
or
inc
lea
lret
loope
cmp
or
or
in
rcrl
sub
pop
cmp
add
shll
push
push
mov
pop
xchg
pop
xchg
mov
inc
sbb
inc
or
lret
xlat
pop
addr16
xchg
insl
mov
xchg
loope
cmpb
add
or
mov
imul
sub
lret
jbe
add
dec
sahf
add
fisttpl
sbb
imul
push
add
lret
pop
fcomps
aas
lcall
xlat
push
cwtl
sub
adcb
test
xor
add
mov
inc
sbb
hlt
rclb
mov
cmp
push
mov
aaa
filds
popf
mov
pop
push
push
mov
test
sbb
jns
sub
push
pop
in
mov
mov
rcll
cmp
lahf
pop
iret
push
xor
xor
or
in
ret
jo
stos
das
lea
andl
sbb
dec
lret
mov
and
dec
pop
push
test
inc
scas
rolb
or
sbb
xchg
add
cmp
ror
lock
js
mov
leave
cmp
adc
out
in
aam
add
cmpsb
jo
enter
ret
in
mov
and
mov
dec
pop
inc
sub
addl
sub
push
repz
inc
lret
mov
inc
jns
insb
cwtl
lret
cmp
lods
and
xlat
jmp
int3
cmp
nop
mov
lea
cwtl
lock
aam
and
jb
aad
xchg
sub
loopne
xor
scas
push
es
movl
mov
push
cmp
ja
lahf
push
sub
and
adc
xor
ss
adc
add
lcall
mov
dec
sub
push
leave
inc
add
lods
cmpsb
lcall
ret
pop
bound
fldenv
or
mov
cs
adc
push
jne
inc
aad
add
pop
test
inc
mov
dec
or
and
call
aaa
or
loop
shlb
rolb
xchg
jb
push
add
sahf
inc
outsb
adc
sub
mov
not
push
in
inc
fcomp
sbb
pop
scas
je
insl
inc
inc
sbb
mov
add
add
lret
sbb
jb
mov
scas
sarb
mov
jg
add
into
fdivp
lock
fidivl
sub
jo
stos
fisubrl
pop
mov
popa
out
rclb
mov
pop
sbb
and
jno
call
and
mov
cmp
mov
and
orl
or
or
insb
test
adc
and
dec
jae
testl
xchg
andl
jne
push
sysenter
push
into
push
sahf
hlt
mov
cwtl
jb
jb
std
inc
push
jo
add
cli
or
sub
sarl
push
ror
and
mov
jae
push
subb
cmp
and
into
add
jno
cmp
dec
test
insb
or
xchg
push
filds
push
push
ficomps
into
mov
shl
jae
stos
sub
aad
lcall
pusha
push
pop
stos
aaa
fsubp
loopne
add
dec
jmp
and
and
dec
pop
cmp
inc
repz
insl
add
cwtl
mov
jno
sub
sbb
xor
push
pop
orl
jo
repz
test
data16
mov
fisttpl
test
adc
inc
push
push
mov
and
sbb
pop
pusha
and
fcmovb
in
sarb
add
mov
add
jo
mov
dec
fimull
enter
dec
in
add
add
call
ret
cwtl
add
popf
invd
jp
in
cmp
addr16
xlat
mov
out
stos
push
add
sub
pop
dec
in
cltd
adc
mov
test
sbb
adc
mov
or
inc
loope
adc
xchg
loope
add
or
pop
xchg
shlb
pop
cwtl
pop
sub
in
sahf
shlb
push
stos
and
jmp
cmp
je
sbb
cwtl
pop
roll
out
dec
stc
fisubs
pop
ljmp
lods
mov
pop
nop
mov
test
or
pushf
subl
push
js
mov
push
lods
cmp
hlt
test
sub
add
enter
cmp
sbb
push
xchg
dec
jo
pop
mov
inc
scas
test
sub
adc
or
or
dec
cmp
mov
jmp
sbb
subl
add
mov
loope
icebp
ljmp
add
sbb
mov
cmp
addr16
adcb
cmpl
std
push
inc
dec
cmp
xorb
push
addr16
sbb
scas
test
mov
push
scas
mov
loope
adc
push
xchg
push
pusha
sub
inc
scas
and
dec
mov
push
sbb
xor
rolb
sbb
mov
or
mov
cltd
scas
jp
inc
mov
cs
jb
jb
adc
push
mov
or
add
mov
add
sbb
fisttps
and
int
repz
test
fmul
lret
aam
out
popa
mov
inc
aam
mov
xor
or
out
sbb
in
push
xchg
flds
push
jae
fdivl
nop
and
xor
sbb
cmpsl
aad
pop
icebp
xor
das
push
xchg
jg
sahf
adc
icebp
xorl
in
rcr
scas
add
subl
xlat
jmp
mov
out
jb
and
pusha
rorl
cli
pop
add
mov
and
cltd
add
push
sbb
or
mov
rorl
sbb
icebp
es
cmc
js
fwait
xor
and
sub
sti
add
lods
jmp
cltd
adcb
dec
pop
loope
add
test
lret
pusha
hlt
mov
push
push
sbb
ljmp
push
or
xchg
adcb
cmp
sbb
test
stos
cmp
test
adc
add
rcrb
push
and
push
push
xchg
push
std
push
int
es
stos
lds
cmp
mov
mov
push
mov
mov
stos
cwtl
jb
mov
sub
mov
popa
and
rolb
lea
or
dec
movsb
fimull
ret
and
ret
cmp
aad
and
or
icebp
or
push
push
rcll
loop
push
and
pop
cmp
sbb
ljmp
fs
jbe
std
aas
decb
xor
imul
sbb
lret
test
xchg
scas
sbb
add
sub
cmp
push
jo
loope
add
stos
push
daa
ret
call
or
dec
dec
movsb
xor
jp
in
jae
jb
xchg
cmpsl
sub
fcompl
ret
inc
cs
pushf
mov
shr
aad
adc
aam
sbb
mov
push
xchg
ds
loopne
mov
sbb
pop
int
fs
fimuls
out
pop
jnp
mov
scas
xor
iret
psrlq
mov
lcall
pushf
ja
enter
sbb
in
inc
lock
pop
sub
loope
mov
sbb
add
hlt
js
and
jge
popa
lret
jg
out
push
test
rorl
cs
pop
aam
xor
or
adc
fs
pop
mov
jnp
xchg
test
push
mov
int
and
inc
adc
push
sbb
fcompl
mov
mov
ss
push
xor
mov
js
shrl
popa
xor
js
jo
lods
cmp
pop
pusha
mov
xchg
add
movsb
lret
into
ss
js
add
jo
push
js
loopne
add
gs
add
mov
jnp
test
push
pop
jae
fisubrs
push
iret
mov
cmp
repnz
adc
jg
mov
rcr
dec
call
sbb
or
sub
or
cmp
xchg
mov
in
test
aam
push
inc
das
stos
mov
pop
pop
aaa
sub
pusha
mov
xor
cs
mov
ret
test
and
fsubrl
sbb
xchg
cmp
push
dec
cmpsb
sbb
cmpb
lret
xchg
loope
inc
sub
jg
jb
jbe
in
ret
mov
adc
loope
mov
push
push
sub
cmpsb
inc
add
lods
cltd
iret
mov
loopne
repnz
mov
and
push
sbb
lret
xor
ljmp
dec
jnp
pusha
js
xchg
jne
subl
push
aaa
dec
outsl
push
push
dec
jo
cld
add
out
xor
xor
stos
and
test
push
push
dec
cli
and
loopne
sub
sbb
adc
enter
sub
into
push
push
mov
inc
pop
rorb
loopne
repnz
dec
push
push
cwtl
dec
jne
ror
mov
pusha
push
and
add
aaa
sbb
pop
into
inc
cmp
movsb
call
xchg
fcomps
jb
mov
shl
xchg
mov
xchg
inc
lret
push
gs
jge
mov
inc
inc
sbb
call
pop
or
test
cmpsl
int3
sub
xchg
sub
insb
sub
stos
pushw
xchg
loope
mov
mov
fistps
es
adc
xor
jo
sbb
or
js
enter
sbb
aas
sbb
inc
cmp
cmp
mov
adc
shl
inc
mov
pop
cltd
sbb
dec
aas
loopne
les
sbb
inc
mov
dec
mov
xor
loopne
xor
jbe
push
mov
cs
mov
cmp
xor
cmp
mov
lret
mov
or
iret
enter
push
or
pop
add
int
andl
or
xchg
add
lahf
adcb
inc
mov
test
ss
push
xor
out
stos
sbb
push
cmp
push
add
push
push
sbb
dec
out
inc
mov
pushf
mov
mov
pusha
xchg
inc
out
lcall
outsb
inc
inc
and
adc
cmc
and
les
mov
push
xchg
push
pop
loope
cltd
cmp
or
or
push
adc
cmp
sbb
push
adc
sub
pusha
leave
sub
je
or
cmp
mov
aaa
out
mov
mov
adc
inc
setbe
add
cltd
fldcw
lock
add
push
mov
lds
je
and
ja
pop
xlat
test
cmp
jnp
sbb
dec
je
cwtl
adc
sbb
ret
movsb
fstpt
inc
data16
nop
hlt
aas
add
bound
sbb
mov
enter
sbb
xor
fs
mov
fwait
dec
in
cmp
add
pop
hlt
sbb
adc
inc
rclb
sbb
cmp
xor
aas
lret
inc
sub
mov
stos
xor
sbb
or
movsl
xor
xchg
or
sbb
outsl
sbbb
pushf
jle
inc
shl
cs
pop
push
pop
adc
loopne
sub
loope
test
ficompl
jne
lcall
mov
lea
add
push
into
loopne
in
cs
mov
aam
pop
cs
in
scas
insl
mov
or
dec
imul
cli
inc
jp
int
cmc
test
sub
jae
mov
and
lcall
adc
loopne
call
sti
hlt
lcall
inc
pop
cltd
or
and
pop
ret
orl
pop
das
pop
popf
push
shlb
cmp
mov
pop
subl
jo
shl
jae
xor
ja
scas
lcall
movsb
xchg
rclb
add
and
into
mov
fnsave
addb
fyl2xp1
sbb
les
les
ret
test
into
adc
jo
mov
mov
dec
dec
sahf
scas
xor
pop
outsl
out
and
lret
add
inc
cmpb
enter
and
pop
lcall
inc
loope
mov
daa
jb
imul
popa
sub
sbb
dec
xor
mov
sub
add
test
lgs
scas
xor
xor
mov
mov
push
xor
push
xlat
mov
push
jne
xchg
add
cs
sbb
jp
in
add
cmp
out
xor
adcb
cltd
and
sub
add
imul
aam
les
inc
loope
imul
and
adc
xlat
push
jb
dec
int
push
outsl
push
or
pop
sbb
subl
cltd
cmp
jno
jo
popa
sbb
or
dec
push
lods
dec
cs
orl
popf
movsb
loop
inc
mov
in
shl
outsb
pop
jecxz
xchg
or
inc
jae
push
test
scas
enter
rcll
popa
jp
sub
cwtl
xor
cmp
inc
popa
imul
movsl
loop
pop
cmp
pop
jb
inc
inc
lret
add
loop
and
fcmovnb
xor
xor
pop
je
jb
cwtl
and
inc
aad
sarb
enter
es
add
pusha
ja
loope
add
mov
adc
aaa
add
sbb
sub
dec
js
lds
pop
mov
or
into
push
xchg
push
test
sub
sbb
dec
cs
out
xchg
xor
push
fists
xchg
fstps
std
xchg
xchg
mov
pop
cltd
decl
inc
cmp
popa
mov
sub
inc
lahf
aam
xlat
sbb
pop
div
mov
add
cmc
lea
sbb
add
pop
jne
mov
popf
xor
fidivs
adc
adc
sti
loopne
jo
adc
cmp
inc
sbbl
xchg
mov
das
push
adc
xchg
push
cmp
mov
out
mov
push
test
aam
push
mov
call
adc
push
adc
nop
repz
push
xlat
add
or
cltd
scas
das
stos
mov
iret
jae
lcall
out
loope
xchg
push
daa
mov
aad
pop
sbb
adc
js
test
in
push
push
xor
add
adc
sub
outsl
add
mov
push
nop
xor
mov
sbb
orl
push
sbb
mov
pop
js
jo
or
and
dec
add
inc
sbb
cwtl
jno
aad
fadd
in
sub
inc
or
pop
enter
int
xor
fmull
sub
add
cltd
or
sbb
push
inc
fs
mov
mov
aam
cmp
xchg
mov
jl
mov
inc
pop
sbb
inc
jb
pop
inc
jae
rcrb
jle
adc
or
xchg
sub
or
xor
test
out
jge
xchg
cmp
add
sub
pop
jae
mov
int
jecxz
xchg
pop
popa
cli
aas
dec
int3
fistpl
push
dec
cmp
test
dec
iret
fs
jp
xchg
jae
nop
test
push
ss
jb
ret
daa
add
loop
popa
mov
rolb
jae
cmp
jo
jno
and
jmp
push
pop
and
sarb
inc
je
pop
and
daa
popa
xchg
fistl
xor
pop
mov
and
lea
loope
mov
push
or
leave
in
cmp
push
lret
inc
cli
cld
sahf
rorl
scas
ret
push
pop
fldenv
arpl
xor
pop
mov
mov
cltd
mov
cmc
cmp
add
scas
sahf
orb
sbb
push
and
add
loopne
into
pop
sub
loop
out
popa
jo
add
adc
shrl
pop
sbb
inc
cmp
jle
jge
pop
or
mov
adc
xchg
int
leave
inc
nop
push
or
sbb
mov
lds
orb
sarl
adc
or
or
mov
mov
ljmp
dec
inc
out
pop
into
add
rcrb
adc
xor
jle
or
push
das
or
xor
cmp
xchg
enter
adc
push
xor
cmp
rcrb
push
or
sub
cmp
sarb
xchg
sbb
jae
fcompl
pushf
lods
outsl
scas
sub
lds
repnz
mov
lcall
dec
cmpsb
inc
adc
pop
movsb
jo
xchg
add
enter
mov
mov
xlat
mov
repnz
adc
jmp
push
orl
inc
add
mov
and
ljmp
add
xchg
jecxz
mov
jae
push
outsl
pusha
stc
test
jb
push
es
mov
movb
add
adc
cwtl
fisttps
sbb
push
std
roll
mov
mov
jae
jo
icebp
push
jmp
adc
nop
mov
jb
adc
pop
dec
call
loopne
mov
in
pop
mov
aas
mov
lcall
inc
dec
or
test
adc
jo
es
repnz
loope
mov
outsl
rorl
add
and
adc
or
or
insl
mov
xor
jae
js
lods
fcoml
or
int
inc
scas
add
fs
sti
and
andb
stos
or
or
sbb
dec
nop
imul
pop
inc
jae
xchg
daa
insl
loop
push
jae
pop
sti
lods
std
or
fcmove
and
cmpsb
jo
push
lcall
pop
mov
add
add
jno
push
rcl
mov
loope
dec
add
pusha
cld
cmp
mov
shll
jae
les
imul
xlat
loopne
or
ds
push
movsb
inc
jae
das
daa
pop
ret
test
int
loope
adc
cld
dec
insl
roll
int3
pop
push
sbb
and
gs
ret
push
sbb
sub
out
and
inc
and
mov
sbbb
popa
xchg
ret
jo
xor
es
leave
jo
push
je
add
mov
add
inc
imul
out
xchg
lcall
or
movsb
out
inc
push
adc
mov
adcb
divl
inc
mov
loop
xor
test
movsl
adc
insl
mov
and
mov
scas
nop
nop
in
jo
mov
push
mov
cmovl
popf
shl
jae
pop
daa
popa
xor
addr16
adc
pop
inc
mov
dec
push
xchg
cld
aam
mov
movsl
in
mov
test
inc
sub
add
mov
int
pop
push
xchg
aam
movsb
jle
jecxz
adc
push
data16
or
or
jo
push
test
ret
or
rcrb
push
popf
xlat
sub
loopne
jo
xorl
aas
insb
inc
xchg
in
aad
mov
push
push
pop
mov
flds
xor
mov
and
in
fs
add
pushf
or
push
adc
inc
xor
sbb
sub
insb
scas
xor
ret
pushf
mov
add
dec
mov
add
mov
jae
testb
test
add
fiaddl
das
addl
cs
adc
scas
xor
mov
pop
xchg
sub
dec
xor
xor
dec
sbb
inc
loope
pop
pop
int
pop
push
and
adc
outsl
dec
push
mov
cmpsb
insb
add
jp
in
leave
push
sub
pop
imul
mov
pop
nop
mov
js
add
orl
inc
sbb
sbb
push
adc
mov
add
inc
push
adc
scas
mov
pop
orl
mov
push
mov
pop
mov
pushf
mov
mov
fs
mov
adc
les
inc
cs
movsl
and
jae
mov
add
or
and
fdivp
mov
mov
fldenv
jo
or
idivw
inc
push
push
jnp
xor
loopne
or
test
push
add
test
pop
bound
sub
push
nop
sbb
cmp
test
enter
push
xor
and
mov
sub
add
sbb
push
in
xor
jne
push
xor
data16
mov
pusha
sbbb
adc
xor
cmp
pop
mov
and
outsl
and
push
clc
ljmp
test
mov
jbe
js
or
std
and
in
add
loope
call
sbb
pop
adc
adcb
mov
jo
pop
or
daa
out
inc
inc
xchg
mov
dec
lds
add
add
sub
stos
cmp
addr16
pusha
stc
fistps
orl
mov
inc
outsl
mov
jae
sub
popa
push
test
mov
sbb
sbb
mov
and
adc
rcrb
insl
add
rclb
and
data16
push
pop
adc
or
subps
pushf
andb
or
sub
sbb
addl
pop
pop
mov
add
push
mov
jmp
loopne
lahf
mov
cmpsb
dec
popf
dec
sub
adc
xchg
mov
adc
push
cmp
sbb
int
push
ljmp
test
and
or
out
add
pop
int
cli
jnp
mov
rcl
pop
nop
pop
pop
push
movl
pop
icebp
mov
jae
mov
add
inc
adc
fs
stos
push
mov
es
out
pop
loope
aam
or
add
and
jb
loopne
scas
push
push
jo
daa
in
add
int
adc
jb
lret
cmp
sbb
cmp
mov
inc
pop
xchg
fs
bt
inc
into
mov
imul
cmp
in
pop
fldl
sbb
out
adc
jg
jo
mov
jecxz
cs
cltd
and
popf
cld
nop
add
test
mov
sub
outsb
out
xchg
sbb
or
mov
mov
and
sahf
add
inc
es
gs
das
cmp
sbb
stos
in
adc
or
in
aam
cmpsb
add
pop
or
add
mov
shlb
enter
add
or
clc
rol
xchg
cs
xor
sub
sub
imul
insl
pusha
jecxz
mov
add
jl
lcall
cmpsb
add
in
xor
dec
xchg
fists
inc
mov
sub
xor
inc
cmp
push
cwtl
jo
pushf
sbb
fnstsw
pop
adc
mov
push
or
les
mov
test
mov
pop
fdivrs
push
cltd
fildl
rcrl
inc
aad
shll
loopne
sub
std
das
add
mov
test
push
sbb
inc
test
pop
shrl
push
pushf
xorb
inc
dec
stos
cmp
adc
popl
add
sub
cmp
mov
sbb
sbb
and
dec
mov
pop
aad
shll
push
and
sti
sbb
inc
jg
movsb
inc
sti
jg
sbb
dec
push
mov
and
push
cbtw
xor
mov
sti
push
or
or
pop
push
pop
mov
loopne
rclb
or
iret
xor
pop
adc
out
aad
rcrb
or
scas
stos
sarb
mov
enter
xor
sub
popa
xchg
in
nop
add
or
and
lahf
rcrb
add
jmp
mov
pop
add
lds
sbb
enter
stos
cmp
mov
stos
pop
incb
cmpsb
jo,pt
adc
cmp
dec
int
test
loopne
ret
push
pop
loope
jo
push
ret
dec
out
push
mov
test
xor
jns
cli
sbbb
push
jge
inc
scas
pop
cmpsl
call
mov
stos
and
inc
or
sbb
mov
addr16
ret
jle,pt
lods
cmpsb
pop
icebp
mov
adc
mov
mov
or
in
int
sbb
pop
es
xor
lret
adc
adc
add
mov
andl
jp
jne
out
adc
dec
subl
les
push
push
js
movsl
in
mov
cli
in
push
loop
adcl
jnp
je
pusha
push
jge
jae
in
or
mov
push
xor
jne
inc
scas
adc
dec
xchg
mov
mov
jmp
add
xor
aaa
adc
push
movsb
pop
call
shr
call
dec
daa
mov
fsubl
jl
dec
cmp
push
or
or
popf
or
xor
jo
cmp
jno
loope
popa
jo
sbb
dec
cs
aad
rcrl
aam
mov
in
movl
js
cli
loope
and
mov
pop
loopne
add
inc
mov
mov
lea
sahf
mov
jo
push
out
stc
jg
inc
jmp
cmp
push
jmp
clc
data16
repz
rorb
push
dec
test
push
xorl
push
popa
pop
aad
and
hlt
loope
pushf
mov
xchg
or
aas
jb
into
mov
push
ret
push
inc
imul
pop
test
shll
push
rclb
sub
fimuls
and
jmp
push
pop
aam
or
mov
inc
adc
loop
jb
imul
loopne
jae
push
ffree
ja
xor
xchg
ret
add
xchg
jb
push
add
into
sbb
in
mov
mov
shlb
loopne
adcl
roll
popf
jne
add
insl
bound
ljmp
mov
sbb
inc
cmpsb
push
dec
sub
xor
jae
push
xor
push
dec
adc
nop
call
xor
cli
sbb
gs
xchg
mov
lret
decb
add
xchg
adc
xor
mov
out
xchg
cmpsl
jae
aam
pop
pusha
test
clc
xchg
lcall
add
aas
dec
adc
push
push
inc
subl
fsubl
pop
jge
inc
stos
outsl
sbb
add
sub
in
jno
jg
xor
gs
mov
cmp
dec
gs
sarb
stos
sbb
sbb
pop
loope
test
imul
adc
add
pop
ja
mov
sub
jns
jb
or
jp
xchg
or
aas
rorb
gs
push
gs
or
or
hlt
test
inc
aaa
js
loopne,pn
dec
into
ret
pop
push
jb
leave
push
test
cwtl
sbbb
cli
push
or
jmp
adc
push
inc
push
int
fiadds
outsl
pop
das
push
inc
sub
add
cwtl
fistpl
je
push
loopne
clc
add
sbb
add
js
xor
popf
or
push
mov
or
push
cwtl
in
into
shll
mov
sub
jae
pop
jo
insb
or
cmp
push
movsb
push
mov
andb
mov
scas
xchg
add
mov
sbb
cmpsl
push
pushf
dec
fwait
xor
ljmp
in
pop
ljmp
rclb
test
in
test
or
je
jl
jp
loopne
lcall
lods
popf
fwait
mov
rorl
jo
adc
lret
push
adc
add
xchg
mov
dec
scas
stos
push
mov
dec
loopne
mov
pushf
or
adcb
xchg
mov
shlb
jae
sub
out
adc
mov
mov
int
sub
jmp
inc
mov
and
cmp
mov
pop
and
test
cmp
mov
pop
sbb
cmp
lret
push
into
dec
adcb
sub
xlat
mov
mov
inc
mov
push
or
xor
sbb
jmp
and
sub
cmp
fidivs
cltd
cwtl
insb
test
push
push
mov
enter
jo
into
add
cmp
sub
shlb
cmpsb
add
jb
pop
xor
int
jae
add
sbb
in
mov
sbb
fiaddl
fdivrl
push
scas
fmull
xor
hlt
jb
loopne
mov
dec
add
in
out
mov
sbb
mov
push
or
les
or
sub
mov
faddl
popa
jb
cwtl
add
or
sub
or
into
adc
adc
lcall
daa
scas
xor
sbb
sub
in
adc
stos
pop
push
mov
nop
mov
jle
scas
adc
addl
push
shll
subl
sar
xchg
daa
fcoms
cmc
jnp
cmpsl
idivb
mov
jo
je
xor
pop
sub
sub
arpl
in
or
add
push
xor
in
mov
jo
mov
pop
gs
inc
cltd
add
adc
loope
dec
imul
ret
adc
sub
and
sbb
push
push
loop
jp
push
push
add
outsb
pop
gs
stos
xor
jb
jo
lock
or
add
mov
cmp
xor
pop
pop
cmp
subl
jo
cltd
mov
add
popf
jo
aas
dec
ret
test
adc
ljmp
fldl
or
add
dec
lahf
movsb
and
or
sub
rolb
pushf
and
xor
subl
mov
jp,pn
xor
add
fildl
sarb
jmp
push
or
pop
and
push
int3
movsb
adc
test
sub
cmpsb
dec
jne
rcl
addl
jbe
pop
adc
add
xchg
mov
mov
cmpsb
xchg
ljmp
repz
shl
xchg
fdivrs
xchg
jne
gs
addl
mov
adc
icebp
scas
cs
popa
mov
bound
stos
mov
pusha
pop
loope
js
sbb
ds
mov
cmpsb
testl
push
dec
fs
dec
movsl
loopne
movsl
adc
std
adc
adc
orb
add
call
sbb
rcl
das
cwtl
or
pop
cmpsl
ret
cmp
cs
jb
push
add
sbb
sub
fbstp
je
or
xchg
outsl
push
and
mov
or
test
movsl
sbb
in
push
adc
loop
jb
sbb
repz
inc
inc
data16
dec
rorl
add
pop
and
mov
cmpsl
sbb
sbb
pop
inc
or
aam
cltd
or
or
xor
loopne
outsl
das
pop
sbb
dec
xchg
test
cwtl
jp
push
leave
repnz
dec
jne
sub
push
orl
stos
cmp
mov
cmc
shlb
xor
pop
test
insl
fnstenv
inc
push
add
stos
mov
rorl
scas
jp
roll
mov
push
in
sbb
xchg
lret
call
lcall
xchg
popa
jo
mov
mov
mov
mov
daa
xchg
xor
mov
jl
xchg
lret
push
xchg
hlt
sub
rorl
mov
and
push
sub
or
jo
xor
xchg
jl
fcoms
nop
imul
stos
and
pop
or
or
inc
mov
fsubp
adc
fbstp
or
add
dec
inc
push
mov
incl
mov
cs
and
cmpsl
push
imul
mov
jno
sbb
add
inc
imulb
cmp
inc
push
int
dec
xchg
test
or
mov
add
pushf
les
mov
push
out
push
inc
gs
lods
nop
or
adc
xor
mov
push
inc
stos
or
adc
mov
pop
mov
add
inc
add
imul
dec
aaa
cmpsb
push
movsb
stos
jmp
jae
rorb
xor
loope
cwtl
and
enter
xor
push
js
sub
adc
mov
xchg
cmc
push
jae
sub
and
scas
cmp
rcrb
jo
scas
fdivr
out
rorb
mov
incb
cwtl
and
mov
sub
mov
cmp
mov
pop
cmc
jb
dec
out
frstor
dec
cmp
mov
lcall
ja
jb
cli
and
test
mov
sbb
add
push
adc
testb
testb
cltd
cmp
pop
sub
enter
lcall
jb
sahf
lcall
stc
sbb
lcall
lret
loope
mov
test
stos
pop
and
push
mov
stos
push
or
les
push
inc
inc
xor
sub
jb
mov
faddl
jo
cmp
lock
out
sbb
sub
sarb
mov
jae
stos
mov
orb
xchg
call
push
sbb
in
in
stos
popa
or
or
and
xchg
xchg
push
xchg
leave
jg
out
xor
cmp
scas
scas
test
adc
jg
aam
test
fidivrs
roll
or
mov
add
lret
sbbb
cmp
jae
je
and
cli
mov
sbb
jae
sahf
in
xor
movsl
add
dec
xchg
cmp
push
jb
push
nop
dec
sbb
xor
imul
push
push
add
or
hlt
adc
enter
xchg
push
lret
push
mov
fs
jbe
ret
loopne
and
aam
mov
mov
leave
sub
adc
push
andl
xchg
in
dec
sti
pop
lret
xor
cmp
inc
daa
jnp
push
sbb
sbb
repnz
add
mov
gs
bswap
inc
cwtl
or
mov
pop
xor
ret
rolb
and
mov
stos
dec
loope
imul
add
jo
shr
into
jne
outsl
loop
es
hlt
or
jae
subb
repz
in
add
daa
cmp
xchg
add
jo
mov
sbb
test
imul
xlat
add
jmp
mov
jae
xor
jg
jecxz
sub
ljmp
pop
cmp
lcall
add
push
add
call
sub
push
ret
xchg
xor
or
cmc
jge
dec
loopne
xchg
push
in
test
pop
xor
sbb
push
into
shlb
in
cmpsl
out
pop
inc
imul
sbb
enter
jmp
jmp
and
imul
sbb
cmp
sbb
loope
push
or
es
lahf
mov
or
xchg
call
rolb
push
push
sbb
xchg
or
pop
inc
mov
lcall
mov
xchg
inc
inc
popa
stos
sbb
ds
cwtl
jb
pop
into
adc
lahf
push
cmp
aad
cwtl
sbb
call
negb
scas
sub
push
scas
mov
push
pop
in
inc
inc
rorb
xor
cmp
sbb
es
flds
xorl
push
push
pop
push
insl
xor
push
xchg
shr
ds
adc
int
push
dec
mov
test
sbb
xorb
cwtl
fcoml
sbb
sbb
popa
add
out
dec
scas
addl
les
stos
sub
ret
add
jl
add
jb
jb
pop
je
ret
int
inc
ss
inc
pop
sub
rcrb
outsl
pusha
and
aam
int
xchg
jmp
mov
fstpl
push
cmp
sub
push
xor
sub
push
add
dec
mov
jp
mov
mov
imull
cmp
mov
push
xor
dec
loopne
inc
push
movsl
xor
js
rclb
lea
test
dec
mov
pop
xchg
mov
dec
xchg
or
xor
or
push
xorl
shlb
inc
in
add
push
es
mov
gs
jo
loopne
inc
in
das
add
sbb
leave
or
push
popa
in
sub
lcall
pop
inc
mov
imulb
or
repz
mov
adc
cmp
stos
pop
jg
jecxz
add
sbbl
int
sbb
lock
aad
inc
jae
aad
and
test
push
sbb
test
jb
test
ds
cmp
leave
scas
sbb
mov
test
loopne
insb
and
scas
cmp
notl
scas
sub
xchg
shlb
mov
add
xchg
loop
cs
adc
mov
xchg
test
mov
subb
pusha
mov
cwtl
sbbb
xor
rcll
xor
frstor
cltd
andb
cwtl
inc
jg
cltd
sub
or
cmp
popf
cwtl
in
xor
or
pop
mov
mov
sbb
test
sub
add
aam
xor
adc
add
mov
xchg
add
jb
jae
fstl
into
cmp
jg
mov
int3
push
and
mov
sub
mov
rol
cwtl
add
mov
movnti
pop
sub
aad
sbb
mov
and
jae
and
push
mov
sahf
jb
cs
cmp
loope
shr
std
pop
cwtl
mov
sub
mov
jbe
mov
adc
mov
or
xchg
and
jp
stos
push
push
or
js
push
jl
test
frstor
adc
inc
jbe
ret
pop
fs
add
int
xor
xchg
adc
mov
adc
dec
pop
inc
scas
pusha
cwtl
repz
sbb
xchg
shl
jnp
cmp
jae
or
xchg
sub
xor
adc
movsb
pop
add
adc
sbbb
jmp
mov
dec
cmpsl
stos
xchg
lret
adc
xchg
jo
loope
mov
xchg
loopne
or
fisttpll
xchg
leave
push
scas
cmp
add
hlt
xor
push
jge
int
dec
sbb
xchg
mov
lret
jo
pushf
sbb
sbb
add
movl
or
inc
out
fstpl
adc
push
les
ret
out
xchg
mov
sub
adc
add
js
add
mov
xor
fmul
push
rorl
shrl
inc
xchg
ljmp
push
and
outsb
jecxz
cmp
mov
loopne
dec
das
and
mov
subl
in
jecxz
out
xchg
add
mov
inc
jl
int
sbb
pusha
jo
cmp
pusha
inc
cmp
out
pop
rcr
add
push
and
cs
sub
and
cmp
adc
mov
sub
pusha
xor
inc
jecxz
sbb
and
aam
pop
push
lock
xchg
sti
xorb
fsubrl
pop
sbb
push
xchg
sub
subl
xchg
push
addl
jl
pop
test
and
pop
inc
sbb
pop
or
push
pop
test
cmpsb
mov
add
enter
lods
sbb
xor
cmp
sub
sahf
mov
lret
push
dec
into
loopne
mov
pop
movsb
xchg
lret
sbb
xchg
pop
pop
adc
inc
test
cmp
sub
mov
aam
sti
add
sbb
xlat
dec
insb
mov
mov
test
or
cmp
mov
test
sbb
push
xor
dec
sbb
adc
lret
xor
push
inc
cmp
in
ror
cmp
fsubrs
call
add
jge
lcall
inc
int
fsubrl
push
int
arpl
data16
lods
jo
or
pop
or
pop
jae
pushl
aaa
decb
test
jg
into
jns
test
lods
push
jmp
add
cmp
xchg
cmpsl
jb
aad
push
push
lock
cmp
ret
loopne
adc
xor
test
xchg
icebp
addb
idivb
push
jp
sbb
xchg
add
xor
mov
inc
sbbl
adc
out
push
int
inc
sub
mov
cmp
sahf
cmp
and
xor
mov
jecxz
jo
cltd
pop
xchg
mov
add
cltd
mov
ret
loopne
ret
xchg
std
cmp
lea
pusha
jb
cmpsl
and
xor
and
add
sbb
add
stos
addl
leave
push
jmp
adc
aad
mov
add
test
push
xchg
xchg
lahf
mov
mov
inc
xlat
mov
ret
xchg
jmp
mov
outsl
add
adc
mov
stos
add
push
sahf
pusha
ret
fwait
xor
loopne
mov
jecxz
jno
push
inc
and
inc
int
cmp
outsl
pop
push
and
aas
xchg
ret
sbb
add
popa
cli
push
mov
xchg
cmpsl
ljmp
jb
sbb
mov
xor
rcll
push
iret
test
sti
lea
dec
inc
test
aam
jp
inc
jae
mov
lcall
push
lcall
xchg
dec
jae
inc
lcall
push
pushf
or
push
jne
test
pop
addb
sti
inc
mov
into
jge
xor
pushf
sub
sbb
mov
mov
dec
add
xchg
xchg
add
adc
mov
scas
adc
pop
lea
leave
push
ds
lock
adc
out
or
cli
fadds
popa
mov
repnz
test
inc
in
sti
bound
adc
or
xchg
cli
scas
movsb
cmp
sbb
push
push
loope
jb
or
and
enter
xchg
addl
idivl
xor
shl
add
push
xor
enter
mov
pop
mov
jnp
xchg
cmpl
in
mov
hlt
push
cmp
sbbl
lea
test
add
cmc
add
push
nop
adc
mov
xor
xor
mov
lret
cmp
sbb
or
adc
sbb
jo
repz
push
rclb
pop
dec
loope
inc
add
mov
adc
jns
add
cmp
sbb
roll
out
sub
xor
test
les
ret
fstl
and
xor
sub
iret
pushf
mov
xor
add
out
xor
jb
imul
push
pop
push
jge
add
cli
mov
mov
ja
xor
add
or
xor
sbb
adc
outsb
add
mov
test
pushf
and
xorl
adc
and
loop
inc
loope
cmpsl
sub
xchg
or
mov
lock
call
and
lods
in
or
es
ds
mov
ljmp
xchg
cmp
push
add
or
popl
cmc
scas
sbb
out
gs
and
inc
add
lret
shlb
sbb
inc
cmp
test
mov
sbb
dec
add
sub
xchg
ret
add
adc
xor
dec
xor
inc
push
push
shll
int
cmp
loopne
push
out
cltd
aam
and
add
call
lcall
jnp
dec
rolb
popl
inc
pop
adc
mov
ret
pop
pop
call
leave
mull
or
cmp
lods
mov
pop
xor
in
add
push
adcl
rorl
pop
sbb
inc
mov
outsl
xchg
test
push
adc
or
aas
xor
sub
jge
mov
pushf
hlt
dec
push
cmp
and
sub
fs
cmp
dec
xchg
jmp
fsubrs
jae
in
lock
test
fwait
dec
add
out
and
daa
dec
or
add
jb
gs
xor
pop
cmp
cs
insb
add
scas
popf
xor
outsb
arpl
add
aad
aas
push
and
cmpsb
pushf
loope
js
out
pop
test
mov
push
xor
cmp
push
adc
jo
dec
pop
jno
push
cs
fs
xlat
shlb
enter
hlt
jmp
sub
push
xor
ss
and
fstpl
xor
outsl
cmp
loope
mov
cmp
jb
out
ret
push
cmpsb
sbb
xlat
mov
fnsave
sbb
testl
xor
push
nop
mov
add
push
hlt
sbb
or
dec
push
dec
dec
cmp
pop
inc
push
sub
lds
mov
ss
push
inc
lret
jne
sbb
sbb
adc
push
and
pop
mov
pusha
sub
sbb
sub
mov
int
or
push
rcr
and
roll
push
into
insb
adc
cmc
sub
adc
inc
xor
scas
sbb
or
sub
add
in
lea
and
push
push
sbb
add
lods
sbb
mov
outsl
ds
lar
test
push
icebp
outsl
adc
xorb
out
xchg
loope
lret
adc
loopne
adc
xor
xlat
mov
jo
pushf
or
insb
inc
es
mov
es
loop
jo,pn
out
mov
test
xor
jo
jp
jg
scas
loopne
mov
inc
mov
sar
mov
mov
mov
popa
in
rorb
rorl
xchg
mov
push
pop
add
inc
pop
and
add
mov
xor
orl
push
mov
xchg
xchg
pop
sbb
push
sbb
pop
mov
mov
pop
inc
push
mov
jb
jb
jp
cmp
and
jo
or
gs
bound
adc
mov
movsb
push
inc
cmpsb
push
adc
call
cmp
push
fistpl
cld
movsb
dec
dec
dec
xor
es
mov
sub
push
and
cmp
add
mov
test
inc
cmpsb
sbb
push
in
notl
test
jo
or
dec
into
rclb
jb
movl
es
sbb
pop
daa
adc
jmp
push
mov
add
mov
jb
xor
addl
fistpll
and
nop
and
lcall
mov
push
adc
pop
jg
dec
cmp
mov
jne
lods
cmp
rolb
pop
pop
and
int
faddl
stos
push
xchg
push
nop
mov
or
sub
test
and
mov
mov
mov
ret
inc
testl
int
stos
mov
dec
pop
fisttps
into
push
and
adcl
mov
call
in
mulb
push
xor
in
sti
loop
add
cmp
jl
xor
cli
shrl
xor
push
xor
addl
push
mov
cmp
dec
jg
push
cmp
sub
lods
lods
or
dec
mov
xlat
dec
aam
aas
in
sbb
test
stc
cmp
pop
sub
push
sub
or
add
cmp
roll
mov
mov
test
push
sbb
and
xchg
stos
sbb
or
xchg
sahf
cmc
or
and
rolb
lret
and
int3
cmp
inc
in
jmp
lds
pop
add
add
es
jo
test
pop
ja
ljmp
add
gs
sbb
js
push
and
push
subl
pop
das
and
push
rorl
jp
and
lret
add
fs
jg
fsubrl
daa
imul
stos
cmp
xor
mov
enter
test
popa
pop
nop
aad
xchg
rcll
or
push
cmp
xchg
add
dec
inc
movl
dec
add
jns
and
insl
jmp
loope
test
into
dec
dec
mov
or
or
scas
lcall
lret
adc
pop
jl
in
push
fs
test
pop
je
add
fnsave
pop
add
scas
mov
xor
mov
xchg
adc
movsb
and
pop
cmpsl
dec
push
mov
push
add
shrl
mov
cmp
or
push
shlb
jp
xor
push
mov
orb
push
shll
xchg
ljmp
pop
mov
sbb
jmp
cmpsb
mov
mov
mov
sbbl
xchg
mov
jmp
ret
call
cmp
jecxz
subb
push
jne
xor
pop
pop
jb
push
adc
sub
mov
ljmp
adc
in
pop
pop
sub
sbb
push
push
inc
pop
mov
mov
sbb
adc
sub
out
notb
adc
fs
adcl
dec
mov
jbe
test
dec
sub
sbb
xorb
inc
ja
int3
and
mov
mov
cmpsl
hlt
xchg
lret
test
xor
xor
cmpb
fs
jo
icebp
test
dec
roll
pop
in
mov
or
cmp
insl
mov
inc
mov
test
inc
xor
cltd
jp
test
pop
outsl
push
js
mov
lods
inc
imul
push
or
pop
mov
nop
stos
imul
test
cmpsl
jmp
rclb
gs
cmp
cmpsl
int
lret
imul
push
add
pop
inc
cmc
fadds
mov
dec
andb
add
sbbl
bnd
mov
push
push
mov
fildll
rclb
loopne
pop
cmc
sti
dec
push
add
sub
jg
dec
test
adc
xchg
test
xchg
test
in
pop
ret
adc
xor
pop
jne
cmp
lods
sbb
and
ljmp
ja
addl
push
add
lcall
jo
test
cmp
inc
mov
pusha
loop
test
dec
add
push
pop
cmp
pushf
add
push
or
pop
pop
add
xchg
mov
jb
mov
push
test
xorl
pop
mov
rorl
pusha
sbb
sbb
test
testb
sbb
cmpsb
insl
and
mov
pop
sub
loope
jl
inc
jno
xor
mov
retw
xor
icebp
cmpb
and
push
xchg
sti
mov
lods
pop
test
push
sbb
pop
aam
sub
aas
and
into
adc
sbb
push
ss
adc
mov
shl
jg,pn
into
hlt
and
adc
arpl
mov
push
nop
and
or
roll
inc
or
rcrb
cs
push
lret
mov
andl
inc
cmp
adc
adc
shl
xchg
push
jge
pusha
test
push
jge
or
push
lods
nop
jl
cmp
movsb
pop
push
jae
sub
pop
enter
jge
lcall
adc
mov
shrb
cmp
dec
mov
mov
cmpsl
or
das
inc
mov
das
pcmpgtb
sbb
add
and
sbb
pop
mov
dec
xchg
push
sbb
pop
pop
lcall
jle
in
sbb
leave
repnz
push
sub
loopne
cmp
imul
stos
dec
fcos
imul
mov
or
jmp
or
inc
das
dec
pop
scas
mov
ret
loope
lret
push
jl
xchg
and
push
dec
fs
sbb
pop
pop
sbb
cmp
and
push
adc
xor
xchg
leave
in
repz
pusha
ja
xchg
cmp
lret
mov
sub
or
or
iret
or
mov
pop
pop
sbb
bound
hlt
mov
sarl
andb
loopne
dec
sbb
popa
jo
es
pop
mov
test
pop
jne
xor
xchg
shrl
js
inc
mov
aaa
mov
ret
sub
push
cmp
or
xchg
orb
sub
and
mov
ret
or
pop
sbb
adc
mov
and
rcrl
or
xchg
mov
ja
ss
adc
mov
inc
sti
pop
adc
xchg
xchg
aam
push
addr16
iret
stos
add
xorb
inc
cmc
xor
push
sub
enter
out
add
cltd
pop
inc
cmpsb
mov
sbb
sub
xchg
and
lods
and
jno
movsb
push
xor
or
dec
pushf
cmp
dec
sbb
enter
inc
int3
cmp
into
sbb
mov
std
and
or
sub
into
leave
push
imul
jae
xor
mov
add
cltd
ffree
scas
inc
mov
dec
and
push
push
mov
add
sub
mulb
add
lahf
sbb
ret
jae
add
xor
or
iret
nop
sub
or
fadd
cmc
sbb
xchg
push
int
and
rol
fwait
xchg
test
shrb
loopne
es
adc
push
mov
push
cmpsb
dec
lret
sub
inc
sub
inc
cmp
adc
rcll
xor
cmp
sti
mov
rcl
loope
pop
mov
xchg
aas
dec
add
mov
jo
sub
aad
cmp
cwtl
mov
sbb
in
add
pop
into
add
mov
jge
jae
scas
pop
das
into
cmp
mov
push
xor
addb
cmp
fsubrl
call
adc
push
mov
push
push
js
mov
and
call
loop
adc
jp
mov
add
cmp
pop
sarb
inc
movsl
rcrb
test
xchg
add
rcrb
in
sbb
push
push
add
inc
mov
push
push
ss
nop
mov
nop
aaa
cltd
add
sbb
sbb
pop
jecxz
or
or
cwtl
xchg
cwtl
ds
mov
mov
push
push
into
test
adc
test
loopne
xchg
cmp
and
jp
jno
mov
pop
arpl
mov
mov
or
push
sbb
pop
xor
and
bound
xor
sub
xor
jb
mov
inc
shrl
mov
in
dec
or
jno
movsb
xor
xchg
out
cwtl
dec
scas
mov
xor
jp
mov
addr16
add
in
pop
mov
mov
adc
adc
stos
test
inc
mov
sbb
jb
outsb
jb
mov
lock
jg
in
je
sbb
jb
inc
dec
push
test
and
gs
mov
sub
sub
inc
or
adc
loop
xor
sbb
in
xchg
sbb
and
popf
gs
add
and
add
sbb
in
push
xor
cs
into
add
adc
pop
xchg
or
and
fldt
cwtl
push
jnp
add
popa
and
and
xor
xchg
cmp
lcall
dec
push
cmpsb
fmuls
cli
mov
add
sbb
pop
inc
leave
jnp
mov
test
or
mov
xchg
sub
mov
xchg
jle
test
outsl
xchg
mov
add
mov
mov
sub
sbb
xchg
add
arpl
cwtl
cmp
vcvttsd2si
mov
dec
mov
push
sub
adcl
shll
jne
sbb
add
mov
cmp
xor
or
fcoms
outsl
out
push
add
jb
cmp
push
jnp
adc
in
in
je
pop
cli
xor
add
pop
ret
cmp
into
mov
add
pop
push
sub
shll
cmp
xchg
mov
and
sub
inc
mov
or
sub
movsb
sti
add
xor
orl
jb
add
or
insl
loop
jecxz
orl
jmp
push
push
or
scas
or
jl
rorl
sbb
mov
sbb
scas
sbb
cwtl
pop
add
push
or
loop
jb
in
and
xchg
popf
add
inc
in
cli
push
add
cltd
pop
push
out
bound
jo
cmp
pop
aaa
add
mov
or
sub
ret
clc
aas
test
cmp
inc
andl
sbb
sub
xor
ja
std
call
and
out
push
insb
jp
sbb
aas
xor
test
xchg
ss
sbb
fisubs
inc
cmp
add
jnp
mov
or
xor
into
enter
fsubrl
cli
inc
cmp
fwait
xor
jo
cmp
cmp
add
std
sbb
out
outsb
or
sub
mov
push
add
cmpsb
nop
int3
pop
adc
mov
mov
sbb
add
and
sbb
sub
lea
inc
test
mov
mov
push
add
jnp
xchg
xor
jmp
mov
jne
sub
pop
add
xchg
scas
stc
push
je
adc
sub
or
int
arpl
mov
or
jo
sub
xchg
aad
pop
shl
in
xchg
mov
fistps
into
lret
add
cmc
fimull
stos
xor
push
add
push
mov
mov
sbb
xchg
rol
out
pop
jae
addb
in
push
je
nop
or
cmp
xorl
pusha
add
in
or
sbb
lcall
sarb
mov
aam
addl
lcall
add
ret
cltd
sbb
outsl
das
fcompl
insb
push
jno
loopne
inc
cmp
cltd
or
jo
dec
mov
pop
add
into
test
dec
sub
jg
pop
or
cli
minps
test
cmp
fists
pusha
sbbl
rorl
xlat
xchg
lock
out
add
add
add
or
mov
add
sbb
es
mov
mov
test
cmp
push
mov
push
push
and
mov
pushf
xor
loop
push
sbb
sbb
sbb
jb
iret
push
sbb
leave
xor
sub
adc
mov
orl
loopne
jne
out
mov
out
add
add
dec
leave
lock
add
lcall
add
adc
adc
xor
push
sub
adcl
hlt
imul
jmp
xor
loopne
inc
xor
ret
loopne
sbb
subl
dec
outsb
outsl
or
inc
icebp
jno
in
and
out
inc
cmpsb
scas
mov
cmp
mov
addb
out
cmc
sbb
jl
and
lret
inc
mov
xor
stos
movl
adc
add
mov
pushfw
cmpsb
mov
inc
rcl
adc
add
push
in
in
adc
fiaddl
mov
adc
loopne
and
adc
xchg
cmp
orb
and
daa
xchg
jecxz
leave
add
inc
es
xor
mov
mov
and
ljmp
loopne
scas
add
insl
cmp
sub
xchg
roll
ficoml
adc
aas
imul
call
add
adc
pop
rorl
cli
popf
lock
mov
xor
sub
or
and
and
mov
xor
add
in
push
jne
rolb
loopne
cmp
jge
push
mov
mov
in
out
sbb
jne
dec
nop
add
loop
sbb
enter
mov
mov
xchg
mov
or
nop
and
xchg
test
lcall
or
or
mov
stos
dec
lret
test
push
icebp
and
push
pushf
stos
sub
sahf
jecxz
pop
pop
icebp
inc
xchg
test
cmp
xchg
test
adc
xlat
and
xchg
ret
and
adc
sbb
sbb
jp
imul
fisubl
push
pop
ret
xchg
aas
sub
ror
mov
shrl
dec
mov
aaa
mov
or
fcmovu
jb
sub
push
xor
mov
and
loope
mov
inc
je
ret
fmuls
sub
jno
or
test
mov
push
iret
ror
jp
xchg
imul
cmp
je
jb
dec
arpl
xor
sbb
pusha
add
shll
arpl
repz
fcomps
loop
inc
jno
sbb
or
stos
add
xchg
cwtl
cmp
sub
sahf
lcall
movsb
jno
xor
inc
sbb
adc
scas
jecxz
sbb
lods
arpl
nop
jecxz
subl
and
push
xor
insb
push
loope
rcrb
je
or
ret
mov
loop
sbb
scas
xchg
jae
lret
sub
add
test
pusha
mov
je
push
jo
iret
jo
inc
jae
ljmp
and
call
pusha
add
fsubrl
inc
mov
sbb
xor
dec
push
ja
cwtl
orb
iret
sarb
lret
cmp
popf
sub
es
scas
add
or
cmp
inc
inc
es
test
hlt
add
push
popa
rcrb
in
in
inc
adc
ret
dec
out
push
sub
push
add
push
push
mov
dec
cmp
cmpsl
pop
sub
add
push
sbb
pop
or
addb
loopne
daa
inc
test
dec
mov
je
push
add
dec
movsl
jo
js
int
xchg
push
push
mov
scas
and
jb
cmp
sub
stos
add
dec
cltd
xor
es
jae
sbb
pop
xchg
dec
xchg
rcrb
aad
lea
push
push
fldl
jne
jl
outsb
sahf
mov
adc
jae
cmp
pop
push
push
rcrl
imul
jb
or
adc
jp
or
loope
andl
mov
shl
fs
or
dec
cmp
arpl
pop
cltd
mov
movl
jno
xor
mov
or
cmp
xor
cmpsl
test
mov
stos
jb
push
ja
lahf
scas
cmp
pop
pop
mov
rol
mov
push
inc
lea
pop
mov
mov
cmpsb
inc
cmp
add
or
cwtl
mov
cmpsb
cmp
xchg
add
mov
cmc
adcb
pop
adc
cwtl
cmp
pusha
add
enter
stos
test
push
mov
adc
pop
test
inc
inc
cmp
push
addr16
stos
fs
xchg
adc
xor
xor
xor
cmpsl
lret
adc
ret
in
shl
adc
lcall
sub
add
add
xor
mov
xchg
add
add
imul
xor
push
cmpsl
pop
inc
or
push
cmp
mov
mov
or
cmp
fisubl
cmp
rcll
into
sbb
bound
mov
test
pushl
push
xchg
push
rcr
push
divl
sbb
lods
xor
loope
add
mov
inc
mov
nop
and
lret
pop
sbb
dec
sarb
push
cmp
sbb
add
std
mov
fs
dec
mov
ret
lock
stos
loopne
aad
mov
sbb
inc
shlb
cmpsb
push
adc
faddl
adc
pop
xchg
loopne
inc
jle
scas
push
cs
loopne
nopl
lcall
jo
xor
stos
and
mov
add
pop
push
mov
mov
int
pop
stos
push
jne
pop
pop
sbb
add
push
sub
mov
bound
rol
jns
inc
sarb
rolb
xlat
push
stos
testb
mov
xor
ret
or
push
outsb
gs
rcrl
and
xor
sub
nop
push
pushf
sub
jge
sub
fsubrl
jb
jecxz
bound
addl
cmpsb
push
mov
cmp
pop
int3
xor
xor
add
sub
dec
sbb
loop
pushl
mov
dec
mov
add
sub
cmp
aad
push
outsl
push
sbb
cltd
mov
cmp
gs
and
add
adc
lds
inc
stos
add
jb
fdivrs
lock
push
cmp
cmp
out
add
cltd
or
sub
cmc
shll
loope
inc
test
mov
xchg
stos
rclb
pop
out
push
cmp
iret
sub
jl
cs
jae
xchg
or
movsl
shlb
xchg
sbb
adc
or
int3
pop
aam
adc
pop
loopne
push
cmp
xlat
pop
mov
ror
inc
pop
and
push
in
loopne
mov
pop
or
push
cmp
sbb
push
sbb
sub
in
sbb
and
imul
inc
es
or
lcall
add
movsb
sti
jo
mov
aam
cwtl
daa
add
push
push
aaa
jecxz
or
add
inc
testl
sub
pop
adc
dec
or
pop
test
sbb
push
adcb
push
enter
hlt
xchg
lret
movsl
lds
imul
xor
add
loopne
push
push
push
cmp
jnp
out
in
push
mov
fidivs
ret
lret
mov
std
std
lcall
mov
add
sarl
cltd
enter
add
mov
xor
setp
pop
sbbb
mov
xor
push
sbb
mov
nop
leave
lock
movb
scas
je
sub
add
stc
sub
ljmp
or
dec
pushf
inc
into
adc
add
sub
cmp
sahf
cltd
call
sbb
mov
mov
add
leave
push
repz
push
jmp
push
cmc
pop
mov
jae
mov
test
fbstp
jmp
mov
outsl
lret
jbe
aad
inc
sbbb
testb
rcrl
cmp
test
loopne
mov
arpl
fs
in
sbb
push
icebp
in
cmp
std
mov
adc
imul
mov
inc
addr16
sbb
sar
outsb
xor
adcb
ret
inc
daa
ja
mov
cmpsb
data16
loop
sub
adc
or
rcrl
jnp
push
stos
push
popa
push
ret
dec
icebp
subb
cmp
loop
jmp
outsb
mov
pop
ret
aad
jo
stos
pop
sbb
xchg
loope
mov
mov
in
ret
add
ficoml
pop
and
cmp
mov
addr16
adc
xor
in
sub
push
addb
mov
rolb
or
add
jp
or
pop
into
js
scas
jno
test
add
pop
pop
or
stc
add
xor
jl
add
xor
jge
sub
daa
andb
mov
xchg
xor
nop
stos
filds
push
push
or
adc
sub
daa
inc
add
pop
sbb
inc
adc
call
stos
add
test
ret
in
shll
and
test
es
inc
xchg
lcall
push
jecxz
cld
or
ss
sub
pop
stos
stc
pushf
mov
aas
fs
mov
cmc
pop
pop
add
mov
and
nop
dec
adc
or
or
cmp
call
mov
loop
jo
xor
dec
push
js
pusha
ss
push
sbb
xor
mov
rolb
xchg
ror
stos
fsubrl
mov
sub
scas
fs
pop
xor
push
dec
enter
push
shrl
push
daa
dec
add
add
xchg
add
mov
or
sub
add
insb
add
jae
or
outsl
js
mov
push
outsb
lret
add
aam
daa
mov
out
adc
rolb
in
in
lds
push
ljmp
mov
dec
fimull
clc
sub
xor
mov
call
adc
mov
xor
shrb
push
inc
push
jb
or
insb
rolb
loopne
or
pop
push
dec
cmpb
pop
int3
push
ret
inc
xor
ret
pop
push
add
xchg
mov
test
push
clc
andb
mov
imul
sti
inc
pushf
cmp
mov
mov
adc
add
xorl
sbb
das
jl
and
xor
mov
lods
pop
cmp
mov
push
pop
inc
hlt
pop
adc
mov
mov
decb
xor
les
lock
xor
aam
into
in
xchg
popa
mov
xchg
jae
jmp
push
shll
xorl
push
inc
pusha
rolb
jb
jno
jne
jb
pop
mov
add
lods
movsb
dec
sbb
lcall
scas
imulb
pop
mov
adc
jl
pop
push
rcll
push
loopne
sarb
cmp
inc
or
out
adc
pop
jecxz
ret
les
pop
sub
and
shll
fldcw
shl
sbb
sbbb
pop
xlat
sub
insb
cli
je
cmpsb
loop
dec
icebp
add
sbb
inc
loopne
adc
rclb
pop
nop
sbb
mov
loopne
mov
push
cs
mov
inc
pop
lcall
dec
push
jle
int3
mov
jl
jp
jp
movsb
xchg
pop
dec
pop
nop
xor
add
dec
cmp
adc
inc
adc
and
rolb
leave
pop
cmpsl
into
mov
xchg
add
mov
int3
xchg
roll
push
push
or
adc
jb
add
pop
push
mov
jecxz
mov
push
jns
push
inc
out
mov
and
nop
mov
mov
jmp
add
or
pushf
mov
sbb
add
xchg
sbb
push
add
cs
das
sub
rorb
fsubl
out
mov
les
daa
ror
lret
mov
das
add
xor
and
sarb
lcall
lcall
test
sbb
sarb
jl
push
sbb
mov
mov
mov
loope
mov
jo
xchg
shl
sub
cmp
mov
push
add
pop
push
push
andl
or
mov
add
in
test
in
mov
leave
out
xchg
shl
push
icebp
stc
int
rol
add
mov
js
ret
mov
jno
mov
insl
into
ret
sar
add
cmp
add
and
jo
lcall
inc
add
inc
mov
mov
pusha
and
push
fmuls
adcb
jo
or
push
push
cltd
and
ljmp
orb
inc
adc
dec
sbb
adc
xlat
or
jp
sbb
push
mov
mov
or
add
pop
lret
cmpsb
scas
or
cli
push
xchg
inc
xor
jo
cmpsl
push
fdivs
cmp
shl
js
lcall
and
or
lahf
and
and
cld
fdivl
jp
sub
jo
enter
popa
lret
add
out
xchg
mov
mov
mov
pop
push
push
add
mov
add
or
xor
and
jl
sbb
cmp
inc
in
out
or
inc
call
test
adc
js
hlt
ljmp
sub
insb
imul
leave
jo
push
fsubs
sbb
test
mov
xchg
add
dec
jbe
mov
pop
cmp
or
scas
push
mov
xchg
test
dec
sbb
lsl
add
movsb
clc
mov
push
cmp
loopne
jno
mov
loope
pop
dec
pop
push
sbb
mov
mov
sbb
xchg
aad
pop
cwtl
push
mov
push
sub
adc
fimull
xor
push
xor
enter
data16
cmp
out
sub
scas
push
xchg
inc
cmp
and
jb
cwtl
test
out
dec
dec
add
subb
sub
pop
xor
loopne
out
ljmp
dec
rcll
and
and
lcall
addr16
in
outsl
mov
xor
nop
leave
push
divl
push
test
push
adc
push
push
enter
jae
pop
adc
test
xorb
jle
xchg
loopne
cltd
jo
scas
fisttpl
andl
sbb
jb
push
je
push
sti
or
pop
scas
and
cwtl
into
rorl
mov
mov
push
pop
cmpsl
push
xor
negb
orl
pop
lds
pop
xchg
mov
inc
sbb
enter
adc
out
je
test
pusha
cmp
pop
xchg
mov
jno
add
pop
sarl
test
push
test
mov
xchg
push
and
ds
pop
lods
jl
sub
sbb
sbb
adc
aam
lock
inc
das
mov
inc
cmp
imul
xor
loope
jmp
in
imul
sbb
sahf
mov
push
mov
add
call
pop
xchg
mov
inc
sub
xchg
and
rcrl
mov
mov
xor
movsb
sahf
cmp
xor
loopne
inc
cmp
dec
mov
mov
cltd
jp
cmp
nop
leave
inc
roll
arpl
mov
jno
push
dec
in
lods
pop
cmp
jns
or
or
inc
cmp
cmp
int3
adc
add
jg
scas
cmp
mov
pop
push
cmp
inc
dec
xlat
dec
push
mov
push
xor
mov
jo
cmp
add
cmp
adc
clc
cmp
insb
sbb
inc
push
sbb
pop
rcr
add
and
and
stos
push
adc
or
xchg
lcall
in
adc
dec
jbe
and
push
mov
push
push
push
mov
repnz
pusha
ljmp
loope
in
mov
cmp
and
sbb
mov
into
inc
sarl
aam
cmp
or
pop
add
cltd
mov
mov
lock
loop
mov
mov
lret
xlat
mov
adc
movsl
ret
fdivl
cld
mov
mov
fsubl
sbb
add
stos
push
dec
loope
push
cli
and
push
in
push
pushf
mov
in
xchg
add
cwtl
orb
pop
mov
test
jae
push
mov
xor
jne
ljmp
in
lock
jne
xor
xorl
jl
xchg
ror
or
pop
fdivrl
mov
inc
jne
xchg
add
aaa
inc
lcall
lret
adc
inc
cmp
xor
adc
icebp
lods
jnp
jae
push
pusha
or
sarl
sahf
or
mov
scas
jb
lret
push
inc
in
dec
sahf
std
andl
cmp
add
sahf
sub
or
gs
mov
cmp
subl
or
jl
fwait
rorb
jle
gs
subb
cmp
push
add
inc
jne
xor
push
adc
roll
push
das
loopne
jae
mov
pop
jbe
inc
sbb
sbb
jb
scas
or
popa
cmp
pop
cltd
cmp
push
adc
pop
add
mov
test
adc
movsb
shlb
jmp
loope
xchg
xor
push
rcrl
mov
add
xor
fs
jle
outsb
enter
out
jg
cld
jae
mov
mov
cmp
mov
stos
and
lcall
data16
stos
cltd
jo
jno
dec
out
inc
inc
adc
xor
inc
or
push
sbb
cwtl
je
mov
rolb
loopne
jae
bnd
popa
test
adc
fisubrl
push
jb
sbb
daa
jb
push
jo
pushf
xor
sbb
push
push
cmp
sub
mov
in
sub
lds
clc
or
pop
scas
push
push
loope
scas
repz
clc
pushf
aaa
mov
sbb
or
sub
cmp
xor
xchg
jo
test
lcall
and
in
std
add
pushw
add
mov
add
pop
jmp
das
mov
add
js
out
inc
cwtl
add
fistl
mov
add
mov
mov
or
xchg
lods
and
adc
add
push
dec
lock
outsb
pop
xchg
rcrl
jp
lea
dec
dec
outsl
push
shll
sti
stc
icebp
loope
xchg
or
mov
push
cli
cmp
xor
add
cmp
aam
and
addb
cmp
les
in
popa
pop
push
dec
jmp
xor
xor
jo
add
cwtl
or
lret
sub
pop
jl
cmp
outsb
sub
movsb
call
cmp
xor
imul
jae
data16
add
push
rcrb
insb
subl
mov
push
inc
aad
mov
orb
dec
shl
push
rclb
jno
push
adc
cwtl
push
pop
xor
movsl
cmp
xor
test
lret
push
and
out
mov
lock
hlt
call
mov
sbb
xor
out
add
loopne
mov
adc
sarl
add
or
scas
out
pop
dec
inc
xor
loopne
xor
es
icebp
or
pop
hlt
je
daa
add
je
loope
add
loopne
in
xchg
adc
je
ffree
into
in
xchg
dec
lcall
sahf
pushf
inc
mov
add
test
pop
mov
add
sub
inc
popa
and
sbb
push
mov
icebp
es
or
cmpb
or
add
or
or
add
dec
cmp
jl
outsl
repz
cs
in
js
popf
es
and
and
xchg
and
fimuls
sahf
sbb
adc
das
mov
mov
addr16
xor
loope
dec
mov
andl
in
inc
or
pushf
or
mov
jns,pn
inc
inc
sbb
push
ret
sarl
xor
icebp
aaa
mov
lds
imul
sub
and
int
aam
loope
xor
xchg
in
pusha
rcrb
lret
or
add
loope
adc
mov
inc
mov
cmpsl
sbb
das
push
push
sbb
cmpsb
push
xor
gs
add
add
stos
cmp
sarb
rcrl
int3
mov
cmp
add
lock
rcll
fisubs
add
adc
movsl
dec
jne
jo
push
cs
test
xlat
xorb
fldcw
pop
lcall
imul
mov
cwtl
mov
or
dec
in
dec
test
mov
push
xor
jb
xchg
and
and
rcrb
out
shlb
inc
jnp
lahf
call
mov
inc
fs
stc
mov
ret
leave
adc
inc
sbb
add
xchg
mov
pop
jae
inc
xor
add
pusha
sub
cltd
dec
dec
add
xor
inc
ljmp
jo
sub
inc
xchg
push
shll
cmpsl
addb
dec
push
fidivrl
inc
cmp
cmpl
xorb
outsb
loopne
cltd
jo
and
jo
lcall
roll
sbb
jp
xchg
pop
sub
cmpsl
sub
inc
or
repnz
or
mov
jmp
loopne
bound
push
flds
negl
mov
ret
rcll
adc
mov
in
xor
pop
pop
stos
pop
leave
push
or
imul
add
add
pop
mov
xorl
fld
aad
cmp
cmc
xor
or
push
push
movsb
fs
push
jo
push
nop
mov
xchg
add
push
sbb
add
push
cs
xchg
sti
out
push
pop
cmp
push
enter
mov
inc
jnp
pop
cmpsl
dec
loop
cmp
cmp
ss
pop
inc
mov
cltd
mov
je
jbe
pop
out
xor
insl
mov
movsl
push
cmp
mov
adc
pop
into
add
cwtl
mov
add
sbbl
pushf
adcb
lods
and
cmc
and
fidivrs
and
and
imul
ret
jecxz
pop
or
mov
or
cmp
sub
push
jo
xor
cwtl
mov
ret
test
add
lcall
mov
and
sub
loop
sbb
add
jo
pop
push
mov
push
ret
fiaddl
or
mov
mov
sbb
sarb
adc
jne
pusha
mov
dec
inc
mov
lods
outsl
dec
mov
push
rcll
in
pushf
xchg
pop
inc
shll
xor
addl
lahf
lock
lret
in
jne
jns
cld
stos
enter
mov
pop
nop
cmc
jae
jp
push
cwtl
imul
push
roll
es
and
popf
or
stos
es
and
mov
push
adc
fisubl
or
xor
pop
cmp
jne
outsl
out
sbb
insl
jle
lahf
lret
jo
mov
or
add
dec
dec
push
test
sub
outsb
fwait
leave
push
cwtl
ret
add
icebp
aas
mov
sbb
mov
mov
sbb
mov
mov
and
stc
push
push
enter
or
mov
test
popa
inc
loope
add
xchg
cmp
push
mov
jb
cmp
sbb
addr16
jnp
or
bound
lret
xor
cs
les
adc
cltd
jb
mov
cmpsb
shlb
mov
sbb
inc
and
cs
pop
call
in
jb
sbb
xor
xchg
movsb
es
cmp
adc
xorl
push
cmp
test
nop
lret
leave
adc
add
mov
dec
pushf
jecxz
les
inc
xchg
movsb
fdivrl
movsl
adc
outsl
or
leave
inc
mov
push
insb
inc
xor
daa
or
ret
and
into
xchg
pop
aam
or
push
adc
or
or
xchg
shlb
sti
mov
mov
xchg
test
int
jecxz
pop
adcb
jno
movsb
dec
sub
sub
cmpsb
push
lods
adcb
and
jle
xchg
call
out
mov
xchg
or
test
jns
pop
test
cmpsb
xchg
fs
das
dec
sbb
imul
push
mov
int
arpl
jns
and
mov
jo
dec
cmp
push
cmpsb
sbb
inc
scas
and
pop
nop
out
loopne
imul
js
jg
cmpsl
inc
hlt
lods
sub
push
or
sbb
push
inc
lods
dec
dec
addr16
loopne
push
xor
iret
inc
push
mov
pop
loopne
push
inc
es
push
lock
pushf
rorb
xchg
or
shrl
sbb
adc
mov
pop
loope
push
add
sbb
xlat
add
inc
mov
pop
mov
icebp
sub
movsb
scas
xchg
xor
dec
push
dec
daa
sarb
nop
and
xor
rcl
add
add
test
stc
lea
xor
fdivr
lret
int3
cmpsl
jb
mov
add
lock
cmp
aaa
and
xorl
xor
push
in
adc
in
push
popa
lret
jbe
sub
jecxz
mov
iret
jecxz
cmp
push
rorl
and
add
pop
ja
or
inc
mov
sbb
mov
adc
nop
or
adc
add
xchg
shrl
aam
sub
addb
and
inc
loopne
push
or
xorb
mov
push
lods
es
adc
sbb
add
cmpsl
iret
inc
scas
mov
xchg
outsl
dec
mov
sub
or
sub
shrl
xchg
loope
ja
loopne
rolb
sbb
pop
push
pop
mov
mov
add
ret
mov
and
sarl
jae
inc
hlt
or
pop
outsl
sub
pop
sbb
mov
fs
pusha
xor
int3
dec
add
hlt
adc
pop
popa
ret
mov
cwtl
enter
inc
sarb
inc
scas
and
pushf
and
fs
and
cmp
aam
je
inc
cwtl
or
add
mov
cmpsb
out
pop
sbb
jae
add
imul
int
mov
dec
cmpsb
pop
push
leave
fwait
mov
add
pushf
and
rcll
clc
adc
mov
sarl
push
pop
cmc
mov
jno
addb
xor
fimull
push
xor
or
jnp
or
fdivl
test
pop
jns
cmpsb
sbb
xchg
sub
stos
into
lret
mov
add
pop
movsb
test
mov
push
or
cltd
cltd
mov
cs
sar
and
mov
or
es
jle
aaa
adc
popa
inc
cmp
sub
sub
loopne
inc
and
aas
adc
mov
scas
jb
cmp
shr
xchg
push
cltd
stos
add
or
or
or
out
xor
lret
push
xchg
loop
sbb
mov
mov
scas
jp
jl,pn
push
jnp
out
add
inc
mov
push
adc
mov
ret
add
inc
jl
push
jne
outsl
pop
add
mov
dec
ltr
jl
dec
clc
outsl
lahf
dec
test
lock
ja
dec
stos
mov
xchg
push
pop
or
imul
inc
push
stos
cmp
lods
push
jg
mov
push
mov
push
cmp
inc
mov
cltd
mov
int
or
loope
fmuls
push
and
mov
pop
sbb
inc
mov
push
cs
addr16
ror
mov
and
cmp
inc
inc
loopne
push
cmp
ds
test
xchg
push
movsb
adc
stos
jbe
rcl
dec
push
mov
push
and
xchg
mov
adc
call
pusha
xor
pop
fsubrl
add
mov
mov
imul
push
xchg
mov
addb
push
mov
ds
enter
xchg
and
scas
dec
icebp
cmpb
jo
or
pop
leave
dec
sbb
in
xchg
inc
pop
mov
mov
push
or
xchg
test
inc
les
pushf
rcrl
cmp
dec
loopne
push
pop
pop
lds
or
lcall
sub
stos
sbbb
xor
pop
xchg
push
cltd
pop
cmp
ds
mov
ret
data16
jo
xor
ret
lcall
mov
mov
pop
xor
stos
mul
sbb
or
les
push
fs
rolb
pop
adc
mov
loop
push
and
jo
push
cmpsl
movsl
sub
add
or
and
jno
lcall
push
push
jmp
xchg
in
mov
pusha
add
sub
test
fcoms
add
inc
cwtl
sub
sbb
hlt
sub
sub
pop
adc
lcall
sbb
rcll
ss
dec
jb
inc
add
push
pop
jmp
add
pop
pop
sarb
jp
mov
scas
cmp
scas
push
push
jge
mov
push
push
loopne
cmovb
adc
nop
inc
pusha
push
pop
cmp
xor
and
es
cmp
js
xor
in
pushf
lods
jne
and
push
test
cwtl
push
xor
and
xor
popa
ret
and
add
add
inc
aas
andb
outsl
xor
dec
push
add
push
lea
mov
mov
loopne
leave
and
orb
and
xchg
xchg
inc
cmpsl
pop
popa
popf
mov
sbb
or
shl
mov
js
sbb
push
dec
mov
mov
iret
dec
scas
es
pop
pop
jb
pop
popa
ret
add
jns
jb
ret
sub
sub
das
and
inc
ror
ret
add
pop
cmpsb
xchg
and
pushf
sub
push
sub
sbb
mov
cmpsb
xor
data16
push
lock
push
adc
push
xchg
xor
enter
leave
jge
inc
sbb
cld
pop
pop
ret
cmp
push
xchg
mov
xchg
cmc
and
add
pop
adc
push
push
cmp
push
es
andb
cmpsb
xlat
lea
jb
dec
inc
cmp
repz
sbb
or
sbb
mov
cmp
and
adc
sbb
je
loopne
sbb
add
les
cs
fcmovb
push
hlt
and
ja
sub
dec
push
sbb
enter
mov
jg
pop
add
pop
cmpsl
push
xor
push
ja
fs
movsb
add
cwtl
jo
stc
add
xor
test
mov
cmp
rcl
out
mov
adc
out
push
inc
scas
push
mov
das
es
push
out
lods
popf
imul
pop
into
push
push
jb
sbb
sub
scas
sbb
push
inc
js
add
inc
lahf
aad
cmp
dec
nop
and
lret
negb
push
xor
nop
mov
in
rolb
mov
loope
add
cmc
insl
pop
or
push
add
push
cmp
push
enter
nop
cmp
fsubs
push
jo
xchg
andl
daa
dec
or
in
fucomip
jnp
adc
sub
loope
adc
rcll
lret
pop
lods
xor
sbb
inc
pop
int
enter
fidivl
sbbl
es
pop
scas
push
cwtl
push
jp
pop
xchg
sub
in
push
ret
xor
stos
fidivs
loopne
cmp
push
mov
sbb
xor
or
sahf
aad
inc
and
cmc
test
xchg
fisttpl
fwait
jmp
ljmp
mov
xchg
jae
push
mov
push
push
inc
pusha
sbb
sbb
test
pushf
call
pushf
jns
cld
mov
test
dec
sub
or
sbb
inc
outsl
inc
popa
xchg
xor
sbb
aas
inc
adc
enter
and
mov
or
filds
push
cwtl
lret
loope
add
aad
lds
push
inc
nop
ljmp
stos
push
je
pop
cld
inc
pop
pop
xor
push
dec
push
pushf
dec
ja
cmp
push
outsl
imul
cmp
mov
pop
test
pushf
add
mov
orl
adc
mov
jo
int
jge
out
mov
inc
jae
cmp
push
cmp
push
xor
push
fs
aas
cld
int
push
adc
sub
cmp
pop
ficoms
cmp
addb
pop
in
or
push
mov
mov
sbb
stos
dec
jl
jecxz
lret
push
fldenv
mov
push
mov
rclb
sbb
or
in
out
shlb
inc
jne
mov
fs
hlt
pop
fnstenv
mov
sbb
subl
ret
das
or
dec
mov
aad
add
add
add
cmp
leave
push
sbb
add
pushf
orb
ret
push
xor
mov
ficomps
lea
je,pt
adc
mov
lahf
or
jae
add
aad
lods
sub
loope
iret
add
fs
or
mov
push
add
addb
test
hlt
pop
xlat
dec
in
push
mov
ljmp
addb
out
xor
adc
in
xor
loope
sbb
mov
loopne
xchg
jo
stc
and
subl
jb
dec
sbbb
test
xchg
pop
xchg
scas
push
scas
sbb
addb
add
testl
inc
mov
xchg
push
mov
cmc
mov
popf
mov
cmp
fisubl
pop
cmpsb
enter
ljmp
xor
lret
and
add
cmp
add
cmpsl
sub
aam
or
lock
sub
orl
rcrb
scas
in
xchg
shlb
xchg
add
jae
mov
and
ljmp
adc
pop
lcall
mov
cmc
test
mov
cltd
ss
leave
popf
ljmp
or
inc
movsb
in
xchg
mov
mov
xchg
in
out
dec
jo
lods
cmpsb
push
xorb
loop
nop
xchg
lods
cmp
push
xchg
pop
addl
js
loopne
je
or
dec
xor
fiadds
mov
sbb
cld
add
pop
dec
les
mov
pop
out
push
push
sub
imul
sbb
xchg
mov
sub
sub
pop
xchg
and
jnp
cmp
adc
cmpsl
gs
xchg
shlb
ret
mov
push
andl
push
xchg
aad
cmp
add
icebp
test
dec
movsl
leave
add
dec
dec
int
orb
inc
mov
pop
sbbb
or
xor
aas
into
lcall
cmpps
add
jl
sahf
lods
add
int
lock
sbb
js
mov
jmp
jecxz
or
imulb
sub
xchg
cli
jno
test
aam
mov
test
rclb
xchg
test
decb
ret
push
jno
pushf
adc
mov
jo
sub
sbb
mov
push
lcall
push
mov
push
movsb
sbb
lret
das
scas
andb
pushf
xor
push
enter
dec
push
into
gs
dec
sti
jp
sbb
cwtl
jo
inc
aas
and
or
inc
movsb
stos
sub
enter
in
pop
mov
orl
add
call
dec
adc
lods
mov
sub
iret
jae
sbb
add
jo
sbb
push
lea
das
incl
push
add
outsl
jge
jl
cmp
inc
stos
mov
lods
into
icebp
or
imul
push
rcr
cmp
push
cmp
pop
lock
add
pushf
inc
shl
rorl
jmp
inc
mov
ret
sbb
rclb
cwtl
inc
or
pop
or
dec
in
push
jae
pop
or
sbb
je
imul
outsb
jbe
push
in
lds
out
cld
push
add
inc
cmpb
jne
out
jnp
jp
mov
stos
push
daa
or
hlt
lahf
test
nop
leave
inc
mov
inc
fs
aaa
xor
adc
mov
out
push
pop
loopne
push
or
das
hlt
inc
test
inc
lea
xor
sbb
dec
addr16
push
popa
mov
sbb
pop
jnp
test
mov
or
mov
lcall
jge
push
mov
mov
and
xlat
jle
jns
add
push
or
mov
sbbl
mov
mov
jl
pop
scas
test
fiaddl
dec
lock
pop
rcrb
rcrl
rcrb
js
scas
fisubs
dec
leave
sub
lcall
and
insb
adc
add
ljmp
test
js
aad
sub
gs
xchg
push
je
ror
push
call
or
repnz
insl
call
dec
or
cmp
pop
xor
sub
adc
popf
add
jmp
comiss
jnp
mov
mov
xlat
adc
pop
cmp
imul
push
jne
movsl
cmp
sbb
mov
xchg
cmp
push
mov
inc
loope
out
sbb
and
mov
cmpsl
adc
mov
push
cmp
rolb
into
incb
fsubrl
and
push
mov
xor
sub
sarb
inc
xchg
scas
pop
insl
adcb
xor
push
jnp
addr16
push
fisttpll
add
js
push
xchg
inc
scas
adc
pop
mov
adc
in
test
sub
mov
xor
js
xor
lea
popf
jnp
cwtl
add
mov
mov
inc
popa
ljmp
push
push
ret
filds
notl
xor
mov
mov
push
lret
pushf
or
sbb
call
lods
jo
loopne
cmc
and
jo
ret
pop
mov
mov
lods
push
cmp
shll
xor
and
push
jae
mov
loop
ljmp
sub
int
je
pop
adc
inc
cmpsl
add
mov
adc
cmp
pop
test
rcll
adc
rolb
push
movsb
mov
in
mov
call
ret
into
mov
loop
jo
cmp
pop
aam
fbld
xchg
cmp
outsl
jl
mov
jl
push
add
pop
sbb
xchg
jae
xor
cli
fildl
shl
inc
jb
mov
pop
xor
test
push
inc
xchg
cmp
push
sahf
xor
xor
imul
inc
pushf
mov
lods
scas
ljmp
loope
shr
subb
adc
push
sub
mov
add
nop
sub
inc
jp
jbe
jb
stc
jg
mov
clc
ja
gs
inc
xchg
xchg
xor
mov
iret
mov
icebp
and
popl
insl
xchg
cltd
sbb
dec
inc
mov
pop
cmp
enter
and
shlb
xor
adc
add
jle
add
cmpsb
shl
icebp
lock
leave
fidivl
inc
pop
mov
scas
mov
mov
test
fs
sbb
lea
idivb
xor
sbb
xchg
rcll
sbb
into
lcall
imul
test
dec
cmpsb
adc
pushf
les
mov
pop
sbb
jae
les
cmpsb
push
and
sbb
adc
rolb
shrb
pop
xor
hlt
pop
sbb
mov
push
sbb
or
xor
jb
jb
xor
in
xchg
mov
mov
adc
fwait
call
lcall
or
pop
in
xchg
or
jo
dec
nop
dec
mov
cmp
mov
popa
and
xchg
das
xchg
dec
add
inc
test
push
test
test
shrl
sub
stos
mov
or
jae
enter
leave
push
jb
and
push
addr16
cmpsl
xor
jno
pusha
push
adc
stos
ret
stos
add
in
mov
mov
lret
inc
out
jge
mov
shl
mov
adc
rorb
mov
add
xor
ljmp
dec
adc
lret
lret
mov
jo
mov
push
or
sbb
jl
je
shl
push
xchg
adcl
push
add
roll
notl
inc
xor
cmp
inc
xor
js
jno
push
jo
les
cmp
popf
jp
jb
mov
mov
scas
cmp
dec
cmp
cmp
adc
sbb
shll
add
inc
pusha
add
loopne
mov
aas
push
and
and
sub
scas
icebp
add
cmp
adc
push
out
mov
adc
mov
jmp
lret
sub
push
test
pop
into
mov
lds
pop
lahf
addr16
add
daa
and
add
xchg
sub
cwtl
xchg
ljmp
icebp
add
add
jne
push
dec
dec
popa
outsb
addr16
addr16
push
popa
std
push
ljmp
gs
js
gs
imul
bound
inc
outsl
insl
jo
arpl
mov
dec
sub
outsb
outsw
jb
popa
and
adc
and
je
and
gs
outsl
jae
iret
push
inc
jb
gs
imul
cmp
in
fsubr
push
push
push
jb
gs
cmp
jbe
push
jno
arpl
mov
imul
gs
dec
popa
insl
gs
fdivs
dec
outsl
sub
mov
lcall
and
fildl
or
inc
xor
je
arpl
mov
inc
mov
imul
mov
push
xor
push
dec
jae
mov
fwait
push
xor
push
pop
outsb
jae
pop
mov
gs
gs
in
jbe
neg
imul
fwait
sarb
mov
jb
dec
outsl
fs
xor
lods
mov
xor
jb
inc
and
lods
imul
pop
fdivrs
jb
push
daa
arpl
push
jns
push
jns
gs
xchg
aad
sbb
ja
outsl
neg
ret
fbstp
mov
jnp
mov
and
jo
or
or
jp
push
jo
cwtl
int
out
in
jo
je
pop
or
dec
mov
inc
outsl
add
sbb
or
in
dec
movsb
and
cmp
sbb
xlat
ss
out
fldcw
mov
lock
in
pop
inc
dec
je
sub
jbe
fs
gs
mov
jns
jae
dec
fs
imul
jnp
push
jb
outsl
fisttps
imul
push
dec
sbb
bound
aaa
mov
imul
stos
notl
int
js
data16
jae
packuswb
and
out
push
ljmp
pusha
mov
jecxz
jbe
inc
cmp
icebp
popl
mov
ret
xchg
xor
xor
xor
fistpl
inc
insb
adc
cwtl
loope
jge
jne
push
test
subb
gs
inc
dec
push
xchg
ja
mov
sbb
cwtl
dec
add
sub
int
or
cmpsb
cmp
cmpsb
or
cltd
and
mov
js
lret
adc
mov
adc
imul
lret
xor
icebp
jo
addr16
push
dec
push
push
sbb
fs
fnstenv
jae
sbb
sbb
mov
pop
dec
rcrl
dec
jb
push
add
in
or
and
aaa
xchg
shlb
pop
ret
sub
and
pop
pusha
mov
ljmp
popa
fbstp
arpl
inc
divl
and
push
push
jmp
int
repnz
dec
orl
repz
adc
fnsave
inc
jmp
jo
mov
lds
xchg
test
bound
mov
ds
insb
int3
mov
inc
lods
mov
stos
inc
ds
dec
arpl
rclb
or
js
aad
mov
roll
or
cmp
dec
dec
push
add
mov
arpl
inc
lods
push
mov
jmp
addr16
jb
push
insb
dec
imulb
pop
push
mov
outsl
jge
stos
inc
jnp
push
imul
mov
je
es
addr16
shlb
int
jno
inc
int3
or
mov
call
sbb
adc
insl
stos
lock
pop
jmp
jb
inc
mov
jae
ret
sbb
inc
fnsave
jl
sbb
mov
imul
lcallw
jns
pop
int
mov
insb
cmp
pop
pop
or
scas
arpl
fdivrs
xorl
lods
pop
jb
xlat
and
aas
adc
sbb
pop
addr16
loope
sub
fdivl
sbb
fcoml
iret
dec
mov
fs
imul
inc
pop
pop
push
mov
es
push
fwait
or
ret
data16
pop
inc
loope
test
imul
es
mov
dec
lcall
add
push
add
subb
daa
in
orl
in
mov
add
inc
pop
xchg
adc
adcl
jo
adc
and
push
jmp
outsl
movsl
or
xchg
or
icebp
dec
adc
testl
popa
and
test
inc
shll
enter
arpl
ret
adc
sbb
addr16
popa
add
mov
insl
pop
loopne
test
jo
dec
cmp
loope
dec
jmp
mov
inc
sbb
inc
push
pop
mov
bound
and
in
jge
and
mov
data16
mov
xchg
sti
dec
imul
and
push
pop
push
mov
rol
sbb
adc
dec
jnp
and
sbb
sbb
inc
inc
loop
jae
pop
das
pop
das
mov
dec
cmpsb
and
and
mov
les
xor
or
mov
pop
leave
into
cwtl
pushf
add
in
mov
push
test
lods
mov
or
sub
mov
js
insl
push
out
push
loop
dec
dec
mov
push
stc
sub
inc
jb
cmp
ja
jbe
pop
fwait
je
push
and
push
mov
loop
adc
mov
push
pop
add
add
cwtl
ret
pop
inc
mov
loopne
sidtl
add
push
hlt
add
lcall
add
or
sti
pop
cmp
add
add
orl
mov
add
fs
nop
or
ret
pusha
add
pop
sbb
movsb
jg
xlat
jmp
pop
into
xchg
les
and
cmp
in
out
aaa
adc
adc
adc
mov
cs
add
xchg
lret
into
daa
bound
push
add
dec
in
cmp
or
repz
std
push
jbe
add
cmp
aas
pop
fwait
add
add
add
add
or
incl
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
lahf
ss
xchg
sub
inc
dec
pushl
nop
imul
movsb
sbb
mov
cmc
mov
fnstsw
lahf
mov
mov
sbb
stos
dec
pusha
mov
lods
lahf
xor
inc
push
add
xchg
outsl
mov
ja
and
mov
push
scas
ss
out
stos
cmp
into
bound
gs
daa
push
jl
and
inc
sbb
repnz
add
lds
push
cs
insl
scas
lcall
sbb
sub
rcll
inc
push
cwtl
push
mov
pop
dec
adc
xchg
push
nop
xchg
ficomps
jecxz
popa
and
or
xor
cmpsb
cmc
cmc
jge
lods
mov
mov
test
lds
or
out
popf
adc
xor
leave
and
cwtl
outsb
repz
lahf
call
repz
je
inc
fcompl
call
aas
mov
cwtl
cmp
sub
into
in
and
fwait
loopne
xchg
ret
imul
fsubs
sahf
mov
push
into
adc
clc
outsb
imul
mov
and
xor
sub
in
sbb
stc
lods
mov
push
stos
mov
jl
jnp
cmp
pop
loope
xlat
ds
out
call
cmp
jb
ud1
lret
xor
push
sbb
push
out
cmpsl
push
jno
int3
xchg
in
inc
cmp
push
jmp
andb
xchg
ds
stc
icebp
add
push
mov
xor
cmp
dec
out
adc
push
mov
pop
loope
dec
in
pop
dec
js
pop
pusha
xchg
mov
imul
lods
shll
dec
clc
loop
lods
call
and
scas
es
mov
add
ds
mov
and
sbb
jge
sub
pop
mov
in
mov
sbb
test
lret
.byte
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pop
rolb
mov
add
pop
nop
add
mov
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
lock
add
add
add
xor
cmp
xor
xor
inc
add
add
add
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
imul
and
push
add
ja
add
add
or
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
pop
add
outsb
add
add
outsl
add
insb
add
add
add
add
add
sub
push
add
add
imul
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
add
add
je
add
outsb
add
insb
add
popa
add
add
add
popa
add
add
add
add
and
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
imul
and
dec
add
imul
xor
cmp
cmp
cmp
sub
add
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
jbe
add
insb
add
add
js
add
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
imul
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
ret
add
mov
add
nop
ret
add
rol
add
add
add
ret
add
mov
add
add
ret
add
in
add
hlt
ret
add
add
add
adc
add
and
add
add
add
les
add
add
add
les
add
add
add
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
jns
je
xor
fs
insb
add
gs
cs
insb
add
gs
xor
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
gs
push
je
push
outsl
dec
popa
insl
gs
add
dec
insb
gs
dec
dec
outsb
jae
jb
dec
bound
arpl
add
je
outsl
arpl
