mov
test
lea
mov
jne
mov
movzbl
add
mov
mov
movl
mov
mov
shr
add
and
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
push
lea
mov
sub
test
jne
mov
movzbl
add
mov
lea
mov
shr
and
lea
mov
add
sub
test
jne
mov
movzbl
add
mov
lea
mov
shr
and
add
test
jne
mov
mov
pop
ret
int3
sub
mov
mov
mov
test
je
mov
test
mov
je
push
push
mov
mov
sub
sub
mov
mov
mov
mov
mov
add
je
push
push
call
push
push
call
mov
lea
push
mov
push
push
push
call
mov
push
push
push
push
call
mov
test
je
mov
mov
add
mov
mov
mov
mov
call
mov
mov
sub
add
mov
je
sub
sub
sub
sub
cmpl
je
push
mov
sub
shr
sub
lea
add
test
jbe
mov
jmp
lea
add
mov
mov
sub
movzwl
mov
and
cmp
jne
mov
and
add
add
add
mov
mov
add
subl
jne
mov
sub
add
cmpl
jne
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
test
push
mov
je
mov
sub
mov
add
add
test
jne
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
push
mov
push
lea
mov
shr
mov
shl
xor
mov
shr
and
add
mov
xor
add
sub
mov
shr
mov
shl
xor
add
mov
and
add
mov
xor
add
sub
test
jne
pop
mov
mov
pop
ret
int3
int3
int3
int3
sub
push
push
push
mov
sub
mov
sub
mov
push
push
push
lea
push
call
test
je
push
mov
mov
sub
sub
add
lea
push
call
mov
lea
push
call
push
push
push
lea
push
call
test
jne
pop
pop
pop
pop
add
ret
int3
int3
push
mov
and
sub
push
push
push
push
mov
mov
cmpl
jne
cmp
je
add
jmp
movl
movl
movl
movl
mov
mov
lea
call
add
sub
jne
mov
mov
add
mov
add
mov
mov
movzwl
mov
sub
mov
mov
push
push
push
push
mov
call
mov
push
mov
call
mov
add
xor
testl
mov
jbe
mov
movl
mov
add
shr
add
cmp
jb
mov
movzwl
add
xor
cmp
lea
mov
mov
jbe
test
jne
mov
mov
test
mov
je
mov
sub
lea
mov
sub
mov
add
test
jne
mov
mov
lea
mov
lea
mov
mov
add
add
test
je
mov
sub
mov
add
add
test
jne
mov
movzwl
add
cmp
jb
mov
add
mov
sub
mov
mov
add
add
mov
mov
add
sub
sub
mov
cmpl
je
sub
mov
mov
add
sub
mov
sub
sub
sub
sub
cmpl
je
mov
sub
shr
add
lea
sub
sub
mov
sub
test
jle
mov
jmp
lea
nop
mov
and
cmp
jne
mov
sub
sub
sub
movzwl
mov
and
add
add
mov
add
add
sub
add
sub
mov
sub
subl
jne
mov
mov
sub
add
sub
mov
cmpl
jne
sub
sub
sub
sub
mov
sub
mov
sub
add
sub
mov
sub
mov
mov
sub
sub
sub
cmpl
je
sub
sub
mov
mov
add
cmpl
mov
je
add
sub
sub
mov
add
push
call
mov
test
mov
je
mov
test
jne
mov
mov
add
mov
sub
mov
add
mov
add
cmpl
je
jmp
jmp
lea
mov
add
mov
sub
sub
mov
test
jns
movzwl
push
push
call
jmp
mov
lea
sub
add
mov
add
push
push
call
mov
sub
sub
mov
add
mov
sub
sub
mov
add
cmpl
jne
mov
mov
sub
add
add
cmpl
mov
jne
mov
add
movl
mov
mov
mov
mov
mov
sub
mov
lea
mov
add
mov
mov
mov
cmp
jne
mov
pop
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
call
push
mov
call
push
push
call
push
push
call
cmp
je
jmp
cmpl
je
call
jmp
call
mov
pop
pop
mov
pop
xor
add
inc
xor
push
jmp
int3
int3
int3
int3
int3
int3
push
call
push
push
call
push
push
call
cmp
je
jmp
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
mov
mov
push
xor
mov
add
xor
add
mov
mov
mov
mov
and
and
mov
sub
test
jne
movzbl
add
movl
mov
mov
jmp
mov
mov
shr
and
add
cmp
mov
je
sub
xor
mov
mov
sub
test
mov
jne
movzbl
add
mov
mov
movl
mov
mov
shr
and
add
test
mov
je
add
mov
mov
mov
sub
test
mov
jne
movzbl
add
mov
mov
movl
mov
mov
shr
and
add
test
mov
je
and
xor
xor
movl
nop
mov
mov
sub
test
mov
jne
movzbl
mov
add
movl
mov
mov
shr
and
add
subl
mov
lea
jne
test
mov
je
mov
sub
mov
mov
add
mov
movl
jmp
movb
add
mov
movl
jmp
movzbl
mov
and
add
add
shr
mov
je
test
je
mov
sub
mov
mov
add
sub
jne
mov
mov
mov
jmp
mov
mov
mov
jmp
lea
call
xor
or
cmpl
jne
cmp
jne
lea
call
test
mov
je
mov
sub
add
sub
mov
mov
jne
mov
jmp
sub
jmp
sub
mov
movzbl
shl
add
add
lea
mov
mov
call
cmp
jb
add
cmp
jb
add
cmp
jae
add
test
mov
je
mov
sub
mov
mov
add
sub
jne
mov
mov
movl
xor
or
add
mov
mov
xor
jmp
mov
mov
add
add
mov
mov
mov
cmp
je
pop
mov
sub
pop
pop
mov
pop
ret
int3
jmp
jmp
jmp
jmp
jmp
jmp
lret
add
and
add
add
add
and
add
and
add
and
add
add
add
jb
gs
xor
cs
insb
add
add
push
imul
jb
je
arpl
outsl
insb
xor
cs
insb
add
add
imul
push
je
add
add
add
add
add
add
and
add
and
add
add
add
add
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
add
add
push
jb
arpl
fs
jae
add
addl
jne
insb
inc
insb
insb
outsl
arpl
add
dec
outsl
popa
fs
imul
add
dec
inc
push
dec
inc
dec
xor
add
add
add
cmp
inc
gs
gs
popa
addr16
add
outsb
jae
popa
je
dec
gs
popa
add
mov
jo
je
push
popa
addr16
add
push
push
inc
push
xor
cs
insb
add
add
sbb
cmpb
add
push
add
addb
add
lock
sbbb
add
or
add
add
add
es
andb
add
add
push
add
add
add
add
addb
add
push
add
addb
add
push
add
add
add
add
add
add
add
add
add
enter
jne
add
loopne
add
clc
add
cmpb
add
add
cmpb
add
add
orb
add
pop
add
adc
add
jo
add
mov
add
mov
add
add
add
mov
add
add
add
add
add
adc
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
js
add
dec
add
push
inc
add
test
add
clc
dec
add
enter
rclb
push
add
add
add
add
pop
add
test
add
shrb
add
add
add
add
add
add
push
les
add
add
push
add
add
add
add
lds
add
add
jo
add
inc
add
add
add
add
movb
bound
add
add
add
add
fadd
add
bound
add
inc
movl
add
ja
add
add
nop
movl
add
add
dec
add
inc
add
pop
add
add
add
dec
add
add
add
add
inc
add
dec
add
inc
add
push
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
push
lldt
or
add
add
add
add
add
or
add
adc
add
sbb
add
sbb
add
and
add
or
add
push
sub
sub
sub
sub
add
or
add
adc
add
adc
add
push
add
add
add
push
xor
or
add
add
add
or
add
sbb
add
sbb
add
adc
add
adc
xor
and
and
and
and
add
and
add
sub
add
xor
add
and
add
es
cmp
cmp
cmp
cmp
xor
cmp
add
inc
cmp
inc
push
inc
add
dec
add
dec
add
pop
add
pop
add
pop
add
pop
add
pop
add
inc
add
dec
add
dec
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
bound
arpl
arpl
fs
arpl
arpl
add
add
popa
add
popa
add
add
arpl
xor
xor
add
arpl
arpl
add
add
add
add
jb
jae
jae
je
je
jge
jge
inc
inc
inc
add
inc
add
dec
add
push
add
push
add
push
add
push
add
pop
add
pop
add
pop
add
pop
add
push
add
pop
add
pop
add
arpl
fs
add
add
arpl
arpl
add
add
add
bound
arpl
add
add
arpl
outsb
inc
jo
outsb
dec
jo
outsb
dec
jo
jo
jno
ja
ja
jns
jp
outsb
push
jo
outsb
pop
jo
addr16
push
add
jnp
jl
jl
jo
jo
je
je
jge
addl
imul
add
pop
addl
xchg
pop
xchg
add
imul
cmpl
add
insl
popf
add
jg
add
jbe
add
jne
add
jge
add
test
add
sbbb
popf
lea
add
cwtl
popf
add
add
add
incl
add
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jl
addb
sub
push
push
push
push
push
push
push
push
and
push
push
push
push
push
and
and
push
push
push
push
push
and
add
bound
push
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
sbb
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
adc
add
add
adc
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
xor
adc
adc
adc
adc
pop
pop
pop
pop
pop
pop
adc
adc
push
and
and
sbb
bound
add
xor
ss
inc
inc
inc
inc
inc
inc
inc
inc
dec
inc
cmp
xor
bound
add
inc
dec
dec
push
push
push
imul
imul
imul
push
push
dec
inc
inc
inc
insb
add
orb
push
push
imul
jb
jb
jb
insb
insb
insb
imul
dec
dec
dec
addb
add
insb
imul
jb
jb
insb
jb
insb
jb
insb
insb
imul
addb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
or
push
push
push
add
add
add
add
add
add
add
or
push
add
adc
add
adc
add
sbb
add
sbb
add
sbb
es
add
pop
sub
and
and
and
and
and
and
sub
sub
cmp
cmp
cmp
xor
add
cmp
inc
add
xor
push
inc
add
inc
add
dec
add
dec
add
dec
add
dec
add
push
add
push
add
push
add
push
add
inc
add
inc
add
add
inc
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
push
add
push
add
push
add
pop
add
add
pop
add
pop
add
bound
pop
ss
add
pusha
add
arpl
arpl
arpl
arpl
bound
inc
inc
inc
add
inc
add
inc
add
dec
add
dec
add
dec
add
pop
add
pop
add
pop
add
pop
add
push
add
add
push
add
pop
add
pop
add
pop
add
pop
add
pop
add
pusha
add
popa
add
arpl
arpl
add
arpl
arpl
add
bound
gs
add
jne
je
je
jp
jp
gs
jg
jnp
jnp
jns
jg
jnp
addb
jno
add
test
mov
add
data16
mov
add
outsb
xchg
add
jno
add
jo
add
js
add
sbbl
mov
add
add
incl
add
sbb
sbb
sbb
sbb
add
das
adc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
adc
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
sub
add
add
add
sub
add
add
add
das
adc
or
or
or
or
or
or
or
das
add
ss
xor
xor
das
xor
xor
xor
xor
es
cmp
push
push
pop
pop
pop
push
pop
push
push
push
inc
aas
cmp
popa
push
cmp
dec
dec
dec
push
pop
push
pop
pop
push
push
pop
dec
dec
dec
dec
cmp
add
incl
incl
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
sub
add
adc
add
and
add
add
or
add
add
add
add
add
add
add
add
add
add
or
or
add
push
push
add
or
adc
adc
or
sbb
adc
adc
adc
adc
sbb
sbb
daa
or
add
or
add
and
add
and
add
sub
sub
add
xor
add
xor
add
cmp
add
cmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
add
push
add
inc
add
inc
add
add
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
pop
add
pop
add
bound
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
je
je
inc
inc
inc
add
dec
add
dec
add
dec
add
dec
add
push
add
push
add
add
pop
add
arpl
fs
add
arpl
arpl
add
imul
jns
addl
jge
test
mov
add
jne
add
jb
add
jns
add
test
add
iret
int3
add
rcl
add
aam
add
incl
add
xor
xor
xor
xor
xor
xor
cmp
push
or
add
add
add
add
add
add
add
add
push
push
add
add
add
add
add
push
push
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
or
add
add
push
push
push
pop
sbb
sbb
and
and
sbb
sbb
push
add
inc
inc
inc
inc
inc
aas
xor
sub
add
incl
add
add
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
and
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popl
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
sbb
adc
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
jecxz
add
flds
add
mov
add
add
add
mov
add
cli
push
add
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
push
add
sti
add
cli
cmp
add
mov
add
inc
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
hlt
adc
add
inc
add
add
add
mov
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
hlt
adc
adc
add
add
add
mov
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
add
add
add
mov
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
mov
add
inc
add
add
add
mov
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
mov
add
inc
add
add
add
mov
add
incb
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
adc
add
mov
add
inc
add
add
add
mov
add
incb
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
adc
add
mov
add
inc
add
add
add
mov
add
incb
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
adc
add
mov
add
inc
add
add
add
mov
add
incb
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
adc
add
mov
add
inc
add
add
add
mov
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
hlt
adc
adc
add
add
add
mov
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
hlt
adc
adc
add
add
add
mov
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
hlt
adc
adc
add
add
add
mov
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
hlt
adc
adc
add
add
add
mov
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
hlt
adc
adc
add
add
add
mov
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
sbb
adc
adc
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
and
adc
add
inc
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
mov
add
inc
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
es
push
add
mov
add
inc
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
push
add
mov
add
inc
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
push
add
mov
add
inc
add
add
add
mov
add
incb
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
xor
xor
sbb
push
mov
add
inc
add
add
add
mov
add
xor
push
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sbb
ljmp
adc
sub
ljmp
adc
ljmp
adc
ljmp
adc
ljmp
adc
ljmp
or
cmp
cmp
dec
add
sbb
sbb
add
add
add
hlt
pop
or
pop
adc
pop
sbb
pop
sbb
pop
push
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
pop
add
sbb
add
inc
add
add
add
scas
push
add
cld
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
std
arpl
std
arpl
std
arpl
std
arpl
std
arpl
std
arpl
std
arpl
std
arpl
std
arpl
std
arpl
std
arpl
std
arpl
std
arpl
std
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
bound
cld
push
push
push
out
sbb
sbb
add
add
add
add
push
adc
pop
sbb
pop
and
pop
sub
pop
lock
aas
pop
lock
inc
pop
lock
dec
pop
lock
dec
pop
lock
dec
pop
lock
dec
pop
lock
dec
pop
lock
push
pop
lock
push
pop
lock
dec
pop
lock
dec
pop
lock
dec
pop
lock
dec
pop
lock
dec
pop
lock
inc
pop
lock
inc
pop
lock
cmp
pop
xor
pop
es
lock
push
pop
lock
adc
inc
add
add
add
add
add
add
add
sbb
sbb
sbb
add
mov
add
mov
push
sbb
mov
or
mov
adc
mov
push
sbb
mov
or
mov
push
sbb
mov
add
mov
add
mov
add
scas
sbb
sbb
add
add
add
adc
add
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
sub
add
sbb
add
xor
add
add
and
add
add
pusha
or
add
sbb
pop
sub
and
sbb
xor
sub
and
sub
and
sub
and
sub
and
daa
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
sub
sbb
adc
nop
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
adc
shlb
sbb
jmp
adc
lcall
mov
push
mov
push
adc
lcall
adc
lcall
adc
lcall
adc
lcall
adc
lcall
adc
lcall
adc
lcall
adc
lcall
adc
lcall
adc
lcall
adc
lcall
adc
lcall
adc
lcall
adc
lcall
mov
push
mov
and
sub
daa
sbb
ljmp
cs
xor
add
call
add
decl
add
decl
add
decl
add
decl
add
decl
add
decl
add
decl
add
decl
add
decl
add
decl
add
decl
add
decl
add
decl
add
decl
add
decl
add
decl
add
call
add
jmp
push
ss
cmp
cmp
aas
cs
or
decl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
add
ljmp
or
aas
cs
out
or
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
or
ds
cmp
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
cs
out
or
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
and
ds
out
or
push
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
and
ds
out
or
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
sub
cmp
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
cs
ds
and
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
cs
out
or
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
cs
out
or
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
cs
out
or
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
or
aas
das
ds
das
aas
out
or
decl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
add
ljmp
or
incl
aas
out
das
aas
out
or
decl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
add
ljmp
or
incl
inc
out
das
aas
out
or
decl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
add
ljmp
or
incl
inc
out
das
inc
out
or
decl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
add
pushl
or
incl
inc
out
xor
cmp
and
adc
push
adc
call
pop
adc
call
or
call
or
call
or
call
or
call
or
call
or
call
or
call
or
call
or
call
push
pop
jmp
or
inc
out
cs
in
push
inc
call
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
call
push
call
push
call
push
call
push
call
push
call
push
call
incl
inc
incl
inc
in
sub
lcall
pop
jmp
popa
jmp
popa
jmp
popa
jmp
popa
jmp
popa
jmp
popa
jmp
popa
jmp
popa
jmp
popa
jmp
popa
jmp
popa
jmp
popa
jmp
popa
jmp
popa
jmp
popa
jmp
popa
jmp
popa
jmp
popa
lcall
pop
incl
inc
sub
mov
inc
std
dec
sbb
dec
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
dec
decl
dec
incl
inc
std
sub
sub
and
mov
sub
enter
sarb
sub
sarl
sub
sarl
sub
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
das
and
mov
inc
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
sbb
sbb
push
dec
sbb
sbb
push
sbb
sbb
push
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
sbb
sbb
push
sbb
push
push
sbb
pop
dec
sbb
sbb
out
adc
lcall
adc
lcall
adc
lcall
adc
lcall
adc
lcall
adc
ljmp
and
stc
and
and
decl
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
and
sub
stc
sub
stc
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
sub
stc
sub
stc
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
sub
stc
sub
stc
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
sub
stc
sub
stc
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
cmp
sub
stc
or
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
sub
stc
sub
stc
or
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
sub
stc
sub
stc
push
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
add
sub
stc
aas
sub
stc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
aas
sub
stc
inc
sub
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
stc
inc
sub
push
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
lcall
add
incl
inc
stc
inc
sub
add
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
incl
incl
inc
incl
inc
incl
inc
incl
inc
decl
dec
incl
clc
inc
das
inc
out
pop
adc
pusha
and
pusha
xor
pusha
inc
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
lcall
pop
incl
inc
out
sub
push
dec
xor
inc
repnz
xor
inc
xor
inc
repnz
cmp
inc
cmp
repnz
cmp
repnz
cmp
inc
cmp
inc
ss
repnz
xor
repnz
xor
dec
ss
in
cmp
push
add
add
push
add
and
add
add
add
add
sbb
add
add
add
push
add
add
adc
add
add
or
push
add
and
add
add
add
add
sbb
add
add
add
add
adc
add
add
add
add
push
add
add
add
add
fdivs
popa
or
push
fstpt
das
xor
pop
mov
rorb
dec
add
pop
fists
xchg
xchg
jp
mov
jnp
in
mov
inc
stc
xchg
aaa
leave
inc
out
pop
arpl
enter
fnstcw
stos
xor
mov
lahf
das
in
jmp
mov
pop
add
pop
inc
jmp
adc
xchg
push
cmp
jae
pop
out
xchg
pop
rclb
push
jl
cltd
mov
test
sub
xchg
pop
dec
scas
inc
pop
push
bound
pop
mov
inc
cli
jmp
mov
dec
ljmp
int
mov
fidivl
aad
dec
jae
cmpsb
push
inc
mov
stos
dec
lret
in
out
cmpsb
xchg
addl
inc
jns
je
lods
int3
cmp
and
add
sti
adc
repnz
jle
int3
inc
mov
jno
aas
pushf
xor
jmp
iret
arpl
lret
loop
jo,pn
jno
add
jmp
mov
cmp
pusha
icebp
and
jecxz
jne
cmpl
repz
cmp
dec
aam
loop
sbb
leave
fisttpll
pop
mov
loope
out
jl
pop
and
mov
lret
popa
in
cld
sbb
cmp
sub
mov
ja
out
lea
fsubrp
or
adc
cmp
inc
out
inc
repz
and
jns
xchg
aaa
fisubl
mov
or
stos
in
inc
adc
cmp
gs
stc
movsb
lock
add
adc
pop
scas
lock
mov
mov
icebp
push
stos
mov
mov
jo
stc
mov
inc
inc
xor
sub
inc
sar
std
xchg
push
sub
pop
mov
repz
mov
jg
push
jae
inc
mov
mov
scas
nop
ds
ss
push
icebp
insb
mov
push
sub
inc
mov
test
pusha
loopne
pop
jge
inc
ljmp
jne
pop
inc
sub
lock
xchg
pop
stos
cmp
cmp
dec
cmp
sarl
inc
stos
lods
aam
jp
fistl
fnstcw
stos
mov
inc
mov
dec
in
adc
mov
stos
test
adc
xchg
push
push
inc
addr16
shll
push
push
andl
ds
clc
dec
jb
dec
mov
lcall
mov
fld1
jae
push
pop
sbb
dec
loop
pop
pop
adc
int
sbb
insl
dec
sar
addr16
push
testb
jmp
imul
out
ficoml
movb
cmpsl
xor
icebp
test
inc
xchg
dec
jae
fwait
mov
dec
adc
inc
ficompl
mov
sbb
test
mov
jg
push
cltd
mov
or
loope
mov
mov
loope
cmpsl
adc
pop
or
int
movsw
xlat
loope
das
jb
pop
ss
loope
pop
or
dec
pushf
pop
sbbb
mov
jb
adc
xchg
out
pop
scas
test
insl
sti
push
mov
jmp
cmp
icebp
cli
push
lods
loope
push
xor
dec
hlt
fs
xor
push
mov
xor
addr16
repz
xchg
ss
pop
or
fwait
in
dec
mov
push
outsb
bound
scas
cmp
lods
mov
cmp
mov
dec
dec
scas
fstpt
lret
inc
pop
cmc
insb
pop
dec
push
push
adc
ret
or
outsb
sbb
sbb
dec
aaa
xor
lds
jge
nop
lock
insb
popa
pop
jg
cmpsb
mov
ja
mov
loop
dec
mov
jmp
repz
jo
mov
mov
dec
fadds
jg
repz
fldl
jmp
outsl
jmp
mov
ljmp
inc
push
sbb
cld
fadd
ds
sbb
lds
fadd
jns
sub
pop
push
add
movsb
pop
decl
jle
adc
sbb
cltd
into
inc
add
xchg
mov
repz
dec
cwtl
jne
cld
add
test
or
sahf
pop
push
fs
and
negl
inc
pusha
rcr
cmp
dec
xor
jmp
dec
out
jae
adc
or
jle
ja
cli
popf
push
cs
sbb
mov
pusha
arpl
cli
xor
push
add
xchg
mov
mov
dec
leave
call
es
in
inc
lahf
cmpsb
std
pop
dec
outsb
cld
mov
push
push
adc
mov
or
lea
mov
and
dec
nop
shll
push
push
fxch
idivl
jp
fldcw
pop
inc
dec
sbb
das
pop
neg
scas
mov
out
stc
je
or
repnz
ret
or
adc
test
in
push
dec
pop
div
cli
push
ljmp
repnz
lds
xor
sbb
mov
inc
or
loopne
std
push
icebp
js
cmp
and
rolb
shlb
cld
pop
pushf
jo
jne
std
or
inc
sub
test
outsb
pop
cmp
jnp
mov
imul
ret
es
insb
cmp
or
adc
movsb
pusha
loope
mov
arpl
jns
inc
movsl
insl
ljmp
xor
adc
sti
ja
jbe
clc
hlt
sahf
negl
das
pop
ret
mov
iret
inc
or
sbb
out
call
mov
xor
jbe
xchg
xor
add
xor
push
or
xchg
adc
dec
or
pop
lea
in
add
or
xor
pop
add
cmp
sbb
out
and
jns
mov
mov
pop
pop
push
clc
mov
or
and
subl
rolb
gs
out
sarb
inc
fdivrs
add
pop
popf
jbe
clc
test
mov
push
fstl
xchg
mov
jbe
pop
jb
adc
repnz
xor
cmpsl
dec
mov
ret
lcall
xchg
mov
shlb
inc
adc
adc
out
mov
jb
emms
in
rclb
add
or
pop
scas
scas
add
fsubr
movsb
push
mov
and
add
inc
push
jmp
mov
out
imul
push
fmuls
sbb
aam
mov
fldt
adcb
movsl
cmp
fwait
sbb
pop
xor
test
test
adc
xor
roll
add
pop
rolb
pop
lock
sbb
in
pop
ds
push
scas
cmp
add
enter
int
repnz
pusha
and
mov
inc
mov
push
xchg
jb
out
aam
add
lahf
pushf
std
sbbl
in
lret
das
cmpsb
imul
adc
adc
mov
xor
mov
lods
pop
test
xor
cwtl
mov
mov
cltd
sbb
xor
sahf
mov
push
mov
adc
mov
xor
popf
mov
orl
inc
and
or
mov
jo
inc
xor
insb
imul
jle
dec
mov
lahf
cmp
rcl
dec
mov
sub
aam
xchg
das
add
ret
jbe
mov
cmpsl
pop
or
add
das
adc
sbb
sahf
mov
cli
cmp
mov
pop
push
mov
fstl
dec
popf
inc
mov
inc
fwait
inc
sbb
bound
sti
jge
mov
cmc
sbb
movsl
fdivrs
adc
mov
sub
insb
fs
sbb
cmp
sbb
mov
push
ss
lahf
ja
icebp
inc
push
jae
outsb
pushf
pop
in
jle
mov
push
rorl
popf
pop
je
fisttpl
cmpsl
pop
push
add
xor
loopne
fidivs
lods
inc
dec
cmp
out
mov
jg
insl
inc
aaa
sub
pop
push
jne
dec
push
add
pop
fsubrs
pop
xchg
sbb
push
fisttps
int
or
jecxz
sub
xlat
add
jle
es
out
mulb
mov
dec
rcrl
lcall
insb
call
xor
loop
test
mov
pop
sub
and
fldt
adc
pop
insb
sub
fld
add
push
mov
into
scas
sub
aaa
jb
mov
mov
movsb
out
rorb
push
cmpsb
ja
sub
pmaddwd
push
arpl
mov
in
push
sub
lret
mov
mov
push
in
mov
fildl
or
xchg
jno
push
jmp
mov
gs
out
fnstcw
lcall
jb
and
mov
sub
push
jnp
mov
ret
push
xchg
inc
dec
hlt
fadds
rcrb
popa
loope
push
mov
adc
fisttpl
cltd
popf
pop
fildl
cmpsb
push
jae
dec
ret
pusha
or
add
xor
int
jp
in
push
xchg
inc
outsb
jne
jno
sbb
xchg
push
dec
push
xor
loope
mov
xchg
push
in
xlat
rcrl
fiaddl
mov
mov
mov
dec
inc
dec
insl
cmp
ljmp
jo
mov
cmp
add
aad
jg
xchg
sbb
mov
cmc
pop
shl
cmpsb
cmp
jbe
inc
lea
xor
iret
stos
repnz
popa
xchg
and
mov
xchg
cmc
cli
mov
adc
cwtl
cmp
jl
dec
sbb
scas
cmp
adc
rcrl
gs
push
pop
aam
push
sbb
mov
xor
xlat
js
iret
xor
shrb
cs
int
or
call
cmc
fcmove
mov
addr16
xor
rcrb
add
mov
mov
subb
lea
and
scas
xor
test
in
push
add
pop
out
xorl
mov
xor
add
gs
cmpsl
cmp
mov
mov
dec
stos
jmp
pop
test
sub
xchg
lret
or
mov
loop
mov
bound
ds
cmpsb
fnstsw
and
fmull
pop
jns
jge
in
sahf
fimull
outsb
push
es
arpl
push
mov
or
das
mov
or
jg
add
ret
cmp
inc
pop
add
lea
sbb
mov
push
sub
fmuls
scas
in
in
adc
loopne
in
ss
loopne
aas
add
bound
aas
pop
pusha
xor
mov
lock
mov
xor
std
dec
addl
nop
cmpsl
aam
fnstsw
mov
movsl
rep
dec
sub
xchg
xor
fiaddl
insl
sbb
fstl
xlat
and
and
lods
jmp
or
xchg
mov
cmp
dec
pop
fistpl
jl
jne
leave
dec
scas
sub
inc
mov
xchg
adc
ss
cmp
lcall
xor
sub
pop
icebp
lret
add
dec
pop
lcall
xchg
sbb
jae
and
into
sub
fsubl
jbe
sbb
andl
xchg
ficoms
ss
jo
cwtl
lret
xchg
testb
mov
inc
mov
mov
aas
mov
jo
ljmp
cmc
add
jle
xor
mov
push
sub
test
imul
push
test
inc
into
fcompl
cld
mov
pop
fiadds
push
adc
fmul
dec
pop
inc
jle
movsb
insb
pop
or
jb
inc
test
xor
imul
iret
loopne
xor
push
into
and
in
push
mov
dec
shrl
and
mov
push
mov
in
push
imul
cltd
mov
bound
loopne
je
mov
and
pop
ds
clc
push
mov
call
mov
scas
loope
popf
mov
adc
mov
fstl
mov
jno
mov
jge
and
push
test
or
in
sahf
inc
ds
jns
mov
pusha
sahf
fmul
push
les
imul
aaa
pop
mov
or
push
adc
in
push
dec
xchg
sahf
jno
mov
pop
gs
and
mov
add
popa
pop
lods
inc
ret
aas
jle
inc
lea
jnp,pt
mov
mov
notb
lock
cmp
fstpt
mov
cld
pop
cmp
stos
je
jnp
xchg
cwtl
jmp
add
incb
push
rorb
inc
mov
dec
ja
jmp
mov
jg
gs
es
loopne
xchg
sbb
hlt
out
repz
mov
jbe
pop
aam
jo
loope
fmull
mov
loope
repnz
or
push
xchg
fucompp
test
dec
dec
fdivl
pop
dec
xor
mov
movsb
loopne
imul
push
sahf
mov
imul
jne
xor
sub
push
lret
push
test
mov
outsl
outsb
jo
mov
sub
cvtdq2ps
adcl
in
sub
ficomps
mov
aas
mov
aas
jnp
jbe
push
pop
ret
inc
push
fwait
pop
mov
mov
jle
ds
sahf
je
xchg
scas
lcall
and
adc
mov
cs
jns
mov
movsl
xor
mov
push
jns
insb
mov
mov
push
imul
adc
mov
xor
out
pop
mov
inc
mov
jne
mov
aas
cmpsl
divl
aaa
mov
mov
jb
jl
andl
xor
std
and
dec
fwait
mov
sub
cmp
lret
fnstcw
dec
lea
jae
push
pop
and
dec
cwtl
cmp
fmul
insl
jl
inc
stos
jnp
imul
xorb
test
mov
je
push
enter
cmp
fsts
jno
jbe
inc
imul
cmc
sub
mov
cmp
sbb
add
in
inc
movsb
out
cmp
add
sbb
jg
and
xor
cmp
push
mov
cmp
inc
adc
std
fldenv
pop
sbbl
jbe
shl
adc
pushf
paddsw
loopne
mov
sahf
cmpl
sub
inc
shr
ljmp
adc
pop
sbb
lea
cmp
js
xor
cli
push
adcb
sti
iret
adcb
mov
in
fucomi
and
jbe
loopne
pop
mov
and
lcall
inc
mov
cltd
jecxz
ss
xor
addr16
xchg
or
adc
and
rorb
testb
popa
and
bound
or
ljmp
add
and
clc
xchg
xor
pop
adc
inc
push
fidivrs
rclb
xor
mov
aas
jae
ret
repnz
shl
xor
loopne
outsb
fisubrs
filds
push
mov
lret
ljmp
jo
sbb
les
frstor
sub
dec
shl
adc
daa
and
insb
movsl
pop
cmp
aaa
add
fdivr
mov
fistpll
mov
shlb
ror
push
add
xchg
mov
xchg
cwtl
rorl
fwait
or
pop
adc
imul
fidivrs
out
ds
lahf
xor
outsb
scas
or
loopne
loop
inc
dec
test
repnz
gs
cmp
sahf
aam
mov
pop
lock
ss
repz
incb
aad
sub
gs
dec
mov
xlat
push
pop
xchg
bnd
aad
scas
mov
and
cmp
inc
jle
hlt
mov
push
mov
mov
cmc
fmull
sarl
sub
mov
xor
out
cmpb
pop
sub
add
sbb
lods
mov
shrl
movb
in
mov
pop
mov
jae
adc
cmp
lds
mov
pop
inc
push
xchg
jg
dec
and
xor
aad
aaa
insb
sbb
cmpsl
lret
push
stos
popa
shll
jp
mov
jne
lret
xor
fwait
sbb
jg
mov
pop
icebp
bound
aas
out
arpl
sub
and
xor
fs
jne
jp
push
popa
inc
cmp
mov
test
in
pop
adc
daa
jl
enter
add
loop
push
cmp
bound
jmp
sub
cmp
repnz
push
push
lret
fcmovb
mov
or
aam
adc
cmp
insl
push
pop
or
insl
cmp
in
jno
push
test
or
lods
mov
cmpsl
mov
pushf
nop
insl
adc
mov
xchg
stc
rorb
out
and
jae
xor
cli
inc
jmp
imul
std
add
testb
insb
int3
xchg
pop
and
and
aam
dec
xchg
pop
shrl
test
lods
xchg
push
loopne
xchg
outsb
movsl
sbb
ljmp
es
adc
lds
jge
insb
mov
leave
bnd
dec
mov
jmp
je
cmpsl
xor
dec
scas
jne
pop
jecxz
mov
pop
cmpsb
pop
mov
or
push
sti
outsl
gs
dec
cltd
inc
push
jo
movsb
push
stos
in
cld
test
jp
outsb
clc
insl
fildl
aaa
pop
in
dec
pushf
dec
fsts
jo
shlb
lahf
xchg
dec
inc
ret
sar
push
adc
cmc
out
ror
xchg
in
sub
dec
dec
mov
lahf
scas
push
mov
cs
dec
loopne
xor
xchg
push
fcmovnb
mov
xchg
lea
and
aam
test
leave
pop
sub
or
lds
pop
rcrb
jl
insl
pop
mov
jbe
rcll
mov
cmpsl
ss
jecxz
fldenv
mov
pop
cmp
pop
call
insb
jo
insl
add
or
mov
xchg
mov
mov
jmp
mov
roll
mov
into
mov
leave
and
push
jg
sub
in
movsl
and
lods
add
scas
in
clc
push
fsubr
ret
das
push
fwait
mov
mov
mov
mov
xlat
clc
ffree
mull
mov
pop
push
sub
add
mov
pop
jbe
dec
push
push
lret
scas
loop
xchg
add
mov
stc
jmp
lea
stc
pop
cld
add
js
mov
cmpsb
push
add
and
stos
daa
inc
and
fstl
push
xor
out
scas
shll
xchg
xor
aad
cmp
add
inc
xor
repnz
stos
sti
pop
pop
dec
sbb
loope
xchg
push
scas
test
roll
pop
shrb
pop
and
pop
dec
call
nop
sti
xor
insl
rcrb
sub
ja
add
out
push
cltd
jae
add
adc
xor
inc
sahf
xchg
fdivs
pop
inc
inc
dec
push
jle
and
add
lods
inc
push
mov
jo
out
arpl
push
imul
jecxz
add
shr
test
adcb
jecxz
mov
add
xchg
enter
test
mov
stos
mov
es
sti
mov
sub
pop
mulb
insb
clc
outsb
loopne
xor
out
xchg
add
cld
andb
lahf
inc
mov
imul
add
pop
ret
push
in
add
mov
push
imul
sarl
mov
xor
sbb
cmp
fmull
rclb
jmp
mov
cmp
mov
pushf
jge
outsb
pop
and
gs
push
add
adc
mov
inc
ds
mov
dec
test
mov
push
push
int
jl
aad
hlt
jb
xchg
push
mov
arpl
adc
in
mov
jbe
std
lret
test
loope
mov
xor
imul
mov
repnz
cld
push
pop
sub
xor
jg
lret
mov
xchg
push
aad
ljmp
nop
add
lea
xchg
add
cmp
fwait
ja
fmul
fcmovnbe
sahf
pop
xchg
inc
into
xchg
insb
jle
mov
ja
imul
insl
mov
jae
add
cld
jne
mov
sahf
jecxz
sbb
and
jmp
or
or
sub
sub
push
ljmp
mov
push
cld
gs
dec
sahf
lds
and
mov
mov
mov
xor
inc
clc
push
xor
or
xchg
mov
sbb
adc
call
cmp
mov
cmpsl
push
push
outsb
fsubs
xlat
dec
cli
lcall
into
or
mov
xchg
cmp
sub
fsubrp
sbb
and
mov
mov
cmp
lahf
cmpsl
icebp
nop
pop
outsl
push
fxch
loopne
shlb
add
out
xor
inc
mov
je
aad
mov
fs
sbb
mov
pop
sti
adc
xchg
inc
cmp
enter
jg
xchg
push
fsubl
popf
outsb
or
pop
lock
fwait
shrb
movsb
inc
cltd
ret
mov
call
add
xor
jecxz
enter
pop
clc
inc
fwait
push
lret
fsts
jo
mov
xor
xchg
mov
cld
cld
pop
das
dec
push
cmpsb
sub
cltd
mov
and
sarb
lcall
lcall
sti
mov
lahf
loop
cmp
ret
int3
push
cmp
aaa
fldenv
xchg
in
clc
inc
sub
push
mov
xlat
mov
not
hlt
mov
jmp
outsb
pushf
xor
dec
cmp
dec
jmp
pop
mov
or
jecxz
cmc
and
push
rol
leave
gs
enter
push
jae
mov
daa
xchg
sub
ret
ljmp
movsl
mov
pop
cmp
xchg
sbb
ficompl
movsb
shlb
xchg
aam
js
mov
fwait
add
inc
xchg
push
pop
add
cmp
gs
inc
mov
cmpl
repnz
outsl
jmp
jg
aaa
and
loope
int3
sub
jg
add
loope
repnz
jns
push
les
hlt
or
rolb
loopne
stos
sbb
cltd
xorb
push
stos
sub
push
cmp
xor
out
or
mov
pop
jg
dec
das
and
jle
jp
ljmp
sub
idiv
cli
mov
cmpsb
cmp
push
pop
lcall
out
jo
aad
jbe
mov
frstor
sbb
jbe
xor
or
dec
cmpl
sub
loopne
push
test
fdivs
jg
xor
push
adc
pop
mov
xchg
popf
int
stc
jle
jecxz
in
shr
pop
mov
cmp
inc
jns
lcall
xor
das
sbb
lea
outsl
xchg
nop
push
rcll
cs
lock
sbb
adc
in
dec
dec
iret
push
adcb
xchg
dec
pusha
js
pop
mov
xor
pop
jge
mov
cmc
mov
mov
or
pop
lods
sbb
push
mov
fstl
arpl
sub
adc
jno
ret
sbb
jecxz
push
fistl
insl
dec
aaa
mov
gs
sub
mov
or
js
xor
cld
xchg
fstpl
inc
mov
xlat
sti
ljmp
movb
pop
mov
imul
mov
lods
sbb
lahf
lods
fistps
xchg
jmp
addb
nop
pop
fldz
jnp
sub
repnz
fwait
popf
jmp
xlat
mov
jns
in
xchg
push
or
imul
lret
jecxz
out
adc
or
std
jo
lock
xchg
fbstp
test
sbb
cmp
adcl
fcoms
sub
sbb
aam
xor
fsub
push
mov
test
addl
and
add
bound
lahf
lock
xor
cli
popf
fcmovb
rolb
inc
jge
hlt
ljmp
mov
xor
js
pop
test
jns
adc
sahf
repz
frstor
sbb
popf
in
xchg
ja
mov
ja
or
int
ja
cld
addr16
repnz
sub
pop
jnp
adc
imul
cmp
addr16
inc
jmp
lret
pop
push
jge
and
std
data16
or
jl
mov
jno
and
inc
xchg
repnz
cs
sbb
shll
aam
clc
jbe
mov
js
mov
dec
push
and
shll
push
inc
xlat
and
popa
cmp
orl
stc
faddl
cwtl
xchg
imul
mov
dec
push
loop
push
inc
jns
pop
fs
std
in
xor
mov
and
cmpsb
repnz
mov
mov
cmpb
enter
imull
dec
sbb
ds
push
mov
push
adc
jbe
outsl
adcl
shll
loop
xlat
pop
imul
and
xorl
dec
push
stos
lea
gs
test
push
add
jno
and
xchg
out
mov
cmp
and
push
out
imul
movsb
andb
aam
lea
fs
repz
add
cmpsb
js
mov
shrb
cmp
mov
adc
fisubrl
dec
xor
sbb
or
inc
orps
stos
push
in
adcl
scas
jp
fs
ret
outsb
add
movsb
jmp
push
jl
mov
inc
mov
lods
or
pop
jae
shlb
add
shl
mov
dec
rorb
pushf
inc
aas
loop
xchg
ret
add
or
data16
dec
inc
push
test
mov
js
jb
jp
shrb
out
or
push
or
xor
ret
pop
mov
testl
faddl
inc
loopne
leave
push
pop
xor
inc
pop
mov
adc
add
mov
in
and
fdivr
ret
mov
std
lahf
cmp
fdivs
stos
js
pop
push
sub
or
mov
clc
in
cld
data16
and
cmp
and
shl
cmpsb
jno
inc
jle
jno
sub
out
mov
movsl
fnstsw
lcall
lods
jg,pn
mov
fsubrl
jge
xor
mov
sub
lahf
mov
xor
jp
test
or
push
imulb
rolb
sbb
pop
or
fmull
dec
jae
jg
adc
mov
add
stos
dec
insb
rclb
hlt
sub
mov
adc
xchg
cwtl
aaa
adc
jbe
outsl
or
xchg
cltd
sbb
xor
inc
repnz
push
dec
and
dec
sub
jns
lea
les
loopne
imul
cmp
nop
jbe
addr16
xchg
mov
scas
fld
push
push
cmp
pop
mov
sub
lods
popl
mov
push
inc
or
push
dec
inc
and
xor
out
pop
pop
xchg
adc
pop
or
cli
push
xchg
cmp
xchg
mov
inc
jl
dec
fwait
mov
outsb
mov
sub
pop
jne
fbstp
ret
push
jne
push
cwtl
push
or
push
dec
movsb
and
clc
sub
mov
das
dec
dec
imul
sbb
std
ret
aad
insb
fcomip
and
aaa
dec
mov
repnz
cmp
add
data16
mov
mov
lcall
test
xor
sbb
xor
adc
sub
push
inc
in
and
mov
push
xchg
shrb
ds
add
pop
mulb
inc
mov
test
shl
aas
xchg
scas
loop
ljmp
push
jl
dec
pop
cmpsb
xor
inc
pop
push
or
and
xor
cmpb
cmpsb
std
jmp
in
in
test
xor
mov
push
scas
into
mov
jle
add
out
inc
sbb
lret
mov
or
pop
xchg
mov
and
mov
mov
xchg
andb
je
xor
scas
dec
addr16
inc
push
adc
push
pop
std
mov
mov
mov
into
inc
ret
stos
mov
mov
js
push
inc
add
fadds
push
lea
aaa
xlat
lahf
push
xchg
mov
imul
and
cli
cmp
lds
mov
jo
cmp
pop
fistpl
daa
xor
ss
clc
incl
cmpl
shl
into
cmpsl
dec
popa
test
push
and
jbe
cltd
fiaddl
jb
ret
sub
cld
aam
out
stos
mov
sarl
shrl
sub
dec
dec
icebp
inc
scas
ja
add
inc
mov
mov
aam
jmp
xor
dec
dec
sub
xchg
mov
rcrl
push
rcrb
test
mov
fbstp
adc
jmp
rep
mov
scas
cmp
loopne
jl
test
je
sub
push
add
mov
je
daa
sub
pusha
iret
jmp
sti
jb
add
insl
dec
or
dec
jns
xchg
and
mov
fs
lcall
sbb
ss
mov
fsubp
mov
out
pop
or
jbe
xchg
shlb
dec
addl
or
adc
cmpl
cmp
push
movsl
mul
test
iret
dec
outsb
xchg
sbb
das
rcrl
insl
jae
std
aam
sbb
mov
mov
lahf
inc
repz
lret
or
pop
add
mov
mov
dec
adc
jmp
and
xchg
pop
sub
or
popa
loopne
mov
and
or
jnp
sti
xorl
adc
add
xchg
sub
f2xm1
lods
cmc
or
xchg
xchg
aaa
cltd
pop
xor
jae
test
inc
mov
and
out
push
addb
mov
in
incb
push
shlb
in
aaa
cmc
rcll
add
jo
dec
lods
iret
adc
xor
add
mov
sti
dec
aaa
jl
scas
adc
icebp
in
fistps
movsl
jo
cmp
rcl
stos
xlat
jns
fldenv
and
popf
and
outsl
pop
dec
mov
push
fidivl
je
inc
adc
in
sbb
imul
cwtl
aad
fwait
xchg
stos
jl
clc
cmp
rcrl
or
push
sti
push
mov
dec
pop
mov
xchg
xchg
xchg
or
loop
mov
pop
arpl
or
push
les
mov
sbb
fwait
jae
xlat
jb
mov
mov
lret
lods
fists
push
clc
out
data16
test
ret
gs
or
push
mov
inc
notb
insl
std
and
add
imul
movsb
mov
ret
jnp
adc
mov
testb
sub
push
popa
push
mov
inc
lock
es
adc
movsl
xchg
sarb
sub
out
inc
mov
mov
xor
call
fcoms
cmp
test
lahf
push
cmp
jbe
adc
repz
xor
adc
mov
lret
add
xchg
fwait
in
xlat
inc
sbb
bound
cmp
mov
ss
and
pop
xor
stos
adc
xchg
cmc
fsubrl
mov
jmp
ds
ljmp
or
adcl
inc
pusha
jg
out
icebp
fistps
int
sub
sti
sub
fsts
mov
lds
cmc
jl
xchg
lret
xchg
out
and
cmpsl
iret
and
mov
xchg
wrmsr
cld
xchg
ret
jmp
in
sub
add
sub
and
cmp
dec
mov
ja
fnstsw
jmp
pop
push
or
jmp
xor
sub
loopne
in
sbb
js
cmp
push
jg
mov
sbb
lcall
cld
jmp
add
mov
daa
clc
jns
dec
mov
aam
cli
xchg
adc
cmp
jmp
loope
lds
push
sbb
add
mov
cmp
lea
inc
std
cmp
or
mov
arpl
roll
mov
sbb
add
xchg
shr
aaa
lahf
icebp
scas
cmp
pop
std
mov
adc
or
stos
mov
lret
test
stos
pop
adc
fwait
bound
mov
xchg
jbe
int
mov
aas
out
adc
push
sbb
xchg
mov
negb
loop
loopne
inc
rclb
and
jmp
mov
or
mov
idivl
sbb
mov
add
sbb
inc
in
jmp
adc
push
adc
jno
jbe
out
xchg
shl
ljmp
sub
faddl
ja
mov
xchg
add
push
push
inc
dec
or
call
inc
pop
pop
std
xor
jle
aad
pop
aam
clc
mov
dec
xchg
sbb
push
adc
pop
adc
mov
fldl
lret
lods
xor
imul
jg
dec
clc
cmc
inc
fs
adc
shr
fcomps
xor
mov
adc
call
adc
dec
xchg
add
js
cli
pop
xor
cmp
ljmp
out
popf
jae
pushf
cmp
inc
add
cmp
xchg
testl
xchg
sub
cmpb
out
mov
jo
xchg
push
or
ds
in
sbbb
jns
cmpl
mov
sbb
inc
cli
dec
arpl
aad
jl
ficoml
pop
pop
arpl
sub
shlb
or
xor
push
out
xchg
test
mov
push
mov
out
xor
idivl
add
xor
sbb
inc
pop
popa
or
ds
inc
imul
mov
jbe
mov
xchg
pop
repnz
push
fwait
mov
test
mov
rcrb
xorb
pop
mov
int
adc
add
int
push
das
add
fsubl
pop
clc
push
xor
imul
cltd
xchg
and
or
in
popa
mov
lret
lods
in
imul
jle
inc
dec
add
jne
mov
clc
fcoml
shll
sub
inc
adc
loope
sbb
jns
testb
fidivrl
sahf
xchg
sub
outsb
sub
daa
ja
cmc
mov
stos
push
lock
mov
xor
and
pop
sarb
les
ljmp
repnz
mov
adc
mov
insb
and
pop
aaa
lret
movsl
push
xchg
rcrb
hlt
push
rol
fsts
xor
loope
jne
push
lods
pop
jb
push
sbb
aad
int3
lea
push
out
fiadds
xchg
cmpb
dec
lods
ja
insl
mov
lret
stc
and
cmpsb
mov
push
scas
lds
mov
addr16
inc
bound
dec
rcrb
jae
mov
push
cmp
icebp
rcrl
push
pop
ret
push
jns
inc
mov
sahf
sarb
repz
adc
push
loop
xor
add
jbe
mov
popa
mov
fwait
inc
mov
insl
int3
push
lds
arpl
fnstsw
mov
insb
push
sbb
inc
mov
test
mov
shl
or
push
sbb
pop
ficomps
in
shl
ljmp
lea
in
add
cs
sub
mov
sahf
daa
les
loop
mov
adc
fdivl
sbb
icebp
out
jns
sub
adc
das
fisubrs
outsb
add
test
lea
cmp
in
bound
pop
movsb
and
xchg
sbbb
mov
inc
repz
mov
movsb
pop
sbb
cmpsl
xchg
sbb
add
andl
bound
mov
addr16
cmpsb
mov
sub
inc
inc
adc
mov
push
jno
test
idivb
js
push
xlat
cltd
xor
mov
popf
lock
xchg
xchg
dec
pop
popf
mov
mov
push
sub
push
scas
cmpsl
jns
out
imul
je
test
xchg
lretw
jno
pop
les
in
jnp
jno
cli
lods
in
loop
xor
dec
shrb
lods
push
pusha
aaa
mov
push
lret
call
xchg
sub
push
cli
repnz
lret
mov
sub
pop
clc
or
mov
dec
add
popf
fildll
and
cmp
cs
in
mov
ds
mov
dec
push
mov
dec
lret
aaa
les
das
mov
dec
mov
jbe
cld
pop
adc
or
icebp
sbb
gs
pusha
test
gs
sar
fcompl
or
pop
cmp
hlt
fs
out
fidivrs
cmp
fcompl
mov
les
mov
mov
or
add
fsubl
sbb
mov
sbb
rol
xor
loopne
ret
xlat
xchg
xor
pop
add
into
sar
and
jns
pop
testl
or
inc
fs
cmpb
mov
scas
add
jle
neg
outsb
scas
je
je
sbb
int3
mov
movb
add
add
mov
jle
jmp
jg
hlt
pop
sub
inc
mov
sbb
addr16
mov
inc
dec
es
loop
xchg
ret
lahf
arpl
fwait
mov
mov
inc
fdivrp
add
mov
mov
bound
flds
scas
int3
loopne
cmp
dec
jecxz
sbb
fidivs
cmp
push
ss
mov
mov
jns
and
cmp
hlt
mov
imul
push
xor
xchg
in
mov
mov
stos
jbe
xor
nop
adc
jne
outsb
popa
ss
xor
xlat
and
int3
sbb
push
stc
xor
jb
pop
out
cwtl
add
inc
cmp
add
insl
jg
fmuls
jb
push
lret
in
aad
loope
inc
stos
jns
shrb
sbb
inc
cltd
xchg
hlt
inc
mov
pop
mov
or
insl
xchg
jmp
pop
shlb
cwtl
inc
pop
push
xor
pop
sbb
push
mov
or
push
jp
dec
leave
and
sbb
cmp
xchg
sbb
or
shlb
rorl
sub
mov
lret
mov
xchg
dec
inc
mov
cmp
xchg
imul
std
lret
sbb
push
sahf
add
xchg
inc
xchg
and
jge
out
xchg
aas
mov
shrb
out
and
mov
cmpsl
fcompl
sub
or
sbb
adc
in
jno
adc
xor
imul
lea
ds
mov
cmp
xor
out
mov
cmc
jmp
insl
addb
bound
insb
lods
in
pop
inc
mov
or
or
mov
inc
stc
or
js
scas
je
add
xor
xor
out
cmp
popa
mov
das
inc
dec
pop
add
xchg
fdivrs
adc
cmp
mov
mov
or
out
popf
jns
into
push
add
in
inc
add
mov
xorb
jle
or
int3
popf
xchg
imul
cmp
sahf
aad
addl
or
jns
xchg
outsb
cmp
out
push
mov
or
rcrb
xchg
adc
jmp
dec
jmp
or
lahf
jmp
out
iret
and
test
jmp
ja
loope
pop
add
and
aad
lahf
mov
xchg
mov
xchg
sbb
and
rclb
int3
addr16
js
aad
and
pop
addr16
xor
push
add
lret
loopne
mov
xchg
add
inc
roll
xlat
and
out
add
ret
jmp
dec
xchg
fldcw
mov
add
dec
jecxz
ja
call
add
fdiv
jne
jbe
nop
mov
pop
or
mov
hlt
push
mov
shll
and
arpl
mov
xor
mov
sbb
mov
mov
shrb
fildl
insl
xchg
or
lods
das
inc
insb
cmc
loop
mov
lcall
mov
or
addr16
nop
cmp
stos
mov
jno
jne
faddp
xchg
mov
in
insb
adcb
sbb
icebp
jnp
add
js
cmp
push
lock
cmpsl
mov
jno
xchg
imul
push
push
scas
adc
jg
scas
lret
adc
popf
sbb
lret
sub
sub
imul
cmp
rolb
cmpsl
push
popf
mov
and
fnsave
or
repz
ss
pop
xor
pop
pop
sbb
sub
lock
jp
xor
fstl
fnstenv
divl
pushf
sahf
ds
cmp
add
jp
outsb
aad
cmp
mov
or
icebp
and
hlt
mov
push
jb
push
mov
pop
jl
inc
sub
aas
ss
or
xor
add
es
int3
inc
jp
and
shrl
dec
mov
jecxz
push
scas
pop
test
adcl
push
dec
loop
or
jno
addr16
imul
lea
mov
test
dec
aas
movsb
add
pop
mov
cltd
sahf
lret
dec
insb
sub
in
push
pop
arpl
push
pop
int3
cwtl
jg
pushf
sbb
fstl
in
sti
push
add
hlt
sub
jb
aaa
xor
leave
push
xor
sbb
ret
cmp
movsb
mov
and
cmp
mov
int
pop
sbb
pop
in
repz
stc
out
imul
cmp
mov
test
add
testl
xchg
out
js
push
jl
test
mov
movsb
sahf
push
ret
inc
mov
cli
mov
insb
rcl
fs
pop
sbb
dec
mov
sub
cmp
xchg
sbb
and
arpl
xor
shrb
xchg
push
cmp
mov
xor
sub
xor
sahf
int3
out
mov
mov
out
sub
adc
xor
popa
mov
lret
loope
scas
movsb
cmp
xchg
mov
fisttpl
xor
hlt
popf
stc
mov
rorl
cmpsb
into
lock
dec
ljmp
stos
mov
lock
jmp
int
ror
std
mov
addr16
dec
or
inc
inc
iret
cmc
pop
mov
loope
xor
sub
inc
scas
mov
push
es
lcall
xor
loope
jns
repnz
jg
cmc
sbb
sbb
and
xor
xchg
sub
jp
push
cmp
adc
cwtl
dec
xor
das
sub
ret
enter
xor
shlb
xchg
into
inc
lcall
aam
push
inc
sahf
ljmp
mov
aaa
mov
cmp
push
jmp
dec
or
jp
aam
mov
ret
outsl
es
xchg
fnsave
inc
sarb
jg
push
mov
jno
fisttpll
inc
inc
lea
jge
cmp
loope
popf
sbb
or
lock
jbe
and
notl
imul
ss
sub
cli
pop
ljmp
cmpb
popf
into
call
fucomip
dec
ret
call
das
stos
aaa
mov
push
lds
xchg
jle
xchg
shlb
mov
inc
insb
mov
dec
js
cmp
cmp
lret
ret
mov
xor
cmpsl
jl
mov
mov
sub
dec
pop
mov
das
jbe
jne
enter
ret
cmp
inc
xchg
push
push
loopne
cmp
mov
outsb
movsb
xor
scas
sub
pop
push
cmpsl
std
and
mov
or
push
addr16
test
jno
mov
fwait
xchg
sub
jg
mov
rorl
loopne
orl
js
stos
pop
dec
pop
outsb
dec
sub
out
inc
jg
ja
xorl
adc
shl
sti
jns
fxch
push
mul
rorl
std
or
pop
dec
popa
fcoms
dec
and
ret
cmp
and
xchg
jmp
jae
int
nop
push
mov
fstpt
mov
or
into
dec
or
ja
loope
or
push
mov
fsubrs
mov
insb
cmc
or
adc
test
mov
sub
jb
pop
mov
and
popa
xchg
cmc
sub
insb
cmp
mov
xor
rcll
inc
pop
mov
mov
popa
mov
int3
into
add
call
xchg
xchg
out
mov
testl
jp
popa
and
sbb
out
cmp
imul
mov
clc
imul
xchg
test
mov
ret
sub
mov
loope
jle
xor
sub
mov
sbb
cmpl
notb
jno
mov
xchg
testl
mov
cltd
sbb
cmp
and
mov
fstpt
jnp
lods
movsb
or
and
xor
mov
int
mov
in
adc
nop
sbb
movsb
push
jnp
push
cmp
inc
mov
mov
mov
mov
sub
push
pushf
stc
jne
cld
adc
or
cld
push
daa
adc
call
clc
inc
inc
jbe
adc
adc
or
mov
jae
fwait
loope
xor
lcall
jno
fstps
pushf
mov
sub
jg
mov
and
push
or
icebp
jne
push
push
adc
xor
xchg
testb
stos
idiv
sub
sahf
mov
lahf
mov
faddl
movsl
stos
popa
jb
dec
lods
ret
mov
test
mov
rclb
add
mov
orl
cmpsl
jbe
push
push
ljmp
xchg
dec
cmp
aas
pop
loop
clc
pop
xor
je
xchg
push
out
xchg
mov
mov
rorl
push
mov
and
mov
jmp
leave
mov
jmp
add
in
iret
nop
ja
add
iret
das
dec
pop
fs
inc
js
mov
or
popa
lahf
mov
mov
jmp
in
aam
inc
and
sbb
jo
jge
clc
daa
pop
push
out
lcall
mov
es
pusha
pop
xchg
push
sbbl
faddp
fistpll
lea
loopne
cmp
sub
add
inc
pop
loope
mov
iret
movsb
xchg
pop
sbb
xchg
call
arpl
out
push
ss
inc
jnp
add
fisubrl
jb
pop
nop
icebp
lea
push
dec
dec
mov
sub
push
pop
imul
jae
test
cmpsl
ficoms
pushf
pop
ret
sub
or
push
cltd
mov
push
out
xor
xchg
mov
mov
sub
and
adc
sbb
ds
mov
push
fists
imul
mov
mov
cmpsl
push
mov
xchg
nop
aaa
push
pushf
in
test
fucomi
mov
in
lock
sub
jg
sbbb
cmp
pop
dec
pop
add
aam
ret
bound
add
pop
push
mov
push
jge
jno
add
inc
mov
push
jmp
call
js
push
and
ja
push
or
nop
sub
xchg
lods
clc
mov
ficoml
fisttpl
mov
add
pop
lea
popf
inc
stos
loope
jle
outsl
mov
sub
stos
sub
and
mov
jnp
ret
jbe
les
hlt
call
loop
sbbb
lds
lock
add
cmp
imul
push
out
jno
into
pop
lds
out
sbb
cmp
daa
push
dec
ss
sbb
sub
mov
inc
into
outsl
dec
sub
or
std
jo
mov
xchg
mov
xor
or
dec
xchg
hlt
dec
inc
nop
mov
sbb
or
mov
iret
or
rcr
push
insl
rcrl
pop
adc
subb
loope
es
ret
sub
ficomps
outsl
mov
rorl
iret
sti
pusha
les
popa
insl
hlt
or
mov
pushf
pop
js
addl
fistl
mov
ds
sti
pop
sbb
inc
stc
jbe
mov
inc
inc
mov
inc
add
shll
adc
shr
adc
or
mov
mov
push
sbb
aas
xchg
lods
mov
pop
sub
mov
fsubl
gs
adc
mov
dec
mov
iret
cmpsb
in
hlt
lods
jne
and
rcrl
inc
xchg
jno
adc
insb
stc
jne
lea
or
aas
mov
jle
loope
fs
inc
int
adc
xlat
push
enter
push
fwait
sbb
aad
cmp
loope
inc
leave
mov
jp
sub
jle
jb
das
mov
adc
adc
scas
imul
add
repz
rcl
push
pop
dec
sub
mov
stos
ficomps
jno
test
test
mov
xor
pop
adc
mov
or
cmpl
inc
adc
sub
fldl
fldenv
fistpll
mov
jmp
fisubrs
and
enter
and
std
mov
mov
lea
xor
call
loope
lods
jb
movsb
mov
int
xor
sbb
inc
dec
add
std
adc
mov
cmp
aas
cmp
enter
push
mov
pop
addr16
push
ja
lea
and
nopl
pop
outsl
jp
inc
mov
jl
hlt
into
loopne
pop
sbb
mov
xlat
sub
adc
dec
mov
imul
das
and
mov
movsb
adc
dec
mov
in
js
add
sbb
lcall
mov
inc
mov
push
test
test
fs
in
imul
sub
add
loop
cmp
leave
sub
dec
neg
cmp
shll
push
sti
dec
cmpsb
add
push
stc
mov
dec
adc
fstpt
adc
sbb
imul
pop
aad
mov
call
es
jg
push
sbb
loop
clc
pop
gs
das
pop
call
aaa
push
iret
mov
in
js
out
xchg
sub
xor
mov
mov
xchg
mov
sub
fldt
dec
xchg
pop
mov
sub
insl
fsubr
inc
push
dec
push
sbb
add
mov
pop
aas
xor
pop
add
push
enter
push
jo
ja
int
call
adc
ljmp
out
repz
daa
lods
ret
les
jae
cmpsl
push
loop
ja
push
scas
out
inc
adc
push
dec
pop
fdivrp
pop
js
push
notl
movsb
sbb
mov
or
and
shrb
divb
xor
cmpsb
sbb
add
mov
cwtl
std
xor
mov
cmp
shrl
les
mov
hlt
xor
mov
add
enter
fs
fs
mov
and
push
sub
cli
sub
insb
divl
stos
pushf
in
arpl
std
mov
loope
ficoml
sbb
inc
dec
jbe
jmp
test
movsl
xor
push
jmp
push
insl
xor
jmp
mov
hlt
xor
and
notl
inc
test
jge
mov
xor
push
leave
mov
test
or
push
push
pop
filds
shlb
sub
icebp
adc
mov
dec
mov
rorb
in
xor
cmp
mov
in
jp
push
adc
dec
mov
loop
sub
push
fsubrs
test
ret
xor
jbe
test
jg
gs
nop
call
jns
dec
mov
sbb
sub
addr16
and
loope
mov
cmc
sub
inc
and
and
xorb
xchg
and
jge
gs
cmp
call
sub
outsb
js
jg
jbe
push
pop
cli
jmp
and
jns
mov
inc
int3
jno
mov
shll
jecxz
or
mov
mov
andl
inc
aaa
or
inc
inc
sub
mov
jp
cltd
jl
mov
xor
stc
mov
pop
mov
dec
es
and
mov
pop
cld
leave
mov
sub
in
inc
lods
imul
xchg
ds
add
adc
stc
gs
dec
add
dec
push
ja
or
push
push
stc
xchg
fwait
imul
sti
fldcw
and
mov
sub
fisttpl
push
cmpl
cmp
jecxz
dec
decl
divb
inc
or
inc
in
jnp
push
inc
stc
pop
push
push
jb
mov
scas
iret
into
test
addr16
cs
push
sub
jl
ljmp
enter
ret
test
xchg
mov
mov
pop
aad
popf
push
cmp
ret
daa
push
movsb
and
add
push
in
add
mov
pop
movsb
adc
pop
cld
loopne
lcall
and
hlt
shrb
mov
or
or
or
sub
push
ret
lahf
and
ss
mov
das
decb
in
mov
xor
fnstcw
jp
jecxz
jns
push
roll
mov
mov
jb
adc
and
pop
test
mov
inc
adc
mov
dec
fwait
repnz
inc
mov
or
roll
mov
inc
adc
mov
movsb
daa
jae
iret
jge
icebp
aaa
in
pop
fldt
cmp
sbb
fists
std
push
outsb
popf
stos
outsb
in
jae
loopne
jge
push
lds
xchg
jl
pop
push
mov
jns
out
sub
mov
and
push
sub
cmp
popf
sub
leave
daa
repnz
cmpb
push
xor
push
mov
sbbl
xchg
into
push
xor
jmp
cmp
mov
sub
mov
xchg
rclb
outsl
imul
stos
jno
xchg
es
roll
add
adc
jle
pop
mov
inc
dec
xor
arpl
sbb
ss
xchg
mov
mov
scas
xlat
rcrl
and
xchg
fdivrl
pop
cmp
adc
xor
fwait
add
pop
pop
lods
lret
hlt
mov
inc
dec
pop
es
cwtl
xor
mov
xchg
sahf
iret
inc
lret
jecxz
in
pop
ss
or
jae
lret
lcall
xchg
out
ret
popa
movsl
jmp
sbb
and
push
or
das
outsb
cmp
cwtl
fucomip
add
js
cmpsb
xor
cmp
push
clc
xchg
popf
aam
decb
insl
jo
aad
lahf
add
cmp
push
xchg
les
add
adc
out
xor
std
mov
mov
cmc
and
andb
movsl
cs
adc
movsb
inc
rcrb
or
data16
nop
ret
cmc
sbb
sub
pushf
add
aas
sti
int
jnp
cltd
xchg
pop
pop
stos
jg
rcr
outsl
xlat
mov
fwait
sbb
jmp
mov
test
jl
out
ds
inc
jb
ret
mov
cmc
jno
sub
mov
push
bound
adc
or
es
shll
push
ret
scas
push
xor
sub
aad
inc
test
fnstenv
lock
xchg
fisttpl
ja
xlat
roll
pusha
stos
jmp
test
xchg
mov
lods
test
mov
test
mov
pushw
add
adc
and
sub
scas
mov
mov
push
add
mov
or
mov
mov
pop
repnz
outsl
xor
push
push
pop
pushf
movsb
sbb
ja
and
and
rcrl
sti
dec
cltd
sti
jecxz
push
xchg
imul
js
adc
out
hlt
loopne
addl
loope
or
rcll
jns
nop
lahf
insl
push
rclb
div
gs
rcrl
pop
xor
push
js
xchg
push
repz
sbb
mov
roll
inc
mov
adc
jmp
mov
push
cmp
rcr
mov
cmp
insl
out
add
test
adc
je
js
outsb
cli
sbb
in
je
lcall
cmpsb
jb
pop
movsb
or
mov
test
mov
push
mov
repnz
nop
cmp
lret
xchg
in
inc
jns
lret
push
aam
sub
jae
cltd
in
push
mov
les
icebp
push
movl
jo
sub
test
sub
fwait
int3
pop
lret
mov
fwait
adc
or
sub
sbb
ret
sbb
in
sbbb
mov
ja
jbe
jmp
outsl
fiadds
insl
ret
dec
sbb
adc
cmp
mov
aas
mov
out
cli
in
jno
mov
ret
sbb
nop
xchg
int
xchg
out
push
scas
sbb
add
jg
out
int
sbb
cmp
sbb
not
xor
cli
xchg
xchg
sarb
mov
cmp
pop
xor
leave
icebp
gs
repnz
mov
dec
xchg
xor
and
stos
jb
iret
push
outsb
lcall
adc
pop
cmc
inc
pop
aas
inc
and
inc
out
jo
pop
sub
cwtl
jle
xchg
pushf
popa
inc
pusha
testb
xchg
loopne
jle
loope
pop
mov
cli
xlat
rorb
xchg
insb
aad
push
and
fs
inc
das
and
cmp
dec
test
xor
enter
xchg
inc
inc
imul
lcall
rorb
or
or
add
pop
pop
out
add
in
repz
clc
ret
outsl
imul
mov
fmull
or
lcall
or
lret
pop
popf
fwait
loopne
out
leave
push
imul
dec
pusha
xorb
out
pusha
jge
sub
inc
cwtl
sbb
push
pop
das
mov
jge
lock
aam
xchg
outsl
stos
adc
outsb
fs
cld
ljmp
shlb
fs
mov
out
test
push
jge
cmpsl
ss
mov
xor
inc
cld
loope
cmpsl
data16
in
adc
or
or
bound
sti
daa
std
xor
sbb
fwait
jl
jno
ret
aam
cld
scas
in
mov
inc
stos
dec
data16
xor
mov
std
mov
imul
fcmovu
pop
ret
xor
imulb
inc
sbb
sar
or
mov
and
inc
mov
xor
pop
jmp
and
cwtl
call
scas
dec
lods
sub
sti
mov
pop
jmp
or
mov
dec
test
jb
mov
adc
cmc
insb
jl
xchg
jle
inc
mov
xor
stos
sub
dec
aad
xor
adc
jb
imul
pop
push
pop
in
lcall
pop
nop
sahf
out
sbb
sub
sub
pop
js
fdivrs
mov
pushl
fimull
sub
aaa
ret
push
movsb
xor
add
inc
outsb
add
icebp
jo
push
xchg
lahf
orb
and
and
mov
sub
cltd
loop
imul
popf
sbb
push
cmp
xchg
mov
fsubs
and
xchg
and
mov
xchg
ss
out
push
or
mov
in
inc
mov
and
rclb
int
cld
and
dec
mov
lock
pop
jmp
cmpsl
pop
cld
xchg
nop
addr16
mov
jge
imul
aas
cli
or
in
pop
dec
push
cmp
es
jb
pop
or
fsubrl
mov
jne
ja
pop
imul
loop
fbld
push
ja
pop
out
rclb
decl
sub
cmp
pop
pushf
ficoms
mov
mov
adc
fildll
jecxz
jmp
in
hlt
ret
jg
call
popa
fdivp
lahf
imull
insl
inc
xor
sbb
jo
test
aaa
lea
inc
sbb
push
inc
cmc
jmp
mov
mov
in
adc
sub
fimull
inc
jns
divb
xor
inc
arpl
sbb
std
push
sbb
pop
jmp
xchg
push
ljmp
movsb
inc
pop
mov
popa
cwtl
aas
jle
fdivs
mov
dec
popf
aaa
sbb
lret
clc
jnp
xchg
mov
mov
lahf
divl
icebp
inc
ret
js
sub
sub
mov
adc
mov
ss
and
jns
pop
movsb
leave
or
xorl
push
dec
sbb
adc
sbb
cmp
imul
and
push
dec
stos
sbb
mov
inc
mov
xchg
xor
fs
scas
add
push
adc
xor
loope
mov
mov
repz
push
ret
arpl
dec
jo
out
cmp
ljmp
aad
lea
rorl
clc
xor
jno
dec
fstpt
push
xor
xor
aam
jae
dec
add
ret
test
outsl
gs
int
gs
sbb
clc
cmp
push
adc
out
test
sbb
pop
lahf
jno
adcb
out
sbb
xchg
fsubs
mov
lds
aaa
inc
repz
test
push
and
fs
call
add
ljmp
inc
add
rcll
dec
cs
repz
pushf
je
in
push
and
orl
or
jle
jmp
xor
add
xor
test
xor
dec
mov
or
push
lea
mov
pusha
fists
ljmp
sahf
and
mov
gs
mov
repnz
inc
pushf
and
push
aad
xchg
cli
stos
loope
imul
test
jnp
scas
lea
movsb
scas
call
mov
pop
fwait
stos
sbb
sub
test
pusha
stc
test
pop
icebp
xchg
pop
sbb
push
test
add
xor
cld
lahf
adc
gs
xchg
lret
adcb
xchg
es
add
or
sub
outsb
pop
inc
mov
jb
pop
inc
push
and
mov
dec
xor
ficomps
fstl
mov
pop
and
sbb
lock
add
or
sub
filds
cli
hlt
cmp
adc
mov
push
insl
mov
cmp
pop
mov
nop
cmp
lcall
mov
js
loopne
out
push
cmc
add
adc
cmp
cmp
ret
fidivl
sub
jo
add
mov
dec
adc
or
cmp
xchg
jns
fs
push
xor
jne
pop
aas
in
test
or
jl
dec
lea
add
or
add
inc
push
add
mov
addr16
mov
pop
sub
ljmp
pop
leave
cmc
out
lcall
stos
ffree
cmpsl
xchg
loopne
rcr
push
cmp
pushf
add
repz
scas
add
dec
rorl
push
stos
mov
pop
loop
rorl
jge
mov
repnz
and
insl
mov
xchg
adc
lahf
push
jne
rcl
mov
icebp
nop
lcall
shrl
bound
int
adc
bnd
aaa
outsb
imul
lods
mov
xor
xchg
cmp
cltd
pop
cmp
or
stos
sbbl
imul
adc
cmp
imul
dec
sub
and
mov
mov
arpl
pop
mov
xor
stos
jl
into
push
imul
inc
repnz
mov
pop
pop
enter
rol
ret
aas
lahf
sbb
sub
pop
xor
jg
mov
cmp
das
fwait
data16
jp
repz
out
dec
cmc
mov
dec
or
or
push
arpl
pop
enter
leave
xor
adc
or
enter
pop
movsb
mov
fmuls
xchg
adc
cmpsl
sbb
xor
pushf
mov
xor
test
xchg
das
je
mov
pop
mov
test
popf
inc
repnz
shrl
rcl
jb
mov
cwtl
jb
lods
int3
mov
xor
jns
add
push
out
dec
sub
mov
aaa
or
xchg
movhps
leave
shrl
ret
lds
stos
sub
nop
cs
lahf
xchg
dec
sbb
bound
mov
push
nop
jl
aam
mov
stos
sub
cwtl
add
mov
add
and
and
pop
mov
mov
jp
fstl
dec
les
int
jl
stc
xor
rorl
test
pop
data16
xor
in
int3
out
test
inc
jp
cmpl
mov
int3
test
push
out
sub
inc
es
movsb
clc
pusha
clc
cli
push
outsb
xchg
pushf
sbb
xor
pop
xchg
jl
jns
popa
pop
inc
pop
aam
rep
cmp
test
jp
fistl
pop
adc
cmpb
dec
icebp
or
sub
js
int
loopne
in
xchg
neg
idiv
or
enter
pop
loopne
sub
mov
out
adc
js
call
mov
push
mov
cltd
xor
push
lea
push
xchg
push
mov
sbb
mov
outsb
shlb
pop
mov
shl
cmp
push
shll
sbbl
test
pop
daa
popa
mov
cmp
invd
cmp
xchg
mov
mov
dec
mov
fnstcw
jns
lcall
les
jae
adc
out
addr16
insl
adc
outsb
iret
shll
clc
lock
dec
fstpl
xor
mov
ret
dec
jmp
pop
sub
mov
and
or
mov
mov
pop
mov
scas
mov
icebp
xchg
cmp
xchg
shll
in
jg
sbb
gs
int
push
cmp
mov
mov
mov
mov
ret
inc
lret
call
cmpsb
pop
or
add
or
fcoml
mov
int3
push
into
and
jmp
test
inc
sub
or
add
adc
jg
ja
xchg
repnz
push
inc
and
push
mov
outsb
dec
push
mov
fistpll
xchg
test
test
imul
outsb
sarl
call
dec
loope
mov
sti
push
cmp
adc
sbb
insb
outsb
rcrl
jne
outsb
cmpsb
aas
sbb
scas
out
mov
sub
aaa
xor
add
aad
fadds
pop
jg
xor
jb
push
into
inc
jmp
jb
mov
fsts
push
and
mov
cmp
inc
push
dec
bound
cmp
xor
mov
push
cmp
out
jb
mov
bound
add
push
adc
xor
mov
sub
push
sub
popl
lods
add
inc
enter
inc
addb
cmp
pop
out
sahf
cld
into
sbb
jbe
arpl
fcoml
sarl
mov
or
cmpsl
insl
jae
and
fcmovb
sbb
xchg
mov
shll
jle
jne
jg
jo
dec
jno
sub
xor
insb
push
fiadds
jo
call
push
and
xchg
shlb
jae
push
insl
pop
cld
insb
sti
addl
sub
imul
nop
sbb
mov
pop
push
cmpsb
cmc
enter
mov
adc
mov
mov
ja
data16
mov
aas
pop
rol
into
daa
insb
pop
add
imull
out
fstl
cmp
adc
mov
inc
sbb
mov
jecxz
mov
cwtl
jge
lods
mov
clc
jmp
pop
dec
fdiv
fistl
incl
sbb
add
adc
mov
sti
mov
ljmp
inc
mov
daa
fldt
add
pop
rorb
negl
push
inc
inc
cmp
cli
xchg
and
xchg
or
icebp
mov
xchg
push
cmc
pop
push
mov
mov
or
sti
push
mov
ss
adc
arpl
scas
pop
movl
jmp
mov
lock
pop
xchg
xchg
cmp
mov
mov
lods
dec
fidivrl
and
sub
push
pop
ljmp
aad
call
sub
ret
sub
int
mov
mov
popa
jg
rolb
ret
imul
fidivs
jo
or
loopne
inc
cs
lret
mov
inc
inc
add
mov
ljmp
ja
cmp
pop
fstpl
pop
pop
in
jp
jno
lea
aad
jp
lods
daa
int
out
push
and
cmp
lret
loopne,pn
fmuls
dec
enter
jnp
add
shl
leave
mov
jb
sub
xchg
mov
cmp
inc
pop
add
mov
inc
sahf
stc
inc
pop
pop
jb
mov
imull
adc
mov
orps
mov
xor
mov
pop
dec
jge
popa
push
push
fstl
aas
add
rcrl
dec
jecxz
roll
in
adc
push
int3
jle
cwtl
aaa
sarb
lock
xor
sub
dec
clc
repnz
stc
sbb
clc
adc
adc
sub
push
sbb
clc
dec
test
or
aam
lret
xchg
sahf
pop
mov
jb
push
sub
int3
xchg
jbe
lea
mov
xchg
fmuls
cmpsl
nop
inc
mov
pop
and
jmp
shrb
movsb
ljmp
fildl
js
insl
iret
sbb
gs
mov
sahf
xchg
push
lea
pop
cmp
jno
test
adc
sub
mov
addl
jne
xor
cmc
jl
adc
cld
lock
nop
stc
inc
push
jne
push
pop
movsb
xor
or
lock
inc
loopne
xor
test
sub
pop
xor
mov
bound
loope,pn
jb
jnp
clc
in
sbb
mov
cmpsl
dec
fcompl
and
icebp
sub
mov
ljmp
mov
inc
pushf
mov
outsb
inc
jno
push
dec
pusha
fimuls
adc
bound
xchg
mov
xchg
out
test
sbb
adc
jge
sub
jb
les
sub
fildl
xor
dec
xor
ret
sbbl
jb
xchg
outsb
je
jns
sbb
xchg
dec
loope
lret
push
dec
sbb
mov
nop
xor
fdivp
aaa
imul
mov
jmp
test
test
cmp
bound
mov
cld
les
movb
cmp
std
daa
mov
movsl
mov
loope
addr16
sbb
andl
inc
jp
mov
insl
adc
adc
push
shl
dec
fcmovb
cmp
sub
pop
xor
lods
inc
ss
adc
popa
xchg
mov
leave
lret
std
xchg
cmp
sar
stos
cmp
mov
dec
inc
jae
sub
test
ljmp
and
leave
das
or
xor
loop
add
mov
in
jle
xor
sub
jmp
leave
mov
clc
push
leave
mov
sbb
sub
aas
mov
add
cwtl
lea
cmpsb
fs
pusha
pusha
mov
stos
xchg
xor
pop
je
nop
mov
jo
mov
pop
sub
mov
push
and
pushf
mov
inc
mov
fcmovnu
and
mov
or
dec
mov
shlb
lcall
fcmovne
lret
mov
push
loope
ds
xchg
sub
call
fbstp
mov
outsb
and
aam
dec
ret
leave
call
mov
push
scas
and
push
fs
lock
mov
shll
fsubl
xchg
sbb
cwtl
mov
outsl
mov
data16
stc
push
in
repnz
call
xor
cmp
and
mov
daa
inc
cmp
mov
xchg
xchg
mov
cmp
int3
xchg
ss
rcrb
pop
inc
lcall
xchg
dec
stos
mov
ss
mov
clc
cld
fmuls
fnstcw
dec
xchg
push
es
inc
lea
mov
loop
incb
in
pop
or
or
test
ja
mov
data16
mov
or
rclb
adc
daa
aam
fnstenv
stos
jne
ffree
call
pop
sbb
negb
mov
aaa
xor
sbb
stos
pop
xchg
adc
outsb
fwait
push
push
cld
xor
inc
and
insl
cmc
adc
arpl
push
adcl
out
inc
shl
fbld
and
mov
ss
fucomp
mov
sti
inc
push
dec
cwtl
lcall
dec
hlt
addb
rol
mov
ret
dec
and
cmpsb
jecxz
mov
inc
inc
cmovle
sahf
in
enter
call
adc
mov
lock
setno
test
jno
sarb
jl
inc
cmp
jno
cwtl
mov
adc
cmpsl
lret
pop
loopne
push
and
loopne
adc
sub
aaa
add
js
pop
loope
sbb
sub
into
xchg
cmp
in
push
xchg
int3
mov
jg
mov
jmp
outsl
mov
lea
das
jne
jae
aaa
scas
inc
push
and
xor
cmp
mov
mov
jae
pop
frstor
std
movl
jecxz
sbb
pop
int
and
das
outsb
aad
cld
popa
aad
fiaddl
aaa
int3
xorb
shrb
mov
add
jle
mov
stos
push
mov
jge
ret
loopne
pusha
sahf
test
or
shll
pushf
xchg
jns
dec
es
pop
push
repnz
sbb
popf
and
sub
adc
pop
fbld
xchg
aaa
push
gs
pop
stc
or
add
or
testl
adc
sbb
add
insb
in
inc
mov
xor
sub
pop
mov
int3
cmp
mov
rcr
aas
cltd
jmp
scas
add
mov
das
call
and
fs
sub
cs
mov
arpl
sub
xor
nop
popf
jo
gs
mov
incl
int
push
leave
push
shll
fiaddl
xor
sub
inc
stos
jae
xor
mov
insl
neg
loopne
pop
xchg
jo
inc
and
je
loope
push
into
addb
scas
repz
mov
jge
sub
fldenv
add
fs
or
inc
adc
pop
shll
cli
adcb
mov
repnz
dec
mov
pop
mov
pop
mov
inc
data16
ljmp
add
insl
mov
xchg
test
and
jae
cld
clc
mov
adcl
adc
in
int3
shlb
fdiv
lea
fildll
daa
xchg
pop
adc
rolb
icebp
push
add
outsl
and
mov
fldenv
dec
or
or
test
or
xor
mov
ret
stos
data16
add
xlat
mov
xor
and
xor
lret
es
cmp
flds
push
sbb
xchg
hlt
xor
mov
push
in
ret
in
inc
add
lds
test
push
and
xchg
mov
adc
and
inc
lcall
mov
jl
sar
test
mov
pushl
enter
adc
pop
pop
cli
in
jg
rorb
jmp
fwait
mov
andb
jb
loop,pn
daa
aaa
lods
or
jmp
std
cmp
lods
inc
inc
ret
or
xchg
sbb
xor
mov
cmp
sub
scas
ret
in
mov
int3
gs
add
cmp
outsb
xor
outsl
xorb
pop
in
lds
xchg
mov
loop
pop
js
ljmp
pop
adc
dec
movsl
jle
lcall
fmul
ret
adc
movsl
jnp
sbb
or
jp
adc
jp
xor
lods
stc
pop
mov
lahf
rorb
adc
cltd
mov
or
xor
jb
and
jae
das
xor
mov
outsl
fldenv
pop
cmp
xchg
bound
rcll
ljmp
insb
es
xor
ss
out
outsl
int3
mov
arpl
dec
je
jne
shlb
sub
adc
imul
jp
push
mov
sub
and
notl
sub
jno
outsb
or
sub
fisttpll
les
mov
sub
js
fistps
sub
lods
fcomps
push
test
std
jmp
rcrl
std
sub
pop
cmpsb
mov
jo
and
lret
ds
add
mov
cmp
mov
cmp
ds
push
hlt
fimull
sbb
js
mov
cs
xchg
inc
dec
test
cmp
jp
xchg
mov
in
jge
lds
mov
push
fisttpl
cmp
xor
mov
xlat
jecxz
mov
jg
addr16
or
xchg
push
sbb
cli
sub
mov
jae
fstl
lcall
adc
jno
xchg
cli
or
ja
dec
int3
or
data16
jmp
cmp
mov
mov
or
outsl
ret
add
shlb
sub
insb
iret
sbb
cli
mov
mov
adc
sbbl
mov
sub
adc
ret
mov
clc
or
sbb
mull
into
in
sub
icebp
shl
gs
lret
mov
cwtl
jno
inc
mov
adc
xchg
push
daa
and
test
lcall
xor
mov
cwtl
dec
jge
fdivs
pop
inc
ret
movsb
jle
mov
jbe
insb
mov
push
ret
lahf
pop
jae
stc
sbbl
scas
dec
and
add
test
popf
xlat
inc
dec
adc
ret
fstp
mov
mov
push
sbb
xchg
lret
push
jae
push
add
add
out
cwtl
rcrb
mov
push
std
aas
cmp
or
add
xchg
lods
ret
dec
cmp
stos
inc
xlat
jge
or
fsts
fcoml
xor
movsb
testl
jge
jo
jp
es
sbb
push
pop
inc
jae
aam
sbb
bound
mov
or
mov
push
inc
sbbl
sti
dec
cmp
cmp
push
jg
fcompl
add
mov
hlt
pop
inc
enter
loopne
push
cmp
out
inc
mov
xchg
call
mov
adc
and
push
decl
sbb
adc
mov
outsb
jecxz
cld
sub
cmpsb
mov
in
test
out
add
mov
sti
fstps
push
dec
repnz
pop
fs
dec
and
stc
into
mov
xchg
or
nop
cld
sub
pause
call
or
clc
rcll
in
dec
imul
and
roll
cmc
or
add
jnp
test
ja
cmp
das
int3
sbb
cmp
sti
add
cmpsl
hlt
jp
cmp
cmp
shll
pop
pop
movsb
lea
xchg
add
cmp
aaa
jbe
ds
or
cmp
sub
push
sbb
cmc
mov
adc
jae
cmp
jle
xchg
stc
daa
sub
in
imulb
jg
mov
lret
lret
imul
out
repz
jbe
cltd
enter
mov
inc
inc
mov
push
sti
jb
pop
adc
sbb
mov
pushf
or
notb
and
push
scas
xchg
gs
fucomip
popf
mov
adc
sti
mov
jb
dec
sub
jle
mov
test
ss
xchg
xchg
cmpsl
scas
cmpsb
push
aam
fimuls
test
shrl
clc
stos
and
decl
push
mov
mov
push
adc
sub
inc
jmp
out
int3
insl
sahf
clc
jbe
push
out
lret
sbb
sub
mov
leave
shll
pushf
das
aaa
stc
add
mov
ljmp
xchg
push
jmp
pop
out
mov
xor
pop
ds
fldenv
mov
in
sub
les
pop
jmp
inc
inc
adc
push
mov
push
fwait
xor
stc
das
fistps
and
pop
inc
icebp
push
ja
loopne
aam
mov
repnz
ror
xchg
inc
shll
push
and
les
cmc
pop
add
mov
out
addr16
inc
jle,pt
scas
add
push
leave
lret
mov
mov
out
pusha
out
cmp
in
rclb
clc
xchg
leave
outsb
and
roll
xor
out
sub
dec
mov
sub
movsl
andl
xchg
mov
mov
pop
cs
mov
inc
jb
push
lret
cmp
pop
cli
jmp
ja
je
mov
shrb
lea
inc
push
fwait
hlt
hlt
cld
push
popf
cmc
pop
std
inc
test
inc
ret
lea
das
cmpsl
rcl
fwait
mov
xchg
cmpsl
lock
outsl
dec
mov
dec
addr16
int3
imul
push
jo
jmp
hlt
adc
sti
test
mov
outsb
inc
out
cmpb
mov
pop
das
fcomps
jge
cmp
js
adc
mov
push
add
push
faddp
aad
dec
and
pushf
repnz
and
stos
ret
mov
iret
movsb
inc
out
add
incb
cmpsl
repnz
dec
inc
mov
push
loopne
scas
push
out
pushf
sti
leave
and
in
cmp
push
xchg
mov
push
mov
and
ljmp
or
mov
pop
mov
jecxz
sti
sbb
jl
jns
mov
pop
fidivs
push
jle
popa
and
imul
icebp
xor
mov
xor
dec
lahf
dec
cmovg
sahf
stos
jno
add
std
push
lods
in
xchg
or
jp
sbb
add
xor
and
in
out
adc
sub
xor
xor
sub
sbb
leave
and
xchg
add
adc
and
adc
cmp
fildl
jg
jnp
cwtl
cmp
ret
mov
ljmp
test
pop
jnp
stc
jnp
stos
iret
rcll
jecxz
dec
mov
cmc
mov
cpuid
mov
stc
adc
push
sbb
xchg
xorb
sbb
inc
cmp
subb
mov
adc
sub
outsl
imul
das
stos
add
xor
enter
out
sbb
aas
popl
cmpsl
lds
cmc
adc
or
xchg
sbb
stos
dec
mov
aaa
fmull
je
mov
mov
hlt
sbbl
imul
js
sbbw
and
mov
adc
in
xchg
jge
ror
mov
je
fstpl
pop
test
jne
outsb
xor
fld
hlt
sub
fwait
jne
lcall
fcompl
mov
add
sbb
stos
rclb
loopne
mov
fmul
mov
xchg
mov
test
es
mov
scas
lret
out
cmp
sbb
loop
in
dec
stos
jmp
aaa
and
inc
lods
inc
jnp
jmp
insb
shlb
adc
into
lcall
or
es
sub
mov
push
ret
outsb
into
pusha
sub
and
int
mov
into
hlt
call
ss
stc
fldcw
cmp
stos
and
mov
leave
es
mov
ss
and
sti
push
xchg
iret
mov
repnz
xchg
aam
push
dec
cs
cmp
lcall
dec
scas
mov
sub
je
in
mov
lds
mov
dec
out
fisttpll
and
lods
inc
popf
cmc
mov
mov
mov
jp
imul
push
nop
insb
fs
addr16
cwtl
add
sbb
add
adc
rolb
scas
jae
cmpsl
lcall
fisttps
cmp
out
fisubrl
xchg
dec
sbb
and
mov
xlat
sbb
addr16
xor
dec
jge
stos
shrb
xchg
insb
test
and
shrl
xor
adc
push
xchg
aaa
test
push
gs
cs
xchg
or
mov
mov
adc
sbb
ror
push
mov
xor
sahf
ss
js
add
jmp
fisubrs
sahf
in
cs
xchg
shrl
dec
xor
and
shl
pop
std
push
aam
inc
fisttpll
js
add
movsb
jb
in
push
sti
and
test
pop
test
cs
add
outsl
into
add
xchg
fstl
scas
fsts
cmp
inc
in
inc
enter
mov
outsb
adc
xchg
mov
inc
cwtl
jge
hlt
pop
leave
fiaddl
pushf
or
sti
out
xor
xchg
or
xchg
mov
lods
subl
popf
mov
lcall
pop
mov
jbe
sbb
repnz
lahf
gs
xchg
rcrb
dec
mov
inc
ds
pop
jb
cmp
or
jecxz,pt
fwait
xlat
xor
fnsave
jp
pop
imul
push
dec
jl
outsl
push
pop
int
xchg
int
ret
in
cmp
fdivl
pop
jae
lock
fbstp
out
jmp
scas
mov
and
out
outsb
aad
or
jne
cmp
out
pop
xchg
rcrb
dec
jge
fstl
leave
xor
into
and
sbb
jle
ss
aam
mov
shrb
fdivs
mov
rcl
rcll
cld
mov
movsl
push
or
scas
psllw
fcomi
ljmp
js
pop
add
push
rcrl
je
fs
xor
mov
cwtl
cmp
jae
mov
xchg
insl
fcmovb
vcvttss2usi
icebp
mov
inc
sar
repz
sbb
clc
stos
in
add
mov
xchg
mov
imul
mov
jle
int
dec
in
push
mov
das
push
cli
lea
cmc
adc
dec
push
int
es
mov
mov
xchg
jb
clc
mov
cs
and
es
or
and
sub
or
jg
outsb
and
arpl
dec
and
test
xor
xor
arpl
xor
jecxz
stos
cmp
loopne
les
pushf
push
adc
mov
fisubrl
xchg
sarl
push
cmpxchg
xchg
mov
push
xor
incl
adc
mov
inc
xor
iret
fwait
pop
jl
out
sub
fidivl
dec
arpl
mov
fstpt
jmp
stos
cmp
movsb
daa
or
je
lret
jmp
shrb
push
dec
sbb
orl
sbb
lods
hlt
lret
call
mov
fsubrl
xor
loope
xchg
pop
jns
adc
leave
sub
into
xchg
add
fcom
xor
imul
dec
mov
or
cs
jno
or
add
push
inc
xorl
lret
mov
or
scas
fldt
out
xchg
mov
scas
sbb
into
iret
aas
xchg
or
ret
movsl
insl
sti
insb
and
and
jle
sbb
sarl
stc
rcll
inc
xchg
jle
shrl
imul
aaa
push
mov
sbbb
jno
xor
mov
lcall
pop
pop
push
sti
jbe
adc
xchg
lods
jbe
fcom
mov
std
xlat
xor
mov
fucomp
data16
pextrw
adc
mov
adc
mov
xchg
push
leave
idivl
scas
sbb
popf
push
dec
in
pushf
jmp
daa
pop
adc
or
lods
adc
jb
cs
lahf
arpl
fdecstp
lds
loop
loope
nop
mov
cwtl
add
movsl
adc
subb
adc
push
and
add
push
out
push
pop
pop
mov
ror
repz
inc
xchg
sbbb
dec
xor
lahf
rcrb
std
dec
outsl
jp
mov
rcrl
dec
mov
push
mov
es
pop
jnp
cmp
cmp
xchg
jnp
inc
cmp
adc
xlat
std
popf
and
pop
cmpsb
mov
int3
pushf
sbb
inc
ljmp
push
lret
cmpl
push
icebp
sub
mov
mov
mov
orl
filds
shl
cmp
xchg
insb
pop
mov
xor
push
int
repnz
outsb
adc
sarb
arpl
les
dec
pop
fs
mov
or
fs
call
inc
adc
xor
jge
mov
mov
push
shll
xor
std
add
sbb
test
or
push
pusha
adc
nop
and
bound
inc
fwait
ds
cmpsb
lret
int3
sub
repz
add
lcall
push
dec
enter
out
sub
xchg
xor
sti
inc
mov
clc
fstp
dec
mov
xlat
lock
jg
aas
repnz
cld
xchg
xchg
std
rorl
fildll
dec
adc
pop
scas
outsb
jp
and
dec
movsl
xor
jge
mov
cmp
mov
pop
subb
push
jecxz
mov
sarl
and
sub
dec
push
mov
aam
cwtl
imul
pusha
scas
inc
sbb
pop
mov
mov
cld
add
aaa
divl
mov
cmp
pop
and
divl
fs
pop
pushf
mov
or
fstpl
popf
aam
adc
test
hlt
sub
shrb
add
adc
inc
push
and
nop
or
inc
int3
cmp
mov
jmp
mov
into
dec
je
xlat
mov
cltd
push
push
lods
sbb
bound
cmp
hlt
shrb
xor
push
in
pop
add
cwtl
test
xchg
pop
push
mov
inc
push
mov
dec
jo
jne
adc
pusha
add
mov
sar
add
cwtl
jne
push
ds
and
jl
scas
pushf
mov
jl,pt
sbbl
mov
aaa
sub
imul
add
mov
test
aad
lds
js
lcall
lret
adc
sbb
iret
or
pop
or
pop
fwait
int3
aaa
xchg
cltd
int3
imul
notb
xchg
jge
fisubl
mov
mull
ret
notl
cmp
xchg
scas
fs
jb
sbb
stos
dec
mov
test
or
shlb
xor
xchg
sbb
repnz
or
fldt
dec
pop
sbb
mov
mov
or
add
cltd
adc
dec
and
aad
sub
mov
pop
mov
mov
aad
lea
or
in
cmp
or
dec
xchg
or
cmpsl
adc
push
daa
outsb
xlat
adc
inc
mov
inc
mov
dec
int3
cs
add
sub
or
dec
hlt
add
push
mov
imul
scas
mov
jle
and
push
add
xchg
ja
es
and
jne
mov
out
mov
sub
sub
lods
mov
add
mov
sub
ja
cmp
ret
es
fwait
lcall
inc
inc
iret
inc
loopne
add
push
xchg
arpl
cmp
adc
cli
scas
jb
or
popf
jae
push
adc
or
dec
mov
sub
popf
in
jp
mov
sub
xlat
pop
dec
mov
jb
std
ja
bound
out
je
jg
xchg
mov
mov
adc
addr16
test
movsb
sbb
loope
push
push
shlb
lahf
sub
fistpl
or
loope
sahf
lret
inc
mov
cmp
outsl
fdivrs
adc
loopne,pt
jmp
jb
jne
fdivr
push
icebp
dec
mov
repz
push
or
hlt
mov
jecxz
pop
decl
xchg
mov
mov
push
sub
sub
imul
adc
dec
into
lahf
lods
or
andb
xor
mov
mov
divl
popf
xchg
aas
mov
jno
pop
das
xor
dec
pop
cmp
fcompl
sahf
mov
jnp
lret
fwait
mov
ret
test
inc
jmp
push
rclb
call
xchg
lock
or
incb
subb
stc
push
aam
aad
mov
js
ljmp
stos
pop
movsb
enter
subl
push
mov
pop
and
jp
push
cs
mov
pop
in
mov
out
popa
mov
jmp
repnz
or
stc
std
das
inc
or
hlt
cld
mov
inc
nop
jo
movsb
aam
fcoms
lock
push
sub
loop
or
test
lcall
mov
fsub
sbb
shll
cmp
stc
ret
xlat
adc
add
icebp
mov
pop
mov
jp
sahf
orl
and
scas
inc
test
jno
inc
stc
push
lahf
jno
jecxz
xor
sbb
mov
into
mull
leave
lods
lret
lret
pop
mov
mov
lahf
sbb
jmp
adc
test
push
jns
insb
cmp
repz
add
imul
adc
mov
jmp
fisubs
test
addr16
das
jno
fistl
xchg
xor
pop
adc
sbb
or
jge
push
fs
jl
xor
mov
ss
jne
mov
and
dec
inc
insl
stos
mov
les
sub
aas
cs
stc
rclb
pop
movsl
lock
lret
pop
inc
mov
rcll
push
sbbb
push
ficomps
mov
add
and
fdivl
cmc
cmpl
mov
out
sbb
ret
and
push
pop
dec
repnz
or
push
fs
cmpsb
popf
push
push
std
ja,pn
or
jbe
test
dec
jge
movsb
push
mov
adc
stos
cs
les
dec
lea
push
and
and
jge
lret
or
pop
add
jne
pusha
insb
sub
repnz
or
adc
jmp
fisttps
fsubr
jae
adc
dec
cmpsb
sub
sbb
test
arpl
inc
ret
test
scas
shrl
mov
shrb
fwait
push
dec
adc
sub
pop
xchg
aam
imul
imul
gs
nop
cmp
or
mov
mov
inc
jg
cmp
lahf
adc
aad
pushl
add
aas
jb
lea
adcb
mov
xchg
stc
push
rcl
loopne
movsl
nop
mov
push
repnz
iret
xchg
loop
loopne
jnp
ja
cltd
icebp
loop
xchg
pop
std
sbb
adc
inc
jno
jno
je
cmpl
fstl
xor
push
sahf
pop
jb
sahf
cmp
dec
andb
lds
xor
jb
int
push
cmpsb
xor
in
test
mov
lods
ret
and
outsl
xchg
jge
mov
stc
ja
mov
mov
push
inc
inc
mov
fidivrl
xchg
gs
mov
jecxz
add
push
lret
pusha
out
scas
push
sub
inc
pushl
addr16
or
adc
xchg
pop
out
lcall
insl
or
int3
sbb
add
leave
inc
out
push
xchg
xor
sar
cmp
sub
clc
out
in
loope
pushl
ja
or
mov
mov
out
xor
pop
lds
outsb
mov
test
dec
xor
dec
scas
mov
sbb
jo
xchg
mov
dec
scas
ljmp
xor
add
mov
lret
add
cmp
adc
cmp
and
or
add
mov
mov
lcall
jp
xchg
and
pop
mov
call
pusha
test
sub
insl
lods
repz
jnp
cmc
push
push
incb
stos
or
stos
jmp
cs
pop
cmp
sbb
xchg
push
inc
enter
cmpsl
testl
packssdw
nop
clc
xchg
ja
jae
cmp
xor
jmp
push
xor
push
jl
sbb
fiaddl
push
out
repz
or
gs
xchg
pop
cmp
mov
pusha
insl
sbbb
mov
cmpsl
fdivrs
xchg
push
cmp
xlat
mov
jp
and
cwtl
hlt
cmp
xor
mov
ficoms
xchg
loopne
cmc
lret
sti
andb
std
rclb
leave
movsl
sbb
sbb
lret
lret
push
inc
test
pop
sbb
lods
mov
sub
rcr
adc
and
mov
pop
jecxz
xchg
aaa
test
nop
shlb
mov
inc
pop
sbb
mov
push
sub
daa
mov
ds
sub
mov
mov
push
dec
lahf
xchg
jb
xor
insl
pop
in
icebp
loop
stc
mov
push
movsb
mov
mov
test
mov
xchg
ret
ficoms
mov
jp
vmread
sti
jbe
std
movsb
movsl
ja
jns
sarl
or
mov
mov
fisttpll
test
mov
push
dec
sbb
inc
and
cmp
inc
lahf
inc
cmove
adc
das
push
push
add
ret
mov
aam
ja
mov
mov
stos
mov
push
jp
and
mov
sarl
jp
sti
sub
jg
or
subl
andb
xorb
lcall
push
gs
in
jp
cmp
popa
test
loop
add
dec
sbbb
int3
and
mov
pushl
jmp
outsb
scas
loope
fcomps
std
mov
add
loop
pop
into
xor
fmull
pushf
pushf
and
jo
mov
pop
sub
out
jbe
test
sub
mov
aas
jae
mov
bound
xorb
or
cmc
and
mov
cwtl
mov
xchg
outsb
ss
adc
ds
ljmp
mov
sub
or
add
lods
sarl
fs
fwait
dec
pop
and
clc
leave
fcomp
sub
stos
and
jmp
sub
ror
fstpt
xchg
sti
mov
sbb
jl
jg
repz
cmp
jne
arpl
aam
movsb
and
movsl
inc
rorl
cmp
dec
sub
rolb
lret
out
adc
notb
mov
adc
cmpsb
fcmovnbe
imul
pop
jl
mov
stos
pop
push
inc
fbld
xorb
mov
into
stc
stos
sub
pop
addr16
cwtl
ja
popa
iret
mov
sbbb
jns
shr
cli
mov
popf
jbe
pop
mov
xchg
sbb
out
cli
ror
clc
add
ret
jne
mov
adc
notl
mov
cmpsb
loop
adc
cmc
and
rorl
dec
jae
push
mov
inc
or
xor
in
test
pusha
jmp
in
iret
xchg
iret
ret
data16
jnp
clc
push
mov
mov
or
mov
daa
jbe
adc
adc
sub
clc
xor
das
aad
adc
lds
mov
mov
ficompl
fcomp
mov
dec
mov
dec
or
mov
ret
outsb
imul
dec
arpl
mov
xchg
repz
js
sub
pop
lahf
xor
data16
inc
sub
add
les
or
int
fisttpl
push
lods
outsl
fimuls
lds
xchg
xor
mov
scas
stos
and
je
and
fnsave
es
mov
xlat
and
sahf
xchg
sahf
std
sbb
hlt
inc
adc
pop
inc
loope
lock
mov
mov
cld
jnp
negl
mov
xchg
movsl
and
loope
cli
in
mov
je
stos
fs
popf
mov
jne
dec
aad
pop
notb
pop
bound
js
push
call
decb
inc
imul
xorb
add
repnz
lods
and
lcall
je
jo
aam
dec
fadd
fldcw
cld
hlt
cmp
xor
jmp
je
push
xorl
inc
shll
insb
cmp
mov
stos
data16
sbb
test
bound
das
jnp
mov
mov
cltd
mov
das
adcb
jns
pop
jns
dec
jge
dec
ljmp
xchg
lods
jmp
out
fnstcw
mov
pop
fsub
lods
in
pop
loopne
xor
mov
idivb
imul
or
xchg
imul
je
mov
test
call
pop
xchg
xchg
leave
repz
lret
pusha
xchg
cli
pushf
shl
in
sub
lcall
out
scas
cmp
movsb
and
sti
mov
or
into
ss
or
test
jmp
stc
mov
sahf
inc
scas
mov
xchg
adc
les
shl
test
stos
enter
xchg
in
jl
cmp
push
add
mov
daa
stos
repnz
jns
out
inc
cmpsl
imul
or
mov
pop
cld
jecxz
mov
leave
sbb
mov
mov
sub
lret
out
push
into
adc
jnp
ret
repnz
xchg
adc
repz
minps
xchg
add
inc
lods
push
aam
test
jg
and
push
shll
ds
imul
je
push
nop
xchg
test
repz
popa
cmp
xor
push
cmp
add
lcallw
popf
repz
xor
movsb
add
xchg
test
stos
pushfw
rcl
mov
cmc
sub
leave
sbb
sub
and
sbb
adc
jl
stos
push
or
shl
xchg
push
adc
daa
cmpsb
aaa
data16
leave
js
mov
fadds
clc
rolb
sub
lret
xchg
ja
pop
pop
shlb
mov
test
cmp
movsb
ret
ss
inc
pop
lcall
aaa
sahf
test
das
sub
aaa
xlat
cmp
hlt
mov
lods
add
int3
xchg
fsub
mov
cmp
cmp
mov
mov
sti
repz
adc
lret
shrl
lea
int3
das
call
or
pop
inc
in
out
hlt
mov
adc
cmp
sbb
in
mov
add
mov
sub
jl
push
mov
fndisi(8087
adc
push
vprotq
dec
jle
loope
orb
stos
xchg
imul
popa
aas
sub
and
add
mov
xchg
das
arpl
and
cwtl
fidivrl
jae
pop
and
mov
leave
movsl
jno
xchg
pop
push
arpl
fwait
popa
push
or
push
dec
cwtl
lahf
pushl
in
mov
sbb
and
leave
test
js
clc
cmp
pop
pop
push
mov
ja
out
stos
adc
dec
in
mov
mov
cmp
adc
lret
cmp
push
enter
adc
jmp
repnz
mov
pop
mov
add
jl
pop
movsb
inc
or
ljmp
dec
xchg
adc
scas
ja
jnp
adc
push
adc
pop
aad
and
add
fcmove
call
fsubrs
sbb
and
mov
in
dec
jbe
sbb
shr
mov
jp
stos
into
mov
push
sbb
cli
mov
push
pop
mov
mov
mov
repz
adc
xchg
xlat
insb
and
daa
repnz
repz
fisubl
push
je
cltd
lock
inc
dec
test
or
jne
nop
ss
mov
mov
gs
stos
jb
test
xchg
cmp
mov
sti
or
es
xor
cmp
js
outsb
xchg
cwtl
out
pushf
xchg
dec
mov
sub
les
jl
xor
sti
jnp
cld
cs
cld
sbb
mov
and
adc
mov
movsb
stos
pop
jns,pt
mov
aas
imul
sbbl
iret
fistpll
xchg
je
popf
inc
stos
mov
jne
lret
in
stos
int
iret
cmp
cld
aas
and
call
in
fs
cpuid
jns
in
ljmp
pop
cwtl
mov
push
shll
mov
sub
pushf
inc
sub
and
scas
popa
enter
dec
orb
sbb
fnsave
outsl
fstpt
mov
push
int
add
sarl
fs
es
fisubrl
jmp
sbb
mov
pop
jle
mov
mov
test
cmp
and
loop
nop
cmp
mov
inc
stos
sbb
push
movsb
test
push
out
xor
test
add
mov
cmp
pop
shl
mov
xor
xchg
dec
xchg
mov
dec
push
test
out
pop
mov
push
jp
dec
and
mov
mov
pop
call
dec
inc
mov
call
mov
inc
push
mov
test
mov
cld
lods
cs
push
xchg
push
or
movsb
sbb
inc
ljmp
inc
mov
lea
mov
mov
sub
sar
mov
sarl
and
adc
xor
xor
mov
aaa
cmp
and
cmp
pusha
fldenv
cmp
pop
sbb
stos
lahf
fnstcw
in
test
adc
adc
or
mov
mov
dec
lods
sub
push
arpl
xchg
mov
add
jmp
xchg
test
and
xor
cmp
inc
fdivrs
mov
sub
cmp
xlat
out
mov
sub
aas
mov
mov
test
int
and
jnp
sahf
sbb
and
fcmovnb
sbb
je
push
xor
les
add
bound
dec
xchg
sbb
inc
das
repnz
mov
movsb
sub
pop
push
lods
adc
cmp
adc
mov
cmp
addr16
mov
xchg
or
and
mov
flds
push
xchg
xchg
cli
std
inc
cmc
stos
ret
xchg
inc
push
lea
les
push
dec
out
test
lret
bound
popf
imul
jae
inc
push
jb
dec
push
xor
shlb
cmp
stc
sbb
sub
push
sub
mov
aas
enter
xchg
ret
adc
mov
and
lds
arpl
dec
jns
mov
push
dec
sbb
inc
fwait
scas
push
ss
mov
in
mov
mov
jno
dec
sbb
stos
imul
lods
fucom
cmp
and
xorl
dec
daa
pop
pop
cli
ljmp
jne
lods
js
ja
repnz
or
adc
mov
aam
inc
mov
insl
adc
push
js
add
mull
mov
mov
loop
pop
and
add
arpl
cwtl
rclb
je
pusha
mov
in
jle
xchg
push
aas
insb
mov
adc
mov
cmp
adc
cmp
in
fcmovne
dec
ret
movd
pushf
jns
xor
pop
scas
sub
adc
incl
movsl
adc
stc
ja
push
push
xor
shll
jne
in
sarl
pop
cld
roll
push
push
and
inc
mov
sbb
fs
jb
sbb
pop
pop
mov
sbb
jbe
rolb
into
sbb
xchg
insl
iretw
lret
fdivs
xchg
clc
popa
ret
ja
and
outsb
adc
xor
popa
sbb
dec
scas
cltd
aaa
and
clc
push
or
jb
inc
fildll
js
add
jo
inc
bound
or
sbb
std
or
pop
mov
jecxz
jge
cmc
addl
pop
push
insb
imul
pop
cmp
xor
les
xor
lock
push
dec
push
jbe
sarl
ficoms
sbb
loope
pop
mov
test
dec
popf
sbb
cli
or
jg
cmp
adc
add
popa
xchg
lcall
push
xor
ljmp
aam
cmc
sbb
nop
sbb
jle
out
shll
cmpsb
xor
dec
pop
pop
xor
sarb
gs
pop
mov
sub
loopne
in
and
aad
inc
aam
int
fs
push
mov
or
js
aam
pop
jo
aaa
lea
sbb
inc
leave
or
mov
fldpi
lea
repnz
gs
cmp
pop
inc
popa
insl
mov
cmp
jne
push
xor
dec
jne
iret
dec
sbb
in
xor
adc
sbb
jmp
xchg
mov
scas
int3
inc
cmpsb
mov
cltd
popa
inc
inc
xor
stos
ss
lds
popf
mov
adc
lret
clc
sarb
test
mul
xchg
dec
pop
adc
or
test
adc
xor
push
jbe
mov
mov
stc
cld
jnp
cli
xchg
xchg
leave
es
rolb
jae
ljmp
push
fcmovne
enter
lods
xor
sub
ret
je
and
pop
movsb
negb
jae
adc
loopne
mov
mov
add
xor
addl
xorl
in
mov
push
mov
sbb
push
sbb
xchg
pop
push
ret
inc
jbe
xor
sahf
test
movsb
std
fs
mov
mov
adcb
loop
ret
cs
and
ljmp
aaa
jle
jg
pop
mov
inc
sbb
mov
call
ljmp
sub
in
sub
nop
xchg
dec
mov
push
or
mov
push
lea
push
and
push
push
loop
sbb
ljmp
test
cmp
add
push
adc
rorl
in
scas
or
aas
sbb
cmp
jmp
jecxz
push
iret
mov
push
cwtl
push
or
repnz
jo
and
or
sbb
mov
push
scas
jb
xchg
push
mov
movsl
out
cld
adc
dec
ss
inc
mov
scas
popf
out
mov
test
sbb
insl
insl
cmp
shl
pusha
ljmp
mov
and
mov
mov
push
lods
rorl
aad
lret
daa
or
mov
mov
mov
sbb
je,pn
clc
xor
js
pop
sub
aad
pop
pop
lock
xchg
idivl
movsl
jl
mov
sub
jnp
repnz
scas
pop
push
out
adc
mov
jae
call
mov
adc
aam
adc
dec
das
jmp
mov
test
rcrb
push
mov
sub
lea
pop
rcrl
int
adc
into
inc
jge
sbb
rdmsr
scas
sahf
jge
jmp
or
imulb
roll
lret
cwtl
jno
hlt
or
push
sbb
repnz
test
in
ds
push
mov
push
or
ljmp
push
jbe
jge
dec
cmpsb
pusha
sbb
lea
loope
ljmp
jmp
test
jecxz
mov
mov
mov
sub
adc
lret
cmp
xchg
add
insb
xchg
xchg
data16
stos
in
and
and
dec
sar
ret
popf
add
fsub
pop
xor
push
insb
jle,pn
xchg
shlb
ret
push
and
inc
scas
jns
jae
xchg
xchg
mov
mov
fimull
inc
push
mov
cwtl
dec
call
aas
repz
out
icebp
test
add
leave
enter
inc
xchg
jo
les
and
push
adcb
xchg
repnz
inc
xchg
cmp
movb
shl
push
sbb
cmp
xor
pop
jmp
sbbl
mov
push
movsb
imul
les
test
lds
jae
inc
sahf
pop
add
rorl
pop
lods
stos
cwtl
js
dec
test
sub
pop
pop
adc
sbb
nop
lret
push
incb
ja
xchg
andl
mov
test
xchg
sbb
jmp
out
movsb
mov
xchg
adc
mov
xchg
mov
ret
negb
aaa
jge
int3
ret
pop
lods
cmp
scas
dec
xchg
sti
sub
or
xchg
outsl
bound
dec
pop
xchg
cltd
jg
ljmp
insb
inc
sbb
sahf
outsl
sbb
jno
inc
aam
out
mov
add
popa
arpl
ret
fnstsw
xor
js
cld
fstl
lahf
or
mov
ds
lods
je
xchg
jecxz
addl
inc
cs
shll
test
int3
inc
in
sub
imul
call
jl
stos
bound
mov
mov
xor
push
adc
or
push
test
arpl
frstor
pop
orb
add
pop
repz
test
leave
das
inc
imul
movsb
push
cmpsl
lea
aam
frstpm(287
sbb
and
mov
xor
xchg
fs
xchg
sahf
fs
mov
adc
mov
shll
and
outsl
jb
dec
sti
mov
orb
andb
dec
hlt
xor
ret
aaa
mov
xor
mov
xor
sub
jmp
imul
sbb
jge
push
or
xor
mov
mov
adc
dec
dec
dec
and
inc
fstpt
sub
ja
xchg
js
mov
inc
adcl
sbb
cmp
aaa
divb
jb
ss
loopne
inc
dec
mov
add
cmp
pop
and
lahf
aaa
xor
popf
and
jno
hlt
cld
add
inc
sbb
cmpsb
fbld
xor
cmp
dec
lods
push
movsl
or
dec
push
jmp
mov
xchg
std
test
sahf
aam
fdivrs
hlt
adc
sbb
sub
or
jl
inc
repnz
lret
mov
jecxz
push
pop
and
mov
xor
mov
out
dec
imul
pop
test
pop
cmc
adc
idiv
lret
sbb
shr
xchg
ljmp
addps
aas
iret
sbb
mov
shl
xor
mov
xor
cld
into
xchg
dec
in
and
das
push
cmp
xor
adc
mov
call
pop
out
sbb
and
outsl
lods
pop
xchg
inc
push
mov
xor
sub
imul
dec
adc
push
mov
enter
sbb
cmpsl
mov
ficoms
inc
push
mov
mov
jg
out
mov
xchg
rcrb
std
pop
adc
adc
lds
and
add
sti
orb
lea
loope
dec
enter
dec
dec
testb
repz
xlat
out
ss
mov
fiaddl
je
std
xlat
or
add
pusha
repz
lcall
sub
sbb
sbb
add
cltd
in
and
lahf
loop
bound
push
stos
jno
push
fnsave
push
mov
sti
orl
lret
xchg
or
fstpt
add
popa
mov
daa
pop
jge
xchg
je
and
std
xor
test
sub
lock
xor
dec
lock
jns
jp
jg
hlt
or
lcall
stc
and
mov
sub
and
test
mov
adc
rolb
sarl
or
jno
jmp
ds
sub
out
leave
jp
pusha
jge
push
popa
mov
ficompl
jmp
dec
inc
or
scas
cmpsb
aas
push
lods
xorb
jo
pop
hlt
sti
dec
icebp
lds
lret
mov
ja
mov
bound
push
push
jecxz
insl
jecxz
adc
mov
adc
pushf
gs
mov
lret
dec
pop
mov
or
sub
adc
inc
push
pop
loopne
push
fsubl
mov
or
adc
xchg
mov
cs
xor
cmp
imul
xlat
cli
dec
mov
pop
out
add
sub
adc
test
jb
jg
clc
gs
xchg
mov
mov
and
scas
pop
les
les
clc
in
lock
or
cmpsl
inc
xor
mov
les
xchg
js
cmp
xchg
mov
jp
lods
mov
aas
aas
addr16
stos
cs
ljmp
pop
xchg
ret
into
jnp
stos
out
sbb
popa
adc
cmpsl
arpl
aad
lock
jle
std
mov
sbbl
jp
lea
ljmp
jg
pop
sahf
fstpt
xchg
mov
loop
lock
sub
add
fcomps
ljmp
inc
aad
imul
into
dec
mov
mov
rcrb
push
sarl
cli
mov
push
mov
pop
pop
cmp
cwtl
scas
lds
les
xor
jge
pop
push
adc
scas
repz
pop
mov
std
cs
sub
add
sbbb
xchg
add
jbe
lret
add
movsb
lahf
xor
call
jg
enter
mov
fbstp
cltd
scas
int
das
cwtl
imul
fnstcw
cld
or
sbb
popf
adc
xchg
stos
icebp
call
dec
pop
mov
ja
testb
cmp
dec
hlt
dec
pop
cmp
into
inc
mov
mov
cmp
xchg
out
xchg
roll
pusha
inc
push
jbe
jge
jnp
ss
iret
or
mov
or
xorl
jecxz
dec
lcall
mov
mov
mov
inc
cmp
jnp
into
lcall
test
arpl
inc
popf
ror
mov
jl
xchg
repnz
sti
fnstenv
mov
pop
sub
lds
jp
fadds
cmp
xor
or
stos
inc
and
dec
es
aaa
pop
cwtl
popf
rorb
popf
icebp
sbb
xchg
clc
mov
stc
dec
out
mov
jp
mov
out
and
mov
mov
lahf
xor
cltd
xchg
out
ret
xor
jb
leave
lret
ret
inc
xor
mov
sbb
outsl
inc
xor
mov
in
xor
xchg
and
ret
enter
push
jae
push
inc
or
add
jl
lea
jl
pop
outsb
je
daa
pop
out
mov
cwtl
xchg
push
lods
popf
xor
mov
push
idivl
mov
mov
add
dec
jae
mov
out
in
jb
or
add
outsb
mov
imul
and
outsb
jp
push
dec
daa
jle
and
mov
addr16
nop
pushf
test
or
sarb
sbb
mull
mov
pop
cs
add
cmp
call
fnstsw
test
inc
inc
stos
inc
xchg
outsl
movsl
out
adc
popf
idivb
fcomip
mov
add
clc
flds
stc
xchg
std
mov
dec
add
stos
aad
jbe
pop
stos
test
inc
sbb
adc
or
rep
dec
inc
mov
pop
movsl
push
test
scas
or
enter
jno
mov
adc
lret
mov
fisubl
insb
ljmp
lahf
xchg
and
ds
mov
mov
fisubl
inc
cltd
repz
fiadds
dec
clc
xchg
jle
aaa
cmc
or
arpl
xchg
cwtl
push
int3
lcall
dec
push
sbb
sbbb
xchg
xlat
repnz
dec
pop
addr16
in
fldenv
test
sub
push
in
aam
scas
inc
cmc
loop
xchg
aaa
jno
iret
std
mov
pop
add
mov
dec
xchg
pop
rol
push
mov
sahf
les
or
in
es
outsb
dec
pop
inc
xor
pop
outsb
or
test
rorl
xchg
adc
xchg
and
sub
js
jecxz
dec
inc
bound
jecxz
data16
xor
dec
mov
movsb
xchg
fisttps
mov
jg
mov
jo
cmpl
mov
cmp
repnz
or
inc
push
mov
pop
in
js
push
in
and
bnd
cmpsb
fdivrs
mov
addb
inc
movsl
push
cmp
js
aam
nop
lds
sarb
movsb
dec
sbb
pop
mov
test
int
adc
out
test
fisttpl
les
xchg
xchg
push
dec
fsts
mov
movsl
cwtl
lock
je
push
nop
mov
movsl
xchg
cs
test
mov
aaa
dec
inc
pop
fadds
mov
or
mov
cmc
push
dec
dec
popf
sub
jle
fisttpl
cmpsb
dec
cmp
push
jbe
nop
in
bound
repnz
test
fstps
orb
adc
repz
mov
loopne
loope
or
movsl
push
dec
pop
jmp
hlt
xchg
out
pop
imul
ljmp
in
adc
dec
popf
popf
cmp
ds
lret
hlt
push
es
dec
dec
or
test
push
or
push
pop
fstl
mov
inc
xchg
sbb
jae
cwtl
jno
je
xlat
pushf
scas
js
inc
in
jl
orb
pusha
rorb
inc
xchg
xchg
pop
lret
pop
and
outsl
mov
insl
cmc
out
repz
adc
aaa
jno
rcr
mov
xchg
add
dec
data16
sarl
mov
pop
inc
xor
push
pusha
or
incl
xchg
aas
xor
sub
or
movsb
ljmp
xor
stos
mov
push
lcall
mov
addr16
fisttpll
cmovge
fnstcw
xchg
mov
rorb
xchg
sub
arpl
adc
imul
mov
mov
lds
or
mov
dec
mov
add
adc
shll
jge
xor
xchg
fstpl
cmp
ret
mov
into
hlt
and
push
daa
pop
xorl
cmp
rorl
push
sbbl
sti
xchg
cmc
rorb
mov
pop
imul
lret
push
mov
xor
mull
in
mov
cwtl
pop
sbb
repz
adc
push
adc
add
jmp
cmp
xchg
ja,pn
sub
lock
clc
xor
jno
dec
in
sbb
cli
cmpsb
xlat
lahf
pop
gs
cld
ret
iret
inc
jns
test
jno
mov
scas
push
inc
imul
jno
test
rorb
dec
xchg
mov
dec
stc
sbb
xchg
dec
adcl
pop
cli
sub
push
dec
lods
mov
inc
or
xchg
push
imul
mov
xchg
scas
dec
and
sbb
push
stos
lods
cmpsb
fs
lcall
sub
dec
pop
mov
sub
sti
call
xchg
pushl
movq
int3
mov
sbb
stos
pop
out
arpl
call
jp
mov
lret
push
dec
pop
adc
mov
cmp
call
dec
cmp
into
mov
push
sahf
jge
xor
sub
xchg
das
hlt
xor
adc
push
testl
aas
xorl
ds
in
arpl
and
bound
xchg
cmc
cld
fidivs
mov
cmpl
addr16
sub
fucomp
std
orb
lea
frstor
js
std
xor
mov
and
push
daa
sar
ljmp
add
or
cmp
test
clc
adc
decb
inc
sub
add
jecxz
cmc
js
sub
and
int3
xchg
or
lock
sbb
pusha
jns
push
iret
pop
xorb
dec
xchg
lret
sbb
jo
xor
pushf
mov
jge
mov
in
sbb
test
sub
jle
xor
test
std
rolb
shrl
test
les
add
pop
dec
adc
fcoms
dec
movsb
xlat
sti
add
push
ja
sbb
dec
mov
push
cmovg
sub
test
push
pusha
gs
xor
mov
mov
or
loop
popa
leave
jbe
out
ljmp
mov
jnp
jo
push
push
loopne
mov
pop
jno
sub
xchg
rolb
aas
outsb
ds
in
push
mov
and
lret
pop
push
stos
mov
mov
pusha
inc
test
mov
or
jbe
inc
shr
lods
shlb
scas
mov
xchg
cli
xor
mov
adc
fstl
outsb
pop
js
cmp
xchg
or
ljmp
loop
je
jns
xchg
lcall
add
sbb
xchg
add
into
ljmp
arpl
and
ret
or
mov
push
loope
scas
stos
pop
data16
mov
dec
mov
imul
in
cmp
mov
dec
daa
into
notl
shlb
loopne
and
mov
jo
xor
xor
bnd
mov
hlt
mul
adc
js
inc
cmpsb
dec
testb
cmp
shlb
cld
dec
xchg
jns
or
test
aam
jmp
hlt
jne
inc
mov
iret
push
push
mov
lahf
in
pusha
push
in
push
jb
mov
int
clc
jmp
repz
ss
cmpsb
or
loope
insb
jmp
pop
repz
add
das
lock
lods
bound
xor
out
mov
lods
inc
jnp
mov
cmp
xchg
arpl
pop
xchg
push
xor
xchg
aaa
or
inc
push
into
push
pop
in
cmpl
fstps
pop
hlt
aam
xor
mov
jae
adc
cmp
cltd
xchg
test
fs
mov
hlt
insl
lret
add
int3
cmp
mov
add
pop
outsb
and
and
push
jnp
jb
push
popf
xchg
cmp
shrb
fwait
jl
sub
out
dec
xor
jge
daa
loop
or
add
xlat
mov
jmp
push
xchg
push
out
bound
xor
ret
sbb
hlt
in
cmp
cli
dec
insl
jno
xor
mov
fwait
push
fisttps
lds
adc
into
lods
or
jbe
addb
mov
mov
adc
adc
dec
jecxz
es
in
mov
mov
cld
jbe
testl
pop
sbb
inc
shrb
outsb
jg
sub
dec
test
pop
dec
push
test
xchg
dec
je
int3
fcoms
out
xorb
cmp
fidivs
loopne
add
inc
aad
mov
push
mov
scas
enter
jl
xchg
cmp
lret
inc
fnstcw
cltd
bound
pop
lret
cmpsb
add
lock
jae
mov
pop
ret
imul
mov
pop
adc
int
ja
jle
sbb
lret
mov
jae
jb
pop
call
loope
daa
stos
daa
xor
rol
push
cmp
adc
jmp
mov
xorl
inc
pop
mov
jbe
stc
adc
xchg
std
jne
push
jo
les
std
lret
and
imul
cmp
mov
and
dec
mov
mov
xor
push
mov
jne
ds
or
inc
int
push
or
stos
sarl
pop
hlt
adc
ljmp
and
rorb
jmp
test
test
rcll
dec
add
in
leave
ror
rep
mov
fadd
pop
jmp
das
add
jne
addr16
add
pop
fisttpl
fwait
jge
gs
out
add
mov
outsl
xchg
movsl
arpl
adc
push
fwait
das
cs
mov
lock
dec
std
and
cmc
bound
sbb
or
stos
stos
push
sbb
or
in
pop
mov
bnd
js
mov
or
add
jns
outsb
dec
bound
shl
test
jmp
or
xchg
cmp
and
jnp
add
xor
js
adc
mov
cmpsl
pop
test
pop
and
scas
xor
mov
mov
adc
loope
mov
js
inc
cwtl
repnz
mov
dec
xor
push
movsb
mov
or
mov
add
cmp
adc
cmp
sub
imul
rclb
shrb
les
dec
fxch
hlt
aaa
jmp
jl
je
cmpsl
fs
test
cmp
dec
sub
xor
inc
stc
std
lret
aam
pop
cltd
mov
imul
andl
cmpsl
add
subl
rcll
jbe
dec
add
xchg
int3
jle
mov
xchg
push
push
enter
dec
aad
mov
mov
aaa
outsl
and
rol
enter
inc
and
es
addr16
and
pusha
bound
imul
incb
in
sub
inc
or
inc
int3
int3
pusha
mov
call
aam
and
ja
loop
les
cwtl
xchg
mov
in
bound
loope
jl
adc
add
sub
pop
outsb
scas
push
push
cli
insl
mov
out
out
push
insb
mov
int
or
mov
mov
fcomi
dec
sub
jnp
jnp
mov
push
lds
jge
mov
sarb
push
push
in
arpl
sbb
xchg
sahf
jle
mov
push
jns,pt
sarb
dec
pop
push
push
adc
push
inc
jb
xor
int
dec
push
das
xor
jg
leave
test
popf
mov
xor
es
push
int3
cwtl
je
dec
dec
adc
arpl
jg
push
inc
adc
insl
jg
aas
push
shrl
mov
adc
sub
jnp
mov
stos
add
lcall
dec
out
and
jecxz
ret
push
lret
je,pt
xchg
int
cwtl
mov
jmp
data16
inc
jl
ljmp
mov
mov
dec
jne
jecxz
mov
loop
sub
push
fimull
inc
icebp
insb
pop
cmp
xor
js
je
jno
sbb
sbb
push
aam
popf
push
pop
push
lahf
dec
push
sub
fwait
xchg
sbb
in
mov
pop
pusha
in
push
and
out
adc
and
fmuls
fwait
out
lcall
pop
jo
movswl
add
jmp
pop
fisubrs
cmp
testb
adc
mulb
test
lret
add
shl
clc
ja
push
pop
mov
dec
inc
insb
lods
hlt
pop
cmc
leave
test
int
movsb
clc
lock
pop
mov
xlat
call
outsl
xchg
fdivs
mov
hlt
in
mov
daa
repz
lahf
inc
adc
dec
fstps
cmp
mov
sub
cmpsb
sub
inc
xor
pop
and
movsb
int
push
cmp
gs
hlt
jnp
jmp
and
or
adc
fnstenv
hlt
jbe
rcr
aam
mov
mov
mov
repnz
sbb
adc
mov
enter
adc
push
pop
cmpsl
das
push
cmp
sub
push
xlat
jecxz
movsb
loope
sbbl
std
xor
push
fidivrs
or
xchg
xchg
push
push
cmp
flds
sub
or
dec
sbb
cltd
push
dec
addb
imul
bound
sub
cld
loope
ja
sub
jae
push
test
mov
lods
adc
jp
imul
xor
ds
sbb
in
out
adc
sub
repnz
push
cmp
dec
movb
sub
jnp
xor
dec
pop
add
stos
xchg
sbbb
or
xchg
sub
jnp
loopne
xor
and
push
pop
mov
adc
jae
ret
shlb
pop
psllw
and
aas
out
clc
scas
xchg
and
std
cld
aad
adc
mov
or
dec
movzbl
push
pop
inc
lahf
xchg
pop
aam
ret
dec
push
inc
push
leave
dec
outsl
mov
push
and
xchg
pop
imul
stos
adc
fisubs
inc
clc
sbb
dec
xchg
mov
pop
adc
out
push
bound
inc
adc
or
lret
mov
int3
xchg
xchg
iret
test
mov
jnp
es
jp
jle
xchg
int3
je
push
insb
mov
popf
and
xchg
jle
add
stos
fimull
lcall
and
or
imul
mov
mov
sub
sarb
ds
sahf
pop
fsubrp
inc
cld
stos
sahf
aaa
and
test
in
jp
in
jecxz
mov
int
pop
fs
shlb
ds
mov
xor
lret
xor
lds
pop
pop
xchg
mov
sub
cmp
test
rolb
push
xchg
lret
sub
mov
xchg
push
add
clc
je
clc
addr16
popa
pop
add
add
fstps
sbb
leave
loopne
pushf
std
mov
cmpsl
mov
pop
mov
ret
push
test
push
mov
out
jmp
aad
test
repz
jno
and
and
leave
int3
inc
mov
mov
xchg
iret
sbb
data16
aad
lcall
ja
or
jb
mov
lret
lret
sti
cmp
mov
jp
pop
add
ja
pop
cmc
cmp
dec
inc
jne
sbb
jmp
sbb
xor
stos
insl
insl
jmp
test
mov
jge
jnp
push
push
dec
test
lret
or
ljmp
lret
fbld
test
or
inc
sub
mov
clc
int
jne
dec
repz
ljmp
and
sarb
fcomp
and
inc
xor
mov
xor
sub
push
lret
or
ljmp
mov
out
arpl
loope
push
sub
lahf
adc
loopne
cwtl
das
cmp
imull
fs
inc
push
icebp
movsb
jmp
xchg
jle
xor
fstl
mov
inc
jge
jbe
xchg
mov
popa
push
int
push
lahf
mov
push
or
test
inc
jne
dec
outsb
and
mov
loop
aas
scas
push
inc
push
dec
fdivl
loop
jo
lret
repnz
cmp
push
shrb
pusha
jmp
sbb
int
les
mov
jne
or
loope
inc
imul
leave
scas
add
pop
xchg
in
xchg
add
push
and
test
pop
add
adcb
scas
jmp
sub
ja
sub
pop
add
adc
mov
inc
xchg
cmp
push
sarl
xor
fs
or
lock
cmp
xlat
push
add
or
fldenv
fidivrs
idivb
pop
dec
dec
push
pop
dec
pop
repnz
pop
xlat
fistps
in
aaa
xor
fnstcw
loop
cmp
mov
mov
loop
pop
fisttps
mov
and
shll
pop
iret
test
or
xchg
sbb
cmp
mov
popa
inc
sub
aas
outsl
subl
inc
test
mov
rcrb
rcrl
mov
sbb
xchg
dec
out
dec
fisttpll
cmpsl
cmpsb
sub
inc
insb
sti
negb
push
pop
outsl
mov
mov
or
push
adc
lea
cld
jbe
mov
xor
add
inc
mov
into
add
lea
outsl
push
sub
movsb
les
jnp
sbb
adc
pop
es
pop
inc
pop
sahf
jge
mov
fiaddl
dec
jp
xchg
ja
pop
xchg
jne
push
cmpsb
jne
jecxz
je
sbb
sbb
push
mov
cli
pusha
or
decb
pop
xchg
mov
repz
xchg
pop
std
xchg
out
lods
pop
push
add
or
mov
sbb
sbb
mov
mov
fwait
mov
and
jo
fucomi
movsl
addr16
xor
clc
mov
xchg
ljmp
pop
pop
arpl
mov
rolb
jae
add
shrl
push
adc
lods
pushf
pushl
push
sub
jle
cmc
add
jae
mov
xchg
push
adc
mov
mov
cmp
rcr
adc
in
mov
and
out
push
pop
add
pop
or
pop
rorb
lcall
jno
daa
mov
xlat
push
arpl
lods
stos
loope
test
or
xor
pop
push
out
lock
enter
mov
or
xor
sub
fildll
lock
push
mov
xchg
push
out
fxch
int
and
pop
test
lret
mov
mov
pop
insl
jmp
mov
xchg
repz
mov
enter
stos
cmp
lock
fsts
icebp
stos
pop
hlt
outsb
xlat
mov
add
push
cwtl
imul
test
outsl
jl
ret
xor
mulb
call
sbb
iret
mov
xchg
or
imul
mov
lahf
lret
inc
mov
test
popa
inc
scas
pop
mov
mov
test
fs
dec
test
stos
cmp
mov
fs
aaa
add
sbb
mov
sahf
aad
xchg
sbb
xor
cmc
insb
in
les
sbb
fbstp
add
popa
push
outsl
push
adc
cmpsl
pop
pop
popf
mov
fisubs
xorb
mov
jae
arpl
mov
xor
push
mov
mov
mov
out
mov
cmpsl
mov
stc
mov
ret
sub
xchg
mov
sbb
mov
cmc
xlat
enter
rolb
push
ret
lock
aad
jmp
enter
inc
insb
test
sti
rolb
pop
out
stos
xor
mov
pop
ss
lahf
ret
mov
insl
call
jbe
pop
dec
sub
sbb
ljmp
icebp
add
out
inc
and
out
cmpsl
imul
les
dec
pusha
dec
xchg
and
lods
jecxz
ja
nop
ljmp
xor
scas
sbb
shll
dec
ret
sbb
jmp
and
push
popa
push
addr16
xlat
jecxz
mov
das
jp
inc
dec
add
cmp
out
push
pop
push
scas
hlt
rcll
in
cs
popa
sbb
shll
push
popf
dec
xchg
push
fistpl
cmpb
mov
je
push
popf
sub
mov
jae
sbb
sub
lea
fsts
cmp
adc
sbb
push
pop
and
mov
or
jne
pop
inc
lahf
and
sbb
cltd
mov
inc
sti
cmpsl
ja
pusha
mov
cs
dec
cmpsb
fwait
mov
rcrl
inc
mov
adc
cwtl
adcb
adc
sub
xlat
cmp
fidivrl
andb
mov
pop
andl
pushf
or
adc
jecxz
mov
icebp
cmp
sarb
arpl
jae
push
adc
jo
lock
lods
inc
inc
ja
mov
scas
cmp
xchg
dec
inc
std
addr16
outsb
and
and
pushf
imul
call
mov
psubb
push
cmp
inc
in
cmp
jp
insb
and
jns
outsl
out
fs
sub
les
loopne
inc
mov
or
mov
pop
lcall
jno
pusha
cmp
sbb
pop
or
sbb
mov
inc
psubsw
jbe
mov
repz
popf
movsl
adc
out
rcr
push
inc
es
popf
push
cmpsb
add
push
inc
cmc
pop
ss
les
stos
aam
lods
je
jmp
or
add
les
testb
ds
movb
lcall
int
sahf
push
shlb
add
jns
sub
xchg
data16
adc
ret
movsb
btc
popf
pop
cmp
ror
mov
inc
mov
test
mov
push
popf
adc
and
cmp
mov
mov
or
pusha
bound
or
rcrb
dec
sar
sbb
imul
push
test
sub
andl
and
jbe
rorb
xchg
mov
dec
sub
out
xchg
clc
pop
lods
xchg
int3
sub
sub
ljmp
cmpsl
daa
imull
inc
aas
mov
jo
dec
lock
add
bound
jmp
push
aas
mov
inc
pusha
pop
dec
pushf
mov
cmpsw
jae
addr16
fwait
cwtl
std
push
dec
lcall
mov
pop
int3
movsb
sbb
add
inc
leave
adc
add
in
sub
imul
ret
xchg
sbb
sbb
jbe
push
imul
stos
inc
scas
add
repnz
cmp
faddl
roll
inc
dec
cmp
push
add
ficoms
inc
lods
cmp
pop
and
inc
xchg
push
je
pop
jns
xchg
adc
in
in
xchg
clc
jne
sub
or
out
movsb
fld
add
out
fsubrs
shlb
andl
mov
lcall
xchg
pop
fdivl
pop
jnp
dec
jge
mov
bound
mul
cwtl
xor
test
or
dec
adc
pop
hlt
movsl
ret
push
ret
adc
ss
test
fidivrs
dec
out
addr16
rcr
inc
cwtl
ret
test
xlat
in
xor
pop
jne
dec
sub
dec
inc
xchg
fsubrl
xchg
decb
int
cmp
retw
xchg
dec
popf
ss
push
sub
loope
jl
in
sub
sub
pop
adc
test
int3
jb
sbb
fisttpll
push
lock
call
xchg
pop
mov
inc
sbb
push
sbb
and
test
mov
es
enter
mov
loop
push
cmpsb
test
xchg
fwait
lds
pop
fmul
daa
xlat
sub
fidivl
jle
aas
pusha
lds
adc
pushf
fstl
push
addr16
in
push
jno
jle
mov
daa
gs
or
adc
in
push
sar
jbe
cmpsb
pusha
test
add
pop
fldl
push
or
xlat
sub
push
mov
or
je
jmp
fstps
frndint
fistps
cld
or
test
dec
jge
movsb
add
pusha
inc
inc
mov
rcrl
call
insb
cmc
bound
pop
aas
push
fisubrs
sahf
leave
mov
xor
mov
push
loopne
fs
and
push
push
push
mov
xacquire
pop
fisubrs
stc
push
push
mov
sbb
out
hlt
push
imul
aad
and
inc
cmc
inc
gs
out
cli
sub
pop
sbb
mov
js
dec
scas
push
scas
mov
lret
iret
es
cmp
cmp
cmp
or
movsb
jbe
lods
xchg
or
sbb
xchg
push
std
in
dec
fstps
xchg
enter
fldl
mov
scas
dec
out
mov
or
out
stos
sub
cli
cmpl
and
push
mulb
mov
jo
out
add
icebp
stos
fistpl
fstl
inc
shl
inc
xorl
addl
fistpll
inc
or
sub
addr16
js
mov
add
mov
mov
ret
es
xchg
out
decl
popf
sbb
adcb
or
mov
bound
pop
lcall
cs
jmp
ljmp
in
popa
mov
sub
xchg
xlat
dec
mov
lahf
std
add
lock
pusha
in
jae
shrl
lcall
cmpsb
pop
jmp
mov
dec
push
sub
inc
mov
xchg
dec
sbb
cmp
lods
sub
bound
xchg
jg
mov
or
mov
inc
push
mov
push
pop
or
push
and
js
pop
sbb
sub
xchg
push
pop
xchg
pshufw
mov
sbb
jbe
into
les
add
jl
aad
and
mov
stos
mov
stos
mov
dec
mov
or
int3
lret
loopne
xor
jo
add
out
or
push
icebp
pop
in
pushf
cld
cmp
ss
in
mov
sahf
fs
fsts
mov
aaa
popf
lock
sbb
push
shrb
fcomps
fdivl
jle
or
mov
addb
test
mov
lock
insl
aas
xlat
imulb
ds
daa
mov
inc
mov
push
push
dec
jecxz
shrl
test
xchg
lods
xchg
fs
lods
push
dec
je
push
out
cwtl
push
xchg
rolb
xchg
sub
aad
insl
sahf
repnz
sbb
rorb
mov
lods
lahf
fcoms
lahf
sub
mul
inc
inc
rorb
imul
mov
xchg
movsl
push
scas
xchg
inc
jg
sub
sbb
into
fcoml
icebp
push
mov
enter
pop
mov
inc
aas
pop
jae
js
pop
test
jecxz
mov
pop
pop
mov
fcom
and
pop
mov
mov
push
adc
mov
pusha
ficomps
loop
ljmp
leave
syscall
and
fidivs
data16
js
add
mov
scas
cmc
and
xor
sub
jle
fbld
pop
lcall
cwtl
popf
pusha
sub
and
lods
and
dec
adc
bound
int
out
jmp
jl
xor
adc
jns
adc
stc
fsubl
jne
or
clc
adc
hlt
and
out
mov
lahf
inc
cmp
xchg
dec
cmpsl
mov
popf
loop
vunpckhps
mov
and
mov
les
xor
inc
or
fwait
out
xor
lcall
xlat
pop
dec
sbbl
stc
shrb
iret
dec
aaa
scas
cmpl
mov
stos
popf
adc
test
xor
orb
outsl
addr16
js
idivl
hlt
ljmp
shlb
cmpl
lret
inc
aas
dec
sbb
clc
dec
daa
fwait
push
dec
loope
sub
adc
test
sbb
fidivrl
sbb
cltd
inc
clc
repnz
stos
pop
inc
fs
in
test
cmpsl
xchg
jle
in
cs
mov
and
pop
sbb
rcl
adc
addl
and
out
push
sbb
mov
mov
out
sbb
jecxz
scas
pop
jge
sub
lds
jmp
leave
repz
ret
fimuls
ja
int
mov
out
cmpsb
pop
or
in
pop
mov
div
repz
arpl
iret
and
xor
stos
fwait
mov
nop
sbb
pop
cvtpi2ps
aam
xchg
mov
in
lahf
mov
jns
jno
ret
jmp
out
jnp
cli
shlb
xchg
push
cmc
cld
std
js,pn
xchg
mov
fldl2e
and
dec
xchg
cld
cmc
add
and
pop
mov
add
inc
jle
aam
push
pushf
int3
jmp
sub
pop
sub
inc
jb
fdiv
jge
pushf
mov
push
cld
fs
dec
sub
xor
add
aaa
sub
aaa
lods
adc
add
push
or
bound
xor
test
xchg
pop
adc
fstl
jl
or
movl
xchg
sub
mov
mov
int3
addr16
inc
inc
pushf
std
or
inc
and
out
dec
mov
add
in
adc
cmp
fnsave
adc
jne
pop
mov
and
push
ljmp
adc
pop
mov
outsb
call
add
addr16
repnz
mov
push
outsb
jecxz
pushf
fsub
pop
or
incb
mov
mov
sbb
stos
addb
xor
lret
int
add
mov
push
pusha
je
push
mov
loopne
arpl
out
sub
lcall
pop
ret
repz
nop
je
lret
iret
push
frstor
mov
lahf
dec
movsl
daa
inc
jecxz
aaa
adc
fwait
cltd
cmpsb
jl
cld
add
mov
lock
and
mov
repz
fnstenv
jnp,pn
js
aas
pop
dec
mov
hlt
aam
xchg
mov
jle
xchg
mov
inc
loope
lahf
inc
cs
inc
jae
pop
xor
sub
and
push
dec
ret
fs
mov
push
jbe
sbb
jmp
cmovns
inc
cmpl
push
sub
out
xchg
ret
jb
pop
rcrb
jp
inc
imul
dec
sti
xchg
stos
or
lds
dec
push
cmp
xchg
xchg
pusha
xchg
aad
out
hlt
iret
xchg
hlt
arpl
push
xchg
test
jg
test
mov
xor
dec
nop
out
pop
mov
xor
sbbb
push
dec
dec
lret
mov
xlat
into
or
adc
scas
outsl
mov
rcrb
repz
sub
jns
js
mulb
pop
adc
jmp
je
inc
jb
xor
mov
mov
test
jb
xor
xor
xchg
cmp
jl
cmp
jbe
xchg
aam
test
movsb
in
sbb
jno
shrb
or
shrb
push
pop
inc
leave
shrb
dec
sbb
call
repz
lea
mov
push
movsb
mov
sub
jns
fldt
test
repnz
sub
jp
or
mov
pop
into
xor
sub
adc
mov
out
out
fistl
push
mov
sub
pop
dec
adc
icebp
mov
mov
je
aad
ror
enter
mov
push
and
push
mov
das
imul
mov
int
or
out
mov
mov
ja
dec
push
push
neg
das
repnz
sbb
jge
mov
test
cmpsl
sub
xchg
shlb
cmp
cli
ss
gs
mov
and
pop
fs
stos
dec
cs
dec
fiaddl
cld
scas
ret
movsb
pop
sub
sub
pop
add
add
lret
std
test
push
int
loope
movb
nop
cmpsl
mov
lods
loopne
sub
lds
pop
fadds
inc
lods
xchg
dec
test
movsb
mov
mov
jns
ret
outsb
push
mov
in
mov
cmp
pop
push
sub
cmp
pop
hlt
mov
cwtl
jb
cmpsb
or
cmp
and
arpl
jl
mov
ss
pushl
das
dec
fbld
repnz
jae
jno
mov
mov
adc
and
mov
lret
adc
out
fstl
adc
mov
pop
push
xor
inc
xor
inc
cmpl
inc
push
dec
add
in
dec
std
sbb
push
mov
mov
pop
out
pop
sahf
cmc
mov
add
cmp
out
sbb
dec
iret
or
faddp
or
mov
stc
outsl
or
iret
inc
aam
stc
mov
pop
cmp
lret
xchg
sub
cmp
cwtl
shrl
iret
ljmp
adc
inc
cmp
mov
pop
leave
push
adcl
int3
add
ljmp
pop
arpl
pop
lds
push
lret
dec
push
push
pop
add
ret
pop
cmp
leave
dec
mov
fidivrl
cmp
push
ret
pushl
or
mov
insl
nop
scas
je
xchg
ud2
test
aas
je
outsb
bound
xor
jbe
or
jo
inc
lret
popf
adc
aaa
xchg
pop
leave
xchg
call
mov
inc
mov
sti
mov
mov
sbb
pop
je
xchg
xchg
lea
dec
aas
or
out
mov
ret
scas
hlt
sbb
outsl
cmp
lock
rorb
cld
mov
fcoml
push
fsubr
push
sbb
clc
shll
out
push
aad
data16
adcl
inc
or
scas
aas
mov
dec
fildll
xor
mov
jmp
mov
rcll
imulb
sbb
xlat
pop
inc
jmp
lcall
sub
dec
outsb
mov
mov
loop
xor
sbb
clc
popf
adc
fcoms
sti
rcl
lock
je
add
jecxz
pop
cmc
daa
lret
mov
or
insb
and
pop
jge
outsb
jmp
aas
jmp
fcomps
jge
mov
dec
repz
jmp
adc
arpl
and
int3
jmp
inc
lea
je
mov
fdivrs
and
fabs
loopne
pop
cltd
daa
jle
mov
sarl
jle
cmc
sub
or
sti
and
push
stc
inc
std
mov
mov
sbb
pop
cmp
lods
lret
pop
or
dec
gs
cmp
or
daa
loop
iret
pushf
inc
dec
cmp
cmpl
push
mov
xchg
je
adc
pop
or
fstps
and
and
dec
jne
idivl
inc
sbb
mov
adc
push
dec
lods
adc
das
std
fsubl
ds
stc
and
lret
bound
mov
das
adc
push
push
inc
cmc
aas
add
dec
movsb
mov
sti
lret
mov
cmp
int3
jle
repz
lods
fiaddl
bound
loopne
inc
fsubrs
jl
or
fs
shll
and
mov
lret
mov
mov
adc
mov
aam
push
pop
fisubs
push
jns
lds
push
mov
faddl
pop
fisubs
les
and
testl
call
jle
fisubrs
pop
stos
out
pop
add
pop
and
nop
addr16
inc
fdivr
fnstenv
out
add
push
and
push
cmpsl
and
in
jno
gs
popa
mulb
insb
sbb
cmpsl
sbb
push
lahf
fisttpll
push
dec
arpl
mov
js
or
push
xlat
and
testl
mov
test
sbb
loop
sbb
mov
push
insl
sbb
xchg
inc
stos
dec
sbb
mov
jmp
icebp
loopne
jnp
cmp
pop
call
fwait
push
jg
loope
popa
in
scas
insl
cwtl
cmp
rorl
xor
jae
daa
cmpsl
mov
pop
dec
jnp
ljmp
and
push
jl
cmp
lahf
dec
cmpsb
mov
fwait
sbb
fucompp
mov
std
jb
xchg
fildl
dec
pop
test
clc
aaa
negl
xchg
sbb
mov
cmpb
push
jl
cmp
cld
sub
adc
cltd
mov
roll
or
stos
jge
mov
arpl
cld
aam
popf
cmp
into
fwait
pop
push
out
inc
pusha
inc
cmp
sub
cmp
aam
add
or
aas
mov
mov
jb
in
jns
dec
cmc
icebp
xlat
push
mov
popa
pop
lret
scas
xor
xchg
and
cli
cmp
loope
cli
adc
pop
stc
iret
cmpsl
fnsave
in
jnp
pop
mov
prefetch
jb
movsb
or
nop
sub
aas
dec
scas
jl
in
push
mov
or
mov
jb
xchg
and
xor
sbb
xchg
lea
dec
aad
decl
repz
and
mov
or
xor
subl
test
lods
std
sahf
push
movsb
fnstsw
pop
jae
add
dec
fisttps
xor
addr16
mov
mov
mov
mov
or
pusha
cmp
sub
ss
sbb
cmp
and
mov
or
lret
ljmp
popl
je
lock
inc
adc
les
clc
jb
out
pop
push
int3
push
cmp
shlb
push
aad
or
and
pop
shlb
lock
lret
leave
sbb
shrl
inc
cwtl
lock
mov
std
xlat
adc
fcoms
mov
fcom
mov
mov
mov
fs
xor
mov
js
mov
or
mov
bound
out
xor
nop
lock
in
jl
pop
mov
jb
jg
mov
mov
mov
jmp
shl
mov
ds
mov
ret
scas
adc
jne
adc
dec
scas
push
sbb
or
push
stc
or
out
cmp
jo
test
ljmp
and
lea
jnp
pop
mov
mov
aaa
dec
int
sahf
leave
or
int
cli
jae
outsb
fists
mov
dec
mov
pop
sub
jmp
push
imull
jecxz
ret
mov
sbb
inc
sarb
stos
adc
repz
mov
into
mov
pop
idivl
dec
sub
dec
and
loopne
sbb
mov
pop
xor
ss
sub
ret
fsubl
or
pop
filds
cmpsl
and
fs
dec
xchg
cmp
inc
adc
call
addr16
sbb
sbb
or
add
in
jbe
in
pop
mov
push
xor
xorl
pop
jno
mov
movsb
dec
aaa
jno
in
js
mov
jo
mov
sar
push
and
popa
cmp
pop
add
xchg
inc
xlat
push
adc
xor
adcl
cmpsl
inc
jp
and
mov
mov
adc
push
sbb
outsb
push
sbb
aam
inc
stos
lahf
and
fistpll
in
fxch
mov
xor
iret
outsl
cmpsl
inc
js
adc
lds
fs
imul
dec
icebp
inc
subb
add
imul
fsts
mov
add
iret
incl
push
imul
mov
and
inc
mov
jmp
cmpsl
and
inc
push
push
jns
lret
aaa
xchg
cld
in
pop
push
xchg
nop
es
mov
stos
pop
mov
mov
subw
mov
mov
sub
xchg
adc
push
mov
ss
into
out
cmp
imul
cmp
add
inc
in
mov
sub
loopne
push
fcomps
cmc
jmp
ljmp
lds
arpl
outsl
cmp
push
sbb
add
jnp
pop
fldenv
in
jb
sub
loopne
lea
xor
aas
push
mov
arpl
mov
or
xchg
push
adc
jae
dec
xchg
push
jle
or
inc
xor
test
sbb
jne
mov
dec
jmp
lahf
loop,pt
std
lahf
push
add
data16
pop
inc
sbb
rol
dec
icebp
pop
test
and
mov
xor
addl
daa
pop
add
inc
pushf
push
lds
inc
leave
push
sbb
test
scas
push
arpl
dec
dec
ret
inc
or
add
jno
insb
fsincos
push
fiaddl
jns
pusha
adc
sub
or
sbb
data16
cltd
xchg
lock
in
cmp
lcall
stos
dec
iret
je
inc
addl
ret
in
jns
scas
xor
add
test
add
and
rcll
and
pop
stos
stos
into
dec
pusha
fstl
pusha
inc
iret
cs
iret
mov
push
xchg
or
push
pop
in
js
ss
arpl
and
pop
dec
dec
mov
scas
xchg
call
lds
cmp
enter
inc
pusha
jno
jmp
or
adc
lds
push
mov
pop
nop
std
scas
xchg
add
pop
xchg
sub
pop
out
mov
mov
inc
fmull
outsb
xor
push
addr16
cmp
mov
shlb
lret
pop
daa
subl
ret
sub
cld
scas
imul
and
dec
pop
sub
ds
xor
divl
push
dec
mov
mov
xlat
icebp
mov
dec
add
inc
leave
fwait
mov
mov
sbb
inc
push
inc
nop
add
cmc
push
cwtl
ljmp
inc
popa
aam
and
add
mov
clc
xlat
aaa
aaa
ljmp
ja
bound
data16
pop
lds
lods
pop
push
dec
xor
xchg
lcall
and
mov
push
lret
stos
int
push
sub
sub
sub
sub
int
lock
std
fstl
test
in
sbb
out
jmp
stc
test
mov
insl
and
dec
movsl
mov
rorb
je
cmp
jg
inc
repz
and
pop
inc
xchg
push
mov
loope
loopne
into
xchg
movsl
mov
int3
sub
jb
cltd
pop
jle
rcr
sub
ret
sub
jno
xor
ret
mov
repnz
lahf
sahf
jno
outsl
and
sbb
nop
sbb
jns
pop
ljmp
loope
clc
mov
mov
mov
ret
add
fs
imul
test
shrb
setae
and
push
in
push
pop
mov
push
popa
push
dec
mov
mov
add
mov
and
jge
mov
repz
cmpsb
lret
dec
xorl
outsb
mov
xor
add
mov
push
push
sub
xchg
adc
xchg
inc
mov
popf
inc
mov
out
mov
gs
push
xor
data16
and
test
mov
xor
cmp
lret
sarb
int
add
inc
pop
cmp
sub
ret
xchg
sahf
push
loop
in
aas
push
scas
or
mov
pop
xlat
test
jmp
into
lret
add
mov
scas
sbb
inc
xchg
shll
xchg
sbb
stos
arpl
add
add
xchg
dec
xlat
cmp
jmpw
mov
push
mov
pop
push
ret
fstl
mov
adc
rorb
pop
imul
fadd
pusha
outsl
cwtl
pop
add
xor
sub
cld
cmp
pop
pop
inc
mov
jno
add
repnz
shll
enter
in
or
dec
sbbl
cmp
mov
fcomps
sub
add
sar
add
outsl
mov
push
stos
shrb
outsb
ficomps
xchg
ret
adc
xchg
xor
imul
je
adc
or
xor
push
inc
icebp
mov
jl
cmp
inc
inc
pop
push
bound
xor
or
sub
ret
repz
dec
xchg
jbe
push
sbb
jbe
int3
mov
jae
cs
mov
mov
push
xor
sbb
ret
or
adc
pop
pop
xor
mov
cs
popf
xchg
dec
lahf
rclb
lods
dec
mov
jecxz
and
pop
test
in
jbe
adc
jo
jno
xchg
scas
xchg
cwtl
test
sub
rorl
inc
or
pushf
jl
sub
out
lods
aad
adc
dec
jns
ror
sbb
cmp
push
loope
add
or
mov
call
ljmp
dec
fsubr
sahf
xor
mov
pop
push
int3
cwtl
jne
outsl
pop
sbb
daa
xchg
mov
mov
lcall
pop
cmp
out
rcrl
cmp
lods
fsubrs
xchg
sub
dec
dec
jne
mov
add
xchg
xchg
cmp
out
jne
das
cmp
lret
movsb
fsubrl
sti
cld
sub
mov
xor
add
stos
shrl
rclb
dec
xchg
cs
out
inc
movsb
mov
inc
dec
pop
andb
imul
ljmp
icebp
je
inc
push
test
adc
jl
inc
add
out
xor
arpl
les
fdivl
rcrb
jbe
in
clc
cmp
mov
or
xor
imul
repz
jne
movl
and
cmp
loope
mov
movsl
insl
mov
ljmp
enter
add
loope
mov
loope
movsl
push
es
stos
pop
or
mov
add
adc
loop
mov
shl
pop
addr16
lods
leave
loope
cmp
fildll
cli
add
sub
mov
add
pushf
mov
push
xchg
out
mov
add
mov
push
test
cmpsb
popf
mov
xchg
idivb
lahf
jnp
xor
push
jno
popf
mov
xlat
jae
xchg
mov
popa
mov
sbb
rorb
loope
mov
sbb
inc
add
aas
xchg
add
sub
lcall
sbb
test
ljmp
mov
nop
push
mov
mov
imul
xor
pop
incb
je
xor
jg
sub
aad
fisttpll
neg
testl
mov
shlb
sub
bound
mov
cwtl
icebp
adc
popa
cld
jecxz
mov
mov
pop
aad
add
scas
jns
addr16
cltd
jno
or
ds
mov
inc
insb
push
dec
gs
jmp
inc
mov
add
mov
and
lret
aaa
sub
shrb
xor
mov
rorb
jecxz
adc
int3
mov
xchg
fs
shrb
push
mov
xchg
cltd
or
ret
jae
xchg
bound
jo
cld
jmp
fwait
add
pusha
das
pop
shll
cmp
jb
hlt
sbb
sti
xchg
add
fsubs
xchg
movsl
push
aas
mov
loopne
dec
fwait
fs
push
pushl
mov
aaa
adc
das
rolb
mov
adc
mov
push
test
and
adc
mov
push
push
je
cmpsb
or
jp
les
int3
jp
std
lods
pop
loopne
xor
rorl
mov
adc
dec
adc
lods
lods
out
xchg
mov
xchg
addr16
dec
fisubrl
mov
std
inc
xchg
push
push
nop
cmp
mov
inc
aaa
imul
scas
mov
jge
ficomps
inc
push
ljmp
sbb
stos
pop
mov
sub
dec
jmp
dec
pop
jl
cwtl
loope
dec
mov
ljmp
jle
and
outsl
xchg
add
sbb
mov
std
pop
inc
sub
fstps
inc
push
out
sti
add
mov
test
adc
push
sbb
movsb
ja
sbb
cmp
mov
mov
push
mov
cmp
mov
inc
push
adc
loop
mov
mov
fldl
cmpsl
sub
dec
mov
negl
negb
fdiv
mov
rcl
mov
mov
push
and
loop
adc
lds
add
fidivs
inc
and
popa
mov
xor
jecxz
cmp
sahf
mov
mov
ror
imul
in
or
push
and
lds
loope
add
mov
ljmp
arpl
xchg
negl
inc
shl
int
sbb
fstl
hlt
inc
inc
ret
lds
rcrb
mov
push
flds
stos
jmp
inc
inc
adc
adc
into
push
inc
mov
pop
fstpt
sub
shrl
out
shll
mov
xor
adc
mov
lods
dec
dec
sbbb
mov
scas
imul
xor
inc
or
aas
clc
nop
dec
scas
xor
aad
hlt
mov
cli
rorb
ss
out
fmulp
xor
pop
mov
adc
mov
dec
pusha
cli
mov
das
mov
ja
mov
sbb
push
aam
mov
xchg
lahf
mov
add
in
mov
lea
test
dec
loopne
ds
sub
sbb
pcmpeqd
fs
jno
or
mov
pop
imul
inc
xchg
xchg
mov
loop
loopne
dec
rcrb
sahf
shll
cltd
mov
shrb
stc
adc
mov
push
mov
cmpb
cld
or
push
jnp
pushf
mov
fstpt
pop
data16
loope
dec
jp
cld
cmp
ja
repnz
jmp
outsl
cwtl
push
add
jbe
ret
leave
adc
add
fimuls
mov
mov
nop
pop
mov
mov
mov
sbb
xchg
and
mov
sub
bound
inc
inc
sbb
or
or
notb
mov
and
int
mov
mov
std
jns
mov
je
xchg
jecxz
cmp
or
dec
jbe
loopne,pn
inc
in
lods
sub
mov
mov
sub
sbb
imul
pop
sahf
push
sbb
cmp
add
cmp
out
push
int3
ja
xchg
mov
inc
lcall
fnstsw
sarl
dec
inc
es
inc
ret
adc
mov
inc
test
sti
and
push
addb
pop
or
pusha
pop
cmp
stc
popa
mov
orb
sub
loopne
mov
jge
popl
add
ret
jg
mov
rdmsr
and
outsl
pop
popa
mov
xor
lahf
fsub
ds
popf
cmc
lahf
decl
adc
setnp
inc
rorl
fcomi
push
push
dec
sbb
rorl
icebp
jl
mov
leave
sub
jnp
push
or
push
pause
in
mov
cltd
cmc
mov
popf
out
push
ds
or
add
push
push
adc
sti
sbb
cwtl
push
push
mov
mov
int
sbb
push
mov
push
xlat
stos
push
push
and
sbb
xchg
pop
pushf
xor
int
pop
jl
ss
push
into
push
fdivrl
int
lods
and
in
or
rcl
sub
ds
lds
jnp
testl
sbb
dec
mov
lds
dec
in
mov
push
test
loop
add
mov
lods
mov
rcll
cwtl
fbld
std
into
jle
xchg
bound
ficoml
lock
push
frstor
xor
mov
addr16
sbb
shl
sbb
ja
stos
ljmp
xchg
enter
jl
cwtl
or
rclb
adc
addr16
pop
and
sub
rcll
mov
mov
enter
mov
push
push
mov
sbb
mov
shlb
adc
inc
into
lock
aad
sbb
clc
inc
sub
loopne
jl
imul
dec
cwtl
sub
xlat
sub
xchg
pop
test
fbld
jl
loop
or
in
jmp
cmp
popf
bound
cmp
xchg
cmpsb
xchg
lods
aas
xor
push
imul
test
adc
daa
cltd
push
inc
loopne
repnz
jecxz
xor
jns
add
dec
sbb
cld
sbb
xchg
out
xchg
jge
add
or
in
push
mov
sti
adc
jg
fucomip
jp
ficompl
mov
cmp
dec
push
loop
mov
xchg
pop
xor
out
jo
movsl
in
je
or
lods
jle
mov
subb
dec
rcrl
insl
js
cmp
push
hlt
mov
mov
inc
jl
out
sbb
add
xchg
sbbl
mov
mov
sub
out
popa
cmp
mov
leave
nop
pushf
pop
es
push
insl
pop
in
and
or
dec
inc
das
and
mov
add
jge
addr16
add
push
add
cltd
mov
push
in
inc
insl
pusha
popa
fbld
xchg
mov
adc
sti
push
inc
jp
repnz
inc
mov
in
js
mov
push
imull
mov
lds
jbe
adc
lods
les
pop
pop
enter
fwait
scas
sbb
stos
lods
push
scas
movsb
mov
xchg
scas
and
out
add
aaa
data16
lea
dec
in
lret
cltd
sub
mov
lea
gs
lcall
adc
mov
arpl
add
icebp
in
nop
mov
aam
test
mov
xor
in
sbb
xchg
inc
es
inc
fwait
dec
inc
jo
fisubrl
imul
fcoms
cmp
inc
nop
mov
mov
popa
jge
icebp
mov
sub
movsl
xchg
sbb
iret
clc
cs
inc
popa
sbb
sbb
jbe
mov
sub
dec
aad
mov
out
out
or
jle
cli
and
clc
push
xchg
fstpl
add
jnp
inc
les
xchg
cmp
sub
xchg
cmp
cmp
add
cmpsl
inc
nop
fcompl
jg
fucomi
int3
inc
push
cmpsb
xchg
push
movsl
push
das
arpl
fcmovu
ja
stos
mov
cmp
jmp
cmc
and
aaa
test
in
outsb
enter
je
cmp
or
mov
jo
bound
push
pop
lds
dec
popl
cwtl
xchg
push
ja
hlt
rorl
in
push
jp
cmpsb
xlat
fisttpll
xchg
add
outsl
jle
enter
addb
shrb
xor
adc
jnp
xchg
adc
dec
sub
sbb
push
sub
hlt
inc
adcl
inc
jge
and
jecxz
imul
sbb
dec
subl
setbe
push
adc
xlat
cmp
movsb
cmc
cmpsl
mov
movsl
push
xor
cmp
dec
xor
sub
inc
hlt
out
test
jns
in
stc
scas
popf
mov
dec
pusha
stc
sub
shl
mov
pop
push
or
fldt
leave
cmp
jecxz
lret
out
orl
push
mov
jae
pop
adc
push
es
jmp
pop
dec
and
dec
mov
mov
frstor
xchg
pop
fbld
pop
inc
mov
pop
out
inc
subl
scas
dec
mov
sub
imul
push
adc
jmp
movsl
lahf
nop
push
sub
loope
adc
ds
push
inc
fstpl
stos
sub
sub
inc
xchg
or
faddp
push
outsl
pop
cwtl
inc
std
push
inc
movsb
or
mov
popf
scas
in
outsl
xchg
xor
add
mov
dec
dec
pop
mov
mov
repnz
push
xchg
pop
mov
mov
loope
dec
mov
mov
mov
lods
btr
shrl
repz
cmpsl
xchg
push
imul
push
sahf
cmp
cmp
xor
in
repz
mov
or
pop
pop
fs
jno
jbe
xlat
inc
and
jnp
stos
aad
add
ja
mov
stos
ret
int3
push
mov
out
pop
dec
adc
rorb
sti
mov
pop
mov
inc
mov
mov
leave
mov
push
cmp
inc
add
push
xchg
sbb
shrl
cmp
insl
mov
pop
xchg
mov
sbb
add
testl
push
mov
lret
fwait
loop
repz
bswap
iret
jle
dec
push
aas
pop
idivl
inc
mov
push
jbe
push
push
or
adc
or
xchg
mov
push
sbb
mov
aad
gs
xchg
inc
dec
inc
aas
and
stc
test
jno
ss
loopne
jae
enter
ss
push
mov
mov
inc
jo
rorb
or
sbb
mov
xchg
insb
jl
dec
ja
sub
fsubl
bound
cmp
push
inc
dec
add
dec
mov
and
xor
adc
inc
push
xchg
mov
dec
or
insb
stos
repz
shlb
outsl
jg
sbb
int3
xchg
xchg
jne
xchg
pushf
adc
sbb
ret
sbb
rcrb
in
flds
gs
cmp
pop
stc
push
mov
and
mov
pop
pop
add
sub
adc
popf
push
inc
daa
sub
mov
xchg
jb
jns
xorb
sub
mov
or
arpl
call
movsb
sbb
and
sub
jle
jmp
xchg
std
xchg
pop
inc
loop
or
ss
adc
xor
sahf
sti
cmpsb
cmp
mov
movsb
cmp
mov
jne
popa
lahf
sbb
adcb
adc
ss
mov
sysenter
mov
push
ss
inc
pop
sbb
cli
add
inc
inc
push
pop
cmp
rcrl
or
or
xchg
int
xorl
rcrb
xor
es
les
xchg
dec
pop
mov
jge
sub
mov
or
lahf
jae
push
sbb
mov
icebp
mov
and
adc
or
in
or
je
sbb
mov
and
iret
xchg
push
xchg
xchg
flds
mov
pop
push
jnp
imul
adc
add
jp
mov
fwait
jg
addl
mov
mov
adc
int3
lcall
push
scas
pop
mov
fwait
das
adc
dec
push
cmp
fcmovbe
jecxz
sbb
mov
lcall
shrl
push
sbb
inc
movsb
mov
das
mov
adc
jp
xor
add
push
sub
add
outsb
push
scas
mov
dec
xor
dec
in
cmpl
push
mov
inc
jne
inc
adc
inc
push
inc
nop
sbb
xchg
pop
cmp
std
lods
jbe
mov
mov
cld
pusha
pop
loopne
sbb
jecxz
shlb
insl
fwait
pop
mov
icebp
cmc
mov
in
dec
push
sahf
mov
and
ds
mov
add
popl
outsb
idiv
std
jle
mov
jl
mov
je
cmpsb
imul
ret
repz
test
dec
jnp
cmp
push
xor
sub
push
push
repz
ret
mov
lahf
icebp
adc
les
push
test
cmp
push
adc
mov
lcall
test
icebp
fs
xorl
ds
test
lds
cmc
and
mov
std
in
sbb
push
cwtl
ja
popf
push
rcrl
mov
cmp
inc
mov
sbb
jecxz
pop
inc
adc
push
ljmp
push
fsubr
fldt
adc
addr16
lret
add
ffree
sti
jno
aam
or
pop
addr16
fldenv
jae
mov
nop
xchg
add
fucom
enter
enter
xchg
sbb
mov
lds
xor
pop
mov
lock
ds
pop
hlt
in
icebp
and
pop
jo
nop
mov
push
sub
xor
xchg
push
daa
mov
repz
push
jno
scas
jl
jl
mov
filds
push
cs
push
and
inc
pop
push
cmp
rclb
and
pop
push
push
xlat
inc
enter
in
pop
jns
mov
sub
ret
sub
jp
mov
xor
push
in
loope
xchg
xor
out
fisubrs
popa
out
mov
xchg
out
cmp
pop
jns
xor
jnp
mov
pop
push
test
rcrb
dec
outsb
cltd
rolb
add
push
ret
mov
sar
shrl
adc
or
mov
mov
stc
sbb
and
jp
ja
popa
inc
lds
pop
andl
mov
cmp
sub
sbb
jb
inc
or
push
outsl
jns
in
cs
test
ss
aaa
push
sbb
int
jg
ds
shrb
ret
bound
hlt
out
cmp
addr16
inc
cmc
sbb
add
aas
cmp
aam
jl
iret
fsts
icebp
mov
clc
mov
jge
mov
mov
ret
loopne
inc
mov
jge
andb
jo
xadd
dec
pop
fidivl
xor
pop
cmp
dec
bound
cwtl
mov
ret
daa
jp
fdivs
cmpsb
out
or
call
adc
jge
cmp
dec
popf
imul
sub
xor
sub
mov
rcll
stos
dec
mov
movsb
lret
shl
sbb
je
cld
cmp
mov
or
shr
xor
xlat
push
xchg
mov
pushw
adc
dec
push
aad
js
sub
and
pop
push
pop
hlt
adc
mov
int
jecxz
aam
lock
adc
dec
lea
or
sbb
ret
enter
fistpll
jle
inc
int
call
sbb
aad
push
pop
xchg
mov
ss
fs
movsb
fwait
mov
pop
mov
stos
aad
stos
or
jnp
push
aaa
jnp
lret
dec
in
inc
int
or
int3
mov
lret
xor
lret
inc
test
pusha
add
rorl
mov
fucomi
dec
mov
mov
push
dec
jnp
rcl
ljmp
loope
dec
stos
push
stos
hlt
mov
mov
hlt
cmp
fsubs
inc
lcall
int3
add
pusha
xchg
push
ret
sbb
xorb
push
pop
repnz
cltd
xchg
lret
outsb
loop
cmpsl
pop
jmp
mov
jg
stc
xchg
imul
mov
push
das
bound
movsl
fs
pusha
adc
int
subl
mov
sub
inc
pop
mov
fsubrl
fiaddl
mov
jno
lcall
addr16
mov
data16
sbb
dec
lcall
in
in
scas
icebp
jp
pop
inc
mov
lahf
icebp
cmpsl
add
popf
mov
mov
cmp
mov
push
les
mov
or
jg
dec
leave
lret
jb
adc
and
cmp
pop
cli
xor
cwtl
or
fisttpll
in
testl
cmp
cwtl
cwtl
scas
xor
xchg
mov
lcall
xchg
lret
nop
rcll
jl
test
out
ret
sub
add
mov
push
push
mov
xor
int
and
sbb
push
stos
fistl
ffreep
aaa
movsl
or
mov
add
add
push
sub
cltd
cld
dec
pop
inc
das
sbb
add
in
rclb
bound
xchg
mov
xchg
add
loope
dec
push
outsb
loop
ret
fbstp
xor
jns
cld
call
pop
or
xor
cs
sbb
cld
add
aaa
movl
pushf
dec
fistpl
or
out
mov
lret
mov
mov
and
jnp
ds
or
daa
icebp
lcall
or
fimull
mov
xchg
sub
ja
jo
popf
in
and
sbb
ret
fcom
mov
pop
popa
rcl
test
jns
pop
cli
mov
jmp
hlt
sbb
sub
mov
cld
mov
inc
dec
adc
sti
lret
and
fistpl
fimull
mov
test
add
mov
lock
xchg
shrl
lea
push
fsubl
push
test
pop
cmp
and
scas
or
lret
mov
sub
pop
jecxz
and
repz
bound
test
jecxz
adc
ret
pshufw
xchg
stos
shll
xor
cltd
fsubrl
scas
lods
inc
mov
push
lahf
popf
in
mov
pop
adc
stos
ret
pop
ds
in
xchg
add
and
inc
cwtl
pop
push
sub
mov
mov
jb
and
mov
aad
leave
and
outsl
hlt
shr
xorb
cltd
icebp
xor
fsts
mov
lds
add
shll
lods
sbb
fsubrs
loop
and
out
shr
jnp
cmp
cmc
add
and
or
mov
or
cmp
ficomps
imul
mov
jle
sbb
cli
mov
leave
jnp
shr
enter
jns
sub
cmp
iret
imul
add
test
add
sub
cmpl
lret
out
mov
mov
jle
xchg
adc
adc
inc
xchg
inc
inc
adc
lahf
not
and
sub
pop
xor
rclb
testb
call
add
mov
mov
push
mov
in
xchg
inc
mov
xchg
dec
aam
add
sub
push
mov
adc
sub
int3
xor
arpl
push
in
insb
push
pop
cs
add
jmp
insl
jecxz
and
xchg
push
mov
test
imul
cmp
dec
or
mov
jno
sub
push
addl
xlat
shrl
jg
add
ror
dec
cs
in
loopne
cmp
add
xchg
sbb
or
cmpsb
fbld
xchg
xchg
nop
dec
push
sbb
xor
cld
cmc
call
push
mov
push
adc
push
ret
inc
jmp
push
inc
fists
mov
dec
hlt
pop
jo
dec
sbb
mov
xchg
dec
mov
jmp
out
sti
cwtl
sub
repnz
jecxz
int
inc
cmp
sti
pop
mov
lcall
or
jno
mov
ljmp
cltd
and
bound
mov
mov
xchg
mov
push
pop
dec
out
movsl
int
cmp
cmp
std
ss
mov
rcll
cmp
xor
hlt
or
out
xchg
push
shlb
fs
dec
push
pop
inc
imul
das
mov
sub
push
mov
push
jl
xchg
mov
jg
xchg
mull
push
iret
inc
or
dec
addr16
xor
push
pop
sahf
cmpsl
mov
push
inc
jae
pop
jle
lods
lret
xchg
cli
push
mov
and
pop
mov
push
call
or
loop
data16
fbstp
stos
lods
adc
push
sbb
or
mov
lea
int3
push
repnz
pop
ljmp
dec
lcall
out
nop
shlb
out
mov
jge
push
lock
cmc
arpl
xchg
std
add
aad
popa
add
les
inc
scas
cmpsl
inc
add
sbb
cmp
scas
outsl
adc
adc
mov
stc
or
in
outsb
sbb
and
int3
and
cmpsb
cs
rcll
into
inc
clc
fisubrl
add
pop
push
xor
aam
sbb
mov
sub
insb
pop
sbb
adc
xorb
dec
or
outsl
fcompl
bound
pop
push
idivb
push
outsl
in
jmp
sti
sub
or
ja
out
sbbb
out
lret
xchg
cwtl
rorl
jle
pop
test
popf
jne
push
push
sub
mov
add
sar
aad
add
ja
mov
test
push
mov
mov
push
add
fptan
push
or
sub
push
cmc
rorl
xchg
aad
sub
movsb
push
xor
sub
xor
jle
stos
jge
and
inc
adc
hlt
insl
int3
adc
inc
sti
js
cmpb
addl
cs
insl
aaa
mov
push
inc
test
js
aaa
mov
outsb
jecxz
je
loope
inc
xor
lock
push
xor
in
stc
sbb
arpl
test
push
inc
mov
lahf
mov
dec
rorl
and
adc
outsl
rcrl
dec
call
push
push
out
sub
push
and
push
adc
subb
faddl
aam
lock
add
ljmp
sub
jbe
or
inc
loop
in
in
xchg
lahf
js
movsb
in
aas
and
mov
dec
jecxz
loopne
and
aas
insl
popa
xchg
insl
push
pop
mov
cmp
sub
outsl
adc
and
adc
insl
jnp
fisubl
in
test
xchg
ret
ret
ficompl
divb
sbb
ficoml
out
jge
repz
mov
sbb
ja
mov
out
xor
mov
fsts
cli
fcomp
lret
and
ja
cwtl
int3
push
push
xor
aaa
pushf
ret
cltd
pcmpgtb
subb
imul
or
cmp
mov
aas
clc
out
dec
jbe
pop
std
loop
in
sbb
ret
jg
mov
and
orb
js
lret
xorb
shlb
ds
lea
mov
dec
adc
pop
cmp
xchg
lret
nop
add
mov
xor
inc
jg
or
out
aam
fdivrl
sub
and
xlat
mov
mov
lock
int3
lods
xor
repz
lds
push
jmp
lahf
xchg
lds
and
test
test
in
pop
aad
movsl
prefetchw
ss
lds
test
lret
idivl
mov
sbb
mov
pop
xor
fsubrl
push
fcoms
adc
add
sbb
ja
add
pusha
ret
and
test
sub
push
xor
insl
out
xor
mov
fldt
aad
and
adc
push
movsl
or
xchg
inc
popa
loop
enter
leave
in
shlb
stos
mov
mov
dec
and
test
loope
je
jnp
mov
sub
dec
pop
shll
dec
lods
rol
xorb
jl
xor
mov
mov
jge
or
add
push
inc
mov
aad
repz
ljmp
aam
nop
and
xchg
out
js
dec
jae
cmpsl
fildll
inc
aas
inc
movsl
inc
dec
outsl
cmp
xchg
jle
scas
cli
pop
cwtl
mov
mov
jno
pop
sub
outsl
test
test
outsl
cmc
notl
jne
adc
leave
fwait
icebp
aas
popa
je
push
lea
mov
divb
fidivs
jb
mov
jge
in
xchg
push
dec
arpl
movb
aam
mov
add
dec
or
std
cmpsb
mov
shlb
fcoms
inc
adc
les
xchg
scas
push
or
xchg
fimuls
sbb
scas
out
cmp
dec
mov
enter
sub
shl
push
xchg
std
jae
dec
push
adc
lcall
dec
xor
adcb
sub
daa
repz
out
mov
and
mov
dec
outsb
gs
or
clc
jle
mov
cmc
lea
andl
pusha
sub
in
inc
or
cmp
leave
testl
cli
add
inc
mov
cmp
and
lock
insl
ss
push
std
pop
mov
repnz
dec
mov
cmpsb
repz
test
int3
lds
push
mov
in
dec
loop
add
repnz
pop
xchg
stc
mov
fincstp
fwait
cmp
into
sbb
jp
mov
mov
push
repz
cmp
movsb
xchg
jno
pop
inc
push
jnp
lea
sub
enter
sbb
pop
mov
pop
stc
add
pop
sub
pop
or
cli
adc
outsl
add
xor
xchg
loopne
outsl
arpl
es
cmp
test
jne
inc
sub
push
inc
dec
enter
mov
scas
fsubr
push
mov
adc
lret
dec
loop
push
sbb
xor
popa
adc
inc
push
adc
mov
dec
cli
in
jns
test
inc
inc
lret
sub
mov
aam
inc
sbb
repz
sbb
cmpsb
xchg
cmp
fwait
dec
shrl
jb
movb
shrl
pop
ljmp
xchg
add
fistl
mov
xor
int
push
int
test
jmp
xor
call
jl
pop
jne
add
movsl
jb
mov
aas
adc
cmp
jae
dec
inc
cmp
jo
dec
dec
int3
sarl
popf
inc
add
ret
push
add
fdivl
movsl
sahf
and
pop
sbb
pop
cmpl
mov
mov
js
shrl
jbe
push
out
leave
push
repz
negb
out
pop
iret
lea
out
icebp
push
and
mov
push
cmp
pop
enter
mov
shr
and
and
pop
repz
ret
bound
adcb
es
addr16
stc
push
popf
es
adc
xor
movsb
rclb
ljmp
fdivrs
in
loopne
xor
js
mov
xchg
jnp
and
gs
pop
fidivs
pop
sbb
inc
imul
gs
cli
jne
push
movsb
mov
mov
and
add
stc
dec
xchg
rolb
or
sub
mov
out
jmp
notb
mov
aad
js
aam
repnz
rolb
rcrb
dec
inc
fdivrl
or
pop
cmpsb
stos
jne
mov
mov
shrl
int3
push
cld
inc
ss
aaa
sahf
stos
fs
pop
aas
adc
lods
sub
push
bound
push
shlb
pop
push
push
mov
dec
loopne
ja
inc
or
hlt
pop
jno
scas
fcomps
clc
cs
arpl
aas
aam
pop
mov
shrb
fisubs
lea
enter
and
sbb
mov
cmp
pop
mov
xchg
lahf
fmuls
pop
jmp
pop
mov
jg
arpl
mov
repnz
fcmovbe
fs
xchg
pop
scas
ret
out
mov
test
iret
loope
jbe
mov
test
mov
dec
pop
je
jbe
icebp
jmp
xor
sbb
xor
jmp
test
mov
pop
push
sbb
mov
js
xor
jno
or
ljmp
push
scas
stos
and
or
pop
lods
icebp
stc
push
stc
ret
lods
jge
jne
fsubrl
xor
lock
push
dec
xchg
sub
lods
jne
sub
mov
outsb
push
sub
xchg
cld
mov
xchg
test
xor
repz
rorb
scas
sbb
test
cmp
mov
add
jae
push
sti
sti
jecxz
sub
jae
movsl
insb
mov
fbstp
loope
xor
aad
lahf
mov
mov
in
mov
and
outsb
mov
cli
jo
insb
pushf
mov
xchg
jmp
and
aaa
mov
lods
mov
jge
in
mov
inc
lock
cltd
or
jp
loopne
cld
cmp
je
das
xchg
mov
sub
cmpsl
adc
fwait
aaa
in
test
fistpl
mulb
loopne
pop
dec
movsb
adc
arpl
jns
sbb
pop
enter
jnp
pop
push
movsb
cmp
push
leave
fildl
mov
or
movsl
push
stos
cmc
loope
leave
pushf
mov
push
lahf
movsl
int3
xchg
das
or
test
mov
jne
mul
fistps
fsts
lea
cli
push
push
xchg
mov
insl
addr16
and
scas
lods
adc
add
xchg
test
sub
xor
jnp
jl
test
ret
pop
lret
jne
cmpl
xorl
push
cmpsl
mov
or
and
leave
sbb
mov
or
add
movsb
cmp
cmp
jmp
xchg
dec
jecxz
and
inc
imul
pushf
jno
xor
mov
imul
fldl
xchg
sub
mov
out
stos
sub
add
xchg
pop
jl
lcall
out
sahf
or
jmp
hlt
aas
in
adc
mov
in
in
repnz
mov
cmp
cmp
in
jmp
mov
and
or
push
xor
nop
add
or
test
inc
lahf
int
mov
xchg
les
test
pinsrw
dec
xchg
arpl
cmpsb
inc
mov
lea
fnstsw
and
or
rclb
inc
out
add
sbb
cltd
mov
jle
std
fdivs
pop
mov
shll
jecxz
lret
imul
ret
xor
in
clc
inc
jecxz
add
test
mov
cld
call
cwtl
inc
pushf
xchg
dec
out
push
or
dec
add
add
inc
add
jle
out
movsl
adc
movsl
dec
aad
pop
ds
cmc
fstpl
hlt
mov
outsl
push
mov
sbb
pop
test
cmpsb
out
xchg
xchg
sub
and
dec
xchg
push
imul
mov
imul
gs
aas
or
sbb
jno
mov
iret
pusha
jge
cmc
pop
adc
loop
and
lcall
xor
dec
or
fs
mov
xchg
cmp
and
cld
fimull
xor
cs
pop
push
lahf
xor
jg
inc
mov
subb
shrl
mov
jo
adc
add
mov
sahf
enter
inc
jo
inc
sub
lcall
in
jmp
mov
ss
xor
mov
pop
je
cmpsb
or
shll
scas
lock
outsb
push
imul
mov
xchg
out
pop
lahf
mov
cs
inc
jp
mov
stos
dec
rorb
sbb
add
mov
repz
xchg
test
push
out
std
lods
xor
inc
loope
pushl
xchg
push
jne
jl
js
mov
mov
adc
stos
mov
adc
inc
fwait
or
adc
lods
or
fdivl
aam
insl
mov
sub
sbb
lock
icebp
add
cmpsl
imul
std
mov
andl
cs
inc
cs
mov
add
or
inc
rolb
imul
fcomps
test
push
mov
addb
loope
int
lcall
stos
sbb
push
call
inc
adc
or
push
out
push
dec
andl
std
sbb
mov
push
cmpsl
outsl
leave
xor
imul
pop
loope
hlt
lcall
sbb
push
add
lods
ret
jecxz
ret
jp
jnp
push
addr16
outsl
data16
lahf
mov
cmpsl
ud0
in
push
adc
in
xor
jl
add
and
mov
test
xchg
inc
cmpsb
or
stos
or
mov
mov
mov
int3
inc
cmp
sarl
mov
stos
mov
testb
cmpsw
jg
add
pop
push
int3
iret
sar
push
cmc
notb
mov
sub
xlat
daa
vfrczss
sbb
je
fdivs
fstl
roll
gs
add
jne
dec
stos
push
cmp
mov
into
repnz
out
sbb
xchg
adc
sbb
xchg
xor
and
mov
or
cmp
loop
fistps
pop
out
mov
pop
push
in
push
cwtl
out
setle
mov
add
xor
pop
push
cmpsl
or
jg
xchg
test
stos
dec
int
adc
lahf
cmp
loop
xchg
mov
out
or
push
int
imul
sbb
cmp
sti
fisubs
sub
sbb
xchg
es
xchg
xchg
mov
adc
cld
cmp
lods
xlat
dec
out
or
mov
in
sahf
or
movsb
cmp
rorb
mov
hlt
add
adc
outsl
xor
int
aam
and
in
je
and
stos
fmull
lds
stos
rorb
lahf
mov
push
and
jno
or
cli
lret
stc
push
xchg
pop
sbb
ficomps
dec
and
add
and
test
xchg
enter
inc
imul
cmpsl
or
ret
lahf
push
mov
sbb
out
xor
aam
jno
stos
jmp
dec
les
dec
test
or
ficomps
add
das
sti
cmp
shrl
pushl
aas
in
repz
push
or
inc
cmp
iret
fidivl
out
clc
fcmovb
mov
xor
bound
int3
addr16
test
sub
rorb
je
clc
inc
adc
aas
orb
mov
cmpsl
add
add
inc
repz
arpl
loop
icebp
adc
pop
cmpsb
push
fistpll
mov
push
imul
or
insl
cmc
fistl
mov
mov
mov
jne
cli
jo
push
ljmp
inc
jle
push
int3
popa
mul
pop
dec
cltd
or
xchg
or
inc
dec
xlat
mov
test
mov
xor
mov
push
test
pop
sbb
xor
or
gs
adc
mov
rorb
popf
imul
jge
jl
stc
fwait
xor
lahf
test
mov
lret
and
scas
out
mov
sarb
psubusb
inc
popa
andl
movsl
mov
rorl
ss
hlt
adc
cvttps2pi
rol
xchg
mov
fistps
xchg
mov
fimuls
or
nop
push
lods
sbb
xchg
cmpsb
adc
pop
sub
cmc
mov
lcall
cmp
cmpsl
ja
ret
sti
adc
sub
xchg
dec
ss
fs
mov
test
jne
sbb
mov
les
leave
lahf
mov
xorb
mov
out
sub
shrl
loope
mov
xchg
dec
sub
jae
push
movsl
in
xchg
fildl
sahf
inc
iret
pop
inc
dec
imulb
fwait
mov
cltd
pop
popa
repnz
aam
sbb
rorl
pop
push
fucom
cmp
sub
je
inc
mov
jb
sti
push
sub
adc
cmp
jmp
mov
pop
jb
rcr
cmpl
mov
aaa
mov
cmp
jge
test
cmp
mov
or
inc
mov
adc
repz
stc
add
push
pop
inc
mov
dec
jns
shrl
add
pop
or
push
sbb
fldcw
lods
jno
pop
icebp
dec
fisubs
mov
idivl
leave
sub
lret
leave
addl
fabs
test
sbbl
jo
mov
in
setns
popa
and
mov
in
fildl
pop
mov
mov
pushf
adc
iret
fsubrp
inc
cmp
outsb
or
jnp
dec
sbb
ja
pop
in
mov
rclb
sbb
lea
jge
lea
adc
sub
lcall
leave
push
stc
mov
out
data16
fst
pop
inc
popa
cmpsl
mov
push
dec
cmpsl
cmpb
sub
adc
call
hlt
xchg
mov
jge
xchg
pop
sub
and
push
leave
cmc
std
ja
mov
ret
cld
push
mov
adc
mov
pop
ret
xor
mov
jne
lret
dec
ljmp
dec
fimuls
adc
fnsave
dec
and
idivb
pop
repz
ret
cmp
xchg
cmp
js
aam
mov
out
mov
fucom
inc
mov
pop
xor
movsl
inc
in
lea
inc
mov
pushl
outsl
and
cmpsl
outsl
scas
pop
ss
je
imul
xchg
aaa
jecxz
jnp
sub
dec
outsb
pop
movsb
adc
ljmp
std
mov
cs
repnz
loope
dec
js
sbb
sahf
adc
adc
lret
aas
pop
inc
mov
dec
mov
ljmp
cmovp
mov
stc
mov
shl
inc
sbb
in
adc
jo
popa
pop
xchg
mov
mov
stos
ljmp
cmp
popa
lcall
lcall
adc
je
in
inc
aad
hlt
cltd
outsl
push
mov
sbb
sub
ss
xchg
nop
cmp
push
outsb
add
xor
push
adc
rol
xchg
arpl
xlat
adc
xlat
fildll
xor
xor
jb
push
cmp
pop
sbb
insb
xchg
out
movsl
push
mov
pop
loopne
cmp
mov
stos
dec
mov
and
fldt
mov
xchg
mov
xor
insl
roll
imulb
cltd
mov
movsl
data16
jbe
pop
sub
push
xchg
sbbl
sbb
call
shrl
mov
popa
or
sbb
daa
frstor
outsb
mov
push
clc
and
roll
lea
pop
cmp
add
lret
xchg
and
adc
ja
testb
push
xchg
cmp
and
mov
mov
adc
jno
fs
jp
jno
mov
xor
mov
xchg
and
pop
test
push
inc
out
pop
shlb
xchg
les
daa
xlat
dec
gs
and
sub
or
stos
fisubl
dec
jns
xchg
cmp
sub
out
inc
clc
inc
mov
inc
pop
adc
sub
out
sbb
es
scas
push
lods
cld
xchg
fisttpl
xor
js
out
imul
stc
or
xchg
in
xchg
ficomps
jb
hlt
cmc
in
adc
loopne
out
popa
repz
mov
aas
pop
rcrl
ja
das
clc
sar
pop
xor
or
je
jns
inc
aad
fdivrs
stc
push
lods
xlat
movsb
hlt
or
scas
test
out
pop
ficomps
loop
nop
push
cmpl
in
ss
push
jge
xor
imul
xor
das
pop
mov
movsl
xchg
js
dec
mov
repnz
call
or
xor
xchg
pusha
movsb
loopne
sbb
loope
cmc
popf
fsubs
dec
pusha
or
test
mov
lock
cmpsl
stos
xor
jg
dec
xchg
pop
movsl
imulb
mov
stc
inc
inc
fwait
test
ret
inc
lret
shlb
adc
adc
icebp
addl
test
pop
jno
iret
pop
out
gs
les
and
in
lss
sub
std
add
ljmp
lods
sbb
and
mov
test
rcll
cld
arpl
push
dec
lret
into
dec
shrb
andl
aas
dec
test
mov
shl
xor
add
sub
jle
adc
enter
add
notl
xchg
push
mov
imul
or
cmp
jge
pop
or
mov
xchg
leave
mov
or
std
cmc
xchg
mov
sarb
ret
mov
ret
xchg
rcrb
or
mov
jg
out
addr16
xor
sarb
cmpsb
mov
fld
int
mov
jo
in
xchg
sub
jg
aam
sbb
inc
dec
stos
xchg
cld
cmpsl
call
jl
mov
movsb
adc
cmpsl
mov
mov
jno
push
out
cmc
shll
adc
fidivl
xchg
push
icebp
adc
mov
dec
sbb
pushf
cmp
jns
push
dec
sti
clc
adc
pop
mov
pop
daa
mov
aam
arpl
push
inc
in
lahf
arpl
daa
sbb
sti
adc
add
mov
mov
cs
cmpl
icebp
imul
xchg
xchg
sbb
mov
ja
in
out
or
stc
popa
cltd
shlb
std
lret
int3
push
fcomps
adc
mov
ja
lret
fsubr
and
leave
cmpsb
lock
or
add
loopne
cmpsl
push
push
adc
loop
xor
movsl
xchg
hlt
push
lods
stc
dec
mov
cmpsl
lcall
inc
pop
dec
push
in
in
daa
popf
or
mov
jecxz
push
lods
fbld
orb
cli
leave
sarl
push
add
loopne
xor
aad
shrb
call
into
xor
or
aaa
aam
push
es
add
mov
divb
dec
stos
and
imul
mov
insb
cwtl
xchg
xor
jg
test
out
pop
ljmp
inc
mov
imul
pop
popf
imulb
mov
push
and
inc
aas
test
pop
cs
mov
mov
fisubs
shr
mov
into
mov
pop
addb
es
sub
mov
in
push
mov
cld
out
xchg
addr16
cmp
test
popf
insb
push
pop
aaa
dec
scas
dec
ret
xlat
lds
lods
mov
and
and
mov
push
dec
add
nop
xchg
les
jge
lods
xchg
loope
xchg
xchg
or
loope
push
push
cmp
pop
outsb
scas
xor
jb
inc
andb
fldenv
cmp
cmc
mov
js,pt
and
shrb
inc
xchg
xchg
sub
cmp
hlt
cmc
iret
push
in
lods
iret
pop
loope
aaa
add
add
mov
das
imul
jno
aaa
or
mov
movsl
sbb
ret
fdivrs
xorb
jge
insl
adc
mov
out
lods
or
pop
scas
divb
outsb
insl
stos
dec
fiadds
pop
shrb
jns
push
aaa
pusha
mov
inc
fs
jae
sbb
dec
sbb
jb
out
jp
mov
jge
or
sub
and
daa
aas
incb
or
test
jne
inc
bswap
lods
xchg
imul
sbb
loopne
sbb
call
int
int
mov
mov
adc
sub
pop
call
icebp
loop,pn
fbstp
pop
mov
mov
xchg
pop
fnsave
cli
popf
insl
int
ss
jp
mov
mov
xor
addb
xor
xor
push
dec
mov
inc
fwait
cltd
lds
inc
addb
mov
sub
scas
imul
es
dec
lock
cmp
push
xor
jmp
and
out
push
xchg
aad
mov
js
fs
stos
jno
pop
jmp
xor
sbb
std
xor
mov
mov
outsl
and
idivb
cmp
repnz
inc
push
sbb
test
xlat
mov
lods
push
ljmp
movsb
gs
adc
in
into
push
fnstsw
mov
std
int3
and
aas
out
outsl
mov
pop
clc
sti
in
push
and
cmp
cmpb
xchg
outsl
mov
in
nop
mov
lret
mov
leave
gs
push
popa
cmp
out
xor
test
repnz
int3
pop
sub
xor
pop
xor
add
cmpsb
cld
adc
sarb
cmp
outsb
imul
into
sbb
or
adc
add
adc
arpl
lock
mov
lock
dec
add
adc
mov
inc
push
pop
cli
push
inc
cli
sbb
ret
aas
mov
fs
pop
idivl
ret
sbb
test
or
and
lds
addr16
add
mov
jecxz
je
sub
ljmp
fildll
insb
pusha
add
hlt
or
outsl
ret
sahf
and
sbb
fs
pop
pop
notl
pop
or
lret
stos
push
cmpsl
push
dec
popa
or
xchg
add
js
orl
movsl
inc
movaps
cmp
adc
shll
push
sub
add
mov
sbb
inc
cmp
sub
aam
push
push
mov
in
mov
pushf
andb
pop
cmp
xchg
lahf
or
adc
stos
push
sbb
cmp
je
jo
xlat
aad
sahf
add
out
notl
xorb
iret
out
or
lods
addr16
ds
inc
in
ds
stos
loope
mov
cmp
fdivl
mov
xchg
lahf
repz
add
sub
shrb
test
sbb
xor
mull
addl
loope
dec
mov
or
cmc
push
rorl
mov
mov
leave
lods
cmp
sub
scas
test
push
ret
out
mov
in
jl
push
out
popa
jns
mov
mov
pusha
pop
sarl
out
mov
cmp
pusha
jmp
into
jne
mov
testb
movsl
mov
mov
pop
xchg
xor
adc
lret
jl
xor
push
test
jbe
cli
push
add
dec
mov
xor
add
divb
xlat
jl
test
aad
test
pop
in
jmp
mov
orl
sahf
sbb
dec
mov
in
jae
bound
mov
pop
sbb
sbb
aaa
sub
sarb
jne
ret
mov
lods
aad
add
je
cmp
ss
xchg
loopne
lock
shl
repnz
and
insb
push
mov
les
push
adc
xorb
cmp
testl
loop
scas
test
clc
dec
lcall
bound
xchg
hlt
ljmp
loopne
lea
and
adc
loopne
push
ficompl
mov
cmp
cmpsl
cmpsb
rclb
jbe
xchg
ljmp
lds
or
movsl
adc
sbb
popf
cmp
ja
test
cltd
clc
push
in
and
cmp
decb
outsb
xchg
sbb
mov
cli
pop
loop
jl
add
cmc
int3
neg
mov
dec
or
arpl
xchg
sahf
divb
icebp
jp
mov
jb
repz
xor
nop
sbb
arpl
repnz
sahf
cmpsb
xchg
inc
xchg
pop
insl
sub
shlb
dec
pop
ret
jmp
add
and
cmp
fwait
pop
popa
ss
movsb
xor
fsubrs
or
lahf
mov
adc
mov
cmp
jle
out
das
sub
adc
cmp
stos
outsb
or
inc
cmpl
sbb
enter
fnstenv
adcl
and
scas
xchg
jp
mov
sub
push
ret
mov
push
xor
dec
lret
insl
dec
xlat
sbb
sub
sbb
xor
inc
dec
sbb
sbb
sub
cmp
jae
lret
fsubl
jne
pop
lock
xor
add
and
mov
or
jo
insb
mov
popa
cmpl
sbb
pop
mov
iret
pop
adc
jbe
inc
inc
xor
daa
xor
ljmp
ret
or
push
dec
in
and
lods
sbb
xchg
pop
stos
push
shl
fcmovb
js
lret
orb
lock
insl
xlat
mov
cs
push
add
push
add
clc
shl
stos
addr16
icebp
cs
call
push
and
mov
test
inc
sbb
scas
dec
sbb
mov
add
push
adc
pop
pop
and
ja
mov
xor
movb
sbb
ds
or
cmpl
adc
cmp
test
xor
mov
lock
dec
mov
mov
aaa
fiadds
jle
lock
mov
dec
xor
cs
adcl
adc
andb
mov
dec
scas
jo
les
lret
xlat
or
xchg
xchg
add
shrb
push
adc
jno
xor
cs
jge
cmp
inc
add
push
cmp
sti
sti
loopne
out
cmpl
add
add
cmpsb
daa
add
jno
pusha
or
or
push
sub
sub
je
sub
and
leave
movsb
js
leave
mov
std
jb
sbb
mov
inc
push
jbe
pop
lret
mov
cmp
fdivrs
sti
add
out
push
dec
test
fimuls
rorl
iret
mov
and
into
lds
xchg
insl
std
lock
mov
mov
jmp
ss
pop
jno
pop
sbb
cmp
and
add
lea
test
xchg
pushf
fbstp
sub
dec
xchg
outsb
cmp
xchg
in
ljmp
cli
mov
push
popa
outsb
mov
push
cltd
xchg
out
cmpsb
ret
push
leave
hlt
xchg
mov
xchg
sbb
mov
repnz
sbb
into
xchg
dec
push
mov
mull
pop
lods
cmp
or
mov
dec
and
not
xor
leave
cmp
imul
add
xchg
stos
dec
out
mov
mov
mov
sbbb
xlat
xchg
pop
mov
scas
into
xor
sbb
jmp
pop
dec
jmp
pusha
rcrl
dec
sub
xor
mov
and
insl
lds
orb
mov
lock
loope
mov
and
scas
mov
std
cmp
hlt
push
call
mov
mov
loopne
das
ffree
in
cmp
xor
cmp
mov
add
call
ja
in
xor
aam
push
je
sub
mov
mov
push
ficompl
cmc
notb
inc
add
xchg
subl
xchg
scas
xchg
cmp
xchg
lods
xor
xor
test
out
sbb
test
dec
and
mov
movq
fsubrs
daa
push
pop
mov
dec
adc
fwait
pop
leave
jp
sbb
mov
or
inc
frstor
add
sbb
pushl
movsb
jge
into
jns
mov
jg
jnp
pop
scas
push
in
add
cmp
cmpsb
jmp
jbe
sub
sub
jg
pop
in
add
mov
cs
addr16
decl
bound
aas
mov
lcall
xlat
push
jg
adc
fcmovbe
push
dec
subb
dec
sub
dec
dec
sahf
push
or
stc
add
movsb
cmp
xlat
jecxz
adc
adc
jb
enter
cli
test
cs
into
pop
ss
sub
in
xchg
jnp
add
loop
shrb
pusha
scas
adc
repnz
mov
bnd
jmp
sub
lods
dec
jnp
inc
inc
insl
std
js
pop
iret
adc
inc
outsl
sbb
cmp
adc
adc
das
ds
nop
or
inc
push
les
ret
iret
lret
sbb
aad
inc
loop
lock
jnp
stos
call
ja
outsl
fcoms
pop
push
outsl
xor
test
mov
loope
lods
inc
mov
push
inc
add
mov
push
lods
sbb
xchg
jbe
sub
jno
or
out
aas
rcrl
xor
ret
pop
jo
fwait
push
mov
cmp
push
clc
inc
mov
jnp
repnz
fisttpl
dec
push
lds
cli
mov
ret
inc
data16
test
popf
shr
leave
das
test
adc
das
adc
push
test
pop
sub
test
mov
ds
loope
lahf
call
fiaddl
mov
or
xor
xchg
stos
loop
orb
cmc
sbb
es
jb
sub
xlat
pop
mov
sar
jno
mov
pop
xchg
stos
das
inc
xchg
cmp
std
mov
xchg
add
out
mov
xor
jae
idivb
fwait
jne
call
pop
xlat
or
out
adc
and
lahf
ret
lcall
or
aam
jbe
rol
jle
jp
lret
dec
das
dec
or
fidivrs
mov
pop
push
test
cmc
out
call
aaa
popa
push
mov
and
lret
mov
mov
outsb
pop
pop
jae
mov
jb
mov
repnz
roll
pop
push
out
cwtl
adc
pop
push
aad
jbe
xchg
mov
inc
xchg
fnsave
jmp
xchg
mov
lods
into
pop
imul
outsl
xchg
aam
movsl
dec
iret
outsl
push
pop
cmp
enter
ficoml
jnp
add
stos
repnz
dec
das
ds
sub
cltd
xor
jecxz
mov
pop
xor
inc
mov
aaa
fsubrp
bound
mov
dec
outsb
in
leave
jbe
int3
out
adc
xor
adc
cltd
lea
mov
jecxz
sbb
adc
lcall
mov
cmp
in
push
jmp
out
xchg
ljmp
sub
stos
cmp
test
aam
popf
imul
loope
jnp
ret
cltd
jmp
mov
into
pop
cmc
inc
rorb
or
pop
pop
int
lcall
add
loope
and
mov
mov
cmc
lods
xchg
pop
push
push
inc
inc
xchg
mov
push
or
jno
cltd
inc
rclb
pushf
jne
fnstsw
sub
popf
add
cmp
dec
cmpsb
lock
jp
jle
or
fidivs
push
shl
add
shlb
mov
je
aam
add
sbb
dec
inc
test
outsl
mov
push
out
scas
or
dec
out
ret
es
pop
fwait
add
insb
in
pop
lock
and
daa
cs
xor
pop
pop
inc
mov
jmp
add
xchg
mov
mov
fsubr
mov
jne
jle
mov
mov
repnz
pop
dec
cmc
ds
xchg
das
cmp
fucomp
shl
dec
xchg
mov
sub
popf
jmp
jb
add
or
mov
je
jbe
hlt
popf
movd
cmp
xor
inc
orb
repz
add
mov
fildll
adc
or
jnp
xlat
mov
enter
mov
xchg
test
and
testl
aas
ds
out
loopne
push
mov
pushf
xchg
xchg
in
sbb
xchg
mov
push
ljmp
push
or
dec
fsts
mov
sub
repz
cld
sbb
cmp
fmull
cld
and
stos
cld
out
leave
pop
out
mov
ljmp
cmpsb
rcll
jmp
inc
sbb
rolb
pop
push
inc
mov
cmp
mov
mov
xchg
lret
dec
adc
daa
sahf
ficoms
or
loope
jecxz
out
cs
cmp
xchg
dec
sbb
xor
rcr
or
mov
xor
pop
stc
sbb
mov
sbb
lret
sbb
or
cld
jecxz
dec
shr
insl
push
push
mov
imul
xchg
or
dec
dec
xor
inc
imul
xchg
test
lods
sub
pop
cmp
shrb
mov
fimull
lods
iret
popa
mov
rcl
pop
mov
ljmp
pop
or
leave
faddl
int3
cs
xor
adc
repnz
iret
push
movsb
stos
push
sbb
ljmp
dec
movsb
shrb
cmpsl
pop
or
and
mov
mov
xlat
imul
mov
mov
cltd
dec
add
or
enter
aam
movsb
dec
mov
loope
cmpsl
ja
inc
pop
jecxz
mov
aam
push
cld
xchg
iret
mov
push
xor
arpl
mov
hlt
sti
test
cmc
rcll
sbb
cltd
xchg
push
lret
adc
xchg
xor
fisttpl
lahf
mov
adc
loopne
in
daa
sahf
aas
cmp
sbbl
mov
ud2
lock
ss
sub
icebp
sub
cltd
xor
out
loopne
and
and
inc
fiadds
pop
popf
add
mov
push
cmp
mov
xlat
test
cmpsb
pop
loop
cmp
mov
call
addr16
mov
jecxz
adc
add
mov
ja
cmp
mov
hlt
jne,pn
les
lods
xchg
mov
dec
clc
jns
cmp
xchg
divb
pop
add
loope
xor
jg
std
adc
lahf
sets
out
data16
jbe
pop
clc
lods
mov
mov
gs
lret
add
dec
push
cli
imul
jg
cli
int
or
dec
mov
or
es
sti
lcall
adc
pop
push
sbb
in
fucomi
repz
adc
xorb
hlt
mov
fisubrs
movsb
fstl
stc
aas
push
jecxz
mov
test
lret
mov
mov
cmpsl
in
enter
hlt
push
pop
sbb
loope
jp
std
xlat
movsb
xchg
jb
test
sbb
std
ror
mov
mov
or
jle
push
rorb
inc
sbb
push
sahf
lods
push
mov
out
push
or
xor
pop
mov
xchg
in
dec
jge
jno
push
cld
mov
cmp
jbe
imul
bound
cmc
jmp
test
scas
sub
lret
sbb
lea
insb
loop
mov
mov
xor
sbb
xor
mov
rorb
jne
pop
sti
dec
jmp
dec
test
imul
fistps
xchg
pop
lods
imul
roll
in
cmp
adc
rcl
stc
add
jb
cmc
mov
lret
pop
mov
xchg
inc
sub
std
aam
push
sahf
xor
sahf
repz
dec
clc
push
jnp
inc
pop
es
movsb
jae
push
nop
and
inc
jne
add
push
sub
pop
and
jnp
xor
pop
pop
sbb
pop
push
mov
mov
pop
pop
adc
push
cwtl
sub
fabs
xchg
bnd
add
push
enter
and
or
cmpsb
jge
add
rorb
or
ss
jmp
sub
jl
ret
lds
xor
sbb
lea
xlat
mov
mov
stc
mov
cs
shlb
jnp
cmp
je
cli
mov
addl
and
sub
out
xor
shrb
dec
aad
sbb
cmc
mov
or
out
sub
mov
jno
shrl
mov
xchg
jnp
decl
mov
mov
xchg
rorl
pop
popa
jnp
ret
fstps
cld
movsb
mov
mov
mov
scas
cmp
lret
lret
ljmp
dec
inc
mov
cli
pop
stos
cmp
add
sub
addr16
pop
imul
ret
jecxz
push
xchg
push
mov
pushf
lret
loopne
jge
in
mov
enter
int
adc
ja
mov
dec
push
or
repz
jp
aad
xbegin
dec
adc
jb
jp
mov
and
lret
cmpsb
mov
mov
jp
sahf
pop
test
mov
adc
lock
in
inc
bound
repnz
xchg
mov
and
push
xlat
cmp
xor
test
adc
add
xor
push
cltd
and
int3
jge
pop
das
stos
rorb
scas
push
out
addr16
pop
add
enter
pushf
add
ds
mov
out
push
seta
cmp
jne
arpl
adcb
sbb
mov
sbb
mov
dec
mov
in
in
push
xchg
jecxz
inc
jo
out
movsl
outsb
inc
lods
push
fcompp
es
mov
fimuls
sub
ffreep
jle
xchg
xchg
stos
xchg
add
sub
jae
pop
or
pop
push
inc
push
leave
loop
cltd
jne
xchg
clc
jb
sbb
enter
test
xchg
xchg
mov
iret
jo
test
and
pop
loopne
int3
ficomps
mov
in
mov
add
insl
sbb
xor
jb
jno
mov
adc
xor
rcrl
inc
sahf
mov
call
fdivs
cmp
adcb
jmp
add
ljmp
cmp
pcmpgtw
popl
pmulhuw
lds
xor
xchg
std
mov
insl
mov
call
dec
idivl
mov
std
xchg
jbe
pop
test
inc
mov
aaa
pusha
imulb
mov
sbb
push
lret
cmp
call
cmp
add
test
pop
adc
fidivrl
sbb
lock
out
mov
ja
stos
xchg
jno
add
inc
loope
sbb
mull
lock
adc
xor
mov
int3
aam
out
mov
imul
sub
mov
xor
adc
or
jno
ret
fcmovbe
mov
and
inc
js
cs
push
lea
movsl
cmc
les
pop
dec
adc
xchg
inc
sub
sbb
add
add
cmp
or
repz
mov
pop
sub
xchg
mov
jl
dec
bound
lds
into
aad
and
lahf
jle
xchg
pop
arpl
mov
std
lods
mov
inc
xchg
mov
sbb
add
sub
ss
fdivp
lods
frstor
imul
pop
cmp
jp
in
test
hlt
in
xchg
mov
inc
cmpsl
sbb
sub
add
hlt
mov
adc
aaa
push
aas
lds
test
pop
cmc
sub
adc
je
out
mov
add
clc
adc
cmpsl
cmpsl
dec
ret
mov
mov
lods
insl
mov
and
cli
ficoml
mov
xchg
in
inc
mov
adc
lods
pushl
ret
subb
lods
inc
jbe
repz
pop
inc
mov
cmc
mov
sub
mov
xchg
cmpsl
cs
das
andb
out
lret
lds
sub
add
mov
sbb
mov
jmp
xor
aas
jne
int3
jl
xchg
inc
into
jbe
aaa
in
lea
xchg
or
and
subl
jno
inc
jb
mov
addr16
mov
pop
pushf
jle
xchg
sub
movsb
or
jle
jle
sbb
mov
sub
pop
adcl
sub
popa
adc
xor
repz
loope
std
addr16
mov
data16
repz
sbb
je
cs
iret
dec
pop
rclb
jne
int
pop
cmp
add
mov
push
stos
out
mov
xchg
imul
sahf
adc
push
mov
adc
cmp
push
mov
push
and
sub
xchg
jmp
stc
jb
iret
push
push
dec
loopne
pop
test
xor
xor
push
xchg
int3
inc
icebp
sub
ret
rorl
sub
ficoms
stos
mov
leave
mov
je
pop
shl
insl
push
push
dec
mov
adc
add
call
inc
adc
in
adc
sub
fcoml
outsb
cmpsl
jmp
jno
mov
rcrb
lods
int
pop
loop
aam
outsl
insb
lcall
cmpl
call
xchg
pusha
jns
lcall
push
xor
pop
xlat
and
pop
clc
stos
jbe
jne
into
jg
test
xchg
xor
mov
jg
enter
mov
mov
enter
loope
jmp
mov
insl
dec
mov
fwait
xchg
lret
xchg
and
das
mov
es
xor
or
dec
xor
xchg
adc
aaa
add
push
outsl
or
loopne
or
mov
dec
inc
mov
in
insl
lahf
into
std
out
push
adc
and
mov
insb
xchg
or
dec
scas
dec
rcll
fists
inc
outsl
test
stc
dec
gs
cld
xchg
cmp
outsl
xchg
dec
or
xchg
inc
mov
rclb
sarl
addl
pushf
add
sub
into
inc
add
icebp
hlt
mov
lret
gs
jae
mov
jmp
dec
or
push
lods
fnstsw
sub
psadbw
mov
mov
jmp
bound
xlat
xlat
movsl
ss
sub
cmp
pop
mov
call
stos
ljmp
ja
push
xchg
fdivs
outsb
sub
stos
adc
je
lods
loope
cli
testl
ror
xchg
xor
add
cmpsl
cld
iret
add
xor
ficoml
or
dec
cmc
es
xchg
sbb
push
fsubrs
pop
mov
pushf
sub
sbb
push
cwtl
sub
ret
movsb
lds
add
xchg
aad
pop
mov
mov
and
inc
popf
dec
jnp
nop
cmpsb
jnp
lahf
mov
movsl
out
lcall
shl
call
add
cld
cmpsl
xorb
and
pop
hlt
fists
arpl
gs
out
xchg
cltd
mov
pop
mov
ret
jae
sub
sbb
and
fbstp
gs
inc
and
imul
mov
mov
rcl
fldcw
fnstcw
jmp
test
ds
out
bound
jle
sarl
stos
lds
daa
adc
pop
mov
out
mov
lcall
push
jg
dec
cltd
out
mov
inc
popa
cmpsl
jl
aas
aaa
lods
int3
repnz
xor
out
hlt
outsl
push
std
push
div
pop
xor
pop
mov
pop
cmp
loop
pop
and
adc
pop
xlat
std
dec
out
loope
fcompl
sbb
add
or
inc
jb
das
jg
push
and
mov
ss
sbb
xchg
adc
xor
aam
xchg
xchg
pop
add
sbb
mov
imul
aam
xchg
inc
not
pusha
pop
pop
jnp
inc
xor
adc
push
pop
pop
jmp
pop
cwtl
enter
fstps
std
jno
cmc
mov
push
in
jl
lahf
jmp
repnz
mov
push
repz
addr16
sbb
push
push
ror
in
cli
imul
scas
push
cmp
sbb
ljmp
mov
jge
in
or
dec
std
xchg
insl
dec
sub
cli
jno
sarb
inc
mov
cmp
out
mov
xlat
outsl
cli
mov
inc
scas
subl
out
cmc
cmp
es
incb
popa
rclb
imul
xchg
lock
out
inc
fwait
test
pop
push
cltd
test
sbb
ljmp
mov
dec
popa
scas
dec
mov
sarl
add
sub
out
pushf
in
pop
pop
movsb
sub
clc
arpl
in
pop
dec
jg
cmp
mov
adc
aad
and
adc
add
mov
lret
cld
and
lret
shrb
inc
xor
mov
fildl
ret
pop
add
nop
fcoml
add
test
cltd
mov
pushf
mov
mov
das
mov
inc
add
pop
inc
aaa
icebp
xor
xchg
add
sub
push
push
outsl
insl
mov
mov
loope
xchg
mov
pushaw
sbb
adc
mov
mov
add
pop
sbb
mov
dec
sarb
cmp
or
outsb
pop
ret
sbb
cmpsl
add
cmp
dec
ss
call
push
movsl
lcall
push
shl
sub
mov
xchg
outsl
aas
pop
jae
cli
inc
mov
enter
mov
jl
das
mov
scas
pop
add
in
mov
test
xchg
js
inc
pop
out
xor
subb
pop
dec
mov
insb
shl
cmp
and
mov
leave
in
jge
jle
ret
jne
pop
into
add
mov
lods
pop
loop
push
mov
arpl
push
cmp
push
push
lods
xlat
add
lods
out
mov
sub
sbb
cli
shlb
mov
sub
mov
push
sub
ja
leave
dec
mov
inc
test
sbb
inc
cli
dec
sbb
xchg
push
jmp
fsubr
dec
push
mov
xor
jmp
fnstcw
rcll
push
scas
dec
scas
push
mov
sub
cltd
sbb
inc
and
sarb
inc
xchg
dec
shlb
movsb
in
xorb
iret
dec
sbb
loopne
pop
xlat
xchg
fsubs
adc
cmp
add
lea
ds
cmp
pop
inc
stc
add
pop
mov
mov
jecxz
xor
fcoml
dec
adc
into
mov
cmp
jns
mov
lods
repz
mov
xor
xor
jb
fisttpl
or
test
xor
push
arpl
sbb
ret
ret
cwtl
test
ds
addr16
es
jno
cmpsb
mov
repz
test
and
or
ss
test
push
repz
dec
add
or
mov
dec
adc
push
pop
xchg
dec
int3
push
mov
inc
and
lea
adc
popf
and
sbb
out
clc
addl
loope
add
icebp
inc
orl
pop
and
aaa
and
dec
movsl
mov
and
out
lcall
push
or
test
out
divb
mov
xor
bound
pushl
iret
rclb
outsl
aad
mov
jecxz
stos
push
mov
adc
in
in
movsl
or
mov
icebp
push
addr16
xor
inc
movsl
jae
mov
and
sarl
mov
xor
das
push
test
insb
sub
movsb
and
lea
or
pop
test
sub
dec
lea
notb
nop
cmp
pop
jno
mov
pop
pop
adc
jecxz
mov
inc
xor
outsb
jo
movsl
push
fcom
addr16
stos
sahf
addr16
push
imul
cmp
pop
lods
xor
pop
call
mov
aad
pop
ret
mov
enter
ret
mov
add
mov
fcos
adc
popa
es
ds
cmc
add
cmp
adc
mov
int3
adcb
dec
add
roll
mov
jae
loop
jns
mov
imul
ss
pop
cwtl
push
sbbb
push
mov
or
repnz
scas
aas
fsubrl
sub
push
lods
shl
dec
ja
xor
imul
cmc
insb
cli
fbstp
dec
ret
out
fisubl
aad
incl
jae
add
paddusb
scas
cmp
wrmsr
pop
out
push
cltd
mov
xchg
es
sarl
cmpsl
in
mov
lds
add
xor
push
addr16
arpl
stos
cmp
dec
dec
jle
xor
push
sub
pushf
adc
in
aam
push
sti
xor
sbb
lcall
xor
stos
mov
sbb
daa
add
loope
sbb
loopne
pushf
add
mov
out
sub
cmp
lret
in
fmulp
dec
gs
inc
dec
in
popf
hlt
shl
scas
repz
imul
add
jge
or
ljmp
cmp
jbe
inc
jle
sub
test
ja
loop
stos
fmull
data16
dec
data16
jge
pop
clc
xor
and
ljmp
pop
mov
push
decl
dec
loopne
mov
adc
pop
divb
inc
inc
sub
mov
mov
enter
push
int3
test
test
out
icebp
adc
roll
and
test
add
ljmp
mov
subl
dec
movsl
sub
test
stc
mov
addb
clc
cmp
icebp
movsl
shr
cmp
bound
scas
and
dec
inc
jp
cmpsb
or
adc
and
shlb
pop
sub
lret
mov
adc
mov
or
mov
imul
cmp
pop
mov
adc
sub
imull
xchg
pop
and
and
movsl
xlat
sbb
call
push
or
dec
test
sub
cmpsl
imul
pop
mov
int
mov
dec
pop
mov
leave
dec
frstor
and
sbb
call
repz
fidivrs
mov
ss
mov
push
cld
ss
fwait
xchg
daa
arpl
decb
sarb
mov
sub
pop
cli
cmp
mov
cmc
loope
repz
sub
loopne
cmp
rorl
rorl
fwait
in
scas
incl
pusha
das
mov
dec
imull
lret
push
mov
fcoml
es
or
outsb
cmp
sti
mov
adc
mulb
mov
mov
mov
or
pop
sti
cltd
adc
repz
pop
popa
ljmp
pop
lcall
je
jmp
loope
int3
pop
fstpl
xchg
repnz
in
jne
jmp
loopne
mov
sahf
and
movsb
mull
rep
popa
xorb
in
mov
add
enter
repnz
mov
sub
ja
add
push
mov
or
addl
cmp
shrl
cmpsl
pop
out
cld
and
rorb
or
pop
gs
mov
add
mov
push
int3
jno
cwtl
mov
mov
cs
jmp
lret
nop
jmp
or
cmpsl
fwait
out
mov
mov
jecxz
sub
add
mov
add
pop
jl
mov
call
jnp
in
out
in
cmp
lock
int
ja
ret
std
adc
add
in
and
and
push
cli
pop
das
cmp
add
sbb
adc
popf
mov
sarl
xchg
xor
in
mov
mov
std
xor
sbb
and
push
push
mov
jne
pop
and
mov
mov
mov
push
cwtl
pop
inc
out
rolb
fstpt
fcmovu
pop
out
mov
mov
mov
out
xor
inc
rcrb
das
iret
sti
adc
push
mov
xor
xor
and
push
and
sti
cwtl
nop
aas
aas
inc
aas
jg
dec
push
jns
std
sub
out
iret
ja
arpl
mov
pop
or
dec
push
push
mov
lret
sub
leave
in
fnstsw
cs
aas
push
adc
dec
xor
hlt
vsubpd
sahf
xlat
sbb
repnz
dec
mov
xor
jp
jns
adc
inc
inc
xor
outsb
dec
popw
stos
dec
data16
add
push
ja
xor
popw
lea
cmpsl
sbb
xor
and
bswap
dec
adc
andb
xchg
dec
lds
mov
jns
std
jmp
push
loope
or
inc
lcall
sub
cmc
enter
loopne
orb
and
iret
adc
mov
es
insl
pop
jae
mov
or
test
fsubl
mov
rorb
aaa
bound
jp
cli
addr16
loop
std
mov
xor
cld
cmpsb
push
lds
mov
in
xorb
mov
ret
insl
jl
jae
dec
jbe
nop
xchg
dec
jo
adc
adc
inc
outsb
jns
es
adc
cmp
or
lea
jno
push
cltd
lret
inc
cld
lret
jb
repz
sub
ficomps
repnz
stos
inc
jo
rclb
add
mov
pop
adc
xor
pop
xchg
mov
fcmovbe
aad
inc
fwait
shlb
pop
in
xchg
cmp
movsb
inc
add
cwtl
push
imul
ret
xchg
divb
adc
cmp
ljmp
popf
xchg
inc
je
dec
adc
or
cmpl
gs
jns
daa
mov
push
pushf
adc
lea
cli
lret
jns
shrl
jb
jmp
mov
clc
or
mov
jbe
das
add
pop
mov
and
f2xm1
stos
rorl
lock
int3
xchg
push
and
stos
sbb
dec
mov
ljmp
inc
adc
add
lcall
gs
push
push
lcall
cs
and
push
inc
call
sbb
mov
xchg
mov
cmp
addr16
bound
add
mulb
addr16
iret
cs
push
out
or
sti
mov
stos
pop
out
mov
shrl
out
arpl
out
inc
cmc
dec
arpl
jge
int
sbb
cmp
xor
movsl
push
mov
xchg
aad
in
jns
in
pusha
shrb
push
jg
leave
push
xor
jge
xchg
int
xchg
adc
jns
add
mov
sub
add
insl
pop
sbb
mov
imul
xchg
inc
mov
mov
mov
cmp
cmp
push
adcb
cmp
aas
xchg
sub
xchg
fstps
pop
mov
setg
popa
jge
insl
sbb
push
xchg
int
push
mov
std
call
push
cmp
ret
cs
add
mov
movsl
sub
hlt
mov
in
pop
and
scas
test
fwait
js
cmp
and
pop
cmpsl
pop
loop
call
or
out
pusha
sbb
shl
inc
jb
xchg
cld
and
push
xor
mov
loopne
inc
dec
add
ljmp
dec
xchg
or
sbb
or
add
or
and
cmp
mov
cli
add
bound
sub
xchg
test
push
mov
mov
ds
mov
out
dec
std
push
data16
push
nop
xlat
push
cwtl
adc
popa
cwtl
mov
cmp
mov
fnstenv
inc
cli
add
push
jmp
sti
xchg
xor
mov
push
mov
testl
decl
in
shrd
sarb
push
push
mov
jmp
jl
jbe
mov
mov
xor
out
pushf
mov
aam
pop
cmp
je
sbb
jbe
cld
mov
lahf
dec
mov
mov
push
xor
mov
push
jae
call
mov
popa
pop
mov
jnp
mov
imul
sbbl
jo
cld
repz
xchg
push
adc
dec
sbb
adc
mov
sahf
xor
out
leave
in
xor
mov
dec
dec
scas
je
or
pop
sti
mov
clc
mov
mov
in
imul
sbb
sub
add
adc
cld
jle
mov
fwait
sub
inc
aam
sarb
xor
mov
xor
cld
stos
mov
xchg
cltd
repz
out
sbb
aaa
xor
ja
sub
imul
in
push
mov
test
pop
inc
pop
aam
into
add
dec
jmp
jo
jecxz
mov
pop
hlt
sub
fistpl
mov
cmpsb
pop
int3
les
lahf
mov
push
sti
loope
call
pop
and
adc
add
gs
adc
sub
mov
adc
leave
add
es
test
lds
sti
ret
pop
jge
add
dec
loop
sbb
bound
call
in
mov
enter
xor
xchg
pop
and
cwtl
jle
hlt
and
or
aad
xchg
push
and
stc
scas
flds
jmp
cmp
loopne
xor
xchg
push
xchg
imul
mov
and
std
add
sahf
pop
push
mov
negl
sub
icebp
mov
mov
outsb
leave
push
sbb
push
jle
jne
adc
pop
loopne
xlat
adc
cs
repnz
cli
cmpsl
pop
inc
dec
inc
mov
and
push
add
add
sub
dec
lcall
int
dec
enter
sahf
lret
push
add
sbb
push
fidivrs
xchg
shrb
add
pop
xchg
data16
aaa
push
adc
cmc
add
adc
gs
and
aaa
loope
mov
mov
add
subb
adc
mov
adc
repnz
outsb
out
mov
fnstenv
out
push
sbb
fbld
stos
out
adcl
arpl
jge
ja
jne
scas
pusha
sarb
and
pop
cmpsl
pop
subps
int3
pop
hlt
jp,pt
dec
mov
mov
pusha
iret
mov
inc
xchg
incl
stos
sbb
mov
adc
mov
popf
cmpsl
cmp
cs
hlt
xor
fcomps
and
xor
jb
lock
clc
mov
jge
in
inc
push
mov
sub
idivb
sbb
xor
push
std
mov
int3
adc
stos
cli
push
mov
shlb
adc
enter
cmp
out
push
mov
pop
adc
sbb
cmp
and
pop
ja
push
add
aas
lcall
mov
xchg
inc
push
pop
mov
push
sub
repz
scas
loop
test
xchg
sub
mov
loope
js
adc
aaa
iret
xor
loop
arpl
or
xchg
push
push
or
fstps
test
std
sti
mov
push
mov
pop
bnd
cmpsb
jnp
inc
xchg
gs
add
dec
inc
icebp
mov
dec
adc
imul
push
subb
mov
pop
shlb
ss
std
ja
cltd
push
mov
outsb
dec
jp
xchg
cmp
imul
daa
cmpsb
pop
adcb
lock
fisubrs
nop
inc
popa
shrl
mov
jns
andl
dec
ja
mov
subl
adc
hlt
xchg
adc
mov
ret
push
xchg
mov
fdivrs
dec
pop
sbb
pop
lcall
push
inc
mov
add
insb
add
repz
cmp
jne
lods
cs
stos
mov
in
xchg
mov
pop
imul
repnz
jns
pop
stc
dec
push
add
mov
mov
or
cld
fdivrs
push
lds
jl
adc
and
xchg
flds
movsb
jle
xchg
xor
cli
dec
inc
sub
insl
mov
sub
mov
rcrb
xorl
xor
fcmovnb
pop
insb
sbb
push
imul
ja
int3
mulb
dec
push
xlat
inc
sbbb
bound
adc
cs
jo
mov
jbe
sahf
addr16
inc
or
lock
repnz
fiadds
aaa
jnp
cwtl
push
scas
cmp
jns
mov
fisubs
in
jae
pop
xchg
pushf
push
xchg
jg
int
iret
dec
jno
push
das
pop
gs
ror
out
gs
pop
sub
sti
popl
or
and
add
daa
xchg
inc
push
fisttps
push
mov
mov
sub
lahf
fucomp
sti
dec
or
ljmp
pop
scas
out
sbb
add
and
sbb
add
movl
movsl
ficomps
std
scas
cltd
push
rolb
mov
dec
arpl
push
mov
mov
add
clc
jbe
mov
fs
mov
push
rorb
adc
mov
mov
test
xchg
push
dec
push
push
lcall
pop
test
in
fildll
adc
dec
aad
dec
scas
or
cltd
cmpsl
fwait
sub
push
inc
fdivrl
pop
push
lcall
cs
aad
pusha
jae
dec
in
in
inc
sti
insl
xchg
lahf
data16
lcall
mov
xchg
int3
jl
xchg
mov
pop
mov
adc
cmpsl
push
mov
test
and
lcall
mov
in
shld
ss
dec
push
in
lcall
or
mov
arpl
incl
or
fcomps
push
jp
std
sbb
sub
fs
push
pusha
xchg
add
jb
fsubrs
and
fwait
scas
push
inc
push
cld
or
adc
pop
mov
adc
mov
addr16
pop
push
cmp
cmp
sahf
int
sub
mov
push
addr16
jl
push
jmp
xor
or
clc
or
je
mov
in
xor
push
fsubrs
push
sar
sti
repz
lock
jle
scas
sub
pop
rcrb
cmc
mov
xchg
jle
add
pop
in
jg
mov
mov
stc
jg
xor
insl
sbb
mov
inc
out
xor
and
lret
out
sub
test
sub
push
inc
mov
xor
add
shl
dec
or
mov
in
test
lret
adcl
fcompl
xchg
sbbb
and
sbb
jmp
mov
fmulp
imull
ret
mov
pop
xor
scas
jl
inc
xor
mov
cmp
sub
adc
cmp
xchg
mov
iret
push
mov
adc
filds
inc
fcoml
jmp
orb
add
ja
xchg
jne
dec
imul
out
test
aam
mul
test
inc
ds
movsb
dec
fbstp
int
roll
inc
and
add
push
andb
ret
mov
mov
adc
and
pop
cltd
sub
jo
xlat
in
add
sbb
mov
cmp
mov
adc
stos
fisubl
cmp
daa
call
ljmp
add
cltd
in
mov
xor
dec
popf
xchg
xchg
ficoml
push
add
jge
mov
jae
mov
cwtl
add
mov
iret
or
and
cmp
outsl
jnp
xor
jle
sbb
mov
cmc
dec
pop
and
sub
cmp
add
aas
jle
in
push
js
xchg
xlat
push
ss
aaa
nop
mov
jmp
dec
std
mov
scas
pop
mov
xchg
inc
mov
jnp
ret
jo
cmpsb
inc
sbb
sbb
mov
mov
adc
out
xor
push
enter
lret
push
sub
push
push
sub
stos
xor
mov
out
scas
popa
inc
inc
xchg
mov
mov
imul
js
mov
fsubrl
mov
push
les
lods
hlt
xchg
decl
sti
sarb
movl
add
add
fcom
mov
mov
xchg
mov
xchg
int
xchg
hlt
sbb
dec
pushf
imul
cwtl
pop
inc
call
js
in
adc
lock
xor
divb
stc
mov
out
pop
aaa
out
push
js
in
shr
xor
dec
inc
fwait
cltd
mov
into
jg
sbb
mov
out
loop
xlat
cmp
fs
aad
dec
sbb
ljmp
adc
adc
cmp
ret
xchg
and
pop
add
jmp
lea
cmp
and
pusha
rolb
lret
imul
scas
mov
sbb
data16
sub
jg
nop
inc
test
push
mov
hlt
mov
inc
jnp
lret
scas
push
stos
xchg
dec
clc
mov
sub
scas
adc
clc
push
push
icebp
es
inc
mov
test
push
testb
mov
dec
lods
or
xchg
call
dec
pop
xor
std
mov
scas
cltd
mov
imul
or
mov
fistps
sbb
bound
rcrl
dec
rcrl
fucomip
out
xor
pop
push
xchg
cmp
icebp
aad
insl
mov
jmp
fsubs
cld
pop
scas
pushf
popa
xor
popf
add
rorb
lods
lahf
fwait
roll
filds
dec
sbb
dec
aam
sub
into
jns
jns
ficompl
jne
xor
fs
jecxz
dec
cmc
ss
lret
pop
incl
leave
daa
por
push
in
shll
mov
cmpsb
in
mov
test
negl
sti
adc
and
faddl
fscale
jge
sahf
xchg
xchg
orl
sbb
fwait
push
sub
hlt
adc
mov
pop
sbb
fsub
pusha
push
sahf
inc
into
jp
cmp
jbe
repnz
jae
aam
jmp
jp
dec
jb
mov
jbe
or
outsl
jae
xchg
jg
sbb
push
iret
cmp
mov
jge
push
addb
jl
dec
and
add
pop
lahf
movsb
sub
sti
cmp
xor
mov
ret
mov
xchg
divb
lock
dec
mov
aam
inc
inc
pop
lahf
nop
not
jmp
out
enter
jl
cmp
jmp
or
mov
ret
rclw
aaa
xor
xlat
xchg
cmpsl
cmp
daa
ds
cmp
pop
push
jp
rolb
mov
pop
cmp
push
int
mov
sahf
jne
cmp
mov
test
jno
mov
dec
cli
insl
mov
xchg
cmp
cmc
cmp
stos
jl
cmpsl
pop
call
xor
xchg
xor
mov
cmp
mov
adc
xor
xchg
xor
jecxz
mov
daa
adc
add
pop
iret
addr16
jbe
jmp
inc
mov
cmpsb
rol
adc
push
inc
lea
push
in
mov
dec
jmp
pop
add
xor
shl
mov
cmp
inc
in
inc
push
fsubrl
pop
dec
mov
add
arpl
imul
inc
pop
pop
daa
rolb
push
dec
sbb
inc
in
mov
inc
das
scas
mov
jmp
bound
jb
sbb
add
mov
push
push
sbb
xor
pop
adc
aaa
pop
test
cld
shlb
and
in
cmp
mov
bnd
stc
adc
push
int3
sahf
rorb
pop
mov
mov
push
nop
jp
out
sub
cmp
xor
jl
in
fdivs
dec
daa
mov
jle
add
and
enter
leave
repz
clc
xor
xchg
cld
mov
push
add
out
mov
mov
sahf
gs
sbb
pop
add
bound
push
and
clc
test
push
xchg
sti
adc
aas
add
or
into
sarb
mov
cmp
pushf
jg
cmpsl
push
enter
sbb
pop
ficompl
xchg
add
lock
mov
rcll
subl
sbb
lods
or
jnp
sbb
pop
lret
mov
xchg
jo
stos
fadds
test
repnz
xchg
mov
xlat
pop
xor
test
push
pushf
sarl
fsubrl
xchg
adc
test
and
jns
add
xchg
aaa
jp
into
jecxz
cmc
sbb
icebp
pushf
jno
push
pop
push
nop
mov
sbb
mov
mov
fbld
pop
pop
out
pop
add
in
inc
jle
int3
out
mov
sbb
cwtl
dec
cli
lcall
add
add
xor
out
int3
add
sbb
fmuls
shrb
dec
xchg
mov
adc
inc
leave
movsl
sub
cmpsb
sbb
lods
jnp
rcl
mov
mov
pop
xchg
cmpsl
inc
into
add
data16
mov
prefetch
or
imul
cmp
mov
mov
aad
sbb
daa
ret
mov
jl
push
bound
or
fistl
jecxz
in
adc
pushf
and
ljmp
ficompl
mov
aam
mov
into
loopne
xor
dec
clc
pop
daa
scas
cmp
aaa
sub
out
outsb
cmp
sub
imul
jb
orb
dec
jo
jp
sub
sub
adc
lock
or
cs
stc
adc
pop
lret
pusha
inc
sbb
dec
movsl
jbe
mov
push
jne
inc
xchg
pop
push
jmp
or
xchg
or
lcall
jb
shll
sub
fwait
add
insb
mov
sti
adc
add
lods
jl
pop
stc
dec
dec
ret
jmp
test
sub
adc
jo
mov
stos
mov
pushf
cmp
fwait
lret
sub
add
dec
out
fmull
xor
adc
sub
in
mov
rolb
sub
loop
sbb
lcall
xchg
imul
xchg
js
sbb
xor
push
push
sub
stos
or
mov
jae
movsb
jae
dec
lret
test
and
lahf
ljmp
hlt
repz
shll
adc
aaa
imul
lods
int3
lods
dec
aas
lock
pop
cltd
jg
lret
or
mov
xor
ret
stos
mov
int3
mov
mov
cmp
and
adcl
fcomps
test
cmp
sbb
and
in
sbb
dec
xorl
scas
ret
xor
popa
negl
sbbb
push
sub
lock
test
in
sbbb
sbb
loop
adc
cmp
push
push
sub
xor
push
in
push
cs
mov
mov
mov
jb
popa
sub
aas
pop
mov
xchg
cltd
adc
mov
push
out
push
fwait
add
shrl
popf
imulb
mov
adc
icebp
and
xchg
ja
push
cmc
loopne
push
and
scas
inc
stos
cmp
inc
fs
das
data16
loop
idivb
cmpsb
xorb
jns
shrb
jge
jo
loope
mov
jg
iret
push
sub
cmpl
icebp
movsb
dec
imul
andl
cmp
insb
scas
es
int
aam
mov
add
icebp
sbb
jno
pop
cltd
and
mov
ret
shl
loop
xchg
inc
insb
sub
pop
aas
add
sbb
sub
icebp
xchg
lods
nop
push
lods
adc
inc
aas
mov
ja
iret
sub
or
fisubrl
mov
xchg
dec
ret
mov
jae
lret
outsl
aad
fadd
cmc
dec
fwait
mov
mov
addb
pushf
and
inc
sub
dec
addr16
sbb
mov
ret
clc
test
xchg
sbb
lret
push
or
xor
mov
push
sbb
out
in
sub
jmp
sarb
xor
xor
ret
lret
add
jnp
lods
push
inc
inc
xchg
fcmovnb
popf
sub
bound
stc
testb
sbb
mov
and
cmc
bound
inc
outsb
iret
mov
fdivr
mov
lds
ret
or
enter
xchg
pop
loope
subl
or
dec
cmp
lods
push
rcrl
scas
xchg
inc
es
mov
dec
addr16
cwtl
sbb
dec
pop
xor
xor
jmp
test
leave
call
sbb
xchg
jg
inc
dec
sbb
test
push
lea
dec
inc
into
test
or
jl
ja
addr16
or
out
sti
inc
cmpsl
out
rorl
and
cmp
xchg
or
ss
std
xchg
out
out
jmp
push
fstps
outsl
xor
dec
mov
imul
sarb
enter
jge
mov
icebp
pop
inc
sbb
iret
sbb
pop
sar
mov
mov
ja,pn
mov
pushw
mov
jl
and
les
mov
or
inc
ljmp
mov
cli
cwtl
sub
aam
xor
in
stc
rorb
in
xchg
cmpsl
stc
mov
mov
cwtl
stos
pop
jns
mov
sti
lods
mov
mov
cmpsl
iret
and
dec
pop
add
out
mov
mov
cmp
mov
pop
clc
in
xor
imul
xchg
imul
adc
xor
adc
cmpsl
xor
xchg
xorb
mov
aaa
lret
sahf
inc
outsl
std
sbb
enter
sahf
jns
and
mov
mov
stc
std
out
mov
push
or
dec
out
jl
mul
jl
mov
std
push
out
in
mov
pop
and
cli
aas
xlat
iret
dec
xchg
or
inc
lods
scas
bound
or
push
movsl
cmp
shlb
dec
mov
lock
movsl
push
lods
lods
and
pop
pushf
cmpsb
rcr
adc
xchg
std
jb
aas
mov
stos
jne
xchg
incl
lods
xchg
ret
loopne
out
sbb
pop
notl
pushl
add
std
jno
clc
int3
shrb
push
mov
inc
sub
lcall
loopne
fisttps
aaa
js
xchg
outsb
xchg
and
sbbl
pop
xchg
mov
in
icebp
xchg
lahf
mov
out
pushf
dec
clc
adc
mov
cmp
mov
xor
pop
test
in
xorl
pop
outsb
into
outsl
sub
in
and
outsl
cld
pop
add
std
lea
mov
loop
addr16
dec
popf
xchg
data16
mov
daa
addr16
inc
mov
dec
fwait
cmp
pop
test
push
mov
add
mov
dec
test
dec
mul
adc
sub
and
loopne
insl
xor
andl
and
xchg
and
hlt
aas
xchg
dec
lcall
cmp
pop
pusha
pop
repz
dec
or
iret
mov
mov
dec
imul
mov
out
aam
icebp
push
lock
lods
or
sub
test
lahf
fwait
sub
mov
fnstsw
fistpll
adc
push
mov
cmp
movsl
mov
push
pop
push
inc
xchg
xchg
rcrl
add
push
pop
int
sub
jo
lock
cwtl
stos
pushf
inc
imul
inc
add
mov
stc
jmp
xchg
mov
leave
pop
lret
mov
gs
jne
lahf
or
add
in
or
push
cmp
pusha
int3
mov
xchg
sub
mov
sub
testb
fldl
xchg
xlat
pop
cltd
mov
push
or
jbe
cmp
sbb
add
push
gs
cld
nop
faddl
in
fstpl
call
repz
jmp
dec
roll
mov
arpl
mov
jae
inc
out
sbb
aad
xchg
fnstenv
adc
fwait
cmp
lret
lret
xor
sbb
push
pop
scas
dec
jl
mov
js
and
jns
pop
sbb
mov
jno
test
adc
xchg
sub
cmpsb
pop
push
sar
mov
in
fdivrp
cmp
mov
jae
sub
or
pop
insl
or
mov
add
xor
mov
iret
and
and
sbb
fwait
cmpl
jnp
and
mov
sbb
push
fs
add
ret
cmpsl
inc
adc
pop
cmp
jl
push
sahf
mov
lcall
push
pop
add
jne
aad
lret
mov
mov
and
add
test
ret
loope
outsb
sbb
mov
aas
push
aas
push
mov
lds
popf
imul
or
dec
outsb
lods
and
add
cld
xor
adc
lret
jle
xchg
pop
xor
fdivl
mov
in
jns
cmp
xor
mov
and
sub
adc
mov
or
xchg
jnp
pop
stos
sub
or
adc
inc
adc
leave
gs
shrb
sbb
mov
jp
inc
ja
jo
mov
insb
xor
test
les
rcr
push
mov
movb
adc
lcall
pop
mov
pop
fnsetpm(287
mov
cmc
outsl
bound
push
xor
stos
push
cltd
sub
add
xchg
and
jnp
mov
fsubrl
xchg
and
lret
ds
scas
cmpsb
lcall
add
subl
dec
push
dec
ljmp
jae
push
mov
push
mov
mov
pusha
pushf
sub
icebp
les
pop
ficomps
pop
mov
sbb
leave
jmp
je
add
or
stos
enter
lahf
hlt
test
inc
xchg
mov
adc
dec
inc
aaa
fmul
mov
mov
jno
adc
outsl
scas
cmp
daa
jmp
je
or
push
xor
push
lds
xchg
std
jnp
into
fldcw
lods
jge
sbb
mov
lahf
in
call
push
jne
xchg
xchg
sti
int
dec
mov
xchg
out
inc
lret
sub
mov
repz
xchg
cs
stos
rorb
sub
pop
out
inc
pop
lahf
and
inc
sub
xor
loopne
inc
mov
pop
xchg
mov
or
lds
mov
fcomip
bound
gs
out
pop
outsb
lds
notb
mov
pop
xchg
aad
pushf
add
imul
arpl
jae
popa
pop
adc
jnp
fs
mov
sbb
mov
xchg
int
inc
pop
cltd
dec
ss
jae
xchg
sarl
lahf
sbb
jg
xor
mov
int3
or
push
mov
add
mov
out
je
out
daa
aaa
inc
and
xorb
int3
fwait
mov
or
into
inc
mov
or
das
mov
pop
adc
jl
insb
cmp
aaa
popf
inc
jne
adc
stc
rcll
pop
xor
mov
cmp
xchg
stos
pop
xchg
sub
dec
fnstenv
lcall
cmp
lock
xor
dec
out
cmp
scas
icebp
cmp
add
mov
roll
int
mov
iret
jmp
fidivrl
sbb
pop
inc
insb
jae
mov
repz
dec
in
scas
call
cmp
cmp
fwait
cmp
push
fldt
dec
mov
xor
and
cmc
mov
or
push
lea
mov
jge
mov
mov
scas
sub
cmpl
sbb
or
mov
cmp
push
out
add
in
ffreep
sbb
lods
ds
mov
je
aaa
popa
sub
pop
inc
dec
xchg
cmp
jle
xor
adc
fcoms
lea
inc
insb
in
push
xlat
mov
lret
dec
xchg
xor
or
scas
inc
mov
xchg
mov
and
push
imul
mov
jecxz
rol
ret
xchg
mov
and
stos
add
or
les
and
mov
dec
mov
or
sahf
or
popfw
pop
cmc
test
mov
xchg
or
insl
icebp
test
and
pusha
xchg
mov
scas
xor
rol
xchg
add
shll
leave
aam
das
or
sti
sub
adc
dec
das
mov
dec
push
ret
jo
cmp
fcomps
dec
adc
in
dec
xchg
jno
push
scas
insl
repz
mov
adc
inc
add
scas
jbe
pushf
cwtl
std
mov
imull
imul
dec
mov
xchg
mov
js
sbb
or
xor
test
add
clc
movsl
rcrb
or
fdivs
fistpll
ds
jmp
adc
je
adc
or
pop
sbb
mov
push
loopne
notl
mov
fwait
mov
add
stos
das
sub
push
shrl
sar
aam
mov
sub
popa
cmp
imul
aad
jno
mov
xchg
adc
mov
imul
jbe
sub
fisttps
mov
and
mov
sub
xchg
cmc
jbe
imul
imul
jb
add
loop
or
mov
dec
sub
mov
and
mov
or
mov
loopne
jecxz
jp
arpl
dec
push
dec
pusha
mov
stos
and
movsl
cmp
mov
mov
jl
push
adc
xchg
sbb
mov
and
inc
xor
xchg
test
xchg
jnp
insb
or
sub
test
pusha
mov
out
push
loope
hlt
sbb
loop
fucomp
inc
scas
push
inc
ret
mov
popf
sub
mov
cmp
fbstp
dec
scas
push
mov
jbe
xchg
pop
add
cmp
inc
ja
add
and
mov
jns
pushw
jo
jle
xor
jl
test
and
jbe
pop
and
aam
aam
inc
sbb
std
imul
xor
xchg
mov
imul
inc
xchg
mov
es
clc
loope
sahf
mov
gs
cmpsl
daa
push
adc
inc
daa
scas
jmp
clc
sub
in
or
scas
sub
les
xlat
ret
in
cmp
sbb
pop
loopne
out
cmp
pusha
movsb
mov
inc
jno
fisubrs
add
fnsave
sub
pop
add
insb
dec
sub
dec
in
test
in
mov
sbb
adc
rorb
lahf
mov
adc
js
adc
mov
mov
movsb
cmpsb
movsb
jbe
jo
ret
out
jge
jb
pop
fldenv
int
push
sti
aaa
mov
cs
test
insb
iret
cltd
outsl
xor
inc
pop
sub
jle
sbb
int
mov
sti
mov
lret
mov
and
or
orb
xor
add
jb
cmp
push
iret
daa
cmp
push
jbe
pop
addl
inc
das
scas
shl
outsb
and
mov
inc
mov
push
mov
popf
test
les
insb
mov
or
lods
daa
xor
lret
add
jl
push
pop
or
xchg
push
in
sub
or
repnz
fcom
bound
xor
mov
jp
ficoms
jmp
pop
inc
xlat
iret
loopne
mov
int
mov
mov
iret
or
push
cmovge
and
mov
adc
stos
jecxz
mov
xchg
movsl
jns
enter
nop
bound
lret
bound
fwait
aad
ffreep
pop
mov
pop
ret
sbb
gs
test
mov
sbb
adc
mov
push
pushf
inc
jae
cwtl
aas
dec
xchg
jbe
out
popa
cld
jns
jp
es
adc
movsb
pop
and
push
xchg
cmp
cmpsl
stos
je
test
imul
jl
adc
mov
or
aas
jbe
out
sbb
clc
daa
mov
dec
mov
xchg
cmp
adc
in
jne
xor
mov
xchg
mov
icebp
rcrb
leave
push
sub
and
and
add
test
push
scas
popf
push
mov
xor
iret
call
add
orl
adc
adc
jne
test
imul
arpl
jmp
inc
insb
mov
stos
data16
sbb
inc
scas
mov
sti
shrb
ljmp
adc
movsl
inc
push
pop
test
loopne
arpl
mov
cmpl
xor
or
pushf
gs
pop
cmp
push
das
xchg
mov
sbb
mov
mov
pop
jb
fsts
mov
cmp
cld
movsl
repz
push
aaa
jno
xchg
loope
shl
mov
cltd
lcall
push
and
add
fwait
aam
in
aad
jb
xchg
call
loope
ss
fstl
or
ss
outsb
add
ss
aaa
add
xor
stos
pop
loopne
cmp
cmpb
or
rcll
cmp
or
fwait
add
inc
inc
outsb
leave
repz
adc
xor
negl
stos
stos
cmpsl
cmpsl
dec
xorl
in
fmuls
fidivl
sub
fdiv
sub
leave
xor
mov
cmpsb
inc
fnsave
rcl
push
and
sbb
xchg
ficoml
inc
sub
sub
xchg
xchg
mov
or
adc
gs
stc
adc
js
jge
cli
mov
addr16
ret
movsl
xchg
nop
mov
sti
jo
fwait
cmp
js
dec
lret
dec
ja
xchg
arpl
rorl
and
adc
jp
inc
daa
out
fstps
xor
push
mov
mov
pop
jne
int
in
sbbl
cmp
adc
mov
xchg
cmp
add
mov
cltd
mov
mov
fwait
cmp
adcb
mov
faddl
fisttpll
sbb
cmp
push
lods
dec
push
jnp
movsb
add
mov
fsts
mov
add
into
iret
mov
xchg
insb
aad
nop
stos
leave
add
rcr
inc
dec
push
stos
sti
mov
jne
xor
mov
sbb
ss
add
dec
pop
mov
mov
sbb
leave
dec
push
sbb
fstpt
jle
jl
sahf
xchg
fcomps
mov
cli
mov
out
test
test
rcll
and
jae
dec
sub
ljmp
jecxz
or
out
popf
inc
je
dec
stos
repz
sbb
cwtl
push
pusha
add
aad
mov
mov
pop
lock
addr16
inc
cli
adc
enter
jmp
out
leave
mov
out
sub
nop
cmp
lock
mov
add
push
std
mov
lds
add
push
cmp
pushf
stos
cmp
cmp
enter
and
mov
sbb
or
stc
repnz
movsl
mov
inc
mov
mov
aas
mov
sbb
sub
cwtl
test
xchg
iret
inc
mov
out
sbb
dec
mov
and
push
pop
sub
dec
xor
jnp
xchg
jle
inc
pushf
scas
push
adc
les
shlb
add
gs
std
push
xlat
pop
test
cmpl
out
pop
mov
add
mov
dec
xchg
push
lods
adc
push
outsl
in
mov
cmp
mov
mov
aas
add
addr16
lds
mov
mov
adc
fdivs
mov
add
xchg
mov
jge
mov
movsl
aaa
sbbl
lds
push
mov
repz
inc
cmp
jbe
ja
cli
cmpsb
bound
push
sub
sbb
sub
ficomps
std
ja
fildll
loopne
pusha
cs
push
mov
jmp
call
dec
mov
das
lock
stos
jmp
mov
mov
dec
aas
mov
push
ljmp
dec
sbb
push
stc
daa
mov
or
mov
dec
push
popa
sub
adc
push
cltd
leave
test
jno
mov
xchg
in
rolb
int
jp
mov
jbe
aam
sbb
sub
xchg
dec
adc
jo
and
push
xor
arpl
stc
add
or
push
stos
push
hlt
fisttpl
ss
imul
imul
or
mov
filds
test
mov
add
mov
push
fsubs
subb
shll
mov
and
fcmovne
pop
cld
push
xor
cmp
in
subb
shrb
mov
xchg
test
mov
aas
push
push
xchg
inc
lret
enter
adcb
scas
addr16
stos
inc
fimuls
mov
xor
int3
pop
cld
push
xor
cmp
in
subb
inc
xor
mov
xchg
test
mov
scas
jle
mov
ljmp
outsl
mov
pop
stc
repnz
jb
xchg
pop
fnstenv
inc
jns
jg
andb
js
add
mov
pop
lea
and
cmpsl
mov
mov
aam
out
mov
xor
add
jb
sbb
cmp
xor
popf
inc
mov
mov
mov
lcall
sub
fdiv
adc
dec
int3
sub
inc
mov
dec
adc
push
mov
insl
incb
or
jl
mov
int3
imul
or
les
xor
pop
cmc
sbb
enter
add
or
dec
pop
fistps
or
loop
mov
and
ds
cltd
nop
mov
imul
adc
cmp
jmp
sub
cmp
push
loope
in
cmp
mov
mov
subps
pop
mov
inc
hlt
pusha
mov
sub
mulb
add
pop
inc
ret
push
imul
jne
sbb
rcrl
inc
test
xor
cmpl
shrb
mov
data16
aad
cmpsb
cld
into
dec
negb
int
repnz
xchg
sbb
push
fstps
arpl
aad
nop
hlt
xlat
aas
dec
sbb
xchg
subl
inc
jp
adc
into
imul
push
and
xchg
jge
jmp
repz
xor
mov
ret
mov
cli
fs
xchg
popf
xchg
ja
mov
into
fwait
jg
in
dec
lcall
cli
xorl
sub
mov
cmc
out
jmp
mov
fwait
mov
cmp
jmp
in
popa
neg
jnp
mov
sub
sub
push
pop
inc
xor
sbb
mov
and
pusha
das
push
loop
push
test
out
push
inc
popf
rcrb
and
ss
loop
ss
movsl
sbbl
sub
test
pop
por
imul
enter
ficoml
push
xorl
aas
gs
push
xor
test
jne
pop
xor
lcall
add
cmpsl
and
push
jno
jmp
xchg
push
leave
mov
cld
movsb
call
test
mov
or
jg
push
jp
xlat
mov
cbtw
outsl
js
xchg
cwtl
mov
int
push
bound
fwait
sbb
add
or
jno
scas
lret
mov
insl
add
cmpsl
in
jg
popa
xor
cli
push
mov
sbb
adc
sbb
daa
mov
adc
aad
sbb
sub
adc
pop
jl
les
mov
dec
xchg
shlb
ret
out
push
mov
ss
jbe
cmp
and
pop
jl
push
pop
in
gs
mov
mov
xor
iret
leave
pop
sahf
adc
fisttpl
add
xchg
sbb
and
jno
sbb
push
cmp
or
and
mov
fstpl
inc
sub
dec
fistl
inc
adc
aam
and
mov
hlt
push
arpl
inc
ret
push
jb
pop
pop
nopl
push
cmpsl
enter
cmp
xchg
inc
adc
stos
mov
or
mov
test
dec
int3
jecxz
inc
mov
jns
push
ja
sti
cs
decb
push
jmp
test
movsl
mov
addr16
gs
sbb
je
push
fstl
daa
loopne
jmp
dec
aaa
andl
icebp
cli
outsb
cmp
jl
cmp
xchg
mov
movsb
add
iret
out
cmpl
faddp
fwait
xchg
adc
fildll
lods
outsb
iret
and
xor
mov
test
sub
repnz
adc
jle
lcall
movb
and
div
jb
cmp
add
ljmp
and
in
or
fadd
adc
iret
loopne
andl
jae
jb
aaa
je
push
mov
jne
inc
or
xchg
and
push
sahf
cmp
push
hlt
bound
cmovo
jmp
aas
cli
mov
nopl
stc
fwait
jno
xchg
xchg
aam
stos
in
mov
ljmp
sbb
arpl
xchg
mov
nop
dec
mov
or
add
push
and
lods
daa
in
push
push
and
mov
ja
mov
mov
xchg
es
jecxz
lea
xor
jmp
loop
lret
add
and
and
mov
mov
in
movsb
mov
inc
mov
insl
test
leave
clc
pop
xchg
call
xchg
xor
add
sub
mov
gs
leave
add
add
or
and
sahf
add
xchg
mov
push
enter
scas
movsb
inc
sbb
cs
sbb
pop
or
ficoml
or
outsl
adc
cld
xchg
repz
and
dec
add
xor
pushf
or
pop
xor
sub
test
out
int3
test
cmovb
lock
subb
loope
pushf
mov
mov
xlat
testl
and
jge
sbb
movsb
jbe
mov
pop
mov
and
jmp
ret
mov
pop
lea
sub
data16
pop
cwtl
mov
mov
cmpsb
hlt
outsl
pop
inc
cld
daa
loope
std
mov
cmc
dec
addr16
jmp
add
js
insl
fidivrl
call
jnp
push
adcb
movsl
dec
cs
outsl
xchg
enter
je
fst
xchg
test
test
dec
push
pop
mov
dec
sub
and
mov
sub
test
call
in
cmpsb
loopne
add
lods
mov
cmp
out
mov
cld
shrl
xor
dec
stos
pop
cmp
hlt
hlt
jp
cmpsl
and
aam
push
dec
push
xlat
cltd
das
int
stos
out
xchg
mov
fisttpll
iret
test
jmp
or
hlt
ret
loopne
fnsave
fs
fsubrs
xchg
xor
mov
out
pop
fiaddl
scas
and
repnz
xchg
mov
mov
decl
das
xor
adc
aas
lahf
cmp
fcomps
in
jnp
xor
or
lods
xchg
mov
sbb
pop
lds
fdivrs
mov
sti
dec
repnz
xlat
mov
push
sarl
push
int3
push
out
shll
inc
add
xor
movsl
movl
push
or
sub
cmpsb
jmp
stos
sub
mov
lahf
xor
ret
adc
ret
push
adc
pop
lods
in
pop
popa
sub
adc
pavgw
mov
cmpsb
out
jp
push
ss
sbb
pop
sbb
mov
ljmp
pop
ja
push
or
fnstsw
or
sbb
mov
cmp
jmp
xor
into
jmp
les
sarl
jge
scas
fdivrl
into
push
lds
outsl
xor
pop
or
in
push
lds
pop
shlb
pop
push
out
push
dec
xchg
mov
gs
lds
cmpsl
cmp
insb
mov
pop
mov
sub
icebp
xor
sbb
into
inc
pop
jbe
scas
popa
sbb
jmp
xchg
jmp
jl
repnz
scas
sti
mov
inc
in
call
jb
dec
pop
or
filds
push
adc
mov
mov
xchg
rclb
cmp
icebp
movsl
and
pop
dec
insb
loop
shlb
mov
pop
jno
jge
ljmp
mov
jge
cmp
jo
arpl
adc
lret
dec
hlt
sbb
daa
adc
adc
mov
pop
aaa
jbe
xor
orb
mov
mov
cmc
cwtl
mov
sub
pop
cld
dec
xchg
popf
insl
fildll
jp
or
jg
jbe
stos
jecxz
xor
and
sub
test
aaa
sarl
xor
fsubrs
or
aas
rclb
add
push
or
sub
xchg
shrl
sub
add
mov
adc
mov
mov
xor
mov
add
and
add
enter
mov
jno
xchg
data16
mov
scas
mov
xchg
jl
ret
push
loopne
aas
pop
in
pop
xor
into
cwtl
mov
int3
les
xchg
rcrl
and
and
mov
inc
adc
push
inc
xchg
mov
and
mov
xchg
nop
aaa
test
mov
jo
jmp
nop
pop
xor
add
fnstenv
fstpl
cmp
loope
jb
cli
sbb
decb
insb
in
sbbb
adc
sbb
xchg
inc
mov
jb
les
push
sbb
mov
jb
mov
imul
pushf
repnz
clc
dec
dec
incl
jl
add
pushf
jnp
gs
aaa
dec
pop
rorl
adc
jb
dec
push
cli
xchg
or
in
jmp
pop
inc
push
cmp
pop
out
in
xchg
and
or
xor
mov
mov
loop
lret
nop
cld
int
in
xlat
pusha
hlt
iret
cmp
outsl
jp
push
nop
shl
jl
shll
cmp
hlt
cld
add
cmc
jmp
xchg
xor
xchg
imul
cmp
cld
dec
in
mov
jg
fcmovnb
mov
dec
sbbl
xchg
iret
pop
mov
flds
xchg
lret
inc
out
cmp
iret
mov
mov
and
leave
repz
xchg
push
or
outsl
cmp
jecxz
jne
xlat
jb
mov
sti
lahf
xchg
clc
mov
mov
rcr
add
cmp
mov
aas
xchg
fdivs
aas
daa
inc
jmp
out
mov
das
push
mov
cmp
pushf
out
xchg
push
scas
int3
loop
pushf
imul
mov
inc
lret
stos
push
icebp
jp
int3
fsubrl
lahf
mov
popa
out
imul
movsl
dec
pushf
inc
mov
out
adc
jp
jle
mov
hlt
inc
add
push
mov
cmc
scas
add
into
xor
ret
cpuid
push
out
jmp
and
in
shll
int
jecxz
xchg
xlat
mov
test
leave
jp
inc
pop
push
push
sbb
inc
mov
jecxz
mov
mov
dec
mov
mov
negl
ucomiss
xchg
pop
stos
sbb
pop
cld
insl
lahf
aaa
scas
mov
inc
xchg
adc
js
outsb
aaa
pop
shl
leave
mov
push
mov
cli
loopne
add
out
cli
mov
insl
inc
xchg
sbb
jo
mov
push
xor
mov
add
aas
and
cmp
fwait
and
dec
or
mov
pop
icebp
cmp
and
jge
cmpsl
scas
push
shlb
add
fwait
sbb
movsl
xchg
enter
js
mov
inc
push
cmpl
mov
pop
sbb
and
test
inc
fcoms
push
aaa
cmp
aaa
mov
push
nop
dec
aam
je
pop
hlt
cmp
xor
mov
or
or
rcrb
aaa
add
xlat
add
pop
cltd
and
daa
daa
out
and
pop
mov
lea
xchg
outsl
imul
mov
lods
cmp
loope
cmp
es
cmp
jo
scas
cmp
leave
mov
pop
jl
mov
sbb
outsb
jmp
mov
imul
loope
test
in
fs
adc
and
jge
test
mov
lods
into
lods
mov
dec
mov
les
imul
cmp
add
es
in
adc
or
push
or
ja
clc
daa
mov
cwtl
mov
daa
cmp
mov
dec
mov
push
test
js
cmp
popa
push
das
inc
mov
xchg
test
cmp
cmpsb
stos
mov
faddl
scas
cmp
sti
or
data16
cs
xor
test
pop
jno
xorl
rorb
fildl
push
pop
mov
inc
xchg
bound
mov
xchg
xchg
sbb
mov
fstpt
lret
jno
and
and
movsb
out
mov
mov
jo
ss
leave
call
xchg
cmp
fcmovnb
jg
or
lcall
adc
imul
lock
xchg
xchg
inc
je
adc
cmp
xchg
inc
adc
cmp
enter
jp
sbb
pop
repz
mulb
cmp
add
cli
cs
js
sbb
sub
ds
or
or
add
incl
add
add
or
nop
add
add
add
cwtl
add
add
add
add
add
or
add
jns
jae
dec
add
jae
je
push
add
add
xor
xor
add
dec
add
jae
je
xor
add
add
incl
add
add
or
nop
add
add
add
mov
xor
add
add
add
add
add
incl
add
add
add
add
add
incl
add
add
or
nop
add
add
add
fadds
xchg
add
push
ltr
add
add
add
incl
add
add
add
add
add
incl
add
add
or
nop
add
add
add
jl
mov
add
add
add
add
cmp
push
add
add
jns
jae
dec
add
jae
je
push
add
add
xor
xor
add
dec
add
jae
je
xor
add
add
incl
add
add
or
nop
add
add
add
push
add
add
add
push
add
add
ret
add
add
incl
add
add
incl
add
add
or
nop
add
add
add
and
pushf
add
add
add
add
add
add
jns
jae
push
add
add
push
add
add
xor
xor
add
push
add
add
xor
add
add
incl
add
add
or
nop
add
add
add
nop
add
add
add
add
or
add
add
add
add
jns
jae
dec
add
jae
je
push
add
add
xor
xor
add
dec
add
jae
je
xor
add
add
incl
add
add
add
add
add
add
add
jg
add
add
add
add
xor
push
add
incl
add
add
jb
and
insb
add
jae
je
add
add
add
add
incl
add
add
or
nop
add
add
add
adc
add
add
add
add
add
add
add
add
jns
jae
dec
add
jae
je
push
add
add
xor
xor
add
dec
add
jae
je
xor
add
add
incl
add
add
or
nop
add
add
add
nop
add
add
add
mov
add
add
mov
xchg
add
add
inc
add
inc
add
add
add
add
add
add
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
insl
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
je
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
mov
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
add
add
push
xor
xor
xor
xor
xor
xor
xor
xchg
xor
xor
lcall
xor
call
ss
ss
ss
ret
shlb
add
pop
aaa
sub
sub
aaa
inc
aaa
pop
aaa
xchg
xchg
aaa
xchg
aaa
pushf
aaa
mov
cmp
pusha
cmp
insb
cmp
add
add
dec
mov
dec
dec
fmul
.byte
and
daa
