or
add
push
push
je
imul
repz
fdivl
call
jns
iret
in
xor
pop
push
dec
bound
imul
pop
sbb
push
push
jns
je
insl
jmp
and
or
outsb
sbb
popa
arpl
add
lahf
int3
push
rcrb
add
dec
addl
jmp
adc
inc
je
pushf
mov
int3
mov
mov
push
lds
sub
dec
adc
fucomp
ss
pop
je
or
or
inc
dec
push
pop
push
and
leave
dec
push
daa
fnstsw
fs
sar
je
inc
add
jo
daa
daa
daa
daa
push
daa
daa
daa
test
daa
daa
daa
daa
push
dec
dec
inc
daa
daa
daa
daa
inc
cmp
xor
daa
daa
daa
xorb
sub
daa
daa
daa
cwtl
xchg
nop
and
daa
daa
daa
and
daa
daa
sbb
adc
scas
clc
lock
push
add
mov
addb
not
outsl
sub
je
movzwl
mov
ss
pop
ret
addr16
in
jbe
add
mov
clc
hlt
lock
xchg
int
out
faddl
push
add
mov
sub
xor
mov
jmp
mov
mov
jle
int
pop
mov
add
mov
push
roll
push
std
out
out
cmp
mov
or
inc
cmp
jne
mov
fdivs
fstps
mov
adc
or
and
add
push
push
sbb
dec
repz
testl
add
mov
mov
lahf
inc
add
adc
mov
insb
pop
mov
test
add
imul
mov
add
pop
mov
mov
jo
pusha
mov
inc
adc
jl
int3
pop
or
dec
add
loopne
or
nopl
outsl
mov
mov
jo
in
jbe
push
pop
push
push
repz
mov
in
pop
pop
and
mov
add
cmp
jne
xor
rcr
fistpll
inc
or
or
pop
jmp
add
cmp
jne
sti
jg
cmp
aaa
jne
mov
mov
xor
fs
loope
pop
pop
pop
pop
or
fxtract
or
fmul
lcall
jb
outsb
outsl
bound
stc
add
fbstp
push
and
xchg
pop
dec
mov
add
movhps
pop
push
cmpl
pop
mov
jne
push
add
dec
imul
push
jmp
mov
add
pop
mov
out
fildll
add
sub
mov
enter
lea
or
jmp
lret
and
std
sub
push
inc
cmp
test
add
or
adc
mov
pop
adc
jge
mov
dec
adc
pushw
push
mov
push
push
add
clc
mov
test
je
xor
in
loope
mov
orb
dec
mov
arpl
int3
pop
push
pop
subb
jnp
sti
mov
lahf
push
pop
icebp
daa
lret
and
dec
pushf
sbb
push
or
in
mov
call
xchg
cmp
sub
repz
movnti
push
adc
pop
jecxz
clc
jo
mov
cmp
imul
jae
in
sbbb
jb
lcall
jo
ja
and
jae
imul
std
or
or
push
es
loopne
rorl
std
jne
xor
movl
scas
push
jg
push
jne
push
pop
bound
xchg
je
jno
rol
cmpsb
out
inc
sub
inc
mov
fildll
leave
or
dec
lea
pop
test
rol
loope
lock
js
outsl
orl
ret
jp
and
mov
adc
cmp
jmp
or
xchg
jbe
cmp
or
push
pop
ja
or
cmp
lahf
imul
adc
in
lock
out
setp
vpcmpeqw
lock
ljmp
jb
inc
mov
add
roll
or
xchg
pop
ja
aaa
add
outsb
inc
addr16
js
insl
cmp
add
lahf
div
cs
imul
inc
mov
rol
cmp
mov
inc
cmp
jg
mov
xor
mov
testl
pop
add
or
pand
inc
mov
cmp
icebp
shrb
jne
add
fdivs
lea
and
dec
hlt
sbb
idivb
xchg
daa
push
add
mov
inc
cmp
mov
cli
adc
or
pop
out
jae
dec
into
push
sbb
pop
pushf
fldenv
or
pushf
sbb
inc
pop
mov
sub
fwait
push
add
add
or
movsb
lock
add
fimull
aas
adc
xor
or
inc
jae
icebp
or
xor
mov
mov
add
imul
lea
mov
jmp
out
pop
stc
cmp
jne
pop
jg
dec
jl
mov
pusha
mov
jo
scas
rclb
inc
lock
adc
rcll
pop
cmpsl
dec
inc
stc
lock
leave
lea
jb
pushf
add
and
sub
out
inc
outsl
mov
jbe
rcrb
pop
test
andl
xchg
pop
dec
test
je
pop
mov
andl
xor
ja
jl
rcrl
int
scas
push
mov
push
dec
jg
das
jp
push
pushl
mov
push
cmpb
data16
or
in
mov
lahf
adc
xchg
push
jge
lea
or
data16
add
inc
xor
cmp
in
std
jne
movl
mov
js
rolb
outsl
adc
mov
mov
mov
fs
mov
das
pusha
fdivr
enter
test
in
pop
pop
pop
push
cmp
scas
test
out
call
cld
xchg
mov
xor
xchg
rcr
mov
mov
mov
lea
inc
clc
jmp
pop
sub
or
popa
dec
in
mov
in
cmp
xchg
fiadds
and
mov
inc
add
and
mov
jg
xchg
arpl
rcr
pop
pop
xlat
clc
cmp
cmp
jne
add
xor
push
or
fdivs
ds
jecxz
sarb
ret
cli
add
dec
inc
clc
mov
das
mov
mov
mov
adc
xchg
xor
mov
loopne
cld
cmpsl
push
and
adc
out
mov
or
sbb
inc
cmp
pop
jns
inc
bnd
pop
add
xchg
pop
xchg
sub
lea
mov
cmp
jl
fnstcw
std
movl
rorl
mov
fisubs
adc
pcmpeqd
add
inc
xchg
mov
incl
ljmp
push
cld
call
mov
adc
mov
je
jl
or
insb
rolb
int3
fwait
or
mov
dec
add
andl
ret
push
push
push
xchg
xor
jle
inc
mov
stc
or
fiaddl
jmp
sub
ret
aas
add
testb
je
mov
sub
jle
ret
xor
jo
xchg
add
arpl
sahf
out
fdivs
div
imulb
mov
test
roll
add
and
lea
in
sub
inc
xor
lock
mov
hlt
pop
xor
jnp
lea
dec
in
push
lods
xchg
cmpl
loopne
pop
scas
rorb
xor
lock
push
push
cmp
jge
push
aad
push
dec
mov
xchg
testl
adc
xor
add
and
cmp
aad
fdivrs
dec
mov
pop
sti
push
jmp
jbe
lea
rolb
mov
mov
mov
lock
or
or
mov
mov
and
pop
mov
cmp
or
movsb
sti
jbe
ficompl
sar
loope
loope
xchg
mov
aam
sub
or
inc
aas
mov
inc
adc
popa
nop
pop
mov
sub
or
or
dec
pushf
or
push
shlb
pusha
xchg
roll
out
cltd
jg
adc
cmp
add
or
ja
repnz
es
sub
fldl
and
mov
faddl
jl
push
sub
movsl
mov
dec
adc
inc
mov
rcll
jae
ljmp
pop
add
add
repz
aas
lods
mov
xor
adc
push
lret
cmp
roll
enter
mov
mov
jo
lea
push
adc
andl
mov
pop
push
mov
jl
inc
cmp
lea
ret
pusha
or
add
insb
test
mov
mov
pop
cmp
mov
hlt
cmp
mov
hlt
out
add
int
mov
jno
jne
or
fcompl
sbb
mov
and
or
mov
push
cmp
pop
jbe
stos
les
pop
je
cwtl
jbe
push
pusha
mov
xchg
mov
pusha
sbb
cmp
mov
jmp
adc
cmp
mov
loopne
mov
or
xor
ds
add
pop
pushf
jge
or
bnd
sbb
dec
aad
jmp
mov
rorb
sub
cli
mov
and
sbb
cmpb
xchg
imul
cmp
orb
push
xor
inc
stos
negb
aad
pop
sub
mov
pop
in
push
mov
adc
or
je
jl
cmp
clc
outsb
jle
inc
cld
adc
push
test
inc
or
and
lock
incl
cld
cmp
add
jne
jg
clc
subl
stos
mov
fsubrs
in
push
sub
sbb
adc
cmpsb
sbb
lock
jne
aaa
jmp
mov
dec
lock
mov
les
insb
mov
jbe
ret
pop
pop
xor
enter
cld
test
mov
pop
sarl
sbb
shld
aad
or
mov
cmpsl
fisubrl
ret
mov
sbb
fdiv
ds
jecxz
push
mov
pop
mov
lock
add
sub
test
int3
out
or
sub
mov
mov
divb
xlat
inc
sub
adc
jne
cltd
or
xchg
or
or
push
sub
push
jns
fisttpl
pop
cmp
bound
test
loop
nop
or
dec
sbb
fdivrs
lock
std
lock
lods
add
clc
jo
and
add
fldl
add
mov
xor
mov
enter
lock
loopne
fistps
add
clc
add
or
in
cmp
add
cmp
repnz
outsb
fmull
adc
sbb
sbb
into
pop
jo
push
push
pop
roll
mov
mov
test
lcall
and
fildll
or
adc
push
push
or
out
cmp
jb
sub
pop
push
push
add
sub
or
test
testb
adc
js,pt
shrb
aad
std
mov
adc
push
sub
stc
in
sub
mov
sub
mov
cmp
jg
sub
add
sbb
leave
pop
add
arpl
sub
sub
rcll
test
and
sbb
push
mov
out
das
mov
jle
and
mov
aad
add
inc
sub
push
movsl
sub
sti
add
test
dec
add
pop
clc
ret
mov
cmp
mov
sub
sub
aaa
pusha
add
push
push
or
mov
cmp
xchg
sbb
or
test
jl
adc
sbb
jp
ret
push
rcrb
mov
jmp
cmp
cmp
push
mov
stos
push
mov
jge
lock
je
fmul
xchg
push
sbb
subl
fwait
add
inc
leave
mov
mov
xchg
test
jle
nop
call
fwait
jg
xchg
jne
mov
sbb
xor
adc
push
int3
ficomps
mov
dec
add
sar
fisttps
leave
je
test
je
push
mov
dec
inc
adc
in
in
pop
or
add
push
jmp
mov
subl
bound
idivl
daa
dec
sarb
out
mov
sbb
sub
ret
jecxz
push
cmp
int3
and
jne
dec
dec
loop
insl
xor
sti
sbb
mov
mov
out
adcb
sbb
cld
mov
jg
cmc
cmp
push
push
push
jne
mov
pop
jne
xor
das
mov
mov
out
mov
jp
aaa
mov
add
mov
inc
or
je
jb
incl
ret
sub
inc
hlt
jl
cmp
jg
add
mov
inc
rep
jmp
mov
xchg
loopne
leave
jmp
mov
jmp
mov
cmc
push
lock
jle
xchg
loopne
mov
sbb
fldln2
lcall
push
cmp
ja
je
sar
js
rep
xchg
mov
fwait
mov
xor
lea
xor
std
xor
ret
mov
inc
sub
cmp
lock
jns
pushf
xchg
cmp
mov
sub
je
dec
sub
jae
sahf
call
outsl
stos
push
sub
jmp
mov
pop
into
xchg
je
cmp
scas
xchg
adc
and
rcll
push
mov
mov
mov
or
pop
mov
inc
xor
scas
jb
or
and
jne
sub
sbb
lock
adc
jae
subl
adc
mov
jo
dec
or
mov
shl
data16
lret
or
stos
mov
stos
pop
pop
jno
xor
sbb
fstpt
fiadds
or
push
inc
clc
and
add
je
aaa
push
lcall
je
xor
ficoml
dec
and
jle
and
out
clc
mov
add
sub
or
cmp
ja
clc
add
add
ljmp
jno
mov
or
jge
jmp
inc
jmp
neg
jle
js
xchg
jle
dec
pop
sub
jmp
inc
inc
jmp
mov
dec
cmp
filds
and
add
ja
add
scas
leave
pushf
add
aad
jne
cwtl
pop
xor
mov
mov
in
mov
push
repz
sub
jbe
inc
cmp
add
dec
je
xchg
push
hlt
bound
loop
lea
fldt
call
pcmpeqb
mov
push
cmp
scas
and
lret
in
jmp
fcoms
pop
push
cltd
xchg
xor
sbb
jmp
adc
fstp
fldt
fldz
mov
add
inc
cmpsl
cmpb
sbb
leave
daa
mov
cli
or
leave
daa
lahf
inc
pushf
or
ret
mov
adc
enter
xchg
cwtl
push
and
sbb
in
pop
stc
add
mov
popf
es
test
out
sub
pop
stc
xor
mov
lds
mov
stc
lahf
incl
cmp
fidivrs
call
mov
bound
fwait
inc
cmpb
xlat
fadds
outsb
xor
xchg
pushl
pushl
test
into
sbb
rorl
mov
push
pop
test
dec
movsl
sbb
push
inc
cmp
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
mov
mov
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
sub
jg
ljmp
inc
aad
iret
decl
js
inc
mov
stos
mov
cmp
cmp
dec
inc
mov
pop
out
sub
imul
divl
jl
xor
cmp
call
push
mov
inc
mov
sti
jmp
stos
push
inc
mov
push
sbb
sarb
push
sub
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
mov
pop
lcall
repz
loope
jp
iret
inc
bound
ds
push
cmpsb
scas
mov
jmp
mov
addl
cmp
xor
in
cmp
sahf
xchg
out
cli
lcall
lock
mov
popa
mov
and
addr16
repz
mov
lcall
subb
and
and
outsb
bound
xor
and
jl
divb
sti
outsl
stc
and
clc
pop
jne
push
pop
and
lret
add
cli
push
sbb
add
mov
test
repz
lcall
dec
jbe
xor
inc
hlt
std
xor
cmp
pop
hlt
push
data16
add
inc
cmp
test
fdivs
sub
lahf
out
mov
cs
sar
xor
pop
aas
or
mov
sub
push
dec
inc
push
push
inc
push
inc
pop
inc
outsl
stc
pushl
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
or
jb
fninit
fldcw
ljmp
rcll
mov
xlat
mov
xor
mov
pop
js
addl
add
add
mov
and
mov
mov
sbb
pop
aaa
and
sbb
push
rcr
test
je
sbb
adc
movups
add
inc
loopne
xor
outsb
cmp
sbb
loopne
mov
or
push
cld
ret
test
jg
pop
sub
mov
xor
jmp
pop
or
rorb
add
mov
sbb
in
cmp
je
pop
mov
add
jae
lock
or
push
mov
mov
push
sbb
jne
jne
sar
and
lods
mov
mov
mov
cmp
cmpsl
sub
xor
jmp
stc
inc
aad
pushl
paddd
movd
and
and
jo
jmp
push
jo
sub
mov
dec
sbb
loopne
mov
pop
push
sahf
jp
adc
loop
add
xor
mov
adc
pusha
out
add
rcll
xor
mov
adc
mov
inc
sbb
jnp
insb
test
mov
inc
hlt
mov
add
setne
xchg
call
mov
add
lock
pusha
stc
lock
pop
fisttps
pop
lea
mov
mov
cmp
mov
add
jo
sbb
fidivl
push
or
jne
or
or
adc
fsubrl
int3
notb
popa
push
mov
les
loope
lock
scas
push
xchg
jmp
stos
jle
xchg
fwait
mov
push
add
repnz
je
pop
int
lock
cld
ret
pop
add
sub
mov
pop
cs
cmp
xchg
jl
pop
lret
pop
jb
push
mov
cmp
outsb
pushl
mov
cs
pop
push
and
dec
sbb
or
pop
pop
mov
mov
shl
popf
pop
fdiv
pop
fdivs
push
pop
pop
mov
jbe
push
push
ret
mov
xor
add
mov
mov
movl
add
mov
mov
push
pop
push
stos
loope
jne
test
je
loopne
pop
push
mov
push
adc
lahf
je,pt
xchg
or
adc
push
clc
clc
call
in
xlat
jg
aas
fucomp
xchg
fsubs
call
cmp
adc
push
push
loope
in
push
call
jle
aaa
les
push
pusha
push
push
cmp
jns
cwtl
or
cs
pop
cvtdq2ps
add
pop
push
push
bound
std
aas
mov
mov
cmpb
je
or
jne
movsbl
or
mov
inc
inc
jmp
add
pop
ss
sbb
push
mov
rclb
push
aas
loop
pusha
fsub
pop
mov
adc
cmp
rorb
xabort
inc
add
ja
jle
jne
fiadds
cs
je
cld
popa
and
je
popf
ror
adc
loopne
sub
cli
out
push
je
fidivs
dec
sub
pop
ja
in
aaa
cmp
out
addl
cmp
pop
jbe
outsb
into
adc
cmc
enter
adc
jne
jbe
adc
pop
test
je
orl
push
cmp
ljmp
or
push
sub
push
mov
sbb
sub
das
fidivl
mov
pop
add
inc
add
push
jecxz
pop
jo
jg
jmp
sti
clc
std
testl
and
mov
bound
pop
jp
fdivrl
pop
mov
inc
add
add
std
sub
and
int
inc
popa
outsl
cmpsb
or
shl
aas
pop
push
push
push
push
push
addl
mov
fs
das
adc
sbb
incb
inc
or
pusha
add
aas
movsb
inc
push
add
dec
add
xchg
into
adc
adc
jle
pusha
shl
lea
and
sbb
insl
inc
incl
add
loop
xor
rcll
xor
rol
or
mov
stos
add
je
cmp
mov
adc
push
sub
mov
dec
jmp
add
call
xor
push
cmp
jne
pop
in
sub
add
jmp
sub
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
sar
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
cld
push
or
push
or
pop
add
mov
push
push
sbb
xor
jno
jmp
push
mov
std
lahf
mov
pop
cwtl
cmp
push
adc
inc
sbb
popf
rclb
stos
sti
into
outsb
out
push
inc
sti
and
inc
xchg
pusha
sbbl
xor
inc
outsb
or
sbb
mov
enter
push
jl
jo
aas
mov
cmp
std
outsl
mov
repnz
cmp
jne
jne
and
xor
mov
pop
mov
mov
movsl
leave
and
addb
xchg
dec
mov
and
fdivrs
inc
fcomp
dec
push
add
push
clc
xor
in
lret
loopne
adc
pop
sub
mov
je
pop
adc
mov
inc
xor
xchg
push
cmp
push
inc
mov
hlt
add
fistpll
repz
movl
sbb
add
cmc
mov
adc
or
ljmp
movb
lods
lahf
pushf
ret
cs
out
andb
je
add
push
sbb
add
ss
scas
jbe
decl
jmp
pop
addr16
add
mov
dec
or
lret
mov
js
push
sbb
sarb
add
cltd
idiv
add
js
mov
push
add
imul
dec
mov
mov
push
rolb
xchg
mov
fucomi
xor
push
ds
adc
loope
sbb
add
rolb
add
pushl
add
aaa
xor
mov
movsl
pop
leave
call
hlt
lods
push
sahf
inc
jns
cmpw
adcb
and
mov
or
aam
subl
cmc
repz
jl
fimull
lar
cmp
ret
mov
add
imul
test
sarl
xchg
mov
pusha
add
fsts
addr16
ds
push
cmpl
push
add
inc
mov
jo
clc
fistpll
or
in
inc
sbb
mov
cwtl
scas
std
fdivrl
sub
daa
push
jne
ds
in
icebp
push
mov
add
push
mov
xor
icebp
push
mov
mov
jne
cmp
je
lods
je
ds
push
cmp
add
xchg
jbe
mov
fiadds
cmp
sahf
adc
pop
clc
sub
mov
mov
sub
dec
jge
imull
ret
nop
popl
xchg
jmp
pop
shlb
decl
dec
jl
lock
clc
xchg
mov
mov
push
sbb
add
or
fimull
cmp
outsb
jle
inc
jg
insl
filds
test
inc
xor
push
dec
cld
xor
pop
jmp
jbe
xchg
adc
push
stos
jl
xchg
jle
outsl
cld
incl
push
add
and
push
sub
int
jl
movw
pop
mov
sub
jne
loope
jle
cwtl
mov
mov
das
stc
mov
iret
jp
loopne
or
mov
cmp
xchg
call
push
push
push
push
or
push
adc
scas
mov
add
or
push
negb
add
bound
mov
fdivrs
mov
in
icebp
jmp
lea
cmp
push
cmp
pop
mov
inc
loop
sbb
enter
jnp
jns
ja
mov
and
fldl
fistpl
xor
sahf
cmp
sbb
add
cmp
clc
aam
push
mov
mov
or
and
or
pop
cmp
xchg
or
je
add
cmp
addb
mov
pop
sub
jmp
in
lahf
pop
sub
and
pop
pop
or
push
mov
addr16
in
add
lahf
je
cs
or
nop
push
push
idivb
mov
mov
adc
scas
sbb
pop
add
pop
pop
xor
imul
outsl
pop
xorb
lcall
je
mov
jns
push
cld
add
cmp
adc
jle
dec
and
es
roll
pop
daa
test
stc
sahf
xchg
pusha
cmp
je
mov
loopne
cmp
jbe
sub
sbb
pop
jno
loop
dec
scas
rorl
add
idivb
repnz
mov
cli
lds
push
sbb
pop
push
mov
dec
clc
mov
jecxz
gs
lret
mov
fiaddl
incl
adc
or
int
cmp
repnz
dec
jmp
push
sub
outsb
xchg
or
push
cmp
sbb
dec
jne
mov
pop
add
ja
jge
and
aaa
add
dec
jmp
out
rolb
inc
pushf
sbb
shll
dec
jne
mov
or
and
outsl
cld
sbbl
lea
jmp
inc
out
call
rclb
push
incl
cld
sub
ja
add
push
shr
mov
mov
cmp
or
cmp
jne
dec
je
fadds
sbb
mov
or
loop
push
adc
add
lcall
and
inc
pop
cmp
jne
test
mov
or
and
imul
or
add
jmp
shr
aam
adc
sti
fists
pop
or
jmp
sbb
xlat
gs
std
dec
enter
cmp
pop
imul
fimuls
sahf
adc
pop
adc
dec
inc
push
pop
mov
push
std
sub
xor
push
inc
sar
dec
jl
cmp
jge
sub
xchg
inc
jg
xor
adcb
repz
shr
in
fldpi
jmp
inc
pop
icebp
sbb
fimuls
mov
push
not
mov
sbb
adc
adc
or
rorl
add
das
test
ljmp
rol
dec
rolb
dec
mov
or
sub
ret
loopne
adc
sbb
loopne
insb
mov
jo
mov
test
hlt
jmp
rclb
arpl
cli
addb
pop
clc
cmp
jl
icebp
pop
adc
pop
inc
int
push
push
and
and
in
loopne
sbb
push
das
dec
pop
push
lret
decl
push
sub
add
in
out
cmp
adc
scas
mov
imul
loopne
adcb
inc
jno
mov
test
pop
pop
call
jle
xchg
jmp
mov
add
xchg
adc
and
xor
dec
shrl
dec
push
xor
das
int3
pop
pushl
mov
and
iret
sub
add
and
xchg
inc
lods
add
add
test
add
inc
call
adc
pop
push
push
push
inc
push
and
mov
fwait
pop
add
callw
push
shll
mov
pop
das
or
adc
loop
adc
int3
stc
add
inc
outsl
mov
pop
adc
sti
add
push
or
adc
dec
cmp
nop
pushf
lcall
loop
std
xchg
sub
cmp
push
lods
add
push
adc
loop
or
mov
lea
sahf
inc
xor
and
scas
dec
adc
fadds
addr16
sahf
push
jg
push
push
cwtl
cmp
loope
cli
push
mov
push
lea
pop
adcb
jl
push
mov
mov
ljmp
repnz
call
adc
mov
call
test
jne
rcrb
mov
mov
cmp
and
cmp
hlt
cmp
xor
cmp
je
cmp
pop
test
push
mov
mov
aas
mov
pop
test
int3
jg
lds
mov
ja
mov
pop
int3
cmp
popl
xor
push
outsb
es
add
pop
mov
insb
dec
repz
push
mov
mov
sub
pop
mull
mov
pop
jmp
cmp
je
xor
sub
pop
lea
cmp
sbbl
cmp
adc
xchg
sub
adc
incl
push
pop
add
mov
lea
clc
outsl
pop
popa
outsl
cld
or
clc
push
push
add
sarl
ret
pop
sbb
fidivs
mov
fwait
fwait
pop
ret
cmp
xor
or
je
or
fwait
push
push
je
pusha
adcb
adcl
inc
lds
sbb
aaa
xlat
jmp
and
in
lea
mov
dec
ss
adc
lock
iret
adc
dec
clc
or
dec
aaa
mov
jmp
aas
add
jns
int3
inc
push
imul
mov
sbb
ds
cmp
fs
pop
loopne
jne
data16
jno
add
dec
sub
out
mov
mov
in
inc
push
or
test
pushf
jno
test
sti
push
cmp
out
sub
fwait
xor
rorl
sub
jmp
cmpsl
std
es
mov
dec
xor
add
mov
or
ja
sti
add
add
inc
ljmp
mov
stc
icebp
mov
jo
add
je
int3
andl
inc
sbb
sbb
adc
in
lock
lods
nop
mov
push
jmp
mull
mov
clc
push
fnstcw
fs
add
jb
lret
cld
push
ret
pop
pop
xchg
cmp
dec
xor
outsb
or
pushl
cmp
mov
mov
push
inc
cmpsl
dec
in
dec
sahf
rorl
xchg
lods
arpl
call
pop
mov
push
sbb
add
cmp
xor
jo
jmp
cmp
call
ss
lahf
cmp
movzbl
add
add
jo
push
push
fmulp
das
rorl
jge
pop
movsb
push
imul
mov
js
lock
xchg
or
cmp
inc
xlat
dec
fists
cmp
jle
lahf
sbb
shr
decl
imul
add
mov
sub
pop
lock
lods
pusha
and
fnstsw
jmp
push
call
jge
cmp
jge
jbe
loope
mov
cltd
sub
mov
xor
dec
sbb
ss
sub
rorl
loopne
or
push
inc
dec
push
into
mov
inc
inc
or
mov
dec
adc
cmp
pop
div
xorl
sbb
shrl
xlat
mov
or
add
mov
hlt
add
or
mov
fs
xor
and
lea
div
daa
push
add
jne
aad
mov
mov
lret
rclb
lds
scas
xor
test
or
lock
jne
mov
cmc
push
sub
or
pop
mov
inc
push
dec
push
sbb
pop
and
aam
push
dec
add
jecxz
inc
push
push
mov
incl
das
pop
pop
out
das
lods
lock
xor
movsb
pop
pop
inc
jecxz
cmpl
ret
daa
sub
clc
sub
cmpl
push
add
or
mov
les
fsubr
mov
xor
push
sbb
fiaddl
or
jbe
pop
iret
cmp
mov
mov
sub
sub
imul
or
call
inc
mov
sbb
aad
sti
mov
pop
das
add
insl
push
xchg
lea
pop
lock
js
mov
sbb
int3
jle
push
add
jmp
adc
pop
incl
push
sub
mov
push
shll
iret
test
rclb
pop
cld
mov
clc
push
sub
cmp
jge
cmpb
inc
vmread
pop
int3
daa
and
je
jle
into
add
sti
xchg
inc
sbb
in
pop
or
jo
addr16
xchg
sub
lea
shr
loope
andl
pop
jge
sub
cmpsb
xchg
sbb
inc
cmp
gs
inc
push
inc
jno
jne
stos
mov
movsb
push
andl
push
aas
pushf
push
std
imul
add
insl
out
jbe
jg
movb
ret
dec
push
push
inc
pop
fildl
inc
popa
mov
sbb
roll
stos
or
and
outsb
gs
xor
cs
insb
incl
loope
jmp
dec
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
daa
scas
fdivr
sub
loop
push
fucomip
adc
ljmp
inc
out
and
push
arpl
lods
and
push
add
inc
add
ja
and
or
jns
loopne
cmp
je
mov
pop
push
cmp
call
push
inc
sti
int
push
jbe
sub
add
sbb
or
push
repnz
and
sti
dec
cmp
cmp
push
lods
repz
jo
jne
in
mov
inc
int3
stc
out
cmpsb
dec
outsb
jge
test
or
push
jmp
jnp
xchg
pop
repnz
mov
add
arpl
in
je,pn
inc
cmp
jne
adc
in
inc
xchg
out
sub
pusha
rcrl
and
inc
inc
in
dec
jne
in
flds
or
repz
ss
jae
cmp
ret
iret
push
outsl
data16
popa
jb
xor
lret
insb
gs
aaa
mov
ret
pop
add
loope
insb
xlat
inc
mov
mov
mov
adc
or
adc
jp
adc
or
sbbb
icebp
ret
stc
je
jge
mov
jne
das
in
mov
cltd
xor
jmp
adc
jne
aas
pop
ss
jb
mov
addr16
mov
push
add
pop
cld
mov
lret
add
je
scas
and
pop
jnp
cmpsl
push
push
cli
or
or
ret
or
mov
jno
or
in
xor
fadds
in
test
and
outsb
in
or
inc
adc
push
cmp
ret
or
int
or
cmc
cmp
roll
shrb
cmp
cwtl
je
scas
sub
or
icebp
xchg
or
sbb
add
sbb
or
pop
adc
sub
adc
pop
inc
mov
pop
adc
and
pop
or
mov
lahf
jbe
int3
mov
xor
jecxz
je
add
test
ret
pop
js
pop
or
aaa
cmp
push
imulb
push
add
fistps
test
xchg
add
fmull
push
mov
dec
mov
add
xor
mov
xchg
dec
inc
cmp
ja
mov
add
jmp
cmp
pop
add
pop
cld
ja
fidivl
jmp
or
mov
adc
and
sbb
fwait
divb
add
xor
aam
and
mov
imul
inc
fscale
aaa
jae
cmp
jae
cmp
jb
or
pusha
rcll
xor
and
sbb
in
dec
jbe
pop
add
cmp
or
inc
rorl
lock
and
jecxz
mov
inc
mov
shl
inc
faddp
push
or
out
cld
das
push
sbb
aam
jno
cli
mov
inc
xorl
test
stos
or
jae
testb
cs
adc
mov
and
cmp
jne
cmp
cwtl
and
clc
shl
or
mov
pop
lea
adc
out
dec
dec
cld
mov
pop
push
adc
jl
fadds
lcall
adc
or
movl
xor
dec
ret
xor
pusha
sbb
in
xorb
ja
jmp
sbb
or
jb
inc
add
jbe
stos
jge
enter
xor
push
jb
pushf
je
jno
dec
fmuls
pop
push
lret
sbb
dec
or
and
leave
in
lahf
sbb
das
inc
inc
push
and
xor
fsubrp
xchg
jle
inc
fmuls
jmp
push
mov
popa
out
movsl
xchg
push
cmp
adc
push
xor
mov
xchg
push
mov
add
fadds
and
adc
pmulhuw
inc
mov
lock
and
xor
cmp
adc
and
xorl
xor
add
insb
test
sahf
inc
in
mov
jne
cmpl
and
insb
adc
arpl
mov
push
sahf
jo
jns
xor
adcb
mov
fwait
into
scas
pop
mov
test
dec
push
push
lea
push
adc
testb
lock
psubsb
mov
mov
inc
sti
and
fmuls
adcl
lock
test
daa
cmpsb
push
xor
mov
insb
and
mov
loopne
mov
xchg
or
mov
push
mul
clc
subl
stos
inc
test
add
sbb
mov
add
test
push
inc
ja
cmpsb
and
pop
add
in
mov
cmp
adc
xchg
in
mov
cmp
add
adc
push
ret
mov
sub
and
data16
loop
push
mov
test
sub
paddq
mov
mov
lahf
mov
mov
orb
pop
fisttpll
dec
scas
mov
lods
inc
dec
movsl
lock
mov
loope
out
mov
mov
mov
sub
ja
push
and
mov
sarb
cmp
ret
mov
push
pop
and
ret
mov
inc
push
jo,pt
stos
arpl
mov
andb
sub
cmp
or
mov
clc
push
sub
pop
mov
xchg
cmp
fwait
fs
mov
adc
sub
mov
insb
lock
pop
movsb
mov
mov
xchg
push
push
dec
dec
xchg
xchg
xchg
xchg
inc
inc
cmp
xchg
xchg
xchg
xchg
xor
sub
xchg
xchg
xchg
xchg
and
sbb
xchg
xchg
xchg
xchg
adc
or
leave
enter
add
mov
leave
hlt
lock
call
in
leave
leave
leave
leave
aam
int3
enter
leave
les
je
repnz
in
fs
sbbl
mov
movsb
cmp
pop
imul
in
in
repz
cmc
in
in
div
clc
stc
in
in
cli
sti
cld
std
in
in
jmp
loope
in
in
jecxz
in
in
in
out
jmp
ljmp
in
out
rcl
in
in
rcl
aam
in
in
xlat
fcomp
in
in
fcmovu
in
in
rol
in
in
ret
in
mov
leave
in
in
lret
int
in
in
iret
mov
in
in
mov
mov
in
in
mov
mov
in
mov
in
mov
jb
jb
mov
jb
jb
cmpsl
test
orb
mov
or
pop
je
mov
jmp
mov
jl
popl
aaa
mov
lods
jo
femms
add
mov
inc
js
gs
imul
stc
mov
pushf
pop
fisubl
jb
mov
jo
nop
lods
mov
and
pop
or
dec
mov
je
dec
gs
outsl
jb
pop
or
cmpsl
sbb
pop
outsl
aas
or
mov
mov
pusha
scas
pusha
lods
push
ret
or
push
je
inc
stos
pop
push
popa
insb
scas
mov
test
xlat
add
rorl
popa
mov
jo
or
sbb
scas
push
leave
leave
inc
jo
or
inc
repnz
imul
outsl
nop
enter
mov
and
inc
or
inc
and
inc
jnp
dec
outsb
jbe
jb
insb
outsl
ja
mov
add
leave
jl
pop
dec
pop
in
add
pop
gs
aam
aam
lods
xchg
daa
xor
jbe
mov
ja
imul
sub
push
push
xchg
insl
jle
enter
test
mov
rcl
scas
mov
andnps
jb
add
mov
xor
sysenter
fs
ret
xor
imul
mov
or
mov
mov
popa
jae
lea
cmc
adc
inc
inc
mov
aad
dec
shrb
push
and
dec
adc
arpl
add
push
jae
push
adc
inc
dec
and
push
test
test
in
stos
pop
pop
push
jb
insb
gs
nop
add
sub
inc
push
je
arpl
mov
add
inc
xchg
or
je
insb
inc
and
lods
mov
popl
mov
popa
outsb
adc
mov
in
mov
das
push
inc
addb
mov
add
cmp
jb
jns
int3
mov
inc
enter
loope
push
push
data16
sub
add
or
jbe
pop
push
stos
xchg
scas
push
or
mov
jg
cld
popa
data16
cwtl
jle
add
aaa
xor
mov
dec
invd
push
push
inc
xor
out
inc
cmp
add
cmp
mov
subb
inc
xchg
or
fldt
push
push
push
pop
push
fs
les
int3
add
mov
test
shrb
jl
sbbl
aam
sahf
out
lret
aam
jae
jge
push
incl
out
pop
popa
xchg
adc
sbb
mov
loopne
sbb
mov
push
add
aas
xor
adc
push
or
push
dec
jne
pop
or
insb
push
mov
fsubs
xor
push
fadd
lods
outsb
arpl
cmp
fdivrs
bound
add
shr
div
test
shrb
add
out
cmc
lahf
pop
pop
push
jle
lret
mov
mov
mov
or
loopne
mov
sbb
jl
outsl
pop
test
xlat
adc
decl
cli
cmp
fcoms
cmc
xchg
sahf
xor
inc
clc
and
mov
add
push
cmp
ja
sub
mov
cmpsl
test
mov
jmp
adc
and
lahf
test
inc
inc
pop
add
cmp
insl
pushf
push
or
or
cmp
jbe
nop
fwait
aam
leave
repz
je
mov
in
or
jle
add
out
mov
call
fstpt
out
and
sti
je
movzbl
add
sub
pop
out
xor
rcrb
pop
lcall
cmp
push
add
mov
nop
ret
daa
mov
push
and
ret
pop
ret
ljmp
dec
cs
addl
add
add
mov
inc
sub
inc
add
and
rcrb
mov
mov
lods
xor
mov
jl
cmpb
jbe
adc
or
jge
dec
sub
clc
push
sub
inc
repnz
add
jno
mov
or
jne
pop
add
out
sarb
cld
pop
lcall
ret
mov
inc
cmc
push
xor
div
jle
xor
sbbb
pop
mov
movsb
ljmp
jg
pushl
add
mov
sub
jmp
mov
dec
jne
push
mov
sub
xor
push
outsb
push
push
sarb
test
sarb
xor
add
pushl
mov
div
adc
ret
cs
pop
and
mov
ljmp
mov
add
push
shr
cli
cmp
orw
sub
mov
lret
pop
mov
mov
andl
jg
or
fildll
fistps
ret
add
outsb
jmp
fildll
filds
rorl
fdivr
mov
adc
xor
lods
push
sub
or
fnstsw
sahf
jae
fldcw
jbe
ret
ffree
fstl
ffree
pop
aad
add
test
xor
scas
frstor
push
cmp
addl
or
lock
or
out
add
sub
inc
push
push
mov
loop
and
aam
jo
mov
in
iret
cld
cwtl
stos
push
pop
pop
push
adc
cmp
cmp
sbb
mov
test
loopne
sub
mov
xchg
push
cmp
and
mov
bound
mov
test
pop
add
mov
inc
pop
add
inc
popa
insb
jae
call
inc
call
clc
test
jl
inc
js
push
mov
adc
sbb
cmp
jmp
or
jnp
jecxz
push
adc
fwait
cmpl
lea
jmp
jo
mov
sbb
das
add
adc
insl
lock
setne
jmp
pop
sbb
inc
xchg
inc
push
dec
rclb
dec
pop
sti
jnp
aam
addr16
inc
test
cltd
nop
test
dec
ret
js
out
ja
pop
sahf
mov
xor
icebp
bound
xchg
adc
adc
jecxz
adc
jmp
and
rcl
in
xchg
sub
jg
add
in
sub
or
mov
ja
push
incl
add
xor
inc
ja
cmpsb
jle
pop
mov
add
sbb
aaa
outsb
sub
inc
mov
lret
push
mov
ja
popa
daa
ror
push
jae
imulb
orb
sbb
fbld
xchg
push
mov
cmp
shrl
ss
lock
pop
in
add
fidivl
in
sub
je
imul
mov
rcll
xor
push
iret
ret
aas
dec
clc
scas
jbe
subb
push
sub
in
pop
dec
cmp
je
inc
idivb
fildll
push
push
enter
push
sub
hlt
and
dec
inc
cld
mov
punpcklwd
adc
and
sbb
jle
inc
inc
jno
mov
out
dec
jge
pop
pop
jmp
pop
lcall
dec
jo
sbb
jg
or
xor
popa
mov
jb
sbb
jne
mov
dec
cmp
add
insb
dec
xchg
std
orb
pop
pop
cmp
and
xor
push
andb
mov
les
ja
inc
or
jl
push
push
scas
orb
jg
sub
dec
jbe
imul
aaa
xor
xchg
xchg
xor
pushl
add
push
push
xor
fs
outsl
mov
js
daa
jmp
jne
imull
inc
call
dec
adc
call
mov
lods
mov
add
lret
shll
adc
ret
aad
add
adc
sub
pushl
mov
mov
cs
push
mov
lods
pop
xor
lret
dec
decb
sub
add
lret
mov
mov
mov
push
push
nop
pop
pop
pop
out
imul
xor
or
pusha
pop
sub
mov
lahf
das
cld
xor
mov
cmp
cli
ljmp
shlb
sahf
int3
fs
mov
add
or
mov
adc
cmp
jne
push
das
and
pop
andb
mov
sti
outsl
aam
rorl
cs
mov
pop
sub
jbe
sbb
pop
incl
lods
jl
mov
push
sbb
insl
cld
popf
enter
in
lea
mov
out
push
inc
cmp
mov
pop
sbb
test
mov
movsl
fs
into
xchg
enter
arpl
pop
aam
rcr
clc
movsb
pop
jbe
mov
inc
imul
add
adc
add
cmp
or
mov
shlb
movb
push
shlb
mov
cmp
pop
ljmp
mov
add
and
mov
call
pop
aaa
mov
outsl
mov
xor
rclb
inc
add
add
jno
fdivrl
adc
mov
or
mov
dec
jne
mov
sub
push
call
push
jmp
mov
cmp
jne
sub
sti
imul
mov
jne
cs
and
lods
jmp
adc
mov
inc
mov
js
mov
popa
pushw
mov
mov
ljmp
sub
jae
rcr
mulb
movsb
xchg
pop
mov
rep
sbb
sbbl
xchg
aam
lock
gs
jo
in
pop
pop
mov
sub
decl
cmp
imul
mov
add
and
mov
int
in
dec
jp
push
mov
adc
push
cld
or
lret
add
and
xor
jmp
cmp
pop
or
or
xor
mov
lcall
jbe
es
out
ja
pop
es
pop
repz
push
lret
ss
jo
leave
outsb
cmpsl
push
lock
in
sub
icebp
xchg
jle
fsubrs
shl
cld
lret
push
lea
fcompl
jb
loope
jb
jmp
cmc
xchg
and
sbb
or
jbe
cmpsl
shr
mov
cmpsl
pop
outsb
adc
cmp
mov
aas
pushf
and
cmp
jne
mov
pushw
mov
jns
stos
xor
lock
xor
inc
inc
lods
lods
and
adcb
aam
mov
inc
pushf
repnz
jne
aas
and
jb
cmp
push
mov
add
shlb
cmp
ja
or
push
mov
jecxz
dec
les
aad
stc
jo
ds
leave
adc
pop
dec
xor
inc
mov
add
inc
insl
mov
mov
or
je
mov
inc
je
mov
dec
je
mov
jl
mov
mov
ret
rolb
jne
xchg
adc
cli
movsb
fdivrl
mov
clc
adc
jp
mov
xchg
mov
inc
iret
dec
push
cmp
xchg
ret
xor
and
mov
mov
rorb
cli
adc
mov
sbb
sub
out
ret
lret
xlat
outsb
add
gs
loope
xchg
repnz
add
mov
lahf
push
push
xchg
into
adc
mov
or
inc
jl
aam
ja
inc
push
cmp
aam
sub
xor
clc
out
js
clc
or
jl
mov
dec
cmp
jl
jmp
add
sti
movb
mov
and
std
mov
xchg
jne
pop
xlat
ret
inc
daa
cmp
jge
add
add
add
stos
or
incl
je
bound
add
push
mov
neg
jmp
mov
jg
or
jo
loopne
xchg
push
mov
mov
push
sbb
mov
inc
dec
mov
clc
dec
jg
dec
mov
stos
cmp
jne
pop
pop
aam
mov
lock
mov
mov
jle
cli
mov
jl
mov
mov
adc
push
sub
or
jne
es
add
aas
into
mov
pop
mov
cmp
fcoml
add
fdiv
addb
repnz
insb
into
jge
movzwl
iret
icebp
or
jae
xor
imul
std
and
and
mov
push
scas
sub
adc
add
mov
or
or
mov
add
sbb
add
loopne
call
or
shl
cld
xchg
idivl
icebp
xor
scas
aam
jl
dec
inc
dec
inc
dec
lods
or
xor
xor
jge,pt
nop
jo
ret
decb
in
std
mov
aam
mov
stc
std
jl
mov
fcomps
pop
sbb
pop
cmp
xor
stos
jmp
jmp
mov
loop
mov
adc
pop
pop
inc
clc
dec
lret
sub
push
mov
mov
mov
rorb
jbe
sub
stos
lea
add
leave
mov
mov
mov
rcl
dec
push
loopne
in
cli
adc
lahf
add
xchg
jmp
push
jge
add
scas
je
mov
dec
pop
div
mov
adc
test
jne
sbb
adc
imul
jmp
adc
sti
add
js
js
je
inc
jne
pop
pop
test
ret
inc
repz
or
repnz
push
cmp
cs
mov
jl
mov
sbb
inc
je
inc
cmp
push
add
or
or
add
jne
jle
movsl
loop
loop
mov
test
jl
jbe
mov
and
inc
add
and
and
adc
and
sub
inc
sub
sub
scas
xor
sbb
and
sub
jae
outsl
adc
xor
dec
xchg
jmp
sub
xor
andl
outsl
repz
inc
outsl
sbb
insl
inc
push
dec
xchg
and
and
add
and
inc
push
repnz
das
std
push
cltd
add
call
inc
inc
push
sub
je,pn
enter
imul
adc
lahf
add
out
fabs
push
mov
mov
ljmp
or
fstps
mov
testb
mov
or
mov
lcall
call
mov
sbb
inc
sub
nop
shr
and
add
push
outsl
mov
stos
mov
add
jns
pushl
into
push
insl
push
cmp
pushf
or
cmpb
mov
and
dec
js
decb
and
pop
data16
fisttpll
or
leave
jmp
mov
add
faddl
je
notb
adc
ljmp
push
out
or
fs
insb
call
add
cmp
stos
ds
je
das
jo
out
into
neg
sbb
or
or
jge
das
jo
outsb
adc
jl
mov
filds
jl
sbb
jae
dec
add
fisubrl
loopne
push
in
insl
or
and
pop
or
mov
aaa
jle
sbb
lcall
sbb
sub
push
pushf
and
jne
dec
sub
cmp
cwtl
call
aas
and
sub
ja
inc
ljmp
enter
cmpb
sub
adc
divl
pop
jmp
icebp
pop
pusha
sub
jecxz
jb
pop
inc
mov
push
jns
mov
fnclex
fldcw
cmpsb
outsl
dec
outsl
mov
ljmp
lods
or
pop
inc
cmp
outsl
out
cmp
or
adc
ret
cmp
icebp
je
and
fistpll
cmc
jo
add
ret
jne
mov
sahf
jmp
inc
push
aam
fs
add
loopne
adc
aas
jmp
fstpt
imul
add
test
insl
and
push
push
add
out
int
cmp
mov
ljmp
pminub
inc
dec
add
fldpi
ljmp
loopne
incl
push
push
inc
imul
push
cmp
push
nop
jb
aaa
add
sub
out
rcr
mov
cmp
sbb
mov
rcll
push
xor
push
pop
fists
add
or
pop
lock
mov
mov
and
das
xor
aam
fldt
xor
fwait
push
push
fldcw
mov
out
add
mov
jle
ret
or
mov
sub
jb
fwait
pop
pop
adc
fnstenv
divl
push
adc
and
push
mov
hlt
mov
dec
or
or
sarl
dec
or
cmp
inc
stc
jmp
adc
inc
sub
jae
movzwl
jmp
mov
add
shrb
pusha
ljmp
dec
shr
add
std
lret
js
xchg
fildl
xor
fstpl
fwait
sbb
pop
arpl
nop
call
dec
outsl
and
jne
cli
pop
mov
xchg
clc
mov
jo
lea
ds
mov
loopne
xor
mov
push
cmp
fnstcw
cld
call
popa
mov
push
enter
loopne
xchg
add
mov
jg
shl
testb
nop
add
or
xchg
jne
out
das
xchg
push
push
push
cmc
jb
xchg
div
jb
pushf
jg
add
add
aam
icebp
maskmovq
testl
ja
daa
loope
jb
or
ja
sti
sti
xchg
push
imul
sarb
pop
inc
ja
sbb
pop
add
xchg
sub
divps
dec
incb
jne
into
dec
mov
dec
cltd
push
add
idiv
imul
in
jbe
aas
add
sub
ds
ds
add
pop
ret
inc
sbbl
sub
rcrl
sub
pop
pop
in
and
xchg
popa
shl
dec
call
cmp
jecxz
int3
push
clc
hlt
mov
push
insl
or
push
outsb
je
pusha
and
jb
pop
inc
cmpsb
dec
or
es
stc
mov
add
jl
addl
sbb
into
add
and
pop
lock
rorb
xchg
inc
data16
insl
out
sahf
decw
cmpl
fs
jae
scas
push
fcoms
lcall
pop
test
shl
cmp
xchg
sub
xchg
sub
lds
mov
push
ret
lcall
enter
cmp
lods
dec
dec
mov
fdivrl
sbb
inc
jmp
adcb
and
mov
lcall
hlt
call
push
push
mov
je
je
fldt
cmp
pop
mov
cmp
clc
xchg
cld
mov
movsl
sub
scas
mov
imul
addr16
mov
push
and
fcomp
test
lods
lahf
jnp
enter
lea
jle
int3
or
cwtl
mov
pop
inc
add
pop
cmp
add
je
pop
aas
icebp
in
jp
mov
dec
push
rorl
aam
jle
insb
in
call
inc
xchg
mov
inc
pop
jbe
loopne
rolb
pop
inc
fstps
aad
cmpl
adc
pusha
aas
clc
imul
adc
push
sti
je
inc
rolb
cwtl
cld
inc
jo
inc
hlt
jg
and
mov
add
out
out
fidivl
add
push
lea
or
lahf
repnz
or
mov
in
add
jecxz
lret
in
push
push
in
jge
call
ljmp
ljmp
adc
insb
fidivl
mov
addr16
cltd
into
adc
cmpl
push
inc
push
or
fldt
call
mov
test
stos
mov
xchg
push
mov
test
addb
mov
mov
inc
lds
jne
xchg
sar
cmpsl
xor
sbb
mov
pusha
cmpl
testb
push
sub
adc
push
fidivl
push
add
dec
icebp
cmp
call
add
test
out
ret
aaa
into
add
enter
in
cmp
in
cwtl
jl
xchg
addr16
xlat
in
and
enter
mov
popa
adc
in
jg
and
cmp
aad
mov
or
and
xor
in
je
mov
in
jne
dec
cmpb
jne
push
add
cmp
enter
mov
ret
insb
or
inc
jo
out
jns
add
add
xor
rcrb
add
in
mov
add
data16
aam
in
xchg
xchg
ds
pop
jo
xor
insl
mov
jb
loop
pop
incl
in
movsb
xlat
js
add
loope
xorb
inc
dec
sbb
and
mov
daa
jmp
pop
cmp
adc
movsl
mov
cmp
jge
mov
jnp
pop
aam
lahf
sub
jae
adc
add
jne
jge
dec
cmpsb
xchg
xorb
dec
mov
sbb
fidivs
outsb
andb
cmp
test
or
or
or
testb
add
out
add
add
or
or
jns
xchg
outsl
pushf
leave
shrl
cs
out
mov
lea
imul
lea
shrb
mov
xor
jo
enter
sub
fyl2x
mov
mov
jne
pop
testl
pop
bound
adc
and
fcomps
scas
nop
out
aam
mov
hlt
dec
or
sbb
xor
dec
add
sub
pushf
mov
dec
in
leave
mov
xor
dec
add
jmp
out
aad
shl
add
sub
cld
dec
xlat
into
push
leave
sbb
mov
and
and
pop
sub
scas
dec
mov
ss
je
xchg
dec
or
stos
adc
inc
mov
mov
dec
jg
fsubr
inc
mov
je
or
stc
fistps
je
jmp
sub
je
pop
je
jmp
nop
push
jp
mov
fdiv
fwait
arpl
fisttpll
jl
add
add
add
sbb
hlt
add
pop
in
xor
mov
pushl
cmp
pop
mov
mov
sar
mov
adc
mov
add
add
out
or
jle
pop
cmp
rorb
adc
adc
push
enter
popa
out
cwtl
xor
jns
in
pushf
lret
xchg
dec
jb
in
cmp
mov
sahf
dec
pop
jmp
mov
incb
fs
inc
aas
pop
addl
sbb
adc
jge
inc
xchg
or
sbb
xor
adc
nop
lret
movsb
or
and
cltd
mov
scas
xor
xchg
lea
and
xchg
add
loopne
add
sti
out
jmp
add
sbb
cmp
or
or
mov
sub
in
rorb
repnz
add
and
xchg
fistpl
mov
inc
mov
gs
jmp
test
pop
xchg
or
or
jge
dec
dec
adcb
je
in
sbb
dec
and
leave
mov
sub
movsl
xchg
inc
push
push
jmp
sbb
add
ljmp
ds
inc
test
ror
adc
mov
dec
das
push
dec
add
dec
adc
push
add
pop
dec
dec
sub
mov
mov
dec
push
sub
inc
ret
ja
or
mov
sbb
outsb
lea
popa
shll
mov
aaa
stos
or
rcl
adcb
pop
test
lahf
add
xor
je
sbb
loope
mov
cmpsl
hlt
push
sub
jbe
dec
pop
scas
aam
loope
push
addl
push
fwait
add
scas
add
or
push
pop
fsubrp
xor
dec
stos
mov
adc
mov
or
jmp
int
sub
idiv
sub
sbbb
cmpsb
mov
push
sbb
mov
fsubrp
notl
add
xchg
cmp
insb
cmp
nop
inc
inc
xor
mov
or
push
inc
cmp
cmpsb
movsl
mov
sub
lock
push
push
mov
test
leave
popa
gs
xchg
sub
sbb
push
mov
xor
mov
fwait
mov
pop
pop
in
cmp
push
inc
and
pop
inc
inc
mov
mov
subl
notrack
sub
je
dec
je
sub
ficoms
pop
imulb
je
adc
push
push
mov
mov
and
push
inc
mov
jle
fadd
push
pop
push
mov
lods
out
or
add
mov
cmp
jg
jl
pop
lock
cs
call
mov
mov
mov
mov
jo
mov
mov
movaps
fnstenv
pop
scas
les
jne
lods
cmp
or
push
and
ret
add
jne
push
outsl
incl
cmp
cmp
jg
jno
cmpsl
and
fsubl
pop
test
cltd
xor
sub
add
add
shlb
incb
add
adc
pop
cld
jmp
in
jecxz
gs
packsswb
xor
fadds
loopne
push
push
xor
ja
jecxz
and
shlb
push
or
test
add
adc
lahf
addb
cmp
inc
push
test
ds
loopne
jne
imul
adc
rolb
dec
dec
jbe
push
mov
and
push
in
pop
jae
jmp
cwtl
adc
cmp
xor
mov
jge
push
jmp
hlt
lods
subl
insb
scas
xor
mov
cmp
je
sbb
cmp
adc
add
add
lock
cmpsb
roll
add
cs
shll
push
lods
lock
out
mov
push
hlt
cmp
dec
push
mov
arpl
ss
repnz
dec
dec
repz
sbb
jmp
pop
pop
pop
lods
cmpl
decb
push
jge
add
fisttps
shrb
in
sbb
push
fstps
fmull
out
mov
cmp
cmpb
jle
and
fs
add
xchg
mov
add
or
add
ja
or
bound
or
xchg
leave
mov
ret
in
xchg
xor
jle
xor
mov
and
jmp
out
scas
jne
cmpb
fcmovu
jne
sarl
add
pop
push
mov
mov
mov
das
fbstp
fcoms
das
xor
xchg
repnz
out
loope
lds
dec
jb
add
stc
or
enter
fdivrs
adc
ret
mov
test
jge
add
jo
or
test
iret
incl
or
mov
adc
lock
inc
and
jmp
push
xchg
cld
jnp
les
add
push
add
add
or
data16
shll
and
add
xor
xor
mov
or
or
push
or
and
in
add
pop
inc
or
inc
inc
push
add
test
add
push
test
shll
data16
outsl
inc
xorl
ja
jne
sbb
jmp
jnp
js
pop
pop
sub
add
lods
dec
lock
add
pop
sub
insb
mov
or
xchg
pop
and
adc
scas
adc
pavgb
into
roll
sub
xchg
cmp
inc
jl
pop
pop
add
and
jno
icebp
dec
sbbb
cltd
out
fsts
cmovs
addr16
cmp
ret
jne
dec
mov
clc
lds
add
daa
fst
fcomps
fistl
fsubrl
or
sahf
mov
lret
fs
adc
jle
fstp
push
dec
dec
ficoml
push
add
daa
loopne
jmp
sbb
mov
sub
jb
or
sub
lret
xchg
pop
jno
inc
testb
xchg
rcr
or
cwtl
and
xchg
jp
adc
dec
pop
push
xchg
pop
mov
sub
or
scas
xor
push
inc
pusha
or
push
addl
push
les
push
adc
loope
or
fidivl
xor
dec
test
lock
push
pop
mov
dec
push
add
iret
fwait
xor
rolb
shrb
mov
push
ljmp
or
lret
jl
imul
shl
push
cmp
mov
inc
addr16
sti
or
xchg
sub
fidivrl
pop
shlb
in
fmull
add
into
shlb
in
in
xchg
out
dec
call
rolb
or
xlat
add
lret
ds
jle
xchg
icebp
add
idivb
fiadds
fucomi
push
jl
je
xchg
cmp
add
push
into
pop
mov
fwait
js
fsubs
xchg
sub
pusha
incl
cmp
pop
mov
or
add
inc
jb
cmc
mov
mov
pop
inc
in
sub
popf
add
mov
inc
mull
pusha
cmp
mov
fidivrl
add
or
cmp
add
cmp
das
mov
sbb
xor
scas
movl
push
push
push
add
cmp
sub
popf
test
inc
dec
fdivrs
outsb
movsb
enter
mov
mov
jne
lahf
pop
dec
or
or
andb
or
test
push
add
jb
repz
add
adc
inc
push
incl
inc
je
sub
je
scas
ret
add
orl
mov
out
cs
loope
mov
pop
push
int3
cmp
push
loope
pop
lock
add
loopne
cmp
sarl
add
mov
jo
cmovp
jle
cmp
enter
adc
ret
add
push
orl
mov
jmp
pop
je
jne
xor
jmp
addb
in
in
jle
movsb
push
adc
ret
xor
out
inc
es
addr16
inc
rorb
pop
add
sub
xlat
add
jbe
out
lahf
decl
test
cld
call
sbb
mov
xchg
fcmovnbe
lcall
push
cmpl
jns
xor
and
sub
xchg
ficompl
cli
sahf
test
inc
clc
xchg
or
add
lods
mov
scas
adc
icebp
cmp
pop
loop
repnz
les
popa
fnstsw
in
mov
pop
cmpb
je
mov
lock
iret
addb
imul
xchg
add
iret
dec
jmp
mov
cld
movb
jae
and
mov
hlt
push
dec
sbb
mov
add
mov
push
enter
push
lea
sub
ret
jnp
mov
popf
mov
add
push
sub
pop
dec
mov
test
call
pop
mov
mov
lahf
sbb
xchg
mov
push
or
out
mov
or
adc
pop
mov
div
and
inc
sub
ret
jno
aam
xor
add
jae
sub
sbbl
xor
push
fs
mov
inc
pop
sbbl
push
pop
xchg
lea
rorb
test
sub
sub
rcl
andl
pop
dec
jp
or
imul
push
les
andl
push
mov
stos
pusha
test
ja
mov
mov
mov
test
leave
mov
inc
mov
mov
fwait
dec
cmpb
std
decb
je
push
or
push
out
xchg
push
arpl
sub
xor
stos
lock
jmp
cmp
jg
cmp
insb
test
ja
adc
mov
pop
addr16
scas
xchg
aam
sbb
mov
lea
clc
cmpl
iret
shr
ret
pop
pop
aas
hlt
decl
push
aas
pop
add
dec
je
push
adc
push
adc
sub
jb
mov
sub
sub
nop
and
adc
push
ljmp
jbe
or
pop
adc
mov
ret
pop
aaa
loopne
and
mov
mov
lahf
pop
add
mov
add
movsl
icebp
loop
cmp
data16
push
push
or
hlt
and
mov
push
in
push
loopne
sbb
xor
repnz
loopne
les
xor
pop
movsl
loopne
loopne
cmp
call
and
insl
add
cmpxchg
cli
roll
jns
lock
into
adc
sbb
dec
pop
in
cs
push
push
cmp
je
jmp
sub
aaa
jmp
xor
sti
aas
xchg
das
and
add
mov
add
push
xor
shll
or
or
inc
dec
rorl
repnz
xchg
push
push
mov
pushf
push
adcb
mov
jb
out
mov
or
cld
sub
pop
insb
shll
cli
je
rolb
inc
fadds
insb
sub
push
or
insb
sub
and
mov
or
rcll
loopne
stc
rclb
dec
loopne
fs
xor
or
lea
xlat
pushf
add
lock
bound
mov
repnz
rorb
les
enter
loopne
xchg
int3
ror
out
cmp
dec
in
mov
pop
jnp
nop
pop
js
fs
xor
in
mov
pop
inc
movsb
nop
add
test
mov
mov
mov
xchg
add
cmpl
std
xlat
xchg
or
sub
out
push
lods
stos
fistpl
and
and
in
addr16
xchg
lock
ret
sahf
insb
pusha
pusha
adc
mov
push
xchg
pop
addb
enter
test
and
rcrl
cmp
hlt
mov
add
mov
cvttps2pi
sbb
mov
movsb
inc
adc
test
mov
sub
int
sti
das
aam
inc
xor
cmpsl
mov
sub
add
and
in
sbb
lock
adc
lods
pop
inc
nop
nop
rcrl
adc
inc
aaa
cmp
pop
sbb
adc
and
xor
enter
dec
daa
pusha
insb
jmp
dec
and
fcomps
or
loop
mov
lahf
dec
adc
rorb
les
sbb
add
push
bnd
dec
movsl
dec
push
adc
sub
mov
loop
add
data16
and
pusha
into
adc
xchg
or
dec
mov
dec
jmp
dec
adcb
or
and
mov
into
and
jns
sti
ja
clc
dec
or
inc
data16
add
adc
adc
pop
add
jbe
test
je
mov
outsl
fcomps
cmp
daa
push
sub
pop
lock
jle
adc
aam
popa
push
outsl
cmp
and
push
pop
xchg
mov
sti
jl
aaa
or
popf
or
xor
jge
ds
mov
aaa
cmpl
imul
jl
sub
cmp
jge
jmp
mov
and
add
and
add
mov
das
subl
dec
orb
stos
aas
aaa
in
push
sub
inc
fwait
inc
dec
mov
movsb
cmp
jg
insl
jg
mov
andb
incl
add
lcall
mov
pop
or
int
jbe
sbb
int
jge
pop
or
mov
lret
outsb
pop
xor
ret
sub
xchg
nop
fst
fsubrs
sbb
fldt
aas
inc
ja
mov
sbbl
adcl
out
out
pusha
cltd
xchg
jae
xchg
xchg
das
movsb
push
adc
pushw
ja
stc
outsl
push
xchg
mov
add
adc
cmp
jge
xchg
xor
mov
adc
mov
fiaddl
xchg
popf
lock
adc
lds
sub
dec
jmp
icebp
loopne
aas
pop
add
shr
in
xchg
cmpb
pop
add
xchg
mov
xchg
mov
and
sbb
sbb
adc
fs
inc
adc
aad
in
jle
lcall
int3
push
cmpsl
ret
clc
xor
mov
ffree
dec
inc
add
or
pop
mov
vaddsubps
repnz
vpcmpeqd
add
push
xor
bound
int3
cmp
inc
sbb
inc
and
inc
imul
or
xchg
je
inc
imul
or
test
daa
mov
sub
xor
or
je
nop
pop
add
inc
push
pop
xlat
xchg
jl
add
jl
stc
xorb
and
xor
incb
pop
pop
fstpl
rcrb
xor
mov
fadds
subl
lahf
jge
rcrb
cmp
loopne
fwait
pusha
sub
aaa
push
mov
sub
in
fdivs
inc
mov
mov
stos
sbb
lret
in
mov
int3
cmp
jge
pop
or
push
fidivl
mov
clc
pop
fadd
out
ja
nop
cld
orb
je
sbb
daa
pop
fs
add
dec
pop
mov
cmp
inc
add
mov
push
lock
enter
dec
mov
adc
or
add
mov
mov
or
add
add
test
movsl
cmp
inc
fisttpl
sub
mov
push
cmp
mov
mov
sbb
iret
rolb
popa
mov
mov
inc
inc
cmp
test
shll
sub
mov
setg
mov
fmull
out
inc
cmpw
xchg
rorl
mov
jne
jmp
push
mov
push
pop
pop
dec
inc
shlb
pusha
rcll
pop
dec
add
xor
cld
dec
pusha
dec
jne
push
addb
mov
mov
xchg
mov
mov
xor
mov
rorb
cli
push
lock
xlat
add
pop
cwtl
mov
add
push
inc
call
sbb
mov
mov
mov
jle
cs
push
jg
in
dec
out
push
sbb
subb
sbb
sbb
inc
mov
inc
loopne
test
movsl
dec
aam
js
aam
cmpl
mov
push
fstps
sub
jb
sarb
sub
mov
push
sarb
sub
mov
or
test
enter
xchg
add
test
mov
sbb
jl
and
nop
dec
sahf
mov
ret
adc
pop
jns
ds
mov
pushl
jbe
sbb
push
mov
stos
fnsave
add
in
leave
lds
pushf
lock
xor
inc
add
sub
in
push
loopne
push
ja
insl
das
fs
aaa
xor
insl
add
fs
mov
popa
insl
pop
jo
push
inc
push
mov
sbb
test
push
cmp
ss
pop
or
and
push
pop
jbe
in
jp
aaa
je
mov
enter
mov
in
rolb
mov
in
mov
mov
mov
push
or
sub
sbb
shlb
mov
mov
inc
pop
sub
mov
mov
sbb
movsb
inc
cmp
or
mov
loopne
hlt
or
xor
or
js
add
shl
pop
pop
push
out
push
test
sbb
fcompl
out
inc
lods
mov
sub
sub
loopne
and
pop
cmpsl
inc
imul
push
jo
inc
pop
inc
test
js
aad
lock
out
add
mov
xchg
inc
gs
sbb
adc
mov
lea
out
mov
lahf
jle
push
push
les
stos
mov
or
in
ret
adc
das
notb
jne
mov
loop
and
pop
lcall
or
push
test
filds
inc
jmp
fisubs
pop
lar
sahf
mov
xchg
lock
or
fmuls
push
incb
sbb
push
pop
cld
mov
cmp
jne
sbb
cmpsl
jl
mov
mov
dec
mov
sbb
or
inc
or
jl
pushf
loop
jbe
mov
and
dec
and
shll
es
add
add
fdivs
adcl
sbb
sbb
pusha
test
mov
je
mov
mov
jmp
std
add
sbb
mov
rclb
jno
pusha
add
jecxz
add
or
adc
sahf
rorl
push
xor
lock
mov
jl
test
jbe
push
push
shrl
mov
dec
sbb
inc
aaa
ret
jb
mov
push
dec
jb
in
dec
clc
pop
dec
or
sbb
enter
and
adc
cmp
aaa
pop
call
cmp
test
test
sub
or
cmpsb
loopne
adc
pushf
mov
xchg
ret
push
out
scas
ljmp
jmp
adc
add
clts
or
mov
imul
xor
mov
cmp
out
in
repnz
cmp
cmp
lsl
mov
inc
sbb
and
pop
or
decl
cmpl
ffree
ficoml
clc
inc
jo
stc
ret
mov
ret
push
or
cwtl
pop
xorb
mov
cpuid
clc
mov
aas
pushf
or
incl
mov
call
and
inc
into
cmp
test
jmp
pusha
inc
and
lea
mov
fisubs
movsb
lock
sub
fmull
mov
pop
jg
sbb
cmp
fldenv
test
enter
or
or
jne
lret
incl
mov
add
outsb
or
mov
clc
test
div
push
insb
iret
sarl
push
rolb
xlat
jl
add
rorb
enter
sahf
out
pushf
mov
nop
repz
mov
out
iret
xor
push
inc
mov
cmp
jns
js
test
jns,pn
repnz
jle
cmp
push
dec
decb
inc
in
jns
jnp
push
movsb
xor
out
and
sbb
dec
mov
es
or
enter
jmp
or
mov
push
lock
jmp
fcomi
push
clc
shrb
hlt
push
dec
test
fmulp
cmp
in
inc
in
call
jl
in
test
clc
pushf
mov
fsubs
jae
and
mov
jbe
in
jns
enter
fcoml
mov
bnd
sub
lods
in
jns
lods
cs
test
inc
test
mov
leave
jae
add
mov
ja
dec
nop
push
js
inc
aam
leave
mov
test
andb
jl
pop
pop
push
cltd
add
ficoms
inc
sbbl
enter
lcall
std
mov
or
adc
mov
lock
pop
fnstcw
into
and
iret
sub
add
adc
dec
xchg
pop
in
in
nop
out
imul
xchg
dec
xchg
cmpsl
nop
add
mov
sbb
add
test
rclb
pop
add
jb
xchg
nop
mov
int3
cmpb
es
or
jo
add
pushl
mov
sub
mov
jge
dec
mov
cmpb
sarb
mov
test
lret
push
cltd
pushf
shl
mov
nop
ja
xor
add
mov
pop
enter
cwtl
xchg
mov
push
pushf
cwtl
xchg
mov
cmpl
add
test
xchg
inc
sbb
adc
movsb
xchg
std
inc
dec
scas
aam
ret
dec
pusha
dec
outsb
mov
or
or
mov
enter
dec
or
and
sbb
das
pusha
das
mov
pop
and
cmpsl
das
inc
ret
add
faddl
sar
roll
xlat
cli
das
inc
pop
leave
jo
add
shlw
and
rorb
sub
ds
in
jno
inc
ret
or
jecxz
jl
data16
ds
daa
stc
pop
adc
sbb
adc
mov
rorl
std
clc
xlat
mov
ss
or
push
imul
ret
push
fadd
imul
jb
lcall
add
xor
or
add
leave
sbb
inc
pop
pop
or
add
scas
mov
pop
lods
out
shlb
stos
nop
nop
or
jb
mov
roll
cld
imul
cmp
xchg
inc
cli
sub
mov
xchg
add
ret
and
push
iret
push
loopne
mov
and
pushf
leave
and
ss
adc
mov
xchg
movsb
sbb
leave
and
dec
test
lods
and
dec
xor
leave
mov
mov
and
int3
shlb
and
aam
fmull
dec
enter
mov
in
shlb
cld
aam
rorl
test
sbb
pop
es
push
ret
es
in
dec
es
es
je
test
sarb
gs
jne
mov
or
push
jns
test
dec
add
outsl
je
stc
sti
repnz
fs
jne
das
dec
jne
inc
imul
imul
jb
in
xchg
add
jb
insl
jo
inc
jb
insl
push
inc
xchg
mov
cmp
mov
inc
popa
je
and
outsl
enter
insb
inc
jae
pop
inc
jns
add
pop
outsl
repnz
inc
pop
out
hlt
test
ljmp
mov
mov
popa
xchg
pop
jnp
jnp
mov
and
pop
es
lret
sbb
mov
enter
pop
enter
add
inc
add
cmp
test
push
enter
push
movsb
push
jmp
mov
fbstp
fs
sub
inc
push
adc
push
ret
inc
jne
dec
inc
cmp
lods
testb
addr16
adc
inc
lods
lods
or
shl
and
and
and
push
push
push
inc
mov
sarl
or
mov
add
test
test
in
movl
inc
ret
fldt
push
lret
fs
push
lret
jb
jb
mov
mov
fst
cmp
jnp
sbb
push
mov
lret
pop
mov
cs
fs
jl
jl
sbbl
mov
jns
mov
gs
push
iret
rolb
in
jb
cmp
dec
int3
dec
int3
or
add
fsubl
sbb
dec
insl
jo
mov
or
adc
iret
sbb
sbb
jbe
pop
test
idivb
mov
xor
mov
jg
inc
imul
and
aas
pusha
xor
int
adc
jns
nop
dec
cld
idivb
loop
add
push
xchg
in
dec
sti
inc
pop
in
add
in
xorl
add
nop
lock
call
and
icebp
es
inc
dec
jb
movsb
and
adc
repnz
jo
into
pop
in
add
and
dec
into
add
test
fmul
mov
push
enter
iret
dec
and
jb
test
daa
inc
mov
nop
adc
addl
cs
add
dec
sub
add
mov
clc
sub
test
pop
push
scas
rcll
dec
idivb
dec
je
sbb
int
imul
mov
std
add
enter
cmp
push
daa
fistps
cmp
faddl
inc
pop
pop
stos
hlt
mov
xchg
jl
int3
lret
push
stc
xor
in
mov
in
stc
add
call
jl
in
inc
adc
mov
roll
jae
fadds
xchg
loopne
jmp
mov
push
int3
or
add
les
fcomp
enter
pop
js
jl
shrb
rcrb
enter
loopne
or
pop
es
sub
das
sub
bnd
pusha
adc
fwait
ljmp
imul
or
adc
pop
in
dec
daa
iret
cmpsb
rcrb
xor
lods
rorb
add
mov
add
push
xchg
sbbl
lahf
ret
xor
iret
pop
loope
jge
fisttps
lret
cmp
xor
test
jnp
mov
add
xchg
cmp
mov
adc
pusha
test
subb
fs
fsubl
out
popa
dec
outsb
call
movb
add
push
int3
mov
pop
andb
data16
push
pmaxub
push
xchg
les
imul
jle
ss
and
movzwl
and
or
imul
lea
or
inc
or
inc
add
rcll
test
aaa
jnp
sub
xchg
inc
sub
inc
pop
pop
mov
dec
jne
daa
in
cmpsl
jmp
inc
mov
and
sbb
sub
repz
dec
pop
ret
add
push
lret
in
test
cmp
in
out
cmp
insl
fdivl
pop
sahf
mov
push
cld
scas
les
addl
cmp
cmp
adc
or
or
pop
pop
mov
jne
mov
out
addr16
jmp
sub
or
or
sbb
div
and
aas
xorl
pushf
add
in
mov
cwtl
and
or
xchg
mov
into
insl
jnp
mov
push
jne
jb
jl
and
std
jno
test
mov
je
movsb
sub
add
sub
or
mov
adc
fmull
nop
add
call
xchg
scas
jne
lret
std
stc
push
push
jno
call
add
adc
mov
adc
mov
adcb
in
lcall
leave
adcl
bound
xchg
dec
imul
inc
jl
jmp
push
add
int3
nop
mov
sub
inc
loopne
add
inc
addb
mov
decl
push
cmp
jns
test
sar
pop
add
or
dec
lahf
inc
mov
cld
ja
add
push
lock
cmp
xor
cld
imul
mov
aam
imul
jmp
add
and
add
call
and
cmp
je
sub
orb
jne
push
popa
sub
sub
or
shll
hlt
inc
push
jecxz
cltd
mov
test
enter
mov
loopne
sbb
sbb
push
add
and
push
in
sti
outsl
test
mov
test
mov
or
or
je
and
inc
add
and
cli
adc
cld
adc
mov
popf
xor
rcrb
inc
lock
xchg
or
bound
dec
sahf
inc
xchg
loope
lock
sbb
arpl
call
sbb
sub
and
mov
inc
mov
inc
mov
pop
jno
lea
add
out
xor
movq
xor
xlat
xchg
fwait
cmp
pushf
adc
shll
cltd
xor
addl
testl
sarl
ds
test
and
or
cwtl
adc
sbb
and
or
pop
xchg
and
xor
fistl
push
loope
push
mov
xor
inc
sub
faddl
and
cs
mov
stos
imul
push
xchg
add
dec
loopne
cmpsb
push
inc
nop
xlat
xor
leave
loopne
and
rolb
aaa
stos
repz
imul
ss
jns
repz
xchg
mov
repnz
outsb
in
imul
into
repz
dec
mov
add
shlb
cmp
dec
out
or
les
call
jge
adc
dec
cld
mov
mov
add
xor
add
clc
fldcw
add
and
mov
cmpsb
insb
fs
jo
inc
fnstsw
dec
lock
add
leave
push
or
enter
movsb
test
sbb
sbb
sub
add
in
and
dec
push
loopne
ja
cmp
in
leave
and
fmull
mov
enter
aaa
fmul
xor
test
mov
or
lret
xorb
pop
mov
sbb
in
int3
jne
out
mov
outsb
int
jge
in
enter
test
ljmp
jo
loop
adc
rclb
add
mov
mov
test
jno
inc
je
test
inc
jbe
repnz
adc
add
mov
test
cmp
pop
mov
shr
imul
jo
inc
jnp
sub
daa
sahf
mov
iret
fdiv
adc
fmull
mov
add
cmpl
cmp
mov
jae
mov
leave
and
mov
je
sbb
mov
xlat
xchg
cmp
dec
push
in
xor
shrb
cmp
xor
nop
outsb
mov
or
adcl
add
leave
sbb
cwtl
jmp
sbb
fsubl
dec
mov
jmp
pushf
nop
nop
inc
and
outsl
xlat
sub
ret
adc
dec
xchg
inc
pop
adc
mov
shl
mov
push
js
hlt
or
pop
add
fstpl
sub
mov
inc
pop
test
and
jns
sbb
loope
add
xlat
adc
lods
shr
push
fwait
inc
push
adc
ret
loopne
out
xor
mov
loope
mov
in
loope
push
xor
and
aad
loop
inc
cmpsb
and
fs
loop
pop
adc
jne
push
push
loopne
test
dec
in
push
in
loop
les
cltd
xchg
movl
mov
jge
dec
repz
mov
hlt
adc
ljmp
sarl
sbb
push
inc
out
pop
loope
cmp
popa
in
cwtl
mov
in
dec
xor
add
hlt
dec
cmp
ret
mov
fisttpl
orb
inc
cmp
fldt
cmp
adc
pop
in
sbb
rcr
gs
loopne
mov
test
and
aaa
or
fsubs
fdivs
and
aam
add
jg
shr
push
int
xor
roll
xor
test
xchg
rorl
pop
and
dec
repz
mov
pop
vpsrad
and
jns
ds
inc
arpl
inc
jnp
xor
mov
push
ljmp
and
and
les
shlb
aaa
fmul
roll
dec
mov
fidivs
pop
arpl
mov
popa
call
sbb
and
daa
lods
test
popf
test
adc
shlb
aad
lcall
mov
fstpl
cmp
pushf
mov
dec
out
jno
and
ficomps
mov
xchg
popf
xchg
sbb
cmp
and
shl
nop
push
nop
pop
jns
cwtl
jmp
call
adc
and
cwtl
mov
lea
xchg
mov
addr16
push
shl
push
jb
mov
aaa
loopne
rolb
rolb
jmp
lret
mov
fistpll
xlat
inc
insl
jo
movsl
jo
test
mov
incb
fcompl
test
insl
popa
and
daa
pop
outsl
lret
inc
addr16
push
ds
gs
outsl
repnz
inc
outsl
jne
xchg
jb
outsb
arpl
cltd
sub
je
mov
pusha
ret
in
addr16
loopne
lods
adc
mov
mov
gs
outsb
pop
repnz
movsl
push
adc
push
outsb
imul
jo
orl
arpl
scas
xor
lock
inc
iret
push
ret
in
inc
inc
jns
push
outsl
jb
fcomps
inc
inc
pop
daa
mov
sbb
ja
mov
push
clc
nop
adc
test
jle
add
pusha
call
push
addb
mov
aad
fidivl
sti
dec
jae
pop
fs
push
loopne
mov
stc
xchg
insl
jb
lock
push
push
dec
leave
stc
or
fnstsw
loopne,pt
add
rolb
push
or
popa
add
xchg
je
pop
in
xchg
mov
rclb
and
rolb
je
in
and
daa
cld
inc
aam
in
shr
std
push
xor
xor
in
push
xchg
cmpb
inc
outsb
jns
push
xor
std
and
push
gs
cmpsb
dec
mov
fiadds
or
add
jle
sbb
ret
inc
sub
or
vpandn
xor
enter
test
mov
and
and
ret
or
jbe
jmp
cmp
mov
xorl
lock
or
inc
dec
cld
jle
shrb
jne
jmp
pop
jo
jb
call
sub
je
icebp
insb
pusha
push
or
pop
leave
js
adc
push
and
loop
xlat
sbb
pop
lds
xor
js
jge
cmp
pop
jae
add
pop
clc
adc
inc
sub
ror
sub
xchg
ret
mov
int3
jle
pop
add
imul
inc
dec
lea
xchg
fdivrp
loopne
ret
mov
addb
mov
mov
add
fwait
orl
add
ret
xchg
inc
pop
pop
push
push
pop
icebp
pop
aad
sti
cmpsb
std
imul
lds
lock
mov
or
xor
lret
in
add
add
adc
jno
push
jle
sbb
push
mov
mov
das
rcr
or
rorl
ret
xchg
lods
add
push
ret
jae
lods
jae
dec
jnp
ret
jnp
mov
test
aaa
cmpl
mov
pop
lahf
fistpl
pop
mov
loopne
std
cmc
adc
cwtl
push
dec
jb
or
xchg
lret
sub
jbe
mov
add
jle
sbb
inc
jle
cwtl
out
mov
push
xor
sti
cmp
cmp
setg
cld
fnsave
inc
mov
jno
push
fnstenv
in
movsb
leave
loope
out
dec
les
or
push
lods
sahf
push
in
out
xchg
cwtl
dec
aas
dec
pop
push
mov
adc
gs
adc
xchg
pop
xor
lds
cwtl
mov
out
sahf
xchg
cwtl
jns
inc
push
pop
push
mov
ds
mov
mov
mov
push
cmp
adc
aad
mov
adc
sbb
xorl
aam
das
sub
fistpl
loop
cmp
push
enter
sub
out
stos
pushf
pushf
faddl
shrd
scas
nop
xchg
xchg
xor
pushf
pushf
xchg
xchg
xchg
jmp
jns
and
lock
jns
cmp
aaa
ja
cs
cmp
sbb
sub
test
sbb
inc
or
in
dec
rcll
or
add
sub
insb
icebp
mov
icebp
jno
push
and
gs
insl
xchg
mov
pop
enter
stos
cwtl
ret
outsl
inc
dec
dec
dec
dec
pop
mov
jl
ds
cmp
jno
inc
cs
jge
dec
jo
outsb
mov
scas
ds
cs
xor
or
xor
sub
cs
ds
nop
repnz
lods
sub
cmp
inc
sti
dec
pop
mov
adc
sarl
mov
scas
ds
jo
add
jae
cmp
cmpl
jle
pop
fstpt
jae
mov
divb
mov
mov
inc
mov
jge
push
shl
add
test
mov
mov
in
bound
xchg
mov
scas
test
jg
mov
scas
add
add
mov
add
test
push
add
lcall
adc
loop
es
loop
lods
jne
xchg
movl
jg
mov
push
xor
push
sbb
dec
loope
cmpsb
fcomip
inc
fs
jo
jb
dec
add
pushf
jae
push
rclb
sahf
cmpsb
sub
ss
imulb
jmp
sub
xchg
push
imul
int3
pop
pop
mov
shl
pusha
add
jno
add
sbb
repz
or
ja
cld
test
pop
jbe
push
fadds
pop
fldcw
out
push
sub
or
ficomps
cmp
push
xchg
add
or
jns
in
xchg
inc
dec
or
scas
pop
dec
or
mov
inc
call
inc
push
or
mov
lret
mov
out
pop
idivl
add
pop
pop
leave
rcrl
clc
mov
push
push
movsb
test
int
imul
dec
adc
xchg
push
faddl
and
pop
sub
enter
aaa
leave
sbb
je
pop
add
inc
push
stc
ficoms
push
adc
jbe
jle
adc
xchg
mov
adc
lods
inc
mov
imulb
je
dec
lods
lcall
pop
xchg
push
fs
push
clc
lcall
in
or
data16
clc
jne
jns
mov
sbb
dec
adc
dec
jb
dec
fimull
js
xor
dec
nop
sbb
ficoml
in
shl
mov
adc
mov
or
addr16
pop
and
jb
jne
xchg
sub
aas
and
push
add
cld
scas
or
xchg
and
icebp
enter
divb
dec
cmpsl
into
ret
jb
hlt
pusha
xchg
add
adc
or
sub
leave
inc
sbb
jp
dec
in
push
jl
cmpsl
hlt
lea
outsb
loopne
push
roll
xchg
dec
lcall
adc
sub
test
cmp
fdivs
inc
call
loopne
pop
dec
orb
fwait
out
nop
movsl
ret
sahf
hlt
dec
ljmp
sbb
imul
add
js
pop
xor
mov
inc
dec
imul
or
sbb
inc
imulb
inc
sub
lock
dec
leave
movl
imul
stc
ljmp
sbb
add
lds
lods
aas
fbld
sbb
lea
sbb
push
loope
sti
jl
inc
xor
sbb
out
testl
lds
das
push
daa
sub
add
xchg
test
insb
jbe
call
or
mov
pop
rol
add
cmp
jmp
adc
xchg
aad
add
fisttpl
je
and
lret
jmp
pop
xchg
in
subb
xor
cmp
mov
sub
mov
fists
adc
inc
jae
cmp
sbb
pop
mov
stos
or
incl
and
xor
xor
dec
getsec
sub
das
lods
fnstcw
cwtl
or
data16
mov
sbb
out
cmp
and
outsl
push
loop
decl
loop
jge
sub
mov
shl
divb
sar
lea
or
sub
mov
xor
out
into
add
xchg
dec
xchg
add
sbb
mov
mov
inc
pop
mov
cmp
mov
mov
loop
pushl
mov
scas
rorb
inc
out
int
into
sub
add
or
adc
pushf
pop
fnstenv
push
fldl
add
mov
or
mov
test
test
add
adc
adc
adc
jmp
filds
lret
xchg
push
fnstsw
sub
incl
jle
mov
mov
loop
addr16
or
insl
or
mov
jle
and
pop
jle
mov
addb
ret
aam
popa
rolb
xchg
aad
je
filds
mov
sub
jg
dec
xchg
ret
popa
dec
inc
jne
aam
xchg
pop
cli
arpl
test
push
xchg
or
push
stos
dec
and
cwtl
and
pop
int
push
push
pop
stc
ret
movl
dec
or
sub
push
ja
pop
push
or
fwait
in
push
stos
or
lods
fstl
pop
out
sbb
mov
xchg
mov
jl
cmp
divl
das
and
add
outsl
xchg
inc
cwtl
or
push
jmp
out
or
adc
repnz
add
mov
rcr
in
mov
xor
in
test
hlt
clc
jmp
pop
sub
test
mov
lea
inc
add
add
mov
dec
sbb
pusha
sbb
mov
xchg
or
or
mov
into
and
aad
inc
mov
pusha
fistps
pushl
js
xor
sbb
push
jno
add
shrb
in
push
test
jno
mov
adcb
cmp
clc
int
cmp
inc
andb
stc
sarl
or
cmp
jecxz
popa
jns
xchg
and
and
mov
leave
inc
mov
and
bound
mov
clc
icebp
lock
sub
sub
call
out
adc
push
enter
sbb
inc
dec
jne
inc
imul
jnp
sub
dec
outsl
iret
enter
pop
cwtl
loopne
cltd
in
jo
arpl
add
in
or
pop
inc
mov
mov
xchg
mov
adc
dec
jae
cs
push
push
add
or
pop
js
pop
and
xchg
inc
dec
scas
mov
out
mov
and
or
xor
push
mov
rcr
imul
ja
jge
daa
daa
dec
clc
shl
pushf
xor
jmp
and
lahf
mov
mov
pusha
or
sbb
inc
push
push
out
adc
andnps
sbb
inc
sbb
cltd
xchg
sbb
sbb
ljmp
pop
add
aas
in
lock
in
ss
and
add
mov
fdivs
xchg
push
xchg
fdivrs
and
pop
in
push
in
pop
xor
ds
jns
jne
inc
shll
and
add
nop
pop
adc
pushf
and
inc
push
lock
in
in
cmp
push
inc
push
push
divl
ret
mov
lds
push
jne
cmp
out
in
movsl
sbbb
add
dec
mov
cmp
cmpsb
fwait
cld
adc
enter
scas
fisubs
sub
ljmp
and
and
pop
and
pop
std
lock
movsb
and
pop
or
and
cmpsb
and
out
or
lret
je
add
lret
and
mov
adc
and
or
dec
or
loopne
dec
xor
hlt
push
int3
push
orl
sbb
clc
add
call
lret
out
mov
insl
sub
es
fcompl
lods
in
call
pop
ret
add
in
arpl
xchg
or
out
cmc
add
in
mov
loopne
add
or
xchg
xchg
cld
or
sub
add
cmp
sbb
push
pop
call
sbb
xor
xor
and
fcoml
dec
push
add
arpl
push
cmpl
scas
call
push
xor
push
and
mov
push
dec
jmp
push
push
cs
mov
dec
rcrb
pop
add
mov
pop
movsb
loopne
sub
mov
jo
movsb
or
xor
cli
data16
lcall
jecxz
mov
stos
adc
xchg
xor
and
cmp
sub
mov
or
xchg
subl
rclb
or
push
or
cmp
rcl
movsb
aaa
pop
sahf
push
lret
stc
adc
rorb
mov
das
leave
mov
insb
mov
mov
push
add
clc
add
inc
push
pop
or
jmp
or
add
sti
test
in
into
push
push
xchg
or
and
mov
aam
pusha
cmp
xchg
adc
out
xor
dec
popa
or
imul
fs
jb
bound
dec
push
in
scas
add
fs
repz
dec
leave
adcl
jecxz
daa
push
adc
xor
sti
cs
loope
adc
ja
xchg
sbb
adc
out
jmp
dec
and
test
xchg
bound
jle
pop
push
or
jo
aam
cmp
push
repnz
or
in
scas
pop
sbb
das
push
call
jns
xchg
js
or
fildll
movsl
or
gs
mov
pop
clc
mov
push
leave
popa
xor
daa
andl
adc
lret
das
jp
aam
or
pop
mov
das
push
cs
jae
js
or
in
push
adc
lock
xchg
sub
inc
sbb
adc
cmp
testb
or
or
cwtl
lret
sub
add
scas
sbb
and
cmpb
jne
nop
inc
hlt
movsl
or
add
int
push
jecxz
and
pushf
mov
dec
jbe
adc
int3
xor
cmp
inc
mov
adc
sbb
fcompl
push
in
js
jge
jno
sub
out
iret
testb
cmp
pop
jle
xor
cmp
jne
testb
orb
fs
or
xor
add
movaps
add
aad
pop
idivb
faddl
adc
mov
jae
adc
mov
inc
test
sub
cs
test
aaa
add
dec
lock
aam
cmpsl
dec
arpl
les
sbb
sbb
fisubl
add
test
nop
leave
fadds
sub
mov
loopne
xchg
mov
inc
in
mov
setno
and
push
enter
xchg
out
arpl
sub
outsb
or
xchg
test
mov
adc
inc
mov
push
cmpb
cltd
dec
out
gs
repnz
inc
stos
fsubr
mov
add
lock
lea
jns
push
insb
and
or
jnp
push
dec
es
in
push
mov
add
int3
ja
push
lds
dec
rorb
rolb
sbb
sbb
jbe
mov
dec
add
sbb
push
loopne
add
pop
add
adc
pusha
outsl
outsl
lahf
mov
aas
mov
jmp
or
repnz
and
nop
mov
lea
mov
xchg
add
inc
je
fisttpll
pop
shr
mov
cmp
mov
fimuls
adc
repnz
and
sbb
inc
lcall
fimull
mov
push
mov
repnz
movb
decb
mov
call
cmpsl
push
lcall
mov
loopne
jno
push
mov
dec
cmp
shl
test
or
das
int
je
or
jb
test
jae
xor
fisttpl
popf
ja
jg
jle
add
or
ret
inc
or
or
inc
mov
xchg
nop
and
add
mov
push
mov
jnp
icebp
jl
rep
cmpsb
push
inc
xchg
push
mov
subl
xchg
mov
test
incl
jne
add
shr
rcl
xorb
push
jns
adc
or
and
mov
push
jl
loop
fistpl
jne
mov
or
fstpt
shrl
jne
inc
dec
inc
jge
sbb
jle
ficompl
loopne
les
nop
pusha
hlt
jl
incb
and
in
inc
je
lea
mov
out
or
cmpsl
adc
mov
dec
mov
xor
adc
daa
out
orb
xchg
pop
loopne
outsb
inc
push
cmp
and
call
dec
cmpsl
sbb
pop
pop
and
cwtl
add
je
push
dec
mov
sbb
jo
std
push
je
insl
sbb
push
das
test
lods
mov
sbb
dec
cwtl
aad
repnz
jecxz
add
call
pop
mov
push
test
das
adc
jge
jg
outsb
or
pop
jmp
jl
and
jle
dec
sub
jbe
and
pop
mov
mov
lods
jl
or
sarl
ret
xchg
or
sub
and
jg
subl
in
lds
push
pop
fs
cmpsb
jno
xchg
cmpsb
les
push
sahf
iret
sub
add
adc
rorl
xchg
cltd
or
cmp
push
jne
sbb
push
adc
mov
adc
xor
sub
outsl
sbb
cltd
push
push
mov
ret
lods
addr16
movsb
push
rcll
cmp
stos
lret
das
adc
push
push
mov
dec
rcr
add
adc
clc
shrb
lods
adc
das
lahf
inc
and
mov
sub
aaa
lock
add
mov
jl
add
jle
stos
pop
stos
mov
fs
or
shr
loop
cmp
insl
fmull
mov
or
lods
add
sub
ret
sbb
mov
sqrtps
movsl
xchg
ret
rorl
lods
lgs
add
sbb
cmp
or
mov
push
add
in
xchg
orl
aam
test
sbb
pop
fimull
push
mov
nop
mov
xor
add
gs
pusha
add
bound
aas
push
xor
xor
pop
sbb
cmp
mov
out
gs
arpl
rcrl
test
pop
jge
enter
pop
enter
mov
ss
repnz
lret
dec
mov
ret
inc
xchg
cmovp
inc
add
mov
orl
sbb
pop
lcall
cwtl
roll
pop
mov
pop
scas
pop
sbb
inc
js
cltd
or
mov
std
or
cmpsb
adc
and
sbb
in
and
insb
xor
out
sbb
pop
push
sbb
in
jge
mov
mov
aam
sub
popa
inc
mov
dec
je
inc
adc
cmp
sbb
inc
mov
dec
bound
mov
mov
sahf
and
cmpsl
decb
push
sarb
fmul
dec
adc
pavgb
xchg
jp
or
sbb
test
dec
daa
dec
cwtl
or
decb
inc
lret
mov
jmp
mov
sub
subl
cmp
jb
mov
push
sub
loop
add
and
lret
push
jle
nop
fcmovbe
pop
or
jne
pop
ljmp
dec
or
push
js
mov
push
push
dec
notb
lock
out
imul
or
paddw
and
movsb
shrl
pop
sub
sbb
sub
dec
xor
inc
call
out
fwait
loope
inc
aam
or
push
dec
sub
inc
add
outsl
call
or
push
mov
add
std
jle
push
je
push
adc
and
pop
pop
rorb
add
stc
inc
mov
push
sbb
orps
leave
call
or
xrstors
jae
call
hlt
pop
lahf
andl
ja
adc
je
add
loopne
jmp
push
inc
xor
or
mov
cmpl
pusha
dec
xchg
cmp
andl
cwtl
sbb
mov
xchg
into
push
lds
dec
push
lods
call
dec
lea
mov
fists
fcomip
test
dec
adc
jmp
inc
jb
out
ret
cld
push
add
lea
mov
in
loopne
ja
aas
push
fadd
sub
out
call
fnop
mov
cmp
add
lret
or
leave
in
repz
pop
mov
pop
stos
mov
lods
push
dec
xchg
jnp
or
out
push
dec
sbb
inc
jns
negl
dec
je
addb
movsb
mov
neg
in
ds
fsubs
out
jns
repz
decb
pop
push
push
and
out
push
jmp
xor
fisubrs
pop
mov
int3
and
add
mov
cmpsl
nop
lret
pop
mov
push
pop
lretw
in
sarl
pop
push
adc
aas
jmp
mov
push
orl
sbb
or
push
xchg
jp
xchg
xchg
pop
lods
pop
das
mov
inc
mov
xor
and
add
mov
pop
pushf
jle
movsb
movntps
lods
push
adc
jnp
mov
test
sub
and
mov
pop
jg
js
jmp
imul
or
dec
mov
pop
sbb
sub
push
adc
jnp
push
add
add
dec
pop
xor
adc
sbb
xor
lret
push
pop
adc
lahf
dec
mov
je
daa
push
aad
jg
mov
push
sub
adcl
add
insb
sub
jmp
test
or
sbb
jge
add
pop
mov
mov
xchg
aas
dec
add
jns
popa
cmp
lods
xorb
loopne
loopne
push
sbb
inc
xchg
pop
roll
push
add
push
cmp
fbld
or
sbb
pop
dec
add
out
shlb
insl
push
mov
or
xchg
dec
mov
or
and
insl
or
and
rolb
movswl
in
call
imul
jge
loopne
lds
jge
xor
icebp
int3
repnz
adc
sarb
mov
clc
lea
cltd
pop
mov
cld
mov
cmp
cmp
mov
or
mov
pop
pop
cltd
out
subb
sbb
cmpsl
cmpsl
jge
inc
dec
popa
cltd
and
test
pop
nop
imul
rorb
ret
sbb
jo
sbb
stc
jmp
mov
repnz
mov
out
pushf
mov
repnz
test
das
mov
lds
data16
ret
add
movsl
imul
outsb
outsb
insb
inc
je
push
xor
pop
push
stos
adc
xor
loopne
dec
lock
sbb
jl
push
mov
xor
push
sbb
in
outsl
mov
daa
xchg
lds
out
jmp
mov
outsl
roll
sahf
mov
out
mov
sub
clc
stc
cmc
je
out
out
iret
fistps
call
repz
int
pushf
push
lds
nop
enter
mov
stc
cmpsl
aad
iret
fucomip
add
adcb
pusha
out
rcll
fbld
pop
rorl
xchg
cmp
andl
pop
aaa
aaa
aaa
aas
nopl
mov
fwait
fwait
or
push
sub
mov
pop
outsl
fwait
fwait
fwait
fwait
jg
dec
fistl
adc
inc
cld
jnp
lock
add
dec
jae
ss
cmp
int
int
shl
nop
fdivl
mov
fwait
iret
int
mov
jecxz
cmp
push
jnp
out
fwait
mov
bound
push
loopne
outsb
mov
jbe
mov
jne
cs
adc
insb
aas
dec
push
add
out
neg
sahf
and
pop
das
mov
mov
lahf
mov
mov
push
push
out
decl
adcb
xchg
pop
out
jb
add
ss
aaa
aas
fistl
sahf
dec
scas
iret
pop
test
push
outsb
outsb
outsb
ds
icebp
adc
lahf
scas
inc
mov
insb
xor
pop
orb
shlb
jle
aam
movsl
pop
xchg
pop
push
xor
xor
add
out
cs
fdivr
test
push
mov
fidivs
pop
imul
loopne
out
clc
bound
sahf
movsb
scas
mov
jle
scas
stos
das
mov
and
cmp
scas
xor
jl
mov
push
inc
jecxz
sbb
sub
push
test
pop
rorl
mov
sahf
and
ds
aas
fwait
test
adc
adc
sbb
movsl
push
decb
mov
out
jecxz
and
mov
xor
movsb
std
in
movsl
xchg
lret
aad
inc
aas
xchg
cmp
gs
xchg
dec
in
testl
sub
in
and
je
ds
and
pop
jl
mov
aam
cmc
sub
jo
int
mov
das
ds
cmp
add
stos
sub
jle
jnp
inc
cmp
out
out
shl
repz
imul
inc
xchg
jmp
out
lret
push
jle
xchg
push
cs
iret
out
lea
pop
pop
jb
pushf
push
into
mov
adc
xchg
lret
mov
xchg
push
je,pn
xchg
lahf
pop
sub
jbe
in
cmp
sub
xchg
dec
test
inc
es
add
ficoml
push
lcall
dec
sbb
ja
int
mov
roll
jle
jb
outsb
jle
sahf
mov
xchg
rorl
das
add
push
je
push
mov
lahf
jb
mov
out
xsha256
cmpsb
push
inc
fs
jg
adc
pop
cmpsb
aad
into
insb
jb
ja
lods
push
push
ds
inc
push
cmc
mov
lock
sub
and
jl
das
rcll
sahf
pop
mov
mov
and
lock
push
jne
out
test
cmc
enter
in
cmp
sub
xchg
nop
or
std
imul
xor
hlt
mov
rclb
arpl
dec
sub
dec
in
daa
iret
mov
xchg
leave
shlb
xchg
push
cmp
sub
xchg
je
in
inc
in
jb
pop
fsubrl
dec
mov
movsl
jb
pushf
lahf
jno
loop
xchg
xchg
lret
fadd
xor
mov
cmp
xchg
lret
xchg
sub
fstl
push
dec
jne
icebp
call
push
icebp
and
test
add
xchg
dec
in
xchg
xchg
gs
pop
sub
inc
addr16
dec
in
jb
mov
xor
lret
test
push
cs
xchg
out
inc
pusha
ret
adc
popf
xor
test
popf
push
dec
in
test
pop
bound
call
xor
out
cmp
dec
xor
xlat
and
stos
sbb
mov
std
and
movsl
jb
outsb
xchg
fisttps
push
cs
xchg
mov
inc
hlt
shrb
add
jne
hlt
inc
jb
mov
add
movsl
inc
test
daa
cs
dec
in
mov
test
jmp
xchg
xchg
lret
mov
and
mov
out
and
xchg
lds
dec
lret
sub
push
push
dec
sub
sbb
push
mov
in
xchg
lret
aad
dec
mov
dec
in
xchg
mov
sub
xchg
adc
push
inc
pusha
test
pop
int3
xor
and
fisttpll
push
cmp
scas
xor
pop
sub
xchg
mov
add
test
movsb
jb
repnz
inc
dec
in
dec
aam
pop
ss
xchg
lret
sbb
xchg
dec
in
mov
jp
jmp
pushf
push
cs
arpl
xchg
inc
scas
jo
sahf
test
leave
push
cmp
cmpsl
cmp
jb
jl
les
repnz
mov
add
mov
lret
ret
and
push
sub
test
jecxz
lahf
enter
fimuls
call
xchg
xchg
daa
ja
lahf
ficomps
and
sub
test
lahf
xor
adcl
fidivrs
dec
out
nop
rclb
ficomps
das
sahf
nop
iret
repz
stc
adc
sbbb
sbb
call
cmc
daa
push
xor
mov
jns
test
mov
aas
sub
xchg
enter
adc
sub
out
outsl
xchg
or
and
repnz
ds
arpl
add
int
ds
mov
add
daa
sbb
pop
std
mov
pop
test
push
fistpll
pop
movsl
andl
lods
hlt
pop
bound
sub
push
in
push
sub
dec
lahf
pop
loopne
in
icebp
pop
cmp
sbb
jae
fimuls
mov
push
cmp
dec
mov
pop
sub
mov
sbbb
in
jb
mov
and
mov
cmp
movsl
jb
je
in
push
cs
xchg
push
inc
xchg
mov
inc
fwait
sbb
aam
cmpsb
jbe
push
out
addb
inc
sahf
aad
inc
sahf
adc
xchg
int
push
xchg
xor
jmp
pop
pop
xchg
xchg
lret
jg
mov
push
mov
mov
movsl
jb
mov
mov
mov
mov
movsl
mov
stc
pop
inc
insl
xor
fstl
sub
mov
test
fwait
popf
sub
xchg
xchg
inc
in
or
bound
mov
push
test
pop
mov
and
xchg
xchg
dec
cmp
add
icebp
je
inc
xchg
lret
lret
jnp
add
xor
xchg
sbb
sbb
mov
lret
nop
popf
inc
loope
movsl
jb
pop
test
in
push
pop
rcll
pop
mov
movsl
mov
clc
sbb
mov
aaa
mov
dec
push
iret
aas
into
or
enter
aaa
and
mov
test
dec
pop
sbb
jg
and
sub
out
xchg
inc
rcl
in
jmp
fwait
sbb
into
push
clc
push
sarb
sbb
test
test
adc
xchg
dec
in
mov
test
mov
jb
clc
lahf
or
lcall
mov
push
add
jne
cmpsl
inc
movsl
je
data16
xor
push
iret
sub
int3
xchg
and
mov
pop
mov
aam
loop
fsubs
icebp
adc
and
clc
pop
mov
div
xchg
lock
clc
daa
add
inc
mov
movsb
dec
xor
jle
mov
lret
test
xchg
mov
shrb
test
or
dec
pop
aam
push
dec
cs
sahf
out
out
pop
ljmp
int
mov
in
inc
fimuls
add
rolb
jp
aas
dec
shrl
insl
push
pop
dec
push
loopne
stos
rcrb
jo
push
sbb
sbb
ret
adc
fcomps
sub
xor
or
adc
adc
fwait
outsl
push
lcall
cmc
insl
ljmp
lret
out
cmp
xchg
or
fisubrl
out
sbb
pushl
in
gs
pop
sbb
jmp
rcrl
sbb
lods
xchg
jne
mov
cmpsl
sahf
nop
dec
xchg
add
jbe
sahf
xchg
or
sbbb
inc
mov
mov
or
sahf
mov
xchg
mov
clc
movsl
mov
or
pop
mov
out
mov
or
fcomp
pop
andb
push
getsec
pop
xor
push
iret
sub
xchg
std
cmp
lock
in
mov
lahf
mov
sbb
dec
cmp
jbe
inc
jo
jp
pop
scas
jle
push
jnp
nop
jl
lods
insb
fimuls
enter
int
ljmp
pop
inc
sub
sahf
add
mov
adc
sub
adc
out
leave
dec
sub
movsb
in
xchg
out
scas
xlat
push
jns
js
xor
rorl
ffree
mov
push
loopne
push
test
or
fnstsw
ljmp
push
mov
les
iret
push
fcomp
mov
cltd
push
xor
xor
rcrb
mov
cmp
movsl
or
fcompl
clc
lock
andl
popf
test
jecxz
rcrb
loopne
clc
sub
in
pop
lret
lahf
lods
push
bound
mov
in
jmp
jo
fdivrl
sub
lock
and
in
jg
xchg
popf
scas
ljmp
sbb
jl
fsubrs
jg
pop
mov
adc
mov
mov
sub
mov
jno
push
in
mov
rcrb
ss
lock
sbb
jge
jmp
jae
fiaddl
jb
cmp
in
repz
test
movsb
mov
rep
insb
push
test
ds
pop
scas
and
ret
push
lea
rolb
pop
iret
sub
jns
enter
mov
addb
cwtl
or
push
aaa
aaa
aaa
mov
cmp
dec
xor
fsubrs
sub
jbe
pop
sahf
cmp
pop
jae
jo
aad
mov
xchg
bound
cli
fnstcw
add
mov
pop
data16
outsb
outsb
outsb
fisubrs
mov
inc
loop
adc
adc
push
outsb
outsb
jae
pop
rcrl
aam
mov
push
jbe
loope
fldt
test
enter
pop
cmp
fidivrs
test
addr16
push
mov
sahf
or
js
inc
add
jbe
out
jnp
and
mov
shrb
cmp
dec
pushf
push
shll
js
pop
repnz
loop
xor
mov
sub
scas
mov
in
dec
xor
mov
aad
mov
sub
clc
push
jb
lea
xor
dec
aas
pop
xchg
mov
add
push
not
lds
gs
jb
out
mov
fisubrs
cmp
test
lods
jg
repnz
aam
sahf
or
and
add
iret
lret
or
sub
push
movsl
jge
rorb
movsb
sahf
gs
fisubrs
and
je
fwait
fwait
push
test
lds
idivb
mov
addr16
pop
pop
call
sub
mov
fcom
mov
and
jle
mov
push
aam
xor
shrb
sahf
xchg
cmp
test
insb
insb
mov
add
dec
add
xor
aas
fs
scas
idiv
mov
jg
and
lret
mov
or
fimuls
xchg
xor
mov
out
sti
loop
mov
push
insb
fwait
inc
jle
in
fwait
fwait
fwait
fwait
push
mov
push
int
mov
ret
imul
mov
stos
outsb
outsb
outsb
out
inc
inc
adc
in
pusha
or
icebp
insb
add
sbb
imul
hlt
mov
sar
fsubp
lret
mov
xchg
mov
adc
rcrb
and
aas
movsl
loop
js
push
xor
cs
xchg
or
daa
lahf
lock
hlt
dec
fs
shlb
jle
in
leave
sub
roll
sub
aas
push
imul
movl
push
nop
mov
cmp
ja
pop
xchg
dec
sti
mov
iret
negl
int
cmp
je
cwtl
mov
out
in
mov
lods
and
out
push
stc
and
mov
int
int
push
std
push
adc
push
mov
add
pop
pusha
inc
mov
aas
sarb
jnp
xor
int3
lret
jg
lahf
jge
and
imul
int
jle
add
sub
aaa
aaa
jg
lods
fsubp
leave
cwtl
rolb
aam
sti
and
pop
jg
xchg
or
jae
jae
and
dec
inc
ljmp
jae
jae
adc
popf
test
pop
out
es
movsl
out
mov
mov
cmp
push
ret
xchg
out
mov
mov
cmp
arpl
jae
cmp
mov
dec
cmp
jb
mov
sub
add
pop
and
xor
xor
addb
mov
data16
fwait
fildl
mov
push
or
stc
fwait
push
sub
cld
fwait
fwait
fwait
fwait
cmp
shl
mov
sub
xchg
inc
outsb
aas
fwait
fwait
scas
test
cmpb
ja
pop
lods
mov
outsb
aaa
insl
push
or
out
mov
mov
je
popa
fiaddl
addr16
adc
pop
loopne
xorb
inc
in
pop
in
sbbl
mov
mov
inc
cmp
lds
mov
jbe
movsl
xchg
sbb
aam
push
jmp
push
xor
inc
cli
fadds
or
setg
idivl
bound
push
subl
jg
cs
mov
fsubs
adc
and
call
das
loop
jmp
aas
jle
mov
sbb
xchg
in
inc
sbb
roll
neg
adc
aad
shlb
cmp
loope
sub
sub
xchg
xchg
pop
lock
xchg
jo
inc
mov
xor
pop
aad
jae
pop
bnd
hlt
cmp
or
fsubrl
push
mov
push
mov
mov
lahf
and
test
push
lahf
in
xchg
lock
push
dec
xor
adc
sub
sti
fnstcw
mov
insb
cwtl
rorb
jb
je
jae
jae
fwait
cltd
mov
mov
adc
int
in
jae
jg
sub
add
int
int
push
enter
bound
mov
out
inc
int
pop
adc
inc
out
xchg
mov
mov
mov
jmp
in
stc
cmp
inc
push
jo
lahf
xor
xchg
popa
stos
hlt
sahf
aaa
out
dec
or
cmp
mov
aaa
aaa
aaa
iret
sub
xchg
aas
inc
das
or
aaa
aaa
aaa
dec
movsb
add
imul
in
inc
clc
jge
push
clc
imul
mov
int
sar
stc
or
adc
pop
mov
int
repnz
imul
mov
xor
xchg
mov
aaa
mov
mov
pop
lret
mov
iret
idiv
in
rol
dec
or
lcall
daa
adc
fdivrl
cmp
cmp
pop
leave
adc
inc
mov
xchg
mov
test
dec
cs
mov
imul
fcoml
lea
leave
push
test
jnp
popa
roll
sbb
jo
lret
out
cmp
dec
icebp
clc
jns
fs
arpl
ret
xchg
out
pop
xchg
adc
and
cmc
clc
mov
outsb
outsb
lahf
fwait
push
frstor
inc
shrl
jge
outsb
outsb
push
dec
adc
movsl
mov
mov
sbb
test
mov
cmc
mov
jmp
adc
push
roll
stos
xchg
xchg
test
xlat
int
int
xor
mov
aas
jae
cmp
sbb
sbb
lahf
rcll
jnp
sti
xchg
bound
fildl
sti
sbbb
and
fwait
fwait
fwait
popl
xchg
rcl
fstpl
in
push
aaa
aaa
aaa
lahf
jno
loop
repnz
stc
ds
sub
jge
inc
adc
ret
popa
incl
sti
mov
fiaddl
and
iret
jae
jae
dec
mov
dec
push
js
mov
rcl
lahf
mov
push
mov
jns
test
mov
push
jmp
add
add
aam
jae
cwtl
and
sbb
in
push
mov
je
stc
imul
xor
addr16
jae
leave
and
jmp
iret
int
out
mov
das
or
std
test
out
jbe
xchg
out
rorl
dec
arpl
out
loop
and
es
outsb
aas
fwait
fwait
adc
pop
js
sarl
bound
dec
jge
aas
mov
dec
cmp
fnstcw
fwait
fwait
stos
xchg
push
jb
jle
jb
xor
jecxz
cmp
mov
int
push
sub
sbb
imul
out
out
mov
outsl
inc
jne
sub
out
out
mov
pop
mov
pop
and
jge
or
pop
ljmp
pushf
stc
mov
dec
ret
sbbl
pop
outsb
out
idivb
mov
adcl
fidivl
inc
or
arpl
fwait
fwait
lret
movsb
out
movsl
mov
ss
aaa
cld
gs
icebp
les
jmp
jl
sbb
mov
iret
out
mov
mov
jae
jae
mov
sarb
popa
mov
shlb
mov
cs
fcmovnbe
dec
arpl
mov
fwait
fwait
fwait
dec
inc
dec
xchg
xor
test
nop
outsb
outsb
lahf
fwait
dec
out
dec
enter
loopne
sarl
clc
outsb
outsb
outsb
outsb
add
scas
push
mov
idivl
sub
outsb
jmp
push
in
and
xchg
fwait
cmpsb
pop
mov
scas
fcmovbe
in
adc
inc
or
divb
cli
sbb
fdivr
or
out
out
js
pusha
mov
mov
js
out
pop
or
popf
inc
pop
test
lds
cmp
pushf
xchg
sub
or
jge
sbb
mov
aaa
mov
and
shl
fisttps
cmp
mov
dec
loopne
aaa
aaa
aaa
inc
setge
adc
adc
jae
fdivrl
mov
mov
hlt
push
pop
pusha
ja
fwait
outsl
aaa
sbb
jle
js
inc
mov
or
inc
ljmp
fmull
add
fcomip
mov
xor
dec
out
out
mov
cmp
clc
add
out
sub
push
mov
fwait
fwait
fwait
fwait
xor
and
adc
jg
fwait
fwait
fwait
fwait
pusha
xchg
mov
enter
adc
jle
aaa
lahf
repz
adc
push
mov
jnp
xchg
xchg
out
add
mov
sbb
xchg
sbb
mov
mov
int
in
nop
pushf
sahf
or
jo
popa
push
sub
jg
aaa
mov
xchg
popa
gs
jge
insl
and
rcl
js
aaa
mov
xchg
subl
xor
pop
mov
pop
icebp
ljmp
sbb
mov
stos
cmpsb
outsb
cli
inc
lcall
arpl
xchg
push
cld
insb
outsb
mov
loopne
cltd
mov
test
aaa
or
mov
push
aad
testl
or
mov
and
int
int
out
pop
push
adc
inc
push
in
dec
mov
or
mov
inc
xor
jae
jae
inc
and
loopne
jne
mov
mov
jae
mov
in
lock
test
jo
push
jecxz
mov
sbb
pusha
rorb
xor
ss
aaa
pop
stos
andb
sbb
xor
shr
sub
inc
les
and
jae
jae
and
mov
and
cltd
mov
jae
jae
jbe
ja
or
rcrl
insb
outsb
mov
cld
push
shll
inc
cmpsl
out
mov
rorl
test
xlat
iret
push
aad
dec
mov
mov
int
lods
inc
mov
pushf
push
cmp
out
test
int
adc
std
addb
insl
mov
jae
mov
hlt
cmp
imul
or
sub
into
out
lahf
cmp
lcall
fdivrl
repnz
mov
bound
sti
fcompl
cmp
pop
ficompl
xchg
fnstcw
sbb
sub
mov
icebp
fdivrl
int
icebp
dec
mov
xchg
in
fisubrs
sti
xchg
cmpl
in
movsl
sbb
xor
and
aaa
mov
leave
popa
mov
lret
xlat
push
dec
es
add
cmpsb
leave
jmp
enter
mov
addb
ljmp
in
neg
subb
repnz
adc
add
sti
fnstcw
shll
hlt
bound
mov
add
addr16
sbb
rolb
movsb
movsl
and
dec
push
loope
clc
scas
mov
outsl
into
int
int
psrld
icebp
lahf
bound
outsl
jns
mov
mov
pop
cmp
xor
fwait
fwait
fwait
fwait
push
dec
adcb
mov
fldenv
fwait
fwait
fwait
cmpsl
mov
sbb
jnp
int
std
sahf
fwait
fwait
push
out
add
dec
sub
sbb
sbb
divb
inc
stos
adc
stos
popa
xor
movsl
dec
out
out
add
mov
ror
rcll
inc
mov
add
popf
icebp
push
outsb
adc
dec
push
das
out
out
or
pusha
int3
out
push
in
add
jb
les
out
out
flds
in
push
add
add
out
adc
cwtl
xor
fists
test
jg
mov
add
push
in
push
outsl
test
hlt
mov
fcmove
xchg
pop
sbb
cmp
pop
cmp
lahf
in
mull
adc
addr16
popa
mov
cmpsb
dec
iret
out
push
xor
daa
je
out
cli
xor
jo
test
and
outsb
outsb
imulb
pop
push
aam
ds
mov
bnd
sahf
js
or
mov
iret
int
cmc
mov
or
repz
and
movd
stos
and
aas
push
mov
test
jae
sti
pop
sbb
testb
mov
xchg
mov
jae
lret
dec
adc
xchg
ret
cmpsl
fbstp
jp
xchg
adc
rcll
push
adc
jle
iret
lods
push
xor
loope
nop
jae
mov
ret
mov
nop
rolb
lret
arpl
push
rcrl
data16
sbb
outsb
outsb
into
mov
sub
dec
aas
adc
insb
outsb
outsb
outsb
inc
mov
pop
push
les
mov
lods
jecxz
mov
enter
xchg
fdivs
aaa
aaa
mov
sahf
mov
sub
xor
jl
aaa
enter
add
scas
lahf
lret
mov
leave
cld
push
sahf
fwait
ds
xchg
cmpsb
testb
lock
aas
lret
mov
fcompl
pop
jp
pop
out
repnz
xchg
invd
loope
mov
int3
int
lahf
fwait
loop
cmp
push
mov
pop
sbb
int
popf
call
enter
mov
ss
int
xchg
jecxz
add
mov
mov
fdivrl
je
jbe
xchg
dec
push
std
fbld
loopne
loope
sti
test
outsb
int3
cmp
fstp
mov
ss
mov
mov
and
jnp
cld
and
outsb
scas
cli
jge
rorb
sub
push
or
mov
test
sbb
push
cmpb
mov
aaa
aaa
aaa
mov
sbb
ds
fistps
lret
jl
fimuls
inc
push
iret
insb
out
jg
cmp
pop
sahf
adc
hlt
insl
scas
rcrb
out
fidivl
sub
push
or
iret
dec
jo
dec
or
mov
pop
fsubr
jg
aam
adc
xchg
mov
fwait
fwait
jns
cmp
mov
mov
fwait
add
cld
in
popa
cmp
xchg
outsl
xchg
adcb
xor
inc
and
shll
jle
aaa
mov
aam
loope
xchg
filds
cmp
lahf
scas
jg
pop
jmp
jg
movq
adc
xor
popa
fcomip
pop
hlt
lcall
outsl
jb
mov
push
push
dec
aas
fwait
fwait
pop
test
daa
sbb
jle
cmpsb
xchg
aaa
shlb
xor
xchg
jae
or
fwait
dec
xor
stos
andb
jae
push
sbb
sti
mov
mov
dec
stos
mov
jae
adc
repz
add
mov
arpl
mov
loop
std
dec
jae
adc
imul
jae
fldcw
jb
adc
pop
mov
ret
jae
cmp
cmp
jb
xor
in
lods
clc
xchg
scas
repnz
inc
xchg
out
je
mov
loop
adc
mov
adc
mov
jae
jae
adc
movsb
test
mov
iret
in
addr16
pop
mov
or
add
cmp
sub
and
fdivrl
shlb
inc
nop
adcb
loopne
les
xorl
xor
int
rclb
test
loop
xor
scas
mov
int
xor
mov
xchg
cmp
outsb
mov
popa
aaa
aaa
aaa
aaa
mov
fcoms
outsb
adc
cmpsb
daa
aaa
aaa
aaa
aaa
push
jbe
clc
xor
aaa
aaa
cmpsb
inc
or
negl
jle
aam
addr16
ss
test
jle
lret
cmp
pop
enter
leave
fwait
fwait
fwait
fwait
cmpsb
aaa
pop
xchg
out
pop
sub
icebp
lock
add
push
js
cmp
int
int
fsubr
in
cli
ja
sarl
push
cltd
outsb
jle
lahf
cli
test
mov
cmp
push
mov
jb
popa
mov
shll
fldenv
jb
fwait
cmp
bound
hlt
stc
mov
inc
or
jb
test
aam
jb
xor
pop
dec
mov
loop
cmp
jb
add
pushf
aaa
push
loop
fcmovne
adcb
mov
outsb
lahf
fwait
fwait
add
and
cmp
mov
adc
imul
mov
mov
test
jns
out
dec
inc
fidivrs
xchg
cmp
sahf
or
sahf
cs
fwait
fwait
fwait
sbb
cmp
fld
repnz
fwait
fwait
fwait
rclb
or
les
mov
outsl
mov
xchg
and
stos
mov
adc
aas
pop
mov
hlt
xor
cmp
jle
loopne
mov
mov
xchg
cmp
out
push
or
mov
dec
xchg
les
add
out
mov
pushf
xor
inc
out
mov
dec
lahf
fcmovne
or
lods
mov
fidivs
dec
js
dec
mov
pop
filds
dec
fwait
fwait
fwait
fwait
push
pop
jns
jg
int
out
ljmp
je
adc
popf
bound
ds
fwait
fwait
sbb
sbb
outsb
xchg
js
imul
js
movsb
lds
hlt
or
sub
fwait
fwait
fwait
fwait
sti
push
xor
sahf
in
lret
mov
fwait
pop
mov
push
cmc
and
les
or
or
test
iret
inc
in
add
mov
int
adc
xchg
aad
mov
dec
iret
int
push
icebp
cmpsb
cwtl
mov
mov
out
clc
xor
test
adc
outsb
outsb
outsb
fisttps
adc
addr16
hlt
je
adc
insb
outsb
outsb
outsb
inc
lock
in
mov
ret
std
js
xchg
mov
movsl
mov
jae
jae
fnstcw
mov
sbb
sbb
clc
jbe
lret
int
in
and
mov
cli
pushf
and
mov
int
loop
sbb
add
cmpsl
adc
cmp
aaa
into
repz
stc
sbbb
lea
or
pop
mov
mov
inc
out
fidivrs
aam
push
clc
lret
dec
addb
andl
push
in
stc
les
dec
push
jb
or
add
js
push
repnz
jmp
cmp
sub
pop
push
fildll
pop
cmp
push
add
mov
out
out
mov
mov
push
out
notl
out
and
pusha
imul
adc
out
out
mov
dec
sbb
push
clc
shl
out
out
sub
inc
xor
xchg
jge
mov
out
out
mov
jae
dec
fdivrs
aad
sub
out
out
enter
push
mov
jle
je
addr16
shl
aam
call
mov
les
jb
in
and
push
mov
loop
mov
jnp
xchg
mov
sbb
or
lods
sbb
pop
add
push
int3
lods
and
or
cwtl
popf
int
int
dec
nop
enter
sahf
or
mov
lods
push
sarb
push
mov
bound
jo
movsb
dec
std
insb
outsb
pop
jecxz
cld
shl
xchg
aaa
xor
test
iret
out
or
mov
test
fsubrl
lahf
inc
aas
fwait
in
lock
int
clc
sti
fcompl
add
call
sbb
or
sbb
mov
mov
std
xor
out
pop
movsl
loopne
cmpsb
and
scas
idivl
nop
push
jo
sar
or
cld
enter
jae
ret
repnz
and
mov
pop
pop
int
in
jae
icebp
fisubrs
pushf
push
mov
int
mov
je
leave
xchg
pusha
dec
jnp
cmpsl
adc
ss
aaa
test
shl
xor
cli
jae
sti
sbb
inc
lods
bound
sahf
xor
jns
in
addr16
mov
jle
ret
pop
and
int
int
dec
sub
stos
ret
aaa
aaa
add
sbb
call
stos
mov
loop
jbe
adc
jae
pop
out
push
mov
mov
ret
adc
jae
jae
mov
test
hlt
sbb
shrl
mov
lods
mov
jle
faddl
adc
scas
fsubr
mulb
bound
subb
out
or
pusha
into
mov
es
fwait
fwait
fwait
imul
pusha
xor
aas
fwait
fwait
fwait
add
add
nop
ret
push
ja
out
add
mov
inc
adc
out
mov
add
push
pop
lret
adc
pop
ficoml
cld
jae
pop
mov
pop
rcr
shlb
insb
mov
jae
dec
add
inc
cmpsl
pop
in
and
iret
int
in
inc
lods
xchg
mov
add
sahf
mov
out
or
into
cmp
repz
out
out
jl
adc
lds
mov
cli
mov
inc
mov
pop
sbb
ds
jnp
iret
and
lock
mov
test
sub
shrb
jne
adc
test
jp
add
and
sti
and
ss
outsb
lahf
fwait
div
mov
lahf
clc
adc
pusha
pop
addr16
sti
pop
rorl
shrb
test
pop
iret
in
lahf
scas
xchg
sahf
inc
sti
enter
clc
mov
or
or
mov
nop
cli
lahf
jl
iret
out
mov
jo
xor
inc
outsb
outsb
outsb
pop
push
popfw
mov
sub
dec
outsl
out
push
xor
outsb
cld
insb
outsb
outsb
xchg
cwtl
pop
sahf
push
das
hlt
popf
fs
ss
aaa
mov
out
jp
jae
inc
mov
daa
and
sbb
ss
adc
adc
push
add
out
idivb
xchg
xor
clc
test
shl
and
out
out
inc
xchg
push
dec
mov
out
out
shr
adc
pusha
xor
inc
fcmovne
out
inc
sub
repnz
aaa
aaa
lahf
sub
mov
inc
push
mov
fwait
jmp
fcompl
in
inc
subl
repz
jae
lods
xchg
dec
repz
int3
in
sti
gs
int
addr16
sar
scas
dec
fnstcw
out
test
push
scas
lahf
pop
xor
or
cwtl
lcall
jae
loopne
movsb
adc
daa
adc
xor
out
stos
testb
xlat
dec
fs
test
jo
and
cmp
jae
inc
inc
jbe
xchg
sarb
mov
cs
mov
enter
jle
cmova
loopne
cwtl
sahf
push
jmp
fstps
mov
or
rclb
pushf
fwait
fwait
sbbl
cmp
sahf
sbb
mov
fiaddl
jmp
pushf
fisttpl
pusha
inc
xchg
ret
test
mov
mov
cwtl
xor
ds
push
or
iret
pop
jle
cmp
cli
mov
add
lock
fistl
xor
cmpb
push
int
int
mov
in
idivb
mov
daa
push
nop
sbb
add
ss
cwtl
call
sbbb
outsb
outsb
outsb
xor
test
mov
jge
push
std
insb
outsb
outsb
push
decb
mov
sarb
mov
mov
cltd
pop
inc
cli
mov
mov
sbb
and
xchg
movsl
inc
je
mov
mov
and
mov
test
rcl
add
ret
mov
enter
jae
aaa
push
das
cltd
sub
pop
push
clc
addb
imul
or
and
into
pusha
jns
scas
sahf
fwait
mov
pop
fisubs
fs
mov
gs
push
repnz
aam
fcomi
lods
mov
shlb
insl
nop
inc
xchg
mov
insb
outsb
lahf
mov
rcrl
pop
out
cmp
adc
add
push
fs
in
fldenv
frstor
mov
sti
test
bound
pusha
enter
leave
insb
clc
dec
sbb
xlat
sbb
or
xchg
hlt
inc
test
mov
adc
iret
out
mov
sahf
out
cmc
inc
mov
out
sbb
int
int
push
pop
adcl
jmp
adc
xor
jmp
cld
sub
fwait
fwait
test
popf
jbe
pusha
lock
push
sti
arpl
jge
push
mov
push
mov
xor
inc
fucomp
mov
jecxz
mov
add
inc
out
fwait
fwait
sub
xor
sbb
std
inc
cmp
fwait
nop
push
adc
mov
test
hlt
cmpl
out
push
icebp
jecxz
sbb
pop
push
fwait
jo,pt
ds
push
add
popf
and
in
addr16
mov
pop
je
cwtl
cmp
cmpsb
lahf
int
cmp
dec
adc
es
mov
iret
out
rcl
les
dec
imul
daa
pusha
pop
push
aam
int
in
and
mov
test
mov
mov
das
xor
mov
xor
nop
sbb
call
imul
mov
mov
sbb
movsb
repnz
pop
push
sub
rclb
jo
fcompl
scas
push
scas
aas
inc
mov
clc
gs
or
lahf
int
in
mov
sbb
out
jmp
xchg
lahf
mov
or
clc
fnstcw
insl
or
ss
mov
idivb
jl
std
push
pop
cmc
dec
rorb
les
adc
dec
or
scas
push
jne
xor
es
js
sbb
dec
out
mov
dec
xchg
loope
mov
shlb
addl
jle
cld
js
mov
andl
sahf
dec
mov
arpl
pop
sahf
mov
jle
in
lods
xchg
or
jne
movsl
lds
push
movsb
ljmp
mov
insb
cmp
mov
mov
push
pop
mov
jl
xchg
iret
loopne
fdivl
mov
fstpl
ret
scas
push
pop
shrb
sbb
sbb
push
add
mov
mov
mov
subb
adc
add
or
test
testb
push
mov
and
ljmp
xchg
sbb
aaa
aaa
aaa
lock
add
in
sub
imul
fisubs
in
out
out
jo
enter
leave
pop
and
inc
iret
out
out
pop
jns
cmp
sarl
jae
divl
sbb
add
lock
or
scas
lods
scas
stos
adc
push
gs
or
subb
mov
fdiv
aas
jnp
inc
fdivrl
aaa
or
inc
lods
test
or
fcompl
or
add
rcr
jecxz
aaa
push
cmp
loop
out
fmul
call
aaa
aaa
aaa
aaa
inc
lock
xchg
fildll
int
push
shr
ss
aaa
test
dec
mov
std
je
mov
mov
xchg
mov
ds
mov
pop
mov
shrl
clc
dec
pop
in
fsubrl
adc
push
aam
dec
ss
out
fprem
push
clc
mov
and
mov
sarl
xor
xchg
add
xchg
jo
movsb
repnz
inc
pusha
cmp
fwait
into
push
xchg
pop
push
mov
ret
push
dec
lea
push
das
outsb
out
pop
outsb
outsb
outsb
outsb
jmp
leave
jl
dec
and
test
insb
imul
jo
movups
punpckhdq
bound
ds
popl
cmc
clc
insb
pop
hlt
imul
cmp
fcoml
mov
cmp
cld
cmp
mov
out
in
mov
loop
lea
sahf
inc
adc
mov
mov
sub
inc
jo
push
addr16
fbstp
aaa
dec
jg
jae
xor
pop
cmp
mov
int
pop
xchg
cmpsb
hlt
mov
dec
lahf
adc
inc
mov
sarb
aaa
jecxz
dec
mov
sahf
adc
je
scas
cli
fwait
and
cmp
out
imulb
scas
sbb
out
add
addr16
jg
or
out
into
xor
jp
jns
fdivrl
arpl
fistpl
sub
mov
jg
add
lds
jno
iret
cmpsb
lahf
sahf
and
sbb
repnz
out
clc
mov
sbb
je
shlb
outsb
pop
and
idiv
sbb
lods
push
xor
adc
sahf
pop
push
hlt
xor
addr16
jo
ss
out
and
cwtl
sub
jle
jecxz
mov
mov
xchg
lret
dec
ds
add
sbb
xor
jmp
fidivl
dec
pop
xchg
mov
aam
or
scas
popa
in
mov
mov
pop
jbe
cmpsb
lahf
int
xor
imul
insl
dec
shl
out
test
mov
add
popf
mov
mov
enter
mov
sbb
repnz
sub
out
out
xchg
mov
sarb
scas
jle
mov
test
pusha
sbb
adc
pop
cmc
mov
fcmovbe
out
sahf
les
lock
fcmovne
pop
cli
dec
mov
or
not
int
int
and
dec
rorl
fs
mov
lret
dec
mov
dec
dec
mov
mov
fwait
shlb
sbbb
outsb
outsb
outsb
aas
sub
and
subb
jno
rcll
enter
jge
push
bound
cmp
leave
call
rolb
xchg
mov
sti
jle
lahf
int
adc
and
outsb
outsb
jle
ficoms
fnstenv
aaa
aaa
cmp
lret
loop
popf
jae
adc
fdivrl
shlb
xor
popf
pop
aam
clc
fmul
adc
popa
lret
iret
fdivl
divb
mov
adc
out
ficoml
fmull
mov
pop
jl
movsb
sbb
cli
pop
sbb
add
jo
cmpsl
out
out
in
sarb
rclb
test
dec
or
rcrb
add
jle
stos
mov
mov
push
adc
cs
out
mov
cmp
loopne
cmp
pop
mov
xor
sub
mov
jl
pop
mov
rorb
dec
incb
les
mov
inc
adc
cmp
mov
enter
mov
sub
pop
mov
in
movsl
push
mov
pusha
out
dec
leave
mov
mov
arpl
mov
inc
ficomps
negb
fwait
add
inc
mov
sbb
icebp
mov
mov
jb
push
shlb
icebp
fchs
and
cli
sub
pop
pop
or
clc
push
jle
add
push
xchg
cmp
dec
jge
faddl
out
popa
pop
xchg
jmp
jae
inc
loop
cmp
sarl
filds
int
jns
nop
das
rolb
mov
int
int
dec
jbe
loope
xor
aaa
aaa
aaa
mov
inc
sub
icebp
sbb
fistpl
aaa
shl
xlat
cli
aaa
movsl
xchg
int
int
sahf
jns
xor
push
mov
inc
rol
pop
aaa
aaa
mov
mov
fwait
inc
loopne
or
ds
aaa
aaa
mov
cmpsb
jbe
and
clc
fisubl
rol
stos
nop
xor
adc
lcall
out
icebp
out
mov
js
jae
out
out
push
dec
xor
cltd
sbb
subb
lret
mov
xor
mov
or
xchg
cltd
cld
scas
mov
test
mov
mov
aaa
cmp
int
int
inc
paddusw
mov
sub
int
int
inc
inc
dec
hlt
in
lds
cmp
dec
pop
lcall
iret
popa
xchg
push
aas
imulb
outsb
jo
mov
mov
pushf
fwait
sub
push
je
dec
cmp
out
cmc
sub
push
jbe
xchg
adc
loope
lock
cmpsl
jle
sbb
insl
pop
xchg
lahf
inc
or
lahf
fxtract
adc
sahf
fs
jae
jmp
clc
lret
or
outsl
test
aas
clc
out
cwtl
clc
mov
lahf
dec
cld
lods
mov
and
jl
cmp
push
jnp
loopne
add
aaa
aaa
xor
lock
mov
idivl
inc
xchg
sbb
mov
fisttpl
pop
outsb
adc
inc
inc
mov
jae
inc
repz
fwait
hlt
push
jb
push
mov
out
out
lret
iret
xor
adc
sahf
js
inc
jae
out
xchg
mov
fwait
cmp
jo
cld
mov
pop
adc
test
jne
push
cmpsl
adcb
sbb
cmc
fnstcw
fwait
in
sarb
insb
inc
mov
pop
stos
adc
xchg
push
jle
aaa
push
mov
lahf
xchg
add
inc
outsb
scas
cmp
sti
push
ss
cld
pushf
cmp
insb
outsb
outsb
mov
mov
out
outsl
add
or
negl
jg
out
add
idivl
ror
imul
xor
jl
mov
cmp
jae
movsb
jle
lods
add
xchg
cmp
in
jae
clc
push
or
inc
out
inc
sub
lahf
dec
ds
fisubl
dec
addr16
mov
aas
fwait
fwait
mov
mov
add
int
imul
pusha
in
pop
dec
loope
cmc
mulb
int
push
inc
jb
out
mov
mov
mov
mov
test
xchg
outsb
jg
jge
xchg
xor
lods
mov
mov
fidivrl
outsb
outsb
test
inc
out
stos
cmp
out
dec
or
mov
sbb
les
mov
sub
rolb
fimull
data16
in
or
xor
mov
mov
pushf
sub
aad
sarb
shrl
pop
and
jb
outsb
scas
out
out
xchg
les
jo
mov
outsb
pop
add
jb
mov
mov
call
icebp
mov
outsb
dec
lea
movsb
mov
add
add
mov
popf
les
jae
pop
cmc
lock
inc
fwait
push
aaa
shlb
jb
in
or
pop
sbb
ss
adc
in
mov
lods
mov
add
shl
mov
cli
aad
mov
mov
data16
jae
sti
push
rcll
out
out
gs
and
xor
fnstsw
inc
in
out
arpl
jg
jle
test
mov
inc
jb
inc
or
sbb
in
fbstp
int
shll
adc
or
mov
fsubp
cmpsb
lahf
int
adc
or
stos
call
pop
and
inc
lret
shlb
fdivl
lahf
shl
leave
sbb
inc
jge
xor
fcoml
mov
mov
mov
inc
cwtl
icebp
sub
and
cmp
out
out
inc
inc
push
shlb
cmpsb
out
cmc
dec
jae
out
repnz
lret
ds
sbb
cltd
in
jae
jae
icebp
or
test
mov
test
aam
cli
daa
sahf
mov
icebp
mov
xchg
gs
jnp
insl
imul
adc
cmpsl
aaa
mov
cld
adc
push
mov
movsl
and
mov
mov
lock
sub
sti
insb
cmp
je,pt
mov
pop
cmc
stos
and
mov
and
fdivr
jno
das
push
push
jne
stos
jp
xlat
add
mov
dec
or
fdivrl
add
add
xchg
loopne
lods
movsb
sbb
sub
jae
fidivs
jge
rcr
out
mov
iret
int
in
dec
and
xorb
xor
lret
aaa
aaa
aaa
mov
in
add
cwtl
xor
ds
aaa
sahf
xchg
xchg
cmp
mov
outsb
inc
ljmp
sbb
nop
mov
add
push
push
pop
dec
pop
inc
ds
xchg
jecxz
mov
add
mov
jae
jae
orl
pop
fs
loopne
cmp
lahf
test
xor
aaa
aaa
aaa
mov
inc
cld
dec
xchg
stos
jg
push
js
stc
cld
sbb
test
mov
lods
sub
xor
loop
in
mov
sti
fmull
pop
enter
std
adc
xor
xor
je
add
lret
out
pop
in
jae
aaa
aaa
aaa
lock
jbe
pusha
mov
outsl
popf
out
jle
aaa
adc
jno
mov
add
sbb
nop
fwait
fwait
fwait
fwait
mov
rcll
cld
add
fimull
sbb
jae
pop
sbb
jbe
pop
bound
mov
mov
dec
out
pop
inc
adc
mov
pusha
xor
aaa
into
int
push
enter
mov
fdivr
jle
int
int
or
lds
cmp
mov
js
outsb
and
jmp
out
out
pop
mov
sahf
dec
mov
inc
dec
loopne
xlat
mov
shlb
dec
test
fdivrl
imul
dec
sarb
fsubrl
add
pop
sbb
adc
or
sbb
fstl
mov
ret
adcl
ja
or
stos
stos
lock
mov
push
pusha
mov
mov
fucomi
imul
lods
cmp
dec
fsts
inc
pushf
xor
cltd
fs
les
push
out
pop
icebp
inc
cmp
adc
lock
addr16
hlt
lahf
sti
rclb
fsubrl
xchg
mov
cld
fdivrl
cli
out
xchg
jl
jno
cmpsb
subb
rolb
in
enter
mov
int
int
sub
push
push
xor
and
int
sub
imul
int
int
mov
lods
fdivp
nop
sbb
pop
mov
loopne
lds
jae
pushf
fdivrl
lods
mov
pushf
enter
shlb
mov
xor
mov
fdivrl
cmp
sub
bound
adc
xor
imul
loopne
mov
mov
jns
outsb
int
int
or
inc
jne
sub
aaa
aaa
mov
cmp
cmp
dec
add
sbb
sub
repz
ds
aaa
aaa
mov
aam
js
xchg
jae
fldcw
cmp
lret
mov
lahf
int
jae
add
test
or
pop
dec
push
orl
dec
sub
mov
rolb
fisubs
ds
sbb
in
mov
xor
jno
das
jecxz
xlat
adc
lods
insb
test
dec
mov
adc
std
mov
fcompl
les
xchg
push
imul
mov
xchg
pop
sbb
js
mov
mov
jbe
inc
add
xchg
mov
int
xchg
shlb
sahf
int
pop
fs
jnp
lock
icebp
pop
sahf
push
loopne
lds
outsb
sub
fiadds
mov
faddl
cmc
sub
mov
lahf
in
push
clc
xor
cltd
sbb
mov
sbb
push
lds
dec
inc
iret
dec
xor
add
sarl
outsb
aas
ljmp
shll
shl
fcomi
mov
xorb
pusha
mov
sub
jmp
sqrtps
in
out
and
mov
out
out
mov
fdiv
mov
mov
out
dec
jne
loopne
xchg
xchg
fwait
shll
outsb
pop
cmp
test
push
dec
dec
inc
clc
jle
fdivl
adc
inc
mov
xor
pop
mov
ficomps
js
lret
and
cltd
outsb
mov
outsb
outsb
outsb
test
jo
and
pusha
push
mov
rolb
gs
and
mov
add
push
push
mov
jle
rcrl
adc
and
push
mov
xor
xchg
fstl
jge
clc
inc
call
adc
mov
arpl
test
fiadds
iret
int
jle
push
sub
fnsave
jnp
movsl
mov
cli
fsubr
push
mov
mov
aad
rolb
xor
outsb
outsb
fcomip
mov
pop
or
loope
jl
out
mov
lahf
fxtract
mov
daa
fistpl
sbb
test
iret
in
daa
ljmp
jns
xor
out
mov
fistpl
mov
or
jecxz
aaa
rolb
or
xchg
mov
dec
xchg
dec
out
sbb
js
cmpb
mov
shl
push
push
lods
test
inc
loop
js
jl
sbb
clc
or
sbb
iret
out
jb
ds
stc
outsb
movsb
pop
subb
fwait
fwait
fwait
fs
jo
jne
lock
pop
xchg
lea
jge
outsb
lahf
jns
pusha
inc
mov
push
shl
out
mov
lock
mov
cwtl
mov
sbbl
iret
out
mov
pop
jmp
lret
sbb
test
fwait
fwait
sub
push
xor
mov
clc
jecxz
and
aam
les
iret
popf
lea
dec
fisubl
cli
xor
xor
jo
aaa
aaa
mov
es
outsb
cmp
sti
jle
jg
fwait
fwait
mov
sbb
adc
pop
cmp
dec
add
jo
aas
fwait
fwait
cmp
imul
clc
loope
cmp
inc
fstps
push
mov
mov
fdivl
mov
inc
out
bound
push
cmpsl
frstor
loope
mov
xchg
ljmp
fldt
sbb
jg
int3
pop
jne
cmp
dec
cmp
push
mov
xor
jae
enter
xor
aaa
aaa
aaa
push
cmp
dec
pusha
cmpsb
fistl
or
adc
aaa
push
pop
sub
push
scas
inc
clc
add
jae
repnz
sub
pop
and
xor
enter
cmc
clc
mov
dec
call
rcll
and
inc
or
mov
aaa
aaa
aaa
lds
fwait
xchg
adc
daa
inc
rol
mov
loop
xlat
jnp
in
outsb
outsb
mov
incb
pop
repz
cmp
xor
inc
lcall
loope
xor
shlb
aaa
aaa
mov
fidivrl
xchg
loopne
and
fadd
data16
aaa
aaa
aaa
fimull
inc
mov
sti
fnstcw
cwtl
not
das
xor
mov
out
mov
iret
cmpsb
lahf
xor
mov
pop
sbb
adc
adc
xchg
iret
iret
out
dec
jbe
shl
pusha
addb
sbb
sti
jge
lock
js
rorl
xchg
mov
mov
outsb
outsb
fs
jecxz
dec
mov
popf
fisubrl
insb
bound
outsl
pushl
nop
fbld
ljmp
add
xchg
fmul
int
lahf
clc
and
inc
mov
cmp
push
adc
notb
sahf
fmul
call
lahf
das
cmc
in
or
push
push
out
ret
jo
cmp
or
adc
jp
stos
sub
pop
test
out
out
dec
mov
xchg
out
lret
out
out
daa
or
ss
sub
repz
jg
out
filds
mov
int
int
rclb
push
xor
adc
mov
imul
ljmp
or
inc
push
push
jecxz
jmp
push
adc
xchg
lock
ljmp
sbb
aaa
aaa
aaa
mov
in
je
push
mov
cwtl
or
cmp
ds
mov
inc
and
out
sbb
sub
cs
mov
outsb
pop
stos
int
cmp
insb
inc
fists
push
test
adc
sti
pop
mov
loopne
jae
sbb
daa
and
in
iret
xlat
ss
ficoms
xor
xchg
add
enter
mov
mov
je
mov
idivb
and
xor
loopne
or
test
out
pop
cwtl
fwait
cmpsl
dec
inc
jle
mov
int
adc
test
jbe
pop
int
int
repnz
into
test
pop
repnz
mov
orb
lahf
fwait
call
mov
ds
sub
int3
das
jae
test
push
das
andb
fwait
fwait
fwait
iret
push
cmp
out
inc
xchg
cmp
fwait
fwait
fwait
push
mov
push
push
sbb
xchg
clc
push
jae
rcrl
mov
pusha
mov
mov
sbb
jo
por
jae
sub
out
int3
xchg
mov
fisttpl
mov
fnstenv
fdivrs
aas
fwait
fwait
jecxz
sub
adc
cmpsb
xor
lds
mov
fs
dec
xorb
xchg
divl
shr
mov
in
das
inc
and
sti
dec
dec
imul
bound
dec
ss
jae
jae
xcrypt-cbc
cmpsl
push
pop
jg
aas
pop
xchg
adc
jae
lods
shrb
jp
test
ss
jae
repz
fldl
cld
add
fsubp
jne
ss
push
mov
data16
push
xchg
loope
mov
test
bound
out
jle
fcmovnu
shlb
stc
rorl
imul
jne
sahf
mov
gs
int
mov
mov
lods
clc
and
int
int
adc
fidivs
rcll
push
mov
inc
cmp
fwait
fwait
fwait
bnd
adc
mov
jo
fwait
fwait
fwait
sub
ret
loopne
and
fwait
fwait
fwait
fwait
xchg
stos
cmc
int
push
popa
je
adc
jge
cmp
mov
out
mov
mov
sub
lock
mov
mov
out
out
add
call
adc
adcb
dec
and
mov
sahf
inc
pop
and
pop
insb
out
out
push
dec
add
jle
mov
aad
add
push
leave
in
cld
mov
jae
jae
mov
adc
aam
xchg
and
fbstp
jae
sbb
data16
test
das
ffreep
addr16
lcall
aad
inc
rolb
inc
jmp
cli
movsb
pop
jp
cmpsb
icebp
lds
outsb
scas
fsubs
rcrb
stos
fwait
sahf
icebp
mov
imul
add
out
jae
mov
fsub
outsb
mov
addr16
lret
mov
sbb
and
dec
inc
out
adc
xlat
xchg
mov
std
inc
inc
push
add
cmpb
popa
xor
pop
mov
jae
xor
xchg
out
scas
dec
insb
lods
sarb
jge
adc
pop
out
dec
insl
or
pop
sahf
jp
dec
fsubrs
sub
dec
insb
push
pushf
pop
xchg
inc
pop
mov
ss
xor
or
sar
fnstcw
aaa
bound
adc
mov
ret
or
jae
in
add
test
jo
popf
mov
scas
into
test
jae
jae
inc
cmpb
sti
cli
lods
loopne
jns
int
addr16
mov
shll
push
gs
pop
pop
pop
push
mov
push
mov
pop
pusha
outsb
fstl
out
out
push
push
int3
sbb
or
mov
out
or
dec
xor
pop
pusha
scas
clc
sbb
fwait
fcmovnbe
dec
in
fs
dec
sub
fs
mov
sahf
int
bound
mov
shr
sub
fsubl
jne
bound
je
cmpsb
inc
scas
cltd
addr16
clc
insl
mov
or
cli
insb
cs
lods
cmp
cmp
je
out
mov
mov
cld
insb
mov
out
ss
mov
orb
into
andb
lcall
ljmp
mov
add
mov
push
sti
push
dec
das
push
lcall
pop
push
push
test
jle
pop
add
es
add
jecxz
adc
aas
int
int
adc
and
inc
mov
rolb
lods
push
jne
test
or
jle
outsb
outsb
dec
fidivrs
lret
xchg
cwtl
cmp
outsb
outsb
outsb
outsb
cmpsb
push
xchg
cld
cmpsl
cmp
movsb
ret
xchg
xor
clc
insb
outsb
cs
insb
mov
dec
jbe
dec
sub
cli
orb
jae
mov
push
fmulp
jnp
pop
and
jae
jae
fcoml
repz
xchg
aam
pop
push
call
aaa
aaa
aaa
aaa
repnz
fcomi
cs
pop
in
dec
cmp
mov
out
sahf
xchg
push
test
ja
out
jge
mov
add
out
cmpsb
lret
pusha
add
into
push
mov
mov
mov
sbb
sahf
push
mov
jno
aam
xchg
mov
and
outsb
sahf
pop
imul
push
lahf
sub
aaa
icebp
push
rcrb
sbb
push
ret
mov
daa
pop
cmp
sbb
movsb
xadd
aad
or
or
add
inc
roll
lock
sub
lock
outsl
mov
lret
fcompl
repz
adc
jecxz
push
sbb
mov
fimull
jnp
fdivr
cmp
mov
xorb
outsb
outsb
outsb
cli
mov
bound
xor
mov
outsb
outsb
adc
shll
mov
cld
cli
inc
mov
adc
in
push
mov
ljmp
out
out
push
mov
out
ss
lods
sub
bound
jge
mov
or
bound
mov
pushf
jae
pusha
jl
adc
scas
stos
idivb
sbb
mov
mov
or
out
jo
xchg
jp
outsl
cmp
ss
outsb
outsb
adc
jb
andl
dec
dec
mov
test
mov
mov
pusha
in
inc
mov
fadds
jl
into
push
mov
ret
lods
fisubl
add
in
and
aas
out
les
out
jl
cltd
inc
cmp
out
jae
ss
stos
sbb
jle
je
mov
lods
ficoms
stos
in
sti
pusha
mov
test
xor
ljmp
cmp
xlat
mov
mov
jge
mov
daa
cmpb
pop
inc
insl
fdiv
mov
stos
sub
lcall
cmp
fdivrl
mov
push
rcrb
fld
lret
outsb
aas
or
cwtl
enter
mov
or
out
jge
and
adc
dec
fdivrs
loop
jae
in
jmp
pop
xchg
lods
idivl
rolb
and
mov
lahf
ljmp
or
inc
sub
in
call
out
mov
rcrb
dec
adc
mov
out
movsl
mov
into
hlt
mov
addr16
nop
or
ljmp
cmp
imul
daa
ljmp
stos
adc
cld
pop
lock
lock
or
xorl
ret
outsb
rcll
inc
mov
jo
push
jle
xchg
xchg
cmpsb
pop
sbb
or
xor
jecxz
cmp
outsb
outsb
int3
jl
outsl
dec
jl
lds
out
xchg
adcb
sub
xchg
orl
test
adc
lcall
mov
inc
cs
rcrb
out
xchg
ja
fcmovne
testb
xchg
sbb
jecxz
stos
sahf
mov
testb
pop
in
scas
xor
ds
out
fldl2e
sub
push
cmp
out
outsl
mov
sbb
dec
call
aaa
adc
cli
dec
lcall
sbb
into
or
pop
les
shll
sub
cli
inc
pop
xlat
test
adc
cmp
add
fwait
inc
add
fisubl
adc
lahf
int
int
lods
or
and
mov
clc
push
fwait
push
daa
xchg
mov
out
ds
or
jae
cmpl
jle
or
xchg
xlat
push
insl
inc
jo
push
mov
sub
aas
fdivrl
add
popa
cmpl
jo
xor
outsl
mov
and
cmp
aaa
mov
dec
fcompl
sbb
int3
push
cmp
mov
dec
ljmp
xchg
out
divb
lods
and
roll
movsb
out
mov
lods
mov
ds
lahf
adc
mov
mov
cmp
sbb
mov
test
scas
inc
jl
dec
jle
lock
out
cmp
std
orl
imul
in
jae
mov
arpl
mov
int
push
ja
mov
cmc
pop
inc
inc
or
lahf
int
int
scas
or
jg
sbb
fwait
sbb
add
xor
fwait
fwait
fwait
inc
add
ss
mov
fwait
fwait
lcall
and
fisubs
jecxz
jnp
cmp
mov
dec
shl
out
out
lcall
xchg
inc
test
xchg
mov
sahf
dec
cmpsb
test
divb
mov
adc
sbb
ss
jmp
sbb
inc
js
xchg
fwait
mov
lds
xlat
pop
mov
jl
jo
out
sub
divb
nop
insb
jecxz
adc
xchg
fiaddl
shll
mov
je
mov
test
mov
fdivrl
push
and
mov
sub
fdiv
xlat
in
test
int3
pusha
sbb
fldl
cmc
fcompl
in
xor
lahf
fwait
stos
sahf
lods
mov
addr16
push
mov
xchg
mov
adc
cmp
out
add
out
cmpsb
stos
xchg
test
in
loopne
insb
outsb
outsb
mov
mov
imul
aam
mov
je
sub
mov
pop
std
xor
jl
dec
daa
clc
dec
into
mov
jle
and
sbbb
es
ficoms
lret
push
push
dec
or
into
int
int
add
and
out
or
mov
push
lret
push
xchg
mov
mov
fs
arpl
test
sub
jecxz
fwait
fwait
mov
test
testl
imul
daa
addr16
pusha
push
adc
mov
mov
ret
scas
shll
and
jae
fiaddl
xor
loop
in
or
decb
lahf
adc
and
nop
xor
ds
dec
mov
and
pop
jge
std
popa
pop
pop
cmp
outsl
mov
test
loope
jp
mov
les
andb
repnz
inc
iret
inc
ret
mov
mov
stc
cli
xchg
nop
pop
and
notb
lret
jle
in
mov
ljmp
iret
xchg
xor
outsb
jp
xchg
ficoms
ja
cli
pusha
or
pop
int
not
jp
mov
inc
adc
mov
out
sbb
dec
pop
aas
lock
insb
jg
xor
jbe
cmp
xchg
fdivrl
mov
xor
leave
lret
das
xor
aaa
jo
fsubr
xor
into
iret
out
jbe
fcoml
out
int
scas
out
mov
jp
jbe
add
outsb
outsb
es
sub
popf
push
nop
out
dec
std
add
mov
insb
out
mov
jae
out
clc
shlb
int
jo
xor
mov
sbb
and
testb
test
imul
jae
cmp
lret
in
cmp
outsb
mov
stc
insb
outsb
mov
xor
int
in
addr16
pop
iret
loopne
xorb
cli
mov
and
int
loope
adc
fucomip
in
xor
xor
and
xchg
mov
je
sahf
int
aas
jg
int3
inc
add
adc
mov
mov
mov
idivb
mov
mov
ss
inc
pop
add
hlt
pop
and
dec
int
int
add
adc
iret
aad
cld
mov
xchg
test
mov
or
push
fwait
fistl
mov
mov
insl
mov
iret
or
movsl
fs
xor
mov
aaa
xlat
pop
mov
and
xchg
outsb
push
lcall
rclb
test
mov
out
add
ret
push
stos
int
xchg
out
out
cmp
jno
adcl
mov
xchg
shl
pop
lods
mov
jae
mov
in
inc
movsb
rolb
lahf
stc
push
or
mov
cmp
push
popf
das
fwait
fwait
fwait
fwait
or
aad
imul
hlt
jmp
popf
outsl
xchg
add
or
popl
pusha
add
push
or
outsb
sub
call
ds
cmpsb
fidivrl
mov
testb
mov
pop
test
loope
fwait
loopne
push
fcomip
ljmp
fwait
fwait
incl
adc
mov
stc
repnz
test
inc
cmp
mov
mov
mov
sub
push
and
sti
ror
sbb
arpl
cmp
adc
adc
aas
movsl
cli
divb
cwtl
ljmp
inc
mov
scas
xchg
cmc
mov
adc
out
out
in
xor
push
int
jne
jae
subb
iret
sahf
out
mov
adc
push
lods
insb
outsb
ja
add
jo
sub
pop
cmp
aaa
aaa
push
data16
test
add
xchg
push
xchg
and
jo
pop
fwait
fwait
fdivs
dec
fisttpll
ficompl
cmpb
or
aaa
jge
cmp
ljmp
and
or
mov
pop
sub
in
cmpsb
fbstp
rcrb
pop
sub
arpl
xor
xchg
fwait
sbb
lcall
aaa
jl
xchg
push
popa
inc
inc
and
call
or
lods
xchg
sbb
mov
push
pusha
add
fwait
fwait
es
jns
filds
fwait
sar
je
cmp
pushf
repnz
adc
add
or
pop
aam
movsb
mov
sub
pop
inc
mov
je
insb
mov
mov
ja
push
adc
scas
hlt
sti
push
mov
dec
mov
lock
mov
repz
dec
stos
arpl
div
dec
push
enter
or
sbb
pop
or
test
in
imul
dec
cmp
sub
dec
rolb
lods
daa
jae
xchg
jle
data16
rorb
rclb
jae
pop
mov
push
fildl
in
jae
jae
shlb
aas
stos
or
jae
jae
sub
xchg
out
subb
jb
mov
stc
std
sub
and
hlt
ficomps
ja
std
inc
mov
pushf
nop
mov
idivb
movsb
dec
shr
add
ljmp
sub
jo
insb
fdivl
aas
fwait
or
cmp
and
hlt
cmp
add
push
mov
fcompl
test
es
dec
cli
mov
in
dec
dec
mov
sarb
add
mov
sub
pop
cmp
loop
xlat
mov
sarb
inc
push
xchg
dec
popa
test
out
xorb
mov
ss
insb
dec
mov
mov
shll
ds
xor
orl
insb
mov
fsubrl
loop
insb
sbb
fsubrl
cmp
icebp
push
push
fisubrl
fsts
aad
ljmp
aaa
mov
cld
rclb
jle
in
ficomps
lret
pop
nop
out
jp
repnz
int3
pop
adc
loop
jae
ror
cmp
mov
jbe
test
jae
jae
add
inc
ds
jp
mov
test
leave
pop
pop
int3
or
mov
sbb
js
aaa
mov
int
in
inc
clc
subb
adc
dec
in
addb
mov
int
cmp
jle
push
mov
mov
ljmp
sub
fs
xchg
inc
mov
sub
pop
lods
add
and
aaa
pop
test
scas
daa
mov
pop
mov
leave
arpl
pmaxsw
mov
cs
out
jb
rorb
repz
fs
in
ljmp
jmp
arpl
out
ret
ret
sbb
jns
in
sti
test
xchg
sarl
int
int
pop
ss
stos
sub
int
mov
cmp
mov
iret
int
int
ja
and
fcompl
out
out
fcmovu
ljmp
fsubp
outsb
aas
dec
iret
push
adc
mov
adc
cmp
aaa
aaa
jge
push
sti
inc
ret
fwait
lods
lock
dec
dec
ss
aaa
aaa
cmpsl
enter
cmpb
dec
fcoml
pop
xor
loope
inc
mov
mov
jns
pop
mov
mov
fadds
mov
sbb
sub
test
mov
scas
jl
add
sbb
sarb
ljmp
bound
sbb
ja
mov
adc
in
out
icebp
inc
lods
imul
loope
push
push
cmpsb
loope
js
jge
test
scas
lcall
iret
aam
mov
xchg
les
push
movsl
enter
ja
sahf
fcomi
and
xchg
jg
popa
and
pop
std
dec
sub
push
out
inc
jns
cltd
out
mov
arpl
mov
pop
aas
pop
sbb
clc
mov
testl
dec
jns
cwtl
data16
int
scas
dec
jle
scas
mov
out
movsl
into
int
ss
dec
push
je
in
iret
out
dec
jb
out
testb
out
xor
aas
adcl
insb
outsb
pop
test
push
ret
fcoms
add
int
add
xor
ja
xlat
outsl
mov
and
xor
arpl
sti
push
ficoms
outsl
mov
dec
outsl
pop
getsec
push
std
inc
fmull
lods
push
test
aaa
aaa
aaa
aaa
or
sub
scas
movsb
idivl
xchg
fdivr
cld
cmc
sbb
cmp
pop
fs
ds
aaa
jno
cmpsb
mov
jae
jae
ret
lods
pop
cmp
cmc
mov
jae
lods
cld
in
fs
pop
adc
mov
iret
int3
and
sahf
loop
inc
dec
das
test
cmp
lock
cmp
loop
sub
inc
mov
clc
mov
inc
adc
pop
lods
addl
mov
mov
std
lcall
add
mov
enter
jae
add
add
mov
dec
rorb
mov
decb
sub
mov
ljmp
das
and
cmp
mov
push
mov
shlb
in
fdivrl
ljmp
scas
sbb
out
xchg
fidivrl
push
bound
sbb
or
xlat
int
int
cmp
hlt
lock
int3
add
mov
lahf
mov
sub
push
push
hlt
push
fisubrs
arpl
xchg
iret
test
mov
ret
adc
es
sbb
js
hlt
rol
xchg
xchg
iret
icebp
movsb
sbb
inc
push
xchg
xor
andl
jl
icebp
cmp
xor
sahf
pushf
aas
fwait
fwait
fwait
jo
cmp
push
mov
loopne
xor
out
fdivrl
sahf
in
push
mov
ds
xlat
xchg
pop
cmp
xchg
outsb
dec
rorl
sub
inc
adc
xor
mov
jl
mov
sbb
repz
pop
lock
test
jmp
and
sahf
pop
adc
jae
and
stc
jns
adc
jl
mov
jge
out
xchg
cmp
je
pop
pop
push
xchg
cs
outsb
outsb
outsb
out
cli
scas
lods
push
cwtl
jl
sti
ret
aas
jecxz
add
add
inc
int3
push
out
js
jae
pop
mov
cli
xchg
fisubrs
addr16
mov
enter
into
iret
mov
dec
and
jne
mov
or
jl
icebp
xor
jle
mov
dec
enter
mov
xchg
movsl
fisubrs
iret
sahf
dec
cltd
mov
out
sbb
add
xchg
cld
xchg
sahf
inc
pop
cld
or
fisubrs
add
stc
jns
xchg
jae
push
pop
rcll
jbe
cmp
loop
xor
push
adcl
sarb
push
jle,pt
lahf
out
dec
dec
dec
test
or
or
in
stc
jns
mov
dec
mov
add
xchg
inc
sub
inc
mov
add
cmp
fucomi
rcrl
inc
inc
test
iret
iret
repz
lahf
push
das
aas
sahf
enter
fsubrs
sbb
jle
pop
lcall
xchg
sahf
lahf
out
push
insl
test
sub
or
outsl
lahf
les
jle
push
stc
jns
loopne
test
jl
sub
stos
sub
out
and
movsb
out
dec
cmpsb
es
fdivrl
test
pop
leave
jecxz
mov
push
mov
mov
sarl
mov
fdivr
xor
in
addr16
xor
in
jae
fnstcw
or
cmp
fnstenv
aaa
aaa
mov
jbe
mov
jne
adc
xor
jl
aaa
jg
fdiv
push
cmpsb
ds
popa
push
fcompl
pop
dec
clc
in
adc
push
clc
fcompl
mov
or
das
comiss
lds
mov
jae
pop
jle
bound
dec
les
test
mov
fidivl
push
or
test
push
test
push
out
jb
fstp
fcoml
mov
xlat
div
ret
xor
outsb
outsb
out
clc
jp
movsb
jge
scas
mov
xchg
dec
hlt
mov
imul
js
sti
mov
ja
leave
es
push
fidivl
dec
es
fcmovne
mul
je
sahf
pop
dec
mov
push
shl
pop
add
jl
ss
add
mov
das
sbb
out
sub
out
sahf
ss
insl
scas
sahf
jae
out
sub
pop
inc
out
das
shr
iret
addr16
jae
scas
lcall
das
adc
mov
jecxz
out
xlat
inc
scas
sahf
dec
and
cld
loopne
adc
aaa
out
addr16
mov
xchg
mov
repnz
out
out
dec
mov
lahf
ljmp
out
out
pop
outsb
repz
xchg
mov
mov
in
pop
loopne
mov
andb
outsb
outsb
fisubrl
ret
pop
or
mov
aaa
pop
fnstcw
adc
pop
or
clc
mov
dec
es
sbb
cmp
pop
outsb
jle
mov
in
pushf
les
mov
test
jp
mov
insb
outsb
xor
je
cld
mov
iret
out
pop
in
fwait
push
lahf
xchg
jle
ds
data16
scas
xchg
pop
lret
negl
shll
inc
adc
int
push
repnz
pop
xchg
call
dec
cmp
aaa
push
add
mov
ret
leave
fcomi
repz
add
lea
mov
sahf
mov
in
sti
jle
lds
xchg
out
inc
movl
xchg
addr16
xchg
mov
ss
stc
pop
leave
addr16
iret
jae
stc
cmp
mov
pop
lds
add
cld
cmp
iret
xchg
xchg
icebp
shll
repz
out
sub
std
lods
ds
aaa
aas
cmp
outsl
mov
call
cmp
stos
dec
outsl
pop
dec
or
insl
cmp
nop
scas
lods
bound
xchg
das
cs
out
jmp
mov
imul
aaa
mov
mov
mov
cld
ja
sub
aaa
cs
mov
push
mov
fadd
cld
fcom
cmp
or
pop
lock
xor
pop
xchg
dec
in
daa
cmc
fdivl
lret
xor
fwait
int
int
push
mov
cli
inc
mov
roll
aam
mov
int
pushf
and
mov
stos
fwait
mov
aaa
dec
jg
mov
subb
fwait
fwait
fisttps
mov
scas
pop
test
jmp
lahf
ljmp
push
mov
nop
testb
aas
rol
incl
add
mov
pop
jg
sub
pop
sub
addr16
sarb
push
mov
lods
xchg
nop
insl
outsb
les
adc
xor
fstps
jle
cld
into
mov
rcrb
jae
xchg
and
fisttps
orb
xchg
mov
jae
fcompl
mov
cmpsl
jae
out
mov
out
test
and
fwait
ja
fcmovne
out
mov
add
scas
outsb
outsb
outsb
aas
dec
push
push
insb
jb
out
cld
sbb
outsb
inc
fistpll
xchg
ds
shll
add
push
inc
jae
jle
inc
outsb
outsb
outsb
scas
fmull
pop
out
adc
mov
dec
cmpsl
pop
leave
adc
lahf
fistl
es
movsl
aas
jl
mov
into
int
mov
mov
in
test
loopne
dec
pop
loope
in
cli
sahf
and
int
int
inc
mov
add
push
pop
mov
lock
mov
bound
loop
stos
cmp
in
int
in
addr16
and
mov
aaa
mov
int
jns
insl
dec
andl
mov
fnstenv
js
popa
lcall
jns
and
add
xor
iret
out
negb
add
scas
nop
into
mov
aas
icebp
aas
loope
xlat
adc
xor
into
jl
cmp
sub
mov
js
add
fwait
push
jle
inc
ficoms
pop
or
mov
int
int
xor
repz
sbb
jge
add
pop
lds
ficomps
scas
jp
and
ret
in
sub
das
daa
ljmp
stos
data16
cmp
jno
and
pop
loopne
jmp
add
outsb
push
out
bound
scas
sahf
sbb
outsb
outsb
aas
fwait
dec
negb
outsb
push
push
sub
push
outsb
outsb
outsb
outsb
into
call
pop
dec
jp
pop
mov
pop
cld
insb
xor
and
dec
aas
cmc
cmp
jbe
add
aaa
aaa
aaa
mov
inc
ja
push
popf
jbe
lcall
aaa
aaa
aaa
cmp
into
arpl
inc
mov
ret
dec
mov
mov
or
jo
cmp
aas
fildl
inc
mov
aad
outsb
outsb
outsb
outsb
pop
mov
inc
xchg
add
aam
adc
pop
adc
lock
push
decb
fdivrp
repnz
mov
outsb
cmp
or
push
cmp
fdivrp
iret
insb
outsb
outsb
outsb
add
jne
scas
xor
rcrb
cli
mov
jle
aas
fstpt
enter
hlt
out
mov
mov
and
adc
or
outsb
outsb
sub
pushf
jo
mov
pcmpgtb
outsb
rcrb
clc
into
sbb
mov
mov
pop
mov
lret
out
jae
cmp
push
sub
push
clc
pusha
sbb
sbbl
jo
push
mov
ret
fildl
loopne
and
mov
outsb
aas
fwait
push
jecxz
leave
and
js
dec
outsb
outsb
outsb
outsb
mov
cli
add
and
clc
jns
inc
mov
pusha
mov
xor
sub
aaa
mov
inc
or
mov
adc
aaa
aaa
aaa
aaa
or
sub
dec
lds
add
xchg
aaa
aaa
adc
jno
xchg
mov
int
ja
push
mov
es
out
dec
loop
bound
int
mov
or
sti
enter
jle
cmp
mov
sbb
int3
test
enter
mov
sub
sahf
jbe
iret
int
xor
or
sahf
cld
cmp
enter
sub
mov
mov
sahf
or
enter
stc
jns
sahf
mov
test
add
or
xchg
lahf
out
pop
xchg
inc
or
iret
repz
sub
addb
test
sbb
stc
jns
sahf
pop
dec
sahf
pop
pop
test
sahf
lahf
out
sbb
or
sbb
iret
inc
jle
enter
sub
xchg
push
mov
repz
cmp
sub
dec
scas
cmp
iret
iret
das
outsb
test
sub
repnz
stos
push
and
loop
stc
jns
daa
mov
and
mov
push
or
xor
mov
mov
push
aaa
call
adc
xor
icebp
mov
jle
js
clc
sarl
mov
sbb
push
mov
xchg
je
testb
fcompl
out
out
sbb
arpl
sub
cld
cmp
iret
adc
and
iret
repz
xor
out
xchg
and
pusha
repz
adc
iret
notb
jp
shlb
lods
mov
aas
iret
adc
cmp
mov
push
mov
xchg
out
push
lcall
push
mulb
mov
shll
xchg
xchg
dec
gs
or
mov
stc
jns
sahf
ds
dec
stc
or
mov
out
push
mov
inc
mov
add
adc
out
stc
jns
xchg
inc
icebp
roll
jns
sahf
lahf
mov
xor
xor
out
sbb
mov
dec
push
pop
jae
xchg
mov
int3
sbb
fdivr
outsb
outsb
sub
mov
ja
test
ds
or
shrl
lock
mov
push
pop
sub
stos
out
pusha
cmp
fbstp
sahf
mov
pop
push
scas
aas
test
into
sarb
xchg
jb
jg
push
jle
and
sbb
out
mov
cmp
jae
pop
lods
jle
aas
mov
cmp
fildll
dec
mov
mov
aas
mov
ror
xor
mov
xor
aaa
scas
mov
fisubs
fsubrs
scas
add
sbb
jle
loopne
ret
adc
inc
jae
sub
cmpsb
pop
pop
insb
pop
mov
mov
inc
adc
addr16
mov
mov
xorb
sbb
fwait
fwait
mov
push
shrl
mov
add
xchg
inc
test
aam
cwtl
or
iret
cmpsb
out
addr16
mov
ficomps
aad
test
std
sahf
test
sub
lret
fxch
fdiv
in
mov
sarl
call
jecxz
fcoml
add
or
pop
cmp
shlb
es
sub
iret
int
aaa
jge
mov
es
xchg
xchg
cs
das
imul
push
jl
out
out
ljmp
jle
out
add
out
mov
mov
jb
xor
sar
inc
push
daa
fcmovb
jbe
jmp
loope
inc
inc
hlt
adc
xor
sbb
mov
test
repnz
lock
std
outsb
cld
sbb
out
das
jb
outsb
sahf
xchg
test
mov
pop
test
sbb
stos
cmpl
xor
ret
fdivl
int
in
add
add
xchg
ffreep
dec
test
lahf
sbb
je
push
rol
lret
jne
ljmp
cmpsb
rcl
jae
mov
and
notb
adcb
fnstcw
out
pop
mov
mov
dec
lea
outsb
scas
or
rorl
adc
into
aaa
mov
jne
mov
sti
bound
mov
add
insb
aam
cwtl
into
and
int
in
inc
bound
mov
fsubs
divl
aaa
mov
int
mov
es
ss
dec
fnstcw
cld
insb
sbb
data16
or
pop
fdivrp
stos
aam
hlt
popf
stc
sub
and
fisttpl
fdivrs
movsl
lock
cmp
test
jns
insb
out
nop
mov
cmp
lock
icebp
insb
outsb
outsb
sbbb
movsl
popa
cmp
iret
testb
imul
pushf
shlb
jno
idiv
mov
popa
mov
mov
mov
pushf
mov
adc
ror
out
int3
and
xor
push
subl
js
cld
jb
icebp
and
cmp
dec
insb
outsb
outsb
dec
movsb
push
fs
xor
mov
andl
dec
jnp
nop
gs
call
inc
in
xchg
sbb
je
jno
in
leave
idivb
outsb
ficompl
adc
add
xchg
ss
out
dec
or
rolb
stc
hlt
sarl
outsb
aas
fwait
inc
pusha
hlt
add
dec
adc
idiv
insb
outsb
push
or
sbb
xchg
adc
fcmovnb
fs
push
sub
adc
dec
in
jle
in
outsb
outsb
outsb
jbe
jno
rcll
pop
inc
adc
jo
jge
outsb
mov
mov
stc
orb
xchg
aaa
mov
out
pop
es
dec
jbe
cmp
push
loop
and
ds
aaa
sbb
sbb
inc
and
sbbb
rcr
xchg
xor
adc
dec
xor
jecxz
add
cmp
into
mov
mov
xchg
loope
and
imul
lods
inc
into
cltd
sahf
cltd
jb
jne
icebp
add
hlt
or
sub
push
addb
mov
sub
fisttpl
insb
cmp
loopne
icebp
add
decl
iret
pop
add
push
jae
test
ret
fcompl
dec
out
in
sbb
push
fcomi
faddl
jno
jb
movsl
int
int3
int
in
pop
mov
mov
mov
add
int
cmp
add
push
sbbb
dec
mov
and
insb
outsb
fucomip
fs
loope
bound
lods
popa
gs
mov
ror
outsb
push
insb
ret
xor
add
dec
test
mov
imul
cmp
xchg
insb
leave
sar
jg
fcmovne
mov
ficompl
and
je
sahf
mov
fwait
or
stc
movsb
scas
mov
inc
ds
notb
shll
or
xor
adc
out
cwtl
test
xor
call
popa
ret
in
jb
int
hlt
adc
rorb
mov
cltd
cmc
leave
shll
xor
xor
clc
push
iret
in
addr16
popa
stc
mov
jbe
ja,pt
mov
hlt
fisubl
cmp
test
add
addr16
xor
mov
xor
mov
jmp
adc
and
loopne
add
cmp
mov
out
fdivs
test
mov
dec
pop
jno
iret
int
aas
setb
xchg
gs
adc
insb
mov
cwtl
in
icebp
roll
cmc
pushf
js
mov
or
jge
mov
les
aad
loop
mov
loope
inc
ficomps
int
push
pop
add
xchg
mov
pop
fwait
fwait
fwait
iret
das
mov
inc
sbb
enter
sbb
ds
mov
and
fld
cmp
aaa
aaa
mov
es
test
cmc
jae
mov
clc
fnstcw
aaa
xor
jmp
xchg
clc
es
mov
pop
outsb
loop
and
sub
cmp
addr16
jae
js
pop
jge
sbb
adc
and
aaa
stos
ret
add
sbb
inc
sbb
jae
jae
cmp
lock
in
popa
push
jb
lahf
rol
lods
xor
adc
or
jae
jae
inc
add
xor
and
sbbl
insl
gs
xchg
pop
es
fwait
inc
jae
sti
sbb
fadd
xchg
mov
mov
mov
cwtl
xchg
pop
sub
outsl
jecxz
cwtl
adc
in
jno
jle
mov
mov
or
mov
das
loope
fdivl
je
cmp
int
add
mov
gs
dec
push
push
xchg
add
and
or
jge
mov
push
jle
mov
mov
push
shll
popl
bound
pop
nop
shrb
gs
mov
cld
rorl
fsubrs
mov
dec
js
mov
mov
or
popf
pop
adcb
sbb
js
lahf
ds
sahf
icebp
dec
adc
or
mov
mov
adc
adc
les
jae
in
xchg
jbe
cmpsb
into
inc
jo
mov
iret
push
stc
test
clc
pop
xchg
out
notb
pusha
jo
clc
jecxz
clc
pop
jns
mov
fdivs
or
out
sub
push
mov
lods
inc
jmp
in
in
mov
cli
dec
lret
jmp
fdivr
mov
loope
loopne
xchg
xchg
jl
mov
andl
add
mov
mov
iret
fbstp
lds
xlat
repnz
sub
push
cs
xchg
push
std
insb
outsb
push
je
xchg
mov
cmp
mov
mov
xor
xchg
lods
xchg
shrb
fwait
fwait
cmp
pop
popa
lcall
and
adc
call
daa
jecxz
inc
enter
js
lcall
lret
in
cli
inc
xor
je
popf
insb
lahf
fwait
fwait
repnz
in
out
out
xor
push
jp
out
sti
inc
orb
ds
add
sarb
shrb
outsb
scas
mov
xchg
es
lock
outsb
sub
cmpsb
movsl
lea
test
in
dec
pop
int
iret
out
je
push
push
cmc
js
mov
pop
mov
ss
xor
add
jae
and
mov
repz
xor
ss
push
cmp
mov
xchg
adc
imul
push
xor
push
insb
in
push
or
mov
aaa
mov
cli
stos
mov
inc
pushf
mov
cmp
aaa
aaa
mov
mov
sub
lods
jp
jge
fnsave
push
ficoml
outsb
outsb
out
or
adc
js
scas
outsl
out
cmp
aad
jno
pop
cmpsb
shll
lock
jns
mov
xchg
sbb
outsb
lahf
fwait
lods
dec
adc
daa
sub
loop
or
xchg
and
outsb
outsb
in
jo
sub
push
push
push
fsubl
test
out
pusha
outsl
cld
xchg
fnstcw
xor
jmp
cmp
mov
mov
test
inc
pop
xor
int3
mov
aaa
aaa
aaa
aaa
jle
ret
rolb
cs
scas
aaa
aaa
aaa
aaa
sub
and
fbld
sbb
jg
loopne
mov
mov
sub
into
fisubl
mov
data16
out
fsubl
dec
hlt
pusha
lock
sbb
je
dec
jnp
loop
shll
pop
add
push
sbb
jle
aaa
mov
andb
sub
inc
push
outsb
push
mov
and
ficoml
or
or
xchg
add
aaa
aaa
aaa
aad
int
cmp
add
aaa
inc
fstpt
and
rolb
push
loop
sub
call
clc
jae
rolb
mov
aad
imul
iret
in
and
inc
sbb
push
mov
xlat
dec
xor
dec
cmp
mov
outsb
gs
stos
or
lock
and
pop
sbb
sbb
lock
push
sbb
rolb
jb
aas
fildll
cmp
cmpsl
sbb
jae
shlb
xchg
inc
gs
sub
es
mov
out
adc
cmp
out
cli
sarb
hlt
pop
jo
mov
insb
outsb
inc
jmp
mov
scas
xor
sbbl
and
lret
lods
mov
sarb
test
sbb
xor
push
inc
push
or
rorl
and
repnz
jne
push
test
hlt
pop
sub
jb
rcl
loop
das
ss
call
mov
fcmovbe
inc
out
mov
shlb
xor
xor
rorl
mov
popf
or
dec
lahf
dec
scas
fxch
enter
push
cld
jle
aam
jo,pt
fiaddl
fsubrp
js
aaa
aaa
clc
or
xor
cmp
lea
loopne
fsubl
and
js
xor
fdivr
nop
fsubrl
or
imul
movsb
mov
xchg
loopne
ret
dec
jg
sbb
fmull
cmp
aad
hlt
out
xorl
nopl
lahf
int
int
test
bound
pop
push
iret
adc
jns
scas
xchg
mov
jnp
cmp
test
or
leave
or
mov
inc
and
mov
push
push
clc
push
out
cmp
dec
ljmp
xchg
xchg
push
jge
or
imul
flds
mov
xchg
bound
js
mov
cmp
xchg
pop
test
mov
cmp
mov
in
mov
gs
mov
cmp
push
insb
adc
addr16
pop
loope
clc
or
ja
cwtl
xchg
ljmp
mov
mov
and
faddl
imul
xchg
jno
jp
cli
push
shlb
rcr
fdiv
test
pop
lods
or
cltd
sub
lods
xor
lea
mov
out
testb
mov
add
sbb
aaa
aaa
lahf
fstpt
sahf
mov
push
pushf
mov
aaa
aaa
aaa
cmp
aam
dec
aas
pop
xchg
inc
inc
mov
aaa
aaa
aaa
aaa
and
xorb
push
mov
aaa
aaa
aaa
aaa
mov
sub
loope
sti
fdivrl
aaa
arpl
rclb
addr16
jae
mov
movsb
jnp
push
push
mov
test
sbb
gs
cmp
sarb
adc
mov
sub
clc
fsubl
mov
mov
loope
sbb
mov
adc
jge
stos
jo
mov
clc
jle
push
inc
mov
fdiv
shrb
outsl
ret
mov
mov
daa
mov
xor
sahf
imul
xor
in
xchg
shl
cmp
out
mov
ljmp
popa
popf
mov
rcrb
in
hlt
jge
dec
fwait
icebp
inc
jle
cs
mov
movsb
push
xor
pop
jno
jg,pt
jbe
pop
rep
mov
or
xor
sub
mov
in
shll
lahf
ret
test
rcll
jae
jae
lock
cmpsl
andl
jl
add
sarb
loopw
push
xchg
fmull
iret
nop
shrb
shrb
cmp
ljmp
scas
mov
mov
mov
iret
in
fwait
clc
dec
fcmovne
push
int
dec
pusha
mov
mov
push
call
pop
loop
adcb
in
inc
cmp
pushf
int3
cs
inc
repnz
xchg
jae
add
mov
pop
popf
pushf
cld
insb
xchg
loop
sbb
rcrb
jge
lock
dec
divb
in
xor
sub
shll
mov
pop
mov
out
xchg
out
out
aas
fs
pop
out
or
clc
insb
outsb
or
xchg
xorb
jae
sub
clc
sub
jo
loop
jae
pop
dec
sub
dec
and
stc
fdivrl
mov
cmp
cmp
cmp
pop
jle
mov
mov
clc
xor
inc
fadds
addr16
pop
divb
sbb
cld
dec
outsl
mov
out
out
pusha
out
fscale
xchg
pushf
cmp
mov
iret
jle
dec
fldcw
jns
iret
out
jns
push
test
push
or
pusha
push
int
pop
cmp
jg
sub
lcall
adc
ret
xchg
jno
into
sub
sahf
out
mov
mov
adc
stc
dec
jae
iret
push
adc
pop
jo
aaa
aaa
rcl
jbe
inc
in
out
lea
fcmovnb
imul
ja
loop
orl
cmp
insb
sub
pop
js
mov
sbb
dec
aaa
ja
nop
cli
mov
jbe
clc
int
adc
aaa
aaa
aaa
mov
adc
subl
and
clc
aad
icebp
int
in
addr16
hlt
jns
adc
sub
jl
int
int
jecxz
xchg
scas
inc
shl
inc
xor
jle
lahf
add
sbb
call
xorb
mov
mov
adc
sub
rorl
push
or
adc
stc
scas
cmp
xchg
mov
or
lahf
push
push
ja
jae
jae
inc
test
idivl
into
xor
cld
and
int3
test
mov
adc
jae
push
inc
mov
push
inc
cltd
maxps
pop
dec
push
jnp
ss
pop
insb
or
inc
add
dec
pop
leave
ret
dec
jmp
jl
cmpb
out
stos
dec
les
arpl
mov
or
lds
stos
sahf
pushf
fsubl
fbld
push
xor
clc
or
mov
fwait
fwait
shlb
jmp
rcrl
fidivrl
sbb
jg
mov
mov
push
mov
mov
and
shl
sbb
outsb
jg
cmpsl
inc
data16
add
outsb
outsb
outsb
outsb
inc
gs
dec
fsubrl
imul
mov
leave
xchg
mov
in
mov
lods
ja
push
mov
mov
and
ljmp
dec
movd
inc
stc
lock
addr16
pop
sbb
popa
cmpsb
inc
cmp
adc
adc
ds
int
add
aam
lahf
mov
out
cmp
xchg
mov
jnp
sub
fistps
loop
and
push
leave
je
mov
dec
mov
iret
out
push
scas
xor
push
test
hlt
cmp
lcall
mov
fdivrs
mov
flds
mov
mov
fdivrl
sbb
pop
mov
cmp
negb
lahf
popf
add
mov
pop
or
out
out
jp
xor
push
ret
stc
jnp
out
out
xor
adc
mov
aam
imul
sbb
insb
aas
fcmovne
pop
int
popf
xor
std
add
pop
and
add
xchg
outsl
and
scas
push
pop
or
out
loop,pt
sarl
mov
mov
inc
mov
adc
mov
cmpl
pop
cmp
fsubl
dec
pop
dec
push
xor
jae
mov
or
xchg
sti
sbb
jae
arpl
mov
mov
enter
sub
or
mov
push
push
mov
xchg
push
out
jae
jle,pn
push
xchg
les
aaa
mov
test
enter
mov
int3
imul
stos
dec
int3
pop
rorb
cld
and
movsl
jae
dec
push
cmp
dec
mov
into
and
out
out
pusha
mov
dec
cmp
out
out
in
or
and
push
test
clc
inc
jb
xchg
popa
mov
out
fadds
push
sbb
fildll
inc
lahf
into
addr16
pop
mov
out
inc
xchg
int3
pop
and
notb
enter
lds
int
pop
outsb
outsb
jg
clc
xor
ret
icebp
xor
outsb
outsb
sarl
cmp
fcoms
icebp
mov
mov
xchg
or
inc
xchg
loop
je
cmpb
pushf
add
jb
sbb
adcl
stos
jp
clc
fsubrs
sbb
clc
insb
cs
cmpsl
jmp
js
sbb
movsb
sbb
jnp
xchg
fbld
in
and
dec
ds
out
xor
inc
or
in
jne
pop
or
int
add
lock
rcll
pop
dec
cmc
pusha
mov
les
divb
xchg
gs
xor
xor
mov
cwtl
push
aas
inc
arpl
lock
icebp
cmp
mov
sub
adc
push
std
call
es
jb
int
xchg
jp
adc
pop
sahf
repnz
jge
pop
mov
pop
mov
mov
inc
out
pop
js
pop
push
mov
int
div
xchg
and
movsb
dec
outsb
pop
push
pop
imul
sbb
enter
in
in
loopne
in
jo
jle
test
out
mov
push
pop
test
sub
dec
or
ror
out
inc
int3
dec
mov
sub
jg
das
test
mov
loop
mov
or
jo
adc
cs
popf
fwait
fwait
negl
pop
outsl
pop
inc
or
mov
jle
mov
sbb
sub
or
in
or
scas
xor
jbe
fimuls
dec
xor
jle
xor
stos
lret
outsb
outsb
xor
xlat
arpl
dec
mov
xchg
add
pop
jl
mov
pop
add
mov
mov
mov
fdivrl
cltd
sbb
xchg
push
jmp
icebp
cli
inc
mov
iret
out
fisttps
into
cli
xchg
inc
pusha
jp
addr16
or
cmp
jl
jecxz
test
iret
mov
idivb
inc
aaa
aaa
push
jl
xor
xor
or
dec
fsub
push
jp
das
cmp
repnz
jl
pushf
fwait
adc
sub
iret
out
sub
dec
xchg
cmpsl
out
xchg
stos
pop
push
js
adc
jl
mov
mov
loop
sub
inc
cli
or
sub
aas
adc
int3
ret
xor
lock
fnstcw
aaa
insb
mov
icebp
mov
jae
jae
jge
sbb
push
xor
jge
sbb
lds
adcl
std
insb
outsb
aas
and
cmp
push
xchg
scas
out
les
arpl
or
sbb
pop
sarb
int
or
fxch
sbb
jne
lock
clc
movsb
mov
loopne
cmp
pop
jle
cld
mov
push
push
rcrb
jge
push
jo
sub
andb
out
mov
in
dec
insb
icebp
mov
mov
aam
bound
cmp
mov
jge
mov
lds
jg
adc
sahf
hlt
mov
inc
inc
movsl
test
xchg
push
fwait
sub
fidivrl
add
idivb
mov
jbe
xchg
mov
cmp
out
mov
rorb
in
add
out
lock
adc
mov
sbb
imul
rcr
mov
pop
xchg
mov
icebp
sarb
cmpsb
jg
xor
iret
in
bnd
xchg
lahf
sbb
xor
push
subb
push
mov
aaa
jae
xchg
mov
xchg
loopne
repz
shl
bound
rcrl
jo
mov
sub
fldt
test
adc
fsubs
fs
adc
mov
jmp
into
xchg
jae
ret
xor
adc
inc
xor
sti
in
ret
jp,pt
mov
clc
scas
cmp
mov
push
dec
mov
mov
insb
cmp
cmp
mov
inc
pop
cmp
fwait
jae
and
in
mov
pop
mov
push
adc
shlb
jp
ficoml
bound
or
clc
add
hlt
cmc
xchg
test
jae
pop
ret
outsb
outsb
fildll
push
mov
es
mov
pop
xchg
mov
insb
outsb
adc
fiaddl
jecxz
xchg
out
pop
sbb
aam
cmpsb
and
fneni(8087
gs
pop
int3
jae
mov
xchg
inc
xchg
push
mov
loope
mov
dec
pop
pop
pop
mov
ss
aaa
shll
add
test
add
js
sub
call
mov
mov
lcall
sti
add
es
sbb
aaa
xor
mov
stos
dec
arpl
cli
jns
ret
jno
add
icebp
decb
sub
scas
daa
adc
add
aad
lock
mov
iret
ljmp
scas
test
out
push
fldenv
mov
leave
jns
pop
ror
push
sbb
xor
push
jbe
mov
mov
mov
rcll
out
out
mov
jl
and
pop
sub
jb
sahf
dec
les
cmpsb
inc
lcall
rorb
mov
sub
int
in
pop
mov
stc
js
push
lret
cs
int
and
xchg
lret
inc
jno
es
jge
ss
aaa
aaa
mov
lods
int
pop
fucom
loop
lcall
leave
insb
lds
sub
icebp
nop
cli
scas
std
pop
dec
xchg
cmp
adc
icebp
pop
cli
fidivrl
std
push
push
adc
int
int
fs
jo
insb
or
xor
int
cld
repz
in
in
popf
dec
movsb
in
pop
push
f2xm1
push
rcll
shrb
or
aaa
mov
mov
xor
adc
lcall
addr16
adc
adc
aam
int
in
int3
outsb
aam
add
stos
lret
imul
mov
ret
push
jmp
int
int
sub
in
shrb
add
das
dec
add
jmp
adc
cmp
fdivrl
mov
shl
push
xor
xchg
xchg
nop
mov
cli
fdivl
lock
js
push
sub
mov
adc
pop
mov
and
ret
sbb
mov
push
mov
add
nop
ds
pop
mov
fldcw
lahf
dec
push
inc
clc
adc
cmc
rol
outsb
cli
sahf
leave
shrl
dec
and
cmc
jl
lock
jb
mov
aaa
mov
xchg
ja
cmp
jb
sarb
jae
jge
popa
jbe
mov
fimull
gs
mov
fwait
fwait
inc
and
cmp
and
test
enter
mov
loopne
mov
push
loope
dec
sbb
subb
adc
call
ja
jae
jae
cld
mov
or
int3
and
jne
arpl
mov
in
pop
dec
fiadds
in
sbbl
mov
cs
lods
lret
xchg
push
jbe
cmp
loope
cli
push
cwtl
shlb
push
jle
jo
test
push
ret
lea
out
xchg
push
sbb
js
out
out
pop
in
fdivs
cwtl
lds
dec
aaa
out
out
stc
sub
addr16
popa
jl
addr16
iret
cltd
xor
push
sub
xchg
aas
push
pop
loopne
sub
stos
faddl
fnstcw
push
or
or
push
mov
inc
push
xchg
repz
dec
sbb
push
mov
arpl
mov
xor
cli
cmp
or
in
sbb
outsb
outsb
pop
ds
fisubl
and
mov
push
push
or
pop
xchg
jge
mov
loopne
ljmp
xor
lock
js
mov
call
aaa
test
adc
pop
lcall
out
inc
rcrl
hlt
push
data16
aad
jg
xchg
mov
ror
cmpsb
mov
add
xor
or
loopne
std
mov
imul
in
inc
test
out
aas
and
int
pop
dec
mov
inc
in
int3
ljmp
adc
mov
cmp
fnstsw
mov
and
test
dec
sahf
adc
mov
outsb
out
ret
and
hlt
testl
outsb
outsb
push
je
inc
imul
imul
sub
cli
js
mov
and
into
int3
in
pushf
mov
divb
sub
xchg
xlat
inc
sub
sbb
in
jae
jae
arpl
mov
int
sbb
mov
sbb
pusha
pop
pusha
in
mov
jae
inc
aas
fwait
mov
mov
fildl
pop
jae
cmp
int
aas
shl
hlt
mov
dec
outsb
int
int
jnp
movsb
mov
in
adc
xor
or
xchg
push
imul
fmull
xchg
std
sti
cwtl
es
xor
aaa
pop
cmp
add
cs
daa
jae
neg
cmp
pop
sbb
jns
mov
out
iret
int
mov
fwait
xor
loop
xchg
mov
mov
mov
add
xor
dec
push
xor
jbe
ds
fwait
jb
lcall
jo
std
xchg
pop
icebp
in
cltd
call
stos
fs
stos
mov
dec
or
in
nop
test
sbb
fwait
shlb
push
pusha
inc
pop
and
out
adc
out
out
into
mov
mov
adc
xchg
outsb
jg
iret
sbb
cld
cmp
orb
stos
insb
mov
sub
push
mulb
dec
shrb
nop
ret
faddp
pop
test
out
stos
mov
mov
clc
fdivrl
xor
notb
mov
jo
test
lret
add
fisttpl
leave
sti
repz
and
int
in
lock
add
mov
mov
jo
subl
xor
add
icebp
sbbb
mov
in
dec
loope
mov
outsb
sbb
jge
fbld
sahf
lea
outsb
aas
aaa
aaa
aaa
pop
cmp
cmpsl
fcmovne
fdivrl
jge
pop
pop
fstp
xchg
dec
lcall
lods
mov
rcrb
mov
xor
or
cmpsb
pushf
in
iret
int
cs
or
jne
addr16
fstpt
cld
pop
cltd
negb
pop
repz
inc
aaa
mov
loopne
imul
dec
or
sub
aaa
aaa
aaa
or
divl
mov
inc
in
addr16
out
clc
mov
int
mov
pop
mov
rcrl
add
aas
and
cwtl
xchg
pop
out
clc
outsb
pop
sti
testb
ljmp
out
int
enter
movsb
xchg
xchg
adc
mov
int
iret
pusha
adc
rol
idiv
addb
mov
fidivl
cmp
es
dec
mov
or
fmull
rcrl
test
jge
push
dec
cmp
cmp
sbb
int
aas
fldt
int3
out
call
stos
fdiv
cmpsl
sahf
dec
adc
fisubl
scas
fisttpll
fnstcw
xchg
add
cmp
sti
or
pop
xor
sub
dec
pop
mov
xorb
xlat
movsb
lret
and
aaa
aaa
aaa
aaa
insl
mov
pop
in
mov
outsb
out
ds
aaa
invd
dec
sbb
inc
mov
adc
fwait
lahf
adcb
popf
int3
gs
icebp
mov
or
gs
inc
lods
xor
cli
lahf
fildl
stos
jmp
and
and
clc
flds
repnz
popf
test
mov
xor
add
adc
ds
xchg
adc
int3
loop
call
inc
adc
in
sbb
dec
jbe
jo
sahf
addb
cltd
push
mov
or
repnz
sub
loope
adc
rol
stos
jae
shrl
stos
mov
ss
push
jae
jae
ss
iret
rol
ror
movsb
repz
jae
jne
pushw
xor
add
cmp
jae
cltd
sub
add
sahf
icebp
sar
mov
sub
mov
pusha
jl
pop
jl
fs
nop
out
out
lock
and
pop
xchg
loop
cwtl
out
inc
cmpsb
cmp
push
nop
mov
mov
push
jo
nop
mov
ds
push
jge
sbb
ss
ficoms
and
ss
ret
or
jmp
mov
es
loop
vpshufhw
jae
cmpsb
xchg
icebp
aad
les
js
out
push
loop
add
movsl
loope
jne
and
jl
pop
mov
insb
jle
jle
mov
push
rorl
loopne
lret
and
mov
lahf
fdivrl
mov
xor
cmp
cmp
stos
enter
fdivrl
gs
push
adc
xor
int
clc
fsubr
sahf
and
and
adc
or
sub
in
insb
ss
outsl
fdivrl
or
out
mov
fcmovnb
ficoms
int
outsb
cs
and
xchg
cmp
data16
insb
outsb
outsb
imul
cmp
xlat
rclb
out
sahf
lock
sub
addr16
xchg
mov
jns
outsb
pop
icebp
xchg
imul
fildll
int3
out
and
xor
dec
aam
jle
aaa
lods
push
xchg
mov
dec
push
ja
sti
fstpt
adc
in
mov
mov
ret
push
and
es
in
and
dec
pusha
sbb
int
int
div
jg
mov
adc
lahf
int
rolb
or
add
aaa
and
out
jmp
pop
nop
popa
jbe
scas
cli
mov
pop
data16
int
pushf
cmp
es
insb
outsb
outsb
sbb
add
xchg
push
sbb
add
rolb
fwait
fwait
test
pop
sbb
mov
mov
cmpsl
aas
loopne
mov
loopne
pop
call
xor
cwtl
jbe
mov
jae
divl
faddl
push
push
mov
jae
inc
fwait
mov
int
mov
xor
cli
fnstcw
cwtl
jp
add
hlt
int
jbe
outsb
outsb
adc
filds
sti
pusha
jge
test
mov
iret
int
in
jl
inc
in
mov
stos
loope
shrl
inc
jle
aaa
mov
out
mov
pop
inc
bound
push
and
outsb
outsb
outsb
xlat
nop
mov
fists
aaa
cld
insb
dec
inc
add
js
sbb
add
repnz
cltd
sbb
inc
push
mov
clc
push
sti
lea
add
arpl
mov
jae
push
mov
sbb
inc
xor
jae
jae
cmp
jo
sub
mov
jae
or
mov
nop
mov
fildl
sbb
and
mov
fwait
loopne
enter
inc
mov
inc
or
push
inc
jae
mov
mov
out
leave
cmp
add
hlt
jae
jae
out
les
fwait
or
fcom
inc
pinsrw
or
ret
push
lcall
jbe
push
pushf
jae
lret
int
mov
xor
mov
jae
jae
mov
push
and
mov
mov
rcr
mov
aam
or
sub
pop
insb
xchg
ds
fwait
lahf
mov
inc
dec
xor
ret
clc
cld
and
outsl
cmpb
in
ret
in
cwtl
shrb
aaa
mov
out
xor
pop
or
add
aaa
fmul
shlb
or
sbb
fs
aaa
fbstp
mov
mov
bound
addr16
es
jle
jnp
iret
mov
cmc
jg
out
adc
fmull
popa
add
mov
divb
mov
cmp
pusha
gs
adc
jae
jecxz
pushf
hlt
mov
and
cli
and
out
adc
test
mov
mov
fisubrs
sti
mov
push
inc
pop
ds
mov
fsubr
fcmove
aaa
aaa
ja
test
inc
mov
push
adc
adc
pop
sbb
mov
ss
mov
enter
mov
addr16
js
sub
outsb
outsb
outsb
scas
add
rorb
loope
mov
outsb
outsb
outsb
gs
pop
jns
xchg
mov
std
insb
outsb
outsb
nop
ficompl
dec
jg
pop
jae
idivl
inc
lock
xor
adc
jae
jae
push
jns
jecxz
sarb
sbb
addr16
adc
insl
cli
ja
cltd
adc
dec
dec
xor
cld
mov
js
fwait
fwait
mov
shrl
mov
or
repnz
mov
mov
aas
rcrl
addb
inc
xor
cmpsl
lock
sbb
cmpsb
out
mov
ljmp
and
and
cs
ror
iret
shlb
mov
inc
je
pop
mov
push
push
jno
push
and
mov
int
enter
xchg
jo
jns
into
int
int
xor
cmp
mov
sub
arpl
daa
out
shlb
cmpsl
lock
inc
adc
jl
pop
arpl
push
pop
mov
inc
sahf
cmp
dec
iret
xchg
ss
xchg
or
mov
fnstenv
ds
arpl
imul
hlt
lahf
mov
into
test
push
mov
sub
pop
sbb
std
insb
outsb
outsb
outsb
mov
in
push
add
divb
inc
push
mov
stc
cmc
sub
jns
pop
dec
push
fcmovu
inc
xchg
andl
sar
cli
fsts
or
sbb
dec
call
inc
push
clc
cli
mov
stos
xor
out
push
sahf
or
lcall
mov
js
mov
mov
shll
ds
call
fcoml
fdivrl
loope
stos
xchg
lcall
clc
jae
jae
pop
jecxz
push
sbb
sbb
lahf
in
jae
inc
mov
cmp
mov
outsb
jg
mov
xlat
sbb
lock
jo
add
pop
cmc
jge
mov
rcl
and
mov
outsb
mov
clc
out
insb
scas
mov
jge
outsb
repz
shl
mov
test
dec
sub
fstps
cmp
test
dec
icebp
jae
add
out
adc
pop
fsubl
pop
nop
jge
pop
loopne
loop
jp
mov
jae
sti
add
adc
sahf
movsl
mov
mov
divl
or
pop
push
int
fsubrs
push
or
sub
mov
lahf
shrb
lahf
in
divl
mov
repz
rorb
test
jle
jle
and
lock
mov
repnz
mov
cmc
loopne
fadds
out
outsb
outsb
pop
mov
adc
add
jl
jge
pop
nop
mov
out
or
dec
leave
xlat
or
fdiv
inc
push
mov
div
mov
sbb
fdivl
shrb
subb
int
dec
or
mov
call
jle
push
fiaddl
mov
or
sbb
add
pop
push
movsl
xor
nop
shlb
aas
fwait
pop
cmp
xchg
inc
aad
fimull
cld
insb
emms
mov
sbb
mov
insb
iret
ror
jecxz
jo
pop
jge
pop
inc
aaa
mov
cli
xor
outsb
in
decl
mov
and
aaa
aaa
cmp
push
fldenv
fwait
cli
mov
pop
les
fcmovne
pop
sbb
lea
clc
insb
aas
fwait
sub
or
xor
pop
out
divb
mov
dec
loopne
add
dec
dec
frndint
insb
outsb
push
dec
popf
mov
mov
ljmp
in
pushf
jl
in
cli
jge
repz
out
faddl
xor
subb
mov
sbb
insb
dec
ret
out
in
mov
adc
mov
pop
xor
add
into
mov
inc
mov
movsb
sbb
or
jl
jno
jl
or
stos
mov
stos
jl
sub
out
out
cmpsl
dec
or
and
jle
imull
xchg
leave
lret
mov
aaa
mov
ret
push
sbb
mov
mov
cs
cmp
aaa
mov
loope
xchg
mov
clc
sahf
popa
jge
and
ficomps
std
push
loope
out
xor
mov
cmp
ja,pn
adc
stos
jle
rcrb
cmp
into
sub
push
mov
mov
or
nop
xchg
inc
inc
cmp
aaa
aaa
aaa
insb
pop
insb
jmp
push
lods
mov
aaa
aaa
aaa
add
je
lds
aaa
aaa
aaa
pushf
mov
jp
inc
and
ds
aaa
aaa
scas
mov
imul
xorb
aad
and
popa
sarb
and
mov
int3
cmp
in
adc
int
and
or
sti
fbstp
fs
sub
lods
push
fcoms
mov
out
psadbw
hlt
test
mov
xchg
jge
scas
add
add
jle
aaa
lods
bnd
push
mov
stos
testb
gs
inc
pcmpeqb
inc
lcall
iret
xorb
fimull
xchg
outsl
in
push
jnp
push
mov
sbb
dec
inc
ficoml
stos
movsb
mov
int
int
das
loope
dec
pop
aas
fidivs
mov
aaa
aaa
mov
inc
xlat
repz
rcl
mov
add
dec
aaa
aaa
aaa
aaa
xor
fcomps
in
pop
adc
aaa
aaa
aaa
xor
outsw
lret
sahf
mov
sti
jge
cld
leave
or
in
mov
sbb
in
xor
dec
cs
loopne
hlt
adc
out
xchg
mov
and
scas
jno
nop
cmp
insb
fstpl
out
stc
xchg
push
sbb
js
fwait
fwait
fwait
xchg
jnp
aad
out
mov
lock
movsb
cmp
add
iret
int
adc
push
adc
fdivrl
pushf
jmp
mov
and
pop
pop
and
fsubrl
ret
or
sbb
add
js
sbb
sbb
pop
addb
dec
hlt
add
dec
out
ficomps
mov
mov
cmp
out
ds
addl
or
fadd
int
xchg
nop
mov
lret
test
or
lahf
xor
fsubl
push
add
mov
mov
fsubl
mov
or
and
pop
das
divb
in
addl
mov
fadd
mov
js
fistpl
xor
pop
movaps
lahf
fwait
mov
test
cli
mov
pop
jl
outsb
mulb
jl
mov
jge
aaa
cmp
mov
lock
outsb
js
inc
push
adc
nop
ljmp
sbb
sub
into
aam
pop
addr16
std
pusha
pop
in
inc
adc
insl
cmp
aaa
mov
push
xchg
bound
leave
sti
ds
jl
push
sub
loop
lahf
in
jae
mov
fs
inc
xchg
xor
ds
mov
test
push
ja
adc
and
outsb
push
adc
out
mov
jp
aam
mov
jno
stos
jmp
xchg
or
das
jae
sti
xor
push
or
std
out
test
sbb
mov
mov
mov
addb
aaa
aaa
aaa
push
dec
bound
fidivrl
mov
fwait
cmc
mov
inc
jmp
sbb
dec
movsb
ficoml
loopne
add
outsl
jb
push
dec
push
outsb
nop
xchg
cltd
mov
jp
mov
push
xchg
mov
test
mov
mov
xor
dec
push
dec
popa
adcl
test
inc
push
in
arpl
add
int
rorl
fistl
pop
adc
add
testl
aas
or
mov
pop
pop
js
dec
aaa
ja
mov
insb
xchg
hlt
push
mov
outsb
clc
fldcw
pusha
add
mov
sub
nop
xchg
xchg
inc
out
out
dec
and
int3
addr16
dec
xchg
aas
fildl
sarl
mov
mov
pop
push
or
dec
call
ror
dec
sbbl
shr
xor
pushf
pop
loope
jae
push
jp
outsl
or
and
mov
inc
inc
xchg
xchg
mov
cmp
jle
aaa
and
aas
out
out
jecxz
lret
fwait
fwait
fwait
fwait
lds
cmp
push
jmp
mov
sbb
adc
aaa
aaa
pop
aam
out
add
push
mov
fwait
mov
jge
aaa
les
adc
jp
or
out
je
push
pop
ficompl
cmp
shl
and
and
sti
fnstcw
mov
adc
push
jnp
dec
lods
bound
rorl
hlt
lret
lcall
mov
pusha
stos
mov
cmp
out
mov
add
lahf
int
pop
and
mov
and
ds
rorb
inc
insl
loop
fnstcw
es
imul
jbe
sahf
jle
mov
ljmp
mov
cs
test
fcoms
test
daa
sbb
sbb
pop
or
mov
inc
rcll
jl
add
aaa
out
add
mov
mov
add
insl
inc
pop
aaa
aaa
aaa
aaa
cld
test
xchg
mov
inc
insl
popa
mov
jnp
xor
cmpb
cli
fdivr
bound
pop
scas
call
test
ds
cld
mov
xor
adc
aam
shll
cmp
loopne
jp
pusha
lock
xor
enter
iret
orb
arpl
sub
fwait
fwait
sub
xor
insb
popa
adc
jp
mov
cmpsb
out
ret
jmp
rcr
out
mov
scas
mov
aaa
pusha
xorb
pop
sahf
cmpsb
mov
cld
pop
je
inc
mov
sbb
pusha
jge
aas
fwait
jno
call
cmp
out
idiv
or
xchg
xor
leave
stos
mov
fs
or
sbb
mov
fdivr
fiadds
test
insl
sub
push
jg
fsubl
out
movsl
lret
mov
sub
stos
out
sahf
movsl
add
fstps
or
sbb
iret
sahf
int
int
stc
ss
sbb
js
or
in
jl
fwait
in
ret
jae
imul
pop
push
outsb
outsb
in
shrb
notl
fcoml
lea
aad
jmp
jae
loopne
js
push
sub
pushf
out
mov
ds
xlat
pop
xchg
jg
or
lock
mov
mov
mov
cmc
pop
jbe
popf
and
xor
test
cmpsb
xchg
leave
paddq
fwait
mov
enter
sub
push
xchg
outsb
xchg
fwait
fwait
rcr
in
lods
inc
push
pop
outsl
or
xlat
out
pop
hlt
insb
fidivrl
sub
dec
loop
repnz
cli
out
test
mov
insl
sbb
iret
xor
adcl
leave
adc
adcb
mov
outsl
loope
pop
arpl
fcomi
mov
out
xor
sub
lret
jns
stos
movsl
jo
out
ss
mov
jecxz
xchg
hlt
loop
inc
outsb
jne
pop
sbb
sbb
bound
xchg
fwait
sbb
mov
aas
sarb
add
testl
pop
out
sbb
mov
xchg
push
pop
std
int
mov
mov
jge
dec
dec
cmp
xor
out
mov
push
mov
in
std
stos
mov
push
mov
inc
out
mov
in
xchg
mov
dec
or
test
out
mov
sbb
clc
xlat
les
mov
mov
mov
fwait
fwait
inc
int
int3
pop
outsb
pop
jne
mov
cmp
hlt
jle
or
test
pop
push
sbb
xchg
push
xchg
aaa
aaa
ja
inc
push
scas
data16
addr16
in
imul
xchg
xchg
loopne
dec
test
fidivrs
jae
sub
cmp
lock
in
loopne
jae
inc
fsubrl
inc
jnp
add
repnz
xor
fdivs
xor
inc
sub
scas
or
xchg
dec
jmp
sahf
fwait
cmp
sbb
iret
out
dec
call
ljmp
jge
imul
mov
divb
adc
add
push
adc
jg
fwait
sbb
push
in
sti
cwtl
pop
mov
test
hlt
insb
cs
cld
cwtl
imull
jno
test
xchg
lock
jb
push
movsb
pusha
out
sbb
dec
pop
insl
mov
sub
iret
ljmp
scas
cmc
or
test
or
push
mov
mov
es
pop
movsl
out
rorl
cmp
pop
sbb
jbe
cli
in
inc
ret
add
inc
cmc
mov
jmp
out
out
push
mov
cmc
sbb
hlt
scas
sub
iret
out
lods
insl
cli
mov
test
mov
mov
outsb
aas
fwait
pop
jno
push
sbb
jo
push
sbb
inc
mov
jg
or
inc
outsb
outsb
scas
jp
leave
adc
xchg
loope
dec
lock
outsb
outsb
fcomps
testb
test
vpmullw
aad
pop
push
cltd
mov
test
jae
jae
jne
out
loope
into
sub
pop
jle
loope
lahf
mov
xchg
mov
fdivrl
xchg
push
jecxz
mov
fwait
adc
ja
xor
pop
insl
outsb
outsb
outsb
outsb
or
and
mov
cmp
jbe
out
cltd
fidivrs
sub
or
mov
push
jae
jae
gs
and
jle
sbb
loopne
lcall
int3
adcb
mov
jp
add
scas
xor
clc
lock
lret
outsb
outsb
mov
mov
rcrb
test
test
outsb
outsb
xor
xchg
sbb
loopne
popa
outsb
outsb
outsb
outsb
xlat
fistpl
sbb
enter
push
push
jge
outsb
outsb
mov
mov
dec
add
lcall
pushf
enter
cmp
sbb
jo
test
mov
mov
aaa
aaa
pop
cmp
pusha
lods
aad
aad
mov
aaa
aaa
aaa
aaa
sarb
or
push
out
addr16
scas
pushf
pop
xchg
jae
dec
cmp
mov
fsubl
jae
add
mov
int
sahf
test
neg
scas
mov
lahf
cld
xchg
pop
push
or
lods
nop
dec
test
jae
mov
movsb
dec
cmp
pop
sbb
push
mov
movsb
fldl2e
adc
outsb
jp
cwtl
stc
xor
ds
push
mov
jl
sub
into
insl
std
cs
xchg
movsl
mov
fs
pop
xor
addr16
jl
stos
in
inc
cmpsb
mov
fildl
dec
insb
push
pop
out
pop
push
xchg
hlt
push
int3
scas
int
int
push
jp
in
lcall
movsl
iret
int
and
inc
lds
jbe
push
lcall
ss
xor
or
sbb
std
push
imull
sti
mov
sbb
aad
jle
mov
sub
test
cmc
andb
fwait
fwait
fwait
rcll
imul
pop
xor
xchg
push
mov
mov
dec
popf
xor
out
mov
fisttps
and
adc
push
stos
sub
arpl
insl
cmp
dec
mov
jo
outsb
out
cmp
in
stc
add
shll
out
xchg
aaa
jge
or
dec
ds
sbb
lods
cmpl
in
cmpsl
imul
icebp
jle
dec
xchg
add
sub
aaa
pop
out
dec
sbb
mov
mov
adc
and
aaa
std
insb
es
push
sub
repnz
cltd
fadds
push
jp
aaa
mov
sbb
xchg
lods
icebp
cld
pop
mov
mov
mov
sbb
fcmovb
lods
and
loope
fistl
dec
movsl
sahf
xor
push
mov
or
lods
mov
ja
add
rolb
jae
mov
and
stc
xchg
addr16
mov
movsl
inc
stc
scas
mov
inc
pop
movsb
mov
hlt
sbb
scas
sub
int
sbb
mov
aas
or
loopne
adc
lds
repnz
mov
adc
mov
testl
lret
mov
sbb
xchg
int
add
push
ficoms
inc
lods
inc
push
xor
lahf
int
jb
jbe
fdivrs
and
sbb
jbe
es
insb
outsb
mov
sahf
push
mov
lock
fisttps
clc
add
cs
jl
outsb
pop
dec
adc
lock
push
scas
pushf
and
dec
mov
push
sbb
dec
loopne
sub
flds
fwait
fwait
fwait
data16
lock
lods
push
push
xchg
fwait
fwait
pop
scas
xor
mov
popl
jae
dec
leave
or
mov
stos
mul
addr16
jo
cmp
mov
push
pop
adc
out
mov
sbbl
sti
out
mov
and
and
aaa
dec
inc
out
out
jbe
cld
fwait
in
sub
fstpl
and
and
xchg
shlb
aas
stc
sahf
cmp
cmpsb
push
ds
outsb
outsb
outsb
fldcw
test
sbb
xchg
jle
cld
mov
lahf
push
adc
sbb
xor
test
int
int
cmp
lock
and
and
lahf
int
or
pop
sbb
cwtl
int
pop
pop
int3
inc
pop
faddl
fdivrl
or
cmp
sarl
call
sbb
rcll
loop
hlt
mov
jp
bound
in
subb
xchg
and
mov
jbe
lock
jge
ljmp
hlt
adc
dec
push
sbb
jbe
mov
cli
fcoml
aaa
aaa
aaa
mov
call
sti
jle
push
test
stos
ds
cmp
aam
insb
sub
fwait
adc
mov
and
mov
fwait
repnz
scas
fcomip
mulb
aaa
aaa
pop
lret
pop
js
mov
xor
sarl
add
mov
xor
iret
cli
sub
lock
xlat
cmp
mov
pop
pop
aad
iret
out
xchg
cs
xlat
out
jecxz
sbb
fcoml
add
subl
imul
imul
jne
jmp
mov
imul
mov
pushf
ljmp
es
sahf
xchg
mov
sbb
inc
lcall
sbb
jnp
mov
fwait
fwait
fwait
fwait
bound
mov
sbb
ds
fwait
stos
add
fisttpll
mov
in
nop
stc
mov
jno
or
imul
sub
stc
jp
cmp
fstps
add
mov
cmpsb
outsb
lahf
fwait
fwait
mov
add
in
or
pushf
es
sbb
insb
outsb
outsb
outsb
and
inc
or
mov
out
idiv
out
jp
sbb
xor
sbb
outsl
add
mov
in
push
addb
cmc
add
arpl
pop
mov
std
pop
mov
mov
pop
int
jae
inc
sub
mov
push
mov
xor
add
dec
js,pt
fwait
lea
and
shrb
outsb
mov
cmp
cld
insb
lock
pushl
xchg
jp
in
in
into
and
aaa
aaa
aaa
add
ljmp
test
push
ss
aaa
aaa
out
loope
jle
or
call
sub
inc
fldenv
mov
call
jle
mov
inc
mov
sub
inc
lods
les
loopne
jne
insb
cmc
mov
jp
sbb
add
adc
xor
out
out
ret
cmp
ror
nop
insb
inc
pop
dec
jl
jae
sub
pusha
add
xchg
pop
lock
dec
push
lock
icebp
call
mov
stos
xor
clc
fnstcw
push
cmp
stos
ja
std
enter
loope
mov
loopne
pop
sub
lahf
cmp
rcl
call
or
insb
mov
push
xor
scas
shlb
push
mov
jle
iret
and
add
addl
or
int
clc
or
xlat
lahf
aam
cltd
cli
incb
xchg
aad
cmp
test
mov
pop
dec
insl
outsb
outsb
clc
gs
lds
sbb
insl
cmp
jbe
jge
and
es
test
iret
out
lods
ds
sbb
pop
js
ds
mov
jle
cli
add
leave
add
in
js
andb
cltd
cmc
jnp
sub
cwtl
loope
fcomps
jp
pop
mov
mov
mov
testb
mov
push
lock
nop
sahf
fwait
push
add
aam
test
out
xchg
into
lea
push
out
fisttpll
out
pop
mov
lock
les
cli
lods
jae
xor
cwtl
sbb
cmp
mov
pop
loopne
cmpsb
fwait
fwait
mov
in
sub
mov
movsl
xorl
mov
fwait
fwait
loopne
pop
test
xchg
cmp
rcl
lret
shlb
in
jae
pop
xchg
add
push
outsb
shrb
mov
lahf
int
push
cmp
xor
ljmp
das
insb
and
bound
jle
int3
in
mov
popa
push
mov
adc
test
in
cmp
iret
dec
out
jns
cmovo
int
in
aaa
clc
icebp
mov
adc
sub
movsb
out
out
push
or
dec
add
jne
mov
out
out
mov
mov
xor
enter
adc
cmpsb
sahf
and
xchg
clc
mov
iret
in
or
fdivs
sub
ds
fwait
nop
filds
pop
push
push
jne
jle
pusha
and
shll
test
adc
insl
or
jp
jnp
outsb
jmp
movsl
in
add
pop
test
ret
push
out
and
jae
repnz
test
int
pop
inc
jle
mov
push
or
stos
xchg
cmpsl
mov
dec
jne
pop
jbe
xchg
xor
dec
add
aaa
aaa
aaa
jecxz
mov
pusha
test
sub
aaa
bound
mov
daa
jne
scas
ds
cmp
in
xchg
rcll
jb
movsl
inc
and
pop
gs
divl
addr16
lock
es
add
xchg
sti
pop
dec
pop
mov
lock
jbe
dec
pop
int
in
sub
das
mov
iret
sbb
out
fwait
mov
lcall
jno
mov
cmp
lahf
repnz
xor
gs
je
aaa
sbb
jnp
mov
out
mov
inc
dec
jns
sub
imul
std
shlb
je
push
cltd
cmc
js
fstpt
push
mov
cmp
jle
out
pop
jbe
pop
shlb
repz
jle
aas
notb
xor
mov
insb
sub
lea
pop
mov
lret
and
loop
mov
push
push
cmp
mov
xchg
mov
mov
je
or
stc
push
inc
int
fidivrl
test
outsb
jg
mov
sbb
ja
int
jecxz
shr
cmp
push
fisubl
inc
adc
shld
roll
iret
mov
inc
mov
adc
mov
add
movsb
xor
aaa
add
insl
and
imul
shl
pop
icebp
insb
outsb
outsb
mov
add
sub
das
fdivrp
loope
mov
and
lods
xchg
mov
cld
sub
sarb
mov
push
mov
sti
add
mov
faddp
push
ret
out
in
jae
jae
dec
mov
mov
cld
cmp
int
int
mov
push
shrb
push
inc
sbb
addr16
jle
bound
mov
xchg
iret
cwtl
lahf
int
in
leave
mov
xor
inc
clc
test
pop
mov
aaa
mov
cmp
mov
jmp
clc
mov
mov
test
mov
insb
outsb
outsb
stos
les
scas
ret
xor
fdivrl
in
adc
and
pop
dec
insb
jae
jae
mov
movsl
add
test
push
pop
mov
ret
ss
push
test
xor
mov
fs
fisttpl
sarl
repz
xor
push
ss
lock
testl
imulb
adc
mov
sti
std
les
insb
push
nop
adc
cmp
subb
mov
faddl
test
bnd
int
jae
mov
inc
adc
sbb
int
int
leave
fldt
xor
fidivl
out
out
daa
ds
sbb
mov
cmp
out
ds
rcll
icebp
je
jbe
fdivl
sub
cmp
stc
pushf
insb
pop
jae
jae
sbb
insb
mov
and
jmp
xchg
imul
jae
cltd
dec
scas
cmpsb
xlat
in
push
das
cmp
cmpsb
out
clc
sbb
sub
jp
mov
mov
push
es
ss
lea
cltd
inc
gs
lret
int
and
inc
iret
mov
or
outsl
dec
mov
xchg
int
int
mov
or
add
iret
int
int
sub
data16
mov
jnp
fmul
nop
add
fdivr
imul
and
ret
outsb
outsb
outsb
outsb
xchg
mov
add
pop
cwtl
pop
in
fcmovnb
jmp
xor
repnz
mov
outsl
ljmp
sarb
dec
test
insb
cld
lds
jae
jae
and
iret
sub
inc
ljmp
mov
xchg
xor
test
inc
add
int3
inc
push
loopne
mov
popa
in
dec
mov
lods
stos
arpl
add
lahf
jmp
jp
nop
rep
xor
dec
pop
jg,pn
bound
push
rclb
sahf
notb
and
arpl
push
fnstcw
mov
pop
lods
bnd
jae
mov
jb
pop
add
push
das
ljmp
mov
bound
into
inc
pop
outsl
fs
aam
mov
mov
enter
fcmovnbe
insl
es
les
adc
dec
xor
notb
jb
out
out
or
mov
lret
std
push
jecxz
mov
fwait
fwait
fwait
fwait
cmp
dec
dec
or
fwait
fwait
fwait
add
cmp
sub
lahf
add
repnz
sahf
xor
push
mov
sbb
jge
mov
inc
jg
mov
push
pop
mov
in
out
out
adc
jge
or
nop
fs
xchg
jae
out
and
mov
stos
add
imul
bound
inc
dec
push
stos
pop
into
lea
aaa
aaa
aaa
sbb
push
and
gs
inc
dec
addr16
xor
test
jmp
mov
out
sub
and
outsl
sbb
fadd
xchg
out
push
adc
cltd
dec
mov
arpl
out
out
mov
or
aad
int3
adc
or
cs
movsb
pop
jbe
or
jns
cmp
mov
fisttpl
leave
fcompl
cld
mov
sbb
int
lods
dec
push
mov
mov
add
add
sub
push
pop
nop
fcompl
jne
jnp
xchg
mov
cmp
test
stos
push
mov
lock
je
inc
repnz
pop
inc
mov
jmp
test
int3
jle
lock
sahf
xor
push
addr16
adc
loop
stc
aaa
aaa
mov
fimuls
inc
xor
jg
sub
sti
cmp
xchg
cmp
seto
lods
push
clc
imul
addr16
pop
cmp
lock
sbbb
and
xor
test
mov
push
pop
push
leave
mov
xchg
loop
les
jno
lods
inc
cs
mov
xchg
jge
ficoms
fwait
jp
mov
int3
push
out
fs
push
mov
jae
xchg
rcl
ds
nop
cmp
addr16
lock
ss
xor
sub
test
mov
sbb
negb
aas
cmp
adc
mov
push
popf
fisubs
popf
mov
mov
ljmp
movsl
mov
int
mov
test
cmp
int
int
and
xchg
orb
int
sbb
aam
or
mov
cmpb
inc
imul
arpl
jno
andb
lret
mov
mov
sub
push
cmp
push
out
pop
in
mov
add
adc
jge
xchg
sub
test
bound
call
xor
push
xor
sbb
dec
cwtl
adc
xchg
xchg
imul
testb
cltd
pop
push
sub
dec
clc
insb
sub
test
push
mov
sbb
inc
inc
pop
cmpsb
lahf
int
dec
aas
xchg
sahf
lods
push
cwtl
aaa
lods
arpl
rcr
push
movsb
lahf
int
in
leave
inc
adc
fsubl
pop
scas
adc
fsubr
icebp
clc
xor
roll
ret
sahf
adc
mov
mov
jle
push
sbb
loop
into
add
dec
es
lahf
lods
cli
or
or
sub
orb
mov
xchg
xchg
push
notb
stos
ret
sti
fmull
out
add
jl
shrb
cli
ja
movsl
es
pop
xor
stos
jecxz
outsb
jg
addr16
je
div
mov
mov
and
out
ficomps
daa
mov
dec
push
jne
or
sti
push
shlb
cwtl
pop
inc
lahf
fisubl
add
ror
aaa
push
icebp
call
aas
jmp
inc
sub
push
dec
inc
mov
test
jae
rolb
and
xorl
out
jg
clc
mov
adc
mov
aas
push
cmp
mov
mov
je
jnp
out
fcomps
aaa
xchg
lds
loopne
lahf
pop
enter
push
push
xchg
lods
stc
push
jnp
ja
sahf
push
dec
mov
xor
out
out
push
fiaddl
pop
roll
mov
out
out
pop
cmpsl
dec
mov
or
jge
daa
gs
fsin
xchg
sar
inc
movsl
shl
cmp
shl
xor
fadd
lea
out
and
mov
cmp
xchg
test
jno
adc
inc
pop
push
sub
call
push
in
jbe
out
enter
mov
js
aam
rolb
in
inc
dec
lock
negb
out
andb
mov
fcmovne
or
sub
cmp
imul
jmp
xor
mov
and
test
jno
aad
jbe
push
hlt
sub
push
adc
mulb
out
insl
pop
sbb
hlt
mov
dec
adcb
rorb
fwait
fwait
jecxz
test
lods
arpl
cmp
fwait
fwait
fwait
xor
and
dec
push
aas
fwait
fwait
test
mov
jp
das
aaa
ja
jp
in
cmc
xchg
cld
add
xor
jl
mov
xchg
leave
mov
fwait
fwait
insl
mov
loop
lods
fld
loope
push
xchg
sahf
add
mov
sub
mov
xor
outsb
cli
fdivrl
sub
mov
test
xchg
int
outsb
fsubrp
je
bound
xchg
outsl
je
imul
xchg
in
fbstp
aad
inc
mov
mov
sahf
std
es
test
push
mov
imul
adc
out
mov
pop
shl
loopne
in
or
pop
std
mov
insb
outsb
testb
inc
lret
test
pop
icebp
mov
cli
pop
lea
cmpsl
mov
mov
sbb
adc
mov
insl
testb
loope
pop
ds
mov
hlt
insb
push
xor
in
repnz
divb
mov
inc
pop
shlb
out
out
fisttpl
stc
shrl
xchg
mov
outsb
out
call
or
out
scas
sub
lods
add
mov
jg
out
js
cmp
xor
cmp
jl
mov
dec
lds
loopne
pushf
pop
jge
xor
mov
mov
pop
add
dec
les
out
inc
xchg
cli
xor
aam
add
inc
out
lea
xor
push
sub
jle
jae
push
and
and
xchg
push
jae
jae
lods
jl
stc
push
ficomps
jo
lret
jae
pop
mov
mov
mov
iret
int
xor
shl
push
mov
or
iret
out
xor
test
mov
scas
mov
ds
movsb
aas
notb
mov
pop
or
cmp
add
sbb
lea
mov
jo
mov
test
sub
pop
lret
inc
mov
sub
out
clc
mov
insl
lea
cmp
sahf
stos
mov
into
not
mov
loop
mov
or
int
push
test
ss
adc
lcall
aas
dec
mov
pop
pushf
or
fidivrs
sbbb
call
inc
addb
shlb
and
mov
sti
jecxz
lahf
nop
fmull
out
outsb
aas
fwait
ds
add
shll
test
outsb
outsb
mov
in
inc
repnz
xor
mov
jae
into
mov
add
imul
mov
pop
repz
shlb
push
sbb
pop
sbb
sub
xor
test
mov
aam
aam
mov
call
hlt
xor
cs
sub
jge
test
push
and
jbe
in
jno
in
push
rcrb
mov
fsubrs
mov
and
pop
lahf
lock
hlt
gs
push
cli
stos
je
sub
jle
mov
cmpsb
in
inc
loopne
ret
cmc
adc
dec
adc
dec
shll
and
cmc
in
clc
arpl
sub
out
testb
out
mov
sub
sub
clc
jge
aam
xchg
arpl
and
clc
ja
mov
cld
sar
outsb
out
sbb
dec
daa
sti
pusha
push
inc
test
pop
insb
ror
dec
fs
cld
lods
popf
int
cmc
mov
jae
jg
cmp
mov
into
stc
adc
cmp
sti
sahf
out
inc
xchg
imul
loopne
cmpsb
mov
xor
mov
jl
aas
fwait
push
dec
rcrb
mov
cmp
pop
or
xchg
inc
push
aam
icebp
mov
pop
xchg
lods
cmp
ret
cmp
pop
clc
add
inc
imul
sbb
into
jmp
inc
pop
adc
iret
int
jmp
int
cs
fisttpll
xor
lods
pushf
out
test
out
cmp
cmp
mov
arpl
jnp
imul
loopne
clc
dec
fld
cmp
icebp
sbb
sbb
or
jle
and
and
repz
mov
dec
dec
js
push
rolb
std
in
cmpsb
jbe
pop
mov
mov
ss
mov
scas
das
ficoml
mov
aas
fcmovne
cld
sbbb
cmp
xor
dec
xchg
and
xchg
jle
in
dec
cltd
ret
cwtl
divl
stos
vmovdqa64
jge
fstpt
dec
mov
rcl
wrmsr
cltd
jp
cmp
mov
lret
lods
iret
in
ja
rclb
sub
inc
push
fwait
fwait
sub
or
jl
inc
dec
idiv
sub
cmp
in
fwait
fstpt
scas
out
mov
out
mov
add
mov
addb
or
mov
orl
movb
into
mov
int3
mov
fwait
fwait
fwait
inc
pop
fisubrl
sub
push
mov
insb
push
and
adc
js
inc
aas
lods
notb
jae
cmp
jmp
push
fiaddl
inc
and
ljmp
inc
push
push
or
mov
pusha
ffreep
es
mov
mov
cltd
xor
push
sbb
rcl
test
mov
dec
inc
aam
xchg
fs
jae
lds
push
sub
inc
sbb
sti
jb
jb
push
fldenv
ss
jb
mov
jl
inc
mov
add
fdivrl
call
stos
dec
fbld
jb
dec
cmp
xchg
inc
jle
mov
cmp
inc
cmp
rorb
pop
aaa
loopne
sbb
subb
js
mov
outsb
imull
test
fnstcw
loop
or
jo
int
xchg
fwait
lcall
or
push
repnz
popa
pop
ja
add
fistpl
mov
gs
aaa
aaa
cld
inc
out
sti
mov
fisttpl
das
sahf
popl
bound
xchg
je
lcall
mov
cmpsl
xchg
aas
jp
sbb
outsb
outsb
outsb
xlat
mov
adc
sahf
ss
aaa
aaa
jle
cmc
arpl
sub
into
mov
mov
loopne
inc
sbb
or
sar
test
push
sbb
out
cltd
cli
push
shll
test
cmp
mov
xor
out
mov
gs
mov
pop
insb
push
mov
dec
test
mov
xchg
xchg
or
xchg
pop
push
mov
loop
arpl
das
addl
push
cmp
sbb
out
mov
add
dec
std
je
sbb
into
inc
aas
dec
mov
popa
int
clc
fdivrl
fs
jnp
ret
pop
add
jno
pop
sbb
inc
shlb
hlt
lods
jae
push
in
aad
rorb
mov
sub
inc
pushf
lahf
int
int
orl
inc
gs
out
idiv
adc
mov
adc
jg
insb
inc
stos
sbb
fistps
stos
insl
loopne
push
addr16
mov
insb
lahf
push
add
fs
out
jo
and
xor
mov
push
pop
and
out
mov
insb
cli
or
mov
shrl
inc
mov
jae
dec
fwait
lret
ret
or
add
in
mov
push
inc
call
ja
std
mov
fmull
cwtl
stc
or
add
aaa
jbe
jae
sti
pop
mov
adc
hlt
out
fbld
jg
jp
je
sub
xor
xchg
rcrb
mov
divb
in
imul
xchg
js
fwait
pop
cmpsb
lds
or
cs
test
dec
and
jle
lcall
into
xchg
ret
cli
fdivrl
pusha
ficoml
mov
iret
loope
xchg
mov
xor
jge
scas
and
aaa
aaa
aaa
ja
rorb
inc
pop
jmp
add
and
js
aaa
xchg
stos
nop
mov
lret
outsb
clc
inc
pop
inc
les
stc
dec
rolb
loop
jge
push
adc
pop
or
lret
pop
push
sbb
jmp
xor
clc
jae
fwait
xor
out
lea
dec
in
pop
xor
xchg
sbb
iret
dec
mov
es
add
call
inc
xor
movsb
repnz
pop
push
sbb
mov
repz
sarb
fmull
add
leave
push
pop
notl
cmp
insb
sbb
das
push
ret
pushl
gs
adc
ficoms
cld
pop
jge
add
jge
xor
xchg
jno
inc
in
push
jo
pop
jmp
jecxz
xchg
inc
sub
shrb
fwait
fwait
fwait
out
xchg
inc
jnp
test
mov
sahf
pop
mov
adc
jl
jmp
mov
imul
in
outsl
push
je
sub
and
int
int
orb
adc
inc
push
iret
int
int
movsl
and
sti
out
pxor
aaa
mov
fisubl
jecxz
jl
addr16
push
sub
jo
loope
dec
jl
aaa
push
aad
aam
loope
addr16
or
std
es
jge
scas
fmul
fadd
mov
mov
jns
cmp
arpl
adc
scas
pop
pop
push
scas
call
movsl
and
std
jl
fwait
outsb
mov
fucomp
cmp
bound
mov
int
xchg
jb
bnd
push
iret
mov
push
and
out
mov
push
les
dec
fdivs
pop
dec
pop
or
fists
loopne
sbb
xchg
inc
add
out
adc
iret
sarl
jmp
ljmp
divb
sub
lea
loope
adc
out
out
cltd
jl
cmc
rol
and
js
leave
jge
mov
sahf
dec
or
xchg
mov
pop
icebp
pop
sarl
sbb
cmpl
outsb
incb
gs
imul
pusha
inc
push
sbbb
scas
jle
into
fmuls
popf
fwait
fwait
outsl
mov
push
push
in
icebp
iret
mov
inc
bound
sbb
xchg
dec
xor
aas
fwait
pop
inc
repz
lods
xchg
or
insl
testb
iret
idivb
clc
je
insb
in
xor
ret
pop
movsb
pop
rol
mov
push
fstps
sub
lock
idivl
xor
add
test
out
xchg
push
xchg
jnp
int
das
loop
inc
add
xchg
xor
int
int
dec
cmc
push
mov
mov
xchg
addr16
gs
cld
sbbl
test
fcompl
test
into
fcoml
mov
out
cli
dec
jnp
mov
sbb
test
dec
sub
pop
rcrb
mov
idivb
ss
cmp
in
subb
lahf
gs
repnz
adc
adc
outsb
outsb
outsb
outsb
das
dec
hlt
mov
cwtl
pop
sbb
mov
mov
jp
out
test
fcompl
push
push
dec
loope
cwtl
gs
mov
inc
outsb
push
clc
fnstcw
pop
sbb
mov
imul
and
hlt
mov
js
popa
xor
sub
or
cmc
jle
cmp
std
push
mov
out
test
dec
lret
cmp
in
stos
in
sti
in
push
repz
rcrb
in
mov
push
mov
out
or
sub
testb
testl
js
cltd
sbb
xor
pop
int
aas
fisttpl
and
repnz
pop
jbe
iret
int
mov
popa
sbb
sbb
mov
mov
mov
std
cli
int
xchg
fisubrl
mov
stos
lcall
mov
shlb
add
ret
add
jge
jge
sarb
or
ror
mov
movb
aam
push
pop
mov
ret
mov
insl
push
and
and
out
add
in
sti
fdivl
out
in
cmp
fists
ds
mov
test
sbb
jo
or
int
sahf
adc
jecxz
arpl
pop
or
sti
idivb
pop
jp
cmp
imul
out
mov
adc
stos
out
or
lahf
inc
push
fists
test
shlb
mov
mov
sbb
dec
ds
aaa
aaa
or
xchg
xchg
push
loopne
out
push
fstps
enter
mov
lahf
gs
ret
popa
aam
inc
jns
or
aaa
mov
mov
in
aas
add
cli
lret
cmp
mov
out
sahf
sub
jl
push
and
or
nop
stc
adc
or
mov
icebp
cmpsl
int3
aam
cld
adc
arpl
xor
mov
jbe
mov
sbb
mov
int
cmp
xchg
lret
fadd
sbb
pop
add
test
pop
or
stos
cld
jmp
std
lcall
fwait
and
or
jae
push
scas
in
int
ret
aas
mov
mov
xor
dec
and
xor
mov
nop
scas
mov
or
push
pop
ficomps
inc
inc
cmp
jb
ret
outsb
outsb
outsb
mov
je
sbb
nop
subb
mov
xchg
test
pop
lea
inc
pop
aam
repnz
lret
aam
inc
jecxz
sti
icebp
sti
sbb
testb
iret
out
enter
add
cmc
fisttpll
jp
scas
repnz
sahf
push
repnz
pop
mov
pop
add
mov
cltd
xor
es
popf
std
xor
fdiv
mov
loope
or
test
or
lea
ja
outsb
outsb
outsb
scas
push
dec
mov
rorb
jle
push
jl
inc
adc
or
mov
jae
mov
aaa
mov
or
das
shrb
jae
jae
xlat
pop
insl
in
addr16
xor
negl
adc
adc
out
mov
imul
inc
pop
cli
adc
jb
jae
mov
mov
sub
addr16
jae
lods
mov
loope
aaa
aaa
mov
xchg
hlt
sbb
jp
je
test
int3
sahf
pop
or
aaa
aaa
aaa
stc
arpl
les
and
aaa
aaa
aaa
push
nop
ret
aad
mov
lret
add
ss
fst
loope
insb
mov
fnstenv
out
dec
xor
lods
not
adc
pop
jecxz
cmpb
fwait
fwait
out
xor
push
loope
push
cmp
push
stos
xchg
and
push
fldenv
lock
cltd
call
das
jne
loope
int3
add
mov
jle
aaa
xor
dec
data16
movsl
es
bound
sbb
inc
std
lock
xor
hlt
fwait
or
push
ljmp
ja
add
fwait
fwait
aas
enter
aam
aaa
aaa
ja
pop
aas
cmpsl
rcll
sbbb
mov
or
cmp
rcl
fs
xchg
pop
pop
ret
cmc
jecxz
xchg
cwtl
xor
vpaddusb
mov
push
loopne
mov
inc
dec
xchg
not
pop
mov
mov
lds
lea
pop
hlt
add
xor
pop
addb
add
jne
aaa
aaa
mov
xchg
mov
sbb
mov
orb
fisubl
fcompl
add
repz
cs
lret
jno
in
add
pop
dec
push
dec
cvttps2pi
or
std
stc
rclb
outsb
aas
fistl
push
shll
clc
xor
or
test
outsb
outsb
jl
sub
in
test
outsb
outsb
outsb
outsb
jb
into
mov
ja
jns
mov
mov
mov
sub
fs
testl
lods
mov
jle
jg
pop
sub
pop
rcl
inc
je
ds
leave
xchg
jbe
shlb
jge
fcompl
mov
scas
sbb
ljmp
push
fcomps
insb
or
sbb
lods
xchg
bound
add
orl
fidivs
ss
mov
cmp
cld
jle
iret
cmpsb
or
movsl
jle
xor
push
jne
call
movsl
insb
xchg
jnp
std
mov
or
jns
pop
jnp
jle
pop
xchg
or
fs
out
inc
mov
xor
outsl
mov
cmc
jbe
inc
jl
mov
inc
out
lods
xchg
sbb
test
mov
mov
add
sub
push
loopne
add
test
outsl
and
cli
test
sub
mov
xchg
shlb
sub
or
mov
outsb
outsb
mov
rcrl
dec
repz
xchg
mov
jge
outsb
outsb
add
enter
pop
push
jo
out
mov
fstpt
xor
rcl
das
mov
adc
imul
int
cmpsb
inc
out
fdiv
in
les
adc
mov
test
adc
bound
cmp
movsb
cmpsl
pop
push
or
adc
jns
jnp
outsb
outsb
mov
inc
adc
push
and
aam
cmp
mov
adc
pop
fidivs
mov
fwait
push
xlat
xchg
jbe
lcall
dec
sbb
xor
shlb
mov
xor
inc
dec
hlt
adc
mov
sub
push
cwtl
ds
fnstcw
outsl
in
lret
cmp
jae
jae
fs
inc
xor
or
fadd
mov
es
inc
sub
jge
pop
mov
mov
jae
pop
add
cld
cmp
jmp
jns
lea
jle
mov
add
stos
inc
push
jp
mov
mov
ficoms
cmp
out
dec
lock
xchg
pop
gs
gs
adc
stos
mov
fs
int
int
clc
stc
in
cmc
dec
pop
lahf
and
cmp
outsb
jle
ds
clc
sbbb
xchg
fdiv
pop
cmc
out
pop
cmp
fldenv
dec
pop
xor
xor
in
bound
mov
or
in
adc
std
repz
loopne
adc
jo
xor
sub
or
adc
leave
nop
cmp
mov
mov
outsb
outsb
outsb
xchg
inc
in
add
outsl
cltd
cmpsb
jns
cmp
js
outsb
outsb
outsb
and
mov
leave
jb
push
mov
stos
mov
cli
adc
or
loop
inc
clc
loopne
mov
push
loop
subb
push
bound
aas
fwait
fwait
fwait
lock
mov
imul
popa
divb
pop
cmp
or
test
mov
fwait
fwait
fwait
daa
ss
test
cld
dec
mov
mov
mov
jmp
ds
adc
cmove
cmp
mov
testl
mov
dec
pop
adc
jae
add
push
jno
cwtl
movsb
out
mov
loop
jbe
inc
dec
in
notb
mov
sub
fs
ret
mov
lea
push
int
aaa
std
insb
outsb
sahf
ret
addr16
mov
push
push
lods
les
jbe
jg
fmull
ss
aaa
ss
sahf
push
jae
jae
sbb
es
popf
push
jae
jae
push
push
movsl
in
dec
push
push
lret
inc
jae
jae
xor
jl
mov
outsb
cli
jle
nop
ficoms
aam
cmp
mov
notb
adc
loope
ds
jns
mov
imul
cmpsb
adc
shr
jle
sbb
fwait
sub
imul
cld
cmp
call
andl
jnp
jl
fsubl
mov
iret
out
iret
mov
and
out
pusha
mov
jae
rorb
rolb
mov
push
test
mov
loope
xor
shlb
hlt
out
icebp
fnstcw
or
jo
and
push
insb
jne
adc
or
fs
int
int
xor
sub
and
mov
jl
cs
aaa
aaa
popf
gs
jmp
int
pop
or
fiadds
mov
pop
call
or
fcmovu
mov
jae
mov
mov
xor
int
in
addr16
sub
adc
in
test
ds
frstor
movsb
cmp
cmp
jecxz
pop
cmc
push
xchg
ror
pushf
movsl
into
int
and
and
and
lock
push
xchg
rcrb
aas
cmp
fstps
test
xchg
adc
fimuls
in
int3
jnp
and
lock
and
inc
fbstp
std
fdivrl
jne
mov
sahf
and
je
insb
test
fwait
jns
std
lock
mov
mov
decl
inc
repnz
jecxz
fs
loop
icebp
pop
insl
test
int
mov
testb
and
xor
fs
in
addr16
nop
testb
cwtl
sbb
pop
sbb
int
int
imul
cmpsb
loopne
and
cli
lret
int
adc
xor
fcomps
jno
mov
sbbl
ret
rcrl
inc
lret
fimull
shll
push
dec
jge
outsb
outsb
xor
and
sti
hlt
js
pop
mov
mov
fcomi
dec
and
cmc
mov
inc
cmp
jne
xchg
mov
fiadds
lds
dec
adc
dec
and
pop
ds
jns
pop
cld
push
cmpsb
lea
daa
sti
jne
sbb
push
cmc
lar
dec
js
inc
inc
in
ja
pop
shrb
jle
imul
adc
cli
inc
push
jecxz
cmp
inc
outsb
int
xor
shlb
jl
roll
mov
rcrl
adc
cwtl
mov
int
inc
lahf
mov
pushf
arpl
out
lahf
lds
cmp
add
andl
fldenv
fdivs
push
pop
mov
adc
ror
out
inc
popf
lea
ret
out
or
cmp
or
push
aaa
sbb
adc
rcl
mov
inc
scas
cmp
aaa
lcall
adc
cs
jmp
ss
mov
pop
cmpsl
cmp
mov
and
jb
rcl
mov
stc
loopw
test
and
icebp
js
inc
rep
setle
ljmp
scas
xor
iret
in
imul
pusha
test
std
add
pop
xacquire
cmpsl
add
hlt
mov
lea
lock
outsb
jp
cmp
movsl
mov
dec
xchg
sub
iret
adc
cmp
adc
clc
sahf
fwait
loopne
clc
mov
and
and
mov
mov
xor
mov
bound
mul
daa
movsl
push
rorl
inc
pop
xchg
xor
sub
jmp
and
or
sub
call
jae
jae
add
jge
adc
mov
movsl
aad
cs
dec
push
sbb
andb
mov
movb
jge
clc
es
jne
mov
push
fdivrl
imul
xorl
outsb
out
cli
jae
sub
daa
shrb
or
insb
cld
adc
jp
int
idivl
adc
cmp
or
cwtl
js
mov
int
adcb
dec
sbb
divl
aaa
aaa
aaa
test
es
add
cmp
fwait
fwait
cmp
iret
aam
sbb
out
adc
add
fwait
fwait
fwait
fildll
adc
lcall
jle
out
or
jle
fdivr
insb
inc
adc
jge
pop
cmpsl
pop
imul
repnz
lods
or
xor
insb
adc
sbb
sti
or
ret
push
dec
sub
mov
int
jae
jns
into
cmp
pop
stos
inc
mov
jle
int
cmp
push
ss
ds
clc
jmp
js
fisubrl
out
fprem
mov
jbe
inc
inc
test
outsb
outsb
outsb
out
mov
mov
adc
jmp
enter
rcrl
scas
and
sbb
mov
jmp
and
mov
or
xchg
inc
jp
es
fwait
inc
test
xchg
pop
mov
mov
jle
jl
sub
lock
lahf
lods
loope
clc
xor
daa
flds
jle
aaa
gs
mov
jle
jae
jns
js
jmp
mov
add
nop
lods
shrb
out
or
jb
rcll
out
out
sbb
or
outsb
imul
out
jbe
pop
and
adc
ret
or
xchg
push
pop
cmp
pop
in
mov
xchg
js
pop
aam
pop
cmp
mov
add
negb
sub
call
mov
mov
clc
pop
int
inc
sbb
push
lods
inc
ds
mov
jae
mov
or
lods
and
jae
jae
scas
sahf
jge
inc
dec
xor
mov
mov
xor
movsl
dec
cmp
or
inc
or
lret
mov
adc
xchg
cmp
cmp
xlat
pop
pop
cmp
out
jge
lahf
push
stos
push
adc
sub
imul
ja
mov
pop
subl
jl,pt
cmp
inc
js
cmc
sbb
rcr
insb
cwtl
orb
aam
adcl
cmp
in
lods
mov
clc
add
imul
dec
lret
loope
fucomi
or
in
test
or
fstps
testb
int3
push
cmp
lcall
add
dec
sub
xchg
cmp
aas
fwait
fwait
fwait
push
xchg
mov
jge
dec
ss
ret
mov
js
lods
jge
sub
mov
out
mov
out
lea
mov
or
pop
sub
lret
inc
shlb
shlb
out
mov
xchg
xchg
clc
out
sub
loopnew
iret
test
cmp
sub
cmpl
shrl
lret
mov
outsb
scas
clc
jbe
xchg
popa
subb
dec
in
lcall
hlt
insb
mov
jl
cmp
jl
fidivrl
jecxz
or
xor
mov
push
std
mov
addb
in
addr16
dec
sub
sub
dec
pop
inc
inc
xchg
int
int
gs
repnz
ficoml
sbb
lahf
int
int
imul
add
fstps
adc
mov
sbb
fidivrl
fdivrl
mov
pop
mov
jo
xchg
jne
mov
sub
movsb
insb
les
rorb
push
int3
mov
mov
aas
out
mov
ret
repz
pop
cmc
ds
jno
imul
mov
mov
fisubl
ds
aaa
aaa
aaa
inc
dec
test
lret
sub
and
aaa
aaa
aaa
and
aam
lds
les
sub
out
loop
insb
jae
sti
fcoml
sbb
xlat
es
sbb
addr16
jae
or
or
sub
inc
dec
adc
adc
in
js
and
fsubrl
push
jno
icebp
mov
mov
mov
cs
dec
pushf
xor
int
cmp
fwait
cmp
adc
jae
test
iret
fistl
mov
in
std
gs
fldt
bnd
lcall
add
nop
rcl
adc
jae
shrl
sbb
popa
jg
mov
shlb
cli
push
lods
or
mov
mov
xor
int
clc
mov
dec
xlat
push
cltd
adc
out
xchg
clc
std
mov
sub
es
outsb
cs
jl
iret
mov
or
iret
out
out
out
cmp
gs
mov
repz
pop
push
leave
fimull
sbb
rol
loope
mov
lahf
out
mov
fstpl
test
repnz
nop
out
lea
lds
ror
out
jns
sub
shlb
fucomi
in
sbb
cmp
fwait
mov
test
ja
mov
mov
lret
popf
icebp
mov
mov
mov
xor
jg
movsb
fsubrl
sbb
es
cli
lods
and
scas
ja
fidivrl
imul
mov
xchg
sub
xor
pop
xor
fnstcw
mov
arpl
pop
jns
cmpsl
loopew
mov
cmp
fdivrl
nop
pusha
dec
xchg
test
cmc
pop
jb
inc
jp
cld
ds
and
leave
pop
jge
imul
cmp
aaa
pop
add
mov
xchg
in
addr16
and
cmpsl
pop
pop
inc
cmp
sub
insb
js
int
int
mov
xor
sub
xchg
push
into
aam
or
icebp
xchg
lock
loopne
xor
int3
fcmovne
cmc
in
dec
loop
xchg
sarl
push
inc
adc
test
int
and
loop
cmpsb
xchg
sbb
movsb
mov
out
iret
int
test
mov
push
push
or
lret
jmp
inc
pop
gs
or
testb
inc
stos
out
sbb
bnd
int
int
sbb
mov
fmull
mov
ret
out
sub
or
imulb
insl
loope
xor
push
mov
out
ret
loope
xchg
jae
push
loop
movsl
popa
mov
and
fs
test
fwait
mov
daa
dec
or
repnz
dec
xor
fwait
fwait
fwait
fwait
cli
xor
pop
pop
mov
add
in
pop
shr
stos
xchg
jle
aaa
ja
pop
nop
mov
xor
pop
inc
shlb
hlt
movsl
bound
inc
mov
bound
fmuls
add
mov
and
in
pop
sub
out
lret
gs
xor
cs
bound
aas
fwait
fwait
fwait
inc
jo
loope
add
mov
outsb
test
inc
cmp
push
jle
lahf
fildl
test
pop
pop
pop
jmp
cmpsb
in
dec
pushf
fwait
push
xchg
mov
clc
inc
xchg
lea
int
int
das
popf
xchg
std
or
jecxz
dec
xchg
adc
leave
push
lods
and
pop
jo
imull
dec
rcll
mov
jp
std
add
dec
jns
and
push
jmp
pop
mov
pop
mov
fwait
fwait
stos
adc
cwtl
or
push
cli
fwait
fwait
fwait
fwait
sbb
push
lcall
fwait
pop
shll
dec
iret
ror
divb
loopnew
jg
cltd
and
repnz
pushf
in
inc
adc
cmp
clc
int3
fadd
push
inc
dec
pusha
hlt
lods
clc
xchg
enter
mov
pop
jl
movsb
mov
jbe
adc
push
push
sbb
hlt
mov
fcmove
xchg
pusha
adc
stos
icebp
mov
push
adc
icebp
jp
jecxz
pcmpeqb
push
pop
jl
out
dec
jecxz
out
adc
ret
out
mov
sbb
lcall
in
cmpb
cmpsl
jnp
inc
hlt
pop
sbb
cli
cmc
pop
inc
sub
xchg
pop
add
repz
add
xor
adc
mov
mov
pop
xor
test
out
popf
les
adc
mov
mov
xor
cwtl
xchg
shl
xchg
lock
adc
xchg
mov
outsl
inc
out
jle
outsb
test
cmp
pop
push
andb
and
in
es
jl
mov
push
aam
ror
out
xchg
dec
xchg
int3
sbb
adc
jae
push
loopne
enter
popa
lret
mov
aas
pop
adc
mov
pop
icebp
sub
pop
mov
xchg
pop
rcr
faddl
roll
xchg
and
jecxz
sti
js
push
mov
dec
fimuls
jle
sbbb
xorl
in
fdivl
fstpt
dec
das
xchg
neg
fldln2
push
lea
adc
repz
dec
or
push
pop
lock
mov
mov
imul
mov
sbb
or
ds
aaa
aam
xor
jne
jo
mov
xchg
jge
loopne
movsl
mov
enter
jge
into
sahf
jae
iret
daa
sub
nop
xlat
or
dec
push
mov
dec
in
dec
pop
sti
pop
mov
mov
test
jnp
addl
call
iret
fwait
inc
mov
lret
sub
lahf
ret
sub
aaa
cmp
clc
fdivrl
fs
cmc
fsubr
jl
add
fdiv
dec
cld
pusha
cli
cmp
shlb
jae
into
cli
test
shlb
jae
jae
popa
int3
in
les
inc
cmpsl
mov
xlat
int
in
add
insb
mov
dec
test
xchg
scas
pop
add
mov
dec
outsb
outsb
outsb
outsb
bound
push
in
push
cmpsl
cs
ja
outsb
arpl
push
mov
jmp
lods
mov
ss
aad
add
and
jae
jae
adc
mov
sarl
out
lahf
int
addr16
dec
push
add
inc
adc
pop
xor
call
inc
or
dec
mov
mov
sarb
mov
xchg
out
std
cmp
pop
cmp
shlb
push
int
mov
sub
or
mov
xor
mov
add
sbb
sub
xchg
cmpsl
sub
mov
fdivrl
xchg
ror
insb
jl
out
dec
xor
int3
jae
lods
fs
setp
fmull
psllq
sub
jae
sti
fsubl
pop
mov
test
out
jae
mov
and
iret
out
out
add
cmp
popf
pop
movsl
fdivr
jb
inc
int3
fs
leave
or
out
fimull
and
xor
xor
fdivrl
dec
adc
mov
cmp
hlt
fcompl
jle
lods
maxps
inc
cld
jle,pt
cs
ja,pt
je
xchg
sahf
mov
rcl
xor
mov
jne
aad
dec
das
jbe
xchg
pop
or
out
out
jbe
test
mov
fwait
jno
rolb
fstps
leave
fadds
sub
sub
mov
addr16
fucomi
ficompl
jo
mov
movsl
mov
adc
fbstp
cmc
mov
cmp
lahf
add
dec
add
sti
mov
sub
jnp
loopne
jae
and
pop
ljmp
and
mov
mov
ret
or
movsb
add
adc
lea
ret
and
jne
pop
addb
cmpsl
clc
jle
or
or
mov
or
bnd
insb
out
ret
popf
sbb
f2xm1
cmp
in
mov
iret
dec
call
ret
mov
xor
aas
sub
out
push
or
inc
jmp
scas
jmp
and
jae
gs
mov
gs
sbb
aaa
aaa
mov
popa
xor
sbb
stos
or
lock
pusha
fucomip
das
xor
and
dec
adc
xchg
fcoml
into
andb
int
arpl
cmp
mov
cmp
sub
mov
mov
orb
cmpsb
fs
stos
aam
pop
imul
fdivr
movsl
mov
fdivrl
addb
add
hlt
adc
lret
fdivr
xor
inc
sarl
ds
gs
push
push
popf
divl
icebp
inc
insb
test
mov
mov
pop
pop
jmp
push
inc
lret
pop
call
xchg
or
xchg
fiadds
xor
push
ret
xchg
rolb
mov
mov
loopne
mov
sbb
jno
sbb
ficoml
dec
fdivrl
and
mov
mov
and
fcmovnb
dec
adc
jmp
fadd
in
mov
das
in
mov
fcompl
dec
or
popa
in
in
inc
inc
inc
addr16
vpmadcsswd
stos
and
inc
cld
popa
mov
ljmp
insl
arpl
inc
es
sub
inc
jmp
cld
sbb
mov
icebp
cld
add
ljmp
fidivrl
loop
shrb
mov
fsubrs
das
jp
cmp
test
movsl
mov
andl
dec
jge
testb
rorl
mov
adc
jle
fisttps
lods
bound
out
add
cmp
pop
jns
jg
push
or
pop
pop
cltd
dec
cmp
jge
pusha
loop
sbb
xor
pop
xchg
in
xchg
out
out
ficoms
pop
loope
cmpsb
mov
out
add
repnz
fdivrl
in
xchg
jl
pushl
js
add
push
test
lret
cmp
call
int3
mov
les
movsb
lock
pop
cmp
js
jle
adc
outsb
outsb
outsb
out
ret
bound
in
xchg
adc
push
aam
jp
enter
outsb
aas
dec
bound
out
sub
xchg
fldl
mul
or
popa
mov
pop
hlt
frstor
scas
lods
and
int
int
daa
shl
in
xchg
test
in
pop
clc
fnstcw
out
loop
dec
sbb
lock
mov
repnz
mov
out
mov
out
out
pop
push
inc
pop
call
std
sub
test
push
push
lcall
pop
adc
cmp
xor
sub
xor
stc
btr
int3
shl
jge
in
xchg
daa
jmp
lret
lock
inc
jb
mov
icebp
pop
and
outsb
outsb
sarl
fwait
hlt
jg
xor
out
jbe
jmp
add
mov
stos
push
out
int
push
xchg
xchg
sub
lahf
mov
cmpsb
inc
xchg
sub
enter
fsubl
pop
push
lcall
jecxz
clc
adcb
push
shlb
jns
pushf
out
cmpb
cmc
dec
xor
rolb
jae
out
imul
ds
fsubrs
aaa
mov
ljmp
and
aaa
aaa
aaa
ret
mov
or
mov
or
and
aaa
aaa
inc
adc
and
xchg
cs
push
lods
bnd
mov
ret
in
push
mov
add
stos
jmp
mov
pop
das
cmp
lret
mov
fwait
fwait
fwait
repz
pop
and
daa
outsb
data16
fwait
fwait
fwait
fwait
test
out
rorl
clc
push
and
fwait
fwait
adc
imulb
adc
out
mov
mov
inc
clc
pop
xchg
shll
insb
pop
pop
jp
test
fxch
adc
jbe
mov
lods
pop
dec
arpl
rolb
mov
pusha
into
ret
sar
push
clc
cli
fcompl
rclb
and
xlat
jns
out
fists
xor
pop
cmc
mov
mov
fwait
sub
sbb
popf
movsl
add
jge
outsb
mov
loope
out
sub
and
aaa
aaa
aaa
mov
sub
push
out
fsubs
in
scas
aaa
aaa
aaa
aaa
add
ds
xchg
xor
cmp
pop
jmp
cmp
daa
pusha
cwtl
add
cli
bound
push
mov
mov
jecxz
push
nop
jmp
pop
hlt
xchg
aam
xchg
subb
int
sar
inc
imul
int
dec
xchg
and
rcll
lods
ljmp
and
test
int
ret
out
adc
sahf
fs
mov
jl
inc
in
pop
imul
mov
mov
mov
push
xchg
cs
rol
rorl
shlb
dec
es
and
jns
ljmp
jo
test
mov
adc
or
add
mov
shlb
sbb
movsb
insl
mov
jl
mov
addl
inc
sub
stos
cmpsb
xor
push
pop
xor
aaa
aaa
aaa
aaa
sbb
push
outsb
sbb
push
or
aaa
aaa
mov
rorb
or
jecxz
mov
out
testb
cmpl
ss
out
out
add
inc
mov
pop
jns
insl
out
out
ret
sahf
mov
insl
mov
fmuls
shl
sbb
roll
sub
loopne
out
sub
mov
xchg
mov
test
out
out
dec
stc
xor
jne
jns
sti
add
out
out
lea
mov
int
es
frstor
xchg
cmp
add
insb
outsb
lahf
cmp
mov
sbb
cmc
insl
mov
mov
aas
call
les
aaa
hlt
pop
inc
add
das
out
mov
aaa
mov
fdivp
mov
cmp
xchg
pop
cmc
paddw
repnz
cmp
mov
mov
scas
call
shlb
je
jl
stos
jle
mov
cmp
pop
jge
fmull
xor
pop
ljmp
xor
xchg
fimuls
sbb
aaa
aaa
aaa
push
lock
mov
jmp
test
mov
push
jecxz,pt
xlat
pop
cltd
mov
bound
aaa
movsb
rcll
push
ljmp
iret
jae
fsubs
jae
pop
or
cmp
or
idivb
jno
lea
out
jle
or
testb
adc
ljmp
popf
mov
movsl
clc
jne
mov
mov
adcl
loop
iret
out
mul
and
cmp
adc
les
icebp
push
lock
sbb
shlb
push
loop
mov
clc
sub
cmc
and
cmp
outsb
cs
fdivl
push
iret
mov
aaa
jmp
xor
mov
insb
xchg
xchg
insl
jl
add
fwait
or
mov
nop
cmp
jle
out
jbe
mov
lock
popf
fadds
mov
out
push
or
or
cmp
jno
scas
mov
xor
push
dec
in
sbb
shrb
jp
mov
jl
loope
cmp
dec
lret
adc
jle
jmp
ror
jb
mov
outsb
adc
imul
add
sti
dec
push
mov
xchg
xor
ds
mov
pop
mov
inc
or
pop
jns
push
push
mov
js
sahf
pop
dec
and
cmp
imul
in
mov
jp
adc
adc
mov
movsb
jae
lock
in
jp
push
xor
int
in
arpl
cltd
adc
ds
int
int
xor
pop
mov
ja
aam
push
ds
int
leave
fnstenv
mov
outsb
outsb
cmp
jno
pop
cmpl
and
or
outsb
movsb
dec
mov
xor
lds
enter
adc
xor
mov
xor
sti
lret
ss
xchg
adc
jmp
loop
and
hlt
mov
cmp
sbb
jb
dec
adc
rcll
int
adc
adc
fcomi
sbb
test
in
xor
xchg
mov
outsl
sub
mov
ja
jle
cmp
out
xchg
mov
loopne
icebp
faddl
jp
push
xor
imul
mov
mov
xor
fisttpl
xchg
iret
sbb
cli
lret
mov
test
aaa
aaa
mov
lods
or
imul
aaa
inc
sub
or
xchg
cmpsl
cmc
jle
rclb
inc
inc
loope
int3
xor
fsubl
and
outsb
outsb
outsb
scas
xchg
sub
mov
push
push
sbb
neg
jp
jle
mov
mov
lods
jb
or
ret
or
inc
loopne
fnstcw
inc
push
xchg
cli
aas
inc
mov
jnp
aaa
aaa
mov
mov
movsb
sbb
hlt
data16
cmp
fs
cld
insb
dec
mov
mov
pop
or
xor
cmp
stc
inc
outsl
mov
mov
ss
cltd
div
gs
loopne
inc
cld
dec
test
out
mulb
sahf
addr16
or
ret
out
out
push
aad
loop
repnz
mov
xchg
daa
xor
mov
fwait
fwait
push
dec
jecxz
imul
mov
jae
cmp
push
jecxz
or
mov
popa
lock
sbb
lock
das
mov
and
and
aad
aaa
mov
loop
sbbl
fists
inc
cmp
aaa
aaa
bound
push
mov
and
clc
sbb
dec
js
aas
adc
sarl
scas
sarl
jg
and
pop
add
sbb
in
cmpsb
cwtl
xor
pop
decl
mov
sub
ret
xor
aaa
aaa
aaa
mov
jno
push
xor
or
ds
aaa
cli
mov
enter
dec
jl
fsubl
iret
stos
fists
repz
add
jb
mov
cld
jb
xchg
pushf
cmpsb
in
outsb
outsb
outsb
outsb
mov
sbb
lahf
mov
mov
push
cld
insb
mov
xlat
fwait
xorl
push
xchg
inc
add
loopne
fistpll
jae
jae
gs
jbe
jg
inc
sti
fldcw
jae
jae
pop
enter
popa
jnp
jge
sbb
mov
add
push
ret
mov
rol
inc
mov
xchg
xchg
icebp
mov
sti
push
cmc
push
out
insb
aas
pop
mov
adc
out
divb
xor
bound
cmpl
xlat
iret
bound
loope
sub
pop
adc
or
and
fcmovb
jae
lock
adc
jbe
dec
loopne
int
in
jg
sarb
pop
pop
das
dec
and
rcll
ds
idivb
in
movsl
outsb
cli
in
cmpsb
cld
inc
repnz
mov
insb
mov
sahf
mov
fsubrs
jmp
add
sbb
out
outsb
outsb
outsb
addr16
cmp
mov
fstps
icebp
adc
insl
out
push
jg
mov
cli
insb
scas
cli
mov
and
cmp
mov
sub
jmp
mov
filds
call
dec
add
add
jbe
mov
dec
cltd
lea
xor
test
addr16
insl
push
dec
lret
cltd
dec
leave
scas
pop
xchg
addr16
int
aam
imul
mov
jae
ds
xor
test
ds
sub
insb
das
insb
or
and
loop
lahf
in
das
aaa
pop
mov
and
in
sarl
enter
push
sbb
test
std
push
mov
adc
push
add
cmpsb
push
sbb
mov
xchg
ss
adc
dec
shrl
ds
icebp
loop
add
movsl
jb
inc
inc
cmpsb
andb
cmp
adc
nop
pop
cmp
lahf
mov
addr16
daa
inc
xchg
cmp
int
in
sub
mov
xor
movsb
ret
and
mov
loop
mov
testl
sub
fdivrp
arpl
call
lahf
mov
cmp
idivl
xchg
xchg
or
pop
pushf
adc
pop
fsubrl
das
fnstcw
ds
out
mov
imul
fwait
fwait
fwait
movsb
addl
sub
lods
adc
lret
pop
ds
fwait
fwait
dec
mov
imul
into
sbb
js
fwait
fwait
fwait
cmp
inc
clc
or
aad
sub
xor
jno
dec
movsb
lds
cmp
sarl
shrl
fdivp
push
add
or
jae
jae
push
pop
in
cwtl
das
mov
jmp
addr16
xor
nop
test
clc
inc
iret
out
stos
mov
sbb
xor
rolb
loope
mov
iret
push
inc
imul
aas
fwait
fwait
fwait
aas
mov
pop
nop
mov
cld
adcb
int
xor
lea
sbb
mov
and
out
in
pop
inc
cmpsl
sub
fxam
repnz
gs
int
int
adc
adc
shll
leave
mov
sbb
fwait
add
not
or
fmull
add
aas
fwait
subb
mov
push
hlt
pusha
inc
loope
jno
stc
shll
add
sahf
fstp
clc
mov
xor
sbbb
and
imul
lods
lret
dec
jbe
insl
or
sbb
insb
lahf
push
adc
sub
xchg
data16
nop
aaa
aaa
aaa
ja
cmc
xchg
cli
movsl
and
mov
jo,pt
jbe
repnz
xor
shr
and
cmp
pop
mov
cmc
lret
cli
sbb
inc
jl
out
iret
in
addr16
lds
xor
add
sbb
pop
lock
push
ss
aaa
aaa
sbb
push
push
les
scas
pop
cli
icebp
aad
leave
cmp
jb
sub
mov
stos
movsb
sub
jmp
es
mov
jmp
ds
add
mov
cltd
sbb
jae
or
and
jno
adc
call
push
cltd
cmp
nop
sub
roll
push
sbb
xchg
push
jle
fcomps
mulb
call
scas
cwtl
push
push
pop
add
push
mov
out
and
je
incb
out
cli
fdivrl
xchg
xlat
test
shl
insl
std
insb
test
cmpsl
je
popf
hlt
fadd
jbe
imul
in
add
nop
cli
dec
and
mov
add
xchg
ffreep
data16
sbb
sub
out
test
arpl
dec
jg
inc
movsb
dec
mov
out
out
mov
daa
push
xor
xlat
rorb
aad
ds
adc
aam
stos
lods
push
mov
mov
fdiv
jnp
rcr
mov
cs
imul
jae
rcr
mov
sub
adc
mov
fs
add
adc
cmp
fidivrl
fldcw
dec
clc
addr16
sti
cwtl
pop
mov
sbb
pop
jge
mov
gs
aaa
mov
in
sbb
sub
xchg
aad
dec
not
test
loopne
lret
aaa
aaa
lret
adc
lds
ja
push
jne
cmpsl
hlt
std
scas
divl
jecxz
cli
cmp
shlb
jno
popf
imul
sub
jmp
test
out
jp
mov
sbb
cld
mov
mov
outsb
dec
jne
mov
scas
test
inc
dec
jb
pop
ret
in
lahf
sub
add
loop
sbb
rclb
jecxz
pop
sbb
mov
repnz
ret
arpl
add
lcall
mov
push
repz
sahf
out
add
mov
cwtl
stos
icebp
xchg
jmp
fisubl
pop
xchg
dec
out
out
and
push
jb
mov
out
jmp
cmc
pop
out
add
stc
and
sbb
sti
mov
bound
adc
pop
pop
jp
mov
ds
sub
and
insb
dec
pusha
iret
pop
testb
mov
mov
out
scas
jns
jecxz
mov
aas
cmpsb
pop
cmc
inc
adc
rcl
xchg
jl
mov
jle
cli
mov
addr16
add
or
notl
push
jnp
jae
jae
and
inc
push
mov
shlb
dec
les
out
outsl
add
lods
push
xchg
ljmp
sub
ljmp
pop
lock
mov
iret
out
xchg
fdivrs
pop
int3
mov
icebp
mov
dec
mov
addl
data16
pop
cmp
mov
int
insl
out
pop
cli
pop
xor
or
pop
adc
psrlw
jle
mov
and
xorb
in
sbb
jo
clc
lcall
xor
jle
inc
test
aad
jnp
xchg
push
jl
in
idivb
hlt
fcoml
imul
shl
mov
sub
out
fidivrl
pop
fisttpl
rcrl
std
mov
fldt
adc
sub
xchg
loopne
add
test
out
cli
out
or
push
test
xchg
dec
insb
sbb
or
orl
pop
jp
orl
rcrb
ljmp
push
aam
orb
fwait
fwait
fwait
fwait
daa
cli
loope
popf
adcl
mov
adc
xor
push
outsb
jecxz
inc
mov
adc
xlat
push
dec
dec
pop
dec
cmc
ljmp
inc
and
outsl
mov
cmp
lahf
or
inc
push
lock
or
inc
push
out
mov
sbb
pop
and
pusha
ja
sbb
loopne
icebp
cmp
push
xor
into
push
sub
syscall
es
clc
pop
push
cmp
fwait
fwait
jp
pop
js
sbb
cmp
sti
loop
mov
or
mov
addr16
out
dec
scas
or
xchg
xchg
out
mov
cmc
xchg
test
cmpsl
repz
shlb
mov
movsl
daa
push
stc
lahf
js
jge
xchg
push
les
add
push
pop
push
dec
dec
mov
lcall
mov
enter
mov
lret
scas
jecxz
das
roll
out
out
sbb
and
sbb
mov
lahf
fildl
es
dec
jge
mov
test
jg
mov
push
mov
mov
addr16
jle
mov
inc
mov
cmp
loop
lea
mov
sbbb
pop
jae
jae
cmpsb
pop
aaa
out
mov
cli
push
sbb
add
addr16
lcall
pushf
and
jnp
xchg
sub
out
repz
out
adc
lahf
fstpt
fwait
pop
push
nop
out
xchg
cwtl
mov
jg
jge
push
jae
pushf
sahf
push
push
leave
shr
outsl
imul
push
cmp
sub
jae
lds
push
xchg
jno
mov
xor
jae
jae
js
sbb
mov
arpl
sahf
fbstp
ds
je
cmc
adc
pusha
test
sbb
cli
int
int
mov
cmp
call
into
hlt
mov
inc
insb
test
addr16
sti
jl
sbb
mov
mov
mov
cmp
cld
pop
add
mov
pop
dec
cld
sbb
adc
and
mov
pop
icebp
mov
test
nop
adc
fmull
jle
dec
cmp
shlb
and
in
aam
jae
xor
jae
in
pop
out
dec
xchg
mov
out
xchg
adc
sahf
fiadds
inc
pop
mov
inc
imul
and
rcll
mov
jae
xor
inc
insl
adc
dec
in
xor
jae
scas
jl
jnp
cmpsb
lcall
addr16
mov
dec
aas
sbbl
je
shlb
cmp
push
imul
jl
filds
fwait
fwait
fwait
jbe
xchg
pop
shrl
dec
sub
hlt
cmpsl
cmp
jne
mov
cld
mov
ljmp
in
std
jnp
jae
into
addr16
fs
xchg
imul
ret
xchg
inc
push
lea
jle
xchg
xor
pop
sbb
xor
jae
out
pop
mov
xor
mov
mov
dec
dec
rclb
jb
test
aam
fdivrs
pushf
test
sbb
fdivl
mov
rorl
sbb
mov
mov
mov
mov
push
jecxz
lret
or
or
lret
lods
loopne
loop
or
or
lcall
sbb
fwait
fwait
scas
cbtw
loopne
inc
cmpsb
sub
jbe
sahf
xor
data16
mov
shlb
sbb
adc
iret
inc
fwait
fwait
fwait
fwait
out
mov
inc
rclb
xchg
lahf
in
inc
lahf
inc
mov
mov
inc
aaa
aaa
aaa
mov
jbe
add
leave
or
sub
fdivrl
aaa
jge
cmp
popa
xchg
andb
cmc
mov
stc
rorb
sbb
pop
push
jae
shll
dec
jp
mov
sbb
jmp
add
pop
outsl
mov
mov
ljmp
fdivr
jb
mov
mov
push
cmp
mov
out
fcmovnbe
mov
aas
popa
push
or
sti
faddl
inc
int3
inc
mov
inc
or
test
gs
inc
lahf
int
aas
xor
pop
jo
xchg
loopne
leave
dec
cmp
out
add
dec
dec
xchg
cmc
cmp
out
inc
stc
in
fisubl
adc
xchg
out
mov
cwtl
jno
add
out
inc
dec
fs
mov
int
pop
dec
out
stos
mov
aaa
aaa
ja
lock
test
imull
cmp
sbbb
iret
scas
mov
fstp
sarb
mov
adc
pop
jle
out
out
test
insl
jae
xorb
out
out
int3
sub
push
jnp
mov
adc
mov
xchg
es
int
ret
or
pusha
xor
xchg
out
orb
inc
cwtl
jne
cmp
jae
jae
cmpsb
sbb
xchg
int3
or
push
lods
lock
pop
aam
in
cmpb
cwtl
cmpsb
loope
int
lahf
sub
inc
push
sbb
iret
out
push
sahf
int
int
pop
or
add
jae
fwait
or
and
fsubr
lods
clc
dec
fwait
fwait
fwait
fwait
rclb
mov
fwait
fwait
fwait
mov
and
test
push
pop
or
stos
cs
hlt
sub
xor
aaa
ret
or
push
jno
and
push
cmp
xor
popa
rolb
iret
in
arpl
dec
pop
pop
pop
mov
jge
les
xchg
or
mov
cmc
sti
push
loopne
jbe
aas
mov
add
push
sbb
addr16
cmp
fdivrp
mov
sbb
xchg
mov
js
mov
clc
sub
aas
sti
pop
out
ret
and
and
inc
lret
int
out
xchg
push
pop
jg
mov
cmc
subl
ret
adc
adc
cli
inc
push
cmp
mov
fwait
sub
mov
xchg
inc
inc
jbe
fadd
mov
aas
stos
cmp
in
cltd
or
jge
xchg
jb
ja
mov
std
popa
pushf
and
into
dec
xor
sbb
jae
pusha
dec
out
and
ljmp
out
mov
add
ret
std
add
mov
mov
in
push
or
repnz
mov
xor
mov
inc
sbb
mov
clc
adc
lret
icebp
lahf
in
idivl
or
in
aad
push
movsb
cmp
add
mov
cli
lea
mov
je
repz
add
push
addr16
int
dec
xchg
test
jbe
cmc
dec
mov
int
int
dec
sub
xor
add
test
lahf
mov
in
and
out
jge
rolb
sbb
mov
out
xchg
adc
pop
fmuls
mov
shlb
dec
mov
jl
mov
mov
cwtl
push
fdivrl
mov
sbb
dec
lds
xor
test
clc
fnstcw
imul
mov
mov
js
loop
add
push
out
adc
stos
test
scas
arpl
nop
add
arpl
jecxz
inc
imul
inc
stos
rcr
loopne
cli
mov
pop
dec
pop
mov
xor
call
adcb
repz
inc
mov
shll
or
scas
push
xchg
mov
mov
sti
scas
mov
sahf
and
xchg
jmp
jae
jae
push
das
das
outsb
pop
sbb
cmpsl
jle
fbld
lock
fldl
adc
fcoml
or
int
mov
inc
sub
add
sti
cmp
mov
test
pop
scas
inc
stos
jae
mov
jl
outsb
aas
xor
pop
and
sub
lods
sahf
mov
outsb
add
adc
inc
fs
divb
loop
sahf
xor
push
xchg
and
out
out
mov
leave
mov
mov
cvttps2pi
iret
je
xchg
pop
cmp
push
push
pop
roll
push
imul
cmp
fwait
movsl
outsb
push
in
cs
sub
stc
jmp
push
iretw
lods
punpckldq
jecxz
mov
lods
stos
gs
dec
les
stos
mov
adc
fwait
ds
sub
pushf
push
jns
into
mov
inc
or
xor
fucomi
mov
pop
inc
mov
inc
mov
in
sbb
dec
lahf
fiaddl
sub
outsb
cs
mov
movsb
sub
jbe
mov
mov
cmc
xor
mov
jecxz
push
lret
add
add
mov
out
scas
movsl
sbb
es
loopne
sahf
adc
daa
cs
mov
fcmovne
inc
ds
outsb
outsb
test
mov
imul
rcr
cli
sub
fs
insb
push
std
insb
mov
mov
pop
jl
mov
add
xchg
mov
and
sar
add
pop
ss
aaa
mov
mov
insl
jb
mov
add
bound
push
xchg
aaa
aaa
aaa
jecxz
xchg
and
ljmp
ds
mov
mov
xor
jmp
mov
push
sbb
sub
xor
mov
test
and
mulb
stc
pusha
cmp
mov
mov
jl
repnz
fcmovne
inc
int
idivl
mov
pop
int
pop
aas
mov
mov
stos
mov
mov
loope
int
int
repnz
mov
cltd
dec
shll
stos
js
lret
lods
test
outsl
mov
cmpb
push
jge
aaa
aaa
decb
and
lea
or
and
jbe
stos
add
aam
jb
lcall
jne
cld
jp,pt
cmpb
mov
scas
ds
fwait
fwait
sub
testl
sub
mov
jge
aas
adc
cmp
mov
cmp
clc
push
in
test
stos
loopne
jecxz
bound
add
sbb
jbe
in
js
inc
sbb
loope
push
leave
into
clc
inc
es
xor
fld
shlb
jle
pop
dec
fs
lahf
fwait
fwait
repnz
ret
jbe
sub
mov
lods
outsb
iret
int
int
xor
add
aaa
loope
lods
movsb
sub
ret
dec
lahf
xchg
cmc
xchg
les
popa
push
jle
fdiv
rorl
xor
notb
sub
cwtl
mov
mov
out
or
cmp
shll
rolb
jae
shl
test
imul
sub
and
loop,pn
addr16
lahf
fstpt
mov
xchg
or
xchg
ret
xchg
pop
push
xor
outsb
outsb
aas
dec
xchg
cmp
shlb
sub
cli
insb
inc
inc
in
jb
dec
jae
jae
divb
in
sbb
stos
sbb
addr16
sub
or
xchg
fdiv
jle
into
mov
mov
fildl
pusha
xor
push
jg
arpl
and
outsb
aas
fwait
add
test
stc
out
icebp
lock
aaa
jl
fsubrp
pop
adc
pushf
inc
clc
aad
inc
popf
jl
aaa
aaa
mov
sti
in
adc
je
test
pop
ja
fstp
test
mov
test
inc
pop
pop
fdivrl
xor
sahf
jo
insb
pop
xor
sti
adc
js
loop
push
cmp
arpl
cli
cltd
dec
sti
out
mov
sbb
xorl
stos
add
outsb
mov
cmp
jp
popa
bound
jae
test
mov
leave
jns
mov
ljmp
mov
sbb
mov
pop
xchg
fisttpl
pop
jecxz
cmp
xor
fwait
fwait
test
fs
xchg
loop
subb
mov
in
std
jne
jbe
nop
mov
icebp
adc
pop
insl
jle
dec
jle
adc
cmp
xchg
xchg
les
repnz
fsubrl
call
push
mov
fsubl
jb
push
and
dec
sbb
sbb
xchg
stos
lcall
mov
stos
out
out
movsl
dec
inc
inc
jo
movsb
lods
xor
add
insb
outsb
aas
mov
push
in
ret
adc
pushf
cld
push
and
aaa
aaa
cld
mov
pop
icebp
push
mov
aaa
pop
out
daa
push
or
in
jae
sti
dec
outsb
scas
cmp
xor
sbb
cltd
sub
mov
mov
out
pop
test
pop
jmp
jbe
addr16
push
or
movsl
xchg
push
in
inc
fcomps
mov
mov
sbb
js
sub
inc
pop
jbe
out
add
cmp
push
sub
mov
cli
iret
in
jae
sti
ret
mov
xor
aas
cmp
pop
jmp
ficomps
cmp
daa
cmp
outsl
mov
adc
lcallw
mov
fadd
cmpsb
loop
mov
inc
cli
push
or
xor
jae
inc
cmp
test
cli
or
cmpb
and
mov
push
out
out
cld
inc
movsl
sub
ret
jl
pop
test
out
cmp
dec
sbb
push
mov
cmp
sub
pop
dec
enter
ds
aaa
aaa
inc
push
das
mov
adc
mov
mov
out
mov
inc
ds
xchg
push
pop
data16
js
mov
inc
xor
add
iret
idivb
push
sbb
inc
repz
mov
cmp
and
or
je
sbb
fcompl
push
repz
leave
test
int
in
pop
push
mov
pop
push
mov
int
scas
addr16
and
xchg
mov
int
int
pop
stos
data16
mov
fnstcw
iret
xor
cmc
test
jo
jae
sti
aam
leave
xchg
bound
imul
jae
test
add
data16
loop
pushf
pop
xchg
sub
inc
movsb
xor
and
jbe
mov
inc
inc
std
mov
rolb
mov
fwait
cmp
mov
je
sbb
dec
xchg
add
out
mov
mov
pop
loop
cld
xor
fwait
fisttpl
or
jg
push
fwait
fwait
fwait
fwait
int
insb
ret
mov
lods
adc
dec
xchg
insl
sbb
add
repz
loopne
cltd
sahf
aam
repnz
mov
lds
jmp
jo
add
fdivrs
jmp
loopne
dec
xchg
sbb
ja
cmp
hlt
or
enter
mov
and
stc
fcomp
or
jne
pop
mov
ljmp
and
mov
loop
movsb
lahf
sub
xchg
movsb
int
clc
test
jae
or
rorb
cmp
and
and
dec
mov
sbb
fwait
ss
es
add
mov
jecxz
mov
jo
mov
int
jno
shrb
lock
fsubl
mov
or
iret
addb
adc
jnp
xor
outsb
outsb
outsb
sarb
cld
imul
sbb
add
pop
jae
jae
fs
mov
sarb
enter
inc
shlb
out
mov
dec
adc
mov
mov
push
pop
call
inc
sbb
es
out
pop
dec
jo
xchg
lods
inc
push
or
lea
push
outsb
pop
movsl
mov
out
fmull
mov
dec
cmp
insb
aaa
out
mov
and
xor
push
lcall
imul
dec
jns
push
lcall
cwtl
rcr
js
aad
flds
dec
or
insb
pop
mov
iret
scas
lahf
xchg
pop
in
cmp
ds
iret
repz
xlat
insb
push
sbb
adc
sarb
jp
sbb
mov
nop
rcrl
je
addr16
or
fbld
int
aaa
mov
mov
mov
mov
je
xchg
mov
push
add
fwait
or
rcrb
std
push
xor
push
stos
in
add
cmp
sub
orb
gs
cld
shlb
int3
cmovle
sbb
adc
push
sbb
lea
dec
cwtl
mov
cmp
into
shlb
cmp
cmc
sbb
pop
xchg
test
add
faddl
daa
lahf
loopne
outsb
xabort
loope
or
sahf
jecxz
jge
jl
pop
loop
push
imul
mov
or
mov
insl
inc
lods
shr
clc
pop
mov
push
jle
test
push
lods
jle
adc
dec
fisttpll
jne
jno
lahf
or
push
fdivrl
das
stos
enter
sbb
mov
fcompl
xchg
leave
dec
sbb
jae
sti
aam
sbb
imul
inc
jg
cmp
in
addr16
add
and
roll
movsb
ljmp
jae
jne
and
fcmovu
iret
js
pop
sbb
xor
sbb
pop
outsb
lahf
fwait
fwait
sub
mov
mov
and
outsb
outsb
inc
stos
js
imull
jno
cmc
loopne
insb
outsb
outsb
outsb
mov
cltd
in
lcall
hlt
xchg
rcl
jb
in
arpl
dec
ret
jge
jnp
aas
iret
int
int
push
addl
jae
sahf
pop
push
lret
mov
sub
outsb
outsb
cmp
nop
les
xor
fidivrl
outsb
outsb
cmpsl
and
in
inc
mov
jnp
sub
pop
hlt
es
adc
in
ret
std
inc
pop
icebp
or
lret
out
xchg
mov
add
cltd
clc
fld
test
fiadds
push
sti
pop
or
cmp
xchg
outsl
int
add
mov
insb
std
jp
cmpsb
iret
int
mov
inc
lods
fcomi
aas
push
ror
out
sbb
jnp
xchg
mov
jno
lods
jecxz
dec
int
imul
inc
movsbl
bnd
sti
clc
test
lock
push
xor
aam
sbb
daa
enter
push
add
cmp
ds
ljmp
pop
shlb
inc
test
pusha
int
int
push
iret
sbb
in
enter
notb
lahf
push
ret
mov
addr16
cmp
iret
data16
mov
rcl
sub
jae
xor
fidivl
test
inc
add
mov
cmp
push
jo
lahf
int
in
jmp
rcrb
mov
ret
or
fwait
fwait
mov
cmp
adc
loopne
and
int
mov
jnp
jnp
in
sti
fnstcw
in
data16
int
int
or
jg
int
dec
bound
addr16
pop
sub
ljmp
sahf
pop
sti
inc
cmp
and
pop
dec
testb
out
jae
mov
cmp
fistl
test
push
in
inc
cwtl
repnz
add
adc
incl
sti
lret
popf
aad
mov
mov
push
cld
mov
rclb
inc
cmc
sub
aaa
aaa
aaa
aaa
sbb
fimuls
rolb
loopne
xchg
insl
jno
movsb
push
add
icebp
js
lds
scas
movsl
out
mov
mov
xorb
sahf
or
in
push
cli
pop
outsb
and
sub
mov
bound
lds
lock
jb
push
xor
movb
clc
rcrb
outsl
pushf
in
leave
cli
imul
lock
fwait
sub
mov
ss
or
jge
gs
rcrl
fwait
sub
mov
negb
xor
pop
or
out
cmpsl
popf
stos
adc
andb
imul
mov
fwait
fwait
fwait
xchg
jecxz
dec
int
pop
icebp
stc
jbe
xlat
cmp
fwait
fwait
jo
lds
dec
insb
fdivrl
inc
and
mov
insb
pop
xorb
sub
pop
cli
faddl
or
ror
mov
outsb
or
dec
roll
xor
pop
cld
insb
testl
cmp
adc
imul
pop
into
loopne
xorb
iret
cltd
mov
xor
jecxz
jae
add
loopne
lcall
mulb
sarb
mov
lahf
push
pop
test
enter
repz
and
fstpt
shrl
andl
add
loope
ds
mov
mov
and
pop
mov
push
jne
out
mov
cld
lret
fidivrs
mov
and
lahf
pop
addb
pop
mov
mov
lock
cmp
cli
fnstcw
or
mov
dec
outsl
cmp
outsb
outsb
rcrb
outsb
ds
inc
cmp
mov
addb
lcall
ja
lahf
lock
sahf
jae
scas
add
add
cmp
inc
aam
jae
sarb
add
movsl
hlt
mov
pop
jns
cmc
movsl
fnstcw
mov
inc
clc
fld
sbb
cmp
mov
loope
out
mov
sub
hlt
test
out
or
inc
mov
loopne
out
or
lret
sbbb
es
out
mov
mov
pop
sub
adc
fcmovne
out
lods
xchg
lret
inc
xor
mov
stos
pop
dec
movsl
cmp
xchg
roll
call
dec
add
or
fdivl
mov
je
push
inc
pop
cmp
gs
stc
cmc
addl
inc
pop
mov
xchg
adc
loope
movsb
pop
jae
jae
in
aam
retw
mov
jae
mov
gs
out
out
cmp
inc
lret
lods
mov
inc
jb
fwait
ds
out
or
add
jle
pop
cld
insb
mov
and
outsl
neg
js
sbbb
push
js
lods
aaa
mov
xchg
pop
aam
adc
iret
out
insb
push
dec
jno
cwtl
jp
int
js
mov
sahf
int
aas
fnstsw
ljmp
fdivrl
xchg
push
mov
es
int3
pop
psraw
fdivrl
aad
fimull
fiadds
aas
mov
out
and
divl
fcompl
xchg
xor
pushl
push
xchg
icebp
lds
xor
dec
add
lahf
in
xchg
mov
popf
and
shr
fs
out
fwait
cmp
ljmp
pop
jo
nop
ds
mov
xor
loop
aaa
ja
scas
ret
fstl
fsts
pop
push
cmp
js
and
pop
xor
cmp
sbb
cli
mov
aad
mov
jae
sti
mov
in
iret
cli
mov
add
sub
insb
and
and
push
fistpll
mov
int
or
cmpsb
clc
outsl
mov
jmp
fwait
iret
int
mov
outsb
lea
mov
xor
and
sbb
fmull
call
inc
das
inc
sub
in
addr16
cmp
push
xor
fstl
test
int
enter
cmp
fwait
iret
int
push
xor
jo
and
mov
outsb
outsb
outsb
aas
pop
jne
out
scas
idivl
mov
aaa
cld
insb
fcomps
leave
into
xchg
aam
cs
xchg
rorb
insb
outsb
cmp
inc
pop
mov
jle
loop
inc
iret
xchg
push
sbb
insb
outsb
outsb
outsb
insb
in
imull
cwtl
mov
mov
inc
add
roll
ret
iret
xor
fbstp
lods
mov
fdivrp
repnz
sub
hlt
cwtl
jge
sti
into
outsl
daa
pop
mov
in
adc
or
out
mov
movsb
negb
push
xor
or
out
out
cmp
dec
lret
pop
sub
mov
leave
popa
adc
std
lcall
imul
call
xchg
rolb
cli
xorb
push
lock
xor
mov
jno
ds
lahf
inc
or
popa
mov
inc
jecxz
rcrb
mov
dec
cs
js
imul
popf
fwait
clc
popf
cs
gs
test
loope
int
int
loopne
aad
lock
loopne
push
lea
pushf
xchg
add
mov
pop
sbb
insb
mov
ficoms
mov
xchg
rcrb
lcall
pop
pop
sub
add
inc
data16
mov
or
pop
popa
adc
insl
iret
sti
frndint
insb
out
inc
leave
jge
xchg
in
lea
test
les
jbe
mul
fcoms
movsb
int3
mov
out
les
inc
xchg
pop
popf
cmp
insb
aas
fwait
cmp
xchg
jne
mov
out
push
sub
xor
lret
xor
out
jmp
cmpsb
aam
insb
outsb
inc
shl
cs
bound
ret
out
out
mov
xchg
mov
enter
add
addr16
jae
pop
sbb
push
sahf
jns
aam
les
jb
aam
std
mov
xchg
lea
sbb
adc
std
aas
ss
sub
xlat
sar
pop
dec
pop
sub
sub
add
pop
sahf
cld
bound
inc
ja
mov
mov
inc
or
mov
xor
fwait
mov
test
shll
pop
out
mov
fadds
cmc
mov
push
inc
ficoms
movsb
aas
fwait
fwait
fwait
mov
sbb
jecxz
insb
outsb
outsb
cmp
in
xlat
xor
push
xlat
mov
lock
shlb
lret
push
xor
pop
ja
fdivrl
fcompl
xchg
stos
lea
insb
outsb
scas
clc
cmp
fs
popf
mov
mov
test
scas
sbb
cmp
jbe
sbb
fcmovne
sbb
push
aad
bound
or
nop
fcmove
mov
sbb
aas
fcom
push
sub
sub
fdivrl
mov
mov
adcl
arpl
nop
jl
outsb
scas
cmpsb
xor
mov
cltd
sub
xor
adc
outsl
and
outsb
aas
ftst
xchg
mov
jns
mov
jp
push
jne
cld
insb
outsb
les
es
scas
fimuls
lods
add
cmpl
xlat
and
or
sbbb
xor
xor
sub
dec
jmp
in
negb
aas
int3
adc
fdivrl
cli
out
lds
out
mov
inc
xor
clc
das
imul
or
dec
insl
cmp
int
popf
int
cmp
lods
mov
int
cltd
pop
add
lahf
adc
je
repnz
sub
insb
xchg
bound
cmc
mov
mov
push
xchg
pop
dec
cld
dec
fsubl
mov
insb
xchg
aaa
cmpsb
fbstp
sbb
fwait
fistl
bound
push
cmp
enter
fwait
fwait
inc
loop
push
stos
mov
ja
into
add
jle
mov
jle
gs
push
mov
mov
std
jnp
insl
sub
int
in
mov
inc
xor
cmp
out
iret
movsb
and
xor
dec
fcmovb
adc
pop
out
iret
int
in
jae
lret
jp
lret
mov
add
xchg
push
test
sti
inc
arpl
cmp
and
out
int
addr16
and
jle
ds
or
xlat
mull
mov
ffree
adc
fwait
popa
xor
fimull
mov
pop
mov
fcmovu
and
xor
out
pop
fcomps
rclb
cld
or
adc
sub
sbb
ret
cmp
jp
scas
ds
jns
jge
ja
testb
cltd
mov
adc
imul
insl
dec
or
js
int
int
stc
push
pusha
or
out
mov
dec
sbb
xchg
mov
cmp
std
fwait
fwait
mov
mov
sbb
jnp
decb
sahf
fwait
fwait
pushf
lcall
out
mov
inc
fisubl
dec
fwait
clc
cmp
popf
xor
fwait
mov
insb
jge
pop
xor
inc
inc
push
aad
xchg
stos
mov
movb
pop
cmc
mov
hlt
loop
jge
movsl
inc
std
andb
lods
pop
push
cmp
cmc
inc
mov
xor
aaa
mov
jge
mov
fisubrs
pop
mov
aaa
aaa
mov
shrl
cmc
lret
cmc
jg
push
jecxz
int
in
movsl
mov
rclb
mov
iret
inc
ret
dec
hlt
mov
daa
int
int
lock
gs
jg
insl
jnp
int
int
push
fmulp
call
jmp
repnz
int
int
push
push
xor
or
xor
add
into
adc
jmp
stc
add
push
xor
in
fistpl
mov
scas
inc
ss
ja
int
idivb
aam
outsl
loop
stc
adc
push
xor
push
lahf
add
xor
mov
enter
jle
inc
test
mov
int3
lcall
sbb
loop
add
in
pop
jl
mov
cli
stos
jb
je
xchg
cmc
or
inc
fidivrs
jecxz
enter
jb
rclb
xchg
scas
shl
ds
insl
pop
mov
loop
and
sbbl
jae
xchg
out
aam
pop
xor
aas
out
sbb
adc
pop
adc
out
dec
pop
roll
xchg
inc
add
out
out
leave
push
push
aaa
jmp
fists
out
out
enter
sub
mov
mov
scas
stc
stos
ror
cmp
add
iret
int
pushf
xor
sub
outsb
shl
pop
mov
clc
mov
invd
pop
std
adc
call
insl
call
and
int
lods
mov
sbb
mov
xchg
inc
int
lods
inc
inc
mov
int
bound
push
push
mov
out
ljmp
aaa
aaa
aaa
mov
lods
std
pop
fistl
push
jg
mov
or
insb
aam
aaa
aaa
aaa
out
sub
and
sti
int3
pop
cmp
or
int
test
push
add
mov
shlb
pop
adc
std
pop
pop
push
inc
pop
mov
arpl
cmc
nopl
inc
jl
and
pop
push
repz
loope
fsubrp
push
mov
ror
mov
jbe
nop
mov
inc
mov
fwait
mov
adc
fcompl
mov
fnstcw
jae
jae
jp
or
lods
jne
xchg
aas
dec
adc
addr16
adc
inc
cmpsl
jbe
test
int
incb
lret
lret
inc
fmull
out
fdivl
xor
push
daa
sub
xor
sbb
out
jns
pop
xchg
lea
push
movsl
lahf
int
or
mov
dec
notb
cld
sub
out
add
pop
out
in
mov
cmp
ds
push
pop
outsb
les
inc
push
pop
imul
je
gs
dec
loop
in
push
or
push
aas
fistpl
clc
jb
ja
repnz
dec
push
lcall
add
mov
in
mov
jne
sarb
adc
cld
adc
rorl
mov
hlt
repnz
fwait
arpl
mov
fwait
outsb
out
mov
sub
cwtl
test
sub
stos
xor
inc
mov
xor
mov
mov
shll
scas
std
mov
xchg
inc
pusha
xchg
xchg
in
jae
stos
negl
add
addb
iret
rcpps
mov
fisttpll
pusha
xor
sbb
or
clc
and
imul
mov
out
jno
sahf
adc
hlt
mov
clc
mov
xchg
popa
fildl
ljmp
out
inc
clc
leave
lahf
int
sbb
push
sub
xor
into
int
push
lcall
bound
cmc
pop
sahf
xor
ds
into
xor
cmp
clc
and
jae
popf
dec
shlb
sbb
inc
ds
fwait
sbb
dec
outsb
fsubrs
and
sahf
pushf
jae
jae
test
dec
inc
ror
sub
shr
jae
jl
es
sub
bound
test
andl
int
das
lret
sub
jno
bound
adc
add
ljmp
sahf
pop
pop
mov
mov
ljmp
lea
test
xor
outsb
cli
fnop
test
mov
jns
sbb
je
outsb
outsb
outsb
xchg
scas
mov
fstps
jae
mov
out
sub
add
mov
fistps
xchg
in
push
lret
dec
inc
clc
pop
icebp
add
inc
repnz
or
and
flds
xchg
mov
pop
insb
xor
lahf
fwait
fwait
fwait
xchg
cltd
xchg
mov
push
outsb
mov
int
pop
fcompl
cmpsb
and
push
and
js
sub
and
jp
scas
cli
adc
rcrb
pop
ds
mov
cwtl
out
adc
adc
fdiv
add
xor
sub
imul
pushf
dec
add
and
hlt
lcall
jecxz
mov
pop
xor
lods
iret
mov
jnp
sbb
mov
mov
pop
adc
inc
mov
in
xor
jb
inc
fcoms
ss
subb
dec
and
dec
pop
es
inc
dec
lret
mov
insb
xchg
xor
push
int
lock
pushf
in
or
sub
daa
dec
fcompl
sbb
and
mov
sub
mov
and
jl
enter
sub
mov
stos
loopne
jmp
and
xchg
mov
daa
xor
xor
and
dec
xor
sahf
jge
and
pop
outsl
add
imul
cmpsb
lahf
int
fmul
in
rcl
out
cwtl
jo
out
out
stos
sub
imul
jmp
add
outsb
dec
lea
adc
fwait
daa
out
or
in
mov
int
lods
mov
gs
fstps
xor
aaa
sbb
jnp
fwait
adc
int
in
idivl
ficompl
into
faddl
lahf
int
xchg
mov
rol
cmp
int
clc
dec
loopne
mov
add
out
lret
jno
dec
xor
out
out
ja
lds
fimull
out
push
pop
in
js
imul
xor
cld
pop
sahf
sub
pop
xchg
fs
xchg
repz
lcall
mov
or
insb
scas
lahf
int
int
or
rcrb
cmp
aaa
aaa
cld
cltd
inc
sbb
mov
lahf
in
frstor
jle
aaa
aaa
icebp
mov
cmc
cmp
jg
and
insb
insl
outsb
mov
movsb
popf
push
in
pop
std
jb
loope
lds
xor
sti
sbb
imul
fmull
mov
adc
rclb
addr16
test
inc
mov
fwait
mov
in
pushf
xor
ds
xchg
jbe
cmp
js
outsb
ja
mov
cmp
vmovsldup
les
aaa
push
jl
cmp
lea
or
aaa
loopne
dec
jg
mov
jmp
les
pop
lock
ss
lock
dec
dec
sbb
fiaddl
sbbl
mov
dec
loop,pn
mov
fists
jae
popf
ljmp
sbb
inc
out
iret
insl
fs
dec
and
mov
loopne
xchg
sbb
mov
mov
inc
adc
pop
fdivl
xchg
add
shrb
mov
dec
inc
repz
dec
lods
fisttpl
xor
sbb
enter
fwait
fwait
insl
and
jns
cmp
xor
lret
dec
aas
sub
xchg
test
pop
sarl
pop
arpl
js
int3
in
inc
test
iret
xor
aaa
aaa
adc
and
xchg
in
inc
pop
cld
insb
lods
cmpsb
test
sbb
aaa
and
mov
cltd
cmp
ss
cmp
or
bound
pop
xor
test
test
ss
ja
lahf
movb
jle
push
std
push
int
negl
and
mov
test
cmp
cmpsb
xchg
cmpsl
iret
pop
xor
mov
js
addr16
pop
xlat
jo
push
ss
popa
fdivp
aaa
mov
jle
push
fildl
test
pop
or
shrl
pop
pop
lahf
fwait
rolb
inc
jle
loop
ds
aaa
pop
sbb
rcrl
mov
aaa
adc
xchg
test
in
sub
mov
xor
addr16
adc
andl
push
in
lods
out
jecxz
andl
outsb
outsb
outsb
outsb
bound
push
mov
sbb
dec
stos
mov
jp
cmp
out
xchg
pop
shrl
mov
addr16
xlat
ficomps
dec
adc
add
aas
cmpl
dec
ror
iret
out
scas
rorl
sbb
outsb
dec
sub
pop
cmp
fcmovnb
aam
clc
mov
dec
ljmp
aaa
pop
jl
cmp
or
cli
out
jbe
or
aaa
aaa
and
cmc
xchg
or
mov
outsb
outsb
js
xchg
les
je
shll
lret
lcall
int
gs
ret
sbb
xchg
xor
inc
sub
mov
rolb
mov
shll
jge
jge
push
jns
cld
pop
xchg
mov
cli
jb
inc
pusha
into
inc
test
fstps
sti
mov
sub
push
out
scas
outsl
les
clc
sbb
lods
jnp
aaa
aaa
mov
dec
sbb
cmpsl
sub
ja
xchg
aaa
aaa
aaa
loope
dec
mov
mov
jle
aaa
push
add
cld
clc
cmp
fdivl
sti
xchg
hlt
or
cmp
push
pop
out
inc
call
fidivl
das
loop
push
jns
fwait
dec
movsl
mov
lea
mov
jl
out
sbb
push
xor
sbb
add
push
cmc
mov
lds
mov
lock
xchg
jg
ret
dec
movsw
ds
push
shlb
mov
int
xor
jo
sbb
push
shl
mov
mov
mov
inc
cmc
add
lcall
push
and
les
loope
loop
jecxz
mov
pop
bound
sbb
sahf
movsl
jle
bound
fwait
fwait
pop
es
test
iret
cltd
pop
sahf
fwait
fwait
loop
or
je
aaa
mov
push
jbe
push
loope
gs
fisubl
es
adc
mov
pop
lods
loop
outsb
xchg
aaa
sbb
jmp
or
cwtl
cltd
clc
xchg
cmp
iret
in
sti
mov
push
push
adc
inc
daa
dec
fwait
xor
cmp
ds
sub
or
mov
inc
adc
mov
subl
pop
push
icebp
and
dec
movsl
push
push
stos
lock
loope
jg
cld
dec
outsb
scas
clc
inc
or
and
inc
les
inc
std
insb
outsb
outsb
or
xor
imulb
jo
cmp
push
sbb
jno
insb
mov
test
ja
fildl
sub
loopne
or
inc
or
jmp
ljmp
fwait
fwait
fwait
popa
pop
and
fucom
xchg
cwtl
mov
mov
jl
mov
insb
es
pop
cmp
dec
jecxz
xlat
fstl
hlt
sub
mov
rcl
popf
or
rorb
lahf
in
xchg
mov
out
jnp
xchg
jmp
cmp
test
mov
inc
aam
jb
lahf
rep
test
cmp
lret
xchg
hlt
hlt
and
addps
jnp
push
adc
clc
iret
out
out
add
mov
pop
lock
cmpb
insl
and
testb
jo
fcoml
mov
jle
and
xor
jge
aas
mov
dec
xchg
cmp
shrb
ds
aaa
jno
test
jbe
fucomi
pop
jno
in
test
outsb
inc
cmp
int
xchg
in
scas
mov
pop
cli
xor
lahf
aad
add
cmpsb
xor
cld
in
mov
orl
xchg
fcmovne
ud0
jle
xchg
loopne
test
outsb
lahf
fwait
ss
icebp
jno
cmp
subb
push
sbb
and
outsb
outsb
cs
sub
push
jb
sbb
xor
frstor
jne
outsb
add
mov
out
out
mov
xor
adc
lods
sbb
je
daa
loope
xor
pusha
jae
jle
aaa
cmp
shrl
fwait
fwait
jne
je
mov
push
stc
fxch
cmpl
xchg
hlt
std
shlb
jo
iret
les
cmp
mov
and
pop
mov
lcall
insb
clc
dec
mov
cli
in
cs
and
gs
mov
arpl
pop
sbb
movsb
ds
shlb
imul
outsb
scas
loop
fs
mov
add
sbb
fmull
rcr
mov
fwait
fwait
fwait
sub
pusha
lods
xchg
aam
outsb
or
jge
xor
fwait
xchg
xchg
rclb
mov
push
stos
add
cmp
fimull
lahf
in
jbe
lods
mov
pusha
hlt
cs
icebp
adc
mov
sbb
fcoml
mov
enter
and
lahf
fildl
push
lret
cmp
push
mov
aaa
mov
stc
fsubrl
and
push
inc
in
pop
mov
lret
mov
loope
repnz
dec
pop
push
iret
xorl
dec
int
int
fmuls
inc
data16
rorl
xchg
rcr
cmc
or
addr16
jae
mov
xor
ds
mov
dec
rcrb
stos
pop
push
sahf
fwait
mov
bound
cmp
cwtl
pop
adc
outsb
xchg
test
leave
cli
stos
sub
cld
dec
dec
mov
add
aam
ss
lods
outsb
xor
push
ret
jl
outsb
outsb
orb
jne
mov
adc
push
mov
aaa
dec
enter
scas
cmp
fs
jmp
pop
testb
push
dec
inc
sub
xor
rcrb
and
lea
fistps
fsubrl
andl
sbb
cld
inc
dec
std
insb
out
rep
jno
lret
sbb
sti
insb
iret
shl
push
adc
outsl
cmp
cmp
push
push
cli
adc
inc
imul
pop
push
mov
pop
ljmp
cli
ds
jg
push
xorb
std
sahf
loope
mov
add
insb
movsl
mov
xor
aas
fldt
sbb
fdivp
add
dec
lea
add
mov
hlt
outsb
xchg
push
cmp
pop
shlb
push
pop
test
cmp
pop
dec
mov
inc
pop
loopne
add
ss
xchg
sbb
xor
jae
jae
sub
adc
jecxz
lds
push
shl
jae
jae
xorl
push
sahf
xchg
jle
mov
add
xor
testb
pusha
pop
sbb
inc
test
out
decb
add
mov
iret
aam
add
jg
fstps
sbb
rclb
lock
jns
rorb
xor
mov
out
and
cmp
fsubl
add
rolb
aaa
jl
jne
stos
mov
add
pop
jmp
mov
xor
in
mull
and
shlb
ss
cli
sahf
xchg
xchg
test
scas
jae
aaa
aaa
aaa
int3
sti
and
daa
ror
and
fwait
cmp
arpl
jbe
pop
xchg
test
into
int
jg
push
aad
sub
dec
sub
scas
push
cltd
rcrl
pop
pop
cli
mov
cld
dec
dec
fs
and
les
nop
je
sub
loope
lcall
lock
out
lret
sahf
xor
cmpsb
lahf
int
and
sbb
and
pop
push
mov
out
stos
out
adc
push
aaa
pusha
imul
jl
iret
out
insb
dec
rclb
jb
or
mov
or
push
jne
push
mov
int
test
and
pop
movl
xchg
and
sbb
inc
mov
mov
inc
movsb
or
pop
inc
add
mov
mov
std
fistpll
mov
push
mov
rol
int
out
push
sbb
iret
out
mov
mov
setg
dec
outsl
mov
fcmovnb
xor
and
cmp
ja
ret
aaa
ja
insb
add
or
xor
adc
cmp
aaa
aaa
push
stc
cmp
xor
sub
mov
xchg
pushf
inc
mov
mov
mov
mov
hlt
xchg
mov
push
adc
fidivrl
xchg
cli
clc
fisubs
es
jno
out
add
fldl
or
out
out
movsb
je
scas
dec
jp
cmp
aas
fucomp
aas
sahf
fistl
jbe
movsl
iret
jge
stc
add
fcompl
sbb
in
orl
jno
cmp
fimull
mov
aaa
aaa
aaa
aaa
pop
xor
xor
adc
push
or
aaa
aaa
ljmp
ret
fidivs
jmp
xor
dec
adc
push
cld
js
fdivs
aaa
aaa
pop
inc
and
call
or
push
jl
aaa
pop
lahf
adc
cmp
bound
mov
xchg
fistps
inc
jecxz
push
mov
rcll
lret
loope
std
and
adc
xlat
jge
in
inc
push
pop
cmpl
ret
xchg
add
ss
and
gs
xor
mov
jg
push
add
jb
imul
fsts
in
dec
sbb
dec
iret
ds
push
xor
jmp
mov
or
loop
mov
gs
imul
faddl
add
mov
mov
fwait
out
add
ja
pop
orl
fcoms
push
repnz
and
lock
mov
cmpsb
mov
pusha
cli
sub
test
int
push
lret
lds
or
iret
mov
repnz
sub
mov
sbb
fwait
jge
jmp
jmp
mov
aas
js
scas
lret
add
hlt
fstps
push
clc
inc
add
xlat
xor
xchg
test
and
add
fdiv
mov
ror
daa
cld
sbb
loop
adc
push
cmp
fsubr
dec
xlat
mov
adc
add
out
fidivrl
aaa
mov
or
add
mov
jns
out
std
xor
jle
mov
xchg
mov
adc
ss
lods
xchg
push
movb
cmc
insb
outsb
and
jecxz
xor
fwait
push
out
out
not
mov
cmp
outsb
ret
mov
pop
je
jnp
xchg
mov
or
xor
aam
jle
aas
ret
dec
andb
pushf
mov
jl
popf
bound
data16
out
cmp
ljmp
push
out
out
test
cmc
dec
lock
fsubs
ret
iret
out
push
jp
scas
sbb
sbb
outsb
test
imulb
cmp
fcompl
idivb
rcl
xchg
test
dec
cli
push
pushf
xchg
sbb
call
hlt
nop
sbb
add
xchg
cmp
pop
jbe
stc
sarl
push
jecxz
cmp
xor
jmp
cmp
or
loopne
mov
mov
push
lods
pop
mov
or
mov
add
in
rcrb
add
fdivrl
sub
jp
insl
je
dec
cmpl
push
xchg
sbb
mov
lcall
loop
jecxz
xchg
decb
mov
das
stos
push
adc
rcr
mov
orl
xor
gs
scas
or
fcoml
movsb
dec
enter
outsb
aaa
aad
inc
dec
std
mov
in
mov
mov
pop
mov
test
sbb
dec
cmp
jecxz
push
jno
dec
push
cmp
daa
push
mov
dec
test
and
cmp
adc
outsl
adc
lahf
jp
xchg
sbb
ja
inc
int
add
inc
call
fstpl
and
add
sub
lcall
mov
xchg
nop
fdivrl
aaa
mov
sahf
fcmovnb
dec
mov
sub
xchg
pop
dec
mov
nop
je
out
pop
mov
cmp
jp
push
cmp
mov
clc
xchg
lock
out
add
addb
sub
aam
fadd
test
out
jne
cmc
adc
cli
mov
lret
fadd
fwait
xchg
aam
pop
outsb
sub
mov
mov
inc
pop
into
mov
push
xor
and
mov
mov
out
xchg
addr16
lods
bound
mov
ljmp
adc
aas
cmp
fwait
fwait
add
xchg
inc
aas
divl
ja
gs
andps
pop
cld
or
and
je
insl
jo
lds
fwait
sbb
mov
xor
push
push
ds
fwait
mov
dec
andl
inc
cmp
mov
push
cmp
insl
pop
int
or
bnd
and
push
cmp
or
xchg
loopne
fwait
xor
add
xlat
into
dec
lods
leave
lock
mov
xorl
or
mov
lcall
mov
rclb
mov
jbe
je
lret
sar
movsb
scas
jne
push
les
and
mov
sbb
push
out
fistl
pop
cltd
add
repnz
pusha
cmp
arpl
lahf
inc
jbe
fcom
shlb
mov
out
and
lahf
lret
dec
cmp
loop
lock
std
aam
leave
lret
test
and
sub
ss
sti
sarb
cmp
loop
jae
in
call
jae
pop
pop
push
mov
es
lods
xor
jns
jns
sub
fs
push
adc
pop
ds
mov
std
insb
rorl
adc
mov
mov
out
testb
mov
in
mov
jb
int
or
add
xchg
and
and
sbb
push
mov
mov
and
aaa
inc
jnp
lahf
out
mov
mov
lods
add
adc
out
cli
fcoml
dec
xchg
jb
outsb
outsb
outsb
out
mov
out
xchg
insl
mov
icebp
lods
insb
outsb
outsb
cli
or
fwait
or
or
mov
negb
in
mov
fisubrl
and
push
bnd
clc
mov
fiaddl
test
cmp
insb
xor
jns
inc
mov
mov
xchg
scas
mov
scas
movsl
mov
cmp
jae
les
adc
stos
or
xor
jae
jmp
popa
sub
int
int
incl
adc
inc
mov
icebp
sbb
int3
adc
int
int
or
fcoml
push
pop
sarl
in
fucomi
cmp
jbe
sahf
xor
cmp
lahf
fwait
fwait
fwait
pop
inc
in
inc
leave
imul
push
lock
leave
cmp
mov
bound
inc
sub
adc
mov
pop
lea
xlat
rcrb
push
cmp
xchg
sahf
fwait
pop
andl
pop
cmpsb
jbe
idivb
xchg
dec
sbb
sti
scas
pop
cli
cmpsb
sub
push
mov
mov
out
add
mov
js
sbb
adc
mov
into
mov
sbb
in
cmp
lock
sub
out
out
add
adcb
icebp
lret
adc
ret
repnz
ja
cmp
iret
mov
movsl
sub
fists
imul
adc
addr16
mov
je
icebp
dec
push
mov
movsb
xchg
enter
test
inc
movsb
out
out
iret
mulb
sbb
pop
sbb
sahf
arpl
jae
inc
inc
mov
or
xchg
je
jmp
or
ret
xor
in
cmp
dec
loope
stos
push
std
push
pop
into
lret
jle
aaa
mov
inc
sub
push
xor
mov
cmp
and
out
push
es
push
fwait
fwait
or
repnz
stc
bound
fwait
fwait
fwait
fwait
int3
cmp
fiadds
mov
mov
xchg
stos
imul
push
popa
ret
adc
out
mov
insb
insb
cli
repnz
sarb
out
ret
out
inc
inc
and
divb
jmp
outsb
pop
adc
stos
lock
push
out
cli
sbb
pop
add
inc
ss
insb
outsb
rolb
fsts
das
sub
ss
test
or
repnz
leave
jge
cmc
in
sbb
and
call
iret
divb
pop
in
pushf
addl
call
xchg
pop
scas
cld
cmpsl
jae
sti
jge
mov
mov
pop
push
and
insl
lahf
loope
push
es
popf
inc
ret
sahf
jl
pop
sbb
and
cmpb
adc
mov
int
negl
mov
adc
lods
leave
int
int
cmpsb
mov
bound
pop
jb
int
int
ljmp
mov
iret
int
int
inc
and
sbb
incl
xchg
pop
mov
or
jge
int3
insl
or
cwtl
test
ret
and
mov
ret
scas
sbb
aam
pop
das
inc
lcall
aaa
pop
data16
out
rcrl
hlt
jnp
out
in
mov
cld
or
jge
push
call
stc
pop
dec
inc
in
xchg
jne
fdivrl
mov
push
cmp
iret
sahf
data16
sbb
outsb
push
dec
lcall
add
cmp
mov
lds
mov
js
pop
loop
xchg
idiv
mov
clc
fsubrl
ficompl
in
outsb
outsb
outsb
cs
loope
fwait
inc
sub
jecxz
lods
inc
js
les
adc
jae
shlb
loop
dec
insb
fisubs
out
and
in
adc
mov
mov
xchg
out
andl
xchg
mov
jge
mov
fidivs
outsl
loope
sarl
xor
and
fcompl
push
pop
xor
lea
ds
notl
loopne
and
lods
sti
dec
movsb
daa
dec
cmp
mov
mov
sahf
dec
popa
cwtl
notb
subl
std
cmp
pop
andb
adc
lret
adc
jae
repz
adc
jae
je
mov
pop
sub
sahf
int
dec
es
jbe
jb
adc
pop
lock
push
xor
jmp
add
fsubs
sbb
push
jbe
mov
icebp
lods
dec
add
out
data16
fcompl
icebp
cmp
mov
cltd
push
movsb
xchg
ss
cmc
mov
jle
sbb
cli
xor
fisubrs
push
dec
xor
imul
fsubrs
mov
scas
add
xchg
or
movsb
loop
mov
add
call
mov
iret
out
mov
dec
aam
or
loopw
cmp
addr16
mov
stos
sbb
xor
std
in
mov
lret
inc
pop
aaa
rcrl
mov
aaa
xchg
lret
insb
xchg
pop
mov
insb
out
cli
inc
out
sbb
lds
ja
cli
bound
std
leave
clc
pop
adc
in
xor
int
xorl
dec
jnp
fmul
int
int
ret
repnz
dec
cltd
mov
adc
int
int
test
notb
mov
int
add
into
cmp
dec
pop
out
cwtl
int
int
jb
aaa
cmpl
hlt
fidivs
inc
out
lahf
int
push
stos
sbb
in
std
pusha
ret
cli
push
ret
jp
pushf
mov
aam
lds
negl
out
pop
in
cmp
push
orb
xchg
sbb
or
pop
ljmp
add
cltd
fstl
sub
adc
fdivrl
ja
cmp
fmull
mov
mov
icebp
mov
cmpsb
es
jmp
jo
push
inc
ds
inc
ds
stos
xchg
aam
xor
movlps
imul
ljmp
loopne
test
sub
ss
dec
mov
dec
fisubl
sub
inc
scas
and
sbb
outsl
cmp
push
std
hlt
ret
mov
inc
jae
movb
lahf
in
add
sub
push
hlt
sbb
test
fsubrs
push
pop
inc
or
jle
mov
cltd
jp
in
add
mov
movsb
mov
adc
mov
scas
xor
adc
fwait
das
cltd
loope
inc
jo
leave
xchg
mov
out
pop
leave
pop
adc
jle
xchg
int3
jmp
js
mov
lods
je
test
cmpb
push
pop
fmull
loope
pop
xchg
push
inc
jnp
mov
insb
shll
clc
pop
loope
jge
mov
and
inc
mov
aad
jl
jae
fildl
cmp
es
dec
and
pop
movsb
pop
or
movsb
cmp
adc
mov
enter
fcoml
jns
rclb
mov
mov
or
pop
sarb
jae
jae
pop
gs
popa
aam
testl
in
or
test
inc
jecxz
mov
and
fcompl
imul
outsb
outsb
scas
cli
dec
test
cmpsl
movsl
add
idivl
add
mov
mov
std
out
negb
pop
cmpsl
clc
xor
mov
fcmovne
out
pop
test
stc
les
out
sbb
in
test
jo
lods
or
sbb
mov
dec
orl
dec
pop
out
or
mov
je
dec
mov
cmpsl
mov
daa
lock
imul
push
mov
enter
pop
outsb
outsb
xchg
jmp
adc
jmp
ljmp
fwait
xorl
shll
jle
out
sbb
xor
mov
jae
mov
in
jae
lods
adc
push
leave
inc
in
out
data16
fdivrl
add
add
dec
xor
sub
int
mov
push
ja
cmc
xchg
adc
jns
fwait
stos
ds
cmc
dec
cmp
les
xchg
aas
out
mov
mov
repz
outsb
xor
mov
mov
ds
in
push
and
loopne
loope
nop
jp
mov
outsb
outsb
mov
pop
test
negl
aaa
aaa
pop
cld
push
xchg
push
dec
pop
sbb
mov
add
aaa
aaa
std
adc
xor
cs
or
push
lods
jbe
decb
sbb
mov
push
out
mov
orb
mov
out
test
outsb
xchg
fadds
inc
and
sbbb
lods
pop
xchg
mov
dec
fstl
aas
fs
pop
daa
push
shl
pop
repnz
jp
mov
mov
bound
lahf
fstpt
das
addl
ljmp
mov
je
fs
adc
scas
xor
inc
gs
mov
xor
fdivr
in
and
jne
xchg
clc
das
pop
clc
cmp
pushf
add
jge
mov
inc
sahf
add
jae
cmp
nop
je
sub
jge
xchg
shlb
fisubs
jae
fs
or
and
sti
cmp
ja
repz
arpl
sahf
dec
add
out
movsl
and
fwait
fwait
fwait
sbb
rcrb
lahf
inc
add
pushl
dec
gs
adc
scas
pushf
mov
shlb
testl
or
sbb
int
pusha
cmp
aad
add
xor
inc
test
jmp
shrb
xchg
popf
test
dec
adc
test
dec
mov
stos
es
mov
add
push
pop
mov
push
popa
popa
cmp
les
call
jb
addr16
add
rorb
mov
mov
pop
or
pop
push
inc
mov
mov
out
cld
mov
push
mov
insb
aaa
rclb
in
jge
clc
mov
and
outsb
aad
enter
pop
ret
aaa
mov
mov
incb
and
xor
adc
loop
rcl
sbb
loope
into
adc
jae
ret
or
xchg
cmp
inc
and
lcall
sarl
fiaddl
bound
cmc
mov
inc
mov
cmp
add
testb
lock
mov
in
add
push
sub
into
pop
subl
push
lods
fists
sub
lds
and
cmpsl
adc
outsl
cmpsb
sahf
int
jge
pop
jo
mov
fwait
mov
lea
adc
adc
lods
add
cs
stos
rolb
test
mov
loopne
fisttpl
push
sbbl
fwait
fwait
and
pop
in
decl
xor
sbb
lahf
imul
mov
and
jmp
clc
mov
in
jae
push
ds
aaa
inc
xor
and
cli
je
int
int
sbb
sahf
icebp
aad
popa
js
in
sti
fnstcw
pop
xchg
mov
int3
pop
dec
add
dec
fimuls
mov
in
addr16
popa
stc
outsl
mov
xor
aaa
aaa
aaa
in
mov
js
mov
data16
daa
and
mov
std
insb
cli
lret
psubq
movntq
dec
adc
jp
fcomi
dec
push
mov
lds
ja,pt
pushf
cmp
cld
sbb
add
test
lret
jmp
loop
push
jbe
inc
rorb
fwait
xchg
gs
in
cmp
mov
mov
sti
cmp
mov
scas
or
clc
jae
jae
cmp
imul
xchg
and
mov
bound
jae
mov
and
mov
sbb
pop
loopne
jae
jbe
pop
inc
pop
mov
xchg
pop
ss
push
xchg
mov
iret
int
add
ret
ds
rclb
in
iret
xor
xor
fistl
push
lahf
cmp
lcall
or
ja
xor
cmp
leave
das
jb
jge
aaa
add
loop
sti
lret
sahf
cltd
gs
cmpsb
stos
fwait
sub
pusha
cmp
inc
je
xchg
and
cld
xchg
stos
out
divb
pushf
inc
pop
add
clc
mul
pop
dec
out
mov
add
repnz
out
int3
adc
test
fwait
fwait
fwait
fwait
std
lods
scas
fs
stos
outsb
outsb
outsb
lahf
fwait
cmp
clc
ret
cld
dec
test
outsb
outsb
les
lds
imul
sahf
dec
xor
mov
pop
pop
sub
push
icebp
or
mov
dec
adc
push
scas
js
clc
je
xor
dec
inc
loope
jp
xchg
sahf
in
inc
test
cmpsb
insl
adc
jns
cli
ds
inc
jge
jbe
pop
push
jo
jl
out
lock
test
xor
pop
dec
stc
adcb
inc
pop
into
push
loope
mov
js
mov
mov
test
adc
xlat
out
sbb
add
or
mov
mov
daa
imul
cmp
cmpsl
in
lods
inc
jno
push
jo
push
sbb
cs
cmpsb
xchg
call
outsb
outsb
outsb
outsb
jecxz
inc
xor
cmp
jb
mov
mov
pushf
mov
out
gs
aam
jl
pusha
out
out
and
xchg
and
pop
or
mov
xchg
ljmp
pop
arpl
int
enter
sub
pop
mov
jae
insb
cmpsb
pop
pop
rcr
and
imul
cmp
sub
push
push
loope
adc
iret
ljmp
dec
ljmp
out
imul
mov
sbb
dec
xchg
or
push
mov
fwait
stos
neg
lcall
adc
and
jp
mov
push
lds
ja
cmpb
fdiv
mov
jp
and
inc
gs
js
inc
clc
ljmp
inc
jo
adc
outsb
ss
aas
stos
stc
popf
jns
pushf
in
aaa
sbb
inc
fcmovu
mov
call
adc
mov
add
ss
mov
push
inc
or
loop
icebp
insb
call
sbb
mov
je
or
in
jmp
inc
clc
jbe
jp
jbe
pop
bound
in
rorb
fwait
stos
dec
stos
jne
rorb
sbb
iret
xor
dec
jb
xchg
add
icebp
jge
cmp
and
pop
or
test
aaa
aaa
push
in
add
nop
sahf
and
mov
ss
sbb
test
sbb
mov
clc
jbe
cltd
pop
stos
jno
jl
jae
jae
dec
pop
jno
aas
mov
mov
out
mov
and
jo
inc
hlt
fistps
adc
fs
lock
jne
cli
add
jae
dec
les
adc
cmp
out
je
stos
xor
out
pop
cmp
pop
push
int3
test
mov
cmc
sub
dec
jnp
pop
jl
sbb
and
je
sbb
pusha
xor
lds
push
fnstenv
push
decb
mov
adc
inc
sbb
pop
or
mov
leave
shll
lret
cmpsb
inc
xchg
jbe
shl
out
mov
mov
js
push
je
push
jae
jae
sbb
cmp
fs
mov
push
add
mov
mov
scas
inc
lea
pop
cli
xchg
push
movsl
jmp
imul
shll
sub
les
nop
mov
push
mov
mov
dec
clc
or
push
mov
lods
push
cmp
clc
mov
inc
sub
cmp
fstps
push
fs
mov
jp
pop
mov
fsub
call
xor
cltd
mov
or
ret
pop
data16
mov
insb
push
cmp
jne
in
add
fstps
pinsrw
lods
pop
add
loop
jle
int
jbe
std
or
pusha
es
loope
jae
pop
cmp
aam
subl
js
xchg
cmp
jmp
scas
outsb
outsb
fisttps
or
dec
out
or
xchg
push
cmc
nop
jp
jge
adc
or
xor
xor
scas
dec
mov
mov
not
hlt
fildll
adc
jle
fbld
xor
mov
loopne
int
jae
pop
mov
rorl
dec
xor
pop
fidivrl
jge
clc
sahf
pop
fisubrs
xchg
add
outsb
outsb
cs
mov
mov
mov
mov
sbb
insb
outsb
outsb
add
out
subl
push
cmc
ret
insl
pop
jbe
mov
inc
adc
and
mov
inc
out
jae
jae
add
xchg
test
in
testl
jno
in
xor
sahf
inc
pop
jge
jmp
int
int
clc
lea
out
jmp
push
loopne
iret
mov
jb
fs
sbb
jae
adc
out
push
mov
daa
xor
mov
push
das
add
pop
es
push
mov
jecxz
scas
xor
mov
cmp
fwait
iret
jbe
int
in
push
insl
mov
cmp
cwtl
or
adc
cld
mov
mov
push
push
jmp
sub
cmp
ds
imul
lock
sahf
jg
pop
inc
cld
dec
je
andb
cld
push
add
push
and
addr16
sbb
bound
lret
xchg
outsb
outsb
lahf
fistps
sbb
loop
pushf
outsb
outsb
outsb
outsb
clc
pop
adc
cmpsl
in
or
pop
subb
int3
arpl
pop
les
es
es
fcomi
push
inc
xor
aad
rorl
fwait
push
xchg
daa
aas
js
aam
sub
fwait
mov
movsb
jb
mov
sbb
aaa
pop
cmp
clc
rcrl
cli
dec
cmp
dec
andb
dec
xchg
test
push
cld
push
out
mov
cmc
nop
jle
jns
in
sub
and
mov
fldcw
outsb
outsb
mov
and
or
std
clc
inc
mov
and
ficomps
loope
pop
mov
mov
push
insb
lret
and
fbstp
nop
sbbb
cmp
mov
repnz
cmp
aad
test
roll
adc
iret
out
not
aaa
rorl
lock
mov
dec
in
fisttpl
fwait
xchg
jo
push
add
and
add
xor
inc
jge
insb
xchg
out
fdivrs
out
insb
mov
sti
dec
mov
mov
das
sbb
or
push
xor
out
push
aaa
xor
fsubrl
popf
lods
out
push
into
inc
dec
fwait
fwait
fwait
fwait
scas
clc
cmp
adc
clc
pop
insl
outsb
fstps
sahf
fwait
fwait
fwait
mov
je
push
pop
rclb
lods
jmp
adc
addr16
hlt
pop
pop
testl
push
xchg
insb
pop
cltd
push
outsb
pop
dec
pop
xchg
sub
je
ds
xorb
rolb
dec
fcmovnbe
daa
ljmp
xchg
out
lds
fwait
mov
xchg
clc
mov
dec
jae
push
and
addl
jb
fimull
jbe
shlb
jmp
bound
pop
fdivrl
sahf
cmpsl
mov
adc
fcoml
icebp
gs
aad
leave
clc
fcompl
mov
sub
lock
push
in
lea
add
iret
lods
mov
rcrb
shl
lret
fneni(8087
mov
fimull
cmp
adc
int
int
into
push
mov
add
ss
inc
push
lahf
mov
mov
adc
js
aas
stos
scas
lods
addl
jge
xlat
pop
add
push
jl
mov
mov
stos
neg
cmpsb
sub
in
iret
test
xchg
cmp
sub
jge
xchg
sbb
cld
inc
mov
fwait
push
push
mov
clc
and
pushf
mov
int
add
jae
pushf
lods
daa
outsb
aaa
sahf
int
int
inc
es
inc
mov
dec
jle
inc
pop
push
xor
xlat
jg
fidivrl
fdivrl
push
push
push
icebp
out
pop
inc
cmpsl
add
outsb
outsb
outsb
outsb
into
dec
imul
jns
lock
outsb
outsb
jg
mov
fidivrl
lret
fcompl
ljmp
aaa
popa
cmp
pop
jbe
loope
outsb
js,pn
sbb
mov
lock
lods
aaa
mov
lock
test
aad
test
movsb
aas
lret
aaa
aaa
aaa
sbb
stos
inc
dec
push
fdivr
jno
lcall
loopne
push
icebp
sbb
sarb
fimuls
aaa
aaa
aaa
aaa
push
imul
fadds
jp
in
xchg
lea
sahf
sbb
in
jp
repz
orl
mov
ljmp
aaa
pop
std
add
insb
push
xchg
movsl
nop
in
ja
jl
lahf
aaa
mov
aaa
aaa
mov
push
hlt
add
je
mov
add
cmp
sbb
cmp
test
insb
pop
std
faddp
inc
dec
jle
mov
fdiv
dec
cli
sbb
notb
sub
fxch
jle
js
mov
sub
aaa
loop
loop
ficompl
xor
fdivrl
sbb
pop
xchg
push
insb
dec
mov
out
mov
cli
xor
mov
bound
test
hlt
or
test
xchg
arpl
stos
dec
cmp
insb
inc
sarb
pusha
adc
mov
mov
fisttpll
rcll
mov
outsb
adc
mulb
ds
fwait
fwait
jl
push
adc
cs
loope
dec
pop
push
and
mov
stc
aaa
aaa
aaa
aaa
and
loopne
and
pop
es
cmp
aaa
add
mov
sar
add
popf
je
fcoms
test
push
scas
inc
ja
pop
ljmp
test
cmp
xchg
aam
fcompl
nop
lret
mov
sub
inc
jp
sahf
pop
xlat
clc
mov
sbb
lret
or
mov
std
insb
es
lcall
mov
fistl
shrb
pop
adc
sahf
sahf
xor
lds
sub
dec
dec
movsb
sbb
add
rcll
and
xchg
shlb
test
sub
lahf
fwait
fwait
pushl
pop
mov
add
loop
lahf
and
ds
aas
movsl
push
aad
mov
test
out
or
bound
dec
loope
dec
xor
add
dec
add
add
iret
pusha
mov
jle
out
out
int3
es
test
mov
push
cmp
lret
stc
bnd
rclb
clc
sub
push
fwait
push
sub
sahf
lret
jno
loop
jg
sbb
jge
fdivl
rcll
xor
cmpb
lock
shll
out
fisttpl
shlb
sbb
mov
out
sbb
cwtl
push
xchg
pushf
inc
and
fwait
sub
push
or
lods
fists
sub
cmp
leave
jbe
mov
jno
push
and
mov
push
xlat
lret
int
dec
or
mov
add
clc
popf
mov
sub
fyl2x
pop
jg
sbbl
sub
push
fisubrs
lahf
in
pop
or
mov
or
lahf
mov
fdivrl
into
xchg
push
adc
rcl
lds
mov
pop
jb
ss
sbb
and
out
inc
scas
movsl
ss
out
imul
add
xchg
int
neg
mov
fisubl
loopne
pushf
and
int
int
repnz
out
cmc
mov
add
aam
cwtl
fdivrl
inc
pop
adc
lret
cmc
outsb
test
pop
jae
sti
and
lahf
sub
cmpsl
mov
pop
sarb
adc
out
fs
jne
fadd
mov
mov
aad
je
mov
sub
int
imull
mov
ljmp
int
int
iret
sbb
lret
pop
jg
in
shrl
out
lahf
scas
jge
movl
or
pop
out
mov
xchg
out
mov
mov
push
test
push
pop
cmc
jge
push
movsb
cmp
mov
jo
push
insb
inc
adc
out
adc
cltd
jp
outsb
xlat
rclb
mov
ljmp
insb
outsb
outsb
outsb
into
bt
int3
pusha
mov
and
ja
xchg
sbb
shll
cmp
es
int
int
aam
into
sub
or
add
mov
popf
add
sub
inc
pop
mov
hlt
icebp
cmp
pop
lock
fisubrl
rcr
jmp
call
cmpsb
aad
cs
sub
xchg
ja
sub
ja
sub
iret
in
pop
cmp
test
fimull
imul
jne
aad
int3
cmp
xchg
pop
std
out
or
int3
ss
rorb
and
iret
out
mov
inc
add
mov
mov
cmp
dec
mov
push
cmp
inc
sbb
es
movsl
mov
icebp
xchg
mov
sahf
push
js
lahf
int
shl
xchg
adc
clc
sub
movsb
jge
add
push
insb
out
xlat
jb
out
testb
xor
xor
sbb
out
out
loope
and
or
jb
and
pop
cmp
push
scas
arpl
xor
mov
lret
pop
mov
or
add
js
jp
mov
out
mov
push
pusha
loopne
mov
adc
inc
rorb
outsb
out
push
xor
dec
arpl
data16
pop
add
jge
and
arpl
cmp
outsb
fistpll
ffreep
xor
jl
jle
repnz
push
nop
cmp
dec
jl
out
inc
fnstcw
dec
movsl
mov
sbb
orb
dec
lahf
and
in
mov
lods
jne
clc
sarb
incb
shlb
or
orb
push
xor
pop
out
add
sub
xor
dec
jne
and
iret
out
cs
in
subl
addr16
cmc
rcll
in
mov
int
sub
pop
sbb
scas
cli
jge
mov
aaa
mov
cmp
jp
dec
mov
xchg
std
fcompl
pop
ja
rcrb
ret
mov
ficoms
rorl
popf
xchg
push
scas
cli
push
cli
pushf
lds
movsl
adc
add
mov
dec
outsb
outsb
outsb
outsb
push
dec
mov
lods
lods
scas
and
insb
sbb
mov
sarl
fildl
fisubrl
pop
xor
dec
lahf
fwait
fwait
sub
pusha
cwtl
in
mov
add
int
insl
stc
inc
pop
jge
push
or
mov
ret
or
inc
mov
lds
push
push
cli
xchg
clc
cmc
and
fwait
fwait
sub
xchg
dec
mov
aad
mov
cmp
pushf
movsl
hlt
jns
mov
lock
pusha
inc
jecxz
sarb
adc
lahf
fistpl
in
ror
es
fnstsw
cmp
out
idivb
jl
xor
adc
iret
out
out
sub
add
enter
popf
ss
icebp
insb
outsb
mov
in
enter
fstpl
or
add
jle
cmp
or
es
xor
mov
mov
jl
cmpsb
jae
cltd
stc
sahf
out
out
icebp
pop
add
cwtl
and
and
pop
inc
cmp
addr16
cmp
mov
pop
test
sahf
push
lods
inc
and
aam
jl
rorb
stos
inc
aam
ljmp
roll
dec
push
xor
adc
test
mov
xor
aaa
and
fcom
dec
inc
es
hlt
nop
cmp
add
ss
ljmp
adc
scas
je
cmp
xor
inc
inc
icebp
pop
mov
mov
sub
inc
imul
fwait
fwait
jmp
pop
cltd
iret
jmp
xchg
setne
jge
jle
pushf
nop
dec
inc
push
mov
push
xor
gs
int3
and
mov
sub
and
sbb
sti
mov
mov
mov
ljmp
adc
cld
sbb
ds
aaa
and
int
mov
inc
mov
cmpsl
sbb
jbe
or
test
cmp
loop
mov
outsl
adc
js
outsb
aas
fwait
and
fnstenv
btr
aam
push
das
mov
daa
loopne
rorl
xor
mov
fisttps
jp
and
daa
loopne
jecxz
lahf
int
sbb
int
lret
xor
dec
mov
scas
lcall
mov
adc
aaa
pop
jge
sub
adc
je
dec
ret
push
dec
jl
xchg
cli
sarb
cmp
testb
sarb
lcall
fistl
in
dec
subb
cmpsl
mov
fwait
fwait
popa
out
adc
adc
fcompl
jl
xchg
mov
outsb
outsb
out
scas
lea
mov
rorb
out
leave
cli
sub
push
call
fcmovne
xchg
jmp
jo
inc
or
mov
lahf
xchg
je
mov
jmp
inc
xchg
jno
xor
add
loopne
ss
xchg
test
jecxz
sti
lcall
inc
filds
mov
hlt
data16
mov
mov
and
adc
fistpl
and
or
paddusw
fwait
adc
adc
xor
cmpsb
pop
push
lock
nopl
imul
mov
int
xorl
fsubl
in
popf
pop
xchg
and
dec
test
popa
mov
cmpsb
stos
aam
test
jno
fcoml
pop
in
jmp
dec
pop
loope
adc
int
in
xchg
out
inc
mov
data16
jmp
sbbb
xchg
outsl
repnz
es
pusha
dec
push
movsl
test
mov
lods
sbb
insb
mov
cli
fldcw
scas
inc
fnstcw
push
inc
js
outsb
outsb
mov
jl
stc
js
and
cmp
cmp
cltd
movsl
jg
lea
sub
shl
mov
clc
or
sub
insb
outsb
pop
xor
inc
push
and
and
aaa
aaa
in
pop
adc
dec
sbb
jecxz
mov
jl,pn
mov
pusha
not
xchg
ret
mov
shrb
lods
sarl
jns
aam
jmp
add
push
sbb
adc
int3
lock
mov
or
jne
ds
jo
fwait
iret
int
jle
cmc
int
and
jns
shl
out
xor
stos
iret
adc
out
adc
pop
jb
insl
sbb
adc
out
out
iret
popf
xchg
push
jb
mov
addr16
fistpll
data16
arpl
jno
add
js
xor
outsb
jnp
jmp
ss
or
movsl
stos
pop
add
dec
mov
xchg
mov
icebp
mov
stc
mov
mov
lea
adc
jge
fcomip
push
stos
push
dec
adc
bound
sbbb
stos
fists
lods
push
or
insb
outsb
outsb
outsb
dec
mov
insl
adc
adc
std
push
aad
cmp
dec
leave
leave
out
xorb
pop
bound
inc
add
jae
sti
cmpb
clc
jecxz
fimuls
mul
jae
jae
xchg
adc
stos
jno
jae
out
or
arpl
push
dec
jge
jb
sti
add
or
sbb
mov
push
into
push
jecxz
jmp
cwtl
pop
xor
mov
in
bound
and
jge
mov
xchg
push
lret
add
clc
adc
jae
out
aas
add
aas
xchg
outsb
outsb
outsb
outsb
adc
aam
shrl
push
sti
fsubl
insb
icebp
and
ret
mov
cmp
popf
imul
push
lret
outsb
mov
ror
dec
ss
or
aaa
outsb
outsb
outsb
outsb
popa
fsubs
imul
mov
jge
sbb
jl
inc
out
lods
insb
cs
lcall
out
mov
mov
das
sub
mov
xchg
sbbl
mov
jg
mov
mov
dec
test
pop
mov
not
adc
insl
les
out
sub
mov
into
int
in
mov
aad
xor
leave
jo
iret
int
jge
xor
cwtl
push
xor
ds
test
mov
push
add
das
jae
cmc
push
int
js
cltd
insb
insb
and
lahf
in
jae
test
inc
push
pop
mov
rorb
jbe
int
xor
or
bound
out
mov
ljmp
out
out
mov
stos
push
fcomip
movsb
xchg
icebp
movsl
jmp
outsl
cmp
ret
pop
cmpsl
xor
cmp
mov
pop
lods
and
pop
mov
add
iret
int
in
test
mov
imul
jge
test
jb
fwait
dec
rcl
mov
or
pop
jne
jnp
fadd
mov
pop
jp
rclb
fistl
pop
inc
repnz
popl
jno
mov
pop
popa
subb
ret
mov
mov
in
fisubrl
and
setg
or
loope
push
cmp
or
js,pt
outsb
adc
or
inc
dec
repnz
add
daa
addl
pop
ja
jl
fwait
fwait
fwait
fwait
adc
mov
pusha
mov
jl
pushf
incb
push
int
or
rcll
cmp
lods
test
ds
jp
xor
ds
push
out
add
shrl
stos
push
out
mov
lds
int
int
push
repz
mov
clc
lahf
int
int
mov
out
cltd
stos
gs
or
lods
mov
lds
fdiv
leave
js
jo
test
sub
mov
in
dec
jecxz
hlt
jge
xor
aam
adc
test
aas
add
pop
leave
cmc
int
aas
fwait
int3
and
lret
adc
mov
sbbb
ja
icebp
rsm
scas
stos
fmull
leave
sbb
fcoms
insb
outsb
repnz
sbb
mov
rol
ret
hlt
rcrb
fimull
pop
fwait
addb
xor
into
cmp
outsb
bound
icebp
or
outsb
cmpsl
and
or
pop
out
pop
in
out
lock
push
iret
inc
sbb
or
mov
dec
mov
subb
jbe
fcoml
fwait
fwait
fwait
fwait
test
test
mov
into
std
sbb
xchg
inc
pushl
insb
aas
and
les
incl
cmc
insb
cmp
mov
cmp
push
and
in
adc
fcmovne
repz
sub
xorb
adc
outsb
adc
shrl
popf
sub
rol
dec
ret
mov
insb
clc
mov
cmpsl
cmp
dec
jge
aaa
cwtl
and
shrb
or
in
stc
loop
inc
hlt
mov
push
pushf
sbb
divb
paddq
icebp
hlt
loope
jle
mov
test
cmp
outsb
outsb
cs
incl
pop
popf
in
sahf
lock
repz
mov
push
mov
jmp
push
repz
jge
enter
insb
pop
int
mov
insb
pop
test
lds
jle
lods
inc
or
mov
daa
lods
jmp
sub
inc
add
sub
aaa
mov
int
fistl
sbb
es
enter
sahf
fprem
icebp
cmp
jl
push
test
out
xor
xor
xchg
ds
or
outsb
outsb
mov
sbb
mov
ljmp
push
xchg
inc
dec
je
sarl
push
out
into
in
jp
outsb
mov
or
lahf
shl
or
repnz
jge
xchg
sub
loope
sti
fs
pushf
icebp
add
xchg
pop
enter
insb
outsb
insb
xchg
jmp
add
adc
ds
sbb
das
jnp
pusha
data16
sub
cmc
in
push
dec
pop
add
jmp
loopne
fsubl
jo
xchg
lea
mov
jae
fbld
jne
int3
rorl
jb
out
xor
adc
mov
pop
xchg
mov
and
lcall
adc
or
out
data16
mov
ficomps
inc
cmc
mov
dec
jno
mov
mov
dec
inc
push
insl
pusha
xor
mov
pop
shll
mov
sub
adc
jecxz
push
mov
rcr
icebp
loop
pop
or
mov
outsb
mov
push
mov
outsb
outsb
pop
pushf
mov
xchg
sahf
cmp
ss
outsb
add
mov
out
js
nop
orb
cltd
dec
lock
test
sar
insb
cmp
cmp
mov
mov
mov
or
in
jae
and
or
test
pop
cs
orb
dec
or
punpckhdq
mov
xchg
push
push
sbb
xchg
cmp
out
ret
test
fsubrl
pop
inc
cmp
xchg
mov
xchg
dec
test
out
mull
sbb
jno
int
pop
pop
fs
adc
int
int
dec
hlt
or
cmp
sbb
int
add
or
xchg
inc
cltd
mov
cmpsl
mov
pop
mov
aam
jecxz
out
cmp
mov
test
mov
repnz
push
ret
or
mov
outsl
jle
jge
push
sub
inc
push
or
cmpsl
in
push
pop
xor
mov
rcll
or
mov
add
sub
or
subb
mov
mov
js
fdivr
mov
xchg
lret
mov
pop
sbb
fdivrl
cli
div
or
mov
pop
inc
ret
xchg
mov
in
pop
ficompl
jae
jae
pop
mov
xor
fwait
movsb
cltd
movsb
jae
jae
jmp
je
cmc
idivb
stos
outsl
dec
dec
lea
out
into
outsl
rorb
out
dec
xchg
fcmovne
out
cltd
dec
in
or
es
out
sbb
imulb
call
insl
mov
test
dec
imul
fisttpl
inc
pop
into
out
pop
repnz
add
lea
jle
push
test
imul
push
ds
icebp
and
xor
addb
lahf
mov
in
pushf
mov
lea
fmull
aad
loopne
movsb
adc
in
sti
fnstenv
xchg
mov
jbe
addl
fnstcw
aaa
mov
pop
mov
fwait
cmpsl
jmp
jp
jae
jae
cmp
shr
inc
mov
int
sbb
in
addr16
mov
xor
mov
pop
leave
mov
jp
jg
sbb
sbb
sub
fdiv
jnp
es
xlat
enter
and
lret
push
call
shlb
pop
test
ja
fsubrl
insb
test
lds
jl
fsubrl
adc
add
push
out
add
or
mov
mov
mov
fsubs
cmpsb
fimuls
js
push
out
add
cmp
je
mul
jnp
shrl
jb
pop
or
inc
mov
std
pop
je
mov
stos
pop
sarb
jp
pop
cld
scas
shlb
mov
cwtl
ljmp
cmp
xor
or
pop
lock
sarb
cmp
jg
stos
outsb
outsb
lahf
fwait
jmp
and
sbb
pop
cwtl
outsb
outsb
outsb
outsb
pop
repnz
popf
sti
cmp
outsb
outsb
outsb
outsb
push
mov
lgs
adc
cmpsb
outsb
xchg
int3
dec
in
loope
out
mov
lahf
adcb
insb
sub
out
sub
inc
lds
aam
fs
inc
fists
bound
fnstsw
cwtl
jmp
scas
or
repnz
pop
inc
shl
test
int
out
punpckhwd
les
mov
push
leave
dec
gs
movb
incb
sub
mov
shlb
mov
lods
clc
dec
pop
jbe
push
cmp
and
fdiv
sbb
popf
xor
lock
in
sbb
fstps
aas
mov
clc
jne
mov
fdiv
push
clc
mov
dec
push
add
aad
jg
fadd
pop
cli
nop
or
jecxz
mov
int
enter
pushf
cmp
int
ja
lret
sub
mov
movsb
andb
in
filds
xchg
inc
or
sti
jle
aam
mov
bound
in
repz
pop
jno
mov
clc
bound
das
push
popf
int
iret
insb
movsb
mov
aaa
mov
pop
rol
pop
fucomp
pop
orl
mov
dec
push
sbb
push
sub
hlt
mov
or
insb
js
mov
pop
xchg
push
push
ljmp
ds
jmp
push
aam
into
push
mov
jbe
ljmp
sub
mov
out
xor
outsb
outsb
xchg
clc
into
dec
bound
sti
mov
dec
cmp
jae
cmc
cld
sti
push
stos
scas
jbe
mov
not
mov
jae
fcoms
sahf
cli
movsl
daa
sahf
push
pop
inc
lret
add
mov
fisubs
mov
mov
mov
mov
addr16
jae
lret
mov
enter
xor
mov
cld
mov
loope
mov
enter
les
sub
gs
fmul
and
push
or
in
mov
cmp
ret
aam
fistps
mov
or
jb
scas
inc
xchg
mov
mov
cmpl
icebp
mov
aaa
aaa
rcll
add
pushf
and
aaa
flds
mov
pop
mov
jp
dec
xor
idivb
push
loop
ja
test
mov
bound
out
xlat
setns
or
icebp
mov
rcr
pop
ficoml
movsl
fcompl
push
pop
test
push
push
jl
loope
stos
push
jp
out
dec
push
cli
les
popl
js
mov
shlb
leave
les
mov
and
push
iret
idivb
mov
stos
mov
mov
cmp
sahf
repz
fistl
scas
xchg
cs
mov
nop
jo
mov
xchg
ficoms
div
mov
xor
mov
jae
shrl
mov
sbb
sbb
lods
rcr
jae
jae
sub
pop
fs
xchg
ds
sbb
shlb
hlt
dec
jb
jo
orl
inc
stos
jmp
addl
add
aaa
push
mov
mov
call
mov
cmp
jne
xor
jae
jae
pusha
inc
mov
and
mov
addr16
xchg
jg
mov
ja
test
js
inc
xchg
adc
push
jle
into
pushf
inc
inc
pop
push
push
sahf
in
addr16
adc
xchg
dec
daa
fwait
stos
ds
repz
repnz
ret
cmp
jmp
cmpsl
ss
push
std
mov
aas
lock
and
or
in
sti
xchg
jp
mov
lcall
jp
int
xor
popf
test
fcompl
or
ss
cli
sub
fsubl
sbb
adc
loop
cmp
movsl
icebp
fmull
jecxz
stos
mov
int
mov
insl
push
mov
imul
aas
ds
pop
add
xchg
add
in
jecxz
fsubrl
loop
mov
jp
pop
lock
sbb
in
and
icebp
mov
jno
cmc
fstps
pop
ficomps
sub
cmp
iret
int
xchg
adc
cmpsb
gs
aaa
aaa
aaa
mov
inc
sub
pop
je
out
xchg
ds
adc
jecxz
xchg
mov
fld
arpl
and
xor
cmp
iret
test
bound
sub
push
clc
ljmp
cmc
insb
outsb
mov
pop
in
lock
stos
stos
fcomps
and
inc
out
cltd
adcb
cmpsb
sub
out
pop
test
mov
mov
roll
dec
jge
aaa
nop
or
insl
push
jae
jae
mov
loop
ficoms
mov
jae
test
fdecstp
add
mov
jnp
ljmp
std
test
inc
mov
fnstcw
mov
pushf
leave
mov
loopne
mov
enter
fsts
push
aas
fisttpl
enter
adc
fidivs
dec
pop
xchg
aam
in
dec
gs
sahf
jb
adc
mov
pop
orb
repnz
add
fdivl
movsl
pop
addr16
sti
jo
jecxz
adc
lods
sub
aaa
mov
in
jge
pop
es
in
pop
mov
aaa
aaa
aaa
jl
add
movsb
inc
pop
sbb
imull
cmp
push
es
sbb
mov
stc
jmp
mov
xchg
inc
cmp
cld
jg
mov
stos
stos
sub
and
dec
lret
xor
ds
push
clc
pop
push
adc
frstpm(287
jo
push
mov
mov
pop
xchg
push
aas
loopne
fstl
ss
insb
outsb
cli
fdivrl
popa
das
rol
and
daa
jg
or
daa
cmc
cmp
clc
sbbb
fcomi
fdivl
incb
pop
cltd
popf
mov
or
and
mov
outsl
cltd
cmp
fdivl
fistpll
repnz
xlat
cs
cwtl
aad
fdivl
jge
out
pop
and
lock
xor
bound
xchg
cmpl
lock
and
imull
rorb
pop
call
in
xor
jle
sarb
sbb
into
dec
outsl
in
js
jge
in
inc
push
inc
call
push
out
out
lods
or
cmp
test
xor
jbe
push
pop
fwait
lahf
int
lahf
pop
push
cltd
mov
lea
add
mov
shll
mov
mov
push
add
xor
addr16
lods
sbbl
aaa
mov
adc
sbb
lods
xor
fdivrl
cmp
clc
push
push
shll
lret
xor
aam
js
pop
jns
inc
inc
insl
pop
mov
jne
push
bound
lea
mov
xchg
adc
outsb
aas
add
and
enter
lock
aaa
ja
sbb
add
das
sbb
aaa
xchg
in
bound
shll
aaa
aaa
aaa
loope
xor
mov
jge
enter
pusha
enter
push
scas
dec
adcl
add
push
or
cmp
fistpll
cmp
ja
iret
mov
ss
xchg
lahf
push
add
jbe
enter
ss
cmpsl
stc
scas
jbe
loope
or
inc
jae,pt
jae
fisubs
mov
xchg
seto
ss
push
rclb
mov
cmp
addr16
push
icebp
sub
out
adcb
push
xchg
jo
dec
xor
mul
es
je
cmc
mov
inc
cli
jb
pop
int3
jg
into
lcall
clc
and
fcmovnbe
fwait
fwait
fwait
fwait
mov
cmpsb
push
adc
mov
mov
sbb
aas
adc
scas
push
push
iret
jg
hlt
pop
push
adc
clc
inc
clc
jb
add
push
movsl
mov
int
cmp
je
cs
imul
lret
inc
mov
ja
mov
mov
mov
inc
aas
adc
pusha
pushf
test
jo
outsb
outsb
out
jp
shrb
add
mov
adc
outsb
outsb
outsb
fs
inc
dec
sub
idivl
insb
outsb
outsb
jle
movsb
clc
je
xor
dec
lock
push
sbb
fsub
jae
sub
cmpsl
pop
loopne
hlt
out
out
cli
iret
test
mov
stos
pop
loopne
mov
inc
push
loop
js
aaa
aaa
jecxz
jne
or
call
mov
cltd
cltd
je
icebp
mov
mov
xchg
xchg
cmp
xor
or
jbe
xlat
cmp
or
mov
dec
ds
out
ficoml
push
adc
outsb
mov
mov
xor
inc
ret
xor
push
jne
or
xchg
cmc
insb
mov
mov
mov
mov
xchg
clc
jle
clc
xchg
adc
add
sarb
push
shrl
aaa
aaa
push
push
or
repz
stos
push
xchg
aaa
mov
jmp
inc
add
roll
or
cmpsl
sbb
xor
scas
mov
cmpsl
mov
mov
mov
int
int
lcall
pushf
mov
in
iret
int
jne
lret
add
fistl
test
test
mov
stos
pushf
xrelease
stc
lds
aas
fwait
fwait
fwait
jge
scas
fistl
jl
subb
sbb
popf
cmp
inc
iret
shrl
xlat
dec
es
clc
mov
mov
add
pop
imul
sbb
sub
dec
pop
mov
les
fdivr
cli
sub
hlt
xor
or
pop
sbb
pusha
add
hlt
outsb
outsb
clc
fdivrl
and
sub
mov
icebp
insb
out
lea
cmpsb
fcomip
test
cmpsl
xchg
jbe
cltd
insb
or
jle
outsb
jg
iret
cli
sbb
push
dec
adc
clc
ja
xor
sarl
loopne
jae
jae
ret
ja
sbb
inc
lcall
cld
andb
in
clc
xchg
test
or
xchg
ss
aaa
aaa
xchg
int
sub
adc
jo
jge
test
call
inc
pusha
mov
outsb
aas
ljmp
bound
xor
outsb
outsb
imul
pop
outsl
dec
xchg
pop
mov
je
outsb
outsb
outsb
pop
pop
sti
out
pop
aaa
mov
es
loop
outsb
fisttpll
stos
decb
ljmp
sbb
cld
loop
iret
movsb
jno
popf
leave
mov
and
add
add
lods
cmp
cmc
mov
sti
ds
xor
fwait
fwait
fwait
mov
lcall
jmp
pop
mov
fwait
fwait
fwait
pop
push
sbbl
loope
fs
pushf
icebp
or
xor
loope
xor
movsl
loopne
jae
sbb
xchg
mov
or
inc
adc
mov
jl
leave
int3
sbb
mov
sbb
fsubs
or
fwait
fwait
fwait
out
push
pop
adcb
gs
sti
jle
push
fimull
in
push
mov
enter
out
mov
xor
or
xchg
outsb
scas
js
ss
lock
pop
push
cmp
outsb
outsb
rcll
cmc
or
add
outsb
outsb
outsb
lods
mov
jle
mov
cltd
sbb
loop
je
xchg
stos
enter
cmp
repnz
lret
sti
dec
ret
bound
iret
mov
xor
jae
sti
jns
insb
pop
push
lods
xor
test
fistpl
out
jbe
mov
into
sbb
xor
aaa
aaa
aaa
jnp
fnstenv
dec
sub
fimuls
jge
cmpsb
iret
and
or
icebp
adc
sti
pop
cld
sub
mov
fcompl
push
in
fwait
out
adc
data16
jle
cmp
andb
push
mov
jae
jae
dec
shlb
stos
fst
in
mov
iret
in
aas
test
out
bound
cmp
ds
aaa
sbb
bound
mov
adcl
dec
cmp
je
push
lods
push
outsb
outsb
outsb
cli
jg
or
push
fs
imulb
and
mov
jle
clc
xor
and
jbe
jl
sbb
dec
add
arpl
jno
or
sub
adc
test
test
mov
jnp
adc
push
ret
sbb
es
push
int
int
xor
pusha
stc
sbb
ja
ljmp
int
nop
aad
inc
outsb
bound
dec
pop
call
fs
bound
or
cmc
xor
fidivs
icebp
push
jbe
mov
int
mov
out
sub
mov
int
push
lods
clc
scas
clc
adc
fwait
fwait
fwait
mov
ljmp
lock
fwait
fwait
fwait
fwait
hlt
insl
push
inc
les
dec
mov
fldl
aas
cwtl
mov
or
aaa
pop
std
ds
push
mov
mov
test
jbe
ss
aaa
cmp
insb
movsl
pushf
nop
cmp
fdivr
fcompl
outsl
pop
dec
jmp
sub
xor
test
jecxz
movsb
incb
inc
fcomps
cld
jl
and
sbb
cmpsl
sub
inc
dec
xchg
mov
int
int
bound
insl
roll
in
jle
add
int
int
jne
push
pop
mov
idiv
sub
iret
lods
outsl
aad
clc
outsb
outsb
rcrl
xor
outsb
outsb
outsb
clc
pop
jo
push
pop
jmp
adc
cmp
pop
or
movsb
adc
mov
int
dec
xchg
in
xchg
hlt
fstpt
jne
pop
adc
insb
push
pop
inc
mov
clc
js
xchg
cmc
jle
aaa
mov
in
fdivl
add
sub
gs
pushf
lods
stos
xor
adc
cli
sub
fcoml
xor
mov
cmp
cmp
mov
or
xchg
and
jae
jae
jge
cltd
mov
mov
mov
pop
fwait
mov
test
xchg
mov
mov
loop
fdivrl
xor
int
inc
test
xlat
addb
roll
push
repnz
sbb
xchg
jle
cmp
push
jbe
std
adc
xor
shl
data16
jbe
mov
and
push
pop
fcompl
cwtl
pop
test
push
mov
mov
scas
js
lods
mov
fwait
fwait
or
loopne
xchg
mov
popl
sub
daa
jmp
jl
mov
jmp
mov
pop
push
and
and
adc
xchg
inc
fldcw
aaa
aaa
inc
icebp
in
int
into
test
dec
pop
int
add
nop
cmpsb
into
loope
mov
xchg
inc
sub
int
or
je
or
add
int
int
fldt
aaa
adc
in
mov
int
int
in
js
mov
sahf
jge
es
int
and
mov
dec
mov
or
out
jl
mov
mov
std
movsb
push
push
repnz
xchg
stc
jmp
pop
lods
pop
rorb
add
enter
mov
cli
cli
int3
cmpsl
ss
mov
ds
dec
test
sub
jle
sub
sahf
enter
fimuls
jae
jo
imul
xor
iret
idivb
mov
cmp
add
xchg
jo
push
fbld
jae
pop
scas
rorb
pop
cmp
data16
fdivrl
dec
icebp
js
sahf
cmp
cs
cs
mov
mov
sbb
inc
outsl
out
pop
je
push
sub
jle
or
in
inc
loop
mov
fs
cli
and
mov
aas
jae
jae
adc
xchg
cltd
adc
jp
int
iret
int
sbb
cs
mov
dec
aaa
aaa
aaa
mov
pop
nop
inc
push
mov
xchg
pop
push
rorl
or
cmp
iret
push
xor
popf
xchg
adc
je
push
pusha
jl
aas
fldt
aam
in
imul
loope
dec
fs
jge
dec
jl
movsb
in
out
adcl
inc
jnp
fisubs
push
push
jae
jnp
call
movsl
ljmp
jae
out
mov
ss
shrb
pop
xor
or
orb
loopne
cli
fwait
call
xchg
pop
xlat
jp
push
adc
mov
xor
sub
iret
out
in
lock
mov
outsl
lea
loopne
inc
sti
mov
aaa
aaa
mov
mov
sub
xor
jl
aaa
sub
xchg
xchg
sbb
push
inc
lahf
adc
sbb
addr16
fadd
pop
pop
clc
in
dec
leave
mov
mov
movsb
loope
bound
out
xor
in
popa
push
aaa
xor
fstps
add
jle
mov
hlt
or
aaa
mov
lods
pop
mov
sar
mov
iret
out
nop
enter
cmp
loop
jmp
xor
fadds
testl
fnsave
cmp
jl
jle
cltd
sub
or
jl
ds
xorb
aaa
push
push
sbb
pandn
sti
jle
jbe
mov
xchg
fcmove
shlb
jecxz
jae
test
jns
mov
inc
dec
mov
add
adc
mov
sahf
aaa
aaa
aaa
aaa
fidivrl
nop
pop
push
stc
les
lret
repz
fwait
cmp
jbe
jb
push
loop
les
movsl
and
jns
hlt
push
mov
divb
enter
pushf
addb
shlb
shll
shrb
xchg
sub
pop
aad
iret
cmpsb
pop
jb
dec
and
sbb
enter
out
pop
mov
aam
xor
inc
pop
add
int
sbb
adc
insb
xor
int
or
mov
cs
push
push
and
pop
sahf
lods
shr
push
pop
inc
cmp
mov
jae
jnp
xchg
ds
inc
enter
mov
jae
jae
daa
add
xchg
mov
sbb
test
ret
ja
jae
jae
push
popa
push
adc
hlt
dec
test
call
je
add
push
mov
nop
and
dec
jge
iret
and
push
cmp
jae
jae
cwtl
cwtl
mov
dec
out
jle
out
ss
les
imulb
dec
mov
jp
inc
aam
aaa
std
push
pop
enter
jmp
adc
cmp
insb
shlb
addr16
jae
mov
adc
and
adc
add
stos
jge
les
adc
sub
push
push
nop
add
in
jno
mov
mov
xor
push
cld
mov
adc
stos
out
and
out
and
aas
xchg
lock
iret
int
int
js
sbb
nop
inc
cmp
mov
cmp
push
pusha
imul
jmp
inc
scas
rolb
pop
loop
mov
sbb
dec
ret
jae
insl
mov
jo
aam
xlat
aad
xor
mov
dec
push
xor
jecxz
pop
jne
jae
pop
icebp
inc
clc
inc
inc
out
and
loope
sub
int3
mov
ja
fisubs
adc
jmp
adc
out
cli
or
leave
iret
pop
shlb
push
mov
or
rorl
fsubrs
mov
dec
sub
aas
cmp
pop
push
decb
subb
fdiv
cmp
sarb
push
or
in
and
dec
popf
stc
test
lods
xor
loopne
cmc
icebp
jmp
push
xchg
shlb
test
out
adc
sbb
pop
notl
xor
xchg
mov
out
adc
and
mov
push
mov
fisttpl
mov
cwtl
fld
adc
jae
sti
xor
dec
lods
adc
loopne
adc
xchg
andb
jnp
mov
call
mov
mov
pushf
add
xchg
mov
fisttps
jmp
dec
xchg
bound
mov
add
mov
fmuls
jne
jmp
xchg
inc
sahf
cld
int
dec
mov
sub
ds
out
mov
jns
lds
fisttpll
ja
push
cmp
and
push
and
cmp
out
add
fldl
inc
hlt
dec
sbb
ret
sbbl
push
xor
out
gs
jno
nop
movsl
out
pop
lret
or
les
xlat
aam
int
in
popf
enter
sub
test
mov
popf
push
mov
imul
movsb
push
addr16
fmull
hlt
ret
mov
in
adc
jle
outsb
outsb
outsb
mov
push
mov
adcl
das
icebp
insb
outsb
call
rcrl
hlt
pop
out
mov
inc
popf
jle
sub
aam
pop
pop
fdivrl
mov
sbb
out
es
insl
xlat
push
push
inc
mov
mov
ss
test
outsb
outsb
inc
bndldx
iret
incl
or
mov
cmpsl
testb
jp
scas
mov
cmp
mov
jae
fdivrl
fidivs
push
mov
cmp
jae
jae
sub
cmp
aaa
aaa
mov
ss
sbb
sarb
pop
movsl
dec
shll
push
loopne
test
aaa
decb
insl
je
clc
mov
mov
push
xor
repz
popf
push
mov
nop
mov
sub
push
jp
add
mov
lcall
sahf
mov
and
or
shll
mov
dec
cli
fdivrs
shlb
outsb
dec
les
and
or
icebp
fwait
mov
roll
or
out
testb
cmp
mov
pop
jnp
mov
adc
or
inc
jae
aas
or
cmpsb
jno
inc
inc
pop
fcmove
push
outsb
test
aad
fdivl
xor
imul
les
into
insl
xchg
dec
add
lahf
fildl
xorl
stc
movsl
dec
pop
mov
push
or
push
mov
fsubl
fmull
pop
and
out
or
dec
push
outsb
outsb
outsb
into
jge
xchg
dec
mov
dec
out
out
out
fcmovu
mov
push
cmp
outsb
js
push
jb
add
cmpsb
mov
lahf
jo
or
push
jecxz
xchg
sub
mov
andl
mov
mov
jle
cmp
cmpsb
ds
mov
push
and
xchg
mov
daa
icebp
loop
push
daa
out
and
pop
mov
mov
rcll
loope
inc
cmp
add
hlt
add
cli
into
cmp
int
int
add
xchg
add
pushf
popf
stos
aaa
aaa
mov
imul
pop
mov
cmpsl
aas
mov
and
jnp
adc
iret
in
sbb
jmp
jg
sahf
pop
mov
add
aad
mov
lahf
int
mov
es
xor
lret
add
mov
xor
mov
inc
fdivrl
dec
cmpsl
mov
lret
cmp
and
inc
in
xor
add
jg
into
sub
insb
arpl
xor
cmp
sbb
push
fsubl
inc
aas
jbe
enter
lock
xor
mov
adc
loope
lahf
fwait
fwait
dec
sbb
mov
inc
pop
lret
push
pop
scas
jge
lock
ror
jmp
cmp
xchg
jo
jbe
add
fdivl
lahf
xchg
dec
add
xchg
test
or
data16
test
mov
xor
out
add
jecxz
jge
out
clc
jle
pop
pushf
mov
add
inc
clc
push
or
add
push
cli
loopne
push
pusha
jbe
or
sub
dec
mov
push
push
bound
pop
fists
sbb
fs
mov
enter
leave
and
lcall
mov
mov
jae
adc
fdivl
jge
mov
and
insb
dec
loopne
xchg
or
cs
jle
lods
inc
scas
xchg
fstps
add
cwtl
and
or
out
in
or
hlt
sub
jb
push
decl
xlat
divl
data16
mov
cltd
out
mov
jg
xlat
cmc
dec
pop
ss
fstpt
push
jno
fmull
leave
int
push
xor
mov
loope
push
testb
sub
mov
stc
push
fcmovne
out
jns
sub
mov
cmpsb
rolb
mov
fwait
fwait
std
les
xchg
sub
cmp
mov
imul
fmuls
mov
mov
shll
xor
or
out
aad
inc
insb
scas
xor
mov
aas
insb
jecxz
xor
mov
xor
sahf
das
xchg
lret
call
push
or
cmp
mov
push
gs
xorl
fdivrl
sub
or
inc
arpl
push
adc
adc
das
dec
xchg
out
jae
aas
inc
filds
mov
sbb
iretw
out
out
add
es
aam
je
lahf
es
pop
sbb
sub
pop
dec
je
iret
int
add
jae
movsl
xor
adc
xchg
dec
dec
jmp
arpl
add
or
xchg
jae
cmp
jno
inc
pop
adc
add
jae
jae
or
rorl
int
mov
and
jne
das
xorb
lcall
dec
xor
pop
iret
in
xor
mov
sbb
icebp
ret
imul
subb
jp
and
inc
outsb
outsb
outsb
outsb
push
dec
xor
sbb
ds
cmp
jp
xchg
leave
je
clc
jecxz
ffree
int3
or
hlt
mov
mov
int3
sbb
flds
pop
enter
dec
loop
cmp
push
inc
push
dec
fcmovb
ds
test
fbld
xchg
aad
add
or
out
out
mov
push
jecxz
pushl
mov
push
data16
repz
out
or
mov
mov
push
repz
mov
adc
mov
mov
test
mov
nop
xchg
fcmovne
out
cmp
in
xchg
pop
add
int
aas
enter
or
ficoml
cmp
test
mov
mov
dec
icebp
jge
popf
sbbb
popf
or
fcompl
xchg
cli
lret
pop
adc
xor
xchg
ret
mov
rol
sub
push
jl
xchg
fmull
adc
cmp
jno
fcoms
lds
xchg
jbe
or
int
jcxz
add
loop
inc
sub
add
js
pop
mov
out
mov
jae
push
mov
inc
loop
cwtl
xor
mov
jg
outsb
outsb
clc
jge
out
loop
lds
lock
pop
int
push
jle
jl
fsubrs
movsl
pop
icebp
inc
jno
and
pop
inc
test
sbb
sub
fnstsw
sbb
jnp
pop
sub
adc
shll
jl
outsb
or
inc
lcall
loope
xchg
push
test
fwait
fwait
fwait
cmp
push
push
dec
aam
mov
lcall
out
cli
inc
lods
dec
mov
adc
dec
mov
subl
mov
mov
inc
and
ljmp
pusha
or
inc
cmp
mov
icebp
cwtl
inc
jb
cs
add
fwait
fwait
fwait
or
push
test
clc
insb
outsb
xchg
add
dec
in
leave
inc
jbe
fcmovne
test
inc
inc
xchg
imul
add
fwait
fwait
fwait
xchg
inc
and
add
dec
fwait
fwait
fwait
fwait
push
mov
scas
test
sub
lea
mov
sub
movb
or
jecxz
mov
hlt
aaa
sbbb
mov
ds
fwait
jno
inc
jge
xor
mov
cmp
push
fs
out
out
mov
xchg
xlat
cmp
dec
or
or
faddl
pop
mov
aam
cmp
pushf
dec
jmp
fwait
fwait
fwait
pop
xchg
mov
mov
idivb
fisubl
pop
adc
add
pop
movsl
faddl
decl
filds
xchg
stos
xchg
jno
adc
and
fsubs
test
adc
add
jns
iret
out
mov
xor
lock
cmp
inc
outsb
rclb
negl
les
push
outsb
outsb
mov
lcall
fsubrl
ss
aaa
pop
jne
dec
dec
fabs
xor
jnp
out
or
inc
enter
jae
jae
sbb
sub
mov
aaa
aaa
mov
xor
lret
jle
in
mov
or
fwait
fwait
cmp
pop
and
clc
mov
fcoms
fbstp
sbb
mov
rcrl
out
push
lahf
int
mov
movsb
xchg
es
fwait
fcomi
fstl
mov
push
jge
pushf
fwait
cmp
jne
or
xor
sbb
fs
sbb
mov
out
mov
inc
dec
push
sbb
or
jo
sbb
adc
inc
lods
push
sarl
cmpsb
cmp
inc
je
adc
clc
loop
sahf
test
mov
adc
mov
xchg
sub
mov
fisubrs
mov
loop
mov
cmp
inc
lcall
or
test
mov
ja
sub
cli
inc
dec
pop
sbb
fs
mov
push
clc
test
inc
inc
js
outsb
lahf
fmuls
int
test
push
mov
mov
cmp
jecxz
and
mov
jge
mov
sahf
cwtl
cmp
cs
xchg
out
cmp
rorl
jae
xlat
inc
sarb
jne
dec
in
fdivrl
xor
ret
lahf
sub
mov
xor
fwait
test
push
mov
mov
test
mov
rorb
sarl
movsl
mov
mov
cmpsb
sbb
daa
push
out
out
std
aaa
pop
pop
sub
rorb
out
out
sbb
mov
or
inc
shl
out
cmpsb
addr16
imulb
dec
sub
pop
loope
mov
ret
bound
sub
pop
bound
adc
and
call
leave
dec
push
push
jae
adc
imul
pop
sar
ret
shlb
roll
sub
pop
daa
pop
xorb
add
outsb
rorl
lret
push
mov
pop
cld
push
xor
push
or
sbb
fdiv
in
imul
movsb
push
inc
clc
dec
ds
mov
shrl
in
mov
bound
jae
push
imul
jns
fwait
mov
mov
sbb
push
rcr
sarb
fcomps
jae
jnp
cmp
push
test
iret
scas
and
pop
addr16
sti
mov
mov
in
push
mov
inc
mov
mov
je
cmp
ret
push
push
jns
mov
popf
fwait
jl
in
jo
insl
fsubrs
cmc
pop
cmc
clc
cltd
jle
popf
xchg
repnz
aad
outsb
outsb
outsb
outsb
mov
and
inc
cmp
ret
cmp
xlat
and
in
xchg
fildl
cwtl
xchg
mov
mov
ds
fwait
stc
mov
sub
cmp
lods
lahf
mov
int
pop
xchg
lret
popa
cwtl
push
repz
pop
ds
mov
cld
add
cwtl
and
mov
icebp
daa
adc
jae
adc
sbb
add
dec
shlb
rclb
dec
jb
gs
mov
add
mov
add
fnstenv
rcll
hlt
incb
call
inc
pop
scas
shll
lahf
lahf
fs
dec
cmp
addb
fisubs
ficoml
mov
imul
lods
mov
and
sahf
pusha
jmp
mov
jb
mov
lret
sbb
cltd
je
xchg
shrb
inc
pusha
inc
out
or
in
mov
jo
dec
mov
pushf
gs
outsb
jp,pn
movsb
fldenv
outsb
xor
push
shrl
outsb
outsb
scas
xlat
push
daa
xchg
or
outsb
outsb
iret
dec
and
and
push
adc
pop
loop,pn
xor
xchg
iret
out
out
add
sub
add
xchg
loop
push
push
lcall
mov
add
icebp
cwtl
xor
mov
mov
shl
fistpll
mov
push
pop
cmc
pop
push
dec
xchg
aam
cmp
pop
call
fidivrs
ret
out
std
insb
loop
clc
mov
pop
iret
out
popl
sub
gs
sbb
test
insb
outsb
outsb
bound
push
ret
out
mov
ds
cmp
lock
jae
pop
cmpsb
mov
pop
ljmp
jb
jae
inc
mov
out
in
mov
xlat
lcall
outsb
repnz
mov
pop
cld
jp
hlt
add
dec
mov
scas
mov
pop
jnp
mov
repz
mov
insb
insb
xchg
adc
push
push
ss
lods
pop
cmpsb
and
mov
dec
std
sbb
fsin
loope
sahf
and
mov
mov
mov
shl
call
xchg
mov
aaa
mov
les
and
xchg
inc
aaa
aaa
aaa
aaa
sbb
cmpsb
xor
sahf
hlt
aaa
aaa
aaa
aaa
sbb
push
push
jg
movsb
mov
popa
cmp
inc
mov
and
cmp
test
in
jae
stc
cwtl
sbb
mov
std
add
movsb
scas
add
out
or
push
in
push
jae
jnp
pusha
sub
mov
faddl
inc
inc
mov
jnp
std
lods
cli
push
push
outsb
aas
sbb
mov
insl
std
push
out
fiaddl
outsb
outsb
outsb
outsb
lcall
in
sub
outsb
outsb
or
pop
inc
adc
outsb
outsb
outsb
mov
xchg
std
lcall
cmc
or
insb
loopne
add
movsl
hlt
fstps
bswap
lock
xor
in
shlb
lret
call
out
sbb
je
out
ss
or
adc
pop
add
fsubp
neg
lret
outsb
cmpsl
cwtl
lahf
or
push
xchg
pop
icebp
sbb
add
out
fildll
dec
xor
sbb
stos
addr16
push
out
out
push
ja
ljmp
inc
push
and
mov
xchg
xchg
mov
xchg
add
test
mov
mov
movsl
xor
std
mov
dec
sahf
aaa
adc
mov
mov
dec
scas
loop
xor
fstpt
repnz
adc
adc
rol
or
loopne
in
xor
loopne
and
cli
lahf
int
int
jns
movsl
add
pop
sbb
outsb
jge
fadds
pop
dec
inc
in
jb
mov
insb
outsb
sub
imul
lods
daa
in
test
data16
outsb
outsb
pop
cli
stos
jb
testb
sti
dec
jge
outsb
outsb
popf
cmpb
and
or
jae
mov
test
xor
add
jae
jae
xchg
sbb
repnz
jae
fisttpl
mov
mov
jae
jae
cwtl
popf
jb
lods
test
sbb
jae
mov
xchg
mov
push
outsb
outsb
scas
addr16
jp
cmp
iret
test
jge
jp
out
pushf
out
lcall
push
mov
test
fwait
fwait
pop
in
jecxz
mov
test
int
sbb
sbbb
fisttps
lret
push
inc
in
repnz
sbb
icebp
mov
adcb
aas
rorl
xor
and
pop
and
lcall
loope
mov
jle
lahf
sbb
mov
aaa
jno
fwait
fwait
or
das
cmp
popf
xchg
aaa
pop
jge
inc
test
mov
les
cwtl
out
std
adc
les
rol
xlat
xor
arpl
sub
int
and
push
dec
jg
fdivrl
dec
ds
aaa
mov
sahf
leave
mov
js
loope
movsl
aas
insl
xor
idiv
fldenv
mov
push
adc
les
jae
ss
add
mov
lods
jae
jae
push
add
mov
adc
jae
or
push
insl
or
push
jl
xchg
push
cmpsb
enter
mov
jae
adc
das
out
subl
mov
pop
jecxz
icebp
and
shr
or
mov
bnd
xor
xchg
mov
mov
pop
lods
jle
add
lahf
fistl
out
xor
outsb
outsb
outsb
outsb
ror
divl
outsl
lods
add
adc
dec
and
sbbb
jbe
rcrl
stc
xchg
sti
insb
pop
lahf
cmp
adc
int
aas
fwait
jl
and
arpl
lahf
cwtl
adc
cmp
jecxz
mov
mov
mov
dec
mov
jecxz
sub
out
xchg
rcrb
cmp
mov
loop
sbb
cld
insb
outsb
mov
xchg
jnp
sbb
or
push
xor
cli
rcrl
xchg
fcom
mov
sub
movsl
shlb
inc
mov
pop
movsl
xor
dec
pop
ds
cmp
rclb
rol
inc
adc
add
cmp
inc
pop
imul
mov
cmp
ja
push
es
add
mov
das
cs
cmp
xor
imul
pop
lea
es
mov
mov
ds
aaa
push
test
hlt
jbe
insb
outsb
outsb
clc
dec
aaa
sub
stos
repz
insl
fucomi
daa
lock
push
xorb
outsb
outsb
aas
fwait
cmp
jle
aaa
cmp
xchg
int
idivb
bound
mov
clc
dec
push
mov
jl
sti
adc
jae
jge
clc
fsub
jns
lock
add
insb
out
push
sub
jns
lcall
cmp
and
jp
outsb
outsb
outsb
outsb
mov
in
ja
xor
mov
pop
fisubs
mov
add
call
data16
lret
iret
jbe
lahf
imul
sahf
mov
push
lods
add
jle
push
cmp
popa
jle
and
mov
inc
sti
in
mov
das
fcompl
testb
fisttps
lret
fmul
xor
and
pop
mov
xchg
xchg
gs
sbb
imulb
orb
jns
test
mov
jno
mov
sub
jae
shrb
mov
addr16
mov
lret
es
jne
mov
fwait
fwait
popf
xchg
dec
push
dec
loope
sbb
cld
mov
push
or
gs
mov
mov
cld
dec
jp
mov
mov
out
mov
rorb
fildl
pusha
insb
mov
push
lcall
popaw
or
scas
hlt
mov
int
dec
and
popa
rorl
mov
subb
push
push
outsb
mov
into
xor
loope
sub
jns
clc
enter
ljmp
icebp
insb
outsb
fbld
test
xchg
sbb
shlb
aas
fwait
fwait
fwait
sub
or
add
xchg
jg
insb
outsb
outsb
mov
int3
jge
push
fidivs
fdivl
xor
cmp
vmovlpd
fsubrs
jecxz
mov
in
jae
adc
pop
mov
dec
push
adc
fwait
fwait
fwait
fwait
mov
mov
stos
ljmp
or
outsb
cltd
sub
fcompl
xchg
inc
cmp
out
jl
dec
sahf
in
nopl
aaa
loope
adcb
xchg
mov
dec
out
jge
cmp
xchg
lret
es
dec
imul
add
fwait
dec
aaa
aaa
jge
jbe
and
imul
aaa
aaa
icebp
mov
inc
pushl
icebp
repz
outsb
out
cli
and
push
sub
jmp
pop
cmc
push
in
mov
call
out
mov
stos
dec
fisubs
cmp
xchg
or
insb
push
push
xchg
pop
cmp
test
stc
into
shl
mov
in
fnsave
inc
mov
mov
lret
inc
mov
loop
cld
ret
pop
jecxz
ret
gs
cld
testb
scas
iret
idivb
adc
movsl
pop
pop
jge
pop
aam
xlat
cltd
aas
or
std
loope
cmpb
sub
cmpsb
mov
nop
lcall
fisttpll
push
or
jne
push
sbb
aaa
aaa
aaa
dec
dec
xchg
outsb
xchg
dec
xlat
mov
cmp
fdivrs
aaa
in
xchg
clc
pop
inc
lods
xor
fisttpl
repz
mov
and
or
fidivs
cmp
jecxz
xor
loopne
dec
sarl
mov
xchg
scas
mov
push
mov
test
push
clc
and
pop
mov
sahf
popa
sub
xchg
stos
sarb
cmp
dec
imul
clc
out
push
in
lods
iret
negb
mov
and
int3
mov
js
mov
dec
in
or
inc
jmp
ss
mov
mov
in
jae
sti
pop
std
mov
shlb
lods
test
das
inc
lahf
in
testb
mov
or
movsb
jecxz
and
xchg
jl
jl
aas
or
mov
idivb
pop
js
push
insl
fstpt
out
jle
addr16
loop
or
incl
sbb
cli
dec
or
mov
outsb
ds
out
cmp
dec
imul
pop
and
stos
adc
push
mov
mov
mov
sub
insl
jmp
inc
sub
out
mov
pop
cld
cmp
lret
movl
fdivr
decb
adc
rol
mov
mov
sti
jmp
cmpb
rcr
add
mov
js
iret
xor
mov
cmc
leave
fwait
fwait
fwait
fwait
xchg
out
addr16
f2xm1
jb
outsb
outsb
outsb
lahf
cmp
adc
sub
pop
or
insb
or
mov
and
jecxz
inc
mov
mov
and
and
mov
mov
sbb
sbb
sbb
fdiv
mov
sub
clc
enter
mov
xchg
xor
in
psubsw
in
insb
pop
imul
insb
mov
or
orb
jp
cmp
sbb
mov
fcmovne
rorb
scas
inc
push
movb
inc
cmp
mov
xor
jbe
adc
outsl
cli
je
imul
push
xor
and
clc
mov
bound
mov
outsb
outsb
outsb
lock
add
sub
adc
imul
lahf
stos
or
jns
mov
int
int
out
lock
decb
fdivs
pop
mov
movl
test
leave
push
mov
jge
jmp
fdivrl
add
fsubr
jge
fidivl
jae
xor
fadds
cmpsl
and
add
jae
mov
adc
pop
xchg
and
mov
subb
popf
jle
add
rorb
cmp
aaa
aaa
aaa
xchg
push
mov
test
enter
and
dec
jl
lds
cmp
or
pusha
sar
inc
int
hlt
jb
cld
insb
outsb
add
cmp
mov
fildl
fdivrl
lods
dec
int3
aam
mov
add
fiaddl
sahf
push
or
xor
mov
test
je
or
xorl
mov
sbb
insb
pop
jae
imul
mov
sub
mov
add
nop
icebp
fisubrl
mov
xchg
jle
in
ds
sti
mov
std
sbb
subl
sub
mov
int
mov
add
sub
sbb
popa
sbb
aaa
aaa
aaa
xchg
aam
in
in
push
and
ds
clc
mov
insb
test
jae
sbb
jo
cwtl
ja
mov
jae
xor
andb
test
iret
in
and
rcr
scas
sbb
fcoml
xor
dec
jg
add
shl
stc
std
mov
lcall
mov
mov
or
pop
int
xchg
jo
in
ljmp
mov
mov
int
stos
xor
cmp
adc
movsl
sub
pushf
stos
jle
aaa
fwait
jp
sbb
sub
pushf
mov
add
fwait
fwait
loop
dec
mov
jl
mov
jp
xchg
push
jbe
test
arpl
loop
mov
jle
in
call
mov
pop
in
rcrb
cmp
push
fwait
fwait
or
rclb
movsb
sbb
fmull
cltd
imul
jbe
popa
cwtl
out
push
int
in
mov
movsl
popf
leave
or
add
mov
iret
les
push
test
lahf
int
into
addr16
mov
cli
mov
sbb
mov
xorl
aaa
aas
cmp
sbb
or
fcoml
aaa
push
adc
xchg
lds
dec
cld
push
jne
hlt
xchg
pop
push
cmp
sbb
inc
jbe
mov
das
fadd
mov
fisttpl
clc
inc
hlt
cld
out
adcb
mov
int
jno
std
lds
outsl
out
mov
adc
fstl
movsl
pushf
fcmovne
inc
pop
movsl
and
mov
js
int
xlat
out
jnp
mov
sbb
jbe
pop
out
cmp
ja
dec
ret
or
cmpsl
cmp
fcomp
jle
xor
mov
es
rclb
sti
imul
loopne
mov
xlat
aam
addr16
adc
mov
xor
pop
push
js
loope
jle
ljmp
jbe
push
gs
cmp
mov
rcrl
hlt
mov
imul
xchg
ret
xor
mov
scas
cmp
push
push
aam
cmp
outsb
outsb
outsb
jecxz
divb
mov
movsl
dec
mov
or
jp
push
addr16
pop
in
dec
cmp
es
out
scas
mov
cmp
clc
push
les
dec
cmp
fdiv
mov
mov
cmp
mov
mov
add
loope
mov
xor
or
ds
cld
insb
rclb
cmpsl
xchg
cltd
testb
outsb
cmp
xchg
adc
cmp
fs
int
loope
fdivs
fnstcw
int
xor
shlb
mov
int
int
cmpsb
scas
std
ficompl
sub
xor
xchg
jg
fdivrl
pop
jb
mov
aad
jg
es
repz
into
dec
push
mov
addr16
xchg
cmp
in
inc
call
sub
xor
ss
fcoms
and
cmpsb
mov
jae
inc
addr16
mov
mov
inc
ret
mov
loopne
sbb
loopne
test
movsl
adcb
mov
in
or
sbb
int
pushf
pushf
mov
in
cwtl
fildl
dec
call
xchg
dec
out
fwait
fwait
fwait
fwait
lea
mov
or
das
jl
scas
dec
fdivs
out
and
cli
fdivrl
shr
push
popa
mov
mov
add
pusha
std
push
cmc
mov
js
aad
mov
and
adcb
jne
into
negl
aad
sbb
xor
jnp
pop
lods
das
inc
mov
aaa
aaa
mov
clc
leave
aam
and
jo
call
or
jmp
dec
cld
je
xchg
push
je
sbb
mov
pop
push
or
jae
xor
aad
enter
xor
jae
rorb
sti
xchg
jle
xor
cmp
sbb
xor
dec
les
mov
hlt
stos
cwtl
and
mov
xchg
sub
push
mov
push
shll
mov
sahf
sbb
arpl
cmc
sbb
adcb
roll
lods
sub
add
jae
pushf
mov
mov
sbb
dec
out
idivb
pushf
in
int
enter
out
out
xor
test
xchg
sti
push
jge
out
cmp
enter
mov
test
mov
cmp
cmp
pushf
ds
pop
sub
push
outsb
jo
test
mov
incl
sub
inc
and
add
addr16
fnstcw
mov
mov
out
inc
and
sub
out
and
es
cld
sub
mov
jecxz
pop
pop
movsl
lods
pop
rolb
sub
jle
out
cmp
js
int
int
xchg
xchg
orb
sarb
sbb
loope
sub
aaa
and
push
jno
je
pop
push
adc
das
ds
fdiv
mov
adcb
divb
mov
mov
cwtl
jle
test
dec
negb
inc
mov
mov
push
out
out
xchg
lcall
loop
rorb
out
out
cmpsb
pop
jns
repz
add
out
cmp
sarl
test
mov
nop
outsb
adc
lret
jae
js
pop
mov
ds
sbb
aaa
aaa
mov
jbe
arpl
xor
jns
pop
movsb
mov
aaa
aaa
xchg
aam
ja
cltd
sub
ret
fldcw
ljmp
scas
jae
xchg
jmp
fcomp
jp
jae
jae
js
aad
push
out
cs
jae
jae
data16
dec
jno
int3
aas
add
int3
int
int
icebp
and
inc
inc
lret
cmp
sub
xchg
in
and
mov
and
jl
ds
mov
aaa
aaa
aaa
mov
ret
fcompl
stos
shr
mov
int3
push
fistps
lahf
cmp
stos
mov
arpl
jp
shlb
out
outsb
scas
js
int3
mov
mov
outsb
outsb
fistl
je
xchg
or
jo
into
adc
sub
fucomi
add
fs
iret
repnz
fwait
fwait
cld
xor
xchg
sahf
sti
cmp
sbb
pop
mov
fwait
and
sti
js
xchg
add
sti
sahf
fwait
clc
push
and
out
pushf
in
lcall
mov
jne
jmp
test
add
mov
scas
push
lretw
mov
lods
sbbl
and
mov
es
clc
xlat
and
and
shlb
jmp
imul
xor
inc
sbbl
fldt
ljmp
xchg
into
imul
lahf
fwait
jp
sbb
cmpsb
dec
bnd
sbb
aaa
aas
ds
nop
dec
xchg
jb
lcall
add
movsl
orb
cld
fldl
push
data16
and
and
mov
sbb
outsb
outsb
mov
push
fsts
loopne
mov
mov
adc
xchg
popa
aas
push
int
mov
inc
mov
xchg
scas
push
int
int
inc
sbb
lds
cmp
aaa
mov
aad
aad
xor
addr16
nop
sbb
aaa
jle
sahf
cltd
jne
jo
les
sarb
mov
xor
cmc
pop
sub
cmp
cmp
loop
cmpsb
mov
cwtl
inc
clc
mov
int3
pusha
in
das
sub
jge
adc
shlb
mov
sahf
dec
notb
mov
cmpsb
pop
aas
adc
adc
icebp
mov
flds
sahf
sbb
ss
cmp
sbb
cmp
pop
sbb
int
in
dec
lcall
cmp
cmp
xchg
insl
addl
dec
in
dec
bound
fdivrl
mov
inc
xor
lods
int
mov
repz
jb
mov
aaa
mov
int
mov
in
in
adc
aaa
aaa
adc
push
and
cwtl
and
adc
pop
iret
xor
sbb
enter
clc
adc
and
jnp
imul
jbe
out
or
dec
cmp
push
push
dec
arpl
xchg
mov
sub
adc
out
dec
cld
xor
fwait
jp
mov
int
das
mov
mov
dec
scas
mov
lret
int
sbb
inc
sbb
mov
loope
outsb
outsb
outsb
outsb
js
gs
add
xor
jl
cli
xchg
fildl
mov
loopne
clc
push
fnstenv
xlat
andb
push
out
mov
stos
cwtl
rcr
xor
xor
movsl
lock
pop
jne
inc
fisubl
pop
jecxz
jae
das
dec
xor
jmp
divb
rcrb
in
sahf
out
jae
iret
out
inc
cwtl
inc
test
mov
test
mov
jae
cmp
sub
or
jge
xor
jbe
cmp
lcall
and
test
inc
sub
adc
hlt
xchg
sahf
ret
push
lahf
mov
mov
mov
pop
sub
outsb
dec
mov
add
test
cmc
sub
dec
fs
mov
cwtl
jge
fidivs
gs
stos
ja
jle
adc
push
insb
push
mov
adc
jae
call
lret
std
pop
outsl
imul
jae
stc
fiadds
ja
mov
in
xchg
mov
test
jo
jo
fcmovnbe
in
rcll
psraw
inc
lahf
adc
lods
into
ljmp
jae
jae
add
data16
pop
push
mov
addr16
or
stc
xchg
xor
adc
iret
mov
lds
outsb
jg
sbb
mov
in
xor
or
push
sub
outsl
dec
jl
ja
mov
out
lock
rcl
cmp
jae
iret
or
mov
outsb
xor
mov
les
xor
fwait
clc
sub
jae
ds
call
jge
inc
inc
ljmp
fistpl
inc
mov
scas
mov
mov
fwait
testb
push
mov
cli
dec
cli
lds
ficoml
cmc
mov
mov
les
loope
or
mov
out
push
adc
sub
xchg
aas
test
lahf
mov
mov
push
fstps
lahf
sub
nop
dec
shlb
jae
dec
imul
jne
idivb
push
repz
loope
lcall
lahf
iret
and
add
jae
call
mov
push
fcompl
mov
mov
jmp
hlt
mov
into
js
jge
ds
shll
or
imul
pop
adc
mov
call
outsb
mov
xchg
jl
ret
and
sbb
mov
sti
sbb
jb
idivl
dec
int3
cmp
call
pop
fnsave
daa
mov
adc
aaa
xchg
loop
mov
xor
xor
lds
cmp
inc
clc
pop
loope
imul
adc
inc
dec
pop
mov
rorb
pop
icebp
jge
cmpl
shl
gs
xor
leave
sub
icebp
adc
add
cs
out
cld
cmp
popa
push
dec
inc
es
ja
pushf
mov
jnp
jge
filds
aaa
xor
test
sarb
aaa
aaa
add
ret
jae
orb
popa
movsl
js
mov
loope
movsb
and
outsb
lahf
fucomi
test
ss
nop
scas
mov
xor
push
insb
outsb
outsb
outsb
arpl
bound
mov
out
notb
mov
ret
out
out
std
test
leave
pop
nop
inc
push
mov
mov
ret
push
iret
out
mov
mov
sbb
aaa
mov
xor
xchg
aaa
mov
sbb
ss
aaa
out
mov
push
mov
mov
addr16
adc
push
adc
sub
sbb
ss
adc
jne
add
inc
pop
imul
mov
inc
popa
test
add
iret
adc
imul
adc
fsubr
cmc
divb
sbb
cltd
pop
test
out
shr
adc
hlt
fisttpll
cld
dec
inc
fisttpl
sbb
out
push
xchg
pop
cmp
pop
mov
sbb
out
jge
push
or
mov
fidivl
mov
test
mov
adc
lret
insb
cmc
inc
insb
mov
and
inc
lret
ret
mul
es
aaa
pop
pop
dec
inc
arpl
and
add
aaa
pop
int
pop
lea
dec
pop
cs
aaa
jno
ret
inc
ds
pop
aaa
mov
cli
minps
inc
dec
inc
mov
push
sub
mov
andl
jo
nop
sbb
les
test
xchg
or
fucomip
adc
loopne
mov
push
push
out
sub
or
iret
cld
adc
adcb
iret
dec
mov
iret
xor
sbb
pop
bound
fsubl
incb
mov
in
sub
mov
push
xor
popf
mov
int
icebp
mov
mov
sub
clc
out
insl
jb
pop
jl
inc
test
xor
push
call
xchg
add
bnd
jae
sti
dec
dec
mov
push
in
push
movsb
adcb
addr16
sarb
mov
push
cli
rclb
in
out
xchg
cmp
adc
jae
jae
xchg
pop
inc
dec
xchg
test
mov
mov
addr16
pop
loopne
inc
addr16
or
mov
insb
push
mov
loope
or
xor
fwait
fwait
mov
push
stos
clc
pop
div
xchg
popa
lods
fimull
fwait
fwait
fwait
jno
and
or
cwtl
add
pop
notb
ss
loop
mov
lahf
push
sbb
fwait
fwait
or
mov
data16
icebp
bnd
lds
fwait
fwait
fwait
fwait
jl,pn
ss
jecxz
addl
jge
lahf
fwait
into
pop
js
sbb
out
divb
and
adc
and
mov
pop
insl
cmp
jo
adc
clc
mov
jns
and
pop
xor
jns
shlb
cmp
fsubrl
cmp
mov
cmp
clc
fcompl
push
jns
data16
push
int
adc
insb
orl
int
xchg
xchg
andl
jae
sti
or
mov
sbb
push
xor
ljmp
pusha
mov
or
inc
jecxz
addr16
adc
aaa
aaa
mov
dec
ds
sub
cmpsb
push
sub
jle
aaa
mov
subl
aam
sub
popf
fwait
loopne
mov
fcompl
dec
mov
adc
mov
inc
ljmp
icebp
cmpsb
fidivrl
sbb
sti
sbb
add
mov
xor
jbe
sub
ja
sahf
adc
dec
idivl
jae
push
add
fcmovnu
jecxz
xor
cmp
sub
es
xchg
stos
pop
ljmp
dec
adc
ljmp
int
xor
cmpsb
push
js
lret
rol
pop
and
mov
int
mov
inc
adc
xchg
or
ss
aaa
out
ss
out
leave
dec
mov
jae
add
cs
clc
xor
fcmovu
idivb
fsubrp
mov
out
xchg
dec
scas
pop
or
out
insb
xchg
cwtl
lods
incb
lea
iret
int
in
mov
loop
stc
fs
jno
add
leave
add
sub
std
add
dec
adc
mov
test
push
sub
out
cmpb
push
outsb
dec
pop
inc
xor
fcmovne
jno
jecxz
data16
pop
cmp
and
add
fwait
jae
ds
nop
cmpsl
sti
mov
std
outsb
outsb
outsb
outsb
add
fwait
dec
ret
dec
icebp
or
or
jge
bound
jns
pop
hlt
xor
pushf
imull
push
scas
out
out
clc
dec
je
mov
mov
insb
out
out
loope
loop
push
outsb
hlt
ret
inc
fcmovnu
mov
int
int
outsb
adc
xchg
addr16
lods
je
loopne
int
int
inc
in
pop
mov
in
or
orb
mov
sub
negb
jae
xlat
out
add
ds
mov
test
mov
addr16
je
and
out
and
loopne
cld
sahf
stc
mov
xor
jge
pop
jbe
pop
xor
pop
adc
out
shlb
aaa
aaa
aaa
fldcw
and
mov
nop
mov
icebp
hlt
push
addr16
adc
sbb
insl
clc
sub
cli
jo
insl
cs
sub
pop
cmpsl
mov
inc
std
xor
mov
cmpsb
inc
out
add
fsts
push
lret
clc
bound
test
lret
movsb
in
pop
adcb
inc
bound
jne
lock
pop
or
stos
cmp
lret
in
add
jle
call
fimuls
aaa
jno
mov
rclb
add
inc
rcr
call
xchg
push
xchg
mov
or
push
addr16
mov
shll
pop
in
and
mov
loopne
fidivs
lock
clc
adc
repnz
mov
sbb
xchg
jae
sti
mov
mov
in
inc
inc
cs
out
jge
aaa
mov
jecxz
je
dec
or
out
divl
cld
pop
and
ss
das
cmp
cmp
fcmovnb
cmp
mov
xor
shlb
std
insb
aas
fwait
lcall
mov
sti
inc
jge
add
fcmovne
mov
mov
movsl
clc
repnz
idivl
repz
movb
rorb
or
mov
scas
movntps
mov
push
pop
int3
mov
cmpsb
cmp
bound
and
pop
ror
out
xchg
aam
imul
jne
mov
jle
dec
cld
test
scas
orl
sti
fdivl
inc
cltd
xchg
mov
xchg
out
lahf
xchg
lahf
sub
jle
push
xor
testl
lods
lds
shr
js
vcvttpd2dq
out
outsl
mov
xchg
test
iret
out
mov
mov
in
adc
mov
pop
and
jmp
mov
cltd
fmulp
mov
or
fadd
and
fmul
lods
xor
sahf
mov
xchg
roll
jl
pushf
outsb
jbe
or
outsb
out
xchg
ljmp
cmp
and
insb
mov
mov
fwait
cmp
int3
aaa
test
int
ds
fwait
fwait
rcrl
lret
push
sub
les
fwait
cmp
jmp
jo
cmpsb
jg
gs
loope
push
test
sti
ljmp
in
fstpt
sahf
jae
dec
cmp
jge
push
adc
jecxz
jae
pop
mov
and
int3
lock
sbb
ss
fcompl
push
les
ret
mov
pop
cli
je
rcll
xchg
mov
sub
out
mov
adc
sbb
and
push
cmpsb
push
les
les
cmp
jl
std
aaa
aaa
aaa
mov
clc
les
xor
js
or
xor
aaa
aaa
aaa
sub
xchg
insb
push
pop
xchg
in
mov
stos
mov
add
pop
xor
sbb
xchg
jb
mov
in
xchg
pop
jno
add
sbb
mov
or
cmp
gs
outsb
es
repnz
dec
dec
pop
loop
cmpsb
fcmovu
add
aaa
fldl
sub
xchg
popa
adc
out
mov
sahf
in
neg
or
xchg
inc
lods
jb
in
dec
jp
iret
jle
and
mov
nop
lret
add
fmull
cli
sub
push
and
xchg
and
xchg
fbld
cltd
out
in
push
imul
fcoms
out
jg
add
sub
outsb
pop
pop
iret
mov
popf
scas
jbe
mov
pop
jp
outsb
pop
inc
arpl
mov
outsb
outsb
mov
sbb
sbb
incb
inc
cwtl
rcr
sbb
mov
outsb
outsb
cs
xor
test
repnz
adc
cmp
out
inc
jmp
pop
adc
sub
pop
or
ror
push
inc
jmp
or
insb
cmp
pop
in
rcrb
xlat
mov
f2xm1
mov
inc
mov
inc
stc
jne
iret
in
xor
ljmp
fdiv
cmp
mov
cmpsb
lea
xchg
push
sbb
cmpsl
in
loop
cwtl
cli
dec
or
adcb
mov
in
aas
xor
addr16
mov
lahf
shlb
insb
inc
arpl
fwait
push
sbb
js
push
lea
hlt
jnp
outsb
in
test
xchg
push
add
pop
shlb
xchg
pop
pop
inc
movsl
mov
loope
push
pop
mov
ljmp
xlat
jae
insb
mov
lret
stos
push
fwait
or
lods
jbe
iret
aam
pop
daa
xchg
jbe
ds
fwait
or
and
inc
imul
notb
ljmp
pop
push
lret
jae
jae
cli
stos
inc
jp
add
lock
push
shrl
loopne
jae
fnstsw
push
sbbl
out
sbb
xchg
je
aam
push
sarb
out
out
testb
cs
mov
xor
in
mov
fsubl
jmp
jb
jae
jge
sub
pop
xchg
popf
fwait
fwait
mov
cld
in
popf
cmp
jecxz
jle
pushf
insb
jb
mov
and
mov
test
push
mov
xchg
sbb
cmc
icebp
mov
shlb
loope
pop
and
sub
xchg
test
dec
in
mov
mov
mov
cmp
push
sub
mov
jecxz
xchg
cmp
repz
mov
fsubr
pop
cmc
cld
add
test
icebp
or
aam
loop
out
repz
pop
or
adc
sarl
fwait
fwait
fwait
adc
imul
and
xor
and
outsb
insb
js
arpl
out
out
and
jmp
aas
fwait
outsb
outsb
outsb
mov
pop
inc
repnz
mov
outsb
out
mov
cmpsl
rcrl
fdivr
add
icebp
and
ss
loopne
das
int
inc
xchg
fsubr
scas
mov
fwait
mov
dec
cmp
push
or
lahf
fwait
xor
push
mov
fwait
popf
inc
add
cmp
icebp
ljmp
js
push
dec
mov
sar
mov
or
lcall
repz
repnz
lret
adc
push
jae
mov
int
add
xchg
cmp
sti
jge
sahf
clc
dec
xor
or
sbb
mov
je
add
test
push
mov
mov
inc
iret
into
mov
cs
out
jmp
insb
es
push
movsl
mov
fsubs
data16
jae
loop
decb
sub
jae
jae
push
dec
pop
dec
movsb
insb
aam
jb
fisttpll
cmp
inc
push
mov
ucomiss
cmp
add
lret
xchg
jecxz
sbb
rep
enter
icebp
daa
in
xor
out
jnp
xchg
push
dec
les
subl
out
or
jge
js
std
gs
mov
lock
cli
jmp
mov
mov
in
stos
nop
pusha
jp
xchg
in
sar
mov
jae
roll
mov
inc
std
psubusw
add
jnp
xor
mov
adc
add
movsl
ljmp
sub
add
clc
fdivr
ds
aaa
cmpsl
loop
pop
add
fimull
roll
jae
xchg
arpl
lock
cmpsl
in
sbb
jae
jae
dec
cmp
decb
mov
add
mov
inc
ja
loopne
pop
out
outsl
in
pop
jo
mov
xchg
adc
dec
push
pop
stos
daa
sbb
fs
sub
mov
jmp
mov
ret
pusha
jbe
outsb
outsb
cs
xchg
loop
bound
sub
mov
cmpsl
mov
je
cld
insb
sub
lret
add
fstps
and
cmpsb
cmpsb
hlt
out
push
insb
in
pop
ds
and
push
hlt
out
out
jle
mov
push
dec
xchg
sbb
out
out
add
out
adc
out
lds
and
or
cs
or
mov
inc
mov
jbe
decl
mov
jo
push
movsl
imul
in
loopne
nop
fildl
mov
jg
adc
jge
aas
fwait
or
mov
mov
xor
xchg
iret
divb
or
or
and
iret
int
rolb
jne
add
icebp
adc
std
lcall
cli
movsb
mov
adc
mov
imul
sbb
dec
sti
popa
push
cmc
insb
mov
je
adc
cmpsb
enter
stc
mov
test
iret
out
lea
or
mov
ds
mov
xor
rcrl
cmp
popf
fwait
fwait
fwait
fwait
jg
and
dec
sbb
add
sahf
add
rcr
xor
movsb
jo
inc
or
sti
lret
push
jno
clc
or
jg
roll
jge
jbe
push
test
pop
inc
addr16
push
stc
loop
rcl
hlt
fimull
pop
int
xlat
jecxz
pop
mov
mov
ss
dec
xchg
pop
gs
sbb
cmpb
sub
mov
mov
add
sub
shl
mov
std
repnz
and
cwtl
idivb
xor
jno
adc
xchg
mov
ret
int
stos
ds
daa
dec
xchg
in
hlt
mov
call
sub
mov
add
mov
mov
dec
jbe
fldt
jge
mov
insb
addr16
xor
fwait
fwait
fwait
pop
cmp
mov
incl
outsb
dec
and
data16
scas
into
arpl
or
cli
stos
icebp
fmul
in
xor
fldenv
je
inc
pop
cmc
pop
into
pusha
loopne
clc
mov
int
inc
ljmp
mov
popf
in
int
int
mov
aad
cmpsb
cmp
and
insl
and
push
mov
lret
adc
out
mov
mov
loopne
ds
clc
jo
xorb
iret
add
imul
mov
pop
xchg
dec
psubsb
add
outsb
outsb
aas
fwait
mov
aad
push
or
in
jl
xchg
mov
cmp
cmc
mov
scas
es
add
std
test
mov
inc
insl
test
outsb
aas
fistpl
shll
sbb
lret
cltd
loopne
adc
xchg
cmc
mov
sbb
pop
or
add
adc
mov
or
mov
stc
icebp
cltd
rclb
lds
mov
or
faddl
jb
sub
shll
insb
cltd
int3
mov
or
xchg
jmp
inc
sbb
into
adc
cmp
aam
in
mov
pop
push
out
out
sbb
test
add
sbb
lock
loope
dec
xchg
push
pop
jne
cmp
fdiv
adc
push
ret
jo
mov
mov
jns
mov
nop
sbb
outsb
pop
jmp
xor
and
xchg
pop
outsb
outsb
outsb
outsb
sahf
notb
outsl
out
mov
lods
subb
es
jecxz
push
and
sub
or
xchg
test
mov
mov
or
ror
sahf
push
lods
in
ret
or
dec
loopne
xchg
data16
repnz
movsb
cmp
movsb
adc
adc
sbb
nop
out
insl
cld
mov
ror
pusha
adc
fcmovne
mov
test
pop
insl
shlb
mov
mov
sbb
cmp
mov
push
loop
lret
iret
in
inc
xor
or
adc
rcrl
out
out
cmc
push
test
mov
mov
movsl
jecxz
xlat
dec
pop
or
xchg
mov
pop
add
shrl
inc
add
add
in
std
insb
outsb
andb
cmp
mov
push
jnp
mov
lock
fucom
out
mov
movsb
pop
add
xchg
aam
pushf
addr16
out
sub
sarl
les
ficompl
xchg
jne
fwait
fwait
mov
jae
push
mov
cmp
ds
or
dec
iret
xchg
mov
xlat
outsl
insb
pop
sbb
sarl
inc
fwait
aaa
int
gs
lret
fwait
bound
dec
stos
or
jge
sub
xchg
fdivrl
movsb
popl
data16
dec
inc
shrb
add
cmp
cmp
and
xchg
dec
gs
daa
loope
mov
nop
divb
cwtl
outsb
mov
lods
movsl
in
test
fcmovne
out
stos
jbe
popf
lret
adc
mov
aas
fwait
pop
push
sub
insb
call
mov
and
add
cli
fnstcw
mov
cmpsb
inc
mov
mov
in
inc
cmp
xchg
push
adc
je
pop
neg
jle
out
add
add
sti
insb
push
sarl
xchg
push
lcall
jo
cmp
popa
and
and
jnp
pop
outsb
or
daa
aam
mov
jo
dec
out
repnz
lret
mov
mov
fwait
mov
outsb
jae
out
xor
fisubl
leave
popa
mov
jp
cld
nopl
int
jae
mov
adc
inc
fnstsw
push
vunpckhpd
mov
adc
mov
aas
dec
push
inc
insb
add
xchg
outsl
xchg
mov
fldt
outsl
pop
push
push
mov
sahf
lock
inc
dec
daa
xchg
sti
fcompl
insl
ja
fsincos
sbb
sbb
scas
lahf
in
out
xchg
or
cmp
xor
pop
add
out
sbb
in
int3
jl
scas
sub
push
lahf
popa
jge
adc
pop
and
negb
aas
fwait
fwait
jbe
inc
imulb
xchg
mov
outsb
outsb
sub
addr16
repnz
mov
mov
shll
lock
sti
mov
popa
ficomps
adc
xchg
jle
rcr
add
mov
loope
sbb
ss
xor
out
out
mov
sti
xchg
stc
mov
rcrb
out
stos
jno
or
fcmovnbe
xor
iret
jecxz
enter
jae
testl
push
adc
or
pop
push
fwait
or
repnz
and
lods
mov
fwait
fwait
cmp
into
addb
xorl
jl
pop
pop
sbb
xor
scas
sahf
push
mov
js
aaa
aaa
push
add
stos
shlb
ret
pop
adc
nop
jl
mov
jae
jae
stc
jmp
cwtl
lods
pop
aam
jae
inc
lds
imul
jle
inc
cwtl
mov
xor
dec
mov
mov
ds
scas
subl
addr16
pusha
pusha
in
ds
insb
aas
fstpt
xor
dec
push
sbb
mov
adc
mul
data16
inc
in
xchg
push
enter
pushf
lahf
int
or
lret
ret
incb
testb
fsubl
ret
dec
fdivrs
daa
in
dec
jmp
sub
mov
int
out
shlb
aad
imul
clc
loopne
fwait
fwait
fwait
or
pop
outsl
imul
fwait
jae
xor
lahf
fwait
icebp
movsb
sarb
inc
mov
aas
inc
fistpll
push
xor
jge
mov
mov
divl
inc
in
lods
push
sbb
pop
cmp
or
insl
push
jo
mov
pop
mov
xchg
pop
mov
leave
cli
insb
push
adc
cmc
pop
fnstcw
xor
lcall
jns
xor
fimuls
stc
adc
sbb
lahf
pop
mov
mov
in
ss
ret
and
popf
scas
movb
js
insb
loope
aam
lea
jo
outsb
outsb
dec
fcom
mov
pop
mov
hlt
mov
in
cmp
dec
mov
fcompl
inc
dec
sbb
push
push
test
inc
cld
insb
outsb
fadds
and
fldt
mov
jbe
fisubrl
mov
aad
adc
pop
mov
xor
cmpsb
mov
mov
scas
xchg
outsb
outsb
lahf
fwait
dec
loop
push
dec
ds
inc
lret
pop
jo
outsb
outsb
push
shlb
cmc
dec
add
clc
and
lcall
jle
dec
test
movb
outsb
outsb
clc
icebp
jne
mov
xchg
mov
outsb
jecxz
pop
mov
test
out
out
fs
lods
fstl
xor
push
sahf
xchg
ret
inc
outsl
stc
mov
push
pop
jp
push
cli
fdivl
inc
adc
movsl
mov
ret
xlat
subl
jp
outsb
outsb
pop
nop
orl
sbb
scas
jns
outsb
outsb
outsb
jo
pushf
mov
lock
xchg
cli
jo
outsb
outsb
js
rorb
push
xchg
aaa
add
cmpsb
dec
movb
sti
lcall
daa
sarl
mov
jge
xor
add
add
adc
sub
out
scas
and
mov
cmp
subl
jecxz
ds
sahf
loop
dec
pop
int3
ss
cmc
lods
clc
cli
iret
loope
adc
mov
clc
mov
bound
je
jne
inc
mov
je
jno
idiv
push
pop
leave
in
xor
out
rorl
sub
out
pop
frstor
push
clc
cltd
fstps
sti
jno
out
out
sbb
scas
cmp
mov
mov
jmp
jo
mov
xchg
test
notb
or
xor
divb
repz
sti
hlt
cwtl
mov
nop
sahf
fistl
pop
jbe
pop
pop
call
mov
lcall
in
jle
add
std
push
jp
ds
xchg
mov
mov
inc
and
add
icebp
out
inc
adc
rolb
iret
cmp
mov
lods
and
sti
xor
xchg
aam
mov
mov
repnz
stos
lahf
pop
pop
xor
rcrl
cli
xchg
cmp
sub
mov
mov
jle
int3
add
repnz
mov
jg
xchg
shl
push
cwtl
aaa
clc
add
xchg
into
pop
fists
test
bswap
push
mov
inc
lcall
enter
gs
outsb
outsb
out
cli
adcl
inc
shlb
push
cld
insb
lahf
in
adc
cli
insl
add
jno
or
dec
clc
cmp
sub
pop
lret
push
mov
movsl
dec
outsb
outsb
outsb
scas
enter
test
add
and
testb
int3
into
daa
xor
iret
push
adc
std
inc
cs
inc
aad
outsl
inc
outsb
sub
addr16
out
cmp
outsb
outsb
or
scas
jecxz
lds
cmp
test
adc
cmp
push
xor
cmc
xchg
cmc
out
sbbl
inc
sub
mov
movsb
sub
mov
ftst
pop
iret
mov
pminsw
pop
sub
mov
fistps
fisubrl
imull
js
aaa
jge
adc
xchg
xchg
cmpsb
xor
pop
in
into
sti
cmp
ds
cmpsl
xchg
cmpsl
or
aas
adc
inc
push
jecxz
push
xchg
fildl
sub
mov
or
je
inc
xchg
in
in
stc
divb
dec
popl
jle
xor
inc
jnp
aad
pop
lcall
or
insb
lahf
xor
sahf
rolb
test
shl
out
divb
out
jbe
stc
and
fwait
fsetpm(287
out
adc
or
fildl
fnstcw
packsswb
jecxz
push
rol
outsb
clc
ss
mov
add
shrb
xchg
mov
jle
add
addl
std
lock
pop
xchg
cmp
ja
ret
out
shlb
pop
lahf
lods
loopne
cli
movsb
mov
adcb
inc
loope
into
push
fcmovnu
pop
lock
pop
cmpb
cmp
xchg
lock
repz
arpl
cwtl
push
sbb
aaa
aaa
aaa
fucomip
in
sbb
jno
jbe
jle
cli
fdivrl
mov
fidivl
sub
dec
push
or
mov
push
sub
mov
push
dec
lds
fcmovnu
sub
rcrb
xchg
push
ljmp
lahf
jp
mov
loop
cli
les
inc
jl
fnstcw
jge
jl
movsb
xchg
mov
imul
cld
lock
push
ret
out
pop
mov
inc
push
arpl
or
push
fstpl
mov
paddusb
outsl
pusha
jl
lods
arpl
add
ljmp
inc
mov
fwait
mov
sbb
in
neg
fdivrl
adc
out
nop
mov
mov
sahf
mov
lods
jg
mov
cmp
mov
das
addl
mov
fwait
pop
subl
sub
pop
sbb
shl
sub
push
cs
int
push
mov
or
xchg
mov
pop
pop
xor
pop
cmp
cwtl
stc
mov
mov
xchg
mov
dec
mov
sahf
int
repnz
ror
in
neg
dec
mov
xor
jnp
fcompl
sbb
xorb
xor
hlt
sbb
negb
stos
adc
aaa
mov
mov
xchg
repz
sbb
adc
fsubrs
popa
sbb
jl
push
xchg
and
jl
push
lahf
mov
lcall
mov
push
repz
clc
jns
shlb
sub
addr16
mov
pop
test
push
das
andb
sbb
repnz
mov
mov
or
insl
es
rclb
push
mov
loopne
fstp
and
add
dec
adc
scas
mov
dec
scas
push
fwait
fwait
pop
in
outsl
sbb
cmpsb
pop
mov
pusha
insb
outsb
outsb
aas
fnstcw
jbe
sub
pop
xchg
hlt
cld
dec
pop
push
in
inc
jecxz
enter
adc
and
iret
int
sub
or
lcall
out
sub
and
push
dec
vmovntps
or
cld
and
add
sub
and
jle
rolb
push
js
int3
add
sbb
sub
lea
xchg
int
mov
cmpsl
mov
addr16
mov
out
dec
sbb
mov
xchg
cmp
cmc
xchg
testb
test
inc
aas
fwait
test
mov
fcoml
int
negb
repnz
mov
mov
add
mov
add
jecxz
xor
xor
xor
jl
ss
mov
ror
inc
lea
or
jg
int
aas
inc
jno
test
clc
cmp
lahf
int
xor
xchg
outsb
outsb
out
clc
mov
out
movsb
jl
loopne
mov
outsb
outsb
outsb
fs
icebp
dec
je
fsubrs
sub
lahf
icebp
insb
in
dec
xor
clc
add
lret
xchg
das
inc
jp
mov
fidivrl
sub
pop
pop
subps
mov
lahf
fstpt
mov
xor
js
std
insb
outsb
adc
jg
push
cmpb
push
repz
and
sbb
jecxz,pt
mov
jbe
and
jno
fwait
fwait
or
pop
mov
ljmp
lock
addb
je
mov
sbb
lods
xchg
fcompl
sub
pop
out
push
testb
inc
pop
sarb
nop
je
mov
lods
scas
iret
out
es
push
test
aaa
mov
xor
add
in
cld
leave
or
movsl
inc
fdivrs
sub
aaa
out
cltd
or
mov
pop
and
sbb
jp
dec
push
paddw
dec
neg
or
clc
add
mov
dec
inc
jmp
imul
insb
sub
jmp
inc
xchg
sahf
outsb
jp
cmp
movsb
sub
add
int
or
push
add
clc
loop
test
adc
mov
mov
mov
test
fsubrs
fiaddl
jmp
mov
and
and
or
mov
ljmp
jge
mov
sbb
pushf
repnz
idivb
icebp
cmp
sbb
fucomi
popa
shlb
inc
insl
add
mov
fwait
lahf
stc
pop
xchg
sti
mov
mov
mov
jge
ss
insb
lcall
addr16
mov
mov
jo
mov
insb
movsl
xor
out
test
loopne
cmp
jae
aad
or
aaa
stos
adc
xor
mov
int
xchg
call
iret
out
push
pop
dec
or
and
lock
mov
scas
cmpsb
mov
int
stc
sbb
ja
jg
insb
jl
jle
aaa
aaa
mov
mov
scas
imul
inc
lahf
rorl
movsl
insl
and
icebp
mov
mov
cmp
addr16
xor
cmp
test
ds
add
pusha
fwait
shlb
or
hlt
fnstsw
ds
cmp
sbbb
sbb
mov
es
cmp
xchg
movsl
jb
pop
jp
outsb
mov
shrb
out
test
in
push
stc
fisubl
aas
out
scas
jg
jmp
pop
and
sbb
pop
sbb
pop
adc
test
aad
inc
leave
jae
jae
sbb
insb
cmp
sbb
add
in
mov
jae
jae
push
inc
jnp
ds
mov
fs
jae
jae
pop
pop
cmpl
int
mov
mov
xor
jne
jle
and
xchg
das
jl
rolb
jle
out
lcall
out
insl
out
shr
sbb
es
out
jbe
jnp
adc
inc
adc
sbb
aaa
std
or
xchg
out
shlb
aad
mov
sub
cli
fnstcw
pop
adc
test
shlb
pushf
or
xchg
es
mov
xchg
fldcw
mov
ss
rcl
mov
mov
push
sbb
inc
fs
cmp
xchg
inc
or
cwtl
cmp
pop
dec
mov
in
addr16
ret
push
mov
xor
bound
aad
fdivrl
mov
and
scas
cmp
inc
ss
fsubrl
aam
fcompl
add
fistpl
loope
or
sbb
jae
adcb
js
mov
popf
xor
out
jae
jae
sub
repz
or
out
sub
aad
fimuls
sub
iret
sub
push
fistpll
mov
scas
ret
in
in
fs
in
and
test
jb
bound
aaa
ja
into
int3
mov
int3
test
aaa
aad
jl
pushf
repz
jmp
mov
ljmp
repnz
push
push
cwtl
and
mov
lods
or
test
dec
out
pop
test
and
les
bound
fsubr
jge
inc
or
scas
into
stos
enter
xchg
cld
out
fwait
insb
pop
in
out
in
add
imul
cmc
jae
sub
jae
xor
int3
push
jp
fdivrl
adc
mov
mov
and
push
rcrl
dec
dec
lcall
shrb
lea
push
inc
loope
or
push
out
fbld
bound
iret
out
mov
pop
cmp
xor
data16
push
flds
insb
adc
pusha
test
loope
clc
je
sti
insb
mov
mov
mov
mov
jecxz
mov
xchg
push
mov
sub
inc
dec
pusha
mov
scas
popf
es
mov
mov
mov
pushf
xchg
jo
int
and
dec
mov
dec
mov
mov
int
or
add
cmp
mov
inc
xor
outsb
xchg
out
adc
adc
loopne
mov
inc
push
and
dec
iret
jmp
fcomi
mov
inc
shr
mov
mov
fwait
fwait
fmuls
sub
out
test
cmc
lahf
fwait
fwait
fwait
cmp
nop
movsb
in
add
cmp
adc
fdivrl
bound
loopne
scas
or
cmp
pusha
pop
outsb
repnz
aad
mov
negb
iret
xchg
cli
dec
adc
popa
shl
jae
jbe
lahf
sbb
jne
rorb
xchg
xlat
xor
xchg
push
outsb
adc
cmc
sbb
dec
mov
jp
mov
mov
jle
ja
fs
sbb
sub
jns
sahf
int
mov
dec
jecxz
cmc
jle
or
adc
xlat
pop
les
fisubl
xchg
mov
mov
rorb
mov
lret
jae
jae
test
fbld
arpl
mov
mov
jae
jae
sbb
lret
xor
or
fdivrl
pop
rclb
xor
dec
clc
cmp
push
fdivr
loope
int
sbb
call
sub
adc
sub
outsb
outsb
outsb
outsb
jo
out
loop
rcrb
idivb
outsb
outsb
sub
push
vmread
outsb
cmp
xchg
add
fwait
xor
cld
addr16
jae
jbe
inc
add
rolb
iret
inc
les
push
test
ljmp
scas
dec
pop
test
sbbb
icebp
mov
jbe
and
ds
mov
cli
outsl
dec
jp
or
xchg
push
pop
lea
mov
adcl
adc
bound
fcompl
sahf
lds
insb
out
dec
xchg
mov
dec
cmpsb
push
sbb
ret
rorb
fcompl
fs
push
jmp
fnstsw
xchg
push
mov
mov
push
je
push
lods
insb
adcb
adc
mov
or
push
dec
mov
add
mov
or
aad
in
insl
dec
mov
jmp
movsl
fsts
out
mov
enter
cmc
dec
sub
lods
leave
stc
xor
lahf
arpl
jl
add
arpl
outsb
test
lods
pop
into
mov
mov
jne
mov
inc
push
mov
insl
dec
hlt
mov
xchg
inc
pop
inc
lods
cmp
add
mov
jle
fdiv
xchg
ljmp
rcr
fmull
lock
gs
fstl
inc
pop
mov
icebp
subl
iret
aam
adc
inc
mov
leave
insb
outsb
outsb
mov
jbe
xlat
loopne
test
lea
xchg
or
dec
mov
dec
mov
fdivrl
icebp
lahf
dec
cmp
xor
jne
clc
dec
test
rcl
and
je
cmp
sar
mov
pop
es
iret
or
rolb
mov
in
stos
pop
cmp
dec
mov
sahf
fwait
fwait
fwait
rcrl
cld
test
loope
sahf
xchg
mov
insb
lock
push
bound
rcr
icebp
aad
dec
addr16
pop
xchg
out
fs
int
jg
int
cmp
in
leave
add
pop
mov
mov
dec
push
jbe
mov
add
fxtract
push
fistpl
arpl
out
sub
mov
and
mov
imul
iret
out
out
popl
lods
fidivl
push
outsb
outsb
outsb
fbld
sbb
jae
inc
movsb
xor
lock
outsb
outsb
outsb
sbb
lods
mov
push
mov
outsb
outsb
sub
fimull
in
adc
jmp
int3
lret
inc
loopne
jbe
test
test
sarl
mov
test
pushf
outsb
sahf
inc
movsl
clc
xor
push
mov
cld
lcall
adc
xchg
ss
jecxz
add
sub
icebp
jnp
in
push
jge
bound
imul
xor
dec
outsb
hlt
mov
cwtl
in
cmp
fcomps
sbb
push
dec
add
jbe
cmpl
mov
xor
inc
pop
mov
mov
scas
outsl
jmp
and
cmp
mov
cmc
push
xchg
addr16
dec
push
divb
call
or
out
out
fildl
scas
adc
hlt
jo
out
out
or
ror
outsl
cwtl
pop
aaa
cld
insb
mov
mov
push
add
mov
jae
jnp
mov
mov
xchg
jmp
cmpsl
iret
sbbb
lods
push
rcll
test
sbb
sahf
ficompl
jne
mov
xchg
outsl
mov
inc
.byte
pop
or
add
push
push
je
imul
repz
fdivl
call
jns
iret
in
xor
pop
push
dec
bound
imul
pop
sbb
push
push
jns
je
insl
jmp
and
or
outsb
sbb
popa
arpl
add
lahf
int3
push
rcrb
add
dec
addl
jmp
adc
inc
je
pushf
mov
int3
mov
mov
push
lds
sub
dec
adc
fucomp
ss
pop
je
or
or
inc
dec
push
pop
push
and
leave
dec
push
daa
fnstsw
fs
sar
je
inc
add
jo
daa
daa
daa
daa
push
daa
daa
daa
test
daa
daa
daa
daa
push
dec
dec
inc
daa
daa
daa
daa
inc
cmp
xor
daa
daa
daa
xorb
sub
daa
daa
daa
cwtl
xchg
nop
and
daa
daa
daa
and
daa
daa
sbb
adc
scas
clc
lock
push
add
mov
addb
not
outsl
sub
je
movzwl
mov
ss
pop
ret
addr16
in
jbe
add
mov
clc
hlt
lock
xchg
int
out
faddl
push
add
mov
sub
xor
mov
jmp
mov
mov
jle
int
pop
mov
add
mov
push
roll
push
std
out
out
cmp
mov
or
inc
cmp
jne
mov
fdivs
fstps
mov
adc
or
and
add
push
push
sbb
dec
repz
testl
add
mov
mov
lahf
inc
add
adc
mov
insb
pop
mov
test
add
imul
mov
add
pop
mov
mov
jo
pusha
mov
inc
adc
jl
int3
pop
or
dec
add
loopne
or
nopl
outsl
mov
mov
jo
in
jbe
push
pop
push
push
repz
mov
in
pop
pop
and
mov
add
cmp
jne
xor
rcr
fistpll
inc
or
or
pop
jmp
add
cmp
jne
sti
jg
cmp
aaa
jne
mov
mov
xor
fs
loope
pop
pop
pop
pop
or
fxtract
or
fmul
lcall
jb
outsb
outsl
bound
stc
add
fbstp
push
and
xchg
pop
dec
mov
add
movhps
pop
push
cmpl
pop
mov
jne
push
add
dec
imul
push
jmp
mov
add
pop
mov
out
fildll
add
sub
mov
enter
lea
or
jmp
lret
and
std
sub
push
inc
cmp
test
add
or
adc
mov
pop
adc
jge
mov
dec
adc
pushw
push
mov
push
push
add
clc
mov
test
je
xor
in
loope
mov
orb
dec
mov
arpl
int3
pop
push
pop
subb
jnp
sti
mov
lahf
push
pop
icebp
daa
lret
and
dec
pushf
sbb
push
or
in
mov
call
xchg
cmp
sub
repz
movnti
push
adc
pop
jecxz
clc
jo
mov
cmp
imul
jae
in
sbbb
jb
lcall
jo
ja
and
jae
imul
std
or
or
push
es
loopne
rorl
std
jne
xor
movl
scas
push
jg
push
jne
push
pop
bound
xchg
je
jno
rol
cmpsb
out
inc
sub
inc
mov
fildll
leave
or
dec
lea
pop
test
rol
loope
lock
js
outsl
orl
ret
jp
and
mov
adc
cmp
jmp
or
xchg
jbe
cmp
or
push
pop
ja
or
cmp
lahf
imul
adc
in
lock
out
setp
vpcmpeqw
lock
ljmp
jb
inc
mov
add
roll
or
xchg
pop
ja
aaa
add
outsb
inc
addr16
js
insl
cmp
add
lahf
div
cs
imul
inc
mov
rol
cmp
mov
inc
cmp
jg
mov
xor
mov
testl
pop
add
or
pand
inc
mov
cmp
icebp
shrb
jne
add
fdivs
lea
and
dec
hlt
sbb
idivb
xchg
daa
push
add
mov
inc
cmp
mov
cli
adc
or
pop
out
jae
dec
into
push
sbb
pop
pushf
fldenv
or
pushf
sbb
inc
pop
mov
sub
fwait
push
add
add
or
movsb
lock
add
fimull
aas
adc
xor
or
inc
jae
icebp
or
xor
mov
mov
add
imul
lea
mov
jmp
out
pop
stc
cmp
jne
pop
jg
dec
jl
mov
pusha
mov
jo
scas
rclb
inc
lock
adc
rcll
pop
cmpsl
dec
inc
stc
lock
leave
lea
jb
pushf
add
and
sub
out
inc
outsl
mov
jbe
rcrb
pop
test
andl
xchg
pop
dec
test
je
pop
mov
andl
xor
ja
jl
rcrl
int
scas
push
mov
push
dec
jg
das
jp
push
pushl
mov
push
cmpb
data16
or
in
mov
lahf
adc
xchg
push
jge
lea
or
data16
add
inc
xor
cmp
in
std
jne
movl
mov
js
rolb
outsl
adc
mov
mov
mov
fs
mov
das
pusha
fdivr
enter
test
in
pop
pop
pop
push
cmp
scas
test
out
call
cld
xchg
mov
xor
xchg
rcr
mov
mov
mov
lea
inc
clc
jmp
pop
sub
or
popa
dec
in
mov
in
cmp
xchg
fiadds
and
mov
inc
add
and
mov
jg
xchg
arpl
rcr
pop
pop
xlat
clc
cmp
cmp
jne
add
xor
push
or
fdivs
ds
jecxz
sarb
ret
cli
add
dec
inc
clc
mov
das
mov
mov
mov
adc
xchg
xor
mov
loopne
cld
cmpsl
push
and
adc
out
mov
or
sbb
inc
cmp
pop
jns
inc
bnd
pop
add
xchg
pop
xchg
sub
lea
mov
cmp
jl
fnstcw
std
movl
rorl
mov
fisubs
adc
pcmpeqd
add
inc
xchg
mov
incl
ljmp
push
cld
call
mov
adc
mov
je
jl
or
insb
rolb
int3
fwait
or
mov
dec
add
andl
ret
push
push
push
xchg
xor
jle
inc
mov
stc
or
fiaddl
jmp
sub
ret
aas
add
testb
je
mov
sub
jle
ret
xor
jo
xchg
add
arpl
sahf
out
fdivs
div
imulb
mov
test
roll
add
and
lea
in
sub
inc
xor
lock
mov
hlt
pop
xor
jnp
lea
dec
in
push
lods
xchg
cmpl
loopne
pop
scas
rorb
xor
lock
push
push
cmp
jge
push
aad
push
dec
mov
xchg
testl
adc
xor
add
and
cmp
aad
fdivrs
dec
mov
pop
sti
push
jmp
jbe
lea
rolb
mov
mov
mov
lock
or
or
mov
mov
and
pop
mov
cmp
or
movsb
sti
jbe
ficompl
sar
loope
loope
xchg
mov
aam
sub
or
inc
aas
mov
inc
adc
popa
nop
pop
mov
sub
or
or
dec
pushf
or
push
shlb
pusha
xchg
roll
out
cltd
jg
adc
cmp
add
or
ja
repnz
es
sub
fldl
and
mov
faddl
jl
push
sub
movsl
mov
dec
adc
inc
mov
rcll
jae
ljmp
pop
add
add
repz
aas
lods
mov
xor
adc
push
lret
cmp
roll
enter
mov
mov
jo
lea
push
adc
andl
mov
pop
push
mov
jl
inc
cmp
lea
ret
pusha
or
add
insb
test
mov
mov
pop
cmp
mov
hlt
cmp
mov
hlt
out
add
int
mov
jno
jne
or
fcompl
sbb
mov
and
or
mov
push
cmp
pop
jbe
stos
les
pop
je
cwtl
jbe
push
pusha
mov
xchg
mov
pusha
sbb
cmp
mov
jmp
adc
cmp
mov
loopne
mov
or
xor
ds
add
pop
pushf
jge
or
bnd
sbb
dec
aad
jmp
mov
rorb
sub
cli
mov
and
sbb
cmpb
xchg
imul
cmp
orb
push
xor
inc
stos
negb
aad
pop
sub
mov
pop
in
push
mov
adc
or
je
jl
cmp
clc
outsb
jle
inc
cld
adc
push
test
inc
or
and
lock
incl
cld
cmp
add
jne
jg
clc
subl
stos
mov
fsubrs
in
push
sub
sbb
adc
cmpsb
sbb
lock
jne
aaa
jmp
mov
dec
lock
mov
les
insb
mov
jbe
ret
pop
pop
xor
enter
cld
test
mov
pop
sarl
sbb
shld
aad
or
mov
cmpsl
fisubrl
ret
mov
sbb
fdiv
ds
jecxz
push
mov
pop
mov
lock
add
sub
test
int3
out
or
sub
mov
mov
divb
xlat
inc
sub
adc
jne
cltd
or
xchg
or
or
push
sub
push
jns
fisttpl
pop
cmp
bound
test
loop
nop
or
dec
sbb
fdivrs
lock
std
lock
lods
add
clc
jo
and
add
fldl
add
mov
xor
mov
enter
lock
loopne
fistps
add
clc
add
or
in
cmp
add
cmp
repnz
outsb
fmull
adc
sbb
sbb
into
pop
jo
push
push
pop
roll
mov
mov
test
lcall
and
fildll
or
adc
push
push
or
out
cmp
jb
sub
pop
push
push
add
sub
or
test
testb
adc
js,pt
shrb
aad
std
mov
adc
push
sub
stc
in
sub
mov
sub
mov
cmp
jg
sub
add
sbb
leave
pop
add
arpl
sub
sub
rcll
test
and
sbb
push
mov
out
das
mov
jle
and
mov
aad
add
inc
sub
push
movsl
sub
sti
add
test
dec
add
pop
clc
ret
mov
cmp
mov
sub
sub
aaa
pusha
add
push
push
or
mov
cmp
xchg
sbb
or
test
jl
adc
sbb
jp
ret
push
rcrb
mov
jmp
cmp
cmp
push
mov
stos
push
mov
jge
lock
je
fmul
xchg
push
sbb
subl
fwait
add
inc
leave
mov
mov
xchg
test
jle
nop
call
fwait
jg
xchg
jne
mov
sbb
xor
adc
push
int3
ficomps
mov
dec
add
sar
fisttps
leave
je
test
je
push
mov
dec
inc
adc
in
in
pop
or
add
push
jmp
mov
subl
bound
idivl
daa
dec
sarb
out
mov
sbb
sub
ret
jecxz
push
cmp
int3
and
jne
dec
dec
loop
insl
xor
sti
sbb
mov
mov
out
adcb
sbb
cld
mov
jg
cmc
cmp
push
push
push
jne
mov
pop
jne
xor
das
mov
mov
out
mov
jp
aaa
mov
add
mov
inc
or
je
jb
incl
ret
sub
inc
hlt
jl
cmp
jg
add
mov
inc
rep
jmp
mov
xchg
loopne
leave
jmp
mov
jmp
mov
cmc
push
lock
jle
xchg
loopne
mov
sbb
fldln2
lcall
push
cmp
ja
je
sar
js
rep
xchg
mov
fwait
mov
xor
lea
xor
std
xor
ret
mov
inc
sub
cmp
lock
jns
pushf
xchg
cmp
mov
sub
je
dec
sub
jae
sahf
call
outsl
stos
push
sub
jmp
mov
pop
into
xchg
je
cmp
scas
xchg
adc
and
rcll
push
mov
mov
mov
or
pop
mov
inc
xor
scas
jb
or
and
jne
sub
sbb
lock
adc
jae
subl
adc
mov
jo
dec
or
mov
shl
data16
lret
or
stos
mov
stos
pop
pop
jno
xor
sbb
fstpt
fiadds
or
push
inc
clc
and
add
je
aaa
push
lcall
je
xor
ficoml
dec
and
jle
and
out
clc
mov
add
sub
or
cmp
ja
clc
add
add
ljmp
jno
mov
or
jge
jmp
inc
jmp
neg
jle
js
xchg
jle
dec
pop
sub
jmp
inc
inc
jmp
mov
dec
cmp
filds
and
add
ja
add
scas
leave
pushf
add
aad
jne
cwtl
pop
xor
mov
mov
in
mov
push
repz
sub
jbe
inc
cmp
add
dec
je
xchg
push
hlt
bound
loop
lea
fldt
call
pcmpeqb
mov
push
cmp
scas
and
lret
in
jmp
fcoms
pop
push
cltd
xchg
xor
sbb
jmp
adc
fstp
fldt
fldz
mov
add
inc
cmpsl
cmpb
sbb
leave
daa
mov
cli
or
leave
daa
lahf
inc
pushf
or
ret
mov
adc
enter
xchg
cwtl
push
and
sbb
in
pop
stc
add
mov
popf
es
test
out
sub
pop
stc
xor
mov
lds
mov
stc
lahf
incl
cmp
fidivrs
call
mov
bound
fwait
inc
cmpb
xlat
fadds
outsb
xor
xchg
pushl
pushl
test
into
sbb
rorl
mov
push
pop
test
dec
movsl
sbb
push
inc
cmp
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
mov
mov
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
sub
jg
ljmp
inc
aad
iret
decl
js
inc
mov
stos
mov
cmp
cmp
dec
inc
mov
pop
out
sub
imul
divl
jl
xor
cmp
call
push
mov
inc
mov
sti
jmp
stos
push
inc
mov
push
sbb
sarb
push
sub
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
mov
pop
lcall
repz
loope
jp
iret
inc
bound
ds
push
cmpsb
scas
mov
jmp
mov
addl
cmp
xor
in
cmp
sahf
xchg
out
cli
lcall
lock
mov
popa
mov
and
addr16
repz
mov
lcall
subb
and
and
outsb
bound
xor
and
jl
divb
sti
outsl
stc
and
clc
pop
jne
push
pop
and
lret
add
cli
push
sbb
add
mov
test
repz
lcall
dec
jbe
xor
inc
hlt
std
xor
cmp
pop
hlt
push
data16
add
inc
cmp
test
fdivs
sub
lahf
out
mov
cs
sar
xor
pop
aas
or
mov
sub
push
dec
inc
push
push
inc
push
inc
pop
inc
outsl
stc
pushl
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
or
jb
fninit
fldcw
ljmp
rcll
mov
xlat
mov
xor
mov
pop
js
addl
add
add
mov
and
mov
mov
sbb
pop
aaa
and
sbb
push
rcr
test
je
sbb
adc
movups
add
inc
loopne
xor
outsb
cmp
sbb
loopne
mov
or
push
cld
ret
test
jg
pop
sub
mov
xor
jmp
pop
or
rorb
add
mov
sbb
in
cmp
je
pop
mov
add
jae
lock
or
push
mov
mov
push
sbb
jne
jne
sar
and
lods
mov
mov
mov
cmp
cmpsl
sub
xor
jmp
stc
inc
aad
pushl
paddd
movd
and
and
jo
jmp
push
jo
sub
mov
dec
sbb
loopne
mov
pop
push
sahf
jp
adc
loop
add
xor
mov
adc
pusha
out
add
rcll
xor
mov
adc
mov
inc
sbb
jnp
insb
test
mov
inc
hlt
mov
add
setne
xchg
call
mov
add
lock
pusha
stc
lock
pop
fisttps
pop
lea
mov
mov
cmp
mov
add
jo
sbb
fidivl
push
or
jne
or
or
adc
fsubrl
int3
notb
popa
push
mov
les
loope
lock
scas
push
xchg
jmp
stos
jle
xchg
fwait
mov
push
add
repnz
je
pop
int
lock
cld
ret
pop
add
sub
mov
pop
cs
cmp
xchg
jl
pop
lret
pop
jb
push
mov
cmp
outsb
pushl
mov
cs
pop
push
and
dec
sbb
or
pop
pop
mov
mov
shl
popf
pop
fdiv
pop
fdivs
push
pop
pop
mov
jbe
push
push
ret
mov
xor
add
mov
mov
movl
add
mov
mov
push
pop
push
stos
loope
jne
test
je
loopne
pop
push
mov
push
adc
lahf
je,pt
xchg
or
adc
push
clc
clc
call
in
xlat
jg
aas
fucomp
xchg
fsubs
call
cmp
adc
push
push
loope
in
push
call
jle
aaa
les
push
pusha
push
push
cmp
jns
cwtl
or
cs
pop
cvtdq2ps
add
pop
push
push
bound
std
aas
mov
mov
cmpb
je
or
jne
movsbl
or
mov
inc
inc
jmp
add
pop
ss
sbb
push
mov
rclb
push
aas
loop
pusha
fsub
pop
mov
adc
cmp
rorb
xabort
inc
add
ja
jle
jne
fiadds
cs
je
cld
popa
and
je
popf
ror
adc
loopne
sub
cli
out
push
je
fidivs
dec
sub
pop
ja
in
aaa
cmp
out
addl
cmp
pop
jbe
outsb
into
adc
cmc
enter
adc
jne
jbe
adc
pop
test
je
orl
push
cmp
ljmp
or
push
sub
push
mov
sbb
sub
das
fidivl
mov
pop
add
inc
add
push
jecxz
pop
jo
jg
jmp
sti
clc
std
testl
and
mov
bound
pop
jp
fdivrl
pop
mov
inc
add
add
std
sub
and
int
inc
popa
outsl
cmpsb
or
shl
aas
pop
push
push
push
push
push
addl
mov
fs
das
adc
sbb
incb
inc
or
pusha
add
aas
movsb
inc
push
add
dec
add
xchg
into
adc
adc
jle
pusha
shl
lea
and
sbb
insl
inc
incl
add
loop
xor
rcll
xor
rol
or
mov
stos
add
je
cmp
mov
adc
push
sub
mov
dec
jmp
add
call
xor
push
cmp
jne
pop
in
sub
add
jmp
sub
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
sar
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
cld
push
or
push
or
pop
add
mov
push
push
sbb
xor
jno
jmp
push
mov
std
lahf
mov
pop
cwtl
cmp
push
adc
inc
sbb
popf
rclb
stos
sti
into
outsb
out
push
inc
sti
and
inc
xchg
pusha
sbbl
xor
inc
outsb
or
sbb
mov
enter
push
jl
jo
aas
mov
cmp
std
outsl
mov
repnz
cmp
jne
jne
and
xor
mov
pop
mov
mov
movsl
leave
and
addb
xchg
dec
mov
and
fdivrs
inc
fcomp
dec
push
add
push
clc
xor
in
lret
loopne
adc
pop
sub
mov
je
pop
adc
mov
inc
xor
xchg
push
cmp
push
inc
mov
hlt
add
fistpll
repz
movl
sbb
add
cmc
mov
adc
or
ljmp
movb
lods
lahf
pushf
ret
cs
out
andb
je
add
push
sbb
add
ss
scas
jbe
decl
jmp
pop
addr16
add
mov
dec
or
lret
mov
js
push
sbb
sarb
add
cltd
idiv
add
js
mov
push
add
imul
dec
mov
mov
push
rolb
xchg
mov
fucomi
xor
push
ds
adc
loope
sbb
add
rolb
add
pushl
add
aaa
xor
mov
movsl
pop
leave
call
hlt
lods
push
sahf
inc
jns
cmpw
adcb
and
mov
or
aam
subl
cmc
repz
jl
fimull
lar
cmp
ret
mov
add
imul
test
sarl
xchg
mov
pusha
add
fsts
addr16
ds
push
cmpl
push
add
inc
mov
jo
clc
fistpll
or
in
inc
sbb
mov
cwtl
scas
std
fdivrl
sub
daa
push
jne
ds
in
icebp
push
mov
add
push
mov
xor
icebp
push
mov
mov
jne
cmp
je
lods
je
ds
push
cmp
add
xchg
jbe
mov
fiadds
cmp
sahf
adc
pop
clc
sub
mov
mov
sub
dec
jge
imull
ret
nop
popl
xchg
jmp
pop
shlb
decl
dec
jl
lock
clc
xchg
mov
mov
push
sbb
add
or
fimull
cmp
outsb
jle
inc
jg
insl
filds
test
inc
xor
push
dec
cld
xor
pop
jmp
jbe
xchg
adc
push
stos
jl
xchg
jle
outsl
cld
incl
push
add
and
push
sub
int
jl
movw
pop
mov
sub
jne
loope
jle
cwtl
mov
mov
das
stc
mov
iret
jp
loopne
or
mov
cmp
xchg
call
push
push
push
push
or
push
adc
scas
mov
add
or
push
negb
add
bound
mov
fdivrs
mov
in
icebp
jmp
lea
cmp
push
cmp
pop
mov
inc
loop
sbb
enter
jnp
jns
ja
mov
and
fldl
fistpl
xor
sahf
cmp
sbb
add
cmp
clc
aam
push
mov
mov
or
and
or
pop
cmp
xchg
or
je
add
cmp
addb
mov
pop
sub
jmp
in
lahf
pop
sub
and
pop
pop
or
push
mov
addr16
in
add
lahf
je
cs
or
nop
push
push
idivb
mov
mov
adc
scas
sbb
pop
add
pop
pop
xor
imul
outsl
pop
xorb
lcall
je
mov
jns
push
cld
add
cmp
adc
jle
dec
and
es
roll
pop
daa
test
stc
sahf
xchg
pusha
cmp
je
mov
loopne
cmp
jbe
sub
sbb
pop
jno
loop
dec
scas
rorl
add
idivb
repnz
mov
cli
lds
push
sbb
pop
push
mov
dec
clc
mov
jecxz
gs
lret
mov
fiaddl
incl
adc
or
int
cmp
repnz
dec
jmp
push
sub
outsb
xchg
or
push
cmp
sbb
dec
jne
mov
pop
add
ja
jge
and
aaa
add
dec
jmp
out
rolb
inc
pushf
sbb
shll
dec
jne
mov
or
and
outsl
cld
sbbl
lea
jmp
inc
out
call
rclb
push
incl
cld
sub
ja
add
push
shr
mov
mov
cmp
or
cmp
jne
dec
je
fadds
sbb
mov
or
loop
push
adc
add
lcall
and
inc
pop
cmp
jne
test
mov
or
and
imul
or
add
jmp
shr
aam
adc
sti
fists
pop
or
jmp
sbb
xlat
gs
std
dec
enter
cmp
pop
imul
fimuls
sahf
adc
pop
adc
dec
inc
push
pop
mov
push
std
sub
xor
push
inc
sar
dec
jl
cmp
jge
sub
xchg
inc
jg
xor
adcb
repz
shr
in
fldpi
jmp
inc
pop
icebp
sbb
fimuls
mov
push
not
mov
sbb
adc
adc
or
rorl
add
das
test
ljmp
rol
dec
rolb
dec
mov
or
sub
ret
loopne
adc
sbb
loopne
insb
mov
jo
mov
test
hlt
jmp
rclb
arpl
cli
addb
pop
clc
cmp
jl
icebp
pop
adc
pop
inc
int
push
push
and
and
in
loopne
sbb
push
das
dec
pop
push
lret
decl
push
sub
add
in
out
cmp
adc
scas
mov
imul
loopne
adcb
inc
jno
mov
test
pop
pop
call
jle
xchg
jmp
mov
add
xchg
adc
and
xor
dec
shrl
dec
push
xor
das
int3
pop
pushl
mov
and
iret
sub
add
and
xchg
inc
lods
add
add
test
add
inc
call
adc
pop
push
push
push
inc
push
and
mov
fwait
pop
add
callw
push
shll
mov
pop
das
or
adc
loop
adc
int3
stc
add
inc
outsl
mov
pop
adc
sti
add
push
or
adc
dec
cmp
nop
pushf
lcall
loop
std
xchg
sub
cmp
push
lods
add
push
adc
loop
or
mov
lea
sahf
inc
xor
and
scas
dec
adc
fadds
addr16
sahf
push
jg
push
push
cwtl
cmp
loope
cli
push
mov
push
lea
pop
adcb
jl
push
mov
mov
ljmp
repnz
call
adc
mov
call
test
jne
rcrb
mov
mov
cmp
and
cmp
hlt
cmp
xor
cmp
je
cmp
pop
test
push
mov
mov
aas
mov
pop
test
int3
jg
lds
mov
ja
mov
pop
int3
cmp
popl
xor
push
outsb
es
add
pop
mov
insb
dec
repz
push
mov
mov
sub
pop
mull
mov
pop
jmp
cmp
je
xor
sub
pop
lea
cmp
sbbl
cmp
adc
xchg
sub
adc
incl
push
pop
add
mov
lea
clc
outsl
pop
popa
outsl
cld
or
clc
push
push
add
sarl
ret
pop
sbb
fidivs
mov
fwait
fwait
pop
ret
cmp
xor
or
je
or
fwait
push
push
je
pusha
adcb
adcl
inc
lds
sbb
aaa
xlat
jmp
and
in
lea
mov
dec
ss
adc
lock
iret
adc
dec
clc
or
dec
aaa
mov
jmp
aas
add
jns
int3
inc
push
imul
mov
sbb
ds
cmp
fs
pop
loopne
jne
data16
jno
add
dec
sub
out
mov
mov
in
inc
push
or
test
pushf
jno
test
sti
push
cmp
out
sub
fwait
xor
rorl
sub
jmp
cmpsl
std
es
mov
dec
xor
add
mov
or
ja
sti
add
add
inc
ljmp
mov
stc
icebp
mov
jo
add
je
int3
andl
inc
sbb
sbb
adc
in
lock
lods
nop
mov
push
jmp
mull
mov
clc
push
fnstcw
fs
add
jb
lret
cld
push
ret
pop
pop
xchg
cmp
dec
xor
outsb
or
pushl
cmp
mov
mov
push
inc
cmpsl
dec
in
dec
sahf
rorl
xchg
lods
arpl
call
pop
mov
push
sbb
add
cmp
xor
jo
jmp
cmp
call
ss
lahf
cmp
movzbl
add
add
jo
push
push
fmulp
das
rorl
jge
pop
movsb
push
imul
mov
js
lock
xchg
or
cmp
inc
xlat
dec
fists
cmp
jle
lahf
sbb
shr
decl
imul
add
mov
sub
pop
lock
lods
pusha
and
fnstsw
jmp
push
call
jge
cmp
jge
jbe
loope
mov
cltd
sub
mov
xor
dec
sbb
ss
sub
rorl
loopne
or
push
inc
dec
push
into
mov
inc
inc
or
mov
dec
adc
cmp
pop
div
xorl
sbb
shrl
xlat
mov
or
add
mov
hlt
add
or
mov
fs
xor
and
lea
div
daa
push
add
jne
aad
mov
mov
lret
rclb
lds
scas
xor
test
or
lock
jne
mov
cmc
push
sub
or
pop
mov
inc
push
dec
push
sbb
pop
and
aam
push
dec
add
jecxz
inc
push
push
mov
incl
das
pop
pop
out
das
lods
lock
xor
movsb
pop
pop
inc
jecxz
cmpl
ret
daa
sub
clc
sub
cmpl
push
add
or
mov
les
fsubr
mov
xor
push
sbb
fiaddl
or
jbe
pop
iret
cmp
mov
mov
sub
sub
imul
or
call
inc
mov
sbb
aad
sti
mov
pop
das
add
insl
push
xchg
lea
pop
lock
js
mov
sbb
int3
jle
push
add
jmp
adc
pop
incl
push
sub
mov
push
shll
iret
test
rclb
pop
cld
mov
clc
push
sub
cmp
jge
cmpb
inc
vmread
pop
int3
daa
and
je
jle
into
add
sti
xchg
inc
sbb
in
pop
or
jo
addr16
xchg
sub
lea
shr
loope
andl
pop
jge
sub
cmpsb
xchg
sbb
inc
cmp
gs
inc
push
inc
jno
jne
stos
mov
movsb
push
andl
push
aas
pushf
push
std
imul
add
insl
out
jbe
jg
movb
ret
dec
push
push
inc
pop
fildl
inc
popa
mov
sbb
roll
stos
or
and
outsb
gs
xor
cs
insb
incl
loope
jmp
dec
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
daa
scas
fdivr
sub
loop
push
fucomip
adc
ljmp
inc
out
and
push
arpl
lods
and
push
add
inc
add
ja
and
or
jns
loopne
cmp
je
mov
pop
push
cmp
call
push
inc
sti
int
push
jbe
sub
add
sbb
or
push
repnz
and
sti
dec
cmp
cmp
push
lods
repz
jo
jne
in
mov
inc
int3
stc
out
cmpsb
dec
outsb
jge
test
or
push
jmp
jnp
xchg
pop
repnz
mov
add
arpl
in
je,pn
inc
cmp
jne
adc
in
inc
xchg
out
sub
pusha
rcrl
and
inc
inc
in
dec
jne
in
flds
or
repz
ss
jae
cmp
ret
iret
push
outsl
data16
popa
jb
xor
lret
insb
gs
aaa
mov
ret
pop
add
loope
insb
xlat
inc
mov
mov
mov
adc
or
adc
jp
adc
or
sbbb
icebp
ret
stc
je
jge
mov
jne
das
in
mov
cltd
xor
jmp
adc
jne
aas
pop
ss
jb
mov
addr16
mov
push
add
pop
cld
mov
lret
add
je
scas
and
pop
jnp
cmpsl
push
push
cli
or
or
ret
or
mov
jno
or
in
xor
fadds
in
test
and
outsb
in
or
inc
adc
push
cmp
ret
or
int
or
cmc
cmp
roll
shrb
cmp
cwtl
je
scas
sub
or
icebp
xchg
or
sbb
add
sbb
or
pop
adc
sub
adc
pop
inc
mov
pop
adc
and
pop
or
mov
lahf
jbe
int3
mov
xor
jecxz
je
add
test
ret
pop
js
pop
or
aaa
cmp
push
imulb
push
add
fistps
test
xchg
add
fmull
push
mov
dec
mov
add
xor
mov
xchg
dec
inc
cmp
ja
mov
add
jmp
cmp
pop
add
pop
cld
ja
fidivl
jmp
or
mov
adc
and
sbb
fwait
divb
add
xor
aam
and
mov
imul
inc
fscale
aaa
jae
cmp
jae
cmp
jb
or
pusha
rcll
xor
and
sbb
in
dec
jbe
pop
add
cmp
or
inc
rorl
lock
and
jecxz
mov
inc
mov
shl
inc
faddp
push
or
out
cld
das
push
sbb
aam
jno
cli
mov
inc
xorl
test
stos
or
jae
testb
cs
adc
mov
and
cmp
jne
cmp
cwtl
and
clc
shl
or
mov
pop
lea
adc
out
dec
dec
cld
mov
pop
push
adc
jl
fadds
lcall
adc
or
movl
xor
dec
ret
xor
pusha
sbb
in
xorb
ja
jmp
sbb
or
jb
inc
add
jbe
stos
jge
enter
xor
push
jb
pushf
je
jno
dec
fmuls
pop
push
lret
sbb
dec
or
and
leave
in
lahf
sbb
das
inc
inc
push
and
xor
fsubrp
xchg
jle
inc
fmuls
jmp
push
mov
popa
out
movsl
xchg
push
cmp
adc
push
xor
mov
xchg
push
mov
add
fadds
and
adc
pmulhuw
inc
mov
lock
and
xor
cmp
adc
and
xorl
xor
add
insb
test
sahf
inc
in
mov
jne
cmpl
and
insb
adc
arpl
mov
push
sahf
jo
jns
xor
adcb
mov
fwait
into
scas
pop
mov
test
dec
push
push
lea
push
adc
testb
lock
psubsb
mov
mov
inc
sti
and
fmuls
adcl
lock
test
daa
cmpsb
push
xor
mov
insb
and
mov
loopne
mov
xchg
or
mov
push
mul
clc
subl
stos
inc
test
add
sbb
mov
add
test
push
inc
ja
cmpsb
and
pop
add
in
mov
cmp
adc
xchg
in
mov
cmp
add
adc
push
ret
mov
sub
and
data16
loop
push
mov
test
sub
paddq
mov
mov
lahf
mov
mov
orb
pop
fisttpll
dec
scas
mov
lods
inc
dec
movsl
lock
mov
loope
out
mov
mov
mov
sub
ja
push
and
mov
sarb
cmp
ret
mov
push
pop
and
ret
mov
inc
push
jo,pt
stos
arpl
mov
andb
sub
cmp
or
mov
clc
push
sub
pop
mov
xchg
cmp
fwait
fs
mov
adc
sub
mov
insb
lock
pop
movsb
mov
mov
xchg
push
push
dec
dec
xchg
xchg
xchg
xchg
inc
inc
cmp
xchg
xchg
xchg
xchg
xor
sub
xchg
xchg
xchg
xchg
and
sbb
xchg
xchg
xchg
xchg
adc
or
leave
enter
add
mov
leave
hlt
lock
call
in
leave
leave
leave
leave
aam
int3
enter
leave
les
je
repnz
in
fs
sbbl
mov
movsb
cmp
pop
imul
in
in
repz
cmc
in
in
div
clc
stc
in
in
cli
sti
cld
std
in
in
jmp
loope
in
in
jecxz
in
in
in
out
jmp
ljmp
in
out
rcl
in
in
rcl
aam
in
in
xlat
fcomp
in
in
fcmovu
in
in
rol
in
in
ret
in
mov
leave
in
in
lret
int
in
in
iret
mov
in
in
mov
mov
in
in
mov
mov
in
mov
in
mov
jb
jb
mov
jb
jb
cmpsl
test
orb
mov
or
pop
je
mov
jmp
mov
jl
popl
aaa
mov
lods
jo
femms
add
mov
inc
js
gs
imul
stc
mov
pushf
pop
fisubl
jb
mov
jo
nop
lods
mov
and
pop
or
dec
mov
je
dec
gs
outsl
jb
pop
or
cmpsl
sbb
pop
outsl
aas
or
mov
mov
pusha
scas
pusha
lods
push
ret
or
push
je
inc
stos
pop
push
popa
insb
scas
mov
test
xlat
add
rorl
popa
mov
jo
or
sbb
scas
push
leave
leave
inc
jo
or
inc
repnz
imul
outsl
nop
enter
mov
and
inc
or
inc
and
inc
jnp
dec
outsb
jbe
jb
insb
outsl
ja
mov
add
leave
jl
pop
dec
pop
in
add
pop
gs
aam
aam
lods
xchg
daa
xor
jbe
mov
ja
imul
sub
push
push
xchg
insl
jle
enter
test
mov
rcl
scas
mov
andnps
jb
add
mov
xor
sysenter
fs
ret
xor
imul
mov
or
mov
mov
popa
jae
lea
cmc
adc
inc
inc
mov
aad
dec
shrb
push
and
dec
adc
arpl
add
push
jae
push
adc
inc
dec
and
push
test
test
in
stos
pop
pop
push
jb
insb
gs
nop
add
sub
inc
push
je
arpl
mov
add
inc
xchg
or
je
insb
inc
and
lods
mov
popl
mov
popa
outsb
adc
mov
in
mov
das
push
inc
addb
mov
add
cmp
jb
jns
int3
mov
inc
enter
loope
push
push
data16
sub
add
or
jbe
pop
push
stos
xchg
scas
push
or
mov
jg
cld
popa
data16
cwtl
jle
add
aaa
xor
mov
dec
invd
push
push
inc
xor
out
inc
cmp
add
cmp
mov
subb
inc
xchg
or
fldt
push
push
push
pop
push
fs
les
int3
add
mov
test
shrb
jl
sbbl
aam
sahf
out
lret
aam
jae
jge
push
incl
out
pop
popa
xchg
adc
sbb
mov
loopne
sbb
mov
push
add
aas
xor
adc
push
or
push
dec
jne
pop
or
insb
push
mov
fsubs
xor
push
fadd
lods
outsb
arpl
cmp
fdivrs
bound
add
shr
div
test
shrb
add
out
cmc
lahf
pop
pop
push
jle
lret
mov
mov
mov
or
loopne
mov
sbb
jl
outsl
pop
test
xlat
adc
decl
cli
cmp
fcoms
cmc
xchg
sahf
xor
inc
clc
and
mov
add
push
cmp
ja
sub
mov
cmpsl
test
mov
jmp
adc
and
lahf
test
inc
inc
pop
add
cmp
insl
pushf
push
or
or
cmp
jbe
nop
fwait
aam
leave
repz
je
mov
in
or
jle
add
out
mov
call
fstpt
out
and
sti
je
movzbl
add
sub
pop
out
xor
rcrb
pop
lcall
cmp
push
add
mov
nop
ret
daa
mov
push
and
ret
pop
ret
ljmp
dec
cs
addl
add
add
mov
inc
sub
inc
add
and
rcrb
mov
mov
lods
xor
mov
jl
cmpb
jbe
adc
or
jge
dec
sub
clc
push
sub
inc
repnz
add
jno
mov
or
jne
pop
add
out
sarb
cld
pop
lcall
ret
mov
inc
cmc
push
xor
div
jle
xor
sbbb
pop
mov
movsb
ljmp
jg
pushl
add
mov
sub
jmp
mov
dec
jne
push
mov
sub
xor
push
outsb
push
push
sarb
test
sarb
xor
add
pushl
mov
div
adc
ret
cs
pop
and
mov
ljmp
mov
add
push
shr
cli
cmp
orw
sub
mov
lret
pop
mov
mov
andl
jg
or
fildll
fistps
ret
add
outsb
jmp
fildll
filds
rorl
fdivr
mov
adc
xor
lods
push
sub
or
fnstsw
sahf
jae
fldcw
jbe
ret
ffree
fstl
ffree
pop
aad
add
test
xor
scas
frstor
push
cmp
addl
or
lock
or
out
add
sub
inc
push
push
mov
loop
and
aam
jo
mov
in
iret
cld
cwtl
stos
push
pop
pop
push
adc
cmp
cmp
sbb
mov
test
loopne
sub
mov
xchg
push
cmp
and
mov
bound
mov
test
pop
add
mov
inc
pop
add
inc
popa
insb
jae
call
inc
call
clc
test
jl
inc
js
push
mov
adc
sbb
cmp
jmp
or
jnp
jecxz
push
adc
fwait
cmpl
lea
jmp
jo
mov
sbb
das
add
adc
insl
lock
setne
jmp
pop
sbb
inc
xchg
inc
push
dec
rclb
dec
pop
sti
jnp
aam
addr16
inc
test
cltd
nop
test
dec
ret
js
out
ja
pop
sahf
mov
xor
icebp
bound
xchg
adc
adc
jecxz
adc
jmp
and
rcl
in
xchg
sub
jg
add
in
sub
or
mov
ja
push
incl
add
xor
inc
ja
cmpsb
jle
pop
mov
add
sbb
aaa
outsb
sub
inc
mov
lret
push
mov
ja
popa
daa
ror
push
jae
imulb
orb
sbb
fbld
xchg
push
mov
cmp
shrl
ss
lock
pop
in
add
fidivl
in
sub
je
imul
mov
rcll
xor
push
iret
ret
aas
dec
clc
scas
jbe
subb
push
sub
in
pop
dec
cmp
je
inc
idivb
fildll
push
push
enter
push
sub
hlt
and
dec
inc
cld
mov
punpcklwd
adc
and
sbb
jle
inc
inc
jno
mov
out
dec
jge
pop
pop
jmp
pop
lcall
dec
jo
sbb
jg
or
xor
popa
mov
jb
sbb
jne
mov
dec
cmp
add
insb
dec
xchg
std
orb
pop
pop
cmp
and
xor
push
andb
mov
les
ja
inc
or
jl
push
push
scas
orb
jg
sub
dec
jbe
imul
aaa
xor
xchg
xchg
xor
pushl
add
push
push
xor
fs
outsl
mov
js
daa
jmp
jne
imull
inc
call
dec
adc
call
mov
lods
mov
add
lret
shll
adc
ret
aad
add
adc
sub
pushl
mov
mov
cs
push
mov
lods
pop
xor
lret
dec
decb
sub
add
lret
mov
mov
mov
push
push
nop
pop
pop
pop
out
imul
xor
or
pusha
pop
sub
mov
lahf
das
cld
xor
mov
cmp
cli
ljmp
shlb
sahf
int3
fs
mov
add
or
mov
adc
cmp
jne
push
das
and
pop
andb
mov
sti
outsl
aam
rorl
cs
mov
pop
sub
jbe
sbb
pop
incl
lods
jl
mov
push
sbb
insl
cld
popf
enter
in
lea
mov
out
push
inc
cmp
mov
pop
sbb
test
mov
movsl
fs
into
xchg
enter
arpl
pop
aam
rcr
clc
movsb
pop
jbe
mov
inc
imul
add
adc
add
cmp
or
mov
shlb
movb
push
shlb
mov
cmp
pop
ljmp
mov
add
and
mov
call
pop
aaa
mov
outsl
mov
xor
rclb
inc
add
add
jno
fdivrl
adc
mov
or
mov
dec
jne
mov
sub
push
call
push
jmp
mov
cmp
jne
sub
sti
imul
mov
jne
cs
and
lods
jmp
adc
mov
inc
mov
js
mov
popa
pushw
mov
mov
ljmp
sub
jae
rcr
mulb
movsb
xchg
pop
mov
rep
sbb
sbbl
xchg
aam
lock
gs
jo
in
pop
pop
mov
sub
decl
cmp
imul
mov
add
and
mov
int
in
dec
jp
push
mov
adc
push
cld
or
lret
add
and
xor
jmp
cmp
pop
or
or
xor
mov
lcall
jbe
es
out
ja
pop
es
pop
repz
push
lret
ss
jo
leave
outsb
cmpsl
push
lock
in
sub
icebp
xchg
jle
fsubrs
shl
cld
lret
push
lea
fcompl
jb
loope
jb
jmp
cmc
xchg
and
sbb
or
jbe
cmpsl
shr
mov
cmpsl
pop
outsb
adc
cmp
mov
aas
pushf
and
cmp
jne
mov
pushw
mov
jns
stos
xor
lock
xor
inc
inc
lods
lods
and
adcb
aam
mov
inc
pushf
repnz
jne
aas
and
jb
cmp
push
mov
add
shlb
cmp
ja
or
push
mov
jecxz
dec
les
aad
stc
jo
ds
leave
adc
pop
dec
xor
inc
mov
add
inc
insl
mov
mov
or
je
mov
inc
je
mov
dec
je
mov
jl
mov
mov
ret
rolb
jne
xchg
adc
cli
movsb
fdivrl
mov
clc
adc
jp
mov
xchg
mov
inc
iret
dec
push
cmp
xchg
ret
xor
and
mov
mov
rorb
cli
adc
mov
sbb
sub
out
ret
lret
xlat
outsb
add
gs
loope
xchg
repnz
add
mov
lahf
push
push
xchg
into
adc
mov
or
inc
jl
aam
ja
inc
push
cmp
aam
sub
xor
clc
out
js
clc
or
jl
mov
dec
cmp
jl
jmp
add
sti
movb
mov
and
std
mov
xchg
jne
pop
xlat
ret
inc
daa
cmp
jge
add
add
add
stos
or
incl
je
bound
add
push
mov
neg
jmp
mov
jg
or
jo
loopne
xchg
push
mov
mov
push
sbb
mov
inc
dec
mov
clc
dec
jg
dec
mov
stos
cmp
jne
pop
pop
aam
mov
lock
mov
mov
jle
cli
mov
jl
mov
mov
adc
push
sub
or
jne
es
add
aas
into
mov
pop
mov
cmp
fcoml
add
fdiv
addb
repnz
insb
into
jge
movzwl
iret
icebp
or
jae
xor
imul
std
and
and
mov
push
scas
sub
adc
add
mov
or
or
mov
add
sbb
add
loopne
call
or
shl
cld
xchg
idivl
icebp
xor
scas
aam
jl
dec
inc
dec
inc
dec
lods
or
xor
xor
jge,pt
nop
jo
ret
decb
in
std
mov
aam
mov
stc
std
jl
mov
fcomps
pop
sbb
pop
cmp
xor
stos
jmp
jmp
mov
loop
mov
adc
pop
pop
inc
clc
dec
lret
sub
push
mov
mov
mov
rorb
jbe
sub
stos
lea
add
leave
mov
mov
mov
rcl
dec
push
loopne
in
cli
adc
lahf
add
xchg
jmp
push
jge
add
scas
je
mov
dec
pop
div
mov
adc
test
jne
sbb
adc
imul
jmp
adc
sti
add
js
js
je
inc
jne
pop
pop
test
ret
inc
repz
or
repnz
push
cmp
cs
mov
jl
mov
sbb
inc
je
inc
cmp
push
add
or
or
add
jne
jle
movsl
loop
loop
mov
test
jl
jbe
mov
and
inc
add
and
and
adc
and
sub
inc
sub
sub
scas
xor
sbb
and
sub
jae
outsl
adc
xor
dec
xchg
jmp
sub
xor
andl
outsl
repz
inc
outsl
sbb
insl
inc
push
dec
xchg
and
and
add
and
inc
push
repnz
das
std
push
cltd
add
call
inc
inc
push
sub
je,pn
enter
imul
adc
lahf
add
out
fabs
push
mov
mov
ljmp
or
fstps
mov
testb
mov
or
mov
lcall
call
mov
sbb
inc
sub
nop
shr
and
add
push
outsl
mov
stos
mov
add
jns
pushl
into
push
insl
push
cmp
pushf
or
cmpb
mov
and
dec
js
decb
and
pop
data16
fisttpll
or
leave
jmp
mov
add
faddl
je
notb
adc
ljmp
push
out
or
fs
insb
call
add
cmp
stos
ds
je
das
jo
out
into
neg
sbb
or
or
jge
das
jo
outsb
adc
jl
mov
filds
jl
sbb
jae
dec
add
fisubrl
loopne
push
in
insl
or
and
pop
or
mov
aaa
jle
sbb
lcall
sbb
sub
push
pushf
and
jne
dec
sub
cmp
cwtl
call
aas
and
sub
ja
inc
ljmp
enter
cmpb
sub
adc
divl
pop
jmp
icebp
pop
pusha
sub
jecxz
jb
pop
inc
mov
push
jns
mov
fnclex
fldcw
cmpsb
outsl
dec
outsl
mov
ljmp
lods
or
pop
inc
cmp
outsl
out
cmp
or
adc
ret
cmp
icebp
je
and
fistpll
cmc
jo
add
ret
jne
mov
sahf
jmp
inc
push
aam
fs
add
loopne
adc
aas
jmp
fstpt
imul
add
test
insl
and
push
push
add
out
int
cmp
mov
ljmp
pminub
inc
dec
add
fldpi
ljmp
loopne
incl
push
push
inc
imul
push
cmp
push
nop
jb
aaa
add
sub
out
rcr
mov
cmp
sbb
mov
rcll
push
xor
push
pop
fists
add
or
pop
lock
mov
mov
and
das
xor
aam
fldt
xor
fwait
push
push
fldcw
mov
out
add
mov
jle
ret
or
mov
sub
jb
fwait
pop
pop
adc
fnstenv
divl
push
adc
and
push
mov
hlt
mov
dec
or
or
sarl
dec
or
cmp
inc
stc
jmp
adc
inc
sub
jae
movzwl
jmp
mov
add
shrb
pusha
ljmp
dec
shr
add
std
lret
js
xchg
fildl
xor
fstpl
fwait
sbb
pop
arpl
nop
call
dec
outsl
and
jne
cli
pop
mov
xchg
clc
mov
jo
lea
ds
mov
loopne
xor
mov
push
cmp
fnstcw
cld
call
popa
mov
push
enter
loopne
xchg
add
mov
jg
shl
testb
nop
add
or
xchg
jne
out
das
xchg
push
push
push
cmc
jb
xchg
div
jb
pushf
jg
add
add
aam
icebp
maskmovq
testl
ja
daa
loope
jb
or
ja
sti
sti
xchg
push
imul
sarb
pop
inc
ja
sbb
pop
add
xchg
sub
divps
dec
incb
jne
into
dec
mov
dec
cltd
push
add
idiv
imul
in
jbe
aas
add
sub
ds
ds
add
pop
ret
inc
sbbl
sub
rcrl
sub
pop
pop
in
and
xchg
popa
shl
dec
call
cmp
jecxz
int3
push
clc
hlt
mov
push
insl
or
push
outsb
je
pusha
and
jb
pop
inc
cmpsb
dec
or
es
stc
mov
add
jl
addl
sbb
into
add
and
pop
lock
rorb
xchg
inc
data16
insl
out
sahf
decw
cmpl
fs
jae
scas
push
fcoms
lcall
pop
test
shl
cmp
xchg
sub
xchg
sub
lds
mov
push
ret
lcall
enter
cmp
lods
dec
dec
mov
fdivrl
sbb
inc
jmp
adcb
and
mov
lcall
hlt
call
push
push
mov
je
je
fldt
cmp
pop
mov
cmp
clc
xchg
cld
mov
movsl
sub
scas
mov
imul
addr16
mov
push
and
fcomp
test
lods
lahf
jnp
enter
lea
jle
int3
or
cwtl
mov
pop
inc
add
pop
cmp
add
je
pop
aas
icebp
in
jp
mov
dec
push
rorl
aam
jle
insb
in
call
inc
xchg
mov
inc
pop
jbe
loopne
rolb
pop
inc
fstps
aad
cmpl
adc
pusha
aas
clc
imul
adc
push
sti
je
inc
rolb
cwtl
cld
inc
jo
inc
hlt
jg
and
mov
add
out
out
fidivl
add
push
lea
or
lahf
repnz
or
mov
in
add
jecxz
lret
in
push
push
in
jge
call
ljmp
ljmp
adc
insb
fidivl
mov
addr16
cltd
into
adc
cmpl
push
inc
push
or
fldt
call
mov
test
stos
mov
xchg
push
mov
test
addb
mov
mov
inc
lds
jne
xchg
sar
cmpsl
xor
sbb
mov
pusha
cmpl
testb
push
sub
adc
push
fidivl
push
add
dec
icebp
cmp
call
add
test
out
ret
aaa
into
add
enter
in
cmp
in
cwtl
jl
xchg
addr16
xlat
in
and
enter
mov
popa
adc
in
jg
and
cmp
aad
mov
or
and
xor
in
je
mov
in
jne
dec
cmpb
jne
push
add
cmp
enter
mov
ret
insb
or
inc
jo
out
jns
add
add
xor
rcrb
add
in
mov
add
data16
aam
in
xchg
xchg
ds
pop
jo
xor
insl
mov
jb
loop
pop
incl
in
movsb
xlat
js
add
loope
xorb
inc
dec
sbb
and
mov
daa
jmp
pop
cmp
adc
movsl
mov
cmp
jge
mov
jnp
pop
aam
lahf
sub
jae
adc
add
jne
jge
dec
cmpsb
xchg
xorb
dec
mov
sbb
fidivs
outsb
andb
cmp
test
or
or
or
testb
add
out
add
add
or
or
jns
xchg
outsl
pushf
leave
shrl
cs
out
mov
lea
imul
lea
shrb
mov
xor
jo
enter
sub
fyl2x
mov
mov
jne
pop
testl
pop
bound
adc
and
fcomps
scas
nop
out
aam
mov
hlt
dec
or
sbb
xor
dec
add
sub
pushf
mov
dec
in
leave
mov
xor
dec
add
jmp
out
aad
shl
add
sub
cld
dec
xlat
into
push
leave
sbb
mov
and
and
pop
sub
scas
dec
mov
ss
je
xchg
dec
or
stos
adc
inc
mov
mov
dec
jg
fsubr
inc
mov
je
or
stc
fistps
je
jmp
sub
je
pop
je
jmp
nop
push
jp
mov
fdiv
fwait
arpl
fisttpll
jl
add
add
add
sbb
hlt
add
pop
in
xor
mov
pushl
cmp
pop
mov
mov
sar
mov
adc
mov
add
add
out
or
jle
pop
cmp
rorb
adc
adc
push
enter
popa
out
cwtl
xor
jns
in
pushf
lret
xchg
dec
jb
in
cmp
mov
sahf
dec
pop
jmp
mov
incb
fs
inc
aas
pop
addl
sbb
adc
jge
inc
xchg
or
sbb
xor
adc
nop
lret
movsb
or
and
cltd
mov
scas
xor
xchg
lea
and
xchg
add
loopne
add
sti
out
jmp
add
sbb
cmp
or
or
mov
sub
in
rorb
repnz
add
and
xchg
fistpl
mov
inc
mov
gs
jmp
test
pop
xchg
or
or
jge
dec
dec
adcb
je
in
sbb
dec
and
leave
mov
sub
movsl
xchg
inc
push
push
jmp
sbb
add
ljmp
ds
inc
test
ror
adc
mov
dec
das
push
dec
add
dec
adc
push
add
pop
dec
dec
sub
mov
mov
dec
push
sub
inc
ret
ja
or
mov
sbb
outsb
lea
popa
shll
mov
aaa
stos
or
rcl
adcb
pop
test
lahf
add
xor
je
sbb
loope
mov
cmpsl
hlt
push
sub
jbe
dec
pop
scas
aam
loope
push
addl
push
fwait
add
scas
add
or
push
pop
fsubrp
xor
dec
stos
mov
adc
mov
or
jmp
int
sub
idiv
sub
sbbb
cmpsb
mov
push
sbb
mov
fsubrp
notl
add
xchg
cmp
insb
cmp
nop
inc
inc
xor
mov
or
push
inc
cmp
cmpsb
movsl
mov
sub
lock
push
push
mov
test
leave
popa
gs
xchg
sub
sbb
push
mov
xor
mov
fwait
mov
pop
pop
in
cmp
push
inc
and
pop
inc
inc
mov
mov
subl
notrack
sub
je
dec
je
sub
ficoms
pop
imulb
je
adc
push
push
mov
mov
and
push
inc
mov
jle
fadd
push
pop
push
mov
lods
out
or
add
mov
cmp
jg
jl
pop
lock
cs
call
mov
mov
mov
mov
jo
mov
mov
movaps
fnstenv
pop
scas
les
jne
lods
cmp
or
push
and
ret
add
jne
push
outsl
incl
cmp
cmp
jg
jno
cmpsl
and
fsubl
pop
test
cltd
xor
sub
add
add
shlb
incb
add
adc
pop
cld
jmp
in
jecxz
gs
packsswb
xor
fadds
loopne
push
push
xor
ja
jecxz
and
shlb
push
or
test
add
adc
lahf
addb
cmp
inc
push
test
ds
loopne
jne
imul
adc
rolb
dec
dec
jbe
push
mov
and
push
in
pop
jae
jmp
cwtl
adc
cmp
xor
mov
jge
push
jmp
hlt
lods
subl
insb
scas
xor
mov
cmp
je
sbb
cmp
adc
add
add
lock
cmpsb
roll
add
cs
shll
push
lods
lock
out
mov
push
hlt
cmp
dec
push
mov
arpl
ss
repnz
dec
dec
repz
sbb
jmp
pop
pop
pop
lods
cmpl
decb
push
jge
add
fisttps
shrb
in
sbb
push
fstps
fmull
out
mov
cmp
cmpb
jle
and
fs
add
xchg
mov
add
or
add
ja
or
bound
or
xchg
leave
mov
ret
in
xchg
xor
jle
xor
mov
and
jmp
out
scas
jne
cmpb
fcmovu
jne
sarl
add
pop
push
mov
mov
mov
das
fbstp
fcoms
das
xor
xchg
repnz
out
loope
lds
dec
jb
add
stc
or
enter
fdivrs
adc
ret
mov
test
jge
add
jo
or
test
iret
incl
or
mov
adc
lock
inc
and
jmp
push
xchg
cld
jnp
les
add
push
add
add
or
data16
shll
and
add
xor
xor
mov
or
or
push
or
and
in
add
pop
inc
or
inc
inc
push
add
test
add
push
test
shll
data16
outsl
inc
xorl
ja
jne
sbb
jmp
jnp
js
pop
pop
sub
add
lods
dec
lock
add
pop
sub
insb
mov
or
xchg
pop
and
adc
scas
adc
pavgb
into
roll
sub
xchg
cmp
inc
jl
pop
pop
add
and
jno
icebp
dec
sbbb
cltd
out
fsts
cmovs
addr16
cmp
ret
jne
dec
mov
clc
lds
add
daa
fst
fcomps
fistl
fsubrl
or
sahf
mov
lret
fs
adc
jle
fstp
push
dec
dec
ficoml
push
add
daa
loopne
jmp
sbb
mov
sub
jb
or
sub
lret
xchg
pop
jno
inc
testb
xchg
rcr
or
cwtl
and
xchg
jp
adc
dec
pop
push
xchg
pop
mov
sub
or
scas
xor
push
inc
pusha
or
push
addl
push
les
push
adc
loope
or
fidivl
xor
dec
test
lock
push
pop
mov
dec
push
add
iret
fwait
xor
rolb
shrb
mov
push
ljmp
or
lret
jl
imul
shl
push
cmp
mov
inc
addr16
sti
or
xchg
sub
fidivrl
pop
shlb
in
fmull
add
into
shlb
in
in
xchg
out
dec
call
rolb
or
xlat
add
lret
ds
jle
xchg
icebp
add
idivb
fiadds
fucomi
push
jl
je
xchg
cmp
add
push
into
pop
mov
fwait
js
fsubs
xchg
sub
pusha
incl
cmp
pop
mov
or
add
inc
jb
cmc
mov
mov
pop
inc
in
sub
popf
add
mov
inc
mull
pusha
cmp
mov
fidivrl
add
or
cmp
add
cmp
das
mov
sbb
xor
scas
movl
push
push
push
add
cmp
sub
popf
test
inc
dec
fdivrs
outsb
movsb
enter
mov
mov
jne
lahf
pop
dec
or
or
andb
or
test
push
add
jb
repz
add
adc
inc
push
incl
inc
je
sub
je
scas
ret
add
orl
mov
out
cs
loope
mov
pop
push
int3
cmp
push
loope
pop
lock
add
loopne
cmp
sarl
add
mov
jo
cmovp
jle
cmp
enter
adc
ret
add
push
orl
mov
jmp
pop
je
jne
xor
jmp
addb
in
in
jle
movsb
push
adc
ret
xor
out
inc
es
addr16
inc
rorb
pop
add
sub
xlat
add
jbe
out
lahf
decl
test
cld
call
sbb
mov
xchg
fcmovnbe
lcall
push
cmpl
jns
xor
and
sub
xchg
ficompl
cli
sahf
test
inc
clc
xchg
or
add
lods
mov
scas
adc
icebp
cmp
pop
loop
repnz
les
popa
fnstsw
in
mov
pop
cmpb
je
mov
lock
iret
addb
imul
xchg
add
iret
dec
jmp
mov
cld
movb
jae
and
mov
hlt
push
dec
sbb
mov
add
mov
push
enter
push
lea
sub
ret
jnp
mov
popf
mov
add
push
sub
pop
dec
mov
test
call
pop
mov
mov
lahf
sbb
xchg
mov
push
or
out
mov
or
adc
pop
mov
div
and
inc
sub
ret
jno
aam
xor
add
jae
sub
sbbl
xor
push
fs
mov
inc
pop
sbbl
push
pop
xchg
lea
rorb
test
sub
sub
rcl
andl
pop
dec
jp
or
imul
push
les
andl
push
mov
stos
pusha
test
ja
mov
mov
mov
test
leave
mov
inc
mov
mov
fwait
dec
cmpb
std
decb
je
push
or
push
out
xchg
push
arpl
sub
xor
stos
lock
jmp
cmp
jg
cmp
insb
test
ja
adc
mov
pop
addr16
scas
xchg
aam
sbb
mov
lea
clc
cmpl
iret
shr
ret
pop
pop
aas
hlt
decl
push
aas
pop
add
dec
je
push
adc
push
adc
sub
jb
mov
sub
sub
nop
and
adc
push
ljmp
jbe
or
pop
adc
mov
ret
pop
aaa
loopne
and
mov
mov
lahf
pop
add
mov
add
movsl
icebp
loop
cmp
data16
push
push
or
hlt
and
mov
push
in
push
loopne
sbb
xor
repnz
loopne
les
xor
pop
movsl
loopne
loopne
cmp
call
and
insl
add
cmpxchg
cli
roll
jns
lock
into
adc
sbb
dec
pop
in
cs
push
push
cmp
je
jmp
sub
aaa
jmp
xor
sti
aas
xchg
das
and
add
mov
add
push
xor
shll
or
or
inc
dec
rorl
repnz
xchg
push
push
mov
pushf
push
adcb
mov
jb
out
mov
or
cld
sub
pop
insb
shll
cli
je
rolb
inc
fadds
insb
sub
push
or
insb
sub
and
mov
or
rcll
loopne
stc
rclb
dec
loopne
fs
xor
or
lea
xlat
pushf
add
lock
bound
mov
repnz
rorb
les
enter
loopne
xchg
int3
ror
out
cmp
dec
in
mov
pop
jnp
nop
pop
js
fs
xor
in
mov
pop
inc
movsb
nop
add
test
mov
mov
mov
xchg
add
cmpl
std
xlat
xchg
or
sub
out
push
lods
stos
fistpl
and
and
in
addr16
xchg
lock
ret
sahf
insb
pusha
pusha
adc
mov
push
xchg
pop
addb
enter
test
and
rcrl
cmp
hlt
mov
add
mov
cvttps2pi
sbb
mov
movsb
inc
adc
test
mov
sub
int
sti
das
aam
inc
xor
cmpsl
mov
sub
add
and
in
sbb
lock
adc
lods
pop
inc
nop
nop
rcrl
adc
inc
aaa
cmp
pop
sbb
adc
and
xor
enter
dec
daa
pusha
insb
jmp
dec
and
fcomps
or
loop
mov
lahf
dec
adc
rorb
les
sbb
add
push
bnd
dec
movsl
dec
push
adc
sub
mov
loop
add
data16
and
pusha
into
adc
xchg
or
dec
mov
dec
jmp
dec
adcb
or
and
mov
into
and
jns
sti
ja
clc
dec
or
inc
data16
add
adc
adc
pop
add
jbe
test
je
mov
outsl
fcomps
cmp
daa
push
sub
pop
lock
jle
adc
aam
popa
push
outsl
cmp
and
push
pop
xchg
mov
sti
jl
aaa
or
popf
or
xor
jge
ds
mov
aaa
cmpl
imul
jl
sub
cmp
jge
jmp
mov
and
add
and
add
mov
das
subl
dec
orb
stos
aas
aaa
in
push
sub
inc
fwait
inc
dec
mov
movsb
cmp
jg
insl
jg
mov
andb
incl
add
lcall
mov
pop
or
int
jbe
sbb
int
jge
pop
or
mov
lret
outsb
pop
xor
ret
sub
xchg
nop
fst
fsubrs
sbb
fldt
aas
inc
ja
mov
sbbl
adcl
out
out
pusha
cltd
xchg
jae
xchg
xchg
das
movsb
push
adc
pushw
ja
stc
outsl
push
xchg
mov
add
adc
cmp
jge
xchg
xor
mov
adc
mov
fiaddl
xchg
popf
lock
adc
lds
sub
dec
jmp
icebp
loopne
aas
pop
add
shr
in
xchg
cmpb
pop
add
xchg
mov
xchg
mov
and
sbb
sbb
adc
fs
inc
adc
aad
in
jle
lcall
int3
push
cmpsl
ret
clc
xor
mov
ffree
dec
inc
add
or
pop
mov
vaddsubps
repnz
vpcmpeqd
add
push
xor
bound
int3
cmp
inc
sbb
inc
and
inc
imul
or
xchg
je
inc
imul
or
test
daa
mov
sub
xor
or
je
nop
pop
add
inc
push
pop
xlat
xchg
jl
add
jl
stc
xorb
and
xor
incb
pop
pop
fstpl
rcrb
xor
mov
fadds
subl
lahf
jge
rcrb
cmp
loopne
fwait
pusha
sub
aaa
push
mov
sub
in
fdivs
inc
mov
mov
stos
sbb
lret
in
mov
int3
cmp
jge
pop
or
push
fidivl
mov
clc
pop
fadd
out
ja
nop
cld
orb
je
sbb
daa
pop
fs
add
dec
pop
mov
cmp
inc
add
mov
push
lock
enter
dec
mov
adc
or
add
mov
mov
or
add
add
test
movsl
cmp
inc
fisttpl
sub
mov
push
cmp
mov
mov
sbb
iret
rolb
popa
mov
mov
inc
inc
cmp
test
shll
sub
mov
setg
mov
fmull
out
inc
cmpw
xchg
rorl
mov
jne
jmp
push
mov
push
pop
pop
dec
inc
shlb
pusha
rcll
pop
dec
add
xor
cld
dec
pusha
dec
jne
push
addb
mov
mov
xchg
mov
mov
xor
mov
rorb
cli
push
lock
xlat
add
pop
cwtl
mov
add
push
inc
call
sbb
mov
mov
mov
jle
cs
push
jg
in
dec
out
push
sbb
subb
sbb
sbb
inc
mov
inc
loopne
test
movsl
dec
aam
js
aam
cmpl
mov
push
fstps
sub
jb
sarb
sub
mov
push
sarb
sub
mov
or
test
enter
xchg
add
test
mov
sbb
jl
and
nop
dec
sahf
mov
ret
adc
pop
jns
ds
mov
pushl
jbe
sbb
push
mov
stos
fnsave
add
in
leave
lds
pushf
lock
xor
inc
add
sub
in
push
loopne
push
ja
insl
das
fs
aaa
xor
insl
add
fs
mov
popa
insl
pop
jo
push
inc
push
mov
sbb
test
push
cmp
ss
pop
or
and
push
pop
jbe
in
jp
aaa
je
mov
enter
mov
in
rolb
mov
in
mov
mov
mov
push
or
sub
sbb
shlb
mov
mov
inc
pop
sub
mov
mov
sbb
movsb
inc
cmp
or
mov
loopne
hlt
or
xor
or
js
add
shl
pop
pop
push
out
push
test
sbb
fcompl
out
inc
lods
mov
sub
sub
loopne
and
pop
cmpsl
inc
imul
push
jo
inc
pop
inc
test
js
aad
lock
out
add
mov
xchg
inc
gs
sbb
adc
mov
lea
out
mov
lahf
jle
push
push
les
stos
mov
or
in
ret
adc
das
notb
jne
mov
loop
and
pop
lcall
or
push
test
filds
inc
jmp
fisubs
pop
lar
sahf
mov
xchg
lock
or
fmuls
push
incb
sbb
push
pop
cld
mov
cmp
jne
sbb
cmpsl
jl
mov
mov
dec
mov
sbb
or
inc
or
jl
pushf
loop
jbe
mov
and
dec
and
shll
es
add
add
fdivs
adcl
sbb
sbb
pusha
test
mov
je
mov
mov
jmp
std
add
sbb
mov
rclb
jno
pusha
add
jecxz
add
or
adc
sahf
rorl
push
xor
lock
mov
jl
test
jbe
push
push
shrl
mov
dec
sbb
inc
aaa
ret
jb
mov
push
dec
jb
in
dec
clc
pop
dec
or
sbb
enter
and
adc
cmp
aaa
pop
call
cmp
test
test
sub
or
cmpsb
loopne
adc
pushf
mov
xchg
ret
push
out
scas
ljmp
jmp
adc
add
clts
or
mov
imul
xor
mov
cmp
out
in
repnz
cmp
cmp
lsl
mov
inc
sbb
and
pop
or
decl
cmpl
ffree
ficoml
clc
inc
jo
stc
ret
mov
ret
push
or
cwtl
pop
xorb
mov
cpuid
clc
mov
aas
pushf
or
incl
mov
call
and
inc
into
cmp
test
jmp
pusha
inc
and
lea
mov
fisubs
movsb
lock
sub
fmull
mov
pop
jg
sbb
cmp
fldenv
test
enter
or
or
jne
lret
incl
mov
add
outsb
or
mov
clc
test
div
push
insb
iret
sarl
push
rolb
xlat
jl
add
rorb
enter
sahf
out
pushf
mov
nop
repz
mov
out
iret
xor
push
inc
mov
cmp
jns
js
test
jns,pn
repnz
jle
cmp
push
dec
decb
inc
in
jns
jnp
push
movsb
xor
out
and
sbb
dec
mov
es
or
enter
jmp
or
mov
push
lock
jmp
fcomi
push
clc
shrb
hlt
push
dec
test
fmulp
cmp
in
inc
in
call
jl
in
test
clc
pushf
mov
fsubs
jae
and
mov
jbe
in
jns
enter
fcoml
mov
bnd
sub
lods
in
jns
lods
cs
test
inc
test
mov
leave
jae
add
mov
ja
dec
nop
push
js
inc
aam
leave
mov
test
andb
jl
pop
pop
push
cltd
add
ficoms
inc
sbbl
enter
lcall
std
mov
or
adc
mov
lock
pop
fnstcw
into
and
iret
sub
add
adc
dec
xchg
pop
in
in
nop
out
imul
xchg
dec
xchg
cmpsl
nop
add
mov
sbb
add
test
rclb
pop
add
jb
xchg
nop
mov
int3
cmpb
es
or
jo
add
pushl
mov
sub
mov
jge
dec
mov
cmpb
sarb
mov
test
lret
push
cltd
pushf
shl
mov
nop
ja
xor
add
mov
pop
enter
cwtl
xchg
mov
push
pushf
cwtl
xchg
mov
cmpl
add
test
xchg
inc
sbb
adc
movsb
xchg
std
inc
dec
scas
aam
ret
dec
pusha
dec
outsb
mov
or
or
mov
enter
dec
or
and
sbb
das
pusha
das
mov
pop
and
cmpsl
das
inc
ret
add
faddl
sar
roll
xlat
cli
das
inc
pop
leave
jo
add
shlw
and
rorb
sub
ds
in
jno
inc
ret
or
jecxz
jl
data16
ds
daa
stc
pop
adc
sbb
adc
mov
rorl
std
clc
xlat
mov
ss
or
push
imul
ret
push
fadd
imul
jb
lcall
add
xor
or
add
leave
sbb
inc
pop
pop
or
add
scas
mov
pop
lods
out
shlb
stos
nop
nop
or
jb
mov
roll
cld
imul
cmp
xchg
inc
cli
sub
mov
xchg
add
ret
and
push
iret
push
loopne
mov
and
pushf
leave
and
ss
adc
mov
xchg
movsb
sbb
leave
and
dec
test
lods
and
dec
xor
leave
mov
mov
and
int3
shlb
and
aam
fmull
dec
enter
mov
in
shlb
cld
aam
rorl
test
sbb
pop
es
push
ret
es
in
dec
es
es
je
test
sarb
gs
jne
mov
or
push
jns
test
dec
add
outsl
je
stc
sti
repnz
fs
jne
das
dec
jne
inc
imul
imul
jb
in
xchg
add
jb
insl
jo
inc
jb
insl
push
inc
xchg
mov
cmp
mov
inc
popa
je
and
outsl
enter
insb
inc
jae
pop
inc
jns
add
pop
outsl
repnz
inc
pop
out
hlt
test
ljmp
mov
mov
popa
xchg
pop
jnp
jnp
mov
and
pop
es
lret
sbb
mov
enter
pop
enter
add
inc
add
cmp
test
push
enter
push
movsb
push
jmp
mov
fbstp
fs
sub
inc
push
adc
push
ret
inc
jne
dec
inc
cmp
lods
testb
addr16
adc
inc
lods
lods
or
shl
and
and
and
push
push
push
inc
mov
sarl
or
mov
add
test
test
in
movl
inc
ret
fldt
push
lret
fs
push
lret
jb
jb
mov
mov
fst
cmp
jnp
sbb
push
mov
lret
pop
mov
cs
fs
jl
jl
sbbl
mov
jns
mov
gs
push
iret
rolb
in
jb
cmp
dec
int3
dec
int3
or
add
fsubl
sbb
dec
insl
jo
mov
or
adc
iret
sbb
sbb
jbe
pop
test
idivb
mov
xor
mov
jg
inc
imul
and
aas
pusha
xor
int
adc
jns
nop
dec
cld
idivb
loop
add
push
xchg
in
dec
sti
inc
pop
in
add
in
xorl
add
nop
lock
call
and
icebp
es
inc
dec
jb
movsb
and
adc
repnz
jo
into
pop
in
add
and
dec
into
add
test
fmul
mov
push
enter
iret
dec
and
jb
test
daa
inc
mov
nop
adc
addl
cs
add
dec
sub
add
mov
clc
sub
test
pop
push
scas
rcll
dec
idivb
dec
je
sbb
int
imul
mov
std
add
enter
cmp
push
daa
fistps
cmp
faddl
inc
pop
pop
stos
hlt
mov
xchg
jl
int3
lret
push
stc
xor
in
mov
in
stc
add
call
jl
in
inc
adc
mov
roll
jae
fadds
xchg
loopne
jmp
mov
push
int3
or
add
les
fcomp
enter
pop
js
jl
shrb
rcrb
enter
loopne
or
pop
es
sub
das
sub
bnd
pusha
adc
fwait
ljmp
imul
or
adc
pop
in
dec
daa
iret
cmpsb
rcrb
xor
lods
rorb
add
mov
add
push
xchg
sbbl
lahf
ret
xor
iret
pop
loope
jge
fisttps
lret
cmp
xor
test
jnp
mov
add
xchg
cmp
mov
adc
pusha
test
subb
fs
fsubl
out
popa
dec
outsb
call
movb
add
push
int3
mov
pop
andb
data16
push
pmaxub
push
xchg
les
imul
jle
ss
and
movzwl
and
or
imul
lea
or
inc
or
inc
add
rcll
test
aaa
jnp
sub
xchg
inc
sub
inc
pop
pop
mov
dec
jne
daa
in
cmpsl
jmp
inc
mov
and
sbb
sub
repz
dec
pop
ret
add
push
lret
in
test
cmp
in
out
cmp
insl
fdivl
pop
sahf
mov
push
cld
scas
les
addl
cmp
cmp
adc
or
or
pop
pop
mov
jne
mov
out
addr16
jmp
sub
or
or
sbb
div
and
aas
xorl
pushf
add
in
mov
cwtl
and
or
xchg
mov
into
insl
jnp
mov
push
jne
jb
jl
and
std
jno
test
mov
je
movsb
sub
add
sub
or
mov
adc
fmull
nop
add
call
xchg
scas
jne
lret
std
stc
push
push
jno
call
add
adc
mov
adc
mov
adcb
in
lcall
leave
adcl
bound
xchg
dec
imul
inc
jl
jmp
push
add
int3
nop
mov
sub
inc
loopne
add
inc
addb
mov
decl
push
cmp
jns
test
sar
pop
add
or
dec
lahf
inc
mov
cld
ja
add
push
lock
cmp
xor
cld
imul
mov
aam
imul
jmp
add
and
add
call
and
cmp
je
sub
orb
jne
push
popa
sub
sub
or
shll
hlt
inc
push
jecxz
cltd
mov
test
enter
mov
loopne
sbb
sbb
push
add
and
push
in
sti
outsl
test
mov
test
mov
or
or
je
and
inc
add
and
cli
adc
cld
adc
mov
popf
xor
rcrb
inc
lock
xchg
or
bound
dec
sahf
inc
xchg
loope
lock
sbb
arpl
call
sbb
sub
and
mov
inc
mov
inc
mov
pop
jno
lea
add
out
xor
movq
xor
xlat
xchg
fwait
cmp
pushf
adc
shll
cltd
xor
addl
testl
sarl
ds
test
and
or
cwtl
adc
sbb
and
or
pop
xchg
and
xor
fistl
push
loope
push
mov
xor
inc
sub
faddl
and
cs
mov
stos
imul
push
xchg
add
dec
loopne
cmpsb
push
inc
nop
xlat
xor
leave
loopne
and
rolb
aaa
stos
repz
imul
ss
jns
repz
xchg
mov
repnz
outsb
in
imul
into
repz
dec
mov
add
shlb
cmp
dec
out
or
les
call
jge
adc
dec
cld
mov
mov
add
xor
add
clc
fldcw
add
and
mov
cmpsb
insb
fs
jo
inc
fnstsw
dec
lock
add
leave
push
or
enter
movsb
test
sbb
sbb
sub
add
in
and
dec
push
loopne
ja
cmp
in
leave
and
fmull
mov
enter
aaa
fmul
xor
test
mov
or
lret
xorb
pop
mov
sbb
in
int3
jne
out
mov
outsb
int
jge
in
enter
test
ljmp
jo
loop
adc
rclb
add
mov
mov
test
jno
inc
je
test
inc
jbe
repnz
adc
add
mov
test
cmp
pop
mov
shr
imul
jo
inc
jnp
sub
daa
sahf
mov
iret
fdiv
adc
fmull
mov
add
cmpl
cmp
mov
jae
mov
leave
and
mov
je
sbb
mov
xlat
xchg
cmp
dec
push
in
xor
shrb
cmp
xor
nop
outsb
mov
or
adcl
add
leave
sbb
cwtl
jmp
sbb
fsubl
dec
mov
jmp
pushf
nop
nop
inc
and
outsl
xlat
sub
ret
adc
dec
xchg
inc
pop
adc
mov
shl
mov
push
js
hlt
or
pop
add
fstpl
sub
mov
inc
pop
test
and
jns
sbb
loope
add
xlat
adc
lods
shr
push
fwait
inc
push
adc
ret
loopne
out
xor
mov
loope
mov
in
loope
push
xor
and
aad
loop
inc
cmpsb
and
fs
loop
pop
adc
jne
push
push
loopne
test
dec
in
push
in
loop
les
cltd
xchg
movl
mov
jge
dec
repz
mov
hlt
adc
ljmp
sarl
sbb
push
inc
out
pop
loope
cmp
popa
in
cwtl
mov
in
dec
xor
add
hlt
dec
cmp
ret
mov
fisttpl
orb
inc
cmp
fldt
cmp
adc
pop
in
sbb
rcr
gs
loopne
mov
test
and
aaa
or
fsubs
fdivs
and
aam
add
jg
shr
push
int
xor
roll
xor
test
xchg
rorl
pop
and
dec
repz
mov
pop
vpsrad
and
jns
ds
inc
arpl
inc
jnp
xor
mov
push
ljmp
and
and
les
shlb
aaa
fmul
roll
dec
mov
fidivs
pop
arpl
mov
popa
call
sbb
and
daa
lods
test
popf
test
adc
shlb
aad
lcall
mov
fstpl
cmp
pushf
mov
dec
out
jno
and
ficomps
mov
xchg
popf
xchg
sbb
cmp
and
shl
nop
push
nop
pop
jns
cwtl
jmp
call
adc
and
cwtl
mov
lea
xchg
mov
addr16
push
shl
push
jb
mov
aaa
loopne
rolb
rolb
jmp
lret
mov
fistpll
xlat
inc
insl
jo
movsl
jo
test
mov
incb
fcompl
test
insl
popa
and
daa
pop
outsl
lret
inc
addr16
push
ds
gs
outsl
repnz
inc
outsl
jne
xchg
jb
outsb
arpl
cltd
sub
je
mov
pusha
ret
in
addr16
loopne
lods
adc
mov
mov
gs
outsb
pop
repnz
movsl
push
adc
push
outsb
imul
jo
orl
arpl
scas
xor
lock
inc
iret
push
ret
in
inc
inc
jns
push
outsl
jb
fcomps
inc
inc
pop
daa
mov
sbb
ja
mov
push
clc
nop
adc
test
jle
add
pusha
call
push
addb
mov
aad
fidivl
sti
dec
jae
pop
fs
push
loopne
mov
stc
xchg
insl
jb
lock
push
push
dec
leave
stc
or
fnstsw
loopne,pt
add
rolb
push
or
popa
add
xchg
je
pop
in
xchg
mov
rclb
and
rolb
je
in
and
daa
cld
inc
aam
in
shr
std
push
xor
xor
in
push
xchg
cmpb
inc
outsb
jns
push
xor
std
and
push
gs
cmpsb
dec
mov
fiadds
or
add
jle
sbb
ret
inc
sub
or
vpandn
xor
enter
test
mov
and
and
ret
or
jbe
jmp
cmp
mov
xorl
lock
or
inc
dec
cld
jle
shrb
jne
jmp
pop
jo
jb
call
sub
je
icebp
insb
pusha
push
or
pop
leave
js
adc
push
and
loop
xlat
sbb
pop
lds
xor
js
jge
cmp
pop
jae
add
pop
clc
adc
inc
sub
ror
sub
xchg
ret
mov
int3
jle
pop
add
imul
inc
dec
lea
xchg
fdivrp
loopne
ret
mov
addb
mov
mov
add
fwait
orl
add
ret
xchg
inc
pop
pop
push
push
pop
icebp
pop
aad
sti
cmpsb
std
imul
lds
lock
mov
or
xor
lret
in
add
add
adc
jno
push
jle
sbb
push
mov
mov
das
rcr
or
rorl
ret
xchg
lods
add
push
ret
jae
lods
jae
dec
jnp
ret
jnp
mov
test
aaa
cmpl
mov
pop
lahf
fistpl
pop
mov
loopne
std
cmc
adc
cwtl
push
dec
jb
or
xchg
lret
sub
jbe
mov
add
jle
sbb
inc
jle
cwtl
out
mov
push
xor
sti
cmp
cmp
setg
cld
fnsave
inc
mov
jno
push
fnstenv
in
movsb
leave
loope
out
dec
les
or
push
lods
sahf
push
in
out
xchg
cwtl
dec
aas
dec
pop
push
mov
adc
gs
adc
xchg
pop
xor
lds
cwtl
mov
out
sahf
xchg
cwtl
jns
inc
push
pop
push
mov
ds
mov
mov
mov
push
cmp
adc
aad
mov
adc
sbb
xorl
aam
das
sub
fistpl
loop
cmp
push
enter
sub
out
stos
pushf
pushf
faddl
shrd
scas
nop
xchg
xchg
xor
pushf
pushf
xchg
xchg
xchg
jmp
jns
and
lock
jns
cmp
aaa
ja
cs
cmp
sbb
sub
test
sbb
inc
or
in
dec
rcll
or
add
sub
insb
icebp
mov
icebp
jno
push
and
gs
insl
xchg
mov
pop
enter
stos
cwtl
ret
outsl
inc
dec
dec
dec
dec
pop
mov
jl
ds
cmp
jno
inc
cs
jge
dec
jo
outsb
mov
scas
ds
cs
xor
or
xor
sub
cs
ds
nop
repnz
lods
sub
cmp
inc
sti
dec
pop
mov
adc
sarl
mov
scas
ds
jo
add
jae
cmp
cmpl
jle
pop
fstpt
jae
mov
divb
mov
mov
inc
mov
jge
push
shl
add
test
mov
mov
in
bound
xchg
mov
scas
test
jg
mov
scas
add
add
mov
add
test
push
add
lcall
adc
loop
es
loop
lods
jne
xchg
movl
jg
mov
push
xor
push
sbb
dec
loope
cmpsb
fcomip
inc
fs
jo
jb
dec
add
pushf
jae
push
rclb
sahf
cmpsb
sub
ss
imulb
jmp
sub
xchg
push
imul
int3
pop
pop
mov
shl
pusha
add
jno
add
sbb
repz
or
ja
cld
test
pop
jbe
push
fadds
pop
fldcw
out
push
sub
or
ficomps
cmp
push
xchg
add
or
jns
in
xchg
inc
dec
or
scas
pop
dec
or
mov
inc
call
inc
push
or
mov
lret
mov
out
pop
idivl
add
pop
pop
leave
rcrl
clc
mov
push
push
movsb
test
int
imul
dec
adc
xchg
push
faddl
and
pop
sub
enter
aaa
leave
sbb
je
pop
add
inc
push
stc
ficoms
push
adc
jbe
jle
adc
xchg
mov
adc
lods
inc
mov
imulb
je
dec
lods
lcall
pop
xchg
push
fs
push
clc
lcall
in
or
data16
clc
jne
jns
mov
sbb
dec
adc
dec
jb
dec
fimull
js
xor
dec
nop
sbb
ficoml
in
shl
mov
adc
mov
or
addr16
pop
and
jb
jne
xchg
sub
aas
and
push
add
cld
scas
or
xchg
and
icebp
enter
divb
dec
cmpsl
into
ret
jb
hlt
pusha
xchg
add
adc
or
sub
leave
inc
sbb
jp
dec
in
push
jl
cmpsl
hlt
lea
outsb
loopne
push
roll
xchg
dec
lcall
adc
sub
test
cmp
fdivs
inc
call
loopne
pop
dec
orb
fwait
out
nop
movsl
ret
sahf
hlt
dec
ljmp
sbb
imul
add
js
pop
xor
mov
inc
dec
imul
or
sbb
inc
imulb
inc
sub
lock
dec
leave
movl
imul
stc
ljmp
sbb
add
lds
lods
aas
fbld
sbb
lea
sbb
push
loope
sti
jl
inc
xor
sbb
out
testl
lds
das
push
daa
sub
add
xchg
test
insb
jbe
call
or
mov
pop
rol
add
cmp
jmp
adc
xchg
aad
add
fisttpl
je
and
lret
jmp
pop
xchg
in
subb
xor
cmp
mov
sub
mov
fists
adc
inc
jae
cmp
sbb
pop
mov
stos
or
incl
and
xor
xor
dec
getsec
sub
das
lods
fnstcw
cwtl
or
data16
mov
sbb
out
cmp
and
outsl
push
loop
decl
loop
jge
sub
mov
shl
divb
sar
lea
or
sub
mov
xor
out
into
add
xchg
dec
xchg
add
sbb
mov
mov
inc
pop
mov
cmp
mov
mov
loop
pushl
mov
scas
rorb
inc
out
int
into
sub
add
or
adc
pushf
pop
fnstenv
push
fldl
add
mov
or
mov
test
test
add
adc
adc
adc
jmp
filds
lret
xchg
push
fnstsw
sub
incl
jle
mov
mov
loop
addr16
or
insl
or
mov
jle
and
pop
jle
mov
addb
ret
aam
popa
rolb
xchg
aad
je
filds
mov
sub
jg
dec
xchg
ret
popa
dec
inc
jne
aam
xchg
pop
cli
arpl
test
push
xchg
or
push
stos
dec
and
cwtl
and
pop
int
push
push
pop
stc
ret
movl
dec
or
sub
push
ja
pop
push
or
fwait
in
push
stos
or
lods
fstl
pop
out
sbb
mov
xchg
mov
jl
cmp
divl
das
and
add
outsl
xchg
inc
cwtl
or
push
jmp
out
or
adc
repnz
add
mov
rcr
in
mov
xor
in
test
hlt
clc
jmp
pop
sub
test
mov
lea
inc
add
add
mov
dec
sbb
pusha
sbb
mov
xchg
or
or
mov
into
and
aad
inc
mov
pusha
fistps
pushl
js
xor
sbb
push
jno
add
shrb
in
push
test
jno
mov
adcb
cmp
clc
int
cmp
inc
andb
stc
sarl
or
cmp
jecxz
popa
jns
xchg
and
and
mov
leave
inc
mov
and
bound
mov
clc
icebp
lock
sub
sub
call
out
adc
push
enter
sbb
inc
dec
jne
inc
imul
jnp
sub
dec
outsl
iret
enter
pop
cwtl
loopne
cltd
in
jo
arpl
add
in
or
pop
inc
mov
mov
xchg
mov
adc
dec
jae
cs
push
push
add
or
pop
js
pop
and
xchg
inc
dec
scas
mov
out
mov
and
or
xor
push
mov
rcr
imul
ja
jge
daa
daa
dec
clc
shl
pushf
xor
jmp
and
lahf
mov
mov
pusha
or
sbb
inc
push
push
out
adc
andnps
sbb
inc
sbb
cltd
xchg
sbb
sbb
ljmp
pop
add
aas
in
lock
in
ss
and
add
mov
fdivs
xchg
push
xchg
fdivrs
and
pop
in
push
in
pop
xor
ds
jns
jne
inc
shll
and
add
nop
pop
adc
pushf
and
inc
push
lock
in
in
cmp
push
inc
push
push
divl
ret
mov
lds
push
jne
cmp
out
in
movsl
sbbb
add
dec
mov
cmp
cmpsb
fwait
cld
adc
enter
scas
fisubs
sub
ljmp
and
and
pop
and
pop
std
lock
movsb
and
pop
or
and
cmpsb
and
out
or
lret
je
add
lret
and
mov
adc
and
or
dec
or
loopne
dec
xor
hlt
push
int3
push
orl
sbb
clc
add
call
lret
out
mov
insl
sub
es
fcompl
lods
in
call
pop
ret
add
in
arpl
xchg
or
out
cmc
add
in
mov
loopne
add
or
xchg
xchg
cld
or
sub
add
cmp
sbb
push
pop
call
sbb
xor
xor
and
fcoml
dec
push
add
arpl
push
cmpl
scas
call
push
xor
push
and
mov
push
dec
jmp
push
push
cs
mov
dec
rcrb
pop
add
mov
pop
movsb
loopne
sub
mov
jo
movsb
or
xor
cli
data16
lcall
jecxz
mov
stos
adc
xchg
xor
and
cmp
sub
mov
or
xchg
subl
rclb
or
push
or
cmp
rcl
movsb
aaa
pop
sahf
push
lret
stc
adc
rorb
mov
das
leave
mov
insb
mov
mov
push
add
clc
add
inc
push
pop
or
jmp
or
add
sti
test
in
into
push
push
xchg
or
and
mov
aam
pusha
cmp
xchg
adc
out
xor
dec
popa
or
imul
fs
jb
bound
dec
push
in
scas
add
fs
repz
dec
leave
adcl
jecxz
daa
push
adc
xor
sti
cs
loope
adc
ja
xchg
sbb
adc
out
jmp
dec
and
test
xchg
bound
jle
pop
push
or
jo
aam
cmp
push
repnz
or
in
scas
pop
sbb
das
push
call
jns
xchg
js
or
fildll
movsl
or
gs
mov
pop
clc
mov
push
leave
popa
xor
daa
andl
adc
lret
das
jp
aam
or
pop
mov
das
push
cs
jae
js
or
in
push
adc
lock
xchg
sub
inc
sbb
adc
cmp
testb
or
or
cwtl
lret
sub
add
scas
sbb
and
cmpb
jne
nop
inc
hlt
movsl
or
add
int
push
jecxz
and
pushf
mov
dec
jbe
adc
int3
xor
cmp
inc
mov
adc
sbb
fcompl
push
in
js
jge
jno
sub
out
iret
testb
cmp
pop
jle
xor
cmp
jne
testb
orb
fs
or
xor
add
movaps
add
aad
pop
idivb
faddl
adc
mov
jae
adc
mov
inc
test
sub
cs
test
aaa
add
dec
lock
aam
cmpsl
dec
arpl
les
sbb
sbb
fisubl
add
test
nop
leave
fadds
sub
mov
loopne
xchg
mov
inc
in
mov
setno
and
push
enter
xchg
out
arpl
sub
outsb
or
xchg
test
mov
adc
inc
mov
push
cmpb
cltd
dec
out
gs
repnz
inc
stos
fsubr
mov
add
lock
lea
jns
push
insb
and
or
jnp
push
dec
es
in
push
mov
add
int3
ja
push
lds
dec
rorb
rolb
sbb
sbb
jbe
mov
dec
add
sbb
push
loopne
add
pop
add
adc
pusha
outsl
outsl
lahf
mov
aas
mov
jmp
or
repnz
and
nop
mov
lea
mov
xchg
add
inc
je
fisttpll
pop
shr
mov
cmp
mov
fimuls
adc
repnz
and
sbb
inc
lcall
fimull
mov
push
mov
repnz
movb
decb
mov
call
cmpsl
push
lcall
mov
loopne
jno
push
mov
dec
cmp
shl
test
or
das
int
je
or
jb
test
jae
xor
fisttpl
popf
ja
jg
jle
add
or
ret
inc
or
or
inc
mov
xchg
nop
and
add
mov
push
mov
jnp
icebp
jl
rep
cmpsb
push
inc
xchg
push
mov
subl
xchg
mov
test
incl
jne
add
shr
rcl
xorb
push
jns
adc
or
and
mov
push
jl
loop
fistpl
jne
mov
or
fstpt
shrl
jne
inc
dec
inc
jge
sbb
jle
ficompl
loopne
les
nop
pusha
hlt
jl
incb
and
in
inc
je
lea
mov
out
or
cmpsl
adc
mov
dec
mov
xor
adc
daa
out
orb
xchg
pop
loopne
outsb
inc
push
cmp
and
call
dec
cmpsl
sbb
pop
pop
and
cwtl
add
je
push
dec
mov
sbb
jo
std
push
je
insl
sbb
push
das
test
lods
mov
sbb
dec
cwtl
aad
repnz
jecxz
add
call
pop
mov
push
test
das
adc
jge
jg
outsb
or
pop
jmp
jl
and
jle
dec
sub
jbe
and
pop
mov
mov
lods
jl
or
sarl
ret
xchg
or
sub
and
jg
subl
in
lds
push
pop
fs
cmpsb
jno
xchg
cmpsb
les
push
sahf
iret
sub
add
adc
rorl
xchg
cltd
or
cmp
push
jne
sbb
push
adc
mov
adc
xor
sub
outsl
sbb
cltd
push
push
mov
ret
lods
addr16
movsb
push
rcll
cmp
stos
lret
das
adc
push
push
mov
dec
rcr
add
adc
clc
shrb
lods
adc
das
lahf
inc
and
mov
sub
aaa
lock
add
mov
jl
add
jle
stos
pop
stos
mov
fs
or
shr
loop
cmp
insl
fmull
mov
or
lods
add
sub
ret
sbb
mov
sqrtps
movsl
xchg
ret
rorl
lods
lgs
add
sbb
cmp
or
mov
push
add
in
xchg
orl
aam
test
sbb
pop
fimull
push
mov
nop
mov
xor
add
gs
pusha
add
bound
aas
push
xor
xor
pop
sbb
cmp
mov
out
gs
arpl
rcrl
test
pop
jge
enter
pop
enter
mov
ss
repnz
lret
dec
mov
ret
inc
xchg
cmovp
inc
add
mov
orl
sbb
pop
lcall
cwtl
roll
pop
mov
pop
scas
pop
sbb
inc
js
cltd
or
mov
std
or
cmpsb
adc
and
sbb
in
and
insb
xor
out
sbb
pop
push
sbb
in
jge
mov
mov
aam
sub
popa
inc
mov
dec
je
inc
adc
cmp
sbb
inc
mov
dec
bound
mov
mov
sahf
and
cmpsl
decb
push
sarb
fmul
dec
adc
pavgb
xchg
jp
or
sbb
test
dec
daa
dec
cwtl
or
decb
inc
lret
mov
jmp
mov
sub
subl
cmp
jb
mov
push
sub
loop
add
and
lret
push
jle
nop
fcmovbe
pop
or
jne
pop
ljmp
dec
or
push
js
mov
push
push
dec
notb
lock
out
imul
or
paddw
and
movsb
shrl
pop
sub
sbb
sub
dec
xor
inc
call
out
fwait
loope
inc
aam
or
push
dec
sub
inc
add
outsl
call
or
push
mov
add
std
jle
push
je
push
adc
and
pop
pop
rorb
add
stc
inc
mov
push
sbb
orps
leave
call
or
xrstors
jae
call
hlt
pop
lahf
andl
ja
adc
je
add
loopne
jmp
push
inc
xor
or
mov
cmpl
pusha
dec
xchg
cmp
andl
cwtl
sbb
mov
xchg
into
push
lds
dec
push
lods
call
dec
lea
mov
fists
fcomip
test
dec
adc
jmp
inc
jb
out
ret
cld
push
add
lea
mov
in
loopne
ja
aas
push
fadd
sub
out
call
fnop
mov
cmp
add
lret
or
leave
in
repz
pop
mov
pop
stos
mov
lods
push
dec
xchg
jnp
or
out
push
dec
sbb
inc
jns
negl
dec
je
addb
movsb
mov
neg
in
ds
fsubs
out
jns
repz
decb
pop
push
push
and
out
push
jmp
xor
fisubrs
pop
mov
int3
and
add
mov
cmpsl
nop
lret
pop
mov
push
pop
lretw
in
sarl
pop
push
adc
aas
jmp
mov
push
orl
sbb
or
push
xchg
jp
xchg
xchg
pop
lods
pop
das
mov
inc
mov
xor
and
add
mov
pop
pushf
jle
movsb
movntps
lods
push
adc
jnp
mov
test
sub
and
mov
pop
jg
js
jmp
imul
or
dec
mov
pop
sbb
sub
push
adc
jnp
push
add
add
dec
pop
xor
adc
sbb
xor
lret
push
pop
adc
lahf
dec
mov
je
daa
push
aad
jg
mov
push
sub
adcl
add
insb
sub
jmp
test
or
sbb
jge
add
pop
mov
mov
xchg
aas
dec
add
jns
popa
cmp
lods
xorb
loopne
loopne
push
sbb
inc
xchg
pop
roll
push
add
push
cmp
fbld
or
sbb
pop
dec
add
out
shlb
insl
push
mov
or
xchg
dec
mov
or
and
insl
or
and
rolb
movswl
in
call
imul
jge
loopne
lds
jge
xor
icebp
int3
repnz
adc
sarb
mov
clc
lea
cltd
pop
mov
cld
mov
cmp
cmp
mov
or
mov
pop
pop
cltd
out
subb
sbb
cmpsl
cmpsl
jge
inc
dec
popa
cltd
and
test
pop
nop
imul
rorb
ret
sbb
jo
sbb
stc
jmp
mov
repnz
mov
out
pushf
mov
repnz
test
das
mov
lds
data16
ret
add
movsl
imul
outsb
outsb
insb
inc
je
push
xor
pop
push
stos
adc
xor
loopne
dec
lock
sbb
jl
push
mov
xor
push
sbb
in
outsl
mov
daa
xchg
lds
out
jmp
mov
outsl
roll
sahf
mov
out
mov
sub
clc
stc
cmc
je
out
out
iret
fistps
call
repz
int
pushf
push
lds
nop
enter
mov
stc
cmpsl
aad
iret
fucomip
add
adcb
pusha
out
rcll
fbld
pop
rorl
xchg
cmp
andl
pop
aaa
aaa
aaa
aas
nopl
mov
fwait
fwait
or
push
sub
mov
pop
outsl
fwait
fwait
fwait
fwait
jg
dec
fistl
adc
inc
cld
jnp
lock
add
dec
jae
ss
cmp
int
int
shl
nop
fdivl
mov
fwait
iret
int
mov
jecxz
cmp
push
jnp
out
fwait
mov
bound
push
loopne
outsb
mov
jbe
mov
jne
cs
adc
insb
aas
dec
push
add
out
neg
sahf
and
pop
das
mov
mov
lahf
mov
mov
push
push
out
decl
adcb
xchg
pop
out
jb
add
ss
aaa
aas
fistl
sahf
dec
scas
iret
pop
test
push
outsb
outsb
outsb
ds
icebp
adc
lahf
scas
inc
mov
insb
xor
pop
orb
shlb
jle
aam
movsl
pop
xchg
pop
push
xor
xor
add
out
cs
fdivr
test
push
mov
fidivs
pop
imul
loopne
out
clc
bound
sahf
movsb
scas
mov
jle
scas
stos
das
mov
and
cmp
scas
xor
jl
mov
push
inc
jecxz
sbb
sub
push
test
pop
rorl
mov
sahf
and
ds
aas
fwait
test
adc
adc
sbb
movsl
push
decb
mov
out
jecxz
and
mov
xor
movsb
std
in
movsl
xchg
lret
aad
inc
aas
xchg
cmp
gs
xchg
dec
in
testl
sub
in
and
je
ds
and
pop
jl
mov
aam
cmc
sub
jo
int
mov
das
ds
cmp
add
stos
sub
jle
jnp
inc
cmp
out
out
shl
repz
imul
inc
xchg
jmp
out
lret
push
jle
xchg
push
cs
iret
out
lea
pop
pop
jb
pushf
push
into
mov
adc
xchg
lret
mov
xchg
push
je,pn
xchg
lahf
pop
sub
jbe
in
cmp
sub
xchg
dec
test
inc
es
add
ficoml
push
lcall
dec
sbb
ja
int
mov
roll
jle
jb
outsb
jle
sahf
mov
xchg
rorl
das
add
push
je
push
mov
lahf
jb
mov
out
xsha256
cmpsb
push
inc
fs
jg
adc
pop
cmpsb
aad
into
insb
jb
ja
lods
push
push
ds
inc
push
cmc
mov
lock
sub
and
jl
das
rcll
sahf
pop
mov
mov
and
lock
push
jne
out
test
cmc
enter
in
cmp
sub
xchg
nop
or
std
imul
xor
hlt
mov
rclb
arpl
dec
sub
dec
in
daa
iret
mov
xchg
leave
shlb
xchg
push
cmp
sub
xchg
je
in
inc
in
jb
pop
fsubrl
dec
mov
movsl
jb
pushf
lahf
jno
loop
xchg
xchg
lret
fadd
xor
mov
cmp
xchg
lret
xchg
sub
fstl
push
dec
jne
icebp
call
push
icebp
and
test
add
xchg
dec
in
xchg
xchg
gs
pop
sub
inc
addr16
dec
in
jb
mov
xor
lret
test
push
cs
xchg
out
inc
pusha
ret
adc
popf
xor
test
popf
push
dec
in
test
pop
bound
call
xor
out
cmp
dec
xor
xlat
and
stos
sbb
mov
std
and
movsl
jb
outsb
xchg
fisttps
push
cs
xchg
mov
inc
hlt
shrb
add
jne
hlt
inc
jb
mov
add
movsl
inc
test
daa
cs
dec
in
mov
test
jmp
xchg
xchg
lret
mov
and
mov
out
and
xchg
lds
dec
lret
sub
push
push
dec
sub
sbb
push
mov
in
xchg
lret
aad
dec
mov
dec
in
xchg
mov
sub
xchg
adc
push
inc
pusha
test
pop
int3
xor
and
fisttpll
push
cmp
scas
xor
pop
sub
xchg
mov
add
test
movsb
jb
repnz
inc
dec
in
dec
aam
pop
ss
xchg
lret
sbb
xchg
dec
in
mov
jp
jmp
pushf
push
cs
arpl
xchg
inc
scas
jo
sahf
test
leave
push
cmp
cmpsl
cmp
jb
jl
les
repnz
mov
add
mov
lret
ret
and
push
sub
test
jecxz
lahf
enter
fimuls
call
xchg
xchg
daa
ja
lahf
ficomps
and
sub
test
lahf
xor
adcl
fidivrs
dec
out
nop
rclb
ficomps
das
sahf
nop
iret
repz
stc
adc
sbbb
sbb
call
cmc
daa
push
xor
mov
jns
test
mov
aas
sub
xchg
enter
adc
sub
out
outsl
xchg
or
and
repnz
ds
arpl
add
int
ds
mov
add
daa
sbb
pop
std
mov
pop
test
push
fistpll
pop
movsl
andl
lods
hlt
pop
bound
sub
push
in
push
sub
dec
lahf
pop
loopne
in
icebp
pop
cmp
sbb
jae
fimuls
mov
push
cmp
dec
mov
pop
sub
mov
sbbb
in
jb
mov
and
mov
cmp
movsl
jb
je
in
push
cs
xchg
push
inc
xchg
mov
inc
fwait
sbb
aam
cmpsb
jbe
push
out
addb
inc
sahf
aad
inc
sahf
adc
xchg
int
push
xchg
xor
jmp
pop
pop
xchg
xchg
lret
jg
mov
push
mov
mov
movsl
jb
mov
mov
mov
mov
movsl
mov
stc
pop
inc
insl
xor
fstl
sub
mov
test
fwait
popf
sub
xchg
xchg
inc
in
or
bound
mov
push
test
pop
mov
and
xchg
xchg
dec
cmp
add
icebp
je
inc
xchg
lret
lret
jnp
add
xor
xchg
sbb
sbb
mov
lret
nop
popf
inc
loope
movsl
jb
pop
test
in
push
pop
rcll
pop
mov
movsl
mov
clc
sbb
mov
aaa
mov
dec
push
iret
aas
into
or
enter
aaa
and
mov
test
dec
pop
sbb
jg
and
sub
out
xchg
inc
rcl
in
jmp
fwait
sbb
into
push
clc
push
sarb
sbb
test
test
adc
xchg
dec
in
mov
test
mov
jb
clc
lahf
or
lcall
mov
push
add
jne
cmpsl
inc
movsl
je
data16
xor
push
iret
sub
int3
xchg
and
mov
pop
mov
aam
loop
fsubs
icebp
adc
and
clc
pop
mov
div
xchg
lock
clc
daa
add
inc
mov
movsb
dec
xor
jle
mov
lret
test
xchg
mov
shrb
test
or
dec
pop
aam
push
dec
cs
sahf
out
out
pop
ljmp
int
mov
in
inc
fimuls
add
rolb
jp
aas
dec
shrl
insl
push
pop
dec
push
loopne
stos
rcrb
jo
push
sbb
sbb
ret
adc
fcomps
sub
xor
or
adc
adc
fwait
outsl
push
lcall
cmc
insl
ljmp
lret
out
cmp
xchg
or
fisubrl
out
sbb
pushl
in
gs
pop
sbb
jmp
rcrl
sbb
lods
xchg
jne
mov
cmpsl
sahf
nop
dec
xchg
add
jbe
sahf
xchg
or
sbbb
inc
mov
mov
or
sahf
mov
xchg
mov
clc
movsl
mov
or
pop
mov
out
mov
or
fcomp
pop
andb
push
getsec
pop
xor
push
iret
sub
xchg
std
cmp
lock
in
mov
lahf
mov
sbb
dec
cmp
jbe
inc
jo
jp
pop
scas
jle
push
jnp
nop
jl
lods
insb
fimuls
enter
int
ljmp
pop
inc
sub
sahf
add
mov
adc
sub
adc
out
leave
dec
sub
movsb
in
xchg
out
scas
xlat
push
jns
js
xor
rorl
ffree
mov
push
loopne
push
test
or
fnstsw
ljmp
push
mov
les
iret
push
fcomp
mov
cltd
push
xor
xor
rcrb
mov
cmp
movsl
or
fcompl
clc
lock
andl
popf
test
jecxz
rcrb
loopne
clc
sub
in
pop
lret
lahf
lods
push
bound
mov
in
jmp
jo
fdivrl
sub
lock
and
in
jg
xchg
popf
scas
ljmp
sbb
jl
fsubrs
jg
pop
mov
adc
mov
mov
sub
mov
jno
push
in
mov
rcrb
ss
lock
sbb
jge
jmp
jae
fiaddl
jb
cmp
in
repz
test
movsb
mov
rep
insb
push
test
ds
pop
scas
and
ret
push
lea
rolb
pop
iret
sub
jns
enter
mov
addb
cwtl
or
push
aaa
aaa
aaa
mov
cmp
dec
xor
fsubrs
sub
jbe
pop
sahf
cmp
pop
jae
jo
aad
mov
xchg
bound
cli
fnstcw
add
mov
pop
data16
outsb
outsb
outsb
fisubrs
mov
inc
loop
adc
adc
push
outsb
outsb
jae
pop
rcrl
aam
mov
push
jbe
loope
fldt
test
enter
pop
cmp
fidivrs
test
addr16
push
mov
sahf
or
js
inc
add
jbe
out
jnp
and
mov
shrb
cmp
dec
pushf
push
shll
js
pop
repnz
loop
xor
mov
sub
scas
mov
in
dec
xor
mov
aad
mov
sub
clc
push
jb
lea
xor
dec
aas
pop
xchg
mov
add
push
not
lds
gs
jb
out
mov
fisubrs
cmp
test
lods
jg
repnz
aam
sahf
or
and
add
iret
lret
or
sub
push
movsl
jge
rorb
movsb
sahf
gs
fisubrs
and
je
fwait
fwait
push
test
lds
idivb
mov
addr16
pop
pop
call
sub
mov
fcom
mov
and
jle
mov
push
aam
xor
shrb
sahf
xchg
cmp
test
insb
insb
mov
add
dec
add
xor
aas
fs
scas
idiv
mov
jg
and
lret
mov
or
fimuls
xchg
xor
mov
out
sti
loop
mov
push
insb
fwait
inc
jle
in
fwait
fwait
fwait
fwait
push
mov
push
int
mov
ret
imul
mov
stos
outsb
outsb
outsb
out
inc
inc
adc
in
pusha
or
icebp
insb
add
sbb
imul
hlt
mov
sar
fsubp
lret
mov
xchg
mov
adc
rcrb
and
aas
movsl
loop
js
push
xor
cs
xchg
or
daa
lahf
lock
hlt
dec
fs
shlb
jle
in
leave
sub
roll
sub
aas
push
imul
movl
push
nop
mov
cmp
ja
pop
xchg
dec
sti
mov
iret
negl
int
cmp
je
cwtl
mov
out
in
mov
lods
and
out
push
stc
and
mov
int
int
push
std
push
adc
push
mov
add
pop
pusha
inc
mov
aas
sarb
jnp
xor
int3
lret
jg
lahf
jge
and
imul
int
jle
add
sub
aaa
aaa
jg
lods
fsubp
leave
cwtl
rolb
aam
sti
and
pop
jg
xchg
or
jae
jae
and
dec
inc
ljmp
jae
jae
adc
popf
test
pop
out
es
movsl
out
mov
mov
cmp
push
ret
xchg
out
mov
mov
cmp
arpl
jae
cmp
mov
dec
cmp
jb
mov
sub
add
pop
and
xor
xor
addb
mov
data16
fwait
fildl
mov
push
or
stc
fwait
push
sub
cld
fwait
fwait
fwait
fwait
cmp
shl
mov
sub
xchg
inc
outsb
aas
fwait
fwait
scas
test
cmpb
ja
pop
lods
mov
outsb
aaa
insl
push
or
out
mov
mov
je
popa
fiaddl
addr16
adc
pop
loopne
xorb
inc
in
pop
in
sbbl
mov
mov
inc
cmp
lds
mov
jbe
movsl
xchg
sbb
aam
push
jmp
push
xor
inc
cli
fadds
or
setg
idivl
bound
push
subl
jg
cs
mov
fsubs
adc
and
call
das
loop
jmp
aas
jle
mov
sbb
xchg
in
inc
sbb
roll
neg
adc
aad
shlb
cmp
loope
sub
sub
xchg
xchg
pop
lock
xchg
jo
inc
mov
xor
pop
aad
jae
pop
bnd
hlt
cmp
or
fsubrl
push
mov
push
mov
mov
lahf
and
test
push
lahf
in
xchg
lock
push
dec
xor
adc
sub
sti
fnstcw
mov
insb
cwtl
rorb
jb
je
jae
jae
fwait
cltd
mov
mov
adc
int
in
jae
jg
sub
add
int
int
push
enter
bound
mov
out
inc
int
pop
adc
inc
out
xchg
mov
mov
mov
jmp
in
stc
cmp
inc
push
jo
lahf
xor
xchg
popa
stos
hlt
sahf
aaa
out
dec
or
cmp
mov
aaa
aaa
aaa
iret
sub
xchg
aas
inc
das
or
aaa
aaa
aaa
dec
movsb
add
imul
in
inc
clc
jge
push
clc
imul
mov
int
sar
stc
or
adc
pop
mov
int
repnz
imul
mov
xor
xchg
mov
aaa
mov
mov
pop
lret
mov
iret
idiv
in
rol
dec
or
lcall
daa
adc
fdivrl
cmp
cmp
pop
leave
adc
inc
mov
xchg
mov
test
dec
cs
mov
imul
fcoml
lea
leave
push
test
jnp
popa
roll
sbb
jo
lret
out
cmp
dec
icebp
clc
jns
fs
arpl
ret
xchg
out
pop
xchg
adc
and
cmc
clc
mov
outsb
outsb
lahf
fwait
push
frstor
inc
shrl
jge
outsb
outsb
push
dec
adc
movsl
mov
mov
sbb
test
mov
cmc
mov
jmp
adc
push
roll
stos
xchg
xchg
test
xlat
int
int
xor
mov
aas
jae
cmp
sbb
sbb
lahf
rcll
jnp
sti
xchg
bound
fildl
sti
sbbb
and
fwait
fwait
fwait
popl
xchg
rcl
fstpl
in
push
aaa
aaa
aaa
lahf
jno
loop
repnz
stc
ds
sub
jge
inc
adc
ret
popa
incl
sti
mov
fiaddl
and
iret
jae
jae
dec
mov
dec
push
js
mov
rcl
lahf
mov
push
mov
jns
test
mov
push
jmp
add
add
aam
jae
cwtl
and
sbb
in
push
mov
je
stc
imul
xor
addr16
jae
leave
and
jmp
iret
int
out
mov
das
or
std
test
out
jbe
xchg
out
rorl
dec
arpl
out
loop
and
es
outsb
aas
fwait
fwait
adc
pop
js
sarl
bound
dec
jge
aas
mov
dec
cmp
fnstcw
fwait
fwait
stos
xchg
push
jb
jle
jb
xor
jecxz
cmp
mov
int
push
sub
sbb
imul
out
out
mov
outsl
inc
jne
sub
out
out
mov
pop
mov
pop
and
jge
or
pop
ljmp
pushf
stc
mov
dec
ret
sbbl
pop
outsb
out
idivb
mov
adcl
fidivl
inc
or
arpl
fwait
fwait
lret
movsb
out
movsl
mov
ss
aaa
cld
gs
icebp
les
jmp
jl
sbb
mov
iret
out
mov
mov
jae
jae
mov
sarb
popa
mov
shlb
mov
cs
fcmovnbe
dec
arpl
mov
fwait
fwait
fwait
dec
inc
dec
xchg
xor
test
nop
outsb
outsb
lahf
fwait
dec
out
dec
enter
loopne
sarl
clc
outsb
outsb
outsb
outsb
add
scas
push
mov
idivl
sub
outsb
jmp
push
in
and
xchg
fwait
cmpsb
pop
mov
scas
fcmovbe
in
adc
inc
or
divb
cli
sbb
fdivr
or
out
out
js
pusha
mov
mov
js
out
pop
or
popf
inc
pop
test
lds
cmp
pushf
xchg
sub
or
jge
sbb
mov
aaa
mov
and
shl
fisttps
cmp
mov
dec
loopne
aaa
aaa
aaa
inc
setge
adc
adc
jae
fdivrl
mov
mov
hlt
push
pop
pusha
ja
fwait
outsl
aaa
sbb
jle
js
inc
mov
or
inc
ljmp
fmull
add
fcomip
mov
xor
dec
out
out
mov
cmp
clc
add
out
sub
push
mov
fwait
fwait
fwait
fwait
xor
and
adc
jg
fwait
fwait
fwait
fwait
pusha
xchg
mov
enter
adc
jle
aaa
lahf
repz
adc
push
mov
jnp
xchg
xchg
out
add
mov
sbb
xchg
sbb
mov
mov
int
in
nop
pushf
sahf
or
jo
popa
push
sub
jg
aaa
mov
xchg
popa
gs
jge
insl
and
rcl
js
aaa
mov
xchg
subl
xor
pop
mov
pop
icebp
ljmp
sbb
mov
stos
cmpsb
outsb
cli
inc
lcall
arpl
xchg
push
cld
insb
outsb
mov
loopne
cltd
mov
test
aaa
or
mov
push
aad
testl
or
mov
and
int
int
out
pop
push
adc
inc
push
in
dec
mov
or
mov
inc
xor
jae
jae
inc
and
loopne
jne
mov
mov
jae
mov
in
lock
test
jo
push
jecxz
mov
sbb
pusha
rorb
xor
ss
aaa
pop
stos
andb
sbb
xor
shr
sub
inc
les
and
jae
jae
and
mov
and
cltd
mov
jae
jae
jbe
ja
or
rcrl
insb
outsb
mov
cld
push
shll
inc
cmpsl
out
mov
rorl
test
xlat
iret
push
aad
dec
mov
mov
int
lods
inc
mov
pushf
push
cmp
out
test
int
adc
std
addb
insl
mov
jae
mov
hlt
cmp
imul
or
sub
into
out
lahf
cmp
lcall
fdivrl
repnz
mov
bound
sti
fcompl
cmp
pop
ficompl
xchg
fnstcw
sbb
sub
mov
icebp
fdivrl
int
icebp
dec
mov
xchg
in
fisubrs
sti
xchg
cmpl
in
movsl
sbb
xor
and
aaa
mov
leave
popa
mov
lret
xlat
push
dec
es
add
cmpsb
leave
jmp
enter
mov
addb
ljmp
in
neg
subb
repnz
adc
add
sti
fnstcw
shll
hlt
bound
mov
add
addr16
sbb
rolb
movsb
movsl
and
dec
push
loope
clc
scas
mov
outsl
into
int
int
psrld
icebp
lahf
bound
outsl
jns
mov
mov
pop
cmp
xor
fwait
fwait
fwait
fwait
push
dec
adcb
mov
fldenv
fwait
fwait
fwait
cmpsl
mov
sbb
jnp
int
std
sahf
fwait
fwait
push
out
add
dec
sub
sbb
sbb
divb
inc
stos
adc
stos
popa
xor
movsl
dec
out
out
add
mov
ror
rcll
inc
mov
add
popf
icebp
push
outsb
adc
dec
push
das
out
out
or
pusha
int3
out
push
in
add
jb
les
out
out
flds
in
push
add
add
out
adc
cwtl
xor
fists
test
jg
mov
add
push
in
push
outsl
test
hlt
mov
fcmove
xchg
pop
sbb
cmp
pop
cmp
lahf
in
mull
adc
addr16
popa
mov
cmpsb
dec
iret
out
push
xor
daa
je
out
cli
xor
jo
test
and
outsb
outsb
imulb
pop
push
aam
ds
mov
bnd
sahf
js
or
mov
iret
int
cmc
mov
or
repz
and
movd
stos
and
aas
push
mov
test
jae
sti
pop
sbb
testb
mov
xchg
mov
jae
lret
dec
adc
xchg
ret
cmpsl
fbstp
jp
xchg
adc
rcll
push
adc
jle
iret
lods
push
xor
loope
nop
jae
mov
ret
mov
nop
rolb
lret
arpl
push
rcrl
data16
sbb
outsb
outsb
into
mov
sub
dec
aas
adc
insb
outsb
outsb
outsb
inc
mov
pop
push
les
mov
lods
jecxz
mov
enter
xchg
fdivs
aaa
aaa
mov
sahf
mov
sub
xor
jl
aaa
enter
add
scas
lahf
lret
mov
leave
cld
push
sahf
fwait
ds
xchg
cmpsb
testb
lock
aas
lret
mov
fcompl
pop
jp
pop
out
repnz
xchg
invd
loope
mov
int3
int
lahf
fwait
loop
cmp
push
mov
pop
sbb
int
popf
call
enter
mov
ss
int
xchg
jecxz
add
mov
mov
fdivrl
je
jbe
xchg
dec
push
std
fbld
loopne
loope
sti
test
outsb
int3
cmp
fstp
mov
ss
mov
mov
and
jnp
cld
and
outsb
scas
cli
jge
rorb
sub
push
or
mov
test
sbb
push
cmpb
mov
aaa
aaa
aaa
mov
sbb
ds
fistps
lret
jl
fimuls
inc
push
iret
insb
out
jg
cmp
pop
sahf
adc
hlt
insl
scas
rcrb
out
fidivl
sub
push
or
iret
dec
jo
dec
or
mov
pop
fsubr
jg
aam
adc
xchg
mov
fwait
fwait
jns
cmp
mov
mov
fwait
add
cld
in
popa
cmp
xchg
outsl
xchg
adcb
xor
inc
and
shll
jle
aaa
mov
aam
loope
xchg
filds
cmp
lahf
scas
jg
pop
jmp
jg
movq
adc
xor
popa
fcomip
pop
hlt
lcall
outsl
jb
mov
push
push
dec
aas
fwait
fwait
pop
test
daa
sbb
jle
cmpsb
xchg
aaa
shlb
xor
xchg
jae
or
fwait
dec
xor
stos
andb
jae
push
sbb
sti
mov
mov
dec
stos
mov
jae
adc
repz
add
mov
arpl
mov
loop
std
dec
jae
adc
imul
jae
fldcw
jb
adc
pop
mov
ret
jae
cmp
cmp
jb
xor
in
lods
clc
xchg
scas
repnz
inc
xchg
out
je
mov
loop
adc
mov
adc
mov
jae
jae
adc
movsb
test
mov
iret
in
addr16
pop
mov
or
add
cmp
sub
and
fdivrl
shlb
inc
nop
adcb
loopne
les
xorl
xor
int
rclb
test
loop
xor
scas
mov
int
xor
mov
xchg
cmp
outsb
mov
popa
aaa
aaa
aaa
aaa
mov
fcoms
outsb
adc
cmpsb
daa
aaa
aaa
aaa
aaa
push
jbe
clc
xor
aaa
aaa
cmpsb
inc
or
negl
jle
aam
addr16
ss
test
jle
lret
cmp
pop
enter
leave
fwait
fwait
fwait
fwait
cmpsb
aaa
pop
xchg
out
pop
sub
icebp
lock
add
push
js
cmp
int
int
fsubr
in
cli
ja
sarl
push
cltd
outsb
jle
lahf
cli
test
mov
cmp
push
mov
jb
popa
mov
shll
fldenv
jb
fwait
cmp
bound
hlt
stc
mov
inc
or
jb
test
aam
jb
xor
pop
dec
mov
loop
cmp
jb
add
pushf
aaa
push
loop
fcmovne
adcb
mov
outsb
lahf
fwait
fwait
add
and
cmp
mov
adc
imul
mov
mov
test
jns
out
dec
inc
fidivrs
xchg
cmp
sahf
or
sahf
cs
fwait
fwait
fwait
sbb
cmp
fld
repnz
fwait
fwait
fwait
rclb
or
les
mov
outsl
mov
xchg
and
stos
mov
adc
aas
pop
mov
hlt
xor
cmp
jle
loopne
mov
mov
xchg
cmp
out
push
or
mov
dec
xchg
les
add
out
mov
pushf
xor
inc
out
mov
dec
lahf
fcmovne
or
lods
mov
fidivs
dec
js
dec
mov
pop
filds
dec
fwait
fwait
fwait
fwait
push
pop
jns
jg
int
out
ljmp
je
adc
popf
bound
ds
fwait
fwait
sbb
sbb
outsb
xchg
js
imul
js
movsb
lds
hlt
or
sub
fwait
fwait
fwait
fwait
sti
push
xor
sahf
in
lret
mov
fwait
pop
mov
push
cmc
and
les
or
or
test
iret
inc
in
add
mov
int
adc
xchg
aad
mov
dec
iret
int
push
icebp
cmpsb
cwtl
mov
mov
out
clc
xor
test
adc
outsb
outsb
outsb
fisttps
adc
addr16
hlt
je
adc
insb
outsb
outsb
outsb
inc
lock
in
mov
ret
std
js
xchg
mov
movsl
mov
jae
jae
fnstcw
mov
sbb
sbb
clc
jbe
lret
int
in
and
mov
cli
pushf
and
mov
int
loop
sbb
add
cmpsl
adc
cmp
aaa
into
repz
stc
sbbb
lea
or
pop
mov
mov
inc
out
fidivrs
aam
push
clc
lret
dec
addb
andl
push
in
stc
les
dec
push
jb
or
add
js
push
repnz
jmp
cmp
sub
pop
push
fildll
pop
cmp
push
add
mov
out
out
mov
mov
push
out
notl
out
and
pusha
imul
adc
out
out
mov
dec
sbb
push
clc
shl
out
out
sub
inc
xor
xchg
jge
mov
out
out
mov
jae
dec
fdivrs
aad
sub
out
out
enter
push
mov
jle
je
addr16
shl
aam
call
mov
les
jb
in
and
push
mov
loop
mov
jnp
xchg
mov
sbb
or
lods
sbb
pop
add
push
int3
lods
and
or
cwtl
popf
int
int
dec
nop
enter
sahf
or
mov
lods
push
sarb
push
mov
bound
jo
movsb
dec
std
insb
outsb
pop
jecxz
cld
shl
xchg
aaa
xor
test
iret
out
or
mov
test
fsubrl
lahf
inc
aas
fwait
in
lock
int
clc
sti
fcompl
add
call
sbb
or
sbb
mov
mov
std
xor
out
pop
movsl
loopne
cmpsb
and
scas
idivl
nop
push
jo
sar
or
cld
enter
jae
ret
repnz
and
mov
pop
pop
int
in
jae
icebp
fisubrs
pushf
push
mov
int
mov
je
leave
xchg
pusha
dec
jnp
cmpsl
adc
ss
aaa
test
shl
xor
cli
jae
sti
sbb
inc
lods
bound
sahf
xor
jns
in
addr16
mov
jle
ret
pop
and
int
int
dec
sub
stos
ret
aaa
aaa
add
sbb
call
stos
mov
loop
jbe
adc
jae
pop
out
push
mov
mov
ret
adc
jae
jae
mov
test
hlt
sbb
shrl
mov
lods
mov
jle
faddl
adc
scas
fsubr
mulb
bound
subb
out
or
pusha
into
mov
es
fwait
fwait
fwait
imul
pusha
xor
aas
fwait
fwait
fwait
add
add
nop
ret
push
ja
out
add
mov
inc
adc
out
mov
add
push
pop
lret
adc
pop
ficoml
cld
jae
pop
mov
pop
rcr
shlb
insb
mov
jae
dec
add
inc
cmpsl
pop
in
and
iret
int
in
inc
lods
xchg
mov
add
sahf
mov
out
or
into
cmp
repz
out
out
jl
adc
lds
mov
cli
mov
inc
mov
pop
sbb
ds
jnp
iret
and
lock
mov
test
sub
shrb
jne
adc
test
jp
add
and
sti
and
ss
outsb
lahf
fwait
div
mov
lahf
clc
adc
pusha
pop
addr16
sti
pop
rorl
shrb
test
pop
iret
in
lahf
scas
xchg
sahf
inc
sti
enter
clc
mov
or
or
mov
nop
cli
lahf
jl
iret
out
mov
jo
xor
inc
outsb
outsb
outsb
pop
push
popfw
mov
sub
dec
outsl
out
push
xor
outsb
cld
insb
outsb
outsb
xchg
cwtl
pop
sahf
push
das
hlt
popf
fs
ss
aaa
mov
out
jp
jae
inc
mov
daa
and
sbb
ss
adc
adc
push
add
out
idivb
xchg
xor
clc
test
shl
and
out
out
inc
xchg
push
dec
mov
out
out
shr
adc
pusha
xor
inc
fcmovne
out
inc
sub
repnz
aaa
aaa
lahf
sub
mov
inc
push
mov
fwait
jmp
fcompl
in
inc
subl
repz
jae
lods
xchg
dec
repz
int3
in
sti
gs
int
addr16
sar
scas
dec
fnstcw
out
test
push
scas
lahf
pop
xor
or
cwtl
lcall
jae
loopne
movsb
adc
daa
adc
xor
out
stos
testb
xlat
dec
fs
test
jo
and
cmp
jae
inc
inc
jbe
xchg
sarb
mov
cs
mov
enter
jle
cmova
loopne
cwtl
sahf
push
jmp
fstps
mov
or
rclb
pushf
fwait
fwait
sbbl
cmp
sahf
sbb
mov
fiaddl
jmp
pushf
fisttpl
pusha
inc
xchg
ret
test
mov
mov
cwtl
xor
ds
push
or
iret
pop
jle
cmp
cli
mov
add
lock
fistl
xor
cmpb
push
int
int
mov
in
idivb
mov
daa
push
nop
sbb
add
ss
cwtl
call
sbbb
outsb
outsb
outsb
xor
test
mov
jge
push
std
insb
outsb
outsb
push
decb
mov
sarb
mov
mov
cltd
pop
inc
cli
mov
mov
sbb
and
xchg
movsl
inc
je
mov
mov
and
mov
test
rcl
add
ret
mov
enter
jae
aaa
push
das
cltd
sub
pop
push
clc
addb
imul
or
and
into
pusha
jns
scas
sahf
fwait
mov
pop
fisubs
fs
mov
gs
push
repnz
aam
fcomi
lods
mov
shlb
insl
nop
inc
xchg
mov
insb
outsb
lahf
mov
rcrl
pop
out
cmp
adc
add
push
fs
in
fldenv
frstor
mov
sti
test
bound
pusha
enter
leave
insb
clc
dec
sbb
xlat
sbb
or
xchg
hlt
inc
test
mov
adc
iret
out
mov
sahf
out
cmc
inc
mov
out
sbb
int
int
push
pop
adcl
jmp
adc
xor
jmp
cld
sub
fwait
fwait
test
popf
jbe
pusha
lock
push
sti
arpl
jge
push
mov
push
mov
xor
inc
fucomp
mov
jecxz
mov
add
inc
out
fwait
fwait
sub
xor
sbb
std
inc
cmp
fwait
nop
push
adc
mov
test
hlt
cmpl
out
push
icebp
jecxz
sbb
pop
push
fwait
jo,pt
ds
push
add
popf
and
in
addr16
mov
pop
je
cwtl
cmp
cmpsb
lahf
int
cmp
dec
adc
es
mov
iret
out
rcl
les
dec
imul
daa
pusha
pop
push
aam
int
in
and
mov
test
mov
mov
das
xor
mov
xor
nop
sbb
call
imul
mov
mov
sbb
movsb
repnz
pop
push
sub
rclb
jo
fcompl
scas
push
scas
aas
inc
mov
clc
gs
or
lahf
int
in
mov
sbb
out
jmp
xchg
lahf
mov
or
clc
fnstcw
insl
or
ss
mov
idivb
jl
std
push
pop
cmc
dec
rorb
les
adc
dec
or
scas
push
jne
xor
es
js
sbb
dec
out
mov
dec
xchg
loope
mov
shlb
addl
jle
cld
js
mov
andl
sahf
dec
mov
arpl
pop
sahf
mov
jle
in
lods
xchg
or
jne
movsl
lds
push
movsb
ljmp
mov
insb
cmp
mov
mov
push
pop
mov
jl
xchg
iret
loopne
fdivl
mov
fstpl
ret
scas
push
pop
shrb
sbb
sbb
push
add
mov
mov
mov
subb
adc
add
or
test
testb
push
mov
and
ljmp
xchg
sbb
aaa
aaa
aaa
lock
add
in
sub
imul
fisubs
in
out
out
jo
enter
leave
pop
and
inc
iret
out
out
pop
jns
cmp
sarl
jae
divl
sbb
add
lock
or
scas
lods
scas
stos
adc
push
gs
or
subb
mov
fdiv
aas
jnp
inc
fdivrl
aaa
or
inc
lods
test
or
fcompl
or
add
rcr
jecxz
aaa
push
cmp
loop
out
fmul
call
aaa
aaa
aaa
aaa
inc
lock
xchg
fildll
int
push
shr
ss
aaa
test
dec
mov
std
je
mov
mov
xchg
mov
ds
mov
pop
mov
shrl
clc
dec
pop
in
fsubrl
adc
push
aam
dec
ss
out
fprem
push
clc
mov
and
mov
sarl
xor
xchg
add
xchg
jo
movsb
repnz
inc
pusha
cmp
fwait
into
push
xchg
pop
push
mov
ret
push
dec
lea
push
das
outsb
out
pop
outsb
outsb
outsb
outsb
jmp
leave
jl
dec
and
test
insb
imul
jo
movups
punpckhdq
bound
ds
popl
cmc
clc
insb
pop
hlt
imul
cmp
fcoml
mov
cmp
cld
cmp
mov
out
in
mov
loop
lea
sahf
inc
adc
mov
mov
sub
inc
jo
push
addr16
fbstp
aaa
dec
jg
jae
xor
pop
cmp
mov
int
pop
xchg
cmpsb
hlt
mov
dec
lahf
adc
inc
mov
sarb
aaa
jecxz
dec
mov
sahf
adc
je
scas
cli
fwait
and
cmp
out
imulb
scas
sbb
out
add
addr16
jg
or
out
into
xor
jp
jns
fdivrl
arpl
fistpl
sub
mov
jg
add
lds
jno
iret
cmpsb
lahf
sahf
and
sbb
repnz
out
clc
mov
sbb
je
shlb
outsb
pop
and
idiv
sbb
lods
push
xor
adc
sahf
pop
push
hlt
xor
addr16
jo
ss
out
and
cwtl
sub
jle
jecxz
mov
mov
xchg
lret
dec
ds
add
sbb
xor
jmp
fidivl
dec
pop
xchg
mov
aam
or
scas
popa
in
mov
mov
pop
jbe
cmpsb
lahf
int
xor
imul
insl
dec
shl
out
test
mov
add
popf
mov
mov
enter
mov
sbb
repnz
sub
out
out
xchg
mov
sarb
scas
jle
mov
test
pusha
sbb
adc
pop
cmc
mov
fcmovbe
out
sahf
les
lock
fcmovne
pop
cli
dec
mov
or
not
int
int
and
dec
rorl
fs
mov
lret
dec
mov
dec
dec
mov
mov
fwait
shlb
sbbb
outsb
outsb
outsb
aas
sub
and
subb
jno
rcll
enter
jge
push
bound
cmp
leave
call
rolb
xchg
mov
sti
jle
lahf
int
adc
and
outsb
outsb
jle
ficoms
fnstenv
aaa
aaa
cmp
lret
loop
popf
jae
adc
fdivrl
shlb
xor
popf
pop
aam
clc
fmul
adc
popa
lret
iret
fdivl
divb
mov
adc
out
ficoml
fmull
mov
pop
jl
movsb
sbb
cli
pop
sbb
add
jo
cmpsl
out
out
in
sarb
rclb
test
dec
or
rcrb
add
jle
stos
mov
mov
push
adc
cs
out
mov
cmp
loopne
cmp
pop
mov
xor
sub
mov
jl
pop
mov
rorb
dec
incb
les
mov
inc
adc
cmp
mov
enter
mov
sub
pop
mov
in
movsl
push
mov
pusha
out
dec
leave
mov
mov
arpl
mov
inc
ficomps
negb
fwait
add
inc
mov
sbb
icebp
mov
mov
jb
push
shlb
icebp
fchs
and
cli
sub
pop
pop
or
clc
push
jle
add
push
xchg
cmp
dec
jge
faddl
out
popa
pop
xchg
jmp
jae
inc
loop
cmp
sarl
filds
int
jns
nop
das
rolb
mov
int
int
dec
jbe
loope
xor
aaa
aaa
aaa
mov
inc
sub
icebp
sbb
fistpl
aaa
shl
xlat
cli
aaa
movsl
xchg
int
int
sahf
jns
xor
push
mov
inc
rol
pop
aaa
aaa
mov
mov
fwait
inc
loopne
or
ds
aaa
aaa
mov
cmpsb
jbe
and
clc
fisubl
rol
stos
nop
xor
adc
lcall
out
icebp
out
mov
js
jae
out
out
push
dec
xor
cltd
sbb
subb
lret
mov
xor
mov
or
xchg
cltd
cld
scas
mov
test
mov
mov
aaa
cmp
int
int
inc
paddusw
mov
sub
int
int
inc
inc
dec
hlt
in
lds
cmp
dec
pop
lcall
iret
popa
xchg
push
aas
imulb
outsb
jo
mov
mov
pushf
fwait
sub
push
je
dec
cmp
out
cmc
sub
push
jbe
xchg
adc
loope
lock
cmpsl
jle
sbb
insl
pop
xchg
lahf
inc
or
lahf
fxtract
adc
sahf
fs
jae
jmp
clc
lret
or
outsl
test
aas
clc
out
cwtl
clc
mov
lahf
dec
cld
lods
mov
and
jl
cmp
push
jnp
loopne
add
aaa
aaa
xor
lock
mov
idivl
inc
xchg
sbb
mov
fisttpl
pop
outsb
adc
inc
inc
mov
jae
inc
repz
fwait
hlt
push
jb
push
mov
out
out
lret
iret
xor
adc
sahf
js
inc
jae
out
xchg
mov
fwait
cmp
jo
cld
mov
pop
adc
test
jne
push
cmpsl
adcb
sbb
cmc
fnstcw
fwait
in
sarb
insb
inc
mov
pop
stos
adc
xchg
push
jle
aaa
push
mov
lahf
xchg
add
inc
outsb
scas
cmp
sti
push
ss
cld
pushf
cmp
insb
outsb
outsb
mov
mov
out
outsl
add
or
negl
jg
out
add
idivl
ror
imul
xor
jl
mov
cmp
jae
movsb
jle
lods
add
xchg
cmp
in
jae
clc
push
or
inc
out
inc
sub
lahf
dec
ds
fisubl
dec
addr16
mov
aas
fwait
fwait
mov
mov
add
int
imul
pusha
in
pop
dec
loope
cmc
mulb
int
push
inc
jb
out
mov
mov
mov
mov
test
xchg
outsb
jg
jge
xchg
xor
lods
mov
mov
fidivrl
outsb
outsb
test
inc
out
stos
cmp
out
dec
or
mov
sbb
les
mov
sub
rolb
fimull
data16
in
or
xor
mov
mov
pushf
sub
aad
sarb
shrl
pop
and
jb
outsb
scas
out
out
xchg
les
jo
mov
outsb
pop
add
jb
mov
mov
call
icebp
mov
outsb
dec
lea
movsb
mov
add
add
mov
popf
les
jae
pop
cmc
lock
inc
fwait
push
aaa
shlb
jb
in
or
pop
sbb
ss
adc
in
mov
lods
mov
add
shl
mov
cli
aad
mov
mov
data16
jae
sti
push
rcll
out
out
gs
and
xor
fnstsw
inc
in
out
arpl
jg
jle
test
mov
inc
jb
inc
or
sbb
in
fbstp
int
shll
adc
or
mov
fsubp
cmpsb
lahf
int
adc
or
stos
call
pop
and
inc
lret
shlb
fdivl
lahf
shl
leave
sbb
inc
jge
xor
fcoml
mov
mov
mov
inc
cwtl
icebp
sub
and
cmp
out
out
inc
inc
push
shlb
cmpsb
out
cmc
dec
jae
out
repnz
lret
ds
sbb
cltd
in
jae
jae
icebp
or
test
mov
test
aam
cli
daa
sahf
mov
icebp
mov
xchg
gs
jnp
insl
imul
adc
cmpsl
aaa
mov
cld
adc
push
mov
movsl
and
mov
mov
lock
sub
sti
insb
cmp
je,pt
mov
pop
cmc
stos
and
mov
and
fdivr
jno
das
push
push
jne
stos
jp
xlat
add
mov
dec
or
fdivrl
add
add
xchg
loopne
lods
movsb
sbb
sub
jae
fidivs
jge
rcr
out
mov
iret
int
in
dec
and
xorb
xor
lret
aaa
aaa
aaa
mov
in
add
cwtl
xor
ds
aaa
sahf
xchg
xchg
cmp
mov
outsb
inc
ljmp
sbb
nop
mov
add
push
push
pop
dec
pop
inc
ds
xchg
jecxz
mov
add
mov
jae
jae
orl
pop
fs
loopne
cmp
lahf
test
xor
aaa
aaa
aaa
mov
inc
cld
dec
xchg
stos
jg
push
js
stc
cld
sbb
test
mov
lods
sub
xor
loop
in
mov
sti
fmull
pop
enter
std
adc
xor
xor
je
add
lret
out
pop
in
jae
aaa
aaa
aaa
lock
jbe
pusha
mov
outsl
popf
out
jle
aaa
adc
jno
mov
add
sbb
nop
fwait
fwait
fwait
fwait
mov
rcll
cld
add
fimull
sbb
jae
pop
sbb
jbe
pop
bound
mov
mov
dec
out
pop
inc
adc
mov
pusha
xor
aaa
into
int
push
enter
mov
fdivr
jle
int
int
or
lds
cmp
mov
js
outsb
and
jmp
out
out
pop
mov
sahf
dec
mov
inc
dec
loopne
xlat
mov
shlb
dec
test
fdivrl
imul
dec
sarb
fsubrl
add
pop
sbb
adc
or
sbb
fstl
mov
ret
adcl
ja
or
stos
stos
lock
mov
push
pusha
mov
mov
fucomi
imul
lods
cmp
dec
fsts
inc
pushf
xor
cltd
fs
les
push
out
pop
icebp
inc
cmp
adc
lock
addr16
hlt
lahf
sti
rclb
fsubrl
xchg
mov
cld
fdivrl
cli
out
xchg
jl
jno
cmpsb
subb
rolb
in
enter
mov
int
int
sub
push
push
xor
and
int
sub
imul
int
int
mov
lods
fdivp
nop
sbb
pop
mov
loopne
lds
jae
pushf
fdivrl
lods
mov
pushf
enter
shlb
mov
xor
mov
fdivrl
cmp
sub
bound
adc
xor
imul
loopne
mov
mov
jns
outsb
int
int
or
inc
jne
sub
aaa
aaa
mov
cmp
cmp
dec
add
sbb
sub
repz
ds
aaa
aaa
mov
aam
js
xchg
jae
fldcw
cmp
lret
mov
lahf
int
jae
add
test
or
pop
dec
push
orl
dec
sub
mov
rolb
fisubs
ds
sbb
in
mov
xor
jno
das
jecxz
xlat
adc
lods
insb
test
dec
mov
adc
std
mov
fcompl
les
xchg
push
imul
mov
xchg
pop
sbb
js
mov
mov
jbe
inc
add
xchg
mov
int
xchg
shlb
sahf
int
pop
fs
jnp
lock
icebp
pop
sahf
push
loopne
lds
outsb
sub
fiadds
mov
faddl
cmc
sub
mov
lahf
in
push
clc
xor
cltd
sbb
mov
sbb
push
lds
dec
inc
iret
dec
xor
add
sarl
outsb
aas
ljmp
shll
shl
fcomi
mov
xorb
pusha
mov
sub
jmp
sqrtps
in
out
and
mov
out
out
mov
fdiv
mov
mov
out
dec
jne
loopne
xchg
xchg
fwait
shll
outsb
pop
cmp
test
push
dec
dec
inc
clc
jle
fdivl
adc
inc
mov
xor
pop
mov
ficomps
js
lret
and
cltd
outsb
mov
outsb
outsb
outsb
test
jo
and
pusha
push
mov
rolb
gs
and
mov
add
push
push
mov
jle
rcrl
adc
and
push
mov
xor
xchg
fstl
jge
clc
inc
call
adc
mov
arpl
test
fiadds
iret
int
jle
push
sub
fnsave
jnp
movsl
mov
cli
fsubr
push
mov
mov
aad
rolb
xor
outsb
outsb
fcomip
mov
pop
or
loope
jl
out
mov
lahf
fxtract
mov
daa
fistpl
sbb
test
iret
in
daa
ljmp
jns
xor
out
mov
fistpl
mov
or
jecxz
aaa
rolb
or
xchg
mov
dec
xchg
dec
out
sbb
js
cmpb
mov
shl
push
push
lods
test
inc
loop
js
jl
sbb
clc
or
sbb
iret
out
jb
ds
stc
outsb
movsb
pop
subb
fwait
fwait
fwait
fs
jo
jne
lock
pop
xchg
lea
jge
outsb
lahf
jns
pusha
inc
mov
push
shl
out
mov
lock
mov
cwtl
mov
sbbl
iret
out
mov
pop
jmp
lret
sbb
test
fwait
fwait
sub
push
xor
mov
clc
jecxz
and
aam
les
iret
popf
lea
dec
fisubl
cli
xor
xor
jo
aaa
aaa
mov
es
outsb
cmp
sti
jle
jg
fwait
fwait
mov
sbb
adc
pop
cmp
dec
add
jo
aas
fwait
fwait
cmp
imul
clc
loope
cmp
inc
fstps
push
mov
mov
fdivl
mov
inc
out
bound
push
cmpsl
frstor
loope
mov
xchg
ljmp
fldt
sbb
jg
int3
pop
jne
cmp
dec
cmp
push
mov
xor
jae
enter
xor
aaa
aaa
aaa
push
cmp
dec
pusha
cmpsb
fistl
or
adc
aaa
push
pop
sub
push
scas
inc
clc
add
jae
repnz
sub
pop
and
xor
enter
cmc
clc
mov
dec
call
rcll
and
inc
or
mov
aaa
aaa
aaa
lds
fwait
xchg
adc
daa
inc
rol
mov
loop
xlat
jnp
in
outsb
outsb
mov
incb
pop
repz
cmp
xor
inc
lcall
loope
xor
shlb
aaa
aaa
mov
fidivrl
xchg
loopne
and
fadd
data16
aaa
aaa
aaa
fimull
inc
mov
sti
fnstcw
cwtl
not
das
xor
mov
out
mov
iret
cmpsb
lahf
xor
mov
pop
sbb
adc
adc
xchg
iret
iret
out
dec
jbe
shl
pusha
addb
sbb
sti
jge
lock
js
rorl
xchg
mov
mov
outsb
outsb
fs
jecxz
dec
mov
popf
fisubrl
insb
bound
outsl
pushl
nop
fbld
ljmp
add
xchg
fmul
int
lahf
clc
and
inc
mov
cmp
push
adc
notb
sahf
fmul
call
lahf
das
cmc
in
or
push
push
out
ret
jo
cmp
or
adc
jp
stos
sub
pop
test
out
out
dec
mov
xchg
out
lret
out
out
daa
or
ss
sub
repz
jg
out
filds
mov
int
int
rclb
push
xor
adc
mov
imul
ljmp
or
inc
push
push
jecxz
jmp
push
adc
xchg
lock
ljmp
sbb
aaa
aaa
aaa
mov
in
je
push
mov
cwtl
or
cmp
ds
mov
inc
and
out
sbb
sub
cs
mov
outsb
pop
stos
int
cmp
insb
inc
fists
push
test
adc
sti
pop
mov
loopne
jae
sbb
daa
and
in
iret
xlat
ss
ficoms
xor
xchg
add
enter
mov
mov
je
mov
idivb
and
xor
loopne
or
test
out
pop
cwtl
fwait
cmpsl
dec
inc
jle
mov
int
adc
test
jbe
pop
int
int
repnz
into
test
pop
repnz
mov
orb
lahf
fwait
call
mov
ds
sub
int3
das
jae
test
push
das
andb
fwait
fwait
fwait
iret
push
cmp
out
inc
xchg
cmp
fwait
fwait
fwait
push
mov
push
push
sbb
xchg
clc
push
jae
rcrl
mov
pusha
mov
mov
sbb
jo
por
jae
sub
out
int3
xchg
mov
fisttpl
mov
fnstenv
fdivrs
aas
fwait
fwait
jecxz
sub
adc
cmpsb
xor
lds
mov
fs
dec
xorb
xchg
divl
shr
mov
in
das
inc
and
sti
dec
dec
imul
bound
dec
ss
jae
jae
xcrypt-cbc
cmpsl
push
pop
jg
aas
pop
xchg
adc
jae
lods
shrb
jp
test
ss
jae
repz
fldl
cld
add
fsubp
jne
ss
push
mov
data16
push
xchg
loope
mov
test
bound
out
jle
fcmovnu
shlb
stc
rorl
imul
jne
sahf
mov
gs
int
mov
mov
lods
clc
and
int
int
adc
fidivs
rcll
push
mov
inc
cmp
fwait
fwait
fwait
bnd
adc
mov
jo
fwait
fwait
fwait
sub
ret
loopne
and
fwait
fwait
fwait
fwait
xchg
stos
cmc
int
push
popa
je
adc
jge
cmp
mov
out
mov
mov
sub
lock
mov
mov
out
out
add
call
adc
adcb
dec
and
mov
sahf
inc
pop
and
pop
insb
out
out
push
dec
add
jle
mov
aad
add
push
leave
in
cld
mov
jae
jae
mov
adc
aam
xchg
and
fbstp
jae
sbb
data16
test
das
ffreep
addr16
lcall
aad
inc
rolb
inc
jmp
cli
movsb
pop
jp
cmpsb
icebp
lds
outsb
scas
fsubs
rcrb
stos
fwait
sahf
icebp
mov
imul
add
out
jae
mov
fsub
outsb
mov
addr16
lret
mov
sbb
and
dec
inc
out
adc
xlat
xchg
mov
std
inc
inc
push
add
cmpb
popa
xor
pop
mov
jae
xor
xchg
out
scas
dec
insb
lods
sarb
jge
adc
pop
out
dec
insl
or
pop
sahf
jp
dec
fsubrs
sub
dec
insb
push
pushf
pop
xchg
inc
pop
mov
ss
xor
or
sar
fnstcw
aaa
bound
adc
mov
ret
or
jae
in
add
test
jo
popf
mov
scas
into
test
jae
jae
inc
cmpb
sti
cli
lods
loopne
jns
int
addr16
mov
shll
push
gs
pop
pop
pop
push
mov
push
mov
pop
pusha
outsb
fstl
out
out
push
push
int3
sbb
or
mov
out
or
dec
xor
pop
pusha
scas
clc
sbb
fwait
fcmovnbe
dec
in
fs
dec
sub
fs
mov
sahf
int
bound
mov
shr
sub
fsubl
jne
bound
je
cmpsb
inc
scas
cltd
addr16
clc
insl
mov
or
cli
insb
cs
lods
cmp
cmp
je
out
mov
mov
cld
insb
mov
out
ss
mov
orb
into
andb
lcall
ljmp
mov
add
mov
push
sti
push
dec
das
push
lcall
pop
push
push
test
jle
pop
add
es
add
jecxz
adc
aas
int
int
adc
and
inc
mov
rolb
lods
push
jne
test
or
jle
outsb
outsb
dec
fidivrs
lret
xchg
cwtl
cmp
outsb
outsb
outsb
outsb
cmpsb
push
xchg
cld
cmpsl
cmp
movsb
ret
xchg
xor
clc
insb
outsb
cs
insb
mov
dec
jbe
dec
sub
cli
orb
jae
mov
push
fmulp
jnp
pop
and
jae
jae
fcoml
repz
xchg
aam
pop
push
call
aaa
aaa
aaa
aaa
repnz
fcomi
cs
pop
in
dec
cmp
mov
out
sahf
xchg
push
test
ja
out
jge
mov
add
out
cmpsb
lret
pusha
add
into
push
mov
mov
mov
sbb
sahf
push
mov
jno
aam
xchg
mov
and
outsb
sahf
pop
imul
push
lahf
sub
aaa
icebp
push
rcrb
sbb
push
ret
mov
daa
pop
cmp
sbb
movsb
xadd
aad
or
or
add
inc
roll
lock
sub
lock
outsl
mov
lret
fcompl
repz
adc
jecxz
push
sbb
mov
fimull
jnp
fdivr
cmp
mov
xorb
outsb
outsb
outsb
cli
mov
bound
xor
mov
outsb
outsb
adc
shll
mov
cld
cli
inc
mov
adc
in
push
mov
ljmp
out
out
push
mov
out
ss
lods
sub
bound
jge
mov
or
bound
mov
pushf
jae
pusha
jl
adc
scas
stos
idivb
sbb
mov
mov
or
out
jo
xchg
jp
outsl
cmp
ss
outsb
outsb
adc
jb
andl
dec
dec
mov
test
mov
mov
pusha
in
inc
mov
fadds
jl
into
push
mov
ret
lods
fisubl
add
in
and
aas
out
les
out
jl
cltd
inc
cmp
out
jae
ss
stos
sbb
jle
je
mov
lods
ficoms
stos
in
sti
pusha
mov
test
xor
ljmp
cmp
xlat
mov
mov
jge
mov
daa
cmpb
pop
inc
insl
fdiv
mov
stos
sub
lcall
cmp
fdivrl
mov
push
rcrb
fld
lret
outsb
aas
or
cwtl
enter
mov
or
out
jge
and
adc
dec
fdivrs
loop
jae
in
jmp
pop
xchg
lods
idivl
rolb
and
mov
lahf
ljmp
or
inc
sub
in
call
out
mov
rcrb
dec
adc
mov
out
movsl
mov
into
hlt
mov
addr16
nop
or
ljmp
cmp
imul
daa
ljmp
stos
adc
cld
pop
lock
lock
or
xorl
ret
outsb
rcll
inc
mov
jo
push
jle
xchg
xchg
cmpsb
pop
sbb
or
xor
jecxz
cmp
outsb
outsb
int3
jl
outsl
dec
jl
lds
out
xchg
adcb
sub
xchg
orl
test
adc
lcall
mov
inc
cs
rcrb
out
xchg
ja
fcmovne
testb
xchg
sbb
jecxz
stos
sahf
mov
testb
pop
in
scas
xor
ds
out
fldl2e
sub
push
cmp
out
outsl
mov
sbb
dec
call
aaa
adc
cli
dec
lcall
sbb
into
or
pop
les
shll
sub
cli
inc
pop
xlat
test
adc
cmp
add
fwait
inc
add
fisubl
adc
lahf
int
int
lods
or
and
mov
clc
push
fwait
push
daa
xchg
mov
out
ds
or
jae
cmpl
jle
or
xchg
xlat
push
insl
inc
jo
push
mov
sub
aas
fdivrl
add
popa
cmpl
jo
xor
outsl
mov
and
cmp
aaa
mov
dec
fcompl
sbb
int3
push
cmp
mov
dec
ljmp
xchg
out
divb
lods
and
roll
movsb
out
mov
lods
mov
ds
lahf
adc
mov
mov
cmp
sbb
mov
test
scas
inc
jl
dec
jle
lock
out
cmp
std
orl
imul
in
jae
mov
arpl
mov
int
push
ja
mov
cmc
pop
inc
inc
or
lahf
int
int
scas
or
jg
sbb
fwait
sbb
add
xor
fwait
fwait
fwait
inc
add
ss
mov
fwait
fwait
lcall
and
fisubs
jecxz
jnp
cmp
mov
dec
shl
out
out
lcall
xchg
inc
test
xchg
mov
sahf
dec
cmpsb
test
divb
mov
adc
sbb
ss
jmp
sbb
inc
js
xchg
fwait
mov
lds
xlat
pop
mov
jl
jo
out
sub
divb
nop
insb
jecxz
adc
xchg
fiaddl
shll
mov
je
mov
test
mov
fdivrl
push
and
mov
sub
fdiv
xlat
in
test
int3
pusha
sbb
fldl
cmc
fcompl
in
xor
lahf
fwait
stos
sahf
lods
mov
addr16
push
mov
xchg
mov
adc
cmp
out
add
out
cmpsb
stos
xchg
test
in
loopne
insb
outsb
outsb
mov
mov
imul
aam
mov
je
sub
mov
pop
std
xor
jl
dec
daa
clc
dec
into
mov
jle
and
sbbb
es
ficoms
lret
push
push
dec
or
into
int
int
add
and
out
or
mov
push
lret
push
xchg
mov
mov
fs
arpl
test
sub
jecxz
fwait
fwait
mov
test
testl
imul
daa
addr16
pusha
push
adc
mov
mov
ret
scas
shll
and
jae
fiaddl
xor
loop
in
or
decb
lahf
adc
and
nop
xor
ds
dec
mov
and
pop
jge
std
popa
pop
pop
cmp
outsl
mov
test
loope
jp
mov
les
andb
repnz
inc
iret
inc
ret
mov
mov
stc
cli
xchg
nop
pop
and
notb
lret
jle
in
mov
ljmp
iret
xchg
xor
outsb
jp
xchg
ficoms
ja
cli
pusha
or
pop
int
not
jp
mov
inc
adc
mov
out
sbb
dec
pop
aas
lock
insb
jg
xor
jbe
cmp
xchg
fdivrl
mov
xor
leave
lret
das
xor
aaa
jo
fsubr
xor
into
iret
out
jbe
fcoml
out
int
scas
out
mov
jp
jbe
add
outsb
outsb
es
sub
popf
push
nop
out
dec
std
add
mov
insb
out
mov
jae
out
clc
shlb
int
jo
xor
mov
sbb
and
testb
test
imul
jae
cmp
lret
in
cmp
outsb
mov
stc
insb
outsb
mov
xor
int
in
addr16
pop
iret
loopne
xorb
cli
mov
and
int
loope
adc
fucomip
in
xor
xor
and
xchg
mov
je
sahf
int
aas
jg
int3
inc
add
adc
mov
mov
mov
idivb
mov
mov
ss
inc
pop
add
hlt
pop
and
dec
int
int
add
adc
iret
aad
cld
mov
xchg
test
mov
or
push
fwait
fistl
mov
mov
insl
mov
iret
or
movsl
fs
xor
mov
aaa
xlat
pop
mov
and
xchg
outsb
push
lcall
rclb
test
mov
out
add
ret
push
stos
int
xchg
out
out
cmp
jno
adcl
mov
xchg
shl
pop
lods
mov
jae
mov
in
inc
movsb
rolb
lahf
stc
push
or
mov
cmp
push
popf
das
fwait
fwait
fwait
fwait
or
aad
imul
hlt
jmp
popf
outsl
xchg
add
or
popl
pusha
add
push
or
outsb
sub
call
ds
cmpsb
fidivrl
mov
testb
mov
pop
test
loope
fwait
loopne
push
fcomip
ljmp
fwait
fwait
incl
adc
mov
stc
repnz
test
inc
cmp
mov
mov
mov
sub
push
and
sti
ror
sbb
arpl
cmp
adc
adc
aas
movsl
cli
divb
cwtl
ljmp
inc
mov
scas
xchg
cmc
mov
adc
out
out
in
xor
push
int
jne
jae
subb
iret
sahf
out
mov
adc
push
lods
insb
outsb
ja
add
jo
sub
pop
cmp
aaa
aaa
push
data16
test
add
xchg
push
xchg
and
jo
pop
fwait
fwait
fdivs
dec
fisttpll
ficompl
cmpb
or
aaa
jge
cmp
ljmp
and
or
mov
pop
sub
in
cmpsb
fbstp
rcrb
pop
sub
arpl
xor
xchg
fwait
sbb
lcall
aaa
jl
xchg
push
popa
inc
inc
and
call
or
lods
xchg
sbb
mov
push
pusha
add
fwait
fwait
es
jns
filds
fwait
sar
je
cmp
pushf
repnz
adc
add
or
pop
aam
movsb
mov
sub
pop
inc
mov
je
insb
mov
mov
ja
push
adc
scas
hlt
sti
push
mov
dec
mov
lock
mov
repz
dec
stos
arpl
div
dec
push
enter
or
sbb
pop
or
test
in
imul
dec
cmp
sub
dec
rolb
lods
daa
jae
xchg
jle
data16
rorb
rclb
jae
pop
mov
push
fildl
in
jae
jae
shlb
aas
stos
or
jae
jae
sub
xchg
out
subb
jb
mov
stc
std
sub
and
hlt
ficomps
ja
std
inc
mov
pushf
nop
mov
idivb
movsb
dec
shr
add
ljmp
sub
jo
insb
fdivl
aas
fwait
or
cmp
and
hlt
cmp
add
push
mov
fcompl
test
es
dec
cli
mov
in
dec
dec
mov
sarb
add
mov
sub
pop
cmp
loop
xlat
mov
sarb
inc
push
xchg
dec
popa
test
out
xorb
mov
ss
insb
dec
mov
mov
shll
ds
xor
orl
insb
mov
fsubrl
loop
insb
sbb
fsubrl
cmp
icebp
push
push
fisubrl
fsts
aad
ljmp
aaa
mov
cld
rclb
jle
in
ficomps
lret
pop
nop
out
jp
repnz
int3
pop
adc
loop
jae
ror
cmp
mov
jbe
test
jae
jae
add
inc
ds
jp
mov
test
leave
pop
pop
int3
or
mov
sbb
js
aaa
mov
int
in
inc
clc
subb
adc
dec
in
addb
mov
int
cmp
jle
push
mov
mov
ljmp
sub
fs
xchg
inc
mov
sub
pop
lods
add
and
aaa
pop
test
scas
daa
mov
pop
mov
leave
arpl
pmaxsw
mov
cs
out
jb
rorb
repz
fs
in
ljmp
jmp
arpl
out
ret
ret
sbb
jns
in
sti
test
xchg
sarl
int
int
pop
ss
stos
sub
int
mov
cmp
mov
iret
int
int
ja
and
fcompl
out
out
fcmovu
ljmp
fsubp
outsb
aas
dec
iret
push
adc
mov
adc
cmp
aaa
aaa
jge
push
sti
inc
ret
fwait
lods
lock
dec
dec
ss
aaa
aaa
cmpsl
enter
cmpb
dec
fcoml
pop
xor
loope
inc
mov
mov
jns
pop
mov
mov
fadds
mov
sbb
sub
test
mov
scas
jl
add
sbb
sarb
ljmp
bound
sbb
ja
mov
adc
in
out
icebp
inc
lods
imul
loope
push
push
cmpsb
loope
js
jge
test
scas
lcall
iret
aam
mov
xchg
les
push
movsl
enter
ja
sahf
fcomi
and
xchg
jg
popa
and
pop
std
dec
sub
push
out
inc
jns
cltd
out
mov
arpl
mov
pop
aas
pop
sbb
clc
mov
testl
dec
jns
cwtl
data16
int
scas
dec
jle
scas
mov
out
movsl
into
int
ss
dec
push
je
in
iret
out
dec
jb
out
testb
out
xor
aas
adcl
insb
outsb
pop
test
push
ret
fcoms
add
int
add
xor
ja
xlat
outsl
mov
and
xor
arpl
sti
push
ficoms
outsl
mov
dec
outsl
pop
getsec
push
std
inc
fmull
lods
push
test
aaa
aaa
aaa
aaa
or
sub
scas
movsb
idivl
xchg
fdivr
cld
cmc
sbb
cmp
pop
fs
ds
aaa
jno
cmpsb
mov
jae
jae
ret
lods
pop
cmp
cmc
mov
jae
lods
cld
in
fs
pop
adc
mov
iret
int3
and
sahf
loop
inc
dec
das
test
cmp
lock
cmp
loop
sub
inc
mov
clc
mov
inc
adc
pop
lods
addl
mov
mov
std
lcall
add
mov
enter
jae
add
add
mov
dec
rorb
mov
decb
sub
mov
ljmp
das
and
cmp
mov
push
mov
shlb
in
fdivrl
ljmp
scas
sbb
out
xchg
fidivrl
push
bound
sbb
or
xlat
int
int
cmp
hlt
lock
int3
add
mov
lahf
mov
sub
push
push
hlt
push
fisubrs
arpl
xchg
iret
test
mov
ret
adc
es
sbb
js
hlt
rol
xchg
xchg
iret
icebp
movsb
sbb
inc
push
xchg
xor
andl
jl
icebp
cmp
xor
sahf
pushf
aas
fwait
fwait
fwait
jo
cmp
push
mov
loopne
xor
out
fdivrl
sahf
in
push
mov
ds
xlat
xchg
pop
cmp
xchg
outsb
dec
rorl
sub
inc
adc
xor
mov
jl
mov
sbb
repz
pop
lock
test
jmp
and
sahf
pop
adc
jae
and
stc
jns
adc
jl
mov
jge
out
xchg
cmp
je
pop
pop
push
xchg
cs
outsb
outsb
outsb
out
cli
scas
lods
push
cwtl
jl
sti
ret
aas
jecxz
add
add
inc
int3
push
out
js
jae
pop
mov
cli
xchg
fisubrs
addr16
mov
enter
into
iret
mov
dec
and
jne
mov
or
jl
icebp
xor
jle
mov
dec
enter
mov
xchg
movsl
fisubrs
iret
sahf
dec
cltd
mov
out
sbb
add
xchg
cld
xchg
sahf
inc
pop
cld
or
fisubrs
add
stc
jns
xchg
jae
push
pop
rcll
jbe
cmp
loop
xor
push
adcl
sarb
push
jle,pt
lahf
out
dec
dec
dec
test
or
or
in
stc
jns
mov
dec
mov
add
xchg
inc
sub
inc
mov
add
cmp
fucomi
rcrl
inc
inc
test
iret
iret
repz
lahf
push
das
aas
sahf
enter
fsubrs
sbb
jle
pop
lcall
xchg
sahf
lahf
out
push
insl
test
sub
or
outsl
lahf
les
jle
push
stc
jns
loopne
test
jl
sub
stos
sub
out
and
movsb
out
dec
cmpsb
es
fdivrl
test
pop
leave
jecxz
mov
push
mov
mov
sarl
mov
fdivr
xor
in
addr16
xor
in
jae
fnstcw
or
cmp
fnstenv
aaa
aaa
mov
jbe
mov
jne
adc
xor
jl
aaa
jg
fdiv
push
cmpsb
ds
popa
push
fcompl
pop
dec
clc
in
adc
push
clc
fcompl
mov
or
das
comiss
lds
mov
jae
pop
jle
bound
dec
les
test
mov
fidivl
push
or
test
push
test
push
out
jb
fstp
fcoml
mov
xlat
div
ret
xor
outsb
outsb
out
clc
jp
movsb
jge
scas
mov
xchg
dec
hlt
mov
imul
js
sti
mov
ja
leave
es
push
fidivl
dec
es
fcmovne
mul
je
sahf
pop
dec
mov
push
shl
pop
add
jl
ss
add
mov
das
sbb
out
sub
out
sahf
ss
insl
scas
sahf
jae
out
sub
pop
inc
out
das
shr
iret
addr16
jae
scas
lcall
das
adc
mov
jecxz
out
xlat
inc
scas
sahf
dec
and
cld
loopne
adc
aaa
out
addr16
mov
xchg
mov
repnz
out
out
dec
mov
lahf
ljmp
out
out
pop
outsb
repz
xchg
mov
mov
in
pop
loopne
mov
andb
outsb
outsb
fisubrl
ret
pop
or
mov
aaa
pop
fnstcw
adc
pop
or
clc
mov
dec
es
sbb
cmp
pop
outsb
jle
mov
in
pushf
les
mov
test
jp
mov
insb
outsb
xor
je
cld
mov
iret
out
pop
in
fwait
push
lahf
xchg
jle
ds
data16
scas
xchg
pop
lret
negl
shll
inc
adc
int
push
repnz
pop
xchg
call
dec
cmp
aaa
push
add
mov
ret
leave
fcomi
repz
add
lea
mov
sahf
mov
in
sti
jle
lds
xchg
out
inc
movl
xchg
addr16
xchg
mov
ss
stc
pop
leave
addr16
iret
jae
stc
cmp
mov
pop
lds
add
cld
cmp
iret
xchg
xchg
icebp
shll
repz
out
sub
std
lods
ds
aaa
aas
cmp
outsl
mov
call
cmp
stos
dec
outsl
pop
dec
or
insl
cmp
nop
scas
lods
bound
xchg
das
cs
out
jmp
mov
imul
aaa
mov
mov
mov
cld
ja
sub
aaa
cs
mov
push
mov
fadd
cld
fcom
cmp
or
pop
lock
xor
pop
xchg
dec
in
daa
cmc
fdivl
lret
xor
fwait
int
int
push
mov
cli
inc
mov
roll
aam
mov
int
pushf
and
mov
stos
fwait
mov
aaa
dec
jg
mov
subb
fwait
fwait
fisttps
mov
scas
pop
test
jmp
lahf
ljmp
push
mov
nop
testb
aas
rol
incl
add
mov
pop
jg
sub
pop
sub
addr16
sarb
push
mov
lods
xchg
nop
insl
outsb
les
adc
xor
fstps
jle
cld
into
mov
rcrb
jae
xchg
and
fisttps
orb
xchg
mov
jae
fcompl
mov
cmpsl
jae
out
mov
out
test
and
fwait
ja
fcmovne
out
mov
add
scas
outsb
outsb
outsb
aas
dec
push
push
insb
jb
out
cld
sbb
outsb
inc
fistpll
xchg
ds
shll
add
push
inc
jae
jle
inc
outsb
outsb
outsb
scas
fmull
pop
out
adc
mov
dec
cmpsl
pop
leave
adc
lahf
fistl
es
movsl
aas
jl
mov
into
int
mov
mov
in
test
loopne
dec
pop
loope
in
cli
sahf
and
int
int
inc
mov
add
push
pop
mov
lock
mov
bound
loop
stos
cmp
in
int
in
addr16
and
mov
aaa
mov
int
jns
insl
dec
andl
mov
fnstenv
js
popa
lcall
jns
and
add
xor
iret
out
negb
add
scas
nop
into
mov
aas
icebp
aas
loope
xlat
adc
xor
into
jl
cmp
sub
mov
js
add
fwait
push
jle
inc
ficoms
pop
or
mov
int
int
xor
repz
sbb
jge
add
pop
lds
ficomps
scas
jp
and
ret
in
sub
das
daa
ljmp
stos
data16
cmp
jno
and
pop
loopne
jmp
add
outsb
push
out
bound
scas
sahf
sbb
outsb
outsb
aas
fwait
dec
negb
outsb
push
push
sub
push
outsb
outsb
outsb
outsb
into
call
pop
dec
jp
pop
mov
pop
cld
insb
xor
and
dec
aas
cmc
cmp
jbe
add
aaa
aaa
aaa
mov
inc
ja
push
popf
jbe
lcall
aaa
aaa
aaa
cmp
into
arpl
inc
mov
ret
dec
mov
mov
or
jo
cmp
aas
fildl
inc
mov
aad
outsb
outsb
outsb
outsb
pop
mov
inc
xchg
add
aam
adc
pop
adc
lock
push
decb
fdivrp
repnz
mov
outsb
cmp
or
push
cmp
fdivrp
iret
insb
outsb
outsb
outsb
add
jne
scas
xor
rcrb
cli
mov
jle
aas
fstpt
enter
hlt
out
mov
mov
and
adc
or
outsb
outsb
sub
pushf
jo
mov
pcmpgtb
outsb
rcrb
clc
into
sbb
mov
mov
pop
mov
lret
out
jae
cmp
push
sub
push
clc
pusha
sbb
sbbl
jo
push
mov
ret
fildl
loopne
and
mov
outsb
aas
fwait
push
jecxz
leave
and
js
dec
outsb
outsb
outsb
outsb
mov
cli
add
and
clc
jns
inc
mov
pusha
mov
xor
sub
aaa
mov
inc
or
mov
adc
aaa
aaa
aaa
aaa
or
sub
dec
lds
add
xchg
aaa
aaa
adc
jno
xchg
mov
int
ja
push
mov
es
out
dec
loop
bound
int
mov
or
sti
enter
jle
cmp
mov
sbb
int3
test
enter
mov
sub
sahf
jbe
iret
int
xor
or
sahf
cld
cmp
enter
sub
mov
mov
sahf
or
enter
stc
jns
sahf
mov
test
add
or
xchg
lahf
out
pop
xchg
inc
or
iret
repz
sub
addb
test
sbb
stc
jns
sahf
pop
dec
sahf
pop
pop
test
sahf
lahf
out
sbb
or
sbb
iret
inc
jle
enter
sub
xchg
push
mov
repz
cmp
sub
dec
scas
cmp
iret
iret
das
outsb
test
sub
repnz
stos
push
and
loop
stc
jns
daa
mov
and
mov
push
or
xor
mov
mov
push
aaa
call
adc
xor
icebp
mov
jle
js
clc
sarl
mov
sbb
push
mov
xchg
je
testb
fcompl
out
out
sbb
arpl
sub
cld
cmp
iret
adc
and
iret
repz
xor
out
xchg
and
pusha
repz
adc
iret
notb
jp
shlb
lods
mov
aas
iret
adc
cmp
mov
push
mov
xchg
out
push
lcall
push
mulb
mov
shll
xchg
xchg
dec
gs
or
mov
stc
jns
sahf
ds
dec
stc
or
mov
out
push
mov
inc
mov
add
adc
out
stc
jns
xchg
inc
icebp
roll
jns
sahf
lahf
mov
xor
xor
out
sbb
mov
dec
push
pop
jae
xchg
mov
int3
sbb
fdivr
outsb
outsb
sub
mov
ja
test
ds
or
shrl
lock
mov
push
pop
sub
stos
out
pusha
cmp
fbstp
sahf
mov
pop
push
scas
aas
test
into
sarb
xchg
jb
jg
push
jle
and
sbb
out
mov
cmp
jae
pop
lods
jle
aas
mov
cmp
fildll
dec
mov
mov
aas
mov
ror
xor
mov
xor
aaa
scas
mov
fisubs
fsubrs
scas
add
sbb
jle
loopne
ret
adc
inc
jae
sub
cmpsb
pop
pop
insb
pop
mov
mov
inc
adc
addr16
mov
mov
xorb
sbb
fwait
fwait
mov
push
shrl
mov
add
xchg
inc
test
aam
cwtl
or
iret
cmpsb
out
addr16
mov
ficomps
aad
test
std
sahf
test
sub
lret
fxch
fdiv
in
mov
sarl
call
jecxz
fcoml
add
or
pop
cmp
shlb
es
sub
iret
int
aaa
jge
mov
es
xchg
xchg
cs
das
imul
push
jl
out
out
ljmp
jle
out
add
out
mov
mov
jb
xor
sar
inc
push
daa
fcmovb
jbe
jmp
loope
inc
inc
hlt
adc
xor
sbb
mov
test
repnz
lock
std
outsb
cld
sbb
out
das
jb
outsb
sahf
xchg
test
mov
pop
test
sbb
stos
cmpl
xor
ret
fdivl
int
in
add
add
xchg
ffreep
dec
test
lahf
sbb
je
push
rol
lret
jne
ljmp
cmpsb
rcl
jae
mov
and
notb
adcb
fnstcw
out
pop
mov
mov
dec
lea
outsb
scas
or
rorl
adc
into
aaa
mov
jne
mov
sti
bound
mov
add
insb
aam
cwtl
into
and
int
in
inc
bound
mov
fsubs
divl
aaa
mov
int
mov
es
ss
dec
fnstcw
cld
insb
sbb
data16
or
pop
fdivrp
stos
aam
hlt
popf
stc
sub
and
fisttpl
fdivrs
movsl
lock
cmp
test
jns
insb
out
nop
mov
cmp
lock
icebp
insb
outsb
outsb
sbbb
movsl
popa
cmp
iret
testb
imul
pushf
shlb
jno
idiv
mov
popa
mov
mov
mov
pushf
mov
adc
ror
out
int3
and
xor
push
subl
js
cld
jb
icebp
and
cmp
dec
insb
outsb
outsb
dec
movsb
push
fs
xor
mov
andl
dec
jnp
nop
gs
call
inc
in
xchg
sbb
je
jno
in
leave
idivb
outsb
ficompl
adc
add
xchg
ss
out
dec
or
rolb
stc
hlt
sarl
outsb
aas
fwait
inc
pusha
hlt
add
dec
adc
idiv
insb
outsb
push
or
sbb
xchg
adc
fcmovnb
fs
push
sub
adc
dec
in
jle
in
outsb
outsb
outsb
jbe
jno
rcll
pop
inc
adc
jo
jge
outsb
mov
mov
stc
orb
xchg
aaa
mov
out
pop
es
dec
jbe
cmp
push
loop
and
ds
aaa
sbb
sbb
inc
and
sbbb
rcr
xchg
xor
adc
dec
xor
jecxz
add
cmp
into
mov
mov
xchg
loope
and
imul
lods
inc
into
cltd
sahf
cltd
jb
jne
icebp
add
hlt
or
sub
push
addb
mov
sub
fisttpl
insb
cmp
loopne
icebp
add
decl
iret
pop
add
push
jae
test
ret
fcompl
dec
out
in
sbb
push
fcomi
faddl
jno
jb
movsl
int
int3
int
in
pop
mov
mov
mov
add
int
cmp
add
push
sbbb
dec
mov
and
insb
outsb
fucomip
fs
loope
bound
lods
popa
gs
mov
ror
outsb
push
insb
ret
xor
add
dec
test
mov
imul
cmp
xchg
insb
leave
sar
jg
fcmovne
mov
ficompl
and
je
sahf
mov
fwait
or
stc
movsb
scas
mov
inc
ds
notb
shll
or
xor
adc
out
cwtl
test
xor
call
popa
ret
in
jb
int
hlt
adc
rorb
mov
cltd
cmc
leave
shll
xor
xor
clc
push
iret
in
addr16
popa
stc
mov
jbe
ja,pt
mov
hlt
fisubl
cmp
test
add
addr16
xor
mov
xor
mov
jmp
adc
and
loopne
add
cmp
mov
out
fdivs
test
mov
dec
pop
jno
iret
int
aas
setb
xchg
gs
adc
insb
mov
cwtl
in
icebp
roll
cmc
pushf
js
mov
or
jge
mov
les
aad
loop
mov
loope
inc
ficomps
int
push
pop
add
xchg
mov
pop
fwait
fwait
fwait
iret
das
mov
inc
sbb
enter
sbb
ds
mov
and
fld
cmp
aaa
aaa
mov
es
test
cmc
jae
mov
clc
fnstcw
aaa
xor
jmp
xchg
clc
es
mov
pop
outsb
loop
and
sub
cmp
addr16
jae
js
pop
jge
sbb
adc
and
aaa
stos
ret
add
sbb
inc
sbb
jae
jae
cmp
lock
in
popa
push
jb
lahf
rol
lods
xor
adc
or
jae
jae
inc
add
xor
and
sbbl
insl
gs
xchg
pop
es
fwait
inc
jae
sti
sbb
fadd
xchg
mov
mov
mov
cwtl
xchg
pop
sub
outsl
jecxz
cwtl
adc
in
jno
jle
mov
mov
or
mov
das
loope
fdivl
je
cmp
int
add
mov
gs
dec
push
push
xchg
add
and
or
jge
mov
push
jle
mov
mov
push
shll
popl
bound
pop
nop
shrb
gs
mov
cld
rorl
fsubrs
mov
dec
js
mov
mov
or
popf
pop
adcb
sbb
js
lahf
ds
sahf
icebp
dec
adc
or
mov
mov
adc
adc
les
jae
in
xchg
jbe
cmpsb
into
inc
jo
mov
iret
push
stc
test
clc
pop
xchg
out
notb
pusha
jo
clc
jecxz
clc
pop
jns
mov
fdivs
or
out
sub
push
mov
lods
inc
jmp
in
in
mov
cli
dec
lret
jmp
fdivr
mov
loope
loopne
xchg
xchg
jl
mov
andl
add
mov
mov
iret
fbstp
lds
xlat
repnz
sub
push
cs
xchg
push
std
insb
outsb
push
je
xchg
mov
cmp
mov
mov
xor
xchg
lods
xchg
shrb
fwait
fwait
cmp
pop
popa
lcall
and
adc
call
daa
jecxz
inc
enter
js
lcall
lret
in
cli
inc
xor
je
popf
insb
lahf
fwait
fwait
repnz
in
out
out
xor
push
jp
out
sti
inc
orb
ds
add
sarb
shrb
outsb
scas
mov
xchg
es
lock
outsb
sub
cmpsb
movsl
lea
test
in
dec
pop
int
iret
out
je
push
push
cmc
js
mov
pop
mov
ss
xor
add
jae
and
mov
repz
xor
ss
push
cmp
mov
xchg
adc
imul
push
xor
push
insb
in
push
or
mov
aaa
mov
cli
stos
mov
inc
pushf
mov
cmp
aaa
aaa
mov
mov
sub
lods
jp
jge
fnsave
push
ficoml
outsb
outsb
out
or
adc
js
scas
outsl
out
cmp
aad
jno
pop
cmpsb
shll
lock
jns
mov
xchg
sbb
outsb
lahf
fwait
lods
dec
adc
daa
sub
loop
or
xchg
and
outsb
outsb
in
jo
sub
push
push
push
fsubl
test
out
pusha
outsl
cld
xchg
fnstcw
xor
jmp
cmp
mov
mov
test
inc
pop
xor
int3
mov
aaa
aaa
aaa
aaa
jle
ret
rolb
cs
scas
aaa
aaa
aaa
aaa
sub
and
fbld
sbb
jg
loopne
mov
mov
sub
into
fisubl
mov
data16
out
fsubl
dec
hlt
pusha
lock
sbb
je
dec
jnp
loop
shll
pop
add
push
sbb
jle
aaa
mov
andb
sub
inc
push
outsb
push
mov
and
ficoml
or
or
xchg
add
aaa
aaa
aaa
aad
int
cmp
add
aaa
inc
fstpt
and
rolb
push
loop
sub
call
clc
jae
rolb
mov
aad
imul
iret
in
and
inc
sbb
push
mov
xlat
dec
xor
dec
cmp
mov
outsb
gs
stos
or
lock
and
pop
sbb
sbb
lock
push
sbb
rolb
jb
aas
fildll
cmp
cmpsl
sbb
jae
shlb
xchg
inc
gs
sub
es
mov
out
adc
cmp
out
cli
sarb
hlt
pop
jo
mov
insb
outsb
inc
jmp
mov
scas
xor
sbbl
and
lret
lods
mov
sarb
test
sbb
xor
push
inc
push
or
rorl
and
repnz
jne
push
test
hlt
pop
sub
jb
rcl
loop
das
ss
call
mov
fcmovbe
inc
out
mov
shlb
xor
xor
rorl
mov
popf
or
dec
lahf
dec
scas
fxch
enter
push
cld
jle
aam
jo,pt
fiaddl
fsubrp
js
aaa
aaa
clc
or
xor
cmp
lea
loopne
fsubl
and
js
xor
fdivr
nop
fsubrl
or
imul
movsb
mov
xchg
loopne
ret
dec
jg
sbb
fmull
cmp
aad
hlt
out
xorl
nopl
lahf
int
int
test
bound
pop
push
iret
adc
jns
scas
xchg
mov
jnp
cmp
test
or
leave
or
mov
inc
and
mov
push
push
clc
push
out
cmp
dec
ljmp
xchg
xchg
push
jge
or
imul
flds
mov
xchg
bound
js
mov
cmp
xchg
pop
test
mov
cmp
mov
in
mov
gs
mov
cmp
push
insb
adc
addr16
pop
loope
clc
or
ja
cwtl
xchg
ljmp
mov
mov
and
faddl
imul
xchg
jno
jp
cli
push
shlb
rcr
fdiv
test
pop
lods
or
cltd
sub
lods
xor
lea
mov
out
testb
mov
add
sbb
aaa
aaa
lahf
fstpt
sahf
mov
push
pushf
mov
aaa
aaa
aaa
cmp
aam
dec
aas
pop
xchg
inc
inc
mov
aaa
aaa
aaa
aaa
and
xorb
push
mov
aaa
aaa
aaa
aaa
mov
sub
loope
sti
fdivrl
aaa
arpl
rclb
addr16
jae
mov
movsb
jnp
push
push
mov
test
sbb
gs
cmp
sarb
adc
mov
sub
clc
fsubl
mov
mov
loope
sbb
mov
adc
jge
stos
jo
mov
clc
jle
push
inc
mov
fdiv
shrb
outsl
ret
mov
mov
daa
mov
xor
sahf
imul
xor
in
xchg
shl
cmp
out
mov
ljmp
popa
popf
mov
rcrb
in
hlt
jge
dec
fwait
icebp
inc
jle
cs
mov
movsb
push
xor
pop
jno
jg,pt
jbe
pop
rep
mov
or
xor
sub
mov
in
shll
lahf
ret
test
rcll
jae
jae
lock
cmpsl
andl
jl
add
sarb
loopw
push
xchg
fmull
iret
nop
shrb
shrb
cmp
ljmp
scas
mov
mov
mov
iret
in
fwait
clc
dec
fcmovne
push
int
dec
pusha
mov
mov
push
call
pop
loop
adcb
in
inc
cmp
pushf
int3
cs
inc
repnz
xchg
jae
add
mov
pop
popf
pushf
cld
insb
xchg
loop
sbb
rcrb
jge
lock
dec
divb
in
xor
sub
shll
mov
pop
mov
out
xchg
out
out
aas
fs
pop
out
or
clc
insb
outsb
or
xchg
xorb
jae
sub
clc
sub
jo
loop
jae
pop
dec
sub
dec
and
stc
fdivrl
mov
cmp
cmp
cmp
pop
jle
mov
mov
clc
xor
inc
fadds
addr16
pop
divb
sbb
cld
dec
outsl
mov
out
out
pusha
out
fscale
xchg
pushf
cmp
mov
iret
jle
dec
fldcw
jns
iret
out
jns
push
test
push
or
pusha
push
int
pop
cmp
jg
sub
lcall
adc
ret
xchg
jno
into
sub
sahf
out
mov
mov
adc
stc
dec
jae
iret
push
adc
pop
jo
aaa
aaa
rcl
jbe
inc
in
out
lea
fcmovnb
imul
ja
loop
orl
cmp
insb
sub
pop
js
mov
sbb
dec
aaa
ja
nop
cli
mov
jbe
clc
int
adc
aaa
aaa
aaa
mov
adc
subl
and
clc
aad
icebp
int
in
addr16
hlt
jns
adc
sub
jl
int
int
jecxz
xchg
scas
inc
shl
inc
xor
jle
lahf
add
sbb
call
xorb
mov
mov
adc
sub
rorl
push
or
adc
stc
scas
cmp
xchg
mov
or
lahf
push
push
ja
jae
jae
inc
test
idivl
into
xor
cld
and
int3
test
mov
adc
jae
push
inc
mov
push
inc
cltd
maxps
pop
dec
push
jnp
ss
pop
insb
or
inc
add
dec
pop
leave
ret
dec
jmp
jl
cmpb
out
stos
dec
les
arpl
mov
or
lds
stos
sahf
pushf
fsubl
fbld
push
xor
clc
or
mov
fwait
fwait
shlb
jmp
rcrl
fidivrl
sbb
jg
mov
mov
push
mov
mov
and
shl
sbb
outsb
jg
cmpsl
inc
data16
add
outsb
outsb
outsb
outsb
inc
gs
dec
fsubrl
imul
mov
leave
xchg
mov
in
mov
lods
ja
push
mov
mov
and
ljmp
dec
movd
inc
stc
lock
addr16
pop
sbb
popa
cmpsb
inc
cmp
adc
adc
ds
int
add
aam
lahf
mov
out
cmp
xchg
mov
jnp
sub
fistps
loop
and
push
leave
je
mov
dec
mov
iret
out
push
scas
xor
push
test
hlt
cmp
lcall
mov
fdivrs
mov
flds
mov
mov
fdivrl
sbb
pop
mov
cmp
negb
lahf
popf
add
mov
pop
or
out
out
jp
xor
push
ret
stc
jnp
out
out
xor
adc
mov
aam
imul
sbb
insb
aas
fcmovne
pop
int
popf
xor
std
add
pop
and
add
xchg
outsl
and
scas
push
pop
or
out
loop,pt
sarl
mov
mov
inc
mov
adc
mov
cmpl
pop
cmp
fsubl
dec
pop
dec
push
xor
jae
mov
or
xchg
sti
sbb
jae
arpl
mov
mov
enter
sub
or
mov
push
push
mov
xchg
push
out
jae
jle,pn
push
xchg
les
aaa
mov
test
enter
mov
int3
imul
stos
dec
int3
pop
rorb
cld
and
movsl
jae
dec
push
cmp
dec
mov
into
and
out
out
pusha
mov
dec
cmp
out
out
in
or
and
push
test
clc
inc
jb
xchg
popa
mov
out
fadds
push
sbb
fildll
inc
lahf
into
addr16
pop
mov
out
inc
xchg
int3
pop
and
notb
enter
lds
int
pop
outsb
outsb
jg
clc
xor
ret
icebp
xor
outsb
outsb
sarl
cmp
fcoms
icebp
mov
mov
xchg
or
inc
xchg
loop
je
cmpb
pushf
add
jb
sbb
adcl
stos
jp
clc
fsubrs
sbb
clc
insb
cs
cmpsl
jmp
js
sbb
movsb
sbb
jnp
xchg
fbld
in
and
dec
ds
out
xor
inc
or
in
jne
pop
or
int
add
lock
rcll
pop
dec
cmc
pusha
mov
les
divb
xchg
gs
xor
xor
mov
cwtl
push
aas
inc
arpl
lock
icebp
cmp
mov
sub
adc
push
std
call
es
jb
int
xchg
jp
adc
pop
sahf
repnz
jge
pop
mov
pop
mov
mov
inc
out
pop
js
pop
push
mov
int
div
xchg
and
movsb
dec
outsb
pop
push
pop
imul
sbb
enter
in
in
loopne
in
jo
jle
test
out
mov
push
pop
test
sub
dec
or
ror
out
inc
int3
dec
mov
sub
jg
das
test
mov
loop
mov
or
jo
adc
cs
popf
fwait
fwait
negl
pop
outsl
pop
inc
or
mov
jle
mov
sbb
sub
or
in
or
scas
xor
jbe
fimuls
dec
xor
jle
xor
stos
lret
outsb
outsb
xor
xlat
arpl
dec
mov
xchg
add
pop
jl
mov
pop
add
mov
mov
mov
fdivrl
cltd
sbb
xchg
push
jmp
icebp
cli
inc
mov
iret
out
fisttps
into
cli
xchg
inc
pusha
jp
addr16
or
cmp
jl
jecxz
test
iret
mov
idivb
inc
aaa
aaa
push
jl
xor
xor
or
dec
fsub
push
jp
das
cmp
repnz
jl
pushf
fwait
adc
sub
iret
out
sub
dec
xchg
cmpsl
out
xchg
stos
pop
push
js
adc
jl
mov
mov
loop
sub
inc
cli
or
sub
aas
adc
int3
ret
xor
lock
fnstcw
aaa
insb
mov
icebp
mov
jae
jae
jge
sbb
push
xor
jge
sbb
lds
adcl
std
insb
outsb
aas
and
cmp
push
xchg
scas
out
les
arpl
or
sbb
pop
sarb
int
or
fxch
sbb
jne
lock
clc
movsb
mov
loopne
cmp
pop
jle
cld
mov
push
push
rcrb
jge
push
jo
sub
andb
out
mov
in
dec
insb
icebp
mov
mov
aam
bound
cmp
mov
jge
mov
lds
jg
adc
sahf
hlt
mov
inc
inc
movsl
test
xchg
push
fwait
sub
fidivrl
add
idivb
mov
jbe
xchg
mov
cmp
out
mov
rorb
in
add
out
lock
adc
mov
sbb
imul
rcr
mov
pop
xchg
mov
icebp
sarb
cmpsb
jg
xor
iret
in
bnd
xchg
lahf
sbb
xor
push
subb
push
mov
aaa
jae
xchg
mov
xchg
loopne
repz
shl
bound
rcrl
jo
mov
sub
fldt
test
adc
fsubs
fs
adc
mov
jmp
into
xchg
jae
ret
xor
adc
inc
xor
sti
in
ret
jp,pt
mov
clc
scas
cmp
mov
push
dec
mov
mov
insb
cmp
cmp
mov
inc
pop
cmp
fwait
jae
and
in
mov
pop
mov
push
adc
shlb
jp
ficoml
bound
or
clc
add
hlt
cmc
xchg
test
jae
pop
ret
outsb
outsb
fildll
push
mov
es
mov
pop
xchg
mov
insb
outsb
adc
fiaddl
jecxz
xchg
out
pop
sbb
aam
cmpsb
and
fneni(8087
gs
pop
int3
jae
mov
xchg
inc
xchg
push
mov
loope
mov
dec
pop
pop
pop
mov
ss
aaa
shll
add
test
add
js
sub
call
mov
mov
lcall
sti
add
es
sbb
aaa
xor
mov
stos
dec
arpl
cli
jns
ret
jno
add
icebp
decb
sub
scas
daa
adc
add
aad
lock
mov
iret
ljmp
scas
test
out
push
fldenv
mov
leave
jns
pop
ror
push
sbb
xor
push
jbe
mov
mov
mov
rcll
out
out
mov
jl
and
pop
sub
jb
sahf
dec
les
cmpsb
inc
lcall
rorb
mov
sub
int
in
pop
mov
stc
js
push
lret
cs
int
and
xchg
lret
inc
jno
es
jge
ss
aaa
aaa
mov
lods
int
pop
fucom
loop
lcall
leave
insb
lds
sub
icebp
nop
cli
scas
std
pop
dec
xchg
cmp
adc
icebp
pop
cli
fidivrl
std
push
push
adc
int
int
fs
jo
insb
or
xor
int
cld
repz
in
in
popf
dec
movsb
in
pop
push
f2xm1
push
rcll
shrb
or
aaa
mov
mov
xor
adc
lcall
addr16
adc
adc
aam
int
in
int3
outsb
aam
add
stos
lret
imul
mov
ret
push
jmp
int
int
sub
in
shrb
add
das
dec
add
jmp
adc
cmp
fdivrl
mov
shl
push
xor
xchg
xchg
nop
mov
cli
fdivl
lock
js
push
sub
mov
adc
pop
mov
and
ret
sbb
mov
push
mov
add
nop
ds
pop
mov
fldcw
lahf
dec
push
inc
clc
adc
cmc
rol
outsb
cli
sahf
leave
shrl
dec
and
cmc
jl
lock
jb
mov
aaa
mov
xchg
ja
cmp
jb
sarb
jae
jge
popa
jbe
mov
fimull
gs
mov
fwait
fwait
inc
and
cmp
and
test
enter
mov
loopne
mov
push
loope
dec
sbb
subb
adc
call
ja
jae
jae
cld
mov
or
int3
and
jne
arpl
mov
in
pop
dec
fiadds
in
sbbl
mov
cs
lods
lret
xchg
push
jbe
cmp
loope
cli
push
cwtl
shlb
push
jle
jo
test
push
ret
lea
out
xchg
push
sbb
js
out
out
pop
in
fdivs
cwtl
lds
dec
aaa
out
out
stc
sub
addr16
popa
jl
addr16
iret
cltd
xor
push
sub
xchg
aas
push
pop
loopne
sub
stos
faddl
fnstcw
push
or
or
push
mov
inc
push
xchg
repz
dec
sbb
push
mov
arpl
mov
xor
cli
cmp
or
in
sbb
outsb
outsb
pop
ds
fisubl
and
mov
push
push
or
pop
xchg
jge
mov
loopne
ljmp
xor
lock
js
mov
call
aaa
test
adc
pop
lcall
out
inc
rcrl
hlt
push
data16
aad
jg
xchg
mov
ror
cmpsb
mov
add
xor
or
loopne
std
mov
imul
in
inc
test
out
aas
and
int
pop
dec
mov
inc
in
int3
ljmp
adc
mov
cmp
fnstsw
mov
and
test
dec
sahf
adc
mov
outsb
out
ret
and
hlt
testl
outsb
outsb
push
je
inc
imul
imul
sub
cli
js
mov
and
into
int3
in
pushf
mov
divb
sub
xchg
xlat
inc
sub
sbb
in
jae
jae
arpl
mov
int
sbb
mov
sbb
pusha
pop
pusha
in
mov
jae
inc
aas
fwait
mov
mov
fildl
pop
jae
cmp
int
aas
shl
hlt
mov
dec
outsb
int
int
jnp
movsb
mov
in
adc
xor
or
xchg
push
imul
fmull
xchg
std
sti
cwtl
es
xor
aaa
pop
cmp
add
cs
daa
jae
neg
cmp
pop
sbb
jns
mov
out
iret
int
mov
fwait
xor
loop
xchg
mov
mov
mov
add
xor
dec
push
xor
jbe
ds
fwait
jb
lcall
jo
std
xchg
pop
icebp
in
cltd
call
stos
fs
stos
mov
dec
or
in
nop
test
sbb
fwait
shlb
push
pusha
inc
pop
and
out
adc
out
out
into
mov
mov
adc
xchg
outsb
jg
iret
sbb
cld
cmp
orb
stos
insb
mov
sub
push
mulb
dec
shrb
nop
ret
faddp
pop
test
out
stos
mov
mov
clc
fdivrl
xor
notb
mov
jo
test
lret
add
fisttpl
leave
sti
repz
and
int
in
lock
add
mov
mov
jo
subl
xor
add
icebp
sbbb
mov
in
dec
loope
mov
outsb
sbb
jge
fbld
sahf
lea
outsb
aas
aaa
aaa
aaa
pop
cmp
cmpsl
fcmovne
fdivrl
jge
pop
pop
fstp
xchg
dec
lcall
lods
mov
rcrb
mov
xor
or
cmpsb
pushf
in
iret
int
cs
or
jne
addr16
fstpt
cld
pop
cltd
negb
pop
repz
inc
aaa
mov
loopne
imul
dec
or
sub
aaa
aaa
aaa
or
divl
mov
inc
in
addr16
out
clc
mov
int
mov
pop
mov
rcrl
add
aas
and
cwtl
xchg
pop
out
clc
outsb
pop
sti
testb
ljmp
out
int
enter
movsb
xchg
xchg
adc
mov
int
iret
pusha
adc
rol
idiv
addb
mov
fidivl
cmp
es
dec
mov
or
fmull
rcrl
test
jge
push
dec
cmp
cmp
sbb
int
aas
fldt
int3
out
call
stos
fdiv
cmpsl
sahf
dec
adc
fisubl
scas
fisttpll
fnstcw
xchg
add
cmp
sti
or
pop
xor
sub
dec
pop
mov
xorb
xlat
movsb
lret
and
aaa
aaa
aaa
aaa
insl
mov
pop
in
mov
outsb
out
ds
aaa
invd
dec
sbb
inc
mov
adc
fwait
lahf
adcb
popf
int3
gs
icebp
mov
or
gs
inc
lods
xor
cli
lahf
fildl
stos
jmp
and
and
clc
flds
repnz
popf
test
mov
xor
add
adc
ds
xchg
adc
int3
loop
call
inc
adc
in
sbb
dec
jbe
jo
sahf
addb
cltd
push
mov
or
repnz
sub
loope
adc
rol
stos
jae
shrl
stos
mov
ss
push
jae
jae
ss
iret
rol
ror
movsb
repz
jae
jne
pushw
xor
add
cmp
jae
cltd
sub
add
sahf
icebp
sar
mov
sub
mov
pusha
jl
pop
jl
fs
nop
out
out
lock
and
pop
xchg
loop
cwtl
out
inc
cmpsb
cmp
push
nop
mov
mov
push
jo
nop
mov
ds
push
jge
sbb
ss
ficoms
and
ss
ret
or
jmp
mov
es
loop
vpshufhw
jae
cmpsb
xchg
icebp
aad
les
js
out
push
loop
add
movsl
loope
jne
and
jl
pop
mov
insb
jle
jle
mov
push
rorl
loopne
lret
and
mov
lahf
fdivrl
mov
xor
cmp
cmp
stos
enter
fdivrl
gs
push
adc
xor
int
clc
fsubr
sahf
and
and
adc
or
sub
in
insb
ss
outsl
fdivrl
or
out
mov
fcmovnb
ficoms
int
outsb
cs
and
xchg
cmp
data16
insb
outsb
outsb
imul
cmp
xlat
rclb
out
sahf
lock
sub
addr16
xchg
mov
jns
outsb
pop
icebp
xchg
imul
fildll
int3
out
and
xor
dec
aam
jle
aaa
lods
push
xchg
mov
dec
push
ja
sti
fstpt
adc
in
mov
mov
ret
push
and
es
in
and
dec
pusha
sbb
int
int
div
jg
mov
adc
lahf
int
rolb
or
add
aaa
and
out
jmp
pop
nop
popa
jbe
scas
cli
mov
pop
data16
int
pushf
cmp
es
insb
outsb
outsb
sbb
add
xchg
push
sbb
add
rolb
fwait
fwait
test
pop
sbb
mov
mov
cmpsl
aas
loopne
mov
loopne
pop
call
xor
cwtl
jbe
mov
jae
divl
faddl
push
push
mov
jae
inc
fwait
mov
int
mov
xor
cli
fnstcw
cwtl
jp
add
hlt
int
jbe
outsb
outsb
adc
filds
sti
pusha
jge
test
mov
iret
int
in
jl
inc
in
mov
stos
loope
shrl
inc
jle
aaa
mov
out
mov
pop
inc
bound
push
and
outsb
outsb
outsb
xlat
nop
mov
fists
aaa
cld
insb
dec
inc
add
js
sbb
add
repnz
cltd
sbb
inc
push
mov
clc
push
sti
lea
add
arpl
mov
jae
push
mov
sbb
inc
xor
jae
jae
cmp
jo
sub
mov
jae
or
mov
nop
mov
fildl
sbb
and
mov
fwait
loopne
enter
inc
mov
inc
or
push
inc
jae
mov
mov
out
leave
cmp
add
hlt
jae
jae
out
les
fwait
or
fcom
inc
pinsrw
or
ret
push
lcall
jbe
push
pushf
jae
lret
int
mov
xor
mov
jae
jae
mov
push
and
mov
mov
rcr
mov
aam
or
sub
pop
insb
xchg
ds
fwait
lahf
mov
inc
dec
xor
ret
clc
cld
and
outsl
cmpb
in
ret
in
cwtl
shrb
aaa
mov
out
xor
pop
or
add
aaa
fmul
shlb
or
sbb
fs
aaa
fbstp
mov
mov
bound
addr16
es
jle
jnp
iret
mov
cmc
jg
out
adc
fmull
popa
add
mov
divb
mov
cmp
pusha
gs
adc
jae
jecxz
pushf
hlt
mov
and
cli
and
out
adc
test
mov
mov
fisubrs
sti
mov
push
inc
pop
ds
mov
fsubr
fcmove
aaa
aaa
ja
test
inc
mov
push
adc
adc
pop
sbb
mov
ss
mov
enter
mov
addr16
js
sub
outsb
outsb
outsb
scas
add
rorb
loope
mov
outsb
outsb
outsb
gs
pop
jns
xchg
mov
std
insb
outsb
outsb
nop
ficompl
dec
jg
pop
jae
idivl
inc
lock
xor
adc
jae
jae
push
jns
jecxz
sarb
sbb
addr16
adc
insl
cli
ja
cltd
adc
dec
dec
xor
cld
mov
js
fwait
fwait
mov
shrl
mov
or
repnz
mov
mov
aas
rcrl
addb
inc
xor
cmpsl
lock
sbb
cmpsb
out
mov
ljmp
and
and
cs
ror
iret
shlb
mov
inc
je
pop
mov
push
push
jno
push
and
mov
int
enter
xchg
jo
jns
into
int
int
xor
cmp
mov
sub
arpl
daa
out
shlb
cmpsl
lock
inc
adc
jl
pop
arpl
push
pop
mov
inc
sahf
cmp
dec
iret
xchg
ss
xchg
or
mov
fnstenv
ds
arpl
imul
hlt
lahf
mov
into
test
push
mov
sub
pop
sbb
std
insb
outsb
outsb
outsb
mov
in
push
add
divb
inc
push
mov
stc
cmc
sub
jns
pop
dec
push
fcmovu
inc
xchg
andl
sar
cli
fsts
or
sbb
dec
call
inc
push
clc
cli
mov
stos
xor
out
push
sahf
or
lcall
mov
js
mov
mov
shll
ds
call
fcoml
fdivrl
loope
stos
xchg
lcall
clc
jae
jae
pop
jecxz
push
sbb
sbb
lahf
in
jae
inc
mov
cmp
mov
outsb
jg
mov
xlat
sbb
lock
jo
add
pop
cmc
jge
mov
rcl
and
mov
outsb
mov
clc
out
insb
scas
mov
jge
outsb
repz
shl
mov
test
dec
sub
fstps
cmp
test
dec
icebp
jae
add
out
adc
pop
fsubl
pop
nop
jge
pop
loopne
loop
jp
mov
jae
sti
add
adc
sahf
movsl
mov
mov
divl
or
pop
push
int
fsubrs
push
or
sub
mov
lahf
shrb
lahf
in
divl
mov
repz
rorb
test
jle
jle
and
lock
mov
repnz
mov
cmc
loopne
fadds
out
outsb
outsb
pop
mov
adc
add
jl
jge
pop
nop
mov
out
or
dec
leave
xlat
or
fdiv
inc
push
mov
div
mov
sbb
fdivl
shrb
subb
int
dec
or
mov
call
jle
push
fiaddl
mov
or
sbb
add
pop
push
movsl
xor
nop
shlb
aas
fwait
pop
cmp
xchg
inc
aad
fimull
cld
insb
emms
mov
sbb
mov
insb
iret
ror
jecxz
jo
pop
jge
pop
inc
aaa
mov
cli
xor
outsb
in
decl
mov
and
aaa
aaa
cmp
push
fldenv
fwait
cli
mov
pop
les
fcmovne
pop
sbb
lea
clc
insb
aas
fwait
sub
or
xor
pop
out
divb
mov
dec
loopne
add
dec
dec
frndint
insb
outsb
push
dec
popf
mov
mov
ljmp
in
pushf
jl
in
cli
jge
repz
out
faddl
xor
subb
mov
sbb
insb
dec
ret
out
in
mov
adc
mov
pop
xor
add
into
mov
inc
mov
movsb
sbb
or
jl
jno
jl
or
stos
mov
stos
jl
sub
out
out
cmpsl
dec
or
and
jle
imull
xchg
leave
lret
mov
aaa
mov
ret
push
sbb
mov
mov
cs
cmp
aaa
mov
loope
xchg
mov
clc
sahf
popa
jge
and
ficomps
std
push
loope
out
xor
mov
cmp
ja,pn
adc
stos
jle
rcrb
cmp
into
sub
push
mov
mov
or
nop
xchg
inc
inc
cmp
aaa
aaa
aaa
insb
pop
insb
jmp
push
lods
mov
aaa
aaa
aaa
add
je
lds
aaa
aaa
aaa
pushf
mov
jp
inc
and
ds
aaa
aaa
scas
mov
imul
xorb
aad
and
popa
sarb
and
mov
int3
cmp
in
adc
int
and
or
sti
fbstp
fs
sub
lods
push
fcoms
mov
out
psadbw
hlt
test
mov
xchg
jge
scas
add
add
jle
aaa
lods
bnd
push
mov
stos
testb
gs
inc
pcmpeqb
inc
lcall
iret
xorb
fimull
xchg
outsl
in
push
jnp
push
mov
sbb
dec
inc
ficoml
stos
movsb
mov
int
int
das
loope
dec
pop
aas
fidivs
mov
aaa
aaa
mov
inc
xlat
repz
rcl
mov
add
dec
aaa
aaa
aaa
aaa
xor
fcomps
in
pop
adc
aaa
aaa
aaa
xor
outsw
lret
sahf
mov
sti
jge
cld
leave
or
in
mov
sbb
in
xor
dec
cs
loopne
hlt
adc
out
xchg
mov
and
scas
jno
nop
cmp
insb
fstpl
out
stc
xchg
push
sbb
js
fwait
fwait
fwait
xchg
jnp
aad
out
mov
lock
movsb
cmp
add
iret
int
adc
push
adc
fdivrl
pushf
jmp
mov
and
pop
pop
and
fsubrl
ret
or
sbb
add
js
sbb
sbb
pop
addb
dec
hlt
add
dec
out
ficomps
mov
mov
cmp
out
ds
addl
or
fadd
int
xchg
nop
mov
lret
test
or
lahf
xor
fsubl
push
add
mov
mov
fsubl
mov
or
and
pop
das
divb
in
addl
mov
fadd
mov
js
fistpl
xor
pop
movaps
lahf
fwait
mov
test
cli
mov
pop
jl
outsb
mulb
jl
mov
jge
aaa
cmp
mov
lock
outsb
js
inc
push
adc
nop
ljmp
sbb
sub
into
aam
pop
addr16
std
pusha
pop
in
inc
adc
insl
cmp
aaa
mov
push
xchg
bound
leave
sti
ds
jl
push
sub
loop
lahf
in
jae
mov
fs
inc
xchg
xor
ds
mov
test
push
ja
adc
and
outsb
push
adc
out
mov
jp
aam
mov
jno
stos
jmp
xchg
or
das
jae
sti
xor
push
or
std
out
test
sbb
mov
mov
mov
addb
aaa
aaa
aaa
push
dec
bound
fidivrl
mov
fwait
cmc
mov
inc
jmp
sbb
dec
movsb
ficoml
loopne
add
outsl
jb
push
dec
push
outsb
nop
xchg
cltd
mov
jp
mov
push
xchg
mov
test
mov
mov
xor
dec
push
dec
popa
adcl
test
inc
push
in
arpl
add
int
rorl
fistl
pop
adc
add
testl
aas
or
mov
pop
pop
js
dec
aaa
ja
mov
insb
xchg
hlt
push
mov
outsb
clc
fldcw
pusha
add
mov
sub
nop
xchg
xchg
inc
out
out
dec
and
int3
addr16
dec
xchg
aas
fildl
sarl
mov
mov
pop
push
or
dec
call
ror
dec
sbbl
shr
xor
pushf
pop
loope
jae
push
jp
outsl
or
and
mov
inc
inc
xchg
xchg
mov
cmp
jle
aaa
and
aas
out
out
jecxz
lret
fwait
fwait
fwait
fwait
lds
cmp
push
jmp
mov
sbb
adc
aaa
aaa
pop
aam
out
add
push
mov
fwait
mov
jge
aaa
les
adc
jp
or
out
je
push
pop
ficompl
cmp
shl
and
and
sti
fnstcw
mov
adc
push
jnp
dec
lods
bound
rorl
hlt
lret
lcall
mov
pusha
stos
mov
cmp
out
mov
add
lahf
int
pop
and
mov
and
ds
rorb
inc
insl
loop
fnstcw
es
imul
jbe
sahf
jle
mov
ljmp
mov
cs
test
fcoms
test
daa
sbb
sbb
pop
or
mov
inc
rcll
jl
add
aaa
out
add
mov
mov
add
insl
inc
pop
aaa
aaa
aaa
aaa
cld
test
xchg
mov
inc
insl
popa
mov
jnp
xor
cmpb
cli
fdivr
bound
pop
scas
call
test
ds
cld
mov
xor
adc
aam
shll
cmp
loopne
jp
pusha
lock
xor
enter
iret
orb
arpl
sub
fwait
fwait
sub
xor
insb
popa
adc
jp
mov
cmpsb
out
ret
jmp
rcr
out
mov
scas
mov
aaa
pusha
xorb
pop
sahf
cmpsb
mov
cld
pop
je
inc
mov
sbb
pusha
jge
aas
fwait
jno
call
cmp
out
idiv
or
xchg
xor
leave
stos
mov
fs
or
sbb
mov
fdivr
fiadds
test
insl
sub
push
jg
fsubl
out
movsl
lret
mov
sub
stos
out
sahf
movsl
add
fstps
or
sbb
iret
sahf
int
int
stc
ss
sbb
js
or
in
jl
fwait
in
ret
jae
imul
pop
push
outsb
outsb
in
shrb
notl
fcoml
lea
aad
jmp
jae
loopne
js
push
sub
pushf
out
mov
ds
xlat
pop
xchg
jg
or
lock
mov
mov
mov
cmc
pop
jbe
popf
and
xor
test
cmpsb
xchg
leave
paddq
fwait
mov
enter
sub
push
xchg
outsb
xchg
fwait
fwait
rcr
in
lods
inc
push
pop
outsl
or
xlat
out
pop
hlt
insb
fidivrl
sub
dec
loop
repnz
cli
out
test
mov
insl
sbb
iret
xor
adcl
leave
adc
adcb
mov
outsl
loope
pop
arpl
fcomi
mov
out
xor
sub
lret
jns
stos
movsl
jo
out
ss
mov
jecxz
xchg
hlt
loop
inc
outsb
jne
pop
sbb
sbb
bound
xchg
fwait
sbb
mov
aas
sarb
add
testl
pop
out
sbb
mov
xchg
push
pop
std
int
mov
mov
jge
dec
dec
cmp
xor
out
mov
push
mov
in
std
stos
mov
push
mov
inc
out
mov
in
xchg
mov
dec
or
test
out
mov
sbb
clc
xlat
les
mov
mov
mov
fwait
fwait
inc
int
int3
pop
outsb
pop
jne
mov
cmp
hlt
jle
or
test
pop
push
sbb
xchg
push
xchg
aaa
aaa
ja
inc
push
scas
data16
addr16
in
imul
xchg
xchg
loopne
dec
test
fidivrs
jae
sub
cmp
lock
in
loopne
jae
inc
fsubrl
inc
jnp
add
repnz
xor
fdivs
xor
inc
sub
scas
or
xchg
dec
jmp
sahf
fwait
cmp
sbb
iret
out
dec
call
ljmp
jge
imul
mov
divb
adc
add
push
adc
jg
fwait
sbb
push
in
sti
cwtl
pop
mov
test
hlt
insb
cs
cld
cwtl
imull
jno
test
xchg
lock
jb
push
movsb
pusha
out
sbb
dec
pop
insl
mov
sub
iret
ljmp
scas
cmc
or
test
or
push
mov
mov
es
pop
movsl
out
rorl
cmp
pop
sbb
jbe
cli
in
inc
ret
add
inc
cmc
mov
jmp
out
out
push
mov
cmc
sbb
hlt
scas
sub
iret
out
lods
insl
cli
mov
test
mov
mov
outsb
aas
fwait
pop
jno
push
sbb
jo
push
sbb
inc
mov
jg
or
inc
outsb
outsb
scas
jp
leave
adc
xchg
loope
dec
lock
outsb
outsb
fcomps
testb
test
vpmullw
aad
pop
push
cltd
mov
test
jae
jae
jne
out
loope
into
sub
pop
jle
loope
lahf
mov
xchg
mov
fdivrl
xchg
push
jecxz
mov
fwait
adc
ja
xor
pop
insl
outsb
outsb
outsb
outsb
or
and
mov
cmp
jbe
out
cltd
fidivrs
sub
or
mov
push
jae
jae
gs
and
jle
sbb
loopne
lcall
int3
adcb
mov
jp
add
scas
xor
clc
lock
lret
outsb
outsb
mov
mov
rcrb
test
test
outsb
outsb
xor
xchg
sbb
loopne
popa
outsb
outsb
outsb
outsb
xlat
fistpl
sbb
enter
push
push
jge
outsb
outsb
mov
mov
dec
add
lcall
pushf
enter
cmp
sbb
jo
test
mov
mov
aaa
aaa
pop
cmp
pusha
lods
aad
aad
mov
aaa
aaa
aaa
aaa
sarb
or
push
out
addr16
scas
pushf
pop
xchg
jae
dec
cmp
mov
fsubl
jae
add
mov
int
sahf
test
neg
scas
mov
lahf
cld
xchg
pop
push
or
lods
nop
dec
test
jae
mov
movsb
dec
cmp
pop
sbb
push
mov
movsb
fldl2e
adc
outsb
jp
cwtl
stc
xor
ds
push
mov
jl
sub
into
insl
std
cs
xchg
movsl
mov
fs
pop
xor
addr16
jl
stos
in
inc
cmpsb
mov
fildl
dec
insb
push
pop
out
pop
push
xchg
hlt
push
int3
scas
int
int
push
jp
in
lcall
movsl
iret
int
and
inc
lds
jbe
push
lcall
ss
xor
or
sbb
std
push
imull
sti
mov
sbb
aad
jle
mov
sub
test
cmc
andb
fwait
fwait
fwait
rcll
imul
pop
xor
xchg
push
mov
mov
dec
popf
xor
out
mov
fisttps
and
adc
push
stos
sub
arpl
insl
cmp
dec
mov
jo
outsb
out
cmp
in
stc
add
shll
out
xchg
aaa
jge
or
dec
ds
sbb
lods
cmpl
in
cmpsl
imul
icebp
jle
dec
xchg
add
sub
aaa
pop
out
dec
sbb
mov
mov
adc
and
aaa
std
insb
es
push
sub
repnz
cltd
fadds
push
jp
aaa
mov
sbb
xchg
lods
icebp
cld
pop
mov
mov
mov
sbb
fcmovb
lods
and
loope
fistl
dec
movsl
sahf
xor
push
mov
or
lods
mov
ja
add
rolb
jae
mov
and
stc
xchg
addr16
mov
movsl
inc
stc
scas
mov
inc
pop
movsb
mov
hlt
sbb
scas
sub
int
sbb
mov
aas
or
loopne
adc
lds
repnz
mov
adc
mov
testl
lret
mov
sbb
xchg
int
add
push
ficoms
inc
lods
inc
push
xor
lahf
int
jb
jbe
fdivrs
and
sbb
jbe
es
insb
outsb
mov
sahf
push
mov
lock
fisttps
clc
add
cs
jl
outsb
pop
dec
adc
lock
push
scas
pushf
and
dec
mov
push
sbb
dec
loopne
sub
flds
fwait
fwait
fwait
data16
lock
lods
push
push
xchg
fwait
fwait
pop
scas
xor
mov
popl
jae
dec
leave
or
mov
stos
mul
addr16
jo
cmp
mov
push
pop
adc
out
mov
sbbl
sti
out
mov
and
and
aaa
dec
inc
out
out
jbe
cld
fwait
in
sub
fstpl
and
and
xchg
shlb
aas
stc
sahf
cmp
cmpsb
push
ds
outsb
outsb
outsb
fldcw
test
sbb
xchg
jle
cld
mov
lahf
push
adc
sbb
xor
test
int
int
cmp
lock
and
and
lahf
int
or
pop
sbb
cwtl
int
pop
pop
int3
inc
pop
faddl
fdivrl
or
cmp
sarl
call
sbb
rcll
loop
hlt
mov
jp
bound
in
subb
xchg
and
mov
jbe
lock
jge
ljmp
hlt
adc
dec
push
sbb
jbe
mov
cli
fcoml
aaa
aaa
aaa
mov
call
sti
jle
push
test
stos
ds
cmp
aam
insb
sub
fwait
adc
mov
and
mov
fwait
repnz
scas
fcomip
mulb
aaa
aaa
pop
lret
pop
js
mov
xor
sarl
add
mov
xor
iret
cli
sub
lock
xlat
cmp
mov
pop
pop
aad
iret
out
xchg
cs
xlat
out
jecxz
sbb
fcoml
add
subl
imul
imul
jne
jmp
mov
imul
mov
pushf
ljmp
es
sahf
xchg
mov
sbb
inc
lcall
sbb
jnp
mov
fwait
fwait
fwait
fwait
bound
mov
sbb
ds
fwait
stos
add
fisttpll
mov
in
nop
stc
mov
jno
or
imul
sub
stc
jp
cmp
fstps
add
mov
cmpsb
outsb
lahf
fwait
fwait
mov
add
in
or
pushf
es
sbb
insb
outsb
outsb
outsb
and
inc
or
mov
out
idiv
out
jp
sbb
xor
sbb
outsl
add
mov
in
push
addb
cmc
add
arpl
pop
mov
std
pop
mov
mov
pop
int
jae
inc
sub
mov
push
mov
xor
add
dec
js,pt
fwait
lea
and
shrb
outsb
mov
cmp
cld
insb
lock
pushl
xchg
jp
in
in
into
and
aaa
aaa
aaa
add
ljmp
test
push
ss
aaa
aaa
out
loope
jle
or
call
sub
inc
fldenv
mov
call
jle
mov
inc
mov
sub
inc
lods
les
loopne
jne
insb
cmc
mov
jp
sbb
add
adc
xor
out
out
ret
cmp
ror
nop
insb
inc
pop
dec
jl
jae
sub
pusha
add
xchg
pop
lock
dec
push
lock
icebp
call
mov
stos
xor
clc
fnstcw
push
cmp
stos
ja
std
enter
loope
mov
loopne
pop
sub
lahf
cmp
rcl
call
or
insb
mov
push
xor
scas
shlb
push
mov
jle
iret
and
add
addl
or
int
clc
or
xlat
lahf
aam
cltd
cli
incb
xchg
aad
cmp
test
mov
pop
dec
insl
outsb
outsb
clc
gs
lds
sbb
insl
cmp
jbe
jge
and
es
test
iret
out
lods
ds
sbb
pop
js
ds
mov
jle
cli
add
leave
add
in
js
andb
cltd
cmc
jnp
sub
cwtl
loope
fcomps
jp
pop
mov
mov
mov
testb
mov
push
lock
nop
sahf
fwait
push
add
aam
test
out
xchg
into
lea
push
out
fisttpll
out
pop
mov
lock
les
cli
lods
jae
xor
cwtl
sbb
cmp
mov
pop
loopne
cmpsb
fwait
fwait
mov
in
sub
mov
movsl
xorl
mov
fwait
fwait
loopne
pop
test
xchg
cmp
rcl
lret
shlb
in
jae
pop
xchg
add
push
outsb
shrb
mov
lahf
int
push
cmp
xor
ljmp
das
insb
and
bound
jle
int3
in
mov
popa
push
mov
adc
test
in
cmp
iret
dec
out
jns
cmovo
int
in
aaa
clc
icebp
mov
adc
sub
movsb
out
out
push
or
dec
add
jne
mov
out
out
mov
mov
xor
enter
adc
cmpsb
sahf
and
xchg
clc
mov
iret
in
or
fdivs
sub
ds
fwait
nop
filds
pop
push
push
jne
jle
pusha
and
shll
test
adc
insl
or
jp
jnp
outsb
jmp
movsl
in
add
pop
test
ret
push
out
and
jae
repnz
test
int
pop
inc
jle
mov
push
or
stos
xchg
cmpsl
mov
dec
jne
pop
jbe
xchg
xor
dec
add
aaa
aaa
aaa
jecxz
mov
pusha
test
sub
aaa
bound
mov
daa
jne
scas
ds
cmp
in
xchg
rcll
jb
movsl
inc
and
pop
gs
divl
addr16
lock
es
add
xchg
sti
pop
dec
pop
mov
lock
jbe
dec
pop
int
in
sub
das
mov
iret
sbb
out
fwait
mov
lcall
jno
mov
cmp
lahf
repnz
xor
gs
je
aaa
sbb
jnp
mov
out
mov
inc
dec
jns
sub
imul
std
shlb
je
push
cltd
cmc
js
fstpt
push
mov
cmp
jle
out
pop
jbe
pop
shlb
repz
jle
aas
notb
xor
mov
insb
sub
lea
pop
mov
lret
and
loop
mov
push
push
cmp
mov
xchg
mov
mov
je
or
stc
push
inc
int
fidivrl
test
outsb
jg
mov
sbb
ja
int
jecxz
shr
cmp
push
fisubl
inc
adc
shld
roll
iret
mov
inc
mov
adc
mov
add
movsb
xor
aaa
add
insl
and
imul
shl
pop
icebp
insb
outsb
outsb
mov
add
sub
das
fdivrp
loope
mov
and
lods
xchg
mov
cld
sub
sarb
mov
push
mov
sti
add
mov
faddp
push
ret
out
in
jae
jae
dec
mov
mov
cld
cmp
int
int
mov
push
shrb
push
inc
sbb
addr16
jle
bound
mov
xchg
iret
cwtl
lahf
int
in
leave
mov
xor
inc
clc
test
pop
mov
aaa
mov
cmp
mov
jmp
clc
mov
mov
test
mov
insb
outsb
outsb
stos
les
scas
ret
xor
fdivrl
in
adc
and
pop
dec
insb
jae
jae
mov
movsl
add
test
push
pop
mov
ret
ss
push
test
xor
mov
fs
fisttpl
sarl
repz
xor
push
ss
lock
testl
imulb
adc
mov
sti
std
les
insb
push
nop
adc
cmp
subb
mov
faddl
test
bnd
int
jae
mov
inc
adc
sbb
int
int
leave
fldt
xor
fidivl
out
out
daa
ds
sbb
mov
cmp
out
ds
rcll
icebp
je
jbe
fdivl
sub
cmp
stc
pushf
insb
pop
jae
jae
sbb
insb
mov
and
jmp
xchg
imul
jae
cltd
dec
scas
cmpsb
xlat
in
push
das
cmp
cmpsb
out
clc
sbb
sub
jp
mov
mov
push
es
ss
lea
cltd
inc
gs
lret
int
and
inc
iret
mov
or
outsl
dec
mov
xchg
int
int
mov
or
add
iret
int
int
sub
data16
mov
jnp
fmul
nop
add
fdivr
imul
and
ret
outsb
outsb
outsb
outsb
xchg
mov
add
pop
cwtl
pop
in
fcmovnb
jmp
xor
repnz
mov
outsl
ljmp
sarb
dec
test
insb
cld
lds
jae
jae
and
iret
sub
inc
ljmp
mov
xchg
xor
test
inc
add
int3
inc
push
loopne
mov
popa
in
dec
mov
lods
stos
arpl
add
lahf
jmp
jp
nop
rep
xor
dec
pop
jg,pn
bound
push
rclb
sahf
notb
and
arpl
push
fnstcw
mov
pop
lods
bnd
jae
mov
jb
pop
add
push
das
ljmp
mov
bound
into
inc
pop
outsl
fs
aam
mov
mov
enter
fcmovnbe
insl
es
les
adc
dec
xor
notb
jb
out
out
or
mov
lret
std
push
jecxz
mov
fwait
fwait
fwait
fwait
cmp
dec
dec
or
fwait
fwait
fwait
add
cmp
sub
lahf
add
repnz
sahf
xor
push
mov
sbb
jge
mov
inc
jg
mov
push
pop
mov
in
out
out
adc
jge
or
nop
fs
xchg
jae
out
and
mov
stos
add
imul
bound
inc
dec
push
stos
pop
into
lea
aaa
aaa
aaa
sbb
push
and
gs
inc
dec
addr16
xor
test
jmp
mov
out
sub
and
outsl
sbb
fadd
xchg
out
push
adc
cltd
dec
mov
arpl
out
out
mov
or
aad
int3
adc
or
cs
movsb
pop
jbe
or
jns
cmp
mov
fisttpl
leave
fcompl
cld
mov
sbb
int
lods
dec
push
mov
mov
add
add
sub
push
pop
nop
fcompl
jne
jnp
xchg
mov
cmp
test
stos
push
mov
lock
je
inc
repnz
pop
inc
mov
jmp
test
int3
jle
lock
sahf
xor
push
addr16
adc
loop
stc
aaa
aaa
mov
fimuls
inc
xor
jg
sub
sti
cmp
xchg
cmp
seto
lods
push
clc
imul
addr16
pop
cmp
lock
sbbb
and
xor
test
mov
push
pop
push
leave
mov
xchg
loop
les
jno
lods
inc
cs
mov
xchg
jge
ficoms
fwait
jp
mov
int3
push
out
fs
push
mov
jae
xchg
rcl
ds
nop
cmp
addr16
lock
ss
xor
sub
test
mov
sbb
negb
aas
cmp
adc
mov
push
popf
fisubs
popf
mov
mov
ljmp
movsl
mov
int
mov
test
cmp
int
int
and
xchg
orb
int
sbb
aam
or
mov
cmpb
inc
imul
arpl
jno
andb
lret
mov
mov
sub
push
cmp
push
out
pop
in
mov
add
adc
jge
xchg
sub
test
bound
call
xor
push
xor
sbb
dec
cwtl
adc
xchg
xchg
imul
testb
cltd
pop
push
sub
dec
clc
insb
sub
test
push
mov
sbb
inc
inc
pop
cmpsb
lahf
int
dec
aas
xchg
sahf
lods
push
cwtl
aaa
lods
arpl
rcr
push
movsb
lahf
int
in
leave
inc
adc
fsubl
pop
scas
adc
fsubr
icebp
clc
xor
roll
ret
sahf
adc
mov
mov
jle
push
sbb
loop
into
add
dec
es
lahf
lods
cli
or
or
sub
orb
mov
xchg
xchg
push
notb
stos
ret
sti
fmull
out
add
jl
shrb
cli
ja
movsl
es
pop
xor
stos
jecxz
outsb
jg
addr16
je
div
mov
mov
and
out
ficomps
daa
mov
dec
push
jne
or
sti
push
shlb
cwtl
pop
inc
lahf
fisubl
add
ror
aaa
push
icebp
call
aas
jmp
inc
sub
push
dec
inc
mov
test
jae
rolb
and
xorl
out
jg
clc
mov
adc
mov
aas
push
cmp
mov
mov
je
jnp
out
fcomps
aaa
xchg
lds
loopne
lahf
pop
enter
push
push
xchg
lods
stc
push
jnp
ja
sahf
push
dec
mov
xor
out
out
push
fiaddl
pop
roll
mov
out
out
pop
cmpsl
dec
mov
or
jge
daa
gs
fsin
xchg
sar
inc
movsl
shl
cmp
shl
xor
fadd
lea
out
and
mov
cmp
xchg
test
jno
adc
inc
pop
push
sub
call
push
in
jbe
out
enter
mov
js
aam
rolb
in
inc
dec
lock
negb
out
andb
mov
fcmovne
or
sub
cmp
imul
jmp
xor
mov
and
test
jno
aad
jbe
push
hlt
sub
push
adc
mulb
out
insl
pop
sbb
hlt
mov
dec
adcb
rorb
fwait
fwait
jecxz
test
lods
arpl
cmp
fwait
fwait
fwait
xor
and
dec
push
aas
fwait
fwait
test
mov
jp
das
aaa
ja
jp
in
cmc
xchg
cld
add
xor
jl
mov
xchg
leave
mov
fwait
fwait
insl
mov
loop
lods
fld
loope
push
xchg
sahf
add
mov
sub
mov
xor
outsb
cli
fdivrl
sub
mov
test
xchg
int
outsb
fsubrp
je
bound
xchg
outsl
je
imul
xchg
in
fbstp
aad
inc
mov
mov
sahf
std
es
test
push
mov
imul
adc
out
mov
pop
shl
loopne
in
or
pop
std
mov
insb
outsb
testb
inc
lret
test
pop
icebp
mov
cli
pop
lea
cmpsl
mov
mov
sbb
adc
mov
insl
testb
loope
pop
ds
mov
hlt
insb
push
xor
in
repnz
divb
mov
inc
pop
shlb
out
out
fisttpl
stc
shrl
xchg
mov
outsb
out
call
or
out
scas
sub
lods
add
mov
jg
out
js
cmp
xor
cmp
jl
mov
dec
lds
loopne
pushf
pop
jge
xor
mov
mov
pop
add
dec
les
out
inc
xchg
cli
xor
aam
add
inc
out
lea
xor
push
sub
jle
jae
push
and
and
xchg
push
jae
jae
lods
jl
stc
push
ficomps
jo
lret
jae
pop
mov
mov
mov
iret
int
xor
shl
push
mov
or
iret
out
xor
test
mov
scas
mov
ds
movsb
aas
notb
mov
pop
or
cmp
add
sbb
lea
mov
jo
mov
test
sub
pop
lret
inc
mov
sub
out
clc
mov
insl
lea
cmp
sahf
stos
mov
into
not
mov
loop
mov
or
int
push
test
ss
adc
lcall
aas
dec
mov
pop
pushf
or
fidivrs
sbbb
call
inc
addb
shlb
and
mov
sti
jecxz
lahf
nop
fmull
out
outsb
aas
fwait
ds
add
shll
test
outsb
outsb
mov
in
inc
repnz
xor
mov
jae
into
mov
add
imul
mov
pop
repz
shlb
push
sbb
pop
sbb
sub
xor
test
mov
aam
aam
mov
call
hlt
xor
cs
sub
jge
test
push
and
jbe
in
jno
in
push
rcrb
mov
fsubrs
mov
and
pop
lahf
lock
hlt
gs
push
cli
stos
je
sub
jle
mov
cmpsb
in
inc
loopne
ret
cmc
adc
dec
adc
dec
shll
and
cmc
in
clc
arpl
sub
out
testb
out
mov
sub
sub
clc
jge
aam
xchg
arpl
and
clc
ja
mov
cld
sar
outsb
out
sbb
dec
daa
sti
pusha
push
inc
test
pop
insb
ror
dec
fs
cld
lods
popf
int
cmc
mov
jae
jg
cmp
mov
into
stc
adc
cmp
sti
sahf
out
inc
xchg
imul
loopne
cmpsb
mov
xor
mov
jl
aas
fwait
push
dec
rcrb
mov
cmp
pop
or
xchg
inc
push
aam
icebp
mov
pop
xchg
lods
cmp
ret
cmp
pop
clc
add
inc
imul
sbb
into
jmp
inc
pop
adc
iret
int
jmp
int
cs
fisttpll
xor
lods
pushf
out
test
out
cmp
cmp
mov
arpl
jnp
imul
loopne
clc
dec
fld
cmp
icebp
sbb
sbb
or
jle
and
and
repz
mov
dec
dec
js
push
rolb
std
in
cmpsb
jbe
pop
mov
mov
ss
mov
scas
das
ficoml
mov
aas
fcmovne
cld
sbbb
cmp
xor
dec
xchg
and
xchg
jle
in
dec
cltd
ret
cwtl
divl
stos
vmovdqa64
jge
fstpt
dec
mov
rcl
wrmsr
cltd
jp
cmp
mov
lret
lods
iret
in
ja
rclb
sub
inc
push
fwait
fwait
sub
or
jl
inc
dec
idiv
sub
cmp
in
fwait
fstpt
scas
out
mov
out
mov
add
mov
addb
or
mov
orl
movb
into
mov
int3
mov
fwait
fwait
fwait
inc
pop
fisubrl
sub
push
mov
insb
push
and
adc
js
inc
aas
lods
notb
jae
cmp
jmp
push
fiaddl
inc
and
ljmp
inc
push
push
or
mov
pusha
ffreep
es
mov
mov
cltd
xor
push
sbb
rcl
test
mov
dec
inc
aam
xchg
fs
jae
lds
push
sub
inc
sbb
sti
jb
jb
push
fldenv
ss
jb
mov
jl
inc
mov
add
fdivrl
call
stos
dec
fbld
jb
dec
cmp
xchg
inc
jle
mov
cmp
inc
cmp
rorb
pop
aaa
loopne
sbb
subb
js
mov
outsb
imull
test
fnstcw
loop
or
jo
int
xchg
fwait
lcall
or
push
repnz
popa
pop
ja
add
fistpl
mov
gs
aaa
aaa
cld
inc
out
sti
mov
fisttpl
das
sahf
popl
bound
xchg
je
lcall
mov
cmpsl
xchg
aas
jp
sbb
outsb
outsb
outsb
xlat
mov
adc
sahf
ss
aaa
aaa
jle
cmc
arpl
sub
into
mov
mov
loopne
inc
sbb
or
sar
test
push
sbb
out
cltd
cli
push
shll
test
cmp
mov
xor
out
mov
gs
mov
pop
insb
push
mov
dec
test
mov
xchg
xchg
or
xchg
pop
push
mov
loop
arpl
das
addl
push
cmp
sbb
out
mov
add
dec
std
je
sbb
into
inc
aas
dec
mov
popa
int
clc
fdivrl
fs
jnp
ret
pop
add
jno
pop
sbb
inc
shlb
hlt
lods
jae
push
in
aad
rorb
mov
sub
inc
pushf
lahf
int
int
orl
inc
gs
out
idiv
adc
mov
adc
jg
insb
inc
stos
sbb
fistps
stos
insl
loopne
push
addr16
mov
insb
lahf
push
add
fs
out
jo
and
xor
mov
push
pop
and
out
mov
insb
cli
or
mov
shrl
inc
mov
jae
dec
fwait
lret
ret
or
add
in
mov
push
inc
call
ja
std
mov
fmull
cwtl
stc
or
add
aaa
jbe
jae
sti
pop
mov
adc
hlt
out
fbld
jg
jp
je
sub
xor
xchg
rcrb
mov
divb
in
imul
xchg
js
fwait
pop
cmpsb
lds
or
cs
test
dec
and
jle
lcall
into
xchg
ret
cli
fdivrl
pusha
ficoml
mov
iret
loope
xchg
mov
xor
jge
scas
and
aaa
aaa
aaa
ja
rorb
inc
pop
jmp
add
and
js
aaa
xchg
stos
nop
mov
lret
outsb
clc
inc
pop
inc
les
stc
dec
rolb
loop
jge
push
adc
pop
or
lret
pop
push
sbb
jmp
xor
clc
jae
fwait
xor
out
lea
dec
in
pop
xor
xchg
sbb
iret
dec
mov
es
add
call
inc
xor
movsb
repnz
pop
push
sbb
mov
repz
sarb
fmull
add
leave
push
pop
notl
cmp
insb
sbb
das
push
ret
pushl
gs
adc
ficoms
cld
pop
jge
add
jge
xor
xchg
jno
inc
in
push
jo
pop
jmp
jecxz
xchg
inc
sub
shrb
fwait
fwait
fwait
out
xchg
inc
jnp
test
mov
sahf
pop
mov
adc
jl
jmp
mov
imul
in
outsl
push
je
sub
and
int
int
orb
adc
inc
push
iret
int
int
movsl
and
sti
out
pxor
aaa
mov
fisubl
jecxz
jl
addr16
push
sub
jo
loope
dec
jl
aaa
push
aad
aam
loope
addr16
or
std
es
jge
scas
fmul
fadd
mov
mov
jns
cmp
arpl
adc
scas
pop
pop
push
scas
call
movsl
and
std
jl
fwait
outsb
mov
fucomp
cmp
bound
mov
int
xchg
jb
bnd
push
iret
mov
push
and
out
mov
push
les
dec
fdivs
pop
dec
pop
or
fists
loopne
sbb
xchg
inc
add
out
adc
iret
sarl
jmp
ljmp
divb
sub
lea
loope
adc
out
out
cltd
jl
cmc
rol
and
js
leave
jge
mov
sahf
dec
or
xchg
mov
pop
icebp
pop
sarl
sbb
cmpl
outsb
incb
gs
imul
pusha
inc
push
sbbb
scas
jle
into
fmuls
popf
fwait
fwait
outsl
mov
push
push
in
icebp
iret
mov
inc
bound
sbb
xchg
dec
xor
aas
fwait
pop
inc
repz
lods
xchg
or
insl
testb
iret
idivb
clc
je
insb
in
xor
ret
pop
movsb
pop
rol
mov
push
fstps
sub
lock
idivl
xor
add
test
out
xchg
push
xchg
jnp
int
das
loop
inc
add
xchg
xor
int
int
dec
cmc
push
mov
mov
xchg
addr16
gs
cld
sbbl
test
fcompl
test
into
fcoml
mov
out
cli
dec
jnp
mov
sbb
test
dec
sub
pop
rcrb
mov
idivb
ss
cmp
in
subb
lahf
gs
repnz
adc
adc
outsb
outsb
outsb
outsb
das
dec
hlt
mov
cwtl
pop
sbb
mov
mov
jp
out
test
fcompl
push
push
dec
loope
cwtl
gs
mov
inc
outsb
push
clc
fnstcw
pop
sbb
mov
imul
and
hlt
mov
js
popa
xor
sub
or
cmc
jle
cmp
std
push
mov
out
test
dec
lret
cmp
in
stos
in
sti
in
push
repz
rcrb
in
mov
push
mov
out
or
sub
testb
testl
js
cltd
sbb
xor
pop
int
aas
fisttpl
and
repnz
pop
jbe
iret
int
mov
popa
sbb
sbb
mov
mov
mov
std
cli
int
xchg
fisubrl
mov
stos
lcall
mov
shlb
add
ret
add
jge
jge
sarb
or
ror
mov
movb
aam
push
pop
mov
ret
mov
insl
push
and
and
out
add
in
sti
fdivl
out
in
cmp
fists
ds
mov
test
sbb
jo
or
int
sahf
adc
jecxz
arpl
pop
or
sti
idivb
pop
jp
cmp
imul
out
mov
adc
stos
out
or
lahf
inc
push
fists
test
shlb
mov
mov
sbb
dec
ds
aaa
aaa
or
xchg
xchg
push
loopne
out
push
fstps
enter
mov
lahf
gs
ret
popa
aam
inc
jns
or
aaa
mov
mov
in
aas
add
cli
lret
cmp
mov
out
sahf
sub
jl
push
and
or
nop
stc
adc
or
mov
icebp
cmpsl
int3
aam
cld
adc
arpl
xor
mov
jbe
mov
sbb
mov
int
cmp
xchg
lret
fadd
sbb
pop
add
test
pop
or
stos
cld
jmp
std
lcall
fwait
and
or
jae
push
scas
in
int
ret
aas
mov
mov
xor
dec
and
xor
mov
nop
scas
mov
or
push
pop
ficomps
inc
inc
cmp
jb
ret
outsb
outsb
outsb
mov
je
sbb
nop
subb
mov
xchg
test
pop
lea
inc
pop
aam
repnz
lret
aam
inc
jecxz
sti
icebp
sti
sbb
testb
iret
out
enter
add
cmc
fisttpll
jp
scas
repnz
sahf
push
repnz
pop
mov
pop
add
mov
cltd
xor
es
popf
std
xor
fdiv
mov
loope
or
test
or
lea
ja
outsb
outsb
outsb
scas
push
dec
mov
rorb
jle
push
jl
inc
adc
or
mov
jae
mov
aaa
mov
or
das
shrb
jae
jae
xlat
pop
insl
in
addr16
xor
negl
adc
adc
out
mov
imul
inc
pop
cli
adc
jb
jae
mov
mov
sub
addr16
jae
lods
mov
loope
aaa
aaa
mov
xchg
hlt
sbb
jp
je
test
int3
sahf
pop
or
aaa
aaa
aaa
stc
arpl
les
and
aaa
aaa
aaa
push
nop
ret
aad
mov
lret
add
ss
fst
loope
insb
mov
fnstenv
out
dec
xor
lods
not
adc
pop
jecxz
cmpb
fwait
fwait
out
xor
push
loope
push
cmp
push
stos
xchg
and
push
fldenv
lock
cltd
call
das
jne
loope
int3
add
mov
jle
aaa
xor
dec
data16
movsl
es
bound
sbb
inc
std
lock
xor
hlt
fwait
or
push
ljmp
ja
add
fwait
fwait
aas
enter
aam
aaa
aaa
ja
pop
aas
cmpsl
rcll
sbbb
mov
or
cmp
rcl
fs
xchg
pop
pop
ret
cmc
jecxz
xchg
cwtl
xor
vpaddusb
mov
push
loopne
mov
inc
dec
xchg
not
pop
mov
mov
lds
lea
pop
hlt
add
xor
pop
addb
add
jne
aaa
aaa
mov
xchg
mov
sbb
mov
orb
fisubl
fcompl
add
repz
cs
lret
jno
in
add
pop
dec
push
dec
cvttps2pi
or
std
stc
rclb
outsb
aas
fistl
push
shll
clc
xor
or
test
outsb
outsb
jl
sub
in
test
outsb
outsb
outsb
outsb
jb
into
mov
ja
jns
mov
mov
mov
sub
fs
testl
lods
mov
jle
jg
pop
sub
pop
rcl
inc
je
ds
leave
xchg
jbe
shlb
jge
fcompl
mov
scas
sbb
ljmp
push
fcomps
insb
or
sbb
lods
xchg
bound
add
orl
fidivs
ss
mov
cmp
cld
jle
iret
cmpsb
or
movsl
jle
xor
push
jne
call
movsl
insb
xchg
jnp
std
mov
or
jns
pop
jnp
jle
pop
xchg
or
fs
out
inc
mov
xor
outsl
mov
cmc
jbe
inc
jl
mov
inc
out
lods
xchg
sbb
test
mov
mov
add
sub
push
loopne
add
test
outsl
and
cli
test
sub
mov
xchg
shlb
sub
or
mov
outsb
outsb
mov
rcrl
dec
repz
xchg
mov
jge
outsb
outsb
add
enter
pop
push
jo
out
mov
fstpt
xor
rcl
das
mov
adc
imul
int
cmpsb
inc
out
fdiv
in
les
adc
mov
test
adc
bound
cmp
movsb
cmpsl
pop
push
or
adc
jns
jnp
outsb
outsb
mov
inc
adc
push
and
aam
cmp
mov
adc
pop
fidivs
mov
fwait
push
xlat
xchg
jbe
lcall
dec
sbb
xor
shlb
mov
xor
inc
dec
hlt
adc
mov
sub
push
cwtl
ds
fnstcw
outsl
in
lret
cmp
jae
jae
fs
inc
xor
or
fadd
mov
es
inc
sub
jge
pop
mov
mov
jae
pop
add
cld
cmp
jmp
jns
lea
jle
mov
add
stos
inc
push
jp
mov
mov
ficoms
cmp
out
dec
lock
xchg
pop
gs
gs
adc
stos
mov
fs
int
int
clc
stc
in
cmc
dec
pop
lahf
and
cmp
outsb
jle
ds
clc
sbbb
xchg
fdiv
pop
cmc
out
pop
cmp
fldenv
dec
pop
xor
xor
in
bound
mov
or
in
adc
std
repz
loopne
adc
jo
xor
sub
or
adc
leave
nop
cmp
mov
mov
outsb
outsb
outsb
xchg
inc
in
add
outsl
cltd
cmpsb
jns
cmp
js
outsb
outsb
outsb
and
mov
leave
jb
push
mov
stos
mov
cli
adc
or
loop
inc
clc
loopne
mov
push
loop
subb
push
bound
aas
fwait
fwait
fwait
lock
mov
imul
popa
divb
pop
cmp
or
test
mov
fwait
fwait
fwait
daa
ss
test
cld
dec
mov
mov
mov
jmp
ds
adc
cmove
cmp
mov
testl
mov
dec
pop
adc
jae
add
push
jno
cwtl
movsb
out
mov
loop
jbe
inc
dec
in
notb
mov
sub
fs
ret
mov
lea
push
int
aaa
std
insb
outsb
sahf
ret
addr16
mov
push
push
lods
les
jbe
jg
fmull
ss
aaa
ss
sahf
push
jae
jae
sbb
es
popf
push
jae
jae
push
push
movsl
in
dec
push
push
lret
inc
jae
jae
xor
jl
mov
outsb
cli
jle
nop
ficoms
aam
cmp
mov
notb
adc
loope
ds
jns
mov
imul
cmpsb
adc
shr
jle
sbb
fwait
sub
imul
cld
cmp
call
andl
jnp
jl
fsubl
mov
iret
out
iret
mov
and
out
pusha
mov
jae
rorb
rolb
mov
push
test
mov
loope
xor
shlb
hlt
out
icebp
fnstcw
or
jo
and
push
insb
jne
adc
or
fs
int
int
xor
sub
and
mov
jl
cs
aaa
aaa
popf
gs
jmp
int
pop
or
fiadds
mov
pop
call
or
fcmovu
mov
jae
mov
mov
xor
int
in
addr16
sub
adc
in
test
ds
frstor
movsb
cmp
cmp
jecxz
pop
cmc
push
xchg
ror
pushf
movsl
into
int
and
and
and
lock
push
xchg
rcrb
aas
cmp
fstps
test
xchg
adc
fimuls
in
int3
jnp
and
lock
and
inc
fbstp
std
fdivrl
jne
mov
sahf
and
je
insb
test
fwait
jns
std
lock
mov
mov
decl
inc
repnz
jecxz
fs
loop
icebp
pop
insl
test
int
mov
testb
and
xor
fs
in
addr16
nop
testb
cwtl
sbb
pop
sbb
int
int
imul
cmpsb
loopne
and
cli
lret
int
adc
xor
fcomps
jno
mov
sbbl
ret
rcrl
inc
lret
fimull
shll
push
dec
jge
outsb
outsb
xor
and
sti
hlt
js
pop
mov
mov
fcomi
dec
and
cmc
mov
inc
cmp
jne
xchg
mov
fiadds
lds
dec
adc
dec
and
pop
ds
jns
pop
cld
push
cmpsb
lea
daa
sti
jne
sbb
push
cmc
lar
dec
js
inc
inc
in
ja
pop
shrb
jle
imul
adc
cli
inc
push
jecxz
cmp
inc
outsb
int
xor
shlb
jl
roll
mov
rcrl
adc
cwtl
mov
int
inc
lahf
mov
pushf
arpl
out
lahf
lds
cmp
add
andl
fldenv
fdivs
push
pop
mov
adc
ror
out
inc
popf
lea
ret
out
or
cmp
or
push
aaa
sbb
adc
rcl
mov
inc
scas
cmp
aaa
lcall
adc
cs
jmp
ss
mov
pop
cmpsl
cmp
mov
and
jb
rcl
mov
stc
loopw
test
and
icebp
js
inc
rep
setle
ljmp
scas
xor
iret
in
imul
pusha
test
std
add
pop
xacquire
cmpsl
add
hlt
mov
lea
lock
outsb
jp
cmp
movsl
mov
dec
xchg
sub
iret
adc
cmp
adc
clc
sahf
fwait
loopne
clc
mov
and
and
mov
mov
xor
mov
bound
mul
daa
movsl
push
rorl
inc
pop
xchg
xor
sub
jmp
and
or
sub
call
jae
jae
add
jge
adc
mov
movsl
aad
cs
dec
push
sbb
andb
mov
movb
jge
clc
es
jne
mov
push
fdivrl
imul
xorl
outsb
out
cli
jae
sub
daa
shrb
or
insb
cld
adc
jp
int
idivl
adc
cmp
or
cwtl
js
mov
int
adcb
dec
sbb
divl
aaa
aaa
aaa
test
es
add
cmp
fwait
fwait
cmp
iret
aam
sbb
out
adc
add
fwait
fwait
fwait
fildll
adc
lcall
jle
out
or
jle
fdivr
insb
inc
adc
jge
pop
cmpsl
pop
imul
repnz
lods
or
xor
insb
adc
sbb
sti
or
ret
push
dec
sub
mov
int
jae
jns
into
cmp
pop
stos
inc
mov
jle
int
cmp
push
ss
ds
clc
jmp
js
fisubrl
out
fprem
mov
jbe
inc
inc
test
outsb
outsb
outsb
out
mov
mov
adc
jmp
enter
rcrl
scas
and
sbb
mov
jmp
and
mov
or
xchg
inc
jp
es
fwait
inc
test
xchg
pop
mov
mov
jle
jl
sub
lock
lahf
lods
loope
clc
xor
daa
flds
jle
aaa
gs
mov
jle
jae
jns
js
jmp
mov
add
nop
lods
shrb
out
or
jb
rcll
out
out
sbb
or
outsb
imul
out
jbe
pop
and
adc
ret
or
xchg
push
pop
cmp
pop
in
mov
xchg
js
pop
aam
pop
cmp
mov
add
negb
sub
call
mov
mov
clc
pop
int
inc
sbb
push
lods
inc
ds
mov
jae
mov
or
lods
and
jae
jae
scas
sahf
jge
inc
dec
xor
mov
mov
xor
movsl
dec
cmp
or
inc
or
lret
mov
adc
xchg
cmp
cmp
xlat
pop
pop
cmp
out
jge
lahf
push
stos
push
adc
sub
imul
ja
mov
pop
subl
jl,pt
cmp
inc
js
cmc
sbb
rcr
insb
cwtl
orb
aam
adcl
cmp
in
lods
mov
clc
add
imul
dec
lret
loope
fucomi
or
in
test
or
fstps
testb
int3
push
cmp
lcall
add
dec
sub
xchg
cmp
aas
fwait
fwait
fwait
push
xchg
mov
jge
dec
ss
ret
mov
js
lods
jge
sub
mov
out
mov
out
lea
mov
or
pop
sub
lret
inc
shlb
shlb
out
mov
xchg
xchg
clc
out
sub
loopnew
iret
test
cmp
sub
cmpl
shrl
lret
mov
outsb
scas
clc
jbe
xchg
popa
subb
dec
in
lcall
hlt
insb
mov
jl
cmp
jl
fidivrl
jecxz
or
xor
mov
push
std
mov
addb
in
addr16
dec
sub
sub
dec
pop
inc
inc
xchg
int
int
gs
repnz
ficoml
sbb
lahf
int
int
imul
add
fstps
adc
mov
sbb
fidivrl
fdivrl
mov
pop
mov
jo
xchg
jne
mov
sub
movsb
insb
les
rorb
push
int3
mov
mov
aas
out
mov
ret
repz
pop
cmc
ds
jno
imul
mov
mov
fisubl
ds
aaa
aaa
aaa
inc
dec
test
lret
sub
and
aaa
aaa
aaa
and
aam
lds
les
sub
out
loop
insb
jae
sti
fcoml
sbb
xlat
es
sbb
addr16
jae
or
or
sub
inc
dec
adc
adc
in
js
and
fsubrl
push
jno
icebp
mov
mov
mov
cs
dec
pushf
xor
int
cmp
fwait
cmp
adc
jae
test
iret
fistl
mov
in
std
gs
fldt
bnd
lcall
add
nop
rcl
adc
jae
shrl
sbb
popa
jg
mov
shlb
cli
push
lods
or
mov
mov
xor
int
clc
mov
dec
xlat
push
cltd
adc
out
xchg
clc
std
mov
sub
es
outsb
cs
jl
iret
mov
or
iret
out
out
out
cmp
gs
mov
repz
pop
push
leave
fimull
sbb
rol
loope
mov
lahf
out
mov
fstpl
test
repnz
nop
out
lea
lds
ror
out
jns
sub
shlb
fucomi
in
sbb
cmp
fwait
mov
test
ja
mov
mov
lret
popf
icebp
mov
mov
mov
xor
jg
movsb
fsubrl
sbb
es
cli
lods
and
scas
ja
fidivrl
imul
mov
xchg
sub
xor
pop
xor
fnstcw
mov
arpl
pop
jns
cmpsl
loopew
mov
cmp
fdivrl
nop
pusha
dec
xchg
test
cmc
pop
jb
inc
jp
cld
ds
and
leave
pop
jge
imul
cmp
aaa
pop
add
mov
xchg
in
addr16
and
cmpsl
pop
pop
inc
cmp
sub
insb
js
int
int
mov
xor
sub
xchg
push
into
aam
or
icebp
xchg
lock
loopne
xor
int3
fcmovne
cmc
in
dec
loop
xchg
sarl
push
inc
adc
test
int
and
loop
cmpsb
xchg
sbb
movsb
mov
out
iret
int
test
mov
push
push
or
lret
jmp
inc
pop
gs
or
testb
inc
stos
out
sbb
bnd
int
int
sbb
mov
fmull
mov
ret
out
sub
or
imulb
insl
loope
xor
push
mov
out
ret
loope
xchg
jae
push
loop
movsl
popa
mov
and
fs
test
fwait
mov
daa
dec
or
repnz
dec
xor
fwait
fwait
fwait
fwait
cli
xor
pop
pop
mov
add
in
pop
shr
stos
xchg
jle
aaa
ja
pop
nop
mov
xor
pop
inc
shlb
hlt
movsl
bound
inc
mov
bound
fmuls
add
mov
and
in
pop
sub
out
lret
gs
xor
cs
bound
aas
fwait
fwait
fwait
inc
jo
loope
add
mov
outsb
test
inc
cmp
push
jle
lahf
fildl
test
pop
pop
pop
jmp
cmpsb
in
dec
pushf
fwait
push
xchg
mov
clc
inc
xchg
lea
int
int
das
popf
xchg
std
or
jecxz
dec
xchg
adc
leave
push
lods
and
pop
jo
imull
dec
rcll
mov
jp
std
add
dec
jns
and
push
jmp
pop
mov
pop
mov
fwait
fwait
stos
adc
cwtl
or
push
cli
fwait
fwait
fwait
fwait
sbb
push
lcall
fwait
pop
shll
dec
iret
ror
divb
loopnew
jg
cltd
and
repnz
pushf
in
inc
adc
cmp
clc
int3
fadd
push
inc
dec
pusha
hlt
lods
clc
xchg
enter
mov
pop
jl
movsb
mov
jbe
adc
push
push
sbb
hlt
mov
fcmove
xchg
pusha
adc
stos
icebp
mov
push
adc
icebp
jp
jecxz
pcmpeqb
push
pop
jl
out
dec
jecxz
out
adc
ret
out
mov
sbb
lcall
in
cmpb
cmpsl
jnp
inc
hlt
pop
sbb
cli
cmc
pop
inc
sub
xchg
pop
add
repz
add
xor
adc
mov
mov
pop
xor
test
out
popf
les
adc
mov
mov
xor
cwtl
xchg
shl
xchg
lock
adc
xchg
mov
outsl
inc
out
jle
outsb
test
cmp
pop
push
andb
and
in
es
jl
mov
push
aam
ror
out
xchg
dec
xchg
int3
sbb
adc
jae
push
loopne
enter
popa
lret
mov
aas
pop
adc
mov
pop
icebp
sub
pop
mov
xchg
pop
rcr
faddl
roll
xchg
and
jecxz
sti
js
push
mov
dec
fimuls
jle
sbbb
xorl
in
fdivl
fstpt
dec
das
xchg
neg
fldln2
push
lea
adc
repz
dec
or
push
pop
lock
mov
mov
imul
mov
sbb
or
ds
aaa
aam
xor
jne
jo
mov
xchg
jge
loopne
movsl
mov
enter
jge
into
sahf
jae
iret
daa
sub
nop
xlat
or
dec
push
mov
dec
in
dec
pop
sti
pop
mov
mov
test
jnp
addl
call
iret
fwait
inc
mov
lret
sub
lahf
ret
sub
aaa
cmp
clc
fdivrl
fs
cmc
fsubr
jl
add
fdiv
dec
cld
pusha
cli
cmp
shlb
jae
into
cli
test
shlb
jae
jae
popa
int3
in
les
inc
cmpsl
mov
xlat
int
in
add
insb
mov
dec
test
xchg
scas
pop
add
mov
dec
outsb
outsb
outsb
outsb
bound
push
in
push
cmpsl
cs
ja
outsb
arpl
push
mov
jmp
lods
mov
ss
aad
add
and
jae
jae
adc
mov
sarl
out
lahf
int
addr16
dec
push
add
inc
adc
pop
xor
call
inc
or
dec
mov
mov
sarb
mov
xchg
out
std
cmp
pop
cmp
shlb
push
int
mov
sub
or
mov
xor
mov
add
sbb
sub
xchg
cmpsl
sub
mov
fdivrl
xchg
ror
insb
jl
out
dec
xor
int3
jae
lods
fs
setp
fmull
psllq
sub
jae
sti
fsubl
pop
mov
test
out
jae
mov
and
iret
out
out
add
cmp
popf
pop
movsl
fdivr
jb
inc
int3
fs
leave
or
out
fimull
and
xor
xor
fdivrl
dec
adc
mov
cmp
hlt
fcompl
jle
lods
maxps
inc
cld
jle,pt
cs
ja,pt
je
xchg
sahf
mov
rcl
xor
mov
jne
aad
dec
das
jbe
xchg
pop
or
out
out
jbe
test
mov
fwait
jno
rolb
fstps
leave
fadds
sub
sub
mov
addr16
fucomi
ficompl
jo
mov
movsl
mov
adc
fbstp
cmc
mov
cmp
lahf
add
dec
add
sti
mov
sub
jnp
loopne
jae
and
pop
ljmp
and
mov
mov
ret
or
movsb
add
adc
lea
ret
and
jne
pop
addb
cmpsl
clc
jle
or
or
mov
or
bnd
insb
out
ret
popf
sbb
f2xm1
cmp
in
mov
iret
dec
call
ret
mov
xor
aas
sub
out
push
or
inc
jmp
scas
jmp
and
jae
gs
mov
gs
sbb
aaa
aaa
mov
popa
xor
sbb
stos
or
lock
pusha
fucomip
das
xor
and
dec
adc
xchg
fcoml
into
andb
int
arpl
cmp
mov
cmp
sub
mov
mov
orb
cmpsb
fs
stos
aam
pop
imul
fdivr
movsl
mov
fdivrl
addb
add
hlt
adc
lret
fdivr
xor
inc
sarl
ds
gs
push
push
popf
divl
icebp
inc
insb
test
mov
mov
pop
pop
jmp
push
inc
lret
pop
call
xchg
or
xchg
fiadds
xor
push
ret
xchg
rolb
mov
mov
loopne
mov
sbb
jno
sbb
ficoml
dec
fdivrl
and
mov
mov
and
fcmovnb
dec
adc
jmp
fadd
in
mov
das
in
mov
fcompl
dec
or
popa
in
in
inc
inc
inc
addr16
vpmadcsswd
stos
and
inc
cld
popa
mov
ljmp
insl
arpl
inc
es
sub
inc
jmp
cld
sbb
mov
icebp
cld
add
ljmp
fidivrl
loop
shrb
mov
fsubrs
das
jp
cmp
test
movsl
mov
andl
dec
jge
testb
rorl
mov
adc
jle
fisttps
lods
bound
out
add
cmp
pop
jns
jg
push
or
pop
pop
cltd
dec
cmp
jge
pusha
loop
sbb
xor
pop
xchg
in
xchg
out
out
ficoms
pop
loope
cmpsb
mov
out
add
repnz
fdivrl
in
xchg
jl
pushl
js
add
push
test
lret
cmp
call
int3
mov
les
movsb
lock
pop
cmp
js
jle
adc
outsb
outsb
outsb
out
ret
bound
in
xchg
adc
push
aam
jp
enter
outsb
aas
dec
bound
out
sub
xchg
fldl
mul
or
popa
mov
pop
hlt
frstor
scas
lods
and
int
int
daa
shl
in
xchg
test
in
pop
clc
fnstcw
out
loop
dec
sbb
lock
mov
repnz
mov
out
mov
out
out
pop
push
inc
pop
call
std
sub
test
push
push
lcall
pop
adc
cmp
xor
sub
xor
stc
btr
int3
shl
jge
in
xchg
daa
jmp
lret
lock
inc
jb
mov
icebp
pop
and
outsb
outsb
sarl
fwait
hlt
jg
xor
out
jbe
jmp
add
mov
stos
push
out
int
push
xchg
xchg
sub
lahf
mov
cmpsb
inc
xchg
sub
enter
fsubl
pop
push
lcall
jecxz
clc
adcb
push
shlb
jns
pushf
out
cmpb
cmc
dec
xor
rolb
jae
out
imul
ds
fsubrs
aaa
mov
ljmp
and
aaa
aaa
aaa
ret
mov
or
mov
or
and
aaa
aaa
inc
adc
and
xchg
cs
push
lods
bnd
mov
ret
in
push
mov
add
stos
jmp
mov
pop
das
cmp
lret
mov
fwait
fwait
fwait
repz
pop
and
daa
outsb
data16
fwait
fwait
fwait
fwait
test
out
rorl
clc
push
and
fwait
fwait
adc
imulb
adc
out
mov
mov
inc
clc
pop
xchg
shll
insb
pop
pop
jp
test
fxch
adc
jbe
mov
lods
pop
dec
arpl
rolb
mov
pusha
into
ret
sar
push
clc
cli
fcompl
rclb
and
xlat
jns
out
fists
xor
pop
cmc
mov
mov
fwait
sub
sbb
popf
movsl
add
jge
outsb
mov
loope
out
sub
and
aaa
aaa
aaa
mov
sub
push
out
fsubs
in
scas
aaa
aaa
aaa
aaa
add
ds
xchg
xor
cmp
pop
jmp
cmp
daa
pusha
cwtl
add
cli
bound
push
mov
mov
jecxz
push
nop
jmp
pop
hlt
xchg
aam
xchg
subb
int
sar
inc
imul
int
dec
xchg
and
rcll
lods
ljmp
and
test
int
ret
out
adc
sahf
fs
mov
jl
inc
in
pop
imul
mov
mov
mov
push
xchg
cs
rol
rorl
shlb
dec
es
and
jns
ljmp
jo
test
mov
adc
or
add
mov
shlb
sbb
movsb
insl
mov
jl
mov
addl
inc
sub
stos
cmpsb
xor
push
pop
xor
aaa
aaa
aaa
aaa
sbb
push
outsb
sbb
push
or
aaa
aaa
mov
rorb
or
jecxz
mov
out
testb
cmpl
ss
out
out
add
inc
mov
pop
jns
insl
out
out
ret
sahf
mov
insl
mov
fmuls
shl
sbb
roll
sub
loopne
out
sub
mov
xchg
mov
test
out
out
dec
stc
xor
jne
jns
sti
add
out
out
lea
mov
int
es
frstor
xchg
cmp
add
insb
outsb
lahf
cmp
mov
sbb
cmc
insl
mov
mov
aas
call
les
aaa
hlt
pop
inc
add
das
out
mov
aaa
mov
fdivp
mov
cmp
xchg
pop
cmc
paddw
repnz
cmp
mov
mov
scas
call
shlb
je
jl
stos
jle
mov
cmp
pop
jge
fmull
xor
pop
ljmp
xor
xchg
fimuls
sbb
aaa
aaa
aaa
push
lock
mov
jmp
test
mov
push
jecxz,pt
xlat
pop
cltd
mov
bound
aaa
movsb
rcll
push
ljmp
iret
jae
fsubs
jae
pop
or
cmp
or
idivb
jno
lea
out
jle
or
testb
adc
ljmp
popf
mov
movsl
clc
jne
mov
mov
adcl
loop
iret
out
mul
and
cmp
adc
les
icebp
push
lock
sbb
shlb
push
loop
mov
clc
sub
cmc
and
cmp
outsb
cs
fdivl
push
iret
mov
aaa
jmp
xor
mov
insb
xchg
xchg
insl
jl
add
fwait
or
mov
nop
cmp
jle
out
jbe
mov
lock
popf
fadds
mov
out
push
or
or
cmp
jno
scas
mov
xor
push
dec
in
sbb
shrb
jp
mov
jl
loope
cmp
dec
lret
adc
jle
jmp
ror
jb
mov
outsb
adc
imul
add
sti
dec
push
mov
xchg
xor
ds
mov
pop
mov
inc
or
pop
jns
push
push
mov
js
sahf
pop
dec
and
cmp
imul
in
mov
jp
adc
adc
mov
movsb
jae
lock
in
jp
push
xor
int
in
arpl
cltd
adc
ds
int
int
xor
pop
mov
ja
aam
push
ds
int
leave
fnstenv
mov
outsb
outsb
cmp
jno
pop
cmpl
and
or
outsb
movsb
dec
mov
xor
lds
enter
adc
xor
mov
xor
sti
lret
ss
xchg
adc
jmp
loop
and
hlt
mov
cmp
sbb
jb
dec
adc
rcll
int
adc
adc
fcomi
sbb
test
in
xor
xchg
mov
outsl
sub
mov
ja
jle
cmp
out
xchg
mov
loopne
icebp
faddl
jp
push
xor
imul
mov
mov
xor
fisttpl
xchg
iret
sbb
cli
lret
mov
test
aaa
aaa
mov
lods
or
imul
aaa
inc
sub
or
xchg
cmpsl
cmc
jle
rclb
inc
inc
loope
int3
xor
fsubl
and
outsb
outsb
outsb
scas
xchg
sub
mov
push
push
sbb
neg
jp
jle
mov
mov
lods
jb
or
ret
or
inc
loopne
fnstcw
inc
push
xchg
cli
aas
inc
mov
jnp
aaa
aaa
mov
mov
movsb
sbb
hlt
data16
cmp
fs
cld
insb
dec
mov
mov
pop
or
xor
cmp
stc
inc
outsl
mov
mov
ss
cltd
div
gs
loopne
inc
cld
dec
test
out
mulb
sahf
addr16
or
ret
out
out
push
aad
loop
repnz
mov
xchg
daa
xor
mov
fwait
fwait
push
dec
jecxz
imul
mov
jae
cmp
push
jecxz
or
mov
popa
lock
sbb
lock
das
mov
and
and
aad
aaa
mov
loop
sbbl
fists
inc
cmp
aaa
aaa
bound
push
mov
and
clc
sbb
dec
js
aas
adc
sarl
scas
sarl
jg
and
pop
add
sbb
in
cmpsb
cwtl
xor
pop
decl
mov
sub
ret
xor
aaa
aaa
aaa
mov
jno
push
xor
or
ds
aaa
cli
mov
enter
dec
jl
fsubl
iret
stos
fists
repz
add
jb
mov
cld
jb
xchg
pushf
cmpsb
in
outsb
outsb
outsb
outsb
mov
sbb
lahf
mov
mov
push
cld
insb
mov
xlat
fwait
xorl
push
xchg
inc
add
loopne
fistpll
jae
jae
gs
jbe
jg
inc
sti
fldcw
jae
jae
pop
enter
popa
jnp
jge
sbb
mov
add
push
ret
mov
rol
inc
mov
xchg
xchg
icebp
mov
sti
push
cmc
push
out
insb
aas
pop
mov
adc
out
divb
xor
bound
cmpl
xlat
iret
bound
loope
sub
pop
adc
or
and
fcmovb
jae
lock
adc
jbe
dec
loopne
int
in
jg
sarb
pop
pop
das
dec
and
rcll
ds
idivb
in
movsl
outsb
cli
in
cmpsb
cld
inc
repnz
mov
insb
mov
sahf
mov
fsubrs
jmp
add
sbb
out
outsb
outsb
outsb
addr16
cmp
mov
fstps
icebp
adc
insl
out
push
jg
mov
cli
insb
scas
cli
mov
and
cmp
mov
sub
jmp
mov
filds
call
dec
add
add
jbe
mov
dec
cltd
lea
xor
test
addr16
insl
push
dec
lret
cltd
dec
leave
scas
pop
xchg
addr16
int
aam
imul
mov
jae
ds
xor
test
ds
sub
insb
das
insb
or
and
loop
lahf
in
das
aaa
pop
mov
and
in
sarl
enter
push
sbb
test
std
push
mov
adc
push
add
cmpsb
push
sbb
mov
xchg
ss
adc
dec
shrl
ds
icebp
loop
add
movsl
jb
inc
inc
cmpsb
andb
cmp
adc
nop
pop
cmp
lahf
mov
addr16
daa
inc
xchg
cmp
int
in
sub
mov
xor
movsb
ret
and
mov
loop
mov
testl
sub
fdivrp
arpl
call
lahf
mov
cmp
idivl
xchg
xchg
or
pop
pushf
adc
pop
fsubrl
das
fnstcw
ds
out
mov
imul
fwait
fwait
fwait
movsb
addl
sub
lods
adc
lret
pop
ds
fwait
fwait
dec
mov
imul
into
sbb
js
fwait
fwait
fwait
cmp
inc
clc
or
aad
sub
xor
jno
dec
movsb
lds
cmp
sarl
shrl
fdivp
push
add
or
jae
jae
push
pop
in
cwtl
das
mov
jmp
addr16
xor
nop
test
clc
inc
iret
out
stos
mov
sbb
xor
rolb
loope
mov
iret
push
inc
imul
aas
fwait
fwait
fwait
aas
mov
pop
nop
mov
cld
adcb
int
xor
lea
sbb
mov
and
out
in
pop
inc
cmpsl
sub
fxam
repnz
gs
int
int
adc
adc
shll
leave
mov
sbb
fwait
add
not
or
fmull
add
aas
fwait
subb
mov
push
hlt
pusha
inc
loope
jno
stc
shll
add
sahf
fstp
clc
mov
xor
sbbb
and
imul
lods
lret
dec
jbe
insl
or
sbb
insb
lahf
push
adc
sub
xchg
data16
nop
aaa
aaa
aaa
ja
cmc
xchg
cli
movsl
and
mov
jo,pt
jbe
repnz
xor
shr
and
cmp
pop
mov
cmc
lret
cli
sbb
inc
jl
out
iret
in
addr16
lds
xor
add
sbb
pop
lock
push
ss
aaa
aaa
sbb
push
push
les
scas
pop
cli
icebp
aad
leave
cmp
jb
sub
mov
stos
movsb
sub
jmp
es
mov
jmp
ds
add
mov
cltd
sbb
jae
or
and
jno
adc
call
push
cltd
cmp
nop
sub
roll
push
sbb
xchg
push
jle
fcomps
mulb
call
scas
cwtl
push
push
pop
add
push
mov
out
and
je
incb
out
cli
fdivrl
xchg
xlat
test
shl
insl
std
insb
test
cmpsl
je
popf
hlt
fadd
jbe
imul
in
add
nop
cli
dec
and
mov
add
xchg
ffreep
data16
sbb
sub
out
test
arpl
dec
jg
inc
movsb
dec
mov
out
out
mov
daa
push
xor
xlat
rorb
aad
ds
adc
aam
stos
lods
push
mov
mov
fdiv
jnp
rcr
mov
cs
imul
jae
rcr
mov
sub
adc
mov
fs
add
adc
cmp
fidivrl
fldcw
dec
clc
addr16
sti
cwtl
pop
mov
sbb
pop
jge
mov
gs
aaa
mov
in
sbb
sub
xchg
aad
dec
not
test
loopne
lret
aaa
aaa
lret
adc
lds
ja
push
jne
cmpsl
hlt
std
scas
divl
jecxz
cli
cmp
shlb
jno
popf
imul
sub
jmp
test
out
jp
mov
sbb
cld
mov
mov
outsb
dec
jne
mov
scas
test
inc
dec
jb
pop
ret
in
lahf
sub
add
loop
sbb
rclb
jecxz
pop
sbb
mov
repnz
ret
arpl
add
lcall
mov
push
repz
sahf
out
add
mov
cwtl
stos
icebp
xchg
jmp
fisubl
pop
xchg
dec
out
out
and
push
jb
mov
out
jmp
cmc
pop
out
add
stc
and
sbb
sti
mov
bound
adc
pop
pop
jp
mov
ds
sub
and
insb
dec
pusha
iret
pop
testb
mov
mov
out
scas
jns
jecxz
mov
aas
cmpsb
pop
cmc
inc
adc
rcl
xchg
jl
mov
jle
cli
mov
addr16
add
or
notl
push
jnp
jae
jae
and
inc
push
mov
shlb
dec
les
out
outsl
add
lods
push
xchg
ljmp
sub
ljmp
pop
lock
mov
iret
out
xchg
fdivrs
pop
int3
mov
icebp
mov
dec
mov
addl
data16
pop
cmp
mov
int
insl
out
pop
cli
pop
xor
or
pop
adc
psrlw
jle
mov
and
xorb
in
sbb
jo
clc
lcall
xor
jle
inc
test
aad
jnp
xchg
push
jl
in
idivb
hlt
fcoml
imul
shl
mov
sub
out
fidivrl
pop
fisttpl
rcrl
std
mov
fldt
adc
sub
xchg
loopne
add
test
out
cli
out
or
push
test
xchg
dec
insb
sbb
or
orl
pop
jp
orl
rcrb
ljmp
push
aam
orb
fwait
fwait
fwait
fwait
daa
cli
loope
popf
adcl
mov
adc
xor
push
outsb
jecxz
inc
mov
adc
xlat
push
dec
dec
pop
dec
cmc
ljmp
inc
and
outsl
mov
cmp
lahf
or
inc
push
lock
or
inc
push
out
mov
sbb
pop
and
pusha
ja
sbb
loopne
icebp
cmp
push
xor
into
push
sub
syscall
es
clc
pop
push
cmp
fwait
fwait
jp
pop
js
sbb
cmp
sti
loop
mov
or
mov
addr16
out
dec
scas
or
xchg
xchg
out
mov
cmc
xchg
test
cmpsl
repz
shlb
mov
movsl
daa
push
stc
lahf
js
jge
xchg
push
les
add
push
pop
push
dec
dec
mov
lcall
mov
enter
mov
lret
scas
jecxz
das
roll
out
out
sbb
and
sbb
mov
lahf
fildl
es
dec
jge
mov
test
jg
mov
push
mov
mov
addr16
jle
mov
inc
mov
cmp
loop
lea
mov
sbbb
pop
jae
jae
cmpsb
pop
aaa
out
mov
cli
push
sbb
add
addr16
lcall
pushf
and
jnp
xchg
sub
out
repz
out
adc
lahf
fstpt
fwait
pop
push
nop
out
xchg
cwtl
mov
jg
jge
push
jae
pushf
sahf
push
push
leave
shr
outsl
imul
push
cmp
sub
jae
lds
push
xchg
jno
mov
xor
jae
jae
js
sbb
mov
arpl
sahf
fbstp
ds
je
cmc
adc
pusha
test
sbb
cli
int
int
mov
cmp
call
into
hlt
mov
inc
insb
test
addr16
sti
jl
sbb
mov
mov
mov
cmp
cld
pop
add
mov
pop
dec
cld
sbb
adc
and
mov
pop
icebp
mov
test
nop
adc
fmull
jle
dec
cmp
shlb
and
in
aam
jae
xor
jae
in
pop
out
dec
xchg
mov
out
xchg
adc
sahf
fiadds
inc
pop
mov
inc
imul
and
rcll
mov
jae
xor
inc
insl
adc
dec
in
xor
jae
scas
jl
jnp
cmpsb
lcall
addr16
mov
dec
aas
sbbl
je
shlb
cmp
push
imul
jl
filds
fwait
fwait
fwait
jbe
xchg
pop
shrl
dec
sub
hlt
cmpsl
cmp
jne
mov
cld
mov
ljmp
in
std
jnp
jae
into
addr16
fs
xchg
imul
ret
xchg
inc
push
lea
jle
xchg
xor
pop
sbb
xor
jae
out
pop
mov
xor
mov
mov
dec
dec
rclb
jb
test
aam
fdivrs
pushf
test
sbb
fdivl
mov
rorl
sbb
mov
mov
mov
mov
push
jecxz
lret
or
or
lret
lods
loopne
loop
or
or
lcall
sbb
fwait
fwait
scas
cbtw
loopne
inc
cmpsb
sub
jbe
sahf
xor
data16
mov
shlb
sbb
adc
iret
inc
fwait
fwait
fwait
fwait
out
mov
inc
rclb
xchg
lahf
in
inc
lahf
inc
mov
mov
inc
aaa
aaa
aaa
mov
jbe
add
leave
or
sub
fdivrl
aaa
jge
cmp
popa
xchg
andb
cmc
mov
stc
rorb
sbb
pop
push
jae
shll
dec
jp
mov
sbb
jmp
add
pop
outsl
mov
mov
ljmp
fdivr
jb
mov
mov
push
cmp
mov
out
fcmovnbe
mov
aas
popa
push
or
sti
faddl
inc
int3
inc
mov
inc
or
test
gs
inc
lahf
int
aas
xor
pop
jo
xchg
loopne
leave
dec
cmp
out
add
dec
dec
xchg
cmc
cmp
out
inc
stc
in
fisubl
adc
xchg
out
mov
cwtl
jno
add
out
inc
dec
fs
mov
int
pop
dec
out
stos
mov
aaa
aaa
ja
lock
test
imull
cmp
sbbb
iret
scas
mov
fstp
sarb
mov
adc
pop
jle
out
out
test
insl
jae
xorb
out
out
int3
sub
push
jnp
mov
adc
mov
xchg
es
int
ret
or
pusha
xor
xchg
out
orb
inc
cwtl
jne
cmp
jae
jae
cmpsb
sbb
xchg
int3
or
push
lods
lock
pop
aam
in
cmpb
cwtl
cmpsb
loope
int
lahf
sub
inc
push
sbb
iret
out
push
sahf
int
int
pop
or
add
jae
fwait
or
and
fsubr
lods
clc
dec
fwait
fwait
fwait
fwait
rclb
mov
fwait
fwait
fwait
mov
and
test
push
pop
or
stos
cs
hlt
sub
xor
aaa
ret
or
push
jno
and
push
cmp
xor
popa
rolb
iret
in
arpl
dec
pop
pop
pop
mov
jge
les
xchg
or
mov
cmc
sti
push
loopne
jbe
aas
mov
add
push
sbb
addr16
cmp
fdivrp
mov
sbb
xchg
mov
js
mov
clc
sub
aas
sti
pop
out
ret
and
and
inc
lret
int
out
xchg
push
pop
jg
mov
cmc
subl
ret
adc
adc
cli
inc
push
cmp
mov
fwait
sub
mov
xchg
inc
inc
jbe
fadd
mov
aas
stos
cmp
in
cltd
or
jge
xchg
jb
ja
mov
std
popa
pushf
and
into
dec
xor
sbb
jae
pusha
dec
out
and
ljmp
out
mov
add
ret
std
add
mov
mov
in
push
or
repnz
mov
xor
mov
inc
sbb
mov
clc
adc
lret
icebp
lahf
in
idivl
or
in
aad
push
movsb
cmp
add
mov
cli
lea
mov
je
repz
add
push
addr16
int
dec
xchg
test
jbe
cmc
dec
mov
int
int
dec
sub
xor
add
test
lahf
mov
in
and
out
jge
rolb
sbb
mov
out
xchg
adc
pop
fmuls
mov
shlb
dec
mov
jl
mov
mov
cwtl
push
fdivrl
mov
sbb
dec
lds
xor
test
clc
fnstcw
imul
mov
mov
js
loop
add
push
out
adc
stos
test
scas
arpl
nop
add
arpl
jecxz
inc
imul
inc
stos
rcr
loopne
cli
mov
pop
dec
pop
mov
xor
call
adcb
repz
inc
mov
shll
or
scas
push
xchg
mov
mov
sti
scas
mov
sahf
and
xchg
jmp
jae
jae
push
das
das
outsb
pop
sbb
cmpsl
jle
fbld
lock
fldl
adc
fcoml
or
int
mov
inc
sub
add
sti
cmp
mov
test
pop
scas
inc
stos
jae
mov
jl
outsb
aas
xor
pop
and
sub
lods
sahf
mov
outsb
add
adc
inc
fs
divb
loop
sahf
xor
push
xchg
and
out
out
mov
leave
mov
mov
cvttps2pi
iret
je
xchg
pop
cmp
push
push
pop
roll
push
imul
cmp
fwait
movsl
outsb
push
in
cs
sub
stc
jmp
push
iretw
lods
punpckldq
jecxz
mov
lods
stos
gs
dec
les
stos
mov
adc
fwait
ds
sub
pushf
push
jns
into
mov
inc
or
xor
fucomi
mov
pop
inc
mov
inc
mov
in
sbb
dec
lahf
fiaddl
sub
outsb
cs
mov
movsb
sub
jbe
mov
mov
cmc
xor
mov
jecxz
push
lret
add
add
mov
out
scas
movsl
sbb
es
loopne
sahf
adc
daa
cs
mov
fcmovne
inc
ds
outsb
outsb
test
mov
imul
rcr
cli
sub
fs
insb
push
std
insb
mov
mov
pop
jl
mov
add
xchg
mov
and
sar
add
pop
ss
aaa
mov
mov
insl
jb
mov
add
bound
push
xchg
aaa
aaa
aaa
jecxz
xchg
and
ljmp
ds
mov
mov
xor
jmp
mov
push
sbb
sub
xor
mov
test
and
mulb
stc
pusha
cmp
mov
mov
jl
repnz
fcmovne
inc
int
idivl
mov
pop
int
pop
aas
mov
mov
stos
mov
mov
loope
int
int
repnz
mov
cltd
dec
shll
stos
js
lret
lods
test
outsl
mov
cmpb
push
jge
aaa
aaa
decb
and
lea
or
and
jbe
stos
add
aam
jb
lcall
jne
cld
jp,pt
cmpb
mov
scas
ds
fwait
fwait
sub
testl
sub
mov
jge
aas
adc
cmp
mov
cmp
clc
push
in
test
stos
loopne
jecxz
bound
add
sbb
jbe
in
js
inc
sbb
loope
push
leave
into
clc
inc
es
xor
fld
shlb
jle
pop
dec
fs
lahf
fwait
fwait
repnz
ret
jbe
sub
mov
lods
outsb
iret
int
int
xor
add
aaa
loope
lods
movsb
sub
ret
dec
lahf
xchg
cmc
xchg
les
popa
push
jle
fdiv
rorl
xor
notb
sub
cwtl
mov
mov
out
or
cmp
shll
rolb
jae
shl
test
imul
sub
and
loop,pn
addr16
lahf
fstpt
mov
xchg
or
xchg
ret
xchg
pop
push
xor
outsb
outsb
aas
dec
xchg
cmp
shlb
sub
cli
insb
inc
inc
in
jb
dec
jae
jae
divb
in
sbb
stos
sbb
addr16
sub
or
xchg
fdiv
jle
into
mov
mov
fildl
pusha
xor
push
jg
arpl
and
outsb
aas
fwait
add
test
stc
out
icebp
lock
aaa
jl
fsubrp
pop
adc
pushf
inc
clc
aad
inc
popf
jl
aaa
aaa
mov
sti
in
adc
je
test
pop
ja
fstp
test
mov
test
inc
pop
pop
fdivrl
xor
sahf
jo
insb
pop
xor
sti
adc
js
loop
push
cmp
arpl
cli
cltd
dec
sti
out
mov
sbb
xorl
stos
add
outsb
mov
cmp
jp
popa
bound
jae
test
mov
leave
jns
mov
ljmp
mov
sbb
mov
pop
xchg
fisttpl
pop
jecxz
cmp
xor
fwait
fwait
test
fs
xchg
loop
subb
mov
in
std
jne
jbe
nop
mov
icebp
adc
pop
insl
jle
dec
jle
adc
cmp
xchg
xchg
les
repnz
fsubrl
call
push
mov
fsubl
jb
push
and
dec
sbb
sbb
xchg
stos
lcall
mov
stos
out
out
movsl
dec
inc
inc
jo
movsb
lods
xor
add
insb
outsb
aas
mov
push
in
ret
adc
pushf
cld
push
and
aaa
aaa
cld
mov
pop
icebp
push
mov
aaa
pop
out
daa
push
or
in
jae
sti
dec
outsb
scas
cmp
xor
sbb
cltd
sub
mov
mov
out
pop
test
pop
jmp
jbe
addr16
push
or
movsl
xchg
push
in
inc
fcomps
mov
mov
sbb
js
sub
inc
pop
jbe
out
add
cmp
push
sub
mov
cli
iret
in
jae
sti
ret
mov
xor
aas
cmp
pop
jmp
ficomps
cmp
daa
cmp
outsl
mov
adc
lcallw
mov
fadd
cmpsb
loop
mov
inc
cli
push
or
xor
jae
inc
cmp
test
cli
or
cmpb
and
mov
push
out
out
cld
inc
movsl
sub
ret
jl
pop
test
out
cmp
dec
sbb
push
mov
cmp
sub
pop
dec
enter
ds
aaa
aaa
inc
push
das
mov
adc
mov
mov
out
mov
inc
ds
xchg
push
pop
data16
js
mov
inc
xor
add
iret
idivb
push
sbb
inc
repz
mov
cmp
and
or
je
sbb
fcompl
push
repz
leave
test
int
in
pop
push
mov
pop
push
mov
int
scas
addr16
and
xchg
mov
int
int
pop
stos
data16
mov
fnstcw
iret
xor
cmc
test
jo
jae
sti
aam
leave
xchg
bound
imul
jae
test
add
data16
loop
pushf
pop
xchg
sub
inc
movsb
xor
and
jbe
mov
inc
inc
std
mov
rolb
mov
fwait
cmp
mov
je
sbb
dec
xchg
add
out
mov
mov
pop
loop
cld
xor
fwait
fisttpl
or
jg
push
fwait
fwait
fwait
fwait
int
insb
ret
mov
lods
adc
dec
xchg
insl
sbb
add
repz
loopne
cltd
sahf
aam
repnz
mov
lds
jmp
jo
add
fdivrs
jmp
loopne
dec
xchg
sbb
ja
cmp
hlt
or
enter
mov
and
stc
fcomp
or
jne
pop
mov
ljmp
and
mov
loop
movsb
lahf
sub
xchg
movsb
int
clc
test
jae
or
rorb
cmp
and
and
dec
mov
sbb
fwait
ss
es
add
mov
jecxz
mov
jo
mov
int
jno
shrb
lock
fsubl
mov
or
iret
addb
adc
jnp
xor
outsb
outsb
outsb
sarb
cld
imul
sbb
add
pop
jae
jae
fs
mov
sarb
enter
inc
shlb
out
mov
dec
adc
mov
mov
push
pop
call
inc
sbb
es
out
pop
dec
jo
xchg
lods
inc
push
or
lea
push
outsb
pop
movsl
mov
out
fmull
mov
dec
cmp
insb
aaa
out
mov
and
xor
push
lcall
imul
dec
jns
push
lcall
cwtl
rcr
js
aad
flds
dec
or
insb
pop
mov
iret
scas
lahf
xchg
pop
in
cmp
ds
iret
repz
xlat
insb
push
sbb
adc
sarb
jp
sbb
mov
nop
rcrl
je
addr16
or
fbld
int
aaa
mov
mov
mov
mov
je
xchg
mov
push
add
fwait
or
rcrb
std
push
xor
push
stos
in
add
cmp
sub
orb
gs
cld
shlb
int3
cmovle
sbb
adc
push
sbb
lea
dec
cwtl
mov
cmp
into
shlb
cmp
cmc
sbb
pop
xchg
test
add
faddl
daa
lahf
loopne
outsb
xabort
loope
or
sahf
jecxz
jge
jl
pop
loop
push
imul
mov
or
mov
insl
inc
lods
shr
clc
pop
mov
push
jle
test
push
lods
jle
adc
dec
fisttpll
jne
jno
lahf
or
push
fdivrl
das
stos
enter
sbb
mov
fcompl
xchg
leave
dec
sbb
jae
sti
aam
sbb
imul
inc
jg
cmp
in
addr16
add
and
roll
movsb
ljmp
jae
jne
and
fcmovu
iret
js
pop
sbb
xor
sbb
pop
outsb
lahf
fwait
fwait
sub
mov
mov
and
outsb
outsb
inc
stos
js
imull
jno
cmc
loopne
insb
outsb
outsb
outsb
mov
cltd
in
lcall
hlt
xchg
rcl
jb
in
arpl
dec
ret
jge
jnp
aas
iret
int
int
push
addl
jae
sahf
pop
push
lret
mov
sub
outsb
outsb
cmp
nop
les
xor
fidivrl
outsb
outsb
cmpsl
and
in
inc
mov
jnp
sub
pop
hlt
es
adc
in
ret
std
inc
pop
icebp
or
lret
out
xchg
mov
add
cltd
clc
fld
test
fiadds
push
sti
pop
or
cmp
xchg
outsl
int
add
mov
insb
std
jp
cmpsb
iret
int
mov
inc
lods
fcomi
aas
push
ror
out
sbb
jnp
xchg
mov
jno
lods
jecxz
dec
int
imul
inc
movsbl
bnd
sti
clc
test
lock
push
xor
aam
sbb
daa
enter
push
add
cmp
ds
ljmp
pop
shlb
inc
test
pusha
int
int
push
iret
sbb
in
enter
notb
lahf
push
ret
mov
addr16
cmp
iret
data16
mov
rcl
sub
jae
xor
fidivl
test
inc
add
mov
cmp
push
jo
lahf
int
in
jmp
rcrb
mov
ret
or
fwait
fwait
mov
cmp
adc
loopne
and
int
mov
jnp
jnp
in
sti
fnstcw
in
data16
int
int
or
jg
int
dec
bound
addr16
pop
sub
ljmp
sahf
pop
sti
inc
cmp
and
pop
dec
testb
out
jae
mov
cmp
fistl
test
push
in
inc
cwtl
repnz
add
adc
incl
sti
lret
popf
aad
mov
mov
push
cld
mov
rclb
inc
cmc
sub
aaa
aaa
aaa
aaa
sbb
fimuls
rolb
loopne
xchg
insl
jno
movsb
push
add
icebp
js
lds
scas
movsl
out
mov
mov
xorb
sahf
or
in
push
cli
pop
outsb
and
sub
mov
bound
lds
lock
jb
push
xor
movb
clc
rcrb
outsl
pushf
in
leave
cli
imul
lock
fwait
sub
mov
ss
or
jge
gs
rcrl
fwait
sub
mov
negb
xor
pop
or
out
cmpsl
popf
stos
adc
andb
imul
mov
fwait
fwait
fwait
xchg
jecxz
dec
int
pop
icebp
stc
jbe
xlat
cmp
fwait
fwait
jo
lds
dec
insb
fdivrl
inc
and
mov
insb
pop
xorb
sub
pop
cli
faddl
or
ror
mov
outsb
or
dec
roll
xor
pop
cld
insb
testl
cmp
adc
imul
pop
into
loopne
xorb
iret
cltd
mov
xor
jecxz
jae
add
loopne
lcall
mulb
sarb
mov
lahf
push
pop
test
enter
repz
and
fstpt
shrl
andl
add
loope
ds
mov
mov
and
pop
mov
push
jne
out
mov
cld
lret
fidivrs
mov
and
lahf
pop
addb
pop
mov
mov
lock
cmp
cli
fnstcw
or
mov
dec
outsl
cmp
outsb
outsb
rcrb
outsb
ds
inc
cmp
mov
addb
lcall
ja
lahf
lock
sahf
jae
scas
add
add
cmp
inc
aam
jae
sarb
add
movsl
hlt
mov
pop
jns
cmc
movsl
fnstcw
mov
inc
clc
fld
sbb
cmp
mov
loope
out
mov
sub
hlt
test
out
or
inc
mov
loopne
out
or
lret
sbbb
es
out
mov
mov
pop
sub
adc
fcmovne
out
lods
xchg
lret
inc
xor
mov
stos
pop
dec
movsl
cmp
xchg
roll
call
dec
add
or
fdivl
mov
je
push
inc
pop
cmp
gs
stc
cmc
addl
inc
pop
mov
xchg
adc
loope
movsb
pop
jae
jae
in
aam
retw
mov
jae
mov
gs
out
out
cmp
inc
lret
lods
mov
inc
jb
fwait
ds
out
or
add
jle
pop
cld
insb
mov
and
outsl
neg
js
sbbb
push
js
lods
aaa
mov
xchg
pop
aam
adc
iret
out
insb
push
dec
jno
cwtl
jp
int
js
mov
sahf
int
aas
fnstsw
ljmp
fdivrl
xchg
push
mov
es
int3
pop
psraw
fdivrl
aad
fimull
fiadds
aas
mov
out
and
divl
fcompl
xchg
xor
pushl
push
xchg
icebp
lds
xor
dec
add
lahf
in
xchg
mov
popf
and
shr
fs
out
fwait
cmp
ljmp
pop
jo
nop
ds
mov
xor
loop
aaa
ja
scas
ret
fstl
fsts
pop
push
cmp
js
and
pop
xor
cmp
sbb
cli
mov
aad
mov
jae
sti
mov
in
iret
cli
mov
add
sub
insb
and
and
push
fistpll
mov
int
or
cmpsb
clc
outsl
mov
jmp
fwait
iret
int
mov
outsb
lea
mov
xor
and
sbb
fmull
call
inc
das
inc
sub
in
addr16
cmp
push
xor
fstl
test
int
enter
cmp
fwait
iret
int
push
xor
jo
and
mov
outsb
outsb
outsb
aas
pop
jne
out
scas
idivl
mov
aaa
cld
insb
fcomps
leave
into
xchg
aam
cs
xchg
rorb
insb
outsb
cmp
inc
pop
mov
jle
loop
inc
iret
xchg
push
sbb
insb
outsb
outsb
outsb
insb
in
imull
cwtl
mov
mov
inc
add
roll
ret
iret
xor
fbstp
lods
mov
fdivrp
repnz
sub
hlt
cwtl
jge
sti
into
outsl
daa
pop
mov
in
adc
or
out
mov
movsb
negb
push
xor
or
out
out
cmp
dec
lret
pop
sub
mov
leave
popa
adc
std
lcall
imul
call
xchg
rolb
cli
xorb
push
lock
xor
mov
jno
ds
lahf
inc
or
popa
mov
inc
jecxz
rcrb
mov
dec
cs
js
imul
popf
fwait
clc
popf
cs
gs
test
loope
int
int
loopne
aad
lock
loopne
push
lea
pushf
xchg
add
mov
pop
sbb
insb
mov
ficoms
mov
xchg
rcrb
lcall
pop
pop
sub
add
inc
data16
mov
or
pop
popa
adc
insl
iret
sti
frndint
insb
out
inc
leave
jge
xchg
in
lea
test
les
jbe
mul
fcoms
movsb
int3
mov
out
les
inc
xchg
pop
popf
cmp
insb
aas
fwait
cmp
xchg
jne
mov
out
push
sub
xor
lret
xor
out
jmp
cmpsb
aam
insb
outsb
inc
shl
cs
bound
ret
out
out
mov
xchg
mov
enter
add
addr16
jae
pop
sbb
push
sahf
jns
aam
les
jb
aam
std
mov
xchg
lea
sbb
adc
std
aas
ss
sub
xlat
sar
pop
dec
pop
sub
sub
add
pop
sahf
cld
bound
inc
ja
mov
mov
inc
or
mov
xor
fwait
mov
test
shll
pop
out
mov
fadds
cmc
mov
push
inc
ficoms
movsb
aas
fwait
fwait
fwait
mov
sbb
jecxz
insb
outsb
outsb
cmp
in
xlat
xor
push
xlat
mov
lock
shlb
lret
push
xor
pop
ja
fdivrl
fcompl
xchg
stos
lea
insb
outsb
scas
clc
cmp
fs
popf
mov
mov
test
scas
sbb
cmp
jbe
sbb
fcmovne
sbb
push
aad
bound
or
nop
fcmove
mov
sbb
aas
fcom
push
sub
sub
fdivrl
mov
mov
adcl
arpl
nop
jl
outsb
scas
cmpsb
xor
mov
cltd
sub
xor
adc
outsl
and
outsb
aas
ftst
xchg
mov
jns
mov
jp
push
jne
cld
insb
outsb
les
es
scas
fimuls
lods
add
cmpl
xlat
and
or
sbbb
xor
xor
sub
dec
jmp
in
negb
aas
int3
adc
fdivrl
cli
out
lds
out
mov
inc
xor
clc
das
imul
or
dec
insl
cmp
int
popf
int
cmp
lods
mov
int
cltd
pop
add
lahf
adc
je
repnz
sub
insb
xchg
bound
cmc
mov
mov
push
xchg
pop
dec
cld
dec
fsubl
mov
insb
xchg
aaa
cmpsb
fbstp
sbb
fwait
fistl
bound
push
cmp
enter
fwait
fwait
inc
loop
push
stos
mov
ja
into
add
jle
mov
jle
gs
push
mov
mov
std
jnp
insl
sub
int
in
mov
inc
xor
cmp
out
iret
movsb
and
xor
dec
fcmovb
adc
pop
out
iret
int
in
jae
lret
jp
lret
mov
add
xchg
push
test
sti
inc
arpl
cmp
and
out
int
addr16
and
jle
ds
or
xlat
mull
mov
ffree
adc
fwait
popa
xor
fimull
mov
pop
mov
fcmovu
and
xor
out
pop
fcomps
rclb
cld
or
adc
sub
sbb
ret
cmp
jp
scas
ds
jns
jge
ja
testb
cltd
mov
adc
imul
insl
dec
or
js
int
int
stc
push
pusha
or
out
mov
dec
sbb
xchg
mov
cmp
std
fwait
fwait
mov
mov
sbb
jnp
decb
sahf
fwait
fwait
pushf
lcall
out
mov
inc
fisubl
dec
fwait
clc
cmp
popf
xor
fwait
mov
insb
jge
pop
xor
inc
inc
push
aad
xchg
stos
mov
movb
pop
cmc
mov
hlt
loop
jge
movsl
inc
std
andb
lods
pop
push
cmp
cmc
inc
mov
xor
aaa
mov
jge
mov
fisubrs
pop
mov
aaa
aaa
mov
shrl
cmc
lret
cmc
jg
push
jecxz
int
in
movsl
mov
rclb
mov
iret
inc
ret
dec
hlt
mov
daa
int
int
lock
gs
jg
insl
jnp
int
int
push
fmulp
call
jmp
repnz
int
int
push
push
xor
or
xor
add
into
adc
jmp
stc
add
push
xor
in
fistpl
mov
scas
inc
ss
ja
int
idivb
aam
outsl
loop
stc
adc
push
xor
push
lahf
add
xor
mov
enter
jle
inc
test
mov
int3
lcall
sbb
loop
add
in
pop
jl
mov
cli
stos
jb
je
xchg
cmc
or
inc
fidivrs
jecxz
enter
jb
rclb
xchg
scas
shl
ds
insl
pop
mov
loop
and
sbbl
jae
xchg
out
aam
pop
xor
aas
out
sbb
adc
pop
adc
out
dec
pop
roll
xchg
inc
add
out
out
leave
push
push
aaa
jmp
fists
out
out
enter
sub
mov
mov
scas
stc
stos
ror
cmp
add
iret
int
pushf
xor
sub
outsb
shl
pop
mov
clc
mov
invd
pop
std
adc
call
insl
call
and
int
lods
mov
sbb
mov
xchg
inc
int
lods
inc
inc
mov
int
bound
push
push
mov
out
ljmp
aaa
aaa
aaa
mov
lods
std
pop
fistl
push
jg
mov
or
insb
aam
aaa
aaa
aaa
out
sub
and
sti
int3
pop
cmp
or
int
test
push
add
mov
shlb
pop
adc
std
pop
pop
push
inc
pop
mov
arpl
cmc
nopl
inc
jl
and
pop
push
repz
loope
fsubrp
push
mov
ror
mov
jbe
nop
mov
inc
mov
fwait
mov
adc
fcompl
mov
fnstcw
jae
jae
jp
or
lods
jne
xchg
aas
dec
adc
addr16
adc
inc
cmpsl
jbe
test
int
incb
lret
lret
inc
fmull
out
fdivl
xor
push
daa
sub
xor
sbb
out
jns
pop
xchg
lea
push
movsl
lahf
int
or
mov
dec
notb
cld
sub
out
add
pop
out
in
mov
cmp
ds
push
pop
outsb
les
inc
push
pop
imul
je
gs
dec
loop
in
push
or
push
aas
fistpl
clc
jb
ja
repnz
dec
push
lcall
add
mov
in
mov
jne
sarb
adc
cld
adc
rorl
mov
hlt
repnz
fwait
arpl
mov
fwait
outsb
out
mov
sub
cwtl
test
sub
stos
xor
inc
mov
xor
mov
mov
shll
scas
std
mov
xchg
inc
pusha
xchg
xchg
in
jae
stos
negl
add
addb
iret
rcpps
mov
fisttpll
pusha
xor
sbb
or
clc
and
imul
mov
out
jno
sahf
adc
hlt
mov
clc
mov
xchg
popa
fildl
ljmp
out
inc
clc
leave
lahf
int
sbb
push
sub
xor
into
int
push
lcall
bound
cmc
pop
sahf
xor
ds
into
xor
cmp
clc
and
jae
popf
dec
shlb
sbb
inc
ds
fwait
sbb
dec
outsb
fsubrs
and
sahf
pushf
jae
jae
test
dec
inc
ror
sub
shr
jae
jl
es
sub
bound
test
andl
int
das
lret
sub
jno
bound
adc
add
ljmp
sahf
pop
pop
mov
mov
ljmp
lea
test
xor
outsb
cli
fnop
test
mov
jns
sbb
je
outsb
outsb
outsb
xchg
scas
mov
fstps
jae
mov
out
sub
add
mov
fistps
xchg
in
push
lret
dec
inc
clc
pop
icebp
add
inc
repnz
or
and
flds
xchg
mov
pop
insb
xor
lahf
fwait
fwait
fwait
xchg
cltd
xchg
mov
push
outsb
mov
int
pop
fcompl
cmpsb
and
push
and
js
sub
and
jp
scas
cli
adc
rcrb
pop
ds
mov
cwtl
out
adc
adc
fdiv
add
xor
sub
imul
pushf
dec
add
and
hlt
lcall
jecxz
mov
pop
xor
lods
iret
mov
jnp
sbb
mov
mov
pop
adc
inc
mov
in
xor
jb
inc
fcoms
ss
subb
dec
and
dec
pop
es
inc
dec
lret
mov
insb
xchg
xor
push
int
lock
pushf
in
or
sub
daa
dec
fcompl
sbb
and
mov
sub
mov
and
jl
enter
sub
mov
stos
loopne
jmp
and
xchg
mov
daa
xor
xor
and
dec
xor
sahf
jge
and
pop
outsl
add
imul
cmpsb
lahf
int
fmul
in
rcl
out
cwtl
jo
out
out
stos
sub
imul
jmp
add
outsb
dec
lea
adc
fwait
daa
out
or
in
mov
int
lods
mov
gs
fstps
xor
aaa
sbb
jnp
fwait
adc
int
in
idivl
ficompl
into
faddl
lahf
int
xchg
mov
rol
cmp
int
clc
dec
loopne
mov
add
out
lret
jno
dec
xor
out
out
ja
lds
fimull
out
push
pop
in
js
imul
xor
cld
pop
sahf
sub
pop
xchg
fs
xchg
repz
lcall
mov
or
insb
scas
lahf
int
int
or
rcrb
cmp
aaa
aaa
cld
cltd
inc
sbb
mov
lahf
in
frstor
jle
aaa
aaa
icebp
mov
cmc
cmp
jg
and
insb
insl
outsb
mov
movsb
popf
push
in
pop
std
jb
loope
lds
xor
sti
sbb
imul
fmull
mov
adc
rclb
addr16
test
inc
mov
fwait
mov
in
pushf
xor
ds
xchg
jbe
cmp
js
outsb
ja
mov
cmp
vmovsldup
les
aaa
push
jl
cmp
lea
or
aaa
loopne
dec
jg
mov
jmp
les
pop
lock
ss
lock
dec
dec
sbb
fiaddl
sbbl
mov
dec
loop,pn
mov
fists
jae
popf
ljmp
sbb
inc
out
iret
insl
fs
dec
and
mov
loopne
xchg
sbb
mov
mov
inc
adc
pop
fdivl
xchg
add
shrb
mov
dec
inc
repz
dec
lods
fisttpl
xor
sbb
enter
fwait
fwait
insl
and
jns
cmp
xor
lret
dec
aas
sub
xchg
test
pop
sarl
pop
arpl
js
int3
in
inc
test
iret
xor
aaa
aaa
adc
and
xchg
in
inc
pop
cld
insb
lods
cmpsb
test
sbb
aaa
and
mov
cltd
cmp
ss
cmp
or
bound
pop
xor
test
test
ss
ja
lahf
movb
jle
push
std
push
int
negl
and
mov
test
cmp
cmpsb
xchg
cmpsl
iret
pop
xor
mov
js
addr16
pop
xlat
jo
push
ss
popa
fdivp
aaa
mov
jle
push
fildl
test
pop
or
shrl
pop
pop
lahf
fwait
rolb
inc
jle
loop
ds
aaa
pop
sbb
rcrl
mov
aaa
adc
xchg
test
in
sub
mov
xor
addr16
adc
andl
push
in
lods
out
jecxz
andl
outsb
outsb
outsb
outsb
bound
push
mov
sbb
dec
stos
mov
jp
cmp
out
xchg
pop
shrl
mov
addr16
xlat
ficomps
dec
adc
add
aas
cmpl
dec
ror
iret
out
scas
rorl
sbb
outsb
dec
sub
pop
cmp
fcmovnb
aam
clc
mov
dec
ljmp
aaa
pop
jl
cmp
or
cli
out
jbe
or
aaa
aaa
and
cmc
xchg
or
mov
outsb
outsb
js
xchg
les
je
shll
lret
lcall
int
gs
ret
sbb
xchg
xor
inc
sub
mov
rolb
mov
shll
jge
jge
push
jns
cld
pop
xchg
mov
cli
jb
inc
pusha
into
inc
test
fstps
sti
mov
sub
push
out
scas
outsl
les
clc
sbb
lods
jnp
aaa
aaa
mov
dec
sbb
cmpsl
sub
ja
xchg
aaa
aaa
aaa
loope
dec
mov
mov
jle
aaa
push
add
cld
clc
cmp
fdivl
sti
xchg
hlt
or
cmp
push
pop
out
inc
call
fidivl
das
loop
push
jns
fwait
dec
movsl
mov
lea
mov
jl
out
sbb
push
xor
sbb
add
push
cmc
mov
lds
mov
lock
xchg
jg
ret
dec
movsw
ds
push
shlb
mov
int
xor
jo
sbb
push
shl
mov
mov
mov
inc
cmc
add
lcall
push
and
les
loope
loop
jecxz
mov
pop
bound
sbb
sahf
movsl
jle
bound
fwait
fwait
pop
es
test
iret
cltd
pop
sahf
fwait
fwait
loop
or
je
aaa
mov
push
jbe
push
loope
gs
fisubl
es
adc
mov
pop
lods
loop
outsb
xchg
aaa
sbb
jmp
or
cwtl
cltd
clc
xchg
cmp
iret
in
sti
mov
push
push
adc
inc
daa
dec
fwait
xor
cmp
ds
sub
or
mov
inc
adc
mov
subl
pop
push
icebp
and
dec
movsl
push
push
stos
lock
loope
jg
cld
dec
outsb
scas
clc
inc
or
and
inc
les
inc
std
insb
outsb
outsb
or
xor
imulb
jo
cmp
push
sbb
jno
insb
mov
test
ja
fildl
sub
loopne
or
inc
or
jmp
ljmp
fwait
fwait
fwait
popa
pop
and
fucom
xchg
cwtl
mov
mov
jl
mov
insb
es
pop
cmp
dec
jecxz
xlat
fstl
hlt
sub
mov
rcl
popf
or
rorb
lahf
in
xchg
mov
out
jnp
xchg
jmp
cmp
test
mov
inc
aam
jb
lahf
rep
test
cmp
lret
xchg
hlt
hlt
and
addps
jnp
push
adc
clc
iret
out
out
add
mov
pop
lock
cmpb
insl
and
testb
jo
fcoml
mov
jle
and
xor
jge
aas
mov
dec
xchg
cmp
shrb
ds
aaa
jno
test
jbe
fucomi
pop
jno
in
test
outsb
inc
cmp
int
xchg
in
scas
mov
pop
cli
xor
lahf
aad
add
cmpsb
xor
cld
in
mov
orl
xchg
fcmovne
ud0
jle
xchg
loopne
test
outsb
lahf
fwait
ss
icebp
jno
cmp
subb
push
sbb
and
outsb
outsb
cs
sub
push
jb
sbb
xor
frstor
jne
outsb
add
mov
out
out
mov
xor
adc
lods
sbb
je
daa
loope
xor
pusha
jae
jle
aaa
cmp
shrl
fwait
fwait
jne
je
mov
push
stc
fxch
cmpl
xchg
hlt
std
shlb
jo
iret
les
cmp
mov
and
pop
mov
lcall
insb
clc
dec
mov
cli
in
cs
and
gs
mov
arpl
pop
sbb
movsb
ds
shlb
imul
outsb
scas
loop
fs
mov
add
sbb
fmull
rcr
mov
fwait
fwait
fwait
sub
pusha
lods
xchg
aam
outsb
or
jge
xor
fwait
xchg
xchg
rclb
mov
push
stos
add
cmp
fimull
lahf
in
jbe
lods
mov
pusha
hlt
cs
icebp
adc
mov
sbb
fcoml
mov
enter
and
lahf
fildl
push
lret
cmp
push
mov
aaa
mov
stc
fsubrl
and
push
inc
in
pop
mov
lret
mov
loope
repnz
dec
pop
push
iret
xorl
dec
int
int
fmuls
inc
data16
rorl
xchg
rcr
cmc
or
addr16
jae
mov
xor
ds
mov
dec
rcrb
stos
pop
push
sahf
fwait
mov
bound
cmp
cwtl
pop
adc
outsb
xchg
test
leave
cli
stos
sub
cld
dec
dec
mov
add
aam
ss
lods
outsb
xor
push
ret
jl
outsb
outsb
orb
jne
mov
adc
push
mov
aaa
dec
enter
scas
cmp
fs
jmp
pop
testb
push
dec
inc
sub
xor
rcrb
and
lea
fistps
fsubrl
andl
sbb
cld
inc
dec
std
insb
out
rep
jno
lret
sbb
sti
insb
iret
shl
push
adc
outsl
cmp
cmp
push
push
cli
adc
inc
imul
pop
push
mov
pop
ljmp
cli
ds
jg
push
xorb
std
sahf
loope
mov
add
insb
movsl
mov
xor
aas
fldt
sbb
fdivp
add
dec
lea
add
mov
hlt
outsb
xchg
push
cmp
pop
shlb
push
pop
test
cmp
pop
dec
mov
inc
pop
loopne
add
ss
xchg
sbb
xor
jae
jae
sub
adc
jecxz
lds
push
shl
jae
jae
xorl
push
sahf
xchg
jle
mov
add
xor
testb
pusha
pop
sbb
inc
test
out
decb
add
mov
iret
aam
add
jg
fstps
sbb
rclb
lock
jns
rorb
xor
mov
out
and
cmp
fsubl
add
rolb
aaa
jl
jne
stos
mov
add
pop
jmp
mov
xor
in
mull
and
shlb
ss
cli
sahf
xchg
xchg
test
scas
jae
aaa
aaa
aaa
int3
sti
and
daa
ror
and
fwait
cmp
arpl
jbe
pop
xchg
test
into
int
jg
push
aad
sub
dec
sub
scas
push
cltd
rcrl
pop
pop
cli
mov
cld
dec
dec
fs
and
les
nop
je
sub
loope
lcall
lock
out
lret
sahf
xor
cmpsb
lahf
int
and
sbb
and
pop
push
mov
out
stos
out
adc
push
aaa
pusha
imul
jl
iret
out
insb
dec
rclb
jb
or
mov
or
push
jne
push
mov
int
test
and
pop
movl
xchg
and
sbb
inc
mov
mov
inc
movsb
or
pop
inc
add
mov
mov
std
fistpll
mov
push
mov
rol
int
out
push
sbb
iret
out
mov
mov
setg
dec
outsl
mov
fcmovnb
xor
and
cmp
ja
ret
aaa
ja
insb
add
or
xor
adc
cmp
aaa
aaa
push
stc
cmp
xor
sub
mov
xchg
pushf
inc
mov
mov
mov
mov
hlt
xchg
mov
push
adc
fidivrl
xchg
cli
clc
fisubs
es
jno
out
add
fldl
or
out
out
movsb
je
scas
dec
jp
cmp
aas
fucomp
aas
sahf
fistl
jbe
movsl
iret
jge
stc
add
fcompl
sbb
in
orl
jno
cmp
fimull
mov
aaa
aaa
aaa
aaa
pop
xor
xor
adc
push
or
aaa
aaa
ljmp
ret
fidivs
jmp
xor
dec
adc
push
cld
js
fdivs
aaa
aaa
pop
inc
and
call
or
push
jl
aaa
pop
lahf
adc
cmp
bound
mov
xchg
fistps
inc
jecxz
push
mov
rcll
lret
loope
std
and
adc
xlat
jge
in
inc
push
pop
cmpl
ret
xchg
add
ss
and
gs
xor
mov
jg
push
add
jb
imul
fsts
in
dec
sbb
dec
iret
ds
push
xor
jmp
mov
or
loop
mov
gs
imul
faddl
add
mov
mov
fwait
out
add
ja
pop
orl
fcoms
push
repnz
and
lock
mov
cmpsb
mov
pusha
cli
sub
test
int
push
lret
lds
or
iret
mov
repnz
sub
mov
sbb
fwait
jge
jmp
jmp
mov
aas
js
scas
lret
add
hlt
fstps
push
clc
inc
add
xlat
xor
xchg
test
and
add
fdiv
mov
ror
daa
cld
sbb
loop
adc
push
cmp
fsubr
dec
xlat
mov
adc
add
out
fidivrl
aaa
mov
or
add
mov
jns
out
std
xor
jle
mov
xchg
mov
adc
ss
lods
xchg
push
movb
cmc
insb
outsb
and
jecxz
xor
fwait
push
out
out
not
mov
cmp
outsb
ret
mov
pop
je
jnp
xchg
mov
or
xor
aam
jle
aas
ret
dec
andb
pushf
mov
jl
popf
bound
data16
out
cmp
ljmp
push
out
out
test
cmc
dec
lock
fsubs
ret
iret
out
push
jp
scas
sbb
sbb
outsb
test
imulb
cmp
fcompl
idivb
rcl
xchg
test
dec
cli
push
pushf
xchg
sbb
call
hlt
nop
sbb
add
xchg
cmp
pop
jbe
stc
sarl
push
jecxz
cmp
xor
jmp
cmp
or
loopne
mov
mov
push
lods
pop
mov
or
mov
add
in
rcrb
add
fdivrl
sub
jp
insl
je
dec
cmpl
push
xchg
sbb
mov
lcall
loop
jecxz
xchg
decb
mov
das
stos
push
adc
rcr
mov
orl
xor
gs
scas
or
fcoml
movsb
dec
enter
outsb
aaa
aad
inc
dec
std
mov
in
mov
mov
pop
mov
test
sbb
dec
cmp
jecxz
push
jno
dec
push
cmp
daa
push
mov
dec
test
and
cmp
adc
outsl
adc
lahf
jp
xchg
sbb
ja
inc
int
add
inc
call
fstpl
and
add
sub
lcall
mov
xchg
nop
fdivrl
aaa
mov
sahf
fcmovnb
dec
mov
sub
xchg
pop
dec
mov
nop
je
out
pop
mov
cmp
jp
push
cmp
mov
clc
xchg
lock
out
add
addb
sub
aam
fadd
test
out
jne
cmc
adc
cli
mov
lret
fadd
fwait
xchg
aam
pop
outsb
sub
mov
mov
inc
pop
into
mov
push
xor
and
mov
mov
out
xchg
addr16
lods
bound
mov
ljmp
adc
aas
cmp
fwait
fwait
add
xchg
inc
aas
divl
ja
gs
andps
pop
cld
or
and
je
insl
jo
lds
fwait
sbb
mov
xor
push
push
ds
fwait
mov
dec
andl
inc
cmp
mov
push
cmp
insl
pop
int
or
bnd
and
push
cmp
or
xchg
loopne
fwait
xor
add
xlat
into
dec
lods
leave
lock
mov
xorl
or
mov
lcall
mov
rclb
mov
jbe
je
lret
sar
movsb
scas
jne
push
les
and
mov
sbb
push
out
fistl
pop
cltd
add
repnz
pusha
cmp
arpl
lahf
inc
jbe
fcom
shlb
mov
out
and
lahf
lret
dec
cmp
loop
lock
std
aam
leave
lret
test
and
sub
ss
sti
sarb
cmp
loop
jae
in
call
jae
pop
pop
push
mov
es
lods
xor
jns
jns
sub
fs
push
adc
pop
ds
mov
std
insb
rorl
adc
mov
mov
out
testb
mov
in
mov
jb
int
or
add
xchg
and
and
sbb
push
mov
mov
and
aaa
inc
jnp
lahf
out
mov
mov
lods
add
adc
out
cli
fcoml
dec
xchg
jb
outsb
outsb
outsb
out
mov
out
xchg
insl
mov
icebp
lods
insb
outsb
outsb
cli
or
fwait
or
or
mov
negb
in
mov
fisubrl
and
push
bnd
clc
mov
fiaddl
test
cmp
insb
xor
jns
inc
mov
mov
xchg
scas
mov
scas
movsl
mov
cmp
jae
les
adc
stos
or
xor
jae
jmp
popa
sub
int
int
incl
adc
inc
mov
icebp
sbb
int3
adc
int
int
or
fcoml
push
pop
sarl
in
fucomi
cmp
jbe
sahf
xor
cmp
lahf
fwait
fwait
fwait
pop
inc
in
inc
leave
imul
push
lock
leave
cmp
mov
bound
inc
sub
adc
mov
pop
lea
xlat
rcrb
push
cmp
xchg
sahf
fwait
pop
andl
pop
cmpsb
jbe
idivb
xchg
dec
sbb
sti
scas
pop
cli
cmpsb
sub
push
mov
mov
out
add
mov
js
sbb
adc
mov
into
mov
sbb
in
cmp
lock
sub
out
out
add
adcb
icebp
lret
adc
ret
repnz
ja
cmp
iret
mov
movsl
sub
fists
imul
adc
addr16
mov
je
icebp
dec
push
mov
movsb
xchg
enter
test
inc
movsb
out
out
iret
mulb
sbb
pop
sbb
sahf
arpl
jae
inc
inc
mov
or
xchg
je
jmp
or
ret
xor
in
cmp
dec
loope
stos
push
std
push
pop
into
lret
jle
aaa
mov
inc
sub
push
xor
mov
cmp
and
out
push
es
push
fwait
fwait
or
repnz
stc
bound
fwait
fwait
fwait
fwait
int3
cmp
fiadds
mov
mov
xchg
stos
imul
push
popa
ret
adc
out
mov
insb
insb
cli
repnz
sarb
out
ret
out
inc
inc
and
divb
jmp
outsb
pop
adc
stos
lock
push
out
cli
sbb
pop
add
inc
ss
insb
outsb
rolb
fsts
das
sub
ss
test
or
repnz
leave
jge
cmc
in
sbb
and
call
iret
divb
pop
in
pushf
addl
call
xchg
pop
scas
cld
cmpsl
jae
sti
jge
mov
mov
pop
push
and
insl
lahf
loope
push
es
popf
inc
ret
sahf
jl
pop
sbb
and
cmpb
adc
mov
int
negl
mov
adc
lods
leave
int
int
cmpsb
mov
bound
pop
jb
int
int
ljmp
mov
iret
int
int
inc
and
sbb
incl
xchg
pop
mov
or
jge
int3
insl
or
cwtl
test
ret
and
mov
ret
scas
sbb
aam
pop
das
inc
lcall
aaa
pop
data16
out
rcrl
hlt
jnp
out
in
mov
cld
or
jge
push
call
stc
pop
dec
inc
in
xchg
jne
fdivrl
mov
push
cmp
iret
sahf
data16
sbb
outsb
push
dec
lcall
add
cmp
mov
lds
mov
js
pop
loop
xchg
idiv
mov
clc
fsubrl
ficompl
in
outsb
outsb
outsb
cs
loope
fwait
inc
sub
jecxz
lods
inc
js
les
adc
jae
shlb
loop
dec
insb
fisubs
out
and
in
adc
mov
mov
xchg
out
andl
xchg
mov
jge
mov
fidivs
outsl
loope
sarl
xor
and
fcompl
push
pop
xor
lea
ds
notl
loopne
and
lods
sti
dec
movsb
daa
dec
cmp
mov
mov
sahf
dec
popa
cwtl
notb
subl
std
cmp
pop
andb
adc
lret
adc
jae
repz
adc
jae
je
mov
pop
sub
sahf
int
dec
es
jbe
jb
adc
pop
lock
push
xor
jmp
add
fsubs
sbb
push
jbe
mov
icebp
lods
dec
add
out
data16
fcompl
icebp
cmp
mov
cltd
push
movsb
xchg
ss
cmc
mov
jle
sbb
cli
xor
fisubrs
push
dec
xor
imul
fsubrs
mov
scas
add
xchg
or
movsb
loop
mov
add
call
mov
iret
out
mov
dec
aam
or
loopw
cmp
addr16
mov
stos
sbb
xor
std
in
mov
lret
inc
pop
aaa
rcrl
mov
aaa
xchg
lret
insb
xchg
pop
mov
insb
out
cli
inc
out
sbb
lds
ja
cli
bound
std
leave
clc
pop
adc
in
xor
int
xorl
dec
jnp
fmul
int
int
ret
repnz
dec
cltd
mov
adc
int
int
test
notb
mov
int
add
into
cmp
dec
pop
out
cwtl
int
int
jb
aaa
cmpl
hlt
fidivs
inc
out
lahf
int
push
stos
sbb
in
std
pusha
ret
cli
push
ret
jp
pushf
mov
aam
lds
negl
out
pop
in
cmp
push
orb
xchg
sbb
or
pop
ljmp
add
cltd
fstl
sub
adc
fdivrl
ja
cmp
fmull
mov
mov
icebp
mov
cmpsb
es
jmp
jo
push
inc
ds
inc
ds
stos
xchg
aam
xor
movlps
imul
ljmp
loopne
test
sub
ss
dec
mov
dec
fisubl
sub
inc
scas
and
sbb
outsl
cmp
push
std
hlt
ret
mov
inc
jae
movb
lahf
in
add
sub
push
hlt
sbb
test
fsubrs
push
pop
inc
or
jle
mov
cltd
jp
in
add
mov
movsb
mov
adc
mov
scas
xor
adc
fwait
das
cltd
loope
inc
jo
leave
xchg
mov
out
pop
leave
pop
adc
jle
xchg
int3
jmp
js
mov
lods
je
test
cmpb
push
pop
fmull
loope
pop
xchg
push
inc
jnp
mov
insb
shll
clc
pop
loope
jge
mov
and
inc
mov
aad
jl
jae
fildl
cmp
es
dec
and
pop
movsb
pop
or
movsb
cmp
adc
mov
enter
fcoml
jns
rclb
mov
mov
or
pop
sarb
jae
jae
pop
gs
popa
aam
testl
in
or
test
inc
jecxz
mov
and
fcompl
imul
outsb
outsb
scas
cli
dec
test
cmpsl
movsl
add
idivl
add
mov
mov
std
out
negb
pop
cmpsl
clc
xor
mov
fcmovne
out
pop
test
stc
les
out
sbb
in
test
jo
lods
or
sbb
mov
dec
orl
dec
pop
out
or
mov
je
dec
mov
cmpsl
mov
daa
lock
imul
push
mov
enter
pop
outsb
outsb
xchg
jmp
adc
jmp
ljmp
fwait
xorl
shll
jle
out
sbb
xor
mov
jae
mov
in
jae
lods
adc
push
leave
inc
in
out
data16
fdivrl
add
add
dec
xor
sub
int
mov
push
ja
cmc
xchg
adc
jns
fwait
stos
ds
cmc
dec
cmp
les
xchg
aas
out
mov
mov
repz
outsb
xor
mov
mov
ds
in
push
and
loopne
loope
nop
jp
mov
outsb
outsb
mov
pop
test
negl
aaa
aaa
pop
cld
push
xchg
push
dec
pop
sbb
mov
add
aaa
aaa
std
adc
xor
cs
or
push
lods
jbe
decb
sbb
mov
push
out
mov
orb
mov
out
test
outsb
xchg
fadds
inc
and
sbbb
lods
pop
xchg
mov
dec
fstl
aas
fs
pop
daa
push
shl
pop
repnz
jp
mov
mov
bound
lahf
fstpt
das
addl
ljmp
mov
je
fs
adc
scas
xor
inc
gs
mov
xor
fdivr
in
and
jne
xchg
clc
das
pop
clc
cmp
pushf
add
jge
mov
inc
sahf
add
jae
cmp
nop
je
sub
jge
xchg
shlb
fisubs
jae
fs
or
and
sti
cmp
ja
repz
arpl
sahf
dec
add
out
movsl
and
fwait
fwait
fwait
sbb
rcrb
lahf
inc
add
pushl
dec
gs
adc
scas
pushf
mov
shlb
testl
or
sbb
int
pusha
cmp
aad
add
xor
inc
test
jmp
shrb
xchg
popf
test
dec
adc
test
dec
mov
stos
es
mov
add
push
pop
mov
push
popa
popa
cmp
les
call
jb
addr16
add
rorb
mov
mov
pop
or
pop
push
inc
mov
mov
out
cld
mov
push
mov
insb
aaa
rclb
in
jge
clc
mov
and
outsb
aad
enter
pop
ret
aaa
mov
mov
incb
and
xor
adc
loop
rcl
sbb
loope
into
adc
jae
ret
or
xchg
cmp
inc
and
lcall
sarl
fiaddl
bound
cmc
mov
inc
mov
cmp
add
testb
lock
mov
in
add
push
sub
into
pop
subl
push
lods
fists
sub
lds
and
cmpsl
adc
outsl
cmpsb
sahf
int
jge
pop
jo
mov
fwait
mov
lea
adc
adc
lods
add
cs
stos
rolb
test
mov
loopne
fisttpl
push
sbbl
fwait
fwait
and
pop
in
decl
xor
sbb
lahf
imul
mov
and
jmp
clc
mov
in
jae
push
ds
aaa
inc
xor
and
cli
je
int
int
sbb
sahf
icebp
aad
popa
js
in
sti
fnstcw
pop
xchg
mov
int3
pop
dec
add
dec
fimuls
mov
in
addr16
popa
stc
outsl
mov
xor
aaa
aaa
aaa
in
mov
js
mov
data16
daa
and
mov
std
insb
cli
lret
psubq
movntq
dec
adc
jp
fcomi
dec
push
mov
lds
ja,pt
pushf
cmp
cld
sbb
add
test
lret
jmp
loop
push
jbe
inc
rorb
fwait
xchg
gs
in
cmp
mov
mov
sti
cmp
mov
scas
or
clc
jae
jae
cmp
imul
xchg
and
mov
bound
jae
mov
and
mov
sbb
pop
loopne
jae
jbe
pop
inc
pop
mov
xchg
pop
ss
push
xchg
mov
iret
int
add
ret
ds
rclb
in
iret
xor
xor
fistl
push
lahf
cmp
lcall
or
ja
xor
cmp
leave
das
jb
jge
aaa
add
loop
sti
lret
sahf
cltd
gs
cmpsb
stos
fwait
sub
pusha
cmp
inc
je
xchg
and
cld
xchg
stos
out
divb
pushf
inc
pop
add
clc
mul
pop
dec
out
mov
add
repnz
out
int3
adc
test
fwait
fwait
fwait
fwait
std
lods
scas
fs
stos
outsb
outsb
outsb
lahf
fwait
cmp
clc
ret
cld
dec
test
outsb
outsb
les
lds
imul
sahf
dec
xor
mov
pop
pop
sub
push
icebp
or
mov
dec
adc
push
scas
js
clc
je
xor
dec
inc
loope
jp
xchg
sahf
in
inc
test
cmpsb
insl
adc
jns
cli
ds
inc
jge
jbe
pop
push
jo
jl
out
lock
test
xor
pop
dec
stc
adcb
inc
pop
into
push
loope
mov
js
mov
mov
test
adc
xlat
out
sbb
add
or
mov
mov
daa
imul
cmp
cmpsl
in
lods
inc
jno
push
jo
push
sbb
cs
cmpsb
xchg
call
outsb
outsb
outsb
outsb
jecxz
inc
xor
cmp
jb
mov
mov
pushf
mov
out
gs
aam
jl
pusha
out
out
and
xchg
and
pop
or
mov
xchg
ljmp
pop
arpl
int
enter
sub
pop
mov
jae
insb
cmpsb
pop
pop
rcr
and
imul
cmp
sub
push
push
loope
adc
iret
ljmp
dec
ljmp
out
imul
mov
sbb
dec
xchg
or
push
mov
fwait
stos
neg
lcall
adc
and
jp
mov
push
lds
ja
cmpb
fdiv
mov
jp
and
inc
gs
js
inc
clc
ljmp
inc
jo
adc
outsb
ss
aas
stos
stc
popf
jns
pushf
in
aaa
sbb
inc
fcmovu
mov
call
adc
mov
add
ss
mov
push
inc
or
loop
icebp
insb
call
sbb
mov
je
or
in
jmp
inc
clc
jbe
jp
jbe
pop
bound
in
rorb
fwait
stos
dec
stos
jne
rorb
sbb
iret
xor
dec
jb
xchg
add
icebp
jge
cmp
and
pop
or
test
aaa
aaa
push
in
add
nop
sahf
and
mov
ss
sbb
test
sbb
mov
clc
jbe
cltd
pop
stos
jno
jl
jae
jae
dec
pop
jno
aas
mov
mov
out
mov
and
jo
inc
hlt
fistps
adc
fs
lock
jne
cli
add
jae
dec
les
adc
cmp
out
je
stos
xor
out
pop
cmp
pop
push
int3
test
mov
cmc
sub
dec
jnp
pop
jl
sbb
and
je
sbb
pusha
xor
lds
push
fnstenv
push
decb
mov
adc
inc
sbb
pop
or
mov
leave
shll
lret
cmpsb
inc
xchg
jbe
shl
out
mov
mov
js
push
je
push
jae
jae
sbb
cmp
fs
mov
push
add
mov
mov
scas
inc
lea
pop
cli
xchg
push
movsl
jmp
imul
shll
sub
les
nop
mov
push
mov
mov
dec
clc
or
push
mov
lods
push
cmp
clc
mov
inc
sub
cmp
fstps
push
fs
mov
jp
pop
mov
fsub
call
xor
cltd
mov
or
ret
pop
data16
mov
insb
push
cmp
jne
in
add
fstps
pinsrw
lods
pop
add
loop
jle
int
jbe
std
or
pusha
es
loope
jae
pop
cmp
aam
subl
js
xchg
cmp
jmp
scas
outsb
outsb
fisttps
or
dec
out
or
xchg
push
cmc
nop
jp
jge
adc
or
xor
xor
scas
dec
mov
mov
not
hlt
fildll
adc
jle
fbld
xor
mov
loopne
int
jae
pop
mov
rorl
dec
xor
pop
fidivrl
jge
clc
sahf
pop
fisubrs
xchg
add
outsb
outsb
cs
mov
mov
mov
mov
sbb
insb
outsb
outsb
add
out
subl
push
cmc
ret
insl
pop
jbe
mov
inc
adc
and
mov
inc
out
jae
jae
add
xchg
test
in
testl
jno
in
xor
sahf
inc
pop
jge
jmp
int
int
clc
lea
out
jmp
push
loopne
iret
mov
jb
fs
sbb
jae
adc
out
push
mov
daa
xor
mov
push
das
add
pop
es
push
mov
jecxz
scas
xor
mov
cmp
fwait
iret
jbe
int
in
push
insl
mov
cmp
cwtl
or
adc
cld
mov
mov
push
push
jmp
sub
cmp
ds
imul
lock
sahf
jg
pop
inc
cld
dec
je
andb
cld
push
add
push
and
addr16
sbb
bound
lret
xchg
outsb
outsb
lahf
fistps
sbb
loop
pushf
outsb
outsb
outsb
outsb
clc
pop
adc
cmpsl
in
or
pop
subb
int3
arpl
pop
les
es
es
fcomi
push
inc
xor
aad
rorl
fwait
push
xchg
daa
aas
js
aam
sub
fwait
mov
movsb
jb
mov
sbb
aaa
pop
cmp
clc
rcrl
cli
dec
cmp
dec
andb
dec
xchg
test
push
cld
push
out
mov
cmc
nop
jle
jns
in
sub
and
mov
fldcw
outsb
outsb
mov
and
or
std
clc
inc
mov
and
ficomps
loope
pop
mov
mov
push
insb
lret
and
fbstp
nop
sbbb
cmp
mov
repnz
cmp
aad
test
roll
adc
iret
out
not
aaa
rorl
lock
mov
dec
in
fisttpl
fwait
xchg
jo
push
add
and
add
xor
inc
jge
insb
xchg
out
fdivrs
out
insb
mov
sti
dec
mov
mov
das
sbb
or
push
xor
out
push
aaa
xor
fsubrl
popf
lods
out
push
into
inc
dec
fwait
fwait
fwait
fwait
scas
clc
cmp
adc
clc
pop
insl
outsb
fstps
sahf
fwait
fwait
fwait
mov
je
push
pop
rclb
lods
jmp
adc
addr16
hlt
pop
pop
testl
push
xchg
insb
pop
cltd
push
outsb
pop
dec
pop
xchg
sub
je
ds
xorb
rolb
dec
fcmovnbe
daa
ljmp
xchg
out
lds
fwait
mov
xchg
clc
mov
dec
jae
push
and
addl
jb
fimull
jbe
shlb
jmp
bound
pop
fdivrl
sahf
cmpsl
mov
adc
fcoml
icebp
gs
aad
leave
clc
fcompl
mov
sub
lock
push
in
lea
add
iret
lods
mov
rcrb
shl
lret
fneni(8087
mov
fimull
cmp
adc
int
int
into
push
mov
add
ss
inc
push
lahf
mov
mov
adc
js
aas
stos
scas
lods
addl
jge
xlat
pop
add
push
jl
mov
mov
stos
neg
cmpsb
sub
in
iret
test
xchg
cmp
sub
jge
xchg
sbb
cld
inc
mov
fwait
push
push
mov
clc
and
pushf
mov
int
add
jae
pushf
lods
daa
outsb
aaa
sahf
int
int
inc
es
inc
mov
dec
jle
inc
pop
push
xor
xlat
jg
fidivrl
fdivrl
push
push
push
icebp
out
pop
inc
cmpsl
add
outsb
outsb
outsb
outsb
into
dec
imul
jns
lock
outsb
outsb
jg
mov
fidivrl
lret
fcompl
ljmp
aaa
popa
cmp
pop
jbe
loope
outsb
js,pn
sbb
mov
lock
lods
aaa
mov
lock
test
aad
test
movsb
aas
lret
aaa
aaa
aaa
sbb
stos
inc
dec
push
fdivr
jno
lcall
loopne
push
icebp
sbb
sarb
fimuls
aaa
aaa
aaa
aaa
push
imul
fadds
jp
in
xchg
lea
sahf
sbb
in
jp
repz
orl
mov
ljmp
aaa
pop
std
add
insb
push
xchg
movsl
nop
in
ja
jl
lahf
aaa
mov
aaa
aaa
mov
push
hlt
add
je
mov
add
cmp
sbb
cmp
test
insb
pop
std
faddp
inc
dec
jle
mov
fdiv
dec
cli
sbb
notb
sub
fxch
jle
js
mov
sub
aaa
loop
loop
ficompl
xor
fdivrl
sbb
pop
xchg
push
insb
dec
mov
out
mov
cli
xor
mov
bound
test
hlt
or
test
xchg
arpl
stos
dec
cmp
insb
inc
sarb
pusha
adc
mov
mov
fisttpll
rcll
mov
outsb
adc
mulb
ds
fwait
fwait
jl
push
adc
cs
loope
dec
pop
push
and
mov
stc
aaa
aaa
aaa
aaa
and
loopne
and
pop
es
cmp
aaa
add
mov
sar
add
popf
je
fcoms
test
push
scas
inc
ja
pop
ljmp
test
cmp
xchg
aam
fcompl
nop
lret
mov
sub
inc
jp
sahf
pop
xlat
clc
mov
sbb
lret
or
mov
std
insb
es
lcall
mov
fistl
shrb
pop
adc
sahf
sahf
xor
lds
sub
dec
dec
movsb
sbb
add
rcll
and
xchg
shlb
test
sub
lahf
fwait
fwait
pushl
pop
mov
add
loop
lahf
and
ds
aas
movsl
push
aad
mov
test
out
or
bound
dec
loope
dec
xor
add
dec
add
add
iret
pusha
mov
jle
out
out
int3
es
test
mov
push
cmp
lret
stc
bnd
rclb
clc
sub
push
fwait
push
sub
sahf
lret
jno
loop
jg
sbb
jge
fdivl
rcll
xor
cmpb
lock
shll
out
fisttpl
shlb
sbb
mov
out
sbb
cwtl
push
xchg
pushf
inc
and
fwait
sub
push
or
lods
fists
sub
cmp
leave
jbe
mov
jno
push
and
mov
push
xlat
lret
int
dec
or
mov
add
clc
popf
mov
sub
fyl2x
pop
jg
sbbl
sub
push
fisubrs
lahf
in
pop
or
mov
or
lahf
mov
fdivrl
into
xchg
push
adc
rcl
lds
mov
pop
jb
ss
sbb
and
out
inc
scas
movsl
ss
out
imul
add
xchg
int
neg
mov
fisubl
loopne
pushf
and
int
int
repnz
out
cmc
mov
add
aam
cwtl
fdivrl
inc
pop
adc
lret
cmc
outsb
test
pop
jae
sti
and
lahf
sub
cmpsl
mov
pop
sarb
adc
out
fs
jne
fadd
mov
mov
aad
je
mov
sub
int
imull
mov
ljmp
int
int
iret
sbb
lret
pop
jg
in
shrl
out
lahf
scas
jge
movl
or
pop
out
mov
xchg
out
mov
mov
push
test
push
pop
cmc
jge
push
movsb
cmp
mov
jo
push
insb
inc
adc
out
adc
cltd
jp
outsb
xlat
rclb
mov
ljmp
insb
outsb
outsb
outsb
into
bt
int3
pusha
mov
and
ja
xchg
sbb
shll
cmp
es
int
int
aam
into
sub
or
add
mov
popf
add
sub
inc
pop
mov
hlt
icebp
cmp
pop
lock
fisubrl
rcr
jmp
call
cmpsb
aad
cs
sub
xchg
ja
sub
ja
sub
iret
in
pop
cmp
test
fimull
imul
jne
aad
int3
cmp
xchg
pop
std
out
or
int3
ss
rorb
and
iret
out
mov
inc
add
mov
mov
cmp
dec
mov
push
cmp
inc
sbb
es
movsl
mov
icebp
xchg
mov
sahf
push
js
lahf
int
shl
xchg
adc
clc
sub
movsb
jge
add
push
insb
out
xlat
jb
out
testb
xor
xor
sbb
out
out
loope
and
or
jb
and
pop
cmp
push
scas
arpl
xor
mov
lret
pop
mov
or
add
js
jp
mov
out
mov
push
pusha
loopne
mov
adc
inc
rorb
outsb
out
push
xor
dec
arpl
data16
pop
add
jge
and
arpl
cmp
outsb
fistpll
ffreep
xor
jl
jle
repnz
push
nop
cmp
dec
jl
out
inc
fnstcw
dec
movsl
mov
sbb
orb
dec
lahf
and
in
mov
lods
jne
clc
sarb
incb
shlb
or
orb
push
xor
pop
out
add
sub
xor
dec
jne
and
iret
out
cs
in
subl
addr16
cmc
rcll
in
mov
int
sub
pop
sbb
scas
cli
jge
mov
aaa
mov
cmp
jp
dec
mov
xchg
std
fcompl
pop
ja
rcrb
ret
mov
ficoms
rorl
popf
xchg
push
scas
cli
push
cli
pushf
lds
movsl
adc
add
mov
dec
outsb
outsb
outsb
outsb
push
dec
mov
lods
lods
scas
and
insb
sbb
mov
sarl
fildl
fisubrl
pop
xor
dec
lahf
fwait
fwait
sub
pusha
cwtl
in
mov
add
int
insl
stc
inc
pop
jge
push
or
mov
ret
or
inc
mov
lds
push
push
cli
xchg
clc
cmc
and
fwait
fwait
sub
xchg
dec
mov
aad
mov
cmp
pushf
movsl
hlt
jns
mov
lock
pusha
inc
jecxz
sarb
adc
lahf
fistpl
in
ror
es
fnstsw
cmp
out
idivb
jl
xor
adc
iret
out
out
sub
add
enter
popf
ss
icebp
insb
outsb
mov
in
enter
fstpl
or
add
jle
cmp
or
es
xor
mov
mov
jl
cmpsb
jae
cltd
stc
sahf
out
out
icebp
pop
add
cwtl
and
and
pop
inc
cmp
addr16
cmp
mov
pop
test
sahf
push
lods
inc
and
aam
jl
rorb
stos
inc
aam
ljmp
roll
dec
push
xor
adc
test
mov
xor
aaa
and
fcom
dec
inc
es
hlt
nop
cmp
add
ss
ljmp
adc
scas
je
cmp
xor
inc
inc
icebp
pop
mov
mov
sub
inc
imul
fwait
fwait
jmp
pop
cltd
iret
jmp
xchg
setne
jge
jle
pushf
nop
dec
inc
push
mov
push
xor
gs
int3
and
mov
sub
and
sbb
sti
mov
mov
mov
ljmp
adc
cld
sbb
ds
aaa
and
int
mov
inc
mov
cmpsl
sbb
jbe
or
test
cmp
loop
mov
outsl
adc
js
outsb
aas
fwait
and
fnstenv
btr
aam
push
das
mov
daa
loopne
rorl
xor
mov
fisttps
jp
and
daa
loopne
jecxz
lahf
int
sbb
int
lret
xor
dec
mov
scas
lcall
mov
adc
aaa
pop
jge
sub
adc
je
dec
ret
push
dec
jl
xchg
cli
sarb
cmp
testb
sarb
lcall
fistl
in
dec
subb
cmpsl
mov
fwait
fwait
popa
out
adc
adc
fcompl
jl
xchg
mov
outsb
outsb
out
scas
lea
mov
rorb
out
leave
cli
sub
push
call
fcmovne
xchg
jmp
jo
inc
or
mov
lahf
xchg
je
mov
jmp
inc
xchg
jno
xor
add
loopne
ss
xchg
test
jecxz
sti
lcall
inc
filds
mov
hlt
data16
mov
mov
and
adc
fistpl
and
or
paddusw
fwait
adc
adc
xor
cmpsb
pop
push
lock
nopl
imul
mov
int
xorl
fsubl
in
popf
pop
xchg
and
dec
test
popa
mov
cmpsb
stos
aam
test
jno
fcoml
pop
in
jmp
dec
pop
loope
adc
int
in
xchg
out
inc
mov
data16
jmp
sbbb
xchg
outsl
repnz
es
pusha
dec
push
movsl
test
mov
lods
sbb
insb
mov
cli
fldcw
scas
inc
fnstcw
push
inc
js
outsb
outsb
mov
jl
stc
js
and
cmp
cmp
cltd
movsl
jg
lea
sub
shl
mov
clc
or
sub
insb
outsb
pop
xor
inc
push
and
and
aaa
aaa
in
pop
adc
dec
sbb
jecxz
mov
jl,pn
mov
pusha
not
xchg
ret
mov
shrb
lods
sarl
jns
aam
jmp
add
push
sbb
adc
int3
lock
mov
or
jne
ds
jo
fwait
iret
int
jle
cmc
int
and
jns
shl
out
xor
stos
iret
adc
out
adc
pop
jb
insl
sbb
adc
out
out
iret
popf
xchg
push
jb
mov
addr16
fistpll
data16
arpl
jno
add
js
xor
outsb
jnp
jmp
ss
or
movsl
stos
pop
add
dec
mov
xchg
mov
icebp
mov
stc
mov
mov
lea
adc
jge
fcomip
push
stos
push
dec
adc
bound
sbbb
stos
fists
lods
push
or
insb
outsb
outsb
outsb
dec
mov
insl
adc
adc
std
push
aad
cmp
dec
leave
leave
out
xorb
pop
bound
inc
add
jae
sti
cmpb
clc
jecxz
fimuls
mul
jae
jae
xchg
adc
stos
jno
jae
out
or
arpl
push
dec
jge
jb
sti
add
or
sbb
mov
push
into
push
jecxz
jmp
cwtl
pop
xor
mov
in
bound
and
jge
mov
xchg
push
lret
add
clc
adc
jae
out
aas
add
aas
xchg
outsb
outsb
outsb
outsb
adc
aam
shrl
push
sti
fsubl
insb
icebp
and
ret
mov
cmp
popf
imul
push
lret
outsb
mov
ror
dec
ss
or
aaa
outsb
outsb
outsb
outsb
popa
fsubs
imul
mov
jge
sbb
jl
inc
out
lods
insb
cs
lcall
out
mov
mov
das
sub
mov
xchg
sbbl
mov
jg
mov
mov
dec
test
pop
mov
not
adc
insl
les
out
sub
mov
into
int
in
mov
aad
xor
leave
jo
iret
int
jge
xor
cwtl
push
xor
ds
test
mov
push
add
das
jae
cmc
push
int
js
cltd
insb
insb
and
lahf
in
jae
test
inc
push
pop
mov
rorb
jbe
int
xor
or
bound
out
mov
ljmp
out
out
mov
stos
push
fcomip
movsb
xchg
icebp
movsl
jmp
outsl
cmp
ret
pop
cmpsl
xor
cmp
mov
pop
lods
and
pop
mov
add
iret
int
in
test
mov
imul
jge
test
jb
fwait
dec
rcl
mov
or
pop
jne
jnp
fadd
mov
pop
jp
rclb
fistl
pop
inc
repnz
popl
jno
mov
pop
popa
subb
ret
mov
mov
in
fisubrl
and
setg
or
loope
push
cmp
or
js,pt
outsb
adc
or
inc
dec
repnz
add
daa
addl
pop
ja
jl
fwait
fwait
fwait
fwait
adc
mov
pusha
mov
jl
pushf
incb
push
int
or
rcll
cmp
lods
test
ds
jp
xor
ds
push
out
add
shrl
stos
push
out
mov
lds
int
int
push
repz
mov
clc
lahf
int
int
mov
out
cltd
stos
gs
or
lods
mov
lds
fdiv
leave
js
jo
test
sub
mov
in
dec
jecxz
hlt
jge
xor
aam
adc
test
aas
add
pop
leave
cmc
int
aas
fwait
int3
and
lret
adc
mov
sbbb
ja
icebp
rsm
scas
stos
fmull
leave
sbb
fcoms
insb
outsb
repnz
sbb
mov
rol
ret
hlt
rcrb
fimull
pop
fwait
addb
xor
into
cmp
outsb
bound
icebp
or
outsb
cmpsl
and
or
pop
out
pop
in
out
lock
push
iret
inc
sbb
or
mov
dec
mov
subb
jbe
fcoml
fwait
fwait
fwait
fwait
test
test
mov
into
std
sbb
xchg
inc
pushl
insb
aas
and
les
incl
cmc
insb
cmp
mov
cmp
push
and
in
adc
fcmovne
repz
sub
xorb
adc
outsb
adc
shrl
popf
sub
rol
dec
ret
mov
insb
clc
mov
cmpsl
cmp
dec
jge
aaa
cwtl
and
shrb
or
in
stc
loop
inc
hlt
mov
push
pushf
sbb
divb
paddq
icebp
hlt
loope
jle
mov
test
cmp
outsb
outsb
cs
incl
pop
popf
in
sahf
lock
repz
mov
push
mov
jmp
push
repz
jge
enter
insb
pop
int
mov
insb
pop
test
lds
jle
lods
inc
or
mov
daa
lods
jmp
sub
inc
add
sub
aaa
mov
int
fistl
sbb
es
enter
sahf
fprem
icebp
cmp
jl
push
test
out
xor
xor
xchg
ds
or
outsb
outsb
mov
sbb
mov
ljmp
push
xchg
inc
dec
je
sarl
push
out
into
in
jp
outsb
mov
or
lahf
shl
or
repnz
jge
xchg
sub
loope
sti
fs
pushf
icebp
add
xchg
pop
enter
insb
outsb
insb
xchg
jmp
add
adc
ds
sbb
das
jnp
pusha
data16
sub
cmc
in
push
dec
pop
add
jmp
loopne
fsubl
jo
xchg
lea
mov
jae
fbld
jne
int3
rorl
jb
out
xor
adc
mov
pop
xchg
mov
and
lcall
adc
or
out
data16
mov
ficomps
inc
cmc
mov
dec
jno
mov
mov
dec
inc
push
insl
pusha
xor
mov
pop
shll
mov
sub
adc
jecxz
push
mov
rcr
icebp
loop
pop
or
mov
outsb
mov
push
mov
outsb
outsb
pop
pushf
mov
xchg
sahf
cmp
ss
outsb
add
mov
out
js
nop
orb
cltd
dec
lock
test
sar
insb
cmp
cmp
mov
mov
mov
or
in
jae
and
or
test
pop
cs
orb
dec
or
punpckhdq
mov
xchg
push
push
sbb
xchg
cmp
out
ret
test
fsubrl
pop
inc
cmp
xchg
mov
xchg
dec
test
out
mull
sbb
jno
int
pop
pop
fs
adc
int
int
dec
hlt
or
cmp
sbb
int
add
or
xchg
inc
cltd
mov
cmpsl
mov
pop
mov
aam
jecxz
out
cmp
mov
test
mov
repnz
push
ret
or
mov
outsl
jle
jge
push
sub
inc
push
or
cmpsl
in
push
pop
xor
mov
rcll
or
mov
add
sub
or
subb
mov
mov
js
fdivr
mov
xchg
lret
mov
pop
sbb
fdivrl
cli
div
or
mov
pop
inc
ret
xchg
mov
in
pop
ficompl
jae
jae
pop
mov
xor
fwait
movsb
cltd
movsb
jae
jae
jmp
je
cmc
idivb
stos
outsl
dec
dec
lea
out
into
outsl
rorb
out
dec
xchg
fcmovne
out
cltd
dec
in
or
es
out
sbb
imulb
call
insl
mov
test
dec
imul
fisttpl
inc
pop
into
out
pop
repnz
add
lea
jle
push
test
imul
push
ds
icebp
and
xor
addb
lahf
mov
in
pushf
mov
lea
fmull
aad
loopne
movsb
adc
in
sti
fnstenv
xchg
mov
jbe
addl
fnstcw
aaa
mov
pop
mov
fwait
cmpsl
jmp
jp
jae
jae
cmp
shr
inc
mov
int
sbb
in
addr16
mov
xor
mov
pop
leave
mov
jp
jg
sbb
sbb
sub
fdiv
jnp
es
xlat
enter
and
lret
push
call
shlb
pop
test
ja
fsubrl
insb
test
lds
jl
fsubrl
adc
add
push
out
add
or
mov
mov
mov
fsubs
cmpsb
fimuls
js
push
out
add
cmp
je
mul
jnp
shrl
jb
pop
or
inc
mov
std
pop
je
mov
stos
pop
sarb
jp
pop
cld
scas
shlb
mov
cwtl
ljmp
cmp
xor
or
pop
lock
sarb
cmp
jg
stos
outsb
outsb
lahf
fwait
jmp
and
sbb
pop
cwtl
outsb
outsb
outsb
outsb
pop
repnz
popf
sti
cmp
outsb
outsb
outsb
outsb
push
mov
lgs
adc
cmpsb
outsb
xchg
int3
dec
in
loope
out
mov
lahf
adcb
insb
sub
out
sub
inc
lds
aam
fs
inc
fists
bound
fnstsw
cwtl
jmp
scas
or
repnz
pop
inc
shl
test
int
out
punpckhwd
les
mov
push
leave
dec
gs
movb
incb
sub
mov
shlb
mov
lods
clc
dec
pop
jbe
push
cmp
and
fdiv
sbb
popf
xor
lock
in
sbb
fstps
aas
mov
clc
jne
mov
fdiv
push
clc
mov
dec
push
add
aad
jg
fadd
pop
cli
nop
or
jecxz
mov
int
enter
pushf
cmp
int
ja
lret
sub
mov
movsb
andb
in
filds
xchg
inc
or
sti
jle
aam
mov
bound
in
repz
pop
jno
mov
clc
bound
das
push
popf
int
iret
insb
movsb
mov
aaa
mov
pop
rol
pop
fucomp
pop
orl
mov
dec
push
sbb
push
sub
hlt
mov
or
insb
js
mov
pop
xchg
push
push
ljmp
ds
jmp
push
aam
into
push
mov
jbe
ljmp
sub
mov
out
xor
outsb
outsb
xchg
clc
into
dec
bound
sti
mov
dec
cmp
jae
cmc
cld
sti
push
stos
scas
jbe
mov
not
mov
jae
fcoms
sahf
cli
movsl
daa
sahf
push
pop
inc
lret
add
mov
fisubs
mov
mov
mov
mov
addr16
jae
lret
mov
enter
xor
mov
cld
mov
loope
mov
enter
les
sub
gs
fmul
and
push
or
in
mov
cmp
ret
aam
fistps
mov
or
jb
scas
inc
xchg
mov
mov
cmpl
icebp
mov
aaa
aaa
rcll
add
pushf
and
aaa
flds
mov
pop
mov
jp
dec
xor
idivb
push
loop
ja
test
mov
bound
out
xlat
setns
or
icebp
mov
rcr
pop
ficoml
movsl
fcompl
push
pop
test
push
push
jl
loope
stos
push
jp
out
dec
push
cli
les
popl
js
mov
shlb
leave
les
mov
and
push
iret
idivb
mov
stos
mov
mov
cmp
sahf
repz
fistl
scas
xchg
cs
mov
nop
jo
mov
xchg
ficoms
div
mov
xor
mov
jae
shrl
mov
sbb
sbb
lods
rcr
jae
jae
sub
pop
fs
xchg
ds
sbb
shlb
hlt
dec
jb
jo
orl
inc
stos
jmp
addl
add
aaa
push
mov
mov
call
mov
cmp
jne
xor
jae
jae
pusha
inc
mov
and
mov
addr16
xchg
jg
mov
ja
test
js
inc
xchg
adc
push
jle
into
pushf
inc
inc
pop
push
push
sahf
in
addr16
adc
xchg
dec
daa
fwait
stos
ds
repz
repnz
ret
cmp
jmp
cmpsl
ss
push
std
mov
aas
lock
and
or
in
sti
xchg
jp
mov
lcall
jp
int
xor
popf
test
fcompl
or
ss
cli
sub
fsubl
sbb
adc
loop
cmp
movsl
icebp
fmull
jecxz
stos
mov
int
mov
insl
push
mov
imul
aas
ds
pop
add
xchg
add
in
jecxz
fsubrl
loop
mov
jp
pop
lock
sbb
in
and
icebp
mov
jno
cmc
fstps
pop
ficomps
sub
cmp
iret
int
xchg
adc
cmpsb
gs
aaa
aaa
aaa
mov
inc
sub
pop
je
out
xchg
ds
adc
jecxz
xchg
mov
fld
arpl
and
xor
cmp
iret
test
bound
sub
push
clc
ljmp
cmc
insb
outsb
mov
pop
in
lock
stos
stos
fcomps
and
inc
out
cltd
adcb
cmpsb
sub
out
pop
test
mov
mov
roll
dec
jge
aaa
nop
or
insl
push
jae
jae
mov
loop
ficoms
mov
jae
test
fdecstp
add
mov
jnp
ljmp
std
test
inc
mov
fnstcw
mov
pushf
leave
mov
loopne
mov
enter
fsts
push
aas
fisttpl
enter
adc
fidivs
dec
pop
xchg
aam
in
dec
gs
sahf
jb
adc
mov
pop
orb
repnz
add
fdivl
movsl
pop
addr16
sti
jo
jecxz
adc
lods
sub
aaa
mov
in
jge
pop
es
in
pop
mov
aaa
aaa
aaa
jl
add
movsb
inc
pop
sbb
imull
cmp
push
es
sbb
mov
stc
jmp
mov
xchg
inc
cmp
cld
jg
mov
stos
stos
sub
and
dec
lret
xor
ds
push
clc
pop
push
adc
frstpm(287
jo
push
mov
mov
pop
xchg
push
aas
loopne
fstl
ss
insb
outsb
cli
fdivrl
popa
das
rol
and
daa
jg
or
daa
cmc
cmp
clc
sbbb
fcomi
fdivl
incb
pop
cltd
popf
mov
or
and
mov
outsl
cltd
cmp
fdivl
fistpll
repnz
xlat
cs
cwtl
aad
fdivl
jge
out
pop
and
lock
xor
bound
xchg
cmpl
lock
and
imull
rorb
pop
call
in
xor
jle
sarb
sbb
into
dec
outsl
in
js
jge
in
inc
push
inc
call
push
out
out
lods
or
cmp
test
xor
jbe
push
pop
fwait
lahf
int
lahf
pop
push
cltd
mov
lea
add
mov
shll
mov
mov
push
add
xor
addr16
lods
sbbl
aaa
mov
adc
sbb
lods
xor
fdivrl
cmp
clc
push
push
shll
lret
xor
aam
js
pop
jns
inc
inc
insl
pop
mov
jne
push
bound
lea
mov
xchg
adc
outsb
aas
add
and
enter
lock
aaa
ja
sbb
add
das
sbb
aaa
xchg
in
bound
shll
aaa
aaa
aaa
loope
xor
mov
jge
enter
pusha
enter
push
scas
dec
adcl
add
push
or
cmp
fistpll
cmp
ja
iret
mov
ss
xchg
lahf
push
add
jbe
enter
ss
cmpsl
stc
scas
jbe
loope
or
inc
jae,pt
jae
fisubs
mov
xchg
seto
ss
push
rclb
mov
cmp
addr16
push
icebp
sub
out
adcb
push
xchg
jo
dec
xor
mul
es
je
cmc
mov
inc
cli
jb
pop
int3
jg
into
lcall
clc
and
fcmovnbe
fwait
fwait
fwait
fwait
mov
cmpsb
push
adc
mov
mov
sbb
aas
adc
scas
push
push
iret
jg
hlt
pop
push
adc
clc
inc
clc
jb
add
push
movsl
mov
int
cmp
je
cs
imul
lret
inc
mov
ja
mov
mov
mov
inc
aas
adc
pusha
pushf
test
jo
outsb
outsb
out
jp
shrb
add
mov
adc
outsb
outsb
outsb
fs
inc
dec
sub
idivl
insb
outsb
outsb
jle
movsb
clc
je
xor
dec
lock
push
sbb
fsub
jae
sub
cmpsl
pop
loopne
hlt
out
out
cli
iret
test
mov
stos
pop
loopne
mov
inc
push
loop
js
aaa
aaa
jecxz
jne
or
call
mov
cltd
cltd
je
icebp
mov
mov
xchg
xchg
cmp
xor
or
jbe
xlat
cmp
or
mov
dec
ds
out
ficoml
push
adc
outsb
mov
mov
xor
inc
ret
xor
push
jne
or
xchg
cmc
insb
mov
mov
mov
mov
xchg
clc
jle
clc
xchg
adc
add
sarb
push
shrl
aaa
aaa
push
push
or
repz
stos
push
xchg
aaa
mov
jmp
inc
add
roll
or
cmpsl
sbb
xor
scas
mov
cmpsl
mov
mov
mov
int
int
lcall
pushf
mov
in
iret
int
jne
lret
add
fistl
test
test
mov
stos
pushf
xrelease
stc
lds
aas
fwait
fwait
fwait
jge
scas
fistl
jl
subb
sbb
popf
cmp
inc
iret
shrl
xlat
dec
es
clc
mov
mov
add
pop
imul
sbb
sub
dec
pop
mov
les
fdivr
cli
sub
hlt
xor
or
pop
sbb
pusha
add
hlt
outsb
outsb
clc
fdivrl
and
sub
mov
icebp
insb
out
lea
cmpsb
fcomip
test
cmpsl
xchg
jbe
cltd
insb
or
jle
outsb
jg
iret
cli
sbb
push
dec
adc
clc
ja
xor
sarl
loopne
jae
jae
ret
ja
sbb
inc
lcall
cld
andb
in
clc
xchg
test
or
xchg
ss
aaa
aaa
xchg
int
sub
adc
jo
jge
test
call
inc
pusha
mov
outsb
aas
ljmp
bound
xor
outsb
outsb
imul
pop
outsl
dec
xchg
pop
mov
je
outsb
outsb
outsb
pop
pop
sti
out
pop
aaa
mov
es
loop
outsb
fisttpll
stos
decb
ljmp
sbb
cld
loop
iret
movsb
jno
popf
leave
mov
and
add
add
lods
cmp
cmc
mov
sti
ds
xor
fwait
fwait
fwait
mov
lcall
jmp
pop
mov
fwait
fwait
fwait
pop
push
sbbl
loope
fs
pushf
icebp
or
xor
loope
xor
movsl
loopne
jae
sbb
xchg
mov
or
inc
adc
mov
jl
leave
int3
sbb
mov
sbb
fsubs
or
fwait
fwait
fwait
out
push
pop
adcb
gs
sti
jle
push
fimull
in
push
mov
enter
out
mov
xor
or
xchg
outsb
scas
js
ss
lock
pop
push
cmp
outsb
outsb
rcll
cmc
or
add
outsb
outsb
outsb
lods
mov
jle
mov
cltd
sbb
loop
je
xchg
stos
enter
cmp
repnz
lret
sti
dec
ret
bound
iret
mov
xor
jae
sti
jns
insb
pop
push
lods
xor
test
fistpl
out
jbe
mov
into
sbb
xor
aaa
aaa
aaa
jnp
fnstenv
dec
sub
fimuls
jge
cmpsb
iret
and
or
icebp
adc
sti
pop
cld
sub
mov
fcompl
push
in
fwait
out
adc
data16
jle
cmp
andb
push
mov
jae
jae
dec
shlb
stos
fst
in
mov
iret
in
aas
test
out
bound
cmp
ds
aaa
sbb
bound
mov
adcl
dec
cmp
je
push
lods
push
outsb
outsb
outsb
cli
jg
or
push
fs
imulb
and
mov
jle
clc
xor
and
jbe
jl
sbb
dec
add
arpl
jno
or
sub
adc
test
test
mov
jnp
adc
push
ret
sbb
es
push
int
int
xor
pusha
stc
sbb
ja
ljmp
int
nop
aad
inc
outsb
bound
dec
pop
call
fs
bound
or
cmc
xor
fidivs
icebp
push
jbe
mov
int
mov
out
sub
mov
int
push
lods
clc
scas
clc
adc
fwait
fwait
fwait
mov
ljmp
lock
fwait
fwait
fwait
fwait
hlt
insl
push
inc
les
dec
mov
fldl
aas
cwtl
mov
or
aaa
pop
std
ds
push
mov
mov
test
jbe
ss
aaa
cmp
insb
movsl
pushf
nop
cmp
fdivr
fcompl
outsl
pop
dec
jmp
sub
xor
test
jecxz
movsb
incb
inc
fcomps
cld
jl
and
sbb
cmpsl
sub
inc
dec
xchg
mov
int
int
bound
insl
roll
in
jle
add
int
int
jne
push
pop
mov
idiv
sub
iret
lods
outsl
aad
clc
outsb
outsb
rcrl
xor
outsb
outsb
outsb
clc
pop
jo
push
pop
jmp
adc
cmp
pop
or
movsb
adc
mov
int
dec
xchg
in
xchg
hlt
fstpt
jne
pop
adc
insb
push
pop
inc
mov
clc
js
xchg
cmc
jle
aaa
mov
in
fdivl
add
sub
gs
pushf
lods
stos
xor
adc
cli
sub
fcoml
xor
mov
cmp
cmp
mov
or
xchg
and
jae
jae
jge
cltd
mov
mov
mov
pop
fwait
mov
test
xchg
mov
mov
loop
fdivrl
xor
int
inc
test
xlat
addb
roll
push
repnz
sbb
xchg
jle
cmp
push
jbe
std
adc
xor
shl
data16
jbe
mov
and
push
pop
fcompl
cwtl
pop
test
push
mov
mov
scas
js
lods
mov
fwait
fwait
or
loopne
xchg
mov
popl
sub
daa
jmp
jl
mov
jmp
mov
pop
push
and
and
adc
xchg
inc
fldcw
aaa
aaa
inc
icebp
in
int
into
test
dec
pop
int
add
nop
cmpsb
into
loope
mov
xchg
inc
sub
int
or
je
or
add
int
int
fldt
aaa
adc
in
mov
int
int
in
js
mov
sahf
jge
es
int
and
mov
dec
mov
or
out
jl
mov
mov
std
movsb
push
push
repnz
xchg
stc
jmp
pop
lods
pop
rorb
add
enter
mov
cli
cli
int3
cmpsl
ss
mov
ds
dec
test
sub
jle
sub
sahf
enter
fimuls
jae
jo
imul
xor
iret
idivb
mov
cmp
add
xchg
jo
push
fbld
jae
pop
scas
rorb
pop
cmp
data16
fdivrl
dec
icebp
js
sahf
cmp
cs
cs
mov
mov
sbb
inc
outsl
out
pop
je
push
sub
jle
or
in
inc
loop
mov
fs
cli
and
mov
aas
jae
jae
adc
xchg
cltd
adc
jp
int
iret
int
sbb
cs
mov
dec
aaa
aaa
aaa
mov
pop
nop
inc
push
mov
xchg
pop
push
rorl
or
cmp
iret
push
xor
popf
xchg
adc
je
push
pusha
jl
aas
fldt
aam
in
imul
loope
dec
fs
jge
dec
jl
movsb
in
out
adcl
inc
jnp
fisubs
push
push
jae
jnp
call
movsl
ljmp
jae
out
mov
ss
shrb
pop
xor
or
orb
loopne
cli
fwait
call
xchg
pop
xlat
jp
push
adc
mov
xor
sub
iret
out
in
lock
mov
outsl
lea
loopne
inc
sti
mov
aaa
aaa
mov
mov
sub
xor
jl
aaa
sub
xchg
xchg
sbb
push
inc
lahf
adc
sbb
addr16
fadd
pop
pop
clc
in
dec
leave
mov
mov
movsb
loope
bound
out
xor
in
popa
push
aaa
xor
fstps
add
jle
mov
hlt
or
aaa
mov
lods
pop
mov
sar
mov
iret
out
nop
enter
cmp
loop
jmp
xor
fadds
testl
fnsave
cmp
jl
jle
cltd
sub
or
jl
ds
xorb
aaa
push
push
sbb
pandn
sti
jle
jbe
mov
xchg
fcmove
shlb
jecxz
jae
test
jns
mov
inc
dec
mov
add
adc
mov
sahf
aaa
aaa
aaa
aaa
fidivrl
nop
pop
push
stc
les
lret
repz
fwait
cmp
jbe
jb
push
loop
les
movsl
and
jns
hlt
push
mov
divb
enter
pushf
addb
shlb
shll
shrb
xchg
sub
pop
aad
iret
cmpsb
pop
jb
dec
and
sbb
enter
out
pop
mov
aam
xor
inc
pop
add
int
sbb
adc
insb
xor
int
or
mov
cs
push
push
and
pop
sahf
lods
shr
push
pop
inc
cmp
mov
jae
jnp
xchg
ds
inc
enter
mov
jae
jae
daa
add
xchg
mov
sbb
test
ret
ja
jae
jae
push
popa
push
adc
hlt
dec
test
call
je
add
push
mov
nop
and
dec
jge
iret
and
push
cmp
jae
jae
cwtl
cwtl
mov
dec
out
jle
out
ss
les
imulb
dec
mov
jp
inc
aam
aaa
std
push
pop
enter
jmp
adc
cmp
insb
shlb
addr16
jae
mov
adc
and
adc
add
stos
jge
les
adc
sub
push
push
nop
add
in
jno
mov
mov
xor
push
cld
mov
adc
stos
out
and
out
and
aas
xchg
lock
iret
int
int
js
sbb
nop
inc
cmp
mov
cmp
push
pusha
imul
jmp
inc
scas
rolb
pop
loop
mov
sbb
dec
ret
jae
insl
mov
jo
aam
xlat
aad
xor
mov
dec
push
xor
jecxz
pop
jne
jae
pop
icebp
inc
clc
inc
inc
out
and
loope
sub
int3
mov
ja
fisubs
adc
jmp
adc
out
cli
or
leave
iret
pop
shlb
push
mov
or
rorl
fsubrs
mov
dec
sub
aas
cmp
pop
push
decb
subb
fdiv
cmp
sarb
push
or
in
and
dec
popf
stc
test
lods
xor
loopne
cmc
icebp
jmp
push
xchg
shlb
test
out
adc
sbb
pop
notl
xor
xchg
mov
out
adc
and
mov
push
mov
fisttpl
mov
cwtl
fld
adc
jae
sti
xor
dec
lods
adc
loopne
adc
xchg
andb
jnp
mov
call
mov
mov
pushf
add
xchg
mov
fisttps
jmp
dec
xchg
bound
mov
add
mov
fmuls
jne
jmp
xchg
inc
sahf
cld
int
dec
mov
sub
ds
out
mov
jns
lds
fisttpll
ja
push
cmp
and
push
and
cmp
out
add
fldl
inc
hlt
dec
sbb
ret
sbbl
push
xor
out
gs
jno
nop
movsl
out
pop
lret
or
les
xlat
aam
int
in
popf
enter
sub
test
mov
popf
push
mov
imul
movsb
push
addr16
fmull
hlt
ret
mov
in
adc
jle
outsb
outsb
outsb
mov
push
mov
adcl
das
icebp
insb
outsb
call
rcrl
hlt
pop
out
mov
inc
popf
jle
sub
aam
pop
pop
fdivrl
mov
sbb
out
es
insl
xlat
push
push
inc
mov
mov
ss
test
outsb
outsb
inc
bndldx
iret
incl
or
mov
cmpsl
testb
jp
scas
mov
cmp
mov
jae
fdivrl
fidivs
push
mov
cmp
jae
jae
sub
cmp
aaa
aaa
mov
ss
sbb
sarb
pop
movsl
dec
shll
push
loopne
test
aaa
decb
insl
je
clc
mov
mov
push
xor
repz
popf
push
mov
nop
mov
sub
push
jp
add
mov
lcall
sahf
mov
and
or
shll
mov
dec
cli
fdivrs
shlb
outsb
dec
les
and
or
icebp
fwait
mov
roll
or
out
testb
cmp
mov
pop
jnp
mov
adc
or
inc
jae
aas
or
cmpsb
jno
inc
inc
pop
fcmove
push
outsb
test
aad
fdivl
xor
imul
les
into
insl
xchg
dec
add
lahf
fildl
xorl
stc
movsl
dec
pop
mov
push
or
push
mov
fsubl
fmull
pop
and
out
or
dec
push
outsb
outsb
outsb
into
jge
xchg
dec
mov
dec
out
out
out
fcmovu
mov
push
cmp
outsb
js
push
jb
add
cmpsb
mov
lahf
jo
or
push
jecxz
xchg
sub
mov
andl
mov
mov
jle
cmp
cmpsb
ds
mov
push
and
xchg
mov
daa
icebp
loop
push
daa
out
and
pop
mov
mov
rcll
loope
inc
cmp
add
hlt
add
cli
into
cmp
int
int
add
xchg
add
pushf
popf
stos
aaa
aaa
mov
imul
pop
mov
cmpsl
aas
mov
and
jnp
adc
iret
in
sbb
jmp
jg
sahf
pop
mov
add
aad
mov
lahf
int
mov
es
xor
lret
add
mov
xor
mov
inc
fdivrl
dec
cmpsl
mov
lret
cmp
and
inc
in
xor
add
jg
into
sub
insb
arpl
xor
cmp
sbb
push
fsubl
inc
aas
jbe
enter
lock
xor
mov
adc
loope
lahf
fwait
fwait
dec
sbb
mov
inc
pop
lret
push
pop
scas
jge
lock
ror
jmp
cmp
xchg
jo
jbe
add
fdivl
lahf
xchg
dec
add
xchg
test
or
data16
test
mov
xor
out
add
jecxz
jge
out
clc
jle
pop
pushf
mov
add
inc
clc
push
or
add
push
cli
loopne
push
pusha
jbe
or
sub
dec
mov
push
push
bound
pop
fists
sbb
fs
mov
enter
leave
and
lcall
mov
mov
jae
adc
fdivl
jge
mov
and
insb
dec
loopne
xchg
or
cs
jle
lods
inc
scas
xchg
fstps
add
cwtl
and
or
out
in
or
hlt
sub
jb
push
decl
xlat
divl
data16
mov
cltd
out
mov
jg
xlat
cmc
dec
pop
ss
fstpt
push
jno
fmull
leave
int
push
xor
mov
loope
push
testb
sub
mov
stc
push
fcmovne
out
jns
sub
mov
cmpsb
rolb
mov
fwait
fwait
std
les
xchg
sub
cmp
mov
imul
fmuls
mov
mov
shll
xor
or
out
aad
inc
insb
scas
xor
mov
aas
insb
jecxz
xor
mov
xor
sahf
das
xchg
lret
call
push
or
cmp
mov
push
gs
xorl
fdivrl
sub
or
inc
arpl
push
adc
adc
das
dec
xchg
out
jae
aas
inc
filds
mov
sbb
iretw
out
out
add
es
aam
je
lahf
es
pop
sbb
sub
pop
dec
je
iret
int
add
jae
movsl
xor
adc
xchg
dec
dec
jmp
arpl
add
or
xchg
jae
cmp
jno
inc
pop
adc
add
jae
jae
or
rorl
int
mov
and
jne
das
xorb
lcall
dec
xor
pop
iret
in
xor
mov
sbb
icebp
ret
imul
subb
jp
and
inc
outsb
outsb
outsb
outsb
push
dec
xor
sbb
ds
cmp
jp
xchg
leave
je
clc
jecxz
ffree
int3
or
hlt
mov
mov
int3
sbb
flds
pop
enter
dec
loop
cmp
push
inc
push
dec
fcmovb
ds
test
fbld
xchg
aad
add
or
out
out
mov
push
jecxz
pushl
mov
push
data16
repz
out
or
mov
mov
push
repz
mov
adc
mov
mov
test
mov
nop
xchg
fcmovne
out
cmp
in
xchg
pop
add
int
aas
enter
or
ficoml
cmp
test
mov
mov
dec
icebp
jge
popf
sbbb
popf
or
fcompl
xchg
cli
lret
pop
adc
xor
xchg
ret
mov
rol
sub
push
jl
xchg
fmull
adc
cmp
jno
fcoms
lds
xchg
jbe
or
int
jcxz
add
loop
inc
sub
add
js
pop
mov
out
mov
jae
push
mov
inc
loop
cwtl
xor
mov
jg
outsb
outsb
clc
jge
out
loop
lds
lock
pop
int
push
jle
jl
fsubrs
movsl
pop
icebp
inc
jno
and
pop
inc
test
sbb
sub
fnstsw
sbb
jnp
pop
sub
adc
shll
jl
outsb
or
inc
lcall
loope
xchg
push
test
fwait
fwait
fwait
cmp
push
push
dec
aam
mov
lcall
out
cli
inc
lods
dec
mov
adc
dec
mov
subl
mov
mov
inc
and
ljmp
pusha
or
inc
cmp
mov
icebp
cwtl
inc
jb
cs
add
fwait
fwait
fwait
or
push
test
clc
insb
outsb
xchg
add
dec
in
leave
inc
jbe
fcmovne
test
inc
inc
xchg
imul
add
fwait
fwait
fwait
xchg
inc
and
add
dec
fwait
fwait
fwait
fwait
push
mov
scas
test
sub
lea
mov
sub
movb
or
jecxz
mov
hlt
aaa
sbbb
mov
ds
fwait
jno
inc
jge
xor
mov
cmp
push
fs
out
out
mov
xchg
xlat
cmp
dec
or
or
faddl
pop
mov
aam
cmp
pushf
dec
jmp
fwait
fwait
fwait
pop
xchg
mov
mov
idivb
fisubl
pop
adc
add
pop
movsl
faddl
decl
filds
xchg
stos
xchg
jno
adc
and
fsubs
test
adc
add
jns
iret
out
mov
xor
lock
cmp
inc
outsb
rclb
negl
les
push
outsb
outsb
mov
lcall
fsubrl
ss
aaa
pop
jne
dec
dec
fabs
xor
jnp
out
or
inc
enter
jae
jae
sbb
sub
mov
aaa
aaa
mov
xor
lret
jle
in
mov
or
fwait
fwait
cmp
pop
and
clc
mov
fcoms
fbstp
sbb
mov
rcrl
out
push
lahf
int
mov
movsb
xchg
es
fwait
fcomi
fstl
mov
push
jge
pushf
fwait
cmp
jne
or
xor
sbb
fs
sbb
mov
out
mov
inc
dec
push
sbb
or
jo
sbb
adc
inc
lods
push
sarl
cmpsb
cmp
inc
je
adc
clc
loop
sahf
test
mov
adc
mov
xchg
sub
mov
fisubrs
mov
loop
mov
cmp
inc
lcall
or
test
mov
ja
sub
cli
inc
dec
pop
sbb
fs
mov
push
clc
test
inc
inc
js
outsb
lahf
fmuls
int
test
push
mov
mov
cmp
jecxz
and
mov
jge
mov
sahf
cwtl
cmp
cs
xchg
out
cmp
rorl
jae
xlat
inc
sarb
jne
dec
in
fdivrl
xor
ret
lahf
sub
mov
xor
fwait
test
push
mov
mov
test
mov
rorb
sarl
movsl
mov
mov
cmpsb
sbb
daa
push
out
out
std
aaa
pop
pop
sub
rorb
out
out
sbb
mov
or
inc
shl
out
cmpsb
addr16
imulb
dec
sub
pop
loope
mov
ret
bound
sub
pop
bound
adc
and
call
leave
dec
push
push
jae
adc
imul
pop
sar
ret
shlb
roll
sub
pop
daa
pop
xorb
add
outsb
rorl
lret
push
mov
pop
cld
push
xor
push
or
sbb
fdiv
in
imul
movsb
push
inc
clc
dec
ds
mov
shrl
in
mov
bound
jae
push
imul
jns
fwait
mov
mov
sbb
push
rcr
sarb
fcomps
jae
jnp
cmp
push
test
iret
scas
and
pop
addr16
sti
mov
mov
in
push
mov
inc
mov
mov
je
cmp
ret
push
push
jns
mov
popf
fwait
jl
in
jo
insl
fsubrs
cmc
pop
cmc
clc
cltd
jle
popf
xchg
repnz
aad
outsb
outsb
outsb
outsb
mov
and
inc
cmp
ret
cmp
xlat
and
in
xchg
fildl
cwtl
xchg
mov
mov
ds
fwait
stc
mov
sub
cmp
lods
lahf
mov
int
pop
xchg
lret
popa
cwtl
push
repz
pop
ds
mov
cld
add
cwtl
and
mov
icebp
daa
adc
jae
adc
sbb
add
dec
shlb
rclb
dec
jb
gs
mov
add
mov
add
fnstenv
rcll
hlt
incb
call
inc
pop
scas
shll
lahf
lahf
fs
dec
cmp
addb
fisubs
ficoml
mov
imul
lods
mov
and
sahf
pusha
jmp
mov
jb
mov
lret
sbb
cltd
je
xchg
shrb
inc
pusha
inc
out
or
in
mov
jo
dec
mov
pushf
gs
outsb
jp,pn
movsb
fldenv
outsb
xor
push
shrl
outsb
outsb
scas
xlat
push
daa
xchg
or
outsb
outsb
iret
dec
and
and
push
adc
pop
loop,pn
xor
xchg
iret
out
out
add
sub
add
xchg
loop
push
push
lcall
mov
add
icebp
cwtl
xor
mov
mov
shl
fistpll
mov
push
pop
cmc
pop
push
dec
xchg
aam
cmp
pop
call
fidivrs
ret
out
std
insb
loop
clc
mov
pop
iret
out
popl
sub
gs
sbb
test
insb
outsb
outsb
bound
push
ret
out
mov
ds
cmp
lock
jae
pop
cmpsb
mov
pop
ljmp
jb
jae
inc
mov
out
in
mov
xlat
lcall
outsb
repnz
mov
pop
cld
jp
hlt
add
dec
mov
scas
mov
pop
jnp
mov
repz
mov
insb
insb
xchg
adc
push
push
ss
lods
pop
cmpsb
and
mov
dec
std
sbb
fsin
loope
sahf
and
mov
mov
mov
shl
call
xchg
mov
aaa
mov
les
and
xchg
inc
aaa
aaa
aaa
aaa
sbb
cmpsb
xor
sahf
hlt
aaa
aaa
aaa
aaa
sbb
push
push
jg
movsb
mov
popa
cmp
inc
mov
and
cmp
test
in
jae
stc
cwtl
sbb
mov
std
add
movsb
scas
add
out
or
push
in
push
jae
jnp
pusha
sub
mov
faddl
inc
inc
mov
jnp
std
lods
cli
push
push
outsb
aas
sbb
mov
insl
std
push
out
fiaddl
outsb
outsb
outsb
outsb
lcall
in
sub
outsb
outsb
or
pop
inc
adc
outsb
outsb
outsb
mov
xchg
std
lcall
cmc
or
insb
loopne
add
movsl
hlt
fstps
bswap
lock
xor
in
shlb
lret
call
out
sbb
je
out
ss
or
adc
pop
add
fsubp
neg
lret
outsb
cmpsl
cwtl
lahf
or
push
xchg
pop
icebp
sbb
add
out
fildll
dec
xor
sbb
stos
addr16
push
out
out
push
ja
ljmp
inc
push
and
mov
xchg
xchg
mov
xchg
add
test
mov
mov
movsl
xor
std
mov
dec
sahf
aaa
adc
mov
mov
dec
scas
loop
xor
fstpt
repnz
adc
adc
rol
or
loopne
in
xor
loopne
and
cli
lahf
int
int
jns
movsl
add
pop
sbb
outsb
jge
fadds
pop
dec
inc
in
jb
mov
insb
outsb
sub
imul
lods
daa
in
test
data16
outsb
outsb
pop
cli
stos
jb
testb
sti
dec
jge
outsb
outsb
popf
cmpb
and
or
jae
mov
test
xor
add
jae
jae
xchg
sbb
repnz
jae
fisttpl
mov
mov
jae
jae
cwtl
popf
jb
lods
test
sbb
jae
mov
xchg
mov
push
outsb
outsb
scas
addr16
jp
cmp
iret
test
jge
jp
out
pushf
out
lcall
push
mov
test
fwait
fwait
pop
in
jecxz
mov
test
int
sbb
sbbb
fisttps
lret
push
inc
in
repnz
sbb
icebp
mov
adcb
aas
rorl
xor
and
pop
and
lcall
loope
mov
jle
lahf
sbb
mov
aaa
jno
fwait
fwait
or
das
cmp
popf
xchg
aaa
pop
jge
inc
test
mov
les
cwtl
out
std
adc
les
rol
xlat
xor
arpl
sub
int
and
push
dec
jg
fdivrl
dec
ds
aaa
mov
sahf
leave
mov
js
loope
movsl
aas
insl
xor
idiv
fldenv
mov
push
adc
les
jae
ss
add
mov
lods
jae
jae
push
add
mov
adc
jae
or
push
insl
or
push
jl
xchg
push
cmpsb
enter
mov
jae
adc
das
out
subl
mov
pop
jecxz
icebp
and
shr
or
mov
bnd
xor
xchg
mov
mov
pop
lods
jle
add
lahf
fistl
out
xor
outsb
outsb
outsb
outsb
ror
divl
outsl
lods
add
adc
dec
and
sbbb
jbe
rcrl
stc
xchg
sti
insb
pop
lahf
cmp
adc
int
aas
fwait
jl
and
arpl
lahf
cwtl
adc
cmp
jecxz
mov
mov
mov
dec
mov
jecxz
sub
out
xchg
rcrb
cmp
mov
loop
sbb
cld
insb
outsb
mov
xchg
jnp
sbb
or
push
xor
cli
rcrl
xchg
fcom
mov
sub
movsl
shlb
inc
mov
pop
movsl
xor
dec
pop
ds
cmp
rclb
rol
inc
adc
add
cmp
inc
pop
imul
mov
cmp
ja
push
es
add
mov
das
cs
cmp
xor
imul
pop
lea
es
mov
mov
ds
aaa
push
test
hlt
jbe
insb
outsb
outsb
clc
dec
aaa
sub
stos
repz
insl
fucomi
daa
lock
push
xorb
outsb
outsb
aas
fwait
cmp
jle
aaa
cmp
xchg
int
idivb
bound
mov
clc
dec
push
mov
jl
sti
adc
jae
jge
clc
fsub
jns
lock
add
insb
out
push
sub
jns
lcall
cmp
and
jp
outsb
outsb
outsb
outsb
mov
in
ja
xor
mov
pop
fisubs
mov
add
call
data16
lret
iret
jbe
lahf
imul
sahf
mov
push
lods
add
jle
push
cmp
popa
jle
and
mov
inc
sti
in
mov
das
fcompl
testb
fisttps
lret
fmul
xor
and
pop
mov
xchg
xchg
gs
sbb
imulb
orb
jns
test
mov
jno
mov
sub
jae
shrb
mov
addr16
mov
lret
es
jne
mov
fwait
fwait
popf
xchg
dec
push
dec
loope
sbb
cld
mov
push
or
gs
mov
mov
cld
dec
jp
mov
mov
out
mov
rorb
fildl
pusha
insb
mov
push
lcall
popaw
or
scas
hlt
mov
int
dec
and
popa
rorl
mov
subb
push
push
outsb
mov
into
xor
loope
sub
jns
clc
enter
ljmp
icebp
insb
outsb
fbld
test
xchg
sbb
shlb
aas
fwait
fwait
fwait
sub
or
add
xchg
jg
insb
outsb
outsb
mov
int3
jge
push
fidivs
fdivl
xor
cmp
vmovlpd
fsubrs
jecxz
mov
in
jae
adc
pop
mov
dec
push
adc
fwait
fwait
fwait
fwait
mov
mov
stos
ljmp
or
outsb
cltd
sub
fcompl
xchg
inc
cmp
out
jl
dec
sahf
in
nopl
aaa
loope
adcb
xchg
mov
dec
out
jge
cmp
xchg
lret
es
dec
imul
add
fwait
dec
aaa
aaa
jge
jbe
and
imul
aaa
aaa
icebp
mov
inc
pushl
icebp
repz
outsb
out
cli
and
push
sub
jmp
pop
cmc
push
in
mov
call
out
mov
stos
dec
fisubs
cmp
xchg
or
insb
push
push
xchg
pop
cmp
test
stc
into
shl
mov
in
fnsave
inc
mov
mov
lret
inc
mov
loop
cld
ret
pop
jecxz
ret
gs
cld
testb
scas
iret
idivb
adc
movsl
pop
pop
jge
pop
aam
xlat
cltd
aas
or
std
loope
cmpb
sub
cmpsb
mov
nop
lcall
fisttpll
push
or
jne
push
sbb
aaa
aaa
aaa
dec
dec
xchg
outsb
xchg
dec
xlat
mov
cmp
fdivrs
aaa
in
xchg
clc
pop
inc
lods
xor
fisttpl
repz
mov
and
or
fidivs
cmp
jecxz
xor
loopne
dec
sarl
mov
xchg
scas
mov
push
mov
test
push
clc
and
pop
mov
sahf
popa
sub
xchg
stos
sarb
cmp
dec
imul
clc
out
push
in
lods
iret
negb
mov
and
int3
mov
js
mov
dec
in
or
inc
jmp
ss
mov
mov
in
jae
sti
pop
std
mov
shlb
lods
test
das
inc
lahf
in
testb
mov
or
movsb
jecxz
and
xchg
jl
jl
aas
or
mov
idivb
pop
js
push
insl
fstpt
out
jle
addr16
loop
or
incl
sbb
cli
dec
or
mov
outsb
ds
out
cmp
dec
imul
pop
and
stos
adc
push
mov
mov
mov
sub
insl
jmp
inc
sub
out
mov
pop
cld
cmp
lret
movl
fdivr
decb
adc
rol
mov
mov
sti
jmp
cmpb
rcr
add
mov
js
iret
xor
mov
cmc
leave
fwait
fwait
fwait
fwait
xchg
out
addr16
f2xm1
jb
outsb
outsb
outsb
lahf
cmp
adc
sub
pop
or
insb
or
mov
and
jecxz
inc
mov
mov
and
and
mov
mov
sbb
sbb
sbb
fdiv
mov
sub
clc
enter
mov
xchg
xor
in
psubsw
in
insb
pop
imul
insb
mov
or
orb
jp
cmp
sbb
mov
fcmovne
rorb
scas
inc
push
movb
inc
cmp
mov
xor
jbe
adc
outsl
cli
je
imul
push
xor
and
clc
mov
bound
mov
outsb
outsb
outsb
lock
add
sub
adc
imul
lahf
stos
or
jns
mov
int
int
out
lock
decb
fdivs
pop
mov
movl
test
leave
push
mov
jge
jmp
fdivrl
add
fsubr
jge
fidivl
jae
xor
fadds
cmpsl
and
add
jae
mov
adc
pop
xchg
and
mov
subb
popf
jle
add
rorb
cmp
aaa
aaa
aaa
xchg
push
mov
test
enter
and
dec
jl
lds
cmp
or
pusha
sar
inc
int
hlt
jb
cld
insb
outsb
add
cmp
mov
fildl
fdivrl
lods
dec
int3
aam
mov
add
fiaddl
sahf
push
or
xor
mov
test
je
or
xorl
mov
sbb
insb
pop
jae
imul
mov
sub
mov
add
nop
icebp
fisubrl
mov
xchg
jle
in
ds
sti
mov
std
sbb
subl
sub
mov
int
mov
add
sub
sbb
popa
sbb
aaa
aaa
aaa
xchg
aam
in
in
push
and
ds
clc
mov
insb
test
jae
sbb
jo
cwtl
ja
mov
jae
xor
andb
test
iret
in
and
rcr
scas
sbb
fcoml
xor
dec
jg
add
shl
stc
std
mov
lcall
mov
mov
or
pop
int
xchg
jo
in
ljmp
mov
mov
int
stos
xor
cmp
adc
movsl
sub
pushf
stos
jle
aaa
fwait
jp
sbb
sub
pushf
mov
add
fwait
fwait
loop
dec
mov
jl
mov
jp
xchg
push
jbe
test
arpl
loop
mov
jle
in
call
mov
pop
in
rcrb
cmp
push
fwait
fwait
or
rclb
movsb
sbb
fmull
cltd
imul
jbe
popa
cwtl
out
push
int
in
mov
movsl
popf
leave
or
add
mov
iret
les
push
test
lahf
int
into
addr16
mov
cli
mov
sbb
mov
xorl
aaa
aas
cmp
sbb
or
fcoml
aaa
push
adc
xchg
lds
dec
cld
push
jne
hlt
xchg
pop
push
cmp
sbb
inc
jbe
mov
das
fadd
mov
fisttpl
clc
inc
hlt
cld
out
adcb
mov
int
jno
std
lds
outsl
out
mov
adc
fstl
movsl
pushf
fcmovne
inc
pop
movsl
and
mov
js
int
xlat
out
jnp
mov
sbb
jbe
pop
out
cmp
ja
dec
ret
or
cmpsl
cmp
fcomp
jle
xor
mov
es
rclb
sti
imul
loopne
mov
xlat
aam
addr16
adc
mov
xor
pop
push
js
loope
jle
ljmp
jbe
push
gs
cmp
mov
rcrl
hlt
mov
imul
xchg
ret
xor
mov
scas
cmp
push
push
aam
cmp
outsb
outsb
outsb
jecxz
divb
mov
movsl
dec
mov
or
jp
push
addr16
pop
in
dec
cmp
es
out
scas
mov
cmp
clc
push
les
dec
cmp
fdiv
mov
mov
cmp
mov
mov
add
loope
mov
xor
or
ds
cld
insb
rclb
cmpsl
xchg
cltd
testb
outsb
cmp
xchg
adc
cmp
fs
int
loope
fdivs
fnstcw
int
xor
shlb
mov
int
int
cmpsb
scas
std
ficompl
sub
xor
xchg
jg
fdivrl
pop
jb
mov
aad
jg
es
repz
into
dec
push
mov
addr16
xchg
cmp
in
inc
call
sub
xor
ss
fcoms
and
cmpsb
mov
jae
inc
addr16
mov
mov
inc
ret
mov
loopne
sbb
loopne
test
movsl
adcb
mov
in
or
sbb
int
pushf
pushf
mov
in
cwtl
fildl
dec
call
xchg
dec
out
fwait
fwait
fwait
fwait
lea
mov
or
das
jl
scas
dec
fdivs
out
and
cli
fdivrl
shr
push
popa
mov
mov
add
pusha
std
push
cmc
mov
js
aad
mov
and
adcb
jne
into
negl
aad
sbb
xor
jnp
pop
lods
das
inc
mov
aaa
aaa
mov
clc
leave
aam
and
jo
call
or
jmp
dec
cld
je
xchg
push
je
sbb
mov
pop
push
or
jae
xor
aad
enter
xor
jae
rorb
sti
xchg
jle
xor
cmp
sbb
xor
dec
les
mov
hlt
stos
cwtl
and
mov
xchg
sub
push
mov
push
shll
mov
sahf
sbb
arpl
cmc
sbb
adcb
roll
lods
sub
add
jae
pushf
mov
mov
sbb
dec
out
idivb
pushf
in
int
enter
out
out
xor
test
xchg
sti
push
jge
out
cmp
enter
mov
test
mov
cmp
cmp
pushf
ds
pop
sub
push
outsb
jo
test
mov
incl
sub
inc
and
add
addr16
fnstcw
mov
mov
out
inc
and
sub
out
and
es
cld
sub
mov
jecxz
pop
pop
movsl
lods
pop
rolb
sub
jle
out
cmp
js
int
int
xchg
xchg
orb
sarb
sbb
loope
sub
aaa
and
push
jno
je
pop
push
adc
das
ds
fdiv
mov
adcb
divb
mov
mov
cwtl
jle
test
dec
negb
inc
mov
mov
push
out
out
xchg
lcall
loop
rorb
out
out
cmpsb
pop
jns
repz
add
out
cmp
sarl
test
mov
nop
outsb
adc
lret
jae
js
pop
mov
ds
sbb
aaa
aaa
mov
jbe
arpl
xor
jns
pop
movsb
mov
aaa
aaa
xchg
aam
ja
cltd
sub
ret
fldcw
ljmp
scas
jae
xchg
jmp
fcomp
jp
jae
jae
js
aad
push
out
cs
jae
jae
data16
dec
jno
int3
aas
add
int3
int
int
icebp
and
inc
inc
lret
cmp
sub
xchg
in
and
mov
and
jl
ds
mov
aaa
aaa
aaa
mov
ret
fcompl
stos
shr
mov
int3
push
fistps
lahf
cmp
stos
mov
arpl
jp
shlb
out
outsb
scas
js
int3
mov
mov
outsb
outsb
fistl
je
xchg
or
jo
into
adc
sub
fucomi
add
fs
iret
repnz
fwait
fwait
cld
xor
xchg
sahf
sti
cmp
sbb
pop
mov
fwait
and
sti
js
xchg
add
sti
sahf
fwait
clc
push
and
out
pushf
in
lcall
mov
jne
jmp
test
add
mov
scas
push
lretw
mov
lods
sbbl
and
mov
es
clc
xlat
and
and
shlb
jmp
imul
xor
inc
sbbl
fldt
ljmp
xchg
into
imul
lahf
fwait
jp
sbb
cmpsb
dec
bnd
sbb
aaa
aas
ds
nop
dec
xchg
jb
lcall
add
movsl
orb
cld
fldl
push
data16
and
and
mov
sbb
outsb
outsb
mov
push
fsts
loopne
mov
mov
adc
xchg
popa
aas
push
int
mov
inc
mov
xchg
scas
push
int
int
inc
sbb
lds
cmp
aaa
mov
aad
aad
xor
addr16
nop
sbb
aaa
jle
sahf
cltd
jne
jo
les
sarb
mov
xor
cmc
pop
sub
cmp
cmp
loop
cmpsb
mov
cwtl
inc
clc
mov
int3
pusha
in
das
sub
jge
adc
shlb
mov
sahf
dec
notb
mov
cmpsb
pop
aas
adc
adc
icebp
mov
flds
sahf
sbb
ss
cmp
sbb
cmp
pop
sbb
int
in
dec
lcall
cmp
cmp
xchg
insl
addl
dec
in
dec
bound
fdivrl
mov
inc
xor
lods
int
mov
repz
jb
mov
aaa
mov
int
mov
in
in
adc
aaa
aaa
adc
push
and
cwtl
and
adc
pop
iret
xor
sbb
enter
clc
adc
and
jnp
imul
jbe
out
or
dec
cmp
push
push
dec
arpl
xchg
mov
sub
adc
out
dec
cld
xor
fwait
jp
mov
int
das
mov
mov
dec
scas
mov
lret
int
sbb
inc
sbb
mov
loope
outsb
outsb
outsb
outsb
js
gs
add
xor
jl
cli
xchg
fildl
mov
loopne
clc
push
fnstenv
xlat
andb
push
out
mov
stos
cwtl
rcr
xor
xor
movsl
lock
pop
jne
inc
fisubl
pop
jecxz
jae
das
dec
xor
jmp
divb
rcrb
in
sahf
out
jae
iret
out
inc
cwtl
inc
test
mov
test
mov
jae
cmp
sub
or
jge
xor
jbe
cmp
lcall
and
test
inc
sub
adc
hlt
xchg
sahf
ret
push
lahf
mov
mov
mov
pop
sub
outsb
dec
mov
add
test
cmc
sub
dec
fs
mov
cwtl
jge
fidivs
gs
stos
ja
jle
adc
push
insb
push
mov
adc
jae
call
lret
std
pop
outsl
imul
jae
stc
fiadds
ja
mov
in
xchg
mov
test
jo
jo
fcmovnbe
in
rcll
psraw
inc
lahf
adc
lods
into
ljmp
jae
jae
add
data16
pop
push
mov
addr16
or
stc
xchg
xor
adc
iret
mov
lds
outsb
jg
sbb
mov
in
xor
or
push
sub
outsl
dec
jl
ja
mov
out
lock
rcl
cmp
jae
iret
or
mov
outsb
xor
mov
les
xor
fwait
clc
sub
jae
ds
call
jge
inc
inc
ljmp
fistpl
inc
mov
scas
mov
mov
fwait
testb
push
mov
cli
dec
cli
lds
ficoml
cmc
mov
mov
les
loope
or
mov
out
push
adc
sub
xchg
aas
test
lahf
mov
mov
push
fstps
lahf
sub
nop
dec
shlb
jae
dec
imul
jne
idivb
push
repz
loope
lcall
lahf
iret
and
add
jae
call
mov
push
fcompl
mov
mov
jmp
hlt
mov
into
js
jge
ds
shll
or
imul
pop
adc
mov
call
outsb
mov
xchg
jl
ret
and
sbb
mov
sti
sbb
jb
idivl
dec
int3
cmp
call
pop
fnsave
daa
mov
adc
aaa
xchg
loop
mov
xor
xor
lds
cmp
inc
clc
pop
loope
imul
adc
inc
dec
pop
mov
rorb
pop
icebp
jge
cmpl
shl
gs
xor
leave
sub
icebp
adc
add
cs
out
cld
cmp
popa
push
dec
inc
es
ja
pushf
mov
jnp
jge
filds
aaa
xor
test
sarb
aaa
aaa
add
ret
jae
orb
popa
movsl
js
mov
loope
movsb
and
outsb
lahf
fucomi
test
ss
nop
scas
mov
xor
push
insb
outsb
outsb
outsb
arpl
bound
mov
out
notb
mov
ret
out
out
std
test
leave
pop
nop
inc
push
mov
mov
ret
push
iret
out
mov
mov
sbb
aaa
mov
xor
xchg
aaa
mov
sbb
ss
aaa
out
mov
push
mov
mov
addr16
adc
push
adc
sub
sbb
ss
adc
jne
add
inc
pop
imul
mov
inc
popa
test
add
iret
adc
imul
adc
fsubr
cmc
divb
sbb
cltd
pop
test
out
shr
adc
hlt
fisttpll
cld
dec
inc
fisttpl
sbb
out
push
xchg
pop
cmp
pop
mov
sbb
out
jge
push
or
mov
fidivl
mov
test
mov
adc
lret
insb
cmc
inc
insb
mov
and
inc
lret
ret
mul
es
aaa
pop
pop
dec
inc
arpl
and
add
aaa
pop
int
pop
lea
dec
pop
cs
aaa
jno
ret
inc
ds
pop
aaa
mov
cli
minps
inc
dec
inc
mov
push
sub
mov
andl
jo
nop
sbb
les
test
xchg
or
fucomip
adc
loopne
mov
push
push
out
sub
or
iret
cld
adc
adcb
iret
dec
mov
iret
xor
sbb
pop
bound
fsubl
incb
mov
in
sub
mov
push
xor
popf
mov
int
icebp
mov
mov
sub
clc
out
insl
jb
pop
jl
inc
test
xor
push
call
xchg
add
bnd
jae
sti
dec
dec
mov
push
in
push
movsb
adcb
addr16
sarb
mov
push
cli
rclb
in
out
xchg
cmp
adc
jae
jae
xchg
pop
inc
dec
xchg
test
mov
mov
addr16
pop
loopne
inc
addr16
or
mov
insb
push
mov
loope
or
xor
fwait
fwait
mov
push
stos
clc
pop
div
xchg
popa
lods
fimull
fwait
fwait
fwait
jno
and
or
cwtl
add
pop
notb
ss
loop
mov
lahf
push
sbb
fwait
fwait
or
mov
data16
icebp
bnd
lds
fwait
fwait
fwait
fwait
jl,pn
ss
jecxz
addl
jge
lahf
fwait
into
pop
js
sbb
out
divb
and
adc
and
mov
pop
insl
cmp
jo
adc
clc
mov
jns
and
pop
xor
jns
shlb
cmp
fsubrl
cmp
mov
cmp
clc
fcompl
push
jns
data16
push
int
adc
insb
orl
int
xchg
xchg
andl
jae
sti
or
mov
sbb
push
xor
ljmp
pusha
mov
or
inc
jecxz
addr16
adc
aaa
aaa
mov
dec
ds
sub
cmpsb
push
sub
jle
aaa
mov
subl
aam
sub
popf
fwait
loopne
mov
fcompl
dec
mov
adc
mov
inc
ljmp
icebp
cmpsb
fidivrl
sbb
sti
sbb
add
mov
xor
jbe
sub
ja
sahf
adc
dec
idivl
jae
push
add
fcmovnu
jecxz
xor
cmp
sub
es
xchg
stos
pop
ljmp
dec
adc
ljmp
int
xor
cmpsb
push
js
lret
rol
pop
and
mov
int
mov
inc
adc
xchg
or
ss
aaa
out
ss
out
leave
dec
mov
jae
add
cs
clc
xor
fcmovu
idivb
fsubrp
mov
out
xchg
dec
scas
pop
or
out
insb
xchg
cwtl
lods
incb
lea
iret
int
in
mov
loop
stc
fs
jno
add
leave
add
sub
std
add
dec
adc
mov
test
push
sub
out
cmpb
push
outsb
dec
pop
inc
xor
fcmovne
jno
jecxz
data16
pop
cmp
and
add
fwait
jae
ds
nop
cmpsl
sti
mov
std
outsb
outsb
outsb
outsb
add
fwait
dec
ret
dec
icebp
or
or
jge
bound
jns
pop
hlt
xor
pushf
imull
push
scas
out
out
clc
dec
je
mov
mov
insb
out
out
loope
loop
push
outsb
hlt
ret
inc
fcmovnu
mov
int
int
outsb
adc
xchg
addr16
lods
je
loopne
int
int
inc
in
pop
mov
in
or
orb
mov
sub
negb
jae
xlat
out
add
ds
mov
test
mov
addr16
je
and
out
and
loopne
cld
sahf
stc
mov
xor
jge
pop
jbe
pop
xor
pop
adc
out
shlb
aaa
aaa
aaa
fldcw
and
mov
nop
mov
icebp
hlt
push
addr16
adc
sbb
insl
clc
sub
cli
jo
insl
cs
sub
pop
cmpsl
mov
inc
std
xor
mov
cmpsb
inc
out
add
fsts
push
lret
clc
bound
test
lret
movsb
in
pop
adcb
inc
bound
jne
lock
pop
or
stos
cmp
lret
in
add
jle
call
fimuls
aaa
jno
mov
rclb
add
inc
rcr
call
xchg
push
xchg
mov
or
push
addr16
mov
shll
pop
in
and
mov
loopne
fidivs
lock
clc
adc
repnz
mov
sbb
xchg
jae
sti
mov
mov
in
inc
inc
cs
out
jge
aaa
mov
jecxz
je
dec
or
out
divl
cld
pop
and
ss
das
cmp
cmp
fcmovnb
cmp
mov
xor
shlb
std
insb
aas
fwait
lcall
mov
sti
inc
jge
add
fcmovne
mov
mov
movsl
clc
repnz
idivl
repz
movb
rorb
or
mov
scas
movntps
mov
push
pop
int3
mov
cmpsb
cmp
bound
and
pop
ror
out
xchg
aam
imul
jne
mov
jle
dec
cld
test
scas
orl
sti
fdivl
inc
cltd
xchg
mov
xchg
out
lahf
xchg
lahf
sub
jle
push
xor
testl
lods
lds
shr
js
vcvttpd2dq
out
outsl
mov
xchg
test
iret
out
mov
mov
in
adc
mov
pop
and
jmp
mov
cltd
fmulp
mov
or
fadd
and
fmul
lods
xor
sahf
mov
xchg
roll
jl
pushf
outsb
jbe
or
outsb
out
xchg
ljmp
cmp
and
insb
mov
mov
fwait
cmp
int3
aaa
test
int
ds
fwait
fwait
rcrl
lret
push
sub
les
fwait
cmp
jmp
jo
cmpsb
jg
gs
loope
push
test
sti
ljmp
in
fstpt
sahf
jae
dec
cmp
jge
push
adc
jecxz
jae
pop
mov
and
int3
lock
sbb
ss
fcompl
push
les
ret
mov
pop
cli
je
rcll
xchg
mov
sub
out
mov
adc
sbb
and
push
cmpsb
push
les
les
cmp
jl
std
aaa
aaa
aaa
mov
clc
les
xor
js
or
xor
aaa
aaa
aaa
sub
xchg
insb
push
pop
xchg
in
mov
stos
mov
add
pop
xor
sbb
xchg
jb
mov
in
xchg
pop
jno
add
sbb
mov
or
cmp
gs
outsb
es
repnz
dec
dec
pop
loop
cmpsb
fcmovu
add
aaa
fldl
sub
xchg
popa
adc
out
mov
sahf
in
neg
or
xchg
inc
lods
jb
in
dec
jp
iret
jle
and
mov
nop
lret
add
fmull
cli
sub
push
and
xchg
and
xchg
fbld
cltd
out
in
push
imul
fcoms
out
jg
add
sub
outsb
pop
pop
iret
mov
popf
scas
jbe
mov
pop
jp
outsb
pop
inc
arpl
mov
outsb
outsb
mov
sbb
sbb
incb
inc
cwtl
rcr
sbb
mov
outsb
outsb
cs
xor
test
repnz
adc
cmp
out
inc
jmp
pop
adc
sub
pop
or
ror
push
inc
jmp
or
insb
cmp
pop
in
rcrb
xlat
mov
f2xm1
mov
inc
mov
inc
stc
jne
iret
in
xor
ljmp
fdiv
cmp
mov
cmpsb
lea
xchg
push
sbb
cmpsl
in
loop
cwtl
cli
dec
or
adcb
mov
in
aas
xor
addr16
mov
lahf
shlb
insb
inc
arpl
fwait
push
sbb
js
push
lea
hlt
jnp
outsb
in
test
xchg
push
add
pop
shlb
xchg
pop
pop
inc
movsl
mov
loope
push
pop
mov
ljmp
xlat
jae
insb
mov
lret
stos
push
fwait
or
lods
jbe
iret
aam
pop
daa
xchg
jbe
ds
fwait
or
and
inc
imul
notb
ljmp
pop
push
lret
jae
jae
cli
stos
inc
jp
add
lock
push
shrl
loopne
jae
fnstsw
push
sbbl
out
sbb
xchg
je
aam
push
sarb
out
out
testb
cs
mov
xor
in
mov
fsubl
jmp
jb
jae
jge
sub
pop
xchg
popf
fwait
fwait
mov
cld
in
popf
cmp
jecxz
jle
pushf
insb
jb
mov
and
mov
test
push
mov
xchg
sbb
cmc
icebp
mov
shlb
loope
pop
and
sub
xchg
test
dec
in
mov
mov
mov
cmp
push
sub
mov
jecxz
xchg
cmp
repz
mov
fsubr
pop
cmc
cld
add
test
icebp
or
aam
loop
out
repz
pop
or
adc
sarl
fwait
fwait
fwait
adc
imul
and
xor
and
outsb
insb
js
arpl
out
out
and
jmp
aas
fwait
outsb
outsb
outsb
mov
pop
inc
repnz
mov
outsb
out
mov
cmpsl
rcrl
fdivr
add
icebp
and
ss
loopne
das
int
inc
xchg
fsubr
scas
mov
fwait
mov
dec
cmp
push
or
lahf
fwait
xor
push
mov
fwait
popf
inc
add
cmp
icebp
ljmp
js
push
dec
mov
sar
mov
or
lcall
repz
repnz
lret
adc
push
jae
mov
int
add
xchg
cmp
sti
jge
sahf
clc
dec
xor
or
sbb
mov
je
add
test
push
mov
mov
inc
iret
into
mov
cs
out
jmp
insb
es
push
movsl
mov
fsubs
data16
jae
loop
decb
sub
jae
jae
push
dec
pop
dec
movsb
insb
aam
jb
fisttpll
cmp
inc
push
mov
ucomiss
cmp
add
lret
xchg
jecxz
sbb
rep
enter
icebp
daa
in
xor
out
jnp
xchg
push
dec
les
subl
out
or
jge
js
std
gs
mov
lock
cli
jmp
mov
mov
in
stos
nop
pusha
jp
xchg
in
sar
mov
jae
roll
mov
inc
std
psubusw
add
jnp
xor
mov
adc
add
movsl
ljmp
sub
add
clc
fdivr
ds
aaa
cmpsl
loop
pop
add
fimull
roll
jae
xchg
arpl
lock
cmpsl
in
sbb
jae
jae
dec
cmp
decb
mov
add
mov
inc
ja
loopne
pop
out
outsl
in
pop
jo
mov
xchg
adc
dec
push
pop
stos
daa
sbb
fs
sub
mov
jmp
mov
ret
pusha
jbe
outsb
outsb
cs
xchg
loop
bound
sub
mov
cmpsl
mov
je
cld
insb
sub
lret
add
fstps
and
cmpsb
cmpsb
hlt
out
push
insb
in
pop
ds
and
push
hlt
out
out
jle
mov
push
dec
xchg
sbb
out
out
add
out
adc
out
lds
and
or
cs
or
mov
inc
mov
jbe
decl
mov
jo
push
movsl
imul
in
loopne
nop
fildl
mov
jg
adc
jge
aas
fwait
or
mov
mov
xor
xchg
iret
divb
or
or
and
iret
int
rolb
jne
add
icebp
adc
std
lcall
cli
movsb
mov
adc
mov
imul
sbb
dec
sti
popa
push
cmc
insb
mov
je
adc
cmpsb
enter
stc
mov
test
iret
out
lea
or
mov
ds
mov
xor
rcrl
cmp
popf
fwait
fwait
fwait
fwait
jg
and
dec
sbb
add
sahf
add
rcr
xor
movsb
jo
inc
or
sti
lret
push
jno
clc
or
jg
roll
jge
jbe
push
test
pop
inc
addr16
push
stc
loop
rcl
hlt
fimull
pop
int
xlat
jecxz
pop
mov
mov
ss
dec
xchg
pop
gs
sbb
cmpb
sub
mov
mov
add
sub
shl
mov
std
repnz
and
cwtl
idivb
xor
jno
adc
xchg
mov
ret
int
stos
ds
daa
dec
xchg
in
hlt
mov
call
sub
mov
add
mov
mov
dec
jbe
fldt
jge
mov
insb
addr16
xor
fwait
fwait
fwait
pop
cmp
mov
incl
outsb
dec
and
data16
scas
into
arpl
or
cli
stos
icebp
fmul
in
xor
fldenv
je
inc
pop
cmc
pop
into
pusha
loopne
clc
mov
int
inc
ljmp
mov
popf
in
int
int
mov
aad
cmpsb
cmp
and
insl
and
push
mov
lret
adc
out
mov
mov
loopne
ds
clc
jo
xorb
iret
add
imul
mov
pop
xchg
dec
psubsb
add
outsb
outsb
aas
fwait
mov
aad
push
or
in
jl
xchg
mov
cmp
cmc
mov
scas
es
add
std
test
mov
inc
insl
test
outsb
aas
fistpl
shll
sbb
lret
cltd
loopne
adc
xchg
cmc
mov
sbb
pop
or
add
adc
mov
or
mov
stc
icebp
cltd
rclb
lds
mov
or
faddl
jb
sub
shll
insb
cltd
int3
mov
or
xchg
jmp
inc
sbb
into
adc
cmp
aam
in
mov
pop
push
out
out
sbb
test
add
sbb
lock
loope
dec
xchg
push
pop
jne
cmp
fdiv
adc
push
ret
jo
mov
mov
jns
mov
nop
sbb
outsb
pop
jmp
xor
and
xchg
pop
outsb
outsb
outsb
outsb
sahf
notb
outsl
out
mov
lods
subb
es
jecxz
push
and
sub
or
xchg
test
mov
mov
or
ror
sahf
push
lods
in
ret
or
dec
loopne
xchg
data16
repnz
movsb
cmp
movsb
adc
adc
sbb
nop
out
insl
cld
mov
ror
pusha
adc
fcmovne
mov
test
pop
insl
shlb
mov
mov
sbb
cmp
mov
push
loop
lret
iret
in
inc
xor
or
adc
rcrl
out
out
cmc
push
test
mov
mov
movsl
jecxz
xlat
dec
pop
or
xchg
mov
pop
add
shrl
inc
add
add
in
std
insb
outsb
andb
cmp
mov
push
jnp
mov
lock
fucom
out
mov
movsb
pop
add
xchg
aam
pushf
addr16
out
sub
sarl
les
ficompl
xchg
jne
fwait
fwait
mov
jae
push
mov
cmp
ds
or
dec
iret
xchg
mov
xlat
outsl
insb
pop
sbb
sarl
inc
fwait
aaa
int
gs
lret
fwait
bound
dec
stos
or
jge
sub
xchg
fdivrl
movsb
popl
data16
dec
inc
shrb
add
cmp
cmp
and
xchg
dec
gs
daa
loope
mov
nop
divb
cwtl
outsb
mov
lods
movsl
in
test
fcmovne
out
stos
jbe
popf
lret
adc
mov
aas
fwait
pop
push
sub
insb
call
mov
and
add
cli
fnstcw
mov
cmpsb
inc
mov
mov
in
inc
cmp
xchg
push
adc
je
pop
neg
jle
out
add
add
sti
insb
push
sarl
xchg
push
lcall
jo
cmp
popa
and
and
jnp
pop
outsb
or
daa
aam
mov
jo
dec
out
repnz
lret
mov
mov
fwait
mov
outsb
jae
out
xor
fisubl
leave
popa
mov
jp
cld
nopl
int
jae
mov
adc
inc
fnstsw
push
vunpckhpd
mov
adc
mov
aas
dec
push
inc
insb
add
xchg
outsl
xchg
mov
fldt
outsl
pop
push
push
mov
sahf
lock
inc
dec
daa
xchg
sti
fcompl
insl
ja
fsincos
sbb
sbb
scas
lahf
in
out
xchg
or
cmp
xor
pop
add
out
sbb
in
int3
jl
scas
sub
push
lahf
popa
jge
adc
pop
and
negb
aas
fwait
fwait
jbe
inc
imulb
xchg
mov
outsb
outsb
sub
addr16
repnz
mov
mov
shll
lock
sti
mov
popa
ficomps
adc
xchg
jle
rcr
add
mov
loope
sbb
ss
xor
out
out
mov
sti
xchg
stc
mov
rcrb
out
stos
jno
or
fcmovnbe
xor
iret
jecxz
enter
jae
testl
push
adc
or
pop
push
fwait
or
repnz
and
lods
mov
fwait
fwait
cmp
into
addb
xorl
jl
pop
pop
sbb
xor
scas
sahf
push
mov
js
aaa
aaa
push
add
stos
shlb
ret
pop
adc
nop
jl
mov
jae
jae
stc
jmp
cwtl
lods
pop
aam
jae
inc
lds
imul
jle
inc
cwtl
mov
xor
dec
mov
mov
ds
scas
subl
addr16
pusha
pusha
in
ds
insb
aas
fstpt
xor
dec
push
sbb
mov
adc
mul
data16
inc
in
xchg
push
enter
pushf
lahf
int
or
lret
ret
incb
testb
fsubl
ret
dec
fdivrs
daa
in
dec
jmp
sub
mov
int
out
shlb
aad
imul
clc
loopne
fwait
fwait
fwait
or
pop
outsl
imul
fwait
jae
xor
lahf
fwait
icebp
movsb
sarb
inc
mov
aas
inc
fistpll
push
xor
jge
mov
mov
divl
inc
in
lods
push
sbb
pop
cmp
or
insl
push
jo
mov
pop
mov
xchg
pop
mov
leave
cli
insb
push
adc
cmc
pop
fnstcw
xor
lcall
jns
xor
fimuls
stc
adc
sbb
lahf
pop
mov
mov
in
ss
ret
and
popf
scas
movb
js
insb
loope
aam
lea
jo
outsb
outsb
dec
fcom
mov
pop
mov
hlt
mov
in
cmp
dec
mov
fcompl
inc
dec
sbb
push
push
test
inc
cld
insb
outsb
fadds
and
fldt
mov
jbe
fisubrl
mov
aad
adc
pop
mov
xor
cmpsb
mov
mov
scas
xchg
outsb
outsb
lahf
fwait
dec
loop
push
dec
ds
inc
lret
pop
jo
outsb
outsb
push
shlb
cmc
dec
add
clc
and
lcall
jle
dec
test
movb
outsb
outsb
clc
icebp
jne
mov
xchg
mov
outsb
jecxz
pop
mov
test
out
out
fs
lods
fstl
xor
push
sahf
xchg
ret
inc
outsl
stc
mov
push
pop
jp
push
cli
fdivl
inc
adc
movsl
mov
ret
xlat
subl
jp
outsb
outsb
pop
nop
orl
sbb
scas
jns
outsb
outsb
outsb
jo
pushf
mov
lock
xchg
cli
jo
outsb
outsb
js
rorb
push
xchg
aaa
add
cmpsb
dec
movb
sti
lcall
daa
sarl
mov
jge
xor
add
add
adc
sub
out
scas
and
mov
cmp
subl
jecxz
ds
sahf
loop
dec
pop
int3
ss
cmc
lods
clc
cli
iret
loope
adc
mov
clc
mov
bound
je
jne
inc
mov
je
jno
idiv
push
pop
leave
in
xor
out
rorl
sub
out
pop
frstor
push
clc
cltd
fstps
sti
jno
out
out
sbb
scas
cmp
mov
mov
jmp
jo
mov
xchg
test
notb
or
xor
divb
repz
sti
hlt
cwtl
mov
nop
sahf
fistl
pop
jbe
pop
pop
call
mov
lcall
in
jle
add
std
push
jp
ds
xchg
mov
mov
inc
and
add
icebp
out
inc
adc
rolb
iret
cmp
mov
lods
and
sti
xor
xchg
aam
mov
mov
repnz
stos
lahf
pop
pop
xor
rcrl
cli
xchg
cmp
sub
mov
mov
jle
int3
add
repnz
mov
jg
xchg
shl
push
cwtl
aaa
clc
add
xchg
into
pop
fists
test
bswap
push
mov
inc
lcall
enter
gs
outsb
outsb
out
cli
adcl
inc
shlb
push
cld
insb
lahf
in
adc
cli
insl
add
jno
or
dec
clc
cmp
sub
pop
lret
push
mov
movsl
dec
outsb
outsb
outsb
scas
enter
test
add
and
testb
int3
into
daa
xor
iret
push
adc
std
inc
cs
inc
aad
outsl
inc
outsb
sub
addr16
out
cmp
outsb
outsb
or
scas
jecxz
lds
cmp
test
adc
cmp
push
xor
cmc
xchg
cmc
out
sbbl
inc
sub
mov
movsb
sub
mov
ftst
pop
iret
mov
pminsw
pop
sub
mov
fistps
fisubrl
imull
js
aaa
jge
adc
xchg
xchg
cmpsb
xor
pop
in
into
sti
cmp
ds
cmpsl
xchg
cmpsl
or
aas
adc
inc
push
jecxz
push
xchg
fildl
sub
mov
or
je
inc
xchg
in
in
stc
divb
dec
popl
jle
xor
inc
jnp
aad
pop
lcall
or
insb
lahf
xor
sahf
rolb
test
shl
out
divb
out
jbe
stc
and
fwait
fsetpm(287
out
adc
or
fildl
fnstcw
packsswb
jecxz
push
rol
outsb
clc
ss
mov
add
shrb
xchg
mov
jle
add
addl
std
lock
pop
xchg
cmp
ja
ret
out
shlb
pop
lahf
lods
loopne
cli
movsb
mov
adcb
inc
loope
into
push
fcmovnu
pop
lock
pop
cmpb
cmp
xchg
lock
repz
arpl
cwtl
push
sbb
aaa
aaa
aaa
fucomip
in
sbb
jno
jbe
jle
cli
fdivrl
mov
fidivl
sub
dec
push
or
mov
push
sub
mov
push
dec
lds
fcmovnu
sub
rcrb
xchg
push
ljmp
lahf
jp
mov
loop
cli
les
inc
jl
fnstcw
jge
jl
movsb
xchg
mov
imul
cld
lock
push
ret
out
pop
mov
inc
push
arpl
or
push
fstpl
mov
paddusb
outsl
pusha
jl
lods
arpl
add
ljmp
inc
mov
fwait
mov
sbb
in
neg
fdivrl
adc
out
nop
mov
mov
sahf
mov
lods
jg
mov
cmp
mov
das
addl
mov
fwait
pop
subl
sub
pop
sbb
shl
sub
push
cs
int
push
mov
or
xchg
mov
pop
pop
xor
pop
cmp
cwtl
stc
mov
mov
xchg
mov
dec
mov
sahf
int
repnz
ror
in
neg
dec
mov
xor
jnp
fcompl
sbb
xorb
xor
hlt
sbb
negb
stos
adc
aaa
mov
mov
xchg
repz
sbb
adc
fsubrs
popa
sbb
jl
push
xchg
and
jl
push
lahf
mov
lcall
mov
push
repz
clc
jns
shlb
sub
addr16
mov
pop
test
push
das
andb
sbb
repnz
mov
mov
or
insl
es
rclb
push
mov
loopne
fstp
and
add
dec
adc
scas
mov
dec
scas
push
fwait
fwait
pop
in
outsl
sbb
cmpsb
pop
mov
pusha
insb
outsb
outsb
aas
fnstcw
jbe
sub
pop
xchg
hlt
cld
dec
pop
push
in
inc
jecxz
enter
adc
and
iret
int
sub
or
lcall
out
sub
and
push
dec
vmovntps
or
cld
and
add
sub
and
jle
rolb
push
js
int3
add
sbb
sub
lea
xchg
int
mov
cmpsl
mov
addr16
mov
out
dec
sbb
mov
xchg
cmp
cmc
xchg
testb
test
inc
aas
fwait
test
mov
fcoml
int
negb
repnz
mov
mov
add
mov
add
jecxz
xor
xor
xor
jl
ss
mov
ror
inc
lea
or
jg
int
aas
inc
jno
test
clc
cmp
lahf
int
xor
xchg
outsb
outsb
out
clc
mov
out
movsb
jl
loopne
mov
outsb
outsb
outsb
fs
icebp
dec
je
fsubrs
sub
lahf
icebp
insb
in
dec
xor
clc
add
lret
xchg
das
inc
jp
mov
fidivrl
sub
pop
pop
subps
mov
lahf
fstpt
mov
xor
js
std
insb
outsb
adc
jg
push
cmpb
push
repz
and
sbb
jecxz,pt
mov
jbe
and
jno
fwait
fwait
or
pop
mov
ljmp
lock
addb
je
mov
sbb
lods
xchg
fcompl
sub
pop
out
push
testb
inc
pop
sarb
nop
je
mov
lods
scas
iret
out
es
push
test
aaa
mov
xor
add
in
cld
leave
or
movsl
inc
fdivrs
sub
aaa
out
cltd
or
mov
pop
and
sbb
jp
dec
push
paddw
dec
neg
or
clc
add
mov
dec
inc
jmp
imul
insb
sub
jmp
inc
xchg
sahf
outsb
jp
cmp
movsb
sub
add
int
or
push
add
clc
loop
test
adc
mov
mov
mov
test
fsubrs
fiaddl
jmp
mov
and
and
or
mov
ljmp
jge
mov
sbb
pushf
repnz
idivb
icebp
cmp
sbb
fucomi
popa
shlb
inc
insl
add
mov
fwait
lahf
stc
pop
xchg
sti
mov
mov
mov
jge
ss
insb
lcall
addr16
mov
mov
jo
mov
insb
movsl
xor
out
test
loopne
cmp
jae
aad
or
aaa
stos
adc
xor
mov
int
xchg
call
iret
out
push
pop
dec
or
and
lock
mov
scas
cmpsb
mov
int
stc
sbb
ja
jg
insb
jl
jle
aaa
aaa
mov
mov
scas
imul
inc
lahf
rorl
movsl
insl
and
icebp
mov
mov
cmp
addr16
xor
cmp
test
ds
add
pusha
fwait
shlb
or
hlt
fnstsw
ds
cmp
sbbb
sbb
mov
es
cmp
xchg
movsl
jb
pop
jp
outsb
mov
shrb
out
test
in
push
stc
fisubl
aas
out
scas
jg
jmp
pop
and
sbb
pop
sbb
pop
adc
test
aad
inc
leave
jae
jae
sbb
insb
cmp
sbb
add
in
mov
jae
jae
push
inc
jnp
ds
mov
fs
jae
jae
pop
pop
cmpl
int
mov
mov
xor
jne
jle
and
xchg
das
jl
rolb
jle
out
lcall
out
insl
out
shr
sbb
es
out
jbe
jnp
adc
inc
adc
sbb
aaa
std
or
xchg
out
shlb
aad
mov
sub
cli
fnstcw
pop
adc
test
shlb
pushf
or
xchg
es
mov
xchg
fldcw
mov
ss
rcl
mov
mov
push
sbb
inc
fs
cmp
xchg
inc
or
cwtl
cmp
pop
dec
mov
in
addr16
ret
push
mov
xor
bound
aad
fdivrl
mov
and
scas
cmp
inc
ss
fsubrl
aam
fcompl
add
fistpl
loope
or
sbb
jae
adcb
js
mov
popf
xor
out
jae
jae
sub
repz
or
out
sub
aad
fimuls
sub
iret
sub
push
fistpll
mov
scas
ret
in
in
fs
in
and
test
jb
bound
aaa
ja
into
int3
mov
int3
test
aaa
aad
jl
pushf
repz
jmp
mov
ljmp
repnz
push
push
cwtl
and
mov
lods
or
test
dec
out
pop
test
and
les
bound
fsubr
jge
inc
or
scas
into
stos
enter
xchg
cld
out
fwait
insb
pop
in
out
in
add
imul
cmc
jae
sub
jae
xor
int3
push
jp
fdivrl
adc
mov
mov
and
push
rcrl
dec
dec
lcall
shrb
lea
push
inc
loope
or
push
out
fbld
bound
iret
out
mov
pop
cmp
xor
data16
push
flds
insb
adc
pusha
test
loope
clc
je
sti
insb
mov
mov
mov
mov
jecxz
mov
xchg
push
mov
sub
inc
dec
pusha
mov
scas
popf
es
mov
mov
mov
pushf
xchg
jo
int
and
dec
mov
dec
mov
mov
int
or
add
cmp
mov
inc
xor
outsb
xchg
out
adc
adc
loopne
mov
inc
push
and
dec
iret
jmp
fcomi
mov
inc
shr
mov
mov
fwait
fwait
fmuls
sub
out
test
cmc
lahf
fwait
fwait
fwait
cmp
nop
movsb
in
add
cmp
adc
fdivrl
bound
loopne
scas
or
cmp
pusha
pop
outsb
repnz
aad
mov
negb
iret
xchg
cli
dec
adc
popa
shl
jae
jbe
lahf
sbb
jne
rorb
xchg
xlat
xor
xchg
push
outsb
adc
cmc
sbb
dec
mov
jp
mov
mov
jle
ja
fs
sbb
sub
jns
sahf
int
mov
dec
jecxz
cmc
jle
or
adc
xlat
pop
les
fisubl
xchg
mov
mov
rorb
mov
lret
jae
jae
test
fbld
arpl
mov
mov
jae
jae
sbb
lret
xor
or
fdivrl
pop
rclb
xor
dec
clc
cmp
push
fdivr
loope
int
sbb
call
sub
adc
sub
outsb
outsb
outsb
outsb
jo
out
loop
rcrb
idivb
outsb
outsb
sub
push
vmread
outsb
cmp
xchg
add
fwait
xor
cld
addr16
jae
jbe
inc
add
rolb
iret
inc
les
push
test
ljmp
scas
dec
pop
test
sbbb
icebp
mov
jbe
and
ds
mov
cli
outsl
dec
jp
or
xchg
push
pop
lea
mov
adcl
adc
bound
fcompl
sahf
lds
insb
out
dec
xchg
mov
dec
cmpsb
push
sbb
ret
rorb
fcompl
fs
push
jmp
fnstsw
xchg
push
mov
mov
push
je
push
lods
insb
adcb
adc
mov
or
push
dec
mov
add
mov
or
aad
in
insl
dec
mov
jmp
movsl
fsts
out
mov
enter
cmc
dec
sub
lods
leave
stc
xor
lahf
arpl
jl
add
arpl
outsb
test
lods
pop
into
mov
mov
jne
mov
inc
push
mov
insl
dec
hlt
mov
xchg
inc
pop
inc
lods
cmp
add
mov
jle
fdiv
xchg
ljmp
rcr
fmull
lock
gs
fstl
inc
pop
mov
icebp
subl
iret
aam
adc
inc
mov
leave
insb
outsb
outsb
mov
jbe
xlat
loopne
test
lea
xchg
or
dec
mov
dec
mov
fdivrl
icebp
lahf
dec
cmp
xor
jne
clc
dec
test
rcl
and
je
cmp
sar
mov
pop
es
iret
or
rolb
mov
in
stos
pop
cmp
dec
mov
sahf
fwait
fwait
fwait
rcrl
cld
test
loope
sahf
xchg
mov
insb
lock
push
bound
rcr
icebp
aad
dec
addr16
pop
xchg
out
fs
int
jg
int
cmp
in
leave
add
pop
mov
mov
dec
push
jbe
mov
add
fxtract
push
fistpl
arpl
out
sub
mov
and
mov
imul
iret
out
out
popl
lods
fidivl
push
outsb
outsb
outsb
fbld
sbb
jae
inc
movsb
xor
lock
outsb
outsb
outsb
sbb
lods
mov
push
mov
outsb
outsb
sub
fimull
in
adc
jmp
int3
lret
inc
loopne
jbe
test
test
sarl
mov
test
pushf
outsb
sahf
inc
movsl
clc
xor
push
mov
cld
lcall
adc
xchg
ss
jecxz
add
sub
icebp
jnp
in
push
jge
bound
imul
xor
dec
outsb
hlt
mov
cwtl
in
cmp
fcomps
sbb
push
dec
add
jbe
cmpl
mov
xor
inc
pop
mov
mov
scas
outsl
jmp
and
cmp
mov
cmc
push
xchg
addr16
dec
push
divb
call
or
out
out
fildl
scas
adc
hlt
jo
out
out
or
ror
outsl
cwtl
pop
aaa
cld
insb
mov
mov
push
add
mov
jae
jnp
mov
mov
xchg
jmp
cmpsl
iret
sbbb
lods
push
rcll
test
sbb
sahf
ficompl
jne
mov
xchg
outsl
mov
inc
les
push
xchg
int
outsb
outsb
stos
jae
adc
cmp
sub
jge
outsb
outsb
fwait
xchg
addr16
jb
int3
xor
ds
call
mov
jl
xchg
adc
sub
pop
sbb
xorb
xchg
mov
mov
jge
lret
mov
js
out
out
popl
push
dec
pop
icebp
jnp
mov
inc
push
repz
fwait
lock
lods
and
addr16
cmp
out
nop
pop
or
adc
jae
sbb
mov
mov
mov
cmp
aaa
into
je
pop
push
fdivrs
jae
and
orl
mov
ret
hlt
xchg
cld
xor
jmp
mov
adc
sbb
aaa
imul
cmpsl
xchg
arpl
fwait
fwait
fwait
fwait
pusha
pop
dec
add
xchg
add
xchg
in
fwait
fwait
fwait
fwait
in
lahf
sbb
and
fwait
fwait
fwait
push
aam
cmp
mov
cmp
cmp
in
scas
xor
inc
push
adc
rcr
fdivr
ret
es
xor
fcmovnu
jb
gs
add
mov
adc
insb
outsb
outsb
outsb
inc
xorb
push
jge
test
lahf
cli
into
mov
int3
scas
repz
xchg
inc
testl
dec
or
jae
in
adc
jns
mov
dec
inc
std
push
push
test
add
push
sbb
movsb
lods
xchg
cmc
pop
push
fcompl
popf
jno
push
mov
stos
or
dec
dec
pop
mov
scas
clc
stos
ss
xchg
ljmp
fucomi
inc
jp
dec
outsl
popa
outsb
int3
xor
cmp
or
fs
mov
mov
rcrb
jg
mov
jae
lds
inc
divl
sbb
loope
mov
cmp
pop
loopne
mov
out
mov
stos
negb
sbb
jmp
fcmovnb
nop
out
out
sbb
enter
int3
sbb
iret
out
loop
adc
mov
mov
fldenv
int
dec
data16
or
mov
loop
mov
cli
lods
lds
test
out
mov
rcrb
mov
pop
ret
push
sbbl
jmp
xchg
repnz
mov
ret
cli
jae
jp
test
insb
push
jns
jge
mov
stos
sub
pop
jne
mov
inc
jl
pusha
aad
mov
pop
in
bound
pop
xchg
aaa
aaa
aaa
aaa
mov
aad
out
mov
lods
outsb
out
cmp
aaa
inc
mov
cli
or
dec
sahf
sub
sbb
aas
movsb
hlt
or
cmp
push
xchg
push
add
mov
push
push
call
push
rcr
mov
mov
jmp
inc
test
cmc
fdiv
mov
shrl
add
adc
push
cmp
jo
icebp
pusha
loope
lock
hlt
std
lods
sarb
int
cmp
jbe
push
pop
bound
push
or
push
xchg
mov
movb
call
repz
ss
aaa
in
iret
fbstp
cltd
inc
jl
cli
cmp
daa
loop
fdivl
push
stos
call
stos
outsl
xchg
lock
faddl
loop
paddusb
std
jns
and
xor
pop
cli
nop
aaa
in
jmp
scas
mov
jle
out
cmp
inc
ja
ljmp
addr16
enter
test
ds
mov
bound
xlat
sahf
push
nop
mov
cmp
push
jl
mov
fwait
or
sub
jne
rcrl
icebp
xchg
js,pt
lret
ds
and
cli
into
cmp
and
jge
int
in
mov
dec
sbb
jo
lcall
std
or
ffreep
clc
cli
das
mov
fsubl
push
test
incb
push
fbstp
cmc
lahf
pusha
pop
fdivrs
sahf
dec
pop
xchg
ret
xchg
jl
or
outsl
cmp
sub
mov
movhps
mov
xchg
xor
jge
aaa
aaa
fdivrl
or
add
sub
rcr
pop
outsl
out
popa
lahf
int
in
xor
test
add
mov
fcomi
pop
rorb
sahf
jmp
sbb
call
outsb
aas
fwait
dec
jnp
mov
aad
fmuls
cs
pop
cmp
cmp
inc
out
out
sar
stc
push
inc
ss
sub
push
sahf
fistl
stos
jg
out
or
mov
mov
loope
repz
cmp
fistpl
clc
and
inc
lds
dec
shl
xlat
mov
pop
sub
pop
push
adc
ds
sub
jb
pop
cmpsb
push
pop
dec
and
sbb
pop
je
push
xchg
inc
mov
mov
pop
push
add
rcl
or
cmp
inc
or
scas
clc
fstps
sub
insb
sbb
push
inc
pusha
jo
sbb
divb
fbstp
in
and
mov
mov
out
lea
sbb
or
stc
jno
outsb
outsb
outsb
pop
mov
test
cmp
pop
lock
insb
sub
pushf
sbb
clc
std
insb
repnz
es
lret
clc
fldenv
mov
into
lahf
int
int
cmpsl
fwait
adc
lods
jle
jae
adc
ds
fwait
jmp
in
sti
out
ja
mov
test
clc
xor
mov
clc
ljmp
push
adc
jmp
jg
jnp
xor
mov
add
jo
mov
cmc
test
hlt
pop
jp
mov
stos
cld
in
sbb
fstps
adc
adc
fsubrl
mov
addr16
popf
bound
rcrb
out
sti
bound
leave
cmc
inc
cmp
aam
shlb
aas
and
clc
add
fadds
testb
inc
sbb
outsb
xor
stos
xchg
jne
jle
mov
mov
bound
sahf
mov
fists
mov
ds
jbe
lcall
jb,pt
add
cli
sub
push
cmp
sub
imul
xorb
rcr
pop
push
or
sbb
hlt
or
std
les
pop
cmpsb
or
mov
scas
divb
in
cwtl
ss
into
sbb
mov
out
jae
out
jne
xor
mov
mov
shlb
cmpsb
lcall
fists
out
mov
rcl
jns
mov
jbe
jno
inc
ret
jp
mov
stc
test
inc
adc
cmpsb
pop
scas
pop
sub
pop
xchg
xchg
out
inc
pusha
roll
pop
push
jp
mov
fwait
lcall
lock
lret
out
mov
hlt
rcr
mov
out
divb
mulb
sub
cmpsb
out
out
pcmpeqb
stc
xor
inc
in
out
out
mov
ds
pop
mov
addr16
or
or
mov
cli
repnz
shl
enter
adc
mov
loop
dec
jae
and
mov
jae
clc
push
popa
repz
out
jae
xchg
pop
stos
inc
pop
xchg
jb
mov
mov
or
lock
lock
mov
clc
pop
xor
push
orb
insb
outsb
jg
es
push
xchg
imull
jno
cmp
cld
icebp
out
inc
out
fsubrl
mov
dec
mov
fiaddl
loop
ljmp
out
lock
xchg
xlat
fmull
ljmp
jno
sti
pop
push
fistpl
clc
pop
js
stos
iret
in
jae
movsb
xchg
sbb
mov
iret
out
punpckhwd
std
push
insl
movsb
mov
sbb
out
loopne
xor
adc
jns
leave
cmp
mov
mulb
and
out
testb
cmp
cmp
in
jl
ljmp
ja
xor
cwtl
inc
stc
cmpsb
inc
jle
out
out
cltd
mov
xor
mov
xlat
out
out
add
lock
or
aaa
aaa
aaa
mov
pop
mov
and
in
idivl
mov
push
out
sbb
jo
clc
adc
mov
bound
int
pop
sbb
icebp
push
mov
idiv
push
fmul
inc
aas
lahf
repz
fwait
cmp
idiv
shlb
cmc
dec
addl
mov
out
outsb
outsb
outsb
clc
cmpsb
leave
nop
add
mov
test
push
push
ds
outsb
into
inc
sbb
loop
push
mov
insb
repz
outsb
outsb
scas
out
adc
push
pop
jg
dec
in
mov
pop
xchg
pushf
ficomps
or
push
mov
xor
add
adc
fs
jae
and
sub
in
andb
jae
data16
mov
icebp
sub
dec
pop
jmp
xchg
aaa
aaa
lahf
fwait
cmc
mov
cld
dec
cli
out
mov
ss
cmp
mov
pop
lahf
in
jae
jle
es
and
jg
hlt
in
add
test
mov
vpcmpgtw
aad
outsl
test
pop
shr
cli
push
mov
test
fdivrl
aaa
mov
in
push
test
aaa
adcb
fnstenv
loop
iret
decb
mov
cld
push
sub
test
dec
push
sbb
shll
data16
insb
mov
cmpsb
pop
jo
dec
cmp
hlt
negl
std
push
or
dec
or
push
dec
add
or
subl
adc
mov
ss
cmp
out
mov
push
push
add
or
aam
outsl
es
fcmovne
rcrb
daa
sub
inc
mov
fnstenv
cmp
imul
cmp
lret
rcrl
loope
bound
xor
sbbb
jne
ss
jl
push
leave
lret
dec
xor
lcall
mov
xchg
mov
inc
in
fwait
fwait
fwait
fwait
loop
push
fwait
addl
push
popf
jnp
outsb
lahf
fwait
fwait
js
mov
add
mov
aas
fildl
loope
test
mov
xchg
aas
cmpsb
ds
jge
sti
push
and
dec
adc
push
dec
jecxz
sti
dec
jnp
lods
rclb
mov
sbb
clc
dec
jl
sub
in
cmpl
faddp
dec
mov
mov
stos
inc
cmpsb
iret
int
daa
in
add
test
test
movsb
iret
mov
mov
mov
out
aam
lea
cmp
ds
fwait
sbb
fldl
push
mov
xchg
jle
fists
mov
dec
aaa
pop
test
fwait
or
pop
ja
jecxz
adc
jge
ja
aam
test
pop
ret
sub
dec
xor
dec
stos
sarb
sbb
orb
aaa
cmp
out
out
lds
pop
pop
mov
or
in
js
mov
mov
mov
add
std
push
mov
fs
sub
dec
push
cmp
fsubl
inc
repz
cmp
aad
adc
in
addr16
std
mov
mov
xor
cmp
iret
int
inc
lds
push
jbe
leave
jmp
push
add
add
or
jbe
and
push
shll
xchg
icebp
into
sbb
sub
psraw
scas
fsubs
xor
cli
dec
je
or
xchg
mov
and
mov
out
jmp
std
sub
xchg
stos
out
xorl
cs
xor
pop
fistpl
dec
jg
aaa
cld
sub
js
xorl
aaa
jecxz
xor
shll
sti
out
jbe
out
cmc
push
fildll
pop
icebp
adc
sti
lods
mov
loop
test
js
xchg
out
xor
fmull
push
lods
fwait
push
cld
cltd
xor
ja
pop
out
enter
rorb
inc
ja
out
notb
jne
insb
fidivrs
out
out
pop
nop
testl
iret
int
lock
pop
sub
xor
push
lea
and
mov
std
mov
dec
xchg
lods
repnz
into
pop
pop
mov
mov
ret
fdiv
out
add
jge
pminub
int3
out
mov
and
loope
test
orb
ret
iret
jae
data16
ss
cltd
lock
xor
das
mov
in
testl
xchg
mov
ss
mov
hlt
pop
imul
add
movsl
jle
shrl
xchg
push
adc
xchg
jae
jae
mov
add
mov
lea
dec
jno
mov
popf
fisttpl
cmp
sbb
add
sbbl
popf
mov
mov
int
aas
mov
and
push
clc
lret
test
push
in
in
jo
mov
fcompl
test
decb
shr
mov
fcoml
shlb
scas
out
fisubl
js
loopne
ret
mov
add
ljmp
cld
lods
addr16
aam
adc
cmpl
lret
mov
mov
loop
xor
jae
sub
lret
cld
stc
xor
mov
fdivrl
adc
dec
dec
dec
cmp
xchg
outsb
outsb
cli
fsts
loope
ds
sub
jp
lods
dec
std
insb
cmp
jge
mov
sahf
mov
push
subb
icebp
mov
jg
inc
lods
cmc
xor
mov
cmpsl
stc
adc
xchg
imul
pop
sub
into
pop
movsw
subb
xchg
ds
clc
mov
int
les
ficoms
inc
rcrl
adc
pop
bound
outsb
outsb
pop
lock
cmc
test
outsb
outsb
outsb
pusha
movsb
or
mov
divb
out
add
or
imul
out
mov
pop
xor
mov
mov
in
ret
cmp
dec
scas
pop
mov
push
movsb
mov
jg
imul
mov
cmc
adc
dec
mov
cs
pop
out
fldlg2
dec
xchg
xorb
or
xchg
mov
in
sbb
hlt
cmp
xor
in
int
push
shrb
idivb
sbbb
int
insl
mov
gs
insb
mov
outsb
cmp
sbb
cmp
pop
in
xor
int
imul
cwtl
es
mov
hlt
aad
aas
mov
aam
imulb
test
jge
outsb
mov
pop
xchg
inc
push
mov
js
ds
dec
and
arpl
outsb
outsb
pusha
lcall
aad
cwtl
ret
cmpsl
outsb
outsb
imulb
lea
or
insl
insl
xor
jnp
mov
arpl
cmp
mov
xchg
cmp
enter
nop
incb
jg
movsl
xchg
scas
int
addr16
orl
xchg
rcrb
mov
int
and
aad
sub
clc
and
jo
outsb
mov
popf
popf
fdiv
scas
js
lahf
jl
xor
sub
rclb
mov
jno
gs
or
outsb
pop
pop
sbb
pop
test
mov
outsb
outsb
outsb
outsb
fidivrs
sub
or
fists
sub
jl
out
leave
repnz
inc
iret
int
cltd
inc
pop
mov
int
xlat
in
into
testb
lahf
test
push
imulb
call
out
sarb
gs
push
scas
add
mov
test
lret
outsb
test
push
cmp
shrb
fwait
fwait
repz
mov
bound
xchg
scas
xchg
ds
jge
shlb
in
jle
jnp
fwait
fcmovnu
inc
jb
aam
dec
insb
sbb
jb
cmpsb
mov
stos
jo
push
movsl
das
push
stos
bound
push
hlt
mov
mov
outsl
pop
addr16
cld
ret
hlt
cld
mov
or
jecxz
fldenv
mov
cwtl
ffreep
mov
lea
hlt
mov
dec
push
sti
pop
jp
pop
movsb
sub
lahf
adc
inc
fs
loop
shl
out
cmpsb
cld
pop
pop
pop
bsf
xchg
xchg
and
out
out
hlt
pop
push
mov
daa
sub
nop
fcmovne
push
gs
jmp
insb
cmp
out
adc
outsb
lahf
inc
cmp
andl
fwait
insb
outsb
outsb
outsb
add
mov
push
aad
add
out
aaa
aaa
std
jmp
sbb
rcl
cwtl
add
aaa
xor
push
lods
push
and
stos
rorl
aaa
inc
int
daa
ret
pop
outsb
outsb
outsb
mov
jp
mov
mov
clc
insb
outsb
dec
test
jp
int
div
lods
add
mov
mov
jg
xchg
add
sub
add
imul
js
xor
outsl
inc
and
adc
mov
clc
add
push
mov
xchg
aas
je
cs
xor
in
xchg
pop
jl
aaa
aaa
aaa
mov
xor
cmp
insb
in
sub
movlps
in
pop
cmp
mov
and
mov
lcall
popf
inc
add
out
mov
imul
je
jecxz
es
jecxz
popf
cwtl
packssdw
lahf
push
push
fisttps
cmpsl
in
outsl
inc
sbb
sub
js
outsb
aas
rol
popf
arpl
je
mov
sbb
aaa
aaa
ja
sbb
pop
vaddsubps
aaa
aaa
aaa
out
lret
inc
xlat
test
in
ds
cmp
mov
les
mov
sub
xchg
sub
loopne
adc
jne
stc
orl
add
ret
pop
les
arpl
in
jo
lods
ss
mov
enter
and
and
incl
sbb
lds
xor
and
add
xor
outsb
mov
in
adc
stos
xor
cmp
cmc
jbe
fstpt
jp
iret
lahf
loope
pop
fcompl
out
xor
pop
cmp
xor
test
cli
frstor
jbe
push
push
out
jle
mov
jne
inc
mov
imul
mov
xchg
lods
cmp
mov
clc
shrl
fisubl
ret
stc
dec
idiv
push
ljmp
in
push
sahf
mov
mov
mov
in
push
ds
mov
sub
rcl
nop
into
sub
rcr
xorb
out
push
mov
xor
in
outsl
jmp
adc
repnz
bnd
int
int
dec
out
xchg
jge
xchg
pop
mov
mov
scas
lahf
outsl
fildl
sar
mov
imul
sti
pop
clc
push
jg
popa
enter
push
bound
mov
jecxz
adc
sub
iret
test
daa
call
cwtl
cli
cwtl
xor
cmp
addr16
lock
jg
les
sub
mov
cmp
fdiv
pop
xchg
pusha
movsl
cmc
mov
ret
cs
inc
outsl
test
jecxz
mov
fwait
sub
sub
inc
outsl
sub
fwait
cld
insb
lahf
fwait
popa
sbb
pop
cmpsb
jno
pop
add
aaa
aaa
pop
cwtl
repnz
movsl
xchg
mov
pop
pop
ss
aaa
movsb
pop
out
test
fcoms
out
pop
test
icebp
push
in
fwait
fwait
fildl
int
or
adc
xchg
mov
dec
je
push
xor
mov
mov
ficomps
test
les
int
clc
imul
dec
cmp
jo
fs
gs
jbe
iret
in
push
fs
ret
clc
xor
jae
aad
adc
jae
xchg
hlt
sbb
mov
lods
cmp
mov
pop
or
out
nop
dec
and
arpl
int
lods
cld
mov
push
sbb
movsl
cmc
rcl
repnz
xchg
sahf
mov
jo
ret
addr16
les
or
icebp
sub
cmc
push
mov
adc
cmp
pop
and
inc
out
stc
add
jge
cmp
jecxz
jae
jle
push
add
and
imul
cli
in
pop
orl
cmp
outsb
clc
ret
and
or
push
cwtl
jae
jae
dec
fs
push
xchg
mov
add
sub
dec
clc
stc
rorb
test
cmp
dec
lods
adcl
push
pushf
jp
test
insb
sti
enter
loopne
adc
iret
int
addr16
test
mov
adc
fdivrl
dec
jo
clc
pop
dec
fcomp
test
cli
jg
int3
adc
push
push
lret
adc
clc
or
jae
add
incb
or
jae
dec
stos
stc
xor
stos
sahf
bound
cmc
cld
int
int
lds
dec
call
add
int
out
push
in
pop
ror
inc
mov
lods
out
out
setne
cmp
adc
test
cs
push
adc
xchg
mov
push
out
out
dec
or
mov
hlt
into
repnz
out
cmc
loopne
mov
inc
jno
jecxz
adc
jb
jae
and
adc
xor
fdivrl
sub
cltd
add
adc
shl
jmp
xor
rcll
outsl
inc
mov
jg
jp
jns
push
jecxz
dec
jle
push
in
xor
mov
dec
xchg
jae
jne
movsb
test
js
mov
mov
mov
jae
jae
clc
mov
cmpb
shll
and
inc
and
mov
cwtl
cmp
aaa
mov
cmpsb
sbb
dec
pop
xchg
jecxz
lods
jmp
xlat
or
fwait
stos
aam
jle
mov
pop
jle
mov
js
xor
movsl
mov
xchg
mov
cmp
out
jbe
sbb
in
xlat
add
push
push
push
dec
jo
sbb
aas
fwait
fwait
cmp
dec
jbe
xchg
inc
or
mov
in
inc
lock
imul
push
cmp
cmp
pop
ljmp
xor
xchg
out
hlt
pusha
mov
add
jnp
ret
repz
mov
add
add
rcrb
aaa
aaa
negl
xchg
push
jbe
insb
add
rcr
and
cli
std
cmpsb
mov
adc
insb
scas
cli
leave
cmp
dec
movsl
in
jmp
popa
scas
and
xor
xor
fyl2x
inc
out
pop
pop
cwtl
mov
sbb
dec
pop
sub
test
popf
dec
jle
jo
test
cmpsb
sub
fidivrl
dec
add
insl
xchg
jp
aad
pop
ds
pop
inc
inc
jbe
inc
adc
pusha
sbb
addr16
pop
out
clc
adc
add
inc
fdivrl
add
loopne
ja
int
pop
ret
xchg
out
adc
add
int
or
je
out
inc
push
mov
js
aam
inc
es
out
pop
loopne
cli
fdivrs
leave
sbb
aaa
aaa
aaa
aaa
iret
stos
fwait
cmpsl
neg
dec
lock
insl
add
out
xchg
cmp
ja
pop
stos
pop
and
push
sbb
jmp
popf
pop
popa
and
push
enter
pop
out
xor
punpckhwd
adc
jnp
std
jb
add
push
aam
jnp
jns
jae
jae
int3
xor
jle,pt
jl
jl
gs
lahf
in
addr16
fiaddl
adc
jno
fcmovne
out
push
adc
push
ja
cmc
es
or
out
fwait
fwait
fwait
push
mov
push
cmp
inc
ds
dec
ds
fwait
fwait
test
sub
xchg
cld
pop
outsl
lea
and
jge
mov
in
dec
cwtl
inc
inc
adc
jp
dec
sub
outsl
or
sarb
cmp
add
inc
dec
data16
movsb
inc
shlb
into
vmovaps
mov
bound
insb
out
dec
push
test
or
sub
sti
sarb
sbb
mov
xor
test
push
cld
sbbl
sti
test
stos
jg
lea
cmp
test
mov
shl
sti
xchg
dec
xchg
je
addr16
jae
nop
sub
pop
dec
or
ds
jo
inc
std
fwait
pop
xor
add
mov
jbe
push
test
adc
xor
and
sbb
imul
in
inc
dec
aas
fwait
fwait
fwait
push
inc
adc
hlt
pop
inc
cmc
mov
xchg
mov
jne
cmp
int
int
or
cltd
push
test
mov
xchg
das
and
and
sbb
inc
sbb
xor
xor
test
ja
int3
ja
or
out
and
inc
lcall
xchg
outsb
outsb
aas
fwait
add
mov
dec
test
xlat
xchg
adc
inc
jecxz
outsb
scas
dec
jo
cmp
int
int
rcrb
insb
jae
pop
add
in
int
int
and
adc
insb
icebp
outsl
sti
jle
int
inc
ret
and
xchg
pop
dec
dec
and
jg
sbb
insb
fstps
loope
out
cmp
outsb
cli
xchg
mov
mov
mov
outsb
outsb
outsb
outsb
xchg
inc
dec
push
vpunpckhwd
insb
outsb
xor
mov
sarb
data16
clc
sub
or
inc
mov
pop
and
cmp
add
mov
div
mov
pusha
inc
outsb
outsb
outsb
mov
lahf
stos
cld
jnp
mov
push
lahf
adc
add
mov
push
inc
jno
mov
fistpl
mov
push
adc
fisttpl
inc
push
xchg
ds
nop
jns
lock
sbb
rolb
and
jecxz
sbb
add
fs
fucomi
sbb
leave
bound
in
aad
jnp
lahf
fs
mov
test
jb
out
jmp
sub
test
test
ds
mov
mov
jecxz
in
daa
cmp
sbb
pop
pop
int3
adc
inc
fimull
xor
mov
cmc
aaa
call
sub
add
test
das
data16
fwait
fwait
fwait
cmp
sub
scas
push
mov
fwait
fwait
fidivrl
adc
cmp
sarb
lods
jno
inc
sahf
dec
pop
xor
mov
sbb
fistps
je
cltd
es
dec
cmp
aad
sbb
rol
sbb
mov
dec
pop
sbb
pop
lret
in
aas
out
sbb
xchg
mov
mov
outsb
outsb
outsb
outsb
es
inc
adc
and
mov
outsb
outsb
xchg
or
xchg
add
ret
out
mov
jge
fildl
cld
aaa
aaa
mov
inc
adc
out
dec
mov
mov
cmp
aaa
aaa
aaa
popa
xor
xchg
rorb
dec
out
mov
pop
inc
insb
sub
mov
jae
sub
fdivrl
push
aam
incb
dec
gs
out
add
cmc
mov
lock
xorb
cmc
jmp
jae
cmp
push
or
sub
mov
mov
je
cltd
aas
loope
and
js
cmp
fisubrs
sub
ds
aas
insb
jo
adc
daa
sti
and
sti
fcoml
out
xlat
mov
sbb
jge
mov
int
jbe
push
movsb
popf
lods
cmp
mov
repnz
test
les
cmc
mov
les
jo
add
sbb
dec
iret
out
lret
mov
daa
mov
pop
pusha
adc
andl
mov
mov
shlb
adc
stos
rolb
lret
scas
clc
sub
and
xor
lret
add
fwait
fwait
fwait
fwait
xchg
mov
rclb
or
add
or
into
mov
lahf
int
add
or
lea
jg
lock
fcoml
push
mov
fcmovb
fiadds
popf
jecxz
movsl
mov
mov
adc
mov
out
test
mov
sub
or
pop
add
clc
jmp
rcr
lds
jnp
flds
mov
sbb
jae
mov
mov
test
jmp
mov
adc
sahf
scas
cmpsb
jne
xchg
inc
repz
aaa
enter
int3
inc
mov
dec
call
sub
mov
pop
cmp
andb
mov
stos
inc
sarl
movsb
push
xor
mov
roll
mov
dec
pop
test
divb
negb
sbb
cltd
dec
lret
jae
add
rorl
loopne
cli
loop
lods
cmc
data16
stos
sub
ja
sbb
xchg
arpl
push
jge,pt
iret
sbb
mov
out
addl
jno
pop
push
pop
mov
jbe
lss
loopne
jne
and
cmc
push
and
push
sub
fcmovu
test
push
int
int
into
pop
jne
lea
ret
xchg
adc
cmp
mov
int
arpl
in
push
inc
and
sbb
ss
aaa
aaa
xor
aas
orb
leave
pop
mov
cmp
loope
jb
out
andb
imul
int
stos
inc
loop
je
aaa
das
jle
mov
loope
ret
negl
dec
cmp
pop
mov
xchg
je
mov
sub
iret
int
aas
enter
push
xor
insl
inc
popa
hlt
fnstcw
or
lret
dec
add
mov
mov
xchg
xchg
mov
dec
adc
pop
movsb
lret
mov
mov
fdiv
mov
xchg
loope
popa
std
test
inc
lods
ss
mov
test
or
adc
out
out
jae
jl
fisubrs
into
pop
mov
xchg
xchg
out
out
dec
fmull
dec
aad
movsl
je
fucomi
push
pop
fwait
stc
cs
out
negb
popf
adc
cwtl
mov
imul
push
insb
in
pusha
inc
int3
lock
into
out
out
insl
xor
and
or
mov
out
out
sbb
test
daa
cltd
sub
sub
lds
mov
imul
mov
dec
push
leave
push
int
out
out
in
or
jmp
add
add
push
out
lock
dec
sbb
mov
sbb
cwtl
cmp
movsb
stos
shll
jnp
mov
inc
aaa
subb
mov
loop
pop
lock
lcall
fiaddl
push
and
ffree
dec
out
out
cmpsb
test
mov
lds
imul
aas
fistl
pop
cmp
sbb
and
lds
cmp
cmp
pushf
cmp
jne
addr16
jae
lods
aam
or
fdivrl
loopne
push
fadds
push
mov
lock
fcoml
movsb
out
cmp
push
addr16
rcrb
xlat
packuswb
gs
mov
fistps
call
imul
sub
movsl
aas
int3
push
xor
imul
fists
mov
mov
lea
mov
jmp
out
pop
mov
mov
mov
mov
pop
icebp
mov
fmull
sbb
es
outsb
xchg
cmpsb
mov
or
sahf
loopne
jecxz
gs
push
sub
movsb
add
imul
or
push
xor
dec
iret
int
ret
inc
or
or
fdivr
jns
and
iret
andb
jae
out
mov
es
push
popa
pop
notb
fsubl
jmp
sahf
inc
pop
cs
insb
outsb
mov
lret
sahf
arpl
pop
test
add
fdivrs
les
fcomip
insl
mov
pusha
jg
out
mov
in
lahf
jb
dec
ror
mov
mov
xor
lret
sub
cmpsl
std
insb
lahf
fwait
pop
adc
push
xchg
gs
mov
std
jle
in
xchg
dec
adc
rcrb
ja
mov
lcall
es
pop
hlt
in
sarl
sti
xchg
jns,pt
cmpsb
test
ljmp
fnstsw
jae
push
out
cmpsb
pop
push
xchg
mov
mov
das
dec
mov
mov
inc
call
xchg
jmp
rcl
mov
xchg
adc
dec
adc
stc
jbe
sub
pop
aas
and
pushf
fistps
stc
fdivr
sbb
loop
push
fwait
fwait
fwait
fwait
inc
cmpsl
daa
test
push
mov
cmp
mov
fwait
dec
sti
adc
sarb
mov
lds
and
ds
pop
das
outsl
pop
mov
dec
and
out
xchg
sbb
iret
xchg
pusha
or
cli
dec
stc
fisubl
fldt
es
jae
ja
lock
scas
pop
pop
jecxz
test
jae
jae
stos
xor
insb
lods
mov
xorl
push
xchg
sahf
and
enter
jl
lods
fcomip
push
sti
pop
fwait
dec
fistps
fldenv
test
stos
xor
mov
sahf
fwait
fwait
fwait
fwait
xor
push
test
notb
mov
pop
xchg
cltd
cld
add
lea
lods
dec
je
dec
in
ret
fwait
fwait
dec
xchg
flds
cmp
out
out
das
pushf
les
or
or
pop
ror
adc
mov
mov
into
int
int
ret
stc
mov
ret
std
cmovb
js
sub
cwtl
mov
outsl
das
cmp
std
je
push
call
mov
imul
fistpl
push
cli
xchg
nop
rolb
loopne
mov
sbb
mov
clc
pop
arpl
dec
aaa
int3
adc
negb
sbb
cld
xchg
sbb
hlt
js
out
out
outsl
xacquire
mov
inc
xor
lret
iret
xor
les
cmp
sahf
mov
loopne
sti
je
aam
push
fimull
imul
repz
sub
lea
push
xorb
inc
cmpsb
leave
xchg
cli
cltd
cmpsb
jo
and
fbld
xlat
ret
pop
testb
inc
xchg
jne
fsubrl
cmp
movsb
mov
mov
outsb
mov
aaa
mov
pop
cs
jg
jp
test
sahf
fwait
fwait
sub
shlb
pusha
xor
pop
or
out
out
ds
sub
jo
xchg
xchg
pusha
cli
push
dec
ret
out
pop
mov
pop
cli
mov
pop
ret
mov
fwait
fwait
or
negb
mov
pop
mov
stos
outsb
outsb
scas
cli
fs
cltd
lret
mov
pushf
jae
rolb
xlat
sub
mov
scas
lock
ds
je
sub
pop
sahf
mov
sub
mov
mov
movsl
cmpsb
call
insb
int
int
xor
cmp
popa
add
mov
fisttpll
inc
cld
and
lahf
loopne
mov
int
sub
sbb
bound
aaa
aaa
jb
adc
or
xchg
ds
aaa
aaa
aaa
aaa
pop
jo
fisttpll
pop
or
sub
aaa
aaa
in
cs
jb
pop
loope
adc
fwait
xor
xor
jae
out
pop
pop
mov
lahf
fwait
mov
jae
jae
in
cli
arpl
cld
aaa
mov
sbb
xchg
aaa
cmp
js
mov
les
lock
dec
in
mov
fwait
fildl
inc
mov
mov
shlb
aas
fwait
sti
les
mov
test
mov
outsb
outsb
outsb
and
loop
and
sbb
mov
insl
mov
ret
clc
lcall
pop
and
out
aaa
aaa
mov
mov
std
xor
adc
dec
sbb
aaa
aaa
aaa
jg
xor
cmp
popf
xchg
fsubrs
mov
ds
aaa
inc
sbb
arpl
or
xor
mov
movsl
arpl
mov
repnz
iret
ds
loopne
ja
mov
sub
inc
cli
push
je
pop
cmpsb
ljmp
adc
fs
insl
push
stos
sarl
mov
inc
push
icebp
jnp
jo
cmp
pmuludq
cmp
scas
aam
cmp
sbb
aaa
mov
mov
sub
mov
inc
inc
xor
mov
dec
cltd
or
xor
cmp
lret
and
mov
dec
outsl
mov
and
push
out
sbbb
les
repz
or
pop
ror
out
add
push
out
xor
mov
ss
insl
jge
push
test
mov
test
addb
gs
fdivrl
insb
out
sbb
aas
mov
pop
fs
repnz
das
dec
fwait
stos
ds
xor
insb
push
pop
inc
cmp
pop
int3
daa
sarb
in
popa
movsb
insb
push
out
inc
or
jg,pn
push
leave
pop
mov
repz
sarb
add
push
sub
bound
jle
outsb
outsb
cmc
pushl
and
jae
mov
mov
imulb
jae
push
inc
pop
xchg
jmp
push
mov
movhlps
sahf
lock
loopne
dec
aas
fwait
stos
fdivs
movsb
cmp
pop
ret
cld
pop
dec
movsl
loope
lock
mov
shrb
ds
mov
ret
push
iret
imulb
aam
lret
sarb
js
insl
adc
clc
lret
mov
adc
mov
or
and
jle
cltd
insb
fidivrl
fwait
fwait
fwait
fwait
mov
pop
pusha
cmp
mov
pushf
popf
mov
and
iret
out
mov
inc
pop
sbb
mov
sub
insb
outsb
jg
lcall
dec
mov
cld
or
push
push
mov
popa
aam
pop
std
test
cmpsb
jnp
popa
mov
mov
out
push
loopne
ss
enter
mov
sbb
nop
out
mov
fdiv
mov
lock
xchg
mov
ret
xchg
push
or
fcmovnb
inc
fisubrl
dec
sub
or
arpl
xchg
clc
mov
cmpsl
sarb
stos
into
jae
inc
inc
outsb
jo
loopne
loop
sub
push
and
fsqrt
cs
and
outsb
jg
outsl
mov
inc
mov
das
les
ds
loop
sbb
jae
jae
pushf
sub
das
popa
movsb
xchg
mov
insb
in
addr16
push
in
adc
imulb
inc
call
int
nop
clc
xor
dec
fistpll
int
les
ror
cmp
pop
adc
fcompl
or
cld
test
notb
test
mov
mov
addr16
dec
loop
fcompl
repz
test
aad
mov
jp
pusha
ljmp
cmpsl
inc
in
lds
loop
aad
push
add
jae
xchg
cld
jge
aad
xsha256
cmpsb
xchg
mov
shlb
lahf
mov
dec
push
push
fnstcw
aaa
aaa
mov
push
or
lock
cwtl
lds
pop
jne
fwait
fwait
cmp
into
mov
mov
fsubp
mov
fwait
fwait
fwait
ds
stos
pop
inc
inc
xchg
testb
arpl
call
add
aaa
aaa
aaa
push
stos
or
in
cmp
mov
ss
test
sahf
mov
sub
addr16
jae
js
lock
push
lret
pop
inc
dec
loopne
mov
jle
sti
or
fsubrl
jns
cmpsl
adc
insl
clc
pop
jge
outsb
dec
rorb
arpl
jl
es
mov
cld
sbb
insb
outsb
out
jp
jg
clc
add
add
not
cli
je
mov
and
or
lahf
mov
xor
movsl
pusha
cmp
jecxz
call
psraw
clc
sbbb
test
lods
pop
popa
lret
add
int
rorb
adc
out
ret
test
int
int
dec
in
out
into
push
aaa
and
lock
es
mov
jmp
clc
sahf
clc
data16
pop
xchg
add
mov
push
push
cmp
out
out
mov
mov
mov
mov
std
out
mov
mov
pop
xor
aas
int
mov
cmp
adc
add
push
mov
jmp
out
ret
pop
es
aas
ret
clc
nop
rorb
jbe
fnsave
iret
divb
jp
bound
mov
inc
lods
jb
jae
push
aaa
sti
and
or
aas
push
pop
rclb
or
adcl
int3
leave
push
faddl
sub
lock
mov
data16
scas
dec
push
cmp
pop
mov
mov
inc
popf
pop
or
loope
iret
int
daa
fimuls
push
out
cmpb
mov
adc
aas
pop
mov
mov
dec
lods
cmpsb
inc
lret
int
int
data16
popa
stos
adc
xchg
sti
inc
aad
jle
jbe
sahf
lret
mull
out
out
adc
sub
mov
jno
cld
jae
inc
in
mov
cmpsb
and
push
push
adc
mov
dec
add
scas
mov
pop
je
pop
and
or
cld
inc
fiaddl
iret
imul
mov
push
jle
push
in
adc
cli
jle
sahf
pop
xorb
mov
lods
dec
lds
cld
outsb
mov
fnstcw
js
ret
push
pop
mov
mov
and
pop
mov
pusha
jmp
mov
loop
push
jno
add
pop
pop
aam
xorb
sbb
imul
rcrb
sub
add
sbb
pop
in
dec
cmc
nop
fs
loope
js
lock
or
imulb
mov
bound
cmp
push
sbb
imul
std
scas
mov
adc
insl
sahf
decl
or
lea
arpl
adc
pop
insl
fwait
pop
fldenv
sahf
adcl
sahf
jo
mov
icebp
sub
sub
fs
push
mov
call
mov
pop
aam
jg
fmull
movsl
pop
je
loopne
cld
cwtl
mov
jno
clc
sbb
push
inc
dec
gs
stos
dec
or
cmp
cmp
jo
push
es
sub
sbb
jno
int
pop
jge
pop
inc
sti
mov
mov
out
jae
fcoml
jne
or
pop
push
out
addr16
push
sahf
out
xchg
pop
push
mov
stc
jge
adc
ljmp
pop
push
in
out
adc
jb
jmp
mov
inc
xchg
jmp
iret
jns
call
fs
sub
cmpsb
add
dec
mov
adc
and
and
aas
cmpsl
outsl
inc
std
dec
mov
and
jp
sub
lock
ds
jae
out
repnz
shlb
mov
shll
jae
sub
sub
test
iret
int
mov
test
popa
sbb
adc
sub
out
jo
inc
and
lahf
test
lcall
pusha
icebp
fdivrl
aaa
aaa
movsb
fbld
cmp
mov
inc
jmp
cmp
push
jle
xchg
insb
outsb
outsb
pop
and
aam
sub
flds
out
movsl
lock
xchg
stos
scas
out
out
lods
mov
out
ds
xchg
mov
jnp
and
ljmp
cltd
adc
sub
out
and
add
jp
xlat
jge
xchg
insb
outsb
outsb
test
rorb
sahf
or
push
je
xchg
xchg
xor
mov
aas
out
faddl
out
pushf
push
stos
fistps
inc
add
jl
sbb
rorl
dec
mov
lret
and
out
sti
fiaddl
cli
xor
jp
jo
mov
shl
cwtl
jnp
loop
in
neg
insb
or
lods
xor
insb
add
loope
movsl
inc
test
sub
jnp
in
mov
adc
adc
jae
movlps
lods
gs
mov
or
inc
mov
addl
jae
xlat
test
fdivl
dec
out
mov
xor
sti
mov
ds
sbb
xor
ljmp
popf
fwait
pusha
pop
pop
cs
lea
mov
mov
out
push
mov
mov
lret
inc
fistps
fwait
pop
sub
negl
or
pop
cmpsb
mov
mov
out
fbld
add
mov
fwait
mov
xchg
int
fcompl
test
enter
mov
outsb
scas
icebp
fsts
out
out
xchg
inc
mov
outsb
outsb
and
push
pop
mov
xor
scas
imul
pop
inc
adc
xor
icebp
fcoml
inc
sub
mov
xor
aaa
out
fs
lahf
pop
sbb
adc
ss
das
mov
mov
mov
pop
fnstcw
inc
sbb
in
push
or
cltd
jecxz
je
inc
push
cmp
mov
inc
push
fwait
int
xchg
pusha
pinsrw
mov
es
adc
sub
addr16
mov
insb
mov
jg
sub
push
mov
mov
pop
jo
push
add
fwait
mov
pop
mov
icebp
mov
mov
testb
rcrb
fildl
out
dec
repnz
jle
xchg
test
jae
sub
cmpb
mov
ret
fstps
cmp
push
ret
out
mov
mov
addl
xor
mov
sbbb
and
fsub
and
testl
mov
jecxz
neg
shl
xchg
out
loopne
push
sub
sub
lock
jg
pop
outsb
inc
add
mov
cli
cli
je
mov
pushf
xchg
cmc
insb
outsb
outsb
outsb
outsb
out
loope
xchg
gs
adc
scas
je
sbb
xor
mov
jecxz
enter
cmpsl
testb
cmc
test
sbb
lahf
mov
cmp
ds
fwait
fwait
test
sub
jmp
int3
divb
aaa
ja
xor
inc
cli
rol
xchg
mov
sub
aaa
sub
testb
inc
jbe
mov
int
jae
lret
add
or
jecxz
insb
fimuls
int
jl
pop
or
shll
pushf
or
lock
out
insb
xlat
xchg
mov
andl
cmpsl
shll
inc
clc
insb
mov
xor
dec
add
mov
imul
xchg
push
cmpsb
insb
gs
int
int
jno
or
jns
imul
mov
xchg
in
push
cmp
hlt
xchg
test
mov
xor
inc
fsts
sbb
sahf
int
mov
out
cmc
aas
add
fcompl
xchg
ret
das
adc
cmp
frstor
cli
or
fsubrl
push
sub
inc
pop
jbe
loop
cmp
mov
cli
or
pop
add
cs
fwait
fwait
or
shll
loope
ljmp
sbb
jl
xor
data16
loopne
jmp
xchg
sub
push
fldt
fcomps
hlt
fcompl
imul
mov
push
clc
or
fwait
push
es
loop
push
mov
fdiv
movsb
call
jl
test
xlat
lcall
in
fucomi
mov
jbe
xor
xchg
adc
loop
int
aas
fwait
sbb
sbb
pusha
out
lret
push
jg
sbb
jbe
lds
ror
and
adc
inc
dec
jmp
dec
mov
jae
nop
scas
push
lea
out
adc
in
sub
pop
jno
mov
push
outsb
outsb
aas
pop
clc
dec
push
inc
lahf
sahf
orb
divb
sbbb
and
bound
ror
pushf
out
mov
fdivl
std
fwait
jle
shlb
mov
fadds
pop
pop
and
fwait
fwait
fwait
popa
sarb
sbb
cmpl
lods
je
aam
dec
pop
jnp
pop
mov
xchg
mov
hlt
cmc
mov
addr16
movsl
scas
icebp
add
jbe
push
mov
sahf
mov
int
sahf
push
or
push
push
jbe
xor
push
je
movsb
ds
lds
repz
movsl
xor
insl
push
lock
mov
into
mov
mov
ljmp
jmp
dec
jae
pop
out
jmp
jae
sub
lea
ret
in
sbb
jle
xchg
sti
fsubl
pop
sahf
movsl
adc
and
cmc
mov
les
incb
pop
mull
mov
mov
addb
ljmp
loopne,pt
lock
push
mov
xchg
ret
fstl
cmp
aas
fwait
lods
clc
dec
pop
inc
jl
sbb
outsl
jl
xchg
mov
je
sub
call
or
mov
fldl
loopne
xor
jns
daa
popf
loop
cmc
or
sahf
inc
ljmp
sub
pop
std
call
sbb
sbb
shrl
aaa
aaa
imul
fimull
addr16
rol
aam
mov
test
shl
enter
imul
bound
mov
loope
or
ret
push
pop
insb
nop
lods
xchg
lea
out
pop
mov
mov
jle
sahf
stos
mov
aam
daa
adc
jo
cmpl
sbb
lcall
lods
xchg
add
addr16
sbb
es
ljmp
jae
mov
inc
lea
pusha
addr16
add
daa
and
sarb
mov
sub
cmpsb
repnz
jge
mov
mov
jp
and
fucomi
sbb
dec
aad
xchg
out
ds
mov
sbb
fdivr
add
in
cmovle
inc
pushf
jp
jae
jae
scas
xor
js
hlt
push
dec
add
jne,pt
rol
push
shl
or
adc
mov
mov
call
out
xchg
cmp
mov
lds
das
xchg
inc
mov
lret
adc
popf
inc
aas
fidivrl
decl
sbb
nop
xor
je
jb
mov
lea
mov
sbb
es
sub
or
fnstcw
subb
pop
notb
enter
aaa
ss
jge
fisttps
pop
es
or
data16
dec
cmp
cmp
popa
jne
outsb
outsb
mov
adc
sbb
lea
and
mov
loop
stos
or
fmull
mov
movsb
mov
clc
fsts
test
mov
mov
or
inc
std
aad
or
int
pop
jp
rcrl
idivb
hlt
fwait
stos
shl
aaa
ficomps
pop
jecxz
mov
lcall
add
out
and
je
mov
aaa
std
in
ljmp
pushf
and
push
or
into
cs
inc
lods
xor
xchg
fdivr
xchg
popa
loope
mov
pushf
adc
jns
cmp
lock
or
testb
aaa
aaa
pop
jl
bound
in
jmp
in
mov
aaa
aaa
add
mov
mov
jae
mov
xchg
cmp
scas
lahf
lods
xchg
mov
stos
or
add
sbb
jle
push
outsb
adc
je
cli
icebp
mov
rorl
mov
fistps
cmp
xchg
aad
fadds
fisttpl
mov
sub
lahf
clc
push
outsb
outsb
outsb
lahf
and
hlt
xor
int3
push
push
cld
insb
outsb
std
xchg
ss
cmp
out
cmp
movsl
or
addr16
mov
sarb
sub
lods
pop
stc
out
adc
jae
jae
push
mov
fisubrs
adc
cmp
mov
fildll
shlb
mov
adc
mov
push
mov
cmp
ds
or
push
mov
inc
rolb
add
jae
sbb
stos
ds
pop
pop
and
fldz
stc
in
cmp
fwait
fwait
dec
pop
repz
imul
daa
icebp
sub
mov
out
pop
notl
xchg
pop
sbb
fisttpl
cmp
add
dec
sbb
scas
mov
mov
xchg
cld
repz
mov
inc
leave
loop
repnz
fcompl
orl
fistl
push
pop
xchg
ja
addr16
pmaxsw
push
sub
mov
pop
inc
outsb
outsb
scas
cli
stos
mov
pop
jnp
incl
loopne
outsb
outsb
sahf
xor
sbb
je
sbb
lret
xchg
icebp
test
stc
xchg
jle
fistpll
and
es
dec
push
loope
sahf
es
pushf
fwait
lret
insb
cmp
xor
enter
js
test
jp
mov
and
mov
icebp
into
jns
mov
add
orb
cld
or
rcr
gs
dec
out
sbb
fstl
daa
call
mov
dec
cmp
sti
fdivrl
jno
jbe
movsl
pop
divb
cmpb
test
inc
ds
jno
jmp
mov
cmp
and
stos
xor
insl
in
add
xchg
sub
adc
cmp
ljmp
jae
shl
mov
ss
jno
push
jns
or
stos
push
cmp
pusha
in
jns
lods
lahf
inc
pop
cld
sti
cmp
add
pop
ljmp
sub
sub
add
scas
dec
add
iret
js
outsb
dec
or
mov
rcrl
mov
hlt
pop
lock
adc
inc
mov
lea
add
movsb
jp
out
mov
mov
pop
adc
aaa
es
jae
mov
cmp
xchg
rorl
in
lahf
int
int
sbb
insl
dec
cmp
outsb
outsb
clc
jle
lcall
jmp
leave
insb
enter
inc
jl
std
cmp
xchg
jge
jl
or
xchg
pop
mov
mov
dec
loope
addl
xor
test
out
popf
sahf
aad
hlt
stos
lret
cmp
mov
adc
cltd
mov
aam
xor
ret
sbb
fdiv
rol
push
pop
xchg
aaa
add
movsl
fwait
fwait
fwait
loope
loopne
push
mov
sub
adc
ds
aad
xor
lds
cmp
dec
ret
jge
into
in
inc
addr16
bound
and
xor
out
clc
sub
jmp
imul
je
shlb
adc
out
out
jl
mov
test
pop
shlb
clc
mov
gs
jge
fidivrs
mov
data16
pop
pushf
push
shrb
dec
pop
jle
ss
dec
fistl
sbb
mov
mov
ja
xchg
loop
jb
xor
or
test
jbe
test
mov
adc
jp
mov
pop
cmc
xchg
mov
jo
mov
out
push
fwait
out
push
pop
out
mov
jecxz
xchg
mov
outsb
outsb
pinsrw
xchg
shlb
insb
cmp
jle
adc
xor
cli
jo
cltd
leave
fdivr
test
in
inc
ljmp
adc
sbb
inc
inc
int3
cmp
mov
hlt
jns
loop
sbb
addb
sbb
pop
adc
push
lahf
xchg
add
jge
out
out
mov
fs
out
sbb
xchg
mov
out
pop
fwait
aam
shlb
fwait
add
pop
dec
into
sub
pop
cmc
inc
inc
sub
movsl
pop
test
pop
mov
rol
mov
cmp
mov
loop
xor
idivl
xchg
ds
aaa
and
adcl
loope
cmp
test
subb
push
sbb
lret
mov
mov
lret
loop
pusha
stos
jno
add
mov
pop
out
rolb
insb
lahf
fwait
fwait
sbb
mov
and
jne
fdiv
mov
mov
daa
xchg
adc
sub
into
mov
mov
dec
imul
ds
or
xor
std
xchg
pop
inc
pop
call
mov
mov
outsl
pushl
xor
out
out
mov
ret
pop
mov
jae
jae
data16
inc
mov
jne
push
roll
sti
es
rcr
iret
out
lahf
push
cmc
mov
pushf
mov
fwait
fwait
movsb
lods
fidivl
adc
adc
mov
adc
nop
push
outsb
mov
movl
out
cmpsb
cmp
fisubrs
test
idiv
gs
js
shl
jl
fsubrp
xchg
jae
scas
mov
loopne
or
sub
cmpsb
dec
call
cwtl
pop
fstps
lock
cli
add
ss
sbb
test
cwtl
mov
test
or
loop
addb
les
insl
dec
mov
lret
ss
cwtl
clc
or
mov
mov
mov
inc
jecxz
inc
lcall
xchg
fwait
sub
mov
dec
out
and
mov
sub
fwait
fwait
fwait
fwait
test
jo
pop
insl
cli
cmc
and
mov
cmp
inc
cmp
fdivrl
cmc
test
addb
call
cmp
sti
fdivrl
scas
or
inc
int
int
lea
stc
bound
shrb
jl
sbb
sahf
mov
iret
outsb
iret
fs
and
jno
mov
and
test
mov
out
mul
inc
loopne
ja
jne
ret
xchg
ds
inc
data16
int
lahf
fstpt
jecxz
add
inc
xor
lret
int
out
test
lds
pop
and
sar
ds
sbb
mov
ljmp
cmp
cmp
fnstenv
call
push
stc
into
xchg
mov
xchg
mov
sbb
jl
jo
sbb
lret
and
mov
rcl
mov
add
fdivrl
jae
stos
loopne
lods
fmull
fistl
fdiv
loop
cs
pop
xchg
pop
mov
rolb
loope
icebp
insb
mov
or
jl
jecxz
rorl
cmp
out
movsl
sbb
push
sub
mov
mov
and
adc
cmp
shlb
imul
idivb
adc
mov
arpl
out
cmp
push
stos
test
xor
aaa
aas
fwait
add
test
cmp
dec
cmp
aaa
aaa
aaa
movsl
or
outsb
or
mov
dec
aaa
aaa
aaa
aaa
insb
repnz
or
popf
xchg
out
into
ds
je
fidivs
cmp
leave
iret
jae
stos
dec
leave
push
scas
inc
into
bound
call
jae
es
mov
cld
sub
jae
jae
inc
pop
bound
lds
inc
shlb
sbb
sete
ljmp
and
mov
push
lahf
sahf
out
nop
cmp
jge
clc
fdivrl
jbe
fwait
cmp
ljmp
insb
les
test
jg
lock
call
inc
daa
test
fiadds
adc
paddsw
outsb
outsb
cli
inc
filds
js
cltd
mov
adc
and
fbld
arpl
adc
jg
inc
popf
cmp
out
mov
nop
push
mov
int
mov
jae
imull
or
pop
enter
cmp
shll
nop
cmpb
addl
mov
jp
mov
scas
pop
adc
cmp
jmp
aad
cmp
mov
fdiv
mov
shlb
adcl
mov
fmull
mov
lods
lcall
insb
sub
sub
and
adc
mov
aaa
aaa
dec
push
sti
push
jmp
mov
pop
and
cmp
sahf
cmp
in
ret
cmp
jg
mov
out
rolw
sbb
leave
sub
fwait
fwait
fwait
fwait
add
test
mov
fwait
fwait
fwait
mov
jne
aas
pop
aas
jne,pt
dec
aas
jecxz
mov
pushf
addl
ret
dec
bound
std
insb
or
cmp
loop
add
stos
lods
test
in
sub
cltd
bound
mov
mov
scas
jb
out
pop
jo
pop
sahf
int3
or
mov
out
add
in
movsb
dec
lahf
fwait
fwait
outsl
or
mov
and
aaa
push
pop
pushf
xor
inc
imul
mov
imul
xchg
fcom
repz
lock
cmc
pop
int
or
sbb
pop
scas
shr
pusha
bound
insb
sbb
mov
das
insb
shlb
mov
insl
sahf
pop
push
pop
mov
sarb
in
inc
in
lea
test
mov
dec
cmp
jp
cmp
mov
mov
mov
imul
mov
aaa
cld
fisubs
mov
pushf
push
xor
cmc
mov
add
sbbl
mov
mov
les
fs
jle
dec
jne
inc
movsb
push
ds
mov
inc
shlb
imul
clc
mov
cmp
movsb
sbb
icebp
mov
sbb
jns
int
and
xor
adc
and
xor
jmp
pop
or
outsb
aas
fwait
fwait
iret
hlt
cmp
mov
std
jle
shll
sahf
testb
imul
out
decb
les
fs
out
mov
imul
pop
cmp
pop
xchg
inc
pop
fiadds
call
cmc
movsb
mov
sbb
int
xchg
lock
sbb
out
mov
int
aad
lea
nop
sub
shll
movsb
xchg
aaa
aaa
aaa
aaa
mov
push
lcall
cmc
fbstp
aaa
aaa
aaa
push
adc
mov
adc
out
cmp
scas
cmpsb
pusha
mov
jl
cld
popa
adc
cmp
and
notb
xchg
loopne
insl
sahf
sub
out
add
mov
fwait
mov
cmp
iret
je
xor
xchg
adc
add
lea
int3
sub
aaa
jl
pop
mov
fwait
and
xor
mov
aaa
aaa
aaa
out
nop
or
int
push
mov
imul
arpl
pop
sub
outsb
nop
mov
jno
lods
nop
cli
and
xchg
add
cli
fcom
mov
push
adc
xchg
jge
cld
mov
insl
rolb
outsb
inc
jmp
sarl
fucomip
aas
test
push
repnz
jmp
and
icebp
xchg
mul
mov
pop
adc
in
add
ret
add
sbb
fwait
sbb
test
or
adc
imul
cmp
sbb
mov
adc
add
lcall
loope
iret
out
cmp
pushf
inc
add
aas
jb
cmpsl
sub
pusha
inc
cmp
mov
aaa
mov
cs
jbe
adc
aas
adc
ds
test
mov
mov
jp
cltd
je
aad
enter
iret
out
dec
mov
xor
mov
pop
mov
jge
sub
scas
loopne
pop
cs
popa
std
hlt
mov
addb
add
dec
clc
dec
cmpps
jp
jle
out
sub
xor
cmp
out
jne
cmpsb
adc
add
std
insb
outsb
adc
enter
inc
adc
jecxz
clc
movsb
add
mov
aaa
in
cmpsb
mov
lea
push
loop
mov
jmp
repnz
add
mov
push
aas
push
jg
outsl
cmp
daa
pop
mov
int
mov
mov
xchg
aad
mov
xor
jb
push
mov
lea
ja
aam
iret
pop
mov
and
shrb
pop
or
cmp
inc
push
adc
and
xor
out
out
push
int3
xchg
inc
bound
mov
cli
sahf
fstpt
dec
es
mov
inc
dec
mov
subb
dec
cld
insb
outsb
sahf
in
popf
and
scas
je
out
out
mov
scas
pop
dec
push
out
dec
mov
out
dec
jmp
sub
inc
adcl
out
push
scas
dec
leave
inc
or
loopne
xor
scas
or
test
mov
mov
lahf
js
push
cmp
inc
mov
sbb
mov
adc
xor
fdecstp
mov
mov
mov
fiadds
in
test
iret
out
and
jno
sti
xor
pop
ds
pop
std
mov
cmc
xor
push
lds
jae
into
test
fmuls
leave
lds
mov
jae
mov
mov
jge
in
xor
lock
xor
arpl
std
dec
iret
sbb
mov
cmc
mov
dec
xor
fwait
leave
sbb
inc
loop
ret
mov
fmuls
scas
clc
jge
repnz
lret
push
aas
mov
mov
cld
insb
push
fdivl
out
out
mov
decb
add
dec
test
xor
bound
arpl
iret
out
pop
push
shl
mov
xchg
int
pop
add
inc
cmp
iret
sub
lahf
je,pn
lret
and
iret
in
subl
stc
sub
out
aaa
pop
jb
mov
mov
pusha
sbb
xlat
mov
pop
dec
xchg
lea
in
push
rol
push
sbb
lds
int
int3
into
sbb
nop
insb
filds
fidivs
bound
mov
or
repz
cmp
scas
mov
cmp
je
mov
adc
pop
adc
rcrb
add
jns
sub
lahf
test
sbb
sbb
pop
mov
jmp
sahf
mov
cmp
out
jbe
jp
cmp
cwtl
mov
out
jne
into
loop
xor
cmp
int
aas
dec
or
lret
arpl
cmp
rcr
mov
jae
sti
or
push
dec
test
mov
loope
addr16
dec
sbb
ljmp
cltd
movsb
leave
insb
iret
out
out
fldl
dec
movsb
das
cmp
xor
sahf
or
bound
pop
loop
xchg
inc
lods
lds
pop
or
ja
lret
adc
int
ret
add
fwait
fwait
cmp
inc
mov
fucom
and
cli
out
fistpl
js
mov
flds
fwait
fwait
cmpl
stc
mov
and
or
jb
xchg
aaa
aaa
aaa
outsb
mov
subl
movsb
jle
out
mov
int
mov
outsb
scas
out
xchg
xchg
xchg
dec
lods
push
in
das
rclb
xchg
jp
outsb
cli
mov
fisubrl
sbb
push
xchg
adc
xor
sti
lock
f2xm1
mov
aaa
mov
jl
fldenv
or
inc
cltd
into
rolb
jae
sti
cmp
fimuls
mov
sub
jae
jae
scas
xchg
test
loop
inc
movsb
pop
int
addr16
lea
and
jp
es
sub
dec
push
ds
repz
es
pop
mov
aaa
ja
xchg
mov
shl
imull
scas
cli
sarb
or
adc
outsb
outsb
repnz
loopne
push
pop
inc
loope
push
inc
cld
ret
pop
out
lret
leave
mov
inc
jae
shrb
pop
xchg
xchg
fcmovbe
aam
push
adc
sti
pop
or
inc
push
sub
mov
fdivrl
aaa
aad
sbb
mov
sahf
in
test
xor
stos
mov
cmp
xor
add
int
push
mov
mov
enter
ret
add
jle
sbb
mov
fs
mov
push
je
mov
push
mov
adc
sbb
dec
addr16
dec
cwtl
call
jmp
imul
testb
sahf
in
outsb
cmp
cli
jne
dec
inc
outsb
outsb
outsb
outsb
aam
dec
pop
in
pushf
dec
in
xchg
data16
loopne
outsb
adc
test
fcompl
or
fs
cmpsl
mov
and
inc
inc
cli
scas
or
jb
add
sbb
adc
int
mov
adc
testb
data16
aas
xchg
daa
nop
cltd
int
in
pop
pop
push
or
cmpsl
mov
int
int
or
xor
adc
lahf
mov
mov
adc
data16
mov
int
int
pop
mov
sub
xchg
add
add
in
enter
jae
mov
cwtl
mov
stos
lahf
int
ds
outsb
cmc
int3
sub
adc
out
popf
ficomps
mov
sbb
jl
es
xchg
outsb
scas
cli
fstps
fadd
inc
movsb
inc
sub
outsb
outsb
outsb
outsb
aad
dec
movsb
scas
mov
lods
or
outsb
outsb
lods
sub
jp
movsl
push
mov
aaa
lea
mov
mov
inc
test
faddl
jg
outsl
arpl
cli
mov
xor
scas
clc
out
in
xor
jae
jg
inc
xchg
gs
outsb
outsb
outsb
outsb
mov
push
aad
jp
inc
cld
ds
jl
in
cs
shll
fwait
sub
sti
sbb
loope
arpl
pusha
xor
je
pop
xchg
mov
stos
les
add
mov
and
and
gs
iret
out
cmp
test
cmp
outsb
aas
mov
stc
sub
push
pop
cmp
out
jl
jns
pop
std
xor
jl
lahf
pop
mov
daa
outsl
iret
rclb
and
fsubl
int3
inc
filds
push
push
xchg
popa
jae
sti
mov
xor
mov
in
addr16
jns
mov
mov
dec
sub
int
int
in
jle
mov
enter
mov
bound
xor
mov
lods
scas
mov
cwtl
dec
xor
fwait
ds
aaa
aaa
xchg
sub
inc
rolb
sbb
hlt
mov
or
bound
mov
sub
cli
lods
call
dec
pop
stc
sub
sbb
loope
mov
lock
aaa
push
cwtl
daa
mov
sahf
sub
cmpsb
adc
aaa
divb
les
mov
mov
xorl
cmp
das
ljmp
repnz
pop
rcrl
push
clc
cmp
stc
insb
sarb
sti
mov
or
dec
mov
cmp
jae
push
adc
shll
lock
inc
jae
jae
mov
push
pop
stos
mov
jo
lret
jno
mov
jp
sub
pop
ret
inc
mov
pop
loop
add
movsl
mov
cmp
divb
aaa
cld
insb
xlat
pop
add
icebp
inc
push
aam
aas
popa
pop
jbe
aaa
jmp
loopne
popf
mov
fstpt
cmp
inc
sub
subb
jle
aaa
push
sub
sub
ds
fwait
sbb
in
and
std
sbb
push
sbb
mov
mov
dec
adc
aam
xchg
and
movl
mov
aas
fwait
fwait
fwait
enter
iret
mov
insb
sbbl
ret
aaa
mov
sti
rorb
call
mov
and
aaa
aaa
aaa
inc
or
and
mull
ds
cwtl
push
lods
push
test
or
sub
mov
and
pop
lret
daa
outsb
outsb
outsb
mov
aad
xor
imul
dec
outsb
outsb
outsb
outsb
cs
pop
pop
cltd
dec
scas
js
mov
outsb
outsb
or
sbb
pop
jecxz
out
fldcw
stc
aam
sahf
in
and
out
lods
mov
sbb
or
dec
dec
push
sbb
outsb
outsb
outsb
aas
xchg
dec
sahf
and
fldl
ret
outsb
outsb
outsb
push
stos
lea
adc
idiv
insb
sub
repnz
push
mov
shrb
out
and
insl
cmp
mov
fcompl
mov
xor
jb
sub
ja
outsl
jecxz
jae
inc
mov
mov
mov
or
inc
xchg
outsl
push
bsr
dec
push
fcmovu
fdivrl
aaa
mov
rcl
or
sbb
inc
scas
clc
xor
inc
sti
aad
iret
js
dec
stc
mov
hlt
insb
imul
mov
mov
ret
icebp
cs
mov
pop
sub
adc
and
ret
cmp
aaa
aaa
fsubrs
xchg
je
ljmp
or
cltd
repz
mov
sar
push
cmp
fisubl
dec
aas
dec
mov
jbe
adc
mov
das
cmp
and
in
xchg
or
dec
lahf
fwait
fwait
aam
cmp
jl
adc
into
xchg
jns
jbe
loopne
outsb
fisttps
leave
pop
movsl
arpl
into
rcll
aaa
push
jge
xchg
xchg
push
xchg
push
and
sub
xchg
cmp
aaa
xchg
jno
movsl
inc
and
or
fxam
jae
fstps
aam
cmc
jbe
fs
xor
mov
outsb
push
jp
call
test
mov
mov
adc
out
out
dec
or
arpl
push
lret
or
addr16
jae
cmp
xor
adc
mov
pop
xchg
add
mov
cli
pop
cmp
icebp
les
outsb
pop
fbstp
xchg
aaa
mov
or
sahf
imul
pushf
sbb
pop
andl
push
pop
xchg
std
sub
movsl
ss
aaa
aaa
cmp
repz
or
push
std
push
jge
stos
pop
add
into
and
dec
xchg
fwait
aaa
push
jge
or
jle
xor
inc
ljmp
sbb
outsb
cs
jno
cltd
fiadds
or
push
pushf
xchg
pop
aaa
into
add
outsb
leave
leave
mov
add
or
outsb
outsb
outsb
outsb
popa
fistl
adc
mov
outsb
xor
mov
mov
les
mov
fs
xor
popa
je
add
xor
ds
push
adc
or
fwait
fwait
fwait
sbb
cmp
lea
aaa
and
shlb
scas
add
sbb
sbb
enter
lds
outsb
outsb
test
jmp
in
inc
push
xchg
sub
lods
cwtl
mov
mov
sahf
ss
cmp
shlb
mov
out
out
dec
jns
test
sbb
xchg
adcb
out
addr16
fs
jo
movsw
jmp
jmp
ds
mov
shrb
loope
cld
add
shrb
pop
aas
sbb
adc
fisubrs
mul
xorl
mov
jle
int
pop
stos
or
or
sub
fcmovu
das
bnd
mov
pop
sarb
jns
jae
and
idivb
out
xchg
icebp
sub
inc
lods
xchg
dec
xchg
xor
loopne
pop
or
call
test
call
addr16
in
cmp
sbb
xchg
mov
out
jo
and
jae
out
xchg
les
jmp
inc
mov
das
test
aaa
sub
int
mov
mov
es
dec
sbb
insb
pop
jmp
loope
and
rcl
dec
cmp
jne
lcall
jae
jae
push
movsb
lds
in
xchg
insb
sbb
jae
lahf
cmpsl
adc
pop
jae
jle
cmp
imul
cld
mov
jo
jae
ret
andb
popf
cmp
jle
xor
addr16
cmp
in
filds
les
mov
ficoml
xor
sub
roll
mov
test
mov
and
lock
mov
xchg
out
cmp
xchg
rcrl
jl
jae
jae
je
pop
dec
sbb
fwait
or
lret
push
lods
addr16
mov
mov
push
fstpt
test
pusha
xorb
or
inc
out
adc
mov
sub
imul
shrb
cs
push
sar
jbe
ljmp
inc
xor
pop
mov
out
clc
cmpsl
inc
xchg
xor
pop
bound
inc
loop
bound
sub
popf
push
pmulhuw
bound
adc
outsb
das
adcb
ljmp
xchg
and
outsb
outsb
fwait
enter
imul
idiv
insb
outsb
dec
icebp
mov
sub
adc
sbb
rcll
aas
or
int3
mov
outsl
sarb
xchg
adc
aaa
sbb
repz
andl
xor
addr16
inc
ja
lahf
fwait
in
pop
addb
outsb
aaa
xor
jb
cmc
push
push
mov
dec
sub
ss
test
xchg
mov
xchg
ljmp
jne
jno
or
testb
pop
inc
mov
mov
mov
dec
pop
out
xor
int
int
pop
pop
mov
mov
sbbb
ss
test
fdivrl
jecxz
in
xor
neg
fdivrl
ja
idivb
imul
flds
jmp
movsb
and
mov
sti
push
sub
cmp
mov
lock
repnz
fs
fcompl
cld
or
sahf
mov
push
adc
dec
int3
pop
pop
clc
pop
pop
nop
les
call
fdivs
xchg
cmp
push
pop
xor
mov
ret
ret
filds
fisttpl
leave
sub
dec
insb
sbb
test
int
imul
fistl
cmp
cmp
cmp
mov
push
jle
xor
cmc
adc
fwait
lahf
push
movsl
pop
push
push
push
cwtl
aaa
mov
movsb
or
pop
cld
sahf
repz
fwait
stos
ds
sahf
add
ljmp
fwait
mov
mov
ficomps
lahf
push
loopne
loope
icebp
mov
sub
pop
push
xchg
inc
int3
ret
rcl
cmp
pop
jl
lahf
jae
mov
jae
xchg
test
xor
sub
add
addr16
call
ja
clc
mov
test
jno
fsubl
out
aad
mov
jle
and
mov
int
pop
sbb
mov
out
out
int
cmp
paddsb
aad
sub
outsb
xchg
out
icebp
movsb
shll
outsb
shlb
jl
paddd
in
mov
addr16
xchg
mov
mov
xor
out
inc
jp
out
out
inc
andl
cmp
sub
jle
iret
fwait
cli
movsb
lods
adc
adc
inc
push
inc
loopne
imul
jae
inc
jb
fs
adc
dec
adc
pop
cmp
enter
out
popl
inc
add
sub
jbe
fldl
rcrb
xchg
out
out
xor
xchg
popa
sti
mov
jnp
inc
loope
iret
and
pop
decl
out
cmpsb
scas
repnz
push
xchg
sub
mov
cld
pop
push
cli
or
out
cmp
inc
mov
popa
daa
shrl
test
mov
jns
jmp
jge
test
outsl
fmul
mov
icebp
insl
push
lock
mov
or
mov
pop
mov
scas
mov
cld
jle
divb
ficoms
push
insl
pop
sbb
out
mov
xchg
shll
test
sahf
inc
or
je
adc
nop
test
stos
test
push
out
int
int
sarb
ds
std
shrb
iret
int
cmpsl
mov
sbb
mov
lea
dec
jne
iret
cmpsb
outsl
loopne
andl
jae
sti
dec
insb
ret
ret
dec
jo
rolb
jae
outsl
push
lret
pushf
lods
cwtl
es
repz
jnp
jo
inc
push
mov
mov
mov
imul
fmull
addr16
mov
jnp
xchg
leave
clc
fcompl
add
xchg
jnp
aas
push
outsb
cs
cli
mov
xchg
lahf
int
in
sub
xchg
dec
and
test
push
fdivr
mov
mov
mov
or
out
and
lods
clc
test
js
mov
imul
aaa
aaa
mov
sarb
pushf
mov
leave
mov
cwtl
fdivrl
aaa
push
adc
pushf
mov
mov
imul
sbb
push
inc
sti
aas
pushf
cs
sub
mov
fists
jae
and
frstor
push
outsl
dec
fwait
and
mov
sahf
push
out
sub
xor
sub
dec
sbb
repnz
lock
mov
add
fucomip
insb
aad
jbe
ss
js
outsb
bound
dec
xor
repnz
fcoml
ss
into
mov
ret
push
sahf
or
outsb
adc
data16
cmc
jo
aad
jle
inc
rep
jle
sbb
mov
fwait
mov
and
push
xor
push
mov
and
bound
sub
push
inc
cmpsb
je
push
notl
js
cmp
push
dec
xchg
jae
sti
lret
movsb
jmp
ret
add
adc
xor
lea
add
sub
hlt
ret
mov
sbb
xchg
shll
or
jg
jae
ss
aaa
pop
loopne
mov
add
rol
aas
dec
mov
jge
andb
push
or
sub
sbb
ret
out
ficoms
fwait
ja
outsb
movsb
push
or
mov
sbb
mov
jae
xor
aad
pusha
cld
out
mov
mov
cli
adc
es
push
mov
pop
shl
cmp
or
popl
idivb
mov
sub
js
in
ret
out
stos
lret
loop
pop
inc
pushf
lret
in
dec
inc
pop
fdivrl
call
int
mov
jae
fnstcw
dec
mov
ret
sub
fcompl
pop
jb
in
stos
mov
jae
jae
sbb
clc
xor
push
cmp
lds
mov
popa
sub
jae
lds
inc
stos
inc
pop
out
sub
lods
in
test
jae
and
add
in
insl
xor
add
stc
bound
daa
xsha256
cmpsb
aam
lahf
fistl
data16
mov
pop
fdivrl
idivl
mov
dec
jge
dec
push
lock
leave
aas
push
mov
mov
ret
ds
push
jbe
mov
out
lret
push
rcl
outsb
clc
inc
jge
inc
adcb
push
cwtl
pop
les
out
mov
out
sbb
pop
pop
and
cwtl
mov
ds
ss
or
adc
icebp
pop
rorl
pop
cmpsb
iret
int
jle
sbb
andw
pop
mov
out
out
aam
mov
xchg
sahf
pop
push
add
sbb
sbb
movsl
pop
jb
aaa
loope
lock
push
clc
add
add
aaa
mov
mov
jnp
fsubrl
mov
fwait
fwait
sub
xlat
out
mov
add
jne
fwait
fwait
fwait
xchg
or
xchg
xchg
lock
imul
lcall
scas
fidivrl
jbe
test
or
inc
out
enter
idivb
aaa
cmp
shll
cld
mov
ss
lock
lcall
jmp
ds
movsl
scas
repz
sbbl
loop
xchg
inc
or
addr16
enter
mov
lock
lret
iret
int
mov
adcl
stc
dec
cld
test
adc
aaa
aaa
bound
fdivs
jp
jbe
nop
es
mov
jp
sub
jae
jno
mov
mov
xchg
inc
pop
jae
jae
push
jnp
ljmp
xchg
fdivl
and
dec
and
jne
push
out
xorb
inc
adc
jae
or
jle
into
or
mov
xchg
inc
mov
test
in
mov
xchg
cmp
mov
sbb
mov
int
addr16
push
fildll
add
int3
add
out
notb
sti
aaa
aaa
aaa
mov
test
lods
movsb
aad
pop
repz
pop
neg
ds
adc
fwait
jae
bound
out
rcll
sbb
lods
cltd
or
bound
dec
iret
mov
scas
cmp
pop
mov
std
test
lods
add
cmp
jmp
fs
enter
jecxz
fmuls
fwait
fwait
fwait
loope
inc
clc
outsl
mov
sbbb
push
mov
add
lcall
cli
popa
pop
call
arpl
cmp
nop
sub
lahf
std
mov
fsts
sbb
mov
popf
sbb
int3
rolb
jecxz
xor
cs
xchg
jno
shl
out
jmp
adc
test
shlb
jmp
sbb
outsb
outsb
or
addr16
data16
xchg
jns
mov
sub
add
cmp
jne
mov
and
fs
mov
out
mov
rclb
cmp
push
sub
mov
ret
pop
push
clc
adc
jmp
ds
xchg
lret
xchg
or
sub
loop
xor
mov
mov
jecxz
fs
repz
add
dec
jge
ds
add
lock
xchg
or
insl
mov
or
add
test
push
outsb
mov
nop
into
mov
test
mov
mov
scas
cmp
shr
push
loop
add
das
fcmovu
fwait
fwait
ds
xor
and
and
jmp
mov
adc
sti
jge
daa
data16
and
bound
rol
mov
fucomi
ficoml
mov
xor
jae
ds
fwait
mov
imul
es
xor
mov
xor
inc
mov
mov
in
inc
xchg
mov
sub
ret
xor
jle
and
push
jecxz
clc
cmc
sub
fmuls
icebp
test
inc
sahf
mov
mov
mov
cs
xor
adc
jno
out
fcomi
jle
push
pop
repnz
loope
leave
loope
sahf
int
mov
pop
sbbb
and
inc
cli
loopne
sbb
lahf
int
fwait
xor
gs
add
adc
and
in
loop
and
mov
int
in
dec
sbb
xchg
xchg
popf
imul
das
in
ret
daa
jp
mov
inc
pop
mov
ljmp
mov
cmp
inc
xor
or
test
sbb
jae
jae
or
jmp
sub
in
mov
popa
sbb
iret
jl
lods
lods
mov
mov
subl
jp
dec
cmp
mov
out
test
into
dec
xchg
mov
loopne
lret
mov
loopne
mov
cmpsb
xor
rcrb
cmc
pop
iret
outsl
adc
and
idivl
sarb
adc
out
in
jp
test
mov
sbb
push
scas
aam
xor
iret
fldl
pop
sbb
lret
mov
push
pusha
dec
in
push
jmp
pushf
sbb
mov
arpl
js
cli
mov
inc
out
rclb
addr16
test
jns
sub
pop
mov
scas
pop
fdivr
inc
sub
mov
notb
loope
pop
hlt
sub
enter
adc
ret
cmc
fdivrl
and
xor
int
scas
xchg
lods
movsl
mov
sbb
inc
clc
iret
lods
addr16
clc
mov
mov
out
dec
imul
or
push
mov
aaa
push
cld
insb
sbb
insl
push
and
ds
lods
clc
enter
mov
fs
test
pop
cmc
sub
popa
jo
push
push
lods
cmp
adc
fiaddl
into
pop
outsb
mov
testb
out
sti
fdivl
mov
sub
ds
xchg
ss
mov
aam
out
mov
cli
sbb
ljmp
add
xchg
mov
jle
mov
sub
cmp
mov
pop
lds
in
push
loopne
pushf
mov
lahf
outsb
repz
test
aaa
flds
movsb
scas
sub
ret
dec
aas
mov
jae
in
pop
mov
arpl
mov
in
push
leave
xchg
and
ret
in
call
mov
jbe
jns
int
dec
and
cmp
aaa
mov
aaa
adc
mov
fdivr
dec
jge
sub
jle
ljmp
bound
push
push
clc
sbb
xchg
xchg
cmc
mov
dec
adcb
mov
pop
not
aad
xor
test
sbb
xor
mov
dec
sti
paddb
shlb
xchg
test
mov
pop
rclb
int
int
and
cmpsl
add
mov
xorl
sub
out
testb
pusha
push
test
aas
mov
in
sub
fidivl
push
int
push
push
adc
sti
inc
js
or
sbb
adc
lods
dec
sbb
xchg
dec
sub
and
adc
mov
rcr
icebp
mov
push
js
mov
mov
movsb
xchg
and
cmp
cmpsl
mov
rolb
lahf
in
addr16
fstpl
xchg
cmp
xchg
add
adc
inc
shll
mov
sbb
lea
jo
outsb
outsb
outsb
xchg
in
sbb
int3
scas
sahf
dec
pop
adc
aaa
aaa
ja
mov
mov
dec
mov
lock
test
ss
lds
inc
push
inc
pop
pusha
lahf
pop
mov
movsl
or
push
adc
dec
in
addr16
out
push
sbbl
mov
int
int
adc
inc
push
cmc
rcl
jae
enter
jecxz
rclb
leave
lods
mov
sbb
int
aas
fwait
test
pop
xor
adcb
add
mov
out
push
es
aad
mov
int
adc
cli
mov
jae
jae
jnp
ljmp
and
lock
addr16
ja
or
xchg
xchg
loopne
dec
xchg
xchg
push
or
outsb
aam
ret
dec
daa
outsb
outsb
outsb
outsb
cltd
or
pop
movl
js
outsb
outsb
into
insb
pop
cli
lret
cmp
xrelease
scas
push
ret
pop
or
outsl
jno
xorb
cld
adcb
xchg
jl
shr
cltd
cmpb
fsubrl
std
jmp
clc
test
xchg
dec
cmp
dec
xor
mov
ror
cmc
pop
dec
jae
jae
lds
push
mov
mov
out
adc
mov
inc
fildl
pop
es
iret
out
jnp
lods
sub
jle
outsl
ret
inc
jno
cld
jp
or
ds
insb
dec
inc
mov
out
fs
les
lcallw
mov
test
mov
push
lods
jae
jae
shrl
inc
jle
mov
daa
mov
sub
adc
cmp
hlt
adc
inc
sub
sub
pop
jmp
add
mov
xchg
sbb
cmp
in
addr16
add
pop
in
in
inc
sahf
loop
push
dec
or
int
push
or
push
fdivrl
out
enter
cmc
sub
out
cmpsb
mov
fmull
push
inc
fsts
xchg
push
inc
fcompl
cli
fxch
in
add
out
push
mov
js
push
loope
int
mov
cltd
repnz
cmp
add
int
int
mov
pop
cmp
rcr
out
test
push
fs
push
repnz
lea
rolb
insl
popl
cmpsl
push
mov
push
cli
lock
movsb
lea
or
outsb
outsb
pop
es
es
push
mov
lea
outsb
outsb
outsb
mov
adc
cmp
ret
or
sti
insb
fidivrs
pop
or
mov
mov
insb
lcall
aaa
mov
sti
xor
push
jno
stc
movsl
pop
adc
aaa
mov
mov
adc
dec
aas
fstpt
jecxz
es
pop
cld
add
aaa
jp
mov
xor
adc
into
jae
or
bound
arpl
dec
imul
jae
jae
sub
inc
add
or
pop
bound
sti
adc
xchg
mov
jns
int
int
cmpsl
cs
aad
jecxz
daa
inc
es
xor
mov
test
mov
ds
inc
sub
or
cmp
in
stos
or
jae
fdiv
das
pushf
dec
pop
lret
clc
shrb
mov
mov
mov
out
divb
ja
sahf
sbb
mov
aaa
iret
int
mov
insl
jo
inc
arpl
stc
inc
adc
xchg
add
insb
outsb
cs
push
test
xchg
lret
push
mov
and
dec
clc
jge
lcall
inc
ja
iret
mov
test
jl
aas
incb
aad
insl
mov
mov
dec
aaa
aaa
aaa
aaa
int3
sub
or
xor
jnp
aaa
aaa
aaa
inc
stos
jo
adc
sub
fstl
adc
fdivl
lcall
sub
pop
movsl
fmuls
out
jnp
mov
in
ljmp
cs
jge
cmp
mov
lret
mov
ss
aaa
mov
mov
mov
dec
fwait
fwait
cmp
sub
mov
sbb
xchg
cmpsl
inc
sub
pop
iret
mov
jno
mov
iret
out
inc
dec
adc
rclb
dec
mov
pop
mov
adc
out
jae
aaa
cmpsb
test
pop
mov
pop
rolb
add
rorl
jmp
fnstcw
lea
xchg
or
jae
xchg
jns
jnp
mov
mov
adc
addr16
pop
scas
inc
xlat
or
cmp
ror
mov
fcmovu
and
int
lahf
xchg
les
stc
lahf
int
int
jge
and
scas
outsb
push
cmc
or
fwait
cmp
sbb
mov
xchg
sub
inc
ss
aaa
aas
lahf
adc
mov
in
sti
sarl
mov
repnz
aas
fwait
fwait
iret
mov
in
jl
scas
mov
out
jbe
insb
decb
jl
dec
out
jae
xchg
mov
ds
lods
out
bound
test
jle
lss
sbb
pop
push
ds
sub
shlb
or
jp
mov
jnp
sub
adcb
roll
mov
scas
inc
pop
inc
xchg
loop
mov
mov
daa
mov
out
out
cmp
jecxz
aam
lods
jle
test
test
pop
cmpsl
into
mov
mov
fwait
cmp
or
pop
aas
sti
fisubrs
roll
push
ss
mov
incl
cmp
fwait
cmp
sbb
jmp
in
sbb
push
fdivrs
mov
jg
clc
cmp
xor
dec
clc
push
jle
pusha
dec
popa
inc
sbb
aas
mov
add
sahf
gs
fwait
stos
ds
out
test
imulb
fwait
fwait
fwait
fwait
cs
jecxz
mov
mov
mov
xor
mov
push
call
rcrb
ret
xchg
addr16
repnz
and
loop
mov
add
filds
sahf
lock
xchg
jae
out
and
rcrb
mov
insb
mov
and
jae
jae
test
lcall
xchg
ljmp
and
xor
out
fbld
fwait
dec
out
out
dec
jbe
mov
out
inc
aas
fcmovne
out
rcrb
mov
outsb
outsb
outsb
outsb
fisubl
addr16
cmpl
outsb
outsb
outsb
outsb
lods
rorb
xsave
sbb
and
mov
mov
add
mov
push
mov
lock
outsb
push
mov
adc
clc
enter
adc
mov
out
addr16
mov
dec
int
out
xchg
cltd
out
jge
movsb
adc
pop
add
ja
bound
shlb
jp
mov
pop
arpl
adcb
inc
lret
pop
jge
dec
rorl
jge
data16
leave
mov
pusha
std
jno
ficoml
xlat
push
shlb
insl
sbb
clc
mov
mov
mov
int
test
mov
pusha
mov
pusha
mov
add
in
fwait
and
outsl
or
cmp
lock
ret
sub
xchg
sti
pop
cmp
mov
xchg
nop
pop
jo
pop
cmp
iret
out
xchg
das
jno
imul
pop
jae
jae
scas
scas
fnstenv
cmpsl
mov
data16
pop
jmp
xor
xchg
mov
outsb
clc
sbb
cmp
pop
xchg
jg
in
ret
pop
or
outsb
outsb
cs
lods
mov
or
adc
jl
outsb
outsb
outsb
outsb
in
fiadds
pushf
out
mov
outsb
outsb
outsb
test
addr16
inc
rcll
add
jne
outsb
outsb
mov
gs
in
mov
js
das
movsb
mov
jl
or
out
and
fwait
fwait
dec
mov
sub
mov
sbb
test
or
fwait
mov
clc
mov
and
mov
mov
and
jno
cld
insb
cs
scas
xor
or
add
dec
fcomip
js
test
xchg
xor
fisubrs
lret
cli
inc
rorb
pop
push
dec
fistl
sub
stc
scas
sahf
fwait
fwait
mov
pop
mov
je
cmp
xchg
and
sarb
outsb
xor
xchg
pop
aad
call
xor
bound
int
or
mov
sub
sbb
mov
xchg
mov
vpaddusb
jle
stc
mov
mov
inc
xorl
mov
mov
xchg
scas
mov
fsubrl
cmpsl
push
jne
inc
fildl
jb
sbb
movb
aas
sahf
push
adc
out
push
daa
and
jae
fdivrl
dec
movsl
cmp
xorb
ds
xor
add
mov
dec
or
fwait
fwait
fwait
out
lret
out
xor
fwait
fwait
fwait
jnp
xor
pop
mov
bound
jns
or
push
ss
aaa
aaa
and
int3
xor
pop
dec
dec
mov
cli
ret
jp
and
lock
shrl
outsb
outsb
outsb
loop
lcall
scas
std
stos
xor
insb
outsb
cmp
arpl
pop
js
jmp
xlat
mov
rcl
outsb
inc
iret
and
sarl
dec
inc
mov
icebp
insb
inc
shr
out
sahf
mov
test
pop
cmpl
push
fdivrp
mov
ret
das
call
shrb
inc
cmc
andl
and
aaa
fisubs
mov
mov
in
sti
rcll
das
inc
bound
in
aaa
mov
int
mov
clc
pop
clc
cmp
mov
std
cmp
ds
in
inc
dec
jno
jns
sub
mov
lock
ficomps
push
fsubrs
jecxz
mov
pop
pusha
xor
fwait
mov
cmpsl
hlt
or
insb
outsb
popf
mov
jns
jno
jl
les
push
or
dec
xor
mov
jb
jge
xchg
jns
sahf
int
out
cltd
in
pop
lds
xchg
cmp
loope
loopne
insb
lahf
fwait
iret
mov
fs
mov
shrl
iret
int
out
xchg
int
iret
lret
gs
jecxz
insb
jge
sub
fwait
jle
sbb
test
fwait
inc
dec
stos
dec
fcompl
adc
out
or
rolb
movsb
mov
lret
popf
adc
add
mov
cmc
test
fcoml
push
mov
mov
mov
jl
aam
mov
mov
mov
mov
pop
add
andb
push
loopne
mov
nop
xor
repnz
ss
scas
mov
rcr
or
popa
sub
shlb
adc
aaa
xchg
fistpll
bound
lahf
stos
jle
in
jbe
xlat
aaa
jle
mov
aaa
aaa
aaa
pop
popf
pop
into
jle
shrb
or
in
mov
xchg
cmp
pop
and
or
mov
xor
hlt
popf
mov
addr16
xchg
push
xchg
mov
jo
out
adc
dec
daa
sti
add
out
cltd
adc
sahf
xchg
xor
or
clc
and
jl
out
and
js
outsb
bound
fmuls
imul
cmp
data16
fcomi
push
je
loopne
inc
mov
mov
or
pop
or
jmp
out
sub
cmp
add
jle
adc
adc
cmp
mov
in
and
xor
mov
xchg
int
int
push
sub
mov
or
aaa
aaa
mov
movsb
in
outsl
xor
mov
pause
jle
aaa
xor
pop
in
inc
and
cmp
sub
popa
and
xor
adc
fisttpl
mov
sub
ds
ljmp
aas
fwait
stos
packssdw
jle
inc
fbld
outsb
outsb
outsb
outsb
mov
adc
cmpsb
enter
mov
lock
adc
ficompl
mov
ds
or
nop
test
dec
xchg
and
mov
and
inc
cmpl
push
adc
pushf
mov
inc
iret
cmc
jl
fs
mov
fists
out
inc
repz
mov
jo
or
cltd
inc
cmp
pop
lcall
or
xchg
jbe
push
aam
xchg
xchg
mov
adc
in
out
ljmp
dec
daa
pushf
jae
dec
js
inc
add
movsb
inc
subl
push
adc
movsl
stc
inc
cmpl
and
mov
mov
cwtl
jl
mov
and
lcall
lock
mov
cmc
jo
mov
icebp
mov
sub
sub
jae
jae
mov
movb
orb
addr16
fisubrl
sub
push
aam
jne
test
push
mov
test
sub
pop
out
fs
repnz
lahf
fcomi
cmp
mov
cmc
or
and
rolb
loop
push
inc
push
pop
or
sti
dec
add
in
loopne
mov
imul
loop
and
jo
lahf
mov
mov
fildl
leave
fisubrl
dec
mov
int
aas
je
loope,pt
in
xor
mov
fs
xchg
jb
aaa
std
shl
inc
inc
jo
push
xchg
addr16
xchg
xor
imul
mov
loope
and
cmp
lock
lds
notl
cwtl
and
xor
rclb
inc
ficoms
jae
jae
rcrb
adc
push
jae
jae
jno
or
pop
mov
loopne
add
js
lods
push
iret
jmp
fistpll
xor
insb
outsb
inc
xor
shlb
mov
aam
into
mov
jae
jnp
xchg
jnp
and
ret
fistl
movsb
push
andb
xchg
push
aad
fwait
fwait
fwait
ds
ret
sbb
ds
push
fcmovnb
mov
lahf
fwait
enter
gs
ljmp
sbbl
pushl
xor
adc
out
lds
lock
cli
cs
out
movsb
sbb
out
inc
clc
cld
xor
xor
pusha
jae
jae
sub
test
rol
sbb
jae
or
xor
mov
push
in
and
daa
mov
in
or
fwait
pop
shl
aam
addr16
pop
sbb
mov
pushf
test
mov
cs
sbb
dec
mov
out
lea
inc
mov
pop
jge
repz
movsl
cmp
inc
mov
daa
pop
xchg
rcrb
mov
in
push
aas
fwait
outsb
push
aad
das
mov
sbb
lods
iret
loop
jne
lret
sub
mov
out
push
bound
mov
jbe
mov
fcmove
jne
les
jae
sti
call
leave
rcrb
inc
jae
jae
or
sub
jle
fbstp
xor
dec
test
mov
inc
push
and
cli
flds
adc
into
sbbl
insb
stos
xor
adc
cmp
mov
sbb
xor
mov
and
arpl
in
mov
mov
dec
scas
insl
stos
mov
js
outsl
sbb
call
mov
mov
test
xchg
test
fcompl
dec
ret
clc
jge
addr16
out
std
xor
inc
fnstenv
dec
mov
dec
adc
push
or
adc
cmpl
jae
sahf
add
fldt
rclb
test
std
cmc
imul
sarb
mov
in
cmove
pop
add
outsb
mov
cmp
dec
or
test
icebp
insb
outsb
dec
popf
cmp
repnz
into
pop
test
loop
ds
into
icebp
adc
mov
cmp
mov
es
sub
aad
popa
push
ljmp
gs
xchg
pop
cmp
cmc
xor
aas
mov
jecxz
adc
lds
jae
cmp
js
inc
stos
pushf
mov
aaa
and
aaa
aaa
aaa
xchg
push
ss
enter
loopne
fcomps
push
pop
adc
sahf
lock
dec
out
aas
fwait
fwait
fwait
mov
jno
seto
fdiv
cmp
out
sbb
into
into
xor
fcompl
lods
aam
movsl
xorb
fwait
fwait
or
mov
sub
cmp
jns
jge
push
lcall
mov
es
rclb
sbb
fistpl
xchg
cltd
out
or
jae
popl
inc
fidivrl
jmp
les
lock
mov
mov
cmp
mov
ret
pop
jns
xor
inc
adc
outsl
adc
sub
hlt
mov
add
icebp
adc
out
or
cs
and
xchg
add
icebp
inc
rcll
int
sbb
xor
popa
mov
inc
aaa
idivl
or
fdivrl
and
pop
lock
cmc
mov
data16
repz
mov
push
movsl
jl
jge
sub
shll
jl
aaa
aaa
pop
loop
je
jecxz
movsl
and
fwait
mov
sar
pusha
pusha
int
xchg
push
xor
mov
xchg
out
pop
addb
add
ror
dec
leave
daa
loope
jae
sti
shll
bound
int3
push
lock
mov
sbb
pusha
inc
cli
in
gs
lds
lock
scas
jp
arpl
inc
test
popf
mov
mov
jl
sub
lods
xchg
loop
mov
push
cmpl
jns
jae
daa
lock
adc
loop
xchg
dec
sbb
imul
mov
call
iret
iret
push
or
icebp
pop
xor
sti
ljmp
mov
add
test
loopne
push
xchg
jge
mov
ret
mov
jecxz
sti
nop
xlat
out
xlat
icebp
jl
mov
jbe
fdivr
shlb
scas
je
pop
ss
sub
fdivl
push
arpl
xor
loop
xchg
aam
icebp
imul
fisubl
fistps
cli
fldenv
mov
mov
nop
test
das
out
out
mov
and
inc
sub
cs
out
push
shlb
push
bound
outsb
outsb
clc
ss
roll
xchg
cli
insb
outsb
outsb
mov
adc
adc
xchg
cwtl
call
jb
jae
jp
insl
mov
and
lods
xor
jmp
and
push
lock
dec
outsb
mov
repnz
jp
cmp
pop
jl
push
call
nop
pop
aas
outsl
and
dec
cmp
out
test
icebp
insb
xor
sub
outsb
outsb
scas
clc
sahf
add
push
jmp
adc
xor
repnz
pop
outsb
outsb
outsb
outsb
out
decl
push
mov
rorl
jle
cmc
insb
jne
test
dec
aad
pop
dec
aas
or
xchg
out
cmc
mov
mov
and
cmp
cmp
js
jne
push
sahf
fdivr
insb
outsb
scas
push
xchg
mov
push
xchg
pop
cs
pop
je
pop
jno
repnz
cmp
in
call
fcompl
mov
sub
cmp
inc
sarl
repz
lods
notb
cs
xor
out
adc
popa
adc
fiaddl
daa
std
push
lock
int
pop
lods
iret
adc
leave
mov
loop
pop
sub
xchg
jo
xchg
je
mov
ss
aaa
xor
add
cmpsb
cmp
leave
pop
adc
cmp
cmc
xor
cmp
mov
jae
mov
push
stos
bound
mov
jae
cmp
das
in
sahf
sti
cmp
xchg
test
or
iret
out
jae
adc
lcall
sarl
call
jbe
pop
jmp
je
scas
fcmovnbe
mov
mov
adc
or
notb
cld
pop
jle
inc
out
fsubrs
rolb
div
fisttpll
sub
outsl
xchg
jbe
aas
push
xchg
std
sahf
fcmovne
pop
adc
jnp
or
stc
mov
int
mov
addr16
mov
or
cwtl
xor
jne
dec
dec
lret
icebp
mov
iret
push
int
out
jg
out
sbb
arpl
jle
lret
add
push
fs
imul
push
js
and
jnp
or
leave
mov
jae
jnp
ds
cmp
in
jmp
int
in
negl
ffree
adc
or
cmp
ror
int
xchg
pop
mov
iret
jmp
fld
test
or
clc
sbb
add
fimull
scas
sub
xor
inc
jge
jne
in
pop
icebp
mov
scas
movsl
mov
xchg
lds
mov
or
lods
clc
push
push
stos
test
xchg
dec
aam
out
shr
clc
xchg
pop
outsb
lahf
lods
cmpsl
inc
cwtl
jecxz
add
pop
cld
insb
outsb
int3
jmp
pop
push
rclb
mov
mov
je
cmpsb
push
outsb
rcll
xchg
iret
mov
dec
sbb
clc
fldcw
push
das
and
dec
sub
popa
jg
push
add
cld
jl
bound
fdivrl
faddl
xor
add
inc
lods
cmpsl
cmp
adc
add
jae
pop
xor
test
enter
mov
in
mov
dec
out
inc
scas
rcr
adc
sub
cli
ds
shl
jae
pop
sbb
out
xor
or
insb
outsb
sub
in
lods
or
bound
cmp
aaa
mov
nop
dec
test
jbe
push
lea
mov
aaa
aaa
aaa
inc
daa
cmp
add
fidivrs
inc
lock
aaa
aaa
aaa
mov
pop
in
sti
fdivrl
out
lret
jl
stos
xchg
popf
inc
out
add
int
int
in
rcrb
aaa
aaa
mov
jbe
xor
pop
dec
xchg
pusha
mov
pop
aas
fwait
jle
pop
cwtl
imul
and
mov
cmp
std
in
pushf
lret
xchg
jle
fistl
pushf
not
mov
fnstenv
cmpsb
xor
loopne
cld
mov
fcmovne
out
popf
lret
divl
push
cmpsl
xor
or
mov
pop
mov
lods
mov
clc
faddl
xor
inc
inc
out
fildl
andl
or
in
sahf
mul
mov
shr
mov
mov
fbstp
out
out
or
sbb
or
out
push
inc
fwait
pop
in
sbb
les
jb
pushf
ror
add
inc
leave
lods
xchg
mov
or
lahf
int
mov
ss
inc
pop
push
sbb
jge
fisttpl
cmp
mov
xchg
xchg
out
ss
fwait
fwait
fwait
fwait
dec
xor
addl
sahf
fwait
mov
xchg
xor
jae
out
xchg
andb
hlt
insl
xchg
shlb
stc
and
xchg
mov
fadds
loope
jae
fdivrs
xchg
rcrb
xlat
jno
rorb
sbb
adc
insb
lahf
sbb
popa
sahf
sti
xchg
cmpsb
out
out
in
in
xor
lcall
sub
lds
int
fldl
sbb
add
lock
int
int
mov
insl
cld
mov
add
pop
cmc
cmpsb
divb
sbb
idivb
dec
sbb
fisubl
dec
ret
out
out
xor
repnz
lock
sbb
mov
kmovw
mov
adc
inc
xor
psrld
pushf
andb
xor
insb
cs
flds
insb
cmpsl
jno
ret
ror
testb
js
out
cltd
clc
iret
cmp
inc
cld
push
xor
hlt
test
sbb
jno
data16
jno
scas
hlt
add
add
out
out
xor
or
pop
lret
shrl
jae
out
sub
int3
and
fldenv
aaa
aaa
mov
mov
push
cmp
les
bound
push
movsl
nop
fdivrl
mov
out
or
pop
xchg
xor
sti
fstps
xchg
nop
jb
add
jae
mov
pop
into
and
jae
dec
fiadds
dec
pop
les
cmpsb
jle
xlat
mov
pop
movsb
loopne
adc
cs
lock
pushf
xchg
or
testl
ret
sbb
push
mov
cmp
push
pusha
mov
push
test
gs
imul
pop
fistps
in
jno
mov
arpl
push
out
cmp
mov
rcll
insb
push
add
cmp
xchg
sahf
push
mov
cwtl
fwait
fwait
fwait
fwait
cmc
and
and
jl
cltd
push
cmpl
cmp
add
mov
daa
fidivrs
test
or
and
adc
fdiv
mov
cli
inc
fnstsw
push
lods
loop
xchg
add
imul
mov
add
fisttps
pop
ja
pop
push
cld
scas
mov
pop
cli
cmp
lea
jl
lea
mov
push
outsb
push
rclb
repnz
std
roll
out
scas
rol
add
movsb
mov
lds
fwait
fwait
fwait
jne
sahf
ds
gs
lods
test
adc
ja
and
or
mov
outsl
sbb
out
mov
test
mov
adc
divl
fisttpl
cmpb
std
sub
fwait
nop
sti
mov
stc
loop
mov
push
into
test
jbe
cli
dec
or
subl
aaa
aam
bound
fiadds
pop
or
sub
out
mov
mov
mov
jae
cmp
fcomi
sub
xchg
lahf
mov
mov
mov
or
inc
movsb
push
int
and
pop
pop
add
outsb
outsb
fsubrl
repnz
fimull
insb
mov
push
int
add
pop
jle
aad
push
repnz
or
mov
inc
xor
ss
insb
dec
xchg
push
ja
fs
sti
push
jp
mov
inc
pop
jbe
ret
ss
jae
stos
imul
pop
scas
fadd
mov
xorb
loop
mov
dec
and
std
mov
mov
sub
icebp
mov
mov
popa
push
jno
cld
testb
lods
mov
pop
out
out
xchg
and
sarb
out
adc
insb
adc
xchg
jae
iret
out
aas
ret
pop
push
or
jae
int3
mov
cmp
incb
ret
divb
out
jge
cmp
ds
shlb
nop
ret
mov
jno
movsl
movsl
cmp
test
add
out
notb
and
and
dec
push
pop
iret
out
out
into
jp
das
jge
xor
inc
loope
nop
mov
cmp
dec
into
dec
shl
es
mov
mov
mov
lret
enter
dec
mov
icebp
add
outsb
lcall
sarl
fdiv
jae
jmp
sbb
xor
cmp
pop
xor
pop
mov
inc
rolb
or
int
add
pop
in
sbb
inc
sbb
push
stos
xchg
cmp
add
mov
out
loop
dec
adc
dec
aam
out
idivb
je
mov
shrb
sbbl
xor
push
mov
pusha
bound
dec
sbb
in
sbb
fldl
mov
or
hlt
add
ret
push
xchg
xchg
por
push
mov
call
jp
ss
leave
std
dec
es
fcoml
ljmp
neg
std
cmp
cmp
add
hlt
imul
movsl
fists
mov
jae
dec
ret
sbb
xorl
test
xor
pop
or
iret
out
cltd
inc
imul
sbb
pop
js
scas
inc
or
or
push
push
push
cltd
lock
clc
aas
add
sub
cmp
jecxz
fcompl
mov
or
test
cmc
jmp
nop
js
mov
adc
jle
iret
and
aaa
ja
xor
lcall
mov
aaa
aaa
push
mov
cmpsl
cmpsl
lea
gs
mov
mov
dec
jp
leave
jb
test
outsb
scas
cli
fcompl
pop
cli
js
adc
cmp
push
pop
shl
jbe
jge
enter
test
dec
lret
out
push
add
cmp
outsl
loopne
mov
pop
les
sbb
mov
imul
mov
es
enter
lahf
fcomi
dec
xor
aaa
mov
pop
adc
outsb
outsb
pop
or
push
dec
cld
ret
push
outsl
lods
adc
outsb
push
cmpsb
fidivrl
cli
push
jmp
orl
jae
mov
ds
test
aam
jae
jo
loopne
ffreep
mov
mov
es
sub
sarl
and
xor
mov
push
lahf
int
cmp
mov
mov
imul
jl
ret
pop
out
push
inc
pop
leave
mov
rol
mov
xchg
sahf
lcall
mov
aaa
aaa
aaa
shrl
inc
gs
jo
xor
sbb
aaa
aaa
loopne
nop
out
adc
adc
in
fwait
fwait
fwait
clc
fidivrl
xor
push
add
cmp
push
stos
dec
xchg
mov
sti
insb
mov
aaa
mov
in
popf
fisubl
js
adcb
lahf
fistl
roll
jbe
xor
dec
cltd
loope
aaa
aaa
aaa
addr16
push
rolb
repnz
mov
inc
lret
push
cmp
fsubrl
mov
fwait
xorl
addr16
fcmovu
inc
xchg
cs
in
dec
and
mov
mov
pop
lcall
fistpll
aam
sbb
mov
in
addr16
push
pop
mov
aaa
jns
add
jge
sbb
push
sarl
xchg
test
loop
pop
lock
movsb
jp
sbb
mov
mov
dec
das
cmpsl
pop
xor
cs
aaa
aaa
aaa
lods
jmp
inc
add
inc
clc
clc
adc
sub
lods
movsb
inc
push
icebp
repnz
ds
loopne
cmc
or
outsb
mov
pop
lret
push
aam
dec
enter
ret
fisubrs
imul
or
pop
cmp
divb
pop
shl
ds
movsl
mov
dec
inc
jle
cli
push
xchg
gs
adc
sahf
xor
mov
sahf
outsb
or
stc
inc
lock
iret
sub
sub
movsl
inc
mov
jbe
jae
sti
rcll
mov
in
inc
sbb
ds
out
xchg
gs
jb
loope
in
out
test
mov
fnstcw
in
ficompl
mov
fwait
fwait
inc
test
mov
pop
out
and
inc
lahf
clc
jnp
bound
bound
int
int
hlt
andb
fisubl
jecxz
jge
iret
int
dec
adc
xchg
ljmp
dec
jmp
ss
aaa
ss
scas
or
dec
push
adc
inc
sahf
inc
sbb
loop
mov
fsubrl
ret
stos
and
mov
clc
test
sub
loopne
mov
clc
loope
dec
pop
push
pusha
sbb
outsb
outsb
sahf
xor
mov
or
push
imul
inc
push
add
fstl
out
addr16
xor
insl
jle
test
xlat
mov
out
ffreep
inc
js
push
push
push
sub
adc
cmp
mov
cltd
daa
ret
mov
mov
out
jp
clc
xor
add
mov
push
jl
sub
icebp
imul
scas
pusha
in
push
mov
jecxz
ret
leave
mov
mov
out
subb
jmp
mov
shll
cmp
shlb
fwait
fwait
fwait
fwait
xor
in
ds
sbb
cld
jp
int
pop
idivb
nop
xor
ds
loopne
cmp
xchg
cld
push
mov
cmc
lahf
cmp
cmp
sahf
mov
inc
inc
repnz
mov
mov
adc
jg
inc
enter
mov
je
adc
hlt
flds
inc
mov
adc
int3
mov
or
mov
and
jae
repz
xchg
xchg
imul
inc
mov
addr16
push
adc
dec
rcrl
les
jge
cli
xlat
pop
or
fwait
fwait
push
jb
ljmp
iret
dec
out
xlat
sbb
pusha
stos
jge
cltd
into
xchg
lods
cmpsb
sbb
push
inc
loopne
mov
in
cmp
movsl
adc
ds
imul
popf
outsb
outsb
outsb
outsb
jecxz
xor
cmpsb
add
add
outsb
outsb
js
mov
aam
hlt
lahf
push
mov
jae
mov
in
pop
mov
mov
xor
mov
aaa
cmpsl
pop
out
out
loope
or
lea
cmp
push
idivl
iret
ja
and
adcb
cmp
arpl
jns
in
sar
out
jo
iret
dec
mov
aad
xchg
dec
int
int
scas
push
lods
in
je
xor
fcompl
rorl
addb
ss
fdiv
fildl
popf
shrb
mov
addr16
cmp
jbe
insl
in
mov
adc
xchg
ljmp
lock
cli
fstps
add
leave
cld
or
xorl
out
scas
push
adc
sbb
sbb
sti
inc
js
pop
fcoms
fisubs
xlat
jle
lahf
in
push
add
cs
adcb
out
mov
sti
dec
jae
arpl
jno
adc
cltd
inc
les
stc
fsts
push
insb
and
fwait
fwait
fwait
sbb
test
sar
sub
fwait
fwait
fwait
fwait
dec
pop
sub
lea
test
enter
push
nop
jge
out
mov
cmp
or
fistl
mov
xor
mov
mov
ret
push
pop
aas
subb
pop
jbe
fdivrl
and
and
pop
mov
ds
lret
push
jae
outsl
push
lds
and
addr16
jae
shlb
inc
jge
sbb
idiv
shlb
adcb
adc
out
adc
aam
jle
xor
icebp
repz
testl
mov
nop
pop
sbb
movsb
pop
lahf
int
jmp
pop
jl
adc
mov
adc
mov
je
jecxz
in
subb
pop
pop
ljmp
jae
jae
int3
orb
mov
mov
addr16
jae
rorb
std
push
arpl
push
mov
push
stc
mov
sub
or
pop
cmp
mov
xchg
inc
jp
insb
outsb
mov
cld
mov
cmpsb
xor
aad
inc
int
fcoms
sbb
sahf
push
mov
jp
je
outsl
lret
and
loope
mov
fcmovnbe
fldenv
pop
adc
lcall
jmp
xor
pop
ret
int
xchg
inc
loopne
fisubrl
jno
xor
jp
jle
aaa
mov
in
mov
movsb
data16
jae
fsubrl
xchg
aaa
pusha
es
and
int3
cmp
testb
repnz
mov
sti
nop
sbb
add
jnp
scas
inc
inc
daa
jae
jae
xor
lds
shlb
jae
pop
cmp
sub
loop
xchg
mov
je
sbb
adc
cmc
mov
cmpsl
int3
mov
pop
inc
xchg
mov
loopne
insb
xlat
push
idivl
aaa
bound
testb
loop
or
jge
xor
outsb
jg
push
and
push
insl
ss
aaa
pop
or
and
fstpt
fcmovne
push
jo
int
lea
pop
es
push
ds
icebp
out
pop
lods
ret
pop
xor
insb
gs
sub
fcmovnbe
mov
adcb
cltd
roll
fwait
fwait
fwait
sub
xor
push
adc
shl
cmp
pop
xchg
push
mov
fcompl
subb
inc
push
clc
imul
fadd
xor
idivl
xor
loope
fcompl
mov
xchg
mov
fidivrs
aas
fwait
dec
lcall
int
jge
cmp
xchg
lcall
mov
in
fsubrp
inc
movsb
out
adc
dec
jge
iret
mov
adc
jmp
mov
inc
out
divb
icebp
lcall
jmp
rcrb
lods
pop
pop
loopne
daa
jle
loopne
fs
cs
pusha
ret
xor
mov
sub
pusha
xchg
test
and
lock
icebp
mov
mov
int
mov
jl
ficompl
sub
xchg
xchg
cld
vpcmpeqb
sub
insb
scas
mov
leave
movsl
mov
sub
les
pop
cmc
insl
cli
adc
mov
pop
dec
dec
lret
cmc
and
push
roll
pop
iret
in
movsl
jne
in
push
add
push
cs
int
xlat
out
xchg
pop
addr16
scas
adc
lea
les
jae
rolb
in
and
xchg
mov
cmp
xchg
inc
jge
push
jl
mov
rcll
lea
sti
and
push
xchg
or
out
cmpsb
xchg
rol
in
cld
and
adc
out
mov
out
xorb
lahf
fs
mov
pop
push
cmpsl
push
inc
in
in
mov
pop
aas
sahf
mov
xor
into
int
int
mov
jmp
pop
xor
add
cmp
popa
sub
out
js
ss
test
cmpsl
push
pop
sti
add
divl
mov
addr16
sahf
test
xor
sub
rorl
xor
shr
push
add
mov
adc
js
es
fstl
mov
pop
jne
in
dec
fbld
dec
icebp
mov
cwtl
ljmp
sbb
cmovs
jo
fdivrs
mov
mov
xor
or
inc
mov
insb
outsb
aas
fistpl
jns
sbb
push
pop
gs
xor
clc
insb
scas
clc
push
xchg
scas
inc
mov
jno
mov
cmp
add
xchg
rorb
or
dec
pop
or
adc
xlat
and
mov
jo
mov
jnp
or
out
cmp
jle
sbb
jae
ficoml
lods
jno
bound
andb
popa
cwtl
loope
push
lods
incb
fdiv
stc
jmp
pop
leave
and
adc
mov
testb
pop
cmp
inc
mov
test
andb
adc
cs
mov
lock
mov
aad
outsl
loop
fdiv
ljmp
mov
aaa
jbe
shrl
in
xchg
movsl
and
fldt
jmp
shll
mov
mov
cltd
and
inc
int3
dec
jle
pop
imul
sub
xchg
push
cmpsl
out
mov
enter
jns
outsl
clc
pop
pushf
pop
ret
rolb
and
test
and
scas
imul
outsl
jo
enter
outsb
push
ror
data16
dec
xchg
inc
mov
aaa
pop
jge
push
xchg
loope
adc
aad
mov
cmpsb
mov
cwtl
fisttps
or
adc
icebp
mov
scas
or
inc
cmpsb
xor
cmp
test
push
jns
int
imul
cmc
mov
inc
fsin
and
mov
sbb
addr16
fs
clc
aad
push
push
stc
sbb
inc
sub
out
or
test
add
out
cmp
sub
lock
sbb
mov
mov
xor
movsl
xor
or
adc
ficoml
loop
jae
mov
push
mov
fldcw
enter
sbb
xor
idivl
iret
pusha
mov
inc
iret
das
push
mov
sar
fmull
into
out
mov
sbb
adc
fstps
jle
pop
mov
inc
mov
mov
fnstenv
not
mov
popf
cmp
push
or
fcompl
js
or
push
and
lods
lods
clc
fdivl
in
lds
or
xchg
pop
rcl
inc
cmp
mov
and
jno
das
fdivrl
mov
sbb
int
sahf
sub
lret
mov
enter
shll
or
pop
insb
push
mov
push
mov
fisubrl
ret
js
jge
leave
or
xor
mov
imul
cli
out
or
loop
test
cmpsb
push
cltd
dec
insb
inc
cld
insb
outsb
jge
add
pop
shll
jb
mov
std
insb
xchg
sub
mov
mov
mov
ficoms
push
inc
arpl
dec
push
push
fstpl
xchg
pusha
cwtl
mov
movsb
fbld
cld
mov
in
xchg
dec
clc
push
fcompl
push
sbb
inc
jne
loope
adc
pop
jmp
jo
cli
adc
push
imul
and
fstps
xchg
jbe
mov
es
pop
les
push
outsb
loope
sbbl
rcrb
push
mov
outsb
outsb
outsb
test
lea
sbb
stos
sbb
rol
cmp
insl
dec
cmpsb
push
ret
and
cwtl
loope
push
dec
lar
in
out
push
add
mov
sbb
in
jmp
mov
mov
inc
push
sahf
push
aas
js
jmp
aaa
aaa
aaa
aaa
or
sbb
into
push
inc
sub
cmp
add
in
xor
out
adcl
sbb
xchg
mov
lods
pop
addr16
fdivrl
setns
dec
sbb
rorl
jecxz
jne
hlt
or
mov
daa
call
ljmp
aad
test
push
lods
push
imul
aad
adc
mov
fdiv
test
or
xor
mov
std
lret
in
clc
lcall
sti
insb
pop
test
inc
jns
clc
cltd
mov
mov
sbb
sbb
sahf
inc
mov
add
cmpsb
shrb
mov
ss
xchg
fcoms
test
pop
adc
cmp
xchg
popf
push
pushf
jl
dec
rolb
movsb
aas
jmp
dec
and
outsb
jp
addb
push
push
mov
cmp
inc
data16
pop
or
jae
fstps
push
aad
repz
mov
int
in
pushf
rorl
inc
sbb
iret
sbb
out
xorb
bnd
mov
test
aaa
lods
iret
out
hlt
scas
out
ret
add
pop
aam
mov
cmc
push
addr16
ret
sub
and
dec
adc
cltd
push
mov
mov
aas
test
scas
cmpsl
mov
fmull
push
insb
popa
test
daa
test
add
bound
cmc
lock
sbb
jl
out
out
mov
cmpsl
xchg
or
roll
jae
iret
out
stos
jmp
xchg
cli
in
add
mov
dec
or
out
cmp
lahf
orl
scas
test
cmp
out
ss
gs
iret
dec
rclb
lahf
in
jae
and
mov
out
mov
and
or
js
mov
ds
fwait
fwait
movsb
mov
dec
aad
adc
mov
sahf
mov
repz
fdiv
ja
or
xchg
xchg
hlt
loope
or
cmp
faddl
pop
movsb
sbb
data16
test
lock
fdivrl
in
test
imul
pop
mov
in
xor
jl
cmp
pop
and
out
mov
cmp
into
adc
clc
in
or
stos
jbe
enter
mov
int
push
push
inc
adc
dec
inc
mov
int
int
pop
or
sub
mov
faddp
mov
mov
cli
fsubrl
data16
fsts
cmp
loopne
iret
jbe
cld
mov
dec
in
les
jg
mov
or
jbe
mov
out
dec
outsb
outsb
outsb
outsb
xchg
push
cmpsb
std
daa
adc
push
cmp
std
insb
shlb
or
loop
pop
sahf
cli
mov
cmp
test
jmp
or
fwait
or
xchg
push
jp
ja
sbb
enter
aam
xor
lods
pop
in
out
fists
loop
out
cmp
cmp
push
jle
inc
xchg
jo
push
cmp
jmp
js
lods
or
sbb
fstpt
lods
dec
loope
xor
fwait
daa
fmul
xlat
mov
fldt
lods
outsb
outsb
outsb
outsb
out
dec
push
scas
dec
and
mov
aaa
push
jl
test
push
inc
adc
stos
or
shl
push
lahf
ds
ljmp
test
arpl
jno
imul
xchg
test
push
int3
xchg
cmp
je
xorb
aaa
mov
int3
adc
lcall
jecxz
rcll
mov
shl
fiaddl
cmp
sbb
shl
dec
jge
loop
hlt
into
adc
stos
aaa
mov
fnstcw
in
dec
adc
sbb
jp
outsb
outsb
ds
mov
stos
inc
adc
pop
fdivrs
fwait
pop
in
lret
inc
jae
lds
insb
outsb
aas
or
mov
cltd
mov
cwtl
mov
stc
dec
outsl
fists
or
outsl
loopne
inc
pushf
push
dec
jp
fildl
in
or
dec
pop
movsl
jbe
outsb
outsb
lahf
fwait
out
sarl
cmp
jge
clc
insb
and
outsb
lds
insb
mov
inc
mov
xor
mov
aad
inc
lret
cltd
ret
loopne
test
sbb
cltd
inc
inc
fwait
fwait
cmp
sub
mov
xchg
jae
popa
fwait
push
push
iret
add
sub
mov
xorb
inc
fs
cmp
in
push
inc
add
mov
int
int
fstps
xchg
out
add
sbbl
sbbb
outsb
test
into
add
mov
fmul
or
cld
sub
sti
outsb
outsb
outsb
outsb
push
sbb
jle
mov
cmp
add
insb
outsb
repz
mov
sti
xlat
test
lods
xor
xchg
jg
stos
addr16
dec
ret
fimull
jae
outsl
outsl
loop
cmp
sub
ss
out
adc
push
jge
cli
and
aaa
jecxz
inc
movsl
mov
mov
mov
inc
dec
ds
fildl
adc
aad
aas
fwait
fwait
fwait
pop
mov
aam
add
loopne
dec
iret
int
adc
jp
mov
stos
push
shrb
dec
into
data16
cmp
mov
xlat
test
sbb
xchg
loopne
nop
scas
fwait
fwait
sbb
lcall
push
out
xor
fwait
fwait
cmp
out
xchg
mov
pop
fadd
push
hlt
jp
cmpsb
sbb
int
xchg
push
mov
mov
mov
int
jbe
cmpsl
xchg
fcomps
das
push
inc
pop
mov
mov
dec
in
and
sahf
mov
ret
int3
sbb
out
mov
inc
sbb
mov
in
add
or
adc
mov
shl
lret
pusha
loopne
cmp
movl
sbb
push
sbb
sbb
lds
dec
mov
sub
pop
sbb
iret
out
out
ja
pop
fildl
or
push
mov
shlb
shr
int3
std
sarl
jne
imul
mov
sub
stos
movsb
hlt
insb
outsb
dec
movsl
jp
mov
outsl
cmp
add
dec
orl
push
jl
mov
stos
stos
outsl
movsb
or
addr16
lods
jl
inc
fstps
insb
scas
js
scas
lret
das
outsb
lahf
enter
loop
jno
jmp
data16
stc
test
in
test
outsb
mov
mov
fdivrl
std
xchg
xor
enter
add
cmp
sti
fmul
fcompl
inc
rclb
sub
cmc
xor
fcmovu
ds
pop
sbb
out
pop
call
scas
mov
clc
rcl
addr16
fnstcw
adcb
add
divb
in
flds
mov
push
cwtl
shl
addr16
xchg
js
pop
cmpsb
mov
xor
scas
cmp
int
in
mov
inc
rcrb
dec
mov
aaa
aaa
mov
and
fcmovb
xchg
or
aaa
aaa
aaa
mov
xlat
and
aaa
aaa
aaa
test
lods
iret
pop
add
bnd
ds
xchg
xchg
subb
xchg
pop
scas
aaa
icebp
fcompl
addr16
add
xchg
fdivrl
sub
inc
xchg
cmp
fcmovb
push
insb
in
addr16
fdivr
out
pop
das
test
sbb
js
out
lahf
in
push
jmp
xchg
mov
aaa
mov
jle
or
iret
and
jae
dec
cmp
or
daa
mov
or
mov
movsl
lds
jp
and
mov
ret
xor
ljmp
pop
jecxz
cwtl
mov
imul
jecxz
push
adc
dec
ja
clc
mov
outsb
mov
pop
enter
outsb
outsb
outsb
outsb
pop
scas
loop
out
shr
call
testb
xchg
mov
out
je
lds
mov
in
ljmp
hlt
fstp
xchg
add
fidivl
dec
mov
hlt
push
out
lahf
lods
lcall
iret
pop
mov
inc
dec
out
out
aad
ficoms
sbb
fisttpl
outsb
outsb
aas
push
cmc
sub
xchg
addl
fnstcw
pop
adc
ljmp
add
jg
in
inc
pop
add
cmp
mov
adc
int
int
dec
repnz
jmp
stos
mov
inc
clc
mov
push
push
lods
pop
pop
movsl
mov
mov
and
ffreep
cmp
int
les
fbstp
jo
mov
inc
add
fcompl
testb
inc
popf
movsb
fiaddl
mov
add
sbb
cld
push
jmp
test
das
ret
cmp
repnz
repnz
mov
int
jbe
int3
mov
xchg
cmp
push
xchg
xor
mov
mov
call
inc
mov
test
xchg
sbb
test
nop
dec
shrb
lods
jge
outsb
aas
cmp
rep
add
in
lods
test
mov
mov
mov
outsb
enter
fyl2x
mov
cmp
sub
mov
cmc
movsb
mov
jbe
mov
ret
mov
out
cmp
into
je
mov
cmp
add
loopne
call
dec
call
aaa
aad
xor
push
iret
rclb
andb
mov
or
xorb
aas
ss
xor
cltd
pop
xor
imul
xchg
repnz
fwait
fwait
fwait
mov
imul
sbb
bnd
sbb
movsb
lea
lds
sbb
out
fidivrl
and
dec
jl
mov
mov
cmp
xlat
mov
scas
dec
sarb
jge
sub
sbb
out
out
pop
out
sub
xchg
rcrl
fcmovne
out
out
push
adc
out
lods
es
jbe
sbb
outsb
lahf
push
roll
xor
xchg
mov
mov
jne
cmp
or
fucomip
test
je
into
rol
rorl
nop
ljmp
adc
movsl
dec
pop
and
inc
aas
bound
scas
dec
clc
mov
fcompl
test
shrl
clc
lea
sub
mov
aam
aas
mov
inc
sub
mov
sbb
jno
mov
push
mov
jg
cmp
call
fstpt
int3
imul
aas
fwait
fwait
fwait
cmpsl
lcall
jae
add
mov
mov
out
in
shl
roll
hlt
pop
inc
jb
add
int3
imul
addl
push
mov
and
popf
dec
ficoml
cld
aad
jae
jae
enter
std
scas
mov
xchg
sbb
mov
andb
repnz
pop
push
xchg
jl,pt
icebp
cs
lock
mov
push
sub
nop
icebp
cwtl
jp
insb
outsb
xchg
clc
sub
bound
rorb
jp
lock
js
add
cmp
in
xor
pusha
xchg
mov
int
int
es
hlt
imul
iret
mov
xor
xchg
pop
call
pop
adc
mov
arpl
or
mov
enter
jge
fiaddl
rcr
enter
std
insb
aas
fstpt
inc
pop
push
mov
inc
cmc
xchg
mov
out
or
in
lahf
call
out
fwait
stos
pop
out
fstl
push
sbb
mov
aas
fwait
fwait
pop
rcll
fs
jmp
dec
imul
mov
addr16
xchg
fwait
xchg
adc
push
inc
mov
add
out
adc
xor
bound
test
out
out
lcall
jg
arpl
ljmp
sbb
ret
loope
xor
mulb
cmp
into
mov
jo
fwait
fwait
fwait
xchg
push
jnp
pop
arpl
and
mov
nop
and
cmc
ss
loope
xor
mov
out
shlb
xchg
mov
ljmp
mov
test
xor
cmp
rcrb
sar
insb
and
pop
fbstp
adc
lods
shlb
movsl
sbb
aaa
loope
bswap
sbb
sti
sarl
pop
add
dec
mov
mov
dec
in
jle
push
cmp
lock
adc
iret
push
rcll
neg
in
mov
iret
rcll
pop
fdivrl
stos
push
jbe
jbe
cs
cli
insb
scas
clc
mov
jns
inc
mov
daa
addb
int3
xchg
test
adc
jb
das
and
out
popa
cs
loope
xchg
cld
sub
pop
jecxz
jne
push
sub
call
repz
push
lods
repnz
sbb
paddb
aas
popa
jl
jge
loopne
push
pop
add
sahf
outsb
outsb
cs
or
dec
mov
pop
bound
lods
sbb
pop
xor
stos
jne
mov
lods
and
cmp
lret
in
pop
lock
sub
cmp
jbe
fdivrl
mov
rcrl
cmp
cmc
ja
adc
or
lahf
in
outsb
and
dec
sbb
push
or
lock
mov
test
mov
pop
cmp
loop
fwait
fwait
fwait
add
popf
xchg
inc
fs
cmp
and
fwait
addr16
xlat
enter
lock
testb
mov
cmp
lahf
fcmovu
shrl
jmp
adcb
ret
mov
sqrtps
push
jl
sub
iret
inc
sub
pop
lret
nop
shr
stos
cmp
negl
insl
and
inc
mov
adc
jno
stos
push
aam
mov
insb
cltd
mov
fwait
fwait
push
call
in
and
sbb
pop
cmp
fs
scas
lods
dec
hlt
out
dec
push
cmp
push
addb
int
out
mov
jns
jnp
sbb
jb
pop
inc
pop
dec
or
fcompl
sub
inc
pop
or
or
cmc
jecxz
fsubrl
popa
enter
int
mov
scas
mov
cmpsb
and
repnz
mov
mov
jnp
xchg
mov
jge
xchg
outsl
xchg
inc
add
mov
loop
loopne
aad
fiadds
mov
ret
in
out
pop
mov
loop
dec
and
idivb
jmp
adcb
lock
shld
lret
loopne
in
or
sti
sbb
pop
jl
sar
insl
pop
xchg
addr16
pushf
or
or
loop
mov
outsl
mov
out
xor
ret
dec
or
inc
sub
push
jmp
rclb
mov
js
sbb
mov
leave
pop
push
xchg
loopne
repnz
mov
std
sahf
rcll
js
fmuls
and
icebp
mov
mov
lea
loopne
inc
mov
add
fstps
mov
mov
mov
cmpsb
cli
js
inc
xchg
scas
ret
ficompl
sbbl
cld
mov
dec
iret
mov
test
shll
jge
hlt
loop
das
nop
fld
bound
inc
xchg
out
mov
pop
enter
mov
mov
or
mov
sbb
adc
fstps
addr16
jae
ja
pusha
sbb
lock
mov
xorl
insb
push
or
jl
mov
xchg
add
and
inc
mov
sub
push
mov
jg
and
les
into
int
call
add
out
out
push
mov
icebp
mov
outsb
aas
rorb
mov
enter
into
hlt
cmp
lret
test
jp
mov
sub
push
sti
jmp
int
test
in
or
inc
pop
xchg
cmp
sub
dec
test
outsb
inc
xor
jae
aaa
inc
nop
xchg
mov
iret
out
addps
mov
adc
jne
adc
iret
int
and
daa
loope
jo
xchg
sub
inc
mov
cmpb
push
mov
jp
repz
xor
int3
xor
add
in
jae
inc
andb
xor
mov
loope
leave
mov
xchg
pop
xchg
nop
lds
push
cmp
add
iret
test
lods
imul
mov
mov
push
xor
adc
dec
xchg
sbb
das
ds
lock
mov
outsl
sub
inc
push
sbb
xchg
pop
lea
add
mov
inc
pop
test
sub
je
jo
fcmovnu
lock
pop
xor
lret
jl
pop
pop
clc
insb
cs
decb
jae
in
int
clc
gs
in
and
nop
ror
int
lahf
mov
data16
decl
int
int
data16
in
mov
add
int
int
xchg
popa
xor
into
cmp
out
push
out
or
and
negb
movsl
stos
fwait
fwait
fwait
fwait
dec
dec
repz
loop
pop
lds
fwait
fwait
fwait
mov
mov
jmp
xor
sahf
sbb
imul
icebp
call
jle
sub
testl
cld
push
or
or
call
mov
jns
mov
and
mov
mov
repz
mov
cwtl
pop
cli
ds
fnstsw
std
std
xor
mov
pop
js
push
aam
test
mov
dec
ds
jne
xchg
fwait
fwait
mov
xlat
inc
jmp
dec
dec
push
lcall
cmpsl
inc
adc
adc
mov
stos
insb
xchg
inc
xor
out
popa
add
mov
out
adc
xor
pop
fsubl
sub
inc
dec
fidivrs
cwtl
mov
iret
out
and
fdiv
repnz
mov
movsb
ret
in
inc
fiadds
clc
inc
cli
fmull
pop
or
stc
rcll
fidivs
adc
test
mov
xchg
fcmovnu
fdiv
adc
inc
roll
cmp
adc
out
jnp
sti
fadd
aad
in
mov
dec
dec
ret
jmp
sti
xor
pop
mov
loopne
js
popl
mov
and
lock
rclb
clc
shr
jb
dec
and
sub
jge
nop
pop
lods
faddl
push
xor
jle
xchg
fwait
fwait
or
jmp
out
sub
in
cmp
mov
stos
fiaddl
jg
sub
mov
dec
fimuls
fs
pushf
mov
out
out
jns
fsubrl
lcall
lret
loope
rcr
mov
out
lods
adc
xchg
test
in
lock
adcb
cmp
loop
out
out
sbb
mov
imul
xor
leave
lret
push
fcos
xchg
pop
out
out
stos
arpl
insb
mov
insl
dec
jno
and
jle
or
lahf
int
addr16
mov
pop
aam
sarl
aaa
mov
bound
fs
sbb
nop
mov
test
jmp
leave
jb
cmp
xor
jae
jae
nop
subl
cmp
mov
js
and
loope
cmp
sub
add
xchg
cmp
mov
addr16
pop
xchg
cmp
xchg
ret
xor
into
or
cmp
bound
or
lock
lds
stc
in
dec
sbb
outsb
outsb
lahf
fwait
push
mov
mov
mov
outsb
outsb
jge
out
and
sahf
sbb
ljmp
js
fdivrs
fwait
inc
aas
fwait
mov
rolb
adc
xchg
ds
cmp
orl
xorl
aaa
aaa
movsb
stos
pop
sbb
je
inc
mov
sarb
jge
shrb
sub
mov
addr16
or
cmpl
jecxz
mov
inc
stc
mov
push
int
popl
inc
pop
icebp
rorl
pop
adc
cmc
mov
push
daa
int3
pop
lock
fincstp
stos
les
aad
bnd
mov
fmul
fcoml
lds
sbb
jbe
push
mov
shlb
push
stos
jbe
fwait
fwait
mov
mov
xchg
xor
adc
ds
fwait
scas
and
dec
in
dec
dec
dec
cmp
cmp
or
jae
inc
hlt
and
mov
mov
push
mov
cwtl
or
fcomps
scas
mov
push
shlb
fmull
push
fadd
add
cltd
insb
clc
cmp
pop
dec
jae
iret
out
xchg
sbb
in
mov
push
aaa
mov
lea
push
bound
dec
or
or
aaa
aaa
out
jp
fstpl
adc
adc
cmp
jae
aaa
aaa
cmp
sub
sub
loope
cmpl
mov
ljmp
ds
fidivrs
mov
cmp
je
movmskps
out
or
cmp
into
adc
out
lds
mov
cmp
push
clc
pop
mov
mov
mov
push
pop
ds
jne
xchg
lock
jg
inc
stos
mov
iret
mov
pop
lods
ja
add
jbe
cwtl
mov
ret
test
add
lret
ss
mov
movsb
mov
leave
xchg
push
fsubl
bound
push
scas
in
inc
push
sbb
int
test
rclb
cli
roll
in
inc
aam
mov
jbe
jns
ljmp
push
jbe
cmp
cmc
dec
sbb
sbb
popf
mov
mov
mov
jbe
cltd
and
fcomip
sub
push
xor
lock
cmp
mov
insl
out
pop
ds
cmc
xor
mov
in
dec
cld
or
xor
jg
fidivrs
adc
ss
mov
in
mov
sub
dec
add
ds
sbb
sub
cmpsb
mov
mov
xchg
sbb
push
mov
in
pop
fisttpll
xlat
xchg
sub
loope
mov
fdivr
mov
inc
shlb
test
mov
push
adc
les
cmp
leave
cli
lret
aaa
inc
add
pop
cmp
sbb
scas
pop
cltd
inc
jnp
insl
cmp
negb
pusha
push
aam
repz
mov
out
inc
movsb
movsl
mov
insb
dec
test
ror
out
mov
mov
sub
and
outsb
insb
movsb
add
mov
mov
out
add
sahf
jae
hlt
and
mov
or
cmp
mov
in
mov
loopne
hlt
je
mov
ljmp
stos
xchg
and
loop
fnstenv
jmp
aad
in
mov
push
or
push
repnz
pop
push
leave
sbb
jae
test
xchg
xchg
stos
enter
dec
push
jp
jae
hlt
icebp
popa
mov
lds
add
rolb
dec
ss
gs
pusha
jg
in
shlb
inc
adc
int
int
sub
imul
sahf
sub
shl
lds
jae
jnp
adc
pop
and
sub
jae
jae
xchg
push
or
dec
xchg
ss
sti
push
test
sub
adc
test
mov
fstps
dec
fbstp
cmp
int3
inc
dec
ds
cmp
add
daa
les
fucomp
movsl
and
push
dec
rcrl
mov
adc
or
jp
rclb
pop
adc
pop
dec
pop
mov
cli
loope
or
cmp
push
test
hlt
sahf
lahf
sbb
js
mov
and
es
pop
icebp
mov
sub
pop
mov
and
mov
fstps
arpl
dec
xchg
ret
outsl
call
dec
jp
sub
jae
shlb
jnp
mov
mov
jae
movsl
fs
pop
sbb
lods
mov
loope
mov
pop
mov
test
f2xm1
mov
cmp
sbb
add
or
dec
mov
rorl
cmp
fstps
inc
lahf
sbb
mov
cmp
lcall
and
inc
rcrl
ljmp
sar
lahf
mov
cld
pusha
xor
cmp
cld
mov
psubb
and
aad
das
aaa
ja
push
adc
icebp
and
adc
shlb
iret
out
cs
aas
mov
pop
lods
outsl
mov
dec
clc
test
lea
and
addr16
in
arpl
out
aam
imul
iret
pop
sbb
jno
sti
dec
movsb
shll
mov
sahf
scas
pop
int3
loop
add
fsubrl
daa
cmpsl
mov
jmp
in
pop
pusha
xor
adc
dec
xchg
pop
fwait
fwait
cmp
mov
test
or
ds
adc
add
jnp
lcall
pop
pushw
cli
push
lret
dec
imul
push
bound
xor
out
out
lea
sahf
jmp
jae
je
aam
fprem
jbe
mov
dec
out
jbe
sbb
dec
sbbb
fs
gs
out
inc
call
mov
xchg
loope
out
outsl
ficoml
jp
adc
filds
jle
out
lret
push
lret
mov
push
push
pusha
dec
adc
out
mov
in
pop
cld
mov
les
lea
xchg
jg
or
xchg
jno
xor
inc
cmpsl
jo
outsl
cwtl
cmp
mov
add
xorb
mov
addr16
xor
or
std
mov
paddq
ss
addb
sub
lcall
jb
add
std
jo
ss
push
mov
pop
imul
sahf
pop
lret
hlt
xchg
cli
pushf
aam
rcl
push
lods
mov
cmp
push
js
jae
mov
dec
sbb
and
mov
mov
outsl
jo
xor
cltd
inc
fisttpl
mov
sub
imul
mov
xchg
pop
inc
lods
sub
mov
in
dec
jp
jg
dec
pop
in
lods
or
cmc
xchg
negl
repnz
stc
addr16
jae
ds
cmp
pop
xor
mov
call
pop
es
adc
cs
mov
fwait
cli
sahf
movb
outsb
cli
xchg
test
mov
stos
mov
divb
jb
imull
sbb
shl
sarb
pop
xor
movsb
mov
jae
jae
fsubs
mov
mov
push
cld
cmpsl
outsl
xor
pop
jle
lods
push
out
mov
aaa
cld
push
inc
dec
andl
data16
scas
pop
enter
pop
fdivl
pop
cmp
add
ds
test
fmull
lahf
dec
into
jmp
add
fcoml
cmp
cwtl
and
aaa
aaa
mov
inc
andb
dec
pxor
jle
sbbb
mov
mov
aam
push
jne
jp
les
les
jnp
and
jge
lock
icebp
push
call
sahf
jnp
repnz
fbld
or
addr16
sbbb
add
movsb
jb
movsb
sbb
lods
lahf
pop
jl
cmp
cs
into
xor
dec
notb
jmp
cwtl
psrld
inc
sahf
mov
bound
cli
mov
dec
test
imul
jo
ret
add
adc
jo
pop
fld
pop
mov
mov
iret
notb
push
xchg
insb
mov
out
out
fidivrs
icebp
jge
lahf
push
and
push
ja
scas
add
sbb
ret
xchg
or
fdivl
stos
mov
pop
sbb
xchg
sub
push
out
ror
cmp
xchg
adc
insb
popa
imul
push
lcall
addr16
xchg
or
xorl
and
jge
test
lahf
mov
mov
dec
in
fdivr
dec
adc
add
cmc
lea
mov
pop
cli
repz
mov
arpl
mov
push
mov
pop
or
addr16
and
les
inc
push
into
rol
lahf
sahf
fs
mov
dec
test
movb
cmc
mov
push
fs
cltd
test
mov
xchg
icebp
or
mov
hlt
flds
push
push
outsb
or
or
out
iret
and
movb
cmova
fisttpll
aam
ret
mov
push
call
dec
jae
cmp
leave
sub
mov
cltd
shr
addr16
cmp
sti
test
lock
lahf
int
movsb
sub
addr16
xchg
jb
pop
mov
sti
ds
or
cmp
mov
inc
loope
sbb
in
outsb
and
sbbb
mov
cmc
xchg
popa
aaa
mov
mov
push
push
outsl
es
int3
jae
sti
ds
subb
jo
adc
addr16
mov
jns
and
fildl
hlt
scas
rcrl
adc
aad
or
ja
ss
mov
int
loop
pop
loope
and
pusha
mov
aaa
aaa
aaa
aaa
adc
dec
mov
push
sub
cmp
aaa
aaa
push
in
lds
jecxz
cmp
aas
jle
mov
movb
ret
daa
jge
jl
aaa
aaa
push
daa
imul
adc
push
pop
xor
out
jbe
rcrb
push
in
mov
fadd
xchg
in
cmp
mov
int
push
xchg
loopne
and
mov
pop
mov
jl
push
mov
ss
and
add
test
or
xchg
sbb
jg
jae
ja
adc
xor
loop
data16
jae
xor
out
sub
mov
lret
cmp
dec
cmc
std
andb
movsb
insb
inc
inc
mov
mov
xchg
inc
in
mov
dec
pop
sbb
cld
mov
fmull
dec
loopne
mov
outsb
cli
fldcw
mov
das
add
outsb
outsb
outsb
xchg
lds
cli
repnz
or
out
out
or
sti
clc
aam
in
int3
cmp
ret
popa
inc
and
outsb
cmp
jle
mov
xchg
cwtl
add
outsb
outsb
outsb
outsb
mov
mov
enter
mov
inc
jge
add
dec
xchg
jae
iret
out
flds
out
icebp
repnz
add
loopne
push
dec
xlat
adc
mov
sub
sti
or
loop
mov
xchg
xor
andb
xchg
leave
out
mov
push
test
xchg
cmp
dec
mov
fchs
loope
scas
ss
scas
mov
mov
mov
fisttpl
xchg
in
mov
mov
aaa
adc
adc
sbb
pop
sahf
sub
out
out
cmp
adc
mov
inc
out
out
mov
inc
in
lods
sbb
fldt
lods
bound
or
fdiv
jnp
test
xchg
out
push
dec
clc
sbbl
lcall
loop
shlb
mov
aaa
dec
pushf
ss
aaa
mov
shlb
pop
rol
sbb
fucom
push
mov
stos
lds
int3
xor
fwait
fstl
lds
out
in
out
mov
fwait
repz
lret
and
inc
movsl
sarb
outsl
inc
out
addl
call
add
dec
add
mov
je
or
mov
jle
es
pop
lock
loope
xlat
es
push
mov
outsb
cmp
ds
mov
mov
mov
insl
jo
rcrb
cmpsl
push
and
push
fsubl
pop
fwait
lret
out
ljmp
dec
scas
mov
es
xlat
addr16
jmp
sub
adc
int
xchg
xor
xor
lahf
int
or
arpl
mov
mov
aad
xor
xor
adc
jecxz
mov
movsl
xchg
or
cmp
lock
shrl
iret
imulb
jl
mov
jb
mov
loopne
clc
sbb
jb
ja
add
inc
sbb
pop
inc
pop
cmp
sahf
jecxz
aaa
aaa
push
outsb
dec
shll
sti
adc
push
lcall
std
mov
jg
mov
shll
ficoml
or
out
push
jl
icebp
fdivl
push
mov
aas
pop
fmul
or
push
and
or
pop
in
jns
push
adc
cwtl
cmp
jo
push
xor
stos
mov
pop
stos
fsubrp
mov
pop
and
mov
push
dec
fwait
push
pop
inc
clc
lret
int
rorl
fidivl
not
movsl
mull
jo
push
xchg
out
out
repnz
adc
int
gs
repz
sbb
mov
cmpsl
aaa
xchg
or
inc
sub
inc
cmc
stos
add
add
fisttpl
roll
aad
mov
fwait
xlat
dec
stos
mov
add
sub
mov
mov
sbb
fdivl
les
test
jg
outsb
outsb
outsb
outsb
lret
mov
or
push
mov
outsb
outsb
rclb
sbb
fucomi
rcrb
dec
dec
sbb
fptan
and
data16
mov
inc
scas
adc
std
xchg
inc
scas
cli
fstps
data16
adc
cmp
pop
xor
outsb
dec
stc
mov
cmp
mov
test
adc
push
sub
aaa
mov
ds
ret
dec
jae
out
sti
mov
sbb
outsb
dec
push
mov
addr16
ret
inc
mov
out
cmpsb
shl
mov
gs
stos
inc
cld
push
sbb
shrl
test
inc
mov
cltd
jno
iret
cmp
xchg
movsb
mov
xor
in
sahf
jp
mov
insb
cmp
das
aas
fucomi
ss
fucomp
andl
lea
out
outsb
outsb
outsb
dec
sbb
adc
inc
sub
and
dec
and
call
outsb
cmp
cmp
inc
sub
cld
add
int
outsb
shrb
je
xlat
lahf
in
sti
mov
sbb
cmp
jno
sti
jle
and
jne
lods
outsl
push
xchg
out
rcl
addr16
jae
imul
rolb
loopne
testb
in
cmp
mov
mov
ret
cmove
adc
mov
idivb
xor
rorb
ror
xchg
or
out
iret
add
inc
and
push
lea
test
outsb
outsb
bound
or
movsl
sbb
and
js,pt
add
leave
or
int3
jae
aas
sbb
inc
mov
add
push
aam
pop
sbb
jo
cli
push
test
enter
clc
adc
icebp
fisubs
sahf
int
mov
jg
shr
adc
cmpb
mov
mov
push
sbb
jae
sti
pop
fiadds
out
sahf
and
jl
pop
sub
jnp
xchg
mov
aam
les
jle
test
xor
xlat
ds
aam
push
mov
outsb
out
mov
std
and
adc
pop
insb
outsb
outsb
outsb
jae
mov
je
arpl
cwtl
jbe
stos
in
outsb
outsb
mov
lods
lret
dec
pop
push
loope
vhsubps
outsb
nop
testb
mov
xchg
insl
sti
lock
mov
mov
cwtl
and
int
lahf
clc
js
xchg
dec
or
ds
int
clc
stc
scas
aaa
decb
cmp
mov
scas
in
fs
push
adc
insb
push
push
je
xorb
sti
sarl
pop
pop
test
out
mov
int
mov
dec
loope
fwait
sbb
pop
mov
mov
xchg
sbb
outsb
inc
cli
pop
icebp
xor
or
ds
mov
or
adc
lods
addr16
shlb
loop
pop
jbe
xchg
jp
fcmovnbe
push
mov
setle
iret
dec
and
js
inc
sbb
decb
sub
jbe
jno
cs
icebp
push
outsb
inc
lods
inc
adc
pop
in
fmull
outsl
into
cld
push
lods
push
cwtl
ret
mov
mov
mov
or
jo
mov
or
lock
bound
cmpsb
xor
jo
dec
scas
fists
cwtl
je
test
pop
mov
mov
int
gs
sbb
iret
call
insl
sbb
int
sbb
jno
sbb
outsb
adc
sti
mov
pop
jl
pusha
arpl
fildll
in
movsl
ds
cmp
leave
pop
fstp
fidivl
out
out
and
inc
mov
nop
xchg
xchg
scas
movsb
iret
ret
jge
xor
and
inc
jge
aam
jmp
imul
dec
fwait
psrad
or
cmpsb
and
or
or
push
out
out
js
stc
test
dec
hlt
stos
pop
dec
pop
ds
iret
out
sub
jns
push
cmp
mov
add
outsb
iret
rolb
xor
cmp
jp
xor
cld
xchg
aad
test
out
out
sbb
leave
into
sub
out
sbb
test
gs
jle
lret
cmp
fs
pop
sub
inc
adc
aaa
ds
iret
rol
sti
adc
cmp
mov
jge
mov
stos
xor
insb
popf
in
sbb
xchg
jo
mov
mov
xchg
rcrb
jp
xchg
adc
mov
rolb
outsb
aas
fisttpl
outsl
mov
aad
div
dec
cmp
es
push
arpl
jb
shrb
out
cmp
out
sub
lret
push
inc
mov
ja
mov
repz
ss
or
jp
add
test
nop
ljmp
es
xor
mov
cld
out
xor
jp
out
mov
adc
shl
jge
or
and
jge
cs
rcr
add
or
aaa
jecxz
loop
lods
dec
sbb
jae
inc
pusha
inc
sbb
je
stc
lea
jae
jae
xchg
int3
jae
xor
push
push
cmp
mov
rorb
mov
loope
cmp
inc
fwait
fwait
fwait
sbb
or
mov
fwait
fwait
mov
int3
sub
ror
pop
hlt
std
add
mov
pop
mov
fcoml
shr
int
pop
loope
mov
outsb
inc
mov
xor
cmc
insb
clc
fldenv
push
sub
and
es
testl
pop
aam
jne
and
mov
fistl
cwtl
repnz
xchg
outsb
mov
in
cmpsl
or
pushf
fwait
fwait
fwait
cmp
push
out
popf
and
in
xchg
out
mov
movsl
lds
jle
mov
fidivrl
in
sbb
roll
jp
and
gs
fwait
addb
stos
data16
jb
fsubrl
fsts
insl
pop
jae
sti
fdivrl
lea
xor
shlb
adc
addr16
jle
call
push
pop
inc
push
adc
mov
sbb
inc
push
jp
fldcw
push
bswap
mov
sbb
call
inc
mov
adcl
lea
dec
and
addb
neg
jp
loopne
add
xchg
arpl
iret
out
outsb
cmp
outsb
mov
and
jae
jae
or
repnz
aad
mov
dec
test
popf
mov
xor
jp
rolb
leave
jns
ss
aaa
jl
test
or
pop
xchg
push
mov
sbb
sbb
xchg
push
xor
add
push
test
mov
ljmp
lock
call
cltd
jnp
xor
mov
jg
ljmp
aaa
aaa
aaa
pop
popa
ja
or
movsl
cmp
mov
aaa
aaa
in
inc
out
popf
insl
cli
outsb
outsb
scas
mov
mov
ficoml
jo
jl
lds
adc
push
fcompl
dec
cmpsl
divl
and
fsubrl
les
sbb
int
xor
dec
nop
loop
inc
mov
jae
jae
inc
xorb
fldl
add
mov
in
scas
xchg
fisubs
jne
pop
xor
mulb
mov
dec
fcmovne
out
ret
subb
mov
cld
mov
mov
les
jle
dec
jge
test
call
xchg
mov
clc
inc
fimull
sbb
int
mov
pusha
shl
nop
xchg
add
hlt
push
and
xorb
cld
insb
aas
fwait
icebp
ss
ret
or
aas
xchg
lds
cmp
cld
movsl
movmskps
out
lock
cmp
insl
into
push
pop
pop
mov
loopne
cmp
pop
dec
or
xor
icebp
cli
sbb
jbe
jne
stos
sbbb
or
inc
lcall
out
cmpsl
cmc
ljmp
ds
imul
jo
into
dec
push
insl
sbb
sbbb
add
mov
loopne
xchg
roll
imul
fwait
fwait
jmp
push
ds
adc
aam
shll
outsb
outsb
outsb
xchg
add
sub
out
js
and
ss
pop
jl
add
adc
xchg
iret
out
jno
in
inc
lcall
xchg
mov
addl
or
loop
lods
xor
cmp
hlt
push
ficoml
xor
aas
fwait
fwait
inc
jbe
ja
jo
mov
mov
or
jae
pop
mov
mov
mov
jp
orb
mov
shrb
xchg
cltd
in
dec
dec
jl
push
dec
push
adcb
scas
jp
and
and
jmp
jecxz
add
push
add
sahf
fstpt
pop
jno
jl
add
jns
ljmp
movsb
add
inc
cld
sub
or
imul
push
jl
lock
dec
test
xlat
js
sbb
push
js
dec
mov
pop
ds
out
lahf
test
jno
ljmp
cmpsb
mov
or
push
jno
and
out
rcll
iret
mov
inc
push
test
push
jmp
mov
inc
test
in
int
cli
mov
pop
mov
jae
push
mov
int
dec
xchg
scas
xor
sub
pop
data16
push
into
repnz
ss
mov
orb
mov
outsb
push
mov
cmpb
mov
cld
aad
mov
popa
or
popa
cmp
mov
mov
sub
mov
xor
ret
mov
gs
lahf
fwait
fwait
fwait
enter
pop
ds
sub
outsb
outsb
mov
xchg
and
fnstcw
clc
icebp
sbb
jae
cli
push
fists
mov
rolb
test
jae
mov
jp
out
add
jne
xchg
pop
rolb
fisttpl
mov
push
pop
dec
lds
jge
push
stc
bound
xor
out
mov
mov
repz
test
inc
in
scas
andb
cmp
sarl
arpl
xor
mov
outsb
clc
mov
and
lock
xchg
mov
outsb
outsb
outsb
outsb
gs
fwait
jmp
jae
loope
cli
insb
pop
add
or
fiadds
loop
or
or
clc
add
or
inc
lahf
int
call
lret
fdivp
inc
pushf
sub
mov
es
jno
mov
andb
xlat
int3
jbe
cltd
js
out
testb
push
xchg
int
adc
cmp
pop
iret
out
xchg
pop
or
sahf
aaa
mov
jns
rolb
sarb
loope
dec
sbb
fdivrl
cwtl
dec
inc
jb
test
dec
clc
insl
push
inc
pusha
aaa
aaa
aaa
lds
in
movsl
lcall
aaa
aaa
aaa
aaa
push
xor
and
fwait
cmp
ds
sbb
jl
test
fmull
mov
xchg
xlat
mov
int
push
pusha
pushf
popf
stos
fists
inc
xchg
inc
test
out
out
lock
test
adc
in
push
mov
mov
xor
mov
stos
or
jecxz
aam
icebp
push
add
ljmp
int
or
data16
nop
xor
and
movsb
push
and
dec
aad
lcall
add
jb
movsb
mov
mov
insl
addl
insl
jnp
lods
adc
mov
out
lahf
dec
xchg
inc
jne
stc
sub
or
sbb
lods
iret
sbb
inc
rcll
mov
shlb
jae
or
cmc
sub
shlb
sti
dec
push
jae
jae
daa
out
push
cmc
mov
jae
jae
mov
cltd
sub
jns
clc
in
imul
jmp
xor
pop
loopne
fs
push
jae
push
jl
sbb
mov
sbb
loop
pop
jl
sahf
sbb
cmpsl
subps
mov
aaa
sar
insb
in
xor
adc
xor
ljmp
fdivrl
pop
jp
pop
inc
sbb
out
in
inc
adc
jae
xchg
dec
fcomps
cmp
mov
loope
push
cltd
mov
test
push
cvtpi2ps
xchg
and
push
jnp
ds
fnstcw
bound
cmp
jl
out
pop
test
pop
insl
dec
push
pop
sarl
xchg
cmp
cmp
sbbb
lea
mov
movsb
rclb
dec
and
and
lea
aaa
mov
adc
mov
stc
sbb
aaa
aad
movsb
gs
clc
test
pop
and
jnp
pusha
lahf
inc
aaa
aaa
pop
jl
popf
enter
popf
sti
push
gs
lds
sbb
aaa
dec
jp
cli
jb
loopne
jae
push
or
push
push
negb
add
ljmp
int
int
ret
jo,pn
mov
ds
aaa
aaa
loop
stos
jno
mov
mov
fildl
sbb
insb
dec
int
movb
dec
xlat
fwait
fwait
fwait
fwait
popf
negb
sub
in
in
adc
and
insb
lahf
dec
movsb
and
in
dec
lret
stc
jo
subl
out
iret
int
xchg
movsl
pop
xor
dec
or
call
xor
mov
dec
sub
adc
inc
mov
mov
fwait
fwait
fwait
int3
or
jle
inc
cld
cli
xchg
scas
cli
ds
movsl
dec
lret
notb
out
push
pop
cmp
pop
xlat
mov
pop
idivb
dec
mov
fidivrl
mov
out
aad
movsl
in
addb
dec
adc
or
mov
xchg
cmpb
cmp
xchg
out
stc
jl
flds
mov
xor
mov
push
push
outsb
outsb
aas
shll
jns
or
int3
idivl
sub
fsubrp
sbb
or
mov
ljmp
cmp
std
fiadds
cmp
xor
mov
pop
jl
mov
sub
cs
jmp
scas
xor
aaa
xor
fdiv
bound
mov
pop
inc
pop
sbb
xor
mov
mov
cmp
fsubr
inc
pop
inc
mov
mov
mov
clc
fdivr
pop
mov
pop
mov
cmp
jp
and
jae
jae
ljmp
cmc
pcmpgtd
jae
fimuls
mov
xchg
addl
lcall
mov
std
ret
les
sti
mov
mov
xchg
mov
push
and
in
mov
adc
rclb
es
mov
adc
ss
nop
dec
jecxz
cli
mov
daa
les
popf
fwait
fwait
fwait
push
fs
sahf
xchg
adc
icebp
lds
mov
sub
add
fsubl
lahf
sub
xchg
xorl
inc
int
in
jae
adc
cwtl
push
adc
outsb
mov
mov
int
ja
popf
xchg
fsubrs
push
mov
das
sub
cwtl
dec
and
jae
sub
jnp
cmp
push
mov
shlb
popl
pop
lea
pusha
in
repz
ds
mov
add
jne
pop
cmpsb
pop
clc
fmul
out
push
push
mov
aam
jae
into
mov
xchg
push
mov
inc
push
xchg
pop
sbb
je
jns
clc
cmp
int
int
inc
inc
xchg
sbb
aad
int
int
dec
imul
push
lahf
int
in
sahf
sbb
fcompl
ds
mov
pop
or
inc
xchg
mov
cmp
sti
fdivrl
pop
fstps
jp
pop
xlat
iret
jmp
mov
push
jle
push
lahf
jb
aam
test
cmpsb
cmp
imul
sub
out
pop
ret
out
test
mov
clc
mov
notb
daa
rcrb
iret
out
xchg
cmp
fistpl
cmp
out
std
insb
outsb
outsb
xor
sbb
pop
int
cli
aaa
aaa
aaa
aaa
call
loop
push
jge
and
ds
pushf
test
rcrl
imulb
cmp
or
aaa
addr16
iret
jecxz
add
or
aaa
pop
cld
mov
and
and
aaa
aaa
js
dec
test
pop
and
pop
cmpsl
inc
mov
pop
aad
out
iret
insb
mov
inc
fldl
std
add
shl
movsb
test
std
xchg
jle
rol
pop
xor
jb,pn
fsub
imull
jbe
xor
sub
nop
imul
outsb
scas
clc
flds
cli
dec
data16
ret
outsb
fistps
repnz
xchg
or
sbb
outsb
outsb
in
das
push
loop
lods
adc
fidivl
dec
sub
dec
xor
pop
adc
or
cwtl
js
inc
or
iret
int
arpl
arpl
pushf
sbb
mov
scas
pop
iret
mov
jo
jge
xchg
scas
inc
xchg
dec
adc
cmc
test
push
sub
xor
jge
push
aad
sub
jg
sbbl
sahf
and
xchg
mov
sub
push
xor
mov
sub
or
inc
sarb
fnsave
add
dec
rorb
addr16
testb
dec
and
es
adc
enter
clc
dec
shlb
xor
sub
movl
xchg
jae
jae
mov
test
scas
or
daa
repz
in
dec
push
pop
sub
xchg
sahf
rcrb
mov
mov
cmc
rcrl
clc
sbb
inc
repz
inc
xchg
push
adc
test
fwait
jp
pop
into
and
hlt
testb
sub
shlb
pop
out
out
add
jg
sbb
xor
int
mov
cmc
outsb
dec
aam
xor
sub
xchg
fwait
fwait
fwait
xchg
mov
push
imul
fldenv
into
scas
xor
cs
movsb
mov
in
add
test
push
pushl
jo
lea
sbb
insl
mov
jp
jp
adc
cmp
fs
arpl
dec
nop
sbb
into
ss
vcvtpd2dq
imulb
mov
stos
add
inc
jl
movsl
rclb
mov
insb
jle
push
add
leave
jmp
mov
sbb
fdivp
push
jle
cltd
inc
outsb
pop
ljmp
rclb
jp
aad
mov
dec
das
jns
sub
stc
adc
addr16
das
aad
fiaddl
int3
dec
add
mov
push
jg
cld
js
inc
and
mov
lods
cli
cs
imulb
sub
adc
sub
les
clc
xor
addr16
mov
ja
jle
gs
push
mov
out
sub
sbb
pushf
cmc
lods
xor
xor
pop
inc
and
jno
jl
test
aad
adc
pop
js
test
scas
jle
mov
inc
adc
imul
dec
fdivrl
pop
in
daa
adc
adc
xchg
or
loop
push
aas
cmp
icebp
mov
jle
imul
icebp
push
pushf
mov
inc
push
fnstcw
cmc
iret
popf
sub
jbe
outsb
outsb
outsb
outsb
mov
je
pop
and
js
stos
insl
mov
xchg
push
rclb
pop
push
and
sub
sahf
das
pop
cmp
ljmp
test
ja
cmp
cmp
pop
aaa
popa
or
and
cmp
dec
test
xor
xchg
dec
or
rclb
lods
mov
pop
jo
mov
je
cmp
outsb
outsb
cmpsl
and
bound
xor
mov
sbb
aaa
mov
jno
pop
xor
dec
es
cmp
cmpsb
sbb
or
out
imul
jbe
adc
aaa
mov
mov
lods
jnp
xlat
test
aaa
lret
movsl
sub
mov
xor
and
ss
pop
stc
mov
lods
add
or
inc
lods
pusha
insb
or
xchg
jo
loopne
in
sub
add
fwait
ljmp
js
sbb
inc
sbb
in
jae
sbb
xchg
sbb
dec
dec
lods
xchg
mov
gs
insl
jle
enter
sbb
cmp
loope
fcompl
pop
adc
and
xchg
inc
loop
jecxz
mov
ffreep
je
sbb
lods
ret
xor
addr16
inc
mov
xchg
lcall
int
jg
and
mov
ret
fs
fcomip
mov
lahf
int
jg
cmp
cli
push
inc
les
adc
cmp
mov
in
cmc
and
cltd
xchg
mov
sbb
data16
jo
push
mov
jecxz
out
xchg
int3
ret
sti
push
jae
pop
lahf
nop
fisttpl
es
sbbb
adc
jg,pt
sub
movsb
loopne
aaa
jl
pop
push
lods
rorb
ror
into
das
mov
ss
sub
out
add
pop
in
fs
jmp
mov
dec
lods
sahf
jae
mov
imul
out
aaa
jne
inc
pop
push
in
adc
insb
outsb
lahf
in
jge
mul
and
sbb
jb
int
in
testl
lock
and
cmc
xor
jle
jl
or
cmp
add
cmp
out
shl
in
sub
push
add
out
divb
cmp
xor
sbb
ficomps
adc
lcall
sahf
mov
fstpt
fisttpll
jns
sbb
shrb
aas
mov
mov
jno
jne
inc
les
outsb
outsb
test
push
adcb
inc
xchg
add
fwait
and
leave
mov
iret
mov
cmp
sahf
int
out
int
scas
dec
sub
lock
lahf
add
cli
mov
xchg
mov
fwait
fwait
fwait
mov
movsl
push
sub
add
mov
sub
leave
nop
push
xchg
pop
or
cmp
cmp
lods
or
xor
aad
or
sahf
pusha
pop
jne
jle
fimull
add
out
jae
out
das
out
adcb
movsb
add
add
ljmp
adc
repnz
ds
pop
lods
sub
lret
mov
jae
mov
xor
ja
or
les
imul
loop
loope
or
in
mov
xorb
mov
ds
in
es
lcall
js
mov
cmp
xor
dec
and
out
in
dec
loopne
xlat
xchg
xor
stos
clc
pop
mov
mov
in
mulps
test
movsb
repnz
cmp
lcall
call
mov
push
into
inc
and
mov
xchg
jo
or
iret
mov
adc
sti
cmp
outsb
outsb
sti
in
mov
popa
cld
sbb
iret
out
sbbl
in
rcrb
or
cltd
fwait
fwait
fwait
fwait
mov
shrl
xor
lcall
in
xchg
repz
dec
ds
lahf
dec
jp
cltd
mov
pushf
jae
loop
push
push
jp
fstps
jae
jae
ret
je
out
fdivrs
leave
dec
out
or
and
pop
xlat
insb
xor
mov
dec
or
pop
sbb
in
sub
outsb
sti
push
and
fcompl
stos
mov
xchg
and
out
or
mov
sti
sub
js
insb
js,pn
aas
std
ljmp
stos
aaa
mov
cmc
mov
in
pop
scas
cs
fdivrl
aaa
aaa
xchg
stos
dec
in
aam
mov
int
sti
fldenv
sbb
or
adc
push
ret
lahf
pop
leave
stos
sbb
jmp
call
loope
jo
cmp
adc
int
mov
mov
or
fldt
aas
fldt
cmp
sbb
jae
lret
outsb
outsb
xchg
cwtl
loopne
popf
mov
in
push
in
add
outsb
outsb
outsb
mov
dec
aas
jo
xchg
xor
insb
test
ss
push
dec
mov
xchg
fidivrs
mov
movsl
aaa
pop
stos
mov
adc
sti
adc
and
ds
mov
dec
push
aas
in
pop
mov
adc
cmp
sarb
jl
jmp
pop
mov
in
push
inc
cmp
movsb
cmp
out
sti
inc
mov
sti
testl
mov
roll
cltd
fists
sahf
jg
in
mov
ds
fwait
fwait
sub
stos
pop
xchg
xchg
lahf
in
subl
dec
sahf
addr16
inc
je
adc
aaa
aaa
aaa
aaa
loope
sub
ficomps
fdivrp
ds
in
out
mov
loopne
jae
or
int3
mov
push
pop
call
in
sub
inc
cmc
mov
cli
sti
jmp
in
movsl
inc
push
push
mov
outsl
xor
ret
sti
out
dec
push
ficoml
mov
out
int3
aad
and
mov
fcomps
add
iret
jbe
xchg
jne
or
sbbb
pusha
push
in
loope
ficoml
js
jne
sub
mov
jb
and
add
add
ljmp
loope
insl
xchg
xchg
idivl
mov
jo
cmp
fistl
push
sbb
sarb
int
int
xor
inc
sub
mov
pop
adc
mov
sub
js
bound
mov
lahf
fisttpl
orb
fisubl
fcmovne
int
int
push
fwait
mov
movsl
aam
popf
lahf
int
sbb
int
mov
xor
and
xchg
mov
neg
cwtl
add
clc
fsts
scas
aas
bound
addr16
shrl
mov
ds
outsl
shrb
fnstcw
loope
icebp
inc
divb
xchg
pop
or
jno
jl
and
pushf
push
xor
sahf
fildl
pop
pop
lret
push
out
lahf
in
ret
cmp
mov
negl
insb
aas
add
jmp
idivb
clc
mov
mov
aas
ljmp
lcall
hlt
mov
push
mov
dec
imul
aad
sbb
outsl
push
cmp
pop
out
jl
hlt
add
push
mov
out
inc
addb
cwtl
out
out
out
cs
pop
inc
push
lret
bound
xchg
in
jnp
iret
mov
inc
popf
xor
test
jae
jae
xchg
sbb
adc
addr16
pop
aam
repnz
outsb
outsb
cli
pop
cli
push
mov
fwait
cmp
cmp
add
dec
mov
out
out
fisttpl
xor
out
test
js
and
push
sub
sahf
int
push
je
stos
mulb
mov
clc
jge
je
adc
push
xor
jl
gs
ss
cld
cmpsb
outsb
fsubrp
dec
bound
sti
dec
jge
pop
or
mov
js
ss
jae
pusha
add
das
test
jae
push
popa
cmc
push
cmp
xor
jnp
mov
jle
mov
or
out
mov
adc
lea
cmp
outsl
fs
sub
and
test
rol
and
loope
xchg
icebp
es
mov
mov
push
aaa
xchg
out
fmuls
pushf
int
and
data16
push
jo
xorb
xchg
and
aaa
aaa
aaa
shrl
add
cmp
jle
xchg
clc
loope
push
sub
adc
imulb
es
mov
pop
jns
dec
jecxz
jae
or
popa
adc
subb
icebp
sub
insb
push
ret
fwait
fwait
fwait
fwait
mov
push
inc
or
cmp
jge
aas
fwait
xor
push
sti
or
sahf
je
inc
and
ds
aaa
ja
nop
leave
aas
pop
shr
xlat
cmp
insb
scas
jno
and
ds
push
cmc
sub
mov
or
push
mov
jne
mov
sub
add
fdiv
adc
adc
and
cmp
shlb
xor
stc
imul
cld
shlb
mov
mov
int
ja
mov
inc
xchg
in
jb
stos
int
int
sar
pop
rcr
mov
aaa
and
mov
sbb
mov
int
xorb
test
ja
mov
and
adc
mov
pop
and
or
fildl
inc
sub
sti
fwait
fwait
fwait
fwait
pop
bound
jo
cmpsl
dec
mov
jo
fwait
push
mov
adc
lret
mov
xor
push
pop
insb
mov
pop
cmp
push
pushf
mov
mov
pop
inc
lahf
outsb
outsb
mov
adc
popf
vaddss
cmp
push
inc
push
cmpsb
push
ret
js
enter
or
out
push
test
loop
ds
push
add
sbb
out
addb
fidivrl
repz
call
movsl
pop
repz
sub
stos
divb
iret
in
notl
pop
test
jbe
xchg
cmp
and
add
out
cli
push
mov
jge
int
pop
push
test
fadds
lods
fwait
or
mov
mov
sbb
sub
daa
adc
fsubl
rcr
jl
fcompl
or
jl
add
sub
outsb
outsb
outsb
jp
das
xor
cltd
cltd
ss
out
xor
daa
or
push
iret
out
jp
mov
sbb
xchg
push
mov
test
jl
xorb
leave
test
ss
aaa
pop
loope
stc
dec
and
mov
sti
fmull
fdivrs
das
xchg
mov
add
or
adc
pop
sahf
push
mov
ret
js
aas
movd
cmp
fucomip
add
sub
insb
nop
pop
sub
mov
adc
scas
mov
fsts
push
sbb
out
icebp
fsubl
bound
push
adc
adc
sub
xchg
dec
leave
jbe
sarb
outsl
or
fistl
fidivrl
in
pop
pop
nop
icebp
jl
sbb
out
cmp
nop
adc
nop
pop
push
inc
jle
lcall
mov
xchg
mov
fstps
fisubrl
xor
frndint
insb
cs
fcmovnb
jl
in
inc
inc
fs
addr16
pop
xor
and
lea
daa
icebp
pop
pop
ss
aaa
mov
nop
inc
rclb
push
mov
mov
cmpsb
sti
jle
aaa
xchg
add
test
add
jae
mov
lods
loop
xchg
push
mov
cmpb
sbb
test
pop
or
ret
outsl
adc
mov
jae
in
jae
jae
xlat
xorl
jmp
jae
push
nop
lock
add
iret
mov
cmp
push
push
jnp
add
lds
cmp
loop
adc
pop
mov
push
jge
aaa
xor
pop
cmpsl
mov
mov
push
jle,pn
lahf
push
fbld
xchg
sub
outsb
out
clc
pop
push
test
out
inc
call
or
js
inc
sub
cwtl
and
mov
xor
inc
inc
test
mov
aaa
aaa
aaa
aaa
mov
mov
push
jle
sbb
rclb
mov
out
nop
pop
jns
gs
mov
outsb
outsb
outsb
movsl
js
and
xor
fimuls
repnz
outsb
outsb
push
imul
sahf
imul
cmp
or
aaa
hlt
lcall
out
mov
sbb
pop
mov
out
out
mov
cwtl
cltd
xchg
in
mov
push
mov
mov
mov
jae
cmpsb
pushf
int3
sbb
das
daa
push
fcomip
mov
jecxz
mov
nop
sti
jnp
scas
jl
add
push
fildll
andb
int
sbb
xor
cmc
in
es
mov
mov
mov
sbb
dec
insb
pop
pop
call
xchg
insb
pop
test
lea
cmp
mov
adc
fisubs
mov
shl
push
daa
mov
xor
cli
outsb
outsb
clc
add
sub
sbb
outsb
outsb
lret
cmp
lods
cmpsl
inc
mov
outsb
xchg
mov
xlat
iret
mulb
adc
mov
fcoml
jmp
sahf
bound
jmp
stc
xchg
adc
aaa
aaa
sar
sbb
mov
lock
jnp
dec
cmp
mov
iret
out
jo
dec
lods
aad
jmp
push
inc
outsb
outsb
lahf
fidivrl
cmp
lea
outsb
outsb
test
adc
pop
outsl
fwait
sub
cmp
arpl
out
cwtl
adc
outsb
pop
fdivs
neg
push
divl
mov
mov
adc
fsubl
stos
dec
mov
xchg
jo
xor
lock
cmp
stc
sahf
xor
fwait
add
dec
int3
or
out
jns
loopne
hlt
mov
out
jb
es
scas
mov
mov
xor
addr16
mov
dec
dec
mov
pop
pop
mov
push
outsb
outsb
aas
or
sub
daa
push
cwtl
mov
push
aaa
jl
lods
cmp
movsb
fcom
aaa
aaa
aaa
aaa
loopne
iret
push
cwtl
push
xor
or
xchg
jle
aaa
push
lds
push
aaa
aaa
cmc
mov
push
pop
xor
insb
clc
fidivrl
xor
add
dec
cli
fdivr
xor
pop
out
cmp
pop
shlb
push
pop
or
sbb
hlt
cli
push
dec
in
lods
xlat
mov
nop
aaa
push
in
mov
xchg
and
mov
ja
aad
sub
aaa
std
xchg
addr16
nop
andl
dec
jne
cltd
jae
addr16
cmpsb
std
sbb
les
scas
mov
bound
ficomps
es
int
mov
test
jg
mov
sub
leave
aaa
int
int
sub
pushfw
mov
inc
ss
int
xchg
cltd
rol
or
jb
pop
scas
push
add
or
dec
outsb
mov
and
fs
push
xor
fwait
mov
push
and
adc
mov
mov
mov
add
push
rolb
sti
out
mov
xor
xchg
dec
outsl
jge
out
out
test
out
sbb
rcr
or
mov
iret
out
sub
gs
ret
fldl
insl
bound
movl
ficoml
out
std
bound
js
pusha
and
jae
dec
nop
xor
mov
or
fadds
andb
jae
jae
rcrl
ds
push
in
shlb
lcall
push
aam
xchg
movsb
in
mov
or
xchg
repz
xchg
into
iret
add
les
ljmp
ficoml
int
add
loopne,pt
sub
dec
cmp
int
int
ljmp
push
push
pop
pop
leave
int
int
jno
or
fwait
int3
mov
jecxz
je
add
int
pop
test
xor
rorl
fwait
fwait
sub
xchg
xchg
imul
push
jne
data16
mov
jle
push
push
testl
je
popf
icebp
fs
cltd
js
push
lahf
fwait
fwait
call
mov
out
adc
ja
insb
dec
adc
test
inc
pop
mov
sbbl
jbe
imul
loope
jae
nop
adc
popa
sbb
aaa
aaa
mov
sbb
loopne
or
or
into
fidivl
aaa
aaa
aaa
loopne
aas
xlat
mov
stc
fstp
fs
cmp
aaa
and
loop
mov
fwait
stc
mov
fcmovbe
popf
shlb
xchg
clc
mov
and
fcomi
add
jne
cli
shr
push
pop
pop
addr16
sub
fstpt
lahf
cmpb
mov
adc
adc
shlb
xor
out
out
and
jae
adc
enter
fcmovne
out
push
insb
rorl
jbe
xor
push
or
pop
aas
xchg
dec
add
sbb
outsb
fnstcw
les
shrl
inc
rolb
sahf
and
cli
outsb
sahf
fidivrl
loopne
aas
in
clc
mov
gs
std
dec
cmp
push
mov
mov
mov
mov
rclb
aas
popf
loop
mov
iret
sub
pushf
mov
shlb
xor
pop
mov
popf
sub
ljmp
mov
jnp
xlat
xchg
or
inc
hlt
xor
push
push
and
lcall
int
push
or
insb
clc
int
iret
lods
lods
lahf
int
cmp
or
xchg
int
into
lret
scas
popf
ljmp
inc
mov
adc
mov
xchg
push
mov
mov
lahf
movsl
push
adc
add
mov
mov
mov
jge
xchg
lock
dec
inc
arpl
lods
xchg
cmc
cmp
addl
sbb
shll
jns
jbe
xchg
iret
test
stc
test
add
jae
in
add
jp
fistpl
mov
jne
xorl
push
out
xchg
aam
xor
xorb
shrl
outsb
push
lcall
je
and
hlt
pop
and
add
addr16
fsts
mov
sub
mov
scas
daa
iret
int
in
test
fisubl
test
inc
sti
adc
lds
fwait
fwait
les
cmp
sahf
in
jno
clc
insb
outsb
xor
es
pop
lock
push
fs
addb
add
pop
push
jecxz
pop
cli
adc
inc
push
pop
loop
or
shlb
adc
and
push
sub
addb
fwait
fwait
fwait
fwait
sahf
jne
call
popf
in
lcall
fisttps
dec
jbe
sub
aaa
aaa
aaa
aaa
inc
pop
lret
inc
es
add
aaa
aaa
aaa
fidivrl
pop
add
ss
aaa
sbb
pushf
and
scas
or
loope
mov
outsb
idivb
in
fnsave
insl
fcmovu
mov
dec
or
outsb
in
js
aam
dec
add
mov
std
insb
test
lds
or
jge
xorl
call
mov
mov
lea
test
stc
add
lahf
sbb
sti
outsb
push
pop
add
jecxz
clc
sahf
stc
loop
imul
sahf
inc
sbb
ljmp
insb
mov
ficoml
flds
sbb
loope
fnstenv
mov
push
lds
mov
mov
or
mov
std
jno
xchg
es
or
jo
in
or
faddp
jb
insb
mov
fsubl
lock
adc
lahf
fwait
sub
cmp
loopne
mov
and
les
sbb
es
inc
xchg
ret
mov
push
jae
repz
shll
roll
jae
cli
or
lods
xor
sub
loope
sbb
push
cmp
lods
or
loop
sbb
mov
ficoms
cmp
aad
inc
addr16
aaa
pop
std
mov
push
cs
add
cltd
jae
fs
mov
int3
ret
jae
scas
sbb
sub
cli
add
push
ss
in
scas
movsb
jnp
cwtl
mov
loope
and
mov
mov
fiaddl
in
js
inc
loop
mov
and
mov
lahf
in
xor
clc
pop
inc
push
jle
sti
fmull
fstpl
mov
repz
loopne
shll
stos
outsl
push
fwait
sbb
dec
adc
jecxz
mov
adc
fwait
fwait
push
adc
and
push
popf
shl
mov
jne
pop
mov
out
out
jns
inc
movsl
mov
dec
mov
mov
or
push
add
int
int
sbb
jmp
shrb
xlat
cmp
iret
int
imul
cli
cmpl
loope
outsb
outsb
outsb
jecxz
inc
inc
loopne
fs
mov
hlt
insb
outsb
cltd
aad
popf
loope
dec
out
out
pop
mov
cltd
push
dec
dec
jb
mov
mov
push
dec
iret
sbb
ss
and
ror
pop
lahf
jp
shlb
xor
test
mov
ret
in
movsl
dec
stos
xchg
cmpsl
mov
mov
mov
adc
adcb
adc
out
les
mov
sub
jl
clc
mov
stos
pop
clc
jge
rolb
decl
xchg
icebp
pop
mov
jge
push
mov
lods
pusha
xchg
mov
cld
into
aaa
aaa
aaa
aaa
add
xchg
sti
bound
repz
aas
aaa
aaa
aaa
aaa
and
popa
jbe
push
rolb
lock
fildll
lods
fcmovu
dec
data16
mov
jl
divb
mov
adc
cmp
stos
add
mov
fwait
fwait
fwait
xchg
inc
loopne
mov
inc
sbb
or
sarb
pop
iret
in
daa
faddp
lea
xchg
push
adc
add
sbb
mov
addb
jecxz
lock
lock
dec
sahf
es
dec
fcomi
mov
pop
xchg
mov
jne
vaddsubpd
nop
js
sahf
popa
out
push
shrb
mov
dec
in
cli
f2xm1
xchg
push
mov
mov
div
jnp
mov
addps
imul
xchg
imul
cmpsb
xchg
out
and
and
push
mov
int
mov
sub
fsubrs
inc
js
mov
insb
test
xor
stos
shl
xchg
lahf
imul
inc
lods
push
iret
out
outsl
xchg
loop
int3
stc
add
add
outsb
outsb
pop
add
and
dec
bound
mov
ss
mov
std
insb
push
clc
sbb
fucomi
popf
mov
mov
mov
mov
in
add
in
fdivs
and
icebp
push
jae
sti
dec
insb
pop
or
es
popf
xchg
push
pop
mov
lahf
int
or
adc
in
pop
scas
push
dec
out
testb
mov
mov
jle
pop
lcall
add
push
dec
sti
fmull
rclb
jne
loop
mov
dec
aad
inc
cmpsb
aad
insl
xor
adcl
out
push
dec
add
xchg
dec
ljmp
jns
jp
ret
outsb
fnstsw
jp
or
push
push
jb
leave
das
mov
jmp
mov
js
sbb
out
xchg
xor
jmp
add
out
mov
dec
fwait
bound
into
pop
movzbl
lret
enter
outsb
out
clc
cmp
or
les
insl
jl
adc
add
addb
loop
xlat
aas
add
test
and
loop
cmp
mov
and
and
cmp
imul
ss
inc
sub
daa
and
pop
fisttpll
xchg
loope
inc
aad
adc
adc
dec
mov
or
pop
clc
dec
sahf
int
sbb
test
push
sub
and
daa
pushf
mov
fdivrl
ds
xor
fsubr
and
sbb
outsb
scas
cli
ss
and
sti
in
pop
jno
pop
cli
fxtract
lret
arpl
mov
mov
dec
int
in
pop
xor
adc
inc
jbe
xchg
push
int
int
ljmp
cwtl
or
xchg
je
stos
lahf
int
sub
mov
inc
test
push
cmpsl
je
lock
shl
outsb
cs
mov
dec
dec
and
mov
mov
leave
mov
icebp
in
mov
pop
arpl
and
sub
xor
std
cmp
scas
add
test
lret
and
ljmp
loopne
sarl
cs
std
insb
outsb
outsb
or
cmp
shlb
push
clc
aam
jo
aad
xor
clc
or
aad
in
in
inc
je
dec
push
inc
arpl
push
mov
sbb
imul
add
xchg
movsb
adc
sahf
les
push
push
mov
into
in
mov
mov
divb
scas
fistl
pop
jno
jne
mov
fcmovne
shrb
pusha
mov
popa
inc
je
mov
adc
xor
aam
mov
fisttps
aas
xor
call
pushf
pusha
mov
mov
insb
adc
sarb
xchg
jl
jne
loope
icebp
sub
fs
xlat
mov
push
test
pop
in
pop
in
jbe
in
addr16
and
enter
je
divl
int
jg
adc
jno
mov
insb
mov
xchg
ds
ds
nop
dec
pop
pop
cmc
mov
cmpb
mov
pushf
and
mov
sub
jno
push
cwtl
inc
xchg
movsb
sbb
outsb
outsb
outsb
push
rclb
cmp
add
lahf
scas
and
outsb
outsb
outsb
bound
and
mov
cld
clc
mov
mov
sbb
add
out
out
in
aaa
pop
xchg
movsl
add
pusha
adc
arpl
jno
mov
rol
pop
cmc
mov
mov
scas
jle
pushf
lods
dec
rclb
jecxz
jmp
pop
int3
enter
jecxz
sub
cltd
xor
shlb
mov
mov
in
inc
jbe
mov
movsb
and
shll
push
out
cmp
or
mov
cli
and
aaa
fdivr
push
insl
fwait
jno
mov
jmp
lcall
mov
add
rolb
xor
mov
mov
fcmove
stos
and
ret
xor
jp
add
aaa
mov
inc
xchg
aas
push
lret
push
sbb
cmp
cmpsb
loop
push
sbb
mov
or
idivw
lss
jle
scas
sahf
mov
mov
jmp
mov
int
mov
add
cmp
mov
mov
cmp
into
mov
int
xlat
inc
cmp
movsl
mov
lea
pop
or
cmp
pop
mov
adc
and
push
jbe
lahf
mov
xchg
dec
in
push
and
loop
aaa
aaa
push
cld
movsl
faddl
rcll
pop
ss
aaa
aaa
mov
push
adcl
pop
in
iret
out
xor
rorl
fdivr
jbe
mov
arpl
ffree
frstor
lret
int
add
int3
les
sbb
fiaddl
fxch
int
int
dec
adc
push
mov
add
ds
push
out
jae
fidivrl
lds
jb
lock
jecxz
sti
orl
imul
mov
jae
pushl
jmp
push
xlat
shrb
std
insb
xlat
cmp
cmp
xchg
das
stos
inc
inc
int
lret
mov
les
mov
in
inc
cmp
movb
cmp
mov
dec
das
mov
xor
loop
aaa
aaa
aaa
ret
lods
and
in
sub
mov
ss
aaa
test
or
movsl
jns
add
pop
test
xor
or
int
adc
into
rcr
mov
test
shrb
fwait
cmp
or
fldenv
pop
cld
xchg
mov
jns
aad
xor
aaa
aaa
jg
adc
sbb
aad
push
in
ds
aaa
aaa
imul
mov
subb
push
cmp
out
iret
int
in
notl
xchg
dec
test
movsl
inc
add
pop
sub
leave
fists
jmp
fwait
outsb
pop
cmp
dec
or
in
cmp
xor
mov
fdivrl
aam
jbe
cmp
jnp
add
jo
xor
pop
mov
mov
cmpsb
mov
sar
mov
dec
jl
mov
insl
repz
jae
iret
mov
aas
and
jp
shll
xchg
cmp
cmp
imul
push
out
add
mov
aad
out
out
xor
notb
in
je
or
out
arpl
jle
jp
cmpsl
add
int
lea
mov
mov
jle
in
das
pop
scas
sar
inc
push
je
xorb
jnp
or
sahf
pop
inc
imul
mov
sahf
inc
push
or
cmp
mul
and
outsb
outsb
outsb
rclb
mov
icebp
dec
js
mov
cmp
fnstcw
stos
and
out
sub
push
xor
out
out
mov
cmc
or
repnz
or
call
in
mov
icebp
lods
sbbl
iret
testb
push
fldz
fimull
fld
jae
dec
mov
pop
lahf
fildl
jge
rorb
mov
call
outsb
ljmp
adc
or
out
std
insb
xchg
int3
into
pop
jl
xchg
dec
in
lds
adc
imul
out
mov
pop
aas
fwait
fwait
arpl
mov
mov
jl
cmp
aam
pop
lahf
clc
jne
dec
cmpsl
aam
std
insb
pop
dec
xchg
mov
mov
call
xor
inc
xor
outsb
aas
fildl
inc
mov
xchg
sub
fisubl
or
lods
insb
mov
adc
rcrb
cmc
add
sahf
and
rcr
icebp
mov
dec
mov
mov
xor
mov
int3
movsl
es
xor
sbb
out
push
das
test
ret
xchg
cmpsb
cmpsb
test
add
enter
cltd
clc
jns
outsb
outsb
clc
dec
jne
imul
iret
lret
fidivrl
ja
test
loope
loopne
cmp
push
fnstcw
add
in
addl
rcr
mov
jg
sub
fwait
in
sbb
add
sahf
mov
stc
lcall
dec
dec
adc
insb
adc
loope
fdivrl
and
pop
or
push
xor
add
rcl
or
aam
aam
jb
jae
jae
ljmp
mov
adc
mov
ljmp
pop
or
dec
cmp
loope
push
sbb
push
cmp
imul
bound
jae
dec
icebp
or
xchg
aaa
mov
lret
pusha
idivl
or
loope
int3
into
es
cs
xor
mov
and
jge
aas
fistpl
fwait
pop
push
in
mov
cmpsl
hlt
mov
mov
imulb
lahf
in
jo
aas
xchg
xchg
or
mov
fdivs
aaa
ja
lret
ret
adc
fdivrl
cmp
aad
cld
adc
and
cli
sahf
sbb
xchg
jo
xchg
push
and
xchg
fsubrs
jp
or
pop
out
push
jl
push
pusha
and
outsb
outsb
dec
sub
add
or
jge
mov
add
shl
pop
fcomi
mov
jno
push
pop
push
hlt
mov
xor
es
stos
push
lahf
fwait
fwait
aaa
insb
xlat
gs
mov
int
int
sbb
mov
popf
push
aad
push
and
lahf
int
jecxz
mov
popl
jo
jbe
lret
test
xor
inc
aas
hlt
movsb
leave
pop
pop
mov
mov
xor
dec
add
push
das
mov
hlt
outsb
mov
fcmovne
inc
inc
jl
add
outsl
fiaddl
scas
les
and
int3
dec
data16
lcall
xchg
test
fists
test
lcall
jne
sub
sahf
js
jmp
pop
arpl
push
nop
cmpsb
insb
andb
and
inc
test
pop
mov
outsb
outsb
outsb
outsb
mov
sbb
iret
mov
mov
mov
and
negb
sbb
outsl
out
mov
or
mov
test
inc
mov
and
jl
sub
fwait
iret
fnstcw
push
loopne
clc
xor
jae
sti
out
push
adc
add
inc
cmpsl
test
dec
iret
in
jae
push
ret
push
addr16
xchg
jae
cmp
lods
jle
test
mov
ret
addr16
xor
pop
mov
pop
ret
push
xchg
shrb
cmp
jae
shll
xor
and
dec
shlb
loope
lcall
lahf
into
arpl
sbbl
sar
fnstenv
add
jb
inc
ret
and
aas
repnz
jl
jl
je
insl
test
or
fisubl
mov
jns
out
mov
mov
imul
fwait
fwait
fwait
fwait
mov
cmpl
outsb
aas
fwait
cs
cmpsl
xorb
add
insb
outsb
outsb
outsb
outsb
pop
push
and
jle
shrl
mov
jle
mov
out
push
loop
lock
adc
mov
xor
std
dec
xchg
in
push
or
fiadds
out
xlat
sbb
jb
in
out
mov
clc
lret
fcoml
jmp
mov
mov
mov
pop
add
mov
xchg
faddl
mov
push
jecxz
jp
outsb
outsb
ljmp
mov
test
pop
lock
mov
xchg
into
add
xor
lcall
sbb
rcrb
add
lock
fsubrl
push
popf
aam
mov
mov
xchg
subl
xchg
mov
scas
adc
aaa
aaa
pop
cmp
out
push
ds
loop
mov
pop
xor
ss
aaa
aaa
mov
das
jb
push
ljmp
fs
imulb
int
push
popf
mov
adc
outsb
cs
fcoml
stos
in
or
jne
push
lods
daa
jge
sbb
jnp
sub
adc
mov
sub
loopne
jecxz
dec
push
out
jae
sub
add
popf
lea
in
aad
mov
pop
adc
and
fwait
fwait
xchg
enter
rcr
aaa
aaa
jl
test
xor
lds
mov
lds
ret
mov
push
clc
cld
adc
push
fisttpl
lahf
mov
xorb
in
mov
or
and
std
cmp
or
icebp
fdivl
push
xchg
mov
jmp
xchg
movsb
insl
add
orb
fstpt
sbb
push
adc
gs
pop
lock
mov
pusha
pop
inc
loopne
fmull
pusha
scas
andl
out
fisttpll
jbe
repnz
fidivrl
sub
ds
aaa
int3
lret
jo
mov
lock
jns
fcoml
inc
ja
add
adc
mov
hlt
fld
jmp
in
out
xchg
cmpsb
lods
adc
out
out
inc
xor
xchg
bound
icebp
lods
cli
mov
setnp
fisubrl
adc
testb
sbb
adcb
fsubl
pop
imul
es
insb
jecxz
sbb
daa
fnstcw
orb
imul
xor
xchg
add
push
pop
jns
sahf
sbb
push
push
loopne
mov
cmp
aad
and
dec
clc
insb
xchg
repz
mov
stos
inc
shll
les
out
psrad
add
mov
into
inc
pop
clc
cmp
in
int
sti
xor
mov
xchg
mov
jle
shrb
xchg
int
push
shlb
dec
adc
fwait
fwait
and
xor
into
leave
sub
fdivp
mov
out
pop
call
mov
xor
loopne
jl
mov
test
sbb
pop
jmp
sub
pop
or
popa
jl
in
rep
jae
jp
das
data16
dec
xor
icebp
xchg
mov
sub
pop
movsl
test
cmpl
movsb
push
pop
out
sarb
push
xchg
jo
ja
aam
fisttpl
sub
dec
lahf
or
pop
mov
cld
scas
jle
inc
sbb
fisubs
xchg
cmp
dec
xchg
push
jbe
adc
lock
outsb
lahf
in
add
es
add
jns
aas
sub
pushf
cmp
pop
clc
insb
sahf
or
jae
rcrb
imul
xchg
arpl
xlat
xorb
fsub
add
mov
push
jnp
es
out
add
pushf
rcr
leave
call
out
out
outsb
pusha
mov
pop
pop
lods
mov
jae
mov
clc
sahf
push
xchg
rcrb
mov
lret
fcompl
push
iret
cmp
adc
aas
jae
mov
mov
scas
out
je
mov
pop
lods
jae
cmc
insl
in
ficomps
push
aaa
aaa
aaa
aaa
xor
xchg
das
outsl
push
call
aaa
aaa
aaa
aaa
adc
arpl
daa
or
cmp
xor
xchg
cmp
icebp
and
inc
outsb
inc
shrb
mov
cwtl
push
xchg
mov
insb
es
mov
push
fwait
mov
push
sub
subl
push
xor
fcmovnbe
cmp
pop
cld
mov
out
push
imul
ret
jp
lea
ljmp
lret
lcall
insb
cmp
dec
repnz
push
jg
test
mov
fnstcw
aaa
xchg
clc
mov
mov
lods
push
daa
lock
mov
pop
adc
scas
sbb
fdivrl
lret
xor
jmp
jnp
sub
xchg
jbe
pop
addr16
icebp
insb
outsb
outsb
aad
pop
cmc
cmovl
or
ds
xchg
adc
add
mov
cmp
jg
outsl
xchg
jle
or
mov
mov
adc
mov
jp
jnp
jb
nop
movsl
aaa
adc
push
jl
popa
jge
push
xor
mov
fmull
das
lods
aas
clc
movsl
pop
les
mov
and
scas
js
outsb
outsb
fisttps
add
fincstp
sub
jb
mov
mov
clc
jns
cmpsb
xor
out
xchg
jp
mov
imul
mov
outsb
outsb
outsb
outsb
sahf
dec
stos
data16
jo
imul
outsb
outsb
jge
mov
push
scas
xchg
adc
push
mov
mov
sbb
fucomip
adc
push
push
pop
insl
mov
outsb
outsb
pop
push
daa
adc
clc
mov
rcr
icebp
xchg
jecxz
outsb
adc
and
outsb
rcrl
cli
adc
loope
pusha
sub
outsb
pop
clc
push
loopne
mov
cmp
divl
hlt
add
jmp
dec
lods
jae
or
inc
or
or
add
jnp
push
fcompl
mov
in
popf
lret
outsb
lahf
fwait
dec
push
push
imul
out
ja
mov
adc
adc
adc
mov
add
or
jmp
or
add
divb
jecxz
lods
sbb
ljmp
out
out
jb
sti
xchg
stc
jp
repnz
lds
aas
dec
iret
mov
mov
lahf
int
aad
jo
fsub
push
fidivrs
clc
fdivrl
ds
hlt
mov
fcompl
push
dec
mov
jno
out
push
mov
iret
int
in
sti
pop
fstps
xor
rep
mov
lahf
outsl
mov
push
rolb
mov
mov
pop
and
adc
cli
mov
adc
lahf
fwait
icebp
gs
sub
aas
pop
inc
icebp
pop
add
aaa
push
sbb
clc
in
cli
cli
sbb
lock
clc
fdivrl
xchg
aad
mov
and
mov
into
fists
sub
movsl
in
arpl
mov
or
or
xorb
mov
pushf
dec
sub
shrb
push
aad
in
cmp
jle
jne
pop
xorb
dec
mov
jbe
scas
sarb
pop
mov
add
mov
je
pushf
ret
popf
sti
faddl
loop
adcl
bound
jae
pop
push
fistpll
out
jle
mov
jae
jae
les
xor
or
jae
je
or
rcrb
hlt
lods
sbb
aaa
mov
int
cmp
push
push
xchg
push
or
ds
aaa
out
lea
inc
jno
imul
and
in
jle
mov
movl
or
stos
dec
cmp
sbb
aad
out
push
test
sbb
mov
js
push
sbb
sbb
xor
mov
int
in
repz
cmp
pop
or
aaa
jge
sbb
in
mov
and
jge
ss
int
jb
jmp
or
fistpl
movsl
pop
xchg
es
mov
aas
ficomps
in
or
rol
or
int
jnp
stos
mov
push
cmp
and
fsubrs
inc
das
jmp
cld
jp
loope
fsubrl
rcrl
lods
js
insl
or
pusha
stos
fdivl
cld
cmp
aas
fiadds
rcrl
cli
insb
lcall
ds
sub
mov
mov
xor
insl
jmp
dec
clc
test
psrad
aam
or
jae
aam
test
inc
xchg
int
mov
adc
pop
lret
mov
and
pusha
lods
lahf
push
addr16
fucomi
fcmove
xor
push
lods
mov
mov
inc
mulb
test
stos
push
dec
sahf
push
enter
hlt
lea
stos
test
adc
dec
pop
mov
aas
mov
xchg
hlt
das
pop
int
int
and
mov
mov
aad
int
int
jp
fisubrs
mov
and
push
das
jecxz
xchg
sahf
int
mov
pop
sub
int
sti
fldenv
shll
shr
lea
cmc
jbe
iret
xchg
sbb
jle
cmp
subb
cmpsl
or
xlat
data16
xor
out
jb
mov
jge
outsb
aas
insb
imul
push
adc
ret
negl
cmc
mov
and
adc
dec
mov
loop
dec
mov
cmp
fs
or
imul
xchg
dec
xor
lahf
jbe
movsl
lret
icebp
mov
mov
cmc
inc
insl
jbe
pop
cld
loopne
cli
push
pop
mov
mov
mov
test
sbbl
sbb
fistl
xor
lock
add
adc
xor
fistpl
cmpsb
mov
fsubl
es
dec
out
shlb
je
ds
jecxz
hlt
add
in
xchg
loop
loope
lock
das
cmp
lcall
mov
jl
rorb
xchg
sahf
add
out
push
and
mov
clc
cmp
enter
push
jae
jae
sbbb
sarb
push
jg
mov
out
out
and
leave
jecxz
dec
pushf
mov
jae
fs
push
cli
ret
cs
jae
xchg
jmp
rcrl
dec
ret
unpcklps
cltd
insl
int
inc
loope
xchg
lods
xor
or
push
inc
iret
out
iret
es
shlb
out
lret
addr16
popa
mov
add
mov
out
iret
in
fiadds
cwtl
adc
inc
cltd
nop
jb
jbe
pop
iret
out
out
dec
jge
cltd
xchg
dec
rclb
fprem
addr16
xor
mov
addr16
pop
out
adc
dec
push
mov
aaa
sub
pop
inc
cmp
fdivrl
aaa
movsb
mov
mov
or
loope
ret
mov
in
es
sbb
or
sbb
filds
inc
cmp
mov
repnz
xchg
or
or
add
orb
jl
mov
test
sub
inc
xor
push
leave
mov
nop
cli
insb
out
push
push
mov
dec
cli
fdiv
fisubrl
cmp
subl
pop
mov
push
cli
out
repz
and
arpl
xlat
out
jae
test
je
xor
push
pop
jnp
mov
mov
out
dec
pop
daa
push
fsubl
stc
es
lret
cs
xchg
outsb
cli
aam
clc
flds
mov
fdivrl
mov
mov
adc
mov
mov
fcoml
mov
mov
jae
rcr
xchg
pop
xor
fistpl
push
dec
jbe
mov
or
pop
sub
xchg
xor
scas
inc
dec
sbb
bnd
fcomi
jge
or
adc
shlb
outsl
ljmp
push
jg
clc
mov
dec
sub
mov
mov
fstps
insl
xchg
ret
dec
aam
mov
jl
pop
push
xchg
cwtl
adc
daa
jecxz
test
cmc
and
mov
fidivrs
popf
movsl
adc
xor
mov
insb
outsb
cld
sub
test
xor
cmpb
in
or
and
xchg
mov
lea
or
adc
popf
in
aaa
aaa
aaa
call
das
addr16
dec
jae
ss
in
dec
jg
xchg
adc
inc
jmp
aaa
aam
push
in
sub
neg
ds
cmp
leave
pop
and
in
hlt
dec
lock
jle
xabort
jae
fdivl
push
out
adc
add
cltd
mov
andl
lret
jecxz
mov
aaa
aaa
sub
dec
pop
xchg
fistpl
pop
lcall
mov
mov
mov
orl
xor
hlt
inc
inc
adc
scas
cmpl
sbb
fidivrl
je
out
dec
ljmp
shlb
into
cmpsb
scas
mov
mov
lret
xor
adcb
xchg
icebp
icebp
xor
int3
push
mov
mov
mov
jle
lahf
add
adc
lret
imul
fcompl
sub
xchg
push
cs
mov
in
mov
inc
bound
test
adc
dec
mov
jno
mov
or
sbb
shrb
addr16
sub
dec
bound
std
iret
std
aaa
aaa
mov
and
cmp
sahf
loop
ds
adc
adc
int
in
dec
mov
loope
jp
popf
jne
int
int
pusha
push
nop
dec
cmp
add
jb
int
int
and
data16
pushf
mov
sub
mov
shll
icebp
fmuls
aas
fwait
fwait
fwait
cmp
jecxz
sub
test
cmpsl
push
jo
push
xor
sbb
pop
cwtl
push
sbb
outsb
fbld
rclb
jmp
pushf
cli
lds
out
ret
loope
sbb
dec
mov
outsl
pop
test
jb
fdivrl
push
fwait
dec
push
stc
fmul
mov
lock
shrb
mov
adc
jne
cli
adc
jns
pusha
aam
mov
and
jae
jp
mov
jno
stc
mov
push
imul
in
push
push
pop
gs
inc
imul
in
dec
or
mov
sbb
lods
loopne
xor
iret
mulb
and
aas
mov
pop
mov
out
not
and
dec
shrb
mov
fistl
movb
ret
shl
bound
idivl
inc
sub
insb
int3
xor
scas
cmp
ja
repz
divl
mov
lods
stos
or
cmc
loopne
addb
jmp
adc
pop
nop
and
add
hlt
cmp
jle
and
dec
pop
popf
fcompl
mov
subb
dec
cli
fldcw
ss
mov
scas
mov
fidivrs
mov
mov
fstpl
pop
in
pop
lahf
sahf
fists
xchg
or
aam
mov
arpl
test
jge
or
xchg
andl
aaa
adc
pop
aad
lea
mov
pop
ret
cs
lahf
shrb
jae
sti
push
mov
or
inc
sbb
lods
jo
mov
cmp
and
mul
out
out
movsl
test
xchg
pop
sub
fucom
out
out
out
and
cmp
jns
xchg
out
out
cmp
adc
sbb
pop
cmp
out
cmp
imul
pop
lods
cmp
into
lods
xchg
inc
fdiv
clc
and
xor
insl
test
leave
outsb
outsb
outsb
cs
add
xchg
imul
jge
jl
pop
in
in
mov
out
push
xor
subl
sub
dec
lea
icebp
sarb
push
add
jle
pop
cmp
es
mov
mov
mov
je
push
push
cmp
fcmovbe
inc
sbbb
jl
stc
sub
loopne
or
and
jmp
aad
cmpsb
dec
xchg
outsb
pop
jmp
loopne
cwtl
sahf
test
jge
sub
push
bound
pop
pop
fsubl
jl
dec
push
enter
in
jb
movb
mov
inc
pop
adc
test
cmp
push
push
ja
ficoms
lahf
insb
jnp
dec
add
add
aaa
lret
adc
mov
push
mov
cld
insb
outsb
outsb
dec
mov
aam
lret
in
es
push
mov
mov
ss
mov
jmp
and
pushf
dec
fs
movsb
mov
lock
sahf
std
sub
fdivrl
in
nop
loope
aaa
test
xor
sbb
ds
pop
pop
dec
int3
cmp
inc
movsl
stos
movsb
bound
lock
ror
cmp
jnp
jl
sbb
cwtl
jp
xchg
lea
xchg
stos
cmp
mov
lss
sahf
int
pop
es
cmp
test
jne
and
aad
jbe
outsb
outsb
lret
jb
lods
cld
jl
dec
pop
jo
adc
fimuls
lds
out
stos
or
js
xorl
test
rcrb
jg
mov
sub
negb
sbb
mov
sbb
fwait
ss
cmp
add
in
scas
cmp
jecxz
xor
inc
cld
ret
xlat
xchg
sahf
pop
push
nop
arpl
fnstcw
cmp
call
insb
pusha
pop
insb
loop
sub
pop
shl
or
mov
sub
sub
daa
or
or
jl
jge
push
push
add
sbb
int
sti
aas
sbb
dec
sub
push
int3
and
int
int
push
mov
mov
jp
subl
xor
sub
cli
dec
adc
out
and
jb
rcrl
aaa
mov
lods
adc
into
adc
test
and
daa
ds
aaa
mov
mov
bound
fistl
dec
inc
xchg
pop
leave
inc
scas
push
jle
hlt
sti
add
insb
sub
cmc
test
mov
js
push
stos
mov
cmp
repnz
dec
mov
jecxz
sbb
cmp
stos
call
iret
int
sbb
clc
loopne
add
mov
bound
iret
jae
test
outsl
jmp
and
int
pop
push
cmp
outsb
fdivr
int
int
bound
jne
jmp
inc
adc
jns
xchg
aam
mov
mov
nop
in
jmp
adc
sahf
mov
xor
std
mov
mov
xchg
out
cltd
les
and
add
jae
loope
cld
jl
mov
cltd
test
xchg
inc
stos
fs
sarl
aaa
dec
mov
mov
xchg
enter
jmp
or
xchg
cmp
divb
test
test
out
mov
jno
fidivrl
call
cmp
adc
insb
xor
add
aaa
aaa
aaa
or
inc
and
adc
fdivrl
xor
pop
psrad
pop
cli
cmp
adc
inc
xchg
lahf
dec
jp
cmp
xchg
xchg
push
push
xor
arpl
insb
add
or
push
cmp
enter
pop
jb
scas
sub
push
push
add
jp
ja
xor
inc
jbe
push
aam
xor
and
cmp
ds
aaa
push
test
loope,pn
and
lret
insb
cld
xor
test
jns
ja
mov
cld
xchg
push
jle
shr
outsb
shld
dec
dec
in
mov
xor
inc
inc
mov
jge
inc
inc
cmpb
out
nop
fsubr
mov
sub
push
sub
mov
adc
mov
sub
cmpl
loope
inc
fwait
mov
or
bound
cmp
jae
data16
sub
insb
jno
cmc
sub
jae
jae
add
add
jno
cltd
jmp
in
dec
jae
push
dec
mov
rorb
pop
xor
cmp
outsl
addr16
les
sub
lahf
out
out
loopne
pop
les
sahf
popa
jl
out
sbb
mul
or
stos
fcompl
jle,pn
or
adc
fcoml
inc
adc
das
jmp
in
inc
rorb
outsl
in
test
shll
sub
dec
fcomp
mov
in
pushf
mov
and
jbe
push
pop
xlat
addr16
mov
loop
clc
cmp
ret
repz
outsb
pop
add
adc
sbbb
popa
or
sub
outsb
outsb
jne
loop
imul
cmp
clc
insb
outsb
pushf
pop
lret
iret
sub
out
testb
cmp
mov
inc
xchg
outsb
outsb
aas
fistl
into
out
inc
push
mov
inc
pop
dec
inc
mov
outsb
outsb
outsb
stos
sbb
xchg
mov
pcmpeqb
sub
or
nop
nop
push
mov
aaa
push
loop
sti
mov
mov
fbld
popa
cld
pop
pop
jg
clc
insb
ja
or
jns
and
xor
pop
adc
fnstcw
mov
sti
movsl
pop
int3
xor
inc
jg
sbb
xchg
stos
jo
cld
and
sbb
rcrb
mov
iret
in
addr16
sub
sub
das
lods
push
int3
or
pop
or
pop
addb
pop
lock
rclb
loop
pop
das
inc
ljmp
icebp
mov
sbb
aas
and
mov
sahf
pop
lock
pop
mov
pop
and
xor
pop
pop
insl
sbbb
clc
outsb
shlb
and
sbb
pop
imul
xor
jae
iret
out
fdivrs
fidivl
clc
jae
jae
add
stc
push
loope
push
mov
xchg
ljmp
mov
jle
test
cmp
lock
mov
adc
insb
ds
mov
jbe
mov
or
std
lret
xlat
and
fdiv
xchg
hlt
push
call
dec
test
fsubl
test
xchg
repnz
test
fwait
and
xor
mov
fucom
mov
into
inc
daa
add
push
int
enter
inc
mov
mov
mov
jl
pop
add
pushf
orb
push
jae
dec
cli
cmp
jle
jg
adc
adc
mov
jae
mov
fidivl
jmp
filds
orb
imul
js
adc
aaa
mov
adc
xchg
adc
pop
jo
fwait
mov
aaa
pop
xchg
arpl
test
adc
mov
fidivrs
cmp
or
out
mov
pop
sahf
ret
add
xor
xor
adc
je
les
adc
repz
fistl
das
pushf
shl
and
jle
clc
cmpsb
popa
roll
mov
pop
sahf
repz
mov
xchg
cwtl
xor
int
push
fisubs
mov
dec
add
and
lahf
int
cmp
pop
enter
pop
xchg
outsb
outsb
pop
sbb
roll
aaa
inc
lds
insl
add
outsb
outsb
jle
add
sarl
jno
mov
mulps
mov
cmp
mov
addb
popf
movsb
mov
add
les
insb
mov
stos
push
pop
cli
lret
int
mov
dec
test
js
in
inc
cmp
push
push
xor
insb
outsb
loopne
cmp
sub
jns
pop
and
lods
sub
arpl
cmp
into
push
aam
fstps
jno
lcall
loop
pop
shlb
inc
ret
andb
jl
in
sti
fdivrl
dec
mov
aad
rorb
aaa
mov
int
dec
pop
repz
fadds
pop
push
iret
ds
aaa
aaa
pop
adc
xchg
lahf
xchg
pushf
adc
out
sbb
adc
test
or
fisubrl
add
or
in
mov
int
sbb
add
cld
roll
ljmp
fwait
stos
ds
ds
pusha
dec
decb
ss
fwait
fwait
fwait
mulb
and
arpl
aas
fwait
fwait
cmp
jg
ja
fidivs
xchg
sti
andb
stc
mov
mov
lock
and
fcomi
shrb
inc
mov
ret
push
lret
insb
aam
mov
shlb
dec
mov
rolb
adc
testb
in
jae
cmpsl
enter
lahf
int
pusha
xchg
dec
mov
jb
mov
in
addl
and
inc
fwait
cmp
ja
flds
jp
into
rcrb
cmpsb
fwait
sbbl
mov
addl
dec
mov
mov
mov
cli
inc
out
xor
and
sub
outsb
clc
fnstcw
inc
ret
pop
mov
mov
outsb
into
mov
and
outsb
outsb
outsb
outsb
pop
sbb
inc
outsl
push
outsb
outsb
outsb
outsb
adc
and
mov
cmp
shrb
outsb
clc
pop
in
sarl
sbb
iret
testb
mov
xchg
xchg
pop
adc
fildl
in
iret
icebp
mov
mov
vpcmpgtw
lock
or
fwait
cmp
test
push
int3
idivb
dec
adc
dec
inc
xor
push
pop
xchg
mov
mov
aaa
aaa
sbb
test
std
into
add
cmp
jne
shrb
nop
int
in
addr16
pop
leave
addb
sarb
ficoms
aaa
mov
int
movsl
sub
jbe
or
mov
aaa
aaa
aaa
aaa
sbb
adc
fidivrl
clc
and
mov
mov
add
fildl
aas
test
xchg
push
push
pusha
int
sahf
fwait
lea
in
pushf
push
out
cmpsb
lahf
fst
and
mov
outsb
cwtl
int
out
inc
sub
movsl
cwtl
insl
pop
loope
pop
inc
hlt
daa
inc
iret
int
addl
rorb
dec
mov
int
data16
out
push
ret
data16
in
mov
leave
out
out
lret
cli
in
insb
cltd
push
mov
out
scas
dec
hlt
mov
jnp
sbb
mov
inc
lret
dec
aas
mov
mov
mov
int
int
out
imul
sub
ss
int
inc
divl
insb
outsb
outsb
clc
hlt
add
inc
mov
popa
cld
loope
test
hlt
dec
lods
stc
and
lcall
and
fwait
xchg
insl
leave
xor
pushf
faddl
mov
jb
pop
and
jmp
out
enter
inc
lahf
add
es
xor
call
mov
dec
mov
mov
popa
and
push
out
notb
mov
mov
lds
jmp
rcrl
std
mov
cmc
loopne
sbb
js
or
sub
lock
push
mov
imul
adc
pop
scas
add
outsb
pop
movsl
lods
pop
in
mov
sub
fcmovnbe
lret
ret
adc
cld
mov
in
mov
dec
cli
in
fcoml
xchg
es
dec
pop
test
out
out
adc
mov
out
out
jne
inc
pop
movsb
and
aad
pop
arpl
add
inc
enter
jb
testl
ds
push
push
lcall
fldl
idiv
fidivl
lock
pop
fs
mov
fwait
fwait
pop
std
imul
ds
jge
add
xchg
daa
cmp
rcll
cmp
xor
fwait
mov
and
enter
add
rclb
sti
test
xor
push
and
lea
je
jmp
mov
xchg
xor
or
jae
jae
jl
sahf
sahf
mov
movl
test
pop
out
xchg
hlt
test
jle
popa
aaa
cmp
xor
mov
out
shrb
inc
cwtl
xchg
jle
loop
mov
gs
fwait
fwait
sbb
movsb
mov
jmp
out
ljmp
scas
add
fstp
pop
testb
mov
addr16
out
push
int3
jae
mov
push
es
mov
push
and
or
mov
mov
je
jbe
adc
loopne
loop
push
push
sahf
fildl
mov
js
sbb
mov
mov
fldenv
outsb
out
clc
cmp
sbb
ret
sarl
cmc
movsl
icebp
insb
lock
pop
sbb
push
int
insb
push
out
sbb
xor
leave
or
in
mov
shll
scas
sbb
add
mov
int
mov
add
push
aas
or
mov
rcrb
lcall
and
xor
orb
enter
push
lahf
stos
mov
das
pop
repnz
into
push
mov
adc
dec
loop
cmp
mov
pop
jo
loope
loop
inc
ljmp
cli
push
inc
mov
jae
dec
idivb
bound
shll
sub
mov
icebp
dec
push
and
adc
mov
aaa
aaa
aaa
pop
push
sbb
add
in
and
sub
outsb
push
cld
lcall
xor
push
dec
mov
out
sub
loop
bound
ret
iret
push
dec
or
je
mov
dec
jae
jae
cmpsl
mov
or
cld
sub
fsubrl
xor
iret
jae
testl
xchg
enter
aaa
aas
hlt
arpl
adc
push
pop
jp
push
cmp
test
jae
mov
lods
push
cli
mov
and
leave
add
pop
adc
fwait
addr16
aaa
aaa
aaa
pop
xor
xchg
sbb
or
and
scas
aam
fsubrs
outsb
jp
inc
xchg
and
sahf
in
lods
loopne
jns
mov
cs
enter
cmp
data16
imul
or
loop
push
lea
push
into
test
sti
fs
outsl
mov
add
outsb
mov
das
push
mov
sbb
mov
or
xchg
and
aas
adc
push
mov
aad
mov
adc
jns
inc
les
out
out
ficoml
lds
shrb
out
or
iret
mov
inc
cltd
dec
pop
outsb
outsb
outsb
outsb
adc
ret
rcrl
pop
hlt
adc
gs
mov
in
fsubl
fisubrs
add
shrb
add
or
in
ljmp
add
aam
jae
or
aaa
aaa
mov
and
sbb
ss
add
add
mov
xchg
dec
mov
mov
outsb
outsb
mov
inc
icebp
mov
lret
pop
xchg
je
cmp
insb
outsb
ss
and
add
or
out
mov
rcrb
out
test
pop
push
popa
inc
out
pop
das
fimuls
mov
mov
je
add
fs
les
mov
in
and
mov
test
xor
aaa
aaa
aaa
scas
mov
mov
mov
jbe
push
in
loop
int3
stos
mov
int
in
enter
sub
cmpb
pop
iret
or
mov
xchg
scas
addl
repz
jne
cli
pop
pop
adc
int
cmp
push
test
push
fwait
fwait
and
pop
jo
mov
mov
sub
int
push
outsl
mov
pop
addr16
in
mov
ret
fbstp
xchg
int
int
leave
mov
or
dec
inc
out
out
iret
int
stc
pop
fucomi
repnz
int
iret
pop
xor
test
add
iret
int
cltd
imulb
cmp
cld
push
sbb
push
les
cmp
jle
push
adc
insb
outsb
lret
movsl
push
imul
out
idivb
shlb
aaa
ret
or
outsl
pop
mov
push
outsb
outsb
mov
sbb
mov
inc
mov
into
cmp
pop
sahf
fstpl
popa
mov
loop
stos
jne
xchg
jp
and
les
mov
cmpsb
sub
and
dec
dec
decl
icebp
xor
cmp
loopne
cld
insl
out
out
rcrb
sbb
jae
addr16
inc
inc
mov
loop
and
push
out
jns
sahf
das
aaa
scas
adc
aaa
xchg
jge
dec
adc
sbb
add
mov
lcall
lea
inc
mov
jge
dec
xchg
and
stos
pushf
mov
les
outsb
std
int
adc
or
test
dec
fdiv
xor
inc
add
mov
cmp
and
insb
nop
mov
push
mov
cmp
out
cltd
xor
jle
xchg
icebp
mov
mov
mov
jae
jecxz
in
bound
fdivrl
mov
xchg
js
or
jle
adc
push
mov
stos
test
dec
lahf
in
sti
faddl
testl
sub
into
insl
adc
insb
jp
cltd
mov
and
fs
ficomps
adc
divb
pusha
rolb
dec
pop
testb
ljmp
out
cltd
fisubl
lds
cwtl
xchg
fwait
push
aad
pop
push
es
aas
fwait
fwait
fwait
cmc
out
add
pop
jl
into
pop
lock
insb
insb
icebp
ret
adc
in
inc
add
sbbb
int3
hlt
pop
popf
hlt
jbe
aad
sbb
push
ss
dec
jecxz
cmp
in
addb
mov
push
lret
xchg
add
mov
fildl
jp
xchg
jb
jl
fwait
fwait
pop
scas
adcb
mov
xor
mov
sbb
bound
into
cmp
xlat
out
mov
xchg
inc
jmp
out
out
call
xor
pop
es
adc
iret
out
push
lock
popf
pop
leave
fwait
or
int
outsb
pop
cmp
mov
xchg
dec
and
mov
je
dec
pop
lods
push
cltd
ss
pushf
sbb
mov
pop
cld
insb
push
adc
cs
outsb
dec
stc
mov
pop
dec
fsubrs
cmc
insb
outsb
outsb
lds
dec
jo
shrb
rcrb
lcall
lahf
mov
fstps
push
aaa
aam
and
cmp
clc
sbb
pop
adc
mov
call
fisubs
push
push
stos
sbb
inc
push
mov
movsl
sub
mov
cmpsb
ret
hlt
sbb
dec
addr16
cmp
push
push
mov
in
inc
xor
lock
add
bound
ja
xchg
adc
lods
cmp
pop
sbb
cld
mov
lahf
fistl
test
mov
sub
cmc
adc
or
jbe
sbb
in
stc
dec
add
xor
cwtl
xchg
in
sub
mov
insb
jg
lahf
es
int
int
iret
mov
inc
and
shll
sub
dec
aam
jmp
out
fwait
stos
ds
sub
adc
jbe
or
lahf
xchg
enter
cmpsb
push
inc
adc
insl
cmp
cbtw
in
inc
pop
inc
sub
sti
popf
lods
mov
pop
inc
xchg
mov
loopne
in
divl
ds
jp
pushl
jae
outsb
mov
aaa
filds
lea
mov
or
xor
stc
jne
fnstsw
xor
icebp
mov
push
cwtl
lds
jne
or
adc
sbb
out
in
push
mov
pushf
fistpll
xchg
jo
xor
les
mov
mov
lahf
sbb
insb
jno
test
sub
xchg
jno
add
and
lock
ftst
ficompl
ret
mov
push
adc
in
push
test
fcompl
or
cmp
mov
mov
mov
pushf
icebp
mov
mov
cmc
shrl
mov
fdivrl
jmp
shr
cmp
sbb
lods
jle
daa
jecxz
fmul
adc
lods
and
adc
inc
pop
push
push
popa
fmull
add
dec
mov
js
iret
out
out
sub
shrl
repz
lret
pop
jge
fucomi
test
fidivs
ja
lods
jmp
cli
ljmp
cmpsb
stos
in
int
int
call
inc
shrb
or
icebp
ret
sar
inc
nop
pop
push
jle
adc
loope
loope
fdivrl
xorl
aam
mov
insb
lcall
fistpl
or
je
mov
in
sbb
mov
andl
out
lahf
int
rcll
mov
loopne
les
lods
or
jle
mov
mov
mov
int
jae
push
in
in
and
daa
lock
add
aaa
andb
xrelease
addr16
push
in
sub
xor
dec
lods
lahf
in
mov
testl
and
and
mov
rcll
into
rcr
jp
mov
inc
mov
fistpl
mov
out
jo
adc
mov
sahf
stos
jmp
insb
pop
dec
xor
cld
mov
xor
or
jl
insb
jl
pop
push
out
mov
mov
dec
test
xchg
jns
rorb
jl
scas
hlt
sbb
xor
ja
inc
xchg
in
mov
adc
aaa
aaa
cli
push
cmp
xlat
movsl
pop
fwait
aaa
aaa
aaa
aaa
inc
add
jnp
dec
mov
cwtl
out
cmpsl
jne
mov
mov
mov
je
out
subl
bound
xchg
jg
outsb
outsb
lahf
fwait
popa
shll
mov
ret
jp
shl
std
insb
hlt
cwtl
push
xor
mov
test
cmp
inc
dec
insb
jl
xchg
push
mov
fwait
fwait
fwait
imul
and
pop
jl
aas
mov
movsb
dec
jbe
ds
mov
mov
pop
sbb
cmp
push
fdiv
test
icebp
dec
dec
jnp
mov
jae
ficompl
sbb
sbb
fildl
icebp
arpl
shlb
mov
imul
xchg
sub
mov
lahf
xchg
hlt
jnp
outsb
jbe
lods
std
lcall
jge
inc
xchg
lock
fwait
fwait
cmp
mov
popa
push
nop
aas
push
insl
pop
shrb
fwait
mov
out
fcmovnb
daa
dec
mov
pop
xor
add
mov
test
out
cmp
out
and
dec
mov
int
scas
mov
mov
pop
ror
int
fdivrp
dec
pushf
push
cwtl
sbb
pop
pop
cmpsb
inc
xor
int
in
jge
pushf
ljmp
jb
or
icebp
mov
clc
push
cmp
out
mov
and
pop
cwtl
mov
mov
mov
mov
sub
or
push
jae
iret
test
mov
fcomps
je
sti
sub
jae
sbb
sbb
add
out
scas
inc
aad
dec
jae
jae
pop
popa
mov
pop
sahf
mov
cmc
jecxz
jae
and
in
shl
xor
jle
add
mov
fdivrl
aaa
push
les
lahf
js
es
pop
int
cli
pop
pop
lret
cmp
int
clc
testb
insb
jmp
or
or
out
rol
ffree
orb
or
jbe
outsb
lahf
fwait
fwait
icebp
test
cmp
or
dec
in
sarl
push
cmc
sub
loopne
in
pusha
call
out
dec
pop
fdivl
cld
out
add
ss
dec
negb
mov
lods
xor
in
outsl
call
test
or
xor
lea
cli
dec
outsl
loopne
icebp
dec
cwtl
push
lcall
in
inc
push
dec
ficoml
mov
mov
fmull
fsts
pop
jo
faddl
loope
add
popf
jmp
out
sti
add
out
mov
jge
push
out
out
add
les
cld
test
adc
imul
test
nop
adc
push
and
inc
int3
dec
mov
xchg
mov
add
outsb
add
mov
jecxz
repz
clc
mov
cmpl
bound
add
or
shrb
fcmovne
negb
roll
movsb
push
cmp
in
das
test
out
notb
mov
xor
adc
dec
and
add
pop
cmc
pop
xchg
cmpsl
loopne
sub
sarb
jg
push
ds
fistpl
outsb
push
es
adc
fs
call
push
lahf
push
aad
negb
es
into
int
int
jp
inc
leave
nop
ret
adc
xor
mov
jecxz
sahf
int
out
in
jne
sbb
outsb
mov
cmp
aad
or
dec
adc
sbb
arpl
push
inc
les
fistl
fwait
push
mov
stc
jno
xor
add
jo
push
jo
mov
dec
lret
repnz
pop
cltd
jecxz
inc
push
pop
mov
fwait
imul
idivb
js
test
and
mov
pushl
push
sub
ret
mov
xchg
int3
push
xchg
out
adc
in
shlb
ret
fisttpl
fisubrs
dec
leave
or
mov
sub
fwait
fwait
jge
in
inc
loop
and
mov
push
insl
popa
pop
stc
sti
pop
xchg
into
loope
mov
pushf
stos
movsb
mov
jae
test
ret
add
mov
imul
sbb
addr16
inc
mov
add
das
pop
ss
cmp
xchg
aaa
aaa
aaa
adc
add
div
sub
inc
clc
fdivrl
aaa
mov
repnz
jns
xor
insb
outsb
pushf
xor
sbb
out
rcll
es
fs
fptan
insb
outsb
outsb
pop
or
inc
stos
insb
and
into
pop
pop
xchg
movsb
add
repz
mov
xor
addr16
fmuls
cmp
pop
sbb
iret
out
lahf
rcrl
insb
push
jnp
fiaddl
push
jp
and
sbb
leave
sbb
xor
and
push
jmp
jle
popl
pop
push
cmp
sti
orb
jbe
mov
outsb
pop
aam
sbb
stos
adc
mov
iret
stc
divb
push
jge
rolb
ds
es
out
out
cs
je
cmp
cmpsb
addr16
jae
inc
adc
mov
mov
cvtdq2ps
push
add
inc
or
out
divb
xchg
jl
out
mov
popf
xor
loopne
loope
sub
fcmovnu
inc
mov
call
or
loop
in
in
adc
push
mov
rclb
push
mov
cmpb
xchg
ds
xor
mov
lods
and
iret
clc
sub
sbb
pop
sbb
outsb
outsb
lds
call
sbb
fstl
mov
outsb
outsb
shll
je
pop
int3
jae
mov
adcb
movsb
sahf
outsb
jcxz
test
sbb
outsb
outsb
outsb
fists
xchg
lret
jnp
jge
mov
std
insb
outsb
outsb
add
sub
and
std
mov
xchg
push
cmp
aas
aam
or
fcmovb
mov
ror
insl
cltd
mov
ss
les
mov
jae
inc
hlt
xchg
mov
mov
jae
in
fstpt
imul
jl
push
popa
arpl
in
mov
les
xor
or
sub
push
sub
push
sbb
aaa
test
xlat
cwtl
inc
loopne
js
or
pop
ret
dec
out
aaa
loop
shll
xor
add
adc
nop
lock
xor
shrd
test
or
fistl
xchg
xor
xchg
nop
stos
jle
lods
addr16
js
imul
ja
test
mov
repz
adc
xorb
cmpsl
sbb
gs
repnz
cli
push
ret
jae
sti
mov
nop
and
jno
call
sub
xor
idiv
add
lret
ja
mov
outsb
jp
jl
imul
xor
outsb
outsb
outsb
outsb
test
outsb
fidivs
adc
xor
out
xlat
pushl
sub
cwtl
push
dec
xchg
cmp
mov
gs
xchg
enter
mov
lock
lcall
pop
je
or
in
jae
jae
push
je
jo
data16
movsl
mov
jae
or
mov
jecxz
fildl
adc
inc
pop
pop
nop
cmp
jnp
jo
lds
mov
mov
jp
sub
xor
dec
and
inc
in
fwait
fcomi
test
fisttpl
insb
arpl
xchg
pop
lods
cmp
clc
ss
push
pop
jge
fwait
add
in
fadds
jmp
sahf
lret
cmp
pop
jp
aaa
dec
loopne
xor
mov
loopne
push
mov
das
lock
popf
icebp
or
jb
out
in
mov
dec
mov
mov
add
mov
sar
ds
out
ja
fdivl
outsb
push
cmp
jmp
clc
inc
cmp
or
outsb
outsb
popa
gs
jmp
lods
and
and
pop
pop
xchg
data16
xor
mov
jne
inc
and
xlat
out
fsub
lret
or
fldcw
pop
lock
xchg
sub
adc
in
testl
or
mov
or
cmp
push
scas
or
subl
and
ljmp
cmp
icebp
ja
mov
dec
pusha
call
xorb
mov
or
fiadds
jbe
cmp
sub
fisubrl
jge
jbe
add
pop
cmp
jmp
cmc
lret
ljmp
outsl
mov
loopne
sub
bound
mov
es
sub
sbb
jle
test
nop
pop
adc
push
add
inc
ret
pop
dec
or
out
das
loopne
pop
inc
arpl
push
mov
pop
and
push
mov
ret
and
add
jp
mov
mul
jo
add
add
divl
and
es
call
fwait
or
leave
popf
test
inc
fimuls
movsl
xchg
push
ds
sub
leave
rclb
neg
ret
pop
test
jl
ds
cmp
nop
jne
insb
outsb
outsb
outsb
pop
fisttps
lcall
test
aaa
std
sbb
loop
add
fstpt
or
loope
stos
arpl
sahf
mov
jge
push
lret
push
sbb
fwait
decl
imul
sub
dec
test
jle
nop
fwait
addr16
add
cmc
cld
inc
jmp
test
dec
jae
jge
int3
imul
out
dec
das
jle
es
jb
roll
test
adc
cld
cmp
xor
iret
shlb
pop
es
fldt
ud1
inc
add
and
dec
stos
int
aas
fwait
shrb
popa
add
mov
data16
int
add
or
or
push
push
fisubs
ja
lahf
insl
sbb
or
mov
xchg
lea
sbb
vpaddsw
jnp
lea
and
dec
or
cmp
inc
icebp
jns
fcmove
ja
sti
fsubrl
cli
adc
bound
jae
sahf
ret
sbb
push
jbe
xor
test
fidivrl
add
nop
ds
das
in
adc
in
stos
and
mov
lods
xor
dec
sbb
lds
lds
xor
andb
sbb
hlt
mov
mov
mov
xor
mov
divb
ret
mov
insb
jae
iret
out
aaa
xorl
add
sbb
arpl
test
fwait
fwait
fwait
cmp
mov
jl
lock
xchg
scas
and
adc
scas
mov
icebp
cmpsb
fmuls
mov
out
clc
sub
stc
loopne
inc
fld
test
movsb
in
test
aas
fldenv
dec
jecxz
mov
sbb
fdivs
outsb
push
ror
out
test
test
outsb
outsb
outsb
outsb
mov
inc
aaa
dec
cmp
daa
icebp
insb
outsb
outsb
fstpt
add
test
shrb
jge
or
and
jae
and
inc
mov
movsb
cmp
dec
or
loop
jns
hlt
jae
vpshuflw
jg
sbb
jb
inc
je
lahf
cmpsl
jge
xor
push
mov
mov
scas
popf
or
ds
jmp
sbb
imul
add
loope
adcl
dec
sti
fcoml
shlb
xchg
pop
cmc
in
bound
jae
nop
adc
mov
and
or
outsl
or
pop
mov
les
fmull
mov
out
jb
add
ja
push
hlt
es
push
in
mov
mov
test
adc
jo
cmp
lahf
sub
jnp
sbb
jo
jnp
sbb
mov
test
into
fcompl
mov
and
and
clc
cltd
cmpsb
ret
sbb
das
imul
sti
sahf
ret
push
mov
sahf
mov
out
iret
int
jae
es
test
sbb
dec
push
gs
repz
aaa
aaa
mov
clc
test
cmp
and
dec
fisttps
aaa
aaa
scas
out
sbb
outsb
xchg
xchg
mov
test
dec
fcmovnb
sub
pop
into
out
add
push
xorl
int
imul
mov
es
cwtl
jp
arpl
into
out
andl
fwait
lret
jne
jo
cmpsb
and
adc
insb
dec
push
cmp
into
ret
ffreep
mov
and
je
mov
cmp
sbb
pop
mov
hlt
mov
fcoms
rcr
scas
mov
lret
push
lea
xchg
loop
jp,pt
cmp
popf
cld
lret
jae
jae
jg
sub
add
adcb
push
jge
jae
stos
or
xor
scas
cli
adc
adc
hlt
fwait
jle
fldt
iret
ja
aam
stos
out
aad
pop
test
lock
out
out
or
scas
jo
cmp
lret
pushf
push
movsl
out
mov
test
pop
sub
sbb
loop
mov
jge
call
insb
outsb
cs
mov
mov
xchg
adc
lods
clc
jge
fs
pusha
aad
mov
mov
lea
jae
movsb
add
mov
or
shrl
cmc
or
add
sub
push
bswap
pop
inc
push
mov
lcall
movsb
lahf
dec
call
es
pop
pusha
or
add
sub
and
or
movsl
push
rcrb
repz
out
add
fcompl
cmp
loopne
sub
lret
testb
add
mov
cmc
repnz
sahf
out
mov
std
push
fsubrl
jl
or
add
pop
sub
xor
fnstcw
pop
in
fisubrl
mull
jno
inc
pop
repnz
push
and
pushf
cmp
jo
into
or
loopne
loop
mov
pop
fadd
sub
int
pop
adc
add
push
jmp
int
xorl
xlat
icebp
jae
movsb
pop
in
stc
jle
fcoms
jmp
lret
and
dec
sahf
fstpl
out
out
jmp
loope
out
pop
data16
lea
iret
out
inc
mov
aad
and
mov
add
sahf
loopne
dec
lods
mov
daa
call
in
cmp
aaa
aaa
mov
or
pop
sbb
jb
jle
aaa
aaa
push
push
adc
stos
orl
pop
pop
add
mov
aam
cli
in
mov
fmull
ficompl
bound
mov
jle
xchg
and
and
ljmp
push
fbstp
xchg
jle
clc
stc
mov
cmpsb
and
int
in
sub
push
int
xor
mov
int
mov
sbbl
and
sti
fnstcw
xor
dec
and
in
lahf
fbstp
jae
jle
cwtl
or
out
std
leave
ja
rorb
sbb
aad
sahf
adc
idivb
hlt
or
push
sbb
rcll
mov
pusha
out
stos
mov
mov
mov
dec
dec
ret
push
xchg
inc
test
loop
push
or
hlt
mov
pop
icebp
mov
inc
loopne
jmp
xor
dec
jns
leave
push
sub
mov
testb
clc
mov
repnz
mov
lods
push
ret
out
notb
cltd
mov
test
jmp
fdivrl
aam
mov
es
adc
loop
pusha
jge
in
cmpsb
popa
mov
lahf
in
cmp
xchg
clc
cmc
xor
mov
mov
xchg
ret
test
lcall
enter
or
sbb
imul
xor
or
fcoms
cmp
sub
ljmp
insl
cli
loopne
cs
jl
xchg
pop
je
ds
iret
int
enter
popf
add
cmpl
inc
insb
outsb
psrld
in
mov
movsb
sbb
aaa
aaa
pop
std
or
mov
stos
aaa
aaa
aaa
aaa
sbb
xchg
test
dec
cmp
fbstp
jb
mov
jmp
cmp
repnz
mov
shrb
push
in
jno
icebp
mov
push
dec
jl
mov
clc
faddl
std
dec
test
sub
inc
mov
aaa
cli
mov
js
add
fwait
outsb
aad
add
mov
mov
push
fisttpll
ret
push
loopne
lock
xchg
push
iret
inc
rorb
jne
loope
jp
push
pop
stc
adc
mov
pop
js
aaa
aaa
mov
push
out
clc
mov
push
pop
push
pop
sti
fnstcw
aaa
xchg
pop
stc
shll
pop
out
jae
jae
cmpsb
xor
popf
js
jae
jae
push
sbb
ficompl
push
out
xor
inc
mov
mov
sub
jo
dec
insl
fcompl
pmuludq
cmp
or
pop
jbe
push
fnsave
fs
test
outsb
test
add
xchg
hlt
mov
add
sbb
ds
out
aam
jae
adc
shll
inc
adc
push
dec
mov
adc
dec
push
add
add
leave
outsl
fstl
sbb
es
fdivr
int
fmull
sub
xchg
outsb
scas
cli
faddl
push
mov
xor
outsb
outsb
adcl
or
js
lahf
xchg
and
ds
stos
lds
inc
ds
outsb
fdivrl
cmp
push
sbb
xchg
xor
push
out
jae
sti
movsl
pop
jecxz
cmp
mov
aas
fsubrl
push
adc
data16
aam
ja
faddl
xor
js
nop
inc
gs
and
push
fldcw
lods
push
jl
enter
int
int
push
int
or
mov
rorl
pushf
add
jmp
nop
ss
mov
fs
pop
inc
mov
icebp
push
sub
fsubs
fcoml
xchg
test
push
push
out
psubb
inc
sub
out
and
dec
dec
xchg
cmovbe
ljmp
add
test
fwait
push
add
push
push
iret
int
lret
cld
push
pushf
out
popf
fwait
sub
push
push
mov
inc
loope
jp
jl
cli
pop
inc
jbe
aad
cmp
fstl
insb
add
add
out
mov
sbb
push
or
outsl
arpl
imul
push
mov
out
adcb
ret
add
out
out
scas
lods
jbe
inc
lea
int
aas
in
daa
int3
insb
mulb
js,pn
scas
es
in
sub
adc
push
add
je
lret
fld
nop
mov
popf
lahf
int
push
mov
ret
std
cmp
pop
notb
cmp
inc
fsubrl
cli
adc
ret
pushf
lods
fiaddl
testl
fdisi(8087
fadd
inc
adc
cmp
clc
outsb
outsb
outsb
lahf
lcall
mov
mov
cmp
aaa
pop
jl
adc
adc
popl
adc
xor
dec
pop
ds
ficompl
or
loop
add
aam
mov
mov
dec
stos
xchg
incb
int
xchg
add
jne
adc
ljmp
dec
in
loopne
es
sbbl
inc
sarb
sub
int
negl
in
mov
ss
sbb
testl
shll
pop
pop
loop
notl
cmp
aam
cmp
aaa
je
dec
pop
test
jae
sti
bnd
out
push
add
mov
lock
rorl
sarb
fs
push
mov
pushf
fistpl
sbb
imul
repz
imul
outsb
cs
loop
and
lret
lea
and
sbb
out
lret
adc
fcomps
out
out
inc
loop
and
fdivrs
sub
or
add
scas
stc
xor
bswap
sub
mov
hlt
pop
in
pusha
dec
add
lods
clc
jle
and
lock
mov
jns
cmp
jp
or
mov
adc
imul
mov
dec
shll
ds
xor
insl
push
inc
sti
mov
outsb
pop
call
pop
mov
aaa
aaa
pop
std
in
jle
jp
movsl
std
jo
pop
nop
pop
mov
mulb
hlt
loopne
cmp
loopne
ds
inc
sahf
lret
lahf
pop
inc
popa
ss
repnz
fwait
fwait
cltd
mov
dec
pminsw
adc
inc
aas
fwait
aas
imul
fidivrl
cmp
pusha
jmp
jmp
outsl
lods
iret
add
cltd
inc
jg
andl
mov
mov
xor
inc
inc
pop
jl
cmp
mov
push
ds
ja
jl
add
test
ja
lahf
int
ja
test
or
sbb
out
out
mov
cmp
adc
xchg
push
adc
iret
pop
pop
scas
push
inc
outsl
sub
js
int
scas
mov
ds
jl
rolb
outsl
xor
sti
movsb
mov
andb
fistps
out
addr16
test
or
mov
das
lea
outsb
outsb
insb
fwait
ror
popa
loope
cmpsl
arpl
outsb
outsb
outsb
pop
sbb
sahf
jae
jnp
xchg
test
fdivr
insb
and
and
loop
sbb
sahf
push
xor
in
cmp
cli
fcompl
bound
mov
call
test
shl
ja
push
mov
jae
out
pop
adc
mov
cmp
rorb
or
sbb
cmc
inc
or
sti
fpatan
mov
scas
rcr
jge
std
addl
lea
cmp
stos
add
das
mov
jnp
out
testb
mov
test
mov
out
out
scas
pop
jp
arpl
adc
fildll
mov
cmpsb
mov
inc
fistpl
cltd
mov
xor
outsb
out
jo
mov
push
push
push
or
es
and
test
lods
lahf
int
xchg
cmpsb
in
cmc
js
std
xchg
outsb
imul
and
mov
mov
fldenv
loopne
cli
fcoml
xor
mov
lret
daa
fwait
and
insl
cmp
and
jae
xor
aad
lock
pop
shlb
push
cs
in
test
xor
out
mov
mov
clc
fdivr
mov
mov
out
or
sahf
rcl
jbe
xchg
rorb
js
cmp
xor
mov
cmp
pushw
pop
jge
fwait
pavgb
sbb
subl
or
jl
push
into
leave
nop
icebp
xchg
jl
aas
fbld
sbb
jno
inc
rolb
clc
jg
sahf
fwait
fwait
fwait
mov
insb
testb
xchg
jae
push
nop
push
mov
xchg
push
je
int
addr16
test
int3
shll
fistpl
mov
int
cli
jl
jno
in
cld
mov
inc
mov
loopne
aaa
aaa
aaa
dec
adcb
sub
adc
jae
jle
popf
lahf
pop
je
rcr
jo
stc
xchg
insl
cmpsb
enter
mov
fcmovne
out
mov
xor
add
lcall
adc
sbb
hlt
mov
cmp
hlt
xchg
insl
cmp
push
jecxz
or
adc
fiaddl
bound
push
or
push
lods
not
dec
loopne
fdivs
je
in
pop
out
js
adc
cmc
and
std
scas
cmpsl
inc
pusha
pop
sub
pop
push
test
test
mov
test
xchg
xchg
leave
cli
insb
out
and
push
incb
fnstenv
pop
rolb
mov
add
and
mov
icebp
push
int3
inc
sbb
shlb
sbb
or
pop
fdivrl
test
mov
int
sub
jae
sti
lahf
sbb
pop
in
jecxz
push
shlb
add
fnstcw
mov
bound
dec
in
cwtl
xchg
insb
shrd
clc
inc
mov
shlb
pop
shr
cld
inc
orl
out
mov
push
or
icebp
movsb
pop
daa
loopne
pop
cltd
lea
rolb
shlb
outsl
inc
add
stos
dec
iret
stos
mov
in
push
outsb
pop
clc
xchg
aaa
pop
dec
mov
insb
and
inc
push
mov
outsb
outsb
outsb
outsb
movsl
lcall
mov
and
outsb
outsb
jno
xor
out
and
mov
inc
cmp
cmp
fwait
or
mov
es
cs
icebp
push
std
push
ficomps
fdivrs
jmp
es
int
add
lret
popa
inc
and
into
int
int
sbb
cwtl
lea
jg
xchg
loope
mov
mov
xchg
pop
sub
insl
fwait
fwait
fwait
or
addl
fwait
imul
mov
gs
sbb
incb
lds
and
jmp
das
mov
mull
pop
cmp
aam
in
add
lock
lahf
fwait
mov
mov
mov
jae
outsb
cmp
xchg
ret
adc
fistl
mov
mov
pop
lahf
fwait
fwait
fwait
mov
pop
xchg
fbstp
dec
shlb
cld
cmc
into
scas
shl
dec
inc
jge
aaa
aaa
fsubs
hlt
adc
xchg
fisubrs
negl
push
dec
pop
or
mov
sahf
and
mov
cmp
push
mov
mov
icebp
pop
ret
cmp
or
das
out
je
cld
lods
push
cmpsl
int
int
inc
push
ret
cmpsl
xchg
into
pop
ret
xchg
xchg
lahf
int
int
push
push
movsb
js
sbb
xchg
addr16
js
jp
or
xor
xchg
sahf
in
test
pushf
or
sub
int
popa
jl
cld
inc
mov
sbbb
pop
sbb
mov
sub
cmp
dec
mov
mov
push
cmp
cltd
adcl
and
mov
and
cld
mov
push
sub
shr
hlt
add
mov
add
add
stos
repnz
lret
daa
dec
or
insb
mov
ss
mov
lods
ffree
fdivs
cmp
mov
cs
jge
call
lret
xchg
add
inc
xor
pusha
adc
andb
icebp
stos
movsl
mov
shlb
xchg
out
push
fldcw
sarb
jb
xadd
dec
cmpsb
imul
mov
ds
mov
shlb
pop
and
es
mov
ror
pop
push
shl
lods
shr
mov
pop
xchg
sahf
cmp
pop
and
bound
les
mov
jb
clc
insb
outsb
insb
scas
mov
jnp
cld
icebp
int3
inc
bsf
mov
mov
shrb
sbb
mov
xchg
cmp
scas
clc
fmull
mov
outsb
nop
sub
mov
insb
and
mov
sub
fcompl
jp
lock
adc
adc
mov
fadd
mov
test
push
clc
inc
iret
xchg
jo
js
cltd
dec
clc
insb
outsb
out
pop
inc
insl
icebp
jge
dec
adc
out
jp,pn
adc
sbb
mov
xchg
add
outsb
outsb
outsb
xor
add
add
mov
pop
hlt
cmc
inc
jp
push
ficompl
xchg
jp
pop
pusha
xor
jb
leave
scas
mov
and
jcxz
fmull
stos
and
push
in
mov
or
jg
jle
int
int
push
mov
sbb
cs
iret
xchg
lds
mov
push
aad
jae
jae
hlt
bound
add
arpl
pop
push
mov
mov
call
jae
fisubs
pop
cwtl
push
into
andl
mov
pop
sbb
icebp
and
es
rorl
cmp
and
int3
scas
sub
fwait
fwait
fwait
add
sub
adc
int
lahf
fwait
shl
lods
sbb
data16
leave
push
enter
int
mov
inc
bound
das
jp
iret
out
mov
cld
dec
jns
and
daa
call
dec
push
mov
es
xor
adc
js
mov
in
addr16
push
xchg
addb
rclb
int
adc
push
scas
xor
loop
and
pop
cmpsb
into
or
mov
pop
or
mov
mov
adc
icebp
mov
aad
mov
pop
adc
ss
lahf
lret
mov
lods
pushf
bound
jmp
mov
outsb
mov
push
or
lret
data16
cli
or
in
jo
and
dec
mov
outsb
jle
pop
sub
mov
lock
aaa
aaa
ja
dec
push
nop
xor
test
repnz
xor
imul
jb
push
pushf
dec
jl
cmp
ss
pop
loopne
mov
cmpsl
aas
adc
mov
jle
into
loope
movsb
mov
iret
iret
sub
xchg
sar
or
imul
and
idivb
rol
pop
cmpsb
loope
nop
lods
mov
mov
xchg
or
mov
or
in
incb
add
or
sbb
imul
outsb
outsb
pop
mov
lock
dec
mov
repnz
cmc
mov
mov
sbb
mov
jae
mov
xchg
mov
jmp
scas
mov
cmp
adc
fdivp
int
mov
iret
mov
loop
add
lahf
int
mov
xor
insb
mov
sahf
test
mov
cmc
lock
mov
cmp
in
loope
cmc
insb
mov
ljmp
jbe,pn
outsb
push
cli
adc
and
and
outsl
loopne
inc
cmp
mov
std
aas
inc
les
addr16
dec
pop
sbb
pop
cmp
inc
popa
out
lahf
in
mov
dec
jne
in
lods
or
ljmp
xchg
xlat
bound
test
xor
sbb
outsb
mov
mov
pop
imul
sarb
and
js,pt
aaa
ja
xchg
insb
jl
rclw
into
pop
mov
xchg
add
movb
jle
lds
pop
inc
add
cmpl
mov
insl
ret
fstps
mov
xlat
cmpsb
repz
cld
das
inc
inc
sahf
and
mov
ficoml
dec
fwait
sbb
ret
push
pop
sbb
test
sub
xor
outsb
mov
sbb
bound
pop
outsb
outsb
outsb
outsb
xor
sbb
mov
outsb
outsb
outsb
outsb
jns
mov
cmp
imul
push
movsb
adc
rclb
jo
or
js
push
mov
cmc
pop
inc
jecxz
pop
push
cld
rolb
push
sub
lcall
shl
repz
int
int
fldt
outsb
add
sub
inc
rclb
fnstsw
inc
jmp
int3
scas
jmp
cmc
mov
xor
stos
lods
out
adc
cmp
addl
push
sub
mov
fdivrl
and
mov
out
sub
rclb
sbb
and
out
sbb
icebp
lods
push
negb
fnstenv
sub
xor
movsl
lahf
add
pop
testb
mov
clc
mov
out
out
ret
repz
ljmp
iret
out
movsl
jns
arpl
loop
fiaddl
xor
mov
mov
clc
insb
outsb
es
mov
adc
ljmp
dec
mov
out
xor
sbb
and
mov
push
mov
iret
out
movsb
cs
push
ds
jl
outsb
shr
rorb
inc
test
jge
sbb
gs
or
ljmp
lret
pop
cli
outsl
sub
add
ds
jbe
stos
cmpsb
stos
add
and
pop
jp
clc
jb
xor
adc
sbb
mov
ja
pop
xchg
jg
out
insl
cmc
das
int3
sub
aaa
aaa
aaa
aaa
mov
jne
movsl
add
repz
into
andl
js
xor
mov
loope
mov
mov
jp
aaa
push
jmp
sub
and
clc
insb
dec
rcrb
dec
stc
cli
in
mov
shlb
inc
insb
adc
jl
adc
call
xor
ds
mov
hlt
pop
cmp
push
aam
aaa
das
rclb
int
lods
call
xor
add
dec
mov
mov
jae
cld
mov
in
or
or
jno
rcrb
aaa
aaa
mov
dec
mov
adc
cmp
clc
jge
sub
aam
outsb
stc
fisttps
pop
xor
xor
int
xchg
mov
xor
cmpsb
int
lahf
inc
int3
xchg
dec
lcall
mov
iret
sub
mov
jns
push
mov
push
inc
jo
jne
jle
dec
and
faddl
hlt
mov
loop
jae
int3
xor
in
popf
push
test
inc
fidivrl
test
shrb
shr
jecxz
in
scas
cli
cmp
push
jo
dec
inc
jmp
mov
outsb
outsb
adc
jae
roll
cmp
mov
bound
lea
addr16
pop
int
mov
orb
sti
lcall
push
sahf
inc
loope
jnp
adc
mov
push
or
enter
and
andl
mov
clc
cmp
and
push
fcomip
and
push
in
cli
cmp
mov
adc
mov
sub
lods
adc
mov
imul
add
mov
icebp
fisubrl
clc
popf
mov
mov
xor
je
scas
pop
sub
jecxz,pt
add
movsl
mov
iret
add
loopne
mov
or
adc
scas
xorl
ds
sbb
das
inc
sarl
jl
pop
jecxz
js
cmc
mov
xchg
sahf
les
mov
mov
movsb
mov
inc
cld
movb
inc
dec
pop
dec
adc
and
sbb
mov
xor
lahf
iret
ret
pushf
fcoml
sbbl
and
sbb
sbb
jbe
cli
sub
mov
mov
hlt
sarl
xor
push
fwait
mov
lahf
lahf
sbb
cltd
icebp
adc
int
int
imul
fldl
add
out
xor
mov
jl
jno
xchg
iret
out
out
and
subb
je
lea
cmp
pop
aam
mov
inc
test
lret
dec
pop
xchg
aad
push
js
sbb
ljmp
outsb
outsb
outsb
add
sbbb
rcrl
pop
add
inc
cmp
jae
mov
push
mov
outsl
jge
jl
jns
sub
and
in
and
icebp
mov
mov
call
test
rcr
cmc
loope
out
mov
jb
inc
fimull
and
mov
mov
neg
inc
dec
pop
pop
sti
out
cld
sub
dec
cwtl
call
stos
out
sub
leave
shrb
push
pusha
pop
ret
cltd
in
neg
fdivrl
in
push
icebp
add
jno
inc
pop
int
int
push
outsb
test
mov
lds
mov
mov
rorl
mov
std
leave
loopne
sti
jle
hlt
xchg
pop
push
icebp
out
and
or
dec
adc
cld
or
adc
add
movb
mov
loop
lock
push
bswap
push
xchg
cmp
push
sub
fcmovne
out
sub
adc
sbb
dec
call
outsb
aas
mov
mov
inc
mov
insb
outsb
outsb
add
rcrl
loope
fbstp
sti
and
mov
popa
mov
popf
adcl
or
notb
cmp
adc
popf
dec
call
mov
mov
test
fldpi
movb
int
adc
dec
adc
sub
mov
int
nop
stos
fwait
arpl
fs
pop
iret
sbbb
adc
pop
add
movsb
clc
mov
insb
mov
pushl
mov
lock
outsb
outsb
scas
clc
clc
mov
mov
xor
outsb
outsb
outsb
outsb
adc
insl
mov
cmp
pop
es
mov
int3
rolb
cwtl
cmp
imul
cmp
xlat
xor
pop
js
jmp
test
mov
xlat
stc
movsb
or
cmp
add
push
imul
xor
bound
out
jbe
inc
wbinvd
jle
sbb
cmpsb
cmp
aaa
mov
repnz
lods
out
out
add
inc
iret
insl
sbb
add
lods
jb
push
fs
push
jnp
push
fwait
jbe
sbb
mov
jae
cmpl
inc
sahf
xchg
mov
dec
mov
adc
shl
sahf
les
push
movsl
mov
xor
shl
cmc
clc
pop
lock
mov
sbb
int
mov
mov
xor
or
insl
arpl
xchg
insl
push
push
repz
enter
adc
fisttpl
mov
fsubrl
mov
dec
mov
dec
insb
lods
jno
cs
hlt
call
push
pop
hlt
mov
xchg
sahf
xor
repz
mov
aad
or
push
mov
out
je
cmc
mov
repnz
test
cwtl
out
adc
sub
and
cmpsb
call
addr16
inc
pop
cmp
mov
repz
push
nop
mov
sahf
adc
jb
pop
insl
lods
xlat
iret
repz
repnz
std
nop
adc
inc
xor
push
cmp
test
jae
icebp
in
mov
inc
shl
mov
jbe
fldcw
loope
push
sbb
sub
sbb
popf
mov
mov
testb
cli
pop
shlb
pop
mov
outsb
add
xchg
mov
pop
mov
pop
xchg
xor
lahf
out
out
leave
shr
test
and
lock
xor
inc
mov
cmc
push
fisubrl
hlt
or
xchg
pop
inc
sub
aas
dec
lock
pop
fcmovu
mov
xchg
fisttps
mov
fdivr
push
add
test
add
std
insb
outsb
test
push
and
inc
push
jnp
mov
push
fucomi
mov
jmp
jl
out
cmp
loope
cmp
and
pop
mov
jb
iret
jbe
mov
inc
pop
jg
sahf
addl
adc
clc
sub
sbb
sti
or
outsl
test
jl
cmp
dec
iret
int
add
ret
leave
dec
test
sti
push
call
jl
inc
rclb
gs
ja
mov
inc
outsb
mov
adc
mov
mov
mov
or
lea
enter
adc
fs
dec
jns
pop
cmc
mov
fcomp
fdivr
loope
jb
je
jg
arpl
inc
in
call
adc
jmp
scas
cltd
arpl
fdiv
mov
jle
clc
pop
out
iret
int
adc
in
test
mov
xor
aaa
aaa
aaa
aaa
mov
fwait
mov
sbb
aaa
and
or
inc
or
mov
xchg
mov
mov
fdivrl
aam
lret
jno
out
loop
in
stos
stc
dec
inc
jae
adc
pop
pop
popa
repnz
iret
aas
and
imul
inc
popf
lret
xor
je
pop
js
xorl
shlb
inc
cmp
pop
xchg
ret
inc
out
stc
cld
cmp
scas
and
imul
jg
out
push
mov
pushl
ret
add
sbb
mov
sub
add
inc
pop
or
repz
das
mov
insb
addr16
dec
sahf
das
adc
idivl
lahf
out
iret
xchg
mov
pop
jg
xor
iret
repz
jmp
movsb
sub
jae
xor
scas
mov
mov
mov
cmp
shll
inc
push
imul
ljmp
bound
xchg
lods
jns
ret
sbb
aas
loope
je
or
jbe
mov
in
mov
out
mov
sti
out
ficomps
out
pop
hlt
cmp
pop
sbb
jno
jae
fwait
sub
iret
cmp
stc
repz
xlat
mov
outsl
arpl
sti
adc
inc
sub
mov
mov
aam
jmp
add
dec
mov
jno
loop
push
xor
mov
incb
push
mov
in
pop
out
sub
fdivrl
mov
lret
mov
jns
mov
sbb
fsts
and
sub
jnp
outsb
filds
xchg
or
decb
ss
pop
roll
mov
iret
iret
repz
xor
and
inc
jl
cmpsl
mov
rcrl
repz
orb
and
je
or
lahf
int
stos
push
and
ret
repz
incb
icebp
adc
data16
sahf
dec
xchg
jb
jb
sahf
sbb
loope
jb
dec
jg
repnz
fsts
outsb
call
xlat
add
and
mov
bound
adc
fwait
fwait
ds
mov
pop
push
dec
bound
stc
lock
inc
cmp
jle
scas
and
xchg
mov
adc
jg
mov
mov
push
lds
lahf
mov
out
ss
in
sub
in
xor
in
arpl
and
addps
popa
mov
fwait
aaa
aaa
mov
hlt
rorl
aaa
in
sbb
arpl
jle
stos
test
sbb
pusha
bound
je
js
fwait
fwait
fwait
mov
xchg
sarb
pop
xor
xchg
sti
inc
in
clc
xchg
cmp
mov
and
movsb
fsubrl
iret
sbb
stc
movsb
mov
ljmp
add
mov
fwait
mov
xor
mov
movsb
shl
stc
jns
cmp
sbb
mov
testl
imul
pop
jl
inc
rcrl
sahf
out
repz
in
jae
jae
cmp
pop
push
arpl
test
mov
loopne
out
icebp
lret
bound
fcmovnb
xor
dec
xchg
adcb
aaa
loope
jb
je
fwait
fwait
fwait
xorl
arpl
inc
adc
inc
popl
out
lret
loop
hlt
xor
fwait
fwait
fwait
fwait
push
add
lahf
adc
xlat
test
jns
fwait
ret
mov
fwait
sahf
jg
je
out
sbb
stos
dec
jo
pushf
lods
outsb
outsb
aas
fwait
adc
push
or
adc
imul
outsb
fists
call
mov
jmp
insb
movsb
js
dec
sbbl
sub
mov
dec
and
ss
mov
xor
rclb
fisubrs
lds
dec
dec
js
push
dec
shlb
mov
loope
mov
mov
lret
lahf
clc
cmc
jle
aam
jae
mov
insb
and
fwait
imul
test
repnz
mov
stc
or
jle
aaa
aaa
and
xchg
lock
fsubr
inc
xchg
jle
add
or
clc
in
xchg
std
pop
leave
xchg
pop
mov
test
int
int
push
hlt
cmp
dec
aad
or
int
jne
xchg
mov
bound
sbb
mov
cmp
cmp
insl
push
sub
iret
out
out
adc
shrb
out
xor
or
xchg
jae
mov
cmp
pop
mov
test
push
xchg
adc
fidivl
loopne
fisttpl
pop
ficompl
fdivr
inc
fwait
push
push
jno
std
insb
lahf
jg
fists
cli
add
push
xchg
or
int
int
sbb
or
mov
fimull
int
int
mov
inc
mov
xor
jl
sti
lea
add
sahf
out
andb
jae
sbb
ljmp
inc
clc
movsb
mov
les
and
fisubrl
push
mov
out
notb
sahf
movsb
sub
jb
loope
test
add
in
ds
iret
out
mov
subl
jno
cmc
adc
sub
sbb
lock
fbld
imul
adc
or
dec
icebp
addr16
dec
dec
dec
das
scas
cmp
cwtl
mov
imul
mov
cs
call
mov
mov
mov
fcompl
inc
mov
scas
dec
stc
imul
xor
jns
dec
mov
xor
xchg
dec
imul
or
idivb
fwait
fwait
fwait
or
std
jge
sti
outsb
lahf
jae
cmp
or
push
adc
mov
ret
mov
in
sub
push
pusha
in
int3
xchg
popf
cmp
push
mov
das
dec
iret
gs
mov
mov
mov
inc
pop
mov
jg
cli
leave
rcr
ja
cmp
inc
lods
jno
adcl
pop
iret
out
xor
mov
push
xchg
cld
rcrl
push
lahf
adc
mov
dec
aas
mov
std
mov
xchg
les
in
clc
test
addr16
pop
cmp
loop
fdivrl
and
add
js
fildl
bound
or
popl
and
sarl
cwtl
cmc
lcall
int
fs
lock
imul
sub
jp
jmp
mov
jbe
leave
popa
cmc
jmp
int3
out
xor
jle
xchg
int
ljmp
mov
push
cmp
jbe
cli
or
inc
mov
pop
push
jbe
cli
insb
out
jp
mov
pop
adc
cs
sbb
testb
js
mov
outsb
insb
icebp
cs
cmp
adc
dec
scas
xor
arpl
fadd
ret
sub
rcr
or
test
mov
cmpsl
pop
sbb
xchg
hlt
in
mov
pcmpgtb
mov
pop
dec
aaa
aaa
aaa
sbb
pop
jle
sub
cli
dec
fwait
stos
push
ss
fimull
xchg
mov
fwait
lret
cmp
add
movsb
stos
sbbb
cmovle
xor
lock
jp
mov
inc
mov
jmp
and
test
mov
les
aaa
aaa
aaa
repz
sub
ss
aaa
aaa
imul
pusha
cmp
xlat
mov
popa
xchg
cld
insb
add
adc
or
cmp
adc
in
or
pop
rcrb
pop
lock
cmpsb
test
loop
mov
hlt
dec
loope
pop
and
xchg
lods
hlt
add
inc
cli
leave
pop
fbstp
je
push
in
je
dec
mov
out
notb
jae
lret
inc
data16
loop
mov
mov
or
xor
mov
jp
inc
inc
mov
pop
pop
arpl
sbb
lods
sub
mov
mov
aaa
test
cmp
xchg
mov
sbb
dec
sbb
adc
pushf
fwait
fwait
out
xor
aaa
mov
in
inc
lods
pop
inc
push
cmp
call
ss
ret
ds
inc
jge
sub
sub
sub
cmpl
mov
push
out
out
ss
xchg
cmpsb
ljmp
test
pusha
popf
sbb
dec
fs
bound
jae
or
in
ret
sub
lods
aad
addr16
jae
pop
or
mov
iret
int
in
xor
and
pop
call
sub
jge
aaa
aaa
lahf
xchg
jecxz
aaa
daa
xor
pop
push
shll
clc
test
int
rcl
inc
pop
sbb
inc
js
adc
repz
int
inc
rolb
inc
std
outsl
fdivrl
iret
aam
jns
jbe
jnp
or
jae
jae
cmpsl
mov
hlt
popa
dec
or
loopne
add
addr16
xchg
cltd
test
mov
sub
cs
movsb
popa
sub
mov
fwait
fwait
fwait
in
jl
and
std
and
out
mov
inc
pop
insl
insb
dec
push
dec
push
add
sub
xor
jae
cmpsl
lock
mov
jae
and
js
xlat
cli
das
nop
int
jae
jae
cmp
lcall
sub
jae
bound
imul
aas
and
enter
pop
aad
dec
mov
inc
and
xchg
add
inc
mov
int3
inc
add
out
fnstcw
mov
mov
sbb
int
and
rcl
pop
clc
cwtl
push
movsl
mov
mov
push
int3
mov
xchg
sbb
adc
adc
mov
mov
inc
outsb
outsb
aas
lock
xor
sub
mov
xor
scas
mov
xchg
jo
inc
inc
sbb
sbb
ret
out
cli
adc
mov
test
repnz
push
or
pop
mov
dec
xorb
outsb
outsb
mov
into
rorb
cmp
movsb
cli
outsb
outsb
outsb
outsb
mov
fstps
push
outsb
outsb
outsb
outsb
out
fdivs
dec
push
pop
pop
sbb
aaa
pop
std
insb
movsl
add
xor
mov
js
push
bound
std
inc
pop
cmc
sarl
int
push
mov
fists
inc
iret
sbb
loopne
lea
and
cmc
dec
pusha
add
pushf
fnstsw
inc
loopne
sub
shrb
mov
adc
roll
stc
pop
xchg
test
iret
out
fistps
mov
dec
in
push
xchg
mov
js
into
adc
or
mov
or
push
adc
cmp
stos
filds
loope
dec
hlt
adc
inc
add
iret
or
add
mov
sti
dec
ret
cltd
hlt
bound
and
ss
out
mov
out
xor
stc
xchg
adc
jb
sti
es
je
inc
mov
iret
loop
pop
test
cmp
in
or
mov
outsb
iret
jg
enter
inc
push
add
jbe
mov
push
aaa
shlb
sub
push
js
xchg
lahf
int
push
in
sub
sub
xchg
fdivrl
mov
xchg
inc
dec
pop
cpuid
mov
and
popa
je
sar
pop
mov
jo
out
mov
cli
cmp
push
das
push
rcrb
or
jne
out
or
adc
inc
and
aas
mov
call
pop
mov
icebp
shll
arpl
mov
push
ss
ret
fsubs
insb
jg
enter
push
in
pop
mov
sti
fprem1
cmp
adc
sbb
loop
jae
dec
imul
outsb
js
addl
ja
mov
jecxz
and
or
dec
add
cli
out
shlb
loop
pop
les
adc
mov
into
clc
or
push
lahf
cmp
push
fmuls
jle
mov
adc
jae
shll
aam
sbb
in
dec
inc
gs
in
mov
xor
fsub
out
inc
pusha
xor
xchg
lods
iret
out
jnp
dec
xchg
call
xor
das
pop
and
jb
mov
test
test
out
mov
and
loope
push
sub
loope
mov
cmp
fxch
and
xor
mov
pop
outsl
imul
or
mov
xchg
cwtl
stos
and
aam
out
mov
xor
test
icebp
xor
out
mov
insb
dec
fadd
fiadds
cmp
pop
iret
dec
imul
jne
lds
sub
inc
xor
and
jne
push
and
lock
hlt
inc
xor
mov
repnz
pop
xor
iret
cmp
add
in
repnz
imul
add
jns
push
add
aaa
mov
out
lea
mov
xor
mov
aaa
iret
xor
and
je
add
push
inc
adc
outsl
test
mov
sarl
mov
out
inc
aas
xchg
sub
pop
sahf
sbb
addr16
out
shll
pop
les
lahf
int
stos
mov
jo
mov
je
shlb
lcall
add
fdivs
cld
jl
jl
inc
mov
jecxz
lods
popf
rorb
mov
int
ds
sub
push
mov
jp
mov
inc
shrl
lcall
push
aaa
cli
icebp
sbb
jecxz
pop
mov
bound
push
ds
xchg
dec
inc
ficoml
push
sarl
and
jmp
mov
lods
xchg
dec
inc
jmp
mov
dec
dec
jno
rcrl
mov
fildl
adc
pop
pop
push
mov
jns
iret
and
sub
xchg
push
xorl
gs
stc
aaa
int
cld
fistpl
add
jb
fs
out
xor
cmp
dec
daa
fwait
jae
jl
mov
fldl
cmpsb
stc
aas
dec
xor
test
aad
shll
xchg
sub
sbbb
jbe
shlb
mov
clc
sbb
imul
push
add
out
enter
cmp
add
cltd
scas
jp
outsb
pop
or
in
sbb
mov
ficomps
loope
ljmp
daa
jns
push
sbb
pop
jb
cs
out
jmp
dec
pop
xchg
and
mov
or
out
clc
sub
roll
bound
je
sbb
aaa
aaa
mov
jo
xchg
leave
sahf
xchg
imulb
cmp
neg
ds
stc
out
push
ret
mov
test
int
int
or
push
insb
dec
jnp
sbb
jmp
mov
cld
orb
pop
push
xorl
and
int3
dec
jbe
mov
rorl
lret
mov
fwait
fwait
fwait
mov
lahf
scas
sub
bound
inc
xchg
adc
in
dec
mov
add
xor
pop
pop
add
and
call
cmp
fldt
and
add
mov
mov
xor
jo
std
insb
fmuls
mov
jle
mov
test
ret
inc
aas
out
push
and
jle
mov
mov
out
push
call
pop
popa
inc
cmp
inc
pop
jmp
mov
loopne
rolb
fcompl
mov
lds
sbb
xor
mov
mov
and
dec
rcr
fmull
in
jnp
out
aaa
jl
aas
clc
ret
fmull
popa
mov
inc
into
call
xor
xor
outsb
jg
jl
mov
jo
add
pop
mov
outsb
outsb
outsb
outsb
mov
mov
add
sub
outsb
addr16
pop
std
or
out
idivb
cmp
push
addr16
inc
jecxz
pop
lds
mov
mov
orb
fbstp
aaa
aaa
mov
test
sbb
mov
pop
dec
push
rcr
ds
cmp
inc
mov
mov
jae
fmull
hlt
mov
repz
movsl
mov
sbb
fcmovu
push
test
jg
mov
inc
test
sahf
dec
sbb
orb
js
mov
inc
push
shlb
push
cld
adc
lods
lds
cwtl
mov
adc
mov
jo
in
or
sbb
repnz
inc
mov
inc
mov
or
and
outsb
das
icebp
rcl
pop
mov
ficompl
sbb
add
insb
pop
out
iret
mov
inc
aas
or
bound
xchg
adc
lock
mov
aaa
aaa
mov
rorb
mov
in
add
popa
mov
fcomps
insb
xor
rcrb
xor
fwait
fwait
pop
inc
pop
pusha
rcll
cmp
insb
addb
jne
fcmovne
cwtl
lods
push
dec
xlat
rcrb
frstor
adc
popa
dec
cs
mov
adc
int
fs
imul
sbb
bextr
fimuls
pop
lea
cli
add
dec
add
enter
mov
or
popf
sbb
push
jge
sbb
mov
cmp
and
fdivr
loopne
adc
mov
aam
fidivrl
fcoml
pop
cli
cmp
bound
jae
sti
push
fdivs
sbb
push
and
bnd
aaa
mov
lods
mov
xor
mov
jl
push
xorl
cli
sbb
and
fmuls
aaa
cltd
inc
inc
xchg
ds
pop
mov
mov
fmull
jo
cmp
inc
out
dec
ret
sub
xor
push
bound
adc
mov
fwait
xchg
rorb
out
jae
mov
pop
or
jae
je
mov
call
sbb
sahf
jp
jae
jae
cmp
adc
jae
dec
and
pop
shlb
pop
fcomps
xchg
dec
fdivrl
ss
and
jo
pop
push
pop
mov
arpl
add
fs
mov
lret
idivl
cmp
mov
inc
push
dec
jno
adc
iret
int
into
in
lret
stc
pop
aad
push
cmp
mov
ds
and
push
sbb
pop
and
sbb
pushf
sub
fsubrl
mov
dec
repnz
inc
mov
inc
fs
fwait
fwait
fwait
into
lods
movb
mov
sbb
dec
enter
push
loop
pop
popa
cmp
icebp
cmpsl
mov
test
int3
movsb
loopne
rcrl
aaa
aaa
aaa
out
sti
pop
ja
inc
jno
dec
fidivrs
push
mov
or
xor
ds
lock
push
test
das
insl
mov
mov
in
test
aad
add
mov
add
xor
ljmp
fistl
pop
sbbb
lcall
fs
push
enter
insb
sbb
shrb
cmpsb
cmpsb
arpl
push
push
aaa
jo
sbb
ljmp
int
out
mov
cmp
pop
pop
int3
fnstcw
aaa
test
fisubrl
mov
pop
cmpsb
mov
data16
fisubl
pop
mov
push
lahf
fwait
iret
in
jp
xchg
inc
adc
cmc
adc
sbb
inc
mov
das
mov
es
fsubrs
out
imulb
scas
mov
push
dec
pusha
xchg
adc
ret
iret
out
and
push
xchg
inc
notb
jae
dec
xor
gs
mov
xchg
ror
lods
repz
faddl
pop
jae
jae
outsb
loopne
jne
shlb
and
fbld
pop
jl
sbb
cltd
jp,pn
out
mov
dec
mov
dec
cmp
addr16
sub
mov
push
push
sbb
adc
jle
roll
mov
lock
cwtl
in
call
sbb
adc
sub
sub
xchg
out
cmp
aas
pop
lds
push
or
xchg
jae
out
mov
push
sbb
sahf
cmp
mov
cmc
push
inc
mov
mov
mov
mov
in
hlt
cld
and
scas
xlat
shlb
or
dec
rep
out
jg
iret
insb
test
mov
push
lods
lahf
int
xchg
and
scas
xchg
out
xchg
jnp
push
lods
adc
mov
dec
call
out
sbb
pop
in
sbb
insb
in
mov
dec
dec
imulb
ds
sbb
hlt
in
push
out
in
adc
xchg
mov
xabort
cmp
data16
push
int
pop
push
pop
ljmp
mov
gs
add
ret
std
or
fildl
pop
test
mov
fcomp
outsb
cs
std
mov
push
leave
insl
cli
lods
push
mov
push
mov
js
mov
cmp
stc
fdiv
fdivrs
mov
les
adc
icebp
mov
pop
imul
fucomi
imul
or
jo
sahf
xor
pop
mov
jge
nop
repz
pushl
ljmp
lahf
and
jae
adc
and
ficompl
adc
aam
mov
int
sahf
aam
sbb
adc
int3
es
int
mov
std
push
add
mov
scas
outsl
and
pop
cmpsb
mov
mov
jne
xchg
imul
out
cld
ret
test
jg
fwait
adc
mov
mov
add
pusha
idiv
add
mov
xor
or
movsl
lods
jo
icebp
mov
jmp
shlb
stos
insb
rcrl
add
inc
stos
mov
xchg
jae
mov
or
inc
mov
xor
jae
adc
mov
aaa
aaa
mov
mov
int3
cltd
inc
int
std
mov
jae
jge
xchg
dec
cwtl
lea
fsubr
call
ret
and
ds
stos
sbb
mov
cli
cli
push
ret
xchg
icebp
mov
int3
lcall
jge
jae
sbbb
mov
cmp
mov
loopne
pop
hlt
mov
mov
pop
add
call
lahf
in
add
push
xchg
push
insl
pusha
dec
jbe
rol
sub
ds
aaa
jb
or
jns
shrb
pop
push
lods
bound
in
pop
sahf
xor
adc
sbb
lcall
jo
cs
mov
mov
or
adc
fcoml
sahf
mov
xchg
push
mov
fwait
fwait
fwait
loopne
sbb
sub
cs
cmc
lock
scas
mov
sub
hlt
pop
and
xlat
pop
add
lods
xor
mov
es
cmp
jae
jb
jmp
movl
jnp
bound
jns
pop
ret
addr16
aad
mov
cmp
cmp
add
loope
mov
fcmovne
testb
icebp
daa
adcl
push
cmp
insb
lahf
dec
cs
push
filds
das
mov
and
mov
out
jmp
loopne
cli
jmp
sub
push
cs
dec
loope
mov
sarb
or
cmpsb
aaa
mov
inc
xor
call
lret
pop
movsl
jle
push
call
mov
fsubrl
jge
lret
ret
push
xchg
fldl
add
insb
scas
das
pusha
aaa
lock
adc
loop
addb
dec
push
shlb
jl
js
repnz
adc
fiaddl
jae
jae
es
out
mov
push
loope
leave
imul
jae
dec
insb
inc
jge
divl
xor
repz
iret
out
pop
xchg
mov
sbb
lock
pop
cmp
xchg
jb
mov
jnp
cmp
cmc
shll
cmc
adc
aaa
mov
jae
negl
xlat
mov
xor
aaa
cli
inc
pop
cld
mov
mov
or
or
inc
pop
mov
jnp
lahf
fwait
int3
sub
sub
fs
aam
test
dec
pop
cmp
and
filds
xchg
jb
je
cli
push
add
sub
out
mov
cmc
cmp
loop
test
data16
jae
iret
jle
add
data16
ljmp
dec
adc
mov
xor
jae
orb
push
mov
les
inc
push
iret
insb
jae
cmpb
fwait
fwait
fsubs
add
aas
xchg
enter
fdivrl
jmp
cmp
or
lret
push
mov
pop
outsb
push
dec
jge
lods
add
and
xor
sbb
sub
pop
lock
imul
repz
int
cwtl
xchg
mov
push
mov
iret
int
sbb
cmc
add
movsl
cmp
hlt
imul
lds
and
xor
lods
xor
push
mov
pop
cld
push
push
es
xchg
mov
aam
jl
and
mov
jb
jns
addb
sub
mov
stos
clc
ss
roll
mov
hlt
insb
and
xorl
aam
jmp
sbb
insb
sbb
cmp
pusha
inc
mov
iret
in
xchg
push
adc
pop
outsb
test
aaa
fstpl
adc
or
sbb
push
adc
push
xor
bound
scas
pop
repnz
outsb
outsb
outsb
outsb
lret
mov
lods
lds
into
les
outsb
outsb
outsb
outsb
ljmp
push
jle
mov
outsb
outsb
outsb
outsb
loop
test
ljmp
mov
loopne
add
push
pop
aam
aam
pop
pop
mov
and
loop
adc
hlt
jo
aas
fldt
ret
out
out
pop
subb
jg
fldcw
cmp
fistl
jae
dec
sbb
daa
imul
cld
add
inc
ljmp
push
or
outsb
dec
jle
lods
push
cmpsb
mov
dec
aam
adc
loope
sub
fdivrl
jns
mov
and
add
dec
lock
pop
scas
xchg
leave
jp
dec
roll
mov
mov
xchg
pop
je
inc
cltd
testb
mov
clc
nop
sbb
stc
dec
dec
jne
insl
repnz
fxch
ljmp
js
sub
adc
lods
cli
andl
push
js
dec
iret
or
pop
push
stc
sbbb
mov
outsb
lahf
mov
daa
mov
jg
aam
insb
outsb
outsb
outsb
push
int3
push
movsl
sbb
dec
xor
idivb
xchg
mov
repz
ficompl
ss
and
das
out
clc
or
dec
inc
aas
int
int
cmpsb
les
loop
jo
mov
cmp
int
int
bound
jl
or
into
int
int
insb
mov
lcall
testb
xchg
jae
iret
out
inc
mov
cmp
je
pushl
jae
push
cmp
mov
inc
pop
sbb
ds
inc
or
loopne
dec
es
mulb
pop
test
icebp
cli
push
call
insb
outsb
outsb
cltd
cmpsb
xchg
jo
fs
cmp
aaa
aaa
aaa
push
fcoml
cld
std
lock
js
xchg
pop
pop
imul
mov
out
sbb
enter
fwait
lock
ljmp
ficoml
outsb
lahf
fcmovnb
cmp
add
sbb
mov
sub
js
aaa
aaa
xchg
in
cmc
xlat
ljmp
loop
xor
jp
hlt
cld
inc
shr
or
lods
cli
jl
mov
pushf
ret
cmc
inc
loope
mov
push
je
imul
mov
jle
push
cmpl
mov
mov
lahf
int
or
mov
rclb
bsf
rolb
jle
aaa
jecxz
pop
frstor
mov
rcr
fsubl
imul
push
lock
daa
loope
sti
sahf
dec
data16
imul
out
popf
mov
andb
xlat
xor
mov
mov
jae
jnp
xchg
pop
xchg
out
bound
xchg
aas
ror
int
jae
cmp
aas
xchg
mov
out
int
int
mov
dec
inc
movsb
push
or
test
lahf
sub
dec
ret
int
or
bound
and
fbstp
xchg
inc
scas
mov
cmpsl
filds
dec
fdivrp
fcomps
outsb
outsb
outsb
push
sahf
push
mov
mov
cmpl
jo
push
xor
shll
sub
int3
xchg
adc
lret
js
cli
jb
aam
lahf
in
repnz
addl
clc
mov
sbb
pop
xchg
mov
mov
add
push
jp
arpl
mov
pinsrw
xor
push
ss
mov
lds
adc
stos
fdiv
mov
and
icebp
mov
es
sbb
pop
sahf
cmpsl
push
sbb
sahf
int
int
loopne
leave
repnz
pop
out
cmpsl
and
cmpb
pop
cmp
hlt
xchg
sbb
int
in
jns
dec
xchg
lcall
adc
int
int
roll
pusha
xchg
lret
push
xchg
lahf
int
pop
jl
jb
cmpsb
sub
mov
sbbb
movb
and
and
push
jo
bound
das
out
stos
mov
aas
clc
stos
adc
bound
dec
lret
clc
fdivrl
es
mov
or
loop
sbb
push
sub
jp
mov
adc
add
push
lock
jmp
cmp
add
cmp
mov
and
aam
es
js
outsl
or
stos
adc
cmp
cmc
mov
mov
and
sbb
hlt
pusha
in
pop
loopne
or
pop
je
test
movb
dec
or
sbb
and
adc
fdivrl
aaa
loop
shlb
push
bound
mov
subb
out
cmp
into
jbe
mov
sub
outsb
es
and
jae
outsl
imul
lcall
mov
jae
int3
test
fildl
and
lret
inc
xchg
nop
test
ds
fwait
fwait
lcall
jl
dec
mov
xor
repz
fstpl
hlt
iret
pop
loopne
mov
stos
or
or
mov
scas
fildll
insl
cmp
iret
adc
xchg
xchg
fidivrl
xchg
leave
and
out
cmp
push
mov
js
iret
out
and
jecxz
mov
jnp
add
and
and
ljmp
or
dec
and
sub
in
je
int3
mov
sbb
sub
push
stos
adc
and
mov
cld
jae
xchg
cli
lret
test
adc
xchg
shl
out
fists
and
adc
in
adc
out
xchg
inc
fldenv
mov
inc
popf
fwait
sub
inc
scas
and
aaa
jl
adc
clc
sbb
repnz
imul
divb
push
jb
stos
clc
pop
stos
iret
cmpsb
les
mov
pop
mov
hlt
lods
out
mov
fs
out
out
cmpsl
push
test
inc
hlt
movsl
or
enter
out
shrl
and
or
ds
in
dec
es
adc
icebp
insb
out
fimull
pop
repnz
xchg
push
cli
fnstcw
and
xor
or
bound
outsb
outsb
outsb
adc
mov
pop
fidivrl
cmc
insb
loop
xchg
shlb
je
rorb
mov
and
lcall
loop
sub
test
inc
outsb
cli
dec
ret
fstps
cmpsb
iret
push
mov
push
lahf
cli
mov
cld
sti
fdivrl
inc
fs
and
pop
add
cmp
sub
lahf
imul
ret
pushf
push
add
jmp
popa
cmp
frstor
cmp
fdivl
pop
fdiv
enter
fs
cmp
lea
fsubrl
pop
push
fists
clc
xchg
or
ds
push
sub
cs
adc
push
cwtl
add
loop
mov
fistpll
scas
adc
lds
aam
jl
adc
repnz
loopne
leave
aas
adc
int
cmc
xor
in
sbb
icebp
mov
and
inc
ret
mov
fcmovnu
mov
jl,pn
loopne
ffree
clc
or
fwait
xor
movsb
cmp
push
pop
jl
and
lods
pop
sub
dec
xor
shlb
xorb
faddl
js
mov
insb
subb
outsl
or
push
dec
sub
test
xchg
fwait
fwait
mov
jmp
mov
xchg
fs
cli
pop
dec
push
xlat
aas
push
iret
mov
mov
pop
pop
rcrl
bound
and
hlt
mov
int3
outsb
outsb
outsb
outsb
into
sbb
stos
and
and
and
test
outsb
imul
and
aaa
aaa
aaa
fcomp
stc
xlat
mov
fidivrl
out
js
rorb
loope
jae
cmp
and
or
cmp
lods
int3
sti
loopne
cmc
iret
out
mulb
test
xor
push
push
fisttpl
sub
rorb
mov
loop
push
sbb
push
sahf
jge
inc
lock
test
lds
lock
or
adc
into
cld
cmpsl
test
push
iret
out
pop
cwtl
inc
mov
mov
lahf
sbb
sub
dec
das
or
js
pushf
mov
and
loope
addr16
bound
cmp
mov
mov
lret
fwait
fwait
sbb
repz
ds
push
cs
cmp
test
add
insb
test
insl
mov
ljmp
cli
out
pusha
sub
xor
icebp
in
sub
mov
xor
nop
fcomip
xor
in
mov
dec
mov
clc
fdivrl
fcom
xor
jno
int
int
cmp
dec
ret
fsubl
repz
int
imul
scas
push
mov
insb
lahf
in
jo
sahf
ficoml
hlt
mov
out
out
loop
cmpsl
sbb
dec
pop
outsl
add
aad
out
mov
js
mov
ror
xorb
pop
xchg
sub
adc
int
out
call
js
ds
sbb
push
sbb
iret
mov
aad
lock
int
mov
mov
in
lock
aaa
mov
push
orb
jle
in
pushf
mov
jo
inc
adc
cwtl
inc
sahf
cld
cmp
fsubl
sub
mov
mov
sub
xor
call
push
sbb
jbe
sahf
jmp
fdivl
dec
sub
scas
sbb
sub
inc
cmpsl
int3
int
popa
ljmp
mov
pop
fildl
sahf
pop
push
ljmp
and
and
dec
scas
je
outsl
negl
mov
pop
rorb
inc
mov
cwtl
orl
jnp
out
out
sub
mov
loopne
adc
sbb
out
test
or
jecxz
js
cmp
pop
and
inc
adc
adc
int
xor
jae
imul
clc
adc
ficompl
fildl
hlt
mov
jl
aas
pusha
adc
and
fwait
push
aam
cwtl
sub
pop
sub
pop
lahf
or
add
icebp
inc
out
cmp
mov
sbb
ja
sbb
mov
fistl
adc
int3
clc
fwait
pop
or
fcompl
clc
nop
xchg
imul
jae
mov
mov
sub
icebp
int
jae
jne
cld
jp
out
fadd
push
aas
mov
loope
fisubl
add
movsb
ret
mov
scas
pop
cwtl
hlt
sub
gs
mov
je
or
pop
fwait
mov
int
daa
hlt
cmp
cmpsl
into
scas
pop
xor
pushl
in
lahf
aaa
pop
push
xor
and
inc
aam
inc
add
add
mov
test
out
xorb
fcoms
inc
xor
mov
mov
movsb
push
aaa
cmp
xor
pop
dec
dec
cmp
sub
xor
push
or
or
loop
xchg
or
in
push
inc
jmp
cmpsb
rcr
inc
popa
and
or
hlt
rorl
sub
rcl
pop
hlt
pop
adc
test
xchg
shr
movsl
sub
sar
aam
and
call
xchg
test
mov
in
jae
xchg
ja
push
dec
sbbb
sti
jle
lods
sahf
pop
lods
sbb
addl
xchg
mov
imul
cmp
adc
sub
orb
minps
mov
cmp
xor
mov
add
loope
sbb
divl
lods
lock
cmc
cld
sub
pop
inc
out
mov
jl
popf
cmp
punpckldq
dec
inc
or
icebp
pop
xchg
sbb
mov
lahf
or
jg
mov
loopne
loope
imul
xchg
fldt
mov
adc
outsl
mov
stc
cmp
fwait
call
jg
sbb
or
fwait
mov
push
dec
aas
lods
out
add
cltd
icebp
idivb
pop
clc
pushl
ds
lock
test
mov
leave
int
inc
les
xchg
sub
loop
fisttpl
ds
inc
jle
sahf
test
mov
ds
lahf
push
leave
mov
test
insb
rcr
xor
sbb
ds
pop
cmp
ds
pop
loop
cmp
push
dec
and
fcoml
jge
imul
out
add
dec
mov
mov
out
out
loope
lahf
push
jg
pop
add
sbb
dec
fbld
ds
das
test
pop
lock
fwait
fwait
fwait
sbb
popa
mov
jmp
ljmp
fbld
cmpsl
pop
adc
xchg
cmc
mov
sub
pop
and
mov
loope
out
push
pop
imul
mov
bound
xchg
inc
loope
jecxz
fadds
sbb
jge
fildl
cmp
rorl
inc
cltd
repz
mov
jno
movsl
and
sarl
arpl
inc
mov
mov
repz
cmp
push
sbb
mov
sarl
iret
iret
repz
xchg
mov
repz
sarl
repz
adcl
iret
dec
mov
fsts
add
inc
dec
pop
jo
add
jl
iret
inc
mov
sahf
xchg
sub
cltd
out
stc
jns
dec
pop
popa
cmp
addr16
rcrl
mov
out
stc
sub
leave
loope
mov
inc
std
insb
sub
fnstenv
sti
icebp
or
mov
inc
push
imul
sahf
fcmovnb
cmp
es
mov
fmulp
out
pop
sbb
xor
mov
movsl
mov
es
cmp
pop
adc
mov
dec
addr16
adc
jp
or
sub
fldcw
out
cli
fsubr
mov
lods
int3
jne
in
push
or
sub
testb
dec
test
jp
fmulp
out
sbb
outsb
das
pop
dec
cmpsl
shlb
aaa
push
std
mov
in
and
sbb
gs
inc
js
sbbl
xor
out
jns
or
std
ds
daa
dec
xor
mov
insl
xor
dec
lahf
sub
test
cld
cmp
mov
push
sub
repz
popf
stc
or
int
out
ret
shll
jae
add
sbb
ret
xchg
jecxz
add
dec
addr16
or
adc
std
cmp
out
out
loopne
jb
movsb
mov
movsb
int
out
out
jbe
mov
dec
add
cmp
sub
mov
xchg
sub
mov
inc
shlb
shufps
fwait
fwait
or
adc
ds
mov
daa
push
push
mov
and
in
push
les
fwait
pop
pusha
adc
das
mov
fwait
fwait
outsl
pop
movntps
dec
push
scas
and
cmp
das
dec
outsb
outsb
mov
bound
mov
cmpsl
sub
push
mov
pop
push
daa
xchg
inc
fidivs
mov
mov
cmp
push
xor
adc
mov
cwtl
lods
pop
movsb
repz
adc
xor
and
in
or
nop
addr16
sbb
mov
pushf
loopne
repnz
test
dec
mov
fcoml
or
sbb
pushf
sbb
mov
mov
in
xchg
movsb
adc
fcompl
inc
push
xchg
pop
cwtl
je
test
mov
pop
or
fdivrl
insl
and
jne
ss
addr16
fsubr
sbb
pop
rclb
xchg
outsb
imul
add
mov
fdivrl
out
sbb
fiadds
jo
cld
in
clc
xchg
fstpl
call
loope
icebp
call
or
repz
shlb
xchg
inc
ret
nop
pop
jae
jae
insb
scas
mov
ret
enter
shlb
test
or
adc
repnz
stos
icebp
sbb
sbb
cmp
outsb
out
clc
pop
ds
outsb
mov
cs
jns
mov
lea
imul
pop
hlt
add
push
loope
push
jne
pop
out
sbb
inc
mov
popa
pop
inc
or
cmc
in
cli
jge
addsd
xor
cli
jle
fucomi
pop
movb
xlat
rcll
jbe
cmpsb
jecxz
stos
int
aas
fwait
loope
frstor
out
mov
iret
int
mov
inc
orl
add
lahf
mov
xor
pop
cmp
subb
inc
das
cld
ds
cmp
adc
sbb
xor
int
jae
test
shll
mov
hlt
fdivrl
aaa
clc
inc
scas
pop
ret
test
fsubl
pop
divl
adc
hlt
aaa
sub
mov
fisubl
cs
loopew
jo
insl
push
push
xchg
daa
sbb
cmp
shrd
sahf
shlb
jmp
fisttps
and
lods
mov
shl
sbb
aaa
mov
int
xor
fisubrl
sbb
aaa
aaa
icebp
adc
inc
ret
repz
dec
adc
add
jae
iret
leave
cld
mov
jg
xchg
call
and
adcb
dec
hlt
mov
ljmp
and
int
lock
clc
fdivrl
out
ljmp
lahf
int
dec
std
or
ds
psubd
loop
jge
cs
aaa
jp
idivl
fisubl
mov
push
push
imulb
outsb
fildll
mov
test
cwtl
sub
outsb
outsb
outsb
mov
pop
adc
mov
mov
lret
icebp
ret
add
iret
pop
cmc
mov
ficompl
xchg
insb
jmp
jae
fs
and
push
loopne
mov
aaa
mov
adc
testl
lods
jge
pushf
fwait
and
in
gs
push
movsb
mov
dec
js
dec
test
xor
mov
cmp
xor
cmp
out
fcomp
pop
movsl
adc
fsts
loopne
scas
xchg
out
out
and
adc
sub
out
int
adc
push
jae
jae
fldcw
cmp
in
or
movsb
mov
add
and
iret
fnstcw
outsl
cmp
das
mov
psraw
iret
or
sahf
mov
js
pop
aad
fsubs
push
mov
in
stc
fwait
xchg
pushf
push
jae
push
subb
fcmovne
push
jbe
scas
test
sar
fdivrl
pusha
sbb
pushf
cmp
in
in
jle
sub
fcoml
int3
ja
sbb
dec
jge
lret
not
daa
push
cmpsl
pop
cmpsl
sahf
dec
lahf
lahf
cmp
daa
cs
mov
ljmp
clc
and
aaa
aaa
mov
adc
xchg
cltd
push
shll
pop
int
addr16
cmp
fsubrs
cmp
mov
dec
insb
aas
xchg
sahf
push
mov
lock
and
in
push
test
loope
xor
fdiv
push
mov
arpl
ret
and
mov
mov
out
mov
aaa
iret
ret
adc
out
out
mov
out
cmp
push
test
mov
test
pop
lock
dec
mov
in
cmp
push
loope
pop
fwait
mov
fldt
push
or
cmpsl
shlb
das
mov
int
in
dec
cmpsl
cmp
or
test
sahf
ret
fadds
jbe
sbb
clc
cwtl
xor
dec
pop
pop
idiv
sub
addb
cmp
movsl
cld
mov
scas
adc
add
movsb
lock
je
insb
dec
xchg
mov
lock
fsubrl
jge
pop
into
aaa
out
out
cmp
subl
mov
mov
in
clc
inc
gs
push
imulb
push
ljmp
clc
mov
sbb
das
sbb
jns
stos
out
rcrb
pop
rcr
jecxz
sub
cmp
lret
out
out
adc
mov
aaa
and
and
int
pushf
add
push
fwait
fwait
fwait
jle
or
xor
sahf
mov
mov
aas
fwait
or
mov
in
out
mov
sbbb
out
jo
sbb
fimull
or
je
sahf
xchg
inc
inc
inc
loope
xor
lret
jns
mov
mov
mov
cmp
nop
pop
repnz
xlat
sbb
mov
jae
pop
imul
lahf
mov
jb
sbb
push
push
test
and
out
loopne
jle
pop
enter
sbb
outsb
outsb
scas
js
dec
mov
jle
pop
mov
cli
insb
outsb
outsb
jmp
lahf
outsb
fimull
xchg
and
pop
mov
int3
adc
add
mov
cmc
pop
dec
in
les
sarb
cmpsb
push
fs
les
cmp
sub
push
dec
adc
fwait
fwait
iret
lods
sub
int3
aam
aam
dec
xchg
jae
cmp
mov
clc
cmp
xchg
sub
inc
pop
push
insb
outsb
outsb
outsb
insl
push
scas
popf
cmp
push
dec
int
dec
cmp
clc
inc
jmp
cmp
xchg
enter
out
fcmove
cld
pop
pop
push
cld
or
incb
sbb
jp
in
cmp
call
imul
or
pop
mov
int
cmp
rclb
cmp
or
scas
sbb
or
aam
sti
fnstcw
out
and
inc
imul
or
mov
and
inc
push
js
sbbl
dec
mov
shlb
and
add
sub
adc
xor
mov
push
dec
mov
cwtl
xor
mov
int
mov
xchg
sahf
mov
sub
int
adc
in
mov
fldt
cli
fdivrl
dec
mov
lock
mov
push
ja
sti
adc
pushf
xchg
jle
test
jbe
stc
bound
inc
out
shll
mov
xor
sbb
mov
inc
in
push
xchg
popa
test
cmc
movsl
addb
jecxz
inc
add
outsb
lahf
fistl
fisubs
mov
jle
jbe
outsb
outsb
lret
scas
std
cs
jb
sbb
cmp
pop
lds
sbb
jg
icebp
ret
addr16
mov
adc
cs
incb
adc
mov
cli
iret
inc
std
sub
jnp
lret
xchg
push
shrb
cld
loope
lods
pop
aas
fcompl
dec
aaa
mov
cld
insb
das
test
xchg
push
orb
xor
aaa
aaa
aaa
ss
pop
mov
cwtl
sbb
and
push
mov
hlt
or
mov
int
jmp
es
jo
mov
addr16
mov
call
push
mov
lds
ficoml
push
xor
jae
xor
insl
cmp
or
in
ret
fwait
loopne
jae
pop
stos
or
sbbb
aaa
mov
ja
sbb
pop
adc
sub
or
pusha
andb
test
mov
mov
std
jae
and
xchg
adc
jge
aaa
mov
aad
sub
lret
imulb
cmp
sbb
aaa
jge
ficoms
into
inc
lea
sbb
jns
xchg
out
mov
cltd
out
fildl
pop
adc
inc
lock
mov
addr16
insl
das
mov
dec
or
pop
jne
enter
adc
mov
addr16
in
sbb
push
pop
ret
movsb
sarl
loop
jae
vsubpd
out
push
sub
out
jae
add
icebp
dec
sbb
cmp
out
out
pop
inc
subb
scas
xor
push
out
mov
andb
mov
jbe
int
in
pushf
jge
bound
xchg
ja
hlt
loopne
mov
push
mov
stos
test
jle
xor
pop
insb
movsb
mov
rclb
jp
pop
inc
sub
pushf
loopne
mov
jae
jae
adc
push
test
mov
sub
jge
mov
jae
jae
jg
lcall
int
jle
sbb
aas
dec
das
sahf
mov
outsl
stos
mov
je
mov
pop
pop
jp
and
pop
sbb
pop
int
int
push
push
fisubs
enter
dec
inc
dec
lret
mov
int
imul
cmpsb
pop
lea
adcb
aaa
mov
dec
sub
loope
popf
fwait
fistps
insb
push
xlat
cs
into
inc
mov
int
idivl
dec
ss
andb
not
outsb
xchg
xchg
xchg
pop
xchg
pop
jge
orl
push
add
jp
pop
mov
dec
inc
jle
fiadds
sub
xchg
pop
rcll
mov
cld
add
push
sub
fisttpl
jmp
cmp
cmpsl
jbe
lahf
fwait
fwait
sbb
sub
add
cld
rorb
pop
adc
inc
cmp
es
push
outsb
scas
clc
mov
loopne
scas
sbb
mov
fcomip
cmc
insb
mov
ficompl
mov
out
ja
jg
std
insb
pop
fs
test
jno
sub
cmp
jge
std
bound
cld
insb
scas
sub
mov
jg
sahf
push
push
push
adc
ret
out
test
add
jb
pop
scas
std
sub
ds
out
mov
aaa
aaa
aaa
xor
jb
inc
dec
and
out
sub
aaa
aaa
aaa
push
push
pusha
popf
stc
mov
jbe
mov
jge
andl
mov
scas
clc
adc
pop
or
out
push
dec
dec
test
cmp
cmp
xor
adc
jp
mov
dec
add
insl
fcom
xchg
testb
insb
xchg
pop
stc
mov
push
addr16
out
or
pop
cmp
pop
fdivrl
pop
jbe
fbld
dec
cltd
ds
fwait
fwait
push
or
loopne
mov
int3
icebp
dec
mov
cs
clc
fstps
lea
pop
mov
push
push
shlb
fldt
dec
sbb
iret
jns
add
cwtl
js
cli
inc
or
add
dec
mov
jecxz
dec
jge
pop
out
pop
cmpb
cmp
mov
ja
add
jne
jl
out
filds
mov
int
sbb
mov
scas
pop
stos
jge
pusha
insb
jp
in
push
dec
hlt
pop
hlt
or
imul
repnz
fdivl
pop
xchg
fdivrl
or
adc
shlb
inc
outsl
add
jae
xor
jae
jae
cmpsl
loop
mov
pop
into
aaa
int
fidivs
jae
sbb
pop
icebp
sbb
adcb
hlt
jae
jae
in
lcall
push
lods
mov
inc
je
shlb
xchg
ret
lock
xor
fsub
pop
sub
xchg
jmp
mov
es
fwait
adc
out
cli
xor
sti
jb
or
aas
sbb
xor
enter
mov
sbb
outsb
push
mov
icebp
mov
xchg
scas
jae
xchg
addr16
rcrl
idiv
push
loope
xlat
xor
sahf
imul
adc
xchg
or
in
or
pop
fisubrl
cld
fnstcw
into
xchg
xor
cmp
adc
jae
jae
jae
ja
arpl
iret
mov
mov
cmp
into
sbb
out
xor
out
loopne
fdiv
sub
and
test
mov
call
roll
enter
cmp
pop
adc
mov
ret
inc
jo
sti
out
out
adc
jl
mov
shlb
fisubrl
dec
lret
mov
add
aas
jecxz
repz
ret
jne
xchg
mov
outsb
push
arpl
fs
and
idiv
mov
jb
gs
loopne
loop
pop
test
in
push
jae
out
subb
push
insb
ljmp
iret
jae
jae
mov
inc
lods
bound
xor
lock
cs
sbb
imul
mov
xchg
call
jno
fcompl
mov
cmpsl
inc
nop
xlat
sahf
xchg
fistpll
int
mov
adc
push
clc
inc
xor
pop
mov
out
js
push
es
or
mov
std
add
xchg
shlb
lcall
cmp
lods
int3
mov
iret
in
insb
cli
fdiv
repz
push
fnsave
inc
les
or
out
pop
test
inc
faddp
add
pop
mov
cs
fnstcw
jl
aam
push
inc
fisttps
movsb
push
outsb
outsb
out
push
or
insl
daa
enter
fs
mov
sbb
int3
mov
outsb
outsb
outsb
outsb
pop
push
nop
jbe
data16
mov
xor
pop
or
enter
jl
pop
ret
bound
shrb
lock
ss
pushf
sti
clc
add
loope
jl
fmuls
int
sbb
sahf
jae
xchg
leave
out
lahf
int
aam
into
fisubl
and
and
out
inc
mov
cwtl
mov
adc
xor
add
xchg
xor
mov
xor
out
pop
cli
testl
aam
jecxz
clc
sarb
add
fisttps
jmp
pop
xlat
push
jne
xor
into
int
dec
rolb
loopne
call
xchg
mov
pop
adc
imul
pop
pop
sarl
inc
out
mov
test
sub
sbb
inc
cltd
push
outsb
xlat
sub
xor
inc
stos
pop
lea
jbe
les
sbb
repnz
aaa
mov
out
pop
sub
stc
or
fdivl
xor
hlt
add
sbb
fdivrl
data16
pusha
mov
enter
sti
fld
call
add
clc
xor
jae
mov
insb
ret
adc
cmp
addr16
xor
mov
xor
sbb
fdivrl
and
sahf
mov
or
es
dec
test
mov
add
fsubrl
mulb
shll
repz
int
clc
fdivrl
push
dec
fs
xlat
int
int
mov
pop
roll
into
les
movsb
mov
or
cmpsb
mov
xor
imul
push
push
jmp
cmpsb
cmp
into
sbb
out
subb
cs
adc
stos
leave
movsl
iret
out
add
xchg
add
jl
outsb
push
cmp
outsb
sbbl
aaa
aaa
aaa
pop
jg
lahf
cmpb
sbb
lahf
jns
in
adc
fisttps
xchg
in
insb
out
clc
fidivrl
lcall
jo
pop
aaa
jb
inc
test
push
cmp
data16
sub
aaa
aaa
adc
dec
xchg
cltd
repnz
jae
or
sar
add
addb
fwait
push
and
js
mov
xchg
cmpsb
and
dec
outsb
outsb
outsb
outsb
loop
xor
repnz
push
or
sahf
outsb
outsb
outsb
outsb
shl
ljmp
icebp
int3
inc
outsb
outsb
outsb
outsb
imul
dec
stos
mov
sub
push
clc
insb
outsb
aad
mov
mov
or
sbbl
in
ret
scas
mov
mov
aas
fwait
fwait
cmp
insl
sub
insb
lds
cs
fdivrs
sbb
cld
inc
mov
das
test
cmc
push
js
fadd
in
sahf
out
pop
dec
lahf
mov
fidivs
aaa
pop
xchg
mov
adc
aaa
xchg
or
cs
pop
shlb
hlt
xor
rclb
mov
and
popf
imul
lods
pusha
push
pop
lret
das
mov
mov
mov
scas
push
aaa
aaa
aaa
mov
inc
sbb
inc
inc
cmp
push
jle
or
fucomi
or
ficoml
mov
mov
insb
lahf
fwait
sbb
mov
mov
out
mov
pop
or
aam
mov
loope
or
push
mov
int
pop
push
mov
dec
sbb
cli
div
rolb
std
xchg
lock
hlt
xor
into
push
jge
mov
mov
mov
js
jle
mov
dec
xor
lock
pop
test
mov
inc
aam
in
jae
jle
inc
mov
xor
ret
jae
imul
push
call
sub
les
test
jno
iret
xchg
cli
imul
pop
imul
aam
sahf
xor
outsb
mov
stc
mov
in
sub
jp
or
outsb
xchg
push
xchg
or
add
outsb
mov
lret
test
mov
inc
lret
outsb
outsb
add
push
dec
mov
sbb
outsb
outsb
outsb
or
push
mov
mov
outsb
outsb
sahf
lret
les
call
mov
mov
pop
cmp
enter
mov
sti
pop
out
cmp
ljmp
add
adcb
push
into
into
scas
out
sahf
aaa
aaa
aaa
aaa
imull
jne
mov
ss
aaa
bound
mov
insb
outsb
clc
fprem
mov
test
testb
cmp
orps
inc
dec
mov
outsb
aas
fildl
pop
and
mov
aam
cld
insb
mov
pop
movsb
jae
clc
cmp
xchg
ljmp
fnstcw
fbstp
dec
in
and
aam
out
out
xchg
sub
call
aad
repnz
mov
lcall
lods
push
sarb
fwait
pop
xor
data16
pop
aas
fucomip
xor
fcompl
xchg
andb
pop
pop
scas
jg
xor
leave
mov
cmp
test
pop
jl
add
mov
popf
xor
or
loop
ds
push
test
ljmp
sub
mov
and
adc
pop
ss
or
imulb
in
dec
aam
mov
jl
xorb
hlt
dec
and
hlt
pusha
int3
out
scas
xor
fwait
ds
mov
les
cld
pusha
inc
jp
push
mov
ret
dec
sar
inc
add
mov
enter
sahf
scas
push
clc
out
mov
xorl
cwtl
cs
pop
arpl
shrb
iret
jbe
filds
or
mov
inc
mov
mov
push
ja
mov
test
xor
mov
adc
ret
out
js
dec
add
mov
arpl
cltd
push
out
xchg
inc
cmp
aaa
mov
repnz
jl
pop
std
insl
fldl
aaa
push
add
mov
inc
sbb
push
ja
add
xchg
sub
aaa
aaa
aaa
xlat
out
push
shl
jp
xchg
subb
ss
cmp
jb
push
nop
jae
fwait
fwait
sarb
cmp
cli
adc
mov
or
mov
add
lock
mov
jl
mov
int
call
sub
clc
je
jae
fnstcw
ljmp
dec
xor
jl
jae
jae
out
add
or
mov
sbb
adc
out
jae
xlat
add
pop
sbb
push
fcoms
cmpsb
fistpl
or
mov
fs
sbb
outsl
aaa
mov
mov
cli
xor
fadd
and
div
add
inc
std
push
cwtl
outsb
addr16
sub
pop
jno
mov
lahf
int
popa
leave
rcrl
push
scas
cli
fsts
and
mov
nop
aam
mov
inc
inc
sbb
outsb
mov
cmp
push
jmp
mov
jge
outsb
jns
test
dec
test
fs
push
push
push
bound
dec
inc
sbb
fisubrl
int
notl
les
in
pop
mov
clc
jb
mov
int
xchg
mov
adc
in
mov
out
iret
mov
std
popa
lcall
mov
jbe
cmp
cld
adc
std
insb
outsb
outsb
sbb
push
test
int3
jle
addr16
ss
aaa
mov
inc
dec
pop
dec
outsb
clc
stc
in
xor
push
pop
in
test
lahf
int
int
mov
xchg
mov
jnp
data16
nop
outsb
outsb
jle
jl
mov
mov
add
outsb
outsb
lret
mov
sbb
ficompl
ss
lods
jb
lock
and
rcr
add
inc
cld
pop
mov
shll
jbe
sub
push
jae
add
movsb
cmc
sbb
jae
jae
push
push
mov
xchg
ljmp
mov
dec
in
inc
in
mov
inc
pop
adc
in
add
sahf
in
xor
pop
es
mov
sar
and
mov
mov
incb
fnstcw
mov
mov
push
aas
jns
jae
jl
xor
cli
cmc
mov
dec
dec
mov
enter
mov
jnp
clc
out
mov
arpl
mov
popf
cmp
out
and
cmp
jle
std
sahf
jp
xor
mov
mov
cmpl
mov
les
pop
mov
push
pushf
enter
fdivrl
test
pop
aaa
xchg
and
fmull
mov
add
test
outsl
sar
data16
jae
xchg
xchg
jle
sbbl
ss
test
mov
xor
ficoml
mov
inc
inc
inc
pop
pushf
lcall
mov
pusha
jl
rorb
rcrb
movsb
int
and
jl
mov
xchg
cmp
pop
mov
out
mov
into
es
int
or
fimuls
mov
mov
int
imul
push
icebp
icebp
cs
mulb
mov
fsubl
xchg
jne
sahf
fildl
and
add
cs
or
popf
rclb
test
fcoms
sarl
jecxz
sub
outsb
mov
lea
jbe
xchg
outsl
mov
ljmp
fcom
xor
repnz
stos
fimull
lods
adc
loop
jae
jnp
aam
pop
bound
outsl
dec
mov
addr16
cmp
mov
cwtl
outsb
mov
dec
jge
xchg
xchg
testb
in
jae
dec
out
or
das
ret
out
iret
xor
fisubrs
jg
or
or
je
mov
pop
dec
pop
cmc
fnsave
xchg
jo
sub
in
and
mov
cmp
sub
mov
fdivr
inc
jmp
adc
sbb
mov
push
stos
aam
jae
jae
pop
dec
or
ljmp
jae
jae
jl
inc
inc
push
repnz
mov
sbb
mov
mov
out
aam
subb
call
mov
iret
rcll
xchg
sahf
loopne
test
or
mov
inc
movsb
lock
cld
clc
fisubrl
int3
mov
adc
push
sub
pusha
pop
outsb
not
jb
cli
rcr
inc
xor
or
sahf
cmp
insb
jge
outsb
outsb
orb
inc
scas
popf
les
xor
and
fs
pop
adc
cmpsb
fbld
ss
adcb
cmp
fmull
imull
dec
out
and
cmpsb
es
pusha
fcmove
sub
aaa
aaa
ja
xchg
aad
stos
cmp
clc
mov
out
cmp
insb
dec
test
loopne
test
pop
sub
inc
int
int
adcb
pusha
jle
les
fisttpl
into
xor
insb
jae
jae
mov
leave
inc
cmc
inc
mov
and
popa
movsl
sahf
movsl
pop
cmp
mul
cmp
pop
adc
out
mov
mov
inc
jl
loopne
xchg
ljmp
out
popf
hlt
sub
pop
xlat
aas
int3
or
jae
mov
push
sahf
int
int
xchg
subb
bound
xchg
mov
iret
xchg
das
mov
outsb
adc
lods
jge
or
outsb
dec
lods
jb
xchg
addps
out
jns
jbe
mov
pushf
scas
xor
out
out
add
push
fisubrl
out
sbb
inc
cmp
or
call
idivl
pop
xchg
mov
addr16
dec
ss
mov
and
mov
mov
push
pop
xor
sub
stos
adc
jmp
mov
mov
and
insb
sub
pop
mov
dec
jg
in
or
dec
xchg
imulb
cmpsb
dec
lea
insl
pushf
into
mov
inc
lds
add
push
ss
int3
or
shll
lcall
and
scas
cmpb
cltd
outsl
jge
pushf
fwait
push
mov
imul
icebp
mov
lock
mov
clc
movsb
fldl
sbb
sbb
dec
mov
sbb
leave
and
testb
loop
xchg
outsb
adcb
out
rclb
sub
scas
pushf
inc
inc
shrb
out
push
add
pop
shr
push
bound
or
lcall
aas
icebp
fsts
add
insb
into
xchg
js
push
jl
ficoms
dec
pop
in
sub
in
cmp
es
xor
xor
jle
int
lods
jecxz
lock
inc
in
fisubrs
dec
cld
push
pop
mov
lahf
adc
push
jl
repz
daa
faddl
test
adc
mov
or
jno
das
or
sahf
lods
test
roll
cld
insb
dec
aam
push
push
jno
outsl
cmp
mov
inc
cmp
aaa
jle
stc
lea
push
cli
bound
xchg
jo
pop
xchg
fdivrl
inc
push
dec
cmp
sub
adc
aam
sub
clc
fcoml
std
clc
int
adc
dec
std
insb
outsb
mov
adc
bound
subb
ficoms
aaa
push
std
push
mov
adc
ja
sub
les
aaa
jp
cs
fisttpl
fldt
out
xchg
jns
testb
push
aas
stc
icebp
mov
bound
cmp
maxps
lahf
std
insb
filds
xor
dec
test
mov
sahf
jmp
cmp
call
idivb
shlb
bound
cmp
iret
push
mov
xchg
pop
adc
shlb
jbe
push
jne
icebp
mov
jae
daa
dec
negl
jae
shll
xchg
addr16
int3
push
insl
icebp
pop
scas
lea
movsl
push
mov
cmp
aaa
mov
mov
pop
xorb
into
sub
shrb
insb
jle
lahf
push
mov
sbb
andl
es
movsl
cmp
sbb
loope
pop
or
out
loop
xchg
movsl
xor
mov
sbb
rclb
mov
jb
rcl
jl
and
ss
mov
imul
pushf
lods
fcmovu
jl
hlt
enter
mov
xor
mov
mov
ror
mov
mov
and
fcompl
insb
xchg
bound
aaa
push
jae
rorl
push
jg
shl
jae
jae
jp
mov
jno
pushl
iret
out
mov
mov
jb
mov
std
inc
popa
cmpsl
pop
inc
cmp
out
out
fidivrl
add
inc
push
shlb
test
fsubp
add
mov
inc
mov
fs
xor
cmp
push
add
push
fs
stc
sub
cmp
cltd
mov
outsb
fwait
lahf
and
adc
fsubrl
xchg
addr16
and
push
sbb
aam
out
test
leave
mov
mov
add
cs
jbe
shlb
loopne,pt
insb
jns
test
push
cld
ficoml
aaa
sbb
cli
sub
fcmovne
test
mov
stc
out
icebp
ljmp
lahf
sbb
stc
mov
mov
and
sti
jl
ds
cmp
out
adc
mov
push
popf
daa
stc
inc
fcmovne
out
push
fdivrl
xchg
scas
mov
mov
cli
clc
insb
aas
adc
cmp
mov
jecxz,pt
mov
inc
jge
mov
divb
mov
jmp
sub
xchg
outsl
jno
xor
ds
loopne
jne
scas
mov
int
inc
lahf
push
xchg
lret
fldenv
mov
mov
push
adc
lea
xchg
leave
dec
clc
lock
mov
fildl
les
dec
aad
faddl
xchg
adc
aas
fwait
out
int
loopne
xchg
arpl
pop
or
push
mov
jae
jnp
and
add
int3
subb
dec
scas
xchg
sahf
int
sub
xchg
push
lahf
or
out
pop
pusha
test
pop
mov
je
or
sub
add
in
and
push
mov
adc
or
pop
test
xchg
xchg
cld
jg
xor
or
testb
shl
movsb
mov
insb
push
out
out
sbb
out
rclb
sbb
fildll
pushf
xchg
in
adc
outsl
cli
leave
movsl
sub
std
insb
movsl
xor
jle
adc
idivb
or
fsts
negb
mov
out
inc
imul
mov
mov
mov
rorb
imulb
bound
movsb
loopne
push
sbb
les
shll
mov
jbe
adc
dec
adcb
mov
jle
jae
jae
loope
push
sbb
andl
jae
in
out
mov
repnz
outsb
push
addr16
cs
cli
rorb
insb
sbb
jl
outsb
outsb
inc
push
pop
and
jmp
push
call
pop
mov
jae
test
mov
jae
movsl
or
lahf
int
dec
in
into
jo
inc
loope
mov
loopne
mov
push
xor
outsb
fwait
fwait
fwait
fwait
push
aam
hlt
sarl
div
shrb
mov
clc
and
mov
lret
fdiv
mov
inc
mov
pusha
std
pop
xchg
loop
fmull
rcr
stos
dec
push
enter
addr16
ret
dec
jle
pushf
out
out
lock
and
inc
test
out
out
std
pop
hlt
ret
out
cmp
pop
int
pop
dec
push
adc
dec
jb
int
int
addl
subb
int
jle
ljmp
loopne
cli
loopne
adc
pmaxub
sbb
xchg
cmc
mov
cld
mov
movb
inc
sahf
int
filds
mov
fsubrs
fsubs
or
mov
mov
sbb
jl
arpl
cmp
mov
iret
out
mov
and
and
imul
psrad
cld
jo
ss
mov
bound
loope
rcr
sub
xor
and
add
mov
mov
insb
outsb
outsb
aam
loopne
and
push
out
mov
mov
adcl
adc
out
xor
sahf
mov
mull
adc
data16
ds
iret
cmovs
test
out
out
test
sbb
pop
imul
cli
loope
and
sbb
gs
addr16
out
dec
xchg
movsb
xorl
ss
out
jp
push
dec
mov
cmp
out
out
and
sbb
fs
stos
xchg
cmp
nopl
cltd
insl
popf
fwait
fwait
xorb
leave
cmp
push
cld
insb
outsb
clc
sbb
fmull
sub
or
jp
and
add
cltd
stos
jmp
xchg
sub
inc
outsb
insb
mov
mov
shlb
or
adc
jge
outsb
outsb
pop
outsb
xchg
and
mov
jge
aam
mov
loopne
and
sub
mov
xchg
movsb
into
mov
int
out
sbb
insb
aaa
jbe
imul
sub
iret
jmp
sbb
insb
pop
inc
add
dec
sbb
decl
rolb
sbb
leave
imul
mov
sub
ljmp
inc
and
mov
and
test
cltd
push
andl
ficompl
and
call
pop
mov
je
sub
fwait
lods
mov
pusha
stc
jnp
push
mov
inc
xchg
inc
and
push
dec
les
mov
inc
sub
xchg
pusha
aaa
push
test
mov
xor
jg
call
popa
cmc
dec
ljmp
adc
iret
mov
int
mov
mov
incl
jle
jo
cmp
sarl
movsl
jo
sub
mov
mov
pushl
pop
mov
hlt
ret
push
loop
int
xor
or
lcall
lahf
pop
sub
cli
ljmp
cs
daa
inc
sar
push
dec
dec
cmp
mov
movsl
sub
imul
xor
repnz
cmp
int
jmp
cmp
gs
daa
out
push
loop
cmp
mov
int3
push
fldcw
push
scas
popf
mov
mov
cmp
cwtl
icebp
decl
ja
jmp
lret
or
stos
fdivl
ja
sub
and
push
mov
fcomi
sub
push
ret
in
shlb
incl
dec
sub
mov
cwtl
add
xor
ret
test
insl
mov
out
push
pop
call
daa
add
or
stos
and
data16
push
adc
fbld
dec
xor
ffree
push
aas
aas
inc
ljmp
out
mov
cmc
js
cmp
lock
sub
add
pop
jecxz
jns
fadd
sub
and
test
outsl
pushl
inc
xor
add
xor
xchg
enter
insb
call
orb
lock
jmp
jns
xor
fdivrs
jbe
test
fisttps
sbb
and
outsb
insb
je
leave
sbb
and
jns
mov
lods
out
add
aas
xor
in
movsb
inc
sub
incl
jo
push
lret
add
shlb
xchg
and
std
fwait
loope
outsb
call
adc
and
push
pop
jbe
decb
pop
sub
out
sbb
sbb
call
cmp
rclb
jmp
and
outsb
jo
lcall
inc
shlb
pushl
das
rorb
lods
pushf
jl
loope
and
sbb
scas
outsb
xor
push
dec
cmp
sbb
movsl
cmp
shll
sahf
pop
aaa
xchg
jmp
cli
pop
jne
pop
mov
jbe
in
mov
lds
push
jg
ljmp
jge
lods
mov
es
push
dec
jno
sub
mov
ds
push
xchg
rcll
call
repz
mov
imul
xor
nop
sbb
sbb
mov
movsl
inc
jno
out
cmp
dec
push
push
xchg
xchg
shrb
stos
roll
and
fmull
hlt
cmp
bound
pusha
sti
pop
sbb
test
js
jl
pusha
inc
inc
fnstenv
imul
out
xor
cld
fwait
fs
adc
dec
ja
cmpsb
push
cmpsl
ret
lock
cmp
dec
mov
ret
adc
lock
mov
lcall
in
xchg
adc
mov
sarb
movsb
lods
and
cmp
mov
ljmp
or
rclb
add
shl
pop
or
lock
das
nopl
movsl
jbe
and
push
jns
lcall
jle
out
es
push
fadd
es
out
jne
pushl
dec
out
mov
push
cld
dec
imul
push
out
in
or
jne
in
clc
addr16
ljmp
idivb
scas
pop
push
jmp
dec
imul
addr16
decl
pop
loope
hlt
sub
cmp
sbb
xor
cmp
insb
dec
push
std
xchg
jg
incl
push
xchg
subb
cmp
js
mov
mov
mov
inc
ret
lds
or
sti
xor
mov
jnp
mov
inc
stc
lret
push
shll
popf
outsl
add
jp
jg
jbe
add
sub
ret
push
push
xor
arpl
mov
sbb
xor
dec
pushf
lret
gs
cmp
ljmp
jmp
in
mov
or
fists
xor
in
jmp
cmp
add
mov
push
enter
and
aad
mov
push
movl
incl
imul
push
int3
popf
out
rcrb
xchg
xchg
and
pop
decl
fbstp
add
lahf
dec
fs
xchg
adc
mov
mov
mov
hlt
ljmp
or
jnp
pop
movsb
lcall
pop
mov
push
add
scas
cli
lcall
dec
sbb
daa
or
fwait
nop
fsubrl
sarl
xor
lcall
sbb
and
mov
test
jnp
in
jmp
sub
out
into
xor
jl
test
cmp
sbb
ljmp
cwtl
jl
sub
lret
loop
cmp
and
pop
mov
sar
popa
jge
cmp
mov
call
out
and
jnp
inc
mov
xor
jb
andb
xor
pop
insb
std
pop
pop
mov
test
out
lcall
mov
or
mov
insb
xor
adcl
cltd
pushl
and
add
aad
pushf
mov
sub
pop
dec
or
mov
roll
call
or
loopne
push
add
push
xor
jg
mov
int
aaa
movsb
enter
cmp
test
es
cmpsb
jle
adc
dec
mov
fbld
popf
stc
popa
repz
fcomps
dec
sub
sti
jg
add
es
test
int
fcoms
or
fmul
call
adc
inc
sub
in
xchg
lods
pop
pop
cmp
mov
or
push
jmp
jecxz
push
decl
je
xchg
mov
inc
jb
lock
ds
ds
xchg
pushl
adc
xchg
and
jns
mov
mov
in
std
pop
insl
push
jecxz
test
test
lret
std
in
out
mov
idivl
rclb
dec
jg
clc
imul
jmp
fldenv
pop
pop
pop
mov
xchg
push
push
jg
sub
adc
addl
xchg
mov
cmp
fscale
ficoms
pop
fcmovnb
outsl
push
xchg
sti
push
push
pushf
ficoml
hlt
mov
repnz
jb
iret
insb
stos
jbe
mov
sti
sub
cmp
xchg
ss
adc
jle
out
fistl
rolb
inc
mov
pop
pop
xchg
sbb
in
scas
dec
mov
aaa
decl
mov
lret
mov
mov
xor
decl
ret
or
lret
pop
shl
mov
ret
adc
sub
mov
call
pop
jno
shl
mov
out
setl
movsb
dec
aad
sbb
sub
sar
rol
and
push
sub
cmp
or
add
lods
push
leave
data16
pop
int
add
inc
add
das
movsb
sub
and
in
sbb
fldt
mov
mov
mov
add
jns
loope
je
xchg
outsb
dec
addr16
sbb
sbb
sub
or
jp
icebp
xor
bound
mov
dec
jae
mov
cmp
ljmp
xchg
xor
outsl
mov
jns
imul
sbb
push
in
incl
negl
sbb
inc
cmp
mov
cwtl
cli
pop
cmpl
icebp
ficoms
add
jns
sub
das
outsb
popf
in
lods
add
jmp
inc
mov
cmp
dec
mov
adc
dec
lods
push
mul
je
lock
jg
adc
pop
push
and
add
dec
mov
aaa
cmp
xchg
xor
test
in
mov
pop
jnp
or
sbb
std
in
mov
ss
dec
mov
jge
rol
xorb
jg
lahf
adc
xor
push
mov
inc
inc
test
jne
inc
insl
inc
movsb
test
cmp
sub
push
dec
jge
repnz
add
cli
xor
testb
sub
insl
mov
inc
mov
add
ret
or
idiv
mov
outsb
xchg
add
cld
dec
pop
mov
pop
add
mov
mov
inc
dec
jne
dec
pusha
lods
movsb
jns
jnp
in
lret
mov
pop
adc
lahf
mov
adc
jl
or
lahf
push
sbb
inc
scas
sbb
idiv
cmpl
sub
and
mov
out
fmull
push
pop
cmp
rdpmc
int3
pop
cmpsb
insb
pop
or
add
sar
pop
jp
add
dec
clc
jne
xchg
out
gs
and
jo
xchg
xor
data16
mov
cli
lcall
add
test
push
lods
das
sti
add
mov
das
sub
mov
loopne
in
imul
adc
jnp
bnd
inc
push
out
jl
mov
jl
mov
pop
hlt
push
les
pop
push
int
imul
mov
sub
sbb
call
repz
ds
data16
es
loopne
mov
and
add
faddp
dec
ds
pop
push
mov
push
js
adc
loopne
or
test
mov
push
popf
mov
dec
mov
mov
add
mov
fwait
inc
rcrl
xchg
shlb
loopne
and
push
out
sub
or
push
push
test
clc
dec
inc
rol
nop
scas
call
lcall
out
lcall
add
dec
mov
mov
js
popf
inc
loopne
pop
aam
insb
mov
and
xchg
xor
in
popa
fadds
inc
fcoms
jl
out
adc
add
push
sarb
jge
pop
mov
aaa
push
or
inc
inc
add
mov
sbb
fs
out
add
inc
adc
or
dec
push
iret
testl
dec
mov
sub
add
add
adc
pop
fldcw
inc
and
in
and
sub
int3
enter
mov
clc
dec
int
fcmovnu
fcmovu
lret
loopne
in
pop
lods
testb
xchg
sub
add
insl
add
es
cmp
and
popa
je
xor
xor
xor
xor
mov
aaa
cmp
inc
inc
inc
inc
inc
inc
xor
pop
cli
push
push
push
ss
sbb
adc
push
push
inc
repz
jns
addb
push
add
pop
pop
outsb
push
cmp
mov
popa
or
jmp
inc
es
cmp
repz
dec
push
pop
repz
rep
je
test
repz
mov
iret
repz
int3
aam
stc
cmp
repz
hlt
cld
add
out
sahf
cmpsl
or
sbb
sub
out
sahf
xor
inc
dec
push
pop
pushf
fsubrl
js
cmpsl
add
add
xor
repnz
dec
xor
enter
sbb
aam
arpl
nop
fs
gs
popw
and
and
mov
pop
xchg
xchg
mov
pop
mov
pop
or
rcrl
and
mov
mov
pop
cmp
cs
pop
jo
repz
adcb
out
cmp
clc
or
sbb
jns
out
cmp
js
xor
mov
add
adc
es
lock
lock
pop
insb
pop
in
push
mov
mov
es
aas
jnp
sti
add
inc
ja
push
aam
pop
mov
push
mov
int3
jbe
cmp
int
popf
iret
sbb
pop
ds
pop
iret
aam
dec
out
pop
adc
pop
out
scas
mul
and
idivw
mov
out
dec
xor
push
aaa
shll
cmp
cmpsl
movsb
xchg
pop
testl
lock
cld
push
int3
out
insb
das
jb
movsb
aas
outsl
in
xchg
and
mov
pushf
lahf
out
addr16
sahf
inc
hlt
montmul
cmpsb
add
minps
mov
pop
or
into
out
and
inc
pop
xchg
into
daa
dec
push
dec
pop
aaa
mov
mov
das
inc
mov
xchg
jnp
notl
lock
push
fs
out
add
pop
out
inc
mov
push
aam
mov
and
mov
repz
cmc
cmp
push
xchg
cld
ss
mov
je
aad
lcall
and
xchg
xor
adc
loopne
jb
rolb
add
cmc
adc
test
sub
push
add
aas
incl
push
add
dec
add
add
sbb
add
inc
and
sub
jl
sbb
aaa
or
je
and
outsl
sub
pop
fistpl
data16
push
sbb
add
adc
ja
cmp
js
fscale
ficoms
adc
push
inc
jb
popa
add
adc
push
jb
outsl
push
pop
push
data16
mov
add
outsb
add
pminub
arpl
and
jo
out
pop
jnp
popa
and
outsb
addr16
pop
insb
push
ja
in
mov
jae
je
insb
lahf
lock
adc
ja
imul
add
in
mov
adc
push
push
push
iret
jnp
pop
xor
push
and
jns
mov
outsl
pop
data16
jae
or
push
arpl
daa
or
inc
and
add
mov
cmp
pop
jb
pop
and
jge
sbb
shll
outsl
pop
and
or
ficompl
lret
outsl
mov
mov
rcpps
add
mov
adc
pop
in
xor
or
pop
sbb
insl
je
pop
ret
outsb
addr16
mov
push
pop
daa
fidivl
cwtl
fsubrp
pop
xlat
jns
cmp
add
ficomps
popa
dec
popa
push
imul
add
das
fidivs
jb
inc
out
xchg
jb
push
fidivrs
out
push
pop
jnp
mov
sub
adc
out
adc
ja
cmp
je
shr
jnp
pop
pop
dec
mov
push
jbe
inc
xlat
pop
pop
and
and
aaa
push
dec
hlt
mov
add
jne
xor
add
sub
fisubs
dec
addr16
bound
cmp
push
icebp
or
arpl
mov
add
jnp
andl
mov
lret
adc
xchg
pop
fadds
jae
imul
ss
loopne
jge
sub
jb
xor
push
pop
dec
pop
roll
xchg
data16
ds
xchg
add
add
lds
and
lret
adc
mov
or
lds
addl
push
lret
add
fildll
je
jb
test
push
data16
cmp
push
mov
outsl
mov
jg
popf
push
cmp
cld
mov
push
lahf
jae
cmp
sbb
jg
ja
mov
or
adc
push
jbe
cmp
sub
out
jo
xor
loopne
pop
add
je
popw
mov
mov
sub
pop
sbb
push
cmp
insl
push
push
pusha
btc
adc
shll
adc
clc
mov
xlat
push
lcall
xor
pop
pshufw
add
in
jge
mov
arpl
mov
adc
ss
cmp
jo
and
xorb
fidivrs
mov
mov
sbb
xlat
cmp
dec
xchg
loop
push
sub
add
sahf
fwait
outsl
fisubrs
shrl
addr16
imul
or
arpl
fildll
add
pop
or
pop
aam
sbb
jecxz
ret
mov
jo
lret
pop
divl
jecxz
outsl
sub
cmpsl
and
jbe
cmp
mov
add
sub
scas
jae
out
xchg
jl
dec
push
jo
pop
mov
bound
jne
pop
pop
scas
xor
inc
jno
mov
pop
out
ss
imul
push
cmp
ja
push
jo
push
das
divb
fsubrl
lcall
xor
add
add
inc
dec
and
mov
mov
fcmovnu
adc
mov
sub
pop
adc
xchg
xor
add
je
pop
or
das
mov
push
lods
dec
stos
push
ficoml
xor
in
sbb
out
repz
mov
adc
xor
fcmovu
outsl
fstpt
cmp
jecxz
adc
popa
in
ja
mov
pop
and
sahf
ss
or
push
fldt
mov
or
xchg
fwait
notl
cmp
ret
and
jecxz
push
adc
fiadds
xchg
jle
xchg
or
sub
xlat
jo
out
xchg
adc
dec
jb
and
xor
or
jle
shrl
or
fs
pop
jg
mov
pusha
arpl
pop
aas
aam
sti
aas
arpl
mov
mov
jecxz
cmp
jns
jno
or
sub
dec
mov
std
add
push
push
fs
add
sahf
adc
push
push
dec
inc
outsl
outsb
jae
jae
int
push
sbb
adcl
and
adc
cmpsl
std
dec
push
imul
push
gs
and
inc
adc
cmp
mov
andl
inc
arpl
jbe
movsb
lods
out
jbe
xor
jae
addr16
add
les
stos
iret
fs
inc
pop
lcall
xchg
add
gs
push
adc
inc
adc
inc
add
xchg
outsl
jb
sti
jg
xchg
mov
push
imul
jne
jb
jp
dec
add
gs
and
inc
jbe
push
adc
dec
xchg
push
gs
inc
mov
xor
mov
adc
loopne
arpl
mov
outsl
outsb
sub
push
imul
inc
mov
jae
inc
js
sbb
and
insl
and
stc
ds
lret
jmp
xlat
sbb
sub
push
pop
inc
push
jb
mov
dec
popf
loopne
push
pop
lods
int
xchg
test
pop
addr16
and
imul
rcll
scas
pop
push
imul
xchg
sbb
insb
out
sub
inc
dec
sub
or
mov
ret
dec
fs
push
loope
push
data16
lret
pop
xchg
insb
inc
outsb
mov
sub
mov
insb
outsl
jae
and
insl
pop
push
sbb
jo
or
ret
mov
lret
inc
leave
sub
gs
cs
insl
nopl
pop
or
in
sbb
in
and
sub
adc
add
push
or
sbb
inc
movsb
or
push
test
xor
dec
jo
jmp
sub
add
loopne
sub
sbb
aas
xor
mov
push
jnp
jp
push
orl
sbb
int
sub
sub
sbb
push
stos
or
push
push
test
or
adc
push
or
mov
cmpsb
inc
sti
imul
adc
test
jb
dec
fstl
loop
notl
or
imul
cli
outsb
inc
addr16
pop
shll
or
sti
or
outsb
push
or
test
insb
cwtl
or
cmp
adc
xchg
cld
pop
xlat
inc
std
rcll
addr16
imull
jns
ficompl
fs
sahf
jbe
inc
dec
test
cmpsb
xchg
insb
addr16
sub
push
sahf
fildl
or
rep
lods
data16
dec
es
add
outsl
jne
daa
dec
leave
mov
push
mov
imul
push
sbb
and
and
mov
and
sub
lcall
sarl
popa
mov
lret
sub
repnz
fst
enter
mov
jae
lret
sbb
mov
loopne
mov
inc
and
xor
add
dec
cmp
add
dec
add
add
pop
inc
sub
and
lahf
loopne
popl
fcompp
adc
push
adc
loop
jnp
push
sub
add
fcomp
inc
decl
cs
sbb
and
gs
adc
add
iret
data16
adc
rolb
add
rolb
ds
dec
inc
inc
scas
test
jo
add
fcmovnb
inc
and
pusha
inc
inc
push
inc
std
push
in
add
push
or
js
pop
jle
push
push
orl
roll
or
out
mov
leave
dec
jnp
pusha
cmp
out
lea
sbb
ret
add
inc
push
gs
and
jb
mov
daa
mov
sbb
in
and
subb
add
pusha
mov
lea
movl
push
jmp
nop
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pusha
and
insb
and
cwtl
addb
add
add
insl
push
inc
add
add
add
add
push
add
add
add
orb
add
addb
addb
add
insl
push
inc
add
add
add
pop
add
sldt
push
sldt
nop
add
cmp
add
mov
sldt
loopne
add
or
add
xor
add
pop
add
addb
add
insl
push
inc
add
add
add
add
add
add
addb
add
repnz
add
testl
add
add
add
add
repz
add
testl
add
add
add
add
add
add
add
add
add
testl
add
add
add
add
add
add
add
add
testl
add
add
add
add
add
add
clc
add
add
testl
add
add
add
add
add
mov
add
add
testl
add
add
add
add
add
xor
add
add
testl
add
add
add
andb
add
add
add
insl
push
inc
add
add
add
add
add
add
mov
add
add
add
add
testl
add
add
add
add
add
add
add
add
add
add
add
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
int3
xor
add
add
add
xor
add
add
out
push
add
add
repz
add
add
add
push
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
add
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
insl
fs
xor
cs
insb
add
gs
jne
xor
cs
insb
add
gs
xor
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
insb
outsl
jae
dec
gs
add
push
jb
outsb
je
insb
addr16
js
add
add
jb
popa
outsb
je
outsl
jo
add
add
popa
jb
gs
inc
