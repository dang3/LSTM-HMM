push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
push
lea
push
call
movzbl
cmp
je
xor
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movl
mov
pusha
call
movl
movl
call
test
je
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
mov
mov
mov
push
call
add
mov
mov
add
mov
push
mov
push
mov
push
call
add
mov
add
mov
mov
mov
mov
popa
mov
mov
mov
mov
push
mov
mov
mov
mov
sub
mov
movl
add
ret
xor
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
shr
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
add
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
lea
push
call
movl
jmp
mov
add
mov
mov
cmp
jge
cmpl
jne
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
call
mov
add
mov
add
mov
mov
cmpl
jne
mov
mov
push
push
push
push
push
push
lea
push
call
mov
cmpl
je
cmpl
jne
jmp
jmp
mov
cmp
jne
mov
sub
push
mov
push
mov
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
mov
lea
mov
mov
mov
mov
movzbl
cmp
je
mov
movzbl
cmp
je
mov
movzbl
cmp
je
xor
jmp
mov
sub
mov
mov
pop
ret
int3
int3
push
mov
mov
mov
add
mov
pop
ret
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
push
mov
push
call
add
sar
cmp
jne
mov
push
mov
push
call
add
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
lea
push
call
mov
push
mov
push
mov
push
mov
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
movl
movl
movl
mov
mov
mov
add
mov
mov
jmp
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
movzwl
mov
mov
mov
pop
ret
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
push
mov
mov
push
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
xor
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
cmpl
je
mov
add
mov
mov
mov
mov
call
mov
mov
mov
push
mov
push
push
call
add
mov
jmp
mov
pop
ret
int3
push
mov
sub
movl
movl
movl
mov
movb
mov
push
mov
push
call
push
call
mov
mov
mov
mov
lea
push
push
push
mov
push
push
call
test
jne
mov
jmp
jmp
call
xor
jmp
mov
movzbl
cmp
je
mov
movzbl
cmp
je
mov
movzbl
cmp
je
call
mov
pop
ret
int3
push
mov
cmpl
jne
mov
mov
mov
push
mov
push
mov
push
call
add
mov
push
call
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
movl
mov
add
mov
movl
mov
add
mov
movl
movl
mov
mov
add
mov
mov
movl
mov
mov
mov
mov
movl
mov
mov
mov
mov
push
mov
push
call
add
mov
mov
mov
mov
jmp
mov
pop
ret
int3
pusha
xor
pop
xor
xor
push
xor
jo
inc
add
add
inc
add
add
xor
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xor
enter
int3
xor
shlb
inc
add
add
xor
fdivs
inc
add
xor
loopne
inc
add
xor
call
xor
lock
hlt
xor
clc
xor
cld
xor
add
inc
add
inc
add
xor
or
inc
add
xor
adc
inc
add
xor
sbb
inc
add
xor
and
inc
add
xor
sub
inc
add
xor
xor
inc
add
xor
cmp
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
xor
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xor
nop
xor
mov
xor
shlb
add
xor
enter
xorb
add
xor
shlb
inc
add
xor
fs
inc
add
add
inc
add
add
inc
add
inc
add
inc
add
add
xor
inc
add
inc
add
xor
inc
add
inc
add
xor
inc
add
inc
add
xor
inc
add
xor
inc
add
inc
add
xor
inc
add
xor
inc
add
inc
add
xor
inc
add
inc
add
xor
inc
add
inc
add
inc
add
inc
add
inc
add
add
xor
inc
add
add
xor
inc
add
inc
add
xor
inc
add
inc
add
inc
add
xor
inc
add
add
xor
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
add
inc
add
inc
add
xor
inc
add
inc
add
add
xor
in
inc
add
xor
in
xor
lock
hlt
xor
clc
xor
cld
xor
add
add
xor
add
inc
add
xor
add
inc
add
xor
add
inc
add
xor
add
inc
add
xor
add
inc
add
xor
add
inc
add
xor
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
xor
pusha
xor
add
add
inc
add
add
inc
add
add
inc
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
inc
add
xor
add
xor
add
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
xor
add
xor
inc
add
xor
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
inc
add
xor
inc
add
inc
add
xor
inc
add
ss
add
inc
add
inc
add
xor
inc
add
inc
add
ss
add
ss
add
inc
add
ss
add
inc
add
ss
add
inc
add
ss
add
inc
add
inc
add
xor
inc
add
add
inc
add
inc
add
ss
add
inc
add
inc
add
add
inc
add
xor
inc
add
inc
add
add
inc
add
add
inc
add
inc
add
ss
add
ss
add
ss
add
xor
inc
add
ss
add
xor
inc
add
add
inc
add
inc
add
add
inc
add
add
inc
add
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
inc
add
ss
add
ss
add
add
add
add
add
add
add
nop
xor
cwtl
xor
mov
xor
add
push
add
add
cmp
cmp
cmp
cmp
cmp
mov
cmp
cmp
push
aas
sub
gs
pop
ds
aas
inc
add
out
adc
cmp
add
mov
push
xor
xor
shll
xor
add
add
push
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
adc
dec
xor
xor
aas
xor
xor
xor
xor
xor
xor
xor
xor
xor
jnp
add
add
add
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cwtl
xor
xor
xor
xor
pop
xor
divl
adc
fidivl
sub
ss
xor
dec
xor
out
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
pop
inc
add
outsl
arpl
fs
jge
add
cmp
xor
jb
jae
inc
push
inc
add
cmp
xor
jb
jae
inc
ss
add
xor
adc
insb
adc
outsb
or
inc
out
add
add
fs
imul
jno
jb
pop
je
out
add
add
add
add
xlat
outsb
outsl
mov
arpl
shll
out
add
add
fs
mov
outsb
xchg
insb
gs
out
add
add
add
fiaddl
inc
add
add
sbb
inc
add
add
cmp
inc
add
inc
add
inc
add
fs
cmp
arpl
gs
sbb
outsb
popa
and
jb
jae
inc
add
add
add
inc
add
add
insl
xor
sbb
insb
out
add
add
jno
arpl
je
fisubrl
shll
jae
je
add
jno
arpl
add
mov
arpl
addr16
jnp
insb
inc
mov
out
add
add
jb
pop
bound
insl
outsl
arpl
add
add
imul
push
imul
inc
dec
inc
inc
insl
add
jb
sbb
push
sbb
je
or
popaw
jo
insl
insb
outsl
or
data16
shrl
adc
insb
out
add
add
imul
outsl
dec
gs
jo
add
add
add
movsb
pop
add
jmp
add
out
jmp
add
out
jmp
add
add
add
add
jmp
add
out
jmp
add
out
jmp
add
out
jmp
add
out
icebp
add
out
jmp
add
out
jmp
add
out
jmp
add
out
jmp
add
out
jmp
add
out
jmp
add
out
jmp
add
out
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
jmp
in
add
jmp
in
add
jmp
in
add
cltd
scas
add
lods
repnz
mov
in
add
jmp
repnz
loop
push
add
cltd
std
call
in
add
push
add
jmp
int
call
std
add
jmp
add
add
in
in
jmp
in
add
in
in
call
sub
stc
jmp
in
add
add
add
push
std
sldt
add
inc
std
jmp
std
call
std
incl
std
inc
cmpsb
add
arpl
call
std
incl
std
incl
std
call
add
add
add
add
add
add
add
add
adc
add
add
xlat
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
jmp
add
out
jmp
add
out
jmp
add
out
jmp
add
out
mov
add
out
pop
les
add
add
add
jmp
mov
push
jmp
add
out
jmp
add
dec
adc
inc
dec
add
out
pop
and
out
jmp
or
out
jmp
add
out
jmp
add
out
sub
scas
mov
bound
out
add
adc
add
daa
out
add
shr
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
add
add
jmp
in
add
jmp
in
add
add
add
add
add
add
add
push
add
add
add
inc
add
add
add
push
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xlat
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
out
jmp
add
out
jmp
add
out
jmp
add
out
jmp
add
out
jmp
add
out
jmp
add
out
jmp
add
add
jmp
mov
add
arpl
out
cmp
mov
add
xlat
lret
add
jecxz
add
in
add
or
out
or
out
add
in
add
in
add
in
add
mov
in
add
mov
in
add
mov
add
add
add
add
in
add
mov
in
add
in
add
mov
in
add
add
add
in
add
in
add
ret
sub
ret
in
add
ret
movsl
ret
jmp
ret
add
scas
js
jmp
jmp
add
add
add
jp
incl
scas
jmp
cs
call
cs
incl
pushl
in
add
add
call
pop
mov
dec
call
jmp
call
pushl
inc
jmp
cltd
std
mov
sahf
std
jmp
cmp
repnz
add
add
mov
add
fldenv
add
pop
mov
add
xor
add
jne
add
mull
add
inc
scas
add
repz
add
imull
add
subl
add
scas
add
jge
add
lret
scas
add
cmp
add
scas
add
ret
scas
add
add
add
add
scas
add
sti
scas
add
or
add
or
mov
add
das
mov
out
inc
mov
out
inc
mov
out
addr16
out
dec
mov
out
xchg
add
fwait
mov
out
lods
mov
out
jns
add
imul
add
lods
ret
add
pinsrw
mov
add
mov
add
rol
out
add
add
add
jge
add
dec
aam
out
popf
aam
out
mov
add
ret
aam
out
mov
scas
add
int
add
adc
out
and
xchg
stos
in
add
in
add
in
add
in
add
in
add
stos
in
add
stos
in
add
stos
in
add
stos
in
add
stos
in
add
stos
in
add
stos
add
add
add
add
stos
in
add
stos
in
add
stos
in
add
test
in
add
stos
in
add
stos
in
add
stos
in
add
test
in
add
lods
in
add
in
add
lods
in
add
lods
in
add
inc
fwait
add
pop
xchg
add
outsl
mov
add
add
dec
fwait
add
aaa
xchg
add
das
mov
add
addb
add
add
add
pop
add
aad
add
jmp
add
xchg
inc
add
mov
add
mov
inc
add
pop
inc
add
outsl
xchg
add
add
add
mov
add
adc
add
filds
add
adc
add
pop
add
push
pusha
add
outsl
pop
add
or
cmp
add
imul
add
add
add
lods
mov
add
mov
add
mov
add
lahf
add
movl
add
iret
add
pop
roll
add
add
adcb
add
xchg
add
adc
lods
add
out
rolb
inc
add
add
cmpsl
add
add
cmpsl
cmpsl
add
mov
add
add
add
add
cmpsl
add
out
mov
add
scas
mov
add
sarl
add
icebp
mov
add
leave
mov
add
lahf
mov
add
xchg
mov
add
cmp
add
mov
add
and
add
push
mov
add
ret
mov
add
out
flds
add
lret
rolb
ret
rolb
movsl
rolb
mov
rolb
in
rolb
add
shr
arpl
in
add
shr
aaa
shr
or
in
add
mov
in
add
in
add
shr
das
shr
dec
shr
imul
in
add
shr
addr16
in
add
rolb
add
add
add
shr
ret
shr
add
shr
or
in
add
shr
imul
add
in
add
in
add
shr
cltd
ret
add
sub
decl
sub
lcall
sub
lcall
sub
decl
sub
lcall
decl
incl
lcall
scas
mov
scas
incl
add
call
lods
jmp
lods
decl
lods
jmp
stos
in
mov
call
stos
mov
sub
ljmp
call
cmp
cmp
jmp
xor
pushl
les
add
ret
add
dec
les
add
add
inc
les
add
add
add
dec
les
add
les
add
ret
add
mov
mov
add
and
mov
add
xor
add
mov
add
mov
add
pop
test
add
subl
add
gs
add
out
adc
ret
add
add
add
out
aaa
ret
add
daa
ret
add
xlat
lds
out
xlat
add
out
out
add
mov
add
or
add
out
das
roll
out
aaa
roll
out
dec
roll
out
jno
add
xor
roll
out
or
add
jmp
add
mov
roll
out
mov
add
jno
add
cmp
add
imul
out
cmpl
add
add
add
out
mov
roll
out
or
add
add
shr
add
shr
add
add
add
add
sbb
out
adc
out
sub
out
andb
add
add
sbbb
in
add
add
orb
in
add
mov
in
add
out
cmp
out
sub
out
xor
out
cmpb
in
add
add
add
add
out
sub
out
sbb
out
sub
out
sub
out
orb
in
add
mov
add
add
orb
out
addb
mov
add
in
add
scas
pop
add
sarl
add
mov
aas
add
popa
cmp
add
add
sbbl
add
mov
add
and
add
add
mov
add
int
add
mov
add
jmp
ja
add
add
aad
add
jmp
pop
add
lds
add
inc
add
dec
cmp
add
push
add
add
add
jl
mov
fisubs
dec
ja
jecxz
sub
cmp
div
dec
jb
adc
push
pop
sub
sbb
add
add
test
pop
dec
test
cs
dec
cwtl
mov
mov
inc
stc
icebp
inc
inc
add
fmull
cld
and
insb
pop
movsl
jmp
inc
insl
fsubrp
xor
pushf
xor
fsts
adc
je
pusha
cmp
adc
je
pusha
out
leave
je
jnp
mov
add
jg
loop
push
daa
push
subl
dec
add
add
add
imull
imulb
call
pop
push
sub
mov
mov
fimuls
pop
in
aaa
sub
idivb
cmp
ja
or
mov
push
mov
mov
movsl
loop
sub
xor
xchg
lahf
sbb
std
jge
sbb
dec
fdivp
push
fsubrs
add
add
add
add
movsl
notl
xchg
lea
adc
shrb
pop
in
popf
cld
out
jo
adc
out
xchg
jmp
daa
sti
cmp
push
aas
adc
lods
and
cld
les
ss
xchg
jmp
cwtl
lea
mov
xchg
jmp
popf
cld
les
mov
xchg
jmp
add
or
push
push
out
xchg
jmp
enter
clc
inc
mov
dec
lds
add
in
add
sbb
xchg
inc
lea
adc
add
je,pn
and
xchg
mov
add
scas
push
js
gs
out
or
rclb
xchg
ret
add
scas
push
in
in
outsb
outsl
xor
mov
mov
or
add
add
add
jnp
fiaddl
iret
adc
add
scas
ja
and
clc
add
mov
adc
adc
jge
lods
scas
dec
mov
add
inc
jge
add
adc
cwtl
add
enter
bsf
adc
add
or
add
adc
add
mov
nop
inc
add
add
add
dec
adc
xor
and
push
dec
movsl
out
rclb
lcall
ljmp
push
mov
adc
inc
add
mov
gs
add
cld
dec
ds
out
and
sbb
xor
decl
lcall
out
rcr
dec
lret
add
xchg
push
sahf
xor
rolb
add
add
call
sbb
push
xor
mov
cs
mov
sbb
inc
mov
push
xchg
cmp
mov
int3
mov
fistpll
add
fidivrs
mov
decl
jmp
test
scas
pop
xchg
xor
filds
xchg
lret
cs
jmp
std
add
add
add
in
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
lods
add
add
add
add
add
lods
add
add
add
outsb
add
lods
add
add
add
out
add
lods
add
add
jmp
out
add
add
add
add
in
add
jmp
add
pop
out
inc
add
in
add
jmp
icebp
add
jmp
in
call
in
add
lock
call
in
add
loop
add
lock
jmp
in
add
loop
add
cmc
add
jmp
in
add
loop
add
lock
add
cmc
cmp
jmp
loop
add
add
add
add
sbb
jmp
in
add
loop
add
lock
call
or
add
or
or
xlat
or
add
or
add
xchg
or
or
mov
pop
sub
xchg
or
or
xchg
or
add
and
inc
or
add
add
add
add
test
inc
or
or
or
pop
or
or
pop
or
push
add
or
or
pop
or
push
pop
out
out
insb
out
out
sub
out
mov
out
out
mov
out
dec
out
out
clc
out
xlat
add
out
out
push
out
out
adc
mov
mov
out
out
jb
add
add
out
out
xor
out
out
fadds
out
out
out
out
and
out
movsb
out
out
add
out
sub
or
out
in
xlat
add
out
out
pop
out
out
sbb
out
xchg
out
mov
or
add
or
sti
add
add
or
or
jmp
or
add
or
or
add
add
and
jmp
add
add
or
jmp
or
add
add
add
or
add
or
add
add
add
or
add
or
add
or
add
or
jmp
or
add
add
add
or
add
or
add
ljmp
jmp
add
add
add
mov
call
in
add
hlt
pushf
add
cmc
or
jmp
in
add
cli
faddl
dec
in
add
jmp
in
call
cmc
jg
fucomi
sti
call
in
add
cli
mov
add
in
add
in
add
cli
sahf
add
cmc
add
jmp
in
add
cli
fiadds
stc
add
add
add
add
jmp
pop
pop
sbb
pop
or
add
cmp
pop
pop
jns
pop
pop
cmp
xlat
or
adc
movl
sub
xlat
or
or
movl
dec
add
incl
add
push
adc
add
jne
xchg
xor
add
or
add
add
add
add
and
add
add
add
inc
add
or
add
out
out
pop
out
out
sbb
out
mov
or
out
cmp
out
aad
pop
out
out
insl
out
out
sub
out
out
or
out
out
dec
out
out
cli
out
xlat
add
out
out
push
add
add
add
out
adc
mov
ret
out
mov
and
out
jae
out
xor
out
out
fadds
or
out
arpl
out
and
out
cmpsb
out
out
add
out
sub
jmp
or
add
add
add
or
add
or
fldl
lods
add
or
jmp
or
add
or
jmp
add
adc
add
or
add
or
jmp
or
add
or
add
or
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
or
call
cmc
aas
add
hlt
out
stc
out
or
jmp
cmc
idiv
call
add
jbe
fucomp
arpl
jmp
cmc
pop
add
hlt
mov
sti
out
sti
call
cmc
daa
add
hlt
xchg
add
in
add
in
add
cmc
inc
add
repnz
add
xlat
jmp
cmc
lock
cmc
push
add
js
call
cmc
adc
jmp
pop
or
jmp
push
or
add
mov
add
inc
or
add
addb
or
pop
add
add
add
add
or
add
add
add
cmp
pop
or
xlat
or
add
add
adc
or
xlat
or
add
add
or
or
add
xlat
add
xchg
push
add
or
add
add
add
or
push
add
decb
out
fs
out
and
out
test
out
out
test
out
inc
out
out
jmp
out
out
pop
out
out
sbb
out
cltd
out
mov
push
out
out
jl
out
cmp
out
fldz
fsin
push
out
out
insb
out
out
sub
out
mov
out
out
mov
add
add
out
out
dec
out
out
stc
out
xlat
cld
add
out
push
out
out
adc
lods
or
out
out
jb
add
or
jmp
cld
in
jmp
or
jmp
or
add
or
or
stc
cld
call
add
or
add
or
lods
add
or
or
add
add
and
jmp
cld
cld
add
or
or
jmp
or
add
or
or
jmp
cld
ljmp
or
add
or
add
fidivl
add
cmc
dec
add
cmc
or
jmp
push
add
jmp
cmc
sbb
jmp
in
call
cmc
cmp
jmp
add
in
stc
adc
add
cmc
xor
jmp
in
add
repnz
add
cmc
push
add
cmc
adc
jmp
shl
call
cmc
and
jmp
in
add
cmc
addb
movsl
inc
add
lcall
jmp
xchg
xlat
adc
mov
push
pop
add
jo
push
xlat
xor
inc
aam
add
add
add
push
push
or
push
xlat
pusha
add
and
inc
aam
add
add
pop
xlat
addb
xlat
inc
add
aam
add
push
push
add
xlat
pop
add
xlat
sbb
pop
aam
add
cmp
xlat
js
xlat
cmp
aad
add
pop
adc
xlat
push
add
aad
add
or
xchg
mov
xchg
dec
add
xlat
or
add
add
out
out
push
out
out
adc
mov
add
mov
sub
out
je
out
xor
out
lret
or
out
out
and
out
stos
out
out
add
out
test
out
inc
out
out
ljmp
sti
pop
out
out
sbb
out
lcall
sti
jl
out
cmp
out
aad
pop
out
out
insb
add
add
add
out
sub
out
mov
out
out
mov
add
sti
sub
jmp
or
add
sti
sbb
jmp
sti
lods
add
or
add
sti
sbb
jmp
or
add
sti
int3
add
sti
or
jmp
sti
in
add
sti
insb
add
sti
lods
add
cli
or
stc
or
add
sti
movsb
add
sti
add
add
add
add
cli
pop
add
or
add
sti
adc
jmp
or
add
sti
push
add
sti
add
jmp
jmp
movsl
jnp
jmp
xchg
xlat
add
testb
jmp
jb
adc
jmp
push
pop
add
push
mov
call
xor
add
add
xor
add
and
xchg
jmp
adc
add
idiv
call
cmc
out
call
mulb
jmp
aad
add
aam
add
imul
call
lret
cs
lret
xchg
lret
push
add
lret
dec
add
clc
add
js
add
xchg
clc
adc
mov
add
add
add
add
add
ds
add
clc
inc
add
add
clc
add
aas
clc
add
sbb
and
adc
add
inc
clc
or
cmp
clc
addb
clc
incl
clc
add
clc
testl
sbb
stc
push
add
stc
pusha
add
stc
add
or
iret
or
in
stos
or
out
stos
or
fisubrs
add
add
mov
add
int
shr
or
out
movl
add
iret
add
out
rolb
push
out
loope
add
out
roll
add
faddl
add
in
add
scas
add
out
xlat
add
out
xlat
add
out
xlat
add
out
xlat
add
out
xlat
add
out
xlat
add
out
xlat
add
out
xlat
add
out
fadds
add
fadds
add
fadds
add
fadds
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
repnz
loope
testl
cmc
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
ljmp
add
in
add
in
add
in
in
add
in
add
out
in
add
out
add
out
in
add
out
add
icebp
in
add
icebp
in
add
loopne
add
loopne
add
repz
add
repz
add
loop
add
loop
add
cmc
in
add
in
add
add
add
add
in
add
fsubr
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
add
add
add
call
inc
inc
call
call
inc
inc
call
incl
incl
add
add
add
add
add
add
or
fildl
add
or
stos
add
add
add
add
add
add
add
add
incl
add
add
add
incl
add
incl
add
xchg
add
out
pop
add
out
testl
or
mov
or
xor
add
out
inc
add
out
test
or
add
add
out
add
add
out
add
add
out
lds
or
int
or
dec
add
out
sbb
add
out
in
add
out
insl
add
out
cmp
add
out
std
add
out
jge
or
or
add
out
mov
add
out
int
or
dec
add
out
add
add
add
testb
add
add
add
add
add
out
testb
add
add
add
add
out
incl
testb
add
add
add
add
add
add
out
testl
testb
add
add
add
add
add
add
add
add
add
add
testb
add
add
add
add
add
testb
add
add
imul
clc
ljmp
clc
jmp
in
clc
jmp
clc
jmp
ljmp
xchg
clc
inc
in
clc
incl
clc
push
in
clc
pushl
clc
pushl
ljmp
aaa
ljmp
imul
clc
out
in
clc
ljmp
clc
lcall
repnz
lcall
repnz
decl
add
clc
aas
repnz
mov
repnz
jg
clc
ljmp
repnz
ljmp
cs
add
add
add
add
add
add
add
add
add
cld
pop
add
or
stos
add
add
add
add
add
add
add
add
or
cli
add
add
or
fiaddl
or
add
add
add
add
add
add
add
std
pop
add
cld
pop
add
pop
add
std
pop
add
pop
add
cld
pop
add
cld
pop
add
cld
pop
add
or
or
xchg
add
out
mov
add
out
int3
add
out
push
add
out
lret
out
lret
out
dec
add
out
dec
add
or
push
or
ljmp
add
ljmp
out
stos
add
out
sub
out
sub
or
dec
add
out
lret
out
lret
out
rolb
or
rolb
out
bound
or
bound
out
adc
out
adc
or
mov
rolb
testl
inc
add
add
testl
adc
out
addb
add
add
add
add
add
add
out
jb
testl
mov
add
add
add
add
add
add
add
add
out
push
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
scas
ljmp
int
add
add
in
idiv
decl
idiv
inc
in
idiv
or
in
idiv
ljmp
std
in
idiv
cmc
in
idiv
jge
idiv
jne
stc
lcall
in
stc
lcall
in
stc
fucomp
stc
call
in
stc
lcall
stc
call
stc
jge
stc
pushl
stc
std
in
stc
push
in
stc
push
in
stc
in
add
add
add
stc
jmp
stc
lcall
stc
lcall
std
or
or
or
mov
or
push
add
add
decl
add
decb
add
cld
or
call
add
add
cld
or
clc
decb
add
or
pop
decl
add
decb
add
decl
add
decb
add
decl
add
add
add
sbb
or
cmp
or
push
decl
add
add
add
cld
push
add
stc
add
out
cmp
out
test
add
out
leave
add
out
or
out
roll
pop
out
adc
out
roll
out
add
out
loope
pop
out
and
out
xchg
add
out
roll
pop
out
aad
pop
out
popf
add
out
cmc
add
add
add
add
mov
add
out
imul
out
ret
add
out
mov
pop
out
add
out
push
add
out
xchg
add
out
push
add
out
mov
or
ss
out
jbe
or
testb
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
jmp
cli
add
loope
clc
pop
loope
clc
pop
lock
add
add
testl
jecxz
testb
repz
jmp
or
jecxz
or
cli
cmc
or
repnz
or
ljmp
in
hlt
or
icebp
hlt
or
jmp
hlt
or
stc
or
or
cmc
jmp
or
in
or
or
in
loopne
or
fdiv
or
or
add
orb
or
mov
adc
push
adcl
push
push
inc
adc
push
popa
adc
push
inc
adc
push
push
adc
push
and
push
push
inc
adc
push
inc
adc
push
adc
push
push
inc
adc
push
and
push
push
add
push
push
adc
mov
lldt
lldt
adc
xadd
pavgb
xadd
sldt
add
add
adc
push
adc
xadd
xadd
pfrcpit1
adc
icebp
ficoms
psubsw
adc
stc
test
adc
adc
mov
adc
clc
mov
push
add
push
pop
stc
push
pop
loope
sbb
out
sbb
add
add
push
mov
sbb
mov
sbb
mov
sbb
out
sbb
add
add
add
rcrl
sbb
add
sbb
add
sbb
sbb
add
sbb
hlt
mov
sbb
in
sbb
in
sbb
aad
add
aad
add
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
loop
int
ficompl
pop
or
in
pop
cli
sbb
pop
repnz
pop
ljmp
pop
add
add
add
sbb
and
sbb
pop
or
in
pop
cli
sbb
pop
repnz
pop
ljmp
and
sbb
rcrl
cld
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
aam
sbb
int3
push
sbb
add
sbb
cld
into
sbb
in
into
sbb
fmul
sbb
in
push
pop
icebp
add
add
add
pop
or
testl
or
call
push
push
out
cli
or
adc
fstl
adc
fmull
adc
cld
movups
call
adc
call
adc
adc
fcmovu
adc
fstp
adc
aad
adc
std
fsts
cmc
add
adc
add
adc
push
mov
push
push
push
add
add
add
adc
pop
pop
mov
pop
pop
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
sbb
sbb
sbb
dec
sbb
sbb
pop
sbb
push
pop
sbb
out
pop
sbb
out
pop
sbb
push
pop
sbb
push
pop
sbb
push
pop
sbb
push
pop
sbb
sbb
sbb
sbb
push
sbb
in
push
sbb
add
add
add
scas
sbb
hlt
scas
sbb
hlt
lahf
sbb
in
sbb
in
sbb
aad
sbb
aad
sbb
add
scas
sbb
cmc
scas
sbb
cmc
sahf
sbb
in
sbb
loop
add
out
test
add
cmpsl
add
out
cmpsb
add
out
lods
add
out
movsb
add
out
stos
add
out
mov
add
out
lahf
add
out
mov
add
stos
add
out
mov
add
add
mov
add
mov
add
out
leave
add
out
roll
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
out
add
jmp
call
mov
add
in
add
jmp
add
jmp
int
jmp
sub
add
jmp
popf
add
add
add
add
or
inc
sbb
cltd
sarb
sub
pop
inc
es
leave
sbb
sahf
sbb
push
test
fdivrl
xchg
shl
jno
into
xchg
add
outsl
jle
adc
js
jns
or
or
add
cmp
ficompl
insb
pusha
daa
aam
or
roll
pop
and
std
add
add
add
int3
mov
call
push
cli
cli
incl
iret
pushf
insl
cmp
imul
data16
dec
enter
aaa
or
movsl
cmp
xchg
mov
imul
mov
xor
pop
filds
call
fsubrl
cmp
add
lahf
sub
shlb
rolb
add
add
cmp
scas
mov
lret
inc
orl
add
mov
fimull
std
stos
or
aaa
outsl
add
inc
push
scas
aam
gs
cmp
sbb
jecxz
rclw
aad
and
inc
outsb
mov
test
mov
or
insb
or
fwait
push
dec
xor
push
add
add
mov
clc
insb
testb
sub
sahf
popf
push
test
or
mov
add
mov
xchg
call
sbb
mov
xorb
sahf
sbb
lods
adcl
mov
sbb
or
cmp
mov
pop
push
inc
sti
jl
inc
bound
hlt
xor
test
xchg
dec
push
xchg
add
add
add
push
sarb
loop
inc
rolb
movl
mov
arpl
cmp
inc
les
add
inc
mov
stos
mov
add
aad
sti
dec
inc
mov
daa
or
int3
jle
push
cmp
and
mov
mov
out
pop
jno
xlat
sub
shlb
fidivs
insb
loop,pn
add
add
cmp
sarl
leave
insb
js
push
cld
jne
cmc
dec
outsb
add
outsl
je
mov
ljmp
fiaddl
call
and
gs
and
pop
pop
push
dec
mov
or
mov
pop
jge
inc
pop
or
jns
push
imul
push
gs
imul
add
add
xor
aam
aaa
stos
rorb
or
addr16
mov
mov
pop
loop
mov
out
and
jns
shll
push
jb
dec
jbe
mov
cmpsb
sub
mov
out
outsl
call
or
dec
cmp
data16
pusha
dec
or
test
loopne
imul
test
jo
xor
dec
shrl
imul
mov
pusha
or
add
mov
mov
jl
pop
mov
sahf
sub
lods
mov
xchg
fxch
mov
fidivs
mov
pusha
push
mov
insl
in
inc
std
or
add
cs
pop
out
std
push
add
add
add
sahf
xchg
fistpll
add
js
push
cmpb
jno
popf
pop
mov
xor
jp
cmpsb
sbb
ja
test
adc
cmpsb
stos
dec
cmp
sbb
testb
out
repz
xchg
adc
cmp
add
xchg
movsl
hlt
pusha
call
add
add
add
leave
popf
xchg
inc
sub
idiv
xchg
cmpsl
testb
shlb
and
and
iret
scas
lods
mov
roll
inc
lret
mov
jg
fisubs
sub
insb
xor
inc
je
arpl
ja
mov
mov
out
mov
adc
fsubs
pop
sbb
mov
add
jmp
add
add
call
and
pop
push
mov
outsl
add
add
sub
in
add
test
push
sbb
add
dec
sub
mov
jge
daa
pop
push
mov
fxch
push
and
sarl
adc
lods
add
lods
mov
roll
xchg
or
dec
pop
pushf
fcoms
in
repz
add
add
xchg
cmp
scas
cs
cmp
add
mov
pop
sub
test
mov
insb
pushl
mov
aam
add
out
cmp
sbbl
lahf
push
dec
mov
jns
test
pop
pop
aam
inc
incb
and
popa
pop
mov
adc
imul
scas
jo
add
add
mov
outsb
dec
sub
aad
push
in
jmp
fmull
or
test
es
mov
movsl
test
sbb
adc
outsl
lahf
fsts
shrl
ljmp
call
stos
inc
fstp
stos
dec
in
inc
pop
mov
xor
outsb
fisubs
ret
daa
cmpps
jge
add
add
sti
xchg
test
pushf
or
jo
enter
mov
pop
cli
scas
xchg
jnp
loopne
xor
inc
inc
jb
adc
mov
getsec
cmp
pop
dec
arpl
incb
iret
fcomps
cmp
les
movsl
aaa
sbb
jns
inc
pop
mov
dec
add
add
add
add
and
in
gs
and
jl
jb
push
test
dec
dec
rorb
or
xor
insl
sub
sbb
adc
orb
leave
ret
notb
shrb
and
lahf
shr
cs
mov
xor
mov
jnp
push
dec
cmp
push
flds
add
add
mov
cs
push
jl
out
scas
stos
incb
stos
xchg
rcl
stos
and
int3
fnsave
xchg
lcall
cmpsb
test
jns
cmp
push
mov
fildll
adc
or
fsubrs
scas
shll
repz
mov
imul
inc
ja
rcl
ss
adc
mov
add
add
es
jno
pop
pop
push
mov
sub
call
int3
sbb
or
add
out
cmpsl
add
mov
scas
jne
push
mov
int3
hlt
mov
cs
xchg
fnstcw
jo
dec
inc
jg
cmp
pushf
sub
sub
out
cmp
push
or
cld
flds
add
add
dec
mov
add
mov
pop
call
mov
mov
in
test
test
mov
push
pop
lds
xchg
mov
repz
scas
call
outsb
sbb
mov
add
sti
push
push
cltd
out
fcoml
jmp
or
mov
add
daa
xchg
jno
and
add
je
fisubs
cmp
mov
loopne
jb
xor
lea
test
pop
testb
jmp
repnz
repz
mov
sub
mov
mov
das
mov
mov
insl
popf
xchg
sti
push
add
in
push
in
fstpt
cld
adcb
xlat
inc
sbb
into
hlt
lahf
dec
mov
add
add
pop
cmpsl
push
pop
sarl
idivb
fwait
add
pop
cmp
sub
test
inc
xchg
cmpb
into
int
jne
pop
adc
inc
in
mull
push
sahf
in
adc
ljmp
cmc
insb
dec
stc
movsb
push
inc
js
leave
xchg
mov
mov
lods
ror
mov
adc
sbb
add
add
mov
mov
loope
xchg
aas
push
lret
pop
adc
imul
cld
pop
pop
or
sbb
lds
xchg
inc
notl
dec
or
movsb
jno
mov
and
xchg
lcall
mov
inc
add
inc
or
in
ret
lret
push
fmuls
pop
dec
adc
nop
fwait
rorb
mov
xchg
or
add
xchg
stos
push
sbb
hlt
xchg
fmuls
std
rcrl
or
pop
gs
mov
mov
clc
cmp
and
in
enter
outsl
imul
ss
std
ja
mov
dec
cmp
lds
sti
cli
repz
loop
jns
fcoms
loope
inc
dec
mov
xlat
mov
xor
or
add
add
adc
cltd
inc
adc
in
mov
sti
icebp
adc
out
pushf
loope
fcmovu
cwtl
pop
sbb
adc
into
xchg
mov
repz
sahf
test
inc
js
fldl
dec
or
and
dec
in
loopne
loop
mov
loopne
mov
loop
jo
fucomi
leave
fldt
std
fcmovnu
cmp
add
add
add
sub
cmp
dec
gs
jbe
xor
mov
add
hlt
xor
das
ret
cs
mov
sub
mov
sub
push
outsb
mov
repnz
add
lock
js
mov
jns
xor
jnp
sbb
data16
insl
cmpsl
xchg
jmp
outsb
add
add
add
add
push
pop
lock
mov
loope
push
bound
call
arpl
inc
fisubl
mov
pusha
sbb
pop
sbb
gs
dec
not
or
call
nop
dec
cmc
or
dec
and
dec
jnp
dec
dec
test
mov
addr16
inc
add
aas
inc
inc
movb
les
inc
add
add
add
sub
icebp
push
lock
push
test
mov
push
dec
ret
cld
inc
cmp
idivb
add
mov
pop
fcoms
pop
adc
movsb
pop
xchg
mov
pop
xchg
pop
sub
outsl
pop
push
lods
pop
pop
sti
xor
shr
loopne
outsb
mov
push
and
jnp
cmp
insb
mov
out
add
add
push
scas
jns
out
sbb
jecxz
adc
mov
add
jl
pop
xor
stos
add
xchg
pop
rcl
loop
sbb
sarl
sub
lds
sahf
mov
push
pop
mov
lcall
hlt
out
sahf
leave
dec
inc
lahf
inc
inc
or
loopne
lea
add
add
js
inc
js
imul
inc
lods
jp
xor
mov
jno
pop
test
inc
mov
stc
les
sbb
or
push
pop
mov
cli
mov
rclb
xor
sarb
lret
movsl
dec
mov
pop
fidivl
mov
jb
pop
mov
je
ffreep
adcl
mov
das
sub
mov
stos
push
push
mov
push
mov
lea
nop
xlat
inc
add
popl
push
push
pop
xchg
inc
mov
xchg
fisttpl
mov
lahf
sahf
lahf
and
mov
cmpsb
popf
or
imulb
cltd
xor
scas
lcall
add
add
sub
mov
xchg
hlt
lea
popa
mov
test
mov
sub
mov
xchg
dec
inc
add
popf
mov
push
test
jne
xchg
fcmovne
xchg
lahf
test
add
stc
gs
out
out
mov
scas
mov
lods
ljmp
cmpsl
and
cmpsb
add
add
add
out
movsb
popf
mov
pop
xchg
mull
popf
pusha
jl
jb
mov
mov
movsb
add
mov
roll
mov
dec
btr
fmuls
mov
mov
xchg
mov
adc
sbb
sub
leave
xchg
mov
out
jl
mov
add
add
add
jp
jno
xchg
fiadds
mov
mov
push
or
cwtl
mov
and
popa
mov
mov
fisttps
jmp
cmp
je,pt
movsb
mov
fwait
lods
sub
les
push
imul
cmp
xor
mov
xchg
sti
adc
inc
pop
movsb
sarl
mov
add
add
add
lods
iret
in
nop
jae
add
stos
push
xor
or
jo
popa
mov
push
or
add
push
sbb
out
faddl
js
xchg
xchg
test
adc
mov
push
mov
jmp
pop
outsl
repz
xor
mov
aas
cltd
dec
fwait
adc
dec
rcl
cmp
jg
add
add
add
and
ret
in
cs
les
aad
pop
int
sub
jnp
mov
aam
dec
ss
mov
jnp
xchg
adc
xchg
dec
test
and
and
xor
popaw
mov
enter
gs
push
mov
and
in
mov
hlt
std
dec
cmc
dec
insb
dec
ret
add
add
add
imul
cmp
ret
dec
icebp
or
cmpsb
or
shrb
pop
fnstcw
inc
pop
pop
mov
out
es
add
mov
push
add
add
add
insl
mov
je
or
popf
xor
orl
shrl
add
cmp
lcall
fcoml
mov
pop
clc
or
add
add
sub
dec
push
dec
iret
icebp
cmpsb
sub
decb
xchg
lcall
dec
lock
scas
dec
leave
pop
cmp
and
arpl
aas
imul
shll
push
mov
mov
in
shl
pop
xchg
dec
repnz
imul
mov
scas
aaa
clc
aas
inc
xor
out
inc
or
call
push
ss
add
add
add
push
pop
sbb
insl
mov
mov
hlt
sti
jmp
and
int3
mov
stos
xor
sub
in
js
push
jle
xor
push
les
or
rorl
data16
imul
cmc
xchg
pop
push
and
xor
popf
fs
pop
aad
cld
mov
add
mov
insl
shrl
mov
aad
pusha
xchg
mov
dec
jle
mov
sbb
les
sbb
int3
mov
fwait
out
mov
jnp
rolb
popf
loop
mov
sarb
mov
rolb
and
in
xchg
jbe
cmp
ret
fildll
div
jb
add
add
add
ljmp
cmc
mov
je
xchg
inc
adc
scas
pushf
clc
aaa
or
gs
ret
in
push
pusha
inc
sbb
jb
mov
lret
fs
cmpsb
sti
clc
out
push
inc
insb
std
sub
mov
mov
je
aas
fcoml
lods
cwtl
fs
aam
clc
mov
outsb
inc
ret
ret
loop
sahf
pop
jbe
shrb
pop
add
add
add
nop
sbb
rorb
ret
ja
xchg
sbb
sbb
outsl
xchg
cmp
lea
pop
mov
cmpsl
xor
adc
aas
add
addl
xchg
jo
pop
xor
call
icebp
out
subl
mov
adc
jle
inc
jg
andb
add
add
jbe
fldenv
les
sbb
loope
cwtl
adc
xchg
cld
cmpsl
dec
pop
in
lret
or
shll
ret
mov
test
and
scas
lahf
ss
rcrl
mov
dec
icebp
gs
mov
outsl
adc
pop
shll
test
xor
mov
dec
cltd
jmp
shrl
out
fildl
add
add
xchg
xorl
dec
leave
or
sbb
enter
cmp
add
pusha
icebp
or
and
je
sub
xlat
pop
sub
movsl
fistpl
and
fdivl
mov
jmp
data16
push
jl
add
pop
sti
jno
push
sbb
push
push
xchg
jp
aas
dec
gs
add
add
add
mov
mov
xchg
lods
pop
mov
xor
jae
cli
daa
jbe
lds
roll
jae
cmpsl
movsl
fldl
adc
add
mov
insb
or
shrb
push
leave
popf
sub
ss
scas
pushf
dec
and
mov
cmp
xchg
test
inc
fwait
sub
and
lea
inc
add
add
add
add
xor
lds
aad
iret
xchg
shrb
mov
xor
enter
pop
inc
mov
cltd
mov
call
jg
das
jmp
test
xchg
or
stos
push
cmp
cltd
inc
nop
call
jnp
mov
js
jge
out
add
add
mov
pushf
movsl
sarl
enter
cltd
xor
mov
xchg
sbb
jmp
imul
jmp
pusha
bound
das
fdivs
xchg
xchg
in
mov
add
ret
push
mov
inc
jmp
ljmp
sbb
dec
add
add
add
push
jl
or
dec
mov
popa
pop
sbb
cmp
je
cmp
loop
dec
movsl
inc
pop
pop
xchg
xlat
jae
les
fs
sti
out
ljmp
add
mov
in
sub
fwait
add
cmp
jl
xlat
add
mov
or
ficoms
and
sub
pop
pusha
sbb
add
out
and
jno
mov
clc
add
cwtl
int3
fisubrs
cmp
outsl
ss
pop
adc
cld
pop
orl
push
mov
stos
dec
loop
or
add
ja
add
mov
clc
or
and
jl
es
inc
sub
pop
or
jbe
add
add
add
jae
cltd
add
lea
adc
scas
xchg
jle
inc
imul
loopne
iret
sub
fwait
push
mov
or
aad
fnstcw
and
xor
and
push
push
lcall
pusha
scas
aas
scas
lea
sarl
das
add
sbb
inc
sub
test
lret
add
add
add
out
jle
testl
out
push
pusha
xchg
or
mov
fcoms
sub
add
push
mov
jg
int3
adc
movsl
icebp
or
or
ljmp
daa
fdivrs
adc
aaa
xchg
popf
push
daa
add
lcall
aad
jb
ret
sbb
std
add
add
add
mov
add
ficoml
test
mov
test
call
mov
dec
xorb
sub
inc
dec
mov
adc
mov
arpl
and
rcl
pop
loop
fisttps
clc
nop
subl
push
int
inc
es
shrb
loope
xor
pop
out
imul
test
std
or
popf
lcall
fldt
rcrl
into
inc
out
inc
loope
lret
dec
dec
pop
sbbl
sub
mull
push
and
sbb
mov
jp
push
push
mov
or
orb
orb
loop
iret
push
mov
push
repnz
dec
ret
push
xchg
add
add
add
mov
mov
jmp
mov
push
movl
sub
dec
ss
sbb
in
in
and
adcb
mov
popl
ret
or
cmc
lret
add
out
add
out
aas
mov
loopne
mov
imul
cmp
cs
jp
inc
pusha
mov
mov
mov
add
add
add
mov
jae
pop
xchg
ljmp
stos
or
mov
mov
mov
cmc
add
pop
mov
imul
sub
inc
jmp
nop
fidivl
add
cs
cs
sbb
fisubrs
lcall
pop
mov
inc
and
lds
popa
clc
add
add
add
mov
stos
pop
test
xor
xor
pop
stos
and
sarl
lock
sub
repnz
sub
insb
mov
xlat
repnz
or
mov
fnsave
jne
xor
ret
xchg
testl
jo
jns
pusha
xor
decb
jno
mov
jns
xor
jns
add
add
add
sbb
push
sub
cli
dec
add
add
xlat
sbb
ret
xchg
mov
mov
mov
fadd
fbld
dec
std
adc
pop
adcl
dec
stc
jp
mov
arpl
sbb
and
aas
inc
pop
push
xchg
jns
cwtl
push
push
shrl
add
fs
shlb
jnp
xchg
out
test
or
rcll
mov
popa
test
scas
clc
and
mov
loop
gs
imul
mov
cmp
mov
lahf
or
data16
iret
icebp
dec
std
mov
iret
add
icebp
sbbb
cld
mov
popa
cmp
bound
add
pop
jp
ja
into
js
mov
inc
jns
cld
sbb
movsb
icebp
sub
loop
mov
pop
add
sub
iret
dec
movsl
jge
dec
nop
lods
dec
sbb
jg
sub
jns
mov
jmp
or
lret
roll
xchg
out
pop
and
fstps
js
sahf
mov
push
stos
leave
mov
add
add
jl
sub
inc
ret
inc
int
test
pop
ret
das
sbbl
lret
add
pop
jmp
fs
sub
sub
stos
add
mov
push
pop
push
xchg
fstpl
nop
or
adc
enter
mov
push
and
sub
xchg
pop
xchg
jae
inc
add
add
add
dec
jmp
gs
fwait
sub
testl
lods
loope
out
enter
dec
dec
shl
dec
sub
sbb
jg
and
aas
nop
in
xor
movsb
fnstenv
rclb
lea
imul
mov
cmp
std
jnp
daa
imul
or
pop
cmpl
pause
and
add
add
inc
xor
jbe
out
loopne
jbe
iret
cmc
lea
ss
mov
or
xlat
dec
cmc
pop
out
out
dec
mov
notl
mov
adc
or
or
jo
mov
inc
mov
pop
inc
std
mov
pop
out
ds
incl
xchg
inc
add
test
or
stc
rclb
lret
sbb
rorl
out
add
add
add
stc
cmpsb
subl
xchg
mov
sbb
xor
and
push
xchg
popa
movsb
dec
flds
jle
mov
mov
inc
add
jno
pushf
add
pop
mov
or
inc
arpl
ret
cmp
leave
dec
cmc
xor
push
nop
fists
mov
lds
bound
sub
xchg
jnp
sbb
add
add
dec
or
mov
lea
push
shlb
dec
fsubl
mov
jge
leave
mov
mov
inc
add
sub
rorl
push
and
les
cmp
adc
orl
push
int
fistpll
push
jmp
lds
jmp
add
add
add
out
cld
dec
lods
out
sub
in
jbe
dec
in
loopne
out
sahf
dec
fidivs
imul
loopne
mov
je
repz
or
adc
cmc
iret
arpl
mov
push
in
shlb
and
add
dec
cmc
sti
mov
imul
flds
xor
add
add
sub
mov
jp
jmp
dec
sar
loopne,pt
cmpsb
aam
ret
mov
sbb
cmp
outsl
jge
and
lock
out
push
push
push
push
outsl
add
push
ret
ss
test
sarb
mov
dec
imul
xchg
add
mov
sub
mov
pop
leave
movsb
fisttpll
add
add
mov
daa
jnp
bound
adc
in
ficomps
js
inc
mov
sbb
dec
sub
ret
sbb
lcall
rolb
pop
scas
xchg
pop
xor
adc
lock
push
fwait
inc
out
das
jge
data16
cmp
add
mov
psrlw
push
add
add
add
lcall
mov
inc
cs
test
stc
mov
add
sbb
paddsb
mov
cmp
mov
fisubrl
mov
mov
loope
je
mov
lret
into
pusha
lock
test
je
xchg
pop
movsl
arpl
out
xor
add
add
inc
jae
insb
adc
test
rcll
inc
sub
sub
sbb
sub
xor
out
sbb
push
dec
mov
je
lret
mov
inc
lock
mov
daa
cltd
mov
mov
jle
pop
imul
faddl
push
mov
mov
add
add
rolb
or
sub
add
xor
push
imul
add
enter
mov
push
aad
arpl
or
in
pop
jns
xchg
pop
lret
mov
lahf
dec
lock
movl
xchg
hlt
sub
pop
sbb
mov
jne
add
add
add
cltd
dec
pop
sub
jg
outsb
and
cmp
xchg
mov
pop
sti
or
cli
and
push
add
js
push
int3
mov
hlt
mov
xor
shlb
mov
in
call
out
jnp
fdivs
loopew
add
pop
into
xor
push
mov
std
adc
add
add
dec
sbb
dec
xchg
aas
dec
push
aam
int3
push
adc
push
andb
lret
scas
test
or
jnp
push
mov
icebp
adc
push
je
add
rcrl
add
mov
xchg
scas
or
cld
mov
es
sub
push
inc
add
ljmp
rol
adc
lods
add
add
add
and
mov
add
jle
mov
sub
iret
pop
icebp
or
loope
adc
pop
push
test
xchg
adc
dec
insb
adc
mov
push
fmull
dec
sbb
pop
adc
int3
lcall
sbb
pop
pushf
repz
ds
inc
and
push
ljmp
mov
test
xchg
xchg
sub
inc
out
mov
outsl
call
mov
cmp
test
pop
mov
dec
pushl
arpl
mov
or
cltd
aas
ret
dec
inc
test
hlt
cmp
aas
lds
mov
sub
sbb
cli
jg
add
add
add
pushl
mov
fldenv
ficompl
int3
in
jmp
pop
sbb
loop
mov
inc
push
out
or
mov
nop
xor
and
jl
cmp
dec
ljmp
xchg
in
xchg
and
mov
mov
xor
adc
add
xor
cmp
adc
jns,pt
xchg
add
add
add
test
fdivrl
inc
sub
out
and
cld
cld
sbb
sti
rcrb
sahf
sbb
jbe
inc
xchg
lret
pop
jle
leave
mov
scas
ds
xchg
enter
addr16
mov
shrb
push
aaa
imul
call
xchg
mov
dec
pop
add
sub
lods
out
xchg
add
add
aad
jbe
pop
lock
or
xchg
mov
int
xor
jne
push
dec
js
outsb
notb
pop
xchg
mov
cmpsb
jge
mov
shrb
out
sbb
push
jg,pn
repz
xlat
imul
mov
ja
jl
lret
repnz
pop
fisttpl
aas
mov
push
nop
inc
lock
into
test
add
add
cmpsl
incl
iret
inc
pusha
push
movsb
jo
inc
and
cltd
mov
sbb
add
std
jg
and
clc
stos
testl
sbb
xlat
mov
out
xchg
sub
lcall
push
out
mov
sbb
out
adc
xchg
or
inc
fisttpll
jbe
push
out
rcll
add
add
cmpsb
jp
add
and
jle
push
das
leave
mov
xchg
cmpsb
imul
jmp
pop
xchg
xlat
xchg
mov
xchg
es
je
mov
ret
xor
leave
mov
add
dec
pushf
mov
xor
icebp
repnz
shrl
push
add
add
add
cwtl
and
negl
outsb
push
in
outsl
shl
add
popf
or
sbb
inc
jb
push
scas
fiaddl
lret
mov
mov
dec
pop
scas
sbb
pop
aad
mov
insb
adc
or
jo
addb
fwait
aam
mov
rcrl
mov
or
hlt
jae
or
insl
push
add
add
add
add
test
sub
xor
dec
dec
xor
fwait
adc
notl
enter
lods
cs
add
sbb
xchg
pop
sbb
sub
jns
popf
xchg
xchg
ljmp
add
clc
pop
rorb
lds
mov
mov
aaa
aas
add
and
add
add
mull
cmc
sar
popa
dec
push
add
mov
rcr
mov
ss
dec
je
dec
sub
push
loope
fcoms
fldenv
and
adc
xor
fisttpl
add
mov
scas
inc
das
lock
icebp
or
sbb
push
movsb
adc
fwait
into
in
call
add
add
lea
jnp
push
jo
jns
test
push
and
and
cltd
xchg
jge
pop
shlb
mov
push
jo
and
lds
jg
xchg
sub
cwtl
outsl
insb
test
jne
decb
mov
loopne
aas
xor
dec
fmuls
dec
les
fs
mov
inc
push
mov
add
add
add
cwtl
lds
pop
cs
xor
aas
sti
scas
cmp
rcr
test
jbe
and
sbb
ljmp
add
lods
push
cmp
inc
push
xor
scas
addb
out
mov
add
jp
add
dec
xor
outsl
add
insl
outsl
adc
aad
pop
sub
add
add
add
mov
lock
jp
mov
cmp
push
fsubrs
mov
nop
cmpsb
and
icebp
dec
jp
fists
ljmp
add
in
or
lock
push
add
in
or
fsubrp
adc
cli
in
sldt
repnz
add
ljmp
add
jb
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
push
add
add
add
add
add
add
add
add
add
add
adc
add
add
push
add
add
add
adc
add
add
add
add
add
mov
xor
push
std
pusha
add
roll
push
add
add
push
adc
push
imul
add
push
add
jns
adc
jns
adc
pop
add
out
pop
add
out
pop
add
out
dec
add
je
adc
out
jbe
pop
out
jno
sbb
pusha
add
out
arpl
sbb
push
add
out
inc
add
add
add
out
cld
add
out
mov
jmp
jno
test
jae
sti
and
sti
repz
add
lock
and
and
in
inc
lock
in
and
in
push
jecxz
call
jmp
pop
sub
add
add
add
subl
test
jmp
jle
sbb
shrl
add
add
add
out
add
xor
shrl
out
or
sub
cmp
add
xor
sarl
and
andl
add
add
jmp
or
sti
mov
jne
orl
or
cmc
add
icebp
in
add
mov
pop
sar
pop
sar
pop
sar
mov
jmp
mov
sar
add
add
add
sar
jno
mov
push
sar
dec
loope
push
push
out
aad
jecxz
fcomps
jae
pop
in
jns
dec
call
jmp
in
loop
in
in
in
add
lods
in
in
mov
jl
aam
incl
add
add
add
inc
add
inc
add
xchg
inc
add
xchg
add
add
add
add
inc
add
xchg
inc
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
cmpsb
inc
add
cmpsl
inc
add
add
cmp
cs
cld
imul
add
add
or
add
sti
or
ljmp
add
add
add
call
add
movb
add
add
add
mov
add
rolb
pusha
out
mov
add
add
addl
out
jp
jnp
cwtl
add
in
testb
out
hlt
add
out
jmp
pop
out
rolb
in
loopne
popa
out
iret
add
into
add
mov
add
in
sub
jle
and
jl
sub
push
out
add
out
and
cmp
sbb
push
add
add
add
xor
or
das
add
out
sbb
add
out
add
add
add
add
add
sahf
add
add
add
add
lar
add
in
dec
add
icebp
call
add
pop
add
add
jmp
call
add
pop
add
add
pop
add
add
int
gs
adc
popl
or
addb
call
push
loop
pushl
sbb
ja
sbb
pusha
call
adc
push
call
push
add
call
and
adc
adc
or
in
jmp
add
repz
add
repz
add
jmp
add
repz
mov
roll
mov
cmp
dec
call
sub
dec
call
push
add
push
add
fiaddl
cmp
leave
add
daa
add
lock
add
push
dec
add
cli
incl
sar
sub
add
cli
sub
cli
inc
add
cli
xor
add
add
add
cli
push
push
add
push
das
add
push
sub
jbe
inc
add
dec
add
add
jae
dec
push
imul
fprem
cmp
xor
clc
or
mov
add
mov
cli
xor
icebp
xor
mov
mov
xchg
or
fiadds
add
add
in
pop
in
xlat
pop
out
mov
pop
cld
mov
sub
movsb
push
sub
cmpsb
push
or
push
nop
pop
stos
xchg
pop
lods
xchg
pop
scas
nop
pop
mov
addl
fiadds
push
mov
faddl
mov
mov
cltd
pop
mov
mov
fwait
pop
push
sahf
pop
enter
lret
add
add
add
pop
xor
xor
pop
sub
and
and
xor
cmp
xor
cmp
and
pop
xor
pop
and
xor
pop
sbb
cmp
push
xor
pop
iret
xor
pop
int3
xor
pop
enter
xor
or
xor
or
xor
or
add
add
xor
or
push
push
or
push
inc
or
pop
test
sysret
add
out
push
sub
mull
push
das
out
push
es
push
xor
sbb
xor
pop
push
and
sbb
and
sbb
xor
negl
push
daa
out
push
push
out
push
sbb
xor
sbb
das
push
sbb
xor
sbb
xor
mov
add
add
add
xor
mov
out
push
mov
mulb
push
xchg
out
push
leave
out
add
mov
ret
out
add
add
inc
push
imul
inc
push
outsl
clc
inc
push
sahf
clc
dec
push
popf
clc
dec
push
lods
clc
dec
push
repz
dec
push
ret
push
mov
dec
push
mov
dec
push
xlat
clc
dec
push
out
push
push
in
push
push
add
add
add
add
xor
push
add
push
push
add
push
push
add
push
push
add
add
pop
add
outsb
add
insl
add
jl
pop
add
add
add
add
add
daa
add
and
enter
movl
add
sub
add
repnz
pop
ljmp
or
add
add
ljmp
or
in
add
nop
ljmp
pminsw
push
dec
repnz
xor
pop
push
xor
push
push
inc
ljmp
xor
repnz
repnz
add
cmp
popf
add
cmp
mov
add
mov
add
add
add
add
add
lods
add
add
cld
add
add
movsl
add
add
mov
sbb
add
mov
inc
add
enter
fiadds
add
or
or
sti
add
add
fldl
add
add
ret
add
add
add
add
add
in
or
mov
in
or
in
or
in
sbb
in
and
in
pop
add
in
push
add
in
sbb
add
in
push
add
in
sbb
push
in
adc
add
in
sbb
in
pop
add
in
and
in
push
add
in
addb
in
js
dec
in
ja
dec
in
jbe
inc
add
add
add
xchg
add
jl
inc
in
jp
nop
in
xchg
add
in
addl
in
adc
add
ljmp
add
lods
add
ljmp
add
decl
add
dec
add
dec
add
call
add
call
add
xchg
add
xchg
add
add
add
iret
xchg
add
cwtl
add
lcall
add
add
add
add
add
add
movsb
add
in
xchg
cmpsl
in
mov
add
in
jnp
mov
jp
mov
jne
mov
jl
mov
ja
mov
jle
mov
addl
add
in
addb
in
roll
mov
in
mov
add
in
mov
mov
in
sub
shr
add
in
or
ret
add
in
or
vpackuswb
in
outsb
add
in
jno
enter
leave
in
add
sti
in
mov
test
and
sti
into
and
sti
dec
and
add
dec
and
dec
and
dec
and
test
cmp
sti
jnp
dec
sti
jno
inc
sti
xchg
and
sti
xchg
and
sti
xchg
and
sti
aam
sub
frstor
sub
repnz
sti
jmp
and
call
and
sti
lods
and
mov
and
sti
dec
and
sti
mull
add
lds
and
add
add
add
sbb
mov
pop
and
lcall
mov
jbe
lods
adcb
lahf
jb
and
arpl
mov
and
inc
cmc
and
and
and
sub
and
push
and
dec
adc
and
or
and
push
sti
cmpsl
and
add
add
add
stos
and
jmp
and
jecxz
and
aam
mov
and
mov
sub
jbe
add
jne
add
add
imul
jp
push
and
pop
and
push
or
scas
adc
lods
adc
ret
and
mov
addr16
pop
push
push
and
push
and
add
add
test
and
push
and
addr16
and
addr16
mov
and
int3
clc
sub
or
push
stc
pop
unpckhps
pop
nop
pop
cmpxchg
and
mov
adc
popf
cli
ror
cli
mov
stos
cli
lret
cli
scas
rorl
cli
sbb
cmpsl
cli
sbb
cmpsb
cli
sbb
cmpsb
cli
sbb
add
lods
cli
xor
cmp
push
mov
cli
stos
or
mov
or
into
shrl
cli
lods
lret
mov
stc
stos
lret
mov
lods
shll
stc
mov
jmp
pop
cli
mov
cli
xchg
sbb
adc
xchg
sbb
add
jecxz
std
stc
dec
sbb
stc
dec
sbb
stc
adc
fyl2xp1
add
stc
add
add
add
and
stc
fcompl
mov
stc
or
lahf
stc
add
xchg
stc
scas
sbb
stc
jmp
cmp
pop
cmp
and
stc
and
and
shll
mov
in
clc
jecxz
cmp
enter
pop
add
sub
pushf
and
notb
and
out
jmp
out
and
add
add
add
sahf
and
aaa
and
pop
mov
and
loope
and
stc
jle
mov
sahf
and
jmp
or
leave
ficoms
enter
lret
fimuls
mov
dec
add
mov
dec
add
mov
dec
add
sbb
add
push
fiadds
dec
incb
incb
aas
incb
add
add
add
adc
add
mov
loop
aam
jecxz
add
in
add
in
add
out
shl
out
out
adc
add
mov
adc
push
jne
add
je
add
jae
add
bound
add
push
jo
pop
push
outsl
adc
push
push
adc
push
mov
adc
push
sbb
or
mov
adc
push
add
add
add
adc
push
push
adc
push
test
adc
out
xchg
adc
mov
adc
in
adc
lock
pop
call
loopne
sbb
jecxz
sbb
mov
sbb
int
sbb
les
sbb
lock
adc
call
test
and
stos
mov
stos
mov
movsl
mov
lods
clc
cmpsl
mov
scas
add
add
add
mov
movaps
xchg
cvtpi2ps
mov
cvttps2pi
xchg
cvtps2pi
scas
ucomiss
cmpsb
comiss
jns
xor
add
pandn
cmp
fmull
cmp
fisttpll
xor
movnti
pop
push
push
xadd
adc
mov
inc
cmovae
and
aaa
prefetcht0
movups
or
cs
comiss
or
sub
or
add
add
add
pinsrw
bswap
push
xor
push
sub
rorl
ss
push
aaa
movnti
and
ret
setne
mov
push
cltd
push
mov
push
jnp
pushf
push
jp
popf
push
add
mov
je
mov
pop
clc
mov
push
lock
push
call
mov
xor
fists
xor
add
add
add
adc
inc
call
xor
adc
xor
pop
xor
sbb
inc
fistps
xor
clc
sbb
lock
xor
loopne
xor
mov
xor
shll
loopne
xor
xor
xor
lds
push
loopne
xor
scas
push
dec
xor
push
dec
xor
cmovl
push
cmovge
add
add
add
cmovg
push
push
xor
push
push
xor
push
push
xor
push
push
xor
push
push
xor
andnps
or
push
xor
xorps
addps
decb
pop
xor
push
pop
xor
pop
xor
push
pop
xor
pop
xor
pop
xor
pop
xor
pusha
xor
popa
xor
bound
push
or
pop
or
adc
add
add
out
sahf
or
lods
fbld
or
scas
fisttps
or
lcall
or
mov
enter
leave
or
or
ffreep
or
decl
mov
incl
or
mov
or
fistps
sar
push
sar
push
ret
push
insl
add
add
add
cmp
jno
cwtl
push
js
xchg
push
jg
xchg
push
cmpl
adc
push
pusha
adc
push
repnz
bnd
xchg
inc
icebp
push
and
icebp
mov
add
and
and
and
and
and
and
nop
and
mov
inc
and
add
add
xchg
and
xchg
and
test
inc
and
and
pop
out
add
add
add
pop
out
add
add
add
pop
out
add
add
add
in
add
fsubr
add
cli
ret
cli
in
add
repnz
add
in
add
xchg
add
sbb
add
mov
in
add
mov
in
add
lcall
add
push
in
add
popf
xchg
add
add
add
mov
in
add
mov
in
add
sahf
and
add
in
add
mov
add
shr
add
add
or
xor
add
add
ljmp
ljmp
cld
mov
incl
add
mov
pushl
mov
add
add
ds
dec
mov
decl
add
cmpsb
mov
pushl
call
jmp
call
std
jmp
pushl
mov
pushl
mov
pushl
mov
pushl
mov
incl
add
rcrl
out
push
add
out
fstpl
out
or
add
add
add
scas
pop
add
add
pop
add
imul
out
rcrl
out
pushf
add
out
loop
add
dec
add
out
mov
add
out
outsb
pop
add
add
out
sbbl
fwait
add
out
je
add
dec
add
out
sbbl
out
scas
pop
add
xchg
out
mov
add
out
sbb
out
mov
add
sbb
add
add
add
mov
add
add
add
add
add
add
add
add
out
add
out
add
out
add
add
add
out
add
add
add
out
add
add
add
pop
out
add
add
add
add
add
pop
out
add
add
add
pop
out
add
pop
out
add
add
out
add
pop
out
add
out
add
pop
out
add
out
add
das
inc
add
jno
add
scas
add
pusha
ljmp
push
ljmp
inc
ljmp
sub
mov
add
add
movsl
cmpsb
add
pminsw
add
add
cmpsl
movb
imul
add
add
mov
add
add
cmp
add
sbb
add
sbb
add
add
cmp
add
fs
add
cmp
in
add
add
mov
add
idivb
add
movsl
scas
jmp
pushl
ljmp
cld
ljmp
scas
ljmp
jge
incl
add
add
stos
sti
ljmp
cld
cld
jmp
call
cld
clc
lods
push
cld
incl
add
add
add
add
add
add
std
call
add
add
add
add
aas
add
add
add
add
out
je
out
pop
add
out
pop
add
out
mov
aaa
add
out
das
add
out
pop
jne
out
push
add
add
add
add
dec
add
out
pop
je
out
dec
add
out
pop
add
out
inc
add
out
imul
out
popl
pop
out
cmpsl
xchg
mov
add
mov
add
out
or
add
addl
out
lret
test
pop
add
out
imul
out
jne
inc
out
add
add
std
xchg
add
add
add
add
jmp
cmc
xchg
add
xchg
add
add
add
test
add
cs
add
add
add
add
add
add
add
add
add
add
scas
add
add
add
scas
add
add
add
scas
add
call
add
testl
add
add
add
add
sub
jae
incl
jae
decl
jae
incl
ljmp
xchg
in
or
popf
jae
jmp
jo
in
in
sti
clc
jae
jmp
add
jae
call
ljmp
and
out
incl
and
test
add
add
add
cld
incl
sar
ljmp
mov
push
add
jo
lcall
ljmp
call
decl
add
jns
add
jnp
add
decb
add
jnp
add
std
pop
add
jns
add
add
jns
add
incb
add
jns
add
adc
inc
addl
imul
add
add
add
jg
inc
add
cld
push
add
inc
add
or
add
decb
add
addb
incb
add
addb
incb
add
sarb
add
sarb
add
incb
or
mov
out
fiaddl
or
jg
out
jnp
pop
out
cmpsl
jg
out
or
jg
out
xchg
or
arpl
out
inc
add
out
aaa
jg
add
add
add
enter
arpl
out
inc
add
out
aaa
jle
out
or
out
mov
add
out
ja
inc
out
add
out
cmpsl
jle
out
repnz
out
fistpll
out
jns
or
mov
add
out
mov
inc
out
lcall
out
add
jle
add
scas
add
add
add
add
add
add
add
add
cs
add
add
add
add
add
add
add
add
jl
add
jnp
add
add
add
jnp
add
jl
add
jl
add
add
add
add
add
add
add
pop
repnz
add
add
xchg
sar
repnz
call
in
pop
add
sar
repnz
imul
inc
push
sar
in
inc
inc
sar
in
add
incl
and
out
call
adc
pop
add
add
lock
data16
in
push
add
repnz
mov
add
add
add
pop
add
in
idiv
inc
data16
sub
sbb
xchg
js
add
inc
add
add
sub
add
pop
add
inc
add
add
ret
jns
add
or
mov
inc
add
jns
add
add
jns
add
add
cmpsl
jns
add
adc
jecxz
inc
add
add
add
inc
add
xchg
loop
adc
jg
inc
add
xchg
mov
inc
add
flds
or
pop
xchg
pop
add
out
aas
test
adc
out
aas
test
aad
pop
out
testl
inc
out
xchg
add
push
test
fildl
add
jns
add
out
inc
add
add
add
mov
mov
mov
or
pop
mov
jp
add
out
inc
out
add
out
mov
bound
pop
out
jg
inc
out
roll
pmaxsw
xchg
insl
add
out
cmpsl
xchg
add
add
add
scas
add
add
add
scas
add
add
add
mov
add
add
add
mov
add
add
loop
mov
add
add
mov
add
out
stc
mov
add
mov
add
in
cmc
mov
add
mov
add
add
xchg
add
mov
add
add
add
add
add
jle
cld
decl
decl
ljmp
into
in
idiv
push
add
jmp
sar
ljmp
cmp
out
pushl
ljmp
push
ljmp
or
cli
call
jno
jmp
lock
call
ljmp
xor
cmc
call
sar
in
hlt
ljmp
sar
in
repz
out
js
sar
add
add
add
add
add
addb
lcall
add
addl
and
and
dec
addb
add
add
add
add
add
add
incl
add
addb
add
add
inc
add
push
add
inc
add
addb
decb
pop
addb
and
add
add
add
inc
add
sub
add
add
popl
adc
inc
test
push
test
pop
add
out
lret
test
faddl
sbb
out
inc
add
out
incl
out
das
test
icebp
add
xchg
test
or
out
mov
or
jg
inc
out
cld
add
out
cmp
add
out
add
out
daa
add
out
xor
or
inc
addl
add
out
pop
addl
add
out
sub
add
add
subl
cmp
add
lret
xor
lret
adc
add
lret
outsb
add
add
roll
ret
add
add
cmc
add
lret
cmpsb
add
add
lret
add
cld
add
lret
sbb
adc
add
adc
lods
add
add
lret
add
sbb
jecxz
stc
lret
sbb
sti
add
lret
pop
add
add
clc
in
sti
decl
mov
add
movsb
or
imul
stc
call
add
jns
or
jmp
add
add
add
add
push
add
mov
ret
repnz
jb
ret
repnz
fiadds
ljmp
add
popa
adc
add
stos
add
jmp
add
popf
rol
ljmp
add
lods
ret
sar
repnz
pushf
rol
pushl
add
rol
repnz
bound
std
pushl
push
inc
add
std
lcall
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
push
inc
add
push
inc
add
push
inc
add
add
loop
inc
add
add
mov
inc
add
add
aaa
push
inc
add
push
inc
add
add
add
add
mov
add
lret
add
out
scas
out
inc
out
faddl
add
sbb
inc
out
iret
js
out
push
add
out
push
add
out
jbe
inc
out
push
add
out
sbb
inc
out
pop
add
out
pop
add
out
pop
add
out
pop
add
in
pop
add
out
pop
add
out
pop
add
out
pop
add
in
pop
add
in
pop
incl
repnz
add
ljmp
add
in
pop
add
pop
add
in
push
add
in
pop
add
repnz
incl
in
pop
incl
out
add
add
jmp
add
pop
jmp
add
add
add
add
add
sti
jmp
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
pop
add
jmp
adc
push
xor
decb
aaa
shl
add
jmp
mov
bound
mov
outsb
pop
popf
shlb
cmp
jbe
xor
add
add
in
mov
bound
fisubs
and
outsb
sbb
into
jbe
xor
ret
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
call
call
inc
inc
call
incl
add
add
xchg
call
incl
call
call
incl
incl
call
call
incl
incl
call
call
incl
ljmp
decl
mov
decl
mov
inc
fnstenv
inc
incl
add
add
leave
add
or
adc
pop
add
in
pop
incb
cltd
repz
call
push
cmc
push
orl
pushl
inc
ljmp
inc
jmp
inc
lcall
inc
call
push
or
push
adc
inc
mov
cmp
inc
ljmp
arpl
and
lcall
jae
call
pop
add
out
push
add
add
add
add
push
add
out
push
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
ljmp
call
repnz
call
repnz
call
repnz
call
repnz
call
add
add
call
in
add
call
in
add
call
in
add
call
in
add
call
in
add
call
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
push
add
add
add
inc
add
add
add
pop
add
add
add
add
sub
add
sub
add
xchg
xchg
sbbb
ret
xchg
mov
mov
add
add
add
rorl
lods
icebp
sub
scas
out
lods
mov
xchg
loope
iret
iret
ss
dec
pop
and
sti
or
dec
aas
and
push
cwtl
nop
xchg
or
inc
jbe
mov
push
call
cmc
sbb
xchg
mov
lds
push
rol
push
pop
xchg
pop
movsl
add
mov
and
filds
add
sti
jbe
cli
roll
add
add
lcall
jge
incl
test
aas
or
lock
in
cmpl
insb
mov
jo
pop
adc
in
cmp
roll
testl
xchg
pusha
aas
mov
out
test
mov
pop
lret
dec
jne
mov
adc
mov
lock
add
add
jns
push
ficompl
push
stos
or
add
mov
add
pusha
jne
es
rclb
dec
sub
cmc
add
xor
add
cwtl
mov
subb
vpaddsw
add
out
add
or
add
sub
add
add
add
add
in
add
or
add
int3
in
add
dec
add
add
add
add
imul
add
xor
add
imul
add
lahf
repnz
imul
add
add
add
daa
push
add
jecxz
add
pop
add
add
incl
add
add
pop
sysret
or
sub
push
movlps
and
push
pop
pop
pop
sbb
mov
pop
and
repz
sub
sub
add
xor
ret
xor
cmp
pop
popa
arpl
outsl
imul
outsl
pop
outsl
jno
add
ja
jbe
pop
jnp
pop
pop
mov
popa
arpl
shrl
sar
mov
mov
icebp
mov
jge
test
test
jne
lea
add
add
add
xchg
xchg
pop
rcrl
sahf
orl
push
xchg
mov
jno
jge
jne
jns
jns
lods
jge
popa
call
inc
test
sbb
into
mov
push
rcrb
adc
inc
or
fiadds
leave
and
dec
and
sub
push
sub
xor
add
add
cmp
mov
and
lods
cmp
cmp
add
std
in
call
add
fsts
or
rcrl
push
int
add
or
pmaxub
or
add
pop
out
call
in
hlt
lock
icebp
lock
out
in
clc
jecxz
test
setle
pop
cmpsb
jl
adc
je
sti
mov
jo
add
add
stos
mov
lea
pop
dec
xor
inc
and
dec
sbb
and
push
adc
dec
xlat
jp
addr16
andl
xchg
xchg
pop
bound
xchg
push
mov
lahf
mov
mov
sbbl
scas
jns
jae
jne
outsl
mov
sub
insl
add
add
add
ja
sub
inc
ret
and
cmp
sbb
xlat
int3
rcl
fcmovnbe
aad
call
repz
fbld
in
jecxz
sbb
out
in
jmp
out
ja
icebp
repz
cmc
negl
stc
sti
push
lock
incl
cmp
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movl
incl
mov
add
add
add
add
add
add
add
add
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
cmp
jmp
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
out
sub
add
sub
add
xchg
push
sub
add
sub
add
daa
add
out
daa
add
out
daa
add
out
daa
add
in
int
ljmp
aaa
push
daa
add
out
daa
add
out
daa
add
out
daa
add
out
add
add
add
cmp
ss
cmp
call
add
add
add
add
add
add
add
add
aaa
add
add
add
aaa
inc
ss
aaa
cmp
jmp
add
add
add
add
add
add
add
cmp
add
mov
jmp
add
add
add
add
shll
jmp
add
sub
out
add
add
add
jmp
in
add
imul
add
jmp
add
jmp
repnz
jmp
in
add
jmp
in
add
call
in
add
imul
add
fsts
fldl
adc
add
in
add
add
sbb
sti
fists
adc
fists
adc
fists
adc
decl
adc
decl
subb
adc
notl
sbb
in
adc
fisttps
adc
add
add
add
push
adc
xchg
adc
adc
adc
adc
adc
addb
add
xchg
add
xchg
add
add
add
add
add
add
add
inc
add
add
add
push
add
add
add
inc
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
call
inc
inc
call
out
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
mov
scas
aam
pop
ja
xor
jno
sbb
dec
sbb
daa
scas
clc
data16
ret
call
xchg
mov
in
add
sysret
test
add
add
imul
mov
stc
insb
cmpsl
or
sbb
mov
aad
cmpsb
in
daa
mov
les
push
and
js
jg
sbb
sub
sub
subb
xor
mov
rorl
test
lods
sbb
mov
fsubrs
dec
jle
jno
sbb
and
add
or
or
lods
mov
pop
pop
lahf
aad
into
push
mov
and
sar
ret
in
lods
in
jle
decl
or
icebp
lds
xor
push
imul
in
clc
jp
in
jno
out
cmpsl
lcall
or
sbb
fs
ja
sbb
add
in
jb
add
add
je
add
rclb
pop
movsb
pop
add
sub
or
cmpsb
outsb
and
sbb
pop
sbb
mov
lahf
xchg
mov
xchg
xor
into
fistpll
dec
out
leave
aaa
dec
jecxz
cmpsb
inc
movsb
loope
aad
fadds
and
loope
test
inc
xor
xchg
cli
in
add
shrb
ss
mov
add
add
add
jbe
xor
mov
insl
jnp
fdivrl
xlat
movsl
popf
or
scas
dec
es
mov
xor
xor
sti
xor
mov
stos
and
popa
and
adc
push
repnz
xchg
roll
xor
xor
stos
xor
add
add
mov
ficompl
push
xlat
mov
ret
aas
push
dec
aad
dec
imull
sbb
cmp
pop
testl
imull
push
xchg
movsb
sub
fcompl
test
lea
cli
leave
neg
ret
jmp
adc
testb
push
negb
and
ja
fs
mov
sti
add
add
add
dec
adc
jb
hlt
jmp
add
mov
fistpl
mov
sbb
mov
dec
fsubr
out
xor
fndisi(8087
dec
lcall
movsb
cs
inc
add
add
clc
shl
clc
mov
cs
mov
data16
xchg
inc
mov
stos
push
add
add
add
dec
shll
test
jmp
jo
gs
push
jmp
jae
int
lcall
jae
lsl
cmp
popf
js
fwait
add
add
pop
inc
cmp
adc
sub
push
pusha
mov
add
in
sub
out
daa
pushf
mov
add
add
cltd
cmp
sahf
mov
mov
push
xor
insb
js
cmp
out
movsb
sahf
data16
orl
mov
adc
mov
inc
lds
cmp
dec
and
jp
aaa
cmp
add
cmp
dec
fnstcw
cmp
shlb
mov
add
pop
xor
cs
xor
add
add
mov
daa
xor
cs
jge
push
push
lahf
xchg
and
cmp
mov
out
fstl
sbb
add
lret
cmp
push
clc
cmp
stc
ret
mov
xor
xor
cmp
out
xchg
cmp
xor
cmp
xor
cmp
jmp
out
xor
add
add
jecxz
out
inc
fucomi
out
push
sarl
ja
sbb
or
xor
sbb
call
in
and
sbb
arpl
out
sbb
repz
je
mov
xor
jl
mov
je
stos
lock
dec
testl
shl
btc
imulb
ret
and
inc
mov
inc
cmc
inc
sbb
je
add
add
push
lcall
push
adc
lock
add
jmp
jmp
xor
movsb
jmp
xchg
ljmp
das
ljmp
es
push
ljmp
jecxz
enter
mov
jae
add
out
add
hlt
mov
cltd
repz
pop
repz
aad
lock
icebp
ret
lock
add
add
add
out
insb
lock
out
push
lock
cmc
lods
negl
cmc
mov
shl
jnp
test
data16
pusha
testl
push
xor
sbb
ds
out
push
cld
xor
push
xorb
or
sti
add
cmp
cmpb
or
push
add
mov
shll
cmp
add
add
add
or
sub
data16
les
pop
stos
dec
pushf
daa
add
push
sbbl
lret
mov
movsl
stos
hlt
sti
cmpsl
pusha
xchg
mov
jmp
sbb
sub
mov
dec
mov
lahf
ret
cmp
nop
mov
cmp
mov
aaa
mov
push
or
pop
push
add
add
add
incl
or
incl
xor
add
ret
push
pushf
sbb
leave
add
bound
inc
push
mov
pop
push
mov
dec
push
mov
mov
push
out
inc
push
cmp
pop
add
pop
add
pop
add
add
mov
add
xchg
pop
add
add
xchg
add
xor
out
pop
add
push
and
inc
push
mov
add
sbb
add
cmp
add
sbb
add
pop
add
out
or
add
or
add
push
add
imul
out
cmp
insb
out
add
add
add
add
mov
add
add
add
icebp
std
sarb
int3
popf
jns
cmp
or
add
int3
add
add
add
add
add
add
add
add
add
add
add
jnp
add
push
add
mov
mov
lcall
cld
lds
or
cmp
ficompl
add
mov
mov
scas
das
xchg
int
adc
add
in
xchg
call
decl
add
ret
jno
or
and
or
push
and
mov
or
decl
lahf
cmp
add
sub
addr16
or
and
add
add
add
mull
jbe
das
das
lret
cli
iret
hlt
or
in
add
mov
ljmp
or
add
stos
in
xchg
mov
add
mov
add
mov
push
jae,pn
imul
test
push
rcrl
ret
call
jo
push
lahf
outsl
jae
mov
pusha
push
add
les
popa
rcrl
imul
jb
insl
iret
inc
dec
push
mov
popa
push
jo
outsl
fs
cli
pop
data16
add
add
popa
push
dec
lcall
outsl
out
xor
pushf
jns
sbb
add
pop
lahf
push
daa
movsb
or
fnstcw
jno
sbb
add
pop
lahf
push
add
xchg
leave
je
outsb
popf
lods
mov
iret
int3
add
out
mov
pop
add
sub
pop
or
out
adc
sub
or
add
sarb
push
ds
sub
out
fsubs
sub
stc
xchg
inc
stc
pushf
fs
add
add
add
mov
xlat
loopne
xchg
add
add
add
mov
div
add
ret
pushf
xchg
xchg
imul
jg
ret
mov
fwait
mov
xchg
lea
out
add
add
add
mov
int3
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
sbb
leave
decl
repnz
ficoml
sar
pop
mov
lcall
in
add
aas
xlat
sar
fld
incl
clc
sar
add
out
sti
sar
jecxz
incl
sar
loop
pushl
sar
fnstsw
inc
leave
sar
rol
mov
loop
pushl
add
sar
mov
sar
ljmp
ljmp
add
std
push
add
std
inc
std
incl
std
insb
add
cld
sub
test
cld
insb
add
cld
outsl
add
cld
jb
xchg
decl
std
decl
inc
add
testb
testl
or
inc
add
add
add
shl
inc
add
add
inc
add
std
incl
std
call
std
call
std
add
testl
add
inc
add
hlt
hlt
inc
out
cmp
cli
inc
out
mov
dec
imul
fildll
cmp
test
cmc
iret
incl
inc
shl
cld
fiadds
stos
mov
add
add
add
pop
xchg
mov
iret
ljmp
cmp
cmc
fiadds
stos
mov
imul
jbe
adc
jbe
xlat
pop
push
std
jae
or
push
int
fbld
ss
aas
adc
add
add
sbb
add
add
ljmp
les
out
add
rolb
add
add
push
lret
cltd
pop
lret
add
add
add
add
add
add
add
les
xchg
mov
out
add
cmpsl
stos
test
scas
les
test
mov
popf
add
lds
xchg
push
fwait
add
dec
sbb
add
mov
push
sar
add
add
add
movsl
dec
call
xchg
push
and
lds
in
add
mov
inc
movsl
dec
mov
dec
xchg
push
mov
nop
push
jmp
in
mov
add
dec
add
add
in
cmpsl
jns
nop
incl
into
incl
stos
incl
add
jmp
add
add
jne
sar
andb
fs
add
addr16
and
push
decl
outsb
pusha
fs
popa
jb
jb
inc
movl
inc
jb
arpl
arpl
cmpsb
gs
decl
inc
jb
fs
bound
jb
outsl
outsb
arpl
jne
jne
outsl
js
imul
imul
enter
pop
bound
add
add
imul
jno
mov
push
jae
out
mov
cmpsl
jno
mov
arpl
loop
jno
lds
pusha
dec
push
mov
out
inc
add
add
out
sub
add
sub
add
testb
out
jecxz
push
out
pop
add
push
add
push
add
inc
add
add
add
out
push
add
push
add
dec
add
add
jo
outsb
out
test
outsl
out
jp
jae
dec
add
jge
pop
out
add
xchg
add
test
outsb
out
add
rolb
add
add
xchg
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
cmp
push
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
xchg
mov
cli
flds
cwtl
cld
inc
ds
cli
loopne
pop
mov
enter
lods
mov
mov
dec
addr16
jbe
outsl
and
ljmp
push
mov
cs
add
add
inc
xchg
jbe
sub
push
andl
cld
rcrb
cmp
jmp
sbb
inc
and
add
mov
in
add
mov
ds
lcall
lahf
leave
inc
movsb
in
add
mov
scas
dec
cmpsl
xchg
sbb
movsb
pop
scas
inc
test
mov
incl
add
add
pop
call
inc
faddl
push
pop
call
dec
inc
inc
mov
pop
call
aas
dec
dec
add
inc
dec
dec
add
call
inc
push
adc
incl
push
dec
push
xlat
inc
push
inc
incl
add
push
dec
push
leave
dec
dec
inc
xchg
incl
push
inc
xchg
std
jmp
inc
dec
inc
std
incl
inc
dec
push
std
incl
add
add
xchg
inc
dec
pop
inc
std
lcall
insb
add
out
jp
push
cmpsl
push
leave
push
out
lretw
insb
push
out
ja
push
out
iret
rolb
add
out
jmp
dec
stos
rol
stc
lds
jae
mov
xchg
outsb
push
loope
bound
stos
fs
imulb
out
or
jae
std
mov
incl
add
add
cltd
ss
pusha
add
mov
insl
or
inc
add
out
dec
xchg
data16
fs
dec
stos
je
add
mov
aad
xchg
mov
rclb
jbe
add
jnp
add
add
add
add
add
jo
add
das
add
add
das
add
mov
add
push
das
add
das
add
pop
das
add
add
add
add
add
add
xor
add
xor
add
iret
sbb
call
ret
add
pushl
add
call
sti
sar
in
sar
call
sar
fcmovnb
pushl
add
add
add
sar
ret
sar
mov
jmp
mov
incl
sar
es
or
scas
incl
repnz
ljmp
ljmp
das
ljmp
adc
lods
cli
in
lahf
call
in
xchg
dec
in
lahf
fsubr
cmpsl
mov
xchg
add
mov
push
add
add
pusha
add
pop
add
add
add
jb
dec
add
add
add
add
js
xor
xor
repz
ja
lret
cld
and
movsb
cld
pop
add
add
add
cld
jae
pop
std
jae
movl
inc
add
inc
add
testb
mov
decl
inc
add
inc
add
fiadds
lahf
fiadds
out
xchg
es
add
add
add
in
inc
out
sbb
les
inc
out
daa
push
inc
out
stos
push
inc
out
sub
add
pop
add
pop
add
insb
add
add
mov
outsb
out
ja
jb
addb
out
mov
insb
out
mov
add
out
sub
inc
out
in
add
sub
add
mov
test
jl
filds
add
insb
xor
fldl
add
add
cmpsb
pop
ds
ja
in
gs
shll
cs
mov
add
pusha
cmpl
addl
dec
adc
pop
sub
daa
xor
sbb
out
add
mov
je
pop
gs
mov
out
add
dec
dec
push
test
jnp
je
jnp
xchg
imul
out
add
rolb
add
add
and
clc
jmp
xchg
dec
jmp
loopne
add
add
sbbl
xchg
push
xchg
addr16
je
imul
xor
outsl
pop
scas
push
insb
add
xlat
scas
enter
mov
inc
lcall
jmp
sbb
sarb
ss
stos
pop
mov
decl
mov
add
les
movsl
ss
add
push
mov
mov
dec
movsb
pushf
mov
jmp
out
negb
out
out
jmp
jmp
std
mov
fidivrl
jmp
add
mov
aaa
add
and
sub
and
push
sbb
ds
cmp
cmp
mov
lahf
mov
pushf
mov
add
add
add
jmp
inc
and
dec
sub
cmp
sahf
pushf
mov
mov
adc
and
pop
aas
adc
add
mov
imul
add
mov
std
sti
inc
pop
sbb
xchg
out
out
ja
test
jl
decb
mov
icebp
add
add
add
lods
pop
out
xchg
cmp
mov
cmp
movsl
fcompl
sti
dec
call
std
inc
cmpsl
gs
and
es
stos
pop
fildl
ljmp
sbb
push
mov
add
ret
push
mov
loope
mov
inc
mov
adc
and
lahf
mov
mov
and
add
nop
mov
push
addb
mov
add
add
add
add
add
add
repz
adc
ficoms
or
mov
sbb
add
loope
jmp
jmp
or
test
lock
out
loop
in
cli
cwtl
test
testl
cwtl
call
ljmp
jl
fisubrl
mov
rcr
pop
incb
add
add
rep
or
in
cmpsb
rcrb
ficompl
add
sub
and
ret
aas
xor
test
and
mov
adc
pop
dec
sbb
jge
push
in
xor
pushf
leave
cs
shll
shrb
sub
xlat
and
addr16
add
lds
clc
add
lea
dec
mov
popf
dec
stos
add
add
add
dec
mov
ss
jmp
lods
cmp
sub
arpl
lods
movsl
cmp
not
loope
loopne
cmc
sbb
add
inc
dec
inc
add
sub
inc
pop
inc
pop
and
bnd
jnp
popa
arpl
addr16
jmp
mov
cmpsb
push
jns
mov
stos
mov
jae
mov
lock
add
add
mov
mov
imul
mov
stos
ffreep
fildl
add
push
jp
jg
jle
jp
ja
pusha
mov
popa
fs
pop
ret
cmp
mov
inc
push
out
rorl
fs
call
fstpt
pop
jbe
mov
pusha
aas
flds
add
add
imul
jb
sub
scas
orb
pop
add
out
push
clc
jle
and
lods
push
adc
scas
pop
repnz
lahf
call
enter
lds
mov
mov
cmp
je
sub
cmpsl
jo
jnp
fnsave
mov
push
out
lds
stc
repnz
idiv
sahf
test
mov
lods
call
add
out
add
es
sub
sub
sub
inc
cwtl
add
sbb
mov
repz
and
fidivl
out
add
fmul
ficoml
jmp
mov
fwait
cld
add
add
add
add
jmp
out
jmp
jmp
out
jmp
cli
vpsubw
add
add
add
incl
or
xchg
jno
and
push
mov
lea
sar
pop
ljmp
inc
xor
stc
pop
xor
mov
sub
stos
push
loope
mov
sbb
inc
sub
pop
or
call
xor
xor
inc
iret
xor
shll
add
add
add
pop
repnz
lods
subb
mov
lret
inc
scas
push
add
push
lods
dec
add
pop
push
pop
call
test
jmp
mov
cmpsb
aam
aad
vcmppd
ret
mov
into
fldcw
add
dec
pop
or
dec
fimull
dec
les
push
out
pop
dec
add
add
add
mov
mov
pop
stos
mov
mov
test
call
mov
lahf
mov
cmpsl
cwtl
mov
mov
jmp
out
into
adc
add
or
in
adc
add
out
addr16
mov
movsl
mov
jmp
nop
imul
arpl
add
pop
mov
add
int3
mov
pop
ffreep
inc
inc
aam
je
loope
lcall
nop
dec
mov
push
cwtl
pop
mov
out
icebp
aam
sbb
loopne
adc
sub
daa
push
sbb
add
sbbb
mov
pop
mov
add
add
mov
cmpsl
add
out
sti
call
shl
add
add
add
in
add
add
xor
sbb
add
add
jns
jbe
jle
outsb
data16
push
pop
ja
cmpl
js
sbbb
jl
bound
jge
push
gs
dec
push
jne
fs
pusha
cwtl
push
sahf
inc
xchg
pop
outsl
dec
jg
mov
add
add
inc
and
sub
sbb
add
add
add
add
fdivrl
add
loop
out
notb
sbb
push
cld
adc
in
add
cld
int
rcl
aad
jmp
loopne
in
repz
cld
add
filds
or
in
add
pusha
ds
xchg
insw
ja
sub
add
mov
jns
insb
outsb
data16
jg
bound
arpl
jmp
fstps
add
add
add
jmp
mov
mov
mov
add
ja
jns
imul
jne
push
sbb
adc
pop
add
add
mov
decl
out
out
cli
loope
shr
out
scas
bnd
push
fs
mov
fisttpl
popa
mov
add
add
or
lret
xchg
jmp
add
das
fxch
fcoml
rol
out
mov
add
out
xchg
ja
inc
mov
add
sahf
jl
arpl
add
out
ret
cmp
bound
add
out
or
adc
out
jae
sbb
aaa
loopne
mov
cmp
sub
hlt
int3
cmp
sbb
add
orb
add
add
add
popf
cmp
gs
mov
inc
aad
pop
add
out
test
nop
pop
xor
xchg
gs
mov
mov
fistps
add
out
mov
xchg
add
mov
sbb
dec
push
dec
dec
xor
arpl
dec
mov
cmp
sbb
insl
xorb
sub
cmp
add
add
add
out
add
pop
cmp
xor
push
pop
dec
pop
sti
adc
loope
cwtl
inc
pushf
and
add
sub
movsl
and
sbb
sbb
push
out
add
lcall
push
movsb
add
pop
push
bound
fadds
cmp
sub
and
add
add
add
cmp
push
in
add
dec
add
cmp
xlat
jmp
std
push
stc
jmp
sbb
or
or
sbb
mov
dec
pop
mov
jb
push
cmpsl
js
dec
scas
andb
jnp
inc
mov
adc
cwtl
arpl
dec
lock
sbb
jmp
cwtl
cli
adc
cmpsl
add
add
add
add
cmp
or
add
adc
push
push
pop
xor
dec
add
or
or
sbb
or
or
add
add
fucomi
in
hlt
imul
cmc
mov
add
incl
sbb
sbb
or
pop
stc
cld
add
xlat
push
push
or
pop
mov
mov
mov
add
add
mov
mov
lea
cmpsb
cmp
xchg
pop
movsl
inc
ret
push
mov
pop
movsb
push
dec
mov
andb
lahf
jg
mov
nop
fldt
imul
xchg
push
out
pusha
lods
dec
out
stos
adc
adc
jo
out
inc
mov
jnp
push
xchg
insb
xorb
jnp
add
out
das
hlt
push
add
add
add
dec
aam
out
dec
aad
mov
mov
cmp
loop
xor
shlb
pop
into
aam
dec
out
ljmp
push
pop
xchg
jle
ja
outsl
xor
jns
add
add
add
mov
add
adc
in
sbb
mov
cmp
and
adc
fildl
push
xlat
add
add
add
sub
das
xor
shll
xchg
add
push
repnz
add
add
adc
inc
push
or
jmp
das
ds
in
and
add
rcrl
sbb
ja,pn
push
add
add
xor
adc
roll
add
cmp
dec
cmp
add
adc
pop
jmp
add
add
add
ret
ret
jmp
and
aam
aaa
mov
sbb
and
in
dec
rcr
xor
in
xor
into
xlat
add
add
jmp
add
loop
pop
mov
cli
rcr
sti
fucomp
jmp
movsl
loop
idivl
les
add
popa
jo
std
jnp
popa
xchg
add
add
mov
add
add
mov
mov
xchg
mov
sub
mov
mov
mov
mov
cmpsl
insb
mov
lcall
add
push
xor
and
and
adc
add
test
lea
mov
jl
stos
cmpsl
scas
mov
scas
scas
jg
mov
mov
hlt
popa
lods
lahf
mov
add
add
add
sahf
mov
mov
xchg
pushf
mov
dec
inc
push
xor
bound
pop
add
inc
pushf
nop
insb
outsb
xchg
andb
xchg
arpl
xchg
xchg
mov
jle
mov
jo
test
mov
mov
fwait
add
out
mov
pop
test
xchg
pop
push
shll
add
mov
add
add
xchg
mov
mov
gs
add
cmp
and
je
jb
adc
sbb
push
jecxz
adc
add
push
inc
push
inc
inc
inc
popa
or
add
ss
xor
xor
and
aas
mov
into
ds
scas
ds
jb
xor
xor
push
add
add
add
add
adc
push
enter
cld
add
add
adc
repnz
sbb
push
lcall
mov
jne
pusha
jns
popa
dec
xor
push
ja
aas
xor
sbb
xor
jno
and
dec
add
xor
and
cld
dec
pop
xor
gs
inc
push
lods
scas
ds
cwtl
scas
dec
add
add
add
test
cmp
push
xchg
mov
mov
gs
xchg
insl
push
xchg
mov
subl
sbbb
xchg
test
aad
add
in
fdivr
adc
out
mov
jecxz
out
and
hlt
loopne
lock
mov
mov
xchg
fcomp
mov
add
add
jns
fmul
jg
shr
fidivrl
fldt
fdivrl
jns
dec
scas
cmp
cmp
aaa
cmp
movsb
jnp
and
sti
sub
jo
aaa
sub
push
pop
cmp
cmp
add
sbb
sub
sbb
pop
pop
push
cs
popa
cs
fisttpll
add
add
xlat
sub
add
add
add
add
imul
call
xor
dec
aas
insl
or
add
popa
sahf
andb
mov
add
out
in
adc
cmp
add
cmp
call
jb
cs
jns
out
xchg
aad
nop
mov
cld
test
add
out
icebp
pop
or
fdivrl
and
pop
jo
in
inc
out
jge
mov
add
add
sub
jo
xchg
out
add
icebp
add
and
sub
or
adc
push
fucomp
stc
jnp
pushaw
movsl
push
push
push
inc
inc
xor
sbb
cs
push
adc
add
add
pop
mov
mov
jns
pop
stos
pop
stos
inc
add
add
xorb
out
xchg
nop
movsb
mov
add
jp
add
add
fstpt
sbb
sbb
add
add
out
call
xor
or
adc
out
add
ret
fs
lods
ds
sahf
scas
pop
add
xchg
push
inc
jmp
imul
xorb
push
ljmp
xor
divb
add
jp
sahf
cmpsb
dec
xchg
test
add
add
in
add
xchg
movsl
mov
mov
mov
xlat
shlb
pushf
negl
cwtl
cltd
mov
outsb
cltd
test
mov
enter
add
mul
call
adc
jp
add
mov
pushf
xchg
sahf
nop
mov
dec
gs
push
pop
outsb
fs
bound
sub
jnp
icebp
ss
add
loop
cmp
and
das
xor
fsubp
cld
mov
in
scas
fdivrp
scas
xchg
add
int
fs
adcl
dec
rcrb
dec
sbb
dec
add
dec
inc
adc
dec
inc
push
or
xchg
sbb
add
cmp
sbb
into
lret
imul
cmp
aad
sbb
adcb
pusha
push
mov
lock
out
aad
lods
scas
out
cltd
fldenv
cmp
sbb
cmp
inc
add
adc
sub
in
sub
aam
daa
and
out
mov
int3
mov
loop
sub
lds
popa
out
and
adc
sub
loope
and
mov
jl
add
das
or
or
cmpsl
push
jmp
add
out
add
psubusw
adc
dec
push
or
mov
add
adc
adc
jne
add
and
push
sarl
add
inc
and
add
dec
out
sbb
cmp
aas
loopne
fisubl
jnp
dec
and
cs
push
push
aas
pop
ljmp
push
xor
je
bound
daa
lock
add
add
mov
add
leave
push
sub
add
mov
jmp
icebp
or
xchg
inc
sahf
mov
popa
out
jnp
int3
mov
push
cmc
decb
cli
loope
push
fisubrs
and
add
test
insl
inc
test
in
add
adcl
add
pop
es
aaa
icebp
add
cmp
inc
dec
out
add
add
add
adc
sub
add
xchg
mov
stc
scas
lahf
sarl
dec
lds
iret
int
add
xor
add
xlat
lock
jmp
or
leave
mov
mov
jg
repnz
jp
mov
mov
shl
xchg
pop
add
add
jb
roll
xchg
incl
add
add
lret
cmc
cmp
ljmp
push
dec
sbb
lcall
imul
xor
loopne
jb
in
jbe
xor
cmp
and
xor
add
insb
out
sub
jl
mov
out
or
jecxz
add
and
popf
mov
or
mov
dec
inc
xchg
cmpsl
dec
push
lret
sbb
lret
jp
add
add
add
shlb
mov
xchg
insb
rolb
cmp
jp
pusha
push
jle
mov
add
xor
mov
xorl
pop
push
sub
add
out
fs
decl
mov
mov
scas
shll
mov
xorl
add
lahf
add
jno
mov
jg
jge
cwtl
imul
push
mov
outsl
cmpsl
iret
fs
add
out
add
add
add
sub
out
add
xor
add
xor
add
cmp
push
push
out
add
out
add
out
add
add
jmp
add
add
add
add
incb
repz
repz
or
jae
or
shrl
stc
flds
add
shrb
mov
add
sub
insl
imul
in
add
test
cmp
dec
mov
inc
dec
lods
scas
inc
push
cwtl
mov
dec
pop
shlb
data16
pop
outsb
xchg
pop
jb
jp
jbe
jle
push
mov
add
add
add
aaa
aaa
and
sbb
jmp
in
add
add
sbb
fidivl
je
push
js
pop
jnp
mov
and
mov
ds
movl
inc
pop
cs
dec
or
dec
notl
push
jecxz
push
push
repz
repz
jge
pop
pop
pop
push
pusha
popa
xor
pop
push
insl
dec
arpl
pop
add
add
add
add
sbb
jb
add
dec
add
jae
push
add
add
add
add
add
out
and
inc
out
and
out
push
add
out
inc
add
out
sub
add
out
cli
add
or
out
sub
dec
out
ss
out
std
add
jmp
popa
out
add
gs
flds
add
lcall
add
add
add
movb
out
les
push
out
rolb
outsb
out
lds
outsl
out
scas
add
lods
add
mov
jae
flds
add
mov
add
out
lods
add
out
xlat
add
out
mov
jns
push
push
out
add
dec
add
inc
add
out
add
cmp
sub
out
add
add
lcall
cmp
and
xor
add
add
sbb
add
dec
lods
and
add
add
push
sahf
push
push
dec
cmpsl
dec
mov
push
xchg
cmp
add
add
popa
test
ja
add
jge
add
mov
add
add
add
add
int3
add
add
add
add
in
add
xor
inc
add
out
add
out
add
push
sub
add
add
inc
add
inc
add
cmp
dec
cmp
pop
push
sub
push
outsl
or
add
cmp
gs
mov
pop
add
pushf
dec
push
int3
shlb
lahf
dec
push
fcmovne
je
jmp
adc
arpl
popf
in
popa
add
in
push
add
in
push
add
in
add
add
add
add
add
add
add
xlat
add
add
add
add
add
add
or
push
je
push
mov
adc
movl
add
jnp
add
push
lea
addr16
test
or
adc
add
jae
push
push
sbb
add
cmp
lcall
fistl
or
add
add
aaa
inc
add
or
shr
mov
pop
xor
add
out
lods
jns
aas
test
dec
cld
ljmp
and
fidivrl
mov
sub
rcll
or
sbb
adc
inc
clc
push
loop
add
loop
shrl
add
sub
outsb
int3
mov
xchg
pushf
incb
add
add
dec
jb
fdivrs
stos
push
push
xor
cli
out
ds
jne
xchg
mov
cwtl
jge
call
sub
fs
jnp
divl
jbe
arpl
aas
popa
adc
xor
push
jmp
lcall
out
je
jmp
jmp
enter
out
lods
fnstenv
shrb
adc
add
add
add
add
add
adc
call
add
jne
punpcklwd
adc
add
mov
ret
das
stc
call
add
inc
or
repnz
gs
mov
ljmp
in
jne
mov
inc
and
adc
add
jno
sahf
ret
in
dec
imul
add
add
add
add
outsl
test
jmp
jecxz
shl
push
add
stc
out
call
mov
jne
dec
test
jmp
push
add
out
insl
jno
jmp
mov
call
out
add
inc
jle
push
imul
loop
add
jno
rclb
jnp
pop
push
call
add
add
add
lods
dec
xchg
add
test
andl
decl
and
inc
or
xchg
add
dec
xchg
add
push
jecxz
sbb
or
add
aad
inc
and
cld
push
push
push
add
inc
imul
je
or
push
add
decl
add
add
add
sbb
cli
pusha
ds
ljmp
add
add
stc
pop
inc
add
flds
and
inc
mov
leave
fldcw
add
fnstenv
or
scas
jmp
fadds
lea
sbb
arpl
flds
adc
out
adc
push
mov
add
add
sub
ja
adc
push
lea
mov
rclb
cltd
clc
xchg
sub
mov
jl
mov
aam
fs
icebp
jg
insl
movsl
call
rcrb
inc
lret
outsl
cli
jns
pop
add
fsubr
fs
or
insb
fnstcw
fucomp
inc
cmc
popa
push
or
popa
add
jl
outsl
add
add
add
mov
lds
or
cmp
std
sbb
fldt
fld1
add
imull
add
fimull
jge
popl
call
mov
cwtl
jmp
mov
out
addl
insb
push
push
and
jo
add
in
movsl
push
in
add
scas
jno
stc
add
add
add
and
repnz
cltd
cmp
sbbl
add
and
out
call
into
gs
leave
or
insb
ja
add
leave
or
insl
cmp
jmp
in
cmc
adcl
out
shll
sbb
inc
add
push
fisttpll
sahf
inc
and
mov
push
inc
add
add
clc
cld
decl
mov
incl
fidivs
xchg
andb
xlat
add
push
pop
inc
adc
enter
add
inc
rolb
call
add
add
and
dec
add
xchg
mov
mov
out
sub
inc
jno
add
outsb
repz
add
add
cmp
push
mov
pop
cmp
outsb
cmp
jne
dec
mov
sahf
push
adc
jmp
incl
mov
or
fiaddl
xorb
lcall
in
ljmp
lea
mov
add
imul
mov
in
lds
inc
xchg
out
add
out
xor
lret
out
flds
data16
hlt
mov
add
add
scas
mov
in
push
add
xchg
add
in
dec
lods
int3
addl
hlt
pusha
mov
jmp
dec
jne
mov
in
sbb
adcb
add
add
jecxz
add
jl
jo
sub
icebp
ret
fmul
scas
shl
pushf
js
dec
mov
adc
add
add
gs
fcmovne
ret
in
pop
add
rol
cmp
dec
sbb
cli
hlt
sbb
add
pushl
repnz
pop
stc
shl
mov
sbb
stc
cmp
arpl
jno
inc
pop
stos
cmp
push
bound
inc
stc
mov
push
adc
sbb
jecxz
loope
test
inc
or
adc
cli
sub
add
add
cmp
fisttps
in
jae
push
cmp
je
cmp
decb
out
lret
mov
insl
or
xchg
in
in
sub
inc
cmc
jbe
jae
xchg
je
mov
pop
pop
fidivrl
ljmp
adc
pushf
lcall
xor
in
push
push
mov
fidivs
add
add
add
std
test
cmp
cmpl
adc
test
add
repz
popa
shlb
and
or
xchg
aam
push
pop
add
jne
div
pushl
or
popf
cwtl
jecxz
mov
idivl
repnz
xor
mov
lcall
mul
je
cmpsb
push
or
add
add
inc
mul
push
daa
pop
mov
mov
add
lds
jmp
mov
es
mov
mov
call
gs
jmp
jl
add
xor
adc
pop
lock
fiaddl
inc
pop
lods
in
push
jne
xor
ja
je
lcall
mov
push
stc
loopne
add
add
sbb
cmp
mov
jmp
aad
pop
dec
sbb
and
dec
mov
cmp
cli
insb
incl
andl
inc
and
imul
lock
inc
bound
mov
pop
addb
bound
xor
outsl
clc
inc
jmp
clc
cmp
dec
add
add
add
push
push
dec
sti
data16
add
jecxz
data16
lods
push
push
push
and
pusha
das
cmp
hlt
adc
ret
das
insl
pop
bound
cmp
adc
ret
pop
jmp
sbb
mov
xchg
jmp
or
fmuls
push
divl
xor
push
pop
mov
das
call
add
add
add
fnsave
push
cld
ds
fsub
in
in
add
and
jmp
call
in
add
pop
cli
pop
and
pusha
push
out
loope
xchg
mov
xor
in
xorl
aas
jo
mov
dec
inc
xchg
inc
sbb
inc
sti
mov
test
sub
je
insl
enter
call
add
fs
mov
jmp
xor
enter
inc
add
pop
dec
jmp
in
xchg
mov
je
mov
call
dec
lds
pop
xor
call
out
insl
les
pop
push
dec
iret
ficoms
lret
ror
mov
mov
out
jmp
sbb
cli
notb
add
add
add
loope
sarl
ss
push
or
movsb
cmp
rol
subb
add
pop
push
and
sub
repnz
out
ljmp
mov
sub
push
ret
dec
dec
loope
loope
inc
adc
sub
jg
or
xchg
imul
jmp
fidivrs
or
add
add
xor
divb
sbb
std
faddl
or
into
mov
hlt
fdivr
hlt
jb
fstpt
hlt
adc
mov
scas
mov
clc
in
repnz
jmp
push
mov
jbe
call
das
jnp
pushl
cwtl
fstpt
fldl
sbb
add
add
repz
inc
add
cmpsb
repnz
out
add
fisubs
adc
imul
call
jmp
jbe
pusha
test
fildll
add
bound
fisttpl
ja
inc
je
mov
adc
pushw
icebp
je
lea
enter
mov
bswap
dec
sbb
cwtl
jb
add
xchg
sub
cld
xor
shlb
insb
add
mov
outsb
add
mov
repnz
cmp
mov
in
inc
xlat
sbb
mov
stos
sub
mov
xor
mov
sbb
mov
shr
inc
xchg
repnz
in
xor
aam
inc
push
mov
shrl
and
add
xor
mov
xor
inc
icebp
add
inc
mov
push
jmp
add
cli
je
add
or
jg
cmp
add
sub
mov
pop
hlt
ljmp
and
imul
gs
dec
int
add
xchg
inc
sbb
xor
out
clc
mov
testb
dec
inc
add
add
add
cli
les
test
les
jnp
out
out
out
push
add
mov
rep
jmp
jg
inc
sub
lea
inc
out
push
rclb
adc
lods
mov
and
loope,pn
push
mov
and
dec
fisubrl
loope
push
mov
daa
leave
repnz
les
xchg
mov
inc
jmp
add
fcmovbe
cli
inc
out
test
or
inc
jmp
fiaddl
std
flds
jmp
mov
fnop
stos
adc
xchg
out
leave
test
add
in
mov
test
dec
mov
out
add
ljmp
cli
int3
cli
inc
out
dec
xlat
cltd
mov
sub
xlat
lcall
stos
add
fmull
fists
sub
add
add
sahf
icebp
in
int
jmp
scas
std
inc
cmp
add
xchg
mov
mov
mov
scas
out
xchg
xlat
mov
into
sbb
pop
lahf
loop
cmp
ret
in
mov
std
xor
xchg
xlat
cli
mov
add
ss
xor
lahf
and
pop
pop
and
add
add
add
cwtl
incb
pop
add
call
mov
or
int3
xor
and
std
call
sub
jmp
mov
dec
inc
clc
call
push
add
add
inc
adc
mov
into
dec
push
add
inc
cmpsl
mov
inc
xchg
or
dec
fucom
dec
xlat
cld
movb
dec
inc
xchg
xor
push
sbb
mov
add
add
adc
cmp
push
push
sbb
inc
add
adc
aaa
adc
out
hlt
and
push
out
add
lret
repnz
mov
mov
scas
out
inc
incb
inc
out
xor
mov
loopne
scas
out
inc
fdivrp
inc
inc
out
popaw
adc
pop
hlt
out
lea
lods
scas
aas
cld
insl
and
std
mov
mov
jmpw
add
add
add
lret
push
icebp
mov
mov
and
inc
lea
daa
push
cmp
xchg
add
stos
aas
or
push
adc
mov
xorb
pop
decb
cmpsb
imul
shrb
mov
cmp
mov
pop
push
fstps
jmp
lock
dec
imul
inc
cli
test
sbb
add
add
test
insl
sub
dec
push
repz
add
test
mov
mov
xchg
in
adc
int
or
dec
stc
jge
push
cmc
xchg
or
adcb
push
add
rolb
sar
mov
add
mov
jmp
dec
clc
sub
cmp
shlb
cmpb
push
sub
flds
add
add
dec
sbb
adc
lods
popf
shlb
aad
jne
outsb
jmp
ljmp
int3
inc
loope
pop
mov
sbb
cli
adcb
dec
or
pop
ja
outsb
rcr
fs
mov
fadd
rcr
push
push
aas
fwait
in
imull
add
add
add
xchg
rcll
add
add
flds
mov
lock
jecxz
push
xlat
cld
add
jnp
add
test
cmp
jl
or
xchg
jmp
std
imul
decl
std
push
jp
fmuls
popl
std
push
call
sub
add
cwtl
lods
or
add
scas
xor
mov
loope
out
mov
add
jo
add
out
cmp
cmp
inc
lcall
sub
sar
and
cltd
mov
push
pop
lret
and
loopne
cltd
push
add
fnstcw
push
push
adc
mov
add
add
pop
add
add
add
push
mov
fnstcw
stos
fiaddl
add
pop
push
fidivrl
or
add
add
subl
mov
out
jge
stos
push
shr
xor
pop
add
add
shll
test
out
add
add
add
add
xor
xorb
jmp
add
add
add
out
jge
add
add
xor
inc
push
out
add
add
aam
out
add
add
test
jmp
fldt
std
shl
xchg
ljmp
mov
punpcklbw
int
call
sahf
into
out
mov
add
jmp
in
add
jmp
stc
aaa
lea
add
add
add
xor
fidivrs
xor
push
add
bound
idivb
jmp
in
add
push
add
fs
call
sub
add
in
jnp
jns
add
mov
in
add
addr16
dec
mov
dec
xchg
call
clc
add
xchg
lea
add
add
add
adc
add
imull
add
mov
or
inc
add
ret
aaa
faddl
pop
add
mov
jae
std
les
cmc
mov
add
add
jle
ljmp
test
dec
out
add
adc
xlat
push
or
test
test
out
outsl
adc
add
add
add
out
xlat
xor
pop
xchg
add
xlat
xor
addl
aas
out
les
addb
add
rcrb
out
adc
cmp
adc
xor
inc
jge
gs
mov
test
fldl
add
add
mov
xlat
add
jbe
ret
ljmp
lea
inc
push
shr
flds
add
push
out
cmp
gs
flds
push
inc
add
pop
out
lret
repz
cld
inc
jmp
adc
popl
testl
sub
add
addb
outsb
out
jmp
ss
outsb
add
add
cmp
lods
into
cmp
cmp
and
or
out
add
loop
cmc
hlt
add
add
add
jp
clc
pop
mov
lret
gs
or
add
mov
fildll
test
adc
add
xor
fs
adc
in
add
test
push
and
and
outsb
aas
and
movsl
cmc
lret
call
fldl
jmp
push
dec
movsb
in
add
push
sub
in
in
ja
add
add
add
add
add
in
fdivrs
in
add
ret
jnp
fildll
push
jecxz
std
leave
and
cmp
pminub
adc
pop
inc
add
popa
lds
add
sub
pop
test
mov
dec
inc
and
inc
xchg
roll
mov
dec
sbb
or
lock
and
add
add
xchg
adc
push
jo
call
pop
rclb
xor
cld
mov
push
loope
pushl
push
push
mov
push
adc
add
mov
negb
add
clc
xor
sub
add
adc
nop
ret
incl
push
call
out
pop
inc
and
popa
test
out
xlat
add
and
or
add
add
add
xchg
out
call
fcmovnb
push
dec
sub
addr16
adc
push
ss
imul
or
or
add
neg
adc
xchg
inc
add
fcoml
jg
mov
ret
cmc
aas
out
push
and
add
push
add
mov
adc
add
add
test
fsubr
jl
nop
out
in
add
sbb
bound
out
lock
std
stos
mov
ss
mov
sti
imul
jmp
les
xor
jle
call
cmp
xlat
cld
aad
ljmp
adc
mov
jns
int3
sbb
les
cmp
mov
add
add
and
lret
test
in
sti
iret
or
add
clc
movb
or
inc
ljmp
dec
clc
dec
pushf
mov
lcall
push
iret
jmp
add
fcoml
shlb
push
movsb
xor
sub
adc
addb
lods
dec
jae
stc
mov
test
add
cmp
lods
mov
icebp
aas
jmp
mov
scas
cli
adc
and
add
cld
xchg
daa
aaa
push
push
repnz
add
inc
mov
movsb
cmpb
bound
lods
push
push
inc
mov
lcall
inc
mov
jge
xor
sbb
ss
pop
arpl
shlb
les
add
add
xor
or
mov
flds
xchg
pop
mov
rolb
mov
lods
sbb
push
add
fsubs
adc
cli
les
push
jg
fadds
pop
repz
lock
cmc
adc
cltd
fimull
nop
mov
leave
mov
mov
inc
and
testl
test
add
add
dec
and
jae
leave
mov
xchg
test
enter
add
add
sub
sbb
jne
xchg
std
xchg
jge
add
ficoms
jae
adc
mov
out
dec
sbb
flds
xchg
pop
sahf
bound
jge
add
js
dec
adc
jecxz
jmp
add
mov
add
lret
sub
stc
xor
fstpt
call
shr
xchg
jp
xor
js
stc
adc
clc
add
jp
cmc
pop
add
repnz
sub
out
jnp
out
dec
jecxz
repnz
mov
pop
inc
gs
jnp
nop
out
das
cmc
call
filds
add
add
inc
cmp
cmp
push
bound
lea
pop
add
jns
int
fadd
cli
repnz
stc
jbe
in
psubsb
lods
dec
adc
cmc
out
pushf
ret
daa
or
je
jnp
and
in
ja
jmp
lods
xor
sub
sbb
mov
in
subb
add
add
test
jb
stc
out
adc
pushl
fcompl
add
xadd
add
das
cmp
dec
and
inc
add
pop
xor
push
decb
xchg
push
mov
and
outsl
push
pop
add
outsb
inc
sar
push
mov
ret
xor
mov
jne
ret
ret
mov
add
add
add
adc
sub
adc
out
mov
xchg
and
and
xor
dec
loop
imul
arpl
out
xlat
mov
ljmp
daa
stos
repz
or
xlat
add
stos
mov
mov
pop
daa
and
pop
aas
and
lock
add
add
jp
ljmp
add
add
loope
pop
and
fdivrs
or
fnstcw
out
xlat
add
sub
out
push
ret
jae
fiaddl
mov
mov
mov
out
add
outsb
inc
jmp
push
sahf
ljmp
jne
or
sub
lods
sbb
add
std
add
push
jmp
push
out
add
mov
xor
cmp
add
lcall
sbb
adcl
test
cmp
sbb
add
inc
xorl
push
in
add
jle
add
lea
test
add
out
inc
jmp
add
add
pop
jmp
out
mov
push
in
pop
es
scas
mov
xor
add
lods
dec
adc
mov
inc
lock
daa
mov
call
xchg
mov
inc
add
or
cltd
or
addb
add
daa
repnz
add
daa
pusha
xor
aas
pop
sub
and
movsb
inc
and
mov
inc
and
in
movl
add
add
add
test
ljmp
cmpsl
adc
dec
cmpsl
and
nop
inc
add
fdivr
and
lds
int3
dec
and
pop
ret
inc
inc
add
sbb
inc
pop
mov
je
shlb
pop
mov
ret
push
mov
mov
clc
adc
xlat
js
and
add
push
out
dec
inc
add
fsin
incl
add
add
nop
les
or
push
cmp
dec
push
mov
sub
add
push
shll
xchg
xor
repnz
pop
push
jle
mov
jb
add
out
and
mov
mov
xor
cmp
xlat
test
cmpsl
xchg
cli
sub
sbb
sbb
ret
push
add
add
add
add
out
ds
ucomiss
jae
add
mov
push
subl
dec
idivb
adcl
adc
sbb
xchg
jecxz
or
into
sub
mov
in
sub
out
adc
inc
in
mov
ljmp
aad
inc
ljmp
add
fiaddl
cmp
ja
lods
cmp
mov
stc
push
mov
adc
scas
add
repnz
test
cmp
push
andl
sbb
cmc
mov
out
xchg
int3
scas
sbb
jmp
loopne
out
xchg
dec
inc
jmp
in
xchg
add
push
add
cmp
icebp
add
add
add
xor
lahf
xchg
and
lds
add
xor
test
xor
into
mov
pop
in
aaa
mov
push
mov
loop
je
insb
incb
sbb
xchg
cld
enter
lea
xchg
shlb
mov
mov
enter
add
mov
or
sub
aas
cmp
add
add
add
xchg
xchg
mov
pop
lea
data16
mov
incl
jecxz
movb
mov
insb
inc
sub
incb
mov
les
sub
inc
or
popf
pop
mov
pop
pop
leave
inc
or
push
pushf
jo
push
and
aaa
pop
pop
cld
push
mov
or
sbb
add
prefetch
push
add
add
add
adc
push
pushl
mov
je
jbe
jmp
shrl
cmp
test
add
ja
mov
push
sbb
xlat
mov
jmp
inc
outsl
les
mov
sar
inc
push
ljmp
or
jne
adc
add
add
add
push
add
ds
shl
xchg
lahf
stos
lock
test
or
scas
jle
push
fnstenv
fucom
cmc
test
mov
out
push
bound
xchg
or
add
push
ja
in
add
push
xlat
lock
test
imul
push
mov
mov
pop
mov
add
add
stos
add
and
arpl
scas
out
outsl
cmc
sub
rolb
mov
sbb
es
jp
xor
ds
sub
sti
shlb
call
in
das
pop
out
cmp
mov
inc
or
ljmp
sub
add
add
add
add
jmp
repnz
mov
js
call
jo
gs
cs
sub
ret
decb
lea
call
mov
notl
jmp
mov
scas
lds
inc
icebp
popf
sub
packssdw
lea
out
pop
movl
or
outsl
movl
je
push
icebp
or
add
add
add
add
test
jp
aas
mov
add
add
fcomip
roll
xor
pop
inc
rorb
push
mov
pop
sbb
push
add
je
add
jb
ret
add
jns
mov
mov
fadd
jne
xchg
out
pop
add
and
movsl
pop
jp
call
jle
call
add
add
add
mov
add
adc
pop
jae
mov
roll
cmpl
sbb
cmp
push
lea
out
lock
test
mov
je
gs
je
mov
pop
pop
leave
sub
add
gs
jmp
xor
or
xor
gs
sbb
and
or
add
add
aad
add
mov
and
hlt
push
xor
out
add
push
adc
in
jp
mov
into
adc
add
shl
sbb
pusha
inc
shl
sbb
inc
loopne
jno
mov
ds
mov
or
mov
cs
repnz
cli
xor
sub
adc
or
or
add
mov
push
push
sub
out
je
rorb
add
push
cwtl
stos
or
push
sbb
in
cmp
out
in
fisubrs
xor
daa
ds
mov
aas
out
cs
bound
sub
call
in
pop
cmpl
ss
push
pop
sub
add
psrlq
test
add
add
add
mov
mov
fcoml
push
adc
in
dec
mov
or
or
pop
testb
pop
xchg
xorb
add
fdivr
lods
add
out
add
add
imul
pushf
jb
pop
inc
adc
test
and
pop
scas
mov
mov
cmpsl
repz
xlat
mov
je
aas
add
add
add
jl
jo
push
enter
or
popa
jle
jmp
add
add
jb
or
es
push
decl
jae
aas
add
cmp
jo
cld
std
mov
jle
xchg
inc
incl
dec
addr16
push
call
mov
out
rcll
out
test
mov
je
add
add
add
or
cld
xchg
cmp
lea
pop
ret
dec
pop
inc
and
jbe
inc
push
test
jbe
xor
mov
movsb
stos
adcb
cli
out
cmp
xor
rolb
cs
adc
imul
mov
movsb
xchg
cs
cmc
in
movsl
sub
das
add
add
add
push
add
sub
icebp
jmp
loop
and
cmc
stos
fs
call
sbb
in
repnz
sub
or
testb
mov
xchg
adc
sarb
ss
popa
dec
cli
test
cli
daa
std
mov
das
jecxz
push
fprem1
xor
add
add
sbb
daa
test
xchg
imul
mov
out
sub
mov
sub
daa
jmp
hlt
add
das
add
aas
sbb
aas
out
ret
pushf
ljmp
lods
ljmp
pushf
ljmp
scas
ljmp
adc
pop
mov
scas
xchg
add
add
add
add
adc
mov
jmp
and
mov
jo
push
ja
jmp
cs
fidivl
jmp
adc
out
loop
call
add
lahf
pop
adc
mov
pop
add
sub
inc
add
out
adc
cmp
mov
or
add
add
js
jo
cmpl
jle
call
inc
jne
jl
jb
dec
jae
push
jne
pop
int
add
cmp
cmp
mov
mov
add
call
mov
cmc
out
pop
add
pop
dec
ret
ret
xor
decl
sbb
jae
ss
cmp
add
jnp
sub
add
add
add
mov
cmpsb
enter
mov
out
cltd
jnp
sahf
xor
arpl
lea
leave
out
xchg
test
out
xchg
sbb
jnp
xchg
push
lods
xchg
add
xor
dec
arpl
push
lea
test
movsb
cwtl
add
out
xchg
add
jo
mov
inc
out
adcl
add
call
add
dec
push
fcoml
sbb
pushf
iret
xchg
out
xchg
inc
pop
ss
dec
rcrl
jp
jmp
add
push
je
es
adc
inc
jl
ror
into
lsl
inc
and
addl
add
or
mov
jnp
jae
jp
push
mov
add
add
add
add
add
call
sub
add
in
add
push
mov
inc
lock
enter
jle
aam
lods
add
fs
stos
enter
pop
scas
cmp
sub
inc
sahf
inc
pushaw
cli
cmpl
call
push
scas
incb
add
add
add
test
mov
call
outsb
jge
push
dec
stos
ljmp
pop
std
mov
out
xchg
add
pop
jle
clc
push
or
decl
stc
call
jg
mov
push
push
lcall
mov
mov
xchg
push
add
test
add
add
mov
mov
pop
add
add
pushl
mulb
or
imul
xlat
aas
sbb
cld
dec
pop
dec
jmp
cltd
jnp
lcall
decl
and
lods
push
mov
cwtl
add
int3
cmpsb
adc
mov
out
cltd
add
sbb
std
add
add
add
lcall
jae
aaa
xor
push
lods
je
push
das
hlt
out
in
loopne
xorl
and
inc
add
stos
dec
inc
mov
hlt
loope
mov
shlb
clc
inc
movsb
outsl
add
xchg
lock
add
aaa
mov
inc
jmp
jp
push
mov
stos
cwtl
fwait
mov
add
add
adc
dec
aaa
mov
add
outsb
in
mov
mov
adcb
addl
leave
cli
inc
out
subl
out
cmpl
add
xor
adc
pop
jae
call
adc
flds
xchg
js
cwtl
call
add
xor
add
add
out
aam
mov
push
test
inc
shrl
jl
push
and
add
pushf
popf
jbe
mov
jne
ja
in
jge
cmc
jo
push
pop
mov
test
stc
pop
lcall
out
push
stos
pop
inc
mov
jmp
jmp
call
push
movsb
inc
leave
stos
lahf
jne
push
adc
add
add
add
lods
inc
jmp
ror
repz
xlat
and
add
lcall
or
inc
xchg
inc
or
push
repnz
xchg
daa
inc
adc
inc
xchg
inc
adc
mov
inc
push
daa
inc
sbb
mov
lea
push
mov
mov
nop
inc
add
push
push
mov
inc
shrb
add
add
add
inc
pop
sub
test
nop
push
add
xlat
pop
xor
cmp
add
test
jo
add
sbb
lock
push
daa
lock
fiaddl
lcall
inc
inc
add
lcall
and
dec
mov
aad
test
pop
lock
je
mov
add
add
add
rolb
in
inc
pop
add
incl
inc
pop
add
cmc
fisubrl
push
jbe
push
lods
cltd
inc
pop
mov
lds
out
in
jl
insl
int
push
cltd
push
inc
push
push
sub
repnz
pop
dec
ss
out
sbb
jbe
shll
sub
sub
jl
cmc
arpl
into
push
add
inc
dec
push
cmpsb
dec
add
jle
imulb
add
sbb
add
push
jb
mov
xchg
jb
add
jnp
stc
jb
ljmp
sbb
push
mov
add
sbb
insl
push
ljmp
imull
add
jbe
cwtl
cmp
out
dec
ss
bound
add
lods
jle
idiv
insb
jns
call
out
sub
lcall
push
add
add
add
mov
xchg
xor
gs
and
jmp
in
add
ljmp
add
mov
inc
jmp
add
fcomp
and
mov
orl
cltd
lahf
movsl
je
test
mov
push
lods
cmpl
add
add
add
add
es
add
add
adc
jne
test
movb
jge
sub
call
pop
decl
test
decl
cmp
jo
xorb
incb
jmp
jg
in
stos
adc
add
mov
lds
test
add
int3
cmp
push
arpl
dec
add
add
push
call
mov
add
add
mov
mov
cmp
out
mov
decl
negl
mov
add
das
or
add
out
cmp
fisubrs
cmp
loope
lods
add
adc
jae
xchg
lods
jnp
negb
je
cs
hlt
xchg
stos
mov
cmp
mov
ljmp
add
add
add
mov
ja
mul
push
fildl
add
push
testb
das
inc
or
scas
jns
out
decb
fsts
sub
test
jmp
cld
sahf
cwtl
fnstsw
ja
clc
fs
loope
and
and
inc
cltd
jbe,pn
add
push
bound
mov
and
jae
hlt
push
add
add
add
popa
jg
sub
inc
xchg
adc
loop
mov
push
jecxz
imul
xor
add
inc
or
cmp
jnp
movsb
inc
mov
in
jle
mov
inc
shr
push
xor
push
sarl
add
cmpb
xchg
pushl
cltd
mov
add
sbb
add
add
mov
fdivs
mov
in
ja
in
das
and
pushf
mov
push
cmp
dec
repnz
fstl
and
fldcw
stc
and
mov
in
jae
xor
sub
es
out
push
add
jl
xchg
and
std
jne
ret
push
xchg
inc
sub
adc
testl
add
std
add
adc
fcomps
out
pop
push
add
fisttps
std
jmp
call
inc
leave
ret
push
mov
ljmp
xchg
add
pop
clc
or
mov
jne
negb
adc
incl
loope
pop
scas
cltd
mov
inc
jno
cld
xchg
pop
push
add
add
add
pop
mov
popf
out
test
les
orl
cltd
mov
add
push
lea
gs
aas
out
adc
clc
adc
aam
push
loop
call
fsts
or
fsubrs
repnz
lea
mov
clc
cmp
pop
stos
push
mov
add
add
dec
xor
stos
popf
push
sbb
push
sahf
out
test
cmp
out
add
out
shrl
scas
out
fwait
repz
adc
sub
out
mov
lret
in
add
mov
stos
hlt
or
mov
lods
dec
test
test
mov
adc
les
sub
xor
lahf
movb
add
add
add
mov
add
jnp
out
mov
jae
fsubr
adc
in
sub
jmp
push
jns
insb
std
stc
xchg
popa
cmc
xchg
ljmp
xor
pop
adc
lahf
push
push
cmp
mov
scas
rcll
adc
addl
ret
test
aaa
in
xchg
inc
jmp
add
jmp
das
inc
sahf
insl
lods
adc
dec
or
sub
xor
aas
jmp
mov
call
push
dec
hlt
neg
sub
ret
mov
xchg
adc
jnp
jecxz
mov
lock
jl
lock
fcoms
jae
push
call
push
stc
ja
stc
cmp
testb
add
pushl
jmp
call
sbb
jle
fwait
add
je
mov
call
push
jge
je
push
jmp
jmp
add
add
movl
add
ret
inc
xchg
mov
test
push
add
add
stc
inc
gs
out
fs
push
add
add
or
ljmp
ret
add
add
pop
mov
insl
push
pushf
addb
add
jbe
mov
jb
mov
pop
lock
out
and
ficompl
inc
and
out
jne
out
sbb
inc
and
cmp
lods
iret
je
add
bound
xor
idiv
fsubs
aas
and
add
add
into
and
and
add
push
jmp
add
inc
add
mov
mov
sbb
add
nop
lods
in
xor
int
out
test
push
jb
out
out
es
nop
xchg
in
cmp
add
xchg
adc
insb
add
fwait
decb
pop
lcall
add
add
add
and
aam
ficompl
incl
jge
adc
and
fsubl
lods
in
jmp
in
mov
shll
mov
ret
pop
cwtl
mov
test
mov
pop
mov
test
out
mov
sub
test
jmp
dec
cmp
xor
mov
cltd
add
out
cmp
add
add
test
fbld
ljmp
dec
pop
rorl
and
and
scas
std
es
jno
and
add
or
add
or
and
or
mov
cld
inc
and
inc
lods
ret
test
fwait
in
je
cwtl
mov
faddl
mov
mov
call
addl
add
add
repnz
mov
push
in
dec
push
std
dec
call
mov
addl
add
push
adc
and
insb
adc
pop
std
add
mov
pop
ljmp
movsl
out
xchg
std
decl
out
test
cmp
mov
insb
mov
out
test
stos
movsl
lods
stos
add
scas
out
cmp
jge
ret
das
mov
add
add
sbb
sub
or
jbe
test
add
gs
or
mov
xor
dec
stos
jmp
push
and
clc
jae
adc
fsubr
lods
xchg
out
test
sbb
cmpsb
mov
xchg
test
les
rorb
ds
paddb
test
cmp
pop
addl
add
add
mov
and
mov
or
lods
lret
add
adc
pusha
add
sub
mov
nop
mov
add
cwtl
mov
pushf
mov
adc
add
out
add
cmc
jge
movntps
sbb
test
add
jge
adc
add
add
add
add
sub
jnp
test
fisttpll
mov
jp
sbb
fs
loop
mov
add
mov
testb
call
in
mov
and
push
push
push
or
in
add
sub
jge
out
in
test
cld
sub
stc
in
add
xchg
cmc
xchg
adc
add
add
add
ljmp
add
insb
xor
or
lock
imul
cmpsl
inc
add
lcall
inc
lret
imul
iret
js
add
out
jne
test
push
in
xchg
pop
call
into
flds
stc
sbb
data16
mov
je
js
or
inc
push
push
add
add
add
std
pop
push
scas
cmp
add
inc
or
or
push
cltd
or
cmp
inc
dec
mov
inc
or
pop
mov
andb
mov
addl
push
jl,pt
cmpsl
add
mov
or
gs
jnp
sti
subb
add
xchg
pop
test
roll
hlt
mov
insl
xchg
push
add
add
add
pop
xchg
mov
mov
inc
ljmp
cld
imul
test
add
insl
shr
loop
sub
arpl
push
push
lods
jge
out
mov
fcompl
mov
cltd
xor
rorl
push
mov
add
rorb
ljmp
and
insl
xchg
call
loopne
lret
fsubs
icebp
cmp
add
add
ljmp
cld
push
and
test
xchg
dec
add
jge
stos
mov
and
add
test
out
xchg
xchg
push
iret
sub
mov
add
sti
je
in
mov
sub
hlt
adcb
fwait
negl
adc
push
adc
add
add
add
push
call
icebp
jge
xchg
ljmp
data16
add
scas
outsb
push
jae
lahf
push
pop
cmp
mov
sbb
std
cld
lea
pop
int
sub
sub
add
call
mov
mov
jle
in
mov
add
add
add
add
xchg
lods
pop
lcall
mov
aaa
insl
inc
add
mov
insl
jmp
addr16
call
xor
push
mov
stos
add
add
call
jecxz
test
add
adc
add
cld
subl
adcb
add
xchg
mov
cmp
stc
add
add
add
insl
add
adc
push
std
mov
insb
stc
hlt
inc
push
sar
xlat
scas
aaa
in
call
xchg
les
pmaxsw
call
shlb
add
pushf
ljmp
cmpsl
or
add
xchg
je
mov
or
jne
fnstenv
jge
jne
jl
rol
insb
out
mov
stos
ret
add
add
ja
xchg
mov
push
jge
adc
fstl
iret
lds
mov
out
xchg
clc
dec
jns
sahf
out
and
test
sahf
ljmp
mov
inc
lcall
xchg
lock
inc
lret
lock
add
jnp
or
add
jnp
lahf
push
jb
add
jmp
add
add
mov
notl
out
cwtl
xor
popa
dec
sarb
cmpl
push
xor
cld
lock
cltd
adc
jno
lcall
add
nop
sti
mov
inc
jmp
sbb
sar
pop
cmc
cld
cwtl
lods
add
insb
jmp
jbe
push
popa
std
add
jmp
push
stc
out
dec
mov
bound
add
add
gs
add
jno
add
in
cmpl
xor
pop
inc
add
jnp
inc
movsl
xchg
call
dec
pushf
mov
stos
incl
jb
sbb
jno
add
ljmp
push
xchg
cld
subb
add
ret
mov
jb
jns
popa
adc
je
add
mov
add
add
push
mov
add
fsubr
pop
mov
add
add
add
out
xor
add
xchg
call
or
addl
add
adcb
add
xchg
push
push
pop
push
out
dec
add
mov
popa
mov
aam
iret
imulb
adcb
decl
in
add
xchg
incl
add
add
xchg
mov
mov
inc
lock
jb
int3
push
jl
enter
out
scas
fiadds
xchg
xchg
add
out
xchg
add
ss
cwtl
gs
xchg
push
push
mov
push
push
add
out
inc
mov
cmp
scas
and
jmp
pop
inc
sub
lahf
mov
lret
mov
add
add
jne
lahf
mov
jp
ret
js
in
lds
testb
sub
lret
fucom
sub
jns
jle
adc
gs
subb
leave
push
ja
xchg
push
adc
pushf
jp
call
xorb
mov
xchg
imull
xor
sbb
out
cltd
and
adc
add
add
into
lret
add
mov
inc
lret
ret
or
inc
outsl
rorb
aas
jmp
mov
cmp
lds
adc
jp
fcomps
push
js
xchg
fs
aad
cmp
ljmp
dec
js
icebp
hlt
inc
in
das
lods
or
jb
pushf
cmp
pop
outsl
mov
lods
pop
js
adc
adc
inc
cmp
add
push
sbb
es
inc
sbb
push
add
fdivl
aas
jmp
aad
hlt
stos
in
mov
fmul
call
and
hlt
aad
inc
jmp
jae
sbb
imul
fldt
mov
adc
hlt
sub
jge
add
rorb
or
push
push
add
add
add
cld
pop
mov
lcall
clc
and
or
and
adc
pushf
pop
add
jnp
push
lcall
jb
inc
pop
and
add
clc
add
adc
out
call
rclb
pop
lods
lods
sarb
call
add
cmc
add
cmp
cli
xchg
mov
or
add
add
add
sub
xor
sarl
add
xchg
nop
add
adc
fs
mov
pop
mov
mov
xchg
jg
mov
loope
test
xlat
mov
popa
sbb
lock
add
mov
add
mov
adc
hlt
sub
mov
add
add
and
push
mov
mov
xor
fisttpl
inc
out
add
insb
mov
sbb
cmp
jmp
mov
adc
sbb
sbb
gs
test
icebp
icebp
lea
sti
shlb
add
add
mov
xor
out
and
loope
mov
lds
add
add
jmp
test
outsb
xchg
fs
add
lret
or
fildl
mull
xchg
fwait
cmp
add
cmc
jg
add
add
and
fwait
jmp
lcall
clc
push
cmpl
xchg
jmp
repnz
cld
jno
aas
jmp
fs
pusha
add
add
add
fcoml
push
xchg
fimull
add
inc
mov
xor
je
nop
mov
adc
leave
pop
xchg
fcomip
mov
mov
fbld
ljmp
fisttpll
test
or
add
std
mov
mov
jae
sbb
and
outsl
mov
js
ret
add
add
xlat
scas
add
loopne
adc
xchg
inc
add
bound
jae
mov
add
pop
mov
inc
or
fdivrl
addb
add
out
sahf
sub
pop
or
aaa
sub
je
cmovae
push
ss
push
jmp
jns
inc
int3
addr16
xchg
leave
mov
hlt
sub
add
add
insl
dec
xchg
jnp
daa
and
and
and
das
add
add
and
jne
jge
jmp
xchg
cmpl
cwtl
testl
xchg
add
jb
add
out
sbb
and
and
and
out
je
in
xchg
xchg
out
pop
aas
and
adc
xchg
add
add
add
add
icebp
rolb
out
sbb
and
add
imulb
out
out
push
xchg
cwtl
fiaddl
xorl
cltd
lods
dec
test
shlb
add
add
fnstsw
add
add
lds
xchg
mov
hlt
je
or
add
loope
in
add
les
sarl
push
xorl
add
push
flds
pusha
add
jl
fdiv
orb
xchg
add
int
call
mov
add
push
test
jmp
stc
fmull
add
push
rorl
es
xor
or
loopne
jmp
xchg
jbe
lds
test
jmp
jp
jnp
movsl
sub
aas
jmp
add
inc
je
lds
add
add
inc
sub
fwait
repz
jb
xor
dec
fdivp
mov
mov
jbe
pop
jmp
jae
call
mov
fwait
insl
add
push
xlat
lea
ss
out
lock
or
push
adc
jb
mull
decb
inc
jmp
add
jnp
mov
add
add
lahf
or
fimull
jmp
or
jnp
inc
and
into
je
repnz
loopne
and
out
lock
je
call
out
pop
std
incl
jp
cmp
repnz
mov
push
mov
mov
jnp
out
arpl
push
push
addr16
stc
push
or
sbb
jae
sbb
xchg
xor
xchg
ja
add
add
add
test
dec
cwtl
jns
push
pop
aas
and
adc
lds
cmp
mov
lock
adc
std
xchg
bound
rcr
fwait
lds
mov
mov
test
shlb
test
add
and
xchg
jg
xchg
lea
xchg
das
mov
dec
iret
in
push
imul
idivb
add
add
jmp
add
dec
or
sbb
mov
lock
rolb
stos
lea
ss
aad
jns
enter
shl
in
jns
call
sub
cmc
call
add
cmc
mov
andb
add
lret
in
mov
add
push
adc
addb
add
add
jl
xor
call
xchg
ret
idivl
test
pop
mov
in
adc
mov
insl
xor
ds
xlat
add
jmp
push
imul
xor
ljmp
outsl
sub
mov
insl
js
adc
test
adc
add
add
inc
add
pop
mov
in
ljmp
rcl
push
add
xor
or
inc
mov
adc
add
das
xor
jp
test
or
adc
pop
loopne
mov
xchg
wbinvd
ret
test
dec
push
cli
std
jg
xor
push
les
add
add
jo
mov
pusha
fstpl
rcl
add
inc
pusha
pop
pop
inc
or
push
pop
cmp
in
xor
inc
push
mov
mov
sub
add
xor
or
ljmp
testb
add
add
add
pop
jae
jae
out
pop
fwait
mov
push
sub
push
dec
je
mov
dec
icebp
push
addl
inc
jne
insl
add
jmp
cmp
repz
clc
in
cmp
or
xor
cmp
insl
enter
jae
test
inc
xorb
add
push
imul
push
gs
sub
add
jmp
imul
dec
adc
cmp
add
and
fiaddl
or
xchg
push
xchg
inc
sub
out
sub
subb
mov
xor
jl
imul
aaa
fptan
int3
mov
jl
out
add
loop
sub
add
mov
cmc
clc
xchg
adc
movsb
sub
jns
jg
xchg
adc
in
cmp
add
add
sarb
fnstsw
fs
repz
aam
xchg
bound
add
jp
sti
insb
daa
dec
push
inc
sub
add
fmull
xchg
push
cmp
jb
ss
out
dec
cmp
ja
jb
int3
push
fwait
lds
call
in
add
jge,pt
dec
mov
out
pop
jnp
jb
pop
sub
inc
ljmp
jae
sub
jne
push
aas
pop
les
cmp
xor
loopne
sbb
pop
add
jne
out
push
push
decl
les
or
imul
inc
jecxz
push
push
cli
jae
rcrb
sub
push
incl
aam
jmp
adc
decb
add
add
add
sub
stc
push
xor
clc
data16
lret
inc
xchg
mov
orl
lock
lea
push
push
lret
add
addr16
fstpt
adc
mov
mov
jl
inc
arpl
push
movsb
fsubl
push
xor
adc
cltd
dec
shl
aad
add
outsl
pop
popf
hlt
testl
sahf
push
push
push
test
adc
jbe
cmp
pop
and
cmpsl
add
sub
imul
jnp
inc
out
in
inc
je
adc
mov
insb
add
add
add
out
add
add
fstl
add
pop
sbb
mov
int
negb
sarl
faddp
call
jl
add
add
loop
cli
ret
xor
jl
js
push
add
test
dec
das
add
je
mov
pushf
mov
jmp
cli
adc
ret
fnstcw
or
call
cmp
adc
add
mov
inc
sbb
mov
js
fisttpl
inc
jmp
lea
jae
add
add
add
mov
je
sbb
sti
sbb
in
sti
pop
pop
sbb
fadd
jbe
fs
cmp
ja
add
sar
test
cmp
mov
cmp
filds
cmp
decb
mov
add
jmp
repz
in
xor
jmp
call
ja
aaa
xor
add
add
decb
add
cld
pop
mov
ret
repnz
push
adc
cli
add
push
adc
jne
incb
jo
add
sti
adc
xor
addr16
lea
dec
push
cli
into
test
jno
xor
vcvtsi2sd
decb
ret
ret
jb
ljmp
mulb
dec
cli
cmp
jo
push
mov
add
add
add
adc
inc
ss
xchg
stos
inc
add
add
cld
out
adc
pop
and
dec
imul
into
jmp
sbb
loop
in
decl
rcll
insl
mov
mov
jae
push
in
jmp
out
out
orps
adc
ret
xlat
mov
jp
ljmp
jns,pn
adc
add
add
daa
fcmove
sub
add
or
xor
in
or
push
out
pop
push
loopne
aas
out
xchg
push
xor
xorl
pop
or
jmp
add
imul
cmp
sbb
mov
cmpsb
out
in
fdivrs
jne
out
cmc
mov
add
push
xlat
add
add
add
or
into
je
imul
lods
rol
xor
insl
adc
sbb
cmp
add
rcll
ret
stc
fsubrl
out
mov
mov
out
and
push
out
fisttpll
ljmp
inc
call
xor
push
repnz
mov
dec
test
add
mov
ljmp
arpl
push
cmp
or
fildll
jg
in
in
xchg
pusha
inc
xchg
cmp
aas
decl
inc
test
xchg
mulb
cmc
inc
and
or
in
add
in
sbb
lret
pushf
cmc
jae
fscale
sar
dec
mov
fimuls
add
add
add
ljmp
cmp
loop
aaa
jge
arpl
std
push
mov
adc
cld
inc
out
pop
roll
int3
mov
push
int3
cmp
pop
std
test
pop
decb
push
arpl
push
rol
push
mov
lcall
pop
xchg
lea
push
push
ljmp
cmp
push
add
add
add
adc
shr
push
push
loope
push
adc
push
add
scas
lea
out
mov
add
addr16
push
jnp
ja
mov
jo
adc
dec
ret
in
std
andl
out
out
test
je
inc
xlat
add
out
or
dec
test
add
add
sahf
iret
add
mov
add
add
mov
mov
stc
add
ja
jno
jmp
jmp
add
mov
add
out
andl
jno
shll
xchg
jbe
jno
jne
test
ret
cltd
test
xchg
jno
rorl
or
add
call
add
add
add
out
jge
adc
lea
movsl
call
out
icebp
subl
jno
rcll
sbb
out
jno
or
or
xor
insl
mov
jno
xchg
pushl
jp
dec
shrl
aas
jmp
in
jge
jge
outsl
incb
or
addb
out
gs
test
push
xchg
idivb
jmp
add
inc
add
add
jmp
mov
xlat
dec
cmpsb
xlat
fcoml
in
inc
gs
daa
pop
push
je
lods
dec
push
outsl
test
pop
addr16
mov
movsb
pop
call
repz
add
int3
push
std
enter
sbb
cmc
fsubrs
std
jmp
add
rolb
add
add
add
sti
push
dec
push
popa
out
xor
xchg
inc
addr16
mov
inc
xchg
xor
xorl
decb
out
jns
je
addb
dec
incb
insl
std
rcl
ret
jae
push
bnd
outsl
adc
add
jae
mov
out
inc
clc
out
mov
enter
push
add
add
add
test
mov
sbb
jge
xchg
stc
aas
out
push
cmp
sub
add
push
jno
inc
adc
aas
out
outsb
cmp
repnz
mov
jnp
sahf
dec
pop
xor
popf
add
xor
push
push
add
out
jb
push
push
add
out
fadd
repz
loopne
mull
outsb
mov
add
add
ret
repz
imul
add
lods
ja
inc
in
xchg
add
add
repz
add
call
lahf
add
dec
mov
fldl
cmp
repz
inc
jno
inc
pop
sub
test
mov
inc
xor
cmp
mov
ret
test
imul
pop
rcll
adc
add
add
icebp
add
rorl
addl
aam
xor
add
daa
cld
outsl
clc
subl
add
xor
mov
sahf
adc
imull
repz
test
jo
add
aaa
ret
fstp
sbb
cltd
mov
bound
inc
inc
in
sbb
ja
xor
add
add
lcall
jb
mov
test
sbb
mov
mov
dec
insb
mov
dec
mov
je
xor
imul
mov
out
or
mov
je
outsl
enter
push
push
xor
push
std
push
sub
inc
clc
mov
ds
leave
lds
jl
push
mov
add
out
mov
add
add
aam
sub
xlat
incl
shr
push
jp
mov
aam
push
cmp
lcall
or
cmp
jbe
in
pop
add
pop
pop
ret
add
out
push
in
push
push
jbe
out
or
inc
std
test
push
ret
cwtl
jns
inc
push
jns
mov
pop
xchg
out
add
add
add
add
push
fmuls
xor
in
call
pop
jns
mulb
xor
incb
icebp
shll
out
pop
jns
cmp
je
incb
aam
inc
out
mov
add
roll
repnz
inc
ljmp
inc
inc
mulb
add
mov
sar
roll
fildl
inc
pop
jno
cld
je
add
roll
add
add
xlat
std
cmp
pop
hlt
clc
insb
lea
dec
adc
pop
scas
add
in
and
cmpsb
pop
testl
cwtl
add
add
and
add
js
add
das
ss
add
pushf
add
push
adcl
sub
repz
int3
sbb
popa
jmp
shl
push
adc
add
add
add
insl
loop
add
pop
loopne
out
add
retw
pushl
jbe
in
imul
jmp
icebp
hlt
add
imul
imul
push
jp
push
aaa
imul
daa
imul
clc
add
jecxz
cld
cmp
pop
insb
add
add
add
add
xchg
jmp
fimull
mov
add
call
sub
pop
cltd
pop
jmp
mov
or
incl
imul
adcl
add
rcl
cld
ljmp
lds
add
add
adc
jno
mov
incb
sldt
add
add
push
xchg
add
mov
aad
lcall
dec
std
adc
pop
inc
push
test
jno
push
call
std
push
push
ficoml
push
shlb
mov
dec
out
sbb
cmpl
adc
pop
mov
in
jg
pop
xchg
push
pop
cld
and
out
add
add
add
fs
les
pop
mov
popa
imul
cli
out
movups
out
inc
add
js
imul
xor
jmp
pop
xor
enter
push
jne
aam
sbb
aad
jae
cmp
imul
subl
add
add
add
add
out
int
sahf
dec
add
jl
jl
stc
insl
jp
add
sbbl
fisttpll
adc
or
push
scas
add
jae
push
rcl
hlt
jmp
or
fxsave
insb
inc
jge
jno
cmc
jnp
lock
movsb
imul
sub
xchg
xor
pushf
stos
je
in
mov
push
mov
add
add
add
imul
push
cld
sar
dec
imul
shll
popf
call
cmp
push
in
add
fbld
xor
es
enter
push
sub
cmp
xor
fnstsw
in
add
and
add
in
add
test
sub
faddl
add
add
icebp
cmovo
bound
inc
repz
mov
in
lret
add
repnz
push
jae
jb
aaa
pop
xchg
push
rcpps
enter
sbb
add
inc
out
push
int3
inc
push
push
nop
jb
push
fs
adc
fidivrl
cmp
jg
lahf
cld
lcall
add
push
daa
push
mov
dec
fistl
in
inc
incb
lock
jno
jmp
xor
adc
or
add
or
repz
xchg
adc
inc
ret
mov
sbb
je
push
or
inc
mov
lret
enter
push
gs
sub
jecxz
ja
push
inc
jl
add
add
add
pop
jle
fisubrl
test
out
add
inc
push
andl
out
pop
and
mov
shrl
or
jle
jp
gs
out
mov
mov
jg
flds
insl
inc
pop
std
pop
add
fimull
in
cld
pop
mov
in
clc
pop
xchg
fwait
call
lret
add
add
add
add
jbe
rcrl
fstps
roll
cvtps2pd
sub
mov
ljmp
jmp
sahf
gs
cli
ret
inc
ja
jg
in
sub
in
adc
add
and
adc
fcompl
cwtl
jae
addr16
add
fldl2t
js
mov
xor
or
daa
add
add
add
mov
incl
mov
popa
lahf
adc
div
lock
adc
cmpsl
cmp
xor
push
push
push
pushl
imull
fsubrl
gs
inc
ljmp
mov
adc
bound
ffreep
ljmp
out
shll
call
jb
jl
aad
jae
push
add
add
add
in
pop
add
outsl
push
mov
pop
mov
fildl
mov
mov
mov
pop
mov
rorl
dec
mov
xchg
mov
shlb
outsb
and
jne
jecxz
test
loope
cmp
add
sub
rolb
add
add
and
lcall
mov
xchg
push
pushl
adc
jne
loop
sub
add
repnz
ljmp
add
scas
jbe
enter
push
gs
mov
insl
test
sbb
mov
adc
cmp
ljmp
sub
cmp
outsb
mov
push
jns
or
add
add
add
sahf
negl
push
adc
push
gs
cmp
outsb
leave
ret
leave
out
les
add
pop
test
push
sbb
mov
out
testl
stos
pop
mov
bound
inc
cmp
fdivr
mov
or
and
icebp
mov
fadd
imul
inc
add
add
add
mov
mov
in
ds
ret
ret
xorl
sub
ljmp
push
pop
xchg
lea
cltd
sti
ret
dec
imul
stos
push
imul
iret
xor
mov
divl
xchg
xor
fdiv
xchg
ss
pop
jae
das
mov
add
jb
push
cwtl
lds
jmp
icebp
adc
adc
mov
flds
in
ljmp
mov
dec
out
mov
pop
aad
sub
jge
sub
xor
and
sbb
mov
insb
or
sub
ljmp
adc
pop
je
pop
loopne
subl
adc
add
add
mov
test
add
jl
jmp
movsb
pop
add
rclb
push
mov
test
adc
xor
out
cmp
je
js
movb
add
jne
mov
inc
outsl
add
leave
or
add
dec
cli
sbbl
add
mov
mov
cmp
test
add
add
push
pop
clc
out
loopne
sti
inc
ret
out
outsb
and
jbe
add
addr16
xchg
imul
addr16
push
add
inc
cs
into
pop
test
bound
orl
mov
enter
jg
out
imul
jl
imul
add
and
insb
add
add
divb
push
out
xchg
add
imul
fdivrs
out
add
pop
adc
mov
out
add
adc
inc
hlt
movhps
add
mov
or
cmpsb
pop
cmp
shr
stos
imul
enter
add
mov
les
sub
enter
das
xchg
pop
sub
push
sbb
pop
popa
enter
fsubp
xchg
and
mov
pop
ficompl
ret
imul
xor
shll
sub
sub
cmp
pop
mov
scas
dec
ljmp
jmp
in
adc
cld
sbb
insb
add
add
add
push
mov
inc
jae
jns
pop
cwtl
popf
pop
adc
fcompl
add
adc
add
call
sbb
cld
mov
push
cmp
mov
xchg
xchg
call
xchg
stc
ljmp
push
clc
add
lods
aam
add
std
ljmp
call
out
mov
call
mull
add
inc
lock
jne
in
mov
and
std
pop
sub
push
mov
xchg
mov
sbb
adc
xchg
and
inc
sub
shll
xchg
cli
jbe
mov
xor
cs
lods
je
push
mov
imul
add
xchg
cmp
lock
add
add
std
sub
test
pop
add
mov
sti
jne
pop
cmp
in
pop
ljmp
mov
rol
das
test
in
push
sahf
out
pop
add
adc
loop
shl
jmp
push
add
push
mov
sti
adc
aas
out
pop
inc
pop
and
mov
push
inc
and
incb
add
add
out
lock
test
roll
loope
out
addl
call
pop
es
shl
mov
or
inc
in
stos
dec
pop
mov
aam
jae
loope
cmp
dec
xchg
lock
out
sub
int
stos
and
shl
jmp
out
int
push
daa
mov
mov
imul
iret
add
add
add
mov
mov
add
aad
push
test
inc
cld
mov
lcall
or
jmp
std
imul
scas
push
add
inc
dec
mov
addl
ret
mov
je
mov
neg
sub
mov
mov
imul
xchg
sub
jp
mov
add
jmp
add
add
add
mov
mov
adc
ljmp
and
mov
jmp
in
int3
or
add
lea
jmp
in
adc
fs
and
imul
adc
mov
decb
sti
sbb
je
xchg
dec
call
int3
mov
inc
and
std
jne
add
add
push
ja
dec
and
sub
std
aam
push
lcall
mov
std
je
mov
mov
push
inc
cmp
mov
fwait
pop
add
test
inc
cs
mov
push
push
xor
add
or
testb
sahf
out
inc
add
out
jb
in
jno
add
xor
incb
add
add
inc
ljmp
adc
pusha
pop
sub
bound
pop
cmp
cs
inc
add
imulb
pop
repnz
push
adc
pop
ret
in
pop
flds
push
jne
jno
sahf
out
imul
pushl
sbb
and
insl
sahf
out
imul
ljmp
xchg
iret
clc
sbb
test
add
add
add
inc
sbb
out
out
scas
mov
fs
mov
xchg
out
add
adc
mov
and
push
int
insl
inc
cmc
jg
add
add
imul
imul
addr16
andb
adc
test
and
pop
mov
mov
insl
lock
test
add
add
add
in
fnsave
mov
xor
repnz
mov
rcl
jmp
cmpsb
dec
cs
jge
in
adc
mov
xchg
push
je
stos
inc
mov
xchg
movsl
ror
and
mull
addr16
cli
add
jb
pop
mov
repnz
jns
dec
jb
pop
cmp
add
add
add
push
mov
cmp
lret
test
jmp
push
ljmp
xor
mov
cli
mov
ja
cmc
call
sub
cmpb
je
or
lea
out
stos
std
decl
add
cmc
jmp
insl
arpl
out
mov
call
add
add
cmp
lea
addr16
out
test
or
mov
call
xchg
mov
inc
mov
in
jne
lock
lea
std
out
mov
mov
loop
out
dec
add
jb
iret
push
jae
mov
mov
sbb
mov
add
add
fwait
pop
add
mov
je
in
lret
push
mov
pushl
mov
cmp
add
stos
std
pop
aas
jge
inc
mov
decl
fadds
aam
jg
dec
ljmp
mov
scas
lret
aas
out
addl
pop
pop
push
incb
in
jle
outsl
into
movl
push
repz
std
shr
sub
pop
leave
add
add
add
jnp
push
cltd
push
fwait
pop
push
adc
xchg
hlt
xlat
add
test
f2xm1
adc
pop
xchg
add
add
fsubr
jnp
test
add
xchg
dec
in
lret
sbb
jmp
push
ficoml
enter
addb
cs
sub
dec
call
push
sbb
adcb
jno
add
add
add
subb
jno
dec
dec
bound
push
sub
add
int
pop
mov
lock
jmp
out
dec
xor
pop
mov
in
mov
int
add
shrb
rolb
push
cli
je
cmp
arpl
in
or
pop
pusha
or
cmp
push
bound
mov
pop
daa
jb
add
add
mov
cld
mov
dec
push
inc
lds
jmp
cmp
jbe
call
pop
and
pop
mov
add
and
mov
aas
fistps
lock
xlat
lcall
mov
jle
movb
call
incl
sete
pop
leave
aad
ljmp
test
add
add
add
adc
push
test
or
shll
out
push
add
cmp
push
in
push
test
lret
dec
and
int3
pop
data16
xor
jne
icebp
add
jp
add
gs
or
jp
or
push
lret
add
sub
mov
in
jae
inc
add
mov
xor
add
fistpl
inc
or
xlat
je
xlat
inc
pop
aad
into
aam
repnz
lcall
adc
or
mov
gs
fldln2
add
pop
xlat
inc
aam
pop
adc
pop
add
notb
jle
add
jg
or
aad
jp
test
cld
xchg
lock
fcmove
ret
add
add
add
jle
add
aam
xor
int
and
imul
cli
inc
sbb
xchg
pop
outsb
addr16
push
inc
js
addl
mov
mov
jmp
dec
js
dec
push
fistpll
in
adc
pop
jno
ret
clc
outsl
enter
sub
sarb
add
add
add
test
call
outsb
int3
xlat
scas
ss
psubsw
add
mov
mov
ljmp
enter
clc
shll
orl
mov
add
ja
addl
push
scas
push
je
nop
xchg
ret
adc
jb
add
fsubrl
pop
sbb
xorl
mov
xor
add
add
mov
jb
ljmp
add
rcrl
mov
shl
dec
lds
cmc
and
mov
add
fldenv
addb
in
pushl
sar
mov
test
sub
addr16
test
notb
ljmp
xor
ljmp
jg
decl
mov
ret
add
add
add
push
roll
mov
add
dec
push
push
lret
xchg
add
inc
mov
out
pop
add
shl
out
dec
jge
inc
out
adc
and
mov
and
in
out
rol
sti
push
xchg
add
pop
out
ljmp
scas
push
push
psubsw
sti
mov
aas
out
in
add
pop
aad
add
add
add
dec
xor
push
lock
mov
insl
and
popf
dec
subl
ja
xchg
mov
jns
pop
std
xor
inc
add
popa
pop
jmp
push
cs
cmp
out
pop
mov
fs
pop
mov
jne
dec
mov
inc
adc
mov
or
sub
add
add
add
add
jmp
jmp
mov
int
js
inc
push
sub
inc
call
xchg
mov
fisubrs
add
ljmp
icebp
add
mov
pop
cwtl
xor
jne
dec
or
ljmp
add
in
sarl
or
mov
sub
xlat
push
add
add
movsl
add
imul
push
shll
add
cwtl
push
test
repnz
ss
adc
add
add
add
inc
push
orl
inc
ljmp
cmp
loope
stos
mov
mov
les
inc
mov
inc
std
pushf
xchg
jns
and
adc
jge
add
sbb
pop
and
lea
add
add
dec
mov
dec
fimull
jne
movsl
sbb
inc
add
push
jge
call
mov
jne
sti
inc
or
add
inc
push
or
or
xchg
mov
fmul
inc
adc
mov
adc
push
ljmp
inc
stc
lds
dec
pop
push
inc
xlat
lds
mov
ljmp
test
ficoml
mov
push
push
and
push
push
mov
jne
pop
mov
out
push
orb
inc
fistl
aas
out
aam
je
push
int
pop
movsb
out
fildl
inc
pop
inc
je
ss
inc
ficoms
add
cs
mov
mov
sti
and
ldmxcsr
ret
inc
adc
add
jmp
ret
testb
rorb
lea
add
add
sub
mov
mov
inc
je
shlb
pop
shr
aad
sbb
dec
gs
inc
cmp
adc
add
call
aas
xchg
or
jns
dec
mov
jl
arpl
jnp
mov
or
cs
push
hlt
je
clc
jp
dec
pop
cld
fs
sar
sub
mov
add
add
add
sbb
icebp
stc
lock
cmp
inc
mov
int3
int3
jmp
or
adc
or
shlb
sub
aas
dec
icebp
loope
test
fs
mov
pushf
and
cmpb
cmp
call
add
call
aas
mov
dec
inc
fcos
pop
xchg
sub
add
add
add
mov
je
daa
inc
call
push
repnz
data16
inc
jmp
mov
sti
and
xor
and
xchg
enter
push
jne
js
adc
fcoml
mulb
or
add
mov
cmc
adc
mov
push
mov
std
jmp
jg
ljmp
hlt
inc
fwait
inc
jb
add
add
add
sti
or
cmpsb
aaa
cmpxchg
mov
cmp
push
add
add
ljmp
into
jmp
dec
mov
or
or
call
mov
rorb
std
pop
ljmp
clts
ret
mov
add
mov
add
add
add
out
divps
out
sbb
out
add
out
pop
pop
aas
out
pop
pop
aas
out
es
aas
out
adc
out
inc
pop
aas
out
xor
aas
out
test
out
sbbl
out
fs
insl
inc
mov
mov
stos
int
out
loopne
out
dec
adc
incb
push
add
out
mov
mov
jecxz
lock
out
xchg
mov
add
out
push
add
addr16
mov
jns
mov
in
add
add
jbe
pop
mov
test
clc
out
out
rcrl
ret
cltd
aas
shrl
loope
call
arpl
cmp
jg
add
add
inc
fistl
stos
cmp
add
add
leave
add
pushf
stos
ljmp
add
add
popf
aas
fistpl
shr
stos
xor
inc
popf
loopne
roll
cmp
jo
ret
add
and
aas
fldt
shr
mov
fdiv
xlat
dec
pop
in
stos
pop
mov
push
imul
sub
das
mov
cmovo
jmp
xor
test
mov
aad
add
add
add
pop
cmp
cmpsb
frstor
in
dec
aas
lcall
je
sbb
pop
cli
ds
ffree
ljmp
mov
add
xor
imul
mov
je,pt
fmul
lret
ja
and
jns
mov
ret
jae
xor
ljmp
ret
std
mov
ret
jae
xor
incl
add
add
stc
ret
loopne
fcoml
inc
add
jne
ret
xchg
push
loopne
int3
adc
cmp
jbe
push
pusha
jbe
cmp
adc
cmp
jae
and
std
jne
rclb
inc
inc
decb
cld
leave
rolb
mov
xchg
lock
push
fldl
push
out
cmp
xsave
test
cmp
add
add
inc
mov
dec
out
test
fs
inc
sub
incl
cwtl
adc
movsb
inc
jae
movsb
repz
negl
mov
out
push
pop
mov
addr16
inc
out
lods
inc
jae
ds
pop
mov
xlat
jecxz
adc
movsb
inc
je
push
mov
xor
adc
jle
repnz
add
add
loop
add
ja
daa
or
lock
inc
xor
jno
shll
add
mov
inc
cmp
out
inc
or
push
sar
test
mov
pop
mov
lea
cmp
adc
jmp
mov
lea
aas
mov
or
pop
push
je
add
add
add
rorl
sub
xchg
cmp
inc
nop
ficompl
mov
sar
popa
mov
jl
in
insb
dec
xchg
call
mov
imull
setno
call
je
mov
add
pop
push
cmp
data16
shlb
mov
inc
add
cli
sub
add
add
in
aad
or
addr16
ljmp
cmp
sub
jmp
push
cmp
cli
sbb
push
in
cli
add
cwtl
inc
call
or
push
fldl
mov
pop
mov
xchg
mov
push
loope
es
add
add
adc
or
cmp
push
mov
mov
or
push
mov
in
add
push
add
out
mov
pop
rolb
inc
or
add
ja
add
mov
out
idivl
mulb
mov
sbb
adc
xchg
cmc
add
cld
mov
lahf
icebp
lock
add
add
add
icebp
aad
push
adc
add
adc
jae
insb
sbb
out
cmpsl
mov
cld
out
xor
inc
adc
sub
call
gs
clc
std
add
mov
add
adc
aaa
ret
out
mov
and
cmp
pop
sbb
fcomps
loopne
pop
out
add
iret
ss
fwait
sarb
add
add
add
sub
add
cmp
loop
fld
add
sbb
orl
cmc
mov
aad
stos
jmp
stos
out
repz
rorb
xor
je
fs
mov
shll
mov
jae
sub
adc
xchg
inc
cmc
add
outsl
and
mov
add
add
add
cmp
dec
testb
lods
pushl
add
cld
fdivp
out
jge
fs
mov
jb
add
aas
cli
scas
sbb
or
cmc
test
xchg
flds
add
outsb
ja
lods
cli
jge
mov
sar
mov
add
call
inc
roll
dec
in
mov
sub
add
add
ljmp
ss
bound
decl
out
ja
xor
inc
addb
cli
add
imul
ds
les
mov
imul
pop
jmp
add
add
inc
sti
add
or
jne
pop
addr16
pop
xor
les
decb
add
add
add
in
mov
add
je
or
out
sti
decl
add
std
adc
sbb
push
lea
add
jg
add
test
out
push
jne
adc
push
pop
adc
push
or
pop
xchg
imul
push
imul
or
fbstp
add
add
add
sbb
mov
mov
mov
and
mov
roll
mov
and
or
daa
jp
fldenv
add
xor
sub
push
adc
xchg
cmp
gs
sub
cs
inc
fildl
inc
out
out
mov
out
sub
mov
int3
les
mov
inc
je
dec
lods
int3
pop
add
add
add
les
imul
sbb
add
push
xchg
bound
out
test
or
add
sub
gs
mov
repz
stc
shr
sbb
test
fnsave
inc
inc
mov
jmp
add
leave
sbb
add
add
in
cmp
adc
shr
push
xchg
call
mov
lods
loop
mov
cld
jne
add
add
add
add
subl
bound
jg
sbb
outsb
in
add
xchg
add
and
add
jne
and
dec
adc
sbb
xchg
insb
loopne
jmp
in
jmp
in
iret
mov
add
pop
loope
fidivrs
icebp
add
add
add
mov
sbb
repnz
in
push
jb
dec
push
mov
in
add
add
mov
xchg
lea
adc
add
aaa
iret
jb
mov
cmc
in
nop
pop
ljmp
sti
decb
xchg
push
filds
push
das
les
add
push
mov
add
add
xchg
add
js
hlt
inc
mov
add
out
pop
decl
movl
lahf
sbb
add
xor
jae
mov
mov
imul
and
push
scas
jmp
mov
sub
out
push
add
scas
or
daa
lock
pop
sub
sbb
add
add
xchg
pop
scas
lcall
jmp
jae
push
sub
mov
sahf
dec
push
arpl
int3
push
add
jnp
jmp
cmpsb
mov
out
add
jmp
push
test
push
cli
mov
mov
fistl
adc
in
pop
mov
cmp
and
push
imul
sub
pushf
push
add
add
add
jnp
mov
add
ds
stos
loopne
pop
shl
push
pop
faddl
sub
in
test
das
add
rorb
lock
out
cmp
call
daa
sahf
int
jg
mov
lock
hlt
sahf
mov
stc
ss
mov
xor
std
nop
rolb
add
data16
add
call
in
add
add
add
pop
push
outsb
ss
add
or
mov
cmpsl
inc
add
inc
fucomip
cmp
add
inc
xchg
sub
cmc
test
jge
jns
mov
pushl
mov
jle
fnstcw
das
adc
loopne
ljmp
and
lock
jmp
push
rcll
mov
dec
xchg
xchg
pop
push
mov
inc
add
add
add
xlat
scas
inc
clc
cmp
cli
push
clc
jg
dec
data16
incb
inc
push
dec
call
mov
scas
ljmp
add
mov
das
push
lea
cmc
ficomps
add
push
push
into
imul
lcall
add
fildl
jb
scas
inc
adc
add
add
idivb
cli
jmp
xchg
mov
sub
mov
out
pop
add
xor
ret
cmp
leave
pop
ja
dec
incb
rclb
out
dec
jns
ss
push
insl
rclb
je
sub
aam
movl
outsb
add
out
add
mov
mov
sbb
pop
add
add
add
addr16
mov
repz
cs
inc
mov
or
pop
push
xchg
sbb
push
popf
pop
icebp
mov
sbb
sbb
xchg
fs
loopne
sbb
sbb
inc
call
imulb
call
inc
sbb
mov
jge
std
popa
or
insb
inc
loopne
js
cmp
add
add
add
stc
popa
add
jo
add
add
jbe
add
jge
int
int3
ss
lock
mov
add
rcll
cmp
xchg
add
out
cmpsb
imul
or
jmp
push
ret
incb
rol
insb
jge
sahf
in
sbb
sub
jg
cmc
push
insb
sub
les
das
add
add
add
add
and
sti
mov
push
outsb
adc
jmp
imul
clc
call
gs
jb
jl
jmp
sbb
cwtl
sarb
sub
subb
jb
sub
insl
stos
scas
push
jb
sub
mov
loop
xlat
add
mov
pop
mov
mov
repnz
sbb
add
add
sahf
jg
add
adcb
push
lds
push
mov
push
cmp
pop
mov
mov
aas
rcl
xchg
out
sti
add
jmp
pop
jl
rolb
mov
loopne
add
push
mov
repnz
push
dec
mov
and
dec
mov
add
add
add
sub
add
loope
jae
icebp
mov
jae
xchg
sbb
bound
lock
out
scas
movl
jbe
add
jne
sbb
sbbl
add
test
rcrb
cltd
lret
sbb
out
pop
add
in
pop
movsb
xorb
lds
lahf
xor
addr16
sub
add
add
add
mulb
das
inc
subb
inc
notb
xchg
leave
mov
add
cmp
sub
jns
test
mov
fs
popf
add
jbe
sbb
jbe
add
scas
out
out
in
mov
ja
sbb
add
add
sub
inc
out
add
jle
adc
cwtl
sarl
scas
add
add
add
repz
fcmovnb
call
dec
in
pop
gs
cwtl
mov
jne
add
xchg
hlt
dec
js
and
shrb
dec
sbb
lret
gs
mov
push
divl
ja
mov
and
call
shlb
int
lods
out
shll
call
test
mov
jnp
addl
outsb
pop
call
xorb
into
es
insl
lods
imull
out
sbb
daa
xchg
and
jae
add
ja
call
out
out
jo
sub
fs
es
push
les
add
test
jmp
sbb
add
test
jge
pop
jno
push
xchg
push
das
stos
cmpsl
incl
add
add
xor
add
mov
or
out
ds
call
stc
movsl
inc
push
push
inc
cli
cmp
incl
aad
jge
jo
mov
repnz
sbb
pop
inc
fcoml
inc
addps
cmc
mov
test
add
push
leave
push
or
movsl
out
push
sub
jmp
mov
add
add
add
jnp
sub
in
and
jge
out
ljmp
sbb
jb
add
ds
out
push
bnd
jmp
or
je
pop
cli
roll
inc
pop
out
in
jle
outsl
mov
out
pop
aad
dec
and
push
jne
jge
cltd
mov
push
addb
jne
sbb
aad
add
add
add
out
pop
add
out
add
fwait
pop
scas
test
sahf
and
imul
xchg
add
cld
lcall
mov
inc
clc
jnp
add
add
and
mov
adc
inc
fnstsw
call
call
cmp
push
sub
notb
test
add
add
in
sub
adc
es
sub
cltd
mov
push
test
in
dec
sbb
add
ljmp
adcl
mov
add
add
cmc
cmc
jl
ljmp
insl
sti
call
in
add
shrl
add
hlt
add
jmp
cmp
jne
test
fistl
negb
repz
add
in
add
sbb
mov
imull
jge
xor
fscale
add
mov
dec
ret
call
add
jge
dec
mov
sub
out
popf
jg
fwait
decb
add
add
add
cmpb
sub
xor
inc
pop
push
call
cmp
dec
lea
adc
in
std
decl
and
push
cmp
xchg
mov
mov
pop
sub
jo
sub
jo
sub
xlat
scas
cmp
lds
push
inc
jae
push
inc
je
sahf
rolb
sbb
sahf
xchg
add
add
add
add
adc
push
outsb
je
add
scas
add
out
mov
mov
sbb
pop
jne
jns
pop
sbb
add
fsubl
loope
filds
out
add
out
add
sub
sbb
jbe
cld
sbb
int
dec
jb
add
add
lret
in
add
add
add
jbe
orb
call
cltd
popa
jne
fucomip
sbb
push
and
icebp
jne
jp
cld
pop
mov
cmc
popa
mov
sub
fcomip
jbe
imull
add
or
je
jmp
mov
sti
js
jne
adc
mov
xor
je
inc
add
adc
loopne
sbb
and
sbb
add
add
cmpb
arpl
add
in
ljmp
sub
mov
mov
mov
cli
mov
add
jmp
in
jne
in
jge
and
push
and
xor
cld
jne
in
jecxz
jl
and
cmp
xor
push
fdivp
sub
sub
jg
int
add
add
scas
add
jmp
loop
enter
add
lods
stos
pop
xchg
repz
call
std
test
adc
or
pop
or
xchg
add
inc
addr16
add
add
sub
mov
or
add
test
outsl
push
mov
push
in
pop
orl
mov
mov
add
add
out
mov
push
mov
in
adc
mov
push
jno
lock
lock
push
push
mov
or
lret
jecxz
clc
int3
jb
out
jbe
cmpxchg
sub
ret
mov
sbb
sbb
fistpl
fisttpll
xchg
aad
add
dec
test
fdivrs
in
mov
add
add
and
test
stc
mov
and
mov
add
out
jnp
je
icebp
in
fucomip
sub
add
xchg
mull
and
test
out
sbb
out
sbb
in
sbb
add
mov
out
mov
lea
in
add
repz
add
add
int3
imull
mov
or
push
mov
xor
subl
lods
out
stos
jecxz
lods
in
mov
fsubrl
in
sub
arpl
push
popa
adc
fldl
xchg
mov
add
sbb
call
and
fwait
out
sub
inc
shr
sahf
cmp
out
add
dec
add
add
add
add
jae
call
jge
adc
mov
test
jmp
xchg
stc
aas
push
push
je
iret
shll
insl
cltd
and
repnz
incb
sbb
addb
mov
push
loope
jb
or
subl
mov
aad
adc
in
cmpsb
adcb
or
and
add
add
add
jae
and
je
jae
lcall
cmp
fbstp
cld
lea
ret
icebp
mov
lds
add
mov
cmp
sbb
push
shrl
adc
push
test
lcall
and
add
jae
push
inc
and
xchg
lea
mov
cmp
xor
inc
and
test
dec
add
and
adc
add
add
or
std
mov
adc
mov
adc
jns
mov
jp
push
add
arpl
and
sbb
aam
sub
xor
dec
mov
gs
inc
cli
cmp
leave
icebp
mov
imul
add
sub
mov
add
out
mov
add
add
sahf
sbb
in
negb
test
push
xor
scas
mov
xchg
out
sub
push
sahf
nop
enter
push
mov
rcrb
add
xchg
and
push
mov
add
adc
pop
and
mov
in
and
rcrl
insb
inc
inc
or
jb
mov
add
add
jmp
dec
mov
jmp
mov
mov
pop
pop
add
add
cmpsl
in
bound
add
mov
add
jmp
in
inc
xchg
into
push
ret
cmp
jmp
xchg
stc
test
mov
xor
add
pop
je
inc
and
imul
xor
add
add
in
into
scas
call
loop
xchg
call
movb
flds
mov
sub
xchg
test
xor
fldl
jmp
push
std
push
dec
pop
adc
pop
xchg
add
fldl
fs
xchg
sub
xor
sub
adc
shl
add
add
in
or
fwait
adc
je
cld
jb
or
adc
sbb
xor
dec
ret
sub
test
loopne
shl
sbb
and
mov
andl
push
or
xor
fdivrs
xor
or
pop
xlat
cld
addr16
cwtl
inc
out
push
incb
cmp
dec
std
xor
scas
adc
incl
add
add
inc
mov
push
ja
cld
push
add
mov
push
ja
and
add
mov
sub
add
xchg
mov
sub
add
lea
arpl
sqrtps
repnz
out
fstps
adc
nop
pop
arpl
das
dec
ja
sbb
fcmovnu
idivb
out
repz
pop
dec
xchg
rcl
imul
mov
add
add
sub
in
push
mov
subl
mov
insl
push
nop
divl
movsb
xchg
test
add
sub
push
cmp
mov
sbb
aad
ret
and
push
mov
mov
loopne
add
int3
sbb
sar
jmp
aas
fnstsw
push
lds
push
xchg
lock
add
add
jne
cmp
je
pop
enter
daa
loope
pushf
mov
sbb
inc
sbb
call
mov
sbbl
pop
mov
sbb
out
out
mov
mov
mov
ret
pop
jge
nop
in
imul
or
xor
je
pop
xor
sub
out
orl
cltd
push
jge
jge
add
add
add
add
jb
sbb
stos
xchg
mov
cmp
push
je
sbb
mov
jl
xor
mov
std
mov
mov
sbb
mov
cmp
mov
arpl
jbe
mov
bound
sbb
icebp
jp
pop
and
add
push
or
push
adc
add
add
push
add
or
adc
inc
incb
aaa
cld
lcall
mov
jmp
xor
jle
fimuls
and
mov
push
std
jne
stc
xor
xlat
push
imul
jno
mov
jmp
in
cli
push
push
sbb
push
or
incb
data16
incl
add
add
mov
mov
or
sub
push
ret
out
gs
jecxz
icebp
aas
out
sahf
sbb
mov
repz
out
add
push
sub
das
imulb
add
test
sub
data16
sub
mov
dec
mov
lahf
rcr
loop
mov
inc
movsb
mov
gs
sub
add
add
add
mov
imul
mov
int3
je
bound
add
add
add
xchg
mov
dec
pop
push
sub
xchg
out
add
shl
push
xor
adc
mov
adc
cmpsl
add
call
scas
or
faddp
stc
jge
or
in
aam
sbb
add
add
ds
mov
out
jge
sbb
xchg
cmp
sub
shl
mov
or
stos
popa
daa
outsb
and
pop
scas
jp
mov
subb
call
push
std
call
popf
adc
or
test
jno
mov
sbb
test
js
xchg
sub
ret
add
jmp
add
jo
out
add
and
fbld
dec
out
add
adc
repnz
hlt
xchg
out
aas
jmp
das
add
jns
jge
mov
sahf
imul
repnz
hlt
sbb
aas
add
jp
add
push
call
fidivrl
test
addb
add
add
add
dec
sarb
add
jecxz
adc
cmp
decb
mov
jnp
loopne
xorl
or
inc
jle
std
mov
pop
ja
test
add
add
add
pop
push
cmpb
lcall
fcompl
les
adc
cli
add
iret
mov
xchg
adc
add
add
sbb
repnz
jne
js
adc
jae
adc
popa
mov
outsl
out
sbb
push
mov
ret
inc
sub
mov
adc
in
pop
std
pop
add
xlat
data16
jae
outsb
xchg
cwtl
add
sbb
push
jmp
mov
aas
out
lcall
sahf
les
add
add
add
push
xchg
or
int3
and
pop
add
xchg
xchg
pushw
out
inc
in
inc
fidivs
test
jb
xor
imul
into
cli
cmp
jmp
add
daa
sbb
and
aas
ret
ds
push
sbb
sbb
lea
mov
stc
sub
push
aas
ja
add
add
add
mov
push
mov
js
mov
jle
scas
pushf
sbb
loope
ret
lret
pushl
loop
sahf
jmp
cmp
xchg
ljmp
enter
dec
movsb
jae
pop
das
jle
or
mov
inc
mov
mov
add
shlb
mov
adc
test
add
add
add
lahf
mov
mov
fwait
in
xchg
cmp
sti
shll
adc
mov
jbe
mov
push
push
inc
sbb
das
push
aaa
sahf
sti
out
das
in
sbb
addr16
and
loope
sahf
add
push
sub
int
shll
test
xchg
movsb
mov
xchg
pop
pusha
mov
mov
iret
std
push
sub
add
outsl
push
test
or
aam
iret
imul
jno
shr
iret
imul
add
in
xor
mov
sub
jo
leave
idivl
shr
pop
cwtl
adc
in
jg
inc
sbb
mov
push
in
stos
add
add
out
lret
jnp
sub
inc
ret
cld
pop
push
jmp
sbb
push
ja
or
add
unpcklpd
adc
ljmp
push
and
fwait
add
sbb
mov
bound
fucomip
sbb
add
ljmp
xor
jmp
popf
pushfw
add
fcompl
mov
add
and
mov
je
add
cltd
imul
dec
xchg
ret
add
add
add
arpl
mov
mov
cltd
inc
mov
add
xorl
inc
out
inc
sbb
out
add
std
test
xorl
repz
out
iret
test
adc
imul
and
subb
in
out
scas
cltd
xorb
wrmsr
mov
cltd
icebp
inc
mov
add
cmc
pusha
repnz
add
add
add
sti
pop
cltd
std
pop
and
clc
or
push
mov
cmc
clc
or
je
jge
fstpl
or
push
loop
adc
mov
or
cmp
pushl
jbe
std
pushf
lret
fisttpl
je
clc
xor
dec
inc
ja
jb
add
jmp
lods
into
cmc
push
push
ret
dec
jae
add
add
add
leave
add
in
add
mov
loop
jno
jbe
jae
xor
jne
xchg
sbb
scas
repnz
add
jno
xor
out
andb
je
jle
daa
cmp
std
jne
mov
sub
xlat
mov
test
sti
jmp
data16
inc
inc
lret
out
stc
lcall
lds
add
add
add
stc
std
call
in
mov
rcrb
ds
mov
push
rolb
dec
call
mov
cld
sti
call
push
out
popa
std
call
jbe
add
pop
js
icebp
pop
lods
pop
daa
aad
lcall
push
add
out
outsl
ja
out
mov
call
add
and
xchg
add
add
add
out
sbb
out
add
sbb
aas
out
nop
xchg
gs
xorb
les
hlt
negb
shl
mov
orb
and
mov
dec
cwtl
cmp
fistps
pop
pushf
sbb
mov
add
out
add
mov
test
ja
sub
out
add
add
add
add
out
add
add
mov
xor
fwait
out
add
add
mov
jns
sub
add
mov
xor
dec
in
add
add
mov
jns
and
add
jnp
sbb
xchg
out
imul
mov
add
push
or
orl
dec
das
mov
jl
xchg
fmull
add
add
add
bound
je
repz
push
cmc
je
sub
add
lcall
xchg
add
xchg
lahf
mov
sub
mov
jmp
mov
inc
jge
aaa
rolb
jno
std
jmp
cwtd
xor
scas
and
push
cld
call
mov
call
add
ljmp
cli
mov
outsb
idiv
dec
in
incl
inc
jne
xchg
mov
add
pushf
adc
insl
call
idiv
lcall
pop
xlat
add
pushl
pop
pop
jle
add
pop
ljmp
test
add
loop
out
add
add
add
std
xor
into
je
pop
mov
icebp
xor
je
push
xor
add
jne,pn
or
js
push
cmp
push
pop
add
out
dec
divl
enter
mov
inc
adc
add
jne
cli
rep
cli
add
fwait
lock
add
mov
sbb
jne
ffreep
test
add
add
add
cs
pop
push
popf
cmp
xchg
cmp
addr16
ret
jns
inc
push
jnp
push
lahf
add
incb
cmp
jnp
or
and
jmp
out
out
dec
repnz
cmp
imul
shr
jmp
jl
call
mov
inc
clc
insl
daa
jbe
add
lcall
add
add
add
add
or
inc
jbe
or
jmp
fcom
cmpsb
jl
mull
imul
aas
aad
or
ja
mov
mov
shlb
inc
pop
lds
mov
cmp
mov
insl
cmpsl
jns
add
std
pop
cmp
imul
out
add
add
add
fcmovnb
cmpsb
sbb
cmp
test
inc
jmp
out
sar
dec
repnz
add
scas
sub
cmp
int
inc
jmp
fcmovnb
jmp
movsb
ret
fiadds
call
mov
mov
jmp
sub
ljmp
inc
sar
adc
add
add
add
out
imul
scas
push
mov
les
sub
pop
cmc
idivl
mov
decb
adc
and
and
cmp
pop
or
sti
adc
das
mov
add
hlt
push
inc
in
xchg
std
xor
divb
mov
add
add
nop
mov
adc
dec
call
nop
mov
push
sub
add
aaa
divb
xchg
out
push
adc
loope
adc
and
popl
xchg
mov
inc
mov
aas
sub
dec
push
fst
sbb
add
test
lcall
cltd
add
gs
repnz
popf
xchg
add
add
add
add
sbbb
add
jb
add
out
jb
or
sub
jge
out
jmp
add
addr16
call
loopne
mov
cli
mov
mov
je
xlat
add
mov
insb
cmp
popf
mov
xchg
mov
rorl
push
lock
xchg
or
add
add
add
mov
loopne
xchg
mov
data16
xor
push
add
adc
xor
out
xchg
sti
test
in
cmp
mov
mov
cmp
out
jo
addr16
add
in
leave
out
pop
jmp
dec
subl
mov
call
xor
mov
orl
clc
xchg
jmp
push
imul
add
mov
call
bound
fnstenv
cld
mov
lcall
jmp
sar
loope
adc
fldt
cmp
xchg
cwtl
push
push
add
jae
jmp
sarl
jne
push
push
lahf
pusha
push
loopne
test
std
out
shll
std
pop
into
cld
jae
in
je
add
add
fadds
add
add
mov
dec
jecxz
loop
call
cmp
add
add
sti
jne
add
sbb
pop
add
dec
cld
cwtl
mov
lods
adc
rclb
gs
ss
mov
add
add
call
jns
add
mov
xchg
xlat
mov
lret
inc
xor
add
jbe
orl
jbe
add
mov
pop
faddl
jne
adc
mov
call
pusha
inc
loopne
cmpsl
js
jne
add
gs
inc
in
sub
mov
insb
les
pop
and
add
push
in
lds
push
push
cmp
loope
fwait
jecxz
shlb
add
or
in
shrb
sbb
add
add
add
dec
cld
stc
push
add
jecxz
roll
gs
sbb
in
and
add
imul
imul
add
fsubrl
out
mov
imul
xchg
out
out
out
aaa
lcall
add
add
jb
and
pusha
jbe
mov
cmp
jne
mov
or
fdivrp
cmpsl
mov
add
add
dec
cmp
ja
xchg
ja
repz
ret
adc
pop
outsl
shl
and
fcmovb
scas
mov
movsb
call
fildl
add
add
loope
dec
mov
insl
in
push
in
xchg
in
add
aam
adc
sbb
test
lods
std
and
add
add
add
inc
add
ljmp
jmp
xchg
out
inc
jmp
faddl
imul
lods
std
inc
sbb
lds
inc
add
idivl
add
out
rep
in
sti
push
push
pop
stc
adc
mov
add
addl
add
jmp
mov
xchg
ret
add
add
out
add
or
jae
push
call
mov
ret
pop
xchg
jmp
ret
jbe
add
inc
push
push
cmp
mov
nop
sbb
adc
jg
das
stc
aas
add
jns
call
fwait
mov
insb
cmc
inc
cmp
inc
inc
add
add
add
add
call
cmovo
insb
dec
cld
push
mov
inc
in
and
out
dec
sti
std
out
out
jae
mov
cltd
out
jnp
mov
add
scas
xor
push
imul
lcall
clc
daa
add
xor
cmpb
adc
insl
sub
cmp
or
shl
mov
ds
add
add
add
adc
std
or
cmpsl
incl
out
data16
out
test
jb
testb
ret
popf
mov
shr
inc
inc
out
inc
add
add
les
ljmp
or
aas
fmull
push
das
js
xor
push
jmp
xor
aas
jmp
push
dec
call
push
pop
push
lret
adc
add
stc
jbe
test
fstl
out
roll
jbe
or
shrl
std
sub
inc
out
mov
mov
cmp
cld
stc
adc
jo
jae
je
adc
sar
in
adc
dec
or
mov
out
cmp
jmp
notb
mov
sbb
cld
aam
add
add
mov
inc
add
imul
or
adc
lods
add
sbb
in
lea
idiv
idivl
hlt
adc
inc
add
push
in
push
pop
cmpsl
loopne
add
sarb
inc
jmp
aas
push
inc
pop
cmp
daa
xlat
add
outsl
adc
add
mov
ja
inc
or
call
add
roll
add
add
inc
int3
inc
sbb
jae
add
mov
jne
cli
adc
inc
add
inc
pop
vrcpss
mov
insb
repz
jne
out
push
jge
out
sti
dec
inc
cld
push
lcall
push
out
mov
cli
jae
es
cld
sub
add
aad
push
add
add
add
in
mov
jmp
add
add
xor
out
shlb
or
jmp
shrb
push
pop
lods
pop
dec
je
push
adc
jmp
shrb
les
cli
icebp
dec
je
fcmovb
rcl
pop
rol
pop
shl
add
mov
add
add
cmpsl
ret
push
add
add
rolb
mov
les
mov
inc
push
xchg
add
outsl
testb
adc
test
fldt
clc
std
lock
jmp
sbb
repnz
xchg
nop
fdivrp
mov
outsb
fisttps
sbb
daa
add
mov
pop
stc
std
or
add
repnz
dec
clc
inc
out
sbb
add
ret
incl
add
ss
outsb
loopne
adc
sub
in
in
dec
mov
lahf
dec
mov
jb
call
gs
push
call
insl
lods
insb
sub
sahf
add
xchg
fstpl
out
mov
xchg
test
xor
push
add
add
mov
cmp
push
push
sub
jg
xor
call
mov
xchg
cmp
sbb
pop
cmc
std
add
sti
adc
rol
ret
cmp
out
xchg
out
mov
add
jne
mov
xchg
sbb
incl
jg
in
aad
add
add
add
sti
adc
test
ret
inc
xchg
je
cmpb
push
bndldx
jecxz
xor
out
ljmp
scas
pop
stc
incl
shlb
add
cmc
add
in
adc
addr16
adc
scas
push
loopne
pop
push
std
mov
jmp
jo
add
add
add
or
sbb
je
jecxz
jbe
sub
cmp
cmpsl
add
out
push
or
add
call
sbb
or
xor
out
mov
out
push
cmp
jbe
jne
test
add
push
call
je
or
jmp
and
xchg
cmc
push
imul
add
add
add
add
inc
icebp
add
xchg
mov
outsb
cmc
ja
int
pop
jb
cmc
sbb
add
adc
lods
pop
xor
dec
orl
out
out
dec
shll
popf
hlt
jecxz
xchg
add
fnstenv
aas
idivb
pop
outsl
xor
div
dec
jp
jo
lock
daa
out
push
xor
fadd
xchg
add
add
jp
jo
jbe
add
call
gs
jbe
sahf
bound
loope
adc
insb
fldln2
std
xchg
jle
test
cld
add
adc
stos
and
std
lods
adc
jae
jmp
cmc
adc
xor
in
data16
movsb
leave
jb
fldt
out
lods
call
add
add
add
aas
push
bound
xchg
jns
icebp
xchg
enter
push
cld
or
in
cld
jno
repnz
inc
add
add
push
std
add
call
adc
dec
push
pop
subb
js
je
dec
xchg
outsl
pop
cli
decl
ss
notb
ljmp
pop
fdivrp
incl
add
add
add
sbb
jge,pn
pop
push
dec
sti
adc
xor
xor
repz
add
xchg
outsl
into
call
add
inc
out
or
pop
and
mov
add
sub
xor
or
or
std
add
pop
inc
out
cltd
stc
jmp
aam
push
mov
arpl
jmp
add
jb
std
mov
fldl
fcom
dec
fidivrs
jp
repnz
ljmp
push
lea
add
aad
gs
stc
imul
xlat
mov
inc
mov
jne
out
fnsave
add
inc
ret
or
scas
add
pop
fs
add
and
frstor
add
add
rcrl
scas
add
ret
inc
ficoml
icebp
mov
jns
push
addr16
outsb
jnp
in
jb
out
aas
or
iret
ret
jge
rolb
sti
jb
lock
xor
out
std
inc
out
lods
std
out
out
jmp
daa
cli
jmp
daa
bnd
pop
mov
add
sub
sub
add
add
add
push
jb
jp
bound
test
icebp
in
add
shr
lds
ret
jns
scas
mov
add
shl
jmp
hlt
add
inc
jmp
in
outsl
sub
clc
mov
push
mov
add
jmp
pop
inc
aam
cmp
fisubrs
jns
dec
pop
ret
or
add
add
add
shr
mov
sbb
add
mov
sti
push
nop
jb
or
cld
cli
je
cld
cli
jno
ficoml
in
aas
add
jg,pt
call
rol
call
cmpl
sbb
jmp
ficoml
dec
cmp
add
cmp
push
mov
enter
adc
mov
add
add
pop
js
jne
cmc
inc
aam
jae
cmp
jno
and
mov
pop
stos
sti
jne
fistl
out
pop
les
add
in
ja
mov
sbb
rolb
adc
sub
in
insl
mov
add
mov
clc
adc
fsubr
jbe
pop
leave
std
fsub
out
aad
cwtl
jne
insl
scas
out
out
fadds
add
add
add
jne
cld
scas
out
jo
hlt
imul
cs
mov
addr16
stc
cld
fwait
out
inc
add
stc
cld
jecxz
cmovo
outsb
leave
add
or
mov
xor
ret
inc
clc
popa
dec
repnz
out
ja
aad
andb
call
out
std
out
xchg
addr16
std
add
add
jp
push
add
jmp
fucomip
fadds
aad
rcrb
outsl
mov
add
jmp
rcll
das
inc
mov
jns
jge
add
shlb
sahf
push
sar
inc
cmp
out
xchg
add
add
jmp
adc
add
sub
mov
in
add
faddl
add
add
and
leave
sbb
sub
ret
push
mov
cmp
add
mov
dec
aad
inc
push
inc
lock
icebp
hlt
inc
cld
mov
ljmp
stos
jmp
leave
push
sub
push
push
mov
inc
add
adc
fldt
repz
jmp
mov
shll
add
add
add
inc
add
int
add
dec
sti
adc
dec
inc
and
out
add
call
inc
add
push
push
inc
add
sti
or
jg
test
add
gs
xor
add
push
mov
pop
pop
or
pop
xchg
add
push
int3
enter
dec
das
fildl
adc
add
add
cltd
mov
incl
xlat
adc
fldcw
sbb
jecxz
test
daa
jmp
lock
out
loope
ds
sbb
add
and
push
clc
fcoml
push
push
pushl
cltd
xlat
push
std
sti
repz
jo
clc
insl
shr
jae
or
jmp
add
add
mov
add
add
pop
or
mov
inc
verw
pop
push
push
addr16
ljmp
outsb
adc
add
lock
add
imul
adcb
xchg
out
sub
and
push
shrl
ljmp
pushf
jmp
into
fs
cmp
add
pop
out
add
out
je
add
add
add
add
testb
mov
jecxz
sbb
hlt
sbb
xor
jmp
ja
cmpsb
aas
cmp
filds
out
mov
cld
out
jne
jg
rcrb
jmp
outsb
shlb
hlt
mov
xlat
dec
std
hlt
sbb
inc
jmp
inc
jo
aaa
sbb
subb
add
add
xor
mov
call
mov
fisttpll
inc
jmp
and
imul
add
sbb
mov
mov
repnz
inc
inc
add
fadds
call
insl
sub
pop
repz
cld
cmp
cld
lds
push
push
sti
adc
add
add
add
inc
cld
aaa
fnstenv
mov
or
rolb
ljmp
dec
repz
push
sti
jne
fcoms
inc
mov
push
adc
pop
inc
add
push
or
mov
sub
std
enter
push
cld
enter
mov
push
addr16
adc
jo
loope
icebp
inc
inc
xor
inc
add
addr16
adc
jo
add
add
add
adc
shlb
inc
add
filds
fcompl
lods
flds
add
jmp
cmp
xchg
in
loope
stc
mov
cmp
in
jl
ret
subl
push
std
and
jl
mov
gs
cld
mov
and
sti
out
out
or
inc
add
add
add
insl
pushf
cmc
xor
iret
ljmp
daa
xchg
stc
mov
add
pop
out
clc
out
inc
or
add
ja
hlt
insl
sar
xchg
clc
jge
lret
add
rolb
ja
out
xor
dec
mov
inc
out
xchg
jp
stc
jno
ljmp
jl
lds
fidivrl
out
insl
rclb
add
pop
mov
out
add
outsl
jge
out
out
push
out
sub
fsubrl
push
daa
add
jmp
add
icebp
ljmp
std
jmp
inc
js
in
mov
call
call
mov
mov
add
or
fmuls
insb
mov
clc
cld
xlat
jmp
add
add
icebp
inc
add
orl
add
aaa
or
add
in
mov
xor
or
jmp
xchg
loopne
testb
mov
xchg
xor
shr
test
loop
xchg
stos
call
pop
std
mov
mov
sti
jne
dec
sti
push
push
pusha
rorb
mov
add
xlat
setb
add
pop
inc
in
add
add
add
loopne
fildl
cmc
cli
jne
pop
push
lock
outsb
adc
ds
test
aad
movsl
movl
add
xlat
add
jne
pop
into
pushl
xchg
pop
sarb
sarb
adc
add
add
inc
pop
and
and
dec
les
es
adc
in
push
sahf
push
add
add
add
push
mov
mov
mov
imul
stos
jo
je
xchg
imul
out
stc
loopne
adc
ja
test
add
loope
mov
jmp
xchg
sub
out
xor
orl
int3
add
xchg
test
xchg
jmp
add
or
movsl
aad
ljmp
add
out
out
pop
lock
add
out
add
jp
ss
push
loopne
fst
xabort
mull
add
inc
mov
sub
out
ja
scas
or
pop
daa
add
das
lcall
cli
or
call
leave
test
jecxz
popf
mov
or
mov
loop
push
imul
jo
add
or
add
add
add
mov
or
lcall
push
add
sbb
fdivr
out
popl
jmp
filds
adc
shll
push
add
call
enter
enter
call
mov
je
add
xadd
add
add
add
xchg
les
std
mov
ftst
test
add
pushf
mov
mov
push
mov
cmp
add
or
mov
push
inc
xchg
adc
test
add
push
inc
shrl
pop
add
les
pop
out
incl
adc
or
add
add
add
loope
or
dec
push
push
jo
jg
and
push
push
call
iret
mov
lahf
add
lea
dec
sub
xchg
incl
mov
test
xlat
hlt
mov
add
inc
adc
fs
dec
jae
dec
push
add
data16
loopne
fisubs
push
and
mov
ret
addl
xor
ss
sti
sbb
enter
ds
sub
pop
ret
pop
xchg
push
pop
pop
jno
and
out
jmp
mov
inc
xlat
inc
out
sub
add
ljmp
push
add
imul
lods
add
jno
adc
inc
add
push
add
add
adc
mov
add
ss
xchg
or
and
orb
out
leave
jge
fisubrs
cmpsl
fsubrs
add
pop
mov
ds
arpl
shl
sbb
and
add
push
fsubrp
fldcw
push
outsl
and
fldcw
inc
xchg
inc
out
lcall
inc
out
cmp
das
xor
addr16
out
dec
cmpsb
push
cld
mov
add
mov
add
add
add
hlt
inc
out
test
mov
push
add
push
add
mov
adc
je
dec
mov
xor
dec
mov
push
pop
adc
std
imulb
jae
ffreep
jmp
sbb
xchg
push
shlb
adc
ljmp
ljmp
std
sbb
mov
popa
adc
add
add
add
jge
hlt
icebp
sbbl
icebp
adc
std
hlt
pop
icebp
aas
jmp
lods
inc
jmp
xor
les
pop
or
dec
adc
movups
push
xor
and
xchg
add
shr
das
add
jne
inc
xchg
inc
aaa
dec
mov
fisttpll
sub
vmaxss
mov
adc
lcall
pcmpeqb
add
add
jmp
jno
nop
aas
cld
adc
add
jmp
mov
add
mov
mov
mov
add
push
loopne
add
into
pop
adc
call
fnsave
shr
fcmovnb
jmp
sahf
pusha
add
out
mov
in
adcl
add
std
mov
add
add
add
std
jno
les
ret
scas
fscale
jb
push
add
call
xchg
sarl
cmpsb
cmp
imul
xor
in
jmp
push
inc
nop
push
add
mov
push
add
sub
push
fiaddl
push
fiaddl
mov
jmp
xchg
fldt
mov
add
mov
pushf
iret
adc
mov
mov
out
xchg
add
aad
iret
xchg
mov
out
xor
popa
sbb
out
test
add
loope
adc
out
add
xor
adc
cld
push
scas
movb
jl
or
out
out
call
bound
jo
ret
repz
roll
sahf
cli
out
add
add
add
add
mov
aad
fucompp
in
jg
add
jmp
mov
jns
in
add
sbb
aad
sarb
call
orl
stos
cld
jae
push
dec
call
dec
stc
cmc
stos
stos
push
das
je
sbb
rorl
or
into
push
add
add
cmp
scas
out
aad
shl
sbb
adc
cmp
dec
push
arpl
mov
and
outsl
psubsb
xlat
jnp
and
call
pop
pop
hlt
mov
ret
cmpb
add
add
jns
push
push
les
cwtl
sbb
add
loopne
lea
push
add
pop
outsl
mov
add
into
cmp
add
lret
or
psubq
jmp
inc
add
mov
in
xor
bound
cli
mov
out
jmp
dec
or
add
stos
dec
sbb
mov
jmp
shr
push
cmp
add
scas
test
lret
jmp
outsl
in
sub
out
jmp
add
add
jmp
mov
movb
push
jno
jmp
inc
and
sbb
mov
aad
cs
pop
add
and
sbb
sub
testb
xor
cmp
repz
sti
in
add
add
cmp
and
shl
add
add
add
inc
mov
add
add
out
xor
and
orb
add
mov
sub
stos
xor
adc
dec
loop
mov
mov
adc
add
ja
out
mov
sub
bound
or
push
xlat
aam
push
add
sbb
push
sbb
or
jmp
xor
sbb
add
add
imulb
add
sub
sbb
jge
fisubrs
add
in
xchg
or
or
inc
cmp
add
in
jge
mov
or
call
jb
in
xchg
in
hlt
orb
inc
push
rcl
adc
adc
insb
lods
dec
addl
jmp
inc
xchg
insb
cmp
mov
push
add
add
add
aam
sti
call
ret
mov
adc
push
fs
cld
aas
call
shl
pop
pop
std
cli
inc
jnp
inc
cld
test
jb
pop
sbb
mov
and
push
xchg
clc
mov
mov
or
iret
push
jmp
cld
jne
jns
push
mov
or
push
push
adc
or
stos
mov
js
or
scas
jns
adc
int
push
fldcw
std
sahf
lods
jle
mov
mov
fs
or
or
push
scas
shll
add
out
xchg
dec
xor
imul
mov
cs
arpl
mov
shrl
std
jne
icebp
mov
imul
add
out
add
xchg
or
mov
std
sbb
mov
sbb
test
lods
test
sub
fadds
add
sbb
inc
out
pop
repz
scas
add
jle
adc
sub
out
mov
push
xor
les
bound
jne
jg
lahf
pop
jmp
mov
add
add
scas
push
pop
pop
loop
cmpsl
add
filds
fmuls
leave
into
int3
pop
lret
gs
cmp
into
xchg
subb
jb
addr16
out
out
lds
into
jmp
into
add
inc
leave
sti
out
cmp
add
jb
enter
lret
dec
loope
push
push
std
clc
out
aad
std
fmulp
cmp
add
add
add
mov
shll
out
je
call
cs
ja
push
in
das
push
push
jno
call
imul
jae
inc
rorl
aad
shlb
or
shr
outsb
addl
pushf
lret
xchg
dec
int
push
push
orb
push
xor
add
add
adc
xor
jns
sub
addr16
test
das
or
push
dec
inc
sbb
cld
jmp
sti
jne
pop
sti
push
sbb
sti
lea
cld
call
push
call
pop
mov
cld
push
xor
push
xor
add
mov
dec
dec
clc
push
mov
adc
add
add
pop
mov
adc
pop
les
gs
out
outsl
push
mov
gs
pop
mov
jle
inc
inc
fsubl
or
add
sbb
cmp
or
stc
sbb
add
mov
fnstenv
or
cmpl
push
jmp
xor
and
and
cltd
add
add
loopne
add
in
cld
cmp
flds
dec
fiaddl
std
sbb
out
cmp
and
add
out
jns
jb
icebp
fsubl
out
add
dec
scas
add
inc
out
push
add
add
sbb
aas
sti
sub
out
call
jns
int3
adc
daa
mov
sti
imul
lret
out
lock
loopne
push
in
xor
scas
cli
arpl
fxch
out
jno
out
ja
push
jnp
jnp
xlat
sbb
inc
xor
insb
jle
call
sar
mov
aaa
int
loope
add
call
push
std
pop
pop
lock
subb
fcoms
inc
xor
imul
sub
std
sbb
fmul
xor
int3
xchg
js
lods
xchg
clc
push
je
cmp
cmp
push
cmp
cmp
sub
xlat
lsl
lret
std
mov
mov
push
mov
jno
call
ljmp
js
xchg
inc
sarb
fdivl
add
cld
sub
cmp
lret
pushf
scas
je
add
add
add
sbb
jns
std
push
push
ja
inc
test
adc
adc
int3
pushf
mov
lods
xor
les
jno
mov
push
jg
pop
add
cmp
loop
jle
arpl
inc
jae
jae
std
cmp
insl
movsl
add
lea
add
add
pop
repz
pop
repnz
add
add
or
xchg
cld
push
gs
int
xor
lret
xchg
aad
add
mov
push
mov
jmp
inc
clc
mov
lret
pop
lock
pushf
lock
mov
mov
fnsave
aam
xor
inc
cld
push
test
inc
hlt
imul
push
push
pop
push
fcoml
fnstcw
out
pop
testb
add
add
ret
cmc
addr16
sbb
add
in
into
adc
push
mov
sub
ss
fsqrt
test
cmp
push
xor
jnp
fbld
pop
ss
xchg
int3
mov
jl
int
bound
jnp
xor
out
jle
cs
xor
jnp
int3
les
sti
enter
adc
add
sub
jae
out
add
xor
inc
enter
cld
divl
pop
pop
push
sub
fs
std
outsb
movsl
repnz
outsb
sarl
inc
or
jnp
cmc
jecxz
aad
ffree
pop
repnz
fs
push
or
cmc
out
push
std
add
xadd
push
push
jb
inc
in
sub
add
add
add
sub
fs
sub
jb
sbb
into
and
push
push
mov
fadds
pop
mov
xchg
sub
sbb
pop
jno
scas
fcomps
jg
sti
jmp
push
push
inc
inc
fdivr
movsb
push
call
das
fisttpl
sbb
mov
mov
xorl
and
pop
sub
pop
call
add
mov
dec
inc
in
push
or
xchg
cs
je
and
ficoml
std
call
lock
dec
jns
das
cmp
add
sbb
lret
xlat
das
or
pop
in
ljmp
add
outsb
scas
aaa
xchg
outsl
push
jne
addb
pop
dec
mov
add
incb
adc
aas
add
add
add
mov
int3
xchg
or
fstpl
fildl
xchg
mov
cmp
inc
jne
jnp
xchg
daa
add
fnstcw
cli
test
inc
ss
push
mov
xchg
mov
mov
sbb
inc
cmp
fstps
fiaddl
std
fwait
xchg
jp
and
add
addl
fcmovnb
sub
add
add
add
test
mov
fnstcw
loopne
adc
dec
das
sub
aad
add
ja
iret
ja
cmp
mov
aas
mov
mov
jmp
repz
xor
jle
ret
push
enter
xchg
enter
jl
ja
mov
iret
stos
mov
add
add
mov
out
es
stos
mov
lahf
sub
scas
pop
lds
sub
arpl
mov
mov
in
add
gs
loope
jle
dec
mov
push
jo
shr
daa
filds
add
subl
add
sti
push
mov
push
idivb
add
add
scas
std
push
outsb
rorl
add
in
cli
mov
xor
mov
jge
fisubrs
call
incb
repnz
pop
or
adcb
imul
pop
or
push
inc
push
in
lret
mov
xor
mov
clc
push
inc
xchg
inc
fdiv
add
add
add
xlat
fdivr
add
call
daa
outsb
lea
pop
call
int3
inc
or
pop
dec
push
fdivs
push
ja
lea
xor
mov
test
std
ja
shr
ljmp
mov
mov
add
clc
mov
push
sub
push
ds
jno
out
test
add
add
mov
stos
mov
and
add
inc
fidivl
ds
ret
std
inc
push
sub
out
test
sub
cmpl
js
stos
hlt
inc
jg
mov
mov
jle
ljmp
rcr
pop
addl
add
dec
scas
add
xor
ror
jne
out
xor
jecxz,pt
add
add
add
subl
mov
sahf
lods
insl
mov
add
arpl
out
add
dec
gs
jg
in
out
xor
push
push
notb
mov
xchg
pushf
cmp
xchg
test
dec
in
mov
pushf
fists
test
fs
js
push
jb
ljmp
insl
add
add
add
sub
mull
call
lds
or
mov
std
mov
shlb
test
mov
std
adc
mov
jno
std
andl
push
add
dec
pop
mov
xchg
mov
idivl
loope
test
jb
mov
mov
sbb
add
add
js
sub
add
ds
jno
add
fisubrl
push
or
or
cli
call
inc
call
neg
cld
ljmp
pop
call
mov
mov
mov
std
incl
orb
dec
call
xor
les
pop
lds
add
xchg
incl
add
add
rolb
imul
inc
in
call
add
push
lods
add
lea
idiv
call
push
dec
mov
jns
jge
sbb
adc
out
adc
fs
mov
sub
call
std
fisubrs
xchg
cld
adc
sub
lock
aad
add
adc
add
add
mov
sbb
test
mov
inc
sahf
and
mov
inc
mov
inc
fdivrl
xor
mov
sbb
inc
mov
add
out
ljmp
mov
lods
cmpsl
in
add
add
movsl
add
xchg
out
push
les
subb
pop
inc
lret
sub
out
add
add
add
push
add
lea
cmpsb
test
pop
add
push
gs
mov
out
add
dec
ja
shrb
adc
jmp
adc
call
push
stos
adc
pusha
inc
mov
stos
call
xchg
jo
les
in
mov
mov
add
add
add
les
test
imul
push
fs
dec
pop
test
dec
out
jg
out
jbe
call
or
adc
dec
push
pusha
mov
shl
ss
call
jne
mov
dec
mov
dec
push
sbb
jae
subl
cmp
subl
roll
add
add
data16
incl
test
lea
push
push
aaa
jnp
cmp
les
test
add
int3
inc
call
enter
jmp
add
mov
add
xchg
xchg
loop
push
push
sub
push
sub
test
and
shlb
adc
add
mov
dec
push
in
add
add
add
add
mov
js
pop
rorl
xchg
stos
imul
mov
mov
xor
mov
mov
pop
test
add
pop
std
fstps
push
clc
inc
jl
add
sub
inc
or
addr16
std
fstpt
inc
out
and
je
cmp
daa
add
sbb
add
or
mov
push
insl
pop
mov
add
stos
add
cmp
add
adc
ja
stos
inc
mov
xor
stos
ds
mov
adc
inc
ljmp
icebp
cmpsb
mov
out
es
push
mov
xor
dec
add
mov
add
add
add
bound
mov
push
mov
ds
mov
push
push
out
and
or
mov
add
pop
mov
into
mov
push
jecxz
fisttps
ds
jg
daa
pop
add
jb
shlb
jne
test
movsb
rcll
aaa
in
sub
sbb
cltd
add
add
add
inc
add
mov
inc
imul
in
mov
pusha
sbb
pop
call
jo
rclb
in
sub
fistps
call
pop
add
cltd
fwait
dec
std
sbb
add
outsb
adc
add
ds
push
and
addl
std
fstp
mov
add
add
add
fs
xchg
add
push
inc
dec
or
fdivr
incl
push
in
push
addr16
adc
mov
fdivrl
in
mov
push
lock
ljmp
es
add
inc
incl
mov
adc
test
jns
call
out
pop
mov
or
xor
testb
pop
fidivrs
jle
test
add
add
add
loopne
lea
gs
push
out
sbb
inc
rolb
mov
sbb
pop
call
pop
aam
shlb
sub
cltd
dec
push
std
sti
jg
inc
out
and
je
and
inc
js
mov
mov
cmpsl
add
jg
jbe
cmpsl
inc
mov
cmpsl
add
in
mov
clc
add
add
add
dec
or
mov
cld
pop
adc
jg
or
mov
sahf
outsb
push
or
mov
notb
push
out
sub
or
mov
ja
jg
out
imul
push
out
mov
dec
pop
push
out
mov
add
scas
stos
lahf
mov
mov
dec
xlat
add
imul
cs
sub
add
add
add
lcall
mov
lods
hlt
test
scas
inc
mov
or
mov
stos
mov
out
mov
and
ficomps
dec
bound
cli
imul
insl
shll
outsb
mov
or
mov
xchg
pop
jae
test
aad
xchg
xchg
repz
jmp
in
or
inc
ret
pop
stc
aad
das
push
mov
add
add
add
stc
int
xchg
mov
in
push
inc
fiadds
jmp
loopne
adc
jecxz
mov
jo
push
sbb
add
mov
xor
xchg
enter
sub
fidivrs
test
xchg
add
mov
ret
cmc
inc
pop
inc
das
rolb
lds
cmp
nop
xchg
cmp
add
add
jecxz
or
jg
inc
adc
test
mov
pop
pop
rolb
mov
inc
sbb
xchg
push
inc
das
jmp
leave
adc
adc
int3
outsb
jg
clc
lock
jb
or
shll
or
pop
inc
pushf
jne
das
out
call
add
add
add
add
mov
dec
out
cmpsl
jge
bound
mov
mov
xchg
or
out
cmpsl
mov
mov
mov
sub
or
mov
inc
mov
int
sub
sbb
je
das
adc
cmpsb
ror
mulb
mov
aaa
push
xchg
or
push
lahf
or
out
push
repnz
add
add
ljmp
fisubrl
negb
movsl
jl
cmp
out
jno
mov
scas
add
test
jne
mov
std
mov
inc
out
sbbl
add
out
add
addb
add
mov
hlt
adc
jmp
out
add
mov
stc
dec
lret
push
jg
divl
mov
jg
add
add
scas
add
out
add
lods
lods
adc
dec
ret
xor
xchg
jge
jmp
jge
jmp
in
sub
add
cld
xchg
outsl
xchg
in
add
jmp
out
std
mov
mov
bnd
ljmp
cmp
jmp
add
ljmp
add
add
add
add
jne
sbb
or
pop
push
call
iret
in
push
jmp
testb
dec
ljmp
add
ljmp
cmp
insb
sub
clc
add
aaa
cmc
inc
pop
push
sti
adc
mov
out
aam
adc
add
adc
fadds
sub
add
add
add
add
add
add
push
ret
push
or
or
or
push
outsl
lock
call
js
jne
push
mov
inc
xchg
dec
sti
adc
add
and
mov
adc
call
lret
or
cmp
std
jecxz
adc
add
lcall
cmp
xchg
test
add
add
add
mov
cli
test
out
push
inc
scas
std
jmp
repz
call
insl
popf
mov
scas
std
jp
ljmp
push
out
add
divl
sbb
cld
push
add
dec
call
push
jne
push
std
add
mov
fsubrp
aaa
or
insb
stc
cld
sti
mov
inc
out
add
add
add
add
popf
sbb
rolb
out
test
aaa
call
xor
mov
clc
sbb
lods
out
jge
dec
inc
incb
xor
sbb
aaa
ficoml
aaa
into
jns
add
xor
mov
or
mov
stc
movsl
pop
cli
adc
add
inc
xrelease
xor
out
jb
sti
hlt
jbe
sbb
mov
pop
cmp
out
adc
add
add
jmp
popa
or
ret
imul
add
lods
jae
jne
sti
push
jg
sub
aas
sbb
lahf
inc
ret
dec
mov
pop
xor
out
cld
cld
push
or
add
xor
or
test
and
cld
sbb
mov
jmp
add
jecxz
push
mov
std
cld
cld
mov
pop
jl
lods
mov
in
dec
mov
push
mov
loope
std
fmull
das
sbb
sub
pop
push
sub
xorps
repz
incl
push
inc
inc
es
sbb
mov
je
out
jb
add
shlb
xor
xor
jns
pop
adc
inc
and
ret
add
add
add
pop
jno
test
fiaddl
call
sti
incl
jb
loop
out
push
pop
sti
jne
pop
adc
add
mov
incl
mov
push
lods
std
gs
ret
push
push
repz
adc
cs
or
xchg
add
add
add
add
add
out
cs
adc
and
mov
and
out
mov
or
std
sti
iret
sbb
and
je
out
mov
out
xchg
push
cmp
vcvtpd2dqx
add
call
fadds
mov
add
pop
push
mov
jl
inc
scas
add
add
add
adc
lret
ja
sbb
cmpsl
add
idivl
clc
out
out
stc
pop
sbb
out
xor
fstpt
jo
es
out
lods
cwtl
aaa
lods
jge
ficoms
notb
daa
add
rcr
and
out
push
test
in
sub
add
add
add
xchg
add
add
movb
mov
inc
lods
xchg
add
add
add
outsl
add
cmp
ret
cld
lds
je
lds
je
outsl
cltd
push
aad
inc
je
and
jg
inc
ja
addb
push
mov
cmovs
mov
hlt
pusha
add
hlt
jo
cwtl
jmp
add
jg
flds
push
loopne
adc
ljmp
mov
add
add
add
adc
jmp
sub
jnp
sbbl
inc
add
cld
cli
adc
or
hlt
sub
push
push
or
lock
push
ljmp
or
lcall
cmovo
xor
xchg
jbe
inc
or
and
add
push
push
je
or
pop
sub
je
add
add
add
je
loop
std
call
xlat
pop
sub
push
sub
subb
pop
add
fldt
add
xlat
xchg
out
aam
add
xchg
add
xchg
push
aas
cld
push
cwtl
add
test
ret
ds
out
push
add
sub
out
xchg
jbe
jo
std
adc
pop
stc
ss
add
out
insb
cmp
add
add
out
mov
jle
add
cwtl
test
push
fwait
add
mov
les
out
sahf
adc
xlat
add
and
out
xchg
add
out
and
out
xchg
add
out
and
xor
jl
sbb
add
ja
pop
mov
adc
add
jns
clc
sub
lds
add
add
testb
jle
dec
mov
emms
mov
stos
popa
jmp
add
adc
jmp
out
ret
stos
ljmp
add
std
dec
faddl
jns
out
jnp
call
cli
inc
xor
jbe
movsb
aaa
push
xchg
cmc
popf
roll
push
aas
pop
or
loope
adc
bnd
sbb
add
add
add
cmc
xor
add
push
movsb
add
and
call
in
add
fdivrp
inc
adc
mov
inc
jmp
xor
mov
clc
loopne
mov
jb
adc
adc
imul
push
leave
dec
call
es
rcrb
clc
out
push
cmpsb
std
cmp
add
in
movsl
jae
add
add
add
or
cmp
inc
sbb
cmovs
std
call
test
in
xlat
incl
adc
push
pushl
jl
add
sbb
jecxz
mov
out
lahf
add
sbb
sub
xchg
cmp
jae
pop
add
xchg
add
add
add
add
mov
call
mov
pop
mov
dec
in
out
lret
sub
add
in
imul
mov
add
out
add
imul
int
add
xchg
xor
data16
mov
out
and
and
loop
push
push
movb
sbb
or
inc
pop
adc
hlt
pop
add
add
add
out
xchg
testb
jns
add
cmpl
cwtl
add
ret
mov
jb
add
out
mov
xor
gs
stc
imul
add
push
sti
or
pushf
mov
into
cmpsb
xlat
imul
add
imulb
cmpsb
lret
jne
clc
mov
out
push
push
cmpb
lock
add
add
add
icebp
insb
cmp
mov
in
jno
movsl
sti
das
fdivrs
adc
jnp
cmpsl
imul
imulb
cmpsb
push
push
inc
push
inc
mov
out
jecxz
add
in
mov
out
aad
add
in
add
test
cmpsb
jmp
imul
call
add
add
add
shlb
repnz
in
mov
jmp
mov
add
xchg
pusha
data16
push
test
push
sahf
std
pop
xchg
pop
or
pop
dec
adc
push
sbb
push
test
mov
lods
pop
lcall
push
ficoml
xlat
mov
in
add
xchg
inc
xchg
inc
add
add
fisttps
mov
add
add
push
cwtl
mov
out
inc
idiv
adc
inc
or
out
sub
dec
push
xor
out
dec
test
add
add
jne
sbb
insb
repz
xor
into
call
subb
fisubl
inc
cmpsl
sbb
cld
inc
or
push
sbb
int3
jns
inc
test
pand
add
add
add
add
pop
lock
out
add
addr16
add
cmc
sub
flds
mov
icebp
xor
pop
adc
push
in
into
cmp
or
lods
call
or
out
cmpsl
mov
sub
call
out
jb
imulb
cmp
mov
cmpsl
mov
push
push
add
cmpsl
add
add
add
add
test
add
cmp
mov
xor
mulb
popf
addl
cmp
jecxz
ret
clc
icebp
add
out
add
add
add
iret
scas
ret
cmc
aas
add
add
sbb
xor
es
rcrb
inc
lret
mov
add
add
add
imul
or
xor
sbb
add
add
add
mov
out
sub
sub
xchg
mov
sbbl
inc
pop
and
repz
add
mov
or
notl
push
jo
pushf
lds
xchg
add
push
jnp
ljmp
call
and
std
add
add
add
add
pop
xor
push
cmpsl
inc
test
in
add
mov
sub
sub
jg
imulb
call
lcall
mov
je
test
and
add
bound
jmp
clc
add
inc
or
xchg
cmp
out
icebp
mov
dec
js
add
add
add
add
aad
push
jg
add
pop
insl
adc
push
or
sub
push
push
aas
add
add
pusha
jno
cmp
push
test
sti
mov
pusha
jg
jnp
jae
hlt
fldenv
xchg
jmp
add
repz
lahf
aas
je
in
addr16
jmp
add
testl
add
add
add
inc
xchg
cli
push
inc
test
test
sub
cmpsl
add
adc
cltd
adc
mov
repz
add
add
mov
movsl
mov
jl
std
loope
inc
or
xor
push
cmp
fs
cmpsl
sub
in
cmpsl
add
inc
push
popl
fcomps
xchg
std
mov
add
add
out
add
add
scas
pop
into
call
loope
sahf
push
add
xchg
les
enter
out
dec
adc
lahf
fildl
cmp
add
add
popf
scas
add
pop
iret
test
rcll
lcall
pop
stos
add
push
push
push
mov
add
ret
cmpsb
testl
or
mov
mov
adc
stos
sub
out
jb
adc
jbe
lret
pop
insl
rclb
or
xor
jb
out
call
fidivs
lods
in
xchg
pusha
movsl
add
sub
pop
jmp
xchg
inc
jmp
dec
jmp
je
mov
lods
in
xchg
add
add
jmp
add
bound
jo
and
in
add
sbb
xchg
and
fdivr
mov
ljmp
xchg
inc
call
je
xor
cmpsl
mov
cmp
adc
into
cs
jl
inc
push
insb
or
shlb
pushf
ret
mov
add
push
mov
add
add
ret
cwtl
cmp
add
fdivs
pop
pop
loopne
or
add
or
cmp
imul
sbb
or
out
orl
add
aam
cs
dec
xor
out
out
ja
std
inc
and
lods
rcll
cs
sarb
add
push
imul
cmp
je
inc
imulb
out
test
pushf
adc
mov
jno
mov
fidivrl
test
add
test
add
push
and
imul
push
fdivs
xor
jbe
add
test
inc
fadd
cltd
pop
std
addr16
jne
cmp
sbb
arpl
out
addl
sub
lret
jmp
fucomp
lcall
jl
jle
sub
or
stos
inc
shl
add
fcomi
xorb
out
mov
push
xchg
out
mov
xchg
out
outsb
std
out
out
xchg
xor
ret
or
xchg
xchg
xchg
xchg
jnp
fldcw
lock
cmpsb
add
xchg
stos
mov
add
add
cmp
add
xchg
cmp
fsts
add
sahf
add
sub
xchg
ss
or
xchg
je
lds
mov
adc
push
push
adc
outsb
in
cld
fcompl
jae
pop
xchg
adc
gs
mov
xchg
std
jb
xor
sub
call
decb
push
push
add
add
add
clc
cld
pushf
add
lahf
fs
dec
aam
add
out
xchg
pop
stos
ficoms
fs
or
push
jne
je
shl
enter
ret
gs
daa
ds
mov
pop
jg
test
xchg
repnz
add
bound
cmpb
add
cmpb
and
add
add
das
jnp
fsubrl
add
lcall
rcll
in
adc
or
mov
std
dec
out
lret
pop
test
mov
mov
jmp
push
jmp
out
inc
jl
or
arpl
sbb
shl
daa
out
test
stos
inc
cs
add
scas
jmp
cwtl
jae
add
add
xchg
adc
dec
jp
sarl
out
addr16
mov
and
jnp
push
xlat
mov
call
jb
pop
test
add
test
xchg
jae
mov
push
ja
frstor
push
sbb
std
icebp
sbb
jge
out
add
add
insb
inc
or
mov
add
add
add
sti
add
jg
or
mov
fisubrl
xchg
out
out
xchg
xor
out
add
add
ret
dec
push
mov
test
pusha
xchg
jb
mov
test
and
bound
or
push
jmp
cltd
add
add
je
add
mov
sub
je
add
add
fiadds
add
add
add
call
in
xchg
cmp
and
test
pusha
jl
push
mov
mov
cltd
outsb
ja
xchg
xchg
push
and
cld
mov
fs
call
loope
adc
loope
je
orb
fs
or
jns
or
add
add
add
fcompl
ret
out
test
cmp
xor
xchg
std
jb
xor
into
xchg
std
add
shll
sbb
cld
mov
dec
cmp
xchg
add
add
rcrb
xchg
in
xor
mov
inc
and
jns
push
push
aam
xor
fdivrs
pop
icebp
dec
data16
lea
scas
shlb
adc
mov
inc
add
add
add
movsb
jno
in
mov
call
int3
cmp
in
aaa
lret
push
jns
add
inc
iret
stos
push
and
rorl
inc
dec
mov
push
pushf
dec
push
push
out
dec
sub
out
cltd
add
xchg
add
insl
out
mov
xchg
or
cmp
flds
std
mov
mov
push
rcll
adc
fists
jne
xor
add
add
add
mov
test
mov
vpaddb
out
ret
lock
push
popa
jmp
shl
push
cmp
add
fnstenv
pop
movsl
and
push
gs
xchg
pop
add
rolb
push
fimull
mov
xchg
stc
inc
out
add
std
inc
out
pop
jmp
stos
add
add
add
out
fldl
repnz
out
in
js
inc
out
lcall
fisttpll
mov
in
mov
out
std
imul
mov
add
cld
scas
lea
add
xor
imul
paddw
jle
lret
push
out
out
ss
and
add
jle
test
ss
test
mov
add
add
pop
push
adc
sub
je
mov
insb
mov
ljmp
je
xchg
push
push
cmp
inc
jmp
cmp
lock
mov
adc
repnz
mov
add
adc
hlt
test
add
ficompl
std
jns
xor
jmp
mov
sub
add
add
add
add
iret
cmc
adc
mov
outsb
inc
mov
push
jb
mov
cmp
push
scas
dec
mov
je
orb
push
enter
sti
call
mov
out
test
cmp
add
or
insl
or
fcomps
test
fsubrs
hlt
jmp
inc
mov
ljmp
or
dec
inc
add
add
push
fdivrs
and
in
push
add
cli
jne
mov
push
aas
incb
add
pop
out
xor
scas
fcompl
mov
decl
std
fwait
movsl
cltd
pushf
les
xchg
je
scas
push
add
push
add
inc
push
sbb
push
cmp
mov
aas
out
and
adc
mov
inc
leave
mov
add
add
add
xchg
mov
sti
cld
add
inc
std
out
mov
add
sbb
fprem1
aas
out
rorb
add
cmovbe
shr
ret
mov
push
add
inc
out
fwait
iret
inc
leave
lods
mov
jp
xchg
pusha
push
push
xor
add
leave
add
js
lahf
outsl
mov
add
add
add
push
out
out
jnp
push
in
divb
fistl
insl
push
in
lret
fucomp
add
mov
neg
inc
out
mov
out
ja
jg
mov
or
out
add
add
mov
add
test
mov
jne
cwtl
sbb
ljmp
jle
jmp
mov
jb
sti
cwtl
xchg
add
add
testb
add
add
add
in
mov
xchg
cmc
add
in
mov
pop
cld
leave
jmp
enter
ja
jmp
sbb
call
xchg
push
mov
mov
inc
ds
out
cli
sub
or
adc
lcall
sub
or
lahf
xchg
jb
add
cwtl
not
in
add
mov
add
add
adc
or
add
add
jno
lahf
fnstcw
add
shlb
clc
int3
js
std
mov
xchg
jp
call
dec
imul
call
mov
sti
add
in
movl
incl
sti
push
mov
xchg
cmovo
jl
incl
add
add
pusha
jbe
lock
push
xor
mov
jbe
out
in
call
je
mov
loop
rcrl
add
lret
fisttpl
xchg
hlt
cltd
add
fwait
and
push
mov
cli
mov
cs
filds
js
ficoms
or
out
add
cltd
add
jecxz
add
add
add
add
cltd
shr
pop
inc
cld
out
cltd
add
sahf
les
cltd
add
outsb
adc
push
cltd
add
out
cli
shll
lret
cmpsl
or
or
xchg
add
add
repnz
pop
adc
out
out
add
pusha
aam
push
add
cld
mov
ffree
out
out
add
add
or
leave
das
or
add
add
inc
xchg
sti
mov
add
js
jl
push
sti
jns
rep
shll
leave
add
push
std
into
dec
stc
add
subb
ret
shlb
mov
add
adc
xchg
out
add
stc
outsb
shll
call
jmp
fs
jbe
clc
out
dec
xchg
insl
add
add
add
or
sub
lock
cld
fmull
sti
mov
outsb
test
mov
std
mov
push
aaa
jmp
mov
sbbl
mov
shlb
clc
out
lret
into
add
pop
cltd
cmpb
mov
xchg
clc
or
jp
xor
jp
and
jp
and
add
add
jg
out
mov
add
loope
adc
inc
and
inc
inc
add
jmp
xor
push
ret
inc
add
orl
ret
rolb
lock
aaa
repz
jle
fdiv
inc
cmp
mov
add
push
push
lret
dec
call
pop
mov
lea
hlt
pop
jmp
jns
in
inc
add
add
pop
adc
out
cld
jae
push
or
sbb
lcall
test
les
add
out
cltd
add
mov
cld
jmp
inc
jl
jae
adc
sub
je
push
pushf
add
push
push
cmp
icebp
xchg
inc
adc
push
cmp
mov
add
add
lock
push
out
cltd
jge
bound
mov
lods
mov
cmpsl
paddsw
mov
out
mov
in
int
sub
sar
insb
cmpl
mov
adc
mov
ljmp
mov
in
addr16
popa
rclb
add
sub
add
out
inc
call
sub
add
add
das
jge
mov
out
subl
ja
push
add
jbe
pop
jmp
int3
add
lods
or
mov
std
fisubrs
or
mov
cli
into
imul
jmp
insb
mov
inc
lds
std
sbb
dec
ljmp
add
repnz
push
js
lds
std
fstpl
out
mov
adc
cld
fisttpll
out
imul
adc
mov
push
js
dec
int
sub
xchg
shl
add
adc
jmp
push
mov
jl
or
std
decl
int
jne
push
inc
or
add
add
xchg
shlb
clc
push
jp
push
pop
jb
add
scas
mov
lcall
jl
adc
call
shrl
ret
pop
sbb
movsl
push
mov
mov
jle
add
call
inc
roll
inc
adc
jg
or
jo
out
loop
or
insb
shl
imul
sti
sarl
call
add
lahf
xchg
push
fnstsw
clc
push
jmp
add
jge
adc
push
shlb
je
sahf
mov
in
add
cmpsb
cmc
jl
jae
addl
cmp
ljmp
xorl
imul
push
popf
mov
push
sub
push
mov
test
xlat
cmp
add
add
bnd
push
stc
add
jmp
push
aad
inc
out
jg
sti
rclb
mov
inc
movl
inc
mov
scas
xor
addb
shrb
cmc
into
sbb
ljmp
imul
pop
andl
outsl
jle
paddq
sbb
add
jg
jmp
shl
cs
jecxz
lods
sbb
lods
adc
jg
cmp
pushl
mov
jge
sbb
lods
cmc
movlhps
adc
cmc
sbb
add
inc
mov
xchg
imul
xchg
or
xor
push
adc
xchg
or
add
inc
imul
add
add
add
mov
push
in
mov
mov
add
idivl
jmp
stos
icebp
sbb
push
mov
in
add
test
or
and
adc
mov
call
pop
pop
jbe
xlat
pop
cld
push
lds
dec
dec
add
shlb
push
jns
add
mov
cmovo
add
add
xchg
mov
jne
xchg
add
out
cli
add
test
push
mov
loope
mov
dec
cmp
daa
pop
addr16
add
adc
ret
cmp
lea
mov
jl
add
or
dec
sub
shr
mov
push
js
adc
rorb
imulb
out
addr16
jnp
imul
add
add
add
or
lods
jb
push
std
push
cmp
repnz
mov
push
loope
jmp
push
push
aad
je
push
adc
add
mov
add
out
lcall
mov
cmp
ficoml
push
inc
out
add
jbe
imul
xchg
add
add
flds
cmp
push
jb
icebp
call
pusha
ret
icebp
jnp
sbbb
mov
push
mov
test
push
pop
addr16
or
jb
jmp
hlt
aad
push
or
loope
ljmp
or
inc
mov
insb
sub
fiadds
cld
shl
add
cmpsl
fsubrl
xchg
add
mov
add
shr
add
in
aad
aam
or
jo
jae
fildl
push
in
add
bound
add
push
in
push
subl
pusha
mov
outsb
cld
xchg
add
jmp
insb
xor
inc
loope
xor
jo
cmp
jmp
push
cmp
in
add
add
cli
sbbl
imul
ret
pop
pusha
jp
add
add
das
lds
mov
inc
incb
push
sbb
decl
ds
add
add
add
adc
std
mov
push
das
push
jbe
xlat
or
xlat
std
dec
fimull
inc
or
mov
add
add
add
std
call
movl
add
jp
inc
std
addr16
dec
inc
inc
xchg
gs
inc
add
cmc
lret
fidivrs
ds
dec
inc
inc
push
nop
dec
or
jmp
cld
sahf
imul
mov
add
mov
aaa
push
aas
push
xchg
cs
ret
push
add
pop
mov
out
add
add
add
andb
icebp
xchg
adc
out
inc
inc
push
incb
cld
inc
outsb
jle
or
fs
fldenv
jle
dec
push
mov
adc
or
jge
add
jne
or
sbb
add
imul
adc
call
add
ja
adc
xchg
aam
gs
jge
clc
movb
add
out
add
add
out
ljmp
mov
mov
outsl
imul
mov
std
cmpsl
pop
jmp
mov
movsl
sub
out
mov
cmpsb
ret
popf
jmp
cli
cmpsb
add
andl
scas
cmp
lcall
add
mov
add
add
add
mov
xchg
divl
xchg
lds
xor
in
xor
cs
ds
rorl
push
in
int
sub
sar
aam
mov
mov
mov
in
and
or
loop
mov
outsb
sti
push
pop
rorl
push
popf
pop
icebp
pop
inc
je
gs
xor
lret
icebp
add
add
add
rorl
cmp
inc
add
dec
mov
int3
test
test
cwtl
adc
std
jle
dec
mov
into
push
in
xchg
stc
cli
call
mov
mov
idiv
call
cld
decl
push
push
fisubrs
inc
mov
pop
hlt
sbb
and
xchg
add
add
mov
jl
negl
roll
inc
out
stc
jb
dec
inc
jmp
call
into
push
icebp
jbe
insl
mov
mov
jmp
push
jno
jp
cli
ljmp
jb
lock
or
inc
push
pop
stc
aas
out
out
lea
pop
lock
mov
add
add
add
stos
aaa
in
push
add
inc
out
loope
or
add
sti
fsts
mov
mov
or
cmp
imul
adc
in
push
test
add
inc
xor
lahf
inc
repnz
outsl
gs
sbb
inc
or
out
stos
fisttpll
cmpb
sahf
cmp
add
add
add
je
fnsave
out
in
repnz
jnp
push
mov
popf
les
icebp
out
xchg
cltd
dec
jns
cmp
sub
sbb
outsl
imulb
jmp
je
pop
ret
or
mov
jge
repz
ljmp
ja
mov
add
add
add
or
daa
in
mov
loope
mov
xchg
push
andl
unpcklps
sub
orl
mov
inc
add
jne
xchg
cld
aam
out
inc
or
std
mov
jne
loope
push
sbb
lods
jb
and
add
sub
or
jmp
add
add
add
bound
call
and
jl
and
dec
dec
push
cmp
ljmp
sarb
in
push
push
mov
pop
xchg
nop
sub
inc
add
mov
out
mov
xchg
mov
roll
mov
test
jae
in
imul
add
add
add
jo
mov
jmp
or
out
addr16
pop
das
rol
mov
lock
mov
jo
inc
ljmp
call
push
jbe
rclb
xor
add
scas
outsb
fadds
imul
gs
jp
adc
inc
or
mov
repnz
add
add
add
pusha
adc
out
faddl
repz
std
add
lods
aas
or
mov
fnstenv
addr16
sub
add
adc
add
sbb
jbe
add
push
add
sbb
pusha
sbb
stos
add
add
int
push
iret
adc
add
add
inc
xor
fdivrl
les
add
add
popa
outsl
aam
cld
shl
das
cmc
repz
ljmp
fadd
out
adc
add
inc
cld
filds
packuswb
pop
lock
mov
insl
push
or
insl
push
int3
sub
sar
stc
inc
sub
xchg
dec
ret
add
mov
mov
lods
outsl
xor
jmp
or
add
add
fs
loopne
outsl
mov
mov
add
scas
outsl
add
sti
adc
fldt
ja
jmp
inc
repnz
adc
scas
hlt
adc
xchg
idivl
jmp
inc
decl
ja
jmp
mov
mov
std
add
movups
xor
shlb
lret
and
push
ret
add
add
add
sti
sub
cmpl
call
pop
outsb
outsl
pop
cmp
repnz
stc
xor
lods
pop
cmpb
xchg
lods
insb
pop
je
dec
mov
push
cld
jne
repz
xchg
add
sbb
je
sarb
faddl
bnd
cwtl
lret
cmp
je
dec
mov
add
add
mov
push
out
sub
addb
jb
cs
jmp
mov
enter
testl
clc
push
pop
adc
xchg
add
test
jmp
imul
iret
sbb
fiaddl
pop
rcrb
cltd
std
lcall
repz
dec
mov
dec
push
adc
or
cmpb
add
add
inc
loopne
daa
fiadds
les
ljmp
push
cmp
sbb
cld
adc
xchg
hlt
pop
fiadds
xlat
out
jge
sbb
ret
inc
pop
cli
imul
push
mov
pop
xchg
insl
es
add
std
je
adc
insl
push
jb
inc
mov
fdivs
push
xchg
cmp
outsl
out
cli
add
cmc
pop
pop
addr16
add
add
add
mov
lds
cld
mov
insb
mov
cs
cs
clc
out
std
fdiv
ret
inc
lock
icebp
imul
vmovlps
std
ljmp
clc
push
out
pop
add
mov
xchg
add
jmp
pop
lock
push
subl
adc
push
push
add
add
add
cmc
sub
and
mov
outsb
std
add
insl
jae
out
or
js
std
sbb
clc
lods
imul
cli
inc
cmc
mov
mov
add
add
jmp
mov
imul
push
add
or
sbb
xlat
ret
push
mov
stos
stc
pushl
addb
ljmp
add
add
aam
add
jg
jae
lea
icebp
cli
test
jb
lea
out
out
repz
test
jno
xor
push
pop
hlt
sbb
or
xchg
cmp
call
jne
stc
int3
movsb
sub
test
pop
mov
dec
or
push
dec
out
or
std
fistpl
inc
out
faddl
add
add
add
out
movb
cltd
testl
ljmp
add
insl
call
sbb
into
pop
mov
or
addr16
jl
ljmp
std
rol
jmp
outsl
imul
pop
imull
cltd
incl
dec
xchg
pop
addb
into
out
sarl
imul
push
test
cmpsl
push
add
out
out
inc
jae
add
add
in
add
scas
and
idiv
add
add
mov
ficompl
mov
or
fistpl
ja
add
jp
insb
enter
mov
outsb
out
add
insb
enter
out
xor
mov
add
xchg
pop
inc
sbb
pop
out
out
into
std
pop
repnz
add
addr16
enter
jge
out
out
addr16
outsl
fcmovb
out
cs
jmp
sub
insb
jno
pushl
xor
push
scas
sub
outsl
inc
inc
std
cld
and
inc
jmp
ret
jle
jg
adcb
push
data16
adc
andb
sub
fisttpl
insb
mov
push
bound
add
add
pop
xor
pop
cmp
add
cwtl
js
push
adc
int3
xchg
or
fildll
fisubl
mov
call
sub
inc
or
inc
xchg
pop
xchg
pop
mov
pop
xchg
out
cld
test
mov
test
jnp
or
push
icebp
jmp
or
add
add
lahf
cmc
sub
pop
out
cld
aaa
lret
popf
mov
mov
sbb
jo
movsb
or
or
add
dec
aas
stc
push
out
je
sbb
ja
inc
jge
pop
xchg
lret
xchg
add
cwtl
out
push
add
push
lcall
loop
xchg
push
mov
mov
add
pop
add
sub
in
add
push
push
rol
adc
mov
addr16
add
xor
scas
push
jle
pop
outsb
sar
xchg
imul
leave
mov
lcall
sarb
fisttpl
jnp
dec
push
xchg
insl
sbb
cld
sti
xchg
inc
out
loop
push
addl
out
add
add
add
jmp
add
inc
xor
mov
out
add
mov
adc
gs
sub
arpl
and
pop
adcb
push
jl
push
daa
add
inc
fistl
gs
push
sub
pop
inc
push
out
add
pop
test
je
inc
ffree
mov
push
outsl
cmp
mov
add
add
add
movsl
xchg
js
lods
xchg
fstl
repz
jmp
ret
or
mov
push
pusha
fs
clc
fdivrs
bound
jg
or
mov
jge
pushl
jns
xor
dec
mov
cmpb
out
xor
subb
jmp
aad
add
cmp
add
add
add
cmp
std
stos
in
jnp
call
in
ja
sti
xor
and
test
out
jnp
add
in
push
push
inc
or
mov
or
mov
or
push
nop
push
rcll
rorl
mov
imul
push
les
or
adcb
jo
or
add
or
les
dec
or
fsubs
jne
cld
mov
pop
jl
or
push
shr
inc
sar
jmp
jmp
call
fucomp
xor
cmp
add
pop
out
test
add
cmpl
out
setne
out
push
jl
jp
sar
jl,pt
out
andb
dec
sar
bswap
cld
add
add
add
add
nop
inc
pop
add
fdivrs
pop
out
out
push
jge
mov
test
ljmp
pop
xchg
rep
push
add
adc
adc
push
mov
add
jns
add
fistpll
repz
and
jmp
outsb
inc
out
lods
or
xchg
add
add
jl
lock
ja
popf
mov
cld
ret
xchg
data16
add
add
push
inc
es
mov
jecxz
outsb
out
imul
sbb
jo
loope
cs
popa
push
outsl
pop
lahf
test
jmp
iret
and
mov
dec
imul
sub
add
fistl
jmp
add
xor
add
and
add
add
idiv
rolb
add
add
sar
inc
sbb
popf
and
add
jmp
stc
loopne
call
or
push
fisubrl
repnz
jno
jmp
loope
aas
jmp
and
mov
mov
cld
fptan
aas
jmp
push
stos
add
in
push
mov
in
inc
inc
lds
add
add
aad
add
in
xchg
mov
mov
xchg
hlt
xchg
rclb
xor
inc
cmp
call
in
add
and
inc
and
maxps
ds
xchg
mov
push
adc
or
adc
add
roll
add
add
add
add
xchg
add
pop
fwait
or
mov
add
iret
push
adcl
pop
add
inc
xor
mov
sbb
test
out
data16
out
add
push
sbb
out
add
jnp
push
sbb
xchg
adc
pop
sar
sub
andl
add
dec
mov
out
addr16
lret
add
add
add
out
pop
popa
adc
sar
sub
xor
popl
insb
push
jmp
adc
dec
arpl
daa
xchg
out
add
pop
adc
rcrb
cmp
lods
in
pop
add
push
dec
xor
sub
outsb
clc
inc
stos
daa
cmc
add
test
or
in
mov
pop
sub
adc
add
pop
and
outsb
in
inc
mov
inc
xchg
ds
les
mov
xchg
mov
pushl
or
fs
mov
sbb
out
mov
sub
xchg
ret
jo
loopne
stos
and
lea
push
add
xor
or
and
jno
pop
cmp
add
add
add
orb
fstpl
add
or
lcall
inc
loope
int
cmc
bound
jae
or
and
adc
mov
mov
inc
add
cwtl
mov
push
pop
cmpl
sub
fs
and
and
jo
and
and
sub
add
add
ljmp
incl
test
je
lea
add
and
add
or
shll
add
hlt
mov
add
test
cmp
movb
out
jle
decl
cmp
nop
sbbl
xchg
xchg
fmull
orl
test
jmp
test
add
add
add
push
lock
incl
lret
call
out
out
pop
cmp
testl
decl
imul
pop
test
imul
add
loope
and
xchg
mov
push
test
lds
inc
loop
inc
je
iret
iret
and
jb
mov
cmp
add
add
add
inc
adc
fs
mov
das
and
enter
ret
arpl
inc
adc
mov
add
hlt
mov
and
fisttpl
jge
add
lea
rcrl
cmpsb
negb
push
mov
sbb
sbbb
add
add
int3
add
out
sahf
or
mov
nop
sub
lret
fadd
sub
andl
in
pop
sub
stc
test
insl
push
out
pop
pop
into
pop
dec
aam
hlt
dec
int3
or
or
in
mov
jb
pop
icebp
adc
sbb
test
insb
xlat
add
push
cli
mov
add
add
add
je
xlat
add
sub
mov
aad
sub
into
mov
int
aas
mov
sbb
test
and
push
or
out
dec
xor
pop
pusha
hlt
lret
in
add
adc
mov
mov
int
pusha
test
cmp
adcl
add
push
add
and
add
add
out
xchg
in
and
js
add
or
inc
xor
inc
xor
xor
psubw
push
aas
xlat
and
imul
and
mov
in
jbe
mov
inc
repz
dec
lahf
nop
xchg
cmp
add
xchg
pop
pop
cld
fistps
xchg
add
jmp
in
jo
lea
add
add
add
adc
imul
pushl
sbb
inc
out
imul
aas
out
in
je
rol
mov
sbb
or
push
xor
xor
push
add
mov
into
repz
mov
ror
bound
std
push
cs
add
sub
lea
xor
mov
add
add
adc
ret
add
add
out
call
jae
shrb
push
push
aaa
mov
add
adcl
pop
inc
mov
add
shl
mov
das
inc
lret
icebp
pop
inc
jmp
ss
mov
pop
add
out
sub
in
mov
or
mov
pop
mov
add
test
mov
pop
inc
gs
add
add
pop
movl
push
pop
scas
xchg
pop
es
push
lea
sbb
add
jo
and
xchg
lds
jmp
outsb
add
jmp
in
cmp
push
jne
ljmp
lds
jg
add
add
in
add
jmp
in
add
jns
add
bound
mov
lods
stc
adc
push
pushf
xchg
push
dec
inc
jae
jbe
and
in
add
cltd
mov
pop
pop
aas
pop
inc
push
test
in
inc
call
lods
icebp
aas
jmp
aas
test
mov
test
mov
xchg
jnp
and
xchg
add
add
cmp
inc
and
add
inc
roll
std
call
test
pop
mov
xorb
pop
add
call
mov
inc
cli
dec
gs
js
inc
and
hlt
mov
call
jp
and
cld
call
pop
and
mov
out
je
test
test
lea
rsqrtps
xchg
jmp
sbb
shlb
add
add
add
jp
dec
push
fldl
repnz
and
imul
push
sar
sbb
and
add
imul
push
sarb
sbb
push
add
sbb
subb
mov
jp
mov
mov
cmp
pusha
mov
inc
push
fstpt
out
xchg
pop
dec
inc
jae
inc
test
add
add
cwtl
or
fistpll
add
lea
test
mov
mov
push
jnp
es
out
add
rcll
ret
pop
xchg
and
xchg
mov
mov
mov
mov
mov
jge
and
ljmp
int
loop
stos
sbb
push
insl
dec
popf
push
or
mov
push
je
int
add
add
sbb
stos
pop
push
and
xchg
add
add
inc
and
jb
jne
decl
scas
dec
cs
subb
or
cmpsb
sbb
rolb
push
shrb
pop
es
add
and
dec
add
jmp
in
les
sub
addr16
lock
and
add
add
add
jae
cld
push
jmp
icebp
add
bound
mov
xchg
adc
adc
pusha
mov
jp
or
ja
and
jns
push
mov
add
aas
and
add
mov
add
xlat
mov
push
aaa
mov
and
xchg
cld
pop
jle
pop
xchg
mov
add
add
add
jae
lret
add
pop
repz
je
fsubrl
je
nop
in
jp
add
insb
enter
popl
pop
leave
mov
add
test
sti
test
fsubrs
mov
mov
cmp
std
mov
mov
gs
add
in
ror
or
in
jae
jg
lsl
lret
or
add
stos
std
or
sahf
inc
or
out
pop
inc
std
mov
das
add
sub
sbb
mov
add
repz
inc
out
mov
add
test
pop
jmp
pop
push
adc
sar
add
iret
add
add
add
add
and
cmpsl
add
shl
ja
insb
inc
and
lcall
cld
xor
out
pop
in
mov
imul
add
out
enter
popf
jns
xchg
imul
cmp
sbb
jp
dec
mov
push
test
fucomi
lret
add
add
add
call
adc
ret
out
jl
jns
sub
test
push
ret
mov
mov
mov
push
lds
test
inc
pop
call
adc
mov
sub
push
adc
dec
pop
pop
xchg
push
call
jb
stos
pop
and
pop
vmovsd
aas
jmp
add
add
add
push
inc
add
addr16
fsubr
add
jmp
xchg
dec
orl
jb
and
sarl
test
ss
incl
mov
dec
add
cmp
add
js
push
push
js
in
scas
cli
mov
sbb
enter
add
add
add
jmp
jge
mov
popf
mov
out
movsl
inc
imul
out
add
shr
dec
call
test
imul
xor
mov
out
pop
adc
out
cmp
pop
or
inc
pop
pop
lret
dec
or
cmp
sbb
fwait
orl
add
add
add
inc
inc
mov
adc
lret
rolb
add
out
rorl
mov
adc
movsb
mov
push
test
fisubl
scas
add
cs
and
aad
sub
aaa
sbb
pop
jle
sar
inc
inc
lret
js
add
pop
cltd
xchg
sahf
push
addr16
out
mov
cmc
jno
add
add
add
icebp
mov
test
dec
push
je
add
sbb
sub
out
mov
push
xchg
out
out
out
push
stos
daa
out
mov
and
in
orl
add
fimuls
sbb
ret
popa
test
xlat
out
fbstp
sar
out
xor
out
add
inc
mov
andl
call
add
das
jle
dec
mov
repz
jmp
repnz
add
cltd
ja
je
add
and
mov
subb
pop
mov
js
pop
addr16
push
cltd
xor
add
push
add
inc
mov
cmp
add
cmp
mov
incb
mov
add
pop
dec
jb
add
loope
lods
sti
cmp
dec
add
ja
je
jle
cld
pop
movb
mov
cmp
inc
pop
movsl
cmpl
scas
jae
add
adc
inc
std
mov
sti
je
lret
add
and
les
cwtl
outsl
dec
and
lret
add
cmp
add
add
adc
jo
enter
cld
std
push
pushl
hlt
add
dec
mov
jge
push
pushl
add
dec
mov
popa
mov
or
scas
push
incl
push
inc
out
pop
js
leave
pop
inc
or
in
in
mov
out
pop
or
push
je
sti
out
loop
mov
jbe
cld
pop
es
mov
sub
subl
add
add
add
out
sti
jne
test
sbb
or
mov
aas
push
clc
jne
mov
push
push
adc
jae
cli
xchg
scas
add
aam
inc
aas
dec
std
push
loop
orl
xor
add
adc
out
mov
push
aad
sub
xchg
int
adc
pop
sarl
scas
sbb
sahf
and
ja
cmp
add
add
add
insb
stos
js
lods
lea
cmp
les
or
add
adc
adc
fsubl
jne
insl
add
and
dec
xchg
int
hlt
out
xor
roll
add
repz
das
pop
inc
movsl
test
std
out
test
add
ljmp
in
add
add
add
add
push
in
mov
dec
inc
jmp
inc
lock
jmp
movsb
stos
push
jb
jns
stc
popf
inc
jae
xor
movlps
int
ljmp
inc
stc
jge
cld
aam
inc
adc
mov
int
jns
push
adc
ljmp
fnstenv
pop
es
test
sub
add
add
inc
push
mov
fmull
incl
push
or
mov
mov
jmp
add
adc
mov
add
and
loop
jl
pop
addl
adc
adc
inc
nop
mov
push
lods
adc
cmp
cli
jmp
testl
out
mov
lcall
inc
add
fsubs
add
add
mov
or
test
mov
cmp
rcl
mov
mov
sub
stc
lods
pop
mov
scas
jg
decl
inc
std
dec
fcomip
add
push
inc
aas
mov
jae
out
out
pop
add
ror
jmp
xchg
add
out
inc
ja
out
pop
jl
sahf
lcall
sub
add
add
out
pop
jl
stos
daa
sar
ljmp
inc
cmp
aas
out
mov
add
cwtl
jecxz
jae
lcall
out
jbe
stc
sub
fdivs
sub
push
pslld
add
inc
adc
add
fisttpl
add
dec
inc
fcoms
push
ljmp
add
dec
and
les
inc
popf
movsb
lret
add
add
adc
and
dec
das
add
in
and
dec
das
add
repz
dec
das
add
sti
idivb
addl
mov
inc
cmp
lcall
pop
call
jne
inc
std
gs
push
imull
jbe
cli
stos
in
subb
sub
les
add
add
jb
std
xchg
mov
subb
inc
xorl
mov
std
mov
in
add
cmp
inc
mov
insb
sub
jno
jmp
mov
arpl
into
mov
shr
inc
jmp
ja
cld
pushl
inc
add
add
add
xchg
cld
xor
dec
insl
adc
mov
add
mov
add
push
call
push
cld
pop
ret
add
test
call
add
push
cmp
movsl
push
adc
std
add
add
shrb
imul
adc
add
rol
addr16
add
add
movb
inc
int3
clc
decl
addr16
out
das
ljmp
mov
inc
std
mov
add
sub
icebp
ds
jl
in
outsl
ds
out
sub
imulb
mov
cltd
es
out
sub
xor
inc
inc
out
sub
test
add
fnsave
std
mov
add
stc
inc
ja
add
add
add
sub
out
inc
std
ds
inc
push
ds
mov
inc
ljmp
sub
inc
inc
js
push
add
cmp
xor
add
jle
mov
inc
mov
mov
aas
cs
adc
fs
fimull
push
ljmp
pop
adc
add
incb
sub
add
add
pop
adc
adc
sub
mov
and
rol
pop
out
add
fists
stc
fstps
jns
orb
inc
popa
push
rclb
daa
add
test
add
fiadds
cmpsl
popf
add
xchg
mov
inc
dec
movsl
add
out
lcall
repnz
pop
ljmp
add
add
and
mov
cmpsl
cmp
adc
repz
mov
add
das
call
add
inc
pop
fmuls
std
rcrl
cld
mov
in
add
call
mov
adc
dec
cmp
or
pop
add
mov
cmp
std
adc
add
add
in
mov
inc
out
gs
ret
inc
std
mov
int
inc
push
in
add
test
adc
or
gs
int3
clc
incl
in
add
mov
lahf
sbb
mov
inc
std
mov
push
cld
adc
test
call
push
add
imul
xlat
add
sub
xchg
add
add
add
mov
mov
aas
out
sub
std
jecxz
push
inc
out
sahf
xor
cmp
shll
sti
mov
rclb
push
or
sub
inc
push
idivl
imul
clc
dec
mov
add
sbb
xor
test
and
aas
call
add
add
add
dec
sti
add
dec
movsb
jb
push
jbe
add
fnstcw
nop
mov
scas
sbb
add
sub
pop
fadd
out
scas
mov
mov
cmp
faddl
inc
add
pmaxub
mov
mov
cltd
add
dec
das
aad
xor
jae
out
iret
pushf
fadds
add
add
jbe
out
hlt
push
jg
add
adc
add
sbb
mov
sub
cmp
cmp
jge
stc
inc
adc
jmp
in
add
repnz
jmp
std
sar
xor
inc
jmp
cs
jo
lods
cmp
pusha
or
repnz
in
daa
add
stos
in
cmp
add
roll
add
jb
or
sub
inc
jmp
in
cmp
adcl
or
repz
call
xor
cld
in
adc
fs
std
into
jbe
je
xchg
xor
push
push
and
add
inc
add
add
add
inc
add
cli
incl
add
add
outsl
add
rorb
dec
cld
cmp
jo
das
aaa
stc
cmp
cld
mov
cmp
add
push
fcoml
add
test
out
cli
cmp
test
inc
add
inc
pop
sahf
movl
ret
mov
or
sub
in
daa
add
mov
add
add
add
jmp
sub
fldl
push
cmpl
cmp
sub
shl
dec
cltd
xlat
xor
sub
std
adc
inc
or
lds
add
push
and
test
add
lods
jl
into
sub
add
add
out
aam
and
add
add
pushf
add
mov
outsb
pop
call
mov
jbe
out
add
cmp
or
ret
out
dec
sti
popf
cmp
out
mov
lret
cmp
insb
enter
stos
test
mov
pop
pop
adc
add
dec
pop
dec
adc
add
lods
push
rcll
scas
add
xor
add
sbb
mov
push
orl
mov
add
sahf
js
and
aad
add
in
xor
or
push
cmp
repz
shrb
mov
test
mov
ss
in
std
inc
and
loope
push
bound
sub
cwtl
xor
xchg
sbb
mov
sbbl
ret
inc
ss
add
add
aam
call
jo
test
ret
lods
sbb
mov
cld
fcoml
inc
je
pop
mov
call
or
adc
sub
push
mov
add
mov
push
dec
mov
testl
cwtl
sti
jmp
aad
inc
das
shlb
mov
ljmp
inc
add
or
add
add
dec
pop
cld
push
stc
adc
std
test
stc
cld
mov
add
adc
dec
std
push
mov
xor
inc
xchg
dec
mov
cs
sub
arpl
add
dec
dec
push
lock
stos
push
aad
repnz
incl
stos
add
pop
cmp
mov
addr16
add
add
add
fdivrl
std
ret
imul
out
jg
add
sub
jae
or
loope
cmp
mov
xor
lcall
inc
or
mov
daa
aaa
inc
xchg
loop
cld
add
add
jne
push
jno
rcll
sub
mov
pop
fisubrs
aas
out
add
add
lock
add
add
cmp
unpckhps
inc
pop
das
into
pop
cmpsl
int
push
add
test
sahf
cmp
leave
add
add
or
fs
pop
push
je
leave
js
add
add
cltd
add
mov
movsb
fadd
mov
adc
add
lock
xchg
cmp
jg
or
xlat
cmp
xchg
mov
add
add
push
mov
cmp
add
xor
inc
jmp
cmp
std
add
test
out
add
ds
cld
pop
imul
dec
xchg
rcll
dec
add
push
add
jmp
in
xchg
sbb
mov
push
call
test
cld
xchg
je
pop
pop
mov
mov
in
add
xchg
add
add
add
dec
add
push
xor
pop
mov
int
fmull
jnp
fs
add
add
xchg
incb
inc
das
dec
push
lea
outsb
in
pusha
stc
cli
jmp
jge
inc
cmc
cli
je
xor
cld
jne
jnp
insb
mov
test
lcall
jo
call
jl
imul
add
mov
add
std
out
nop
cld
call
xorb
jmp
jns
pmulhw
or
inc
pop
push
in
decb
pushf
jp
cli
out
push
movsl
mov
shlb
xchg
mov
jne
mov
aam
fimull
out
daa
add
jb
inc
lret
clc
out
test
mov
push
imul
mov
add
mov
icebp
jne
repz
add
iret
movsb
aas
out
ljmp
je
dec
add
sbb
or
jae
ljmp
mov
sbb
ucomiss
scas
hlt
adc
mov
sbb
push
push
inc
add
out
add
mov
insl
xor
sub
add
push
adc
ss
dec
in
add
add
add
add
subb
ret
xor
mov
fs
sub
sqrtps
das
idivb
mov
fdivrs
aam
mov
jmp
inc
ljmp
cld
loopne
out
inc
fdivs
shrl
out
jbe
cmovl
out
insl
cmp
xor
mov
sbb
mov
add
mov
add
add
add
repz
push
ret
sub
jae
pop
outsl
inc
add
mov
cli
lods
rorb
add
addl
js
adc
loopne
mov
inc
call
jb
xchg
xorb
sbb
pop
sub
mov
sbb
and
test
cli
ja
add
add
add
out
and
mov
inc
je
mov
and
decl
cmc
jmp
xchg
pop
shll
and
repz
adc
imul
cmp
orb
pop
mov
push
pop
leave
adc
in
in
pop
das
std
pushl
push
fcmove
or
pop
shll
icebp
out
push
add
mov
add
xor
ds
lds
test
hlt
hlt
inc
int3
fisttps
movl
add
push
add
mov
inc
aam
add
popl
shlb
xor
mov
sbb
sbb
mov
add
imull
out
xor
repz
inc
out
divl
cli
inc
push
sbb
cmp
xor
add
add
add
pop
sub
pop
add
out
mov
mov
add
inc
out
mov
addr16
ret
dec
scas
out
pop
aaa
add
dec
ljmp
out
mov
or
sbb
and
add
lods
add
add
outsb
lret
in
jns
cld
xor
pop
cltd
shl
inc
stos
jne
add
jle
cmc
add
out
scas
mov
jl
inc
cmpsl
pop
jno
scas
sti
add
add
add
push
add
popa
shl
push
sub
sub
add
in
sbb
mov
sub
shl
mov
jle
sbb
sbb
pop
add
out
out
mov
icebp
sub
add
and
lods
add
jmp
push
std
add
in
ja
icebp
popf
sub
loope
sar
fimuls
js
add
add
add
mov
pop
xor
sub
jmp
in
ja
pop
shrl
jmp
pushf
in
addr16
jmp
shlb
adc
scas
cld
push
imul
jge
js
cltd
fimuls
pusha
fisubrl
testl
and
cld
adc
pop
rolb
mov
add
add
adc
pop
add
cld
leave
test
std
push
dec
or
jg
add
cmp
cli
call
mov
call
call
push
jmp
add
les
aam
lock
test
jb
push
icebp
adc
and
cmp
pushl
add
cmp
sbb
dec
push
pushl
dec
add
add
add
das
add
mov
lcall
cs
push
jne
sub
mov
jae
inc
push
addb
jg
jnp
test
out
xchg
sub
push
xchg
and
inc
jae
std
add
mov
lret
push
sbb
pop
add
xchg
sub
fsubrl
add
add
jae
push
mov
daa
clc
outsl
add
or
pop
rclb
add
dec
adc
add
mov
adc
push
add
inc
jp
popa
or
or
or
mov
jp
jp
call
in
loope
call
stc
sbb
jge
sub
pop
or
add
add
jge
add
push
xchg
add
testb
add
popf
xchg
fwait
adc
ja
push
jle
xor
out
rolb
ret
aam
loope
call
add
hlt
lea
inc
jmp
lods
daa
cmp
repnz
xor
into
cld
lcall
aas
jmp
add
add
in
add
mov
xchg
mov
push
pop
imull
repnz
jmp
data16
insl
xor
jmp
pop
es
iret
outsb
fs
out
add
jmp
rorb
jecxz,pn
add
call
pop
push
cld
adc
xchg
inc
and
ret
dec
jmp
mov
xor
add
add
inc
mov
out
nop
add
scas
inc
lret
pushl
inc
std
ud2
es
add
hlt
mov
cmpsl
inc
and
dec
gs
hlt
aas
daa
call
adc
and
mov
imul
jle
je
dec
cld
adc
js
into
push
or
cld
adc
push
mov
adc
rcl
xchg
add
add
xor
add
in
push
xchg
pop
add
jg
xor
sbb
xor
adc
out
pop
add
out
pop
shll
movsl
aas
inc
mov
sbb
rorl
inc
out
add
std
fidivrs
je
xlat
add
xchg
and
jns
mov
ljmp
cmp
add
dec
fdivr
loope
jle
ljmp
inc
out
pop
add
loope
loopne
xor
lret
daa
out
add
js
fsubr
push
out
add
jno
and
popa
sub
and
inc
jecxz
test
mov
ja
call
shl
pop
std
dec
xchg
fidivrs
lods
sub
lret
sub
add
sbb
mov
add
ret
add
add
aad
testb
mov
xchg
adc
pusha
jno
imul
out
out
sarb
js
and
cs
push
mov
sub
or
popa
lcall
test
push
stos
inc
sbb
pop
les
dec
lcall
in
jmp
jns
add
bnd
add
add
add
add
mov
pop
pop
adc
fldt
jbe
int
mov
jmp
vmread
lods
and
jmp
pop
std
cld
std
mov
lods
and
dec
push
pop
mov
and
inc
add
sub
je
fdivs
dec
std
cmp
cld
jmp
jne
pop
decl
pop
dec
movsb
loopne
add
add
add
and
push
mov
dec
push
popa
sub
push
aad
out
fsqrt
test
call
add
dec
cmpsb
ds
mov
lods
fsts
push
movsl
ds
dec
js
push
adc
cld
xchg
lods
fdivs
scas
cmp
jle
mov
jae
mov
adc
add
insl
sar
jae
xchg
sbb
add
xchg
cmp
inc
cmp
out
adcl
sbb
lret
sbb
leave
fdivrp
add
arpl
cmp
push
fcoms
je
push
dec
or
pop
sbb
lods
pop
add
jmp
sub
sbb
sbb
jmp
add
out
or
pop
sbb
jne
inc
call
add
test
imulb
aas
push
add
push
aam
repnz
daa
dec
jbe
andb
fldt
xor
lcall
push
cmpsl
add
inc
imul
daa
aam
or
shll
push
push
mov
dec
cmp
icebp
mov
loopne
rorb
leave
cmp
jg
add
add
jbe
out
inc
mov
xchg
stos
mov
imulb
out
out
mov
imul
mov
xor
or
jmp
cmp
pop
arpl
das
mov
shl
jb
add
lcall
sub
adc
jle
xchg
add
add
add
add
pop
std
mov
xchg
sub
bound
sub
adc
test
rcrb
mov
xchg
outsl
mov
jmp
dec
popl
add
in
sub
fcmovnbe
in
hlt
or
cli
jne
cld
cmp
shl
sarb
cli
aaa
mov
add
add
mov
push
cmp
add
add
add
test
push
add
loopne
int3
adc
xchg
fistpll
incl
dec
in
or
add
sbb
call
dec
ret
cmp
and
sbb
orl
cld
orl
cld
xor
incl
out
fisttps
mov
lods
sub
pop
inc
jmp
fisubs
push
rolb
add
add
sbb
push
xchg
cmp
pusha
aas
or
jl
in
insl
fmull
push
rclb
fst
iret
cld
fwait
pop
sbb
and
add
jmp
daa
xchg
add
mov
inc
or
out
decb
aad
push
mov
cmp
mov
add
enter
daa
cld
shl
add
add
add
mov
leave
jns
and
push
stos
jmp
sub
push
cmp
xchg
sbb
cwtl
sbb
inc
cltd
jmp
aad
cmp
mov
jbe
out
fsubrl
movb
test
add
sub
mov
sub
add
loope
and
bound
xchg
mov
add
fnstenv
and
aam
clc
mov
ljmp
ljmp
jmp
pop
inc
ret
scas
mov
sub
adc
imul
push
mov
or
clc
in
jbe
mov
enter
hlt
mov
lock
xchg
stc
adc
popa
ds
sub
popl
insb
add
add
add
mov
bound
push
test
scas
mov
out
pusha
mov
mov
adc
test
xchg
dec
aas
adc
sbb
add
shlb
cli
je
test
add
xchg
mov
loope
rolb
ja
sub
or
into
add
dec
add
add
add
add
fadds
loope
or
loopne
xor
loope
or
push
call
sub
jo
insl
cli
je
push
mov
pop
int
ret
decl
ja
xchg
cmp
inc
adc
fsubl
pop
inc
or
inc
sub
sub
test
mov
inc
inc
push
insl
andb
add
add
add
add
out
repnz
mov
rcrl
test
fidivl
fcompl
xor
pop
cmc
adc
cmpsb
movsl
out
out
cmpsb
movsl
repz
insl
add
mov
jge
call
push
xchg
push
test
inc
divb
out
repz
std
insl
add
or
jno
fxch
pop
cld
ja
out
shrl
cmpsb
mov
add
add
jno
scas
repz
push
in
jge
add
mov
cltd
icebp
test
mov
xchg
xlat
xchg
imul
testb
pusha
and
icebp
xchg
adc
sub
out
lods
sbb
cwtl
aas
xorl
jno
rorb
xchg
inc
popf
test
mov
test
jecxz
jge
add
add
add
add
imul
add
jl
push
xchg
stos
add
push
pop
add
aam
or
mov
lcall
arpl
mov
jmp
ljmp
and
mov
push
mov
inc
je
xchg
sbb
pop
repz
ror
cld
repnz
jmp
add
add
add
in
add
daa
push
push
dec
adc
inc
add
add
ret
push
mov
push
xor
sbb
sbb
sub
mov
push
mov
icebp
adc
std
aaa
sbb
ficoml
xchg
push
sbb
aam
lds
xchg
adc
int3
aas
add
dec
lahf
outsl
and
add
cmp
inc
je
dec
or
or
pushl
adc
imul
push
push
add
cld
sbb
out
inc
sub
inc
or
aas
out
jae
call
sub
inc
out
mov
stos
out
inc
call
out
aas
out
add
je
scas
cmpl
mov
sti
pop
out
aas
out
lret
sub
fadd
add
add
add
pop
or
lret
cmp
xor
sub
dec
pusha
add
sbb
shl
mov
pop
mov
out
pop
add
cltd
xor
fwait
js
jmp
sub
pop
adc
out
adc
push
fadd
out
decb
cmc
test
incl
cli
fimull
pop
add
mov
mov
add
add
push
push
hlt
mov
scas
sub
mov
cmp
xchg
testb
add
shl
imul
sub
mov
or
sub
add
mov
out
mov
pop
bnd
add
xor
add
in
xchg
vpsadbw
in
jge
sbb
xchg
add
jmp
add
jae
outsb
inc
or
jmp
mov
xchg
mov
pop
imulb
aas
jmp
add
adc
lahf
lds
clc
jmp
fsts
mov
xchg
dec
cmpl
add
or
fiadds
movsb
loope
rcll
xchg
dec
adc
cld
jae
add
add
add
push
dec
jmp
sti
adc
test
or
jb
cmpb
je
mov
adcl
push
pop
arpl
dec
inc
stc
lea
orl
pop
std
jle
fwait
push
cld
adc
sbb
out
movsb
mov
rorl
les
clc
xor
incl
std
ljmp
add
add
orl
inc
push
std
incb
push
inc
out
sub
sti
fldl
inc
out
shr
arpl
imul
xor
out
push
sub
inc
std
incl
push
add
cmpsb
loope
aam
mov
or
xor
fucomi
jecxz
std
jecxz
lock
out
or
sub
xor
add
add
ret
lcall
sub
add
mov
sub
out
cmpsb
inc
add
in
or
sbb
out
mov
cmpsl
add
jle
fucomip
add
incb
cmc
xor
ds
inc
add
repnz
sub
or
fucomip
add
incl
add
repnz
add
add
add
call
stos
jno
insl
adc
insb
or
sub
adc
xor
pop
stos
jnp
xchg
sahf
test
scas
mov
stos
cmp
out
jbe
lret
pop
and
insl
inc
add
dec
stos
mov
xor
mov
mul
icebp
mov
xchg
gs
js
add
pop
adc
add
add
cmp
add
add
outsl
or
mov
in
fmuls
addl
std
mov
cwtl
inc
or
fs
push
cli
add
roll
std
fiadds
je
xlat
add
jge
je
divb
aas
jmp
cwtl
jns
xchg
out
sarl
aas
dec
sar
rcrb
or
imul
mov
jp
cmp
add
add
xchg
sub
push
jb
xor
push
pop
ret
or
cld
ret
loopne
and
sub
or
adc
test
or
push
push
scas
push
and
pop
das
decl
ljmp
and
push
mov
add
mov
cmp
and
jbe
xor
add
into
out
add
add
add
ljmp
pushl
inc
push
mov
xchg
in
addr16
flds
xorl
sbb
mov
gs
in
push
fdivrs
pop
add
lahf
arpl
lods
sbb
aas
out
xor
outsl
sti
pop
add
fdivrp
add
mov
and
sub
dec
jns
sbb
incl
add
add
mov
xchg
repnz
sub
mov
mov
sbb
cmp
popf
mov
and
mov
mov
les
test
push
arpl
stc
fs
in
xchg
cs
push
call
mov
inc
xchg
dec
das
mov
daa
outsl
sbb
mov
aam
sbb
add
add
add
xchg
iret
push
mov
stos
add
push
aam
cld
shl
hlt
nop
repz
in
push
aam
mov
add
add
mov
add
jmp
sbb
add
scas
out
repnz
or
adc
repnz
add
cld
pop
in
push
inc
jbe
stc
fucomip
xor
cld
adc
jns
out
add
add
add
insl
stos
xchg
sbb
cltd
cld
xchg
pop
pusha
addr16
inc
push
push
adc
cld
test
or
jl
push
inc
insl
mov
jmp
dec
push
lcall
adc
in
mov
outsb
shr
mov
push
xchg
cld
int
add
cmpl
push
mov
mov
shlb
cmp
je
addl
add
add
jno
or
jae
cmpb
imul
add
les
mov
add
add
xor
stc
or
or
xchg
cld
or
cmc
test
add
je
test
daa
mov
jge
test
sub
mov
add
ljmp
out
stc
xchg
inc
inc
xchg
mov
mov
add
pop
cld
ljmp
xchg
and
pop
add
ja
xchg
push
mov
hlt
movsb
in
sbb
add
outsb
mov
push
pop
xchg
cmp
push
test
repz
jle
movsb
add
out
sub
in
and
jle
lock
adc
in
push
add
out
out
loope
cs
and
and
cs
in
sbb
add
out
in
xor
add
add
scas
call
jne
add
mov
ljmp
sbb
push
aas
jmp
gs
test
out
jnp
jae
outsb
shl
popa
ficoml
repnz
rcll
roll
or
insb
movsl
out
out
andb
add
notl
inc
icebp
mov
aaa
pop
test
mov
add
mov
mov
push
andb
loop
fiadds
out
add
or
cli
arpl
rorb
add
imul
sub
sub
call
sub
std
imul
out
loopne
dec
pop
std
cmp
pop
icebp
jg
mov
sarl
insl
adc
adc
pop
jle
jmp
xchg
inc
mov
add
loopne
enter
jecxz
sbb
imul
adc
mov
xor
and
and
adcl
jae
insl
adc
add
add
pop
pop
imul
imul
or
jns
pop
cmc
xor
lcall
jb
cmp
mov
add
add
add
xchg
sbb
les
xor
sbbl
in
cmpb
push
ret
inc
scas
int3
orb
jno
xchg
hlt
push
jne
imul
rcll
add
sbb
and
gs
cwtl
xor
or
mov
cltd
inc
enter
add
push
xchg
and
pop
test
add
add
add
out
xchg
pop
xchg
sub
mov
cltd
dec
enter
add
sbb
sti
jg
push
xchg
add
loopne
mov
outsl
fadds
or
adc
and
cltd
insb
pop
add
insb
pop
add
pop
add
insb
pop
add
insb
pop
add
insb
pop
add
insb
add
add
add
add
or
jp
adc
push
add
repz
jp
sti
sbb
sarb
sub
fnstenv
call
add
jp
cmc
imul
popa
mov
mov
shlb
sbb
repz
pusha
mov
add
addr16
mov
sub
or
push
jp
jmp
add
add
insb
inc
shll
addr16
inc
xor
mov
je
fisttpll
jge
out
mov
xchg
in
inc
mov
idiv
call
stos
xchg
add
loope
lods
popf
xchg
add
loope
or
out
jge
add
adc
and
push
hlt
call
jmp
je
hlt
mov
add
add
sub
add
call
lahf
mov
cmp
insb
jecxz
jmp
sub
aas
add
xor
movhps
cmp
or
xorb
jle
mov
hlt
inc
rcpps
cld
call
and
mov
ret
mov
mov
mov
or
dec
incl
repz
add
add
add
lret
xchg
ret
and
cmpb
test
std
call
repnz
ror
or
inc
jnp
and
add
inc
push
jno,pn
int3
or
jae
adc
out
fbstp
subl
sti
mov
adc
mov
inc
adc
cli
subb
add
fstl
out
lock
add
add
leave
add
add
mov
clc
subl
add
xchg
or
stc
pushf
scas
add
sbb
scas
inc
push
test
or
cmc
sbb
test
leave
cmpsl
in
std
jg
and
jae
inc
inc
jmp
jns,pn
or
mov
imul
cmp
xor
out
mov
mov
add
jge
cli
stc
add
jno
lods
lock
repnz
test
push
or
lret
mov
out
addr16
idivb
jmp
or
mov
mov
lds
loopne
fidivrs
xor
sbb
fdivrl
test
add
icebp
lcall
add
add
jno
pop
ret
dec
or
mov
mov
and
mov
dec
in
jle
fsubr
add
scas
in
ret
shr
insl
mov
xchg
jb
in
subb
mov
xchg
icebp
sub
jmp
testl
pop
mov
inc
add
add
xorb
add
push
fstl
jmp
jmp
or
jg
push
or
jle
std
lcall
or
jmp
leave
inc
incb
jl
cmp
sbbl
into
rcl
rorb
jge
jl
pop
dec
mov
inc
and
testl
sub
add
add
cmp
and
cld
incl
or
jp
and
clc
std
xchg
rorl
stc
cld
call
or
inc
out
das
add
sub
add
push
lods
hlt
incl
fildl
insl
sub
cld
insl
and
cld
outsb
arpl
jae
push
or
fidivrs
sti
jmp
jmp
xorl
std
outsb
xor
add
add
add
out
daa
mov
or
jmp
jg
out
jmp
std
out
fiadds
add
mov
imul
out
scas
mov
or
jmp
jge
out
jmp
stc
out
add
add
lea
xor
or
mov
cmovge
orl
xor
stc
dec
cmp
add
andb
or
add
sbb
inc
fsub
add
addl
ret
flds
bound
hlt
data16
ljmp
mov
out
retw
xchg
clc
mov
pusha
mov
mul
into
negl
cmp
testb
push
mov
adc
daa
in
or
mov
out
jae
add
add
add
inc
fnsetpm(287
ret
or
in
cmp
jno
jg
and
rolb
inc
adc
xchg
enter
gs
xor
inc
adc
pusha
cmpb
cmc
hlt
je
loop
rorb
inc
adc
xchg
decb
add
add
insl
negl
out
cmp
in
mov
leave
mov
cmc
xchg
addr16
in
mov
cs
jne
add
add
add
inc
add
or
inc
mov
in
into
jmp
test
addr16
shl
in
cmp
add
std
or
mull
inc
mov
in
or
add
rorl
setle
add
xor
or
add
inc
xor
push
int3
add
sbb
je
add
add
add
adc
jmp
pop
cld
or
adc
push
add
loop
call
enter
out
test
mov
sar
inc
pop
icebp
addr16
or
jmp
inc
or
jmp
inc
push
out
mov
stc
dec
test
push
inc
je
mov
sub
inc
push
je
mov
add
add
jmp
adc
mov
push
or
ret
add
in
push
test
push
add
mov
inc
fsubr
in
dec
mov
push
add
stos
movb
in
ds
sub
test
jne
dec
ss
dec
add
das
js
dec
out
cmp
out
sub
adc
movsl
dec
clc
add
sbb
lods
dec
loopne
xchg
push
add
add
add
inc
fldl
add
dec
clc
add
or
or
testl
out
mov
cmp
test
jbe
xchg
add
ret
roll
out
add
arpl
aaa
mov
test
call
lock
imul
ret
add
add
add
loop
call
repz
imul
add
daa
inc
push
icebp
inc
jecxz
call
cwtl
push
andb
xor
adc
loopne
inc
push
loop
lret
call
js
xorb
outsb
pop
daa
aaa
adc
adc
idiv
filds
movb
pop
adc
sbb
call
cld
decb
add
add
add
je
add
mov
xchg
std
lds
adc
nop
xchg
jg
adc
xlat
idiv
push
lret
add
testl
std
lds
or
jae
idiv
je
jge
add
sub
dec
adc
push
jge
push
sub
movb
out
xchg
cmp
add
mov
inc
addb
add
add
testb
out
loop
clc
sbb
aaa
xor
sbb
add
or
les
xor
adc
add
fs
pop
out
jmp
xchg
jmp
or
add
sub
or
mov
or
out
jmp
test
out
add
fwait
loope
inc
sar
mov
add
add
lret
jge
in
add
mov
inc
jmp
jmp
xchg
jmp
insb
xchg
jmp
adc
cmc
push
add
add
xorl
jecxz
xchg
xor
and
ror
adc
lock
adc
cli
or
fldcw
sub
or
add
imul
icebp
pop
addr16
in
jo
add
add
add
pop
jl
in
and
inc
cmp
cwtl
or
out
mov
pop
insl
neg
sub
add
ret
xor
xor
mov
add
popa
sub
cmpsl
add
or
push
ret
andl
in
add
push
or
call
push
mov
add
add
fucomp
out
add
mov
stos
cmc
and
xor
stc
push
out
jo
sti
xchg
inc
mov
add
cmp
mov
and
call
push
mov
in
rolb
add
mov
cmc
bound
sub
bound
add
add
add
sub
adcb
or
inc
inc
std
sub
mov
shr
add
xchg
idiv
pushl
jge
xor
inc
std
sub
add
push
xor
inc
inc
sbb
add
and
addr16
test
testl
cli
inc
stc
mov
add
add
test
sbb
cli
int
adc
xor
xor
clc
loop
add
dec
lds
out
pop
les
imul
and
ljmp
and
stc
xchg
rolb
jmp
jo
insl
rolb
je
addr16
or
out
fwait
ds
add
out
jmp
jmp
add
add
add
jmp
jmp
push
faddl
add
add
add
add
mov
xchg
mov
jg
add
loope
out
mov
stc
icebp
or
in
out
repz
mov
aaa
sbb
ret
mov
push
jmp
add
inc
repnz
and
jmp
lds
xor
jo
add
add
lock
or
lods
int3
or
add
shrl
out
xor
ljmp
add
outsb
pop
repz
jmp
jo
jnp
in
add
add
stc
or
push
sti
call
les
push
jmp
jnp
add
add
jmp
jae
jnp
in
add
add
repnz
imul
add
fidivrs
ret
cmp
jbe
jmp
lock
scas
scas
decb
nop
sbb
cmp
arpl
dec
adc
js
pop
arpl
orb
cld
dec
aas
add
scas
movsl
add
xlat
testl
push
add
add
add
add
fidivrl
xlat
bound
sbb
or
fnstcw
add
jge
add
jno
add
xchg
std
in
mov
jg
ss
cltd
xor
fcoml
sbb
into
or
imul
mov
and
adc
jp
subb
push
mov
out
inc
add
add
add
insl
ds
rcr
add
cld
insl
mov
and
out
flds
lds
fldcw
jmp
jmp
fnstcw
sahf
outsb
add
xchg
pop
stc
push
stc
pop
in
add
fnstenv
shlb
mov
lret
or
mov
inc
in
pop
cli
or
add
add
add
add
inc
call
and
jmp
in
add
mov
sbb
dec
lret
aas
rclb
adc
mov
sub
and
movsb
push
adc
mov
sbb
ja
inc
add
sti
test
ret
pop
adc
out
outsb
jmp
jo
movsb
add
fildl
ds
orl
xor
dec
cli
adc
mov
insl
add
cmp
lods
out
in
add
jmp
mov
cmp
inc
mov
xor
scas
shrb
xchg
pusha
enter
jmp
add
addb
cmpsl
out
out
out
add
std
dec
cld
xchg
sub
and
jne
add
fiadds
jmp
add
add
add
movb
sti
sub
out
cld
jb
std
xor
ss
out
cmp
aaa
in
jp
in
int
mul
ljmp
add
insb
std
incl
in
dec
outsb
fadds
push
add
ds
add
clc
inc
setae
test
pop
add
mov
mov
or
call
add
add
add
xlat
js
or
pop
or
addl
call
xchg
jmp
or
add
pop
add
orb
pop
ret
out
pop
in
cld
stc
arpl
add
xlat
jnp
out
push
or
adc
add
popf
dec
add
xorb
add
stc
push
sarl
add
add
add
inc
out
fiadds
jg
in
cmpl
add
pop
add
add
push
jmp
pop
mov
imul
mov
subl
and
gs
add
out
add
add
fldz
inc
in
outsl
inc
add
pop
or
mov
mov
les
imul
insl
je
repnz
iret
pop
repz
add
add
add
iret
out
add
icebp
stos
pushl
out
sbbb
sub
fnstsw
xchg
inc
out
insl
inc
je
or
fwait
add
in
adc
out
add
and
cmc
mov
cmp
add
sub
fdivs
cmp
jg
add
xor
adc
add
add
add
clc
lcall
call
idiv
call
inc
pop
add
in
jns
shrl
call
lret
add
mov
push
lock
sub
loope
in
or
mov
mov
or
lret
out
cld
push
push
testb
in
cld
ds
or
add
add
add
cmc
cs
repnz
imulb
addb
add
jbe
add
int3
cmpsl
cmpsl
jae
test
add
mov
in
xchg
insl
int
cmpsb
jae
mov
incb
jecxz
add
rol
sti
je
mov
movl
add
adc
mov
add
lcall
add
dec
cmp
cmp
mov
incl
insl
ret
call
dec
mov
sti
call
mov
mov
addl
in
shl
sti
sub
and
out
xchg
clc
mov
mov
or
ja
and
xchg
out
fidivl
fs
xlat
sub
jmp
xlat
std
mov
mulb
or
add
add
xor
add
sub
add
push
jmp
inc
out
test
add
add
pop
in
jb
push
jmp
clc
push
movl
out
fadds
add
cld
mov
add
jp
clc
inc
push
or
mov
push
cld
mov
out
incb
add
add
outsl
jo
add
jnp
and
jl
add
idivb
add
out
out
andb
out
add
insb
cmpsb
jnp
adc
outsb
pop
jmp
idivl
fstpt
xor
or
add
fidivrl
out
add
loop
mov
cmpsb
sarl
aam
add
add
add
and
jno
aam
jo
adc
mov
insb
imul
jae
pusha
adc
inc
out
cmpb
add
lret
clc
mov
aaa
out
jae
cmpsl
mov
ss
clc
fdivrl
orb
in
sbb
test
cmp
push
push
and
xchg
ret
xor
aam
mov
or
add
add
sub
addr16
incb
inc
mov
push
or
push
sti
out
decl
andb
cld
out
pop
fadds
movhlps
lock
call
mov
inc
and
imul
adc
and
rorb
pop
or
push
and
push
in
jmp
add
add
pop
add
iret
add
add
add
and
mulb
jmp
mov
pop
xor
adc
xchg
or
pmaxsw
ja
pop
repnz
leave
jno
adc
movl
adc
xchg
push
add
out
popa
inc
adc
xchg
xorb
mov
or
add
sub
sbb
cli
in
frstor
adc
incl
add
cmpsb
call
add
xlat
jg
mov
mov
xchg
sbb
pop
in
insl
xchg
adc
in
stos
sarb
adc
jg
loope
imul
in
jg
in
sbbl
or
xor
pop
inc
jecxz
shl
mov
jo
add
in
jge
or
mov
or
add
add
add
jbe
adc
out
mov
in
ljmp
imul
js
clc
insb
sarl
ja
add
ja
add
adc
mov
imul
jg
cld
pop
inc
sti
ljmp
add
pushl
push
jb,pn
std
subb
push
mov
lock
or
jp
add
add
add
jns
sarl
jmp
ds
out
std
push
test
je
add
insb
lods
outsl
and
sbb
lret
mov
mov
sarl
add
das
fbld
fs
in
cmpsb
stos
adc
mov
mov
cmp
fs
cld
lahf
xchg
add
add
cld
lret
xchg
cld
out
xchg
adc
xchg
xchg
lahf
xchg
call
mov
pop
mov
jle
inc
xchg
mov
pop
mov
rorb
incb
push
std
add
push
std
add
push
std
add
push
std
add
push
std
sbb
push
std
add
add
add
add
std
sbb
cld
sbb
sbb
jne
add
jne
add
sbb
jne
add
jne
add
gs
add
gs
add
jb
add
push
add
cwtl
add
jb
add
push
add
jae
add
pop
cwtl
add
cwtl
add
cwtl
add
add
ret
add
jae
add
jg
add
pop
sbb
pop
sbb
pop
sbb
imul
std
jg
sub
daa
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
mov
add
mov
add
mov
add
mov
in
scas
add
inc
sti
xchg
mov
add
add
add
mov
pop
adc
out
xchg
inc
push
mov
mov
out
adc
jo
andl
rcrb
scas
outsl
add
add
jle
mov
and
mov
add
test
sub
out
gs
lock
loop
addl
or
adc
repnz
shrd
add
outsl
add
add
add
fdivr
pop
movsl
clc
mov
jb
stc
imul
fisubrs
in
mov
push
or
fldl
orl
out
push
xchg
xchg
or
and
in
or
add
insl
gs
call
push
mov
loop
je
xor
add
jg
xor
cld
push
add
add
add
loop
xor
fidivrs
mov
push
adc
add
add
cmpl
push
push
pop
aad
sbb
push
in
cmpl
adc
push
and
xchg
add
add
clc
add
stc
jo
cld
sbb
add
rcll
adc
xchg
dec
xchg
les
in
mov
add
add
sub
jo
cld
cmp
sbb
sub
jne
and
pop
inc
test
dec
push
ja
sbb
add
xlat
jl
out
out
push
fs
cmp
sti
mov
inc
out
push
or
ret
xor
push
push
inc
in
adc
hlt
orl
cmp
aam
push
mov
out
insl
or
add
add
add
out
push
hlt
jg
add
outsb
rcr
jb
add
in
push
out
mov
sub
dec
inc
call
or
mov
in
mov
out
outsl
fsubs
sub
jne
in
or
jo
mov
mov
jecxz
or
dec
sbb
stc
inc
out
push
jecxz
xchg
pop
adc
add
add
shrb
jg
repz
mov
cmp
xchg
jecxz
icebp
addb
push
je
mov
fdivr
push
ja
jae
jb
clc
inc
jg
cld
cmp
cld
inc
in
xor
dec
out
jg
lods
add
stos
stc
add
adc
lret
lock
add
lds
cld
jmp
add
add
add
orl
jecxz
cmp
fisttpll
or
test
mov
enter
fdivrp
lods
dec
cmp
lods
sbb
mov
sub
add
and
add
and
ljmp
jae
test
out
je
in
add
orb
push
adc
incl
add
add
pop
sbb
incl
jns
call
jns
aaa
pop
loope
cmp
xlat
mov
sub
shlb
add
in
xor
cmp
cmp
aam
add
xlat
decb
inc
ja
mov
xor
dec
cltd
add
out
je
addb
and
mov
add
add
aam
mov
inc
in
std
push
rorl
inc
rcll
ret
cwtl
out
out
out
sub
fidivrs
adc
and
pop
aaa
add
xchg
push
sbb
fdiv
mov
in
cmp
mov
daa
adc
fisttpl
call
inc
out
jne
adc
jae
and
add
out
add
add
test
add
add
cmp
add
mov
cld
push
sti
xor
test
add
add
add
fbld
mov
and
mov
or
fistps
add
or
call
insb
add
add
add
insl
es
sub
jmp
sbb
cmp
add
aad
adc
mov
xchg
cmp
jo
fadds
jl
add
scas
nop
jae
pop
inc
mov
pop
inc
hlt
cmp
push
adc
mov
push
hlt
rcr
call
add
add
add
aad
pusha
scas
int3
xchg
jg
jge
add
rcl
pop
es
push
leave
pop
std
pop
jno
jae
mov
int
add
mov
hlt
mov
in
and
sti
mov
test
fdivrs
hlt
call
pop
fisttpl
jnp
add
mov
aaa
lret
sbb
inc
push
add
enter
add
ficoms
lock
sbb
inc
lock
mov
cmp
mov
mov
mov
adc
js
cld
call
xchg
outsl
jb
ljmp
jno
jg
fdivrp
pop
lods
ficompl
popa
lods
shlb
mov
mov
add
mov
and
data16
dec
and
pop
inc
and
jmp
push
hlt
out
mov
or
add
add
push
push
clc
out
jp
cmp
es
lock
out
add
lock
ljmp
out
pop
shll
inc
hlt
jne
call
std
stos
mov
dec
push
mov
in
xlat
adc
call
addr16
sbb
imul
sub
or
add
xor
jmp
cmc
stc
add
add
add
add
jnp
push
sti
mov
imul
aad
fmuls
aad
fdivs
aad
xlat
jbe
jecxz
lods
shl
ds
decl
or
inc
cmp
int
cs
aam
mov
out
popa
dec
aad
mov
pop
in
pop
cld
out
insl
rcrb
fwait
mov
add
sti
add
add
add
pop
shll
scas
adc
test
movb
cld
xchg
cli
call
mov
lret
ds
clc
call
test
fbld
movsl
sbb
xchg
in
jnp
pusha
and
mov
outsl
into
jae
jp
xchg
xor
subb
jnp
and
call
aas
dec
decl
shll
add
add
clc
rcrb
shlb
mov
shrb
xor
insb
sub
or
add
dec
call
dec
mov
neg
shrl
rcrb
push
dec
mov
call
cwtl
in
ss
mov
loop
push
addr16
add
cmpsb
add
addb
sub
sti
lock
add
add
lret
xor
xor
adcl
add
cltd
pop
xchg
hlt
cltd
aaa
aas
addl
jne
adc
xchg
or
adc
addr16
ss
fiaddl
lds
pop
xor
leave
stc
imul
xor
mov
call
les
adc
aaa
add
add
add
cmp
cld
and
mov
fldt
mov
inc
sbb
dec
fdivr
pop
les
ret
dec
dec
and
scas
js
cmp
adc
adc
icebp
lds
out
pop
cmp
and
add
ljmp
add
test
mov
push
inc
out
scas
fadds
add
add
pop
std
gs
pop
inc
add
jge
out
scas
test
pop
imulb
jb
rorb
adc
fidivs
outsl
mov
out
outsb
push
jmp
adc
inc
mov
or
ret
test
mov
or
inc
ljmp
xlat
xor
jb
out
out
test
mov
ds
int3
ss
add
add
add
push
jae
mov
call
into
in
dec
clc
jo
int
sbb
dec
sub
jnp
ljmp
or
sub
cmpl
gs
cld
push
sbb
movsb
popf
dec
fdivrs
mov
push
sbb
add
sub
shlb
pop
pop
cmp
dec
int
push
push
adc
push
add
add
jns
cld
sub
jns
loope
inc
hlt
add
add
mov
dec
add
mov
sti
call
mov
inc
cld
push
les
add
call
insb
mov
add
jp
mov
inc
or
add
sti
lcall
mov
fldt
rolb
rcr
xchg
inc
addr16
add
add
add
mov
shl
xchg
jp
imul
incb
pop
jl
add
fbld
sbb
xor
ret
hlt
xchg
insl
lds
jnp
shl
fiaddl
add
or
out
bound
cld
inc
xchg
roll
cmc
sub
mov
sar
ja
cld
mov
aaa
cmpb
and
addr16
fimull
push
jbe
std
sti
mov
rorb
fnstenv
pop
lods
xchg
xchg
pop
arpl
aad
sbb
out
jge
jl
fsubrs
push
gs
pop
aam
jmp
ret
inc
shlb
aaa
aad
dec
cmc
inc
out
subl
mov
fstps
xlat
add
imul
insl
cmpsb
jg
push
fcomps
sub
add
add
push
add
pop
aad
pop
fldl
andl
and
stos
and
jmp
repnz
test
add
subb
fidivrs
pop
gs
lret
sub
clc
inc
out
sub
push
add
or
lea
sub
inc
ffree
out
imul
add
and
outsl
inc
and
sbb
add
sahf
jmp
mov
push
arpl
sub
push
push
imul
bound
outsb
jmp
inc
data16
sub
sub
xor
jns
in
shll
mov
iret
mov
ret
fdivrs
jmp
roll
mov
add
add
dec
sub
cmp
cwtl
fdivr
push
adc
dec
aas
sub
in
mov
test
add
add
fucomi
push
add
add
cli
mov
dec
dec
or
or
call
in
enter
jns
adc
push
les
test
cmp
inc
inc
mov
cmp
jl
adc
sti
pop
dec
mov
jmp
add
add
leave
adc
fistpl
pop
add
sbb
cld
stc
imul
mov
jae
scas
rcll
shlb
std
subb
hlt
inc
insl
lcall
insl
mov
pop
add
frstor
push
repnz
and
sti
or
cmc
ljmp
out
or
push
hlt
or
inc
dec
test
add
add
add
stos
jne
sbb
push
shrb
hlt
sub
lods
add
decb
add
and
push
add
jge
std
imul
dec
mov
rcrl
stos
jmp
out
jle
fdivr
enter
pop
loop
sub
mov
leave
sti
dec
clc
inc
out
sub
add
add
out
add
add
add
leave
popf
fstpt
shll
pop
aad
xchg
pop
lret
insb
clc
je
ret
testb
mov
insb
clc
push
shlb
out
mov
add
add
insl
lods
dec
cmp
jge
subb
cld
mov
mov
cld
gs
loope
sbbb
subl
in
daa
adc
add
add
and
mov
cld
into
xor
cld
sub
dec
idivl
xlat
cmp
push
add
sub
imul
add
outsb
addl
test
add
jge
dec
js
test
add
push
test
cld
test
xchg
les
mov
stos
aas
add
popf
icebp
inc
add
add
add
sti
adc
icebp
jg
test
jne
lods
push
cmp
jg
ret
test
add
mov
add
loope
adc
xor
loopne
inc
pop
ret
data16
imul
je
sti
adc
inc
rorb
fidivrl
in
hlt
imul
mov
add
add
add
add
fsts
imul
dec
mov
add
std
ffree
inc
mov
add
stc
addl
int3
xor
sbb
pop
lds
shlb
and
xlat
jae
inc
jg
aad
push
adc
cmc
jmp
lret
bound
insl
popf
jmp
push
sbb
or
push
fdivs
std
add
add
add
repnz
out
push
in
loopnew
add
ficompl
push
and
data16
mov
out
out
sbb
or
pop
ljmp
mulb
cmp
movl
rorb
push
in
xlat
jle
sbb
jle
jmp
jb
loop
mov
gs
add
add
add
add
xor
xor
shll
add
aas
idivl
pop
cmc
inc
out
int
call
push
shrb
pop
shll
jne
add
std
ret
rcrb
or
add
rorb
jmp
dec
mov
sbb
push
clc
cmp
cltd
lock
mov
stos
add
sub
subb
dec
pop
or
lret
jge
mov
mov
add
cmpsl
cmp
cmp
add
test
std
andb
jge
or
daa
sarl
jle
adc
cld
jmp
loop
adc
lret
sti
jne
test
jg
add
or
mov
adc
jb
add
xor
int3
push
lea
cli
incl
add
add
shlb
adc
lock
dec
popf
add
mov
xchg
inc
les
inc
adc
test
inc
jnp
adc
hlt
dec
xlat
sti
jne
inc
inc
or
mov
or
shrl
push
xor
mov
jno
das
ds
nop
adc
cmp
mov
pop
out
pop
pop
cmpsl
xchg
lock
dec
aad
rclb
add
add
test
repnz
out
orb
hlt
xor
ror
out
lods
pop
push
dec
dec
shlb
push
jne
pop
ret
shll
std
cmp
pop
mov
add
dec
cmp
inc
jno
ja
flds
mov
std
fildl
cs
add
das
add
adc
imul
in
call
cmp
jle
dec
and
rcll
notb
add
dec
mov
repz
cmp
or
cltd
ret
loop
and
enter
sti
and
fdiv
aas
call
repz
jmp
out
rcrl
ret
add
in
add
add
add
add
push
xor
sbb
popa
inc
cli
jl
dec
mov
and
xor
fs
push
push
les
add
dec
popa
push
sbb
addl
or
les
aad
and
call
cld
bound
fdivrs
xchg
loope
cmpsb
jle
mov
sbb
in
add
add
add
inc
add
dec
push
aas
jmp
mov
adc
js
fucom
inc
mov
in
add
cltd
ljmp
cli
lods
add
push
into
ret
jb
idivl
sbb
das
adc
and
adc
lea
sbb
loop
xchg
in
push
cmp
jge
mov
add
aam
jno
or
pop
inc
sbb
jne
add
add
inc
jno
cmp
jmp
jno
mov
mov
testb
inc
sub
les
mov
add
add
inc
and
cmp
add
sbb
pop
add
jge
add
test
add
out
shrl
or
jl
icebp
sub
lds
icebp
fdivl
stos
jg
icebp
sub
xor
add
add
add
outsb
vzeroall
in
subl
add
and
push
sbb
aaa
stos
es
mov
pop
dec
jle
adc
cli
sub
sub
xor
lds
mov
lds
inc
add
and
sti
push
push
add
out
test
inc
add
dec
inc
gs
cli
sub
loope
out
xor
iret
inc
add
add
add
adc
mov
mov
mov
cmp
mov
adc
mov
out
fmull
cmpsb
dec
fsubrl
out
test
xor
repz
cld
inc
out
cld
lock
out
fstl
cmpsl
add
pop
jb
ret
ret
xchg
js
test
faddl
adc
add
add
out
push
popf
js
adc
sub
movl
adc
sub
adc
mov
or
or
cli
sub
xchg
insb
mov
push
fs
xor
dec
push
add
cmp
jmp
in
inc
add
stos
adc
fldt
mov
and
rorl
jmp
sub
add
add
sub
mov
jmp
call
sub
orb
in
inc
add
sbb
call
out
adc
cmp
inc
cmp
pop
push
xchg
sti
ss
les
push
xchg
ret
or
mov
inc
add
add
add
jg
push
mov
jge
inc
pop
push
push
push
add
add
add
cli
or
fcmovb
std
lcall
or
add
ret
mov
add
adc
add
int3
push
mov
mov
xchg
add
add
dec
or
fidivrl
inc
inc
adc
std
add
pop
inc
out
es
adc
push
dec
std
add
dec
clc
imul
xor
sbb
add
faddp
shll
test
jb
shr
pop
inc
in
insl
mov
in
prefetcht2
cmp
jnp,pn
adc
sub
hlt
cmp
imul
mov
lods
fiadds
add
mov
addr16
push
add
out
add
cmp
cwtl
negb
test
mov
mov
mov
add
add
fs
popf
push
and
xor
mov
data16
xchg
add
dec
lods
add
repnz
popa
loope
roll
add
add
add
mov
shl
stos
xor
lods
dec
aad
shll
repnz
out
mov
enter
test
dec
aad
out
add
add
add
add
inc
add
adc
push
cmc
xor
shlb
jne
inc
icebp
in
addl
cs
or
inc
pop
push
or
fsubrs
push
sub
jg
cmc
push
ss
mov
push
xchg
adc
cld
sahf
jb
adc
aad
std
mov
add
adc
mov
xor
scas
mov
jl
add
add
add
jge
out
shrb
cmp
jmp
fcomps
inc
mov
pushl
in
add
sti
lea
in
jge
decl
sub
mov
dec
dec
lea
dec
call
xchg
les
addr16
ret
mov
int
sub
jge
or
xchg
xchg
mov
in
xlat
push
push
push
add
add
add
cld
push
outsl
mov
hlt
mov
js
jmp
jmp
jne
mov
push
dec
call
sub
or
ret
add
test
adc
jae
aaa
inc
jae
or
push
scas
jne
divl
dec
or
push
aaa
clc
les
lods
std
sub
mov
sbb
sbb
aaa
shrb
add
add
add
push
or
mov
add
push
fwait
add
jne
mov
xor
ret
inc
ret
rcrl
inc
pop
pop
mov
or
and
lods
dec
pop
sbb
lock
sbb
imul
and
repnz
mov
jnp
jbe
lcall
lock
inc
insl
stos
repz
push
add
add
daa
test
and
mov
cmp
pop
ss
xor
mov
ss
sub
add
gs
add
xor
leave
mov
cmpsb
cmp
mov
ror
xchg
mov
mov
lret
mov
add
sbb
xor
outsl
mov
mov
sbb
push
mov
in
das
push
push
pop
add
fnsave
shl
push
mov
in
add
mov
test
mov
add
jl
stc
hlt
je
repnz
jmp
sbb
push
bound
sahf
sbb
mov
les
dec
call
xchg
test
mov
inc
popa
sbb
add
add
sar
incl
sub
orl
adc
aas
cwtl
push
inc
je
jl
inc
add
stos
push
inc
orl
mov
decl
jns
lret
add
push
lret
push
imul
add
mov
add
ret
jns
decl
mov
inc
int3
mov
out
cltd
or
add
aam
add
les
aam
sbb
rcrb
das
shr
add
frstor
jnp
imul
pushf
add
add
mov
mov
das
rorb
sbb
add
out
mov
jg
out
test
cld
or
mov
add
repnz
mov
add
add
pop
mov
add
jg
orb
push
test
es
mov
sub
in
lahf
push
xor
cs
test
cli
add
add
test
testl
repnz
mov
ja
push
sub
xlat
out
out
ljmp
mov
out
out
dec
dec
dec
cmp
cmp
jg
add
add
xchg
sub
mov
push
dec
bswap
lcall
mov
or
xchg
add
test
bound
out
mov
aad
loop
jg
add
call
pop
inc
mov
sub
inc
and
pop
jmp
gs
icebp
bound
sbb
mov
test
notl
add
add
mov
jmp
fs
lods
out
cmp
jp
aaa
iret
sub
pop
ljmp
cmpsl
push
sub
mov
jbe
push
push
jmp
call
addr16
std
mul
push
cltd
jo
sub
inc
mov
iret
std
mov
bound
inc
or
lea
clc
lcall
mov
add
add
add
xlat
js
adc
stos
push
or
in
divl
test
cmp
xchg
or
call
cltd
push
lea
dec
sti
lcall
jnp
sub
js
call
sarl
jnp
cmpb
fstpt
push
fmuls
test
or
mov
jge
add
xor
add
std
out
add
add
add
imul
test
fnsave
add
push
push
add
xor
cmp
mov
adc
lods
pushf
mov
lahf
push
std
sti
mov
inc
out
sbb
or
das
push
xor
mov
cmp
dec
xor
push
pop
mov
out
ss
outsl
loop
dec
adc
add
lcall
add
add
add
cltd
add
in
fiaddl
add
lahf
test
jg
xor
popa
inc
ficoms
loop
add
push
cmp
mov
jge
mov
adc
orl
mov
cltd
lea
add
sbb
xor
push
mov
sub
inc
out
subl
insl
rcl
push
sbb
stos
add
add
add
push
out
jne
cmp
gs
mov
adc
out
lods
cwtl
jno
inc
jmp
cli
cmpb
sbb
add
jmp
add
pop
xor
in
mov
ja
push
jns
out
push
std
aam
push
inc
jmp
stos
xor
sub
fsubr
add
add
add
add
and
xor
xchg
loope
jge
in
xor
outsb
sar
mov
cwtl
data16
add
aam
cwtl
aaa
mov
cwtl
or
inc
mov
or
inc
jmp
cs
addb
add
ja
inc
cwtl
addr16
push
dec
push
mov
push
call
lea
clc
incl
add
add
mov
inc
sti
pop
es
xlat
add
jne
pop
cmp
jne
pop
xor
inc
jl
pop
pop
pop
mov
in
call
stc
in
and
xchg
add
inc
js
pop
adc
cmp
stc
push
data16
fistpl
lods
xor
xchg
add
push
mov
or
cmp
mov
add
add
and
test
xor
cwtl
fisubl
into
mov
insl
pop
fstpt
inc
into
xor
cmp
cmp
test
fiaddl
call
sbb
rcrl
mov
andl
add
cli
sti
in
push
fidivs
jl
jno
cmc
rorb
shll
ret
jmp
imul
stos
ljmp
add
popa
cmp
insl
add
sbb
lcall
push
push
in
cwtl
je
out
add
insb
mov
pop
mov
fcoms
inc
lods
sti
pop
clc
inc
out
adc
idivb
jg
pushl
cmp
std
outsb
cwtl
sarl
loop
add
xor
lcall
add
in
sti
mov
das
xlat
sub
add
add
ja
fldt
jno
pop
sub
imull
jno
or
lods
mov
addr16
imul
in
test
std
std
andl
add
mov
std
aam
adc
push
cld
xorb
add
jmp
in
stos
jb
push
aas
fsubrl
lods
out
clc
add
pusha
add
add
add
mov
adc
data16
aas
pop
das
adc
xchg
mov
xchg
cwtl
ss
mov
es
mov
adc
lock
jp
es
int3
push
ja
add
push
jg
push
xchg
rolb
cli
jne
mov
clc
outsl
sti
jne
mov
call
mov
clc
jo
shrb
adc
add
add
pop
push
xchg
push
mov
inc
add
scas
std
jle
xchg
std
mov
dec
call
test
adc
inc
orl
jle
sti
test
and
push
jno
jne
jo
or
sti
decl
jno
hlt
fnsave
scas
cld
pop
aam
out
repz
cld
je
dec
jmp
inc
xchg
mov
call
add
fidivrs
sub
add
cs
push
mov
push
call
push
ss
pop
cwtl
sub
call
mov
mov
rclb
add
outsl
aaa
and
or
add
decl
add
fdivrs
testb
add
and
repnz
movb
jp
jl
sti
add
add
add
sar
loop
popa
out
shr
les
sarb
push
inc
mov
call
cmp
cmpsl
movsl
sti
data16
sbb
fstps
scas
mov
jnp
out
jmp
cld
pop
adc
negb
cmpsl
fildl
pop
xor
cwtl
cwtl
mov
in
add
lds
or
lret
repnz
add
add
add
push
jb
cld
cmc
imul
push
cmpsl
cld
jmp
dec
pop
pop
inc
mov
jns
cltd
out
pop
insb
stc
fsubrl
inc
test
add
mov
clc
xor
lods
lahf
ret
jmp
mov
dec
push
insb
test
jnp
xchg
out
xchg
ljmp
add
add
add
movsl
cld
insl
mov
inc
add
repnz
scas
mov
add
fstpl
subl
push
jo
fwait
sub
mov
push
and
movl
imul
mov
jns
push
cltd
ret
jbe
daa
jno
sub
inc
and
push
outsl
add
sbb
jmp
js
je
add
add
sbb
and
add
adc
sti
je
or
pop
popf
push
sti
lea
cltd
sbb
arpl
cli
inc
shll
xchg
adc
nop
addr16
call
ds
out
jg
sbb
jbe
lds
fiadds
mov
push
gs
jmp
popf
add
mov
aas
push
xchg
aaa
jp
dec
and
lock
mov
add
add
add
and
aam
cmc
xor
stc
sub
jg
in
lea
adcl
sub
mov
xchg
test
imul
or
decl
out
inc
aaa
lock
pop
add
stc
xchg
scas
and
test
add
jo
dec
jp
pop
xchg
cmp
stos
xchg
cwtl
ss
mov
stos
sbbb
add
jp
arpl
test
stos
xor
push
adc
add
js
dec
push
stos
push
cltd
lds
ja
imul
cltd
enter
imul
pushf
mov
out
insb
mov
stos
or
out
add
mov
scas
add
in
hlt
sbb
xor
cld
inc
jmp
lds
out
add
mov
cmp
add
add
add
cld
cmpsb
aas
cltd
cmp
jb
add
in
jnp
movsl
add
call
jbe
ds
cwtl
add
mov
je
inc
cmp
imul
popf
movsl
adc
filds
push
testl
in
nop
ds
add
push
add
cmpb
jo
xchg
ss
hlt
lea
add
add
add
add
jb
cltd
push
mov
lock
cmc
add
ror
cmovns
inc
and
add
mov
call
mov
decl
int3
add
insb
jg
outsl
std
jle
outsl
std
test
out
and
lret
push
xchg
pop
adc
add
subl
clc
xchg
mov
add
add
outsb
ficomps
or
sub
jg
add
icebp
mov
test
shr
or
inc
inc
or
das
ds
pop
push
std
fstpt
adc
push
mov
xorb
sub
and
loopne
cld
imul
mov
xchg
add
add
add
pop
inc
jge
loope
mov
dec
xchg
jnp
sahf
cs
out
cmp
andb
insl
insb
insb
cld
insl
test
ds
shl
or
insb
subb
js
out
test
out
jp
add
out
or
cmpsb
ret
insl
pop
adc
add
push
outsl
jns
adc
jb
add
add
imul
decb
in
call
cmpb
rolb
cld
imul
sub
sbb
sub
jp
test
popa
int3
insb
mov
out
rcrb
add
imul
icebp
lahf
incl
xor
lods
adc
subb
add
std
in
out
push
mov
xorb
mov
mov
adc
mov
mov
pushf
rolb
and
cltd
mov
cld
jle
lcall
mov
xchg
in
mov
clc
aam
mov
push
imul
call
push
sahf
or
jmp
push
nop
cld
push
test
or
add
add
add
mov
mov
xchg
xchg
roll
push
pop
idiv
fisubrl
inc
xlat
cmpl
xor
std
jbe
pop
inc
call
repz
add
out
add
testl
inc
out
add
lret
sbb
xlat
add
inc
cli
mov
inc
add
jne
fs
scas
mov
add
add
add
fst
test
jmp
dec
loopne
dec
jecxz
lock
out
push
mov
cld
jb
das
es
add
arpl
push
mov
repz
enter
mov
std
xor
mov
cmp
subb
call
mov
lea
jb
add
add
jle
lds
js
sahf
and
les
rolb
pop
sbb
arpl
push
ja
xchg
and
shlb
lds
ljmp
add
subl
add
test
cmpsl
repnz
std
sub
loop
xchg
fwait
mov
push
xlat
lods
mov
push
lods
test
lds
add
add
add
lret
out
xor
sahf
xchg
xor
lods
data16
ljmp
inc
lret
pushl
jecxz
jne
out
out
mov
clc
inc
out
test
cmpsl
cmp
push
xchg
add
pushf
cmp
js
cld
insl
sub
sub
lods
test
adc
subl
xrelease
add
add
jmp
add
sbb
imul
inc
or
dec
pushf
mov
pushfw
or
or
out
push
pushf
cld
fidivrl
sbbb
sbbl
mov
subl
sti
call
jmp
add
add
inc
and
pushf
dec
add
sub
add
add
xchg
mov
jl
pushl
xchg
mov
iret
out
ficomps
test
stc
push
mov
add
ds
and
scas
icebp
jecxz
test
into
mov
pusha
outsb
xchg
xchg
jge
outsl
mov
cld
push
outsl
cmp
ljmp
mov
call
inc
and
jle
and
add
mov
add
mov
add
and
sub
dec
lahf
cld
movsl
xor
lahf
movb
add
gs
adc
movsb
jl
gs
out
fisubrl
test
add
xor
out
rcll
mov
push
int3
xchg
cld
add
add
add
outsl
sarb
es
push
repz
out
and
scas
xor
mov
test
lcall
rolb
int
stos
dec
xchg
cmp
or
add
add
stos
out
cltd
aad
add
adc
loop
popa
inc
repnz
dec
add
add
lahf
fcompl
add
add
mov
or
outsb
add
xchg
mov
sbb
add
pop
out
cmp
sub
repnz
jge
popf
push
xchg
add
mov
out
inc
push
repnz
sbb
xchg
mov
repz
lods
add
scas
cmp
movsl
or
mov
inc
or
add
add
push
add
sar
jne
pop
sub
add
sahf
push
in
jmp
add
push
adc
mov
sarl
xchg
repnz
out
std
call
imul
fs
into
push
xchg
cld
add
add
lahf
inc
or
mov
shrl
pop
add
add
jno
adc
add
add
ja
inc
cld
mov
jg
jnp
jo
cld
inc
jo
lock
mov
call
mov
hlt
pop
add
add
xchg
xor
rorb
xchg
mov
push
sti
jne
je
cld
movl
lret
jle
je
mov
out
sbb
pushl
lcall
push
call
sub
jb
sub
dec
pop
test
xorb
cmp
add
out
or
cld
push
push
outsb
cld
sbb
scas
adc
lcall
icebp
cmpsb
ss
or
xor
stos
sub
mov
test
add
add
leave
sahf
mov
rcll
jle
cmpsl
sbb
lahf
out
cmp
add
add
out
sbb
call
add
dec
std
lcall
scas
cld
out
ja
scas
pop
jmp
add
fistl
mov
int
push
jmp
gs
popf
sub
mov
ds
push
fmuls
and
mov
sahf
test
jbe
xchg
fnstcw
out
test
jecxz
std
mov
add
add
add
push
aam
jne
pop
nop
pop
add
cmp
or
xor
sub
jno
xchg
jmp
or
stos
fdivrp
dec
xchg
call
mov
shl
das
mov
in
add
cmp
cld
data16
or
add
sbb
push
call
les
call
add
sarl
in
mov
xor
cld
jmp
sarb
inc
inc
and
push
mul
push
xor
stos
sbb
fdivrs
add
cld
sub
xchg
shl
xchg
ja
test
xchg
sarb
add
xchg
xor
add
js
fists
pop
mov
add
add
test
out
addb
in
pop
std
lcall
push
mov
or
add
mov
lret
xchg
fisttps
mov
call
mov
iret
rolb
out
cmc
ja
mov
call
test
packsswb
or
cltd
test
mov
add
dec
xchg
arpl
add
add
add
movups
sbb
and
and
and
outsl
rclb
fldt
xchg
xor
cmp
xchg
sub
add
sbb
jae
push
dec
or
popa
call
or
push
or
ja
cld
call
test
jae
mov
xchg
cld
roll
test
add
fucomp
shrl
jno
rolb
cmp
adc
in
add
outsb
movsb
fidivl
sub
dec
xchg
lea
push
aas
push
add
test
jecxz
xchg
out
mov
insb
push
cwtl
insl
rcr
and
out
gs
loopne
sbbb
or
lahf
test
xchg
add
add
icebp
nop
push
cli
test
add
add
sub
ljmp
sbbl
add
je
in
rorl
sti
mov
dec
vpcomuw
in
jnp
int
inc
call
bound
lea
pop
ss
sbb
add
scas
in
push
rorb
or
out
add
add
in
std
subl
add
clc
pushl
inc
call
jb
xor
sti
mov
fnsave
mov
push
pop
inc
and
out
out
mov
and
add
clc
and
pop
cwtl
pushl
shrl
hlt
pop
jns
xchg
add
stos
xchg
dec
call
int3
jae
testb
add
add
xchg
sti
je
xchg
push
push
shl
pop
int3
add
push
iret
iret
and
lahf
xchg
mov
and
add
ret
mov
in
nop
jbe
push
scas
lea
pop
xor
xchg
xor
add
out
dec
mov
insl
add
jle
mov
sbb
out
xchg
pusha
lcall
sub
add
scas
repz
cs
add
add
add
into
cld
aad
add
in
adc
adc
and
outsl
rclb
and
pop
cwtl
test
test
call
jne
xlat
hlt
ret
jae
mov
push
dec
test
je
add
pop
fcoml
push
adc
or
sbb
xchg
add
jnp
filds
cltd
push
push
addr16
xchg
sub
add
add
inc
xor
jbe
add
jg
std
bound
ljmp
cltd
mov
test
add
fbstp
add
cmp
shl
xchg
add
add
or
or
dec
adc
sub
add
jg
std
bound
out
movsb
cld
rolb
adc
sub
add
add
ja
add
orl
popf
ljmp
add
call
push
inc
and
in
cwtl
sub
pop
lea
xor
out
js
cld
insl
stos
adc
pop
ss
jmp
add
inc
cmp
in
pop
data16
jmp
add
mov
xchg
jge
inc
vrcpps
call
xor
cld
sub
add
add
add
testl
dec
movsb
bound
cld
sbb
xor
add
cmp
lods
cli
xor
shl
jl
jo
xor
rcrb
dec
pop
pop
ret
push
mov
or
sub
dec
push
insl
add
dec
pop
aam
xor
jno
or
mov
xchg
lahf
add
mov
pop
call
add
add
cmp
call
fdivl
sti
add
clc
push
push
outsl
dec
or
mov
notl
call
call
cld
sarl
call
test
xlat
add
mov
lea
mov
nop
xor
arpl
inc
lret
aad
cwtl
add
add
add
add
mov
and
hlt
out
push
xor
out
mov
dec
mov
loop
jb
adcl
xchg
lock
mov
jg
cli
xor
data16
mov
lahf
or
xchg
sbb
sub
adc
xor
pop
out
stos
xchg
mov
add
add
jle
sbb
nop
pop
mov
loop,pn
jnp
jbe
out
nop
cmp
in
sub
cwtl
dec
push
lcall
nop
xor
sub
mov
ret
hlt
loop
out
sub
arpl
xchg
out
out
int
nop
fmull
fadds
cmp
mov
mov
jmp
addl
das
push
pop
push
cmp
aam
out
aas
jmp
jo
repz
test
cmp
push
jno
jae
push
xor
pop
test
les
divb
jae
pop
adc
jb
std
dec
insb
ja
cli
imul
cld
jae
jnp
mov
test
sbb
lea
adc
xor
add
jae
and
in
add
call
ja
add
divl
mov
push
mov
add
lods
mov
inc
scas
clc
call
imul
dec
jl
incl
add
add
out
jge
push
lahf
imul
ja
cs
fldl
ret
push
dec
cmp
or
out
inc
in
ss
cld
add
add
add
cld
push
push
imul
add
add
ret
out
loop
lock
sbb
out
outsb
lea
testb
aam
xor
jecxz
cmc
aas
out
sbb
or
movsb
mov
lods
clc
out
cmp
shr
xor
cltd
and
mov
cwtl
add
jne
xchg
bound
lea
add
add
add
add
scas
and
jmp
ret
xor
imul
xchg
add
iret
jl
push
call
cwtl
mov
sti
imul
outsl
sbb
add
cmpsl
lods
inc
cmp
adc
lcall
jae
in
xor
jae
jmp
cmp
add
cmp
pop
xchg
inc
out
add
add
add
stos
fwait
shlw
loop
sahf
add
fcompl
add
xchg
or
jle
popf
xchg
jle
mov
out
inc
xchg
add
test
cmp
pop
out
add
mov
enter
jnp
push
fnsave
enter
jb,pt
adc
pop
sub
add
xchg
clc
xchg
out
jp
cld
jb
mov
add
add
add
xor
outsb
jno
jb
enter
sbb
xor
sarl
das
test
decb
xchg
jmp
xor
cld
insb
lods
adc
pop
fdiv
mov
jp
dec
jb
pushf
cmpsl
push
mov
pop
add
divl
or
cmp
sbb
fsubrl
jne
sub
cld
decl
incl
add
add
xlat
lods
add
or
pavgw
pop
in
ja
jmp
mov
fmuls
cli
ror
cli
mov
insb
or
pop
add
ljmp
xor
adc
sbb
rolb
out
lea
test
repnz
or
jmp
add
add
add
or
mov
xor
stos
mov
cmp
dec
cli
xchg
test
add
add
pop
bound
mov
dec
push
sub
enter
mov
add
in
push
sub
jne
fwait
mov
lods
movsb
gs
push
xchg
sbb
or
sgdtl
out
push
decl
jmp
add
add
scas
gs
gs
gs
loope
sarl
insb
clc
mov
insl
add
push
divb
add
in
movsl
aas
mov
out
out
xchg
fistps
repz
add
je
push
push
je
add
icebp
pop
add
hlt
xor
jo
sub
add
sub
cmp
stc
pop
add
add
xor
insb
aas
cmp
aas
lds
jge
movsb
popw
hlt
add
add
xchg
iret
jbe
out
mov
imul
mov
cld
in
test
inc
or
sbb
dec
clc
orb
push
cmp
hlt
sbbb
in
add
call
lock
jmp
add
inc
jae
inc
dec
adc
add
jb
and
mov
cmp
ja
aaa
call
push
pop
add
mov
or
mov
ja
loope
test
daa
jb
call
or
fisubrl
jns
cmp
or
aas
test
adc
mov
nop
outsb
fs
movl
mov
add
add
sbb
mov
add
lea
xchg
pop
icebp
sub
ret
push
push
fcoml
add
jno
fsubrs
push
push
mov
js
xlat
add
xchg
add
jno
cmc
inc
out
addr16
pop
pop
aam
xchg
test
xchg
dec
ret
inc
jns
inc
sub
ja
add
add
add
imul
dec
addr16
test
xor
add
out
imul
cld
sub
add
mov
imul
pushl
jns
ret
add
mov
push
imul
inc
imul
fists
add
sub
scas
imul
adc
inc
or
inc
add
mov
add
add
mov
ret
fucomip
repnz
lret
in
imul
orl
test
jbe
pop
popf
jg
jl
jno
ret
loop
push
add
add
dec
xor
and
jle,pt
xchg
jbe
aad
fiadds
nop
jno
and
cld
int3
aam
out
mov
fstl
loope
lret
ja,pn
addr16
aam
out
add
add
add
push
imul
out
adc
dec
cmc
inc
mov
arpl
inc
jp
test
mov
xchg
in
add
cs
test
test
cs
jmp
lcall
in
add
into
and
in
icebp
shrl
call
inc
inc
xlat
in
test
push
add
sub
jnp
mov
add
cld
jmp
jg
scas
jb
jg
imul
pop
insb
sub
or
into
in
add
int3
insl
cli
std
jmp
std
add
jne
mov
in
xchg
sarb
jecxz
cld
ljmp
jo
dec
xor
mov
clc
push
inc
xlat
test
dec
cmp
cmp
call
add
add
cltd
cmp
pushf
xchg
dec
add
adcb
test
pop
leave
pop
mov
cmpl
push
push
int3
cld
xchg
mov
push
cli
aas
sbb
test
inc
add
mov
jg
outsl
add
sti
lea
push
test
jg
hlt
out
ja
ljmp
icebp
imul
add
fimuls
add
out
imul
xor
div
imul
dec
mov
imul
push
sar
sub
aaa
gs
xchg
pop
xchg
rep
test
jbe
pop
mov
rorb
jecxz
sbb
out
or
testl
mov
hlt
mov
jl
mov
cmp
add
mov
call
outsb
mov
inc
popa
dec
or
sub
movsb
or
mov
add
jp
mov
shl
cmp
incb
jge
out
push
out
out
test
add
out
cmp
out
hlt
jecxz
ss
add
mov
ret
imul
sbb
inc
or
leave
jmp
add
push
das
adc
ja
bound
out
add
in
rorb
xchg
call
inc
jge
imul
and
pop
jbe
jae
push
mov
inc
or
call
sbb
sbb
add
cmpsl
xchg
push
or
jp
nop
jo
mov
stos
ficoml
jb
stos
cmp
push
add
add
add
orl
mov
rclb
in
adc
adc
test
scas
out
jp
ljmp
add
std
test
sbb
or
std
dec
push
mov
xchg
xlat
add
push
and
jg
jmp
adc
xlat
in
insb
fsub
orb
add
add
add
mov
xchg
push
adc
xchg
inc
test
mov
push
std
call
lcall
mov
xor
add
out
imul
add
lock
sub
add
out
loopne
mov
imul
add
loopne
xchg
add
add
add
imul
lds
or
inc
jecxz
out
imul
or
lea
push
xchg
mov
mov
inc
pop
lods
add
xchg
add
icebp
test
aas
out
aam
pop
out
imul
movb
mov
pop
imul
fildl
popf
mov
add
fadds
test
test
fwait
outsb
cmp
imul
mov
imul
add
add
out
scas
cmp
sbb
icebp
jnp
out
push
call
push
repnz
mov
out
add
lahf
jbe
mov
out
out
jnp
div
shlb
add
jle
out
add
lahf
mov
dec
cmc
mov
add
add
xlat
movsl
add
pop
inc
xor
add
add
add
mov
loopne
pushl
cmc
push
subl
dec
out
ret
insb
stos
icebp
or
data16
in
inc
sub
cmp
in
add
sub
pop
mov
cld
fcompl
inc
jmp
in
add
repnz
jbe
out
xor
cld
insl
sub
inc
bound
call
add
add
add
jbe
jmp
add
inc
in
popf
je
mov
fdivrl
inc
add
inc
push
std
call
sbbl
add
xor
inc
call
push
sti
jne
hlt
adc
xor
repz
mov
subl
push
mov
in
fistpl
sbb
clc
lea
add
add
inc
xor
call
push
ret
add
roll
hlt
adc
das
negb
imul
aam
std
incl
dec
std
call
add
leave
out
aad
ss
sub
das
dec
jno
cmc
test
test
jecxz
adc
out
or
out
push
jne
iret
sbb
xor
sub
add
imul
or
ret
add
mov
out
imul
cld
out
xchg
add
mov
jns
mov
test
fstps
daa
add
and
adcb
and
into
mov
jae
mov
sub
cmp
sbb
iret
mov
out
les
out
add
add
add
cld
lods
sarb
adc
gs
call
mov
sti
adc
pop
add
add
xor
out
repnz
mov
mov
push
out
mov
mov
jp
or
xchg
pop
and
xchg
sbbb
jb
mov
add
pop
jne
sub
add
add
divl
dec
cmp
bound
xor
out
mov
jns
je
shrl
cld
ds
stos
or
push
bound
jmp
cmc
xchg
bound
call
arpl
pop
pusha
test
jne
insl
xor
push
roll
jmp
dec
ret
add
add
add
dec
adcb
in
xor
add
xchg
stc
jno
or
add
dec
cmc
data16
mov
push
sbb
sti
cld
call
add
pop
sub
inc
cmp
jno
into
cmp
push
mov
idiv
decl
mov
in
test
cmp
jmp
or
fsubr
mov
mov
add
push
les
das
mov
mov
jmp
and
mov
fsubl
sub
pusha
lcall
pop
add
shlb
out
pop
in
or
mov
adc
sub
in
rorl
fcomi
repz
int
data16
and
cmp
aaa
mov
lret
popa
xchg
lahf
mov
imul
xchg
push
nop
add
add
add
sbb
ja,pn
inc
adc
add
or
mov
imul
add
dec
dec
jne
imul
inc
rorl
push
jp
pop
xchg
add
imul
jbe
jns
jmp
push
cmp
pop
lret
outsl
outsb
shlb
jmp
xor
mov
add
add
lods
imul
les
out
or
xor
cld
in
add
inc
jbe
jle
outsl
lea
hlt
cmc
mov
pop
orb
push
jge
movsl
shl
data16
or
jbe
sarb
or
push
imul
in
gs
enter
popf
insl
adc
ffreep
ljmp
imul
jmp
outsb
cld
jmp
add
add
add
test
incl
insl
mov
outsl
cld
jmp
cli
adc
sti
sub
jp
dec
in
add
sbb
out
popf
insb
cld
insb
stos
cmc
and
loope
das
push
jnp,pt
test
mov
cmp
jle
xchg
jbe
out
mov
cld
push
rcr
imul
int3
dec
arpl
mov
add
movsl
cmpb
mov
sarb
loopne
repz
incl
adc
sbb
dec
add
jnp
call
lock
add
push
adc
cld
mov
cmc
sti
adc
int3
xchg
pusha
add
inc
movswl
pusha
push
add
mov
cmp
jns
clc
jle
lock
add
add
adc
inc
hlt
mov
mov
ja
or
call
shl
in
je
imul
and
cmp
lds
cld
xor
scas
out
je
mov
test
pop
add
movsl
xor
cld
jb
in
sub
fidivs
js
add
out
mov
testl
je
or
rcrb
add
add
add
or
stos
mov
jl
push
outsl
push
cld
sbb
fdivp
cs
test
dec
push
inc
icebp
add
into
mov
out
add
mov
add
add
adc
ss
out
cmp
es
sahf
sub
jbe
imul
add
cmp
mov
js
fcomi
ffreep
out
add
add
add
add
stos
addl
adc
shl
jb
out
out
jge
daa
movb
add
inc
ss
and
add
add
int
out
out
inc
push
jb
out
push
xchg
ljmp
repnz
aad
nop
add
jmp
ljmp
mov
jno
je
in
add
jmp
add
add
add
sub
add
aaa
roll
call
leave
fadds
leave
call
add
stos
jbe
or
in
add
pop
imul
mov
test
in
add
outsb
lcall
add
dec
test
test
test
sti
pop
xor
add
add
xchg
std
imul
jmp
dec
push
xor
jg
rorl
lea
lock
dec
and
mov
push
mov
pop
call
adc
and
out
test
in
sti
mov
lock
cmp
jns
push
out
add
in
out
xor
mov
lds
add
xchg
outsl
subl
sti
mov
xchg
std
add
test
add
add
xlat
and
loope
rorb
xlat
sub
rcrl
cld
jecxz
adc
fisubrl
inc
dec
sub
je
outsb
mov
out
add
aad
repz
add
out
mov
jge
lret
add
add
pop
pop
mov
out
pop
add
imul
add
add
inc
test
pop
add
out
jb
jb
jb
jae
add
or
xchg
outsl
sbb
lods
sbb
add
scas
sub
fidivrs
xchg
add
add
mov
mov
daa
cld
fsubs
and
add
divl
adc
push
out
out
sub
ljmp
out
out
jne
sub
out
add
add
add
push
loop
fsubrl
ret
jno
ljmp
add
outsb
bound
lcall
sub
out
add
cwtl
jns
ljmp
in
add
add
in
add
adcl
cmpsl
jb
test
in
add
insb
and
outsb
outsb
andb
in
add
mov
pop
fs
bound
add
add
add
jle
cld
jmp
pop
and
jmp
jbe
subl
in
out
jbe
jmp
mov
add
lcall
jmp
inc
decb
adc
andl
lcall
mov
mov
and
std
call
in
and
std
inc
out
call
add
add
add
div
arpl
int
aam
call
hlt
mov
test
mov
call
decl
test
jne
les
mov
mov
clc
sar
je
adc
js
in
call
leave
xor
dec
aam
mov
je
out
push
pop
xor
add
mov
dec
cmovo
add
add
out
and
std
mov
and
add
push
or
pop
popa
in
imul
les
push
stos
imul
dec
and
movb
out
hlt
and
ror
mov
fiaddl
add
mov
insl
sahf
and
out
lea
std
sbb
int3
cld
popf
lds
push
arpl
cmp
test
add
add
add
inc
orl
imul
add
jns
sbb
iret
sub
out
lret
popa
popa
les
cmp
orb
mov
iret
jno
cli
or
push
cmc
sub
loope
sbb
or
lock
fs
jbe
dec
scas
push
arpl
inc
sub
xchg
push
add
add
sbb
push
pop
push
arpl
imull
mov
jns
out
cmp
or
sub
mov
mov
add
ret
inc
fstpl
add
add
add
bound
js
cmc
aas
pop
addw
push
add
out
pop
fs
xchg
inc
jbe
cltd
pop
gs
adcl
bound
push
popf
jns
fucom
mov
jno
in
add
fs
int
xchg
pushl
ja
cmc
or
je
adc
call
lcall
in
pusha
fdivrs
push
jmp
dec
decl
inc
cld
dec
xor
imul
std
xchg
jge
or
dec
data16
add
add
add
add
push
sti
mov
fcomps
ds
or
cmp
push
cltd
fcoms
insb
fnstcw
mov
or
cmp
pop
adc
lcall
jns
lock
das
shr
inc
add
lods
jnp
pop
mov
xlat
cmp
push
rcll
clc
mov
inc
addl
add
add
ret
xor
lds
and
cld
mov
push
add
fwait
scas
jnp
push
pop
cwtl
cld
adc
decb
outsb
pop
add
mov
loope
shlb
pushf
scas
bswap
lods
push
add
into
sub
lcall
and
out
cmp
jb
das
mov
lds
add
fildl
add
out
test
add
add
add
pusha
ret
add
jl
mov
push
xor
icebp
jmp
pusha
popa
insb
insb
pusha
push
adc
pusha
mov
fldenv
mov
pop
rorl
out
out
lea
clc
test
xor
mov
mov
insl
inc
fimull
rcl
ljmp
imul
add
out
add
jmp
inc
incl
movsl
cld
cs
mov
add
sub
pop
or
sub
pop
or
rcrb
push
or
xorl
add
fsts
lcall
sti
sub
pop
dec
adc
add
add
add
pop
jb
sbb
iret
arpl
or
jmp
fildl
add
rorb
out
push
or
mov
xchg
mov
sti
je
push
in
xchg
add
test
insl
sub
loop
xchg
cmp
add
call
test
out
ljmp
or
add
add
add
push
fildl
adc
add
mov
jg
and
add
push
data16
loop
sti
je
hlt
cli
je
hlt
out
out
add
lds
jae
pusha
pop
or
cld
loopne
andl
jae
sbb
xchg
pop
add
sarb
pop
enter
add
add
add
sub
call
dec
mov
pop
push
push
dec
out
cmp
pop
inc
call
mov
loopne
or
inc
daa
add
xor
dec
jae
sarb
sbb
daa
jno
in
add
ror
aad
adc
push
push
inc
repz
add
repnz
out
jg
add
add
add
icebp
add
inc
lret
mov
mov
out
ljmp
add
into
pop
out
lea
or
inc
add
mov
out
add
mov
stc
sbb
ret
loop
pop
aad
bound
mov
mov
cmc
scas
test
loope
es
jo
mov
add
add
add
add
pop
sbb
mov
cld
sti
sub
sar
call
jecxz
out
loop
cld
insl
xor
and
push
mov
mov
div
pop
cld
gs
iret
push
jb
add
idivb
sbb
int
mov
xor
pop
adc
shr
add
add
in
sub
bound
mov
add
and
pop
lock
add
inc
or
in
cld
mov
xor
adc
mov
dec
mov
and
add
sbb
je
dec
sti
adc
ffree
pop
pop
mov
add
test
add
add
jmp
add
popa
xchg
sti
adc
and
idiv
adc
test
add
add
mov
out
imul
inc
out
sbb
pop
inc
and
fnstcw
adc
adc
in
jg
add
ljmp
inc
sbb
sti
dec
idivb
out
fmulp
and
out
pop
jae
fcomps
out
pop
add
add
add
jns
or
cmpsb
or
jbe
data16
add
lgs
cmp
std
inc
iret
les
push
filds
mov
pop
cld
mov
scas
stc
aas
out
bound
ret
cli
add
fcomp
enter
and
out
out
mov
out
adc
and
push
in
ljmp
mov
rcrb
jnp
out
add
add
add
add
jbe
jb
jge
out
aas
scas
mov
jmp
pop
out
add
mov
inc
std
lcall
push
push
add
bound
cmc
orl
add
in
inc
inc
testb
mov
popa
push
xor
cmp
loope
xor
shrb
dec
push
cld
bound
adc
sub
push
stos
xchg
push
push
add
repz
push
jb
cmpl
les
mov
sbb
std
icebp
push
pop
fs
add
sub
mov
sub
add
push
fwait
cld
push
bound
sub
mov
bound
movl
sbb
jle
push
sbbl
add
mov
std
xchg
jb
incl
add
add
add
in
mov
add
sub
xchg
imul
shrl
inc
mov
add
xlat
ljmp
mov
mov
mov
and
mov
add
mov
sbb
aam
pop
rolb
mov
mov
inc
dec
jo
sbb
push
pop
xor
xchg
repz
clc
mov
add
add
add
mov
add
pop
das
and
mov
sub
out
mov
call
sbb
mov
push
jne
imul
sahf
pop
xor
lahf
add
or
inc
inc
rol
pop
mov
in
out
add
inc
inc
push
add
out
rolb
lods
xchg
xchg
xchg
pop
add
out
adc
aam
add
add
add
rolb
and
or
jns
mov
call
call
mov
outsb
jg
ljmp
fldl
out
outsb
xchg
mov
lock
mov
mov
mov
aam
add
mov
or
fnstsw
xlat
fisttpll
or
xor
jns
pop
sarb
xlat
add
add
add
nop
out
scas
mov
and
das
mov
rolb
sbb
std
mov
gs
push
add
add
xor
pushf
add
add
push
jno
out
lods
lock
jmp
xchg
loopne
ds
pop
push
cld
negb
and
lret
aam
loopne
dec
sbb
outsb
call
rcrb
cmpsb
jle
fiadds
add
add
sbbl
jae
mov
push
cld
jmp
push
lcall
cmc
push
jb
adc
imull
lods
cltd
jp
bound
add
aad
push
cld
sub
add
push
jecxz
test
dec
out
cmc
push
mov
ror
sti
jae
addb
add
add
push
sub
cmp
xor
xor
mov
add
cmpb
inc
dec
add
repz
nop
or
xchg
inc
push
incl
xchg
mov
or
xor
inc
sarb
orl
test
andl
dec
mov
xchg
push
cmpl
adc
jbe
pop
add
add
add
cli
mov
mov
inc
pmaxsw
jmp
jbe
xor
int
pop
sub
jp
addr16
xor
int
out
add
mov
fistpll
fisubrs
inc
repnz
emms
and
xchg
pusha
int3
sbb
cmc
or
cld
cld
cmp
inc
push
cwtl
test
scas
and
add
sub
xchg
cwtl
dec
inc
gs
ja
arpl
andl
mov
ret
test
insb
incb
out
pusha
mov
in
push
call
and
mov
leave
repnz
repnz
les
pop
cmp
add
add
dec
mov
add
mov
iret
fs
add
add
add
mov
in
adc
sar
dec
add
jnp
hlt
push
outsl
into
mov
pop
jo
push
popa
jmp
push
mov
je
fdivrl
insb
cld
es
jae
sar
bound
dec
jb
push
push
incb
jnp
cltd
shl
xchg
rorb
push
add
rolb
jnp
add
add
add
pop
dec
roll
rep
inc
pop
push
add
out
sbb
jo
clc
scas
call
fisubs
outsb
inc
dec
xor
xchg
les
fimuls
pop
je
shr
mov
pop
insl
lea
jmp
add
add
push
call
push
iret
and
xchg
add
clc
push
sub
xchg
xor
add
add
add
ret
ret
out
or
cmp
sahf
sub
das
rclb
jge
add
inc
xor
push
add
mov
jl
sub
xchg
mov
icebp
outsl
push
cld
inc
mov
je
loope
and
test
jl
add
push
add
lock
out
scas
add
add
lods
and
jns
dec
shr
lock
push
add
jmp
add
sub
pushf
sbb
jae
int
insl
cwtl
decl
daa
lock
movl
inc
sub
rclb
jae
lock
cmpsl
add
xchg
add
push
mov
ljmp
adc
push
jae
sub
add
add
add
push
mov
add
roll
out
in
aam
jle
aam
mov
cmc
jno
mov
out
jns
mov
inc
out
add
cmc
popa
push
pop
aam
out
push
aam
out
push
mov
jg
into
mov
imul
add
add
mov
add
subb
sbb
test
dec
imul
add
add
jge
popa
int
jno
jbe
mov
inc
jle
bound
out
sub
mov
mov
sbb
mov
icebp
mov
pusha
xor
lcall
dec
or
jno
cld
jmp
stc
dec
cld
jmp
ret
dec
cld
lods
into
add
dec
call
jmp
add
jmp
add
add
add
or
jge
call
in
add
add
mov
pop
shll
call
cmp
add
add
test
cli
lds
jno
dec
cmp
call
adc
add
rcll
add
add
sub
dec
dec
in
adc
push
jmp
add
add
pop
mov
jne
cmpsl
divl
add
add
push
call
mov
test
incl
sahf
xor
je
jns
jle
lret
ret
call
mov
pop
add
cli
out
lea
add
xlat
decl
out
push
jg
repnz
add
pop
sarl
out
loop
add
decl
add
add
add
into
or
mov
push
jb
iret
jbe
ffreep
divl
push
push
popa
sub
out
or
push
sti
lods
call
repnz
aam
inc
push
adc
xor
sub
add
cmp
jecxz
pop
mov
mov
or
pop
push
fstpt
stc
ficomps
add
xor
mov
add
add
insl
inc
sbb
inc
push
idivl
es
dec
shll
shl
cld
pop
fadd
test
dec
mov
xchg
dec
xor
out
jmp
add
dec
xor
add
add
cmp
inc
xchg
popa
mov
dec
flds
stos
mov
inc
in
add
adc
lods
sbb
add
add
add
shl
or
pop
repnz
add
icebp
out
imul
test
cmp
lods
pop
adc
in
add
inc
ret
sbbl
and
lret
push
pusha
stos
pusha
ds
mov
xchg
mov
jnp
add
jb
pusha
out
pop
in
add
sub
mov
push
mov
sub
add
add
pop
adc
rolb
insb
rclb
rorb
mov
mov
lcall
int3
cli
add
mov
sti
incl
cli
mov
pop
jp
std
js
mov
add
lea
idiv
cmp
adc
push
sub
lea
xor
decl
sti
adc
or
std
cmp
add
add
les
das
movb
sub
je
add
call
mov
jp
add
dec
jmp
std
inc
pop
mov
lea
adc
out
pop
jnp
jle
xlat
outsl
arpl
int3
cli
jmp
int3
movl
leave
ja
cld
sti
mov
inc
add
add
add
xor
test
dec
fsub
mov
pop
stos
pop
insl
adc
add
lods
mov
and
cmp
repz
add
out
mov
inc
push
jge
dec
mov
lcall
jge
sub
out
or
int3
loop
cs
jmp
scas
cmpsb
aaa
test
pusha
add
add
add
add
add
scas
adc
adc
inc
popf
mov
and
and
pop
lret
inc
jae
popa
mov
add
add
smsw
adc
test
add
subb
inc
push
dec
cmp
xor
cmpsb
add
mov
add
inc
sti
xlat
inc
out
lods
inc
mov
dec
xlat
out
lods
push
cli
dec
fadd
fadds
add
add
sub
testb
pop
jp
aad
add
mov
add
lods
cmpl
xchg
inc
pop
inc
xchg
rcrb
hlt
cmp
pop
mov
sub
test
hlt
dec
out
mov
jp
in
ljmp
push
out
incl
push
in
subb
jecxz
lods
pop
mov
movsb
add
add
add
mov
inc
das
push
inc
int3
adc
inc
sub
mov
rol
inc
add
inc
mov
aaa
lret
mov
dec
inc
clc
add
add
lcall
adc
inc
xlat
ret
mov
cld
dec
mov
arpl
jmp
inc
mov
inc
mov
je
jp
pop
lcall
add
scas
popa
test
add
gs
pushl
add
mov
in
cmpsb
lcall
mov
loopne
test
add
dec
push
out
adcb
out
data16
or
dec
adc
popf
sbb
aad
stc
subl
ja
scas
pop
mov
mov
xchg
int3
mov
and
sbb
adc
add
add
adc
adc
or
mov
dec
sbb
inc
loope
and
loope
and
mov
pop
out
push
fiaddl
sbb
jnp
aas
out
addr16
lret
cld
loop
and
cmp
inc
or
add
out
add
or
cld
flds
cld
push
mov
std
jnp
sbb
push
das
repnz
in
lods
imul
add
add
int
aaa
ja
sbb
mov
int3
or
sub
cli
jl
add
add
and
out
test
lds
add
out
mov
test
shr
add
mov
rcl
inc
out
adc
rcrb
lret
test
insl
sbb
add
add
imul
mov
cli
mov
pop
cs
inc
int
add
add
fbstp
call
into
js
call
xlat
cmp
stc
in
add
shr
call
lods
ret
pop
mov
cs
addr16
add
adc
sub
mov
cmp
sub
fidivrl
int
sub
push
es
adc
xchg
pop
in
mov
add
add
add
pop
add
pop
adc
xchg
aam
hlt
sbbl
jne
mov
push
jmp
sti
jne
jb
adc
sahf
jg
adc
add
add
inc
or
pop
add
setb
std
incl
xor
call
cmpb
enter
movl
or
lea
sldt
add
add
cld
call
jae
adc
mov
sar
out
sub
add
ja
adc
test
mov
movsl
pop
add
sub
call
icebp
fidivrs
mov
dec
sbb
idivb
lds
sub
add
sub
add
lds
pop
add
add
add
jne
jmp
stos
cmp
jae
ret
in
sti
cld
sahf
rolb
jne
mov
mov
jl
cld
test
mov
int3
push
or
and
add
imul
in
ret
jno
out
fistl
lds
outsb
push
fnstcw
xchg
pop
sbbl
add
test
iret
add
add
add
jp,pt
cli
mov
and
shlb
sub
lods
add
js
in
movsb
inc
fisubl
xor
fiaddl
aas
xlat
cmp
ret
rorl
jns
add
and
pushl
add
xchg
idivl
cmp
mov
std
sbb
cmp
call
jmp
add
mov
add
fstpl
scas
rorl
es
cmc
jge
in
add
xchg
in
cmp
mull
pop
call
sub
and
mov
mov
rorb
aaa
mov
jo
andl
xor
add
mov
imul
rol
jb
jg
xchg
jmp
lds
add
add
add
xchg
call
lds
call
add
add
mov
ret
pop
xchg
add
mov
test
std
inc
add
dec
cmp
outsl
enter
mov
adc
sbb
sub
inc
adc
rclb
add
xor
dec
and
lcall
and
and
or
cld
movb
add
add
and
xchg
out
out
inc
push
gs
sub
out
sub
imulb
inc
or
sbb
aam
cld
jne
loopne
ljmp
orb
add
sub
sarb
sub
pop
jne
cmp
cli
mov
add
out
sbb
ljmp
cld
adc
mov
add
jb
sahf
testb
sub
add
shr
xchg
cld
rcll
sub
arpl
cmpsb
inc
ret
mov
cmp
sub
jecxz
add
add
dec
and
pop
dec
repnz
aam
jno
pop
inc
mov
or
sub
xchg
mov
xchg
or
dec
add
add
add
xchg
ret
xor
push
and
add
pcmpeqw
out
orb
sub
xchg
int
insl
inc
cmp
jbe
push
or
pushl
std
jle
das
punpckhbw
lods
cmp
push
push
mov
insb
stc
xchg
jge
std
jmp
xchg
jae
subb
or
add
add
inc
ljmp
cld
ds
xchg
cmp
sub
mov
jle
dec
in
rcll
test
call
mov
mov
add
bound
add
imul
jmp
loop
mov
sub
stos
cmp
movsl
data16
in
mov
lret
lret
mov
add
add
add
xchg
add
jne
test
jg
xor
dec
sbb
add
xchg
mov
stos
mov
call
outsl
sub
lock
inc
cld
mov
mov
xor
dec
incl
adc
test
and
imul
adc
cld
out
out
dec
cmc
cld
add
inc
add
add
add
test
loop
sbb
or
das
cmp
ljmp
subl
jno
mov
stos
in
xchg
in
jg
cmpsl
pop
or
jns
mov
test
sub
mov
movsb
inc
jae
movsb
mov
push
pop
ret
aam
sub
pop
cmp
mov
jne
mov
add
add
add
mov
and
add
mov
call
dec
mov
mov
rcrl
gs
xlat
push
ss
stos
enter
or
sub
insb
inc
adc
add
imul
popa
enter
adc
out
mov
mov
sub
cmpsl
stos
test
rorb
jg
cmp
add
xchg
lods
add
test
mov
add
rclb
add
out
mov
stos
das
mov
in
push
mov
inc
add
sub
sbb
xor
sub
incl
test
in
dec
aaa
cld
push
cmp
imul
mov
clc
inc
in
loop
add
add
in
add
jno
ret
mov
std
mov
jno
or
jne
cld
jmp
outsb
mov
call
sti
aad
cltd
icebp
ds
push
ljmp
pop
add
mov
adc
sub
xchg
call
add
push
xor
je
add
add
push
and
jne
mov
pop
cmp
jne
mov
idivl
jle
cmc
jo
xlat
cmc
jno
or
or
fstl
jno
sarl
jmp
cmpb
insb
or
mov
xchg
out
call
cmc
xchg
ss
fsubr
xchg
or
out
push
push
std
stos
or
xor
sub
xor
push
mov
add
add
xchg
push
test
push
cmc
mov
loope
pop
add
daa
add
test
sub
push
sbb
or
aaa
dec
or
ljmp
addl
sti
ds
or
out
sub
icebp
pushf
push
jns
mov
movsb
mov
sti
mov
sub
loope
popf
decl
lea
sahf
mov
add
add
add
xor
sbb
inc
bnd
add
add
xchg
cmp
cmp
jle
je
ljmp
jge
mov
xor
leave
in
ja
fiaddl
sub
ss
xlat
add
cmc
sahf
mov
aaa
or
cmp
shlb
rcll
jnp
mov
std
sti
cmp
mov
cld
sub
in
insb
xor
dec
add
add
add
sbb
push
sbbb
mov
push
hlt
pushl
add
xchg
xor
dec
add
int3
call
pop
add
insl
pop
xor
lods
add
sub
xor
inc
int
sbb
sbb
add
push
xor
inc
movsl
lcall
test
add
rcrl
xor
lcall
arpl
push
push
jnp
push
push
dec
add
out
test
call
jmp
sub
adc
into
jno
cmp
jo
ja
inc
hlt
addr16
cmpsb
stc
testl
adc
cmp
jo
or
push
sbb
inc
xlat
sub
inc
cld
cli
jne
add
add
mov
inc
cld
cmp
icebp
jo
push
ja
incl
cld
cli
jne
jmp
cld
xor
pop
pop
dec
movb
inc
sbb
inc
and
inc
xchg
jnp
or
ja
je
jmp
sti
jne
and
aaa
jb
or
xchg
xorl
jb
adc
cli
and
cmp
movsb
pop
cld
add
add
add
mov
adc
pop
add
xorl
add
mov
cld
sbb
mov
bound
cmpl
aam
cld
mov
pop
int
mov
flds
mov
fsts
imul
adc
arpl
adc
pop
ret
mov
adc
add
out
mov
sbbl
pop
outsl
sub
mov
call
add
add
adc
adc
shlb
lret
inc
loop
ja
lret
mov
je
in
hlt
ds
add
add
mov
sbb
int3
icebp
icebp
mov
popf
add
xor
das
cmpsl
out
mov
mov
xorb
es
idivb
loope
call
add
jo
mov
add
add
add
add
mov
lods
sbb
xor
jbe
xchg
push
cmp
in
pusha
pushl
in
add
data16
sub
sub
push
mov
retw
sbb
sub
sub
mov
lds
mul
nop
or
rcll
jb
push
add
add
popf
sub
add
jecxz
call
stc
mov
ja
add
stc
incl
cmpl
mov
push
pop
mov
dec
xchg
cmpb
jns
in
shl
sti
subl
cld
cmpb
pop
aam
inc
and
sub
mov
mov
jno
ftst
lea
add
add
add
pop
ret
xchg
push
imul
inc
or
xchg
iret
inc
mov
cmp
imul
mov
imulb
mov
cld
imul
inc
adc
idivl
out
adc
into
xchg
rorb
arpl
xor
add
add
sub
add
jmp
add
inc
xorb
push
mov
mov
inc
out
jo
jae
pop
jg
push
filds
ficoml
mov
add
sbb
test
sti
add
add
inc
call
repz
jmp
imul
pop
icebp
jle
add
add
push
xchg
push
fsubr
cs
sub
xlat
cmpsl
sahf
xor
test
inc
mov
xor
les
mov
or
add
cmp
mov
mov
iret
cltd
sahf
jns
jnp
add
daa
add
mov
fidivrs
outsl
shl
ja
sbb
call
xor
pop
pusha
mov
int
inc
add
add
add
adc
push
sbb
call
xchg
std
aam
adc
sbb
or
jne
push
sbb
punpckldq
push
call
ja,pt
call
bound
sbbb
add
adc
sbb
push
mov
movsb
in
ja
insb
lods
lods
inc
jb
sar
lods
in
ja
subb
mov
repnz
add
add
cmc
loope
push
add
testl
add
push
call
negb
dec
add
add
nop
addr16
scas
scas
dec
add
add
out
cld
out
sti
mov
push
std
inc
xchg
ret
add
js
inc
cld
pop
cmpsb
inc
clc
scas
xchg
ja
test
jno
rol
or
inc
or
iret
xor
test
inc
je
test
add
add
add
jg
pop
jb
mov
jg
sti
cld
jle
iret
add
inc
fists
mov
xor
out
inc
add
imul
and
pmaxsw
sbb
movq
out
aad
push
cltd
sub
sbb
mov
xor
and
push
sbb
call
pop
fdivs
ret
je
mov
out
adc
incb
add
add
sub
dec
sar
xchg
dec
pop
mov
jne
nopl
das
jb
divb
negl
mov
push
jne
hlt
ljmp
cmpsb
sbb
push
or
ffreep
out
sub
aad
add
add
cmp
cld
out
fsubrl
add
add
add
xor
ret
jl
add
add
sbb
stos
add
inc
and
or
sbb
add
ljmp
out
out
shl
lahf
adc
xor
ljmp
ret
out
jp,pt
das
insl
inc
cmc
xchg
out
push
in
jmp
mov
mov
frstor
inc
jmp
lods
es
inc
int
sbb
add
mov
push
mov
add
and
aad
cli
sbb
shl
call
add
cmp
imul
es
xchg
push
pop
test
mov
cmpsl
out
les
in
ds
rep
sbb
subb
hlt
lds
or
inc
lds
jmp
or
dec
add
aad
mov
incb
add
add
stos
inc
std
inc
xlat
sar
loop
std
inc
xor
push
mov
clc
adc
std
mov
pop
pop
mov
call
xor
enter
aas
xor
inc
sti
dec
add
jns
ror
add
mov
or
sarb
inc
repz
mov
dec
adc
add
add
add
out
je
mov
icebp
mov
dec
mov
lods
lea
adc
add
sbb
sub
jmp
daa
sub
sbb
pushl
cmp
sbb
jmp
aam
sub
sarl
jnp
insb
fcomp
add
cmp
add
add
add
loopne
push
decb
test
mov
sbb
mov
sbb
push
add
leave
push
inc
mov
push
ret
adc
add
xor
popa
inc
sub
ss
je
stos
int3
leave
test
add
xchg
xor
int
sbb
shl
add
mov
add
add
js
int
rorl
movsb
jge
xchg
jae
or
mov
add
add
sbb
cmp
push
and
xorl
test
dec
cmpl
out
in
jne
stos
pop
mov
in
jbe
sub
aam
subb
and
imul
xchg
dec
pop
lahf
mov
ror
mov
call
add
jae
pusha
and
mov
ja
popf
popf
int
cmp
and
jmp
scas
or
mov
adc
sbb
jmp
bound
and
mov
sub
mov
cmpsb
cmc
cmc
out
addr16
mov
fs
dec
ret
cmp
add
mov
dec
test
push
jae
leave
dec
lcall
add
add
add
pop
test
push
push
call
jge
mov
xor
decl
movsb
ret
test
rolb
std
ljmp
jo
shlb
mov
pop
pusha
xor
xchg
ss
test
cmp
stos
jns
or
dec
xlat
dec
mov
lahf
mov
jl
add
add
add
xor
add
xchg
dec
xchg
adc
mov
daa
cld
adc
in
sbb
daa
subb
mov
daa
repnz
jb
jg
pop
insl
in
stos
lods
jne
jmp
mov
sub
cld
inc
and
lret
or
sub
lods
ret
cltd
sub
xchg
popf
call
sub
jb
movsl
sti
repz
add
add
jno
xor
data16
out
sub
jg
add
add
mov
cmp
imul
inc
add
add
aad
sahf
inc
lret
or
out
stos
mov
sbb
out
mov
imull
out
out
mov
jnp
mov
roll
out
out
addb
add
add
sti
test
test
add
test
insl
pusha
out
out
adc
jmp
jne
out
add
jno
fs
repnz
popa
repnz
imul
cld
jmp
pop
mov
inc
sar
call
cmpsb
ret
cmp
add
push
loop
xor
in
mov
push
sbb
cmpsl
fs
dec
insb
add
add
add
push
cld
sub
mov
push
fs
ss
mov
push
add
es
lahf
mov
sbb
cmc
sahf
push
cld
push
or
jb
into
mov
and
test
xchg
outsb
sbb
or
hlt
pmullw
sti
jmp
out
adc
out
cmpl
cld
mov
xchg
add
add
sbb
pop
jl
clc
pop
mov
fwait
call
in
js
mov
or
xor
mov
cld
adc
sbb
fwait
pushl
adc
dec
call
pop
or
out
fst
cld
fldt
inc
out
xchg
mov
jne
je
out
aaa
out
add
add
dec
movsb
and
jb
scas
adc
lock
and
push
and
xchg
cmp
idiv
mov
mov
lds
gs
jge
jne
testb
cld
repnz
sbb
mov
out
push
inc
aas
lods
push
add
dec
jg
mov
adc
in
sub
push
adc
je
lret
out
jecxz
add
jne
add
add
add
add
shrl
ret
inc
ss
loop
cmp
jecxz
out
mov
jp
in
jp
in
and
cmp
mov
popf
in
lret
or
stos
add
lea
lea
lea
fisttps
mov
mov
std
sub
add
add
add
or
add
add
add
stc
and
out
mov
jmp
fisttps
inc
and
push
sbb
test
xchg
dec
pop
fistps
jo
fistps
xchg
add
add
inc
mov
cmp
mov
stc
cmp
jo
pop
sub
add
lods
or
xchg
js
out
add
add
add
push
add
push
jns
pop
sub
add
push
sub
pop
mov
dec
je
push
dec
push
lock
fisttps
sbb
pop
add
aas
lock
shlb
fstl
jge
push
in
lret
add
mov
mov
push
in
add
add
add
sbb
fdivrp
adcl
dec
call
add
mov
lcall
push
leave
aam
xchg
test
xor
jno
fs
decl
test
imul
xchg
std
cli
adc
dec
test
adc
jmp
out
xor
sub
inc
mov
in
incb
sub
or
add
add
ja
and
outsb
sbb
fidivl
lea
idivl
jb
mov
add
add
xchg
pop
jae
dec
imul
mov
jl
scas
daa
test
dec
adc
add
out
xchg
loope
xor
mov
xchg
mov
add
rorb
cmp
hlt
fstl
xchg
sub
add
add
add
aas
and
xchg
mov
and
sub
xchg
rcll
bound
bound
and
in
out
jbe
imul
outsb
lds
or
mov
sbb
scas
into
fistpl
out
sbb
sbb
sbb
cli
pop
arpl
in
add
mov
mov
loope
es
add
add
fs
out
aam
fcos
cmpsb
roll
in
add
push
repz
push
mov
mov
inc
or
jmp
add
pop
cmp
insb
xchg
sbb
in
add
in
repnz
aaa
call
ss
outsb
inc
movups
pop
ret
and
add
movsl
add
add
add
int3
out
jmp
cld
xchg
jne
and
fdivs
mov
lds
out
push
adc
std
inc
cmpb
add
test
cld
lcall
and
fimull
xchg
jno
and
dec
ret
add
aaa
mov
jno
and
dec
test
xchg
dec
call
into
cmp
or
or
xor
add
add
add
sbb
fcmovne
cmp
and
inc
jle
add
add
call
mov
or
sbb
fsin
rorb
xchg
push
dec
xor
jae
xchg
and
pop
xchg
and
ja
fsubr
sub
push
ds
shrb
xchg
and
fisubrl
push
jnp
sbb
lods
shll
add
out
aaa
add
jcxz
sbb
mov
mov
add
daa
add
jecxz
hlt
aas
out
pushf
inc
jae
mov
xchg
adc
xchg
and
into
xchg
and
add
add
adc
cwtl
or
adc
sbb
push
jg
sbb
ret
add
add
shll
and
add
jo
loop
sub
imul
sub
popa
sbb
fsubrs
jmp
add
add
pop
out
pop
adc
inc
jo
jge
lods
add
sahf
cmc
add
lahf
in
jecxz
out
mov
mov
lods
mov
pushf
or
outsl
adc
add
add
sub
xchg
add
add
add
add
jmp
in
adc
pushl
fists
xchg
cmpl
jmp
in
mov
jle
das
shl
cld
imul
imul
dec
out
incl
push
out
call
sub
mov
push
add
add
lods
mov
jb
pop
add
add
add
std
call
inc
adc
ret
push
jo
cmpl
add
loop
add
pop
or
cmp
lea
call
ljmp
in
dec
clc
sti
mov
add
rol
xor
scas
icebp
cld
incl
cmp
add
add
add
mov
pop
add
sti
jne
out
fdivrl
or
mov
dec
sub
popl
xor
push
out
daa
add
jecxz
out
aas
out
cmpsb
sbb
subb
inc
bnd
subb
jb
cmpsl
xchg
sti
repnz
xchg
and
inc
daa
cmp
and
push
xchg
sbb
xchg
adc
inc
pushf
lret
cld
add
add
add
push
cld
loope
pop
xorl
mov
in
idiv
jecxz
sub
inc
imul
jae
add
imul
int3
cmp
inc
popf
aam
test
add
shll
cli
mov
mov
sub
ss
jo
inc
stos
clc
out
movsb
sbbl
test
add
add
push
or
std
sbb
inc
lods
sti
mov
adc
sub
sbb
test
add
mov
shll
cmp
daa
outsb
and
jno
std
mov
mov
shll
loope
mov
lods
cld
jge
jmp
js
pop
popa
in
jo
in
push
dec
push
cld
push
cltd
dec
or
pop
add
jmp
add
pop
push
sub
cld
ss
fisubs
dec
adc
call
inc
pshufw
xchg
sub
in
or
ljmp
jecxz
jmp
in
pop
add
and
arpl
dec
inc
inc
add
mov
and
insl
xchg
add
jno
mov
dec
jecxz
add
std
incl
add
add
lret
les
rolb
xor
fdiv
pop
pop
add
je
sbb
cwtl
inc
idiv
cmp
sub
sub
cmovo
jp
and
jge
and
cmpb
subl
add
ret
add
jmp
pop
and
inc
cs
out
out
inc
add
inc
cld
xchg
add
mov
add
pop
pop
daa
lea
add
add
ret
and
scas
roll
push
stos
cld
call
dec
push
jbe
les
outsb
cmpsb
sub
fsubl
xchg
jg
inc
out
pop
mov
sub
or
inc
fwait
dec
cld
push
lock
adc
jns
fmull
out
pop
add
fdivp
adc
push
sub
cld
roll
inc
mov
add
add
sbb
sbb
xrelease
call
add
dec
out
inc
out
dec
popl
jno
pusha
dec
out
add
add
movsb
in
pop
pusha
add
loopne
bound
lods
in
notl
out
sub
fistps
pop
mov
stos
add
int
outsl
enter
mov
shl
movsl
in
mov
add
add
xor
or
fbld
push
push
add
add
mov
jp
jmp
xchg
ret
xchg
mov
out
mov
push
mov
mov
out
sub
mov
popa
xor
arpl
cld
xchg
jbe
and
addr16
ds
hlt
stc
icebp
aas
jmp
inc
sbb
jbe
inc
jb
pop
and
pop
add
add
add
or
sub
mov
mov
cmc
adc
popl
fidivrl
add
in
ljmp
std
or
lods
or
jge
or
bound
adc
pop
inc
psubsw
jmp
ret
xchg
cld
into
jbe
jae
xlat
inc
das
imul
imul
and
add
lahf
incl
add
add
add
jno
js
mov
pop
mov
lret
push
lret
push
popa
out
jno
hlt
int
push
mov
cld
sti
jne
push
sti
and
pop
lds
add
popa
sti
call
jo
xchg
xor
cmp
jo
scas
imul
inc
sahf
sti
jne
out
jno
mov
jmp
add
add
out
pop
jnp
fisubs
jmp
imul
dec
sbb
pop
sbb
arpl
pop
insl
pusha
adc
aam
and
adc
hlt
jmp
nop
test
sbb
xchg
mov
xchg
xor
fmuls
jnp
xchg
adc
sub
ljmp
les
cmp
daa
out
pop
add
sbb
add
add
push
add
jp
add
jae
xor
and
mov
mov
cwtl
jmp
xchg
add
xchg
xchg
or
mov
fcmovnb
jns
xor
loope
cmp
std
jnp
call
or
xchg
xor
add
inc
or
cmp
ficomps
jne
add
xchg
adc
push
xchg
icebp
or
pop
add
add
add
shl
and
jl
test
outsb
adc
xchg
adc
jge
cwtl
cmp
adc
or
out
leave
jae
cmp
lcall
cmpsl
enter
cld
les
in
add
sbb
xchg
or
fidivrl
mov
xchg
and
jns
nopl
call
push
lock
adc
add
add
add
enter
in
pusha
jns
adc
pop
mov
inc
scas
cld
aam
rol
push
cmpsl
or
ds
cld
mov
loop
add
sti
cld
xchg
lds
std
ficoms
pop
add
push
test
xchg
pop
mov
push
mov
mov
sbb
push
mov
mov
xlat
cld
xchg
scas
leave
pushw
add
add
jmp
mov
push
nop
or
adc
std
out
idiv
sbbl
add
jo
sti
adc
add
ret
cld
ret
pop
mov
call
fwait
mov
xor
cmp
jb
fidivrs
adc
dec
jp
mov
divl
out
out
xchg
or
popa
adc
cld
cmp
scas
cld
add
add
add
xlat
idivb
out
je
pmaxsw
js
cmp
scas
imul
xchg
adc
xchg
mov
jae
xchg
sbb
out
cmp
xchg
adc
sbb
pop
inc
adc
or
mov
xchg
xchg
xadd
insb
adc
or
push
lods
sbb
test
or
cld
add
add
add
jg
out
xchg
add
mov
cltd
leave
xchg
out
mov
or
cwtl
ljmp
add
add
xchg
fisttpll
sbb
out
jb
mov
sub
bound
pop
add
cld
cwtl
mov
jmp
add
mov
add
sub
js
add
add
outsl
jmp
repnz
add
cmp
ret
icebp
sbb
fwait
ljmp
bound
push
cld
push
sti
fimuls
xchg
push
add
push
jb
loopne
add
cld
out
ljmp
jb
cmpb
adc
push
sbb
push
sti
add
test
bound
xchg
add
add
add
add
sahf
push
xor
sub
scas
mov
sbb
jmp
add
arpl
xchg
pop
inc
push
call
add
ret
fstl
push
add
out
addr16
mov
fisttps
lods
rol
decl
xchg
pushl
ret
sbb
adc
inc
aam
xlat
dec
dec
push
add
add
add
cld
ss
sub
mov
bound
push
divl
aam
adc
sub
cmpsl
mov
add
out
push
std
decl
dec
push
call
xchg
mov
mov
data16
jbe
lods
sbb
out
sbb
mov
push
cld
loope
jmp
daa
dec
or
add
xlat
jl
add
add
add
popl
push
add
push
out
pop
test
es
xor
cmovo
leave
or
jp
sar
hlt
mov
sub
xor
cld
popa
dec
jl
loop
test
shlb
dec
pop
pushl
xlat
add
mov
xlat
add
sbb
adc
add
sti
add
adc
out
add
add
add
sbb
ret
jmp
les
out
add
out
faddp
out
andl
outsl
add
call
add
add
filds
call
adc
add
fcmovnb
jns
xor
cld
int
fs
mov
mov
sub
mov
sbb
add
cli
add
add
add
add
scas
add
inc
in
mov
jnp
add
push
out
idiv
sub
jbe
pop
adc
js
icebp
call
push
push
bound
cmp
cmp
mov
sar
je
cld
xchg
add
mul
imul
idiv
adc
push
or
movb
add
add
pop
pop
mov
or
sbb
jmp
mov
insl
cmp
sub
add
jl
xchg
push
sbb
add
add
mov
pop
cld
ljmp
xchg
nop
jbe
les
outsb
or
cld
lcall
outsb
sub
scas
stos
cli
inc
fwait
cli
call
cmp
dec
cmc
cmp
fsubrs
sbb
loope
mov
mov
add
add
roll
incl
outsb
stc
out
cmp
sahf
enter
add
sbbb
pop
dec
fidivrl
jmp
add
fidivrl
jmp
das
imul
jmp
add
push
pop
pop
frstor
jo
xchg
jmp
mov
sar
sub
inc
xchg
lock
repz
rolb
add
add
add
js
out
js
scas
and
cld
push
jae
mov
in
mov
adc
cld
xchg
push
jmp
jge
mov
jmp
das
cli
sbb
mov
cld
imul
test
pop
cmp
lods
push
sahf
add
lods
inc
inc
jmp
push
addr16
nop
cmc
je
lods
or
addl
add
add
add
cld
bound
sub
jmp
jns
pop
stos
stos
mov
icebp
add
clc
push
add
push
mov
add
add
je
decb
js
and
icebp
jp
push
add
nop
std
ljmp
add
sub
mov
inc
lods
push
inc
add
or
add
add
add
add
push
insb
and
mov
mov
dec
std
cmp
call
sub
enter
and
outsb
cmc
sti
out
mov
jmp
popa
jg
jmp
ret
clc
jge
je
mov
xchg
ljmp
jmp
add
add
add
repnz
and
add
add
add
in
call
pusha
popa
and
pop
xchg
inc
mov
inc
jecxz
sbbb
insl
lock
mov
loopne
cmp
mov
loope
mov
sbb
push
sub
shlb
mov
mov
pusha
incl
sub
sbb
mov
cmp
add
add
add
incl
std
sarb
in
inc
add
jb
out
popa
jb
cld
push
call
out
insb
les
cmp
push
sbb
leave
or
push
bound
cmp
mov
xchg
cmp
jae
add
out
cwtl
adc
xchg
arpl
je
outsb
dec
cld
inc
call
add
add
pop
push
push
cmc
aam
inc
push
in
out
out
call
jle
ljmp
sbb
rclb
int3
mov
xchg
addr16
add
add
out
addl
push
xor
jge
or
lock
add
xor
imul
mov
ret
roll
jmp
add
int
add
add
add
insb
fildl
jge
lgs
jmp
push
pushf
in
add
inc
push
pop
cli
dec
nop
sub
cltd
insl
push
jmp
pop
repz
mov
adc
push
and
inc
sbb
push
adc
jl
xchg
adc
push
or
add
lcall
test
add
in
push
cmp
add
add
les
sub
dec
push
roll
test
out
popa
add
repnz
jmp
cltd
push
adcl
and
push
jb
js
loope
inc
jne
push
add
repnz
cli
lods
jmp
out
jo
or
out
outsb
or
push
aaa
add
push
add
add
mov
shr
add
outsl
int3
add
xchg
in
push
cld
nop
add
jne
xchg
call
int
push
pop
test
add
out
push
lods
sub
nop
outsl
or
cmp
inc
inc
jge
or
ds
push
in
push
pop
jb
cld
mov
cs
test
test
and
add
and
cmpsl
pop
divl
add
push
add
add
add
or
fsubrs
incl
push
leave
add
call
test
jmp
add
fs
fcompl
out
adc
jle
in
nop
inc
xchg
cmp
aam
pop
out
inc
add
sar
mov
sti
aaa
stos
or
insl
roll
xor
cld
test
mov
push
lea
bnd
or
add
add
popf
mov
popa
cld
mov
or
movsl
sti
push
std
cmc
sti
fldenv
push
add
out
bound
jae
sti
mov
dec
mov
imul
mov
in
jbe
jmp
or
inc
jae
notb
negb
notb
les
rorl
sbb
add
cmp
add
push
pop
xor
scas
cmp
mov
cmp
adc
xchg
jmp
cld
call
inc
add
in
js
call
pop
inc
jmp
add
add
cmp
sarb
or
jne
sbb
inc
add
ficompl
call
ret
loop
cmp
add
add
xorl
dec
stc
arpl
shrb
dec
leave
stos
loop
push
jb
dec
push
sbb
push
push
xchg
push
in
sti
xchg
ja
ret
add
sub
pop
sbb
add
test
jns
std
sbb
cli
adc
fs
ret
add
jne
filds
adc
adcl
test
add
add
add
jnp
out
cmp
jb
jmp
add
bound
mov
push
leave
lds
add
jecxz
jge
add
ret
sub
cmp
outsb
das
sub
incl
add
testl
aas
mov
loope
cwtl
add
add
in
cmc
notl
xlat
call
mov
push
push
add
add
ljmp
shr
enter
pop
push
xor
pop
add
outsl
jmp
pop
xchg
mov
cltd
addr16
out
jmp
cld
sti
jne
or
out
inc
xchg
adc
pushf
xchg
hlt
repnz
or
outsb
push
or
mov
push
loope
call
sbb
push
insl
sub
dec
push
mov
xlat
push
add
add
add
pop
cld
push
sbb
jne
or
test
repz
sub
xchg
addb
outsb
ret
inc
push
sti
aad
pop
fadd
xchg
mov
out
hlt
jmpw
add
add
rcll
cmpsl
repnz
push
mov
repnz
jnp
std
push
push
xchg
jmp
std
jne
outsb
repz
push
and
cmp
mov
add
jmp
cld
cmp
add
dec
cmp
mov
mov
fidivl
ret
mov
mov
repnz
xchg
inc
push
push
jle
test
pop
sub
sub
call
inc
sbb
sti
jo,pt
test
ds
sub
xchg
mov
add
jo
call
mov
add
add
arpl
call
jae
sub
xchg
jmp
pop
cmp
addr16
pop
xor
jns
sbb
push
push
sarl
cmpsb
jnp
test
push
pop
cmp
cmp
add
ss
cmc
add
cli
mov
fimuls
push
aas
jo
inc
rcrb
add
add
add
add
in
push
push
lea
push
bound
stc
call
jge
test
jo
mov
bound
mov
push
testl
cli
adcb
cli
mov
dec
jo
inc
xor
add
ljmp
addl
call
push
je
lcall
mov
xchg
push
sti
fwait
loope
fwait
jle
clc
xchg
add
add
fs
jne
stos
mov
fs
out
push
fs
adc
lods
push
or
out
rcrl
scas
inc
mov
pop
inc
jae
pop
lods
in
dec
fnsave
aaa
sbb
loop
jb
adc
imul
sti
mov
loop
pop
cli
inc
mov
mov
fdivr
cs
je
pop
jns
add
add
add
aaa
xor
ja
sub
flds
js
sub
or
add
push
add
loope
sbbl
inc
leave
lret
cs
movb
in
aaa
sub
xor
je
mov
stc
ffree
and
xchg
pop
push
call
inc
rolb
add
mov
cld
xor
inc
dec
add
out
in
add
fldl
mov
outsl
dec
ljmp
repnz
pop
and
jne
add
pop
ss
adc
cmc
cmpl
dec
fstpl
mov
jno
std
mov
out
shr
in
add
lcall
add
add
add
aad
in
shl
and
insb
sub
jl
jnp
jmp
fxch
xchg
mov
outsb
shlb
je
add
cld
lds
inc
jmp
mov
ja
add
cmp
add
add
decl
shlb
shr
js
call
push
divl
push
call
pop
push
inc
xlat
add
add
push
add
nop
in
orb
add
add
cs
nop
in
orb
add
add
sub
push
ret
push
mov
test
add
sub
incl
clc
or
in
js
lock
testl
out
rorb
sbb
mov
sbbb
sti
cs
add
or
add
add
sbb
adc
pop
repnz
inc
add
sahf
add
cmp
call
insl
sti
add
sub
call
sti
leave
mov
pop
and
sti
jmp
outsl
sub
ficompl
hlt
je
in
call
or
and
aas
aam
incl
in
xchg
hlt
shlb
jge
jecxz
push
pop
sub
icebp
add
ja
xchg
add
add
dec
call
xor
jne
jle
jmp
cld
data16
sub
add
sbb
loop
jno
jmp
cld
push
lds
sahf
jmp
daa
add
xor
push
out
into
adc
les
push
jmp
add
ljmp
scas
je
ss
jle
and
xchg
inc
imul
jg
xor
daa
fucompp
adc
fadds
add
cmp
out
in
push
and
cmp
and
rcll
lock
xor
sbb
and
cmp
or
sahf
sbb
test
ljmp
xor
pushl
aad
in
adc
add
dec
push
cli
mov
ja
or
ljmp
mov
jl
rcr
inc
add
xchg
sub
inc
insb
inc
and
sbb
adc
ja
add
sbbb
sub
push
lods
out
divl
inc
call
mov
je
negl
out
jnp
jge
or
jno
push
jo
or
add
add
add
idiv
pop
lret
xlat
gs
or
clc
call
inc
and
addr16
and
push
mov
out
hlt
icebp
testl
and
push
shrb
and
dec
cmc
out
push
jge
lret
dec
shlb
dec
and
fidivl
or
fdivrl
lock
filds
push
xor
sub
add
add
add
cmpsb
aam
jnp
sub
push
sub
addr16
sub
dec
jmp
or
aaa
stc
or
jl
lret
push
jmp
lcall
scas
int
sti
inc
notb
lea
aaa
call
push
jae
test
popf
and
out
add
lock
cmp
adc
xor
aaa
xchg
lock
stc
sub
add
add
pop
insl
cmp
loop
fiaddl
loop
loop
or
outsb
dec
adc
sarb
and
xchg
ret
sbb
fstpt
jmp
out
jae
add
out
adc
fcomps
add
sbb
jge
sbb
sub
or
push
imul
movb
out
lds
aad
fcomp
icebp
mov
test
add
add
add
pop
sub
add
mov
and
test
in
add
and
xlat
lcall
add
inc
and
out
dec
ss
jae
jo
sbb
cmp
adc
iret
dec
data16
jo
sbb
sbb
test
cltd
sbb
loopne
sbb
out
pusha
add
in
daa
pop
int
stc
adcl
add
mov
stc
sbbl
add
add
repz
and
stc
jae
fsubrs
shrl
lcall
fdivrs
sub
add
dec
mov
call
mov
fs
mov
repz
je
das
sbbb
je
jecxz
shll
add
fs
inc
add
pop
add
cld
ljmp
add
add
dec
cmp
jnp
adc
mov
sbb
mov
sbb
icebp
imul
fstpl
inc
loope
test
push
pop
mov
call
pop
les
es
lods
pop
lea
mov
push
adc
dec
and
lret
xor
push
inc
out
jo
and
pop
dec
and
mov
or
in
adc
add
call
sub
push
sub
sub
fcos
call
test
mov
and
pop
add
gs
xlat
outsb
test
sti
cmp
fstl
and
add
jmp
lods
cmp
std
out
jecxz
daa
ja
daa
rolb
popf
daa
incb
xchg
daa
add
sub
sbb
sbb
add
add
add
add
orps
adc
pop
xor
in
ficompl
jmp
insb
or
jmp
jecxz
and
fsubrs
jo
sbb
movb
inc
pop
xchg
jmp
inc
pop
cltd
ja
dec
test
call
push
jmp
xchg
inc
clc
gs
add
add
add
sbb
std
call
mov
loope
jnp
fwait
mov
jl
sti
push
cltd
jecxz
sub
fistpl
out
add
jne
std
dec
xor
add
test
std
fst
sbb
cmp
adc
adc
add
mov
sbb
das
ret
or
pushf
jns
popa
cmpsb
in
add
add
add
bound
add
adc
cmovnp
add
dec
push
dec
jge
inc
xlat
jp
add
adcb
fwait
push
imul
fmuls
add
or
call
sbb
call
fstpt
in
das
push
add
int3
in
xor
stos
dec
dec
lret
jmp
dec
push
call
add
add
add
dec
dec
push
pusha
push
in
lret
push
jle
lock
lock
fsubl
jno
test
scas
add
out
fs
shrl
push
jnp
out
push
iret
mov
sti
arpl
out
cmp
jp
cltd
pop
jae
mov
adc
jmp
out
fs
jae
jmp
cli
add
add
add
lea
out
jmp
cmp
out
and
ret
inc
out
in
jg
in
jno
insl
stos
jmp
push
push
bound
out
add
mov
ds
fdivrl
mov
fistpll
sub
push
ds
sub
stc
fs
pop
sub
loopne
adc
xor
push
jnp
and
fildl
add
add
jb
xor
imul
mov
loopne
fildl
mov
repnz
imul
in
add
push
inc
push
pop
enter
cmpsb
dec
jo
jmp
out
add
push
mov
inc
add
xlat
cmpsb
fistpll
sub
xchg
insb
or
gs
fldcw
in
pop
add
add
add
hlt
xchg
sub
add
fistpll
in
xor
mov
push
in
sub
adc
pop
sahf
push
sub
add
popf
roll
xor
add
sbb
sti
das
add
add
cmpsl
add
and
lahf
add
sahf
test
push
pop
add
add
loop
out
mov
add
add
cmp
out
mov
add
add
add
mov
mov
lea
int
push
loope
dec
inc
aad
inc
sub
inc
fistpll
cmp
outsb
add
xchg
rcrl
pop
inc
fadds
pop
cld
inc
add
jmp
out
rorb
cmp
or
pop
cmp
test
add
add
xchg
idiv
mov
jb
or
in
jbe
aas
dec
mov
daa
add
jae
jecxz
add
in
xchg
fdivrs
add
sti
add
js
ljmp
sti
sti
int
inc
out
out
push
sarl
sti
mov
xlat
mov
push
jnp
fwait
sbb
push
xchg
inc
push
mov
add
add
add
add
dec
fdivrs
repnz
push
mov
rcl
push
in
incl
out
jmp
fistpl
neg
in
add
or
pop
call
rcrb
or
cmpsl
decl
adc
std
hlt
fistpl
xor
mov
sahf
add
xlat
push
in
fldl
sbb
jo
mov
add
add
outsl
stos
jmp
sub
or
jle
add
add
inc
stos
outsb
add
add
xchg
push
imul
cmp
add
push
lret
pop
call
sti
mov
push
adc
popa
fidivrs
inc
jmp
mov
out
clc
shrb
jmp
pop
xchg
test
sbb
add
add
add
or
movsb
xor
in
aad
fisubrs
test
bound
adc
jns
aaa
push
inc
cld
mov
in
jp
movsb
aas
add
push
inc
add
hlt
sbb
test
mov
mov
inc
sub
add
mov
out
xchg
shr
sub
jo
push
leave
test
add
jmp
in
mov
add
add
pop
incl
stc
adc
outsb
pusha
add
cmp
xor
rorb
mov
sub
mov
sub
jecxz
or
and
outsl
jmp
call
cmpb
aaa
or
mov
lea
jecxz
mov
pop
add
call
or
and
add
and
out
repnz
and
or
add
add
add
jbe
push
arpl
out
xchg
mov
in
movsl
or
ret
pop
lock
mov
cmp
xchg
stc
jl
adc
and
shlb
or
push
inc
hlt
ja
loopne
push
xchg
imul
cli
leave
les
push
hlt
jg
sti
mov
ret
pop
dec
and
add
lcall
add
add
add
push
loope
testb
jns
and
sti
int3
outsl
mov
mov
cmp
inc
xor
testb
cmp
or
out
add
adc
sbb
cmc
jl
add
add
or
stos
push
loop
sbb
add
repnz
jmp
add
jmp
add
mov
test
or
and
out
xchg
adc
push
aad
xchg
loope
cmp
addr16
shrb
inc
in
jb
or
out
xchg
inc
jno
sub
cmc
in
outsl
shr
in
add
mov
mov
dec
pop
repz
sub
nop
add
add
add
add
jg
inc
repz
cmpsb
cli
and
sub
leave
stos
testb
test
scas
std
incl
insl
or
cmp
xchg
add
idivb
push
fsts
wbinvd
add
shlb
xor
jmp
xorl
cmp
push
fists
pop
decl
mov
je
mov
call
cld
add
sarb
into
mov
add
add
leave
std
out
jns
testl
sub
call
jnp
jbe
ljmp
lret
out
xchg
cld
push
pop
sub
in
xchg
std
call
sub
in
xchg
test
addr16
mov
jb
out
push
aas
or
decb
push
add
fadds
add
lock
shl
xchg
es
shll
jle
mov
ret
pushl
out
inc
cli
call
aam
in
fcmovbe
test
or
lea
stc
mulb
push
xchg
cmp
je
adc
sti
ds
inc
jns
sti
and
add
subl
add
add
add
out
cld
lock
cltd
add
add
test
test
cmp
ret
mov
fsubrl
fldl
out
lcall
push
sub
inc
add
add
cld
out
out
test
push
repnz
outsl
loopne
jmp
mov
in
test
mov
je
adc
cmp
add
add
add
jo
inc
out
add
bound
imul
bound
sub
pushf
popa
jg
outsb
lret
lock
mov
xchg
shrl
mov
mov
outsb
sar
cmp
jb
pop
test
shrb
je
sbb
inc
outsl
add
jmp
in
test
fnstsw
cmp
add
add
addr16
adc
add
push
repnz
shrl
jmp
mov
test
enter
push
sbb
inc
and
test
addl
inc
and
lcall
jne
orl
sar
jnp
or
inc
and
das
adc
test
sar
jmp
out
movsl
add
add
add
mov
rolb
pop
mov
pop
orl
add
sti
gs
add
mov
mov
add
ds
add
pop
jnp
add
addl
lds
std
popa
add
push
jle
loopne
mov
shrb
add
xchg
iret
push
jne
out
ss
test
add
add
add
pop
mov
out
out
gs
andb
mov
dec
mov
pop
fiaddl
cs
inc
clc
pop
popf
rorl
jo
add
out
sbb
out
out
pushl
in
bound
faddl
loope
addl
out
inc
push
dec
inc
hlt
roll
xchg
mov
jmp
cmp
add
mov
xchg
mov
add
add
call
test
in
adc
out
add
test
add
add
fxam
xchg
and
add
jmp
fnstenv
popf
sub
add
imul
leave
xor
or
add
out
add
inc
int3
xor
ret
mov
jmp
or
and
cmp
push
in
test
add
add
idiv
cmp
dec
shr
nop
outsb
xchg
jb
daa
mov
and
mov
lock
cli
mull
shl
or
imul
hlt
repz
push
into
xchg
iret
sti
jmp
ror
mov
lret
sti
insl
lods
push
push
fs
push
adc
mov
xchg
inc
les
adc
inc
jo
sub
add
add
and
mov
add
or
xchg
adc
sti
into
scas
int3
cmp
lret
sbbb
cld
dec
or
sahf
movl
add
dec
inc
cld
ljmp
jmp
push
scas
or
lds
inc
add
dec
cli
dec
mov
mov
test
das
pop
mov
orl
inc
clc
add
add
add
add
fiadds
pop
cmp
je
int3
aas
lock
mov
add
add
out
ss
decl
addl
mov
lock
bound
mov
inc
cld
icebp
pop
push
cli
stc
mov
add
sbb
incl
loop
sub
xchg
jo
add
out
out
xor
cltd
pop
add
jecxz
add
add
add
push
adc
xchg
ljmp
scas
and
pop
aad
jb
cmpsl
or
pop
cmpsb
jae
stos
push
pop
adc
jle
cli
sub
in
sahf
out
jle
cmp
jp
mov
lcall
and
loop
dec
add
add
jae
add
jnp
mov
fadd
jmp
jp
arpl
fldenv
in
popa
jne
add
add
out
add
ljmp
cltd
add
inc
jns
or
sti
jge
rcll
ficompl
add
add
xor
inc
sub
fadds
aas
mov
pop
jb
out
add
pop
dec
int3
or
jae
ljmp
sbbl
call
pop
add
add
add
into
out
fwait
add
in
lret
fnsave
add
push
add
jmp
sbb
sbbb
jne
push
cmc
mov
xor
aam
out
aas
jmp
lods
push
pop
jb
mov
call
out
mov
jge
mov
or
mov
cmp
xor
and
add
add
add
call
add
enter
cmpsl
dec
decl
push
inc
pop
add
mov
test
fsubr
mov
inc
clc
jb
push
push
xor
add
lea
adc
jge
push
cmp
call
dec
lds
xor
call
ljmp
idiv
adc
call
push
push
push
mov
add
add
dec
mov
inc
jae
call
mov
js
jne
lods
fsin
adc
inc
hlt
out
mov
out
xlat
jmp
adc
into
sti
cwtl
dec
lods
call
jae
iret
call
push
pop
or
loopne
sbb
out
scas
std
mov
xlat
ret
int
into
das
scas
inc
cs
cmpsl
xchg
add
and
test
add
add
or
and
xchg
icebp
adc
insb
pusha
inc
je
push
int3
pop
add
xlat
adc
lods
dec
scas
call
leave
push
adc
aam
imul
jae
popf
cmc
xchg
fldt
mov
push
scas
mov
test
stc
xor
jle
dec
lcall
pop
ljmp
add
add
add
arpl
cltd
push
int3
loopne
testb
jg
mov
fisttpll
jbe
xchg
dec
test
mov
xor
imul
pop
data16
dec
fildl
jbe
mov
clc
xchg
mov
mov
ret
xchg
add
jp
add
sti
shlb
jns
rcrl
test
cmpsb
xor
pop
inc
bound
sub
sub
add
lock
nop
inc
jle
cli
dec
ljmp
push
sbb
cmovg
cmp
pop
bnd
or
stos
or
inc
stc
fnstcw
fisubs
test
test
or
cwtl
cld
out
leave
jle
add
cld
pop
stos
add
data16
pop
jp
shll
add
sub
lahf
push
xchg
add
add
push
inc
mov
call
loope
and
push
das
push
out
lods
push
call
call
mov
inc
adc
add
pop
std
je
sub
cmpsl
push
cld
jp
shll
add
xchg
pop
orl
add
push
sub
xor
ret
jnp
jnp
sbb
mov
add
add
or
add
bound
out
cs
or
adc
fmuls
inc
bound
jne
lret
sub
call
xor
cwtl
xchg
jne
int3
xchg
clc
and
xchg
incl
imul
mov
incl
out
xlat
test
outsl
ret
decl
sbb
call
add
add
add
push
sub
in
incl
imul
dec
push
jg
jnp
pop
add
scas
iret
mov
and
add
add
pop
pusha
incl
jp
fidivl
xor
lds
sahf
mov
mov
jns
into
jecxz
testl
add
add
jg
add
mov
mov
into
adc
add
add
rol
push
sub
lds
fisubrs
inc
icebp
sub
les
fs
test
repz
call
int
and
mov
xlat
in
pop
scas
add
xchg
sub
or
add
mov
or
rorl
shl
lahf
inc
fsubrp
outsb
xorl
out
mov
jo
pop
mov
add
es
jecxz
dec
and
cmp
and
lods
add
sub
je
adc
sti
sbb
mov
fldl
sti
cmp
je
test
xchg
filds
add
mov
fnstcw
mov
ret
add
add
lock
lcall
clc
notb
add
add
add
inc
xor
adc
cli
test
sub
call
lret
or
je
inc
psubsb
sub
cld
incl
mov
jne
lock
lcall
notb
mov
je
movsl
xchg
pop
mov
ret
sbb
or
pop
mov
jmp
mov
push
add
add
add
das
xchg
dec
jmp
jg
push
push
or
pop
jnp
jns
iret
adc
and
das
mov
rcr
js
or
sbb
aam
push
inc
add
out
test
add
push
dec
and
xlat
xor
dec
cmpsl
xchg
and
aas
add
add
add
push
lret
rol
je
test
shll
xor
add
jmp
fcomps
mov
gs
and
insl
add
ret
add
test
lret
test
sub
adc
daa
pushl
dec
lock
sarb
add
fs
les
data16
dec
std
xchg
notl
push
add
add
add
test
add
add
inc
lods
add
test
loop
fs
jp
dec
movups
sub
push
or
jb
or
jmp
lcall
daa
shl
shl
xchg
test
notl
dec
push
push
push
pop
sti
pop
jecxz
bound
inc
mov
fldt
add
add
movsb
sub
das
aaa
jnp
add
in
test
lahf
inc
xchg
insl
mov
xchg
sbb
div
test
cmp
out
iret
aaa
sbb
mov
enter
sbb
push
cmp
and
repnz
sarb
dec
decl
sbb
rcl
add
movsl
xor
mov
mov
add
add
fsubl
sbb
push
xchg
or
pop
hlt
dec
xor
lea
and
pop
push
add
push
stos
repz
aam
add
incl
jecxz
lret
xchg
int
ja
mov
test
addl
add
adc
jmp
ret
loopne
out
and
aam
pop
test
std
ljmp
add
ret
scas
inc
daa
mov
ret
inc
imulb
popa
cld
out
sub
add
adc
cmp
push
clc
lds
jle
test
jmp
repz
stos
jl
bound
xchg
sub
out
and
ret
enter
or
mov
add
sbb
pop
clc
scas
xor
or
lahf
xlat
iret
add
add
add
add
add
outsb
cmp
mov
js
add
add
shll
mov
and
cmp
pushf
mov
fidivrs
mov
test
clc
out
xor
jp
mov
jae
jno
mov
aad
push
mov
inc
inc
pop
stc
mov
movb
inc
inc
pop
ret
mov
add
jmp
lret
mov
and
test
add
in
dec
push
jb
cmp
or
gs
cld
pusha
adc
shr
in
add
xor
xor
andb
lret
stos
add
jmp
sarl
stos
jnp
cmpsl
jmp
add
add
add
cmp
imul
mov
mov
aaa
clc
test
insl
mov
stc
lock
andb
cmp
out
lret
sub
add
pop
dec
add
fisttps
cmp
lcall
jmp
ds
cmp
jae
cltd
mov
xor
add
add
dec
xchg
cmp
sub
enter
add
add
jg
or
mov
jg
push
call
cmp
je
cmp
jne
adc
push
inc
fadds
ret
scas
test
push
mov
mov
cmp
je
les
mov
inc
cld
mov
ljmp
mov
fmuls
enter
add
pop
push
daa
pop
xchg
daa
mov
add
add
add
mov
out
insl
add
sub
ret
or
add
out
mov
in
add
mov
stc
sti
mov
call
jne
es
jbe
mov
aaa
sub
cmpsl
decl
andl
in
xchg
fists
inc
and
add
add
mov
fiadds
xorl
inc
pushl
decb
loop
fxch
repnz
clc
fnstcw
fsubr
lahf
nop
sub
jle
add
sbb
ljmp
fldt
xor
insl
loop
pop
pop
mov
add
add
iret
ds
add
add
add
rolb
inc
test
mov
jmp
inc
jmp
out
xchg
inc
jl
push
sub
or
mov
shlb
inc
loope
pop
hlt
push
mov
push
scas
add
mov
clc
sar
jg
mov
sti
out
push
mov
pop
aas
dec
lret
jae
jg
testb
mov
das
jle
add
add
jne
hlt
pusha
and
sbbb
xchg
adc
add
push
pop
cmp
outsl
and
clc
or
pop
outsb
pop
test
ljmp
adc
jg
jne
gs
adc
add
push
and
pop
std
mov
xchg
xchg
add
add
add
lock
inc
les
div
add
hlt
jbe
in
pop
loope
add
sarb
xchg
out
pop
push
pop
pop
mov
divl
out
and
imul
sti
in
je
add
jae
ret
in
enter
mov
mov
sti
mov
mov
ret
stc
sub
scas
xchg
add
mov
cli
arpl
lods
fnstcw
ret
mov
gs
push
push
jne
xchg
and
mov
sbb
xchg
lods
pushf
out
cmpsl
incl
call
ljmp
scas
orl
adc
sub
sbb
dec
cmp
mov
push
test
jmp
cmp
add
add
cs
jmp
jge
ljmp
add
mov
cmpb
cmp
dec
loop
jno
icebp
mov
add
cmp
jl
aaa
jmp
xchg
aaa
out
test
test
aam
je
icebp
jge
ljmp
loope
or
mov
fs
xchg
add
aam
push
je
add
add
mov
pop
pop
mov
or
mov
movsb
push
sahf
je
xchg
sub
jo
adc
xor
add
insb
pop
sub
fisubrl
add
mov
in
add
into
fmull
ficomps
call
jne
jecxz
add
inc
repnz
adc
xor
cli
outsl
add
add
add
add
in
cmp
pop
sub
sti
add
or
insb
jnp
xchg
jne
or
jne
mov
mov
cld
outsb
jne
lret
and
into
je
inc
rolb
ss
jne
xchg
mov
aas
cmp
inc
jecxz
adc
jnp
push
mov
adc
sub
dec
or
mov
add
add
push
mov
in
out
inc
or
cmp
test
orl
xor
sub
arpl
mov
jl
jmp
xchg
pop
jg
push
xor
rorl
cld
imul
bound
inc
leave
sub
mov
or
mov
test
add
add
add
add
dec
cltd
mov
sub
cli
out
es
sti
add
out
out
ret
mov
push
lods
or
and
out
or
mov
imul
stos
mov
pop
pop
jp
jp
dec
push
jne
jle
jno
gs
mov
jo
jno
mov
xchg
dec
pop
test
add
add
lahf
dec
outsb
mov
test
mov
or
jno
adc
mov
mov
out
andb
hlt
addb
mov
enter
incb
aad
sub
xor
xchg
push
inc
sbb
add
add
push
sti
xor
addl
loope
sahf
push
jns
insb
pop
aaa
push
mov
add
add
sbb
inc
jne
inc
or
jns
xor
pop
mov
push
push
xchg
sbb
xchg
decb
test
jb
xor
incb
mov
stc
cli
cld
inc
add
push
call
je
jmp
ss
mov
pusha
out
test
pop
std
push
mov
stos
adc
pusha
sub
scas
add
pop
cli
xor
add
add
xchg
add
pop
sub
adc
sbb
jp
mov
add
insl
pop
je
loop
rolb
mov
add
cli
gs
add
push
test
push
jo
pop
test
loopne
xor
jecxz
add
dec
and
pop
add
push
mov
xor
jne
add
lock
mov
add
add
add
add
cmc
or
push
scas
add
inc
out
and
mov
rcrb
mov
icebp
mov
notb
into
out
addb
stos
jne
xchg
mov
das
movsl
push
cmp
lret
filds
pushl
and
fdivl
xor
shlb
lahf
call
push
sub
mov
adc
add
add
and
adc
lcall
out
out
push
das
stc
das
inc
adc
pop
scas
cmp
mov
jmp
inc
addr16
lea
test
in
add
xor
stc
flds
jae
jmp
sbb
sarb
cmp
fidivrl
add
add
fldcw
xchg
or
fimull
add
sub
fiaddl
in
mov
xor
arpl
xorl
ret
les
cmc
outsb
es
add
add
in
add
adc
jmp
cs
cmp
not
push
sbb
xchg
push
jne
jb
or
mov
add
sti
xchg
inc
test
test
call
cmp
out
insl
mov
imulb
sti
pop
cwtl
xor
lock
test
dec
icebp
call
test
push
call
pop
test
hlt
cmpsb
cmp
add
inc
hlt
jle
lock
jae
push
out
inc
add
add
add
decl
cmp
adc
push
pushl
sbbl
inc
add
add
mov
imul
add
jae
stos
mov
adc
idiv
lock
pop
push
rolb
push
outsl
roll
sar
inc
aam
jmp
mov
or
sub
ljmp
mov
orl
jmp
call
pushf
inc
call
add
out
loop
dec
out
les
jae
mov
icebp
clc
jns
daa
shr
lea
xchg
cli
ror
dec
xchg
push
mov
dec
mov
add
xor
rorb
dec
imul
add
sub
jmp
sub
jae
sbb
or
and
loop
mov
xor
or
xchg
add
add
negb
sub
gs
add
xchg
cmc
add
neg
or
inc
loope
out
xor
std
sbb
add
jae
pusha
add
dec
mov
cmp
and
leave
push
or
dec
out
fdivrl
test
inc
jg
and
adc
out
scas
dec
les
mov
cmp
add
add
jp
sub
push
fnstenv
out
jle
test
mov
ja
lretw
sub
stc
mov
add
xor
loope
mov
add
dec
sub
repnz
lcall
clc
add
ss
in
insl
shlb
test
add
scas
call
in
dec
add
add
add
push
repz
hlt
jmp
add
bound
mov
inc
cli
xor
push
repz
int3
movsl
add
jo
or
mov
fs
movsl
jne
fimull
jo
mov
mov
xor
pusha
dec
jl
cmp
inc
std
incb
adc
jne
mov
jmp
jl
fists
push
std
dec
lea
dec
lea
add
add
adc
push
les
xchg
add
into
je
cmp
add
push
add
sarb
rorb
andb
xor
lret
sar
in
mov
push
inc
mov
sar
pushl
lock
ljmp
je
jno
push
out
sbb
aam
ss
test
scas
xchg
inc
std
add
add
add
add
and
aaa
das
test
daa
das
and
gs
jl
jp
mov
and
fnstenv
movb
mov
stos
out
les
and
mov
sbb
fiaddl
xchg
xchg
mov
xchg
out
adc
sbb
jl
jns
mov
out
stc
sbb
jl
add
add
add
push
cmp
add
adc
in
js
fstpl
or
push
pop
and
stos
call
add
call
jmp
dec
jl
into
inc
ret
addr16
cmp
mov
insb
out
add
add
popf
xorl
jl
inc
out
ja
pop
ja
test
add
add
add
andb
jns
mov
sti
jae
enter
fdivrs
inc
add
shlw
test
add
lods
cmp
mov
idivl
in
lahf
dec
or
fldcw
aaa
lea
stos
dec
sub
test
in
add
je
jge
push
mov
cmp
add
add
in
push
push
div
cli
hlt
test
aas
jmp
jmp
dec
lods
jne
cld
scas
inc
test
adc
imul
add
pop
jg
pop
mov
adc
pop
imul
lcall
adc
cltd
pop
adc
dec
lcall
divl
dec
notl
jl
or
add
add
xchg
inc
aam
jle
idiv
xor
bound
call
jne
fdivs
mov
push
adc
cmp
adc
push
jne
mov
out
pusha
or
adc
cld
dec
push
sub
sub
pusha
into
cmp
sub
push
push
popa
lods
sti
cli
add
adc
push
inc
or
cwtl
jp
sbb
sti
add
add
add
dec
push
sti
sti
sbb
adc
mov
inc
hlt
ljmp
add
call
repnz
inc
sti
adc
pop
decl
pop
ret
xchg
lcall
mov
mov
clc
std
flds
out
adc
les
xchg
jecxz
push
lods
sti
add
test
adc
add
lods
add
add
add
mov
inc
out
jbe
test
cwtl
hlt
call
aaa
and
std
pop
dec
ds
push
xor
xchg
fwait
lods
sti
mov
fs
fwait
imul
cld
mov
inc
jmp
jnp
cmpsb
push
pop
fdivr
clc
test
jno
or
sub
or
adc
add
jl
xor
mov
aas
jmp
sub
scas
je
orb
dec
sbb
push
addb
loope
std
xchg
divb
in
jecxz
lea
xor
push
jmp
sti
jb
clc
shl
cltd
or
stc
inc
add
mov
mov
sbb
jmp
aas
jp
int
add
add
in
pop
adc
call
je
xchg
jmp
ljmp
inc
jmp
cwtl
adc
loop
sub
movl
add
cld
push
ret
push
mov
add
add
dec
cmpl
cs
sarl
jg
xchg
std
notb
mov
mulb
xor
add
add
adc
push
testb
je
push
jne
enter
inc
std
addb
incb
in
cwtl
divb
imul
imul
jns
mov
lock
inc
add
fistpll
mov
icebp
cli
cltd
les
jmp
in
in
sti
fildl
les
das
add
mov
inc
or
push
sti
add
add
add
mov
inc
out
cmpps
sti
out
aaa
imul
cwtl
and
and
mov
out
lahf
test
jb
das
sbb
lods
test
aas
add
das
or
mul
add
jne
mul
icebp
ja
adc
sub
mov
inc
jmp
loopne
adc
pushf
cmp
shrl
aad
add
add
add
xor
stos
push
sub
rclb
repz
test
sti
movsb
fldl
cmpsl
sti
inc
xor
xchg
cmp
pop
stos
icebp
add
push
jno
loope
lcall
jg
adc
test
test
aas
out
lahf
cld
xchg
inc
jmp
das
inc
fisubrl
es
arpl
or
add
add
or
sti
fisubrs
adc
fldpi
push
into
rorb
sti
fsubrl
add
aas
mov
sti
cld
xor
mov
jb
lods
xchg
nop
hlt
ret
fldcw
inc
mov
fs
cltd
jne
pushf
cltd
adc
scas
mov
mov
dec
inc
add
xor
cmp
mov
add
adc
lahf
add
arpl
filds
notl
dec
push
test
cmp
xor
rorb
sbb
outsb
adc
cwtl
notb
adc
mov
pushf
notb
in
add
jbe
sbb
push
xor
adc
enter
fsubs
or
add
add
nop
lock
adc
push
push
pop
incb
dec
jp
lcall
divb
xor
adc
xor
ret
push
mov
add
ljmp
sahf
add
test
out
cmp
xchg
push
cs
loop
out
test
out
adc
jl
test
mov
idivb
pushf
pop
push
jl
lea
add
add
sahf
sbb
out
push
mov
add
call
mov
push
push
popf
push
movsb
adc
in
and
jae
cmp
nop
add
lcall
cs
imul
mov
sub
fs
popf
or
aad
fs
cmc
jne
ljmp
jo
ficomps
call
add
out
lea
fwait
ret
inc
xor
subb
jle
fwait
stos
movsb
push
sub
jmp
xchg
sbb
adcb
push
cmc
or
scas
add
repnz
repnz
add
outsb
mov
scas
add
xor
xor
lcall
test
dec
xchg
sti
mov
mov
add
fldlg2
mov
insb
or
add
in
cs
push
pop
lcall
xchg
mov
shlb
hlt
mov
insl
hlt
xchg
sti
xchg
cmp
aaa
and
mov
lea
in
leave
pop
cs
mov
lods
add
aaa
outsb
adc
jmp
orb
add
add
add
not
jl
pop
adc
xchg
les
dec
and
int3
or
xor
jmp
and
add
divl
add
std
jmp
add
pop
out
ljmp
inc
add
xchg
pop
xor
pushl
jmp
imul
adc
push
jnp
push
add
add
jle
rcrb
rcrb
pop
ret
jb
in
cmpl
mov
xchg
das
push
inc
out
cmpsl
push
mov
and
inc
test
test
pop
xchg
push
loope
pop
sti
add
aas
out
and
je
je
lea
jp
sti
inc
xchg
mov
mov
popf
sti
arpl
xor
add
add
add
add
frstors
sti
out
sub
sti
out
and
xchg
jmp
inc
hlt
fimuls
shr
into
inc
or
add
hlt
call
xor
pop
sar
daa
movsb
fimuls
sub
or
neg
in
test
jae
xchg
hlt
dec
sbb
hlt
stos
loopne
jmp
push
out
add
stos
add
add
add
ljmp
aas
stc
sub
out
add
xor
xchg
xor
test
lods
mov
jbe
jmp
hlt
sbb
fs
fcmovu
adc
add
jbe
lahf
push
sub
jge
fcompl
inc
stc
insl
pop
and
in
add
aam
jge
inc
pop
cmp
jo
jl
in
add
testl
dec
in
mov
sub
sti
bound
add
sti
jmp
push
add
push
in
jecxz
sub
cmp
cmp
push
call
jns
aas
jmp
pop
cmp
sbb
push
call
jne
aas
jmp
and
add
sub
push
dec
push
int3
jb
inc
add
add
add
iret
mov
inc
out
adc
mov
addr16
adc
add
add
and
mov
je
xor
add
fimull
out
rol
add
cmp
sbb
fadds
inc
and
shl
rcrl
ret
push
jge
jne
mov
adc
ret
nop
cwtl
mov
add
add
add
std
test
out
repz
jg
mov
sti
dec
cmp
shl
mov
test
stos
aad
mov
stos
jecxz
jne
cmpsb
out
cltd
xchg
into
adc
and
add
inc
adc
pop
jecxz
fsts
mov
inc
das
lea
mov
mov
mov
cmp
in
xor
add
add
test
popf
dec
sbb
sub
arpl
or
cli
inc
lods
pop
xchg
popf
arpl
lahf
inc
xchg
sbb
test
inc
xor
mov
inc
mov
lock
pop
xchg
aam
add
mov
les
test
push
add
add
add
add
leave
cmp
sub
fsts
jmp
add
dec
jmp
popf
pop
or
add
shrl
mov
mov
xchg
sbb
jmpw
ss
test
or
mov
jb
fisubs
cwtl
jmpw
mov
xchg
das
and
cmp
add
add
add
aad
and
in
xor
xor
jmp
jmp
std
enter
and
cmpsb
ds
insl
repz
xchg
ds
add
cs
mov
adc
fidivrs
push
rorl
loope
mov
int
inc
mov
int
inc
pop
mov
jg
or
js
rorb
ja
add
add
add
push
addl
xchg
cmpb
mov
inc
mov
mov
cmp
push
and
cmp
ljmp
mov
int
call
cld
cli
sub
inc
mov
cmp
xor
inc
call
cmp
jb
adc
jbe
in
xchg
les
shlb
cmpl
addr16
cli
inc
mov
jne
faddl
stc
jb
mov
xchg
jne
cmpsb
xchg
sti
mov
jmp
xchg
out
push
mov
xchg
push
xchg
cmp
pushf
fdivl
repnz
sbb
out
icebp
push
stos
imul
call
lds
push
jne
out
test
mov
add
ljmp
jge
add
cltd
jae
xchg
nop
popw
fiadds
push
repz
insl
ret
xor
je
inc
repnz
data16
inc
or
inc
xchg
xor
xor
lods
sub
cs
lret
js
call
test
add
add
cld
imul
push
cltd
add
mov
cmp
ljmp
add
add
out
add
and
call
add
andl
adc
cld
cwtl
mov
add
cwtl
adc
test
cltd
push
add
in
mov
repz
add
sub
in
mov
sub
out
pop
mov
insl
sub
xchg
push
insb
adc
lock
xor
sbb
insl
sub
add
add
clc
xchg
sti
fmull
push
jge
jbe
and
push
mov
cmc
psubusb
icebp
mov
sub
adc
std
cli
push
dec
shll
or
lock
movlps
imul
movl
test
jne
incl
inc
or
incb
jecxz
ret
call
add
push
idiv
xor
mov
or
push
filds
sbb
cmp
scas
add
jnp
or
mov
mov
pop
clc
push
jl
sub
jns
icebp
mov
cmp
out
testb
std
leave
pop
call
mov
xchg
decl
lcall
add
cs
pop
scas
and
clc
int
das
push
and
xchg
push
rcrb
pusha
pop
xchg
add
xchg
decl
dec
jbe
pop
fcom
add
cwtl
adc
cwtl
push
adc
mov
push
and
rcll
inc
or
mov
jnp
mov
xchg
scas
je
mov
lds
sbb
imul
jmp
mov
mov
cmc
sub
jge
xchg
ds
lcall
gs
loop
push
mov
inc
std
call
sub
mov
loopne
mov
iret
incl
fsubrs
shll
lahf
push
jecxz
out
xor
int
sub
xchg
xchg
adc
and
add
add
add
sti
jae
cmpsb
jg
nop
jno
fnsave
cmp
daa
adc
out
sti
hlt
popf
icebp
aas
jmp
js
mov
cwtl
fisubrs
bound
stos
clc
or
pop
je
clc
dec
fildl
cld
pusha
loopne
sti
fdivl
aas
jmp
outsb
mov
add
add
das
out
or
jmp
add
add
call
xchg
push
outsl
cmp
jns
insl
inc
sti
jle
add
pop
sti
lock
filds
xchg
jbe
test
jne
or
addb
lcall
pop
mov
outsb
testl
add
divl
fmuls
ljmp
add
add
test
sti
call
cwtl
call
idiv
fdivl
mov
mov
scas
pop
popa
add
outsb
adc
mov
inc
sub
xor
js
cmpsb
push
movsb
hlt
insl
fsubr
dec
inc
jb
adc
jae
sbb
jecxz
stc
aas
out
sbb
je
cli
clc
dec
fcoms
push
add
add
add
mov
inc
fwait
clc
sub
xlat
add
stos
xchg
lret
out
outsl
mov
add
xchg
cmp
xchg
notl
scas
xchg
shl
inc
cld
jl
mov
jb
jb
push
dec
jo
sbb
aaa
sub
fwait
jl
addb
push
ja
int
xchg
add
add
jnp
daa
stc
mov
ds
out
add
add
add
inc
jmp
mov
add
cmp
jbe
daa
mov
push
jge
fcmovne
fiaddl
lret
mov
inc
push
jl
adc
jge
xchg
test
push
cmp
and
ret
jle
xchg
mov
cmp
mov
add
add
xchg
mov
divl
and
addl
add
add
add
mov
xchg
xchg
or
in
add
leave
clc
push
bound
inc
cmc
push
inc
outsl
mov
shlb
mov
repz
push
pop
jg
loope
mov
ljmp
push
std
add
dec
fs
cli
out
jle
mov
sti
fisubs
cmp
pop
jge
push
jns
ret
xchg
clc
lock
sti
scas
add
add
add
mov
test
clc
mov
test
std
cld
popa
add
jo
push
jo
or
inc
add
push
cwtl
sti
jmp
add
and
push
leave
add
jno
repnz
push
test
loope
imul
mov
ret
dec
jge
add
stos
jmp
add
add
dec
enter
call
sbb
idiv
aam
divl
dec
or
ljmp
push
add
out
test
adc
xchg
jle
and
adc
mov
push
mov
test
stc
and
push
incl
pop
dec
mov
add
add
add
or
dec
insl
notl
push
inc
clc
pop
clc
push
incl
lods
iret
adc
cwtl
jle
adcl
fsubl
pop
add
ss
adc
or
dec
ds
add
dec
mov
cld
xchg
loopne
jmp
inc
out
or
fwait
xor
jno
push
cmc
add
mov
or
add
add
sahf
mov
clc
loope
test
ja
cmp
fwait
sbb
out
jnp
xor
lds
in
fwait
hlt
repz
addr16
std
cld
fadd
test
rol
js
sti
data16
inc
mov
jbe
cltd
jbe
out
add
sbb
cmp
and
add
pop
add
xchg
or
add
add
add
add
das
test
addb
outsb
loope
sbb
add
das
std
call
stc
sbb
cmc
add
push
test
jb
stc
cli
stc
jne
jmp
in
jns
or
xor
push
mov
sti
push
outsl
xor
in
mov
add
scas
cld
call
sbb
mov
add
push
add
add
adc
or
push
addr16
add
decl
xor
fs
js
dec
cld
push
pop
inc
add
roll
in
mov
add
jnp
add
mov
or
cmp
jge
or
push
or
inc
dec
into
addb
xor
mov
cmp
orl
mov
add
aam
gs
inc
pop
jnp
fwait
jbe
cld
out
or
push
xchg
and
cwtl
inc
ljmp
push
push
movsl
adc
scas
xchg
add
icebp
jp
data16
jl
enter
nop
and
decb
adc
add
push
inc
xchg
nop
and
add
arpl
dec
and
adc
pop
mov
movsb
jp
add
add
add
push
push
mov
mov
xchg
sub
mov
mov
push
mov
mov
xchg
inc
push
mov
mov
sbb
xchg
add
jg
mov
and
sbb
stc
xor
adc
jns
xchg
cmp
add
sbb
push
xor
add
jge
mov
push
jmp
rcll
pop
stc
add
ja
lahf
rorl
push
les
inc
outsb
and
dec
movsb
lahf
jbe
xor
imul
out
jo
jmp
jp
add
sbb
add
xchg
jge
jmp
pushf
push
mov
push
mov
sub
cltd
sti
mov
add
add
add
inc
lds
dec
call
rorl
xor
leave
add
jb
sti
jmp
stc
or
and
jnp
push
roll
js
push
adc
jmp
pshufw
out
mov
out
cs
fs
push
addr16
movsb
jno
xchg
add
ret
pop
mov
testl
add
sub
aam
sub
sub
add
imul
add
mov
std
adc
push
jae
rcll
std
adc
test
fwait
push
sets
stc
lds
dec
sti
ret
mov
pop
movl
cmp
push
imul
xor
sbb
rol
data16
pop
push
repnz
mov
xlat
add
data16
mov
data16
add
add
inc
dec
data16
xor
jno
xor
push
icebp
ds
fdivl
and
scas
jecxz
rcll
pop
lods
repz
dec
push
movsl
adc
cwtl
test
or
test
das
xchg
repz
and
cs
mov
xchg
add
out
addr16
gs
adc
std
mov
add
add
add
iret
pop
sti
jmp
loopne
add
mov
out
ds
lods
testl
lahf
add
lcall
jmp
sti
mov
or
sbb
mov
mov
pop
icebp
cli
sahf
out
sub
lock
mov
pop
icebp
cli
push
out
sub
loop
mov
mov
add
add
das
pop
loope
ds
sub
cld
mov
mov
pop
loope
push
out
sub
push
mov
enter
scas
cli
mov
or
jle
adc
lret
loope
movsb
push
bound
adc
push
aam
xchg
or
sbb
fisttps
push
inc
cmpl
add
add
pop
add
bound
movsl
jb
fstpt
cmp
call
jo
add
and
ret
jae
mov
xor
ret
fnstsw
push
outsl
insl
and
xor
std
lods
in
into
ret
jnp
add
arpl
add
test
test
jbe
or
ljmp
cmp
add
add
add
lcall
xor
dec
add
fiadds
ret
add
clc
push
or
mov
cld
jne,pt
cmpl
jmp
cmp
rcl
mov
insb
sbb
adc
pop
mov
sub
jne
push
jp
add
add
jmp
cmp
ret
add
out
popa
cwtl
inc
add
add
add
or
or
lods
add
xchg
cmp
sbb
cmp
in
push
loopne
xchg
sbb
add
shll
or
in
and
out
aam
ret
add
movsb
dec
in
sub
cmp
sbb
and
add
out
add
incl
add
add
xchg
inc
or
add
jecxz
cmp
jmp
lods
add
out
shll
mov
cmp
mov
jp
pop
ffreep
call
ljmp
call
aaa
scas
call
mov
and
xor
xor
jmp
add
add
add
fsubr
ffreep
call
inc
les
and
pushf
sbb
cmp
adc
sub
jae
jmp
out
sti
push
jno
je
push
js
daa
notb
push
cs
js
test
jmp
ljmp
insl
ss
adc
js
jl
sarb
lahf
add
add
add
fldt
outsb
aas
jmp
sbb
inc
je
jb
xchg
mov
js
scas
icebp
nop
cmc
sub
add
add
sub
ficompl
test
out
sub
das
pop
nop
cmc
cld
je
flds
cmc
xchg
add
or
cmp
je
jmp
std
add
mov
add
lock
fcos
cmc
push
add
push
add
clc
adc
push
push
push
idiv
lcall
je
fisttps
pop
mov
mov
cld
out
scas
or
adc
add
xorl
std
lods
imul
xchg
add
add
lods
mov
in
outsl
les
add
flds
mov
ror
or
gs
pop
xchg
loopne
or
sbb
jo
shll
lea
push
xchg
jae
jbe
jns
inc
test
jnp
out
addr16
ljmp
fldl
sti
pop
dec
or
out
addr16
push
or
mov
mov
jle
add
add
add
add
mov
xor
xchg
mov
outsl
jp
jg
add
fldcw
lock
mov
sbb
rclb
jno
push
pusha
adc
mov
mov
pop
leave
gs
jmp
jne
punpckhwd
loope
int
icebp
push
pop
loope
mov
xor
jo
lods
mov
jmp
push
loope
stc
add
add
add
cmpsb
or
add
add
inc
movsl
sbb
adc
lret
jmp
cmc
jmp
cmp
jne
jle
repz
pop
lea
jl
hlt
call
sbb
outsb
push
mov
jmp
jo
aam
ja
icebp
push
ret
cmp
inc
adc
mov
jnp
push
adc
shl
mov
add
add
xchg
fnstsw
jb
sbb
bound
sub
pop
test
lock
jno
incb
add
pop
mov
add
jl
std
push
aaa
dec
and
insb
or
jmp
add
mov
idiv
xchg
mov
add
icebp
push
mov
mov
stc
dec
add
add
add
outsl
sub
mov
test
jae
icebp
inc
xchg
decb
addl
testb
hlt
sub
jne
out
pop
hlt
divb
mov
or
insl
add
jnp
or
rcll
sti
mov
ja
sti
insl
scas
je
mov
xchg
adc
xor
add
add
mov
adc
enter
cli
and
icebp
pop
fdivrl
int3
or
jnp
repnz
incl
out
jmp
xchg
xchg
aam
and
pop
das
mov
adc
and
lcall
sti
mov
mov
imul
jns
and
stos
jl
imul
pop
or
imul
cmc
add
add
add
mov
add
and
out
int
shll
lock
jmp
xor
jno
je
imul
mov
jle
add
fildll
in
cmpsl
jmp
fisttpl
jb
je
xchg
shl
and
xchg
ds
repnz
std
lds
ret
fdiv
cmc
imul
add
sti
adc
push
add
out
jnp
push
mov
and
add
jmp
out
icebp
pop
jmp
movsb
jne
cmpsb
push
add
js
xchg
je
lock
addb
out
outsb
push
dec
add
cli
sar
and
inc
or
add
jmp
add
add
add
xor
jmp
stos
sbb
bound
pop
rolb
mov
add
aas
or
stc
jp
push
add
mov
fisttpll
xor
ljmp
lret
mov
pop
in
addl
lds
mov
add
or
mov
out
enter
add
add
push
mov
push
jp
xlat
push
notb
push
rorl
mov
add
cmp
add
shr
cmp
ljmp
out
pop
lcall
scas
or
mov
cmp
push
jp
cli
pop
fnstsw
je
roll
data16
insb
adc
dec
incl
xor
push
and
add
add
pop
jp
lcall
test
jle
sti
push
rcrl
mov
decb
sarb
sti
cmp
shll
addb
ficompl
adc
add
xchg
imul
fcoms
lret
fiadds
xchg
in
in
pop
sub
outsb
fs
loop
data16
add
add
out
jns
imul
cmpl
jmp
jmp
shr
in
subl
testb
mov
pop
jo
aad
mov
sahf
adc
mov
sub
mov
shrb
push
add
cmp
jo
add
sbbl
add
je
cmp
add
add
mov
out
inc
add
in
test
insb
pusha
add
stc
je
xor
out
adc
jb
xor
leave
movsb
add
in
in
jl
in
hlt
inc
ds
sti
mov
jnp
shll
add
outsb
imul
sub
js
call
scas
outsb
pop
cli
outsb
pusha
add
sti
aad
adc
add
add
add
jle
inc
inc
push
and
xchg
ja
adc
sub
add
iret
push
sbb
jmp
xlat
xlat
hlt
int3
jmp
das
bound
fisubrl
push
incl
adc
add
sbb
cmc
testb
add
add
test
jecxz
mov
jl
jnp
sbb
jne
rcr
add
add
add
sub
enter
push
push
add
jae
mov
adc
aad
sti
mov
call
ss
push
mov
hlt
cld
cltd
cli
jecxz
add
repnz
push
mov
push
or
je
inc
mov
add
es
addr16
and
adc
dec
lods
sbb
add
push
mov
pop
in
sbb
leave
mov
push
and
sti
add
je,pt
dec
lods
or
je
sub
adc
mov
jmp
shlb
pop
mov
mov
out
adc
lods
add
cli
shll
ljmp
in
mov
ljmp
jg
add
add
cs
ret
mov
int3
in
pop
jge
xor
stc
cltd
or
std
and
inc
cmc
or
imul
jae
jecxz
adc
fsub
adc
imul
call
inc
repnz
mov
std
sub
cmp
aam
lock
mov
xor
sahf
leave
call
sbb
dec
stc
inc
cmp
add
add
add
data16
mov
in
stc
movsb
mov
test
sti
aas
jmp
inc
sub
push
sti
jmp
add
call
fisubs
insl
lods
cmc
cmp
add
bound
add
jbe
add
in
fsubs
xor
hlt
jns
aas
add
pop
jp
idiv
inc
add
add
add
movl
add
test
inc
sti
mov
add
add
iret
repz
out
push
das
mov
and
jns
je
xorl
add
mov
repnz
add
add
lcall
or
test
fwait
incb
adc
cld
dec
lcall
pusha
stc
inc
add
add
add
out
and
dec
dec
mov
out
fsubrl
call
and
loope
mull
cli
fiaddl
gs
aam
sbb
sti
jne
fsqrt
push
bound
inc
xlat
sub
dec
mov
add
pop
pushl
lock
in
jecxz
xor
out
jno
sti
adc
mov
inc
pusha
jp
or
mov
add
add
jb
xchg
out
pop
iret
or
and
pop
mov
dec
add
pop
add
fs
out
add
and
sti
cmp
js
shr
cld
in
jmp
push
repz
xor
fistps
sub
adc
jo
data16
adc
shr
inc
lret
cmp
add
jp
fnstenv
lock
add
add
pop
data16
sti
ffree
call
sti
push
jb
jo
jge
imul
jns
pop
fs
add
repnz
add
add
or
outsb
in
jmp
sarl
inc
jmp
push
fldl
push
add
pop
add
bnd
xchg
ljmp
shll
push
roll
add
add
dec
mov
jmp
movsl
jl
mov
mov
push
imull
in
fdiv
jbe
gs
imul
push
cli
idivb
jmp
cmp
ret
sti
pop
inc
push
loop
pushl
mov
pop
cs
mov
mov
dec
dec
push
mov
push
pop
or
adc
cld
mov
xorl
add
mov
je
dec
testb
pop
lret
sbb
or
and
xchg
shrl
add
add
clc
or
add
inc
mov
into
sub
adc
testl
lcall
rolb
popa
es
adc
xor
sti
test
cltd
repz
add
add
shlb
fdivr
sbb
in
push
inc
xchg
pushf
pop
mov
cwtl
cld
lcall
xor
int3
push
sbb
push
aam
jecxz
adc
inc
insl
sbb
ja
mov
xchg
inc
push
cmp
loopne
ret
mov
cs
add
pop
xor
xchg
add
out
jg
push
add
add
add
sbb
pop
shll
inc
call
ja
jmp
jns
enter
sub
outsb
sub
imul
arpl
adc
insb
cmp
mov
je
icebp
add
daa
cmpsb
imul
sub
test
aad
jo
in
and
mov
movhps
shll
push
negb
popa
inc
insb
add
add
add
outsb
vpcmpeqw
sub
out
xchg
sub
insb
jne
stos
pop
sub
mov
paddsw
ja
ja
scas
inc
loopne
movsb
mov
mov
ss
mov
and
jae
movsl
or
sbb
out
jmp
add
sub
add
lds
mov
pushl
jno
jg
add
pop
je
push
das
mov
add
callw
data16
gs
arpl
insl
xchg
add
sti
fcompl
aas
jmp
aad
add
add
xchg
sbb
movb
add
std
dec
push
jns
adc
and
sti
test
jo
push
dec
arpl
adc
jmp
arpl
stc
decl
idiv
push
jo
call
add
add
call
out
call
jl
push
pop
sbb
mov
lock
sub
mov
add
jmp
and
xor
adc
sbb
je
or
outsl
adc
push
mov
cmp
outsl
add
jo
cmp
inc
lock
sub
mov
pop
jmp
adc
add
add
std
and
cs
mov
sub
stos
cmp
es
mov
jmp
imul
cmp
data16
jnp
push
add
imul
adc
lods
out
imul
inc
ret
or
add
out
loop
pop
aad
cmpl
jb
icebp
push
add
push
add
add
out
add
lds
fs
out
add
fldt
push
test
push
insl
fwait
jmp
push
imul
icebp
cld
call
rorl
add
aam
inc
mov
call
add
and
in
inc
pop
jle
call
push
stc
add
add
add
add
mov
imul
cmpl
cmp
imul
cmp
pop
add
or
jge
sbb
jne
sbb
inc
icebp
add
jg
out
rcrb
inc
out
call
mov
fbstp
repnz
testl
ret
out
in
and
xchg
push
int3
divl
idiv
sub
xchg
jns
jge
add
dec
cli
push
or
ret
add
add
popa
push
je
sub
mov
jle
push
add
jnp
jp
aaa
push
add
push
adc
jmp
cmp
stc
cli
push
add
add
add
add
repz
xchg
inc
jae
cmp
push
jb
repnz
test
add
mov
cmp
mov
cmova
or
sub
jg
adc
flds
or
sub
cmc
lret
pusha
add
das
ret
and
sahf
rol
das
out
loope
das
in
out
incb
mov
or
add
add
insb
outsl
sti
push
lahf
ret
arpl
pop
sub
incl
cs
mov
push
in
je
inc
lock
lcall
stc
stos
jns
add
test
cmp
push
jg
cmp
in
or
push
psubq
jne
inc
out
loopne
sti
lds
in
adcb
jmp
mov
scas
mov
add
add
add
or
fnstsw
add
cmp
cmp
jmp
adc
pop
adc
getsec
sub
scas
sub
mov
out
sahf
jg
adc
aam
subl
cli
leave
out
adc
pop
aam
icebp
shr
cs
js
pop
imul
jbe
jmp
sub
add
add
aas
add
in
fnstcw
shl
jb
push
xchg
popa
jecxz
xchg
testl
xor
aam
imul
or
and
jmp
outsb
push
jns
mov
sbb
mov
pop
jno
imul
jle
sbb
je
jo
por
add
add
es
adc
sbb
frstor
repz
push
aas
xchg
jmp
lret
adc
sub
sti
cli
push
inc
cli
add
cmp
mov
add
pop
testl
push
ljmp
push
std
add
xchg
idiv
adc
push
push
add
or
pop
sbb
inc
push
mov
mov
add
add
mov
lea
cli
out
jae
xchg
add
dec
push
xchg
notb
xchg
rorl
lret
sarb
cli
sbb
sbbb
sub
add
and
pop
incb
jg
repz
lds
out
xchg
cmp
fucomip
sbb
in
sub
scas
xlat
setno
ucomiss
sar
sub
ja
jne
add
add
jb
pop
adc
push
xchg
or
loop
loopne
push
imul
fs
inc
loop
ror
dec
call
test
sbb
xor
add
jne
loopne
sti
icebp
outsl
lea
add
rorl
loope
mov
sub
add
repnz
jmp
fistpll
add
add
movsl
push
jo
cltd
jge
adc
jmp
push
sarl
fcompl
cmp
jmp
shr
cs
andl
iret
mov
aas
int3
int
fwait
push
outsb
dec
jae
jge
arpl
fptan
mov
testl
sbb
pusha
adc
push
pushf
mov
inc
sahf
push
sti
push
pop
add
add
add
add
pop
jne
daa
std
sbb
dec
int3
adc
jns
sbb
push
call
jl
bound
adc
dec
lcall
int3
or
cmp
mov
add
jle
push
pop
sti
xchg
bound
stc
in
stos
xchg
clc
xor
test
icebp
pop
sar
and
xchg
xchg
xor
test
add
add
add
outsb
movaps
jnp
add
cwtl
cmp
inc
add
push
test
dec
dec
xor
push
mov
sbb
js
fadds
push
ficomps
cmp
jmp
push
cmp
cmp
add
cmp
and
cli
lock
test
mov
mov
jmp
add
or
jne
add
add
dec
mov
decl
add
sub
cld
jmp
mov
adc
enter
enter
jbe
out
scas
addr16
insb
mov
pop
test
imul
or
pop
je
jmp
jg
sti
arpl
or
test
cltd
push
lcall
addr16
add
call
cli
push
nop
pop
out
scas
mov
sbb
imul
pop
lcall
jmp
cld
push
pushl
mov
mov
push
repz
pop
je
add
inc
mov
add
mov
mov
xor
nop
push
and
xor
stos
pop
imul
and
out
scas
adcb
add
add
sub
mov
out
lods
pop
jo
gs
mov
mov
add
call
or
add
or
add
neg
in
test
ja
sub
add
mov
out
jg
addr16
testl
sub
mov
cld
and
aas
jmp
inc
test
cmp
add
add
lods
int
rcrb
or
fists
add
ljmp
add
add
jmp
lods
push
test
cwtl
out
push
test
out
and
sub
add
adc
add
cmc
int3
dec
xchg
jbe
and
sub
mov
xor
sub
jne
aas
mov
test
add
add
pop
sub
rcrb
pop
call
mov
inc
decl
add
jg
jne
mov
mov
pusha
xchg
add
les
mov
in
call
mov
clc
or
jae
mov
jl
xor
jae
pop
mov
adc
add
mov
dec
call
out
xchg
addr16
add
cltd
int
push
sub
cli
mov
xchg
jmp
out
pop
insb
cmpsl
adc
push
test
mov
sti
jp
cli
jecxz
lock
out
fdivrl
je
dec
aas
inc
lods
callw
sub
or
jne
mov
add
pop
xchg
jb
call
add
add
add
pop
out
push
cmp
push
repz
pop
mov
repz
jne
push
dec
sub
aas
out
loopne
notl
test
add
dec
cld
adc
shr
ret
dec
jo
cmp
push
insl
inc
cmc
test
add
jmp
inc
pop
divb
mov
mov
insl
push
cmpsl
jmp
insb
in
adc
add
push
sbb
aad
int3
out
or
pop
push
stc
push
adc
sub
hlt
or
add
loope
fstl
xchg
cmc
or
leave
add
ret
jns
cwtl
imul
add
hlt
aas
jmp
mov
add
orl
aad
mov
push
je
mov
repz
add
add
mov
aad
adc
adc
xacquire
ss
add
pop
cmpl
jle
adc
push
dec
je
xor
lock
call
sub
out
cmp
gs
add
jmp
cli
in
ljmp
ficoml
sbb
lea
xchg
test
add
add
mov
mov
inc
add
call
lcall
push
jge
push
lcall
incl
dec
or
je
pop
add
cwtl
xchg
dec
inc
imul
in
mov
push
outsl
gs
das
add
mov
mov
adc
cmp
add
add
inc
sbb
out
mov
stc
sub
push
xchg
add
adc
mov
dec
mov
push
fsubs
out
push
decl
outsb
push
xor
jb
dec
call
push
add
mov
add
and
add
push
jne
into
xlat
or
or
repnz
xor
inc
mov
add
add
out
pop
addr16
test
xor
gs
sahf
add
imul
cmpb
roll
rol
imul
imul
call
mov
in
inc
dec
insb
inc
ret
mov
add
dec
je
pop
pop
call
enter
inc
xor
iret
icebp
mov
xlat
in
sarb
add
add
dec
ret
dec
adc
mov
jo
test
inc
cli
add
rolb
jmp
add
out
push
add
dec
mov
mov
insb
dec
inc
sti
pop
cmp
in
ljmp
xchg
push
or
insb
mov
punpckhdq
add
push
push
pop
adc
xchg
pop
push
add
add
add
inc
jae
loop
fs
lods
cli
out
mov
mov
and
add
jp
inc
sti
inc
in
jge
and
sti
sbb
jecxz
dec
sbbb
cmp
movq
sbb
jecxz
pop
xor
cli
add
dec
lret
lret
call
popf
add
pushl
addl
dec
push
mov
loop
add
add
add
jecxz
and
add
inc
cmovnp
cld
clc
mov
inc
and
incl
js
adc
or
or
inc
fdivl
mov
push
xlat
movsl
add
mov
add
faddl
scas
je
out
jg
fidivl
xchg
call
add
add
lods
daa
call
test
jle
lcall
mov
sti
sbb
mov
das
xor
movsb
dec
push
jne
jge
dec
out
pop
fnstsw
repnz
loope
sar
push
pop
pop
and
push
decl
pop
movsb
dec
dec
sahf
aam
xchg
add
dec
push
push
lcall
jb
add
inc
aad
std
inc
add
add
add
mov
xchg
lret
push
cmp
fiadds
push
inc
mov
add
push
movsl
mov
push
out
add
dec
in
test
add
pop
pop
lods
xor
gs
cmc
jl
add
add
or
pop
mov
aaa
out
add
subb
dec
xor
xorb
pushf
pop
push
test
sub
add
add
add
call
dec
repz
out
add
pop
xor
xlat
icebp
aas
and
std
add
jmp
lock
jmp
push
sti
jmp
cmpsl
inc
sti
jmp
pop
jle
add
das
or
add
jmp
xor
add
jb
decl
pop
je
aad
dec
sti
cltd
movsl
push
fsubl
add
add
add
mov
pop
andl
std
xlat
jns
adc
xchg
gs
add
jmp
jne
gs
jo
sbb
ds
jg
xchg
dec
call
mov
inc
dec
push
movl
mov
ror
add
pop
and
test
xchg
add
sarl
icebp
push
out
test
mov
push
add
add
add
sbb
psrlq
call
scas
inc
and
fwait
add
stos
ds
push
test
idiv
ja
pop
enter
adc
mov
call
xor
inc
enter
adc
pop
xchg
jne
cmpb
rol
sbb
cltd
test
in
jmp
or
add
add
add
mov
mov
jo
rcll
xchg
cli
mov
enter
flds
mov
push
add
dec
fcom
ja
out
mov
push
lret
gs
dec
aam
addb
push
in
adc
arpl
fistpl
add
out
inc
xor
mov
stc
jmp
pop
jecxz
out
ja
flds
add
add
in
jne
cwtl
popa
inc
in
mov
pop
ljmp
add
test
rcll
test
sub
adc
dec
xchg
pop
scas
aaa
test
inc
repnz
mov
hlt
arpl
in
add
in
mov
lret
jl
jmp
insl
inc
in
out
mov
call
inc
mov
loop
add
add
add
sub
lods
pop
jp
cmp
jns
sub
mov
out
out
hlt
lods
inc
test
in
add
movb
subb
jmp
jo
call
and
ficoms
dec
sti
fdivrl
popf
movsl
and
pusha
fsts
sti
dec
mov
mov
add
add
add
es
lds
or
cld
call
in
fiaddl
push
stc
and
add
notb
mov
inc
sbb
call
decb
xorb
divb
mov
lea
push
test
cli
cmp
jecxz
add
testb
mov
pop
ja
pop
faddl
add
add
push
xchg
ffreep
sbb
call
add
add
mov
mov
push
stc
pushl
divb
ret
test
mov
call
lret
mov
idiv
out
push
call
insl
idiv
add
out
fdivrl
or
add
out
push
aad
imul
stc
icebp
and
inc
add
out
aas
call
shl
movsb
incb
add
add
leave
push
js
mov
fwait
inc
sti
push
pop
fdivr
test
in
pop
sti
add
out
into
push
mov
fs
icebp
mov
cmp
push
test
push
jmp
fcoml
sti
pop
mov
inc
sti
dec
pop
sbbb
popa
insl
add
push
mov
inc
adc
jnp
dec
adc
jge
repz
repz
add
add
mov
cmc
inc
je
rolb
push
out
dec
in
test
add
cmpb
out
call
negb
repnz
jmp
rcl
aas
adc
imul
jns
xchg
je
test
subb
jge
dec
gs
cli
shl
mov
inc
inc
jl
cltd
cmp
inc
mov
lods
popf
mov
add
add
add
lea
mov
pop
add
idivb
imul
xor
jmp
loopne
or
add
push
adc
push
imul
and
mov
inc
ret
in
jge
test
ss
cmp
out
in
in
add
xchg
xor
sti
jle
adc
ljmp
sub
add
add
ja
outsl
call
stos
lea
ljmp
add
mov
jb
lea
fstpt
test
scas
sti
call
adc
lea
push
push
addr16
xchg
cld
or
dec
jmp
adc
mov
add
adc
xor
shlb
nop
ret
mov
cmp
add
add
filds
je
or
pop
cmp
out
incb
repnz
add
mov
xor
mov
shl
jo
mov
sub
inc
sti
mov
loopne
mov
sti
inc
pop
lret
mov
cli
xor
jne
ficomps
dec
sti
and
icebp
aas
out
adc
jg
xor
mov
incl
pop
sti
jmp
add
add
jae
decl
movsb
adc
roll
ret
hlt
inc
daa
push
add
outsb
inc
data16
flds
in
stos
enter
jge
rolb
jg
daa
decl
add
add
shr
jo
std
inc
push
cmp
cmp
inc
or
fnstsw
adc
inc
and
pop
cs
add
add
add
cmp
imull
out
out
icebp
sub
pop
inc
xor
call
fidivs
sbb
inc
pop
xchg
rcl
cmp
arpl
cmp
push
incl
sarl
cmp
sbb
inc
add
add
repnz
test
sub
dec
add
add
add
test
out
shrl
in
xorl
cmpsb
test
test
push
fcmovb
lret
mov
test
add
lret
rorb
mov
cld
jmp
das
mov
sub
xor
cmp
mov
cli
add
mov
inc
enter
jge
scas
sub
adc
sbb
mov
and
xchg
sub
orl
add
add
xchg
dec
add
xor
imul
xchg
cmpb
dec
inc
push
mov
xor
vsqrtss
testb
rclb
idiv
add
dec
dec
lds
mov
dec
fisttps
lock
dec
add
je
jp
notb
mov
jnp
xor
stos
rorb
add
add
addb
incb
mov
sbb
in
mov
inc
sti
mov
mov
jae
ljmp
push
notl
scas
daa
jp
icebp
stos
cmc
sti
pop
shll
inc
rcr
dec
ret
push
or
inc
jne
jmp
incl
and
push
jmp
xor
add
cmp
incl
add
add
out
jbe
bound
in
popa
ja
add
int
lea
and
out
xor
sti
aad
mov
scas
inc
call
gs
jne
add
movsl
or
out
add
inc
sbb
ficompl
jns
test
outsb
cmp
cmp
mov
mov
sub
mov
lret
push
push
pusha
daa
cmp
xchg
add
add
popf
sub
outsb
and
outsb
leave
inc
jge
push
mov
or
ja
cmp
popl
jge
add
add
mov
add
inc
in
push
pop
pop
mov
aad
lret
jl
inc
lds
inc
out
lods
lcall
and
imul
fdivrs
rcrb
das
cmp
out
mov
push
xchg
es
cli
jbe
scas
fistps
add
add
add
icebp
adc
mov
call
cmc
shl
jg
cmp
push
fbstp
ret
add
ljmp
sti
push
lods
lods
xlat
add
or
push
jae
idivb
mov
sti
imul
cmp
leave
das
scas
repnz
das
cmp
add
roll
cld
idiv
add
add
add
test
subl
jge
shlb
aas
lar
aas
notl
inc
fists
outsl
pop
adc
lldt
je
mov
add
enter
jmp
repz
inc
in
mov
mov
push
inc
icebp
in
andb
xor
push
inc
add
hlt
push
xchg
xchg
je
xchg
aas
out
add
add
add
mov
dec
hlt
enter
xchg
scas
mov
leave
lods
pop
call
jle
out
cmp
out
aam
ljmp
std
lock
add
daa
push
jne
test
rclb
rcr
cmc
mov
out
cmpsl
mov
xchg
pop
cmp
push
push
sti
sbb
add
push
add
mov
daa
cli
out
mov
roll
mov
out
add
add
aas
enter
test
idivb
or
inc
xor
cs
add
gs
add
add
add
rcrb
xchg
fdivl
pop
mov
data16
dec
fs
repnz
pop
add
add
push
add
add
add
dec
aas
inc
subl
subl
sub
jbe
sbb
add
bnd
adc
out
movsb
ss
sub
or
out
lods
or
sbb
ficoms
mov
mov
into
popf
sbb
aaa
sti
cmp
aaa
adc
loope
lods
ret
das
push
scas
mov
add
add
add
add
add
in
lcall
cmp
sar
mov
data16
mov
mov
or
or
add
jmp
ss
push
inc
loope
add
jle
iret
adc
xor
add
imul
jp
popa
pop
mov
and
cmc
testb
dec
mov
dec
mov
dec
jecxz
add
add
add
testb
je
call
add
divb
mov
pop
cmp
pop
outsb
mov
incl
repz
or
xchg
imul
mov
cmc
add
hlt
je
lahf
das
aam
loopne
jne
scas
int3
int
rolb
data16
out
or
add
cmp
add
add
add
pop
dec
popl
ljmp
mov
jbe
inc
rcrl
push
call
gs
cli
test
arpl
xchg
fs
xchg
xchg
mov
adc
rorl
sbb
sti
jns
ss
das
aad
cmp
clc
pop
push
add
out
loope
imul
mov
jle
xor
add
add
outsb
insl
xor
lcall
mov
cmpsl
sbb
adc
adc
inc
push
xchg
lret
push
add
aam
jno
out
add
mov
xor
enter
in
xlat
jbe
mov
cmp
adc
xor
bnd
xor
in
add
cmc
push
cmp
call
adc
add
or
add
add
in
add
push
pop
inc
outsb
rcrl
dec
cmp
add
bnd
or
mov
ret
lock
sar
xchg
jae
cli
popa
push
add
in
jp
pop
jp
add
in
add
mov
lcall
outsl
sub
enter
sti
enter
out
xchg
ficoms
lock
mov
adc
sub
lret
mov
add
in
aad
xchg
pusha
movb
sar
jle
testb
addr16
add
jmp
aas
out
push
jno
ljmpw
mov
jo
or
jg
test
in
dec
add
ljmp
roll
inc
jns
loope
mov
repz
lea
inc
add
mov
in
jp
aam
ljmp
lock
add
add
pop
mov
test
add
hlt
jbe
clc
lods
dec
lods
test
orps
stc
shrb
pusha
nop
xlat
add
add
push
outsb
vmread
ss
mov
fdivr
mov
test
push
pop
and
out
xor
mov
in
or
mov
roll
mov
add
add
or
fbld
mov
mov
std
jno
add
scas
sbb
jge
pop
or
sub
fsubl
sub
inc
mov
ret
or
pop
cmpl
mov
inc
lcall
out
in
hlt
icebp
mov
cmc
icebp
enter
outsb
xor
stos
add
add
add
add
add
add
stc
fnstenv
jnp
mov
shr
and
pop
jg
mov
adcl
jae
dec
je
add
dec
rorl
push
jge
sub
xor
pop
sub
mov
sbb
xor
cmp
ret
iret
mov
sub
add
aas
outsl
leave
fwait
js
cmp
test
cmp
add
inc
add
add
add
mov
jbe
jnp
xor
repz
cld
sti
data16
xor
jmp
add
outsl
mov
xchg
enter
push
jb
xchg
popa
rep
cmc
call
repnz
insb
mov
xchg
fcmovnu
dec
out
adc
jg
pop
stos
ret
in
mov
push
into
add
add
add
adc
jle
icebp
jge
scas
outsb
inc
je
ja
das
sahf
jge
das
and
xor
add
ds
mov
hlt
xchg
lea
add
add
in
mov
negl
dec
decl
adcb
mov
scas
dec
loope
sbb
add
add
add
inc
testb
popf
dec
lcall
inc
call
insl
inc
jne
push
pop
pop
mov
add
xchg
hlt
jae
popl
adc
mov
sti
orb
add
sbb
jle
sbb
add
add
or
xchg
aas
or
sbb
es
pop
je
mov
pop
mov
add
into
cli
adc
inc
xchg
xchg
add
jae
xchg
es
jge
icebp
mov
test
es
fnstenv
sub
shrl
scas
add
mov
cmp
sti
mov
or
sbb
xchg
jae
add
add
inc
inc
jbe
addb
ret
adc
mov
mov
sub
add
add
jno
pop
inc
imul
bound
xchg
call
int
jne
sub
sub
mov
mov
jne
mov
sbb
add
inc
in
shrb
pop
inc
sub
xor
jne
inc
jno
int3
ljmp
xchg
lret
insl
xor
wrmsr
mov
mov
xor
add
stc
add
add
add
jl
jmp
cs
test
sub
push
sub
sub
sbb
mov
bound
fisttpll
insb
add
ret
inc
xor
out
out
and
pop
sub
sub
fildl
je
inc
lods
adc
fldt
outsl
in
sti
push
xchg
add
stc
sbb
out
sbb
pop
bound
add
add
or
in
inc
inc
xchg
cld
pop
pop
push
std
push
add
out
lods
repz
loopne
jnp
jnp
lock
pushl
inc
pop
dec
mov
jmp
je
outsl
adc
imul
call
pushf
xor
lods
std
popa
add
mov
cld
fdiv
loop
fdivs
mov
repnz
add
add
add
jl
out
int3
repnz
or
rcl
into
mov
or
cli
fdiv
add
push
mov
mov
sbb
dec
ljmp
shr
inc
fsts
mov
sti
mov
in
adc
sbb
incl
mov
inc
call
imul
jae
mov
ret
inc
xor
out
sbb
sarl
add
add
add
imul
jbe
ja
add
sub
sub
cmp
xchg
xchg
push
adc
ds
fldcw
xor
insl
fdivrp
push
roll
xor
shr
pop
inc
cmp
aas
jp
jle
cmc
sbb
fucomp
xor
sub
ret
mov
ljmp
mov
add
add
add
scas
rcr
jo
in
arpl
int
push
daa
mov
adc
jno
in
jecxz
sbb
adc
add
in
addl
lcall
stos
in
mov
shlb
pop
cmp
pop
out
lods
cld
adc
lock
dec
lds
adc
inc
movsl
enter
adc
add
add
mov
sub
sub
stc
xor
pop
loope
jl
jmp
out
stc
subl
bound
jae
outsb
hlt
mov
in
add
pusha
xchg
call
insl
mov
insb
mov
std
sub
shrb
nop
fldt
push
je
adc
adc
sbb
jne
xchg
push
addl
add
add
sub
add
je
rorb
adc
or
adc
std
dec
ljmp
cmpsl
push
mov
lock
or
inc
shl
adc
push
cmpsl
or
sub
adc
gs
sti
mov
shll
or
adc
std
push
mov
push
push
mov
add
ret
push
add
add
add
dec
notb
add
mov
cmp
outsb
sub
insl
adc
push
gs
add
jg
repnz
mov
sbb
lds
pminub
dec
add
sub
cld
jmp
imul
and
cli
jecxz
push
inc
out
scas
and
ljmp
push
or
out
add
add
lahf
sbb
pushl
lods
jo
xchg
aas
out
push
inc
dec
jae
mov
out
mov
jae
mov
push
mov
add
into
mov
sbb
add
stos
les
jnp
adc
aas
lret
aad
pop
push
add
fisubs
add
andb
sbb
pop
jbe
adc
divl
sbb
js
in
push
add
add
jno
adc
xchg
lods
out
js
fucomp
xchg
lods
out
daa
sub
add
aad
sub
aad
aam
add
in
call
and
add
inc
push
cmp
lods
test
in
xchg
int
in
sbb
inc
and
imul
fstl
pop
pushf
es
lahf
mov
sar
add
add
add
adc
insb
sub
add
jns
ret
fsqrt
sub
je
add
sub
add
insb
and
push
stos
push
and
adc
push
das
pushw
call
sub
inc
jnp
aam
gs
add
jg
shll
mov
add
add
lds
push
add
jmp
lods
dec
add
test
testb
xlat
movl
sbb
sub
xor
cmp
roll
push
hlt
test
add
loopne
jg
shlb
add
ja
cmp
mov
insb
pop
jnp
inc
lahf
mov
push
push
add
test
outsl
cli
addb
add
add
add
xor
cs
je
daa
test
sbb
and
push
out
es
sub
ja
sub
bound
add
inc
sti
je
inc
mov
addb
cli
mov
popa
sar
lock
int
add
jl
sub
lea
sub
stc
movsb
push
je
xchg
add
add
add
mov
jbe
mov
test
add
shrl
out
mov
insb
cmp
mov
mov
add
xchg
shrl
testb
in
mov
pop
cmc
loope
add
cmpl
in
mov
rol
mov
mov
add
inc
add
add
add
sbb
push
inc
or
call
inc
cli
add
jno
lods
leave
sbb
sti
imul
test
xchg
mov
scas
inc
sub
pop
mov
dec
sti
xor
pop
push
bound
mov
and
das
sub
pop
push
insb
push
sbb
sahf
sbb
jo
je
jb
sti
xor
xchg
add
add
add
push
stc
sbb
pushf
and
test
test
test
addb
pop
sbb
fadds
icebp
popa
adc
xchg
and
lret
std
mov
sbb
dec
jb
add
mov
adc
jnp
in
sti
add
mov
in
dec
mov
cltd
inc
or
lock
sahf
aas
add
mov
add
add
mov
ja
adcb
pop
sbb
push
insb
xor
adc
cmp
pop
add
sub
adc
push
sti
sbb
inc
clc
adc
inc
lahf
xor
mov
mov
mov
loop
or
jae
je
pop
mov
add
inc
out
dec
push
neg
or
add
add
jne
fisttps
push
andb
cmp
push
or
js
rcrb
iret
cli
lcall
out
int
sti
sub
js
jge
sub
add
lods
xchg
sbb
out
repz
sarl
inc
sub
out
and
sbb
mov
mov
push
xor
jl
mov
add
add
add
pop
decl
push
sbb
lock
icebp
push
xchg
cld
js
lock
imul
jns
subl
add
nop
and
in
sbb
sub
popf
cmp
lock
adc
insb
cs
and
mov
addr16
inc
rcrl
pushf
js
mov
addb
add
add
or
scas
in
pop
xchg
add
or
push
fst
and
xchg
imul
ljmp
adc
cmpsl
test
add
insl
pop
add
in
add
xchg
adc
sti
push
xchg
or
scas
jo
add
mov
add
pop
cltd
inc
je
lret
xchg
adc
or
mov
jbe
call
add
adc
cli
mov
lock
xchg
mov
cwtl
adc
push
rclb
jb
mov
and
icebp
ljmp
push
sbb
imul
and
sub
orl
push
jmp
or
js
adc
js
adc
idiv
js
push
mov
sub
push
std
call
aas
add
insb
notl
add
add
lea
push
xor
sar
mov
push
push
sahf
push
add
pop
jo
lods
sbb
notb
mov
sarb
inc
or
jne
data16
ljmp
cld
decl
add
shr
mov
out
sub
xchg
xchg
add
jno
mov
mov
add
add
ficoml
cmp
jo
add
sub
test
push
addl
add
fsubs
lahf
sbb
add
movsl
je,pt
mov
ja
sti
sbb
pop
jae
xchg
mov
bound
test
pop
nop
test
repnz
mov
add
sbb
into
add
add
add
imul
xchg
pop
cmp
test
outsb
sbb
pop
xor
xchg
fiaddl
insl
adc
xor
inc
mov
and
xchg
cmp
int
jb
sbb
loopne
lcall
and
add
jp
insl
adc
insb
ja
adc
sub
test
add
add
rcll
adc
cmp
ret
mov
add
test
out
mov
or
xorb
ljmp
push
push
je
fwait
add
js
cli
cld
lods
out
aas
jmp
inc
jmp
mov
add
push
mov
dec
cmc
push
and
fs
ucomiss
add
add
sub
add
ds
and
addb
sub
lods
xchg
mov
mov
rorb
test
or
cs
sub
pop
mov
mov
jne
cmp
loope
popa
mov
or
je
jmp
push
divb
notb
lret
push
fdivrl
pop
call
add
add
add
je
pop
mov
add
or
add
pop
push
push
push
xorb
das
ljmp
jge
cmc
je
push
in
sub
sti
in
add
repz
out
mov
or
lea
push
jne
sub
and
lea
sbb
xchg
xor
testb
movsl
adc
add
add
imul
push
push
movsl
xchg
dec
sbb
negb
adc
adc
popf
sub
enter
ret
clc
ficoml
cs
add
pop
push
xchg
aas
out
movsb
xchg
push
je
sti
stc
movsb
or
fdivrs
dec
mov
and
arpl
sbb
adc
ret
mov
add
add
cmp
mov
sbb
xor
into
stc
inc
and
add
test
adc
mov
shrb
arpl
test
inc
add
add
pushf
mov
lea
fnsave
and
dec
cli
jg
sbb
out
add
mov
adc
jb
jns
cmc
adc
sbb
add
add
imul
call
jle
call
cmp
sti
pop
pop
adc
popa
add
cli
hlt
or
sbb
inc
pop
inc
lds
shr
add
cmp
bound
dec
je
push
push
ss
idivl
jecxz
jecxz
sub
or
and
cmp
add
add
add
pusha
pop
sti
push
data16
test
stc
add
adc
add
incl
cmc
divb
out
add
hlt
mov
mov
cld
call
inc
je
or
pop
enter
push
mov
std
call
dec
mov
aas
pop
sbb
cwtl
xchg
add
mov
imul
movsb
repz
and
xor
fisttpl
adc
inc
cmpsl
push
xlat
xchg
push
add
notb
int3
mov
inc
lods
out
inc
fcompl
sub
push
sbb
movsb
shrb
sbb
sti
push
add
mov
lods
inc
lods
xchg
or
scas
orb
add
add
arpl
scas
cli
aas
out
mov
push
data16
pushf
rol
inc
push
leave
pop
pop
test
sbb
xchg
inc
push
aam
mov
xlat
addb
sti
icebp
popf
lea
out
sbb
cmpb
sbb
cmovp
in
sub
push
out
out
jge
iret
fmull
and
add
gs
ud1
jecxz
clc
ret
mov
mov
out
jns
adc
or
or
out
out
xorl
jge
movsb
jl
shlb
nopl
gs
add
stos
jg
ljmp
add
stos
roll
add
add
add
add
add
andb
add
jl
jno
sahf
iret
addr16
shr
add
add
subl
push
cmp
shlb
jge
or
insl
xor
xchg
sti
ret
out
jle
jl
repnz
push
fwait
in
cli
jmp
scas
jge
jmp
inc
je
in
test
fs
xor
or
aas
or
imul
mov
cmpsl
std
or
loop
xchg
pop
aas
add
add
add
test
or
add
and
mov
xor
ljmp
ljmp
test
decl
popl
call
inc
ja
add
mov
fisubrl
test
call
mov
shlb
loop
mov
cmc
loop
add
add
add
inc
repz
mov
rcll
inc
lods
in
push
add
out
pop
add
scas
loopne
clc
jne
movntq
out
shlb
out
pop
mov
xor
aas
mov
sbb
cs
mov
daa
fcos
jmp
pop
fildl
out
jae
icebp
mov
call
and
xchg
cli
shr
ret
lcall
lods
mov
add
ds
lret
lcall
xchg
movsb
or
cld
gs
mov
sahf
cmp
aad
in
outsl
ss
std
popa
sbb
add
sbb
push
inc
mov
nop
icebp
or
iret
fcmovb
call
xchg
enter
pop
or
cmpsl
mov
call
ret
add
pop
sti
or
push
or
add
add
add
cld
test
cmp
inc
ret
cmp
mov
js
xchg
inc
shr
xchg
mov
daa
outsl
sbb
xchg
or
add
scas
rolb
or
adc
imul
in
into
ljmp
in
fcomi
aas
imul
cwtl
popa
outsb
sbb
sub
mov
aam
add
add
imul
pop
mov
xchg
rcl
in
jge
gs
mov
call
je
jle
xchg
xchg
mov
xchg
loop
jnp
lods
or
popf
dec
mov
push
xchg
loop
loope
sbb
idiv
jnp
gs
mov
out
pop
adc
bnd
std
xchg
inc
je
xchg
add
push
add
add
add
cwtl
addl
pop
and
inc
pop
push
jmp
push
or
ja
cmp
test
notb
pop
add
adc
hlt
cmp
test
cmc
testb
std
call
inc
adc
xchg
call
adc
jbe
hlt
pushf
lret
push
test
xor
adc
popa
or
imul
add
add
jno
incl
add
inc
out
add
shll
fisttps
inc
cltd
repz
sar
sti
cmp
aas
out
push
dec
je
mov
imul
dec
arpl
adc
hlt
pop
call
add
or
mov
mov
xchg
sbb
fwait
clc
add
sbb
fidivrs
jp
call
mov
inc
or
add
add
xchg
pop
fisttpl
cmp
fwait
inc
add
xchg
ret
jae
cli
xchg
lcall
out
add
mov
inc
inc
or
or
push
dec
pop
mov
adc
add
mov
lea
pop
lcall
sbb
orl
add
and
adc
jmp
add
add
add
out
shrb
out
add
or
jbe,pt
mov
sbb
add
mov
push
imul
imul
cmp
add
testb
jg
in
add
and
cld
and
or
ss
in
sub
adc
or
outsl
jae
add
add
add
add
iret
ret
popf
add
in
mov
lock
jmp
in
add
cmpsb
data16
dec
mov
or
pop
imul
mov
inc
inc
xor
mov
cs
jle
and
enter
dec
bound
add
xchg
test
je
push
not
cld
aaa
pop
mov
or
inc
add
add
add
shlb
xlat
fdivl
incl
out
adc
es
sti
mov
or
push
shll
out
adc
xor
sti
mov
jg
je
push
not
xchg
adc
outsb
js
pop
pop
add
xlat
jle
je
push
divb
add
rcll
xchg
add
add
jae
out
inc
adc
add
add
add
mov
out
pop
add
pop
scas
cli
jecxz
out
aas
out
mov
incl
inc
ja
outsb
sbb
pushl
cwtl
sbb
jecxz
out
aas
out
adc
add
pop
xchg
or
xchg
or
mov
sbb
lcall
and
ldmxcsr
test
mov
call
mov
push
sub
incl
out
sbb
addl
add
add
incb
add
aam
or
jns
std
inc
test
arpl
test
fs
les
in
push
dec
add
add
cmc
insb
je
add
add
cld
adc
inc
retw
sbb
popa
out
add
cwtl
cmc
jl
out
add
cwtl
in
iret
test
sub
jnp
icebp
jge
insl
jb
add
add
add
out
add
ljmp
dec
add
add
pop
leave
inc
dec
add
jno
stc
iret
sub
jge,pn
add
cmp
jg
cwtl
jmp
lock
cld
cmpl
clc
mov
or
loope
add
in
mov
cld
cmc
aas
jmp
retw
jmp
mov
filds
sbb
add
add
fs
mov
in
mov
cld
dec
out
aas
jmp
outsl
test
in
mov
jne
lds
mov
fs
into
sub
push
mov
movsl
shl
mov
out
sti
add
je
addr16
out
cld
repz
clc
inc
xchg
cli
loop
insl
incb
decl
add
add
pop
sarl
cmpl
mov
and
push
repz
mov
sub
push
filds
push
add
mov
in
xchg
loope
mov
dec
lods
in
or
dec
imul
in
out
inc
call
mov
push
dec
scas
push
add
pop
cli
add
cli
jecxz
repnz
out
xchg
je,pt
add
add
in
jp
movb
jne
or
lods
inc
mov
lahf
sahf
les
xchg
movl
mov
sbb
lcall
jle
xchg
pop
push
sbb
inc
je
xor
ret
push
xchg
jl
out
ljmp
or
shrl
fisttps
and
fisttps
mov
jp
or
in
jp
insl
jae
xchg
add
add
rolb
mov
cmp
pusha
or
test
add
add
adcl
stc
cmp
insb
xor
add
pushl
lock
add
jg
add
add
dec
int
test
lock
test
ror
mov
subb
or
lock
sub
sarl
lahf
push
sbb
ret
or
add
add
add
ja
cmp
fs
sub
add
add
jbe
add
jmp
in
adc
sarl
add
xor
aam
imul
in
add
jl
adc
mov
and
loopne
and
mov
add
inc
push
sti
je
cli
adc
mov
add
or
imul
add
add
add
repnz
or
mov
inc
and
cmp
cli
adc
ds
add
xchg
out
mov
lea
add
or
sub
adc
adc
add
add
inc
mov
mov
ficomps
push
pop
or
ljmp
or
xchg
mov
xor
add
add
sbb
js
ret
out
pop
je
insl
add
mov
mov
adc
add
mov
out
cmp
sub
add
adc
push
shrl
jne
sahf
mov
adc
addr16
out
pop
mov
and
jo
and
outsb
sbb
jmp
call
mov
add
rclb
ljmp
fnstcw
mov
lods
out
push
jne
test
adc
cli
out
xchg
stos
incb
add
push
lock
add
pop
mov
dec
sbb
sbb
push
aad
sti
fcomi
ja
push
nop
or
cld
dec
cmp
rclb
scas
out
or
add
and
in
push
mov
adc
add
add
add
aaa
ret
cld
add
mov
call
insb
inc
pop
add
inc
cs
movsl
lock
pushf
jp
repz
mov
jmp
negl
sti
sbb
fimull
flds
sti
adc
jnp
mov
clc
push
fistl
nop
jmp
sti
repz
inc
jmp
add
mov
xchg
mov
cld
movsl
jne
adc
jmp
subl
sti
ds
std
orb
or
cld
cli
pop
hlt
adc
fadd
divb
divb
adc
pop
xchg
das
adc
xchg
and
icebp
in
std
stc
ds
cltd
outsl
and
fsubp
stc
push
add
jae
add
add
add
jae
lock
jb
psubq
sub
jmp
out
bnd
add
mov
push
js
add
adc
inc
pop
movsl
pop
ret
push
mov
add
add
jns
or
fsubp
scas
jb
testl
mov
inc
out
orl
and
ljmp
sbb
incl
add
add
xchg
lods
cmc
jne
add
cli
pop
pop
inc
adc
push
jns
notb
cli
push
mov
out
outsb
and
xchg
jecxz
pop
jp
je
xor
out
testl
pop
inc
cmp
add
inc
xlat
add
stos
mov
mov
adc
lock
out
sub
xchg
jb
out
mull
add
add
add
add
mov
pop
or
rcrl
test
pusha
add
out
cli
inc
aam
dec
xor
sti
mov
add
jne
or
adc
call
push
jne
or
out
add
fimull
add
test
xor
jmp
adc
add
add
imul
movhlps
xchg
out
stc
stc
adc
add
jb
add
inc
faddl
push
or
icebp
add
inc
jmp
push
xchg
int
cmp
jecxz
in
out
insl
stc
add
adc
cli
negl
add
or
add
out
sti
aam
or
jmp
add
push
mov
lds
out
shrb
insl
adc
out
sti
subl
idivl
jmp
out
dec
icebp
in
insl
or
insb
lock
jle
pop
sti
cld
add
cld
je
in
insl
or
dec
adc
in
pop
pop
sub
add
leave
icebp
add
mov
add
inc
xorb
call
add
add
add
mov
movsb
in
insl
adc
lock
mov
divl
jmp
sti
push
add
adc
sbb
mov
adc
jne
add
pop
sarb
notl
xlat
cld
je
fs
pop
mov
inc
add
or
ret
sub
aas
adc
pop
js
add
add
add
add
aad
rcrb
and
aas
add
pop
test
xorl
out
add
mov
jne
outsb
es
sbbl
iret
jb
add
dec
add
popa
pop
les
push
sub
arpl
repz
inc
popa
inc
fsubrl
fmull
jmp
sbb
add
push
xchg
imul
add
out
clc
add
add
add
cmc
push
je
outsb
cmpl
or
sti
leave
dec
cmpb
insl
dec
fcomps
push
dec
hlt
test
xchg
inc
fdivrs
add
add
repz
loop
jmp
add
mov
test
repz
ljmp
in
xor
insl
rcrb
push
add
add
add
mov
or
repz
and
test
add
push
arpl
push
push
in
xchg
incb
and
push
cltd
push
or
adc
add
mov
mov
orb
pop
std
add
in
jno
icebp
ja
jmp
ljmp
es
xor
je
or
push
cli
cli
push
addr16
faddl
add
add
pop
xor
mov
jecxz
out
push
fdivs
dec
shl
dec
sti
cld
mov
leave
mov
int
push
push
inc
cli
test
call
xchg
jnp
cmp
mov
clc
jl
cld
call
add
lret
in
aad
call
jb
or
fnstcw
jns
mov
add
add
jmp
add
shrb
add
pop
sub
cmp
inc
repnz
add
pop
imul
call
ret
adc
into
jae
pop
sbb
inc
inc
addb
in
jmp
jecxz
cmpb
imul
leave
pushl
shlb
cs
cmpb
sub
cs
add
add
es
imul
cltd
jg
iret
push
sub
pop
jne
pop
lret
lock
call
pop
shl
stc
loopne
pushl
lsl
mov
test
jne
push
test
int
push
outsb
cmp
fninit
das
rolb
call
shlb
cmp
pop
jmp
dec
sarb
fdivr
mov
add
add
gs
mov
sub
cmp
push
addr16
adc
hlt
and
push
mov
bound
movsb
jmp
data16
add
gs
add
dec
dec
xchg
or
xor
addr16
add
pop
add
cmp
cld
je
movsb
daa
fidivl
out
out
push
add
add
add
add
xor
test
dec
lahf
call
pop
inc
or
inc
hlt
jl
push
out
add
in
mov
insb
int
push
or
add
in
stc
call
jno
in
out
jmp
test
sbb
jae
cmc
mov
ror
dec
call
insl
mov
addl
add
sti
mov
sub
cli
repnz
jne
add
add
add
and
jb
and
cli
push
add
jmp
std
data16
cld
push
xchg
push
mov
mov
add
mov
jmp
in
insb
and
adc
aas
sbb
fistpl
hlt
ljmp
jle
call
pop
add
mov
push
notl
add
add
add
nop
cli
inc
push
push
call
adc
nop
xchg
add
lods
outsl
mov
add
paddb
push
add
clc
push
jmp
andl
add
cmp
adc
inc
outsb
mov
mov
xor
push
test
insl
lea
pop
call
add
add
add
andb
adc
call
jb
outsl
jbe
cmpsb
push
lea
xchg
rcr
push
sub
stc
mov
les
sarb
pop
cmp
and
mov
sti
stos
adc
pop
rorb
and
sub
dec
lea
movsb
sbb
push
lea
xchg
std
dec
fmuls
mov
pop
idiv
add
add
add
push
xchg
outsl
adc
out
scas
push
cli
mov
call
addb
pop
imul
sbb
stos
aas
or
out
sub
add
loop
cld
inc
out
sbb
in
fistpl
mov
pop
test
call
add
add
scas
int
call
pop
mov
push
adc
or
aas
add
add
add
sub
and
adc
add
inc
jl
add
mov
xor
mov
jg
add
cld
xchg
sub
cmpsb
scas
and
jnp
sub
xchg
das
push
add
xchg
mov
in
call
loope
xchg
xorl
fsubr
lcall
call
mov
add
add
add
push
xchg
add
push
test
push
in
cmp
ljmp
cli
jb
clc
popa
push
cmp
das
scas
out
jns
jmp
imul
cmp
inc
jne
inc
add
stos
lcall
repnz
in
jns
pop
jno
notb
add
out
jl
add
repnz
xlat
sub
incl
add
add
ret
inc
sub
add
call
push
pop
mov
sbb
call
lea
mov
sahf
adc
repnz
inc
js
faddl
cmc
call
iret
inc
testb
jae
int3
jo
and
add
ror
add
out
cwtl
push
push
pop
fsub
adc
lea
add
adc
cltd
pushf
or
decb
lcall
es
add
out
std
add
dec
cmp
push
pop
out
mov
cli
cmc
pushf
testb
addb
out
outsb
jae
push
call
stc
mov
sub
push
cmc
cli
jb
jo
or
lock
adc
cltd
popf
lock
imul
cli
add
add
add
push
out
add
les
push
jb
mov
lock
push
or
inc
mov
orl
loopne
hlt
hlt
push
in
imul
rcl
loope
jmp
inc
out
jne
jle
je
mov
add
cli
mov
add
add
call
cmp
test
fs
add
add
add
add
hlt
je
add
hlt
loope
add
in
test
push
jmp
out
jg
cli
imul
xorl
out
je
test
xchg
or
cli
mov
push
call
cmp
lods
in
lahf
std
add
mov
shlb
cmpsb
add
ss
into
je
pop
and
add
add
aaa
mov
push
dec
scas
cli
push
sub
push
in
ds
data16
insl
adc
fnsave
in
jbe
and
lock
push
push
pop
lds
push
ret
mov
dec
lea
daa
push
lea
dec
cmp
repz
mov
call
jae
out
and
int3
xchg
incl
add
add
push
jg
adc
cmovp
mov
sub
mov
inc
fs
or
add
add
or
mov
add
jne
bnd
rorb
adc
inc
add
jg
jnp
out
loope
jae
addl
aaa
fsubr
popf
cli
jecxz
adc
out
cmp
xchg
push
push
inc
add
add
add
inc
adc
test
dec
lea
jb
les
jg
int
inc
loop
push
sti
sbb
xchg
or
idivl
add
push
je
pop
jno
out
jecxz
bound
cmp
inc
add
cmp
add
fdivr
pop
out
aas
insl
cmp
sbb
scas
add
and
cli
jns
pushf
sti
mov
das
icebp
xor
push
add
add
add
dec
and
in
add
enter
pushf
dec
jg
pop
cld
das
mov
out
inc
lret
ret
mov
call
push
cmp
sub
in
xchg
fiadds
rcr
xor
jmp
add
jns
sub
jae
sub
fcomps
xchg
mov
outsl
inc
shl
gs
cmc
cmpsl
add
add
add
sbb
add
sub
in
push
call
jb
sbb
push
stc
jle
adc
add
xor
jecxz
or
leave
rclb
outsl
cmp
outsb
xor
jb
xchg
mov
mov
in
mov
rep
xor
jb
jmp
add
call
add
adc
xchg
icebp
rcr
inc
add
insl
stos
insl
sub
insl
and
ss
add
sub
inc
in
ja
adcl
enter
xor
push
call
int3
cmp
jmp
decb
ds
push
call
test
shl
rcrl
sbb
xchg
je
sub
test
add
add
dec
insb
aas
mov
insb
cmp
mov
popa
push
dec
cmp
sub
cld
dec
call
push
mov
ds
dec
push
pushl
jle
or
pop
inc
and
test
ljmp
xchg
add
adc
addr16
int3
mov
adc
out
add
fadds
add
rolb
add
inc
ljmp
pop
mov
cli
fstpl
jecxz
sub
push
gs
jmp
push
push
push
add
lea
outsb
hlt
out
mov
cli
insl
cmc
jmp
push
lock
fsubrl
leave
outsl
int3
mov
loopne
inc
mov
inc
jb
mov
inc
sbb
push
jp
je
jmp
in
test
jns
inc
and
add
add
add
add
jb
mov
imul
xor
arpl
xor
inc
pop
sti
in
push
jnp
int3
jne
gs
cmp
jbe
pop
outsb
inc
and
and
in
stos
hlt
gs
add
jae
mov
push
fisttps
arpl
inc
in
pusha
jbe
fsubrs
ret
cmp
in
fwait
add
add
add
fxch
loopne
out
lods
lcall
inc
lcall
mov
call
fsubs
push
out
bound
fisubrs
add
in
jp
gs
insl
jl
mov
out
insb
jmp
pop
add
call
out
xor
lahf
gs
jo
std
sbb
test
jg
rep
adc
add
add
add
lcall
fwait
bound
sbb
sub
inc
dec
mov
insb
add
jmp
out
gs
sahf
pusha
cmpl
jecxz
adc
cmpb
adc
fstpt
test
pop
mov
inc
jecxz
sub
int
inc
xchg
add
add
test
add
movl
add
mov
stc
adc
push
dec
jecxz
xchg
in
and
inc
dec
xor
mov
ja
cld
rolb
out
out
enter
popa
insl
ja
or
inc
xchg
imul
enter
out
out
lods
leave
inc
jmp
add
and
cli
out
jmp
shrl
ret
mulb
out
mov
push
fsts
add
add
add
dec
cli
push
push
jo
insl
xchg
out
inc
push
testl
push
inc
ja
sbb
push
sti
sti
mov
inc
out
push
cmp
enter
shlb
aaa
inc
add
outsl
add
loope
repnz
testl
and
jbe
popa
inc
and
in
sub
push
ss
add
add
lahf
push
movb
push
hlt
jl
aad
repnz
pop
aaa
push
mov
shl
and
in
mov
cli
fdiv
inc
out
mov
icebp
add
ljmp
jp
or
leave
bound
pop
cs
shlb
jno
jae
push
and
repnz
repnz
sbb
sub
add
add
adc
jb
rorl
pusha
das
add
cli
jo
or
sahf
inc
xor
loopne
or
cli
xchg
adc
or
and
ja
and
repnz
lock
mov
rdtsc
sti
aam
repnz
jmp
sub
aas
and
cmpsl
xchg
das
and
adc
outsl
add
add
add
mov
cmp
adcb
sbb
cwtl
repnz
pop
add
mov
and
xchg
aam
ror
hlt
cltd
xor
adcb
leave
adc
or
je
hlt
mov
dec
incl
jg
or
add
and
xorl
clc
mov
pop
outsb
add
sar
rclb
roll
add
add
mov
mov
xor
movsl
out
loop
jmp
adc
test
pop
out
and
xchg
cli
fcmovne
adc
pushl
add
sub
outsb
call
or
repnz
push
cmp
mov
pop
aaa
inc
outsb
push
add
cli
imul
leave
or
out
imul
sbb
add
add
add
ss
add
mov
xchg
xor
loop
ljmp
or
testb
cs
icebp
add
mov
hlt
stos
mov
lods
sub
sub
dec
or
repnz
fcom
in
in
xchg
cmc
xchg
pop
aaa
or
les
lret
jmp
add
add
add
cmc
xchg
test
sub
insl
inc
add
notl
icebp
call
divl
icebp
add
xor
push
cmp
in
or
scas
jmp
xor
inc
fnstsw
or
fimuls
jns
clc
jmp
aas
lcall
incl
out
xchg
mov
lods
sbb
mov
fidivl
inc
adc
add
add
add
mov
sub
adc
sbb
loop
int
push
adc
lock
test
and
mov
clc
ljmp
lret
push
push
xor
in
cmp
push
lret
cs
adc
shlb
mov
push
jl
cs
adc
xchg
pop
add
pop
pop
dec
or
add
add
sahf
pop
fmull
pop
mov
fmul
add
add
mov
mov
or
mov
int
sbb
dec
and
add
jno
decl
add
mov
clc
inc
adc
push
cmpl
jnp
sbb
hlt
mov
cmp
mov
negl
repnz
or
stos
or
cmp
imul
jne
add
add
dec
test
out
pusha
popa
lock
push
popa
lock
push
stos
loope
jge
data16
add
ljmp
test
pop
adc
outsb
mov
push
call
mov
xchg
clc
jne
call
fsubrs
pop
aam
inc
aad
enter
inc
jle
dec
mov
or
add
add
add
xor
incb
jmp
dec
in
push
cmp
stc
jle
adc
and
mov
xlat
mov
add
fstpl
mov
dec
jo
icebp
ret
fmulp
jno
sbb
dec
loope
mov
scas
jo
mov
mov
call
cmp
outsb
aaa
into
mov
faddl
add
add
shlb
shlb
in
add
gs
mov
sub
lea
or
out
cmp
lods
mov
hlt
call
cmp
dec
cmp
mov
lods
and
inc
clc
mulb
stc
decb
daa
into
call
or
aaa
sub
or
test
xchg
add
add
cmp
jb
cmp
mov
pop
jmp
and
push
cmp
dec
cmc
pop
xor
frstor
xchg
ret
repnz
xor
ljmp
sub
ljmp
cltd
mov
lods
mov
mov
call
enter
int3
jmp
test
fdivrl
rorb
xchg
ret
add
add
test
insl
rcll
jp
xchg
stc
sarb
inc
hlt
mov
cmp
sti
mov
rolb
scas
add
push
fwait
mov
adc
jae
push
loope
lcall
xor
shrb
gs
mov
ds
mov
addr16
mov
cmp
add
add
add
cmc
add
mov
add
jg
std
add
pop
hlt
xchg
movsb
fnstenv
inc
in
mov
jl
ljmp
jno
repz
stc
sbb
xchg
sub
jmp
enter
inc
aam
dec
dec
in
and
dec
sti
fs
repnz
dec
dec
adc
add
add
je
fidivrl
incl
repz
movsb
std
add
js
in
lods
cmp
and
add
jge
add
add
testb
push
aad
mov
xor
mov
pslld
stos
inc
add
jno
stc
cmp
inc
hlt
pushl
in
xchg
in
add
add
mov
xor
aam
popf
xor
dec
cltd
in
xchg
aad
fnstsw
or
dec
xchg
sar
sti
roll
adc
xlat
je
ja
mov
aam
mov
cmp
cli
ja,pt
or
cmp
ljmp
cli
ljmp
inc
std
outsb
gs
push
cmp
out
jno
cli
idivb
push
inc
add
add
add
sbb
shrl
int3
stc
out
mov
into
adc
pop
jb
aaa
leave
stos
fst
push
leave
push
in
std
push
das
push
fidivrl
sti
es
mov
mov
sub
add
xor
cmp
fadds
decl
or
daa
mov
push
or
cmp
add
jle
std
decl
pop
add
mov
add
add
inc
pop
pop
cmp
dec
xchg
xchg
orl
cmp
add
std
decl
xchg
pop
orl
dec
clc
mov
mov
sti
je
pop
sub
mov
cld
orb
cmp
xor
inc
out
mov
adc
imul
and
jl
xchg
push
hlt
adc
mov
pop
in
add
add
out
scas
push
aaa
sti
inc
pop
ljmp
inc
add
cmp
add
out
movsb
inc
adc
push
pop
call
stos
cmc
sub
scas
fwait
mov
xor
aad
rolb
loope
mov
or
sbb
js
mov
dec
in
fisttps
in
adc
jmp
add
add
jnp
hlt
add
add
add
lahf
cmp
mov
int
hlt
jg
add
add
mov
jp
pop
add
insl
dec
lcall
add
mov
cli
xor
dec
into
pop
ret
dec
add
ss
cli
cs
push
js
adc
andl
ja
adc
or
pop
stos
jnp
fbstp
in
pop
jns
mov
add
add
add
cmp
in
cld
cmpl
fbld
in
jnp
sbb
clc
mov
js
cmp
in
xor
lret
inc
sub
leave
ss
dec
lret
int3
xchg
jl
dec
inc
lret
cs
cmp
ljmp
inc
aad
jl
daa
daa
lret
xchg
push
xchg
add
add
add
sub
sub
mov
fidivrl
mov
cmp
mov
cmp
push
add
add
add
stos
cli
lds
test
mov
je
jge
jnp
in
pushf
ret
jo
add
mov
mov
adc
daa
in
iret
imul
xchg
mov
add
add
fmull
int3
push
or
fdivrs
jnp
mov
mov
mov
jl
fcomps
jo
in
or
lock
or
cmp
jmp
mov
pmaxsw
pop
xchg
mov
mov
fidivrl
fidivrl
lret
cmp
and
mov
sbb
mov
add
mov
fdivrs
or
jle
xchg
fimull
jmp
push
add
inc
cli
mov
out
insl
xchg
ret
iret
sub
fisubs
pushf
fidivs
inc
in
popf
mov
mov
out
pusha
inc
les
ret
icebp
jbe
in
and
dec
call
sti
jno
add
add
add
xlat
loopne
jge
leave
push
jge
lds
sbb
and
sbb
and
in
cwtl
les
add
inc
je
jo
scas
jg
add
repnz
test
out
add
out
mov
dec
jns
dec
incl
out
pop
imul
cmp
cmp
in
in
ja
stos
add
add
add
add
sub
pop
jno
testb
mov
add
mov
in
loope
cmc
ffree
inc
mov
cmp
je
mov
leave
dec
xchg
cmp
out
mov
ljmp
je
repz
push
clc
imulb
lock
and
xchg
jns
add
jbe
or
movl
movsb
add
add
add
leave
aad
and
ljmp
cli
ljmp
addl
jmp
dec
adc
addl
call
sbb
nop
mov
pop
dec
mov
xchg
int
push
cmp
jns
mov
out
mov
push
sbb
fmull
xor
cmp
rolb
add
pop
cld
inc
or
mov
dec
adc
sbb
cmp
std
decl
out
filds
mov
jecxz
aaa
mov
add
pushf
mov
fdivr
out
dec
aam
stos
rorl
jne
lods
xchg
or
in
cmp
add
bound
test
add
add
push
or
in
rorl
imul
adc
jge
int
mov
dec
cmpl
or
flds
insl
mov
out
rorb
ljmp
rcll
ret
jl
add
ds
iret
shlb
std
jle
int3
int
adc
rcl
loope
es
pusha
pop
push
clc
xchg
aad
cmpsb
pop
cld
add
add
add
lds
mov
jl
fldcw
ljmp
andb
cmp
testl
fnstcw
jmp
orl
call
out
jo
popa
jnp
movq
js
sbb
js
sbb
mov
imul
in
ret
xor
sub
push
xor
fdivr
and
add
add
sub
lret
add
lods
in
jg
jmp
jl
jne
clc
jo
lods
ss
cmp
xchg
jg
int
scas
mov
jg
lds
call
lods
fwait
in
jle
mov
sub
xchg
iret
jo
jne
ret
jnp
add
add
xor
aad
lret
inc
dec
add
add
add
xor
add
add
clc
clc
jmp
add
mov
loopne
cmc
inc
adc
inc
push
call
inc
dec
fdivrl
add
xor
repz
pop
cmpsb
jns
daa
inc
dec
or
push
lock
dec
lock
adc
les
rolb
mov
dec
aaa
dec
jl
add
add
add
aas
call
out
add
sub
dec
enter
push
pop
inc
inc
shr
xor
adc
fdivr
call
inc
add
mov
pop
adc
xchg
ss
insb
add
es
in
push
inc
clc
add
inc
fs
cli
jnp
cli
mov
mov
je
pop
push
or
mov
dec
clc
add
add
add
jb
hlt
insl
xor
mov
insb
cmc
jecxz
insb
std
out
je
aam
fcmovbe
inc
ret
jnp
inc
push
dec
mov
adc
add
sub
testb
fidivrl
jecxz
pop
add
and
pop
movsb
stos
mov
fcom
xorb
mov
scas
loopne
sub
out
ss
add
inc
std
gs
and
push
or
stos
dec
mov
or
pop
stc
pop
dec
mov
xor
mov
inc
stos
add
fisttpll
dec
rolb
hlt
ja
les
add
scas
fdivr
cmp
test
jmp
mov
push
ret
sub
jg
jmp
testl
add
sti
jg
jge
mov
rorl
pushf
xor
outsb
in
in
mov
jno
js
filds
inc
iret
ljmp
sub
shr
push
ds
push
ss
mov
sti
call
mov
pushl
lds
sbb
mov
or
arpl
add
add
or
clc
vmread
call
mov
mov
je
or
add
add
incl
inc
mov
fdivr
dec
loopne
lock
aam
call
add
jns
repz
inc
ret
subb
clc
inc
rcl
inc
mov
int
inc
lahf
subb
clc
inc
mov
inc
sbb
add
add
add
push
mov
leave
ret
push
gs
js
cli
mov
outsl
jns
das
push
gs
loop
daa
test
jno
pop
xor
arpl
jne
xlat
fnstsw
int3
or
mov
cmpsl
call
in
repnz
push
pop
inc
sbb
repnz
mov
sub
add
pop
out
pop
push
jp
add
add
add
inc
inc
adc
add
mov
and
aas
das
mov
insl
mov
mov
xchg
push
call
inc
sub
test
jae
xor
and
and
cli
outsl
xor
scas
movsb
in
movsl
add
mov
or
xchg
sahf
add
mov
int3
add
add
add
out
add
in
es
push
out
add
xchg
cs
mov
ja
jl
leave
dec
jg
add
pop
pushf
mov
push
movsl
jl
pop
push
lods
mov
xchg
jb
leave
es
xchg
jb
add
pop
mov
and
jns
push
mov
popf
cmpsb
add
pop
jg
and
and
mov
repz
iret
add
add
add
lock
in
add
jbe
mov
jg
lock
mov
jb
ljmp
xchg
ret
sub
test
ffree
add
xchg
mov
inc
fisttpll
movsl
aas
sub
aad
add
inc
hlt
add
sbb
xchg
add
mov
rolb
mov
mov
add
add
push
adc
movsl
fmuls
lret
pusha
adc
inc
iret
add
dec
cltd
rorb
cmp
or
or
mov
xchg
mov
aad
add
mov
cmp
dec
aaa
mov
or
call
cmp
out
roll
mov
lods
orl
gs
out
adc
or
add
add
imul
inc
scas
stc
fdivr
and
or
sbb
test
cmpsl
jg
test
or
out
cmpsl
jnp
and
call
and
ljmp
out
je
int
xor
lds
xor
mov
insl
adc
push
lret
std
out
daa
movb
sub
add
add
add
out
cmpsl
jnp
mov
testl
jo
roll
scas
add
jp
adc
outsl
push
scas
mov
les
loop
fidivs
faddp
add
dec
sahf
stos
jns
out
add
lea
add
imul
mov
loop
call
add
dec
inc
jns
add
jl
add
add
stos
mov
fwait
jb
call
fcompl
insl
rcr
inc
add
add
or
mov
xchg
or
jb
movsl
popa
test
add
std
mov
popa
test
add
fldl
fidivs
jo
incb
loope
ss
in
testb
js
je
add
add
add
je
sbb
out
pop
jno
test
xor
inc
mov
jle
sub
fsubs
aam
pushf
and
sbb
fwait
mov
push
and
cli
add
adcl
inc
rclb
jo
rol
loope
mov
fmuls
lahf
cmp
jmp
xchg
cmc
mov
enter
add
add
inc
int3
add
or
cli
jmp
lret
inc
imul
or
loope
jmp
int3
jmp
out
mov
cmc
test
dec
add
cmp
pusha
mov
stc
or
dec
or
mov
add
cli
add
jae
add
icebp
xor
cli
arpl
ret
addl
add
add
loope
std
cld
fld
je
mov
ja
lds
sub
lods
lahf
sub
xchg
int3
xchg
cli
popa
movsl
ja
lret
pop
sub
push
jne
sub
jbe
push
les
test
lods
cmpsl
ja
gs
adc
fdivrs
add
jns
icebp
and
out
add
addb
add
add
and
popl
test
add
stc
hlt
jl
add
add
jp
or
push
cmp
jmp
push
inc
jmp
cmp
aas
aad
imul
push
and
jge
rol
pop
dec
fidivrs
adc
call
or
mov
adc
outsl
mov
int3
rcll
add
add
jbe
sbb
jl
fnstenv
mov
or
js
pusha
movsb
add
scas
incl
mov
daa
inc
push
jmp
cmc
or
lods
repnz
or
pop
jne
mov
or
stc
add
scas
es
ret
sub
sbb
jmp
push
pop
jne
mov
or
add
add
add
mov
incl
cmpsb
mov
inc
ret
mov
jg
icebp
xchg
sar
push
sub
inc
add
dec
addl
mov
inc
sbb
inc
aas
push
addl
scas
fadd
adc
inc
xor
daa
aad
rolb
cmp
fdivs
inc
or
dec
xor
push
mov
add
add
mov
adc
ud0
inc
add
jecxz
mov
call
xlat
cmc
testb
adc
jbe
rcll
push
inc
add
xchg
into
out
dec
cmc
icebp
fisubs
xchg
lock
divb
adc
fdivrs
add
xchg
push
sti
jecxz
adc
push
ss
fwait
sar
add
add
add
xor
stc
loope
cmp
sar
shl
stos
pop
mov
and
or
aam
or
lret
cmpsl
cli
out
and
rolb
jge
out
mov
jmp
mov
rclb
loopne
mov
sub
mov
push
jl,pt
xor
sub
jnp
aaa
add
add
add
dec
cmp
repnz
or
repnz
rclb
aaa
bnd
lods
add
sub
ret
fwait
mov
aad
out
out
dec
pop
pop
ljmp
adc
ja
out
dec
rorl
mov
mov
insl
mov
cs
add
add
xchg
out
pop
mov
mov
insl
cmpsl
in
add
sub
pop
sbb
add
add
add
xchg
ljmp
repnz
out
nop
mov
sub
jge
out
add
cmp
sti
je
out
jmp
popf
mov
add
push
mov
or
mov
sub
popa
repnz
mov
divl
jmp
mov
subl
add
xor
in
jecxz
je
test
in
pusha
add
add
add
movsl
cli
sbb
jnp
xchg
je
xchg
push
mov
mov
sti
lds
fmul
mov
and
ficoml
dec
iret
fs
dec
loopne
sahf
pop
shl
dec
divl
push
ret
pop
loop
mov
clc
add
pop
arpl
pop
add
adc
addr16
pop
pop
add
inc
or
add
nop
cmc
decl
add
incl
testb
or
xchg
push
je
or
mov
cld
pop
jnp
ja
mov
pop
push
lea
mov
aaa
mov
cli
fcmovnbe
mov
xor
inc
push
mov
jae
or
sub
sahf
cli
sti
adc
inc
out
lcall
add
add
add
push
bound
or
in
and
sub
scas
and
into
lahf
and
scas
jns
inc
push
cmpsl
mov
call
mov
mov
shl
pop
mov
pop
cmc
add
adc
cmp
dec
push
push
and
mov
xchg
or
ret
stos
pop
loopne
das
cmp
add
enter
pop
push
push
ss
cmpsl
nop
and
insb
ret
hlt
jl
push
out
add
or
mov
imulb
insb
ret
in
clc
add
push
pop
test
add
outsb
jmp
int3
pop
daa
jo
mov
mov
cs
push
stos
inc
movb
lea
lret
mov
test
cmp
add
add
xor
jns
xchg
jnp
in
push
test
call
push
add
jmp
inc
jo
pop
pop
stos
cli
push
stos
or
cli
jmp
lods
add
imulb
add
in
das
jge
in
xor
andl
fldt
xchg
out
sbb
cs
in
test
pop
add
add
add
das
gs
sti
add
cmp
lea
add
jbe
loop
jle
add
mov
jae
int3
loop
loopne
cmc
subl
test
add
rol
add
add
imul
in
inc
adc
inc
clc
bound
in
mov
xor
or
dec
call
add
add
add
inc
adc
cld
xor
cmc
lea
push
pushf
cmc
lcall
or
xlat
add
add
mov
push
adc
addl
mov
shl
decb
cwtl
fnstsw
test
fwait
pushl
lcall
in
xchg
incb
and
add
add
add
out
xchg
inc
or
add
out
pop
pop
test
call
xchg
add
shlb
mov
test
incl
das
pop
out
cmp
push
mov
test
jb
in
out
jns
shlb
add
lods
call
adc
ret
scas
mov
xchg
add
stc
mov
dec
clc
cmpsl
movsl
add
add
add
stc
cmpsb
mov
xlat
in
out
cwtl
push
enter
mov
mov
jg
add
mov
mov
add
fs
hlt
test
stc
lods
insl
loop,pt
mov
mov
lret
mov
idiv
testb
inc
pop
aad
data16
inc
lock
nop
into
pop
cmpb
add
add
add
push
shrl
bound
jmp
cmp
mov
add
mov
jmp
inc
js
add
scas
shll
scas
fwait
jae
mov
addb
lock
sub
call
aaa
xor
insl
sub
adc
and
dec
cli
lock
shlb
cld
ljmp
add
add
jnp,pt
ret
jle
add
je
dec
jns
xorb
les
je
scas
cmp
sysret
xchg
inc
cmp
loope
jle
or
leave
aas
cmp
btc
inc
andl
shll
lock
je
loope
lret
cld
cmp
fisttpl
xor
sub
setnp
jns
inc
imul
negb
add
add
add
fnstenv
sar
add
push
out
inc
out
pop
pcmpeqb
jge
subb
sub
jae
dec
inc
stc
mov
imul
or
scas
dec
fldl
xchg
cs
shlb
xchg
scas
es
stc
incb
data16
and
xchg
mov
cmpl
and
dec
cwtl
jle
pop
cwtl
add
add
mov
mov
jne
mov
das
inc
adc
or
cli
out
scas
int
fstps
stc
add
lret
push
clc
daa
stos
jmp
test
cld
mov
jne
or
jb
out
push
lock
mov
shll
call
icebp
and
ret
xor
lock
add
sub
lock
orl
stos
pushf
gs
in
and
dec
xor
in
out
fmull
lods
jge
or
sub
add
mov
shrb
lock
mov
push
popa
push
add
push
lods
or
add
int3
cltd
sub
call
add
pop
stos
cli
inc
sub
jmp
xchg
mov
subl
add
push
stc
add
outsb
cmp
mov
jno
add
in
sti
mov
xchg
pop
mov
jg
add
test
jmp
jnp
pop
add
fimull
rorb
mov
pop
add
mov
mov
inc
mov
add
add
or
jle
fdivrs
add
add
inc
idiv
push
enter
mov
jb
rorb
jnp
mov
sub
insl
add
add
out
dec
mov
mov
call
mov
mov
sbb
dec
push
mov
inc
out
mov
sbb
out
mov
add
add
and
gs
gs
jmp
call
test
dec
jge
inc
mov
repz
cli
out
xchg
jns
cmp
mov
iret
enter
stos
cld
leave
gs
cli
mov
pop
jmp
rorl
jbe
push
sbb
ficoml
mov
fwait
add
out
add
cli
and
add
add
add
jle
push
lods
lret
cmpl
push
add
add
mov
mov
and
add
enter
sbb
add
sub
fwait
pusha
je
mov
shl
outsb
add
add
icebp
sbb
fiadds
dec
adc
push
add
movsl
loope
imul
cmp
orb
sub
addl
add
add
insl
lock
sub
mov
test
lcall
adc
mov
arpl
out
dec
das
mov
add
mov
push
fwait
cmp
sub
subb
stos
jle
loope
je
ds
add
add
lahf
cmpsl
xchg
fs
repz
add
add
xchg
cmpsl
je
push
popf
out
sbbl
out
dec
sub
out
inc
cmpsl
cli
push
xor
loop
push
bound
jge
sbb
sub
inc
fidivrl
call
decl
jmp
sub
push
sub
cmp
rorl
mov
outsb
loope
mov
jp
pop
icebp
loop
add
add
add
decw
dec
mov
std
push
daa
decb
mov
xor
and
call
add
push
and
iret
cmp
xchg
lret
cwtl
or
and
sub
out
fpatan
es
ret
stc
jecxz
or
dec
scas
jno
incb
add
add
mov
dec
out
mov
sub
incb
scas
push
call
cli
jns
xchg
loope
fsts
adc
add
out
push
xchg
push
xchg
das
int3
call
gs
loop
sub
add
cwtl
fucom
std
fs
mov
shlb
jne
jns
cmpsb
and
fisttpll
xchg
add
add
stc
add
pop
add
dec
add
jne
js
mov
test
cld
insb
push
iret
add
icebp
cmp
fnstsw
inc
aas
jmp
cld
pop
xor
ret
in
ret
out
addr16
cld
push
call
jnp
cmp
add
jl
add
add
jne
std
insl
ds
js
jo
in
sub
inc
push
mov
add
add
add
pop
insl
ds
mov
ds
jne
fsubrs
mov
dec
jns
outsl
dec
out
data16
sbb
mov
divb
icebp
inc
rorb
fidivrl
popf
cmpsb
jg
jmp
test
jno
add
je
mov
movsb
add
jmp
lcall
sub
add
add
fimull
or
call
add
or
mov
dec
stc
sub
add
in
pop
stc
dec
xchg
test
call
scas
loope
pop
add
arpl
imull
icebp
push
mov
push
pop
mov
pop
shl
lahf
mov
add
addl
push
push
and
lret
popa
imul
rorl
incl
add
add
xor
subl
add
add
or
or
decl
pushf
addl
psubsw
add
sgdtl
add
ret
xor
call
jns
out
sub
or
add
hlt
out
sub
out
test
and
pop
cmpsb
jle
leave
decb
add
pop
loop
subb
fcomip
mov
sub
in
outsl
stos
popf
jns
loop
cmp
lds
jnp
adc
mov
fimuls
jnp
out
adc
gs
ss
xor
scas
es
jnp
mov
and
insl
call
cld
cmp
jmp
das
fimull
add
add
push
out
aas
xor
ret
faddp
push
sbb
jl
or
call
out
add
add
and
add
xor
sub
stos
nop
insl
aas
add
mov
aas
sbb
push
jge
nop
in
lret
mov
shl
in
adc
inc
out
aaa
mov
mov
xlat
jl
xchg
icebp
jno
add
add
out
or
decl
stos
push
shr
inc
stc
rorb
xchg
xchg
push
cmp
in
or
push
xchg
mov
aad
or
outsl
or
decl
push
push
lahf
mov
ljmp
or
xor
insb
mov
ret
rcrb
jmp
stos
xor
inc
adc
jb
add
add
push
lcall
cli
pushf
loope
je
jne
sti
push
xchg
test
xchg
sbb
bndstx
mov
mov
fimull
mov
xchg
stos
cmc
incl
add
add
lret
xchg
incl
arpl
inc
jg
lock
xchg
xorl
cmc
mov
mov
jnp
add
add
add
add
vmwrite
shl
xchg
les
bound
adc
and
dec
or
dec
lret
sbb
in
pop
jl
sbb
fstpl
pmaxsw
cli
rorl
inc
lret
lock
arpl
jno
pop
inc
lock
fimull
in
fnstenv
lcall
and
add
and
cmp
add
add
add
adc
mov
xchg
cmc
mov
inc
test
push
cs
and
mov
sub
stos
xchg
jnp
sbb
fimuls
imul
cli
icebp
or
add
fiadds
out
or
out
lds
inc
out
aaa
mov
popa
cmpsl
lcall
add
xchg
icebp
insl
cs
insl
idivb
pop
jbe
add
add
aas
in
inc
imulb
das
std
cltd
sub
imul
push
adc
mov
add
add
lcall
in
test
clc
cs
add
cmp
test
add
aad
sahf
icebp
sbb
es
add
add
add
add
add
dec
in
add
clc
or
or
xchg
xor
sarb
inc
adc
decb
xchg
xchg
add
shrb
and
inc
fadds
xchg
in
add
out
xchg
adc
jmp
in
add
fiaddl
sbb
in
xlat
dec
in
test
aam
add
jmp
add
add
add
mov
jb
push
add
add
inc
ret
sbb
dec
xlat
jnp
fistpl
inc
sbb
xchg
icebp
call
sbb
push
cld
call
or
and
out
imul
cli
jnp
test
pop
call
les
cmp
outsb
and
add
mov
cld
ljmp
test
loope
add
loope
cli
shlb
jp
out
push
adc
jle
dec
or
aaa
or
out
iret
dec
and
mov
or
add
xorb
into
xchg
or
in
add
jo
add
out
sub
jbe
repz
add
add
add
out
push
xor
data16
push
pop
sbb
add
int3
xrelease
in
or
cli
jae
cli
insl
jno
or
sti
ljmp
push
sti
sti
and
push
test
call
add
ret
mov
fistl
ret
pop
or
add
xchg
sub
imul
add
add
pop
push
mov
add
add
jmp
xchg
pop
jp
fcoml
pop
ds
ret
out
ret
push
lcall
faddl
out
subl
dec
out
add
mov
mov
adc
test
faddl
out
fcos
push
cli
and
out
jae
xchg
test
insb
call
add
add
add
jge
int
jl
ss
lcall
mov
daa
and
ja
lcall
imul
mov
lcall
daa
inc
cmpsl
dec
std
mov
or
out
dec
add
ja
cld
rorb
insb
xchg
js
stos
jl
mov
fimull
add
add
mov
pop
xchg
mov
idiv
mov
xchg
and
test
mov
mov
mov
popf
cli
incl
jmp
push
repz
stos
inc
push
push
popa
jae
add
cli
sbb
jae
mov
add
cmc
addl
add
add
mov
idiv
pusha
add
mov
loope
inc
add
rorl
mov
pop
das
cmpsl
xchg
jg
in
pop
mov
movsb
test
adc
mov
ficoml
and
pop
out
test
or
testb
push
inc
incb
jg
test
mov
sbbb
nop
mov
or
loop
jg
nop
mov
or
mov
jge
push
sahf
ret
mov
fsubrl
test
sub
mov
add
mov
or
adc
repnz
rorl
push
in
push
sahf
hlt
jl
push
jae
push
add
test
add
add
add
add
add
add
rol
or
mov
mov
lcall
dec
sarb
test
pop
ljmp
leave
pop
xchg
pop
hlt
je
fstpl
xchg
mov
insb
and
call
repnz
dec
jmp
mov
loop
xchg
repnz
cld
jle
aas
xchg
cli
dec
dec
jmp
add
add
sub
pop
repnz
xchg
mov
cmp
sbb
add
add
mov
jbe
push
es
cli
xchg
jmp
adc
push
mov
push
cmpsl
sahf
jb
inc
fisubs
aas
add
sbb
cmpsl
dec
stc
push
test
cwtl
jg
es
sti
lcall
add
inc
push
mov
add
add
jp
out
inc
adc
lea
add
push
mov
xchg
insb
stc
jp
cmpsl
std
orl
add
add
test
pop
fmuls
cmp
std
xorl
leave
push
test
mov
incl
pop
movlps
adc
xchg
test
pop
and
jg
gs
test
popa
cmp
add
add
add
add
mov
lock
add
out
xchg
xor
mov
out
jb
xchg
fdiv
es
adc
xchg
pop
xchg
pop
mov
gs
mov
mov
mov
outsb
xchg
out
cltd
incb
sahf
sysenter
gs
or
jo
add
add
add
fsubs
or
lsl
jecxz
lock
out
add
loop
pop
or
inc
stc
mov
jns
cld
inc
xchg
lock
iret
adc
jmp
xchg
fmulp
nop
fnstcw
mov
call
mov
les
jo
into
jmp
fiaddl
jmp
xor
add
add
dec
add
cli
jnp
push
aas
aaa
xor
fidivrs
lcall
adc
hlt
adcl
mov
std
arpl
js
adc
mov
call
loope
ss
sbb
subl
mov
mov
add
jae
and
insb
idivb
test
test
jae
inc
test
add
add
idiv
call
jno
sbb
sub
test
out
add
in
add
cld
jb
sbb
movsl
fsubr
imul
add
fmull
fs
call
jmp
stos
inc
sub
xchg
add
jmp
int3
lret
mov
add
add
fnsave
fdivrs
xchg
add
add
pop
pop
fdecstp
sbb
dec
insb
dec
dec
imul
push
std
push
push
rorl
push
clc
ljmp
inc
xor
mov
add
mov
scas
dec
sub
or
movl
lcall
ljmp
xchg
pop
test
jl
jmp
or
xchg
jle
fadds
add
add
add
mov
and
jae
fidivrs
imul
xchg
dec
cmpb
cltd
movsl
sub
mull
es
mov
jmp
and
ss
add
insl
adc
add
jmp
insb
adc
inc
xchg
cli
adc
int3
jmp
add
roll
mov
sbb
loop
movsb
mov
testb
adc
push
jmp
mov
cwtl
inc
ja
arpl
loop
adc
mov
call
testb
cmp
push
adc
call
out
adc
mov
add
mov
nop
adc
add
add
daa
cltd
lcall
adc
shlb
or
mov
or
out
lret
cli
bound
aad
pop
jmp
or
call
mov
dec
jae
movsb
sub
int
push
pop
and
add
sub
test
divl
in
outsb
stos
add
aas
andb
xor
shl
dec
out
ds
mov
out
test
inc
pop
xchg
lds
jae
mov
outsb
add
decl
fistpl
mov
add
or
and
iret
cmpsl
xlat
ja
ja
cmp
jae
adc
decl
adc
add
add
add
or
push
mov
pmullw
js
inc
jl
mov
cmc
decl
pop
setno
ljmp
movl
add
int
je
push
mov
test
sahf
dec
fs
push
add
cmp
xor
cmp
adc
sub
add
add
ljmp
call
lds
outsl
dec
lahf
dec
fs
testb
insl
cli
popa
repz
mov
adc
xor
dec
pop
or
ret
cwtl
vmovq
das
add
repnz
mov
or
mov
stc
cmpsb
pop
add
sti
icebp
fwait
jno
add
add
add
adc
stos
xchg
les
mov
mull
xchg
add
xchg
movsb
adcl
sbb
gs
or
shlb
jmp
ljmp
loop
lds
in
xchg
mov
leave
xchg
add
decl
mull
inc
xchg
xchg
clc
test
cltd
xchg
mov
mov
add
add
nop
enter
into
cmpsl
adc
out
scas
stc
outsb
pop
cli
mov
cmp
pop
jmp
hlt
rorl
gs
cli
inc
jo
or
imul
or
jl
and
mov
in
add
out
insb
cld
push
jl
jg
in
add
stc
pop
mov
mov
loopne
call
jg
cmp
dec
xchg
out
or
into
jg
sub
add
add
add
add
gs
and
in
stc
orl
sar
call
jg
pop
add
jp
subl
push
pop
add
inc
or
insl
sub
inc
jo
clc
into
add
das
popf
add
inc
and
call
jo
cmp
out
inc
std
push
mov
pop
add
add
add
jbe
incl
sbb
push
add
dec
jo
cmp
xor
sti
xor
pop
idiv
decl
lret
push
icebp
incl
add
push
xorb
out
int
or
mov
or
xchg
icebp
adc
mov
jae
jmp
sbb
lret
lcall
add
mov
mov
aad
out
cltd
incl
xchg
cli
xchg
scas
xor
arpl
addl
test
xchg
stc
or
sbb
andb
mov
cli
add
loope
and
sub
mov
add
jnp
nop
adc
jg
add
aas
xor
les
add
add
adc
ffree
call
js
xchg
and
stc
adc
ja
jp
addr16
jge
or
ja
pop
or
fbstp
aas
adc
loope
and
push
add
add
inc
cmc
jnp
add
add
push
mov
ficoml
icebp
ja
jns
mov
jmp
loopne
add
add
add
or
cmpl
scas
test
inc
jo
cli
jp
clc
bound
cltd
sub
cmp
mov
add
call
cmp
cmpsl
sub
in
pop
test
jns
inc
and
je
and
ja
adc
or
xchg
cli
lahf
mov
pusha
mov
ss
cli
pop
add
add
add
push
aad
or
mov
xchg
cli
add
jp
psrlq
adc
inc
add
pop
cmp
rorb
xlat
mov
jo
inc
pop
mov
in
js
jnp
pop
test
ret
std
decl
jecxz
inc
and
push
inc
and
data16
divb
or
jmp
ret
fs
incl
add
add
adc
cli
call
cmc
decl
cmp
add
xchg
pop
cmp
out
insb
cmp
jmp
cmp
fcoml
std
push
lret
or
and
mov
cwtl
mov
or
add
push
lahf
idivl
mov
adc
or
insl
das
add
and
mov
add
dec
jle
imul
fcompl
jle
dec
stos
incb
mov
mov
and
cli
mov
or
idivb
jbe
jb
inc
clc
sbb
add
into
xor
adc
mov
loope
jo
leave
mov
mov
jle
xor
xchg
daa
mov
mov
nop
cs
andb
insl
das
add
add
add
orb
cli
cmp
ja
pop
inc
out
mov
mov
sbb
rorl
and
sarl
adc
outsl
inc
or
aas
jno
add
jle
in
aad
rolb
into
scas
pcmpgtw
loop
jmp
inc
out
pcmpgtb
jnp
push
mov
out
out
je
inc
push
inc
dec
es
stos
aaa
shl
adc
add
in
or
out
lahf
lret
sbb
icebp
adc
out
adc
inc
call
xor
loop
mov
inc
xchg
fildl
jns
add
jmp
aam
push
jmp
in
jmp
stos
das
into
imul
push
inc
mov
les
shrl
out
mov
jno
add
add
add
dec
xchg
repnz
cld
add
cmp
loope
mov
add
inc
inc
jns
addb
inc
add
stc
dec
cld
mov
or
mov
cmp
mov
nop
add
add
vmwrite
xor
ss
inc
dec
cs
std
or
add
les
pushf
daa
insb
unpcklps
adc
xchg
adc
xor
out
add
jmp
jle
inc
add
xor
daa
popf
ljmp
cmc
xchg
cli
dec
ljmp
loop
decb
stos
jae
dec
cli
jb
insb
popf
add
mov
repnz
stc
add
shrl
mov
cmp
add
add
push
fwait
adc
scas
pop
repz
or
and
mov
scas
lret
shr
mov
jl
push
test
cmp
cli
aad
les
test
lret
sarb
fildll
mov
gs
jl
jl
jmp
jnp
hlt
push
imul
xchg
or
mov
jl
cmp
icebp
sbbb
jmp
adc
add
add
cmp
mov
insl
cmp
inc
and
out
add
add
aaa
and
in
pop
in
loope
call
or
jnp
xchg
adc
pushf
out
aaa
pop
std
mov
movsb
jnp
imul
adc
insb
inc
or
jmp
inc
cld
sub
fidivrl
push
shlb
je
lods
ja
aad
add
add
sub
adc
bound
test
cmp
or
jb
mov
xor
out
sbb
scas
jo
jl
in
pop
test
data16
rcl
jl
imul
xchg
sub
and
and
xchg
testl
pop
ficomps
push
push
ficoms
sti
aam
ja
add
addb
jb
or
cmp
add
add
stos
subb
loop
fadds
insb
cwtl
jg
clc
call
mov
je
int3
cmp
sub
mov
jns
push
inc
push
add
sti
push
in
sub
pop
cmp
adcl
sarl
sar
push
mov
inc
loopne
jns
mov
mov
aam
addl
std
push
mov
incb
mov
jp
add
add
add
add
idivl
std
jb
mov
out
cld
out
and
lock
addr16
pushl
wrmsr
das
scas
cmpsl
jne
jle
cmp
test
fs
iret
mov
mov
or
sub
jle
push
inc
dec
pop
mov
out
outsb
mov
aam
dec
std
mov
dec
and
add
add
add
bound
sub
lock
ja
mov
out
jp
add
mov
into
push
hlt
insl
pop
call
shl
scas
in
enter
lcall
out
mov
add
mov
cmp
repnz
js
dec
call
scas
hlt
or
hlt
jl
jp
add
add
xor
leave
leave
fisttpll
aam
cmp
adc
mov
jo
mov
sbb
jge
push
out
add
cmc
cmp
lock
sbb
out
push
xchg
sbb
cmc
sti
cmp
sbb
push
cmpsl
adc
movsb
fxtract
ficoms
addb
mov
fcmovu
aad
mov
daa
leave
test
leave
pop
loop
or
push
add
add
out
jo
cmc
jbe
in
insb
cs
cmc
cld
testb
insb
jp
sub
rorl
imul
jb
jp
loope
jp
fldcw
scas
push
jmp
loop
jp
lods
or
and
into
out
pop
xor
adc
call
jg
add
adc
sbb
add
add
pop
cmp
push
out
add
inc
dec
push
mov
aaa
dec
jnp
xlat
cmp
adc
jb
cli
mov
adc
add
pusha
idivb
jg
sub
add
adc
add
sar
outsb
and
out
cmp
adc
leave
add
pop
pushl
xor
mov
cmp
icebp
add
add
add
testb
addb
insb
cmpsl
jno
mov
loope
and
push
cli
and
xchg
lods
push
push
mov
je
push
call
stc
in
push
out
addr16
ss
pop
jno
dec
outsb
mov
inc
in
test
pop
in
mov
xor
add
decb
add
add
inc
nop
decl
add
adc
out
push
or
dec
jbe
xorb
test
aad
push
inc
dec
cmp
mov
gs
into
shrl
sub
add
add
inc
jbe
cmp
nop
iret
cmc
inc
rorl
aad
xor
mov
jno
jne
std
shl
mov
cmc
stos
xchg
add
add
add
add
cmp
jae
add
add
inc
int
push
test
add
andb
flds
add
push
mov
xor
aaa
js
sub
jl
sbb
mov
mov
pop
mov
mov
push
jge
mov
pop
shll
jmp
xor
or
add
jmp
inc
ss
aas
ss
sub
test
add
add
add
add
fstps
xchg
insb
or
in
repz
in
in
sbb
pop
rcrl
jb
pop
adc
loopne
clc
fisubrl
and
pushf
dec
push
sub
fnstenv
mov
cmp
stc
decl
adc
js
inc
add
ret
jmp
clc
adc
inc
adc
add
add
push
dec
push
jle
in
add
incb
cmp
add
jecxz
cmc
add
in
add
std
incl
xorb
add
arpl
cmc
movups
cmp
cmp
cli
out
pop
cld
adc
or
jne
out
decb
imul
out
push
pop
add
add
add
xchg
jl
stos
jae
inc
add
inc
call
adc
out
push
inc
add
adc
addr16
ljmp
decb
jp
add
out
fldcw
out
repz
sub
cmc
imull
sbb
je
or
std
mov
test
jbe
cli
dec
pushf
adc
stos
add
std
sub
add
add
add
out
add
add
jge
add
test
add
add
fstl
jno
or
or
sbb
div
cmpl
imul
jl
jo
sbb
cld
std
mov
add
std
add
add
addl
jl
add
add
fstl
jo
or
adc
cmpb
push
add
add
add
push
or
xchg
idivb
cmp
push
jo
call
lds
sub
sub
aaa
push
call
cmpsb
das
adc
jmp
jmp
mov
add
repnz
fmull
push
pop
cli
sahf
in
push
sub
add
xchg
cmc
in
xlat
sti
xorb
cli
jmp
xor
sub
cmpsl
push
call
add
ljmp
xchg
loope
mov
jmp
and
aaa
mov
testb
ficomps
pop
orb
jp
pop
cli
test
inc
ljmp
cmp
jmp
add
cmp
cli
adc
ret
or
pop
add
add
add
call
mov
mov
xor
add
mov
jp
lret
sti
or
jmp
decl
adc
inc
mov
add
add
cmp
pop
xor
mov
add
add
add
add
lods
sub
dec
pop
add
cli
dec
popf
or
stos
push
clc
fadds
add
out
or
ja
adc
sub
adcb
add
add
in
push
cmp
insl
mov
mov
gs
iret
pop
pop
test
js
shll
cmp
dec
clc
fcom
pushl
sub
lret
sbb
pusha
xchg
pop
xor
sub
imul
out
out
push
pop
mov
loop
xor
aas
outsb
add
adc
or
fs
adc
aam
or
mov
add
add
mov
sbb
add
push
es
call
mov
shrl
std
insb
insb
adc
js
adc
mov
cmp
inc
hlt
test
pop
aam
gs
ljmp
je
jnp
outsl
mov
pop
or
or
out
add
andl
jns
xadd
mov
add
add
test
outsb
mov
pop
push
jmpw
pop
bound
stos
out
subl
lods
hlt
push
bound
je
add
rcrb
adc
adc
jne
insb
jbe
xor
mov
sti
sub
sub
loope
out
adc
xchg
movb
imull
out
test
add
out
or
cmp
mov
jo
lock
hlt
jns
movl
jl
testb
and
decl
js
and
jl
and
jno
mov
push
cli
inc
adc
push
dec
jo
call
xlat
push
in
repnz
test
test
cmp
call
in
dec
fsubr
add
add
add
lds
dec
lods
cmp
cli
fidivl
inc
jl
imul
or
hlt
pop
out
push
jp
xchg
outsl
ljmp
fdivrs
out
push
decb
imul
inc
cli
push
adc
mov
jb
test
add
jae
cli
jmp
jno
test
add
add
mov
je
insl
dec
and
jb
jne
adc
jne
out
push
decb
push
jae
stc
push
les
das
and
call
and
pop
jae
shll
push
insl
jge
je
jne
inc
dec
jge
mov
jmp
or
and
inc
jbe
imul
pop
ja
sub
repz
imul
add
add
adc
xor
jne
data16
add
push
bnd
jge
push
in
mov
and
addr16
add
add
test
sarb
mov
mov
je
and
call
in
jmp
or
data16
in
fiaddl
inc
imul
leave
cld
xorb
cli
jmp
sbb
test
add
inc
jnp
add
stc
inc
add
aad
inc
or
cli
cs
imul
mov
push
mov
data16
pop
push
clc
add
enter
mov
sub
cmp
aaa
pushf
push
jo
adc
test
jne
iret
popf
push
daa
push
sti
jle
jl
cli
out
test
mov
add
icebp
sti
adc
imul
pop
mov
add
add
lds
incb
xchg
push
rorl
push
idiv
adc
push
insb
nop
jle
std
inc
hlt
add
xor
clc
lgdtl
repz
dec
dec
imul
std
icebp
cmc
dec
cmp
cmp
add
fcomip
repz
cmp
add
call
test
out
add
cld
push
test
cmc
inc
repz
adc
add
add
out
inc
push
jl
les
inc
sbb
rorl
mov
push
insb
out
pop
addl
cli
in
add
ficomps
xchg
mov
insl
ds
insb
ljmp
loope
adc
sbb
mov
fimull
insl
nop
outsl
cli
imul
repnz
or
outsl
cli
dec
fwait
insl
inc
add
add
add
inc
mov
push
xor
or
or
pop
pop
add
push
pusha
sti
shlb
call
pushl
test
bound
xor
in
mov
pop
xchg
jno
scas
sbb
scas
pop
lock
mov
and
cmp
das
mov
cli
lods
mov
jmp
and
add
add
out
pop
lahf
jl
sbb
enter
sbb
cmc
cmc
pop
xchg
add
test
inc
jmp
add
into
stc
imul
jns
jno
hlt
jmp
arpl
adc
adc
add
in
add
cmc
jb
out
cmc
jle
arpl
ljmp
mov
call
inc
jg
adc
in
jmp
add
jge
ljmp
mov
fstp
aas
jmp
or
adc
jmp
je
in
pop
lahf
in
ucomiss
cli
pushf
gs
testl
out
jge
jecxz
add
jb
and
cltd
sahf
in
sbb
data16
inc
addr16
sub
into
pop
cld
out
cmp
cmc
call
addr16
incl
add
add
push
mov
add
js
push
adcb
out
mov
lds
dec
repz
pushl
shlb
cmp
incl
or
shlb
xchg
pop
pop
lods
jp
jno
cli
jb
stc
push
iret
loop
not
cmc
mov
jge
sbb
cmp
jo
add
add
add
push
adc
pop
lret
pop
jae
testl
mov
pop
dec
in
jle
mov
out
push
testl
push
fiadds
cli
insl
jmp
sub
jmp
pop
stc
sub
sti
sbb
cli
mov
or
aas
out
lret
in
sub
cli
sti
inc
jne
jns
cli
cli
sti
pop
push
add
push
imul
add
push
mov
or
push
out
push
cli
inc
out
and
pop
mov
sub
or
pop
add
mov
call
push
lahf
popa
push
adc
ss
popa
xor
or
test
push
out
add
test
outsl
aam
jg
shlb
jns
sbb
sub
mov
enter
imul
leave
fisubrl
add
xchg
jmp
add
std
sbb
cmc
insl
cmp
pop
outsb
inc
sub
inc
icebp
xchg
call
insl
inc
jge
add
fs
add
fsubp
add
jmp
cmp
scas
add
sbb
bound
ljmp
mov
pop
aad
scas
fmuls
call
fs
add
add
les
pusha
mov
mov
dec
pop
cli
nop
sbb
cli
jbe
lds
ficomps
add
xchg
xchg
add
cld
or
in
pop
je
out
inc
push
ss
adc
sbb
aam
jb
pop
je
mov
fsts
fiaddl
add
jnp
inc
fstpt
fisttps
cld
call
mov
addl
dec
ljmp
add
add
or
jae
add
cli
sub
jae
pop
and
jne
ljmp
jo
mov
add
stos
sbb
and
out
insl
jmp
mov
push
mov
add
push
and
mulps
divl
pop
mov
ja
cmp
and
add
xor
jne
push
sar
jp
or
push
fimuls
add
add
add
in
inc
or
idiv
sub
push
cld
and
call
test
inc
loopne
loop
add
ja
mov
add
mov
iret
jns
addr16
out
loopne
out
xchg
sbb
jmp
sti
or
divb
mov
incl
addr16
lret
inc
rol
out
and
add
add
loope
std
cli
jecxz
divl
out
add
lock
add
push
clc
pop
ds
pop
xchg
adc
or
popa
dec
pop
icebp
jg
aad
sub
pop
loope
in
mov
mov
mov
stc
pop
call
clc
lahf
mov
inc
into
or
cmp
cmp
dec
jge
or
or
fdivrs
outsb
out
add
add
xchg
xchg
adc
mov
adc
lret
pop
jge
or
adc
ret
imul
addb
rolb
add
rol
and
inc
popl
push
dec
stc
or
pop
sub
je
ljmp
mov
aam
ficomps
add
cli
lods
or
rcrb
mov
add
add
adc
dec
cmp
mov
test
call
add
addl
jg
in
add
lds
pusha
outsl
js
call
sub
rcrb
pop
sti
pop
cld
sbb
xchg
inc
out
inc
add
xor
inc
out
push
add
pop
inc
decl
icebp
xor
mov
mov
add
add
add
inc
and
lds
xchg
popa
into
add
push
mov
add
loope
push
ret
mov
xchg
add
pop
inc
lret
mov
xchg
add
dec
fwait
or
dec
fldl
adc
sbb
fmuls
mov
loope
out
fidivrs
rorb
mov
test
pushf
stc
gs
rolb
add
imul
mov
jmp
cli
inc
out
into
rorb
movsb
sbb
into
iret
jle
insl
and
xor
clc
in
std
scas
shlb
or
pop
fdivrl
out
iretw
pop
and
sbb
popa
je
adc
fiadds
mul
lret
cli
addr16
call
add
insl
jne
add
sbb
addr16
fnstcw
add
add
mov
and
xor
push
aam
js
xor
pop
add
add
or
mov
in
cmc
pop
rcr
inc
call
lods
test
cmpsl
arpl
add
and
add
cmc
sbb
cmc
insl
fdivs
push
push
je
add
add
add
out
mov
mov
mov
cmpsb
or
mov
gs
pushf
decl
xor
jb
xor
cli
push
dec
jae
or
mov
movsb
icebp
addr16
in
add
inc
lds
jmp
ret
push
pop
dec
jae
xchg
hlt
mov
sub
push
xchg
adcl
add
add
rclb
in
mov
out
test
mov
call
inc
mov
out
ss
or
and
jae
or
out
lcall
sbb
mov
test
dec
jle
xchg
add
fnsave
sub
fxch
ljmp
or
fnsave
loopne
push
incl
add
add
pop
pop
loop
int
cmc
test
lods
jmp
mov
testb
xor
jne
xchg
and
ljmp
pop
idiv
dec
mov
out
lcall
pop
addl
in
aas
out
loop
jnp
nop
xlat
pop
in
out
insl
std
xchg
mov
shrb
lds
adc
mov
pop
cli
mov
pop
or
add
add
insb
push
push
and
mov
xchg
jae
cli
mov
je
push
xor
mov
icebp
in
sbb
mov
out
imul
sti
jge
imul
inc
pop
xchg
mov
insl
in
sbb
aaa
test
roll
mov
adc
bound
and
add
add
add
push
pop
enter
clc
hlt
subl
push
sbb
dec
push
dec
adc
gs
ret
push
add
test
xor
jl
push
std
push
jnp
mov
cli
xlat
cmc
mov
bound
push
pop
hlt
add
in
pusha
orb
ss
push
leave
xchg
add
add
add
add
addr16
mov
dec
jl
jmp
imul
or
mov
jecxz
xchg
inc
out
imul
insl
fcmovbe
daa
sub
mov
movsb
adc
jle
int
xchg
jae
add
test
pop
repnz
or
loop
pop
or
pop
cli
push
jnp
and
inc
and
add
add
je
jle
out
in
push
fisubs
add
je
push
test
add
jnp
add
add
cli
loopne
aam
fstp
lcall
inc
jl
rolb
lods
xchg
add
adc
in
in
loope
inc
mov
movlps
pop
or
mov
test
xchg
cmc
mov
incl
add
add
int3
cmp
inc
mov
sbb
jmp
test
cmp
setp
fdivrp
sbb
push
insb
or
in
mov
mov
xchg
or
pop
out
es
jno
cmp
xor
pop
je
rolb
inc
inc
test
shl
xchg
push
or
mov
xlat
lods
xchg
enter
add
add
ror
and
scas
sub
add
xor
pop
ss
lds
stc
lret
ds
movsl
push
or
cli
xor
enter
and
cli
fcomps
gs
or
out
cli
jnp
cmc
pop
orb
mov
push
rorl
cmp
call
les
or
shlb
pop
enter
clc
add
add
add
orl
adc
push
orl
roll
pop
idivb
insl
inc
cwtl
push
pop
pop
sub
push
fmuls
hlt
insl
ss
int3
loopne
sub
mov
inc
int3
lock
sbb
inc
pushf
xchg
push
pop
out
out
test
daa
mov
mov
or
cli
fiadds
add
add
xlat
mov
out
jp
into
inc
pop
mov
scas
sbb
jecxz
insb
lret
cli
and
push
je
push
stc
adc
jns
xchg
shr
mov
cmp
or
stc
out
ret
push
cli
fs
mov
jmp
in
add
bound
push
mov
mov
push
xchg
sbbl
add
add
lret
push
xchg
and
jns
or
jne
mov
adc
pop
lea
call
dec
les
ljmp
enter
push
mov
jns
xchg
std
adc
lods
cmc
mov
add
inc
mov
or
lods
cmc
mov
add
cli
xchg
xor
add
inc
test
mov
cmc
and
and
inc
push
xor
add
pop
xchg
ficoml
cwtl
dec
jg
jmp
idivl
pop
stc
faddl
shlb
popa
cli
jmp
pop
sbb
push
sbbl
fs
ljmp
pop
xor
mov
jle
add
add
xchg
cmp
cli
lret
mov
sarb
push
lret
loope
je
hlt
mov
test
mov
xor
inc
sub
adcb
pop
pop
xor
fs
add
int3
mov
cmc
push
pop
adc
add
jl
mov
add
outsb
daa
jnp
adc
add
call
inc
pop
leave
sbb
pop
push
popl
add
add
daa
adc
mov
push
in
clc
out
loope
sub
pushf
add
pop
leave
fstl
or
std
fs
mov
pop
sub
imul
cli
in
insl
xor
mov
mov
shr
dec
mov
imul
pushl
mov
data16
xchg
enter
pusha
cmp
sub
cmp
add
add
xor
xor
dec
test
xor
cmpsl
sub
sahf
mov
ljmp
dec
sbb
mov
inc
test
mov
mov
test
test
inc
test
dec
mov
stos
mov
ja
test
gs
mov
add
xor
xchg
sub
and
add
add
inc
cli
sbb
add
add
adc
aam
inc
cli
mov
roll
add
inc
cli
or
inc
cli
int
inc
cli
scas
rolb
push
rolb
cmp
inc
cli
outsl
inc
inc
cli
jge
inc
cli
mov
inc
cli
sbb
jle
cli
xchg
mov
loopne
inc
cli
out
jle
cli
negl
cli
add
inc
inc
cli
dec
inc
inc
cli
add
cli
pop
mov
add
add
mov
inc
cli
adc
jno
jmp
jno
jmp
call
lcall
faddp
mov
pop
push
out
lcall
lcall
out
call
cmc
lcall
xchg
incl
mov
inc
insl
mov
in
incl
add
add
add
push
or
cmc
pop
add
gs
decb
or
loope
sti
adc
aam
cmc
sbb
add
testl
and
and
pop
add
sub
sbb
sub
sbb
sub
push
sti
int3
cmpsb
mov
scas
es
fcoms
pmullw
ficoml
rcrl
mov
sarl
sbb
add
add
and
sub
and
and
popa
fnstenv
shrl
sarl
mov
test
sahf
rcrl
scas
rorl
call
scas
dec
push
xor
dec
lcall
dec
push
sbb
das
dec
push
sbb
dec
dec
sbb
dec
jp
das
dec
mov
das
dec
fidivrs
add
add
add
dec
in
das
dec
aas
pop
das
dec
aas
aaa
das
dec
pop
and
dec
pop
adc
dec
mov
das
dec
xor
lods
dec
pop
scas
lods
dec
test
lods
dec
fistps
lods
dec
lcall
dec
mov
lods
dec
mov
lods
dec
mov
mov
dec
iret
lods
lods
dec
iret
add
cli
pop
dec
ds
pop
pop
ds
lock
ds
cmp
ds
push
and
cli
insb
add
add
add
aas
cli
addl
fdivrs
cmp
inc
inc
out
inc
inc
ljmp
js
or
leave
push
mov
loopne
cltd
ret
adc
call
mov
call
rorl
pop
push
std
call
jmp
adc
sti
cmp
std
xchg
cwtl
add
cmp
push
jnp
out
add
add
add
add
pop
stc
push
mov
test
iret
push
cli
loope
mov
cli
popa
cmpsl
add
mov
lcall
cmp
push
mov
push
cli
sub
mov
mov
pop
cmp
out
out
fcoms
inc
pushf
lcall
call
pop
jg
das
dec
cli
jecxz,pt
out
add
add
icebp
mov
cli
jne
mov
inc
push
fdivr
stos
add
xor
mov
xor
pop
in
test
jns
cmp
mov
add
add
out
jns
sub
dec
add
in
xchg
cmp
lcall
mov
sub
in
jbe
insb
jge
nop
pop
mov
jnp
sti
cs
jmp
add
add
add
rol
data16
push
hlt
inc
pop
lret
sar
add
enter
inc
leave
jle
stc
cmpsl
pop
loop
test
jb
pushl
stos
inc
out
leave
aas
mov
cli
xchg
adc
cli
xchg
mov
cli
outsb
ljmp
je
dec
cli
push
shrb
pushf
imul
add
mov
stos
cli
cs
movsb
or
add
add
shlb
out
jp
xchg
and
in
sar
push
call
add
stc
in
int3
dec
or
add
add
sub
xor
repz
cmp
xchg
inc
cli
jae
cmc
call
cld
jae
in
test
add
dec
cmp
add
add
add
scas
cmp
push
add
jle
inc
xchg
iret
lds
test
addb
sbb
shrl
movsb
testl
stos
cmp
call
cmp
clc
enter
mov
mov
inc
cmpl
loopne
pop
leave
xor
test
mov
jns
repnz
add
add
jnp
gs
jbe
pop
test
lret
add
data16
jnp
scas
jns
sti
add
push
mov
push
cli
push
aad
je
aas
dec
call
xor
out
faddp
emms
aad
sti
sbb
jnp
arpl
cltd
xchg
push
movsl
repnz
xlat
mov
ljmp
cli
ja
pop
sti
add
add
add
add
jge
add
dec
aam
cltd
stc
jne
add
js
pusha
add
xor
daa
xor
imul
es
cld
push
addl
gs
fs
or
cmp
push
jo
adc
push
inc
shll
add
and
hlt
add
sbb
xchg
scas
in
pop
cmp
popa
sub
add
pop
add
add
add
jg
add
mov
xchg
add
mov
xchg
in
clc
lcall
dec
icebp
cmpsl
loope
jae
rol
and
push
add
mov
nop
and
call
cmpsb
xchg
jns
lea
mov
pop
jb
push
mov
insb
or
cli
arpl
mov
pop
std
cmpsl
add
add
add
bound
mov
ja
outsb
xchg
insb
test
cs
lcall
mov
push
data16
push
mov
xchg
add
cmc
jl
loop
inc
mov
mov
add
lock
pop
cmp
pushl
std
cmp
cmc
jmp
push
adcl
cmc
call
jae
sbb
add
add
sbb
add
xor
or
mov
inc
cmp
push
add
pop
mov
cmc
ud1
pop
cmp
cld
call
push
cld
or
push
jb
movsl
mov
or
push
pop
inc
add
lods
out
push
cmp
cmp
out
mov
out
loopne
and
push
dec
or
add
add
push
out
add
ljmp
lods
mov
jae
and
je
mov
outsb
mov
dec
cli
imul
dec
cli
gs
test
pop
push
out
mov
dec
xchg
sbb
sbb
cli
sbb
and
in
and
divb
xchg
testl
jae
fwait
dec
hlt
aas
sarb
aad
pop
inc
or
fyl2xp1
inc
loope
mov
inc
leave
dec
out
mov
xchg
mov
cli
fcom
out
fdivrp
sbb
pop
leave
jns
lahf
jge
or
mov
mov
inc
mov
add
mov
mov
pop
js
stos
xor
add
add
mov
mov
aam
inc
or
add
jmp
clc
int
popf
lret
testl
sub
loope
inc
or
add
jmp
loope
out
push
in
cmc
ret
daa
add
jmp
call
mov
xchg
out
mov
push
int
cli
xchg
push
lea
mov
push
adc
rclb
add
add
add
jl
loop
lahf
pusha
outsb
out
data16
and
cs
push
cmp
ja
jne
mov
loop
fsubrl
idiv
enter
pop
add
sbb
dec
adc
ljmp
aam
movl
cmc
ljmp
cmp
les
movl
sub
out
gs
je
add
add
cs
cmp
dec
outsb
xor
jae
or
mov
mov
cmc
call
cmc
call
ret
test
add
add
ret
mov
inc
data16
mov
xchg
aad
mov
rcrl
dec
cli
pop
leave
adc
mov
jae
mov
push
loope
inc
xchg
add
add
sub
push
inc
out
fstp
mov
add
cmp
push
outsb
ret
dec
or
or
sbb
leave
and
in
negl
add
cmpl
bnd
ljmp
insl
cmc
mov
jne
add
cmpsl
sub
cmp
pop
sbb
dec
repnz
dec
lods
testl
add
mov
cmp
iret
mov
xchg
arpl
scas
fdivrl
add
cmp
xchg
mov
arpl
add
inc
imul
pop
push
cmp
sub
push
add
add
mov
jbe
outsb
mov
data16
in
repz
add
dec
jns
loop
sti
dec
clc
dec
mov
stc
jle
add
add
add
mov
notl
ss
bound
cli
inc
mov
mov
fldcw
cltd
test
push
and
xor
mov
cli
push
lea
sub
cli
fdivl
ds
xor
call
mov
addl
stc
jmp
cs
add
push
jns
int
jo
add
add
jp
push
jne
rorl
add
pop
add
leave
test
cli
lcall
xchg
mov
push
add
add
or
ret
out
rcrl
mov
mov
or
fimuls
out
mov
adc
out
pop
add
mov
mov
int
xchg
cmc
leave
add
add
add
fnstcw
lret
andb
cmpb
imul
cmp
inc
push
add
pop
cld
jnp
sub
dec
ljmp
iret
adc
sti
xchg
jg
cmp
outsl
lret
in
cmp
push
out
mov
pop
orb
incb
jmp
daa
pop
inc
add
jnp
out
daa
incb
add
add
add
pop
jp
out
sub
repnz
sub
ljmp
sub
jg
pop
jae
dec
cmp
or
out
mov
orb
sti
sub
inc
cli
add
shrb
leave
adc
es
sbb
icebp
sub
iret
or
pcmpgtd
pop
insb
jg
cmp
mov
stc
mov
ss
rorl
add
jo
fcompl
mov
pop
fimuls
rcrb
mov
pop
into
mov
sti
faddl
repz
jnp
adc
inc
call
pushl
loopne
sub
hlt
mov
cmpl
sub
pop
loop
and
lcall
cmpl
pop
insb
add
add
add
add
jmp
mov
cli
call
add
ljmp
aaa
stc
inc
lods
mov
repnz
add
lods
clc
inc
cmp
sub
xor
push
icebp
mov
sub
call
scas
incb
pop
cmc
out
rcrb
add
test
cli
jmp
add
decl
add
add
or
out
fwait
pop
cmc
decl
dec
mov
push
outsb
aad
add
hlt
or
add
inc
jae
add
in
add
or
out
rolb
incl
mov
cmpl
adc
mov
inc
call
fdivrs
jae
ret
pop
fsubs
add
adc
add
add
fnstcw
test
and
adc
out
aas
cmp
mov
fwait
pushf
xchg
daa
aas
je
mov
add
xchg
xchg
inc
cli
push
adc
fimuls
xchg
movsb
pop
js
pop
inc
adc
cmp
mov
mov
lods
cs
cmp
lret
inc
dec
incl
add
add
jbe
inc
push
jne
inc
inc
cs
test
xchg
and
add
je
adc
je
lahf
test
sub
mov
mov
sub
fsubrl
loopne
call
xor
xor
pop
sti
shr
or
inc
lea
xor
inc
loop
pop
mov
xor
xor
sti
pop
push
outsb
pop
mov
add
add
subl
dec
sub
xor
mov
jg
pmaddwd
add
sbb
xor
mov
xor
jecxz
jl
add
add
cmc
add
out
add
cmp
inc
add
in
jp
add
je
clc
inc
clc
in
add
mov
add
jmp
repnz
adc
add
add
add
add
imul
loopne
fsubrp
in
add
inc
test
daa
insb
cld
jbe
and
add
ss
and
out
lret
subb
add
jmp
fs
cli
shr
ret
mov
call
pop
fwait
cli
push
mov
dec
mov
icebp
add
aaa
mov
inc
outsl
repz
ljmp
ja
sbb
jnp
add
add
add
pop
xchg
adc
cld
je
xchg
mov
push
repz
mov
scas
pop
push
call
subl
cmc
push
int3
mov
icebp
add
lea
mov
in
shl
mov
addr16
jmp
nop
subl
cmc
push
sarb
lea
dec
loop
jbe
cmc
test
add
add
out
mov
ds
movsb
lcall
daa
decb
popa
add
cs
mov
jne
xor
sub
xchg
cmpsb
sub
movsl
rorb
popf
mov
sarb
addb
aam
repz
jp
cs
lods
xor
jg
xor
sarl
jg
ficoms
cs
test
add
add
add
push
push
test
rorl
scas
out
cmpsl
into
dec
xor
lods
pop
in
add
add
or
adc
leave
jp
adc
jb
xor
sbb
jae
mov
xor
movsb
push
or
mov
xchg
cmp
or
ret
jns
mov
mov
out
add
sub
add
add
stos
add
cmp
mov
lods
dec
hlt
xchg
out
add
jmp
dec
add
add
sbb
xor
mov
daa
cld
cs
jae
out
das
cli
jmp
lods
jl
sbb
add
pop
test
ljmp
cmp
fistpll
hlt
push
add
add
in
sahf
sbb
and
add
out
ljmp
out
jbe
add
xor
inc
cmp
and
sti
xchg
test
mov
cli
pop
cmp
je
jae
mov
add
cmp
fisttpl
cmpsl
xchg
sub
movsb
addb
pop
add
cmp
add
add
add
add
loop
cmpsl
add
jmp
sub
orl
jns
cmp
scas
mov
cmp
lds
lahf
pop
incb
cmp
push
ja
mov
out
jmp
jg
or
inc
in
inc
inc
fiadds
xchg
fdiv
out
sub
push
testb
pop
add
add
add
movsb
mov
cmp
xchg
xchg
stc
jmp
fldt
out
mov
lahf
in
add
add
loope
cli
and
mov
aas
inc
or
pop
test
mov
cmp
xor
inc
mov
inc
repnz
out
aad
aaa
pop
inc
mov
aam
jne
push
xchg
add
add
cs
jp
in
add
add
test
push
out
add
add
add
stos
std
shr
add
cmpsl
mov
hlt
orb
sub
mov
stos
inc
jbe
sbb
loope
cmp
fnstcw
add
add
inc
arpl
sbb
mov
ret
adc
sub
out
subb
add
add
add
xorb
out
add
inc
mov
call
dec
push
push
enter
ljmp
push
test
jmp
jb
sub
mov
mov
xor
sti
mov
daa
xchg
pop
push
je
add
add
in
orl
loope
jmp
mov
pop
cwtl
sbb
push
add
add
add
dec
jle
loope
orl
add
movsl
std
mov
shll
sbb
inc
lea
cli
out
add
push
incl
cmp
fndisi(8087
or
jge
hlt
hlt
movl
add
decl
loopne
lods
enter
cmpb
add
add
jne
lock
sub
add
incb
test
add
leave
xlat
add
add
cmpb
xchg
sub
orl
and
cli
jg
dec
jae
lahf
out
jne
jnp
enter
stc
cmp
paddusb
push
decb
add
add
pop
mov
jbe
mov
std
out
pop
es
mov
mov
test
mov
mov
inc
xor
adc
inc
mov
sub
or
sahf
out
xor
ret
outsb
into
out
lcall
xchg
sub
push
and
addl
sbb
sub
xor
xor
pop
sub
add
sub
das
adc
lret
das
jo
cmp
scas
in
roll
cmp
jne
pop
jo
inc
sub
ja
xor
push
xor
xchg
add
xlat
daa
icebp
mov
sub
or
mov
inc
pop
fidivl
inc
xor
cmp
cmpsb
incl
add
add
mov
insl
daa
outsb
adc
add
xor
sbb
shll
pusha
jmp
loopne
or
in
subl
inc
jmp
in
out
ja
jg
icebp
xchg
adc
jb
fcmovnb
add
push
adc
in
ret
sahf
ljmp
es
sub
aam
out
ljmp
cmpsb
jl
lock
add
xchg
daa
stc
hlt
jmp
xor
addl
std
lcall
std
call
add
stos
shl
lods
repz
mov
sarl
cld
mov
dec
or
into
cmp
call
std
ljmp
xorb
add
add
add
stc
incl
add
pop
push
add
ss
sti
mov
call
jge
rol
add
mov
add
sub
int3
mov
add
out
rcll
jnp
cs
orl
das
adc
dec
mov
js
lods
outsl
pop
xchg
jae
lcall
shlb
add
add
lds
and
incl
mov
xchg
mov
into
out
lcall
fwait
ret
das
cli
fstps
push
mov
imul
rol
addb
loop
icebp
jae
push
fwait
and
pop
xor
fs
cli
div
inc
add
add
add
ja
push
pop
and
call
cmp
add
shrb
ss
sbb
clc
gs
subl
sbb
ficoml
insl
inc
aam
jb
mov
hlt
and
cmp
sti
mov
push
divl
in
gs
in
jg
adc
adc
inc
dec
jp
sbb
add
mov
in
jne
stos
fnsave
add
add
jge
out
es
insb
push
mov
movsl
mov
sub
stc
mov
jle
in
dec
mov
in
mov
mov
sbb
cmp
sbb
cmp
mov
jno
fidivs
fdivr
sub
jp
push
mov
arpl
out
mov
add
add
cmc
and
xchg
testb
out
jl
add
incl
std
inc
jne
jl
clc
xchg
mov
icebp
add
and
sbb
roll
xchg
push
call
int3
push
add
or
decl
lret
add
imul
and
dec
decl
or
pop
cmpsb
ljmp
add
add
pop
decl
add
adc
roll
loopne
movsl
dec
fadds
lret
mov
sub
push
cli
test
jmp
push
out
dec
sub
xchg
jecxz
add
int
pop
cmp
sub
out
adc
inc
mov
mov
sub
popa
mov
sub
add
add
dec
call
add
xor
mov
and
sub
sub
add
imul
cli
stc
xchg
outsl
inc
icebp
loop
clc
xchg
loop
loope
jg
ret
cs
adc
sub
adc
and
cs
mov
stc
sub
jmp
push
sub
out
test
mov
movsb
xor
add
add
test
fs
add
je
popf
sbb
or
pop
sub
and
dec
inc
shlb
pop
push
gs
sub
jge
sub
jge
jecxz
scas
leave
cltd
int
xor
and
adc
mov
adc
aad
nop
fistps
push
and
xor
push
xchg
add
xchg
add
sbb
jb
in
cs
inc
popf
jmp
add
add
add
xchg
xor
fildll
mov
xchg
and
or
in
xchg
rcrl
cli
mov
sbb
lret
sbb
cmp
sarl
sub
rcrl
setb
xchg
fstl
jae
jb
cld
sbb
cli
jbe
mov
jge
sbb
pop
aam
daa
sbb
sub
sbb
add
add
add
pop
xor
test
in
jae
cmp
push
dec
loop
mov
cmc
mov
push
inc
add
push
cmc
jne
sti
out
cltd
jmp
gs
add
or
repnz
inc
xchg
cmpl
push
push
subb
sub
or
adc
sbb
add
push
xchg
dec
roll
aas
sbb
add
add
add
add
mov
cmp
inc
or
test
xor
popa
push
lcall
push
stc
int
ret
std
out
shl
pop
jmp
mov
out
xchg
andl
std
out
ds
xchg
les
rclb
out
cmpsl
sub
sti
sub
fiadds
les
sub
or
add
push
sub
test
sub
inc
push
jns
xchg
rcrb
sahf
jbe
xchg
fcomps
sub
lahf
jnp
push
stos
cmpsl
out
out
jp,pt
out
add
add
test
dec
adc
repnz
dec
pusha
les
sub
lret
sbbb
in
leave
test
scas
cld
or
dec
fnstenv
jmp
mov
add
sub
std
cli
inc
test
enter
stos
or
js
rcrl
and
and
shr
rorb
mov
stos
call
sub
arpl
hlt
test
cmp
add
add
mov
je
cmp
mov
sub
lea
jnp
stc
mov
add
mov
jnp
sti
cld
xor
adc
jl
cmpsb
sbb
adc
cld
test
out
mov
lea
dec
into
lcall
loop
sub
sub
sub
hlt
xchg
add
push
xchg
aas
add
rolb
push
insb
add
sub
lock
add
add
dec
push
cmp
cmc
push
aam
jns
inc
ljmp
cmp
dec
addl
dec
call
push
fsubl
mov
cmp
lock
call
mov
cmp
pop
push
add
add
lahf
jmp
jne
cld
iret
xchg
jecxz
inc
das
add
dec
repnz
shr
jnp
add
add
add
jno
je
cmpsb
cmpsb
cmp
sbb
xchg
sub
icebp
or
jge
imulb
je
popf
cs
jb
cli
jne
es
cmp
mov
fimull
adc
lahf
xrelease
sub
incl
cmpsl
add
daa
jle
lret
cmp
out
daa
incb
add
add
add
daa
jg
add
sub
jmp
or
mov
mov
loopne
add
mov
pop
ds
push
call
repz
rolb
mov
add
xlat
lcall
mov
add
add
sar
data16
rcrl
jp
or
add
add
add
aam
sub
rolb
test
insl
arpl
add
mov
dec
push
push
and
jno
jmp
addb
mov
ljmp
pop
data16
rcr
mov
xchg
out
bound
mov
in
sub
insb
enter
lods
xchg
ja
roll
add
add
sbb
push
sti
mov
test
mov
and
clc
mov
xchg
test
mov
rol
cli
jl
mov
aam
repnz
jmp
dec
adc
ds
bound
cltd
inc
sbb
add
jl
fldl
pusha
or
cmc
mov
cmp
adc
add
add
add
loope
cwtl
bnd
clc
ljmp
mov
push
add
ret
push
addb
push
dec
dec
repnz
xor
aad
inc
sti
incb
adc
add
add
push
sbbb
cli
je
jns
lea
aad
call
out
pushf
enter
outsl
punpcklwd
xchg
add
aaa
or
xchg
stc
test
cmpsl
inc
mov
cwtl
or
mov
std
fcoml
dec
jle
sub
mov
pop
scas
mov
push
mov
push
imul
cmp
incb
mov
imul
call
in
add
outsl
cs
sub
add
xchg
inc
inc
push
adc
mov
add
sahf
bound
je
mov
inc
push
fs
mov
sbb
mov
stos
pop
das
shlb
lahf
lods
insl
adc
pop
cmp
push
cmc
insl
rcr
adc
cld
rorb
mov
in
mov
in
bound
cmp
into
shrb
sub
call
add
dec
inc
loop
jmp
call
mov
and
mov
mov
ljmp
push
or
inc
push
or
inc
aad
test
sbb
xchg
jl
xor
repnz
cmp
mov
sbb
sbb
add
add
shr
cld
iretw
cmpl
push
adc
test
cld
or
cli
jmp
in
pop
je
add
pop
iret
xchg
notl
jns
sub
nop
cli
call
jge
add
subl
in
pop
incb
icebp
std
jl
pusha
jl
add
add
or
inc
adc
add
add
lret
test
incl
push
cmc
adc
pushf
or
inc
daa
jge
or
push
lcall
clc
dec
cli
adc
test
dec
inc
push
sub
jge
or
test
aam
addl
or
inc
hlt
jbe
cmc
adc
out
cmpsb
inc
or
cmpsb
and
ja
out
mov
sub
add
insl
mov
jmp
add
xchg
es
push
push
adc
stc
inc
mov
xchg
cmp
iret
sbb
ja
pop
xchg
mov
pop
gs
iret
aaa
out
andl
mov
in
es
pop
mov
cli
add
hlt
aas
out
es
lock
inc
or
add
mov
and
add
add
es
pop
imul
std
add
xor
arpl
mov
add
add
mov
std
cmp
adc
test
adc
or
sub
and
push
insl
inc
flds
adc
add
repz
sub
inc
in
outsl
add
add
add
add
add
fildll
mov
icebp
outsl
enter
xor
add
add
xchg
mul
clc
xchg
aaa
movsb
stc
push
subl
add
and
jae
insl
and
negb
dec
repnz
enter
or
dec
enter
jle
clc
mov
stos
or
sub
mov
pop
in
mov
lock
idivl
add
add
add
test
test
xchg
imul
imul
dec
jne
test
push
je
ja
dec
push
jns
xchg
out
cmc
test
imul
jne
lods
cli
jg
add
jl
out
cmc
mov
addb
inc
testb
cmpl
js
cmc
orl
cli
jne
in
insl
add
xor
add
lahf
nop
sti
incl
add
add
fmul
sbb
or
jne
in
jae
lods
add
push
jg
mov
xor
in
cmc
call
hlt
loop
xchg
in
cmc
notb
add
test
adc
inc
xlat
in
adc
out
or
cli
rcll
push
mov
jg
ljmp
or
xlat
inc
mov
es
out
sbb
pop
add
add
add
data16
repnz
fcomi
scas
sbb
add
sbb
enter
inc
out
inc
repz
mov
jne
out
mov
add
mov
movsbl
sbb
sub
in
xchg
in
sbb
cwtd
in
aad
dec
icebp
jmp
repz
shr
xor
insl
roll
add
add
subb
in
fcomps
movsb
push
aad
fadd
or
add
adc
add
or
push
pop
hlt
push
lods
sbb
pop
clc
push
mov
sbb
call
inc
push
cmp
push
lds
xor
sbb
adc
sbb
jp
les
adc
adc
vmwrite
add
add
add
or
aam
add
cmp
add
pop
inc
filds
sqrtps
jg
sub
jae
jg
repnz
push
xchg
sar
pop
xchg
and
dec
jl
cmpsl
pop
adc
stc
testb
push
adc
jmp
fwait
scas
push
addb
push
dec
aad
fidivrl
cli
gs
cli
adcl
add
add
add
add
lahf
ret
icebp
jmp
jne
and
lds
fmuls
cmpsl
ds
clc
mov
or
push
ljmp
inc
jmp
loop
inc
out
cmp
daa
inc
push
dec
push
push
dec
decl
sub
jnp
lcall
ja
and
sub
incl
add
add
fdivr
jg
out
pushl
jae
stos
xor
add
push
inc
inc
push
add
loope
add
imul
and
mov
xchg
inc
aas
out
mov
jae
fstps
adc
or
pushl
out
jmp
sbb
es
inc
mov
sbb
test
add
add
cmp
jmp
gs
lods
xchg
and
bound
jg
or
xchg
and
jno
and
inc
mov
lret
sbb
jle
sbb
cmpsb
pushl
sbb
sub
mov
pop
add
sti
ret
adc
adc
in
push
xchg
pop
or
hlt
pop
push
and
sti
aaa
cli
shr
add
add
add
add
shll
jl
fists
fstps
jecxz
inc
movsb
add
add
ja
or
aas
cli
shr
addl
jmp
push
add
ret
popa
or
or
pop
cli
shr
mov
dec
rol
cmp
sub
sti
jg
push
sti
std
cmc
outsl
mov
sahf
add
jae
add
add
add
and
push
loopne
cli
std
and
out
pusha
or
push
cmp
mov
sub
or
aad
int
js
cli
dec
jns
aaa
push
jmp
stc
ds
mov
ret
jnp
push
cli
insb
pop
frstor
mov
cmp
js
lds
push
xchg
inc
adc
ja
and
xchg
gs
add
add
lock
push
mov
repnz
sbbl
inc
hlt
sbb
sub
add
jg
add
sbb
xor
adc
add
mov
and
incl
movsl
loop
int
cmc
inc
cld
jmp
push
sbb
loop
jns
cmc
lea
inc
push
and
ds
push
push
call
or
cmp
add
add
add
inc
js
cmc
push
or
dec
push
test
pop
add
xchg
in
outsl
add
mov
push
int3
mov
inc
lea
cli
fldt
aas
out
mov
pop
dec
shlb
adc
add
pop
xchg
sbb
sbb
add
cld
sub
scas
dec
loope
outsb
or
loop
inc
jae
imul
out
add
add
ljmp
push
mov
test
cs
cmpsb
jg
sbb
gs
dec
test
push
sbb
ljmp
pop
mov
jno
repnz
scas
sbb
adc
into
pop
mov
mov
int3
stos
lock
cli
mov
sub
test
in
and
mul
add
add
mov
shr
clc
add
sti
hlt
mov
sbb
add
add
xchg
mov
adc
movsl
scas
inc
inc
hlt
add
dec
mov
scas
adc
push
sbb
push
call
adc
in
ret
mov
or
cwtl
add
push
mov
stc
cmc
out
test
jae
je
mov
push
xchg
inc
in
sub
in
out
push
push
cli
sbb
adc
cmp
lcall
add
add
test
mov
mov
pop
out
cli
pop
or
adc
cli
lods
xchg
or
ss
testb
shr
cmp
xchg
or
push
sub
test
fsubr
adc
lods
add
mov
sbb
add
jmp
in
mov
add
xchg
outsb
pop
add
add
add
adc
inc
cli
pop
test
in
loopne
add
add
fadds
cmc
push
scas
ljmp
push
inc
cli
inc
xor
cli
call
push
jae
pop
fcoms
js
inc
cli
addr16
cmp
mov
add
movl
cmc
incl
subl
outsb
aas
or
dec
lea
in
icebp
incl
add
add
rorb
sub
jp
jmp
test
jno
pushl
pushf
add
sbb
sbb
push
scas
sbb
inc
outsl
cmp
pushl
sbb
lds
pop
out
leave
adc
push
mov
jmp
or
add
out
out
push
jnp
push
mul
xchg
scas
loopnew
incl
add
add
rorl
adc
sbb
incl
shl
pop
imul
imul
ret
xchg
inc
in
out
add
add
iret
adc
call
js
mov
jge
or
cmpps
cmc
mov
mov
cltd
xor
xor
and
nop
cmc
loope
fs
mov
pushf
push
popa
add
add
add
inc
xor
out
push
out
cli
jl
cwtl
add
gs
pop
mov
pushf
mov
aam
dec
or
cltd
call
add
fadds
sub
xchg
push
aam
push
xchg
out
fs
std
jno
divb
jge
xor
cmp
sub
sarb
add
mov
into
xor
mov
popw
adc
and
ljmp
sbb
push
std
lea
emms
pop
jae
push
jns
push
add
cmp
add
lahf
jnp
adc
mov
cmc
sub
jmp
cltd
sti
add
ds
mov
dec
mov
dec
call
add
push
adc
add
add
sbb
push
or
repnz
jg
jmp
pop
mov
in
lcall
repz
mov
xor
call
dec
dec
rcrl
or
icebp
jb
dec
jns
je
jmp
and
push
push
add
pop
push
idiv
insb
sti
mov
dec
call
pop
mov
lcall
mov
add
add
sub
mov
outsb
ljmp
fisubrs
and
cs
shlb
sub
pop
std
dec
ljmp
repnz
mov
imul
out
ret
xchg
loope
jae
je
pop
or
or
stc
sbb
xchg
sbb
add
add
add
ljmp
movb
xchg
jmp
icebp
test
xchg
jmp
add
cmp
fwait
test
xchg
call
mov
testl
jp
test
cld
insl
lahf
out
out
mov
sbb
jl
jbe
fistpl
dec
rorl
insl
rclb
add
lods
stos
inc
out
add
add
add
add
add
jmp
sahf
icebp
call
clc
xchg
enter
mov
or
add
scas
fs
scas
cli
push
rorl
stc
jmp
scas
sti
stc
sub
je
cmpsb
cli
ds
dec
stc
or
pop
lea
mov
in
stc
xor
or
stc
push
outsb
mov
adc
add
add
add
ljmp
pop
outsl
lock
hlt
das
call
aaa
rclb
hlt
sub
push
push
push
stos
and
test
aas
mov
push
jb
add
out
or
add
or
call
clc
sbb
jns
or
inc
sti
clc
add
leave
and
call
hlt
js
xor
std
lcall
insl
lcall
add
push
mov
xchg
clc
adc
xor
inc
stos
in
mov
std
mov
sub
js
inc
and
jl
and
inc
cmp
inc
inc
inc
cmp
inc
pop
lahf
mov
mov
mov
call
and
or
out
insl
jnp
icebp
out
xchg
xchg
incb
jnp
xlat
jae
nop
jbe
orb
add
arpl
popa
scas
fldenv
scas
fldcw
adc
je
outsl
mov
dec
arpl
add
adcl
jnp
imul
cmpsb
fs
out
xorl
ret
arpl
mov
roll
cli
xor
mov
inc
push
cli
imul
pop
push
mov
or
add
jae
ret
out
test
call
push
sbb
jns
or
fcomps
or
xchg
jl
call
pop
or
neg
jle
cld
inc
or
je
jbe
and
lret
out
mov
daa
mov
filds
add
stos
push
jge
rolb
sbb
sti
flds
add
add
add
or
dec
xorl
jg
adc
aas
out
xchg
add
jmp
mov
add
adc
cmc
sub
or
aam
idiv
xchg
cmpsl
lock
je
cmc
rorb
in
out
inc
or
pop
jbe
test
div
test
in
add
call
cmp
stc
hlt
jno
inc
jmp
add
or
add
bound
jmp
call
cli
mov
adc
in
idiv
mov
les
dec
add
jbe
push
adc
or
daa
sub
das
int
decl
mov
inc
outsl
fnstcw
jne
bnd
dec
add
fidivl
inc
jmp
idiv
cmp
xor
xchg
fisubl
add
add
add
adc
sub
mov
jmp
into
mov
mov
stos
loope
push
add
xor
bnd
iret
mov
call
jl
insl
or
add
sbb
fsubl
add
push
scas
mov
adc
sbb
subb
out
xchg
cli
mov
nop
or
pop
std
cli
add
add
add
aad
aas
out
jae
pop
xor
aas
push
jne
jg
fisubs
mov
jae
mov
cmc
mov
ss
addr16
or
xchg
xor
mov
out
shll
jae
imul
inc
push
lcall
dec
out
jg
add
add
rcll
add
and
adc
add
add
push
roll
insb
inc
jge
mov
mov
stc
push
lods
push
clc
mov
popa
adc
add
jne
add
test
movl
mov
inc
xchg
add
push
add
lcall
xor
lret
sbb
jp
adc
fdivr
fists
add
add
jg
push
jb
add
ret
xor
and
jne
cmc
ficompl
xor
jp
aas
push
adc
cmpsl
add
push
sbb
stc
jle
xor
sub
jnp
mov
insl
dec
jo
cmc
xor
fdiv
jae
loope
pop
clc
rcll
clc
jb
add
add
add
jl
popf
jge
ljmp
add
mov
jge
or
into
mov
jns
mov
out
xor
add
stos
xor
divb
inc
arpl
pop
mov
repnz
pop
mov
je
lret
std
arpl
inc
cmp
adc
add
mov
add
test
add
add
fildl
pushf
and
test
fwait
jo
aas
add
fs
adc
xor
add
and
fildl
out
lods
sti
cmpsl
std
pushf
sahf
or
aas
sbb
dec
mov
shl
add
push
lret
dec
imul
out
mov
daa
add
dec
inc
add
adc
add
add
out
dec
add
lods
out
nop
add
add
jge
add
inc
and
sub
sub
sbb
inc
out
xchg
ljmp
ds
add
pop
inc
out
xchg
add
mov
mov
inc
out
mov
inc
test
out
push
cmpsl
add
add
mov
add
add
inc
out
adc
add
mov
inc
out
mov
xchg
or
mov
push
roll
pop
add
sarb
out
ds
mov
dec
pop
add
mov
adcl
inc
out
mov
xchg
lea
add
dec
dec
adc
in
xchg
xor
add
add
add
dec
lods
fistpll
test
mov
lahf
movsl
flds
dec
int
cmp
sub
xchg
jo
lods
add
mov
cmp
sub
xchg
nop
les
inc
add
fidivrs
sub
xchg
mov
sub
inc
add
fidivrs
test
sub
add
add
push
inc
add
xchg
lcall
or
fldl
popf
rclb
lcall
sbb
mov
fiadds
popf
pusha
adc
and
add
je
fiadds
popf
int3
adc
cld
lcall
pop
inc
add
inc
pop
popf
or
pop
std
lcall
add
add
rcrl
inc
add
fiadds
pushf
push
adc
jno
add
je
fiadds
out
adc
test
pushf
pop
inc
add
adc
xchg
nop
fisubs
cmp
inc
out
inc
fucom
lods
out
fcomp
cmpsl
std
gs
pop
es
sbb
ss
test
fwait
push
inc
add
add
add
dec
xor
sbb
inc
mov
cmpb
jmp
sbb
ljmp
and
sbb
and
sub
add
xchg
add
add
add
out
mov
aas
lahf
jp
sub
or
inc
out
das
lock
dec
inc
out
add
add
add
sbb
inc
out
out
mov
cld
std
clc
leave
inc
out
fdivs
lock
cs
adc
out
mov
and
ret
mov
call
add
dec
jp
sbb
adc
add
cld
test
xchg
std
call
ljmp
mov
add
add
add
scas
add
inc
or
jmp
mov
ljmp
jmp
pop
pop
cli
sub
add
pop
cld
data16
incw
jmp
add
clc
subb
inc
mov
push
sbb
mov
push
aad
add
xchg
and
add
add
fsts
clc
je
inc
lret
and
xchg
cmc
decl
inc
cld
lea
push
lcall
add
hlt
adc
add
xchg
add
call
addr16
in
pop
push
incb
shlb
push
lret
pop
adc
testl
ja
in
inc
push
incb
add
add
inc
outsb
shlb
in
enter
xchg
jns
pop
fisubrs
push
fmuls
or
mov
push
dec
stc
sti
iret
cmovo
pop
mov
call
and
mov
xchg
sti
imul
testb
xlat
mov
pop
adc
mov
pop
in
testl
xor
and
add
add
cli
jb
push
mov
mov
test
je
add
cltd
cmpl
xchg
add
clc
pop
and
data16
in
out
jmp
stc
dec
adc
jb
xor
iret
push
cmpsl
aam
shl
mov
stc
into
outsb
in
xchg
or
test
clc
ja
data16
pop
je
popa
jae
lea
add
add
das
es
out
jmp
add
add
outsl
push
push
mov
jns
out
out
jge
xor
and
imul
je
jge
add
push
cmp
and
add
dec
xchg
arpl
inc
jmp
leave
cmp
jnp
sub
out
push
add
test
stos
stc
mov
add
add
add
sub
jno
inc
add
xor
rolb
pop
adcl
test
pushf
jmp
fcoms
push
jmp
add
lods
add
aaa
sub
aas
cld
jb
adc
sub
xorb
lldt
sbb
jno
pop
mov
rcll
rol
pushf
pop
add
add
add
add
pop
or
scas
fstps
shlb
lret
pop
push
test
add
add
push
mov
test
add
incl
dec
divl
repz
negl
push
shl
aad
subb
je
cmp
pop
mov
dec
jge
ret
add
cmp
out
push
imul
add
clc
add
xlat
sbb
push
aad
das
rolb
mov
ret
or
xlat
std
mov
clc
stc
mov
xlat
stc
gs
pop
jo
adc
in
lret
subl
cmp
inc
repnz
jns
aad
fadds
rclb
jae
pop
cmp
adc
push
add
add
add
jae
inc
out
xchg
inc
loopne
stc
sub
jnp
cmpsl
lret
pop
clc
out
imul
aas
cli
push
lret
jmp
xor
jmp
mul
jl
jg
insl
es
pop
adc
adc
add
pop
adc
cmp
jne
or
mov
inc
out
push
dec
leave
repnz
xorl
add
add
out
dec
fs
xor
ds
and
fcomps
outsl
cli
out
psllq
push
xchg
ret
popf
jnp
add
push
add
jmp
add
cmp
adc
and
add
imul
push
je
mov
mov
add
xorl
test
add
rolb
mov
test
mov
stos
jg
cmp
enter
add
push
mov
bound
mov
cmp
fiaddl
mov
push
outsl
cmp
push
imul
inc
add
dec
mov
xor
or
mov
loopne
clc
xor
mov
add
add
iret
push
dec
call
bound
clc
push
inc
cmp
push
in
sti
dec
push
jo
jge
mov
imul
hlt
inc
add
mov
jle
mov
imul
cmp
divl
rep
or
repnz
fisubrl
out
push
ja
inc
lods
in
stc
ret
sti
in
adc
cmp
movl
sub
std
mov
in
add
xor
gs
lods
add
mov
pop
gs
inc
xlat
fucomi
ljmp
aad
pop
daa
mov
aam
gs
iret
jmp
fsubp
pop
lds
aam
jns
test
bound
add
pop
adc
inc
aam
sub
clc
mov
or
push
add
add
add
add
aam
mov
mov
pop
inc
imul
and
call
pop
inc
sub
test
mov
mov
cmp
ficomps
cmp
push
xor
das
push
das
in
xchg
fdivrs
jno
das
in
dec
or
dec
leave
adc
adc
in
lods
add
add
add
mov
roll
or
fidivs
rcll
add
cmpb
and
adc
mov
ds
inc
mov
rcll
dec
in
iret
stos
ds
and
jnp
hlt
mov
iret
ljmp
sub
cmpsl
je
leave
ret
insb
adc
xchg
mov
leave
in
mov
add
add
sahf
in
out
leave
push
pop
mov
stc
pop
mov
inc
and
in
or
es
ljmp
stc
add
add
or
xchg
jp
cmp
in
icebp
imul
shll
insl
jne
ljmp
cmpsb
insb
sbb
jge
mov
cld
aas
fsubrs
xor
add
add
push
lds
lea
sbbl
js
js
inc
adc
sbb
dec
push
pop
js
lcall
push
push
dec
add
xchg
loop
inc
xchg
jns
jle
orl
std
jae
adc
adc
out
imulb
adc
mov
add
push
jae
shl
pop
adc
xchg
jmp
jae
stc
xchg
cs
les
add
add
out
mov
cmc
sub
ljmp
pop
shl
adc
dec
stc
jecxz
cmovo
push
mov
stc
icebp
and
ret
cmp
fsts
out
xlat
cmp
jmp
sub
test
pop
fnstenv
std
dec
cmp
mov
add
js
out
xchg
fists
push
add
add
add
adc
and
out
out
jae
lahf
xchg
pop
xor
loope
sahf
loope
mull
or
adc
imul
jecxz
in
mov
sub
bnd
add
iret
data16
jmp
jns
in
xlat
xor
add
repz
out
scas
push
and
mov
add
add
repnz
repnz
adcl
ficoml
fldenv
shlb
inc
push
inc
mov
jns
cmc
push
dec
jmp
ret
loopne
je
ficoml
xor
mov
shl
in
add
popa
test
xchg
lcall
add
add
add
xor
and
xor
dec
inc
clc
cmp
dec
cmp
sub
add
add
inc
jae
mov
add
add
add
dec
clc
ud2
sahf
add
xchg
out
cmp
add
add
inc
hlt
push
int3
inc
clc
push
in
xor
test
or
test
fnstsw
pop
add
mov
xor
add
add
add
xchg
lea
idiv
jmp
adc
fcoms
and
jge
lods
ljmp
sub
push
pop
in
pop
pusha
add
out
sbb
in
jo,pt
ljmp
ja
jle
in
push
mov
add
jecxz
mov
out
jno
push
call
imul
sub
add
add
push
das
in
popf
out
add
jg
ret
sbbl
stc
mov
pop
or
call
or
adc
sub
addl
out
pop
shl
push
mov
fsub
out
add
add
test
adcb
ljmp
loop
out
add
jmp
cmp
inc
add
add
add
andl
mov
fstl
push
and
addb
aas
sbb
sub
jne
ja
aaa
fnsave
ljmp
movsb
ljmp
mov
in
arpl
stc
fdivl
push
lahf
mov
push
xchg
rorl
add
inc
adc
sub
sahf
jl
dec
cmc
mov
dec
push
insb
sbb
dec
sbb
sub
adc
fsts
or
rol
fisttpl
pop
push
add
icebp
push
inc
xor
pop
int3
stc
xor
xchg
sub
popf
jae
loop
bound
add
out
push
xchg
mov
inc
add
add
add
icebp
push
xor
mov
mov
add
fs
fadd
jl
sub
cs
lea
idiv
pop
das
dec
push
js
xor
jmp
int3
pop
cmp
out
or
adc
hlt
adc
test
das
push
shr
icebp
lcall
xor
inc
and
testl
adc
pop
mov
add
add
ret
clc
push
jge
in
call
divl
xchg
shr
stc
aam
cli
incb
push
or
jmp
add
out
jo
inc
fwait
push
stc
sti
mov
hlt
int3
shlb
stc
pop
fdivr
test
and
addr16
stc
arpl
cli
mov
andl
loope
lods
mov
aaa
mov
add
add
mov
inc
loope
mov
iret
mov
inc
jle
sub
cmp
fsubrl
frstor
pop
xchg
push
scas
pusha
sbb
loop
sub
std
call
pushf
adc
add
je
xor
sahf
mov
fxch
push
test
andl
cmp
mov
fstps
out
xor
add
add
add
out
add
std
xchg
inc
out
test
insl
or
ja
insb
sub
push
out
fnstenv
js
clc
inc
out
xor
xor
sahf
fsts
js
lock
aaa
cwtl
dec
add
add
jnp
js
clc
add
pop
xor
xlat
add
adc
mov
stc
out
test
cmp
push
mov
call
add
cmpb
fyl2xp1
push
in
subb
jmp
jge
mov
push
add
mov
inc
fsubrs
add
je
and
pop
mov
imulb
xchg
xchg
int3
sub
cmp
sahf
call
test
outsb
mov
lcall
add
add
pop
inc
or
xor
call
push
gs
inc
in
clc
jbe
cli
outsb
adc
sub
insb
push
dec
xor
mov
in
push
pop
test
int3
int3
ljmp
test
int
ret
add
mov
add
xlat
jl
in
push
sub
mov
je
faddl
in
negl
add
add
mov
jp
sub
adcl
je
fcoml
jae
cmpsb
movsl
cli
sbb
jecxz
mov
stc
pushl
subb
repnz
icebp
xor
mov
push
add
pop
in
dec
adc
mov
clc
fmul
insl
movsb
or
sbb
mov
cs
dec
and
push
inc
sub
push
mov
mov
mov
add
add
loop
inc
cmp
pop
or
and
cmpsb
and
out
ss
sahf
and
push
inc
stc
add
add
ret
mov
cwtl
adc
mov
lods
hlt
out
out
add
inc
dec
std
out
add
ljmp
les
dec
ljmp
push
imul
loop
std
cmc
ret
daa
ret
add
add
add
jmp
in
sub
xor
mov
add
filds
mov
sbb
adc
sub
fstpt
out
add
and
fisttps
shll
dec
jmp
sahf
clc
xor
popa
stc
add
jo
adc
fdivp
pop
or
aaa
mov
xor
cmp
int3
pushf
jo
dec
lcall
add
add
cld
shl
jge
bound
aad
push
push
push
jno
arpl
jb
and
cli
scas
iret
push
lock
arpl
aaa
sbb
clc
dec
cmp
jge
sub
cs
daa
push
push
cmc
les
pop
insb
xor
push
shll
add
add
adc
cli
xor
inc
pop
mov
loope
js
adc
add
add
lcall
incb
add
aam
cli
xor
inc
pop
mov
sub
add
add
push
jo
add
test
les
mov
mov
jmp
add
addl
scas
mov
decl
sub
sbbl
inc
pop
lods
cltd
pop
mov
int3
addb
loopne
add
add
add
jae
or
test
pop
xlat
je
pop
pop
dec
gs
test
flds
test
test
inc
sub
jne
adc
repnz
out
mov
insl
jne
dec
test
and
xchg
and
mov
pop
cwtl
adc
out
dec
inc
out
ds
mov
les
imul
add
call
xchg
insl
incb
add
fs
arpl
add
test
data16
roll
fbld
push
into
imul
add
out
scas
sbb
lds
add
xorb
out
movsb
xchg
faddl
out
imul
ret
jne
in
out
add
ret
roll
add
add
push
mov
push
int3
sti
iret
cmp
jae
pop
dec
idiv
scas
xor
out
add
out
push
ret
cld
add
cmp
inc
les
sbb
in
pop
gs
or
add
sub
lods
cmp
stc
jmp
in
add
jb
cld
bound
dec
push
jb
call
test
imul
roll
je
pop
bound
mov
add
jo
lcall
rcrb
and
xchg
ds
xor
test
out
mov
jmpw
push
cmp
fadds
cmp
add
ds
adc
add
jb
push
cmp
xchg
adc
sub
xchg
and
add
push
add
cmp
std
jns
add
decl
in
add
shrb
push
imul
orl
ss
orb
lret
lods
adcl
sub
add
lods
push
xor
roll
xchg
jle
cltd
add
add
fscale
ljmp
add
push
dec
pop
imul
add
gs
sbb
scas
cmp
cs
xor
sub
mov
mov
pushl
imul
mov
fdivr
jne
adc
out
in
pop
jmp
sbb
test
movsb
rolb
xchg
mov
js
push
inc
cmp
xchg
jmp
add
mov
dec
out
xlat
mov
arpl
jge
add
add
stos
test
push
dec
add
in
orl
gs
cmpb
add
add
cs
loope
ret
cmp
sub
sub
mov
mov
into
out
jae
pop
inc
mov
add
mov
into
adc
or
out
call
std
push
lock
addb
add
add
int
xchg
add
imul
xor
outsb
xor
cmp
stos
loopne
bound
or
ja
std
fldcw
cmp
adcl
inc
dec
add
pop
imul
daa
pop
sbb
test
push
inc
bound
pop
bound
inc
subl
out
cmpsl
leave
adcl
mov
add
add
int
jmp
fnsave
call
push
clc
xchg
call
add
dec
jae
insb
inc
or
jo
pop
mov
inc
add
jle
movsb
mov
mov
adcl
addr16
add
lmsw
add
movsl
push
add
jb
adc
add
push
mov
add
add
push
add
test
add
outsl
add
xor
fs
mov
stc
lods
adcl
add
mov
mov
jp
sbb
push
jle
into
decl
hlt
shrb
xchg
push
orb
or
es
cmp
test
push
sbb
and
xor
add
add
in
out
dec
ja
jmp
testb
and
stos
xlat
add
dec
dec
inc
inc
sbb
pop
aaa
xor
fwait
inc
or
pop
das
inc
nop
pusha
stc
push
icebp
sub
insb
gs
inc
test
lahf
fmuls
ds
out
pop
push
std
out
fdivrs
insb
jne
cmp
xor
mov
stos
add
add
add
out
out
stc
js
jno
das
mov
cli
js
test
xor
cmp
cmp
pop
ds
jbe
add
inc
out
jns
outsb
outsb
dec
repz
sbb
add
mov
out
imul
dec
lret
icebp
jmp
faddl
out
jl
leave
add
adcl
add
jp
out
test
out
add
adc
add
add
xor
cs
out
stc
lcall
dec
jne
sar
inc
inc
jle
out
push
mov
mov
sarl
ds
stos
jecxz
stc
lods
adcl
add
xchg
push
ds
fisttpl
fldcw
pop
xchg
clc
enter
idivb
leave
or
stc
pop
sbb
sub
bound
pop
test
add
add
add
mov
in
add
jmp
out
call
sarl
add
jmp
out
rclb
push
push
jns
cs
movl
sbbl
ds
mov
addl
mov
pop
xchg
push
rcpps
add
mov
je
jns
pop
or
add
add
cmp
xor
or
inc
add
dec
insb
int3
out
jp
pop
jnp
pop
lahf
lods
out
jmp
jns
sbbb
push
mov
lock
aaa
pop
sub
push
enter
enter
mov
cmp
push
xchg
call
fscale
test
bound
outsl
mov
mov
xchg
pop
add
add
add
push
jge
lock
lcall
flds
rcr
std
pushl
add
cwtl
lcall
lret
inc
test
push
sub
or
dec
bound
jmp
lret
mov
mov
cli
aad
rolb
mov
mov
mov
mov
imul
add
std
pushf
mov
add
add
xor
pop
sub
inc
pop
jo
xor
imul
xchg
mov
aaa
aas
jge
pop
pusha
push
push
jl
pop
xor
jno
out
add
push
enter
imul
push
sahf
adcb
cmp
xor
enterw
arpl
enter
pop
imul
aas
pop
popf
out
jmp
push
and
add
mov
stc
xchg
lock
mov
les
imul
pusha
out
pop
call
dec
arpl
inc
inc
cmp
mov
addr16
call
and
fidivs
jg
repnz
call
add
imul
add
call
push
clc
mov
push
add
add
in
lds
out
jo
add
push
mov
xchg
inc
cwtl
add
add
enter
popl
stc
call
push
xor
push
lds
mov
add
add
add
mov
mov
jp
fnstsw
data16
push
jle
into
add
mov
push
add
clc
jge
roll
mov
xor
xchg
add
add
add
lret
sub
dec
je
mov
orl
adc
popa
xor
xor
addb
inc
pop
out
pop
cs
cmp
test
dec
call
adc
int
xor
cmpsb
lret
scas
mov
test
popl
mov
insl
jl
ss
ss
dec
popa
or
fdivr
out
fidivrl
js
addr16
pop
add
add
add
dec
or
pop
inc
insb
test
fscale
shrb
add
out
flds
test
or
sbbl
movb
sbb
mov
in
add
mov
jae
data16
fidivrs
das
inc
jns
shlb
ja
test
xchg
xor
pop
and
les
jl
add
add
add
out
add
xorb
jo
out
shrb
inc
stc
fld
pop
orl
xor
push
jmp
add
xchg
test
call
cld
add
pop
mov
add
out
add
insl
out
out
jne
jo
add
sbb
out
call
sbb
loope
jnp
adc
and
add
fadd
test
pop
xor
xor
jnp
xchg
test
jge
cli
jp
mov
fcomi
push
and
sbb
scas
cmp
in
fsts
mov
enter
daa
push
into
insb
inc
push
pop
push
jl
icebp
pop
cmp
mov
ja
out
call
loope
test
add
add
add
popf
push
add
xchg
dec
int3
cli
popf
ja
stc
call
shlb
jle
inc
std
decl
std
cmpb
ds
mov
std
mov
test
or
mov
push
xlat
add
cmp
cmc
dec
decl
pushf
add
leave
add
mov
sub
cmpl
add
add
adc
adc
pop
into
testl
out
cmp
pop
adc
push
mov
out
mov
or
push
stos
mov
in
sbb
push
mov
test
js
insl
out
xchg
push
lret
test
sub
out
fiadds
pop
inc
xor
add
cmp
mov
int3
mov
insl
mov
in
gs
push
fnstsw
lret
ja
cli
mov
je
and
ja
sbb
push
sbb
out
mov
in
addl
data16
out
mov
push
repnz
and
mov
add
out
mov
jp
add
add
cmpsb
dec
and
add
sub
icebp
mov
mov
inc
pop
and
lret
xlat
mov
out
mov
stos
mov
ret
cld
fcmovbe
mov
cli
stc
ljmp
ret
cmp
test
xchg
pop
stc
xchg
movsl
pop
mov
xchg
add
sbb
lods
test
add
add
dec
push
xorl
xor
loopne
cmp
xchg
dec
push
bound
add
out
fidivrl
daa
fidivrl
std
imul
jge
ljmp
in
pop
push
mov
mov
jg
jmp
lods
xor
adc
cmpl
cmp
leave
mov
mov
aas
xor
add
add
xchg
add
add
push
and
pop
lret
or
push
pop
test
idiv
clc
out
or
int3
int3
or
int3
jb
in
mov
dec
xor
push
mov
add
or
jne
xchg
js
jl
or
aam
pop
mov
or
and
mov
idiv
sub
mov
add
cmp
pop
int3
add
sbb
shlb
add
scas
int3
jae
or
mov
adc
push
sub
and
mov
stos
enter
lods
andl
jnp
adc
stc
pop
daa
rorb
fs
and
ret
push
mov
repz
stc
add
mov
add
add
add
jmp
dec
push
mov
add
test
sbb
inc
es
add
add
jge
push
xor
sbb
adc
xor
pop
xor
js
add
add
pop
imul
divl
mov
cs
out
out
pop
outsb
ficoms
inc
decl
add
add
sti
xchg
add
iret
inc
jp
lock
inc
fimull
idivl
sub
cmp
test
xor
test
add
jmp
inc
adc
ljmp
bound
lock
hlt
sarb
cmpl
jbe
push
aad
dec
xor
add
add
add
inc
dec
dec
jmp
insl
lds
cmp
test
cli
dec
call
shr
jl
push
cmpl
adcl
orps
scas
inc
fnstcw
add
cmpsl
std
add
add
std
adcb
shlb
dec
mov
push
xor
mov
in
mov
mov
add
add
cmp
js
xor
or
js
push
mov
test
das
std
insb
or
inc
add
push
adcb
cmp
inc
dec
mov
call
ss
or
lods
orb
dec
adc
aaa
mov
addl
dec
cmp
out
pop
int
cmp
jl
into
out
fadds
add
add
out
test
in
imul
and
jne
sti
subb
std
out
rorb
cli
fdivrp
sbb
or
out
ljmp
mov
pusha
adc
in
insl
pusha
cld
xchg
sub
insl
sbb
or
int
jg
scas
js
out
int3
or
sar
gs
push
repz
add
add
add
test
decl
imul
xor
mov
pushf
lret
add
jo
out
clc
mov
out
test
outsb
cmp
mov
out
insl
sarb
scas
inc
test
das
or
hlt
insl
xchg
out
out
pop
push
shrb
cmp
shlb
out
scas
js
add
add
add
sub
inc
hlt
mov
out
dec
clc
mov
scas
sbb
dec
scas
add
fiadds
add
xchg
sub
cld
test
outsb
xlat
or
std
jl
in
rclb
stc
jmp
iret
pop
add
test
inc
jmp
jo
clc
test
or
lcall
xchg
loop
aas
stc
add
add
add
sub
dec
add
add
xor
mov
add
or
sub
loopne
sub
jnp
popa
cmpl
in
xor
stc
fcoms
jge
pop
add
add
adc
mov
int
inc
test
or
push
ret
adc
test
inc
jbe
rsqrtps
add
jp
add
cld
pushl
add
add
mov
inc
sbb
cmp
or
add
and
dec
mov
stc
mov
aas
adc
incl
jecxz
pop
fstpt
push
jnp
push
in
int3
dec
sbb
fs
dec
inc
add
sbb
sbb
sub
adc
mov
jnp
cmpsb
push
test
add
add
stc
dec
add
xor
mov
mov
mov
push
cmpsl
aad
ror
fisubl
fldl
inc
sahf
mov
add
dec
out
xchg
into
mov
jne
mov
adc
sub
in
jbe
test
mov
pop
dec
sbb
test
test
jbe
sub
sub
add
or
gs
add
adc
ljmp
inc
sub
imul
fistpl
divl
insb
shlb
push
add
out
mov
loope
les
fisttps
incb
in
out
sub
mov
es
sbb
xchg
sbb
push
jg
add
add
add
mov
popf
hlt
aas
mov
add
jbe
adc
icebp
add
aad
xor
jge
push
add
insl
fisubrs
xor
sbb
xchg
adc
bound
jo
inc
subl
mov
xchg
loope
inc
fldln2
mov
jmp
pop
jb
loope
mov
sbb
add
add
pop
mov
jne
sbb
sbb
dec
and
add
add
sub
cs
jg
adc
daa
call
incl
push
or
push
test
cmp
jb
addl
xchg
rclb
imul
std
orb
shll
adc
aam
add
add
add
clc
xor
fwait
cmpsb
dec
inc
dec
dec
sbb
int3
outsb
add
inc
xchg
out
cmp
push
xlat
fs
xchg
addb
dec
clc
aam
or
out
loop
add
cmpsl
std
jae
cs
hlt
jne
mov
push
lahf
jg
inc
out
cmpsl
xchg
xor
gs
stos
inc
dec
xlat
bound
add
fwait
aas
jle
scas
cmpsl
or
mov
cmp
shl
std
out
push
inc
adc
mov
push
and
jle
mov
or
pop
mov
cmpsb
jae
flds
ja
cmpsl
subl
xchg
add
pop
outsb
dec
scas
jmp
in
lcall
and
test
add
add
add
test
cmpsl
out
xor
mov
xor
add
add
mov
push
xchg
push
add
mov
jno
out
mov
add
addl
loop
jge
out
xchg
insl
inc
into
test
and
add
add
add
out
pop
add
add
add
add
add
add
adc
in
stc
xorl
add
lods
add
jno
or
in
fnstsw
in
cld
movaps
hlt
jb
loopne
lods
push
add
or
dec
add
xor
adc
inc
xor
bound
xchg
inc
inc
bound
test
je
jbe
hlt
ret
outsb
ss
adc
add
add
add
add
pop
std
orl
push
clc
bound
cltd
push
add
insb
addl
aas
cld
add
jge
clc
dec
cmp
push
mov
icebp
inc
pop
mov
mov
add
inc
adc
add
test
adc
fwait
pop
add
add
leave
or
add
add
xlat
add
mov
push
cld
dec
mov
mov
add
xchg
adc
or
fstps
push
fucomi
or
sar
mov
pop
mov
xchg
pop
inc
xor
xchg
std
inc
xchg
sub
aam
movsl
mov
xchg
std
test
and
sbb
repz
std
incl
add
add
out
push
add
xchg
cmp
lret
addl
jb
add
out
cmpsb
outsl
call
out
ds
in
xchg
adc
fsubrs
fsubrl
das
lret
fstps
out
cltd
add
jne
cmpsb
ret
xchg
cmpsl
mov
out
add
ret
out
ret
out
imul
adc
out
add
add
add
sub
add
test
out
add
add
scas
and
or
inc
decl
push
ljmp
cld
jmp
jb
out
add
jg
pop
in
sti
jmp
out
push
add
and
or
out
leave
inc
add
in
add
ljmp
jmp
add
add
add
lods
add
add
jmp
aaa
cld
bound
mov
or
test
shrb
sbb
mov
mov
orl
test
cmc
mov
repnz
sub
sub
in
sub
push
jmp
jp
stc
cs
or
scas
add
lds
add
add
std
incl
pop
cli
cwtl
push
add
xchg
test
add
ja
or
sbb
sbb
or
add
sti
call
fadd
jnp
dec
xchg
ljmp
sahf
jl
jae
pop
test
call
sbb
incb
imul
push
lahf
std
xlat
xorl
add
add
ret
mov
add
xor
loopne
adc
lock
fucomi
stos
jge
int3
sti
xchg
pop
mov
stc
sbb
out
xchg
mov
jmp
inc
xchg
int3
add
and
dec
jb
ret
push
les
pop
sahf
les
les
icebp
and
out
xchg
xchg
add
add
cmp
push
clc
jne
stos
dec
mov
xchg
std
test
add
cld
xlat
lods
pushl
adc
cmp
ljmp
and
adc
data16
add
jg
cli
out
out
in
xor
mov
outsl
dec
xchg
add
addl
into
push
shr
add
add
add
add
imul
insl
leave
shll
addl
daa
pop
push
sub
pusha
inc
mov
test
addl
test
iret
add
add
mov
in
add
lds
aaa
in
jo
add
movsl
outsb
lret
outsb
sub
jmp
in
add
aas
add
add
add
test
int
das
es
push
clc
ljmp
test
ret
in
popa
push
sub
jge
push
add
test
sbb
ljmp
outsb
cmp
out
inc
add
add
and
in
add
bound
push
mov
xor
repnz
add
add
test
decl
insb
mov
jnp
dec
cmp
add
ss
push
rolb
incl
cmp
sub
cld
decl
dec
and
pop
test
stc
fidivrs
push
add
aas
fs
cmp
add
decl
add
add
add
add
pop
orl
sbb
out
and
jg
fld
call
ja
mov
test
out
jl
aam
or
sti
dec
xchg
ja
rcrb
ljmp
mov
add
cbtw
std
out
or
xchg
loopne
jne
test
loope
mov
rcr
jp
das
mov
daa
jge
add
add
inc
cmpsl
xor
das
xor
andb
add
std
jp
mov
scas
inc
xchg
out
xchg
jns
les
clc
loope
andl
repz
out
out
add
fiaddl
fiaddl
imull
mov
movsl
pop
shrl
leavew
idiv
push
add
ret
cwtl
jns
stos
dec
add
add
add
cmp
mov
shll
js
out
add
js
cmp
fwait
add
rol
out
push
ljmp
dec
jp
mov
lea
out
mov
mov
pop
jl
flds
test
in
out
fisubl
add
imul
mov
sahf
aaa
cld
bound
ds
clc
cld
inc
inc
in
pop
add
add
add
test
int
sub
or
and
hlt
sub
mov
ds
aas
out
mov
cld
jmp
in
add
jg
test
int
lret
sub
or
and
dec
clc
add
push
test
addl
inc
stos
mov
idiv
mov
add
add
xchg
and
hlt
sbb
in
xlat
decl
dec
cmp
fidivs
enter
add
jp
jae
sbb
in
xchg
and
or
push
mov
loope
dec
add
jge
std
insb
in
or
add
fnsave
inc
mov
push
testl
jmp
xchg
std
out
ret
add
add
add
xchg
std
mov
or
out
sbb
insb
addr16
jl
mov
xchg
std
dec
arpl
dec
mov
cld
jmp
xchg
dec
mov
push
icebp
dec
out
xchg
jle
out
inc
fdivs
clc
xorb
stc
jne
sbb
ds
std
dec
jnp
dec
push
pop
das
cmp
xchg
add
out
xchg
jbe
rolb
jg
add
add
add
mov
jle
out
jo
es
insb
add
scas
aaa
jge
add
jne
lods
das
stc
aad
out
add
xchg
stc
cli
add
add
cli
stc
aam
jno
push
add
mov
movsb
sti
jb
aas
jp
xchg
pusha
cmp
mov
into
mov
push
jno
jmp
imul
add
pop
lods
sub
out
sub
mov
adc
inc
vmwrite
fcompl
push
mov
js
add
enter
notb
dec
mov
test
add
jmp
in
add
xchg
out
icebp
add
in
add
cmp
andl
into
pop
test
addr16
dec
jb
mov
add
lods
cmpsl
or
inc
enter
aad
xchg
sub
stc
push
popf
add
jno
add
in
or
bound
loopne
lret
xor
push
or
rolb
loopne
sub
add
insl
dec
and
mov
leave
mov
aam
test
add
test
pushf
jle
pop
add
mov
loope
add
add
add
pop
orl
fsubp
mov
add
shll
sbb
mov
inc
hlt
push
jnp
add
sbb
mov
popf
scas
dec
add
cmp
psrlw
sti
sarb
pop
pushf
add
add
sub
cld
out
mov
std
or
enter
outsl
aaa
cld
add
add
add
jnp
dec
cmpsl
outsl
in
pop
insb
jmp
test
int3
push
adc
in
outsb
cld
xchg
fistpl
std
and
xchg
fadd
call
in
insb
cltd
xor
js
enter
shl
add
xchg
std
pushl
ret
scas
outsl
out
rclb
add
jl
add
add
and
cmpsl
idivl
arpl
fisttpll
stos
add
add
add
ljmp
lds
jecxz
out
aaa
popf
xchg
ret
out
out
cmpsl
enter
dec
inc
lcall
or
sbb
add
or
fidivrl
sub
std
add
add
lahf
subb
sarb
in
add
add
add
out
add
stos
add
jg
add
add
push
in
and
into
loopne
push
cltd
std
rolb
dec
and
fwait
stc
jmp
popf
dec
sbb
lcall
add
inc
xchg
idiv
call
in
add
call
ret
jb
xchg
jb
mov
add
add
stos
pop
out
out
jo
xchg
xor
push
popf
add
inc
int3
std
call
xchg
bound
out
add
or
iret
sub
call
fimull
mov
sbb
or
cwtl
scas
leave
repz
cwtl
jle
push
decl
mov
push
orl
imul
mov
enter
call
ja
inc
in
movsb
mov
hlt
push
ja
add
sbb
addl
scas
dec
jmp
cmp
nopl
outsb
push
out
es
out
mov
std
or
jl
popf
or
stos
xor
sub
lds
cmp
inc
push
mov
insb
incl
add
add
pop
test
int3
dec
getsec
in
push
xchg
push
pushf
or
sar
pop
xor
movsb
test
out
imul
in
lahf
xor
inc
push
enter
int
adc
mov
jmp
ret
stos
imul
and
adc
add
movsl
dec
inc
and
pop
inc
test
or
push
cmpsl
add
add
add
mov
in
out
test
idivl
shrb
fidivrs
imulb
and
dec
stos
incb
out
jae
das
subl
or
out
insl
jo
add
or
daa
dec
xchg
jp
lods
xchg
ret
mov
adc
xor
out
out
lods
inc
fcmovu
dec
push
ret
loope
mov
mov
add
add
add
clc
call
jge
or
xchg
stc
jmp
out
test
rcr
mov
scas
cltd
adc
push
rcll
xchg
stc
jmp
sub
jle
cmc
out
dec
sub
lea
ss
ljmp
dec
mov
dec
inc
jo
mov
test
repz
add
test
faddp
jb
inc
xchg
inc
hlt
bound
xchg
xor
mov
sbb
hlt
in
push
orl
pop
addl
inc
inc
or
shrl
jp
orl
push
inc
add
rorl
lahf
sbb
inc
dec
into
xrelease
jne
in
fdivrl
add
aaa
add
mov
add
add
add
cmpsl
cli
incl
jne
pop
mov
push
add
mov
je
dec
adc
inc
mov
out
mov
je
pop
and
add
sahf
repz
call
xorl
sahf
test
ljmp
sbb
sub
cld
out
mov
dec
out
cmpsl
std
or
movsb
dec
mov
push
ret
dec
clc
in
fistpll
into
sbb
test
or
inc
add
add
add
dec
or
call
mov
sbb
dec
call
adc
cmpsl
xor
mov
cmpsl
std
in
jg
cmp
cmpsl
mov
adc
clc
ja
sti
xchg
cmpsl
mov
add
into
mov
sbb
fsub
mov
xchg
lahf
xlat
push
mov
push
add
out
push
add
add
add
lds
cmp
lods
or
inc
out
and
or
imul
out
out
addl
out
add
xchg
xor
add
jl
add
add
pop
sbb
xchg
mov
imul
jge
or
cmc
jae
add
add
add
or
xor
pop
shrl
add
jmp
out
or
popa
dec
lcall
inc
cmp
icebp
js
call
movsb
pop
jl
bound
jnp
in
adc
cmp
xor
cmp
jmp
daa
add
in
add
and
xchg
stc
jmp
add
popf
add
jo
testl
mov
mov
test
pop
inc
adc
out
cld
sbbb
outsl
cmp
xchg
test
mov
adc
test
adc
adc
sbb
sti
jae
cld
cmp
mov
call
test
clc
adc
pop
add
add
push
mov
add
add
add
xchg
pop
xchg
pop
add
push
movsb
aas
add
rcr
sub
push
adc
test
sbb
add
ja
mov
mov
and
out
notb
pcmpeqw
test
add
int3
cmp
movsl
xchg
adc
push
dec
or
imul
movsl
jns
call
ja
cmc
xchg
mov
repz
fiaddl
add
add
add
cmpsl
std
ljmp
psllq
inc
or
test
pushl
pop
icebp
inc
dec
sub
insl
mov
or
std
dec
test
fisubrs
std
in
js
push
ljmp
ss
mov
or
jmp
flds
loop
dec
xchg
push
inc
ss
fwait
out
pop
aas
jae
mov
out
pop
dec
cmpsb
xor
add
imul
sahf
mov
sub
jae
cli
out
add
jmp
add
in
mov
add
ljmp
cmp
sbb
enter
or
or
dec
icebp
add
inc
icebp
cli
add
icebp
inc
aam
push
sbb
incl
or
lcall
add
jmp
and
lcall
add
add
add
aam
xchg
aam
and
int
mov
int
mov
int
arpl
int
lods
xchg
int
dec
lret
inc
sahf
int
push
sahf
int
in
int
jmp
int
xor
mov
int3
pushf
fs
push
bound
stc
sbb
int3
test
out
add
cmp
je
fdivrs
xor
les
add
add
xlat
jns
sub
outsb
leave
adcl
dec
sbb
sub
rolb
sbb
add
mov
pop
cli
ret
outsb
idiv
cmp
push
ret
int3
int3
jmp
int3
int3
sti
mov
int3
or
in
push
or
sbb
popa
pop
bound
or
push
push
shl
rclb
adc
mov
or
add
mov
mov
add
dec
dec
dec
add
dec
mov
adc
in
mov
popa
mov
adc
add
cltd
std
out
xchg
sub
mov
dec
movsl
mov
das
pushf
jge
pushf
add
xchg
mov
adc
sbb
sahf
or
ljmp
add
add
add
xchg
dec
cmp
in
xchg
std
out
push
mov
and
enter
enter
mov
mov
add
mov
lds
out
add
add
ret
jp
cwtl
mov
jmp
inc
test
cwtl
test
mov
or
test
out
pushf
subl
lea
lods
cld
lea
add
add
add
pop
xchg
stc
das
subl
mov
fwait
sub
jecxz
scas
adc
mov
sub
cmp
popf
mov
stc
call
in
add
inc
imul
jge
jmp
mov
sbb
add
xchg
rorb
add
pusha
mov
jge
add
mov
cli
mov
cmp
push
xchg
test
pusha
inc
cld
jo
fs
sub
les
jbe
cld
fwait
push
psubd
je
in
mov
or
icebp
push
add
mov
test
icebp
add
call
rolb
add
add
jle
cld
mov
testl
or
jne
addl
pop
sub
jo
jnp
sbb
mov
push
jge
cli
stc
test
shl
sbb
testl
push
or
mov
leave
jp
test
aam
std
loop
testl
adc
out
pop
xchg
addl
add
add
push
sub
stc
jne
add
and
jae
ja
lods
test
cmpsb
mov
clc
xchg
adc
pop
ja
incl
push
mov
lret
out
cltd
std
out
bound
jmp
cmp
shl
ret
insb
ror
aam
int3
mov
dec
mov
insl
int3
fmuls
add
add
add
movlps
sub
cmp
push
mov
lods
xchg
mov
add
jp
xchg
mov
daa
por
mov
cltd
into
mov
imul
lods
add
mov
stos
or
test
xor
insl
mov
repnz
addr16
pop
mov
add
ja
pushf
jae
sldt
add
add
ljmp
xchg
std
movsb
jo
out
jge
or
pop
subl
add
xor
add
bound
xchg
outsb
int3
mov
or
add
jmp
lods
test
xor
test
mov
push
add
in
and
jb
push
in
jo
nop
in
add
add
add
in
pusha
mov
test
sub
pushf
test
sub
shlb
in
mul
jmp
dec
add
in
add
jmp
stos
test
add
std
aaa
call
add
adc
xlat
lock
inc
fwait
rorl
cld
inc
or
xchg
int
rolb
adc
adc
dec
lea
add
add
xchg
imul
dec
xor
insb
adc
or
add
add
test
jae
pop
sarb
pop
cltd
adc
or
mov
jecxz
inc
jl
call
outsl
stos
ds
dec
outsb
outsl
or
inc
hlt
cmp
lea
sbb
std
clc
add
xchg
cmp
add
add
add
movsl
jge
xchg
xor
and
inc
mov
insl
test
dec
gs
add
or
mov
inc
outsl
sub
sub
stc
dec
cltd
std
xchg
and
call
out
sbb
add
fisttpll
test
les
cmp
out
mov
dec
xchg
adc
add
add
aad
bound
and
mov
std
ljmp
test
lahf
mov
cmc
outsl
mov
cmp
pop
pop
repnz
add
add
add
sti
adc
leave
push
add
xchg
out
out
cltd
cmc
subb
push
mov
sarl
nop
outsb
dec
sbb
out
and
faddp
add
add
add
mov
cld
jo
jnp
jge
mov
jno
mov
xchg
add
mov
in
adc
xchg
test
rorl
lock
movsbl
add
mov
in
add
jmp
cmpsl
test
add
mov
add
push
in
subb
adc
inc
cmc
add
push
jb
add
add
mov
test
jl,pt
in
xchg
push
lock
push
xor
das
ss
movsl
lds
adc
clc
and
cli
jg
repz
add
iret
sti
jae
jns
jg
arpl
cltd
aam
or
dec
cmp
or
xchg
test
mov
lock
jle
inc
outsb
outsl
or
inc
hlt
cmp
pop
addb
add
add
icebp
or
push
outsl
or
mov
push
rolb
push
jl
and
jne
out
push
pop
lret
jae
add
test
jge
popa
jb
out
aam
push
gs
jnp
push
mov
loope
enter
incl
jnp
mov
fidivrl
jge
stc
add
add
add
fsin
subb
mov
xlat
push
mov
imul
fcompl
movl
repnz
or
stc
pop
sbb
cld
mov
mov
testb
repnz
or
stc
sub
or
out
xchg
cmp
dec
nop
test
add
xor
aam
out
jae
xrelease
add
add
scas
repnz
test
fwait
cld
xchg
inc
mov
imul
orb
test
xchg
xor
and
ss
pushf
mov
jl
jbe
sti
mov
sub
jae
loop
das
icebp
pop
mov
cltd
idivl
mov
imul
cmpsl
add
add
add
xor
jne
xor
stc
stos
cmpsb
or
mov
xor
inc
test
insb
mov
test
stos
xchg
add
sub
jl
mov
mov
xchg
les
int3
xor
scas
mov
mov
add
sahf
in
sub
add
cmp
xor
cmpsb
xlat
daa
pop
inc
lds
pop
ljmp
dec
add
add
dec
push
icebp
and
std
jp
add
je
jle
ljmp
inc
xorl
cmpsl
sti
mov
incl
test
mov
push
inc
adc
push
mov
nop
ljmp
popl
mov
add
add
jbe
mov
call
add
pop
sti
or
addl
dec
nop
test
mov
inc
inc
add
pop
sbb
cmpb
ret
xor
inc
out
sbb
push
loop
stc
and
movl
mov
jp
cmp
push
sbb
jae
sbb
insb
mov
test
mov
ja
add
add
add
xor
jae
sbb
insb
and
push
jae
mov
stc
gs
int
cmp
outsl
clc
jns
jg
loop
ret
je
ljmp
ret
jge
test
add
clc
dec
outsb
add
add
add
aaa
mov
jne
lret
movsb
outsb
inc
insl
mov
mov
add
add
addl
hlt
in
sub
ss
aam
dec
jo
orb
mov
subb
insl
inc
roll
xor
js
xor
shrb
xchg
mov
inc
mov
add
js
xor
rcrl
push
test
mov
sub
insl
inc
jae
rorl
test
mov
jb
add
add
je
gs
lods
out
add
cltd
ret
xlat
inc
dec
bound
mov
js
lods
out
add
xchg
imul
dec
jb
push
jge
out
add
data16
ret
xor
das
bound
push
jne
jge
out
add
ss
sti
pusha
imull
movsb
sub
add
add
stc
sti
insb
cltd
pop
orl
add
mov
cmp
les
sbb
cld
je
sbb
orl
jg
je
decb
aaa
xor
das
sbb
mov
rolb
orl
mov
je
dec
stos
insl
jne
or
add
sti
je
or
imul
add
add
or
jnp
xor
je
sbb
sti
mov
arpl
push
ss
push
pop
cwtl
fidivrs
jnp
shlb
jl
incl
jge
add
es
cmc
loopne
mov
out
cmp
push
mov
cmp
sub
mov
xor
and
out
mov
cld
add
add
add
popa
jl
xchg
push
jns
stc
in
mov
shrl
jmp
imul
hlt
sbb
sbb
aas
lcall
pop
insl
std
ljmp
sub
repnz
sbb
cmc
jmp
lods
jl
add
push
add
lds
out
out
xchg
aam
int
xor
mov
test
add
add
xor
ret
lcall
jbe
js
jge
push
mov
cmpsl
pavgb
call
push
cmp
add
lock
jge
imul
seto
add
in
adc
xor
daa
test
ret
in
add
add
add
inc
je
lret
je
out
sbb
push
inc
sbb
inc
call
push
add
xchg
and
inc
fldenv
movsl
jg
stc
push
add
fcoml
jb
xor
out
dec
sbb
imul
fucomp
sbb
das
jne
add
test
add
add
addb
ds
enter
pop
sbbb
std
jae
faddl
mov
clc
les
push
daa
mov
je
cmp
addb
jne
pop
or
ret
push
das
push
mov
push
dec
push
das
pop
xor
adc
inc
je
push
mov
es
stc
jne
sti
je
add
add
add
mov
dec
test
daa
dec
mov
dec
push
out
into
mov
mov
mov
outsb
and
aaa
and
sbb
adc
inc
jle
imulb
or
cmc
mov
push
jmp
jo
xchg
repz
or
sub
add
mov
xor
pop
shl
push
gs
mov
int3
xor
add
add
loopne
mov
cmp
push
cmp
add
push
sbb
cli
sbb
data16
sbb
out
fcomi
mov
bound
into
add
out
cmp
testb
add
mov
sbb
ljmp
out
mov
outsb
es
add
add
xor
add
add
imul
xor
out
add
add
mov
out
cmp
test
test
cmp
jg
pop
jnp
orl
sub
ljmp
mov
inc
add
gs
loopne
sbbl
mov
cltd
jbe
cmpsl
int
inc
int
mov
push
stc
xchg
shlb
aaa
mov
add
cli
cmp
js
jmp
push
sbb
roll
outsb
inc
add
mov
xchg
stc
insl
fistpl
out
test
add
jmp
in
add
jmp
jle
push
bnd
ljmp
add
add
cld
popa
add
add
xchg
fadds
add
add
add
jge
add
push
repnz
test
xor
jge
and
les
xchg
pop
bound
push
imul
add
ror
int3
adc
lret
int3
pop
xchg
mov
jle
or
sub
cmp
js
test
mov
inc
cld
xchg
pop
add
add
call
addl
add
add
out
xor
dec
aas
sub
adc
std
jl
dec
mov
inc
bound
jecxz
daa
mov
in
sti
cmp
dec
call
insl
add
test
movsl
jns
mov
add
fwait
stc
pop
or
inc
out
dec
call
insl
add
cmp
inc
fsubp
enter
dec
call
add
jg
insl
cmpsb
or
sub
sar
cmp
outsb
push
icebp
xchg
adc
inc
adc
dec
inc
subb
jp
xlat
xchg
out
add
cmp
inc
rcll
sbb
imul
jg
or
incb
sub
xor
push
lea
or
fwait
add
inc
or
add
xchg
mov
jae
aaa
jae
fbld
jg
pop
insl
inc
push
pop
fwait
inc
shrb
lret
xchg
mov
add
cmp
loopne
mov
insb
mov
push
bound
mov
ret
in
inc
je
push
stc
adc
dec
gs
stc
aad
jge
fdiv
and
adc
jmp
add
in
pop
add
jmp
mov
jae
cs
push
outsb
jl
fldenv
sti
mov
mov
cld
subb
jl
outsb
pop
sub
jbe
loopne
in
pop
insb
xchg
in
sbb
mov
mov
ja
inc
add
xchg
jmp
pop
out
ret
fistpll
mov
dec
cmp
lea
cmc
dec
mov
pop
icebp
add
add
add
repnz
les
mov
imul
xchg
mov
jne
ss
test
std
pushl
mov
mov
cld
pop
lea
sub
jmp
add
mov
testb
roll
aam
call
push
xchg
pop
std
incl
pop
mov
ja
or
add
add
add
loopne
out
adc
pop
lods
sahf
dec
int3
mov
out
adc
addr16
or
sub
test
inc
sbb
add
lods
loopne
pop
std
xor
push
or
sbb
addr16
lods
data16
add
jp
mov
data16
dec
jne
or
push
std
sbb
test
aas
or
add
add
out
loop
or
sub
iret
repnz
add
repnz
hlt
jmp
add
cmc
loopne
pop
dec
out
add
imul
jnp
test
add
mov
aad
imul
int
adc
add
push
cmc
adc
sbb
and
sbb
pop
add
mov
ljmp
out
fiadds
add
add
add
test
out
add
aad
mov
or
xacquire
out
ja
add
sbb
insl
in
cmp
ljmpw
andl
add
inc
add
in
insl
inc
sub
jmp
cmpsb
test
add
mov
mov
in
add
loop
add
outsb
inc
adc
sub
add
add
in
add
jb
adcl
imul
jb
jge
jmp
mov
inc
or
stc
jmp
in
ljmp
mov
or
sbb
ds
jne
mov
setnp
pop
xchg
add
cli
and
add
mov
or
add
add
pop
sti
mov
add
or
orb
dec
fidivl
ljmp
ret
sbb
pop
add
dec
stc
hlt
jmp
ljmp
sub
jne
cld
mov
popa
mov
adc
insb
fdivrl
or
cmpsl
aam
inc
aas
std
incl
movb
push
loopne
outsl
pop
jg
out
push
sub
repnz
add
out
xor
jge
pop
jmp
jne
rorb
jae
faddp
ja
xor
jae
out
notb
add
xchg
xor
jae
jmp
inc
out
fmulp
add
test
push
adc
cltd
cmp
cld
ret
outsl
and
push
push
int
call
add
pop
add
out
add
mov
add
add
out
adc
out
sub
adc
stc
stc
add
and
into
add
insb
data16
std
add
sbbb
lret
lret
xchg
ds
inc
enter
js
xlat
fwait
cld
out
cmp
mov
cmp
inc
stos
cmp
dec
mov
cmp
lea
stc
adc
or
jle
popf
sbb
and
add
add
add
shrb
mov
out
insl
jb
mov
xor
push
les
addb
in
add
add
lcall
test
fidivl
pop
jbe
push
dec
inc
ljmp
push
clc
jl
mov
add
jmp
out
shl
cmp
stc
aas
shrb
daa
stos
push
jmp
add
adc
add
clc
pop
cmpsb
outsb
popa
add
in
add
jmp
mov
cmp
add
ret
cmpb
sbb
stc
incl
dec
push
mov
decl
hlt
pushf
mov
popa
add
or
notb
lds
ljmp
sub
das
testl
add
icebp
idiv
fsubrl
pop
test
call
js
hlt
imul
jmp
mov
les
pushf
ret
addb
test
adc
idiv
sub
dec
push
out
movsl
mov
push
sbb
call
sub
out
aas
adc
pop
lock
insb
jno,pn
imul
stc
cmp
sti
lahf
hlt
xchg
sub
call
add
and
subl
cld
jl
dec
xchg
imul
arpl
push
ljmp
add
pop
jle
leave
aad
out
push
jecxz
and
ja
mov
jb
test
out
jge
repnz
in
add
xchg
xchg
mov
insl
inc
jbe
pop
daa
addr16
add
add
jge
out
push
subl
jae
ret
jbe
push
pop
mov
add
add
daa
test
ljmp
add
insb
aaa
mov
shlb
jne
jo
addr16
push
mov
jle
in
in
stos
outsb
jg
push
ret
je
cmp
xorl
add
std
subb
sahf
fs
add
add
test
insb
cli
inc
jecxz
das
dec
fldt
sub
out
in
es
mul
rclb
ret
repz
imul
adc
ss
repz
inc
stc
fidivrs
orl
fdivr
bound
stc
mov
pop
in
scas
pop
in
in
add
add
add
je
outsb
cmp
fs
clc
mov
roll
and
hlt
and
imul
dec
fdivp
call
add
xlat
push
cld
or
cmpb
nop
stc
call
test
in
notb
jbe
adc
dec
call
int3
out
or
and
cmp
lret
and
and
repnz
dec
dec
lea
add
add
mov
cmc
jmp
dec
cmpb
lods
xor
add
mov
jle
decl
call
dec
xchg
mov
inc
in
jle
ljmp
stc
fsubl
stc
mov
jle
jle
orb
lahf
pop
stc
imul
clc
cld
insb
and
stos
sub
test
outsb
stc
inc
aam
hlt
add
add
add
push
insl
call
insl
adc
subl
add
outsb
jp
lret
stc
jnp
jo
jae
jo
stc
dec
push
push
add
push
mov
pop
push
add
sti
arpl
insb
daa
fs
jp
pop
cmpsl
cmpb
jb
pop
xchg
pop
xchg
fs
bnd
testl
add
add
test
fs
clc
repz
insb
xor
xor
jmp
lods
ja
std
fcomip
push
in
jecxz
popa
adc
jle
jb
fs
and
arpl
jno
push
jno
subb
jnp
sarb
fs
in
insl
xchg
fs
mov
popa
fdivr
cmpsb
aas
jl
adc
push
xor
add
add
jae
add
sub
cld
imul
jle
stc
je
sub
pop
jnp
stc
mov
fildll
jl
push
out
mov
inc
je
jb
stc
bound
clc
push
lahf
jge
lea
lock
negb
cmc
adcb
stc
and
pop
jno
sbb
add
add
sub
sbb
cwtl
in
adc
out
mov
pop
icebp
testb
mov
mov
mov
mov
icebp
imulb
mov
icebp
imulb
std
cmp
adc
lcall
out
inc
sbb
testb
out
pusha
fdiv
testb
lock
add
add
add
cmp
mov
jl
or
mov
adc
pop
subl
in
mov
repz
lds
stos
inc
int3
stos
xchg
inc
int3
mov
jecxz
push
jne
stc
sub
ds
je
add
mov
and
mov
sub
je
mulb
std
mov
or
add
add
push
sub
xor
pop
jne
into
mov
out
movsl
ljmp
push
std
sub
paddusw
sbb
ljmp
pushl
xor
aas
and
jnp
mov
clc
jmp
lea
mov
movsb
pop
out
subl
add
add
xor
xchg
outsb
jae
jp
std
insl
aad
mov
outsl
mov
add
add
xchg
jle
ret
add
ficoms
daa
int
inc
jmp
cmp
aas
xor
aas
sub
aas
and
jp
test
lcall
clc
xchg
stc
fs
data16
inc
cli
add
jbe
or
bound
rolb
rorl
inc
dec
ja
fiadds
popf
adc
adc
loopne
in
add
sbb
mov
add
add
repnz
mov
iret
mov
mov
and
ss
pop
inc
gs
stc
jbe
test
or
cmc
mov
in
out
mov
das
pop
xchg
outsl
inc
or
mov
sar
daa
pop
push
es
imull
cmpsl
mov
pusha
addr16
test
bound
adcl
enter
fiaddl
add
add
add
pop
mov
add
cld
ret
insb
sbb
xor
adc
push
movb
icebp
lods
cwtl
call
dec
mov
or
imul
add
call
hlt
xor
fwait
push
mov
add
orl
dec
sub
call
scas
ljmp
add
incl
add
add
inc
add
push
out
cs
std
and
in
incb
out
addr16
test
cld
out
loopne
outsl
jcxz
xchg
jp
addr16
xchg
add
out
sarb
add
addr16
imul
add
lods
add
dec
loop
inc
rolb
out
addr16
cmp
add
out
shr
pop
gs
ja
add
add
add
addr16
xor
xor
pushf
fcmovnb
insl
add
push
jnp
out
add
add
sahf
jle
jl
add
xchg
add
add
outsb
add
add
inc
add
add
cmc
xchg
out
add
ss
pop
dec
out
add
push
jle
out
out
jg
or
xor
icebp
mov
les
and
popa
out
add
add
add
mov
stos
xchg
add
add
cmpsl
lret
adc
fiaddl
data16
out
jge
lahf
jno
std
fs
popa
ljmp
pop
shl
jmp
cmpl
mov
test
pusha
adc
xor
pop
stc
jb
adc
inc
loope
sbb
add
pop
pop
stc
faddp
mov
cld
inc
push
cmp
add
jb
or
push
aas
pop
push
dec
pusha
pop
stos
fiadds
int3
popf
testb
dec
int3
lods
out
int3
cmp
insl
test
test
mov
loop
pop
and
outsb
pop
mov
int3
sub
loop
dec
mov
xlat
pop
add
add
sbb
add
add
jg
inc
dec
rolb
call
incl
add
add
pop
dec
outsb
adc
call
jg
add
incl
stc
call
push
ret
rol
je
sar
mov
add
inc
mov
or
call
dec
ret
lret
int3
pop
adc
int3
pop
adc
int3
inc
mov
jnp
or
push
mov
push
mov
cmpsl
std
test
add
add
ds
or
sbb
or
cmpsl
std
test
lcall
fsubrs
xor
cmp
int3
xor
in
gs
jge
pop
lret
push
jnp
insb
push
jae
jae
xor
dec
rclb
call
jne
clc
jl
arpl
inc
stos
in
je
testl
je
jle
int
add
add
add
rorl
sbb
daa
add
jbe
dec
repz
pop
mov
dec
sbb
and
cmp
xor
dec
scas
nop
jp
or
inc
jno
sbb
in
and
lret
setle
lods
adc
or
ret
jmp
push
cld
mov
pop
cmp
sbb
mov
add
add
add
enter
aaa
mov
inc
cmp
mov
mov
jno
jp
jl
pushl
sbbl
test
repz
sub
or
fmull
pop
and
add
lods
xchg
mov
int3
xor
mov
fs
add
add
add
mov
pop
out
sub
outsl
dec
stc
push
pop
xor
notl
dec
je
cmpsl
push
mov
mov
sbb
pop
stc
hlt
in
push
inc
jmp
add
add
inc
stc
pop
xlat
mov
mov
fidivrs
sarb
in
rolb
pusha
cmp
lret
int3
rcrl
int3
int3
add
add
add
sbb
int3
rcrl
int3
int3
pop
fsubr
push
mov
xor
or
add
loope
dec
icebp
inc
je
fwait
outsb
xor
add
mov
add
pushf
add
leave
dec
mov
es
xlat
inc
adc
xchg
or
adc
out
ljmp
dec
cmp
jge
out
pop
sub
add
add
ret
sub
int3
sub
js
cli
ljmp
gs
mov
push
adc
cmp
test
adc
icebp
mov
pop
jne
ret
pop
sub
jne
jl
pop
xchg
pop
imul
mov
mov
mov
push
int3
stos
hlt
mov
gs
shr
idivl
add
add
add
sarb
xchg
ds
or
scas
and
repz
ret
cs
mov
sub
std
pusha
mov
pop
cmpsl
sti
loope
movsl
add
shl
out
add
sarb
dec
and
cmp
xor
sub
jp
out
inc
mul
add
scas
imul
add
xchg
xchg
icebp
add
pushf
add
add
add
add
add
dec
dec
jg
pop
xor
mov
in
add
insb
xchg
and
fidivl
filds
xor
add
packsswb
xchg
in
add
imul
add
call
in
add
call
mov
inc
int3
sub
pusha
gs
bound
add
add
jge
adc
in
lds
push
cld
test
mov
jmp
jne
sti
and
or
dec
loope
mov
aas
pop
add
movl
mov
js
lahf
icebp
cmc
lret
sub
mov
pop
pop
adc
incl
add
pop
stc
incl
cmp
inc
incl
adc
add
add
mov
data16
jne
outsb
adc
push
adc
pushl
pushf
add
daa
mov
xorl
decl
inc
add
addl
out
icebp
mov
test
mov
mov
or
out
push
mov
sub
or
add
add
add
icebp
mov
int3
cmp
xor
int3
sub
int3
and
and
test
into
lds
addr16
test
loopne
add
lea
mov
push
adc
ja
popa
or
mov
das
push
in
add
loopne
cmp
add
add
daa
or
add
xor
out
imul
add
add
push
out
jno
pop
or
add
inc
push
out
imul
out
jae
outsl
shr
out
xor
pop
shlb
insl
mov
in
out
add
mov
xchg
out
add
nop
sar
add
outsl
shl
out
mov
push
out
xor
sub
popf
fs
add
bound
add
add
mov
xchg
dec
jp
stc
mov
gs
inc
adc
lret
add
jne
xchg
jecxz
sub
sbb
inc
bound
mov
sub
jecxz
pop
and
jb
xchg
or
or
sahf
lock
leave
call
in
test
jbe
je
lock
push
pop
out
dec
shr
xorb
pop
pop
repz
call
add
jb
pop
jge
mov
rorl
add
add
add
add
mov
mov
add
push
leave
inc
cmp
add
jne
jle
and
add
add
stc
dec
sub
pop
orl
aaa
or
lods
jmp
clc
dec
mov
out
add
add
add
mov
mov
xchg
cmc
test
filds
mov
jnp
hlt
lret
push
mov
jmp
or
add
add
loop
sti
add
or
jae
inc
lret
inc
or
sar
xor
mov
test
mov
test
jle
jmp
repz
adc
add
add
je
jae
fstpl
inc
jecxz
jmp
ja
inc
addr16
imul
test
int3
and
int3
cmp
in
dec
mov
and
mov
adc
sub
and
push
mov
andl
icebp
xchg
out
add
xchg
repnz
out
add
cmpb
add
add
add
xchg
dec
outsb
fldl2t
ja
push
jae
mov
arpl
pop
out
inc
fisubrl
sbb
ret
inc
sbb
mov
add
repnz
out
push
sbb
lods
shlb
loope
test
repz
loope
test
icebp
mov
in
out
xor
in
arpl
mov
repz
add
add
jae
mull
add
jmp
fcoml
add
in
add
nop
in
add
jmp
scas
dec
add
mov
jae
fs
push
bound
test
mov
cmp
int3
cmp
pop
jge
cmpl
into
push
jno
shll
stc
data16
pop
push
jbe
add
cs
add
add
add
add
add
mov
rolb
add
add
test
testb
roll
aas
mov
cmpb
stc
call
incl
mov
xorb
lret
mov
loope
jge
ja
cld
fmull
jne
in
mov
test
add
pushf
lcall
xchg
decl
cli
incl
add
add
cld
jl
push
push
pushl
sub
clc
scas
mov
sub
add
pop
filds
xchg
add
adc
pop
or
adc
mov
jbe
out
clc
scas
dec
or
icebp
int
adc
add
nop
lcall
dec
pop
std
sbb
push
xchg
and
push
bound
add
add
ja
xchg
adc
push
mov
aas
jmp
jl
push
std
popa
popf
jbe
push
pop
mov
pushl
dec
daa
lret
lret
test
jmp
add
stc
add
add
loop
xor
out
sti
rcll
jb
out
out
stc
jns
pop
lret
faddl
out
mov
add
add
pop
imul
fsts
xor
add
add
sahf
int3
faddl
out
ja
addr16
lds
int
fbstp
repnz
imul
add
js
hlt
jb
ret
cmc
insl
jne
or
jo
out
jns
pop
lock
push
cwtl
cld
add
mov
pop
add
xchg
in
scas
flds
inc
bound
roll
add
imul
add
addl
test
popa
bound
jl
in
add
mov
dec
stc
xchg
mov
stos
inc
orb
sbb
push
in
xchg
mov
mov
push
xchg
jle
jge
dec
stc
repnz
pusha
fisubs
mov
xor
jecxz
mov
pusha
scas
bound
pop
aam
push
push
add
push
cmp
mov
add
add
mov
test
cld
push
adc
sub
nop
outsb
push
stc
lcall
outsl
push
add
jnp
in
push
mov
data16
orb
push
or
jnp
mov
jp
pop
mov
insb
push
add
fcoms
data16
mov
shrl
push
stc
call
push
add
add
add
mov
add
out
pop
rcrl
or
bound
sarb
mov
sahf
inc
xchg
push
out
test
rcr
adc
adc
pop
mov
loope
or
xchg
adc
pop
mov
pop
mov
aas
dec
daa
push
jmp
jge
dec
xchg
dec
loope
mov
add
add
add
pop
std
call
pop
out
xchg
adc
push
cmpb
pop
xchg
adc
push
std
jl
add
add
call
pop
mov
sti
out
adc
pop
jp
xchg
cld
add
sbb
movl
or
add
inc
fbstp
mov
mov
add
jns
out
imul
push
jns
pop
add
add
add
lods
cli
mov
pop
lret
icebp
jp
lcall
pop
jae
out
out
jae
rolb
adc
dec
aaa
jns
dec
jne
in
push
imul
bound
bound
mov
jmp
stc
mov
jecxz
add
aad
mov
inc
stc
pop
pop
lea
sbb
inc
stc
jb
test
jmp
add
ret
mov
push
jle
dec
add
fisubs
std
xchg
repnz
call
push
adc
in
js
fsubs
jecxz
test
test
jle
xor
inc
stc
jb
cld
xchg
in
jge
xchg
mov
stc
bound
dec
stos
adc
add
test
mov
push
xchg
add
vmread
add
add
add
push
add
jne
add
les
cmp
cmp
les
mov
iret
pop
push
or
pop
lds
or
mov
dec
addb
add
pop
nop
or
add
movl
add
dec
test
les
out
fbstp
add
xchg
add
add
cli
dec
jl
pop
sub
jmp
pusha
jmp
mov
aam
out
mov
mov
out
ja
adc
pop
jl
pop
sti
je
xchg
and
call
out
xchg
xor
gs
adc
pop
out
xor
push
mov
adc
pop
jl
inc
inc
std
ljmp
push
jge
pop
iret
push
ja
pop
bound
add
add
out
shl
popa
insl
mov
push
add
jge
mov
add
js
bnd
ret
in
insl
lret
std
jbe
mov
add
jl
stc
pop
div
jne
faddl
out
cmc
push
call
sbb
fstpt
jb
jle
flds
out
ficompl
xchg
out
push
out
shlb
fbstp
jmp
add
test
add
add
add
out
jne
push
fldt
pusha
adc
xchg
out
add
loope
out
out
push
loope
leave
lret
call
jmp
in
add
jmp
in
add
scas
mov
add
in
add
inc
std
es
clc
adcb
lods
test
xor
dec
bound
stc
test
out
call
add
add
add
add
jmp
jnp
test
adc
bound
xchg
out
call
push
js
clc
ljmp
jmp
mov
dec
cmc
mov
aaa
stc
inc
outsb
or
data16
mov
add
pushw
xchg
adc
add
add
sub
fbld
xchg
rcrl
mov
or
orl
test
or
pop
mov
and
or
or
mov
mov
add
add
mov
pop
add
jle
cmp
sti
pop
cli
test
repnz
sub
movb
add
add
pop
jge
push
jne
push
std
decl
mov
std
in
loopne,pn
and
jl
sub
mov
aaa
std
pushl
repz
icebp
lcall
inc
cld
insl
addb
mov
lcall
xor
xchg
data16
std
pushl
cmc
test
bnd
mov
pxor
icebp
stc
ljmp
add
add
add
mov
jl
or
out
rcr
rclb
mov
inc
ret
faddl
out
jo
cmc
mov
push
in
xchg
mov
inc
ljmp
adc
sbb
testb
jge
pop
out
shll
in
int
or
es
jne
jne
or
add
add
add
mov
pop
mov
push
pop
out
divl
push
jne
add
jbe
pop
jno
psubw
je
add
push
lret
adc
add
xchg
xor
mov
sub
call
inc
mov
add
or
in
jne
and
jmp
add
add
pusha
cmp
lock
jmp
ret
xlat
in
add
popa
loope
pmaxsw
orl
mov
add
dec
mov
xor
add
xlat
mov
idiv
mov
in
ret
lret
int3
sbb
lret
int3
bound
dec
mov
cmp
xor
add
add
add
add
pop
sbb
or
in
mov
pushf
push
add
mov
add
rorl
inc
fidivrs
mov
mov
push
test
add
sbb
mov
out
sub
and
cmp
sub
rclb
xor
push
jle
out
jmp
and
incl
add
add
gs
jmp
inc
fisubl
cwtl
ja
std
jmp
out
test
xor
lcall
std
clc
cs
jl
idivb
xor
imul
mov
decb
jnp
popf
add
fmulp
xor
loopne
std
cld
xor
std
test
pusha
icebp
add
or
push
cmp
pop
ja
incl
add
add
or
outsb
jl
adc
add
out
out
out
or
loopne
out
sahf
outsb
out
sarl
mov
adc
loope
nop
das
repnz
repnz
xchg
add
test
lock
clc
dec
cs
roll
out
test
lock
fidivrs
movd
adc
add
cli
xchg
out
loope
sub
xor
jnp
add
add
jbe
add
in
add
pop
jns
jmp
rcl
out
ja
add
cmp
jle
jae
in
add
add
adcl
and
mov
sarl
stc
jo
sub
dec
test
iret
add
idivb
mov
cmp
rcll
jnp
mov
in
add
add
jle
push
loope
sbb
jb
jl
jmp
mov
adc
jecxz
add
in
loop
adc
test
adcb
mov
ljmp
add
pop
pop
int3
loop
cmp
mov
push
lds
lcall
enter
mov
adc
mov
add
add
add
push
xchg
add
adc
or
jle
push
test
cmp
fimuls
decl
scas
cwtl
iret
and
or
stc
scas
sub
ljmp
xor
xchg
push
jbe
push
std
jmp
push
scas
incb
xor
dec
lods
mov
aas
jl
ss
std
incl
add
add
rolb
std
in
loop
mov
mov
sti
outsl
add
mov
out
mov
xlat
jmp
xor
mov
cmp
inc
out
mov
or
scas
scas
in
mov
std
mov
add
add
jmp
jnp
xor
cmp
mov
cmp
nop
sahf
insl
sub
cmpsb
or
sti
jns
stc
add
add
add
out
pop
xchg
insb
push
push
out
imul
jnp
adc
fisttpll
dec
mov
add
js
or
lock
cld
add
inc
cs
mov
xlat
mov
imul
outsl
mov
out
mov
pop
cmpsb
cmc
sahf
insl
out
lahf
xchg
pusha
or
add
adc
jmp
imul
add
add
hlt
mov
xadd
popa
nop
incb
jl
aaa
and
sub
jnp
movsl
adc
stc
lahf
sbb
das
xor
inc
stos
aaa
bound
mov
pop
in
mov
push
inc
jns
jmp
inc
adc
or
inc
outsb
adc
in
jnp
aad
leave
pop
jno
or
jmp
add
adc
xor
loope
decb
push
pop
icebp
sbbb
nop
mov
push
shl
icebp
test
push
ficomps
xchg
mov
add
inc
pop
sub
pop
mov
push
ret
jmp
lret
int3
mov
ror
int3
jge
mov
lea
add
xchg
inc
add
mov
add
add
push
cmp
jns
inc
inc
mov
clc
pop
sbb
pop
orl
incl
ret
cmpb
hlt
jmp
add
sub
jb
mov
jmp
nop
mov
sub
jle
xorl
insl
imul
pushl
repnz
out
sub
sub
dec
int3
and
inc
push
jne
and
add
cs
inc
pop
roll
shrb
out
mov
in
dec
int3
stos
in
int3
mov
sub
dec
insl
add
cwtl
jbe
std
pushl
adc
cli
adc
std
add
add
fimull
xor
sbb
dec
inc
mov
stc
add
mov
cld
add
fmull
fldt
add
add
add
xchg
sbb
das
sbb
add
call
or
add
sar
outsb
je
add
cmp
mov
roll
out
xlat
and
push
mov
xor
inc
sub
inc
pop
mov
jle
or
fucomip
jns
jns
fucomip
add
icebp
gs
test
out
push
loope
outsb
cwtl
adc
add
add
add
add
jge
aaa
add
jb
adc
jns
jmp
scas
rclb
mov
xchg
push
add
mov
mov
int3
xor
mov
and
test
lds
jp
in
lods
cmp
mov
rcll
popf
stc
push
bound
mov
ud0
add
add
push
or
or
adc
call
sbb
or
inc
jecxz
mov
testl
sbb
fwait
inc
std
dec
inc
or
mov
add
or
cmp
jle
cmp
push
pop
push
mov
in
add
dec
lea
fildll
leave
outsl
sti
call
sbb
lea
add
add
fildl
mov
fldenv
cmc
pop
add
wbinvd
mov
mov
mov
mov
aad
inc
or
mov
fbstp
mov
filds
rorb
fadds
test
cmp
cmp
test
insl
scas
add
mov
into
push
gs
xchg
mov
jle
add
add
add
or
mov
adcb
std
out
sbb
shrb
add
xor
out
movsb
dec
jp
add
mov
das
imul
pop
rcr
add
jns
xchg
dec
cld
out
imul
ds
add
mov
cmpsb
pop
fsubrs
daa
stc
sub
cmp
outsb
pop
sbb
add
mov
add
add
add
add
in
subl
out
pop
rcl
add
jns
xchg
ret
add
out
out
cmpsb
outsl
sbb
imul
adc
add
das
jno
faddl
out
ret
mov
loope
outsl
inc
push
in
push
clc
add
push
rcll
jmp
gs
xchg
stc
add
push
xchg
cmp
jge
add
add
add
lods
push
cmp
call
xor
add
es
jbe
mull
ss
pusha
gs
in
add
bound
adc
in
orl
mov
in
add
jae
adc
in
cmpsb
jno
test
inc
loop
stc
add
add
orl
add
pop
jl
adc
add
add
dec
dec
add
movl
add
xchg
jp
mov
jmp
jle
xchg
push
adc
or
icebp
pushw
adc
adc
add
add
les
jne
push
mov
ljmp
pop
add
mov
bound
mov
cli
mov
pop
les
add
add
out
mov
sub
stos
push
cmpb
xor
stc
jo
or
out
sahf
jge
ficompl
std
test
sahf
movb
jge
in
std
test
push
mov
int
cmp
sbb
out
insl
ss
rorl
jecxz
push
inc
int3
and
int3
cmp
int3
xor
mov
movsb
adc
add
sbb
mov
fwait
mov
out
jge
mov
add
rcll
sub
cmp
jge
repz
ror
cmp
and
xchg
push
out
out
pop
out
sub
loop
data16
movsl
gs
stos
in
add
add
jb
repnz
or
mov
std
call
add
add
imul
xor
out
ja
ljmp
mov
mov
jg
add
es
call
in
mov
clc
in
jbe
imul
add
jae
imul
adc
in
mov
lods
lods
sti
dec
verw
xchg
insl
int3
xor
add
add
add
cmp
test
add
push
cmc
jns
mov
sahf
test
xor
imul
add
rcll
popa
loope
or
jb
add
testb
dec
adc
dec
add
push
adc
add
sbb
data16
orb
mov
push
add
add
add
std
adcb
xorb
dec
arpl
out
int3
bnd
test
add
les
jp
pop
shl
test
push
xchg
std
orb
add
or
add
sti
mov
dec
mov
int3
cmpl
int3
out
in
test
gs
pop
pop
jmp
stc
and
int3
sub
add
mov
imul
lcall
sbb
jmp
xchg
insl
outsl
loope
pop
and
xchg
mov
push
add
sti
test
xor
aas
add
sti
xchg
pop
jle
divb
xor
gs
adc
sbb
ljmp
pop
jge
and
out
pop
sub
add
add
add
sub
sti
cmp
call
fs
mov
inc
lahf
or
in
cmpsl
scas
std
jnp
setg
mov
or
testl
orl
out
add
dec
idivl
out
add
jp
out
imul
cmp
cmpsb
xchg
popf
jb
mov
jnp
cli
push
add
faddl
out
cmp
push
out
add
icebp
js
add
rolb
xchg
jo
add
bound
js
icebp
data16
push
adc
mov
int3
xchg
outsl
inc
in
pusha
nop
fs
in
mov
add
cmc
popa
cmp
mov
add
outsb
data16
outsl
jo
adc
in
jnp
sub
in
add
add
sti
call
scas
mov
cmp
sbb
jmp
pop
add
jmp
shrb
outsb
cmp
add
push
jns
mov
sbb
test
xor
mov
int3
loop
cmp
push
pop
add
mov
test
dec
or
testb
jns
or
add
pop
jns
adc
xor
mov
adc
lcall
fs
data16
jp
aam
mov
movsb
mov
xchg
add
adc
fbld
mov
jnp
xchg
movsb
test
scas
fstpt
out
mov
jp
inc
mov
stc
push
lcall
push
pop
sub
test
jg
testb
add
add
jbe
pop
lds
inc
int3
and
in
jne
cld
dec
jne
or
jmp
jmp
sbb
or
icebp
xor
out
sbb
stc
out
sbb
imull
xor
out
sbb
stc
out
sbb
scas
cli
adc
add
add
pop
add
push
incb
add
add
je
out
mov
sbb
add
fisubrs
hlt
adcb
loop
in
lcall
mov
pop
add
mov
addl
cmp
sub
into
cld
or
inc
into
adc
inc
repnz
jle
out
out
xor
bound
mov
add
mov
int
in
sbb
mov
insb
inc
in
push
std
mov
repnz
mov
outsb
push
jmp
sub
mov
repnz
mov
outsb
push
in
repnz
mov
repnz
mov
outsb
push
out
repnz
mov
repnz
xor
outsb
push
loope
sub
and
outsb
push
lock
xor
add
add
out
outsb
push
jecxz
sub
and
outsb
push
repnz
xor
outsb
push
in
sub
and
outsb
push
add
ljmp
add
ljmp
add
push
dec
bswap
push
push
loope
add
imul
sarl
fnstcw
sysret
icebp
testb
icebp
inc
or
add
add
adc
call
jp
add
jp
out
jp
xlat
std
decl
inc
pop
sbb
add
cld
lock
add
imul
mov
pop
add
in
in
pushl
in
mov
adc
stc
mov
adc
imul
pop
stc
mov
adc
imul
insl
stc
mov
pop
testb
add
add
pop
stc
mov
xor
imul
insl
stc
mov
sbb
stc
mov
cs
imul
insl
stc
mov
sbb
imul
pop
stc
mov
sub
imul
in
clc
mov
sub
imul
jecxz
mov
pop
imul
sarl
sub
jae
fwait
cs
fs
and
jne
add
lcall
sub
cli
and
sub
pushf
add
add
add
add
imul
ljmp
test
mov
int
and
into
repnz
shll
out
cmp
jnp
sbb
orb
add
add
add
push
jno
pop
add
add
sbb
shl
cwtl
out
in
cmpsb
add
iret
mov
cmp
or
sbb
add
add
mov
test
sub
lock
sub
or
sbb
jmp
in
add
jb
jae
sbb
pop
cs
jo
xor
repnz
test
clc
sub
js
sub
ljmp
std
push
in
dec
in
cmpsb
pop
mov
jmp
jo
das
sub
test
test
or
ret
add
jmp
add
add
popa
and
in
iret
adc
pushf
xlat
aas
cmp
push
jecxz
add
add
add
add
cmp
or
mov
sar
jp
mov
add
push
jecxz
add
add
inc
push
adc
add
leave
mov
popf
push
aas
cmp
bnd
incl
or
add
mov
add
add
push
ret
out
xor
incl
cltd
add
mov
mov
incl
add
xor
mov
xor
mov
pop
sbb
push
cld
out
sbb
xchg
out
and
test
iret
cmp
stc
out
daa
std
test
mov
jle
jno
std
lcall
call
add
add
push
mov
sbb
add
inc
daa
std
std
xor
sub
das
jg
and
daa
std
jmp
addb
out
test
sbb
outsl
mov
imul
jge
lock
pop
dec
cltd
sub
imul
jge
fmuls
add
movl
push
add
shl
imul
add
jb
pop
dec
add
add
add
xlat
inc
xchg
or
xchg
out
jae
push
add
shl
dec
sbb
add
iret
cli
mov
aad
add
cmp
mov
in
es
sbb
add
iret
cli
sub
es
mov
jle
inc
jg
int
out
out
xchg
sub
ljmp
repnz
test
or
adc
add
fdivr
lcall
pop
in
add
add
add
lcall
adc
add
in
in
add
aas
jmp
sbb
push
add
cltd
or
mov
mov
lock
fsubrp
add
bound
add
sub
xchg
or
add
in
in
cmp
aas
jmp
repnz
cmp
aas
jmp
pop
ljmp
cmp
add
add
mov
inc
pop
test
add
popf
mov
test
push
adc
pop
jle
call
inc
pop
sbb
and
jne
iret
iret
pop
aam
lret
int3
pop
popf
jmp
jb
jle
or
sub
les
add
or
push
jmp
stc
lret
sbb
test
sbb
add
add
rorl
push
outsb
mul
inc
mov
in
gs
testl
out
imul
testb
int3
mov
xor
stos
pop
rclb
cmpsl
adc
imul
gs
test
out
push
inc
test
jl
sbb
test
cld
xlat
ja
flds
add
add
out
sahf
lret
inc
test
je
jnp
adc
jbe
push
mov
xchg
imul
jmp
fistps
bound
fsubrs
xchg
imul
ret
jmp
add
sub
add
sub
addl
out
negb
icebp
loope
xor
dec
jge
jp
shrl
sub
js
add
cmp
add
add
testl
jge
add
add
sub
add
add
add
dec
stos
hlt
jbe
and
loopne
pop
xchg
lcall
sub
loope
cltd
jl
fsubrl
or
loope
jmp
decb
cmpsl
enter
add
mov
test
sub
fnsave
in
ret
xor
add
sahf
add
aad
out
lcall
jmp
das
pop
rolb
imul
jl
lds
pop
stc
jmp
mov
sti
xor
dec
add
jne
incl
push
jl
or
adc
add
add
inc
repz
jge
cwtl
jae
adc
lock
add
add
add
add
mov
xor
mov
mov
and
and
testb
ss
mov
and
pop
repz
jg
cltd
mov
pop
test
mov
int3
xchg
inc
add
popl
xchg
add
push
add
add
add
add
add
add
add
push
std
out
es
out
incb
add
add
out
dec
std
out
data16
out
pop
add
out
jbe
call
outsl
hlt
decl
xchg
out
jle
stc
xchg
mov
add
cmpsb
and
loope
and
fnstenv
and
out
and
out
mov
and
into
and
out
out
stc
out
fisubs
stc
in
mulb
stc
jmp
add
add
stc
push
and
loope
and
mov
push
sbb
push
mov
rcr
fcmovu
cs
hlt
pop
mov
push
or
lock
add
push
lret
testb
xor
andl
out
imul
hlt
jb
stos
mov
mov
enter
rolb
add
add
or
add
mov
lods
adc
out
add
add
xchg
mov
fucom
mov
jmp
xchg
xlat
push
jnp
lds
jge
and
cmp
loopne
bound
loopne
add
and
lds
jmp
jns
sbb
lods
and
sbb
add
add
popa
loopne
xchg
cmc
adc
ljmp
mov
xor
or
or
jle
or
or
jl
jmp
add
pop
les
adc
int
int3
and
in
loopne
call
xchg
push
xor
imul
pop
dec
pop
outsb
mov
dec
insl
gs
sub
imul
add
add
add
call
popf
mov
je
clc
mov
jne
in
or
flds
std
call
in
lret
inc
std
inc
push
push
pop
jg
jle
push
hlt
push
ja
sub
ret
adc
int3
loopne
out
adc
test
sbb
outsb
xchg
movsb
inc
jae
call
add
add
xchg
daa
std
ss
divl
inc
mov
shrb
cs
test
jo
or
std
out
cmpsl
sbb
popf
sbb
stos
je
jge
fidivs
add
out
daa
std
mov
push
inc
int
es
jg
xor
stos
fs
jl
negb
add
add
int
ss
ja
sahf
aas
std
bnd
int
mov
lock
nop
add
add
repnz
int3
mov
roll
andb
jo
outsl
add
push
enter
cmp
add
mov
out
jb
into
int
mov
add
add
add
add
add
adc
lret
jp
mov
jp
add
mov
subb
sahf
out
shr
test
call
pcmpeqb
and
pop
push
dec
jb
in
arpl
out
gs
sub
andl
fsubl
rcr
stc
xchg
sub
add
jno
add
jmp
add
add
add
in
jmp
or
push
sub
add
xor
add
jmp
daa
push
mov
jmp
or
add
addb
sbb
subb
add
xchg
mov
stc
je
sbb
and
sub
repz
out
sub
add
add
xchg
jbe
sub
sbb
jmp
jns
and
sub
jbe
add
add
sub
rorl
jbe
sub
mov
mov
sbb
cmp
lock
jmp
add
sub
test
inc
adc
fdivrs
popf
test
enter
je
xor
push
mov
sbb
add
in
in
jne
and
mov
or
and
jmp
push
mov
sub
jno
xor
fcoml
stos
repnz
mov
or
sbb
inc
or
daa
pushf
orb
push
or
mov
test
daa
addr16
push
add
hlt
testb
cwtl
add
add
add
out
in
out
jns
inc
mov
jle
out
inc
add
add
notl
lods
mov
mov
sbb
jo
shlb
or
aas
pushw
push
xchg
hlt
or
adc
test
out
leave
xchg
jns
loopne
std
lea
mov
add
sub
or
add
add
test
dec
hlt
testb
adc
jae
in
mov
fildll
out
or
jg
test
pop
jnp
and
mov
mov
xor
and
in
js
jae
or
ljmp
jle
lock
sub
loopne
rolb
movb
add
add
ljmp
or
jno
mov
add
dec
jb
addb
rorb
inc
jmp
ret
push
mov
pop
and
fdivr
incb
cmp
aas
or
inc
loopne
pmuludq
push
jle
and
add
lret
shl
cmp
inc
or
add
push
lds
jle
add
add
push
and
add
dec
sbb
add
xlat
adc
and
cmp
mov
lock
push
andb
add
jp
sub
stc
je
cmp
mov
pusha
loopne
into
ffree
mov
add
imul
in
lds
inc
or
fcmovb
and
add
add
add
add
add
enter
call
adc
fldcw
mov
lea
jne
in
in
inc
sub
add
paddsb
cmp
daa
mov
cmp
repz
es
push
sbb
inc
add
add
add
or
add
add
inc
out
add
add
les
add
add
roll
add
add
push
add
cmpb
inc
in
add
add
imul
mov
imul
data16
mov
xchg
in
inc
jne
fistpll
in
daa
sub
testl
mov
mov
lods
add
loopne
or
pushf
hlt
or
pop
push
fstl
ljmp
sbbl
and
pusha
sbb
in
add
mov
ljmp
jns
jmp
lahf
aaa
bound
adc
loopne
add
repnz
add
fucomp
rolb
jb
in
sarb
mov
lcall
push
jae
jmp
add
add
add
add
sub
inc
int3
add
lret
int3
dec
ror
bnd
orl
push
pop
xor
roll
or
jne
test
inc
movsl
mov
lods
addb
cmp
mov
jp
or
shlb
cmp
xchg
mov
inc
dec
xor
dec
add
add
add
inc
xor
push
fldl
mov
add
nop
popa
cmpb
insl
push
incl
addb
xlat
mov
xchg
dec
subl
in
stos
and
repz
out
sbb
test
sbb
test
mov
mov
lock
out
dec
cmp
mov
out
pop
fdivrs
cmp
pop
add
adc
adc
sub
push
incl
xchg
lahf
and
push
dec
je
mov
fwait
adc
incb
jp
add
sti
sbb
xchg
fdivrl
les
mov
shlb
pop
or
out
or
jae
rolb
out
out
jo
mov
add
add
cmp
bound
pop
inc
in
push
or
xchg
enter
or
xor
aad
sub
out
add
jns
das
divb
and
pop
mov
sahf
pop
pushl
negb
das
lahf
sbb
icebp
jae
insl
sarb
rcrl
add
movsb
pop
stc
out
fisttpll
and
orb
aas
inc
leave
add
add
add
mov
add
add
add
sub
ret
repz
jmp
repnz
xchg
out
jge
aad
rcr
mov
or
movsb
or
repz
and
divl
adc
xor
in
xor
test
outsl
mov
xchg
add
add
and
xor
push
add
jmp
jnp
add
add
sete
clc
call
orl
jmp
add
orb
insb
in
mov
or
cmp
or
shll
or
stc
test
insb
and
jmp
dec
aaa
sti
mov
dec
mov
inc
faddl
add
add
test
test
sub
sub
leave
cmp
pusha
imul
test
add
push
sbb
int3
dec
sahf
mov
dec
inc
nop
rol
in
jo
out
sbb
cld
sbb
mov
std
out
cmp
jb
mov
out
inc
and
xor
mov
or
std
incl
add
add
out
push
or
push
mov
je
cmpsb
mov
add
out
pop
test
push
inc
stc
sbbl
stos
scas
dec
mov
int3
les
xchg
add
add
testb
lock
cmc
icebp
cmp
mov
mov
out
sti
adc
add
xor
mov
xchg
add
xchg
add
add
xor
mov
sub
jae
jnp
xor
mov
add
add
xor
xchg
aam
shll
in
and
sarb
add
cmp
ret
jb
sub
call
repnz
xchg
or
jnp
xor
add
add
add
add
shlb
stc
jle
pop
add
jmp
xchg
lea
jb
js
pop
test
test
js
js
jnp
jb
call
std
pop
xchg
shlb
scas
nop
std
mov
clc
jbe
inc
clc
xor
adc
sub
push
xchg
and
call
add
mov
mov
orl
add
add
jnp
call
addl
or
fdivp
sub
imul
mov
test
inc
int3
int3
loop
in
mov
cld
orl
cmp
adc
mov
lock
mov
add
dec
xor
mov
push
mov
mov
push
mov
not
push
dec
or
test
int3
int3
sti
aas
int3
int3
add
add
add
aas
int3
int3
out
mov
hlt
test
fiaddl
push
out
mov
adc
mov
or
icebp
pop
sub
sbb
mov
loop
or
out
mov
jne
lock
gs
push
gs
dec
or
aas
int3
sub
aas
int3
mov
add
add
mov
ja
gs
cld
test
in
ja
loop
scas
jae
les
mov
aaa
xorl
andb
adc
inc
xchg
out
or
subl
mov
xor
out
mov
movsl
add
les
inc
mov
inc
icebp
jp
fucomp
or
mov
and
aad
or
add
add
pop
mov
jp
int
or
arpl
sti
test
pop
in
cltd
movsl
jne
sahf
push
xlat
std
add
imul
pushl
bound
sbb
clc
bound
stc
clc
inc
or
es
std
clc
call
clc
idiv
jb
stc
addr16
add
add
add
cli
push
cli
notl
std
aas
cmp
sub
aad
add
in
lds
inc
out
into
in
lret
mov
int3
lret
lods
int3
lret
repnz
ljmp
ret
in
add
in
test
test
in
je
mov
decl
adcb
in
inc
mov
xchg
jmp
int3
repz
int3
add
add
add
cmp
int3
sarl
int3
int3
or
dec
mov
scas
cmp
push
outsb
outsb
int3
mov
dec
mov
jns
add
xchg
hlt
mov
lret
out
ja
jns
and
add
add
notl
add
mov
jbe
mov
sti
je
lret
out
jbe
jp
or
mov
mov
cwtl
jns
adc
mov
adc
add
add
jne
fxch
pop
pop
in
je
out
mov
adc
gs
sahf
pop
mov
and
decb
jno
fwait
test
mov
cmp
xor
sub
push
gs
jl
out
call
test
mov
push
nop
daa
jae
and
hlt
cwtl
adc
jmp
lcall
add
add
stc
call
push
jge
add
test
xchg
loope
nop
xchg
out
jge
lock
frstor
mov
out
test
push
out
out
call
gs
ficompl
lods
jb
xchg
inc
repz
in
pop
dec
repnz
fs
sbb
add
add
inc
mov
add
add
add
add
add
mov
test
or
jb
out
jl
adc
mov
dec
outsb
inc
push
sarb
std
loop
call
ror
out
ss
push
cmp
les
fs
or
int
idiv
jb
adc
pop
clc
push
cmc
jb
or
or
dec
or
mov
add
idiv
jb
adc
pushf
clc
push
std
push
or
or
nop
or
clc
mov
outsl
adc
mov
add
cmp
dec
adc
xchg
inc
or
inc
and
xor
adc
pop
adc
dec
push
pop
add
push
inc
or
xchg
jg
jmp
jns
add
or
add
dec
push
push
decl
inc
or
xlat
jg
cmp
xchg
mov
add
jecxz
lret
in
das
inc
mov
std
xchg
out
scas
adc
lock
push
add
dec
lock
out
setb
jmp
out
pop
add
or
xchg
lds
ja
out
add
push
jne
in
push
add
add
add
add
push
or
test
sbb
ljmp
jne
or
sub
stos
push
aas
dec
mov
insl
sbb
sbb
jbe
aaa
test
xor
jl
jecxz
insl
sti
bound
js
incb
xchg
std
clc
xor
mov
aad
add
jns
clc
insl
popl
add
add
loope
xor
adc
add
fmull
arpl
test
add
mulb
jnp
in
int
pop
pop
pop
cmpsl
lds
jg
hlt
divb
jae
xlat
js
in
gs
mov
add
insl
jns
add
out
cmc
xor
lods
clc
insl
sub
pmaddwd
adc
add
add
add
lds
fucomip
mov
movsb
dec
push
push
fwait
pop
inc
dec
push
push
jle
jmp
in
add
mov
cmp
push
ret
push
arpl
cmc
clc
jmp
mov
inc
and
sahf
push
test
je
xchg
test
rep
add
pushl
je
outsl
mov
add
or
add
add
add
add
add
in
add
jb
std
out
dec
cmc
clc
add
add
add
ret
sbb
lods
sbb
cmp
add
pop
add
mov
fwait
sub
orl
enter
idiv
cli
andl
insl
or
testl
pushl
jnp
add
add
add
popa
addl
push
mov
sti
incl
sbb
mov
ljmp
xor
pushl
sub
adc
sbb
push
ret
dec
push
cwtl
dec
sub
shrb
out
shrb
xlat
std
clc
pop
lahf
pop
pop
xchg
es
jne
mov
bnd
fldcw
pop
shrb
ret
out
gs
push
push
add
add
add
inc
mov
call
xor
pop
lods
xor
imul
push
dec
mov
sub
rorl
test
add
and
push
jne
sub
outsb
dec
or
pop
jb
sbb
add
dec
push
add
dec
inc
add
add
test
ja
xchg
add
sub
mov
out
xchg
inc
repz
add
add
ljmp
jmp
jmp
cmp
lea
pusha
inc
sarb
add
mov
gs
out
out
add
xchg
lcall
mov
inc
xchg
loop
sbb
jmp
cmp
add
add
add
jge
lods
sbb
jb
clc
test
ljmp
repnz
and
jae
jmp
repz
mov
jnp
in
jp
or
push
and
or
test
pop
pop
dec
jl
adc
rolb
add
jmp
loop
cmp
cmp
adc
je
jne
cmp
jmp
call
add
add
sbb
clc
jmp
lods
insl
or
adc
sbb
adc
sti
cli
inc
add
mov
call
mov
imul
push
int3
int3
or
lods
idiv
sub
clc
mov
addl
hlt
divb
inc
add
ret
fcomip
dec
or
inc
or
add
cli
into
in
xor
add
addl
add
add
inc
or
loopne
pop
lock
scas
push
or
adc
lcall
jl
or
push
or
fs
sub
push
out
push
stc
clc
shrl
daa
jo
lcall
sbb
out
add
test
pop
jl
fimull
push
lret
inc
sarb
inc
test
add
add
mov
iret
jl
fimull
push
adc
add
dec
adc
test
out
sub
xlat
jne
sub
rorl
xlat
jne
sub
jne
sub
add
mov
sti
sub
mov
jl
mov
add
jno
sub
jno
add
add
out
sub
dec
add
insl
lds
testl
pop
mov
testb
out
xor
sti
out
out
add
and
in
and
pusha
pop
fldenv
in
or
jo
into
fldenv
in
repnz
nop
cld
clc
popl
data16
in
out
ljmp
jmp
add
add
add
and
push
scas
add
adc
mov
in
in
jmp
inc
out
jmp
xor
cmp
js
or
in
jmp
adc
shr
fdivrs
in
add
call
ljmp
in
loopne
jmp
stos
add
mov
add
call
shrb
pusha
add
add
add
sti
add
cltd
dec
ja
add
add
decl
pop
xor
inc
add
adc
aas
cli
add
pop
in
or
push
add
movsb
adc
mov
cmp
cmp
mov
and
js
and
xor
notl
test
mov
and
mull
jge
mov
and
jge
mov
add
add
cltd
lock
and
add
jmp
jl
mov
and
mov
and
or
or
out
adc
lahf
adc
cmc
mov
hlt
cltd
addr16
mov
mov
in
loope
sub
mov
sbb
loope
or
lock
and
mov
iret
cmp
decb
ljmp
pushl
int3
add
add
add
mov
gs
mov
cmp
push
mov
mov
push
dec
xor
outsb
inc
and
jo
or
add
push
add
pop
and
add
mov
mov
mov
stos
movsl
mov
jp
xor
sahf
dec
sbb
out
roll
inc
shrb
mov
add
add
lods
add
jo
das
adc
add
sub
mov
es
xor
mov
pop
cli
mov
clc
insl
dec
ret
or
inc
sti
push
pushf
sti
xchg
jae
sub
out
sbb
repz
inc
or
les
sbb
cld
scas
repz
jecxz
insb
rcl
into
insl
xchg
jecxz
pop
pop
add
add
add
inc
mov
jbe
add
jne
add
push
in
decl
mov
jmp
cmp
stc
and
lcall
mov
jge
xchg
fiaddl
sbb
cmp
aas
cld
out
push
jmp
inc
int
ljmp
in
add
add
jns
mov
sarb
add
mov
inc
dec
sub
or
and
pushf
mov
dec
mov
insl
or
and
add
mov
loope
lds
fs
xlat
fsubrl
and
and
sti
sarb
add
inc
xchg
dec
divl
int3
sub
mov
adc
fisttpll
jo
cmp
push
std
sub
add
add
or
call
test
mov
inc
loop
lock
fnstenv
clc
arpl
cld
out
lcall
out
frndint
incl
push
pop
inc
jae
pop
aas
fwait
test
cmp
clc
add
icebp
jb
pop
outsl
or
int
push
popf
fdivrl
push
insl
negb
jge
testb
out
jb
mov
add
les
out
frndint
mov
jo
and
pop
push
dec
cwtl
add
mov
pop
inc
ljmp
divb
mov
mov
cmpl
dec
jp
add
add
pop
inc
inc
cs
les
add
mov
dec
jae
ret
sbb
rcr
jae
add
add
add
add
or
rcll
push
insl
aas
adc
xor
push
cmp
push
or
outsb
aas
or
aaa
in
cmp
aaa
jmp
pushf
in
icebp
icebp
push
std
test
sbb
jl
or
sbb
or
ds
add
cs
sub
adc
clc
jmp
add
add
add
add
xchg
and
add
in
add
sub
fdivs
daa
add
in
add
inc
arpl
clc
or
daa
add
in
add
es
jmp
add
scas
es
in
add
add
jmp
decl
cmp
push
cmp
pop
add
add
in
idiv
pop
inc
cmp
jl
cmp
add
add
add
add
add
inc
cmp
add
add
add
add
inc
cmp
fdivrs
cmp
xchg
add
add
idiv
repz
cmp
idiv
cmp
xchg
add
add
in
idiv
adc
cmp
push
idivl
add
add
mov
idiv
cli
cmp
cmp
push
add
add
in
idiv
adc
cmp
out
movb
xlat
cld
incl
add
add
out
repz
adc
ds
jae
ds
xlat
cld
out
fsubrp
clc
icebp
call
fdivrs
out
frndint
out
mov
sti
ds
mov
ds
frndint
out
lcall
out
filds
out
frndint
out
jp
clc
xchg
inc
das
aas
out
sub
aas
out
frndint
out
pop
in
clc
jno
in
aas
out
ds
aas
out
frndint
out
cmp
clc
add
add
add
out
aas
out
jns
aas
out
frndint
out
add
add
add
add
add
test
cltd
fistl
adc
add
adc
add
adc
add
adc
add
out
cs
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
push
out
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
jmp
in
call
psubsw
cld
push
jmp
in
sbb
jmp
in
loopne
jmp
in
enter
int3
psubsw
fmull
jmp
in
sahf
push
jmp
in
rorb
add
add
add
movsb
psubsw
test
jmp
in
mov
psubsw
jle
jmp
in
mov
psubsw
mov
jmp
in
pushf
psubsw
les
jmp
inc
inc
adc
jg
push
jnp
inc
ja
inc
jae
pop
incb
adc
cmp
adc
decb
adc
decb
adc
add
add
pop
incb
adc
incb
adc
std
call
xlat
std
sti
adc
std
notl
std
repz
std
ret
adc
std
mov
adc
std
mov
xchg
std
mov
xchg
std
scas
adc
std
cmpsl
adc
std
sub
xchg
daa
adc
std
pop
adc
xlat
cld
sbb
xlat
cld
pop
xlat
cld
adc
xlat
cld
pmaxub
cld
or
xlat
cld
pop
add
add
add
xlat
cld
add
xlat
cld
xlat
cld
sti
jmp
xlat
cld
repz
xlat
cld
out
icebp
xlat
cld
jmp
xlat
cld
or
xlat
cld
sar
jmp
cld
movsl
jmp
cld
jmp
jmp
cld
mov
loope
cld
sub
jmp
cld
mov
loope
cld
mov
jmp
cld
scas
jmp
add
add
add
add
xchg
adc
add
adc
add
out
data16
add
out
pop
adc
add
out
jbe
out
push
out
outsb
adc
add
movntq
sbb
out
or
out
and
out
mov
out
ds
add
adc
add
adc
add
adc
add
adc
add
movntq
testb
add
movntq
add
add
add
movntq
lret
add
movntq
xor
out
mov
sub
jmp
in
and
jmp
in
cld
or
in
clc
or
in
hlt
or
in
lock
in
or
jmp
in
add
jmp
in
fmull
jmp
in
aam
jmp
in
xor
jmp
in
dec
adc
in
loopne
jmp
add
mov
or
in
mov
jmp
in
or
jmp
in
les
jmp
in
pushf
or
in
cwtl
or
xchg
add
xchg
mov
xchg
lods
push
push
add
push
inc
add
push
push
add
push
inc
add
push
inc
add
push
pop
add
push
pop
add
push
pop
add
push
add
add
add
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
push
xlat
add
movl
mov
add
add
add
push
xchg
add
out
out
aas
loopne
cld
addr16
out
xor
out
pop
call
out
pop
clc
out
adc
out
and
out
and
out
pop
add
add
add
out
adc
out
test
out
mov
push
call
cld
and
mul
cld
out
cs
cld
repz
cld
out
jecxz
cld
jmp
jmp
cld
jecxz
jmp
cld
jmp
cld
psubsb
cld
or
jmp
out
mov
out
scas
push
out
push
push
out
inc
push
out
add
add
add
push
out
hlt
or
add
out
pop
mul
add
out
mov
out
jb
out
sbb
out
cwtl
lock
pop
push
out
bound
out
jbe
out
push
out
outsb
push
out
xchg
or
out
sub
icebp
out
div
out
inc
push
out
cmp
out
xchg
or
add
push
out
es
out
sbb
out
add
add
add
push
add
in
dec
or
in
sahf
or
in
inc
or
in
jbe
jmp
in
sbb
jmp
in
and
jmp
in
clc
or
in
hlt
or
in
lock
in
or
jmp
in
add
jmp
in
fmull
jmp
in
aam
jmp
in
in
or
in
call
or
in
sub
jmp
add
and
jmp
in
cld
or
in
push
or
in
adc
jmp
xlat
sub
mov
or
mov
xchg
mov
xchg
scas
or
stos
or
cmpsl
or
mov
or
stos
or
cmpsl
or
mov
or
fwait
or
in
push
push
jmp
adc
add
add
add
rclb
pop
aad
pop
rorl
pop
dec
push
pop
dec
push
pop
pop
or
pop
or
std
push
or
std
push
or
std
dec
or
out
dec
cli
out
inc
repnz
inc
ljmp
cmp
out
aaa
repnz
xor
out
das
loop
cld
sub
out
daa
repnz
and
out
pop
loop
cld
sbb
out
pop
add
add
add
out
adc
out
psrad
cld
or
out
pop
repnz
add
out
jmp
out
sti
cmc
out
div
out
repz
cld
out
in
cld
jmp
out
out
out
jecxz
out
out
fcomi
jmp
out
ret
add
or
add
or
add
or
add
out
add
add
add
out
test
or
add
out
push
or
add
out
je
out
std
icebp
out
jp
out
jle
out
jp
out
jbe
out
bound
add
out
stos
or
add
out
cmp
out
sahf
or
add
or
add
or
jmp
in
jg
jmp
add
add
add
push
or
in
pop
or
in
js
jmp
in
jo
jmp
in
mov
in
jl
jmp
in
push
add
jmp
in
and
jmp
in
in
add
in
lock
in
add
jmp
in
cld
add
in
add
jmp
in
int3
add
jmp
add
in
jmp
pop
add
or
add
or
add
or
add
or
add
or
add
xlat
add
or
add
or
movl
int3
or
add
xchg
add
xchg
movsb
or
add
inc
add
push
add
add
mov
inc
add
pop
add
pop
add
add
out
out
imul
cld
addr16
cld
arpl
out
pop
hlt
out
pop
hlt
out
push
in
cld
push
in
cld
dec
hlt
out
dec
hlt
out
inc
in
cld
loopne
cld
dec
hlt
out
dec
hlt
out
inc
in
cld
inc
in
cld
aas
hlt
out
cmp
out
aaa
add
add
add
out
xor
out
pop
hlt
out
sbb
out
pop
in
cld
adc
out
pmuludq
cld
or
out
cmpsb
in
cld
add
out
push
out
sti
mul
cld
mul
add
add
pop
out
incb
out
adc
out
push
pop
out
or
out
into
or
add
or
add
or
add
or
add
out
add
add
add
or
add
out
push
or
add
out
ds
add
out
inc
or
add
out
push
out
orb
add
out
jp
out
pop
or
add
out
data16
add
out
outsb
or
jmp
in
pop
pop
jmp
in
push
pop
jmp
in
push
add
add
add
add
pusha
pop
jmp
in
cmp
jmp
in
xor
jmp
in
dec
pop
jmp
in
inc
pop
jmp
in
sbb
jmp
in
jbe
jmp
in
outsb
add
in
addb
or
jmp
in
jle
jmp
in
sbb
jmp
in
dec
add
or
jmp
add
add
add
jmp
pop
lcall
pop
lcall
pop
out
or
jmp
pop
jmp
or
decl
xlat
lock
in
or
call
or
loopne
xlat
fmull
sub
or
dec
or
inc
or
adc
xchg
or
or
mov
push
lods
or
add
add
inc
test
inc
movsb
or
mov
mov
in
cld
lcall
cld
xchg
out
cld
mov
out
mov
out
xchg
out
and
cld
jle
out
jp
out
jbe
out
jb
out
shl
cld
mov
hlt
out
mov
out
mov
out
lods
hlt
out
test
in
cld
mov
add
out
popf
hlt
out
cltd
hlt
out
xchg
in
cld
xchg
in
cld
hlt
out
mov
out
test
out
and
push
out
les
out
rolb
add
out
xchg
push
out
nop
push
out
mov
out
test
out
movsb
push
out
mov
push
out
cmp
out
xor
out
xor
out
sub
out
add
add
add
sti
out
add
out
add
out
cld
cli
out
fdivr
out
aam
out
sar
out
int3
cli
out
call
cli
out
loopne
out
fdivr
out
clc
cli
out
hlt
cli
call
in
add
jmp
in
lret
in
push
jmp
in
fiadds
jmp
in
out
jmp
in
scas
push
jmp
add
stos
push
jmp
in
mov
jmp
in
mov
push
jmp
in
mov
jmp
in
xchg
push
jmp
in
sahf
push
jmp
in
cmpsb
push
jmp
in
outsb
push
jmp
in
jbe
jmp
push
add
or
orb
add
push
add
push
add
add
add
add
jb
inc
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
xlat
add
xlat
add
movl
ds
add
or
add
or
add
or
add
or
add
or
add
or
add
or
xlat
cld
adc
add
xlat
cld
adc
xlat
cld
or
out
cld
add
not
cld
std
not
cld
stc
out
cld
cmc
out
cld
icebp
not
cld
in
not
cld
jmp
out
cld
loope
xlat
cld
xlat
cld
xlat
cld
aad
xlat
cld
shl
xlat
cld
int
xlat
cld
leave
out
cld
cld
shl
cld
mov
out
cld
mov
xlat
cld
mov
add
add
not
cld
lods
not
cld
test
out
cld
mov
pusha
clc
out
push
clc
out
pop
clc
out
jl
out
jo
out
fs
out
push
clc
out
sar
add
out
pushf
clc
out
nop
clc
out
test
out
mov
out
mov
out
mov
clc
out
cwtl
clc
out
cmp
out
add
add
add
stc
out
and
out
sub
out
sub
out
add
out
hlt
clc
out
clc
clc
out
fdivr
out
sar
out
clc
call
in
push
or
in
ljmp
in
repnz
jmp
in
cli
pop
jmp
in
and
pop
jmp
in
movb
in
rolb
jmp
in
fiaddl
jmp
add
add
in
loop
jmp
in
stos
add
in
cmpsb
add
in
mov
jmp
in
mov
add
in
ret
in
mov
add
in
xchg
jmp
in
mov
add
jmp
xchg
pop
add
xchg
call
xchg
push
add
push
decl
push
jmp
add
add
add
add
addl
push
jns
inc
pushl
add
pop
ljmp
add
pop
jmp
pop
jmp
pop
lcall
pop
lcall
pop
call
pop
call
xlat
decb
xlat
decb
incb
add
xlat
cli
add
cmp
xor
xor
jmp
xlat
cld
sub
xlat
cld
and
add
xlat
cld
and
xlat
cld
sbb
jmp
xlat
cld
adc
xlat
cld
or
jmp
xlat
cld
add
xlat
cld
std
lock
cld
stc
call
xlat
cld
icebp
call
xlat
cld
jmp
lock
cld
loope
xlat
cld
xlat
cld
fld1
xlat
cld
aad
xlat
cld
shr
xlat
cld
int
xlat
cld
test
xlat
cld
xor
cld
jl
add
add
ljmp
add
add
out
pop
add
add
out
inc
add
add
out
dec
add
add
out
push
add
add
add
add
out
fs
add
out
insb
add
add
add
add
add
add
add
add
add
add
add
add
cwtl
add
add
out
cmp
out
sub
out
jmp
call
in
in
leave
cld
call
in
push
add
in
adc
jmp
in
sbb
jmp
in
and
jmp
in
ljmp
in
repnz
in
testb
in
cli
add
in
incb
jmp
in
movb
add
add
add
lret
in
into
add
in
rolb
jmp
in
fiaddl
jmp
in
loop
jmp
in
stos
add
in
scas
add
in
mov
add
add
add
xlat
add
add
movl
mov
xchg
add
add
xchg
cmpsb
add
xchg
add
add
add
add
add
xchg
add
inc
add
add
push
add
inc
add
inc
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
out
xlat
cld
push
jmp
cld
push
repz
cld
dec
jmp
cld
dec
repz
cld
inc
jmp
cld
inc
repz
cld
cmp
repz
cld
xor
add
xlat
cld
xor
xlat
cld
sub
repz
cld
and
repz
cld
sbb
repz
cld
adc
repz
cld
or
repz
cld
add
repz
cld
std
ljmp
cmc
ljmp
in
ljmp
in
xlat
cld
loope
add
add
std
out
cld
out
mov
add
add
mov
cld
out
mov
out
test
out
lods
cld
out
jo
out
fs
out
pop
cld
out
pop
cld
out
inc
cld
out
push
cld
out
dec
cld
out
dec
cld
out
push
cld
out
test
out
js
out
jl
out
pusha
cld
out
je
out
push
cld
out
mov
out
movsb
cld
out
cwtl
cld
out
pushf
cld
out
add
add
add
cld
call
in
bound
in
es
in
es
in
sub
in
cs
in
xor
in
ss
in
cmp
in
ds
in
add
in
push
add
in
or
in
push
add
in
adc
in
push
add
in
sbb
in
push
add
in
loop
jmp
in
ljmp
in
repnz
add
add
add
testb
in
cli
add
in
incb
jmp
in
cld
call
in
into
cld
incl
add
add
add
add
add
add
add
add
add
add
call
add
call
add
dec
add
dec
add
lcall
add
call
call
add
decl
xchg
decl
add
pushl
xchg
cld
add
add
add
xchg
push
add
in
add
jmp
add
loopne
inc
faddl
push
fadds
push
call
add
rolb
inc
dec
add
dec
add
frndint
lret
cld
out
frndint
ret
cld
mov
out
frndint
mov
frndint
mov
xlat
cld
scas
out
xlat
cld
stos
out
xlat
cld
cmpsb
out
xlat
cld
mov
roll
add
add
add
mov
inc
or
movl
xchg
inc
add
xlat
cld
ljmp
adc
fcmovnb
inc
call
pop
inc
sbb
repnz
add
insl
cwtl
pop
stc
ds
int3
clc
fcmovbe
jnp
or
in
and
xor
out
lods
out
add
add
sti
icebp
nop
inc
adc
addb
adc
lret
add
add
add
jecxz
sub
out
loope
xchg
pop
push
cmp
pop
jno
jmp
shr
add
add
jae
jae
shll
shll
pop
inc
call
fildl
mov
and
jmp
std
add
movb
inc
in
xor
outsl
inc
clc
jge
cmc
in
dec
add
jb
push
jmp
add
add
add
std
mov
aad
inc
inc
repz
lock
push
push
jmp
fstps
push
enter
mov
sbb
lret
inc
lret
jl
jmp
jae
xchg
fdivr
out
mov
add
stos
insl
cmp
clc
ss
mov
aaa
push
mov
jmp
sub
mov
add
add
inc
lret
jnp
or
dec
sbb
inc
ret
jnp
inc
inc
insl
add
aam
jne
out
std
orb
ret
sbb
aam
js
ror
inc
in
jnp
les
and
dec
cli
aas
movl
addb
scas
or
xchg
movl
call
add
add
in
jnp
hlt
inc
insl
and
loop
jge
mov
stc
call
addl
scas
or
and
mov
test
lods
mov
sub
dec
sbb
stos
or
jb
push
dec
lcall
test
stc
mov
xor
mov
test
lods
mov
push
aam
loopne
lret
lret
add
add
add
clc
leave
sub
in
ljmp
pusha
add
out
push
inc
int
mov
mov
lods
sub
cs
add
lret
test
ljmp
add
int
adcb
push
xor
or
out
add
shrb
inc
sti
pop
subl
cmp
repz
inc
fildl
xorl
and
shll
pop
test
push
in
test
int
mov
out
jae
imul
xor
fstpt
adcb
xor
mov
cmp
fidivs
add
xchg
stc
stc
scas
cmp
in
add
stos
outsb
cmp
jno
add
stos
add
add
add
dec
mov
add
sub
cmp
jmp
xor
inc
mov
inc
push
call
into
add
cs
push
call
push
add
aas
xchg
repz
jmp
sub
inc
lret
jl
leave
mov
imul
out
push
lret
add
add
add
add
adc
jne
cmpl
inc
loopne
add
xchg
test
jge
add
idiv
mov
loopne
pop
add
ret
jg
idiv
mov
inc
insl
push
lahf
xlat
idiv
mov
enter
loop
ret
cli
pop
jnp
loopne
cli
testl
add
add
add
ret
mov
imul
test
idiv
out
es
adc
push
stc
test
mov
inc
sbb
add
xabort
data16
hlt
test
sbb
sub
dec
fnstcw
xabort
pop
sar
es
adc
aam
test
es
sbb
loopne
dec
add
vpsubb
add
add
jmp
test
and
lods
add
cld
leave
or
xchg
ret
jl
sar
jb
push
inc
push
out
and
add
add
pop
repnz
xor
leave
leave
inc
xchg
out
js
push
test
in
push
fildll
enter
inc
cld
call
add
mov
inc
mov
and
imul
add
es
flds
push
mov
ds
mov
call
and
mov
and
or
cmp
incb
pushl
jb
fldl
sub
sbb
sub
js
out
mov
jl
jl
jae
push
push
ljmp
jge
fs
or
mov
add
add
jl
adc
mov
push
ljmp
jge
daa
mov
clc
jmp
es
aam
mov
push
ljmp
call
sub
adc
sub
jae
movsl
dec
cli
push
mov
jl
jb
cld
je
jge
or
idiv
inc
test
add
add
add
mov
jne
mov
xorl
and
nop
sarb
push
xorl
push
sbb
inc
xorl
dec
or
adc
std
nop
mov
stc
inc
hlt
cmpl
lods
mov
idiv
push
dec
push
add
mov
in
shl
pop
inc
adc
add
add
add
fs
mov
mov
repz
test
test
xbegin
loopne
dec
add
push
jp
stos
dec
add
xbegin
add
enter
jge
fcomps
clc
xor
jp
cmpsl
inc
add
and
clc
sbb
jne
hlt
test
sbb
add
add
add
mov
stc
cmp
dec
add
mov
jge
add
call
enter
addb
jmp
mov
dec
lock
xchg
dec
in
lds
add
hlt
rol
xchg
gs
fdivr
cmp
mov
mov
cli
bound
cli
fisttpl
mov
lds
sub
fcmovnu
mov
lds
add
add
jp
add
out
sub
fucomi
mov
fldl
mov
mov
rcll
push
lds
ret
loopne
stos
and
push
add
mov
add
mov
call
stos
mov
jnp
popf
mov
fs
mov
cmp
je
dec
mov
add
xchg
arpl
mov
push
add
xor
xor
repz
sub
adc
xor
fbstp
xor
xchg
mov
xor
xlat
sbb
sqrtps
cmp
ljmp
clc
add
fldcw
sub
stc
inc
in
cmp
mov
pop
cmpsb
clc
je
fmuls
call
add
add
sub
inc
cld
mov
mov
je
push
jnp
sti
push
test
hlt
lcall
sti
insb
sbb
loop
call
sub
sti
jae
gs
test
mov
incl
push
add
std
out
je
out
out
jp
pushf
aaa
add
idivb
jp
add
add
clc
mov
mov
push
in
jmp
mov
es
adc
xor
jge
test
jae
add
negl
cmpsb
xor
imul
mov
mov
addl
jno
clc
insl
fcoml
nop
inc
mov
or
std
out
xchg
hlt
and
ret
add
add
fwait
lret
add
add
push
mov
xchg
out
out
test
mov
fs
cmp
test
mov
lock
jmp
add
pop
push
ret
gs
cld
std
jae
xchg
cmp
rcll
lods
lret
mov
roll
sbb
sub
stos
mov
jle
sbb
sub
stos
cli
mov
add
add
xor
add
lock
cmp
icebp
or
mov
test
call
sub
adc
scas
jmp
pop
aaa
mov
repnz
scas
mov
ljmp
call
mov
add
mov
jae
push
cmc
imulb
mov
clc
add
add
add
lock
sub
clc
xor
xlat
jmp
xadd
mov
scas
push
push
ljmp
clc
stos
jb
adc
clc
add
add
repnz
sbb
call
ret
lahf
jl
jmp
std
cmp
test
sbb
adc
cmp
add
decb
adc
add
add
add
and
jmp
les
or
or
add
sarl
call
outsb
cmp
bndldx
call
ret
fcoml
shrb
jle
push
int3
cmp
pop
cld
test
add
sub
pop
stc
push
and
aas
jns
dec
call
aaa
inc
push
outsb
popf
fimuls
sbbl
mov
add
fisttpll
cmp
clc
mov
bound
or
movsl
add
pop
fisttpll
js
popl
js
cld
jl
movsl
mov
ljmp
jg
cld
or
shll
mov
or
sbb
addr16
add
gs
imul
mov
out
outsl
popf
loop
jo
push
mov
popf
or
xor
sbb
cmp
jp,pn
or
bound
add
pop
add
lods
inc
call
stc
jae
je
out
jns
adc
scas
inc
call
loop
inc
lds
in
cwtl
sahf
mov
sub
jmp
mov
out
add
add
add
gs
in
lods
xchg
rcll
or
wbinvd
sbb
cwtl
push
mov
test
jns
ja
clc
call
out
iret
stos
dec
inc
sbb
fmull
stc
jb
inc
mov
dec
stos
insb
test
orl
in
cmpb
jmp
mov
mov
add
add
add
jmp
jns
inc
stc
icebp
out
dec
sub
ljmp
scas
movsl
lods
aam
test
add
or
inc
in
cmp
inc
sbb
js
and
cmp
sbb
call
in
push
call
test
or
jge
add
arpl
shlb
mov
add
roll
add
add
sbbl
clc
jae
pop
pop
clc
fsubrs
insb
aaa
adc
cli
je
pop
dec
clc
cwtl
push
insl
push
out
inc
clc
decl
icebp
std
out
adc
xor
in
std
out
ret
sub
mov
mov
inc
add
push
out
in
jl
mov
mov
add
add
add
cltd
cld
test
cwtl
idivl
filds
bnd
lcall
rcl
idivb
or
ret
movsl
mov
movsb
lret
das
add
call
kmovw
das
add
stos
movsl
stos
ds
mov
lods
fbld
sti
movsl
ret
out
add
add
add
add
jecxz
pop
inc
cmp
pop
add
add
sbb
xchg
mov
repnz
xchg
jmp
out
sub
scas
mov
stos
and
add
outsl
lds
jle
or
fdivs
fnstsw
or
cs
xchg
push
cli
mov
out
add
jo
pop
insl
add
add
add
cwtl
inc
fidivs
test
clc
jnp
push
call
push
lods
mov
jmp
dec
stc
mov
in
in
jmp
push
inc
hlt
mov
jnp
out
es
xchg
out
clc
jbe
out
jmp
fs
mov
push
clc
jl
jmp
scas
clc
ds
mov
test
add
add
jb
sbb
repz
add
jmp
mov
sub
call
pop
idiv
add
or
jge
add
sub
loopne
cltd
push
clc
call
sbb
xchg
mov
jnp
inc
test
or
cld
jp
psllw
call
inc
test
jmp
mov
test
add
add
add
out
orl
adc
movl
mov
add
jg
pop
cwtl
repz
push
mov
jns
adc
cmpsl
mov
incl
aam
mov
scas
sbb
jae
sbb
sub
push
cmc
lods
clc
inc
and
push
out
aam
jl
mov
add
add
aad
add
cltd
cld
test
cwtl
idivl
filds
jge
fcomps
scas
clc
loope
idivb
sub
mov
mov
mov
repz
cwtl
push
mov
cmpsl
and
std
xchg
int
mov
ret
gs
js
jae
sti
test
cmpsb
mov
cmpsl
movsl
addb
add
add
push
or
test
jbe
inc
cmpsl
movsl
stos
bound
std
add
jecxz
inc
or
cmpsb
xor
cmpsl
out
out
add
add
add
add
pop
jb
cmpsb
out
out
add
add
add
mov
out
add
jae
cmpsb
call
in
add
mov
std
add
xchg
sbb
clc
jmp
add
add
jmp
mov
clc
mov
add
cmp
add
jmp
movsl
clc
cmp
add
rcr
movsb
clc
jmp
in
add
push
movsl
clc
mov
cwtl
movsb
clc
jmp
in
add
sbb
movsl
clc
inc
clc
add
lods
jp
clc
jmp
in
add
test
cli
add
dec
dec
movsl
clc
add
add
add
movl
add
xlat
mov
jmp
sub
add
xchg
add
add
mov
add
aaa
push
cld
call
add
add
idiv
jmp
xor
incl
add
inc
add
add
sar
cmp
add
adc
cld
incl
add
pop
add
add
adc
add
xor
incl
add
add
pop
add
add
add
add
sar
lcall
push
cld
out
cltd
cld
out
cltd
cld
out
dec
iret
cld
leave
mov
push
mov
cltd
cld
out
mov
cltd
cld
out
cltd
cld
out
cltd
cld
out
cltd
cld
out
cltd
cld
out
addr16
cld
imul
cld
push
mov
cld
dec
and
cld
add
add
add
cld
cmp
cld
xor
cld
and
cld
adc
mov
cld
add
cld
stc
cmp
ljmp
mov
shlb
xchg
mov
mov
mov
push
mov
lcall
mov
andb
add
jp
mov
mov
out
add
ret
push
ret
dec
mov
sub
cmp
bnd
mov
add
add
rcll
dec
rorb
aam
add
clc
gs
clc
icebp
scas
movsl
clc
pop
scas
movsl
clc
pop
scas
movsl
clc
inc
scas
movsl
clc
pop
scas
movsl
clc
xor
movsl
clc
mov
add
add
scas
movsl
clc
aad
movsl
clc
ret
scas
movsl
clc
jmp
mov
add
mov
or
clc
fisubs
ja
movsb
clc
sbb
clc
cmpl
clc
lahf
mov
movsb
clc
repz
movsb
clc
add
movsb
clc
sbb
rcll
cld
sti
adc
incl
adc
incl
add
add
mov
cld
lcall
adc
pushl
adc
call
das
cld
lcall
cs
pushl
das
cld
lcall
cld
jmp
cld
call
xor
ljmp
cld
call
das
cld
pushl
adc
cld
lcall
das
cld
jmp
das
cld
incl
cld
jmp
xor
decl
xor
jmp
add
add
jmp
cld
out
movq
adc
jo
or
cld
add
jo
stc
loop
cld
icebp
push
outsl
cld
jmp
dec
jo
fnstcw
jo
shll
cld
rorl
cld
mov
fs
cld
mov
jbe
cld
xchg
cld
mov
aam
sbbl
aam
jno
sar
imul
push
add
pop
sahf
push
cld
dec
andb
fs
cmp
gs
sub
outsl
imul
sbb
mov
sub
mov
mov
cli
lahf
push
lahf
fsubrs
lahf
pusha
push
lahf
dec
push
lahf
xor
lahf
sbb
lahf
jl
ret
push
lahf
test
lahf
push
push
lahf
sahf
imul
add
add
xchg
lahf
into
imul
lahf
call
insb
push
les
jl
pop
lahf
mov
insb
dec
lahf
nop
insb
inc
lahf
push
insb
cmp
clc
aaa
fwait
pushf
clc
setae
das
sbbl
xchg
pushf
clc
aad
pushf
clc
jmp
pushf
clc
jne
popf
clc
inc
push
popf
clc
xor
clc
cltd
inc
popf
clc
insl
add
add
add
clc
outsl
push
popf
clc
roll
clc
lahf
inc
popf
clc
mov
adc
popf
clc
incl
popf
clc
and
pushf
clc
sub
popf
clc
inc
clc
pushf
clc
pop
loopne
clc
int
pushf
clc
pop
jecxz
clc
dec
fistpl
add
adc
fstl
cld
call
adc
cld
incl
cs
incl
add
add
mov
incl
add
add
ljmp
sti
incl
add
add
add
adc
add
into
add
adc
add
xchg
pop
sti
jmp
sti
lcall
add
add
pop
sti
push
push
sti
call
push
sti
call
push
sti
inc
push
sti
lcall
pop
sti
decl
pop
sti
call
push
sti
inc
push
sti
lcall
pop
sti
out
fbstp
cld
inc
movsl
mov
add
add
add
mov
mov
sub
cld
and
cld
sbb
mov
or
cld
add
cld
stc
fdivs
cld
jmp
adc
cld
rcll
leave
stos
cld
out
daa
mov
cld
mov
mov
out
jnp
cld
cltd
test
cld
mov
add
mov
add
jno
mov
cld
popa
add
push
pushf
dec
pushf
rol
inc
pushf
in
mov
xor
shlb
or
sbb
rorb
inc
rolb
cmp
cli
fwait
pusha
repnz
mov
ljmp
rcr
or
rcrb
cwtl
rol
mov
fwait
mov
mov
roll
add
add
fwait
add
fwait
push
rcll
mov
sbbb
ret
fisubrl
clc
out
das
pushf
clc
fldcw
pushf
clc
lret
das
pushf
clc
jge
pushf
clc
mov
pushf
clc
xchg
xor
fwait
das
pushf
clc
outsl
das
pushf
clc
push
das
pushf
clc
dec
das
pushf
clc
inc
sub
pushf
clc
mov
pushf
clc
xchg
sub
popf
clc
jns
add
add
lods
popf
clc
cmc
mov
clc
std
stos
popf
clc
pop
mov
clc
bts
clc
cmp
mov
clc
or
mov
clc
xor
popf
clc
inc
stos
popf
clc
add
sti
incl
sti
jmp
ret
sti
ljmp
sti
lcall
ret
sti
lcall
ret
sti
ffreep
sti
in
ret
push
sti
incl
sti
incl
mov
sti
incl
add
add
cmc
mov
sti
fnstsw
sti
inc
mov
sti
pushl
mov
sti
decl
sti
cmp
stc
pop
sti
incl
sti
call
mov
sti
inc
mov
sti
out
pop
mov
cld
jns
ret
cmpsl
cld
out
mov
cld
popa
pop
popf
sar
add
add
add
cld
out
pop
int
inc
sbb
cld
cmp
into
cld
xor
int
sub
cld
and
int3
cld
sbb
int
or
cld
add
int3
cld
icebp
ds
jmp
cmp
cld
fnstenv
mov
cld
leave
mov
aam
mov
jp
cld
test
push
out
out
add
add
add
add
out
cmp
out
xor
out
sub
out
subb
cwtl
dec
mov
out
adcb
adc
dec
cwtl
hlt
add
add
cmp
test
sub
add
and
out
xor
out
sbbb
add
in
out
adc
out
sub
out
sbb
out
add
rclb
out
add
add
add
cmpb
mov
jecxz
out
cmp
pop
xchg
clc
in
add
mov
lahf
xchg
clc
fwait
lahf
xchg
clc
test
xchg
clc
addr16
clc
push
cmp
clc
mov
xchg
clc
lea
xchg
clc
popf
pop
xchg
clc
pop
xchg
clc
mov
xchg
clc
xchg
aas
xchg
clc
int
xchg
clc
mov
in
add
filds
clc
iret
inc
xchg
clc
cmc
add
add
add
xchg
clc
jmp
mov
xchg
clc
movsl
mov
xchg
clc
mov
add
mov
dec
pop
add
popa
gs
iret
pop
inc
scas
out
pop
add
xchg
dec
outsb
jp
outsl
push
pop
loope
dec
jno
pusha
insb
jb
xchg
inc
rcrb
loopne
imul
cmp
loope
gs
imul
outsl
jo
out
pop
push
add
add
add
dec
add
clc
data16
aam
outsb
mov
pop
add
xchg
dec
imul
rclb
imul
je
cld
pop
add
out
je
inc
jno
mov
cmc
pop
inc
out
mov
decb
lds
ja
mov
adc
lret
sbb
adc
mov
sbb
pop
gs
add
add
loop
cld
fucomp
pusha
adc
sbbb
mov
dec
sbb
dec
xor
sub
sbb
inc
aas
outsb
xchg
adc
jmp
arpl
cmpsl
cld
jmp
mov
adc
arpl
adc
add
push
fistpl
sti
push
shrb
and
pop
cmp
das
add
add
add
and
add
mov
pop
std
and
mov
add
xchg
push
mov
je
fidivl
sbbb
or
add
cmp
shrb
inc
xor
and
push
nop
es
daa
mov
push
inc
sbb
add
sbb
add
and
sub
decb
pop
pop
sldt
add
daa
aas
jmp
push
or
insb
int3
and
and
in
sar
movsl
or
mov
xor
xlat
sbb
or
cmpb
lods
push
or
aas
jge
and
testb
add
ds
pop
loope
inc
inc
pop
ds
push
arpl
stc
add
cmc
repz
arpl
add
and
rorl
cmp
sub
mov
xor
add
sti
ds
imul
jmp
fildl
mov
jae
mov
pusha
jb
shlb
ljmp
mov
dec
add
jmp
pop
jb
cmpsl
add
popa
jmp
dec
jb
fistpl
decl
std
ds
add
add
fldenv
sti
in
cmpsb
call
inc
jo
into
dec
jb
fistpl
cld
mov
gs
sub
out
loope
outsb
jge
add
in
lret
cs
dec
in
pop
pop
or
ja
test
ret
repnz
and
dec
leave
and
cmp
and
adc
adc
test
cmp
dec
das
pop
add
add
add
fs
ja
test
inc
repz
faddl
cld
mov
iret
xor
push
roll
push
cld
sub
imul
lret
and
adc
add
push
push
adc
pop
sub
push
or
pop
inc
out
and
shll
add
add
add
add
add
sub
inc
lret
xor
ret
add
cmpsb
adc
sub
aaa
out
pop
add
mov
das
ficompl
ja
int
inc
sub
and
out
add
sub
and
add
mov
inc
js
rcrl
fs
add
add
rclb
sbb
sbb
adc
push
std
xor
and
cmp
lret
inc
fildl
and
xchg
out
ja
add
popf
rcrb
arpl
xor
mov
in
inc
arpl
mov
push
mov
sbb
or
push
in
movsl
push
adc
insb
xor
in
iret
add
add
adc
add
inc
add
mov
outsl
imul
fnstenv
call
out
imul
add
fisubs
imul
pop
dec
mov
arpl
or
fsts
fstps
xchg
out
add
cmp
rcrb
shlb
xchg
in
xor
imul
add
add
fcomps
add
add
ret
inc
fwait
shlb
adc
out
add
sbb
leave
sub
lret
mov
xchg
and
sub
inc
push
push
imul
imul
and
push
je
stos
push
imul
pcmpeqb
or
cmp
add
add
jae
outsb
add
sub
lds
push
out
pop
add
push
insb
rorl
cld
inc
rcll
inc
jae
or
push
jae
outsb
lret
add
mov
out
cmp
xor
adc
or
add
adc
and
andb
sub
add
movlps
dec
adc
rolb
add
add
add
adc
adc
add
adc
adc
or
add
add
lret
cmp
les
and
sub
inc
mov
or
add
scas
and
ja
rcrl
dec
mov
add
inc
imul
and
ficomps
inc
inc
pop
push
push
pop
add
arpl
add
sub
add
addr16
push
xor
pop
or
and
ljmp
rorb
and
sbb
adc
mov
xchg
cmp
mov
iret
ds
into
add
xchg
arpl
sbb
sti
pop
jb
out
ljmp
dec
add
add
add
shlb
stos
add
add
loope
fs
pop
call
inc
scas
fcomps
ljmp
enter
out
fcomps
xlat
pop
add
inc
gs
jae
sbb
imul
in
add
loop
dec
mov
data16
in
imul
in
fs
ljmp
add
pop
cmp
pop
lock
push
out
jo
je
or
push
jb
int3
out
bound
je
add
sbb
lret
in
loop
je
xor
je
int3
aas
arpl
hlt
inc
dec
popl
jae
inc
sbb
out
nop
add
repz
imul
adc
std
adc
out
in
inc
push
mov
push
negl
insl
cmp
add
add
dec
cmpsl
cld
adc
pop
sbb
sbb
mov
inc
pop
sbb
stc
imul
fwait
adc
out
add
push
scas
sbb
and
lds
jne
mov
or
addl
lea
dec
jp
pop
dec
and
dec
pop
out
add
inc
mov
add
add
or
pop
and
pop
sub
add
pop
inc
das
add
cmp
pop
rclb
pop
pop
mov
sbb
or
les
add
xchg
xorl
imul
mov
imul
arpl
daa
imul
arpl
and
pop
fistpl
push
add
add
add
xor
push
out
adc
cmp
flds
add
inc
jb
enter
in
inc
sub
cld
push
arpl
xor
or
sbb
arpl
fnsave
arpl
in
mov
jo
inc
fildll
mov
movl
push
icebp
pop
xchg
inc
add
ficomps
add
add
add
gs
lcall
add
jbe
cmp
fdivl
inc
add
add
aad
je
ret
jns
in
call
gs
dec
jb
jecxz
jae
cmp
clc
bnd
xchg
insb
popa
sti
int3
imul
in
call
aas
gs
addr16
frstor
out
mov
or
add
add
add
sub
dec
adc
cld
mov
fs
pusha
or
out
push
incb
arpl
leave
jp
insl
fstl
add
aad
push
mov
jl
cmp
lea
sub
cmp
addr16
add
mov
xor
xchg
or
or
leave
sbb
in
jb
xchg
add
push
call
add
add
pop
mov
arpl
out
insb
inc
std
add
ljmp
and
push
or
sbb
adc
enter
mov
sbb
adc
add
scas
adc
and
adc
and
sbb
add
and
and
sbb
add
adc
or
xchg
sub
xor
add
add
jp
das
sub
movsl
adc
or
sub
add
sub
sub
repz
or
add
or
imul
pop
add
ss
stc
ds
xor
inc
out
cmp
rclb
insb
xchg
push
push
arpl
clc
pop
arpl
add
adc
cmp
loopne
insb
xchg
add
add
push
push
arpl
xlat
pop
arpl
add
lods
out
insb
pop
stos
adc
push
roll
add
movsb
adc
ljmp
adc
pop
es
sti
or
xlat
jmp
fxam
imul
pop
add
stc
dec
imul
cmp
insb
push
call
insl
gs
in
add
add
add
sti
clc
dec
push
xchg
ss
je
fidivl
leave
fdivrs
outsl
jno
data16
push
pop
jae
in
outsb
fdivrl
dec
dec
lret
xor
fldt
pop
pushl
add
in
jb
filds
mov
pushl
cmp
out
out
outsb
adcl
out
inc
add
mov
pop
dec
cli
cmp
cmp
add
add
add
push
adc
push
and
cwtl
cld
shr
pusha
adc
mov
inc
adc
ja
jae
inc
or
fdivs
jno
outsl
adc
jae
outsb
shll
mov
pop
add
add
mov
push
insl
out
nop
add
daa
aaa
cmpb
jno
sub
jl
out
push
in
insl
pop
add
sub
add
add
dec
sub
add
xor
inc
sbb
adc
cmp
add
push
adc
adc
rcrb
out
add
add
and
sbb
aaa
or
and
or
add
nop
and
adc
add
pushl
rorl
out
add
xchg
lea
dec
sub
add
add
lea
out
ljmp
and
mov
add
aas
arpl
pslld
or
push
jmp
adc
cmp
fucomi
push
jmp
shl
cmp
std
hlt
jb
rolb
add
in
shll
in
pop
mov
sar
pop
in
shll
call
inc
popl
ljmp
add
shll
fildll
pmaddwd
mov
shrb
fxch
bound
loopne
dec
flds
add
int
pop
lods
fildll
out
bound
pop
add
add
sub
adc
xor
dec
add
aas
add
popa
outsb
jecxz
outsl
push
repnz
push
aas
gs
rcrb
pop
gs
add
add
je
mov
je
stos
rcrb
add
add
add
dec
cmpsb
adc
adc
sahf
sbb
cmp
test
pop
jb
adc
lds
add
inc
add
imul
add
push
cltd
outsb
cltd
imul
je
rcrb
pop
aaa
add
in
cmp
je
adc
fs
pop
inc
imul
add
add
or
dec
push
or
pop
cmp
dec
add
pop
inc
cmp
pop
inc
and
cmpsb
push
imul
mov
call
shlb
xor
out
in
inc
lret
fwait
xor
mov
push
xchg
adc
out
push
cld
cmp
mov
dec
cltd
mulb
outsb
scas
add
add
and
mov
aas
push
xchg
in
push
xor
in
inc
xor
add
add
add
aas
push
dec
out
sbb
add
pop
loopne
xor
adc
add
sbb
inc
in
sub
out
xor
add
inc
lret
ret
into
add
scas
sbb
or
loope
add
test
daa
mov
mov
int
xchg
add
add
xor
add
add
xchg
out
xchg
add
sub
les
add
arpl
add
fucomip
ret
into
into
bound
add
pop
in
mov
imul
mov
and
push
fdivl
cld
loope
jmp
shl
dec
or
insl
std
mov
into
jmp
jmp
aam
pop
into
int3
ljmp
add
ljmp
in
push
xchg
or
bound
inc
add
add
pop
outsb
movsb
sbb
push
pop
jae
and
cmpsl
add
sbb
pop
push
cmpsb
pop
pop
push
xlat
lcall
add
adc
push
out
je
loopne
inc
jne
adc
ret
and
frstor
pop
je
jmp
rclb
add
clc
sbb
dec
je
or
mov
add
or
aas
cmp
imul
pop
push
and
and
andb
pusha
sbb
out
iret
add
xchg
sub
mov
fs
test
mov
lahf
cld
cmp
rclb
arpl
ret
out
add
dec
jle
adc
je
cmp
inc
add
add
add
xor
inc
pop
pop
insl
cmp
jnp
dec
inc
or
addr16
or
out
adc
je
push
pop
push
sbb
mov
pop
add
push
push
adc
inc
sub
jno
mov
je
add
add
jecxz
das
out
andl
mov
lret
hlt
mov
out
add
xor
add
add
sub
sbb
inc
adc
add
push
dec
loopne
pop
sub
xor
xor
add
add
in
xor
pop
call
out
xor
adc
psubsb
prefetch
or
out
aad
out
add
sub
rolb
rcrl
push
out
leave
and
add
xlat
in
cmp
add
xchg
icebp
out
mov
add
out
mov
xlat
in
mov
in
fucomi
cmp
stc
iret
data16
out
cmp
out
sub
std
cmp
fbld
insl
sub
fldcw
add
sub
cmp
bound
ljmp
in
cwtl
jmp
loop
sub
push
fisttpll
push
ds
lock
int
shrb
add
add
add
aaa
add
xor
pop
outsb
mov
mov
add
std
dec
ja
or
xchg
pop
imul
jo
into
add
das
inc
dec
push
sbb
insb
jae
push
movsb
daa
add
insb
std
inc
gs
popa
outsb
mov
outsl
push
mov
pop
inc
xlat
add
adc
je
xor
insl
push
repz
or
adc
je
add
add
add
sbb
jmp
add
imul
popa
mov
gs
mov
cld
lock
xchg
push
pop
int
sub
fidivs
inc
imul
je
test
jae
lea
imul
dec
mov
push
cmp
mov
sub
out
and
inc
xchg
int
arpl
add
add
xorb
in
and
push
and
arpl
push
imul
add
in
push
adc
dec
and
jo
je
arpl
push
pop
bound
add
and
fdivl
add
mov
push
mov
add
xor
loop
and
jmp
add
and
leave
orl
xchg
add
add
add
add
ret
dec
push
jge
push
pop
xchg
sub
add
adc
adc
push
fldl
and
fimuls
sub
xor
or
dec
in
add
repz
adc
mov
add
out
leave
pop
stc
ret
clc
aad
mov
in
push
jmp
mov
in
jmp
add
push
ljmp
add
insl
nop
jmp
dec
nop
loop
pop
popf
call
inc
ljmp
loop
jae
clc
in
dec
mov
aad
jmp
fsubr
outsl
pop
mov
outsl
ds
inc
dec
cmc
add
jbe
xor
inc
inc
in
insl
push
cmc
mov
ljmp
fsubr
outsl
adc
stos
adc
fistps
imul
add
add
adc
movsl
adc
stos
cmp
dec
or
xlat
decb
cmp
imul
inc
gs
add
add
pop
outsb
xchg
arpl
imul
outsb
inc
add
pop
adc
adc
jne
mov
push
stos
jne
jmp
incb
stos
outsb
dec
push
or
gs
push
add
push
push
add
add
add
imul
fildll
imul
or
add
outsb
shrb
add
in
insl
sbb
adc
out
cmpsb
repnz
dec
out
fmull
fnsave
out
mov
lods
in
push
mov
jl
rorb
sbb
test
gs
div
push
add
add
add
xlat
ljmp
add
adc
out
push
adc
imul
ja
add
add
pushl
dec
ret
inc
movb
sub
sbb
call
push
into
or
aas
loopne
clc
or
xorl
testl
fistl
in
stos
call
fldlg2
xchg
cmc
add
add
add
push
add
int3
fstl
mov
test
nop
lock
cmpl
ret
loope
cli
mov
pop
aad
out
aas
repnz
into
dec
in
out
dec
clc
pusha
mov
insl
inc
ret
sbb
out
insl
add
aam
adc
jno
and
mov
pop
fdivrl
jae
add
add
add
fisubrl
pop
jecxz
enter
xor
bound
inc
fidivl
sub
insb
mov
outsl
popf
jecxz,pt
mov
in
sub
xor
sbb
mov
pop
pop
or
xor
cli
in
ds
data16
imul
mov
jb
jne
push
bnd
popa
add
add
add
cmp
js
js
add
add
jbe
jo
inc
push
imulb
dec
mov
pusha
add
je
dec
ss
inc
ss
add
aas
gs
inc
pop
outsb
xor
push
pop
push
inc
jae
fs
dec
jb
ja
push
popa
fs
add
add
jbe
jbe
push
sahf
pop
dec
outsl
mov
push
out
loopne
add
add
add
sar
loope
add
shl
dec
cs
inc
sub
bound
in
jb
push
jmp
push
out
add
insl
jecxz
cmp
sbb
push
das
or
sub
pop
call
test
test
out
shrl
out
fidivrs
dec
iret
in
rolb
in
imul
add
add
faddl
push
cmc
in
mov
pop
xchg
add
cwtl
repz
xlat
icebp
outsb
cltd
add
mov
cmp
aas
loopne
stc
dec
out
fwait
add
int3
sub
in
jmp
fdivr
xor
in
or
out
stc
call
repz
out
loop
mov
add
mov
add
hlt
mov
add
add
add
lock
push
outsb
pop
add
aam
mov
sahf
add
add
hlt
xchg
ret
cwtl
and
add
hlt
je
mov
jmp
stc
fstpt
add
cmp
icebp
addr16
aad
arpl
vpunpckldq
int
bound
repnz
sbb
icebp
addr16
inc
sbb
out
bound
mov
sar
add
add
add
add
loop
stc
mov
fisubl
rcrb
push
mov
ja
push
xlat
insb
rolb
push
jmp
dec
icebp
addr16
rorb
sbb
cltd
in
out
jno
push
jle
insb
data16
add
jae
outsl
popa
outsb
fwait
cmp
lods
add
popa
dec
pop
inc
jae
pop
push
and
addr16
push
clc
incl
add
add
lds
push
popa
sti
pop
cmp
jo
ljmp
add
decl
push
gs
popa
pop
jo
aas
clc
jl
push
popa
fwait
pop
inc
popa
fwait
popa
pusha
push
inc
arpl
push
add
push
gs
addr16
add
push
out
xor
mov
out
call
xchg
dec
mov
add
add
rolb
add
and
jae
ret
out
dec
enter
ror
call
arpl
cmp
vdivss
dec
std
iret
push
inc
pop
cld
sbb
or
mov
jae
or
mov
ds
pmaxsw
in
jae
cmp
insb
iret
inc
dec
dec
cld
inc
shlb
bnd
add
add
mov
out
xchg
in
in
add
mov
loopne
mov
outsb
rolb
imul
rcrb
call
and
xor
inc
into
xor
push
fisttpl
cmp
push
lock
fcoms
jecxz
out
or
cs
rcl
popa
add
out
or
sbb
in
jmp
add
add
add
add
fidivl
ljmp
int
mov
sub
push
frstor
xlat
inc
fwait
push
clc
in
sub
and
pop
jge
ret
imul
push
jge
sub
add
imul
repz
jmp
mov
pop
inc
aad
bound
cltd
int3
jb
vpcmpeqd
add
add
add
daa
add
xchg
ret
sahf
loop
adc
mov
push
xchg
fisubrs
in
aad
pop
add
inc
sub
mov
arpl
push
insb
insl
ss
clc
pushl
dec
insb
gs
arpl
je
clc
dec
std
ds
test
imul
std
cmp
pop
insb
gs
xor
insb
imul
sub
push
cld
cmp
fs
gs
gs
jno
sti
inc
cmp
movl
gs
jo
in
inc
pop
je
add
add
outsb
pop
popa
addl
loopne
ret
inc
insb
inc
xor
arpl
xor
pop
fimuls
fsubr
xchg
fldcw
lods
flds
pop
cld
or
fwait
in
lods
call
dec
mov
add
add
add
out
flds
pop
cld
lahf
in
mov
jae
mov
jae
mov
add
sarl
leave
nop
std
dec
dec
es
das
hlt
push
adc
rolb
and
add
out
push
int
sbb
dec
push
fcmovnu
aad
mov
shll
add
int
mov
xchg
out
in
mov
fbld
shr
ret
xchg
loopne
in
mov
lahf
fnstsw
adc
add
fldl
loopne
in
out
lmsw
shll
mov
inc
lock
xor
sub
inc
out
repnz
cld
add
shl
mov
jecxz
aad
add
add
rcr
sar
add
sub
add
add
add
repnz
add
push
popf
daa
dec
add
loop
lods
in
iret
dec
test
jecxz
fucomip
js
pop
jecxz
enter
rorb
push
lds
pop
lea
popw
mov
fistps
fs
adc
and
and
std
icebp
push
jg
shrl
leave
les
int
pop
jmp
mov
jae
test
add
add
mov
fisubs
iret
jae
push
icebp
push
xor
and
test
jo
pop
dec
jns
push
pop
insl
aam
addr16
xor
jmp
cmp
push
cmp
pop
push
mov
push
add
add
push
dec
jb
addr16
inc
pop
jb
push
insb
outsl
jne
clc
call
cmp
push
cmp
add
add
add
popa
data16
pusha
pop
je
jb
outsb
and
addr16
std
sbb
add
push
sbb
push
bound
sub
jb
push
pop
imul
pop
data16
hlt
sti
jae
imul
xor
mov
jae
cmc
in
jae
outsb
jecxz
rcll
push
mov
loopne,pt
out
inc
shrb
call
add
lret
cmp
inc
xchg
fcos
and
inc
mov
jl
jbe
mov
push
out
mov
loop
bound
mov
cld
cltd
out
and
jae
sub
bound
or
bound
mov
imul
xor
sbb
in
xor
testl
arpl
add
in
repnz
add
add
fst
clc
int3
out
fcmovb
push
arpl
add
ret
icebp
mov
call
xchg
shl
ret
add
call
nop
in
xor
shl
pop
add
loop
in
sub
dec
shll
add
add
loop
fdivl
dec
in
and
dec
jb
imul
add
add
in
mov
imul
jmp
stc
jns
push
dec
in
mov
imul
xor
push
jmp
cmp
outsl
lcall
jb
and
inc
mov
in
mov
bound
mov
js
fildll
ljmp
iret
in
bound
fidivs
add
add
add
in
dec
pop
int
jb
mov
imul
pop
pop
arpl
clc
lcall
push
repnz
jno
out
pop
inc
loope
popa
insb
negb
gs
lahf
add
pop
insb
gs
pop
je
pop
pop
fs
inc
fs
cltd
std
inc
je
insl
dec
sub
gs
pop
jae
dec
clc
call
ds
add
add
add
push
test
outsb
jno
dec
add
addr16
xor
gs
ss
popa
out
mov
fildll
leave
loop
and
dec
out
and
jae
sub
arpl
testl
cli
incl
push
loope
add
jecxz
mov
xchg
mov
cmpsl
cmpsl
rcll
add
add
inc
fsubrs
xchg
mov
sub
pop
call
clc
out
xchg
loope
ret
jp
insl
test
xchg
incl
cld
dec
xchg
aad
outsl
xchg
repnz
pop
add
pop
fildl
out
fstps
push
leave
push
push
add
adc
and
cmc
xor
in
loopne
pop
loopne
das
out
lds
rcll
add
or
aam
repz
pop
aam
int3
push
lds
int3
out
mov
sarb
or
in
loop
add
mov
negl
pop
sbb
mov
fwait
icebp
mov
xchg
xchg
add
cltd
loop
add
add
lret
shl
jmp
outsl
jmp
in
pop
push
add
add
add
pop
clc
push
out
jo
leave
out
dec
in
mov
adc
in
push
pop
add
mov
mov
cli
xchg
shrl
dec
call
cld
lds
imul
push
pop
clc
cmp
dec
jmp
insb
mov
or
imul
add
cmpsb
push
rolb
sub
push
test
in
data16
inc
outsb
add
add
add
dec
add
add
gs
dec
popa
and
push
xlat
add
decl
data16
inc
push
popa
pop
push
sub
imul
cmp
imul
inc
dec
push
into
fwait
inc
cs
fs
or
jnp
popa
insb
cli
xor
imul
addl
sub
gs
dec
popa
outsb
sub
incl
add
add
aas
add
data16
cmp
add
gs
jnp
jb
jns
imul
testb
push
sbb
push
mov
arpl
loop
bound
mov
aad
inc
int
pushl
push
shrl
leave
fldenv
or
loope
add
fldt
add
jae
pop
cld
push
out
cli
loopne
int
hlt
jae
add
add
roll
imul
push
out
imul
out
imul
out
imul
out
add
add
add
add
add
daa
scas
add
and
add
add
add
add
add
add
daa
cs
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
bound
out
out
add
add
out
out
add
add
add
add
add
incl
out
ss
sti
add
add
add
add
test
icebp
add
imul
pop
clc
icebp
in
add
loope
add
leave
in
add
jle
add
jmp
in
add
jmp
add
add
jmp
cmc
aas
jmp
in
add
jmp
in
add
jmp
jbe
inc
jmp
in
add
sbb
or
in
add
jmp
leave
or
in
add
jmp
jne
aas
jmp
inc
lcall
stos
cmpsl
adc
incl
pop
mov
in
sub
add
add
add
jmp
lds
xchg
mov
sti
cmpsl
lods
adc
cmc
and
out
mov
iret
xchg
add
std
mov
ja
inc
scas
cmpsl
cwtl
inc
stos
jge
popl
xorl
pop
out
pop
ffreep
lret
inc
js
fmuls
jae
inc
sbb
arpl
es
aaa
fnsave
roll
add
mov
hlt
inc
dec
lcall
sub
shr
jl
mov
adc
inc
pop
xchg
prefetch
cmc
stos
sahf
sar
icebp
pop
fisubs
xor
jg
sahf
test
sub
adc
lods
jl
cmp
ret
mov
mov
cmp
cmp
rolb
mov
add
add
add
mov
popa
test
rolb
loopne
aam
ret
mov
pop
add
test
shl
cmp
push
jle
mov
aas
int3
int
add
add
and
sbb
and
sbb
repz
xor
cmp
test
pop
es
add
lock
push
rclb
mov
fidivrl
add
add
add
movsl
stos
lahf
xchg
pop
daa
sahf
pop
jmp
icebp
jge
pop
sub
sbb
pushf
insb
push
dec
mov
movsl
imul
fwait
dec
pop
add
mov
cltd
xchg
jl
cmp
les
jns
adc
dec
lea
js
jae
add
push
or
mov
mov
fildl
add
add
xchg
mov
mov
xchg
test
or
and
push
pop
sbb
dec
push
ja
test
fiaddl
ss
dec
test
int3
or
xlat
cmp
or
adc
stos
cmp
ss
cmp
xchg
mov
arpl
push
or
mov
jecxz
jae
cmp
cmp
jne
lret
cmp
add
add
and
adc
in
sub
dec
jb
cmp
enter
lahf
lods
xor
cmp
inc
mov
fsubrl
popa
push
fs
xchg
mov
pop
clc
jno
mov
icebp
xchg
pop
bound
xchg
out
adcl
push
jne
repnz
cltd
xlat
hlt
addr16
incl
add
add
out
addr16
out
xchg
aas
out
addr16
out
addr16
out
addr16
out
addr16
out
addr16
out
addr16
out
mov
out
addr16
out
addr16
out
fs
cmp
out
imul
out
int
cmp
out
imul
out
sahf
cld
cmp
out
imul
incl
add
add
out
sbb
cmp
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
call
add
add
add
add
add
enter
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
call
add
add
add
jmp
icebp
adc
jmp
in
add
jmp
add
jmp
in
add
jmp
loop
add
in
add
jmp
in
add
in
add
jmp
in
add
jmp
jecxz
add
add
add
add
add
jmp
in
add
aaa
add
add
in
add
jmp
in
add
repz
add
in
add
jmp
in
add
and
add
incl
xchg
add
incl
mov
add
incl
incl
inc
xchg
add
incl
add
add
inc
incl
std
test
add
incl
incl
call
incl
incl
decl
xchg
add
std
inc
std
inc
std
jmp
std
inc
std
out
addr16
out
jl
out
addr16
out
addr16
out
rorl
out
addr16
incl
add
add
out
addr16
out
jp
cmp
out
addr16
out
addr16
out
push
test
out
addr16
out
addr16
out
jo
cmp
out
addr16
out
addr16
out
pop
mov
out
addr16
out
addr16
out
xchg
mov
out
pop
cld
out
pop
cld
out
das
adc
out
add
add
add
add
add
add
add
add
out
add
loopne
out
out
add
add
add
add
add
rolb
add
add
add
add
add
add
push
and
out
out
add
add
add
add
add
pop
add
out
out
add
add
add
add
add
loopne
out
out
add
add
add
add
add
push
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
jecxz
add
in
add
jmp
in
add
jge
adc
jmp
in
add
jmp
in
add
in
add
jmp
in
add
flds
add
in
add
jmp
in
add
arpl
verw
in
add
jmp
in
add
xor
add
add
in
add
jmp
in
add
mov
verw
in
add
jmp
in
add
dec
push
push
add
movl
add
xlat
add
add
and
add
add
add
add
add
out
cmp
xchg
add
xchg
add
xchg
add
add
xchg
cmp
xchg
add
xchg
add
push
add
add
add
add
add
add
inc
add
add
add
ret
add
add
inc
add
add
add
add
cmp
pop
add
add
add
add
add
add
add
add
add
add
push
cld
out
lahf
fwait
aas
out
push
cld
out
push
cld
out
push
cld
out
loop
aas
out
push
cld
out
push
cld
out
push
cld
out
xchg
inc
aas
out
push
cld
out
push
cld
incl
add
add
out
push
cld
out
mov
cld
out
push
cld
out
push
cld
out
jecxz
aas
out
push
cld
out
push
cld
out
mov
aas
out
sarl
out
jg
aas
out
out
aas
out
lret
fistpll
out
stos
fistpll
out
fcmovnu
aas
out
mov
aas
out
mov
aas
out
mov
aas
out
add
fildll
add
fistps
add
fists
add
filds
add
add
add
add
fcomip
add
fucomip
add
add
fcomp
add
fcom
add
fmul
add
fdivrs
add
sub
mov
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
mov
add
jmp
add
add
add
add
jmp
in
add
jmp
in
add
push
hlt
xchg
ss
cmp
adc
fs
xlat
dec
ss
shl
xor
sub
hlt
or
gs
mov
cmp
aam
cmp
inc
cmp
add
cmp
hlt
hlt
cmp
hlt
in
cmp
in
cmp
in
cmp
add
add
add
or
test
pop
dec
clc
shr
add
aas
jmp
mov
lahf
out
ds
ds
out
ds
fstpt
repz
ds
sti
ds
out
aas
mov
out
aas
and
aas
add
dec
aas
jecxz
pop
aas
xor
imul
out
aas
add
mov
and
fwait
aas
jae
stos
aas
add
mov
aas
add
add
add
out
aas
and
aas
inc
pop
clc
jmp
out
or
and
sbb
jecxz
sub
add
cmp
out
fwait
or
ficoms
or
mov
fisttpl
mov
mov
or
push
sbb
int3
push
adc
fcompl
cld
or
push
or
or
xor
sbb
sti
or
fcomip
or
add
add
add
sbb
pop
fistpll
or
mov
mov
or
pop
pushf
or
pop
xchg
or
pop
jl
in
call
or
lcall
or
xor
sbb
add
push
fimull
adc
loop
stos
adc
mov
lret
adc
orb
push
push
push
push
push
push
dec
push
lcall
push
add
add
add
adc
push
ficoml
repz
ljmp
adc
loop
sub
xor
adc
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
in
jmp
in
or
incb
lods
jmp
add
add
loope
xor
stc
aam
mov
les
insl
jmp
xor
xchg
xor
test
sub
loope
xor
lock
xor
call
in
or
mov
xor
xor
fildll
fistps
pop
cmp
movsl
ljmp
lods
lcall
add
add
add
repz
push
cmc
and
pop
ss
sub
pop
xor
inc
neg
aaa
mov
div
aaa
ret
idiv
aaa
or
pop
cmp
ljmp
jecxz
pop
cmp
ljmp
inc
in
cmp
mov
daa
ljmp
jnp
mov
arpl
mov
cmp
add
add
xlat
jecxz
cmp
jecxz
cmp
in
cmp
in
cmp
call
push
enter
adc
and
sbb
and
and
xor
sub
adcl
jmp
push
cmp
jecxz
inc
fistl
pop
push
lret
arpl
fs
das
pop
insb
mov
xchg
pop
subb
pop
mov
aam
nop
sbb
pop
cwtl
adc
pop
mov
add
add
sti
add
cmp
xchg
adc
adc
dec
loopne
adc
add
pop
rclb
adc
mov
push
mov
push
insb
ljmp
dec
add
add
adc
psllq
out
jecxz
push
adc
adc
adc
adc
adc
adc
adc
or
and
cli
sbb
mov
add
add
add
or
sbb
or
pop
cmc
add
pop
adc
add
jns
imul
pop
push
add
lahf
pop
cltd
add
push
int3
add
add
fadds
cmp
fstpt
push
add
cmp
sti
idivl
mul
out
sbb
test
or
fdivrs
xchg
cmp
add
add
add
cmp
dec
inc
clc
fucomp
add
ret
das
mov
xchg
loope,pn
sub
jg
and
int3
stc
mov
xor
lock
loopne
xor
clc
mov
xor
jmp
xor
add
test
shr
aaa
xlat
loop
ss
sti
pop
aaa
add
cmc
jb
adc
lea
push
cmc
sarl
adc
pop
cmp
add
add
push
repz
cmp
out
xchg
ds
out
mov
ds
out
es
jb
cmp
pop
outsl
clc
ljmp
jmp
out
sahf
xor
xor
jecxz
adc
aam
push
ljmp
push
ljmp
xchg
inc
xor
ljmp
push
insb
xor
ljmp
test
mov
add
dec
ljmp
ret
cli
mov
pusha
pop
mov
inc
or
mov
or
les
mov
pop
or
or
call
or
push
or
fcmovne
push
rcll
adc
shrl
push
sbb
out
and
into
push
rorl
add
dec
add
add
add
rcll
cld
pusha
adc
std
pop
adc
std
xchg
ds
imul
adc
inc
or
in
fisttpll
pop
mov
or
pop
sbb
or
sbb
xor
mov
adcb
or
sbb
or
or
or
or
or
or
push
ljmp
add
add
mov
add
daa
or
aam
fisttpll
clc
cld
xlat
rsqrtps
popf
jl
std
push
adc
std
cltd
push
data16
call
push
cmp
call
test
js
outsb
cmp
fsubp
cmp
fistpll
cmp
inc
clc
popa
in
add
hlt
fstpl
add
add
lea
popa
fstpl
das
loope
or
cs
cld
sub
add
ficoml
sub
fisubrl
xor
pop
xor
push
into
xor
stc
lcall
fsts
fs
mov
cmp
je
js
sbb
and
jmp
pop
dec
aaa
mov
add
add
push
or
cmp
or
cmp
or
cmp
or
lcall
or
jecxz
jns
cltd
or
cmp
adc
popf
adc
cmp
lret
ds
push
cmp
call
add
push
xor
hlt
xor
jp
test
std
imul
add
add
add
daa
pop
dec
jecxz
pop
mov
lds
mov
jne
ss
adc
fwait
adc
mov
fists
pop
mov
rclb
sbb
adc
adc
adc
stos
adc
stc
mov
repz
add
out
add
jge
outsl
pop
add
in
out
rolb
mov
or
mov
or
add
add
add
lcall
pop
add
imull
or
divl
arpl
xor
into
cli
fmuls
add
cli
mov
daa
cli
xor
adc
std
jle
cmp
cld
aas
paddd
jnp
stos
sti
lahf
pmaxsw
out
popa
cmp
iret
adc
lock
cmp
mov
call
repz
pop
dec
repz
add
add
enter
sub
cmp
push
adc
cld
insl
adc
inc
adc
mov
xchg
sub
cmp
loope
cmp
lock
jmp
push
cmp
loop
cmp
aas
cmp
ljmp
popf
in
add
cmc
das
popa
fstl
das
cmp
mov
mov
jne
nop
add
add
add
es
call
cs
sub
fcmovu
je
sbb
xor
clc
cmpsl
xor
add
xor
lcall
loop
xor
cmp
imul
pop
lret
or
cmp
or
jns
jo
arpl
jb
inc
or
cmp
or
cmp
or
cmp
add
add
xchg
or
stc
or
cmp
or
cmp
add
cli
or
cmp
or
aam
jmp
cmp
orl
dec
ds
push
sarl
movsl
push
add
or
aam
pop
das
stc
ljmp
adc
xor
test
adc
push
add
jae
movsb
adc
pop
and
and
adc
add
rclb
call
std
stc
adc
fucom
adc
fldl
adc
adc
ret
pop
mov
iret
mov
mov
into
sbb
arpl
fisttpll
lcall
cmpps
add
cmc
sti
sub
or
inc
push
sub
jnp
ss
or
adc
add
add
repz
int3
icebp
mov
or
mov
cwtl
clc
cwtl
or
testl
pop
divb
xchg
idivb
mov
add
xor
cmc
push
pop
add
pusha
pop
data16
mov
push
sti
mov
or
add
and
ds
add
adc
icebp
cmp
lock
adc
out
cli
adc
add
out
jnp
in
loop
ljmp
mov
fidivs
mov
mov
sbb
jmp
dec
in
ss
loopne
xor
cmp
xor
out
cmp
call
movsb
cmp
in
cmp
in
cmp
hlt
cmp
std
aaa
clc
popf
in
add
in
fisttpll
neg
fldt
inc
add
add
add
mov
gs
xchg
das
xchg
std
pop
das
mov
cld
xor
loopne,pn
sub
mov
fildl
sub
xor
or
xor
hlt
xor
adc
xor
adcl
cmp
mov
xor
add
test
push
push
enter
out
fiaddl
sub
xchg
add
cmp
add
add
jns
jo
or
movsb
cmp
add
cmp
fdivrl
mov
in
cmp
or
or
popa
cmp
or
cmp
ljmp
aas
out
popa
add
icebp
test
add
sub
out
sub
ficomps
pop
mov
adc
mov
popf
adc
add
or
and
pop
adc
inc
adc
jmp
adc
decl
adc
faddl
jl
leave
or
mov
ret
lret
mov
test
pop
mov
stos
or
sbb
inc
push
sbb
push
add
or
stc
jg
xor
in
or
test
or
add
add
add
clc
xchg
or
cli
int
jge
or
js
pop
sti
xchg
cli
mov
xchg
cli
jb
mov
stc
or
insl
or
rolb
push
cmc
cwtl
pop
hlt
cmp
mov
adc
push
hlt
outsb
or
imulb
push
divb
push
jbe
rolb
in
cmc
fiaddl
cmc
fiadds
testb
pop
idiv
sti
add
add
add
cli
cmp
mov
cmp
jge
js
cmp
cmp
cmp
inc
cmp
repz
jmp
repnz
add
add
std
xchg
jle,pn
cmp
lods
incl
sub
ret
fimuls
xor
mov
cmp
add
xchg
lock
xor
jecxz
xor
add
add
add
out
es
xor
xor
xorl
ss
les
and
add
xor
popf
add
aaa
cmp
cmp
scas
pop
xchg
cmp
or
cmp
sti
clc
cmp
sti
inc
cmp
hlt
std
push
ds
std
test
aas
pop
std
les
hlt
cld
fnstcw
cs
call
pop
stc
incl
add
add
xchg
dec
setno
adc
pushl
ret
xor
adc
xor
add
xor
cmp
xor
cmp
xor
and
or
sbb
notl
adc
pop
sbb
imulb
in
idivb
cmpsl
testb
mov
lahf
jecxz
mulb
imul
cmc
ret
daa
testb
aaa
mulb
add
add
add
adc
imulb
dec
idivb
movsl
cmc
mov
xor
sbb
cmc
repnz
and
add
hlt
xchg
loope
hlt
mov
loope
hlt
add
jmp
xor
clc
sti
xor
dec
cld
push
stc
cmp
stc
mov
cld
and
stc
cld
stos
notl
std
shl
push
cld
gs
cld
js
lods
cld
add
add
add
clc
mov
cld
sbb
jl
sbb
aad
clc
divb
lods
not
std
jge
fdivr
pusha
idivl
pushf
testb
negb
mov
jns
movsl
cmc
add
enter
fdiv
test
decl
cmc
xchg
ljmp
imul
hlt
incl
je
and
stc
cmp
jno
cmp
add
add
imul
cmp
cmc
cmp
out
add
jmp
in
add
leave
cmp
sahf
das
sbb
jge
pop
and
das
mov
cli
sti
cs
cld
mov
data16
add
xchg
aam
or
sub
ret
jne
inc
mov
xor
add
sub
xor
push
aaa
cmp
xor
pop
sub
ss
sub
or
imul
sub
aaa
push
sub
cmp
cs
cmp
sub
sub
das
sub
inc
cmp
sub
jl
subb
jno
pushf
cmp
lods
cmp
mov
add
and
sbb
cmp
xor
cmp
jb
pusha
cmp
jecxz
stc
test
in
stc
iret
rcll
cli
jmp
rorb
mov
das
stc
dec
sub
clc
jb
mov
clc
mov
aad
xchg
or
cmpsb
add
jl
xor
add
out
pop
in
or
sub
adc
cmp
and
add
add
fidivrs
in
dec
mov
repnz
in
cmp
sbb
xchg
in
push
std
xchg
in
pop
std
inc
in
gs
add
repnz
nop
repnz
xchg
cld
sbb
or
nop
in
pushf
add
aas
add
add
xchg
jo
stos
add
add
hlt
js
lahf
repz
repnz
stc
add
add
add
repz
xchg
repz
iret
repz
xchg
repz
lahf
repz
xchg
repz
outsl
hlt
insb
clc
ja
push
clc
pop
hlt
dec
clc
push
hlt
test
dec
hlt
mov
xchg
repz
clc
lahf
repz
xchg
repz
scas
repz
mov
lcall
dec
xor
mov
xor
mov
xor
cmpsb
pop
xor
cmpsb
das
xor
xchg
daa
xor
fwait
pushl
repz
fildl
add
add
jnp
xor
addl
or
xor
pusha
xlat
xor
pop
out
xor
pusha
out
sub
xor
inc
mov
sbb
iret
xor
inc
xor
cmp
xor
sbb
mov
and
and
pusha
aaa
jmp
push
dec
xor
stc
aaa
cmp
repz
cmp
ljmp
jmp
aaa
add
sub
out
add
add
add
add
into
xor
das
das
xor
push
xor
das
nop
xor
das
lahf
xor
das
mov
xor
inc
xor
mov
jno
int3
xor
xor
xor
dec
xor
add
test
ss
xor
aas
aaa
ljmp
aaa
lods
xor
aaa
pop
xor
jnp
cld
aaa
les
cmp
add
add
lods
daa
jo
jne
iret
cmp
repnz
adc
sti
xor
insl
sti
mov
call
insb
mov
cld
out
cmp
sahf
in
or
push
out
mov
sub
pop
ret
jmp
repz
shl
inc
mov
sti
fwait
movsl
cli
adc
pusha
adc
stc
and
cltd
negl
inc
sbb
cmp
add
out
outsb
repnz
add
add
fistpll
fsubrl
cmp
add
pushf
fucomp
lock
fucomi
xchg
mov
xor
cli
mov
jmp
dec
cld
push
call
out
std
jns
adc
mov
out
pushl
xor
stos
out
imull
xchg
clc
fucomi
adc
cli
jmp
out
subb
add
add
repz
test
add
add
add
sub
nop
lock
idivb
out
mov
or
mov
repnz
dec
repnz
sti
stos
call
loop
int
mov
mov
call
ss
xor
pop
loope
xor
fcom
cmp
push
cmp
data16
stos
cmp
or
add
cmpsl
lcall
add
mov
mov
push
subb
leave
jnp
sub
push
jnp
sub
out
mov
sub
pop
sub
jge,pt
outsb
mov
int
out
xor
inc
into
xor
inc
xor
pop
int
mov
xor
push
ret
xor
imulb
pop
aaa
add
mov
mov
in
subl
aaa
in
and
cmp
cmp
and
add
add
sub
sub
cmp
es
mov
and
xchg
cmp
shrb
loop
lea
sub
imul
ds
hlt
stc
dec
cld
incl
sub
jo
shrl
fnsave
shlb
xor
xor
xor
xor
xor
jecxz
out
cmp
fmull
cmp
add
add
mov
sti
icebp
jp
sahf
repnz
mov
nop
repnz
sbb
repz
sbb
div
cmp
jp
movsb
std
stos
repz
repz
leave
call
fptan
out
jbe
pop
cmc
or
cmp
ss
cmc
jb
xchg
cmc
frstor
push
cli
cld
daa
repz
push
adc
cmc
push
adc
psubb
add
add
add
testl
lock
div
leave
out
neg
out
mull
out
testl
div
es
call
add
repz
icebp
ret
icebp
and
cmc
dec
lock
cmc
movsl
lock
xlat
repnz
icebp
fcomip
mov
jno
cmp
out
lret
repnz
repnz
repnz
push
repnz
repz
add
add
repnz
xchg
repnz
repnz
in
inc
lock
jle
jbe
mov
sahf
in
mov
das
in
lods
out
xor
sahf
out
dec
in
ljmp
pop
xor
push
mov
xor
insl
xor
adc
les
repnz
ljmp
into
aam
cmp
push
cmp
mov
es
popf
add
add
add
add
icebp
popf
sahf
das
imul
dec
xor
jle
xor
mov
xor
pop
dec
xor
push
xlat
xor
dec
mov
or
aaa
pop
dec
scas
aaa
add
and
cmp
daa
popf
cmp
sub
lds
pop
and
dec
cld
jmp
xor
xor
rdmsr
and
pop
xor
add
add
dec
das
ret
das
and
pop
xor
xor
adc
xor
xor
movlhps
cmp
push
cmp
sub
cmp
sub
cmp
sub
cmp
sub
aas
xchg
xor
pushl
add
ljmp
xor
das
pop
xor
push
out
cmp
add
push
cld
out
mov
cld
gs
adc
and
dec
add
add
add
cmc
out
out
mov
mov
push
jae
cltd
call
mov
xlat
call
cmc
sbb
jmp
aaa
sti
mov
push
add
jo
lcall
fucomi
jmp
neg
inc
ljmp
mov
add
in
ljmp
add
sti
add
add
add
jmp
sti
and
jmp
in
adc
adc
in
iret
call
pop
in
test
dec
in
dec
call
sbb
insb
jmp
jns
fsubp
iret
in
mov
cld
in
and
into
out
fs
icebp
arpl
cmp
icebp
and
repnz
xchg
repnz
loop
repnz
loop
repz
and
add
add
add
out
add
rep
icebp
jno
pop
icebp
aaa
hlt
test
in
bound
pop
pop
jecxz
cmp
sub
jl
test
test
inc
sub
iret
and
sub
sbb
xor
xor
push
loop
jne
cmp
daa
cmc
sahf
xor
cmc
mov
xor
pop
xor
aam
xor
add
add
les
ljmp
aaa
cmpps
cmpsl
xchg
shlb
xchg
les
xchg
test
aaa
jbe
pop
aaa
inc
xchg
push
aaa
add
push
sarb
adc
out
pop
push
hlt
cmp
cmp
cmp
adc
cmp
add
dec
cmp
adc
jb
xchg
adc
xchg
cmp
adc
add
add
into
cmp
xor
sbb
sub
lret
aas
call
adc
pop
adc
aas
push
adc
aas
sub
repz
xchg
xor
call
add
adc
mov
xor
inc
mov
gs
je
test
mov
push
pmuludq
pop
hlt
in
cs
ljmp
loop
add
add
incl
cld
mov
insl
icebp
xchg
int
mov
add
and
aad
jb
add
mov
mov
mov
dec
imulb
and
in
push
pmulhw
sub
sbb
hlt
das
jmp
in
jmp
in
jmp
aad
pop
in
stos
in
jle
xchg
out
pop
fdivrl
out
xchg
fdiv
out
add
add
add
mov
out
ret
out
outsb
fldl
call
ficomps
dec
ficoms
mov
out
sub
push
add
add
cmc
jno
call
repnz
repz
aam
clc
in
aad
stc
in
adc
mov
shl
jge
cmp
aaa
fmul
in
inc
fistpl
lock
cld
lock
dec
icebp
add
add
add
std
nop
into
cmp
pop
sbb
jno
add
mov
jnp
cs
jg
sub
pop
pop
je
dec
pop
pop
sub
fnstcw
imull
cmp
cmp
and
aaa
push
or
test
pop
push
xor
jns
jnp
stos
add
xor
aam
cmp
add
add
add
jge
ljmp
cmp
fsubrs
cmp
lret
xor
add
sbb
pop
cs
aas
shrb
sarl
into
cs
call
add
add
adc
xor
adc
xor
adc
lret
xor
sub
adc
xor
rdtsc
xor
add
add
mov
pshufw
sahf
xor
sbb
xor
push
or
call
adc
xor
xor
xor
add
dec
clc
dec
repnz
cmpsb
icebp
mov
loopne
icebp
neg
adc
sarl
push
mov
mov
mov
and
in
es
in
push
in
add
add
add
popf
in
push
popa
in
push
inc
in
testb
sub
out
in
out
in
xlat
ret
xlat
mov
in
mov
out
mov
out
sub
sbb
push
jmp
rclb
add
in
stc
in
loope
in
or
push
out
scas
fidivl
in
lods
fldt
xchg
fwait
sbb
add
add
add
add
add
rcrb
repz
repnz
popf
repnz
sarl
repnz
in
or
aad
icebp
call
dec
repnz
out
xor
adc
add
rcl
repz
pop
in
fcompp
cmp
lcall
in
cmpsl
cli
out
jmp
adc
jb
call
pop
sbb
shr
add
add
add
add
xchg
sub
mov
pusha
xor
pushf
and
xchg
mov
ss
xchg
clc
jmp
in
add
push
subb
add
sub
pop
out
cmp
dec
in
xor
jmp
jmp
add
aaa
cs
cmp
movsl
and
sub
sbb
and
xor
mov
xor
add
add
add
enter
test
add
sub
cmp
mov
daa
pop
cmp
aam
das
cmp
push
sub
cmp
je
dec
cmp
je
pop
cmp
push
sub
pop
sub
aam
jg
fsubrl
xchg
mov
and
cmp
add
add
add
cmp
pop
and
cmp
jl
xlat
cmp
pop
and
cmp
mov
loopne
sub
out
and
out
sbb
out
adc
out
or
out
add
in
clc
and
lock
mov
and
loopne
in
fsub
in
sar
in
enter
rorb
loopne
add
call
add
add
add
add
clc
and
out
sbb
out
adc
out
or
out
add
out
stc
add
sub
cli
out
jmp
ljmp
sar
out
leave
add
jmp
stc
pop
out
repz
into
add
add
repz
iret
push
icebp
mov
into
dec
icebp
lahf
iret
mov
mov
imul
fildl
out
add
add
mov
xlat
and
scas
xlat
sbb
mov
out
adcl
add
add
repz
cmp
dec
rcll
cmc
call
ljmp
int3
shl
ds
jmp
icebp
xchg
int
icebp
pop
int
icebp
jl
lret
fdivr
cmp
jle
aaa
sbb
les
pop
adc
xor
add
out
mov
add
add
add
mov
cmp
cmp
sbb
push
enter
nop
jno
mov
data16
mov
cmp
in
adc
pop
jmp
add
jge
das
test
movsl
das
bound
sub
ljmp
ficomps
cs
inc
mov
test
dec
cs
cmp
sub
add
adc
add
add
add
adc
xchg
adc
xor
adc
xor
mov
mov
int
inc
aaa
xor
movsb
aaa
xchg
es
dec
daa
sti
aaa
mov
popa
cmp
mov
js
mov
cmp
sub
cmp
sub
cmp
sub
cmp
sub
cmp
sub
cmp
and
cmp
cmp
and
cmp
and
cmp
add
add
jle
cmp
inc
cmp
sub
out
in
out
in
out
in
xlat
int3
in
xlat
into
in
mov
in
mov
in
mov
in
daa
mov
in
pop
pop
in
pop
pop
in
pop
jno
flds
in
test
in
out
out
in
out
aam
out
aam
out
les
out
add
add
add
ss
mov
out
mov
out
and
out
and
out
adc
out
adc
out
add
out
add
jmpw
imul
xlat
jns
test
xchg
dec
xlat
jmp
pop
xlat
jno
sub
xlat
mov
and
mov
jmp
jge
jecxz
jmp
xlat
call
or
pop
jmp
add
xlat
sbb
sub
fsubrs
call
insb
xlat
pop
call
inc
xlat
xor
jg
out
out
lret
aam
out
aam
out
pop
out
aad
or
cmp
dec
es
dec
mov
cmp
sbb
add
fstpl
sub
mulb
push
jle
add
add
sbb
add
mov
sub
in
xlat
sub
cltd
mov
sub
cltd
sbb
int
mov
mov
xor
cmpsl
divl
or
xor
xchg
cmp
adc
add
sti
ljmp
push
sub
xor
adc
pop
aaa
dec
cmp
add
add
mov
push
cmpsb
aas
sub
clc
incl
cs
jmp
cld
lcall
jle
xorb
cmp
cmpb
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
mov
push
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
and
dec
add
add
add
xchg
fucomp
sbb
mov
out
sbb
mov
cmp
lods
cld
xor
add
out
push
rcl
fadd
shlb
imul
fidivl
xlat
jmp
mov
xchg
aad
mov
xor
les
adc
sbb
cmp
loopne
dec
push
neg
push
idivb
aam
mov
pushf
cld
test
lret
shlb
add
add
add
mov
aad
sar
mov
mov
int
fisubrs
out
bound
xchg
add
add
rorl
add
loop
aam
aam
aam
roll
vmaxsd
adc
aam
aam
aam
aam
aam
aam
aam
aam
xlat
lret
aam
xlat
mov
inc
fmuls
aam
xlat
xchg
aam
xlat
cmpsl
aam
xlat
add
add
add
aam
xlat
ljmp
xlat
dec
push
fldt
lret
repnz
int3
neg
dec
int
fidivs
iret
call
in
add
pop
lcall
imul
sub
inc
fnsave
in
mov
xor
and
daa
ss
adc
xor
sbb
xor
xor
mov
add
add
cltd
xor
adc
jp
add
xor
lds
push
mov
xor
mov
xor
movsl
and
movsl
adc
into
bound
mov
cld
cmp
mov
cs
aas
addr16
push
aas
mov
fs
aaa
das
je
pop
test
out
xchg
aas
mov
movsb
aas
mov
mov
pop
les
out
aam
add
add
add
sub
hlt
aas
inc
xchg
sti
incl
add
xor
pop
xor
out
and
pop
xor
xlat
xor
xor
xor
xor
xor
xor
xor
sti
jmp
add
xor
das
mov
xor
ret
xor
xor
out
lret
int
fnsave
shlb
ret
inc
mov
add
add
ret
cmpl
rol
sbb
shl
and
rolb
sbb
and
push
xlat
inc
sti
imul
add
mov
fisttpl
jecxz
xor
add
sub
and
adc
inc
mov
rcl
cmpl
rol
sbb
jecxz
jbe
add
shll
add
inc
stc
jmp
rcrb
add
add
stc
add
aam
aam
aam
aam
aam
aam
aam
aam
aad
aam
aad
aam
aad
aam
aad
aam
aad
aam
aad
aam
aad
aam
aad
aam
aad
aam
aad
aam
aad
aam
aad
aam
aam
aam
aam
aam
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
add
add
add
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
add
call
inc
inc
call
incl
call
incl
call
call
incl
add
add
inc
incl
call
call
incl
incl
call
call
incl
incl
call
call
incl
incl
call
std
call
std
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
incl
add
add
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
add
add
add
add
jmp
in
add
jmp
in
add
jmp
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
push
add
add
add
inc
add
add
add
push
add
add
add
inc
add
add
add
pop
add
add
add
add
add
add
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
incl
add
add
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
in
add
jmp
add
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
add
add
jmp
in
add
add
incl
call
call
incl
incl
call
call
incl
incl
call
call
inc
inc
call
call
inc
inc
call
incl
incl
add
add
xchg
call
incl
call
incl
incl
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
incl
add
add
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
pop
cld
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
add
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
xchg
add
add
add
add
add
push
add
add
add
inc
add
add
add
push
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
add
out
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
add
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
xchg
call
incl
incl
add
add
xchg
incl
call
call
incl
incl
call
call
incl
incl
call
call
incl
incl
call
call
incl
incl
call
call
inc
inc
call
call
incl
add
add
out
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
add
out
out
add
out
add
out
add
out
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
add
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
xlat
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
xchg
add
xchg
add
add
add
add
add
add
add
inc
add
add
add
push
add
add
add
inc
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
out
out
add
out
add
add
add
out
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
add
out
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
add
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
in
add
jmp
pop
add
add
add
add
add
add
add
add
add
add
add
add
call
inc
inc
call
call
inc
incl
add
add
call
incl
call
incl
call
call
incl
incl
call
call
incl
incl
out
cltd
das
mov
sub
fcompl
push
pushf
popf
inc
rorb
jne
cmpsl
shll
add
add
pushf
pop
pop
inc
sbb
lods
stos
push
add
mov
out
mov
repz
or
mov
sub
sbb
mov
das
in
inc
leave
loopne
fnsave
sbb
xorl
mov
cmp
cmp
sbb
and
and
push
inc
cs
jg
jl,pn
add
add
add
inc
jbe
nop
xor
xor
sub
xchg
sub
and
xchg
in
cmp
push
lock
xchg
jns
in
cs
iret
cmp
xlat
movsl
fildll
add
lret
fldl
bound
mov
jecxz
pop
pop
cmp
aas
jg,pt
daa
pop
mov
cli
sbb
cmp
mov
daa
ds
add
add
add
ret
jnp
add
shll
in
jns
aad
int
scas
pop
mov
pop
fisubs
sub
dec
test
mov
loop
mov
and
mov
rclb
test
inc
push
adc
lods
dec
jbe
fldcw
pusha
cmpsl
push
add
add
add
inc
ret
mov
add
ret
sub
stos
shll
sbb
and
out
std
movsb
sbb
mov
jbe
outsl
sub
sahf
mov
inc
sub
les
push
jns
xor
mov
ret
xor
xorb
inc
aad
jno
or
sbb
add
iret
mov
int
imul
add
add
add
dec
insl
add
push
adc
fldl
mov
mov
push
jae
andb
inc
jno
aad
mov
out
jge
xor
sbb
inc
or
in
out
push
repz
jmp
dec
int
fisubs
sub
arpl
into
dec
jle
test
dec
in
mov
int3
mov
inc
or
add
js
jmp
push
ret
fwait
jnp
push
inc
push
xor
dec
jp
xor
add
pop
or
cmp
mov
xorl
aas
xor
dec
push
mov
jp
sbbl
cmp
mov
loope
push
sub
in
inc
fmull
out
inc
clc
jne
clc
mov
add
add
ja
call
mov
ja
lock
clc
mov
ja
cld
sub
out
add
jmp
jns
hlt
insl
ret
cmp
mov
jns
hlt
adc
jp
lock
add
ja
faddl
lods
in
inc
add
add
add
add
scas
jae
mov
cmc
mov
std
scas
or
add
add
push
js
in
jne
in
stos
in
mov
add
dec
ds
jmp
xor
mov
ret
int3
cmp
int3
sub
sbbl
call
mov
push
call
subl
add
add
jne
call
push
xor
mov
push
add
add
out
push
add
add
cltd
push
mov
sub
mov
les
add
add
ja
hlt
and
or
js
cld
gs
jl
in
inc
add
push
call
push
stos
add
mov
cmp
add
mov
int3
xor
int3
fwait
ja
mov
add
add
add
js
xor
or
cmp
pop
lods
mov
int3
stos
mov
in
xor
dec
mov
stc
push
incl
test
inc
out
dec
ret
int3
mov
mov
int3
sbb
sbbl
add
add
in
inc
add
sti
js
inc
out
jns
clc
fadds
inc
out
ja
clc
sahf
fdivrs
idivb
cld
add
add
add
adc
push
add
jne
or
push
hlt
mov
dec
ret
int3
fwait
ja
push
mov
hlt
add
add
jmp
jne
cld
insl
roll
xor
mov
es
adc
std
dec
cld
stc
mov
mov
std
add
cli
lods
adc
mov
add
out
aad
ljmp
ret
int3
cmp
int3
sub
add
add
add
add
jne
mov
loopne
inc
out
dec
ret
int3
cmp
int3
sub
in
sbb
mov
jge
add
stc
jnp
out
add
mov
stc
mov
jge
or
jne
or
or
mov
aad
mov
in
add
ja
cld
gs
hlt
cmp
cmc
jae
add
add
add
hlt
mov
icebp
pop
mov
aas
sar
jge
add
mov
jne
lock
fdivp
pmaxsw
mov
jne
or
add
out
dec
clc
jne
adc
stos
adc
or
jnp
or
jne
or
ds
mov
stc
call
mov
inc
ret
int3
cmp
ficompl
add
add
jns
in
fmull
ljmp
mov
add
out
jns
lock
data16
jl
add
add
lock
loopne
stos
loopne
js
add
test
add
aam
push
jne
loopne
mov
push
notl
ja
hlt
mov
insb
sbb
testb
mov
add
add
mov
jl
or
cmp
mov
aad
pop
gs
loopne
sub
add
jns
hlt
jne
loopne
and
add
addr16
in
xor
add
out
add
adc
insb
pop
mov
loope
cmp
insb
inc
xor
add
out
add
add
popa
mov
jnp
orl
adc
fwait
in
mov
adc
idiv
add
add
add
push
call
xorl
mov
fistl
mov
xor
add
cmp
cmc
jmp
cmpb
aad
push
stos
js
mov
in
add
ja
hlt
gs
subl
mov
add
ja
loopne
div
incl
mov
int3
sbb
addl
add
add
addr16
inc
add
add
cmp
inc
out
jns
clc
sahf
fdivs
std
xor
add
ja
cld
jne
adc
dec
add
gs
push
or
or
sub
in
fimull
cmp
test
push
inc
out
ja
add
push
jmp
ret
int3
stos
mov
int3
sbb
sbbl
add
add
cmp
mov
xor
jne
add
pushf
ja
hlt
gs
mov
jns
clc
addr16
hlt
mov
jae
insb
inc
insl
arpl
add
cld
xor
inc
and
dec
es
sbb
dec
or
jns
clc
xor
mov
mov
jns
adc
sbb
aad
mov
js
mov
add
add
inc
jmp
cmp
rcl
ljmp
rol
mov
mov
int3
stos
mov
int3
cmp
sbbl
xor
out
pop
cld
add
add
push
push
push
hlt
lcall
mov
push
ja
clc
lahf
ja
lods
loopne
add
out
jecxz
hlt
dec
popf
push
inc
out
jg
movsb
add
add
add
cmp
add
add
jmp
ja
add
inc
add
cli
cld
jmp
aas
add
pushf
push
xor
add
sbb
xchg
mov
add
test
add
add
mov
pushf
push
inc
out
pop
enter
push
inc
out
ja
aam
cmp
push
pushf
push
inc
out
push
mov
push
call
addl
add
add
hlt
mov
in
dec
or
push
jecxz
mov
inc
ret
int3
sub
mov
outsl
decl
add
inc
ret
int3
mov
int3
stos
mov
int3
cmp
sbb
mov
add
jne
or
fmuls
idiv
push
cmp
dec
loopne
sub
pop
mov
or
add
add
ja
call
out
jne
int3
clc
cmp
push
inc
xor
call
mov
push
pop
add
out
add
scas
cld
ljmp
loope
lock
fmull
mov
dec
mov
dec
call
subl
mov
add
aad
mov
in
add
ja
hlt
jne
loopne
jns
cmp
add
add
and
jae
gs
andl
add
inc
call
sbb
inc
adc
loopne
pop
and
mov
sub
mov
icebp
cmpsb
inc
adc
inc
push
jne
or
cmp
gs
call
inc
cli
push
call
xorl
mov
jge
sub
call
in
fadds
cld
add
add
add
loopne
repnz
mov
push
mov
dec
test
sti
enter
add
jne
rclb
add
inc
mov
cmp
out
push
adc
imul
push
jb
mov
mov
mov
movsl
push
inc
out
jmp
push
push
mov
xor
xor
lock
add
cmp
insl
push
pushf
push
mov
add
push
push
jne
hlt
push
test
notl
mov
mov
mov
gs
add
mov
mov
xor
sub
push
mov
movsb
push
inc
out
xor
xchg
lcall
push
mov
add
add
mov
mov
in
mov
add
out
add
loopne
movsb
push
inc
out
sub
lea
aam
inc
add
cmc
fwait
push
stos
add
mov
push
call
insl
les
mov
mov
in
xor
mov
in
inc
out
xorl
movsb
loopne
add
or
push
xor
push
mov
rorb
out
xor
jne
fdivp
addl
add
add
inc
add
inc
stc
incl
popa
push
mov
int3
push
inc
out
das
call
subl
mov
mov
push
gs
loopne
jecxz
push
inc
out
add
mov
inc
add
sub
decl
cmpb
add
adc
add
lea
fsts
cs
add
add
add
in
push
inc
out
xor
push
lcall
add
add
mov
int3
int3
stos
int3
int3
cmp
mov
cmp
int3
stos
int3
int3
sbb
mov
gs
mov
stos
add
add
int3
int3
fwait
mov
push
xchg
inc
cld
aas
out
lahf
les
mov
push
call
add
add
add
or
out
push
gs
xor
push
cmp
mov
cmp
int3
cmp
mov
add
ret
cmp
add
add
xor
add
out
add
add
xchg
addr16
rclb
add
test
repz
adc
testl
repz
add
add
out
add
add
out
jmp
push
inc
out
add
add
jg
rolb
add
fwait
push
mov
add
add
add
enter
add
data16
sti
jo
inc
out
lahf
rclb
add
add
call
inc
out
xchg
mov
jmp
add
push
xor
add
add
add
repz
cld
aas
out
push
mov
pushf
call
add
lahf
fcoms
mov
notl
dec
call
aam
mov
push
call
insl
cld
mov
xor
aad
xorl
add
out
lahf
mov
call
add
idiv
insl
lds
xor
mov
xchg
aad
lock
xchg
fcompl
jmp
add
popf
rclb
stos
add
add
add
xor
add
dec
hlt
push
push
mov
jmp
jle
or
xor
add
mov
jne
hlt
add
test
add
add
add
add
sub
add
out
add
or
clc
subl
clc
in
lock
test
add
mov
in
inc
clc
mov
test
outsl
mov
mov
in
xor
xor
lahf
mov
inc
xchg
jmp
xchg
mov
add
add
jecxz
push
inc
out
or
push
inc
out
or
push
inc
out
call
test
ja
clc
mov
outsl
ljmp
sub
mov
cwtl
push
inc
out
mov
push
call
insl
mov
push
inc
out
xor
aad
fdiv
test
in
sub
out
cmpl
insl
push
enter
add
pushf
push
stos
add
pop
xor
testl
cs
pop
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
int
pop
sbb
xchg
pop
mov
pop
jb
jp
ret
inc
test
sbb
sub
pusha
or
imul
out
sbb
inc
outsl
dec
inc
out
cltd
and
movsl
mov
adc
loope
popa
and
dec
leave
push
loope
cli
leave
lea
push
dec
mov
call
popf
test
repnz
cmp
shrl
call
mov
sarb
xor
dec
outsl
loope
xor
out
fists
push
cmp
xor
adc
xor
xor
push
xor
jno
adc
fadd
jg
rolb
push
lods
dec
pushf
enter
pop
imul
cltd
add
pop
leave
shl
std
negl
aaa
mov
sub
sbb
into
adc
out
sub
xchg
sub
push
add
pop
leave
ds
mov
mov
mov
sti
lea
jge
leave
push
sbb
cli
mov
dec
pop
and
in
pop
jge
xor
pop
push
or
pusha
scas
scas
push
inc
ret
jecxz
or
in
cmp
inc
sbb
and
ss
notb
sub
mov
addb
jge
inc
stos
mov
ss
add
adc
xor
les
das
test
mov
leave
addr16
ret
cmpsb
or
xchg
or
or
imul
adc
push
jge
cmp
cltd
in
inc
or
jae
negl
add
cltd
movsl
jge
xor
jmp
push
or
lock
mov
pop
rorl
loopne
pop
aad
mov
cmpsb
adc
loope
dec
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xor
push
push
dec
inc
push
push
push
dec
dec
add
add
add
add
inc
add
add
jae
je
add
add
add
add
jb
imul
add
js
add
add
add
add
dec
add
push
add
inc
add
inc
add
add
add
jae
add
pop
add
jo
jo
dec
add
add
cmp
xor
inc
add
add
xor
sub
add
add
add
add
add
add
xor
sub
add
xor
xor
inc
add
add
add
add
add
jge
add
inc
fs
jo
xor
add
add
push
gs
jo
outsb
dec
gs
js
add
add
xor
xor
add
add
add
add
lods
ds
add
add
xor
add
inc
add
add
xor
add
add
add
inc
add
add
xor
add
add
add
add
add
add
add
ss
add
ss
add
aaa
add
add
add
add
add
add
add
add
add
aaa
add
add
aaa
add
add
cmp
add
cmp
add
add
add
cmp
add
add
add
cmp
add
cmp
add
add
add
add
cmp
add
cmp
add
add
add
cmp
add
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
cmp
add
cmp
add
add
add
add
add
add
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
cmp
add
add
cmp
add
add
add
add
add
add
add
add
add
ds
add
ds
add
aas
add
add
aas
add
add
add
add
aas
add
add
aas
add
add
aas
add
add
inc
add
add
inc
add
add
add
add
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
add
add
add
add
add
add
add
add
inc
add
add
inc
add
add
inc
add
add
add
add
add
add
add
add
add
add
inc
add
add
inc
add
add
add
add
add
add
add
inc
add
add
inc
add
add
inc
add
add
add
add
inc
add
add
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
add
add
add
add
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
add
add
add
add
add
add
inc
add
add
inc
add
add
inc
add
add
add
add
add
add
add
add
inc
add
add
inc
add
add
dec
add
add
dec
add
add
add
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
add
add
dec
add
add
add
add
dec
add
add
dec
add
add
add
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
ss
add
ss
add
aaa
add
add
add
add
add
add
add
add
add
aaa
add
add
aaa
add
add
cmp
add
cmp
add
add
add
cmp
add
add
add
cmp
add
cmp
add
add
add
add
cmp
add
cmp
add
add
add
cmp
add
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
cmp
add
cmp
add
add
add
add
add
add
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
cmp
add
add
cmp
add
add
add
add
add
add
add
add
add
ds
add
ds
add
aas
add
add
aas
add
add
add
add
aas
add
add
aas
add
add
aas
add
add
inc
add
add
inc
add
add
add
add
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
add
add
add
add
add
add
add
add
inc
add
add
inc
add
add
inc
add
add
add
add
add
add
add
add
add
add
inc
add
add
inc
add
add
add
add
add
add
add
inc
add
add
inc
add
add
inc
add
add
add
add
inc
add
add
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
add
add
add
add
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
add
add
add
add
add
add
inc
add
add
inc
add
add
inc
add
add
add
add
add
add
add
add
inc
add
add
inc
add
add
dec
add
add
dec
add
add
add
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
add
add
dec
add
add
add
add
dec
add
add
dec
add
add
add
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
push
imul
imul
jns
add
jg
inc
jb
popa
je
inc
imul
jae
jb
popa
je
add
addl
imul
imul
jns
add
push
add
imul
insb
insb
outsl
arpl
add
icebp
add
fs
imul
add
and
inc
gs
jb
arpl
fs
jae
add
test
insb
jae
jb
insl
jo
or
gs
push
dec
outsl
arpl
add
add
je
jb
imul
je
outsl
outsb
push
add
mov
inc
jb
jbe
push
jns
gs
add
add
outsb
fs
gs
inc
imul
gs
outsl
insl
insl
inc
outsl
outsb
imul
inc
imul
push
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
dec
outsl
arpl
inc
outsl
insl
jo
arpl
sub
ja
je
push
bound
add
je
inc
outsl
outsb
jae
insb
gs
jne
jo
je
je
jb
bound
add
inc
insb
outsl
jae
dec
popa
outsb
fs
gs
add
je
popa
outsb
fs
gs
outsl
jne
je
add
add
outsb
push
popa
imul
insl
gs
add
lea
jb
je
inc
imul
imul
imul
add
gs
outsb
push
gs
js
gs
imul
gs
into
add
dec
outsl
jae
outsb
popa
insl
gs
outsl
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
dec
add
gs
inc
outsl
jae
gs
arpl
add
add
insb
inc
imul
gs
outsl
outsb
jae
insb
gs
jne
jae
jb
outsl
jae
je
outsl
outsb
add
mov
inc
insb
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
add
add
gs
jns
je
insl
push
imul
gs
gs
push
imul
jne
push
imul
inc
gs
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
sbb
dec
jne
je
inc
jns
gs
outsl
push
imul
xlat
add
je
imul
bound
gs
add
mov
inc
outsl
insl
jo
je
jb
popa
insl
gs
js
add
xlat
add
je
imul
loopne
inc
outsb
jne
inc
popa
je
inc
outsl
jb
popa
je
inc
js
add
addb
gs
outsl
outsb
jae
insb
gs
insb
imul
outsb
addr16
inc
add
test
inc
gs
jne
jb
outsb
je
imul
jns
add
testl
jb
arpl
jae
data16
dec
popa
jae
add
test
inc
jb
popa
je
dec
outsl
bound
push
arpl
add
add
jne
push
dec
dec
popa
outsb
addr16
addr16
add
sub
inc
gs
jb
arpl
jae
outsl
jb
imul
imul
inc
jb
popa
je
push
jb
arpl
jae
add
mov
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
outsb
inc
imul
outsb
addr16
add
sub
ja
je
push
jb
popa
add
cmp
inc
imul
jne
arpl
add
add
jne
push
gs
jne
arpl
jns
gs
add
roll
gs
outsl
outsb
jae
insb
gs
imul
add
je
outsl
outsb
jae
insb
gs
je
insb
dec
popa
outsb
fs
gs
mov
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
inc
gs
popa
jo
push
popa
jb
insl
gs
jb
add
jo
popa
insb
imul
push
add
outsb
fs
imul
gs
js
add
mov
insb
jae
jb
jo
push
add
mov
jo
jb
add
aaa
add
je
push
popa
je
dec
popa
insl
gs
add
bound
dec
popa
outsb
fs
add
pop
add
outsb
je
outsb
jne
inc
bound
inc
jbe
outsb
je
add
bound
dec
gs
outsl
jb
push
je
je
jae
js
add
gs
outsl
outsb
jae
insb
gs
insb
imul
dec
outsb
addr16
push
add
xor
insb
jae
insb
insb
outsl
arpl
add
bound
inc
imul
fs
je
insl
inc
add
add
inc
fs
je
insl
push
add
mov
gs
inc
imul
push
jne
jb
inc
outsl
jae
gs
arpl
add
push
jo
popa
je
push
gs
jne
arpl
add
je
inc
outsl
outsb
jae
insb
gs
add
inc
jb
popa
je
inc
jbe
outsb
je
add
xor
push
gs
popa
insb
jne
add
add
je
je
imul
inc
js
add
dec
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
jne
push
jns
je
insl
dec
popa
outsb
addr16
addr16
jb
jne
jae
add
inc
gs
jae
jb
gs
jne
je
dec
dec
popa
outsb
addr16
add
imul
gs
fs
jb
arpl
jae
gs
outsl
jb
add
inc
gs
jb
imul
imul
inc
gs
gs
jo
popa
je
inc
add
sbb
inc
imul
je
push
dec
outsl
je
imul
outsl
outsb
inc
add
add
popa
fs
imul
jns
push
jae
add
inc
insb
gs
jb
outsl
insl
insl
inc
jb
popa
imul
dec
add
gs
outsl
outsb
jae
insb
add
inc
gs
jne
je
outsl
insl
insl
inc
outsl
outsb
imul
add
popa
fs
outsl
outsb
jae
insb
gs
jne
jo
je
je
jb
bound
add
clc
add
je
jb
arpl
jae
jb
outsl
jb
je
inc
outsl
outsl
jae
add
add
je
imul
gs
add
inc
outsl
outsb
jae
insb
gs
imul
outsl
fs
push
gs
fs
outsl
outsb
jae
insb
gs
jne
jo
je
add
xchg
add
outsl
bound
push
imul
inc
gs
gs
push
outsl
insb
jne
gs
outsl
jne
je
outsl
imul
dec
outsl
jbe
inc
imul
jb
addr16
jae
push
add
add
je
jb
imul
push
add
stc
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
stos
add
je
jne
jb
outsb
je
jb
arpl
jae
fs
add
inc
inc
inc
push
dec
gs
fs
jns
gs
js
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
jb
jno
outsb
arpl
inc
add
outsb
jb
imul
imul
inc
gs
jbe
jb
popa
jo
gs
gs
insb
je
jno
inc
jb
popa
je
inc
imul
jns
add
and
push
insb
gs
js
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
fs
arpl
inc
add
add
outsb
imul
push
outsl
imul
push
gs
arpl
insb
insb
dec
outsb
outsw
add
inc
fs
fs
popa
je
add
pop
add
gs
je
inc
imul
jb
insl
inc
add
aas
add
je
outsb
jne
outsl
outsb
je
js
dec
gs
jo
add
and
inc
push
inc
insb
imul
inc
push
add
inc
imul
add
inc
fs
gs
popa
jae
inc
jb
outsl
jb
pop
add
jae
dec
gs
popa
addr16
add
sub
push
gs
insb
inc
push
imul
outsl
insl
push
outsl
imul
push
outsb
jo
arpl
inc
inc
insb
push
popa
jb
insl
add
inc
imul
je
js
add
imul
push
imul
jae
popl
push
gs
jb
jo
add
push
add
gs
je
inc
popa
jb
je
sbb
push
gs
jae
addr16
add
imul
je
push
imul
popa
je
outsl
outsb
inc
add
xor
inc
gs
gs
outsl
popa
jb
dec
popa
jns
jne
add
add
fs
jne
jae
jb
jb
insl
inc
imul
gs
gs
popa
addr16
add
add
jne
push
jb
jo
inc
add
add
gs
je
dec
outsb
jne
add
push
imul
outsl
outsl
imul
add
addr16
gs
arpl
sti
add
jae
popa
addr16
outsl
js
outsb
imul
add
fs
popa
jae
add
jo
je
push
popa
addr16
add
bound
inc
jb
popa
je
dec
inc
dec
push
imul
add
add
jae
popa
addr16
gs
push
add
je
gs
inc
insb
addr16
popa
bound
gs
add
push
outsb
fs
gs
popa
addr16
imul
add
je
outsl
jns
outsb
jne
mov
inc
gs
insb
addr16
jb
arpl
fiaddl
push
outsb
imul
add
add
jne
push
jb
jo
inc
js
add
and
inc
push
inc
imul
gs
imul
add
sahf
add
je
imul
add
je
insb
imul
inc
outsl
jb
popa
je
popa
insl
gs
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
enter
insb
gs
push
imul
add
ja
arpl
add
mov
push
imul
dec
outsl
outsl
imul
add
je
popa
bound
fs
gs
inc
js
outsb
je
add
mov
outsb
fs
gs
popa
addr16
js
jl
push
gs
gs
outsl
popa
jb
push
je
je
add
push
add
je
jne
jae
jb
cmp
inc
push
jo
jb
jne
push
add
fiadds
inc
outsb
jne
inc
imul
gs
arpl
push
add
dec
inc
dec
inc
push
jb
arpl
add
dec
gs
popa
addr16
js
jb
dec
outsb
outsw
add
jb
popa
je
inc
jne
jae
jb
add
inc
insb
imul
je
or
inc
jo
outsb
fs
outsb
jne
add
add
jae
popa
addr16
outsl
js
js
add
add
push
imul
add
clc
add
jae
popa
addr16
outsl
js
add
add
je
insb
addr16
je
insl
push
gs
push
add
dec
gs
outsl
popa
jb
dec
popa
jns
jne
dec
popa
insl
gs
add
inc
add
je
outsb
jne
je
insl
dec
outsb
outsw
push
add
dec
add
je
outsb
jne
je
imul
add
jae
jb
dec
outsb
jne
je
insl
inc
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
ljmp
imul
popa
je
outsl
outsb
jae
add
push
ja
jb
add
push
add
je
outsl
outsb
imul
push
add
add
insb
insb
dec
jae
inc
imul
and
inc
gs
insb
addr16
je
insl
push
gs
inc
add
add
jae
push
jne
je
gs
popa
add
inc
insb
outsl
jae
push
imul
add
je
imul
outsl
outsl
imul
add
je
imul
js
dec
outsb
addr16
push
add
addb
fs
outsb
imul
inc
add
adc
dec
jo
outsb
inc
gs
je
jo
add
push
popa
je
push
imul
push
add
dec
gs
je
imul
insb
add
inc
imul
add
add
fs
outsb
jne
outsb
imul
into
add
arpl
outsl
jne
gs
jbe
outsb
je
insl
add
inc
bound
outsl
outsb
push
jb
outsb
jae
arpl
outsb
add
push
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
ja
jne
jae
jb
add
add
outsb
jae
popa
je
dec
gs
popa
add
mov
dec
jae
push
jo
popa
push
add
mov
insb
addr16
jne
je
outsb
inc
push
add
sub
inc
gs
arpl
dec
outsb
outsw
add
add
insl
push
outsl
inc
push
add
push
gs
popa
jns
jb
fs
imul
je
imul
add
push
gs
popa
jo
jne
add
push
add
jne
je
insb
imul
inc
outsl
jb
popa
je
add
inc
jb
popa
je
inc
gs
je
jo
add
mov
inc
fs
gs
jae
jb
popa
outsb
fs
add
test
gs
arpl
arpl
add
jne
push
imul
in
dec
outsl
arpl
gs
outsl
jb
addr16
jne
fs
imul
add
insl
push
outsl
inc
push
data16
add
or
dec
gs
push
outsl
inc
push
data16
add
push
push
inc
push
xor
cs
insb
add
pop
add
jo
popa
arpl
gs
push
add
add
inc
push
inc
outsl
outsb
je
add
inc
gs
jo
outsb
inc
imul
add
push
add
je
popa
jbe
inc
imul
add
adc
push
jb
outsb
je
insb
addr16
js
add
add
outsb
fs
gs
push
add
add
addr16
gs
jo
insb
addr16
add
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
adc
push
jb
outsb
je
insb
addr16
js
add
add
outsb
fs
gs
inc
add
inc
outsl
insl
insl
inc
insb
addr16
js
outsb
fs
jb
outsl
jb
add
add
je
imul
inc
add
push
popa
jbe
inc
imul
add
adc
push
popa
addr16
gs
jo
insb
addr16
add
add
imul
add
add
je
imul
push
add
add
outsl
outsl
jae
inc
outsl
outsb
je
add
add
jo
popa
arpl
gs
inc
add
or
inc
gs
jo
outsb
inc
imul
add
add
inc
push
inc
outsl
insb
outsl
jb
add
inc
dec
dec
inc
dec
inc
xor
cs
insb
add
sub
push
gs
insb
outsl
jae
dec
gs
inc
inc
push
inc
push
dec
xor
cs
insb
add
sbb
push
push
outsl
outsl
imul
arpl
rolb
dec
inc
gs
outsl
insb
fs
popa
je
push
add
fiaddl
push
dec
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
push
add
add
outsb
jbe
jb
outsb
insl
outsb
je
jne
jae
inc
add
gs
imul
pop
add
insl
insl
popa
outsb
fs
imul
addr16
add
lds
push
dec
inc
gs
outsb
jae
popa
outsb
arpl
js
insb
outsl
jb
jb
in
push
dec
dec
jae
imul
popa
bound
data16
imul
inc
jb
addr16
jne
jb
inc
imul
push
dec
inc
fs
outsl
push
arpl
je
outsl
arpl
mov
push
dec
inc
gs
popa
je
inc
jb
insl
dec
inc
dec
imul
add
inc
gs
arpl
dec
jbe
jb
popa
jns
outsb
fs
add
mov
insl
jo
jns
arpl
insb
gs
imul
push
dec
inc
gs
arpl
dec
jbe
jb
popa
jns
outsb
fs
add
add
outsb
fs
js
arpl
popa
bound
add
add
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
inc
add
insb
insb
inc
js
arpl
gs
js
add
addr16
jne
jb
inc
imul
push
popa
je
push
jb
jo
jb
inc
outsl
jb
jb
je
inc
add
jl
push
dec
inc
push
dec
outsl
je
data16
add
add
je
popa
arpl
outsl
outsb
inc
js
ja
push
dec
inc
jb
ja
gs
outsl
jb
outsl
insb
fs
add
mov
push
dec
inc
gs
gs
je
jo
outsl
insb
fs
add
outsl
jb
popa
je
jb
jbe
add
add
addr16
jne
jb
inc
imul
push
dec
inc
gs
popa
je
inc
jb
insl
dec
inc
dec
imul
dec
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
outsl
arpl
imul
push
dec
inc
insl
jo
jns
arpl
insb
gs
imul
push
push
bound
je
add
add
gs
insb
inc
js
arpl
gs
js
add
add
dec
outsb
jbe
imul
imul
insl
insl
popa
outsb
fs
add
inc
jb
addr16
imul
sbb
inc
jb
addr16
arpl
jo
inc
imul
dec
inc
gs
imul
add
sub
fs
js
arpl
popa
bound
add
add
arpl
jae
popa
jo
jae
add
add
dec
outsl
popa
fs
outsl
outsb
insb
outsl
popa
fs
arpl
dec
jbe
jb
popa
jns
fs
je
imul
cmpsl
add
inc
imul
je
outsl
outsb
add
jb
gs
popa
insl
gs
popa
jo
imul
add
addr16
jne
jb
push
outsl
imul
push
dec
inc
gs
popa
je
inc
jb
insl
dec
inc
dec
imul
add
inc
imul
je
outsl
outsb
push
add
and
inc
js
jb
arpl
jae
arpl
je
fs
arpl
inc
add
sbb
inc
outsl
inc
outsb
jbe
jb
outsb
insl
outsb
je
jne
jae
push
add
push
dec
inc
jo
inc
popa
jb
gs
popa
addr16
add
dec
outsb
jbe
imul
imul
insl
insl
popa
outsb
fs
add
gs
outsl
insb
fs
outsl
arpl
imul
dec
dec
outsl
popa
fs
outsb
push
jb
arpl
add
imul
je
outsl
outsb
inc
add
icebp
add
push
popa
je
push
jb
jo
jb
inc
outsl
jb
jb
je
push
add
js
push
dec
inc
jb
ja
gs
outsl
jb
outsl
insb
fs
add
jbe
push
dec
inc
jb
ja
gs
outsl
jb
outsl
insb
fs
mov
push
dec
inc
gs
imul
push
jo
arpl
js
add
add
gs
insb
pop
dec
outsl
je
data16
arpl
push
add
je
imul
push
jo
arpl
add
inc
dec
dec
xor
cs
insb
add
add
jb
push
add
push
je
push
je
inc
add
push
inc
push
aaa
add
jb
push
je
dec
inc
add
push
je
push
inc
push
lgdtl
jb
push
add
push
je
push
je
dec
push
add
inc
add
jb
je
push
add
add
jb
insl
jo
dec
push
add
push
je
inc
insl
jo
dec
inc
add
add
jb
insl
jo
push
add
adc
push
je
inc
push
dec
dec
push
inc
push
dec
cs
insb
add
add
fists
add
add
add
xor
add
add
add
jo
add
mov
add
lock
addb
add
fists
add
add
add
add
add
dec
add
addb
add
fists
add
add
add
or
add
add
pop
push
add
add
xchg
inc
push
add
add
add
add
add
add
mov
add
fists
add
add
add
or
add
push
add
add
xchg
inc
push
add
add
add
add
inc
add
or
add
fists
add
add
add
or
add
add
add
add
add
xchg
inc
push
add
add
add
add
add
add
or
add
fists
add
add
add
or
add
add
add
add
or
dec
add
dec
add
inc
add
push
add
add
add
add
dec
add
pop
add
inc
add
dec
add
add
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
gs
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
sub
add
and
add
inc
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
pop
ja
ja
ja
ja
ja
ja
ja
jo
pushl
mulb
add
jo
mulb
add
outsl
jo
mulb
or
mov
jo
mulb
mov
add
add
outsl
jo
mulb
mov
add
add
jo
mulb
add
add
add
outsl
jo
mulb
add
add
add
jo
mulb
add
mov
jo
mulb
add
add
add
jo
mulb
add
add
add
outsl
jo
mulb
mov
add
add
jo
mulb
mov
add
add
outsl
jo
mulb
or
add
add
jo
mulb
pop
outsw
jo
mulb
jbe
outsl
jo
mulb
jo
add
add
add
add
jo
mulb
pusha
push
outsl
jo
mulb
add
out
add
push
add
pushaw
outsl
jo
mulb
add
loopne
loopne
loopne
data16
data16
loopne
add
loopne
data16
data16
loopne
out
out
add
data16
data16
loopne
loopne
add
data16
data16
add
loopne
loopne
pushaw
pshufw
data16
loopne
push
out
add
pushaw
outsl
jo
mulb
data16
jo
mulb
jo
add
add
add
data16
jo
pushl
ja
ja
ja
ja
ja
ja
ja
jo
add
add
add
and
add
add
call
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
hlt
add
add
add
add
xor
cmp
xor
xor
inc
add
add
dec
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
popa
add
outsb
add
add
outsl
add
imul
add
add
add
jb
outsl
add
jo
add
jl
sub
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
popa
add
outsb
add
add
add
add
insb
add
add
je
daa
add
and
xor
xor
sub
add
add
add
outsb
add
imul
and
push
add
jb
jbe
add
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
sub
aaa
add
xor
sub
xor
add
xor
or
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
add
outsb
add
pop
add
add
add
add
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
jne
outsb
add
pop
add
add
add
add
js
add
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
popa
add
outsb
add
add
add
outsb
add
add
add
xor
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
aaa
add
xor
sub
xor
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
.byte
add
add
mov
add
or
pop
xor
xor
xor
jge
xorl
xor
xor
xor
xor
xor
jp
xchg
fdivl
jecxz
push
xor
xor
xor
shlb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
divb
cld
xor
xor
xor
xor
pop
xor
xchg
xor
loopne
lock
dec
ss
ss
or
adc
sbb
aaa
push
aaa
jle
mov
mov
aaa
aad
xchg
xchg
cmp
cmp
cmp
cmp
cmp
mov
cmp
add
add
add
sub
add
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
and
sub
xor
cmp
inc
xor
dec
xor
pop
xor
fs
jo
je
js
jl
xorb
xor
cwtl
xor
movsb
xor
mov
mov
mov
xor
int3
xor
fdivs
in
call
xor
cld
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
js
jl
xorb
mov
mov
nop
ss
ss
ss
mov
lods
ss
mov
mov
les
enter
shlb
aam
fdivs
fdivl
loopne
in
call
ss
ss
ss
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aaa
inc
aaa
dec
aaa
dec
aaa
push
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
fs
push
aaa
je
js
jl
xorb
aaa
mov
mov
nop
aaa
xchg
aaa
cwtl
aaa
pushf
aaa
mov
aaa
lods
aaa
mov
mov
mov
aaa
les
enter
shlb
aam
fdivs
fdivl
loopne
in
call
aaa
hlt
aaa
clc
aaa
cld
aaa
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
addb
add
add
ss
ss
fdivl
loop
call
ss
add
push
aaa
or
adc
sbb
push
aaa
and
sub
xor
ss
cmp
inc
aaa
dec
aaa
dec
aaa
push
aaa
pop
aaa
pusha
aaa
data16
insb
aaa
jb
js
jle
test
mov
nop
aaa
xchg
aaa
pushf
aaa
mov
aaa
mov
mov
aaa
int3
aaa
shlb
fdivs
fidivs
in
ljmp
aaa
add
or
push
cmp
sbb
and
cmp
xor
cmp
cmp
cmp
push
cmp
cmp
outsb
cmp
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
push
cmp
and
sub
cmp
cmp
inc
cmp
dec
cmp
pop
cmp
cmp
jo
jbe
jl
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
sbb
push
cmp
sub
xor
cmp
inc
cmp
dec
cmp
cmp
data16
cmp
jle
test
mov
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
and
cmp
xor
cmp
cmp
cmp
push
cmp
cmp
outsb
cmp
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
and
sub
cmp
inc
cmp
push
cmp
cmp
jb
add
add
adc
